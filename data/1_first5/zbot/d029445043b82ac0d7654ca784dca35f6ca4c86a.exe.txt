add
add
jnp
inc
add
jbe
jmp
out
jo
call
in
fs
loop
jb
stc
jnp
ret
lret
scas
in
fs
loop
jb
stc
jnp
mov
out
jbe
movsb
out
ja
xchg
ret
arpl
out
inc
jnp
add
cmp
addr16
addr16
inc
imul
jbe
pop
ljmp
cmp
jbe
add
outsw
sub
inc
imul
stc
jnp
jnp
add
cmp
jbe
sbb
ja
push
ret
arpl
out
push
jnp
add
ja
inc
add
mov
mov
ret
mov
scas
mov
fisttpl
inc
add
popa
inc
xchg
out
gs
add
mov
in
jb
std
jnp
add
add
pusha
call
xor
out
insb
jnp
add
pop
je
dec
imull
dec
filds
add
call
add
push
je
sub
sub
daa
filds
add
call
add
and
in
outsb
inc
insl
arpl
add
je
in
outsb
inc
insl
arpl
add
cmpsb
loope
popa
stos
fldcw
add
addr16
in
je
in
outsb
push
mov
jbe
cwtl
testl
jo
fildll
pop
mov
add
jo
push
fbstp
xor
mov
add
jbe
dec
loop
gs
dec
gs
add
jnp
loopne
jnp
pop
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
push
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
ja
add
add
jmp
js
add
jg
add
push
mov
jmp
js
add
push
mov
jmp
mov
add
js
add
js
add
js
add
add
add
pop
xchg
jmp
js
add
js
sub
fwait
add
mov
add
push
mov
add
mov
add
incb
add
mov
add
mov
add
mov
add
add
bound
add
repnz
add
bound
add
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cltd
add
mov
add
rorb
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jb
xor
add
jnp
test
add
scas
add
std
incl
add
jnp
add
jnp
add
fistl
add
and
jnp
roll
bound
add
cmpsl
add
add
jnp
add
jnp
add
jnp
push
add
inc
jae
lahf
insl
pusha
add
add
icebp
add
sub
jnp
scas
add
jmp
jnp
jmp
jnp
jmp
jnp
stos
add
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
adc
add
loop
add
rorb
add
loop
add
loop
add
rorb
add
mov
mov
add
mov
add
mov
add
mov
add
add
bound
add
add
add
bound
add
push
mov
add
add
and
add
adc
add
and
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
movsl
add
movsl
add
movsl
add
movsb
add
movsb
add
movsb
add
mov
add
mov
add
mov
add
mov
add
sti
mov
js
fbld
js
sbb
mov
js
pop
mov
js
daa
mov
mov
js
js
mull
js
mov
js
insl
mov
jnp
das
mov
js
outsl
mov
js
inc
mov
js
or
js
jmp
jnp
adc
cltd
out
mov
sub
mov
gs
mov
pop
mov
filds
int
add
lds
add
and
mov
jns
mov
dec
push
mov
mov
mov
lret
or
mov
jmp
icebp
mov
jmp
xlat
mov
mov
mov
xchg
xlat
mov
fisttps
xlat
mov
inc
pop
mov
xor
mov
add
push
mov
negl
mov
pop
adc
mov
xor
adc
sub
add
xchg
sub
add
cld
sub
add
fsubrl
add
or
add
loop
add
into
das
add
sub
add
adc
add
test
add
push
xor
add
add
push
xor
add
xor
add
xor
add
add
insb
xor
add
add
add
add
mov
add
push
add
fsubrl
add
out
add
shrb
add
jnp
movsl
add
movsl
add
movsl
add
movsl
add
movsl
add
movsl
add
movsb
add
movsl
add
movsb
add
movsl
add
movsl
add
movsl
add
movsb
add
movsb
add
movsb
add
movsb
add
movsb
add
movsb
add
movsb
add
jnp
test
add
test
add
test
add
mov
add
mov
add
mov
movsb
js
xchg
movsb
js
jae
js
imul
mov
movsb
js
repz
js
mull
js
xchg
js
js
mov
mov
js
mov
js
aad
js
aad
js
leave
mov
scas
mov
testl
js
icebp
mov
adc
js
adc
mov
add
add
xchg
imul
add
xchg
aaa
add
xchg
cmc
testb
add
push
mov
out
incb
add
or
add
mov
inc
or
add
jmp
add
jmp
add
or
add
or
add
add
add
cld
xchg
xor
xchg
push
in
xchg
inc
add
add
fcoms
add
call
adc
add
out
add
cmpsb
sti
add
mov
add
mov
add
pop
xor
add
popl
add
sbb
add
add
sbb
add
popl
add
add
loopne
add
rorb
add
out
add
stos
sbb
add
or
add
mov
add
movsb
mov
xorb
add
add
lods
sbb
sbb
add
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
add
jnp
mov
jnp
add
jnp
cwtl
add
jnp
cwtl
add
cwtl
add
cltd
add
cltd
add
cwtl
add
cwtl
add
cltd
add
adc
fwait
js
cmp
js
push
lcall
and
js
xlat
popf
js
aad
js
in
popf
js
cmc
popf
js
setle
sti
popf
js
negl
js
inc
sahf
js
add
pop
sahf
js
addr16
js
pop
sahf
js
pop
sahf
js
cmp
js
cmp
js
pop
sahf
js
loope
js
jecxz
js
arpl
repz
mov
mov
in
mov
mov
or
add
add
add
or
add
add
add
out
mov
jecxz
mov
rcr
mov
mov
movsl
or
mov
out
fimull
add
fimull
add
add
mov
pop
sbb
stos
lock
cmp
mov
mov
mov
jnp
mov
outsl
adc
add
add
add
add
add
add
add
mov
add
mov
add
add
add
jb
add
mov
add
mov
sub
add
sub
add
add
or
add
cli
add
add
add
add
add
rolb
add
add
add
add
sub
add
sub
add
sub
add
add
sub
add
mov
add
jnp
mov
add
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
mov
jnp
lods
add
lods
add
stos
add
lods
add
lods
add
lods
add
lods
add
lods
add
lods
add
lods
add
lods
add
lods
add
add
add
push
add
inc
add
sti
in
add
fadds
jnp
out
jnp
incl
jnp
in
jnp
fiaddl
jnp
out
jnp
out
js
jmp
mov
mov
mov
mov
js
fiadds
jnp
push
mov
mov
add
push
mov
mov
add
push
add
or
add
jmp
add
xor
cmp
or
add
clc
add
out
add
ljmp
mov
scas
js
std
scas
js
add
mov
pop
adc
add
in
add
aam
add
int3
mov
sbb
mov
pop
fmull
add
int3
mov
sbb
pop
mov
jmp
sub
add
mov
or
add
out
add
out
xchg
mov
xchg
jmp
sti
adc
mov
push
dec
dec
push
push
ds
pop
stos
cmpsl
imul
adc
mov
xchg
ret
sbb
mov
fstpl
lcall
xchg
lock
inc
mov
mov
and
jo
pop
inc
clc
gs
jae
xor
sub
adc
pop
cmp
scas
xor
sub
rclb
loopne
std
mov
nop
loopne
cmc
arpl
rcll
stos
add
cmp
dec
loopne
cwtl
sahf
dec
lods
dec
jne
xor
xchg
idivl
ja
in
xor
fidivrl
adc
leave
sub
insb
add
xor
jge
fmuls
push
fdivrs
mov
cli
fwait
cmpsl
mov
les
loop
cld
xchg
mov
pop
fucomp
dec
call
or
int3
mov
mov
mov
sbb
inc
pop
movsl
outsl
jno
mov
nop
add
test
lahf
adc
test
jae
add
jmp
popf
scas
jno
scas
les
push
lret
popf
jnp
sub
add
in
jo
jnp
ss
jmp
pop
scas
jb
dec
add
lods
jnp
gs
jmp
cmp
popf
imul
jae
jnp
jmp
popf
scas
ljmp
jnp
ss
jmp
popf
scas
or
lea
cmp
jmp
add
pop
stos
xlat
iret
iret
in
dec
jnp
pusha
jnp
sub
add
lods
adc
mov
adc
gs
cmp
push
ss
cs
in
sti
fdivl
clc
fs
dec
sbbl
cmpsb
mov
jb
xchg
sahf
adc
sbb
mov
scas
repnz
cs
stc
lds
cmp
adc
jns
push
sub
cmp
dec
jae
adc
je
fwait
sahf
dec
addb
ret
add
popa
mov
add
mov
dec
mov
and
rcrb
xchg
inc
enter
dec
lea
stos
loop
sub
sub
dec
and
adc
mov
jp
mov
rclb
out
mov
rcr
call
addr16
add
sub
lods
insl
inc
popf
rclb
lods
inc
add
sbb
outsl
test
add
add
pop
icebp
mov
jnp
adc
aaa
ljmp
imul
adc
mov
mov
sbb
hlt
mov
push
adc
cmp
sbb
inc
mov
mov
add
mov
push
inc
jp
mov
push
jl
add
jp,pn
push
pop
xor
mov
fwait
mov
add
jnp
cld
inc
jnp
add
insb
add
add
mov
add
sti
add
jmp
mov
mov
add
pop
mov
add
mov
add
mov
add
mov
and
imul
and
pop
mov
jnp
sbb
cmp
jmp
and
jns
jmp
and
jnp
jmp
jnp
mov
jnp
jmp
stos
mov
or
xlat
or
enter
jae
add
sbb
jmp
ja
add
jne
add
sub
jmp
ja
add
jo
add
orb
jmp
ja
add
jne
add
xorb
jmp
jne
add
adc
jmp
ja
add
jne
add
and
jmp
ja
add
add
add
addb
jmp
ja
add
jne
add
cmpb
add
and
and
jbe
and
lret
lea
add
andb
andb
adc
push
add
jg
add
jg
add
xchg
add
mov
add
jg
add
jg
add
xchg
add
mov
jg
add
mov
add
xchg
add
mov
bound
cli
add
add
jnp
or
or
jnp
or
jnp
or
or
jnp
or
jnp
push
or
or
or
jnp
or
or
inc
jnp
or
jnp
push
pop
jnp
or
or
jnp
or
or
or
jnp
or
jnp
push
adc
or
or
jnp
or
or
mov
jmp
addr16
add
mov
or
mov
add
mov
or
insl
mov
or
mov
add
mov
or
mov
or
mov
or
jmp
cmc
mov
or
mov
add
mov
or
mov
or
mov
add
mov
or
mov
or
mov
or
mov
or
addl
jmp
add
add
cmpb
aam
or
fstpt
add
sbb
jmp
outsl
dec
add
jns
add
sub
jmp
outsl
sub
add
orb
jmp
outsl
insl
add
jns
add
xorb
jmp
jns
add
adc
jmp
outsl
cmp
jp
jmp
xchg
test
add
test
add
mov
push
test
push
jg
add
push
add
push
add
pop
add
test
add
sub
and
add
jg
add
lea
add
test
adc
add
addl
loop
xchg
rolb
call
add
loop
pop
add
sbbl
sarb
add
mov
mov
cmpl
xchg
jle
add
add
jnp
or
bound
sub
jnp
or
jnp
or
fs
cli
jnp
add
jnp
or
or
jnp
or
jnp
add
jnp
or
or
jnp
or
jnp
add
jnp
or
jnp
or
jnp
or
jnp
or
jnp
or
jnp
add
jnp
or
or
jnp
or
jnp
or
mov
or
jmp
lods
mov
add
jmp
adc
jmp
sub
mov
or
mov
or
mov
add
jmp
lods
mov
or
mov
add
jmp
lods
mov
or
or
cli
add
or
jmp
and
mov
or
mov
or
jmp
in
sti
add
mov
or
or
ljmp
jo
add
subl
add
jo
add
add
jl
jmp
jo
add
orl
jmp
jo
add
sbb
fstpt
add
jo
add
jo
add
xchg
stc
or
jmp
jmp
xchg
add
orb
jmp
xchg
stc
int
add
jo
add
rolb
xchg
add
rorl
add
cmpb
mov
dec
adc
xchg
subb
subb
bound
add
or
push
orb
bound
add
add
push
adcb
adcb
dec
and
push
dec
sub
adc
add
jg
add
dec
push
add
andb
andb
loop
stos
add
jg
add
sarb
add
jg
add
jle
add
cld
pop
jnp
or
or
bound
cltd
jnp
cld
push
jnp
or
or
bound
fnstcw
cld
push
jnp
or
or
xor
mov
jnp
or
xor
stc
jnp
cld
add
or
xor
adc
or
jnp
or
jnp
or
jnp
or
jnp
decb
jnp
or
xor
and
or
jnp
or
cmp
sti
cld
jge
jmp
and
jmp
push
mov
cld
cmp
jmp
push
mov
or
mov
or
mov
or
mov
or
jmp
icebp
mov
or
rorl
cld
jg
jmp
movsl
mov
or
mov
cld
imul
jmp
ds
cld
jne
jmp
xchg
mov
or
mov
jmp
jo
add
adc
jmp
xchg
add
jo
add
subb
frstor
leave
add
orb
add
xchg
jmp
addl
add
jo
add
sbb
jmp
inc
dec
std
jmp
sbbb
stos
add
jo
add
adc
cmovle
stc
jno
add
add
add
inc
mov
add
inc
addb
inc
inc
add
inc
loopne
add
xchg
add
rolb
mov
inc
nop
add
xchg
cmp
xchg
inc
jp
mov
inc
rolb
adcl
add
sub
bound
add
or
push
inc
mov
bound
bound
add
push
add
push
add
inc
push
add
add
inc
xchg
sub
adc
and
and
add
or
fs
stc
and
xor
stos
jnp
stc
add
xor
test
stc
inc
jnp
ljmp
stc
pop
jnp
stc
sbb
xor
lcall
stc
jl
xor
cmp
xor
fidivrl
or
jnp
stc
insb
jnp
stc
sub
xor
mov
jnp
stc
mov
stc
dec
jnp
cli
jnp
or
jnp
stc
push
add
stc
adc
stc
ret
or
jnp
stc
jb
mov
sti
dec
mov
cli
cmp
mov
sti
pop
mov
sti
cltd
mov
cli
sbb
mov
sti
stc
mov
sti
cmp
sti
or
sti
push
mov
sti
xchg
mov
cli
or
mov
sti
adc
jmp
lods
mov
or
jmp
loope
jmp
add
mov
sti
jno
jmp
add
jmp
dec
mov
or
jmp
int
jmp
test
add
jae
add
adc
add
add
clc
jae
add
lock
add
lock
add
loope
add
loopne
add
rorb
jmp
shll
jae
add
mov
add
mov
add
add
stos
add
nop
les
jmp
andl
jo
add
jo
add
popa
push
add
pusha
xchg
add
push
push
add
push
add
inc
inc
add
jne
add
jge
add
push
mov
add
mov
adc
pop
add
mov
add
xchg
inc
add
xchg
add
xchg
add
ljmp
add
xchg
add
add
xchg
or
test
add
int3
xchg
addl
xchg
add
ret
add
xchg
sbb
cltd
xchg
add
ret
xchg
add
push
xchg
arpl
xchg
push
add
add
dec
xchg
xor
inc
xchg
add
inc
xchg
verw
xchg
add
xchg
ret
add
xchg
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
adc
mov
in
ss
mov
insl
jl
aad
dec
stos
arpl
add
jne
mov
and
fwait
test
inc
mov
daa
dec
mov
xor
mov
or
mov
xchg
mov
in
push
mov
add
mov
out
mov
cwtl
dec
cmp
dec
setge
sahf
sub
cltd
inc
mov
jp
ret
scas
dec
je
adc
hlt
push
iret
iret
inc
pop
pop
cmp
in
mov
mov
xchg
xchg
sub
jmp
sub
iret
out
inc
pusha
add
enter
pop
mov
dec
notb
add
faddl
imul
mull
lret
push
jo
add
mov
icebp
mov
mov
lds
xchg
mov
mov
sub
and
ret
or
test
je
dec
add
pop
lcall
sti
jb
add
clc
add
popf
add
dec
loope
jp
mov
or
shll
xchg
jecxz
test
or
cmpsl
xchg
call
cmpsb
jge
imul
outsb
sbb
pushf
addr16
mov
outsl
mov
add
arpl
and
or
add
adc
mov
cld
cmp
mov
rcl
mov
adc
lcall
cmp
xchg
mov
dec
add
dec
shll
pop
imul
imul
lods
fisubl
xor
xor
xor
and
or
lret
sbb
add
es
dec
xchg
push
pop
sub
loop
xor
stos
mov
ror
jne
xlat
cmp
or
movsl
popf
sub
mov
mov
mov
js
mov
dec
sub
rcl
push
rclb
aas
and
ja
repz
fs
bound
negl
jle
das
push
mov
mov
sbbb
lcall
shrb
addl
aad
popf
sub
xor
xor
or
add
or
sub
pop
cmp
ret
fnstenv
xchg
mov
sub
jne
in
scas
mov
sbb
movsb
into
lcall
in
add
jle
adc
shll
das
in
sub
jg
mov
xor
stos
fnsave
lods
xor
repnz
jne
lods
leave
jecxz
movsb
mov
negl
push
jl
into
ljmp
and
outsb
add
rcll
ljmp
in
cli
pop
mov
push
rcrb
pop
mov
bound
add
jns
cmpsb
cltd
pop
add
mov
jecxz
mov
push
jp
sahf
fimuls
xchg
imul
xchg
scas
iret
mov
jnp
cs
stc
ret
rclb
or
repnz
jle
rolb
mov
fildll
or
pop
xchg
mov
testb
mov
insb
outsb
or
add
add
idivb
add
adc
adc
imul
sub
mov
outsb
or
dec
adc
add
jae
cmpsl
or
addr16
outsb
pop
js
shl
push
sub
mov
stc
fidivrs
ret
inc
add
mov
mov
sarl
inc
inc
jo
add
das
icebp
sar
ds
sub
iret
int
fstps
dec
enterw
aaa
xor
cmpsb
sbb
popf
test
das
adc
mov
add
jae
sbb
arpl
mov
das
sub
daa
cmpsl
shlb
insl
sahf
inc
aad
insl
cmp
repz
push
xor
xchg
inc
mov
divl
cs
gs
sbb
add
lcall
fistps
push
dec
mov
inc
dec
lods
mov
fucom
cmpb
cwtl
jne
clc
nop
mov
pushf
jnp
adc
push
sti
push
mov
insb
xor
push
pop
cmp
inc
dec
mov
jmp
enter
add
test
movsb
dec
cs
dec
add
ds
push
fcoms
fcomps
push
roll
int3
cmpsb
insl
add
cmp
and
jo
adc
test
fnstsw
xlat
les
popf
cmpsb
negb
dec
gs
pushf
test
xchg
xchg
add
sbb
jo
jecxz
mov
std
cmp
lahf
add
dec
inc
or
out
jnp
xchg
shll
push
mov
push
add
lea
push
and
clc
mov
and
cmpsl
adc
into
pop
sub
clc
outsb
cwtl
jnp
ja
jno
mov
fs
xchg
xchg
repnz
aad
xor
into
movl
mov
out
jb
push
jnp
insb
or
lods
mov
or
jnp
push
cld
xor
and
push
pop
out
xchg
lret
and
dec
inc
lds
jp
mov
cmpsl
push
loope
and
or
aas
iret
dec
test
fdivl
ja
std
sbb
inc
inc
fcompl
push
dec
mov
add
cmp
js
aas
pushf
rorl
negb
or
out
adc
adcb
xchg
dec
leave
adc
mov
nop
mov
adc
std
add
out
lret
mov
stc
add
or
adc
adc
sbb
das
pushf
clc
jae
insb
jecxz
mov
into
in
xor
pushf
xlat
in
das
scas
shlb
adc
mov
cmp
out
and
imul
fisubl
add
xchg
loopne
mov
mov
adc
cmpsl
roll
inc
insl
xchg
subl
add
hlt
xchg
hlt
stc
jmp
pop
push
in
sbb
nop
pushl
daa
jge
dec
in
mov
push
hlt
rolb
sti
mov
fnstcw
ljmp
dec
aaa
mov
cli
mov
xchg
pop
fs
jb
jge
and
push
lret
popf
cmp
es
incl
rdmsr
pop
fists
sub
sbb
repz
aam
cmc
and
gs
in
sbb
stc
lcall
or
sub
add
sub
jno
xor
push
jmp
imul
mov
clc
lret
aad
loop
push
mov
aad
push
mov
sbb
mov
add
mov
xor
lcall
push
mov
jp
jecxz
pusha
dec
push
dec
cmp
add
adc
stos
jns
push
in
cmp
mov
push
jns
push
push
loope
sbb
cli
stos
xlat
in
jo
sbb
lea
mov
mov
jne
mov
and
int3
xchg
dec
daa
xor
hlt
adc
add
and
dec
sub
push
aas
cmpsl
in
iret
dec
mov
add
dec
jmp
cs
imul
cmp
cmpsl
mov
outsb
cmp
jb
insb
mov
xor
and
xor
xchg
ss
sarb
sub
dec
mov
sti
xor
lcall
ljmp
xchg
sbb
add
hlt
sub
xchg
jle
xor
mov
aas
push
adc
inc
push
push
sbbl
jg
mov
inc
test
lock
bound
xchg
add
insl
in
sbb
pop
stos
sbb
jno
sbb
xor
movsb
sbb
lret
loope
adc
sti
adc
mov
outsl
pop
or
xor
push
add
mov
leave
cmp
add
or
jo
xchg
in
cmp
cmp
lea
and
xor
cmp
xor
call
out
xor
mov
pushf
xor
mov
ljmp
daa
pop
aam
es
shlb
fldenv
popf
and
in
pop
sti
and
sub
outsb
sub
cmp
xchg
jae
adc
sub
inc
imull
dec
lods
xor
jo
out
jno
aam
jae
cmp
jb
sub
jbe
adc
push
adc
jne
sub
jg
test
jge
imul
idivb
jns
mov
add
popa
add
mov
out
mov
cmpsb
cwtl
mov
cli
xchg
push
xchg
mov
push
stc
repnz
cmp
scas
cltd
icebp
adc
add
pop
adc
jmp
push
inc
jnp
pop
sbb
and
das
loopne
or
xor
adc
inc
jnp
xchg
xor
and
sub
push
sbb
mov
pop
add
fistpl
xor
mov
inc
mov
loope
mov
lret
test
add
lock
fwait
sub
les
cmpsb
fsub
shr
fdivs
and
pusha
outsb
push
fisttpll
adc
fsts
std
sbb
sbb
fwait
aam
test
pop
rcrl
xchg
ror
call
inc
pop
sarl
jmp
pop
shrb
xchg
je
lods
sub
lret
xchg
pusha
sub
ja
sub
fstl
and
ret
dec
push
and
jecxz
push
add
adc
in
or
lods
out
dec
push
pop
ljmp
loop
mov
jmp
dec
pop
push
push
push
cld
cmpb
aad
xchg
clc
add
stc
stos
int3
or
cli
mov
iret
mov
jle
dec
lock
repz
fmuls
repz
test
mov
inc
not
cld
add
pushf
add
fistl
stos
hlt
add
fdiv
fildll
gs
mov
fdivrl
ss
add
subl
imul
aad
into
pusha
shlb
mov
rcll
nop
shlb
hlt
pop
lds
jge
sahf
in
fcmovnb
fcmovne
sbb
data16
pop
xor
rorl
dec
lret
push
out
mov
pushf
jo
enter
leave
mov
mov
push
ret
mov
into
xchg
sbb
nop
je
sub
divb
cmpsl
xchg
sub
scas
and
out
loopne
or
mov
add
les
cli
jle
mov
xor
jbe
call
shl
loope
in
mov
es
dec
call
or
in
xchg
xchg
addb
mov
add
out
repz
or
jl
push
sti
xchg
cli
outsb
lret
rcrl
push
pop
cld
dec
xor
cmc
add
loop
aad
and
in
data16
sti
and
adc
clc
addr16
lds
push
lret
stos
test
cld
push
out
out
mull
jmp
inc
xchg
ljmp
std
call
inc
sbb
mov
repz
inc
stc
fbstp
mov
mov
mov
lock
xchg
loope
out
fwait
dec
xchg
in
lods
dec
repz
sahf
mov
out
mov
and
mov
add
inc
pop
out
repnz
subl
fcmovne
dec
xor
push
adcb
ffreep
jae
xchg
jg
pop
jmp
aad
int
dec
cmp
mov
sbb
pop
lds
fisttpll
idivl
xor
cmp
gs
jo
ja
push
pop
iret
jns
clc
xchg
aam
jl
repnz
out
cmp
enter
daa
pop
sbb
negb
mov
jle
or
jl
xor
daa
mov
or
nop
test
sahf
mov
pop
test
test
cmpsb
out
aaa
fisttpll
xor
jg
ljmp
inc
out
inc
cmp
sub
push
add
pop
std
pushf
loop
jo
jg
xchg
test
or
insl
sub
popf
xor
xchg
xchg
jnp
mov
jnp
xchg
imul
jecxz
pop
adc
insb
mull
push
scas
mov
cmp
add
adc
jle
scas
and
jge
xor
pop
jl
test
mov
ret
cmpl
dec
dec
ja
adc
sub
lcall
outsl
mov
mov
pop
add
or
mov
sub
mov
mov
je
or
bound
add
cld
out
push
fs
xchg
add
mov
and
or
mov
push
xchg
rorl
sub
xchg
rorl
add
mov
jecxz
push
sbb
lods
fs
mov
lret
clc
cmp
sbb
mov
sti
scas
das
dec
push
sbb
stos
mov
fld
mov
jecxz
js
add
aam
lods
addl
dec
loopne
mov
sub
sub
add
ret
into
sub
inc
xchg
xchg
std
adc
xor
fmuls
cli
adc
sub
pop
mov
xorb
push
movsl
inc
lcall
mov
add
lret
mov
push
ds
mov
push
imul
xchg
mov
in
and
sub
cmc
js
lods
dec
rclb
inc
push
mov
sub
add
in
xchg
imul
cmp
mov
or
ret
mov
lret
roll
push
or
fmull
xor
shll
pop
cld
addr16
add
icebp
and
sbb
inc
adc
mov
call
adc
jnp
nopl
cmpsb
sub
ret
inc
add
push
arpl
dec
mov
mov
sub
cwtl
sbb
or
lods
mov
push
adc
mov
icebp
add
dec
inc
clc
pop
arpl
das
cmpb
xchg
cmp
outsl
es
pusha
cld
lret
mov
inc
jo
add
jb
sbb
dec
fwait
xchg
sti
testl
push
call
pop
ficomps
loope
mov
cmp
jp
test
clc
loopne
xchg
fldt
fdivrs
add
rclb
daa
sbb
push
stc
mov
and
add
pop
movsl
add
cmp
js
or
dec
adc
retw
fisubrl
push
sbb
and
pushf
sbb
in
push
gs
mov
int
imul
outsl
loopne
adc
mov
push
popf
or
add
add
mov
je
loop
xchg
mov
mov
mov
cmp
das
mov
sub
stos
push
push
es
arpl
xchg
jbe
pop
loop
fdivs
fsubr
js
add
je
xchg
xchg
stos
cs
mov
sbb
popa
pop
lea
xchg
clc
mov
add
movsl
mov
xor
mov
add
iret
sub
lahf
mov
jns
adcb
dec
lahf
and
push
scas
jae
xchg
mov
fidivrs
jge
cmp
jmp
cmp
mov
test
jp
jae
in
lea
xor
arpl
push
cmc
jns
and
dec
xchg
pop
mull
in
imul
add
inc
xor
xchg
mov
mov
daa
cltd
stos
cli
nop
popf
lcall
fwait
sti
inc
pusha
dec
outsb
jecxz
dec
pop
jne
pop
aam
cmp
sarl
iret
add
add
xlat
push
sti
mov
popa
insl
push
jne
fnstenv
cwtl
imul
je
add
xorl
or
call
hlt
lret
push
dec
add
stc
es
or
lret
mov
rcll
push
xorl
sub
xchg
cltd
outsb
in
or
test
pop
leave
sbb
add
pop
clc
cmpsl
std
adc
xchg
arpl
repnz
jbe
jp
lahf
clc
inc
and
mov
sbb
pop
fistps
lcall
and
xchg
add
push
movsl
imul
cld
mov
dec
fnstenv
pusha
insl
adc
out
imul
inc
test
shlb
das
sbb
shlb
cmpsb
ss
ret
add
push
mov
xchg
xchg
outsl
dec
sub
fmulp
push
cmp
aaa
scas
mov
sbb
xor
add
inc
xchg
lahf
jecxz
lods
cmp
jno
jl
out
sub
and
push
jge
test
or
adc
add
es
xchg
push
mov
cltd
aaa
or
sahf
daa
popf
cmpsl
mov
or
push
lcall
repnz
inc
pop
adc
sahf
and
scas
aam
or
arpl
fdivl
xor
stos
cmp
lods
in
cmp
jbe
add
icebp
or
scas
jle
test
push
test
and
or
mov
bound
nop
inc
popf
and
push
pop
push
gs
jmp
xor
fs
out
dec
sbb
xor
js
std
push
dec
int3
in
stc
lods
fwait
mov
aad
cmp
xchg
jle
push
rol
push
lock
ret
mov
icebp
mov
xor
je
mov
hlt
sub
int
sbb
jae
jp
lds
out
cmp
and
movb
mov
pop
mov
sbb
fildl
sbb
inc
pop
cli
jbe
test
pop
push
and
sti
and
adc
mov
pcmpeqd
repnz
fdiv
ror
push
leave
sahf
lock
enter
sbb
repnz
pop
sbb
out
adc
jno
xchg
jle
stc
cmpsb
pop
sbb
faddl
out
les
push
shll
jb
in
fidivs
arpl
add
mov
adc
cmp
insl
aam
cmp
iret
sbb
ret
movb
and
int
lods
push
lea
push
rolb
xchg
jae
xor
lea
adcb
jo
je
adc
mov
sbb
mov
lcall
daa
jnp
push
lock
mov
mov
xchg
dec
iret
xchg
mov
cmp
fs
xor
nop
mov
std
scas
stos
dec
jge
stos
sbb
test
dec
mov
mov
mov
sub
test
lret
mov
and
pusha
addb
gs
popf
mov
xor
movsb
or
sbb
jp
popl
mov
nop
xor
sub
push
ret
add
push
inc
movsb
lds
or
or
dec
mov
mov
ljmp
pop
sarl
das
mov
dec
adc
inc
and
lret
shll
add
int3
rcl
lds
mov
xlat
or
lcall
xor
fstpt
sub
lcall
jae
sbb
fadds
mov
mov
and
test
adc
pop
stos
pop
ja
repz
loope
cld
mov
pop
in
adcl
inc
scas
and
lahf
push
xchg
sbb
xchg
and
std
mov
sbb
adc
decb
dec
push
add
or
pop
leave
into
ss
mov
gs
lods
fdiv
in
icebp
roll
stos
or
cmp
lea
inc
pop
fiadds
jb
jae
pop
mov
sbb
xor
sub
popa
push
mov
and
adc
push
add
dec
loopne
or
ret
arpl
xchg
push
adc
fdivs
dec
mov
andb
add
inc
subl
jle
jbe
inc
pop
lea
mov
pop
mov
sar
and
add
outsl
setge
mov
out
mov
test
or
lret
cltd
dec
fisubl
push
lods
andb
das
push
callw
mov
fcmovbe
inc
and
add
lods
xor
inc
or
insl
xor
jle
push
pop
shrl
dec
bound
hlt
negl
mov
outsl
je
in
popa
aaa
mov
xlat
out
mov
xchg
cmp
lcall
inc
ljmp
xchg
dec
mov
cli
clc
sahf
add
js
movsb
cmp
jns
lcall
mov
leave
push
popf
leave
mov
rep
push
ja
cmp
outsb
dec
or
rcrl
inc
call
addr16
or
subb
out
out
mov
test
iret
mov
sub
pop
shll
cwtl
or
sbb
xor
pop
jnp
cld
sub
inc
add
lret
jns
add
test
sub
pop
push
lret
lds
dec
les
cmpsb
decb
mov
rol
rcr
loopne
in
out
mov
rcll
sbb
add
popf
xchg
ss
adc
scas
push
cwtl
ja
gs
and
push
mov
xlat
jae
xchg
pushf
mov
scas
ret
push
rcrb
mov
scas
std
jo
imul
adcl
push
inc
mov
in
ds
in
and
fidivrs
sub
clc
pop
dec
aas
leave
popf
mov
lods
les
iret
cs
lret
mov
mov
push
mov
inc
addr16
mov
int
fcmovnbe
mov
ret
adc
int3
push
add
fnsave
rorb
lahf
and
aas
jne
in
mov
jp
in
sahf
and
fisttpll
mov
sbb
sahf
test
fidivl
ficoms
xchg
mov
adc
xor
xchg
out
xor
daa
gs
es
dec
scas
inc
cli
imul
jmp
jecxz
pop
ljmp
mov
sub
xchg
out
fcmovnb
cmpsl
dec
scas
jo
sub
popa
and
push
out
mov
xor
and
add
mov
mov
test
cmpl
add
and
clc
and
inc
cmp
jmp
jp
bound
xchg
jne
hlt
jl
or
movsl
mov
xchg
sbb
jb
xchg
add
or
outsb
pusha
leave
mov
fcoml
jmp
cld
jge
push
ret
dec
push
push
mov
pop
lcall
sub
nop
push
jnp
jg
subl
movsl
leave
cmp
arpl
inc
and
add
mov
lock
fistpll
ss
mov
xchg
cwtl
mov
push
es
adc
fstpl
sbb
mov
sbb
in
mov
fwait
mov
xchg
std
sbb
inc
out
lahf
xor
cmp
sarb
pop
mov
iret
mov
test
mov
xor
add
ficomps
mov
and
movaps
sti
add
lods
stos
adc
and
mov
lret
movsl
repnz
lret
ja
sbb
arpl
pop
aad
ret
leave
ret
fnsave
push
adc
sqrtps
hlt
sti
aam
fistpll
jp
dec
cmp
sbb
shl
cmp
test
sbb
outsl
adc
cmc
add
push
mov
movb
in
rolb
jge
adc
aaa
scas
and
clc
xchg
cmpsb
loope
jno
shll
sarb
inc
call
pushf
popa
mov
xchg
movl
xchg
inc
or
outsl
pop
pop
subl
nop
or
mov
dec
push
dec
sbb
inc
pop
into
loopne
xchg
lea
xor
inc
and
push
adc
movsb
jo
and
xchg
jnp
and
and
cmpsl
add
repnz
pop
dec
negb
es
xor
pop
jae
mov
mov
add
jnp
ds
aam
and
rorl
push
loop
mov
aad
sbb
cmp
fldcw
push
fisttps
push
xchg
mov
mov
loopne
xor
push
clc
add
pop
push
mov
sbb
inc
mov
cmpsl
fldlg2
ss
std
hlt
fisubrl
lcall
mov
pop
or
jae
pushf
and
sahf
int
and
lcall
mov
lret
icebp
lret
mov
jmp
mov
mov
jo
add
imul
cmpsl
imul
scas
inc
adc
jmp
sub
jl
pop
adc
mov
or
aaa
iret
sub
sub
dec
ljmp
in
pop
aaa
cli
cltd
mov
xlat
loop
mov
adc
mov
lcall
sub
add
aad
out
or
filds
cmp
bound
daa
js
sub
lea
pushf
les
xor
adc
mov
call
das
inc
in
xor
and
or
jl
scas
sbbl
jo
add
or
xchg
add
push
lret
sub
adc
fimull
jbe
mov
jl
and
jne
or
data16
inc
cli
pop
xchg
fmulp
push
inc
jp
dec
xchg
mov
subb
jb
rolb
out
jg
add
insl
aas
lods
add
pop
mov
imul
in
jb
adc
pusha
mov
cmpsl
mov
jge
imul
or
push
fs
in
outsb
xchg
je
addr16
add
jmp
mov
into
stc
stos
insb
stc
lods
loopne
jl
push
adc
fs
adc
les
mov
call
jbe
mov
sub
add
inc
repz
jb
stos
lock
popf
ja
jno
or
fs
movsl
mov
add
inc
test
bound
add
cmp
pop
push
push
hlt
push
imul
mov
adc
cmpl
pop
mov
cmc
add
jnp
push
fimuls
lock
scas
andb
movsb
loope
lock
daa
pop
pop
js
cmp
aaa
dec
sub
or
xchg
pop
loopne
and
xchg
scas
mov
fsubs
push
mov
dec
cmp
adc
push
or
bound
loope
icebp
sahf
xchg
gs
dec
push
sbb
ret
adc
cmp
push
sub
cmc
pop
mov
mov
jno
iret
cmc
mov
lds
dec
fwait
mov
mov
leave
jecxz
xor
fcom
inc
jns
jnp
shll
xchg
je
test
movsb
xchg
outsb
cmp
int
or
push
jle
fistpl
test
push
mov
mov
stos
cmpsb
and
cmp
in
mov
add
nop
loope
mov
jbe
pop
movsb
dec
pop
add
jae
ds
adc
jle
mov
pop
outsb
loope
mov
push
or
mov
jmp
stos
jle
add
sbb
bound
or
enter
sbb
jle
addr16
xor
out
insb
xchg
xchg
jnp
xchg
mov
xchg
inc
pop
sbb
cmp
xchg
outsb
or
shlb
mov
imul
dec
jae
enter
adc
sub
xchg
and
sbb
pop
pop
jl
add
rcrb
movsb
gs
sub
pop
in
mov
mov
pop
mov
jg
inc
jp
icebp
lods
sbb
add
jns
retw
in
cmp
scas
push
bound
add
fistpll
fucomp
pop
in
mov
jle
adc
add
sbb
mov
dec
push
xorb
push
in
add
fcompl
xchg
in
pop
or
xor
scas
jnp
xor
cwtl
push
pusha
jge
sub
xlat
out
test
xchg
mov
es
xchg
lahf
pop
pop
or
js
insl
mov
mov
loopne
mov
lahf
stos
sarl
ss
sbb
xchg
int
xlat
lret
jb
xlat
call
stc
fsubl
ss
ljmp
xor
orb
add
mov
sbbl
movsl
pop
cmovno
pop
lock
movsb
test
in
cli
jo
push
jae
testb
xchg
mov
sub
int
sbb
adc
cmpsl
sub
inc
test
jno
push
in
stc
xor
mov
sub
test
negb
push
push
mov
mov
mov
icebp
mov
mov
in
mov
dec
fldl
add
jecxz
pop
gs
out
xor
push
add
or
jne
iret
loop
rcrl
inc
imul
adc
mov
aam
ds
pop
into
nop
pop
inc
aam
ret
push
cmc
add
mov
dec
ljmp
movsl
cmp
cmp
sbbb
ljmp
xchg
pusha
dec
dec
jb
and
adc
aaa
fiaddl
push
add
cltd
cmp
fdivr
pop
mov
adc
sub
sub
cs
ret
xchg
mov
jae
jbe
mov
adc
and
xchg
mov
add
aad
inc
and
int3
stos
mov
xchg
inc
cmp
mov
mov
insl
mov
adc
pop
in
addr16
inc
inc
imul
pushf
or
dec
leave
mov
cmp
gs
xorb
in
movsb
data16
je
push
adc
stos
jno
lea
mov
lret
bound
push
push
add
stc
push
test
mov
xor
test
xchg
fnstsw
add
icebp
push
dec
popa
pop
xor
push
push
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
add
jmp
add
call
add
call
add
out
add
out
jnp
out
add
out
jnp
out
add
out
jnp
out
add
out
jnp
jmp
jnp
sti
repnz
mov
push
jo
testl
test
jmp
jnp
jmp
jnp
jmp
jnp
ljmp
mov
add
jmp
ljmp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
adc
add
and
add
adc
add
loop
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
testb
jbe
or
testb
add
xchg
add
or
xchg
add
xchg
add
or
mov
mov
or
push
or
jnp
add
jnp
push
or
push
or
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
add
jnp
push
or
push
or
add
jnp
push
or
add
jnp
push
or
jnp
add
jnp
push
or
add
jnp
in
add
mov
add
int
orl
add
mov
add
mov
add
std
add
mov
add
cmc
add
mov
add
aad
orl
test
jae
std
add
add
add
mov
add
mov
add
mov
aaa
jg
add
js
add
xchg
add
jg
add
js
add
xchg
add
jg
add
js
add
xchg
add
ja
add
js
add
xchg
add
cmp
add
js
add
xchg
add
ja
add
js
add
xchg
add
ja
add
jg
add
jg
add
jnp
or
sti
mov
add
mov
add
mov
add
xchg
add
mov
add
or
mov
or
ja
or
add
mov
add
mov
add
or
daa
mov
add
mov
add
or
pop
mov
add
mov
add
mov
add
mov
add
or
scas
mov
add
mov
add
mov
add
or
jg
or
out
xchg
add
push
or
push
or
push
or
push
or
push
or
push
or
jnp
add
jnp
push
or
push
or
pop
or
push
or
pop
or
push
or
pop
or
push
or
pop
or
push
or
pop
or
add
jnp
push
or
push
or
pop
or
add
jnp
add
or
pop
or
add
jnp
push
or
push
or
pop
or
adc
orb
add
addb
push
add
mov
jb
rolb
mov
add
mov
add
mov
add
jb
jo
orb
add
jb
nop
add
mov
add
mov
add
jb
nop
add
mov
add
mov
add
xor
mov
add
jb
insb
add
fs
mov
jb
add
js
add
jg
add
ja
add
js
add
js
add
test
inc
js
add
ja
add
js
add
js
add
jns
add
test
jbe
test
push
ja
add
js
add
js
add
ja
add
js
add
xchg
js
add
jns
add
ja
add
js
add
js
add
jns
add
test
pop
js
add
lds
or
push
or
xchg
mov
add
mov
add
mov
add
lea
add
mov
add
lea
add
or
and
mov
add
movsl
lea
add
or
mov
add
mov
add
or
test
add
mov
add
mov
add
or
mov
mov
pop
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
push
pop
jnp
push
pop
jnp
push
pop
add
add
jnp
push
pop
jnp
add
jnp
push
pop
jnp
add
jnp
push
pop
jnp
add
jnp
push
pop
jnp
add
jnp
push
pop
jnp
add
jnp
add
jnp
add
jnp
push
or
add
jnp
push
or
push
or
push
or
add
jnp
push
or
jmp
jle
sti
add
jecxz
jle
repz
out
add
jle
xlat
add
out
jle
iret
add
jmp
add
loope
jle
icebp
add
in
add
aad
jbe
in
jle
int
jbe
ljmp
mov
add
repnz
out
add
add
out
jle
into
add
call
add
loopne
jle
lock
in
add
aam
add
add
jg
add
je
pop
out
jb
add
jno
add
loope
orl
ja
or
outsl
test
jecxz
orl
repz
or
outsb
orl
loop
orb
ja
or
outsl
orb
test
push
cmc
je
push
in
insb
xchg
in
xchg
fnstsw
cmc
je
push
in
insb
xchg
in
test
pmuludq
paddsb
pmulhuw
mov
add
test
or
pushf
fwait
or
int3
fwait
or
lods
fwait
or
mov
or
lods
fwait
or
mov
or
pop
fwait
or
dec
fwait
or
insb
fwait
or
dec
fwait
or
pop
fwait
or
sub
or
dec
fwait
or
dec
fwait
or
sbb
dec
pushf
or
prefetch
cvtps2pi
prefetch
bswap
fwait
or
bswap
fwait
or
aad
pcmpeqb
adc
insb
in
je
rclb
adc
call
adc
gs
sbb
insl
aad
pop
fstpl
pop
mov
sbb
xchg
ficompl
sbb
orl
sbb
sbb
sbb
sbb
sbb
fcomps
sbb
mov
sbb
sbb
jno
sbb
popa
call
sbb
xchg
fsts
sbb
mov
sbb
nop
lock
lock
loopne
pusha
nop
loopne
nop
nop
xlat
pop
xchg
iret
pop
xchg
xchg
lcall
ja
negl
outsl
xchg
out
pop
addr16
out
pop
xchg
fistps
xchg
xlat
pop
iret
pop
xchg
lcall
ja
negl
outsl
out
pop
addr16
out
pop
fistps
xchg
and
nop
push
and
and
mulb
outsb
nop
out
and
out
pop
nop
fisubs
xchg
nop
add
fwait
nop
pop
int3
fwait
nop
pop
add
nop
pop
cld
add
nop
pop
in
fwait
nop
pop
in
nop
pop
fcompl
pop
jmp
jae
add
repz
fsubrl
maskmovq
imull
or
test
adc
mov
adc
imul
fisubrl
adc
mov
push
aad
xchg
push
std
test
push
cld
add
pop
hlt
insl
cwtl
pop
add
cltd
pop
adc
int3
xchg
adc
int3
xchg
adc
fcoml
adc
int
adc
pop
popf
xchg
adc
pop
lret
sbb
xchg
sbb
jp
sbb
jp
sbb
mov
sbb
lcall
sbb
sbb
dec
xchg
sbb
jnp
sbb
jnp
sbb
dec
xchg
sbb
add
sbb
pop
xchg
sbb
sbb
sbb
dec
xchg
sbb
js
sbb
js
sbb
jnp
sbb
popa
cld
sbb
popa
in
sbb
xchg
in
sbb
xchg
fstpl
sbb
lea
sbb
sbb
jo
sbb
pusha
std
sbb
pusha
in
sbb
nop
in
sbb
loop
add
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
push
add
push
add
fildl
jnp
jecxz
jnp
sub
mov
add
mov
add
mov
add
imul
dec
add
mov
add
mov
jnp
jmp
jnp
jmp
jnp
jmp
add
ljmp
mov
add
out
add
in
jnp
jecxz
jnp
filds
jnp
fildl
jnp
jecxz
jnp
lret
add
mov
add
mov
jnp
imul
mov
add
mov
jnp
add
jle
add
jne
add
adc
cld
jmp
jo
add
je
add
mov
mov
jmp
test
add
mov
out
cld
ljmp
add
js
add
js
add
js
add
js
add
js
add
ja
add
js
add
js
add
js
add
sub
sub
add
jns
add
js
add
js
add
js
add
push
mov
add
adc
add
adc
inc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
jecxz
arpl
and
addl
xchg
add
add
arpl
add
add
add
arpl
add
mov
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
out
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
xchg
sbb
jnp
jmp
pop
cs
jno
mov
and
xor
add
ret
pop
and
jb
add
push
out
adc
jae
std
ljmp
xchg
inc
inc
jnp
or
jmp
jnp
in
cmp
imul
add
filds
jbe
es
outsb
add
sti
pop
imul
sbb
insb
mov
add
jmp
jnp
adc
jnp
lret
jecxz
arpl
jmp
sub
sbb
mov
adc
jecxz
jnp
jmp
jnp
repz
jmp
jnp
inc
pop
inc
movsb
inc
jns
mov
mov
adcl
mov
iret
pop
mov
gs
mov
mov
xchg
pusha
sbb
lods
inc
pop
add
dec
mov
xchg
push
js
cs
and
das
mov
call
jmp
pop
mov
cmp
mov
pop
movsl
ficompl
mov
test
movsb
outsb
aas
jecxz
and
lea
stos
mov
les
pop
xchg
aad
out
dec
inc
sti
mov
bound
jnp
mov
int3
int
insb
jne
clc
add
call
inc
mov
inc
jae
push
jbe
insl
sbb
jg
loop
cmp
in
cs
mov
in
add
sub
xor
cmp
test
bound
mov
fiaddl
popf
xor
movsb
pop
clc
daa
mov
inc
cmp
shrl
mov
pop
cs
shl
test
ja
jnp
mov
add
lret
addl
adc
ss
popa
mov
sub
repz
jnp
add
jnp
jnp
jnp
jnp
jnp
add
jnp
jp
jnp
jp
jnp
add
jnp
add
jnp
add
jnp
add
jnp
push
add
add
jnp
add
jnp
push
add
add
jnp
add
jnp
add
jnp
push
add
add
jnp
add
add
push
add
add
jnp
add
jnp
push
add
push
add
or
mov
add
jmp
lds
add
ljmp
mov
stc
inc
call
sbb
xor
loop
mov
mov
add
ljmp
mov
add
adc
mov
add
jecxz
add
inc
cmpl
mov
add
jnp
cmp
repz
xlat
cmpb
testb
mov
add
add
popf
dec
add
lea
xchg
js
add
pop
dec
add
pusha
dec
add
add
push
dec
add
mov
mov
jg
add
js
add
add
mov
aaa
sbb
add
mov
rorb
add
fmull
js
add
dec
add
add
fimuls
js
add
iret
dec
add
mov
ficompl
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
popl
add
cmc
inc
add
mov
add
mov
add
mov
testl
bound
test
pop
add
mov
lods
mov
dec
mov
mov
mov
add
mov
in
pop
add
add
jns
add
or
pop
jp
add
pusha
add
jp
add
jns
add
inc
add
add
add
jp
add
jp
add
jp
add
test
sbb
add
jp
add
jp
add
jp
add
add
inc
jp
decl
cli
call
sti
ljmp
leave
ljmp
and
bound
add
adc
add
add
jp
add
jp
add
add
push
add
dec
add
pop
add
mov
add
mov
add
mov
add
mov
add
and
or
adc
push
mov
popf
mov
xchg
mov
mov
aas
add
xchg
mov
add
nop
add
cmpsb
add
mov
add
pop
mov
add
xchg
jo
lea
jb
jbe
lcall
insb
jns
add
inc
add
js
add
mov
add
js
add
cmp
push
js
add
lahf
add
jle
inc
js
add
js
add
js
add
add
add
jns
add
jns
add
jns
add
jns
add
jns
add
push
mov
add
inc
add
dec
add
lea
add
imul
lea
mov
cmp
add
push
xor
mov
xor
mov
xor
mov
mov
xor
mov
xor
xchg
loope
pop
xchg
out
hlt
xchg
in
movsl
xchg
shll
xchg
xor
xchg
cmpsb
xor
xchg
stos
xor
test
jnp
or
stos
dec
or
mov
or
imul
mov
add
or
dec
mov
rorl
les
or
dec
mov
enter
lret
or
stos
test
or
mov
or
mov
add
fsubrs
add
fisubrs
add
loopne
add
loope
add
mov
pop
aad
mov
pop
add
fwait
mov
pop
loopne
xchg
pop
xlat
fwait
nop
pop
into
fwait
inc
pop
movsb
fwait
ds
test
xor
pop
lcall
addb
mov
mov
push
pop
mov
push
cltd
mov
push
cwtl
mov
push
lahf
mov
push
xchg
mov
push
xchg
mov
push
xchg
mov
push
xchg
mov
add
cmpsl
add
sahf
add
mov
add
lods
add
cltd
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
add
add
jp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
push
add
mov
testb
xor
push
add
mov
cmp
add
mov
cmp
add
lea
add
mov
add
add
mov
add
add
add
mov
add
mov
lds
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmc
decl
ja
add
xor
xor
add
jg
add
sub
xor
das
add
jg
add
ja
add
sbb
cmp
add
jg
add
add
add
jg
add
scas
add
ja
add
jg
add
addb
jg
add
js
inc
jg
add
xchg
add
jg
add
ja
add
add
test
aaa
jg
add
mov
dec
jg
movb
xchg
add
xchg
add
leave
add
enter
movl
add
xchg
sahf
xchg
add
addb
xchg
nop
xchg
popl
inc
add
pop
add
add
add
cmp
pop
xchg
add
xchg
add
xchg
add
xchg
bnd
push
in
jnp
push
in
sub
movsl
push
sbb
push
add
add
add
hlt
xor
dec
in
lgdtl
or
add
or
push
int3
push
add
jbe
cmp
add
movsb
sub
pushf
pushf
roll
xchg
xchg
or
jle
iret
add
jl
add
sub
bound
sub
fs
add
pop
std
add
push
incb
add
ficoml
add
xchg
add
fsts
fcomp
lcall
fstps
add
fstps
add
ficompl
and
lahf
add
fisubl
add
fldenv
add
fisubl
xor
mov
add
fnstenv
add
fnstenv
add
mov
mov
fnstenv
jnp
cld
mov
js
cld
mov
js
cld
mov
js
mov
js
inc
js
inc
js
inc
js
inc
js
inc
js
inc
js
inc
js
dec
js
mov
cwtl
inc
decb
xchg
inc
lcall
inc
and
incb
push
or
mov
pop
or
mov
pop
std
std
lcall
popf
cwtl
pop
lahf
cwtl
mov
lods
pop
cld
adc
dec
cld
lods
lods
inc
cld
fildll
sub
push
lods
test
sti
jne
mov
sti
add
stos
lods
sti
sub
xchg
sti
xchg
lods
sar
lods
sar
lods
mov
mov
lods
movsl
sti
popf
lods
pushf
sti
xchg
lods
test
jp
jne
or
pop
sti
or
dec
sti
jmp
scas
dec
cli
mov
add
cli
es
jno
or
es
push
andb
push
lods
adc
inc
test
adc
daa
add
mov
std
xor
iret
outsb
xchg
daa
movb
and
outsb
pop
and
jle
daa
pushf
jbe
daa
xchg
outsb
lahf
daa
sahf
xchg
daa
dec
jne
and
lea
dec
test
and
andl
test
and
jmp
push
and
call
test
and
test
int
daa
and
test
mov
push
and
test
test
ja
pop
and
and
mov
and
mov
and
mov
and
mov
jl
sub
and
pop
and
mov
adc
pop
and
mov
and
mov
es
mov
and
add
mov
and
bound
sbb
jnp
nopl
nopl
nopl
rdmsr
fwait
jne
xor
dec
shrd
movzbl
lods
ldmxcsr
orl
push
orb
pop
rorl
push
rorb
mov
push
into
or
pop
lds
stos
push
mov
or
popf
stc
or
xchg
or
popf
xchg
push
or
popf
push
or
xchg
push
or
pop
push
or
pop
push
or
pop
mov
test
pop
push
push
lods
push
push
cmp
inc
push
test
xor
mov
push
push
jno
adc
or
jge
push
or
push
test
mov
or
test
movsl
or
mov
or
test
pushf
or
scas
mov
or
test
mov
stc
test
jg
fsubrs
and
insb
mov
push
dec
jl
push
inc
je
push
dec
insb
mov
push
dec
jl
push
inc
je
push
adc
insb
mov
adc
push
std
jne
push
adc
mov
je
mov
stc
jne
push
fmuls
jmp
push
aad
out
push
mov
mov
push
mov
mov
push
mov
imul
dec
push
or
push
or
xor
push
jp,pt
push
aas
jp
push
cmp
add
in
jns
push
add
jns
push
sti
jns
push
clc
jns
push
jmp
jge
push
idivl
in
or
lds
mov
adc
mov
adc
mov
jl
push
outsb
jl
push
outsl
jl
push
insb
jl
push
std
jnp
push
fidivrl
push
jmp
sbb
call
jnp
push
jbe
push
push
addr16
push
push
jnp
push
push
jnp
push
and
add
adc
jne
adc
insl
and
adc
sub
es
mov
adc
jge
adc
jne
adc
insl
popf
adc
test
adc
insl
cltd
adc
test
xor
adc
insl
jne
xor
outsl
adc
insl
adc
cmp
or
or
ds
or
jge
or
jne
or
insl
mov
addl
sysenter
addl
cmovno
inc
getsec
cmpl
bswap
cmpl
bswap
cmpl
imul
sbb
verr
add
rolb
dec
push
imul
mov
inc
lcall
mov
add
outsb
xchg
xor
xchg
xor
xor
xor
outsb
xchg
xor
nop
xor
jle
xor
jbe
xor
outsb
dec
xor
jle
xor
dec
xor
xchg
cmpl
xor
inc
xor
inc
xor
aas
xor
xor
inc
xor
inc
xor
jle
xor
jbe
xor
outsb
cmp
xor
jno
xor
and
test
sbb
pop
xor
test
push
test
pop
test
faddl
xor
adc
arpl
add
popa
xor
stos
adc
stos
adc
adc
subl
adc
xorl
adc
mov
addb
adc
mov
inc
test
adc
or
mov
or
mov
or
push
or
push
or
push
or
mov
or
push
or
push
or
push
or
xor
orl
or
stos
lea
mov
fwait
or
mov
or
fwait
cmp
push
jp
hlt
push
jp
hlt
ja
inc
and
add
and
fsubrs
mov
stos
test
stos
xchg
and
stos
andb
andl
stos
dec
and
stos
jecxz
jnp
jecxz
jnp
repnz
jnp
repnz
loopne
jnp
filds
jnp
negb
mov
add
clc
pop
jnp
clc
add
loopne
jnp
loopne
jnp
xor
jnp
std
add
jnp
mov
add
mov
add
cltd
pop
jnp
lds
jnp
add
jns
add
js
add
mov
or
add
push
mov
or
add
inc
mov
or
add
xor
add
and
add
push
mov
sarb
add
inc
mov
mov
add
mov
push
jg
add
and
add
mov
or
add
mov
loopne
mov
je
mov
in
jns
add
mov
cltd
js
add
shlb
add
mov
xor
add
xor
add
xor
add
add
dec
xor
add
add
cmp
xchg
add
xor
add
mov
xor
add
xor
add
xor
add
xchg
add
xor
add
add
pop
xor
add
add
aam
add
ja
add
lds
add
add
mov
add
push
add
add
jnp
push
add
add
jnp
push
add
add
jnp
push
add
push
add
jnp
push
add
pop
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
jnp
push
add
add
jnp
push
add
add
jnp
push
add
add
jnp
gs
jnp
fwait
add
push
push
add
lcall
mov
jnp
sub
mov
jnp
test
add
mov
add
mov
add
mov
add
mov
add
mov
jnp
mov
jnp
add
mov
add
xor
mov
add
and
mov
add
jnp
aaa
push
jnp
mov
and
mov
scas
js
add
scas
mov
imul
add
mov
sbb
mov
imul
sbb
mov
mov
js
add
js
add
js
add
mov
mov
mov
dec
js
add
js
add
dec
js
add
jns
add
mov
test
add
mov
test
add
leave
pop
add
sbb
add
mov
add
pop
add
decl
aas
add
adc
add
lea
add
adc
add
adc
add
pop
add
inc
add
pop
add
inc
inc
add
or
add
inc
inc
add
push
add
inc
inc
add
mov
add
inc
inc
add
mov
add
add
pop
add
inc
inc
add
inc
inc
add
inc
inc
add
push
or
jle
jnp
push
push
jnp
jle
jnp
push
push
jnp
jle
jnp
push
or
jle
jnp
add
inc
jle
jnp
push
or
jle
add
push
push
jnp
jns
jnp
push
add
jle
jnp
push
add
dec
jle
jnp
add
jnp
jle
jnp
add
jnp
jle
jnp
add
jnp
js
jnp
add
jnp
js
jnp
add
jnp
js
jnp
add
jnp
mov
mov
add
mov
mov
mov
mov
mov
add
mov
xchg
add
mov
jg
iret
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
jns
ret
mov
mov
add
mov
mov
mov
push
scas
mov
mov
mov
mov
mov
mov
loope
xchg
add
icebp
dec
add
xchg
add
dec
add
popl
popa
icebp
dec
add
add
ja
add
ja
add
js
add
js
add
js
add
js
add
js
add
icebp
dec
add
cltd
add
add
ja
add
repnz
add
add
add
js
add
les
inc
add
add
add
mov
add
or
or
out
inc
add
mov
add
or
push
add
mov
or
jo
push
add
mov
add
inc
add
xchg
add
inc
add
xor
add
inc
add
xchg
add
or
cmp
inc
add
add
mov
add
rolb
inc
jnp
addb
push
add
sbb
add
adc
or
addb
add
jnp
addb
push
es
addb
add
jnp
push
pop
jnp
addb
jbe
add
addb
push
pop
jnp
addl
push
or
inc
jnp
push
add
jnp
add
insb
addb
add
jnp
addb
push
pop
jnp
addb
add
mov
cmpl
mov
cmpl
mov
cmpl
mov
add
jbe
add
mov
test
mov
outsl
mov
add
call
test
mov
test
mov
test
mov
cmpb
mov
ja
jmp
cmp
iret
test
mov
sbb
xchg
add
jg
add
jg
add
testl
popa
testl
add
js
add
clc
dec
add
js
add
js
add
testl
stc
clc
dec
add
xchg
add
testl
stc
clc
dec
add
xchg
icebp
clc
dec
add
clc
dec
add
jg
add
mov
popl
shrl
lea
add
iret
cmp
dec
mov
adc
cmp
xchg
xchg
add
or
add
iret
cmp
hlt
mov
add
iret
cmp
inc
mov
add
iret
cmp
mov
or
inc
iret
cmp
stos
mov
add
iret
cmp
enter
fmulp
cmp
jbe
pop
add
cmp
push
mov
add
iret
cmp
add
cmp
bound
add
aam
add
push
or
rol
aas
jnp
add
jnp
aas
jnp
push
adc
enter
add
jnp
enter
push
adc
enter
push
push
jnp
enter
add
jnp
lret
test
adc
lret
aas
jnp
push
adc
jnp
add
nop
enter
sti
add
jnp
lret
pop
push
adc
lret
repnz
jnp
lret
aas
jnp
push
sbb
lret
aas
jnp
add
jnp
lret
aas
jnp
fildl
xchg
mov
movsb
mov
orb
add
mov
leave
test
pop
leave
je
lret
mov
leave
mov
add
mov
add
enter
add
jno
ror
mov
adc
mov
movsb
mov
add
mov
mov
add
ret
je
rolb
mov
testb
mov
push
mov
insl
mov
movl
in
jge
mov
add
mov
add
ja
add
jge
xorb
inc
mov
add
ja
add
add
jge
xor
test
std
mov
add
jo
jge
jge
dec
ja
add
ja
add
ja
add
xor
nop
add
js
add
jge
inc
ja
add
ja
add
jge
ja
outsl
add
jno
or
fcmove
cmp
lea
cmp
add
mov
add
mov
add
into
cmp
inc
mov
add
adc
ror
cmp
popl
cmp
popa
xchg
add
sarl
xor
cmp
xor
cmp
call
sarl
jne
or
rcl
cmp
mov
cmp
in
or
sarl
and
sarb
jnp
add
jnp
add
jnp
xor
fimull
xchg
xor
clc
cwtl
inc
dec
faddl
sbb
in
push
pop
cmpl
scas
ss
dec
push
les
push
sub
rcr
je
pop
adc
cmp
inc
mov
inc
adc
adc
mov
mov
fcmovnu
mov
enter
mov
xchg
inc
cltd
inc
fistps
mov
or
cmp
jecxz
mov
out
jg
fists
addr16
adc
xor
loopne
xor
inc
xor
call
cmc
mov
stc
add
mov
out
xchg
jg
idivl
adc
jnp
lock
popf
add
mov
fsubrs
outsl
je
sub
mov
adc
jl
adc
jl
adc
jl
adc
jnp
push
xor
add
jno
into
enter
inc
cmp
clc
xor
push
xor
push
xor
push
xor
mov
mov
shll
jecxz
lods
lret
fs
add
jb
sub
insl
lock
mov
das
movsl
mov
das
mov
mov
repnz
gs
or
mov
and
cs
jae
testl
and
mov
xor
imul
gs
xor
cmpsb
lcall
cmc
das
jecxz
outsb
dec
lods
daa
lahf
aam
mov
jp
stos
xor
mov
add
loopne
xor
mov
xor
mov
xor
mov
cmpsb
fwait
pop
xor
inc
arpl
lcall
jo
inc
clc
cmpsb
mov
lret
dec
fisubrs
xor
mov
xor
mov
xor
mov
xor
pop
mov
mov
push
repnz
cmpsb
movsb
cmpsl
addl
shlb
mov
xchg
or
outsb
ss
data16
or
sub
das
imul
into
stos
sub
repz
jmp
sarb
adc
ljmp
mov
hlt
lret
mov
data16
sub
xchg
std
movsl
mov
inc
mov
loopne
stos
dec
push
clc
mov
pop
clc
mov
inc
sahf
stc
push
add
loopne
push
mov
xchg
lahf
inc
shr
mov
mov
ret
gs
lret
cmpl
add
mov
call
rcrb
fwait
xchg
lods
pushf
adcl
insl
insb
adc
push
call
jno
jl
idiv
insb
jb
pop
mov
and
insl
xchg
add
inc
inc
in
loope
rcrl
push
sahf
xor
aam
xchg
sbb
pop
add
ja
add
add
in
mov
push
lods
push
jnp
pop
add
loop
jp
das
xchg
sbb
js
ret
cmp
adc
jnp
cmp
jp
add
cs
mov
icebp
jmp
xlat
add
lret
es
sub
pop
xor
rorl
test
cmp
or
rcll
aam
add
int3
mov
add
arpl
popl
add
wrmsr
cmp
data16
mov
xchg
aas
ficoml
push
ja
sbb
cmp
int3
cwtl
lahf
add
xor
mov
ret
xor
cli
mov
ss
mov
ss
pop
sbb
je
or
in
mov
in
cltd
popa
je
jmp
jp
and
push
cmp
xchg
cmp
dec
enter
xchg
jb
aad
cmp
pop
loopne
inc
dec
mov
mov
rep
ret
add
pushf
mov
cmp
add
lock
mov
rcrb
xchg
jp
lahf
fcompp
sub
popf
sti
ljmp
and
xchg
inc
bound
adc
stos
clc
test
inc
mov
jp
test
mov
fiadds
arpl
mov
push
stc
sbb
decb
in
sub
xchg
jnp
pop
pusha
inc
popl
sub
stc
push
jb
mov
jb
call
aaa
andps
aad
icebp
rcll
imul
cmp
inc
fidivrl
fucom
cmp
js
jne
dec
mov
dec
push
inc
shl
int
xchg
test
dec
xchg
add
pop
adc
cmp
push
jg
sbb
pop
das
repnz
bsr
loope
enter
fbld
add
jecxz
jmp
dec
loopne
in
or
les
cs
mov
ljmp
das
jns
push
pushf
dec
lods
lods
or
lock
push
xchg
fcomi
xchg
cmp
sub
xchg
pop
shlb
cmp
lahf
xor
loope
add
dec
sbb
mov
out
dec
and
sub
cli
sbb
notb
outsb
xchg
xor
and
or
mov
repnz
mov
add
insb
pop
movl
mov
lcall
scas
jmp
or
add
popa
jmp
sahf
mov
jle
aas
mov
es
xchg
in
repz
loop
push
jbe
adc
pushf
sub
movsl
xchg
cmp
lock
push
adc
push
add
outsl
dec
add
xchg
and
aad
stos
mov
xchg
mov
add
jnp
add
jnp
add
jnp
incl
jnp
add
jnp
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
pop
jecxz
pop
mov
jmp
jnp
out
xor
cli
idiv
fsubl
jmp
pop
sub
mov
push
and
test
sub
mov
cmp
mov
xor
sub
mov
adc
test
push
sti
mov
cmp
mov
ss
aad
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
scas
cld
pop
subl
cld
inc
jno
cld
ds
scas
cld
ss
scas
cld
add
cld
es
scas
cld
push
inc
scas
cld
push
inc
scas
cld
push
mov
cld
add
xchg
add
mov
fidivrl
jmp
jae
call
jl
or
orl
lds
pushl
jae
jmp
jae
jmp
jae
call
jl
or
orl
add
jb
jmp
jb
jmp
jb
jmp
jb
incl
bound
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jp
ljmp
mov
add
ljmp
mov
add
ljmp
mov
add
jp
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
jg
add
jnp
add
fldl
sbbl
adc
adc
sub
sbb
xor
es
mov
mov
das
and
ss
or
ds
xchg
out
bound
or
cmp
push
outsb
repnz
outsl
fidivs
data16
jbe
dec
out
pop
jle
pop
pop
jb
bound
or
jp
push
outsb
repnz
outsl
add
jb
data16
jbe
dec
out
jnp
loop
jg
or
adc
test
add
mov
inc
xchg
xchg
or
lea
lock
xchg
sahf
in
popa
mov
sbb
imul
sub
mov
pop
jns
adc
mov
mov
ljmp
mov
push
rolb
enter
lods
cli
push
fidivl
adc
loop
push
sbb
pop
or
ljmp
xor
push
sbb
cli
push
ss
inc
mov
add
out
jle
jecxz
adcl
push
insl
adc
jno
iret
push
gs
loop
insb
ficomps
je
out
js
repnz
pop
mov
add
fs
testb
inc
test
and
mov
sub
mov
adc
es
or
cmp
mov
push
pop
shll
pop
fldcw
inc
jns
or
jge
testb
add
test
adc
pop
push
cli
nop
push
repnz
xchg
push
add
add
dec
xchg
jmp
movsb
inc
dec
icebp
test
pop
cmc
lods
cmp
mov
push
fnsave
dec
in
test
inc
int
mov
cmp
int3
cltd
inc
mov
aam
aas
rcr
sub
fmull
mov
mov
jge
mov
add
pop
lock
arpl
test
pop
cld
call
cld
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
hlt
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
mov
add
add
jnp
xor
jl
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
xor
je
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
js
xor
cld
xchg
xor
je
add
jnp
add
jnp
add
jnp
add
jnp
add
add
xor
lods
mov
xor
sbb
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
pushf
xor
xor
xor
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
pop
xor
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
and
hlt
mov
mov
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
imul
jmp
jnp
jmp
jp
ljmp
mov
add
add
js
add
js
add
js
add
mov
imul
or
in
jg
fnstsw
aad
mov
jmp
addb
sti
add
jge
fldt
adc
push
adc
push
subb
adc
addb
sti
mov
sti
mov
fldt
adc
push
adc
push
subb
add
js
add
js
add
js
add
js
add
mov
mov
add
mov
add
add
bound
add
add
add
bound
add
push
mov
add
add
and
add
adc
add
and
add
adc
add
loop
add
loop
add
rorb
add
loop
add
loop
add
rorb
add
mov
lea
add
add
jnp
incl
jnp
incl
jp
incl
jp
incl
jp
incl
js
incl
jp
incl
jp
add
jp
add
jns
add
jns
add
jg
add
ja
add
jns
add
cmpsb
add
jns
add
jns
add
jg
add
jns
add
jp
incl
jp
add
lcall
add
add
js
add
jle
add
add
incl
js
add
js
ljmp
mov
cmp
mov
cmp
xorl
mov
cmp
cmp
sbb
mov
mov
mov
mov
add
mov
iret
add
mov
add
mov
lret
mov
add
ljmp
mov
add
mov
add
jmp
jnp
add
js
add
cmp
pop
jg
add
xor
cmp
ja
add
js
add
ja
add
jg
add
js
add
movsl
dec
add
lock
add
js
add
js
add
add
add
jg
add
js
add
xor
or
sbb
add
sbb
jmp
js
add
adc
jb
sub
sub
or
add
or
push
add
jb
dec
decl
fldt
dec
fdivl
xor
jmp
jo
aad
popa
dec
in
inc
imul
imul
lds
cmpsl
enter
jmp
jo
add
push
aad
dec
addr16
add
jmp
jo
in
jo
inc
out
filds
pusha
outsl
cs
jae
jp
and
imul
out
gs
add
outsl
ljmp
jnp
pushf
push
pop
fistpl
outsb
dec
sbb
push
add
and
push
sub
enter
nop
mov
add
les
rolb
mov
dec
lret
arpl
push
scas
push
rclb
imul
fsts
sahf
push
popf
mov
jo
shrl
xor
dec
sahf
jmp
dec
mov
sub
add
add
jnp
cmpsl
filds
cwtl
addr16
mov
pop
sahf
mov
and
fistps
pop
stos
ret
cmpsl
mov
xor
mov
dec
cmp
sub
aaa
iret
es
loopne
addr16
loopne
inc
adc
sarb
or
movsl
fsubs
add
popf
loopne
std
cwtl
fcompl
jmp
jnp
enter
push
or
mov
add
lea
sbb
mov
add
mov
cmpsb
or
daa
dec
sbb
imul
jnp
sbb
data16
fldl
jmp
or
daa
dec
dec
std
sub
inc
ficoms
imul
dec
jnp
fisubrs
cld
outsl
xor
add
dec
dec
add
dec
add
addr16
add
add
cld
adc
cld
adc
cld
add
fwait
cld
add
fwait
cld
shrl
fwait
cld
add
hlt
lcall
sub
cld
pushl
jmp
mov
add
mov
add
mov
add
xchg
or
fcoms
or
jb
inc
ljmp
jmp
lock
imul
flds
add
fiaddl
ljmp
add
mov
inc
add
mov
inc
add
lret
inc
add
mov
add
rorl
pop
pop
xchg
int3
push
push
xlat
mov
push
pop
jnp
push
add
xchg
imul
xchg
imull
jnp
mov
inc
movsb
add
jnp
rcll
mov
lock
movsb
add
jnp
mov
add
push
jb
push
push
push
jnp
push
je
jo
push
jnp
push
add
push
insb
jnp
push
bound
push
insb
jnp
push
add
push
outsl
jnp
push
popa
jnp
push
pop
jnp
add
jnp
je
jnp
ficoml
stos
push
scas
add
mov
add
jnp
xchg
mov
ds
sarl
mov
roll
scas
add
popf
mov
inc
lods
lret
lods
dec
dec
stos
sarl
inc
jmp
jnp
ss
jnp
sub
aas
jmp
jnp
cs
movb
fs
cmp
push
cwtl
cmp
mov
mov
xor
add
dec
dec
push
sbb
cmp
mov
mov
mov
roll
jmp
cmp
add
mov
mov
dec
dec
jmp
pop
dec
pop
jmp
stos
dec
inc
movsb
js
add
out
cmp
sub
inc
dec
and
cmp
cmp
cmp
and
mov
and
add
cld
dec
sub
insb
or
sbb
or
jp
dec
sub
fldenv
cs
add
jno
outsb
je
fnsave
inc
in
jcxz,pn
ljmp
add
shl
jb
in
arpl
mov
add
cli
arpl
out
add
jecxz
outsb
stc
jecxz
add
jecxz
jo
out
push
incl
icebp
out
jae
popl
add
sub
movsb
and
cmp
mov
cmp
imul
dec
add
push
cmp
add
jnp
push
push
jnp
add
jnp
add
popl
insb
jnp
add
jnp
push
jnp,pn
add
add
jnp
enter
lret
insl
pop
aad
inc
push
fsubs
jae
movsb
add
jnp
mov
inc
jnp
inc
inc
jnp
inc
inc
jnp
mov
inc
jnp
dec
inc
jnp
movsb
inc
jnp
inc
inc
jnp
and
inc
jnp
push
jae
push
push
jb
sahf
add
jnp
out
jnp
out
jbe
jmp
jnp
mov
add
into
fwait
and
fisttpll
add
fdivl
inc
pop
std
xchg
mov
add
mov
sti
ficoml
or
jns
and
jl
and
bound
repnz
outsl
nop
adc
arpl
mov
cmp
mov
sub
xchg
cwtl
cwtl
sub
add
add
lret
ret
mov
js
add
xchg
icebp
xchg
xchg
cmpsl
std
lods
mov
cwtl
js
add
sbb
fcompl
pop
ss
idivb
out
mov
in
loope
sbb
xchg
fldt
adc
jne
or
aad
or
xlat
cmp
cld
jle
push
push
xchg
mov
dec
dec
inc
mov
inc
cmp
mov
lods
loopne
inc
insb
in
sti
xor
stos
divl
movsl
add
pop
and
mov
and
mov
loopne
mov
out
shrb
jno
in
adc
mov
nop
call
push
fmul
scas
push
enter
push
xor
cmp
fiaddl
jae
lret
test
hlt
add
fcmovnbe
insb
pop
push
push
xchg
mov
add
xchg
rcll
add
jnp
cltd
add
jnp
jnp
lods
jge
push
xchg
xor
jle
decl
lock
add
out
add
and
jnp
adc
xor
and
jnp
je
hlt
or
xor
js
loop
add
jnp
xor
cmp
jnp
sbb
xlat
dec
sbb
loop
cmp
enter
sarb
aad
andl
fnstsw
jbe
iret
push
aam
jle
jecxz
mov
add
mov
insb
add
xor
inc
loopne
push
add
jecxz
push
lock
imul
aam
mov
lea
mov
dec
and
xchg
jge
lret
mov
rep
aaa
sbb
jl
testb
mov
fstl
dec
push
push
aad
nop
xor
int
and
mov
add
in
outsb
xorl
pushf
pop
add
jle
mov
push
in
push
jecxz
xorl
jb
sti
jbe
pop
pop
jnp
sbb
cmp
sub
add
add
or
inc
dec
jge
and
sub
sbb
and
dec
arpl
sti
addl
and
mov
push
sahf
out
push
mov
xchg
in
push
lahf
mov
das
cmp
aam
inc
mov
jmp
out
jg
adc
cli
or
jge
clc
xchg
outsl
pop
fstpt
leave
jge
test
inc
push
xchg
add
daa
stos
mov
adc
cmp
mov
mov
cli
add
add
insb
push
mov
jle
mov
jbe
jnp
jge
adc
inc
pop
xor
dec
dec
into
fmuls
jmp
dec
add
mov
add
cmc
sub
mov
xor
mov
mov
clc
sbb
fisttpl
out
dec
popa
test
call
pop
add
in
pushf
xor
xor
jge
dec
jecxz
loope
scas
ja
es
cs
mov
add
jnp
lret
outsl
int3
or
xchg
push
push
mov
mov
xor
xchg
stc
pop
mov
add
jge
je
aam
and
mov
popf
insb
jne
imul
lcall
scas
leave
jb
fmull
cmp
ficoml
orb
adc
sbb
lret
leave
mov
or
jl
add
jl
sub
add
xor
mov
jbe
add
es
test
jae
or
mov
mov
cmp
mov
inc
jnp
cmpsl
push
addb
inc
or
jb
pushf
js
mov
jbe
in
andb
mov
mov
add
popf
mov
add
xchg
add
mov
pop
pop
sub
adc
dec
pop
push
outsb
dec
sbb
ss
adc
loop
jae
fists
fs
sub
mov
xchg
mov
lret
ret
int3
xchg
mov
leave
shlb
mov
js
add
fcomps
add
mov
and
mov
sub
push
and
mov
jnp
xchg
add
mov
xchg
fs
fadd
pop
pop
lahf
sarl
lret
add
scas
jle
or
nopl
xchg
adc
test
pop
push
test
add
aaa
and
xor
jnp
and
pop
imul
xor
aad
aad
or
xlat
aad
repz
add
or
cmc
adc
test
out
test
jnp
mov
fs
cmp
jnp
je
add
sub
xchg
mov
in
test
mov
sbb
negl
jg
sti
sbb
add
jnp
xchg
imul
ret
mov
rclb
shlb
dec
sub
faddl
dec
cmp
sarb
jno
mov
jnp
adcb
jle
jmp
aaa
ret
inc
lret
push
das
xor
dec
ljmp
aad
mov
out
scas
and
sub
call
sub
add
jecxz
push
nop
out
jns
fdivp
jne
add
jno
adcl
xchg
and
addr16
and
jge
or
mov
sbb
pop
adc
inc
push
testb
fbstp
add
mov
lahf
ret
xchg
dec
xlat
cmp
je
sub
mov
arpl
mov
cmc
cmp
push
lock
jb
mov
ljmp
or
movsb
xchg
add
add
add
inc
xchg
data16
sbb
dec
or
push
insb
inc
or
add
xchg
addr16
mov
mov
lahf
adc
es
add
pop
and
ret
or
cwtl
ljmp
shlb
loope
stos
rorb
xor
popa
cmp
add
gs
add
push
adc
jmp
mov
add
lret
mov
add
mov
add
into
jmp
xor
rol
mov
and
cld
bound
scas
mov
xchg
cmp
jp
sbb
testb
je
add
idivb
dec
pop
push
push
push
pop
incb
ja
add
jnp
push
sub
mov
add
out
push
pop
push
roll
jne
or
xor
add
cltd
daa
test
pop
mov
dec
dec
push
iret
inc
cmp
cmp
push
ljmp
add
pop
fwait
xor
pop
mov
fs
dec
rolb
or
add
jnp
rcr
pusha
mov
int
cmpsl
lock
mov
loop
adc
call
fisttpl
out
pop
mov
add
cwtl
mov
fldt
mov
test
int3
mov
aam
cmpsb
hlt
jbe
into
add
popa
pop
call
andb
inc
ljmp
mov
add
stos
pop
add
ljmp
push
je
sbb
sbb
adc
popa
push
xor
addr16
push
pusha
adc
xlat
inc
pop
idiv
ja
add
push
push
cld
ds
int
jmp
mov
aam
fstps
into
dec
mov
jecxz
mov
or
pop
mov
cmpsb
jo
or
add
cmp
cmp
fsubrl
jb
les
cmp
sub
js
add
xchg
or
inc
push
sbb
mov
cmpl
jl
out
push
scas
loop
in
mov
in
in
mov
iret
loope
fisttpll
xchg
mov
iret
fdivp
ror
mov
mov
push
stos
scas
sti
mov
pop
in
test
ljmp
and
scas
adc
sub
sahf
jmp
fistpll
pop
ficompl
fistps
insl
cmp
aad
pop
bound
cmp
ret
mov
les
mov
jle
mov
mov
inc
add
in
arpl
adc
pusha
mov
fildl
push
mov
jne
add
in
inc
aas
cmp
add
fs
pop
fs
pop
cmpsb
jnp
js
adc
orb
out
test
repz
bound
and
das
mov
jnp
jo
add
sub
or
scas
imul
pop
push
jecxz
inc
cvtps2pi
push
dec
loop
arpl
push
std
ficompl
orl
sbb
ficoml
jnp
xor
add
mov
dec
int
cmpsl
cmp
mov
enter
stos
sub
mov
add
add
xchg
frstor
repnz
and
gs
pop
add
inc
pop
sbb
jl
std
repz
daa
jmp
lret
js
add
sbb
jp
and
mov
ret
dec
xlat
mov
frstor
stos
sub
scas
inc
shrb
mov
arpl
inc
xchg
jp
das
add
insl
sti
inc
insl
and
js
add
pop
pop
rolb
pop
loopne
ja
add
add
imul
insl
xchg
loop
mov
xchg
jmp
into
xor
jecxz
inc
movsb
clc
scas
pop
popf
clc
out
iret
lds
lods
fcomp
adc
iret
xlat
loop
add
push
inc
pop
jl
push
pop
das
cld
call
cltd
cli
jmp
cmc
xchg
ljmp
mov
cld
dec
xchg
rol
sub
jmp
cmp
out
popa
mov
xlat
rorb
in
mov
sub
movsb
mov
adc
sarb
push
out
leave
ret
gs
mov
popa
test
dec
dec
xor
dec
in
sub
mov
in
jne
ljmp
lcall
jmp
and
push
loope
stc
adc
rcrl
push
add
sub
xlat
imulb
fnstcw
xor
scas
movsl
das
xchg
mov
das
shrb
sahf
sub
movsb
movsl
sbb
in
mov
xor
add
xchg
outsl
and
mov
or
cmp
addr16
add
nop
jge
or
pusha
jne
and
sbb
cs
fwait
jno
sbb
pop
sbb
inc
dec
push
add
xchg
pop
sarl
ds
leave
sub
or
out
es
push
leave
call
mov
loop
push
test
lret
ret
cmp
add
aam
jge
or
or
sub
div
ja
out
jge
idiv
insb
jne
mov
xor
jp
or
daa
movb
lea
cmp
dec
lahf
or
jnp
adc
add
push
ret
or
data16
sub
inc
mov
flds
add
sub
das
cli
hlt
stc
movsl
aas
pop
enter
mov
pop
add
push
into
sub
sahf
int3
cwtl
xchg
mov
clc
in
ss
aad
popf
mul
jo
icebp
out
mov
div
test
lock
add
aad
movsl
add
cs
notl
add
add
mov
test
arpl
cmp
dec
cmp
add
dec
daa
sub
add
sub
mov
add
pop
cmp
inc
xchg
dec
dec
jne
inc
push
inc
push
xor
add
in
push
mov
xor
add
jnp
je
add
pop
stos
stos
mov
repnz
sarb
sub
sub
arpl
add
sub
cmp
push
call
pop
insl
jnp
or
add
cs
pop
xor
rclb
or
xor
cmc
jnp
mov
test
shlb
cwtl
inc
mov
movsl
push
add
test
jnp
lret
cmc
fcmovne
je
jmp
and
jo
sbb
ljmp
sub
xor
aad
inc
add
mov
loop
lods
fcmovu
add
xor
test
add
push
dec
daa
sub
push
adc
pop
sbb
add
and
ret
mov
xor
sbb
lret
mov
pop
loop
test
sub
and
mov
add
inc
andl
leave
cmp
add
lret
lock
xchg
pminub
xchg
push
or
fwait
sbb
addr16
push
mov
in
mov
mov
pusha
sti
adc
jmp
and
pop
popf
daa
sahf
js
sub
push
cmp
faddl
mov
cltd
xor
mov
jne
mov
addr16
sahf
or
push
mov
mov
stos
sub
add
lea
add
ret
push
cmp
sbb
jns
push
out
push
adc
addr16
pop
pcmpgtd
sbb
push
aas
push
push
cwtl
dec
cld
incl
sarl
sub
xchg
daa
stc
adcl
testl
shrb
sarl
cmpsl
pop
xchg
fbstp
mov
sbb
push
push
cmp
or
push
push
push
jb
adc
sysret
jnp
add
jae
add
jnp
sub
jnp
xchg
jns
das
inc
outsl
xchg
jge
pop
mov
lea
sub
dec
pushf
insb
sbb
add
jnp
push
in
cltd
and
fdivrs
pop
mov
jnp
push
les
inc
leave
xor
jnp
pop
loopne
inc
jmp
add
repz
in
lcall
xchg
aad
std
sti
lock
out
and
xor
pop
xor
lret
pop
push
mov
dec
jnp
shlb
add
inc
in
loop
push
repz
orb
mov
sbb
jmp
popa
inc
mov
add
pop
jb
scas
adc
test
das
mov
dec
ljmp
loop
add
scas
mov
jb
testl
mov
stc
pop
sbb
xor
lcall
jbe
push
icebp
or
jo
jbe
daa
xchg
out
push
cwtl
fisubl
mov
lods
pop
rcrb
add
rorl
js
add
imul
or
jge
popa
mov
add
stos
pop
in
fidivrl
aam
mov
xor
js
add
das
jns
xor
and
rcll
hlt
jae
sbb
push
jl
pop
add
add
aas
xor
loopne
test
cmc
cs
in
scas
mov
in
and
test
xor
jmp
push
inc
enter
mov
add
mov
add
mov
add
rcrb
sbb
fwait
stos
adc
stos
add
xchg
sahf
dec
dec
loop
sbb
xchg
fwait
add
mov
cmp
mov
jae
mov
imul
mov
sub
jnp
push
add
gs
lds
mov
mov
jae
mov
arpl
lahf
ja
jnp
jne
mov
jae
push
jno
add
add
jnp
add
jnp
push
and
jnp
push
and
jnp
ja
sub
jbe
dec
insb
insb
jnp
jbe
sbb
gs
adc
or
insb
gs
inc
insb
faddl
gs
divb
mov
std
dec
outsb
call
cmp
mov
test
xchg
stos
pop
sub
jmp
sbb
lods
into
jb
stos
add
outsl
loop
addr16
pop
add
mov
add
sub
jecxz
and
adc
fcoms
jno
outsl
add
stos
and
mov
add
cld
add
mov
add
movb
mov
add
test
in
xchg
add
mov
fimuls
add
js
add
js
add
js
add
js
add
jno
add
imul
add
add
gs
xchg
pop
int
stos
dec
int
inc
inc
int
and
mov
add
pushf
int
adcl
int
cmpl
int
mov
int
mov
int
cmpl
int
push
cmp
add
int
jns
mov
mov
bound
inc
add
inc
add
inc
add
aam
add
inc
add
adc
inc
add
inc
add
call
inc
add
aad
add
rolb
and
sarl
add
mov
mov
imul
into
mov
mov
mov
add
lret
dec
inc
shr
popa
je
mov
add
lret
dec
inc
jnp
arpl
out
add
inc
dec
mov
shll
fs
mov
jno
leave
leave
ja
jnp
push
inc
jnp
ret
inc
jnp
arpl
and
jnp
add
push
je
bound
add
push
gs
push
push
jnp
push
outsl
jnp
add
xchg
push
jb
pop
add
pop
add
add
inc
add
jnp
test
ret
add
jb
rolb
push
mov
int3
mov
xor
popf
inc
mov
dec
sbbb
divb
jl
popf
addr16
jnp
xor
xchg
addr16
jnp
xor
cmp
jo
jnp
popf
addr16
jnp
xor
xchg
jo
xchg
dec
lret
xchg
in
cs
xchg
jo
ja
stos
pushf
pop
xchg
add
cs
sub
add
jo
cmp
mov
popa
cmp
and
js
add
js
add
and
add
js
add
int3
add
adc
add
and
add
push
int3
add
int3
add
lods
add
js
add
lret
add
lret
add
lret
add
into
lret
add
fmul
add
inc
leave
add
lret
add
sbb
add
leave
add
leave
add
or
add
js
add
js
add
out
mov
add
add
xlat
pop
dec
shr
insb
push
rcr
dec
outsl
icebp
fsubl
bound
pop
inc
push
loop
gs
mov
add
pop
push
int
outsb
add
mov
data16
pop
push
shl
jbe
adc
jbe
push
loop
jne
sti
dec
outsb
je
add
push
jbe
enter
test
sub
mov
arpl
jno
insl
das
loop
add
jp
jbe
cwtl
mov
sub
jnp
imul
sub
push
sub
jnp
test
jnp
test
jnp
add
adc
dec
jnp
add
jnp
add
or
gs
pushl
jnp
add
jnp
add
add
push
imul
push
add
push
imul
push
outsl
jnp
push
dec
jnp
push
outsb
jnp
push
inc
jnp
push
popa
jnp
push
gs
add
jnp
push
outsl
jnp
push
jae
test
insb
jnp
push
push
jnp
rolb
dec
mov
add
faddl
add
mov
add
mov
add
or
mov
add
add
jmp
add
mov
add
mov
add
mov
add
mov
daa
popa
mov
arpl
xlat
dec
xchg
loopne
pop
sahf
movsl
or
mov
addr16
stc
push
arpl
stos
sub
fiadds
or
jno
jno
clc
or
movsl
out
add
pop
fbld
push
shrb
int3
arpl
push
fisttps
sub
insb
into
js
add
mov
add
jg
add
js
add
js
add
js
add
js
add
js
add
js
add
fcmovu
push
pop
pushf
out
inc
dec
frstor
test
add
sub
mov
inc
jmp
mov
jo
pop
fbld
pop
frstor
pop
mov
add
jbe
outsl
fisubs
scas
fsubrl
in
push
jne
fstpt
in
imul
jbe
jb
in
gs
lea
add
stc
outsb
push
adc
jo
cli
fisubl
mov
add
add
leave
jo
cmc
out
inc
lock
xchg
jo
mov
xlat
popa
outsb
mov
dec
add
add
inc
add
inc
add
pop
add
push
outsl
jnp
push
outsl
jnp
push
je
xchg
push
jnp
push
outsb
jnp
push
outsl
jnp
add
xchg
push
dec
jnp
add
add
and
jb
dec
add
jnp
add
dec
add
add
add
push
add
add
outsl
jnp
add
push
add
add
in
jae
into
push
and
jnp
push
jb
test
push
insb
jnp
push
dec
jnp
push
popa
jnp
push
gs
cmp
mov
add
jmp
outsl
lea
ffree
add
enter
jmp
mov
in
inc
add
adc
pop
and
and
dec
test
out
loop
enter
ds
mov
xchg
jp
mov
push
stos
cld
add
push
jle
jnp
les
jae
xchg
mov
dec
pop
adc
cld
dec
add
test
push
roll
lretw
add
jnp
and
adc
iret
ficomps
push
xchg
adc
ja
mov
adc
aad
outsb
push
fnstsw
push
xchg
adc
and
mov
lock
addb
js
mov
mov
aas
adc
mov
mov
push
std
jge
add
sub
cmc
push
sbbl
bound
and
dec
nop
add
adc
mov
add
in
adc
sar
andl
push
inc
pop
mov
in
adc
add
mov
mov
leave
pusha
cld
push
or
in
ret
add
ret
xchg
xor
inc
arpl
add
or
mov
arpl
add
dec
enter
or
cli
dec
pop
cld
out
sub
add
inc
adc
add
cmp
mov
jle
add
mov
mov
sbb
add
enter
jbe
jmp
lcall
mul
in
pushf
and
cld
mov
test
daa
jmp
jns
add
adc
inc
pop
rorb
ds
pop
sti
fsubs
test
ja
jge
or
push
mov
ret
jl
push
mov
cld
icebp
mov
jmp
std
fcoml
add
jnp
daa
std
loope
mov
sub
mov
push
lock
fildll
adc
clc
les
sbb
in
mov
jl
scas
iret
test
repnz
out
movsl
mov
cmp
xlat
in
cmp
lock
add
xchg
xchg
sbb
mov
jmp
call
pop
push
rol
pusha
cld
scas
cmp
enter
add
push
push
sti
in
dec
dec
jmp
lea
jb
adc
mov
movsb
movsl
lock
fildl
mov
sbb
or
push
push
mov
shl
inc
jo
add
icebp
jb
pop
jecxz
mov
push
add
pop
xchg
mov
mov
imul
loop
mov
jmp
mov
xor
stos
dec
add
adc
xchg
les
push
xchg
loopne
lock
out
mov
ret
bound
add
out
inc
cli
in
add
mov
inc
in
sahf
adc
mov
or
or
rcrl
sbb
dec
mov
cmp
pusha
out
test
cli
mov
in
into
adc
addr16
mov
call
dec
loopne
xchg
xlat
nop
mov
outsb
jnp
daa
cmp
test
mov
mov
inc
stos
or
xor
decl
mov
jp
test
push
xchg
jns
lret
fildl
mul
and
add
imul
inc
cld
mov
mov
dec
pop
jns
jnp
jg
cmpl
jne
adc
add
lret
jp
jmp
adc
push
enter
pop
jg
jnp
test
mov
inc
das
mov
das
in
repz
jbe
adc
add
fxtract
sub
test
rolb
nop
je
in
add
out
cmc
stc
in
aad
cmp
mov
call
add
pop
addr16
daa
mov
jb
fidivrs
inc
sbb
xchg
jo
lock
push
loop
mov
jmp
pop
pop
cld
es
pop
jmp
cmp
add
jb
mov
sub
mov
push
and
xchg
xchg
add
mov
jmp
mov
test
jns
mov
jmp
jp
xchg
js
ret
out
pop
inc
add
js
push
xor
add
jnp
inc
jne
fisttpl
lcall
sbb
jnp
inc
pop
aaa
jecxz
test
popa
push
rorb
or
add
or
incl
popf
jb
call
out
or
add
add
xor
jno
add
jo
lcall
test
sti
cmp
ja
test
jo
call
xchg
rcll
or
mov
cmp
mov
add
faddl
and
add
mov
mov
dec
inc
in
jl
inc
jnp
jb
lcall
je
popl
jnp
jnp
pop
stc
push
push
lret
jp
xchg
jnp
fists
jb
mov
jp
add
shr
mov
add
xor
adcl
add
mov
xorl
sub
inc
cmp
add
xchg
icebp
movb
clc
cs
dec
out
inc
add
add
js
dec
repz
fs
jnp
xlat
stos
mov
ljmp
xor
add
adc
enter
adc
inc
jmp
incb
lcall
mov
clc
out
xor
shl
push
mov
add
dec
imul
sbb
cmp
sbb
repnz
mov
push
arpl
loope
int3
mov
mov
mov
add
push
repnz
neg
mov
lods
mov
sub
call
xchg
inc
icebp
lret
loope
mov
jmp
mov
or
push
loopne
popa
add
mov
cmpsb
pop
push
bound
jae
mov
rolb
rolb
and
push
and
mov
addl
subl
subl
mov
adc
stos
mov
dec
xchg
inc
and
aad
mov
sarb
inc
jle
test
cs
mov
cmp
push
lea
jp
call
or
outsl
ljmp
in
popa
nop
add
push
roll
add
out
push
leave
push
mov
aad
add
ret
loop
je
popa
jmp
add
push
push
adc
popl
jae
in
insl
add
push
add
flds
clc
sub
inc
cs
push
incl
jecxz
cld
mov
insl
jns
jae
mov
jmp
dec
clc
out
int3
push
add
dec
clc
mov
in
jae
or
push
roll
jnp
add
jle
or
add
fdivrs
bound
test
rclb
and
fadds
jnp
leave
jae
fldl
mov
mov
addl
mov
stc
addr16
push
mov
dec
lock
arpl
xchg
test
mov
daa
lock
sub
add
ljmp
iret
push
push
mov
mov
cwtl
push
arpl
movsl
add
xor
pusha
ffreep
fneni(8087
add
mov
in
dec
add
cmpl
mov
sub
add
cmpsl
out
dec
sub
in
outsl
inc
add
je
inc
ret
mov
pop
clc
push
aam
xchg
add
sub
push
pop
aad
fldl
insb
cmp
or
pusha
add
jbe
and
cmp
jmp
mov
push
pop
mov
inc
shl
mov
sti
push
jae
lods
test
sub
lret
in
mov
mov
mov
ror
lret
es
js
pop
int
add
lds
or
jg
add
enter
push
or
paddb
loop
add
sti
aas
and
lahf
xchg
call
push
call
pop
aas
xchg
lods
push
adc
mov
mov
jmp
bound
add
push
jge
bound
leave
movsl
xchg
add
add
xor
hlt
add
adc
add
lea
lcall
mov
ret
scas
push
inc
xchg
aaa
std
jne
insb
inc
and
or
jnp
add
hlt
cmp
clc
sbb
pxor
add
jnp
dec
and
outsl
fsts
cmc
push
add
sub
call
data16
or
in
mov
mov
push
push
jne
cmp
mov
and
in
mov
adc
jnp
mov
test
push
out
push
and
push
daa
and
and
out
jnp
pop
and
out
mov
dec
push
test
mov
data16
pop
arpl
hlt
push
dec
loope
scas
or
cmpsb
inc
sbb
idivl
loope
add
sub
pop
hlt
add
sub
mov
cmp
jl
push
xor
scas
stc
jmp
insb
jmp
test
add
enter
mov
insb
aaa
je
mov
add
cvtpi2ps
cwtl
sub
scas
mov
add
adc
jecxz
js
ret
pop
imul
jmp
aaa
mov
shlb
cli
fisttpl
cld
xor
cwtl
ret
add
clc
add
jmp
cmp
adc
push
jb
imul
mov
mov
ja
ret
arpl
aam
push
push
push
fnstenv
inc
jmp
in
add
fmuls
jb
in
jb
push
adc
cmp
bound
pop
add
inc
ret
lcall
testl
push
push
xchg
lea
pop
jne
jecxz
xchg
scas
je
jge
mov
arpl
incb
fisubrs
cld
jbe
xor
cli
fucom
add
sub
sbb
lcall
add
cwtl
ljmp
xchg
pop
leave
mov
xor
mov
gs
mov
lods
nop
push
mov
lea
and
mov
incb
pop
adc
push
out
mov
xchg
lock
adc
jnp
pushf
jp
add
mov
sbb
sub
jp
cmpl
testb
arpl
xchg
push
pop
add
mov
rcl
repz
add
cli
jge
inc
lds
pop
cmp
jnp
push
or
mov
cmp
clc
add
scas
or
in
pop
adc
add
sbbl
fcomp
push
int3
mov
jg
jb
test
xor
mov
ret
inc
mov
ret
push
mov
or
xor
jnp
pusha
aam
dec
add
rcr
in
adc
dec
sbb
jae
push
mov
mov
imul
mov
add
push
jmp
jnp
add
jmp
add
je
xchg
jne
inc
mov
jp
jg
je
jbe
aas
xlat
push
push
push
std
out
das
push
insb
and
ficoms
sub
js
add
js
lea
cld
mov
js
add
lea
icebp
js
xchg
js
dec
aaa
clc
push
add
js
jo
in
add
jmp
add
dec
je
sti
into
or
add
and
mov
decl
xor
ljmp
jbe
push
in
pop
lahf
mov
jge
xorl
movb
mov
jmp
cwtl
push
lea
clc
mov
mov
add
ljmp
lods
int3
aaa
jne
out
mov
leave
loopne
add
sub
in
mov
inc
or
jo
sbb
jle
imul
xor
test
xlat
ss
mov
insl
inc
dec
pop
add
into
pop
fsts
push
inc
add
mov
mov
dec
or
inc
or
sub
adc
add
cmpsb
xlat
jg
xor
inc
jnp
sbb
xchg
mov
ds
incl
fnstenv
push
or
fnstenv
mov
movsb
dec
cli
xor
sbb
cltd
dec
add
sub
or
mov
and
mov
sbb
js
add
mov
insl
push
mov
push
and
fisubrl
incb
add
jmp
pop
add
lds
push
aam
or
add
cltd
lock
outsb
aas
fstpt
sub
mov
xor
es
dec
popf
jg
xlat
xchg
in
or
and
testl
push
xchg
inc
jnp
pop
ja
jmp
fnstcw
push
aad
mov
insb
mov
pop
mov
add
mov
sub
dec
pop
jmp
incb
xchg
pop
icebp
and
pop
jmp
add
icebp
mov
aaa
xlat
push
mov
movsb
dec
add
or
data16
sbb
mov
jns
inc
shr
mov
sti
push
jg
aas
out
pop
push
insb
jb
push
adc
add
lcall
add
cmp
sub
add
mov
or
clc
daa
add
inc
and
mov
inc
jle
cld
mov
xchg
jg
dec
popl
push
jp
push
add
vmread
jne
cltd
fisubl
adc
dec
adc
sub
addl
adc
adc
rolb
test
add
sbb
bound
sbbb
xchg
mov
jnp
inc
and
repnz
add
sbb
sarl
inc
pop
xor
jns
add
jl
inc
add
lret
push
je
cld
dec
add
jbe
ja
mov
rclb
jecxz
mov
xchg
jg
add
sub
cmp
mov
mov
jl
sub
add
mov
xchg
add
arpl
inc
xor
arpl
outsl
stc
or
jmp
insb
mov
adc
and
and
sub
mov
mov
pop
pop
mov
dec
cmp
inc
adc
jmp
xor
xchg
add
push
sub
fildl
in
mov
adcb
xor
mov
in
outsl
mov
add
enter
push
jo
jnp
pop
pop
xchg
mov
mov
jnp
add
cmp
or
add
es
cmovge
out
decb
push
addl
dec
push
jg
jecxz
xchg
mov
mov
movsl
jl
jmp
insb
repz
fwait
or
jmp
js
lock
inc
sub
jmp
jns
add
outsl
cmp
scas
push
ja
xchg
or
ja
hlt
add
adc
xchg
imul
add
add
or
cmp
sbb
or
bnd
orl
aad
mov
inc
add
xchg
and
xchg
cmp
mov
lea
cmpsl
xor
push
cmpsl
sub
adc
add
cmpsb
add
xor
mov
add
adc
push
lods
or
jae
test
js
adc
fsubrs
sbb
dec
sbb
xlat
jno
ljmp
cmc
aas
jnp
push
add
add
js
push
dec
adc
push
pop
sub
icebp
cmp
ret
pop
add
cs
out
incl
or
insl
or
push
fadds
insl
xor
jg
jge
add
jae
add
adc
inc
inc
add
jbe
jns
xor
push
lock
fdivr
jo
add
sbb
lea
push
xchg
flds
or
sub
cmp
pop
jnp
std
add
mov
pushf
lahf
jmp
ret
pop
lret
dec
addl
add
mov
in
mov
out
jnp
outsb
ret
enter
not
xor
xor
xchg
mov
inc
jnp
sub
or
jle
inc
push
or
and
or
mov
stos
lods
adc
cmp
mov
stos
sbb
ret
dec
scas
dec
xchg
ljmp
pmaddwd
jae
ret
push
inc
out
adc
ret
push
arpl
xchg
mov
out
filds
test
xchg
dec
adc
mov
add
xchg
dec
xchg
sub
adc
push
popa
sbb
inc
rolb
fs
xchg
dec
pop
add
je
add
mov
adc
inc
ret
or
add
xchg
roll
aaa
or
and
shll
xchg
xchg
rorl
add
into
push
je
sahf
ret
mov
add
jge
in
pop
fsts
movsl
jmp
pop
std
or
dec
addr16
incl
mov
rorl
std
add
add
sub
mov
add
and
push
int3
std
out
mov
je
pop
cwtl
movsb
shl
cmp
testb
outsb
lock
and
loopne
cmp
lock
in
insl
cli
mov
repz
pop
add
loopne
sub
cli
push
les
mov
and
loopne
sub
testb
std
out
dec
jae
pop
cwtl
test
loopne
cmp
sbb
push
add
jmp
pop
pop
mov
lds
xchg
lock
adc
jmp
add
cmc
jp
dec
adc
pop
pop
sub
jl
sbb
flds
jnp
fwait
aas
sti
xor
pop
push
icebp
mov
jl
push
and
mov
adc
lock
fstpt
leave
sarl
xchg
sbb
add
nop
jmp
fistps
push
lahf
jecxz
inc
dec
ljmp
inc
add
push
xor
ret
pusha
mov
jmp
ss
cld
test
cmp
inc
das
js
inc
mov
jge
add
sub
inc
push
inc
xor
jo
add
hlt
add
add
sbb
ficoml
jmp
jecxz
jo
adc
test
mov
js
ret
std
add
add
xor
jb
or
push
ja
add
mov
rolb
inc
inc
hlt
sbb
adc
mov
cmp
cli
mov
push
mov
rolb
inc
inc
loopne
les
add
cmp
adc
jl
fs
add
fimuls
jmp
pop
rcl
add
fucom
ret
leave
in
push
rolb
ret
push
mov
leave
ret
push
mov
or
adc
xor
jmp
idivb
jnp
ret
or
xchg
cs
add
add
fsub
mov
data16
iret
gs
add
lock
shll
out
lea
cmp
call
and
enter
jae
test
clc
inc
mov
pusha
mov
xor
lea
lock
div
push
adc
push
inc
iret
sub
mov
inc
outsl
movsb
ficoms
mov
dec
hlt
xchg
rclb
ficoms
clc
push
adc
add
mov
mov
push
insl
mov
sub
dec
sahf
hlt
stc
mov
mov
jecxz
adc
xor
cs
mov
add
aad
js
jmp
xchg
mov
mov
lock
repnz
mov
add
adc
xchg
xchg
push
add
js
ret
hlt
arpl
imul
or
sti
hlt
js
inc
jmp
sub
test
js
aaa
sub
jbe
adc
roll
dec
add
test
jne
sahf
popl
imulb
or
frstor
cli
cmp
fadd
cmp
adc
mov
rcr
cmp
lea
cld
scas
outsl
adc
and
loop
xchg
jmp
es
lea
dec
daa
push
xchg
push
aad
push
inc
popl
ja
inc
mov
inc
divb
inc
out
jbe
pushl
mov
idivb
mov
add
push
add
push
push
push
mov
int3
add
mov
add
mov
add
pop
gs
test
int
xor
xchg
add
lret
js
popf
mov
add
lcall
push
lcall
inc
push
inc
add
mov
clc
gs
mov
aas
add
jns
xchg
inc
daa
dec
jns
jne
jg
adc
jns
imul
inc
jg
lret
test
insb
jns
or
insb
cli
mov
xor
je
jne
aad
and
clc
call
cmp
mov
xchg
ret
aad
mov
jnp
mov
js
daa
sbbb
mov
js
sub
jmp
in
icebp
push
or
add
mov
xor
xchg
out
lock
je
clc
stos
hlt
shr
xchg
add
and
movsb
cmp
or
xor
inc
jnp
fcmovnu
stos
mov
jle
repz
in
test
mov
add
loop
lock
popf
sub
mov
add
lea
shl
add
and
push
loope
inc
fisubrs
ja
sub
mov
push
inc
jmp
pop
mov
insl
cmp
fisubrs
and
add
xchg
cmp
in
dec
jns
iret
fistpll
fldcw
jnp
mov
scas
adc
jns
mov
mov
cmpsl
add
mov
add
add
add
test
inc
jmp
fwait
jg
stos
sub
das
add
push
cmp
mov
mov
push
dec
aaa
fcom
lret
push
imul
xchg
mov
incl
mov
cmp
fcmovu
imul
adc
es
bound
pop
jbe
sti
adc
xchg
dec
ja
lahf
or
nop
add
mov
push
pop
sub
adc
mov
shl
lret
add
in
sub
adc
mov
pushf
loop
add
imull
add
mov
add
add
repnz
test
xor
into
and
add
adc
insl
and
dec
loop
rcrl
cmp
and
add
add
repnz
push
js
test
inc
bnd
out
lock
cmp
and
adc
xor
mov
testb
and
add
mov
call
mov
dec
jl
ja
jnp
and
mul
jmp
call
mov
rsm
adc
sub
mov
data16
ljmp
ficompl
xchg
mov
mov
outsb
les
jno
jnp
sbb
add
call
decb
push
xchg
and
ljmp
mov
push
jnp
fdivp
into
int
adc
in
jnp
sub
dec
fldt
cwtl
pop
add
js
push
out
jae
adc
ja
ret
push
add
psubusb
or
call
mov
dec
inc
or
ret
hlt
je
adc
ljmp
add
xor
es
jns
xorb
es
dec
and
das
mov
or
cmp
pop
and
jne
fs
ds
lods
push
inc
int
sub
inc
jmp
in
add
pop
inc
add
es
ret
push
sub
xchg
mov
push
inc
and
xchg
cmpsl
pop
dec
and
add
stos
les
sbb
push
orb
add
pop
and
addb
jae
in
jl
cs
mov
xchg
mov
das
cmp
nop
add
add
test
mov
push
push
loopne
mov
shrb
jnp
fistps
jl
inc
xchg
mov
push
mov
inc
mov
dec
lret
inc
xchg
lcall
aas
and
mov
and
mov
add
cmp
je
jae
cmp
adc
mov
adc
mov
xor
or
xchg
out
repnz
in
adc
test
dec
push
mov
movsl
mov
test
jmp
add
add
push
xchg
mov
add
xchg
fiadds
cmpb
cld
inc
mov
add
test
jg
push
or
mov
add
je
stos
add
mov
ret
and
fstps
out
mov
fwait
adcb
cmc
mov
mov
mov
out
arpl
scas
out
pop
and
push
xchg
repnz
jg
pop
mov
adc
das
inc
lret
push
ret
icebp
add
cmp
subb
xor
pop
push
inc
adc
inc
or
push
xor
jmp
mov
add
lds
divl
cld
jmp
push
bound
test
xchg
sub
jo
inc
or
push
imul
add
enter
cltd
jbe
test
repnz
icebp
cld
jmp
sub
xchg
push
add
rcll
add
add
dec
mov
sub
jl
aaa
lea
jnp
pushf
jne
sbb
push
push
int
sub
lret
es
hlt
jns
xchg
or
push
add
inc
or
or
xchg
add
push
push
call
sub
incl
sar
repnz
sti
mov
push
stc
sbb
ja
cmp
psraw
nop
or
cmpl
call
out
mov
cmp
gs
in
cmp
enter
scas
inc
scas
and
push
iret
inc
and
arpl
incl
mov
inc
loope
fcompl
ljmp
and
and
and
mov
int
mov
shll
pop
jnp
pusha
scas
stc
pop
mov
sub
xor
stos
xchg
test
mov
mov
and
jmp
fisttps
mov
pusha
dec
or
lds
push
dec
pop
add
xor
xor
in
aaa
roll
add
mov
inc
mov
movsb
adc
sub
cs
add
jb
fdiv
mov
pop
cmp
lcall
les
jmp
js
jbe
scas
adc
jmp
ja
xchg
scas
add
cmpsl
repz
js
jmp
jns
add
ljmp
pusha
cmp
mov
inc
add
out
stos
decb
aas
das
cld
jmp
addb
into
movsl
pop
je
pop
add
in
pop
add
out
ror
stos
sub
out
push
xor
add
fidivrl
jp
add
aam
dec
out
es
mov
aam
push
je
pop
or
addr16
rol
es
and
push
and
sahf
jecxz
push
xchg
lea
mov
push
dec
xor
enterw
dec
cmp
out
inc
call
inc
mov
add
mov
inc
push
daa
lret
es
fbstp
or
lea
jnp
push
lea
mov
lar
push
mull
jnp
repz
push
xchg
mov
out
mov
jle
mov
jle
mov
ds
aas
inc
adc
push
inc
in
jnp
add
add
test
jnp
push
pop
push
pop
sub
adc
aas
add
rorl
mov
and
testl
int
fs
popa
mov
push
sbb
rol
inc
add
push
rcrl
mov
sub
mov
mov
outsl
fsts
cmp
aas
pop
jnp
aas
push
and
test
push
jnp
pusha
or
mov
sahf
filds
mov
int3
add
in
push
imul
xor
pop
loopne
mov
lock
add
push
push
rolb
fistps
push
stc
sti
jmp
jg
test
jne
icebp
int
add
ja
outsb
fs
jge
xchg
clc
push
cld
push
nop
dec
add
repz
fxch
sub
mov
lret
add
mov
mov
inc
int
push
or
cmp
jmp
int
fst
sub
aam
test
push
sub
pop
mov
rcll
jmp
xlat
insb
std
call
xchg
mov
aad
and
inc
add
test
inc
and
push
add
cmpsb
sub
jb
push
and
dec
ja
add
and
loop
xchg
cmc
add
bound
aas
and
mov
add
adc
and
mull
loopne
lea
dec
mov
inc
mov
lea
mov
test
push
sub
ljmp
xchg
jp
rolb
rclb
pop
mov
sub
jnp
dec
push
cmp
mov
clc
std
add
outsl
loop
repz
mov
aaa
mov
mov
jp
inc
jl
outsb
inc
jbe
mov
lahf
pop
sbbl
mov
je
cmp
mov
cmp
cmpsl
mov
push
and
add
bswap
clc
std
incb
add
cmp
jne
mov
dec
call
out
std
fistl
xchg
mov
and
mov
sarb
inc
add
push
cmp
push
mov
xchg
outsb
lret
jo
jae
and
nop
pop
pusha
push
andl
mov
sbb
xor
lods
jo
clc
dec
call
jg
mov
fiadds
clc
dec
call
les
or
pop
jnp
stos
pop
cmp
jo
sti
aaa
stos
add
xchg
dec
arpl
add
jnp
jmp
add
push
insl
lret
jmp
add
add
cmp
adc
cli
arpl
jmp
call
es
in
cmpsb
mov
jmp
ja
jbe
cld
dec
cld
xchg
add
add
repz
lret
ficoml
es
jmp
js
inc
cmp
xor
mov
ret
insl
aaa
lahf
or
aas
mov
cmp
enter
cmp
jmp
sub
cld
test
jbe
shlb
ret
add
dec
call
push
xor
ret
in
popa
popl
push
dec
push
mov
push
lds
cmpb
bound
call
fimuls
push
shll
call
add
pop
add
inc
bound
adc
andl
rcr
inc
adc
push
and
leave
add
sbb
push
adc
mov
and
add
sti
adc
jnp
rcrb
xor
lock
add
xor
mov
aas
cmc
mov
lock
xchg
add
jmp
scas
jno
add
sub
inc
jnp
mov
xchg
and
sti
inc
cwtl
fdivrl
or
dec
or
xchg
incl
jnp
add
dec
icebp
incl
int
adc
repnz
fidivrl
mov
jg
jae
nop
push
xor
add
jmp
pushf
or
pop
inc
add
jo
fsubr
add
jnp
ja
add
out
mov
jmp
adc
popf
aad
outsl
repz
jnp
scas
push
dec
rcrb
mov
push
aad
test
insb
mov
or
imul
jp
sbb
inc
cmc
or
mov
jle
cmp
and
mov
aas
mov
sub
add
jae
mov
or
adc
shrb
es
add
or
cli
cmp
std
sub
add
js
int
jns
inc
xor
ljmp
dec
dec
fsubl
insb
pop
and
mov
sub
cld
roll
push
jb
jbe
orl
mov
mov
lret
push
lea
je
mov
mov
dec
imul
stos
mov
mov
xor
add
outsl
aam
push
dec
adc
sti
insl
repnz
mov
movsb
mov
popf
or
add
jg
in
add
call
lea
inc
dec
fs
jmp
add
arpl
mov
std
jne
or
les
inc
add
cmc
sti
add
sarl
inc
and
xchg
jmp
into
and
add
jnp
repz
popf
rcrb
mov
mov
mov
idiv
jbe
add
xor
sub
jae
pop
xor
add
push
sub
jnp
inc
and
add
lds
xor
pushf
scas
inc
and
arpl
add
push
mov
adc
mov
inc
xchg
xchg
lahf
push
scas
adc
and
icebp
xor
gs
cmpb
dec
push
lea
mov
add
jmp
dec
push
ja
lods
add
pop
ljmp
pop
ljmp
pop
mov
jle
addr16
jle
addr16
mov
pop
ret
call
add
orl
pusha
mov
mov
ds
clc
addr16
jg
addr16
jnp
addr16
add
cwtl
lds
sbbb
cld
icebp
iret
add
pop
adcl
cmp
in
call
adc
add
js
sbb
cmp
push
adc
lea
mov
sbb
mov
daa
pop
sub
mov
push
inc
jbe
leave
iret
rcrb
jg
and
push
rcl
add
fisttpll
icebp
add
mov
test
pop
sahf
out
mov
push
call
pop
sbb
das
xchg
xchg
mov
pop
call
or
jg
rorl
push
call
mov
inc
add
setge
cmpl
in
outsb
mov
add
jbe
stos
test
incl
movsl
popf
mov
and
add
cmp
xchg
movsb
jg
test
adc
jmp
sahf
push
add
ret
jnp
cmp
js
push
sub
push
push
mov
inc
jge
mov
sti
jmp
aam
or
fcomip
out
outsb
push
add
out
mov
neg
gs
lret
cmpsl
mov
ja
shr
lcall
jne
clc
repz
dec
cld
test
jae
or
test
cmpl
dec
xor
mov
dec
push
push
lds
inc
sbbb
jmp
test
dec
xchg
in
jl
pop
adc
mov
jne
jnp
jb
sbb
add
add
sub
dec
add
imul
mov
jmp
out
rcrb
sbb
sti
xor
jmp
sti
pushf
cmp
add
push
sub
jg
sub
sbb
ljmp
sbb
jae,pn
mov
add
dec
add
mov
xor
sbb
inc
fstpt
add
mov
orb
pop
xlat
pop
lret
and
cld
jmp
loopne
clc
inc
and
ret
out
insb
in
jmp
add
sti
and
dec
icebp
sub
jmp
test
dec
jmp
jg
add
lahf
or
divl
leave
call
fcompl
popa
xor
mov
mov
xor
outsl
adc
jne
mov
mov
and
jbe
scas
fs
dec
jo
lea
out
std
jne
notl
lods
repnz
lahf
pop
ljmp
pop
call
pop
dec
jmp
push
insl
jl
adc
mov
inc
mov
xchg
add
daa
clc
call
call
pop
pop
call
jl
pop
aad
mov
mov
push
push
lds
push
xchg
jnp
add
xchg
movsb
lock
cmc
cmpsl
js
and
pop
or
adc
xchg
dec
lods
movsl
cmp
ss
shll
or
icebp
sti
dec
in
dec
push
add
and
jae
movsl
mov
jecxz
cs
call
icebp
out
pop
cmp
mov
dec
add
imul
pop
pop
push
aad
sahf
in
movsb
out
add
xor
pushf
das
ja
test
clc
cmpsb
mov
xchg
sbb
sbb
icebp
xor
jns
cmp
sbb
addl
mov
mov
dec
lock
push
inc
push
cmpsl
cmpsl
inc
mov
adc
pop
adc
xor
cmpb
sbb
sahf
pop
nop
add
icebp
add
push
shrl
pop
mov
mov
sbb
xchg
es
mov
pop
test
outsl
add
ficomps
leave
call
into
lahf
push
mov
jo
add
js
les
adc
dec
inc
add
push
repnz
add
bound
out
mov
js
add
mov
push
pop
mov
mov
in
rolb
pop
push
push
cli
add
jmp
ljmp
and
mov
jno
mov
sub
jns
dec
es
mov
inc
jmp
enter
rclb
ret
push
andl
add
jno
push
je
add
je
push
add
jle
in
stos
nop
add
fidivrs
mov
lcall
gs
xor
insb
scas
push
mov
or
decl
lahf
jl
inc
pop
shl
add
cltd
stos
push
lret
inc
pop
jae
xchg
jnp
add
test
mov
enter
inc
aaa
mov
xor
xchg
cmc
lock
bound
pushf
jno
test
rclb
aaa
call
add
add
ss
inc
scas
dec
cld
sub
call
lds
xor
aas
pop
sbb
cmp
insl
push
jle
or
call
xor
pop
test
add
add
test
sbb
movsl
mov
push
repnz
mov
mov
add
mov
negl
pop
dec
dec
and
cmp
adc
jnp
outsl
vmovdqa
add
add
mov
adc
out
mov
add
test
imul
mov
pusha
cmp
mov
pop
mov
mov
cli
add
push
enter
jle
jle
xor
test
mov
jge
push
jg
adc
pop
push
icebp
jns
or
lea
sub
adcb
xlat
addb
pop
ret
add
incb
cmp
mov
add
xor
pop
mov
xchg
ret
xor
lret
or
pop
add
int
dec
mov
loop
out
xor
out
inc
test
dec
add
fnstcw
or
pop
in
mov
aaa
lret
push
mov
push
dec
inc
pop
jae
add
inc
stos
mov
hlt
cmp
jae
inc
fwait
mov
andl
sub
jg
and
pop
test
and
push
add
iret
jecxz
int3
les
cmp
xlat
test
add
cmpsl
je
scas
adc
clc
dec
add
lahf
aas
add
mov
jp
popl
sub
adc
mov
adc
sbb
clc
fimuls
mov
or
rcr
add
loop
add
loop
xor
xor
add
xchg
adc
jae
adc
mov
mov
mov
xchg
add
enter
xchg
mov
enter
mov
sarl
mov
xchg
ret
xchg
stos
fwait
sahf
daa
xorl
sub
popf
lea
mov
subl
xchg
les
cmp
insb
jbe
repnz
mov
ja
and
push
xchg
call
add
cmp
xchg
icebp
pushf
mov
sub
lock
and
jg
xor
jmp
inc
xchg
in
and
call
popf
dec
pop
jmp
xchg
pop
cmp
push
mov
adc
add
js
push
cmp
fwait
xor
jbe
and
comiss
repnz
and
xchg
push
fwait
add
out
pop
dec
add
jg
js
out
andb
call
rcll
in
mov
jbe
call
pop
push
push
popa
aam
cld
ror
add
dec
es
xor
mov
ret
aad
inc
add
mov
add
icebp
pop
das
incl
sbb
adc
xlat
cmp
psadbw
sti
je
add
xchg
add
daa
push
mov
sub
call
mov
mov
lret
jnp
inc
and
push
xchg
jae
inc
cltd
aad
jecxz
test
and
add
loopw
inc
popa
adc
fs
add
jecxz
mov
and
mov
push
decl
cld
push
mul
sub
cwtl
jae
inc
cltd
aad
arpl
test
and
add
adc
notb
insb
add
rorl
mov
inc
xchg
jp
ljmp
cmc
aas
jnp
adc
push
mov
jp
outsb
jg
xchg
ljmp
sbb
shll
jl
sub
push
mov
or
sub
ljmp
mov
xor
inc
lcall
jnp
add
loopne
jnp
push
sbb
xchg
fisttps
fnsave
and
jns
jnp
out
mov
add
dec
push
pushl
or
cltd
add
loopew
inc
dec
jmp
test
add
sarb
enter
lods
push
bound
mov
testl
add
dec
add
dec
or
stc
adc
xchg
stc
cmp
test
addb
call
enter
enter
jns
add
xchg
rorl
outsl
add
or
jmp
jae
ljmp
lea
cmp
add
and
jb
pop
shlb
add
adc
add
vpmacsdqh
dec
and
add
adc
xchg
std
lea
or
push
fstpl
and
mov
sub
lea
push
ljmp
push
ljmp
int3
lea
ljmp
push
xchg
or
xchg
and
add
mov
mov
cld
push
enter
jnp
add
divl
adc
or
inc
shlb
addb
dec
out
scas
loop
lret
xor
fisttps
mov
je
hlt
mov
mov
push
add
dec
sub
lea
incb
sub
incl
dec
cwtl
cli
mov
nop
inc
decl
decb
into
add
push
out
add
mov
insl
inc
and
cmp
pop
add
xor
jns
decl
or
sub
mov
call
mov
adc
shr
add
lret
cmp
pop
subb
xchg
mov
dec
jmp
rcl
hlt
leave
xchg
xchg
jne
xchg
or
add
sbb
cmp
outsl
mov
test
sub
mov
mull
outsl
pop
sub
xchg
mov
aaa
dec
or
add
add
setnp
imulb
push
jl
aaa
push
jg
bound
and
jae
jo
mov
repz
jmp
aas
xchg
cmpsb
jl
push
xchg
andl
pop
jg
sbbl
mov
jbe
xchg
sti
aam
pushf
inc
jmp
js
xchg
rep
mov
jle
subl
fldl
js
lds
add
mov
out
in
jmp
pop
mov
add
jp
inc
add
aaa
test
dec
add
inc
and
mov
push
jg
cli
fs
call
pop
inc
push
mov
cld
aad
mov
push
jg
lret
jmp
xor
and
ja
test
xor
pop
and
fmulp
sahf
cmp
inc
xchg
jae
inc
xchg
outsl
push
sub
pop
movsb
mov
cs
jg
das
push
mov
jg
clc
sub
hlt
sub
add
cmc
stos
test
push
sbb
in
jnp
dec
add
incb
clc
sbb
repz
inc
pop
test
ljmp
jae
aaa
call
mov
cmpsl
mov
jge
hlt
hlt
sahf
xchg
data16
adc
add
cmp
xor
mov
adc
or
cs
add
mov
movsl
jo
xchg
push
mov
pop
and
test
gs
fwait
push
or
dec
sub
xor
loopne
dec
test
add
mov
mov
int3
or
jns
fmulp
pop
daa
dec
sub
ret
inc
cmpsb
lcall
mov
scas
pop
scas
into
arpl
mov
sbb
fcoms
inc
bound
mov
xor
inc
inc
xlat
aaa
loop
dec
stos
push
cmpsl
mov
cmp
out
bound
das
jge
inc
sub
mov
mov
scas
shlb
addl
inc
aaa
pop
and
aas
daa
pop
and
inc
aaa
js
into
mov
mov
daa
xchg
xchg
enter
xor
dec
jge
inc
mov
sbb
dec
int3
pop
lds
pop
into
jecxz
xchg
cwtl
ljmp
cmpsb
ja
into
jecxz
mov
into
mov
or
sbb
pop
inc
int3
movsl
xor
sbb
sbb
ljmp
inc
bound
dec
ljmp
arpl
add
stc
in
push
fldenv
sub
xchg
add
les
push
fstpl
inc
add
stc
inc
push
bound
mov
lcall
std
call
add
mov
sbb
inc
shlb
fidivrl
mov
mov
cmp
adc
outsb
and
jl
sub
push
add
mov
mov
lret
or
fnstsw
in
mov
lret
fsubrl
jnp
mov
cmp
jge
add
mov
sub
or
mov
sub
cli
lahf
imul
jae
xor
add
mov
jnp
faddl
stos
ds
add
add
js
sahf
jp
or
jge
jmp
aaa
divb
dec
loopne
jmp
pushf
int
ljmp
das
fadds
adc
faddl
out
jle
dec
pop
mov
add
and
xor
mov
xor
inc
jnp
test
lods
push
aaa
mov
push
outsl
arpl
add
pop
jp
jmp
add
popa
add
clc
outsb
cmc
push
push
out
add
mov
rolb
mov
and
ds
lcall
and
pop
fwait
and
and
push
cmc
push
sti
fdivrl
inc
jbe
icebp
inc
cli
pop
cld
inc
lcall
add
into
out
movsl
call
js
jbe
xchg
mov
inc
out
jbe
fstpt
repz
js
mov
adc
ljmp
inc
cli
mov
inc
mov
inc
add
push
push
mov
mov
lcall
test
test
and
call
mov
cmp
adc
add
adc
xchg
pop
pop
dec
mov
xlat
stos
push
and
xchg
add
mov
setle
mov
push
jnp
adc
adc
mov
xchg
lock
dec
mulb
cld
fsubl
push
jecxz
dec
outsl
mov
lahf
mov
repnz
add
mov
mov
je
pushl
jge
fisttpl
cwtl
outsl
xor
incl
outsw
clc
pop
in
push
arpl
jo
jae
pop
orl
stos
in
inc
and
xchg
and
mov
addr16
rclb
or
jl
add
xchg
lcall
aam
jmp
mov
packuswb
inc
xor
mov
mov
imul
lcall
incl
jp
add
mov
dec
push
insb
jno
hlt
xor
repz
mov
enter
negl
rorl
je
jmp
add
adc
push
pop
push
mov
pop
xchg
js
dec
aaa
dec
push
mov
or
sti
xchg
shll
jmp
data16
sti
data16
enter
lea
cmp
mov
fs
dec
push
rorb
je
cld
negl
add
pop
repz
sti
fs
cmp
lock
cmp
pusha
sti
sti
imul
repnz
lods
dec
mov
not
repnz
sti
mov
xchg
lea
cmpsl
push
repz
in
mov
add
push
xchg
mov
insb
in
movb
loopne
xchg
std
call
xchg
test
test
std
lcall
jl
stc
cmp
adc
cld
ss
add
mov
cmc
cmp
xor
shlb
incl
adc
pop
inc
pop
push
lea
sub
add
je
inc
fmull
add
jnp
repnz
push
mov
sbb
sbb
push
cwtl
jle
cmp
jl
jge
je
rorl
in
in
jb
jecxz
mov
insb
das
mov
pusha
mov
sub
jnp
jl
test
cmpl
js
mov
push
das
push
jl
pop
adc
loopne
add
mulb
negl
decb
cmp
ds
int3
xor
adc
lea
or
sbb
mov
add
fldt
add
stc
mov
adc
in
stc
sbb
xorb
pop
pop
and
push
and
add
xchg
test
jmp
clc
into
fldl
jp
pop
adc
mov
and
jnp
fiadds
dec
jmp
jmp
add
mov
push
pop
aaa
cmpsl
mov
cmp
aad
in
sbb
push
sbb
xchg
push
scas
mov
daa
icebp
mov
ja
xchg
js
push
insb
mov
ljmp
mov
mov
jo
sti
mov
bound
xchg
add
jmp
adc
add
js
sti
in
insl
xchg
dec
sbb
xor
roll
pop
sbb
inc
dec
cli
jbe
loope
push
orl
jne
xchg
jb
ret
pop
call
adc
je
add
jb
call
add
mov
add
repnz
pop
adcl
mov
popa
nop
cli
add
xchg
mov
out
sbb
loop
mov
test
adc
lea
pop
pop
nop
dec
add
jnp
lcall
mov
test
addr16
jae
adc
adc
repnz
add
lock
int3
mov
xchg
inc
add
mov
push
int3
loope
jp
jl
xchg
addl
popa
aaa
or
popa
aaa
or
popa
pop
adc
pop
adc
imul
add
add
lock
pop
hlt
jp
add
xchg
mov
mov
cmpl
xchg
mov
push
mov
jmp
xchg
test
jbe
xchg
test
divb
push
dec
int3
add
add
or
lret
fisttps
sbb
icebp
int
and
mov
xchg
test
or
jmp
insb
das
push
jmp
add
dec
loope
xorl
cltd
sub
push
jne
xor
rep
leave
rcrb
add
push
push
aam
mov
mov
clc
ja
xor
jmp
mov
addb
sub
xchg
xchg
jg
cwtl
mov
mov
push
es
lods
sti
hlt
jl
inc
jmp
dec
cmp
out
inc
divb
add
in
xchg
inc
jg
sti
stc
lahf
pop
sti
mov
mov
cs
jg
xor
orb
stc
lods
add
mov
mov
in
push
cli
add
shl
sbb
xorl
ret
repz
nop
mov
mov
push
mov
ja
cli
jmp
out
addl
dec
cld
inc
dec
add
or
sti
push
jne
call
add
dec
pop
pop
fisttpl
inc
sar
inc
or
fwait
mov
add
push
mov
out
push
inc
or
pop
mov
lods
rcll
push
cli
jmp
in
cmpb
push
dec
imul
mull
adc
add
xchg
jle
push
mov
pop
jae
addr16
jbe
add
gs
pusha
in
fsts
fcoml
jnp
ds
scas
imul
add
sub
lock
call
lret
and
add
jp
or
aad
add
aas
pop
inc
stos
inc
pop
jnp
jmp
mov
mov
mov
and
pop
push
mov
cmp
pop
jmp
mov
clc
or
and
fs
test
sti
jmp
in
pop
icebp
jbe
add
hlt
cmc
pop
jecxz
fildl
inc
enter
push
dec
rcl
fsubl
push
mov
add
movsl
mov
shr
faddl
pop
jl
dec
jge
mov
mov
sbb
inc
ja
bound
ja
jo
loope
lods
and
inc
inc
or
mov
shl
stc
inc
and
in
jl
bound
mov
out
pop
push
jo
xorl
icebp
icebp
ds
jb
lods
shrl
cmpb
jl
push
ja
push
jb
call
xchg
in
jmp
idivb
int
lods
ja,pt
jg
jae
push
add
adc
cmpsl
jae
dec
dec
add
mov
mov
sti
jbe
addb
int3
test
ret
repz
push
mov
mov
notl
orl
test
test
ficoms
jne
inc
mov
dec
cmp
cmp
inc
int3
sti
scas
and
xor
inc
shl
mov
repz
sbb
jbe
and
add
add
add
pop
and
cli
and
add
lock
jle
jg
inc
je
gs
ror
jmp
sbb
negb
setae
push
add
inc
jae
jge
mov
mov
jge
add
push
mov
add
mov
mov
xlat
mov
jne
jg
inc
ljmp
push
push
xchg
test
jnp
push
call
repz
jge
push
ret
popa
mov
xchg
pop
aad
jl
ja
mov
ljmp
out
mov
pop
idivb
sub
popa
jmp
cmp
dec
jmp
jl
psubb
je
and
jle
ljmp
dec
sub
enter
addr16
clc
ret
xor
inc
add
in
and
sbb
mov
jnp
add
mov
jmp
jg
cmp
mov
xchg
add
outsb
loop
loop
push
and
ds
cld
jl
xor
shll
add
insl
xchg
push
dec
pop
ret
aam
mov
sti
jmp
repz
ficomps
stos
mov
stos
js
sti
push
leave
pop
ret
xchg
fsubs
js
push
pop
cmp
cld
aam
lcall
iret
mov
pop
mov
mov
popa
movsl
cmp
mov
add
add
and
mov
lea
push
decl
fisttpl
out
incl
pop
cmp
cld
sbb
mov
push
cmp
add
mov
inc
cli
pop
pop
std
lcall
std
aam
addl
cld
call
call
testl
aam
push
jnp
iret
adc
xchg
jp
mov
mov
addl
ljmp
mov
or
clc
mov
incb
pop
push
roll
add
mov
add
push
add
push
adc
call
adc
test
push
jns
mov
inc
sti
jmp
imul
mov
test
imul
or
int3
cmp
je
add
inc
fs
dec
jmp
add
sbb
daa
push
inc
ljmp
in
cmp
mov
idivl
add
jnp
push
push
ds
mov
mul
aad
adc
jmp
adc
mov
jno
scas
pop
pop
add
add
sub
jge
scas
pop
test
cmpsb
dec
rcl
adc
dec
add
ret
pop
fsubrp
xchg
adc
ja
jle
jg
xchg
adc
sti
testb
flds
js
push
rorl
mov
paddb
pop
add
jmp
loop
imul
pop
jmp
add
lds
int3
and
push
mov
jle
add
xchg
mov
sti
add
iret
pop
in
jmp
sti
push
in
add
das
rclb
mov
or
cld
add
ljmp
sbb
inc
adc
cmp
stc
push
push
mov
add
pop
mov
add
call
jne
popa
push
dec
fmul
sti
sbbb
scas
add
sub
mov
bound
add
int3
sti
scas
xchg
jne
xor
into
movsl
mov
nop
enter
mov
dec
cmp
or
sbb
jne
mov
nop
call
inc
lods
lea
dec
fcom
shrl
ss
sbb
fidivl
adcb
mov
lods
rclb
rorb
mov
repz
adc
cmpb
mov
enter
repz
lret
rorl
jb
push
stos
push
xor
xor
lret
cmp
pop
shr
xlat
ret
in
mov
addl
push
push
sti
dec
or
xor
out
je
mov
fstpl
push
xor
lret
addl
push
sti
mov
inc
fcmovnb
xchg
xor
mov
rclb
add
sbb
add
insb
sub
test
push
inc
and
iret
fidivrl
test
mov
jecxz
fimull
addl
xchg
add
test
sub
aas
mov
push
mov
lcall
adc
mov
xchg
add
adc
inc
inc
push
inc
add
inc
mov
fsubrl
jg
xlat
jg
jnp
jmp
outsb
pop
cmpsb
adcb
ja
in
aas
dec
add
dec
ficompl
popf
in
sub
mov
jmp
lea
jb
adc
fs
repnz
dec
add
adc
inc
bound
clc
imul
call
out
call
incl
dec
pop
pop
sbb
dec
je
mov
pop
cs
mov
push
shlb
iret
sti
push
adc
mov
xlat
jecxz
stos
mov
adcl
test
xchg
inc
pop
rorl
lahf
rorb
fisttps
in
stos
das
rcr
push
psrlq
imul
pop
mov
movsl
jo
je
clc
mov
ret
jmp
adc
loopne
pushl
jae
jns
jo
icebp
mov
ja
fnsave
cmpsb
mov
adc
lds
cmp
incl
mov
jno
jns
data16
jge
jg
mov
je
cld
pop
ljmp
incb
add
fcoms
xor
notb
jecxz
inc
or
jmp
jl
or
jmp
xchg
add
lea
icebp
push
icebp
pop
sbb
lret
xchg
dec
fnstcw
mov
adc
mov
in
cmpsb
mov
pop
push
fidivl
xchg
jo
xor
dec
or
pusha
dec
inc
cmp
outsb
add
loop
fsubl
sub
ret
jnp
stos
testl
cmp
jmp
jmp
or
cmp
insb
and
sti
dec
test
sub
loope
movsb
jnp
xchg
fucom
sti
cltd
shlb
js
ljmp
xchg
pop
scas
aaa
rol
icebp
js
xchg
add
push
bound
jl
jmp
dec
lret
jmp
xchg
add
int
add
pop
ja
xlat
mov
push
inc
lock
int
pusha
mov
cmp
lahf
rorb
call
sbb
xor
shll
inc
inc
pop
leave
inc
push
mov
and
add
test
mov
push
inc
bound
les
add
or
ret
push
lea
push
cmpsl
or
add
lea
lea
or
lea
add
or
shll
lea
push
cmpsl
or
push
decl
mov
add
pop
aad
mov
push
xlat
add
decl
jp
mov
lods
pop
flds
notb
imul
mov
pop
pop
push
hlt
incl
gs
incl
mov
jmp
je
jnp
call
mov
jp
add
incl
or
incl
repz
incl
addr16
decb
inc
incl
mov
add
jp
int
addl
jae
jbe
add
test
add
loopne
mov
mov
mov
jle
jp
insl
popf
enter
push
push
push
loope
in
add
jbe
mov
inc
sub
mov
xchg
outsb
test
fistps
mul
in
add
imul
jnp
fwait
cmp
mov
xor
mov
pushf
stc
sahf
mov
xor
sbb
imul
add
ss
ret
ljmp
pop
mov
movl
lea
push
or
push
emms
pop
push
icebp
or
fs
xchg
jnp
lea
jp
ret
xchg
push
pop
lret
or
call
add
xchg
cmc
push
jne
js
gs
jp
das
negl
jb
mov
dec
std
adcl
add
xchg
cmpsb
cmpsb
push
clc
mov
xchg
mov
cld
jno
mov
inc
add
inc
outsl
add
testb
jmp
xchg
ret
pop
callw
clc
incl
popa
inc
jecxz
add
push
daa
sti
out
sub
add
lret
jo
jle
shr
testl
mov
mov
setbe
cld
call
pop
xchg
or
mov
add
sbb
sub
incl
test
add
pop
lret
mov
test
pop
lret
or
imul
lock
push
add
rcrb
leave
pushl
imul
jno
push
in
imull
jno
jecxz
imul
xor
push
jae
adc
xchg
js
add
sbbb
jno
addr16
jae
leave
dec
jbe
pop
ljmp
in
ja
add
lds
mov
add
daa
imul
inc
movsb
enter
pop
pop
push
inc
cld
out
mov
jae
out
cmp
jmp
jnp
fbld
push
adc
xor
adc
add
jmp
sti
insl
xorl
lock
mov
add
ret
bound
imul
roll
inc
or
fiaddl
notb
ds
out
mov
push
lahf
fnstenv
xchg
jg
sti
mov
lret
repz
int
ljmp
icebp
jne
mov
ds
adc
fnstenv
and
fstpt
or
inc
dec
das
xchg
sub
or
ret
clc
add
mov
jo
xorb
add
or
inc
int
sarb
mov
mov
lahf
pop
outsl
popa
xchg
out
adc
roll
cltd
sbb
add
push
inc
loopne
dec
outsl
push
pop
xchg
ficomps
or
sbb
xlat
mov
or
cmc
jno
decl
mov
adc
push
add
loope
shrb
add
mov
cltd
por
or
cld
movsl
pop
add
inc
sahf
ret
push
callw
mov
out
jo
add
imul
in
xor
pop
lret
lahf
push
cmp
jnp
dec
jne
mov
incl
addr16
mov
insl
std
cmp
fidivrl
mov
inc
mov
jle
fwait
sbb
pop
inc
shl
or
pop
hlt
mov
gs
clc
mov
cmp
sarb
and
push
mov
xor
pop
rclb
daa
sti
sbb
pusha
out
pop
adcl
icebp
jle
jns
arpl
jno
cmp
out
pushf
test
and
sbb
mov
movsl
out
add
xor
lods
xchg
mov
jge
out
xor
roll
pop
sarl
push
xorb
dec
rol
int
add
jns
inc
dec
mov
jle
push
cmp
fwait
add
mov
push
bound
mov
mov
std
inc
add
shl
out
mov
loope
or
into
js
hlt
sub
mov
shl
xchg
add
mov
dec
lret
ret
addl
push
out
push
loop
out
push
int3
mov
or
pop
cmpsb
or
or
or
add
jg
es
sti
mov
and
and
mov
push
jnp
push
mov
xchg
pop
lcall
xlat
mov
add
and
xlat
or
inc
mov
pop
push
dec
test
mov
inc
movsb
pop
mov
lret
ret
mov
mov
jp
dec
aam
rorl
mov
or
gs
add
inc
mov
push
sub
repz
push
xchg
icebp
mov
jnp
rcll
jnp
decl
mov
jmp
incl
test
jge
mov
insb
pushf
or
rolb
jp
incl
fninit
clc
mov
popa
pop
fs
clc
arpl
add
rcr
or
js
outsb
cmpl
mov
call
jl
je
mov
aam
or
push
bound
push
add
jl
inc
enter
dec
aam
adc
or
add
sahf
mull
dec
ljmp
test
mov
or
dec
fchs
ja
cmp
clc
xchg
addr16
push
jne
jnp
push
pop
push
test
jp
jmp
out
mov
add
dec
cltd
mov
out
es
jmp
in
ljmp
xchg
inc
jns
jp
mov
aam
cmc
pop
dec
push
pusha
cmp
aaa
cmpsl
cwtl
dec
fdivl
jg
cmpsl
add
mov
bound
mov
inc
xchg
inc
repnz
mov
cmp
jg
jne
sti
aam
jns
jmp
int
xchg
xorl
ds
ret
cmpb
cmp
push
or
add
js
xchg
js
dec
add
mov
mov
cld
inc
add
leave
int3
scas
jge
jmp
mov
lock
les
mov
ds
push
std
jne
imul
cmp
sti
pop
cmp
mov
lock
hlt
add
pop
lds
roll
cmp
mov
mov
cmp
xchg
lea
add
push
in
add
sarl
inc
sub
str
nop
add
add
sarl
andb
push
jne
sbb
mov
js
loope
sbb
mov
decl
shl
pop
je
pop
xor
into
ljmp
inc
sbb
fisubl
aaa
jb
call
lock
jp
sbb
mov
test
decb
or
mov
lods
filds
sbb
mov
mov
decl
divl
rolb
pop
or
fs
mov
xorb
add
negb
pop
movsl
add
sub
data16
clc
push
leave
add
inc
test
pop
xorb
insb
sbb
or
cmpsb
pop
call
shrb
mov
dec
or
add
adc
mov
xchg
stos
sub
movsb
stos
daa
repnz
stc
cmpl
aam
pop
jns
add
xor
dec
test
iret
fdivrl
jg
xorb
int
ja
sar
jmp
pop
jne
sub
inc
div
lods
xchg
dec
shrl
inc
std
add
jb
xor
aaa
scas
cwtl
jle
and
jecxz
sub
inc
inc
repnz
repnz
ret
jmp
int
add
cmp
pop
mov
fnop
sti
div
aas
repnz
dec
add
push
test
enter
idiv
add
js
inc
add
aaa
rcrl
and
mov
mov
call
jae
and
or
cld
push
xor
add
bound
or
mov
mov
mov
loopne
add
data16
test
add
in
ja
xchg
enter
mov
jmp
test
mov
adc
lcall
fwait
add
mov
arpl
jnp
push
cmp
ss
sti
loop
clc
and
je
in
mov
dec
push
add
dec
cmp
in
cmp
test
in
out
incl
push
lock
in
out
jne
cmp
add
jae
rorl
daa
push
inc
xchg
jnp
sti
and
pop
mov
jecxz
inc
add
aas
add
rcrl
shll
repnz
jmp
jmp
mov
xor
mov
shlb
pop
pop
jnp
std
sbb
cmpsb
inc
sub
mov
sbb
add
xor
jnp
cmp
jp
mov
or
pop
in
mov
mov
or
aaa
testl
xorb
movsl
add
adc
loope
cmp
jne
icebp
add
imul
mov
loop
jecxz
int
sub
dec
push
inc
jg
add
mov
xor
enter
sti
sbb
jecxz
mov
js
xchg
sti
les
jb
xchg
aad
mov
fldl
leave
jbe
test
and
cld
inc
sti
ss
pop
add
cmp
or
shr
dec
cmp
out
fimull
inc
adc
or
dec
add
push
mov
inc
and
xchg
test
mov
sbbl
fs
cvttps2pi
add
dec
roll
shl
pop
sarl
sbbb
mov
cmp
fistpl
add
jmp
xor
dec
cltd
add
or
es
cld
mov
mov
test
adc
pop
incb
daa
or
inc
cmp
leave
push
mov
aas
pop
incb
hlt
sub
sub
rorb
repnz
xchg
or
rorb
insb
dec
mov
or
outsb
negb
add
mov
aaa
push
add
roll
mov
mov
xor
cmp
out
pop
bound
inc
call
das
pop
idiv
test
mov
movsl
jg
decl
add
mov
jnp
push
pop
adc
adc
ret
lods
xor
pop
scas
jns
pop
cld
icebp
aam
push
addr16
aam
or
or
rol
push
lds
add
outsb
outsb
inc
sub
push
incb
enter
pop
mov
jp
mov
jo
call
shrb
cmp
add
pop
mov
cwtl
data16
jmp
push
add
call
cli
imul
dec
add
js
pop
jge
dec
adc
jl
std
testb
stc
jbe
xchg
out
leave
lea
jp
cmp
add
push
jbe
dec
loope
add
stos
cli
loop
adc
add
sub
mov
add
pop
or
add
add
adc
jne
daa
aas
sbb
into
aas
adc
xchg
sti
fdivl
push
popa
mov
sub
pop
or
xchg
aas
mov
inc
and
or
shld
shll
rcll
jnp
out
cmp
decl
cli
imul
test
sbb
push
incl
cld
jne
ficomps
or
inc
mov
add
mov
nop
dec
fisttpl
test
lahf
push
je
xor
std
std
pop
inc
mov
mov
arpl
loop
imul
jnp
mov
mov
jnp
int3
sbb
and
ljmp
jne
daa
add
cmpsb
mov
push
test
cmp
jl
pop
mov
call
cmp
lea
in
dec
jns
popw
jo
add
sti
pushf
mov
cld
int3
pushl
cmp
inc
loopne
test
inc
jg
xchg
jge
outsl
mov
jl
jg
std
mov
inc
jge
xchg
or
adc
push
mov
imul
mov
adcl
xchg
add
ret
std
rolb
jnp
xor
sbb
imul
mov
addl
jge
jl
xchg
and
add
xor
lret
adc
pop
pop
repz
add
ss
jnp
nop
and
dec
in
jle
adc
popa
pop
xchg
jle
sbb
add
adc
add
add
inc
sub
and
les
pop
lock
orb
jmp
dec
adc
sbb
jmp
jg
dec
in
js
and
sti
jmp
cwtl
mov
and
adc
bound
adc
push
dec
ljmp
mov
mov
add
push
ljmp
mov
repnz
decb
jae
mov
shlb
push
fcmovne
sbb
iret
mov
inc
and
ljmp
mov
pop
fldl
or
push
fiaddl
call
lahf
inc
or
insl
mov
sbb
adc
jle
add
adc
cmp
fimull
cmp
sti
ljmp
mov
nop
fnstenv
pop
insb
lds
sub
xchg
mov
je
aam
fnstenv
pop
jnp
lret
movsb
jnp
sub
push
jae
test
push
add
jge
addr16
cmp
mov
decl
add
das
push
push
jnp
xchg
jp
cld
mov
mov
incl
pop
push
in
mov
rcr
ja
add
cmp
mov
out
add
outsl
ja
pop
mov
jo
insb
or
mov
pop
in
jp
mov
or
nop
jge
dec
aad
xor
adc
icebp
or
cwtl
jmp
xlat
fsts
imul
stc
inc
test
testb
into
mov
xchg
in
push
xchg
or
aaa
push
mov
mov
insl
or
not
rorb
push
cmp
icebp
int3
sarl
gs
test
xchg
stos
jne
loop
addr16
add
sar
addl
jg
ja
push
arpl
mov
daa
lcall
jb
xor
scas
push
mov
dec
lods
shll
push
xchg
xorb
sti
inc
pop
sar
mov
xchg
xchg
mov
cwtl
test
and
aaa
and
lcall
popa
int
adc
add
sub
dec
in
push
lahf
jmp
insl
mov
ljmp
leave
pop
sub
xchg
fnstenv
inc
or
dec
imul
dec
add
inc
add
inc
inc
insb
dec
leave
pop
cmp
xlat
lret
dec
cld
lcall
pushf
leave
jmp
xchg
pop
js
mov
js
sbb
cltd
std
das
shld
loope
xchg
pop
insb
add
mov
inc
out
add
pop
or
rclb
inc
push
pop
sub
icebp
mov
add
call
add
jbe
paddsw
sbb
sub
inc
sti
cli
add
and
cmp
lods
adc
inc
repz
xchg
cmp
inc
test
lods
sbb
xor
dec
incb
out
out
mov
mov
nop
fdivr
les
mov
add
jmp
incl
gs
ljmp
or
test
sbb
xor
je
push
fsubrl
ret
gs
mov
adc
and
mov
inc
insl
pop
dec
xchg
mov
arpl
xchg
bound
sti
dec
jnp
xor
push
lds
push
add
xchg
jns
movsb
mov
sti
js
dec
dec
sub
cmp
out
pusha
mov
addl
dec
adc
mov
xchg
jns
add
rorb
sti
and
xor
shl
popa
bnd
mov
shlb
pop
inc
mov
mov
dec
aad
mov
loope
mov
pop
mov
jg
mov
sti
out
mov
in
push
mov
jle
dec
outsb
adc
mov
aas
push
xchg
or
mov
and
sarl
push
jbe
addl
add
xchg
add
imul
add
imul
aad
cli
std
movsl
push
xor
mov
pop
nopl
jmp
pop
xlat
cld
in
cmp
mov
sar
aad
jnp
mov
xchg
out
cld
inc
sti
jp
push
mov
adc
in
or
popa
push
push
sbb
aas
cmp
sbb
inc
adc
or
inc
cmp
jb
jg
addr16
cld
cmp
adc
mov
jmp
mov
in
lcall
jnp
cli
orl
add
cmpl
test
add
cld
movsb
stc
add
pop
movsb
decl
call
decb
pop
mov
aad
cli
sbb
dec
je
push
mov
add
sarl
pop
dec
addb
sbbl
clc
dec
pop
ud0
inc
sbb
lahf
call
cli
subl
dec
add
mov
or
jnp
jmp
inc
fnstsw
jmp
inc
lds
and
mov
jg
mov
inc
outsl
pop
or
mov
mov
jnp
add
mov
jne
fsubrs
orl
fmull
jb
mov
je
dec
xchg
jge
mov
ljmp
mov
jmp
dec
sbb
imul
add
mov
sti
rcrb
and
sti
push
in
ljmp
cli
push
out
xor
int
insb
loop
mov
add
sub
test
ja
or
mov
scas
andl
js
cmpl
mov
mov
inc
call
mov
or
mov
lea
stc
xor
pop
push
imul
mov
mov
xor
or
inc
jne
xor
jge
mov
ss
hlt
mov
mov
add
cmc
jne
push
repz
insb
mov
add
add
aaa
dec
popf
add
ret
push
or
dec
mov
loope
mov
testb
repnz
ret
clc
mov
push
cld
jge
inc
clc
jmp
mov
sub
or
dec
in
add
test
jne
xchg
test
lock
mov
mov
lds
jl
pop
lock
adc
cmp
stos
adc
aas
out
fadds
lret
cmp
out
lods
lds
sub
adc
movsb
add
std
mov
cmp
lock
mov
jl
pop
out
fs
testb
outsl
dec
mov
outsl
test
pop
negb
loope
mov
sub
inc
mov
outsb
inc
insl
bswap
out
hlt
mov
cmpsb
call
mov
mov
add
js
ja
rcll
xor
pop
xchg
add
xchg
jp
push
inc
add
adc
inc
ljmp
std
and
cmp
inc
repz
cmpl
inc
mov
xor
ret
mov
or
call
cli
or
mov
call
jo
js
mov
hlt
jne
jo
sti
push
mov
dec
xchg
add
inc
jo
mov
push
aad
ret
mov
add
cmp
das
fwait
cmc
stos
add
sub
xchg
lret
ljmp
les
gs
mov
xchg
mov
mov
add
ret
repz
cltd
xchg
les
adcl
mov
fwait
or
ret
pop
inc
stos
ret
pop
push
add
add
sub
shll
add
add
add
dec
cltd
clc
call
pop
jne
lds
inc
inc
mov
cmp
movsl
add
mov
push
inc
xor
xchg
add
fwait
add
loopne
mov
xchg
lcall
jnp
inc
mov
sbb
incl
jnp
adc
movsb
cmpsb
xchg
inc
filds
and
inc
mov
mov
das
add
incl
scas
idivb
repnz
ljmp
aas
aas
add
das
inc
ror
mov
and
xor
in
sub
jno
movsb
adc
jnp
xchg
testl
ret
mov
sbbb
mov
pop
cmp
mov
xchg
xorb
push
aaa
mov
mov
into
xor
mov
mov
sub
loop
subb
mov
adc
popf
jo
movsb
adcb
dec
ror
call
mov
inc
aas
xchg
jo
shlb
pop
inc
fdivs
jl
mov
push
mov
xchg
jmp
sti
mov
xchg
add
cmpsb
and
inc
popa
or
test
and
aaa
and
rolb
mov
or
cmc
imul
ss
mov
int3
or
mov
inc
clc
das
bnd
inc
mov
mov
orb
mov
jb
insb
inc
pusha
mov
sti
xchg
aam
aam
js
jne
add
sti
jl
pop
sti
je
mov
cmc
jne
or
dec
movsb
sti
mov
ret
fdivp
fistl
mov
std
iret
jmp
sbb
test
bound
cmp
cld
lcall
or
fucomi
pmovmskb
repz
test
xchg
jl
mov
or
fs
cld
jmp
fisttpl
seta
add
pop
cld
flds
xor
int
jae
xorb
int3
cld
inc
cmpsb
scas
inc
adc
call
test
repnz
jnp
push
jbe
xchg
inc
inc
add
cmp
clc
cmp
paddd
fdivr
add
negb
inc
lahf
xchg
mov
lock
sbb
lds
mov
or
cmpsb
lods
daa
or
inc
cmp
test
incl
cmp
fwait
popf
imul
stc
pop
push
movsl
andb
mov
add
les
insb
jbe
add
mov
or
out
jo
in
add
int3
cmp
cmp
cmp
jle
les
lods
add
shrb
cmc
sub
jl
sub
cmp
daa
inc
stc
testl
adc
clc
daa
add
stos
icebp
or
jp
andl
fcoml
and
push
or
jmp
xlat
test
mov
pop
addb
scas
jmp
aam
add
mov
jle
ss
data16
loop
cmp
call
aaa
mov
jg
jbe
dec
mov
and
sub
sbb
lods
inc
pusha
inc
mov
sub
pop
ret
hlt
jo
sti
jbe
sub
mov
cmp
push
pop
jo
out
js
xchg
in
outsl
js
pusha
xor
mov
mov
aaa
scas
sbb
jg
pushf
xchg
add
aad
adc
jle
cmp
or
inc
jns
inc
lret
jnp
scas
repnz
cmp
addl
mov
xchg
add
fcmovnbe
idivl
sbb
cmp
xchg
jecxz
sbb
push
cmp
mov
cmp
fsubl
inc
cmp
jnp
jecxz
mov
je
lods
pop
or
dec
pop
flds
adc
and
cmpsl
loope
cmp
es
or
add
fstpt
add
xchg
je
sub
push
stos
sar
push
sarb
je
outsl
cmc
stos
pop
arpl
inc
push
lods
or
jnp
std
pop
push
xchg
sub
cmp
lock
mov
add
jnp
xchg
jp
loopne
xorl
cmp
test
push
inc
push
fildll
push
lcall
sub
cld
popa
mov
cmp
mov
mov
idivl
cmp
push
daa
int3
adc
adc
xlat
add
inc
test
jle
jno
fs
jo
cmp
jg
mov
bound
sub
dec
xor
mov
pop
mov
repz
xor
addl
jmp
cmp
or
jo
pop
dec
bound
add
iret
add
fisttpll
inc
sti
mov
mov
or
es
push
push
ljmp
mov
pop
std
or
sti
fisubrs
pop
add
push
push
add
add
ret
and
mov
jmp
clc
sar
mov
jne
dec
call
mov
or
ret
xchg
dec
aam
test
cmp
ljmp
mov
bnd
mov
inc
add
dec
cmp
icebp
push
inc
xor
lret
jns
or
in
or
lret
out
add
mov
cld
mov
adc
mov
xchg
mov
add
iret
sti
inc
fcmovne
testl
in
pusha
jl
outsl
addr16
and
or
and
or
xchg
or
jnp
xor
out
incl
movsl
push
inc
inc
je
mov
incl
decl
jmp
lds
lock
dec
jl
incl
pop
cld
sub
sub
push
add
icebp
add
xor
ljmp
stc
fsubr
rorb
mov
cmp
insb
xor
push
decb
sub
cmp
cmp
mov
xor
adc
mov
add
ds
arpl
add
std
mov
sub
mov
add
jmp
xchg
mov
add
nop
inc
jge
clc
jmp
xor
cmp
lock
insl
faddl
stc
mov
rolb
pop
push
cmp
mov
add
xor
push
jle
lcall
mov
and
add
and
andb
cmpb
in
in
add
js
jg
jns
mov
add
lcall
sti
mov
out
cmpsl
or
leave
jg
sbb
xchg
sti
jmp
push
fs
aad
jmp
cmpsb
ret
jmp
jle
mov
jbe
add
dec
xor
push
cltd
sti
scas
js
cvtpi2ps
mov
stc
leave
add
adcl
int
pop
cld
lcall
cmp
fcmovnbe
jmp
pop
rorb
add
mov
subl
add
jns
punpcklwd
lock
push
cli
or
cmpl
mov
js
cld
jmp
pop
cld
fistpll
sahf
fcmovbe
jmp
fst
lgdtl
or
imul
mov
mov
lods
jnp
dec
adc
mov
cli
pop
mov
sub
add
sbb
adc
mov
fiaddl
add
push
inc
repnz
adc
mov
mov
ljmp
fwait
push
clc
filds
add
jns
lock
mov
les
lods
add
movsb
out
adc
cmpsb
mov
mov
adcl
pushf
jnp
jp
ljmp
mov
push
mov
cmp
repnz
cli
les
jp
sub
dec
aad
inc
mov
add
mov
push
mov
int
jg
mov
add
mov
push
cmp
lahf
add
adc
jnp
hlt
jns
push
mov
add
ljmp
mov
fnsave
jnp
sbb
adc
sbb
in
out
mov
add
sbb
mov
xchg
push
adc
clc
aaa
and
call
mov
inc
aad
ret
cs
jle
sub
sub
ljmp
or
xchg
add
jnp
pop
jb
pop
mov
mov
dec
mov
sti
push
mov
cmp
pop
shrb
ss
shrb
stc
pop
push
jmp
add
arpl
aas
add
or
test
ljmp
aam
jle
cmp
or
jl
cld
call
add
lea
cli
fwait
mov
or
sbb
arpl
enter
jns
shrl
mov
mov
jae
push
jle
loop
sbb
jno
sbb
mov
and
sti
call
inc
jbe
sbb
repz
and
cmp
add
jl
sub
mov
repnz
pop
cli
inc
pop
sbb
sahf
stos
mov
mov
mov
cmp
movsb
mov
lds
icebp
mov
pusha
jne
test
cmp
test
sub
jbe
decl
divb
in
sar
insb
xor
out
aam
js
xchg
bnd
add
pop
cltd
pushl
mov
mov
pushf
push
sti
decb
mov
sbb
cmpsl
fsubrl
divl
fildl
jnp
es
mov
sbb
mov
inc
mov
jnp
ja
inc
iret
icebp
jo
shlb
mov
mov
clc
mov
rorb
imul
pop
or
mov
scas
movsb
mov
xchg
stc
mov
inc
add
push
decl
mov
sub
ja
mov
sbb
or
jno
xchg
cld
stc
pusha
cld
sub
mov
aas
mov
stc
loopne
or
pop
popf
jg
cwtl
lea
push
js
xchg
xchg
popf
sti
sub
popa
shrl
popf
aaa
aas
sbb
sti
fiadds
scas
jns
xorl
adc
jle
in
mov
or
sti
pop
cmp
sub
mov
dec
cmpsb
popf
sti
add
mov
punpckhdq
mov
pop
out
mov
stc
add
jno
subl
cld
jmp
insl
xchg
xchg
mov
test
jo
jmp
mov
ljmp
add
incl
adc
shrl
je
push
cli
or
js
cli
pop
in
pop
subl
jo
inc
shrb
jnp
inc
jo
inc
into
lods
ret
jmp
add
or
rcrl
add
jg
sbbb
daa
inc
add
mov
decb
clc
mov
mov
mov
lcall
lods
jno
lock
cmc
jg
sti
push
divl
daa
inc
addr16
push
sbb
mov
shrb
adc
in
pop
lahf
xchg
test
push
cmp
jl
scas
xor
xchg
xor
pop
sub
fsubr
or
inc
mov
fucom
mov
sub
fwait
jb
push
mov
mov
sub
adc
je
movsb
daa
jge
sub
mov
pop
mov
sub
push
fucomp
cmp
movsb
in
cmpsb
daa
in
test
cwtl
xchg
sub
pop
jnp
mov
jle
cltd
je
add
dec
std
cmpsl
movsl
arpl
std
lcall
call
inc
sub
push
fwait
xchg
insl
push
add
dec
lea
stc
push
cltd
sti
stos
arpl
shr
jle
cmpb
mulb
mov
mov
loop
jg
lea
mov
fidivs
inc
call
mov
cli
imul
popa
std
out
xchg
mov
jnp
loope
daa
les
mov
jge
pop
adc
mov
inc
or
add
mov
sti
ljmp
cld
jne
xchg
mov
popf
jmp
and
sti
jne
mov
push
jge
or
out
call
add
dec
outsl
or
decl
xchg
add
in
add
in
add
inc
cwtl
or
popa
gs
xchg
mov
mov
shl
xchg
ret
movsl
dec
je
or
and
mov
add
inc
cwtl
or
xchg
mov
inc
adc
js
xchg
add
outsb
scas
and
addl
je
popa
mov
int3
fcomip
out
andb
add
incl
or
ljmp
or
repnz
outsl
sub
int
push
xchg
and
xchg
mov
arpl
pop
fs
aas
push
neg
stc
call
add
dec
out
icebp
cmpsl
call
push
stc
call
cs
xchg
std
push
cmpsl
andl
ljmp
pop
push
out
addr16
shlb
or
ret
xchg
es
jnp
testb
fsubrl
arpl
sti
jns
call
movsl
add
test
sbb
in
scas
jo
lahf
dec
jmp
scas
addl
sbb
aad
add
mov
scas
jae
das
clc
repz
pusha
cmp
add
das
loopne
cmp
xchg
aas
push
xchg
jne
psraw
pop
and
cmp
arpl
sti
mov
jo
loop
xchg
fiadds
or
js
sbb
xchg
xchg
sti
in
inc
cltd
push
pop
and
es
sti
jl
xchg
push
pop
sbb
movl
into
add
scas
sahf
lahf
xchg
test
js
mov
nop
cmp
dec
ficoms
mov
mov
test
pop
cmovl
and
rorb
ret
push
inc
in
add
push
cld
jne
jno
filds
adc
or
mov
sbbl
mov
add
adc
loop
cld
jne
sahf
mov
xchg
repz
and
jae
sti
jne
mov
push
xor
imul
dec
dec
cld
dec
dec
or
sbb
shrb
sbb
sbb
xor
inc
push
lods
pop
push
jp
mov
xchg
cltd
sbb
daa
push
stos
add
add
jb
je
sub
inc
lcall
mov
mov
mov
dec
add
mov
decl
je
out
and
mov
xchg
push
call
incb
and
pop
je
sub
mov
and
xchg
xchg
mov
andl
mov
pop
jbe
jl
add
inc
jg
add
fnstsw
mov
adc
mov
mov
lds
sahf
sldt
sbb
je
test
xchg
inc
insl
push
xchg
or
inc
add
xchg
in
and
dec
cmc
inc
pop
mov
jnp
daa
clc
icebp
aas
ljmp
jnp
iret
dec
add
incl
popa
out
mov
gs
add
stos
xchg
hlt
xchg
pusha
jo
sbb
scas
cmp
add
js
out
jmp
and
incl
test
add
or
xchg
jne
push
xchg
add
push
add
in
cmp
ds
pushf
test
jne
pop
pop
or
popa
scas
sti
cmc
shlb
movsl
jo
out
add
test
orl
addr16
xchg
sti
jmp
arpl
push
pusha
dec
loop
pop
inc
add
shrb
push
or
rorl
ja
cmp
call
mov
out
push
popf
decl
xchg
push
or
icebp
xrelease
imul
inc
or
add
add
lea
sarb
add
and
loop
cld
jne
jp
pop
stc
pop
cmove
and
sti
jne
xchg
push
testl
or
repz
mov
cld
jnp
inc
push
notb
add
adc
pop
jae
cmp
pop
mov
xchg
incl
mov
fldl
js
mov
mov
lock
mov
jg
test
ss
jo
jmp
mov
test
call
je
ret
add
add
fldenv
ret
lea
inc
je
mov
dec
mov
repz
and
insb
fldcw
or
stos
icebp
or
das
cmp
or
jnp
enter
xor
or
add
pusha
lds
add
push
mov
sbb
loopne
out
lcall
loope
jo
mov
cmp
aam
scas
aas
test
inc
mov
jmp
and
sbb
jo
sahf
aas
popf
jne
cmc
push
mov
jl
scas
out
inc
add
js
cmc
dec
sub
fdivrp
movsl
cld
push
mov
inc
pusha
inc
imul
arpl
test
ljmp
cmpsb
add
xchg
jle
adc
andb
sub
or
call
js
cmp
out
add
jmp
ja
sbb
lea
in
inc
shlb
cli
add
js
inc
or
scas
add
add
cmp
scas
mov
inc
and
cmp
and
or
mov
mov
inc
pop
cmp
addb
push
mov
add
lea
mov
setle
in
cmc
outsb
push
push
sti
call
pop
mov
std
incl
ret
je
outsb
push
push
popf
lret
sti
mov
pop
xchg
ljmp
pop
mov
add
lea
jp
jnp
fcmovb
push
adc
pop
ret
fs
incb
call
mov
out
sbb
ret
mov
cmpb
decl
cmpsl
sbb
outsl
adc
mov
ret
das
xor
or
sbb
sbb
mov
dec
pop
bound
test
js
or
ss
sbb
incb
mov
mov
testl
jo
sahf
or
push
sub
jnp
bound
mov
lretw
add
add
inc
mov
add
jnp
mov
add
fidivrs
insb
pusha
leave
nop
push
mov
test
js
mov
xor
push
push
xor
hlt
sbb
dec
mov
test
push
and
mov
cwtl
dec
jb
cwtl
mov
mov
js
jne
hlt
sar
mov
mov
jno
or
fidivl
or
popl
jmp
sub
outsl
mov
jb
dec
dec
int3
push
or
outsl
sti
mov
jo
scas
xchg
lds
jae
fldl
adc
sub
pop
mov
jb
cmpb
jmp
lea
and
or
jo
push
addb
aas
mov
add
popa
mov
dec
jbe
jecxz
add
mov
inc
push
mov
cld
ljmp
ud0
push
add
pop
mov
jbe
push
jmp
jle
jne
mov
sub
mov
add
mov
retw
jge
push
or
adc
ret
xor
push
loop
pusha
shl
outsl
fwait
ret
sbb
pop
xchg
mov
inc
adc
dec
add
cmpsb
ja
dec
mov
mov
jae
or
mov
mov
jge
push
cld
and
movsb
insb
mov
insb
idiv
in
mov
mov
mov
lock
hlt
mov
lea
int
xchg
subps
or
into
push
dec
xor
test
addb
jo
sbb
dec
pop
jecxz
xor
inc
push
cmp
decb
mov
jecxz
or
icebp
fiadds
adc
xor
mov
fmuls
in
push
jo
pop
repz
fidivrl
mov
pop
lret
leave
mov
scas
fildll
int3
mov
adc
push
mov
push
imul
adcb
hlt
push
jge
call
dec
js
sub
add
outsl
int3
push
inc
into
fstl
scas
dec
add
aad
inc
mov
cld
icebp
push
cmp
cmpsl
fwait
pushf
nop
orb
push
add
jno
add
add
stos
inc
pusha
mov
adc
popa
mov
push
out
mov
pop
aad
or
inc
lea
cmp
mov
push
mov
lods
icebp
add
jmp
xchg
lcall
jb
loopne
jl
xchg
decl
rorl
inc
jbe
mov
adc
aaa
adc
add
in
jle
and
xchg
lea
into
repnz
push
mov
decl
mov
inc
sub
divps
loopne
push
mov
pop
push
lahf
jbe
add
cld
jne
adc
push
jne
or
out
mov
jne
mov
xlat
push
mov
ljmp
cmp
dec
adc
sub
cmpxchg8b
call
pop
insb
or
mov
dec
cmp
mov
lcall
cld
jne
xor
jg
mov
cmc
adc
mov
lods
decb
outsl
or
cs
in
idivb
jae
or
jnp
test
add
mov
mov
cwtl
mov
nop
mov
sbb
push
cs
cmp
mov
lea
push
incb
mov
and
jle
jne
jmp
mov
shll
mov
sub
inc
push
testb
add
jmp
pusha
sbb
int
mov
stc
stc
sub
lcall
adc
adc
add
notl
adc
adc
sbb
call
xchg
xchg
in
dec
test
scas
jbe
jns
jmp
xchg
mov
add
es
test
cmp
xchg
jmp
jg
pop
test
and
mov
and
dec
test
into
cmpsb
neg
xchg
mov
add
mov
add
js
aas
shlb
out
hlt
loope
xchg
imul
push
mov
mov
addb
cli
loopne
jg
fdiv
jno
push
test
jmp
imul
cli
in
jns
and
insb
js
add
iret
or
jecxz
or
add
inc
mov
test
lahf
inc
jns
icebp
jl
lds
mov
out
mov
xchg
or
dec
pop
adc
cmc
add
jg
mov
push
xchg
pcmpgtd
loop
insl
pushf
inc
adc
sbb
push
rcrb
cld
jne
add
push
sub
cmp
stos
cmpsb
push
insl
pushf
xchg
popf
or
dec
pushf
call
pop
int3
das
lret
mov
adc
inc
sti
and
jno
sti
push
inc
dec
sti
imul
sti
xchg
mov
jmp
dec
mov
decl
mov
incl
aaa
adc
cmp
mov
pushl
jmp
adc
mov
out
sarb
dec
lret
mov
pushl
fnstsw
decl
mov
jmp
fwait
mov
pushl
mov
ds
mov
call
mov
les
dec
mov
les
les
mov
les
ret
les
xchg
les
mov
add
add
hlt
add
in
xchg
fdivl
inc
int3
mov
les
les
sbb
pushf
or
xchg
push
inc
les
or
les
les
les
les
icebp
cmp
inc
fidivrs
adcb
cmp
or
cmp
sti
call
jae
add
pop
xchg
pop
cmc
or
dec
in
push
xchg
adc
mov
xchg
adc
fbld
sbb
shll
and
stos
and
fldcw
movsl
and
xlat
cmpsl
sub
iret
mov
adc
mov
pop
dec
mov
lods
mov
fldcw
mov
xor
cmp
cmp
push
cmp
inc
dec
dec
es
cmp
inc
sahf
inc
inc
add
dec
sti
pop
repz
sti
pop
jecxz
sti
xchg
jecxz
sti
rcl
inc
sti
add
hlt
inc
sti
pop
cmc
inc
sti
pop
add
sti
fdiv
inc
sti
fsubs
sti
jno
inc
sti
rcll
sti
sbb
inc
sti
pop
and
lahf
and
gs
inc
sti
xchg
outsb
inc
sti
leave
outsb
inc
sti
sti
pop
inc
sti
sub
outsl
inc
sti
pushaw
inc
sti
mov
aaa
mov
incl
mov
decl
cmpl
lcall
jae
incl
nop
jae
lcall
sar
jae
decl
sar
jae
pushl
jae
incl
sar
add
inc
cld
mov
call
je
ljmp
jae
mov
jmp
add
jnp
mov
out
xchg
lock
js
xchg
mov
stos
aad
or
leave
or
imul
cmp
xchg
das
repz
jns
jae
cmp
fmul
inc
lea
jne
jmp
call
iret
fwait
ss
arpl
add
ret
xchg
add
push
ret
test
jl
fisttpll
mov
or
iret
push
or
mov
push
jl
or
repz
add
cmpl
mov
lods
dec
jne
mov
mov
push
stos
sub
and
cli
dec
cld
out
or
cli
fbstp
push
bound
jge
mov
jg
pop
jp
add
inc
adc
inc
rcll
pop
add
mov
daa
int
dec
xchg
add
xor
fnsave
jae
imul
xor
in
mov
lret
fadds
sub
mov
out
jae
iret
mov
call
or
mov
ret
lret
rorb
jp
and
lret
cmp
mov
adc
decl
inc
or
xchg
push
and
testb
fs
call
mov
clc
inc
clc
pop
cli
push
std
test
inc
rorl
cld
decl
xchg
push
inc
add
lcall
jmp
mov
dec
test
push
jnp
xchg
rorl
xor
fildl
add
arpl
and
jmp
xchg
js
repz
rolb
ljmp
push
add
ret
cmp
pushl
lahf
push
add
mov
ljmp
jnp
jmp
jnp
mov
incl
push
je
sahf
pop
call
xor
jmp
cli
insb
aas
fdivr
or
arpl
decl
jle
mov
aaa
movsl
or
jp
or
setle
popf
jns
fisubs
test
sbb
add
add
sbb
mov
retw
insl
jns
sbb
add
pop
jns
jp
fcomip
pop
dec
add
std
sbbb
adcl
mov
repnz
jne
or
add
inc
psllw
add
lods
dec
mov
aam
add
mov
add
add
add
add
andb
js
ret
lods
pop
mov
jmp
mov
jns
add
in
adc
pop
cmp
push
je
subb
sti
out
out
jns
xchg
testb
and
mov
mov
cmp
xchg
movsl
rcr
pop
cli
sub
mov
add
bound
add
ja
cmp
cmp
roll
jmp
add
add
push
cmc
inc
mov
movsl
enter
mov
loope
mov
add
add
mov
inc
enter
test
mov
jmp
incl
lret
dec
out
negb
pushl
jle
inc
cmp
ret
rorl
loope
nop
add
add
mov
mov
sbb
dec
lock
mov
and
jecxz
sub
stc
mov
cmp
stos
aas
call
mov
or
loopne
adc
pusha
popf
mov
sbb
jnp
loope
push
mov
setne
insb
popf
add
incb
pop
stc
cmp
incl
pop
add
stc
mov
sub
lret
data16
popa
out
adc
mov
clc
mov
je
mov
jnp
data16
in
jne
jle
rolb
push
xchg
xchg
mov
cmp
mov
out
call
push
add
test
sldt
mov
scas
jo
or
ss
add
enter
jg
mov
add
fsubp
xchg
push
arpl
jnp
and
jge
jno
jnp
adc
test
jnp
jmp
je
jbe
scas
ja
sub
push
sbb
jmp
bound
ja
adc
add
jle
adc
sti
jbe
bound
mov
jo
sub
dec
js
inc
pop
jl
aaa
sbb
jbe
cs
dec
daa
cs
jne
cmc
jne
popf
mov
lea
je
lock
push
cmc
test
push
jnp
or
mov
and
lret
sti
jns
jbe
cmc
das
inc
add
cltd
cmp
push
std
add
mov
or
xor
pop
ja
lret
fisubl
lock
jmp
aaa
call
icebp
mov
or
cmp
push
je
jnp
fidivs
lds
adc
sti
call
mov
lock
test
pop
cmp
mov
psraw
sti
call
mov
add
mov
lock
test
sarb
add
cmp
call
jnp
lock
xchg
xor
xchg
push
push
hlt
iret
es
in
adc
decb
add
sub
roll
sbb
subl
loope
jmp
push
daa
xorl
call
inc
call
jl
adc
cli
lods
sbb
sbb
push
dec
xlat
je
popa
xchg
fidivrl
jle
inc
sti
std
xor
arpl
push
in
xchg
mov
add
out
int
dec
push
add
notl
mov
jb
add
loopne
pop
incb
outsl
addr16
dec
pop
jb
inc
jno
mov
jl
lds
pop
jnp
retw
xchg
test
add
push
cmp
ja
add
jo
out
outsb
inc
xchg
cmp
stc
or
insl
mov
jbe
or
inc
pop
jno
add
cld
outsl
xchg
mov
add
or
outsb
aam
push
lcall
dec
adc
jne
push
hlt
cli
cmp
cmp
subl
clc
xor
sahf
add
outsb
add
aam
sti
jmp
mov
xor
jbe
cld
push
es
cmc
decb
sbb
jl
outsb
sti
push
mov
xchg
mov
xlat
cli
test
aaa
push
add
xorl
repz
pop
mov
icebp
add
push
push
outsb
sti
add
fadd
inc
push
loop
pop
iret
push
jbe
jmp
dec
jecxz
adc
jg
scas
cmpsl
cmpl
mov
add
or
imul
orl
addb
mov
mov
xchg
xor
idivl
and
jle
daa
mov
push
sbb
incl
add
mov
jo
dec
dec
lret
add
lret
mov
pop
std
add
mov
pop
push
lds
pop
std
std
jnp
or
cmp
mov
xor
orl
sahf
sub
mov
sti
jns
or
dec
add
popa
imul
mov
push
add
jmp
push
mov
adc
pop
lahf
je
fs
xor
add
and
cld
dec
stc
fdivrp
movsl
loope
clc
jnp
testb
je
daa
lock
adc
ja
outsb
sbb
enter
ss
in
jmp
mov
add
clc
fisttpll
add
rcrl
inc
cmpsl
or
jo
cli
pop
and
stos
mov
jmp
aam
lret
jmp
lock
mov
add
push
adc
inc
lret
jmp
cld
jbe
mov
pop
cld
lods
mov
add
jbe
clc
add
add
in
jnp
mov
inc
or
insb
sti
jmp
std
enter
clc
cli
jo
outsl
mov
iret
cmp
jmp
mov
jb
ja
scas
addb
jmp
add
iret
add
add
add
add
std
push
aaa
jo
fucomi
js
dec
xchg
dec
ja
adc
outsb
push
jns
dec
jne
jg
jmp
mov
jl
adc
insb
mov
inc
dec
add
jb
pop
packssdw
push
lea
push
push
call
loope
incb
xor
call
cmp
decb
add
add
clc
bound
adc
xchg
dec
outsl
jbe
cli
cli
je
outsb
mov
ljmp
add
mov
add
cld
ds
xchg
mov
add
xchg
mov
imul
dec
std
ds
decb
jecxz
aaa
pop
lret
std
or
inc
add
clc
jae
mov
or
cmpl
inc
clc
insl
mov
stos
xchg
push
or
fcomip
jmp
lds
push
push
sbb
adc
dec
xor
pop
mov
jg
in
dec
adcl
out
mov
jp
incl
jp
incl
mov
subl
cs
jmp
clc
add
mov
clc
add
fdivl
jl
fldl
add
or
cmp
and
jnp
fldl
mov
cld
inc
and
pop
rclb
jmp
inc
adc
push
pop
cmp
in
add
lfs
mov
cltd
lea
xchg
xlat
pcmpgtb
popa
adc
lea
cld
fwait
enter
xchg
add
or
in
in
jmp
js
dec
insb
lds
add
mov
lods
arpl
xchg
je
je
idivb
push
mov
cld
movsb
xor
add
add
mov
and
add
pop
rol
adc
add
into
mov
xchg
fisttpll
xor
mov
js
jge
jle
dec
add
stc
adc
addl
mov
push
test
fiaddl
cmp
std
add
and
das
int3
add
push
pop
aaa
xor
add
xchg
mov
cld
push
xor
jl
out
cmp
xorl
adcl
orl
ret
jg
sbb
mov
add
push
adcl
std
push
rcrb
inc
or
fucom
andl
push
xlat
bnd
les
lods
jnp
call
dec
shlb
inc
mov
dec
test
pop
jg
ja
mov
out
add
jns
inc
xor
cmp
std
pop
or
fistpll
add
jae
ljmp
and
cmp
and
jp
jb
stc
je
scas
hlt
movl
icebp
clc
add
mov
int
xor
int3
adc
sti
add
out
ret
outsl
mov
addr16
ret
mov
bound
loop
dec
inc
add
popa
inc
jge
fwait
hlt
stos
push
jno
jo
pop
jbe
adc
notl
adc
outsl
jnp
ror
mov
or
mov
movb
xchg
jmp
std
cld
mov
cld
xchg
mov
adc
add
add
dec
push
jne
es
cmp
das
push
sti
aam
jge
jmp
pop
push
mov
dec
shll
mov
js
lcall
sti
popa
mov
fs
mov
jmp
js
sti
jmp
mov
adc
bound
xchg
mov
daa
adc
xchg
xchg
sbb
mov
jmp
mov
cld
inc
sub
or
dec
into
jecxz
xchg
pop
add
loop
pop
mov
ret
ret
push
mov
lods
or
xchg
movsb
adc
mov
xchg
add
popl
add
dec
push
push
lods
jecxz
or
lods
orb
mov
add
addr16
fmull
dec
out
xorl
push
or
add
or
pusha
sub
fsubl
dec
jnp
adc
test
fmul
call
rclb
jo
fnstcw
lock
in
adc
jmp
inc
fld
call
add
jb
orl
jl
clc
lret
aas
sub
ret
inc
out
jae,pt
out
sbb
pop
add
pop
jmp
cltd
jmp
sub
lock
in
sar
push
mov
icebp
adc
pusha
fiaddl
push
shl
repnz
xchg
xchg
add
aam
pop
add
cmp
cmc
pop
jp
mov
cmp
dec
mov
xchg
nop
incl
cmp
pop
repz
imul
xchg
xlat
les
jnp
push
xchg
loopne
mov
in
fcmovnu
bound
clc
dec
mov
add
int
clc
push
xchg
add
push
xchg
mov
mov
dec
pushf
push
cmp
icebp
bound
or
jmp
push
insb
or
ljmp
push
pop
outsb
gs
cmp
xlat
adc
cmpsb
dec
xchg
iret
pop
sti
xorb
int3
xchg
aaa
fs
jbe
popa
pop
stos
xor
xchg
pop
jne
inc
dec
out
notl
xor
xchg
jbe
xchg
fsubr
mov
add
xor
jns
xchg
pop
call
jns
std
jo
loopne
pushl
jmp
inc
push
mov
jbe
lcall
pop
pop
and
and
movsb
dec
jne
aaa
jecxz
jae
xchg
mov
pop
and
ret
es
and
incl
and
adc
je
filds
mov
or
ret
pop
sti
mov
rclb
out
mov
add
and
je
pop
jae
mov
xorl
xor
jg
scas
call
cmp
out
fisttpl
jb
push
test
js
mov
jbe
cmc
out
inc
pop
xor
add
jnp
mulb
leave
or
add
dec
clc
bnd
mov
inc
aas
cmc
mov
mov
mov
idivb
push
in
std
fs
jnp
mov
push
scas
in
std
mov
sbb
fdivrs
out
test
pushf
out
mov
sub
mov
decl
pop
jge
dec
adc
mov
add
cmpsl
add
test
loopne
mov
or
fdivr
js
xchg
pushf
aas
outsl
icebp
ljmp
pop
test
decl
sti
loopne
add
imul
add
sub
xchg
jmp
in
out
fldlg2
out
cmpsl
fldlg2
mov
aaa
movsl
xchg
or
dec
push
jmp
rolb
adc
add
or
testb
jmp
stc
shll
push
push
jle
ss
pusha
adc
fs
jns
xlat
cmp
les
mov
into
dec
ss
push
fidivrl
sub
mov
xchg
add
cld
mov
xchg
jg
stos
outsl
jecxz
add
add
aad
jmp
in
add
jo
jne
jo
adc
mov
jmp
or
pop
xchg
pop
jbe
jo
sbb
mov
aas
clc
pop
fstps
cmp
fcmove
jmp
jns
add
incb
bound
add
scas
std
std
fdiv
mov
jg
cmpsb
js
incb
or
rolb
call
or
jne
mov
fbstp
cld
out
lret
iret
jae
mov
mov
add
mov
imul
pop
push
mov
pop
call
data16
sub
or
sbb
test
xchg
mov
sbb
cmp
shlb
ljmp
adc
mov
cmpl
adc
pushf
jnp
lods
push
sub
cmp
std
xchg
adc
icebp
mov
pop
mov
cmpsl
insl
test
out
add
mov
mov
sahf
xor
fadds
jae
and
ljmp
cltd
jle
adc
test
jo
lahf
add
push
and
addl
jbe
out
loopne
idivb
inc
jnp
cs
cli
push
ljmp
out
mov
mov
imulb
lret
jmp
daa
cmpsb
sar
jl
fcmovnb
jle
pop
add
frstor
add
outsb
pop
bound
fs
out
sti
dec
push
mov
sti
bound
popf
rcll
add
or
call
and
scas
decl
xor
addl
scas
add
icebp
stos
add
jb
xchg
sub
test
daa
arpl
call
cmp
mov
jmp
cmp
push
test
cli
arpl
pushl
xchg
add
std
call
subps
add
dec
mov
jne
loop
cld
mov
std
push
stos
into
imul
pop
popa
mov
xchg
and
push
test
mov
ljmp
cmp
ret
mov
daa
adc
inc
add
std
pop
test
or
xor
add
pop
cld
call
jno
rolb
ja
inc
clc
or
mov
xlat
aam
in
push
ss
adc
jae
and
sub
andl
repz
loope
dec
lds
in
mov
movsb
stc
jg
je
or
push
sbb
pop
push
mov
push
or
mov
cltd
pop
punpcklwd
xchg
in
out
fcoml
and
lea
mov
mov
xchg
mov
int
cmp
sbb
push
or
out
dec
or
sub
xlat
xlat
mov
fldl
mov
pop
mov
insl
jae
out
sbb
jmp
js
scas
leave
dec
add
nop
stc
add
jo
stos
loope
inc
lock
xor
out
inc
add
inc
jg
loope
mov
mov
xor
into
adc
aaa
scas
add
cmp
shll
fbld
lds
fbld
fld
sarb
cmp
add
js
das
mov
push
add
ret
pop
jbe
add
inc
add
js
sub
popf
mov
push
push
sub
lds
les
add
lds
out
push
sti
insl
mov
scas
adc
popa
pop
daa
dec
xchg
std
je
jnp
inc
cmp
push
call
rorl
mov
or
incl
xchg
call
pop
xchg
es
in
add
lds
les
mov
mov
push
inc
inc
push
push
fcmovne
loop
aas
xor
push
hlt
fwait
int
mov
adc
je
pop
lea
or
xorps
add
jnp
loopne
outsl
mov
lock
xchg
dec
cmp
ss
inc
ja
lea
mov
adc
scas
mov
push
js
dec
add
lea
or
jae
in
dec
testb
inc
arpl
mov
stos
dec
lods
dec
call
out
fidivs
xor
out
mov
arpl
imul
out
test
xor
loopne
adc
out
add
outsb
incl
mov
in
fdivl
dec
push
xor
xchg
add
mov
mov
pop
ss
push
movsl
xchg
push
fsubrs
jo
in
dec
jecxz
add
jecxz
add
push
mov
pop
cmp
add
mov
push
cld
jmp
xchg
addr16
push
cmpsb
xlat
add
cmpsb
mov
fadds
sbb
push
fcoml
add
add
xor
mov
js
xchg
add
in
fwait
into
jmp
cld
jp
jmp
jle
bnd
push
mov
lcall
mov
adcl
pop
fistpll
mov
mov
ret
mov
popa
test
push
ja
movsb
fs
cli
xor
out
dec
add
js
xchg
jmp
xor
ret
push
pop
lods
das
ljmp
inc
jbe
clc
pop
mov
popf
mov
xchg
push
lds
push
xchg
xchg
in
popa
inc
push
mov
xchg
xchg
xchg
add
test
rorl
nop
sti
jmp
lea
test
jp
pusha
xchg
lea
mov
add
fimuls
adc
rol
loope
out
push
pop
jne
inc
call
stos
leave
ret
jnp
xor
incl
sub
mov
arpl
cld
daa
scas
push
scas
inc
mov
fistl
aaa
pop
aas
add
clc
push
adc
int3
push
mov
out
call
push
arpl
push
test
push
and
add
fs
xchg
out
call
and
jmp
sbb
pushl
gs
incl
jp
or
jnp
mov
mov
mov
mov
jae
mov
aad
mov
dec
arpl
add
fcoml
inc
in
adc
mov
aam
cmp
adc
sbb
int3
push
pusha
kmovb
xchg
faddp
bound
mov
dec
pop
push
mov
and
push
push
fmull
push
pusha
xlat
add
xlat
jmp
adc
mov
out
mov
dec
jae
mov
repnz
add
mov
push
dec
dec
cmp
mov
add
or
mov
mov
mov
fs
ja
out
jmp
loop
fiaddl
jmp
icebp
fimull
das
inc
push
add
push
out
and
adc
mov
imul
testl
mov
aaa
xchg
pushf
hlt
cmpsb
cmp
xchg
or
movsl
ja
inc
xchg
jle
movb
arpl
adc
add
xor
rol
movsb
pop
lea
leave
add
sub
push
lret
mov
xorl
outsl
enter
add
or
adc
scas
std
add
cs
jne
pop
pop
gs
push
call
mov
out
mov
out
incl
jnp
cmovge
pop
mov
or
data16
cmp
push
push
inc
cwtl
mov
std
push
adc
push
xchg
inc
push
hlt
xchg
add
add
and
nop/reserved
aas
add
test
inc
fcmove
xor
shll
out
xor
stc
and
add
inc
xor
cmp
aas
call
jmp
add
add
mov
std
xchg
aas
jnp
je
cmp
push
xchg
xchg
out
fldl
repz
lods
sbb
insb
out
call
mov
test
inc
and
jb
inc
lahf
cmp
xchg
inc
sbb
adc
es
imul
or
cmpb
loope
add
mov
sbb
xchg
mov
mov
add
faddp
sti
repz
in
jmp
inc
jmp
jg
mov
add
insb
call
inc
cmpl
jg
aad
mov
cmpsl
roll
and
add
pushf
dec
jmp
add
dec
div
imul
cmpb
add
or
jmp
or
pusha
fistpll
xor
ret
xor
ja
xchg
les
subb
xor
add
dec
push
daa
inc
outsl
adc
clc
xlat
jnp
push
bound
push
add
xor
add
fwait
mov
sbb
jl
insb
in
pop
dec
mov
dec
xchg
jnp
add
add
cmpps
dec
xor
fldenv
add
xchg
mov
psubd
aaa
cmpsl
cmp
dec
inc
adc
ja
and
mov
je
or
push
cli
jne
xchg
out
cmp
and
pop
js
std
test
mov
clc
call
bound
sbb
ror
add
insb
aaa
inc
arpl
lea
mov
lcall
lret
push
add
bound
nop
int
mov
add
jnp
inc
jne
xor
std
xchg
aas
jnp
mov
std
push
fiadds
mov
in
sbb
pop
aad
mov
and
andl
cmp
clc
fwait
or
or
lds
xorb
jae
or
pop
shlb
add
jne
inc
xor
xor
dec
or
fisttpll
mov
add
mov
and
add
cmc
inc
shlb
jnp
hlt
out
aas
call
enter
inc
xchg
xchg
in
add
lret
inc
mov
mov
add
loope
xchg
or
inc
out
cwtl
push
out
jnp
jmp
or
jae
cli
inc
ficoms
or
cmpb
dec
jae
rcrb
fwait
mov
push
xchg
or
sub
mov
push
push
add
jns
add
xchg
js
test
jne
ret
push
jmp
ja
add
popa
mov
aaa
sub
clc
ret
sti
hlt
stos
mov
nop
xor
sbb
int3
mov
imul
jb
or
push
xchg
xchg
inc
arpl
les
adc
xor
adc
sbb
xor
push
sti
cmp
adc
jg
xor
add
stc
pop
adc
mov
sub
int
mov
jmp
xor
lret
push
jmp
pop
aam
adc
sub
int
ret
jge
mov
jne
insb
jbe
jnp
lret
add
fsts
arpl
rorb
adc
mov
addr16
xor
jp
enter
aas
insb
add
dec
inc
jmp
xchg
jl
inc
push
jp
and
and
shll
leave
pushl
call
jbe
add
jnp
repnz
sub
aad
jb
repnz
sbb
in
cs
out
scas
push
sti
push
scas
das
call
jb
xchg
cmp
mov
sti
add
cwtl
out
jp
decl
or
idivl
mov
hlt
and
adc
bound
add
mov
sti
fdivl
leave
testb
mov
das
loope
subl
mov
fldt
jmp
testl
ss
call
add
mov
jle
mov
mov
lret
inc
push
lock
mov
xchg
push
cmpsb
fcmovne
xor
rorb
or
mov
jge
and
add
stos
dec
fwait
cs
dec
add
dec
push
jmp
test
push
jb
out
fsubrl
ja
xlat
cmp
out
mov
shll
add
dec
sbb
aaa
in
sub
mov
xor
sarl
sub
mov
push
mov
cmp
pop
shld
int
orl
fsts
js
test
dec
inc
sti
cltd
shrb
xor
and
lea
mov
test
mov
mov
jmp
jge
inc
sub
incl
iret
ljmp
xchg
fcomip
add
cmp
add
lret
cmp
lcall
cmp
adc
jg
mov
add
cld
cli
adcb
mov
pop
roll
inc
pop
pop
flds
mov
pop
cmc
mov
pop
cli
dec
ds
xchg
push
incl
jp
push
add
in
mov
or
push
decl
sahf
xor
jge
adc
outsl
fiadds
std
inc
inc
shlb
push
push
or
xchg
pushf
jle
xor
mov
add
xor
pop
cmp
dec
lahf
sub
cmpl
mov
fldl
jnp
jmp
cmp
call
jg
dec
out
push
lock
cld
imul
imul
sahf
pop
dec
dec
adc
repz
adc
adc
iret
hlt
leave
in
xchg
in
daa
pop
jnp
pusha
das
flds
dec
dec
add
add
aad
scas
mov
jnp
xchg
mov
into
push
push
test
fadds
cld
mov
jae
sub
sub
jmp
pop
jnp
frstor
imul
imul
mov
testl
aaa
and
outsl
mov
pushf
xchg
das
push
mov
mov
sti
pushf
hlt
xor
repnz
adc
jae
lret
mov
cmc
js
das
ret
lret
mov
add
or
mov
sbbl
xchg
or
pusha
imul
ja
sbb
cmpsl
jae
jg
push
outsb
push
mov
mov
adc
mov
inc
add
dec
andps
add
popa
punpckhbw
inc
add
dec
push
add
add
leave
dec
outsl
add
and
adc
clc
mov
push
jmp
shl
mov
je
or
cs
fstl
outsl
ss
or
popa
xchg
xor
inc
xchg
xchg
pop
enter
jne
rcll
sub
add
lret
add
push
add
inc
push
mov
aas
jmp
mov
jns
add
pusha
jno
sub
insl
repz
imul
hlt
addr16
push
aas
add
repz
mov
mov
nop
jno
add
je
adc
ja
or
int
pop
inc
xor
push
scas
cmc
ret
sub
or
jns
clc
lcall
push
sub
dec
adc
and
adc
cmp
sub
add
int3
std
dec
cmpsl
mov
les
push
push
mov
xchg
movsb
push
jo
outsb
inc
das
fdivl
cmpl
aas
nop
push
decb
scas
scas
dec
cmp
jmp
push
push
push
adc
inc
xlat
fistpl
clc
daa
push
fmuls
pop
hlt
scas
push
rcrb
pusha
jo
outsb
test
xchg
mov
lret
xchg
lods
adc
mov
out
and
out
scas
out
mov
cld
lret
aam
icebp
rclb
fucomp
cmp
dec
push
jmp
gs
xor
jg
inc
mov
push
aas
sti
push
fwait
rorl
int3
push
jmp
dec
xchg
lea
cmp
push
sti
pop
ret
jp
insb
cmp
ljmp
mov
je
aas
ljmp
xor
pop
cmp
ljmp
aad
stos
jo
push
bound
add
adc
sub
ret
push
add
call
xchg
mov
cmpsl
jp
or
sub
test
jp
xlat
ss
mov
adcl
lret
or
outsl
or
adc
inc
aam
sahf
inc
cmpb
jbe
call
mov
and
jle
push
dec
push
adcl
jae
fmuls
decl
mov
push
in
adc
or
aaa
jne
roll
jle
loope
push
lea
and
lret
jne
fstps
leave
jmp
dec
aaa
repz
into
sub
xor
das
adc
mov
fs
lds
jmp
and
decl
sbb
add
sbb
mov
xor
adc
jnp
mov
jnp
jle
clc
repnz
lret
faddl
add
and
jg
es
inc
xchg
pop
mov
mov
jnp
pinsrw
mov
ja
cmp
xchg
jg
sarb
inc
jae
ror
ret
dec
mov
jmp
or
aas
aam
jae
fildl
cmp
sbb
jb
push
dec
mov
stos
push
cmpsb
sti
mov
cltd
enter
out
cmp
popf
div
into
loope
mov
out
jp
adc
iret
addb
and
shll
mov
fcoml
mov
mov
add
add
mov
mov
sti
add
sahf
faddl
icebp
jns
adc
add
addl
dec
out
xchg
ss
sarl
xor
jne
pop
ss
push
xchg
cmpsb
adc
ljmp
popl
sub
cmp
iret
fnsave
mov
mov
lea
jge
ds
mov
and
bound
cmp
gs
xorl
je
mov
pop
push
outsl
or
in
cmp
jmp
fbstp
test
sub
dec
pop
jg
inc
xchg
push
inc
mov
push
fxch
es
push
shr
dec
xchg
inc
xor
sti
incl
adc
and
and
xor
mov
push
popf
es
mov
jl
pop
shr
rolb
mov
push
pop
sbb
sub
call
jae
lret
sbb
pop
in
imul
cli
add
mov
jnp
call
aas
je
arpl
hlt
jmp
mov
pop
subl
ss
scas
xor
jae
int3
int3
jmp
xchg
adc
mov
imul
jnp
inc
jg
jp
lahf
xor
xchg
sub
mov
idiv
test
mov
pushl
cmp
ds
dec
add
int3
add
shll
adc
nop
add
movsb
dec
jg
es
cld
push
inc
daa
add
lods
out
xor
lahf
std
icebp
int
pop
jnp
fs
mov
dec
in
mov
mov
inc
jnp
and
test
inc
js
xchg
xchg
fsubrs
lret
fnsave
outsb
or
add
jo
orl
call
add
add
mov
jmp
or
test
js
ljmp
xor
cmp
mov
xchg
xor
sti
xchg
out
rolb
push
mov
mov
mov
aaa
addr16
rorl
dec
dec
jb
adc
js
in
repz
jbe
mov
mov
add
xor
hlt
xor
add
xchg
aaa
jne
push
cmp
sub
sahf
pop
jp
mov
stos
mov
cmova
imul
jbe
add
clc
imul
add
mov
add
jo
fldcw
add
movl
xchg
out
push
and
nop
std
jne
out
pop
adc
xchg
xchg
lods
pop
leave
push
addb
pop
xrelease
lds
rorl
pop
std
outsb
hlt
sbb
cmp
imul
rcrb
xor
sub
jae
lret
andb
dec
gs
cmpl
xchg
sti
out
or
push
lods
or
decb
std
jno
call
jnp
sbb
cmpsb
rorb
std
sbb
rcll
cmp
add
pop
adc
xchg
bound
in
mov
iret
in
xor
mov
xchg
mov
jnp
jbe
sarl
imul
add
stos
dec
xor
rorb
test
lcall
sub
pop
xchg
xchg
jo
hlt
scas
mov
cmc
sub
jge
mov
cmp
aaa
das
mov
cli
xor
xor
xor
cmp
inc
add
lock
sbbl
xchg
mov
or
sbb
jnp
mov
add
loopne
faddl
add
cld
add
hlt
dec
jbe
mov
psubsb
mov
jmp
in
pop
mov
ljmp
lcall
js
xchg
rorb
fwait
push
bound
faddl
sub
and
bound
xchg
sub
and
sbb
idivl
in
lock
repz
jne
pop
aad
inc
jge
mov
incb
mov
fiadds
or
stos
add
call
push
inc
jl
lret
out
mov
add
mov
sti
jmp
jecxz
jle
mov
jne
fdivr
jne
jecxz
std
mov
xchg
fmul
sti
andl
pop
push
sbb
jle
rclb
mov
add
mov
out
xor
out
mov
pop
pop
cmp
add
aam
in
jnp
stos
lods
js
call
or
cmpsl
adc
jbe
xchg
jo
shrb
mov
jnp
cmp
notb
cmpsl
mov
and
xchg
orb
xchg
pop
fcoms
and
mov
push
add
lea
push
mov
sub
pop
xchg
xchg
mov
add
xchg
xor
xchg
mov
cmp
add
lcall
test
aas
mov
xchg
mov
mov
adc
flds
jmp
fucom
test
repz
pop
mov
jmp
fsubrs
mov
cwtl
mov
add
pop
add
jmp
sti
cmp
in
xchg
mov
mov
mov
sub
or
push
jno
or
mov
add
loopne,pn
dec
fcom
dec
mov
lock
jecxz
cld
cmp
mov
movsl
add
xor
call
in
push
pop
jg
dec
push
lock
or
add
add
or
movsb
sbb
ds
js
test
je
add
push
pusha
insl
aaa
ljmp
or
push
arpl
dec
int3
jg
jo
jne
repnz
jne
leave
cs
push
jg
test
cmp
jmp
and
jmp
pop
std
mov
add
test
cld
adc
dec
flds
and
flds
adc
sti
cmp
jbe
xchg
ret
pop
cwtl
push
call
add
push
roll
out
andl
add
loopne
shl
push
cmp
je
imul
xchg
add
xchg
pop
data16
mov
in
int3
sub
jmp
lock
sub
jo
mov
sub
mov
movsl
fildl
test
xor
jmp
clc
push
int
cld
gs
gs
jae
xchg
mov
push
push
push
lock
int3
daa
inc
push
cmp
mov
push
add
add
push
out
mov
cld
add
decl
out
bound
push
insl
cmpl
xchg
add
push
adc
rcrb
jecxz
jmp
into
xor
mov
test
sub
test
ja
xchg
daa
dec
mov
jnp
sub
xchg
sub
mov
shlb
daa
sbb
add
sub
jle
mov
add
mov
imul
jnp
jmp
add
dec
in
mov
iret
shl
mov
add
xor
arpl
daa
xchg
push
dec
jbe
push
cmpsb
cli
pop
cltd
adc
add
jne
std
rorl
sbb
jl
fistpll
or
fldl
sub
jmp
xor
cmp
je
nop
xlat
call
xlat
and
dec
cli
cmpb
mov
jmp
xor
sti
add
ret
lahf
fldl
xchg
mov
sti
add
mov
orb
jl
test
push
sbb
add
inc
loope
call
lods
jp
push
push
popl
jne
jb
push
loopne
push
add
add
xlat
jg
inc
loop
scas
pop
scas
loopne
call
dec
ret
dec
ret
cmove
decl
adc
adc
inc
push
mov
loope
mov
cmp
jnp
dec
aaa
push
and
add
mov
inc
push
push
mov
scas
mov
and
pushl
push
jb
cli
adc
insb
mov
adc
clc
push
mov
jmp
nop
stos
mov
cld
aas
or
xchg
push
add
filds
call
lock
std
data16
inc
jnp
inc
aam
and
lds
ja
mov
aaa
inc
aas
add
jo
push
xchg
mov
pop
imul
aad
jle
es
cs
das
push
xor
das
pop
xor
dec
outsl
aas
inc
xor
dec
stc
add
adc
add
sbb
fildll
popa
or
jmp
jae
adc
mov
push
mov
jb
add
adc
mov
lods
loop
or
mov
stos
ja
jmp
adc
lahf
add
out
testb
jnp
jmp
inc
sbb
cmp
es
pusha
int
mov
or
mov
daa
push
pop
xchg
pop
push
xchg
cmp
jbe
pop
cltd
decb
mov
mov
shll
and
js
mov
fmull
push
dec
pop
ljmp
adc
inc
xor
push
js
xchg
sahf
inc
jmp
and
enter
loopne
cmp
fdivr
mov
xchg
mov
sti
call
push
sbb
pop
fisttps
add
outsb
in
dec
push
push
add
fistpl
add
shll
outsl
pop
mov
mov
xchg
pop
fdivr
mov
iret
dec
jne
mov
pop
fisttpl
mov
jmp
add
mov
dec
movsb
push
add
sarl
cmp
ret
or
iret
ljmp
arpl
jnp
cmpb
call
movsb
mov
or
or
xchg
jb
divl
decl
out
jmp
mov
insb
sahf
scas
subl
push
lock
dec
mov
es
inc
pop
sahf
xor
dec
pop
push
sub
paddw
cltd
xor
and
decl
mov
and
xor
ljmp
mov
xor
int3
pop
test
jge
sub
ret
dec
add
sub
mov
jecxz
test
dec
and
aas
test
jmp
fwait
mov
dec
test
repnz
push
jno
mov
add
mov
pop
pop
js
sbb
adc
or
in
add
enter
lahf
jbe
sti
mov
add
xor
push
jnp
incl
mov
mov
mov
sbb
add
pop
add
mov
ss
cli
ja,pn
push
xor
xor
call
xor
push
ja
or
mov
sub
jmp
mov
mov
js
or
xor
fcompp
add
shr
js
mov
dec
dec
pop
jo
xor
les
add
dec
push
jmp
ret
call
jg
sti
aam
jns
jmp
mov
push
ret
in
aaa
scas
insl
rolb
add
ljmp
dec
add
loop
aaa
dec
int3
add
pop
adc
add
or
add
xchg
jmp
mov
push
xchg
add
push
incl
and
cltd
out
add
xchg
jb
test
push
mov
push
leave
hlt
jmp
inc
pop
add
add
add
or
add
mov
insb
lea
add
xor
dec
add
test
mov
popa
xor
jecxz
aam
jnp
je
mov
jbe
incl
imul
testl
xor
push
scas
or
jnp
jle
popa
xor
incl
repnz
and
jbe
mov
lea
call
add
mov
adc
jnp
add
xor
imul
decl
mov
jnp
jmp
add
push
jmp
add
jnp
outsb
xorb
adc
mov
push
jmp
add
pop
jb
mov
add
mov
xchg
xor
mov
mov
add
or
add
aas
cld
add
addl
mov
jg
es
aad
inc
fstpl
jg
jmp
add
cmp
and
add
jmp
sub
jmp
js
mov
xchg
jmp
mov
sti
jmp
jbe
add
jnp
push
call
test
adc
cmpl
push
dec
das
call
js
add
jg
sti
cmp
mov
cmp
das
cmpl
daa
pop
add
add
mov
jmp
push
pop
sti
xchg
mov
sti
xchg
sti
mov
xchg
jg
mov
sahf
jg
test
cld
call
dec
dec
or
das
movsb
out
cmpl
jp
testb
and
mov
add
fdivrl
and
mov
jmp
sbb
aas
push
out
cld
mov
and
lea
fisubs
call
mov
fistps
mov
mov
mov
add
cmp
incl
cmp
xchg
arpl
mov
push
jnp
xor
popa
push
std
xchg
inc
jnp
les
cmpsl
cli
das
inc
jnp
je
mov
adc
jnp
pop
popa
sub
test
pop
adc
decb
add
mov
add
ret
xor
mov
js
mov
sti
push
and
xor
out
sbb
in
shr
push
push
shll
push
push
pop
pop
loop
test
cmpsl
adc
xor
add
mov
rep
mov
das
jbe
xchg
push
fs
or
addl
jmp
aaa
gs
jmp
or
dec
ljmp
lea
cmc
or
cmp
aaa
outsl
in
and
sbb
fwait
xchg
jg
add
rol
pop
addr16
push
and
push
mov
in
movlps
mov
pop
adc
xchg
in
int
push
add
adc
es
loop
dec
mov
add
cmp
cmp
daa
orl
pop
mov
cld
xchg
and
cld
or
jge
rcrb
cltd
clc
and
jge
pop
sbb
js
xlat
jo
adc
sub
leave
xchg
fbstp
es
push
insb
sub
sti
push
sarb
jle
loop
inc
mov
push
jbe
daa
daa
mov
lea
sti
add
and
pop
js
test
and
sarb
or
fs
add
frstor
cld
push
or
vpmacssdqh
ljmp
or
pop
incb
loop
add
jns
in
add
mov
decl
inc
dec
pop
out
sarb
add
rclb
outsb
cld
pop
pop
loop
clc
mov
add
cld
jmp
adcl
clc
lea
jg
xchg
mov
mov
jecxz
jnp
jns
or
mov
mov
add
cmpsb
xchg
jnp
lock
jp
add
sbb
leave
push
push
add
mov
std
or
mov
add
xchg
jg
hlt
ss
std
xchg
adc
movsl
scas
push
data16
sub
jecxz
decl
xchg
inc
lock
push
push
out
push
inc
jns
clc
dec
adcl
cmpb
push
aaa
push
push
sub
repz
clc
push
je
out
lret
jmp
adc
mov
shll
pop
lods
cmpsb
test
xchg
jmp
adc
adc
push
pop
stos
add
jnp
xor
or
cs
lahf
mov
mov
add
push
lret
sub
dec
mov
inc
cmpsb
into
and
test
and
and
dec
mov
addr16
xchg
push
outsb
ret
or
mov
add
mul
push
mov
add
xchg
test
dec
arpl
les
divl
loop
sti
cmp
jns
cli
mov
sbb
mov
cld
cmp
ljmp
pop
cltd
fcomps
rolb
pop
aas
cmp
js
pop
push
sbb
insl
sahf
push
sti
jmp
cmp
imull
fidivrs
sti
push
dec
and
bound
test
mov
pop
add
sbb
incl
test
cld
pushl
leave
add
lahf
filds
push
push
mov
adcl
cmc
call
mov
cld
jmp
jg
jmp
cld
push
ljmp
jle
jo
add
mov
enter
rorb
repz
lock
jmp
add
xchg
lcall
mov
icebp
fsubs
cmpsb
mov
in
fs
inc
arpl
push
jne
mov
jg
and
lahf
jnp
inc
mov
pusha
scas
xchg
mov
decl
cmpsl
cwtl
ja
js
std
xchg
cmc
aas
jnp
into
std
and
cmp
outsb
sahf
push
adc
lods
std
hlt
fmul
jae
dec
aam
mov
popf
mov
clc
aam
mov
fwait
xchg
push
mov
cs
aas
jnp
push
mov
call
or
sub
and
xchg
icebp
stos
dec
and
mov
pop
adc
mov
js
sub
dec
in
mov
mov
and
jo
ljmp
and
stos
push
adc
imul
jmp
mov
jnp
mov
in
scas
xchg
loop
xchg
mov
adc
nop
clc
idivl
jmp
minps
cmp
jmp
pop
lea
fsts
mov
mov
mov
add
adcb
push
jg
out
out
or
adc
bound
lea
pop
add
push
xor
int3
add
pop
push
addr16
jmp
aam
add
test
jbe
xlat
sub
test
sub
call
sub
jle
push
xor
in
mov
lea
push
and
add
addr16
pop
cmp
add
movb
bound
addl
ljmp
xchg
jne
in
outsb
sbb
jns
push
std
jns
incl
cmp
inc
or
add
ficomps
sub
push
imul
add
mov
or
mov
and
mov
adc
inc
fidivrs
and
or
jnp
dec
and
and
xorb
adc
and
cmpb
add
mov
and
add
pushf
xor
xchg
adc
mov
cmpsb
imul
and
call
repnz
xchg
mov
add
mov
add
sbb
push
push
xor
and
lret
jmp
mov
or
sub
mov
inc
jnp
outsb
fdivs
in
add
jmp
inc
jnp
test
scas
inc
pinsrw
jns
fwait
inc
jnp
notl
jnp
sbb
mov
inc
adc
enter
testb
les
sti
outsb
jp
add
std
jp
clc
cmp
push
clc
mov
sarl
jne
adc
sti
fcoml
fwait
xor
mov
mov
bound
push
and
pop
ljmp
cmp
push
mov
lcall
xchg
mov
cmp
adc
pop
push
lcall
lcall
fsubrl
ja
fisubl
push
add
cmc
jne
popa
sub
ja
shlb
mov
or
push
sbb
leave
add
iret
inc
mov
mov
out
push
push
mov
jae
mov
dec
adcl
xchg
add
std
adc
xchg
dec
mov
mov
push
push
mov
arpl
mov
push
decl
adc
add
cld
xchg
das
sti
mov
je
mov
sbb
into
jmp
fldcw
mov
idiv
adc
add
push
insb
in
sub
push
cmc
jb
mov
inc
mov
insb
rol
imul
lock
ds
out
push
cmp
sub
push
sti
or
je
and
es
cmc
imul
or
adc
fmull
mov
jl
movl
test
lea
xchg
dec
sub
dec
xor
mov
mov
test
mov
xor
movl
and
adc
jne
icebp
mov
sub
add
stc
xor
or
scas
add
lods
into
mov
add
xchg
mov
out
iret
or
add
adcl
aad
mov
or
mov
decl
jle
mov
cmpb
sub
mov
jnp
mov
sbb
sub
faddl
sti
aam
pop
ljmp
pop
xchg
adc
fs
add
js
inc
in
mov
adc
std
mov
adc
adc
in
dec
shrb
mov
sarb
sbbl
push
push
xchg
sti
scas
adc
pop
leave
rorb
sub
in
cltd
or
xor
ljmp
fwait
pop
mov
mov
cld
incb
cmpsl
sbb
adc
jns
jne
jp
sti
jae
mov
jne
mov
push
jbe
cli
lea
adc
clc
scas
adc
lea
out
push
push
loope
cld
call
jnp
xchg
push
push
stos
inc
pushl
or
and
or
adc
inc
call
ret
dec
mov
add
jae
cmp
inc
subb
cltd
je
out
std
outsb
and
aas
jnp
mov
cmp
ja
adc
outsl
sti
adc
addr16
adc
pop
clc
or
loope
add
rep
add
cmp
ja
sub
test
xor
imul
cltd
xchg
mov
rolb
dec
jae
imul
or
sub
int3
fs
mov
jne
cmc
negb
loope
sar
or
jmp
incb
faddl
add
xchg
cmp
insl
les
ja
jnp
jo
xorl
aaa
test
pcmpgtb
jg
pop
add
mov
dec
cwtl
data16
mov
sub
subl
xchg
jbe
sub
add
inc
jmp
lods
push
mov
cmp
add
push
push
outsb
dec
add
xor
sti
lods
lret
jne
out
cld
call
js
inc
cmpsb
js
mov
in
cwtl
mov
push
pushl
add
dec
add
sti
mov
out
sti
gs
or
sbb
push
or
jmp
cld
jp
imul
or
add
dec
ds
fidivs
es
mov
icebp
lds
test
arpl
pop
add
dec
xor
jg
pop
mov
lock
dec
push
sbb
xor
mov
inc
clc
pop
mov
lcall
enter
in
or
and
and
rol
or
leave
add
push
mov
lds
adc
mov
in
mov
add
push
xor
push
jg
stos
orl
add
jmp
jb
jb
aas
enter
jb
lock
pop
jg
jle
sti
jg
sahf
or
add
cmp
jbe
js
rclb
jle
insb
jb
pop
test
shlb
sti
xor
add
jb
pop
test
shll
sti
mov
lds
fildl
lret
xor
sub
jns
mov
or
sub
int
ja
mov
xor
jecxz
int
lock
dec
lds
ror
out
lods
jg
stos
add
dec
ljmp
lcall
push
xchg
ror
daa
add
jg
lock
aam
cmpsl
cld
or
jo
cli
imul
xchg
add
hlt
out
popf
lods
mulb
in
xchg
jmp
inc
ja
mov
xchg
or
jecxz
jl
add
lret
add
add
das
cmp
or
push
jg
push
xchg
jmp
ret
jmp
sbb
arpl
dec
xchg
fwait
sti
hlt
enter
repz
je
popf
dec
imul
mov
and
lret
js
jge
jge
icebp
jb
add
pusha
cmpsl
repz
jl
xchg
lods
fisubrl
ss
adcb
or
adc
add
repz
mov
xor
aam
ljmp
cmpl
fwait
adc
add
adc
mov
inc
sub
aas
clc
popa
and
mov
mov
ffreep
mov
pop
sbb
pop
adc
outsb
or
into
add
pop
mov
and
mov
decl
lcall
mov
add
adc
lods
test
cmp
jge
jae
inc
clc
add
sti
mov
int
or
mov
cmp
xchg
stc
aas
jnp
lret
daa
mov
into
out
popf
add
mov
jae
mov
out
jle
outsb
mov
mov
std
cmpsl
jbe
jb
add
dec
sbb
in
testl
data16
jp
mov
xchg
adc
mov
inc
jnp
mov
test
hlt
out
sub
lcall
cmp
hlt
add
adc
test
mov
jl
test
inc
jnp
adc
dec
add
jl
jb
dec
adc
cld
add
cs
leave
repz
jmp
adc
repz
dec
add
test
add
push
xchg
mov
pop
jl
imul
fsubrl
lcall
clc
mov
xchg
lock
add
pop
jb
or
mov
jg
inc
and
push
insb
jae
xchg
bswap
cmp
js
or
ljmp
cli
push
incl
pop
inc
add
mov
or
jp
es
xchg
sbb
or
js
jge
xchg
dec
or
out
mov
shrb
lcall
or
jge
popa
testb
xor
std
jmp
aas
or
mov
ret
dec
mov
push
push
sbb
mov
std
push
mov
aam
push
nop
test
popa
push
or
adc
mov
fidivs
or
insb
jg
cld
cmpsl
inc
cmp
iret
jne
dec
insb
aaa
add
sbb
jmp
xchg
push
push
sub
movsb
cmp
adc
adc
xor
xchg
mov
ja
cmp
jbe
add
xchg
aaa
xchg
repz
es
jecxz
pushf
and
pop
ret
jmp
imul
push
loope
jns
shrl
or
add
cs
add
pushf
sahf
sbb
pop
push
mov
fcmovnu
jae
jb
pop
xchg
cli
jle
jle
add
aas
js
push
cld
add
xor
in
mov
clc
sti
orb
pop
mov
clc
loopne
iret
and
mov
inc
jnp
push
xchg
repnz
xor
add
mov
mov
or
mov
enter
mov
std
mov
inc
push
mov
add
inc
loopne
aad
mov
jg
pusha
inc
iret
mov
add
mov
cmpsl
cld
add
inc
jne
in
jb
adc
loopne
lock
test
cmc
mov
test
jle
rcr
lret
pop
jmp
sub
icebp
push
mov
pop
mov
cli
aas
cmp
loop
aas
mov
dec
repz
jg
xchg
mov
add
push
hlt
adcb
popa
das
sub
stos
xchg
adc
cli
jmp
fs
xor
mov
andb
add
adc
add
add
int
and
mov
add
popl
add
adc
gs
and
rorb
ficompl
add
push
test
jle
mov
ficoml
push
mov
mov
and
lcall
bound
and
jns
mov
repnz
xor
push
mov
enter
andl
add
stc
cmpl
push
mov
jecxz
incl
and
add
push
loop
jnp
mov
in
jmp
and
add
push
and
jecxz
call
dec
popf
std
mov
push
jl
das
movsb
xlat
ficoml
dec
insl
rcll
fldt
sub
and
adc
push
jne
incb
jl
les
add
mov
add
cmp
jle
or
xchg
or
out
mov
dec
add
jl
scas
in
jl
in
fwait
jnp
gs
cltd
mov
imul
add
fcomip
leave
adcb
jmp
shll
in
add
jg
out
aam
mov
jnp
nop
jecxz
int3
movsl
clc
push
clc
add
jbe
add
addl
mov
jg
pop
jmp
stc
sti
lds
mov
add
mov
jnp
sti
jle
pop
jmp
jge
or
jmp
jle
add
icebp
dec
sti
cmp
sbb
and
cmp
add
mov
es
int
sbb
mov
insb
cmpl
lods
or
call
lods
or
jmp
mov
add
or
add
js
add
add
es
mov
mov
fs
inc
int
or
nop
adc
xchg
cmp
pop
fisubl
shll
mov
dec
xrelease
mov
sbb
stos
pop
add
add
push
std
push
lret
and
jg
rorb
jp
loop
mov
fld
push
ja
and
mov
add
jle
mov
xchg
mov
adc
lock
jbe
fprem
mov
roll
xchg
mov
hlt
ja
scas
test
or
inc
lahf
rcll
push
and
or
in
inc
sbb
add
mov
fdivrl
jnp
jnp
test
sti
in
sub
sub
jae
xchg
test
jecxz
in
gs
loop
add
add
fld
test
movb
pop
test
push
decb
push
and
jecxz
incl
test
call
jnp
mov
lahf
mov
faddl
inc
push
int
inc
pop
jo
mov
std
jecxz
lret
and
leave
in
add
addb
push
addb
dec
hlt
xor
jl
leave
mov
addr16
xchg
dec
in
or
mov
jns
pop
sbb
dec
arpl
into
sti
cmpsl
mov
sbb
push
add
enter
insl
xor
mov
stc
mov
popa
add
dec
lods
add
js
je
neg
test
das
or
aas
dec
bound
cmp
ja
adc
insl
lock
jmp
xchg
xlat
adc
ja
jae
add
scas
outsb
idivl
not
xor
ret
mov
repz
lods
test
je
or
lahf
jne
mov
and
orb
jbe
fs
cltd
or
scas
adc
or
loop
mov
shrl
incl
add
in
or
sub
add
sbb
xchg
push
push
sub
aaa
adc
add
cld
jns
jbe
jmp
pop
aaa
cmp
mov
pop
fdivrp
add
ja
std
adc
dec
ret
negb
rol
ret
xchg
fdivrp
adc
addl
add
sub
mov
mov
std
mov
clc
push
add
add
scas
insb
adcb
cmc
mov
inc
jb
cmp
cmp
dec
or
stc
adc
and
pop
lds
jbe
mov
mov
std
outsb
in
adc
jnp
pop
aaa
push
in
repz
inc
cmc
imul
xchg
cmp
test
inc
mov
jnp
cmp
cmp
add
stos
or
mov
icebp
cmc
pop
push
jmp
push
or
jle
mov
mov
add
cli
leave
in
imul
ljmp
lock
mov
loope
push
sub
repz
ror
and
lods
pop
movb
sbb
jmp
or
push
arpl
jnp
repnz
insl
xchg
jmp
or
sbbb
jnp
jmp
out
mov
jmp
iret
bound
movsw
cmp
test
je
cmpsl
out
adc
outsb
dec
add
mov
mov
mov
push
pushf
test
mov
out
cli
cld
cld
jg
jmp
sti
fwait
push
fidivrl
lock
lahf
sti
fwait
cli
fnstcw
lock
out
xchg
sub
or
hlt
ror
jecxz
incl
ja
out
add
or
jo
out
out
adc
imul
xchg
inc
pushf
push
add
dec
pop
leave
loopne
add
add
sbb
sbb
jo
faddl
adc
mov
or
xor
test
vmovdqa
popa
in
pop
fnstcw
sti
mov
and
and
mov
mov
mov
jb
popa
inc
pop
mov
sar
movsb
jg
dec
mov
inc
rolb
and
int
pop
cmp
xor
jnp
sub
rcr
dec
inc
jnp
or
cmp
lahf
adc
and
shrb
imul
imul
mov
loopne
dec
add
rorb
repnz
imul
push
inc
inc
das
shrl
mov
jecxz
cmp
push
add
ljmp
mov
mov
in
sbb
pushf
adc
mov
in
mov
mov
movsb
mov
or
inc
xchg
cmp
repz
insl
bnd
mov
addr16
jle
verr
popa
adc
mov
mov
jo
mov
mov
xchg
cmpb
mov
je
mov
add
jge
inc
jnp
jmp
divl
sub
mov
add
sbb
sti
ja
jl
sti
pop
jo
push
int3
mov
push
int3
cmp
cli
and
add
add
xchg
jg
push
mov
dec
push
inc
or
mov
rclb
repz
andb
icebp
add
push
dec
add
or
push
add
flds
inc
push
push
cltd
add
sar
lret
out
add
js
jne
mov
jne
iret
sub
leave
js
jbe
add
jb
addb
pop
or
std
add
movsl
jg
mov
cmp
inc
push
add
dec
add
pop
repnz
movsb
mov
add
pop
jbe
adc
std
add
and
test
subl
std
decl
cli
add
lock
test
rcl
pop
leave
mov
jp
push
fnstenv
in
or
mov
out
xchg
mov
or
jne
mov
cli
decl
popl
add
lock
adc
ljmp
mov
cmpl
push
xorl
pop
cmpb
call
cmc
mov
pop
pop
adc
clc
incl
mov
aas
or
jbe
in
in
pop
and
mov
add
imul
xchg
xchg
js
je
aas
or
jnp
repnz
sub
adc
js
cmp
jp
js
cld
scas
cwtl
mov
mov
fidivs
sbb
aas
or
jnp
fsubr
sbb
mov
imul
ret
jns
lret
pop
mov
add
dec
fisttpll
xadd
jae
xchg
mov
sub
ret
insl
pop
sub
cmp
xor
add
jns
adc
sub
shl
shlb
mov
xor
or
addr16
sub
out
or
call
out
sbb
scas
pop
cmp
dec
clc
add
pop
add
imul
or
jmp
adcb
jmp
idiv
cwtl
add
js
inc
in
imul
jmp
dec
call
or
jmp
orl
call
jg
ret
faddp
jmp
je
add
std
rolb
jmp
cwtl
mov
out
in
add
js
jge
js
test
js
add
adc
cli
push
mov
jne
mov
mov
add
mov
add
imul
adc
cmc
cli
mov
idiv
pushl
lcall
add
or
sysenter
add
std
add
xchg
dec
cmp
add
mov
pushl
les
jmp
ljmp
cmpsl
adc
mov
int3
call
dec
dec
outsl
adc
repnz
dec
pop
jg
jnp
push
out
xchg
jae
addr16
call
adc
add
jnp
jae
xchg
jae
ret
add
xchg
mov
push
and
cmp
push
les
mov
pusha
jae
mov
outsb
lock
incb
add
xor
push
dec
xor
xchg
adc
test
gs
jl
mov
xor
pop
jle
mov
push
mov
addr16
mov
jo
outsb
clc
in
cltd
sub
inc
ljmp
mov
add
mov
in
jne
dec
sti
rclb
fs
mov
in
jp
data16
lret
inc
mov
push
es
add
int3
add
test
in
add
imul
ja
jmp
subl
lret
icebp
dec
inc
aam
dec
xchg
aam
cmp
jg
out
jne
in
push
pop
jg
icebp
push
roll
js
stc
cmp
jg
jnp
push
shlb
or
in
jmp
add
inc
icebp
jnp
mov
js
add
mov
ret
call
nop
sti
pusha
div
jg
xlat
pushf
inc
out
sub
xchg
mov
lods
insb
add
js
push
jle
movsb
lea
repz
push
ja
xchg
icebp
push
loop
xor
add
mov
aas
hlt
leave
xchg
mov
loope
add
cmp
shll
js
cmp
cmc
or
push
out
out
xchg
xchg
adc
hlt
lahf
lret
xchg
pop
lret
xchg
dec
add
sbb
xchg
jae
inc
testb
jecxz
mov
gs
mov
lret
mov
loop
mov
loop
cmp
outsl
add
dec
outsl
or
loop
call
add
mov
stc
inc
add
sub
rcrb
pop
shll
mov
push
add
jle
outsl
push
pop
mov
push
call
add
adc
es
add
jmp
roll
xor
clc
aaa
add
call
addl
ja
lahf
xor
jge
arpl
inc
je
popa
enter
xorl
mov
pop
fs
mov
jnp
shrl
repnz
add
add
inc
icebp
jl
lahf
sub
add
pop
and
xlat
inc
jb
aad
cmp
xor
movb
ja
xchg
jle
push
add
jle
xchg
jo
cmp
test
add
jnp
dec
sbb
xchg
insl
sub
mov
fcmovnbe
loope
adc
adc
iret
movsb
repnz
loope
out
mov
repnz
mov
mov
aad
hlt
sub
inc
rorl
loopne
sub
clc
call
cld
fnstenv
clc
mov
xorb
hlt
lock
jns
add
mov
outsl
loope
fiadds
std
mov
inc
add
xor
jmp
jo
in
test
js
sti
push
jnp
xor
mov
xor
das
test
push
fdivrp
cmp
mov
jmp
add
push
jg
popl
jge
mov
push
mov
push
decl
mov
aas
mov
push
mov
cli
jmp
pop
add
push
inc
mov
pop
aam
punpckhbw
xchg
sub
cmp
and
fistpl
outsl
add
fiaddl
rorl
ret
aas
xor
loopne
add
mov
mov
loopne
int3
jnp
push
jbe
mov
bound
add
icebp
sti
sbb
push
in
mov
cmp
add
imul
push
jns
xchg
je
cmp
mov
dec
aaa
mov
hlt
push
add
inc
mov
jg
jnp
sub
pop
js
or
scas
stos
push
inc
inc
shll
insb
adc
jg
xchg
fs
subps
mov
mov
dec
add
out
mov
test
lods
ret
cmc
dec
movsl
sub
out
mov
repz
jne
ja
or
add
outsb
cmpsl
sbb
jns
add
dec
cmp
push
xchg
jp
rcl
cmp
out
cld
aas
adc
xchg
adc
adc
cmpsb
pop
bound
cli
xchg
cld
insl
push
mov
xchg
in
testl
adc
rcrl
push
aad
mov
ljmp
xlat
add
test
inc
mov
xor
andl
loop
movsb
in
jmp
fs
jmp
jae
in
repz
pop
lret
gs
dec
test
mov
inc
clc
out
and
add
jg
mov
repnz
ffree
movsb
cmpsl
fdivrp
faddl
into
stos
js
xor
jo
in
jle
in
repz
jle
cli
fucomp
fwait
aaa
add
incb
xchg
jno
das
movb
xchg
fbstp
jmp
push
rcll
jmp
ljmp
popa
outsl
call
pop
push
ljmp
jp
add
lret
cmp
push
mov
push
or
add
mov
sbb
mov
enter
shl
lret
sub
mov
jo
test
testl
jnp
add
pop
pusha
cmc
mov
and
mov
stos
stc
pop
push
repnz
icebp
faddl
xor
adc
repnz
imul
xor
je
or
cmp
add
jns
add
inc
pop
mov
jnp
push
leave
jmp
shlb
adc
sbb
adc
icebp
sbb
lahf
mov
add
cmpsb
mov
in
out
mov
das
add
fcmovbe
shl
sarl
push
ficompl
imul
sbbb
mov
inc
jbe
test
ss
aad
push
jmp
popaw
outsb
fisubl
jnp
test
rclb
pop
xchg
jg
cltd
js
repz
movaps
mov
ficoml
add
loop
push
or
mov
push
jnp
ljmp
jecxz
dec
js
mov
gs
pop
adc
push
push
jnp
test
inc
push
fidivs
cli
cmp
jmp
adc
xchg
and
xchg
push
jp
fstpl
fstl
fstpl
out
das
nop
out
daa
mov
out
jnp
inc
jb
xchg
sti
mov
dec
fcoms
outsl
lret
xchg
mov
cmpps
jne
mov
jle
dec
divps
push
test
add
lcall
dec
mov
mov
lea
ljmp
pop
std
jne
popa
outsl
mov
add
push
push
or
repz
mov
or
sbb
test
adc
mov
mov
sbb
push
or
std
mov
dec
sbbl
mov
sarl
mov
cld
in
gs
or
jnp
icebp
shl
cltd
int3
mov
loop
cmp
jns
push
sub
and
into
cld
mov
inc
or
outsl
push
testl
lret
data16
imul
leave
cld
pop
arpl
lods
xorl
in
cld
pushaw
adc
popa
outsb
jge
outsb
xor
loopne
adc
push
mov
jge
add
adc
cwtl
pop
and
call
data16
and
data16
xor
sbbl
iret
ret
mov
mov
jg
pusha
clc
js
mov
mov
adc
jle
gs
jecxz
loope
addr16
jl
xlat
push
loope
pop
test
aad
mov
mov
bound
sub
or
adc
ret
add
enter
in
test
je
stc
inc
cli
fnstenv
cs
xchg
shlb
mov
add
sbb
pushf
cmp
in
std
scas
push
xor
lock
movsl
xchg
add
out
sbb
push
cmpsl
xchg
add
push
cmp
dec
inc
push
dec
pop
add
jo
xor
xchg
push
xlat
cmp
call
xchg
dec
push
cmp
xor
bound
ja
call
pop
adc
cmp
test
inc
shl
or
aaa
xor
push
jnp
add
lret
or
subb
int3
popa
popl
outsl
adc
jecxz
add
cmpl
adc
jmp
add
orl
rorb
add
ret
daa
cli
push
mov
jae
out
push
adc
loope
mov
flds
sbb
adc
ljmp
mov
incl
sarb
jmp
insl
or
add
inc
aaa
cmp
push
mov
pop
es
out
dec
add
mov
add
mov
and
incb
mov
dec
mov
add
mov
rolb
add
dec
pop
xchg
fucomi
adc
inc
ljmp
adc
cmp
jae
ret
add
dec
mov
stc
lret
jl
repz
addr16
insb
mov
mov
jns
cmp
mov
dec
hlt
dec
rorl
sti
and
mov
and
imul
sarb
scas
aad
cmp
jge
sub
outsb
loope
dec
push
sarl
sub
push
add
rorb
gs
mov
jmp
or
loop
cltd
shlb
call
xchg
add
jg
insb
cwtl
sar
push
enter
and
sar
negb
or
in
adc
cli
call
std
sbb
pop
sarl
js
jl
sar
scas
out
pop
push
ja
jg
or
inc
stc
add
xor
push
xchg
in
fistps
ret
jne
test
and
jbe
cmpsl
or
pushl
adc
mov
loop
ret
pop
cld
jmp
push
push
xchg
inc
or
loope
add
pop
sub
or
push
es
imul
push
es
imul
stos
mov
ja
mov
das
cmc
jg
ljmp
lahf
pop
decl
mov
out
push
std
jmp
roll
clc
cmpsb
pop
add
pop
adc
xchg
push
add
jb
cmc
pushw
sub
bound
lcall
and
decl
mov
push
add
jle
inc
xchg
imul
lea
lock
add
jne
insb
es
jg
jg
adcl
add
orb
lahf
sbb
jnp
pusha
shll
adc
and
xchg
cwtl
pop
jecxz
mov
xor
dec
daa
add
jnp
imul
jecxz
xchg
add
andl
lods
pusha
jnp
repnz
addr16
add
pop
inc
jnp
jmp
andb
add
inc
fstl
add
les
rcrl
shll
daa
addl
cmp
add
add
jb
sti
icebp
mov
sub
add
insb
dec
jbe
bound
xor
jmp
jmp
adc
fisttpl
pop
icebp
pop
sbb
loop
arpl
cli
insl
mov
add
ljmp
adc
and
mov
mov
ljmp
push
or
imul
vmread
push
add
xchg
clc
add
add
sbb
outsl
mov
add
lea
std
lea
std
inc
cmp
or
jmp
inc
rcrb
jnp
jmp
outsl
clc
mov
fs
test
add
or
mov
mov
add
cli
cmp
inc
adc
inc
clc
leave
inc
dec
push
adc
inc
in
mov
imul
push
dec
add
jnp
mov
fdivr
jnp
push
push
pop
inc
lret
jnp
mov
xchg
outsb
pop
xor
pop
test
cmpsl
jb
add
mov
or
jae
pop
push
push
mov
pop
jge
jno
mov
cmp
dec
sbb
mov
scas
dec
repnz
std
outsb
add
aas
add
inc
or
les
pop
adc
mov
mov
call
add
in
jmp
push
sub
cmp
dec
icebp
push
lds
and
repz
xchg
mov
orl
hlt
lret
popa
sbb
imul
mov
data16
dec
pop
sub
add
hlt
mov
xchg
mov
mov
pop
inc
sbb
dec
mov
add
sub
add
iret
pop
mov
adc
pop
inc
negb
pusha
jg
jp
ljmp
ret
cmc
cs
jmp
hlt
inc
cli
jmp
sub
and
pop
ljmp
push
mov
jg
rorb
jmp
cmp
push
push
and
popa
sti
mov
ror
sub
sbb
js
xchg
xchg
fs
lcall
loop
push
insb
into
cli
pop
pop
ljmp
outsl
add
jg
aad
jecxz
add
xchg
and
imul
add
xchg
xchg
xchg
lea
mov
lea
bswap
sub
add
xor
xor
adc
push
sbb
fistpll
hlt
gs
push
gs
mov
sbb
sub
les
scas
mov
add
lea
mov
add
scas
dec
aam
ret
mov
les
aad
roll
lar
lds
or
jmp
jnp
and
lock
sub
or
jp
xchg
das
aas
je
test
pop
std
dec
cmp
arpl
orl
inc
add
incb
jge
add
pop
stos
enter
dec
jmp
test
xchg
movsb
mov
stos
movb
adc
inc
dec
mov
mov
push
mov
adc
pusha
cld
dec
rcrl
mov
add
dec
test
pusha
jnp
push
in
xchg
jo
add
loope
pop
jl
dec
adc
pop
jmp
ljmp
pop
fucomp
jl
push
movsl
pop
cmp
push
cli
jmp
ret
mov
mov
pop
dec
push
lea
imul
icebp
xchg
sbbb
add
mov
mov
jmp
ds
push
cmp
jne
enter
movsb
leave
push
mov
test
cwtl
mov
out
push
loop
rclb
test
les
cmp
jge
or
jg
jg
xor
lea
iret
pop
dec
call
sub
clc
mov
imul
lret
jmp
jbe
jge
fdivrp
bound
mov
call
add
add
roll
or
call
fsubrp
add
aaa
sbb
jmp
pop
add
ljmp
test
fcoml
incl
mov
push
mov
add
mov
arpl
sti
lcall
inc
pop
ljmp
outsl
add
out
inc
repnz
cld
data16
aas
add
mov
inc
xchg
mov
add
push
and
mov
clc
xchg
cmp
mov
pop
lock
cmc
mov
retw
out
cmp
repz
cmp
jno
add
xor
int3
cmp
incb
test
add
aaa
jno
add
inc
inc
jnp
scas
cld
data16
in
aas
jnp
jo
add
into
in
add
and
or
xchg
mov
nop
in
in
cmp
mov
pusha
cltd
test
mov
mov
mov
adcb
mov
mov
aas
cmp
add
scas
and
ret
mov
and
ret
stos
fisubl
pop
and
ret
fiaddl
mov
ret
mov
xchg
mov
and
ret
jnp
mov
cli
bound
addl
xlat
push
and
js
ljmp
shlb
push
and
js
jae
mov
shlb
ds
js
push
bound
push
sti
jge
pop
xchg
mov
sbb
movsb
outsb
push
push
mov
cli
sarb
push
and
js
xchg
cmc
cmpsl
stc
jb
mov
fcompl
push
sub
push
je
outsb
cmp
hlt
lret
aam
cli
add
fldenv
lret
bound
loop
pop
xchg
mov
lea
fimuls
dec
push
push
ret
cmpsb
adc
fisubrs
call
fcomi
push
sbb
or
add
lea
or
push
push
dec
aad
push
xor
mov
addl
ret
lds
adc
xchg
lea
orb
mov
pop
mov
jnp
test
add
insb
pop
aas
inc
cli
adc
add
mov
jnp
add
ficompl
mov
push
mov
cld
outsb
or
aas
jnp
push
cmp
loop
mov
mov
imul
mov
addr16
lahf
popa
sarl
and
psubusb
jl
jp
out
ud0
lock
decb
or
daa
ret
and
mov
int
pop
inc
in
add
lods
stc
lret
aam
jmp
jl
addr16
inc
xchg
xor
xlat
pop
lahf
push
stc
jle
fcomps
push
cmp
neg
xchg
test
dec
pop
jbe
cwtl
outsl
mov
mov
pushf
jmp
cwtl
jg
add
bound
cld
xchg
sub
ret
orb
sub
call
mov
xchg
xchg
stc
add
mov
imul
and
sub
jne
pusha
rclb
jg
xor
imul
or
cli
cmc
xchg
ja
andb
cmp
popf
add
int
das
sub
adc
pushf
mov
imul
sub
aaa
es
cmp
js
push
pusha
les
pop
adc
inc
pop
es
pop
push
and
mov
lods
add
mov
jae
call
sbb
push
and
push
std
je
cltd
std
cmp
fsubs
mov
adc
sbb
std
xor
ret
mov
mov
gs
incl
dec
std
mov
gs
jns
jo
mov
push
sbb
adc
inc
and
testl
push
and
dec
je
mov
xchg
std
dec
cmc
mov
jae
push
push
sub
lods
pop
pushf
bound
std
or
mov
scas
xchg
bnd
mov
xchg
xorl
lods
jns
dec
cmp
incb
mov
sarb
adc
sarl
cmp
add
dec
dec
sbbb
mov
rclb
roll
dec
dec
xor
idivl
adc
xchg
pop
divl
adc
xor
mov
push
dec
mov
mov
dec
add
push
test
dec
clc
lret
xor
cli
lret
out
pop
mov
out
jne
outsl
dec
add
mov
loope
pop
ss
mov
mov
cmp
loope
push
imul
jnp
lods
add
mov
mov
mov
and
mov
insl
dec
xchg
dec
outsl
addr16
pop
jo
sbb
insl
push
addr16
mov
xlat
xchg
dec
icebp
mov
add
jl
ljmp
aam
call
arpl
shl
mov
adc
mov
sbb
repnz
scas
rorb
sbb
mov
adc
push
add
mov
js
xchg
jmp
ds
test
push
sti
inc
arpl
add
add
bound
lahf
inc
jmp
cmp
sub
adc
push
mov
repnz
mov
ljmp
inc
outsl
clc
sbb
out
call
push
dec
or
add
lret
add
pop
xchg
aaa
aas
or
pop
mov
call
insl
add
aas
mov
adc
test
stos
push
push
loope
push
incl
das
mov
adc
mov
repz
mov
andps
int
push
jnp
push
mov
mov
fsubp
adc
movsb
jbe
mov
aas
je
ljmp
jg
mov
jae
mov
jae
lret
dec
je
dec
jae
repnz
and
add
jnp
jge
cli
push
mov
jnp
mov
mov
cmp
lock
jnp
inc
or
idiv
xchg
lret
adc
mov
jmp
inc
push
popf
mov
dec
xchg
sub
mov
jl
add
stc
shll
lret
rorl
out
loope
or
cs
add
mov
jnp
sar
dec
fnsave
jnp
fnstenv
clc
rclb
dec
cmc
mov
or
cs
clc
lret
mov
dec
mov
cmc
mov
sub
mov
fldl
data16
std
mov
sub
inc
fisttpll
mov
xchg
push
xor
fs
aas
int3
imul
xor
ljmp
fcoml
call
ja
mov
js
lea
cli
mov
mov
scas
push
adc
jg
inc
in
stc
iret
or
pusha
cmp
mov
inc
scas
fsubrl
jle
xchg
pop
pop
xor
sub
and
add
in
and
cli
addb
mov
push
pop
fistpl
or
lea
dec
mov
push
call
in
arpl
rorl
push
add
xor
push
arpl
add
adc
sti
jmp
mov
pop
mov
dec
xchg
mov
std
jne
xor
incl
push
int3
add
std
jne
xor
call
leave
mov
addb
lret
mov
pop
hlt
pushf
cmp
cmpsl
cmp
in
stos
adc
jl
inc
dec
dec
cmc
ja
addr16
ret
mov
lds
nop
xlat
imul
cs
mov
jp
jns
lock
dec
stos
jb
jae
int
pop
xchg
mov
std
je
dec
subl
add
sbb
fadds
cmpsb
fdivr
add
inc
adc
loope
lock
jns
sti
mov
cli
dec
testb
sti
les
sub
dec
inc
dec
mov
js
mov
sti
dec
mov
and
je
sub
test
jmp
movsl
push
push
xor
mov
dec
cli
cmpsl
add
add
fmul
addb
js
fwait
aas
add
push
or
inc
jbe
sub
into
jl
mov
push
shr
add
adc
shlb
jl
outsl
fldl
xlat
ret
xor
add
in
mov
lea
sti
int3
sbb
jae
or
xor
sub
jmp
xor
push
loopne
xchg
es
xor
daa
rolb
ret
sbb
mov
int
stos
dec
pushf
aas
mov
test
imul
stc
loopne
add
js
lea
cmp
ljmp
push
inc
int
pop
push
sahf
jb
adc
ja
xlat
push
jg
add
nopl
cli
imul
dec
andl
outsl
adc
add
xchg
std
je
xchg
std
je
xchg
ljmp
sbb
jp
fdivr
jne
mov
std
ss
adc
rcl
loop
lcall
call
sub
pop
cmp
fistps
addb
dec
add
lea
dec
std
lea
dec
std
lea
lcall
add
inc
je
xchg
aas
adc
mov
or
jae
mov
jmp
push
add
sub
add
add
lock
repnz
mov
movsl
lgs
mov
outsl
jne
and
cli
push
cmp
cld
push
or
lret
jne
je
mov
lret
movsb
test
add
add
pushf
mov
or
dec
lret
jns
mov
jecxz
sbb
or
mov
mov
cmp
mov
into
cmp
mov
les
ljmp
mov
sbb
jg
inc
outsl
popf
sub
je
adc
mov
mov
mov
lret
cmpsb
aas
sub
dec
jmp
mov
adcl
fldl
and
add
and
lods
add
test
stc
sub
mov
mov
scas
movsl
js
xchg
mov
inc
or
push
test
lods
js
xchg
adcb
xor
mov
inc
sub
xchg
mov
arpl
dec
push
xor
add
jb
insb
sbb
add
jo
imul
xchg
inc
in
inc
or
lds
xchg
mov
pop
jae
add
out
ss
ret
loope
dec
sub
xchg
add
add
mov
or
inc
adc
add
push
pop
add
cli
cmp
xchg
je
push
ret
push
and
bound
adc
mov
rorb
lods
xchg
push
adc
mov
add
mov
push
les
hlt
je
add
dec
lret
ljmp
rorl
push
xor
pop
add
jnp
lea
dec
mov
xchg
into
mov
ljmp
cwtl
aam
clc
xchg
push
add
lea
mov
mov
movsb
mov
cmp
jae
test
push
and
bound
xchg
xor
decb
adc
ret
and
adc
jg
movsb
imul
mov
jmp
cmp
mov
jo
mov
add
lods
jmp
sub
mov
or
dec
pop
pop
lods
fs
iret
test
push
mov
push
mov
mov
cmp
orl
add
ret
jno
loopne
add
add
imul
les
add
or
add
icebp
rcr
sti
std
add
in
dec
add
lds
arpl
cmp
testb
mov
scas
or
xchg
iret
jno
scas
or
scas
arpl
iret
dec
push
fmulp
sar
lcall
stos
mov
scas
lret
ss
push
lcall
add
flds
dec
push
push
jg
ljmp
xor
xchg
kmovb
inc
inc
call
mov
add
mov
adc
xor
dec
lcall
cmp
hlt
adc
test
xchg
cmp
inc
jo
dec
mov
add
xchg
shr
sbb
mov
inc
cmp
loop
jmp
aas
mov
aas
adc
push
jmp
adc
cmp
adc
dec
lcall
cmp
outsb
inc
data16
pop
sbb
or
mov
xor
mov
inc
xor
sub
out
add
push
xchg
cwtl
std
push
mov
decb
scas
sbb
jmp
ja
xchg
mov
dec
fwait
insb
mov
dec
push
sbb
adc
dec
jae
jp
jp
decb
sbb
das
cmp
sahf
and
pop
sbb
sti
jb
sub
mov
cmp
mov
xor
mov
cmp
mov
mov
iret
mov
add
fwait
addr16
bound
add
sti
das
leave
add
daa
stc
add
lahf
sub
jmp
daa
int
mov
xsavec
ret
mov
aas
cltd
in
test
jne
or
ret
test
repz
je
push
and
push
mov
cld
ds
test
add
pop
call
in
push
inc
xchg
mov
mov
es
sbbl
cmpsl
mov
stos
dec
mov
rorl
leave
inc
rol
enter
xchg
mov
push
xor
dec
ljmp
lods
mov
adc
dec
lret
jl
idivb
loop
xor
cmp
bound
mov
jb
xor
and
outsb
fdivrl
mov
out
inc
sbb
dec
adc
sbb
loopne
mov
jl
inc
xchg
lea
pop
shr
cmp
cmp
rcrb
repnz
jnp
dec
mov
std
xor
shl
inc
leave
call
cld
lcall
aam
mov
lds
ret
pop
mov
rolb
pop
dec
mov
or
dec
leave
aam
mov
aam
mov
mov
clc
xor
aas
adc
inc
mov
jnp
cmp
mov
sub
dec
decl
mov
add
pusha
jb
inc
lret
jns
mov
test
repz
or
mov
rolb
js
ret
outsb
pop
or
or
sub
into
or
dec
cld
inc
cld
xor
add
ja
ret
mov
add
xchg
es
testl
hlt
pop
popf
mov
popa
shlb
push
jnp
movsl
dec
aam
lods
aaa
int3
push
adc
pop
jnp
out
mov
mov
shlb
movups
daa
or
or
jno
addr16
es
dec
adc
dec
push
mov
add
dec
mov
cmp
mov
push
loope
mov
mov
mov
or
hlt
inc
mov
and
mov
xchg
add
xchg
les
dec
cmpb
add
clc
xchg
or
mov
sbb
cmpsb
add
jg
in
mov
xchg
push
popa
mov
filds
cld
call
mov
dec
cld
jmp
lret
adc
out
sbb
mov
sar
mov
sti
sbb
mov
popf
add
cwtl
lods
lret
je
outsl
sbb
add
cmc
out
cmovge
out
addps
add
add
xor
sahf
sti
xor
mov
les
mov
icebp
sbb
adc
bound
inc
push
mov
push
std
sbb
adc
jle
inc
sbb
pop
std
pop
xchg
and
pop
sub
add
out
xorl
push
push
insl
lcall
stos
out
jnp
cmp
adc
fsts
test
decl
mov
dec
jae
repnz
mov
jge
out
jge
or
jnp
sar
clc
cs
sub
xlat
je
add
push
lods
rcll
sub
lods
mov
xlat
add
out
push
mov
inc
inc
lahf
mov
jnp
cmp
mov
ss
lods
jnp
push
sub
adc
push
sbb
mov
lock
data16
out
mov
adc
mov
cld
pop
jne
xchg
xchg
cmc
push
cld
pop
jne
andb
pop
outsl
mov
daa
add
mov
jp
jmp
mov
inc
mov
shlb
test
jle
xchg
iret
fcoms
fwait
jecxz
lods
dec
bound
mov
pop
cld
add
sarl
mov
jnp
cmpsl
push
cmp
push
jb
xchg
or
jge
mov
mov
add
add
fisubrs
test
int3
xchg
jne
jg
jno
push
mov
repz
dec
dec
aaa
rolb
dec
push
out
or
in
cmp
repz
fidivl
push
add
lea
add
inc
ret
inc
bound
shll
mov
push
int
jg
sbb
mov
add
icebp
repnz
xchg
mov
pop
push
or
cmp
cmp
pop
dec
jle
cltd
loope
jmp
sti
dec
negb
inc
clc
leave
loopne
jl
pop
aas
cld
imul
or
incl
xchg
add
pop
inc
cmp
js
mov
leave
push
mov
dec
mov
sbb
pop
jmp
xchg
mov
in
add
adcb
mov
push
mov
mov
push
add
sub
inc
out
std
jnp
enter
shrl
adc
mov
sbb
xlat
test
rol
mov
push
imul
mov
lret
xchg
xorl
shlb
push
push
add
xchg
jl
mov
inc
mov
leave
jo
mov
repnz
inc
mov
pop
sti
mov
js
mov
movsb
ja
jae
sub
subl
sub
jmp
shlb
cmp
daa
movsl
add
daa
leave
add
daa
roll
daa
lds
add
lds
xchg
jl
xlat
popa
rorb
es
cmp
dec
aam
clc
shl
sti
pop
addl
jbe
adc
dec
jbe
call
mov
loop
push
cld
repz
jb
int3
and
enter
cmp
mov
cli
lret
add
outsb
in
add
jb
movsl
ss
adc
fdivp
cmp
rolb
mov
xchg
mov
cmpsl
add
push
mov
xor
mov
jno
lea
ss
fsubr
loope
inc
or
ds
cld
call
cmp
mov
add
imul
add
xor
aaa
mov
add
mov
and
arpl
incl
push
and
roll
jmp
pushf
or
lahf
outsb
add
xlat
test
outsl
inc
std
jne
outsl
outsl
clc
bound
hlt
cli
out
incl
aam
decl
push
or
jne
lahf
mov
push
outsl
outsl
hlt
imul
mov
pop
aas
decb
std
call
pop
lds
add
mov
push
mov
mov
icebp
clc
out
adc
out
adcl
push
decb
clc
sbb
lock
sbb
mov
shlb
std
mov
jmp
adc
jnp
clc
add
push
int
repz
mov
out
add
xchg
adc
jnp
jae
shl
repnz
push
mov
inc
xchg
jge
iret
lea
jnp
mov
mov
xor
cmpsb
or
mov
mov
cltd
sub
mov
jle
push
cs
xor
mov
mov
mov
push
inc
sub
leave
mov
rclb
ret
stc
cmpsl
sub
xor
sbb
push
xor
jne
jnp
imulb
cli
pop
addl
aam
call
mov
jl
dec
add
dec
jg
mov
add
cmp
jecxz
cmp
add
adc
mov
es
and
stos
negl
popf
ss
adc
dec
shll
sub
adc
add
adc
jmp
jle
dec
out
cmp
test
push
test
lea
mov
js
sti
sub
or
js
jne
and
add
push
gs
clc
jno
pusha
add
pusha
add
xchg
mov
push
pushf
add
outsb
dec
fildl
push
mov
push
ret
and
cwtl
push
add
or
xor
add
push
push
aam
dec
ja
jmp
arpl
rcr
leave
rorb
sub
mov
jmp
incl
pop
outsl
sbb
adc
xchg
push
cmpsb
inc
fdivr
imul
mov
cmp
lock
out
mov
xchg
out
mov
sub
add
mov
add
cmp
sahf
stc
mov
sub
add
repnz
outsb
ja
lock
pop
shrb
sbb
ds
clc
enter
lods
ja
outsl
pop
lret
xchg
sbb
mov
mov
js
out
cmc
cmp
jo
add
jo
xchg
lret
out
or
xchg
ds
push
add
mov
jge
cmpsl
andps
nop
add
hlt
push
sub
aaa
and
jl
lahf
jno
movsb
push
sub
add
jmp
sbb
jl
xchg
sti
mov
xchg
push
xchg
jne
jbe
cmp
jp
add
inc
xchg
lret
jp
xchg
repz
mov
mov
push
mov
add
mov
and
aad
mov
jecxz
cld
pop
inc
jl
fbstp
enter
inc
xchg
les
xchg
test
push
dec
jg
cwtl
mov
push
mov
add
dec
loop
mov
das
mov
mov
lods
xor
adc
mov
or
in
adc
jmp
cmpsb
dec
shr
add
dec
out
adc
jae
rorl
bound
out
ret
dec
fidivs
mov
jbe
adc
sbb
nop
sbb
cmpsl
aam
loope
aas
sbb
adc
rorl
addl
ljmp
lret
sbb
pushf
aam
add
push
xorb
add
mov
in
lret
xchg
outsb
aaa
adc
std
add
out
xchg
cmp
fldt
or
adc
shll
sti
mov
fnsave
inc
inc
mov
inc
xor
jae
or
push
aas
call
adc
add
outsl
outsl
les
stos
testl
cs
js
jl
outsb
fsubs
dec
jecxz
lods
repz
jmp
mov
cmp
pop
add
and
ds
mov
ds
loopne
shlb
sbb
jp
add
clc
fists
adc
out
or
in
mov
addr16
pop
andl
loop
std
mov
les
xor
repnz
fstp
mov
mov
add
pusha
fwait
mov
and
push
andl
cmp
shrl
jae
insl
mov
sarl
ffreep
push
jae
mov
jnp
cmc
push
dec
push
sub
popf
ja
bnd
sti
xchg
dec
and
cltd
mov
cwtl
add
xchg
xchg
add
add
inc
les
dec
jl
mov
data16
arpl
or
sub
push
enter
inc
in
jne
push
pusha
mov
aaa
and
jle
fstpl
icebp
sbb
enter
fs
in
mov
push
in
std
sahf
inc
lcall
arpl
inc
addb
and
add
outsl
mov
jmp
jne
or
and
ljmp
mov
xchg
inc
sbbl
push
in
fwait
rol
mov
ds
mov
loope
pop
fcomp
sub
add
aam
mov
pop
enter
fcmovb
punpcklwd
add
loop
cmpl
xchg
add
popf
xor
popf
sbb
mov
fs
push
inc
add
in
enter
push
ret
into
cmp
js
push
dec
xor
mov
das
dec
or
jnp
test
mov
ljmp
repz
lret
cmp
int3
outsb
mov
ljmp
add
das
js
push
add
sub
lods
mov
int3
iret
je
inc
mov
scas
jle
jnp
mov
add
pop
or
jnp
shrb
sti
push
jae
sbb
mov
mov
mov
int3
mov
add
dec
icebp
ja
fldcw
fs
jmp
xchg
pop
mov
add
xor
or
add
mov
dec
inc
lret
insl
mov
add
inc
loope
dec
mov
scas
inc
dec
jo
xchg
push
add
inc
repnz
cmpsb
add
movsl
jae
mov
sti
lret
out
mov
jg
dec
add
mov
addl
add
ret
mov
lds
add
cmp
xchg
mov
ljmp
jae
and
ret
into
xchg
jbe
xor
or
in
xor
outsl
mov
push
shlb
mov
jmp
push
into
add
js
jg
les
decb
xchg
addl
cmp
lret
xchg
mov
add
in
mov
jmp
pop
pop
add
out
push
jb
mov
adc
rorb
add
mov
dec
rorb
add
lods
add
mov
add
mov
dec
mov
cmpl
hlt
or
fildll
call
sub
or
inc
je
mov
outsb
push
and
testb
fscale
jne
add
gs
repnz
pop
push
mov
pop
xchg
cli
jnp
sbb
xlat
add
xor
out
mov
out
xchg
sbb
jae
sbb
mov
sbb
std
and
sti
mul
xchg
or
outsl
xor
mov
mov
xchg
movaps
repz
sub
mov
insl
sti
fcoml
push
sbb
les
cmp
enter
jp
mov
adc
sbb
roll
adc
cmp
icebp
sbb
ja
xchg
inc
mov
push
fcomps
push
adc
jns
fld
push
mov
add
ljmp
dec
sbb
jnp
mov
sbb
xor
popl
cmp
js
bound
add
or
xchg
lods
or
loopne
sub
ja
mov
loop
mov
movsb
popa
lods
add
test
scas
mov
je
clc
addl
jmp
js
sbb
cmp
mov
lods
orl
cli
jmp
or
push
fimuls
adc
jg
ret
push
fisubrl
jle
add
or
xchg
fistl
jno
cli
sahf
dec
lea
cmp
add
xchg
pusha
bound
xchg
pusha
sub
xchg
mov
cmpl
stos
add
xchg
sbb
xorl
add
push
inc
or
dec
or
or
mov
rolb
pusha
cmp
or
int3
mov
popa
stc
je
xchg
scas
inc
dec
adc
adc
lea
and
inc
clc
xor
negb
and
sti
and
mov
jmp
lret
inc
clc
loop
add
adc
rorb
lea
ljmp
cmp
dec
xor
dec
lock
push
call
push
cmp
dec
xor
dec
lock
or
test
std
loope
scas
mov
jne
add
das
xchg
insb
or
xchg
shrb
push
xchg
pusha
sbb
imul
data16
aas
jnp
ret
add
xor
incl
in
add
xchg
jno
push
aam
idiv
pushw
idivb
jnp
mov
add
gs
dec
jmp
jmp
and
popf
jnp
dec
mov
xchg
je
divl
imul
sbb
cmpsl
add
in
mov
jmp
int
add
mov
push
das
mov
fnstsw
pop
test
enter
sub
jnp
add
in
mov
dec
jne
jl
in
push
jnp
fs
cld
or
insl
hlt
or
pop
mov
mov
pop
sub
sbb
adc
ljmp
add
pop
jbe
add
sub
dec
bound
mov
lcall
js
adc
add
addr16
test
ret
fisubs
inc
adc
lret
jo
cmpsb
gs
out
je
add
js
xor
adc
sub
mov
int
cli
out
lods
add
pop
lret
add
dec
mov
mov
inc
int3
dec
leave
jmp
dec
lret
test
incl
xlat
dec
cld
iret
loop
cld
xchg
mov
std
push
lahf
idivl
cld
popa
mov
add
adc
cmpl
inc
call
inc
adc
lds
push
mov
mov
mov
or
add
jo
mov
sbb
push
sub
push
outsb
addl
rolb
push
lods
addr16
or
shll
out
jae,pt
icebp
shr
jmp
decb
xor
insb
sub
sbbb
xchg
jnp
mov
out
mov
xchg
cmp
jp
test
or
xchg
jb
or
std
test
jp
jl
or
jnp
mov
clc
mov
and
push
pop
mov
aaa
and
xlat
xlat
mov
pusha
loop
jnp
div
icebp
int
sub
popa
adc
arpl
jle
daa
std
movsb
orl
adc
imul
loop
sub
shlb
sub
inc
aad
cmpsl
ja
fstl
lods
or
mov
fisttpll
aad
sub
ss
je
in
je
in
cltd
inc
cmp
je
pop
pop
cmc
cmp
mov
or
adc
rolb
xorb
into
sahf
icebp
and
dec
call
insb
add
into
xchg
mov
jne
cli
dec
add
dec
or
mov
jmp
sarl
push
sbb
or
mov
jmp
cmp
add
push
push
push
dec
mov
stc
mov
add
mov
fiaddl
and
dec
fistpl
test
aaa
not
popa
lret
xchg
jle
add
mov
push
and
lea
cmp
mov
dec
or
mov
notl
popl
add
lea
orl
cli
jae
pop
idiv
pop
jns
adc
leave
push
push
mov
push
adc
sbb
add
cli
test
imul
mov
and
sahf
cmc
xchg
add
mov
clc
test
add
mov
rcl
sbb
aam
push
std
jl
out
jnp
add
jnp
jg
jp
fisttps
ficoml
sbbl
jmp
cwtl
push
lds
adc
in
rorl
cs
pop
nop
daa
push
jb
in
hlt
mov
jnp
subb
mov
adc
imul
adc
jae
adc
xorb
repz
lock
adc
push
lods
add
dec
call
xlat
or
jnp
and
mov
add
loopne
mov
jmp
inc
nop
addr16
jmp
ja
pop
pop
add
ret
ret
out
mov
lahf
jae
jae
jae
jg
inc
xchg
test
jnp
xchg
ret
iret
mov
xchg
cmp
mov
mov
bound
dec
mov
jg
aam
popa
fwait
or
mov
std
jecxz
jne
add
cmpsl
ds
aas
imul
movsl
mov
mov
addl
xor
push
movsb
or
test
repnz
push
push
scas
push
cli
ss
or
mov
jmp
and
loope
jg
in
push
data16
add
seto
fstps
push
enter
inc
cmp
xchg
testl
push
jmp
repz
rdpmc
add
mov
adc
pop
lret
lahf
mov
xchg
lahf
jp
cmp
add
mov
xchg
mov
mov
mov
dec
push
add
xorb
and
push
int3
je
adc
je
pop
sarl
jp
xchg
jnp
mov
pop
test
xor
adc
inc
clc
xchg
stc
cmpb
sti
out
add
scas
push
mov
and
cmp
loopne
xor
mov
inc
clc
adc
or
push
icebp
and
or
call
add
je
mov
jb
inc
icebp
push
loopne
mov
or
ds
imul
mov
add
jne
adc
mov
loop
cld
or
add
mov
lods
rolb
pop
dec
fildl
push
mov
cld
out
lods
mov
movb
sbb
adc
cld
push
lret
sbb
in
loopne
cmp
cmp
mov
mov
dec
icebp
xchg
std
push
add
dec
mov
xor
push
sub
add
dec
add
in
clc
mov
xor
pushf
lcall
jae
mov
gs
mov
push
or
cli
jb
xchg
push
sete
xorl
inc
mov
jb
outsl
jo
jg
adc
pop
jmp
mov
cmp
inc
mov
leave
loope
cmp
out
lock
sub
addl
aas
mov
add
mov
cli
test
dec
add
mov
icebp
cmp
in
xchg
inc
push
xchg
cmp
add
bnd
test
fnstenv
imul
scas
sti
push
mov
pop
cli
clc
add
imul
xchg
jge
call
aas
dec
call
dec
push
cmp
mov
sbb
call
call
popl
add
add
push
sbb
mov
loop
das
test
test
jne
mov
lea
pcmpeqw
out
xorl
testl
jnp
aas
out
insl
aas
data16
mulb
push
add
mov
mov
cmp
mov
cld
add
push
add
shll
xchg
sbb
or
out
decl
std
mull
cld
sbbl
out
decl
dec
add
bound
data16
mov
dec
in
add
sub
out
mov
jecxz
mov
push
mov
cwtl
or
hlt
test
idivl
cmpsl
lods
sub
jge
iret
fs
pushf
in
stos
inc
xchg
mov
jnp
movsl
mov
into
mov
fs
jnp
in
add
lret
scas
jl
dec
or
add
adc
in
hlt
in
mov
sti
orl
cld
ret
sbb
sti
repz
add
xlat
or
ja
add
jmp
jl
xlat
sub
scas
fcmovb
mov
dec
add
add
jo
jmp
pushf
outsl
rsqrtps
test
pushf
ja
and
cli
sarl
add
jmp
pusha
outsl
das
je
js
sub
test
js
lea
ja
fldcw
add
out
jl
ret
pop
add
ja
pop
sti
push
imul
divl
stc
pop
imul
icebp
ret
and
aaa
andl
xor
pop
ds
clc
repnz
loop
or
pop
iret
mov
hlt
inc
mov
hlt
inc
xor
xchg
aad
mov
iret
ljmp
test
jmp
add
add
jl
jne
lea
ljmp
add
fstps
idiv
scas
sahf
ljmp
icebp
repz
ljmp
jno
jne
lea
cmp
out
pushl
int3
adc
mov
repnz
dec
mov
cmc
ret
pop
aam
jnp
xchg
add
lods
call
jp
jl
imul
push
sti
ljmp
mov
jl,pn
sti
lret
pusha
sub
out
test
jp
dec
shlb
je
jge
inc
std
jnp
push
mov
pop
cmp
push
cmp
sbb
clc
jbe
push
lds
addr16
jne
lcall
fsin
cld
stc
es
mov
je
jmp
outsl
cld
jnp
jmp
add
int3
add
add
sbb
add
in
lods
dec
je
hlt
popf
je
js
push
cmpsl
pop
add
sti
in
inc
mov
mov
lahf
pop
lret
je
ret
mov
jmp
jae
mov
insl
sbb
sub
mov
ja
and
inc
pop
xchg
xchg
jo
sbb
xchg
lret
ljmp
cmpb
lods
andl
add
cmp
or
shrl
ficoms
adc
ja
xchg
add
xorb
aam
lcall
in
mov
aad
cli
hlt
int3
lcall
cmp
cmp
push
dec
inc
sub
outsl
mov
cs
jns
mov
jmp
fimuls
js
jg
es
outsl
add
in
push
out
push
lret
adc
fidivs
or
fdivr
cmp
outsl
mov
mov
cltd
inc
les
rorl
lea
xlat
push
adc
incb
movsb
aam
push
stos
add
fisttpl
sub
jne
mov
mov
cmp
repz
add
into
add
jg
fldl
repz
js
add
inc
jbe
add
rolb
aad
adc
mov
testb
jl
hlt
testb
xor
rcll
fsubr
or
test
aas
mov
cmp
and
mov
and
ficoml
fs
inc
jnp
nop
call
ja
mov
xorl
call
xor
mov
out
cld
inc
out
dec
or
inc
push
call
cmp
push
or
mov
mov
add
out
add
jecxz
dec
arpl
xlat
fs
arpl
add
or
add
add
call
jnp
call
inc
add
int3
jmp
pop
fs
cli
out
add
repz
push
cmpl
xor
lret
sub
fldenv
inc
push
adc
add
scas
decl
lahf
out
mov
loopne
mov
int3
jmp
push
gs
js
jo
dec
outsb
mov
push
mov
add
cmp
cltd
jns
js
inc
int
test
xor
add
loope
xor
int3
fisubrs
outsl
cli
mov
addr16
or
cli
jmp
ljmp
mov
mov
in
movsb
lock
inc
pop
loop
inc
jmp
add
jns
push
inc
in
rolb
jne
push
inc
add
inc
pushf
stos
les
mov
sub
inc
movsb
mov
push
mov
addl
lds
imul
imul
pop
les
dec
les
pop
les
sub
ret
lds
mov
addl
inc
jbe
adc
push
ret
adc
insl
adc
xor
mov
or
push
push
add
loope
jnp
test
fs
add
pop
push
std
imul
pop
mov
xor
movsb
lds
pop
cld
clc
cld
hlt
loopne
cld
in
clc
dec
in
pusha
in
fsubl
add
popa
push
outsb
adc
out
sbb
clc
jle
add
cmpsl
push
std
imul
xchg
or
xor
fadd
inc
add
loopne
cld
je
dec
in
sahf
out
mov
outsb
add
and
call
jnp
jg
cmp
xchg
adc
not
mov
lret
push
jnp
sub
addb
pop
hlt
mov
mov
adc
mov
xchg
inc
in
mov
insb
mov
inc
outsl
test
jbe
mov
roll
mov
mov
test
push
add
hlt
bnd
in
or
lret
loope
in
call
hlt
test
and
inc
shll
je
imul
add
add
repnz
mov
pop
cltd
insb
cli
gs
jg
push
jg
add
push
mov
ss
repnz
add
jae
jmp
je
jae
add
jle
and
jmp
dec
test
icebp
jo
clc
enter
xor
pop
xchg
mov
xor
pop
mov
out
stc
stos
add
or
into
inc
mov
dec
insl
push
mov
fisubs
push
lahf
sub
push
cmp
ret
shld
cmpsl
cmp
or
push
lea
popl
mov
xchg
insb
add
and
dec
stc
popa
cmp
add
mov
inc
or
xchg
jne
adc
testb
shll
test
xchg
xchg
mov
add
jl
inc
stos
jne
in
push
push
push
nop
arpl
mov
mov
mov
xor
jnp
rcrl
rolb
pop
mov
clc
cmpsl
dec
push
lods
filds
stos
jl
xor
je
mov
jl
push
bound
out
jo
out
inc
call
imul
incl
scas
cli
mov
clc
cmpsb
push
add
push
std
data16
inc
jnp
adc
adc
jbe
jnp
cmp
add
call
add
jnp
out
mov
mov
or
mov
cli
outsl
iret
inc
jg
loopne
mov
xchg
je
pop
insl
arpl
dec
or
mov
xchg
sbb
or
add
leave
xor
jl
cmp
bound
adc
shll
sub
inc
cmp
push
push
sbb
add
push
test
les
cmpl
cmp
jnp
pop
or
js
xchg
add
push
xchg
pop
xorl
int
mov
cmc
add
mov
push
subb
xchg
stc
mov
shrb
pop
add
xchg
loope
in
test
int
call
add
mov
nop
add
repz
gs
jae
jmp
mov
dec
lcall
rcr
push
sbb
push
fistpl
lret
add
jne
push
aaa
push
add
lea
jb
rorb
xchg
jbe
filds
std
inc
mov
inc
add
in
std
xchg
arpl
das
daa
adc
push
out
je
push
test
cmp
fs
movsl
cmpsb
push
cmpsl
in
std
adc
in
je
in
cmpl
jne
aad
jbe
and
addl
pop
adc
test
mov
jno
push
pop
jne
or
repz
push
pop
icebp
xor
mov
mov
lahf
repz
and
aas
push
mov
dec
lock
icebp
jnp
das
inc
dec
dec
das
inc
inc
mov
paddusw
testb
mov
jo
push
jbe
andl
xor
xchg
cld
push
mov
cmp
cld
in
ljmp
cld
repnz
popa
inc
pop
mov
mov
rorl
gs
mov
outsl
shl
adc
jnp
call
outsl
cmp
je
add
mov
jmp
and
sub
xlat
mov
popf
shlb
test
std
add
adc
push
xchg
ljmp
mov
mov
sub
or
lea
insl
add
mov
push
sbb
in
repz
push
add
add
add
sub
or
js
pop
js
push
arpl
pop
daa
lret
adc
ja
fidivrs
mov
mov
cli
jb
or
aad
adc
push
add
addr16
lahf
dec
aam
fs
fldenv
test
sub
orb
enter
add
call
divb
mov
add
mov
pop
fs
xchg
in
jb
dec
int3
add
aad
in
jae
cmp
push
pop
nop
lea
mov
test
xchg
mov
push
ret
push
push
cmovo
mov
mov
loope
je
shl
je
jbe
notl
leave
test
push
mov
push
in
notl
loop
jne
mov
push
jecxz
notl
loop
jne
pop
jbe
es
push
or
in
mov
rolb
jnp
dec
inc
divb
or
jae
std
sub
sub
sbb
push
leave
push
ret
pop
mov
lcall
cld
add
mov
lss
add
insb
aaa
adc
sub
mov
add
inc
ljmp
insb
jns
aaa
fucomp
cmpb
push
mov
cmc
dec
sbb
push
mov
fisttpll
or
xor
out
cmc
or
mov
inc
hlt
mov
out
xlat
sti
repnz
sarl
popf
stos
ficoms
mov
repz
pop
invd
imul
pop
xchg
mov
loop
xchg
dec
movb
mov
mov
mov
cmp
add
fbstp
jmp
stos
mov
iret
cmp
popa
nop
outsl
sarl
cld
repz
add
stos
mov
fidivs
adc
pusha
add
cmc
and
push
xchg
jmp
fs
ljmp
insb
mov
lretw
add
mov
xchg
jae
add
sbb
pop
push
adc
rcrl
or
push
outsb
mov
test
je
add
decb
rclb
fs
test
add
cli
cltd
push
jo
sub
in
sub
or
js
ret
add
flds
push
cli
jnp
add
pop
adc
adc
inc
pop
stos
add
into
rol
mov
testb
mov
ret
xchg
bnd
push
dec
pop
test
add
add
in
or
pushf
dec
jge
jne
loopne
or
aad
decl
pop
loop
test
mov
pop
lea
inc
jge
and
out
push
jnp
jo
and
jecxz
or
cmc
mov
jae
sub
push
push
push
pop
pusha
inc
jnp
mov
aad
ljmp
fnstcw
push
mov
mov
mov
cmc
jnp
rcr
jnp
in
test
mov
mov
jp
push
fiadds
mov
call
add
jmp
shrl
inc
pop
push
sbb
jle
nop
inc
jnp
jmp
add
sub
xchg
push
lock
out
divb
adc
mov
stc
pop
dec
add
push
pop
cld
add
rcll
inc
sbb
icebp
mov
fadds
cmpsb
cmpsb
outsb
inc
pop
int3
jmp
lea
ja
or
cli
out
add
arpl
add
add
mov
pop
bound
jbe
les
test
add
sub
mov
jg
jg
add
pop
mov
bound
push
jne
sub
push
sub
std
addl
xor
xchg
dec
lea
sub
andb
xchg
js
clc
push
sub
xchg
out
js
insb
rol
dec
lea
ljmp
push
add
xchg
js
mov
icebp
cs
imul
imul
or
call
or
aas
sub
mov
dec
insb
sbb
dec
jp
call
imul
jbe
bound
jle
loope
or
fwait
pop
jb
stos
pusha
jbe
pop
icebp
cmp
add
add
dec
jp
mov
std
outsb
testl
jmp
outsl
addr16
pop
ret
insl
and
sbbb
insl
inc
jnp
push
jae
in
and
in
pop
pop
mov
in
xlat
sahf
and
add
movsl
test
pop
clc
fidivrs
dec
jno
adc
mov
in
xlat
data16
add
pop
and
jg
cwtl
rcrb
rolb
mov
stos
in
xlat
dec
movsb
ljmp
outsl
xchg
pop
mov
push
push
lods
mov
jmp
mov
and
mov
stos
add
stos
add
stos
add
stos
add
std
stos
add
stos
add
stos
add
stos
add
add
stos
add
push
insl
fadds
push
push
cmpsl
adc
sti
inc
push
cld
ss
add
and
sub
outsl
add
and
sub
repz
xor
pop
ljmp
ret
ja
call
adc
or
cmp
addl
lea
clc
popa
adc
xor
sti
sbb
jb
stos
orb
sub
push
ret
mov
cmc
add
mov
pop
out
into
adc
shrl
incb
inc
add
add
jle
add
push
scas
push
lods
test
outsl
push
scas
push
or
jnp
ja
lahf
add
cmc
inc
aam
fnstenv
int3
push
or
inc
xchg
jmp
push
ja
stc
mov
popl
add
add
fldl
pop
add
xlat
jl
inc
sbb
sub
repnz
bound
inc
push
or
or
and
push
and
popl
dec
arpl
pop
ds
jmp
ja
mov
dec
inc
add
ss
fldenv
test
add
push
addr16
dec
adc
jmp
ss
addb
pusha
pop
test
push
cli
jmp
addr16
jnp
aam
jnp
jg
push
ss
mov
jmp
push
lock
adc
sub
adc
aad
cmp
clc
mov
push
inc
adc
pop
gs
cmp
push
add
adc
adc
jnp
std
hlt
push
test
fwait
insl
jp
ja
push
addb
pop
icebp
adc
push
add
pop
loope
mov
out
dec
add
jl
mov
mov
sbbb
sub
jnp
cli
cld
aam
add
mov
ret
movsb
dec
mov
jb
pop
idiv
int3
lock
jnp
enter
aas
cmp
xor
cmc
cmp
test
and
insb
negb
jae
push
xchg
jg
push
or
repz
adc
xchg
add
iret
xlat
sbb
scas
sti
jp
xchg
inc
imul
jmp
repnz
repz
fstp
jno
xchg
add
and
xor
adc
push
aad
rcrl
loope
fmuls
jb
scas
adc
scas
sbb
cmp
mov
icebp
add
enter
enter
enter
into
or
aaa
push
dec
in
or
scas
jg
cmp
dec
push
cli
push
adc
jg
pop
mov
lea
cmp
lea
dec
orl
pop
jbe
mov
pop
test
idiv
and
push
sbb
xchg
xor
in
outsb
jp
outsl
pop
xchg
mov
sub
pop
test
pop
cli
dec
xchg
mov
push
or
jbe
cli
call
test
sbb
mov
shl
mov
je
or
sarb
pop
cwtl
xchg
mov
iret
inc
and
pop
xchg
fiadds
adc
cmpsl
push
cmp
dec
pop
cli
jnp
ljmp
pop
dec
repnz
hlt
imul
sti
sbb
or
xchg
loope
cld
mov
or
mov
stos
add
ljmp
add
stos
idiv
clc
jb
cld
sti
in
sti
jae
in
or
loope
clc
mov
jns
xchg
mov
stc
out
cltd
fdivrp
sti
popf
dec
or
jnp
aaa
jle
jno
jnp
xchg
add
jns
jp
push
cmp
xor
add
mov
xor
or
mov
insb
xchg
call
add
mov
sub
ss
push
xchg
adc
add
hlt
ds
ljmp
or
enter
inc
test
outsl
mov
xorl
mov
add
jmp
lock
sahf
push
add
xchg
add
repz
jmp
add
insl
mov
arpl
push
jb
test
shll
fs
popaw
neg
dec
popa
push
mov
shlb
jg
mov
movsl
jno
loopne
movl
jmp
add
dec
xorl
ret
adc
fisttpll
imul
popa
push
mov
in
pusha
or
shl
outsl
xsaves
cmc
push
push
das
mov
or
add
and
or
rorb
or
gs
or
mov
ja
in
inc
into
loop
shrb
in
sarl
xor
bound
add
loop
rorl
add
shrb
or
and
hlt
mov
cs
mov
or
jne
pop
lret
cmpsl
or
adc
or
mov
inc
adc
push
add
jl
je
fisttpl
in
adc
rorb
add
jnp
xlat
or
or
xchg
jno
sub
bound
adcb
dec
jae
jg
outsl
sbb
pop
jl
dec
or
sbb
loope
or
adc
jnp
dec
add
fisttpll
lods
pop
inc
clc
mov
push
sub
int3
jae
sub
sbb
mov
adc
cmp
and
in
movsl
inc
stos
stc
jp
mov
in
xor
stc
fsubl
leave
jne,pt
in
lea
imulb
and
adc
add
loopne
das
jne
pop
jo
loopne
movb
push
xchg
outsl
mov
idivb
vpmaddwd
test
or
xchg
inc
add
pop
inc
dec
push
mov
pop
jnp
mov
mov
add
in
add
dec
mov
xorb
push
xchg
scas
jg
jmp
ja
add
mov
aaa
mov
push
out
jne
pop
call
sbb
imul
push
dec
xor
inc
inc
fisttps
mov
mov
jb
add
mov
add
ds
adc
dec
add
js
cld
jecxz
mov
arpl
imul
adc
pop
add
adc
sbb
push
adc
imul
call
or
add
jg
sti
das
mov
adc
push
jmp
bound
add
push
mov
sti
inc
int
popa
or
mov
pop
loope
xchg
mov
cmpb
stc
push
pop
cltd
or
xchg
or
inc
lea
rolb
jmp
shlb
stc
je
or
add
cmp
mov
adc
push
jmp
pop
sti
push
jnp
add
mov
add
enter
insb
out
or
rolb
jmp
sti
cmpsl
add
pop
loop
add
xchg
add
adc
cmp
loop
or
dec
xchg
sub
and
cmp
loop
add
xchg
ja
adcl
jno
cmpl
push
add
pop
mov
or
pop
jnp
xchg
fwait
inc
add
xor
adc
sub
inc
lahf
mov
mov
mov
mov
jns
sbb
xor
fdiv
shr
pop
add
data16
mov
mov
mov
add
jmp
jecxz
outsl
in
push
inc
fists
or
and
aad
cmp
testb
aad
daa
xchg
imul
rolb
insb
jle
hlt
rcr
insl
jl
imul
mov
inc
mov
arpl
adc
adc
loope
mov
fstl
jae
mov
cli
or
out
iret
adc
mov
outsb
jns
mov
cwtl
std
push
rorb
pop
lds
mov
imul
dec
idiv
jecxz
jmp
mov
in
out
mov
mov
scas
cmp
rol
add
clc
inc
dec
out
sti
dec
notl
lcall
cmp
pop
test
lret
stc
es
sbb
jmp
or
movsb
cld
mov
rolb
loope
sbb
push
or
gs
andps
cmpl
mov
loope
fisttpll
pop
test
imul
sub
jmp
xchg
pop
xchg
idiv
cmp
mov
xor
inc
adc
int
sub
jg
jnp
xchg
jbe
or
out
xor
add
mov
sar
cmp
popa
stc
xor
jle
xorl
fisttpl
xchg
adc
add
cmp
add
addr16
jnp
mov
add
pop
and
xor
lock
and
sub
andb
les
mov
add
in
add
bound
testb
inc
jns
add
mov
shll
jmp
xor
add
add
jnp
stos
add
jnp
loopne
cmp
insb
mov
aam
pop
adc
int
in
dec
cli
inc
cmc
or
sbb
add
enter
stos
add
int
pop
xchg
dec
ret
into
push
enter
in
add
sub
ja
call
and
pop
add
sarl
xchg
jge
add
scas
push
nop
add
rolb
js
inc
ljmp
or
inc
cli
jmp
stc
jns
test
jg
add
lea
insb
pop
lea
jmp
pop
mov
inc
ljmp
or
inc
cli
jmp
cli
test
js
jg
jg
add
xchg
in
mov
iret
add
adc
shlb
push
cmp
inc
mov
xchg
pop
test
mov
add
add
or
add
push
pop
inc
add
into
add
pop
pop
leave
cmp
in
inc
push
faddl
fwait
cmp
test
mov
add
or
pop
inc
add
inc
outsl
es
loopne
inc
loop
sbb
test
add
movsb
xchg
imul
add
or
and
mov
inc
mov
aaa
push
add
pop
sbb
lcall
xor
mov
or
fwait
stc
pushl
or
and
sub
jne
adc
or
or
mov
xor
adc
pop
sub
fcmove
cld
clc
push
sbb
fistpl
add
xchg
outsb
push
lds
mov
or
add
mov
sahf
sti
mov
or
mov
mov
js
jmp
mov
mov
fisttpl
ds
mov
mov
cmpl
daa
and
js
jmp
iret
pop
fcmovne
outsl
fs
xchg
xchg
fs
pop
fwait
adc
mov
or
jno
mov
push
leave
rorb
repz
incl
or
out
inc
insl
pop
lahf
xchg
jmp
repz
add
inc
testb
mov
inc
ja
dec
jmp
dec
pop
or
sub
pop
mov
and
enter
jns
gs
mov
in
mov
or
ret
lahf
daa
outsb
pop
addb
outsb
push
mov
jmp
pop
jb
pusha
rcll
in
mov
ret
shlb
mov
std
popf
nop
pop
fidivs
add
repz
jmp
js
inc
call
fisttps
fiadds
test
pop
xor
movsl
pop
pop
mov
mov
xchg
mov
nopl
loope
xchg
or
add
sub
mov
push
lea
dec
jle
inc
pmaxub
add
scas
add
cmp
mov
and
pop
mov
xor
mov
jmp
ret
sub
fimuls
sub
sub
scas
dec
mov
out
aam
into
adc
mov
add
xor
jo
std
or
sub
add
lret
and
cmpsb
flds
jnp
jge
jae
xor
xchg
xchg
jnp
dec
add
js
jg
sub
test
cld
test
mov
stc
mov
inc
jnp
add
add
sub
andl
add
xchg
jnp
int
xchg
jle
je
cli
cmpb
jg
jns
mov
dec
mov
add
jmp
mov
jp
add
outsb
or
mov
fstps
sub
jmp
clc
mov
rclb
push
movl
jp
jmp
add
or
iret
push
aas
fstps
int3
lret
jmp
clc
outsb
shlb
or
cli
jg
xchg
add
jns
inc
lahf
jp
jmp
adc
cmp
outsl
cmc
add
ret
fmuls
xchg
jnp
or
add
clc
nop
adc
cld
mov
jmp
inc
mov
jmp
add
add
mov
add
mov
add
js
rcl
mov
jmp
repnz
ljmp
ret
cmp
fidivrl
jle
das
jle
jp
repz
mov
jmp
repnz
or
cmp
push
xchg
enter
xchg
add
stos
inc
cmc
cmp
adc
popf
dec
andl
lock
add
or
test
mov
add
mov
xchg
pop
add
mov
push
test
cmp
mulb
aas
mov
ror
shl
adc
xchg
mov
jecxz
ds
cmp
and
rcll
je
inc
inc
add
pusha
lret
add
and
aad
call
cmpsl
dec
jbe
aam
stc
cmp
adc
call
ret
add
add
jnp
lds
ljmp
shlb
in
clc
jb
out
popf
enter
and
jnp
decb
aaa
inc
out
mov
dec
and
out
adc
sub
cmpsb
imul
or
je
cmp
jnp
idivl
subl
xor
addl
add
sub
inc
jp
faddl
xor
or
push
ds
add
mov
test
mov
adcl
fadds
xor
pushf
ljmp
repz
mov
ret
js
or
add
lea
push
lds
mov
arpl
repz
cli
mov
add
lods
and
pop
aam
add
push
add
jb
addl
push
push
in
add
movsl
outsl
adc
or
out
stc
clc
jbe
aas
pop
and
sti
mov
in
js
inc
addl
inc
cmp
scas
jns
jmp
js
add
xchg
cmpsl
in
add
adcl
call
test
push
jbe
inc
dec
mov
add
mov
loope
mov
sbb
rolb
aas
add
mov
ret
pusha
push
orl
mov
or
fsubl
dec
pushf
xor
xchg
mov
add
add
or
je
mov
inc
and
cltd
les
cmc
not
lahf
dec
jbe
cwtl
int
and
xor
mov
cmp
inc
add
cltd
ja
push
lcall
xchg
adc
jp
jmp
bound
maxps
pushl
pusha
add
dec
inc
add
inc
inc
and
mov
icebp
cmp
push
nopl
pop
or
rcrb
sbb
ss
bound
test
gs
mov
loop
xor
xor
xchg
jns
xor
cmpl
mov
or
inc
adc
jl
xchg
incl
jns
adc
inc
adc
rcl
add
adc
loop
add
adc
mov
inc
jae
mov
sbb
add
and
push
stc
xchg
stc
lret
mov
jnp
jns
out
cld
jge
outsl
in
clc
push
dec
cltd
lods
arpl
in
or
repz
add
mov
jle
mov
or
pop
jge
cmp
jg
xchg
or
inc
jle
mov
arpl
and
aad
aaa
jbe
outsb
outsl
jo
addr16
jge
mov
jae
mov
loopne
xchg
cmp
enter
lock
add
inc
push
lahf
jmp
push
add
clc
stc
dec
cmp
add
out
add
add
dec
cli
mov
into
rclb
int
cmp
mov
mov
cli
jbe
mov
leave
js
sub
jg
mov
imul
test
leave
sub
ret
mov
jl
pop
jmp
push
rclb
pop
cmp
stc
push
mov
ja
mov
lret
push
insb
mov
outsl
sbb
arpl
cmp
dec
cli
mov
add
adc
xchg
psadbw
clc
lcall
insl
pop
mov
arpl
or
mov
popa
xchg
arpl
xchg
push
repz
jecxz
add
sets
mov
cwtl
rorl
dec
cwtl
and
mov
adc
sbb
adc
mov
jecxz
lds
rorl
add
arpl
push
fbld
push
pop
fs
sbb
fs
sbb
incb
jmp
sbb
arpl
sbb
arpl
sbb
out
sbb
arpl
sbb
fs
sbb
decb
jmp
mov
jecxz
leave
out
jecxz
jecxz
in
add
pop
push
in
aas
push
in
pop
jecxz
cltd
out
jecxz
loopne
jecxz
mov
jecxz
mov
jecxz
or
jecxz
sbb
jecxz
inc
fsub
add
add
call
sub
adc
sub
call
sub
out
sub
sbb
sub
adc
sub
adc
sub
adc
stos
add
stos
add
add
stos
add
ror
mov
cld
mov
daa
add
pop
pop
adc
int3
add
mov
add
push
cmp
stos
mov
mov
adc
andl
lods
mov
fidivrl
aam
aaa
ret
push
fwait
add
das
test
jo
mov
std
and
cmp
add
mov
xor
pop
rclb
push
jb
ss
insb
or
push
ss
adc
mov
push
xchg
ljmp
add
sub
sbb
xor
push
or
bound
jle
sahf
xchg
xchg
rcrb
add
aas
add
addl
xchg
xchg
mov
shr
jbe
pop
push
cld
sbb
cmpl
movsbl
lret
sbb
adc
in
add
pop
adcb
push
add
mov
ljmp
jae
or
rolb
rorb
add
out
movsl
cmp
popf
test
int3
adc
add
cmp
cmp
xor
cltd
inc
add
mov
push
and
aas
pop
jo
jnp,pt
inc
and
sbb
add
mov
outsl
jmp
lds
inc
je
jnp
push
stos
sbb
add
jp
lds
sbb
jmp
stc
mov
add
lock
clc
mov
add
push
inc
mov
cld
lock
cmc
dec
in
daa
cmp
sarb
cmp
nop
inc
mov
pop
ret
sub
dec
jae
loop
cmp
dec
add
lahf
adc
leave
out
mov
fistps
mov
leave
mov
mov
mov
faddl
outsl
add
mov
pop
push
repz
jnp
popa
add
add
xor
loopne
test
js
and
add
jnp
xlat
psubd
repz
das
add
xchg
cmp
add
cli
mov
cmp
stc
insb
mov
jb,pn
fsts
or
pop
add
cmpl
push
in
addr16
cmp
inc
mov
imul
push
loop
mov
gs
js
das
jb
aaa
xorb
lea
jbe
loope
xchg
shrb
adc
js
inc
ficomps
lret
add
xchg
add
add
pop
ret
pop
pushf
stc
ljmp
push
push
dec
ja
call
push
dec
jbe
sbb
and
xchg
jns
lea
addl
testl
cmpsb
data16
mov
push
incl
inc
xchg
adc
and
std
cs
and
cmp
mov
and
mov
and
rcrl
icebp
sub
imul
xor
std
mov
cmovo
lret
arpl
sbb
and
sub
and
cltd
hlt
jo
dec
jo
movsl
popa
xchg
cltd
in
xchg
dec
sbb
cmp
mov
mov
or
std
cmp
mov
fs
lea
leave
adc
push
mov
inc
mov
mov
inc
jnp
rorl
and
add
test
repz
andb
add
add
hlt
nop
xor
stos
ds
in
add
mov
ret
clc
dec
cwtl
push
mov
addl
enter
cmp
enter
lret
je
sub
dec
call
or
scas
add
int
or
je
sti
push
fcoml
mov
mov
jnp
lods
cmp
ljmp
mov
mov
negb
push
sub
xchg
aas
lret
add
pop
adc
add
add
inc
add
das
add
daa
jo,pn
lock
es
test
test
jo
out
cli
push
cmp
insl
ja
test
jne
jo
mov
mov
fisubrl
add
add
lea
xor
fidivrl
lret
stos
int
out
lds
leave
mov
add
add
inc
cld
jb
add
jne
decb
xchg
not
dec
jne
push
addl
clc
enter
por
outsb
mov
mov
sbb
repnz
cld
in
je
decb
xchg
not
cmovle
or
or
neg
aam
mov
shlb
push
mov
mov
push
adc
sub
mov
cmp
mov
je
js
push
jnp
aad
and
pop
ret
push
mov
mov
idiv
cmpsl
adc
jmp
mov
data16
jae
nop
xchg
sub
adc
inc
add
jl
fdivs
mov
sbb
inc
push
sbb
std
das
push
or
jns
sahf
sldt
or
jl
push
std
mov
adc
mov
jb
test
call
jae
mov
xor
inc
add
mov
pop
cs
gs
mov
add
mov
add
sub
dec
push
imul
adc
filds
mov
lahf
pop
sbb
inc
cmp
cltd
sub
mov
mov
lahf
pop
mov
adc
add
repnz
movsl
mov
mov
fadds
mov
lea
aas
jg
mov
ret
repz
pop
or
rolb
aad
dec
or
cmp
inc
cmc
std
int3
push
jo
and
xchg
loop
adcb
and
jle
sub
jmp
add
es
in
js
add
stos
stc
push
inc
push
mov
sti
cwtl
mull
mov
adc
stc
and
push
adc
jno
mull
rcrl
fcos
push
jmp
lods
daa
cli
gs
inc
jb
adc
cmc
ja
mov
ja
ficoms
sub
dec
sbb
mov
dec
lea
testb
sub
inc
or
aam
mov
inc
add
mov
mov
push
mov
rorl
mov
testl
pop
pop
add
push
mov
pmaxsw
jecxz
adc
out
xor
sbbl
in
add
jecxz
hlt
push
roll
mov
push
push
add
fcomi
jne
pop
fnsave
dec
inc
std
pop
push
xlat
pusha
lock
pop
adc
lea
mov
sbb
inc
jns
lea
lock
leave
add
std
leave
mov
dec
mov
ret
jns
mov
adc
sub
dec
lahf
sbb
or
fidivl
push
add
inc
and
or
mov
push
cli
out
fnstsw
divb
fdivrl
cwtl
dec
mov
jae
push
mov
shlb
mov
push
mov
ljmp
sahf
jecxz
xchg
cmp
add
and
mov
bound
mov
xchg
xchg
inc
or
daa
gs
cld
into
repz
add
rep
out
and
add
xor
cmpl
jmp
jno
push
mov
xchg
repnz
sub
adc
mov
jmp
fadd
mov
mov
and
or
daa
mov
sub
aad
scas
mov
inc
push
push
push
cwtl
push
aad
daa
cli
cmp
sbb
lret
cli
jb
or
sbb
add
xchg
mov
jge
outsl
in
into
push
jo
adc
mov
sub
nop
add
js
inc
in
jns
push
sahf
repz
add
js
ret
sub
sbb
outsl
add
mov
cmpl
jae
mov
mov
jne
inc
idiv
inc
fadds
mov
lahf
xchg
mov
sub
or
jne
cltd
and
and
xchg
out
inc
push
popl
push
and
addl
iret
ljmp
jne
hlt
sbb
fsubrp
mov
je
or
add
mov
test
jmp
ljmp
mov
mov
clc
jnp
mov
jp
test
loopne
or
test
fst
cmp
adc
dec
js
ja
mov
jnp
cs
xor
incl
or
push
xchg
cmp
or
pop
adc
lock
push
je
popf
dec
or
xor
mov
ja
out
mov
jns
outsl
mov
or
jg
jnp
add
add
pop
add
add
aaa
xchg
jb
jae
mov
jle
xchg
mov
lcall
jl
mov
iret
stc
inc
jnp
mov
add
adc
cld
add
das
inc
and
cmp
adc
jmp
and
adc
mov
imul
pop
lods
aaa
add
sbb
dec
mov
xchg
jmp
push
ja
dec
mov
cmp
jnp
add
or
adc
je
sbb
push
jmp
pop
cli
xchg
push
pop
cli
jmp
sub
jmp
leave
push
cli
insb
sub
fs
sbb
into
or
push
and
or
bound
or
add
in
jmp
leave
ret
outsl
mov
xorl
mov
mov
inc
xchg
xorb
insb
and
push
int3
aaa
shrl
jbe
inc
add
test
divb
dec
jbe
mov
call
mov
jns
push
call
in
gs
bound
push
add
cmpsl
mov
stc
jmp
mov
test
jle
push
mov
lea
cmp
push
xchg
dec
cli
call
mov
clc
mov
jne
gs
int
add
push
cmpsb
stc
call
pop
jge
rclb
jnp
incb
les
adc
mov
mov
cmpsl
mov
je
fimull
out
jne
out
out
mov
mov
sbb
cmp
lock
adcb
cld
arpl
dec
std
dec
test
cmp
repz
dec
push
outsb
out
dec
outsb
scas
xor
cld
mov
jnp
cmpb
fimuls
in
dec
std
data16
adc
mov
or
repz
push
mov
fwait
gs
in
add
clc
dec
fmuls
cli
push
lcall
fistpll
loop
xor
adc
lods
mov
repnz
mov
mov
cs
push
and
mov
sbb
outsl
sti
std
fists
ja
adc
mov
leave
addb
mov
push
lock
repz
ss
filds
and
in
jp
xor
addb
stos
add
cwtl
sbb
cli
sahf
repz
test
push
xchg
add
xor
pop
ret
xchg
mov
adc
mov
jno
adc
js
aaa
fcmovu
cmpsb
mov
cmp
mov
stc
mov
push
adc
flds
jmp
lods
mov
jns
add
lods
push
adc
push
aas
cltd
add
sarl
dec
out
ljmp
mov
test
sbb
push
addl
inc
push
notl
pop
inc
jne
or
decb
and
out
sbb
add
or
jmp
out
add
or
addl
inc
jbe
ret
or
mov
or
call
idiv
scas
mov
bound
cmp
adc
push
iret
add
sub
mov
lcall
mov
inc
and
pop
jnp
stos
jne
fmuls
cmp
dec
jne
add
push
std
data16
aam
xchg
call
push
inc
jnp
lds
pop
pop
xor
lods
xlat
adc
cs
std
and
inc
imul
cmpl
xor
je
or
mov
imul
jnp
jns
clc
inc
sti
cmpb
repz
imul
fmuls
push
jne
jb
stos
dec
cld
enter
sbbl
stos
adc
inc
dec
testl
add
dec
lock
mov
lahf
scas
xchg
dec
fcom
icebp
movl
dec
sbb
sar
dec
scas
adc
iret
sti
jle
pop
jae
add
cmp
add
fldl
add
lock
into
jecxz
mov
scas
testl
push
mov
mov
sub
jg
xor
and
add
sahf
imul
jg
xor
and
lea
cli
jmp
loope
cwtl
jmp
jl
xchg
push
cli
inc
dec
push
jo
mov
mov
mov
push
adc
mov
pop
in
cmp
add
mov
adc
std
aam
out
add
pop
add
imul
stc
adc
xchg
enter
adc
out
loopne
mov
loop
call
inc
in
imul
lret
adc
pop
std
loope
pop
out
imul
cwtl
pop
decl
dec
lea
in
dec
pop
adc
call
mov
loop
call
mov
mov
adc
inc
cmpb
not
xchg
jae
dec
inc
orps
inc
mov
add
rolb
mov
add
js
imul
jg
jno
inc
jne
inc
outsl
das
les
and
jb
and
jg
ja
jno
xlat
je
jb
cld
jnp
in
out
mul
cli
xchg
mov
mov
rolb
dec
divb
cmp
call
push
cwtl
les
mov
pop
push
out
dec
lock
jl
pop
insb
adc
aas
add
out
pop
push
mov
jg
mov
add
es
stos
mov
shll
push
push
add
lock
mov
mov
push
mov
imul
aad
cltd
mov
cmpsb
xlat
aad
cmpsb
int3
adc
sub
das
movb
rolb
inc
and
cmpsb
adc
or
adc
adc
mov
sarb
in
js
mov
outsl
adc
add
jecxz
mov
inc
sbb
add
test
call
cmp
cli
jmp
fs
sub
jg
jmp
jp
add
adc
add
js
inc
xor
int
aas
cs
add
add
xor
or
adc
jmp
pusha
xchg
ja
add
adcl
add
mov
add
xchg
inc
add
insb
and
maskmovq
divl
push
inc
addl
jecxz
jmp
jb
pop
mov
popf
mov
push
loope
and
push
push
popf
inc
divb
in
test
aad
add
rolb
xchg
loop
add
in
push
lock
add
notb
dec
sbb
or
jmp
xchg
popf
add
jnp
cmp
lret
aad
mov
xor
pop
xor
or
outsb
in
cmpl
std
lds
and
add
jp
inc
mov
jae
and
lock
add
inc
sbb
in
hlt
std
out
stc
jns
mov
cld
add
sahf
adc
mov
sbb
cmpsl
mov
fdivs
sub
mov
cmpsb
xchg
outsl
pop
andl
or
cwtl
mov
xchg
sti
sub
mov
movsb
clc
dec
jo
shll
sti
push
pop
adc
mov
mov
leave
mov
movsl
in
cmp
add
sub
pop
sti
dec
loopne
stos
and
and
add
xor
mov
lods
sbb
mov
jnp
sub
mov
js
sub
mov
inc
cmpsb
andl
repnz
inc
add
and
mov
in
js
dec
fdivp
jp
call
xor
icebp
out
add
sbb
jmp
js
mov
or
or
mov
or
daa
push
push
fdivrs
fdivrl
or
in
js
xchg
rolb
test
stc
fcoml
inc
jmp
pop
mov
jmp
sbb
cli
notb
psubd
jl
cwtl
add
in
idiv
sub
sub
dec
in
mov
ljmp
pop
lcall
inc
call
incb
add
insb
or
rcl
and
add
out
cmp
xlat
test
inc
inc
mov
pusha
push
mov
jmp
mov
push
divl
push
ljmp
mov
test
xchg
add
ljmp
daa
clc
decl
sbbb
pop
faddl
dec
push
faddp
push
adc
jnp
add
jnp
lea
repnz
add
xchg
pop
lods
fnstsw
push
std
push
sbb
cld
arpl
std
insb
test
sub
push
push
nop
or
aas
jnp
lds
xor
icebp
std
and
lret
inc
sub
int3
push
or
cmpl
inc
jmp
mov
dec
jno
std
fsubl
push
aam
scas
cld
data16
aas
jnp
je
cmc
cwtl
das
fsubrl
mov
test
mov
add
push
sub
dec
or
lahf
jg
jmp
add
or
test
stc
lahf
xchg
or
fimuls
in
leave
jb
hlt
add
or
lahf
das
push
push
xchg
orb
lahf
adc
mov
psubb
add
and
jnp
pop
add
jmp
movsb
outsb
fmuls
movsb
mov
sbb
add
mov
adc
push
inc
mov
or
pop
fimull
cli
jae
mov
cli
cs
lcall
push
inc
or
jmp
std
psubd
inc
dec
add
scas
movl
jmp
inc
lds
insb
or
adc
in
jmp
push
add
int
adc
add
add
test
addb
out
idiv
jb
inc
lock
mov
add
push
rolb
bound
jmp
sbb
incb
jae
mov
dec
lea
xor
arpl
call
push
lea
and
and
push
mov
test
std
incl
lea
cmp
push
jb
inc
int3
xchg
add
cld
xor
aam
inc
and
stc
call
cmp
xor
add
flds
adc
push
leave
lock
mov
je
cltd
ds
fcoml
hlt
stc
jns
mov
mov
push
add
ljmp
sub
mov
sub
pop
ret
and
je
adc
push
lea
push
or
data16
aas
jnp
out
cmp
hlt
add
repnz
jmp
add
push
mov
push
ja
cld
add
lds
or
stos
pop
shr
add
xor
repnz
loopne
mov
or
mov
mov
mov
sti
mov
add
adc
sahf
cmpsl
or
add
xlat
xor
jmp
add
add
stc
lahf
push
pushf
ja
push
ret
sti
into
fisttps
pop
adc
mov
add
cmpsl
scas
sti
add
or
pop
ljmp
out
or
lret
and
adcb
inc
push
or
mov
cmpsb
adc
aas
mov
unpckhps
sbb
lds
repnz
sbb
jl
data16
jmp
js
add
add
testl
push
loopne,pn
ret
div
xor
jmp
repnz
repnz
lock
push
mov
loope
cli
ret
xchg
dec
pop
stc
push
jecxz
adc
sub
add
xor
push
add
and
jne
add
pop
mov
adc
add
sub
notl
mov
or
cmpb
orl
mov
lea
adc
nop
fwait
cmp
adc
push
pop
push
push
cmp
lds
bound
idiv
lea
dec
call
dec
cwtl
fimuls
dec
mov
dec
inc
aaa
notl
jnp
add
xor
in
dec
cmp
mov
add
xor
adc
and
jae
pushf
cld
add
fwait
cld
mov
ja
std
lods
push
mov
cmp
js
test
xchg
dec
or
mov
fwait
jb
scas
cmp
jp
incl
out
incl
subb
xor
mov
add
jnp
sbb
sahf
or
icebp
xchg
adc
push
mov
repz
lds
mov
je
aam
xor
imul
addr16
push
in
cwtl
dec
jmp
xor
repz
mov
jne
sti
push
jmp
xor
cmpsl
or
lahf
mov
repz
cmp
adc
add
inc
or
push
nop
outsb
add
repz
jnp
fs
or
leave
xchg
add
cmpsl
add
out
add
test
jbe
or
xor
repz
in
push
mov
in
push
and
push
xchg
or
cli
push
add
std
jmp
daa
mov
repz
push
jo
decb
in
mov
add
or
dec
or
loopne
lock
in
sti
call
jo
ljmp
or
push
mov
in
ljmp
dec
incl
jne
jp
les
and
inc
sti
push
mov
test
daa
idiv
xchg
mov
cmpsb
stc
xor
push
jne
mov
xor
notb
jnp
jmp
add
call
jbe
cmp
push
add
notb
dec
ficoms
fwait
push
iret
sbb
add
sti
in
adc
mov
xor
ljmp
adc
mov
scas
xchg
xchg
lods
add
mov
mov
jp
repz
cli
addb
jb
sub
hlt
add
aam
add
aam
divl
add
mov
adc
add
or
cwtl
decl
pop
lds
movsl
inc
sub
imulb
lcall
dec
push
mov
push
cmc
sarl
jnp
adc
jnp
xchg
out
repz
mov
pop
adc
xor
push
adc
repz
or
mov
cmc
sti
or
pop
mov
add
lret
fsubrl
or
cli
inc
xlat
out
jmp
outsb
or
jnp
add
ds
cwtl
aam
sbb
syscall
push
cmpsl
cwtl
cld
pop
bswap
sahf
add
aam
fnstcw
jnp
mov
add
ud0
es
pop
xchg
cli
push
mov
js
out
into
fdivrl
mov
lods
pop
arpl
mov
or
jbe
or
lahf
cmp
fildl
or
in
test
inc
cmpsl
repz
test
pop
decl
add
icebp
jge
imul
add
add
mov
jmp
xor
insb
jmp
xchg
roll
ret
xchg
insb
add
cmp
inc
pop
stc
call
outsb
or
cli
jmp
inc
shrb
push
cmp
sbb
sbb
sub
mov
testl
or
ljmp
xchg
mov
imul
jmp
divl
sbbl
pusha
stc
jmp
mov
mov
and
jns
sbb
and
xchg
mov
xchg
out
xchg
jb
lcall
pop
mov
push
dec
xchg
cmp
stc
subl
repz
repnz
xchg
mov
mov
and
inc
adc
or
add
xchg
cld
lock
cmp
sbb
jnp
adc
push
lods
cmp
mov
je
das
mov
cmp
repz
test
into
or
xchg
inc
jb
inc
dec
sub
decl
xchg
cwtl
mov
jns
leave
out
or
dec
jb
xor
aaa
or
or
add
leave
adc
xor
loop
cmp
mov
loop
xchg
mov
testb
scas
cmp
mov
out
test
sub
mov
mov
cmp
mov
sub
mov
insb
mov
fstpl
jg
js
add
cwtl
inc
jmp
lret
test
popa
aas
repz
mov
lea
xchg
and
add
enter
xchg
add
inc
lret
outsl
sbb
jp
jg
adc
mov
jbe
jmp
jmp
roll
add
lret
stc
xor
int
mov
cmp
divl
ret
or
or
mov
add
aaa
test
das
dec
mov
orb
stc
call
loopne
bound
jmp
inc
push
shl
jne
push
jne
and
mov
jne
or
add
add
inc
mov
lcall
mov
inc
loop
mov
pop
je
pop
ret
push
mov
mov
push
je
imul
cs
inc
mov
xor
lock
push
negb
scas
repnz
out
fs
add
add
mov
scas
add
xchg
jno
incl
cmp
mov
scas
cli
mov
and
mov
xchg
mov
push
add
fidivrs
push
cmp
add
pushf
xchg
adc
inc
add
mov
add
xchg
cltd
dec
push
mov
xor
das
add
mov
and
inc
mov
outsb
mov
call
jnp
adc
or
aas
add
cli
mov
addr16
pushf
mov
mov
add
mov
push
cmpsl
sti
jp
xchg
sub
andl
sub
pop
fcoms
imul
mov
sub
iret
out
xor
lods
mov
bound
push
pop
inc
adc
push
jmp
js
add
mov
jg
jb
lods
jb
sub
ret
jle
jb
outsb
stos
js
xor
cmpl
mov
cmp
bound
xor
loop
xchg
js
add
jb
stos
js
ret
ret
jo
mov
mov
repz
cmp
faddl
lock
pop
mov
add
xlat
mov
push
push
add
out
stc
call
jne
pop
les
popa
testl
mov
push
add
push
push
shll
int3
stc
notb
loope
push
fisttpl
mov
add
adc
movsl
sbb
ss
pop
frstor
push
mov
lcall
int3
popa
dec
jmp
mov
ja
inc
add
mov
add
mov
xor
xor
jecxz
mov
xor
call
fimull
lea
data16
mov
jnp
mov
dec
mov
add
push
mov
jae
pushf
mov
xor
repnz
add
inc
jnp
cld
mov
mov
jnp
loope
jnp
jmp
push
arpl
lds
popa
cmp
dec
jmp
mov
daa
mov
cli
incb
jnp
pop
cld
clc
lret
decl
sti
test
and
imul
mov
jle
jl
inc
lahf
insb
pop
xchg
push
aas
sbbl
outsl
pop
cmp
sbbl
jae
jmp
adc
mov
add
mov
mov
mov
inc
jnp
add
out
sti
out
xchg
in
movl
mov
imull
loopne
vmwrite
mov
scas
mov
pushf
inc
jmp
xor
test
push
flds
jp
jle
lahf
stc
cld
test
outsl
fisttpll
dec
popa
into
cmc
js
push
mov
inc
shrl
inc
ss
in
jns
add
inc
ret
add
shlb
mov
stos
js
sbb
shld
adc
stc
aas
fimuls
inc
and
int3
popa
cmp
adc
adc
inc
add
leave
cmp
lods
sti
mov
lret
in
orl
jb
call
dec
cmp
pusha
adc
jb
add
dec
add
repz
stc
lcall
iret
push
test
popl
add
mov
inc
xchg
jo
inc
xchg
dec
add
push
cmpsb
insb
and
jecxz
lcall
movb
divl
jnp
test
add
fimull
push
and
inc
int3
mov
repz
repnz
or
xchg
loop
push
mov
jecxz
inc
jle
mov
jnp,pt
cmp
mov
loop
mov
pop
icebp
call
jo
pushf
sbb
dec
mov
mov
adc
xorb
scas
inc
add
or
ret
mov
push
sub
and
std
outsb
repz
jnp
jne
lahf
xorb
and
clc
test
je
lods
sahf
stos
add
popa
out
sub
push
inc
cvtdq2ps
cvtdq2ps
stos
add
neg
pop
les
je
out
or
test
dec
xchg
outsb
aas
pop
data16
ret
pop
add
mov
sub
cli
add
cltd
sarl
jmp
sbb
add
adc
xor
push
add
pop
popf
inc
jmp
mov
mov
xchg
mov
push
mov
cmpsl
push
ss
movl
adc
xchg
es
jns
dec
add
out
or
jg
test
jne
bound
adc
push
ljmp
push
jo
push
jecxz
mov
movsl
rclb
ja
aas
jmp
jns
inc
mov
adc
in
add
cmpl
out
pop
call
clc
mov
jne
cmpsb
ljmp
mov
jb
mov
cltd
lea
inc
inc
je
mov
add
push
lea
lea
subb
or
repz
sbb
jb
add
push
or
ljmp
fdivl
fchs
aas
lea
dec
add
jnp
int3
mov
push
fsubp
inc
mov
out
daa
repnz
loope
xor
add
xor
cmp
and
cmpl
adc
cmpsl
lcall
dec
mov
xchg
inc
scas
mov
inc
iret
mov
cld
in
inc
jae
pop
or
ja
lret
ja
shrl
jnp
outsl
mov
mov
mov
ds
and
stos
xchg
jb
lcall
add
inc
data16
rclb
jecxz
mov
nop
mov
add
mov
enter
mov
add
jbe
nop
mov
push
push
sarb
adcb
add
xchg
mov
jo
in
jp
pop
enter
aam
push
call
mov
aam
aad
xlat
add
aas
lock
mov
cmp
out
js
pop
xchg
mov
lahf
out
insb
dec
js
add
inc
out
aas
cmc
sti
inc
jb
fmuls
ret
jp
mov
lea
js
push
xchg
sti
jns
cli
scas
add
lock
notb
pop
lcall
cmp
stc
jmp
xor
push
decb
out
dec
jg
fldln2
dec
fidivs
in
imul
mov
cli
out
or
out
stc
jmp
es
adc
jg
imul
jmp
cld
jno
xor
dec
aaa
add
in
rcrl
mov
add
cmpb
gs
add
mov
incl
mov
mov
jp
notb
mov
push
mov
scas
and
add
mov
imul
and
add
mov
mov
orb
add
popa
aas
notb
add
call
dec
inc
jne
daa
in
jnp
mov
mov
inc
jno
xchg
sbb
cmpsb
jnp
push
clc
jnp
jae
jns
dec
push
and
mov
incl
jmp
jbe
inc
rcll
pop
pop
dec
add
or
lahf
sub
jns
sub
cmpsb
adc
add
insl
jmp
loop
test
dec
and
ss
stc
in
js
aam
or
inc
outsb
ds
mov
mov
testl
jg
xor
lods
pop
jnp
outsl
repz
xlat
test
push
insb
inc
mov
pop
jnp
in
inc
roll
repnz
dec
inc
in
xor
mov
in
test
in
adc
sbb
or
add
aas
stos
push
fwait
jle
ffree
cld
add
adc
shll
je
movsb
insb
ja
in
add
lret
add
inc
out
jne
add
fs
adc
jg
mov
xchg
lods
jg
ds
stc
daa
mov
inc
in
ja
fs
repz
cmp
notl
stc
sbb
mov
jmp
filds
testb
mov
aaa
push
outsl
add
jb
add
adc
mov
das
pop
insb
enter
ds
jnp
test
lahf
adc
add
xchg
call
add
addr16
je
sub
pop
call
das
shlb
sbb
shlb
sbb
shlb
and
shlb
and
push
inc
and
xchg
add
push
dec
inc
and
lea
add
inc
and
mov
add
push
jbe
cmp
mov
repnz
fidivrs
idiv
xchg
dec
jne
shlb
and
adc
add
ret
loopne
adc
lock
xchg
ret
pop
lret
or
repnz
jnp
mov
clc
pop
jecxz
dec
test
mov
sub
xor
adc
test
flds
inc
xchg
jp
loope
pop
addr16
lahf
ret
dec
pop
cmp
out
push
shrb
arpl
add
inc
andb
add
call
adc
sub
adc
inc
adc
repnz
stos
inc
push
add
rorb
out
jnp
fs
dec
fildl
jnp
jecxz
mov
xchg
movb
jmp
jmp
int3
adc
jo
les
add
xchg
lods
mov
jmp
or
sub
mov
roll
dec
daa
in
fs
sub
arpl
stos
add
pop
daa
xchg
xchg
fcomps
in
adc
imul
mov
rol
call
repz
sti
into
ret
add
add
sbbl
icebp
add
out
icebp
icebp
pop
insb
decl
sub
ret
cmp
out
in
outsl
dec
add
sbb
mov
xorl
adc
adc
outsb
ficoml
pop
out
jb
xchg
ljmp
pop
mov
pop
push
fucomi
jp
out
imul
fld
mov
push
out
arpl
jecxz
dec
into
cmc
add
lea
mov
xchg
jmp
pop
sbb
push
or
mov
lds
mov
mov
pslld
lds
add
mov
add
dec
and
fwait
aam
jno
jmp
cmc
adc
mov
or
lret
cmp
call
inc
adc
mov
add
xchg
cmpl
push
test
add
fxch
add
fsub
clc
mov
in
adc
jnp
jp
ja
addr16
std
xchg
aad
outsl
rcrb
mov
cwtl
ret
mov
enter
or
test
sub
loop
jb
lock
mov
add
add
incb
xchg
repz
cmc
arpl
xor
decb
cmp
xchg
jae
add
dec
add
sbb
imul
mov
pop
push
jp
xchg
mov
rcrb
mov
mov
scas
lret
push
ljmp
add
test
fwait
cmp
mov
in
jg
xchg
pop
nop
fsub
jmp
jne
adc
xchg
ljmp
orb
pop
fnstenv
scas
xlat
jbe
scas
iret
into
xchg
sbb
add
cmp
and
or
ret
rcrb
add
test
andl
adc
bound
adc
mov
xchg
lods
pop
push
leave
pop
push
jmp
mov
jmp
jecxz
dec
or
scas
subl
pop
push
adc
scas
jmp
fidivrs
push
shll
xor
push
shll
and
outsb
int
repz
sbb
enter
mov
jnp
sub
xchg
adc
add
dec
mov
or
fldt
cli
or
push
repnz
push
jg
add
ja
cmp
popl
or
int
or
fiaddl
add
mov
adc
jbe
mov
mov
jge
adc
adc
jne
pop
cmpsb
mov
call
mov
fmulp
stc
inc
jp
inc
xchg
adc
cmpsb
mov
pop
sbb
ret
cmpb
je
push
jne
add
jbe
mov
mov
mov
jnp
addr16
xor
jne
and
in
jecxz
hlt
add
inc
jnp
test
jmp
and
pop
out
mov
push
lds
add
add
call
add
jne
add
jle
push
hlt
icebp
incl
dec
call
add
xchg
pop
xor
add
cld
and
int3
or
cld
clc
mov
out
dec
arpl
or
mov
je
sub
jg
sub
mov
add
dec
xlat
sar
loopne
mov
mov
add
loopne
sti
adc
loopne
jnp
lret
lahf
outsl
mov
cmpsl
jae
jne
jb
xchg
sub
lock
jmp
add
testb
jmp
int3
mov
test
stc
ja
aas
je
push
inc
xchg
clc
loopne
and
dec
lret
rcll
jmp
sti
loopne
cld
xchg
push
loope
jnp
sub
repnz
fildl
stc
fidivrs
pop
jb
xchg
jg
dec
xchg
add
call
lea
add
outsb
xchg
adc
ds
cld
mov
add
pop
outsl
lds
or
jmp
mov
inc
mov
push
in
mov
icebp
js
mov
int3
out
inc
out
std
mov
mov
or
jle
jg
sub
stc
cmpsl
shll
mov
stc
mov
xchg
push
or
cmpsl
add
aad
aam
addb
stc
pop
add
pusha
in
cmpl
inc
adc
lds
xor
adc
mov
pop
je
mov
pop
jne
out
pop
and
inc
insl
cmc
pop
test
aad
sbb
rorb
arpl
mov
addl
lds
jle
stos
add
push
movsl
mov
lcall
pop
data16
jnp
add
add
repnz
and
xor
push
jp
cli
and
mov
out
ret
je
outsl
shll
addr16
sbb
cmpl
sub
and
jecxz
mov
and
mov
mov
mov
xchg
nop
push
addl
aaa
add
pop
je
and
add
cmpsl
sub
jnp
xchg
and
pop
mov
xchg
aaa
sbb
mov
repz
outsl
jmp
cmpsl
lock
stos
mov
sbb
mov
add
cmp
outsb
add
fwait
outsb
test
movsl
outsb
lock
mov
pop
add
or
aaa
cmp
stc
jl
adc
mov
jmp
fbstp
adc
mov
cwtl
jmp
clc
or
add
aaa
cld
pushf
cmpb
mov
in
stc
cmpsb
popa
lret
adc
mov
add
jnp
and
sti
fdivrp
dec
push
rolb
in
add
scas
jns
jmp
cmp
test
add
add
stc
add
ja
pop
xor
jbe
mov
bound
adc
iret
inc
jmp
pop
push
add
sbb
sub
inc
or
xchg
repnz
mov
adc
adcb
idiv
and
and
jmp
adc
cmp
adc
add
stc
ljmp
lock
xchg
inc
and
push
dec
adc
mov
dec
inc
rolb
rorb
dec
lock
push
dec
call
mov
pop
cwtl
fs
int3
stc
push
jbe
je
pop
decl
sub
loope
cmp
jl
jge
into
cld
add
aaa
shll
cld
loope
mov
jp
pop
fadd
pop
and
pop
cmp
push
mov
add
push
mov
sub
imul
aaa
into
lock
sbb
in
add
push
lock
cli
cld
scas
in
data16
notl
inc
arpl
inc
addr16
cld
outsb
fdivl
jecxz
push
testl
aam
push
jl
dec
jmp
mov
out
push
mov
jg
pop
sub
imul
lock
pop
enter
pop
push
and
push
adc
pop
xlat
push
addl
cld
pop
fstpt
push
shrl
push
sbbl
cmp
pop
loopne
daa
scas
jnp
mov
push
or
mov
add
cvttps2pi
imul
je
pop
cmpsl
xlat
imul
and
js
in
cli
adc
sbb
push
cmpsb
jmp
jl
push
loopne
lods
adc
js
cli
std
mov
cmc
test
cld
pusha
xlat
paddsw
add
pop
lods
adc
lods
push
fs
stos
and
inc
ds
mov
fwait
lret
inc
cmp
pushf
je
aas
lds
jecxz
bound
test
xchg
adc
add
fs
add
or
xchg
mov
enter
imul
divb
call
push
dec
jne
mov
lret
and
jne
mov
cmovo
or
int3
and
add
mov
loope
jmp
ja
je
mov
pop
push
sbb
add
adc
and
aam
jae
loopne
inc
xchg
aad
aas
shlb
pop
mov
push
ret
mov
sbb
out
test
or
int
pop
movsb
lahf
adc
es
cld
push
in
push
xlat
xlat
pop
pop
pop
mov
imul
adc
mov
pop
dec
outsb
jecxz
test
mov
xor
adc
vunpcklps
insl
cld
cmpsl
out
xchg
and
mov
pop
imul
int3
add
out
or
sbb
ret
xchg
sahf
testl
imulb
jg
or
cmp
icebp
mov
daa
cld
cmpsl
pop
xchg
mov
test
push
jmp
mov
enter
rolb
call
ljmp
pusha
ret
pusha
push
jnp
jg
push
enter
mov
in
add
jg
add
cmp
fwait
xchg
dec
or
fdivrp
es
fdivr
xchg
push
pop
adc
mov
pop
js
push
sub
dec
bound
in
xchg
jg
jle
int3
jge
pop
mov
inc
loope
mov
cmp
bound
push
ja
int
sbb
pop
add
lcall
mov
in
push
fldl
jg
jle
dec
dec
push
push
sbb
sub
stc
cld
jo
inc
jmp
cltd
loopne
dec
stc
add
lea
mov
stc
or
stc
je
push
inc
adc
mov
push
inc
or
stc
pop
in
ret
mov
rclb
je
push
dec
and
das
mov
mov
adc
add
push
dec
and
das
popf
out
or
addb
push
in
sbbl
je
or
adc
loop
call
inc
jne
jnp
mov
and
pop
and
mov
ljmp
in
mov
xor
jp
stos
repnz
in
andb
inc
pop
add
xorb
add
jmp
pop
push
jle
mov
enter
xchg
dec
mov
imul
lea
mov
call
jl
fcom
jnp
aas
les
in
fs
pop
mov
jecxz
add
mov
add
sub
sub
aas
std
inc
inc
js
mov
inc
pop
js
mov
mov
arpl
faddl
adc
cmp
cmpsl
pop
sub
lahf
cmp
adc
andl
bound
mov
add
out
repz
mov
push
into
nop
cmp
sbb
subl
clc
lret
pop
mov
add
ja
cltd
rolb
adc
jmp
mov
and
push
mov
insl
mov
stc
jmp
jo
aas
inc
jle
scas
call
nop
xor
ret
xchg
icebp
add
mov
adc
add
fwait
daa
add
adc
add
std
loopne
jmp
fnstcw
imul
lea
aas
sarl
cli
cmp
stos
mov
push
sbb
cmp
hlt
push
sahf
mov
ret
pop
adc
gs
add
dec
xor
xchg
sbb
les
enter
inc
cmc
adc
cmp
fidivl
repz
mov
pop
mov
push
cli
test
push
insl
imulb
sbb
rep
xchg
mov
add
arpl
push
rorb
pusha
mov
idiv
aad
sbbb
daa
push
or
mov
pop
mov
pop
jno
add
mov
jnp
orl
mov
ds
in
test
flds
or
xor
movb
jle
mov
adc
adc
in
mov
and
out
xchg
pop
test
test
mov
mov
aam
mov
not
adc
fisttpll
cld
dec
mov
sbbb
arpl
and
incl
in
xchg
in
cld
sub
call
adc
es
bound
or
jmp
add
imul
inc
pop
adc
mov
lss
scas
jae
mov
jnp
ret
dec
icebp
pusha
imul
push
add
sub
aam
cmp
add
cmp
in
das
xorl
cmp
xchg
shll
sti
inc
rorl
cli
inc
add
jns
inc
mov
or
cmpl
fcmove
stc
bound
mov
orl
stc
imul
call
pop
int3
stc
jmp
xchg
stc
jmp
js
jle
xor
jg
xchg
add
js
mov
jg
add
or
call
jg
stc
jmp
je
call
insl
adc
add
test
jmp
add
add
and
dec
inc
dec
jns
leave
xchg
mov
inc
lret
inc
sbb
adc
loope
or
push
loope
pop
cli
iret
popf
sti
je
lret
dec
or
add
lock
add
iret
dec
push
xor
cmp
pop
push
pop
add
xchg
push
test
add
mov
in
or
sub
sbb
add
add
addb
shl
pusha
and
jl
scas
xor
lea
repnz
mov
add
outsl
data16
outsb
lods
repz
jnp
shl
addb
xchg
ss
dec
and
sbb
testl
repnz
imul
je
test
out
pop
mov
add
mov
pop
fidivrs
std
push
mov
inc
xchg
lret
lds
or
and
arpl
insb
sbb
fimuls
cli
das
outsl
add
inc
ja
add
dec
add
lock
mov
je
je
adc
fildl
cltd
mov
ljmp
dec
jmp
movsl
jb
add
popa
je
dec
mov
and
mov
jge
or
xlat
xchg
mov
shlb
cmp
mov
xchg
mov
mov
mov
sbb
stc
scas
add
mulps
add
js
jbe
jb
and
js
or
nop
aaa
mov
mov
cmp
daa
cmp
add
mov
divl
cmp
subb
stc
push
incl
jmp
cwtl
lea
dec
mov
pop
add
cmp
daa
stc
jae
test
js
xchg
fistl
lcall
adc
mov
adc
mov
xchg
test
mov
dec
or
fs
push
int3
stc
lahf
mov
test
pop
push
mov
push
push
clc
call
mov
add
fndisi(8087
decl
rclb
and
push
mov
std
mov
imul
xchg
jle
jnp
add
jge
arpl
les
loop
jnp
dec
xchg
mov
test
add
jmp
mov
jle
and
andl
mov
div
call
jp
movl
decb
loopne
adc
insb
xchg
stos
sub
sub
mov
test
in
xchg
dec
imul
pop
adc
sub
stos
add
iret
out
jle
inc
repz
mov
jnp
fistpl
ret
je
lods
andb
jmp
jmp
sbb
or
rorl
jg
jmp
mov
xchg
insb
loope
mov
pop
mov
std
ret
add
push
push
leave
aaa
pop
inc
adc
cmp
ret
insb
pop
add
pusha
mov
jns
movsb
add
inc
into
adc
into
imull
add
addr16
cmc
push
adc
aas
imul
mov
addb
cmp
jmp
or
jle
mov
inc
add
js
test
sub
stos
lea
cmp
pop
pop
lret
xor
jbe
stc
jmp
add
add
js
out
stc
adcb
test
pop
popa
ss
cmp
jmp
dec
cmp
pusha
hlt
pop
add
adc
ret
mov
adc
mov
roll
add
mov
cmp
loope
sbbb
cmp
not
dec
xchg
lea
push
push
xlat
sub
mov
xchg
push
xlat
loope
and
cmp
add
pop
push
stc
call
shrb
mov
enter
pushf
stc
call
clc
not
popl
add
add
incb
xchg
add
pop
mov
in
mov
aam
cmc
sbb
sub
aam
mov
sub
outsl
jg
mov
xchg
mov
pop
lock
mov
mov
inc
pop
mov
retw
add
add
test
ja
negl
shlb
add
add
jnp
mov
add
mov
sub
mov
adc
push
popa
mov
ret
jmp
js
insl
sbb
aaa
call
nop
out
lods
sbb
arpl
add
or
ret
les
imul
mov
lock
jmp
xchg
pop
mov
jnp
popa
mov
ret
int3
aaa
loopne
xchg
data16
mov
add
lret
ret
call
jmp
jnp
cwtl
sub
jnp
andl
mov
adc
push
xchg
ret
enter
js
inc
push
scas
popf
sbb
cmp
cmpb
stc
jmp
mov
lea
push
mov
push
das
push
ret
popf
push
adc
test
enter
testb
mov
int3
add
sar
aaa
ds
xchg
cltd
adc
jg
andb
mov
jb
or
push
js
stc
outsb
cmpps
test
sarl
cmc
loop
decl
adc
aas
inc
fisttpl
mov
or
or
rolb
push
int
jno
xchg
inc
maskmovq
notl
mulb
cmp
cmpl
add
shl
add
push
push
add
adc
mov
mov
jbe
inc
adcb
lea
jg
inc
imul
je
inc
cmp
adc
negl
mov
and
ficoms
push
adc
xchg
mov
cmpsl
mov
add
notb
cld
lock
inc
mov
std
incl
jnp
and
jp
dec
inc
repnz
sub
jnp
jne
data16
je
cmp
push
cld
int3
push
push
cld
outsb
scas
out
aas
jnp
lret
and
shll
mov
cmpb
add
jge
mov
daa
jb
les
add
out
push
jns
mov
mov
movl
inc
mov
daa
hlt
add
push
test
mov
add
loope
push
pop
or
ret
or
dec
add
push
repz
in
xor
push
imul
sti
push
dec
adc
or
fsubs
jg
add
adc
scas
mov
fisttps
mov
fcoms
popa
fildl
xor
ror
jnp
inc
dec
js
mov
pop
pop
inc
nop
int3
sbb
or
xchg
test
mov
or
adc
jo
mov
inc
push
mov
or
mov
outsl
xor
jmp
mov
stc
divl
jle
add
pop
jb
sub
inc
loope
dec
cli
cmpl
xor
inc
addl
stc
push
testb
popa
or
sub
cmp
cmpsl
mov
pop
dec
popa
adc
in
dec
mov
in
pop
leave
adc
stc
push
test
clc
dec
mov
outsl
sbb
std
mov
hlt
add
stc
loope
push
xchg
test
mov
pop
xchg
add
mov
call
hlt
or
rclb
or
rorb
add
xor
data16
fnstenv
cmpsb
cmpb
outsb
or
dec
pop
inc
xchg
gs
pop
je
cmp
pop
imulb
pop
mov
lds
jmp
cld
outsb
aas
jnp
inc
or
outsl
dec
out
dec
repnz
fsubrs
call
addb
jge
adc
dec
cld
es
ja
cmp
in
add
out
out
inc
jae
sbb
push
jecxz
inc
inc
mov
jnp
jl
add
add
test
out
dec
call
mov
mov
dec
cld
xchg
outsl
imul
mov
daa
cli
fists
add
lcall
inc
movsb
mov
inc
enter
push
imulb
fdivrs
push
dec
and
sbb
add
mov
xlat
icebp
adc
jnp
fwait
dec
mov
scas
dec
fdivrl
loopne
aad
jb
jnp
imul
mov
xchg
mov
xchg
add
fwait
jp
addl
add
push
inc
mov
pop
arpl
js
push
bound
mov
movsl
js
jg
inc
jo
mov
mov
ret
lret
add
rorb
xchg
fadds
jmp
mov
mov
roll
and
add
push
loopne
add
orb
mov
cs
js
add
js
or
cmp
into
inc
add
cmp
adc
js
inc
adc
push
pop
add
add
xorl
lea
clc
jmp
inc
stc
mov
notb
jno
addb
andl
lfs
inc
hlt
leave
or
push
lea
jge
cmp
int3
add
xchg
mov
setnp
stc
incl
and
or
fmull
add
mov
mov
pop
roll
scas
xor
xchg
mov
mov
lcall
jp
add
lcall
subb
dec
adc
sub
xlat
jmp
dec
test
pop
subb
dec
cmpb
repnz
out
jo
mov
add
mov
cld
scas
xor
aam
jmp
cltd
fdivr
add
int
ds
cld
and
and
push
orb
jecxz
ds
mov
dec
and
mov
jb
ljmp
nop
jb
js
sahf
dec
popf
add
dec
add
add
mov
lahf
mov
xor
enter
daa
dec
sti
push
scas
or
or
jnp
fdivs
mov
dec
inc
inc
fwait
dec
imul
repz
adcl
mov
lret
xchg
mov
in
mov
add
mov
cmp
lret
xor
repz
lahf
jno
sub
out
pop
mov
add
add
pusha
push
andl
mov
inc
jmp
xor
out
add
or
push
jmp
stos
or
jmp
js
ret
push
jmp
xchg
sti
add
js
ja
mov
insb
jmp
lea
pop
mov
daa
aaa
stc
pop
test
mov
add
add
imul
adc
mulb
and
mov
add
and
sbb
clc
mov
imulb
mulb
shll
jbe
push
cmp
and
in
inc
or
or
xor
data16
scas
ss
adcb
bound
es
int3
into
idiv
lahf
or
cwtl
and
incl
jmp
cmp
add
es
mov
pushf
jnp
mov
fucomp
js
add
dec
mov
jnp
xchg
inc
jnp
jns
jp
add
xchg
cs
jnp
andb
mov
icebp
xchg
cmp
jnp
jns
adc
js
add
add
cld
loope
pop
sbb
mov
sti
les
sarb
jnp
int
lock
cmp
inc
pop
xchg
push
mov
cmp
push
int3
divb
sbb
inc
mov
pushf
js
push
add
fmuls
jnp
sbb
mov
stos
add
mov
iret
mov
add
mov
add
mov
or
cmp
lods
xchg
fildl
add
and
mov
aam
repz
push
mov
or
sbb
add
adc
mov
js
dec
ljmp
jbe
shlb
mov
jbe
mov
push
imul
dec
push
in
jae
and
mov
adc
ds
lcall
mov
ds
push
in
clc
ss
ffree
cmp
adc
mov
jmp
movsb
add
jmp
dec
mov
jmp
enter
aaa
cmp
frstor
movaps
ret
fsubp
loop
jmp
sub
pop
gs
add
int
jle
das
or
in
fucomp
add
add
jb
incb
sub
call
mov
dec
repnz
cmp
xchg
jp
das
dec
test
psrld
add
mov
jmp
cmp
add
xor
push
mov
ret
adc
lea
fmuls
push
fsub
les
mov
mov
mov
je
add
mov
adc
dec
div
jnp
ljmp
or
xchg
mov
cmpl
sub
outsl
xchg
mov
dec
or
in
fucom
stos
pop
inc
cld
loop
inc
cld
int3
daa
mov
pop
mov
mov
lcall
ljmp
nop
inc
mov
jbe
jnp
mov
iret
mov
mov
xchg
ljmp
and
add
mov
mov
or
mov
iret
aaa
fsub
fistps
pop
or
aaa
mov
pop
fwait
xchg
insb
leave
mov
nop
mov
fsubrs
cwtl
jecxz
add
nop
ret
push
cwtl
pop
push
aas
aaa
mov
loop
push
sub
int3
mov
mov
repz
pop
cmpl
mov
sbb
lcall
or
xchg
jg
out
sub
mov
add
cmpsl
int
add
pop
sbb
mov
pop
push
sbb
mov
in
dec
add
xchg
stc
adc
push
fidivrl
scas
clc
cld
jo
pmulhw
add
mov
and
imul
ret
scas
xadd
add
mov
scas
pop
ret
or
lds
out
imul
jmp
jl
inc
jmp
xor
jmp
xor
mov
and
xor
jnp
clc
or
mov
xlat
cmp
fstp
divb
inc
test
add
mov
pushl
or
popa
testb
mov
lcall
mov
add
mov
test
add
rorl
jge
hlt
adc
and
add
icebp
jb
fndisi(8087
adc
xlat
popa
cmp
popf
add
divl
movsl
add
add
inc
add
cmp
mov
add
push
and
mull
mov
cmpsl
xchg
lea
lret
sub
xor
push
inc
jnp
or
int
add
push
sbb
out
push
bound
mov
mov
outsb
xchg
jnp
cmpl
mov
mov
mov
mov
jb
mov
enter
xor
xchg
sub
ds
mov
pop
inc
enter
aas
mov
sub
adc
cwtl
mov
stc
cli
xchg
pop
pop
cmpb
dec
jmp
mov
stos
pusha
imul
dec
xlat
stos
mov
aam
push
add
jnp
cmpsl
ds
dec
xchg
dec
mov
add
imul
and
rolb
dec
aaa
add
mov
mov
and
cmpsl
lds
repz
sub
dec
pop
cli
aad
cli
mov
mov
rcrb
jb
out
sub
shrl
stos
jne
cmp
xchg
jne
sti
add
adc
jmp
lahf
sbb
mov
js
mov
push
aas
incb
jmp
repz
sbb
and
inc
jmp
out
stos
stc
jmp
inc
int3
stc
jae
mov
cli
and
push
sbb
fisttpl
cmp
xor
cmpsl
loope
negb
test
add
pushf
divb
loop
shll
or
inc
out
add
loope
inc
popa
dec
sub
mov
repnz
clc
scas
stos
cmp
sahf
mov
jne
xchg
rorb
mov
adc
imul
cmc
adc
pop
repnz
je
mov
aam
inc
push
add
inc
push
xor
bound
jbe
sub
clc
jns
pop
add
jns
test
das
jo
mov
push
mov
das
js
sub
add
data16
das
jae,pt
loop
nop
shlb
mov
add
adc
cld
loopne
call
mov
or
das
mov
add
xchg
jecxz
pop
ja
jnp
xchg
jmp
aaa
push
add
xor
push
add
shl
add
iret
adc
lods
pop
adc
add
push
pusha
inc
dec
jmp
push
test
fdiv
ja
lds
mov
cmp
mov
cmp
or
add
mov
pop
dec
cmp
mov
adc
pop
jp
subl
int
incl
aas
jnp
sub
pop
xlat
sub
repnz
mov
out
cwtl
std
jl
xor
iret
rorb
pop
addr16
push
inc
or
lret
nop
addl
cmpsl
stc
jmp
cmpsl
sbb
mov
aad
jmp
mov
add
gs
inc
rorb
jmp
cmpsl
loope
add
or
sub
pop
and
int3
dec
jb
and
add
sbb
test
pop
mov
mov
add
aad
insl
or
call
es
insl
fs
push
jp
aam
jge
mov
jmp
cmp
or
dec
out
sti
incl
cmp
idiv
bound
aad
bound
adc
idiv
push
fs
adc
stc
cmp
push
test
add
mov
ret
jnp
add
push
jne
jnp
sub
push
pop
test
and
push
jnp
into
lds
jne
push
je
mov
sub
or
push
push
out
push
xor
idivl
xorl
pop
arpl
add
into
cld
outsb
xchg
inc
jnp
xorb
test
mov
add
aaa
sbb
iret
addr16
add
cli
add
iret
xor
orb
dec
mov
ret
fmull
sub
xor
addr16
movsb
dec
sahf
fmulp
cmp
mov
or
out
sub
in
popf
dec
pop
xchg
daa
sti
movsb
ljmp
movsb
clc
roll
push
mov
outsl
movsb
fwait
mov
fdivs
pop
cmp
sbb
movsb
rolb
icebp
ds
mov
aaa
scas
ss
adc
or
sub
jnp
lods
scas
andl
aad
jmp
rolb
stos
in
mov
out
jns
add
or
lea
aas
sbb
js
rcrl
cmpsl
stc
mov
dec
or
out
fadds
jmp
shlb
add
js
add
and
inc
je
neg
mov
cld
cmp
jmp
jg
or
mov
xor
stc
cmpsb
data16
addr16
jmp
cmp
inc
add
or
xchg
sbb
add
mov
pop
add
call
divb
pop
iret
test
data16
push
add
stos
divb
pop
adc
ror
imul
repnz
out
pop
not
cmova
cmp
icebp
jne
sbb
ljmp
arpl
adc
and
mov
ficompl
xchg
lea
subb
aad
push
mov
mov
mov
clc
pop
lods
jg
inc
and
mov
push
inc
sub
add
jbe
mov
adc
cmpsb
jae
xor
add
jge
xor
cld
add
das
stc
cmpb
add
mov
jnp
mov
mov
mov
push
dec
test
pop
bound
cld
arpl
incl
xlat
push
fimuls
jae
dec
mov
out
mov
add
push
xor
leave
cmp
adc
add
out
sub
push
inc
fdivl
add
pop
inc
mov
das
aam
dec
xor
mov
pop
add
mov
popf
lods
test
xor
shrb
add
mov
jnp
dec
jmp
fs
addr16
dec
jmp
xor
mul
push
jmp
mov
dec
jmp
mov
dec
jmp
mov
roll
popf
dec
push
dec
mov
inc
jmp
add
mov
mov
pop
adc
js
ret
adc
xchg
dec
add
xor
jmp
nop
test
jmp
imul
aaa
out
pop
movsl
insl
inc
dec
add
pop
adc
add
in
push
imulb
stos
js
rclb
in
lods
ss
xchg
ss
push
dec
jmp
or
inc
adc
sahf
dec
inc
add
mov
popa
xchg
sub
outsb
adc
xchg
adc
int3
lret
xchg
xchg
cmp
pusha
lret
mov
adc
cmpl
dec
push
mov
cli
stc
call
iret
loope
xchg
sbb
js
bound
jl
mov
test
sub
jnp
cmpb
mov
pop
lret
sbb
fcomip
data16
jnp
repz
imulb
dec
xchg
mov
push
jecxz
cld
in
sbb
sar
repz
cmpsb
sbb
jge
popa
add
js
shl
xchg
incl
dec
std
sbb
xchg
push
jns
jnp
jle
mov
mov
add
out
dec
push
lock
dec
and
jp
mov
jp
jmp
rcrl
add
daa
sub
in
mov
cmp
lods
clc
inc
in
add
pop
cmp
xor
xorb
sbb
sub
inc
jae
repz
xlat
push
out
sbb
lret
xlat
ret
push
add
pop
jecxz
jnp
insb
mov
xchg
loopne
outsl
mov
add
adc
sbb
adc
dec
mov
adc
push
add
add
ja
add
test
sub
popl
xor
fsubrp
sub
js
lea
movl
out
dec
loop
js
add
add
js
enter
movsb
dec
add
pop
dec
cmp
pop
rol
adc
mov
es
js
lea
movsb
outsl
js
jg
jecxz
insb
loope
dec
loop
js
add
mov
mov
add
rolb
add
dec
jne
add
mov
bound
inc
or
dec
je
leave
shl
jmp
cltd
mov
js
adc
mov
adc
or
je
and
mov
ljmp
mov
das
imul
push
or
adc
push
int3
or
push
pop
aam
add
xchg
dec
call
xchg
lret
or
dec
add
xchg
stc
mov
ds
call
jnp
shl
sbb
adc
sahf
test
adc
mov
mov
movsb
jl
mov
mov
lock
mov
aad
jg
test
jg
add
mov
enter
jae
cld
in
test
js
addb
lds
cmp
mov
jnp
js
mov
jp
dec
pop
mov
pushf
stc
out
clc
es
testb
sub
mov
and
push
and
add
dec
xlat
jp
imul
movsb
sub
xchg
loopne
ja
push
std
repz
mov
push
and
and
jle
add
dec
mov
add
cmp
add
mov
fs
mov
addl
push
mov
add
sbb
dec
push
sub
lret
into
testl
or
add
popa
xchg
mov
decl
decl
xchg
stc
push
hlt
iret
stc
cmpsb
xor
in
js
lea
int
lea
mov
aaa
add
sub
mov
stc
bound
icebp
cmp
pop
ret
cwtl
stc
jmp
jecxz
pop
xchg
jp,pn
jmp
je
push
cmp
inc
stc
jle
dec
cli
insb
cmp
add
add
push
test
outsl
stc
xchg
jge
mov
add
add
notb
sbb
push
jmp
xchg
dec
call
add
adc
in
xor
mov
lea
push
inc
cld
cmp
fcoms
icebp
push
sbbb
jb,pt
or
and
imul
push
dec
fstl
mov
mov
and
incl
mov
add
pop
dec
sub
nop
inc
adc
les
jnp
push
add
inc
sub
adcb
jo
push
sub
or
das
jb,pt
in
inc
pushl
cmp
add
sub
lods
sub
sbb
push
stos
int3
cmpb
jg
ljmp
adc
lcall
inc
jae
jbe
xchg
popa
push
add
or
out
imull
cld
inc
add
fs
pop
lock
lret
jbe
jae
mov
jecxz
cmp
xor
scas
imul
scas
popa
mov
pop
inc
or
push
into
xchg
testb
dec
jmp
push
mov
clc
scas
jns
insb
xor
nop
sub
std
ret
cmp
cmp
xor
lods
adc
in
add
push
add
rcll
idivl
and
lods
xchg
pavgb
ljmp
inc
out
mov
or
icebp
and
stos
js
paddw
adc
int
cmp
ljmp
xchg
outsb
shlb
lock
mov
stc
fists
and
lahf
xorb
jmp
and
jl
inc
jmp
mov
or
push
jo
lea
push
mov
cmpsb
incl
shll
cli
mov
add
mov
js
mov
add
mov
adc
or
mov
inc
jle
notl
sbb
and
mov
mov
mov
fdivl
and
push
cmp
adc
lea
dec
mov
imul
ss
and
and
addb
or
addl
inc
or
or
dec
stos
xor
jnp
jo
lahf
pushf
aad
lds
out
orl
jo
xchg
push
add
cld
push
fistpl
cld
xchg
lcall
test
imul
push
jae
mov
adc
lcall
mov
cld
sbb
mov
jmp
out
or
mul
test
pop
stos
les
decb
clc
fcompl
jae
jnp
lods
hlt
clc
jnp
sub
xor
je
cmp
mov
mov
add
jb
mov
movsl
movsb
cltd
fs
filds
add
cmp
shl
inc
out
add
shl
pop
mov
sub
add
adc
cmp
cmpsl
cwtl
jnp
push
add
mov
enter
sub
add
add
lret
aaa
lods
add
push
add
ja
or
inc
loope
mov
jle
add
ljmp
jnp
ja
ljmp
or
in
jge
push
pop
adc
mov
js
cmp
fimull
jle
jg
out
sbb
roll
inc
sub
je
inc
lds
and
mov
js
add
jge
ret
xor
call
push
sub
aaa
in
sbb
add
jl
repz
gs
mov
push
movsb
pop
jg
rorb
icebp
test
repz
xor
pop
xchg
add
mov
jmp
pop
dec
lcall
lea
jge
add
ret
aad
dec
repz
push
cmp
inc
lcall
loope
sbb
push
mov
outsl
loope
dec
insl
testb
faddl
enter
jnp
mov
adc
mov
insl
fidivl
add
inc
mov
push
test
inc
daa
xchg
fwait
add
mov
dec
or
in
ret
xchg
sub
cltd
sti
push
loopne
out
sbb
fs
mov
sbb
push
fs
insb
xchg
mov
xchg
mov
sbb
gs
cltd
mov
mov
sub
jmp
repnz
shrl
mov
sbb
jnp
add
stc
mov
xchg
inc
out
pop
mov
add
sub
or
ja
testb
fdivl
jg
xchg
xchg
out
sub
mov
sub
push
in
add
inc
fildll
sub
inc
repz
fisttps
mov
jp
inc
lea
nop
add
out
test
cld
out
pusha
cmpsb
jae
pop
jecxz
int3
add
ja
outsb
fldcw
push
insb
xor
push
rcll
push
jb
add
loopne
stc
and
add
mov
repz
push
bound
or
js
pop
fincstp
inc
outsb
iret
xor
fildl
cmpsb
into
xor
sub
ja
lea
pop
test
cmc
nop
addl
mov
dec
add
xorl
push
cltd
jbe
inc
jp
inc
add
push
clc
fwait
ret
std
test
jl
andb
add
push
loope
lea
jnp
add
xor
adc
xlat
mov
jb
adc
repz
add
repz
jmp
inc
or
mov
mov
imul
insl
idiv
push
dec
je
adc
jmp
loope
pop
push
sbb
lea
xchg
jnp
mov
out
cli
add
fdiv
aaa
sbb
xor
mov
push
mov
out
pop
pop
cld
divl
mov
mov
jnp
mov
add
jmp
sti
pushf
add
bound
jb
mov
mov
cmp
xchg
into
test
mov
mov
fldcw
pop
add
add
push
fs
cmp
mov
mov
rcrb
scas
mov
lea
outsl
jecxz
lret
add
mov
arpl
lret
jecxz
jne
add
xor
int3
jmp
cmpb
add
lods
pop
jnp
jo
mov
sub
dec
dec
mov
jnp
or
scas
call
pop
xchg
jns
fistpl
lahf
add
or
mov
aaa
andb
lods
add
add
jnp
add
add
add
hlt
dec
or
mov
jmp
ja
ljmpw
sub
add
cmc
std
or
dec
leave
sti
jo
ret
flds
loope
leave
add
push
inc
jmp
inc
jbe
sahf
out
int
push
xchg
fmull
mov
js
add
jmp
or
mov
jno
adc
xchg
ljmp
addl
bound
rorl
mov
out
jge
inc
lock
pop
mov
cwtl
mov
push
inc
push
leave
dec
jmp
je
lcall
mov
cli
sub
jle
adc
mov
dec
in
mov
cli
call
push
pop
adc
fisttpll
adc
mov
inc
mov
mov
and
sub
mov
jns
mov
int
push
add
ljmp
jmp
in
lcall
push
add
test
dec
jne
mov
scas
dec
push
push
jns
xor
ret
lcall
aaa
mov
push
sbb
icebp
adc
imul
add
push
std
data16
inc
jnp
xorb
scas
add
mov
lods
jmp
and
stc
push
xchg
or
cld
jp
add
add
sarb
mov
std
add
dec
cld
mov
add
push
pop
data16
mov
cmovb
jnp
je
fisttpll
add
mov
inc
add
iret
pmullw
clc
mov
pop
cwtl
ret
and
leave
jno
xchg
pop
aam
inc
add
xchg
xchg
adc
sub
add
popl
es
adc
jnp
in
dec
add
imul
mov
jg
xchg
add
test
jmp
lock
jmp
pushf
adc
je
mov
push
push
mov
cmc
daa
mov
mov
js
ljmp
jo
popa
mov
stc
jmp
test
and
dec
push
sbb
ljmp
adc
test
js
ret
cmpsl
add
js
aas
cltd
lock
fiaddl
xchg
andb
add
mov
and
stc
call
sbb
push
sub
icebp
jmp
dec
and
xor
inc
lock
mov
lods
addb
inc
in
lret
pop
jno
pop
lods
mov
dec
pushaw
xlat
bswap
iret
addl
pop
and
xchg
es
mov
adc
divb
mov
addb
xchg
adc
bound
lock
repnz
add
cld
lods
call
sarl
push
mov
lds
push
add
fsts
cld
je
jns
mov
lods
adc
lods
insl
aaa
jae
imul
xchg
jmp
outsl
lock
adc
dec
pop
in
mov
and
daa
sub
jmp
xor
xchg
cmp
lds
test
xchg
mov
dec
add
fmull
cwtl
adc
xor
adc
testl
dec
lods
add
mov
or
sbb
jg
jg
into
jmp
lds
and
add
orl
out
or
lods
add
inc
out
into
out
inc
repz
xchg
lods
fidivl
inc
arpl
mov
add
ret
lahf
ffree
in
fadds
pop
repnz
push
int
jg
sbb
nop
or
adc
mov
inc
jmp
or
outsb
in
lcall
pop
addr16
ficoml
or
pop
push
dec
ljmp
gs
fstps
lock
push
ss
push
in
loopne
jecxz
out
xor
xor
hlt
sbb
inc
jmp
mov
les
out
push
push
imul
mov
push
shll
aad
ret
pop
ljmp
xchg
fimuls
inc
jo
inc
xchg
mov
int
mov
jbe
add
and
inc
repz
jne
dec
add
dec
inc
notb
leave
scas
add
or
jmp
dec
dec
call
adc
movsb
fs
adc
and
call
add
cli
subl
push
push
pop
add
mov
jne
movsb
scas
mov
xor
out
aas
jnp
mov
mov
lahf
jns
clc
add
add
fsubrs
mov
dec
jl
sbb
test
outsb
andl
divl
xchg
aas
cmc
or
add
add
jnp
lcall
jle
mov
sbb
push
xchg
sub
cmpsb
jle
jmp
lret
jmp
sub
jl
cwtl
cwtl
mov
adc
jnp
addr16
lret
sbb
mov
jae
adc
fldl
lcall
out
jl
jle
sti
pushf
inc
push
adc
lahf
adc
jmp
iret
cmp
push
jl
adc
cmpsl
out
or
adc
mov
add
and
jge
jae
mov
jle
sahf
mov
clc
pop
pop
jg
in
imul
add
or
cmc
sub
pop
jb
loope
mov
test
xor
js
xchg
sbb
xor
push
leave
inc
jge
lret
push
and
pop
imul
hlt
xchg
fwait
inc
jmp
mov
fdiv
push
inc
jmp
mov
pusha
and
sbb
test
jle
jns
add
fs
mov
fimull
mov
stc
jmp
or
add
jle
xchg
adc
jns
loop
cmpl
mov
test
add
aaa
push
and
and
ret
pop
jmp
mov
add
push
and
mov
cs
and
and
or
mov
outsb
lea
inc
dec
stc
push
fs
and
and
adc
add
subb
mov
mov
mov
cld
add
repnz
push
add
xchg
jae
lahf
aad
or
inc
orb
ja
popa
jge
jb
inc
pop
jp
mov
pop
repnz
and
jb
add
fiaddl
add
xchg
and
std
shll
faddl
inc
add
mov
add
lods
push
xchg
jmp
pop
add
repz
idivl
add
test
add
pop
fsubrl
fs
inc
or
call
je
das
call
xlat
jp
out
push
outsb
nop
cwtl
xchg
inc
sbb
mov
add
push
cmp
pushf
test
js
or
out
inc
rcll
jnp
jmp
mov
mov
sbb
mov
push
iretw
add
shl
push
add
jbe
icebp
ret
cmc
push
in
in
in
push
frstor
jbe
int
add
out
in
outsb
ds
fisubrs
outsb
or
fbstp
inc
jg
test
mov
fucom
ret
mov
cmp
ret
hlt
push
adc
cmc
jns
jb
lods
sbb
daa
pop
mov
dec
push
mov
into
push
cmc
sti
out
jmp
jmp
dec
pop
mov
jge
inc
push
lea
imul
stc
inc
and
xchg
push
pop
jge
mov
mov
mov
inc
scas
loope
add
test
push
pop
xchg
jns
sbb
mov
cmp
xchg
pusha
idivb
std
sbb
lahf
jae
ljmpw
clc
mov
int3
push
notl
lret
add
sti
xchg
outsb
xor
jnp
and
insb
in
cld
out
lcall
js
pop
lret
mov
bound
incl
scas
pop
js
and
and
jae
addb
mov
mov
jnp
repnz
jb
jb
xchg
or
stc
and
stos
rclb
inc
jnp
repnz
mov
add
test
out
ss
mov
cld
jno
xchg
jns
in
stos
add
imul
jmp
mov
xor
iret
cltd
les
jb
popa
cmp
jmp
andl
ja
cli
inc
ljmp
add
or
addl
add
add
je
je
adc
or
ret
jbe
mov
jl
mov
jbe
jg
add
popf
add
xchg
scas
popf
jbe
jbe
daa
add
push
pop
add
std
data16
stc
hlt
push
leave
or
ja
in
decb
xchg
stc
cs
jmp
mov
add
js
or
add
fwait
iret
jbe
in
lea
outsb
loope
jge
shlb
or
fisubs
jmp
icebp
jle
and
scas
jae
ljmp
cli
adc
pop
adc
adcb
cmp
test
add
negb
jae
cld
test
xlat
xor
xor
test
mov
mov
pop
mov
xchg
push
test
lcall
cmp
add
outsb
push
cmp
mov
push
mov
dec
or
xchg
je
xchg
pop
call
je
and
or
std
adc
popl
add
jae,pt
jmp
jae
xchg
cmc
add
std
scas
pop
and
cli
je
scas
cld
out
add
jg
mov
add
add
aam
clc
mov
jnp
jp
repz
out
add
loope
adc
jge
pop
add
icebp
adc
sahf
hlt
aas
jnp
cmp
aaa
shll
xor
mov
xor
mov
fidivrl
scas
and
es
je
xorb
inc
testl
cmp
inc
jmp
fstpl
jo
ret
mull
fwait
push
enter
imul
sub
adc
inc
add
sbb
push
adc
cmpb
icebp
xchg
add
mov
in
nop
fldenv
cmpb
cwtl
std
sarl
cwtl
mov
fidivs
pop
out
aas
mov
scas
jnp
add
jnp
add
mov
xor
stos
pop
pusha
mov
mov
sub
loope
jg
icebp
outsl
aaa
int3
xor
mov
mov
pop
jae
mov
dec
xchg
add
push
iret
pop
fisubrs
call
xor
stos
js
mov
add
jb
fstpt
pusha
sbb
mov
lock
imul
xorb
mov
popa
xchg
sub
int3
push
xchg
xor
int
mov
lea
mov
add
and
rcrb
idiv
dec
hlt
lret
mov
mov
add
int
bound
push
cli
mov
adc
and
and
push
scas
inc
add
mov
jo
stc
inc
mov
mov
or
mov
jnp
subb
dec
lcall
jne
add
and
add
cmp
mov
push
add
call
clc
and
addl
dec
fstpt
jnp
mov
add
test
roll
iret
call
jg
mov
das
jle
sarb
jnp
mov
das
cmp
adc
mov
bound
das
ret
mov
push
inc
loopne,pt
lret
or
lahf
add
dec
lret
adc
fnsave
mov
fnstcw
insb
and
add
mov
mov
xchg
fidivrl
and
out
or
add
mov
enter
outsb
dec
add
lea
jecxz
adc
outsb
pop
insl
lret
jmp
sti
mov
loopne
mov
push
cld
nop
out
adc
cld
mov
adc
roll
out
rorb
aaa
mov
insl
xchg
ljmp
mov
das
xlat
sub
or
ja
pushl
scas
add
push
jb
pop
daa
pop
inc
jmp
push
jno
xchg
push
cli
jle
push
rcll
lds
lcall
bound
sbb
or
jb
mov
add
sub
mov
int
stc
and
add
xchg
push
mov
jp
std
jmp
incb
out
decb
loop
in
movsb
inc
push
add
out
mov
push
jg
ljmp
add
or
add
mov
out
or
add
dec
ja
mov
jmp
add
vmwrite
xor
lret
int
cmp
mov
mov
cmpb
add
hlt
jnp
jle
imul
and
add
adc
inc
ds
mov
cmp
or
inc
xor
mov
jge
bound
lock
add
add
incl
add
and
mov
jnp
add
or
dec
pop
mov
xchg
lret
mov
inc
jae
jp
negb
or
jmp
insl
sbb
xchg
xchg
shll
mul
push
popf
andb
cld
mov
dec
cmpl
les
inc
push
iret
mov
jg
aas
and
bound
jl
ret
sbb
jl
ret
jle
push
std
nop
imul
mov
xadd
out
daa
imul
pop
xchg
fs
xchg
insb
jg
imul
or
add
and
popf
jo
loop
js
pusha
call
mov
inc
or
data16
notb
aas
loope
mov
outsb
add
pop
outsb
hlt
repz
fs
clc
inc
cli
movsb
and
ljmp
jp
aas
lock
lea
mov
outsb
cli
xchg
or
in
je
sti
fs
jbe
ret
mov
adc
bound
mov
imul
push
ret
ljmp
fimull
mov
ljmp
push
loop
mov
jns
pusha
or
or
inc
or
push
call
push
dec
outsl
pop
sbb
add
jb
xor
lret
ret
dec
mov
mov
inc
add
roll
cltd
pusha
xor
sar
push
cli
add
ret
adc
jne
and
inc
outsb
mov
popl
test
jno
sti
cwtl
sub
jne
ja
jnp
or
aas
gs
lea
pop
mov
ljmp
xor
add
mov
jle
cld
pop
imul
jnp
adc
cmp
add
jmp
mov
xor
sti
push
jne
bnd
add
add
mov
popa
cld
sti
jl
xchg
mov
rorb
jg
in
clc
mov
cli
jbe
add
mov
pop
jo
mov
test
xor
jnp
bound
jg
jo
jnp
ds
movsb
and
pop
cltd
adc
dec
ds
fs
aaa
icebp
stos
jecxz
icebp
hlt
lret
push
out
sbb
pop
adc
and
daa
and
jmp
jp
mov
aas
pop
jg
shll
push
jnp
cmp
aas
lods
jmp
cld
mov
arpl
je
mov
mov
outsb
test
or
gs
jmp
jg
stc
mov
pop
mov
bound
add
xchg
nop
test
sbb
add
cmp
dec
in
cmpsl
mov
xorl
js
stc
imulb
or
mov
jmp
aas
xlat
daa
xlat
rorb
outsb
fcmovnb
fistps
aad
enter
add
mov
adc
push
mov
add
popa
ljmp
fistl
adcb
add
xor
std
mov
xchg
je
dec
mov
std
call
xchg
rcrl
adc
jg
and
push
rorb
or
testl
add
mov
shll
sub
or
and
mov
add
mov
rclb
pusha
add
sbb
call
jnp
lds
notl
add
jnp
or
mov
test
inc
mov
xlat
xchg
sbb
jl
pushf
add
addr16
sbb
mov
addb
addr16
je
jmp
sbb
mov
shlb
inc
xor
scas
push
push
les
adc
jb
les
or
add
scas
and
mov
and
inc
push
xlat
cmp
push
pop
and
mov
add
adc
pop
iret
jae
or
pop
out
rorl
scas
out
imulb
cld
inc
jnp
mov
xchg
adc
jge
jmp
dec
fs
pop
andl
scas
call
imul
add
jle
adc
mov
xchg
xchg
ljmp
inc
mov
add
ud0
jnp
jmp
imul
add
jb
pop
fwait
data16
push
fwait
add
lods
ficomps
int
into
push
in
dec
inc
jmp
xlat
movsl
inc
jmp
aaa
dec
inc
jmp
inc
dec
inc
jmp
cltd
dec
inc
jmp
mov
push
popf
popf
dec
inc
jmp
sub
pushf
cmpsl
imul
js
ljmp
xchg
lea
cmc
gs
jb
cmpsl
push
add
stc
out
dec
jae
pop
jg
pop
aas
mov
bound
lea
into
push
out
mov
or
mov
adc
or
dec
xchg
and
call
mov
lea
iret
std
jne
rolb
add
pop
cmp
lods
pop
outsl
and
mov
setbe
add
adc
mov
adc
cmp
insl
xchg
push
adc
lea
add
mov
jmp
add
lea
sub
lret
push
ljmp
out
std
mov
push
lea
add
popa
jnp
lea
out
lds
fldl
sti
push
sbb
or
xor
push
les
out
sti
aaa
rorl
fidivl
mov
out
std
and
mov
jnp
dec
jne
imul
out
add
imul
jb
inc
repz
shl
clc
cli
in
cmp
insb
out
add
jmp
dec
arpl
add
jmp
jbe
push
hlt
dec
jae
push
mov
pop
les
orb
pop
fidivrs
nop
pop
dec
popf
mov
pop
sbb
je
xor
aad
cmp
shll
js
shll
bnd
mov
or
jb
sub
pusha
xchg
sub
xor
lods
add
jbe
adc
mov
negb
sbb
lds
pop
jnp
jb
cld
mov
addl
jmp
push
ja
inc
int
ror
stc
into
cld
dec
outsl
out
push
jae
cmp
stc
cmp
jb
cmp
andb
or
fs
xchg
std
aad
xorl
loopne
jmp
ja
jg
dec
arpl
sti
fdivrs
push
dec
out
push
inc
add
jae
mov
inc
outsl
xor
or
xor
in
mov
outsb
mov
jmp
inc
sub
in
xorl
fs
sub
adc
aaa
pop
add
xchg
fnstsw
pop
pinsrw
ja
sbb
jmp
add
roll
xlat
out
cli
mov
aas
rcrb
fidivrs
int3
movsl
out
lea
fdivrp
jne
mov
and
inc
lret
mov
inc
pop
cli
pop
xor
mov
push
jnp
adc
mov
shrb
jnp
repnz
xchg
add
jnp
stc
cli
cs
repnz
add
idiv
stc
xchg
idiv
or
repnz
jl
and
mov
add
cmp
mov
movsl
or
sub
jbe
sarl
add
movsb
adc
and
jbe
jae
rcrl
icebp
jb
jnp
jb
stos
xlat
mov
ja
in
jo
mov
dec
repz
popf
mov
fisttpl
test
add
dec
dec
or
mov
adc
jae
pop
jnp
sarb
loopne
mov
mov
jmp
cld
outsl
insb
call
les
lret
xlat
xchg
xchg
dec
mov
jl
cmpsl
mov
jmp
add
pop
out
mov
std
inc
jnp
inc
sbb
pop
add
add
jle
or
dec
call
ja
add
cmpsl
adc
push
adc
ret
pop
push
in
stc
fdivp
es
js
pop
add
cli
push
add
push
shll
mov
push
or
inc
push
push
cmpsl
push
in
add
stc
lea
sti
mov
loopne
jb
or
xchg
test
push
cltd
add
popa
or
jl
les
or
clc
popa
call
je
lret
add
push
xchg
push
lock
xchg
inc
outsb
pop
or
add
add
inc
jmp
adc
jne
adc
jne
push
ds
popl
add
addr16
dec
loopne
call
xchg
ljmp
mov
idiv
fst
ds
mov
iret
insl
xchg
mov
call
xlat
dec
or
ffreep
push
sbb
xchg
movsl
fsubrl
fcom
inc
outsb
inc
jnp
jb
xchg
out
out
jg
nop
push
add
mov
jl
pop
jp
add
push
sub
dec
xchg
adc
add
inc
xchg
inc
push
call
add
xor
dec
sub
dec
xchg
call
push
jo
jnp
xor
lahf
movsb
cli
dec
adc
outsl
add
jnp
testb
jg
sbb
jle
cli
pop
push
lds
jge
in
and
add
addr16
push
leave
rclb
push
cmpsb
scas
and
repz
fs
adc
adc
pop
sbb
roll
scas
sti
divl
or
into
aas
push
mov
icebp
jmp
xor
ret
arpl
rcrl
std
dec
xor
in
sub
cs
insb
popa
outsl
mov
setp
dec
push
push
les
push
xor
jnp
stos
jno
icebp
fs
xchg
es
test
jg
lea
setl
out
cmc
adcl
dec
cmp
stos
xchg
int3
pop
cmp
mov
rolb
cmp
or
xchg
notb
addr16
jmp
insl
into
neg
into
pop
cmc
push
push
ljmp
test
je
outsl
push
push
ja
mov
bound
mov
out
jmp
mov
pop
jg
orl
mov
hlt
inc
outsb
adc
add
cld
add
fmull
mov
cli
dec
out
jg
ret
sub
and
dec
mov
push
rclb
in
or
add
mov
xchg
aaa
xor
and
push
mov
repnz
or
add
shlb
xor
lahf
push
pushl
in
or
add
nop
shlb
push
ltr
enter
nop
jns
xchg
in
mov
or
and
arpl
div
jno
add
leave
scas
das
sar
adc
cmp
push
and
stc
pusha
aaa
add
int
hlt
out
in
cmp
cli
mov
xchg
loope
xor
test
stos
pop
filds
ret
cli
mov
lret
add
mov
bound
gs
mov
sbb
jbe
in
sub
inc
xorl
sahf
imulb
test
sub
dec
pop
daa
pusha
fisttpl
call
lods
insb
data16
out
and
into
pop
push
popf
pop
outsb
jg
fucomip
scas
orl
jnp
add
dec
scas
sti
add
mov
icebp
add
repz
jnp
sub
dec
jecxz
inc
add
test
ja
push
pushf
push
cwtl
pop
jg
into
aaa
push
jmp
stos
or
xor
into
mov
loopne
mov
add
lret
add
imul
mov
enter
mov
adc
jg
ret
mov
test
rorl
notl
call
inc
jae
pop
mov
les
jle
fstpt
mov
ret
push
aas
adc
and
push
mov
cmp
out
add
iret
mov
jmp
stos
push
stc
add
jg
add
dec
outsb
and
popa
mov
push
push
or
out
adc
or
je
push
or
iret
add
push
push
clc
popf
jnp
adc
mov
add
mov
dec
xlat
push
push
mov
xor
cmovs
into
add
rorb
and
and
dec
push
clc
jg
jne
push
loop
jmp
fs
mov
xchg
dec
sub
ljmp
out
out
xchg
jno
outsl
xchg
fbstp
xchg
pop
sbb
sti
sub
mov
sti
outsb
jo
inc
jnp
ret
fdivrp
xor
in
mov
fists
push
movsl
jb
lock
add
add
out
subl
or
sti
movsb
add
cld
pop
add
fnsave
pop
or
and
pop
add
jns,pn
mov
inc
int3
push
lret
jmp
data16
inc
jnp
stos
outsl
pop
jecxz
jp
mov
in
and
inc
jnp
stos
outsl
mov
adc
in
pop
stos
outsb
jg
stos
mov
jnp
jbe
inc
dec
scas
js
pop
or
and
or
jb
setne
outsb
insl
in
jbe
and
or
ja
cmpsb
fwait
aaa
mov
add
push
jbe
dec
ret
xlat
add
inc
mov
push
cmp
mov
jmp
dec
mov
inc
jmp
pop
adc
ret
sahf
ret
xchg
iret
mov
orb
jns
xchg
fnstcw
out
icebp
pop
aas
pop
sbb
xor
mov
mov
cmp
ret
mov
adc
sbb
lret
add
js
mov
xchg
test
lret
mov
mov
mov
inc
adc
fsubr
adc
dec
dec
addb
outsl
adc
lds
std
inc
mov
mov
arpl
bound
mov
in
rcrl
push
xor
in
lret
lret
inc
cmp
adc
fwait
ret
out
cmp
jle
adc
cs
lret
add
incl
loop
aam
and
inc
add
imul
fistpll
orl
xchg
add
lea
pop
xor
cs
jecxz
and
push
mov
data16
sahf
xadd
filds
and
jecxz
lret
ss
add
xchg
adc
pusha
mov
jmp
mov
call
sub
xchg
int3
idivl
jnp
add
push
movsb
in
xor
add
or
aas
jnp
mov
push
fildl
into
pop
insb
lret
jmp
test
xor
inc
filds
sahf
roll
dec
outsb
push
fdiv
in
sub
mov
inc
mov
je
ja
fs
jg
sub
dec
pop
add
jns
stos
push
push
mov
sbb
popa
jecxz
add
mov
lcall
loopne
jnp
push
outsl
dec
or
jns
add
dec
scas
bts
jl
inc
jmp
jle
ret
jg
mov
sub
cmpb
imulb
outsl
loope
jbe
std
cmp
stc
dec
mov
add
jmp
xchg
mov
push
push
ljmp
jg
aas
repnz
js
jmp
xchg
lea
push
xchg
jne
add
hlt
dec
outsb
in
or
lret
sub
dec
jb
or
lds
jle
xchg
jmp
filds
and
add
xchg
lea
cmc
jge
xchg
loop
bswap
movl
cmc
lcall
cli
or
xchg
addb
ljmp
push
js
sub
popl
push
sbb
and
in
jle
scas
and
sbb
jo
add
adc
setbe
add
adc
mov
imul
xchg
xor
lea
int3
ds
jnp
ss
add
insb
fdivrs
sbb
add
xchg
test
cwtl
fdivr
sub
xchg
xor
adc
inc
testl
inc
adc
sti
push
js
push
sub
dec
insl
je
jle
cmp
rcr
inc
in
out
mov
pop
out
sti
stos
scas
xorl
xor
ret
mov
xor
or
mov
add
arpl
or
push
decb
filds
dec
fwait
jmp
xchg
cmp
movsl
dec
nop
cmp
dec
filds
dec
mov
sbb
jo
stos
add
sar
mov
xchg
ljmp
adc
adc
jmp
cmp
out
repz
ljmp
adc
repz
jmp
jmp
pushf
sub
dec
mul
xchg
jmp
add
shl
pushf
dec
cmp
jmp
test
pop
sub
add
dec
lahf
out
mov
lahf
ljmp
or
jmp
or
push
xchg
scas
adc
ret
iret
inc
jo
repz
cli
cmp
mov
jns
add
out
adc
js
stc
jg
adc
repnz
cli
out
nop
adc
roll
inc
outsl
int
sahf
loop
cmp
enter
pusha
push
inc
add
bound
jo
movsl
add
sub
add
ja
and
add
cmp
leave
cli
sbbl
inc
dec
cs
inc
dec
mov
xlat
and
cs
inc
jne
cmp
mov
xor
es
aaa
or
shrl
add
fadds
dec
aas
dec
mov
push
ja
jns
mov
push
ja
leave
cwtl
mov
cmp
daa
pop
mov
adc
call
dec
lret
add
and
cld
adc
stos
add
add
out
ja
push
xor
sar
xchg
lock
jnp
push
adc
xor
inc
pop
mov
xchg
push
and
inc
jmp
inc
call
in
in
data16
push
cld
aam
mov
pop
and
push
lock
sub
dec
rorb
lret
daa
rorl
daa
roll
and
xor
je
cltd
lds
lds
testb
jnp
cmp
jb
in
add
in
sahf
dec
fdivrs
jmp
push
cmp
in
add
test
mov
mov
rclb
jnp
jmp
js
sahf
xlat
fmull
cmp
test
fs
jae
imul
adc
jp
jmp
cs
jbe
cld
push
aam
pop
mov
add
inc
add
jmp
pop
adc
inc
cld
inc
jnp
repnz
xchg
js
mov
stc
mov
call
mov
or
js
lea
sub
lea
adc
pusha
add
adc
mov
jb
xchg
pop
mov
push
or
dec
or
cwtl
scas
fsts
inc
lahf
lea
stc
inc
add
js
outsb
stc
stc
inc
add
js
outsb
loope
inc
ljmp
clc
je
inc
nopl
xchg
test
loopne
cwtl
pop
jle
add
nop
mov
pop
aas
int
lods
pop
add
lds
dec
loop
pop
dec
push
push
mov
pop
pcmpgtb
add
outsl
arpl
push
cmpsb
inc
add
and
ja
push
lea
adc
add
and
mov
cltd
mov
ret
loopne
nop
mov
mov
out
pop
pusha
and
in
jge
mov
clc
xchg
shrb
ljmp
cmp
mov
jg
jne
pop
outsl
or
pop
xor
add
cli
out
in
push
gs
iret
mov
cmp
or
pop
add
incb
xor
idivl
dec
jg
sub
add
fidivrl
xor
inc
inc
adc
cmp
cmp
lahf
jnp
add
add
dec
sub
pop
pop
jmp
add
or
jp
add
adc
sub
fmuls
jg
dec
and
xor
aad
inc
mulb
jb
jmp
push
inc
sbb
push
push
jmp
pop
mov
imul
mov
add
mov
aam
imul
cmp
shl
jnp
jmp
xchg
movsb
lret
jmp
push
mov
add
cmp
mov
mov
cli
jg
add
mov
add
pop
scas
jnp
add
test
add
js
enter
insb
call
inc
ja
stc
hlt
inc
cwtl
inc
jmp
dec
inc
in
jl
and
jmp
daa
inc
stc
jb
icebp
sub
mov
inc
pop
cmp
jmp
jno
cmp
sar
data16
sar
scas
icebp
test
mov
or
stc
lea
add
js
jg
scas
inc
stc
popa
clc
cmp
jmp
add
mov
add
es
jmp
pop
mov
cmp
das
sahf
addl
xchg
add
jle
and
mov
add
pop
add
push
xchg
xor
push
mov
cmp
adc
pop
add
sahf
ds
jmp
adc
incb
inc
pop
std
jne
pop
outsl
or
shr
out
movsb
pop
std
push
pop
sub
mov
push
mov
inc
adc
adc
add
shll
lret
jnp
push
movsl
out
cld
add
arpl
imul
aas
sbbb
fisubrs
repnz
add
call
inc
test
adc
sar
pusha
push
js
jae
add
aaa
cmp
or
adc
add
xchg
xor
mov
mov
hlt
xchg
stos
jge
jp
add
dec
mov
add
xchg
jmp
repnz
xchg
cmp
push
ja
ljmp
xchg
cwtl
xchg
jp
sbb
adc
loopne
test
das
or
mov
fdivrl
lods
inc
add
xchg
adc
repz
xor
push
ja
ljmp
xchg
sbb
repz
xchg
add
scas
lret
add
ljmp
xor
loopne
je
hlt
movl
pusha
cmp
test
jb
cs
test
stc
cld
mov
inc
jmp
cmp
mov
jmp
jle
outsb
loope
add
clc
mov
ds
xchg
repnz
mov
xchg
insb
sub
sahf
jmp
xchg
je
popf
int3
xchg
insb
jmp
sub
add
js
add
xchg
pusha
ljmp
inc
add
js
in
lods
ja
out
fs
mov
pavgb
enter
mov
aam
cmp
and
push
cld
push
xchg
mov
mov
adc
cmovo
andb
pusha
add
xchg
fstpt
jbe
cmp
jl
add
aas
test
je
inc
cli
lcall
inc
enter
cmp
pcmpgtw
pcmpgtw
push
roll
add
add
gs
call
jnp
push
je
test
dec
adc
jp
inc
jg
dec
mov
add
std
mull
mov
lock
testl
xor
jns
add
or
repz
int3
int3
movsb
add
pop
jp
add
inc
and
mov
sti
clc
xchg
loop
scas
xor
mov
pushf
add
sbb
fmull
or
inc
xor
xchg
mov
sti
idivb
jmp
xor
adc
inc
pop
filds
and
in
xor
dec
mov
mov
add
out
jnp
add
stos
shl
repz
ljmp
mov
push
add
cmp
hlt
push
ret
nop
insl
cmp
mov
ljmp
mov
add
mov
add
push
int3
push
rolb
xor
xchg
and
and
jo
orl
mov
inc
ljmp
enter
dec
push
sub
lcall
js
stc
mov
xor
add
sub
push
inc
jmp
or
dec
outsb
roll
mov
lds
mov
xchg
stc
popl
jmp
js
add
cmp
repnz
clc
or
mov
and
mov
and
js
jle
int3
lea
dec
arpl
test
loopne
mov
xchg
inc
adc
mov
mov
sub
cmpsb
lret
add
shlb
inc
ret
sub
cmp
and
mov
jae
push
pop
xchg
mov
push
jno
sub
add
or
ds
mov
add
bound
stc
jg
push
inc
push
pop
lcall
hlt
iret
add
jne
push
add
and
xchg
std
stos
jne
clc
xor
int
sbb
in
call
cmp
daa
mov
jnp
inc
add
ss
adc
and
clc
es
xor
lea
pop
xor
push
inc
add
and
jae
pop
add
and
shr
int
add
inc
add
sub
xorl
add
leave
jp
xor
fcmovnu
scas
loope
cmpsl
inc
jnp
push
rcll
aaa
mov
popf
nop
push
add
testl
lret
sub
jmp
decl
inc
shlb
clc
push
push
lods
add
xlat
add
mov
add
cld
repnz
mov
packssdw
inc
jnp
stos
dec
xchg
cmp
jp
mov
into
mov
push
rolb
cli
cmp
lds
rol
inc
inc
jo
cli
mov
popl
adc
adc
outsb
mov
sub
fcoml
mov
dec
xchg
mov
jb
mov
jmp
fstpl
arpl
stos
js
sub
mov
jo
xchg
in
js
lea
sub
cmp
sbb
xor
sbb
mov
and
cmpsb
xchg
rol
add
mov
imul
or
lds
sbb
les
sbb
fsubl
leave
add
std
inc
std
mov
arpl
and
xorl
inc
outsl
adc
lds
inc
cmp
pushl
mov
push
cmp
decl
insl
mov
in
in
outsl
or
inc
outsl
sbb
push
incl
cmp
jne
jp
adc
jmp
dec
std
jnp
mov
adc
xchg
jge
test
lods
aaa
cmp
xchg
scas
push
fstp
pop
and
das
cmp
sbb
add
shll
shll
repz
ss
xor
or
sub
push
add
mov
cli
jmp
test
daa
push
and
shlb
sti
es
lcall
sarl
out
in
daa
call
add
push
fildl
mov
cmp
push
mov
mov
movl
cmp
jb
jmp
push
dec
test
cmc
enter
mov
mov
ret
sbb
not
jmp
sub
push
in
dec
mov
ret
aaa
xor
fldenv
inc
insl
cld
stos
xchg
cmp
fstps
add
or
mov
cmp
sub
mov
cld
enter
xor
sub
mov
inc
inc
inc
xor
daa
call
fisubl
mov
icebp
movsl
outsb
jmp
xchg
lea
adc
dec
jb
mov
jno
push
xchg
call
mov
push
add
add
pop
pop
js
mov
repnz
or
fwait
inc
jmp
aaa
mov
jmp
incl
push
ljmp
or
add
iret
and
std
test
rcll
pop
jmp
and
xlat
out
add
lea
sbb
int
pop
test
push
add
xchg
jbe
mov
outsb
push
mov
or
and
ljmp
xchg
or
scas
cs
call
dec
out
pop
ret
dec
mov
out
mov
adc
inc
jnp
test
jnp
dec
xor
cmp
adc
sti
data16
fnstsw
dec
in
cli
add
rol
int3
add
int3
addl
mov
aaa
sbb
mov
jb
test
or
sti
stos
lcall
hlt
and
je
and
adc
mulb
cvttps2pi
lds
adc
adc
jnp
pop
adc
push
ret
loope
add
pushf
insb
sbbl
inc
mov
scas
jg
and
jp
data16
push
das
enter
jmp
les
fisttps
ja
test
pop
hlt
cmp
add
add
add
or
lods
xchg
fsubrp
movb
out
mov
les
in
pop
push
pushf
push
or
xchg
inc
stos
sub
test
ljmp
hlt
nop
pushf
inc
jmp
mov
sbb
sub
mov
jmp
mov
paddsw
cmpl
lea
cmp
adc
jg
ret
add
stc
test
lds
rclb
or
push
out
les
mov
test
mov
add
stc
cld
sbbb
push
insb
ja
test
dec
addl
fscale
adc
adc
add
sub
sbb
pop
add
cmpsl
xchg
adc
bound
ret
add
jb
inc
loopne
dec
call
cli
insl
dec
cmp
xchg
xor
test
adc
adc
addl
test
add
lds
inc
push
jbe
notb
mov
je
or
jnp
xor
outsb
xor
inc
jnp
lds
pusha
add
jmp
cmpsb
rep
bswap
out
testl
inc
xchg
mov
lret
or
and
jnp
sub
sti
out
rolb
jnp
sbb
insl
incb
or
and
jnp
lods
push
mov
cmp
push
mov
add
cmp
sub
push
loope
incb
dec
outsl
mov
adc
iret
add
dec
fwait
add
outsl
ret
scas
or
in
repnz
inc
lds
add
xchg
adc
call
aaa
jg
add
js
xlat
pop
xor
fistpl
shll
test
mov
xchg
bound
sub
push
imul
pop
dec
das
mov
sbb
and
cwtl
int
jmp
hlt
aaa
sbb
sub
mov
faddl
jo
aas
pop
adc
mov
inc
sub
outsl
icebp
cmc
popf
xor
js
fiaddl
mov
lret
sub
popf
xchg
mov
cltd
jo
jb
mov
mov
adc
mov
sub
push
bound
adc
rcl
stc
repz
outsb
mull
pop
rorl
scas
repz
outsb
shrl
add
add
sub
bound
xorb
add
dec
xchg
or
sbb
mov
push
fmul
int
test
cmp
inc
shl
aam
mov
stc
lcall
shl
cmp
or
ljmp
sbb
aam
push
bound
jmp
popf
add
xor
rolb
adc
inc
adc
jae
call
iret
dec
outsb
in
cwtl
jns
lea
aad
fdivrp
pop
sbb
mov
leave
cmp
add
mov
inc
xor
jg
aaa
mov
mov
add
mov
fiadds
in
cmp
mov
or
cmp
xor
mov
fwait
cs
dec
je
add
xchg
inc
jnp
lds
mov
or
addr16
xor
inc
pop
icebp
adc
jne,pn
and
adc
lock
mov
push
jmp
mov
adc
test
cli
ljmp
or
aad
sub
popa
inc
jp
fs
add
stos
pop
xor
out
shlb
xor
jo
add
pop
xchg
add
pop
fadds
mov
jae
fs
arpl
jb
leave
fdivrs
out
enter
in
xor
pop
ret
cmpsb
pusha
add
ja
inc
into
js
outsl
enter
push
ja
jo
add
es
jbe
pop
mov
iret
xlat
iret
out
fildl
ret
in
call
dec
push
out
dec
push
ret
inc
outsb
sub
cs
shl
jb
xchg
icebp
inc
insl
dec
xchg
mov
stc
aam
jns
jmp
and
add
adc
push
inc
imul
add
loop
adc
fucomip
mov
repnz
xor
mov
pusha
and
in
shl
add
mov
xchg
sbb
adc
adc
notb
inc
dec
cmovo
ja
mov
push
insl
xchg
xor
rorb
pop
leave
mov
in
and
pop
in
and
in
add
xchg
and
mov
xor
dec
mov
sub
test
xor
push
xchg
dec
xchg
push
add
repnz
js
in
adc
dec
hlt
inc
rcll
xor
je
xor
inc
jae
in
mov
add
sub
aaa
cld
inc
add
data16
jne
xor
jnp
in
jl
popa
mov
in
pop
push
inc
jo
fsubl
pop
xor
sub
sahf
mov
fcompl
push
mov
mov
scas
mov
adc
mov
xor
int3
shrl
xorb
and
pop
loopne
out
xchg
into
inc
add
sub
mov
outsl
fbstp
sub
stos
add
xchg
jmp
hlt
ss
test
mov
je
cld
inc
add
hlt
jl
add
mov
cli
fs
test
bound
dec
js
jns
sub
adc
hlt
mov
and
xor
outsl
loope
enter
leave
push
adc
jns
dec
jmp
dec
xor
lret
and
out
hlt
push
mov
xor
adc
stc
fsubl
add
or
push
push
sbb
ss
outsb
add
pop
sbb
sbb
inc
xchg
hlt
sbb
add
lret
out
adc
andl
jns
add
xchg
and
mov
and
jae
test
xlat
aam
loop
or
adc
mov
pop
lret
sbb
mov
scas
ret
std
jne
or
hlt
test
push
lcall
ja
add
aas
jg
out
jns
jne
adc
call
push
inc
outsb
or
bound
cmp
jnp
sub
pusha
push
add
jle
jg
xor
or
mov
js
add
jnp
add
cld
mov
ljmp
push
sti
lods
sbb
test
push
add
ljmp
cld
jg
sti
mov
inc
jnp
mov
jnp
mov
clc
sahf
add
mov
sbb
dec
add
push
movsb
xlat
or
ss
add
jnp
mov
xchg
mov
faddl
cld
add
out
mov
lret
jmp
inc
test
inc
xor
add
xchg
test
push
mov
xchg
jecxz
mov
rcrb
jns
add
inc
aam
mov
mov
sub
ds
scas
inc
jnp
xor
add
mov
mov
sbb
jnp
cmpsb
lret
scas
lret
jmp
dec
adcb
pop
push
mov
aas
push
inc
jnp
add
adc
aam
cmp
syscall
insl
lret
add
addr16
add
and
push
in
pop
sub
mov
and
or
insb
fsubrs
push
jb
and
jb
lahf
not
insb
mov
sti
add
lret
add
cmp
xor
pop
inc
test
pop
stos
je
dec
bound
out
inc
outsb
fstpl
xlat
jg
pushf
xor
xchg
fsubrs
ja
stc
cld
jo
inc
jmp
cmp
lods
lock
ja
add
int
aaa
add
fst
mov
push
lea
addb
pusha
add
mov
cli
decl
std
adc
lret
cli
sbbl
add
inc
loope
cltd
push
std
adc
sbbl
dec
push
popf
addl
mov
fcmovnbe
cmp
outsb
inc
pop
jbe
adc
mov
add
mov
outsb
sub
int3
push
dec
jnp
jl
jae
mov
lea
ds
dec
sti
push
jo
jne
loope
push
jl
lods
sti
dec
mov
je
lea
or
inc
add
dec
or
sti
data16
sbb
cltd
inc
or
add
in
ja
pop
push
imul
mov
xchg
fiaddl
and
aas
hlt
jnp
add
add
ja
lea
popf
lods
sub
lcall
inc
iret
mov
loope
sbb
lahf
mov
jmp
stos
or
lea
inc
nop
or
pushf
js
repz
notb
sbb
jnp
fdivl
outsb
lret
jmp
cmp
jl
mov
sub
jnp
adc
xchg
test
sbb
pop
xchg
rorl
cmp
insl
xor
mov
outsl
jp
or
cmp
sub
rcll
bswap
push
add
sti
in
push
bound
insb
jmp
js
add
adc
ss
and
aad
push
cmp
push
icebp
lret
add
mov
jl
jmp
enter
inc
sbb
add
lcall
js
xor
jg
mov
adc
xor
mov
mov
pop
adc
jg
ret
mov
jmp
inc
or
mov
mov
inc
lret
or
mov
xchg
aas
loopne
ret
push
fcomip
idiv
xchg
mov
ficoms
inc
ds
aas
call
adc
add
add
mov
add
ret
or
cmc
add
xorl
pop
sti
jmp
xchg
outsl
or
out
inc
add
jae
aad
add
bound
in
adc
outsb
jo
lods
inc
mov
jecxz
inc
repnz
and
test
lahf
push
in
dec
mov
fisubl
or
xchg
jnp
inc
in
mulb
sbb
cmpsl
jne
popf
mov
sti
jmp
addl
add
add
adc
cmp
or
lods
adc
mov
and
mov
pop
or
mov
sahf
loopne
add
sbb
loopne
jecxz
cmp
test
stos
jp
jmp
aaa
outsb
sbb
adc
into
daa
sbb
inc
mov
lret
jmp
xchg
out
jo
and
enter
hlt
lock
add
sub
add
insb
ret
cs
mov
xor
and
insb
sub
mov
dec
movsb
lahf
add
rcrl
adc
jg
aas
sahf
in
fwait
inc
and
add
adc
add
loope
ljmp
mov
aad
pop
sub
add
lret
add
mov
mov
cmp
xor
lret
add
jecxz
push
jno
shlb
pop
add
int
mov
cltd
cmp
adc
loope
sar
mov
fbld
add
pop
push
pop
fwait
shrl
push
addl
movsl
das
das
add
mov
mov
repz
loop
hlt
inc
mov
add
ljmp
sarl
jecxz
jns
mov
mov
scas
addb
dec
push
sbb
or
ljmp
or
mov
xchg
inc
add
lret
cli
call
cmp
test
adc
lea
ret
lcall
jnp
xchg
mov
ss
jbe
out
inc
or
push
inc
lea
notl
sub
inc
ja
js
jnp
mov
and
add
inc
add
rclb
mov
js
pop
xor
jg
jle
andl
add
test
mov
cld
jnp
and
jnp
sub
in
lock
ljmpw
cmp
dec
aaa
fdiv
test
test
push
add
int3
xlat
jbe
or
test
jnp
sub
cmc
test
push
out
cmpb
and
incl
decl
test
cld
into
pop
jl
push
sub
adc
mov
mov
xor
movsb
add
sub
dec
mov
pop
or
pop
cld
vandps
mov
jmp
mov
pop
ret
jo
add
mov
bound
jne
test
mov
imul
lcall
in
lods
push
scas
in
xchg
lods
add
pop
sarl
call
es
stc
jmp
js
outsl
cmc
push
into
cli
xchg
cwtl
gs
outsb
xor
jg
lods
pop
ss
loopne
jbe
das
adc
mov
mov
ds
and
stos
pop
stc
filds
adc
mov
lret
stc
add
dec
push
inc
push
xchg
or
xchg
jno
add
std
ss
xchg
or
cld
adc
mov
sub
aaa
lds
in
jmp
add
jg
cld
ss
cmp
add
or
stc
std
and
jmp
pop
lcall
mov
pop
pop
push
push
sarl
imulb
test
mov
je
ror
fiadds
add
mov
lock
add
das
xor
cmpl
daa
add
cmp
inc
dec
hlt
sbb
call
add
popa
test
movsl
mov
je
lods
cmp
add
cmp
jl
scas
jnp
jae
sbb
sbb
icebp
dec
jnp
jns
pop
mov
push
call
test
fisttpll
add
adc
jns
add
enter
movsl
xor
inc
filds
cmp
repz
jg
jmp
mov
and
movsb
adc
inc
mov
mov
arpl
das
inc
jnp
pop
out
mov
mov
mov
add
movsb
mov
out
cmp
add
cld
incl
sbb
repnz
das
js
add
sti
add
pop
mov
add
arpl
add
js
add
push
dec
aas
push
add
ja
inc
mov
loope
mov
xchg
adc
inc
sar
push
daa
or
in
cs
jmp
and
push
jg
pop
fnsave
in
adc
outsl
xlat
adc
stc
cmc
lds
xchg
mov
add
add
leave
std
scas
mov
ficompl
xchg
mov
bound
ljmp
xchg
call
sub
mov
loope
add
iret
inc
mov
iret
addb
je
popf
ljmp
testl
cld
inc
jb
daa
ljmp
inc
andl
cmp
add
jle
push
mov
js
dec
push
pop
cld
loop
push
push
sbb
jmp
call
dec
or
add
notb
ljmp
roll
add
ret
mov
cld
sub
adcb
mov
insb
cmpsl
ja
jnp
mov
test
add
rclb
or
mov
or
fwait
jnp
push
lea
push
mov
insb
adc
scas
call
lock
xlat
xchg
jge
lret
test
mov
mov
push
adc
push
cmp
add
call
mul
adc
js
popf
daa
cs
fldl
loope
testb
les
cwtl
dec
xchg
push
scas
or
xor
mov
movsb
dec
jnp
inc
push
mov
or
popf
lahf
lret
and
push
add
or
sub
pop
mov
inc
xor
pop
xor
fdivrl
push
out
mov
or
lahf
xor
jno
mov
xor
push
iret
or
push
adc
push
or
shll
add
js
stc
fdivrl
pusha
adc
test
mov
test
add
xchg
xor
mov
sbb
ret
adc
fdivl
fnstcw
xchg
or
mov
stc
cld
movsb
jge
jmp
jle
outsl
shl
jne
fnstcw
xchg
or
pop
stc
xor
cld
jne
stc
cmp
pop
mov
dec
enter
xchg
or
ds
push
je
in
outsb
cld
xor
push
push
push
in
outsb
clc
xor
mov
out
je
sub
and
outsl
or
cmc
jmp
outsl
cld
fadds
leave
in
adc
mov
jge
mov
std
pop
lods
out
je
push
ja
and
and
mov
loopne
mov
xor
xchg
popl
rolb
loop,pt
jnp
adc
pop
jmp
hlt
popa
clc
xor
push
adc
jl
aas
jnp
popf
decl
xchg
test
ja
clc
jle
negb
add
mov
aas
adc
xor
jg
ficomps
mov
cmp
add
mov
or
ja
inc
sbb
add
add
jne
jnp
adc
xchg
lea
jg
dec
or
fcmovne
xchg
push
cmp
sti
adc
push
mov
cmp
pop
add
cmp
mov
neg
add
sbb
hlt
jg
adcb
jmp
add
adc
test
enter
mov
add
ret
mov
mov
pushf
outsb
and
inc
jnp
adc
add
adc
and
sub
mov
xchg
jmp
xchg
add
push
jno
cwtl
inc
jae
rcrl
xchg
fisttpl
test
outsb
add
testl
vmovups
xchg
adc
stc
jle
lret
insl
in
push
lds
add
dec
gs
inc
adc
lods
add
cli
clc
mov
repz
stos
js
test
je
test
add
in
mov
in
jnp
jno
push
push
push
jl
cmp
xor
ljmp
mov
or
mov
xchg
ret
loopne
mov
add
sar
decl
push
add
mov
sti
mov
gs
popa
rolb
stc
rclb
cwtl
xchg
mov
add
nop
fnstsw
lcall
mov
pusha
add
mov
mov
out
cmp
xchg
imul
bound
out
dec
add
mov
push
sbb
dec
sub
test
lea
cmp
sti
outsl
cwtl
add
sub
jns
je
mov
add
or
inc
sbb
repz
dec
in
iret
enter
xchg
mov
clc
add
pop
nop
add
leave
lds
shrb
mov
jns
sbb
repnz
push
imul
test
std
jno
xor
add
sub
xchg
cmp
lret
dec
fildll
sbb
cltd
xor
mov
rcl
mov
stos
or
lret
insl
inc
ror
xor
jge
sarb
inc
jnp
sub
and
jmp
dec
mov
sarb
mov
inc
mov
inc
inc
roll
inc
jnp
cmpsl
xlat
dec
enter
dec
stos
xchg
add
dec
lock
mov
into
inc
jnp
and
hlt
std
cmpsb
fistpll
xchg
mov
int
out
fmuls
push
rorl
add
test
test
jns
inc
test
add
bound
cmpl
out
enter
scas
add
js
aaa
jmp
rcrb
ja
xor
pop
add
cmc
cmc
stos
push
test
gs
jb
jle
stc
loop
xchg
fidivrl
popa
lds
imul
mov
dec
push
cltd
and
ror
push
jg
mov
rcrb
mov
jnp
lds
dec
add
ret
cltd
in
xor
mov
adcl
adc
mov
mov
push
and
xchg
scas
xchg
or
adc
testb
movd
pushf
inc
adc
imul
mov
jnp
inc
pop
mov
scas
inc
pop
mov
in
push
pop
inc
loop
fldenv
adc
cmp
dec
outsl
pusha
add
lock
jp
add
outsl
jo
or
xor
jnp
adc
and
xchg
jne
adc
jmp
mov
bnd
in
repz
or
add
arpl
test
mov
rolb
dec
mov
ds
sti
aaa
clc
subb
xchg
jne
mov
add
push
int3
fadd
shlb
roll
stos
add
mov
outsb
jecxz
mov
je
hlt
mov
dec
ljmp
rorb
dec
push
jae
jmp
mov
cmp
pushf
lret
aas
ss
xchg
jecxz
jnp
mov
addr16
dec
jmp
dec
mov
mov
jae
dec
jmp
lea
mov
add
sub
imul
in
lret
or
js
add
into
mov
mov
dec
cmpsl
fldl
sub
jmp
sbb
aaa
cmp
out
xchg
or
js
incl
adc
sub
add
cmpsl
push
pusha
xlat
or
push
test
call
ja
lea
add
xchg
xchg
lahf
cmp
or
js
xchg
clc
lock
cmpb
insl
xchg
addl
add
mov
hlt
add
outsb
sbb
push
pop
xchg
add
in
xchg
adc
mov
aam
and
out
mov
mov
cmp
xchg
lcall
loop
jns
into
mov
add
push
lcall
loop
std
jne
and
fstpl
jg
xchg
idiv
jne
and
std
sbb
lea
movsl
add
xchg
mov
add
dec
add
ja
add
test
add
hlt
jg
imul
inc
ja
dec
or
and
jns
add
movb
je
cmp
add
or
lcall
jnp
mov
bound
ret
add
dec
popf
xchg
test
hlt
add
or
das
sti
inc
in
inc
sub
inc
jnp
sub
lea
cmc
popa
out
mov
mov
xchg
popa
cmp
add
out
add
push
push
testl
add
mov
dec
pop
aad
add
aad
jle
jmp
mov
cwtl
div
je
mov
in
lcall
andl
jg
jmp
xorb
pop
jg
jmp
cld
les
cmp
lcall
jg
jmp
push
mov
pushf
and
jmp
test
mov
lret
out
sub
cmc
jmp
dec
jmp
daa
cmpsl
pause
daa
xchg
js
pop
xchg
add
outsb
cld
lret
inc
push
repnz
jecxz
stc
push
test
popl
stos
cmp
stos
jmp
mov
flds
add
icebp
es
push
adc
clc
xchg
sti
jle
fs
ljmp
add
in
je
add
or
icebp
js
ljmp
xchg
push
fildl
cmp
idivl
mov
or
stc
adc
add
ret
or
xchg
or
scas
rclb
inc
xchg
jg
test
adc
add
enter
mov
cld
sti
jne
and
test
add
push
mov
in
in
jle
adc
sbb
cltd
lea
lcall
ret
xor
std
jne
sbb
hlt
add
inc
add
dec
inc
jg
dec
fneni(8087
cld
or
sub
pop
adc
adc
cmp
jnp
dec
and
adc
repz
in
jp
sbb
mov
cmpsl
add
idiv
out
mov
mov
mov
daa
pop
mov
jge
push
dec
cmp
cli
into
aam
jne
mov
or
xor
in
mov
mov
push
add
mov
jne
jmp
xchg
hlt
gs
mov
leave
sbb
shll
mov
ljmp
insl
cltd
dec
and
bound
add
xchg
sbb
push
xorl
mov
decl
add
mov
mov
lret
cld
sar
testb
cmp
mov
out
add
lret
in
jl
stos
test
and
fimuls
pop
cli
out
push
orb
enter
repz
push
out
loope
xchg
negl
jmp
push
add
mov
or
cld
cmc
clc
bound
cmp
pop
das
push
pop
in
pusha
push
push
jle
fincstp
lahf
loop
cmp
add
js
not
dec
xor
aaa
mov
mov
jge,pn
mov
add
sti
scas
scas
aaa
mov
pop
pusha
dec
lret
fldl
lahf
push
fstpt
mov
lcall
push
add
mov
mov
add
mov
mov
mov
rcl
mov
call
push
int3
insl
outsb
popf
pop
pop
mov
out
ret
sub
jns
add
pusha
aam
xchg
mov
push
call
push
add
add
mov
inc
call
xor
daa
mov
push
jns
sbb
cmp
adc
ret
inc
jae
mov
dec
add
inc
xchg
mov
mov
out
add
mov
lcall
jmp
movsl
movsb
addr16
fsubp
or
dec
mov
add
mov
push
xchg
in
or
and
popa
sbb
je
jnp
iret
mov
iret
decl
xor
xor
add
fcoms
jnp
repz
icebp
add
add
lcall
sbb
data16
mov
test
mov
jg
xchg
jnp
jmp
cmp
ljmp
arpl
lock
mov
add
jo
pop
add
xor
jp
mov
seta
jmp
test
aaa
mov
int3
lcall
dec
div
lret
idivb
in
jmp
jnp
rol
mulb
pop
fwait
add
mov
jmp
add
mov
mov
mov
mov
add
push
mov
add
ds
jnp
add
sub
mov
sub
jg
into
adc
pop
ljmp
pop
stc
mov
or
stos
js
push
in
mov
push
push
mov
pushl
add
jge
push
or
push
test
mov
test
dec
lea
pop
jmp
add
mov
add
mov
add
in
adc
jg
test
ja
mov
testl
mov
loope
test
bound
cmp
leave
insb
jo
inc
push
jge
and
mov
std
push
adc
mov
sbb
pop
nop
hlt
clc
push
fstps
mov
out
push
push
add
xchg
adc
xchg
or
in
add
lds
jns
jmp
in
cmp
add
clc
sar
jae
popa
orb
mov
dec
sub
rep
push
incb
pop
jns
dec
das
testl
sbb
or
jle
jl
mov
in
xchg
testb
in
jmp
xlat
cld
test
mov
lods
mov
pop
imul
mov
repz
fwait
xor
ja
jle
jmp
or
push
insl
sti
icebp
cwtl
push
cmc
movsb
mov
xorl
ss
add
push
ret
xor
jecxz
add
mov
xor
mov
sub
rolb
fcompl
mov
pop
pop
data16
mov
jnp
imul
or
repnz
fisttps
pop
mov
and
dec
jmp
aaa
fwait
add
mov
imul
int3
jo
mov
or
jmp
lea
jns
mov
sahf
or
jo
mov
inc
add
add
cmp
xchg
xor
jmp
mov
add
mov
cli
jecxz
lds
pushf
aaa
pop
sbb
ret
fisubs
sbb
inc
mov
push
jmp
mov
add
clc
call
push
cmc
lds
add
sahf
push
jmp
adcl
stos
test
pop
xchg
jo
js
addl
mov
mov
lea
addb
ret
fnstenv
jae
and
jno
je
jne
pop
cltd
int
add
outsb
xor
pop
std
lcall
adc
xchg
cmp
pop
xor
rolb
add
or
cmp
mov
leave
mov
push
jae
pop
jnp
clc
mov
loop
jg
mov
or
stc
jg
mov
jecxz
jle
pushf
cmp
dec
cltd
pop
cmp
idivl
in
jne
addr16
jle
add
repnz
testl
stc
xchg
xchg
incb
sti
pop
jns,pt
addr16
js
sub
mov
lea
push
add
mov
cmpb
pushl
add
mov
add
cmp
jmp
clc
jle
scas
daa
sub
andl
loopne
aad
jmp
stos
push
test
dec
rclb
push
lock
mov
lea
xchg
cmp
stc
fmull
sar
inc
xor
add
mov
mov
cmpsl
sti
mov
dec
xor
into
xchg
fdivr
fistps
xchg
out
ljmp
jle
insb
lea
jnp
sub
std
imul
aam
insl
imul
inc
sbb
lock
insl
outsb
jmp
inc
leave
ds
dec
lret
pop
jo
push
aas
icebp
add
insl
jmp
call
pop
mov
addl
push
fists
inc
js
sbb
les
in
ja
sarl
push
ret
outsb
lret
lea
ret
les
ficoms
xor
inc
dec
lret
ret
mov
outsb
cld
cli
sar
call
jmp
jns
mov
mov
ret
verr
incl
std
lcall
lahf
push
outsl
add
and
outsl
adc
mov
jae
je
sbb
or
fisttpll
loope
mov
lds
push
ljmp
pushl
mov
mov
push
mov
addl
add
or
cltd
cli
test
jg
add
rolb
arpl
inc
js
cmpsb
pop
xorb
stc
sti
popl
cmp
xchg
jnp
nop
mov
loop
mov
in
out
movsl
lock
push
daa
or
xchg
push
call
loopne
jg
fildll
leave
pop
imul
mov
or
add
sub
sub
lret
fidivl
lods
xor
xchg
adc
add
in
push
sub
daa
sub
sub
std
negl
aad
push
xor
pop
xchg
imul
cmpsb
adc
arpl
roll
inc
jmp
sti
testb
mov
ljmp
mov
add
xchg
and
mov
rcrl
sbb
outsb
jnp
lret
jnp
stos
testl
cld
inc
sti
jle
xchg
je
lods
push
mov
sub
add
push
popa
add
clc
pusha
pop
imul
outsb
xchg
adc
rcrb
rol
fnstcw
jl
jne
in
push
add
outsb
inc
add
bound
loop
loope
lret
in
dec
push
adc
cwtl
inc
imul
inc
ljmp
push
xchg
clc
bound
and
jne
in
xchg
stc
outsl
cli
jmp
scas
or
jmp
and
push
mov
addr16
ljmp
aas
call
jbe
xor
pushfw
std
jne
adc
std
loopne
mov
mov
repnz
loopne
subb
add
outsw
clc
lret
add
adc
pop
or
adc
daa
jo
and
popa
outsl
in
shl
mov
xchg
mov
xor
jecxz
shll
add
and
outsb
and
outsb
and
je
jnp
jne
es
imul
test
clc
insb
pusha
mov
daa
test
movsl
shlb
daa
mov
sti
add
jecxz
mov
pop
push
stos
in
es
js
sbb
fiaddl
cmpsb
push
pop
lock
add
daa
or
pop
ja
fpatan
insb
imul
sti
data16
adc
aaa
aas
repz
push
add
or
div
sbb
or
les
pop
iret
pop
ss
inc
and
jo
cs
dec
jecxz
jle
push
jl
iret
xchg
or
adc
loope
subb
stos
push
lods
int3
cld
jae
pusha
ja
mov
movb
hlt
push
rep
insb
adc
push
cld
jnp
adc
hlt
inc
fldpi
lock
pushf
mov
jmp
std
imull
sbb
add
push
repz
mov
xchg
cmp
fstl
lea
call
mov
cli
inc
imul
jmp
inc
dec
adc
test
test
outsb
shl
push
dec
xchg
mov
inc
ljmp
loope
ds
mov
jmp
fidivrl
out
sub
mov
xchg
roll
jmp
test
add
arpl
push
push
lret
les
cmp
lds
mov
mov
dec
sahf
push
jg
mov
std
cmp
sub
adc
lock
lcall
dec
mov
push
aas
hlt
loope
clc
mov
and
add
bound
push
adc
inc
mov
sti
lahf
dec
or
pop
xor
and
fisubl
jnp
inc
jge
leave
inc
mov
xchg
xchg
lock
repnz
xor
roll
out
pop
enter
js
cmpb
jl
jge
movsb
and
pop
inc
jnp
jge
add
add
inc
adc
bound
mov
or
out
or
int3
out
cli
data16
mov
int
or
mov
add
sti
xor
insl
loop
rclb
mov
xchg
jb
add
sahf
push
xchg
dec
pop
mov
bound
add
ljmp
adc
in
pop
mov
xor
loopne
cmc
imull
jmp
loopne
mov
pop
decb
mov
sbb
jnp
ret
dec
or
icebp
fnstsw
pop
adc
jl
add
dec
dec
cmp
bound
lock
add
or
clc
mov
cmp
inc
jmp
mov
xchg
loopne
push
enter
sti
mov
jmp
mov
stc
mov
imul
add
cmc
sub
loop
sub
imul
mov
clc
sahf
mov
dec
xchg
mov
ja
jg
jg
js
add
add
and
out
insl
in
dec
adc
push
cmp
lret
hlt
cmp
jl
push
icebp
pop
outsl
in
fneni(8087
push
pop
jnp
adc
lea
dec
cmpsb
jbe
cld
jge
dec
push
or
aad
inc
jb
fdivrs
inc
push
dec
and
inc
mov
mov
addr16
mov
ja
add
pop
paddusw
or
scas
add
xlat
add
pushf
jne
repz
mov
outsl
or
nop
or
lea
lea
dec
call
enter
aas
ss
inc
jnp
mov
je
jmp
jmp
out
cmp
idiv
dec
in
jne
mov
cli
outsb
sahf
push
inc
jnp
orb
ss
and
addr16
add
add
or
dec
add
ret
xchg
adc
jl
call
mov
mov
push
fs
mov
jns
push
inc
xor
add
cmpsb
outsl
jae
cmp
out
aad
jae
pop
out
jb
inc
out
or
lods
addr16
dec
jmp
testl
js
fistpll
je
xlat
ret
add
push
sub
sbb
mov
xor
std
shrl
ja
je
pop
xchg
cmp
cmc
pop
call
das
push
shrl
mov
xchg
push
sub
jg
jl
in
jmp
dec
jmp
imul
clc
xchg
mov
adc
push
xchg
mov
mov
mov
dec
push
mov
ror
jmp
loope
mov
inc
pop
cmp
bound
pop
mov
xchg
add
jb
fsubrs
shrl
xchg
push
jg
jle
les
adc
mov
jp
mov
mov
stc
cmp
loop
push
push
cmc
mov
dec
add
mov
add
out
out
add
faddl
xchg
add
inc
lcall
std
xor
mov
jp
rorb
outsb
sbb
faddl
push
or
pmaxub
adc
pop
aam
int3
xchg
or
dec
ficoms
scas
xchg
push
inc
sarb
add
lahf
test
push
mov
or
out
cltd
mov
dec
mov
xor
adc
mov
test
ja
ss
out
pop
cmp
ljmp
data16
bnd
push
aas
jnp
fiaddl
pop
cmp
iret
jno
pop
inc
mov
adc
bnd
outsl
mov
std
sarl
inc
orl
adc
cmp
sarb
pop
adc
js
ja
push
lock
mov
outsb
inc
je
sub
sub
jo
and
mov
xchg
aam
je
out
cmp
cld
stos
fdiv
daa
ja
int
dec
jmp
notb
pop
push
pop
mov
je
jl
scas
loopne
xchg
push
add
sub
lcall
jmp
xchg
ret
in
sbb
xor
filds
dec
mov
roll
inc
out
xchg
jp
add
or
jnp
push
xlat
xchg
push
rep
mov
mov
pop
or
jno
cmp
sub
cmp
out
mov
lret
push
xchg
inc
jo
ja
fsubrl
ret
in
in
add
xchg
subb
pushf
mov
out
in
mov
jmp
lock
cltd
inc
sub
jmp
fst
fnstsw
add
arpl
test
cs
dec
and
pop
sbb
cmpsb
jle
add
jbe
imul
push
jns
jb
outsb
sub
add
pusha
add
filds
mov
mov
push
int
ljmp
dec
push
incl
mov
mov
adc
fnsave
pop
jmp
imul
popf
jae
adc
mov
dec
push
add
push
out
gs
add
loop
out
lea
push
in
ret
mov
dec
int
push
adc
cmp
jns
add
test
add
ja
pop
jecxz
add
adc
outsb
cmp
lds
or
mov
add
addr16
push
xlat
test
push
jb
loop
test
mov
fnstsw
es
sti
or
pop
dec
xchg
mov
pop
jmp
loopne
shlb
fdivrl
pop
add
jnp
ja
cltd
lea
mov
pop
insb
push
push
mov
mov
xlat
rcrl
and
jnp
push
enter
fsubl
roll
mov
fmuls
add
or
popa
negb
es
jle
adc
cmp
fdivrl
aad
mov
pop
adc
fadds
sbb
daa
insb
add
push
sub
js
sub
fstpt
fstpt
add
add
jnp
or
sbb
dec
jmp
mov
xlat
idivl
mov
adc
cltd
jle
pop
mov
ds
int
out
stc
push
stos
push
push
push
mov
cld
push
mov
dec
rorb
or
scas
sub
aaa
cmp
insl
dec
add
push
das
test
ret
push
ds
ret
xchg
add
xlat
outsb
pop
mov
add
jmp
push
in
mov
jmp
js
sti
add
popa
std
mov
jb
inc
rclb
and
mov
decl
popa
aad
xchg
mov
ds
mov
std
jne
sti
popf
lret
test
rorl
and
jg
cmpsl
dec
dec
mov
push
out
bound
outsl
or
ljmp
dec
mov
repnz
lahf
int3
add
adc
clc
shlb
or
mov
mov
leave
dec
push
xchg
fcomi
lea
and
imul
jnp
cmp
aam
test
push
add
sbb
in
jne
movsb
mov
std
jg
inc
aam
inc
jnp
mov
jne
and
sti
mov
out
mov
ljmp
add
aam
or
add
pop
mov
ror
repz
sub
cld
cli
mov
inc
jnp
je,pt
enter
fisubrs
addr16
push
mov
add
add
mov
loopne
pop
inc
insl
roll
add
adc
sub
repz
sbb
add
enter
sub
lret
cs
jecxz
add
das
clc
jno
call
mov
out
rolb
add
jno
mov
xor
xor
jnp
jmp
add
in
orl
inc
push
mov
dec
add
inc
xchg
jg
jmp
sub
stc
ds
add
push
jle
fnstsw
lea
xchg
lret
mov
jmp
mov
xor
stos
jg
dec
push
fidivs
xor
sbb
popl
jmp
aas
push
fldenv
push
jge
dec
add
jle
jg
add
jle
mov
js
inc
add
mov
mov
or
add
sarb
inc
imul
lea
jae
push
mov
sti
roll
jns
cmpsb
mov
addb
dec
outsb
push
or
adc
dec
fists
and
test
shl
outsb
ss
fists
push
imul
clc
std
lcall
rorl
inc
jnp
jne
push
mov
pop
mov
push
mov
mov
and
test
push
add
mov
xchg
fdivrs
jae
add
dec
icebp
jnp
push
jecxz
je
gs
mov
data16
test
int
lock
sti
and
add
out
lock
cli
cmp
push
add
push
mov
cmp
je,pt
mov
push
push
mov
shlb
xchg
push
pusha
push
mov
outsl
jl
add
or
cmpl
lret
stos
pop
out
mov
addl
rcll
sti
std
mov
aam
xorb
test
roll
jmp
cmpb
push
and
cmp
enter
dec
jmp
jp
sarl
cmp
lods
jmp
jb
inc
fistpll
jg
ret
dec
pop
mov
flds
jnp
fidivl
addl
orb
icebp
jns
lcall
nop
add
push
cmp
fisubs
add
xor
inc
or
es
lret
insl
stos
pop
push
push
in
and
fisubrl
xor
fidivrl
std
imul
jmp
pop
aaa
sub
js
ret
or
add
rolb
or
mov
test
js
loopne
and
ret
in
das
jns
jbe,pt
push
fdivr
repnz
cmpsb
push
mov
cmpsb
sbb
into
cmpsb
sub
push
cmpsl
push
push
pop
mov
add
inc
ds
mov
insl
and
les
add
aad
add
push
cld
scas
int
testl
sbb
and
sbb
push
pop
push
ret
imul
push
sti
inc
and
fadds
push
syscall
fs
repz
jmp
fsubrs
dec
xor
jnp
cmp
cmp
mov
push
mov
or
add
and
add
cmc
add
jne
xchg
mov
jnp
ret
pop
dec
subb
psubq
push
jb
pop
int3
add
pushl
in
jmp
fisubrs
loop
jg
mov
add
repz
or
adc
je
pop
jg
cmc
cmc
inc
out
outsl
adc
jmp
mov
mov
data16
lahf
shll
jmp
cmc
das
pop
or
add
sbb
sti
dec
out
inc
jbe
mov
add
insb
and
or
mov
jmp
and
inc
incl
inc
dec
repz
xor
add
jle
xchg
jae
mov
pop
stos
je
push
bound
shr
sub
cmpb
lret
add
xor
in
js
lea
adc
jmp
mov
aam
arpl
icebp
js
ljmp
cmpsb
add
js
ret
or
lds
ret
sbb
cmpsl
aas
cmp
jne
jg
stc
inc
push
push
fstl
xor
out
pushf
ret
jne
lea
jg
inc
cmc
out
or
add
add
push
sbb
and
mov
bound
xor
mov
ds
nop
outsb
push
test
lahf
adc
lcall
pop
push
push
inc
add
adc
std
incl
mov
adc
adc
add
mov
add
hlt
mov
push
ret
mov
jb
test
or
gs
loopne
out
std
jmp
insb
daa
sub
add
cmp
cli
out
inc
push
sti
repnz
sub
mov
inc
test
adc
and
pop
in
mov
and
pop
jp
inc
jg
jns
add
mov
mov
mov
dec
add
xchg
inc
cmp
push
sti
lock
pop
mov
jno
and
dec
sti
dec
fdiv
cli
inc
shl
out
movsl
pop
sti
add
and
mov
add
push
xor
sbb
cmpb
notl
out
xchg
rcrb
rcll
mov
roll
mov
mov
std
mov
mov
adc
push
adc
push
clc
jae
add
filds
cltd
pop
nop
jnp
jmp
jmp
mov
mov
enter
mov
mov
mov
ja
add
push
mov
push
add
icebp
dec
push
add
mul
add
mov
adc
xchg
inc
mov
sbb
gs
cltd
imull
scas
cld
sbb
cmpsb
rcrb
aam
xlat
adc
icebp
xchg
int
lret
ds
bound
clc
push
nop
add
or
mov
int
lea
les
push
lds
pusha
data16
daa
fs
and
xchg
add
cwtl
push
mov
das
mov
test
mov
loop
je
or
jle
sbb
call
fimuls
fs
cmpsb
repnz
xchg
inc
lock
mov
loopne
outsb
popa
std
mov
xchg
add
mov
aas
adc
bound
imul
cld
incl
pop
int3
lock
push
push
pushl
mov
mov
jne
roll
xchg
ljmp
mov
loope
inc
jae
popa
or
xchg
sti
rcr
lea
mov
ja
jp
cmp
pop
shrl
cbtw
pop
mov
aaa
xor
rolb
or
add
and
jnp
inc
jne
cmp
sti
js
jbe
mov
cmp
adc
pop
jmp
mov
and
jne
mov
lock
popf
stos
add
fs
das
movsb
mov
incb
outsb
movsb
adc
fld
xor
mov
lds
loopne
rorl
insl
pop
lds
and
mov
add
outsl
out
add
add
pop
fs
mov
int3
inc
pushf
mov
iret
bound
and
mov
por
jnp
and
mov
add
mov
add
lods
adc
add
add
js
in
out
cmp
jmp
in
mov
lret
add
js
cmp
outsb
push
cld
lret
mov
adc
jg
clc
jmp
jg
add
sub
incb
sahf
aaa
jmp
jle
add
js
outsb
enter
popa
outsl
faddl
pusha
push
push
cmpsb
movsl
add
out
mov
lea
out
cmp
pop
add
cmp
ret
xlat
push
or
jns
sub
sbb
or
mov
add
fadd
jge
pop
xchg
addl
push
cmp
scas
js
bound
outsl
cld
sbb
dec
cld
call
inc
outsb
add
and
test
mov
inc
adc
add
je
push
dec
cld
inc
ss
and
push
call
add
inc
sti
inc
ljmp
mov
jno
xor
jnp
adc
aaa
rorb
add
push
adc
mov
lods
dec
je
mov
dec
sti
repz
neg
enter
add
mov
scas
xor
lods
mov
add
sti
dec
mov
add
test
aaa
sub
leave
inc
push
popl
je
mov
mov
aaa
hlt
mov
in
mov
mov
inc
loope
jae
sub
sahf
or
pop
xor
je
lock
outsb
dec
std
ret
mov
test
shlb
cld
into
test
int
test
mov
ss
and
out
mov
add
in
mov
or
push
fs
dec
pop
cltd
shlb
push
insb
insb
jnp
sti
lret
test
xor
popa
xor
add
imul
jb
mov
inc
arpl
clc
dec
sti
lret
insl
fiaddl
xchg
les
stos
xchg
fs
aaa
push
push
pushf
xchg
adc
adc
jno
stc
jne
int
sahf
js
add
les
cmp
and
out
pop
or
insb
aaa
pop
jb
mov
test
les
outsb
push
jmp
js
xor
test
adc
clc
jmp
or
jmp
lock
xchg
sub
add
mov
xlat
ret
test
and
aas
or
clc
incl
loop
test
push
mov
jne
or
xchg
push
std
decl
mov
leave
pop
std
lcall
addl
jle
push
mov
push
lret
ret
or
and
lods
pop
outsb
and
outsb
and
pop
outsb
and
arpl
adc
shll
insl
pop
outsb
and
jbe,pt
cs
outsb
and
les
push
push
pop
cmp
lret
xchg
jns
add
pop
inc
add
push
pop
cmp
lret
cmp
and
push
je
loopne
jl
lods
pop
rcl
push
pop
mov
xor
mov
les
sti
dec
sub
pop
xchg
arpl
jnp
add
subl
les
add
mov
shlb
jg
pop
sti
aas
push
add
jge
imul
mov
fsubrs
adc
pop
icebp
xacquire
adc
xchg
mov
fstps
jp
jmp
mov
sbb
je
filds
mov
mov
push
jmp
mov
adcl
push
enter
dec
pop
xchg
add
cmc
repz
mov
mov
lock
cltd
stos
add
hlt
shrb
imul
or
cmp
jl
mov
jmp
test
lds
icebp
dec
stc
sbb
dec
push
mov
je
idivl
push
mov
xorb
add
ret
jle
inc
bound
rorl
sarb
cmp
fnstsw
cmp
ret
xor
mov
push
lea
roll
outsb
rcrl
ss
mov
clc
out
test
xchg
stos
ja
or
cmp
xor
aaa
mov
ret
aas
aas
sbb
jbe
std
push
lret
incb
inc
ljmp
add
push
dec
outsb
adc
or
into
idiv
adc
pop
fbstp
mov
and
add
pop
test
xor
jge
mov
mov
add
inc
add
and
jg
jnp
bound
jns
add
lods
cmp
incb
mov
sub
jne
cmp
ret
jnp
dec
jne
adc
iret
imul
cmpsl
sub
xor
cmp
add
dec
sub
fdivrl
cli
outsb
push
cmc
aas
jnp
jne,pt
sbb
add
cmpl
pushf
push
sti
xchg
and
add
jnp
jp,pt
sub
sub
ja
filds
jnp
rcr
add
jecxz
mov
cld
inc
mov
mov
dec
je
or
mov
lods
cmc
dec
jmp
outsb
out
ret
or
loope
les
jmp
dec
test
add
pop
sbb
loopne
add
lahf
push
xchg
mov
je
sub
push
bound
popf
stos
add
cmp
mov
mov
ret
add
clc
xor
mov
add
mov
inc
or
adc
rorl
gs
jb
xchg
mov
inc
adc
out
pop
in
inc
sahf
cmp
cmp
outsb
faddl
push
sub
pop
ljmp
xchg
stc
pop
ss
mov
out
push
pop
sub
push
dec
or
js
mov
mov
mov
lea
xor
orl
incl
add
inc
adc
jne
xor
inc
std
pushl
mov
mov
add
test
arpl
add
mov
add
xor
and
push
loop
addl
mov
add
mov
mov
mov
dec
into
add
fwait
scas
mov
sub
add
jnp
jns
orl
xchg
mov
add
jl
cld
adc
pop
add
cmp
call
adc
icebp
outsb
notb
out
sub
add
lods
loopew
sar
xchg
fidivrs
mov
addr16
test
call
das
pop
cmp
push
pop
pop
icebp
addr16
ret
mov
add
out
cld
mov
les
clc
mov
adc
jmp
xchg
xor
fiadds
hlt
dec
out
or
test
jmp
xorb
shll
mov
sub
divl
mov
arpl
jp
js
mov
test
add
dec
push
mov
add
push
jle
andl
filds
mov
mov
gs
dec
aaa
mov
inc
xchg
enter
and
insl
ret
aaa
imul
jg
add
stos
adcl
add
or
lea
mov
mov
or
and
push
ja
inc
inc
sub
jmp
cmpsb
dec
add
dec
and
out
cmc
jp
ljmp
mov
mov
jae
lods
or
mov
clc
add
dec
pop
pop
mov
add
cmp
mov
mov
add
in
ret
inc
outsl
or
xor
std
jge
push
mov
sub
inc
jg
out
addl
cmp
std
call
inc
std
push
sub
in
loope
shlb
inc
sub
dec
or
xor
ret
dec
mov
push
out
popa
stc
daa
fstpt
test
decb
mov
xor
jnp
call
jg
mov
mov
sti
lods
sub
add
pop
mov
sub
add
add
loopne
push
xor
push
movsb
lock
add
repnz
decb
lds
inc
pop
cmpsl
test
mov
pop
ret
jmp
ljmp
add
test
inc
rorl
jp
mov
inc
sub
inc
imul
cli
jnp
sub
mov
cmp
aas
ss
ljmp
mov
jnp
xlat
mov
mov
cmpl
jmp
mov
sbb
xorl
icebp
pushf
mov
jge
add
fcmovnb
sub
mov
shlb
cmp
add
mov
xor
cwtl
push
icebp
inc
mov
inc
jg
add
lahf
test
cmp
lretw
test
hlt
xchg
addl
add
mov
cmc
mov
mov
pop
cmpsl
jno
push
addl
stc
mov
les
mov
sub
lea
push
pop
test
mov
test
hlt
xchg
addl
mov
mov
icebp
mov
jmp
bound
dec
xchg
jg
ret
test
lea
add
jne
xor
jne
inc
std
mov
pop
pop
pop
dec
or
fbstp
out
adc
push
out
mov
clc
sbb
jb
cmp
or
add
cmp
add
lock
add
add
push
or
add
xor
cmp
add
ret
inc
outsl
or
test
cmp
ja
idiv
adc
lahf
dec
jp
jnp
mov
sarb
add
mov
or
ret
jmp
icebp
cmp
lock
mov
add
sti
jnp
movsb
add
outsl
dec
jp
adc
rolb
cmp
je
xchg
aam
cli
lods
popf
out
mov
cmp
clc
rol
mov
xor
mov
in
jae
fiaddl
jg
push
push
xchg
test
call
fs
sub
mov
adc
int3
add
inc
and
imul
or
stos
repz
mov
cltd
inc
sub
das
mov
out
scas
cmc
and
pop
adc
rclb
orb
repz
out
loopne
cwtl
xchg
sbb
cltd
sub
scas
dec
call
xchg
mov
dec
ja
add
mov
imul
test
mov
imul
sub
xchg
add
lret
mov
or
fnsave
stc
aad
adcl
lcall
in
pop
lea
rorl
test
cmp
push
push
les
push
xchg
adc
xor
xchg
jb
add
or
movsl
or
sbb
add
repnz
cltd
outsl
jg
add
jg
add
std
jne
dec
outsb
and
dec
leave
mov
dec
xor
add
lret
xchg
les
adc
movsb
dec
outsb
and
std
std
push
add
pop
xchg
mov
ror
dec
ret
jns
mov
add
sarl
jmp
lods
les
adc
add
add
in
test
cmp
inc
roll
lret
mov
add
cmp
xchg
inc
je
mov
ret
mov
jnp
je
loopne
out
mov
jg
xchg
cmovo
inc
jp
xchg
dec
das
test
mov
jle
pop
testb
mov
movsl
mov
iret
setp
rolb
lods
rorb
lret
scas
fidivrs
fwait
sub
xor
test
mov
push
xor
leave
lcall
jnp
sbb
add
mov
inc
mov
fbstp
sbb
push
pop
push
test
and
ljmp
jbe
push
add
mov
nop
add
or
subb
aaa
add
unpcklps
data16
adc
mov
fsubrp
cmpb
sub
js
add
xchg
test
lds
mov
int
sub
js
push
xchg
xchg
jbe
aas
in
stc
push
push
out
push
cli
repnz
xchg
test
xor
aas
xchg
add
adc
push
popf
add
pop
push
bound
fidivrl
and
pusha
ret
fldt
adc
mov
sub
bound
add
js
lea
icebp
push
mulb
xchg
xchg
or
ljmp
cltd
jle
bound
push
push
leave
dec
ljmp
dec
or
add
adc
jle
pop
aas
adc
loope
mov
add
pop
or
add
jg
mov
ror
test
ljmp
xchg
jmp
js
and
orb
stc
sahf
filds
inc
int
lock
mov
lea
adc
js
cmpsb
mov
xor
jmp
add
mov
inc
shlb
jg
lds
xchg
imul
sti
bound
or
enter
sbb
fcmovne
cmp
mov
jecxz
adc
jnp
dec
sti
rorb
rolb
clc
cmp
sub
mov
clc
xchg
decb
dec
mov
mov
clc
jb
add
or
mov
or
or
xchg
imul
es
add
mull
sbb
clc
push
xchg
insb
arpl
jmp
jae
arpl
ja
aam
scas
jle
mov
jo
ret
xchg
imul
cltd
and
mov
adc
sti
xchg
and
divb
mov
int3
add
mov
popf
sub
sbb
scas
and
cmp
cmpsl
jae
pop
dec
aaa
mov
call
insb
mov
gs
pop
cmp
aam
or
mov
cmpsb
cmp
jp
outsb
cmc
add
mov
dec
loope
mov
into
cmp
mov
push
rol
mov
dec
cli
xchg
jae
aas
mov
mov
pop
daa
rol
adc
mov
test
jno
push
push
jb
es
xrelease
pop
push
mulb
cltd
cmp
push
xchg
jns
xchg
mov
unpckhps
incb
adc
ja
push
ret
lret
cld
cmp
xchg
jns
bound
xchg
push
adc
daa
cmpsb
movsb
ja
xor
mov
adc
dec
popf
or
push
js
stc
sbb
std
sbb
je
xchg
dec
clc
cmp
fsubp
mov
ljmp
pop
lret
leave
ja
shr
ja
hlt
repnz
add
popa
dec
mov
pusha
dec
test
incb
xchg
out
xchg
shl
out
mov
add
mov
shll
push
jnp
js
out
ja
into
test
mov
jnp
daa
add
cmp
or
sub
test
lock
mov
js
mov
shl
clc
hlt
decb
loop
cmp
in
sub
inc
jecxz
sti
out
roll
jmp
les
cmp
mov
aam
pop
xor
push
movsb
jno
test
xchg
cmp
fisttps
stc
out
ljmp
dec
xrelease
adc
dec
or
repnz
jl
aad
lret
sub
sbb
in
xchg
stos
add
lret
xor
rcll
sbb
ret
add
out
sti
out
dec
repnz
sbb
subb
mov
jg
pop
sbb
add
divl
and
ficoms
loope
and
ja
or
lcall
jb
mov
stc
add
pop
mov
ljmp
mov
xchg
movsl
mov
adc
jge
dec
loop
pusha
jnp
stc
movsb
orb
loope
inc
push
out
cli
aaa
stc
gs
add
lret
stos
jo
stc
xor
mov
fstpt
xor
jb
cmp
inc
loope
fwait
jle
sub
adc
or
pushf
loop
add
xchg
into
jmp
xor
mov
xchg
lea
xchg
popa
or
or
dec
popf
ja
cmpsb
pop
outsl
and
mov
mov
push
cmp
rolb
mov
mov
mov
sarb
pop
outsb
out
sub
push
push
adc
cltd
push
jns
inc
pop
outsl
or
leave
mov
mov
adc
or
pop
outsl
and
cmp
inc
test
nop
or
sbb
mov
mov
xor
ljmp
jns
jl
inc
xchg
in
jg
add
clc
iret
mov
loopne
xchg
roll
cmpb
mov
or
jnp
ja
into
shl
mov
mov
mov
jnp
mov
stc
fildll
or
in
les
aam
data16
les
stos
scas
inc
or
add
or
call
cmp
cld
dec
xrelease
adc
jae
jl
sahf
pop
hlt
xor
jle
push
lret
sbb
lock
cmp
bnd
fucomip
gs
cmpb
insb
cmp
pop
mov
mov
cltd
sbb
cmp
mov
iret
pop
push
repnz
push
add
inc
lea
outsl
dec
imulb
ljmp
mov
loop,pn
cmp
push
outsb
mov
pop
mov
push
data16
xchg
mov
adc
dec
inc
test
sbb
sahf
dec
js
fstpt
rcrl
jnp
lret
sub
lds
stc
xchg
fstl
pusha
cmp
jmp
or
push
mov
add
and
push
jmp
inc
or
int
out
clc
pop
and
jg
mov
ret
test
mov
mov
xchg
inc
pop
std
mov
hlt
jns
pop
outsl
cld
cmp
add
insl
orl
mov
out
add
repnz
jmp
mov
mov
testb
inc
dec
pop
cli
inc
mov
xlat
pushf
jge
mov
dec
or
jecxz
push
push
pop
adc
add
jnp
sar
mov
push
clc
xchg
add
rorl
or
xor
jmp
xor
lock
jne
cmp
adc
xchg
stos
jnp
add
enter
out
movsl
add
adc
add
cmp
jne
clc
je
jne
lea
loopne
repnz
inc
das
xor
or
call
jnp
ret
inc
out
jp
push
stos
mov
cmp
js
aad
insl
dec
jmp
cmp
fldl
inc
leave
out
aam
add
pop
or
test
ds
push
sbb
sub
sbb
in
test
mov
jl
and
in
test
and
fildl
add
inc
cld
inc
movl
xchg
test
nop
mov
mov
pushf
mov
push
dec
push
in
and
insl
cmc
sti
cmp
adc
lds
push
imul
popa
or
jns
int3
sub
in
inc
lea
int
repz
mov
adc
adc
leave
cmpsb
pop
aas
cltd
scas
mov
out
mov
inc
test
cmp
mov
add
jb
mov
pusha
mov
jmp
insl
mov
or
scas
add
cmc
add
xor
jg
push
lds
dec
push
add
mov
inc
adc
ret
call
test
mov
add
push
inc
mov
mov
adc
or
in
pop
cmp
add
dec
call
pop
pop
sbb
pop
mov
lea
cmp
jge
call
mov
adc
push
je
pop
ret
or
jl
dec
aad
sti
sbb
ret
adc
es
cmpsl
test
cmpsb
mov
inc
push
sub
call
fsubrs
cli
stos
leave
adc
incb
or
mov
push
ja
jg
mov
sbb
pusha
es
add
and
sti
add
cmp
add
sti
pushf
jmp
xlat
jg
pushf
cmc
test
pop
daa
sti
sti
pop
stc
or
icebp
and
mov
jno
cmpsl
sub
cwtl
arpl
jp
pop
cmc
inc
cwtl
out
ret
xor
les
dec
jecxz
and
jp
fwait
adc
jl
pop
call
cwtl
mov
adc
jp
xor
pop
hlt
lods
jl
ja
rorb
xor
decb
js
sub
add
divl
cmc
push
sti
sbb
cwtl
push
sub
imul
inc
xchg
add
pminub
mov
pusha
es
add
dec
push
ljmp
adc
mov
push
loop
and
ljmp
hlt
lret
or
clc
fidivrs
pop
js
into
enter
xchg
clc
sub
idivl
cld
scas
stc
push
pop
push
aas
enter
adc
pusha
and
fdivp
cs
js
lds
ljmp
cmpb
mov
sbb
dec
mov
jl
addb
nop
add
or
dec
add
pop
lcall
pop
mov
insl
push
repnz
mov
cmp
test
push
mov
subb
sti
jne
jb
inc
cmp
jmp
and
loopne
push
popa
std
mov
sbb
cmpsb
stos
adc
pop
out
and
or
xor
std
adc
add
loop
ds
mov
loopne
in
arpl
mov
out
mov
push
sub
inc
jnp
repnz
lock
repnz
fdivrs
xchg
pop
mov
or
and
inc
xchg
xchg
add
sub
jns
xchg
mov
jne
xchg
mov
sub
cwtl
push
sub
lock
stos
push
sub
out
mov
cld
cs
fnsave
and
add
xchg
xchg
inc
inc
lahf
popf
add
mov
sbb
mov
xchg
aaa
xchg
push
jge
push
pop
scas
or
fbstp
mov
sbbb
jmp
dec
pop
in
jno
jmp
pop
push
fildll
pusha
push
fbld
push
mov
jg
xor
outsl
lret
sbb
dec
pop
loopne
add
loopne
pop
push
adc
xchg
insl
scas
pop
jae
push
lods
xchg
scas
jae
mov
add
push
cltd
sub
add
push
jnp
into
cmc
cmpsb
imul
or
test
add
iret
cmp
cs
insb
pop
pop
fwait
clc
fisttps
clc
lcall
ds
call
xchg
clc
xchg
dec
add
int
pop
inc
ljmp
add
lds
push
push
int
xchg
jns
add
xor
out
xchg
ds
js
cmc
fiadds
push
icebp
and
stc
cmp
fldt
xor
clc
jae
movsb
das
call
fldt
add
and
or
cmp
and
mov
cmp
lcall
scas
mov
lea
mov
mov
cld
cld
and
shr
and
push
push
ds
mov
push
adc
add
popa
idivb
adc
div
mov
push
inc
and
adc
and
lds
sahf
mov
add
mov
loope
gs
xor
pop
push
add
shr
jg
scas
sbb
add
out
jge
jnp
clc
popa
subb
add
mov
ret
in
cmp
mov
les
add
aaa
sub
aas
mov
push
repnz
inc
je
cmp
mov
xchg
jne
xchg
fidivs
inc
lahf
shl
decl
xor
and
movb
jg
mov
stc
jnp
adc
mov
and
xor
scas
jle
daa
add
jnp
and
mov
add
addr16
add
addr16
add
push
daa
loopne
subb
nop
outsl
test
fadds
daa
jle
mov
outsl
push
cmp
xchg
dec
jp
movsb
in
icebp
movsl
nop
mov
nop
mov
pop
mov
pop
inc
stc
mov
addr16
sbb
sub
inc
pop
mov
add
outsb
filds
pop
mov
xchg
test
jns
lods
decl
fs
test
out
xor
mov
clc
ret
ret
cs
in
lea
adc
and
adc
out
je
xchg
in
jmp
iret
mov
std
call
stos
and
inc
inc
lahf
xchg
ret
in
xchg
insl
or
jmp
pushf
xchg
clc
sub
bound
lds
add
xor
out
sub
lea
subl
icebp
imul
push
add
lret
sub
add
sbb
arpl
in
pop
xor
in
push
shrb
xchg
add
mov
cmpsb
out
jne
pop
rol
sub
xor
add
jle
scas
push
push
add
dec
popf
push
shl
inc
jmp
xchg
xlat
mov
call
stos
int3
lock
xchg
inc
outsb
sbb
xchg
sti
cld
push
xchg
inc
jmp
es
movsb
add
ds
inc
jmp
jne
add
mov
add
outsb
sub
push
cld
and
mov
movsb
add
mull
sti
pushf
jae
jae
and
add
inc
mov
stos
sarl
xchg
pop
lock
and
rorb
ret
jae
sub
inc
jle
xchg
lret
jbe
ret
fisubl
test
mov
and
adc
mov
ja
cmc
cmp
insb
sbb
jl
icebp
push
push
and
sbb
sub
mov
add
gs
jo
sbb
or
sbb
mov
fiadds
mov
fucomi
inc
jg
mov
scas
je
push
sbb
mov
mov
sub
lds
sub
jnp
mov
add
stos
add
mov
cmp
jbe
hlt
insb
mov
mov
jge
aaa
lea
and
stc
cld
in
jp
jmp
sub
add
and
lock
cmp
jns
push
jno
dec
add
hlt
xor
pop
pop
push
in
out
add
jg
push
arpl
ret
in
nop
insl
or
jmp
mov
dec
bound
add
addr16
bound
cli
push
pop
xchg
pushl
add
or
outsb
fsubs
mov
jl
cltd
rcll
pop
scas
aaa
add
sar
and
push
std
lcall
or
lret
pop
mov
std
add
mov
lea
lods
out
jmp
pop
outsl
stc
stos
loop
inc
xchg
sbb
daa
stos
sti
push
lds
jge
je
fsts
data16
clc
jae
aas
std
adc
jnp
inc
push
xor
add
and
sub
cwtl
je
out
out
rorb
jno
push
adc
push
cld
sarb
add
pusha
test
jecxz
lods
dec
inc
out
and
je
ret
int
mov
or
sbb
push
add
mov
pop
xchg
pop
iret
call
sub
outsl
add
mov
imul
jnp
jl
jnp
push
add
outsl
add
cmp
pop
jnp
insb
or
cmp
inc
ja
xchg
mov
pop
or
outsl
or
mov
gs
mov
insb
sahf
js
dec
in
sub
add
addl
dec
xchg
fs
mov
in
sar
adc
or
dec
push
ss
or
sub
dec
testb
and
setae
repnz
dec
lds
cmp
mov
bound
mov
js
push
bound
inc
in
push
ret
idiv
sbb
push
in
push
jle
jle
mov
js
mov
outsl
adc
ljmp
insl
mov
adc
add
and
mov
jmp
sti
ljmp
repz
add
mov
push
cmc
jl
stos
add
adcb
mov
cmpsl
pop
test
test
or
push
mov
fisttpl
popl
call
xchg
lret
repnz
or
scas
adc
add
and
leave
adc
mov
sar
incl
xor
or
nop
mov
in
and
inc
push
sub
or
jne
int
sar
decl
push
std
sbbl
je
addl
add
push
adc
clc
dec
or
push
pusha
ret
jns
or
add
inc
mov
sbbb
test
jnp
xchg
push
cmpl
out
jb
add
mov
xchg
pusha
mov
stc
dec
call
xor
add
cmp
call
add
mull
add
mov
js
jp
add
test
je
aas
cld
mov
mov
enter
cld
dec
gs
pusha
adc
mov
jmp
add
jnp
sub
decl
add
jg
and
ljmp
fcomip
xchg
push
and
orb
pop
outsl
mov
shrl
pop
test
xchg
mov
dec
and
pop
test
push
or
or
or
adc
add
call
negb
call
add
add
mov
dec
subl
xchg
cmp
xor
mov
dec
outsl
aam
int
jb
js
in
add
jmp
push
mov
ds
out
out
icebp
test
adcl
jno
mov
jmp
js
ds
std
add
test
jmp
pop
lret
jg
fists
dec
inc
mov
push
inc
or
push
aad
mov
ret
jne
adc
lock
xstore-rng
cmpsl
xchg
bound
cld
push
sete
bound
inc
or
inc
lock
and
jbe
test
popl
sbb
fistps
xor
mov
les
sarl
dec
dec
cld
mov
mov
dec
dec
lock
out
add
add
inc
mov
mov
cmpsl
cmc
sub
mov
call
ret
decb
or
adc
push
mov
and
sar
inc
and
clc
scas
or
mov
sti
pushl
pop
call
shl
jnp
jno
jnp
mov
ret
es
mov
adc
pop
sub
mov
mov
sarb
insb
mov
pushf
fiaddl
jg
imul
mov
jnp
push
dec
xorl
adc
fsubl
sub
push
sub
pop
int
add
add
jne
mov
lcall
jp
adc
cmpsb
jae
or
jnp
je
or
loope
ds
pop
xor
popf
add
mov
xor
loope
faddl
jnp
and
add
add
in
sahf
insb
std
std
into
cmp
int3
cmp
addb
add
mov
and
mov
stos
add
bound
sub
clc
addl
mov
cld
ja
add
and
and
aas
sbb
xchg
test
adc
out
ret
cli
adc
test
mov
sti
pop
repnz
leave
mov
pop
inc
mov
push
lea
mov
add
imul
add
xchg
sti
push
cli
imul
pop
xor
ds
fistpll
add
push
adc
test
sti
push
push
mov
xor
lea
jle
jp
add
and
outsb
lock
sub
or
sbb
xor
dec
iret
mov
jnp
add
jno
cltd
jmp
lods
into
stc
int3
addl
je
leave
js,pn
xor
icebp
in
call
xor
push
divb
movups
mov
jg
adc
dec
cld
cli
cmpsb
mov
stc
fwait
push
add
cmp
add
cmp
jb
jg
dec
add
scas
push
add
jnp
in
jmp
inc
jns
add
loopne
divb
loopne
les
loopne
add
add
icebp
jmp
mov
xlat
outsl
push
jmp
aad
jno
jl
cmp
inc
ja
insb
inc
jg
adc
xchg
mov
cmp
clc
pop
pushf
sub
or
out
js
into
pop
xchg
dec
inc
cmc
popa
clc
std
pop
fisttpll
lods
add
add
pop
jnp
sahf
out
mov
pop
xchg
mov
fsubrs
lods
add
xchg
shl
inc
mov
sub
bound
pop
icebp
push
out
shl
sbb
push
jle
in
push
shll
cmp
or
push
push
call
add
add
lahf
xor
loop
cmc
js
lret
fimull
in
movsl
hlt
mov
push
movntq
out
fwait
insl
pop
sub
call
jnp
imul
orb
negl
cmc
mov
push
in
loop
push
movsl
and
add
or
decl
push
cltd
xchg
test
aad
ret
je
xor
add
std
je
mov
cmp
inc
rolb
mov
mov
insb
inc
sub
lret
or
insb
je
icebp
test
std
adc
fcoms
and
and
xor
or
imul
and
cmp
sti
adc
xchg
rolb
ret
add
add
fisubrs
cmpsl
push
clc
cs
in
adc
add
adc
cli
push
lea
rorb
inc
nop
shr
or
aam
sbb
inc
or
inc
out
imul
jg
jmp
mov
out
jae
dec
aas
push
sub
fwait
and
stc
dec
movsb
jle
pop
push
add
sarb
lock
sub
out
or
idivl
adc
mull
movb
mov
xchg
rcl
addl
enter
mov
or
jns
in
sbb
mov
add
stc
pop
ljmp
push
sub
hlt
lret
inc
cmc
mov
aad
fs
js
xor
jno
sub
xchg
call
test
add
mov
ret
mov
cmp
add
inc
pop
sbb
enter
mov
jo
stos
cmc
push
mov
in
lock
test
push
cmp
dec
icebp
jns
mov
popa
scas
mov
jmp
mov
fwait
pop
xchg
mov
rol
jo
fisubs
lret
push
test
mov
add
cmp
inc
jl
add
stos
daa
sub
test
ja
test
jg
test
ja
test
jg
test
ja
test
js
test
js
test
adc
and
jae
rorb
dec
mov
out
and
push
in
shrl
out
jge
filds
add
and
add
push
cwtl
cmc
mov
xchg
mov
repnz
cmp
xchg
xchg
std
and
jmp
adc
je
mov
iret
dec
lock
adc
add
jnp
nop
pop
arpl
push
jne
mov
or
xor
add
jnp
stc
cmp
or
shl
mulb
or
fwait
xlat
add
push
ret
decl
sbb
mov
lcall
les
pop
mov
inc
jbe
mov
incb
xchg
addb
aaa
sbb
ljmp
or
dec
add
lret
negb
add
add
cld
mov
add
jl
and
into
std
repz
iret
add
std
std
into
add
ljmp
in
aam
cli
add
mov
lahf
das
dec
or
pop
dec
add
cld
out
xlat
mov
adcl
fnstcw
mov
add
iret
in
xchg
add
add
dec
gs
in
mov
and
push
xor
add
rol
pushf
clc
repz
jg
notb
or
mov
jnp
out
mov
jo
pop
jne
xor
int3
dec
or
mov
jmp
inc
shr
mov
or
cli
jno
ljmp
dec
push
mov
shl
push
jno
add
jge
push
shlb
cmp
in
sar
pop
jno
leave
jle
clc
cmp
test
sbb
insb
sub
into
xor
test
push
cmp
in
push
test
or
outsl
mov
aam
adc
push
call
test
iret
outsb
adc
xor
test
xorl
xorl
es
insl
hlt
push
cld
incl
gs
jbe
adc
push
test
dec
cmp
inc
rorb
mov
lea
aas
loopne
push
cmp
xchg
es
ret
dec
mov
xchg
push
pop
cmp
jne
cld
jge
jnp
or
test
sar
adc
jnp
add
clc
stos
decb
decl
add
jnp
mov
add
test
cmc
mov
rolb
sub
or
mull
add
xchg
xchg
imul
in
adc
inc
ja
pushf
xchg
rorb
inc
mov
sti
dec
jno
jne
test
stc
lods
cmp
jge
mov
or
clc
scas
sub
pop
adc
sub
divl
mov
inc
pop
fwait
push
shrl
mov
shl
sbb
adc
decl
inc
clc
in
push
mov
lahf
mull
fldenv
ret
adc
sub
add
pop
test
jg,pt
es
data16
ss
xor
jo
rorl
das
stos
mov
add
add
cld
add
add
daa
int
pop
ficomps
inc
in
mov
jmp
mov
popf
not
sub
pop
bound
arpl
js
lock
and
add
ds
repnz
aad
in
js
inc
loope
ljmp
lea
or
jno
nop
cli
incb
jbe
add
stc
cmc
or
add
jo
call
lods
fwait
inc
add
insl
add
pop
mov
inc
xchg
or
sub
mov
rcl
mov
mov
ret
aam
int
push
jmp
push
push
mov
pop
mov
call
mov
hlt
cmp
push
insl
pusha
push
adc
rorb
and
xchg
mov
fwait
pusha
adc
das
push
add
cmp
and
pop
pop
or
call
call
mov
faddl
lea
cs
ds
push
bound
mov
push
sbb
pop
bound
mov
lcall
mov
out
cmpsl
push
push
clc
popf
out
push
dec
js
adc
iret
mov
ljmp
sahf
enter
xchg
int
adcb
mov
or
sti
jnp
add
sub
or
mov
in
cli
je
inc
cltd
in
jnp
lahf
mov
mov
add
push
cmc
std
adc
in
nop
cmp
add
add
sbb
outsb
mov
or
addb
loope
jmp
lods
jmp
sbb
outsb
cmp
add
pop
imul
mov
add
or
aas
jnp
out
iret
ljmp
add
imul
mov
test
add
js
ret
jne
jb
in
std
dec
clc
push
ret
out
cmp
add
js
push
cmp
divl
gs
mov
jb
sarl
clc
cmpsb
sbb
hlt
popa
test
orl
and
enter
jo
mov
sub
popf
jmp
gs
jb
add
add
xchg
fsts
jo
mov
dec
push
push
stos
adc
inc
push
jns
inc
add
movsl
sbb
add
add
ljmp
mov
add
and
add
jns
mov
loop
mov
add
loope
in
inc
add
mov
add
pop
pop
mulb
insl
xor
repz
sbb
repnz
bound
adc
jg
sarl
cmp
add
push
adc
xchg
test
push
push
fdivrp
push
fwait
jmp
sbb
sub
gs
jae
jnp
in
stc
popf
jl
pop
dec
xor
push
lock
ja
test
jg
add
xor
push
and
mov
push
inc
inc
adc
js
jae
lret
jnp
pop
sti
outsb
outsb
cmovo
ret
jae
andl
inc
jnp
add
mov
mov
jmp
and
out
inc
aam
and
jns
sub
jo
xchg
je
mov
pushl
shll
loope
sub
push
xchg
dec
stos
in
ficomps
jmp
call
mov
mov
mov
in
mov
mov
push
add
std
paddd
lds
and
addb
cmp
add
clc
dec
out
cmp
out
lds
jnp
push
sub
sbb
daa
xchg
push
and
add
sbb
add
js
aas
add
js
aas
lds
jmp
js
pop
jb
rol
ret
xchg
icebp
jne
add
jmp
sti
in
fs
roll
sub
or
sti
les
mov
mov
stc
jne
cmp
mov
lret
pop
xchg
mov
fstl
pop
out
add
jle
mov
push
mov
pop
imul
pushf
xor
sub
mov
add
rcll
rorb
jg
mov
inc
push
repnz
push
lret
add
mov
inc
loope
inc
fisubs
fistpl
shl
mov
mov
test
mov
inc
add
dec
je
inc
cmc
add
sub
mov
adc
je
adc
test
sar
cli
inc
xlat
fstl
mov
adc
dec
pusha
pop
jnp
add
rorl
repz
cmc
cli
adc
clc
xchg
insl
inc
call
jmp
aas
hlt
add
push
roll
push
sti
dec
cmp
push
int3
add
dec
pop
mov
and
adc
cs
dec
sti
dec
jle
mov
add
std
push
jl
push
xchg
mov
les
adc
mov
jb
dec
jae
mov
push
xor
mov
icebp
jmp
cld
mov
mov
jbe
adc
pmuludq
or
jae
std
loope
jne
imul
push
sarb
loopne
jae
fcoms
stos
jo
dec
or
mov
sub
sbb
push
lods
adc
shlb
push
add
enter
lods
mov
cmp
lret
pop
xchg
add
pop
add
les
add
js
push
jo
addr16
lret
and
test
mov
ret
pushf
add
mov
hlt
movsl
add
adc
cmp
dec
mov
lods
aad
fs
clc
out
sbb
cltd
dec
bound
std
cmp
ja
add
xchg
jge
jmp
andl
loope
iret
cli
bound
testl
insb
pusha
dec
or
mov
push
cld
xchg
mov
rolb
inc
jns
jmp
loopne
pushl
dec
dec
mov
mov
push
mov
mov
push
push
adc
pop
mov
dec
mov
xchg
jge
dec
mov
mov
adc
in
std
lds
push
xadd
lret
call
adc
or
mov
daa
or
call
mov
sti
push
add
das
sti
xor
repnz
out
divl
dec
dec
lods
icebp
cli
push
std
xor
aaa
sbb
je
imul
cli
cli
sbb
sti
je
cld
cli
dec
idivl
ja
ljmp
cli
jecxz
in
testb
imul
mov
add
cli
incl
insb
orl
pushf
stc
dec
mov
ret
jae
icebp
pop
clc
jnp
push
call
jno
sbb
out
xor
loope
mov
cmc
mov
sub
bound
jno
jo
cs
movsl
shll
push
add
rolb
lahf
vfrczps
sahf
pop
hlt
fmuls
push
stos
bound
or
leave
pop
push
lock
adc
fstpt
add
hlt
inc
jne
fsubrl
clc
rorl
es
rcr
jmp
pop
loope
mov
add
pop
shl
dec
jae
repnz
push
lods
sbb
add
or
gs
add
lds
add
push
or
push
imul
mov
xorb
inc
mov
jmp
leave
mov
push
test
add
mov
jmp
sbb
insb
fildll
and
fs
add
jmp
add
push
imulb
mov
jle
js
cmp
xchg
jle
jle
add
pop
mov
mov
clc
add
push
cli
dec
mov
or
mov
std
mov
or
add
pop
dec
push
rcll
add
ljmp
pop
orl
scas
pop
std
push
sub
xor
mov
mov
jmp
adc
pop
std
push
and
sar
mov
jge
lock
adc
ljmp
pop
push
movl
je
je
shl
jg
xchg
dec
cmp
jl
add
push
push
aas
jnp
push
push
imulb
or
imul
jecxz
cmp
ret
aas
hlt
xchg
mov
inc
call
clc
in
je
cmc
push
hlt
jnp
aaa
hlt
jns
xor
xlat
les
ret
js
inc
jecxz
insb
bnd
adc
lret
je
or
add
in
pop
mov
imul
cmp
xchg
pop
shr
push
fisubrs
cmc
cmp
std
mov
push
rcll
mov
jnp,pt
out
dec
push
mov
mov
hlt
enter
pusha
push
hlt
sub
dec
or
fcoms
hlt
add
lahf
sti
add
add
mov
imul
mov
arpl
addr16
lcall
mov
popa
mov
pop
mov
sub
icebp
or
cmovle
xchg
or
div
push
xchg
scas
xchg
mov
mov
push
icebp
lds
ljmp
lret
sub
push
out
sbb
add
js
push
sahf
sti
mov
ss
push
cmp
pusha
clc
add
inc
clc
push
inc
les
mov
bound
push
sbb
push
xchg
notb
sarb
xorl
pop
loope
orl
or
jg
jecxz
les
add
inc
push
popf
fdivl
fsub
push
push
pop
std
lcall
pusha
outsb
fwait
shl
pop
lret
inc
rcll
ds
pushl
mov
ljmp
mov
push
call
aam
leave
cmp
jbe
inc
ret
insl
fwait
inc
mov
out
add
jge
fildl
add
jae
jmp
ljmp
ja
cmp
and
loope
ja
dec
lret
out
icebp
cli
into
add
stos
js
push
negb
out
hlt
icebp
cli
sarb
inc
sbb
into
pop
add
push
jmp
add
sub
inc
clc
xchg
outsb
xchg
mov
jnp
jmp
test
ret
pop
stos
jbe
add
lds
aad
xor
outsl
push
insb
loope
repz
jge
nop
xchg
or
ja
push
daa
mov
jo
in
jle
cmp
adc
loopne
lock
inc
jne
xor
xor
jbe
add
jno
mov
fs
add
pop
aam
mulb
div
add
xchg
rol
insl
cs
jae
insl
adc
xor
notl
push
mov
cmp
adc
outsb
test
addr16
or
and
cmpsl
and
adc
cs
jle
xchg
push
clc
mov
ja
div
pop
cmp
jmp
sub
jbe
adc
jb
xchg
add
hlt
sbb
cs
lret
add
push
outsb
pop
adc
clc
aam
push
rcll
aaa
clc
aaa
sbb
cli
add
lret
fwait
dec
or
pop
aad
orl
or
outsl
or
inc
std
mov
popa
loopne
repnz
test
xchg
lea
lea
xchg
cmc
mov
addr16
mov
ret
lock
or
add
mov
call
and
jmp
mov
add
ds
push
xchg
mov
jge
or
bound
movsb
dec
pop
lea
push
jmp
gs
in
mov
call
aam
sti
xchg
repnz
int3
pusha
ret
push
jnp
pop
or
pop
lea
incb
insl
mov
add
leave
in
rorb
sub
cmp
xchg
sbb
out
or
mov
mov
jmp
jp
out
mov
cmc
int
js
push
mov
mov
pop
pop
cwtl
cld
push
ljmp
imul
pop
and
push
adc
add
loop
mov
pop
add
and
das
jno
push
gs
add
xchg
mov
inc
mov
insl
ret
js
pop
sar
mov
call
mov
inc
jnp
cmp
adc
in
inc
push
sbb
sbbl
sbb
mov
divb
push
rcrb
push
clc
ds
pop
js
dec
jg,pt
decl
jle
js
insb
mov
stos
ds
imul
gs
xchg
mov
ds
shl
div
mov
push
les
or
inc
arpl
and
dec
jb
mov
outsb
test
jmp
imulb
adc
mov
clc
pop
mov
rcll
push
call
sahf
dec
je
xchg
dec
test
cs
std
jne
aad
fcoml
cmp
pushl
xor
lcall
repnz
mov
push
dec
call
push
addl
add
leave
pusha
push
clc
push
sbb
sub
lea
add
mov
out
in
pushl
shll
add
dec
pop
call
mov
test
shr
jnp
jmp
lock
notb
cli
xor
cmpsl
add
test
fcmovb
out
push
in
cli
dec
mov
mov
div
gs
jnp
add
pop
mov
les
push
jecxz
outsb
sti
add
out
inc
clc
sub
call
out
sti
mov
push
dec
add
in
mov
pop
ljmp
and
cmpsl
repnz
sub
les
iret
out
bound
cli
test
stc
sub
mov
push
unpcklps
sbbl
mov
xlat
inc
jnp
sahf
clc
xchg
mov
outsl
btr
jge
add
jnp
mov
push
inc
jmp
aaa
push
arpl
movl
cmp
aaa
xor
add
and
fisttpl
lahf
fildll
or
mov
dec
and
addl
leave
pop
shr
mov
mov
mov
out
inc
pop
add
lods
mov
ljmp
inc
ret
enter
sbb
mov
imul
sar
push
add
pop
jmp
mov
sub
push
ljmp
push
jge
lret
add
cmp
rorl
repz
inc
iret
mov
xchg
or
cltd
xchg
xlat
shr
outsb
and
out
or
add
js
push
pop
inc
dec
push
add
out
xchg
loop
sub
or
add
decl
adc
fcmovnb
cli
call
or
adc
decl
dec
inc
push
mov
outsl
int3
adc
cmp
or
add
ret
or
add
lea
xchg
decl
lea
add
adc
cmp
inc
or
add
lret
ljmp
xchg
push
push
jl
and
jp
add
mov
ja
dec
test
jae
stos
icebp
dec
dec
and
test
add
add
sbb
lcall
ja
pop
fidivrs
in
incl
repnz
call
adcl
lock
xchg
gs
jge
push
int
jl
js
push
xchg
pop
inc
dec
mov
jo
and
and
test
xchg
mov
xchg
arpl
roll
cwtl
fs
jo
inc
adc
xchg
test
orl
mov
jns
push
mov
mov
es
sbb
fwait
in
and
push
in
pop
inc
jo
pushf
sub
test
jmp
dec
sbb
loope
cmpsl
out
cmc
lds
sub
xchg
adcl
gs
mov
js
cmc
sbbb
pop
pop
mov
fsubrp
push
addl
dec
push
clc
into
repz
push
mov
aas
push
or
add
or
aaa
mov
test
push
loope
testb
push
push
loope
loop
and
ds
xchg
test
jmp
repnz
xlat
push
outsb
sbb
ja
fstpt
mov
inc
inc
les
mov
jmp
sub
add
mov
and
aam
loopne
pop
push
test
add
cmp
ljmp
cld
outsb
in
pop
or
pop
loope
out
add
cmp
xchg
pop
push
push
add
jns
pop
adc
inc
clc
jae
sti
push
addb
lahf
jl
add
loopne
lea
mov
pushl
push
orl
imul
incl
sar
dec
in
jnp
xor
dec
pop
mov
movsb
arpl
lea
push
cs
sub
mov
inc
decl
sub
fists
push
push
xor
xchg
xchg
mov
push
jno
cli
xor
xor
xchg
out
call
mov
cmp
add
xchg
or
repz
test
out
aas
aad
in
int3
mov
push
je
jmp
nop
dec
pop
loop
mov
cmpsb
xlat
xchg
outsl
sbb
xchg
pop
sub
cwtl
test
add
push
fcomps
loope
pusha
hlt
test
pop
fcoml
push
xchg
loope
scas
mov
loope
add
aam
std
cmpb
lret
xorl
pop
lock
sbbb
stos
andl
repnz
mov
cmpsb
sbb
jge
inc
loope
dec
fwait
or
addl
fstpt
insl
mov
ficoml
mov
inc
les
js
jp
in
add
mov
out
fs
pusha
xchg
test
pop
xor
call
pop
in
push
incb
mov
jbe
jge
int3
insb
adcl
mov
inc
ret
outsb
in
incl
hlt
xorl
and
inc
pop
sub
xchg
add
js
ret
push
mov
xchg
add
hlt
cmp
cmovne
cmp
xchg
psubq
ljmp
insl
adc
mov
push
in
xchg
js
pusha
cltd
mov
loope
sub
mov
leave
cmpsb
mov
arpl
cmc
jae
popa
push
mov
pop
lret
mov
in
subl
sti
mov
aam
push
popf
in
lea
dec
fsqrt
add
iret
ss
jp
add
addb
jp
add
fs
lods
mov
jns
jnp
xor
dec
pop
or
pop
fmull
outsl
xor
out
mov
cld
lret
dec
int3
sbb
xchg
mov
jnp
dec
clc
stos
lret
inc
xor
arpl
flds
imull
jnp
clc
imul
cmp
jp
add
mov
xor
lea
sub
add
add
or
divb
jnp
sub
jl
fimuls
adc
xlat
dec
sbb
mov
adc
in
mov
in
mov
inc
add
dec
jmp
in
test
imul
xchg
shll
dec
mov
les
mov
mov
xchg
cmp
mov
mov
add
int
mov
inc
mov
dec
adc
icebp
icebp
leave
xor
mov
push
mov
aam
adc
inc
stos
adc
add
push
pusha
test
aam
xchg
inc
jmp
xchg
mov
dec
push
lods
jnp
test
jae
outsb
fadds
arpl
cmpsb
inc
push
roll
clc
fsubp
inc
pop
ret
jno
inc
mov
test
ja
add
aaa
mov
push
cmp
mov
jge
les
add
adc
sti
adc
fwait
mov
jg
fidivrs
push
mov
xor
rorb
pusha
add
push
mov
jmp
fwait
sti
push
jp
in
jne
ljmp
lret
test
out
call
cmp
bound
inc
sbbb
add
jg
in
push
jae
push
lea
std
adc
push
add
dec
je
insl
sub
cmp
mov
jbe
xchg
data16
into
jg
xor
lock
sti
outsb
sub
aas
jnp
inc
or
and
cli
ds
inc
scas
pop
inc
sub
push
je
cwtl
sub
je
cmp
sbb
imul
loope
xor
out
fstl
cmp
add
idiv
cli
into
dec
fstl
pusha
inc
add
xor
or
sub
pop
dec
xor
xor
add
adc
xor
iret
jo
add
je
pop
into
icebp
xor
iret
pop
fimull
js
mov
inc
add
lahf
mov
insb
ret
js
cmpsl
iret
add
icebp
mov
jae
div
iret
icebp
ljmp
ja
xchg
sahf
mov
mov
cmp
sub
iret
icebp
sub
jmp
mov
add
shl
in
xchg
adc
loope
push
outsl
fucomp
pop
sub
clc
cmp
je
inc
test
add
mov
jno
cli
adcb
loope
lret
incb
js
ds
js
ds
test
push
xchg
push
push
cwtl
cmp
xor
clc
aam
xchg
inc
jmp
outsl
push
fimuls
sti
push
xchg
mov
inc
xchg
call
cmp
jb
jg
jo
addr16
push
inc
push
inc
ja
aas
add
paddb
iret
add
xchg
xchg
ja
and
xorl
add
dec
xchg
lahf
lea
push
jmp
inc
push
inc
loop
cmp
push
dec
je
pop
iret
push
test
bnd
lea
clc
pop
push
mov
mov
or
and
or
jns
jg
mov
ja
jge
cmp
repnz
sbb
into
add
dec
jmp
mov
jnp
insb
add
dec
jl
push
xor
mov
lahf
sub
data16
gs
iret
cli
je
into
repnz
xor
and
jnp
mov
push
adc
in
hlt
fidivrl
sti
in
loopne
jg
inc
add
int
sub
dec
add
sbb
shrl
sar
mov
das
add
inc
mov
or
ss
or
arpl
call
jl
adc
xlat
mov
jno
stc
cmp
mov
ds
rolb
arpl
lret
add
loope
cmp
mov
icebp
mov
les
and
mov
jp
jmp
pop
jae
loope
or
jmp
jnp
lahf
in
cmpsl
fildll
push
jmp
ds
clc
dec
jmp
add
movb
adc
cmc
cmp
cmpsb
mov
imul
lahf
mov
sub
dec
push
ds
loop
push
out
rclb
sub
mov
cmpl
test
push
pop
je
push
cmpsb
sbb
adc
jg
mov
and
adc
push
lods
or
adcb
shrl
adc
xchg
xlat
nop
mov
shrb
ja
add
mov
xlat
out
cmpsb
or
mov
cmp
push
jb
daa
inc
adc
inc
xchg
out
jge
xchg
xor
inc
or
popa
mov
inc
pop
std
xor
js
pop
sbb
add
jnp
idivl
cmp
jmp
xor
adcl
jne
jl
inc
loop
mov
add
add
add
mov
push
in
ja
mov
push
std
jne
add
std
push
xor
adc
adc
mov
jle
incl
add
mov
mov
out
inc
xor
clc
jle
push
dec
add
scas
addl
pop
in
nop
inc
std
mov
xlat
in
sar
lret
mov
les
lret
scas
mov
sbb
movsl
stc
decl
mov
add
mov
jne
xor
lea
test
call
out
push
mov
aam
js
jecxz
sti
inc
mov
addl
dec
scas
mov
shl
mov
lret
aaa
pop
inc
jle
mov
hlt
cmp
fcmovnbe
cmpl
jmp
jmp
insl
lret
jmp
dec
pop
adc
rclb
jmp
jnp
pop
loopne
jnp
add
mov
sub
cli
data16
or
faddl
test
jae
push
jnp
jmp
addb
pop
loop
push
xchg
daa
rolb
jne
iret
xor
aas
jnp
add
in
ds
jge
pop
ja
cmp
jmp
add
mov
jb
cmp
sti
pop
testl
sub
inc
and
stc
dec
inc
mov
xchg
dec
into
mov
mov
cmpl
jmp
adc
mov
insl
fildl
pop
push
xlat
xchg
add
fucomp
sbbb
mov
shll
push
add
push
loope
dec
push
loopne
outsl
pop
std
push
mov
xchg
ret
aaa
cli
call
fistps
shrb
jge
aas
clc
arpl
ljmp
jne
ljmp
int
cmp
inc
orl
popl
call
inc
dec
jns
ljmp
leave
add
xchg
add
push
std
pop
loop
push
lea
data16
rorb
les
cmpsl
ret
jae
xchg
mov
add
sbb
pop
paddsw
pop
lds
clc
jbe
push
xor
or
and
jne
push
add
cli
add
cmc
out
or
in
sbbl
xlat
icebp
xchg
mov
add
shll
xor
mov
pushf
lock
jnp
lret
jecxz
jne
movsl
ret
pop
push
cli
inc
aad
sbb
frndint
mov
adc
jae
mov
fwait
je
pop
je
out
jnp
jmp
fldt
or
iret
std
cmp
fsubrs
jae
sbb
ja
movsl
pop
ja
out
jp
push
sub
push
sub
push
fwait
cltd
addb
cltd
cltd
into
xchg
iret
inc
jnp
cmpsb
push
dec
dec
idivb
imul
inc
cmp
ret
rcl
adc
js
paddusb
mov
shrl
mov
sbb
pop
into
orl
add
xor
mov
inc
cmp
jmp
movsb
adc
ljmp
add
mov
aas
mov
rorb
xor
sbb
dec
daa
sub
cmp
insb
mov
jbe
loop
mov
pop
inc
call
int3
push
mov
and
test
int3
test
xchg
clc
mov
jmp
xor
ds
loope
xor
mov
cmpl
push
cmp
mov
inc
std
pop
adc
pop
add
xchg
je
mov
lret
mov
sti
cmp
dec
arpl
std
xor
lret
pop
ret
jno
pop
ret
mov
push
cmpl
call
cltd
inc
sub
sub
cmp
test
mov
jnp
mul
imul
cli
inc
out
add
cmc
jl
ja
roll
mov
mov
cli
cli
test
stc
fdivl
mov
cld
mov
cmc
and
inc
jg
cld
dec
and
icebp
cmpb
test
aaa
fldl
push
push
js
notb
add
in
and
and
ret
stc
stc
and
js
adc
je
adc
sbb
test
lret
push
aad
dec
add
sub
sbb
movsl
push
jae
iret
jae
incl
add
jmp
xchg
xchg
cltd
lret
and
sub
test
fiadds
aaa
aaa
lods
xchg
je
sub
sbb
mov
dec
out
scas
add
xor
fcompl
xchg
push
arpl
jae
add
dec
add
mov
insb
stc
std
hlt
push
cmp
or
ja
mov
ljmp
cmp
push
iret
idivb
add
dec
bound
cmp
pop
xor
ss
cmp
lods
cmpsb
mov
int
and
jle
fnstcw
je
lahf
xor
or
inc
in
xlat
ret
and
mov
sbb
bound
add
xor
jmp
sti
xor
jge
add
pinsrw
inc
and
push
mov
and
jns
je
das
std
ss
dec
add
dec
add
fisttps
decl
dec
mov
in
adc
out
fdivl
push
mov
das
stc
dec
cmpsb
leave
cmp
into
ljmp
mov
jmp
inc
add
cwtl
iret
mov
pop
mov
xchg
mov
push
divb
jnp
jbe
js
mov
dec
or
xchg
aaa
pushl
dec
push
testb
sub
mov
cmpsl
ret
jae
or
cld
add
jle
cld
push
inc
jmp
lods
xchg
lret
fs
pop
lock
xchg
sub
cmp
xor
sub
xor
push
jbe
jae
cmp
clc
fmulp
aaa
add
lods
cmp
imul
jno
ret
push
sti
ljmp
mov
or
sub
jnp
mov
add
cmp
cld
adc
in
jnp
sub
hlt
dec
xchg
out
xor
sbb
fstl
mov
xchg
mov
xor
hlt
mov
jnp
xchg
sbb
movsl
icebp
inc
sub
jb
ja
out
aaa
imul
pop
add
jnp
je
in
add
aaa
sbb
js
inc
icebp
mov
push
clc
into
cmp
xor
mov
jnp
jmp
xchg
icebp
ljmp
mov
add
mov
cmp
add
xchg
lock
jb
fisttpl
adc
pusha
push
imul
push
or
das
cmp
mov
test
test
mov
adc
or
jne
push
cmp
gs
jns
pusha
aaa
xchg
rcr
outsl
xor
jo
jne
sar
mov
dec
lea
dec
aas
js
inc
add
or
or
outsl
sti
add
test
and
mov
jl
cmp
or
sti
add
xor
mov
je
push
lret
repnz
addps
lret
add
ficoms
loopne
push
inc
std
sbbl
popf
jnp
cmpb
scas
repnz
inc
and
sbb
fs
jle
and
mov
cwtl
pop
cmp
outsl
cli
jmp
cmp
inc
add
sub
cmp
es
mov
jnp
ja
mov
rorl
jno
xor
push
mov
xchg
mov
cli
xor
dec
mov
cli
mov
add
js
subl
mov
push
adc
inc
je
call
jp
cmc
test
add
or
aaa
mov
adc
add
aad
mov
push
sbb
outsl
ror
inc
jnp
cmpsb
adc
dec
and
cmp
test
aas
rorb
ret
inc
shlb
fnsave
bound
testb
add
sub
sbb
cmp
cmp
inc
xchg
add
add
outsb
clc
cmp
sar
xchg
pop
scas
lret
aam
in
js
les
and
mov
xchg
mov
mov
cmpsl
ja
repnz
push
imul
stc
icebp
mov
xorb
jl
rol
fstpt
out
push
add
insl
cmc
fldl
pop
add
mov
or
hlt
add
pop
sub
add
jb
jg
inc
mov
push
clc
add
std
inc
or
shl
call
call
fadds
adc
roll
nop
addb
sub
mov
add
std
cmp
incb
cmp
je
call
lahf
add
fisttpll
incl
call
ret
add
std
dec
dec
mov
fadds
rolb
add
cld
jle
sbb
std
push
jnp
int3
out
and
jmp
sub
arpl
test
cltd
test
jl
jge
jp
add
divb
ret
fs
mov
xor
xor
lods
xor
push
gs
mov
ret
dec
int3
push
adc
jle
cmp
push
incl
add
cmp
cli
in
repnz
cmp
stc
test
cmc
cmpl
aas
add
imulb
jmp
mov
xchg
pushl
add
addb
sub
xchg
lahf
out
test
aaa
inc
jnp
daa
push
imul
jp
add
jg
test
xor
mov
xchg
out
inc
jnp
cmpsb
adc
inc
in
push
dec
out
mov
lret
jmp
mov
insl
pop
lea
popa
add
not
ljmp
out
add
adc
add
mov
mov
sbb
jl
inc
hlt
dec
sbb
dec
es
sbbb
aad
mov
inc
jmp
clc
dec
pop
dec
and
jl
je
xchg
bound
mov
fldpi
int
cltd
jmp
push
cmp
pop
popa
jb
jo
lods
jl
adc
or
test
inc
jmp
cli
cmp
pusha
jo
pop
pop
stos
dec
mov
inc
jmp
lea
push
fmull
push
adc
ja
orb
inc
xchg
mov
sti
aad
xchg
test
jb
push
push
cmp
jns
push
outsb
mov
outsb
ja
push
mov
into
jle
inc
ds
mov
inc
xor
push
or
adc
fisttps
adc
xor
mov
ret
inc
shll
push
mov
mov
dec
and
ja
xchg
adc
test
dec
adc
cmp
push
clc
or
xchg
and
clc
insl
push
rep
cmp
push
mov
add
xor
das
sub
jl
jne
or
mov
push
sti
sub
mov
sub
mov
or
jbe
out
lret
mov
push
lea
mov
inc
outsb
dec
js
pop
ret
aam
insb
movl
ret
jnp
jmp
inc
jnp
iret
mov
cmp
fs
jp
add
cmpsb
out
mov
andl
out
leave
adc
mov
push
stos
add
dec
jbe
aam
jmp
jne
xlat
xchg
push
jmp
pop
hlt
adc
add
dec
push
or
out
jp
cs
pop
dec
add
stos
push
out
cld
scas
imul
add
iret
idivb
and
add
cmpsb
mov
hlt
andb
push
imul
pushl
daa
jle
push
xor
jmp
add
lahf
or
xlat
pop
and
ss
jmp
sub
jmp
cmp
or
jmp
das
cmc
add
cld
bound
je
mov
jmp
pop
mov
lret
cmp
cmpsl
dec
outsl
add
rcrl
or
pop
or
mov
inc
push
xchg
sti
cmpb
insl
xor
xchg
push
pushl
or
mov
int
add
jns
jp
loope
test
or
ja
inc
xchg
mov
add
arpl
inc
add
or
adc
mov
dec
dec
movb
je
mov
inc
add
hlt
test
test
add
orl
add
push
outsl
pop
cmpsb
inc
fcoml
cmpl
cmp
inc
ss
adcb
add
or
mov
and
inc
lahf
sub
mov
std
jg
xor
sub
cld
je
mov
add
je
add
xor
or
cwtl
or
mov
or
hlt
add
mov
sbb
int3
aam
std
mov
xchg
call
sar
sub
stos
stos
je
fisttpll
cmp
or
jae
add
lea
pop
sub
lods
or
cmpsl
dec
push
mov
dec
dec
xchg
movsl
test
cwtl
fld
aaa
pop
into
add
inc
add
mov
mov
sub
xorl
cltd
mov
mov
cwtl
std
pop
push
outsl
stc
sub
jmp
sub
jmp
add
icebp
cltd
decb
les
xor
push
je
pop
jmp
sub
mov
sbb
jle
loope
out
dec
jmp
in
and
insl
mov
cltd
jle
add
push
out
stc
inc
and
js
mov
js
push
jb
xchg
scas
stos
pop
mov
insl
add
mov
push
fbstp
add
fs
scas
sbb
mov
dec
addr16
incl
push
lea
jb
push
mov
outsl
fwait
adc
or
add
mov
ljmp
pop
and
mov
ljmp
pop
push
mov
idiv
mov
dec
bound
shll
xchg
push
mov
call
jnp
ret
jae
or
notl
rcrl
add
out
les
scas
cli
div
xor
and
call
scas
xor
mov
jae
int3
add
shll
add
aaa
lods
and
imull
mov
mov
lods
adc
inc
inc
add
ja
add
pop
jnp
call
cli
divl
push
lock
ret
je
pusha
cmp
xor
shrb
stos
xor
push
pop
mov
lret
jmp
mov
cvtpi2ps
push
push
pop
adc
inc
sub
rorl
mov
push
es
mov
add
outsl
test
lods
cmpsl
cmp
mov
adc
jnp
ljmp
xor
cmpsl
mov
lock
fists
filds
push
jne
ja
add
dec
bound
sub
shlb
mov
jg
mov
jl
push
pusha
int3
sbb
xchg
push
clc
jmp
add
popf
jmp
shlb
mov
add
clc
jmp
sub
test
push
lret
dec
ret
xchg
or
hlt
and
inc
in
les
sbb
and
add
add
mov
enter
rcll
clc
call
daa
loope
iret
rcrl
and
or
and
mov
movb
scas
sar
shll
and
cmc
cmp
lcall
fidivs
test
jns
xchg
add
push
push
cmp
mov
cmp
xor
popf
addr16
push
or
cmp
mov
sbb
and
adc
iret
test
add
add
fisttps
xchg
cli
mov
jl
ret
jae
lret
outsb
insl
add
fwait
aas
and
scas
aas
and
loop
add
es
call
cmp
fisttps
and
cld
sub
add
inc
jno
setae
add
sti
sbb
outsb
jb
inc
jnp
cmp
dec
inc
sti
out
in
xchg
dec
in
insl
ljmp
and
adc
js
ljmp
sub
sti
lods
test
and
mov
add
imul
sub
inc
pop
pop
jnp
add
dec
xchg
jg
aaa
jbe
jmp
pop
push
subl
mov
popf
mov
adc
mov
add
call
jnp
push
call
add
iret
pop
test
jmp
cmpsb
inc
dec
cwtl
inc
xchg
sbb
or
lahf
sub
xchg
pop
pushf
xchg
dec
jns
std
push
add
mov
add
inc
adc
mov
popl
push
lock
testb
ret
mov
adc
aaa
sub
mov
popa
sti
pushf
je
add
movsl
adc
push
mov
add
cmp
add
insb
in
adc
out
aam
ret
pop
jae
sbb
jns
ret
sahf
add
adc
sar
mov
clc
cli
sbb
imul
xchg
in
inc
clc
xchg
loopne
outsb
loop
sbb
mov
filds
icebp
dec
xor
scas
sbb
aaa
dec
add
ljmp
xchg
out
roll
or
adc
pop
inc
push
xchg
mov
mov
dec
or
insb
ret
push
add
mov
sahf
mov
mov
or
push
into
adc
dec
add
cltd
mov
sbb
ds
mov
adc
xorb
into
push
jnp
cmp
and
mov
and
inc
jae
jns
pop
jb
jb
mov
dec
test
gs
mov
add
sti
push
add
inc
ret
ficoms
xchg
mov
decl
add
jnp
and
xchg
add
mov
jnp
movsl
je
mov
cmp
jae
stc
in
and
nop
cli
jl
add
aad
orb
add
mov
jno
pop
add
mov
ret
and
sub
and
testl
lahf
sbb
mov
pop
iret
inc
jnp
cmpsl
pop
in
jp
add
sti
pop
insl
sbb
clc
push
ljmp
scas
xchg
arpl
int3
jmp
mov
lahf
bound
xchg
push
push
push
hlt
jle
xchg
stos
sub
push
add
lcall
movsl
jnp
daa
xchg
nop
add
js
sbb
ss
sub
pop
push
inc
in
pushf
push
cs
jecxz
adc
inc
pop
insb
jmp
cmp
stc
inc
std
cmp
fs
adc
ss
outsb
push
mov
sti
sbb
push
ds
pop
jle
dec
outsl
mov
ret
sbb
push
xchg
mov
fnstcw
ret
fs
lret
data16
test
cmpsl
add
mov
push
push
xchg
jns
cmp
je
ljmp
shlb
rorb
push
jae
call
loope
mov
ret
mov
or
addb
push
push
je
push
dec
jne
jne
mov
add
and
loop
test
hlt
sub
jmp
mov
sbb
popl
jo
lret
and
mov
cld
inc
sub
lahf
sub
loop
in
add
pop
push
lods
cli
int3
dec
or
les
pop
mov
lock
daa
pop
ss
es
push
negl
push
xchg
xor
stos
cli
bound
add
bound
ljmp
sti
out
xchg
fldl
lods
jae
adc
jo
jge
xlat
pusha
bound
jnp
push
push
negb
add
jbe
test
push
jp
insl
inc
jnp
loope
lock
inc
scas
bound
add
mov
mov
sbb
push
add
xor
mov
jp
or
add
dec
adcb
add
lods
fildll
push
jo
add
push
test
fwait
jo
sub
dec
add
das
mov
dec
loop
leave
push
sti
fwait
add
jmp
int
mov
stos
and
jecxz
mov
rcr
sub
mov
jmp
fs
add
loop
clc
cmpsb
and
clc
xchg
mov
push
add
jg
dec
bound
push
bound
push
mov
rcll
repz
movsl
por
add
pop
icebp
mov
add
xchg
imul
jmp
notb
add
pusha
testb
and
xchg
int3
lea
and
adc
and
lea
cld
lea
pop
int3
or
adc
or
adc
mov
or
call
mov
mov
mov
aam
jmp
sub
imul
mov
pop
clc
jmp
test
inc
pop
pop
jmp
push
jmp
imul
xchg
cmpsb
lcall
sti
daa
je
and
and
adc
decb
insb
sahf
sub
jnp
sbb
addr16
decb
aaa
pop
or
add
fwait
dec
enter
mov
shr
mov
jnp
push
lea
out
lea
cli
dec
sti
stos
cmpsl
ret
or
jno
jnp
push
dec
adc
aas
jnp
adc
fwait
sub
mov
and
movsb
mov
adc
jnp
add
lds
ljmp
ljmp
mov
push
loopne
jnp
sub
vpsubsw
fistpl
push
loopne
sbb
les
push
aas
mov
jbe
add
dec
pop
add
scas
lea
xor
inc
jnp
icebp
dec
mov
add
mov
cmp
aas
xchg
mov
maxps
add
dec
jmp
cmpsl
fildl
fnstcw
adc
aas
add
loop
fwait
pop
sbbl
mov
clc
je
mov
clc
aam
jle
jmp
adc
inc
popf
sarl
clc
xor
orb
mov
cmp
cwtl
cli
sahf
insl
ret
push
sub
outsb
loope
into
xchg
jmp
dec
adc
bound
mov
adc
fists
adc
pop
ja
stc
mov
loop
adc
cmc
out
shlb
add
aas
je,pt
ljmp
aam
jge
adc
mov
ret
cmpsb
or
incl
adc
add
dec
leave
ret
push
mov
fisttps
add
mov
inc
xchg
je
push
ljmp
leave
mov
inc
or
and
push
xchg
cmpsb
jg
or
push
or
popa
or
sbb
sub
mov
bound
mov
lret
icebp
lods
in
cmp
hlt
cmp
gs
xchg
cld
aas
jnp
lret
aas
testl
imul
adc
out
xor
stc
add
into
mov
pushw
movsl
adc
xor
sti
mov
addb
in
xor
imul
mov
cld
dec
je
push
sub
popf
xor
mov
mov
xchg
inc
jnp
mov
out
add
push
xchg
pop
cmp
mov
sub
xor
stc
insb
mov
add
jae
repnz
mov
xchg
or
leave
icebp
push
jnp
jle
cld
push
insl
mov
inc
pop
mov
pusha
mov
loope
aaa
pop
gs
lds
lea
adc
pop
push
xchg
lds
add
add
popf
aas
pop
cmp
push
sarl
movsl
sbb
rcrb
outsl
sti
add
pop
idivl
mov
jge
xchg
pop
lods
fisttpl
idivl
sbb
mov
inc
jmp
gs
and
or
aad
sbb
sahf
adc
mov
incb
mov
aaa
mov
out
push
xchg
fstpt
fadds
push
insl
push
add
gs
fisubs
ja
sahf
psubq
mov
sarl
mov
daa
xor
or
addl
out
je
adc
cld
stos
push
inc
andl
into
add
or
sbb
dec
push
rorb
sti
jmp
lock
mov
xor
pushf
filds
or
pop
leave
cli
push
jge
jb
or
mov
js
cwtl
inc
xchg
jnp
add
mov
jle
jecxz
inc
outsl
out
xchg
call
or
cmp
xchg
cli
stos
cmpsb
dec
ret
cmp
ss
xor
mov
jnp
mov
test
ss
push
xor
jl
fiaddl
mov
xor
cmp
jnp,pt
xor
cmp
fs
mov
call
lds
jnp
dec
push
dec
jmp
add
sub
inc
jnp
stos
ret
dec
addr16
jmp
add
xor
inc
jnp
dec
ret
mov
dec
jmp
add
pop
iret
inc
jnp
ljmp
addr16
jmp
add
lret
jnp
lret
mov
outsl
dec
jmp
add
es
inc
jnp
sub
mov
mov
xor
sub
sbb
dec
enter
mov
js
sub
out
hlt
cmp
add
cltd
inc
jmp
ja
repz
mov
mov
push
mov
mov
cmc
mov
movb
jg
inc
jmp
js
aaa
cld
mov
movb
sub
mov
aad
mov
dec
inc
lahf
inc
jmp
ja
xor
cmp
add
add
inc
loop
daa
lds
dec
add
add
push
inc
xchg
imul
mov
mov
xor
push
inc
xchg
imul
mov
mov
repz
inc
bound
lds
mov
mov
ret
out
adc
imul
es
add
ret
add
adc
mov
mov
add
iret
adc
hlt
pusha
out
mov
filds
sbb
sarl
adc
adc
hlt
pusha
lgs
inc
add
rol
jnp,pt
mov
cmp
pusha
das
mov
filds
sbb
ret
adc
adc
xor
arpl
inc
add
rol
jnp,pt
mov
outsl
cmp
add
jb
add
mov
xor
loop
add
push
les
jnp
mov
dec
jmp
add
loopne
inc
jnp
stos
rorl
jmp
add
pop
testb
mov
mov
insb
dec
jmp
dec
mov
dec
jmp
lcall
cld
inc
jnp
pop
xchg
jae
mov
lods
add
shl
dec
jmp
inc
jnp
cmp
adcl
add
mov
mov
stos
add
dec
dec
enter
adc
insb
in
mov
cmpsb
ds
js
add
jae
or
cmp
mov
add
loope
les
xchg
lods
stos
mov
loope
mov
mov
mov
ss
ret
xor
push
cmpsl
call
sub
push
ds
jg
test
out
or
shrb
arpl
xchg
lea
or
sbb
cld
pop
adc
jne
mov
push
jge
jle
js
mov
and
mov
aaa
add
int
inc
add
jge
aad
mov
or
mov
and
enter
adc
adcl
push
mov
insb
int3
imul
inc
add
mov
ljmp
adc
xorl
pop
jnp
or
adc
add
add
fildl
xlat
lds
xchg
dec
mov
jnp
fwait
add
aad
jmp
xor
jg
ret
mov
jnp
lods
jnp
jmp
jae
popf
mov
lock
out
jne
add
pop
call
mov
ss
and
jnp,pt
lods
push
clc
sbb
je
xor
lock
mov
shr
iret
out
pop
sti
inc
ss
arpl
adc
xchg
filds
xlat
mov
call
add
add
xchg
add
out
add
or
xchg
mov
jo
add
jmp
lods
add
out
movsl
mov
fidivrl
mov
rorl
xchg
into
dec
jmp
mov
mov
icebp
sbb
testb
sub
mov
mov
cmpsb
dec
jmp
popl
inc
dec
jmp
xchg
xchg
sti
inc
jnp
fs
das
imul
dec
into
xor
pusha
lahf
add
js
mov
mov
js
mov
call
xchg
out
adc
mov
aad
jmp
cmp
ret
inc
addl
inc
jmp
dec
mov
sub
idiv
add
mov
add
out
xchg
add
test
or
inc
jmp
sub
add
mov
push
cmc
dec
mov
faddl
adc
xlat
inc
and
fst
mov
add
inc
and
aaa
clc
pop
dec
add
xchg
fbstp
cld
pop
std
test
push
xlat
inc
rorb
xor
sti
adc
pushf
repz
push
sbb
push
push
mov
xor
xchg
push
mov
inc
sbb
sbb
and
inc
bound
std
call
lret
jmp
sti
fnstsw
add
jbe
mov
jnp
and
aas
jnp
sub
cmpsb
xor
mov
test
adc
add
push
mov
cmp
and
adc
loope
add
push
nop
push
je
add
mov
sbb
push
incb
xlat
cmp
xchg
xor
sbb
lods
and
pop
lahf
js
cld
xor
rclb
jmp
mov
repnz
je
lods
neg
mov
xchg
add
xchg
mov
icebp
add
lods
add
popf
daa
or
push
dec
jmp
jl
out
inc
jnp
out
das
dec
jmp
out
outsb
dec
jmp
xor
adc
add
inc
fdivrs
xchg
lods
inc
jnp
enter
daa
xchg
sub
lret
cld
gs
daa
nop
cmpsl
dec
mov
jp
sahf
xchg
cmp
xorb
cmpl
enter
push
add
jge
aad
lods
fstpt
mov
test
stos
js
neg
push
mov
inc
lahf
loop
mov
insl
iret
xor
mull
adcl
test
lret
mov
aad
js
push
out
in
lahf
adc
ja
adc
out
mov
adc
inc
pop
mull
add
ds
mov
ret
or
cmp
ja
cmp
cli
add
outsl
or
mov
add
mov
push
inc
bound
lock
out
inc
mov
ja
push
mov
outsl
or
dec
push
rorb
divb
jp
or
adc
mov
add
sarl
sub
or
jp
in
mov
pushl
std
adc
dec
into
jae
and
add
adc
clc
xchg
lea
add
pop
jne
or
mov
leave
jno
xchg
lret
sub
jmp
cmp
icebp
add
pop
cli
inc
dec
jle
pop
add
jnp
add
mov
dec
xchg
mov
adc
repnz
add
mov
add
xchg
lds
iret
sbb
xor
cmp
jle
outsl
mov
mov
cli
outsb
and
aas
jnp
mov
jnp
cmpl
xchg
aam
jmp
push
jns
or
lea
addb
out
sti
cmc
int3
adc
xchg
insb
mov
cli
add
adc
add
or
scas
roll
int3
aam
xchg
cwtl
or
cs
out
dec
adc
lds
mov
jne
pushf
mov
shl
pop
ret
dec
mov
lods
adc
insb
adc
loop
pusha
xor
outsb
loope
and
jb
cmc
dec
stc
jb
insb
in
sti
dec
into
cmp
testl
xchg
push
ds
test
insl
gs
push
sar
hlt
or
bound
test
xchg
mov
addl
cmp
or
insb
ret
sti
push
add
add
mov
pop
push
insb
inc
repz
testb
jmp
jb
imull
mov
add
adcb
dec
in
mov
idiv
lret
int3
add
inc
jb
push
inc
fcmovbe
cmp
jl
jmp
jb
add
cmpsl
or
adc
dec
add
mov
cld
jne
mov
add
test
popa
test
add
inc
cld
lcall
xchg
sbb
adc
push
jmp
cld
jne
mov
add
adc
pop
outsl
cld
jnp
xor
mov
jns
or
loopne
mov
cmp
add
push
add
sub
mov
enter
outsl
xchg
and
or
push
add
cs
cmp
roll
adc
sub
das
jg
out
dec
push
cmp
out
jns
and
push
add
or
loopnew
shlb
ret
cwtl
popa
mov
sub
cmc
inc
jp
mov
add
fsubrs
mov
or
add
mov
add
inc
loop
aad
mov
nop
jmp
aad
mov
call
popf
jg
xlat
mov
sub
hlt
cmp
xor
jl
sahf
jge
call
push
jl
inc
inc
clc
fwait
xchg
dec
clc
xchg
sub
mov
adc
aaa
aam
lods
ret
add
ljmp
js
daa
inc
lret
clc
mov
push
add
cmp
je
mov
jle
and
or
jmp
push
mov
fldenv
rorb
data16
jb
lods
shrl
je
aad
sub
in
cmc
xor
xchg
pop
ret
mov
inc
inc
push
jb
or
ds
xchg
mov
lock
test
jge
imul
add
je
je
and
pop
pop
or
mov
loop
call
mov
add
jne
out
shll
adc
cmp
add
mov
andl
jne
jbe
or
mov
sub
jnp
xor
add
jmp
jb
jne
add
or
mov
cmp
or
movsl
addb
mov
add
clc
add
adcl
fisttps
xchg
lahf
ljmp
mov
gs
xchg
test
sti
inc
ss
xor
cs
jnp
sub
ret
sbbl
cli
push
and
loopne,pt
inc
jae
mov
inc
insb
or
jmp
ja
add
test
xor
jecxz
add
data16
cmp
xor
scas
in
mov
rolb
lock
js
popf
int
dec
mov
mov
fldt
push
mov
pop
je
fsubrl
mov
pop
sub
test
and
cmp
loopne
push
aam
les
push
xor
testb
jnp
mov
mov
push
jo
jmp
js
mov
xor
push
xchg
mov
popf
xchg
ja
rorl
test
jnp
sbb
stos
cmpsb
jg
arpl
insb
hlt
pop
push
leave
test
add
mov
mov
add
push
sub
xchg
and
js
cmp
call
sub
div
lods
fwait
inc
jmp
in
jl
push
jle
cmp
add
lock
push
aaa
dec
hlt
or
pusha
mov
or
jecxz
jle
ja
movsb
icebp
loopne
or
test
rolb
xchg
xchg
add
jl
and
rorl
test
incl
pop
sahf
push
push
call
arpl
orps
adc
roll
add
popf
mov
xor
sti
rolb
invd
mov
add
lods
outsl
add
divb
add
out
inc
mov
mov
push
aad
pop
or
fisttpl
add
mov
cmp
fstp
jecxz
adc
fiadds
jnp
jno
pop
xor
inc
sub
sub
dec
movsb
jge
inc
sbb
out
mov
cmp
out
orl
xchg
popa
add
popa
mov
lods
in
mov
fisttpll
imul
loope
add
les
mov
lock
inc
rcrb
add
sub
add
jnp
inc
jecxz
add
add
rolb
loope
sbb
out
dec
adc
test
add
fwait
outsb
fs
test
or
jnp
bound
xor
add
je
mov
js
sbb
mov
add
pop
ja
shr
cltd
jbe
pop
cltd
fwait
arpl
adcl
leave
clc
pop
inc
es
adc
imul
add
inc
pop
aam
out
sbb
and
sub
adcb
xchg
mov
add
addb
dec
add
std
fdivrl
jbe
inc
push
bound
test
mov
xor
ja
add
cmp
mov
mov
jmp
iret
icebp
mov
ja
add
add
add
inc
js
es
add
mov
dec
add
cmc
push
das
ss
call
push
fmull
test
int
inc
in
scas
stc
cmp
jle
adc
clc
dec
aad
addb
lock
push
aas
cmp
inc
and
inc
adc
dec
jae
loop
aad
add
xchg
jge
into
adcb
adc
inc
adc
add
xchg
push
ja
mov
std
sbbl
hlt
push
push
lds
push
add
xchg
adc
sub
pop
add
xchg
add
adcl
add
aad
ret
xchg
orb
jae
movsb
adc
add
cmpb
jns
sbb
xor
cmp
cmpsl
out
call
imul
addr16
mov
add
imul
mov
add
lret
mov
jnp
jae,pt
je
and
hlt
into
or
xor
mov
sbb
aad
inc
cmp
fsubrs
roll
jnp
push
adc
sti
inc
add
push
or
jno
jle
mov
jmp
ljmp
cs
imul
mov
adc
xchg
in
mov
add
mov
add
faddl
mov
dec
stc
xor
push
fwait
add
test
add
inc
shr
xchg
push
add
stc
xchg
push
add
fldl
adc
icebp
inc
js
add
cmc
add
or
mov
in
jg
clc
cmp
inc
mov
push
ret
cmc
arpl
inc
int
cmp
push
push
loope
outsl
add
lods
jg
cld
cmp
jle
and
lds
mov
outsl
add
push
cltd
add
sbb
cmpsl
repz
js
insb
movsl
or
fisttpll
push
push
jge
mov
decb
ret
jl
cmp
rorl
neg
hlt
sub
stc
xchg
and
test
dec
fcomip
iret
imul
ret
jmp
mov
mov
mov
and
jl
push
adc
add
add
dec
add
out
in
cmpl
stos
push
pop
inc
cld
lahf
mov
jmp
fwait
rcr
call
or
add
shrb
sub
lret
imull
push
testl
xlat
jnp
dec
mov
add
add
jnp
xchg
jnp
add
cwtl
mov
add
adc
divb
or
or
pop
cmp
cli
pushf
xchg
inc
add
cli
and
inc
cli
scas
cwtl
adc
cmpsl
nop
adc
not
cli
or
adc
cmp
add
test
jecxz
pop
mov
dec
dec
and
jg
jp
add
cmc
sub
cli
insb
insl
xor
jnp
jmp
push
add
jg
add
jecxz
jl
nopl
jnp
insb
iret
pop
jg
aam
orb
add
adc
mov
add
stos
std
cwtl
cmp
push
pop
mov
jnp
ror
out
or
cmpb
mov
pop
jg
cmp
sub
pusha
inc
mov
mov
mov
add
sbb
add
mov
outsl
xchg
adc
add
test
js
xchg
pop
jnp
in
jmp
mov
movaps
aas
add
mov
into
push
or
in
mov
add
scas
mov
movaps
jne
loop
jle
ja
add
orl
lock
cmp
data16
test
test
jg
add
sbb
jo
or
insb
aaa
xchg
jle
jg
add
push
pop
push
add
lock
rorb
adc
mov
stos
adc
lcall
jmp
mov
adc
or
pop
add
mov
add
outsb
or
mov
sbb
sar
mov
or
dec
nop
mov
shr
lock
xchg
push
outsb
stos
mov
ljmp
pusha
sub
sar
fsubp
adc
bnd
lahf
xchg
mov
repnz
xor
xchg
cmpsl
test
clc
and
pop
add
out
xchg
and
add
jae,pt
jle
mov
stos
xor
arpl
call
cli
call
jns
mov
ret
call
bnd
mov
out
adc
or
data16
inc
jnp
inc
or
negl
aad
add
addr16
imul
jmp
add
add
push
ja
add
es
jno
stos
pop
lds
dec
and
pop
stos
out
cmpsb
mulb
cmpsl
dec
jmp
adc
dec
int
out
xchg
scas
loopw
insb
insb
loop
adc
stc
rcll
icebp
js
xchg
int
cmp
push
inc
test
out
inc
dec
jmp
pop
lods
inc
cmp
jmp
cmp
stos
add
fnstenv
adc
jge
xchg
jo
addr16
in
stc
push
push
push
push
aad
push
dec
mov
fsubrl
jmp
js
mov
or
loope
aaa
add
cmp
js
jle
imul
cwtl
mov
notl
or
int
or
rclb
insl
flds
insl
loope
movsl
ja
cld
cmp
push
mov
add
lock
lds
adc
push
mov
mov
cmp
mov
jp
sub
je
pop
outsb
adc
adc
inc
xchg
ljmp
pop
outsb
adc
fildl
push
popf
cmpsl
rclb
mov
mov
scas
outsb
pop
fmul
testl
cmpsb
cmpsb
ljmp
adc
aaa
lods
inc
fildl
incl
jg
pop
pop
outsb
or
add
lcall
test
jne
into
cld
jne
out
je
push
adc
xor
sahf
mov
add
pop
icebp
jbe
push
jnp,pt
lds
jecxz
jnp
inc
jae
int
and
adc
lcall
sti
fisubrl
add
mov
adc
sahf
or
push
fisubrl
stos
mov
inc
adc
mov
gs
notl
js
je
cld
pop
push
jnp
ja
scas
mov
ret
mov
je
jnp
push
xchg
inc
jne
repz
cmp
test
into
ret
dec
jmp
add
cs
insl
ja
daa
rol
xchg
mov
insl
and
pop
sub
mov
jmp
adc
push
in
je
xchg
sarl
test
mov
adc
fxch
popa
pop
icebp
je
imul
push
inc
cs
jl
mov
out
and
dec
adc
cld
mov
cmpl
push
outsl
add
and
stc
push
push
jb
jbe
mov
repz
loopew
fisubrl
sbb
int
push
push
in
negl
dec
add
lds
ljmp
xchg
mov
xchg
jmp
ja
sub
xor
loopne
fucomp
dec
sbb
int
notl
leave
push
push
aaa
add
push
push
add
loop
decb
adc
mov
das
add
das
xchg
mov
ret
ss
cli
inc
movb
xor
call
test
adc
hlt
sarb
inc
dec
mov
xchg
and
popa
xchg
push
sbb
pushl
inc
jbe
add
mov
imulb
inc
fwait
call
andb
pushf
orl
jne
mov
adcb
insl
sbb
add
inc
mov
jmp
mov
movsb
sar
hlt
js
sbbl
call
divl
out
and
sub
call
divb
mov
into
out
mov
push
mov
lret
jp
jno
aaa
ret
lcall
sbb
jnp
jne
clc
shrb
bnd
push
jnp,pt
in
std
pusha
icebp
negl
mov
enter
test
insb
xor
lret
addl
aam
out
fstpl
mov
rcr
inc
jnp
mov
movl
dec
fcmove
sub
int
add
push
incb
mov
je
je
mov
add
lret
push
push
loope
sub
sbb
pop
push
and
xchg
shlb
stos
testl
bnd
lret
aad
and
pop
ds
lret
fdivrl
ficoml
mov
add
cmpsb
out
push
sahf
int3
ljmp
popl
jmp
daa
aad
fnstenv
dec
test
push
test
inc
xlat
test
dec
xchg
sbb
adc
shrb
arpl
xor
jb
push
sub
mov
push
pop
dec
push
add
mov
sub
xlat
cld
add
cmpsb
mov
pop
push
shr
lea
add
adc
add
lea
pop
fbld
and
jg
cli
jb
add
push
xorl
je
mov
add
dec
addb
mov
adc
and
call
sub
imul
add
ret
sti
cmpl
std
and
shl
and
lods
jmp
mov
inc
loop
cmpb
jno
loop
add
out
test
lods
mov
push
xor
loop
jmp
and
mov
sar
test
push
incl
xor
test
loop
data16
ret
sub
ret
es
add
add
mov
inc
jnp
or
cmp
mov
jmp
or
xchg
nop
xlat
enter
xchg
jle
sbbl
not
cmpsl
insl
push
cmp
je
ljmp
dec
jmp
lods
xor
cld
pop
push
loope
clc
nop
bound
xlat
jmp
dec
insl
add
pop
mov
push
icebp
xchg
stos
and
insb
add
idivb
aas
subl
ljmp
stc
out
daa
rcll
adcl
jg
loope,pt
push
ret
pop
jle
negl
pop
or
js
adc
xor
add
mov
fldl
cld
andb
jbe
mov
aam
jle
jmp
jl
ret
inc
ja
dec
shll
sub
mov
pushf
arpl
push
cwtl
stos
cmp
xchg
outsl
or
enter
mov
in
out
add
adc
mov
popa
cld
mov
push
idiv
add
ja
in
push
bound
and
xor
jne
push
ds
adcb
mov
jbe
movsl
jp
adc
push
pop
addl
mov
lret
add
or
je
push
dec
add
nop
fistpll
mov
insb
addb
loope
add
insl
adc
aas
mov
push
das
pusha
jle
out
incb
mov
mov
repnz
out
xchg
push
push
daa
lds
xchg
add
lods
mov
shlb
push
lock
shrl
push
xchg
jg
loop
data16
fadds
xchg
loop
add
iret
insb
cli
outsb
and
inc
jnp
imul
cld
orl
add
add
add
jnp
shl
fisttpl
insl
cli
add
lock
lea
aam
adc
mov
lock
daa
je
add
cld
sub
push
jo
pop
loope
xchg
ret
or
je
into
sub
add
jmp
sbb
add
pop
lret
cmp
verw
lret
in
push
hlt
dec
pop
sub
adc
sti
ret
in
enter
shrb
andb
jl,pn
adc
push
push
or
movsb
xchg
or
aam
jae
aad
mov
lds
out
xor
aas
stos
aad
in
add
insb
clc
into
in
adc
decl
jmp
xchg
inc
jmp
insl
stc
push
or
shr
or
adc
div
test
shlb
mov
sub
mov
lahf
shlb
xor
out
repnz
add
mov
pop
cld
mov
dec
mov
push
push
jge
jb
rorb
mov
mov
in
push
mov
push
xor
int
mov
or
je
scas
add
push
lea
or
xchg
adc
leave
pop
jle
xchg
je
lea
inc
push
mov
mov
mov
imul
push
mov
sti
cmp
jnp
add
jnp
clc
push
rcrl
cli
fdiv
pusha
je
cltd
adc
add
jge
dec
gs
jnp
jge
and
sar
or
pop
loope
pop
test
cmpl
cs
cli
xchg
imul
jnp
push
mov
cltd
cli
inc
pop
imul
rcll
les
jae
inc
jle
jecxz
ltr
add
add
pop
jl
inc
adc
das
lahf
cmp
sub
std
ficomps
int
xchg
xchg
adc
mov
fldcw
icebp
lretw
lock
xchg
cmpsb
or
ja
sub
shlb
mov
lret
jmp
cltd
jecxz
fwait
popa
iret
je
dec
xor
aam
into
push
clc
inc
pop
icebp
add
xchg
add
test
pop
shll
gs
add
xor
cmp
les
mov
pop
ja
fstpt
push
sub
bound
cmp
in
imul
js
notl
push
push
incb
dec
cli
jae
cmp
out
aaa
or
out
sbb
mov
pop
ret
xor
pop
adcb
pop
adc
cmc
lods
inc
idivb
xchg
push
cli
ss
push
or
cmc
aas
js
and
adc
push
int
dec
xchg
push
decl
inc
fucomp
call
loope
pop
pop
sbb
sub
or
push
js,pn
leave
notl
int
lea
fbld
iret
pop
inc
push
data16
or
insb
push
ss
leave
imul
js
ds
filds
and
mov
repz
test
inc
mov
imul
inc
fisubrl
cmpl
ljmp
sbb
jnp
xchg
stos
jae
inc
ja
add
fwait
scas
ljmp
mov
cmp
dec
dec
imul
add
jnp
leave
imull
addr16
cli
sub
or
int
je,pt
jne
or
or
add
pop
aas
pop
sub
frstor
pop
cmp
cmp
mov
aaa
adc
out
fs
leave
je
imul
add
mov
pop
add
cmp
imul
bound
pop
mov
add
pop
push
ret
cld
jecxz
mov
lret
dec
cwtl
sub
jp
inc
adc
int3
inc
mov
ss
sti
add
mov
mov
loopne
jnp
pop
or
call
add
sub
out
adc
insb
pop
outsb
aas
out
insb
mov
in
dec
inc
mov
add
add
js
jge
and
test
notl
lcall
aaa
inc
leave
xchg
inc
or
jmp
and
mull
psllw
out
cmp
mov
mov
push
jmp
mov
dec
push
int3
xchg
pusha
pusha
cltd
sahf
ljmp
lcall
out
mov
test
mov
push
adc
mov
jne
adcb
lea
add
push
push
and
testl
std
sub
pop
xchg
inc
jmp
push
les
jnp
jne
sbb
xor
aam
xchg
lcall
hlt
add
mov
lea
addb
daa
dec
movsb
int
mov
mov
popa
mov
sarl
lea
sar
clc
call
sbb
dec
aas
push
jnp
push
aam
repnz
sub
cmp
sti
shrl
aam
jmp
push
sub
mov
mov
jns
pop
mov
mov
push
jp
add
sbb
iret
add
cmc
xor
shrb
imul
mov
leave
or
cmpsl
lods
test
pop
cli
adc
imul
aaa
cmpsb
stc
jl
mov
cmp
cmp
mov
pop
stc
mov
jno
cs
std
dec
loope
inc
cmp
pop
cmp
ret
add
arpl
and
in
imul
pop
stos
mov
movsl
add
jp
test
inc
iret
ljmp
inc
xchg
mov
cmp
jge
in
lret
xlat
sbb
shrl
adc
inc
aad
mov
enter
xchg
add
gs
mov
aaa
push
add
jbe
pop
scas
ljmp
pop
divl
xchg
mov
dec
popf
sarl
andw
jo
adc
ljmp
mov
add
ret
std
xor
add
xchg
insb
in
arpl
outsb
adc
add
insb
sbb
push
ljmp
xchg
mov
push
cmp
mov
jo
mov
add
pop
addr16
or
add
mov
idiv
cld
xchg
pusha
add
lods
push
addr16
pop
sub
pushf
add
pop
fimull
je
xor
mov
data16
popf
lahf
incl
mov
dec
aaa
movsl
cmc
data16
add
sub
cld
push
push
push
fstpl
xor
outsb
sbb
cld
jne
into
data16
adc
xchg
inc
push
cmp
jmp
fidivrs
push
sbb
jmp
dec
sub
add
scas
jmp
inc
mov
xchg
inc
lcall
loopne
dec
pop
rcl
les
insl
cli
mov
mov
mov
subl
or
mov
insb
mov
lds
bound
cmpsb
adc
push
push
bound
call
push
clc
insl
and
repnz
cli
data16
icebp
aas
jnp
inc
or
mov
mov
insb
mov
or
mov
jl
xchg
pop
add
outsb
jge
loop
out
bound
mov
inc
fnstenv
scas
xchg
test
xor
push
pop
sbb
jmp
repz
fs
mov
add
mov
cwtl
mov
add
mov
mov
in
push
ret
fs
movsl
les
dec
mov
cmp
mov
enter
test
testl
bound
psubb
js
dec
xchg
add
imul
loopne
mov
insb
leave
ds
fdiv
not
outsb
lret
mov
jmp
into
shlb
jb,pt
leave
ds
lret
push
ret
test
daa
stos
int3
push
mov
pushf
mov
out
mov
and
xor
mov
add
jns
jae
jns
jae
add
ds
mov
mov
xor
icebp
mov
jns
jg
hlt
lahf
out
nop
ud1
mov
mov
mov
mov
xor
xchg
imul
les
and
push
dec
popa
and
mov
or
sar
fistps
mov
cld
mov
jle
pushw
jns
or
aaa
add
xchg
pusha
adc
pop
sar
mov
pop
les
xor
or
dec
enter
cmpsl
dec
mov
jle
jg
enter
repz
les
cs
push
sbb
xchg
lods
cli
jl
rclb
jg
imull
cmp
testb
out
cli
dec
cs
psrlw
test
dec
cli
rcrl
clc
call
xchg
inc
pop
mov
pop
clc
out
gs
test
dec
fstl
test
push
stc
in
pusha
add
jmp
mov
push
or
jb
push
mov
sub
shrl
dec
adc
mov
jl
mov
or
add
jmp
push
mov
push
out
xchg
lock
popf
test
push
add
nopl
pop
stc
iret
push
outsb
shrb
test
ss
ror
jbe
jmp
xchg
jnp
nop
lock
sub
ret
ljmp
pop
add
inc
lds
cmp
sub
jb
pop
push
mov
rol
push
shll
add
js
clc
mov
stos
jg
jo
xchg
jb
ret
mov
mov
mov
push
cmp
push
bound
mov
das
jnp
mov
ret
incb
jnp
jmp
fs
inc
jmp
dec
outsl
dec
je
xchg
inc
mov
cmp
nop
inc
add
ds
out
aas
or
add
jnp
idivl
mov
add
rol
lret
cld
xchg
sti
adc
mov
pop
leave
push
mov
push
sub
push
pop
inc
jae
cli
mov
dec
jne
adc
mov
pop
cmp
cld
adc
xchg
dec
dec
mov
or
adc
add
lock
xchg
scas
icebp
add
mov
adc
dec
xchg
in
add
add
xchg
loope
cli
xchg
dec
arpl
rorb
jp
add
les
mov
xor
daa
mov
ret
js
mov
push
add
les
pop
adc
data16
add
jp
add
jnp
push
je
aas
imul
or
jnp
add
roll
cltd
xor
mov
xchg
dec
mov
sbb
jg,pn
or
mov
push
pop
mov
shrb
xor
jnp
pop
stc
cwtl
cwtl
test
add
mov
mov
mov
das
lods
ret
pushf
and
adcb
jp
jmp
push
xorl
or
push
call
push
addr16
dec
mov
loope
push
lret
popf
mov
fmull
inc
jmp
inc
cmp
xor
leave
popa
pop
mov
jg
in
cmp
pop
paddb
hlt
iret
nop
scas
mov
sub
movsb
popl
cmc
xor
call
add
dec
dec
bound
xor
sub
mov
repz
pop
cmpb
xchg
dec
xchg
xor
aas
std
dec
cld
cli
insl
or
or
mov
stos
lahf
dec
add
testl
inc
and
inc
and
mov
je
movsl
jle
data16
mov
test
push
mov
jmp
sub
ds
add
hlt
push
push
sub
jb
push
cmp
loop
pop
adc
and
nop
add
ret
and
cld
adc
fstps
decb
push
out
add
ljmp
jecxz
xor
sub
cmp
movsb
add
das
mov
push
lcall
repnz
test
mov
repz
cld
mov
mov
sbbl
in
push
add
sub
int
js
lahf
mov
jnp
mov
aas
jnp
inc
je
sbb
outsl
ret
lcall
add
jnp
push
adc
mov
jmp
loop
test
sbb
xchg
cmp
ja
mov
xchg
mov
cmc
aas
and
inc
ret
sbbl
pop
push
out
sub
add
fldenv
mov
mov
xor
xchg
lock
ret
loope
sarb
dec
int
add
push
mov
or
mov
test
adc
mov
cmpsl
adc
outsl
fldcw
pop
fwait
test
jmp
andb
movsb
push
lahf
repz
popa
mov
outsb
ret
jns
push
xor
and
inc
jmp
or
dec
push
int3
pop
negl
mov
icebp
mov
xor
int
pop
sub
test
pop
and
pop
jb
addr16
js
push
fstl
push
jb
outsl
mov
add
sub
ret
sub
mov
jnp,pn
out
dec
dec
or
xchg
add
insb
jb
xchg
mov
pop
mov
cli
mov
std
jmp
das
ficoms
mov
iret
lea
shrb
add
push
popa
or
sbbb
fiadds
push
dec
enter
cmp
lahf
dec
loopne
push
mov
xor
call
lcall
cmp
mov
xor
stc
jmp
push
xor
int3
testl
add
jmp
or
outsb
in
sub
shlb
dec
add
inc
enter
mov
aaa
xor
jg
jnp
add
jnp
mov
sub
movsb
inc
xor
ja
ret
arpl
jnp,pt
sub
call
movsb
mov
cli
and
movsb
inc
xor
out
ret
jl
jnp,pt
sub
dec
xchg
adc
cmp
sti
int
jmp
cmp
fsts
es
sub
rolb
jl
mov
push
dec
jmp
mov
test
mov
dec
jmp
sarb
ljmp
push
mov
js
sbb
inc
or
add
pop
mov
add
loopne
outsl
imul
xor
lahf
in
and
popf
mov
stos
in
xor
mov
sbb
pop
das
daa
adc
jmp
aaa
inc
lods
mov
inc
mov
jmp
scas
ljmp
inc
jmp
rclb
mov
jns
in
dec
inc
jmp
je
jno
or
fsubrs
jg
not
leave
divl
ja
ret
sbb
mov
ds
mov
roll
pop
push
mov
ss
roll
scas
mov
push
or
mov
mov
ret
mov
mov
cmc
call
fisubl
push
call
inc
cld
test
push
sub
add
mov
subl
test
mov
add
xor
std
dec
inc
inc
push
inc
push
call
aas
idiv
add
fistpll
inc
cld
test
call
or
loop
sub
push
popl
mov
inc
fimull
addl
aaa
aad
jnp
add
cmc
push
jnp
es
lret
lret
jmp
testb
mov
fwait
aas
cli
insb
hlt
push
ror
dec
mov
loope
inc
mov
in
test
dec
adc
test
xlat
dec
cli
lret
je
cmovbe
dec
test
js
cli
dec
js
jnp,pt
js
push
jmp
mov
mov
ja
jge
inc
mov
out
lea
dec
cmp
aaa
les
daa
les
or
push
mov
mov
mov
cmp
lahf
push
mov
cwtl
jl
imul
push
sub
xor
aam
and
lret
cmp
and
sub
leave
add
out
pop
adc
mov
sti
mov
cld
mov
mov
dec
jmp
inc
leave
ss
jecxz
js
and
ja
or
sbb
bnd
das
das
cwtl
inc
mov
push
mov
dec
aaa
xor
mov
js
insb
std
enter
test
lret
inc
orb
pop
ret
xchg
rcrl
jge
mov
idivl
lahf
xchg
fistpll
lock
dec
xorl
add
ret
mov
jo
mov
jmp
mov
mov
add
sti
mov
jg
jge
sub
pushl
push
cwtl
mov
testl
enter
mov
je
pushl
inc
add
mov
lret
testl
pop
inc
inc
decl
inc
xchg
repnz
adc
fisttps
push
leave
out
sti
mov
push
incl
das
scas
or
xor
clc
xchg
aas
cld
je
adc
je
pushf
ret
popf
leave
mov
ds
lea
ss
in
push
pop
fildl
ds
cld
aas
cli
int3
or
pop
les
add
jnp
fildll
les
xchg
insl
sub
in
sti
outsb
sbb
aas
jnp
inc
jae
cmp
outsl
cmp
adc
mov
sahf
dec
mov
xchg
cmp
add
sti
inc
push
add
and
and
je
add
xchg
adc
add
and
sub
out
test
add
test
test
sub
dec
mov
pop
inc
inc
xchg
add
roll
jnp
jmp
repnz
or
aaa
faddl
fcmovb
test
adc
cmp
test
cmp
and
mov
lods
add
test
in
dec
jmp
add
inc
pop
xor
lcall
inc
jge
imul
out
out
mov
xchg
inc
jmp
nop
into
sti
xchg
cmp
ret
cmc
divb
cld
fnstsw
pop
inc
mov
fwait
inc
jmp
mov
clc
mov
test
jmp
movsb
mov
cs
mulb
mov
inc
notl
mov
mov
jle
push
mov
aam
fwait
inc
jmp
ja
sti
pop
dec
add
add
sub
loopne
add
lods
mov
dec
pushf
xor
cmp
leave
insb
outsb
das
aas
sub
mov
push
test
add
test
addb
repnz
cs
cli
arpl
add
das
add
pop
testl
call
dec
or
sahf
dec
cld
incl
add
jg
cld
incl
jns
mov
or
xchg
loop
pop
pop
test
addr16
clc
shlb
andb
or
jnp
mov
cmpb
lea
lods
out
jp
cli
lock
add
movsl
std
cmp
cld
jge
add
lahf
or
adc
lcall
xor
jnp
xchg
mov
add
out
mov
aaa
nop
push
push
loope
stos
push
dec
cmc
add
mov
push
inc
jnp
test
sbb
mov
jnp
jp
cmp
mov
int
loopne
ja
sub
mov
fs
in
cmpsb
push
movb
jmp
call
jnp
nop
mov
push
pop
adc
shufps
jmp
popa
jge
movb
xor
scas
fsubrs
cmpsb
inc
orb
stos
sub
push
shll
icebp
sub
test
jno
mov
inc
addr16
inc
push
add
negb
push
out
xchg
sub
ret
pop
andb
js
outsb
mull
cmpsb
or
cli
mov
mov
dec
jb
cmp
mov
sub
dec
xchg
xchg
scas
cmc
jle
rorl
jge
ret
test
jmp
or
mov
add
roll
or
fs
movsl
add
ret
stc
push
loopne
xchg
push
add
mov
inc
mov
cmp
pusha
add
adc
out
lea
push
push
dec
push
clc
std
pop
push
cmp
jns
fisubs
shr
lea
push
outsb
add
jmp
inc
mov
mov
jne
rcr
cmp
jecxz
std
fildll
xor
or
clc
sub
gs
jnp
add
pop
dec
sub
push
test
scas
test
je
call
lock
push
inc
repz
add
rol
std
pop
mov
xlat
nop
hlt
sub
imul
add
and
aaa
mov
arpl
add
lods
cmpsl
and
cmp
je
mov
mov
shlb
xor
inc
jnp
iret
mov
mov
add
fdivrl
setp
push
mov
pop
mov
cmpsb
lock
or
xor
sub
lret
les
pop
mov
cmpsb
shrb
xor
add
pop
xchg
movsb
test
dec
cmp
mov
push
jae
movsl
jmp
cmpb
sub
jmp
cmp
adc
shl
dec
gs
mov
add
adc
sub
into
aas
cmp
dec
xchg
mov
arpl
jno
movsb
imul
mov
pop
ds
dec
das
add
mov
test
xor
xorl
jle
ljmp
cmp
pop
shlb
aad
mov
and
mov
pushf
divl
mov
notl
sbb
and
lret
testl
add
pushaw
mov
fdivl
dec
jne
idivl
cmp
cld
push
test
test
rcr
mov
adc
pop
and
cmc
mov
jmp
call
jge
imul
mov
add
fidivrl
enter
cmp
xchg
subl
mov
les
adc
std
mov
mov
add
ret
xchg
add
mov
add
xchg
fs
sarb
inc
add
xchg
cli
in
xchg
or
inc
cmp
jnp
aaa
or
insl
call
das
imul
je
insb
sti
inc
push
add
jmp
mov
add
cld
jae
jnp
stos
pop
aad
add
cmp
push
sbb
lret
sub
insl
cld
sbb
add
jns
add
mul
cmp
cld
adc
push
cmp
sti
in
icebp
es
push
call
or
lea
xchg
std
add
mov
mov
xchg
lahf
xor
aaa
jp
jmp
jl
mov
add
push
lods
add
test
cmp
cltd
inc
mov
sbbb
adc
mov
sub
lock
sub
test
jbe
pop
lret
lahf
cld
adc
dec
data16
sbb
stc
js
mov
outsb
jle
mov
test
fsubl
adc
sbb
nop
mov
adc
cmp
cwtl
out
test
add
jb
or
ljmp
push
sbb
lds
jbe
push
jne
cmp
or
mov
clc
out
cmc
es
pop
cli
adc
xor
cmc
pop
ljmp
jmp
mov
push
mov
inc
pop
mov
lock
aad
xchg
jmp
fldt
xor
loopne
outsb
lock
testl
mov
pop
idiv
xchg
daa
pop
mov
nopl
call
mov
dec
sub
add
bound
jbe
xor
add
push
fucomip
inc
push
cld
mov
cmc
xor
mov
cli
jbe
cld
testb
flds
lods
jae
xchg
and
xor
pop
cld
neg
stos
flds
mov
add
out
or
loop
dec
push
jnp
es
and
xor
jle
dec
jnp,pt
mov
adc
xor
add
cmpsl
or
jns
push
ja
fildl
add
std
test
repnz
add
mov
aam
jne
ss
or
jp
fildl
add
arpl
mov
das
cli
add
mov
jae
mov
negb
jecxz
scas
or
jnp
xchg
push
sub
cwtl
arpl
shrl
cld
fwait
aam
dec
xchg
xchg
cwtl
push
popf
js
xchg
out
xor
mov
in
adc
mov
adc
or
dec
cmp
js
adc
mov
call
sbb
js
mov
add
jae
les
aas
xor
sahf
clc
sub
or
xor
inc
pop
inc
mov
dec
jmp
add
imul
xor
lret
insl
mov
mov
push
add
xchg
push
bound
jp
jmp
mov
sbb
outsb
fimuls
icebp
dec
ja
sti
mov
inc
mull
cmp
addl
add
cmpsl
or
popf
push
mov
lcall
jp
ret
aas
ret
add
mov
outsb
pmaddwd
jmp
js
cmp
ljmp
cmp
mov
decl
or
xor
inc
fbld
loop
add
xchg
cmp
dec
push
loopne
or
xor
cmc
mov
adc
data16
rorb
cli
incl
lods
or
cwtl
add
add
mov
add
rorb
and
cld
out
dec
call
xchg
inc
outsb
or
mov
mov
mov
mull
leave
jle
xchg
cltd
add
dec
jl
cli
cmpsb
outsb
push
jnp,pt
scas
and
mov
adc
or
cmpl
pop
sti
add
into
or
aas
mov
call
lock
push
xchg
mov
out
test
inc
xchg
mov
inc
lahf
mov
xor
jg
cmpsl
and
cmpsl
and
jnp
mov
jp
add
ss
cld
and
inc
or
aaa
std
jnp
push
add
dec
std
cmpsl
mov
sbb
jmp
roll
outsl
dec
aam
mov
add
dec
jmp
ret
int3
add
movsb
mov
xchg
ret
lods
add
jmp
add
nop
mov
mov
mov
jle
jmp
xor
lods
or
mov
push
popf
mov
jle
outsb
sub
sbb
int
xor
lret
pop
xlat
lds
sub
jmp
imulb
subl
js
outsb
pop
in
test
push
call
fbstp
test
insl
stos
adc
ja
inc
mov
pop
mov
fldcw
mov
lods
jle
xchg
lock
mov
jmp
js
add
jge
hlt
cmp
jmp
pop
sub
inc
add
out
add
dec
insb
jmp
pop
jnp
add
sbb
test
jg
adc
mov
shl
add
push
imul
and
sti
shrl
and
roll
add
or
or
push
pop
test
inc
pusha
cld
ljmp
ret
and
pop
dec
or
push
mov
add
add
mov
pusha
inc
fistpll
pop
cld
test
cs
adc
adc
loope
add
je
iret
jnp
daa
xchg
mov
std
je
mov
inc
jnp,pt
mov
xchg
mov
popa
test
enter
pop
and
mov
filds
js
add
popf
into
xor
rol
sbb
cmpl
add
insb
sbb
cli
or
fwait
popa
mov
sti
xor
out
sub
add
lock
xor
repz
lahf
mov
add
decb
fmull
and
jne
mov
add
mov
sub
mov
outsl
call
jle
cmp
aam
push
sbb
sahf
mov
pop
enter
rcll
adc
mov
pop
cli
ret
mov
push
call
mov
out
and
aad
loop
xchg
cmp
cmp
cmpsb
out
cmp
add
cmp
out
js
add
jg
add
add
push
cmpsb
xchg
outsb
int
xchg
iret
mov
pop
mov
divl
xchg
dec
mov
imull
addl
pop
lods
push
add
ret
imul
lods
inc
je
xchg
mov
ret
or
mov
cmp
mov
xor
nop
mov
ret
idiv
mov
jmp
clc
xchg
imull
mov
test
test
fistl
mov
test
add
or
adc
test
pop
cmp
out
mov
jle
push
lret
dec
mov
cmp
jno
je
or
or
in
dec
cmpsl
stos
js
loopne
pop
andl
cmpl
pop
andb
mov
negl
mov
inc
shlb
orb
filds
and
leave
jl
mov
jge
add
ret
mov
cmp
ljmp
push
pop
jnp
xor
fwait
fs
jae
mov
mov
cli
inc
jns
xchg
arpl
add
cmp
rclb
sarl
mov
sbb
movsl
sub
and
dec
jae
mov
std
push
mov
or
add
mov
mov
imul
sbbb
aam
adc
test
test
mov
jg
mov
add
fsubr
sub
push
cli
nop
xchg
xor
shrl
out
add
ljmp
subb
lret
in
rcll
mov
js
mov
rcrl
xor
gs
in
xchg
jmp
ja
fwait
shll
xchg
mov
or
pop
mov
xchg
jmp
sti
sti
adc
mov
ds
out
dec
jne
xchg
pop
add
push
ret
cmc
lea
push
sti
cmp
test
xchg
mov
fs
xchg
cmc
add
pop
cld
adc
or
adc
in
xchg
negl
arpl
jl
inc
ljmp
xchg
ljmp
mov
jmp
xchg
xchg
mov
mov
push
mov
ret
cmp
lahf
arpl
call
fs
testl
dec
loop
mov
outsb
adc
add
cld
mov
xlat
adc
std
mov
jg
adc
outsb
cli
push
dec
pop
pop
jmp
ret
sarl
add
lea
imul
outsb
aaa
cmpsl
and
incb
cld
cmp
ret
repz
rcll
mov
call
roll
out
rorl
incl
adc
imul
test
add
push
repz
add
aaa
es
cmpsl
or
loope
push
arpl
pop
mov
cmp
push
push
jne
cmp
enter
push
lock
bound
mov
add
enter
and
adc
xchg
fcompl
jnp
adc
popa
mov
cmp
sarl
cli
aam
inc
jns
sub
and
jnp
cmp
mov
xchg
es
stos
mov
pop
test
adc
jmp
add
add
lret
scas
jp
or
sti
lahf
jmp
sarb
test
push
sub
add
lret
pop
popl
jg
jle
xchg
jmp
cmp
jecxz
and
icebp
add
mov
mov
add
incl
add
test
ds
cmp
icebp
dec
imull
sbb
jmp
push
je
push
jo
push
cmp
into
insl
add
pushf
outsb
in
xchg
pop
ljmp
cmp
inc
sahf
or
in
or
mov
or
orl
mov
aas
orb
cmp
call
jae
ljmp
mov
jmp
fimull
jmp
into
and
dec
add
addr16
xor
js
scas
mov
mov
decl
push
rorb
out
add
bound
jnp
bound
pop
and
jno
stos
mov
or
test
leave
gs
push
adc
push
clc
lock
call
cmpsb
dec
or
orb
call
inc
or
xor
lcall
lds
scas
gs
jno
das
push
frstor
cmpl
add
xchg
enter
sbb
test
mov
mov
sub
cli
lds
lret
dec
jo
pop
cmp
add
mull
jnp
mov
mov
sbb
sub
test
mov
mov
add
dec
and
movsl
sub
and
mov
andl
add
push
lahf
cwtl
ja
fstps
add
sub
lahf
and
lret
testl
push
xchg
mov
xchg
in
add
and
mov
pop
xchg
and
jno
cwtl
sahf
inc
cmc
hlt
mov
shrb
je
pop
fwait
xor
add
and
fists
sbb
in
scas
mov
js
xchg
mov
paddw
sti
ja
int
mov
push
pop
mov
xchg
orl
add
inc
xchg
test
cltd
test
mov
mov
pusha
mov
xor
xchg
dec
pop
gs
mov
jmp
add
jb
xchg
mov
outsb
or
lock
lcall
scas
add
pop
jmp
js
test
inc
sti
idiv
call
aaa
push
jp
test
aad
mov
pop
shlb
add
sbb
add
and
dec
decl
or
loopne
add
add
cmp
xchg
mov
stos
add
adc
jge
and
ljmp
cld
jne
aaa
je
lret
inc
adc
jmp
jbe
push
pushf
sti
jne
aaa
push
mov
adc
adc
adc
mov
cmp
add
or
inc
xchg
addl
pop
cli
push
jae
ret
sbb
jae
negl
cmp
mov
std
mov
and
je
add
lds
mov
movhps
lea
add
xor
insb
xor
je
pop
add
add
test
mov
enter
cmc
cmp
in
lret
mov
and
adc
adc
je
lahf
dec
aad
dec
adc
mov
int
xor
aad
mov
mov
inc
dec
shlb
jmp
loope
out
cwtl
insb
movsb
jb
test
test
in
std
nop
data16
nopl
pop
cwtl
fists
add
add
aas
push
inc
adc
mov
nop
add
adcl
jl
dec
jb
add
imul
leave
pop
cmp
aad
iret
cli
cltd
or
negb
xchg
ret
mov
ret
cmp
push
jae
push
jnp
cwtl
xchg
divl
pop
cmp
cmpsb
jle
negl
adc
addl
repz
outsb
xlat
pop
out
jbe
jb
hlt
push
decl
push
xchg
push
add
aam
outsb
xchg
xlat
test
mov
adc
subl
push
pop
push
decl
nop
and
jge
mov
aaa
cmpsl
outsb
clc
cmp
pushl
addb
outsb
adc
dec
ds
xor
out
cmpsb
cld
mov
sbb
pop
mov
inc
lret
mov
push
or
adc
mov
push
push
adc
lea
mov
std
cmp
xchg
mov
xor
test
and
dec
testl
and
testl
dec
shrl
sub
mov
repz
xor
cli
stos
mov
add
jg
cli
dec
mov
in
cmpb
jmp
xor
shll
ss
ds
movsb
ret
push
and
pop
add
mov
mov
push
jge
push
jo
add
movsl
es
jg
sbb
mov
ret
jl
xchg
aad
mov
loop
mov
mov
cmp
xor
jnp
jmp
sbb
test
add
fildl
sub
clc
sbb
xchg
mov
jmp
sbb
fidivl
xchg
jmp
mov
outsl
sbb
push
add
icebp
jmp
sbb
andb
fildl
mov
rcrb
sbb
dec
out
hlt
ficoms
jae
jmp
push
add
xchg
neg
jo
cmp
les
fwait
notb
inc
call
mov
sub
std
jbe
bound
cmpsl
mov
mov
xchg
push
xchg
and
clc
pop
out
sub
mull
mov
int3
add
mov
mov
inc
shr
shl
cltd
add
dec
or
je
ret
cmp
jbe
cmp
fisttpll
cld
jmp
mov
ljmp
lcall
jle
inc
cld
jecxz
test
jne
js
push
add
cld
test
test
mov
leave
push
ficomps
adc
adc
lea
add
pmaxub
adc
lret
int3
es
adc
push
cmpl
inc
pop
mov
ljmp
mov
xchg
xor
push
arpl
cli
insb
out
sar
testl
imul
xchg
mov
and
jo
js
cmpsb
dec
orb
sub
or
addr16
xchg
push
idiv
rolb
mov
pop
js
mov
in
xor
mov
jns
add
jnp
mov
push
xor
mov
clc
or
mov
mov
cmp
aas
jg
add
xchg
push
jb
js
xor
sbb
or
add
bound
dec
push
xor
pop
stos
jae
push
inc
subb
xor
fisttps
movb
addl
mov
pop
jne
fisttpll
add
ss
push
or
push
push
sbb
adc
aas
js
add
jne
les
xchg
cli
test
cwtl
or
fcomip
into
negb
cmpsl
mov
jle
std
mov
and
and
lods
jo
leave
aam
adc
or
dec
addl
sub
or
adc
adc
addl
sub
pop
leave
je
cmovne
or
fsubl
mov
add
mull
add
ds
cltd
sub
icebp
or
lret
mov
pop
mov
jg
dec
adc
pop
and
or
mov
add
mov
mov
lret
lret
int3
pop
ror
int3
outsb
ror
int3
pop
ror
int3
pop
adc
sbbl
mov
xchg
push
pushl
fs
push
les
push
movl
loop
mov
adc
pop
push
fucomip
notb
jmp
adc
sbb
sarl
xchg
sahf
inc
dec
dec
dec
sbb
jnp
mov
clc
das
or
repnz
push
test
insl
xor
cli
insb
jae
outsl
jae
mov
repnz
sbb
jnp
test
adc
sahf
ret
scas
decl
mov
loope
add
jnp
cmp
add
mov
iret
test
push
in
jb
push
or
mov
lock
xchg
mov
jg
jnp
xchg
movsb
adc
sbb
dec
jmp
xor
jb
in
lods
cmc
loope
aas
outsl
jb
pushf
jo
jl
outsl
and
ja
cwtl
pusha
adc
inc
test
out
fdivr
sti
sbb
or
fldl
jnp
jmp
push
adc
popf
sbb
mov
jae
rorl
insb
dec
push
adc
mov
adc
mov
jno
cmp
push
ret
add
ss
call
in
addl
repnz
andb
or
jne
outsb
out
cmp
lea
iret
pusha
xor
stos
xlat
fucomip
fcompl
cmp
out
mov
dec
mov
push
jb
jg
lods
test
mull
jbe
xchg
js
or
bound
outsl
mov
cmp
push
ret
stc
jmp
add
jno
mov
ja
push
dec
or
xor
dec
pop
xchg
cld
call
imulb
sbb
fucomip
mov
call
ret
adc
movsb
pusha
mov
adc
and
rclb
daa
add
ret
or
cmpsl
mov
testb
shll
cmp
pushf
idiv
loope
mov
testb
mov
mov
push
sbb
jnp
out
cmp
jg
mov
mov
stos
dec
add
add
mov
add
jo
add
arpl
add
in
test
add
jbe
mov
shl
and
jle
jnp
inc
insl
jne
pushl
dec
jns
mov
fimuls
mov
scas
jl
dec
out
mov
add
and
lock
inc
push
cmp
inc
insl
push
cwtl
sti
sti
jb
pop
jnp
xchg
or
fldl
jnp
jmp
ret
push
loope
aam
mov
arpl
dec
push
add
adc
into
in
mov
add
lock
fcmovnu
mov
pop
insb
dec
je
lods
cltd
add
push
sub
decl
fdiv
lds
in
icebp
mov
sahf
imul
inc
mov
push
sti
mul
add
fisttps
jno
in
inc
insl
pusha
add
insb
or
mov
ljmp
iret
repnz
lods
testl
mov
test
ljmp
jmp
add
adc
and
movsl
mov
push
clc
scas
jge
insl
icebp
loop
push
cmp
fldl2e
gs
ja
push
lcall
insl
jno
sub
mov
jb
imull
mov
xor
jno
add
xchg
push
icebp
leave
call
mov
jne
inc
pop
test
cmp
xchg
ljmp
fistl
int
into
jp
lock
fisttpll
add
iret
or
jno
cld
lcall
dec
sti
push
sbb
or
sbb
fisttpll
add
iret
or
cltd
mov
call
push
sti
add
mov
faddl
xchg
stc
cmp
ja
es
idiv
popf
testb
xor
add
int
jle
jo
mov
or
cmpl
add
add
pushf
add
pop
lock
test
lret
push
jp
add
sti
dec
sub
stc
cmp
ret
rclb
and
add
push
fidivrl
push
or
mov
add
cld
jle
mov
add
cmp
cld
mov
pop
jp
lock
adc
push
xchg
cld
sarb
inc
adc
sub
test
add
jb
js
jecxz
dec
dec
adc
aas
mov
and
js
or
xchg
xor
mov
fcoms
inc
aad
jg
lods
jg
cmp
in
shll
test
lds
mov
fnstenv
sbb
mov
add
dec
aad
sbb
fiadds
das
pop
cmp
sbb
imull
mov
or
or
js
mov
mov
mull
jo
inc
fnstenv
xchg
ja
imull
mov
jmp
test
add
fists
mov
mov
hlt
je
mov
pop
cmp
stc
or
jno
push
mov
add
test
jecxz
lcall
xchg
jmp
mov
test
add
orb
dec
pushf
lock
leave
call
xchg
mov
test
clc
sbbb
inc
add
mov
cld
mov
xchg
aaa
or
stc
out
call
or
or
into
jae
push
mov
mov
or
add
pushl
jae
and
xchg
idivb
movsb
or
push
jmp
int3
push
push
arpl
or
pusha
js
iret
gs
dec
in
cmpsl
sti
mulb
and
xchg
cmpsl
stos
add
out
cli
clc
lahf
add
inc
mov
scas
mov
std
cmp
mov
lahf
add
mov
jne
mov
cmpsl
mov
adc
cli
clc
pop
testl
mov
inc
imul
out
cmp
cli
clc
pop
testl
mov
pause
or
movsl
decl
add
inc
jo
mov
fidivs
dec
push
or
or
int
pushf
inc
inc
jbe
outsl
cltd
jl
mov
xor
add
lea
inc
adc
bound
add
data16
push
add
je
test
test
push
lock
jb
cld
hlt
outsl
aam
add
outsb
or
inc
outsb
add
xlat
divb
mov
push
bound
inc
andl
jo
mov
mov
mulb
insl
push
xchg
add
add
out
push
add
bound
jne
ja
and
jae
scas
enter
add
rclb
dec
das
jmp
sti
das
insl
in
inc
testb
lock
out
out
mov
push
xchg
outsl
insl
add
or
daa
mov
push
sbb
add
mov
andl
sub
pop
scas
outsb
push
inc
lret
xor
xchg
ds
push
xor
jmp
repnz
mov
pusha
or
seta
or
imul
and
cld
fwait
and
je
repnz
sti
adc
push
xor
inc
xor
and
dec
lds
js
int
mov
xlat
out
ds
jns
sbb
mov
int
jbe
jnp
out
sbbl
xor
xchg
sbb
jae,pt
stc
sbb
push
arpl
lock
cli
dec
loope
add
and
jl
arpl
je
loope
scas
jnp
out
mov
je
leave
adc
or
cld
loopne
add
mov
lret
jl
pavgb
int3
je
stc
mov
push
lock
push
xchg
lds
mov
imul
js
mov
and
nop
insb
xchg
stc
jbe
sbb
bound
push
jno
insb
aas
js
test
lret
push
pop
lea
xor
inc
insl
insb
aas
js
idivb
jae
lods
push
loope
cltd
sbb
mov
add
sbb
add
dec
fs
inc
icebp
push
adc
xorl
call
add
js
jne
js
jno
cli
das
mov
mov
pop
mov
dec
or
xchg
jmp
jl
cmp
jmp
jnp
insb
call
cmpsl
fistl
cmpb
fs
testl
outsb
mov
and
mov
hlt
out
out
lret
mov
push
inc
in
mov
push
add
out
mov
cmc
pop
out
lret
push
pop
push
ret
mov
addr16
sub
push
insl
add
repz
mov
sbb
movsl
sub
push
test
repz
mov
jge
stos
adc
sbb
mov
in
mov
es
int3
push
pop
int3
lahf
sbb
mov
sbb
bound
inc
sbb
dec
adc
nop
sbb
repnz
jecxz
pusha
add
sbb
mov
adc
add
sbb
push
pop
jecxz
test
pop
pop
jnp
incl
xor
cmp
je
add
add
xor
jnp
pushf
fdivrs
add
cli
jle
jnp
push
test
mov
add
add
mov
jnp
jmp
popa
or
xchg
inc
ret
jge
push
add
enter
mov
xchg
xchg
rolb
ror
aaa
mov
xchg
lods
in
outsl
or
test
xchg
pop
sahf
mov
add
xor
xor
and
loope
scas
pop
adc
mov
push
ret
add
pop
add
mov
dec
push
daa
pop
push
dec
ljmp
lcall
fildll
add
stos
pop
jnp
outsl
mov
mov
add
aaa
jmp
stos
jnp
jmp
mov
ret
add
mov
mov
add
mov
and
pop
clc
mov
jmp
popa
negl
add
push
xor
decl
rcll
cmpsl
pop
adc
pop
sub
mov
add
lret
push
cmp
js
and
push
inc
fyl2xp1
ja
push
dec
bound
pusha
scas
adc
negl
lea
mov
adc
mov
jmp
iret
fsts
pop
pop
xor
js
mov
loope
stc
push
imull
push
adc
xor
pop
ljmp
xchg
add
xchg
jne
insl
je
cmp
outsb
add
lods
cli
inc
cld
adc
ljmp
popl
iret
mov
mov
ljmp
popl
iret
in
adc
scas
ret
notb
pop
ljmp
mov
iret
popf
jno
test
testb
pop
sub
jge
jo
push
clc
pushf
or
xchg
stc
faddl
mov
jmp
cmc
stc
clc
mov
cmpb
mov
filds
dec
mov
hlt
stc
mov
push
clc
add
cmp
cmpl
jmp
adc
cmpsb
add
add
mov
cmp
add
cmc
stc
cmp
aas
cld
lret
jmp
out
sub
fldl
inc
inc
sub
xlat
cmp
and
gs
sahf
dec
hlt
lea
mov
add
in
testl
out
add
gs
cld
dec
mov
mov
gs
jg
test
cld
sahf
mov
dec
jg
ret
stos
data16
call
adc
push
or
or
or
jbe
and
cld
xor
bound
mov
adc
icebp
pop
pop
andnps
dec
arpl
loopne
imul
std
bound
mov
stos
jmp
pop
std
negb
xlat
push
cmp
movsb
sarb
adc
div
sub
arpl
bound
stc
inc
dec
add
mov
jmp
js
subl
orb
add
or
add
hlt
dec
push
add
push
ret
out
int3
add
jnp
inc
sub
sub
inc
mov
pop
push
xchg
add
pop
loop
loop
sub
lcall
pop
ret
das
push
out
mov
pop
sub
ret
inc
mov
ja
fidivrl
xchg
dec
xor
sarl
dec
push
add
lret
push
mov
pop
dec
mov
add
dec
fimuls
cmp
push
add
fldl
cmp
lret
add
jb
lock
dec
xchg
ret
test
dec
js
sub
sub
jno
jge
jb
mov
sub
js
jns
push
xchg
jns
jnp
xorl
imul
add
jnp
inc
jl
sub
mov
mov
ja
jnp
add
xor
wbinvd
jo
leave
call
out
stc
or
jmp
je
cmp
sub
jnp
das
inc
clc
sub
jnp
add
mov
jmp
jmp
aas
ja
les
sahf
add
je
idiv
je
jnp
adcb
jmp
je
decl
or
ds
fnstcw
xchg
pop
cmp
popa
jmp
add
lret
jb
jg
push
or
leave
and
inc
call
jmp
insl
lock
jmp
js
add
fdivrp
in
pop
loope
js
mov
xchg
push
dec
fstps
rorl
stc
and
sbb
add
cmp
fdiv
in
jmp
andb
push
pop
shll
in
jb
jbe
call
dec
or
jb
jnp
cltd
dec
jae
mov
decl
repnz
inc
fistpl
ja
mov
add
pop
hlt
jmp
arpl
push
lock
test
fidivl
imul
jae
fxch
jp
insb
jecxz
test
cmp
pushf
ret
fistl
and
aas
add
jl
dec
rclb
push
or
movsl
shll
inc
adc
jb
mov
idivl
mov
ljmp
pop
add
mov
cmc
jge
xchg
mov
jle
scas
jl
mov
mov
pop
jp
repnz
adc
insl
js
gs
lock
pop
cmp
pop
mov
pop
pop
mov
clc
sbb
pop
lock
inc
cltd
mov
int3
aaa
and
andl
in
pop
push
pop
divb
cltd
push
ds
ljmp
fldcw
or
or
add
roll
jne
jnp
add
jnp
push
adc
add
mov
test
cmp
xlat
xor
mov
js
enter
rolb
out
jnp
jmp
add
jae
es
pop
push
inc
pop
dec
jnp
jmp
enter
shlb
jge
mov
add
jnp
jmp
pop
inc
dec
fldl
dec
sub
enter
mov
or
pop
mov
jmp
repnz
xchg
add
js
test
pusha
mul
mov
mov
in
aaa
hlt
stc
in
iret
outsl
arpl
add
test
mov
lods
je
jge
dec
arpl
sar
xchg
jle
jnp
add
hlt
or
jg
das
arpl
arpl
add
xor
inc
or
ds
nop
call
mov
ds
mov
out
das
iret
bound
lea
add
js
ljmp
ja
add
cmc
subb
test
vsqrtss
or
movsl
pop
ljmp
xchg
add
test
and
and
imul
arpl
jmp
ds
in
in
jne
push
adc
je
add
repnz
cltd
adc
jmp
pop
stc
ljmp
add
add
inc
outsb
add
stc
mov
stc
jmp
or
call
jnp
lret
mov
std
stc
cwtl
repz
inc
hlt
stc
pushf
out
lock
mov
hlt
call
clc
sub
jl
push
addb
ja
xchg
and
stc
push
mov
fcmovnu
push
cli
repz
imul
and
mov
push
hlt
stc
adc
orl
cld
in
add
movsb
outsl
std
stc
popf
hlt
test
nop
repz
fsubr
pop
clc
sub
mov
repnz
pop
clc
dec
lea
cs
add
push
les
or
outsb
xor
pop
fdivs
xchg
dec
clc
call
lods
or
mov
icebp
push
pop
push
xchg
xlat
pop
mov
clc
inc
pop
nop
fcompl
dec
in
cmp
in
test
pop
pop
xchg
push
data16
add
jg
pop
dec
icebp
repnz
loopne
pop
insb
enter
js
or
and
adc
adc
pop
imul
aas
push
push
push
stos
push
push
pop
add
clc
push
stos
enter
push
mull
bswap
push
orb
add
ficoms
lret
idiv
sbb
pop
iret
leave
test
divl
xor
and
cmc
add
dec
outsb
ljmp
testl
or
addl
arpl
loopne
push
push
mov
testl
add
mov
mov
call
push
push
incb
pop
mov
mov
stc
decl
fldz
decb
pop
stc
adc
add
mov
add
andl
inc
iret
push
cld
decl
push
ret
or
testb
mov
mov
mov
mov
mov
call
in
in
add
mov
out
ds
xor
nop
out
and
les
cs
mov
jns
add
out
jae
dec
jb
daa
outsl
lods
xchg
xchg
pusha
call
stc
test
inc
cld
sub
xor
ds
stc
clc
sub
cmpb
add
push
jl
dec
mov
mov
mul
mov
stc
in
sub
lcall
jl
stc
adc
mov
les
retw
xchg
sahf
out
notb
std
out
add
push
outsb
cwtl
cmpsl
push
cmp
cld
or
xor
pop
out
ret
jae
push
adc
gs
or
es
in
mov
push
fs
pop
push
call
in
adcb
jmp
shr
testb
jbe
push
in
bound
hlt
in
fs
push
sub
out
xor
ret
add
xor
jns
jp
in
add
mov
add
push
andl
rorb
xchg
cmp
jno
into
push
sub
cmp
ficoms
cmp
add
imul
cli
inc
push
xchg
push
mov
idiv
adc
negb
or
push
lods
mov
dec
push
fs
or
jmp
mov
push
mov
mov
sahf
mov
stos
ret
push
dec
movb
adc
int3
out
int3
outsl
shl
addl
rcrb
or
rorb
mov
inc
xchg
inc
or
and
call
mov
sti
test
les
lds
or
repz
call
in
in
call
mov
pop
adc
lret
es
int3
es
int3
outsl
aam
push
or
pop
add
add
clc
ret
fiadds
jnp
add
mov
fucomp
test
fsts
adc
into
inc
dec
add
mov
ret
mov
add
add
popf
mov
int3
mov
push
out
push
push
fdivp
mov
dec
test
xchg
ja
subl
pusha
jo
bound
stos
cmpsb
xchg
push
adc
pop
add
mov
pop
mov
add
fists
jno
ljmp
push
lock
push
call
add
mov
outsl
xorb
dec
push
pushf
pop
stos
mov
add
cwtl
ljmp
inc
xchg
into
addl
pushf
mov
lods
add
shl
sub
sub
cs
mov
insb
shlb
jp
mov
insl
fildl
pusha
hlt
std
add
cmp
sbb
add
push
or
push
sbbl
repnz
adc
jmp
mov
cmp
imul
jmp
mov
add
js
add
add
jmp
jmp
xchg
jle
ljmp
ficoms
js,pn
imul
js
or
js
imul
js
add
add
cmpb
add
fisttpl
jnp
aam
je
rolb
mov
lret
xchg
and
add
rol
lea
es
call
in
cltd
xchg
dec
mov
add
loop
dec
dec
andl
add
sbb
rolb
out
or
mov
xlat
pop
scas
roll
xchg
mov
add
aam
add
iret
xchg
pushf
xchg
mov
mov
call
add
jmp
addb
bound
test
push
jnp
cmp
add
xor
js
movb
bound
dec
bound
add
and
or
add
jne
sbb
add
bound
pop
test
aas
test
push
rcll
in
or
sub
inc
mov
inc
add
jbe
pop
ret
push
int3
cmp
sub
dec
jp
jg
in
push
add
imul
mov
add
je
cmpsb
push
dec
idiv
enter
ret
loope
jnp
rorb
dec
mov
and
lret
jmp
jnp
scas
cmp
mov
aas
xchg
mov
inc
inc
lods
mov
inc
movsl
mov
inc
push
jnp
add
clc
inc
icebp
push
push
mov
add
mov
out
dec
icebp
add
aas
xchg
jp
mov
sub
jnp
jmp
pushf
dec
jmp
inc
mov
mov
imul
fimull
cmpsb
js
add
clc
dec
add
js
add
jmp
cmp
imul
js
mov
jmp
pop
fiaddl
scas
js
add
cmp
js
add
ds
xor
and
sbb
shl
inc
dec
test
xchg
and
push
test
stos
js
repnz
jle
pop
or
dec
push
test
jge
add
ret
in
cmpb
les
int3
push
adc
out
ja
in
xor
push
lea
mov
aad
cld
push
push
stc
mov
jbe
push
into
mov
cld
lahf
dec
outsb
sbb
rclb
xor
push
lock
jge
adc
mov
sub
stc
incl
das
lds
int3
data16
int3
push
adc
int3
jnp
jp
sub
jae
adc
xchg
dec
jne
pop
adc
stos
addr16
mulb
out
dec
stos
xchg
jecxz
mov
inc
add
and
cmp
pop
or
push
outsl
add
lock
loop
add
inc
mov
aaa
push
ror
das
outsl
xchg
add
xchg
jno
xchg
scas
mov
addr16
or
stos
pop
and
mulb
xlat
push
lock
repz
dec
repz
aas
mov
inc
jnp
sub
dec
testb
lret
jmp
add
ja
cmpsb
push
incb
pop
lods
iret
aaa
pop
movsl
iret
das
pop
ss
lgs
test
jle
xchg
dec
insb
int
xchg
out
push
xor
fsubrs
sbb
loopne
loop
lea
dec
into
add
jmp
fcomi
rorb
mov
dec
cmp
stos
adc
pop
and
xor
ds
add
cmp
fisttpll
fdivp
mov
mov
push
xor
lods
push
pushf
add
xchg
xor
fs
mov
inc
icebp
divl
add
mov
xor
jge
add
pop
xchg
mov
xchg
jne
leave
insb
int
and
aad
je
lahf
push
sbb
or
push
inc
insl
neg
popf
push
cli
cmp
lret
out
add
dec
pop
pop
xchg
pop
int3
pop
pop
out
add
pop
stc
test
jge
or
je
jge
adc
shll
bound
and
xchg
pop
mov
pop
ret
xchg
push
out
outsl
fwait
jne
cmp
sbb
add
dec
int3
push
pop
int3
out
pop
int3
into
pop
int3
push
push
out
push
xchg
roll
inc
ss
int3
dec
iret
add
mov
roll
sbb
jnp
lret
inc
cld
cmp
jns
adc
sub
add
add
cmp
cmp
mov
jle
int3
scas
jbe
int3
inc
and
cs
lock
test
into
jb
mov
test
mov
cmp
or
movsl
out
incb
test
es
mov
or
inc
out
jb
lods
xor
add
sub
scas
push
and
mov
loopne
pop
jae
aaa
maskmovq
testl
stc
dec
fadds
dec
adc
pop
push
dec
ret
push
pop
or
dec
pshufw
lret
xorb
add
inc
adcb
loopne
out
push
in
mov
add
xchg
sub
mov
adc
or
dec
sub
xor
int
xor
pop
insb
movl
shl
inc
outsl
add
add
sub
les
sub
add
add
jb
jae
ds
enter
ficoml
bound
cmpl
xchg
mov
pusha
fcomi
cmp
dec
or
inc
cmpsl
mov
stos
fcomi
sbb
dec
or
aaa
enter
sbb
ss
push
jmp
scas
enter
add
imull
jae
lods
sub
bound
cmp
cld
mov
pop
push
pop
ret
mov
adc
adc
lods
and
jle
fimull
mov
divl
push
xor
cmpsl
add
mov
adc
push
pop
ret
adc
je
adc
xor
outsl
add
jmp
xor
je
jl
ret
out
int3
push
push
int3
out
int3
adc
push
adcl
pop
cld
jmp
test
and
addr16
out
mul
mov
and
ss
pop
sbb
add
and
xor
test
inc
aaa
mov
jge
ds
aaa
mov
push
jmp
mov
test
push
add
jno
test
xor
lock
test
mov
push
jmp
xchg
aas
inc
mov
incb
icebp
out
imul
xor
js
pushf
jp
and
jnp
gs
jnp
jmp
cmp
cmpsl
pop
push
andl
addr16
mov
mov
push
add
in
add
inc
in
push
sub
nop
addr16
icebp
mov
jecxz
mov
std
in
std
lret
mov
fwait
xchg
push
dec
jbe
fadd
pop
int3
xchg
mov
push
cwtl
cmp
test
or
enter
loop
mov
pop
sbb
dec
or
iret
push
xor
hlt
lret
cltd
or
daa
push
xor
adc
mov
mov
or
and
adc
mov
popf
add
cmc
aam
ljmp
arpl
mov
call
add
inc
or
imull
in
or
incl
js
mov
sbb
outsl
xchg
jne
retw
sub
inc
or
push
js
std
mov
dec
cmp
cmp
push
sarl
add
pop
mov
mov
inc
adc
adc
in
dec
mov
sub
and
loopne
add
leave
push
sub
icebp
pop
aam
add
xchg
movsl
add
push
dec
or
in
adc
mov
jp
int3
pop
push
add
jae
or
push
andl
xlat
pop
stc
call
xchg
jae
push
inc
cld
fxch
outsb
subl
adc
ljmp
jo
cmpl
ja
jnp
add
mov
test
lods
cmp
lock
push
mov
xor
add
lret
mov
push
mov
add
loopne
push
into
popa
xor
mov
add
test
mov
bnd
add
jbe
xor
lock
xchg
pop
mov
jne
add
mov
xor
stc
decb
pop
sbb
dec
les
add
fistl
in
popf
sub
sarb
hlt
std
sarb
xlat
cwtl
insb
pop
imul
xlat
push
jl
ss
and
aad
mov
imul
add
jmp
add
int
inc
dec
push
xor
cmpsl
sbb
dec
je
pop
mov
sub
rolb
add
cmpsl
idivb
rorb
jns
sub
dec
cmp
dec
in
jl
loop
test
cmp
inc
dec
lock
cmp
sub
jno
addl
adc
xor
xchg
mov
stos
test
push
xchg
sub
bound
ficoml
imul
adc
or
inc
testl
js
pop
bound
dec
xor
mov
das
push
mov
mov
idiv
push
mov
flds
add
mov
jge
sub
idiv
and
cmp
add
mov
clc
jmp
mov
clc
call
or
add
jge
lcall
mov
in
vmulps
cmp
mov
pop
add
adc
inc
jno
jge
loop
inc
dec
mov
adc
jns
lds
hlt
lea
loop
mov
enter
jnp
sub
push
insb
aad
sbb
jb
sbb
in
test
pop
cmc
incb
mov
xor
or
add
mov
repnz
jge
popf
rolb
or
xchg
add
mov
test
dec
mov
add
pop
push
add
insb
jge
bound
pop
es
or
inc
mov
add
stos
divl
jnp
mov
and
inc
add
and
add
gs
adc
add
jnp
inc
add
pop
add
hlt
mov
or
fnstcw
mov
add
test
cltd
movsl
cmp
inc
jnp
ljmp
adc
imul
out
add
daa
fs
stos
sbb
dec
in
push
stc
or
add
mov
les
lahf
arpl
je
xor
add
add
cmp
jb
xor
pushf
int
bound
test
bound
loope
sahf
mov
mov
jg
push
sub
dec
bound
ret
cld
call
call
ja
dec
or
inc
stos
add
js
pop
aas
jle
inc
xor
pop
aas
xchg
cmp
xchg
int
jo
xor
jmp
cmp
jae
in
adc
ljmp
mov
push
mov
mov
dec
or
mov
xor
ficoml
adc
push
lea
cmpsb
mov
add
or
mov
lahf
enter
mov
mov
stc
dec
inc
mov
cmp
or
pop
jge
sahf
adc
cmp
dec
fldl
adc
push
into
xlat
add
addl
add
jbe
pop
lods
adc
mov
fdivl
xchg
xorb
cli
repnz
insl
sti
jl
xor
bound
insb
lock
clc
jns
add
clc
cmpsl
testl
jnp
push
cmp
add
orl
test
and
rclb
loop
and
test
out
xchg
inc
jecxz
rolb
inc
push
xor
out
xor
mov
xchg
adc
xlat
data16
nop
je
push
mov
fmull
sub
sub
adc
mov
jl
leave
cmpsl
fs
dec
fnstcw
xlat
adc
dec
cmp
jnp
or
repz
mov
inc
cmp
das
roll
sub
dec
xchg
shlb
lods
shrb
movsl
rolb
jnp
fmull
jnp
cmpl
cld
aaa
jmp
or
aaa
jmp
fdivl
xor
jbe
or
add
js
jae
stc
mov
jmp
add
jge
pushf
or
jmp
mov
sub
aas
add
add
pop
jb
cmpsl
mov
movsl
jae
aas
mov
cltd
inc
popf
rol
ds
push
sub
popl
scas
jl
cmpsw
and
adcl
sub
std
and
iret
pusha
jb
cmpsl
pusha
jo
int
daa
push
adc
hlt
xor
mov
jp
push
fs
enter
filds
inc
or
add
jge
cmpsb
xchg
rolb
mov
jp
call
adc
mov
jne
pop
fstpl
aam
add
push
fiadds
adc
andb
fnstenv
push
cmp
dec
mov
ret
js
inc
cmc
push
nop
idiv
add
addl
mov
stos
sub
jns
outsl
mov
int
lods
stos
adc
js
cmpl
lock
adc
pop
xchg
jns
fstpt
data16
pop
std
hlt
daa
jmp
jl
add
push
ret
lock
nop
imul
add
and
repz
add
cmpsb
jo
jg
add
movb
ljmp
xor
add
in
cmc
mov
repnz
dec
clc
or
adc
out
mov
xchg
jne
xor
ljmp
add
imul
into
add
cmpsl
dec
sbbb
js
pusha
cmp
dec
mov
cmpsl
dec
cld
icebp
jle
mov
sub
pop
inc
pop
cwtl
or
rcl
sub
mov
lock
lcall
inc
popf
jp
ret
lock
jg
or
neg
sub
mov
sti
jmp
dec
jg
ret
je
mov
add
int
call
mov
insl
pop
jbe
pushw
addl
cmp
add
js
inc
or
add
add
pop
frstor
mov
jns
dec
adc
jmp
dec
insb
jmp
dec
and
cli
js
mov
cmp
adc
xor
adc
push
push
movsl
hlt
xor
pop
inc
cmp
js
ja
jle
js
add
lahf
mov
dec
jg
inc
or
xchg
repnz
lcall
loop
and
push
pop
mov
jge
inc
cmp
decl
std
add
adc
shlb
xchg
xchg
mov
add
mov
xchg
xchg
mov
mov
adc
mov
out
adc
xchg
fldt
mov
or
lea
dec
mov
mov
fldenv
sub
inc
push
in
xorb
mov
into
mov
addl
addb
out
inc
leave
test
bound
adcb
loope
stc
jp
pop
stc
cmp
or
cld
faddl
jge
arpl
inc
add
je
jns
jne
add
add
push
stc
adc
rcrb
mov
push
add
repz
hlt
push
ret
hlt
ljmp
rolb
and
pop
and
add
lahf
test
or
iret
lods
mov
xor
add
insb
inc
outsl
xchg
iret
cltd
jmp
xor
add
or
inc
xchg
add
and
push
fiaddl
jnp
das
pop
divb
mov
shll
enter
adc
jb
repz
xorb
inc
aam
ret
xchg
iret
sub
shr
into
add
mov
neg
test
mov
jl
jae
mov
aad
lds
jns
add
enter
jne
and
dec
and
fidivrs
or
fwait
add
xchg
test
xor
pop
jb
push
stos
ret
ds
popf
xor
mov
aas
lods
and
cmp
pop
mov
xlat
fnstenv
jg
inc
outsb
or
push
mov
mov
pusha
dec
or
daa
mov
cmp
sub
push
stc
add
xor
js
mov
idivl
mov
fistpll
add
loop
add
loop
dec
dec
pop
pop
ret
mov
call
mov
or
idiv
inc
inc
stc
incl
adc
pop
shrb
divl
test
loop
test
mov
sarb
push
cmp
mov
sub
orb
inc
inc
pop
ret
mov
pop
push
cs
pop
xor
stos
mov
test
jnp
pop
dec
lods
test
dec
add
mov
ficoml
jl
cmp
clc
cmp
and
fmuls
testb
clc
cmp
rorb
and
stc
hlt
jl
mov
scas
cmpsl
mov
and
xor
jp
lahf
xchg
mov
jl
sub
add
jnp
jae
inc
and
sti
mov
pop
es
idiv
add
jne
stc
je
pop
mov
aaa
inc
and
js
add
or
jge
cmpb
or
xchg
and
aad
dec
jae
fmull
add
and
int
or
mov
or
repz
repnz
daa
and
arpl
pop
nop
jmp
lds
jg
enter
or
repz
pusha
les
mov
fldenv
outsl
aad
and
and
les
or
mov
pop
inc
shl
rcrl
test
shrl
cmpl
js
pop
jb
push
sub
sub
repz
testl
aas
scas
mov
mov
jmp
jg
inc
jmp
in
js
add
add
push
aaa
cld
popf
push
push
ja
push
in
xor
add
imul
xlat
add
inc
mov
push
fwait
jg
xchg
ret
scas
mov
pop
jmp
dec
das
inc
cmp
in
xor
shll
inc
xor
aaa
push
jnp
and
inc
sub
sub
mov
sub
mov
idiv
pop
aam
adcl
jg
into
lods
roll
add
loop
mov
pop
repz
ret
test
dec
sub
jge
sbb
mov
lcall
jnp
out
sub
stos
and
add
xchg
inc
or
loope
push
add
xor
decl
sub
ja
xchg
push
lock
cmp
out
ss
jb
incl
add
push
xor
test
arpl
test
add
jge
jecxz
cmpl
add
je
gs
mov
test
adc
sti
add
add
xchg
insb
cmp
mov
xchg
push
loopne
jnp
jmp
adc
adc
jg
fs
jae
sahf
mov
jp
je
push
adc
mov
mov
test
and
and
mov
inc
jnp
sub
clc
dec
push
or
jnp
xchg
jg
mov
jmp
sahf
cmpsl
jne
js
jle
outsb
mov
out
sub
pushf
les
enter
andl
adc
ja
subl
mov
add
jp
sti
idiv
mov
xchg
inc
scas
add
fstpt
jmp
jle
inc
aad
adc
add
mov
add
mov
jne
jo
xorl
mov
add
js
jmp
jb
imul
js
ret
nop
roll
clc
jmp
cwtl
jle
xchg
mov
paddsb
loopne
adc
sarl
cmc
rolb
add
mov
enter
lds
dec
pop
or
push
inc
sbb
and
fstl
add
adc
push
repnz
mov
or
pop
clc
std
and
add
and
jmp
mov
adc
pop
add
jg
fdivp
xlat
loop,pn
jge
jnp
mov
rep
or
add
add
xchg
in
sbb
hlt
icebp
mov
jns
jb
test
adc
add
pop
or
sbb
in
hlt
add
imul
dec
and
push
clc
push
mov
insb
mov
or
lock
loopne
mov
or
pop
mov
and
mov
pop
imul
jnp
scas
mov
addr16
mov
xchg
mov
inc
jnp
enter
je
pop
adc
movsb
ret
pushf
xchg
insb
mov
cmp
add
aad
repz
xor
add
mov
fs
cmpl
add
mov
xchg
sbb
jmp
mov
mov
mov
popl
adc
int
xor
leave
inc
jle
icebp
mov
in
fldt
add
add
or
sbb
pop
lret
adc
jp
add
add
lcall
roll
aaa
mov
shl
das
adcl
in
jmp
icebp
leave
sbb
inc
jbe
jg,pn
imul
js
std
imul
lahf
imul
xchg
out
js
pop
aas
jp
inc
in
add
push
ror
mov
mov
ljmp
mov
movsl
das
test
cmpsb
jns
lret
push
out
clc
add
xchg
lret
and
mov
ficoml
aaa
or
adc
mov
cvtdq2ps
shl
or
adc
or
jmp
aad
dec
push
cmp
adc
xchg
adc
clc
jmp
sbb
cltd
sbb
push
and
call
inc
adc
bound
idiv
out
jne
inc
pop
sbb
cmpsb
lds
add
xchg
mov
sub
cmp
inc
mov
fcomip
xlat
jnp
mov
inc
fwait
fwait
pop
inc
div
es
repz
icebp
xor
add
aam
daa
sbb
pusha
stos
mov
out
jg
mov
xchg
adcl
inc
add
lock
xchg
out
aam
dec
mov
loop
mov
inc
add
jnp
les
jle
add
fs
add
negl
inc
inc
lock
scas
xchg
daa
mov
cmp
insl
jnp
jmp
jg
xchg
jge
iret
pop
mov
cmpsl
push
adc
call
aad
xor
fs
jae
mov
add
les
adc
sbb
lahf
mov
jmp
lea
and
sbb
add
test
adc
rcll
mov
jmp
inc
arpl
scas
xchg
movb
hlt
mov
test
or
fistpll
mov
jmp
add
add
cmp
icebp
js
pop
gs
mov
jmp
addl
idivl
xor
dec
adc
add
out
jb
imul
cltd
pop
dec
int
aad
insb
rcll
mov
lds
mov
lret
lods
and
icebp
dec
out
loop
pop
je
or
adc
add
add
scas
jnp
dec
cs
clc
cltd
lret
sbb
mov
add
or
testb
or
in
push
push
clc
aad
mov
loop
fisttpll
dec
pusha
and
xchg
addl
mov
xchg
add
mov
negl
add
mov
xchg
add
testb
lahf
ja
add
and
add
push
adc
adc
leave
pop
and
jnp
fiadds
mov
je
cltd
aas
inc
pusha
in
ljmp
jo
mov
mov
mov
iret
mov
inc
out
mov
imul
pop
test
clc
mov
test
dec
call
add
ja
xchg
mov
dec
inc
cld
js
test
xor
push
andl
in
cltd
cmp
jae
add
call
shll
jnp
adc
imul
xorb
jl
icebp
add
add
insb
cmp
mov
jg
aad
mov
pop
fs
sub
jecxz
mov
cmp
adc
sbb
inc
lock
and
lods
inc
leave
jle
xchg
xlat
mov
jnp
mov
cld
shlb
inc
dec
mov
add
jmp
stos
mov
into
icebp
mov
and
pusha
xchg
orl
js
add
jae
add
sti
and
lcall
jle
je
add
add
push
enter
andl
inc
or
scas
fdivs
push
ret
test
jl
enter
jmp
mov
xchg
sbb
ljmp
sbb
mov
pop
xor
xchg
ja
js
jle
orl
add
ljmp
out
jg
jp
cmp
leave
int
and
or
pop
xchg
sub
add
xchg
cmp
call
add
push
mov
xlat
pop
xor
sbb
adc
xchg
pop
flds
gs
nop
mov
and
add
add
mov
fmuls
sbb
loopne
add
or
or
cli
add
add
add
roll
cmp
incl
js
pop
stc
lahf
cmpsl
xchg
mov
imul
jge
es
stc
jno
add
or
cmpb
int3
add
add
outsb
nop
mov
std
rcll
xchg
mov
and
ljmp
and
inc
sub
sbb
add
mov
std
mov
mov
sub
fisubs
inc
xchg
fsub
out
cmp
std
push
sbb
jns
sbb
mov
std
mov
pop
jecxz
cmp
dec
lock
lock
add
dec
dec
lock
fdivs
mov
cld
shrl
leave
jp
jmp
jp
mov
enter
add
and
xchg
xchg
mov
jl
pop
vpgatherdd
bound
repnz
adc
gs
xchg
add
ffreep
out
jb
adc
cltd
loopne
sub
js
cmp
rolb
pop
sub
mov
sub
js
and
cmpsb
and
add
pop
add
cld
pop
or
js
mov
or
mulb
inc
loop
decb
jo
adc
sar
or
leave
push
lret
push
jb
add
xchg
ja
mov
dec
jg
jb
fldl
jne
xlat
mov
mov
add
mov
inc
jp
jmp
inc
fs
push
bswap
sub
call
add
inc
or
adc
mov
mov
jae
dec
mov
dec
jmp
or
add
hlt
jb
or
cld
rcrb
cmpl
stc
dec
push
xchg
int3
shl
int3
jne
stos
xchg
push
clc
jnp
lret
jge
and
fiaddl
lock
dec
sbbb
test
fwait
inc
inc
jmp
aas
push
push
and
leave
xchg
or
add
mov
andb
dec
push
sti
inc
inc
add
and
mov
mov
mov
je
add
cmp
jbe
das
lahf
nop
lock
add
gs
push
sub
add
jnp
jmp
inc
sub
fildl
jnp
push
lods
push
dec
loope
cmp
retw
jb
ds
jl
jb
jecxz
loopne
jnp
jmp
inc
fistl
orb
add
mov
shr
add
cmp
inc
movsl
cmp
add
les
xor
cmp
mov
inc
dec
ja
xchg
mov
hlt
adc
push
mov
inc
mov
inc
push
dec
icebp
add
mov
lcall
cli
xor
xadd
mov
dec
outsl
test
rolb
xchg
cli
stc
stos
jge
inc
test
das
sub
rol
push
ror
inc
mov
inc
adcb
insl
mov
or
scas
dec
subl
pop
bnd
add
push
pop
add
hlt
les
jmp
pop
shl
es
loop
popf
pop
inc
add
or
sbb
mov
push
dec
clc
mov
sub
nop
cmp
mov
loope
sbb
pop
dec
or
lahf
inc
inc
jl
mov
add
mov
popa
dec
fldl
jmp
fimuls
push
icebp
mov
orl
push
pinsrw
dec
outsb
pop
inc
jecxz
sub
call
or
pop
and
dec
cld
cltd
loopne
push
inc
popa
dec
or
mov
stos
push
clc
mov
cmp
clc
inc
add
and
loop
std
add
out
stos
stc
lods
clc
mov
and
cmpb
cld
sub
add
je
add
cmpsb
ja
dec
lds
dec
out
ret
lret
mov
mov
test
cmpsb
sahf
jns
testl
and
xlat
mov
punpckldq
jnp
add
lock
inc
fs
sub
cmpsb
inc
call
add
int
dec
outsl
je
xlat
es
js
mov
adc
mov
add
cmp
adc
sbb
nop
xchg
add
pop
fs
pop
mov
and
lret
push
jo
stos
orb
or
mov
add
fdivrs
mov
add
or
add
pop
cmp
add
jl
mov
jmp
mov
push
les
cld
or
jmp
jns
test
add
testl
test
and
push
jae
inc
dec
inc
mov
add
js
test
aas
mov
mov
jmp
add
inc
stc
cs
add
incl
jo
xor
bound
push
pop
add
adc
pushf
and
fnstcw
add
mov
dec
cld
js
add
ltr
jge
testl
fists
dec
jp
push
lock
dec
push
mov
pop
loop
mov
mov
jg
jp
jno
mov
popl
sub
pop
lret
cmp
sbb
ljmp
rorb
add
orb
push
clc
jmp
testb
mov
add
mov
clc
jmp
fsts
mov
jno
rolb
and
add
fnstsw
popf
testl
add
xor
fsubl
mov
or
lods
mov
fwait
lods
das
push
cmp
lcallw
das
dec
add
dec
pop
in
add
lods
mov
bound
inc
hlt
mov
fs
cmpl
add
and
addb
add
lock
mov
aam
mov
cld
sar
ljmp
rorl
or
daa
mov
jnp
pop
stos
pushf
mov
sub
incb
xchg
jl
pop
stos
fwait
jae
ja
mov
hlt
mov
icebp
bnd
sub
mov
add
ljmp
das
push
lret
jb
sbb
insl
cmp
and
push
jmp
cmp
push
or
das
xor
ret
cmp
test
bound
mov
testl
add
test
aad
daa
sub
push
add
bnd
mov
dec
inc
add
ja
jmp
and
fidivs
int
stc
adc
inc
gs
or
js
cmp
add
stos
leave
pushf
js
outsb
cmp
jmp
push
mov
jmp
jae
add
ljmp
loop
sub
mov
or
mov
iret
je
sub
push
adc
adc
ret
and
jae
xchg
sahf
and
mov
add
testb
mov
add
mov
mov
out
cld
sbb
loopne
pusha
or
or
mov
jb
jo
jge
pop
lahf
idiv
xchg
mov
loopne
and
testb
push
inc
mov
mov
add
add
lock
jp
add
dec
ret
cmp
jns
add
out
mov
fwait
cmp
inc
pop
and
cld
jnp
ja
add
add
and
test
int
test
pop
cmp
push
pushl
push
push
repnz
xchg
dec
pop
loope
add
test
mov
mov
dec
hlt
inc
fcompl
mov
sub
add
lock
lds
push
das
fwait
xchg
int
pop
cmp
push
push
adc
jmp
mov
mov
add
ficoms
pop
ljmp
lods
imul
xor
jno
sub
lea
ljmp
lods
jae
xchg
ret
fmulp
and
dec
popa
insb
and
mov
xchg
jmp
rcr
mov
cmpsl
push
cmpsl
dec
in
mov
cmp
fistps
mov
add
push
add
mov
ret
cmp
xchg
scas
lods
add
or
bound
adc
out
ror
add
xchg
mov
cmp
cmp
sbb
mov
xor
repnz
push
rolb
data16
add
sub
push
ficoms
xor
mov
sub
pop
jmp
mov
test
lcall
add
add
adc
add
ret
out
jae
adc
push
pushf
jle
push
lea
paddsb
int3
shll
push
push
clc
and
ja
sahf
fmull
adc
out
inc
shl
inc
fidivrs
fldl
test
or
loop
add
loop
add
dec
pop
clc
jmp
pop
dec
loopne
pop
repnz
popf
push
sub
shrl
out
cmp
jo
adc
sbb
push
test
ffree
jb
ffree
test
decb
imul
sub
and
cmc
push
xor
aaa
popl
mov
mov
adc
mov
or
es
and
add
scas
xchg
insl
dec
lock
sbb
add
lret
add
test
fiaddl
nop
cmpsl
cmpsb
xchg
es
or
insl
push
aam
in
test
mov
push
xchg
lods
or
imul
mov
mov
aad
jnp
sbb
pop
jmp
push
notl
ljmp
push
test
cmp
adc
int
jnp
adc
adc
xchg
jmp
add
jmp
lods
data16
mov
xchg
jmp
sahf
inc
pop
fs
jmp
cmpl
mov
cmp
adc
jb
xchg
add
xchg
add
loop
mov
repz
add
sub
cmpsl
push
outsb
out
and
call
mov
push
or
add
stc
stc
adcl
icebp
dec
bnd
jmp
sub
sbb
bound
inc
loope
jns
mov
mov
or
mov
jmp
jnp
mov
mov
xchg
mov
addr16
roll
jo
add
fdiv
movsl
add
jmp
xchg
jle
xchg
mov
cmpl
push
adc
add
cld
and
jne
fimuls
add
pop
pop
clc
fbld
adcl
push
fiaddl
sbb
push
je
adc
push
dec
sbb
in
add
in
idiv
loop
add
add
daa
stc
ljmp
imul
dec
mov
scas
mov
add
mov
mov
push
je
add
jae
rcl
test
mov
add
mov
in
lods
inc
fdivs
dec
xchg
stc
add
or
outsl
imul
push
dec
adc
inc
jl
lret
push
lret
scas
jg
test
xchg
fiaddl
jle
test
pushf
jo
pop
xchg
mov
aad
sub
push
or
xchg
mov
adc
out
mov
jmp
fwait
addb
pop
popa
stos
or
push
out
or
dec
cltd
out
mov
mov
repz
icebp
add
xchg
ljmp
adc
mov
mov
insb
sbb
push
mov
testb
aaa
pop
mov
add
xchg
je
jg
nop
sti
lahf
add
js
mov
iret
or
hlt
mov
cmpsb
cmp
add
jle
lods
cmp
mov
jnp
fadds
add
dec
adcl
push
or
loopne
jmp
jge
ss
fildl
jo
scas
insl
in
sti
xlat
insl
out
test
in
mov
ret
sub
cs
fs
popa
in
add
push
inc
or
mov
xchg
add
jecxz
add
lds
pop
enter
and
jmp
ret
jge
aaa
leave
or
in
xor
xor
add
repz
add
jmp
xor
add
hlt
xor
add
xor
add
fdivs
add
fdivl
add
fnstenv
add
shll
add
in
add
cmp
cmp
jnp
aad
jnp
aad
jnp
aad
jnp
aad
jnp
iret
cmp
addr16
cmp
jo
cmp
push
sarl
psrlq
ss
int3
scas
lahf
test
sub
and
cmp
test
cmpb
ja
out
test
addr16
je
mov
cltd
iret
clc
lods
or
xchg
insl
inc
and
inc
lcall
mov
repnz
mov
mov
cltd
add
sbb
mov
into
adc
mov
into
and
scas
into
xchg
mov
adc
int
pushf
je
imul
inc
adc
or
in
ficoms
push
hlt
call
xor
push
std
xor
pop
leave
xor
fsubrl
xchg
enter
enter
movsb
enter
mov
push
or
dec
stc
cmpb
add
test
fs
xchg
pop
xor
pop
je
outsl
pop
add
or
jb
fwait
xor
and
insl
in
rcrl
xchg
jnp
lret
inc
mov
dec
mov
push
idivl
mov
iret
lds
add
mov
cmpb
or
icebp
pop
push
cmp
negl
cmp
inc
int
fiaddl
imul
cmp
lds
outsb
mov
dec
mov
hlt
adc
divl
hlt
je
adc
add
mov
and
ja
fisttpll
xor
xor
jp
and
sub
and
clc
call
std
jge
xchg
mov
jecxz
adc
adc
add
ja
std
xchg
add
sti
xchg
test
dec
add
ss
sub
xor
xor
stos
and
add
sub
add
push
xor
sub
add
dec
out
and
add
lock
test
xor
test
mov
or
xchg
lea
jnp
roll
testb
jnp
mov
add
sbb
aas
jnp
mov
sub
cmp
sarl
subl
mov
sbb
jg
sbb
mov
test
repnz
testb
jnp
mov
add
push
mov
xchg
jnp
jmp
in
mov
xor
fwait
xchg
jnp
jmp
fnsave
loopne
sti
call
jbe
mov
add
loopne
test
mov
sub
jmp
sbb
or
cmove
sub
fisubrl
lds
orb
pop
cltd
dec
jmp
add
int
and
fisubrl
lret
and
js
imul
js
xor
repz
test
xchg
cmp
inc
pop
scas
imul
js
mov
repz
test
or
orl
lds
add
cmp
shrl
mov
hlt
add
js
jae
movsl
inc
jmp
aas
repz
psrld
cmp
stc
mov
or
hlt
add
js
push
je
lods
inc
add
aad
bound
stos
sub
sbb
xor
jnp
and
lea
call
mov
xor
add
push
inc
jns
sarl
add
add
mov
xchg
sbb
xorl
add
pop
sub
popf
or
add
xor
add
push
sub
mov
or
call
sbb
aam
or
add
out
jne
cmp
out
jle
jp
jnp
sarb
lock
ret
in
arpl
sub
es
pop
out
dec
pop
push
push
mov
loop
sub
cmp
jge
jg
jbe
mov
incb
movlhps
icebp
pop
js
loop
add
ja
push
cmp
inc
dec
es
cltd
shlb
xchg
jne
lock
add
cmpsb
lret
xor
mov
cld
add
nop
push
push
stos
decl
test
mov
add
ljmp
mov
cltd
add
test
mov
or
imul
jmp
add
xchg
or
pop
xor
push
jle
ja
add
faddl
jnp
data16
xchg
mov
mov
xor
add
inc
jge
pop
fldl
jnp
test
iret
add
add
popf
add
js
js
mov
cltd
add
xchg
cmp
popf
cmp
lds
cmp
lds
out
pop
push
jmp
xchg
orl
js
push
call
test
lods
and
scas
jno
nop
add
jno
mov
inc
lahf
scas
imulb
rol
shlb
mov
push
push
jmp
pop
nop
add
mov
add
mov
nop
aaa
mov
jb
or
cmc
mov
cmc
cmc
mov
lds
jae
fnstenv
pop
adc
mov
pushf
push
mov
sub
div
jg
mov
std
call
jno
push
mov
mov
mov
lret
or
dec
ja
mov
lock
sub
jge
das
leave
jl
outsb
jno
or
mov
jmp
ja
mov
hlt
idiv
insb
movsb
jge
jnp
ror
pop
ret
aas
ret
daa
ret
xchg
jns
clc
aaa
test
out
test
mov
test
xchg
or
mov
sub
rol
add
lahf
or
mov
cmp
add
insb
jbe
and
xchg
and
incl
jbe
jo
add
in
jnp
dec
jo
add
aam
jbe
and
xchg
sbb
mov
mov
add
pop
jno
jle
jmp
aas
push
mov
lahf
jmp
jnp
shll
add
push
mov
repnz
jnp
loopne
lds
jno
jbe
jmp
into
ds
call
jp
out
sub
fs
add
cld
lret
inc
pop
add
dec
hlt
mov
ret
mov
movsl
jo
mov
fwait
bound
fildll
inc
mov
add
add
mov
jne
xor
sub
add
loop
lret
cmp
sahf
mov
add
adc
adc
js
inc
xchg
cli
lret
insl
fnstenv
dec
js
lock
out
rcr
jns
popf
add
aad
divb
repz
mull
jle
or
add
ss
mov
push
inc
ss
add
ss
mov
jae
push
jmp
push
icebp
dec
xchg
mov
sbbl
or
mov
mov
cmp
mov
repnz
sbb
add
sbb
mov
mov
imul
outsl
jnp
filds
repnz
mov
add
mov
call
outsl
jae
pop
mov
jg
jne
mov
cltd
mov
cli
into
fidivrs
jns
jge
pop
mov
jge
xor
dec
icebp
call
or
int3
xchg
fistpl
jae
insb
or
clc
fdivr
inc
repnz
lcall
push
mov
mov
mov
in
clc
cs
dec
lds
clc
mov
in
int
cmp
xchg
dec
or
inc
je
adc
and
or
jl
jnp
push
std
in
mov
jnp
jnp
in
loopne
aad
jp
add
jge
jge
jl
out
mov
add
jge
add
in
mov
jne
xchg
je
outsb
fldenv
sbb
jmp
ret
setns
add
pop
pusha
pop
jne
jmp
std
insb
lock
out
out
repnz
cmpb
jmp
mov
repnz
fwait
jp
repz
lods
test
mov
jbe
mov
int3
int
lds
mov
jo
mov
jmp
movsl
out
std
sbb
mov
push
ret
xor
sub
aaa
filds
jb
subb
adc
mov
cld
pop
push
mov
dec
ljmp
js
jge
mov
jae
mov
scas
mov
mov
dec
pop
sub
scas
xor
pop
jne
mov
imul
js
mull
sti
push
xchg
xor
insl
add
lds
jge
jo
cld
jmp
std
or
mov
add
shlb
and
mov
add
hlt
idiv
sub
push
xchg
mov
sub
sarl
xchg
add
jge
mov
fmuls
loop
adc
cmc
mov
stos
loopne
dec
mov
stc
inc
add
mov
imul
ljmp
icebp
jle
jnp
jnp
iret
cmc
add
lret
cld
jecxz
decl
lds
lea
repnz
dec
adc
jnp
xlat
mov
popa
lock
push
jl
in
enter
or
daa
sarb
xlat
in
add
jl
adc
emms
in
subl
lds
jp
add
adc
add
test
mov
call
add
jnp
mov
out
aam
add
xor
xchg
jl
jo
outsl
jecxz
jnp
scas
xchg
cltd
fmuls
mov
jb
fbld
jae
xchg
jmp
jns
xor
add
in
testl
or
add
out
lods
in
pusha
lock
jns
mov
jmp
fnstcw
shll
mov
add
ss
add
imul
repz
pushf
pushf
incb
add
and
js
add
in
testb
add
pop
cmp
jbe
jmp
jmp
add
add
not
pop
jno
fidivs
sbb
xchg
or
rorl
xor
pusha
gs
lock
adc
js
push
std
decb
mov
in
addr16
cmp
bound
mov
ja
xchg
pusha
orl
add
cmc
data16
push
adc
adc
dec
stos
cld
dec
or
sbb
add
ljmp
imul
loop
sarl
test
add
mov
adc
rcrb
mov
or
stc
xchg
mov
shll
shl
data16
mov
push
sahf
sbb
mov
jge
ds
pop
adc
out
mov
daa
adc
add
xchg
insb
wbinvd
lock
mov
jnp
xchg
repz
ljmp
jge
inc
xchg
popf
imul
dec
testb
push
test
jb
mov
mov
int3
repz
adc
add
fstl
mov
test
add
add
jnp
xor
adc
jnp
iret
jmp
add
mov
mov
or
and
add
cmp
std
or
jnp
jno
test
push
mov
adc
jmp
xchg
movl
jp
xchg
aad
push
rclb
jnp
aas
repz
sti
push
sbb
xlat
shlb
add
sub
sahf
stos
jg
repz
loop
jnp
sbb
notb
popf
sbb
aas
or
and
add
push
jl
adc
jnp
je
das
addl
lods
neg
add
pop
adc
xlat
jecxz
xor
or
jl
jmp
clc
and
jmp
pop
dec
fsubrp
xor
insb
adc
jb
rorb
jne
mov
add
insb
cmp
sarl
insl
roll
ljmp
repz
call
insl
mov
jl
jmp
js
ror
popf
nop
xchg
mov
ds
clc
ja
add
insl
push
mov
push
sbb
fsts
mov
bound
or
push
sbb
test
fmuls
inc
imul
decl
mov
adc
adc
adc
jg
js
adc
pop
ljmp
adc
adc
mov
jbe
push
pop
adc
push
mov
repnz
adc
mov
sbb
add
cmp
add
push
loope
lock
adc
jnp
shl
repnz
test
jp
and
hlt
push
bnd
bound
push
mov
pop
lret
jmp
mov
dec
enter
mov
or
push
outsl
pop
sti
adc
fs
jnp
mov
insb
wbinvd
add
jnp
mov
repnz
add
ret
sub
sbb
leave
iret
mov
testl
xor
add
aas
push
inc
outsb
loop
and
add
lret
add
out
add
push
js
mov
mov
andb
add
mov
add
cmp
out
jns
jmp
add
jmp
add
sub
in
jmp
cmpsb
jae
mov
imul
jp
in
fisttpll
push
fucomip
xlat
and
mov
add
mov
jmp
jmp
dec
xchg
jns
add
sti
fisttpl
aas
dec
push
cltd
push
xlat
jecxz
inc
js
sub
push
add
repz
arpl
and
jmp
jns
push
arpl
sbb
jmp
add
push
or
loopne
std
outsl
push
nop
lea
ja
fsts
les
stc
mov
js
pusha
jo
and
jmp
dec
jmp
add
xchg
adc
pop
xchg
jge
out
add
pop
or
or
mov
aad
mov
pop
adc
bound
push
or
enter
push
mov
std
scas
push
adc
dec
or
xchg
jge
out
add
adc
adc
xchg
outsl
jne
scas
adc
pop
or
fstl
cld
cmp
data16
cmpb
out
test
lock
adc
jnp
inc
cld
clc
jmp
jns
and
and
test
dec
add
add
jp
xchg
imul
jnp
testl
or
pop
stc
adc
mov
test
insl
xchg
mov
cmpsb
fsubrs
int3
jecxz
cmp
adc
loopne
cmc
pop
adc
jnp
adc
mov
loope
or
jnp
insb
inc
add
push
mov
mov
mov
adc
jnp
fs
js
add
in
stc
sbb
sub
sbb
loope
jmp
loop
out
arpl
push
jp
add
outsl
mov
leave
xchg
jno
je
push
adc
dec
mov
shll
jl
cmc
adc
stc
mov
jnp
lcall
shll
add
add
mov
subl
insl
mov
jle
jmp
js
jmp
sbbl
xchg
idivl
xchg
pop
lock
ljmp
add
cmpsl
fs
hlt
inc
divl
inc
adc
add
repz
xchg
mov
mov
dec
test
lock
jmp
nop
loop
push
cs
ffree
mov
iret
lds
dec
mov
pop
xchg
and
mov
jp
add
mov
pop
dec
shlb
sbb
repnz
add
xchg
xchg
mov
call
mov
cmove
repnz
and
bound
push
cld
xlat
cmp
test
add
add
jbe
pusha
and
sbb
push
dec
cs
adc
data16
imul
mov
xor
mov
mov
adc
in
cwtl
xor
add
lock
test
mov
imul
pop
jae
push
rorl
ljmp
scas
mov
add
mov
push
push
ficomps
hlt
add
inc
imul
mov
cmp
sbb
int3
clc
dec
sub
idiv
cmp
mov
hlt
add
push
std
cmp
insb
outsb
inc
adc
pushl
add
mov
gs
push
loope
jne
nop
or
add
iret
add
cltd
sldt
jg
jbe
ja
lods
jecxz
out
add
mov
mov
je
add
mov
fnsave
mov
and
add
bound
inc
je
mov
fildll
inc
mov
push
xchg
add
stc
add
les
orl
fcomip
mov
divb
in
pop
cmp
dec
loope
test
testb
mov
cltd
jl
push
fmuls
push
testb
mov
mov
lock
jb
and
jmp
pop
dec
push
cmp
int3
dec
sub
mov
adc
call
mov
dec
lock
shrb
pop
mov
mov
jmp
pop
cmp
js
add
add
add
je
test
testb
pop
int
fdivs
add
mov
rolb
add
mov
jge
in
cmp
mov
or
adc
xchg
xchg
or
adc
scas
xchg
add
pop
decl
inc
pop
lcall
jae
adc
roll
dec
lock
lret
std
out
jl
mov
jnp
add
adc
cmc
scas
rol
add
js
jne
mov
fsincos
cli
outsb
in
in
push
je
mov
xor
in
pop
cmp
or
rorl
inc
repnz
add
jbe
in
mov
in
add
jne
mov
insb
stc
es
fstpl
bound
ja
jae
cmc
and
mov
stos
sarb
mov
sbb
mov
jle
xorl
push
pop
scas
imul
push
loop
cmpsb
jae
aas
jecxz
add
cli
test
jnp
je
shlb
stos
adc
shlb
je
out
cmp
sbb
push
mov
jno
imul
shlb
add
adc
jno
movsl
cmc
mov
inc
sub
add
jnp
ja
jnp
add
fidivrl
lahf
jp
pop
movsb
stos
rcrb
movsl
insl
rorl
add
sub
aaa
call
adc
js
jb
xorb
mov
and
jmp
pop
inc
or
test
jmp
addr16
dec
icebp
pop
jo
adc
jmp
sub
push
icebp
adc
mov
js
jmp
xchg
add
pusha
mov
adc
jmp
add
add
jno
ret
ficoms
int3
ficoms
mov
add
add
and
add
jne
loop
inc
inc
popa
dec
sarb
psubd
lods
xor
add
loop
jae
mov
mov
add
jbe
orl
xchg
mov
dec
lods
add
mov
mov
push
das
add
mov
and
jl
int
sarb
cld
jnp
inc
int3
aas
sub
aaa
rolb
lock
inc
dec
cld
add
adc
out
dec
or
inc
int3
aas
sub
aaa
push
mov
clc
imul
movsb
in
cwtl
and
add
lock
test
jp
push
mov
xchg
inc
fdivrs
sbbl
and
sub
shll
mov
jnp
lret
mov
pushf
mov
add
sbb
repnz
adc
jge
ja
add
jmp
cmp
iret
add
push
jge
adc
add
lods
aas
das
xchg
aas
inc
lods
aas
aas
movsb
aas
aaa
arpl
mov
or
jb
call
add
mov
jnp
jl
ret
push
cmp
ljmp
adc
ret
mov
testb
sub
mov
jl
add
jbe
fmuls
imul
js
pop
stos
mov
mov
sbb
out
pop
add
add
jne
js
inc
xlat
js
sbb
or
push
bound
lea
out
mov
cmp
or
jp
test
push
cmp
jae
fnop
jno
jp
test
xor
or
fcmovbe
sub
mov
xchg
inc
cmc
or
add
test
fwait
xchg
mov
add
pop
adc
add
test
mov
into
sbb
insl
pop
pop
addr16
int3
pop
push
out
mulb
and
add
jae
lea
lret
push
popf
loop
adc
add
into
jl
inc
inc
inc
enter
in
xor
mov
dec
mov
mov
mov
pusha
mov
mov
gs
jnp
jl
int3
sub
in
or
testb
idivb
clc
sar
test
lods
ja
jae
into
or
fnstsw
dec
inc
xchg
and
jnp
add
std
cwtl
adc
jnp
cld
jnp
push
jp
cmpb
in
sbb
jnp
ja
dec
rolb
add
push
in
xchg
inc
inc
test
in
enter
into
sbb
mov
cmp
jnp
jmp
cmp
mov
ss
pop
aam
mov
jle
cmp
add
gs
mov
jmp
add
jb
cli
enter
ja
add
outsb
fwait
mov
in
add
inc
insb
add
jnp
insb
test
cmc
push
cmp
jae
jl
mov
testl
jb
or
or
add
push
aam
mov
std
imul
fldl2e
out
add
push
jmp
cli
cmp
jmp
xor
popa
loop
mov
add
cmp
jmp
mov
shl
rorl
js
andl
mov
jb
aaa
push
jmp
ret
xchg
jmp
js
mov
jl
jmp
iret
shl
add
push
lahf
sbb
out
sbb
mov
test
xchg
mov
add
mov
cmc
push
mov
jge
push
mov
adc
mov
mov
ljmp
data16
mov
in
std
jmp
int
add
xor
les
pop
mov
add
arpl
mov
or
rorb
idiv
jnp
mov
add
pop
jo
add
jmp
cwtl
jbe
scas
cs
cmp
loop
call
xor
jbe
movsl
das
int3
mov
das
int3
scas
popf
das
int3
inc
out
jne
add
add
in
mov
in
add
mov
add
out
pop
jbe
jnp
out
maxps
negb
add
inc
clc
pop
stc
clc
sub
mov
in
add
loop
inc
add
movsb
mov
mov
dec
repz
faddl
dec
jmp
out
mov
add
xchg
fsubrs
pushf
push
jecxz
jnp
mov
jb
pop
or
testl
jmp
pop
ja
loope
rcrb
pop
mov
jl
jne
jne
add
dec
fiaddl
add
iret
add
lods
adcb
data16
jl
jne
je
add
and
test
jmp
movsb
mov
lds
push
mov
daa
cmpb
cmp
aas
mov
test
call
test
jmp
je
pop
aaa
add
adc
jmp
roll
bound
test
test
add
xchg
lds
int
inc
stc
sti
or
adc
js
dec
frstor
push
mov
mov
ret
cli
inc
in
call
mov
mov
jge
roll
mov
pop
dec
mov
rorb
decl
sbb
test
jne
jne
sahf
lds
int3
inc
xchg
int3
cmpsb
xchg
int3
rcpps
mov
rcrb
popa
stc
jmp
xchg
int3
push
out
adcl
or
mov
push
fisttpll
add
mov
jle
push
cmp
jnp
sbb
add
outsl
adcb
es
fsubl
add
dec
sbb
les
les
xor
stc
add
adc
jns
iret
lret
add
clc
lahf
stc
jl
out
out
mov
pop
xor
js
mov
cmp
jo
leave
or
hlt
fsts
lock
cli
push
test
mov
stc
clc
clc
in
out
mov
add
mov
jnp
jmp
push
add
mov
dec
jb
dec
add
mov
mov
int
dec
insb
pop
orb
test
xchg
negl
addr16
mov
jno
movsb
lret
je
std
add
push
in
adc
sub
test
arpl
push
cmpsl
icebp
mov
push
xlat
add
sahf
testl
mov
mov
push
fwait
mov
add
add
add
push
adc
js
cmp
bnd
mov
mov
jmp
mov
ljmp
adc
jmp
inc
mov
jmp
sub
or
jmp
js
mov
cmc
roll
sub
bound
pusha
loopne
add
jmp
out
popf
add
negl
popa
jnp
testl
int3
and
add
sbb
add
jge
scas
in
aad
mov
ja
adc
jne
jno
xchg
mov
pop
adc
fstl
mov
loop
fistl
mov
roll
adc
add
aam
add
pop
call
adc
mov
call
out
jge
jp
out
decl
pop
pop
leave
xor
push
pop
int3
jnp
test
lock
push
dec
add
push
add
inc
jmp
sbb
add
mov
sub
outsl
adc
int
std
push
stc
jnp
int3
add
cli
sbb
mov
idiv
cmp
mov
add
pop
push
stc
jnp
test
mov
jae
pop
mov
push
pop
andl
rcrb
cmp
adc
cmc
jg
out
loop
movsb
xchg
mov
add
cwtl
add
leave
cld
push
mov
dec
or
jmp
push
xor
addl
scas
test
inc
sbb
ss
sbb
inc
xchg
jmp
add
mov
scas
sbb
mov
or
pusha
fldl
add
pop
mov
xchg
mov
ljmp
pop
jmp
test
in
add
movaps
in
add
add
test
dec
in
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jne
dec
out
mov
dec
idivb
add
jns
subb
dec
pop
add
xor
loopne
adc
add
sarb
das
mov
xor
push
dec
or
push
sub
mov
inc
cwtl
js
and
ljmp
pop
adc
sbb
out
add
xchg
mov
rorb
mov
add
mov
add
mov
add
mov
lahf
mov
add
mov
mov
mov
popf
mov
add
mov
jnp
add
js
add
idivl
add
idivl
add
idivl
add
idivl
add
idivl
add
idivl
add
testl
imul
or
lds
in
cmp
mov
js
mov
repnz
addb
fs
jl
push
stc
js
fwait
outsl
sti
mov
icebp
pushf
jb
or
mov
or
les
add
lods
clc
mov
es
jmp
mov
fs
jl
xlat
shlb
es
testb
inc
push
stc
mov
mov
adc
or
aam
or
dec
icebp
mov
and
in
lods
dec
mov
movsb
dec
scas
iret
adc
push
adcl
pop
jg
stos
and
add
decb
mov
add
mov
jecxz
std
pop
or
bound
rorb
add
outsb
jno
test
mov
cmpsb
leave
jecxz
leave
jge
ds
bound
ljmp
cmp
cltd
pushl
push
icebp
jno
push
jo
outsb
adc
jmp
pop
push
cmc
cmc
cmp
int3
insl
jmp
add
or
cmp
aam
int
or
add
idiv
lea
or
mov
mov
idivl
mov
push
and
add
jecxz
and
pop
jge
jbe
lods
clc
cmp
stc
lea
lea
call
adc
xor
shrl
xchg
cmp
roll
adcl
jae
stc
fdivl
cmc
clc
call
mov
push
dec
clc
sarb
sub
xor
imulb
push
and
mov
push
cmp
push
sbb
jne
or
push
pop
or
or
test
into
imul
pop
test
xchg
xchg
bound
je
scas
std
out
add
jne
or
aad
repnz
and
mov
out
sbb
add
cmp
add
add
daa
sbb
testl
out
or
mov
lret
and
into
call
xchg
jmp
xchg
ljmp
mov
add
jnp
loopne
jnp
enter
and
mov
jnp
rolb
mov
add
jnp
mov
pop
jnp
test
add
lahf
pop
jnp
cwtl
xlat
hlt
mov
mov
mov
ja
jp
add
xchg
add
movsb
add
test
pop
dec
inc
add
les
dec
dec
les
inc
inc
les
ds
xor
cs
push
es
ss
int3
les
divb
clc
scas
inc
std
add
push
xchg
add
bound
fildl
or
sub
or
dec
flds
popa
push
add
ds
ljmp
lds
mov
dec
push
pop
and
add
and
xchg
add
sub
sahf
popf
mov
mov
add
loopne
push
ds
adc
or
mov
lea
ds
jg
mov
pop
cmp
int3
and
les
adc
inc
jno
mov
pop
push
add
mov
sbb
jmp
enter
stos
cmpsl
sbb
mov
and
shl
jnp
add
jnp
out
sub
cmp
inc
add
cmpb
or
aas
mov
jge
repnz
cmp
repnz
add
mov
sub
outsl
test
xorl
add
jnp
jp
test
rolb
jb
popf
cli
cwtl
mov
int
enter
loopne
push
enter
jmp
jnp
daa
add
mov
add
mov
loopne
xor
mov
inc
mov
mov
out
xor
jmp
push
sbb
jmp
mov
cli
sbb
jb
out
adc
or
mov
jecxz
notb
icebp
and
into
add
scas
lods
fs
call
mov
rcl
cwtl
fdivrs
aas
mov
lods
js
jmp
hlt
inc
nop
hlt
orl
add
mov
jb
push
push
sub
fidivrl
jg
test
idiv
adc
cmp
add
js
rorl
inc
enter
adc
sarb
sti
fisubs
in
xor
clc
adc
add
nop
ljmp
outsb
push
or
push
add
rolb
shll
adc
cld
call
loope
sub
cmp
and
mov
insb
lret
pop
cmp
rolb
repnz
lds
gs
dec
add
adc
iret
cmp
jge
leave
shll
sub
dec
or
add
and
dec
push
sbb
mov
xor
adcb
les
sub
testl
jno
jmp
adc
je
xchg
dec
loope
dec
jmp
test
push
xor
hlt
xchg
bound
decl
rorb
test
add
jnp
add
jnp
sub
aas
std
cmp
mov
jle
cmp
mov
add
add
jnp
sub
std
mov
sub
push
stc
mov
test
mov
icebp
ret
and
inc
or
jo
add
xor
pop
xchg
add
mov
inc
xchg
mov
mov
mov
nop
arpl
dec
nop
arpl
lock
mov
sbb
cmpsl
outsl
or
sbb
add
sub
stos
fsts
stos
push
pop
add
sub
je
flds
add
sbb
mov
jp
aaa
outsl
rorl
inc
icebp
sbb
mov
pop
jl
mov
or
push
add
mov
fdivs
push
jl
xchg
fs
jge
ja
mov
cmpsb
xor
icebp
pop
inc
pop
add
xchg
sub
cmp
testb
dec
jne
shr
test
push
imul
mov
fcmovne
add
loop
sub
test
rolb
ret
cmc
jmp
int
addl
add
adc
js
mov
lods
adc
jg
add
test
test
shl
into
push
scas
mov
or
mov
pop
mov
add
mov
cmc
push
fdivrs
orl
and
arpl
psubsw
jle
mov
aad
mov
mov
fcom
push
adc
add
mov
add
push
sub
je
mov
rol
mov
call
test
testb
aaa
outsb
and
xor
sub
insl
sub
popa
mov
test
dec
xor
sub
filds
fmuls
testl
jp
mov
stc
gs
pop
cmp
and
mov
stc
add
jbe
jnp
dec
jmp
mov
lods
mov
and
hlt
add
js
cmp
pop
xchg
stos
pop
add
add
mov
jnp
pop
or
and
mov
cmp
lea
test
jnp
pop
or
inc
add
sub
outsl
push
jmp
enter
cmp
mov
fs
dec
mov
cmp
dec
add
xlat
pop
jae
inc
orb
add
in
cmp
or
xor
mov
sbb
pushf
pop
inc
jo
aad
pusha
lcall
lahf
sub
outsl
mov
add
outsl
or
pop
sbb
outsl
cmp
push
pusha
sbb
ljmp
pushf
jnp
sbb
sub
lret
out
push
andl
sbb
ret
ret
mov
repnz
mov
push
adc
mov
cli
stc
sub
mov
jecxz
mov
shlb
and
js
mov
xchg
sar
in
xor
mov
mov
xchg
iret
pop
outsb
lds
adc
mov
sarl
add
or
add
jge
dec
icebp
or
mov
add
test
and
fisttpl
test
push
cmc
sub
xlat
add
pop
jg
dec
das
push
cmp
jb
pop
ss
das
pop
jbe
jae
mov
sbb
and
pop
push
or
or
ljmp
loop
add
icebp
lock
xchg
inc
xor
push
adc
jle
mov
and
cs
cmp
ljmp
mov
ret
test
dec
cmc
and
pop
sub
mov
lahf
and
lea
jg
movsb
std
jnp
stos
punpcklbw
jle
add
add
repnz
jl
jecxz
push
into
add
das
fistpll
int3
inc
jo
in
clc
out
leave
test
cmp
test
jecxz
xchg
jnp,pt
adc
stos
add
xchg
push
jnp
add
mov
mov
daa
xor
push
add
adc
add
loopne
jg
mov
ja
das
jge,pt
scas
int
pop
divb
scas
inc
and
xchg
mov
push
cld
inc
std
or
cmp
jp
scas
jae
clc
lret
incb
jl
enter
mov
add
cmp
jmp
std
addr16
test
mov
add
faddl
add
cmpsb
pop
pop
inc
add
jmp
add
lcall
in
mov
fcmovu
das
jbe
fidivl
push
dec
imulb
int3
insb
push
imul
or
inc
test
sub
xor
jo
iret
cmp
mov
adc
std
imul
push
andl
push
mov
shr
xor
ljmp
or
add
js
xchg
dec
add
std
lds
ret
add
cli
out
stos
movsl
mov
pop
mov
rcrb
outsb
sub
or
inc
xchg
mov
inc
paddsw
dec
test
fcompl
sbb
inc
data16
dec
test
fdivr
mov
repz
push
call
jne
outsb
or
bound
mov
inc
add
dec
inc
adc
dec
in
lcall
adc
mov
ja
clc
call
insb
inc
in
xchg
add
mov
inc
jnp
jne
cmpsl
in
jecxz
movsb
add
add
test
jnp
push
cmp
repz
xor
test
mov
add
dec
insb
sub
shl
out
xchg
scas
jbe
cli
jp
clc
cmp
test
cld
cmp
mov
dec
jmp
jnp
jg
cmpsl
out
and
mov
test
cmp
mov
xor
in
push
sbbl
sbb
je
movsb
jl
add
mov
mov
ds
js
inc
iret
mov
jp
cltd
inc
cli
dec
ret
test
mov
cmp
sub
call
mov
fdiv
js
mov
lods
outsb
jnp
jmp
clc
in
pop
hlt
add
jmp
ss
leave
popa
or
bnd
lcall
insl
hlt
dec
out
jmp
mov
xor
ret
add
pop
mov
cli
sbbb
add
sti
inc
bnd
mov
jmp
sbb
inc
out
in
add
js
inc
sbb
adc
xchg
pop
pop
pop
pop
cmp
movsb
divb
xlat
and
insl
and
cld
test
dec
fldl
repnz
push
testb
mov
inc
call
push
jge
test
daa
idiv
rorb
sub
lea
and
ret
shlb
adcl
imul
jae
jmp
xchg
mov
shll
inc
jg
mov
xchg
ja
add
xchg
add
mov
incb
adc
pop
mov
sbb
mov
or
outsb
inc
mov
inc
incb
in
cmp
iret
pop
sbb
jns
pushf
stc
les
mov
cs
je
mov
test
push
xchg
icebp
leave
sbb
push
add
adc
mov
push
lahf
mov
jnp
add
lock
sbb
sbb
sub
cmpsb
jne
pop
add
jecxz
jne
stc
into
sub
std
jnp
mov
int3
dec
jmp
inc
hlt
push
leave
aas
repnz
iret
cmpsb
mov
cld
nop
aas
loop
popa
lahf
scas
cmpsb
lahf
inc
hlt
fidivrs
jg
cmpsb
xchg
pop
push
cmp
mov
ja
lock
jge
mov
rcrl
xchg
xor
mov
pop
jle
jo
aas
stos
add
je
bound
and
pop
hlt
or
pop
js
pop
hlt
xor
jmp
hlt
mov
xor
xor
test
fs
movsb
not
mov
cmpsl
mov
jbe
roll
mov
mov
mov
xlat
dec
ret
sbb
stos
js
jmp
bound
cmp
insl
cmc
pushf
insl
cli
scas
push
mull
adc
popa
nop
push
mov
cmp
aaa
sub
xlat
lds
mov
xlat
lds
cmp
add
les
cmp
outsb
add
cltd
inc
mov
push
jmp
cld
add
mov
popf
and
mov
add
adc
sar
rorb
mov
add
cmc
je
mov
dec
or
decb
add
jecxz
mov
leave
nop
sbb
push
add
adc
pop
jae
fnstcw
sbb
movsb
add
pop
mov
loope
inc
mov
aas
pusha
push
int3
aaa
js
int3
das
sub
push
add
add
test
loop
movsb
sub
or
fdivrs
and
mov
test
bound
mov
mov
jmp
adc
jge
xlat
push
lock
loop
inc
sub
add
clc
scas
push
add
aaa
adc
cmpsb
ret
mov
jmp
mov
call
mov
add
sbb
inc
outsl
inc
mov
inc
mov
ljmp
mov
mov
mov
adc
pop
cmp
add
add
fs
sahf
enter
popf
sub
testb
inc
jg
shrl
cmp
ror
xchg
cmp
pushf
add
push
sbb
mov
insb
mov
cmp
cmc
cmpb
xlat
test
pop
mov
mov
cmp
test
lcall
add
jb
xchg
mov
add
jmp
jb
jl
xchg
dec
mov
add
jb
xchg
mov
add
stos
sbb
ljmp
mov
cmp
mov
push
push
xchg
jge
lods
cmp
xchg
sub
cmp
push
cmp
push
xchg
jge
stos
ljmp
xchg
cmp
xchg
mov
das
xchg
pusha
push
adc
dec
push
test
xlat
das
mov
jg
movl
cmp
mov
pop
or
sbb
testl
add
push
lock
mov
stc
lcall
data16
jmp
jecxz
cmp
fisubl
jmp
adc
add
fisttpll
mov
push
push
andb
and
test
fcmovnu
cmp
adc
add
mov
cs
scas
lods
rclb
pop
rcll
clc
or
and
xor
inc
and
push
int
insl
outsb
sub
mov
test
add
hlt
mov
not
push
sbb
lar
out
repnz
or
adc
outsb
xor
lods
adc
cmp
pushf
jb
dec
faddl
jge
lock
adc
pop
popa
sub
mov
stc
mov
adc
das
adcb
cmp
arpl
inc
adc
ss
pop
mulb
out
inc
aas
rcrb
loopne
adc
loopne
adc
loopne
ss
xor
push
dec
jmp
add
mov
add
jmp
loopne
daa
fildll
inc
icebp
mov
add
xchg
stc
jl
clc
addr16
push
mov
mov
adc
sbb
loop
push
push
push
mov
pushf
mov
add
js
mov
js
mov
jb
ds
xor
daa
xchg
js
add
inc
sbb
shll
ret
bound
add
js
mov
xor
jo
dec
icebp
scas
jmp
xor
xor
add
fisttpl
call
jae
call
mov
jge
jle
jg
or
push
mov
mov
fs
jmp
mov
adc
pop
xchg
push
mov
std
mov
ljmp
and
sarl
adc
mov
adc
add
mov
leave
sarl
mov
mov
pusha
add
lret
imul
scas
add
xor
fistpl
jg
insb
add
rorb
rcl
arpl
das
stc
insb
xor
jb
add
pop
dec
int3
inc
jo
int3
aas
sub
push
lock
sub
sbb
pop
enter
lds
mov
push
outsb
sar
gs
mov
add
sbb
jge
cmpsb
cmpsb
add
outsb
add
mov
push
or
xorl
push
ja
ret
lds
pop
adc
popa
lret
and
cld
inc
xchg
mov
andl
or
sub
add
add
pop
bswap
adc
lea
sahf
xor
mov
dec
pop
and
sbbl
clc
lret
test
mov
adc
adcb
jne
sti
push
call
incb
ja
mov
adc
add
int
or
dec
in
sub
push
xrelease
push
jb
cwtl
push
aas
rolb
fnsave
lret
ja
add
arpl
mov
sbb
or
xor
hlt
xchg
pop
xor
jmp
test
inc
and
std
arpl
mov
mov
add
mov
mov
pcmpgtd
pop
in
fmull
bound
mov
push
bound
push
add
popa
pusha
cld
je
adc
inc
and
or
or
roll
inc
adc
dec
or
dec
ljmp
push
stc
lcall
stc
incl
int
dec
or
enter
jmp
decl
pop
stc
and
pop
mov
int3
in
inc
xor
ds
test
jge
fdivrs
ss
fadds
pop
ds
pop
dec
and
xchg
ja
xchg
test
mov
daa
nop
push
icebp
mov
movsb
jne
pop
nop
jne
push
mov
mov
add
ja
pop
mov
ja
lock
ja
pusha
jecxz
fadds
call
ficoms
lock
fimuls
sub
dec
fdivs
mov
lock
fistps
add
pop
pushf
cmp
js
mov
push
clc
ficoms
test
jne
mov
and
cmp
mov
xor
add
int
add
cltd
or
fstpt
ret
hlt
xchg
sbb
ja
cmp
jb
hlt
push
and
jg
mov
pop
add
les
imul
test
jle
mov
sub
gs
ret
stos
add
or
and
jmp
dec
push
xor
jmp
inc
ret
inc
jmp
xchg
ret
inc
jmp
mov
inc
jmp
pop
mov
sub
aad
mov
mov
jmp
inc
mov
scas
mov
add
js
mov
pusha
cld
mov
data16
clc
dec
sub
cwtl
mov
testb
neg
insb
mov
add
jnp
test
mov
xchg
xor
clc
cmp
adc
loop
mov
int3
fcoml
ds
xchg
mov
mov
inc
and
push
ds
sahf
divl
mov
repnz
push
pop
and
push
lret
push
pop
and
mov
jmp
push
lret
mov
or
add
cmp
sar
cmp
or
pop
repnz
scas
adc
xor
arpl
or
fisubrs
or
fisubrs
sbb
adc
xor
into
and
inc
icebp
shll
inc
add
fstpt
lock
jp
lock
mov
mov
in
call
test
je
cmp
ja
mov
xchg
mov
lds
imul
clc
inc
int3
aas
pusha
inc
int3
aaa
push
daa
push
add
dec
orl
jnp
pushf
ss
sub
pop
inc
test
or
sarl
pop
cmp
mov
add
ljmp
jnp
cmp
add
movsb
aas
scas
arpl
sub
mov
cmp
mov
or
dec
xchg
jp
mov
or
pushf
push
or
pop
aad
inc
xchg
sub
test
mov
shr
adc
dec
sbb
sbb
scas
lret
ret
mov
dec
add
add
nop
add
mov
add
pusha
push
dec
xchg
pop
insb
mov
lea
das
sub
ljmp
or
jne
cmovb
inc
push
loop
aas
dec
test
xchg
not
fisttps
cmp
jmp
js
ret
aad
test
push
pop
cmpl
xchg
idivb
js
ret
bound
or
push
inc
add
bound
push
cwtl
aad
add
icebp
loope
inc
jge
xchg
cmc
xlat
test
push
adc
cli
inc
gs
adc
stc
xor
pop
ret
and
pop
jmp
adc
and
mov
push
xchg
sub
shlb
ret
push
dec
in
fdivrp
ja
jge
fimuls
cld
fsubl
ljmp
int
lea
addr16
pop
mov
rcll
dec
lock
or
bound
pop
pop
jmp
adc
push
jnp
pop
stc
cwtl
and
or
cli
addr16
sar
call
mov
sbb
add
xlat
inc
stc
push
jl
inc
jnp
inc
mov
jnp
int3
test
enter
das
push
test
mov
test
orb
add
sbb
sub
enter
ret
sub
shlb
mov
adc
mov
pop
iret
mov
sbb
test
mov
test
test
adc
cwtl
jnp
sti
mov
cwtl
jg
add
pop
sbb
xor
cmpsl
dec
jmp
add
rolb
jnp
cwtl
pop
jnp
cwtl
cwtl
jnp
and
cmp
mov
ror
and
sub
inc
sarl
cmp
jnp
jmp
xor
add
add
jmp
cmp
add
sub
mov
add
xchg
imul
js
add
xchg
imul
js
add
xchg
testb
push
add
add
add
js
add
popa
xchg
negb
dec
add
dec
add
js
add
popa
xchg
test
push
add
jge
add
js
add
mov
push
add
js
add
mov
push
add
push
add
js
add
and
bound
push
add
js
add
add
add
aaa
add
bound
jmp
adc
aaa
add
add
movsl
stc
ljmp
getsec
add
mov
add
stc
ljmp
inc
add
inc
add
mov
add
stc
jmp
inc
add
cmp
loop
add
in
stc
jmp
inc
inc
add
mov
add
cmp
xchg
cmp
mov
in
stc
push
and
add
and
add
stc
sub
test
inc
inc
jnp
inc
inc
jnp
add
jnp
sub
fs
jnp
jnp
jp
jnp
add
jnp
sub
inc
sub
inc
jnp
cmp
movsb
add
jnp
sub
and
das
inc
jnp
das
inc
jnp
add
jnp
jge
pop
sub
dec
test
movsb
add
movsb
add
movsb
add
movsb
add
add
add
movsb
add
movsb
add
movsb
add
mov
jmp
add
jl
add
jl
add
jmp
add
jl
add
jl
add
jl
add
jmp
add
and
add
jnp
add
jmp
add
jmp
add
jp
add
jp
add
jp
add
jp
add
jmp
add
jmp
jmp
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
add
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
mov
mov
adc
mov
scas
adc
mov
adc
xor
push
mov
adc
sub
bound
and
push
mov
adc
sbb
and
adc
adc
or
and
add
adc
cli
psrad
repnz
xchg
psrld
into
psrad
mov
add
test
add
mov
add
je
add
je
mov
je
mov
je
mov
je
lods
test
jl
add
je
pushf
test
jl
add
je
mov
add
insb
je
jl
je
js
je
aad
je
loop
je
int3
push
jmp
ret
add
lcall
inc
lcall
cmp
jmp
push
lcall
dec
lcall
mov
pushf
jmp
stos
lcall
mov
lcall
pop
lcall
add
lcall
lcall
jnp
jmp
lcall
jmp
out
jmp
aas
fwait
add
js
adc
js
adc
js
adc
js
add
jmp
js
add
jmp
js
add
jmp
js
add
jmp
jmp
js
add
jmp
js
add
jmp
js
add
jmp
js
add
jmp
js
add
add
mov
push
rorb
psrad
psrld
push
mov
xchg
mov
xchg
mov
mov
mov
push
xchg
mov
xchg
mov
bound
push
push
mov
push
push
mov
push
bound
push
push
mov
rsqrtps
push
and
pop
adc
sbb
mov
sbb
add
jb
ficoml
jb
hlt
add
add
xchg
in
jle
add
jbe
add
outsb
jb
loopne
jb
fdivrl
add
jbe
add
insl
jb
or
jb
ret
add
jbe
add
outsb
jb
mov
jle
add
je
lods
xchg
data16
xor
add
xchg
mov
mov
outsb
je
mov
xchg
jle
jmp
lcall
jmp
ja
jmp
and
add
fwait
jmp
xor
jmp
add
jmp
push
cwtl
jmp
dec
cwtl
jmp
dec
cwtl
jmp
inc
cwtl
jmp
fsts
jmp
loope
jmp
cmpsl
cwtl
jmp
mov
jmp
cmc
xchg
jmp
fwait
cwtl
jmp
ja
jmp
add
jmp
outsl
cwtl
jmp
imul
add
cwtl
jmp
clc
sahf
add
js
pop
jmp
js
pop
jmp
js
pop
jmp
js
pop
jmp
js
add
js
add
js
add
js
add
jmp
js
add
jmp
js
pop
jmp
jmp
js
pop
jmp
js
pop
jmp
js
pop
jmp
js
pop
jmp
js
pop
jmp
adc
mov
and
iret
adc
adc
int3
push
loop
rorb
rorb
bound
mov
loop
pop
or
mov
add
mov
mov
mov
xchg
mov
or
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
jb
or
jb
or
add
jb
add
jb
clc
jo
add
jo
add
add
jb
call
jo
add
xorb
xorb
jo
add
jo
add
xorb
xorb
jo
add
jo
add
xorb
xorb
jo
add
je
ret
xorb
je
movsb
jo
add
imul
mov
add
pushf
jmp
or
xchg
jmp
repz
jmp
pop
xchg
jmp
sti
xchg
jmp
xchg
jmp
sbb
jmp
imul
add
jmp
push
xchg
jmp
or
jmp
cld
jmp
clc
jmp
xor
jmp
xor
jmp
pop
xchg
jmp
jmp
jmp
call
jmp
notl
jmp
out
xchg
jmp
add
xchg
jmp
out
jmp
fwait
xchg
add
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
pop
jmp
jmp
js
or
js
or
js
or
js
or
js
or
js
adc
push
lea
or
xchg
or
lcall
lea
or
lea
or
lea
or
out
adc
jb
loop
data16
mov
rorb
bound
loop
push
or
mov
rorb
or
mov
xchg
mov
push
mov
mov
xchg
mov
xchg
mov
or
inc
or
add
jb
cmp
add
jb
and
jb
sbb
add
jb
adc
jb
cmpsl
jo
add
jb
add
xorl
clc
jb
add
xorb
xorb
jb
add
jb
add
xorb
xorb
jb
add
jb
add
xorb
xorb
jb
add
jb
les
jb
mov
jb
jmp
das
xchg
jmp
sub
jmp
adc
jmp
dec
xchg
jmp
add
xchg
jmp
jecxz
jmp
setne
add
xchg
jmp
notl
add
xchg
jmp
sti
xchg
jmp
xchg
add
jmp
imul
push
xchg
jmp
lds
jmp
daa
xchg
jmp
and
add
jmp
aaa
xchg
jmp
xor
add
xchg
add
js
or
add
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
add
or
js
or
js
or
js
or
mov
mov
or
mov
or
leave
or
sbb
push
mov
push
mov
or
add
bound
mov
push
mov
or
mov
or
mov
or
mov
or
mov
or
mov
jge
rorb
jne
loop
jns
loop
insl
or
mov
rorb
mov
mov
jb
mov
jb
mov
jb
scas
xorl
cmpsb
jno
add
xorl
xchg
jno
add
xorl
xchg
add
xorl
add
jb
jb
jb
outsb
xorl
data16
add
jb
pop
xorl
push
jno
add
jb
dec
xorl
inc
jno
add
mov
add
jmp
popa
xchg
jmp
gs
jmp
dec
xchg
jmp
pop
xchg
jmp
push
xchg
jmp
push
xchg
jmp
cltd
test
add
test
add
test
jmp
jge
jmp
jno
jmp
jne
jmp
jns
jmp
sub
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
push
or
js
or
js
or
js
or
js
or
add
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
js
or
add
lea
lea
rorb
inc
or
lea
or
lea
or
lea
or
lea
or
adc
push
lea
or
or
bound
add
push
lea
or
cld
or
lea
or
hlt
or
clc
or
in
or
lock
in
add
call
or
mov
or
mov
or
mov
or
add
andl
andl
jae
add
jae
add
andl
andl
jae
add
andl
andl
jae
add
andl
andl
jae
add
andl
andl
jae
add
xchg
bound
jle
bound
jp
bound
jbe
bound
jb
bound
outsb
jae
add
bound
andw
orl
add
jmp
sub
sub
xor
sub
cmp
sub
gs
popa
sub
dec
sub
dec
sub
push
sub
push
sub
add
sub
test
jmp
insl
sub
imul
jmp
pop
mov
add
jmp
and
jmp
or
jmp
adc
popl
jmp
js
call
js
call
js
call
js
call
add
call
js
call
js
call
js
call
js
call
js
call
js
call
js
call
js
call
js
call
js
call
mov
add
loop
pop
pop
loop
pusha
pop
add
mov
mov
loop
dec
pop
loop
push
pop
rorb
incl
mov
add
xchg
mov
xchg
mov
pop
mov
mov
pop
xchg
mov
xchg
mov
pop
bound
and
push
mov
push
mov
pop
bound
adc
push
mov
push
mov
pop
and
add
adc
mov
push
jnp
add
jne
add
jge
add
jne
add
jge
add
jne
add
jge
add
jne
add
jge
add
jne
add
jge
add
jne
add
ja
add
bound
mov
jge
add
jge
add
jge
add
jge
add
add
add
jge
add
jge
add
jge
jmp
popf
jmp
xchg
jmp
test
jmp
lea
jmp
push
jmp
pop
jmp
cmp
jmp
and
jmp
sub
jmp
jp
jmp
cmpsb
xchg
add
jmp
add
jmp
dec
jmp
dec
jmp
mov
mov
add
mov
add
jmp
gs
add
jmp
insl
mov
add
mov
call
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
push
mov
and
addb
mov
and
jo
add
mov
lea
loop
pop
add
rorb
pop
add
rorb
inc
add
mov
lea
xchg
lea
mov
lea
add
bound
sbb
push
lea
add
bound
add
jle
add
jbe
add
add
add
jbe
add
jle
add
jbe
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
jg
add
ja
add
ja
add
ja
add
add
add
ja
jmp
cmc
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
jmp
popa
xchg
add
jmp
pop
xchg
add
xchg
add
xchg
add
jmp
inc
xchg
add
cmp
xchg
add
jmp
push
xchg
add
jmp
dec
xchg
add
xchg
jmp
js
call
js
call
js
call
js
call
js
call
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
bound
cmc
add
stc
add
in
add
icebp
add
in
push
mov
add
fldl
and
aad
adc
int
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
mov
scas
inc
and
xchg
add
ret
add
add
clc
sarl
out
xor
jnp
ret
int3
stc
mov
ja
add
clc
and
clc
sub
or
scas
pop
jns
pop
pop
ret
sub
cwtl
cmpsl
jl
inc
stos
mov
jno
add
jnp
ret
adc
lahf
popf
add
jnp
ret
iret
int
mov
inc
and
addl
pop
idivb
testb
arpl
add
add
push
mov
jae
insb
imul
or
sub
ljmp
add
out
pop
dec
imul
inc
enter
jmp
mov
jns
loope
mov
or
xchg
iret
jg
icebp
pushl
or
cmpb
jmp
add
int
enter
jmp
enter
enter
ja
mov
add
orb
jg
jmp
jns
add
in
test
mov
sub
imul
cli
cmp
cld
nop
pop
imul
lret
ja
sbb
ljmp
xchg
test
mov
fdivrp
imul
out
or
lea
shrl
add
orb
ss
inc
or
call
and
add
mov
movsb
fwait
cmovo
rcrl
pop
push
add
popf
ret
inc
mov
push
sti
inc
jno
ja
xchg
iret
jno
xor
mov
jge
jle
push
cmp
cmc
jmp
jg
xor
or
xchg
mov
and
mov
add
ds
pop
mov
ret
pop
pop
mov
jge
jle
push
stos
push
idiv
adc
inc
cmpl
add
adc
andl
and
repnz
mov
jnp
mov
lods
hlt
dec
sbb
push
sub
jnp
jge
pop
jbe
jl
xchg
or
cmp
subb
mov
add
dec
mov
dec
xor
stc
clc
jg
std
scas
jo
cmpsl
sub
inc
jnp
jge
pop
jne
jl
js
jae
cmc
dec
sbb
cwtl
outsl
mov
jae
cmc
dec
sbb
jge
jnp
clc
mov
dec
pop
xchg
sub
jns
xchg
mov
mov
jmp
or
mov
in
sub
add
jmp
imul
jmp
imul
test
pushf
sub
jae
add
mov
jbe
or
and
outsb
mov
lds
jnp
js
addr16
lea
test
inc
xchg
and
dec
add
arpl
dec
sbb
cmp
pop
push
mov
xchg
xorb
js
shrl
push
jl
out
lret
subb
rcl
fs
jmp
or
in
ljmp
mov
jmp
xchg
outsl
in
dec
and
aaa
call
ljmp
mov
test
aaa
out
jmp
add
popa
mulb
outsl
add
js
rcll
out
add
lret
dec
pop
sti
decl
mov
adcl
cmc
ret
hlt
pop
push
cltd
ljmp
scas
inc
mov
stc
decl
dec
fidivrs
nop
mov
jmp
or
add
xchg
jg
pop
popl
rcl
pop
add
or
arpl
add
add
adc
and
pop
adcl
ret
cmc
pop
push
pushf
ljmp
mov
call
xchg
jg
jnp
incl
icebp
dec
sbb
test
add
dec
cmc
clc
int3
mov
inc
popa
jae
sbb
mov
xchg
out
cmpsl
mov
jl
add
jmp
and
xchg
or
out
je
xor
lock
pushl
jo
out
ss
clc
push
xchg
add
cmp
adcb
jl
out
adc
dec
push
jp
and
push
add
and
push
add
repz
inc
repz
fs
dec
jbe
cmpsl
and
dec
inc
jecxz
fs
incb
aaa
out
or
lea
mov
into
loope
cmp
sub
ret
pusha
xchg
mov
std
jae
dec
push
jnp
icebp
and
call
add
das
push
ja
push
mov
fisubs
testl
icebp
andb
in
add
add
jle
add
jmp
mulb
adc
xchg
stc
sti
loopne
ljmp
ljmp
loopne
ljmp
outsl
mov
mov
addb
or
add
imulb
in
ljmp
in
out
in
cmpl
test
andb
or
movsl
addl
add
or
push
and
push
call
shll
xchg
pop
mov
pop
test
inc
orl
out
cmp
call
popa
loope
add
mov
in
pop
sti
ret
sub
or
fildll
mov
addr16
ljmp
out
incl
flds
call
and
jns
pusha
fildl
call
add
or
popa
fildl
call
adc
jns
dec
fildl
call
jnp
jle
lea
add
sar
adc
jle
gs
add
in
sti
clc
cld
mov
inc
xchg
jae
sbb
mov
enter
je
add
inc
sti
clc
les
add
mov
jp
jbe
setae
clc
clc
add
dec
call
mov
mov
call
cmp
jp
ja
psubsb
xchg
add
enter
mov
js
in
mov
cli
fisttps
adc
jnp
insl
cli
xchg
loope
xchg
push
aam
push
cli
jecxz
popa
inc
test
or
add
je
std
ret
pusha
imul
push
cli
mov
imul
ss
xchg
dec
imul
dec
repz
orl
jbe
cmp
xor
stc
daa
or
adc
in
es
mov
add
xchg
push
add
cmpsb
xor
ja
ja
and
mov
fbstp
adc
divb
fbstp
jp
adc
pop
negb
in
ljmp
imulb
out
idivb
rcrb
mov
int3
and
mov
bound
out
mov
cmpb
out
nop
sbbl
mov
hlt
pusha
pushf
sti
arpl
ja
ja
jle
mov
mov
decl
and
jno
mov
jp
push
or
outsl
divl
outsl
or
lea
call
roll
jns
out
add
loop
sti
call
in
add
xchg
pop
sti
jmp
in
add
jmp
aad
add
mov
fisttpll
aad
pop
pop
jnp
jge
jp
adc
out
decl
popa
out
push
call
jnp
out
pusha
dec
out
mov
mov
addl
sbb
clc
clc
cmpsb
add
cmpsb
push
ljmp
push
or
sar
jnp
jge
add
sarl
jb
mov
cmpl
jae
add
pop
stc
clc
int3
mov
jp
jb
adc
push
cli
clc
mov
jnp
add
andl
add
inc
jns
clc
mov
xlat
push
call
clc
out
or
out
mov
in
scas
pusha
aad
daa
or
ja
fucomp
mov
testb
aaa
push
js
pop
arpl
add
pop
ret
in
std
mov
pop
adc
addb
in
repz
sub
add
push
out
jecxz
inc
std
fcoml
not
dec
jno
insl
mov
add
jae
sti
mov
imul
cmp
or
popa
add
xchg
subb
clc
pusha
pop
out
fisubrs
ja
jnp
cmp
es
test
fbstp
jp
adc
sbb
scas
cli
loopne
ljmp
imulb
ljmp
imulb
test
cld
je
mov
push
cli
push
negb
push
inc
repz
and
jle
sub
enter
pop
push
jmp
pop
or
ja
cld
adc
notb
mov
sbb
add
mov
add
aaa
ret
inc
pusha
scas
add
bound
jno
inc
and
loope
verw
pusha
sti
ret
leave
roll
sarl
push
pop
push
cltd
cltd
pop
bswap
xchg
adc
sti
rcrb
push
dec
push
rcrl
and
or
data16
stc
inc
pop
mov
shrd
loop
sahf
je
mov
test
fsubs
or
add
fisttps
and
int
jge
add
add
jo
iret
mov
add
cmp
sbb
out
add
dec
cmpsb
notb
test
pop
xchg
jae
pusha
sahf
jae
push
lods
jae
cmp
jae
dec
xchg
jae
push
xchg
jae
sbb
jae
sub
je
js
je
andb
mov
jne
add
mov
incl
mov
icebp
jmp
fmull
ljmp
iret
leave
addl
fdivrl
arpl
mov
push
push
add
imul
inc
iret
or
mov
mov
or
stos
mov
dec
jbe
dec
sti
add
outsb
add
jmp
add
lods
pop
repnz
dec
test
xlat
and
into
push
inc
repnz
cmpsl
es
hlt
cmp
add
mov
imul
js
ret
dec
ret
addl
movsb
push
subb
mov
push
test
out
push
ja
jae
cld
shrb
pusha
not
jo,pt
aam
push
mov
int3
and
add
dec
inc
sarl
add
cmpsl
int
out
loop
add
lret
push
imul
mov
lahf
or
imulb
jge
cld
push
ja
adc
push
pop
negb
xchg
ret
mov
push
push
les
sub
or
and
shlb
pop
clc
jge
mov
push
fs
je
xor
jge
mov
imul
cli
lcall
ja
push
fiadds
call
and
in
pop
xchg
sti
ret
mov
xor
fstpl
call
cltd
int
add
ja
xor
add
loop
jg
rorl
add
mov
jnp
and
int3
lds
insl
gs
rcll
sarb
jl
pop
fstpt
mov
xchg
ss
add
push
ret
pop
ret
xor
out
clc
pop
and
mov
cmp
incl
loope
sbb
xchg
add
jnp
dec
sbb
pop
mov
jnp
add
clc
clc
mov
xchg
jp
data16
or
data16
fs
fiaddl
popf
arpl
push
sub
mov
lahf
jb
std
pusha
loopne
cmc
or
das
push
js
or
cld
and
lock
hlt
out
orl
sbb
andb
add
arpl
sub
int
mov
or
and
mov
add
pop
and
sub
pusha
adc
add
jnp
cli
aad
subl
ret
mov
pop
push
les
or
push
addl
leave
pop
idivb
mov
push
mov
leave
and
mov
mov
jmp
xchg
add
jl
jecxz
push
imulb
jns
push
push
xlat
ja
add
add
mov
mov
cmp
pushf
test
stos
cmp
outsl
cmp
jecxz
sti
pop
pop
sbb
xlat
sti
loope
test
add
or
pxor
sti
ret
dec
pushl
int3
pop
sbbl
hlt
ret
or
mov
stos
or
xchg
xchg
jg
das
xchg
repz
add
lock
cmp
bound
mov
dec
mov
loope
or
shll
jae
aaa
sub
cmc
pop
mov
jg
sti
lcall
lods
ja
inc
lea
add
add
cmp
mov
mov
in
fsubr
cmpb
push
clc
les
add
ret
mov
clc
ret
idivb
insl
add
movsl
xor
idiv
out
dec
ljmp
xor
idivb
or
pop
imul
and
clc
dec
and
cmc
jl
pop
pop
add
aam
clc
sub
xlat
pushf
sub
ljmp
scas
push
mov
call
add
jnp
jmp
jnp
jg
out
jo
jnp
mov
add
jmp
jnp
cltd
cwtl
mov
mov
scas
push
in
add
jmp
jnp
dec
fwait
xchg
push
in
adc
pop
mov
mov
add
xchg
mov
push
mov
jnp
jl
jnp
jmp
jnp
mov
mov
lea
push
in
add
jnp
add
js
add
insl
mov
in
hlt
dec
imul
js
add
js
add
mov
imul
js
add
js
add
add
mov
mov
js
add
js
add
aam
negb
ljmp
jmp
int3
dec
divb
mov
cmc
decl
jmp
jmp
or
pop
jl
add
js
add
and
ljmp
ja
add
mov
add
mov
add
idiv
mov
stc
idiv
loop
add
rorb
idiv
ja,pn
add
mov
add
mov
add
jns
add
xchg
mov
add
mov
add
repz
mov
repz
outsb
div
cmp
idiv
xor
jl
idiv
jnp
cld
cmp
cld
xor
cld
sub
mov
and
cld
sbb
mov
adc
mov
or
pushf
cld
add
pushf
cld
cld
cmp
in
jbe
cld
in
cwtl
cld
fsub
fwait
cld
add
rcrb
cld
les
fwait
cld
mov
fwait
cld
lods
xor
cld
movsb
sbbb
xchg
adc
cld
test
lcall
add
jnp
movsl
cld
fs
pop
call
dec
mov
dec
cmp
aas
dec
or
das
dec
in
add
adc
mov
dec
sub
mov
dec
pop
mov
dec
into
mov
dec
shlb
out
out
fisttps
mov
dec
pop
mov
dec
dec
mov
dec
mov
mov
data16
dec
in
add
popf
scas
lahf
dec
in
add
mov
movsb
xchg
movsb
jg
push
movsl
ja
dec
movsl
outsl
dec
cmp
push
push
idiv
pop
push
imul
sbb
out
add
push
testb
push
testb
dec
mulb
inc
cmp
dec
imulb
dec
divb
dec
idivb
dec
notb
dec
negb
sbb
sbb
jmp
sbb
and
push
idivb
sbb
pop
test
dec
divb
dec
negb
or
dec
negb
pop
add
dec
neg
adc
testb
in
idiv
and
idiv
xchg
idiv
out
jmp
jmp
idiv
ret
jmp
idiv
fisubrs
idiv
add
idiv
inc
sub
push
sub
lcall
idiv
shr
idiv
cmpsb
in
idiv
xchg
idiv
jp
idiv
shr
idiv
in
idiv
inc
in
idiv
out
jmp
incl
push
in
idiv
push
idiv
mov
idiv
ficomps
idiv
ljmp
lcall
inc
stos
cld
je
stos
cld
insb
das
mov
cld
pop
xor
cld
dec
pop
mov
cld
cmp
mov
cld
sub
mov
cld
sbb
sahf
cld
adc
sahf
cld
or
mov
cld
cld
dec
mov
cld
add
push
jg
in
jg
fcompl
cld
aam
jle
int3
sub
les
jg
mov
pop
jg
lods
or
movsb
push
jg
pushf
lock
xchg
cmp
mov
add
ja
adc
addr16
push
test
test
xor
inc
dec
jp
aas
dec
push
aaa
dec
dec
subb
push
addb
dec
and
pop
dec
add
cmovp
addl
dec
xchg
xor
dec
mov
sbb
dec
cmp
dec
loop
mov
dec
scas
subb
lock
neg
sti
inc
negb
sti
inc
testb
inc
mulb
sti
inc
notb
inc
notb
inc
mulb
sti
inc
mulb
inc
divb
sti
inc
testb
idivb
sti
inc
mulb
sti
inc
imulb
js
add
icebp
inc
test
inc
div
loope
imul
js
add
js
and
mov
lock
sub
mov
pop
out
mul
out
inc
not
out
imul
js
add
movsb
pop
idiv
mov
idiv
sbbb
incl
idiv
xchg
sbb
incl
sbb
call
idiv
mov
cli
push
idiv
rcrb
idiv
rcrb
idiv
ret
ljmp
jmp
idiv
sbbb
jmp
idiv
adc
idiv
loopne
idiv
add
idiv
sub
idiv
push
cli
idiv
sub
idiv
loop
add
add
add
mov
idiv
jnp
test
cld
movsb
mov
cld
xchg
pop
test
cld
test
cld
jl
cmpsb
cld
je
cmpsb
cld
insb
test
cld
pop
fldt
cld
dec
imul
cmp
test
cld
sub
test
and
test
sbb
movsb
cld
adc
test
or
test
add
test
cld
hlt
xchg
movsb
cld
in
mov
cmpsl
cld
fsub
cmpsl
cld
aam
cmpsl
cld
int3
test
lods
mov
inc
dec
lods
scas
inc
dec
lods
cmpsl
inc
repnz
lahf
inc
in
xchg
inc
push
scas
popl
scas
xchg
scas
jg
jle
ja
mov
scas
addr16
mov
pop
inc
lret
inc
loop
dec
inc
mov
lods
add
inc
loop
aaa
inc
ret
inc
scas
stos
daa
inc
test
pop
inc
ret
inc
fisubs
pop
inc
fisubl
testl
cmpsb
out
push
cmpsb
xlat
inc
add
inc
imulb
cmova
mov
inc
idivb
inc
mulb
inc
idivb
loopne
negb
rolb
iret
rolb
add
daa
dec
mul
and
adc
notb
adc
testb
dec
mulb
adc
imulb
sbb
negb
fiadds
iret
inc
notb
roll
push
loope
imulb
inc
divb
rolb
or
inc
imulb
and
aad
dec
test
dec
testb
out
idiv
fsubr
idiv
ret
decl
out
idiv
add
idiv
shr
incl
in
idiv
inc
in
idiv
sbb
idiv
or
idiv
mov
push
idiv
dec
push
idiv
push
idiv
lock
idiv
push
push
idiv
push
push
idiv
or
idiv
adc
idiv
xor
idiv
dec
push
idiv
dec
sbb
call
sbb
decl
idiv
repnz
decl
sbb
mov
sbb
ficompl
jnp
fwait
cld
add
aas
cld
fcoml
cld
aam
add
jnp
sti
pop
add
sti
mov
cld
mov
add
sti
xor
add
sti
xor
add
bound
add
add
sti
gs
jl
mov
je
xchg
cld
insb
xchg
xchg
cld
mov
xchg
cld
push
pop
add
sti
into
xchg
cld
inc
sub
add
rclb
sti
loopne
sti
inc
add
add
add
sti
pop
add
sti
adcb
sti
mov
add
stc
add
filds
jnp
jmp
jnp
in
add
out
xchg
iret
inc
out
xchg
movl
xchg
mov
jbe
scas
inc
test
inc
adcb
sbb
xchg
xchg
jg
or
ja
push
xchg
outsl
inc
adc
inc
in
add
jnp
xchg
xchg
dec
inc
xchg
xchg
inc
inc
cmpsb
xchg
aas
inc
adc
das
inc
in
daa
inc
into
xchg
pop
inc
enter
test
cmovb
jmp
jnp
imul
mov
gs
js
add
sub
outsl
std
pop
ret
dec
jmp
pop
stos
outsb
cmpsl
and
les
loope
int3
sbb
jne
pop
mov
xor
mov
pushf
jne
jb
rcl
outsl
xchg
fcmovnb
dec
jmp
aas
jnp
mov
jmp
lcall
push
lret
lods
jp
and
imul
push
outsb
mov
popa
add
inc
gs
imul
push
gs
and
xchg
stos
outsb
dec
add
pop
jbe
js
jae
stos
imul
xchg
movb
jns
stos
push
add
insl
jae
stos
imul
push
dec
cmpsb
push
bound
dec
mov
mov
jb
frstor
jnp
add
imul
xchg
test
xchg
push
insl
add
add
sahf
cmp
arpl
xchg
pop
arpl
add
jbe
dec
je
xchg
pop
jo
xor
dec
jle
dec
je
dec
push
push
xor
sarb
imul
dec
imul
inc
pop
pop
testl
jns
push
je
and
mov
fs
into
sbb
ret
push
mov
add
add
and
cmpsl
push
push
sahf
lds
cwtl
ficompl
mov
es
stos
mov
call
mov
inc
add
push
scas
push
addr16
aam
popa
bound
add
sub
out
push
push
mov
inc
jnp
cmpsb
adc
mov
jnp
mov
cmp
mov
adc
ret
mov
add
mov
mov
cwtl
add
test
push
mov
add
xorb
mov
and
lret
mov
push
mov
and
pop
xor
stos
mov
out
jns
or
imul
fidivs
mov
pop
std
mov
pop
sti
pop
mov
jmp
pop
sarb
popa
fisttpll
mov
jno
adc
push
les
mov
push
pop
jmp
leave
mov
mov
mov
add
into
stos
dec
push
push
mov
pop
test
push
lret
stos
jae
mov
xchg
add
movsl
imul
les
mov
mov
jb
cmpsb
outsb
mov
outsl
fsubs
loop
xchg
mov
stos
inc
imul
pop
outsb
mov
mov
jne
movsb
pop
arpl
int3
popa
dec
ret
cmpsb
pop
insb
mov
movsl
push
popa
ss
incl
addr16
pop
arpl
arpl
xor
icebp
jns
push
fimull
xor
lcall
jmp
je
outsb
cmpsl
fbld
add
lret
jg
imul
jle
imul
add
bound
push
pop
dec
mov
jnp
cmc
push
dec
mov
dec
inc
pop
pop
push
popa
push
dec
push
dec
pop
outsb
and
add
jp
push
je
call
push
dec
inc
push
adc
push
pop
fbld
scas
ja
mov
add
mov
push
add
lods
xchg
aad
test
mov
cwtl
pop
cmpsl
rorb
mov
sbb
add
rcll
cwtl
fildl
mov
jmp
xchg
lea
outsl
enter
cmpsl
push
dec
xor
jmp
loop
add
sbb
roll
push
sbb
rorb
rol
sbb
cmp
cmpsl
mov
mov
int
dec
jmp
mov
cmpsl
pop
jmp
stos
scas
arpl
int
test
faddl
xchg
jns
pop
int3
mov
inc
pop
mov
mov
mov
mov
dec
lods
mov
inc
inc
mov
sbb
pop
adc
inc
test
add
int3
pop
cmc
add
mov
or
mov
add
pop
add
adc
imul
faddl
cmp
mov
insb
mov
push
popa
fsubrs
adc
dec
popa
in
mov
bound
outsb
inc
jmp
popa
inc
loopne
imul
jne
add
cmp
popa
mov
loope
je
mov
insb
popa
mov
lods
push
gs
popa
inc
adc
imul
lods
add
in
mov
mov
fs
mov
outsb
imul
push
add
add
imul
addr16
dec
pop
pop
fists
popa
push
sub
inc
loop
pop
inc
loop
dec
je
sbb
movsb
and
sub
push
push
xchg
in
imul
jo
js
jo
insb
sahf
cltd
incb
dec
lret
pop
into
aas
imul
add
daa
mov
xchg
imul
add
pop
je
mov
pusha
ds
fcoms
jmp
int3
mov
popa
sbb
mov
xlat
mov
add
lods
xchg
push
mov
cmpsl
xchg
pop
lret
cmpsl
jle
movsl
mov
jmp
cmp
outsb
push
xchg
mov
pop
mov
and
mov
dec
pushf
mov
inc
cmp
inc
pusha
pop
fists
pop
pop
mov
addr16
adc
mov
cmp
add
dec
stos
inc
or
add
gs
mov
fs
movsb
imul
faddl
push
int3
pop
mov
mov
data16
mov
mov
gs
imul
and
mov
les
dec
cwtl
movsl
pop
inc
mov
xor
xor
movsb
popa
inc
bound
pop
adc
mov
xchg
add
mov
add
popa
outsb
scas
js
jb
aad
jae
mov
jo
aad
outsl
mov
lret
add
mov
popa
bound
push
jo
out
mov
inc
gs
outsb
inc
mov
mov
popa
scas
mov
outsb
push
and
fldcw
inc
shll
push
fstps
dec
test
insb
xchg
mov
push
jb
scas
outsb
gs
imul
imul
pop
pop
and
cmpb
arpl
inc
push
insl
jnp
add
dec
popa
arpl
push
adc
xor
sbb
push
imul
push
cmp
push
sub
cmp
je
push
push
imul
add
xchg
fstpl
jnp
add
outsb
xchg
fsubl
xchg
xchg
push
imul
push
addr16
int
add
filds
cmp
adc
push
push
lods
adc
ret
dec
mov
mov
push
sbb
inc
movsb
into
pop
add
scas
mov
out
mov
pop
shrb
cltd
pop
lods
lods
jg
stos
mov
or
cmpsl
mov
push
scas
mov
or
mov
sbb
shrl
push
stos
movsb
inc
addr16
dec
push
inc
mov
outsb
inc
cmp
add
push
mov
or
movsl
pop
push
add
arpl
push
movsb
fs
sbb
lret
add
int3
mov
pushfw
lahf
gs
add
jl
mov
outsb
mov
js
mov
movsb
frstor
int
add
je
pop
jnp
stos
fs
scas
push
pop
mov
pop
pop
movsb
mov
or
imul
lods
dec
outsl
add
cmp
popa
add
fsts
imul
add
inc
gs
popa
insl
mov
push
je
jle
add
stos
dec
imul
lret
pop
insb
inc
popa
pop
insl
aaa
lea
pop
fsubl
cmp
insl
je
popa
imul
popa
inc
cli
cmpsl
add
push
popa
cmpsb
jge
add
orb
gs
outsw
roll
je
aam
pop
pop
jne
dec
push
ret
dec
add
incl
jbe
js
mov
push
jnp
add
push
pop
push
xor
jnp
incl
ss
or
imul
push
inc
jae
push
das
jae
hlt
inc
inc
jecxz
add
pop
fcomip
dec
imul
lcall
leave
sbb
lock
push
outsb
cmpsl
mov
insb
lret
mov
je
add
jmp
rolb
inc
push
cmpsl
mov
and
pop
push
cmpsb
jmp
add
adc
aad
pop
pop
ret
push
mov
or
jnp
call
aaa
adc
into
pop
jnp
push
add
lahf
fadds
lahf
mov
jnp
and
inc
aad
movb
mov
ffreep
cltd
pop
fmuls
cltd
dec
test
popl
lahf
test
add
sbb
pop
jl
mov
pop
dec
stos
movsb
jo
dec
mov
xor
pop
cmp
dec
ret
cmp
add
int3
pop
sbb
sbb
pop
sbb
mov
cld
ja
jb
inc
lret
inc
mov
jmp
sub
popf
pop
sub
jo
fildll
add
movsb
pusha
xor
mov
jmpw
add
lods
shrb
aad
jno
add
daa
add
int
imul
addr16
into
popa
push
add
mov
add
fsts
push
rcll
aas
je
jae
test
rorb
arpl
shrb
jne
dec
jne
fistpl
mov
dec
bound
mov
dec
lods
outsb
push
mov
outsb
cmpsl
jb
je
into
push
jae
mov
sbb
fisubrl
xor
jno
sbb
pusha
outsl
bound
push
jb
fnstenv
add
and
cmp
xchg
mov
outsb
les
add
jnp
pop
pop
mov
dec
sahf
mov
add
dec
push
aam
imul
push
and
test
arpl
arpl
sbbb
xchg
aaa
push
xchg
push
imul
push
imul
pop
push
arpl
inc
arpl
dec
inc
imul
jnp
dec
imul
dec
inc
imul
mov
into
mov
jmp
mov
fstpt
mov
mov
cmp
mov
push
xchg
mov
mov
arpl
adc
push
cmpsl
inc
dec
cs
push
pop
pushf
xor
add
lahf
add
pop
aam
push
pop
pushf
or
add
stos
negl
popf
jmp
sbb
xlat
add
stos
aas
sbb
jmp
sbb
mov
mov
mov
insl
lcall
add
cltd
lahf
pop
movsl
int
imul
adc
dec
andb
add
pushf
mov
and
mov
dec
push
add
xor
mov
pop
xor
cs
inc
push
and
scas
add
dec
mov
or
sub
add
xor
dec
add
mov
dec
mov
or
pop
aad
push
push
imul
imul
pop
outsb
out
jmp
push
mov
push
divl
add
cmpsb
jp
jo
les
xlat
add
cmp
je
pop
jb
dec
sahf
add
pop
pop
outsl
xchg
ret
push
aaa
jo
push
pusha
pop
push
gs
bound
add
outsb
dec
ja
addr16
jne
push
outsl
xchg
std
add
jb
stos
pop
pop
outsl
movsl
mov
cs
jnp
add
inc
push
dec
in
pop
add
push
pop
add
add
sub
pop
stos
push
cmp
xor
aad
fldt
xchg
sbb
imul
sub
mov
dec
imul
sub
xor
dec
imul
sub
pop
sub
xchg
sub
xor
add
jno
je
sbbb
jnp
decl
push
cmp
xor
mov
add
scas
iret
inc
les
jmp
imul
and
pushf
scas
xor
mov
add
mov
lahf
mov
test
lahf
mov
cwtl
mov
cmp
data16
push
daa
pop
pushf
dec
sub
jmp
sti
mov
daa
dec
int3
dec
xor
sahf
cmp
add
add
scas
cmovg
pushf
sbb
sbb
and
daa
rclb
pop
mov
popa
cmc
js
add
scas
mov
add
jle
arpl
data16
js
add
pop
mov
mov
add
push
fwait
pusha
mov
pop
lods
pop
lahf
arpl
js
add
add
inc
mov
gs
movsl
scas
push
push
cwtl
lahf
pop
jmp
pushf
test
gs
mov
or
mov
jecxz
mov
dec
add
add
pop
jno
jbe
popa
arpl
pop
addr16
jb
gs
outsb
dec
gs
pop
push
addr16
ret
add
orb
inc
or
outsb
add
pop
popa
arpl
shlb
mov
push
xchg
outsb
push
je
mov
or
push
je
imul
add
jb,pt
pop
inc
fs
popl
xchg
gs
add
xor
dec
addr16
jno
xchg
sub
push
pop
jg
add
jnp
daa
fs
push
daa
push
xor
and
leave
mulb
loopne
add
incb
sti
sub
imul
inc
pop
movsb
adc
push
or
xor
pop
and
xor
inc
jns
sub
sarl
imul
add
add
cmp
pop
mov
sub
add
dec
mov
add
data16
imull
dec
mov
sub
pushf
sbb
and
sub
loope
les
lret
cltd
mov
add
lahf
mov
xor
mov
cmpsl
sub
mov
das
lahf
mov
jmp
out
mov
es
cltd
je
cmp
roll
inc
pushf
push
cmp
daa
daa
push
mov
sub
add
scas
cmp
sub
mov
or
add
dec
lods
fs
movb
rolb
sbb
cli
inc
test
stos
movsb
ret
mov
dec
jmp
test
fs
fwait
outsl
mov
scas
jno
mov
lods
pop
lods
cmp
pop
mov
mov
js
add
lea
jo
pop
mov
pop
dec
mov
pusha
dec
stos
mov
push
cmp
inc
xchg
imul
add
pop
dec
ja
jno
cmp
outsb
gs
push
jne
arpl
xchg
mov
and
jo
dec
inc
imul
bound
imul
push
insl
outsb
and
outsb
inc
insb
addr16
insb
imul
fs
jo
popa
subb
push
insb
fs
jne
outsl
jnp
lock
sub
pop
mov
cs
pop
lret
inc
xor
push
jp
and
sub
andb
dec
xchg
inc
push
sbb
add
jg
push
imul
add
icebp
and
pop
dec
fimuls
add
cld
dec
sahf
incb
adc
pop
test
mulb
add
incl
xchg
dec
arpl
lahf
inc
inc
jnp
dec
push
cmp
xchg
inc
ss
mov
and
and
dec
and
jmp
add
mov
int
pop
scas
jmp
leave
mov
ss
rsqrtps
popf
adc
add
adc
adc
or
cmp
iret
inc
fcoms
lret
scas
jmp
xor
fwait
mov
rcrb
xchg
mov
popf
xchg
xor
popf
mov
cmpsb
addb
mov
stos
inc
cwtl
jb
add
jnp
cwtl
scas
push
js
add
pushf
arpl
test
jmp
pop
stos
inc
cmp
jnp
addr16
pop
push
ds
gs
insl
pop
add
add
pop
xchg
dec
cmpsl
stos
fs
test
outsb
rclb
rcrb
pop
lcall
jnp
add
fwait
outsb
xchg
add
rcrb
mov
pop
je
pop
popa
jae
pop
pop
jo
je
inc
xor
add
aaa
outsl
xchg
pop
popa
jb
mov
arpl
push
insl
inc
jg
push
jb
push
outsb
outsl
cmpb
jb
pop
insl
inc
jg
push
jb
push
outsb
outsl
jo
add
daa
mov
add
popa
arpl
pop
pop
je
pop
popa
jae
pop
pop
jo
jae
push
xor
add
mov
arpl
pop
pop
je
sti
xor
mov
test
pop
insb
jnp
add
add
aaa
push
pop
shlb
arpl
mov
add
int
jo
into
dec
arpl
ss
jnp
add
lea
das
push
pop
insb
add
popl
sub
add
jp
and
sbb
pop
mov
fbstp
add
jp
xor
loop
imul
arpl
xor
push
jp
and
push
dec
scas
push
aas
jae
mov
cmp
mov
add
cmpsl
mov
and
jge
push
mov
ss
dec
inc
push
gs
cmp
dec
mov
add
cltd
inc
and
and
sbb
cmpsb
sbb
mov
lods
or
or
add
fsubs
and
mov
add
scas
es
cmpsb
int
aad
lods
sub
cmpsb
add
pop
scas
add
movsb
arpl
fs
mov
lea
movsb
inc
mov
jo
test
cmp
pop
mov
add
xchg
inc
dec
mov
gs
imul
mov
pop
jo
dec
xchg
push
add
test
cli
gs
cmovnp
add
test
test
dec
enter
and
jo
add
pop
outsb
dec
xor
inc
imul
mov
insb
jmp
mov
data16
outsl
push
push
sti
jp
outsl
adc
imul
add
daa
xor
insb
rorb
outsb
push
andb
dec
push
bound
mov
xchg
add
jo
movsb
data16
pop
popa
arpl
push
inc
jnp
xor
loope
push
jp
and
dec
int3
and
jns
hlt
and
and
cmpsl
rcpps
add
add
divl
insb
cmpsb
or
arpl
and
sbb
cmp
cs
inc
arpl
das
jnp
pop
je
arpl
fs
sbb
pop
insl
and
pop
je
push
sub
jp
sbb
sub
mov
jne
inc
push
sub
mov
iret
sahf
mov
add
ret
lahf
sub
scas
mov
mov
ret
mov
sbb
mov
jmp
mov
mov
sahf
sub
jge
add
pop
jnp
xor
stos
dec
sbb
mov
aaa
sub
stos
dec
sub
mov
add
lahf
cmp
fwait
adc
add
or
sub
adc
sti
xor
mov
mov
jno
scas
dec
jmp
lahf
lahf
push
test
imul
mov
imul
test
scas
aas
xchg
inc
lods
fs
add
nop
test
add
mov
rorb
js
add
subl
out
jns
outsb
cmp
mov
add
pop
lahf
push
jbe
jb
pop
mov
add
bound
jne
popa
push
bound
add
add
adc
push
and
data16
insl
outsb
inc
xor
mov
add
sbb
aaa
outsl
divl
outsb
push
pop
outsb
out
mov
jo
loop
adc
add
insb
inc
into
jp
inc
pop
outsb
lea
inc
xor
sub
insb
inc
sbb
pop
outsb
outsb
push
popa
outsb
fs
jae
popa
inc
add
add
jnp
sbb
sub
jnp
add
fidivs
outsb
inc
adc
insb
faddl
insb
jnp
add
mov
fsubrs
addr16
dec
add
shrl
inc
mov
cmp
cmp
pusha
out
sbb
cmp
adc
cmp
add
sub
mov
pop
dec
shrl
jnp
cmp
ja
addr16
mov
sbb
cmp
add
adc
nop
scas
sbb
into
sahf
stc
sbb
xchg
jmp
mov
movsl
shlb
aam
mov
sub
enter
cwtl
sub
xchg
test
sub
pop
add
mov
sub
lahf
andb
scas
sub
jnp
lds
aas
scas
aaa
sub
sub
sbb
mov
mov
xor
inc
adc
add
js
jo
pop
lahf
pop
and
cwtl
lahf
imul
mov
jp
pop
std
xchg
mov
mov
lods
pop
lret
add
jg
pop
aad
mov
insb
rcrb
inc
enter
sarb
mov
mov
arpl
js
add
mov
mov
sbbb
add
sub
add
arpl
ds
addr16
data16
data16
ds
xchg
xchg
push
add
pop
outsb
dec
pusha
push
and
and
popa
es
inc
add
jbe
inc
dec
pop
add
aad
cmp
insb
fimuls
popa
add
jb
jo
outsl
adc
outsb
popa
imulb
imul
mov
mov
push
jae
push
pop
dec
inc
mov
push
arpl
pop
add
push
aas
cmp
pop
daa
cmp
add
add
arpl
dec
fidivrs
pop
out
add
jnp
push
aas
mov
sub
jno
sbb
aas
sbb
add
jnp
push
aas
ret
je
and
adc
mov
out
arpl
fsts
dec
call
fs
add
dec
jecxz
arpl
add
mov
dec
sahf
pop
add
add
and
test
and
cmp
adc
inc
daa
xor
push
inc
sbb
mov
xor
cmpsb
stc
das
ret
sbb
sahf
sbb
loop
push
jnp
stc
add
lahf
mov
cwtl
mov
jmp
mov
ret
mov
popf
push
mov
mov
mov
jns
cmp
add
test
sbbb
cmp
insb
add
pop
mov
push
pop
mov
dec
xor
jo
jbe
imul
xchg
pop
sub
outsb
or
xchg
add
jg
cmp
mov
xchg
inc
or
xchg
push
cmc
add
pop
lods
mov
dec
jo
mov
gs
pop
xchg
arpl
js
push
nop
test
xor
xor
mov
xchg
lods
outsb
add
push
push
arpl
mov
dec
add
pusha
outsb
jo
pusha
popa
jb
push
push
add
cmp
outsb
aas
pop
aaa
outsl
xor
popa
arpl
add
add
dec
je
push
dec
jo
jne
gs
pop
popa
jae
lret
addb
fs
popa
jno
outsb
addr16
outsb
push
fs
pop
addr16
and
outsb
jo
outsb
push
jne
pop
outsb
inc
and
outsb
gs
sbb
in
xor
jecxz
gs
sbb
sbb
loope
imul
enter
pop
incb
mov
and
push
and
js
and
pop
jnp
xor
adc
outsl
out
xchg
je
mov
jnp
add
adc
dec
xor
fidivrl
and
insb
cltd
inc
pop
gs
fistpl
je
rcrb
arpl
mov
inc
add
test
dec
add
xchg
inc
test
pop
cmp
add
mov
push
das
test
push
sbb
sbb
add
mov
push
pop
test
push
sbb
sbb
fcompl
add
xchg
out
xor
cmpsb
cli
xor
cwtl
xlat
dec
jnp
lahf
add
movsl
lahf
test
into
mov
mov
iret
insl
mov
fs
pop
popf
test
popf
dec
xchg
arpl
mov
dec
jmp
pushf
xchg
jb
fwait
cmpsl
push
inc
xchg
pop
dec
pop
test
cmp
add
fs
dec
mov
inc
sbb
gs
mov
js
fs
fwait
popf
fs
mov
inc
stc
pushf
movsb
xlat
mov
add
pop
popf
les
add
enter
outsl
popa
inc
and
dec
inc
xor
dec
dec
daa
push
push
rcrl
sub
push
je
add
mov
push
mov
popa
je
jne
outsl
rolb
outsb
inc
push
jo
jne
xor
popa
jb
pop
popa
mov
insb
outsb
push
popa
insb
fs
insb
pop
imul
mov
daa
xor
insb
push
cmp
movsl
stos
outsb
inc
jbe
jb
aaa
mov
fs
xor
hlt
add
cmp
push
mov
xor
add
add
es
mov
add
jg
adc
add
add
push
pop
xor
hlt
add
jns
xor
push
and
pop
out
dec
adc
add
add
pop
xor
hlt
add
ja
adc
arpl
cmc
insb
out
cmpsb
and
hlt
add
jg
adc
add
negb
add
mov
and
sbb
adc
xchg
jg
add
inc
mov
pushf
jns
sbb
push
adcb
imul
pop
jnp
test
aas
jo
cmp
push
je
sbb
jge
add
lea
das
jnp
sbb
jo
sbb
pop
aaa
push
adc
cmp
jnp
add
sub
addb
xlat
mov
inc
call
jg
sbb
gs
add
jbe
cmp
rcrl
pop
lds
aas
rcrl
jb
dec
jb
cmpsl
addr16
int3
mov
test
pop
popf
inc
jne
mov
dec
jp
xchg
jnp
nop
test
jg
jnp
arpl
mov
jg
push
pop
jne
inc
bound
jmp
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
push
mov
add
add
bound
add
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
rorb
add
mov
mov
add
mov
add
mov
add
mov
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
adc
inc
inc
cmp
aad
jnp
faddl
jnp
jae
cmp
jmp
jnp
in
add
aam
jnp
jmp
jnp
xchg
inc
cmp
add
js
add
js
add
js
add
add
add
adc
inc
aas
jmp
jae
sbb
js
add
js
add
js
add
jl
add
cld
add
cld
js
add
js
add
js
add
mov
push
js
add
js
add
js
add
mov
jmp
js
add
sbb
ss
js
add
add
mov
add
and
aas
xchg
mov
add
add
mov
mov
add
add
jb
or
mov
add
add
ss
inc
and
add
adc
add
mov
inc
adc
mov
inc
loop
add
nop
cmp
ret
mov
icebp
popf
lods
xchg
or
bound
and
jnp
ja
jnp
insb
rolb
mov
add
fwait
addr16
cmp
push
lahf
aas
iret
orl
adc
pushf
ror
add
filds
sbb
mov
jae
mov
leave
fmuls
mov
pop
jne
adc
imul
popf
jno
sbb
andl
and
lret
lea
call
push
insl
enter
shr
pop
test
cmp
dec
cmp
push
lret
xor
xor
sub
inc
mov
push
gs
pusha
out
rol
jo
fs
ds
dec
jecxz
push
ds
mov
mull
add
push
jbe
incb
movsb
jno
lret
or
push
pop
lret
pop
js
add
push
iret
xor
pop
iret
ror
iret
out
lcall
xchg
sub
int3
shll
jmp
add
sti
cld
xor
add
pop
or
mov
xchg
dec
cmpsb
lods
sbb
xor
inc
add
lea
ficoml
inc
and
fimuls
stos
repnz
insl
lods
aam
xor
sbb
inc
jl
leave
xor
fcompl
xchg
xor
daa
pop
cmp
js
sbb
loopne
dec
mov
mov
jbe
mov
dec
jbe
mov
pop
aas
insl
xor
xchg
aas
jle
mov
ljmp
xchg
in
mov
push
xor
jae
adc
push
xor
mov
test
cmp
dec
xchg
mov
push
adc
or
fucom
pushf
push
cmp
inc
sbb
inc
sub
add
sub
sbb
add
mov
mov
xchg
sub
aas
sub
iret
inc
in
cmp
dec
dec
sbb
fs
jno
add
xor
shrl
xchg
cltd
jno
mov
sahf
inc
arpl
daa
orb
adc
fxtract
push
lods
ja
popa
xlat
jno
add
jnp
adc
mov
inc
jnp
adc
jnp
adc
cmp
jnp
adc
jnp
adc
jnp
adc
jnp
adc
jnp
adc
jnp
cmpsl
adc
mov
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jecxz
insl
mov
add
jmp
jnp
jmp
jnp
mov
add
jmp
jnp
jmp
jnp
or
jnp
jmp
add
jmp
jnp
adc
jnp
jmp
jnp
jmp
jnp
scas
insl
mov
add
jmp
jnp
jmp
jnp
sub
jnp
jmp
jnp
add
js
add
sub
add
js
add
js
add
mov
jmp
js
add
mov
add
js
add
add
add
js
add
js
add
js
add
sbb
mov
jmp
js
add
sbb
mov
jmp
js
add
fdivrl
add
js
add
js
add
mov
add
mov
add
mov
add
xor
rorb
add
loop
add
add
xor
rorb
add
mov
dec
xor
xchg
mov
add
mov
add
dec
xor
xchg
mov
add
mov
add
mov
add
add
bound
aaa
add
add
push
mov
add
mov
add
shll
add
mov
add
mov
add
add
jnp
lret
jnp
add
jnp
add
jnp
add
jnp
mov
add
add
jnp
add
jnp
sarb
repnz
jnp
add
jnp
mov
add
add
jnp
add
jnp
mov
add
add
jnp
add
jnp
mov
add
add
jnp
add
jnp
mov
add
jnp
add
jnp
add
jnp
sarb
mov
add
jmp
jnp
mov
mov
add
jmp
jnp
jmp
jnp
pop
mov
mov
add
jmp
jnp
jmp
jnp
and
xchg
jmp
jnp
jmp
jnp
mov
mov
add
jmp
jnp
jmp
jnp
inc
mov
mov
add
jmp
add
jmp
jnp
iret
xor
mov
add
jmp
jnp
pop
xor
mov
add
add
js
add
js
add
js
add
js
add
dec
mov
add
js
add
js
add
js
add
js
add
js
add
add
js
add
js
add
add
add
mov
add
js
add
js
add
mov
add
js
add
js
add
mov
jmp
js
add
js
add
add
push
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
aaa
add
lea
add
mov
add
mov
add
inc
jecxz
add
mov
add
mov
add
mov
add
aaa
add
mov
add
mov
add
loop
add
mov
add
jecxz
add
mov
add
add
add
aaa
add
add
bound
add
jmp
jnp
add
jnp
add
jnp
add
jnp
cmp
add
jnp
add
jnp
add
jnp
dec
jnp,pt
add
jnp
add
jnp
add
jnp
push
aas
jnp
add
jnp
add
jnp
add
jnp
lcall
loop
add
add
jnp
lcall
loop
add
add
jnp
std
cmp
jnp
add
jnp
add
jnp
xchg
jnp
jmp
add
jmp
jnp
jmp
jnp
mov
add
jmp
jnp
xchg
ljmp
mov
mov
or
mov
mov
mov
or
mov
or
mov
or
mov
or
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
cmp
jae
cmp
pop
sbb
dec
add
jb
add
js
add
cli
mov
jmp
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
cmc
cmc
in
js
add
sbb
shll
xor
sarl
rol
stc
cmp
cmp
add
scas
popf
xor
faddp
xchg
aas
or
test
add
fstps
xor
fbstp
jle
xorl
into
fbld
xor
ffreep
xor
shll
dec
xor
ds
xor
filds
xor
fists
xor
fcomip
call
test
add
add
fmuls
xor
fcomps
xor
fdivrs
xor
fmuls
push
fstps
neg
imul
push
fmuls
fwait
dec
push
shrb
stos
cs
stos
push
rcr
stos
into
shr
mov
sar
mov
into
or
into
into
sub
push
iret
cmp
iret
dec
push
iret
pop
push
iret
imul
jnp
outsb
into
mov
into
fwait
dec
push
iret
stos
stos
jbe
mov
stos
xchg
into
fldt
xchg
into
sti
mov
rorl
mov
rcrl
mov
shrl
imul
aam
imul
aam
dec
mov
adc
ja
loopne
jg
and
mov
xchg
rolb
mov
rclb
jo
not
pusha
mov
mov
jo
pop
shll
mov
xlat
rclb
mov
jg
and
pop
shll
mov
pop
rcl
mov
not
pusha
mov
xlat
pusha
mov
xlat
jo
lahf
xlat
add
mov
popf
les
test
cs
push
das
jge
push
das
test
jge
ss
movsl
dec
cs
inc
lds
cs
and
cs
xchg
std
and
cmpsb
das
mov
dec
inc
das
sbb
sub
das
frstor
push
xor
push
xor
lds
das
sbb
inc
lods
in
sbb
push
mov
dec
lret
sub
test
xor
mov
xor
fxch
xor
xor
xor
jb
xor
jp
cmp
repnz
ss
mov
fcmovu
mov
outsb
fmull
xchg
mov
cmc
cmp
sar
add
rolb
push
rclb
loop
idiv
pop
xchg
add
ret
mov
dec
sarl
mov
leave
cmp
shll
jmp
repnz
repz
cli
sti
push
test
inc
test
inc
test
mov
lds
mov
lds
mov
test
nop
cmpsb
lds
nop
les
orb
pop
ja
lret
xchg
lret
jp
mov
mov
fwait
dec
mov
scas
aas
push
mov
mov
cmpsl
sahf
mov
imul
fwait
leave
out
jmp
mov
mov
shll
mov
movsl
iret
ds
iret
mov
mov
mov
mov
mov
push
mov
enter
mov
mov
into
scas
pop
leave
out
scas
pop
leave
add
mov
dec
scas
jmp
xor
jnp
jnp
out
ja
rcl
dec
mov
push
aam
mov
aad
or
jns
sub
ds
mov
push
les
mov
ljmp
xchg
lret
jne
sbb
inc
leave
leave
sub
test
call
sub
inc
dec
js
push
add
dec
pop
cmp
inc
in
mov
cmp
ss
pop
aaa
pop
cmp
cmp
popf
xor
xor
xor
jmp
js
add
sub
xor
enter
enter
xchg
fcmove
xor
xor
fsubs
xor
fmuls
hlt
fcomps
inc
fnstenv
xor
xlat
mov
mov
mov
in
std
mov
cmp
cmp
ror
xor
in
cmp
mov
les
cmp
dec
xor
add
and
xchg
jb
mov
loope
cmc
call
leave
cmc
push
xchg
add
shlb
stos
aad
subl
iret
push
mov
sarl
mov
shrb
sub
pushw
cmp
jno
out
lds
inc
and
push
inc
arpl
mov
cmp
lods
lds
xchg
jne
mov
xlat
enter
enter
leave
adc
mov
pop
pop
mov
mov
mov
addb
enter
enter
enter
lds
lds
lods
or
mov
lods
cmp
int3
stos
jmp
mov
mov
shll
mov
adc
mov
aam
mov
cmp
cmp
mov
mov
pop
into
inc
mov
cmp
jmp
cmpsb
push
xchg
test
lret
add
fcmovnbe
mov
add
ds
cmp
xor
cmp
xor
xor
jmp
js
add
add
fldt
mov
sub
inc
dec
cmp
repnz
mov
cmp
ret
out
ljmp
js
add
xor
sysenter
jbe
pop
xor
sub
xor
pop
xor
sub
xor
sub
xor
dec
pop
xor
dec
daa
xor
dec
iret
xor
in
xor
mov
mov
fidivs
movsl
mov
out
xor
divb
fnstsw
push
xor
mov
push
xor
mov
ss
mov
inc
xor
mov
push
xor
mov
addr16
mov
ja
frstor
xchg
lods
mov
xchg
xor
std
mov
pop
xor
daa
xor
sub
push
mov
sub
push
dec
cltd
sub
gs
sub
test
sub
test
sub
test
sub
lea
pop
sub
movsl
push
dec
sub
mov
dec
mov
sub
test
inc
mov
aaa
or
push
xor
lret
nop
sub
mov
jge
aas
inc
cmpsb
test
jmp
and
testl
movsl
fwait
xorl
fwait
inc
ss
fwait
cmp
cmpsl
lahf
pop
aaa
sbb
push
aaa
scas
sahf
inc
aaa
jbe
idivb
andb
cmp
mov
mov
pushf
cmp
mov
xor
mov
xlat
aas
pop
cmpsl
es
sbb
mov
inc
xchg
cmpsb
pop
inc
stos
cmpsb
push
inc
int
inc
inc
inc
cmpsl
jmp
dec
out
cmpl
xor
push
add
dec
outsl
sbb
lock
xor
inc
add
mov
movsl
daa
xor
lods
shll
pop
movsl
mov
xor
fbstp
xor
mov
loopne
movsb
xor
outsl
xor
dec
pop
xor
or
bound
xor
mov
cs
movsb
pop
das
push
lods
dec
mov
mov
pusha
cmp
sub
mov
xor
jo
insl
cmp
cmc
cmp
frstor
imul
mov
sub
aas
adc
add
aam
or
sbbb
xor
sahf
push
xor
pushf
xchg
xor
mov
mov
das
aaa
sub
mov
cmp
mov
xchg
cmp
cmpsl
lret
cmp
inc
cmp
cmp
movsl
xchg
popa
cmp
xchg
and
testb
cmp
cmp
cmpl
pusha
bound
cwtl
pusha
inc
cmp
push
shll
fs
push
aaa
mov
lods
inc
xor
movsb
mov
aam
add
jnp
xor
mov
xor
nop
xor
imul
push
cmp
dec
xchg
sub
xor
aaa
mov
stc
cmp
mov
outsb
cmp
mov
loopne
outsb
mov
and
lret
cmp
mov
xchg
cmp
cmp
lahf
sub
movsl
sbb
mov
shr
jecxz
add
xorl
dec
xor
jb
add
cwtl
dec
xor
sahf
cmp
xor
aad
xchg
cmp
mov
inc
cmp
mov
add
aas
dec
cmp
mov
cmp
movsb
test
loop
inc
aaa
pop
xchg
aaa
les
ss
int
popf
jbe
xor
mov
sbb
cmc
sbb
add
add
xor
outsl
xor
mov
push
test
xor
stos
shll
pop
mov
cmpsb
mov
icebp
mov
cs
jae
cs
arpl
cs
test
rorl
das
add
cwtl
pop
ss
cwtl
cmp
fldenv
adc
cmp
cmp
movsl
jg
in
add
jl
add
add
hlt
jle
add
xor
dec
push
movsb
mov
repnz
lcall
add
or
add
pop
sahf
out
ficompl
xor
fcoms
gs
push
xchg
leave
aaa
aaa
xchg
adc
out
movsl
popa
cmp
cmp
sti
cmp
inc
cmpb
inc
daa
cmp
popa
mov
xor
mov
cmp
mov
cmp
xchg
cmp
jle
cmp
jne
cmp
insl
add
sbb
pushf
cmp
daa
cmp
push
or
add
xchg
incb
jnp
xor
stos
and
push
stos
mov
das
sbb
mov
sub
or
xor
inc
outsl
add
dec
add
mov
dec
xchg
mov
cmp
xchg
jne
sbb
xchg
jne
sbb
cmp
inc
cmp
mov
sarb
jnp
jmp
dec
loopne
add
xor
xchg
pushf
sbb
mov
cltd
cmp
leave
cltd
xor
mov
or
cltd
cltd
adc
xchg
cltd
stc
xor
cltd
imul
add
cwtl
jns
or
mov
sbb
jns
or
sub
xor
sub
push
sub
dec
lds
dec
in
sub
dec
cmc
sub
dec
stos
loope
jmp
mov
sti
stos
jns
repz
sub
sti
mov
sub
xor
sub
sub
or
sub
stc
inc
push
cmp
mov
cmp
push
cmp
lahf
cmp
nop
mov
cmp
xchg
popf
xor
or
insb
cmp
cmp
fdivrs
mov
pop
cmp
mov
add
xchg
sbb
fimuls
pop
xor
xchg
push
xor
lcall
add
xchg
fidivs
cmp
or
fwait
test
lods
mov
xor
pushf
push
aaa
mov
mov
add
sbb
xchg
cmp
sahf
dec
cmp
xchg
and
jnp
cmp
jnp
inc
inc
push
add
jnp
xor
aam
mov
push
xor
movsb
xor
add
xor
dec
fsubrl
cmovns
das
push
test
sbb
cmp
xor
xor
mov
xor
in
and
inc
outsl
xchg
xor
jp
xchg
dec
push
xor
inc
xor
ret
inc
mov
xor
scas
mov
ljmp
sub
add
xchg
sahf
sub
sub
push
cs
aaa
cs
sub
jne
lcall
xchg
pop
das
adc
cmp
adc
cmp
lahf
xchg
aaa
cmp
sahf
or
sahf
cmp
sahf
jnp
xor
out
rcrb
xchg
ss
jmp
add
jnp
bound
sub
add
stos
push
xor
add
sub
lock
mov
fmull
dec
xor
imul
cs
pop
jge,pn
mov
sti
dec
pushf
das
nop
dec
sbb
xor
das
or
adc
rorb
sub
inc
xchg
into
sub
testl
jno
cmp
cmp
sbb
test
aaa
cmp
pop
aaa
dec
dec
out
add
mov
and
mov
jecxz
shrb
cli
popl
add
sahf
xorb
lahf
xor
ret
fwait
test
push
pushf
push
xor
stos
xor
fwait
cmp
push
stos
add
aad
popa
mov
les
cmpsb
cmp
and
test
dec
cmp
xchg
mov
cmp
cmp
mov
leave
cmp
xchg
std
cmp
cmp
inc
nop
cmp
mov
xorl
and
sub
daa
das
insl
test
mov
je
cs
insb
in
incb
movsb
inc
add
jnp
xor
dec
inc
xor
dec
movsl
xor
stos
jbe
jecxz
fnstenv
add
jg
xor
lods
das
mov
int3
mov
cmp
outsl
mov
cmp
outsb
pop
cmp
mov
cmp
mov
cmp
mov
push
sub
xchg
xchg
sub
sub
aad
ljmp
xchg
xchg
mov
xor
xchg
xor
xchg
xor
cwtl
xchg
xor
mov
xor
cwtl
dec
xor
cwtl
push
xor
jmp
insl
fcoms
add
mov
xor
fwait
dec
xor
fwait
bound
in
cltd
xor
lcall
fs
lock
add
xor
inc
dec
cs
inc
cmc
cs
lods
adc
aas
movsb
movsl
das
adc
ss
mov
mov
sub
jno
sbb
sub
cmp
cmp
push
cmpb
pusha
sahf
cmp
push
push
cmp
add
aas
mov
mov
add
mov
icebp
add
lods
cmp
xchg
lahf
cmp
jg
mov
cmp
mov
and
das
test
les
nop
cmpsb
jge
fsubl
imul
adc
int
inc
cltd
fnstsw
ficompl
hlt
ljmp
xor
xor
adc
mov
xor
push
xor
icebp
mov
jl
int3
mov
loopne
imul
imul
xchg
mov
jnp
cmp
test
cmp
insl
adc
cmp
inc
cmp
dec
cmp
mov
sub
daa
inc
test
sub
mov
sub
mov
sub
mov
out
lcall
sub
orl
inc
daa
pop
jo
and
daa
scas
pusha
pop
es
dec
es
push
mov
and
and
xlat
mov
and
adc
mov
mov
dec
aad
add
mov
ficomps
add
mov
pop
xor
cltd
jp
ljmp
xor
cltd
in
data16
aaa
inc
lahf
and
add
add
cmp
mov
inc
cmp
lahf
push
cmp
add
cmp
sahf
mov
cmp
leave
ss
xchg
adc
aaa
fcomps
aaa
jo
call
ficoml
mov
cmp
pop
cmp
addr16
add
cmp
pop
cmp
cmp
addr16
cmp
push
cmp
push
cmp
jnp
les
aaa
fmull
push
aaa
jae
int3
aaa
mull
xor
pop
divb
dec
outsl
xor
jmp
js
add
dec
lods
xor
test
xor
and
std
sahf
pop
xor
sahf
jp
fstpl
les
cmp
out
xor
hlt
xor
and
push
sahf
mov
xor
pop
xor
popf
xor
push
popf
inc
xor
dec
xor
popf
movsb
xor
jmp
xor
lcall
jns
dec
xor
stc
lcall
add
sahf
ss
cwtl
out
mov
xor
mov
sub
mov
add
outsl
xchg
jle
and
jbe
daa
and
gs
daa
ret
sbb
push
dec
pop
es
inc
inc
mov
mov
add
sar
pop
add
jnp
xor
add
xor
cld
mov
xor
xor
push
xor
jbe
and
cmc
xor
mov
xor
popf
pusha
xor
popf
xor
xor
popf
sbb
cmp
xchg
int
xchg
xchg
or
mov
cmp
rcll
jg
in
mov
aas
cwtl
shlb
pop
xchg
cmc
xor
lods
xchg
adc
test
mov
in
xchg
mov
pop
cltd
or
xor
lcall
pusha
cwtl
mov
dec
xchg
push
das
into
out
jmp
sub
mov
dec
sub
xchg
add
bound
push
push
adc
enter
mov
imul
and
into
cmc
lods
add
add
mov
push
outsl
xchg
xor
or
xor
enter
in
xor
inc
jl
enter
filds
xor
scas
pop
xor
cld
xor
sbb
xor
xchg
xor
xchg
outsb
add
fwait
adc
add
xchg
sbb
rcrb
xor
fwait
lahf
inc
xor
lahf
inc
xor
lahf
pop
xor
sahf
je
iret
sahf
lea
sahf
sub
hlt
sahf
mov
xor
jb
js
repnz
jecxz
jle
push
aaa
pop
popf
mov
cmp
lahf
cmp
mov
sbb
jb
in
cmp
mov
repz
mov
idiv
cli
xchg
add
jnp
xor
push
xor
mov
xor
dec
mov
dec
sub
dec
dec
sti
das
jo
mov
sub
test
loope
push
test
cs
mov
add
jge
xor
sahf
xor
xchg
xor
stos
xor
inc
xor
inc
shll
dec
add
dec
lods
mov
je
movsl
pop
xor
lods
daa
xor
movsl
scas
xor
pushf
xor
test
jge
mov
icebp
sub
jns
xchg
xchg
sub
mov
dec
lea
fimull
xchg
add
mov
xor
popa
xor
repnz
cwtl
lea
inc
xchg
push
xor
xchg
lret
sub
xchg
jae
call
xchg
stos
sub
add
nop
cmpsl
sub
inc
mov
mov
xor
dec
add
mov
xor
fwait
pop
xor
fwait
popa
xor
pushf
add
sbb
popf
mov
xor
outsl
jg
imul
xor
dec
xchg
xor
dec
inc
xor
test
imul
jnp
test
les
pop
mov
das
cli
mov
sub
lea
stos
data16
int
stc
push
test
push
dec
push
sub
shlb
cmp
dec
ret
cmp
mov
dec
add
cmpb
hlt
cmp
lods
movsb
cmp
or
add
mov
xchg
add
cld
xor
repnz
xor
cltd
scas
xor
pushf
adc
insb
jns
ss
aaa
gs
cmp
xchg
cmp
or
add
jne
cmp
jne
cmp
cmp
jae
cmp
jae
cmp
jae
cmp
jb
cmp
and
jno
aas
fsubrs
aas
jnp
mov
jnp
cs
mov
xor
mov
sub
mov
and
jnp
jno
insl
mov
daa
sub
push
mov
sub
mov
sub
mov
sub
mov
aad
xor
jae
rolb
add
shll
sbb
jg
adc
pop
es
xlat
push
sub
out
dec
cld
sbb
sbb
mov
daa
add
mov
and
mov
sub
jmp
into
leave
filds
jnp
fdivl
imul
sti
jnp
xor
jnp
xor
jnp
xor
jge
xor
jle
xor
das
scas
jle
cs
cs
jg
mov
cmp
sub
add
bndstx
sbb
int
cmp
or
iret
sbb
xorl
or
inc
cmp
sbb
cmp
xchg
push
jle
cmp
jbe
cmp
inc
cmp
adc
js
sbb
orb
cmp
cmp
insl
sarl
and
fnstcw
push
pop
out
or
xchg
lods
cmp
lea
cmp
jge
cmp
jne
cmp
insl
mov
cmp
pop
ja
sbb
cmp
push
cmp
jl
cmp
pop
test
cmp
test
cmp
test
cmp
cmpb
test
mov
dec
test
test
xchg
test
mov
adc
test
test
fdivrl
pop
test
clc
cmp
cmpsl
add
movsl
cmpsl
push
cmp
cmpsl
and
cmpsl
xor
cmpsl
sub
sub
cmpsl
dec
cmp
cmpsb
pop
cmp
cmpsb
push
cmp
cmpsb
data16
imul
imul
pop
and
adc
test
mov
aas
cmp
and
scas
mull
aad
cmpsl
adc
call
xchg
or
decb
out
sbb
adc
jbe
adc
dec
data16
adc
pop
insb
adc
out
jg
add
and
mov
inc
lods
lret
movsl
jbe
xor
mov
dec
and
jge
and
jne
shlb
das
test
and
mulb
add
xchg
and
sbb
mov
xchg
and
push
and
outsb
and
xchg
adc
test
filds
jo
jnp
jmp
scas
jnp
out
jbe
icebp
adc
adc
jnp
adc
jnp
adc
jnp
adc
jnp
adc
jnp
adc
or
add
adc
cmc
adc
add
imul
xor
mov
jne
stos
xor
imul
das
lods
xchg
outsb
sub
test
sub
lea
sub
call
gs
sub
mov
xchg
pop
cmp
nop
or
jge
idivl
sub
cmp
mov
pop
cmp
cmpb
bound
push
xchg
cmp
mov
out
andl
cmp
pusha
movsb
adc
movsb
xor
mov
test
cmp
movsb
add
jp
push
cmp
mov
cmp
or
cmp
iret
movsl
push
outsl
movsl
outsl
cmpsb
lahf
and
cmpsb
cld
ds
cmp
xchg
movsb
jno
and
mov
add
mov
add
lahf
dec
xor
lahf
pop
xor
sahf
imul
jnp
adc
mov
push
jae
xor
shrl
std
push
adc
imul
dec
add
adc
dec
in
aas
add
adc
xor
mov
notl
add
sub
faddl
jb
pop
xchg
or
insl
stos
movlps
or
insl
insb
or
xor
dec
pop
or
inc
rorl
jo
xor
mov
jge
adc
mov
sbb
test
sbb
test
jge
stos
pop
lret
jg
pop
add
pop
pop
std
adcb
jp
sbb
orb
xorb
addl
arpl
rcrl
jnp
cmc
adc
jnp
adc
jnp
adc
jl
adc
jnp
adc
jge
adc
jl
adc
sbb
inc
jle
adc
jle
adc
jge
pop
mov
dec
add
repnz
xor
imul
sbb
imul
add
cmpsb
xor
test
cs
je
cs
mov
and
imul
imul
jnp
add
lods
mov
cs
mov
das
jecxz
fs
push
push
xor
sti
das
inc
push
das
mov
mov
sub
add
jp
adc
pop
sub
imul
out
mov
popf
push
aaa
inc
popf
push
aaa
fcomps
aaa
dec
popf
out
aaa
js
hlt
aaa
dec
movsb
or
cmp
mov
pop
cmp
movsb
mov
mulb
iret
cmp
movsb
loope
mov
xchg
clc
sahf
sarb
add
popf
or
push
sahf
xor
ret
cmp
xchg
cmp
cmp
cmp
cmp
adc
jnp
adc
jo
sub
or
mov
or
bound
negb
jl
sbb
test
jge
sbb
jne
sbb
insb
clc
sbb
fs
or
add
aad
mov
std
add
jnp
adc
inc
push
das
stos
mov
inc
stos
ja
jo
push
adc
mov
adc
mov
pcmpgtd
pusha
or
imul
push
cmp
ret
adc
jp
adc
jp
adc
push
ja
comiss
psrad
adc
jno
into
js
adc
test
sbb
add
jle
add
mov
out
adc
aas
sbb
jmp
pop
mov
jo
lahf
ja
pcmpeqw
push
bound
adc
jp
imul
sbb
xchg
sbb
test
push
test
mov
and
cmp
mov
jmp
add
add
push
out
xor
sahf
cmp
xor
jno
lods
cmp
ja
add
push
mov
subb
scas
mov
xor
imul
add
jb
aaa
add
bound
aaa
and
xchg
pop
aaa
adc
subb
add
jb
aaa
adc
add
cmpb
mov
lcall
mov
inc
aas
aam
pop
aas
mov
xchg
aas
xchg
popf
aas
fwait
xchg
sarb
jbe
ljmp
enter
mov
add
or
sub
xchg
dec
xor
xchg
insb
xor
xchg
lcall
xchg
fdivs
cmp
push
xor
inc
xor
aas
xchg
xor
mov
lret
aas
add
mov
lds
add
push
je
loop
push
push
add
insl
mov
xchg
push
jae
decb
dec
outsl
or
jnp
loope
jl
add
jnp
adc
test
test
cmp
pop
add
cltd
lea
pop
sbbb
jb
push
stos
add
sbb
lcallw
aas
pop
dec
punpcklbw
hlt
dec
fimuls
add
sar
cld
add
jnp
push
mov
stos
sbb
aam
mov
adc
jnp
adc
jnp
adc
jnp
adc
adc
jl
adc
sbb
dec
jl
adc
lds
pop
jl
adc
jl
adc
inc
adc
pop
adc
outsl
jle
pmulhuw
adc
adc
inc
jg
adc
jecxz
addr16
pop
adc
xorb
mov
setg
push
ud0
push
out
arpl
pop
adcb
jne
das
mov
test
das
xchg
jne
add
cmp
add
mov
xor
mov
imul
int
and
mov
mov
xor
mov
xor
imul
int
jg
movsl
insb
pop
lea
das
dec
je
cs
jae
cs
lahf
das
or
bound
add
outsb
xor
notb
into
xor
xor
mov
cs
xchg
dec
xchg
mov
ss
scas
ss
xchg
into
ss
xchg
out
ss
xchg
push
aaa
jbe
cs
xchg
push
aaa
push
xchg
pop
aaa
push
xchg
bound
ss
push
push
xchg
jb
notb
aaa
xchg
mov
sahf
xchg
xchg
aaa
xchg
lcall
xchg
stos
aaa
pop
xchg
mov
notb
lret
mov
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
and
add
adc
add
and
add
adc
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
bound
add
push
mov
add
add
bound
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
push
lea
add
add
bound
add
push
lea
add
add
and
add
adc
add
and
add
add
lea
add
lea
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
xchg
mov
add
mov
add
mov
add
add
bound
add
push
mov
add
add
bound
add
push
mov
add
mov
add
mov
add
mov
add
adc
add
and
add
adc
add
loop
add
rorb
add
loop
add
loop
add
rorb
add
mov
mov
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
loop
add
loop
add
rorb
add
mov
lea
add
lea
add
lea
add
lea
add
add
bound
add
push
lea
add
add
bound
add
push
lea
add
and
add
adc
add
and
add
adc
add
loop
add
loop
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
and
add
adc
add
loop
add
rorb
add
loop
add
loop
add
rorb
add
mov
mov
add
mov
add
mov
add
mov
add
add
bound
add
push
mov
add
add
add
add
push
mov
add
add
and
add
adc
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
add
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
jmp
jnp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
push
mov
add
add
and
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
bound
lea
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
cmp
iret
ret
ja
jg
xchg
outsl
xchg
popf
jmp
pop
sti
je
adc
mov
or
add
cmp
clc
shlb
sub
add
cmpsl
mov
sbbb
rcl
pop
push
aas
into
cld
fdiv
jb
lcall
mov
adc
mov
xor
repnz
shlb
cs
sti
std
mov
test
jecxz
andl
icebp
push
fucomip
add
push
mov
sub
outsl
shl
ljmp
and
and
push
sub
push
into
fcmovnb
adc
mov
dec
int3
nop
xchg
inc
mov
dec
arpl
inc
add
hlt
in
orb
movb
cli
push
xor
jl
jle
cmp
repnz
xchg
xchg
sbb
or
divl
jo
popf
add
int3
lds
cmp
jmp
pushf
ret
pop
notb
pop
in
mov
inc
push
das
jnp
add
cs
sbb
insb
mov
aaa
jno
in
jmp
jle
or
dec
cmp
pop
rclb
push
into
ss
adc
push
sbb
sub
jns
dec
rorb
rcl
mov
or
pushf
jg
shll
add
sarl
mov
mov
rdtsc
stos
in
fisubs
lods
hlt
cmc
jae
push
inc
fwait
jne
lds
and
fucom
pop
mov
or
mov
sub
decb
pop
call
pop
out
mov
int3
add
add
cwtl
cs
and
int3
addb
sub
xor
sti
ret
sbb
adc
fsts
jle
movsb
jg
mov
mov
mov
scas
adc
push
lock
or
add
out
inc
xor
leave
pop
adc
push
push
mov
mov
adc
add
push
and
das
test
jmp
cmp
mov
adc
orl
inc
loopne
dec
loop
into
stos
add
adc
add
mov
and
dec
jae
dec
clc
lock
add
adc
lock
cli
mov
imul
adcl
lock
mov
adc
mov
jnp
add
jb
push
hlt
clc
enter
xchg
mov
cmovs
adcb
xor
push
lock
inc
fcoml
lea
js
add
sub
push
test
lahf
mov
mov
in
lock
out
mov
mov
or
mov
pinsrw
bnd
pop
ret
push
cmp
int3
das
enter
enter
enter
push
out
pcmpeqb
add
mov
ljmp
mov
push
lock
ljmp
mov
push
and
inc
add
mov
sarb
cld
jnp
add
pusha
test
add
repnz
testb
push
inc
cld
lock
js
add
inc
ljmp
mov
mov
mov
int3
das
mov
int3
mov
push
out
sbb
inc
xor
dec
or
repnz
or
mov
mov
int3
dec
push
out
xchg
add
push
jmp
clc
inc
jnp
ror
mov
inc
enter
enter
add
orl
add
mov
js
add
outsb
inc
clc
inc
jnp
inc
clc
mov
add
clc
lret
mov
add
add
push
lock
push
lock
or
testb
add
push
mov
testb
mov
jmp
addb
clc
lret
add
mov
inc
adc
js
push
jae
dec
cld
insb
loope
mov
add
mov
ret
mov
add
ljmp
ror
mov
int3
aas
mov
mov
lahf
add
mov
clc
inc
jnp
ror
mov
int3
aas
mov
out
mov
or
add
mov
jnp
add
jg
jmp
push
iret
add
clc
lret
ds
mov
add
or
jp
dec
cld
add
idivb
cs
jno
lock
testb
dec
ret
cli
ja
stc
add
pop
mov
add
jl
push
inc
cli
test
mov
or
dec
push
add
push
clc
lock
adc
mov
add
js
mov
add
mov
add
js
decb
aam
cmc
mov
cmp
int3
cs
or
mov
add
in
dec
fimuls
pop
add
call
add
add
dec
lock
sbb
add
test
cli
add
mov
mov
repnz
loop
mov
mov
add
mov
add
mov
addl
ja
cmc
adc
add
mov
pop
sbb
orl
inc
fildl
dec
or
adc
add
mov
addl
imul
add
mov
inc
addl
repnz
out
ss
add
jnp
mov
or
jnp
add
cmp
std
mov
add
jnp
mov
or
add
sub
sbbl
push
mov
lahf
mov
push
xchg
cmc
jmp
ljmp
test
mov
inc
or
add
dec
notb
cld
idiv
aam
mov
mov
cmpsl
mov
add
ds
add
lock
out
mov
mov
add
xchg
test
pushl
pop
cmp
int3
into
add
orl
lock
add
cmp
inc
jnp
inc
clc
rcll
inc
clc
lret
mov
add
cld
add
push
add
push
push
lock
or
cmp
ror
mov
dec
add
mov
mov
out
clc
inc
jnp
push
add
enter
ss
mov
dec
add
orl
add
lock
xor
add
dec
add
out
mov
push
pop
push
clc
add
idivb
test
inc
clc
adc
add
push
mov
pop
push
sbb
or
push
inc
clc
lock
push
mov
push
inc
adc
dec
sbb
shlb
dec
roll
adc
es
mov
push
aas
cld
inc
xchg
shlb
mov
inc
into
int3
scas
mov
int3
add
push
out
jae
inc
jae
xor
jnp
incb
mov
dec
add
ds
dec
push
mov
push
push
dec
clc
lret
insb
xor
mov
xchg
dec
hlt
fsubs
clc
inc
jnp
cmp
add
xchg
add
popa
push
or
js
add
rorl
inc
add
lock
cli
cmp
add
dec
mov
add
cmp
add
jnp
lret
idiv
inc
jnp
adc
sub
inc
jnp
mov
cmp
popf
inc
xchg
cmc
xorl
mov
js
or
adc
ror
rol
scas
add
mov
mov
cmp
sbb
mov
sub
rorb
int3
mov
int3
cs
or
mov
add
add
or
inc
fimull
orl
ds
add
push
pop
or
ja
aas
jnp
or
inc
stc
incl
or
inc
repnz
mov
mov
pop
xchg
push
nop
dec
lock
mov
cmp
push
fistpll
shr
cmc
cmpl
add
jnp
or
jp
inc
hlt
lock
cld
cmp
jno
lock
ljmp
add
call
cmovg
adc
inc
loop
add
dec
xchg
mov
pop
shl
lret
push
pop
jg
inc
xchg
mov
add
js
push
push
add
ljmp
cmp
push
push
cmc
xorl
mov
or
sub
inc
ljmp
mov
add
cmp
add
add
mov
dec
subl
inc
add
outsl
or
addb
es
cmpl
mov
mov
inc
pop
add
stos
mov
sbb
clc
inc
jnp
punpckhdq
mov
add
repnz
clc
dec
pop
cli
mov
and
jnp
add
add
push
popa
mov
push
jmp
pop
cli
add
mov
fadds
cmp
mov
mov
inc
jg
inc
loopne
inc
loop
dec
cmp
cmpsl
push
mov
clc
inc
jnp
ljmp
jle
push
fwait
or
add
push
mov
add
js
mov
dec
pop
add
sbb
clc
inc
jnp
inc
xor
idiv
inc
jnp
or
jbe
cli
add
lahf
push
call
clc
movl
adc
js
sub
jnp
cmp
dec
pop
mov
push
add
cli
cmp
stc
inc
jnp
ljmp
jg
orl
pushl
add
sub
jg
add
jnp
ljmp
aas
orl
xor
push
add
mov
clc
inc
jnp
dec
sub
dec
add
pusha
idiv
cld
pop
mov
inc
jnp
loop
js
mov
lea
push
push
and
mov
clc
inc
jnp
cmc
push
iret
mov
mov
mov
mov
int3
add
add
mov
orl
aas
pop
int3
into
push
out
cmp
add
mov
aam
pop
pop
cmp
int3
into
push
out
xchg
iret
aas
jnp
xchg
mov
xor
clc
dec
or
sbb
add
mov
push
ljmp
xchg
int3
cs
out
add
scas
mov
add
aas
fsubl
mov
add
add
xchg
add
mov
add
inc
or
cwtl
cmp
mov
test
sti
test
xchg
mov
add
push
jbe
clc
inc
jnp
add
jnp
or
jle
clc
inc
jnp
add
jnp
aaa
adcb
add
mov
inc
add
jnp
add
clc
mov
cmp
add
outsb
inc
jnp
cmp
mov
add
fsubr
mov
push
aas
call
jae,pt
dec
mov
int
push
je
push
cli
mov
int
jbe
clc
inc
jnp
aas
jnp
bound
mov
add
jae
testl
jae
lcall
test
fdivs
clc
inc
jnp
xchg
cli
mov
mov
clc
dec
decb
jmp
ljmp
mov
mov
jnp
push
sub
cmp
cmc
clc
dec
push
mov
mov
adc
cld
inc
fdivp
jae
adc
loopne
adc
fmul
jae
sti
add
les
xchg
cli
mov
test
test
mov
inc
pop
fisttpl
add
notb
pusha
sti
call
mov
add
adc
add
testb
mov
adc
nop
xchg
xchg
cli
cmp
xchg
addl
jnp
jmp
cmpl
aas
clc
add
bnd
adc
test
orl
incl
cli
mov
dec
jmp
jnp
mov
js
cli
xor
jle
mov
adc
daa
je
lret
add
jnp
lret
mov
clc
inc
jnp
lret
mov
jae
mul
xchg
add
add
cli
mov
cli
je
add
mov
mov
mov
sub
cli
cmp
cmc
clc
dec
decb
jnp
ljmp
add
xor
jb
mov
or
cli
mov
sub
cli
mov
xchg
mov
fld
xor
cmp
fistps
push
int3
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
add
arpl
xchg
xor
mov
mov
xor
add
jae
add
enter
pop
mov
aas
and
cli
aas
sub
jnp
add
mov
add
sub
push
mov
cltd
xor
mov
xor
push
xor
mov
adc
mov
dec
xor
pop
mov
xorl
lea
mov
adc
xor
jnp
pop
ss
mov
ja
sbb
mov
das
mov
loope
popa
mov
or
aaa
push
cmp
ret
aaa
lcall
aaa
into
mov
or
arpl
cmp
add
mov
cmp
pop
cmp
outsl
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
cmp
out
cmp
add
xchg
aaa
cmp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
rorb
les
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
dec
inc
add
dec
inc
add
add
inc
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
add
dec
inc
add
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
dec
inc
add
add
inc
add
add
inc
inc
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
dec
inc
add
add
inc
add
add
inc
add
inc
add
add
add
inc
add
inc
add
add
inc
add
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
call
adc
jo
sti
das
shlb
mov
fistpl
sub
sbb
inc
loopne
cmp
fdivs
filds
inc
inc
push
flds
mov
popf
add
ds
xchg
inc
xchg
ficoms
pop
add
rcl
cmp
arpl
dec
shrb
mov
xor
loope
into
lock
sub
mov
out
aas
adc
cmp
sbb
jns
popf
dec
or
rorb
cwtl
cmp
aad
jge
imul
stos
add
push
dec
dec
jg
mov
mov
pop
push
call
les
pop
xor
cli
push
fimuls
pop
and
in
inc
mov
cwtl
jo
cwtl
dec
stc
mov
out
enter
xchg
dec
cmp
nop
fcoml
push
lods
push
mov
iret
nop
pushf
shlb
test
push
data16
popa
pop
int
xor
and
or
xor
pushf
inc
addl
pop
lcall
cltd
push
pushf
mov
pop
pop
pop
add
femms
iret
aad
dec
mov
sub
or
arpl
sbb
xor
inc
cmp
loop
sbb
mov
jmp
jmp
push
jo
sub
rcr
bound
mov
add
add
mov
mov
xchg
sbb
mov
clc
jmp
cmpsb
outsl
add
incl
adc
into
scas
xchg
mov
leave
fnstsw
ljmp
mov
aad
mov
mov
or
jns
cmp
lahf
sub
insb
shl
mov
add
imul
or
in
lods
aad
mov
clc
in
int
adc
push
and
cmpb
addr16
adc
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
movl
movl
mov
mov
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
push
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
push
xor
ret
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
