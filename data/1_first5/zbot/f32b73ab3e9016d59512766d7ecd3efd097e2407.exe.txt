inc
push
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
add
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
xor
add
mov
imul
xor
add
clc
pop
add
pcmpgtd
pushf
data16
stos
retw
cmp
jo
sbb
ds
int
dec
add
sbb
add
mov
add
imul
cmp
xor
imul
add
cld
push
sbb
dec
push
mov
stos
addr16
xor
addr16
cmpsl
addr16
xor
shll
sti
addr16
xor
addr16
xor
outsl
sbb
outsl
js
xor
xor
outsb
lcall
outsb
add
xor
inc
outsb
ds
shrl
xor
jmp
insl
test
add
insl
mov
xor
push
insl
or
repnz
pop
ss
jl
mov
imul
ss
call
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
add
add
inc
add
je
dec
xor
inc
inc
aas
jb
dec
sub
add
popa
fs
xor
cmp
sbb
add
xor
loopne
bound
sub
add
add
jecxz
je
add
jne
add
popa
outsb
clc
ss
sbb
add
fildll
gs
sarb
inc
add
daa
je
mov
pop
add
fstpt
add
add
sub
arpl
jns
sbb
add
pop
je,pt
jnp
jne
jns
popa
outsb
inc
aaa
gs
sbb
add
and
add
pop
inc
add
pop
inc
add
pop
inc
add
add
inc
add
pop
inc
add
inc
add
cmp
arpl
aas
jb
out
daa
add
fdivs
popa
shlb
bound
sub
add
sbb
add
xor
or
insb
insb
sbb
add
mov
cs
add
cmpl
add
jno
jbe
outsb
daa
cs
add
insl
arpl
add
jb
dec
cmp
inc
cmp
outsl
arpl
add
push
xor
sub
imul
das
gs
xor
or
push
add
xor
add
in
popa
jo
cs
outsl
lcall
add
aaa
jb
shrl
xor
aaa
insb
insb
sbb
add
je
scas
xor
scas
sub
add
sbb
add
pop
nop
sbb
add
sbb
add
sbb
sti
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
sbb
pop
xchg
mov
push
add
ja
in
movsl
push
out
xchg
push
outsb
lret
jg
bound
push
insl
outsb
cld
testl
mov
pop
int
sbb
jmp
inc
sbb
popf
add
pop
xchg
add
jmp
add
pop
repnz
insl
jmp
push
sbb
jmp
pop
sbb
pop
jmp
add
adc
jmp
add
jmp
add
jmp
xchg
sbb
pop
aaa
sbb
pop
jmp
adc
jmp
adc
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
xchg
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
sahf
pop
add
pop
add
pop
pop
add
pop
pop
add
xor
pop
add
inc
pop
add
xor
das
gs
pop
add
mov
dec
add
cmc
inc
add
add
pop
add
cmc
pop
add
cmc
pop
add
and
and
add
mov
add
lds
add
pop
add
mov
add
add
pop
add
test
add
pusha
je
push
add
sub
sbb
add
add
inc
inc
add
sbb
add
sbb
add
sbb
add
sbb
add
pop
mov
add
add
sbb
add
sbb
add
sbb
mov
insb
in
imul
hlt
add
outsb
mov
push
push
or
fiaddl
call
add
icebp
add
imul
adc
jb
icebp
testl
xchg
mov
push
or
add
icebp
cmp
sbbl
pop
add
adc
sbb
jb
pop
sub
jne
pop
jbe
push
xchg
movsb
negl
jmp
mov
xor
divb
popf
mov
test
xor
sub
mov
add
sub
test
jmp
neg
push
icebp
add
jmp
add
jb
and
sti
mov
cmp
pushf
cmp
mov
push
mov
adc
and
aad
in
add
iret
lea
hlt
mov
inc
sbb
sti
add
pushf
cmpsb
inc
je
add
pop
pop
and
pop
add
pop
rclb
cmpsb
dec
lea
inc
or
dec
es
inc
lods
mov
push
fnsave
or
pushf
jmp
outsl
rclb
cmpsb
dec
push
jne
call
and
pop
bound
xchg
sbb
pop
fidivl
mov
push
add
cwtl
or
push
in
push
sahf
push
adc
pusha
adc
sbb
call
pushf
jne
ja
decl
add
fwait
enter
mov
rclb
lea
mov
pushl
cmpsb
jne
repnz
mov
pop
mov
ficomps
rorb
enter
cmp
xchg
adc
pop
clc
jb
fwait
incl
lret
fstpt
lds
pop
sub
leave
ret
cmpl
add
add
pop
jne
popf
pop
add
mov
leave
ret
mov
xlat
inc
cld
test
add
xchg
je
jne
jb
jne
adc
cltd
les
pop
inc
push
leave
pop
mov
or
add
pop
les
inc
pop
add
pop
aas
adc
test
pop
in
pop
add
out
fsubrs
sti
repz
push
add
mov
add
adc
add
cs
push
cs
push
ret
cs
out
rolb
movsl
ds
xor
pop
add
add
adc
mov
cld
out
test
add
test
lcall
sbb
sub
leave
xchg
pop
mov
inc
repz
cltd
mov
add
ss
lods
jmp
push
xrelease
jmp
add
popf
icebp
add
or
push
pop
pop
icebp
jne
pushf
out
push
add
rcll
pop
jmp
dec
xor
add
pop
pop
clc
cmp
pushf
call
sbb
call
mov
xrelease
add
push
insl
inc
jmp
dec
cwtl
jne
sahf
push
clc
cs
add
pop
pop
push
cs
or
movsb
call
bound
sti
push
push
cld
push
test
push
icebp
mov
in
cltd
push
add
ficompl
clc
jnp
pushf
call
cwtl
jne
out
call
int
ret
mov
leave
adc
add
aam
adc
test
or
xor
decl
lods
mov
in
xorl
add
addb
ret
ljmp
cmp
pop
mov
pusha
sub
cmp
or
rclb
in
addl
jne
cmp
rorb
ljmp
cmp
push
or
add
mov
sub
mov
mov
add
cld
stos
dec
add
incl
in
les
test
decl
lods
add
mov
sub
or
jge
cmpsl
outsl
adc
push
test
push
inc
incl
mov
fcmovnbe
xor
cld
mov
mov
add
add
pop
pop
add
or
decb
fs
fimuls
test
loopne
jl
sub
add
lret
psubw
psraw
data16
add
fwait
cmp
add
pop
add
cli
mov
sub
pop
mov
dec
sub
mov
add
mov
jb
popf
sahf
icebp
out
pop
xchg
sbb
ja
jmp
pop
add
ljmp
pmaddwd
sub
jmp
inc
nop
sub
jns
adc
or
jmp
sti
cmpsb
imul
pop
add
pushf
fidivrs
ret
out
arpl
cmp
jge
pop
push
add
xlat
jae
cmp
out
inc
mov
lcall
mov
cld
shr
jmp
data16
lcall
insb
andl
mov
mov
aam
call
jo
xchg
lods
dec
pop
add
pop
xchg
jne
inc
sar
ds
push
in
imul
sti
xchg
jne
repnz
mov
in
push
push
mov
fld
clc
or
clc
add
push
add
clc
mov
add
adc
lea
clc
xchg
mov
jne
bound
clc
lcall
push
imul
add
dec
adc
push
adc
or
xchg
lea
jmp
iret
ret
sub
in
pop
arpl
jne
scas
push
cld
rolb
push
mov
fnstcw
xor
outsb
add
jne
inc
or
test
out
sbb
in
jmp
inc
add
add
loopne
imul
jge
test
lahf
das
add
xor
jne
mov
cld
out
shr
jmp
call
mov
je
icebp
jbe
test
fiadds
sbb
add
pop
je
jne
adc
inc
push
in
call
rorl
iret
js
inc
cmpsl
sti
out
sub
dec
popf
sti
addr16
lret
inc
add
and
sti
out
dec
in
incl
pop
adc
xchg
push
pop
push
loopne
jmp
xchg
sti
add
push
in
jecxz
jmp
popa
imul
lret
xchg
out
aad
in
add
lds
adc
sbb
mov
in
call
cmc
pop
cmpsb
jno
xchg
adc
sbbl
jae
adc
imul
fistpl
xchg
jle
add
loope
or
gs
cmpsl
jle
shrb
movsb
out
sbb
jmp
push
sbb
add
idivl
out
jmp
and
jne
xlat
xchg
stc
push
pop
jecxz
adc
push
cld
adc
jg
jmp
movb
cltd
imul
jo
xchg
pop
les
cmp
js
ret
mov
mov
mov
sub
sbb
js
lahf
xchg
push
bound
les
push
hlt
jmp
fmull
call
fs
adc
lods
call
add
add
sbb
insl
clc
add
in
add
test
movsl
sub
add
lret
sarb
hlt
incl
push
js
addr16
xorb
das
sti
fisubrl
leave
ja
add
subl
pop
add
sub
out
mov
xchg
add
lea
pushl
mov
sti
lret
jge
push
je
dec
sarl
inc
sar
push
mov
sbb
add
pop
sub
sub
dec
movb
jl
lahf
cmp
lea
pop
cmp
mov
sbb
test
test
in
sbb
imul
jne
pop
in
sbb
cld
mov
and
or
call
jmp
test
jne
pushf
sar
xorl
mov
cwtl
int3
push
call
mov
lret
add
sbb
jmp
add
cmp
icebp
fistl
sbb
test
pop
jmp
xchg
jmp
outsb
lock
pop
push
and
add
fildl
pop
add
push
loopne
in
sbb
jmp
add
sub
push
pop
mov
lock
shl
mov
addb
add
add
pusha
inc
lea
je
xchg
add
mov
sti
cmp
add
lea
out
dec
test
mov
push
push
std
push
inc
popa
fmuls
xchg
mov
sti
mov
adc
pop
clc
lea
or
mov
xor
pop
in
add
pop
add
ret
adc
mov
jmp
leave
xchg
jmp
ss
pop
mov
push
add
daa
jg
dec
mov
push
or
bound
leave
stos
orl
sbb
add
pop
sub
inc
xchg
ljmp
pop
push
mov
nop
mov
jns
push
add
add
cmc
mov
repz
adc
ret
push
mov
push
mov
js
repz
adc
add
add
test
push
dec
movsb
push
push
dec
or
cld
ds
adc
cmc
adc
out
repz
scas
shlb
cmc
adc
call
add
sbb
push
fstpl
add
jne
out
call
cmp
add
sbb
jnp
push
or
loop
clc
data16
xor
jne
cmp
sbb
mov
cmp
add
add
jp
dec
je
sbb
dec
xchg
subb
and
inc
repz
cmp
adc
sbb
fidivl
inc
leave
fiadds
add
inc
dec
push
mov
cld
pop
xchg
jne
inc
mov
aaa
call
mov
cmpb
pop
jb
or
sub
loope
out
flds
jno
add
adc
sbb
sub
xchg
outsl
mov
rorl
jno
in
lahf
ds
mov
movsb
outsb
add
mov
dec
or
xchg
pop
xor
adc
ds
jl
jns
mov
xchg
pop
or
inc
ja
sub
lret
cs
xlat
popf
sahf
std
in
mov
das
xlat
xlat
and
dec
mov
movnti
loopne
adc
add
add
add
jae
mov
mov
popf
js
jmp
adc
aas
pmuludq
xchg
pop
clc
outsb
aad
fcoml
jne
cmp
push
aas
mov
or
pop
mov
negl
jmp
sub
test
decb
push
decl
clc
je
jns
mov
mov
push
call
push
sbb
dec
and
call
mov
or
and
pushl
push
call
and
jne
popf
leave
std
ljmp
mov
ret
pop
jl
or
adc
in
addl
push
mov
push
movl
jl,pn
jge
pop
jne
pop
add
add
addl
add
add
cmc
pop
jmp
fmulp
or
cmp
cld
push
cmpsl
cmc
xor
jne
jae
jmp
sbb
jno
loope
xor
sbb
inc
hlt
in
sub
or
or
icebp
xor
push
inc
lahf
push
fadds
leave
ja
jge
jb
cmp
flds
add
add
push
lret
fwait
add
adc
fucomip
jae
add
pop
xor
or
sub
repz
mov
jns
je
push
push
clc
mov
insb
sbb
daa
xor
sbb
pop
fs
sbb
arpl
xor
adc
loopne
imul
sbb
mov
jnp
mov
lea
js
sbb
sbb
push
mov
cmp
and
insl
sbb
cld
idivl
adc
loopne
push
push
adc
push
loope
xchg
lds
add
cmpsl
stos
sbb
lds
add
inc
push
sub
cmp
mov
clc
repnz
pop
mov
loopne
mov
pop
ret
push
mov
add
outsb
sarl
xchg
pop
adc
add
push
sbb
fwait
ljmp
pop
add
loopne
pusha
loope
xor
mov
leave
stos
or
push
bound
or
pop
jne
bound
or
rcrb
add
push
add
sbb
inc
jmp
adc
jmp
sbb
inc
sbb
adc
call
jb
test
jae,pn
push
add
pop
call
jge
add
pop
leave
pop
push
add
mov
inc
push
add
popf
inc
or
sti
or
dec
pop
movl
movsl
jne
pop
mov
fdivr
or
mov
pop
add
lea
push
call
into
mov
call
decl
push
call
test
pop
mov
add
movsl
jne
insl
mov
pushl
rol
pop
cmp
or
test
in
cmpl
push
push
sbb
lods
sti
lret
pop
mov
lock
cmc
addr16
add
jo
push
stos
es
sbb
add
adc
add
jno
rolb
imul
push
and
call
inc
add
fdivrl
add
inc
and
inc
or
test
fdivl
add
adc
je
or
testl
inc
call
push
jmp
mov
loop
push
pop
imul
pop
jmp
or
jmp
imul
jmp
int3
js
add
push
loop
je
mov
sbb
call
lret
pop
push
jmp
inc
adc
test
add
pop
jmp
fcoml
pop
jmp
push
mov
jmp
pop
fists
sub
push
mov
xor
push
add
hlt
call
add
out
jmp
cmc
sub
and
cld
xor
jne
addr16
or
loope
add
sub
cld
sar
jmp
stos
pop
cld
mov
fwait
outsb
push
jb
dec
push
bnd
jae
subl
mov
push
xchg
jmp
testl
pop
push
add
push
add
scas
pop
push
lahf
push
push
sbb
daa
adc
or
subb
pop
push
dec
pop
push
call
cld
sbb
or
pop
call
pushl
mov
jne
movl
scas
push
pushl
popf
mov
add
lcall
or
or
pop
add
add
in
push
mov
sbbl
or
arpl
add
push
add
rcr
sbb
push
call
ja
lds
mov
jecxz
ret
pop
xor
mov
add
pcmpgtw
call
pop
outsb
pop
dec
fnsave
add
test
sbb
out
xor
dec
inc
add
gs
pop
loopne
add
sbb
add
xchg
out
shr
cmp
xor
addl
out
and
xor
mov
lods
xlat
insb
repz
add
jl
jmp
jle
pop
jmp
jmp
sbb
es
outsb
push
fnstcw
pop
addl
pop
addl
fsub
call
add
jg
fmuls
outsb
fdivrs
mov
add
fidivrs
pop
jmp
inc
sbb
add
adcl
dec
rcrb
add
cwtl
stos
lea
jmp
sub
lcall
test
pop
pop
add
jnp
ds
test
jge
cltd
ja
dec
test
jle
or
les
andl
lods
sti
push
aam
shr
mov
clc
call
pop
pop
push
fisubrs
sub
xchg
push
inc
cmc
mov
cmpl
lock
dec
sub
jle
mov
jge
add
pop
add
in
cli
add
cmp
pushl
cmp
roll
push
add
loop
cmc
dec
lea
xchg
movsl
mov
bound
frstor
call
ljmp
mov
mov
lea
push
outsl
fsub
test
push
add
cld
out
push
movsl
push
clc
jae
pushl
movsl
call
clc
ja
pushl
in
incl
cltd
out
cmp
mov
xor
aad
sub
into
jecxz
jb
add
out
adc
push
or
call
cltd
out
fsubrp
jecxz
xor
xchg
popa
out
shrl
jecxz
jb
rolb
lods
fs
inc
int
ljmp
insb
aad
shrl
outsb
testl
mov
in
jae
dec
loop
jb
shr
mov
push
iret
cltd
mov
mulb
inc
sbb
inc
aad
jbe
aad
jb
loope
pop
fs
imul
jp
call
inc
jle
add
mov
in
jp
or
jp
mov
jp
in
ret
jp
in
adc
aad
add
inc
sbb
cmp
add
jp
jmp
jl
add
fwait
jne
cmpsb
call
jb
xchg
cmp
fstpl
lahf
jnp
int
jae
shll
dec
mov
mov
cmp
sahf
lcall
jg
jp
daa
addr16
push
jb
add
ljmp
mov
sbb
and
mov
ljmp
pop
pop
leave
sub
jmp
push
sti
ffree
xor
mov
add
pushf
testl
xchg
and
icebp
inc
pop
call
pusha
loop
jmp
fcomps
cld
jmp
sub
xchg
in
cmp
inc
arpl
ret
add
add
inc
clc
or
jmp
jne
mov
popf
loopne
lcall
mov
add
add
aaa
inc
add
push
mov
xchg
imulb
or
rclb
inc
add
pop
add
mov
push
push
lea
sub
clc
idiv
nop
je
jmp
pop
add
sbb
and
je
repnz
mov
data16
leave
cmp
xor
push
addb
pop
cs
faddl
add
add
sbb
inc
and
add
add
inc
test
pop
sbb
fsubrl
and
pop
add
addb
fistpl
add
sbb
inc
or
xor
jmp
fcmovnb
jmp
inc
shlb
inc
pop
cld
lret
into
sti
out
push
sar
mov
outsb
shlb
dec
movsl
or
shlb
pop
mov
add
jmpw
xchg
xor
jnp
leave
add
lret
bnd
jmp
mov
and
fwait
jecxz
je
in
in
pop
jbe
shll
ja
je
enter
pop
std
ljmp
jmp
xor
and
and
pusha
or
mov
add
xchg
sub
movsb
sub
sar
cltd
cmp
pop
pop
xchg
xor
jmp
roll
inc
sbb
dec
ds
pop
add
sbb
out
imul
dec
sub
add
fistps
push
dec
jbe
inc
dec
and
lea
sbb
push
adc
and
jmp
dec
add
fistps
mov
sbb
xchg
jecxz
pushl
cmpsb
dec
sub
add
mov
pop
call
add
in
jne
shll
dec
test
subl
int3
jne
pushf
pop
xchg
popf
and
cmp
push
mov
and
pop
add
into
scas
jmp
xor
fnstcw
das
or
add
add
js
add
test
orb
leave
ret
push
mov
push
push
mov
pop
add
test
call
add
xchg
mov
adc
mov
pop
jmp
imul
cmpb
adc
or
movsb
mov
mov
out
cwtl
pop
pop
xorb
mov
inc
dec
rclb
sbb
mov
movntsd
push
nop
fildll
jae
pop
cmp
je
es
or
add
repz
add
rolb
fstl
dec
or
dec
je
sbb
nop
pop
mov
cmp
icebp
dec
or
inc
je
sbb
loopne
shl
jp
and
jae
xlat
icebp
sub
fbstp
xor
xchg
mov
cmpsl
mov
loop
lods
pop
mov
into
mov
arpl
add
pop
sub
xlat
das
pop
lods
xlat
add
lods
repz
je
xchg
jns
fisttpl
mov
jns
fldcw
xor
nop
fs
push
or
aam
jmp
inc
sbb
jae
sbb
loop
mov
xchg
je
incl
jmp
push
test
pop
jmp
inc
repz
jmp
add
pop
xchg
out
xchg
pop
add
pop
loopne
cmp
jb
mov
pop
orl
pop
or
test
pop
cmp
out
mov
add
fisubrs
call
pop
mov
or
sub
jmp
pop
call
inc
jmp
push
push
pop
sbb
idivb
call
arpl
dec
andl
jno
insb
shll
dec
inc
pop
push
cmc
adc
push
adc
push
cli
enter
sahf
call
mov
sahf
jne
sbb
or
adc
decl
insl
xor
add
movsb
mov
pop
movsl
call
lcall
add
mov
decl
dec
pop
push
mov
movsl
call
or
adc
int3
cmp
ja
inc
cmc
xchg
pop
cmc
pop
movsb
or
sbb
sbb
addb
out
out
fidivl
lret
push
inc
jle
add
xor
sbb
mov
sbb
or
xor
add
inc
cld
in
pop
pop
jmp
add
js
dec
mov
std
jae
mov
aam
add
mov
push
fmull
leave
imul
incl
lret
jo
push
add
sar
adc
jne
push
fsubl
daa
fwait
aad
repz
fistl
adc
jmp
iret
insb
jo
movl
mov
inc
add
sub
outsl
pushf
iret
mov
sub
sbb
sub
or
dec
xchg
orb
outsl
bound
iret
or
mov
outsl
leave
icebp
shrw
pop
jmp
dec
push
fucomip
in
fdivrl
fwait
xor
xchg
jle
jge
arpl
out
mov
add
push
andb
and
hlt
mov
inc
out
imul
fstpt
loopne
xchg
mov
jae
jmp
dec
orb
out
jnp
fs
je
lahf
out
aaa
out
sub
push
loop
sub
sbb
leave
stos
push
outsb
push
bound
lds
fidivrl
jmp
add
dec
adc
and
pop
out
add
push
add
dec
rcrb
or
push
rol
dec
pop
add
cmc
in
clc
movsl
mov
call
mov
xchg
fildl
lea
push
push
daa
call
mov
in
jne
add
or
jne
add
addl
add
add
jb
jae
lods
inc
lock
pop
add
outsb
insl
movb
add
xor
adc
clc
jp
push
test
jne
fdiv
mov
inc
add
fsubl
inc
lahf
addr16
add
or
ficompl
jp
inc
cmp
or
jp
fldt
add
pop
rcr
inc
int3
cmp
sti
dec
les
add
mov
add
sbb
sar
add
sbb
std
sub
ret
sbb
push
sbbb
sbbl
shrl
add
sbb
or
mov
pop
movsl
test
insb
xchg
cli
arpl
ret
jp
add
pop
sbb
hlt
outsl
insb
cld
testl
add
nop
jmp
sti
dec
adcl
add
imul
cmpsl
xchg
mov
xor
in
fistpl
cwtl
in
add
std
sbbl
fdivrs
out
sbb
sti
jnp
jmp
dec
adc
scas
test
rorb
push
and
dec
in
loopne
sbb
scas
popa
jg
jb
pop
inc
cmp
out
xchg
pop
or
adc
sbb
cld
add
sbbl
ficoms
adc
ja
mov
pop
lock
fadds
pop
scas
xchg
popf
or
push
and
rcrb
push
sub
add
push
add
push
mov
add
jnp
ljmp
pcmpeqd
in
lahf
addr16
pop
pusha
ljmp
outsb
jae
cld
add
or
orb
popa
addb
pop
pop
jmp
ret
bound
jb
bound
ja
push
xor
shlb
jb
popa
inc
ja
push
inc
add
adcb
aam
or
push
push
sub
imul
pop
stos
aas
leave
ret
shl
arpl
stos
outsb
and
jne
add
test
pop
stos
movsb
ret
jne
push
push
lea
clc
jb
mov
add
sbb
fs
fnsave
add
mov
inc
mov
xlat
cmp
xor
ret
ljmp
sbb
push
test
cmp
push
cmpsl
into
xchg
or
push
pop
je
out
aas
sbb
xor
cmp
sbb
adc
inc
sbb
aaa
or
jb
jne
and
pop
in
out
fidivl
pop
cld
out
fisttpl
push
xchg
xchg
rclb
xchg
add
lret
pop
jmp
dec
or
pop
inc
add
xor
xor
push
test
fcompl
push
cmpsb
in
or
jbe
adc
add
xchg
ret
and
xchg
sbb
jo
add
roll
in
pop
ret
mov
aaa
add
lods
mov
dec
insb
dec
int3
or
inc
sbb
sub
push
repz
pop
pop
push
cmp
bnd
adc
ret
add
xor
repz
in
sti
shl
add
mov
or
shlb
repnz
rolb
fistps
sbb
pushf
ljmp
cli
dec
sub
pop
je
mov
pop
add
adc
cmp
jmp
jns
inc
jmp
fadds
leave
sub
adc
cmpsb
and
es
xchg
fnsave
add
pop
icebp
incl
sbb
add
pop
add
cld
incb
pushf
incl
and
fwait
call
dec
lcall
fst
dec
inc
inc
aad
lock
add
lahf
add
cmc
xchg
test
sbbl
lea
incl
pushf
pushl
addr16
test
xchg
stc
fwait
dec
cltd
je
scas
or
sha256rnds2
add
sbb
sar
je
add
add
add
xor
jns
mov
push
push
pop
push
mov
inc
sbb
ret
je
movsb
cmp
cmp
or
mov
inc
cltd
mov
lcall
jae
add
mov
or
mov
nop
fcomps
or
jno
cmpb
xchg
incl
mov
mov
loope
mov
jmp
sbb
ljmp
lods
lock
add
jmp
cmp
insb
mov
idivb
push
out
repnz
add
mov
dec
fs
stos
orb
int
push
bound
iret
or
push
jb
sub
mov
sbb
je
fstps
add
xchg
mov
cltd
addl
loop
imul
adc
jnp
pop
add
pop
xor
ljmp
cmp
out
sbb
inc
xchg
add
notb
adc
sbb
push
sbb
fs
cltd
in
pop
fldt
shll
add
add
pop
mov
push
pop
inc
rclb
test
or
outsb
jne
movsb
loopne
bound
mov
pop
jb
push
mov
movsb
xor
xor
pop
rolb
pop
rol
pop
ret
mov
imul
cmp
dec
push
mov
scas
add
popf
ret
xchg
and
cmpsb
mov
jo
and
test
cli
xor
clc
xor
pushf
pop
pop
nop
mov
shll
mov
pop
scas
or
cmc
add
rol
pop
ret
mov
clc
and
clc
lea
sub
sbb
inc
add
ret
jne
mov
add
add
adcb
in
or
dec
xor
ret
ds
dec
dec
loopne
dec
pop
mov
je
sbb
xor
add
mov
xor
jg
fs
imul
js
ret
cmpsl
lods
idiv
ljmp
adc
push
rorl
mulb
je
add
icebp
push
dec
xor
sub
sub
sub
out
sub
mov
shr
pop
add
bound
dec
gs
sbbb
clc
xchg
negl
repz
fwait
out
push
pop
aam
divl
mulb
adc
or
rcll
fs
mov
mov
fisubl
test
add
sub
out
sub
mov
adc
pop
cmp
add
sub
lret
stc
je
pop
bound
imul
in
pushf
mov
and
lea
sbb
add
or
outsl
sar
fcmove
cmp
fcmovb
int
not
add
sbb
sub
pusha
push
add
xchg
fs
add
xor
fwait
mov
jmp
frstor
orb
xor
gs
pop
inc
cmc
ficomps
sti
fcmovb
cmp
add
pop
adc
notl
sub
clc
xor
js
xor
mov
xor
mov
roll
lret
xor
push
lahf
xor
adc
pop
enter
add
ds
add
dec
rol
push
pop
push
out
adc
add
lcall
es
and
mov
pop
aaa
xchg
cmp
add
jbe
xor
in
add
or
mov
add
call
mov
pop
leave
pop
pop
inc
pop
sahf
jecxz
add
pop
add
xchg
or
cli
lcall
hlt
clc
mov
adc
pop
push
les
test
mov
push
and
lds
pop
inc
mov
das
push
cli
mov
jo
sbb
mov
add
mov
xor
notb
mov
pop
inc
hlt
fcompl
nop
repz
add
add
push
sub
cmc
pop
ljmp
cwtl
bound
mov
ljmp
daa
pop
sbb
movsl
into
gs
stc
dec
sub
or
ljmp
bound
dec
shll
cwtl
fiadds
inc
shl
repnz
sub
mov
mov
cmp
add
cwtl
jb
out
popa
cli
mov
mov
fisubs
pop
add
add
push
bound
inc
rcll
loopne
adc
aad
cli
mov
stos
cmp
push
popf
add
push
orb
xchg
pop
das
jmp
daa
shrl
pop
ret
jb
daa
stc
fcmovb
int
divb
push
inc
shrl
pop
shlb
daa
sti
mov
shrb
out
mov
or
add
pop
imul
sbb
in
sbb
mov
out
xor
js
push
cmp
cmp
rolb
ret
mov
clc
xor
xchg
pop
pusha
neg
out
test
shl
add
ds
xor
mov
lea
mov
pop
dec
cmp
push
adc
dec
in
xor
jo
push
cmp
add
sbb
mov
xor
sti
xor
addl
cmp
std
rcrb
jae
mov
sub
or
mov
inc
test
push
sub
rorl
adc
sti
call
mov
sldt
add
add
jp
rcr
add
mov
mov
lea
xchg
add
add
pop
imul
mov
xchg
test
pop
gs
or
rcrb
mov
adc
or
scas
cltd
out
cmc
xchg
push
data16
shlb
es
cltd
jae
pop
mov
lods
add
pop
andb
popf
mov
fcompl
out
out
mov
pop
push
mov
aam
fbld
jb
sub
xor
ret
pop
push
mov
push
loop
out
push
je
and
scas
jecxz
sbb
push
pop
sbb
mov
pop
fisubrl
out
cmc
mov
rclb
add
iret
push
out
add
mov
insb
ret
addr16
and
add
and
shl
and
cli
arpl
cli
shl
push
subl
test
insl
add
scas
mov
repnz
stc
mov
push
add
sbb
push
outsb
push
lcall
andl
movsb
dec
cmp
sub
pop
add
add
pop
lcall
into
mov
loop
mov
pop
repz
add
pusha
lret
or
jmp
pop
or
or
xchg
pop
and
sbb
jge
add
add
pop
dec
or
mov
pushl
or
jg
test
pop
add
ret
lods
mov
inc
and
push
mov
add
add
add
lds
jne
push
sahf
clc
mov
pop
and
and
mov
adc
lea
inc
mov
mov
leave
add
ljmp
fldl
loope
add
loope
sbb
inc
sbb
pushf
inc
cmp
inc
call
lahf
outsb
lods
inc
push
jl
add
rol
cmpsl
jle
add
push
push
insb
fmull
in
les
pop
enter
xchg
add
sbbb
pushf
or
dec
andl
add
testb
mov
push
iret
jecxz
mov
pop
stos
sub
mov
add
sbb
push
stc
mov
add
mov
add
sbb
push
inc
sbbl
out
mov
loop
push
xchg
lcall
sbb
or
pop
pop
jb
cmp
cmpsl
add
and
mov
sbb
xchg
lcall
das
ret
push
pop
loope
call
ret
leave
sub
push
bound
mov
push
decb
in
jmp
pushf
lcall
sbb
movsb
pop
loopne
mov
pop
add
xchg
sbbb
scas
mov
in
jmp
jno
add
and
imul
xor
pushf
mov
ret
loope
je
in
jmp
or
lea
add
dec
push
les
xor
or
lea
aam
clc
int3
repz
lcall
rcl
mov
or
push
cld
sbb
add
rorb
clc
inc
loopne
sub
jne
stos
fwait
clc
mov
rol
sar
mov
push
ret
add
leave
in
decl
sub
inc
cltd
dec
roll
rcl
mov
add
pop
mov
jne
rolb
sbb
das
cld
fnstsw
mov
aaa
add
fisttpll
sarl
xchg
cmpl
aas
xchg
loope
pop
xchg
add
lock
sbb
inc
clc
sbb
sbb
jg
mov
mov
rolb
ficompl
add
adc
js
xchg
call
roll
mov
add
ss
jle
lods
jne
rolb
inc
scas
shl
js
xchg
pop
pop
ret
ljmp
stos
pop
inc
sbb
cld
push
test
mov
inc
sbb
mov
jle
pop
jb
je
in
and
cmpsl
jb
pop
icebp
fwait
cli
and
add
lahf
push
out
xor
inc
jno
add
test
adc
stos
and
pop
cmpsl
fwait
in
xchg
daa
sbb
les
stos
add
jle
in
mov
xchg
aas
push
in
lods
mov
add
cmpsl
and
jmp
and
loopne
adc
push
inc
std
cmp
inc
sbb
sbb
movsb
das
fxch
movl
add
add
mov
mov
je
mov
push
jmp
stos
pusha
pushl
insb
out
push
and
movb
sbb
inc
aad
imul
mov
push
pushl
lods
call
jecxz
xor
in
add
lods
cmpl
jne
or
movsb
pop
leave
add
dec
decl
mov
add
add
adc
jp
add
mov
sub
imul
into
push
add
jne
add
call
ret
pop
jle
ret
stos
mov
mov
hlt
incb
pushl
rolb
mov
push
add
add
add
add
pop
add
add
mov
lea
je
add
jbe
enter
insb
pop
add
sbb
mov
ret
jne
jno
jmp
faddl
add
mov
mov
sar
sub
push
insb
das
or
jmp
ret
je
jmp
fwait
jg
inc
test
pop
movl
incl
int3
and
or
mov
sbb
ret
jle
leave
ds
jg
jne
roll
mov
cmc
jl
shr
sbb
dec
adc
fisubrl
xchg
pop
in
jbe
pop
imul
push
insb
int3
sub
jno
inc
and
nopl
jmp
fsubl
xchg
test
arpl
jnp
es
mov
xchg
add
push
test
popa
sub
push
inc
xchg
or
jmp
add
add
ljmp
fbld
adc
push
adc
icebp
fwait
dec
push
add
pop
mov
sbb
cwtl
jmp
dec
loopne
in
imul
xchg
add
jbe
imul
imul
pop
inc
add
xlat
cltd
bound
pop
mov
sub
ret
xor
xchg
ret
pop
movsb
lcall
dec
lods
mov
loopne
icebp
push
push
les
or
int
inc
push
and
je
sahf
int
add
lock
mov
mov
add
stos
mov
jbe
hlt
push
and
cmp
push
call
add
jp
decb
inc
test
sub
jb
push
outsl
add
mov
pushl
hlt
je
in
lret
decl
mov
add
jne
decl
inc
stc
jne
jbe
sbb
add
inc
hlt
je
sub
lret
shlb
hlt
dec
rcr
decl
push
hlt
sbb
adc
pushf
lock
movsb
jne
or
das
hlt
add
popa
or
add
sbb
jae
ljmp
fwait
into
out
add
hlt
das
ss
fcompl
inc
push
jae
call
pop
mov
imul
push
mov
aaa
jae
inc
xorl
test
mov
clc
lret
cmpl
add
cmpsl
call
add
cmp
je
mov
ss
sbb
mov
sbb
ljmp
out
xlat
add
in
mov
add
sbb
add
fisubl
xchg
pusha
repnz
xchg
js
imul
dec
pop
jo
mov
sbb
and
movsl
and
push
fcmovnb
dec
push
sbbb
jmp
stos
sbb
mov
or
movsb
add
dec
cs
push
cmpsb
imul
push
dec
loop
leave
pop
adc
pop
sbb
xchg
scas
add
mov
pushl
jne
jg
xor
pop
ret
and
jmp
adc
mov
lods
or
fimuls
jb
test
mov
push
add
aaa
andl
mov
leave
pop
pop
call
pusha
add
push
push
out
call
sahf
mov
pop
jnp
jmp
mov
mov
jl
jmp
push
sahf
rcl
pop
add
in
incl
inc
pop
add
js
pop
inc
pop
pushl
in
inc
rolb
mov
clc
or
add
cld
je
in
test
add
loopne
rolb
cmc
bound
add
pop
add
enter
lds
clc
push
push
call
scas
sbb
fdivl
inc
mov
pop
add
test
xor
test
add
pushl
cmpsb
xchg
inc
inc
orb
inc
add
pop
xchg
lcall
xor
fnstenv
push
lods
add
add
xor
or
mov
orl
and
jno
mov
dec
pop
xor
jne
in
sbb
sbb
test
sub
pop
inc
in
cs
dec
lahf
call
daa
hlt
push
add
movsl
pop
mov
sbb
mov
mov
jnp
ret
jne
cltd
hlt
icebp
pop
stc
mov
add
bound
adc
add
sarb
mov
push
sub
mov
push
daa
into
mov
aad
in
add
les
push
test
add
jmp
add
je
shrb
or
mov
mov
sbb
imulb
add
inc
inc
mov
test
call
inc
pop
and
add
mov
add
pop
mov
insb
loop
push
sbbl
inc
jne
popf
leave
jmp
pop
scas
mov
lahf
pop
lods
push
das
sbb
test
pop
add
into
and
out
inc
call
mov
and
jmp
fwait
rolb
pop
adc
pop
xor
inc
mov
xchg
jmp
inc
mov
inc
inc
cmp
incl
xchg
aam
andb
fsubrs
push
add
add
add
inc
pop
add
sub
pop
or
jno
cmpl
jne
add
cli
incl
push
add
dec
xchg
mov
mov
push
add
popf
xchg
enter
shlb
xlat
add
push
mov
sbb
les
sbb
repz
dec
les
add
jnp
pop
flds
push
add
add
mov
xor
add
pop
call
add
jb
push
lahf
mov
add
xor
decl
adc
mov
sbb
pop
mov
sbb
enter
inc
fsubrl
decl
stos
sti
rcrl
pop
lret
inc
mov
aas
push
call
mov
push
add
stos
push
pop
enter
je
inc
popf
jnp
sub
add
ss
sub
jmp
repz
enter
push
add
push
or
test
and
push
fmuls
test
xor
cltd
adc
mov
mov
test
pushf
jmp
insl
stos
cli
and
pushf
fcmovnb
popa
stos
repnz
pushf
lahf
mov
xchg
mov
cltd
mov
add
movsl
pop
mov
movsb
andl
mov
add
inc
jae
mov
or
cld
sbb
jmp
mov
or
xor
clc
push
adc
call
loop
sbb
or
pop
mov
xor
xlat
cmpsl
inc
mov
sub
or
sub
xchg
sbb
mov
dec
add
das
subl
mov
push
add
mov
pop
mov
leave
ret
fcom
jmp
jo
add
jl
jne
sbb
mov
hlt
xor
jne
in
or
push
call
cld
sbb
add
push
add
jl
xor
dec
jne
or
in
jne
in
or
dec
xlat
jmp
push
ret
mov
ljmp
push
call
mov
push
cmpl
add
les
ret
je
mov
lock
mov
or
sub
je
mov
cld
sbb
repz
out
push
fwait
jne
adcb
je
movsl
jmp
ret
jne
jns
adc
push
out
call
imul
inc
sub
stos
dec
dec
cltd
ljmp
xor
add
sbb
or
loope
push
lret
aas
or
xchg
add
cltd
jne
pop
xchg
inc
repnz
or
pop
dec
cmp
sarb
jle
fadd
lret
aas
jmp
repnz
enter
adc
push
je
xor
jae
mov
mov
sub
int
push
ds
sbb
mov
fisubl
iret
jno
cltd
test
testb
pop
pop
inc
adc
icebp
stos
out
cwtl
pop
sbb
test
mov
stos
mov
mov
push
shlb
pop
adc
xor
sbb
movsb
cmp
loop
xchg
push
shl
lcall
aam
jmp
push
call
bound
leave
sub
push
jb
fcmovnb
jne
cmp
cs
add
pop
rolb
sbb
addb
cmp
js
pop
pop
pushl
fisttpll
test
push
fisubrs
cmp
ret
add
add
xchg
add
xor
or
in
mov
jp
add
in
push
out
sbb
in
test
incl
in
call
or
mov
sgdtl
add
in
divl
incl
test
ja
dec
push
sbb
inc
push
shlb
lret
add
in
decl
in
inc
sbb
stos
jb
xor
or
jle
jmp
jecxz
or
adc
repnz
sysenter
lahf
dec
inc
sbb
les
mov
or
mov
mov
ret
xchg
out
dec
xor
aam
jnp
xchg
jne
xchg
adc
imul
dec
arpl
or
dec
imul
dec
push
mov
lahf
repnz
mov
xchg
call
pop
rorl
fsubrl
sub
mov
stos
or
lock
fstpt
sbb
ficomps
cld
ret
scas
in
xor
xchg
sub
das
add
in
xchg
add
dec
sbb
xchg
cmp
ficoms
pop
xchg
xchg
loopne
xchg
jnp
mov
xchg
imul
sbb
insb
les
loopne
xchg
push
cmp
dec
mov
push
xchg
xor
sub
cmp
cmp
lods
push
adc
xchg
push
sbb
mov
inc
pop
lcall
jne
test
or
sub
push
mov
pushl
xchg
inc
cmp
and
inc
xchg
test
or
enter
jne
cmp
dec
push
jle
arpl
aaa
mov
incl
push
sbb
jmp
sub
aam
cmp
xor
inc
mov
mov
cmp
mov
or
cmp
jne
xchg
decl
mov
jne
dec
into
je
and
push
iret
je
add
test
in
xchg
lock
sub
outsb
mov
inc
clc
xchg
push
or
test
loope
mov
or
jge
pop
je
xor
push
pop
pop
cmpl
je
loop
adc
xchg
push
fildl
int
mov
add
sar
jae
insb
mov
lock
sbb
fbld
jne
lods
adc
xchg
pop
xchg
jecxz
xor
xchg
jne
mov
decl
inc
add
aad
decl
lahf
and
xor
push
pop
inc
fwait
insb
fldl
mov
or
sbb
add
pop
add
ds
xor
sbb
pushf
hlt
pop
inc
add
pop
adc
add
add
ss
pop
adcb
xchg
cltd
addb
lcall
pop
ds
ss
add
scas
xor
and
dec
sbb
jmp
mov
lahf
pop
flds
sbb
pop
negb
pop
jmp
adc
jmp
add
jmp
mov
loop
jmp
leave
pop
pop
jmp
leave
fcompl
leave
fcompl
jle
cs
sbb
sbb
jmp
add
jp
add
or
adc
repnz
mov
xor
inc
sbb
pop
add
stos
lahf
lock
mov
adc
loop
scas
pop
scas
pop
sub
jmp
add
add
sub
stos
adc
jmp
fnclex
mov
mov
setl
xchg
sub
call
push
fidivrl
lods
imul
adc
sbb
sbb
inc
pop
das
data16
lea
push
add
inc
cld
mov
mov
push
push
mov
out
pavgw
clc
jne
mov
add
push
mov
int
call
cltd
add
fwait
pop
add
xchg
xor
inc
fisttpl
or
mov
pop
call
call
insb
sbb
cltd
faddp
sub
in
push
add
push
in
or
mov
cld
insl
pop
add
fwait
in
or
mov
pushf
add
add
push
rcrb
cltd
loop
cmp
mov
gs
push
xor
dec
add
mov
je
inc
mov
das
ret
jo
dec
add
add
into
lea
sbb
inc
popf
sbb
in
add
push
xor
add
sbb
mov
int3
lea
dec
cld
out
rorl
add
xchg
add
inc
mov
ficompl
pop
data16
imul
cmp
sbb
push
lds
ss
xchg
mov
add
push
pop
shlb
push
mov
jmp
call
or
mov
and
inc
mov
xor
pop
pop
jmp
fcmovnb
call
add
shll
inc
add
pop
jmp
add
xor
arpl
pushf
popa
xor
in
xor
cld
xchg
cli
sahf
xchg
xor
mov
fwait
xchg
call
mov
das
pushf
add
cmp
xlat
xlat
push
ss
xor
and
call
cltd
inc
jb
pushf
fcoms
test
xchg
push
add
jmp
lods
inc
mov
xor
push
loopne
cmpsb
mov
xor
je
xor
mov
out
scas
nop
xor
sbb
cmp
in
pop
push
nop
cmpsl
or
lods
mov
mov
adc
call
add
out
daa
sub
push
push
push
test
cmp
pop
add
add
fidivrl
mov
addr16
gs
add
enter
and
mov
rorb
pushl
in
inc
out
add
sbb
call
in
call
outsl
cmp
and
jno
call
leave
adc
mov
mov
leave
pop
add
test
je
mov
add
pop
idiv
xor
sbb
mov
sbb
ret
inc
add
sbb
inc
hlt
xor
add
mov
sbb
negl
pop
xor
sbb
inc
hlt
insb
mov
hlt
or
push
sti
mov
stos
inc
add
faddl
add
lahf
scas
xchg
test
lds
mov
cmpsb
mov
sbb
adcb
cmp
fisubrs
mov
jle
je
aaa
add
test
fwait
imul
xor
das
mov
sarb
test
xor
sbb
bswap
loope
xchg
sub
push
sbb
movsl
loope
arpl
or
or
call
mov
rcl
loope
ficomps
add
shr
imul
mov
add
ljmp
repnz
sahf
xchg
call
call
xchg
jmp
jbe
das
call
xor
add
decl
xchg
cld
cltd
movsb
test
ds
cmp
pop
inc
pop
insb
and
sub
pop
lods
add
push
inc
std
movsb
push
add
sub
jmp
jb
hlt
cmp
repz
xchg
sub
call
sub
or
add
add
dec
inc
or
arpl
decl
lods
hlt
negl
push
aam
or
call
dec
pop
push
incl
mov
idiv
xor
lea
mov
loop
add
loop
lock
call
stc
inc
inc
cmc
shlb
test
fdivr
decl
push
lcall
xchg
neg
sbb
inc
add
sub
jno
mov
stos
inc
cmovns
fldl
je
fadd
dec
call
or
sbb
sbb
inc
jmp
lea
lcall
adc
inc
std
mov
dec
insl
push
call
mov
fwait
cmp
xchg
jno
jmp
inc
adc
add
mov
in
sub
xchg
sti
cbtw
div
pop
out
push
or
xchg
in
mov
sub
mov
sub
xchg
xchg
sub
cld
ret
cmc
scas
xchg
sub
xchg
sub
xchg
out
call
add
fists
roll
negb
adc
pop
mov
sub
dec
ret
fstpl
adc
lds
int3
cltd
jmp
sbb
push
sbb
mov
fwait
add
add
mov
pop
lcall
das
fcompl
pushf
add
and
or
mov
mov
daa
jmp
adc
mov
sub
mov
add
cmp
hlt
ja
push
pop
mov
sub
fidivrs
pop
test
pop
pop
add
adc
mov
test
jmp
pop
mov
xchg
loop
inc
jmp
adc
or
scas
pop
push
push
add
loopne
xor
call
or
loopne
or
stos
sar
subb
clc
es
sbb
call
dec
pushl
insl
inc
add
inc
add
test
out
add
push
push
movsl
fidivs
jae
jmp
insl
push
decl
call
fldl
add
insb
inc
add
mov
xor
hlt
mov
je
ret
jno
imul
or
pop
les
dec
or
int
jmp
subb
cltd
push
add
jmp
dec
jae
push
test
decl
inc
aam
icebp
cmp
adcl
stc
pop
je
cmp
lcall
pop
mov
ret
cmp
push
call
int3
pop
mov
dec
sbb
push
insb
sbb
orl
cmc
imul
incb
dec
aam
xchg
cs
add
jbe
fdivrp
and
sbb
enter
add
pop
rorl
ljmp
or
and
push
pop
scas
cmc
inc
and
add
push
jle
jae
cld
or
icebp
sub
push
ret
push
in
sti
xor
push
dec
daa
cltd
or
push
icebp
cmp
add
inc
inc
call
repnz
add
add
mov
sahf
es
push
add
call
cmpl
loope
sahf
or
out
fwait
add
inc
mov
cmp
xor
mov
inc
sbb
scas
popf
push
rcrb
es
subl
jne
testl
add
push
test
es
inc
add
decl
and
icebp
std
cli
fldt
pop
int
inc
xor
pop
pushl
sbb
pop
shlb
hlt
cli
sub
pushl
call
incl
call
push
xor
ret
and
mov
dec
inc
lds
dec
incl
push
call
push
xor
add
push
mov
dec
inc
test
or
inc
inc
mov
fidivl
testb
adc
inc
pushf
div
inc
mov
add
ret
mov
lret
sbb
imul
test
call
xchg
jmp
dec
repz
arpl
incl
add
pushf
sbb
rolb
add
add
mov
in
repz
or
or
inc
js
std
cmc
jle
push
xor
mov
jb
push
add
add
pushf
into
imul
imul
rcrl
mov
add
loop
test
jo
xchg
ja
scas
loope
fisubs
push
jg
scas
std
imul
add
add
pop
jle
lods
cmc
jle
push
add
ficomps
fsubs
xor
jle
push
xabort
xor
adc
adc
mov
lods
mov
and
jle
pop
jmp
adc
sbb
or
jmp
push
dec
call
loop
lods
xadd
mov
mov
popa
adc
ss
push
es
call
pusha
xchg
jecxz
push
xorb
fs
and
test
mov
bound
lea
fsubrp
and
shll
call
xor
inc
out
es
pop
rclb
push
dec
add
pop
cmpsl
gs
pop
jbe
add
mov
mov
jne
or
push
pop
add
repnz
test
std
dec
test
test
cmc
sub
leave
push
add
lods
loopne
inc
add
in
call
rclb
xchg
jno
push
sbb
or
jne
mov
push
sahf
call
jmp
rolb
sub
mov
jb
push
add
pop
push
clc
jmp
push
mov
xor
or
addr16
es
stc
jnp
arpl
pop
mov
jl
in
jecxz
jge
xor
or
mov
inc
sbb
push
jae
add
sbb
or
or
rorb
stos
push
jl
add
dec
push
scas
xchg
ljmp
incb
fstpt
insb
add
cmp
pushl
jns
mov
ja
sbb
jp
fs
test
dec
xchg
and
jo
movsb
js
xchg
test
pop
jmp
cmpsl
push
and
pop
cmpsl
add
sbb
fdivl
add
cmp
stc
dec
sub
shlw
call
icebp
add
xor
jns
and
icebp
pop
xor
dec
sti
pop
xor
pop
xchg
mov
fldcw
loop
out
in
shll
jecxz
mov
inc
add
daa
mov
rcll
insl
mov
push
add
pop
push
xchg
pop
add
push
lea
xchg
aad
ja
pop
push
cmpl
pop
lcall
pop
add
pop
into
test
movsl
pop
lcall
pop
mov
mov
icebp
fwait
add
call
add
mov
push
into
sbb
cld
out
push
mov
inc
push
incl
pop
add
mov
movsb
call
in
inc
mov
push
push
inc
push
push
out
in
incl
jle
je
pop
push
lea
add
add
dec
mov
call
pop
outsl
call
or
or
test
push
push
or
jne
mov
std
sub
push
aas
pushl
mov
dec
mov
ljmp
movsb
jne
sbb
pushf
incb
mov
jae
push
fucomp
pop
mov
jns
fwait
in
in
sti
xchg
ds
jmp
ja
push
icebp
call
mov
push
jmp
lods
js
pop
sub
push
xchg
popl
sbb
add
mov
dec
inc
sbb
out
or
sub
pop
xor
xlat
cmp
sbb
add
ja
in
in
pop
repnz
icebp
shll
imul
xor
rcr
mov
sbb
aas
cltd
jecxz
ja
pop
jmp
or
sbb
lock
in
sbb
xchg
sbb
pop
je
mov
ja
push
push
fimuls
pop
insb
add
push
ja
pop
mov
pop
add
xor
shrb
sbb
in
push
pop
jmp
jbe
sbb
imul
mov
sbb
notb
call
jo
fdivrp
fimuls
lcall
xor
jmp
pop
add
mov
jmp
jo
dec
sub
xor
pop
pop
or
add
sbb
bound
repnz
call
lcall
xchg
cwtl
sub
pushf
iret
std
mov
xchg
sbb
cmp
jb
call
incl
and
out
cs
lcall
push
call
add
xchg
jns
nop
decl
bound
mov
adc
mov
jne
rorb
cli
std
call
nop
call
loop
mov
rorb
dec
mull
push
into
addb
fstp
lret
in
cld
cs
je
fnstsw
push
inc
cmc
mov
sub
jno
addr16
popa
out
pop
hlt
scas
jbe
fistpl
movl
rorl
jmp
outsl
inc
add
dec
cmp
out
je
inc
out
iret
inc
sbb
jne
adc
lock
fwait
shrb
pop
enter
push
ret
incl
mov
scas
push
fldl
sar
jmp
nop
je
shll
out
iret
inc
sbb
out
sti
inc
int3
dec
pushl
shr
mov
ret
and
or
dec
push
je
add
cmp
add
pop
es
pop
add
cmp
and
mov
clc
fsubrl
dec
test
jmp
les
sub
sub
push
inc
mov
sbb
adc
add
lds
or
pop
inc
sub
sbb
sbbb
cmp
bound
pop
ljmp
lods
dec
sbb
add
and
mov
ret
or
sub
cmp
stc
and
add
sbb
ret
sbb
jne
addr16
push
outsl
test
push
cmc
pop
call
xchg
aaa
lods
inc
jmp
in
out
out
push
sub
sbb
push
push
std
sbbl
ljmp
mov
imul
call
add
lods
inc
jmp
adc
incl
and
jne
negl
outsb
into
pop
jne
into
lea
push
in
sbb
push
dec
and
in
scas
mov
leave
loopne
or
unpckhps
shrb
jne
mov
sub
mov
sbb
push
ret
xor
push
mov
mov
pop
call
or
test
pop
mov
mov
add
push
mov
or
mov
push
inc
mov
lea
xor
pushl
mov
enter
add
mov
call
dec
inc
push
inc
sbb
jo
sub
add
cli
out
inc
jno
add
outsb
call
in
adc
add
pusha
push
fimull
jno
lret
mov
push
mov
cmp
mov
sub
jno
mov
add
and
jne
push
pop
aad
hlt
outsl
jmp
sti
pop
sbb
fsubrl
pop
xor
push
cmpsl
filds
or
add
inc
test
pusha
daa
sub
add
aam
sub
jmp
mulb
add
add
pop
fldt
test
jmp
or
stc
ficoml
ficompl
push
xchg
ret
pop
jo
mov
pop
cmp
mov
pop
sub
outsl
gs
add
ffreep
andl
add
pop
cmpsb
stc
and
addl
adcl
add
cltd
jmp
and
hlt
inc
cld
lods
addr16
adc
dec
fwait
add
shlb
loope
loopne
mov
cld
xchg
aaa
jnp
push
xchg
lods
cmpsl
inc
jmp
loopne
xchg
out
jge
dec
adc
loop
lcall
xor
xor
adc
push
mov
xlat
cmp
into
lcall
add
dec
loope
popa
adc
xor
sti
dec
cmpsl
or
lock
lcall
repnz
loope
or
movntq
roll
add
push
inc
inc
test
decb
out
arpl
inc
add
jge
inc
cmc
xorl
push
adc
inc
add
add
add
mov
std
ret
or
sbb
inc
add
add
add
lahf
std
call
das
or
mov
xchg
sbbb
pop
je
outsb
lcall
or
fstpt
add
cmpb
sti
out
scas
insl
pushl
pusha
push
pop
add
add
cmp
cld
pop
xchg
add
inc
insl
push
jnp
roll
faddl
add
insl
jne
insb
lock
rcll
fisttpl
mov
push
add
pushf
xor
pop
mov
outsl
jmp
add
loop
inc
add
push
add
addb
movsb
insb
jae
add
bound
fsin
adc
sti
cmp
jl
dec
test
insb
leave
bound
add
cmp
data16
test
add
inc
and
and
pop
pushf
js
fnstsw
test
sti
xchg
pop
pop
sbb
insb
dec
sub
repz
mov
lcall
ret
pop
clc
mov
stos
inc
add
lcall
imul
testl
add
add
call
cmp
add
stos
cld
push
clc
pop
xchg
mov
call
mov
mov
aam
clc
xchg
das
mov
or
or
push
cltd
addr16
ss
push
cs
push
call
adc
sbb
or
in
in
push
sti
imul
int3
arpl
mov
mov
ss
ffree
paddd
jne
mov
out
lcall
test
incl
dec
inc
inc
mov
les
xchg
inc
call
lret
call
jbe
inc
xor
test
sarb
pushl
xorl
ljmp
sarb
add
xorl
cmp
jecxz
dec
jbe
cmovno
pushl
add
andl
jo
sbb
add
push
pop
test
test
sti
arpl
out
popf
imul
rorl
pop
popa
addb
jne
lods
sarb
hlt
adc
out
add
es
mov
adc
mov
sti
pop
ljmp
imul
imul
sbb
dec
and
sbb
push
cmpl
add
pop
jb
mov
arpl
xchg
jmp
mov
icebp
push
shll
cmpsb
push
pop
or
adcl
pop
or
xchg
cmp
push
pop
or
push
test
or
jmp
aas
or
ds
mov
pop
xchg
push
push
lcall
inc
cs
shll
pop
pop
xchg
gs
xchg
rcll
or
push
cvtdq2ps
xchg
js
push
sub
xorl
add
addr16
insl
fwait
add
cmpsl
inc
jmp
and
sbb
or
incb
ljmp
add
xchg
pop
adcl
stos
in
lcall
jp
or
in
push
call
je
push
in
pop
faddl
inc
jmp
mov
or
add
movb
add
lds
ret
decl
push
fists
add
sbb
push
adc
repz
jg
jne
scas
push
lods
jne
or
or
inc
sbb
je
or
or
inc
nop
rorb
ret
call
lods
divl
pushl
bound
pop
call
add
lret
out
testl
mov
jno
sti
les
add
inc
or
jns
lahf
cmp
sbb
cld
xor
mov
loope
fcompl
adc
mov
leave
fs
pushf
cmp
ficompl
sub
mov
rcll
mov
inc
psubq
xchg
nop
incl
inc
cmp
ljmp
add
int3
sar
out
inc
sbb
das
loope
mov
call
daa
xor
push
dec
in
jne
pop
adc
out
push
pop
cmp
adc
aaa
jo
jmp
add
add
repnz
sub
aam
loope
fiadds
into
fs
xchg
jmp
add
int
ret
add
jmp
sbb
nop
insb
pop
or
rcr
or
sti
cmp
fs
movsb
movsl
xor
add
sub
pop
xchg
out
sbb
fsubs
or
pop
add
add
js
jne
orb
push
push
sbb
jmp
or
push
sahf
in
imul
pop
out
and
add
aam
inc
pusha
fwait
add
pop
je
jo
push
sub
mov
leave
ret
loop
mov
aas
lock
enter
push
add
lods
inc
jmp
lcall
mov
fwait
add
pop
push
rcl
mov
add
xchg
call
mov
decl
and
call
add
je
lcall
js
inc
xor
adc
mov
push
jne
jp
sti
push
push
call
pop
cmp
mov
fstpl
out
sti
repz
xor
pushl
jl
or
repz
ljmp
push
xor
jne
jae
out
jl
ret
push
mov
sbb
bound
pushf
adc
add
ljmp
test
mov
push
or
stos
shrl
call
aad
or
push
mov
fcoms
in
pushl
sub
mov
nop
lcall
sti
ret
sbb
push
loope
xor
popf
mov
call
mov
adc
imul
inc
scas
mov
add
sti
push
aas
frstor
int
popa
inc
repz
pop
mov
arpl
imul
popa
pop
sbb
add
lds
sbb
add
sbb
aaa
jb
jmp
add
pop
add
fmull
push
or
push
pusha
mov
rcrb
add
das
pop
ret
jae
xor
jge
sub
add
push
push
test
popa
leave
push
xchg
arpl
add
pushl
jo
add
lods
inc
jmp
pop
add
dec
xlat
fwait
add
incb
sbb
xchg
mov
jl
call
xchg
roll
decb
cmp
sbb
add
pop
call
addl
jne
aaa
pop
out
add
repz
shr
dec
rcrl
add
mov
jmp
push
push
call
loop
mov
lret
jmp
jmp
push
cmp
jne
push
add
in
add
add
int
add
movsb
jne
dec
xor
incl
xor
data16
je
push
xchg
movsb
jne
sub
ja
mov
lods
push
push
mov
fadd
cld
lahf
push
push
mov
pop
call
or
sti
push
movsb
jne
pop
xlat
jmp
and
sub
jbe
movsb
ljmp
movsb
jne
lods
repz
pushl
in
xlat
pop
xor
popf
cmp
inc
add
outsl
mov
add
xor
dec
rol
adc
dec
pop
hlt
push
ret
or
shl
repz
repnz
jno
mov
imul
pop
call
ss
ljmp
loopne
cmp
add
pushf
pop
mov
rclb
mov
or
jne
inc
pop
jne
sbb
jecxz
sbb
rcrl
pop
jne
adc
pop
leave
push
xchg
addb
dec
pop
dec
jmp
dec
xor
jmp
xor
xor
aam
pop
test
insb
lret
mov
pop
dec
xlat
and
enter
roll
sbb
jbe
add
icebp
imul
pop
lret
xchg
ja
add
dec
ficoms
mov
out
addr16
les
out
pop
add
xchg
pop
push
cld
and
cmp
movsl
sbb
repnz
and
mov
scas
pop
or
jmp
hlt
add
jmp
sbb
add
rolb
into
test
add
sbb
xchg
outsb
repnz
gs
xchg
jmp
pop
add
ja
mov
sbb
jo
push
mov
pusha
rolb
sub
mov
addr16
push
or
out
pushl
pop
fwait
add
or
jecxz
mov
ljmp
hlt
scas
push
xor
pushl
jp
loope
hlt
push
call
mov
jb
lcall
lret
aas
add
movsb
pushl
add
mov
call
add
pop
pushl
or
dec
test
cmp
decl
sub
test
mov
call
cwtl
push
inc
mov
mov
xchg
movsb
pushl
jbe
inc
jne
push
mov
pop
movsl
std
xorb
iret
packsswb
mov
in
jmp
insl
adc
pop
mov
add
xor
inc
test
pop
decl
repnz
lahf
das
pop
notl
jbe
je
jno
in
or
test
sbb
mov
sbb
imul
lret
cmpsl
addr16
pop
lods
mov
push
pop
mov
add
or
mov
pop
pushf
pusha
xchg
fstpl
push
rorl
mov
int
test
xor
fstpt
pop
jae
dec
movsl
pop
rcll
hlt
mov
xchg
pop
jno
xchg
pop
xor
sbb
sub
jge
xor
jbe
add
xor
fwait
insb
adc
pop
insb
inc
les
sti
dec
push
repz
push
adc
test
repnz
shl
aad
ret
std
adc
sahf
add
xor
pop
xchg
mov
jo
andl
je
testl
aad
xchg
clc
cmp
jae
push
pop
std
std
cld
mov
cld
mov
adc
pop
out
mov
xchg
call
subl
clc
mov
pop
jae
mov
jg
inc
jmp
add
mov
mov
pop
in
mov
push
rclb
cmc
sti
incb
sub
incb
and
adcb
pushl
jo
std
andb
insl
mov
ret
lret
mov
hlt
lcall
xchg
std
jne
movsl
xor
out
mov
jne
jp
testl
add
stos
incl
add
push
push
out
push
lea
mov
test
call
mov
fildl
add
mov
ljmp
push
imul
popa
mov
in
fildll
hlt
push
mov
sbb
jae
jmp
inc
sbb
lock
add
add
push
decl
adc
inc
sbb
pop
mov
inc
fcoml
icebp
ljmp
orl
fs
add
jmp
jg
idiv
xchg
jmp
inc
sbb
nop
lock
push
call
mov
xchg
mov
cltd
sti
adc
jmp
xchg
test
stos
mov
dec
mov
mov
add
add
imul
ljmp
into
insb
repnz
xor
int3
fcompl
adcl
ficomps
xor
xchg
add
jg
xchg
cmp
test
outsl
sbb
push
adc
mov
pop
jmp
or
lcall
stc
inc
push
imul
xor
add
pushf
pop
add
cmp
decb
push
jo
adc
scas
lock
call
add
popf
call
repnz
enter
adc
scas
jecxz
lock
out
mov
push
mull
sar
pop
icebp
decb
enter
push
mov
outsb
jo
fistpl
push
clc
push
mov
clc
je
in
test
sbb
lcall
mov
cli
mov
or
std
decl
jne
sbb
movsl
ret
leave
mov
push
cmp
push
add
jmp
mul
mov
inc
mov
xor
and
out
cwtl
mov
call
mov
jne
xchg
in
jp
leave
ret
add
add
push
mov
mov
lock
adc
std
xor
popf
and
mov
add
dec
inc
in
add
sbb
leave
repz
add
inc
add
pushl
push
push
test
push
mov
xor
jne
dec
mov
mov
sbb
sub
jp
add
add
mov
test
push
in
push
pop
loope
mov
mov
dec
add
int3
cltd
xchg
push
imull
call
int
call
jl
in
xchg
sbb
rol
push
pushf
jmp
push
jmp
adc
pushf
jmp
push
movsl
loopne
pop
lret
test
xor
rol
cmc
push
push
stos
notb
add
icebp
sti
mov
mov
out
cmc
push
negb
mov
fwait
jmp
push
jae
sbb
fwait
jmp
push
movsl
loopne
pop
push
mulb
jo
lods
push
in
xorb
fcompl
xchg
sub
xchg
push
sub
mov
cmc
jge
shrl
shlb
testb
out
hlt
das
outsb
fwait
push
notl
mov
adc
mov
push
aam
shlb
cmc
es
push
mull
dec
push
add
pop
call
mov
pop
divb
xor
inc
test
add
fs
out
mov
cmc
push
mov
fidivrl
sbb
jmp
xlat
in
xchg
pop
data16
pop
add
add
mov
popf
and
pushl
mov
pop
mov
dec
lock
test
idiv
bound
mov
adc
lcall
mov
decl
idiv
adc
mov
xchg
movsb
mov
mov
cwtl
xchg
movsb
incl
push
pop
je
test
mull
add
add
test
mov
or
nop
or
add
adc
sti
mov
fisttpll
clc
insb
dec
push
cmp
cltd
in
repz
call
jmp
pop
mul
movsb
pop
ss
pushf
dec
decl
cltd
sbb
push
dec
inc
and
lock
fs
call
xchg
mov
add
add
dec
incl
loop
add
cli
call
js
sbbl
inc
out
dec
jne
or
mov
lods
jnp
inc
cltd
and
pop
jmp
shrb
repz
dec
test
add
xchg
adc
scas
inc
and
jnp
fsubl
pop
out
mov
sbb
mov
add
sub
mov
sbb
movsb
dec
sbb
jmp
dec
and
fldenv
test
sbb
cwtl
andb
out
xlat
jae
pop
push
test
fcomps
add
add
push
in
jmp
roll
scas
mov
lea
sahf
jo
call
pusha
mov
loopne
lods
jno
sbb
adc
add
repnz
dec
repnz
pop
adc
inc
test
add
imul
ds
cmp
add
xchg
ljmp
push
test
jmp
loopne
imul
pop
repnz
shl
out
cld
inc
sub
add
fs
incb
pop
adc
addr16
enter
sahf
pushl
add
mov
mov
mov
decl
mov
xor
loope
sbb
mov
loope
testl
lahf
xor
cli
xchg
or
inc
inc
idiv
or
incl
lahf
decl
mov
nop
xchg
incl
dec
movsb
xor
incl
xchg
call
inc
je
test
add
sti
dec
xor
rcrl
pop
jg
negl
loope
add
mov
insl
xor
lcall
addb
test
add
fdivrp
test
cmp
rcrl
push
inc
cltd
pushf
fstpt
jmp
mov
add
out
rcll
call
lock
test
dec
lcall
add
lahf
pop
movsb
pop
jae
fldl
call
out
dec
sbb
dec
xchg
pop
cmp
pop
jb
sbb
inc
int3
dec
dec
and
pop
push
adc
lea
arpl
dec
leave
add
sti
out
repz
sti
adc
aaa
jmp
push
dec
add
out
mov
dec
ret
out
jnp
mov
sub
scas
jns
sbb
dec
fwait
out
xchg
sti
jnp
push
dec
mov
xor
out
push
loopne
out
in
mov
int
rcll
in
out
in
out
scas
out
mov
in
imul
in
sahf
rorb
add
cld
xchg
je
pusha
jno
jmp
pop
mov
rcrl
orl
fnstenv
icebp
addr16
addl
test
out
je
inc
xchg
ficoml
in
inc
adc
jne
add
ret
jb
loope
les
sbb
mov
and
add
mov
add
or
out
nop
mov
pushl
mov
lods
incl
aas
mov
mov
push
pushl
xchg
cld
jb
pushl
mov
lods
incl
ret
mov
cld
push
push
push
decl
mov
push
push
sbb
ljmp
dec
xor
add
in
pop
test
cwtl
ljmp
inc
add
daa
jnp
lahf
mov
hlt
shr
pop
stos
jno
inc
mov
movsl
xor
adc
inc
sbb
rolb
add
sub
push
cmpl
inc
sbb
adc
push
ret
add
inc
roll
daa
inc
shlb
inc
ret
sbb
pop
and
add
out
jb
and
pop
jmp
pop
sub
push
inc
test
inc
mov
jnp
andl
test
cmc
inc
gs
add
sbbb
scas
lds
cmc
push
gs
cli
mov
mov
lds
loopne
fsub
cltd
jmp
mov
adc
jmp
lods
add
das
inc
add
jae
lods
pop
pop
mov
inc
insb
jae
add
test
push
inc
jmp
mov
add
push
mov
push
fucompp
icebp
aas
pop
bound
fisubrl
imul
xchg
ljmp
pop
nop
mov
popf
pop
cld
inc
sbb
into
pop
call
jo
out
jmp
add
ficomps
and
je
ja
xlat
mov
je
pop
jo
xchg
xor
add
mov
pop
negl
fadds
call
loope
lea
out
jb
add
pop
add
repnz
add
rcrb
add
pop
lea
lods
mov
add
sbb
call
ds
je
insb
or
add
mov
jne
test
mov
jno
hlt
mov
call
xchg
lcall
lcall
add
addr16
mov
add
out
negl
inc
call
xchg
mov
mov
sub
mov
repnz
add
inc
dec
call
mov
call
movsl
jg
divl
xlat
incl
xchg
stos
inc
sbb
jns
push
or
or
int3
inc
sbb
xchg
mov
and
jmp
mov
xor
adc
inc
xor
sti
dec
jne
sti
in
inc
je
jne
fdiv
js
add
pop
stc
inc
or
arpl
lret
out
aam
and
ret
repz
fsubrl
sarl
pop
fs
out
sbb
jmp
inc
mov
ficompl
out
mov
sub
out
add
popf
push
add
clc
sahf
inc
leave
push
shrl
int
mov
mov
or
pop
addb
jae
sub
movsl
inc
xchg
push
xchg
xor
add
call
or
push
inc
repz
cmp
out
outsb
pop
jo
push
xchg
mov
pop
pop
mov
pop
pop
out
xchg
dec
out
inc
xor
idivb
pop
rep
test
je
in
es
mov
mov
inc
out
add
lahf
clc
adc
outsl
cld
add
ret
call
push
jmp
aam
imul
add
cmp
repz
fucom
mov
jb
adc
std
sbb
repz
sbb
out
loope
rsm
add
pop
push
mov
pop
push
inc
scas
push
call
cmp
sti
push
int
pop
inc
lds
pushl
xor
inc
pushf
pushl
pushf
jne
sbb
xchg
ret
test
in
add
fdiv
jb
lea
or
jne
lcall
and
ds
jne
jp
testl
clc
and
pop
add
pop
push
sbb
add
pop
into
rorb
inc
inc
jne
insl
mov
hlt
repnz
add
inc
je
mov
mov
xor
sub
insb
and
mov
in
lahf
sub
inc
inc
mov
pop
cwtl
lods
jnp
mov
int3
flds
pop
aas
mov
add
and
xchg
jae
aas
mov
mov
sub
outsl
xor
sbb
aas
dec
cli
xor
or
sbb
add
pop
mov
in
test
xchg
cmp
inc
lcall
fninit
sbb
jb
push
aas
xchg
fldl
mov
jmp
aas
dec
jae
fstps
jns
jmp
aas
xchg
sub
add
mov
or
xorb
jl
arpl
pop
mov
in
in
bnd
pop
pop
sbb
int3
repnz
mov
pushl
add
dec
add
pop
fidivrs
shll
push
xor
decb
pushf
repz
pop
je
mov
mov
out
loope
inc
adc
incb
pop
decl
sbb
mov
mov
dec
mov
push
push
dec
loop
pop
xor
decb
cmp
adc
mov
sub
je
daa
repz
xchg
adc
xchg
call
test
stc
loope
add
dec
call
jmp
pop
jne
lods
inc
test
stos
pop
mov
mov
je
lcall
and
dec
pop
and
call
das
idiv
cmp
inc
stos
push
pushl
pop
call
inc
clc
dec
sbb
jne
fisttpll
xchg
add
test
in
notb
call
mov
and
and
cmp
jne
push
idiv
sbb
adc
cmc
enter
mov
cmp
sbb
rep
mov
sti
add
pop
decl
out
inc
je
pop
add
or
xchg
in
mov
or
adc
incl
lret
pop
aaa
decl
cmp
and
popf
cmpsl
mov
cmp
test
insb
stos
mov
repnz
xorb
repnz
mov
je
imul
std
inc
jne
mov
lea
ret
sub
scas
push
pop
out
pop
push
gs
sbb
jmp
mov
out
mov
sub
data16
enter
xchg
lea
add
sub
pop
pop
aaa
sub
enter
sbb
add
inc
xchg
adc
shl
add
xchg
gs
lods
dec
test
xchg
sbb
repnz
sub
pop
cmpsb
dec
daa
add
mov
mov
repz
fbstp
cli
imul
sbb
add
fbstp
test
out
loopne
fldl
data16
add
scas
mov
repz
mov
fs
dec
shll
cmpsb
cmp
mov
push
add
out
andb
fidivs
push
cmpsl
jbe
aam
insl
xchg
test
fidivs
mov
push
divb
roll
pop
test
fidivs
addr16
add
scas
sbb
je
mov
pop
test
mov
bound
add
incb
test
jne
xor
push
and
mov
and
push
das
fisubrl
fscale
cs
sbb
dec
dec
mov
cmp
push
push
call
inc
pop
jne
xor
pop
pop
and
push
xor
rcr
data16
sbb
dec
insl
jmp
cmp
pop
push
call
add
xor
sub
jp
and
rcrb
addr16
stos
sar
dec
add
divb
decw
aam
leave
jmp
push
cmp
call
sub
cmp
test
movsl
aaa
leave
fdivp
add
movb
test
inc
adc
jno
sub
mov
add
fdiv
jge
sbb
jp
add
aas
inc
mov
add
sbb
add
or
push
outsl
mov
hlt
mov
pushf
cmp
call
je
out
sbb
cmp
fcompl
lods
and
lds
fdivrl
mov
xor
aam
repnz
addr16
outsl
subl
add
add
xorl
xchg
subb
add
xchg
mov
repz
fldt
clc
jecxz
aaa
inc
pop
add
xchg
ljmp
les
arpl
fildl
mov
pop
add
or
fdivl
and
add
pop
jae
mov
adc
testb
add
add
data16
xor
out
repnz
xchg
mov
repnz
mov
xchg
pusha
pushf
mov
cmpsb
dec
fidivrs
lods
arpl
xchg
dec
gs
divb
pop
je
lahf
sbb
pop
or
call
into
inc
add
cli
sbb
aam
ret
add
xor
dec
xchg
jne
add
push
movsb
cmp
call
nop
jmp
jp
lcall
jne
sbb
nop
mov
bound
call
call
nop
jne
in
fsubl
in
call
lcall
pop
bound
idiv
pop
xchg
dec
nop
pushl
add
movsl
lcall
mov
sbb
xor
jmp
cwtl
xor
jne
sbb
std
addl
incl
mov
lcall
lods
sti
inc
or
or
xchg
mov
lahf
pushl
push
push
push
pushl
mov
stos
cmpsl
jbe
add
push
ret
add
call
add
divl
incl
in
loopne
addl
lret
rcll
call
xor
adc
push
ret
pop
dec
ficomps
into
xchg
addr16
rcl
xor
push
cmp
xor
addr16
pop
scas
pop
jmp
jne
pop
jmp
add
cs
sbb
jmp
test
int3
in
cmp
sub
aad
sub
xor
pop
jmp
sbb
pop
jmp
adc
xlat
aas
xor
sub
xchg
fnstsw
xlat
sbb
mov
fmuls
data16
add
or
lock
fdivr
mov
mov
mov
es
push
add
lret
das
fdivs
test
or
fdivr
sbbl
aad
popa
xlat
std
xchg
out
iret
out
dec
or
push
add
cwtl
loopne
mov
imul
sbb
mov
ss
sahf
mov
call
pusha
xchg
ret
testb
mov
sub
mov
fcom
out
lea
idiv
add
mov
add
xlat
cmpl
add
call
pop
je
testb
adc
jmp
dec
pushl
jb
mov
push
xchg
call
pop
call
push
dec
call
jne
jb
mov
fsts
pop
call
sbb
jbe
jmp
xor
add
sbb
push
xor
xchg
out
cmp
ret
inc
mov
les
in
sub
call
fwait
push
and
xchg
xchg
sbb
rorl
jnp
in
jae
xor
je
lcall
ja
dec
aam
call
inc
mov
cmp
pop
xor
xor
and
call
add
mov
insl
add
sti
pop
sbb
add
js
sbb
stos
jmp
das
bound
lahf
lahf
test
push
arpl
jp
xlat
rclb
push
sbb
xor
mov
sar
or
xor
pop
roll
bound
daa
jno
sbb
mov
ret
mulb
aam
inc
sbb
jl
cmp
sub
dec
aam
jge
cmp
test
ret
xchg
fidivs
sbb
cmpsb
leave
adc
jmp
xor
push
jmp
and
add
out
xchg
lock
jge
aam
sbb
dec
clc
jbe
iret
out
nop
pop
add
pop
dec
add
out
inc
jmp
mov
inc
aam
lds
mov
add
aam
insb
sub
push
adc
sahf
adc
jl
inc
add
sub
out
or
lock
aam
push
sub
xchg
dec
lret
fidivl
mov
int
cmp
mov
adc
add
mov
push
jle
add
hlt
imul
dec
inc
cld
add
xorl
and
xchg
movsl
aas
add
add
cmc
xorb
insb
cmp
dec
pop
mov
pushl
sub
pop
call
lods
adc
xor
fdivrp
jne
jbe
decb
pushl
test
jne
pushf
mov
and
aad
lock
incl
repz
inc
je
insb
jl
pop
shl
push
je
addr16
sbb
sbb
sub
lret
stos
xor
addr16
test
sub
sub
lret
orl
mov
sbb
sub
adc
dec
pop
pusha
sbb
jg
sub
push
xchg
push
add
adc
and
and
pop
pop
inc
repz
arpl
orl
mov
cld
add
sub
inc
add
lahf
loop
xchg
sub
iret
lea
lret
shrb
jns
fsubl
push
clc
pop
sub
fwait
in
mov
push
inc
orb
jmp
adc
sub
sub
push
sbb
add
mov
inc
or
sub
inc
jmp
cltd
or
add
frstor
xor
iret
std
push
inc
ret
adc
sbb
ja
shlb
dec
enter
pusha
dec
aaa
shlb
jmp
add
cmp
iret
incb
mov
push
xor
iret
out
cmp
inc
add
xor
jmp
repnz
ds
adc
lods
push
call
adc
std
push
pop
inc
cld
add
std
incb
and
mov
sbb
push
in
sbb
enter
mov
subl
pop
pushl
jae
inc
subl
std
jb
inc
subl
mov
mov
cwtl
imul
repnz
push
inc
or
call
pop
pop
pop
inc
jne
sbb
enter
xor
pushl
jb
lahf
add
add
rolb
call
dec
adc
test
les
or
inc
sbb
lods
add
add
aas
inc
or
add
sbb
add
sbb
mov
hlt
shl
sub
data16
push
fcomps
mov
iret
std
call
xor
mov
je
adc
ds
orl
jae
jg
jae
sub
sub
jmp
add
stc
xor
inc
int
scas
daa
ret
int3
pop
xor
pop
jg
vmovapd
sbb
sub
lret
aad
or
cmp
sti
bound
sbb
int3
lods
test
pop
adc
sbb
pop
xchg
les
mov
mov
jmp
enter
outsb
add
sub
mov
add
add
int3
jmp
pop
mov
inc
jmp
hlt
lret
jl
mov
xor
addr16
sub
add
pop
adc
jl
mov
cmp
mov
cmp
xchg
mov
push
lock
sti
lret
adc
int3
je
daa
pop
jle
int3
mov
add
int3
incb
sti
adc
push
cmp
inc
mov
mov
or
stos
mov
sub
or
cmc
cmp
ljmp
je
lods
xchg
pop
inc
inc
cmpsl
out
loope
call
out
ljmp
xor
decb
or
call
pop
out
fiaddl
cmp
pop
call
frstor
incl
mov
stos
mov
inc
mov
push
adc
imul
lds
cld
ds
arpl
pop
mov
add
cmp
sbb
lcall
shlb
sbb
inc
je
repz
sarl
sbb
add
xchg
movb
cwtl
mov
enter
sbb
shll
int3
fildl
add
xor
pushf
sub
add
adc
cld
out
cld
and
fs
add
dec
pushf
xor
jmp
cld
out
or
inc
push
test
rcr
shlb
ret
ljmp
cmp
sbb
idivl
pop
sbb
fwait
fwait
leave
dec
data16
mov
mov
dec
scas
sbb
mov
data16
nop
ret
es
add
mov
cmp
add
stos
leave
or
out
dec
add
sub
in
and
clc
and
sub
and
or
sbb
leave
lds
jl
scas
sbb
inc
or
dec
icebp
sbb
sub
shll
push
sbb
and
push
xchg
repnz
pushl
sub
xor
jmp
add
enter
enter
mov
fstpl
xchg
in
subb
sbb
adc
jb
call
repnz
stos
sbb
sar
call
xor
push
jmp
sbb
inc
mov
test
aas
dec
clc
cmpsb
mov
out
mov
pop
dec
add
add
repz
jne
jae
mov
push
ljmp
jae
mov
xor
lret
pushf
pushl
stc
lods
pop
inc
add
and
divl
jl
jne
jae
mov
sub
pop
push
call
jp
or
rcrl
add
jns
push
xrelease
pushl
mov
or
cmpl
out
sbb
and
pop
ja
pop
mov
mov
dec
and
stos
push
call
movsl
aaa
aas
notl
and
gs
fnsave
and
imul
dec
fnsave
and
pop
lock
orb
xchg
sldt
add
add
add
test
dec
pop
mov
daa
hlt
xchg
add
or
and
adc
imul
or
addr16
ret
ficompl
adc
lds
xchg
mov
scas
jge
mov
cmp
mov
jne
adc
push
add
pop
push
or
and
insl
xchg
sbb
jmp
and
jae
out
xchg
push
xor
test
and
pop
xor
or
ljmp
std
and
lds
add
andl
lds
and
lds
test
cmp
mov
push
cld
ret
pop
adc
sahf
cld
dec
or
mov
ret
push
add
in
push
insb
dec
int3
pop
cmp
fcoml
mov
jo
ljmp
mov
push
cmp
je
int3
es
stc
fwait
push
cld
ret
mov
and
incb
mov
incb
cld
or
out
mov
cmpsl
mul
xor
pushf
inc
int3
dec
dec
dec
pushf
add
arpl
mov
imul
add
push
call
pushl
idiv
stos
jbe
pushf
stos
arpl
inc
popf
jne
std
sub
sub
mov
push
push
mov
xlat
ret
cld
pop
push
push
ljmp
in
xchg
cli
push
or
pushl
outsl
jb
sub
mov
add
xchg
jp
incl
or
cli
pushl
call
leave
sbb
push
add
das
sbb
cs
add
cwtl
pop
les
rorl
sti
xor
add
sbb
mov
mov
ret
sbb
inc
je
push
pop
add
xchg
and
cmpl
subb
push
test
jle
jae
stos
ljmp
pop
push
arpl
or
xchg
jae
incl
inc
adc
dec
popa
cwtl
sti
inc
fisttps
call
gs
add
dec
das
sbbl
incl
pop
rcrl
rcr
pop
mov
mov
mov
ret
jecxz
cmp
clc
movsb
sbb
lret
inc
icebp
sub
loop
sbb
dec
xchg
and
jne
mov
shl
xchg
inc
cmc
sub
adc
call
xchg
jmp
add
pop
jmp
add
pop
xchg
add
sub
leave
or
sbb
inc
std
sub
fcos
call
sbb
push
xchg
push
call
sbb
enter
sub
push
sar
mov
and
mov
incb
ffreep
std
cmp
enter
inc
or
inc
fdivrp
pop
xchg
jecxz
sbb
imul
pop
shlb
push
call
jo
scas
negb
and
inc
jmp
sub
test
call
mov
idiv
add
addr16
add
add
sub
mul
arpl
jne
jae
popf
mov
imul
pop
push
push
push
arpl
popf
repz
jmp
ljmp
repz
pop
inc
push
pushl
loop
or
mov
mul
arpl
incl
ja
shlb
add
jo
and
negl
sbb
add
imul
mov
sbb
leave
rclb
or
jno
sti
movsl
dec
call
jno
sub
xchg
xchg
adc
shr
dec
in
cmc
sbb
dec
int3
sub
xchg
in
ljmp
adc
stos
aad
pop
mov
jo
fwait
inc
push
fmull
int3
sub
stos
sbb
adc
jae
nop
pop
add
jmp
push
in
test
call
dec
pop
pop
daa
dec
mov
adc
adc
mov
std
sbb
sahf
std
sbb
mov
jl
mov
fstpl
add
jo
repz
lds
in
sbb
pop
mov
pop
mov
lahf
sbb
mov
test
add
mov
insl
sub
fsubr
add
in
add
roll
mov
inc
sbb
lcall
shll
sbb
es
mov
je
pop
fwait
cld
push
add
mov
xor
push
call
out
sar
sub
enter
push
jb
fadd
mov
add
pop
pushl
mov
jg
mov
xor
loopne
add
xor
sbb
ds
lret
sbb
pop
cmp
push
mov
pop
and
add
int3
sub
in
cli
out
jbe
je
push
call
jne
ljmp
and
js
decb
into
push
call
add
fistl
inc
test
cli
xor
arpl
scas
sbb
jmp
call
pop
sti
or
mov
ss
jmp
outsl
cli
xchg
or
stc
arpl
cli
jmp
lcall
leave
or
jb
inc
lahf
pop
add
sbb
sti
inc
lock
add
adc
sti
int3
pop
xchg
pop
inc
ljmp
pop
mov
xor
call
or
pushl
test
adc
aas
hlt
ljmp
mov
xchg
sti
fwait
les
mov
imul
test
and
adc
std
xchg
mov
les
shl
mov
add
pop
icebp
add
dec
push
daa
pop
fldl
lahf
cmp
add
pusha
push
das
pop
mov
pop
fwait
xchg
mov
mov
stos
pop
lahf
mov
jmp
adc
sub
sub
shrb
or
sahf
aaa
std
add
repnz
push
sbb
dec
fimuls
call
mov
fwait
loope
dec
fwait
nop
lcall
add
add
pop
lods
mov
lahf
dec
addb
pop
daa
pop
jmp
popa
fwait
popa
mov
scas
mov
pop
mov
ret
jbe
or
xor
mov
inc
sub
xor
adc
push
xchg
pop
les
stos
enter
repnz
pop
pop
repz
push
pop
sub
repnz
add
pop
repz
repz
shlb
mov
out
inc
mov
lock
mov
add
push
sbb
add
rep
dec
pop
lea
in
out
xchg
pop
add
jns
out
add
je
ficomps
inc
fucomp
push
push
or
fcmovnb
or
andb
and
and
testl
fsubrp
push
roll
add
imul
aad
imul
pop
or
or
xchg
pushl
fcomps
pop
push
hlt
out
push
lcall
hlt
imul
add
daa
add
xchg
orl
cmpsl
test
adc
jge
add
dec
das
dec
lds
jne
sbb
nop
inc
mov
mov
mov
add
inc
test
xor
xchg
mov
adc
in
je
jne
lea
fldt
enter
adc
push
in
adc
add
clc
adc
xor
adc
fwait
xor
adc
pop
push
adc
arpl
jle
adc
mov
daa
pop
mov
adc
bound
xchg
mov
adc
ret
dec
adc
mov
cwtl
adc
add
adc
loope
push
mov
adc
mov
hlt
ljmp
adc
dec
dec
mov
cmp
mov
sbb
mov
icebp
pop
dec
std
xchg
or
dec
cld
xchg
mov
cld
mov
loope
test
sar
adc
ret
push
mov
icebp
aaa
cmp
in
xor
inc
add
movups
mov
in
xor
add
incb
xchg
push
adc
add
mov
in
or
gs
out
push
sbb
mov
mov
xor
std
jne
incb
mov
sbb
call
mov
jne
push
mov
pushf
cmpsl
incl
lahf
je
push
add
push
add
jne
inc
cld
movsl
dec
jne
ljmp
repnz
mov
or
int3
and
add
add
int
call
pop
jne
lods
sub
inc
cmc
dec
jne
sbb
xor
into
pop
movl
ret
enter
inc
ret
add
mov
cwtl
or
cltd
sti
mov
add
xor
ud0
cmp
adc
lret
test
sbb
inc
inc
add
add
add
pop
push
adc
sbb
add
loope
mov
fldcw
mov
or
sub
xor
xchg
xor
xchg
add
jo
or
cwtl
pop
ret
stc
je
mov
cwtl
iret
mov
add
arpl
lret
mov
adc
sub
sbb
mov
mov
push
mov
into
lea
xchg
sub
outsb
into
jge
shll
mov
fsubp
pop
sbb
lcall
inc
inc
jns
push
inc
jmp
mov
cmp
jns
sub
jns
sbb
loop
and
inc
or
aam
fcomps
or
aas
add
sub
shll
sbb
push
lods
jmp
pop
mov
mov
adc
mov
cmpsb
fldt
lea
or
cld
xchg
mov
fidivrs
daa
or
fwait
mov
fistpl
fidivrs
sub
xchg
pop
pop
add
jns
shl
loopne
xor
je
pop
lea
add
daa
add
pop
daa
or
pop
add
cmc
inc
ret
cmpl
jb
push
cwtl
notb
mov
cs
pop
lea
in
std
jne
push
sahf
lea
push
sbb
decl
scas
out
xor
mov
lea
in
push
call
add
push
call
mul
loop
add
mov
jmp
jne
pop
jne
add
push
call
rcrb
push
call
sbb
mov
sbb
clc
mov
ret
bound
or
testl
imul
add
fiaddl
add
test
fidivrs
mov
xor
or
add
or
lret
xorl
inc
jo
call
lahf
mov
push
out
push
jns
push
icebp
or
sbb
mov
jns
inc
rorl
jne
sbb
stc
xor
mov
ficoml
mov
or
scas
std
jl
stos
arpl
jmp
out
nop
and
lods
push
jecxz
outsl
rol
sub
scas
push
cld
add
call
and
xor
mov
xor
mov
int
lds
sbb
add
test
test
pop
pop
nop
dec
ret
sbb
rcrl
jo
sbb
or
xor
jmp
xchg
je
aaa
and
stc
add
mulb
popa
call
fisubrs
mov
pop
adc
ret
jo
and
ret
push
sbb
ret
pusha
js
scas
dec
push
movsl
call
pusha
div
add
inc
jno
mov
mov
xchg
sti
pop
stos
popa
call
loop
daa
das
add
in
cli
push
add
xor
cld
cli
fisttpll
call
push
sbb
faddl
pushl
decl
inc
fdivr
jo
call
leave
mov
push
dec
inc
add
subb
add
pop
mov
scas
mov
add
lods
out
test
pushl
mov
sub
decl
mov
or
add
ljmp
dec
movsb
pushw
xchg
cltd
sbb
mul
in
or
xchg
aas
dec
cmp
cmp
mov
repnz
lods
dec
or
or
pop
mov
push
or
add
xchg
repz
ljmp
add
ja
fiadds
repnz
rorl
inc
out
inc
add
es
ret
adc
add
andl
sub
dec
push
dec
ffree
sbb
out
add
pop
pop
faddl
inc
fsubrp
add
fcomi
inc
loope
pop
inc
pop
sub
fcompl
xchg
pop
ret
and
cli
test
xchg
daa
mov
jae
stos
pop
jno
test
int
arpl
cwtl
push
add
cmp
push
push
rorl
shrb
int
mov
je
pop
aam
dec
mov
mov
xor
push
push
adc
popl
dec
mov
daa
mov
jae
stos
pushl
out
std
outsb
sbb
call
mov
daa
sub
dec
sbb
mov
outsl
test
adc
add
push
insb
imull
mov
aad
test
std
out
sbb
enter
push
bound
ret
cltd
sbb
std
mov
pop
inc
frstor
add
mov
call
iret
sbb
add
sub
cld
sub
ds
pop
add
add
out
out
loop
decl
repnz
std
mov
pusha
fnsave
test
sub
add
pop
lea
ljmp
test
add
push
cmp
repnz
lea
out
data16
and
ljmp
call
lcall
add
sbb
mov
or
jmp
outsb
ret
add
fsubp
jns
nop
inc
add
mov
or
jo
cmp
dec
mov
imul
and
jle
sbb
cmpsb
inc
sbb
dec
mov
pop
add
and
jb
adc
inc
sbb
dec
mov
rolb
dec
stos
ljmp
inc
or
ljmp
call
add
mov
pop
jmp
dec
mov
mov
jnp
mov
mov
je
pop
add
sub
push
jb
dec
sub
dec
add
fwait
mov
jns
mov
add
cmpsl
inc
sub
push
jmp
enter
insl
add
adc
stos
pushl
out
js
mov
add
cmpsb
push
daa
lret
xor
jmp
cmpsb
int
inc
inc
js
mov
add
xor
or
pop
push
sahf
inc
mov
lock
cmpsb
or
mov
movsl
je
inc
fwait
sti
pushw
mov
insb
push
cmpsb
imul
pop
xor
add
fcomps
hlt
inc
push
inc
jmp
push
push
rcrb
sbb
mov
xchg
mov
mov
sbb
xor
mov
push
shll
fwait
jae
push
or
add
std
ljmp
aaa
stos
pop
inc
pop
push
pushl
push
call
call
popf
add
cld
add
sub
std
jl
add
nop
ljmp
aad
cld
jne
jne
fisubrl
add
ds
or
add
clc
add
pop
add
mov
std
pop
add
pop
push
pop
lea
or
call
sub
jnp
sbb
ret
mov
mov
add
call
sub
lods
std
decl
loop
test
pop
in
je
mov
fcmove
mov
insl
add
inc
bound
add
add
mov
ljmp
push
clc
and
mov
add
push
sar
pop
clc
sti
push
jbe
add
mov
jmp
mov
jmp
out
movsl
add
pushf
hlt
shlb
jns
mov
pushl
stos
mov
lcall
push
cmpsb
decl
rcll
add
xchg
stos
adc
jb
pushf
sahf
nop
mull
arpl
or
sub
fisttpl
xor
loope
sbb
sub
mov
pushf
stos
sti
sub
cmp
imul
sbb
jmp
nop
pop
cmpsl
mov
push
or
jns
mov
add
pop
or
push
pop
jmp
push
fstpl
inc
jmp
mov
inc
dec
iret
insb
xchg
scas
divb
cltd
sar
cmpsb
cwtl
xlat
out
xchg
andb
add
xor
idivb
mov
lea
roll
add
pop
test
mov
or
mov
push
jo
mov
mov
or
push
push
fwait
jae
xchg
mov
mov
ljmp
mov
call
lahf
jae
sbb
add
shl
leavew
repz
cmc
jmp
lahf
jae
int
mov
shrb
add
shl
or
add
add
scas
cmc
call
adc
push
mov
lahf
std
mov
cmpsl
std
lcall
lahf
mov
ljmp
jne
mov
loop
std
mov
cmpsl
std
lcall
mov
inc
sahf
inc
clc
sub
cld
jmp
sahf
jae
sbb
inc
ja
mov
rcrl
push
mov
xor
push
call
xchg
ja
push
add
jmp
inc
jg
inc
sbb
pop
pop
pop
mov
je
lcall
ljmp
inc
sbb
jne
test
imul
fnsave
cmp
mov
cld
addr16
mov
add
cld
and
push
sbb
cmp
pop
icebp
jmp
mov
adc
add
push
lahf
add
push
cmpsl
scas
cmc
jne
mov
lret
ret
dec
bound
pop
sbb
push
les
pop
sti
stos
or
insb
sbb
into
mov
sbb
scas
jno
mov
mov
lahf
inc
insb
sbb
mov
inc
sbb
xchg
mov
mov
lahf
orb
insl
int
push
jmp
shlb
jmp
or
xor
outsb
sti
and
mov
lea
push
pop
sahf
xchg
cmp
push
divl
push
insl
push
call
decb
jl
mov
data16
popf
enter
push
jb
or
in
jnp
inc
jmp
repnz
cmp
sbb
imul
or
mov
setns
in
push
data16
add
jge
dec
call
add
pop
pop
test
mov
jge
popf
or
mov
push
call
xchg
add
xor
negl
add
pop
cmpl
sub
push
lret
lds
jmp
repz
inc
lds
add
loope
pushl
add
dec
lods
pop
xor
add
mov
add
xor
inc
jne
add
jne
incl
xchg
pop
leave
xchg
cmpl
inc
xor
insl
lods
pusha
sbb
add
adc
pop
inc
sbb
rolb
mov
add
xchg
inc
add
add
mov
lahf
outsb
hlt
push
xchg
testl
sbbl
je
sbb
cmp
push
mov
shlb
pop
sbb
cmp
mov
inc
add
add
pop
jns
shll
aaa
or
mov
movsl
dec
cmpl
shr
stos
cmpl
add
bnd
pop
outsl
or
pop
mov
sarl
push
inc
xorl
or
adc
mov
jmp
cmp
lds
and
fldl
es
clc
jo
xchg
add
sti
cmpsl
add
test
cltd
adc
jo
mov
stos
cmp
xor
daa
add
xchg
in
or
mov
stos
imul
icebp
inc
int3
mov
mov
popa
fcoml
push
sbb
ret
push
add
add
or
hlt
xchg
cld
inc
jmp
sbb
sahf
pop
pop
subl
pushf
pop
jmp
insl
lcall
adc
js
add
bound
dec
addr16
jl
lcall
jnp
mov
in
xor
pushf
or
dec
out
push
cmp
and
leave
gs
cltd
or
add
pop
call
cmpl
pop
leave
add
push
jne
xchg
std
mov
or
pop
lcall
push
pop
add
incb
insl
dec
xchg
call
shlb
nop
pusha
mov
push
call
popf
or
add
cld
push
rorb
or
call
fadd
or
mov
pop
lea
cs
in
inc
popa
inc
test
cwtl
pusha
xor
add
rorb
fdivrp
lcall
repz
call
add
pop
jg
test
addb
test
xor
and
adc
and
or
sub
inc
add
jg
adc
add
pushf
jp
sets
add
add
xchg
push
call
jbe
aas
call
dec
pop
push
call
fstpt
hlt
ljmp
add
sbb
jg
les
inc
add
push
push
test
jb
pop
cmp
daa
add
push
sub
daa
fwait
hlt
sbb
dec
jb
pop
mov
add
push
inc
jmp
jmp
dec
test
movl
pop
cltd
imul
cmpsl
add
or
jmp
ss
cmpsl
add
stc
cmpsl
add
push
mov
xor
jmp
pushf
repz
add
pop
shlb
inc
popf
enter
in
out
insl
cwtl
decb
add
mov
call
lock
dec
add
cwtl
je
push
je
pop
das
cwtl
je
enter
setbe
push
and
xor
lea
add
fdivr
xchg
out
int
out
xchg
xchg
notl
cmp
xchg
je
into
invd
add
out
paddsb
and
call
into
adc
out
add
jecxz
dec
adc
call
lret
call
mov
cld
decl
jae
pusha
add
add
mov
cld
lret
ret
push
mov
sub
add
adc
call
jle
push
call
push
lcall
xlat
fnstenv
or
out
adc
add
arpl
push
or
add
add
and
ret
push
mov
mov
int
mov
sbb
cld
mov
pop
mov
call
mov
dec
mov
lock
pop
rcll
imul
jmp
in
mov
adc
xchg
icebp
xchg
or
or
pop
pop
test
pushl
sbb
mov
sbb
jns
add
stc
jmp
cmp
add
push
push
jmp
insl
jnp
in
gs
inc
jg
inc
sbb
gs
adcb
jb
and
cs
add
sub
jbe
add
fstpl
dec
or
jmp
ja
pusha
fwait
ja
pusha
mov
mov
pusha
mov
mov
aaa
pop
cmpsb
inc
mov
add
sbb
mov
lock
jmp
add
imul
push
pop
jmp
lock
mov
imul
jmp
call
andl
sub
jmp
pop
pop
add
mov
push
call
inc
je
inc
rcrl
pop
add
pop
cwtl
add
add
fdivrs
push
pshufw
sub
pop
add
pop
subb
addr16
jne
mov
addb
pop
pop
jmp
push
addl
adc
jl
jecxz
call
inc
movsb
pop
add
sahf
psubsb
ljmp
xchg
repz
pop
or
cli
and
add
cltd
inc
call
add
rolb
pop
add
dec
iret
incl
pop
add
jne
inc
mov
mov
pop
add
or
std
mov
xchg
std
jne
mov
inc
addb
popf
mov
inc
push
inc
les
pop
add
xor
call
push
fstp
pop
inc
add
jno
add
cmc
xchg
mov
movsl
cmp
ljmp
pop
test
je
pop
adc
test
mov
std
inc
add
jecxz
add
in
sub
je
fwait
hlt
outsb
sbb
xlat
and
jbe
pop
fldl
mov
fldl
add
dec
arpl
or
inc
out
add
ret
jle
ja
add
pop
add
jmp
aam
stc
stc
sti
dec
jnp
mov
ja
hlt
pop
and
pop
mov
cmc
aam
or
outsl
fcompl
aaa
lahf
push
xor
inc
addl
sub
mov
nop
aad
or
in
addl
cmp
jnp
sub
lods
bound
icebp
fisttpl
in
add
test
in
inc
push
mov
imul
movsl
gs
and
popf
fcmovnu
fcoml
adc
xchg
fcmovnbe
faddl
negb
outsb
add
add
pop
add
pushf
push
call
adc
push
lahf
out
bound
repnz
pop
cs
addl
pop
pop
push
fimuls
pop
add
add
pop
scas
fldl
cmp
ja
imul
ficompl
sahf
inc
nop
icebp
inc
add
fs
mov
xchg
push
rclb
inc
push
in
sbb
push
lock
pop
ja
push
testl
jmp
inc
lret
cld
cmp
std
add
pop
add
mov
cmpb
mov
add
add
adc
ljmp
push
push
inc
test
cmp
lods
or
sub
stos
or
add
std
in
fidivl
ds
pop
add
lcall
rclb
mov
test
ljmp
insl
add
jnp
enter
pop
test
add
inc
jmp
adc
add
mov
testl
test
or
add
fmull
add
test
std
fwait
lods
jbe
inc
push
pop
fildl
call
daa
les
test
add
js
pop
mov
je
pop
cmpsl
inc
fldl
cmc
cmpl
fisttpll
add
and
adc
loope
and
ja
cltd
pop
jmp
outsb
sub
cltd
mov
dec
mov
call
loope
and
jmp
sbb
stos
pop
xchg
cmp
mov
sti
cmpsl
add
push
cmpsl
pop
ret
sti
daa
add
xchg
jmp
stc
pop
jmp
pop
mov
push
fstp
add
pop
jmp
insb
xlat
xchg
call
xor
sbb
mov
xchg
jns
pushl
mov
shr
pop
pop
push
push
mov
jae
aam
pop
or
cmpl
jb,pn
call
push
add
push
mov
call
cltd
les
adc
inc
pop
push
idivb
arpl
pop
add
or
fidivrs
mov
orl
mov
aad
out
mov
mov
cltd
lahf
addl
sbb
pop
jmp
call
mov
lea
push
mov
cmpsl
mov
cmc
pop
push
push
int3
mov
xor
add
test
add
int
shlb
test
je
es
jne
cmpsb
scas
xorl
std
incl
orl
subl
data16
bound
std
clc
fwait
cld
pushl
jg
ljmp
je
mov
cmp
in
jo
out
xor
pop
add
scas
mov
add
out
adc
imul
in
or
jo
jmp
cli
out
aaa
out
in
idiv
push
arpl
dec
test
mov
fmull
add
xor
adc
mul
daa
mov
add
sbb
outsb
or
mov
jae
ret
sbb
inc
fnsave
je
pop
xchg
add
adc
push
sub
fmuls
jmp
ficomps
adc
or
insb
or
movsb
push
inc
pop
sbb
jmp
in
shlb
fcompl
jg
pop
jmp
pop
les
cmc
call
hlt
cltd
mov
push
call
add
dec
jmp
add
jnp
fstpl
push
inc
es
push
rcrb
xchg
jmp
xlat
movl
fistps
subl
clc
rcrl
repz
leave
pop
pop
push
inc
outsb
cmc
call
cmp
hlt
inc
sbb
outsl
aam
adc
pop
cmp
xor
add
or
inc
pop
add
push
out
divb
imul
push
call
sar
or
jae
call
je
mov
jae
dec
lock
ljmp
jnp
jp
lods
cmp
test
jnp
call
mov
std
pushl
stos
out
sub
adc
std
push
cmpsb
out
jmp
std
call
mov
jne
jmp
sub
leave
ret
push
mov
faddp
call
mov
pop
add
add
repnz
je
pushl
jns
or
test
push
shlb
push
test
ret
or
imulb
loope
pop
push
xor
insb
repz
int3
aam
call
add
loopne
and
int
sbb
loope
add
jl
and
loop
sbb
add
add
pusha
jmp
dec
clc
xchg
mov
dec
fcmovne
repnz
ljmp
out
popa
add
sbb
leave
inc
mov
or
sbb
add
fiaddl
push
pop
je
nop
sub
push
test
int
shl
add
fwait
xor
add
inc
lahf
jecxz
jmp
push
popf
test
in
call
pop
xchg
loope
bound
or
fucom
mov
sti
or
inc
sbb
pop
mov
ljmp
add
push
xor
stc
add
hlt
add
add
fisttps
call
or
add
add
movsb
jae
add
lcall
add
pop
pop
add
std
into
jl
push
shrl
popa
sub
rep
or
pop
push
xchg
adc
sub
test
mov
jbe
pop
pop
push
rcll
pop
add
lahf
test
sar
inc
cld
test
std
test
cltd
sub
add
test
push
or
ret
push
out
add
ljmp
mov
cmp
jne
outsl
mov
inc
popa
lock
mov
xchg
jb
int
popa
inc
jne
call
push
fstpl
out
ret
idivb
lcall
push
call
call
jp
test
inc
push
add
add
push
std
inc
testb
add
pop
add
testl
popa
test
xor
and
call
mov
push
popa
pop
je
outsl
cmp
roll
add
add
pushf
jns
or
jnp
xchg
jb
fisttpll
add
push
cld
pop
aas
or
mov
mov
add
jmp
loopne
xor
push
fsts
xor
pop
lcall
sti
inc
cld
pop
pop
je
add
popl
pushf
push
add
ljmp
xchg
inc
add
inc
sbb
xchg
mov
jmp
inc
sbb
xchg
or
push
fstpl
iret
cld
sbb
imul
jmp
add
pushf
sbbl
push
imul
cmpl
loopne
pop
icebp
jmp
add
add
aad
sbbl
frstor
hlt
call
or
lock
shrl
fs
pop
jmp
xchg
addl
sbb
add
idiv
call
pop
repz
pusha
add
sbb
push
adc
test
xorb
sti
divb
out
mov
pop
push
push
cmpsl
sti
inc
jmp
lahf
xorl
iret
test
cmp
gs
pop
pop
or
push
lcall
jecxz
std
jbe
icebp
incl
cmp
jbe
fcom
inc
push
fcoms
leave
add
add
cmc
pop
add
or
mov
add
xchg
cmc
decl
repz
pop
push
call
jl
inc
test
cld
jp
pop
bound
add
adc
inc
add
pop
add
lds
cld
jp
xor
mov
data16
jae
lcall
add
xchg
dec
xchg
add
xor
ljmp
das
pushl
jb
ja
and
outsb
add
inc
sbb
std
popa
pop
je
xor
mov
push
mov
les
sbb
cwtl
loopew
inc
add
jl
or
add
jne
add
inc
sbb
jmp
jae
xor
dec
inc
add
inc
mov
push
jns
jae
fs
add
inc
add
in
or
movsb
and
mov
sbb
fnstenv
push
or
xor
xor
pop
pop
mov
pop
fisubrl
push
es
add
inc
push
and
push
push
sarl
inc
enter
sar
fisubl
fwait
xchg
cld
arpl
call
dec
ds
xor
adc
outsl
fiaddl
sbb
mov
hlt
and
fisttpl
xor
jnp
add
push
test
setg
xor
pop
jmp
data16
fsts
jl
jne
adc
in
add
rcll
cld
sbb
ret
decb
jge
xchg
cmp
cmc
pop
cld
add
add
add
call
cmc
xchg
shl
mov
in
lock
xchg
jbe
roll
inc
gs
pop
mov
adc
lahf
cmp
imul
cmc
call
or
jge
adc
pop
out
push
mov
bound
sbb
incl
sbb
ret
mov
incl
sahf
pop
inc
addb
cli
mov
mov
lods
cmp
or
decl
outsl
es
mov
add
push
mov
pushl
outsl
enter
xchg
out
ljmp
out
jns
inc
push
push
call
jle
jb
xor
mov
out
mov
add
pushl
outsl
dec
mov
lds
sbb
decb
icebp
enter
push
cmpsl
adc
push
adc
hlt
xchg
dec
fucomi
inc
cld
inc
test
out
mov
ret
add
sub
jge
xlat
sub
je
dec
jne
xchg
jns
shll
das
mov
sar
test
add
or
xor
xlat
xchg
aas
fsubs
test
mov
sbb
loop
fldl
xchg
and
popf
imul
xchg
mov
add
push
adc
fbld
jns
or
aam
ljmp
out
sahf
inc
mov
jb
xor
or
push
and
jmp
xor
or
sub
in
xlat
stos
add
imul
testb
out
aad
pop
push
add
pop
sarl
out
int3
in
fscale
call
add
in
les
dec
mov
lds
and
sub
sbb
jp
loope
pop
cld
add
rorl
paddb
pop
push
xchg
jmp
add
fcmovnu
add
rcrl
cmpl
pop
nop
ss
ja
stc
cmp
add
fisubrs
mov
test
mov
mov
push
fstl
push
dec
out
or
fisubl
jmp
or
sub
add
pushl
loop
lea
rorl
add
jae
add
sar
jae
loopne
rorb
std
aaa
jp
or
shlb
push
in
mov
incl
add
js
jae
pop
aad
push
sub
sar
push
lods
cs
ret
push
mov
std
push
push
dec
adc
mov
pushl
adc
hlt
out
mov
add
or
test
sar
sbb
add
cmpsl
push
int3
std
xor
jle
cltd
dec
std
and
xor
adc
adc
xor
std
add
rclb
add
ljmp
cmpl
xchg
shll
shll
or
mov
cmp
shll
stos
mov
jmp
add
add
pop
sar
subl
fstpt
nopl
jg
fsubl
cmpsl
adc
jle
call
mov
add
lock
int
insb
ret
mov
movsl
dec
and
add
popa
js
jne
rclb
or
je
shlb
stc
shlb
jne
ljmp
in
es
mov
roll
ret
shlb
dec
cs
and
sti
push
sub
mov
lret
or
jmp
test
push
dec
je
fisttpl
mul
dec
je
cmp
leave
stos
sbb
push
bound
je
insb
out
pop
sar
call
or
adc
call
sbb
lcall
je
icebp
divl
jb
in
jne
aad
out
pcmpeqd
push
push
call
xor
dec
add
jne
icebp
idivl
inc
in
jne
in
out
pusha
jmp
dec
lcall
pop
fwait
int3
jne
pushf
xchg
jne
stc
insb
out
pop
add
mov
adc
sub
shl
orb
add
std
push
bound
std
out
pop
push
fisttpll
add
add
addl
mov
push
jp
add
nop
sbb
cmc
push
movl
mov
mov
add
push
movl
cli
fdivr
testl
push
mov
notb
push
hlt
xor
mov
push
sbb
test
mov
cltd
push
fcomi
xorl
xchg
iret
je
test
testb
inc
lahf
into
fcomi
push
movsb
add
mov
add
jmp
incb
sbb
lds
test
mov
sbb
mov
pop
repnz
dec
add
add
ret
jae
inc
mov
jmp
iret
add
mov
movsl
inc
add
xor
or
pop
and
pop
insb
mov
add
adcb
cmpsl
add
jb
fisttpll
hlt
inc
dec
inc
sbb
imul
jb
xor
dec
add
test
mov
sbb
add
xlat
add
pop
sahf
cwtl
add
into
mov
jb
cwtl
imull
into
stos
xlat
mov
bnd
mov
imul
add
jmp
into
ret
clc
jbe
add
bound
std
shlb
pop
ret
push
clts
movsb
idiv
imul
xor
push
pop
jmp
jmp
call
cmpsb
jmp
imul
xchg
push
jo
xchg
cmp
sahf
jmp
loope
out
cmp
mov
dec
add
push
push
jmp
or
pop
pop
or
jae
pop
and
add
rcr
add
nop
dec
push
ljmp
dec
mov
dec
push
xchg
or
jp
inc
sub
fcomi
adc
mov
idiv
pop
shr
pop
inc
movzbl
push
in
push
in
adc
inc
icebp
inc
fadds
add
pop
add
icebp
inc
fcoms
ret
jp
inc
rolb
cld
adc
stos
jg
rcrl
jae
or
icebp
inc
fadds
pop
add
lock
fcomps
lret
je
sbb
inc
int3
incb
dec
sub
xor
pop
inc
sbb
push
loope
ret
leave
into
lret
pop
inc
cld
addl
add
add
mov
xor
add
mov
jns
or
aaa
sub
sbb
jecxz
pop
cmpl
cwtl
push
or
ss
test
rclb
ds
adc
sbb
test
cmp
sbb
xor
sbb
cmovno
test
dec
xchg
aas
pop
pop
loop
dec
sub
add
mov
lahf
lock
xor
xor
push
push
and
fwait
mov
pop
xchg
push
sbb
fmull
sub
jno
jmp
fistl
aad
dec
call
mov
xlat
sahf
xchg
mov
pop
arpl
daa
add
pop
add
or
orl
add
jecxz
test
pop
add
outsl
mov
push
pop
clc
mov
adc
sub
aad
jmp
out
or
jmp
pop
pop
add
fcoml
movsb
iret
xor
inc
sub
ljmp
mov
loopne
mov
cmp
cmp
fnstcw
call
add
add
xchg
xor
add
pop
pop
call
je
xor
pop
or
lret
add
jmp
fwait
inc
enter
add
enter
std
jne
nop
in
push
mov
cmp
pop
cmpl
je
repnz
call
xrelease
out
adc
test
std
push
insl
out
push
cld
out
fs
jne
mov
add
add
ljmp
into
popa
inc
xor
insl
test
add
pop
add
or
shlb
xlat
les
sbb
test
cmp
cmp
xor
out
add
lahf
mov
add
cwtl
sbb
add
push
mov
sub
loope
mov
mov
add
add
add
add
mov
mov
pop
stc
inc
add
or
cmp
sbb
ret
and
add
dec
clc
sbb
jle
sbb
add
mov
jmp
add
sbb
jnp
sbb
mov
inc
inc
or
cmp
in
push
pop
jmp
add
cmpsl
add
mov
ja
add
pop
inc
les
roll
pop
roll
cltd
and
ss
pop
inc
mov
es
push
test
pop
fwait
pushf
sbb
inc
inc
add
stos
out
faddp
call
push
fcoms
lock
and
test
mov
cmp
fdivrs
test
add
or
mov
bound
mov
add
pop
push
decb
in
loopne
sub
or
stos
jecxz
push
jne
push
jecxz
pop
inc
out
cmc
decb
pop
cld
push
mov
pop
pop
je
bound
clc
jmp
pop
sbb
add
clc
mov
loopne
test
loopne
jmp
sahf
out
jmp
test
je
popa
out
pop
roll
add
add
arpl
into
mov
clc
add
lahf
push
or
or
push
mov
or
pop
mov
cld
call
addr16
or
add
addl
dec
cmp
mov
add
mov
jae
pop
jo
add
fcomi
add
sub
mov
pop
leave
inc
addr16
shrb
pop
mov
jp
fadds
add
jecxz
or
xor
cli
xor
popa
jle
cld
adc
jmp
sbb
movb
cmp
sub
jg
xor
fmull
in
cli
incl
push
or
dec
add
adc
xor
push
or
inc
dec
push
xor
add
jp
shlb
leave
fisubrs
sarb
lds
push
insl
cmpsl
je
in
cmp
inc
xchg
cmp
mov
dec
add
sbb
jg
mov
inc
add
sub
loope
xor
faddl
push
faddl
push
pop
je
inc
or
sbb
fwait
push
sahf
in
add
jb,pn
adc
and
rcrl
mov
push
imul
and
mov
lcall
pop
sbb
xor
imul
les
scas
int3
fstl
pop
xchg
ja
enter
jecxz
inc
add
and
xchg
add
jmp
ret
movsb
and
sub
cmp
add
xchg
mov
pop
call
pusha
in
addr16
sbb
mov
add
cmp
jmp
inc
xchg
aaa
pop
and
pop
jae
cld
fisubs
mov
je
aaa
sub
je
xchg
ret
in
fsubrp
xadd
inc
jmp
int3
add
jmp
push
dec
push
es
outsl
out
loopne
add
push
call
push
add
call
lods
pop
add
inc
xor
jne
mov
pop
inc
pop
add
lcall
add
fcoms
cmc
ffreep
or
sub
push
mov
add
add
or
fwait
jae
inc
sub
ljmp
mov
push
jo
lcall
push
fwait
xor
mov
lds
decl
fsubrl
fwait
jae
sbb
aaa
or
mov
sub
fs
add
mov
rorl
inc
add
pushl
sti
inc
aam
jno
je
movsl
xor
inc
pop
jb
std
jnp
mov
inc
fsubl
shll
or
cmpsb
mov
in
in
mov
jl
mov
jno
add
insl
ljmp
jno
test
mov
pushf
xlat
jnp
sbb
jp
sub
cwtl
shr
add
add
push
xchg
call
rcl
shl
inc
arpl
or
xorl
fadds
xor
sub
arpl
or
hlt
out
mov
bnd
test
push
push
sbbl
xchg
gs
or
aaa
sarb
call
push
push
add
jmp
pop
pop
jne
cmpsb
pop
int3
push
push
cltd
addr16
mov
bound
movsl
addr16
mov
in
pop
insb
fiadds
jp
je
xchg
push
je
ja
push
fisubl
mov
lret
xchg
mov
push
mov
subl
pusha
je
mov
push
lcall
outsb
mov
inc
ja
push
jp
je
xchg
je
add
std
jne
mov
imul
std
jne
mov
imul
mov
add
push
mov
ret
lahf
std
lea
push
pushl
insl
jmp
rorb
inc
add
xor
pop
add
ret
incl
pop
add
xor
push
xor
lea
dec
lea
pop
pushl
sahf
jae
lods
push
add
push
shlb
add
sbb
push
call
add
mov
rorl
ret
push
mov
stos
idivb
lods
sbb
loope
push
push
pop
daa
lods
notb
mov
add
cs
cmp
test
sub
mov
and
pop
lahf
push
mov
mov
mov
orb
popf
push
scas
imul
shrb
add
sbb
xor
jecxz
scas
not
call
cmpsl
sbb
pop
je
mov
pop
mov
stos
pop
xchg
stos
stos
pop
inc
mov
nop
pop
xor
mov
jp
or
jb
add
test
std
mov
push
pop
cmc
jne
addr16
mov
aas
pusha
fnstsw
sub
xor
pusha
arpl
mov
nop
pop
rclb
push
jmp
shl
call
or
aam
mov
test
adc
daa
jae
pop
ja
fdivl
je
ja
inc
xlat
xchg
shl
or
xchg
out
lock
or
cmpsl
roll
daa
gs
pop
mov
add
inc
jmp
fdiv
les
pop
push
shr
add
jmp
int
cmp
pop
dec
push
sbb
ja
mov
sbb
lcall
jae
jnp
pop
out
cmp
sbbb
addb
pop
jne
sti
mov
std
pushl
test
cmp
sub
jne
mov
addr16
mov
add
test
ljmp
cmp
incl
pop
add
jne
inc
or
popa
je
insb
mov
ret
mov
jmp
xlat
jnp
inc
sub
mov
push
sub
call
or
jne
cld
sbb
and
or
mov
add
add
psllw
add
stc
dec
cld
sub
lds
fstl
or
popa
or
mov
sbb
shll
movsb
push
xchg
mov
mov
xor
xor
and
sub
roll
mov
dec
cld
out
or
jmp
mov
mov
in
or
dec
enter
call
mov
lcall
add
pop
cmpsb
mov
imul
or
mov
and
lret
stos
push
clc
insl
mov
jns
jmp
mov
cwtl
jb
and
and
sbb
es
je
mov
inc
out
inc
dec
das
sbb
int3
cmpsl
add
mov
inc
repnz
add
pop
pop
or
ds
mov
pop
cmp
stos
and
in
aad
xchg
add
inc
dec
jo
dec
mov
inc
call
add
sbb
arpl
lahf
pop
inc
sbb
jg
push
in
push
aam
inc
adc
lret
mov
inc
or
lret
jmp
sbb
and
inc
sbb
or
pop
fstl
jmp
sub
add
pop
pop
add
in
push
jmp
bound
add
insl
add
add
xor
sar
call
mov
pop
pushl
loopne
add
xchg
or
shll
jne
loop
or
outsl
push
adc
cmp
mov
test
pop
dec
sbb
add
or
add
or
je
add
jp
mov
jne
adc
lahf
pop
push
lahf
pop
call
jmp
sbb
xor
decb
sub
bound
adc
adc
inc
sub
jg
dec
hlt
imul
add
fcmovnu
add
sbb
cmpl
adc
xor
stos
sbb
popa
mov
je
sbb
push
mov
cld
in
test
test
cmp
add
subl
bound
mov
sub
add
in
add
and
mov
inc
xchg
add
sbb
push
sbb
loope
into
divl
jl
mov
mov
sub
out
mov
ljmp
sbbb
sub
adc
popa
jle
adc
je
mov
pop
out
ss
out
lahf
aad
std
adc
cs
out
mov
arpl
cld
push
aaa
mov
outsb
roll
pop
xchg
add
mov
inc
lods
add
push
and
jecxz
dec
int
sub
add
mov
pop
add
add
lds
shll
call
pop
rcrb
gs
add
pop
pop
std
sbb
roll
adc
inc
xchg
jo
gs
push
call
push
addr16
cld
sub
inc
insl
sbb
jmp
pop
roll
push
push
inc
ficoml
test
pop
fidivrl
jns
or
pop
add
mov
add
pop
fidivrl
pop
iret
or
pop
add
xor
pop
cmpl
xor
mov
or
xor
or
jb
hlt
xorl
rcll
pushl
icebp
add
or
adc
pop
pushl
icebp
pop
pusha
mov
ja
incl
mov
repnz
inc
or
jne
repnz
add
fdivrl
push
or
xchg
dec
add
arpl
add
mov
shrl
mov
imul
dec
jp
xor
adc
mov
test
sbb
pusha
adc
mov
xor
mov
hlt
sbb
std
add
add
and
cmc
insb
add
add
sbb
mov
mov
je
jl
inc
aaa
add
sbb
xor
xor
mov
lret
push
add
lea
ljmp
lds
cmpsl
inc
arpl
loopne
call
push
aaa
and
pushf
adc
mov
add
bound
xor
mov
pop
cmp
xchg
lods
fists
pop
push
and
stos
pop
sbb
jb
sahf
push
mov
adc
pop
out
sbb
jb
adc
add
out
xor
ss
daa
push
inc
and
lcall
in
stos
mov
pop
daa
ss
daa
push
add
jae
mov
xchg
pop
push
mov
sbb
lret
cltd
ret
cltd
insb
into
or
push
push
out
xor
fdivrs
and
add
in
into
or
loopne
pop
mov
data16
gs
mov
fstpt
and
jmp
push
stos
sbb
mov
sbb
jmp
inc
imul
push
aaa
add
pop
pop
jmp
add
popf
xchg
lock
mov
cmp
lock
fwait
call
je
add
sub
ss
or
das
dec
call
mov
add
pop
jae
xchg
cmpl
xchg
cld
call
push
pop
pop
pop
mov
mov
add
fs
add
pop
add
xchg
sar
mov
add
loopne
lods
call
mov
mov
aad
cld
sbb
dec
lods
xchg
xchg
movb
add
dec
loopne
mov
hlt
int3
cmc
scas
je
insb
sahf
cli
pop
jo
mov
push
inc
ss
lahf
mov
jl
inc
or
mov
sbb
lods
incb
or
stos
incb
dec
pop
in
add
xchg
ja
stos
jecxz
test
pop
add
sbb
sub
mov
lods
je
roll
pushf
dec
aas
shrl
sbb
mov
push
xchg
aas
imul
test
das
or
mov
stos
pop
out
sbb
and
cvtdq2ps
aas
sub
cmp
push
out
loope
add
xchg
xchg
negl
sbb
jne
xor
fistps
sahf
into
testl
xchg
jae
add
adc
cld
sti
dec
adc
mov
push
arpl
lods
push
mov
push
dec
mov
dec
add
adc
loope
in
pop
enterw
rol
inc
pop
scas
std
dec
add
adc
add
into
cld
in
pop
subl
imul
ret
fnstsw
jmp
xchg
add
sub
pop
subl
adc
dec
arpl
add
pusha
pop
and
pop
pop
add
sahf
mov
hlt
add
addr16
adc
ss
ja
mov
jecxz
add
cmp
popf
test
mov
push
cmp
in
addr16
sub
pop
cmpl
push
add
push
add
outsb
stos
hlt
mov
add
insl
add
mov
call
and
mov
js
push
ljmp
out
in
add
mov
imul
sub
out
add
sub
pop
std
jne
add
sbb
xor
ret
data16
xor
mov
stos
or
dec
sti
sub
cltd
stos
sub
shll
inc
cmp
lods
xor
jmp
test
or
push
cli
out
jne
daa
test
test
inc
add
inc
out
out
loop
incb
test
pop
das
add
add
inc
add
lahf
mov
or
mov
add
cmc
push
add
sbb
dec
hlt
cmpsl
ss
add
pop
add
or
pop
out
dec
rorl
lret
sti
test
arpl
mov
xchg
addr16
stos
out
sub
inc
std
dec
addr16
lods
xor
das
pop
loop
orps
jnp
call
add
fldt
add
daa
jge
pushw
dec
out
enter
mov
lods
xor
cvtdq2ps
out
jg
test
stos
xchg
iret
jl
inc
imul
sub
mov
xlat
iret
adc
mov
in
loop
inc
jbe
test
sub
cli
cmp
lret
add
mov
cmpsl
in
add
cmp
cmp
ljmp
std
mov
fwait
std
mov
test
add
jnp
pushf
mov
sub
and
fstpl
loop
sbb
push
fwait
mov
inc
fimuls
daa
jmp
add
push
cmpl
mov
pushl
pop
pushl
mov
lods
sbb
adc
out
sahf
add
inc
fidivs
getsec
cs
decl
add
in
popf
pusha
ljmp
leave
inc
imul
out
loop
pushl
add
push
cli
mov
call
ds
jne
mov
rorb
or
ljmp
mov
call
dec
dec
gs
add
out
dec
add
add
fsubrl
stc
jmp
inc
ret
adc
push
dec
aam
je
in
jo
sbb
sti
mov
fimuls
push
mov
jl
add
je
or
loopne
inc
sbb
ds
cmpsl
je
lods
fimuls
xor
mov
and
add
out
inc
add
cmp
stc
out
or
xor
and
cmc
mov
mov
sbb
lahf
add
out
aad
loopne
push
aam
sbb
pop
inc
inc
sbb
cmp
add
push
cmpsl
das
and
out
cmpsl
dec
arpl
and
jmp
cmpsb
incb
lcall
pop
out
ret
into
in
inc
ficoml
sub
add
sti
jbe
addr16
iret
rolb
pushf
mov
das
sbb
fimuls
push
addr16
into
in
repnz
cmp
mov
jmp
mov
and
pop
add
je
or
xor
cmp
cmp
inc
jne
mov
add
and
pop
add
xchg
insb
cmc
and
pop
add
add
into
or
les
jmp
cmp
movsb
mov
push
cmp
jmp
ret
pop
jae
mov
mov
mov
aam
icebp
movsb
arpl
imul
mov
add
roll
inc
inc
adc
jae
mov
pop
jae
mov
pop
add
in
cmc
pop
addb
add
add
ss
mov
decl
jecxz
call
into
sbb
repnz
mov
sti
stc
inc
hlt
cli
fidivrs
add
sub
pop
ret
pop
rolb
push
mov
jl
jne
pop
adcl
inc
inc
pop
jae
bound
inc
sbb
fldl
cmpsb
inc
add
mov
add
fldl
int3
mov
jns
sbb
fldl
mov
add
mov
add
xchg
inc
lock
inc
fsubs
xor
movsl
inc
add
data16
out
sti
mov
dec
mov
jbe
dec
mov
xor
testl
add
xor
int
add
repnz
mov
add
push
push
cmpsb
mov
pop
cmp
push
sbb
call
xor
pop
addl
lock
out
nop
sub
sbb
xchg
xchg
add
add
bound
sbbb
fcompl
lea
sub
rcl
sbb
mov
into
stos
xchg
loopne
ja
insb
xor
add
sbb
push
sbbb
imul
add
fildll
add
pop
push
inc
pop
add
fwait
add
jmp
jo
pop
push
jge
inc
and
cld
push
adc
jl
cmp
pushf
mov
lcall
dec
mov
inc
pop
pop
std
pop
loopne
test
and
test
add
add
btr
add
std
adc
cmp
sbb
test
cli
cltd
add
dec
mov
add
pop
std
fcoml
dec
mov
pop
or
or
mov
call
or
std
jne
out
push
pop
sbb
jne
sti
je
sbb
call
sbb
call
imulb
loop
jne
loope
je
lret
call
fisubl
adc
add
mov
jl
add
mov
mov
xchg
inc
or
adc
adc
incl
jl
add
mov
sbb
add
jmp
sub
fnsave
lahf
je
pushf
jge
sbb
or
sub
add
add
xor
inc
xor
inc
and
nop
inc
sbb
daa
add
mov
lahf
lahf
mov
add
mov
push
xor
arpl
stos
inc
arpl
or
cmp
lea
xor
pop
call
sbb
mov
xchg
fwait
mov
clc
sbb
mov
fstps
sahf
dec
shlb
add
xchg
inc
xor
push
sbb
popa
xchg
dec
inc
imul
pop
pushf
arpl
fcompl
sahf
sub
or
add
inc
lcall
pop
pop
out
popf
add
pop
lock
lahf
repnz
scas
inc
hlt
pop
out
sbb
add
test
jb
fistpll
sub
mov
inc
sbb
sbb
inc
mov
add
add
sub
jmp
cmc
scas
xchg
movb
test
or
sbb
jmp
push
xor
aam
xor
pushf
mov
xchg
lock
test
or
lods
std
es
sbb
jmp
sti
cltd
add
push
adc
movsb
std
notb
je
sbb
jmp
pop
pop
add
push
into
or
mov
adc
repnz
push
push
das
add
je
mov
push
add
lds
ljmp
push
rolb
out
sbbl
add
jne
clc
add
sub
sub
push
add
rolb
fidivs
cmpsl
push
call
fcomi
add
push
std
je
xor
enter
add
orl
pushl
jl
cmc
imul
mov
rorb
roll
loop
or
addr16
pushl
shlb
jl
lds
sub
lret
rcll
inc
mov
and
xor
lds
cmp
add
sbb
enter
fnstcw
call
dec
stos
ss
inc
push
clts
lahf
out
movsl
pushl
jb
add
out
call
lahf
pop
in
and
ljmp
fmull
les
sbb
inc
in
dec
lcall
jno
fwait
mov
xor
push
cmp
xchg
push
pop
call
push
xor
sbb
sbb
imul
add
add
sbb
inc
fisttpll
test
lcall
pop
inc
dec
stos
roll
jmp
rclb
daa
dec
cmp
out
cmpsl
imul
xor
xor
cmp
jne
hlt
das
lcall
cmp
or
fldt
sbb
fcmovnb
ret
lods
int3
stos
mov
in
cmpsb
mov
add
lahf
std
sahf
sbb
jne
test
adc
enter
mov
push
jbe
arpl
hlt
mov
imul
push
imul
xchg
or
xor
std
push
test
or
add
sbb
shll
out
inc
pop
add
inc
mov
dec
pop
pop
std
push
and
sbb
fimull
aaa
jecxz
lcall
add
dec
jo
fs
std
jne
insl
sbb
add
imul
in
mov
jne
je
pop
pushl
out
push
dec
loop
add
mov
add
dec
or
push
loop
or
and
decl
adc
or
mov
add
insl
xor
mov
call
mov
shlb
nop
popf
add
jo
call
call
jne
cmp
divl
xchg
enter
push
xchg
sub
push
or
or
loopne
ljmp
mov
invd
test
decb
aaa
or
arpl
xchg
add
lods
test
add
sub
dec
xchg
je
mov
push
dec
jns
inc
inc
sbb
fldl
je
dec
test
add
jbe
pop
inc
xchg
xor
jmp
add
daa
cmp
sti
cmp
jae
pop
jo
in
loopne
and
add
dec
mov
cmc
mov
mov
sarl
cmp
add
pop
out
popa
ret
add
pop
mov
xchg
cmp
or
xchg
cmpb
fwait
andl
xchg
jb
fstl
daa
nop
push
xchg
fs
add
in
sbbb
add
inc
dec
das
xor
jno
sub
pop
and
pop
push
adc
mov
or
jne
hlt
add
cmp
mov
fnsave
pop
push
mov
or
add
mov
xchg
lahf
cld
push
sarb
or
mov
scas
cld
sahf
adc
mov
cmp
mov
xchg
inc
andb
cmp
mov
xchg
jecxz
pop
xor
je
xchg
cld
inc
mov
je
test
mov
sbb
jmp
pop
xor
jmp
daa
inc
dec
add
test
iret
fisubrl
fs
decl
jne
add
loop
enter
push
mov
into
je
fstpl
shlb
gs
pop
push
call
push
into
je
and
inc
xlat
push
add
push
add
enter
push
mov
fcmovb
clc
lcall
or
add
add
in
cld
mov
pop
cmpb
addr16
sbb
add
add
fdivrl
and
sti
cmp
jae
mov
mov
adc
xchg
shll
xchg
je
or
mov
lcall
mov
addr16
add
jnp
pop
add
adc
int3
lods
pop
clc
int3
les
or
arpl
je
pushf
fsts
popf
nop
xor
cmp
lods
hlt
cmp
test
pop
pushf
and
push
xchg
jb
sub
sbb
jb
add
notb
sbbl
sbb
iret
xchg
je
xlat
xor
scas
divl
lret
scas
out
fwait
push
or
sbb
add
mov
stos
ljmp
push
mov
into
xchg
scas
fistps
xchg
lahf
jnp
cmp
pop
inc
sbb
scas
add
xchg
iret
add
fwait
out
inc
imul
or
aas
jnp
add
mov
clc
cs
imul
scas
or
movsl
xor
clc
cmp
je
cmpsl
mov
decb
js
je
out
insl
out
xor
jl
lods
xor
std
lods
xor
jae
lea
call
xlat
sbb
push
xor
sbb
cmp
arpl
insl
sub
pusha
jecxz
mov
mov
add
ffreep
ficomps
add
roll
aaa
mov
sti
fwait
lret
decb
add
push
pop
push
lods
push
add
imul
mov
push
incl
lret
call
stc
push
mov
push
mov
pushl
lret
in
dec
push
jp
mov
imul
jae
inc
pop
add
lock
push
push
std
pushl
push
xchg
xor
jne
mov
lea
je
pushf
push
cld
je
je
sbb
push
lcall
adc
sbb
xchg
jbe
xchg
je
pop
divb
add
test
cmp
sbb
add
test
inc
sbb
ss
sbb
addl
call
les
add
lock
inc
lcall
daa
add
dec
mov
out
dec
movsl
ja
jmp
rorb
sarb
pop
sbb
inc
dec
xor
ret
iret
push
iret
add
jle
test
aas
mov
xor
sbb
xor
mov
xor
mov
xor
sti
fisubs
xchg
xchg
dec
out
shlb
cmp
shlb
add
add
into
mov
sbb
add
lret
mov
pop
mov
cli
arpl
sub
inc
cmpsl
mov
cmp
sbb
out
mov
add
xchg
cmpsb
or
mov
pop
mov
push
push
lcall
inc
stos
shlb
pop
push
inc
mov
std
es
ret
mov
pop
pop
push
addl
mov
jmp
xchg
pop
jnp
cltd
cmp
stos
fdivs
push
jb
ffree
aad
pop
push
xchg
cmpsl
or
push
mov
cld
inc
mov
je
xchg
std
cmpsb
test
arpl
setns
incb
mov
je
insl
aam
push
jne
fnsave
sbb
ret
add
imul
incl
cs
and
push
inc
xor
push
lods
pop
add
jae
arpl
pop
push
ljmp
fdivrp
call
cmp
push
add
fbld
outsl
and
jne
shrl
push
rcr
mov
push
sbb
call
fdivrp
push
fidivs
mov
sbb
sbb
cld
out
loopne
jnp
mov
add
sub
enter
push
cmpsl
test
add
lcall
xor
and
push
inc
test
and
in
adc
add
fmul
xlat
push
add
sub
jae
mov
add
lcall
je
add
or
clc
les
add
std
mov
fwait
pop
cltd
pop
dec
push
adc
mov
jg
ljmp
add
loope
xchg
pop
push
sbb
es
bound
fldt
arpl
shlb
pavgw
mov
fstpl
fwait
mov
out
daa
sbb
add
jecxz
outsl
jnp
inc
hlt
ret
sti
in
jg
add
out
push
xor
adc
fimull
les
xor
sub
mov
mov
jmp
out
push
add
cmpsb
or
or
fs
mov
jmp
loopne
call
pusha
fdivrl
imul
shll
pop
ret
mov
hlt
add
xchg
aas
jmp
xchg
jecxz
sbb
cmp
mov
jmp
pop
pop
call
jo
sub
cltd
add
mov
add
jecxz
loope
xchg
add
xor
cld
imul
cmp
std
jae
jl
jne
inc
subl
std
jae
push
lcall
sar
dec
lret
jne
icebp
loope
or
fs
ljmp
call
ljmp
cmp
loop
pushl
loop
or
loop
in
or
loop
hlt
sbb
loop
lock
push
dec
ljmp
dec
mov
adc
or
mov
mov
testb
orl
or
jle
imul
inc
add
inc
add
pushf
mov
enter
cmpsl
out
daa
orb
xor
add
enter
sti
mov
hlt
mov
sti
pop
push
cld
repz
stc
out
cli
mov
aad
std
pushl
xchg
sbb
jecxz
ss
push
inc
add
mov
fwait
insl
cwtl
into
xchg
das
inc
sbb
testb
fwait
aas
cli
cli
fwait
out
je
faddl
sbb
cmpsl
adc
xchg
jg
aad
xchg
stos
scas
loopne
hlt
pop
out
cltd
mov
push
fstpl
xchg
push
dec
aad
sub
cmc
mov
aaa
outsb
daa
dec
sub
aas
xchg
sbb
adc
sub
xchg
mov
ret
add
add
pop
mov
pop
fisubrs
mov
out
pop
sub
jl
inc
inc
pushf
lcall
inc
add
sub
jnp
sub
xchg
call
loop
lods
and
mov
push
cmpsb
mov
cltd
push
add
aas
jmp
xchg
js
mov
sub
sbb
std
pop
lcall
sub
adc
sub
repnz
lods
and
lock
dec
xor
xchg
pop
pop
in
push
pop
andb
mov
add
out
popf
loope
call
lahf
cmp
decb
jne
and
or
aas
add
push
push
fldl
std
jne
les
mov
fdivrp
decl
sar
jne
insl
int
loop
pop
leave
xchg
push
mov
scas
inc
lock
je
push
jmp
and
cld
aaa
push
and
or
fidivs
pop
or
sbb
aaa
push
pop
or
imul
test
addr16
repz
call
xchg
sbb
sbb
ss
je
adc
fisttpll
lock
nop
fwait
add
sbb
cmp
xor
add
and
bound
aas
xchg
jle
scas
pop
inc
add
mov
add
jb
and
push
mov
cmpsl
jmp
xor
fdivl
sbb
sbb
inc
imul
setns
xchg
push
test
mov
fwait
xchg
xchg
push
test
mov
addl
add
add
stc
addr16
mov
xchg
aaa
imul
out
pop
es
or
clc
xor
add
jb
mov
jmp
pop
setg
fwait
out
lock
jg
ljmp
stc
sbb
scas
iret
pop
mov
aaa
fisubrl
jl
pop
out
jns
fisttpll
inc
xor
mov
out
imul
add
scas
or
inc
xchg
std
push
lahf
scas
sbb
cmc
dec
std
xchg
pop
xor
mov
and
add
lcall
or
repnz
scas
arpl
mov
cmp
pop
aam
shll
je
pop
mov
jmp
push
pop
inc
mov
je
call
push
and
mov
sahf
cld
add
pop
in
das
add
xchg
std
pop
sahf
scas
or
xor
call
add
and
call
push
call
call
inc
std
jne
fidivl
rolb
or
mov
jbe
cmc
push
inc
fwait
test
pop
add
cmp
push
sbb
call
cmpl
sub
lock
incl
pop
add
jne
inc
cld
add
inc
clc
xor
xor
lcall
rclb
jge
pop
je
mov
cli
add
mov
mov
push
sbb
cmp
mov
xorl
in
xor
mov
push
or
pop
add
jns
loop
test
testb
add
pop
cmc
sti
fisttpl
mov
xor
enter
push
xchg
or
add
add
xor
add
add
fwait
outsb
adc
fldln2
push
insb
mov
add
sbb
idiv
jae
adc
pop
add
add
add
daa
repnz
xor
inc
insb
loopne
mov
mov
pop
pop
fcmovb
pop
roll
int
fnstsw
lods
dec
subb
dec
js
pop
out
fsubrl
adc
pop
and
add
push
jmp
jnp
fisubrl
add
fsubl
out
imul
add
test
lret
adc
pop
out
andl
sbb
cmpsl
clc
adc
xchg
jg
cwtl
xchg
and
ja
xor
push
and
andb
xorb
sub
test
add
pop
and
push
add
mov
pop
out
test
pop
jae
fidivrl
sub
mov
xor
sub
xlat
sub
pop
pop
jg
inc
and
stc
pop
push
xor
movsb
and
inc
sbb
and
test
pop
pop
std
xor
and
adc
sbb
rclb
add
and
mov
inc
xor
mov
je
shlb
imulb
cmp
fucomp
sti
jmp
inc
in
pop
in
add
fldcw
jge
pop
or
add
in
ret
add
pop
std
jne
mov
ss
mov
aad
mov
call
lods
adc
or
fs
add
addr16
or
fisubrl
cmp
pop
sub
mov
sbbb
jg
cmp
fbld
sub
test
pop
dec
mov
cmc
out
out
popa
fstps
popl
out
xchg
call
lcall
pop
mov
shrb
jl
xor
sbb
push
push
jp
je
mov
sahf
or
subl
add
stos
jle
out
jnp
fwait
pop
insb
out
imul
pop
push
test
xor
shrl
aaa
ficoms
add
rcll
add
xchg
jbe
sbb
call
aaa
pop
aad
xor
push
jl
mov
imul
inc
jl
sbb
add
dec
inc
pop
mov
jmp
mov
add
or
cmp
leave
rcrb
push
push
jge
mov
lahf
jl
adc
add
jb
sahf
pop
aam
xor
test
imul
mov
mov
pop
arpl
popa
push
jle
pop
cmpsl
dec
adc
mov
jmp
pop
pop
or
aaa
data16
sbb
add
fildll
push
push
cmpsl
push
rcl
mov
pop
cs
jmp
xchg
es
and
pop
jecxz
push
push
sbb
jae
inc
cmpsl
cld
test
call
inc
popa
sbb
jmp
jecxz
test
iret
inc
add
pushl
mov
add
test
add
add
inc
clc
jne
add
sbbb
incl
add
das
imul
test
pushl
mov
xor
add
mov
add
pop
push
nop
dec
call
push
jle
mov
mov
out
js
decb
lret
dec
add
pop
pop
sbb
sar
push
je
or
test
incb
xor
gs
jb
ljmp
int
or
decb
jge
dec
movsl
ja
sbb
icebp
fnsave
jns
cmp
add
movsl
scas
pusha
testb
test
sbb
mov
clc
inc
ja
jecxz
add
daa
jb
sbb
and
je
sub
jo
sbb
insb
mov
inc
loop
andnps
insb
lea
jo
sbb
add
adc
mov
pop
addr16
sbb
insb
sbb
cwtl
jle
cmp
test
sub
dec
jo
and
push
out
daa
add
int3
adc
jno
fistl
aas
js
fmuls
jo
sbb
or
cmpl
pop
fs
jmp
pop
js
imul
lret
xchg
subl
in
sub
add
fnstsw
jmp
pop
or
rcrb
cmpsb
lods
add
sahf
jmp
je
add
xchg
lret
sbb
dec
call
outsb
sub
adc
pop
stos
mov
inc
mov
loopne
xchg
sbb
mov
add
lods
jb
je
adc
es
or
mov
rclb
dec
sbb
add
call
clc
mov
inc
test
dec
ret
mov
mov
lcall
inc
incl
bound
call
mov
loope
ret
in
xchg
dec
lods
idiv
mov
xlat
inc
mov
mov
inc
or
cmp
mov
decl
test
inc
insl
xchg
std
bound
xlat
xor
pop
push
mov
ffree
in
sbb
push
sbb
leave
addr16
add
or
xor
add
dec
push
push
adc
mov
dec
lahf
jg
add
pop
jae
stos
inc
jl
adc
jno
sbb
in
push
pop
aas
jl
sbb
enter
push
in
inc
sbb
mov
xor
add
aam
and
clts
call
pop
inc
lock
add
call
push
add
jae
dec
leave
je
repz
imul
adc
frstor
into
xchg
push
imul
out
bound
jge
les
sub
cmp
ret
fwait
sbb
je
arpl
jae
pop
mov
add
pop
out
pushf
pop
sbb
je
pop
frstor
cltd
out
shlb
sub
jg
add
fildll
sbb
and
aas
cmp
dec
dec
fstpl
into
xchg
pop
imul
lods
add
jo
or
inc
cltd
std
push
cmpsb
lahf
cld
push
dec
test
pop
or
jmp
ficoms
fisubrs
call
fistpl
mov
pop
pop
addl
data16
add
pop
add
out
sub
pop
or
jmp
popa
push
negb
fidivrl
pop
jae
add
push
fistpll
pop
pop
sbbl
data16
and
add
shlb
add
enter
xchg
inc
clc
jbe
testb
fstl
lds
notb
je
dec
test
lock
sbb
pushl
fsubs
out
cli
mov
adc
psllw
incl
pop
push
incb
xor
inc
pop
or
cmp
icebp
add
pop
or
add
and
ljmp
pushl
mov
jbe
lcall
test
add
imul
or
fmull
add
jg
out
mov
jmp
call
jb
out
call
inc
add
aas
push
adc
outsl
adc
dec
sar
ret
mov
add
push
add
lcall
push
inc
sbb
inc
jae
fdiv
filds
xor
fistpl
pop
fmull
test
or
adc
adcb
cld
mov
adc
ljmp
jno
mov
jo
pop
push
mull
add
ret
ret
neg
adc
mov
fistps
cltd
out
jo
ret
pop
sbb
lret
jo
call
out
lock
mov
add
lea
jo
sbb
jo
loopne
imul
pop
fiadds
inc
int
jo
addb
lods
mov
outsb
or
test
adc
xchg
inc
ss
std
dec
in
mov
sub
pop
push
jb
fcmovnb
adc
ficoml
push
shlb
aam
lcall
pop
data16
sar
pop
sbb
pop
add
push
xchg
hlt
out
pop
add
test
inc
add
test
pop
push
push
push
je
push
idivb
clc
adc
out
xor
pop
data16
pop
push
add
sbb
incl
xchg
idiv
andb
call
jl
fincstp
push
and
leave
cmp
add
pop
std
mov
mov
incl
push
fisttps
pop
call
mov
cmp
addr16
inc
add
cmp
fs
add
inc
pushl
test
push
push
xor
std
mov
mov
pushl
push
call
mov
pop
testb
inc
fcomp
inc
sbb
mov
jmp
stos
dec
inc
adc
outsb
jbe
fiaddl
add
outsb
jbe
jmp
cmp
push
ret
add
cltd
shrb
ja
test
cmpb
shlb
add
stos
stc
out
shrl
out
je
xchg
xor
sbb
andl
mov
shrl
jae
cld
out
inc
imul
xchg
pop
cmpsb
insl
enter
or
xchg
insl
mov
xchg
insl
cmp
std
sti
add
ja
insl
sub
cmp
insl
nop
arpl
push
adc
shrb
pop
insl
add
aad
add
inc
insl
repnz
push
repnz
pop
xor
lds
jne
movups
mov
push
insl
mov
ud0
mov
setge
pandn
pushf
insb
add
je
jo
movswl
add
add
adc
sarb
scas
enter
push
inc
add
push
sbb
jmp
jecxz
imul
mov
add
mov
mov
jbe
rcr
push
call
pop
testl
aam
or
inc
js,pt
ret
in
pop
test
cmp
lret
xchg
sub
loop
xchg
pop
bound
push
stos
pop
call
loop
pop
xchg
frstor
jo
push
push
clc
cmc
xchg
sub
or
and
or
je
stos
or
call
ds
xor
xorb
push
lcall
setp
jne
mov
jp,pt
jne
xorb
ljmp
je
pop
or
pushl
cmp
add
cmp
notl
push
ds
icebp
sub
jne
mov
inc
stos
orb
and
leave
inc
adc
mov
dec
push
adc
mov
daa
cli
cmpl
imul
sbb
movsl
ss
dec
mov
je
in
lock
cmp
jmp
mov
sbb
add
out
int3
add
add
inc
lock
fiaddl
add
jno
dec
sbb
sti
mov
mov
fnstcw
inc
ret
add
sub
add
inc
je
pop
out
mov
shl
movsl
mov
decl
adc
sbb
mov
call
subb
test
jnp
cs
sub
cltd
out
inc
cld
cld
add
cmpsl
out
add
jecxz
push
movsb
xchg
scas
jge
imulb
dec
pop
pop
out
nop
das
outsl
out
sti
or
sti
add
pop
imul
xchg
inc
jl
loope
push
xchg
xchg
pop
jl
fcomi
add
xchg
push
mov
enter
gs
pop
or
pop
stos
lods
xor
pop
add
repz
sub
or
test
add
push
cmp
add
hlt
fwait
push
inc
and
outsl
ja
sub
stos
std
adc
repz
lds
mov
or
mov
push
add
incl
add
or
add
pop
je
inc
push
fldenv
testl
imul
or
cs
data16
pushf
movl
imul
add
cli
mov
add
pop
std
jne
cmpsb
imul
je
call
mov
in
hlt
lcall
xchg
das
pushl
xorl
add
add
inc
dec
inc
clc
xor
sbb
decl
pop
add
and
imul
jns
lea
bound
pushl
xorb
sub
lds
je
cmpsb
addb
pop
push
sbb
cmc
out
mov
decb
mov
jecxz
out
mov
xchg
jbe
testb
imul
repz
shlb
pop
inc
cld
out
xor
jno
inc
call
fildl
fnstenv
add
xor
data16
test
xchg
data16
sub
out
div
cltd
data16
stos
cmp
dec
jl
les
mov
pop
sarl
ficoms
dec
stos
or
data16
lcall
gs
jne
fistpl
into
mov
out
sbb
ja
push
jno
add
mov
insl
push
or
out
mov
fs
dec
or
cmpsl
cmp
sub
cmpsb
sbb
outsb
gs
push
insl
add
pop
out
sub
cmpsb
daa
repz
dec
scas
testl
xlat
pop
pop
inc
add
cmp
mov
cmp
es
call
push
andl
push
inc
or
add
or
out
mov
or
push
clc
or
iret
fdivrs
pop
pushl
mov
adc
cmpsb
out
ds
rorb
cltd
rorb
sbb
into
in
jbe
add
outsb
mov
mov
pushf
push
or
add
mov
ja
incl
pop
jecxz
cli
jle
clc
sub
sti
lcall
jg
cld
sbb
inc
mov
in
push
inc
stc
push
and
call
add
mov
inc
jnp
jne
repnz
imul
inc
add
cld
decl
adc
xor
loop
jp
call
jnp
jne
jb
cmp
pop
push
mov
mov
sar
pop
push
pop
and
call
jmp
sti
je
add
lcall
cmpsl
xor
or
pop
inc
gs
sub
je
pop
ja
mov
hlt
mov
iret
xchg
hlt
bound
mull
and
xor
sbb
push
rclb
clc
add
dec
inc
push
repz
sbb
enter
add
add
add
repz
lcall
jbe
negb
xchg
je
sbb
out
fmull
out
je
lahf
pinsrw
xor
add
mov
fwait
test
mov
insb
cmp
inc
push
bound
lcall
addb
add
insb
push
jb
iret
out
arpl
fcompl
xchg
imul
dec
mov
imul
cmpsb
popa
movsb
fimuls
add
incl
ret
and
jg
mov
addl
fsubrp
pop
jge
mov
push
mov
adc
fiadds
jl
or
or
inc
std
cs
fsubp
push
cmp
xor
pop
add
xor
incb
jae
call
pusha
mov
cmpl
lcall
les
jb
call
pusha
mov
fdivrs
jmp
mov
bound
xchg
in
xchg
jnp
jae
out
std
incl
jbe
cmp
mov
inc
mov
push
call
adc
jmp
jne
jbe
cmp
jnp
mov
mov
push
call
and
fincstp
xchg
mov
pushl
push
call
push
in
notl
jne
jbe
cmp
cmpb
sub
push
andb
xor
std
lcall
xchg
iret
add
rcrl
rcr
push
adc
sbb
add
psubq
cmp
repz
sub
jecxz
pop
mov
inc
pop
inc
add
dec
dec
xchg
out
lret
xor
add
pop
mov
jo
stos
push
pop
shrl
xchg
imul
js
pop
incb
cltd
fbstp
pop
out
insb
pop
incb
pop
jle
notb
imul
fxch
insb
stc
cmp
pop
xor
out
push
sbb
add
xchg
sbb
adc
mov
sbb
out
sti
add
testl
rol
add
imul
fucomip
mov
add
add
pop
fsubs
insb
rcrb
add
add
cmpsb
bound
pop
in
mov
je
jmp
je
minps
and
cmpsb
inc
dec
int3
fcompl
pop
mov
add
sbb
cmp
aaa
inc
fwait
add
mov
push
rclb
add
sbb
std
xchg
decl
lret
push
call
inc
add
pop
inc
imul
loop
xor
cmpsl
add
cs
or
push
roll
pushf
pop
repz
sar
add
out
add
push
add
test
aaa
and
add
inc
movsb
jno
add
popa
push
push
std
xor
pop
sahf
cmp
jp
shlb
add
hlt
inc
add
cltd
incl
mov
cmp
jo
push
addr16
lds
decl
lahf
je
or
std
in
fwait
add
jo
jmp
push
lahf
pop
push
sbb
std
cld
adc
mov
int
imul
fwait
mov
out
push
add
pop
mov
push
add
sbb
xor
push
mov
out
inc
sbb
pop
je
in
mov
dec
inc
test
sbb
pop
pop
inc
call
movsb
pop
dec
jge
pop
dec
fstps
enter
mov
adc
mov
out
add
dec
test
mov
fidivl
push
std
pop
mov
pop
xor
mov
add
add
fwait
out
and
rol
inc
lds
iret
loop
pop
out
pop
xchg
mov
shrl
xor
pop
jmp
jo
add
cld
adc
add
or
hlt
xchg
sbb
std
addb
lods
add
scas
push
sbb
push
mov
rclb
xchg
imul
ss
pop
popf
and
pop
mov
add
mov
and
pop
xorl
xchg
xchg
sti
ljmp
jae
pop
mov
out
cld
jae
lds
std
into
out
add
push
sbb
imul
push
cld
std
repnz
or
mov
xchg
insl
ds
jle
sbb
insl
sub
jmp
stos
inc
std
pop
add
std
aam
std
jae
cmp
shll
inc
lods
add
pop
jae
xchg
fdivrp
push
adc
sbb
mov
add
mov
lods
stc
push
test
and
or
push
sbb
and
or
call
mov
std
call
outsl
mov
xor
cmp
mov
xchg
je
lods
imul
in
loopne
sub
call
xchg
decb
xor
lcall
bound
fsubrp
adc
mov
pop
add
inc
xchg
je
or
push
pop
je
imul
incl
ja
jmp
add
jmp
adc
add
jnp
jg
add
test
mov
add
jb
iret
pop
xor
adc
and
iret
sti
sbb
decb
loope
decb
jno
mov
mov
imul
enter
push
cmpsl
aaa
add
insb
cmp
or
pusha
add
pop
pop
daa
pop
cltd
inc
call
jmp
test
add
mov
push
or
pop
aaa
cli
testb
push
lds
push
or
fildll
ss
push
xchg
lahf
mov
in
jmp
outsl
fistl
bound
mov
add
mov
lds
cli
cld
pop
add
imul
jbe
movsb
sahf
jnp
jmp
shr
pop
pop
shlb
clc
fmull
les
adc
loop
imul
add
add
filds
push
pop
add
cld
add
repnz
lock
std
push
push
sbb
dec
xchg
xchg
pop
out
or
negb
leave
rclb
jnp
sbb
push
in
add
and
inc
sbb
outsl
shrl
xchg
sub
std
sahf
jno
clc
xchg
jecxz
call
xchg
jmp
hlt
add
jmp
dec
stc
std
hlt
dec
stc
jae
dec
outsl
adc
das
std
push
imul
add
std
cli
daa
out
jo
in
mov
incl
mov
pushl
mov
incl
mov
adc
jg
or
xchg
add
mov
push
xchg
in
push
pop
add
ja
add
jg
les
pop
cmpsb
dec
mov
or
xor
pop
add
mov
andl
xchg
std
incl
popl
add
add
imul
xchg
push
insb
sbb
lea
mov
mov
aam
je
inc
into
sti
mov
pop
add
inc
jae
pop
fildl
addl
add
mov
jle
add
push
dec
xchg
xchg
pop
adc
push
je
sbb
cmp
mov
sub
push
mov
fldl
mov
push
out
and
add
fmuls
sti
je
je
fdivrl
sti
jmp
push
mov
pop
pop
push
fiaddl
test
shl
push
leave
roll
ret
cmc
inc
fnstenv
pop
and
pop
xchg
jle
mov
sub
pop
xchg
mov
outsl
fistps
sub
push
xchg
lahf
add
bound
push
xor
lahf
les
lods
push
pop
cmc
sbb
aas
push
sbb
addr16
outsl
idivl
fistl
subb
and
mov
adc
xchg
push
nop
arpl
stc
jbe
out
sbb
adc
ja
cmc
std
hlt
push
cmc
jae
add
xor
and
in
pop
mov
rcrl
adcl
hlt
std
pusha
aam
push
push
je
call
push
fs
jl
cld
or
sub
pop
push
fadd
in
lea
jno
std
pop
dec
cld
scas
sbb
hlt
xchg
loopne
inc
jo
add
orb
fstpt
and
icebp
lcall
pop
pusha
rolb
ljmp
add
leave
gs
or
call
pop
push
xor
bound
add
and
xor
incl
out
scas
jge
jae
xor
ljmp
mov
pop
xchg
xor
in
mulb
dec
inc
inc
push
jae
add
add
pop
incl
or
jno
inc
clc
cmp
add
or
lcall
add
mov
push
adc
sub
dec
out
or
add
or
add
rcr
mov
ret
add
dec
mov
cmpsb
pop
mov
push
je
pushf
pushf
xor
add
mov
add
push
add
mov
movsl
mov
addr16
ret
addr16
out
clc
dec
push
xchg
sar
pop
testl
and
push
rcl
add
adcl
and
repz
mov
test
add
fistps
outsb
dec
fisubl
dec
dec
arpl
or
push
cmp
add
mov
cld
in
cs
scas
icebp
and
cld
mov
lods
push
shl
xchg
incl
gs
lcall
bnd
stos
xchg
ret
xor
push
addr16
pop
dec
cmp
sub
cmpsl
xlat
sbb
and
xchg
ljmp
ja
xor
pop
addr16
xchg
in
adc
clc
and
add
mov
dec
add
jmp
negb
inc
or
pop
or
jmp
jmp
andb
ds
mov
out
pop
pop
add
ja
xchg
pusha
lock
add
mov
in
shrb
mov
out
call
jmp
and
test
and
add
xor
mov
aas
jmp
add
lds
jb
inc
cmp
popf
mov
inc
stos
popf
mov
popf
je
push
fsubrp
cmc
pop
mov
adc
pushl
outsb
inc
fsubrs
in
imul
aam
jo
in
sahf
je
sub
repnz
add
jne
xchg
ret
sahf
jne
sbb
add
je
push
fdivrp
sbb
cld
out
lock
xor
fs
repz
inc
dec
jl
daa
cmpsb
aad
pushf
testb
mov
pop
add
or
test
jmp
dec
je
gs
neg
out
out
inc
dec
dec
pop
pop
out
push
dec
test
mov
ljmp
cmp
pop
add
js
xchg
iret
std
adc
pop
bound
adc
push
cmpsl
dec
dec
je
dec
fs
shlb
dec
je
pop
aaa
pop
shlb
dec
roll
into
rorl
out
cmp
fucomi
xor
cmp
inc
push
adc
mov
das
pop
xor
testl
out
jo
adc
loop
fistps
in
outsb
dec
add
pop
out
mov
push
shll
sub
insl
stos
in
fsubl
adc
les
cmp
rcrl
add
jp
and
pop
pushf
jle
orb
fcompl
add
data16
sub
dec
sub
add
out
or
dec
lcall
sbb
subl
cmpl
xchg
and
fstpl
xchg
adc
adcl
ss
std
jo
lock
shrl
aas
jmp
cmp
std
ds
addr16
ss
push
call
xor
push
add
addl
add
bound
xchg
insb
test
jl
pop
incb
call
mov
jne
nop
in
bound
push
mov
aad
cld
das
push
push
mov
push
std
jl
stc
push
psrlw
push
decb
push
xor
mov
dec
push
int
imul
sbb
mov
push
psrlw
add
add
add
insl
ret
add
add
cld
mov
sbb
pop
mov
sbb
inc
je
sbb
sub
icebp
in
lods
dec
imul
fnstenv
dec
sarl
xor
frndint
mov
sbb
pop
mov
sbb
inc
je
mov
mov
add
sub
hlt
fnstenv
push
hlt
add
mov
inc
cmove
mov
jnp
imul
stos
pop
ljmp
shl
out
sbb
fstpl
cmp
mov
jnp
fsubrl
fsubl
pop
out
add
testl
ljmp
push
and
insl
call
sub
loop
sbb
cmpsb
rcl
out
sbb
movsl
dec
mov
pop
roll
pop
roll
xchg
lahf
xor
call
clc
es
in
roll
add
xor
std
jmp
pop
ljmp
loop
mov
loop
push
cmp
ret
loop
cmpl
shr
std
shll
std
mov
call
add
jmp
xor
push
jmp
cmc
jbe
call
imul
jmp
std
dec
outsl
cwtl
push
add
in
dec
mov
addr16
add
lea
insl
inc
test
clc
jbe
push
push
add
in
mov
xor
sahf
call
out
in
in
popf
call
pop
sbb
call
popf
je
fldl
mov
xchg
popf
call
lcall
push
ljmp
add
sahf
jmp
lahf
in
push
pop
add
sbb
pop
imulb
mov
add
cmpsl
popf
jg
mov
add
inc
int
test
push
pushl
mov
insb
int
lcall
bound
icebp
pop
lea
inc
dec
jmp
add
push
repnz
and
fldcw
xorl
sar
dec
cld
out
pushf
inc
repz
dec
jno
pop
push
xor
inc
enter
push
cmpsl
loopne
ret
add
lods
inc
imul
divl
inc
out
pop
sbb
jle
pop
out
pop
mov
out
fsubr
es
jnp
xchg
add
pop
addl
outsl
mov
out
incb
in
dec
dec
jo
pop
addl
or
jmp
int3
fcompl
mov
adc
bound
mov
add
out
add
insb
xor
in
scas
jecxz
and
ret
in
add
in
loope
xchg
pop
roll
ret
pop
jae
mov
push
in
std
fildll
inc
arpl
std
cs
fsubrp
push
push
imul
daa
in
push
xchg
pop
call
pusha
xchg
stc
cmc
out
add
mul
std
cmp
out
in
aam
call
pusha
xchg
add
scas
pop
jb
adc
scas
lock
pop
in
adc
repz
xchg
cltd
decb
push
lret
test
dec
cltd
push
int
insb
inc
lds
dec
push
call
mov
mov
call
std
shrb
inc
arpl
testl
adc
scas
xor
cltd
mov
rcl
notl
dec
push
inc
insb
in
notl
jne
xor
test
and
ljmp
push
decb
cltd
je
lea
mov
jbe
not
fs
mov
inc
cs
mov
mov
das
add
mov
lahf
fidivs
notb
xor
add
jge
jae
aas
call
inc
aas
sbb
xchg
sbb
xor
xchg
inc
cmp
sub
je
sbb
sub
adc
mov
mov
adc
sbb
aas
incb
push
cmpsb
inc
push
loop
inc
add
loop
and
loop
inc
push
dec
jg
hlt
loope
inc
jo
pop
inc
mov
aam
mov
add
loop
push
xchg
loop
inc
enter
mov
mov
inc
jp
pop
dec
push
push
inc
lock
pushl
loop
inc
nop
pop
aas
push
loop
dec
push
loop
aas
enter
add
out
push
loop
adc
iret
add
add
loop
jl
loop
aas
rcrb
std
xor
repz
shlb
loope
adc
loop
cltd
sub
std
mov
loope
jle
repnz
jbe
cli
inc
mov
in
call
sub
jecxz
mov
push
loope
push
xor
in
inc
loope
add
es
add
push
sub
sbb
and
std
push
clc
call
dec
sub
or
mov
or
std
add
das
std
out
cmpsb
int3
ljmp
into
xchg
sbb
add
and
icebp
cs
incl
xor
sub
sub
lcall
and
hlt
cld
decl
je
popf
sub
add
mov
in
ss
stc
push
mov
pushl
call
mov
shlb
jne
mov
insl
les
and
inc
add
and
sbb
inc
mov
pushl
push
pushl
xor
sub
enter
add
popf
jg
adc
lods
leave
jno
add
jno
cmp
and
aad
jmp
lods
add
jle
repnz
call
fimuls
aas
add
cmp
xor
sub
faddl
lods
lcall
push
ret
decl
cli
sub
shlb
cmp
repnz
hlt
daa
lods
inc
sbb
mov
pop
or
sbb
cmp
xor
leave
pop
jb
sahf
push
movsb
test
pop
pop
aas
aaa
sbbb
xor
mov
add
addr16
pop
fbld
or
jle
cmp
ficoms
mov
jno
stos
add
add
call
fmull
mov
or
mov
aam
aas
xchg
push
dec
repnz
cmp
fidivrs
fs
fisubs
test
fcompl
or
fwait
out
enter
clc
pop
pop
addr16
cmpsb
xchg
cld
out
add
std
pop
sbb
add
out
std
pop
push
divb
push
fisttpll
xor
insl
aas
jmp
stos
cs
sahf
adc
jne
test
jmp
inc
adcl
mov
xchg
in
push
je
adc
add
mov
sbb
add
push
xchg
adc
jmp
inc
cs
add
dec
shlb
cld
mov
std
jne
and
sti
push
and
sub
jmp
and
mov
jne
xor
sub
and
ret
push
mov
push
push
mov
stc
cmp
cli
push
int
insb
inc
add
pop
std
jne
xor
push
loop
add
mov
add
insb
inc
jne
je
or
inc
test
addr16
mov
inc
sbb
lods
pop
inc
aaa
sar
sub
lods
aad
xor
pop
pop
sar
pop
or
mov
aaa
sti
fisubs
inc
pop
repnz
fdivrp
jecxz
lods
add
sbb
cmp
lret
decb
aaa
je
fimull
mov
dec
shll
into
mov
decb
xchg
inc
xchg
aaa
or
mov
and
lods
pop
je
cmp
fistpl
scas
daa
fcompl
dec
fstpt
gs
sub
xor
cmp
gs
and
out
imul
sbb
test
add
sbb
bound
sahf
lahf
mov
pop
mov
out
cmp
cmpsb
scas
adc
adc
rol
cmp
cmpsw
scas
and
lret
xor
pop
shll
fisubl
push
mov
js
ficoml
dec
fwait
nop
cmp
xchg
out
pop
sbb
mov
stos
push
mov
mov
pop
inc
fscale
loop
fisttps
cltd
xchg
pop
clc
xchg
and
aaa
hlt
dec
or
daa
jg
out
fnstenv
inc
jmp
dec
fnstenv
push
dec
clc
int
call
rol
std
scas
lahf
movsb
jmp
fscale
fwait
cmp
ret
insl
imul
adc
fmuls
sub
xor
dec
fnstsw
and
add
cmc
rolb
jne
pop
decl
pop
add
sub
jne
test
call
or
pop
jae
adcl
inc
cmp
decl
sbb
add
fwait
xchg
je
and
cmpsb
stos
xchg
or
fnstsw
mov
xchg
ljmp
or
add
dec
fwait
stc
push
adc
or
pop
ret
mov
xor
lea
std
pushl
ss
sub
icebp
mov
ss
shll
je
jno
pop
xor
inc
push
es
jg
sbb
leave
xor
and
or
xor
and
add
xor
add
sti
inc
nopl
xor
shl
test
xor
lods
or
inc
ltr
mov
add
movsb
das
xchg
pop
out
negb
add
pop
roll
test
fnstsw
sub
call
ret
sbb
loop
iret
pop
add
cmp
je
inc
push
ret
sub
pop
xchg
sub
sub
adc
xchg
loopne
sub
xlat
push
add
adc
scas
pop
xor
hlt
ret
movsb
xor
push
xor
xchg
sub
jge
xor
and
stos
hlt
aaa
mov
pop
stos
sbb
jb
fcmovnb
pop
inc
aad
fs
dec
mov
std
mov
pop
pop
or
and
xchg
add
pop
lds
sahf
inc
sbb
jne
addr16
lcall
imul
aam
out
int
push
dec
mov
or
cwtl
push
dec
sub
jae
pop
arpl
scas
das
loope
je
leave
cmc
sahf
push
sbb
dec
adc
adc
mov
pushl
push
in
testl
add
je
mov
cmp
pushl
movsb
cmc
jmp
mov
lcall
xor
and
call
sbb
xchg
mov
xchg
mov
sbb
stos
mov
inc
push
adc
test
push
packssdw
inc
or
adc
mov
cld
dec
sub
jp
and
ss
mov
sbb
enter
dec
adc
xchg
dec
inc
mov
sbb
mov
je
sbb
arpl
jl
mov
mov
call
cmp
test
int3
das
mov
and
sbb
ds
incb
xchg
dec
das
je
lcall
xchg
test
sbb
jecxz
cld
push
pop
lcall
jns,pn
xor
dec
jnp
dec
jae
sahf
std
roll
xor
jae
sar
shrl
adc
mov
aam
or
xor
lea
jb
xor
pop
pushf
jl
fldenv
sub
es
jb
xchg
push
xor
rcl
xchg
sti
inc
xor
shll
fucom
sub
rcll
mov
ret
insl
pop
or
inc
add
pop
aas
xor
pop
out
cwtl
pop
mov
ljmp
fnstcw
test
jmp
or
std
stc
pop
pop
add
in
pop
add
pop
lcall
pop
pop
add
mov
sar
jmp
add
out
loope
imul
lock
push
pop
mov
and
push
outsl
shll
in
inc
or
push
push
in
inc
sbb
dec
push
subl
bound
icebp
into
dec
rorb
add
cmc
xchg
jno
push
mov
adc
pop
add
pusha
push
mov
inc
push
cld
ljmp
cmpsl
in
mov
roll
add
add
stos
out
scas
jno
pop
mov
test
cmovne
shlb
pushl
pop
in
mov
inc
fiaddl
sbb
in
je
sbb
sbb
push
mov
sbb
mov
add
adc
dec
hlt
push
std
inc
je
inc
jo
iret
icebp
cs
sbb
imul
ljmp
je,pn
push
js
scas
dec
cs
rorl
xchg
cmp
repnz
lcall
add
icebp
mov
js
dec
subl
decb
mov
repnz
jbe
pop
cs
jno
xor
add
pop
xchg
push
sbb
cmp
sub
xchg
mov
adc
data16
add
scas
out
out
sbb
cmpsl
aam
sub
sub
pop
out
and
add
lcall
mov
cld
add
sbb
sub
iret
outsb
mov
ret
and
iret
jb
xchg
stc
sub
into
dec
rcrb
mov
jb
sahf
xchg
xor
add
lea
bound
leave
sub
push
jnp
into
push
mov
ret
js
xor
stc
mov
mov
je
mov
loop
int
repz
sbb
inc
mov
aas
jmp
cmp
push
push
icebp
ds
jmp
sbb
mov
popf
lock
call
add
inc
cmp
into
and
add
push
pop
add
aaa
mov
data16
aad
ss
pop
into
dec
inc
aad
std
inc
dec
push
std
hlt
ds
aas
jmp
inc
sar
es
cld
and
lock
aam
adc
je
or
repz
addr16
inc
add
int3
loopne
xor
std
jne
jno
sti
loop
add
insl
inc
cmc
xorb
xchg
std
decb
iret
in
add
ljmp
cmp
mov
or
mov
cmp
test
pop
ljmp
in
addb
add
ja
add
lock
adc
add
sub
icebp
xor
push
ret
dec
mov
loopne
add
decl
mov
add
add
add
incl
sbb
pop
ret
sbb
cmp
jg
sub
xchg
sbb
sub
add
sbb
mov
add
xor
inc
sub
mov
add
xchg
ret
out
add
push
add
inc
sbb
lock
add
dec
mov
sub
cmp
mov
pop
jg
mov
pop
out
sbb
sbb
out
sub
int3
aaa
sbb
pop
out
repz
lret
sub
iret
xor
int3
mov
into
cmpsb
mov
aaa
int3
cmp
xchg
les
lret
cmpsb
mov
sbb
and
scas
sbb
in
push
sbb
lahf
mov
fcmovne
add
add
fildll
lock
or
sbb
ret
fiaddl
cmc
int3
std
pushf
inc
mov
cld
add
mov
test
xchg
jmp
mov
pop
add
lret
sub
add
mov
pop
add
mov
std
sahf
mov
sub
mov
mov
add
adc
aam
out
aas
jmp
pop
lret
and
std
push
jb
scas
push
aad
jb
push
mov
dec
mov
call
pop
add
cli
femms
mov
std
incl
cmp
xchg
popf
std
call
push
inc
add
mov
call
mov
cmp
add
cmc
pop
add
add
rolb
add
leave
ja
add
arpl
pop
sbb
jne
add
orl
cli
pop
mov
inc
cld
sbb
cmp
push
cmp
cmp
mov
daa
mov
mov
jp
pop
jbe
enter
xorb
cmp
leave
dec
sbb
je
mov
pop
mov
jno
jne
mov
cli
mov
repnz
jmp
shll
rorb
outsl
int3
addr16
sar
fs
mov
shl
mov
add
cld
js
cwtl
bound
or
cmpb
push
dec
mov
enter
ret
jnp
out
pop
shlb
add
xor
mov
fwait
fwait
dec
pop
es
mov
inc
push
add
push
out
adc
sbb
inc
fildl
imul
jo
mov
clc
fwait
dec
in
sbb
out
lret
dec
mov
cmp
and
fstpl
into
xchg
mov
int3
cmp
add
iret
stc
add
add
mov
enter
aas
xor
pop
fsubl
std
repnz
push
mov
dec
test
enter
mov
jae
pop
or
add
pop
pop
sub
push
jb
fld
add
cs
icebp
int
shl
dec
or
ret
movsl
and
std
cmpsb
mov
pop
mov
push
push
roll
add
add
std
cmpsb
mov
jne
iret
fnstcw
push
add
sub
add
jg
or
jae
incl
jg
mov
pop
push
mov
stos
dec
pop
insl
js
inc
xor
jle
fildl
cmc
add
sbb
test
cmc
add
sbb
inc
std
incl
add
jecxz
call
shl
add
dec
sbb
out
jne
jno
sbb
jns
rorb
jmp
pop
mov
add
fwait
enter
jmp
ret
incl
pop
and
daa
je
add
and
sbb
pop
sbb
ror
xor
or
rclb
xchg
add
inc
popf
and
sbb
push
test
cmp
add
fmul
inc
jae
lar
sub
xchg
or
test
add
xchg
icebp
mov
push
cmpsl
xchg
mov
xor
sbb
sbb
xchg
add
pop
cmpsb
and
push
sahf
cwtl
and
loop
adc
cwtl
daa
hlt
or
and
fmull
jae
out
sub
pop
les
push
cltd
filds
icebp
iret
push
xchg
lcall
sbb
sbb
mov
push
dec
fdivs
je
pop
sub
xor
testb
sub
arpl
push
negl
or
test
add
les
gs
std
jmp
std
dec
in
addl
jnp
std
mov
add
es
ret
ljmp
pop
add
pop
mov
mov
sub
std
repnz
push
mov
jae
add
push
std
rcr
push
mov
std
repnz
inc
adc
mov
dec
add
pop
mov
icebp
pop
pop
jmp
imul
mov
xchg
jge
mov
add
scas
ljmp
mov
inc
lock
fdivs
push
call
call
jnp
mov
or
dec
jp
push
movsl
push
data16
out
popf
std
notl
cmp
xor
fcmove
add
mov
gs
cmpsl
ljmp
add
inc
imul
push
decl
pop
or
add
movsl
sbb
sbb
std
rcrl
push
sub
cmp
mov
mov
imul
cltd
fs
jmp
inc
mov
sti
mov
adc
imul
mov
sub
push
dec
xchg
add
sbb
jno
jo
repz
out
leave
push
pop
cs
std
sbb
add
cmpsl
add
lret
mov
sbb
repz
iret
xadd
or
push
imul
shl
nop
add
push
lret
add
push
insb
sub
les
or
pop
out
daa
fwait
testb
inc
push
call
inc
jae
out
pop
out
int3
xor
fcompl
mov
inc
push
push
daa
xor
and
cmp
pop
out
mov
sub
and
decb
faddl
leave
decb
pop
into
and
sar
xor
cmp
xchg
stos
xor
std
sbb
shr
add
rcll
sahf
add
call
pusha
fwait
add
xchg
shll
ror
outsb
adc
or
test
inc
and
jmp
pop
mov
std
cs
and
xchg
pop
xor
decl
xor
faddl
int
std
imul
pop
std
mov
inc
pop
dec
pop
sbb
ret
movsb
repz
call
loop
icebp
incb
pop
cld
mov
mov
repnz
mov
sti
jmp
add
in
push
or
push
clc
jb
sbb
mov
dec
gs
xor
jmp
ror
nop
int3
xchg
stc
nop
mov
pop
add
add
dec
mov
sbb
out
lods
fildl
add
sub
into
and
mov
dec
ss
je
add
sbb
sti
inc
mov
push
and
sarl
mov
add
inc
jae
cmp
popl
lea
aad
out
je
lcall
imul
add
pop
lods
add
sbb
sbb
lsl
mov
push
shlb
out
xor
incl
sbb
xchg
mov
pop
push
xchg
add
inc
dec
cmpsl
stos
adc
add
jmp
push
add
pop
push
push
inc
pop
inc
pop
inc
pop
out
fdivrl
add
sub
repz
inc
lods
or
add
add
add
sbb
stc
nop
sbb
fsubrs
mov
jnp
push
out
les
nop
sbb
mov
out
rol
dec
dec
sbb
xchg
add
lea
jmp
pop
push
rclb
mov
add
adc
addr16
fwait
stos
push
push
and
add
mov
mov
call
mov
ret
call
mov
daa
mov
enter
and
pop
sarl
insl
and
std
cmc
push
fdivrs
rclb
add
stos
push
sub
xchg
xchg
shll
mov
add
sbbb
inc
push
lds
push
add
xor
pop
add
inc
cli
in
add
cmc
pop
add
shrb
rolb
cld
and
or
rolb
dec
inc
mov
inc
call
icebp
gs
fisttpll
jno
add
inc
mov
ljmp
lcall
cld
clc
cmpsb
xchg
sub
push
or
jno
mov
sub
incb
inc
and
ljmp
mov
shrb
and
test
nop
imul
pushl
sbb
jmp
push
add
pop
rolb
les
sbb
call
lahf
jbe
ljmp
mov
lock
addl
les
add
cli
inc
push
xchg
aaa
add
add
dec
scas
fadd
sbb
add
mov
fcompl
and
adc
sbb
add
pusha
adc
xor
push
sbb
sbb
out
scas
sbbb
sahf
jbe
xchg
pop
pop
out
sub
adc
pop
pop
incl
fsubrl
in
sub
pop
out
fistpl
roll
sbb
out
pop
mov
stos
mov
cs
inc
add
sub
push
or
xor
fwait
cmpsl
sbb
pusha
add
mov
jp
jo
imul
jmp
pop
push
data16
mov
pop
scas
pop
push
rcrl
add
pop
into
add
pop
sarb
pop
add
movsb
push
cld
mov
xor
clc
sbbl
jno
adc
mov
mov
sub
fwait
popa
std
je
rolb
sub
clc
shll
cmp
mov
mov
mov
jmp
inc
add
add
or
incl
pop
add
mov
pop
add
jbe
mov
dec
jb
loop
loope
mov
lds
pop
add
add
pop
add
cmp
icebp
add
pop
add
js
in
push
pop
add
xor
data16
jae
dec
je
inc
mov
dec
hlt
pop
lds
pop
add
lds
std
pushl
dec
adc
dec
lcall
sbb
sbb
addl
out
add
call
jns
lcall
and
ffree
add
sbb
cmpb
or
or
mov
les
pushl
les
cld
dec
test
adc
icebp
mov
mov
clc
or
les
ljmp
add
cmp
imul
mov
xor
add
pushf
xchg
add
hlt
sahf
inc
inc
push
add
shlb
fwait
pop
cmpsb
sbb
nop
scas
sahf
adc
ret
jp
repnz
out
dec
sub
mov
xlat
mov
push
pop
out
sbb
call
ret
inc
addr16
sub
add
pusha
mov
adc
lcall
pop
loop
jo
push
fxch
sub
adc
pushf
in
dec
sbb
add
out
add
adc
inc
sbb
cmp
cwtl
push
bound
and
adc
pop
aas
jmp
cs
add
out
std
jmp
pop
or
push
pop
aas
jmp
cs
jmp
mov
andl
mov
ds
and
ss
mov
call
push
iret
dec
test
pop
pop
je
mov
mov
jne
mov
push
mov
mov
add
lahf
mov
call
add
pop
aas
add
add
lret
add
push
add
push
lock
jmp
ljmp
add
xchg
add
xor
fadds
add
mov
std
and
ljmp
and
sub
std
and
sbb
std
and
lret
addl
inc
add
out
popf
addl
daa
addb
out
popf
addl
or
xchg
popf
addl
sub
lahf
add
sbb
cmpsl
popf
addl
movl
incl
enter
sbb
mov
add
stc
daa
addb
out
popf
add
incl
addb
out
popf
add
cmp
inc
sbb
jecxz
popf
add
incl
dec
addb
out
repz
add
ja
test
jmp
add
pop
mov
sbb
add
ja
test
pop
sahf
jmp
jnp
xchg
test
pop
xchg
jae
sub
ja
test
pop
outsb
jmp
dec
ja
sbb
sbb
sbbl
add
ja
sbbl
add
jbe
addl
pop
pop
add
les
test
mov
sbb
insb
subb
mov
adc
je
sub
mov
sub
sbb
sub
mov
sub
test
sub
mov
and
adc
sub
mov
or
cmp
test
mov
rcrl
subb
sbb
add
add
add
subb
sbb
push
hlt
xor
gs
sbb
add
ret
mov
jne
inc
add
mov
xor
std
and
shlb
std
and
bound
std
and
ret
xorb
and
mov
push
std
and
shlb
add
add
std
and
loop
leave
addb
add
mov
xorb
sub
mov
xorb
add
enter
or
imul
negl
aas
stc
mov
les
add
mov
mov
je
add
sbb
push
add
sub
add
aas
add
sbb
or
add
ret
xor
push
cld
mov
les
add
add
leave
stos
dec
or
add
and
into
lcall
add
fdivr
jmp
les
add
add
sbb
mov
les
add
sub
sbb
out
sbb
mov
mov
out
sbb
jecxz
sbb
add
fisttps
pop
out
add
push
out
mov
arpl
inc
pop
pop
cld
add
out
sbb
iret
add
test
ret
jnp
adc
stos
push
out
sbb
jmp
and
add
xor
dec
aaa
pop
out
pop
push
out
push
outsl
out
sbb
fistps
inc
pop
pop
push
aaa
push
add
pop
lods
jae
mov
adc
pop
pop
xchg
or
jmp
jmp
std
icebp
pop
pop
add
pop
add
pop
fdivrs
lods
mov
pop
add
stos
popa
mov
sbb
ret
mov
stos
fwait
lods
subb
add
push
daa
sbb
pop
add
pop
loop
icebp
jae
std
sub
ficompl
pop
pop
xchg
pop
add
lret
in
pop
pop
rorb
jecxz
jg
add
lods
std
dec
mov
add
sbbb
pop
add
xlat
sbb
pop
xchg
jle
adc
add
pop
sti
sarb
add
repz
std
mov
aad
add
cmp
lret
lret
push
mov
lea
mov
jb
incb
add
ret
jne
sbb
inc
xor
inc
int3
pop
sbb
mov
ljmp
cmp
neg
mov
or
jbe
pop
divl
call
sbb
mov
xorb
add
sbb
mov
mov
sub
add
add
ret
sbb
or
lods
add
inc
jmp
pushl
adcb
mov
inc
xchg
sbb
add
jp
sub
add
xchg
xor
add
out
pop
pop
sar
movsl
dec
jmp
repz
pop
jecxz
hlt
adc
xlat
incl
stos
jo
adc
add
out
pop
out
pushf
dec
jmp
add
jo
pop
pop
out
cld
or
mov
dec
loopne
adc
inc
push
fmulp
imull
pusha
test
fwait
test
fstpt
jne
jns
jle
jns
ffreep
nop
adc
movsb
jnp
xlat
jb
sbb
out
xor
filds
mov
inc
faddp
fdivl
fadd
jmp
pop
subl
test
call
add
add
push
add
adc
std
jmp
out
negb
call
jmp
sub
mov
std
jmp
das
bound
push
sbb
and
imulb
inc
add
pop
test
int3
push
ficoms
in
pop
pop
xchg
pop
add
pop
mov
std
add
add
int3
and
add
add
test
push
mov
std
mov
popa
adcl
pop
add
sbb
mov
jae
add
add
mov
xchg
cmpsl
std
decl
add
pop
inc
mov
add
mov
adcl
pop
add
mov
or
mov
mov
pop
add
and
add
jns
add
test
std
jmp
jle
and
std
decl
hlt
add
inc
xchg
jae
sbb
jle
sbb
std
call
cmc
jp
sub
hlt
add
js
adc
add
xchg
mov
ja
incl
pop
outsb
sub
out
mov
xchg
jge
filds
and
clc
add
cmpb
inc
sti
xchg
in
out
inc
ja
je
add
cmpsb
rcrb
xchg
add
fcoms
sti
enter
sbb
add
cmpsb
cmpsl
jp
inc
jecxz
sbb
insl
repz
pop
out
mov
rcl
add
movsb
sub
pop
pop
out
pop
out
add
gs
pop
out
cltd
inc
jecxz
sbb
jo
aaa
pop
out
xchg
inc
movsl
bound
pop
out
cmpsb
dec
jmp
adc
xlat
jmp
sbb
cmp
movsl
pop
sbb
add
inc
add
pop
sbb
jmp
pop
pop
mov
pop
add
mov
lcall
pop
pop
jae
mov
pop
pop
xchg
pop
add
pop
fsubrl
jo
dec
add
pop
rolb
cmp
movsb
mov
and
pushf
add
xchg
and
jo
inc
add
pop
sbb
jmp
pop
pop
mov
pop
add
iret
jnp
pop
cmp
add
dec
add
jne
xchg
sbbl
add
pop
test
add
add
mov
pop
shlb
xor
sbb
xor
rcll
add
pop
test
jne
scas
sbb
pop
add
cmc
aam
sbb
push
add
and
pop
ret
xchg
push
push
jle
and
ds
cmp
jmp
inc
aaa
xchg
pop
add
push
add
fcomps
lahf
jg
sbb
pusha
addl
pop
mov
cmp
inc
mov
sbbb
jno
xor
add
add
mov
jb
inc
cmp
jb
jne
call
pop
inc
in
es
push
xchg
jae
fdivs
dec
sbb
std
pusha
pop
fisubrs
std
sti
roll
sbb
mov
push
push
cmpsl
inc
cmpl
add
add
sbb
adc
lods
addl
jmp
pop
sub
pop
test
add
cmpsb
mov
std
jbe
scas
fdivs
mov
aad
daa
pop
pop
mov
add
sbb
pusha
mov
sar
rol
pop
push
and
and
mov
xchg
fcom
pop
sbb
pusha
mov
out
pop
aam
pop
and
mov
sbb
pop
out
adc
xor
add
push
loope
in
pop
jae
xchg
fcoms
in
pop
xchg
push
add
scas
in
pop
add
dec
add
pop
aam
rcrl
pop
add
jbe
subl
dec
roll
add
sbb
popa
sbb
call
adc
jmp
pop
pop
jg
cwtl
pop
add
mov
int
inc
add
ja
cwtl
cmpsb
xchg
call
mov
sub
adc
pop
add
mov
add
jns
sbb
lds
add
stc
jb
mov
jb
push
decb
sti
pop
inc
cmp
lea
add
pop
add
hlt
movsb
addb
pop
outsl
dec
pop
and
cmp
add
xor
mov
call
mov
mov
stc
jb
mov
xchg
lea
pop
mov
ret
std
jnp
add
cmc
into
sahf
and
scas
add
jb
pop
ret
or
mov
sbb
mov
mov
inc
mov
adc
sbb
mov
fdivrl
scas
sbb
mov
xchg
cmp
add
pop
sub
cltd
movsl
add
mov
sub
inc
movsl
pop
and
mov
xchg
add
cmpsl
cs
sbb
shll
inc
sub
mov
jb
jno
call
add
xchg
jmp
push
mov
shl
mov
ret
fcom
pop
sbb
pusha
sahf
clc
push
out
sub
pop
sbb
das
or
shlb
sub
jb
je
sar
adc
aad
filds
jmp
out
sbb
sbb
add
lret
sbb
mov
stc
push
push
ret
sbb
rcrl
cld
add
cld
mov
add
jecxz,pt
sbb
loopne
lcall
outsl
pop
push
add
pop
scas
add
mov
aam
icebp
and
sbb
popf
mov
jl
aam
fldenv
pop
add
inc
add
pop
sbb
jmp
pop
pop
mov
push
add
dec
jp
adc
push
mov
mov
add
pop
aaa
cmc
add
loope
aam
int
rclb
mov
push
add
pop
and
add
pop
bound
sub
sub
xor
add
pop
ret
data16
pop
jg
in
push
mov
jge
icebp
xchg
iret
pop
and
iret
pop
and
pop
scas
or
pop
add
ss
add
mov
pop
lea
test
and
xchg
std
decl
rolb
push
xor
mov
std
ds
jbe
pop
xchg
out
pop
xchg
add
sub
rorb
push
mov
sub
inc
add
cmp
or
sub
and
or
mov
add
movsl
popf
test
add
and
add
add
and
add
xchg
xor
add
mov
inc
sub
add
mov
negl
add
or
std
pushl
cmpsl
or
mov
or
pop
sub
or
add
sbb
stos
mov
in
pop
lahf
sub
or
sbb
divb
addr16
bound
pop
bound
add
call
and
pop
out
sbb
inc
add
or
sarb
add
loop
imul
out
sub
subl
xchg
pop
add
xchg
push
add
popa
bound
movsb
call
sbb
or
lret
daa
rcrb
dec
clc
inc
ret
sub
sbb
sbb
add
add
pop
in
adc
loope
add
xor
test
pop
pop
add
aas
adc
lcall
add
jmp
pop
add
lret
cltd
std
fiadds
add
pop
in
fidivrl
in
jmp
subb
cmp
mov
or
inc
sub
jb
cmpsl
es
add
mov
gs
add
push
aaa
and
rcrl
cmp
xchg
std
add
sub
add
xchg
mov
nop
sti
sub
dec
and
pop
jmp
dec
cmp
mov
rcrl
rol
and
mov
and
push
and
std
ljmp
push
dec
push
add
mov
sti
mov
adc
lea
push
mov
xchg
xchg
push
mov
mov
imull
dec
sbb
lret
popf
adc
or
dec
and
sti
push
and
aaa
jle
test
std
decl
mov
std
sti
pop
cld
jbe
insl
cld
jmp
add
subl
rorl
mov
sub
add
dec
subb
je
pop
testb
lods
or
loopne
sbb
call
pop
and
loopne
sbb
lret
push
sbb
or
pop
stos
adc
push
cmpb
push
clc
push
out
movsl
mov
or
lcall
sbb
and
add
outsl
fisubrl
cmc
push
sub
jae
mov
stos
jle
cmovge
into
cmovne
sbb
jo
cld
pop
out
fwait
in
mov
test
jecxz
out
imul
sbb
cmpsl
xor
xchg
mov
push
fwait
sbb
sub
out
pop
dec
add
orps
mov
add
mov
nop
pop
xchg
std
jmp
sbb
mov
pusha
adc
dec
in
cwtl
sbb
push
pop
add
push
pusha
push
dec
shr
pop
add
xchg
cmp
std
jmp
rcll
in
pop
jb
sahf
cwtl
add
pop
pop
subl
mov
mov
fmul
out
frstor
add
pop
xchg
pop
add
clc
hlt
add
sbbl
add
cmp
inc
adc
adc
add
inc
pop
add
mov
inc
push
mov
pop
sahf
adc
pop
add
fwait
outsl
add
cmc
push
test
test
test
insb
sub
out
popf
or
dec
in
add
shll
rclb
cmp
test
adc
mov
push
dec
and
push
push
mov
imul
cmp
dec
pop
repnz
sub
rorl
test
push
mov
movsl
inc
mov
popf
inc
xchg
sahf
sbb
xor
inc
and
or
sbb
add
add
rcll
mov
or
std
cmpsl
aad
sub
add
sbb
xchg
addb
pop
cmpsb
adc
aaa
pop
cmpsb
sbb
add
jmp
pop
insl
push
sbb
smsw
loopne
sub
adc
int
icebp
push
fbstp
sub
cmp
fildll
icebp
add
xchg
idivb
pop
out
xchg
push
lret
sub
in
sbb
lock
pop
out
xchg
pop
out
aaa
pop
int3
add
lock
pop
out
xchg
pop
out
movsl
das
add
lret
push
xchg
jmp
ret
pop
ret
and
cmp
xchg
pop
add
pop
sub
out
in
add
loopne
inc
call
add
push
aaa
jb
sub
cmc
scas
dec
in
int
flds
jecxz
int
sub
pop
subl
hlt
sub
popf
jnp
pop
out
cli
jb
shr
mulb
popf
jmp
adc
out
std
ss
daa
and
push
mov
lods
add
push
mov
mov
std
ret
roll
and
add
loop
xchg
inc
and
inc
call
and
push
add
test
sti
jbe
inc
insb
and
or
mov
inc
sub
push
into
call
into
xor
mov
sbb
call
cmp
adc
and
or
mov
pop
add
mov
inc
jge
adc
add
les
fwait
repz
xchg
sbb
inc
and
aam
mov
push
mulb
lcall
and
fstps
out
cmp
and
pop
cli
loopne
sbb
sbb
add
daa
add
incb
lahf
out
decl
sbb
push
and
or
adc
addb
fiadds
dec
addl
filds
push
mov
xor
aaa
fsts
pusha
pop
xor
pop
push
sbb
jo
cmp
outsl
push
jl
pop
iret
push
jp
jecxz
daa
add
mov
fiaddl
rol
mov
or
sbb
xchg
jmp
idivl
int3
movsl
push
add
sub
je
mov
pop
jecxz
sbb
mov
add
inc
mov
mov
fistl
pop
mov
add
outsl
and
sub
sub
sbb
data16
push
and
inc
loop
daa
sub
mov
mul
mov
movsl
pop
add
mov
cmp
loop
ljmp
add
lcall
ljmp
mov
add
mov
or
jmp
popf
cltd
add
popf
fwait
add
rcrl
and
out
jecxz
xchg
jbe
std
sahf
mov
and
mov
and
movsb
cs
hlt
fwait
push
jb
sub
rep
clc
sub
rcl
add
add
sub
xor
jg
pop
ret
cwtl
cmc
add
call
push
add
into
mov
xchg
ljmp
rolb
enter
jmp
insb
cmpsl
cli
mov
iret
xchg
inc
push
mov
or
pop
add
rolb
and
sub
cmc
and
into
popf
hlt
lcall
cmp
push
xor
mov
ds
or
sbb
push
addb
add
cmpsl
out
sbb
xorl
add
lahf
xor
add
sbb
dec
and
stc
mov
or
jb
cmpsl
cmp
or
mov
push
sub
mov
pop
inc
push
fmul
imul
jb
stc
dec
and
gs
mov
sub
cmp
jle
cmpsl
and
add
push
jge
xor
in
std
sbb
or
and
pop
jb
inc
inc
jo
cmp
dec
inc
dec
bound
cmp
push
insb
loopne
mov
ljmp
jb
movsl
mov
in
lods
mov
fstpl
mov
clc
ss
cs
jmp
sbb
jle
ss
jl
notl
sub
je
xlat
jmp
add
sbb
loope
and
subl
clc
ss
push
lret
sbb
fistps
jmp
cmp
push
jo
into
cmpl
mov
cmp
popa
daa
and
inc
and
in
daa
and
dec
pop
and
lock
in
pop
pop
jae
cwtl
leave
sub
pop
pop
add
add
pop
jl
cwtl
mov
jge
or
pop
jnp
pop
pop
add
pop
je
call
sbb
mov
jecxz
pop
bound
aas
adc
xor
cmp
ror
adcl
fsubrp
add
jl
adc
and
pusha
inc
sti
push
mov
into
call
push
je
std
testb
mov
cmp
add
call
mov
push
into
mov
movsl
lock
ret
adc
inc
pop
gs
xchg
std
fadds
add
jne
inc
cmp
loope
jg
inc
stc
add
icebp
dec
xchg
test
sub
mov
push
mov
ljmp
add
adc
mov
imul
cmpsl
loope
inc
ja
jmp
je
inc
and
out
mov
sbb
icebp
mov
jle
add
xchg
jp
inc
mov
jp
inc
lcall
movsl
and
inc
and
fistpl
inc
inc
jns
xchg
jbe
add
out
popa
jns
inc
pop
pop
xor
out
lahf
mov
jg
pop
out
push
pop
ret
daa
sbb
mov
sbb
bound
das
jb
inc
xchg
insb
call
aam
push
movsl
push
or
movsl
jae
xlat
outsl
sub
inc
cwtl
jp
rcll
lock
dec
cltd
das
movsl
cs
xor
sub
mov
jg
in
sar
jns
loopne
pop
dec
int3
shrl
in
sahf
bound
outsl
inc
adc
push
add
loopne
add
sti
roll
cs
cmp
mov
jb
aas
cmp
outsl
aam
loopne
mov
sub
inc
mov
cmp
add
dec
pop
addl
pop
pop
add
inc
pop
andl
add
fcompl
add
jmp
sbb
ror
adc
std
testb
hlt
mulb
stc
jb
std
jmp
push
sub
xchg
jae
add
sti
inc
mov
std
je
add
add
sbb
jmp
jg
lods
jle
test
pop
add
xchg
add
and
add
sub
cmp
xchg
push
push
rolb
cli
xor
jg
add
xor
jne
fidivrl
add
push
cmp
sbbb
sbb
add
xor
add
add
fdivrs
std
pop
dec
cld
push
in
or
call
inc
lea
shl
lret
std
lret
cmp
pop
mov
mov
test
shr
and
loope
popa
icebp
lock
in
adc
mov
shr
sbb
std
xchg
and
add
ret
push
jge
sbb
add
sbb
xor
mov
add
pop
push
sbb
xchg
call
add
cmpsl
adc
pop
sub
insl
repz
pop
out
lcall
xchg
adc
add
pop
bound
cmpsb
push
mov
cltd
outsl
repz
roll
sbb
hlt
cld
movsb
fdiv
pop
sbb
jo
add
out
pop
rcrb
pop
pop
out
mov
shrb
pop
pop
out
or
cmp
testl
push
lock
lcall
sti
pop
pop
add
mov
sbb
jo
push
jmp
and
mov
and
cmpsl
sbb
addr16
add
mov
pop
decl
push
add
dec
xchg
ror
mov
fwait
je
nop
or
pop
sub
mov
jmp
or
add
add
sarb
pop
push
inc
ret
aam
stc
and
ret
push
add
aas
pop
pop
notb
mov
ret
out
sbb
out
xchg
mov
or
imul
push
add
enter
les
mov
add
pop
xchg
dec
xchg
fstps
xchg
dec
push
mov
inc
add
pop
push
push
jo
and
insl
dec
icebp
incl
ffree
sub
pop
add
adc
int3
int3
icebp
xchg
int3
int3
sbb
mov
popf
jg
add
xor
jmp
or
pop
push
aas
sbb
aam
fs
mov
test
xchg
pop
or
xor
add
iret
and
ret
mov
push
int3
inc
lahf
mov
scas
data16
dec
adc
nop
mov
sbb
ljmp
jae
movsb
mov
jb
movsb
mov
jb
fsts
or
mov
test
movsb
or
pop
hlt
jae
push
popa
dec
dec
scas
outsl
dec
daa
jmp
xorb
mov
add
push
popf
sbbl
out
adcb
or
pop
fdivl
push
popa
inc
out
scas
pop
inc
pop
jmp
andl
out
popf
cmpsb
adc
or
push
das
push
out
mov
jg
xchg
popf
outsb
fldl
lret
or
pop
das
xor
add
and
mov
add
lret
stos
sahf
sbbl
adc
jge
je
push
pop
sub
loopne
pop
add
and
jecxz
dec
fiaddl
jmp
xchg
sbb
insb
repz
pusha
pop
fld
in
xchg
dec
jg
and
jmp
and
pop
add
movsl
inc
jg
and
jmp
add
jo
lock
xor
fadd
in
inc
jg
push
xchg
or
lds
test
ds
jge
mov
incl
mov
jl
or
aam
andl
cltd
out
jl
test
in
lret
inc
shll
andl
xor
or
lds
daa
xor
inc
test
add
add
jle
and
outsl
je
cmc
rorb
mov
fcmovb
add
lcall
cmc
sub
ret
xchg
or
xchg
mov
sbb
movl
sbb
mov
in
ret
xor
adc
ss
into
jecxz
sbb
mov
fcoml
lret
add
xchg
inc
in
jo
je
pop
movsl
aaa
ret
ss
push
or
enter
fnsave
or
xchg
js
mov
fst
hlt
or
sti
or
mov
pop
sub
and
icebp
mov
sarb
xchg
push
pusha
pop
dec
jge
and
lds
or
push
shrb
inc
sub
lock
loop
add
dec
cmp
push
es
cmp
push
lds
xor
and
and
sbb
jmp
add
iret
jmp
add
iret
jmp
add
shlb
lds
shl
mov
arpl
xor
add
loopne
adc
cmp
jmp
jb
jno
cmp
sti
xchg
stos
mov
add
cltd
or
in
shl
push
dec
push
lahf
out
roll
xchg
daa
or
rorb
mov
mov
jg
es
or
pop
pusha
je
mov
inc
push
scas
cmpsl
mov
gs
jmp
pop
je
clc
dec
ror
test
pop
das
xchg
xchg
mov
xor
fisubrl
xchg
xchg
out
loop
add
les
out
adcl
sahf
out
xor
test
pop
testb
add
add
into
cmp
jge
out
enter
mov
adc
push
jl
mov
cli
mov
pop
test
test
sbbb
sti
mov
dec
push
mov
xchg
aas
mov
sbb
jmp
test
add
add
lret
jg
aas
sbb
mov
add
add
pop
xor
jbe
test
jle
sgdtl
sbb
nop
add
ret
add
lahf
inc
std
xchg
je
xchg
fistpll
or
add
or
fstpl
jle
ja
add
sbb
nop
add
ret
jnp
in
popf
mov
or
movsl
rol
or
sbb
add
imul
sbb
fcom
fwait
xchg
test
sub
mov
shll
je
mov
or
xchg
cmp
bound
pop
in
sbb
lds
pop
out
and
pop
jo
imul
add
mov
fs
add
sbb
mov
push
out
add
repnz
lock
add
fsubl
add
cltd
push
or
sbb
and
lcall
pop
pop
add
stos
pop
jl
sbb
jmp
add
es
add
pop
pop
xchg
ret
jmp
add
bound
sbb
jne
push
sahf
repz
and
test
xor
jp
pusha
fldenv
out
jo
inc
enter
loopne
mov
stos
fdivs
mov
ficomps
pushf
pop
sti
cmpsl
mov
jo
mul
sbb
sbb
fadds
test
xor
rol
pop
pop
sub
jecxz
testb
in
test
mov
add
loop
rorl
jge
push
add
xchg
mov
fadds
adc
hlt
loope
rcrl
sarb
jge
stos
pop
or
movsb
mov
inc
mov
mov
or
or
cld
sbbb
pop
dec
push
out
xor
xchg
jecxz
and
sbb
sldt
add
add
les
mov
jnp
call
mov
dec
aas
sbb
or
sbb
add
or
das
call
je
dec
aas
sbb
int3
stc
repz
pop
fisubrs
push
xchg
out
push
outsl
stc
cmp
mov
cs
mov
aad
mov
test
cmc
mov
scas
inc
add
dec
aad
add
addl
push
fsts
add
std
push
pop
inc
jge
pop
test
jmp
lret
cld
xchg
out
ljmp
jb
rcll
out
aam
fsubrs
iret
stc
je
xchg
out
pop
jae
fmull
fcomip
inc
sbb
lods
shrl
rol
je
xor
mov
push
inc
jge
imul
das
sbb
sbb
xchg
fildl
ja
shl
pop
xchg
inc
sbb
lods
ror
orb
push
push
add
fmuls
lock
push
cld
dec
add
push
or
add
pop
popf
pop
clc
sbb
jp
cmpsb
out
fld
icebp
inc
loopne
cltd
das
adc
add
jne
and
pop
stos
out
push
pusha
repz
sbb
mov
loop
in
xlat
orb
push
push
mov
jmp
cmc
xor
inc
or
xor
ds
lcall
test
push
add
push
sub
lock
mov
test
mov
incl
lods
fstpt
mov
test
sti
jle
jnp
ret
mov
jle
jl
mov
dec
clc
mov
movsb
incl
sbb
mov
push
jno
mov
imul
sbbl
cmpb
or
incl
jno
adc
cmp
mov
sbb
add
sbb
das
pop
xchg
dec
sub
add
adc
xchg
loopne
sbb
xor
adc
push
or
incl
call
mov
pop
add
inc
add
out
mov
jnp
sbb
add
icebp
jnp
rolb
fildl
rolb
ret
push
mov
in
cld
test
rolb
mov
lcall
std
mov
xchg
sbb
scas
xchg
shll
ficomps
arpl
push
sub
jecxz
add
or
into
aaa
jno
cmpl
iret
sub
or
test
adc
xchg
addr16
add
fadd
pop
out
push
adc
jge
push
test
aaa
movsl
pop
lret
repz
add
add
in
sub
stc
imul
repz
pop
out
adc
mov
lcall
jle
or
call
xchg
and
ds
pop
pop
mov
das
push
call
sbbl
pop
mov
out
or
xor
cli
adc
icebp
pop
or
rcll
std
scas
add
pop
mov
out
fcoms
push
push
subl
cmpsl
jae
and
adc
fcmovb
in
cltd
add
and
ds
notl
push
push
inc
and
mov
call
ret
cmc
pop
add
std
push
jno
test
push
mov
mov
cmp
xlat
nop
mov
mov
inc
hlt
jae
inc
pusha
add
hlt
push
jb
pushf
add
xor
loopne
fnstcw
push
jle
or
mov
lahf
sti
decl
lock
push
ja
decl
inc
call
xchg
push
add
xchg
lret
mov
inc
mov
fldcw
xor
add
add
mov
lret
jmp
roll
dec
stc
sub
xchg
aas
faddl
inc
sbb
jae
cmpl
push
fdivrl
adc
das
inc
add
xchg
std
sti
dec
or
test
hlt
xor
sbb
jns
ja
int3
cli
inc
cld
xchg
pop
aam
popa
pop
pop
js
xorl
test
mov
xor
aam
sbb
lods
lret
in
addb
insl
mov
jle
push
fildl
xlat
pushf
inc
sbb
movsb
fcmovne
andb
insl
xchg
jle
jb
adc
xor
in
lret
sub
movsl
hlt
leave
fildll
insb
adcl
insl
adc
adc
cmp
fimull
add
add
add
bound
adc
cld
mull
insb
add
call
add
sarl
je
push
xlat
cmp
arpl
jecxz
sti
cli
shl
jnp
shrb
and
jmp
jmp
outsb
das
sbb
mov
std
test
jl
push
outsb
std
insb
jmp
std
fidivs
outsb
or
add
sbb
loopne
fwait
mov
mov
push
cmp
popa
sbb
andl
sub
mov
js
push
mov
jno
inc
jecxz
push
mov
addb
mov
pop
pop
cld
sbbl
push
push
mov
sub
stos
in
push
or
inc
or
mov
leave
add
imul
jns
cmc
mov
test
push
jg
sub
mov
shlb
or
add
addr16
add
mov
mov
and
sbb
inc
icebp
inc
sub
clc
call
je
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
add
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
in
push
push
mov
call
sub
adc
cmp
push
cld
cmp
mov
testb
cmp
mov
out
dec
push
cmp
adc
adc
push
repz
pop
cli
es
adc
aaa
roll
bound
clc
adc
add
bound
clc
pop
cli
cmp
sub
pop
imull
out
jmp
ljmp
loope
arpl
test
jecxz
divb
aas
add
lret
mov
ljmp
cmp
jmp
cmp
sub
je
xor
bound
clc
jo
add
out
je
into
sti
sub
in
push
or
pop
pop
add
add
pop
add
cmc
pop
add
add
pop
add
cmc
pop
add
cmc
pop
add
lds
add
pop
add
mov
add
mov
add
lds
add
pop
add
mov
add
mov
dec
imul
push
mov
in
sub
pop
push
js
add
add
shll
lods
adc
jne
add
inc
pop
add
inc
pop
add
xor
pop
add
inc
pop
add
inc
pop
add
xor
jb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
add
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
fcoms
or
jmp
push
int
lea
pop
add
ljmp
repnz
jbe
sub
xor
add
call
xor
add
xor
cli
jmp
pusha
or
xor
pop
mull
or
out
cli
adc
push
push
clc
pushl
clc
jmp
arpl
sbb
lds
mov
dec
pop
fs
pop
out
jno
sub
insl
xchg
jo
xor
push
cld
imul
add
add
and
xor
popa
std
jb
aas
outsl
lret
xor
arpl
cmp
add
jb
inc
and
jae
sub
pop
sub
xor
outsl
je
sub
jo
cmp
jb
xor
xor
mov
sub
jb
sbb
imul
insb
mov
outsb
addr16
sub
jae
test
xor
and
test
push
data16
xor
filds
imul
jno
jno
fildl
jno
shlb
arpl
push
imul
sub
jns
add
je
and
outsb
jo
outsb
jns
add
jnp
sub
jge
daa
jae
pop
cmp
je
insb
inc
gs
add
je
pop
das
dec
es
inc
pusha
add
xchg
xor
xchg
dec
inc
hlt
das
dec
inc
add
adc
sub
and
lcall
in
out
cs
bnd
rcrl
ss
xorl
idivl
notl
mov
sub
stc
dec
sub
sub
pop
dec
xor
jb
inc
cmp
cmp
outsb
clc
sbb
das
jnp
out
inc
cli
add
dec
pop
or
in
or
aas
pop
or
inc
hlt
add
sbb
sbb
repnz
shll
or
mov
xor
icebp
int
lcall
and
icebp
inc
inc
pop
outsl
enter
mov
pminsw
cmp
jno
pop
pop
jo
or
incl
add
pop
ss
sub
sbb
add
dec
negl
inc
out
jae
cmp
fs
inc
in
incl
out
inc
cs
jno
xor
outsl
and
cmc
bound
psubb
and
bound
and
insb
add
clc
imul
sti
jbe
push
xor
sbb
hlt
jb
sub
bound
pop
sub
add
add
add
jno
subl
outsl
insl
pushf
cs
add
sub
xchg
xor
je
sub
add
sub
sub
insl
xor
push
jo
push
cmp
add
pop
jb
and
xor
xor
ja
sub
sub
imul
xor
mov
arpl
sub
jae
xor
jae
std
insb
add
xor
arpl
jle
jne
mov
or
hlt
cld
movsb
xor
popf
sub
hlt
shrb
pop
rolb
jo
fdivs
add
lret
sbb
sub
pop
mov
xor
add
popa
addl
push
jge
and
xor
push
and
bound
cmp
add
xor
dec
xor
cmp
dec
add
cmp
je
pop
xor
pop
out
pmuludq
and
pop
xlat
es
shll
sbb
aaa
pop
cld
int3
add
in
lds
add
out
ret
repz
rcrl
sub
stc
mov
sti
pop
jl
mov
stc
aaa
mov
idivl
mov
out
xchg
dec
daa
add
out
push
and
inc
das
pop
in
xor
pop
dec
sub
sbb
mov
out
or
sbb
pop
cmp
out
sbb
out
clc
ss
pop
adc
scas
daa
add
idiv
addr16
lret
insl
ret
xor
dec
cli
pop
lret
jo
cmp
insb
lds
cmc
imul
cld
insb
mov
cli
jno
add
std
insl
mov
std
call
pop
jo
add
jo
stc
pop
jbe
inc
out
pop
push
pop
insb
inc
imull
sub
cli
xor
jmp
icebp
sub
jno
adc
push
sbb
idiv
adc
sub
arpl
push
je
sbb
gs
pop
imul
outsb
gs
das
xor
push
ss
add
arpl
outsb
add
outsb
imul
sub
cmpsb
sub
jb
pop
pop
jne
sub
inc
and
jne
xchg
cmp
imul
outsb
cmc
cmp
pop
xor
imul
add
jo
cmc
and
popa
xor
imul
sbb
sub
and
add
dec
dec
sub
jb
pop
cs
pop
ja
popa
sub
cmp
dec
inc
icebp
xor
cwtl
sub
subl
imul
fwait
sub
add
leave
xor
xor
iret
shrl
lds
bound
jno
outsb
mov
xor
mov
mov
add
ss
mov
daa
popa
xchg
add
add
arpl
and
sahf
and
pop
adc
xor
aam
das
and
xor
sarl
xor
int
and
leave
add
add
out
add
sub
pop
fdivs
dec
sarl
dec
pop
lret
mov
out
icebp
leave
leave
and
pop
mov
mov
int
das
mov
mov
mov
ret
int
sub
les
sbb
pop
and
sbb
dec
daa
outsl
rclb
les
sbb
add
pop
cmp
shlb
leave
add
and
je
add
popa
adc
enter
jbe
and
add
inc
insl
fbld
pop
popa
rorl
rcrl
shll
leave
fs
add
fs
push
leave
ja
cmc
outsb
mov
addr16
jno
std
into
add
sub
je
mov
das
sbb
mov
sbb
mov
dec
inc
mov
insb
popa
cmc
subb
jle
xor
pop
gs
sub
add
xorb
insb
xor
subb
andl
add
add
sbbl
jnp
add
imul
add
jge
outsl
arpl
jae
subl
sbbl
jnp
insb
xor
jle
push
subl
xor
jnp
jb
jp
bound
das
xor
jns
popa
sbb
sub
mov
andb
xchg
pop
jb
inc
and
xchg
xor
cmp
das
lock
cmp
sbb
push
cmp
cmp
je
push
add
aaa
and
repz
icebp
incl
and
pop
out
adc
jb
es
lds
and
addr16
pop
outsb
sbb
and
ficompl
add
loop
jo
loop
arpl
pop
dec
and
add
mov
cmp
insl
iret
dec
sub
inc
and
cmp
les
sub
mov
push
sub
mov
add
add
mov
sti
push
mov
add
into
loop
adc
into
xor
int
add
shll
xchg
repnz
enter
lds
sti
mov
fwait
in
lds
add
test
and
ret
mov
mov
add
ret
je
dec
xchg
sub
dec
inc
enter
mov
dec
cli
mov
insl
cmp
ret
pop
mov
addr16
lds
sbb
sbb
mov
shll
mov
insl
cld
js
inc
scas
fcmove
data16
arpl
add
je
jne
sub
lret
imul
mov
sub
fcmovu
mov
arpl
pop
iret
je
movsl
push
sub
cmpsl
jle
popa
xchg
xchg
jo
xchg
xorl
imul
insl
repnz
xor
pop
xchg
lds
inc
inc
or
inc
xor
push
mov
add
add
mov
aas
push
cld
scas
push
inc
dec
dec
push
push
cmp
sub
jne
add
jne
add
pushf
push
add
add
jne
dec
inc
mov
movsb
dec
imul
adc
cmp
add
jb
ficomps
je
out
jno
aad
pop
jno
sbb
scas
and
pop
outsb
test
add
jge
and
nop
sbb
inc
inc
addr16
xchg
and
mov
imul
dec
add
add
sbb
add
cli
data16
sbb
and
push
and
stc
gs
addr16
cmove
and
add
sbb
push
arpl
sub
insb
das
push
fbld
sbb
dec
arpl
pop
test
enter
ffree
test
rol
push
mov
mov
mov
sbb
jns
jge
jp
arpl
pop
xor
js
out
jg
dec
xor
mov
loope
mov
xor
les
aaa
cmp
or
sbb
add
dec
into
or
pop
shl
sbb
push
and
lea
add
mov
in
mov
push
call
mov
mov
add
ret
add
dec
andb
aas
xchg
and
popa
mov
mov
outsb
xor
pop
xchg
push
aad
lcall
popa
xorb
dec
cmpsb
arpl
jb
adc
arpl
fs
pop
shll
int
sbb
repnz
arpl
pusha
int
stc
jmp
arpl
repnz
arpl
add
ja
loopne
ja
dec
sahf
js
cmp
je
cmp
add
mov
xchg
jle
jne
jbe
jne
mov
jl
xchg
je
test
js
gs
mov
jns
data16
fwait
jo
imul
jae
jo
sub
insl
and
jno
je
fwait
imul
add
add
fs
sub
inc
adc
inc
outsb
adc
insl
and
outsl
sbb
outsl
mov
gs
dec
je
xor
outsb
add
cmp
push
iret
push
das
aas
sbb
sbb
push
scas
ljmp
shl
sbb
mov
in
aaa
jno
out
sbb
jb
jne
sbb
daa
jno
inc
and
mov
xor
push
inc
jb
xchg
cmp
xchg
xor
pop
and
cmp
test
jb
jno
arpl
jne
jno
push
pop
push
or
arpl
inc
inc
arpl
pop
fisttpl
int3
inc
dec
fistpl
ret
call
stos
mov
into
mov
inc
mov
mov
add
add
mov
mov
lret
mov
mov
andb
stos
pop
sbb
push
daa
gs
pop
sbb
mov
and
cmp
pop
mov
aaa
sbb
dec
mov
out
sub
mov
out
in
movb
dec
mov
je
ss
add
add
mov
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
pop
add
test
add
pop
add
jne
add
je
insb
push
dec
sub
add
xchg
popa
je
outsb
insb
fs
mov
mov
add
dec
dec
inc
inc
xchg
dec
inc
xor
insl
dec
inc
add
rorl
loop
inc
cmc
scas
dec
inc
add
pop
dec
inc
cmc
add
add
add
imul
lds
add
pop
add
lds
pop
jne
push
pop
outsb
sub
lcall
inc
add
or
cmp
jnp
sbbl
and
cmp
xor
and
add
and
fiadds
pushl
inc
sbbl
mov
push
add
add
add
inc
andl
jne
sub
add
addl
bound
aas
pop
arpl
xor
cmp
add
pop
pop
push
sbb
or
inc
inc
or
dec
out
cmp
add
rol
push
sti
mov
xor
mov
add
pop
out
cmp
add
mov
pop
inc
add
mov
sbb
pop
out
pushf
jnp
add
mov
mov
test
loop
jl
mov
sbb
rol
jno
jnp
sbb
out
pushf
mov
add
dec
pop
jnp
inc
xor
cmp
inc
in
mov
add
pop
pop
sub
pop
add
or
jno
push
stos
insb
jmp
dec
stos
jb
add
xchg
or
jno
cmp
mov
pop
stos
xor
jb
xor
int3
addr16
and
mov
mov
pop
mov
insl
test
mov
js
sub
arpl
pop
push
mov
out
xchg
add
pop
pop
add
add
jno
push
pop
je
scas
jb
add
data16
bound
push
and
gs
arpl
and
gs
addr16
outsb
and
outsl
andl
dec
jno
addr16
pop
dec
gs
popa
popa
jno
push
outsl
outsb
push
jbe
pop
push
popa
inc
movsb
jle
jne
lods
jb
andl
imul
jae
arpl
movsl
mov
add
dec
gs
pop
jb
xchg
and
subl
dec
xchg
push
jb
nop
sbb
pop
add
inc
jno
imul
cmp
pop
pop
outsb
in
inc
sbb
cmc
push
pop
gs
xor
push
jmp
push
and
and
push
sub
es
adc
and
idivl
mov
dec
loope
add
sub
or
aam
arpl
adc
cmp
sbb
jb
sbb
jne
loope
aaa
pop
pop
jmp
jno
pop
and
cld
aaa
aas
mov
pop
loope
into
in
pop
mov
sbb
cmp
push
xor
push
loope
add
int3
dec
or
or
sbb
lret
lock
adc
mov
int3
int3
and
push
icebp
inc
mov
mov
inc
ret
pop
ret
mov
adcb
mov
and
mov
jge
addr16
jle
mov
xor
call
mov
dec
or
bound
test
sub
sahf
inc
or
js
repnz
mov
sbb
mov
push
or
pop
pushf
insl
pop
dec
mov
arpl
sbb
push
lret
addr16
or
and
stos
sub
jecxz
mov
mov
and
cld
mov
sub
mov
pop
test
inc
mov
outsl
arpl
adc
mov
add
sub
mov
xor
inc
inc
outsl
push
insl
popa
arpl
popa
imul
pusha
insb
adc
gs
cs
cmp
imul
insb
popa
bound
pusha
outsl
push
mov
dec
jnp
gs
dec
push
jl
and
stos
pusha
outsb
bound
and
es
push
pop
cs
inc
sub
inc
sbb
sub
sub
dec
imul
add
icebp
aaa
push
pop
fisubrs
xor
cmp
add
push
stc
popa
push
stc
push
aam
fs
aam
push
push
aam
push
pop
aam
inc
pop
shll
inc
pop
shll
hlt
outsb
add
stc
insl
push
pop
adc
arpl
pop
adc
outsb
cli
inc
add
and
arpl
pusha
sub
in
cmp
roll
dec
into
adc
arpl
sbb
sub
pushf
mov
jns
jge
push
xchg
mov
jo
out
cmpl
pop
ja
inc
sbb
mov
pop
push
xchg
dec
pop
xor
out
inc
mov
or
pop
mov
add
inc
in
mov
sub
sti
mov
aas
loop
pop
inc
in
cli
pop
in
pop
mov
and
mov
stos
ss
int3
daa
fdivs
add
adc
pop
scas
jmp
dec
mov
movl
xchg
inc
int
movsl
push
mov
pop
jg
mov
addb
dec
push
mov
ja
cmpsw
push
and
mov
xor
add
cltd
pop
cmp
xchg
pop
pop
pushl
pop
pop
cmp
insl
push
sarb
ja
out
push
and
mov
jb
pop
xchg
insl
fidivl
xchg
pop
add
add
jns
add
outsb
gs
je
jo
je
imul
pop
inc
outsb
jbe
pop
insb
add
xchg
je
sub
gs
fs
add
mov
jb
jb
stc
xchg
push
jb
test
popa
mov
aad
imul
outsb
and
push
mov
ja
imul
sbb
pop
adc
outsl
push
adc
jb
lock
jo
add
je
sub
push
jno
enter
lods
in
addr16
aad
pop
imul
pop
mov
cs
sub
inc
fldt
addr16
xor
jle
add
xor
pop
outsl
inc
inc
push
test
imul
dec
pop
jp
jno
adcl
data16
jb
test
sti
push
and
inc
push
loope
inc
jae
dec
inc
push
int3
adc
pop
add
pop
xor
scas
das
mov
scas
int
mov
mov
cs
cltd
mov
js
xchg
pop
jg
mov
xor
int3
nop
cmpb
jno,pn
dec
and
cmp
pop
and
xor
sub
xchg
adc
movl
cmp
cmp
scas
das
mov
add
sti
xor
inc
std
xor
aas
mov
xor
or
int3
insl
movl
pop
mov
dec
mov
mov
leave
add
cmp
arpl
cmp
inc
lea
je
bound
add
add
pop
dec
inc
sti
mov
insl
push
in
mov
insl
dec
add
pop
cmp
sahf
inc
adc
dec
pushf
aas
cmp
sahf
inc
adc
mov
and
mov
sbb
jae
jo
popa
jno
dec
inc
mov
insb
push
jns
add
insb
outsl
addr16
push
xchg
jno
pop
cwtl
push
push
add
jnp
insb
add
lcall
jns
inc
push
xchg
cmp
mov
outsl
bound
mov
inc
adc
arpl
or
popa
add
pushf
jno
pop
xchg
push
push
mov
outsl
insl
jae
pop
je
mov
sbb
adc
push
inc
inc
or
push
das
xor
insl
cli
inc
adc
into
push
cmp
push
add
cld
and
packsswb
cmc
sub
scas
sbb
int3
iret
aam
fs
je
into
sub
mov
and
and
adc
ljmp
jo
loope
cmp
xchg
adc
xchg
sub
add
dec
stos
adc
dec
and
xor
imul
cmp
sbb
push
ret
add
out
fisubrl
sysenter
rolb
push
les
aaa
fidivl
shll
rcrl
push
ret
int3
sub
lods
enter
aad
xchg
mov
jb
lcall
insl
jg
js
xchg
and
test
add
dec
sub
inc
and
dec
push
aas
lahf
sub
add
inc
mov
sub
sbb
pop
sbb
mov
pop
leave
loop
addr16
movl
or
pop
and
push
lret
or
arpl
pop
stos
pop
ficoml
pop
push
or
add
cld
jp
shlb
push
mov
mov
fwait
decl
push
test
mov
jnp
mov
add
add
pop
push
mov
mov
jnp
lea
sub
inc
xor
pop
pop
adc
add
jbe
out
dec
outsl
out
add
dec
push
jbe
push
push
jns
pop
add
je
push
pop
jb
and
dec
sbb
add
jle
je
jo
jb
pop
jb
orb
inc
mov
push
gs
popa
jb
adc
pop
dec
popa
mov
and
dec
jbe
cmpsl
cmp
add
je
xchg
jbe
dec
and
imul
adc
lcall
cmp
dec
fs
pop
sub
push
add
ja
and
push
and
inc
pop
je
dec
sub
sub
inc
add
aaa
and
insl
mov
sub
add
sub
je
push
jo
inc
xor
sub
pop
mov
xor
insb
add
insb
mov
or
dec
mov
insl
andb
push
dec
into
inc
pop
inc
mov
dec
adc
pop
and
pop
sub
push
xor
enter
mov
sub
sub
add
or
in
lods
push
daa
cli
jp
xor
jp
sub
mov
or
ret
and
mov
mov
loopne
fsubl
enter
jecxz
es
das
int3
xchg
cmpsb
adc
pop
mov
and
mov
jnp
push
rol
jno
add
cwtl
jb
or
add
add
mov
insl
dec
rcrb
push
std
enter
stos
je
inc
leave
jno
dec
sbb
jb
inc
popf
push
das
sub
add
cmp
leave
inc
add
add
add
jb
ror
jno
add
insb
movsl
add
imul
xchg
push
les
je
inc
mov
scas
inc
lods
insl
fwait
add
scas
arpl
pop
mov
imul
popa
popa
pop
pop
pop
fs
dec
bound
jnp
je
dec
jno
data16
fs
add
jb
push
jne
push
test
dec
push
push
jne
jns
inc
cmp
imul
jo
imul
popa
pop
xchg
popa
cmpl
add
jns
add
push
fs
gs
push
imul
pop
aas
jb
push
popa
outsb
test
andl
sbb
jne
mov
pop
dec
in
pop
js
cmp
aam
dec
dec
cwtl
sub
xchg
add
cmp
xchg
and
push
jno
jb
mov
and
andl
cmove
arpl
adc
pop
adc
add
xor
je
insb
and
test
imul
xor
das
add
movd
and
jno
hlt
push
fs
and
ljmp
jb
and
arpl
and
pop
sahf
and
mov
xchg
adc
xchg
sbb
aas
xchg
mov
and
dec
les
dec
mov
inc
sbb
xor
adc
mov
push
fistps
sbb
cmpsl
out
add
or
sbb
push
push
rcrb
cmp
repz
pop
mov
adc
mov
out
fimull
add
xor
xchg
xor
mov
and
or
push
leave
fs
jge
test
pop
or
insl
pop
sbb
pop
sbb
lcall
xor
aas
xor
scas
insl
pop
sub
push
inc
scas
jne
or
and
stos
insb
push
xor
insl
pop
sub
arpl
pop
mov
adc
push
enter
add
fs
add
dec
popa
add
jb
lods
jl
push
stos
dec
je
mov
ja
push
xchg
dec
push
push
pushf
dec
popa
cs
jnp
add
jb
bound
gs
push
cs
jle
inc
fmull
pop
inc
jl
data16
outsl
imul
push
imul
dec
outsl
and
popa
add
pop
push
adc
inc
jns
jns
push
pusha
ja
jb
pop
inc
pop
sbb
and
or
and
push
mov
inc
pop
insb
inc
sub
jno
int3
sbb
push
dec
adc
jae
fdivl
addr16
xlat
fidivs
mov
inc
xchg
sbb
inc
ss
xchg
and
lahf
add
std
je
jne
jbe
add
loop
adc
repz
sbb
iret
pusha
sub
push
arpl
test
ja
xor
xor
pop
xor
mov
pop
int3
adc
test
shlb
mov
and
mov
out
jns
mov
arpl
test
sbb
mov
pop
xchg
and
out
cmp
add
add
dec
xor
push
and
xor
cmp
lock
das
adc
shlb
sti
test
add
mov
sbb
cmc
stos
out
repz
stc
daa
jp
mov
jp
lret
arpl
push
add
pop
lods
pop
stos
pop
mov
inc
pop
inc
shrl
outsb
lods
sub
mov
add
add
test
mov
or
pop
push
mov
stos
jne
sub
nop
jno
adc
addr16
cmc
mov
add
cmp
arpl
dec
mov
jb
sub
insb
or
stos
addr16
xchg
add
pop
outsl
dec
dec
je
xor
xorb
pop
dec
add
dec
push
jae
dec
dec
popa
lock
leave
dec
push
popa
dec
jae
jbe
pop
lret
inc
jo
movsb
dec
outsl
ja
dec
add
dec
popa
arpl
jb
mov
dec
inc
test
imul
ss
outsl
pop
push
jae
inc
jbe
inc
icebp
push
outsb
xor
loop
outsb
je
push
dec
outsl
sub
popa
pop
jbe
inc
add
xor
lock
and
addr16
out
push
es
bound
arpl
lock
sbb
insb
scas
sbb
inc
enter
test
sbb
sbb
add
jae
pop
add
sbb
sbb
adc
js
pcmpeqb
lods
adc
inc
push
outsl
frstor
je
jecxz
arpl
sbb
mov
in
sub
sldt
inc
jno
pop
push
lahf
sub
sbb
pushf
ucomiss
mov
cmp
test
sub
mov
sbb
mov
es
addr16
mov
ret
mov
cmpsb
rcrb
mov
rclb
pop
mov
orb
and
mov
sub
mov
sbb
out
add
lea
dec
jnp
sbb
cmpsl
jbe
cs
pop
aas
mov
out
xor
dec
or
pop
cmp
mov
and
adc
mov
xor
jl
arpl
xor
dec
daa
in
test
mov
add
add
add
mov
add
sbb
jno
push
test
jno
adc
mov
xor
push
test
je
pop
mov
inc
add
push
xor
bound
push
inc
push
and
je
insb
test
adc
jb
orl
dec
outsb
gs
add
inc
jne
xor
dec
je
push
inc
imul
gs
push
cs
jnp
inc
movl
jae
insl
imul
push
jb
pop
push
jae
push
dec
popa
test
add
inc
je
pushf
push
popa
arpl
inc
jb
lds
jb
pop
dec
outsl
sbb
adc
test
je
push
add
add
add
xchg
push
and
sahf
and
push
sbb
dec
sbb
loopne
sbb
jg
insl
mov
pop
pop
outsb
scas
xor
scas
or
jb
cmp
arpl
sub
cmp
aaa
dec
push
add
add
adc
and
jb
loop
insb
jns
add
dec
sbb
sub
je
movsb
lret
sub
or
je
pop
push
adc
cmp
out
or
cmp
sbb
dec
sbb
js
and
pop
push
xor
lret
lods
add
shrl
cmp
mov
mov
sti
jecxz
mov
push
mov
insl
out
ret
lods
fninit
bound
shl
pop
mov
mov
outsb
mov
add
add
mov
insl
mov
pop
jo
xchg
aas
mov
xchg
and
mov
add
mov
pop
mov
popa
dec
ficomps
cmp
jb
xor
popa
dec
ficomps
push
jmp
xor
sub
lcall
add
or
mov
xor
add
sub
dec
jno
add
push
inc
scas
in
je
clc
pop
jno
lods
int
inc
mul
outsb
jnp
cs
inc
mov
push
insb
mov
stos
arpl
inc
adcb
dec
imul
or
das
xor
or
mov
sub
adc
xor
jbe
inc
jge
pop
gs
sbb
jo
dec
jbe
xchg
inc
outsb
imul
inc
outsb
imul
jne
pop
jp
cs
jo
mov
push
pop
fmuls
jno
pop
pop
push
fldl
outsl
cmpsb
dec
data16
jns
insl
sbb
adc
add
arpl
rolb
dec
outsl
shll
xor
mov
outsb
add
das
push
ficoms
and
stc
nop
adc
or
add
jbe
inc
enter
loop
sbb
imul
das
or
jp
je
and
pop
mov
pop
adc
sbb
aaa
das
dec
cmc
inc
jae
or
outsb
mov
and
pop
add
and
push
pusha
pop
mov
adc
fwait
add
insb
xchg
fcom
push
mov
add
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
sbb
out
add
aad
lock
adc
mov
adc
mov
or
mov
mov
adc
mov
push
dec
test
adc
enter
add
add
mov
push
sub
mov
insb
nop
adc
insb
pushf
sub
arpl
stos
outsl
lea
scas
arpl
sbb
insl
dec
and
inc
xchg
stos
outsl
cmp
dec
mov
outsl
inc
subl
jb
dec
mov
popa
std
dec
stos
arpl
add
insb
adc
xor
sub
arpl
sub
xor
pop
stos
outsl
add
ss
idivb
pusha
outsl
fldenv
push
lcall
jb
xor
mov
xor
insl
stos
cmp
stos
cmp
add
mov
add
mov
add
test
add
push
add
jne
add
add
sub
bound
imul
outsl
outsl
and
imul
sub
or
bound
adc
pop
pop
je
or
xor
outsl
sbb
call
jo
in
mov
out
jo
in
imul
ljmp
jmp
sub
dec
fucomi
insl
xor
cmc
xor
test
jae
sbb
in
cmp
clc
ja
xor
xor
xor
add
xor
xor
inc
call
pushf
out
jo
popa
loope
stc
pop
and
push
divb
aas
in
icebp
inc
in
mov
in
bound
adc
insl
mov
push
call
hlt
nop
mov
out
cltd
mov
lock
int
repz
shl
jle
mov
lock
mov
out
jb
lods
ljmp
out
dec
mov
mov
push
mov
ljmp
or
cli
cmpsb
push
cmp
jmp
cmpsl
aaa
ds
jb
jmp
cmpsb
aaa
cmc
and
cmpsb
pop
xor
adc
mov
mov
out
jo
jecxz
pop
sbb
rorb
arpl
add
jg
sbb
push
int3
xchg
insl
mov
pop
cltd
insb
into
clc
mov
xchg
aad
insl
lret
inc
fwait
int3
cmpsl
jno
leave
test
movsb
int3
mov
add
ret
mov
xchg
iret
stos
insl
xchg
and
jp
jne
mov
popa
push
bound
sub
jae
pop
adc
add
jmp
dec
xorl
cmp
sub
inc
outsb
sbb
sub
push
std
dec
jmp
ss
out
jno
out
fs
mov
adc
data16
sub
cmpsl
pop
aas
dec
xchg
push
inc
pop
scas
sub
pop
xor
je
cmp
xor
sub
xor
cmp
xor
insl
inc
inc
sub
dec
roll
outsl
outsl
out
bound
xor
addr16
outsl
gs
sub
ss
insl
sbb
add
fisubl
inc
rcrl
push
rorb
xor
push
jecxz
sbb
les
adc
fs
add
cmc
jo
push
cmc
pop
pop
lock
xor
insl
push
shlb
push
in
insb
add
out
ljmp
ljmp
shr
bound
call
data16
xchg
jmp
pusha
and
loope
push
in
push
aam
out
pusha
rep
out
xchg
out
filds
dec
aad
and
fcompl
xor
sbb
adc
pop
add
dec
pushf
xor
sbb
repz
add
or
mov
add
mov
rol
pop
out
sbb
divl
inc
pop
lcall
mov
cltd
in
dec
scas
mull
jge
ds
movsb
sti
cmp
mov
or
and
loopne
cmpsb
repnz
out
sbb
add
jge
fs
or
jmp
push
pop
jmp
add
pop
xor
jmp
out
sub
sbb
jmp
cmp
jmp
ss
xor
sub
jmp
sub
jmp
loop
popa
fwait
mov
jg
or
outsb
mov
test
mov
insl
add
jns
arpl
jge
inc
test
add
add
push
dec
imul
sub
push
push
dec
imul
sub
push
jnp
pop
std
das
jo
inc
add
bound
cmp
loopne
pop
push
loopne
push
jb
push
dec
imul
sub
and
cmp
mov
and
outsl
jns
add
je
add
jb
cmp
loopne
sub
cmp
xchg
jno
mov
outsl
jbe
and
and
sbb
negb
int3
fs
out
jne
in
in
pop
cmc
xchg
add
lds
push
mov
adc
fs
ret
xor
scas
pop
lock
add
bound
rcrb
add
in
insl
cmp
jecxz
jge
dec
add
in
cld
and
jno
jecxz
pop
in
pop
loopne,pt
incl
add
add
add
dec
pop
cmc
int3
push
pop
mov
rolb
pop
sub
repnz
xor
fisubrl
pop
mov
fsubrs
add
mov
rorl
jmp
mov
pop
jecxz
call
ret
fiadds
sbb
enter
aad
ja
int3
add
dec
out
outsl
mov
xor
jmp
mov
adc
mov
mov
pop
sbbl
pop
cmpl
test
jl
sbb
xchg
insb
push
mov
push
inc
jle
jne
push
pop
sub
insl
dec
inc
test
dec
aas
add
pop
adc
dec
sbb
xor
add
sub
inc
cli
xchg
mov
into
clc
orl
lea
mov
lret
jmp
cli
test
lds
pop
mov
mov
mov
pop
mov
add
or
arpl
cli
sub
dec
das
std
jb
or
and
imul
push
imul
sub
fdivr
imul
bound
cld
sub
negb
add
pop
je
or
outsb
add
pop
outsl
add
add
icebp
cmp
std
push
jb
sub
pusha
push
xchg
add
mov
cs
nop
aad
inc
add
enter
cmc
jmp
inc
xor
pop
sub
lds
xchg
rcrl
xchg
out
insb
push
cmpsb
add
std
mov
add
add
std
push
lock
out
sahf
bnd
mov
bnd
push
in
enter
rorl
mov
jmp
jns
inc
lock
jo
fbstp
sub
popl
add
mov
mull
xor
cmp
icebp
imul
dec
pop
pop
es
inc
jmp
loopne
xchg
xlat
cmp
jl
dec
test
iret
jmp
stos
out
test
or
push
cld
out
pop
sbb
inc
popf
xor
imul
jmp
and
or
cld
mov
in
adcl
fistpll
jmp
mov
test
sub
pop
mov
call
mov
stos
ljmp
adc
pop
push
jmp
pop
dec
movsl
xor
dec
add
push
push
sub
rcpps
fldln2
cwtl
xor
mov
das
xlat
in
mov
popf
mov
dec
pop
inc
mov
pop
das
pop
mov
outsb
mov
inc
add
inc
js
push
test
sbb
outsb
scas
sub
sbb
jne
fsub
js
jmp
add
cmp
jmp
mov
jno
xor
pop
push
add
es
andl
jae
dec
dec
stos
pop
std
jb
add
jae
adc
add
daa
ds
shrb
xchg
ljmp
inc
inc
das
sbb
push
out
data16
or
push
sub
push
push
add
inc
pop
aaa
clc
pop
outsl
dec
and
push
dec
cs
stc
and
testb
jbe
or
dec
and
jno
adc
push
and
add
fs
xor
insb
outsb
push
add
shl
bound
dec
add
jo
sarb
data16
jecxz
pop
fcomi
bound
out
loope
and
mov
jno
icebp
out
or
out
and
add
ret
cltd
ret
push
cmpsb
xchg
jnp
cmp
sub
ljmp
rcrl
pop
xor
sbb
xor
adc
pop
jmp
testl
add
pop
add
insb
orb
pop
mov
iret
addr16
in
cltd
mov
idivl
mov
dec
jl
call
dec
xchg
fmuls
add
divb
pop
mov
call
xchg
mov
in
std
ja
out
jle
add
ja
in
pop
pop
cmc
decb
fcmovnb
pop
sti
hlt
mov
mov
jg
das
pop
leave
add
dec
leave
add
orl
add
jle
adc
fidivl
push
mov
jl
fcmovb
jle
mov
lret
lahf
pop
mov
fidivrl
mov
mov
jle
jge
mov
jp
add
add
insb
cmp
pop
xorl
inc
test
and
dec
mov
add
pop
push
ds
xor
cmp
lcall
sub
je
pop
cli
cld
inc
sub
sbb
imul
cli
sbb
fadds
jae
pop
inc
push
mov
fs
or
aam
outsw
cmpl
add
sub
fs
pop
jno
and
jo
mov
sbb
movsb
pop
jo
mov
sub
jmp
xor
fsubrl
imul
das
outsl
je
push
push
push
and
imul
insb
outsb
gs
pop
je
sti
imul
ret
push
int3
and
jno
pusha
fldt
adc
shll
push
subl
add
add
repnz
frstor
shl
jno
out
mov
insb
cmp
int3
inc
push
sarb
push
inc
out
imull
mov
jae
mov
ret
mov
shlb
scas
out
loopne
icebp
jae
stos
fildll
jo
ja
push
data16
enterw
lret
add
jns
clc
add
xchg
fidivrs
xchg
call
pop
lahf
add
cmp
mov
cmpl
outsl
mov
fdivl
stos
fisttpl
aam
arpl
repnz
test
enter
mov
cmp
mov
xor
xchg
out
movsl
nop
fucom
xorl
cmpsb
xchg
add
jge
clc
call
pushf
inc
loope
lock
les
sub
mov
ret
dec
insb
cmpsl
addr16
data16
inc
push
mov
inc
jg
sbb
lods
addr16
cli
mov
and
jno
iret
jle
fstpl
xchg
insl
int
jns
jmp
pop
mov
mov
cmp
enter
mov
loope
push
jmp
add
jg
jmp
pop
xchg
xor
push
sub
xchg
xor
xchg
cmp
cmp
add
sub
push
inc
cmp
adc
xor
inc
iret
imul
push
push
pop
cmc
pop
add
dec
push
sub
jo
adc
bound
jae
inc
xor
or
bound
sti
imul
std
push
in
jno
add
pop
add
mov
add
lret
pop
cmp
lds
dec
jne
pop
push
xchg
or
lcall
dec
mov
pop
push
xchg
or
lcall
dec
inc
daa
pop
push
aam
jo
sbb
mulb
add
dec
mov
mov
mulb
add
pop
fldcw
jno
jo
gs
shll
pop
fnstenv
add
add
pop
and
jge
fdivr
dec
and
repz
int
insb
cmp
les
and
fistps
popa
jecxz
imul
data16
lock
aam
pop
jmp
arpl
test
pop
shl
fldt
icebp
fldenv
pop
pop
in
jne
mov
int3
jnp
lock
testl
and
sbb
mov
jne
mov
mov
dec
cmpsl
sbb
adc
js
out
pop
out
dec
lea
in
ja
ficoml
rcr
cmp
fiaddl
mov
sub
jle
and
lcall
js
add
jnp
fildl
push
jnp
lcall
addr16
inc
or
jne
jb
imul
dec
dec
test
add
jnp
xor
mov
inc
js
jmp
cmc
je
add
or
decb
pop
and
jp
add
orb
jne
movsb
lret
fs
mov
fstpt
in
insb
mov
aam
push
mov
stos
insl
cltd
outsl
jbe
xchg
pop
stos
insl
add
clc
push
test
outsl
jae
and
jne
push
cmc
das
bound
sub
xor
and
cs
cmc
sbb
push
xor
das
pop
jae
or
pop
pop
arpl
and
stc
bound
sbb
arpl
and
leave
bound
jecxz
pop
inc
in
dec
popa
in
xor
pop
test
std
jo
lds
insb
mov
pop
jb
and
sbb
les
fbld
inc
std
test
add
fcomp
jae
shl
shl
mov
bound
jecxz
std
dec
iret
jo
mov
hlt
insb
enter
scas
pushf
fldt
push
shlb
loope
add
fs
mov
inc
jne
add
psrlq
fbld
pmullw
mov
jno
push
pop
fs
mov
insb
push
mov
pop
pop
push
fnsave
dec
out
dec
cld
pop
mov
icebp
fwait
xchg
cmpsb
rorl
loopne
xchg
mov
adcl
repnz
add
xchg
xor
add
scas
pop
loope
cmp
mov
scas
pop
and
jne
ffree
cmp
loopne
mov
lods
pop
sub
rorb
adc
add
sbb
insl
lea
jmp
mov
push
cmp
icebp
rcll
pushf
repnz
mov
js
int3
pop
lcall
shrl
arpl
add
xchg
push
mov
push
mov
stos
push
movsl
pop
stos
dec
cltd
cmp
inc
mov
xor
mov
and
pop
push
push
push
cmp
and
aas
jno
jmp
shll
sbb
js
jmp
inc
stos
jno
out
add
xor
enter
pop
lods
dec
mov
add
mov
add
insb
jb
pop
add
sub
and
outsl
jae
outsl
fs
inc
dec
mov
sbb
ja
or
test
dec
push
test
push
popa
or
cli
cs
sub
sub
gs
adc
imull
loope
add
sub
in
outsl
jae
outsl
negl
push
sub
xor
add
das
outsl
fs
aas
push
popa
or
and
dec
sbb
int3
dec
cld
shl
dec
inc
repnz
push
cmp
loopne
out
mov
dec
cmp
loope
paddsw
jno
icebp
add
fsubr
je
jg
pop
fbstp
mov
lret
insl
enter
shrl
jb
lret
dec
mov
aas
sarb
push
icebp
jb
outsb
aad
fs
out
nop
pop
fsubs
add
push
mov
jge
call
jno
pop
inc
mov
out
cmpsl
sahf
fmuls
repnz
cmpsl
scas
rcrb
test
cmp
mov
das
cmp
or
jae
icebp
js
jae
add
mov
lock
iret
cmpsb
ss
sarl
int3
cmp
lods
jge
fmul
jge
xlat
ret
ror
adc
and
js
xlat
push
add
js
sbb
jge
add
outsl
js
add
xchg
jb
cmc
jns
int3
repnz
dec
sarb
js
or
lea
outsl
imul
add
jo
mov
stos
arpl
push
push
xchg
jne
imul
mov
data16
cmpsl
addr16
outsl
jne
add
jb
inc
jo
aaa
cmp
push
inc
jo
inc
inc
mov
sbb
mov
add
lods
jae
icebp
mov
sti
je
add
or
adc
je
loope
insb
imul
imul
pop
jb
rorl
daa
insb
jae
repz
insb
or
or
adc
sub
adc
xchg
repnz
jb
sub
xchg
or
sarl
jmp
stc
push
in
hlt
gs
and
add
fs
and
outsb
fsubs
pusha
outsl
add
lock
sbb
jae
sbb
and
jge
shll
in
sbb
aad
js
out
push
dec
pop
out
jae
push
loop
cmp
and
jo
shr
cmp
add
pxor
jmp
and
sub
adc
xor
es
mov
sub
and
mov
add
or
mov
and
mov
jp
data16
jb
out
mov
pop
inc
mov
jle
or
lea
sbb
fs
out
push
fwait
out
push
fwait
out
outsb
fwait
out
push
fwait
out
data16
out
push
fwait
out
push
fwait
out
inc
fwait
out
inc
fwait
out
lcall
add
fwait
out
stc
lcall
add
out
add
out
les
out
mov
lcall
scas
lcall
addb
jmp
push
addb
jg
jmp
cld
aam
jmp
mov
jecxz
jmp
cmpsb
fistpll
jmp
add
loope
jmp
outsl
loopne
jmp
rcr
jmp
leave
fidivrs
jmp
dec
mov
jmp
xorl
inc
jmp
mov
mov
aas
jmp
inc
inc
mov
inc
xor
add
inc
add
inc
roll
ret
inc
add
or
inc
cmc
aad
inc
cmc
jle
inc
lds
movl
add
inc
mov
int3
inc
lds
inc
lds
roll
push
fiaddl
lret
inc
test
flds
int3
fadds
popf
flds
and
inc
jne
fiadds
and
loop
inc
or
inc
xor
hlt
es
repz
out
fdiv
pop
out
repz
in
repz
repnz
repnz
cmc
pop
repnz
sbb
add
sbb
add
sbb
add
sbb
add
sbb
mov
jae
mov
scas
push
pop
fidivs
dec
push
loopne
sub
mov
out
add
and
je
out
dec
jmp
add
add
mov
jle
loope
mov
jns
add
push
in
daa
push
loopne
divb
out
or
and
ss
and
icebp
or
jne
or
cmp
orb
and
dec
and
cmp
loop
xchg
and
dec
pop
in
xor
jbe
out
push
pop
and
dec
pop
add
cmp
and
xor
pop
add
jae
out
inc
fldcw
clc
outsb
addl
pop
out
sbb
out
sbb
out
sbb
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
jne
add
jne
add
inc
pop
add
inc
pop
add
xor
pop
add
inc
pop
add
inc
pop
add
xor
pop
add
add
add
pop
add
cmc
pop
add
add
pop
add
cmc
pop
add
cmc
pop
add
lds
add
pop
add
mov
add
mov
add
lds
add
pop
add
mov
add
mov
add
test
add
pop
add
jne
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
out
add
out
sbb
out
sbb
call
lods
push
or
ss
sarl
dec
pusha
lods
push
or
and
jg
add
pop
pop
add
pop
filds
and
add
clc
out
pushf
pop
out
pop
pop
out
cmp
out
sub
out
and
out
sbb
add
pop
out
jecxz
out
sbb
out
shl
out
sbb
out
ret
mul
or
sbb
out
mov
out
sbb
out
sbb
addr16
pop
add
and
stc
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
das
inc
and
dec
pop
add
dec
pusha
jmp
push
inc
and
sub
inc
and
adc
fisttps
imul
int3
or
add
adc
std
or
repnz
add
add
arpl
call
adc
dec
adc
rclb
fmul
fs
out
sbb
pop
ljmp
addr16
add
dec
push
and
sbb
xchg
and
outsb
dec
es
sub
push
cmp
jne
std
add
add
inc
pop
std
incl
std
add
std
add
idiv
incl
add
inc
pop
std
incl
xor
idiv
add
idiv
add
idiv
add
pop
std
add
pop
add
add
cld
push
cmc
cld
add
cmc
cld
add
cmc
std
pushl
pop
std
add
pop
std
add
std
lcall
add
mov
add
add
add
add
std
jnp
cld
jae
add
sbb
arpl
std
sbb
add
sbb
add
sbb
std
sbb
add
sbb
add
ljmp
incl
lcall
add
sbb
std
adc
add
sbb
pop
add
sbb
cld
lcall
std
jmp
cld
sbb
add
fildl
add
sbb
std
lcall
add
sbb
hlt
loop
mov
out
stos
pop
jecxz
mov
fwait
pop
out
xchg
pop
out
sbb
jecxz
xor
jp
out
sbb
jmp
imul
or
out
sbb
out
sbb
movl
sbb
pop
add
fildl
test
push
add
fildl
test
out
sub
out
sbb
out
sbb
out
or
movl
or
out
or
movl
add
call
pop
pop
sub
pop
add
cwtl
dec
add
pop
dec
orb
dec
add
and
jmp
lahf
dec
add
cwtl
pop
add
lahf
dec
sub
dec
or
pop
add
pop
pop
add
lahf
dec
add
pop
dec
sub
dec
add
lahf
pop
sub
dec
sub
dec
sub
pop
add
pop
dec
sub
pop
orb
pop
add
add
dec
add
pop
pop
add
lahf
pop
add
pop
pop
or
pop
add
add
adc
aad
add
and
push
add
mov
sldt
fdivrp
jg
xlat
pushl
add
fimuls
xorb
add
add
inc
pop
add
inc
pop
add
cmp
xor
pop
add
sub
pop
add
cmp
pop
add
or
pop
add
std
push
add
in
pop
add
add
cld
add
sbb
add
and
add
sbb
add
adc
add
sbb
add
sbb
add
and
add
adc
add
sbb
add
and
add
sbb
add
sbb
add
adc
add
add
add
and
add
sbb
add
adc
add
and
add
and
add
sbb
add
sbb
add
sbb
add
and
add
adc
add
sbb
add
sbb
add
sbb
add
adc
add
adc
add
and
out
sbb
out
sbb
filds
push
arpl
add
push
pop
out
sbb
filds
sbb
out
add
add
pop
out
push
pop
filds
sbb
out
push
arpl
add
sbb
out
push
arpl
add
sbb
out
add
arpl
add
pushf
pop
push
and
add
pop
and
add
pop
call
and
out
sbb
out
pushf
pop
out
pushf
pop
add
and
jmp
add
out
out
pop
add
lcall
jmp
push
pop
out
pop
add
pop
add
out
pop
add
pop
add
call
cmp
jmp
sbb
imul
call
clc
and
jmp
pop
pop
add
add
push
test
add
add
pop
add
add
addb
cmp
add
add
add
inc
cmp
add
add
les
add
cmp
add
pop
addb
cmp
add
pop
addb
cmp
add
cmp
add
cmp
add
inc
push
add
inc
push
or
xor
push
add
pop
or
inc
pop
add
xor
add
or
add
or
or
add
push
add
or
add
add
pop
add
or
add
pop
add
add
add
or
or
add
add
pop
add
or
add
pop
add
add
add
or
fiadds
add
faddl
add
sbb
add
fiadds
add
push
add
add
add
add
add
or
add
sbb
add
fiadds
add
sbb
add
push
add
add
pop
out
adc
out
sbb
out
and
out
sbb
out
sbb
out
adc
out
and
out
and
out
sbb
out
sbb
out
and
out
and
out
add
out
sbb
out
and
out
and
out
sbb
out
adc
out
sbb
out
and
out
sbb
out
sbb
out
and
out
sbb
out
adc
out
adc
out
sbb
testl
fdivrl
out
inc
in
fcomps
and
pop
fwait
and
pop
pop
add
pop
sub
jmp
fucomip
sbb
fildll
add
add
fwait
add
pop
pop
and
pop
fwait
add
fucomip
sbb
pop
pop
and
fucomip
cld
jmp
pop
fwait
add
fucomip
sbb
fucomip
cld
jmp
fucomip
sbb
pop
pop
add
pop
fwait
and
pop
fwait
and
pop
pop
add
pop
sub
jmp
pop
jmp
jmp
pop
sub
jmp
pop
jmp
add
add
gs
inc
and
inc
pop
cmp
and
pop
std
call
pop
inc
add
push
std
pop
cmc
pop
add
aad
std
call
pop
add
in
cmp
add
pop
inc
and
push
cmp
and
pop
inc
and
pop
add
mov
std
pushl
push
cmp
jmp
inc
add
std
pop
test
add
test
cmp
and
inc
add
sar
hlt
add
sbb
add
sbb
clc
lcall
hlt
add
sbb
clc
ljmp
idiv
lcall
idiv
pop
sbb
clc
pop
sbb
clc
pop
and
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
and
clc
call
repz
lcall
idiv
pop
sbb
add
sbb
clc
lcall
testb
add
hlt
add
sbb
clc
pop
and
add
sbb
add
and
clc
incl
cmc
clc
pop
sbb
clc
pop
sbb
jmp
add
out
xor
add
out
and
add
pop
jmp
sti
sub
add
pop
jmp
add
jmp
add
out
sti
pop
out
cmp
out
or
sti
add
call
out
xor
sti
lret
call
jmp
add
pop
out
or
add
jmp
sti
xor
add
jmp
add
add
ja
cld
jmp
pop
add
addr16
cld
jmp
cmp
test
dec
call
add
pop
pop
adc
sub
or
add
pop
add
pop
pop
adc
and
jmp
lock
adc
out
pop
add
out
pop
adc
call
out
sub
pop
add
pop
pop
adc
sbb
jmp
test
cld
jmp
pop
pop
add
pop
adc
jne
add
test
add
pop
add
mov
add
jne
cld
jne
inc
pop
add
jne
add
xor
jmp
adc
cld
pushl
add
cmc
pop
add
add
out
add
cmc
ljmp
inc
pop
add
add
pop
add
cmc
pop
add
lds
add
pop
add
cmc
out
add
add
pop
add
mov
add
mov
cld
pextrw
nop
add
add
lock
lock
lock
lock
lock
add
hlt
add
sub
lock
incb
add
sbb
add
sbb
jnp
sub
cmp
aam
lcall
hlt
add
sbb
add
sbb
jnp
add
jle
sti
addr16
repz
sbb
add
sbb
jnp
cmp
mov
dec
repz
add
add
sbb
jp
mov
cmp
outsl
test
mov
pop
out
sbb
push
jge
in
addb
out
sbb
out
sbb
repz
in
sbbb
adcb
add
out
sbb
insl
jl
in
xorb
lret
in
add
out
sbb
in
adc
lcall
in
add
sbb
out
sbb
icebp
jp
in
and
pop
out
sbb
out
sbb
out
sbb
out
sbb
mov
popf
in
out
in
std
pushf
in
or
in
adc
in
xchg
pushf
in
int
in
mov
pushf
in
jnp
in
inc
pushf
in
dec
pushf
in
sbb
add
add
cld
in
jecxz
jmp
jecxz
adc
cld
and
movsb
jecxz
imul
push
movsb
jecxz
pop
movsb
jecxz
mov
xchg
jecxz
add
sar
mov
sar
ljmp
sar
mov
sar
pushl
sar
incl
fwait
sar
cmp
sar
std
sar
cmp
cld
decl
cld
decl
cld
pushl
cld
jge
cld
decl
aad
incl
aam
lcall
aam
call
aam
ljmp
pop
add
aad
cld
lcall
add
sbb
mov
mov
xor
incl
mov
cld
mov
xchg
insb
mov
mov
incl
xor
pushl
mov
imul
add
mov
pop
hlt
add
sbb
mov
dec
ljmp
sbb
mov
xor
mov
and
mov
sbb
mov
or
add
sbb
mov
sti
jns
push
rorl
jmp
mov
incl
fistpl
mov
loope
mov
loope
mov
loope
mov
loope
add
fwait
loope
add
dec
xchg
loope
test
fiaddl
loope
test
lock
mov
push
loope
test
mov
loope
test
loope
test
loope
test
loope
test
loope
test
adc
enter
fiaddl
loopne
xchg
loopne
mov
loopne
repnz
loopne
and
cld
sbb
cld
pop
mov
loopne
cmp
fwait
loopne
xchg
mov
loopne
popa
mov
loopne
cmc
mov
loopne
add
loopne
xchg
mov
loopne
outsl
add
loopne
and
loopne
add
loopne
shll
sbb
xor
frndint
push
pop
add
inc
frndint
lcall
fdivr
incl
fdivr
call
pop
add
pushl
fdivr
cmp
fdivr
incl
iret
fdivr
lcall
cld
lcall
cld
in
xlat
cld
dec
xlat
cld
lcall
fdivr
incl
pop
add
cmp
cld
incl
add
das
sar
decl
cld
incl
iret
cld
cmp
cld
lcall
mov
sti
cwtl
mov
xrelease
jecxz
add
sbb
mov
rcl
mov
lret
mov
incl
mov
les
jmp
fimull
decl
loop
jnp
mov
jae
add
sbb
add
push
movsb
jae
mov
imul
cmpsl
pop
mov
repz
sbb
lods
insb
scas
enter
lods
bound
call
push
mov
jle
hlt
add
xchg
ret
jmp
jbe
pop
outsl
inc
mov
cmp
out
xchg
pop
es
jns
mov
insl
sti
lods
cmp
out
mov
sub
or
pop
mov
cld
jnp
ret
mov
add
mov
push
ret
flds
enter
mov
add
ja
test
scas
data16
add
fwait
add
pop
sar
xlat
insb
pop
push
mov
outsb
push
mov
insl
inc
lret
jns
push
int
jb
mov
aas
ljmp
mov
adc
lcall
xchg
xor
insb
jo
jb
aas
jmp
mov
addr16
pop
jne
int3
pop
or
mov
jno
mov
add
inc
rorb
insl
mov
jge
nop
pop
fdivr
mov
test
sbb
xchg
mov
jae
pop
test
cmp
insb
push
fs
fs
add
movsl
popa
popa
sub
pop
je
movsl
jne
mov
gs
mov
inc
imul
adc
jb
xchg
mov
imul
outsl
add
push
push
imul
push
outsl
mov
push
je
push
sub
jp
jo
xchg
movsb
jo
cmpsl
movsl
imul
add
pop
pop
mov
scas
shlb
push
sbb
mov
jge
mov
addr16
mov
cs
stos
pop
insb
xor
add
push
je
insb
aas
daa
mov
add
mov
inc
pop
push
dec
sub
stos
dec
fldenv
and
jmp
jo
push
bound
add
add
lods
jno
scas
mov
jmp
add
pusha
rcll
ds
popa
add
inc
lea
flds
mov
fiaddl
lahf
pop
inc
xchg
add
pop
jo
push
test
and
jg
inc
ret
jmp
pop
add
xor
ds
cmp
or
add
adc
dec
or
cmp
add
pop
es
ucomiss
mov
inc
cld
lret
add
shrb
inc
mov
mov
sbb
jmp
stos
dec
push
fwait
add
pop
xchg
lcall
test
jb
jne
aas
jmp
mov
inc
je
dec
arpl
sbb
pop
fwait
cmp
push
aas
jmp
orl
dec
pop
cmp
jle
insb
or
cmp
outsb
daa
jg
arpl
cld
xor
push
arpl
outsl
dec
addr16
mov
inc
data16
lret
cltd
add
push
arpl
pusha
dec
jb
cmpsl
stc
push
addl
cld
lcall
pop
insb
jae
push
imul
pop
dec
jne
or
pushf
pop
bound
gs
pop
mov
inc
cli
jo
pop
cld
addr16
sub
imul
add
add
adc
cli
jo
sub
jno
and
data16
add
mov
cld
call
insb
push
xchg
or
and
inc
js
pop
dec
jb
mov
add
icebp
cmpsl
test
ret
sar
pusha
mov
out
data16
jno
fstpl
xor
pushf
imul
scas
bound
lahf
push
jo
lahf
pop
cmpl
add
arpl
add
sbb
lahf
jae
test
inc
dec
insl
cmpsl
push
xor
pop
inc
les
push
sbb
movsl
inc
addr16
jge
data16
ret
add
andl
mov
sbb
cmpsb
fmull
movsb
iret
aas
mov
int3
dec
enter
out
dec
pop
mov
mov
inc
mov
add
test
add
inc
pop
sahf
cmp
mov
dec
sbb
cmp
cmp
outsb
inc
inc
lds
inc
leave
ds
and
add
add
push
shrl
inc
sbb
ds
ret
xor
push
pop
inc
insl
cli
mov
test
mov
mov
les
pop
sub
xchg
inc
jae
push
cmp
xchg
xchg
mov
dec
test
add
pop
sub
in
cmp
inc
jae
ret
jmp
lods
sub
lods
sub
mov
movsl
sbb
inc
inc
xor
dec
arpl
insb
sub
outsb
aam
scas
push
sub
arpl
add
movsl
pop
insb
add
pop
inc
mov
pop
insl
pop
cltd
cld
call
popa
inc
add
xor
sti
push
add
adc
jno
test
push
inc
mov
jne
int3
std
jo
xchg
popa
je
or
dec
mov
insb
inc
pop
ja
cmp
jo
inc
stc
popa
je
or
push
jb
popa
sahf
cld
decl
imulb
adc
jno
sbb
push
push
sub
jae
mov
call
rcl
inc
hlt
iret
mov
push
call
fwait
mov
sbb
add
jae
add
ljmp
mov
in
add
sbb
cmc
mov
lret
roll
test
mov
arpl
add
add
sahf
bound
mov
sub
cmpsl
jae
xchg
mov
sbb
inc
sbb
mov
mov
inc
or
add
pop
or
add
adc
or
shrb
test
inc
out
and
test
dec
out
fstps
test
dec
cmpsb
mov
mov
add
rol
add
sub
cltd
mov
dec
out
xchg
dec
xchg
cmpsb
test
addl
pop
fwait
mov
jle
aaa
mov
cmp
jle
out
jnp
sbb
inc
inc
dec
test
dec
add
jb
xchg
insb
or
dec
jno
jb
outsb
pop
mov
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
lds
mov
add
mov
add
lds
lds
add
pop
add
test
test
jne
add
jne
add
test
test
jne
add
jne
add
inc
pop
add
inc
pop
add
xor
pop
add
inc
pop
add
inc
pop
add
xor
jecxz
push
cmpsl
adc
dec
call
in
push
push
sub
leave
js
outsb
xor
push
mov
loop
cld
cmpsl
push
and
dec
pop
cmpb
inc
add
lds
pop
mov
sub
jmp
mov
inc
and
inc
loopne
sbb
add
loop
in
adc
add
loop
clc
cmpsl
and
add
loop
call
int
add
loop
lock
adc
add
and
dec
cld
fistpl
hlt
add
add
adc
cltd
decb
in
dec
hlt
daa
and
jae
loop
lock
pop
add
in
fdivl
pop
push
mov
dec
call
lahf
xchg
or
jmp
pop
mov
in
jecxz
in
cmpsl
sub
mov
into
mov
pop
inc
or
mov
fidivrl
add
movsl
and
jmp
mov
mov
xor
int3
push
lahf
lret
int3
pop
lahf
lret
int3
leave
loope
orl
call
mov
mov
sub
sub
int
sbb
mov
push
cmpsl
pop
call
jbe
pop
mov
push
inc
add
pop
inc
add
pop
xchg
xchg
inc
cld
sbb
add
add
mov
fld
add
into
pop
jae
loop
cld
xchg
pop
orl
call
jbe
pop
mov
jecxz
lea
inc
aas
add
stos
mov
rcrl
int3
loopne
lret
int3
fcomps
jmp
push
loopne
xor
and
pop
fistps
lret
int3
fcomps
add
add
jmp
popa
pop
push
mov
dec
call
jne
sbb
ror
lahf
lret
int3
pusha
lahf
lret
int3
pop
lahf
lret
int3
jmp
arpl
push
pop
push
decl
shll
sbb
inc
clc
vpmulld
inc
clc
in
ret
cmp
add
loop
cld
xchg
push
adc
es
cmpsl
adc
cld
mov
cs
loopne
push
add
adc
add
adc
lcall
rorb
mov
pop
push
cld
sub
add
pop
mov
out
jae
aam
add
sbb
add
insb
xchg
mov
ror
sahf
lret
int3
pusha
sahf
lret
int3
pop
sahf
lret
int3
leave
fucomip
mov
mov
pop
jne
sbb
ror
sahf
lret
int3
add
lret
int3
pop
sahf
lret
int3
leave
fucomip
orl
mov
fidivs
sbb
test
imul
or
mov
push
call
fwait
pop
mov
les
pop
add
sbb
push
mov
add
aam
cld
xchg
xor
cmp
jo
cmpsl
and
mov
lret
xor
cli
adc
stc
add
mov
lock
add
add
adc
popf
mov
xchg
inc
or
push
clc
cmpsl
pop
lsl
push
dec
adc
push
or
insb
mov
aam
or
hlt
mov
inc
or
sbb
out
repz
cld
mov
sub
int3
dec
jmp
enter
and
inc
in
pop
in
imul
call
incl
sbb
dec
lock
inc
lock
add
mov
pop
push
lock
das
loopne
fnstcw
or
add
pop
push
cmpsl
pop
loopne
icebp
push
add
sub
aas
add
mov
pop
mov
mov
pop
jns
cld
aam
or
adc
mov
call
mov
add
sub
inc
hlt
cmpsl
push
loopne
jno
add
xchg
cs
popa
ret
lcall
mov
fdivl
sbb
or
cmp
add
lcall
mov
fdivrl
add
cmp
cmpl
sbb
jmp
enter
sub
mov
enter
push
xchg
mov
mov
mov
add
push
add
sbb
cli
push
fcmovnb
or
mov
push
clc
rorl
mov
add
rolb
xchg
adc
xchg
mov
mov
add
rclb
test
call
xchg
lret
int3
jmp
push
push
call
pop
jne
sbb
inc
clc
movb
sbb
inc
clc
add
mov
std
inc
movl
push
xchg
sub
or
xor
mov
sub
int3
fcoms
jmp
push
dec
aas
add
pop
push
inc
sbb
dec
add
sub
int3
fcoms
jmp
enter
sub
mov
mov
ds
sbb
mov
sarl
cmpsl
adc
outsb
aam
hlt
add
push
xchg
rclb
xchg
xor
mov
mov
dec
clc
add
pop
xor
aaa
xchg
sbb
das
or
rolb
xchg
sbb
mov
rolb
xchg
sbb
mov
pop
arpl
mov
mov
addl
pop
jmp
in
lcall
add
xchg
lret
int3
loopne
lret
int3
fcoms
jmp
loope
cmp
dec
add
add
sub
ror
xchg
lret
int3
pop
xchg
lret
int3
leave
shr
orl
inc
push
pop
nop
add
inc
or
mov
dec
cmp
das
loopne
fnstcw
mov
inc
or
inc
call
sbb
or
add
add
push
cld
jmp
fadd
or
xor
xor
push
push
les
movsl
push
in
push
mov
mov
sub
orl
pop
add
sbb
push
mov
into
add
rolb
cmpsl
push
loopne
mov
push
cmp
into
jo
xchg
push
call
je
iret
dec
call
add
xchg
adc
xchg
dec
cld
xchg
imull
mov
push
lods
inc
and
mov
iret
dec
or
adc
xchg
sub
add
sub
adc
loopne
mov
xlat
mov
jmp
iret
push
in
mov
cld
add
les
xor
fcompl
cmp
sbb
push
add
lcall
ret
or
jne
sbb
jae
cmpsl
push
sub
fstpl
call
cmpsb
cmpb
dec
sbb
pop
xor
xor
mov
mov
inc
xor
ret
mov
mov
push
xor
xor
mov
sub
lock
lahf
adcb
pop
add
xor
add
add
add
cmpsl
sbb
push
negb
push
mov
adc
pop
mov
aam
fcoms
mov
inc
loopne
adc
mov
sub
fnstenv
jne
sbb
call
sbbl
push
cld
fnstsw
add
aad
fcomps
rcrl
dec
clc
aad
loopne
data16
sbb
inc
xor
jg
jne
sbb
or
sbb
push
cmpsl
addr16
pop
pop
push
mov
dec
call
lahf
xchg
or
xor
add
sub
mov
sub
sbb
cmp
sbb
add
outsb
lahf
adc
sbb
push
cmpsl
dec
push
ja
pop
dec
mov
outsl
jne
sbb
call
andl
adc
sbb
push
add
cli
call
ffree
add
idivl
push
mov
xorl
sub
adc
sar
fcoms
inc
lock
adc
sbb
push
xchg
push
loopne
adc
inc
sbb
dec
sub
adc
sbb
push
mov
sti
lcall
outsl
jne
sbb
shlb
pop
repz
loope
dec
push
xor
mov
and
sbb
std
push
push
shlb
add
add
sbb
lret
int3
pop
lret
int3
leave
shr
mov
mov
push
ror
mov
int3
imul
mov
xchg
pop
sub
pop
mov
jae
pop
pop
fisttps
jmp
inc
xchg
inc
sbb
aaa
ja
pop
push
call
lahf
xchg
pop
mov
mov
push
xchg
gs
ja
fstpl
dec
mov
lret
int3
leave
shr
orl
inc
push
pop
add
sbb
inc
fadd
pop
add
arpl
add
loope
lcall
lds
pop
add
sbb
dec
or
pop
call
mov
inc
mov
or
and
add
sbb
or
sbb
add
add
cmp
sbb
add
push
lds
sbb
add
lahf
xorb
pop
add
xor
decl
pop
jne
sbb
sub
pop
mov
movsl
adc
mov
outsl
jne
sbb
inc
call
fnstenv
or
sbb
push
adc
ja
pop
mov
and
jne
sbb
add
sbb
push
add
adc
outsb
mov
clc
lret
mov
inc
ja
pop
std
adc
jg
jne
sbb
inc
ja
pop
push
call
lahf
xchg
add
insb
sub
aad
mov
mov
mov
lret
sbb
das
ja
pop
push
call
lahf
xchg
or
cmp
push
cld
add
daa
lock
rolb
insb
rorb
insl
mov
sti
add
cmp
pop
mov
dec
cli
inc
ja
pop
add
sub
add
push
cld
push
in
pushl
es
add
add
rclb
cmpsl
push
cld
add
sahf
xchg
rorb
inc
dec
cmp
fstpl
dec
jl
popf
fld
incl
sbb
jmp
sbbl
push
inc
rolb
notl
or
mov
add
rol
mov
pop
es
mov
pop
push
clc
mov
dec
clc
popf
cltd
out
sbb
mov
pop
es
xor
cli
das
ja
pop
add
roll
jmp
shrl
and
sbb
mov
jp
inc
sbb
mov
bound
sbb
mov
xor
inc
sbb
or
or
int
add
imul
rolb
and
lahf
xchg
add
sbb
je
jge
jne
sbb
inc
and
mov
std
sbb
aas
add
xor
xchg
rcrb
pop
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
mov
movl
movl
push
push
call
movl
mov
mov
movl
movl
mov
mov
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
call
test
jne
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
