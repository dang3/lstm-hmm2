push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
jmp
push
push
push
push
call
mov
push
push
push
push
mov
push
call
push
push
push
mov
push
call
push
push
mov
push
call
push
push
push
mov
push
call
push
push
mov
push
call
mov
push
call
mov
xor
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
mov
cltd
and
add
sar
mov
mov
imul
cltd
and
add
sar
mov
mov
cltd
and
add
sar
mov
mov
imul
cltd
and
add
sar
mov
lea
push
mov
push
mov
push
call
lea
push
mov
push
call
xor
jmp
mov
push
call
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
push
lea
push
call
movl
movl
movl
movl
movl
movl
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
lea
push
call
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
lea
push
call
call
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
push
push
call
push
push
call
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
add
add
fs
lods
outsb
arpl
gs
lods
jb
add
push
jns
xchg
add
push
jns
push
add
andl
arpl
outsb
pop
insl
gs
mov
outsl
gs
xor
imul
jno
jb
arpl
add
add
data16
add
imul
inc
imul
outsl
jns
mov
data16
fldenv
insb
fisttpl
outsb
mov
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
insb
arpl
gs
dec
jo
add
popa
fs
bound
jo
inc
add
inc
add
adc
outsb
xor
call
add
add
jno
arpl
cs
jae
jne
add
jo
arpl
jne
fs
add
arpl
jp
add
bound
insl
outsl
arpl
push
je
bound
insl
outsl
arpl
imul
push
imul
push
insl
add
jb
dec
bound
insb
je
pop
jne
add
gs
jo
insl
insb
outsl
sbb
gs
and
xor
gs
insb
mov
fs
in
push
gs
outsb
dec
fbstp
add
movsl
pop
nop
mov
in
add
mov
xor
add
sub
add
call
add
mov
call
add
mov
call
add
mov
call
mov
push
add
imull
sub
push
outsb
sub
and
or
sbb
insl
outsb
fisubs
fs
or
mov
mov
add
mov
dec
jmp
add
add
add
das
jmp
dec
mov
add
in
add
adc
add
add
jmp
add
mov
add
add
add
jae
add
add
mov
add
add
scas
add
adc
add
adc
add
fnstcw
add
jmp
out
add
push
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
mov
add
jmp
mov
add
sub
mov
add
jmp
xchg
add
add
add
addr16
add
add
mov
js
add
add
call
add
push
repnz
daa
jmp
add
add
add
add
add
add
std
lcall
outsl
fs
jae
add
add
add
add
adc
add
std
call
sti
add
xlat
add
add
add
add
add
add
push
popa
je
std
aas
aaa
add
xchg
and
add
cmc
add
mov
call
add
mov
jmp
add
mov
call
mov
aad
inc
mov
std
div
jne
addb
mov
call
push
mov
inc
sub
jle
sti
jb
stos
testl
xor
lahf
push
or
stos
add
imul
add
add
sub
ret
cmc
pop
popl
jno
inc
mov
add
mov
imul
stc
jno,pt
negb
add
mov
jge
inc
jmp
idivl
add
add
mov
mov
mov
mov
negb
insb
shl
mov
push
rorb
in
add
clc
adc
scas
inc
jmp
testb
xchg
add
imul
add
push
or
mov
mov
jne
nop
outsl
or
or
xchg
push
or
jmp
into
stc
lcall
mov
mov
insb
push
ret
ret
mov
leave
stos
ret
bound
add
sub
stc
jb
hlt
cmp
hlt
jne
add
jns
cmpsb
rorl
rclb
ret
mov
adc
ljmp
in
jne
adc
test
jne
mov
cmp
arpl
mov
or
sub
or
sub
sahf
mov
in
subl
inc
add
cmpb
fs
xorl
rcrb
or
add
mov
pop
pop
ret
insb
arpl
lcall
push
fisttps
push
ljmp
adc
jle
aaa
in
rclb
rorl
jbe
mov
mov
mov
call
outsb
les
ljmp
mov
push
clc
imul
inc
add
add
inc
jg
push
mov
push
mov
push
and
call
inc
push
lock
xchg
in
ret
pop
add
in
push
callw
mov
mov
sbb
out
scas
add
push
test
lock
pop
mov
mov
or
repnz
pop
mov
repnz
add
jle
jmp
insb
test
jmp
push
xor
jmp
add
xchg
add
call
pop
mov
movsl
hlt
repnz
sub
mov
popf
sti
inc
mov
icebp
inc
add
add
js
jmp
add
pop
in
lods
in
sti
jge
clc
sbb
mov
decb
jge
add
jmp
cltd
lock
jne
std
pop
mov
loope
adc
aam
icebp
jne
insb
ja
adc
leave
sub
push
bound
add
std
add
fwait
ret
cmpl
incl
sub
ret
push
mov
jmp
jne
push
les
jmp
mov
push
add
call
decl
push
enter
outsb
in
andl
pushl
dec
add
xchg
icebp
push
call
in
out
cmp
decl
xchg
js
mov
icebp
bswap
in
pop
sub
into
or
inc
insl
in
andl
add
and
out
test
decl
push
js
pavgb
xchg
into
add
add
lods
ret
push
mov
xchg
mov
imul
call
inc
icebp
stc
bound
cmp
fistpll
sub
mov
jge
xor
fidivl
xchg
xor
fneni(8087
mov
idiv
mov
call
add
xchg
out
add
jmp
fistl
push
lock
jl
add
sub
jl
mov
adc
pushl
lock
insb
or
mov
mov
sub
mov
je
lods
mov
mov
loopne
mov
cmp
out
xchg
jge
ljmp
mov
cltd
inc
ja
cltd
jp
add
roll
adc
pop
jns
out
fsubr
jns
loope
jmp
inc
push
lret
cld
popa
push
loopne
lds
sti
jmp
es
inc
add
add
adc
push
xchg
add
je
cmc
sub
xchg
stc
cmp
ret
add
xchg
jp
inc
mov
out
jne
add
call
push
mov
mov
in
lea
in
push
jb
cmpl
push
adc
fisttpll
ja
push
idiv
out
popa
in
pushl
jg
call
lods
in
jne
jne
jmp
pop
cmpl
scas
std
call
fdivl
and
call
add
ret
lret
andl
je
fnsave
call
add
pop
push
pushl
fnsave
pushl
ret
push
mov
and
adc
lret
jne
fnsave
dec
call
lret
push
decl
fnsave
out
push
call
test
mov
add
call
aaa
dec
or
daa
inc
add
mov
mov
loop
sub
add
push
pop
inc
or
repz
cmpsl
in
decl
push
add
jae
notl
filds
mov
cli
leave
mov
inc
cld
cmp
fldlg2
jne
xorl
cld
jmp
cld
xchg
idiv
out
arpl
incl
adc
in
incl
out
leave
jl
add
cmp
inc
hlt
mov
add
and
and
imul
jl
sbb
in
sbb
jmp
jne
ficoml
jmp
adc
je
push
fs
jne
add
jl
cmc
mov
mov
mov
out
shr
inc
add
push
mov
fsts
ljmp
sbb
mov
inc
pop
add
add
js
out
mov
insl
jp
jmp
ljmp
ljmp
lret
inc
clc
push
jmp
insl
adc
sub
jmp
shr
jne
insl
push
add
ret
add
jmp
jp
hlt
add
call
ror
ljmp
in
shlb
push
shlb
pop
cld
mov
cli
out
xchg
jmp
add
mov
push
faddl
jmp
je
sarl
adc
jne
aas
jmp
push
sub
movsl
ret
push
mov
movsb
test
lea
push
jmp
add
test
pop
sub
xchg
in
out
push
mov
pushf
lret
or
mov
fnstenv
mov
sub
xlat
add
jne
mov
cmpsl
add
jne
int3
xor
cmp
leave
ret
push
mov
call
loop
push
jmp
out
lods
std
incl
fiaddl
add
popa
movsl
sti
out
inc
jmp
call
push
fmull
fiaddl
or
jg
mov
or
jne
adc
loop
fiaddl
outsb
ficoml
push
fiaddl
add
fdivr
imul
xor
flds
cmp
fxch
add
dec
add
mov
jne
mov
mov
fdivr
xor
add
inc
xchg
jo
cld
xchg
imul
in
jno
ret
sti
loope
push
inc
mov
cmp
call
mov
arpl
cmp
lret
insl
adc
mov
push
outsb
mov
or
sbb
lret
insl
add
add
insl
rcr
leave
add
add
insb
loope
xchg
jmp
out
ret
and
add
push
mov
xor
fisttpl
jmp
ret
xor
xchg
jp
cld
ret
add
fidivrl
mov
add
xchg
dec
cld
xlat
stc
mov
fadds
adc
stos
nop
cmp
add
and
leave
sub
out
jb
dec
push
bound
stc
mov
inc
pop
and
cld
hlt
call
jne
or
je
adc
add
fstp
add
aam
jne
jge
pop
mov
inc
aad
lods
mov
add
jmp
test
mov
and
sub
add
loop
addr16
sbb
jne
cmpsl
inc
addr16
sub
incl
add
fisttps
and
cmp
shrb
data16
test
sub
adc
jne
jl
pop
leave
and
leave
add
push
push
push
add
pop
dec
add
add
cld
mov
mov
jmp
add
mov
ja
sti
gs
mov
outsb
cmc
mov
mov
push
add
dec
cld
rorl
or
jl
xchg
shrl
pushl
into
sub
xor
cmp
lret
push
clc
ret
mov
jnp
xor
out
jge
inc
pop
xchg
mov
or
sub
xlat
loope
push
sub
insb
ds
outsb
mov
mov
cmovbe
jg
add
fstps
mov
jecxz
out
out
cmpsb
add
jns
hlt
jns
pop
fcmovnu
jecxz
in
cmp
dec
outsb
push
jecxz
repz
in
jecxz
out
shll
add
movsl
add
je
aad
jecxz
push
es
jmp
or
jl
add
jne
aam
jecxz
push
shl
add
loop
jecxz
stc
ror
loop
outsb
pop
scas
sub
add
cwtl
loop
bnd
jne
popf
insb
clc
xchg
pop
cli
out
js
dec
push
loop
sbbl
and
pop
jbe
ret
or
cmpsb
jbe
push
in
push
jb
push
or
out
jmp
call
add
dec
add
jmp
push
or
jl
cmpsl
add
mov
iret
andl
dec
cmp
cmp
cmc
push
lret
add
decl
pop
dec
outsl
lea
jb
hlt
imull
call
aad
jne
in
inc
enter
rclb
je
adc
hlt
add
cmpl
je
in
dec
clc
inc
daa
in
pop
std
add
in
clc
lret
push
xor
push
in
adc
cmp
call
sub
je
pusha
in
daa
std
enter
lods
adc
je
in
clc
cwtl
add
jne
in
hlt
xlat
add
mov
imul
sbb
mov
sbb
loopne
ret
or
pop
lret
ret
mov
mov
ljmp
xchg
ret
inc
lods
or
aas
push
adc
mov
loopne
xor
decb
lret
ret
sub
inc
cli
mov
ja
add
mov
imul
orl
repnz
ljmp
xchg
mov
cmp
mov
dec
notl
out
rol
in
push
add
mov
test
incl
fcmovb
add
sbb
mov
xor
movb
or
icebp
inc
xchg
inc
jmp
push
rol
paddw
test
dec
push
icebp
jmp
inc
mov
sub
mov
xor
and
fisttps
mov
fidivrs
jmp
add
notb
lds
jmp
cld
or
cmp
out
push
push
or
cmp
movb
sub
cmp
or
push
pop
sub
inc
sub
mov
push
mov
xchg
or
add
xor
xor
aam
xor
filds
or
add
pusha
push
or
pop
cs
ret
cld
or
mov
in
subl
add
add
lea
fs
sub
add
jne
ljmp
jge
pushl
addr16
ljmp
jns
mov
sti
jmp
inc
cld
xchg
add
add
mov
sub
or
jg
lock
inc
add
push
imul
popl
inc
addr16
decl
add
pop
add
movsb
sti
pushl
inc
cld
pusha
into
ret
ljmp
mov
ret
je
push
add
fwait
add
test
add
add
add
cmpb
jmp
sub
mov
xor
xor
das
cmpsl
add
push
jmp
lret
ret
mov
stos
pop
add
mov
add
mov
ljmp
mov
xchg
push
test
shll
jmp
mov
add
xchg
add
jmp
mov
pop
sub
mov
shll
jnp
xor
push
or
sbb
push
fstp
xor
xchg
push
movsb
fistpl
mov
frstor
mov
fnstenv
data16
imul
imul
push
icebp
jmp
mov
ljmp
in
jmp
mov
cmpl
add
scas
jmp
or
mov
mov
mov
xor
mov
add
pusha
orl
cmp
add
cli
xchg
push
ret
jmp
jne
incl
sbb
jle
fisubrl
test
out
rcrl
or
mov
in
push
bound
xchg
or
add
xor
call
call
ret
add
fdiv
out
in
add
ret
add
push
mov
adc
xorps
xlat
std
jae
fdiv
call
mov
mov
loop
daa
inc
xlat
std
jmp
add
repz
xor
das
popa
stc
ljmp
les
add
xchg
add
out
call
mov
out
clc
adc
sbb
cmp
and
mov
add
jmp
or
iret
sbbb
add
cmp
jmp
add
xlat
fcos
shr
push
test
push
xor
lea
jmp
test
xchg
fcos
add
hlt
test
in
call
jle
jle
mov
ret
push
jp
inc
mov
push
or
add
add
fcomps
in
jmp
loop
mov
and
add
push
call
inc
jmp
jecxz
test
adc
addl
fadd
shl
and
jmp
or
jmp
mov
out
fsubrs
jl
test
int3
mov
cmp
call
shrl
sub
lea
push
mov
fidivrl
std
test
xlat
call
cmp
inc
data16
push
inc
or
add
in
test
lcall
push
xlat
call
shl
call
push
xor
out
push
push
ljmp
add
test
cmp
jnp
jmp
aas
out
xchg
xor
je
out
mov
insb
hlt
scas
mov
repnz
jno
call
call
imul
decl
incl
lock
jne
aas
je
add
add
sub
push
hlt
lock
push
xorb
lock
call
lea
or
mov
add
lock
lcall
call
mov
fdivrp
decl
push
mov
mov
fdivr
jg
roll
xchg
or
je
mov
mov
mov
mov
test
call
ret
add
pop
push
push
outsb
out
dec
sub
cld
jg
add
imul
sub
out
and
test
in
aad
adc
jmp
or
ljmp
ret
inc
add
or
ljmp
ss
mov
in
leave
pop
aam
adcl
ljmp
in
test
ljmp
xchg
jmp
xchg
xchg
in
aad
scas
xchg
aad
xor
lret
jge
call
push
aam
mov
adc
xchg
inc
jmp
or
in
mov
cmp
inc
mov
cs
call
add
cmp
jmp
dec
int3
aam
pop
icebp
dec
icebp
imul
out
mov
mov
sub
add
out
jno
mov
add
or
scas
loopne
add
mov
adc
sahf
clc
call
jne
xchg
dec
cld
xchg
aas
sar
jle
cmp
or
stos
xchg
push
add
cmp
dec
adc
mov
aad
add
mov
sub
adc
repnz
or
inc
fcos
push
inc
jl
jmp
xor
dec
setbe
lea
xchg
ficoml
xor
fiaddl
add
mov
rcll
movb
imul
add
add
ljmp
push
push
incb
pusha
decb
ret
push
mov
jp
cld
lods
dec
or
pop
into
incl
into
cmc
call
scas
jne
test
cld
jmp
out
shrb
jne
scas
jne
mov
scas
jne
out
dec
cmc
call
call
add
cmpsb
sub
je
arpl
add
jb
mov
sbb
jge
jg
or
cmp
repz
cmp
fildl
nop
lds
xor
jl
add
push
dec
jle
ret
cld
addr16
jmp
sub
scas
cs
adc
mov
cmp
lret
xchg
add
lahf
cs
add
sbb
xchg
mov
fiaddl
add
inc
xor
ret
icebp
add
lds
cli
loope
sub
imul
add
add
mov
stc
or
cmp
and
or
mov
mov
add
add
out
ret
xor
ret
jl
cmp
push
mov
psraw
roll
bound
std
adc
pop
cmp
mov
les
cld
notb
ja
add
cmp
ret
inc
mov
leave
stos
aas
inc
push
add
mov
adc
pop
inc
jb
jg
jb
add
push
push
jns
les
jns
or
nop
push
seto
into
adc
cmp
add
in
mov
and
mov
nop
sbb
inc
add
mov
nop
mov
sbb
shrl
jecxz
sub
mov
mov
cmp
pop
sbb
push
mov
adc
jne
inc
dec
jge
inc
dec
dec
or
repz
lds
nop
xor
jmp
test
add
int
sarl
inc
xor
add
testl
nop
pop
rcrb
ret
push
mov
test
in
loope
call
lcall
mov
jnp
inc
pop
stos
mov
daa
add
rorb
jne
mov
push
mov
je
call
mov
pop
add
pop
cld
add
push
lea
mov
movsl
add
mov
mov
add
mov
mov
mov
fiaddl
cmovno
add
mov
dec
int
popa
jmp
dec
sbb
add
dec
mov
inc
inc
sub
or
lods
out
addr16
inc
add
pop
sar
and
call
adc
add
add
adc
clc
push
loope
cmp
bswap
jmp
int3
jnp
fdivp
int
push
jmp
pop
mov
add
ret
mov
mov
push
bound
jmp
pop
mov
xor
mov
int3
or
xchg
xchg
push
int3
adc
push
inc
add
clc
mov
loopne
int3
outsb
fdivl
jmp
dec
into
cmp
inc
mov
std
daa
xor
mov
xchg
js
addb
push
lret
ljmp
iret
int3
jne
repnz
or
add
mov
inc
or
push
std
sti
test
mov
jle
repz
cmp
push
add
mov
add
test
mov
add
fiadds
add
mov
lods
fnstcw
fs
incl
mov
or
stos
inc
add
pop
or
call
dec
nop
stc
dec
add
test
mov
inc
cmpsl
into
cmc
fdivrs
push
call
in
mov
cld
call
pop
inc
clc
sbbl
je
dec
inc
hlt
add
mov
cld
jg
mov
js
mov
hlt
jg
mov
je
push
pushl
lods
add
dec
mov
fsubrs
adc
call
call
mov
sar
jne
inc
add
mov
cmp
push
dec
sbb
pop
pop
push
cld
pushl
fcoms
movsl
sti
ljmp
add
add
mov
rcrb
mov
fldl
ds
jae
pop
or
sub
or
pop
lret
add
clc
cmpl
je
pop
inc
cmp
dec
push
ds
or
mov
add
rcr
roll
jmp
addl
cld
std
call
mov
add
pop
test
mov
stos
add
mov
pop
sub
jg
jmp
cs
cs
rolb
jmp
lret
outsb
enter
add
out
xchg
push
sub
add
ja
into
sbb
xor
add
rcrl
mov
leave
pop
aas
push
enter
dec
lea
stc
cli
and
add
jmp
icebp
roll
jmp
addl
fsts
add
mov
test
dec
add
jns
xchg
icebp
fsubs
sub
cs
testb
cmpsb
mov
jmp
cmp
or
jp
mov
leave
stos
mov
push
bound
les
mov
sub
stos
popa
sub
sbb
add
and
decl
imul
pop
add
or
xor
subl
rorb
fdivr
add
mov
mov
add
stos
and
out
or
dec
lret
add
mov
cld
xchg
mov
cld
test
add
adc
push
in
push
push
mov
inc
addb
add
jmp
fmuls
mov
cmc
sti
add
jg
jnp
sub
lret
cmp
cmpsb
add
jbe
add
mov
das
inc
in
aaa
or
mov
xchg
decl
movl
data16
xor
notl
flds
jnp
xor
mov
add
ret
add
cmpsl
mov
pop
push
mov
jp
cmp
ljmp
inc
add
inc
aas
stc
jl
xor
in
or
jno
ret
adc
adc
incb
mov
shrl
roll
jp
adc
push
adc
sub
xchg
mov
sub
mov
enter
enter
test
and
ret
hlt
js
adc
and
adc
mov
ret
mov
jmp
stos
inc
lret
cli
leave
cmp
out
sub
jnp
mov
jp
add
lahf
leave
xor
adc
fwait
in
shrb
adc
or
sti
insb
cmpsb
hlt
adc
and
mov
inc
scas
leave
and
scas
leave
lea
add
std
cld
mov
stc
fiaddl
and
mov
adc
cmp
sub
xor
add
leave
xor
sub
jle
mov
movsb
adc
add
sbb
xor
les
cmpxchg
mov
rol
add
mov
repnz
lret
mov
mov
les
lea
add
mov
sti
xor
dec
xchg
pop
add
std
in
xor
movsl
lret
dec
mov
sti
hlt
mov
jle
fld
rol
leave
push
lret
div
ffree
div
cmp
and
aad
ret
enter
cmpsl
mov
lea
and
inc
ret
add
in
push
out
in
pop
xchg
xchg
rcrl
pop
sbb
call
mov
xor
pop
nop
jg
mov
sar
push
lret
idiv
popf
lock
inc
pop
and
mov
adc
out
cmc
fists
jmp
ret
mov
mov
pop
xchg
leave
push
std
inc
mov
loopne
outsb
lea
xor
aas
test
fstpt
pminsw
xor
mov
out
lret
adc
adc
stos
add
mov
hlt
xor
div
pop
nop
inc
or
rcr
loop
dec
mov
les
lea
add
out
ret
add
stos
rol
mov
mov
lea
scas
mov
in
ret
orl
and
pop
and
pop
and
xor
xor
test
in
push
movsb
test
sub
add
bound
testl
es
mov
mov
ret
rorl
adc
mov
pop
scas
fiaddl
add
jmp
ret
movsb
int
cli
je
and
les
pushf
mov
push
pop
xor
adc
pop
mov
xor
cli
jmp
inc
cmp
rolb
mov
je
xor
repnz
pop
or
movsl
rol
push
rorb
popf
mov
mov
pushf
insl
and
sub
out
add
mov
add
lea
mov
lds
add
stc
xor
and
add
ret
stos
les
cmpsb
xor
fimuls
adc
jl
add
xor
ret
leave
dec
dec
mov
jg
adc
je
mov
lea
scas
xor
imul
stc
add
xor
cli
cmp
mov
sbb
sarb
mov
pop
hlt
push
gs
ljmp
mov
fldcw
mov
repz
sbb
ljmp
fisubl
int
cli
mov
mov
nop
add
in
ret
add
add
repnz
jge
pop
fwait
mov
mov
or
roll
mov
mov
add
add
push
repnz
aas
nop
and
add
xchg
or
sub
add
data16
or
int3
mov
and
or
push
sub
add
xor
clc
repnz
cli
insb
ss
movsb
aas
add
faddp
ret
sarl
cli
ss
cli
and
loopne
push
mov
or
mov
add
div
je
stc
fs
sbb
dec
dec
mov
ret
hlt
mov
mov
sti
add
lea
add
xchg
lds
add
jle
stc
fdivl
sti
push
pop
xchg
mov
popl
push
or
ret
sarb
les
cli
mov
lea
add
push
rorb
sub
jle
clc
pop
js
cli
ljmp
add
add
mov
je
or
je
lea
add
out
push
add
mov
dec
mov
xor
sub
out
std
mov
scas
add
sbb
call
xlat
mov
lea
mov
inc
mov
jmp
jnp
mov
scas
mov
pop
pop
mov
out
sarb
fnstenv
jae
ljmp
mov
lea
test
fwait
pop
inc
add
addr16
cmp
mov
xor
add
pop
mov
mov
dec
mov
lds
out
or
add
jo
sub
leave
xor
mov
loop
lea
sbb
jle
aam
xchg
call
or
push
fnstsw
xor
or
je
mov
pop
pop
adc
lret
stos
pop
mov
mov
cmpsb
inc
inc
add
add
aas
add
jg
jnp
add
jg
in
and
jmp
cld
incb
sbb
inc
and
xor
cld
decb
or
jmp
xor
or
add
mov
test
mov
mov
inc
roll
es
sub
xlat
mov
test
sub
or
test
push
inc
dec
and
jmp
pop
mov
xorl
add
cmpsl
jle
aaa
sub
or
daa
add
js
mov
pop
add
enter
jmp
out
addb
leave
arpl
add
test
add
shl
mov
enter
shlb
add
add
and
arpl
std
mov
sbb
mov
std
push
enter
leave
inc
andl
mov
mov
arpl
and
arpl
cmp
mov
dec
xchg
jg
mov
movsb
mov
jne
rolb
xchg
push
dec
mov
ret
dec
mov
sub
fnstenv
dec
ljmp
fcomps
add
xchg
into
arpl
test
adc
adc
mov
push
add
inc
aam
mov
jmp
cwtl
fs
test
adc
jge
incl
fcmovb
outsl
shll
int
inc
mov
adc
and
add
hlt
jo
jg
pop
icebp
xor
cmp
mov
xchg
lret
xchg
loope
pop
mov
scas
cmp
sti
loope
mov
ret
ljmp
add
add
jl
xor
icebp
mov
sbb
fisttps
mov
jnp
mov
mov
mov
mov
stos
mov
inc
add
mov
outsb
mov
mov
sub
mov
add
test
incb
inc
jp
shlb
xor
mov
lret
and
mov
add
ss
test
add
add
mov
adc
divb
jb
ret
mov
jp
out
mov
cmpsl
aaa
int3
xor
lock
test
add
inc
add
mov
call
mov
push
jae
mov
mov
shll
out
iret
add
andb
pushl
les
add
test
add
mov
push
mov
arpl
add
nop
hlt
ds
xchg
inc
mov
test
pop
call
push
jne
jne
insb
jne
mov
or
jne
aaa
ljmp
ds
mov
mov
test
call
xor
xor
imul
cmp
jg
mov
unpcklps
xorl
test
dec
scas
sbb
data16
pop
mov
jnp
add
ds
roll
or
movsb
test
aad
mov
mov
daa
mov
xor
ds
adc
xchg
cwtl
push
call
mov
or
pushf
add
jo
add
leave
stos
add
dec
push
scas
add
adc
jmp
mov
mov
inc
add
add
sbb
jno
hlt
sti
sbb
xchg
add
jl
xor
adc
into
add
mov
test
push
jne
sub
mov
mov
push
cmp
ret
mov
cmp
add
mov
mov
fidivrs
xchg
into
sub
cmp
addb
ss
mov
push
push
mov
lea
lcall
adc
jmp
sar
hlt
mov
imul
sub
test
push
nop
ret
xorl
ds
mov
cs
stc
out
or
push
std
add
add
cmpl
pushl
mov
shlb
mov
pushf
inc
ljmp
mov
add
das
inc
inc
jb
or
push
adc
mov
call
cmp
stc
test
lret
and
adc
pop
push
mov
cmpsb
mov
push
sub
ljmp
or
jno
or
scas
mov
andl
add
mov
cwtl
pushf
add
mov
mov
lahf
or
and
fbstp
pushf
daa
push
xor
or
lret
sbb
xchg
push
pusha
mov
dec
push
add
in
test
sub
cwtl
add
pop
test
adc
mov
sbb
clc
imul
mov
movb
jmp
cwtl
add
mov
lret
jle
movb
sbb
push
scas
pushf
sti
mov
fisttpll
sub
mov
repnz
les
xor
hlt
dec
lcall
sbb
bound
or
popa
ljmp
scas
jge
scas
je
dec
push
xchg
outsl
adc
sbb
sbb
jle
adc
outsl
scas
or
add
std
sub
jmp
add
call
add
cltd
pop
adc
lcall
lods
mov
sbb
mov
lods
jne
push
push
or
push
stos
add
mov
inc
add
cmpsb
lods
call
sbb
je
les
add
mov
int3
mov
cmp
adc
jmp
add
push
mov
mov
ret
inc
add
pop
pop
out
daa
sub
pop
jne
jg
scas
add
dec
or
push
inc
mov
aas
daa
sub
mov
clc
xor
xchg
adc
xchg
xor
adc
sub
and
add
pop
decl
xchg
stc
mov
jl
push
call
add
ret
inc
lcall
cmp
call
sbbl
add
lds
pop
add
call
je
jne
mov
lods
ljmp
fwait
or
ljmp
movsl
lahf
ret
je
das
push
hlt
inc
cmpsl
lods
jne
adc
hlt
test
addl
add
mov
lods
fwait
ss
and
fwait
mov
pop
aam
or
in
leave
jl
add
lds
inc
inc
lcall
mov
jl
push
cmpsb
sub
push
pop
pop
add
add
xchg
dec
es
adc
jmp
sbb
cmp
lods
sarl
es
add
test
sbb
adc
stos
idivb
outsb
pop
jp,pn
and
les
scas
inc
sub
add
inc
xchg
stos
lret
imul
inc
cli
call
stos
roll
js
lds
sbb
add
andl
xchg
add
std
xor
push
aad
aam
cwtl
std
jmp
add
psubsw
stos
jne
stos
add
jmp
adc
or
out
call
jb
imul
sub
mov
roll
test
mov
sub
test
inc
mov
les
fadds
push
fs
mov
jmp
add
cmpb
repnz
mov
icebp
ud0
pop
or
pushl
lea
lods
out
add
stos
mov
mov
push
nop
icebp
mov
ljmp
mov
pop
jne
scas
sbb
jne
mov
push
pushl
pop
jne
stos
cli
call
test
addl
add
pop
jne
adc
or
mov
call
or
add
mov
jae
adc
push
push
adc
fwait
int
pop
test
mov
adc
mov
fsubl
mov
leave
out
cs
mov
mov
xor
test
jge
dec
leave
jl
add
xor
mov
fidivrl
test
cwtl
das
dec
xor
cmpsl
push
pop
out
out
xchg
add
inc
pop
sub
inc
out
mul
jne
shrl
sub
jmp
or
sub
sbb
clc
cmpsb
data16
cmpsl
aam
pushf
addb
cmpsb
aam
loope
and
test
jp
addb
fs
push
add
add
add
repz
test
cli
call
adc
sub
xor
cmpsb
xor
sub
loope
outsl
fsubrl
mov
and
jmp
push
cmpsb
jae
pop
sub
jle
stc
out
mulb
cmc
fdiv
popf
mov
sub
movsl
push
bound
add
sbb
push
lods
pushf
pushl
inc
cmp
push
cmc
lcall
and
mov
stc
in
movsb
jne
and
stc
mov
in
add
jmp
push
movsl
jne
xor
pop
or
xchg
push
pushl
pop
jne
push
shlb
decl
xchg
popa
cmp
or
stos
mov
or
shrb
in
andl
mov
inc
sti
jg
or
aam
call
lods
out
jae
decl
out
xor
push
lods
out
mov
decl
out
and
add
mov
ud0
pop
pushl
pop
jne
add
lret
ja
dec
ljmp
rcll
movsl
leave
cld
lds
push
inc
mov
fisubl
add
movsl
incl
sti
orb
das
or
inc
mov
je
adc
das
or
mov
ret
je
sbb
cld
mov
leave
movsb
jne
fsubrl
clc
xchg
or
ret
je
push
jbe
mov
movsb
decl
mov
movsb
mov
inc
mov
xor
movsb
into
movsb
jns
andl
lret
das
mov
cld
sub
cmc
orb
xchg
dec
sub
daa
add
sub
fwait
in
mov
rolb
push
cmc
inc
mov
inc
push
movsb
rcrl
add
mov
ret
mov
push
movsb
out
mov
lcall
test
int
sbb
mov
mov
psubsw
add
jmp
loop
sub
ret
inc
mov
cld
call
add
jle
je
lds
add
inc
push
add
repnz
sub
jmp
jae
ds
jne
in
sub
push
push
loope
pop
lods
or
gs
loope
shlb
arpl
jmp
xlat
sub
insl
xchg
pusha
fs
decl
sahf
jne
fs
xchg
fs
add
incl
insl
jnp
jo
jmp
xchg
inc
sub
lcall
adc
cli
add
adc
cmp
jg
add
daa
stc
cmp
push
lods
inc
add
fs
incl
arpl
gs
call
jge
cmpsl
clc
or
dec
cwtl
dec
decl
call
xchg
scas
or
jne
dec
mov
popf
mov
pushl
mov
push
jne
pop
mov
sbb
stos
add
inc
pop
mov
pushl
ret
mov
andb
adc
adc
std
mov
xchg
stos
mov
adc
xchg
ud0
stos
aas
loopne
mov
push
inc
fisubs
loope
fimuls
add
mov
jne
js
cmpsb
sahf
add
mov
cwtl
adc
loope
dec
lahf
push
mov
jns
sub
jno
bound
jmp
fstl
lret
mov
dec
lahf
mov
into
sahf
cmp
movsb
loop
push
mov
dec
mov
mov
sbb
adc
cld
or
jae
mov
add
xor
pop
xor
adc
mov
icebp
nop
jnp
es
mov
add
mov
ljmp
mov
mov
int
add
fdiv
jl
sahf
jne
sbb
push
xchg
add
cld
out
jmp
je
cmp
call
dec
mov
jl
mov
mov
inc
dec
lock
push
dec
mov
jbe
xchg
call
jb
cmp
or
xchg
mov
push
pushf
push
add
xlat
addr16
inc
add
iret
sub
add
movl
or
je
jmp
push
call
insb
shll
push
push
add
or
je
mov
lea
sub
add
jl
sub
add
add
pop
add
jl
ret
mov
fcomp
pop
leave
push
fimull
subl
sub
adc
sub
mov
sahf
inc
add
stos
add
xchg
popl
in
add
add
add
push
add
push
add
in
sub
aam
sub
aam
sub
out
add
mov
cmp
negl
faddl
leave
std
bound
mov
in
push
adc
xchg
push
mov
popf
shr
add
xchg
add
jnp
add
mov
add
pop
out
cmpsl
add
inc
inc
pop
lret
std
xor
jno
add
cmpsl
add
xor
ret
adc
pop
inc
negb
xor
cmp
sub
or
inc
imul
cmp
rcll
out
or
push
adcl
xor
or
adc
out
push
jnp
cmp
xchg
roll
mov
fs
mov
inc
mov
mov
xor
rolb
push
loopne
ds
fnstenv
dec
enter
lods
subl
xlat
add
xchg
mov
pop
push
pop
lcall
sbb
je
test
push
fs
and
into
add
lcall
inc
jge
jmp
xor
icebp
mov
ret
mov
decl
aas
xlat
lock
std
dec
push
je
cltd
incl
test
adc
pushl
or
je
in
fwait
add
jl
call
jne
scas
call
or
xchg
out
incb
cli
or
pop
leave
jl
call
inc
jl
or
aad
jo
incl
push
add
decl
jo
incb
pop
add
ljmp
in
incl
mov
dec
add
mov
pop
icebp
pop
lcall
sub
add
insl
aaa
dec
das
sub
scas
stos
add
cmpsb
add
add
jp
mov
call
or
mov
in
incl
repnz
xchg
stos
push
push
jb
lcall
sub
mov
enter
sbb
test
mov
repnz
lcall
add
adc
or
xor
test
xchg
push
xchg
cwtd
dec
or
repz
push
cltd
or
dec
cltd
mov
xchg
ds
xor
inc
xor
sub
sub
xchg
sub
adcl
cwtl
imul
jo
xchg
out
je
and
incb
shll
jmp
cwtl
xor
add
inc
sbb
inc
jmp
es
call
loop
or
jle
xor
cltd
jp
fcomi
roll
adc
sub
cmp
incb
xor
mov
test
pushl
fs
es
and
pushl
and
cmp
cltd
inc
or
out
add
test
or
mov
jne
add
add
inc
arpl
add
call
test
xor
push
mov
int
test
inc
outsb
jne
push
and
add
shll
add
xlat
cmpb
jae
cmpb
add
jmp
add
jp
inc
xchg
mov
push
mov
or
je
mov
push
cli
xor
pop
insb
push
push
or
xor
mov
mov
mov
cmpsb
test
adc
push
insl
mov
add
pop
in
icebp
adcl
jmp
ja
jmp
mov
or
add
xlat
xchg
inc
jne
idivl
rcll
call
cltd
or
stos
das
jno
xchg
sti
repnz
sub
xchg
jmp
stos
add
stos
add
jl
add
xchg
add
add
xchg
dec
xchg
out
xchg
pop
or
into
mov
jle
shrl
incb
insb
xor
cltd
jmp
aas
add
xchg
out
add
daa
jmp
nop
mov
outsb
xor
or
push
push
pop
add
or
in
enter
push
inc
adc
xchg
mov
xchg
xchg
xor
cmp
lea
cmp
insb
xchg
jno
stos
inc
lods
add
xor
add
xor
sub
ljmp
push
mov
inc
ret
jl
lcall
lcall
jl
call
jo
movsl
idivl
sub
add
in
jmp
xor
inc
jmp
dec
mov
push
sahf
divl
xor
je
ds
in
push
xor
mov
jmp
add
out
mov
add
inc
in
mull
pushl
jbe
rclb
outsb
pushl
add
pop
call
push
cmp
mull
pushl
jbe
shlb
outsb
pushl
aas
imul
in
push
pop
jmp
call
into
mov
lcall
idiv
add
or
nop
jmp
je
lock
or
jmp
cmp
jmp
mov
and
lds
mov
fisttps
call
xchg
fwait
insb
mov
mov
flds
pushl
push
xchg
push
adc
sti
out
push
loope
mov
mov
push
add
xchg
jne
and
rcrl
xchg
jne
daa
sbb
shll
mov
fwait
add
pusha
iret
pop
or
dec
sti
out
xchg
pushl
sub
xorl
lret
add
add
sbb
nop
loop
lret
icebp
addb
nop
lret
std
rclb
jnp
inc
add
jecxz
inc
mov
jle
mov
in
fsubs
add
sti
rclb
xor
xchg
imul
test
nop
xchg
nop
hlt
sti
loope
jbe
rcrl
push
mov
pop
push
mov
add
inc
jmp
andl
or
cmpsb
out
dec
mov
mov
xor
xchg
cmpsl
pop
push
dec
incl
add
mov
out
stos
add
pop
inc
add
fiadds
dec
aad
add
call
repnz
adc
jne
and
xor
sar
out
dec
incl
inc
das
aam
cs
add
filds
movsl
xor
test
sbb
jmp
jbe
jmp
jge
push
add
jne
push
xlat
enter
add
testl
dec
scas
sar
enter
mov
inc
add
rorb
call
jno
or
lcall
insl
or
or
jne
push
aam
jge
ret
push
mov
add
add
pop
call
pop
cmp
push
dec
jbe
lcall
inc
clc
mov
jle
clc
add
sahf
add
mov
add
inc
sbb
cltd
push
sti
out
aad
call
repz
sarl
sbb
data16
imul
pop
mov
sbb
mov
dec
mov
jg,pn
xor
mov
mov
mov
lcall
xor
out
insb
mov
mov
pop
adc
xchg
fiadds
mov
je
push
jmp
test
stos
jmp
xchg
mull
add
inc
mov
mov
test
mov
and
shl
loopne
jmp
add
add
inc
mov
fwait
outsl
mov
mov
add
sbb
mov
call
stc
imul
xor
sbb
lea
mov
push
mov
sbb
fsubl
add
xor
mov
inc
jmp
jbe
xor
hlt
lds
push
aad
cs
sbb
cld
add
cld
push
fiaddl
xor
idivl
sbb
leave
stc
out
add
mov
push
leave
xchg
call
xchg
mov
add
bound
push
mov
pop
aad
cmp
call
push
les
push
mov
cs
sbb
jmp
add
xchg
out
je
fs
hlt
add
repz
xchg
adc
dec
jb
push
cmc
jge
push
out
das
push
addr16
add
jg
rcl
call
into
jne
add
mov
mov
dec
das
push
add
jg
or
lcall
push
fiadds
lcall
retw
jbe
jne
insl
add
add
jne
jbe
or
out
into
call
ret
rorb
out
mov
jnp
or
out
xchg
call
push
or
fs
mov
sub
add
inc
add
xchg
jb
add
cmp
ret
jne
subb
lcall
push
mov
inc
mov
jmp
pushl
adc
push
dec
push
adc
call
xor
add
mov
mov
jl
inc
xchg
lds
jmp
mov
add
add
pop
fs
shlb
shll
jmp
add
push
jmp
lds
push
js
aad
sbb
cmpsl
add
popa
add
ret
lcall
out
jmp
pop
adc
iret
mov
jbe
fsubrs
rcrl
lret
fldcw
repz
sahf
aaa
cltd
ljmp
inc
sub
push
dec
jle
sbb
push
mov
push
xchg
fwait
jmp
lcall
inc
add
add
mov
aaa
xchg
jl
out
xchg
cs
movsl
cmp
inc
add
addr16
jbe
add
mov
add
jmp
xor
lahf
xchg
xlat
ss
fs
xchg
add
jp
incl
imul
fadds
adc
dec
jp
mov
js
ljmp
cld
cltd
add
jns
mov
add
dec
out
mov
in
adc
movl
jns
or
add
mov
cld
cwtl
testl
leave
movsb
jns
push
enter
xchg
fadd
sti
push
jns
cld
sub
pop
call
or
sti
call
sbb
or
in
in
aas
pop
xchg
incb
dec
sbb
fs
xchg
jo
int3
jmp
incl
mov
jge
ljmp
repz
mov
push
arpl
mov
lcall
mov
lcall
out
inc
das
sarl
jl
outsb
fldl
popa
in
sbb
lcall
dec
imul
xchg
pop
add
inc
inc
add
jle
sarl
push
clc
sbb
test
fwait
push
xchg
test
test
add
lea
inc
xchg
inc
jmp
add
arpl
insb
mov
repz
jle
test
cli
push
addl
jno
fdivs
add
cmp
mov
imul
add
testb
jmp
inc
iret
cld
fidivrs
cltd
or
jmp
add
xorl
push
mov
sbb
jl
push
inc
push
or
mov
pop
sbb
mov
test
jbe
test
hlt
mov
push
xor
mov
sbb
jmp
xchg
test
and
mov
mov
mov
add
add
lods
inc
add
or
jp
sub
stos
shll
jle
rorb
add
push
cmp
jne
inc
hlt
pop
call
and
imul
dec
ljmp
rorl
lcall
incl
test
cmpsl
decl
mov
add
stos
incl
hlt
ud0
out
cmpsb
jge
push
push
jge
or
in
jmp
jge
lcall
mul
jg
cmp
sbb
sbb
mov
push
cmp
enter
stos
orl
or
xorb
xchg
fwait
add
pop
addl
stos
add
jno
call
xchg
adc
mov
fiadds
mov
nop
inc
fidivrl
add
jno
add
lds
stc
add
inc
cmp
lods
das
push
out
cs
mov
add
push
jle
ljmp
addl
jo
jb
testb
sbbb
mov
mov
or
addb
xor
mov
push
icebp
sbbb
call
sbbb
rorl
xchg
shlb
out
dec
add
mov
insb
out
sbbb
mov
scas
lcall
addb
cmp
and
or
mov
test
sbb
push
push
decl
cmp
sti
repnz
adc
stos
xor
cmp
sti
shrl
fdivp
out
sbb
jg
into
adc
call
sarl
dec
pushl
ret
movsl
push
rcrb
ret
aas
testb
lret
jge
jle
pop
int3
jbe
aas
ljmp
and
cmp
jg
sarl
jmp
jmp
mov
cmp
outsb
xor
add
sar
call
imul
add
ret
xor
cmp
mov
lcall
js
call
dec
lds
add
mov
andl
push
insl
add
mov
call
mov
mov
sub
addr16
in
push
das
xchg
add
add
lods
ret
shr
pop
sbb
push
push
mov
rclb
push
mov
cmp
sub
repnz
jne
xchg
sbb
icebp
dec
jo
pop
es
cmp
mov
imul
and
push
pop
stc
pop
es
dec
das
jg
jle
push
leave
cld
icebp
mov
repnz
sub
imul
fistpl
dec
adc
call
es
inc
mov
dec
cmp
add
nop
into
ret
or
inc
adc
inc
xor
imul
sub
jmp
adc
add
inc
in
add
mov
add
jmp
adc
mul
jle
or
dec
adc
or
dec
cld
or
push
cli
out
jle
adc
xor
xchg
divl
sub
push
mov
jg
jle
jle
jmp
mov
push
data16
pop
add
jl
dec
adc
jmp
push
ss
arpl
jl
xchg
or
inc
jmp
add
push
add
push
jnp
je
imul
mov
jl
stos
stos
add
mov
aad
std
jnp
cmp
imul
shll
cmpsb
rorl
push
sahf
leave
add
xlat
add
incl
pop
xor
cmpsl
je
dec
jns
pushl
std
je
in
std
jne
dec
jne
out
push
cld
enter
push
mov
add
call
dec
mov
sti
push
aas
mov
inc
daa
je
xor
pushf
cld
aas
add
out
popa
addr16
jne
std
je
add
je
incl
add
add
stos
cmp
pushl
jne
xchg
imul
jl
jl
add
mov
push
jmp
pop
cmpsb
icebp
inc
call
in
xor
inc
leave
xor
push
ret
ljmp
or
adc
jl
out
xor
nop
fnsave
ljmp
xor
add
std
or
dec
jp
call
or
jg
jp
ljmp
call
xchg
xor
xor
jp
or
add
out
sahf
jnp
call
add
out
ret
jmp
rol
test
enter
ljmp
into
ret
lret
dec
add
jns
mov
aas
jnp
ljmp
mov
call
les
pushf
or
cmp
push
xor
out
ret
jmp
rol
js
or
add
jp
ljmp
scas
ret
mov
out
jmp
push
push
xchg
fdivr
js
aas
xchg
ret
mov
out
pop
xchg
adc
xchg
fwait
xor
mov
js
jmp
add
sub
jns
shll
xor
mov
imul
orb
jmp
cmp
xchg
std
mulb
js
pop
int
call
add
imul
fs
out
jmp
add
sbbb
pop
call
mov
imul
std
add
jmp
stc
push
clc
je
out
or
call
or
cli
clc
push
cli
je
jmp
cld
ljmp
popw
call
sahf
mov
in
cmpl
pushl
imul
push
add
jne
sti
ljmp
pop
add
mov
movb
icebp
aas
imul
js
mov
ret
sub
js
outsb
adc
add
into
sar
xor
cltd
cmpsb
jg
call
push
dec
xor
or
mov
mov
call
push
jne
jmp
inc
or
push
xchg
pop
call
mov
out
sbb
cwtl
imul
jbe
push
mov
pop
es
ja
adc
rcll
jne
dec
cld
or
rolb
inc
fsubrp
call
icebp
mov
cld
dec
cmpsb
shr
lds
ja
mov
sbb
mov
dec
rol
test
jne
rcll
data16
add
ret
cltd
dec
dec
ja
mov
cltd
jbe
adc
hlt
dec
cmpsb
ret
orl
ljmp
hlt
jbe
dec
rol
and
cmp
lea
sar
push
fidivs
jo
aam
sti
je
pusha
ja
pushl
pusha
xorl
pcmpgtw
add
cmp
imul
add
add
insl
cmp
out
daa
jbe
cld
out
cld
je
data16
aam
imul
icebp
aad
les
call
out
pop
inc
test
jmp
inc
mulb
cli
mov
je
sbb
pop
jmp
ljmp
pop
out
je
out
mov
je
add
fs
call
push
insb
jecxz
stos
add
jge
add
pop
mov
jmp
in
je
das
fs
jmp
je
dec
addr16
in
je
aas
in
je
out
int
jmp
in
je
inc
in
je
movsbl
jmp
mov
jmp
lods
jmp
push
ljmp
int
fs
mov
push
add
fs
ret
lcall
xor
shl
xor
je
lret
pop
out
jne
leave
adc
add
shr
in
sub
jle
ret
xor
cwtl
xor
push
add
push
push
ret
incl
pusha
imul
ret
jae
add
push
xor
inc
rdpmc
ljmp
add
pusha
fcmovnb
cmp
cmp
jg
xorl
add
in
adc
mov
mov
adc
cmpsb
shr
in
nop
jmp
out
clc
mov
jmp
or
add
add
add
rcrb
mov
xchg
push
jno
imul
jmp
add
mov
std
inc
out
jno
jg
jg
js
jno
ss
out
mov
jo
jb
push
lods
jo
sbb
or
cld
scas
jo
push
jb
testb
sub
pop
xchg
fdivp
insb
call
mov
popa
pop
andl
les
loope
pushf
ret
jp
popf
xchg
sbb
sub
mov
call
mov
inc
jmp
ret
cmp
popa
dec
call
mov
fimuls
insb
out
fwait
repz
call
jge
push
sbb
enter
push
add
cmp
repz
out
push
push
add
repz
mov
int
lds
repnz
xlat
dec
sub
xchg
add
sub
sub
fadd
jae
xchg
jne
lret
inc
cld
dec
icebp
out
arpl
push
dec
inc
sub
add
jmp
add
sub
lcall
insl
mov
dec
imul
jmp
inc
call
or
pop
jp
sub
fisttpll
testl
sub
pop
data16
decl
add
ret
cmp
ret
mov
fildl
nop
aaa
fdivrp
push
pop
jo
push
mov
shll
xor
mov
jge
inc
mov
or
xor
cmpsb
outsb
addb
arpl
test
jo
data16
add
rcl
shr
pusha
hlt
lock
hlt
data16
sub
xor
add
add
inc
popf
adc
outsb
cltd
fistpl
outsb
push
mov
sarl
cmc
mov
insl
roll
cli
insl
pop
mov
hlt
ret
xor
outsl
int3
sahf
icebp
push
dec
jl
stc
add
fisubl
cmp
inc
pop
adc
pop
add
push
xor
mov
testb
fldenv
push
mov
add
adc
js
subb
push
insb
jne
in
out
sarl
ret
mov
mov
decl
and
into
xor
subl
xchg
cwtl
fiadds
pusha
pop
mov
in
push
jb
add
imull
pop
testb
and
cmpsb
cmp
sti
adc
insb
addr16
incl
aam
out
call
or
adc
add
jne
enter
inc
movsb
push
dec
push
xor
add
inc
inc
sbb
daa
inc
daa
enter
rcr
or
dec
adc
push
aaa
scas
loop
adc
adc
loopne
imul
xlat
inc
fdivl
xchg
add
inc
add
or
call
push
je
dec
dec
fisubrl
or
call
mov
lods
ret
data16
inc
mov
sbb
fs
insl
inc
sbb
push
push
test
shlb
les
jl
insl
push
inc
fnstenv
lcall
inc
repnz
add
jmp
sbb
mov
cld
clc
mov
adc
cli
out
jae
call
inc
stc
into
ud0
pop
fsubr
push
insb
push
cmp
pop
out
insl
call
into
and
push
pusha
pop
rcrb
insb
sub
nop
pop
imul
add
test
dec
inc
mov
inc
or
rcrl
es
imul
jmp
aaa
incl
cltd
insb
sar
inc
rcrb
cs
mov
fldenv
jg
mov
sub
push
lret
cltd
call
aaa
jg
cltd
insb
jae
rcrb
fldt
pop
mov
imul
loope
jae
aad
add
insb
push
add
clc
pushl
fs
add
imul
cld
xchg
popa
jbe
adc
out
pop
adcl
add
scas
adc
jmp
add
lcall
cmp
mov
imul
jmp
xchg
cld
mov
jl
push
addr16
gs
out
fs
xchg
test
push
xor
mov
imul
out
js
decl
push
jne
fdivl
jg
decl
cmp
jne
mov
inc
btr
decl
es
push
mov
in
cld
push
inc
or
adc
add
mov
add
lret
mov
add
jno
call
das
std
out
leave
dec
test
jne
lret
dec
fcomp
jne
fidivl
inc
cmpb
pop
into
mov
fdivrs
fmul
scas
imul
xchg
push
ret
movsl
jge
mov
mov
mov
add
sbbl
add
push
add
inc
add
cmp
push
sti
es
add
adc
inc
out
add
mov
add
push
xor
outsl
push
pop
cwtl
cmp
fnstenv
sarw
ficoms
das
jg
mov
scas
outsb
scas
push
sbb
add
jp
pop
xchg
push
lret
add
lods
jns
jns
outsb
mov
test
push
fildll
push
push
dec
fstl
cld
incl
ds
dec
outsb
ss
jg
adc
cmp
push
jnp
test
or
imulb
pop
sub
fs
outsb
call
push
jl
pop
push
push
repnz
jmp
and
hlt
add
inc
jmp
sbb
mov
mov
gs
in
mov
mov
loope
push
orl
push
or
outsb
decl
lcall
loope,pt
adc
je
insb
ljmp
mov
push
negl
add
cmpsl
call
add
int3
mov
pop
mov
int
incl
fdivl
outsl
mov
call
mov
gs
ljmp
pusha
xor
loopne
decl
mov
mov
incl
fdivl
call
add
out
mov
ljmp
enter
mov
cli
insl
call
add
mov
push
imul
push
cmpsb
push
push
mov
jmp
inc
out
sti
out
jnp
mov
add
insb
push
mov
pop
sub
gs
test
xchg
sub
out
add
sbb
push
ret
scas
dec
sub
pop
pop
out
jg
or
or
pop
add
sbb
out
imul
mov
pop
push
ja
incl
cmpsl
mov
ss
repnz
ret
fmull
shr
inc
inc
push
gs
jne
mov
ljmp
shl
out
mov
jnp
arpl
fildl
mov
in
lock
xor
fs
lods
fs
nop
push
bound
into
inc
push
push
xor
fs
dec
rol
pop
and
inc
leave
jl
add
add
add
cli
call
mov
je
adc
mov
in
testl
out
je
add
jge
add
imul
daa
sub
bound
gs
ror
rorl
mov
popa
push
sbb
js
scas
sbb
popa
call
mov
ret
daa
push
idivl
pusha
xor
sub
jmp
xchg
push
frstor
jmp
mov
mov
cli
shrl
add
xlat
in
mov
outsl
jmp
cli
inc
add
in
xor
mov
lea
push
insb
bound
out
clc
stc
shrl
out
call
mov
in
idiv
pop
outsb
jmp
cli
inc
add
jns
idivl
jecxz
xor
dec
cmp
test
lock
sbbl
idiv
clc
add
gs
iret
popa
add
cmpsb
xchg
mov
push
mov
push
loope
call
mov
bound
repnz
mov
pop
popa
jmp
mov
push
jne
inc
jno
roll
sahf
cwtl
popa
pushl
lahf
shlb
mov
andb
xorb
lcall
pushl
xchg
in
jno
pusha
call
pop
pop
xchg
insb
dec
pop
push
insb
sbbl
push
mov
jae
ss
and
mov
push
push
push
popa
or
loopne
leave
pop
push
popa
stc
xchg
stc
pop
icebp
pop
add
out
pusha
add
rcl
fistpl
pusha
dec
pop
shr
add
dec
cld
or
mov
insl
push
mov
call
or
stos
pusha
pusha
cltd
mov
es
or
push
test
pop
hlt
pop
jno
jmp
aad
mov
in
mov
inc
rcrb
pop
lea
pop
xor
inc
loop
add
mov
add
imul
mov
push
out
mov
pop
imul
mov
fimuls
pop
jne
imul
add
les
in
pop
add
mov
pop
sbb
imul
xchg
loope
push
add
in
sarl
out
mov
inc
incb
sub
xor
mov
jnp
ljmp
mov
xor
daa
mov
ljmp
mov
ret
mov
cmp
inc
cmp
xor
mov
jle
ljmp
mov
divl
imul
xchg
mov
ljmp
sub
mov
mov
inc
mov
jno
xchg
jno
pop
push
jb
inc
mov
mov
sub
ret
cmp
or
stos
popa
cmpb
xchg
repz
roll
push
push
inc
lcall
fldl
out
lcall
push
adc
cmp
in
in
mov
add
jae
push
pushl
sub
mov
pop
incl
insb
cmp
pop
sahf
orl
fiadds
cmp
pop
jmp
add
pop
pop
add
test
mov
insb
xchg
or
jo
ss
imul
sbb
or
jns
pop
or
insb
or
pop
add
adc
xor
pop
loope
je
out
popf
pop
rcrl
aas
rcrl
pop
dec
or
push
jno
pop
imul
test
imul
aad
lcall
and
testl
or
mov
cwtl
xchg
jmp
pop
push
ljmp
dec
lcall
call
ss
insl
imull
jp
xor
pop
call
call
xchg
and
or
xchg
push
test
clc
xor
fisubrs
push
not
imul
add
mov
aad
mov
out
and
dec
gs
add
ljmp
lcall
incl
call
lods
xor
or
cmp
call
xor
call
out
mov
in
adc
mov
push
mov
shrl
push
add
decl
cmpsl
or
pop
aad
add
adc
movl
ljmpw
push
jmp
imul
mov
pop
incl
push
nop
shl
cltd
or
add
mov
iret
add
dec
add
daa
ljmp
jne
jb
mov
dec
fisttpll
push
fbstp
incl
jg
xor
pop
lea
push
push
ljmp
jp
callw
call
push
call
pop
adc
test
pop
incl
pop
div
in
jmp
adc
dec
lock
pop
decl
add
and
pop
mov
pop
mov
call
add
lea
punpckhdq
sub
add
orl
jae
incl
jle
outsb
dec
jbe
pop
or
push
insb
add
bound
cmp
inc
mov
mov
ret
jl
adc
pop
add
sub
and
add
inc
jb
imul
scas
xchg
insb
xchg
dec
out
bound
insb
xchg
dec
push
jmp
push
push
lea
mov
jl
je
dec
jmp
jl
out
pop
push
jmp
std
int
push
xor
jle
je
notb
mov
fimull
fs
dec
call
add
jmp
xchg
jl
dec
pushl
mov
sub
jne
adc
insb
orl
add
mov
shlb
int3
call
push
mov
jg
mov
in
lods
incb
cmpsl
add
andl
idiv
pusha
jae
add
in
notl
pushl
cmpb
imul
decl
call
ljmp
ljmp
jg
mov
subb
pop
or
mov
push
idiv
mov
repz
push
insl
or
pop
push
push
jmp
or
push
jne
add
mov
pop
push
mov
sub
add
outsl
push
ljmp
xchg
imul
push
decl
dec
decl
jae
mov
jae
jmp
mov
imul
call
push
or
push
or
imul
mov
add
cld
popa
add
push
add
add
rol
imul
call
insb
xchg
ret
lret
or
lock
push
dec
mov
push
ret
test
add
add
add
push
mov
test
push
out
jmp
or
out
push
popa
push
hlt
pop
pop
int
push
lret
or
push
lret
dec
push
dec
jo
push
in
jns
test
add
int
imul
ds
sbb
pushl
int3
pop
inc
lods
jmp
jne
add
sub
push
xlat
add
jl
imul
lods
imul
push
push
pop
or
or
pop
rcll
inc
or
sti
mov
cs
jmp
aaa
andl
push
jne
aad
mov
add
mov
gs
incl
jl
addr16
mov
lcall
cli
out
hlt
push
inc
mov
aas
jmp
add
add
add
sub
out
sahf
lods
decb
cmpsl
inc
and
add
add
out
mov
out
out
mov
xlat
jne
mov
fstps
mov
call
mov
jne
lods
jl
add
enter
push
mov
cld
rorl
pop
lods
push
mov
mov
inc
cmp
xor
addb
or
es
push
test
add
addr16
roll
push
mov
pop
mov
inc
rclb
cmpsb
pusha
sbb
push
cmpsb
inc
sub
pop
add
xor
cs
pop
pop
lahf
adc
jmp
mov
aad
inc
ret
mov
lods
mov
pop
xor
jne
inc
fadds
cmpsb
inc
xchg
call
add
jbe
les
add
ja
pop
push
fstl
out
add
adc
out
lcall
adc
lock
outsl
sub
sub
dec
push
stos
stc
push
xchg
dec
push
ds
add
mov
inc
loop
es
dec
sbb
lock
push
mov
rol
addr16
cmpl
dec
add
add
enter
add
pop
jmp
add
add
dec
lds
mov
push
or
xlat
jne
mov
inc
repnz
call
sbb
add
aad
in
xlat
mov
add
mov
cmp
dec
push
mov
js
cmp
call
xchg
pushl
call
sar
push
push
negl
dec
xor
add
incl
push
test
imulb
push
in
aaa
test
dec
mov
push
dec
fmulp
xor
sahf
xchg
push
dec
mov
mov
cmpsl
sar
sub
cmpsb
add
dec
xor
cmpb
call
ficompl
idiv
rclb
pop
mov
call
inc
jmp
push
imul
sbb
add
mov
call
xchg
out
mov
mov
push
mov
idiv
rclb
jmp
mov
cmpb
xor
idiv
push
push
je
incl
je
dec
sub
mov
je
lcall
sti
out
or
dec
push
pop
testl
mov
and
out
lret
dec
call
arpl
or
jne
ret
stc
and
dec
incl
rcll
roll
dec
call
leave
or
pop
xchg
insl
arpl
imul
ljmp
cmp
xchg
xor
std
xchg
mov
mov
jge
pop
cmp
movb
mov
push
call
cld
popa
cmp
jp
push
mov
hlt
sti
and
dec
xor
sub
loopne
add
nop
dec
dec
pop
aas
in
add
dec
addb
ret
add
nop
xchg
icebp
dec
jo
in
call
rcll
adc
add
aad
pop
inc
xor
dec
mov
cli
sarb
dec
cmp
mov
pop
push
dec
cmp
pushl
adc
out
jns
jmp
std
cli
test
jns
add
mov
dec
pop
jmp
mov
jl
pop
push
test
dec
lcall
icebp
inc
call
loop
aad
adc
add
add
dec
jne
jne
mov
xorl
jb
push
fwait
adc
jns
fsts
dec
inc
and
test
add
push
mov
ss
xchg
mov
call
cmpsb
xorb
mov
ljmp
aas
incb
mov
jmp
add
lcall
mov
aaa
inc
pop
mov
push
adc
inc
out
inc
mov
mov
jp
fdiv
mov
pop
cmc
inc
add
jae
imull
out
add
das
mov
jb
dec
inc
or
and
cwtl
dec
push
pushw
ljmp
lock
add
jle
call
and
mov
jg
pushl
pop
iret
jge
pop
mull
mov
je
fisttpl
add
xor
sub
stc
pop
mov
sub
push
jmp
out
mov
testb
mov
pop
pop
mov
aad
xchg
dec
test
dec
dec
adc
rcr
dec
dec
push
pop
mov
orl
dec
jno
pop
sub
sahf
dec
sub
dec
pop
dec
adc
pop
and
dec
dec
xor
dec
dec
jbe
add
dec
dec
jae
push
dec
and
xchg
sbb
nop
and
dec
push
pop
js
add
pop
icebp
inc
cs
lods
xchg
es
jmp
inc
add
cmovs
dec
jnp
adc
lret
inc
decb
inc
add
push
lret
call
pop
jl
push
dec
lcall
xchg
push
mov
inc
jne
loop
mov
pop
jns
lods
add
int
cmpsb
jns
call
pop
lret
push
pop
inc
or
out
imul
push
jbe
dec
call
bnd
sub
mov
int3
pop
inc
dec
xchg
incl
int3
idivl
icebp
cli
mov
xchg
pushf
jns
jne
ja
pop
add
xchg
decl
xchg
sti
add
or
or
ret
add
jbe
lcall
ret
iret
inc
lock
mov
mov
and
pand
call
je
aas
cmp
in
inc
aaa
sti
decl
jne
stos
movsb
mov
mov
dec
push
pop
stos
jns
daa
add
rorb
cmp
clc
inc
jmp
fwait
cmp
call
mov
jne
iret
sub
aaa
mov
int3
dec
push
inc
jne
repz
into
adc
add
imul
xchg
bound
cltd
adc
adc
fildl
scas
xor
andb
inc
push
sahf
inc
jne
roll
retw
xchg
call
shr
push
jp
incl
shr
cmp
xor
pop
add
lea
add
inc
lock
xchg
push
pop
notl
inc
mov
cltd
add
jae
icebp
pop
sbb
inc
add
fcmovnu
or
add
push
adc
xchg
insb
inc
out
cli
imul
sub
pop
push
xchg
xchg
inc
cmp
inc
mov
inc
jno
rcrb
nop
cmpsb
inc
mov
adc
les
push
mov
scas
or
xchg
js
sub
pop
and
mov
into
lock
insl
inc
pop
inc
es
inc
adc
in
pop
sub
inc
inc
mov
mov
data16
cli
inc
dec
inc
enter
add
mov
cmc
sub
mov
gs
add
inc
clc
inc
push
add
idivb
push
jge
dec
roll
inc
bound
sub
mov
lds
sbb
inc
jne
add
pop
ljmp
inc
jne
in
stos
jle
cmp
in
mov
fcompl
inc
lea
inc
jne
gs
jns
pop
decl
shr
mov
inc
scas
std
call
add
cmp
ljmp
add
repz
sub
repz
mov
jne
cmpsb
jg
cmpsl
decb
shl
call
addr16
in
add
xor
call
enter
mov
cmp
faddp
out
idivl
mov
push
es
cmp
std
mov
mov
js
or
mov
loope
in
mov
xor
cmp
inc
mov
or
fs
subb
test
push
or
aas
lock
pop
pop
sub
inc
mov
cmp
xchg
lds
push
cmpb
jne
inc
adc
imul
jmp
sub
call
fwait
cmp
inc
mov
incl
xor
inc
andl
cmp
inc
jmp
and
inc
dec
add
cmpsb
imul
sub
ss
loope
popf
popa
add
xor
inc
pushf
or
lock
inc
roll
mov
incb
or
xchg
inc
imul
inc
cltd
inc
push
or
mov
inc
mov
daa
mov
inc
repz
stos
daa
inc
mov
add
and
or
ficoml
push
inc
pop
pop
push
inc
mov
or
inc
imul
adc
inc
jmp
and
pop
jl
dec
test
xchg
sarl
incl
add
inc
movsb
inc
incl
insb
jmp
jl
fcoml
jl
call
push
inc
xor
push
cld
jne,pt
cld
mov
add
pushl
ds
xorl
inc
xor
call
mov
xor
subl
jne,pt
xchg
push
stos
mov
mov
inc
outsb
xor
out
push
ljmp
or
mull
cmp
shrl
push
add
jne
ljmp
mov
je
jg
test
roll
mov
push
leave
fcomi
mov
mov
push
jne
shll
ja
xchg
or
add
cmpsl
leave
inc
clc
xchg
add
add
repz
add
insb
ljmp
insb
decl
div
pushl
push
jne
nop
inc
jne
adc
mov
and
add
inc
ret
pop
adc
add
popl
outsb
mov
aaa
stc
xchg
aad
adc
xor
loope
sub
sub
aas
push
nop
mov
mov
push
inc
mov
lret
aas
pushl
scas
mull
scas
sti
inc
mov
push
aas
decl
pop
sub
sub
cmp
ljmp
add
xor
lcall
pop
xor
cmp
or
mov
xor
daa
add
ja
aaa
sbb
inc
outsb
or
dec
aas
fs
xchg
mov
call
aas
loope
mov
out
push
aas
rorl
push
addl
push
aas
mov
jle
aaa
test
subl
or
imul
lods
jns
jge
mov
sub
imul
mov
push
add
inc
fidivrl
xchg
sub
mov
cmp
icebp
in
cmpsl
jle
cmp
call
add
and
xchg
notl
cmp
loope
jmp
inc
mov
mov
mov
pushl
es
or
jmp
push
and
sub
cmp
push
add
xor
push
in
stos
jmp
mov
call
jmpw
shll
lret
cmp
loopne
cmp
into
icebp
pop
testl
dec
std
jmp
cmc
idiv
sub
je
sbb
call
sub
out
cld
jmp
std
call
call
sti
out
repnz
dec
aad
add
icebp
add
ljmp
adc
je
stc
cmpsb
ljmp
pushf
cmp
std
xor
out
aas
and
call
push
dec
add
add
std
je
mov
std
je
push
sub
jns
inc
add
sbb
das
mull
mov
sbb
or
mov
inc
pop
inc
cmovae
add
mov
mov
in
aaa
inc
sub
push
dec
add
dec
add
inc
aam
push
xchg
cmp
out
mov
xor
je
mov
xor
shll
mov
cmp
push
add
call
inc
sahf
xor
xchg
add
movd
fidivrs
jns
push
sbb
sub
je
add
mov
adc
mov
push
cmp
push
dec
mov
inc
cmp
cmp
cmp
mov
cld
aaa
es
add
into
jno
cmp
stos
lock
push
cmp
cmp
lea
roll
call
leave
aaa
xchg
or
ficoms
cld
incb
xchg
add
sub
add
add
pop
cmp
ret
mov
sar
cs
jmp
push
cli
inc
jmp
cmp
daa
cmpsb
test
jne
test
decl
push
mov
jle
or
inc
cmpsb
cmp
loop
lods
cmp
mov
pop
cmp
mov
addr16
dec
ss
add
cltd
add
inc
adc
test
dec
push
outsb
jmp
add
push
test
or
ret
xchg
gs
sbb
call
mov
addr16
call
std
sbb
jne
jmp
jmp
stc
imul
clc
incl
sti
ljmp
or
pop
mov
dec
add
push
add
je
jg
lods
incl
pushf
call
mov
outsb
str
or
jne
stc
je
scas
cwtl
lods
mov
sbb
ljmp
cmp
adc
stos
cltd
das
shll
sub
mov
xchg
imul
inc
mov
cmpsl
jmp
sub
sub
push
out
add
or
cmp
mov
gs
xchg
push
and
aaa
ljmp
add
sbb
decb
iret
aaa
call
push
push
cli
inc
mov
call
xchg
stos
add
ss
or
sub
imul
fsubrl
xor
xchg
mov
add
add
loopne
mov
into
aaa
aaa
mov
loop
rorl
shl
xor
leave
ss
or
stos
xor
xchg
or
xor
daa
add
pop
outsb
mov
sub
add
call
or
and
data16
jle
add
test
push
mov
add
nop
pop
decl
sti
aas
add
mov
div
enter
insl
xor
enter
sub
pcmpgtb
add
jmp
mov
xor
out
add
pop
xor
jmp
out
rorl
or
scas
sti
addl
inc
je
rolb
add
mov
xor
aam
int
loope
dec
jmp
push
dec
rorb
daa
push
out
insl
jmp
mov
out
idiv
enter
mov
loop
inc
cmpsl
in
mov
nop
in
call
sti
out
sub
jmp
jmp
aaa
inc
add
out
negl
in
jne
out
stos
sbb
mov
movsb
stos
jmp
dec
in
pushl
addr16
incl
dec
lods
lods
aas
shr
idiv
cwtl
in
je
outsl
call
add
mov
adc
jmp
mov
neg
repz
mov
leave
leave
jecxz
mov
mov
sub
push
idiv
inc
mov
xor
or
sub
mov
mov
inc
mov
inc
xor
jmp
sub
decl
cmp
decl
scas
movsl
inc
pop
xor
mov
add
sub
xor
xchg
and
jne
subb
mov
pop
xor
sub
icebp
daa
and
aad
or
mov
xor
mov
sub
incb
cltd
sub
roll
stos
push
jmp
add
xor
out
xor
inc
add
adc
daa
add
xor
popa
adc
imul
add
sbb
adc
or
mov
mov
sub
sbb
call
in
push
add
jg
mov
add
rcrl
inc
jmp
mov
jbe
aas
imul
test
rolb
call
outsl
pop
jmp
shlb
and
jmp
mov
enter
addr16
jmp
aad
enter
inc
in
xor
add
lea
call
add
jae
cmp
scas
nop
repz
push
incl
add
xor
decl
sub
push
lahf
repz
pop
incl
out
and
push
decl
out
fcomip
call
lods
add
jne
pop
fbstp
rcrb
call
add
push
bnd
outsl
adc
out
add
push
bnd
mov
sbbb
xchg
faddl
mov
pop
push
push
stc
push
push
cmp
fwait
add
and
pop
fcmovnb
xor
dec
in
xor
sar
rcr
pop
xchg
pop
add
mov
addl
pop
mov
xchg
mov
out
xchg
add
sbb
add
jns
sub
mov
push
xor
mov
sbb
inc
dec
or
xor
sahf
xor
rcrl
xor
std
add
sbb
add
fld
call
and
cs
shll
fs
xor
push
push
sbb
jp,pt
xor
xor
sbb
addr16
sub
ret
sub
xor
adc
pop
sub
das
sbbl
fnstenv
imul
jo
bound
add
jmp
jmp
loope
call
sbb
dec
shrl
fs
sub
pushl
xor
outsb
test
and
pop
cltd
jp
xor
pop
inc
and
inc
mov
sar
inc
xor
cs
sar
mulb
push
movsl
insb
je
cmp
loopne
loopne
add
lods
sub
data16
dec
imul
test
out
fsubrl
rcl
clc
mov
fsubrl
add
jns
testl
add
push
lea
cmp
add
incl
dec
imul
decl
fildl
jmp
sub
orb
decl
add
add
testl
xchg
add
pop
mov
enter
stos
repz
decl
lahf
ljmp
out
pop
jne
pop
negb
adc
incl
push
inc
mov
push
push
incl
ja
xor
stos
xor
js
mov
lcall
jl
pop
es
decl
cwtl
outsb
aam
mov
add
cmpb
push
adc
fnstcw
sbb
in
sub
mov
add
xor
sbb
jecxz
pushl
xor
mov
mov
xchg
int
incl
sbb
dec
add
dec
imul
into
sub
je
xor
sub
scas
pop
sub
sub
sub
sub
sub
je
xor
sub
sub
sub
sub
sub
jmp
inc
sbb
call
sti
add
scas
push
sub
jnp
das
es
loop
test
ret
adc
add
jmp
add
add
jmp
jne
pusha
in
sub
push
xchg
sub
mov
lahf
into
movsl
cmp
in
mov
ds
mov
sub
push
push
lcall
and
jle
sub
call
int
jle
and
add
test
ret
fisubs
mov
incl
and
xchg
sub
mov
daa
jne
lds
rcrl
sbb
xchg
fldcw
jne
or
lahf
sbb
ret
push
mov
cld
or
jno
call
fiadds
push
out
pop
cmp
mov
add
std
jne
or
les
jne
ficomps
add
push
mov
callw
pusha
fisttpl
out
je
jg
imul
es
add
ret
cmpsl
add
add
inc
repz
test
imul
xchg
testl
add
insb
add
sbb
add
add
decl
adc
and
decl
insl
xor
sub
aad
xor
xor
adc
jecxz
subb
cmp
stc
or
xor
xor
loope
scas
or
mov
jle
sarl
test
lcall
sub
test
cltd
aas
dec
sub
es
sahf
mov
outsb
outsb
imulb
jno
fcompl
adc
jl
xor
inc
add
jne
ret
dec
daa
jl
dec
es
xchg
pop
es
jp
inc
sahf
sub
fwait
call
add
insb
cltd
xor
xchg
stc
and
outsb
sub
push
movsb
shr
add
xor
shll
mov
shll
mov
add
cmp
ss
and
popf
push
cmpb
popa
xchg
orb
push
mov
add
aaa
cmpsb
scas
pop
add
jmp
cltd
outsb
in
mov
sbb
jl
sub
mov
fldl
loopne
fldenv
push
fisubrs
xchg
add
scas
pop
sbbl
and
cld
cmc
sbb
dec
mov
sub
pop
mov
test
dec
mov
fdivr
pushl
out
or
pushl
loop
fadds
mov
aam
mov
fdivl
push
jge
lcall
fcomi
pop
mov
pushl
mov
or
mov
sar
call
lcall
mov
inc
pushl
or
cmp
mov
sar
decl
sahf
ljmp
inc
clc
ds
lcall
je
outsl
sub
cmp
mov
xchg
ds
and
cltd
push
mov
sti
out
mov
pushl
push
daa
push
nop
inc
dec
sub
sbb
jne
mov
inc
std
jns
lcall
sbb
andb
out
inc
and
call
and
andl
sbb
push
inc
cmp
int
mov
xor
and
mov
xor
inc
pushw
daa
jg
cmpl
sub
roll
and
fxch
push
pop
addr16
shll
adc
ror
and
daa
add
leave
les
pushl
mov
sub
shr
mov
rcll
pushf
insl
out
add
and
push
test
pop
sbb
and
add
orb
lret
daa
das
sub
inc
andb
mov
pop
jmp
sbb
sbb
and
ret
lahf
inc
mov
jge
daa
add
stos
jmp
mov
mov
push
mov
fadd
sbb
ja
and
mov
test
jmp
fldcw
dec
xchg
and
pusha
or
xchg
test
add
and
sub
or
popf
in
mov
stc
mov
adc
cmp
nop
add
sub
add
orb
mov
xchg
or
mov
decl
inc
jnp
call
push
enter
nop
in
subl
jge
xlat
js
xor
add
jge
cmpsl
js
xorl
je
das
mov
ret
mov
xchg
pop
adc
or
sti
or
shr
sub
dec
inc
pop
leave
add
sbb
adc
js
or
js
sub
pop
pop
outsb
mov
jae
shlb
call
add
lahf
ret
xor
fiadds
rorl
movsb
inc
cmp
push
movsb
cmp
push
shll
xor
sub
and
xor
sub
inc
lock
add
adc
mov
xchg
dec
cmp
xchg
mov
cmp
pop
adc
jg
cmp
sub
mov
xchg
xchg
pop
inc
out
psllq
fisttps
add
es
and
pop
sbb
push
sub
stc
sbb
cld
dec
daa
bnd
push
and
jmp
mov
mov
add
fmuls
or
cwtl
and
testb
sub
mov
into
icebp
and
sub
pop
add
push
mov
ljmp
das
push
add
add
aam
aaa
and
add
sahf
mov
inc
je
push
into
out
xchg
push
pushl
lds
push
cmp
jne
and
imul
mov
mov
mov
mov
enter
push
jb
add
data16
adc
xchg
or
xor
mov
push
jne
push
dec
sbb
aad
shlb
inc
std
sub
jne
sahf
xchg
pop
shl
push
fidivrs
sti
add
push
into
push
or
add
or
decb
push
std
je
pop
jnp
pushl
std
decb
dec
out
ljmp
je
aas
ficomps
push
pop
jp
call
pop
rcrb
mov
in
subl
jb
cld
je
call
xchg
ljmp
or
scas
add
cld
push
adc
jne
call
jne
sti
je
outsl
dec
ljmp
push
adc
mov
push
jne
xor
mov
xchg
adc
mov
sub
jnp
decl
xorb
into
lock
imul
loop
stos
sbb
jne
mov
xchg
shll
mov
mov
sub
jne
rolb
in
sbb
pop
xchg
add
incl
daa
push
jne
add
jmp
mov
inc
daa
push
jne
add
xchg
shrl
push
inc
sbb
rorl
call
dec
adc
add
xchg
lock
cld
sbb
or
mov
out
sub
add
jle
add
push
mov
sbb
pop
mov
inc
xchg
int
mov
mov
sbb
sbb
test
xchg
loopne
or
ret
xchg
pop
data16
mov
test
in
sub
call
jo
es
add
jmp
dec
add
jmp
scas
sub
jg
sbb
adc
sbb
movsl
scas
xchg
mov
sub
and
jle
jmp
mov
adc
jmp
roll
add
mov
add
jmp
dec
mov
idivl
sub
call
push
sub
cmpb
je
add
ja
add
incb
and
idiv
lcall
ljmp
xchg
push
std
jne
std
je
das
fsts
clc
aas
out
incl
je
dec
ficomps
lock
cwtl
jmp
or
rolb
cmpb
jae
jge
pushl
in
inc
xchg
loopne
imul
add
add
jne
in
xor
jmp
sub
inc
lcall
dec
mov
or
icebp
mov
sub
in
das
nop
pop
es
ljmp
xchg
mov
adc
sub
pop
imull
add
in
or
adc
sbb
mov
xorb
sub
sahf
test
sub
add
xchg
daa
xchg
or
add
mov
sub
sbb
or
dec
pop
push
xchg
sbb
mov
pop
call
dec
jl
jmp
xchg
mov
stos
lock
pop
movb
or
sbb
sbb
mov
loopne
loopne
mov
aaa
mov
sbb
out
push
sbb
test
cmpsb
xor
mov
int3
pop
mov
sbb
ss
or
mov
sub
movsb
aad
pushf
lds
scas
adc
push
addl
add
mov
add
push
add
push
jne
mov
sarl
imul
dec
or
pcmpeqw
jmp
xlat
mov
andl
adc
cmpb
out
popa
push
pushl
xchg
push
add
mov
and
push
add
addl
arpl
notl
addl
popf
idiv
ljmp
pop
call
ljmp
call
ficoms
lea
add
decb
decl
jne
jmp
mov
cmpb
test
fucompp
pushl
cmpb
test
mov
gs
cmp
in
xlat
add
rclb
incl
test
adc
popf
dec
add
or
xor
nop
out
xchg
fsubs
je
addb
pop
les
jne
repnz
xchg
pop
adc
jne
or
incl
nop
jmp
lods
pop
call
sub
sub
push
push
decl
arpl
decl
jae
ljmp
sub
adcl
add
adc
test
or
inc
movb
dec
jl
jmp
aas
stos
adc
pop
xchg
movl
pop
out
sub
xchg
adc
imul
jl
pop
cld
sub
adc
je
flds
stc
and
adc
loopne
pop
dec
into
adc
add
test
add
mov
adc
lock
mov
repnz
push
cld
push
jmp
mov
jmp
in
mov
fadd
test
mov
stos
adc
in
jae
test
adc
movsl
ret
cltd
push
lret
mov
orl
stos
adc
mov
out
cmp
rclb
push
fiadds
sub
insb
jno
mov
mov
aas
cmpsb
rorb
add
mov
test
sub
notrack
lods
pop
fdivrl
jmp
idiv
lea
dec
push
out
inc
pop
add
lcall
jne
fstpl
mov
dec
push
push
fimull
call
jmp
pop
dec
or
mov
cmc
decb
adc
out
sahf
hlt
push
push
imul
push
imul
dec
hlt
decl
xchg
call
inc
lea
mov
flds
push
dec
xchg
sbb
add
add
jle
repnz
ljmp
xchg
adc
cltd
lea
xchg
iret
mov
pop
mov
out
push
jne
repnz
stos
push
notl
lea
fcoml
lcall
adc
push
mov
inc
movsl
inc
cmovae
adc
xor
pop
mov
inc
filds
add
lea
adc
jnp
push
adc
cld
sub
add
adc
inc
insb
dec
loopne
mov
mov
std
icebp
inc
push
push
imul
movl
adc
test
and
insb
dec
nop
fwait
lret
add
add
test
adc
mov
adc
test
adc
mov
adc
lds
add
out
adc
insb
dec
add
inc
xlat
adc
pop
jmp
sbb
jmp
add
ud0
push
jbe
sub
sbb
aaa
mov
add
cld
push
je
jg
push
lea
fidivrs
call
scas
call
ret
je
adc
inc
adc
sub
push
ss
cltd
inc
add
pushf
jno
dec
addl
push
adc
push
adc
xchg
popa
scas
push
mov
push
or
or
faddp
pop
pop
jmp
adc
xchg
mov
decl
je
jp
lcall
ljmp
adc
lock
cmp
call
push
ret
loop
lcall
mov
decb
repnz
add
add
xor
ds
enter
lahf
add
mov
jno
dec
or
dec
pushl
or
stos
mov
xchg
lcall
mov
andl
add
and
aas
das
cmp
mov
lcall
push
ud0
jne
jb
jmp
in
sti
out
and
sbb
push
mov
sbb
out
stos
push
or
testl
push
jne
mov
cld
adc
push
push
jb
cmp
sbb
call
repnz
xchg
dec
or
mov
ljmp
cwtl
rcrl
mov
sarl
into
cltd
add
lcall
xchg
add
add
sbb
or
inc
jb
cmp
imull
loopne
ret
rclb
push
cmpsb
mov
push
test
or
xchg
or
sti
cltd
inc
pop
push
mov
sub
mov
inc
cmp
enter
cwtl
mov
pushf
jmp
scas
add
inc
aaa
jmp
lods
lds
add
mov
add
jmp
aaa
or
nop
repz
or
push
adc
xor
sbb
inc
ret
test
ret
add
loop
jmp
aaa
jne
jbe
ja
pop
cmp
push
push
inc
je
push
adc
or
sub
call
add
or
je
adc
es
je
push
aad
in
push
ret
or
incl
jae
aas
out
loope
mov
or
decl
std
ljmp
ljmp
inc
std
mov
cmc
jmp
jae
dec
or
jp
idiv
inc
out
xchg
inc
std
incb
out
incl
xor
jne
in
aaa
pop
xchg
add
push
mov
test
call
pop
stc
dec
decl
jne
in
and
add
push
add
movl
sbb
add
mov
test
push
movsl
lea
push
sbb
sbb
push
add
dec
add
fistps
add
add
fildl
pop
xchg
xchg
jo
fxch
jle
inc
sahf
maskmovq
jg
push
push
jo
mov
xchg
or
mov
popf
lcall
mov
jne
mov
xchg
add
or
jno
pop
imull
es
insb
push
or
inc
popf
cmpsb
add
sbb
or
or
sbb
or
sbb
xor
loop
add
sbb
add
dec
rcll
or
nop
mov
pop
inc
push
mov
lds
add
dec
xchg
adc
pop
xchg
nop
mov
pop
adc
sbb
fwait
dec
lret
daa
add
dec
adcl
mov
pop
inc
mov
push
push
or
pop
add
push
adc
cs
jne
add
call
les
mov
call
jns
jmp
out
cmp
call
mov
cmc
cmp
fwait
call
or
aad
lea
dec
pop
call
cld
push
addr16
ret
cmp
out
outsb
push
call
sbb
inc
jmp
jl
fsubl
movl
inc
ret
add
add
stc
je
cld
ljmp
add
push
add
pop
test
xor
add
cld
jmp
dec
std
lcall
stc
je
sbb
call
pop
mov
jmp
ret
int
stc
decb
daa
jbe
push
cmpsl
in
xchg
cmp
dec
push
add
push
cmp
std
dec
pushl
stc
pop
mov
imul
and
or
xchg
pop
jae
jns
inc
or
filds
push
jo
rcll
sbb
in
pop
mov
negl
push
add
jmp
jl
and
sbb
scas
sti
out
sub
incl
or
sbb
inc
pop
leave
cld
push
add
inc
mov
mov
sbb
add
and
jb
sbb
mov
adc
add
add
cmc
movsl
roll
sbb
aam
cltd
mov
enter
subl
inc
xchg
mov
mov
lret
les
inc
jg
add
inc
je
xor
lret
add
jecxz
call
lds
add
cld
or
test
add
int3
add
icebp
int
jle
scas
lock
daa
add
cmp
movl
roll
aad
shr
jp
pushl
in
cmp
mov
ret
mov
mov
ret
mov
ret
cmp
hlt
xchg
inc
jmp
jp
subb
ret
mov
add
jmp
leave
jle
inc
icebp
push
inc
je
test
jmp
ret
adc
enter
jg
cmp
cmp
out
out
pop
mov
daa
ss
add
push
or
and
pushf
shlb
jnp
add
sub
cld
and
dec
arpl
add
addr16
int
nop
cld
dec
mov
push
inc
push
mov
or
xchg
leave
in
ljmp
fdivr
je
xor
push
push
cmp
daa
add
gs
inc
sti
push
mov
in
mov
xor
imul
and
dec
daa
cmp
mov
pop
inc
jne
jne
out
cmp
aam
inc
mov
mov
daa
jns
incl
jbe
mov
pop
in
dec
xchg
add
jne
jno
add
lret
rol
inc
mov
jmp
out
sbb
add
ja
xchg
xor
mov
and
xchg
repnz
cmp
push
adc
jae
add
cmp
fimull
mov
xor
aad
lods
in
shlb
jo
test
vpsllq
ja
fadds
mov
scas
gs
rcl
ja
clc
add
adc
jb
movd
int3
jg
jmp
test
out
fildl
test
inc
add
ret
mov
xchg
adc
inc
jmp
add
cs
add
or
adc
mov
add
add
adc
push
rorl
int3
xchg
jmp
pop
add
jg
add
sarb
inc
jmp
jge
test
ret
add
data16
cli
hlt
fidivrs
inc
jmp
jne
je
bound
jmp
or
stc
out
mov
adc
ds
cmc
cmp
add
mov
test
jb
cmc
inc
cmp
and
and
pushl
add
lea
add
inc
pop
push
add
out
inc
in
add
add
add
ds
add
insl
push
aas
add
add
sbb
inc
cmpsl
add
out
push
pop
add
push
aas
es
dec
push
add
push
jg
aas
inc
add
scas
ljmp
gs
aas
data16
xor
add
daa
aas
inc
pop
add
mov
in
push
push
add
call
inc
add
xor
out
pop
add
lds
clc
dec
push
jmp
dec
mov
sbb
inc
stos
jl
mov
jp
inc
xchg
sbb
xchg
fdivrp
out
pop
add
sbb
jno
inc
in
cmp
incb
cs
add
or
or
mov
add
or
call
mov
add
and
xchg
loop
std
inc
add
decl
ja
decl
std
int
push
rolb
std
mov
cld
inc
std
lods
decl
nop
hlt
xor
popf
in
sub
xchg
mov
push
movl
je
cwtl
lret
mov
addr16
addr16
cld
dec
mov
mov
dec
adc
jmp
add
inc
adc
cmp
ja
and
add
call
ret
out
ret
test
ljmp
movb
bound
jg
popf
jo
je
adc
push
rclb
stos
int
pushl
jmp
or
decl
add
shr
push
mov
mov
mov
push
mov
hlt
pop
cwtl
cld
or
mov
cld
je
gs
dec
jo
shl
faddl
jmp
inc
repz
mov
add
mov
push
call
cmp
rolb
dec
lcall
daa
decl
mov
cwtd
loope
add
leave
push
add
mov
jae
jg
cmp
xlat
out
push
add
pop
pop
fdivrl
jb
int3
or
lcall
mov
xchg
ljmp
jmp
xor
mov
in
ss
lcall
add
cmp
add
push
call
into
inc
int3
andl
je
leave
push
in
add
mov
in
out
call
loop
or
call
add
mov
call
add
jno
in
and
add
jmp
in
add
mov
inc
call
xchg
dec
add
mov
cmc
or
xchg
out
add
ljmp
aaa
mov
push
add
mov
add
push
mov
mov
mov
test
les
ljmp
add
jp
call
inc
push
add
add
clc
call
add
add
ret
call
jno
jmp
pop
inc
jle
sti
xlat
cltd
or
cwtl
mov
int3
nop
outsb
xchg
in
add
ds
inc
mov
clts
inc
mov
add
cltd
in
aas
test
clc
je
push
loopne
jmp
aad
sbb
mov
movsl
push
aas
test
clc
je
sbb
push
jmp
mov
and
cmc
nop
add
sbb
aas
sub
clc
je
in
push
jmp
add
push
jmp
in
add
or
add
jge
bound
lret
jmp
add
cmpsl
sti
decb
ds
call
aaa
cld
jae
call
lcall
jns
add
cmpl
je
dec
add
out
fsincos
jae
mov
stc
jae
sbb
call
decl
addr16
in
push
clc
std
call
ljmp
pop
out
mov
std
jne
in
mov
clc
std
jne
in
mov
stc
std
jne
in
mov
stc
std
jne
in
mov
stc
jmp
call
sti
push
push
add
call
sub
int3
es
push
add
mov
pop
aas
call
cmpsb
fidivl
inc
mov
push
push
add
lahf
cmp
add
dec
enter
clc
ret
scas
idiv
int3
jne
pop
mov
cmpsl
cld
mov
subl
test
je
xchg
bound
mov
in
test
fs
out
add
js
xor
roll
mov
push
andl
cmc
inc
rolb
clc
push
add
add
rcrl
ljmp
lret
xchg
sbb
icebp
ret
mov
popf
aam
jmp
cmpsl
inc
cmc
fucomp
ret
sub
into
jno
jmp
outsl
orl
xor
add
hlt
popf
push
cmpsb
sbb
test
arpl
add
scas
inc
notb
push
add
xor
addr16
aas
out
icebp
mov
jmp
push
adc
jmp
ret
pop
cld
and
inc
jmp
mov
ljmp
cld
cmc
divb
inc
sub
xchg
mov
sub
jmp
or
mov
dec
or
loop
insb
cmovno
inc
jmp
les
push
test
adc
das
in
mov
adc
std
lea
inc
mov
adc
decl
in
jae
out
out
cld
call
jmp
fstl
decl
in
std
aas
pop
ds
pop
in
mov
shr
call
add
jb
aas
sub
in
jae
pop
mov
adc
mov
icebp
in
std
push
out
lock
adc
jne
in
jae
cmpsl
in
jae
dec
in
idiv
push
in
xchg
dec
idiv
cltd
nop
fs
mov
testb
sub
jns
rolb
movsb
cli
jo
mov
cli
inc
add
mov
add
in
xlat
out
call
xor
mov
or
out
mov
mov
push
ljmp
mov
dec
or
or
add
testl
add
sub
call
shrl
add
hlt
test
xchg
outsb
into
lock
out
lock
or
fimull
jle
xor
jle
lock
add
xchg
mov
icebp
push
jmp
push
jmp
jle
out
cmp
cmc
inc
icebp
inc
inc
mov
jmp
hlt
sub
mov
ror
pushf
mov
ja
hlt
mov
in
insl
fldcw
mov
cmp
aad
movsb
hlt
jo
cmp
out
jb
enter
inc
push
pop
mov
movsl
aaa
adc
lock
loop
jne
cs
ret
mov
xchg
jg
jbe
mov
ficoms
lock
test
push
insl
fisttpl
ret
mov
dec
mov
dec
jns
cmp
mov
mov
sub
jmp
or
push
call
jo
xchg
push
pop
arpl
out
or
out
add
xchg
frstor
or
push
icebp
out
call
add
add
sbb
cld
cmpb
test
add
add
dec
call
or
js
add
adc
inc
scas
inc
add
xor
push
lret
outsb
dec
daa
add
rolb
cmp
jne
dec
add
xor
xor
jb
pop
add
pushl
std
jne
into
lods
mov
icebp
dec
mov
adc
jne
sahf
add
jae
pop
add
scas
lock
sub
je
nop
enter
inc
jg
ljmp
repnz
loope
mov
pop
icebp
sti
lods
sbb
icebp
add
adc
cmovae
out
push
inc
ja
push
insl
mov
inc
aaa
ja
es
xor
ja
push
cmp
ja
es
mov
adc
ja
or
decb
fsubrp
pop
pop
add
fistpll
into
jbe
ret
dec
push
inc
add
push
out
inc
mov
ja
fstpt
rcll
push
xchg
sbb
in
jge
inc
jbe
jp
fiaddl
push
mov
sub
in
fisttpl
out
fsts
jl
in
cwtl
lock
cwtl
lock
sbb
in
sub
lock
fcmovnbe
test
lock
sti
or
adc
in
push
ja
clc
pop
js
dec
out
adc
push
mov
add
test
sub
in
jmp
test
add
pop
add
ds
hlt
cmp
repnz
cld
cltd
in
das
mov
ljmp
in
je
test
push
imul
mov
pop
jmp
movsb
popa
jmp
shrl
jne
cs
pushf
sub
je
add
jmp
std
cmc
sahf
addb
rcr
inc
pop
popf
jp
out
push
add
decl
leave
and
int3
jg
or
std
ljmp
push
jo
or
xor
ljmp
cmp
lcall
jmp
fdivr
push
scas
stc
add
addr16
mov
jmp
mov
sbb
add
aas
inc
fdivl
aam
inc
add
add
out
test
push
dec
in
inc
pop
inc
add
mov
fadds
orb
sti
out
jmp
decb
idiv
icebp
fistl
xchg
xor
lock
push
loopne
test
mov
add
mov
in
and
pop
and
fcomps
incb
lock
pop
out
add
mov
pop
add
cmp
add
cmp
push
and
incb
mov
cmp
lds
fiaddl
mov
jl
cmc
sbb
adc
add
add
pop
fldcw
test
push
add
inc
mov
inc
jmp
icebp
lret
pop
shrl
sub
loope
inc
add
add
add
cli
adc
jmp
xchg
adcb
add
in
jbe
fnstenv
sarl
and
dec
jmp
pop
in
mov
incl
push
cld
cs
add
jmp
sbb
cltd
gs
add
mov
add
add
sub
jne
aas
sub
inc
add
dec
stc
out
cmpsl
out
inc
hlt
sub
add
pop
add
add
push
mov
cli
out
xchg
out
insb
aas
out
std
jbe
cmp
shll
in
aam
loopne
fs
sub
leave
jg
repz
std
add
fdivs
call
decl
add
add
pop
imul
xlat
lret
in
dec
xlat
add
mov
sbb
add
ds
xlat
fidivl
aam
cmp
push
in
in
fdivr
push
scas
pop
aas
inc
cmpsl
dec
add
std
add
pushl
out
jmp
std
loop
cld
fcoms
xchg
add
add
mov
loopne
rol
ljmp
cmp
ljmp
mov
out
mov
aaa
sahf
out
mov
fadds
add
xlat
call
add
fcomps
mov
add
inc
incl
fisubl
inc
mov
sbb
sub
ficompl
call
inc
add
adc
inc
mov
fcomps
mov
loopne
inc
bound
jmpw
push
ljmp
jmp
jmp
mov
xor
dec
xor
pop
jmp
sti
and
mov
add
out
add
pop
dec
es
loope
mov
lahf
cmp
aad
add
insl
lock
push
add
fdivrs
je
incl
sbb
xor
sarb
movsl
fldt
sbbb
enter
sub
das
xchg
sbb
add
sub
movsl
jae
repnz
add
jbe
addr16
xchg
inc
add
mov
xorb
in
sub
aaa
lcallw
push
ret
add
js
jmp
add
push
sahf
fwait
add
out
or
lea
out
addr16
pop
gs
or
mov
sarb
mov
fcoml
mov
in
jb
fisubl
sub
js
jl
inc
add
out
add
iret
aas
xchg
std
push
call
dec
shlb
enter
fmull
push
add
mov
inc
daa
push
pushl
enter
fsub
mov
jmp
cmpb
jno
inc
mov
sarb
lea
pop
push
std
jne
fidivl
out
in
jnp
lock
adc
int3
add
cmpsl
dec
sub
ljmp
mov
add
sbb
mov
out
and
ja
fadds
or
add
decb
pop
add
cld
inc
add
test
jg
sbb
add
and
cld
int
lods
stc
sti
in
and
std
je
in
outsb
cld
loope
sti
out
pop
in
jno
mov
mov
push
sar
fstps
mov
cld
out
in
sub
aaa
sbb
adc
lock
pop
jmp
call
xor
push
push
sahf
pusha
in
push
add
shlb
add
loop
sti
pop
loopne
in
fldenv
xor
cmp
sti
sbb
sub
mov
mov
mov
int3
je
std
jp
in
add
mov
inc
sub
daa
sub
loop
cld
xchg
mov
push
icebp
lret
mov
ret
xchg
adc
call
jo
frstor
mov
inc
inc
jmp
mov
xchg
mov
jmp
jge
add
ja
inc
jmp
add
sbb
push
cwtl
or
dec
xchg
loopne
and
add
pushf
jbe
andb
repnz
fstl
push
ret
stc
fdivl
sbb
adcb
sub
cld
nop
or
in
add
in
jb
outsb
add
in
out
addr16
pushl
out
scas
add
call
add
adc
xlat
push
push
mov
or
jb
push
call
sub
rclb
push
fistl
add
add
call
push
push
insl
add
lea
ja
jae
out
adc
add
int3
rclb
ljmp
mov
cld
out
inc
jecxz
mov
sub
outsl
mov
jecxz
mov
push
sbb
pop
pushl
push
adc
repnz
jmp
ljmp
fldl
push
xor
aaa
pop
sbb
lcall
xor
or
sub
xor
xchg
mov
icebp
js
add
je
notl
stc
jne
out
and
decl
cmc
aad
roll
out
cmpsb
mov
add
xor
push
loope
xchg
ffreep
loope
push
loope
cmp
mov
cwtl
xor
or
cmc
popf
loope
imul
mov
add
sarb
icebp
imul
icebp
add
add
add
jmp
loope
icebp
call
fsubrs
cmp
enter
loope
add
add
ficoms
jmp
notb
insb
xchg
sar
cmc
fimuls
fs
sar
out
mov
lahf
push
adc
or
cmp
add
sbb
cmpl
mov
sar
mov
add
cmpsb
cmp
jle
imul
in
jmp
add
fs
out
outsl
movsl
pop
inc
test
mov
in
inc
jmp
imul
jmp
add
mov
xlat
jno
add
mov
inc
add
mov
cmpsl
inc
out
lea
in
push
inc
xchg
add
rcr
cmpl
push
or
lcall
loopne
mov
icebp
call
mov
icebp
jmp
adc
imul
xchg
mov
repz
fst
aas
jg
or
jb
fnsave
xchg
xlat
int
or
sar
leave
loop
adc
je
repnz
int3
jae
sar
add
call
clc
push
jno
incb
je
jmp
fnsave
jp
pop
push
cwtl
jmp
insb
fsubp
lods
stos
add
ja
idiv
xchg
pop
out
cmp
xor
adc
cmpsb
lcall
sub
xchg
add
fimuls
test
pop
mov
mov
add
scas
mov
ret
jns
stc
fmull
fnsave
lret
mov
sub
lds
fidivl
hlt
cwtl
adc
or
mov
fldl
inc
jmp
fdivr
popf
sti
mov
push
xchg
fmul
cltd
insl
xor
add
xor
dec
xor
iret
mov
sbb
pushl
jno,pn
push
loop
adc
lods
sbb
fs
incb
mov
jne
div
fimull
out
fimull
inc
fscale
xchg
dec
push
mov
sbb
fdivr
jmp
mov
dec
adc
adc
call
push
or
fs
outsb
add
fucomip
xchg
outsb
negl
fmuls
dec
or
incb
inc
or
add
call
std
incl
push
or
rorb
jmp
imul
xlat
mov
or
adc
test
mov
nop
mov
mov
decl
mov
cld
lcall
push
dec
jb
pop
mov
push
cmpb
je
mov
nop
cmp
or
push
or
call
aam
push
nop
fmuls
nop
adc
mov
mov
dec
xor
sbb
adc
imull
or
imul
add
xor
imul
pop
sub
or
push
add
sub
add
or
mov
xor
mov
pop
aad
mov
or
leave
dec
aas
sub
imul
or
sub
ljmp
out
scas
inc
inc
mov
subb
mov
je
push
xor
push
ljmp
push
inc
push
lods
push
sbb
add
push
ljmp
inc
add
xor
fidivrs
xchg
add
decb
jmp
pop
inc
out
test
enter
mov
adc
inc
mov
inc
jmp
fld
shl
xor
jmp
test
cmp
adc
push
inc
sub
mov
test
add
pusha
mov
inc
popf
pop
dec
int3
outsb
icebp
sar
add
xchg
cmp
jmp
test
add
cmp
push
arpl
lea
cmp
mov
jl
or
outsb
adc
adc
add
mov
pop
jmp
add
cmp
aam
xorl
push
xchg
cltd
sahf
xchg
dec
mov
jmp
add
popa
js
sarb
js
rcrb
leave
ret
push
mov
adc
push
incl
inc
inc
daa
addr16
inc
push
add
std
push
add
test
add
mov
lods
mov
adcb
push
rolb
xor
mov
lahf
std
push
test
lcall
aam
xchg
add
movl
cmpsl
add
inc
daa
and
inc
int3
add
add
adc
mov
sbb
add
in
fimuls
ror
cmpb
dec
cmp
movsb
push
jg
add
xchg
imul
std
jl
add
xchg
or
jmp
lret
sbb
mov
insb
lret
not
je
repnz
leave
lret
ljmp
jl
jmp
mov
add
push
icebp
adc
xor
inc
add
ljmp
jmp
out
mov
cmovne
add
push
mov
inc
jmp
xchg
scas
inc
test
adc
ljmp
mov
mov
cmpsl
sti
inc
mov
add
add
add
push
inc
in
add
inc
jmp
add
add
add
shr
add
lds
cmp
xor
add
inc
es
inc
jmp
cld
add
test
mov
rorb
jmp
add
add
jmp
mov
jne
inc
cmp
mov
add
xlat
jl
add
fidivrl
jmp
cmp
inc
jmp
xchg
in
call
aad
push
daa
add
cmp
cmp
lea
inc
push
das
sub
cmpsl
cli
mov
in
xchg
inc
daa
mov
add
push
dec
inc
or
ret
jne
mov
or
faddl
stc
enter
mov
add
add
daa
inc
or
clc
mov
dec
aas
cld
call
fwait
sub
push
leave
ret
push
mov
add
or
xor
lcall
cld
subb
inc
add
lods
ds
mov
sbb
aaa
pop
sar
inc
lcall
mov
fcmovu
test
outsl
rol
mov
flds
add
push
add
mov
mov
lea
xor
les
xor
orb
cli
jae
shll
push
sti
add
out
jle
out
idiv
push
repnz
pop
pop
or
xchg
iret
inc
push
or
add
pop
stos
iret
push
cld
cltd
cli
pop
rcrl
xor
fistpll
mov
cmp
ljmp
stc
nop
into
mov
add
std
movsb
shll
call
mov
jle
std
pop
add
pop
add
add
xor
stc
inc
sub
add
int
pop
ret
cmpl
jle
in
and
sahf
sti
pop
frstor
cld
xchg
shll
mov
cmp
pop
push
sub
xor
sub
sti
cmp
testl
ljmp
mov
fucomip
imul
xor
les
loop
sub
stc
std
mov
jmp
movl
or
add
xlat
jl
pop
lret
sarl
pop
add
dec
cs
cli
mov
sbb
jns
mov
adc
sti
mov
mov
jge
dec
dec
lock
rep
sub
or
cli
mov
add
xorb
mov
aas
add
add
pop
pop
push
movl
pop
mov
adc
in
in
mov
add
ss
mov
inc
cld
mov
test
xchg
sub
and
add
pop
dec
mov
mov
data16
add
ljmp
lock
mov
sti
jns
add
jb
and
aam
mov
add
add
iret
incb
call
stc
lcall
add
or
add
into
repnz
fcmove
je
orb
mov
mov
pop
hlt
es
push
add
mov
addr16
inc
add
mov
out
add
add
cmp
stos
pop
push
jl
add
jae
adc
add
std
sbbb
into
dec
fsts
pop
clc
add
cmpb
pop
into
pop
pop
inc
incl
ficomps
fidivl
mov
push
jmp
pop
lret
mov
inc
jmp
into
ss
mov
lret
push
push
xchg
mov
inc
mov
cmp
pop
dec
adc
into
mov
gs
mov
adc
jo
dec
into
ss
and
lret
clc
push
add
push
aam
addl
mov
lret
xchg
in
push
data16
mov
xchg
pcmpeqd
cmpl
ds
sarb
push
in
icebp
std
sbb
and
gs
jae
inc
lods
aas
dec
loopne
add
mov
mov
lret
cmp
jmp
dec
jle
jmp
push
cmp
cld
imul
or
and
jmp
stc
leave
or
add
dec
inc
enter
sarb
cld
lcall
cmpl
xlat
std
out
mov
in
sub
mov
int
addl
add
je
push
mov
or
outsl
cmp
aam
mov
out
enter
mov
std
jne
mov
or
and
cmp
adc
jne
dec
inc
int3
cwtl
hlt
jne
lods
shrb
das
int3
ljmp
fcmovb
push
push
insb
pop
int3
incb
imul
cs
out
decb
fisubl
dec
test
push
sub
lret
ficoml
sub
lret
mov
push
or
lret
mov
push
or
lret
mov
lret
outsb
fcomi
out
xchg
lret
ret
iret
addr16
xchg
out
ja
dec
push
fisubrs
sahf
fcmovnbe
scas
push
lret
enter
add
jae
dec
test
fcomps
or
jno
mov
sbb
add
movsl
add
and
imul
add
ret
call
inc
lret
add
pop
jmp
iret
icebp
je
rcll
dec
ror
adc
rclb
jmp
fmull
inc
add
sbb
popa
cmc
adc
add
bound
inc
sbb
es
xor
imul
jno
add
inc
pop
int
in
test
add
xchg
in
incb
push
aam
jnp
call
pusha
ds
es
mov
jmp
in
add
cmp
testb
jmp
ja
andb
add
add
sti
fs
inc
lcall
fs
scas
ja
jmp
xchg
push
jb
xchg
ja
or
inc
jl
in
test
std
add
lahf
std
mov
mov
ljmp
outsb
pushl
mov
push
sub
out
mov
std
jne
test
std
mov
mov
ljmp
mov
mov
inc
mov
cmp
xchg
mov
or
test
push
daa
xor
ljmp
mov
inc
add
stos
adc
std
jne
test
enter
push
inc
outsl
add
in
xor
add
ljmp
pop
enter
jl
pop
hlt
inc
add
jg
cmpb
mov
add
mov
int
outsb
addb
test
cltd
add
inc
sti
out
daa
enter
push
call
in
add
sbb
xor
jno
shrl
popa
or
icebp
fnclex
push
sahf
call
add
and
mov
add
cmp
jmp
or
dec
loopne
pop
cmp
pop
mov
jmp
andb
dec
ret
js
repz
jmp
fwait
sti
fsqrt
add
sub
out
inc
cmpsb
xlat
scas
xor
inc
out
cwtl
stc
sub
jmp
add
punpckhdq
rorl
leave
jno
add
decl
jp
mov
dec
js
xchg
les
push
test
cld
mov
jns
jne
jle
loopne
mov
aaa
jmp
movsb
scas
ljmp
lds
push
lcall
or
cmp
mov
xor
adc
adc
push
push
add
lds
lahf
pop
fiadds
cmc
push
mov
je
outsl
cmpsb
fisubrs
mov
movsl
add
jne
mov
cld
call
pushf
add
loop
or
ljmp
out
out
mov
jmp
sub
loop
fs
decb
shlb
add
push
pushl
out
inc
mov
std
jne
push
xchg
cmpb
and
jmp
push
add
mov
and
mov
stc
les
dec
or
pop
jmp
stc
mov
out
addr16
clc
dec
push
enter
push
enter
stos
add
rolb
sub
add
pop
dec
cld
push
adc
stc
out
cld
mov
data16
mov
out
dec
clc
out
push
dec
xor
cld
imul
bnd
and
push
inc
insl
testb
mov
incb
ret
add
mov
stc
xchg
clc
add
push
adc
cmc
nop
add
sbb
ljmp
cli
adc
add
add
add
and
push
aad
mov
in
lcall
add
xchg
incl
cli
ret
roll
push
add
add
nop
xor
add
mov
xor
add
daa
mov
std
cmp
sub
jmp
push
dec
call
rolb
mov
ds
mov
cmp
mov
addr16
mov
ss
ret
insb
idivb
decb
mov
xor
jbe
adc
cld
xor
lcall
xor
add
mov
mov
add
or
je
cld
xor
call
add
cld
push
notb
add
rol
mov
test
lcall
push
xor
call
aas
add
add
imul
push
or
and
punpckhdq
shll
lock
jae
int
push
mov
sar
pop
add
add
std
jne
imul
pop
ljmp
or
dec
xadd
lcall
push
push
std
add
scas
mov
jmp
stos
add
lret
cld
mov
ds
push
addb
add
mov
add
std
pop
sti
jle
add
inc
add
ret
cld
out
xchg
inc
cmp
addl
mov
jne
inc
add
mov
stos
add
mov
add
mov
stos
add
mov
ds
stos
inc
push
dec
add
inc
mov
xorl
ss
stos
jmp
mov
or
out
xor
xorb
stos
gs
mov
mov
pusha
shrl
mov
dec
sub
add
or
fwait
cmp
add
push
lea
cmp
cs
adc
cs
mov
push
mov
cmp
mov
or
lcall
jns
adc
mov
ss
adc
mov
ss
add
sub
out
add
cmpsb
add
mov
rorl
push
xchg
pop
cmp
add
mov
xchg
jmp
add
out
in
push
incb
xchg
or
sbb
mov
add
data16
jb
or
jns
ds
mov
mov
inc
ud0
push
repz
jae
pop
pop
adc
daa
add
add
mov
dec
popl
adc
or
in
add
imul
rclb
faddl
push
call
jnp
addr16
sub
pop
pop
leave
adc
or
std
or
pop
sub
pop
leave
push
adc
mov
jge
jne
data16
add
jmp
mov
mov
ja
je
push
aad
fsqrt
cli
inc
loop
or
mov
rol
pop
adc
rorl
ret
inc
in
aaa
data16
sbbb
add
pop
stos
xor
aad
pop
pop
ja
push
add
stos
rcrb
call
aaa
out
mov
inc
in
stos
add
push
mov
sti
mov
mov
cli
sub
dec
call
mov
mov
push
add
cmp
lret
jmp
inc
fisubrl
out
mov
cmp
ret
add
sub
push
ss
test
rol
sti
pop
xor
lds
push
mov
mov
add
mov
cs
imul
push
mov
xor
lea
imul
mov
push
je
adc
mov
push
mov
jae
inc
xor
adc
mov
loopne
test
mov
mov
lahf
sub
jne
xchg
add
test
sub
leave
sub
add
movsb
sub
push
lods
call
mov
fcompl
mov
lds
outsl
add
mov
rorl
mov
push
push
adc
adc
jns
add
add
pop
dec
mov
adc
and
mov
mov
xchg
decb
jae
jne
push
popa
nop
jnp
jge
add
std
std
imul
call
icebp
adc
dec
or
orb
mov
std
jne
jnp
or
js
adc
out
call
fdivp
idiv
lcall
adc
jne
jns
or
call
inc
adc
sub
incl
lods
aam
jl
lods
cs
xchg
cmpsl
jmp
popa
popa
lds
mov
test
out
gs
pop
pop
ljmp
push
sahf
mov
stos
out
or
xor
enter
add
cld
mov
mov
lods
stos
sub
call
inc
out
scas
mov
nop
aas
cmp
shlb
add
jae
dec
imulb
in
test
add
jle
add
and
dec
adc
jns
mov
test
push
cs
or
dec
lret
mov
cs
mov
or
mov
cs
xchg
scas
mov
nop
call
faddl
subl
out
xorb
dec
mov
mov
sarl
push
cs
inc
sbb
mov
out
push
or
adc
lock
jl
in
xchg
sbb
mov
cmc
push
sub
push
mov
gs
mov
test
mov
pushf
leave
into
sub
rcr
stos
cmp
xorl
add
movsb
mov
add
scas
mov
pop
add
out
push
dec
or
inc
jmp
mov
std
sub
or
fsubrl
adc
pop
mov
add
jae
outsl
jmp
decl
test
pop
pop
rcll
sub
jb
dec
pop
call
xchg
mov
imul
lock
add
mov
je
imul
cmp
mov
adc
js
shlb
mov
xchg
and
or
movl
call
add
call
dec
inc
call
sub
repnz
jg
sub
repz
pop
aas
call
jb
das
aas
loopne
cmpsl
xchg
cs
or
or
pop
sub
psubw
xchg
call
add
inc
gs
dec
cmp
dec
insb
inc
lcall
call
push
jmp
xchg
adc
je
scas
sub
repz
mov
add
add
dec
mov
fcompl
shlb
add
dec
mov
mov
mov
cmp
add
add
push
bound
es
cld
mov
sbb
cs
cltd
div
icebp
mov
ret
jb
mov
mov
cltd
insl
das
leave
mov
jg
jmp
stos
icebp
icebp
call
xchg
incb
mov
fld
push
mov
mov
mov
sti
mov
xor
call
or
shl
sbb
sub
add
cmp
test
stc
mov
cli
xor
addb
inc
inc
jmp
dec
call
dec
xor
arpl
mov
add
aam
in
push
ret
sub
jle
inc
xchg
inc
add
add
jmp
mov
ret
repz
cli
add
add
stos
out
inc
add
or
outsb
rolb
mov
in
icebp
pop
jmp
daa
jg
addr16
push
je
or
jge
add
mov
jne
push
pop
leave
push
pop
add
and
cmpl
push
andb
je
push
mov
je
cmpb
cmp
sbb
jmp
add
add
out
jg
mov
jge
call
lret
mov
add
pushf
add
mov
in
add
les
and
cwtl
add
xor
stos
ljmp
add
cmp
fwait
enter
cmpl
mov
mov
fwait
sbb
pop
loop
rcrb
xor
sahf
aad
push
in
jl
mov
pop
add
lret
mov
inc
ds
jne
in
hlt
mov
js
sti
inc
das
loope
filds
push
das
or
lcall
repnz
ja
in
inc
mov
mov
mov
test
aaa
mov
es
mov
xor
mov
xor
push
test
add
flds
add
push
push
pop
rcr
xor
int
inc
mov
add
ljmp
cld
imul
cld
add
push
add
jmp
adc
mov
dec
cmc
fildl
int
mov
sub
cmp
and
cmp
sub
cmp
adc
and
adc
mov
inc
fcompl
aas
inc
loopne
aas
inc
in
imul
call
cltd
mov
add
jnp
popf
and
lods
or
jle
and
mov
ljmp
sub
aam
call
decl
shrb
cmpb
je
or
int3
cmp
arpl
lcall
je
in
icebp
fisttpl
je
jne
sub
in
ljmp
add
int3
add
incl
test
call
mov
jne
xchg
pop
xchg
pop
jae
js
mov
mov
inc
inc
mov
cwtl
push
push
mov
mov
sbb
insl
inc
inc
mov
cwtl
push
push
add
mov
add
pop
aaa
sbb
or
inc
mov
cwtl
push
push
xor
mov
add
cwtl
add
push
xchg
ss
stos
dec
incl
xor
flds
ljmp
lcall
add
push
mov
aaa
ret
dec
leave
test
mov
fwait
aaa
dec
lods
test
inc
lods
add
and
dec
xchg
test
inc
and
fadds
or
cmpl
cmc
xchg
fstl
aas
rcll
aas
lds
add
mov
test
testb
das
popf
jl
mov
mov
inc
jmp
sbb
push
jmp
mov
dec
cmp
mov
bound
pcmpgtb
sub
inc
jmp
mov
arpl
call
or
inc
icebp
or
inc
in
sbb
fimuls
cmpsl
push
test
call
push
fmuls
popf
jb
inc
mov
xchg
jb
add
iret
adc
add
std
jmp
add
cmp
add
pusha
pop
std
lcall
add
pushl
lds
lock
std
push
lock
call
add
xorl
inc
xchg
pop
jb
in
fisubs
pushl
cmp
cmp
add
sti
adc
xor
add
ljmp
or
stos
idiv
jo
rclb
push
mov
movsb
ljmpw
aam
rep
xchg
test
inc
out
or
pop
jmp
pushf
mov
adc
inc
inc
mov
inc
pop
pusha
mov
popf
mov
inc
xchg
cltd
add
mov
pop
xor
xchg
insb
inc
incl
andl
add
jle
les
mov
xchg
shl
int
inc
or
mov
cmp
addb
mov
in
sub
pusha
lds
mov
inc
jmp
test
lcall
cmp
ljmp
sub
fcoml
mov
stos
xchg
jno
sar
add
addl
mov
xchg
call
mov
cli
xchg
mov
add
movsl
std
cld
sub
out
test
xchg
call
mov
add
rcrb
inc
xor
cmp
cs
add
mov
inc
lea
je
and
xor
add
movsl
jae
add
stos
aad
mov
pushf
test
push
popf
sub
pushl
jnp
lcall
xchg
dec
xchg
popf
mov
pop
push
push
jne
std
or
je
push
ficomps
and
call
mov
xchg
call
xlat
mov
mov
and
daa
sub
movl
out
lods
pop
std
push
lcall
jne
pop
jae
dec
or
ljmp
rorb
push
mov
fs
and
aaa
xor
ljmp
sti
call
pop
std
or
icebp
push
jmp
std
jne
test
fcomps
shlb
jne
test
ret
push
mov
mov
test
je
pop
jae
xchg
movsl
dec
cmpsb
jmp
das
sbb
out
and
sti
out
sbb
decl
jb
adc
cwtl
add
xor
mov
cwtl
movsl
je
decb
call
lcall
cwtl
xchg
mov
mov
lahf
movsl
je
push
mov
mov
mov
push
inc
add
or
or
cmpsb
jno
add
pop
loop
movsl
cld
pop
add
rol
sbb
add
push
fisubs
sub
mov
jmp
loope
sub
fwait
insl
mov
jmp
inc
jg
xchg
das
lret
movsb
push
nop
out
mov
call
rolb
push
jmp
sti
fsin
mov
mov
fildll
sti
cltd
dec
movsl
cwtl
mov
icebp
fidivrl
in
add
cld
cmpb
add
aam
cs
call
pop
mov
addr16
nop
or
cmc
bound
cmp
test
enter
push
bound
test
mov
aad
push
or
je
cld
adc
inc
jmp
ss
outsb
mov
push
rcrl
aad
add
add
mov
jge
aas
pusha
fcomps
call
movsl
jge
test
mov
or
iret
je
jmp
push
mov
addr16
push
add
idiv
lcall
ljmp
fisubl
jne
insb
outsl
pop
pusha
fs
inc
mov
cld
mov
cli
pop
call
pop
dec
cld
push
pusha
cli
pop
call
adc
sti
decl
fs
leave
aad
add
push
add
imul
add
orl
std
pop
cwtl
mov
or
cmp
add
gs
imul
push
mov
xchg
jge
add
mov
mov
je
jo
pop
loope
int3
rol
aaa
mov
sub
sti
push
test
cmp
mov
call
add
sahf
addr16
imul
push
or
mov
mov
adc
icebp
stos
push
cmp
mov
or
adc
fistps
aam
push
inc
test
out
test
cmp
stos
or
cltd
adc
mov
add
mov
cs
or
mov
sbbb
add
fsubrp
pop
push
sub
jg
mov
add
rcr
or
icebp
ret
sub
popf
mov
mov
call
push
rcrl
or
lds
xchg
bound
out
push
and
call
sub
pushf
or
add
cltd
dec
mov
push
pushf
inc
mov
jmp
test
sarb
xchg
aaa
out
test
cld
xor
pushw
cmp
sub
add
popa
fwait
je
push
jb
add
popa
or
push
fwait
leavew
fs
add
test
jne
sar
jne
push
out
sbb
leave
add
insb
add
in
mov
jne
push
xchg
xchg
jmp
sbb
je
jg
inc
inc
pop
shl
adc
decl
daa
stc
cmp
ss
cmp
shlb
clc
pop
cli
imull
jp
or
cmp
pop
jl
clc
lea
stos
js
dec
lahf
sub
and
and
sahf
decb
rcrb
jno
sahf
insb
fcmovnu
push
jmp
lahf
je
pushf
pop
or
cmp
dec
mov
sarl
sti
mov
add
in
pop
or
cmpb
sbb
dec
cld
inc
xchg
stos
es
cmpb
cld
inc
push
mov
or
push
xor
inc
push
add
roll
cmpsl
sub
fisttpl
xchg
and
sahf
mov
lcall
mov
pushf
ret
js
sbb
adc
in
add
xchg
jge
imul
mov
or
sub
lcall
es
add
mov
pushf
or
lods
add
inc
popf
popf
push
xchg
pop
ljmp
add
add
jmp
xchg
add
out
imul
mov
sub
mov
cmp
cmp
sub
repz
mov
xor
insb
adcb
test
out
mov
or
push
bound
mov
cwtl
je
gs
push
mov
sub
in
scas
test
out
scas
cwtl
repnz
adc
add
add
dec
inc
push
or
das
insb
push
call
jae
push
out
jmp
lret
adc
std
decl
jne
decl
jne
mov
jo
adc
out
repz
insb
sub
mov
arpl
scas
in
call
shlb
inc
push
add
call
mul
or
pop
imul
jl
or
in
call
icebp
pop
and
jecxz
cmp
outsl
lcall
ljmp
leave
push
xor
mov
inc
add
test
cwtl
inc
add
test
ljmp
mov
fwait
out
bound
add
and
add
mov
je
add
pop
jae
dec
nop
stos
outsl
dec
nop
cltd
imul
xor
mov
stos
pop
and
cltd
xchg
mov
pushf
push
or
sarl
cmpsb
adc
test
loope
add
add
jge
jmp
fwait
enter
mov
cmp
rorl
xchg
sbb
lcall
das
lds
subb
add
fdivrs
icebp
stos
fsubrs
push
lcall
xchg
or
add
lcall
in
sub
xchg
pop
or
outsl
fstpl
and
stos
add
das
cltd
push
ret
in
jae
inc
cmp
notl
test
push
push
or
call
icebp
test
sub
ds
push
push
and
mov
sub
jnp
xchg
loop
adc
jo
cltd
addr16
fs
inc
jmp
rorl
xor
xchg
push
mov
out
lcall
mov
sti
xlat
int3
push
je
xchg
je
push
push
or
mov
lret
mov
jge
in
jecxz
imul
sbb
lcall
mov
insb
stos
out
xchg
std
jg
out
inc
push
mov
jp
xlat
add
shlb
ljmp
imull
add
mov
add
add
call
cwtl
add
call
lret
lods
mov
call
aaa
pop
shlb
add
mov
add
imul
ret
sbb
sub
cmpsb
cli
aas
inc
mov
stos
xchg
xor
add
out
cmp
jmp
stos
sub
jmp
inc
add
dec
scas
daa
add
stos
out
adc
xchg
mov
xor
add
mov
inc
mov
test
xor
icebp
inc
add
and
dec
pop
sahf
dec
out
ds
mov
test
xor
roll
inc
cmp
dec
adc
cmp
pusha
cmpl
pop
test
unpckhps
add
stos
shrl
xchg
add
shll
xchg
movsl
xchg
jb
popf
adc
xchg
lea
loop
sti
or
dec
adc
lahf
mov
or
adc
inc
dec
icebp
xchg
dec
xchg
or
cmp
fistl
xchg
sub
rcll
xchg
sbb
adc
test
movsl
int3
jg
call
imul
inc
lcall
inc
xor
sub
inc
mov
add
mov
aaa
ljmp
lods
test
or
mov
addr16
sub
cltd
lock
nop
out
fcoms
fadd
cltd
inc
mov
nop
enter
push
jb
test
xor
cld
nop
je
add
jp
adc
cld
add
inc
das
enter
fsubp
mov
add
and
loopne
push
stc
mov
add
mov
roll
xlat
jbe
or
test
and
push
inc
jbe
xor
sub
incl
lock
decl
sti
mov
jbe
pop
out
ret
add
ljmp
fiaddl
dec
cld
out
and
std
mov
js
cmp
xlat
mov
jae
fsub
inc
mov
push
ret
ja
jecxz
xchg
xchg
or
adc
add
pusha
xor
decl
xchg
out
cmc
xchg
cli
mov
mov
in
aaa
int3
push
imul
add
mov
call
mov
xchg
inc
jg
xor
mov
xchg
decb
add
cltd
addr16
cli
pop
add
scas
cli
out
mov
xchg
fidivrl
incl
jb
inc
fcoms
and
add
fwait
cmp
push
xchg
add
jmp
popf
std
inc
jmp
fwait
outsl
or
xchg
and
and
loope
add
mov
jb
cmp
mov
xchg
jb
nop
incb
fildl
popf
jp
mov
rcr
adc
xchg
sub
insl
sbb
mov
lcall
fwait
mov
inc
cmp
data16
xchg
dec
mov
inc
add
mov
adc
xor
push
ret
xchg
mov
inc
inc
jmp
cmp
into
mov
es
sub
add
xor
cmpsb
sbb
mov
loop
sbb
cmpsb
mov
das
dec
add
aas
jmp
insb
sbb
sbb
or
dec
mov
dec
mov
mov
je
das
push
or
add
scas
push
mov
aam
in
aam
cli
push
out
inc
pushl
mov
loop
jb
mov
jge
add
mov
add
roll
jb
or
imul
jno
cld
call
xlat
decl
add
rorb
jmp
and
push
out
inc
inc
out
xchg
jb
mov
lcall
add
in
jne
out
push
call
lods
shlb
add
mov
inc
es
mov
idivl
call
mov
push
sbb
jae
add
sbb
pop
add
jne
out
or
pushl
xchg
sarb
and
pop
decb
ret
add
cs
cld
movsl
add
inc
movb
fisttpll
decb
lcall
xchg
xchg
cwtl
add
sti
adc
mov
add
mov
add
add
pop
dec
mov
je
imul
sub
add
rcll
sbb
sbb
cltd
mov
jp
stc
jl
xchg
sub
or
adc
int
sbb
and
jg
scas
pop
aad
movsl
mov
adc
fwait
cmp
xchg
mov
test
add
cmpsb
and
mov
cmp
outsb
xor
lcall
xchg
pop
cmp
inc
test
mov
std
out
add
sahf
negb
inc
jge
cmp
movsl
add
mov
mov
not
std
out
jmp
repnz
or
not
cmp
je
xor
mov
mov
cmp
jae
lea
insb
and
incb
cmpsl
jmp
sub
add
xor
notl
ja
jne
xchg
insl
in
lock
test
outsb
std
jge
push
ljmp
or
rcll
or
shrb
push
cmc
pushl
std
decl
inc
inc
pop
or
jbe
fdivr
jne
call
sbb
jb
xchg
div
add
insl
std
call
lock
adcl
jmp
add
out
mov
sbbb
cmpsb
jl
out
out
cltd
cmpsb
notb
inc
rorb
aaa
mov
push
xlat
imul
lcall
cli
xchg
push
out
or
cmp
decl
add
imul
sbb
cmp
add
scas
push
xlat
or
mov
icebp
or
imul
dec
fwait
testb
lds
outsb
mov
mov
xchg
jns
jne
cltd
mov
mov
xchg
adc
push
adc
xchg
gs
cmp
mov
mov
mov
xchg
xchg
hlt
add
mov
jb,pn
cmp
add
addb
add
xchg
and
add
test
xor
repnz
xor
jmp
mov
jmp
jle
repz
inc
or
inc
jmp
inc
fcomps
jmp
mov
lea
inc
add
into
cmc
out
mov
adc
lds
add
pop
aaa
lcall
xchg
rorb
addb
push
divb
mov
mov
cmp
sti
push
ret
mov
out
mov
incb
outsb
sti
push
sub
jne
imul
movsl
xchg
inc
add
add
addb
cmc
pop
call
sub
jne
imul
add
mov
sbb
jp
pushl
jge
jne
imul
ret
push
mov
shrb
cmp
imul
inc
sub
ficomps
add
or
cmpl
lcall
add
lcall
mov
flds
add
lcall
mov
lcall
mov
cltd
add
cmp
lcall
mov
pop
add
leave
push
adc
xor
mov
pop
add
es
add
mov
decl
lahf
or
js
sti
repz
jmp
jp
sbb
push
sbb
stos
add
add
repnz
mov
add
add
mov
add
hlt
fs
inc
stos
add
cmp
xchg
add
fstpl
loope
cmpsl
inc
mov
xchg
out
add
dec
call
jmp
xchg
cmp
push
roll
add
std
repz
add
dec
mov
cltd
xor
test
out
add
std
push
js
mov
add
test
popf
fsubr
aad
jmp
mov
fdivl
call
cmp
dec
inc
into
movsl
imul
inc
or
sub
mov
sbb
jmp
xor
jnp
ljmp
jnp
or
jl
loopne
icebp
lcall
ljmp
jl
lcall
stos
aas
add
lods
std
jne
jl
mov
lret
loop
xchg
sbbl
dec
sbb
sub
xchg
jmp
jge
pushl
xchg
out
sub
xor
pop
pop
mov
add
cli
ljmp
adc
sub
int
out
add
aas
push
add
mov
repz
push
push
add
cs
icebp
push
movl
push
add
inc
sarb
ja
lret
decb
cwtl
or
out
bound
add
jl
add
push
je
rclb
mov
movl
test
test
push
add
xor
add
adcb
addb
mov
sbbb
js
adcl
call
sub
sti
push
cltd
ret
lods
shlb
jnp
jg
add
stc
lds
jg
xor
rol
mov
jg
mov
add
add
shr
xor
addl
jg
pop
mov
sarb
dec
aad
inc
mov
jg
push
sahf
ja
push
cmp
jg
inc
or
div
cmp
mov
jmp
mov
push
call
outsl
idivb
gs
scas
cmp
mov
inc
jg
sahf
mov
call
mov
data16
lds
cmp
mov
add
data16
call
push
ss
testb
je
outsl
ljmp
stos
sti
std
lcall
cmp
fdivrs
out
dec
cmp
loop
cmc
lcall
jmp
dec
or
std
out
adc
lcall
xorb
loop
std
incl
clc
mov
negl
and
fwait
cmp
push
in
lcall
in
in
dec
pop
cmp
dec
jmp
std
jne
out
ret
add
ret
push
mov
xchg
cld
insl
add
sbb
call
imul
enter
testl
dec
sub
sti
inc
sahf
or
ljmp
add
jle
je
lret
push
mov
dec
shll
sbb
mov
dec
shll
cmc
mul
fcmove
dec
loope
sti
rcrl
je
or
test
inc
mov
add
sti
sar
adc
push
adc
data16
aam
out
stc
jo
jl
or
mov
pop
jl
lldt
loopne
lahf
lret
inc
negb
mov
sbb
lret
sub
and
jl
inc
lds
pushf
mov
jl
adc
pop
cmp
pop
test
inc
mov
je
jmp
imul
test
stc
mov
call
leave
xchg
jnp
jg
cmc
mov
jp
addb
int
outsb
xor
jnp
jmp
mov
add
repnz
cmc
add
xor
jmp
js
call
stc
adc
jmp
xchg
loop
cmpsl
cli
jp
adc
add
les
jmp
hlt
mov
xor
pop
addr16
sti
sar
pop
mov
sarb
pop
jb
loop
das
add
in
cmpsb
add
ljmp
inc
sub
shl
jno
add
add
mov
pop
pop
aad
fcmovu
mov
in
dec
push
jne
sti
jae
add
call
fstpl
mov
loop
adc
xchg
xchg
cmp
setp
inc
sti
jae
scas
sbb
adc
inc
push
add
sti
jmp
or
push
mov
lock
call
int3
mov
inc
inc
xlat
dec
out
icebp
idiv
push
iret
or
ljmp
sub
incl
clc
testb
and
incb
loopne
rol
aad
pop
in
inc
sti
aam
call
call
aaa
cmpsb
jle
movsb
daa
testl
add
xchg
pop
pushl
or
mov
fidivrl
addl
adc
in
xchg
subb
push
call
xor
cmp
jb
clc
subl
xchg
cmpb
jl
xchg
xor
adc
cltd
out
lock
jmp
xchg
jmp
add
add
add
add
add
add
add
add
shll
dec
jo
jl
js
jnp
out
sbb
lds
jmp
push
daa
test
add
add
cmc
mov
xor
clc
ja
popl
xchg
lock
aam
imul
loope
lcall
inc
ja
jmp
mov
js
xchg
add
js
jo
idivb
jmp
inc
jmp
cmc
ja
aam
imul
fs
incb
ja
inc
jl
pushl
mov
je
movsl
aas
dec
push
movsl
mov
aas
pop
testb
addr16
imul
je
je
gs
dec
fisubs
int
ja
inc
add
jmp
push
decl
cld
jae
jg
dec
lcall
and
sti
std
orl
cmc
decl
je
and
ljmp
jle
call
xchg
push
data16
mov
iret
and
std
call
repnz
decl
pop
inc
call
sti
std
call
call
pushl
cmc
incl
mov
add
or
mov
lock
call
cmc
decl
clc
jae
mov
inc
js
fidivs
adc
mov
inc
jo
test
sbb
cltd
test
out
xor
xorl
imul
fdivrl
xor
jo
popa
ret
dec
inc
pop
les
data16
incb
push
test
inc
sub
jecxz
and
out
mov
sub
arpl
and
cmpsb
xchg
jns
jnp
imul
ja
mov
jnp
push
leave
cld
add
add
jne
add
enter
imul
lds
es
mov
fisttpl
ret
lods
jbe
js
out
loopne
jge
daa
add
add
add
imul
or
mov
lcall
popa
addr16
inc
in
dec
ljmp
xorb
jne
add
mov
cmpsb
ret
jnp
push
jge
js
je
jnp
jae
loope
xchg
inc
out
dec
shl
into
mov
inc
inc
iret
dec
jae
sub
xor
je
loope
and
push
shl
push
add
mov
add
jmp
mov
adc
out
pop
jg
dec
je
outsl
negb
ret
aad
je
loop
adc
mov
push
push
and
hlt
jae
mov
mov
add
dec
push
call
pop
adc
add
jmp
xchg
cwtl
ljmp
cmpsb
std
mov
in
incl
jb
call
push
sub
pusha
jmp
add
popa
inc
inc
xchg
jmp
fdivrs
jmp
ljmp
ljmp
lock
aas
add
mov
testl
out
dec
add
xchg
rolb
dec
push
add
mov
test
pusha
push
test
jbe
inc
add
incb
mov
push
lock
imul
pop
je
mov
pop
dec
test
dec
je
cmp
push
test
shll
and
pushl
test
je
xchg
decl
cwtl
mov
jae
xor
mov
imul
jg
add
je
mov
pop
arpl
stc
fwait
jae
cmp
jae
xor
jne
into
add
cltd
jl
sbb
jne
jno
adc
jg
je
jno
insb
lock
je
adc
cmc
jl
in
sub
je
jo
pop
enter
push
adc
xor
jo
je
popa
mov
adc
into
sub
test
add
and
add
adc
je
push
jne
push
jo
je
adc
cld
jo
je
adc
imul
loopne
sub
cs
mov
xchg
outsl
adc
push
mov
out
inc
outsl
sub
insl
push
pushf
xorb
jp
inc
add
mov
inc
outsl
sarl
mov
mov
ja
cmpsb
addr16
negb
or
pop
stc
test
mov
add
stos
mov
add
js
push
inc
into
sar
clc
in
inc
cld
clc
push
aas
add
sub
sub
call
pushl
imul
pusha
inc
addr16
cmp
call
imul
decl
lds
add
fists
add
push
call
push
cmp
mov
out
cmp
addb
js
je
scas
roll
dec
out
xchg
add
or
jbe
push
paddd
clc
push
data16
xor
mov
rcr
xor
pop
sbbl
ljmp
insb
inc
adc
mov
or
sub
jae
jno
bnd
pop
lret
loope
ror
cld
arpl
push
inc
inc
test
lret
push
inc
testb
jbe
mov
sti
adc
fiaddl
negb
add
pushf
and
call
pop
pop
cli
stc
xorl
jle
or
pop
add
sub
adc
rcrl
lock
pop
in
jno
inc
movsb
jo
add
lods
rclb
ret
mov
cmpsl
add
div
pop
mov
sbb
jno
stc
add
jl
add
inc
pop
imul
fidivrl
jno
stc
rolb
insb
aad
subb
xlat
and
add
cs
sub
incl
imul
fistpll
outsb
add
or
test
add
incl
sahf
mov
je
cmc
fisubl
into
fs
lods
into
imul
ja
cmp
cmp
scas
imul
pop
xor
pushf
push
je
mov
pop
add
decb
out
int
sub
add
xchg
jg
cmc
add
shrl
add
pop
fisubl
sub
mov
ja
rcrb
sub
addr16
gs
cli
cli
push
jmp
mov
insb
incb
xlat
dec
incl
dec
lahf
inc
decb
push
std
out
roll
incl
sbb
jne
inc
cli
xor
pushf
std
push
scas
add
add
mov
sub
sub
std
pop
push
roll
mov
fs
rolb
jo
and
lds
call
fwait
push
dec
xchg
add
add
ss
xchg
jle
add
insl
out
mov
rolb
add
jmp
je
orb
add
lcall
mov
mov
add
push
hlt
aam
pop
fisubrl
or
daa
add
pusha
insl
push
aas
cmp
jle
negb
cmp
sbb
sti
mov
push
ret
dec
or
dec
jg
pop
mov
aas
insb
cmpb
inc
adc
pop
mov
inc
ja
scas
add
push
insb
psadbw
jge
jmp
jl
lods
call
mov
lret
aaa
sub
mov
repnz
call
add
js
add
imul
jp
popf
cmp
std
call
fnstenv
add
push
outsl
popa
cmp
adcb
jl
int
cmp
or
jnp
sbb
cmp
xchg
push
mov
cmp
cmc
cld
fld
ret
pop
addr16
or
add
add
data16
mov
or
addr16
dec
xor
out
cmc
xor
add
shll
imul
and
add
push
add
repz
xchg
std
or
je
test
jmp
gs
push
jns
roll
cmp
bnd
mov
adc
mov
std
jne
dec
out
movsl
pushl
out
insb
add
jmp
out
sub
std
sbbl
jae
dec
mov
push
add
jne
xchg
daa
add
shlb
add
add
call
out
data16
mov
ss
sti
dec
daa
add
jb
mov
out
sub
std
push
dec
mov
xchg
std
jne
pusha
pop
and
aaa
imul
pop
imul
imul
stos
add
pop
add
inc
mov
aad
pop
push
mov
insb
imul
inc
inc
cmp
add
push
xchg
dec
jg
pop
jne
pop
push
incb
push
mov
jle
out
ret
jmp
pop
sar
pop
add
out
clc
ret
jno
lds
stos
cld
mov
push
add
add
idivb
gs
cltd
mov
test
cmp
fs
pop
sbb
push
mov
add
lds
popa
fstpl
inc
gs
and
imul
pop
mov
stos
stc
inc
out
push
out
ljmp
aaa
push
mov
sbb
add
loope
jmp
jne
inc
out
idivw
cld
out
in
loop
in
add
fldenv
add
clc
mov
cmpsb
cwtl
cld
out
aad
push
add
jmp
inc
or
mov
cmpsl
add
mov
call
hlt
inc
pop
jmp
mov
aas
jmp
add
in
pop
adc
fs
push
add
push
loopne
out
or
std
in
mov
or
dec
push
std
leave
adc
lret
jnp
push
push
jg
inc
push
pop
fucomi
or
inc
ljmp
leave
dec
call
aam
ljmp
dec
out
add
fdivr
andl
je
ljmp
sbb
jge
std
push
test
inc
out
push
loopne
ljmp
aad
je
lea
jmp
adc
jecxz
pop
add
add
add
dec
xor
out
sub
lds
pop
ljmp
inc
sub
xchg
xchg
jns
add
dec
gs
scas
out
adc
cmc
pop
in
imul
adc
pop
pop
leave
pop
add
adc
add
add
mov
movsb
test
add
fnstsw
dec
jg
jmp
data16
jmp
pop
enter
xor
movsl
lret
xchg
jp
jge
jae
add
pop
add
std
popa
jno
and
call
and
popa
jno
ss
mov
add
pusha
movsl
jns
mov
je
push
call
imul
mov
outsl
ljmp
inc
in
call
add
popa
push
sub
cmp
mov
movsl
jmp
mov
adc
test
mov
mov
rcll
mov
jmp
pop
dec
push
mov
and
test
push
pusha
je
cmc
sub
jmp
ret
cltd
in
or
mov
and
and
lcall
add
incl
mov
jmp
sarl
aad
inc
add
add
movsb
push
jo
push
jg
push
add
xor
rorb
push
lock
push
in
push
mov
pop
lcall
pop
mov
call
data16
mov
add
in
inc
out
or
add
dec
inc
xchg
xchg
out
pusha
add
or
cmp
push
push
insl
bound
int
cmpsb
add
jne
in
int
cwtl
loop
jne
mov
stos
shrb
pop
arpl
std
jg
addr16
ret
decl
jnp
ret
stc
jecxz
add
test
push
mov
and
push
adc
inc
cmp
mov
ret
ret
outsb
addb
cwtl
mov
push
mov
add
ret
add
repnz
test
inc
ret
ljmp
or
mov
push
mov
out
add
add
jmp
mov
hlt
sub
jg
repnz
enter
mov
add
add
jmp
in
icebp
out
bound
or
add
lds
in
fnstenv
add
loope
fbstp
xlat
shrb
into
popa
ss
mov
popa
or
xlat
call
movsl
testl
xchg
lea
mov
testl
in
mov
pop
std
aam
fs
mov
add
icebp
insb
out
add
add
ss
push
out
ficomps
adc
fld
add
bound
mov
push
pop
scas
addr16
mov
icebp
jmp
ret
out
sbb
pop
stos
jg
pop
aad
call
sti
sub
or
inc
sub
ret
in
inc
pop
mov
push
add
or
shl
std
sub
add
outsb
add
cmc
or
add
add
daa
xchg
lea
nop
std
mov
loop
dec
jns
add
or
cvtdq2ps
ds
add
jmp
call
or
mov
inc
test
std
jmp
mov
push
mov
sbb
jmp
mov
decb
popa
mov
ror
stos
call
sbb
xchg
jae
pop
xor
add
push
add
mov
out
add
cmpsb
pop
dec
out
add
mov
pop
inc
sub
push
pop
je
pop
test
aam
inc
add
cmp
add
dec
pop
out
mov
add
push
add
jle
and
pop
jo
call
inc
arpl
mov
xor
xor
pop
jne
mov
sbb
pop
rcrl
dec
in
add
inc
in
add
pop
inc
lcall
es
add
mov
cwtl
add
pop
fstps
sti
pop
rcrb
xchg
add
pop
fnstenv
add
inc
xor
or
sti
flds
rcl
inc
mov
add
xor
mov
sub
sbbl
and
pop
jmp
ret
jmp
add
push
lea
enter
enter
mov
push
xlat
pop
std
cld
outsl
and
out
icebp
pusha
pushl
jl
push
pop
jmp
push
mov
aad
jmp
cli
imul
js
callw
std
lcall
inc
fdivrp
je
testl
and
or
lret
sti
cmp
fimuls
xor
movsb
dec
data16
add
inc
inc
pop
add
cmp
je
mov
cld
enter
es
inc
fwait
add
add
cmpb
add
add
call
orl
jae
mov
cld
test
mov
xchg
add
pop
mov
inc
xchg
xchg
push
mov
shlb
decl
in
sbb
mov
push
test
ds
lcall
add
jle
mov
movsb
imull
add
bound
add
push
push
sub
sbb
xchg
dec
pop
jb
mov
add
stc
imul
lds
roll
popf
add
mov
push
push
dec
add
add
imul
add
push
jle
jecxz
ss
add
leave
lds
mov
rolb
add
mov
int3
mov
jmp
add
add
add
add
add
inc
int
scas
shlb
stos
push
jns
call
pop
cmpsl
add
mov
fcmovb
call
pop
jb
inc
movzwl
outsb
cltd
push
xchg
pop
fldcw
rcrb
xchg
call
rol
jmp
stos
adc
imul
ret
in
out
roll
jge
jmp
ret
call
mov
rolb
outsb
and
inc
test
mov
add
call
mov
mov
add
jmp
jbe
sti
push
std
add
jmp
inc
repz
jns
add
xchg
ret
or
in
sbb
inc
aam
add
add
call
arpl
sub
jmp
call
addl
add
arpl
sub
inc
add
add
xchg
std
add
push
addb
mov
lods
out
adc
add
cli
stos
out
add
cld
add
mov
sarb
cvtps2pd
jmp
or
push
imul
enter
jmp
and
or
pushl
scas
add
jno
add
cmpsb
mov
decb
xchg
jmp
stos
sub
addb
jmp
sar
icebp
xor
push
mov
es
fisubrs
inc
mov
push
push
addr16
jmp
sarb
shrl
je
incb
jmp
shr
test
test
out
stos
push
enter
rclb
mov
cmc
or
fldcw
push
in
mov
push
or
add
add
add
imul
push
sbb
pop
lds
sub
add
add
xchg
mov
or
int3
incb
xchg
out
add
or
lret
fistl
test
lds
pop
mov
add
push
and
add
js
push
add
sbb
push
inc
and
inc
jmp
mov
mov
data16
adc
adc
add
push
xlat
push
out
ret
xor
inc
add
xchg
and
sub
dec
jno
decb
int
adc
rcll
add
in
std
mov
imul
lock
push
mov
dec
sub
push
mov
cmc
cmp
aaa
fld
jmp
mov
dec
add
loop
jmp
mov
cmpsb
stc
mov
mov
push
lahf
xor
ret
push
add
add
add
movb
add
std
call
in
add
add
int3
js
ret
push
add
aas
add
out
lret
push
xchg
add
aas
add
out
rcll
add
aas
add
out
fistl
add
aas
add
add
and
mov
cltd
add
fisttpl
lods
inc
mov
cltd
add
mov
daa
push
cld
jno
add
fwait
pop
mov
sbb
jmp
push
mov
or
lcall
mov
sbb
jecxz
stos
inc
mov
sbb
fwait
clc
stos
inc
mov
sbb
mov
ja
sub
sbb
fwait
mov
xor
sbb
jecxz
stos
inc
mov
test
test
sub
jp
cmpsl
add
and
stos
jle
sub
cmpsl
add
and
stos
jle
push
sub
cmpsl
add
and
stos
jle
push
sub
stos
cmpsl
add
add
sub
stos
daa
add
and
lods
incb
sub
stos
daa
add
and
lods
incb
mov
add
and
lods
incb
cmpsb
sub
test
imul
add
and
stos
jle
add
jge
sub
sar
out
push
test
dec
and
push
sar
cmpsb
mov
and
adc
cltd
push
test
dec
and
and
xchg
push
test
dec
and
gs
flds
test
dec
and
push
ret
loope
push
sub
ret
fnstenv
push
sub
dec
and
add
ret
mov
dec
and
sub
lcall
ret
adcl
and
jmp
nop
and
pop
add
and
jo
add
add
and
mov
or
add
and
mov
add
and
mov
sbb
data16
and
add
add
and
jo
sub
add
aas
add
add
aas
add
and
cmpsb
add
lret
int3
mov
xlat
dec
add
pop
add
ret
idivl
pop
add
cld
add
inc
data16
mov
ret
mov
or
add
xlat
dec
pop
push
push
mov
mov
pop
xor
test
mov
pop
add
jl
add
sbb
or
pop
mov
cmp
jno
inc
add
pop
iret
pop
push
add
add
or
pop
mov
lock
add
add
add
lods
add
add
add
call
idiv
dec
call
add
mov
add
or
ret
leave
dec
xchg
sti
or
call
add
add
mov
add
add
adc
add
jo
jl
std
inc
mov
add
je
aam
paddsw
mov
call
roll
icebp
mov
cli
add
mov
add
call
mov
add
in
mov
add
call
cmp
add
mov
add
test
mov
add
jmp
mov
incl
add
xchg
out
add
dec
add
push
int3
jg
push
add
sbb
add
mov
pushf
int3
push
add
add
cld
rcrb
add
push
and
lcall
add
movsl
inc
lea
mov
sbbl
std
lea
dec
jb
add
std
add
push
add
cmpsl
das
pop
mov
dec
add
xchg
lret
jg
mov
jl
add
add
cmpl
pop
add
jl
or
add
pop
fwait
jp
gs
xor
mov
pop
aad
inc
fptan
add
pop
add
jle
mov
ret
mov
dec
push
add
pop
add
std
std
call
jp
imul
mov
dec
push
add
pop
add
ret
mov
push
add
inc
add
add
aaa
repnz
add
and
cwtl
fdivr
popa
inc
cmp
inc
sbb
test
js
call
add
repnz
add
add
xor
cmpsb
push
test
jb
int3
pop
scas
scas
sbb
dec
sti
imul
sti
jmp
sbb
xor
pop
sbb
inc
shlb
je
add
add
or
jl
pop
outsl
dec
subb
jl
pop
mov
subl
and
add
stos
shl
jp
add
repnz
test
inc
inc
jmp
xor
add
mov
in
subb
add
add
jmp
insl
or
aad
mov
insb
je
cmc
push
ljmp
push
jl
in
mov
add
jmp
mov
incb
scas
add
add
orl
cmpsl
add
incl
mov
fldl
mov
test
pop
add
pop
ret
add
mov
incb
rcrl
add
addr16
pop
mov
scas
jg
add
add
sbbl
adc
add
mov
push
add
add
jne
out
lds
pop
push
add
xlat
inc
xchg
mov
orl
cmp
lcall
push
inc
xchg
pop
add
filds
mov
jmp
jnp
mov
fdiv
add
pop
add
inc
bound
xor
jp
mov
cmp
test
fwait
sbb
mov
push
push
inc
stc
fidivs
sbb
mov
clc
mov
sti
loope
test
mov
int
dec
add
test
cmp
out
add
jmp
call
decl
out
add
add
jp
ljmp
insb
inc
stos
jl
add
add
jbe
hlt
mov
ljmp
vpsubsb
inc
jl
call
inc
popa
jle
std
call
xor
aas
pusha
hlt
mov
inc
mov
flds
pop
push
ljmp
call
mov
call
add
fnstcw
add
add
add
call
popa
inc
jo
repnz
mov
inc
mov
cmp
sbb
ja
stc
sub
jo
ljmp
sbb
call
mov
std
call
loope
call
xor
mov
add
out
test
jecxz
aas
dec
insb
sbb
cmpsl
add
lcall
push
add
add
sbb
add
push
add
add
add
cmpsl
mov
add
addr16
add
shll
dec
add
push
push
pushf
dec
and
pushf
aam
adcb
add
cmp
xchg
inc
jmp
jo
fdivrs
xor
shll
add
dec
xor
add
stos
push
add
sub
jb
lahf
add
jb
outsl
inc
out
fwait
jg
mov
daa
inc
push
inc
jo
xlat
ss
imul
movsb
pop
jl
add
es
decb
cmpl
fisubl
lods
push
add
add
mov
sub
add
mov
incl
add
sarb
fcompl
add
push
inc
loopne
ss
test
dec
inc
dec
aas
sub
jns
adc
add
add
add
jo
cltd
mov
call
add
inc
inc
roll
push
jo
xchg
and
add
nop
add
or
mov
add
push
and
add
mov
adc
add
add
roll
inc
decb
sbb
mov
test
in
add
jmp
roll
jo
jmp
mov
mov
sub
push
subl
rorl
push
add
mov
popa
stos
jns
jmp
int
add
inc
pushf
and
mov
ds
jmp
pushw
add
loop
sbb
dec
out
sti
aas
ds
pop
stos
mov
adcl
fldt
push
orl
push
mov
es
push
pop
shl
insb
ret
std
pop
and
pop
ret
add
xchg
add
add
cld
jle
cmpsl
add
adc
and
fwait
je
cmp
and
cmp
popf
std
lcall
out
pop
ret
std
mov
out
lret
stc
nop
ret
mov
mov
int
and
push
xlat
add
mov
test
mov
sub
rol
or
sub
add
inc
lods
adc
sub
add
jno
ret
mov
pop
push
add
sub
mov
sub
mov
add
push
add
pop
push
add
sub
inc
aaa
cld
pop
add
sub
add
sub
xchg
movsb
out
mov
addr16
out
mov
inc
add
cmp
mov
adc
add
add
add
add
fldl
push
sbb
mov
fldenv
fisubs
add
aaa
call
pop
xlat
aas
aaa
call
stos
out
les
xor
xchg
sub
mov
in
adc
cmp
jg
jmp
add
adc
add
add
lods
add
inc
or
mov
add
cltd
sbb
mov
cld
mov
add
jo
adc
mov
add
paddsw
add
mov
add
and
and
cmp
sahf
xlat
shl
xchg
mov
add
mov
incb
jmp
inc
push
add
mov
out
stos
roll
add
or
push
push
das
mov
in
aaa
dec
push
mov
xlat
mov
rorb
and
cmp
decl
fs
jmp
out
lea
inc
and
call
std
mov
mov
pop
xchg
addr16
std
cmp
jno
mov
pushf
mov
jmp
add
ljmp
add
or
scas
inc
add
pop
xchg
add
mov
mov
cmp
invd
pop
or
dec
daa
xchg
add
aaa
cmpl
mov
add
inc
mov
xchg
xchg
test
add
sub
add
lret
daa
push
add
sub
xchg
cmp
test
aam
addr16
sub
or
in
add
add
jne
add
add
popa
cmp
rorl
out
mov
add
mov
adc
rolb
sti
popa
cmp
cmp
idivl
sub
mov
std
call
test
cmp
pop
movsl
cmp
movsl
cmp
leave
lahf
out
aad
cli
cmp
add
imul
int3
out
adc
pop
xlat
add
in
cmp
add
fs
aaa
jmp
cli
mov
into
cli
dec
or
mov
jecxz
jae
add
sbb
push
adc
adc
sbb
fidivrs
dec
call
or
test
pop
sub
or
mov
push
std
inc
test
pop
jno
add
lret
and
xor
push
jmp
outsl
mov
out
shlb
incb
or
and
or
and
push
dec
mov
fsub
out
pop
sti
std
sub
in
mov
or
mov
mov
sar
add
adc
and
sbb
je
sahf
and
cmp
cmp
add
inc
push
push
pop
enter
sti
std
mov
push
push
mov
dec
dec
mov
sti
mov
lods
enter
and
sub
into
or
into
pop
add
mov
aas
adc
scas
into
and
mov
cmp
cmp
lcall
sbb
dec
add
add
cmp
mov
mov
mov
rorl
mov
push
add
cmp
cmp
cmp
jmp
sbb
jp
fisttps
jb
sbb
mov
pop
cmp
adc
test
mov
jnp
int
sahf
test
sub
mov
jle
scas
mov
mov
sti
subb
jbe
into
mov
lods
mov
in
add
std
call
decl
xor
sub
push
hlt
push
int3
in
ss
ret
sub
clc
add
add
inc
sbb
imul
ret
jns
ljmp
add
sar
std
jg
in
cmp
adc
dec
test
mov
mov
pusha
iret
test
cmp
pop
mov
add
fs
push
pusha
mov
mov
jmp
mov
add
in
add
cmp
in
add
hlt
mov
bound
xor
in
add
call
sar
decl
cmpsl
test
mov
adc
xchg
xchg
jmp
mov
mov
sbb
pop
std
popf
adc
incl
cmp
add
addr16
xchg
mov
mov
scas
dec
and
mov
ljmp
daa
decb
shlb
inc
mov
jno
mov
and
imul
dec
and
js
mov
sub
inc
push
shlb
push
mov
push
test
popf
inc
push
inc
xchg
std
call
xchg
adc
adc
mov
ds
adc
ljmp
test
add
jmp
push
xor
loopne
mov
xor
xor
add
dec
leave
call
movsb
jge
ret
jp
push
add
ds
add
mov
in
add
mov
fcoms
push
or
popa
inc
mov
jl
fdivs
sub
dec
cmp
xchg
add
add
int3
sti
stos
add
add
add
jg
add
add
lods
out
cmpb
out
jg
add
add
inc
xchg
hlt
call
xor
inc
ss
jns
jae
mov
add
mov
xchg
jnp
add
add
call
in
stos
cmp
rorl
cs
lds
inc
int
mov
cs
lods
das
mov
mov
and
fidivrs
inc
out
rolb
sarl
shll
cmp
mov
shlb
and
es
push
cmp
das
inc
jne
ret
insb
push
and
xchg
add
les
and
and
jge
mov
add
xlat
jns
jbe
sbb
and
pop
mov
es
inc
scas
int3
call
or
and
mov
push
push
in
ret
out
imul
pop
and
jno
stos
sbb
add
add
sbbl
jge
scas
mov
sbb
add
push
dec
mov
sahf
repz
xrelease
mov
mov
ljmp
icebp
scas
jge
mov
mov
mov
sbb
into
xor
out
into
and
cld
movb
pop
add
xchg
scas
and
sbb
test
push
add
add
scas
mov
mov
jl
roll
jle
rorb
sbb
cmp
cmp
fmull
xor
add
jge
js
call
or
xchg
aaa
lock
inc
inc
orl
sbb
sbb
enter
xor
add
adc
jno
cltd
cmp
xor
je
and
jno
mov
aaa
cs
daa
sbb
in
add
call
lods
out
add
add
call
cmp
xchg
sarl
jge
sbb
xor
dec
xor
decl
aad
bound
jle
into
sub
sarl
orl
xor
jmp
mov
mov
or
outsl
test
inc
cld
cwtl
cmp
fwait
inc
imul
and
int
and
push
or
and
cli
and
bound
jb
mov
hlt
out
test
jns
add
xchg
sub
add
and
pop
cld
and
incl
xor
std
push
les
sub
push
ljmp
add
sub
aam
mov
test
clc
mov
call
add
mov
cmp
adc
jmp
mov
and
inc
push
mov
mov
cmpsb
mov
and
push
inc
cmpsl
int3
call
pushf
mov
mov
sbb
test
push
add
xor
jae
andl
add
inc
call
and
mov
or
pop
rorb
icebp
data16
loop
pop
loop
sbb
test
push
jno
mov
rorb
mov
jp
add
imul
push
ss
imul
scas
mov
jb
popf
in
outsl
rcrb
popa
enter
sarl
scas
sbb
xor
in
push
dec
nop
sub
xchg
jmp
icebp
sub
js
fst
call
mov
js
aam
shll
add
into
cltd
js
jp
out
sbb
xor
fucomp
cmp
mov
ss
fisttpl
jge
sbb
xor
sub
popf
jmp
int
fnsave
out
pushf
and
es
stos
mov
and
pop
mov
and
xchg
les
icebp
es
in
mov
data16
in
mov
out
jmp
add
daa
add
filds
jnp
mov
add
mov
mov
lds
rcrb
das
bound
jecxz
jb
fcmovnbe
mov
sbb
decb
mov
sub
ljmp
adc
imul
call
aam
cmp
add
add
mov
push
push
push
pushf
jmp
push
daa
mov
and
push
mov
int3
mov
push
out
repnz
fstpt
ret
loopne
mov
cmp
ljmp
add
add
add
push
add
jmp
mov
xchg
test
mov
sub
ljmp
aam
add
in
pop
das
push
mov
and
incl
shlb
lds
mov
mov
and
add
add
scas
stos
sbb
add
or
in
jge
mov
dec
jge
mov
sbb
add
dec
fidivrs
aaa
push
fidivs
inc
fimuls
stc
mov
add
test
mov
add
in
mov
xchg
add
andb
add
and
jmp
out
jle
add
int
cmp
lods
mov
js
aam
mov
adc
jb
arpl
sti
jp
loopne
sbb
das
clc
and
cmpsl
popf
in
sbb
xor
int3
repz
jno
loope
ja
add
js
jge
frstor
shll
cs
xor
hlt
ds
cwtl
fisttpll
add
inc
int
or
jns
add
cltd
ja
push
mov
les
jb
loopne
xchg
insb
ja
bound
and
lods
sbb
mov
adc
add
pop
stc
addb
lods
pop
hlt
mov
popa
std
andb
cmpsb
call
ret
push
or
xchg
mov
and
leave
dec
cwtl
and
shlb
jmp
psrlw
sbb
add
inc
and
add
cmpsl
push
cmpsb
inc
and
ds
mov
inc
push
cmp
fscale
test
incl
aam
incl
int3
imul
sub
dec
mov
cs
clc
fimull
push
pushf
jmp
call
pop
pop
ret
jg
cmpsb
inc
and
sbb
out
jg
sub
call
idivb
loop
jnp
jg
add
dec
add
sub
cmp
out
scas
xor
xchg
sub
pop
loope
cmp
add
cwtl
aas
aaa
jl
add
jge
cmp
out
cli
incb
cwtl
push
add
dec
sbb
inc
in
fisttps
inc
fbld
push
mov
and
push
push
sbb
add
lods
mov
stc
pop
add
jmp
pop
in
fldenv
add
mov
add
and
test
aad
jmp
mov
mov
ret
jl
cli
in
add
add
clc
pushl
popa
jge
add
ljmp
jg
decl
jae
xor
and
leave
add
pop
or
repnz
mov
add
jns
add
add
in
add
mov
repnz
add
add
jmp
shll
jo
adc
mov
and
cmp
and
daa
mov
add
pop
in
mov
add
ror
out
and
int3
and
mov
rclb
stos
hlt
add
mov
or
andb
mov
pop
push
fadd
add
pop
inc
and
dec
add
loopne
ret
mov
ret
and
fstpt
or
mov
jg
ret
add
add
ret
jae
push
fildll
add
add
mov
ds
add
add
add
addr16
mov
add
push
xor
add
push
dec
mov
add
xorb
sbb
push
repz
ret
add
ret
and
lret
mov
int3
mov
popf
adc
fldcw
mov
imul
iret
inc
mov
sub
mov
sbb
sqrtps
add
mov
inc
xchg
push
dec
inc
cmp
cmp
rcll
mov
dec
loopne
dec
mov
cmp
mov
sbb
sub
test
sbb
rcr
rcll
lret
std
fiaddl
and
inc
inc
aam
arpl
xchg
insl
jo
mov
sub
cmp
std
call
test
lock
sti
dec
cmp
or
lret
fidivl
xchg
cmp
cmp
pop
cmp
fwait
les
test
add
xor
ret
inc
clc
and
sbb
and
and
cmp
pop
jne
call
fstps
sbb
sbb
ljmp
je
or
out
mov
mov
push
jno
pop
jmp
out
pushf
call
inc
lds
insb
push
pushf
mov
pusha
add
addb
add
jmp
jnp
out
scas
add
sub
aam
push
add
add
jmp
fisttps
shl
aam
add
rorb
sbb
xchg
pop
xor
add
push
ljmp
es
or
lea
xorl
jmp
xor
add
icebp
and
xor
ss
and
test
push
mov
daa
addr16
lcall
jns
xchg
sub
add
faddl
add
or
mov
mov
rolb
add
daa
jno
ret
mov
or
inc
adc
cmp
cmp
loopne
ljmp
inc
add
fdivs
pop
ret
imull
push
mov
ffreep
incl
sbb
xchg
roll
add
pop
sub
sub
pop
aaa
int3
rol
sub
mov
dec
push
mov
or
pop
inc
push
mov
adc
or
or
or
and
push
repz
add
inc
rorl
jg
mov
outsl
inc
rorl
or
pop
rorb
push
out
inc
add
lock
inc
pop
pusha
inc
xchg
or
or
pop
lock
pop
or
lea
lds
add
mov
inc
cltd
repnz
add
mov
inc
pop
or
decl
imul
mov
inc
popa
cli
jo
decl
popa
mov
and
jno
ret
add
xchg
push
inc
pop
jmp
into
or
pop
xor
jb
mov
lret
popl
in
dec
orb
cmp
mov
fmuls
xor
xor
pop
call
std
push
psubb
add
pop
inc
adc
fimull
add
add
push
xor
idiv
daa
xor
mov
ret
in
mov
jne
add
mov
and
stc
pop
into
das
into
pop
icebp
jg
lea
das
fldenv
adc
push
mov
cli
ljmp
into
fcompl
mov
ret
in
add
repnz
sti
push
mov
xor
mov
cs
push
inc
decb
add
mov
inc
mov
daa
and
dec
jg
mov
incl
andb
add
mov
jmp
mov
cmp
sbb
mov
lods
and
xor
jmp
mov
ljmp
addl
mov
ljmp
aas
mov
or
pushl
filds
test
add
sub
adc
mov
cmp
pop
mov
outsl
inc
cmp
in
fisttpl
popa
shlb
cmp
and
and
add
add
add
add
and
call
xchg
call
icebp
ds
mov
mov
les
add
jl
jnp
test
xor
cli
ss
and
mov
inc
scas
cmpsl
add
inc
dec
add
sbb
add
or
push
test
mov
sub
jmp
jp
xchg
andb
push
call
hlt
sar
lods
adc
xchg
imul
mov
stos
cmpsl
adc
pusha
test
in
pusha
jge
icebp
jo
rol
jo
and
fmuls
inc
inc
rolb
xor
rol
jo
and
mov
mov
add
fldl
xor
sti
xor
add
mov
xor
jbe
xchg
cmpsb
fldl
xor
or
jg
sub
jmp
xchg
push
loopne
xor
mov
adc
rcrb
or
psadbw
mov
mov
xchg
push
push
push
add
push
push
mov
pop
pop
pop
pop
fcompl
iret
call
sub
and
test
xchg
testb
mov
or
mov
and
out
lret
inc
mov
in
mov
push
mov
ficoms
out
movb
adc
inc
cld
mov
push
inc
push
mov
lea
pop
lea
mov
ficoms
decb
roll
jg
xchg
sub
repnz
push
addr16
pushl
out
dec
add
jno
roll
or
xchg
sub
mov
in
dec
xchg
cmpsb
pop
mov
mov
or
lods
pop
and
mov
mov
sbb
pop
pusha
test
or
sub
sbb
addb
shr
sbbb
sub
cmc
push
mov
test
adc
sub
add
adc
add
mov
push
mov
sbb
adc
xor
roll
sbb
adc
mov
and
pushl
out
add
idivl
mov
or
int
out
paddd
xchg
xor
es
jle
sbb
or
minps
lds
push
pusha
fiadds
add
push
jl
in
xchg
stos
cmovg
xchg
add
jmp
test
shrb
cmpsb
in
xor
jmp
aas
or
add
hlt
lds
xchg
add
add
xchg
push
xchg
jb
lock
sar
xor
idiv
out
nop
jp
mov
std
test
idiv
fmull
or
jg
mov
or
mov
into
add
push
inc
cmp
faddl
out
icebp
hlt
std
cmpl
cld
incl
add
cmp
jle
xorl
call
add
sahf
push
jle
xor
dec
call
mov
inc
jne
rol
lods
mov
sbb
push
lock
xchg
lea
cmp
mov
jns
add
in
stos
mov
pop
add
ficoms
decb
pop
sar
sbb
bnd
loopne
ja
adc
add
mov
adc
adc
xor
jae
inc
adc
add
dec
mov
push
adc
flds
notb
orb
rorb
pop
clc
rolb
add
ret
imul
aam
fmull
mov
adc
mov
js
imul
sub
mov
dec
test
push
push
mov
add
scas
mov
and
mov
mov
repz
jp
out
cmpsl
imul
cli
outsl
dec
cmp
jmp
hlt
inc
inc
inc
aad
jge
mov
test
mov
adc
mov
clc
mov
sti
mov
push
or
add
out
data16
sti
mov
push
mov
mov
or
scas
das
test
icebp
mov
add
or
cs
inc
jg
mov
ret
dec
jp
push
add
lods
add
dec
test
js
jo
cmpb
ds
pop
add
push
and
in
out
sub
jg
addr16
dec
inc
xlat
lea
mov
movb
fwait
dec
aas
add
mov
xchg
adc
add
cmp
out
sbb
add
push
xchg
cmp
push
push
fcompl
xor
inc
lahf
push
push
call
lcall
push
iret
in
ljmp
mov
aaa
test
adc
in
sar
call
ffreep
decl
or
les
jmp
sbb
into
jmp
bound
addr16
fstpl
dec
cmpsb
cli
or
mov
lods
sti
xor
xchg
jns
mov
sbb
xchg
inc
jle
lcall
jge
jbe
sbb
addr16
packuswb
pusha
sar
data16
ss
dec
jno
dec
lcall
jge
es
sbb
aaa
add
mov
mov
adc
add
jns
sbb
std
sbb
icebp
jge
or
sbb
add
adc
sbb
or
lds
sbb
cmp
or
inc
ret
lock
les
cltd
xchg
push
vmread
hlt
or
sbb
sbb
or
xchg
stos
inc
sbb
mov
addb
add
mov
mov
mov
jbe
cmp
cwtl
mov
std
out
rcrb
jmp
enter
aas
jbe
sub
jns
sti
jle
rorl
fs
or
cmpsb
ret
jmp
cmp
pop
pop
xor
dec
pop
jbe
jle
outsl
rolb
insb
xor
pop
add
jnp
add
pop
push
mov
inc
jnp
mov
push
jg
shl
popa
mov
ret
andb
xchg
add
jae
imul
call
jg
add
jbe
loopne
je
mov
push
psubb
jmp
push
pop
pop
pop
loope
ret
push
mov
dec
dec
push
mov
or
leave
sub
or
mov
inc
cmp
inc
in
stos
cli
adc
das
rclb
add
mov
xor
out
add
orl
mov
xchg
and
jmp
fdivr
mov
sbb
add
sbb
add
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
sti
xchg
add
loope
fidivs
loope
cltd
sahf
xchg
dec
mov
pop
loope
mov
ror
stc
mov
aas
mov
pop
fmul
aam
enter
rcr
int3
leave
mov
add
push
movsb
stc
mov
adc
sahf
rorb
pushf
mov
stc
add
hlt
jmp
push
xchg
jno
pop
cltd
insl
and
insb
mov
outsb
xchg
out
xchg
cmp
jbe
negl
jb
pop
xchg
jbe
sub
cs
hlt
or
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
jmp
mov
add
xchg
or
push
pop
add
mov
sahf
pusha
sub
dec
pop
push
adc
or
outsl
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
mov
add
aad
int
shll
xchg
xchg
add
cltd
lahf
mov
insl
mov
aam
into
sbb
jmp
mov
aam
into
hlt
rorb
iret
stc
iret
shll
add
popf
sbb
and
stc
cltd
xchg
or
mov
pop
jb
push
nop
arpl
add
xchg
mov
dec
add
sbb
jno
sub
insl
xchg
adc
das
fmuls
shll
fdivrs
popf
js
add
mov
clc
add
pop
sahf
outsb
pop
ret
sbb
int
push
cli
enter
nop
push
xor
addr16
xor
jae
dec
add
push
jno
sbb
sbb
add
mov
push
add
cmpsb
imul
std
imul
das
xor
xor
gs
or
data16
mov
imul
cmpsb
jb
cmp
fs
xchg
je
mov
imul
pusha
add
mov
imul
mov
je
cmpsl
sahf
je
mov
jmp
imul
nop
fs
lahf
pusha
or
incl
jae
leave
jbe
fcoml
das
scas
sbb
sarl
outsb
int3
into
mov
push
stos
lea
jb
jle
js
mov
test
jne
addb
arpl
fs
ljmp
test
ds
jno
dec
xchg
jne
inc
mov
pop
inc
mov
add
push
xchg
push
jae
mov
or
or
add
mov
jns
sbb
scas
add
sahf
fldt
popf
fidivl
nop
out
into
xchg
add
add
mov
inc
jb
mov
pusha
xchg
xchg
cmpsb
add
sbb
nop
mov
mov
add
sbb
insb
dec
jb
pusha
out
push
jne
insl
push
outsl
inc
imul
inc
xor
jno
sub
imul
addr16
or
je
adc
add
jno
add
imul
data16
mull
into
out
add
stos
cs
sbb
push
mov
mov
push
jmp
mov
jo
subb
outsb
mov
jne
xchg
arpl
outsb
popaw
push
push
insl
insb
dec
mov
bound
add
add
add
push
popa
add
add
jno
imul
jo
xor
jno
add
ss
add
imul
add
subl
outsb
add
test
adc
add
je
outsl
jnp
add
imul
cmp
bound
jae
add
insl
pop
push
jae
pusha
pop
movb
push
pop
push
popa
fs
ljmp
mov
sbb
and
arpl
push
jbe
pop
sbb
sbb
add
pop
or
jmp
pop
out
arpl
ljmp
mov
aad
add
leave
jne
add
ret
insb
addr16
pop
add
xchg
jo
popf
lea
mov
lea
pushf
xchg
jne
xchg
lea
push
scas
add
push
push
addr16
add
insb
push
arpl
imul
popa
add
and
adc
imul
sub
add
imul
adc
insb
mov
push
imul
leave
outsl
fldcw
xor
pusha
lret
outsb
out
shrl
add
outsl
out
lahf
push
ja
outsl
out
jns
mov
add
add
add
add
pop
jne
pop
arpl
insb
inc
push
sub
cli
push
je
jmp
out
sub
cmp
pop
jb
sub
imul
sbb
pop
add
and
or
imul
gs
jne
add
bound
insb
outsb
int
imul
das
xor
fbld
lret
popa
rcl
imul
mov
addr16
scas
bound
lods
pop
jno
nop
xor
mov
jb
outsb
pop
outsl
jo
jne
jne
inc
bound
xchg
add
outsb
add
bound
js
popa
add
gs
outsl
add
push
push
add
outsl
cmpsl
imul
xchg
insl
pop
jb
push
add
imul
aaa
enter
jge
outsl
gs
add
addr16
popa
gs
jo
insb
daa
pop
add
outsb
cmp
jae
lcall
bound
ljmp
pop
js
push
pop
inc
jb
arpl
arpl
inc
jns
dec
inc
jae
sub
pop
arpl
inc
popa
imul
add
adc
jbe
pop
add
mov
mov
je
in
ljmp
in
ljmp
mov
into
jp
add
scas
push
mov
int3
bound
add
jo
jae
ja
data16
mov
jae
je
je
insb
add
mov
addr16
arpl
mov
pop
push
add
push
addr16
popa
cmp
je
adc
adc
outsb
sbb
outsb
out
jmp
sbb
add
addr16
jecxz
add
loop
add
jp
frstors
bound
add
jae
data16
add
lcall
popf
xchg
addr16
stos
outsb
mov
fs
fwait
insl
add
scas
add
pop
arpl
add
sbb
add
pusha
pop
dec
push
gs
jmp
dec
sbb
cli
mov
arpl
push
add
and
data16
jmp
in
add
fldt
or
add
push
outsb
aam
gs
fsubs
lret
add
pop
outsl
add
jae
imul
inc
popa
insb
insb
daa
fs
jae
push
outsb
add
xor
popa
xor
add
pop
pop
bound
jb
jae
xor
out
insb
popa
test
add
outsb
je
add
bound
cmpsl
pop
push
popa
xchg
xor
xor
mov
add
test
outsl
jne
add
je
add
andl
xor
leave
gs
shr
imul
pusha
jb
outsb
add
ljmp
mov
andl
push
add
mov
ljmp
mov
cmp
mov
inc
imul
cmp
pop
aaa
push
jno
sti
imul
push
and
imul
add
lods
mov
xor
ljmp
jne
push
faddl
insl
shll
and
xor
cmp
xor
and
cs
aaa
fbstp
xor
jae
arpl
pop
shlb
jae
imul
mov
mov
xor
sub
cmp
cmp
sub
push
jnp
pop
dec
jo
and
insb
cs
pop
or
add
dec
std
xor
dec
add
inc
clc
dec
xor
scas
pop
adc
decl
adc
dec
inc
and
mov
xor
mov
add
orl
jmp
xchg
inc
inc
xchg
mov
push
lods
jno
mov
xchg
arpl
jo
stos
pusha
outsl
jb
push
insl
push
test
addr16
pusha
push
push
dec
add
jno
arpl
jmp
sub
push
je
sbb
loope
jno
es
ja
sbb
jmp
mov
ljmp
outsl
outsb
gs
xor
mov
inc
dec
inc
jp
cmp
gs
outsb
jae
pop
popa
push
cli
outsb
outsl
imul
dec
jb
inc
popa
outsl
jae
push
push
outsl
add
jae
pop
outsb
dec
dec
jmp
std
call
std
jmp
jne
je
das
cs
gs
je
pop
jo
adc
arpl
inc
pop
je
add
cs
add
pop
pop
je
cli
jno
sbb
imul
push
add
ljmp
ds
imul
mov
stos
dec
inc
mov
pusha
jb
mov
add
mov
cltd
add
cltd
add
cltd
add
cltd
add
cltd
add
xchg
cltd
add
cmpsl
sbb
xchg
sbb
xchg
sbb
in
add
in
add
mov
fiaddl
add
gs
sbb
mov
or
add
bound
or
pusha
loope
pop
inc
scas
jno
bound
add
mov
fs
pop
mov
and
add
pop
mov
add
add
and
add
pusha
pop
jnp
add
add
push
out
mov
pop
dec
outsl
add
add
jmp
add
sub
pop
imul
and
sbb
inc
pop
adc
mov
add
popf
push
addr16
jb
int3
into
add
jmp
mov
pop
insl
xlat
fldl
lret
arpl
xchg
jo
jmp
add
stos
mov
and
test
outsb
nop
outsb
jne
mov
pop
data16
popf
push
insl
jle
jo
call
ret
sub
addr16
sbb
add
fs
icebp
pop
and
insb
jae
add
call
bound
jnp
dec
outsl
shrl
gs
pop
dec
mov
arpl
jnp
outsb
andl
or
jb
pop
outsb
je
pop
jb
push
arpl
add
jo
pop
je
jb
push
push
inc
cmp
gs
ja
push
sub
and
ja
dec
inc
push
push
das
push
and
or
jae
and
pushl
arpl
das
cs
sti
sbb
popa
and
js
sti
adc
insl
and
bound
mov
jne
ljmp
cmp
jmp
into
and
push
adc
stos
aad
or
pop
outsb
mov
les
and
cmc
sti
inc
cltd
jl
arpl
mov
sahf
jns
jo
xchg
pop
push
bound
imul
add
dec
jne
addr16
pop
in
pop
cmp
pop
std
pop
dec
popa
sbb
imul
and
imul
les
data16
ja
and
in
or
sbb
mov
pop
leave
pop
pop
aas
cmp
ficoms
lcall
sbb
div
std
or
mov
test
cmp
sub
xorl
jmp
add
dec
sub
mov
add
ss
jo
repz
cs
push
pop
add
and
cmp
aas
jae
adc
jb
or
jmp
jmp
jb
fsubrl
jmp
xchg
das
cs
shll
fcomps
fstpl
add
enter
mov
cmpsb
pop
insb
jmp
mov
jl
mov
pop
pop
add
fs
imul
addr16
push
dec
popa
outsb
xchg
pop
imul
jne
inc
adc
pop
add
pop
fs
add
gs
je
add
inc
jb
pop
add
pop
jo
cwtl
pop
je
fs
jb
lret
inc
push
pop
jo
sbb
outsl
gs
add
jb,pt
outsb
je
cli
outsb
je
lock
inc
gs
jb,pt
outsb
je
cmp
popa
and
aas
outsl
mov
xchg
add
push
jb
xchg
pop
push
arpl
outsb
outsb
inc
pop
popa
pop
inc
jno
sub
mov
sub
js
or
sbb
cmp
jb
pop
addr16
add
add
and
fldlg2
pusha
pop
ljmp
outsb
enter
in
shll
shrl
push
cmpsl
mov
insw
nop
lea
mov
pop
jae
add
pop
pop
pusha
mov
push
xchg
push
push
outsb
jp
jb
subb
jns
push
pop
push
addr16
pop
pop
add
fs
imul
sbb
add
pop
push
pusha
mov
cmp
and
jno
pop
adc
or
addr16
insl
and
in
push
sub
insl
adc
or
je
pop
out
insl
jno
add
pop
mov
pop
mov
push
insl
add
fs
mov
bound
pop
push
jb
jae
je
add
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
pop
add
add
daa
add
pop
aas
add
sub
xor
pop
and
adc
sub
daa
xor
add
xor
xor
pop
add
xor
sub
xor
sub
inc
gs
pop
je
jae
push
into
outsb
je
lret
data16
data16
popa
insb
xchg
sub
imul
fs
imul
push
jb
mov
add
jno
jae
adc
mov
jo
xchg
into
jbe
orb
fcoms
cwtl
test
insb
jge
inc
pop
mov
pop
mov
push
mov
orb
dec
fcoms
pop
inc
jno
sub
dec
inc
pop
dec
dec
push
pop
dec
pop
fs
push
arpl
cmp
or
pop
testl
repnz
fadds
jno
in
std
inc
inc
fucomip
xor
jno
ficoml
pop
pop
bound
add
outsl
stos
outsl
loopne
js
mov
fwait
jo
add
push
mov
jbe
xor
pop
popf
add
pop
push
mov
jae
ja
popa
push
nop
add
lahf
cmp
xor
cmp
xor
pop
cli
pop
pop
add
outsb
push
cmp
pop
xor
push
and
jmp
pop
adc
pop
sbb
pop
add
and
push
adc
stc
push
add
add
sbb
pop
je
fsubrl
lds
fimull
mov
push
je
mov
inc
jo
pop
iret
jno
jb
cmpl
mov
xchg
add
popa
pusha
jno
mov
outsb
addr16
pop
pop
xchg
push
inc
popf
insl
add
push
cs
adc
add
adc
push
pop
daa
push
push
add
sarl
inc
and
add
out
ds
cmp
mov
jno
pop
jo
jmp
pop
jb
jb
cmp
rcrb
movsb
cmp
push
push
aas
jne
or
addr16
and
imul
dec
insb
imulb
inc
popa
je
inc
insl
popa
pop
sbb
bound
dec
dec
inc
push
dec
inc
pop
and
je
sbb
push
and
pop
push
jb
pusha
popa
jae
inc
imul
pop
push
aam
imul
pop
jb
dec
imul
pop
jb
cmp
rcrb
mov
cmp
jne
mov
sub
fildl
inc
repnz
push
insb
fdivr
jno
lret
pop
je
mov
push
insl
pushf
mov
push
inc
jb
jo
mov
jmp
push
insb
mov
insl
xchg
jns
pop
xchg
dec
insl
imul
pop
dec
jge
inc
sub
bound
sbb
aas
push
cs
inc
add
aaa
pop
inc
repnz
and
ficoms
push
imul
push
inc
ljmp
jb
xor
pop
repnz
or
cmp
or
inc
sub
sub
and
and
and
push
into
pop
popf
push
ficompl
enter
stos
dec
mov
push
out
jnp
mov
inc
mov
movsb
inc
jg
fwait
pusha
js
mov
add
xchg
push
pop
bound
inc
bound
sbb
xor
mov
fs
pop
out
inc
sub
sub
add
out
xor
sbb
stc
inc
jae
or
cmp
gs
std
mov
push
pop
sti
loopne
inc
std
pushf
push
push
sbb
xor
xchg
push
pop
fstpt
inc
aad
pushf
push
push
lcall
arpl
mov
pop
lcall
add
imul
subl
pop
pop
adc
inc
dec
das
push
pop
inc
push
and
push
push
add
bound
xor
fs
add
je
aam
arpl
add
pop
imul
pop
je
inc
dec
imul
dec
cmc
arpl
add
outsl
push
les
outsl
push
adc
pop
inc
ss
pop
ss
popa
out
outsl
imul
arpl
cmc
ja
sub
pop
jb
bound
inc
push
popa
jb
inc
jb
leave
cmp
imul
pop
loopne
outsl
insb
mov
or
arpl
or
loopw
fimull
arpl
or
or
repnz
insb
rorb
and
stos
add
stos
call
fs
xchg
xchg
inc
addr16
dec
insl
lea
add
push
jno
js
jb
call
push
arpl
fwait
push
and
push
arpl
xor
push
push
xor
cmp
push
dec
push
call
add
imul
dec
push
out
add
imul
xor
push
ljmp
fisttpll
push
fldl
and
push
ss
dec
and
dec
jns
shll
outsl
mov
dec
pop
cmp
bound
mov
cwtd
and
dec
mov
and
push
sahf
xor
xchg
push
add
repz
jb
sbb
cmp
cmp
arpl
in
jb
mov
jo
mov
dec
pop
pop
aad
pop
sbb
xchg
xor
sub
push
arpl
mov
fs
add
push
js
mov
insl
arpl
int
insl
xchg
and
xchg
push
jne
xchg
pusha
add
pop
cmp
jmp
mov
push
pop
fwait
pop
cmp
push
push
and
insb
inc
fs
push
xor
inc
push
out
dec
popa
decb
push
shlb
ja
xor
aad
insb
insb
or
push
jb
push
data16
pop
jb
xchg
inc
jno
push
fs
inc
push
imul
push
push
pop
inc
insb
imul
push
imul
pop
jb
sbb
pop
adc
push
xor
insb
or
and
push
imul
push
push
and
jo
mov
call
pop
pop
dec
test
arpl
jns
insl
sbb
push
adc
jne
pop
aaa
addr16
cld
xor
xor
adc
add
xor
std
sbb
arpl
cld
aas
dec
out
hlt
push
call
add
push
push
mov
dec
pop
lods
aam
arpl
mov
xor
lds
xchg
xchg
add
xchg
push
pop
push
inc
insb
flds
add
jns
fwait
inc
add
out
imul
push
call
dec
adcb
pop
pop
rcrb
pop
mov
fs
and
add
dec
push
arpl
daa
dec
gs
outsl
clc
sub
or
imul
push
add
dec
or
push
enter
mov
mov
xor
fwait
dec
enter
movsl
aaa
mov
add
pop
dec
mov
pop
lea
inc
fwait
pop
arpl
pusha
pop
xchg
jl
arpl
sbb
mov
gs
cmp
dec
pop
cmp
lret
pop
out
insl
push
out
add
rcpps
or
add
gs
add
pop
jb
ret
adc
rorl
and
mov
data16
jae
imul
xor
imul
outsb
add
popaw
add
outsl
jae
gs
xlat
dec
imul
gs
arpl
out
imul
pop
jb
sbb
outsl
inc
pop
popa
gs
inc
data16
arpl
fisttpl
je
xor
gs
push
jb
pop
gs
add
xor
push
clc
pop
je
divb
popa
pop
xchg
sbb
xor
movsb
inc
push
inc
mov
push
gs
dec
outsl
xor
add
pusha
jb
addr16
daa
adc
mov
call
push
jb
mov
sub
xchg
add
xor
andl
jb
fwait
insb
dec
push
bound
jne
push
add
leave
inc
js
push
insb
jb
cmp
inc
repnz
push
cmp
or
push
pop
jmp
sbb
fucomi
inc
inc
std
in
push
jb
mov
dec
je
xlat
addr16
sti
push
jb
in
inc
push
mov
inc
js
add
push
pop
fnstenv
outsb
push
popa
mov
xor
push
outsl
dec
into
push
pop
add
mov
insb
pop
mov
dec
arpl
add
xchg
xchg
push
dec
out
and
insb
or
sub
inc
adc
insl
or
pop
adc
dec
push
arpl
dec
inc
pop
mov
add
xor
sub
pop
cmp
arpl
popa
iret
push
adc
push
out
pop
add
nop
pop
insl
incl
mov
push
lahf
dec
jne
imul
mov
pusha
pop
lcall
pop
jmp
push
pop
and
mov
fwait
bound
pop
mov
or
iret
adc
cmp
push
jno
ret
pop
and
addr16
jmp
add
adc
mov
fs
cmp
add
add
push
jne
call
push
push
jmp
add
aam
data16
pop
jb
sarl
jb
mov
pop
dec
imul
pop
gs
xor
and
gs
outsb
gs
add
sub
outsb
dec
cmp
fs
dec
outsl
and
outsb
popa
inc
xor
push
xor
jb
inc
pop
popa
add
outsl
jae
push
cmpsl
packssdw
jmp
dec
outsl
stc
xor
in
pop
inc
ljmp
gs
sbb
movsb
sub
outsl
mov
add
jo
mov
ljmp
test
push
cs
xlat
add
scas
or
xchg
stos
push
fmull
push
and
call
push
jb
je
js
leave
addr16
insb
rorl
movsl
pop
jo
cmpb
pop
jbe
data16
jle
add
pop
pop
jb
mov
mov
sub
jb
jmp
push
jne
push
pusha
add
xor
fstl
insl
loopne
sbb
dec
add
clc
ds
and
bound
pusha
xchg
or
dec
add
sub
mov
lahf
pop
into
push
cwtl
dec
fiaddl
add
xlat
xor
mov
dec
outsb
sub
pusha
insb
inc
enter
lods
dec
dec
xor
push
pop
add
fs
push
jbe
sub
out
sub
insb
or
dec
push
and
out
inc
sub
inc
sbb
dec
sahf
xor
pop
repnz
add
gs
daa
out
outsb
push
xchg
adc
loope
outsb
sbb
add
fs
daa
out
xor
xchg
outsb
cmc
shll
fstpl
mov
lcall
mov
mov
insb
rcrb
lds
xchg
add
jmp
push
arpl
pop
push
insl
pop
in
dec
pop
icebp
push
add
add
xor
outsl
cs
outsl
add
adc
movsl
xor
xor
sub
xor
es
arpl
pop
push
mov
adc
repz
outsb
addr16
outsl
jno
pop
je
out
dec
push
inc
das
je
arpl
repnz
xor
ljmp
je
add
sub
inc
jno
ja
imul
pop
jb
push
insb
divb
add
call
negb
fcoms
ljmp
add
icebp
dec
arpl
mov
xor
push
lahf
lret
jp
popa
jo
in
xor
insl
out
cmp
inc
push
pop
pop
mov
dec
outsb
insl
mov
pop
push
fdivrs
addr16
fdivs
pop
dec
imul
add
insb
dec
dec
pop
jbe
add
dec
pop
jb
jns
arpl
add
add
imul
add
arpl
push
xor
push
mov
pop
xor
pop
adc
pop
add
imul
push
adc
dec
add
jp
mov
push
mov
shlb
add
push
popa
add
push
popa
push
les
outsb
pusha
lcall
xor
pop
mov
cmp
pusha
sbb
push
add
jmp
xor
out
push
inc
in
jne
or
sbb
push
je
lcall
adc
pop
fstpl
push
jecxz
jno
cmc
pusha
bound
out
inc
insl
setl
std
jp
outsb
cli
mov
pusha
jb
jb
arpl
xchg
dec
popf
mov
dec
jmp
jl
add
insl
dec
jmpw
jb
push
fs
mov
add
add
test
jae
scas
push
das
push
add
add
xor
add
cmp
jo
imul
pop
add
pop
pop
je
adc
mov
fs
dec
xlat
fs
pop
adc
pop
jb
add
and
popa
arpl
pusha
jb
movsb
add
and
xor
and
xor
and
popa
jb
and
adc
jae
das
arpl
xchg
pusha
jo
dec
sub
pop
adc
data16
jb
sub
bound
cmp
pushl
gs
pop
adc
pop
jne
push
gs
pushl
gs
pop
cmc
add
or
cmp
push
inc
pop
jge
bound
std
push
pop
mov
push
arpl
pop
inc
das
and
xor
or
add
cltd
inc
sub
xor
int3
inc
xor
add
adc
inc
adc
jnp
das
dec
mov
adcb
andb
mov
leave
adc
sbb
or
test
adc
xchg
aas
sub
test
paddb
adc
adc
sbb
push
pop
push
add
adc
pop
cli
push
cltd
pop
add
xor
enter
add
inc
xchg
xor
push
pop
add
bound
mov
test
pop
fs
add
dec
lcall
add
loop
je
sbb
jmp
add
push
arpl
leave
es
inc
fstl
dec
cld
push
inc
xlat
push
add
testl
das
mov
xchg
in
cmp
mov
rclb
add
push
pop
aad
fs
cltd
push
je
lods
cmp
sbb
sub
pop
popa
adc
push
sbb
sub
adc
pop
inc
inc
arpl
push
xor
push
pop
in
sub
add
popa
gs
imul
add
add
add
add
addr16
add
add
push
add
add
add
addr16
jno
sub
gs
insb
lret
std
outsb
jno
sub
gs
imul
add
sub
ret
arpl
and
insl
insb
push
xor
mov
stos
bound
ficoml
add
push
arpl
mov
jno
outsb
pop
je
lods
sub
and
imul
pop
ja
jbe
add
jbe
pop
sbb
das
sub
aaa
bound
mov
sub
ljmp
add
or
sarb
outsb
mov
in
xor
cmc
add
hlt
pop
je
fwait
mov
mov
push
pop
mov
int3
add
lret
pop
push
sbb
mov
dec
les
jae
pop
dec
push
mov
data16
add
out
mov
xchg
pop
sti
arpl
add
add
add
add
add
add
add
add
push
add
push
inc
pop
rcrb
mov
push
push
bound
push
sbb
pusha
repz
mov
int
je
mov
sub
add
mov
xchg
mov
pop
add
pop
push
insl
mov
or
jno
sbb
insl
xchg
adc
xchg
cmc
dec
add
pop
outsb
mov
push
xor
stc
dec
je
add
punpcklwd
mov
packsswb
mov
dec
and
sub
je
fistpl
add
call
pop
push
sbb
pusha
sub
sahf
push
popa
add
popa
push
popa
add
jae
add
or
add
jp
add
arpl
sub
inc
out
cs
data16
add
jp
add
and
js
xchg
or
dec
das
pop
jb
sbb
outsl
cmp
add
sub
pop
hlt
sub
sub
pop
hlt
sub
push
sub
cmp
sar
je
out
gs
sub
sti
or
outsl
cs
pop
pop
pop
mov
pop
imul
bound
bound
popa
mov
arpl
add
andl
aas
insb
popa
mov
pop
jl
pop
jne
mov
pop
jp
jne
pop
mov
adcb
popf
xor
jnp
insb
and
add
inc
pop
je
cmp
adc
inc
push
push
flds
into
adc
jb
adc
popa
fistpll
addr16
fsubs
test
dec
adc
add
pop
adc
push
or
xor
xor
pop
nop
add
pop
push
ficompl
bound
add
xor
push
pop
dec
les
leave
add
lcall
fdivrs
repz
aam
in
mov
inc
adc
adc
or
adc
cmp
dec
or
inc
xor
in
push
dec
xor
dec
cmp
add
pop
add
lock
jb
rorb
adc
repnz
sbb
jle
push
or
mov
and
pop
pop
fnstsw
push
insl
iret
jno
aas
popf
fwait
sub
je
outsl
push
arpl
adc
jb
lar
adc
outsb
mov
inc
pop
mov
cmc
and
jnp
arpl
in
add
popf
dec
inc
or
pusha
jno
icebp
jb,pn
in
add
inc
push
dec
mov
push
imul
cs
pop
add
push
imul
jb
push
popa
dec
test
and
add
and
jns
push
das
xor
and
inc
jb
pop
push
push
outsb
notl
je
add
inc
notb
add
add
add
add
dec
nop
or
mov
cmpsl
lcall
push
or
mov
addr16
rorb
in
mov
stos
xchg
add
lock
mov
mov
pop
je
or
mov
pop
popa
lods
pop
dec
insl
mov
mov
add
push
insb
imul
addr16
dec
imul
je
jl
arpl
pop
mov
fiaddl
cmp
mov
sub
jl
xor
mov
jno
sub
add
cmpsb
add
filds
sbb
add
add
add
add
fiaddl
dec
add
add
add
add
lahf
xor
push
stos
daa
adc
cwtl
and
and
add
adc
push
pop
jb
enter
test
imul
daa
jg
aam
pop
das
out
pop
xor
mov
sub
out
and
test
sbb
loop
pop
repnz
xchg
push
adc
lcall
sbb
test
loop
dec
ficoms
pop
xor
jmp
jmp
xor
add
pop
push
dec
out
sub
inc
sbb
sbb
and
add
jmp
arpl
out
jbe
shl
and
mov
push
add
aaa
arpl
fucom
arpl
xor
fisttpll
jmp
xchg
ss
shl
outsb
jmp
mov
and
das
and
loope
push
cmpsl
jmp
ljmp
push
add
jmp
outsb
cs
imul
ljmp
addr16
imul
pop
inc
idiv
pop
add
push
dec
imul
repz
add
add
and
aam
dec
push
fistl
dec
rcrl
push
add
pop
add
dec
dec
push
sbb
aas
dec
sbb
sbb
inc
pop
inc
dec
add
repnz
add
mulb
subl
add
mov
jno
mov
sbb
add
dec
outsb
fisttps
pop
rorb
jae
stos
daa
je
add
sub
push
cmp
lock
inc
cmp
sub
shrl
daa
insb
fwait
out
inc
push
mov
add
pop
jge
xor
lds
push
xlat
add
les
pop
jge
xor
into
push
insb
sub
inc
sbb
lcall
sub
xor
pop
lods
sub
sub
in
out
ljmp
push
xor
sub
pop
add
sub
add
inc
adc
adc
dec
inc
xor
push
sbb
mov
add
mov
xor
and
pop
add
cmp
push
mov
dec
sub
es
jmp
xor
mov
xor
pop
add
out
and
jmp
popf
add
add
loopne
je
leave
add
scas
add
stos
add
jmp
pushf
pop
insb
or
sub
pop
inc
xchg
das
add
out
jmp
cmp
sub
das
in
push
jno
adcb
adc
daa
ret
or
push
inc
adc
push
cs
fwait
xor
xor
nop
das
fs
jp
fildl
xchg
xor
xlat
dec
pop
jae
pop
outsl
gs
dec
popa
fs
dec
outsl
inc
icebp
call
fbstp
inc
repz
pop
popa
jmp
popa
popa
dec
pop
inc
insb
inc
sti
pusha
inc
repz
pop
push
repnz
jae
or
outsb
add
ljmp
div
incl
dec
daa
sub
dec
outsb
int3
and
ret
pop
mov
in
insl
add
aas
imul
add
out
gs
lock
or
sub
add
lcall
loopne
sub
xchg
inc
shrl
push
mov
xchg
or
cmp
push
push
lcall
jno
inc
das
pop
repnz
add
pop
das
mov
add
out
cs
mov
inc
aaa
jmp
stc
das
into
fdivrl
xor
std
pop
das
test
pop
xor
jl
inc
pop
add
cmp
inc
int3
aaa
outsl
and
and
out
xor
mov
clc
dec
xchg
jecxz
es
clc
dec
mov
sub
out
sbb
mov
fdivrs
jl
mov
dec
test
add
push
cltd
sub
es
icebp
stos
out
cmp
xor
shlb
out
repz
sbb
push
and
mov
dec
sub
fdivp
aam
jne
xor
sbb
popf
xor
add
dec
pop
in
es
sub
xchg
daa
xchg
and
push
enter
sbb
jbe
out
inc
pop
int3
fadds
push
mov
movsl
mov
push
pop
stc
push
jb
fisubrs
push
xchg
scas
sub
arpl
push
arpl
and
fwait
xor
lods
add
jmp
xchg
and
push
lods
into
add
inc
ja
add
daa
repz
fidivrs
call
add
in
call
jecxz
ja
mov
pusha
pop
adc
insl
popa
hlt
aas
push
push
adc
je
mov
bound
add
fs
push
fs
add
outsb
jae
push
imul
push
gs
jae
xchg
fs
dec
aas
jns
loop
fs
arpl
std
jo
cli
jmp
arpl
std
cmp
icebp
jae
and
pusha
cmp
add
add
sub
mov
jb
push
push
addr16
sti
sub
sub
mov
pop
pop
insl
lds
jno
jae
jno
jb
jno
gs
and
inc
pop
sub
ss
cltd
sbb
je
sub
cmp
push
jecxz
sub
mov
add
add
inc
repnz
jmp
pop
mov
arpl
stos
push
insl
cwtl
out
cs
mov
or
jg
add
das
mov
cmp
pusha
sub
out
xchg
push
pop
pop
xor
sub
fldt
arpl
pop
xor
dec
add
push
das
shrb
or
shrb
loop
xor
xor
inc
ljmp
fwait
sub
and
xor
das
jp
fldt
mov
clc
dec
xchg
jecxz
sbb
xor
and
loope
inc
in
and
mov
sbb
add
sub
pusha
or
push
insb
push
filds
inc
cmp
cmpsl
sbb
shll
add
mov
add
and
jo
movsl
push
insb
int
sbb
rolb
push
insl
jmp
push
dec
test
out
fildll
inc
xchg
fbld
mov
mov
cmp
inc
xchg
or
add
xchg
sub
push
sbb
pusha
sub
mov
xor
mov
pusha
add
icebp
pusha
jle,pn
fs
fsubrl
icebp
push
mov
aas
jb
clc
loop
gs
std
inc
push
dec
gs
fwait
popa
out
cmp
jns
inc
xlat
fwait
inc
inc
xlat
movsl
inc
inc
cmpsl
and
dec
inc
xchg
sbb
dec
inc
cmpsl
push
push
inc
cmpsl
iret
push
inc
xchg
push
inc
xchg
popf
push
inc
addr16
push
inc
lods
pop
inc
push
jae
inc
push
ljmp
addr16
inc
push
pop
bound
lcall
add
push
push
jle
push
imul
outsb
jle
adc
lcall
jle
movsb
jae
lcall
jle
mov
jbe
lcall
jle
mov
lcall
lcall
lcall
lcall
lcall
add
lcall
lcall
and
push
or
xorl
out
addr16
out
fs
out
push
inc
out
push
inc
out
inc
inc
out
inc
inc
out
cmp
xor
inc
out
sub
in
inc
out
sbb
push
adc
sub
inc
out
add
lods
jl
out
jg
out
jg
out
add
out
addl
xchg
push
jne
out
jae
out
mov
dec
mov
arpl
add
inc
roll
aad
jmp
mov
add
jmp
mov
sbb
and
fnsave
push
xor
adcl
xor
sbb
add
add
cli
or
fucomp
insb
aam
loope
jecxz
and
popf
pop
and
popf
push
or
mov
or
loope
mov
xor
loope
les
insl
xchg
lcall
jno
pop
or
dec
and
and
mov
and
mov
jo
movsl
sbb
push
jg
pop
jne
fdivrs
add
or
das
cs
lock
jb
fnstenv
xlat
push
sub
add
add
xlat
add
push
loope
gs
hlt
push
xchg
pusha
push
gs
jbe
jae
bound
push
popa
push
test
dec
jb
jmp
insb
cmp
pusha
add
jns
gs
and
sub
int3
xorl
arpl
mov
inc
and
and
in
push
jb
in
sbb
daa
add
inc
pop
popf
aas
aaa
jo
or
jbe
es
xor
push
insb
adc
addr16
sub
pop
daa
inc
pop
mov
arpl
sub
les
jbe
xlat
sub
fwait
push
arpl
addr16
jb
add
and
test
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
add
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
call
jmp
jmp
call
call
jmp
jmp
call
call
jmp
jmp
incl
pop
call
jmp
jmp
call
call
jmp
std
jmp
std
call
std
call
std
jmp
std
jmp
std
call
std
call
std
jmp
lcall
mov
lcall
mov
lcall
mov
lcall
add
and
pop
cltd
int
es
pop
xor
xor
and
add
cli
add
mov
pushf
add
or
add
lcall
mov
lcall
mov
lcall
mov
test
adc
test
pop
add
add
add
add
mov
add
add
add
add
add
add
add
adc
add
repz
out
adc
add
repnz
jecxz
adc
add
icebp
out
hlt
cmc
fcmovnu
int3
adc
movsb
fdivrp
push
notl
std
loope
movl
jmp
sti
or
inc
or
int
adc
roll
fistpll
clc
add
mov
cmc
incb
popl
and
ret
xor
imul
sbb
jmp
mov
cmpsb
add
mov
cmpsb
std
in
add
jmp
mov
shll
jmp
mov
cmpsb
add
mov
add
add
call
incl
xlat
incl
cmpsl
cld
jmp
add
add
incl
fwait
add
lcall
add
add
std
jmp
add
pop
lcall
cld
jmp
add
addr16
lcall
cld
add
pop
add
add
add
add
cmpsb
incb
pop
add
add
add
add
cmpsb
std
lcall
add
add
add
call
cmpsb
jmp
add
out
std
mov
pushf
std
mov
fwait
std
mov
xchg
add
mov
sahf
add
mov
lahf
std
cltd
fwait
std
mov
fwait
std
mov
mov
sahf
add
imul
add
mov
fwait
addl
mov
lcall
mov
sti
addl
sti
add
ds
adcl
fwait
adcl
mov
and
add
and
add
and
out
mov
add
test
addl
add
and
or
movl
scas
add
add
add
add
and
test
and
cmpl
add
cmp
add
leave
cmp
cmp
add
jmp
mov
add
jmp
mov
add
or
add
or
adc
jmp
cmp
add
jmp
mov
adc
icebp
ret
add
jmp
mov
incl
jmp
add
jmp
std
incl
ud0
add
incl
incl
out
add
out
cld
add
add
out
add
iret
cld
call
incl
jmp
cld
call
incb
or
cld
add
cld
incl
xchg
cld
add
incb
add
incl
outsl
lcall
add
add
jmp
incl
push
cld
add
push
incl
pop
incb
add
add
add
incb
add
cwtl
inc
cwtl
add
mov
mov
incl
cwtl
pushl
cwtl
mov
mov
add
cwtl
add
mov
xchg
incl
mov
add
mov
stos
incl
add
stos
add
mov
inc
mov
add
mov
incl
mov
mov
incl
mov
sub
cmp
in
xor
add
jecxz
add
ds
add
add
jecxz
mov
out
jns
out
jno
push
add
add
ds
add
ds
add
mov
call
add
add
jecxz
mov
push
add
mov
out
popa
mov
push
add
add
call
sbb
and
push
mov
add
jmp
add
mov
add
addl
call
loop
std
push
ret
push
ret
call
popf
lahf
std
call
popf
lahf
std
imul
lahf
std
imul
add
pop
pop
add
add
jmp
pop
lahf
std
add
movsl
jge
push
add
add
daa
add
add
add
add
add
inc
pop
add
add
add
add
add
inc
pop
add
add
add
inc
out
or
out
add
xlat
add
inc
xlat
add
inc
out
or
add
add
add
inc
xlat
add
add
add
inc
xchg
add
add
add
inc
cmpsl
add
inc
xchg
add
add
add
inc
add
add
push
add
inc
push
add
add
test
add
test
or
test
add
add
test
add
add
mov
test
or
add
mov
test
or
or
add
mov
test
or
or
stos
add
mov
cld
stos
add
cld
stos
add
mov
stos
add
stos
add
cld
stos
add
mov
stos
add
incb
out
mov
out
mov
inc
out
mov
out
mov
loope
add
out
mov
loope
add
testb
add
inc
jle
out
jle
out
mov
add
add
testl
add
out
mov
loope
inc
mov
add
add
add
inc
mov
add
inc
incb
testl
add
add
loope
add
loope
call
std
inc
add
std
inc
and
std
add
jmp
std
inc
and
mov
add
fnstcw
inc
and
jge
add
add
and
mov
add
fnstcw
inc
add
jge
and
mov
add
stc
mov
inc
and
jge
add
mov
inc
add
std
inc
and
mov
inc
and
mov
add
jmp
addr16
inc
add
add
xchg
aas
add
jmp
inc
and
addr16
lcall
inc
aas
add
add
daa
lcall
add
pop
add
jmp
pop
add
and
pop
and
pop
pop
and
pop
add
call
incl
in
jmp
incl
aad
pop
add
push
add
cmpsl
push
add
pop
add
incl
mov
ret
and
test
and
cmpsb
or
mov
test
and
test
add
test
add
test
and
cmpsb
or
mov
cmpsb
add
mov
cmpsb
add
mov
test
add
test
and
cmpsb
or
add
lods
or
mov
lods
or
mov
std
out
fiadds
out
mov
add
or
add
or
std
out
mov
std
out
mov
add
add
add
repz
daa
hlt
mov
icebp
es
or
daa
add
add
add
mov
add
add
icebp
es
mov
add
repz
add
repz
add
add
jmp
lea
add
mov
add
test
mov
add
test
mov
cwtl
or
jmp
add
std
call
or
add
sub
std
psubsw
add
jmp
ret
sub
std
movaps
add
jmp
out
std
xstore-rng
cmpsl
add
add
lea
adc
std
add
add
adc
xchg
std
xorps
add
daa
xchg
add
add
add
push
xchg
add
daa
xchg
std
jmp
xchg
std
call
add
push
add
adc
xchg
add
addr16
call
add
add
add
add
xlat
cld
lcall
cld
decl
into
cld
call
add
add
add
add
jmp
int
jmp
add
add
add
add
sub
mov
test
add
mov
pop
cmp
xchg
mov
add
mov
les
pushl
cmp
imul
add
cs
dec
hlt
cmp
inc
xor
cmp
add
mov
mov
xor
adc
add
mov
sti
cmp
icebp
cmpsl
add
mov
test
add
mov
add
add
xchg
xor
cmp
test
xchg
pop
cmp
xchg
xchg
test
adcl
pop
cmp
popa
xchg
loope
pop
xchg
cmp
dec
xchg
aad
inc
xchg
mov
cmp
jns
sub
push
sbb
xchg
lahf
cmp
add
sarl
jmp
xchg
std
int
xchg
std
aad
xchg
std
fisttps
xchg
std
pop
stc
xchg
std
imul
std
arpl
xchg
std
dec
loopne
std
mov
rclb
in
leave
xchg
std
repz
std
adc
xchg
std
mov
xchg
xchg
std
popf
mov
std
jge
xchg
std
inc
icebp
xchg
std
cmp
icebp
xchg
std
jmp
rclb
call
xchg
std
pop
leave
xchg
std
cmpxchg
call
jnp
cld
jmp
jmp
cld
call
cld
jg
cld
call
lret
cld
jmp
cld
call
cld
pushl
lret
cld
call
lret
cld
jmp
frndint
incl
xchg
dec
xlat
cld
ljmp
frndint
call
jmp
frndint
ljmp
frndint
dec
xlat
cld
call
xlat
cld
dec
xlat
cld
jge
cld
jmp
call
xlat
cld
cld
dec
xlat
cld
out
fdivr
jmp
fdivr
mov
mov
cmp
jmp
add
fldcw
ss
lret
shrl
cmp
mov
cmp
test
cwtl
cmp
cltd
movsb
cmp
xchg
adc
decl
cmpb
jns
cmp
jno
cmp
imul
cmp
pop
sarb
call
cmp
dec
add
incl
cmp
cmp
cmp
xor
ljmp
mov
jmp
push
cmp
sbb
cmp
adc
jge
or
cmp
xchg
popf
cmp
icebp
xchg
cmp
xchg
lret
cmp
xchg
mov
fsts
add
leave
xchg
lret
cmp
xchg
aad
mov
xchg
or
cmp
xchg
inc
cmp
xchg
inc
cmp
xchg
jecxz
jno
loope
imul
lahf
aaa
push
xchg
mov
aaa
inc
xchg
insl
cmp
xchg
jae
xor
xchg
xor
and
std
jmp
rcll
std
divl
nop
std
pop
cmpsl
nop
std
sbb
add
cmp
mov
nop
std
jge
nop
std
inc
notb
std
movsl
out
std
popf
nop
std
test
nop
std
pop
nop
std
out
nop
std
cmc
mov
std
jmp
mov
std
scas
add
add
mov
xchg
nop
std
jno
nop
std
jge
nop
std
outsl
jmp
std
add
add
add
cld
pushl
xlat
cld
out
cld
call
aam
out
aam
incl
aam
mov
add
add
aam
jmp
add
jb
loop
gs
fisubrl
out
cmp
fs
fsubrl
add
add
push
jp
pop
outsb
jnp
pusha
add
pusha
inc
cs
add
insb
jae
insb
fwait
push
inc
add
jg
pop
stos
fs
movsl
cwtl
add
pushf
cmp
push
push
cwtl
add
mov
cmp
jb
cmp
in
and
hlt
inc
insb
push
lcall
add
cmc
adc
add
mov
lea
popa
pop
xchg
inc
add
mov
addr16
lcall
sbb
dec
sbb
sub
push
lea
popf
pop
fwait
xor
adc
push
xchg
inc
andb
xor
and
and
bound
and
pop
inc
out
mov
aaa
inc
sub
or
add
add
and
daa
incb
inc
adc
sbb
sbb
leave
adc
mov
shll
in
sbb
inc
fisubl
add
mov
adc
adc
rcrl
aas
jmp
shll
pop
jge
inc
addr16
and
adc
jmp
xlat
sbb
addr16
cmpsl
int3
call
jns
jb
cmpsl
sbb
push
popa
inc
mov
add
out
push
sbb
sbb
je
ret
das
mov
fs
stos
and
les
add
add
mov
and
daa
in
cmp
cmp
in
pmuludq
sub
cmp
mov
inc
imul
repz
add
inc
gs
inc
imul
dec
ss
insb
jb
add
jno
inc
gs
pusha
jb
call
cmp
lods
add
xchg
inc
imul
pusha
dec
test
pushl
add
loop
push
into
hlt
jae
lret
enterw
loopne
jae
mov
testb
in
je
ret
adc
cwtl
add
pop
es
inc
sbb
dec
es
int3
dec
daa
sarb
je
jno
gs
add
inc
es
or
adc
popa
xchg
or
ja
cwtl
add
mov
aaa
sbb
add
and
outsb
sbb
int3
and
dec
lret
sub
std
xor
cmc
sbb
jecxz
imul
inc
add
xchg
xor
mov
je
jmp
rcrb
fnstsw
int
mov
push
add
and
mov
sbb
and
pop
fisttpl
mov
mov
push
xchg
adc
mov
jne
xchg
pop
mov
xor
test
pop
add
add
sub
inc
and
sbb
out
pop
lcall
and
aaa
add
add
sub
push
sub
push
or
or
add
mov
pop
repz
icebp
adc
std
notb
jb
scas
add
sarb
arpl
xchg
adc
xor
lods
adc
mov
add
xor
fsubl
lcall
je
mov
and
cltd
scas
push
popa
mov
jb
popf
and
pop
or
or
inc
xor
adc
lods
and
addl
push
mov
xor
frstor
sbb
pop
add
xlat
or
pop
outsb
add
cmc
pop
gs
outsl
xchg
ds
mov
jno
jl
jno
jp
xor
add
add
pusha
popa
or
dec
je
fstps
out
inc
inc
out
popa
mov
fnstenv
pop
call
inc
jb
loope
je
loopne
insl
out
push
add
jae
test
fs
pusha
add
xchg
out
popa
test
dec
sarb
jb
mov
fistpl
inc
sub
and
sbb
popa
and
pop
arpl
scas
sbb
sbb
insl
sarb
sbb
je
dec
packuswb
dec
and
mov
stos
iret
sub
mov
ja
jo
jbe
arpl
mov
aaa
xor
sub
push
pop
cmp
arpl
inc
add
aas
aas
insb
pop
lret
and
pop
roll
int
add
daa
sbb
pop
daa
sbb
or
loope
mov
inc
and
sub
roll
add
enter
int3
or
sbb
xor
or
int3
inc
movb
add
add
push
xchg
das
mov
lods
sbb
add
add
es
inc
jl
mov
push
mov
sbb
xor
pop
cmp
dec
inc
mov
and
cmp
adc
add
les
je
mov
popa
adc
sub
or
and
je
add
and
sahf
xor
cli
add
mov
or
add
mov
or
add
ret
fwait
jmp
push
fdivrl
push
inc
xchg
xor
or
add
into
cmovno
xor
cmpsb
std
or
push
sub
push
cmpsl
add
lret
lock
jo
into
cmpsl
popa
insb
mov
out
je
fisubs
test
sub
mov
jae
js
jae
pop
ljmp
test
pop
imul
pop
outsl
jns
pusha
arpl
add
add
push
inc
jmp
arpl
add
outsl
gs
in
jmp
gs
pop
je
add
add
pop
jbe
incl
test
jae
add
sub
add
fnstenv
je
enter
cltd
add
in
and
cmpsb
xlat
arpl
std
add
in
pop
sbb
adc
jmp
sbb
cwtl
add
inc
pop
insb
fnstcw
adc
inc
pop
loopw
add
mov
xlat
arpl
cwtl
add
mov
cwtl
add
add
cwtl
add
mov
cwtl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
int3
add
int3
int3
imul
inc
cmp
mov
jns
pushl
jbe
push
jo
xor
pop
jbe
xor
in
inc
mov
inc
add
mov
cmpl
jmp
loope
mov
mov
mov
subl
inc
mov
xor
bound
push
lcall
mov
stc
add
mov
inc
xlat
testl
xor
and
push
mov
xor
sbb
dec
cld
stc
repz
mov
cmp
jne
inc
mov
add
lea
inc
add
inc
mov
inc
fcoml
push
mov
pop
dec
call
cmp
negb
mov
jbe
inc
push
adc
in
inc
jmp
sti
jge
add
add
or
mov
test
jmp
xor
mov
faddp
int3
or
int3
add
int3
cli
dec
int3
int3
imul
add
subl
shl
sub
jg
cmp
mov
add
inc
add
out
mov
movsb
dec
incl
mov
imul
adc
xchg
inc
inc
cld
mov
or
add
sti
adc
or
mov
xor
sar
add
out
sub
mov
mov
adc
inc
int3
int3
or
int3
add
int3
cli
dec
int3
int3
mov
add
int
ds
lret
jge
int3
int3
orb
jp
int3
int3
or
push
mov
or
mov
dec
inc
mov
dec
int3
int3
orb
add
int3
int3
or
push
in
push
stos
test
inc
clc
cmpsb
imul
clc
mov
lcall
jle
mov
xor
aam
push
inc
les
push
icebp
sar
mov
fcmovnb
int3
mov
sti
add
mov
cmp
jle
dec
mov
dec
adc
mov
push
cld
leave
mov
mov
push
add
or
je
add
add
xor
mov
ror
dec
int3
int3
orb
jp
int3
int3
jmp
in
mov
lcall
inc
mov
dec
int3
int3
add
int3
cli
dec
int3
int3
imul
inc
movb
mov
mov
mov
sub
out
xchg
mov
cmp
jno
inc
stos
add
add
jle
sarl
sti
cmp
jne
inc
inc
sti
mov
jb
mov
ret
mov
cli
add
das
mov
mov
mov
pop
std
movsbl
xchg
mov
xor
mov
inc
add
adc
or
adc
or
test
inc
or
or
imul
std
mov
ffree
int3
imul
inc
mov
xor
add
mov
inc
addb
mov
std
out
add
test
add
push
lock
aad
mov
popa
cmpl
pop
add
add
fisttps
mov
cld
adc
inc
andl
mov
popa
mov
decb
mov
xchg
mov
insl
jmp
mov
add
mov
inc
int3
fisttps
aaa
aam
movl
add
adc
mov
bound
movl
add
add
loopne
inc
push
xchg
sbbl
sbb
jecxz
std
jmp
shl
mov
jp
addl
xchg
gs
xchg
jne
add
pop
lea
sti
push
out
sti
call
jge
or
fisttpl
add
insl
add
xor
incb
mov
popa
add
addr16
pushl
jecxz
jge
int3
int3
or
push
mov
dec
inc
mov
jne
inc
mov
imul
mov
inc
sqrtps
mov
sti
mov
fcmovnbe
ror
inc
int3
int3
mov
add
add
mov
dec
inc
mov
inc
mov
ror
inc
int3
int3
or
lahf
add
ret
decl
xor
mov
ds
leave
or
xor
push
xchg
mov
aaa
into
sti
mov
inc
inc
je
cmp
mov
xor
adc
mov
aad
pop
jne
mov
xor
adc
inc
adc
ret
pop
mov
in
mov
mov
mov
mov
cmp
xor
xor
movsl
call
in
inc
int3
int3
mov
int3
addb
jp
int3
int3
jmp
in
subl
inc
jbe
xor
mov
incb
lahf
in
add
sar
decl
les
aaa
mov
dec
clc
jne
decl
mov
ds
inc
mov
sar
jae
mov
mov
mov
add
push
push
xor
add
mov
push
mov
lret
add
add
add
dec
inc
mov
insl
dec
inc
mov
sar
pop
cmp
mov
shl
popf
inc
jbe
addl
mov
mov
imul
int3
cli
inc
int3
int3
imul
inc
ret
mov
add
int3
add
inc
int3
int3
cli
inc
int3
int3
imul
inc
mov
jo
mov
mov
mov
add
aaa
iret
fisttps
push
push
mov
xchg
mov
or
or
add
inc
add
push
jmp
push
push
je
lock
mov
popa
mov
rorl
push
fcmove
out
jmp
std
cmp
lds
add
add
insl
add
inc
fisttps
imul
jno
xor
push
add
dec
call
or
mov
mov
inc
fisttps
into
je
dec
pop
xor
test
add
inc
add
mov
mov
into
out
jnp
add
shl
push
adc
add
mov
jmp
mov
mov
cld
loope
add
jle
lahf
in
jne
decl
xchg
mov
mov
dec
inc
mov
add
dec
push
push
cmpl
push
jmp
mov
rorb
xor
jb
lock
adc
jmp
mov
shrb
and
out
mov
cmp
add
jne
out
push
inc
mov
std
push
out
sahf
les
add
fdivs
pop
add
mov
add
fisttps
sti
pop
push
mov
cmp
out
mov
cmpl
push
pop
jle
movsb
mov
cmp
fdivrs
add
loopne
cmp
inc
xor
insl
dec
inc
mov
sar
inc
or
dec
jg
push
mov
ja
cmp
popa
mov
add
std
dec
inc
mov
sar
dec
and
decl
incl
dec
incl
dec
mov
popa
dec
inc
mov
jno
addl
decl
leave
idiv
jno
les
sar
lret
pop
dec
inc
mov
jno
cmpl
inc
adc
les
fisttps
inc
mov
jl
loopne
ret
push
sbb
les
bound
mov
add
mov
fildl
inc
mov
pop
loop
test
add
mov
cmp
int3
int3
jmp
in
mov
cli
mov
into
ror
cmp
in
push
add
fmuls
add
add
add
cmp
int3
mov
cmpsb
lds
inc
mov
add
push
imul
mov
mov
shrb
xor
add
imul
imul
jl
subl
add
mov
add
add
mov
outsb
add
mov
add
add
std
fisttps
add
test
pop
mov
std
add
pop
dec
inc
mov
pop
or
mov
add
add
sar
mov
les
mov
sub
add
stos
mov
inc
add
add
add
out
shll
inc
mov
ret
cmp
xchg
js
int3
cmc
sar
push
add
jno
mov
incl
mov
mov
dec
inc
mov
fstps
incb
mov
mov
imull
outsb
add
jg
std
adc
pop
stc
dec
inc
add
add
sub
cmp
jno
dec
into
iret
out
shrb
addl
mov
mov
jb
push
mov
push
call
cmp
jb
dec
sahf
jns
cld
jae
jns
loopne
jns
fmull
pop
scas
sti
popa
insl
add
incl
mov
in
mov
add
inc
sbb
mov
mov
push
idiv
adc
repz
add
jp
in
sti
add
js
loopne
out
dec
jg
xchg
pop
sahf
jnp
add
mov
testl
aad
out
jae
js
in
ret
repz
add
js
clc
aas
inc
out
mov
mov
divl
les
add
jp
jmp
jp
aam
ret
rcll
inc
mov
cmp
mov
dec
dec
inc
mov
imul
inc
mov
aas
add
pop
add
mov
pop
iret
mov
rorl
inc
mov
add
mov
inc
add
mov
dec
inc
mov
imul
jle
add
jle
sub
mov
sub
add
les
add
pop
and
mov
iret
shlb
jbe
pop
std
cmp
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
xor
cwtl
xor
mov
xor
add
add
xor
xor
dec
xor
xor
xor
xor
xor
das
add
mov
lea
sub
ja
cmp
test
ss
xor
aaa
aaa
lahf
xor
jl
xor
add
cmc
xor
icebp
xor
aaa
movsl
xor
aaa
lock
aaa
shll
aaa
and
mov
imul
cmp
cmp
repz
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
cmp
xchg
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
aaa
adc
cmpsb
aaa
sbb
cmp
jbe
repnz
cmpb
aaa
mov
test
call
cmp
cmp
cmp
cmp
lahf
cmp
test
xchg
dec
cmp
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
popf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
sahf
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
sahf
inc
add
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
sahf
inc
add
lahf
inc
add
inc
add
lahf
inc
add
inc
add
popf
inc
add
lahf
inc
add
inc
add
inc
add
add
inc
add
add
sahf
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
sahf
inc
add
add
add
inc
add
add
inc
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
inc
add
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
add
inc
add
add
popf
inc
add
inc
add
add
inc
add
popf
inc
add
add
inc
add
inc
add
inc
add
sahf
inc
add
add
inc
add
add
sahf
inc
add
popf
inc
add
inc
add
inc
add
inc
add
lahf
inc
add
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
add
inc
add
add
inc
add
add
inc
add
mov
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
mov
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
movsb
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
movsb
inc
add
movsb
inc
add
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
inc
add
inc
add
movsb
inc
add
inc
add
movsb
inc
add
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
movsb
inc
add
mov
inc
add
movsb
inc
add
movsb
inc
add
mov
inc
add
inc
add
inc
add
inc
add
movsb
inc
add
inc
add
add
inc
add
inc
add
movsb
inc
add
movsl
inc
add
inc
add
add
inc
add
movsl
inc
add
inc
add
inc
add
inc
add
add
movsl
inc
add
movsb
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
movsb
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
movsl
inc
add
movsb
inc
add
movsl
inc
add
inc
add
inc
add
movsl
inc
add
add
inc
add
inc
add
movsl
inc
add
movsl
inc
add
add
movsl
inc
add
movsb
inc
add
inc
add
movsl
inc
add
inc
add
inc
add
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
inc
add
inc
add
inc
add
movsb
inc
add
inc
add
movsl
inc
add
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsb
inc
add
movsl
inc
add
movsb
inc
add
movsl
inc
add
movsl
inc
add
movsb
inc
add
inc
add
movsl
inc
add
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
inc
add
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsl
inc
add
inc
add
cmpsl
inc
add
inc
add
cmpsl
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsl
inc
add
inc
add
cmpsl
inc
add
inc
add
inc
add
cmpsl
inc
add
inc
add
inc
add
cmpsl
inc
add
inc
add
cmpsl
inc
add
inc
add
inc
add
add
inc
add
add
add
cmpsb
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmpsl
inc
add
cmpsb
inc
add
cmpsl
inc
add
cmpsb
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
add
cmpsb
inc
add
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsb
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
inc
add
cmpsb
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
inc
add
inc
add
test
add
inc
add
test
add
cmpsb
inc
add
inc
add
test
add
test
add
test
add
add
cmpsl
inc
add
inc
add
test
add
inc
add
test
add
inc
add
test
add
inc
add
test
add
cmpsb
inc
add
inc
add
cmpsl
inc
add
inc
add
cmpsb
inc
add
add
inc
add
add
inc
add
cmpsl
inc
add
cmpsb
inc
add
add
inc
add
add
inc
add
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
add
inc
add
add
inc
add
add
inc
add
add
test
add
test
add
inc
add
test
add
test
add
test
add
test
add
test
add
inc
add
inc
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
inc
add
test
add
test
add
inc
add
test
add
test
inc
add
test
inc
add
test
inc
add
test
inc
add
test
inc
add
test
inc
add
add
inc
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
inc
add
test
add
inc
add
test
add
inc
add
test
add
inc
add
test
inc
add
inc
add
add
test
inc
add
inc
add
inc
add
add
test
inc
add
add
test
add
test
inc
add
test
add
inc
add
inc
add
add
test
inc
add
inc
add
test
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
test
inc
add
inc
add
add
test
add
add
test
add
add
test
add
test
add
inc
add
inc
add
test
inc
add
test
add
inc
add
test
add
test
inc
add
add
test
add
inc
add
test
add
test
inc
add
test
add
test
add
inc
add
inc
add
add
inc
add
inc
add
test
add
inc
add
inc
add
add
add
inc
add
test
add
inc
add
test
add
add
test
add
test
inc
add
test
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
test
add
test
add
test
add
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
