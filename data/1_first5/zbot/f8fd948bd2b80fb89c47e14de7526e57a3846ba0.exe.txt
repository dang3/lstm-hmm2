push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
int3
add
add
push
inc
add
je
sub
inc
adc
jae
add
outsb
popa
fs
jb
inc
add
add
outsb
popa
fs
jno
inc
loope
add
mulb
out
jne
aam
popa
outsb
inc
cmp
add
jp
gs
movsl
gs
imul
popa
je
cmp
add
jle
je
add
jae
imul
jns
cmp
add
jle
je
pop
fs
pop
dec
popa
outsb
push
insb
gs
cmp
add
xor
add
push
add
dec
add
add
inc
add
add
sbb
inc
add
add
mulb
jmp
arpl
arpl
lret
add
outsb
popa
fs
push
jns
add
arpl
pushf
insb
xor
dec
fs
insb
cmp
add
pushf
jno
arpl
insb
add
arpl
push
je
add
arpl
cs
add
pop
arpl
dec
ja
add
jb
sub
insb
inc
sbb
add
add
addr16
or
insb
inc
sbb
add
add
insl
insl
popa
jmp
out
inc
shrb
add
addr16
int3
pop
insb
push
lret
insb
je
fidivl
add
bound
js
insb
outsl
lcall
outsb
xchg
insb
xor
fs
insb
cmp
add
jle
je
mov
gs
dec
gs
jo
add
add
add
movsb
pop
nop
cmp
add
cmp
add
cmp
sti
add
das
add
cmp
add
cmp
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
addr16
cmp
sbb
jl
mov
push
sar
jbe
test
enter
enter
frstor
bound
insl
outsb
pop
movsl
dec
push
pop
les
pop
sti
or
cmp
jmp
mov
add
add
inc
dec
jmp
add
add
add
add
add
cs
dec
cmp
jmp
loope
add
adc
add
adc
add
add
call
add
cmp
jmp
add
add
add
add
jae
add
add
cmp
jmp
cmp
jmp
jmp
add
add
adc
add
jmp
cmp
add
cmp
add
cmp
add
imul
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jmp
cmp
add
cmp
add
cmp
add
test
jmp
add
cmp
add
cmp
add
adc
call
jmp
std
jmp
std
decl
push
js
std
lcall
or
add
rolb
add
mov
std
call
add
pusha
jb,pt
popa
in
add
add
or
add
pusha
icebp
add
push
std
call
jmp
jmp
add
inc
outsb
pop
popa
je
add
add
add
and
add
adc
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
inc
cmp
je
add
stc
divl
jge
push
decl
ret
push
mov
out
jb
cmpsb
testl
ret
jne
mov
add
in
pop
call
dec
sub
add
lret
out
pushl
cmc
pop
je
mov
add
add
inc
mov
imul
outsb
inc
testl
ret
fldl
mov
xchg
jge
inc
jmp
idiv
cmp
jmp
add
add
xor
cmp
negl
insl
shl
or
push
and
ret
add
mov
ret
jmp
divb
xchg
add
add
mov
cmp
add
mov
mov
mov
clc
mov
push
divl
pop
insl
or
or
mov
out
notb
mov
mov
push
add
out
cld
push
dec
clc
lcall
mov
cmp
ret
push
ret
ret
mov
leave
stos
inc
add
mov
daa
adc
xor
idiv
cmp
divl
add
jmp
cmp
ret
mov
mov
lea
or
adc
jne
in
jne
xchg
push
or
push
je
mov
in
cmp
addr16
mov
imul
rorb
or
int
in
orl
push
sub
ret
aaa
jg
or
gs
xorl
rcrb
or
add
outsb
adc
in
or
pop
fnstcw
or
sbb
add
lea
or
cmp
jmp
jle
shl
rclb
jbe
cmp
cld
sub
mov
mov
ljmp
shl
add
xchg
lret
out
mov
addr16
push
add
cwtl
add
movb
push
xchg
add
out
andb
add
rcrb
inc
add
mov
add
adc
cmp
push
movsl
repz
pop
lcall
lock
cs
jns
cmc
adc
push
sub
mov
lods
clc
pop
mov
in
repz
adc
push
or
cmp
rep
hlt
push
or
add
stos
cmp
jmp
add
pop
mov
test
mov
repz
xchg
movsb
hlt
repnz
leave
sub
cmp
fbld
pushf
sti
inc
cmp
pop
add
adc
js
call
add
fsubp
subl
push
sbb
cmp
decl
and
add
jmp
push
bnd
repnz
std
pop
or
call
push
repz
jmp
or
test
leave
sub
repnz
addr16
jp
clc
fwait
xor
repz
loop
incl
stos
enter
dec
mov
dec
add
sarl
adc
push
add
push
add
hlt
add
decl
cltd
mov
in
andl
lea
hlt
out
mov
add
mov
bswap
imul
rorb
add
je
adcl
in
push
add
movsl
cmc
out
pxor
mov
imul
xchg
add
add
ret
dec
mov
adc
cld
jmp
cmp
push
outsl
push
call
jle
inc
or
incl
je
loop
inc
mov
jns
lds
cmp
addl
jbe
jo
pushl
hlt
movsb
out
fneni(8087
and
jmp
mov
add
out
add
fcompl
dec
insb
out
fistl
in
xor
leave
sti
fiaddl
push
mov
test
aad
jl
cmp
or
inc
negl
sub
fldt
out
or
or
add
out
stos
add
test
cmp
add
imul
pop
stos
add
dec
loopne
mov
xchg
cmp
xchg
jge
mull
add
out
hlt
incl
push
inc
ja
push
jl
add
adc
add
lock
jne
out
insb
cld
inc
push
dec
mov
loopne
les
jl
jmp
dec
lds
jmp
sti
ret
adc
push
xchg
add
jne
cmc
jne
out
adc
cmp
jnp
loope
ret
loope
in
inc
cmp
inc
cmc
or
jne
add
mov
dec
mov
mov
cmp
sbb
out
lea
out
leave
stos
xor
push
jb
cmpl
je
push
adc
fisttpll
jne
pop
jne
push
cmp
pushl
clc
sti
call
dec
out
jne
repnz
jmp
filds
adc
dec
cld
call
fnsave
cmpsl
jbe
call
add
or
dec
imul
jae
js
rolb
pusha
movl
jne
js
call
push
mov
rcrl
decl
jne
fnsave
enter
cmpsl
push
decl
fnsave
push
test
mov
ja
or
daa
fdivrp
inc
inc
or
and
add
jne
call
cmp
fldt
push
in
push
pop
inc
or
divb
mov
push
add
add
sbbb
xorl
jne
mov
sbb
jo
cld
mov
xlat
in
jne
xchg
adc
jmp
cld
push
hlt
sti
out
fs
incl
push
aam
out
push
in
inc
mov
add
cmp
hlt
cmp
add
mov
in
xchg
sti
mov
sub
in
jl
sahf
fs
sahf
jbe
jmp
jb
ficompl
mov
push
adc
rcll
shlb
jmp
jno
xlat
adc
inc
fsub
out
in
jb
add
mov
jno
fcoms
ljmp
sbb
and
inc
pop
add
add
js
in
mov
sub
add
cmp
lods
ljmp
ljmp
dec
inc
clc
push
call
insl
adc
jmp
or
cmp
mov
icebp
ljmp
jmp
std
inc
hlt
add
jmp
mov
add
dec
jmp
icebp
cmpb
mov
cmp
shlb
push
cld
mov
jmp
cmpsb
jns
add
cmp
lea
jecxz
pop
adc
adc
pushl
repz
xchg
fidivl
mov
leave
push
sub
lret
adc
in
and
loop
jmp
incl
out
pop
cltd
fdivr
mov
pushl
lret
into
pusha
decb
shlb
jne
xlat
jne
xor
sub
pusha
jne
lret
push
into
push
jne
xor
mov
push
mov
fisttpl
in
out
dec
add
test
pop
stc
xchg
out
sti
out
inc
jmp
incl
push
not
add
stc
fidivrl
cmp
add
lods
ud0
cmp
test
cmp
push
call
mov
fdivr
in
lret
push
xlat
add
pop
movl
add
pusha
ds
dec
mov
ss
jmp
add
inc
adc
cld
and
mov
cmp
data16
xor
cli
in
imul
ret
sti
push
ret
push
inc
cmp
mov
call
inc
hlt
outsb
xor
arpl
mov
jb
call
xor
or
sahf
call
add
add
add
add
loope
add
mov
jmp
push
inc
add
mov
mov
jnp
jl
cld
xor
push
add
jne
inc
pushf
cmp
add
adc
bound
mov
flds
adc
rep
nop
mov
inc
leave
sub
dec
push
bound
hlt
sti
bound
clc
mov
inc
pop
and
jnp
call
add
xor
add
jge
pop
add
arpl
pop
mov
ret
lods
push
dec
push
cmp
out
loope
xchg
incl
mov
mov
es
sub
add
loop
push
or
movsl
inc
rorb
leave
sub
imul
add
add
cmpsl
xchg
push
sbb
cmp
aaa
imul
sbb
adc
sub
xchg
shlb
cmp
leave
mov
movl
pop
lret
inc
test
add
es
mov
call
add
cmp
js
dec
jp
jl
cmc
mov
insb
cmc
mov
scas
jnp
add
xlat
dec
cld
inc
lea
cld
ret
jecxz
mov
jl
adc
lods
inc
int
dec
pushl
push
add
jno
cmp
xchg
jmp
dec
in
mov
jecxz
add
xchg
out
cli
xlat
inc
pop
loop
rorl
jns
mov
mov
sub
movsl
outsb
or
mov
cmp
mov
jg
add
add
in
es
ds
cmpsl
mov
cmp
test
xchg
hlt
push
fistpl
pop
in
cmp
insb
in
dec
outsb
loope
mov
in
in
out
mov
add
in
negl
push
push
outsb
xor
in
push
mov
in
out
xchg
jne
aad
jecxz
dec
shl
add
jecxz
test
outsb
inc
pop
cltd
sub
pushl
pop
in
repnz
xchg
sbb
xchg
cmp
push
jecxz
lret
jne
sbb
in
loope
and
data16
ret
or
and
push
in
push
jb
or
sub
jmp
pavgw
out
add
jmp
push
or
jl
cmpsb
add
cmp
jmp
push
into
andl
leave
cmp
add
add
push
sub
decl
mov
les
push
nop
inc
hlt
jo
add
inc
in
jne
or
adc
or
adc
jae
xchg
pusha
hlt
add
cld
jae
imul
inc
mov
outsl
fimuls
push
cmpsl
push
add
fnsave
cmovs
call
stos
mov
daa
std
das
fisubrs
ljmp
repz
icebp
mov
clc
jne
sarl
cmp
ret
jne
push
pop
sbb
es
mov
loopne
push
inc
and
inc
enter
lcall
es
ret
mov
and
xlat
add
jmp
inc
add
xchg
or
inc
push
adc
repz
fs
loopne
inc
dec
fdivr
into
and
ret
sub
mov
mov
lock
cmp
out
jae
pop
xor
inc
loopne
mov
repnz
cmc
icebp
mov
loope
in
inc
les
loope
mov
adc
xor
or
subb
mov
add
cmp
jmp
inc
js
fcmovb
jbe
sbb
cmp
dec
push
xor
hlt
or
cmp
inc
and
jmp
push
ss
test
into
push
jmp
mov
add
fsubrs
cmp
ljmp
loopne
mov
jl
ljmp
add
in
push
add
mov
jmp
jnp
cmp
idiv
cmp
mov
inc
jmp
xchg
pop
sub
inc
sub
cmp
sbb
fadds
cmc
add
ljmp
jmp
mov
call
dec
jo
push
push
sub
add
out
or
popf
cs
xor
add
aaa
push
add
ja
incl
and
sub
ljmp
cli
add
jne
imul
inc
push
mov
jns
mov
sti
call
lds
adc
add
xchg
sub
or
mov
inc
add
in
fldcw
gs
or
inc
sub
mov
dec
ret
dec
dec
cld
jmp
add
je
mov
out
ret
jmp
mov
rol
je
imul
add
jmp
or
shr
imul
jecxz
imul
shr
cmp
add
add
popl
loope
add
cmp
lret
ret
mov
cmpsl
pop
add
inc
lahf
add
cmp
lret
out
jne
aas
inc
enter
clc
xchg
push
test
inc
xor
movntq
sub
cmp
jmp
ret
mov
popf
subl
jmp
enter
rcrb
or
shll
cld
xor
push
pop
roll
jno
jmp
fsubl
sahf
sub
call
mov
mov
push
xor
xorl
imul
imul
add
or
icebp
jmp
mov
add
push
mov
stos
add
push
cmpl
add
sub
scas
cmp
or
push
sub
add
push
push
cmp
call
pop
testb
test
cmp
inc
scas
cmp
sbb
add
inc
andl
jle
fldt
test
imul
add
adc
adcl
push
pop
add
or
lcall
call
pop
repz
push
add
pop
pop
ret
lds
out
jg
push
subl
jae
pop
lock
mov
push
ljmp
push
cmpb
fs
xor
enter
scas
mov
inc
add
adc
decl
psubsb
jno
decl
jg
call
mov
push
and
mov
add
imul
or
sbbb
add
mov
call
cmp
incl
add
jg
push
das
add
mov
jmp
test
fcos
add
rorl
lods
xchg
in
scas
mul
add
stc
sarb
cmp
add
mov
and
outsl
pop
cld
pop
or
add
out
shlb
pop
xor
call
loop
test
add
add
cltd
jmp
inc
jmp
push
sub
jmp
cmp
imul
fadds
out
xchg
add
add
jl
add
xor
mov
into
fsubr
fdivrs
fnstcw
fdivrs
cmp
sub
xchg
mov
push
flds
push
cmp
imul
inc
rolb
jge,pn
adc
adc
cld
inc
icebp
fcoms
inc
ret
add
or
fdivr
cltd
xchg
xchg
in
ds
inc
jno
call
push
mov
out
push
popa
out
cmc
mov
call
add
mov
cmp
inc
push
pop
mov
das
pushl
pushl
push
jmp
call
call
out
xlat
test
jl
dec
xchg
incl
scas
jne
mov
imul
jmp
push
hlt
ja
push
ja
in
out
ja
call
lea
or
mov
cmp
movb
add
lret
scas
mov
inc
scas
call
flds
pushl
js
idiv
ja
jmp
adc
mov
clc
xchg
les
add
or
je
mov
mov
jns
cmp
or
mov
test
jmp
adc
in
pop
push
imul
into
sub
add
in
inc
out
scas
inc
test
cmpsb
and
aad
xchg
sub
out
mov
ljmp
lds
or
out
outsb
int
jb
call
xor
mov
mov
decl
aam
add
sbb
in
mov
cmp
cmp
aam
sub
xchg
aad
jmp
xchg
adc
mov
aad
xor
call
out
mov
aad
dec
and
jmp
or
inc
adc
sub
cmp
call
add
and
add
addb
dec
sub
jl
jbe
icebp
imul
aad
aas
pop
jmp
jmp
push
lock
sub
icebp
jno
xor
pop
add
cmp
jmp
rcll
jg
adcl
cld
xchg
mov
cmp
push
repnz
or
aas
add
inc
sub
testb
mov
bound
add
cmp
add
gs
gs
or
push
mov
jl
call
xor
dec
setbe
fmuls
ficoml
aas
add
push
mov
les
add
shlb
adc
push
sub
push
call
add
shlb
ljmp
xor
sar
cmp
ss
out
mov
mov
leave
ret
push
mov
jp
cld
sub
add
shlb
inc
pop
scas
jne
das
cmp
jmp
scas
push
into
jne
scas
jne
cmp
push
scas
jne
push
xchg
ret
jmp
add
and
ret
je
pop
stos
push
push
in
ret
cmpsb
mov
sub
cli
or
idivb
jmp
sti
call
pop
pop
jbe
xor
sti
rolb
mov
mov
pop
jle
inc
out
ret
cld
lock
jmp
push
cmp
or
add
faddp
jne
mov
es
inc
fiaddl
mov
idiv
inc
xor
xchg
jge
pop
loop
lods
sti
push
mov
add
add
mov
xchg
stc
mov
cmp
and
jmp
add
add
test
add
out
mov
mov
aad
mov
push
cmp
call
cltd
fisttpl
fsubs
ret
jl
add
push
fldl
mov
inc
dec
cld
cld
orl
mov
test
inc
or
leave
stos
inc
rcll
mov
call
stos
or
movq
outsl
cmp
lea
jns
mov
das
jns
cli
bextr
cmp
sti
add
cmp
jo
repnz
xor
jns
mov
add
ss
nop
mov
and
ljmp
mov
stc
mov
cmp
roll
inc
nop
add
xchg
nop
pop
fwait
mov
push
push
fs
jne
rclb
rclb
in
inc
push
push
nop
or
jmp
push
test
add
test
inc
ret
pop
addb
add
aas
ficoms
inc
sbb
ret
push
mov
in
push
mov
lea
adc
mov
lods
xchg
sub
stos
js
nop
add
ror
pushl
mov
push
cmp
pop
or
iret
call
xor
pop
add
aad
cld
add
roll
shrb
add
fs
aaa
mov
add
cmp
cli
mov
cmp
adc
flds
movzbl
add
cmp
add
mov
int
out
fistl
clc
fadds
lea
fildl
sub
out
addr16
add
mov
or
into
call
mov
into
adc
jg
loope
mov
das
adc
mov
test
cmp
pop
cmp
pop
cmp
jmp
into
cs
rorl
stc
add
jp
enter
int
hlt
andps
int3
mov
xchg
xchg
bswap
xchg
jns
into
adc
loope
test
push
xor
cmp
xlat
int
fdivrl
xchg
dec
into
mov
int
jns
sub
ret
xchg
js
jg
sub
dec
int
cmc
jne
or
test
rol
sti
jmp
inc
mov
push
jp
test
cmp
jnp
je
cmp
add
jmp
cmp
or
cmp
cmp
fidivs
jnp
popf
add
cmp
fs
fmuls
in
int3
or
sub
fdivr
pop
in
das
call
dec
pop
clc
dec
add
lock
lcall
ud0
enter
mov
into
cmc
pop
mov
push
call
imul
push
pop
xor
call
flds
sbb
add
inc
hlt
add
jne
clc
aaa
rolb
add
hlt
clc
adc
je
ud0
lods
add
iret
mov
fsubrs
mov
clc
inc
adc
sub
mov
call
mov
add
pop
inc
add
cmp
aad
scas
cmp
xchg
dec
sahf
dec
pop
adcb
jmp
pop
fcoms
movsb
sti
ljmp
add
add
mov
rcrb
mov
fldl
mov
pop
or
lods
mov
inc
mov
mov
cmp
add
lcall
fisttpl
mov
cmc
add
fs
inc
adc
jmp
jle
jmp
inc
mov
ret
mov
add
push
fildl
cmp
mov
mov
call
cmpb
inc
gs
call
lret
jmp
jmp
out
push
sub
rcrb
ret
cmp
ja
aam
pop
pop
cs
into
sbb
add
rcrb
cmp
jmp
aas
ror
cld
movl
push
cld
call
in
call
jbe
add
cmp
push
add
push
daa
inc
in
hlt
mov
cs
add
jp
add
idiv
xchg
jbe
jmp
xor
mov
loope
xor
rcrl
add
jp
call
cmp
push
or
std
int
jmp
stos
push
leave
push
out
jl
movsl
inc
jge
icebp
cmp
ret
leave
stos
out
sub
fwait
sub
push
sub
push
sub
dec
les
ljmp
or
xor
hlt
movsb
push
lock
mov
mov
jp
imul
lret
jne
sub
push
movsb
ljmp
les
add
jnp
mov
sti
mov
add
adc
push
arpl
inc
or
inc
addb
add
adc
cld
call
dec
fmuls
cmp
in
mov
sti
add
xchg
jg
jp
sub
pop
lret
cmp
add
sbbl
inc
in
mov
or
cmp
inc
addr16
decl
not
cmpl
in
pop
inc
sti
mov
enter
flds
add
add
cmp
jp
dec
stos
mov
pop
andl
push
jmpw
imul
mov
and
ret
cmp
jl
les
mov
in
outsb
clc
jno
inc
jnp
adc
and
ret
je
incb
inc
pushf
shrl
add
jp
adc
mov
out
xchg
mov
ljmp
mov
lret
sub
lret
lret
fs
stos
cltd
and
rcr
cmpl
inc
and
adc
test
and
pushf
ret
cmp
in
cli
out
jmp
leave
pop
leave
cli
leave
mov
cmc
jnp
cmp
adc
stos
jo
xor
data16
pop
rcll
shrb
adc
or
cmc
adc
xchg
rol
cmp
and
sub
lea
add
std
jnp
push
ljmp
sti
mov
mov
and
jne
add
add
xor
scas
insb
pop
jle
cmp
shl
add
fwait
mov
xor
insl
dec
cmpxchg
incl
push
in
shl
leave
mov
out
testl
dec
rol
mov
mov
lea
incl
push
roll
push
dec
sti
xor
and
xor
dec
xchg
pop
add
xor
shll
add
lret
mov
xor
fisttpll
arpl
rol
enter
scas
div
pop
shl
mov
inc
dec
add
fmull
jecxz
mov
and
xor
xchg
sti
or
clc
push
xchg
xchg
inc
cltd
jbe
jns
pop
sbb
js
or
xor
pop
nop
psubsb
cmp
push
lret
idiv
sbb
idiv
les
stos
jbe
lods
add
sbb
adc
lock
push
loop
xor
loopne
mov
stos
ljmp
mov
or
dec
das
std
inc
cmp
ss
stc
mov
xchg
testb
push
xor
je
adc
xor
int
lds
mov
lods
arpl
lret
xchg
scas
dec
push
out
out
daa
sub
push
xor
jo
and
pop
and
dec
adc
mov
lret
movl
out
mov
ret
mov
shll
and
or
lea
sub
xchg
sar
in
mov
cli
fidivl
jae
testb
and
mov
xor
xor
jl
in
jecxz
test
sub
std
ret
or
sti
insb
mov
les
xchg
inc
mov
mov
insb
and
fs
lea
cmpsl
add
cmpsl
sbb
dec
add
push
push
mov
cli
repz
clc
push
orb
xchg
cld
pop
xor
mov
stc
xor
lret
cli
lea
add
mov
mov
add
pop
orl
rol
sti
iret
mov
int3
cli
xor
jb
rdmsr
sbb
sub
popa
in
add
or
lea
and
mov
stc
xor
in
repz
les
inc
arpl
addr16
fcmovb
shlb
mov
pop
shrb
dec
cmp
adc
sti
mov
repz
dec
ret
xchg
mov
dec
dec
mov
clc
push
mov
lea
inc
add
push
mov
add
repz
mov
sub
negl
mov
sub
pop
orl
ljmp
ljmp
mov
fldcw
js
flds
jae
repz
nop
int
in
and
shrl
dec
mov
out
out
rcll
ret
add
repnz
repnz
jge
fcompl
mov
shll
mov
in
inc
add
add
repnz
nop
movsl
push
les
ret
add
adc
shrl
add
cmpsw
mov
or
dec
mov
gs
inc
and
mov
push
sub
add
mov
out
in
icebp
clc
repnz
icebp
cli
insb
rcll
aaa
pop
mov
mov
cli
mov
cli
cli
mov
mov
pop
loope
push
cmp
test
or
incl
xor
fstps
add
dec
mov
mov
sbb
or
add
rcrb
add
and
push
add
cmp
incl
aas
jnp
stc
pop
jns
sti
in
xchg
pop
xchg
or
popl
cmpsb
or
sarb
inc
ja
cli
inc
jl
mov
repz
decl
rol
lsl
cmp
ljmp
jns
cli
insl
popf
pop
rcrl
or
ret
mov
xorl
repz
test
incl
push
roll
add
ljmp
xorb
pop
pop
dec
out
std
cmp
add
sahf
sbb
mov
lea
dec
add
call
jnp
mov
mov
pop
fdivrs
out
sar
push
fnstenv
mov
or
mov
jle
lcall
push
cmp
mov
sahf
mov
pop
insb
add
mov
jns
jecxz
imul
mov
les
pop
testl
xor
mov
loop
or
sbb
stc
mov
fs
add
pop
cmp
push
fnstsw
xor
jo
repz
adc
leave
stos
pop
cmp
cmpsl
mov
dec
cmpsb
inc
add
mov
add
add
or
incl
or
and
in
push
inc
jmp
jnp
call
sbb
xchg
push
inc
jmp
jnp
lock
out
or
in
mov
or
add
mov
arpl
aad
ljmp
mov
add
mov
clc
sub
and
jge
sub
inc
or
das
mov
inc
jmp
nop
mov
adcl
sub
scas
sbb
jmp
jmp
arpl
std
inc
js
imul
divl
jmp
jmp
test
inc
pusha
std
inc
js
mov
add
pusha
mov
testl
xor
mov
cmp
adc
loopne
push
add
adc
fwait
add
arpl
bswap
pop
lret
bswap
ret
pop
arpl
test
mov
arpl
sbb
add
cmp
cmpsl
arpl
clc
cmpsb
mov
adc
mov
xchg
xchg
dec
mov
ret
dec
mov
mov
lcall
dec
or
mov
add
jno
int
cmp
test
pop
inc
cmp
xor
shrb
decl
and
lea
inc
add
call
mov
repnz
fcmovb
call
in
add
inc
cld
int
adc
popa
icebp
lcall
and
lcall
mov
cmp
lret
xchg
mov
mov
cmp
jl
mov
inc
ret
mov
test
lods
mov
xchg
mov
mov
cmp
mov
pushf
mov
mov
or
stos
add
fsubrs
xor
js
mov
mov
mov
jns
xor
ss
add
jns
add
mov
mov
sub
mov
jne
push
in
mov
test
cld
add
sub
mov
mov
mov
int
daa
inc
ret
mov
fs
add
add
aam
add
cmp
pusha
add
jb
mov
inc
je
ja
out
mov
cmpsl
ror
sub
icebp
shr
test
test
add
loop
jmp
mov
mov
xchg
rcll
iret
add
add
add
arpl
mov
mov
arpl
add
lock
adc
in
pmulhw
call
jecxz
pushl
insb
jne
cmp
shlb
ljmp
insb
jmp
fwait
cmp
nop
or
jne
fsubrs
cmp
test
mov
mov
add
incl
jbe
xor
inc
imul
dec
add
add
andb
xchg
adc
mov
mov
pop
pop
lock
data16
mov
cld
rolb
je
xor
or
aad
jge
cmpsl
or
mov
mov
xor
es
ds
add
inc
xor
hlt
xchg
flds
call
cmp
mov
or
pushf
add
jmp
xchg
leave
stos
add
dec
bound
sub
sbb
xchg
jmp
mov
xor
inc
add
add
sbb
push
mov
sti
sahf
mov
add
jge
xor
punpckhdq
dec
add
cmp
sub
enter
dec
jb
mov
mov
cmp
inc
subl
dec
mov
mov
jmp
fidivs
add
mov
mov
cmp
addl
mov
dec
push
xor
lea
lcall
mov
mov
std
ss
shl
out
mov
jmp
xchg
mov
jb
jle
push
out
fcmovb
add
jne
add
test
ds
push
sarb
or
cmpsb
mov
add
mulb
inc
add
dec
pushl
xchg
push
mov
incb
or
inc
ljmp
mov
fwait
dec
or
repnz
push
xor
inc
outsl
jne
cmpsl
dec
adc
or
outsl
cmp
or
ret
pop
jne
adc
nop
dec
mov
adc
add
daa
outsl
push
sub
adc
insl
mov
sbb
outsb
decl
and
pushw
jo
or
mov
jmp
mov
jne
xchg
push
adcl
dec
add
cmp
adc
xchg
jle
cmp
or
popa
je
cmp
jns
mov
pushf
daa
mov
push
or
aam
add
mov
add
popa
mov
into
adc
ljmp
dec
sub
jge
cmpsl
ss
lea
test
or
push
mov
adc
mov
inc
aas
pop
fsubrl
enter
add
cmp
push
or
aam
inc
push
mov
scas
jmp
push
fisttpll
sub
repnz
xor
xor
in
jp
subl
cmp
mov
mov
popa
ljmp
scas
jge
lods
je
int
xchg
outsl
loop
xchg
repz
sbb
sbb
jmp
cmp
test
mov
out
cmp
sub
outsb
in
call
or
add
cmp
pushl
xchg
scas
test
add
lcall
scas
mov
sbb
cmp
pushl
jne
xlat
push
or
jno
add
cmp
push
and
sbb
outsb
je
push
test
and
aas
add
cmp
mov
cmp
mov
xor
mov
call
mov
jns
push
inc
inc
add
lcall
mov
sub
pop
jne
clc
stc
mov
push
push
or
movsb
inc
mov
mov
mov
adc
add
movl
add
xor
adc
add
shll
call
mov
or
adc
mov
sti
push
push
call
add
lds
popf
cmp
incl
call
sbbl
inc
clc
mov
cmc
idiv
gs
jne
lahf
fwait
out
lods
in
ljmp
jns
add
xor
push
hlt
mov
lods
jne
push
aaa
hlt
cs
mov
ret
mov
sahf
ss
push
jmp
fwait
mov
fcmovnbe
lods
mov
fisttpll
sti
mov
push
mov
add
cmp
inc
int
add
fldt
cld
xchg
push
push
adc
or
pusha
roll
mov
pop
push
push
cs
popf
call
sbb
adc
add
dec
lods
dec
jbe
ret
sar
clc
add
cwtl
movsl
mov
add
sbb
adc
add
hlt
sbb
cs
imul
inc
std
in
call
les
push
sub
into
sti
call
stos
cs
js
ret
cmp
add
adcl
xchg
xor
add
jp
push
push
aam
fdivrl
cltd
std
jmp
ljmp
inc
jns
stos
jne
xor
jge
and
xor
add
add
push
jge
movsb
in
call
fs
inc
lods
push
stos
jmp
jns
and
stos
psubsw
ret
inc
mov
cli
call
daa
add
xchg
xor
xchg
sti
outsl
add
scas
push
out
sub
add
nop
out
add
and
incl
lock
push
test
mov
xchg
scas
push
incb
inc
xor
push
pop
lock
decl
jne
dec
aaa
mov
push
jne
cmp
pushl
push
jne
sub
lods
add
dec
pushl
push
jne
call
lods
mov
xorl
je
pop
jne
add
xor
clc
mov
or
sub
or
outsb
xor
mov
push
push
sahf
lods
ud0
fwait
rorl
sbb
mov
dec
pop
add
dec
das
shlb
jmp
das
mov
push
ljmp
inc
push
daa
lods
cmp
pushf
stos
sbb
test
leave
sti
movb
ret
les
adc
idiv
mov
test
xchg
das
dec
mov
push
clc
out
nop
add
mov
jmp
out
mov
lods
mov
popf
fwait
ja
jmp
or
test
test
xchg
fsubl
cmp
xor
cmpb
addb
das
das
test
jp
xor
mov
cwtl
xchg
add
les
test
insb
adc
sub
cmpsl
insb
or
xor
jnp
out
into
xor
cmp
xlat
sub
add
cmp
xchg
mov
add
adc
cmpsl
jae
xlat
sub
out
andl
lahf
mov
sub
push
add
xchg
sub
ds
cmp
push
hlt
pushl
and
cli
mov
sbb
jmp
mov
in
cmp
adc
sub
push
mov
mov
into
xchg
cli
mov
jne
pop
jne
out
idiv
add
fistps
lea
push
call
scas
out
or
inc
mov
or
and
jb
jne
mov
inc
pop
cmpl
xchg
scas
out
hlt
pop
decl
adc
xor
aad
out
xor
decl
push
aad
subl
ud0
pop
jne
or
cs
lock
fwait
ss
movsl
decl
out
movsw
leave
sti
fwait
add
arpl
fisubrl
jb
pushl
scas
add
das
or
mov
aas
lock
or
lahf
lcall
ret
je
sbb
cld
cmp
movsb
jne
cs
and
popf
ljmp
mov
je
cmp
inc
sub
rcrb
scas
fwait
fwait
out
movsb
mov
xchg
mov
dec
ret
mov
idivb
movsl
movsb
jmp
ds
xor
sub
sub
add
movsb
sub
orb
mov
sub
sbb
sub
fwait
xchg
rolb
in
repz
pushf
add
dec
jp
addr16
movsb
dec
pop
incl
cmp
fs
movsl
movsb
mov
insb
jle
mov
push
imul
push
fwait
sbb
jge
xor
in
jg
call
jmp
psubsw
add
insl
mov
add
test
sub
cmp
add
test
xor
adc
inc
int
sbb
inc
out
push
jp
add
call
lock
incl
shlb
aas
sub
loop
loope
ficoml
jne
sarb
loope
fidivl
bound
call
push
mov
out
push
decl
pop
jne
and
or
mov
incl
notl
fldl
cmp
call
jns
adc
pop
jne
movl
inc
hlt
decl
rorb
cmp
add
pop
or
hlt
pop
incl
dec
mov
pop
pop
push
call
mov
or
in
test
push
cmp
cmp
call
add
sbb
ret
mov
out
lods
in
xchg
add
iret
mov
mov
stos
cmp
mov
lcall
in
mov
and
pop
adc
ud0
sahf
stos
aas
outsl
sbb
push
mov
mov
loopne
cmp
jne
sub
mov
sti
daa
sub
xor
sub
stos
xlat
mov
and
clc
decb
mov
sub
mov
xor
clc
rcrb
into
mov
sub
mov
inc
cwtl
xchg
dec
mov
in
xor
mov
repz
bound
xor
dec
adc
sub
fwait
push
sub
nop
hlt
mov
call
hlt
mov
inc
jmp
inc
or
xchg
pusha
lea
dec
sub
cmpl
add
lock
jne
movsl
add
sbb
lea
call
je
mov
jmp
dec
mov
add
fwait
mov
mov
mov
lock
xchg
movsb
bound
or
cld
stos
popl
jle
xchg
call
popa
jp
pop
ret
or
and
push
mov
sub
add
inc
add
mov
add
fwait
pop
movl
or
je
ljmp
scas
sub
add
ret
je
mov
incb
push
cmp
or
je
mov
lea
sub
xlat
cmp
add
add
mov
int3
ret
mov
dec
ficomps
jecxz
mov
adc
lock
je
jecxz
fwait
sub
imul
push
mov
jo
popl
out
add
mull
add
add
add
add
jmp
add
or
mov
xchg
push
xchg
cmpsl
sub
arpl
sub
push
pop
add
cmp
in
cmp
cli
imul
add
stc
aam
leave
jp
inc
lock
xchg
push
sahf
hlt
xchg
push
jbe
fwait
pop
call
add
hlt
push
add
cmp
negl
mov
pop
lret
add
bound
cld
xchg
add
xchg
dec
popf
cs
ret
lods
push
push
mov
xchg
sub
inc
sbb
in
add
subl
pop
or
out
je
cltd
or
inc
in
cs
and
imul
sbb
inc
push
sub
or
notb
cmp
add
mov
mov
lods
andl
mov
xchg
cmpsl
jmp
das
push
inc
adc
fnstcw
aad
ret
pushf
shrl
imul
lcall
fwait
mov
pop
jl
test
pop
lds
add
call
mov
call
ljmp
sarb
cmp
cmp
mov
jmp
les
incl
stos
xchg
jg
pusha
lock
popa
lcall
je
push
incl
test
andb
jno
or
je
out
add
decl
shlb
dec
out
pushl
imul
in
lods
push
call
call
shlb
or
cltd
aad
xlat
out
add
out
mov
mov
push
out
add
ja
clc
add
add
out
cmp
add
mov
jle
lcall
adc
add
aaa
call
sub
sub
add
push
xchg
bound
add
ja
mov
rcrb
call
and
xchg
decl
pop
lcall
add
lea
sub
or
add
test
cltd
inc
sub
inc
lret
gs
cmp
ds
cwtl
jmp
add
cltd
sahf
add
cltd
mov
xor
push
add
cltd
jbe
cmp
pop
push
cmp
cltd
test
push
cltd
inc
cltd
xchg
xor
cltd
inc
cltd
lods
or
add
lods
xor
cltd
pushf
or
sub
push
cltd
pop
xor
cltd
push
lods
fidivl
popf
cwtl
out
cwtl
add
out
in
add
and
jns
rcll
xchg
call
cwtl
mov
cwtl
mov
inc
add
push
sub
mov
call
loop
adc
pop
incb
cmc
add
cld
mov
mov
cmp
and
iret
decb
das
mov
rcll
jne
rclb
es
pop
xor
cld
mov
rorb
cld
cltd
rorl
sub
cmp
jge
jmp
popf
add
add
outsl
pop
add
mov
push
sub
mov
int3
mov
push
outsl
jne
out
lock
call
pop
ret
je
jmp
cmpb
fs
cmpb
pop
add
mov
jns
inc
add
mov
push
cmp
add
or
je
mov
push
pop
xor
pushl
pushl
cmp
arpl
mov
clc
mov
adc
adc
mov
sub
mov
add
or
push
jns
call
sub
pop
mov
call
add
stos
testl
xchg
pushl
push
or
sub
xchg
jmp
adc
stos
xor
ficoms
sub
out
xchg
incl
add
sti
popl
push
mov
add
mov
cwtl
imul
rorl
jmp
xor
add
mov
cmp
scas
aas
test
sub
sub
sub
sub
subl
andl
jbe
pop
or
int3
xchg
push
jge
add
or
in
stos
daa
call
inc
cmp
adc
les
lea
xchg
mov
xchg
incb
push
lods
into
lods
xchg
push
add
cmpl
xchg
call
out
jmp
into
int
test
mov
sub
pop
cli
je
mov
cmpsb
movsl
lret
sti
jmp
push
mull
add
mov
inc
jmp
lods
xchg
lcall
out
jmp
movsl
xchg
push
pushf
idivl
int
je
mov
xchg
add
mov
jmp
add
mov
or
jle
jmp
inc
in
mul
outsl
pushl
ja
shl
outsl
pushl
xchg
pop
call
out
in
out
pushl
ja
rcl
outsl
pushl
mov
outsl
mov
out
outsb
call
out
call
rorb
insb
idiv
out
jne
js
incl
ja
mov
outsl
outsl
call
addr16
clc
jmp
daa
stc
sti
call
cmp
lds
cmp
mov
jg
decl
lret
jmp
xchg
mov
push
psubsb
ljmp
fwait
fs
mov
inc
add
bound
inc
cmp
or
add
clc
test
jne
xor
cld
pop
or
or
mov
inc
iret
les
push
jle
mov
cmp
or
dec
sti
out
aam
incl
out
jmp
jb
mov
jl
add
add
sbb
xchg
bnd
lock
jmp
add
je
inc
add
loopne
inc
cmp
adc
stc
mov
daa
add
add
sbb
xor
xchg
add
orl
pop
outsl
jle
pop
test
mov
gs
pushw
cmp
or
stc
inc
fsubl
jmp
adcl
push
xchg
push
add
dec
cltd
test
mov
lcall
nop
call
adc
push
add
push
push
jnp
inc
jmp
cli
jmp
insb
icebp
nop
push
jp
push
sbb
jne
mov
xlat
scas
test
or
leave
test
lods
decl
leave
and
inc
jmp
xor
sub
adcl
jne
sub
pop
jo
push
dec
testb
add
ljmp
mov
lcall
imul
dec
jo
add
out
inc
jo
push
mov
jne
cmp
paddq
jg
jne
imul
jg
leave
ret
push
mov
hlt
cli
add
fucomip
pop
call
or
cld
push
mov
or
add
pusha
jle
clc
mov
push
mov
add
cltd
add
ds
es
sti
out
into
mov
and
pop
roll
out
sub
in
mov
testb
inc
add
out
sbb
sar
mov
mov
ljmp
js
xor
mov
mov
or
xor
out
jne
incl
pop
adc
lods
fiadds
leave
fwait
bound
insw
mov
jmp
out
jg
call
movsb
fwait
scas
xchg
mull
dec
inc
add
call
data16
ss
fwait
dec
mov
xchg
add
clc
dec
aas
jmp
add
aam
fstpt
adc
out
push
xor
adc
fwait
call
add
sbb
frstor
fstpt
rcr
in
fdivrp
add
adc
jp
xchg
into
pop
lods
lea
xchg
dec
mov
cwtl
mov
sbb
sbb
movb
aam
adc
jmp
jmp
movsl
mov
jmp
cmp
dec
push
jp
call
xlat
inc
jmp
clc
mov
xor
es
out
mov
push
add
call
xchg
cmp
adc
ret
add
mov
das
lcall
push
int3
mov
push
inc
loopne
sub
jmp
cmp
adcb
dec
je
repz
hlt
mov
incl
pop
mov
adc
jnp
decl
call
push
call
addr16
aaa
aas
add
adc
add
push
iret
jne
push
push
test
cs
loopne
dec
das
mov
jg
stc
push
dec
mov
hlt
decl
pushl
addr16
ja
jne
insb
pop
shlb
pushl
ja
or
into
inc
dec
ret
rorb
out
push
ja
or
jb
or
xchg
incl
pop
push
or
hlt
jle
mov
sbb
test
cltd
add
ret
or
mov
andb
add
cmp
adc
subl
inc
jno
sub
mov
add
fiadds
lahf
or
cmp
mov
mov
test
add
mov
shll
add
addr16
mov
pop
xor
jmp
jbe
xchg
int3
iret
call
mov
idivb
call
mov
jbe
sub
jmp
inc
pop
xor
jbe
aas
jmp
add
mov
and
add
jnp
es
fdivrl
add
xchg
cmp
sub
cmp
push
add
cmp
addl
cld
rcrb
mov
ja
mov
cmp
or
rcll
mov
add
dec
mov
mov
cwtl
out
mov
out
cmp
incb
sti
cmp
mov
outsb
popf
inc
lahf
jmp
js
inc
add
call
mov
pushl
pushl
add
test
mov
ds
addr16
add
mov
cmp
add
adc
mov
pop
mov
xchg
ffreep
mov
pusha
ljmp
add
push
incl
fs
sahf
nop
cld
test
outsl
or
dec
ja
mov
ja
mov
ja
mov
sub
add
add
adcl
mov
add
adc
or
or
decl
mov
cld
dec
testb
aad
call
push
dec
idiv
call
dec
sti
push
js
cld
iret
cmc
pop
call
lahf
icebp
sti
call
cmp
or
int3
jp
mov
inc
sbb
adc
fmul
add
jge
insl
icebp
incl
cmp
xchg
jmp
cltd
cli
mov
cmp
add
mov
add
cmp
je
js
js
push
aas
xchg
imul
jl
or
xchg
mulb
xchg
out
in
add
cltd
add
push
add
mov
xlat
inc
cmp
shll
int3
call
sbb
jne
mov
or
fwait
mov
dec
mov
add
add
js
mov
inc
and
sbb
data16
imul
out
rolb
mov
pop
test
xchg
es
ds
nop
aaa
xchg
cwtl
hlt
mov
test
xchg
out
sub
cmp
add
test
add
or
cld
out
cwtl
push
scas
mov
inc
add
xchg
mov
mov
cli
ljmp
mov
test
sahf
inc
adc
sbb
inc
clc
out
mov
jle
test
cld
inc
popf
push
popf
mov
add
rcll
jmp
aam
xchg
mov
out
ds
sub
cs
jmp
mov
push
add
cmc
or
lea
inc
shrb
shll
sahf
mov
call
pushl
jnp
clc
ja
pop
call
cmc
imul
sub
mov
in
orl
jnp
add
add
sub
jg
and
add
sbb
incl
mov
loope
jl
push
mov
in
jmp
addr16
pop
jl
cwtl
or
add
cmp
cld
enter
adc
inc
sbbb
cmp
test
scas
leave
imul
push
cmp
leave
xorb
xchg
dec
lahf
add
and
inc
ds
nop
xchg
jnp
cmp
xchg
adc
cmp
inc
or
xchg
bound
call
xor
clc
add
dec
nop
xchg
sti
cmp
push
xchg
and
inc
cmp
fwait
cmp
jmp
outsb
jns
jl
xlat
orb
jnp
outsl
mov
lea
rol
xorl
adcb
or
adc
xchg
cmp
sbbb
ja
loope
cwtl
andl
inc
push
orb
inc
adcb
stc
icebp
arpl
das
andb
inc
pop
sbbb
add
roll
sub
sub
push
bound
les
fbstp
cld
loop
icebp
xorl
add
mov
mov
out
sbb
jp
dec
mov
out
mov
mov
mov
cmp
insl
shlb
sub
add
mov
cmp
aad
int3
jle
sbb
hlt
scas
cwtl
jno
mov
iret
inc
jmp
mov
jg
mov
test
sti
call
mov
cld
dec
jmp
jg
call
scas
mov
call
jmp
jae
and
push
push
xchg
add
inc
hlt
out
leave
jg
mov
jnp
inc
add
aas
add
mov
and
push
call
dec
cmp
push
daa
adc
scas
orb
and
push
push
loopne
jne
cmp
push
std
push
iret
push
cmc
jg
dec
sub
repnz
jno
jne
xchg
sbb
icebp
xlat
push
subb
testb
push
cmp
sub
imul
outsb
jg
add
stc
pop
xchg
mov
inc
das
clc
push
leave
cld
jle
in
lock
in
imul
cmpsb
jg
push
pop
call
or
and
inc
cmp
clc
pop
and
ljmp
add
jle
or
adc
push
in
shrl
test
push
cmc
lock
xor
or
lock
filds
icebp
inc
in
insb
mov
imull
jl
mov
or
dec
mov
or
xchg
jb
fimuls
jmp
inc
test
call
clc
inc
jg
adc
lahf
jle
or
and
fadd
dec
jge
adcb
jle
out
add
mov
pop
adc
mov
jge
push
mov
call
push
ds
add
inc
jg
inc
jmp
orl
loop
std
test
jl
push
jl
push
leave
stos
inc
add
or
rcrl
jp
push
sub
mov
jl
xor
shl
vhaddps
scas
outsb
adc
add
aad
incl
add
cs
jmp
test
int
mov
je
push
in
leave
into
xchg
sti
jne
push
jne
jmp
enter
push
mov
cld
aaa
jne
call
fcmovnb
jae
imul
mov
sar
je
aaa
jne
call
mov
insb
mov
jne
sti
je
js
incl
ja
add
addr16
sub
call
jne
call
jl
jnp
add
xchg
add
adc
xor
cmc
pop
adc
inc
lcall
icebp
out
inc
cmp
xor
jl
jmp
ret
push
mov
call
push
aad
inc
cmp
jl
jmp
ret
xchg
or
add
loopne
inc
cmp
jl
mov
aam
call
adc
lret
xor
push
xor
call
push
call
add
or
call
les
jp
or
lret
es
shr
dec
shr
inc
dec
add
push
jp
or
xor
add
out
xor
sub
call
jns
or
sbb
jnp
out
xor
imul
rol
jns
or
out
xor
incl
dec
shr
cmp
jmp
imul
mov
out
clc
jne
addr16
or
call
aaa
add
imul
jl
xchg
cltd
xor
add
jns
jmp
add
sub
das
inc
jmp
cmp
add
cmp
stos
sub
jns
imul
inc
jmp
mov
std
xor
xchg
mov
gs
add
repz
roll
xor
and
outsb
jno
jmp
push
std
jg
imul
ljmp
sahf
xor
gs
xor
add
add
std
jg
and
idiv
push
clc
je
push
push
jmp
add
ljmp
push
divl
jmp
je
punpckhwd
call
or
add
test
add
divb
loope
jne
in
int3
add
cld
out
mov
cmp
mov
addl
ret
cmp
call
jmp
fcom
dec
pop
imul
mov
jmp
out
in
or
out
dec
call
mov
mov
call
loope
dec
out
xor
cmp
call
incl
out
sbb
xor
mov
ja
or
pop
xchg
jge
lcall
add
dec
jnp
jmp
inc
cltd
ljmp
inc
ja
push
adc
call
ja
mov
adc
inc
in
in
add
rol
pop
orb
jo
and
call
icebp
inc
ja
push
add
call
ja
mov
cltd
jbe
adc
icebp
xor
push
adc
call
ja
mov
pushf
and
push
rol
scas
pop
xor
cmpsb
jbe
pusha
js
lea
ja
in
cvtps2pi
add
insb
add
jo
bound
insl
scas
call
aaa
jl
jmp
adc
decl
gs
jmp
jle
out
jnp
ljmp
jp
faddl
cmp
xorb
bound
les
jne
xor
sbb
cs
gs
sbb
pop
add
cmp
add
ljmp
mov
rol
call
gs
call
jmp
insb
jecxz
sub
cmpl
jne
or
out
push
in
je
mov
ljmp
cmpsl
jmp
cld
mov
jmp
clc
push
jmp
lock
jmp
in
mov
je
js
call
leave
shll
mov
cmp
aas
lock
addr16
cmp
xor
data16
dec
sub
adc
ret
call
lret
cmp
je
xor
mov
adc
pop
fsubr
ret
add
jg
ret
xlat
xor
adc
lea
add
fbstp
pop
decl
jae
dec
imul
cmp
xor
jmp
or
fcmovnb
fldt
xor
xorl
add
out
ds
fs
inc
jae
push
push
shr
mov
inc
push
out
ja
rolb
jmp
or
add
jecxz
adc
ljmp
dec
shlb
sub
jae
imul
in
jl
lret
mov
add
cmc
add
pop
shr
test
jmp
jae
jg
test
jb
aam
push
jmp
outsl
mull
dec
jae
sbb
call
mov
out
sub
push
loopne
idiv
sub
sub
jae
movsb
and
out
jbe
and
pop
add
arpl
push
add
jae
loope
mov
inc
movsl
bound
xor
xor
test
call
add
inc
jmp
cmp
mov
lcall
mov
out
ret
repnz
xchg
add
call
cli
std
addr16
cmp
jmp
sub
pop
cmp
sub
std
out
pop
out
decb
push
imul
or
cmp
lcall
out
imul
pusha
push
sub
and
add
jg
test
jae
xor
dec
aad
cld
lahf
out
out
in
push
push
inc
sub
addr16
and
jg
ffreep
lcall
dec
dec
cmp
push
ret
jo
shll
dec
fimuls
dec
pop
pop
jp
int
jno
sbb
testl
mov
ud0
pop
movsw
stc
jo
and
jo
inc
lcall
ret
cmp
cmp
in
cld
rdmsr
fdivrp
loopne
jo
xor
rcrl
inc
push
fnsave
mov
sub
out
add
sbb
adc
xchg
add
jb
je
subps
fisubrs
add
scas
rcl
sub
call
pop
andl
shrl
and
xor
add
add
inc
xchg
adc
pop
sbb
scas
outsl
mov
mov
sarb
cmc
ss
mov
adc
outsl
ficomps
push
bound
test
outsl
dec
sahf
icebp
push
les
inc
outsl
sbb
add
cmpsl
outsl
ss
ss
mov
adc
pop
aas
fmull
outsl
jne
xchg
cmc
pop
push
xchg
lcallw
add
inc
lahf
xlat
jbe
cld
outsb
mov
jb
out
pop
cmp
loope
aad
adc
and
push
mov
je
or
test
shl
pop
outsb
lcall
loop
jmp
addps
leave
stos
jb
push
bound
add
subb
out
pop
rorl
sti
adc
insl
addr16
popa
push
sub
push
add
jbe
fdivrp
or
jne
push
cmp
add
push
jne
leave
jl
xchg
out
adc
push
dec
dec
xor
add
roll
int
daa
inc
ror
inc
push
fimuls
rolb
adc
out
mov
sub
push
ret
xchg
fldt
call
dec
fidivl
and
xor
mov
addr16
decl
call
cmp
add
xchg
call
out
shlb
add
pop
movsb
insl
pushl
pop
clc
push
mov
arpl
add
mov
insb
push
dec
js
fstpt
or
sub
cmp
dec
lds
dec
rorl
jmp
out
insb
insb
jmp
orb
add
pop
fdivs
insb
push
push
testb
mov
pop
shlb
dec
outsb
pop
les
insb
dec
lcall
imulb
cmp
add
mov
mov
add
pop
cmp
insb
repnz
test
call
insb
not
mov
pop
cmpsl
fcom
aaa
js
cltd
insb
dec
clc
push
rcl
imul
pop
add
pop
jg
imul
and
add
imul
push
call
aaa
clc
lcall
sbb
fisubrs
loope,pt
or
mov
add
jecxz
mov
clc
xchg
imul
js
push
mov
push
xchg
pop
push
call
imul
cmc
pop
and
cmc
sti
callw
mov
push
and
add
cmp
test
fdivrs
hlt
sbb
adc
push
and
mov
xchg
dec
imul
imul
notb
pop
xchg
sub
imul
cmp
sub
push
jmp
add
decl
dec
jne
aad
or
aad
or
and
iret
lds
scas
jne
je
sub
je
mov
sub
or
push
mov
push
sub
push
dec
or
xchg
gs
dec
decb
add
mov
add
pop
call
mov
inc
cmpsl
xor
std
jne
lds
xlat
jne
xlat
je
mov
mov
ret
into
mov
aas
fadds
imul
or
call
jmp
inc
lfs
mov
add
sbb
add
push
add
dec
add
dec
add
mov
jo
xchg
shrl
out
sti
shll
inc
je
adc
inc
push
cwtl
add
and
pop
inc
jge
imul
imul
jge
in
rolb
jnp
push
comiss
mov
push
add
xchg
jnp
addr16
jp
pop
sahf
push
push
sub
jns
push
push
sub
fisubrl
push
out
addr16
fstp
fistps
das
js
inc
scas
leave
outsl
ds
js
inc
mov
addr16
pop
push
push
cli
sub
add
addr16
sub
cmp
sub
mov
outsb
fsubp
jl
push
inc
sub
jmp
fisubs
cld
call
sti
ret
sti
mov
mov
addr16
or
mov
sahf
addr16
subl
or
jmp
cmpsl
call
jge
push
pop
addr16
jl
outsl
pushl
xor
push
mull
push
add
mov
add
jmp
imul
inc
ljmp
fnsave
push
mov
call
or
mov
fidivs
cmp
loopne
fdivrp
ljmp
fdivrp
decl
idiv
xchg
je
mov
fidivs
add
mov
divl
out
inc
fdivrp
cmp
leave
xor
xor
cmp
sbb
mov
call
outsb
mov
ljmp
out
sti
push
lahf
ja
cmp
jns
mov
sar
inc
pop
pop
das
cmc
xchg
mov
inc
and
fsubr
sbb
add
dec
ret
movsb
push
sub
pop
repz
in
fs
push
push
popa
pop
add
cmpsl
mov
out
pop
loope
inc
dec
into
inc
mov
roll
push
cmpsb
gs
push
mov
push
gs
inc
jge
jmp
movsl
imul
outsb
iret
in
out
ss
push
inc
shlw
fs
fildl
sub
dec
ljmp
ds
repnz
into
mov
push
fs
out
in
fs
dec
rol
pop
out
cmp
repnz
ss
add
add
mov
cmp
lods
outsl
sti
call
ret
cmp
inc
cmp
sbb
or
in
testl
add
add
repnz
jmp
add
add
jmp
cmp
xchg
rcl
iret
mov
fisubl
sbb
test
mov
jns
mov
lea
add
sar
mov
testl
lea
outsb
mov
arpl
ror
xor
cmp
pop
jb
incl
jg
shrb
add
mov
push
jmp
pop
inc
add
mov
idivl
xor
sub
test
addr16
push
push
pusha
xor
jo
jg
shrb
adc
out
nop
mov
push
jmp
pop
inc
add
fdivrp
xor
test
mov
faddl
ja
incb
pop
std
jae
push
mov
popa
add
xchg
cmp
jb
scas
lods
or
loop
popa
lcall
or
inc
call
mov
xchg
push
pushl
or
cmp
push
jne
aas
push
mov
pop
mov
or
sbb
pusha
incl
cs
aas
mull
lcall
push
mov
adc
js
loope
in
out
jmp
popa
jmp
lcall
insb
add
pop
pusha
push
inc
jge
ds
in
inc
ds
scas
push
je
cmpsb
pusha
es
test
ljmp
xchg
adc
hlt
addr16
add
pusha
in
rcrl
ret
dec
jnp
call
inc
cmp
pop
cmp
and
sub
xchg
ret
sbb
and
pusha
push
pusha
cld
pop
aad
imul
add
dec
ret
mov
push
mov
pop
lea
pop
xor
push
daa
mov
jmp
inc
add
jmp
jmp
ja
jmp
cmp
push
mov
jmp
push
mov
fs
push
jmp
movsl
pop
jne
not
sti
shrl
je
int
add
cmp
inc
add
pop
xor
push
mov
outsb
pop
push
cmp
mov
cmp
fldt
mov
incl
ja
xor
cmp
out
jle
decl
in
ja
imul
nop
mov
ljmp
sub
ljmp
and
dec
add
lods
inc
sub
mov
jmp
sarl
xchg
divl
imul
and
std
movaps
ljmp
mov
xchg
out
ficomps
popa
jge
inc
cmp
xchg
lock
pop
decl
sub
mov
or
inc
pusha
cmpb
pushf
repz
imul
lcall
jae
push
xchg
dec
lcall
push
pop
adc
mov
push
call
in
loop
sub
add
pop
shlb
add
dec
aad
pushl
add
pop
push
add
xchg
lcall
mov
jmp
insb
out
data16
test
cmp
shl
insl
pop
inc
or
out
pop
ds
in
ds
cmpsb
pop
mov
xchg
jp
pop
xchg
pop
push
insb
xchg
or
add
pop
lods
arpl
pop
outsb
pop
jl
push
jle
pop
pop
pop
pushf
aas
dec
pop
ficomps
shl
pop
into
pop
test
pop
ss
xor
and
jge
pop
subl
cmpsb
cmp
sbb
xor
xchg
gs
sti
mov
fdivrs
pop
mov
pop
xchg
ljmp
push
push
jne
pop
push
pop
xchg
call
xchg
in
pop
pop
call
ds
insb
divl
add
pop
lcall
lcall
and
mov
or
pop
call
sbb
fdivr
add
aam
pop
jmp
test
neg
repnz
jmp
mov
jmp
out
cwtl
add
leave
rorb
add
call
ljmp
mov
or
mov
add
xor
or
mov
cld
outsl
xor
call
sbb
add
aad
in
adcl
cld
shlb
sub
out
sbb
or
test
inc
xchg
mov
call
movb
push
add
ljmp
insb
ljmp
imul
decl
es
add
inc
cmpsl
iret
add
inc
add
daa
js
pop
jne
outsl
pop
mov
mov
dec
neg
ljmp
into
sarb
into
mov
lea
jmp
addr16
in
pop
push
lcall
test
call
mov
pop
idivl
in
fidivrs
inc
cmp
lock
push
pop
incl
and
sub
add
sub
pop
fimuls
ds
jmp
adc
add
xchg
mov
ud2
sub
add
push
gs
push
xchg
pop
xchg
out
loopne
adc
xchg
out
fwait
sub
add
mov
insb
cmp
pop
dec
mov
cmp
scas
pop
je
scas
pop
ss
fs
add
pop
repnz
or
push
push
pop
cmp
mov
pop
add
int
adc
out
pop
jmp
loope
lea
inc
ljmp
jl
dec
ljmp
sti
push
out
movsl
push
jmp
jp
adc
xor
xchg
adc
outsb
gs
insb
add
dec
lcall
add
jmp
adc
test
dec
ds
ds
sub
cs
add
pushf
push
mov
call
lret
add
dec
mov
shlb
int3
dec
scas
incb
in
push
mov
js
mov
in
scas
incb
adc
add
out
jae
mov
cmpsl
scas
pushl
cmpl
in
xchg
addr16
fnstsw
pop
or
ljmp
scas
je
js
mov
pop
scas
mov
outsl
scas
in
or
movsl
sbb
decl
scas
mov
das
scas
cmp
fsubrl
mull
push
jne
add
mov
xor
or
add
je
pushl
insl
pop
imull
aas
imul
push
jmp
cmp
push
inc
iret
mov
lahf
push
mov
outsl
push
call
add
loopne
jle
call
ficoms
not
out
push
xchg
push
jl
imul
ret
push
mov
add
jnp
add
mov
add
add
sarb
push
pusha
rolb
call
xchg
pop
sub
call
add
loopne
les
out
mov
loopne
adc
ljmp
sub
add
bnd
push
or
push
xchg
call
or
in
push
out
push
cld
pop
out
je
or
push
inc
dec
push
xor
push
pop
in
je
test
mov
loopne
add
lret
and
add
mov
add
jmp
stc
push
push
pusha
add
fidivrl
or
mov
xchg
push
push
cwtl
or
pop
shll
sti
idiv
out
leave
push
jmp
shlb
out
adc
jae
mov
rclb
mov
call
cmp
sar
idiv
out
add
ret
cmp
out
pop
jp
add
inc
add
shrb
loope
out
or
push
mov
sbb
push
out
mov
pusha
jne
out
fstps
out
cmpsb
scas
call
mov
mov
scas
enter
call
jp
cld
es
imul
or
mov
shlb
idivl
decl
loopne
aas
add
xchg
addr16
es
test
cmp
mov
mov
push
call
pop
sbb
jns
stos
shlb
push
push
adc
out
mov
add
aad
add
stc
push
jmp
fwait
cmpl
cmp
dec
inc
dec
xchg
inc
mov
dec
orb
lods
je
jne
inc
fadds
adc
xchg
lcall
repz
sti
arpl
push
ret
les
jb
pop
loope
xchg
out
loopne
sti
push
addr16
lahf
out
jmp
js
fisttpl
push
sub
dec
add
pop
mov
pop
push
mov
push
push
and
inc
inc
jmp
inc
cmp
cld
call
inc
add
cs
mov
and
jg
in
push
sub
rol
pop
aaa
xchg
add
inc
jnp,pn
add
add
enter
add
cmp
ds
call
add
add
mov
mov
pop
push
push
sbb
pop
scas
xlat
add
test
add
inc
insl
sti
jg
cmp
jmp
add
lret
push
cwtl
add
mov
cltd
add
hlt
pop
push
out
push
or
call
mov
ja,pt
addr16
xor
mull
call
mov
decl
loop
in
or
jmp
cmp
stc
loope
jmp
daa
sub
cmp
dec
mov
inc
cld
dec
addr16
cmpsl
push
imull
add
sar
mov
test
xchg
mov
add
idiv
push
xchg
popl
decb
mov
rorb
jmp
subl
sbb
jle
notl
add
mov
sbb
xchg
out
or
jmp
dec
mov
and
inc
fucom
idiv
inc
push
call
mov
add
mov
call
aaa
dec
xorl
je
js
add
xchg
mov
scas
call
mov
dec
jmp
repz
out
or
adc
aad
jne
orl
ljmp
push
arpl
xchg
or
les
xchg
in
dec
jmp
xchg
incl
outsb
cmc
cwtl
in
outsb
std
dec
call
push
adc
push
pop
xchg
mov
incl
jg
cs
dec
inc
and
std
push
inc
dec
jne
xor
cmpb
cmp
xor
mov
sbb
fisubrs
dec
fidivs
push
popa
mov
into
dec
cld
sti
fdivp
outsb
dec
mov
shl
pop
adcb
in
add
push
cmpb
add
hlt
xor
xchg
jle
jo
jb
call
shrl
mov
test
push
shl
pop
int3
xor
in
dec
not
jle
dec
fidivrs
sti
add
mov
pop
push
dec
psrlq
in
adc
add
dec
out
mov
std
test
notb
cmp
and
dec
pop
jmp
xor
jnp
push
in
test
dec
mov
outsb
dec
call
loope
roll
add
shll
cmp
in
mov
in
scas
mov
xor
std
dec
push
fwait
loop
mov
in
jbe
mov
cmpsl
test
insl
dec
push
add
push
mov
incl
cmpsl
xchg
mov
cmp
jl
ds
incb
mov
jmp
mov
ljmp
sub
bsf
js
aaa
inc
mov
mov
sub
cmpsl
dec
mov
mov
fldl
dec
push
add
lock
inc
add
in
mov
cmovnp
mov
cmp
fiaddl
push
adc
or
hlt
add
jg
fisubs
dec
adc
test
mov
mov
add
mov
cmpsb
mov
mov
xchg
mov
les
jbe
mov
outsb
jmp
xchg
cmp
mov
mov
push
or
add
lods
clc
rcl
dec
into
dec
int3
pop
mov
cld
push
in
dec
decb
sub
dec
cmpsb
dec
movsb
fs
dec
out
sbb
and
dec
dec
cmp
dec
jle
dec
clc
andb
outsb
dec
in
fs
dec
scas
pop
lods
xchg
cmpsb
dec
push
nop
lea
dec
mov
dec
je
mov
pop
inc
cs
jbe
sbb
dec
adc
test
push
dec
hlt
inc
add
push
dec
push
dec
les
inc
call
jmp
push
call
pop
push
xor
dec
jne
insl
repnz
jo
inc
mov
sar
scas
add
push
lcall
pusha
iret
pop
jo
or
imul
push
jle
inc
call
loop
shrl
sarl
lock
lahf
lock
inc
ljmp
inc
jle
mov
pusha
jns
lock
pushl
roll
adc
sti
add
add
mov
sarl
or
add
ljmp
les
or
or
iret
inc
lock
mov
movl
loopne
je
enter
lret
ss
dec
scas
jne
stos
test
inc
mov
dec
push
out
stos
inc
jg
add
shrb
cmp
popl
out
ds
jmp
mov
sub
aaa
add
cmp
call
inc
jne
bnd
sub
add
jmp
push
int
and
jmp
ret
stos
xchg
add
add
cs
mov
test
lea
insb
xchg
inc
jne
popf
roll
shll
jmp
jnp
dec
lret
shr
jno
mov
int
add
mov
jp
mov
cmp
decb
pop
sti
fnstsw
fcompl
in
pusha
pop
cmpsl
insl
jmp
dec
es
pop
push
test
dec
or
sbb
call
nop
mov
cli
test
fcomi
or
imul
sbb
inc
adc
lea
fcmovbe
pop
call
sbb
fidivs
inc
mov
cmc
or
sbb
mov
loopne
ljmp
inc
sahf
pop
scas
xchg
dec
inc
inc
inc
mov
les
incl
xchg
ljmp
xchg
cmp
test
mov
leave
lret
inc
mov
repnz
call
dec
testl
je
mov
push
cli
inc
dec
roll
cmp
sub
inc
lcall
lods
inc
jne
xchg
mov
cmpsb
jl
out
dec
je
lcall
inc
jne
jb
stos
xchg
in
stos
mov
hlt
inc
lea
inc
jne
repnz
jl
cmp
mov
add
cld
jmp
inc
hlt
pop
inc
dec
add
mov
test
push
add
repz
mov
jne
test
jge
add
rolb
push
pushl
psubsb
jno
call
iret
lea
idiv
lahf
push
call
pop
ret
mov
mov
adc
mov
mov
lcall
xor
call
cmp
jge
xchg
in
add
pop
inc
mov
add
mov
out
cmpsl
inc
pushl
ljmp
cmp
lock
inc
inc
ljmp
inc
mov
add
icebp
decl
insb
xor
push
cmp
sub
mov
call
stos
sub
sbb
mov
dec
jno
or
jg
mov
scas
leave
inc
sub
cmp
cmpsb
call
and
inc
push
add
xchg
dec
inc
inc
cmp
pushf
xchg
mov
fdivrp
call
or
inc
inc
dec
inc
push
xor
push
inc
notl
mov
inc
testb
testb
pop
or
enter
inc
pushf
daa
push
inc
into
inc
mov
shrb
lods
pusha
mov
xor
shll
push
pop
into
inc
xchg
inc
inc
clc
adc
inc
xchg
pop
jbe
mov
add
sub
outsb
and
data16
push
dec
mov
inc
lcall
mov
mov
xor
inc
jb
ljmp
sti
mov
push
sti
inc
call
push
rorl
push
sti
inc
jne
sti
lret
cmp
idivb
lock
inc
call
fdivrp
dec
jmp
into
into
inc
call
mov
hlt
lcall
mov
call
inc
inc
jne
and
inc
lea
cld
add
ljmp
mov
inc
add
dec
shrl
loope
jne
adc
std
idivl
je
clc
inc
test
add
push
sub
mull
mov
jne
mov
jp
and
add
adc
inc
clc
and
add
inc
repz
add
push
outsb
ljmp
insl
decl
div
call
shlb
and
sub
inc
sub
cmpl
inc
ret
xor
call
add
mov
lea
aad
cwtl
xchg
inc
inc
movsb
xor
outsb
imulb
aaa
xchg
out
aas
push
xchg
mov
mov
push
inc
incl
psubsb
aas
inc
mov
lods
lcall
es
push
pop
aas
incl
aas
mov
add
xor
jmp
mov
neg
jmp
or
sahf
ds
lea
call
add
je
aaa
cmpsb
outsb
mov
xchg
jo,pt
mov
add
mov
call
aas
outsb
ds
aas
pop
mov
ds
orl
or
jl
aaa
ss
xor
ds
add
fidivrs
cmp
mov
sub
mov
lds
cmp
call
sahf
push
sub
xchg
pop
cmp
cmpsl
xchg
mov
addr16
call
adc
negl
cmp
cmpsl
dec
aas
cmp
ds
call
loope,pn
mull
pop
sub
push
lcall
decl
add
loope
push
ja
mov
addr16
out
pop
jae
ficoms
in
mov
pop
test
lret
cli
jmp
idiv
scas
cli
je
je
call
scas
mov
imull
sti
jmp
call
jmp
add
leave
bound
add
lock
imul
or
or
cmpsb
ljmp
mov
js
cmp
sti
xor
push
or
imulb
cmp
enter
mov
call
je
pop
jae
call
cmp
add
hlt
mov
mov
jp
inc
in
cmp
or
inc
mov
bsf
idivl
sub
add
jbe
aaa
sub
push
incl
push
dec
add
mov
jns
jne
ret
popa
and
je
mov
xor
dec
jns
test
cmp
jmp
mov
cmp
mov
xor
push
sub
rorb
cmp
add
xchg
add
sub
cmp
mov
or
dec
mov
into
cmp
cmp
cmp
cmp
aaa
xchg
test
add
dec
stos
or
aad
sub
test
cmp
inc
cmp
cmp
inc
and
call
lds
pushf
or
sbb
cld
stc
incl
cmp
add
add
push
cmp
and
add
jmp
xchg
clc
inc
jmp
mov
sub
scas
adc
jne
adc
call
mov
call
loop
mov
add
testl
inc
cmp
sarb
lock
cld
add
ds
cmp
xchg
add
cmpsl
add
jge
dec
push
mov
call
add
test
daa
adc
in
mov
imul
insl
or
inc
scas
idiv
mov
push
jp
jne
in
call
push
inc
push
call
leave
sar
call
add
adc
je
call
or
paddusb
inc
cld
shll
add
je
sub
inc
cld
cmp
cmp
cmp
adc
stos
es
shll
sub
mov
and
incl
push
xchg
xor
add
fs
cmp
sub
out
xchg
sbb
jne
xchg
gs
sub
mov
push
scas
xor
call
or
add
cmpsb
out
incb
sub
repz
loope
cli
inc
cmp
insb
lcall
stos
add
idivb
dec
add
ds
imul
push
scas
xor
enter
xor
add
mov
lods
lock
jp
aaa
sarb
insb
or
loop
ss
test
aaa
inc
or
stos
mov
or
lods
mov
sbb
sub
mov
sarl
shr
pop
aaa
fmull
popa
and
outsb
cmpsl
insb
std
stc
call
pop
pop
lods
jmp
and
cs
aaa
jne
push
lods
pop
adc
call
add
in
push
addl
ss
inc
stos
or
std
stos
call
mov
add
das
mov
add
cmp
push
mov
xor
mov
decl
outsl
stos
sti
xchg
dec
scas
call
pop
or
jmp
je
fmull
in
add
xor
mov
mov
out
mov
lock
pop
jmp
imul
adc
mov
daa
jmp
call
out
decb
fildll
addr16
cmp
jmp
jne
call
mov
push
lods
jmp
lahf
ljmp
das
scas
stos
add
gs
je
mov
add
out
lods
addr16
adc
ljmp
sub
mov
xor
push
leave
push
in
cmpb
xchg
repz
and
mov
add
cs
xor
movsb
xor
mov
sub
cmp
and
xchg
xchg
cli
inc
cmp
call
and
lcall
inc
sub
inc
mov
mov
xchg
xor
roll
pushl
xorb
sub
outsl
xchg
stos
xor
xchg
add
mov
outsb
xor
bound
push
scas
pop
xor
inc
inc
add
push
adcl
jno
push
cli
jns
mov
xor
rclb
aaa
stos
jecxz
cmpsl
add
pop
cld
push
add
lods
clc
daa
add
xor
ficoms
mov
imul
add
movsl
jle
xor
lret
add
pop
xchg
xchg
xor
pusha
xorb
mov
fildl
push
out
push
jl
jg
xor
add
rcr
clc
inc
jmp
add
add
sub
xor
gs
jmp
std
xor
jmp
xor
mov
aam
out
ljmp
push
xchg
testl
inc
xchg
enter
addr16
push
testl
and
sahf
imul
dec
imul
sub
mov
add
push
call
fwait
mov
adc
scas
pop
out
dec
push
mov
out
xchg
stos
cmp
xor
pop
js
out
xchg
mov
xchg
std
dec
dec
xor
inc
pop
out
call
dec
cld
inc
adc
je
fsubp
xor
dec
out
call
ljmp
pop
out
push
out
je
or
and
or
out
push
xor
je
enter
cmp
add
fs
faddl
mov
pop
mov
push
cmp
es
add
daa
cmp
push
sbb
shll
in
xor
iret
in
mov
jo
pop
add
lods
pop
cmp
movsl
sti
mov
mov
push
lods
out
stos
add
inc
flds
test
add
neg
sub
add
sbb
je
xor
cmp
popf
call
popf
jmp
jle
lds
jg
int
xor
imul
adc
mov
sti
test
xor
add
lds
call
xor
das
rol
push
insb
xchg
push
xor
rolb
xchg
das
inc
jp
xor
xor
lock
das
ret
add
ss
ss
xor
es
push
xor
push
jp
and
das
push
lcall
je
aaa
imulb
fidivrs
out
pusha
mov
ss
das
arpl
push
std
adc
call
push
das
lcall
sbb
inc
pop
das
mov
decl
mov
xor
jbe
das
jne
and
cmpsb
data16
cmp
add
shlb
arpl
divl
push
das
xor
adc
lcall
xor
lock
sub
xor
dec
div
push
shl
push
lcall
push
aaa
shl
pusha
pop
sub
testl
loopne
lea
and
mov
idiv
dec
push
cmpsb
decl
js
testl
idiv
call
add
or
idiv
sidtl
test
add
add
scas
out
pmaxub
push
aam
add
push
mov
add
jne
or
sbb
aas
push
decl
mov
testl
or
lahf
pand
mov
cmp
pop
add
push
dec
insl
ja
into
jne
incl
jl
gs
jmp
data16
call
lods
sub
or
mov
cmp
repnz
data16
in
sbb
sub
inc
push
add
int3
push
sbb
in
std
xor
adc
adc
jmp
mov
sub
push
xor
cmpsl
mov
push
add
mov
sub
jne
xor
sub
sbbl
mov
add
sub
cltd
xor
sub
sub
daa
nop
test
jbe
add
subl
cld
call
inc
pop
xchg
call
sti
push
mov
sub
inc
jns
das
shl
bnd
fcoml
shr
lods
clc
add
dec
out
add
sub
jl
and
and
lcall
jne
inc
jns
adc
ret
aad
aad
inc
hlt
mov
pushf
or
xor
and
xchg
mov
cwtl
add
cmp
lea
incl
cmp
leave
cmp
cmp
mov
mov
decl
and
and
push
sarl
add
ja
sub
push
and
bound
scas
dec
push
sub
pushf
push
sub
xor
sahf
add
aad
ret
push
mov
cld
mov
jo
call
pop
inc
sti
push
push
test
adc
jne
cwtl
add
jne
je
mov
in
roll
mov
adc
shl
pop
mov
dec
jne
je
or
outsb
add
mov
add
inc
clc
push
std
decl
inc
repz
std
ljmp
mov
imul
pop
das
push
les
sar
mov
sub
cmp
pop
mov
mov
pop
add
inc
call
rcll
call
imul
out
mov
xor
sahf
xchg
sbb
fnstcw
lea
pushf
jae
fadds
ljmp
scas
or
lcall
jle
dec
mov
cmpsb
cmp
push
sub
ss
mul
add
dec
sub
es
sbb
sub
sahf
push
mov
push
outsl
or
sub
lods
in
cmpsb
arpl
sub
jge
xor
daa
push
add
jp
ret
es
xor
daa
sub
lcall
sub
ljmp
xchg
daa
mov
xchg
jo
popa
das
jbe
jecxz
add
shr
lods
xor
add
fdiv
pop
mov
dec
jns
dec
dec
daa
test
ds
daa
add
imul
adcb
push
cmp
aas
push
lods
pop
add
out
push
insl
in
ficomps
daa
call
cmc
jne
daa
call
lods
pop
rcrl
test
mov
insl
loopne
push
daa
lcall
lcall
add
cmp
push
insl
fdivrs
daa
push
sbbb
push
push
daa
pushl
das
jmp
lods
pop
push
into
cmp
push
insl
aam
push
daa
incl
test
out
pushl
add
lahf
pop
mov
aad
cmp
sahf
aas
fnsave
pop
jge
out
mov
neg
fsubp
xchg
mov
mov
xchg
mov
call
fidivs
inc
sub
jne
or
scas
fdivrp
mov
ljmp
fldl
cli
std
je
or
insb
add
rorl
rorb
rcll
cltd
push
ds
sti
out
lret
and
push
pop
dec
push
sub
es
incl
add
lcall
pop
add
xchg
sbb
decl
test
adc
push
mov
add
cmp
jecxz
sub
sbb
mov
mov
mov
cmp
clc
push
cmpl
and
decl
push
insl
int3
call
ret
dec
int
pop
aam
call
mov
inc
dec
mov
pop
es
sub
shr
push
xchg
push
roll
pushf
or
cmpsl
add
push
sub
fisubs
rolb
jg
pop
add
es
sub
inc
andb
mov
scas
iret
and
cmpsb
lods
lock
lahf
inc
xor
jg
daa
jle
in
and
in
idiv
xorb
outsb
jecxz
sti
data16
daa
call
push
sbb
jg
and
mov
out
mov
pop
and
iret
idiv
xchg
pop
sar
pushf
adc
pop
jo
and
testb
push
or
shl
jge
stc
cmp
push
sbb
jb
pop
add
std
cmp
in
cmp
mov
sar
xchg
adc
testb
cli
out
and
ljmp
jae
sbbl
or
adc
fs
adc
add
je
adc
ret
mov
jnp
pop
mov
stc
or
jl
sub
fwait
ds
leave
and
mov
popf
sub
adc
mov
or
bound
mov
jne
mov
adc
mov
call
cmp
lahf
ret
mov
rorb
mov
or
les
dec
inc
inc
dec
fisubrl
js
mov
sub
int3
jmp
xchg
inc
add
xchg
mov
and
incl
mov
mov
insb
rcrl
cmp
add
xchg
pop
add
js
pop
or
pop
add
popf
popf
xchg
pop
mov
psllq
xchg
fisttps
push
mov
push
add
xchg
and
mov
and
jb
dec
mov
jmp
in
pop
xor
add
adc
popf
xchg
out
hlt
aaa
mov
add
hlt
daa
xor
or
cwtl
lahf
sub
mov
mov
cmp
push
xor
loope
test
push
inc
xchg
ljmp
das
push
add
add
arpl
aas
and
add
add
enter
or
xchg
in
iret
out
push
pop
pushl
mov
pop
push
cmp
push
jne
int3
pop
imul
cmp
sar
mov
adc
pop
call
adc
ret
ret
enter
push
bound
add
icebp
mov
and
or
iret
push
call
mov
enter
mov
pop
ljmp
inc
cmc
stos
sbb
pop
add
jmp
sti
insb
add
push
add
sub
mov
jne
je
iret
js
pushl
decb
mov
je
enter
out
imul
call
lret
ret
sbb
pop
add
or
je
outsl
ja
call
pop
ja
jmp
std
incl
movsl
adc
jne
jmp
jne
pushl
dec
fisttps
jne
pop
push
jne
aas
mov
mov
cmpb
xchg
adc
and
sub
pushw
incl
push
jne
jg
cld
jle
push
jne
icebp
sti
in
sub
iret
xchg
sbb
jne
scas
mov
dec
mov
mov
or
mov
scas
inc
xchg
es
sbb
pop
and
sbb
cmpxchg
push
jne
push
cwtl
pop
loope
sbb
out
xchg
mov
mov
push
jne
cs
pop
loope
lods
push
into
sbb
mov
xchg
dec
sti
repz
dec
popf
mov
sbb
sahf
xchg
loopne
pop
jbe
sbb
or
subl
add
add
dec
xorl
inc
hlt
sbb
add
add
scas
dec
xchg
dec
sbb
sub
ss
adc
popf
loopne
or
ret
pushf
pop
adc
sub
jns
add
pop
call
jo
daa
jmp
jge
jmp
cmp
add
daa
add
add
cmp
sub
push
xor
sbb
push
mov
xchg
sbb
add
jmp
cmp
add
cmp
movsb
add
jmp
cmp
add
mov
repz
scas
negl
cmpsl
add
or
ljmp
add
cmp
jae
push
jp
add
pop
add
jae
xlat
jo
ljmp
call
decl
out
xchg
out
jne
divb
xchg
call
divb
out
jmp
fistps
lock
out
or
ja
insl
call
testb
jp
jne
out
xchg
ja
imul
rorb
std
jne
out
xchg
daa
cmc
jne
repz
inc
sbb
test
dec
ret
mov
frstor
nop
pop
rcll
pushl
les
adc
or
add
or
mov
or
popa
xchg
sbb
jbe
sbb
cmp
add
in
push
sub
xchg
sbb
add
or
sub
or
daa
add
cmp
ret
mov
ja
jne
add
shrb
sbb
cmp
call
dec
sti
pop
jmp
xchg
das
mov
imul
into
xchg
pop
sbb
sub
roll
cld
and
idivl
xchg
xchg
sbb
ret
hlt
pop
sbb
push
mov
and
jmp
sub
sbb
jl
pop
cmp
cltd
sbb
add
pop
lea
sub
mov
jne
addb
jmp
inc
add
pop
and
jne
add
lea
sarl
imul
mov
mov
pop
add
jmp
and
call
cmp
add
into
push
pushl
and
add
cmp
and
push
dec
mov
mov
decl
xchg
call
lea
push
pop
xchg
call
decl
xchg
call
pop
push
out
lea
add
fucomi
decb
mov
jne
ljmp
js
jge
mov
call
jge
pusha
xchg
cmp
fs
adc
jne
jecxz
pushaw
add
shlb
or
cmp
adc
add
cmp
nop
or
sub
inc
cmp
nop
out
and
popf
incl
adc
dec
outsl
add
out
push
jne
call
jne
push
nop
or
mov
nop
jmp
mov
call
mov
sub
and
sub
ds
jmp
sub
dec
push
incl
sub
pop
push
incl
sub
outsb
push
dec
mov
in
push
or
cs
or
inc
push
add
jmp
aas
xor
leave
nop
push
or
nop
pop
andl
adc
pushf
pop
adc
jns
testb
dec
adc
add
mov
adc
push
add
xchg
or
dec
adc
stos
test
adc
add
mov
xorl
adc
jg
sahf
add
add
mov
add
inc
in
cli
push
sub
call
adc
data16
rcl
test
add
adc
aam
sub
inc
adc
in
loop
sub
push
scas
cltd
es
test
adc
addl
ret
adc
add
jge
out
sub
pop
fimuls
push
dec
xor
adc
jp
test
pop
ds
scas
sub
add
adc
stos
fwait
xchg
ret
out
pushf
jae
decl
je
mov
jp
ret
decb
lods
sub
js
arpl
adc
shlb
mov
add
jne
out
mov
int
addr16
clc
cmp
out
pop
in
jmp
push
out
imul
std
call
dec
out
sub
push
ja
movmskps
js
call
js
xchg
call
repnz
lea
and
jmp
cltd
divps
push
push
xchg
sbb
aad
add
add
lock
pushl
sub
adc
es
pop
push
mov
adc
imul
std
ficompl
scas
int3
repnz
out
adc
loope
movsl
dec
movsb
inc
bsf
adc
mov
xor
call
cmpsb
insb
dec
sahf
cmp
jg
push
adc
jnp
add
push
test
add
add
dec
outsl
adc
jle
add
inc
int
push
sbb
call
lds
adc
call
daa
jno
xchg
adc
push
call
adc
adc
adc
jp
adc
adc
adc
daa
pop
movsl
adc
lea
notb
jns
gs
cmp
jmp
fists
scas
or
repz
adc
add
adcl
add
popf
insl
sub
cmp
add
test
fisubrs
xchg
adc
pop
fs
call
dec
stos
mov
decl
ret
mov
cwtl
inc
add
paddd
ud0
push
call
lods
daa
cltd
jno
jns
decb
paddd
xchg
jmp
lods
cmpsl
sub
jp
incb
adc
lock
js
cld
dec
jmp
xchg
lahf
lock
and
mov
scas
lock
call
aad
push
test
mov
lahf
lock
add
add
add
mov
inc
xchg
jg
enter
push
mov
or
test
je
push
dec
inc
or
stos
cs
call
or
pop
add
ljmp
or
inc
xchg
cmp
jns
xchg
lret
sti
out
dec
ud0
cli
push
jne
inc
pop
pushl
lcall
jne
incl
rcrl
fwait
dec
adc
add
inc
incl
xor
clc
sbb
jmp
cmpsb
push
or
xor
dec
xchg
add
inc
cmp
jne
scas
inc
cld
push
iret
sbb
cmp
scas
cmp
fwait
xor
pop
add
sub
fildl
decl
push
sti
mov
adc
ljmp
cwtl
pop
mov
or
cltd
sahf
xchg
call
daa
add
add
add
or
cmp
stc
test
dec
mov
ficoml
mov
lock
or
push
mov
push
sbb
cwtl
and
jns
push
aaa
sub
cmp
inc
push
decb
enter
cwtl
ds
mov
cmp
sub
mov
cmp
or
add
jmp
inc
add
imul
pop
ret
repz
xor
cmp
push
mov
sub
lods
dec
cmp
add
outsl
cmp
in
jmp
mov
jns
fs
imull
mov
push
int3
jne
pop
mov
or
and
or
sarl
cwtl
mov
add
or
jl
adc
cs
xchg
or
sub
test
push
sub
orl
add
add
adc
std
mov
scas
cld
decl
cld
mov
out
xchg
ja
mov
hlt
inc
jb
ljmp
cld
decl
out
xchg
cld
incb
out
inc
sti
jne
out
popa
and
enter
push
mov
call
dec
dec
push
jne
out
pusha
adc
or
pop
sbbb
loopne
movb
cmp
inc
inc
int
add
cmp
push
outsl
add
movsb
lods
test
cmpsb
and
push
cmpsb
mov
jmp
add
jns
add
cwtl
sbb
add
fildl
cmp
punpcklwd
jle
lods
fwait
maskmovq
notl
mov
popa
cwtl
jo
inc
popl
call
mov
jne
negl
mov
jne
mov
jl
adc
mov
div
ficompl
jl
add
or
inc
xchg
cmpsb
outsb
ja
sbb
or
or
inc
jb
or
inc
sub
cmp
cmpsl
fwait
outsb
int3
daa
add
push
rcll
or
nop
sbb
xchg
push
push
cmp
ja
dec
daa
add
push
xchg
adc
sahf
nop
sbb
push
or
add
sbb
mov
daa
add
push
adcl
ss
dec
or
leave
or
int3
sbb
push
sbb
push
or
add
inc
or
inc
xchg
pop
adc
adc
lcall
xor
push
inc
or
les
incl
stc
adc
clc
xor
push
movb
jecxz
pushl
sbb
subl
or
and
lea
aad
mov
jnp
addr16
mov
call
adc
les
xor
rol
sti
pop
hlt
xor
nop
xor
push
inc
cmp
add
lea
add
cld
aas
fs
mov
add
pop
ds
push
mov
stc
je
sub
ljmp
jbe
call
jmp
test
jmp
pop
out
in
decb
shlb
push
push
in
xchg
lahf
clc
dec
push
dec
cld
out
add
push
cmp
cld
dec
incl
out
add
pop
cmp
add
pop
imul
add
add
push
jmp
pop
jae
push
rolb
insb
jl
mov
inc
in
insb
adc
lods
in
mov
sbb
imul
lods
std
pop
call
or
add
adc
sti
out
and
pop
incl
add
sbb
jnp
add
cmp
xor
movb
add
cmp
sub
int3
and
cmp
sbb
mov
adc
add
fwait
sbb
xchg
cwtl
leave
pop
test
faddl
xchg
cmp
fdiv
push
lods
add
cwtl
fmul
jns
roll
jg
cs
xor
mov
sub
rol
into
andb
mov
jmp
enter
fldt
andb
sahf
add
cld
enter
int3
adc
push
add
stc
pushl
add
cmp
cli
sahf
mov
push
or
les
hlt
xlat
add
cld
jge
dec
ret
jmp
xor
mov
add
rorl
cmp
mov
cld
adc
inc
jmp
cmc
add
and
add
jmp
cmp
add
cmp
bound
stc
call
inc
je
mov
sti
jg
cmp
test
stos
jne
jg
mov
punpckhdq
cmp
out
inc
pop
mov
jne
je
jbe
push
or
push
loop
sbb
je
xchg
jnp
add
add
shrb
dec
adc
inc
or
add
adc
rorl
int
inc
push
pop
jae
push
sub
pop
leave
adc
sub
std
je
mov
pop
push
imul
inc
nop
add
mov
sti
push
mov
in
mov
aad
out
push
xchg
jb
lcall
cmp
pusha
add
cmp
inc
jne
movsb
mov
add
fnstenv
pushl
mov
xchg
add
xchg
add
inc
sub
or
add
aad
in
sbb
add
rolb
cmp
scas
xor
add
add
pop
fildl
pop
or
mov
add
mov
sub
cmp
cmp
bound
in
dec
mov
jmp
insl
mov
xor
pop
add
flds
cs
jmp
push
outsb
add
inc
fldl
add
stc
add
mov
add
inc
psubw
call
add
push
in
cmp
movsl
fwait
iret
add
ret
dec
icebp
adcb
mov
cmpsl
add
cmc
sub
mov
call
add
add
jmp
inc
clc
ljmp
ds
test
mov
add
cmp
push
leave
mov
push
xchg
roll
hlt
and
inc
jmp
cli
icebp
test
cmp
add
or
cld
add
ret
mov
add
add
add
cmp
xor
popa
or
aad
add
repnz
icebp
and
add
push
or
fidivs
cmpb
dec
jl
call
add
cmp
cmpsb
mov
mov
add
dec
lea
sti
call
inc
in
pusha
cld
incl
jecxz
es
pushl
adc
popa
add
xor
add
sbb
inc
adc
jne
push
or
sbb
roll
call
push
or
jne
js
pop
add
or
je
imul
xchg
add
sti
mov
add
and
inc
mov
cltd
pop
add
inc
inc
add
push
add
cmp
push
push
jbe
in
out
and
xor
clc
dec
jecxz
pushl
dec
incb
pushl
in
inc
xor
decl
sub
hlt
cli
out
addr16
push
aam
dec
adc
pop
inc
in
mov
cmc
cmpl
cs
jmp
jbe
loope
mov
adc
xchg
or
inc
jo
ljmp
loope
add
add
incl
aad
add
inc
jmp
jmp
add
out
clc
ret
movsl
in
movsb
std
popf
incl
xchg
jmp
subl
cmp
lock
test
push
imul
inc
sbb
or
je
add
dec
inc
adc
and
inc
add
add
jmp
rol
sub
jno
adc
sub
cmp
bound
cld
je
mov
or
pop
xor
stos
dec
add
cmp
call
or
js
add
sub
decb
add
call
or
cmp
fmull
je
adc
push
decl
rcr
fldl
jmp
mov
jg
cmp
add
movl
inc
add
add
sbb
inc
add
inc
pop
add
inc
sti
jae
clc
xchg
cmp
pusha
call
pop
pop
add
jb
pop
into
jb
pop
leave
or
add
jae
popl
and
add
pop
lds
adc
add
movsb
xor
mov
jb
ss
in
inc
inc
js
add
loopne
cmp
add
call
inc
cli
std
lcall
int3
adcl
xchg
sub
test
ljmp
add
jns
test
cmp
add
cld
add
add
jmp
add
inc
pusha
jle
jbe
in
add
jmp
add
mov
icebp
mov
inc
call
and
add
data16
cmp
or
and
add
cmp
add
jmp
jne
ror
je
push
add
jmp
add
decl
jle
jle
mov
outsb
loopne
cmc
out
add
add
add
inc
add
cmc
mov
cmpsb
inc
jno
call
shrb
add
jge
cmp
jmp
add
add
stc
aas
cli
pop
inc
stc
stc
adc
push
or
int3
pop
je
in
adc
roll
inc
and
inc
cmp
fcoml
adc
inc
cmp
ficoms
add
test
stc
je
rclb
jmp
adc
add
cltd
adc
je
movsl
xchg
push
jmp
dec
push
out
or
add
fstpl
sub
ja
jmp
and
inc
jmp
jmp
jae
add
test
add
cli
jae
jbe
enter
add
mov
push
idiv
push
lds
dec
imul
add
shl
les
cli
lcall
mov
push
js
add
jae
mov
cmc
jae
dec
mov
jae
lahf
push
incl
pop
push
call
jmp
in
test
jmp
mov
jmp
mov
stc
std
jne
in
mov
in
mov
in
mov
outsl
call
je
push
add
jmp
outsb
xor
sub
int3
shrl
push
add
bnd
ds
call
adc
aaa
inc
cmp
insl
int3
mov
loop
je
cmpsb
cmp
add
enter
clc
gs
ret
mov
decb
cmp
ds
cmpsl
cld
inc
sahf
divl
data16
mov
je
sbbl
sub
in
mov
insl
clc
out
jo
data16
lds
add
add
testb
mov
clc
call
cmovb
mov
inc
cmp
outsb
xor
adc
cmp
push
outsb
inc
call
icebp
ret
and
inc
jmp
mov
mul
jmp
push
aad
inc
call
outsl
andl
test
inc
mulb
divl
test
sub
lea
lods
inc
negb
notb
jmp
push
idivl
idivb
add
cmp
push
cmp
add
cmp
add
push
shrl
push
jmp
cmp
dec
call
jnp
inc
aas
sub
and
fs
add
test
xor
add
jmp
lret
idiv
bnd
cmovno
daa
inc
jmp
aaa
mov
sahf
and
push
daa
insb
adc
cmp
xchg
ret
std
lea
sub
mov
push
push
decl
in
jae
js
cld
pushl
cmp
fucom
add
lea
jmp
dec
dec
ds
mov
out
std
call
add
inc
sub
in
jae
push
ljmp
js
mov
ja
pushl
jmp
or
jmp
or
idiv
xchg
jecxz
xchg
in
std
mov
push
idiv
cmpb
cmp
jg
cmp
push
mov
rolb
xor
jno
cmp
inc
push
fidivs
xor
mov
push
push
mov
inc
cmp
scas
mov
adc
out
mov
add
cmpl
repz
mov
pop
or
or
mov
adcb
cli
add
pop
xor
call
dec
je
std
inc
mov
jb
aaa
push
sahf
outsb
dec
repz
mov
adc
mov
sbb
repz
clc
icebp
insl
hlt
outsb
repz
mov
repnz
jmp
dec
jmp
jle
repnz
hlt
xlat
lods
jl
iret
repnz
or
add
hlt
test
lret
jge
repnz
shll
mov
xchg
bnd
xchg
insb
fxtract
add
call
scas
movb
jg
jle
hlt
psllq
push
adc
push
push
test
mov
add
psubsb
mov
repnz
insb
add
jmp
in
cmp
out
cmp
je
adc
ljmp
fldl
pusha
mov
mov
and
test
icebp
je
fisttpll
es
mov
out
jmp
stos
repnz
add
cmp
out
pop
add
popa
jae
repnz
cmp
incl
adc
std
incb
cld
incl
je
lcall
cld
push
test
xor
inc
adc
cmp
and
incl
cld
incb
cmp
push
cmpsl
aam
push
sar
or
aam
pushl
pop
push
add
cs
add
aam
push
mov
ja
incl
aad
mov
dec
mov
or
add
jae
addr16
mov
icebp
je
xchg
enter
fucomi
mov
jle
adc
in
repnz
icebp
sti
dec
cltd
stos
mulb
icebp
lahf
and
mov
ja,pt
loope
mov
into
ja,pn
shll
mov
dec
mov
scas
push
ja
xchg
inc
mov
sahf
jbe
xchg
insb
incb
fidivl
imul
pop
jo
add
or
jb
mov
adc
jbe
fdivrs
lret
add
push
testl
jne
rcrb
mov
push
out
test
into
jae
jp
fadds
push
adc
sub
out
rorl
mov
adc
fucomip
mov
lock
clc
push
sbb
out
xor
lock
adc
pop
test
lock
push
jmp
cmp
out
arpl
jmp
out
in
ud0
mov
test
add
jmp
push
add
imul
mov
jne
xchg
mov
out
sbb
add
mov
inc
sub
cmp
pop
xchg
out
je
test
mov
lods
out
out
je
xlat
je
ss
fdivr
mov
out
je
xchg
or
push
xchg
out
je
jge
orb
out
inc
add
nop
lret
or
add
in
fsub
xchg
jecxz
std
leave
xchg
adc
jg
insb
ljmp
call
cltd
cmp
sbb
add
add
addb
sub
add
adc
jp
adc
push
push
or
cmp
rcr
xor
cmp
decl
push
fdivrp
push
js
cmp
mov
add
cmp
add
mov
arpl
std
jle
push
call
outsb
dec
lock
in
out
fimull
jnp
add
rolb
rcl
pop
and
arpl
mov
lock
clc
mov
inc
sbb
add
cmpsb
test
testb
add
scas
sub
inc
add
sbb
les
push
repz
add
flds
add
sbb
add
fsubs
push
cmp
xchg
fiadds
pop
xchg
sub
inc
cmp
sbb
push
inc
jmp
icebp
push
jmp
pop
pop
sub
add
in
inc
cmp
sub
add
add
lods
clc
nop
aad
jmp
jle
repnz
xchg
pop
imul
jne
inc
fcomps
sarl
mov
rolb
dec
pop
cmp
in
dec
clc
push
ja
jmp
xor
aaa
and
test
add
jmp
movsb
jmp
add
cmp
ds
cmp
push
addl
add
cmp
mov
enter
push
jmp
inc
jmp
xor
add
cmp
adcb
jmp
je
repnz
jle
cmp
mov
add
outsb
push
loope
ljmp
icebp
add
add
std
ljmp
call
add
aas
cld
xchg
push
ds
mov
push
std
push
test
jmp
mov
pusha
std
addr16
inc
add
adc
add
aam
inc
pusha
xor
sub
incl
aad
push
dec
fs
inc
adc
ds
add
add
std
jg
add
std
lea
cld
lcall
call
incb
add
les
ljmp
cmp
and
pop
sub
mov
inc
fwait
out
xor
sub
xlat
add
cmp
ja
call
add
iret
xor
xlat
pop
jle
sbb
stc
inc
add
shrl
cmp
add
movsb
loope
pop
and
movb
mov
add
cmp
cmp
cmp
loope
inc
in
push
jmp
ljmp
jmp
jmp
aas
out
mov
ret
shlb
xchg
sti
sahf
loop
call
adc
xchg
movsb
aas
inc
jmp
add
sbb
call
fwait
mov
insb
lock
add
call
sub
lcall
jmp
lods
fldt
add
sahf
push
inc
jmp
add
sub
xchg
outsl
mov
cmpsb
jae
mov
jmp
and
mov
jne
incb
and
je
mov
arpl
es
add
pop
jnp
push
ljmp
rcll
gs
lock
cmpl
pusha
insl
push
in
test
xor
mov
pushl
out
mov
in
jb
fldenv
sub
aas
add
add
inc
int
and
push
call
fcmovnb
jb
sahf
leave
xchg
mov
dec
push
clc
sarl
jne
leave
shlb
xlat
fdivrp
jmp
and
inc
and
sarb
mov
pop
in
cltd
std
jne
fidivs
cmp
jge
push
ds
leave
mov
int3
add
push
inc
sub
insl
in
mov
mov
mov
mov
out
daa
cmp
add
inc
xlat
outsb
inc
xchg
ja
inc
add
push
faddl
xlat
add
stc
ljmp
cmpsb
pop
add
movsl
addr16
inc
add
jo
mov
sub
adc
and
cld
dec
pop
lods
incb
mov
outsb
cld
outsb
arpl
out
push
out
cmp
sarl
sar
pop
sub
and
out
and
adc
imul
add
inc
cmp
add
addb
mov
fwait
jo
out
push
add
shrl
pop
and
sti
loope
in
fsubs
mov
outsl
mov
mov
xchg
sub
add
dec
jb
mov
push
in
clc
add
add
add
add
shll
pop
add
daa
sub
jecxz
cld
push
aam
in
jecxz
call
xor
mov
mov
cmp
clc
out
xchg
jecxz
pusha
aas
in
jmp
js
inc
jmp
xor
scas
mov
jmp
jp
add
add
jmp
mov
add
clc
out
and
and
pushl
pop
jne
fyl2x
adc
out
cmp
cltd
push
imul
cmp
push
sbb
jge
daa
bound
in
add
fldl
add
fbstp
jp
std
jb
push
add
mov
adc
jmp
cld
dec
mov
lock
add
push
push
outsl
inc
or
in
imul
rclb
mov
insb
imul
mov
in
push
push
push
add
mov
add
add
jae
cmp
dec
add
rclb
sub
or
dec
cld
out
cmp
adc
fcomps
test
add
mov
push
adc
jecxz
fs
sbb
loop
sti
lret
ret
je
inc
pop
sbb
and
mov
inc
dec
add
xchg
xor
sub
loope
inc
aas
js
sbb
je
add
xchg
loope
adcb
add
add
pop
rcll
ljmp
dec
loopne
xor
inc
push
jmp
loope
loope
push
loope
mov
shl
xor
or
cmc
movsl
loope
imul
cmp
add
not
test
jle
jle
insl
lock
add
enter
loope
lock
fsubrs
add
enter
loope
add
add
imul
fistps
mov
in
popa
mul
pushl
pop
sar
loopne
mov
imul
out
or
cmp
adc
out
call
add
xchg
sbb
mov
jmp
cmp
sbbl
xchg
cmp
test
cmp
add
incb
jp
lea
pop
or
sbb
cmp
test
add
inc
insb
out
cmp
out
ja
pop
inc
test
lea
xchg
fmull
cmp
test
dec
mov
call
out
mov
pusha
lea
push
push
xchg
jmp
push
inc
push
add
test
mov
pushl
in
fmuls
add
shrb
cmp
loopne
test
ljmp
lea
ljmp
lea
lea
adc
mov
push
jp
push
cmc
xchg
repz
mov
ds
cmp
or
in
movsl
fnsave
cltd
xlat
push
movsb
repz
push
out
push
adc
mov
inc
mov
in
stos
sar
cs
in
add
out
sbb
sbb
dec
mov
xchg
jmp
jle
incb
loope
out
cwtl
jmp
push
fsubp
hlt
pop
add
add
idiv
insl
push
out
xor
xor
adc
fnsave
pop
or
out
je
add
xor
subb
in
stos
lahf
jbe
call
mov
mov
stos
ret
push
push
faddp
xchg
in
xor
push
push
mov
int
inc
fstpt
hlt
daa
adc
push
sub
mov
fisttpll
jmp
dec
jmp
faddl
xchg
jno
mov
cwtl
jne
inc
cmp
mov
andl
ret
mov
imul
fstpt
ss
pop
push
insl
push
adc
dec
sbb
sub
insb
pop
push
xor
je
jge
mov
movl
ficomps
push
adc
sbb
mov
jmp
cmp
cmpsb
in
adc
or
or
insb
fdivr
jbe
loop
inc
add
jae
addr16
mov
fstl
mov
push
or
push
sub
jg
dec
mov
push
or
rorl
pushl
mov
cmp
movsl
mov
mov
mov
adc
xchg
mov
push
fildll
dec
mov
push
in
dec
cmpb
add
je
mov
nop
mov
add
std
jmp
push
nop
pop
inc
cld
nop
in
mov
mov
xor
inc
aad
mov
inc
sahf
jne
pop
andb
cmpb
incl
ljmp
je
pop
jo
or
mov
xchg
hlt
fidivl
push
inc
cmp
call
bound
or
ss
aas
sub
data16
mov
mov
push
mov
mov
shl
popa
fwait
inc
inc
cmp
mov
inc
cmp
test
cmp
add
jmp
fcomps
mov
sbb
add
push
gs
inc
clc
pushl
popa
das
adc
add
call
inc
subl
fcomps
fcomps
imul
sub
xlat
sbb
inc
push
fnstenv
shr
scas
add
add
cmp
call
add
xlat
sbb
loope
es
mov
test
xlat
sti
xchg
dec
int3
jbe
mov
inc
sub
jmp
inc
mov
test
add
cmp
cltd
adc
push
or
lea
cmp
mov
sti
decl
sub
adc
mov
out
pop
mov
add
push
xor
dec
mov
ljmp
cmpsb
loope
mov
jmp
add
mov
shrb
sbb
ret
push
mov
enter
push
js
inc
inc
nop
fs
inc
loope
call
test
mov
nop
add
mov
adc
cld
inc
into
add
mov
dec
add
test
aam
and
add
pop
xchg
incl
adc
movl
xchg
inc
int3
adc
add
mov
clc
mov
mov
cmp
mov
push
imul
rolb
cmc
call
scas
ljmp
popf
push
clc
cmpsl
add
sub
in
mul
add
jns
or
out
add
es
enter
add
lret
or
je
out
add
aad
gs
inc
cmp
cmpl
mov
add
xor
decb
xor
mov
aad
std
jmp
out
sub
mov
adc
push
das
mov
jmp
xchg
es
test
mov
add
cmp
adc
add
add
add
jg
call
sub
call
add
add
add
jl
add
add
inc
cmp
mov
call
xor
cmp
push
lcall
mov
test
cmp
adcl
jmp
xor
cmp
mov
out
sub
aas
shll
mov
repz
jmp
dec
stc
call
xchg
jle
jmp
cmp
xchg
or
jmp
push
in
call
bound
call
mov
loopne
mov
inc
cld
mov
inc
jmp
sub
inc
daa
mov
add
mov
or
inc
in
jne
stos
je
cmp
add
jle
push
stc
dec
lods
std
jne
out
inc
sar
pop
in
mov
xchg
jg
clc
nop
inc
or
outsl
stos
std
decl
cld
jmp
sub
or
ret
push
mov
ret
imul
cltd
das
dec
adc
orb
je
add
lods
inc
cmp
add
mov
cmpsl
push
pop
mov
aas
ret
aas
js
fimull
xor
inc
inc
cmp
test
rorl
je
add
cmp
sbb
lea
incl
inc
cmp
cmp
repnz
jne
cs
decb
shll
push
sti
jbe
jg
add
idiv
in
out
rclb
add
popa
iret
decb
push
or
sar
loop,pt
cld
add
add
shll
stos
pop
cmp
fistpll
sub
ljmp
or
xchg
sbb
xor
stos
sti
into
scas
nop
jle
add
add
nop
call
jle
and
test
adcl
lcall
addb
push
xorl
sti
out
cmpsl
cmpl
cld
and
mov
sti
inc
adc
mov
xchg
add
sbb
cmp
cli
cmp
addb
sub
ljmp
mov
hlt
ret
test
repnz
push
mov
fnstcw
clc
mov
movb
add
mov
call
pusha
jge
pop
gs
add
cmp
sarl
pop
add
dec
xchg
mov
adc
idiv
mov
in
sti
mov
mov
jge
dec
dec
lock
push
rep
stos
inc
or
lea
call
add
sbb
pop
fld
push
add
les
jbe
rorb
adc
mov
add
dec
inc
cld
cmp
add
mov
inc
sbb
add
nop
add
pop
insb
scas
std
mov
mov
add
add
call
flds
push
dec
inc
je
cmp
jns
addb
add
xor
hlt
add
pop
xlat
add
pusha
sub
mov
call
idivl
add
test
fistl
cmc
jecxz
je
aas
cli
inc
js
int
loope
mov
xlat
add
popa
out
inc
cmp
hlt
ror
inc
add
pop
enter
repnz
inc
add
cwtl
add
mov
or
pop
push
sti
xchg
add
in
or
dec
sti
call
into
in
andb
jmp
or
jp
cmc
pop
dec
pop
jp
js
out
sbb
add
inc
pop
jmp
pop
xor
aas
jmp
into
roll
cmp
adc
fists
into
or
fdivr
push
int3
outsl
dec
add
pop
jmp
pop
cmp
aas
jmp
into
roll
cmp
mov
into
inc
mov
add
jmp
pushf
add
jo
mov
jmp
icebp
xlat
aam
and
jmp
insb
ja
sbb
push
in
mov
adc
and
repnz
mov
jg
jmp
sub
lret
or
jmp
aad
mov
sub
cmp
hlt
xchg
dec
je
lret
lods
jg
jmp
jbe
or
jmp
mov
in
cld
ljmp
leave
mov
enter
push
das
xor
call
aas
xor
inc
out
mov
movsl
fwait
std
jne
cmpsl
js
mov
jae
clc
sub
mov
aam
xor
mov
std
jne
mov
outsl
mov
xor
jne
inc
inc
int3
pop
out
jne
cmpsb
outsb
mov
add
add
fcmove
pop
inc
int3
incb
int3
in
add
and
in
fisubrl
lret
icebp
lret
inc
call
int3
inc
cld
ficompl
stos
ror
movsb
ficoml
stos
loop
movsb
ret
fisttpl
mov
fildl
mov
lret
imul
push
outsl
fcomi
push
xchg
fucomi
dec
jb
incb
loop
or
inc
fcmovnu
sub
enter
push
mov
push
test
jp
push
lret
xchg
jnp
dec
shl
xchg
sbb
call
stc
call
lock
jmp
add
add
inc
inc
leave
in
cmp
pop
cmp
pop
cmp
iret
jle
arpl
das
leave
in
push
push
loope
int3
rorb
add
inc
push
in
fsub
call
inc
cmp
xor
fsubrp
sbb
fildll
jb
add
sbbb
sar
sti
lret
arpl
scas
enter
xor
jae
inc
pop
push
jmp
std
pushf
jb
decb
adc
adc
jmp
xchg
push
leave
pusha
mov
jge
adc
push
adcl
jmp
jo
mov
add
subb
out
add
jmp
add
into
dec
in
add
fucomp
insb
adc
mov
jmp
lock
pop
std
into
sahf
add
cmpl
jmp
aas
mov
std
mov
mov
mov
mov
std
call
divl
div
mov
loop
daa
mov
std
decl
outsb
pushl
mov
cld
incl
aaa
mov
aas
add
mov
or
push
mov
xchg
sar
adc
out
jne
std
mov
data16
inc
add
sub
mov
ljmp
stos
jmp
mov
mov
mov
test
mov
repz
and
fimull
hlt
pop
jl
mov
jmp
es
fadds
cmp
add
inc
call
mov
dec
lahf
jmp
ss
nop
sti
xchg
add
dec
sti
out
sub
adc
add
mov
push
enter
mov
dec
mov
insb
jo
add
ret
cmp
rolb
sub
add
cmp
cmp
jmp
or
dec
lock
cmp
jo
faddl
ret
add
fld
sub
call
repz
and
sti
push
cli
add
inc
xor
cmpsb
xor
daa
mull
add
add
adc
ds
hlt
jp
enter
hlt
test
add
mov
inc
mov
sub
xchg
lret
jns
mov
cmpsb
mov
mov
cmp
hlt
imul
sub
mov
out
add
bound
pop
xor
call
jbe
xor
cmc
cmp
mov
stc
cmp
xor
fnstcw
add
inc
push
mov
clc
add
dec
add
pop
jmp
cld
dec
adc
jle
pop
cmc
ret
loop
push
rcr
movsl
add
jne
mov
cld
call
pop
add
adc
cld
ljmp
xor
movsl
out
cmp
jmp
sub
inc
hlt
out
xor
decl
shlb
dec
incl
movsl
out
mov
std
jne
cmpsl
lods
imul
cmpb
movsl
add
dec
cltd
add
mov
repnz
and
jae
cmp
lds
dec
or
ss
out
pop
stc
mov
mov
out
stc
inc
jecxz
out
cli
je
add
lret
add
xor
hlt
cmp
jl
add
pop
dec
cld
mov
adc
cld
cmp
add
ret
cmp
add
cmp
dec
clc
push
lret
push
call
ds
adcb
in
pop
xlat
push
mov
testb
jno
mov
ret
and
decb
imul
dec
fstl
gs
rorb
shll
mov
call
mov
add
sarb
mov
cmp
jmp
mov
cmp
notb
cmp
ret
ret
call
add
cmp
add
inc
lcall
ret
add
rorb
inc
push
jmp
stos
fidivs
call
sarb
call
jmp
sbb
je
mov
ja
mov
dec
adc
cmp
les
cmp
xchg
lea
jl
aaa
dec
and
lock
fwait
pop
jmp
dec
adc
aas
push
add
cmp
pop
dec
jnp
call
push
repz
dec
or
push
pop
lcall
mov
cld
push
add
in
imul
fnstsw
call
cmp
jnp
sbb
adc
push
out
pop
call
mov
push
add
add
and
shlb
cmc
addr16
shll
add
call
jmp
and
or
insl
mov
pop
incl
lea
call
ljmp
add
clc
mov
call
imul
cmp
inc
cld
cmp
pop
push
addl
jl
push
call
adc
add
cmp
ds
push
and
je
add
cmp
add
cmp
xchg
inc
inc
popf
test
xorl
add
cmp
add
inc
popa
add
cmp
add
add
aam
or
ds
test
mov
inc
dec
orb
aaa
xor
stos
jo
push
shlb
divb
sysenter
icebp
stos
push
daa
fidivrs
cmp
shrl
xor
mov
cmp
in
or
mov
adc
add
push
sub
cmp
and
push
mov
mov
inc
cmp
mov
pop
xor
xor
and
xchg
xchg
xor
xor
add
incb
out
clc
adc
fldcw
push
xchg
add
jmp
cmp
add
in
mov
jmp
mov
add
clc
add
bound
or
jecxz
repnz
adc
adc
xor
mov
call
pop
insb
mov
jmp
add
mov
cmp
jmp
dec
mov
cmpb
je
add
push
adc
nop
add
add
aas
sbb
movsb
or
add
adc
push
stos
imul
aad
movl
mov
loopne
jmp
cmpb
repnz
sub
adc
incl
jge
or
pop
pop
leave
loop
add
test
inc
gs
lds
add
call
mov
cmp
je
inc
aad
inc
sti
inc
dec
jb
adc
add
shlb
into
ret
out
rorl
mov
stos
andb
or
pop
pop
add
mov
stos
rcrb
push
call
shl
mov
imul
loop
lea
popl
clc
mov
cli
mov
xchg
dec
call
and
sbbb
sub
mov
js
jmp
inc
push
imul
mov
add
shrb
pushl
add
nopl
xor
mov
xor
xor
push
sbb
xchg
add
test
adc
xor
mov
xchg
mov
rcll
push
mov
ret
cmp
pop
xchg
test
add
add
push
pop
inc
lods
push
sbb
xchg
mov
jae
mov
add
movzbl
jmp
lcall
mov
cmpb
nop
add
mov
leave
sub
add
lods
mov
jl
xor
mov
pop
mov
xor
data16
push
jmp
cld
mov
jmp
jle
push
push
adc
sbb
js
jmp
jmp
dec
adc
mov
inc
adc
mov
mov
jmp
incb
lea
pop
fs
popa
divl
jge
cld
je
jp
push
pop
lock
call
push
lock
int
call
mov
outsl
std
jne
jp
or
inc
call
jp
adc
call
lcall
idiv
lea
pushl
imul
xchg
jns
jne
js
or
push
call
mov
jae
popf
cmpl
cs
or
pop
lds
cmp
fs
test
out
pop
mov
pop
jo
mov
cmpsb
mov
and
and
aas
enter
add
add
es
mov
mov
sub
or
lock
mov
shll
mov
jae
jmp
out
inc
mov
leave
sti
cld
add
jge
add
add
mov
lea
jns
cmp
xor
pop
cs
mov
or
lret
mov
cs
dec
xor
mov
mov
scas
push
filds
pop
add
ret
aam
push
sub
mov
in
mov
or
sub
stos
lret
mov
mov
rclb
sub
mov
sar
hlt
mov
jl
imul
std
out
sub
mov
cld
inc
test
jg
mov
test
cmp
fsubl
mov
sub
mov
call
add
add
jmp
cmp
lods
mov
mov
add
dec
or
dec
data16
cmpl
je
sub
rcrl
faddp
inc
adc
in
jae
cmpsl
sub
add
andb
test
adc
fcmovne
jb
leave
pop
jmp
cld
jne
insl
jae
test
idiv
jp
mov
je
insl
jae
or
decl
stos
mov
add
scas
xor
add
call
lock
rcrb
arpl
cmpl
mov
jle
call
sti
inc
call
sub
xchg
dec
repz
cmp
sub
insb
leave
mov
aas
call
add
aas
loopne
cmpsb
xchg
cs
adc
dec
sahf
or
call
inc
imul
out
sti
mov
and
push
leave
jnp
add
lods
pop
into
dec
les
jmp
lcall
loop
fsubl
dec
push
ljmp
es
sarb
xchg
adc
je
cli
cs
sub
decb
dec
sbb
idiv
pop
std
loope
out
adc
loope
imul
mov
mov
lods
shlb
pop
mov
jnp
add
add
leave
stos
dec
jb
btr
or
arpl
clc
jge
xor
loope
in
cld
pop
jmp
xor
test
clc
inc
jmp
stos
xor
call
incb
pop
sub
cmp
mov
scas
push
sti
aaa
sub
mov
or
add
call
mov
shl
sub
sub
push
aad
aam
cmp
or
cmp
add
inc
cmp
or
xchg
jno
lock
sub
outsb
xor
sub
fdivl
mov
or
and
call
push
addb
add
jmp
cmp
adc
subl
stos
jne
call
cld
decl
push
testl
lock
jmp
sbb
shl
stc
movsb
js
inc
inc
loopne
jae
call
mov
jne
dec
pop
leave
loop
decl
add
scas
pop
je
jl
or
mov
push
add
je
loopne
pop
je
jl
pusha
stc
lds
xor
aas
pusha
neg
popf
pusha
call
movb
jmp
das
jl
dec
out
jg
call
scas
decl
cltd
add
cmp
je
add
cmp
stos
add
cltd
add
pop
or
add
in
dec
cltd
add
mov
inc
clc
cmp
mov
and
enter
cmpl
lods
jb
add
fwait
sbb
sbb
add
int3
adc
cmpsl
jl
cmp
or
incb
jne
data16
inc
mov
fiadds
cmp
fwait
sti
mov
icebp
pushf
pop
adc
lea
or
cmp
shll
insl
push
mov
ret
mov
es
mov
test
add
xor
pop
sar
mov
mov
ret
jle
test
or
push
inc
jmp
push
jo
fadds
ret
ljmp
imul
les
ljmp
add
add
ljmp
punpckhdq
inc
hlt
mov
xchg
inc
cld
mov
jnp
pushl
mov
movsb
sarb
lea
and
lahf
xor
rcll
mov
mov
inc
in
hlt
aas
add
sbb
cwtl
mov
fidivrs
xchg
add
xor
data16
and
lods
jmp
add
sbb
ret
cmp
add
int
aam
incl
mov
loope
or
jne
cmpl
je
fwait
aas
int3
cmp
fs
add
sub
out
fisttpl
add
inc
in
out
call
push
lock
add
lahf
test
add
add
test
add
add
lock
outsl
test
jne
mov
out
pop
xchg
pop
jae
incl
mov
inc
inc
cmp
das
cmp
inc
add
jne
out
movl
sbb
add
cmp
inc
add
sub
out
inc
add
xor
sbb
inc
inc
cmp
dec
xor
cltd
push
push
mov
test
add
ss
adc
ss
pop
dec
decl
fadds
incl
lods
in
lods
je
add
sub
stos
push
aaa
dec
stos
rcrl
mov
xor
sub
cwtl
dec
push
stos
sbb
and
stos
lods
dec
lock
or
cli
xchg
imul
dec
add
add
rcll
inc
int
push
inc
sub
imul
stos
call
jl
scas
add
or
add
clc
mov
ljmp
stos
jmp
add
inc
clc
mov
xor
call
sub
cmpb
jmp
mov
inc
jmp
cmp
mov
call
mov
icebp
mov
in
mov
add
sub
call
push
test
fnstsw
jne
mov
mov
jnp
mov
add
adc
call
add
xlat
testl
movsb
loopne
add
push
std
decl
aas
mov
push
lds
notl
ja
repz
pop
aas
call
xor
arpl
push
jb
xchg
xchg
ds
je
cmpb
mov
push
push
lea
insl
mov
jne
push
jae
call
imul
mov
imul
fdivr
push
std
push
cmpsl
ja
mov
stos
je
push
pop
jbe
mov
xor
inc
inc
cmp
lock
cmp
mov
inc
cltd
roll
add
inc
inc
in
mov
das
or
jp
decl
mov
sbb
in
cmp
sub
lock
cmp
shl
push
inc
or
dec
mov
mov
xchg
add
cmp
add
jns
lds
cmp
fs
call
test
in
lea
mov
xor
data16
fcompl
je
xchg
cmpsb
pop
fisubrs
add
sub
call
mov
jne
mov
add
add
test
call
mov
jge
cmp
arpl
cmp
mov
incl
jge
shl
jne
xchg
ljmp
xchg
roll
addb
cmpsb
jae
lea
stos
bound
fcoml
lods
ret
adcb
push
push
xchg
mov
hlt
std
jmp
xchg
dec
ret
sbb
pop
push
loope
inc
add
mov
xor
and
xor
sub
lcall
fidivrl
mov
sbb
jmp
push
or
incl
movsb
out
dec
pop
std
push
or
sti
jne
pop
jae
mov
arpl
or
mov
sarl
dec
call
out
out
sti
jmp
out
mov
or
push
jmp
test
jne
test
decb
or
mov
pushl
test
ret
push
mov
or
mov
add
test
jae
adc
push
cmp
scas
jmp
out
push
cmpsb
xchg
jmp
call
in
jp
adc
mov
xchg
movsl
je
adc
in
sahf
lcall
xchg
xchg
mov
cmp
or
mov
je
push
mov
jecxz,pn
add
cmp
add
push
inc
add
test
imul
addl
mov
insb
popf
sbb
sub
out
add
movsl
iret
sbb
add
bound
js
jmp
loope
sub
mov
push
add
xchg
aam
dec
inc
clc
lcall
movsb
add
mov
call
shlb
sbb
or
mov
cmpsl
out
inc
cmp
movsl
daa
mov
loope
dec
inc
movsl
add
add
cli
mov
add
dec
out
lcall
movsb
addr16
add
pop
clc
out
popf
mov
push
mov
jmp
mov
push
jge
mov
add
add
sub
xchg
out
call
or
inc
jmp
shll
stc
inc
add
sbb
inc
jmp
cli
jmp
lods
pop
mov
aas
jo
test
movsb
xchg
loope
sarb
out
xor
cmp
or
lret
add
add
addr16
mov
xlat
pop
clc
incl
insl
hlt
out
addr16
std
decl
pop
std
ljmp
std
jne
push
jae
out
mov
mov
ret
cld
imul
jmp
cmp
out
or
sbbb
out
cld
lcall
out
jmp
std
leave
clc
call
add
push
pop
jae
sub
daa
jae
cld
add
jg
inc
js
mov
std
out
mov
or
lds
add
in
mov
mov
cmp
stos
mov
bound
xchg
cli
xlat
add
add
stos
std
test
mov
pop
outsb
jns
sarl
sti
jecxz
sub
dec
ret
or
mov
push
sahf
addr16
push
add
pop
or
hlt
fsubl
decb
mov
mov
insl
or
push
pop
lahf
add
sub
test
and
lahf
cmp
inc
or
cltd
mov
mov
add
les
cmp
loopne
or
sahf
xchg
mov
fwait
popa
filds
arpl
daa
add
fucomip
pop
frstor
dec
inc
clc
call
add
rcl
out
jp
ss
loope
stos
xor
mov
nop
cli
pushl
fcomps
imul
push
lahf
decb
cwtl
adc
xchg
fstpl
push
cltd
es
pop
movsl
cmpsb
sub
cwtl
popf
or
inc
cwtl
dec
movb
or
dec
jecxz
inc
xor
scas
fsts
clc
xchg
sub
sahf
sahf
sarl
mov
insb
aaa
out
dec
test
hlt
mov
mov
outsb
cltd
cmp
push
jb
popf
je
loop
pop
dec
rolb
sahf
data16
roll
push
js
pop
lcall
jne
sar
jne
push
dec
pusha
out
pushf
pusha
std
leave
adc
insl
add
mov
imul
mov
add
or
inc
inc
mov
add
or
clc
cmp
aaa
fs
or
je
mov
mov
jle
or
jl
clc
push
std
jne
imul
movsb
das
sub
es
or
ficomps
lcall
mov
sahf
jmp
faddl
fs
lahf
je
add
cmp
jne
shll
sti
xor
jb
pop
or
cmovs
mov
test
ds
inc
push
out
xor
cmp
xor
xor
sbb
incb
add
pop
in
sub
cli
jmp
or
and
sahf
das
test
inc
rcr
pop
cmp
insl
inc
add
test
adc
fwait
adc
add
imul
cmp
jmp
sub
add
xchg
jmp
add
mov
pushf
xchg
adc
scas
popf
add
cwtl
popf
pop
jne
xchg
popf
in
add
call
mov
xchg
lcall
and
push
adc
imul
outsl
sub
cmp
call
shl
lods
stos
dec
push
push
out
imul
cmp
adc
pop
push
inc
nop
out
or
or
and
pop
add
cltd
mov
cltd
je
shrb
je
mov
in
mov
nop
out
dec
fwait
bnd
sbb
cmp
adc
adcl
icebp
jmp
dec
push
call
lcall
out
cli
jl
decl
jl
mov
repnz
xor
jl
ret
std
push
mov
jae
cmp
pop
pushl
or
je
in
inc
mov
incl
in
add
add
inc
inc
add
jae
push
insb
cmc
pop
xlat
jne
jne
gs
xlat
jne
sarb
in
addr16
out
add
outsl
mov
push
sbb
aaa
aam
add
cmpsb
add
jg
xchg
inc
js
xor
add
fwait
out
pop
cltd
incb
in
add
cmp
sub
je
out
lahf
push
out
icebp
mov
cld
fs
cltd
cltd
imul
sbbb
sub
stos
pop
scas
mov
sub
cltd
je
scas
cwtl
push
xchg
pop
lret
shll
xchg
ljmp
ret
ljmp
jmp
fwait
push
das
adc
test
sub
cwtl
fisttpl
and
fstpl
es
pop
lds
add
mov
push
loope
xchg
cs
fwait
or
push
lcall
adc
xchg
cmc
sub
xchg
jae
shrl
cltd
mov
push
cwtl
scas
or
into
cltd
add
in
add
mov
test
lcall
mov
sub
cld
bound
cmpb
inc
aas
push
push
xchg
push
es
and
call
loop
adc
pusha
pop
cwtl
addr16
jmp
or
cs
xor
push
ds
out
and
push
mov
sti
pusha
iret
push
jl
xchg
je
mov
cs
fidivs
shr
sub
jecxz
aaa
out
imul
mov
jmp
jmp
aas
push
push
inc
push
aaa
fs
daa
pusha
add
rolb
outsb
fdivr
ljmp
ret
test
add
mov
and
clc
add
or
mov
push
clc
call
dec
lods
mov
incl
aaa
pop
push
cmp
loopne
mov
add
outsb
jae
mov
jp
cmp
aas
inc
cmp
sbb
xor
incl
mov
pushl
inc
in
jecxz
sub
out
push
push
push
mov
clc
cmpsb
stos
repnz
or
sub
mov
scas
sbb
xchg
xor
incl
loopne
decl
adc
mov
sahf
dec
xchg
push
ds
cmp
inc
js
xchg
xor
mov
cmp
cmovno
mov
pop
cmpl
arpl
cmp
push
lahf
or
stos
inc
sub
xchg
or
in
lods
xchg
in
movsl
adc
inc
xor
xchg
adc
adc
inc
sbb
lahf
inc
or
repnz
push
inc
mov
inc
aas
outsb
xchg
inc
xchg
test
xor
iret
xchg
and
adc
test
das
ficoms
call
mov
adc
je
inc
test
cmp
shrl
inc
xor
jmp
cmp
adc
cmp
mov
shlb
test
or
xchg
or
xor
push
push
xor
out
addr16
ds
aam
test
mov
cmp
push
jb
jge
cmp
jnp
je
mov
les
ljmp
or
add
jecxz
sub
lock
aad
incl
into
add
push
and
or
ja
cmpsl
data16
xchg
imul
nop
xor
lock
push
add
decl
call
pop
fnstcw
ljmp
adc
inc
in
add
std
mov
imul
jae
in
inc
xchg
std
push
call
sahf
ret
jb
out
xchg
xchg
or
adc
dec
and
pushf
inc
clc
cmpsb
xor
and
lcall
icebp
xchg
incb
dec
xchg
imul
push
in
sbb
incl
pop
sahf
ret
call
call
jmp
loope
call
lods
cli
out
scas
xchg
and
cmp
push
lods
in
xor
xchg
xor
pop
and
int
inc
cmp
mov
xchg
outsb
sub
add
push
sbbb
or
fwait
mov
notb
scas
nop
pop
nop
cmpsl
or
fwait
xor
stos
pop
cmp
jb
mov
sbb
adc
fildl
sbb
rcr
or
xchg
sbb
mov
nop
sbb
push
loope
cmp
dec
xchg
mov
push
mov
sub
push
into
add
inc
add
lret
adc
add
xor
push
add
cld
xchg
cmp
add
push
add
jmp
enter
inc
iret
mov
cmp
cmpsl
in
xor
jecxz
xor
cmpsl
mov
adc
sarb
xor
add
sbb
sbb
adc
push
outsb
enter
lds
je
test
or
xor
add
jg
rolb
mov
arpl
inc
inc
mov
out
outsl
std
mov
pop
mov
add
outsl
jae
cmp
lcall
cmc
pop
call
fld
add
and
jp
add
mov
sti
and
incl
pushl
push
push
mov
outsl
jae
add
jo
sbb
mov
or
cmp
inc
cmp
push
adc
lock
xchg
ret
mov
lcall
fistps
test
pop
add
inc
xchg
or
adc
add
mov
dec
sahf
adc
xchg
int3
and
sahf
sbb
lea
add
je
scas
mov
jbe
mov
sbb
push
ret
xor
pop
outsb
sbb
push
in
sti
out
mov
inc
mov
inc
mov
je
jg
dec
cs
mov
cmp
ss
fisubl
cmpb
mov
fdivrl
jmp
mov
add
inc
adc
add
xorb
cmp
cwtl
sbb
cmp
js
clc
jmp
clc
fcmovu
daa
add
rcrb
roll
or
pushl
ret
adc
aad
adc
popf
adc
dec
adc
fwait
lea
mov
or
jmp
xor
mov
cld
jb
inc
jmp
cmp
repz
add
jno,pn
call
lret
or
cmp
add
inc
mov
je
sbb
push
xor
add
test
movsl
jmp
inc
shll
add
xor
xor
mov
adc
adc
ljmp
inc
jl
clc
enter
cmpsl
lds
adc
incl
xchg
sti
testl
sbb
js
and
adc
jne
data16
sar
pop
add
or
jmp
jle
or
ror
out
xlat
decl
pusha
call
lods
push
xchg
jnp
inc
jl
push
in
addr16
call
jnp
inc
cmpb
jne
mov
imul
sub
fildl
pop
test
or
pop
mov
out
adc
add
lods
mov
pushl
lods
out
push
mov
inc
xlat
sti
adcl
mov
cmpsl
add
mov
ficoml
out
mov
sti
test
or
sub
sbb
mov
xchg
decb
mov
aas
cmovne
xchg
lcall
scas
mov
adc
shll
inc
inc
cmp
xchg
pop
push
mov
or
fidivrs
add
add
test
cmp
push
adc
call
pushf
and
call
jg
je
mov
cs
ficompl
shrl
in
dec
add
shl
add
inc
add
push
repz
mov
inc
mov
add
mov
or
stos
lds
popa
js
movsb
ja
add
loope
aam
aaa
ljmp
sub
push
and
lea
cmp
faddl
dec
jae
mov
in
fsub
xchg
or
push
sub
mov
mov
lahf
mov
mov
lahf
xor
mov
sub
sahf
lahf
and
lret
mov
push
mov
mov
mov
sti
inc
cmp
clc
out
cmp
jmp
test
and
imul
lcall
add
out
outsb
in
inc
push
cld
dec
jmp
ja
call
outsl
idiv
jmp
mov
inc
scas
ja
leave
and
add
push
imul
enter
das
jns
inc
sub
cmp
xchg
sub
je
mov
iret
out
aas
cld
decl
loopne
add
cmp
add
xor
incl
outsb
xchg
ret
out
aas
add
or
ljmp
add
inc
clc
cwtl
xor
lods
lcall
out
sbb
pop
mov
or
push
mov
je
ss
or
jle
out
mov
xchg
sub
iret
into
fiadds
decl
je
ljmp
mov
add
xchg
mov
add
add
add
sbb
sbb
sbb
sbb
jae
xchg
jb
xchg
outsl
test
xchg
adcl
xchg
pushf
inc
call
inc
cmp
sbb
lds
jne
mov
cwtl
out
test
scas
xor
xchg
push
out
inc
cmp
sbb
les
or
xchg
add
movl
pusha
mov
push
add
cmp
mov
test
xor
pushf
mov
mov
mov
xchg
sarl
mov
cmp
mov
cmp
add
pushf
imul
into
mov
dec
testb
or
dec
mov
cltd
ret
cs
clts
mov
mov
test
movl
addr16
cmp
decl
cmc
call
mov
test
jge
push
out
inc
adc
mov
jne
jmp
dec
sar
dec
add
mull
je
jmp
mov
addr16
inc
add
repz
xchg
xor
mull
out
loop
std
or
lock
cmc
jb
jae
jg
in
jge
add
std
call
repnz
mov
out
div
push
or
orl
or
lcall
int3
mov
or
ljmp
or
negb
xorl
dec
dec
pop
xorl
sti
out
fiadds
add
push
adc
push
lods
cli
out
pop
cmp
insb
stos
imul
cmp
movsb
aas
mov
aas
iret
dec
into
add
test
mov
orl
test
sub
addl
aad
inc
adcl
xorl
dec
xor
insl
pusha
sbbl
enter
add
mov
adc
add
lock
imul
xor
inc
sarb
or
xchg
mov
cmpb
add
sar
lods
xor
inc
push
mov
aas
add
dec
add
call
xor
sbb
and
cmp
dec
cwtl
xchg
sbb
in
dec
inc
xor
out
addr16
je
shlb
xchg
mov
mov
cmpb
mov
repnz
outsb
jge
pop
jmp
jbe
imul
inc
push
std
mov
inc
inc
aad
inc
rolb
cli
decl
out
loope
push
jmp
cmp
inc
nop
xorb
sub
decl
cmp
add
sbb
lahf
cmp
or
dec
lcall
push
mov
mov
outsb
imul
dec
decl
aas
fsubrl
xchg
iret
cmp
cmp
jnp
jmp
jne
mov
adc
cs
cmp
test
pop
scas
sub
push
add
cmp
ds
dec
test
add
lcall
adc
jle
xchg
sub
sub
test
add
mov
push
add
cmp
cld
inc
js
in
ljmp
jne
sub
mov
jmp
idivl
data16
add
invlpg
push
fldcw
test
ret
jns
add
cmp
jmp
int
mov
or
or
jmp
add
stc
scas
ret
mov
pusha
sbb
add
fldl
mov
test
add
add
idivl
push
outsl
leave
data16
or
repz
ds
jl
in
mov
repz
insb
sub
jmp
mov
call
pop
lock
je
push
mov
std
jl
sub
test
lods
push
int
mov
jle
adc
jge
or
mov
mov
jl
out
jl
jl
jle
cmp
push
cli
lock
fidivs
out
cmpl
jno
mov
out
inc
ss
cld
mov
inc
jmp
and
in
je
sub
out
xchg
cli
std
jbe
sti
je
xchg
js
call
xchg
js
decl
out
dec
ja
std
jne
out
dec
pop
cli
std
jne
cli
adc
cli
jae
inc
sbb
jne
out
dec
xchg
std
add
adc
hlt
add
xchg
out
xchg
std
push
cld
jae
ja
in
and
jne
std
jae
js
inc
call
pop
add
fisubrs
std
lods
je
push
hlt
sti
imul
push
daa
js
push
and
or
imul
add
imul
cmp
add
aas
add
hlt
repz
in
xchg
cmpsb
adc
cmpsb
xchg
jp
and
insb
push
xor
or
add
add
es
cmp
or
into
data16
notb
rclb
push
int3
incb
test
inc
jmp
jge
out
jmp
ret
push
mov
je
jp
ss
sub
jmp
jge
xchg
out
jns
jmp
lds
dec
mov
jb
jl
xor
sub
inc
shll
sub
jl
out
jmp
ret
cmpsb
mov
je
jns
imul
add
xchg
xchg
out
jbe
test
stc
call
mov
jno
jnp
xor
adc
js
mov
test
mov
jns
jmp
xor
stos
jp
mov
daa
sub
jp
insb
popf
jb
outsb
mov
jmp
jb
call
pop
loope
call
xor
scas
push
jp
je
jb
ss
hlt
pop
inc
mov
mov
push
xor
pushf
xor
cmpsl
and
cmp
jb
adc
pop
add
mov
fdivp
jns
push
cmp
jns
xchg
add
jno
add
jae
push
cmc
mov
xchg
std
call
call
incl
jmp
dec
mov
repnz
mov
cli
mov
xchg
cli
std
call
mov
imull
out
mov
std
incl
cmc
decl
jmp
dec
psubd
mov
repnz
decl
dec
decl
inc
clc
cmp
incl
aas
cli
jae
sub
adc
or
mov
inc
cmp
or
pop
pop
jns
shlb
stos
pop
ret
incl
or
xor
js
movsb
jno
push
sti
pop
add
mov
adc
adc
cmp
je
xor
cmp
out
psrlw
add
bound
cmp
cmp
mov
out
mov
jbe
and
jns
mov
fmulp
xchg
jno
jae
lock
inc
test
shlb
jns
push
in
pop
push
mov
imul
mov
js
pop
rcr
jne
js
insb
popf
out
and
or
sbb
jns
jbe
ja
xlat
xor
pop
dec
stos
pop
cmp
popa
addr16
jmp
imul
js
inc
sar
je
sub
cmp
mov
js
or
or
jne
ja
xor
addr16
jmp
ja
fs
mov
mov
imul
inc
sarb
cli
fistpll
add
test
add
fucomp
das
hlt
je
sub
add
stos
mov
je
sub
add
loop
in
add
or
movsb
xchg
scas
cmc
je
inc
nop
or
jmp
push
aam
cmp
jne
test
push
add
mov
fildl
test
outsb
add
or
add
lret
xchg
mov
int
xchg
mov
sahf
add
mov
in
jae
ja
out
or
in
std
mov
mov
xchg
mov
mov
xchg
addb
jne
xchg
call
xchg
inc
out
push
mov
incl
rorl
lea
out
mov
std
or
arpl
push
add
out
dec
inc
ljmp
cmp
ljmp
hlt
or
mov
js
data16
pop
cmp
jmp
popf
ja
cmp
leave
dec
jo
xor
test
jmp
call
xchg
inc
jae
inc
sbbl
call
popa
imul
inc
add
ljmp
popa
push
arpl
jne
xor
sub
shll
addr16
xchg
jne
mov
hlt
je
or
and
add
add
cmp
ja
add
add
add
out
jmp
subl
xchg
movsl
shll
in
mov
adcb
jmp
push
call
ret
repz
loope
scas
je
shlb
lods
jnp
insb
xlat
jno
rcl
pop
scas
je
xchg
jno
xor
and
mov
xlat
push
or
push
mov
mulb
data16
sar
mov
jno
loope
repnz
lret
aad
jno
push
xor
jo
je
push
cmpsb
stos
in
pop
xchg
xor
xchg
xchg
jl
xchg
mov
insb
imul
cs
jo
xor
push
pushw
pop
push
push
mov
jecxz
dec
jb
add
push
dec
inc
xchg
cld
mov
cmc
std
lcall
push
call
sub
cmpl
cmpl
jae
jecxz
out
pop
in
jae
push
jg
std
jne
aam
inc
jg
std
mov
cmc
std
out
push
std
fildll
std
jne
int3
push
inc
mov
ljmp
and
std
lcall
pop
repnz
mov
ljmp
loope
incb
mov
ffreep
jb,pn
sub
pop
and
sbb
jno
adcl
cli
out
pushl
xchg
idivb
pop
sbb
jne
movsb
imul
pop
dec
jo
gs
jo
popa
fs
inc
mov
inc
scas
jo
xor
mulb
out
jne
jo
int3
js
decb
andl
add
nop
sar
cmc
jo
in
xor
cmp
jmp
ret
pop
imul
outsl
mov
jo
js
outsl
scas
hlt
loopne
aas
cmpsl
add
incl
js
outsb
or
or
shr
cmp
jmp
jo
outsb
pop
jo
hlt
lock
inc
ret
addl
test
push
add
mov
pop
jnp
daa
outsb
outsl
and
call
shlb
call
add
repz
mov
pushl
outsb
je
imul
pop
adc
add
out
jmp
jle
testb
inc
cmp
sub
pop
inc
pop
verw
popf
lods
push
fs
add
jmp
cmp
add
ja
out
add
add
mov
mov
outsb
je
repz
roll
lods
jae
lea
jmp
cmc
insb
std
adc
pop
mov
sahf
outsb
dec
bound
test
jl
std
call
out
pop
mov
cmc
call
int
ja
push
inc
rcr
mov
fdivr
in
push
std
mov
sbb
dec
incl
add
cmpsl
divl
jne
enter
fldl
mov
inc
lods
mov
jae
js
inc
pushl
sub
lea
dec
data16
inc
insl
mov
cmp
out
inc
incb
insl
arpl
jmp
add
testl
loopne
ffreep
ret
mov
mov
add
xchg
add
in
jne
xchg
or
pop
mov
loopne
roll
imul
sbb
negb
add
scas
out
push
insb
dec
das
fdivr
ds
lods
lods
dec
pop
subl
in
test
push
add
shrb
jae
insl
push
fcomps
sub
out
mov
jne
push
imull
pop
movsb
sub
bnd
insl
mov
jne
push
testl
xor
insl
lahf
hlt
clc
pop
mov
push
insl
mov
push
negl
out
test
ds
lret
push
mov
jb
insb
push
mov
je
dec
push
divb
pop
and
ds
testb
dec
daa
push
mov
hlt
pop
roll
cmpsb
movsl
mov
xchg
popf
push
add
push
mov
pop
testb
push
cmp
jb
outsb
or
gs
push
inc
push
inc
cmpb
ds
push
ss
dec
imulb
or
push
push
out
push
add
and
or
addr16
loop
je
add
psubsw
aaa
shl
rorl
inc
cmp
add
add
adc
cli
jmp
data16
inc
cmc
shlb
inc
and
popf
std
scas
aam
jne
inc
jb
and
add
cld
jg
pop
xlat
std
decl
cli
push
fs
das
aad
leave
adc
add
pop
enter
dec
push
push
dec
dec
jmp
fs
mov
std
mov
loopne
xor
sbb
out
daa
sar
jg
pusha
pop
inc
push
mov
or
hlt
hlt
push
call
cmp
fdivr
ds
cmpsb
out
pop
adc
fdivrp
push
inc
out
inc
push
lahf
pop
add
sub
mov
stos
incb
idivb
icebp
lahf
inc
add
out
out
sti
fisubrs
jmp
cmpsl
cmp
cmp
fidivrl
sti
and
dec
scas
lods
cli
out
outsl
imul
cmp
fisubl
xchg
add
inc
sub
inc
cmp
sub
cld
mov
cmp
mov
stc
cmp
test
pop
cmp
lds
xchg
add
pop
in
push
mov
jle
call
mov
test
ds
and
inc
cmp
sbb
rolb
rolb
arpl
pop
out
ds
out
mov
jp
pop
push
shr
gs
or
add
shr
sahf
nop
in
cmp
sub
push
into
adc
add
roll
fdivrp
call
xchg
mov
pop
rcrl
jge
into
mov
and
xor
mov
scas
mov
std
je
xchg
in
sti
xchg
paddd
mov
gs
add
shl
lret
mov
call
data16
bound
inc
dec
xor
gs
add
inc
jmp
mov
fnstsw
jnp
push
adc
movsl
jae
mov
add
add
out
es
mov
add
in
arpl
and
pop
inc
std
sti
cli
inc
xorb
je
pop
fdivs
shrb
lods
cmp
jo
ljmp
leave
arpl
test
jmp
push
std
jne
enter
fldl
dec
loope
pushl
enter
jne
fnsave
clc
xor
add
dec
mov
cmp
aas
sti
push
jg
xlat
stc
push
push
cmp
addr16
hlt
push
add
push
movsl
scas
add
add
int3
outsb
jne
xor
js
add
pop
xorb
out
pop
push
and
incb
and
add
cmp
gs
sbbl
fisubs
ret
push
fisubrl
add
pop
add
inc
fcomp
stc
pop
fisubl
nop
cltd
add
lock
add
pop
add
or
gs
mov
shr
pop
jg
adc
clc
and
add
push
xlat
and
les
mov
add
call
fisubs
cmp
pop
jg
popa
pop
ret
int3
hlt
js
adc
lods
push
arpl
fs
jne
cli
call
je
lods
call
pushl
call
das
cmp
in
mov
add
lods
mov
call
add
jae
add
add
jmp
push
add
insb
pop
arpl
push
add
mov
add
jl
and
idivb
aas
bound
push
mulb
fstpt
sub
mov
inc
jne
ljmp
out
es
bound
mov
int3
div
adc
ret
ret
push
addr16
andl
sub
mov
or
ret
and
clc
cld
pushl
push
rcll
gs
add
inc
pop
and
hlt
nop
std
ljmp
mov
dec
std
jne
lds
mov
lds
pop
fldl
call
cltd
aaa
repnz
std
decl
rolb
call
std
jne
stos
out
push
fdivrp
jmp
cld
incb
inc
hlt
out
clc
sbb
jae
push
sbb
cld
jne
aam
or
cld
or
cmp
mov
cmpsb
mov
popa
inc
adc
add
or
andb
clc
jmp
inc
outsb
mov
call
shrl
mov
les
xor
pop
popa
imul
imul
add
inc
popa
je
xor
push
xchg
lcall
insl
add
lea
fnstcw
pop
jno
stos
popa
fs
popa
je
subl
inc
lds
call
enter
repz
call
bound
inc
mov
jmp
aad
in
ss
fdivs
push
loope
ljmp
add
cmp
and
popa
enter
or
mov
jo
out
cmp
cmp
sub
adc
mov
adc
pop
sbb
pop
aam
testl
bound
add
or
out
jne
pop
hlt
xor
and
or
mov
jmp
sbb
pop
inc
mov
inc
je
add
push
or
data16
mov
mov
test
pop
je
shl
cmp
je
imul
push
call
repnz
roll
rorb
je
mov
or
cmp
imul
push
std
jbe
dec
inc
or
cmp
lcall
dec
cltd
add
rolb
add
fnstsw
add
add
or
xchg
mov
mov
flds
mov
std
jne
loopne
or
es
incl
shlb
jae
push
ss
call
pop
shll
ss
fisttpll
call
leave
and
add
in
add
cmp
xor
ret
fucomi
rcrb
ljmp
pop
rorb
int3
lock
jmp
ljmp
mov
pusha
popl
imul
lret
add
mov
add
cmp
jmp
das
pop
decb
lods
popf
popa
push
test
jmp
es
jecxz
add
jle
push
pop
data16
les
mov
dec
jo
incb
xor
imul
pop
pop
je
inc
sbb
push
inc
mov
push
adc
pop
xor
adc
add
test
pop
jge
add
or
add
xchg
xchg
add
xorb
faddl
inc
aaa
aam
inc
aaa
fdiv
adc
pop
enter
repz
call
pop
xchg
cmp
pop
pop
add
aas
mov
mov
and
out
and
push
push
jp
jp
popa
xor
add
add
push
jno
rol
mov
call
shl
push
pop
mov
sub
add
cmp
call
jb
xchg
pusha
push
mov
cmp
add
push
imul
cmp
je
add
push
or
jno
mov
popf
sub
cmp
cmp
xchg
xchg
cmp
incl
cmp
call
ljmp
movsb
out
or
cltd
pop
je
xchg
push
push
jmp
push
pushl
in
or
decb
rolb
or
in
faddl
add
std
imul
sub
add
add
add
into
add
hlt
loopne
imul
aad
add
ds
inc
mov
sti
test
call
test
shlb
inc
call
mov
inc
mov
scas
pop
std
incl
push
out
addl
add
pop
inc
jae
scas
mov
addr16
fisubrl
add
cmpsl
iret
adc
in
out
repz
insb
ja
int3
adc
add
cmp
imul
rcrb
inc
xlat
imul
loop
and
imul
mov
enter
or
incl
int
add
addr16
mov
cmp
pop
and
nop
add
dec
push
test
fsubrl
jp
mov
addr16
test
ret
push
push
pop
add
stc
and
fiaddl
notb
or
js
jmp
mov
mul
add
test
pop
push
in
sub
clc
push
inc
aaa
jl
add
add
rorb
test
in
jle
out
in
push
and
add
inc
fwait
in
push
jmp
add
addl
fmuls
add
push
je
mov
mov
mov
test
jno
sti
mov
xor
mov
push
lea
dec
sub
cmp
fisubrs
std
cld
push
in
cmp
or
jle
inc
pop
jbe
out
cmp
add
push
out
sub
pop
out
cmp
add
mov
jmp
stc
xchg
std
push
add
add
cmp
inc
inc
jnp
lea
ljmp
inc
add
inc
adc
and
je
mov
cld
pushl
and
sub
xchg
mov
adc
mov
rolb
loope
add
arpl
call
and
call
mov
cld
push
nop
std
mov
mov
clc
mov
pusha
add
paddusb
mov
lea
push
add
jns
jle
add
addr16
mov
push
add
cmp
add
inc
push
dec
push
aam
std
push
xchg
push
adc
inc
inc
stos
aas
std
out
popf
or
fstpt
fisubs
push
int
jg
cmp
decl
add
cmp
add
push
inc
jae
loopne
test
mov
add
push
shl
jle
inc
sub
or
add
inc
push
in
push
sbb
add
xchg
sbb
cmp
inc
inc
push
std
add
add
mov
mov
pop
cmp
jmp
add
push
icebp
mov
push
call
inc
hlt
push
lods
xchg
data16
push
sbb
mov
sti
pop
ficomps
loopne
sub
add
mov
mov
mov
nop
jle
dec
push
xchg
jae
add
imul
xor
pop
pop
jp
cmp
mov
mov
andb
lods
addr16
adc
add
ret
idivb
push
pop
xor
insl
push
sar
pop
cld
sub
push
call
xchg
push
jmp
cmp
sbb
add
cmpsb
mov
call
gs
mov
ret
mov
ret
imul
add
mov
and
add
sub
add
call
jb
lds
jnp
pusha
inc
pop
mov
das
callw
std
lcall
in
inc
ljmp
mov
addr16
cwtl
add
mov
add
jne
jl
add
add
dec
adc
mov
addl
je
cmp
cmpl
jae
pop
bound
inc
cld
cld
cmp
jl
mov
std
call
mov
pop
push
je
sbb
mov
add
add
pop
inc
push
mov
jg
gs
addr16
add
add
es
les
add
push
ret
incl
adc
sub
icebp
scas
enter
pop
subl
jmp
sarl
dec
in
or
sub
dec
xor
xor
sub
loopne
add
xor
sub
xor
add
leave
xchg
call
stos
dec
out
in
fnstsw
push
mov
xlat
cmp
xor
lret
jmp
sar
add
in
pop
cmp
lock
stos
add
pop
cmp
jmp
mov
aam
fisttpl
add
add
pop
enter
loop
push
cmpsb
enter
add
jge
push
xchg
call
dec
push
add
shll
gs
scas
jae
or
notl
adc
pop
negl
faddl
addr16
adc
dec
mov
and
cmp
lea
add
cmp
in
jmp
iret
mov
cmp
lods
out
call
cmp
add
imul
pop
add
out
add
add
scas
negb
call
test
jmp
xor
xlat
add
mov
cld
enter
mov
cmpl
ss
ljmp
lea
pop
inc
rolb
nop
add
jmp
mov
aam
add
add
aaa
cli
lcall
sub
dec
mov
clc
aaa
mov
cmp
and
add
add
mov
incb
and
addb
mov
hlt
divl
cli
call
cmpsl
ss
call
xchg
hlt
mov
cmp
aaa
ds
mov
push
sub
mov
push
cmpsb
lar
cmp
pop
sbbb
mov
or
aas
cmp
push
and
lcall
out
dec
movsl
inc
sar
ljmp
ss
pop
cwtl
add
mov
call
outsl
or
sub
push
push
sbb
mov
xchg
sbb
mov
pop
mov
add
into
in
sbb
or
lds
sub
mov
cld
or
pop
xchg
dec
pop
pop
inc
dec
push
dec
xor
repnz
std
inc
dec
ja
sub
inc
inc
jmp
lock
jmp
add
mov
sub
add
jge
dec
jbe
mov
jo
call
add
pop
stc
pop
push
fnstsw
sub
inc
xor
dec
jmp
add
xchg
stos
adc
sub
dec
enter
jmp
push
pop
aas
jmp
pop
fcos
push
mov
add
mov
jmp
cmp
repz
jp
idivb
stc
pop
aas
jmp
cmp
pop
testl
adc
mov
dec
jne
jle
movsl
ss
add
add
cld
mov
inc
jmp
dec
aas
incb
loopne
jg
pushf
mov
sti
lcall
inc
mull
inc
mov
sub
pop
mov
div
adc
add
jmp
mov
out
mov
std
push
cmpsb
sub
pusha
and
das
and
xchg
and
das
and
add
xchg
aas
add
and
loope
and
mov
pop
popa
add
and
cmp
and
lcall
stos
inc
cmp
add
adc
stos
inc
cmp
add
sbb
stos
inc
cmp
adc
add
push
out
stos
inc
cmp
and
lcall
inc
cmp
add
add
inc
cmp
and
lcall
stos
inc
cmp
es
xchg
add
adc
stos
inc
cmp
and
lcall
inc
cmp
xchg
sbbl
out
lods
cmpsl
daa
add
and
and
and
and
and
jns
sahf
and
and
add
incl
add
and
and
cmpsl
add
call
insl
cmpsl
cmpsl
add
sbb
cmpsl
cmpsl
add
adc
cmpsl
cmpsl
add
or
test
adc
push
push
test
inc
and
loop
fstpl
push
sub
sar
add
add
cmp
sar
sbb
pop
sub
sar
sbb
pop
sub
sar
pop
and
xor
sar
pop
sbb
cmp
add
sbb
pop
test
inc
and
xchg
sar
sbb
pop
test
inc
and
popf
sar
sbb
pop
test
inc
and
in
pushl
and
roll
jmp
daa
out
pop
popa
cld
and
out
pop
pop
and
and
cmpsl
out
pop
adc
and
xchg
out
pop
adc
and
out
pop
popa
cld
and
daa
out
pop
popa
cld
and
out
mov
add
and
mul
xchg
pop
xchg
add
and
add
out
pop
mov
lcall
cmp
dec
mov
push
add
xor
aam
mov
push
add
sti
pop
add
mov
add
cmp
bnd
iret
add
cmp
add
fimull
inc
dec
mov
cmp
ret
xor
sti
sti
mov
push
add
jnp
add
add
mov
cmp
ret
add
jge
jg
jmp
inc
add
dec
add
cmp
pop
xchg
add
add
add
ds
pushl
inc
mov
out
call
add
add
ret
loopne
sub
jmp
or
lock
out
out
inc
call
add
add
enter
add
cmp
stos
add
add
ret
mov
jmp
in
add
add
ret
loopne
xor
jmp
adc
jmp
push
dec
jns
inc
cmp
push
inc
cld
call
sarl
in
cmp
mov
add
jmp
cs
icebp
cmp
add
repz
cmp
lds
inc
mov
adc
add
out
testb
jb
ret
xor
stos
fiadds
push
ja
sbb
mov
jns
icebp
mov
sub
sbb
cmp
or
cmp
mov
call
cmp
rorb
cli
jge
cmc
jbe
decb
in
add
dec
add
push
les
fs
aas
pop
jl
add
incl
add
push
decl
lcall
decl
rcrb
add
inc
xchg
xor
pop
xchg
mov
and
lea
cmp
mov
mov
lea
leave
std
add
push
add
nop
xor
mov
dec
add
mov
aas
or
add
decb
ljmp
adcb
pop
add
jnp
into
or
xor
fisttpl
jl
push
push
xor
cmp
int
ret
add
push
jns
inc
pop
add
jns
mov
xor
inc
dec
adcl
push
push
daa
std
cli
push
jp
dec
movsl
cmpsl
add
in
mov
loopne
pop
add
shl
cmp
subb
add
ret
add
add
dec
js
aam
shl
xor
repz
sbb
cmp
mov
incl
outsl
andb
call
out
add
jp
out
in
add
jne
jmp
add
xor
mov
gs
call
xchg
adc
outsl
sti
adcl
add
mov
fisttpll
pop
sbb
lea
jl
mov
test
add
add
std
inc
int3
out
clc
jp
lahf
rorb
test
xor
jmp
incb
push
sbb
call
pop
movsl
shl
jne
add
add
test
add
jmp
aaa
test
testb
out
add
cmp
mov
adc
out
sub
add
movl
push
test
cmc
push
sbb
cmp
je
mov
paddsw
add
jmp
add
add
mov
add
add
add
mov
fimull
mov
test
dec
add
pop
add
shll
lret
std
add
push
add
and
mov
test
add
jbe
add
adc
mov
add
loopne
push
add
add
jne
mov
dec
sbb
add
xor
mov
xor
and
add
cmp
inc
xchg
sub
jne
mov
add
cmp
lods
sub
cmpsb
adc
sub
add
pop
add
daa
jmp
mov
imul
mov
test
xor
imul
out
mov
rorl
jle
out
push
int
shll
inc
loop
inc
lock
sbb
add
mov
or
jb
ds
add
add
add
xchg
cmp
sbb
add
mov
add
lcall
xor
mov
xor
pop
in
cmp
outsl
jno
add
add
test
pop
cmp
bound
add
por
inc
pusha
adc
mov
pop
cmp
cmp
ret
pop
cmp
add
adc
jmp
pop
add
jmp
cmp
mov
add
jmp
dec
aas
xchg
cmp
add
ret
in
add
jmp
add
jo
or
jmp
add
cmp
sbb
add
pushf
inc
xchg
jo
adc
cmp
mov
add
jmp
cmp
mov
add
jmp
ds
add
js
mov
add
rorb
aas
sub
mov
sbb
iret
and
pushl
test
add
decl
add
nop
mov
out
add
pusha
xchg
ss
pop
ret
mov
push
push
fwait
jnp
adc
pushl
jge
add
adc
xchg
add
add
and
stc
and
roll
test
xor
jg
sub
jae
cmpsb
sub
mov
cmp
sbb
call
ljmp
cmp
sub
jae
cmp
ret
xlat
push
xor
pop
fcmovnb
pop
inc
pop
fistpl
xor
push
push
and
mov
cmp
jbe
pop
pop
pop
aad
mov
cmpl
and
add
mov
add
mov
jge
call
add
icebp
sarl
test
cmp
dec
sarb
cmp
mov
adc
add
xchg
add
jo
mov
pusha
popf
pop
add
add
fcmovnb
inc
add
call
add
mov
push
mov
pop
cmp
pusha
test
add
add
push
pop
xor
paddsw
cmp
add
mov
das
cmp
cmp
in
add
mov
add
jmp
into
cmp
jo
or
cmp
mov
push
add
lahf
gs
stc
xchg
test
xchg
popa
sbb
add
outsl
inc
add
jmp
cmp
adcl
xchg
or
adc
bound
pop
cwtl
movl
mov
sub
std
jmp
outsb
add
fcoml
orl
insl
add
sbb
push
mov
push
push
pop
leave
out
ljmp
ret
movl
and
jle
nop
add
adc
sbb
add
add
cmc
std
fcmovne
out
std
mov
jmp
stc
pop
cli
mov
mov
lret
add
add
mov
sahf
adc
adc
add
ffree
inc
sub
sbb
and
add
sub
add
imul
mov
mov
sub
mov
push
std
jnp
adc
fildll
call
pop
incl
sub
inc
shl
add
sub
add
sub
adc
scas
jno
jmp
inc
add
ss
add
mov
jnp
add
add
jle
xor
cld
call
add
add
mov
mov
shlb
ficomps
xlat
adc
add
xor
int3
sbb
xor
les
mov
int3
sbb
mov
cmp
mov
add
stos
fisttps
xchg
outsb
push
cld
call
add
mov
mov
sbb
add
jl
mov
jo
or
mov
mov
add
call
cltd
or
jb
sbb
mov
jo
shl
mov
xchg
pushl
cmp
or
cmp
rcr
jmp
sub
adc
jmp
add
add
das
mov
in
and
mov
mov
movl
or
decl
arpl
or
loopne
mov
mov
dec
xchg
addr16
enter
mov
mov
jmp
add
std
ljmp
add
pusha
cli
mov
outsl
movsl
inc
add
inc
xchg
add
sahf
push
mov
add
pop
xor
pop
add
dec
iret
and
xchg
xor
xor
mov
cmp
add
ret
add
sub
add
cmp
cmp
dec
and
mov
das
fs
xor
push
xor
and
add
sub
rorl
mov
jns
or
pop
add
cmp
imulb
in
insl
add
sti
popa
clc
mov
outsb
out
cmp
jmp
rcrb
or
add
add
xor
call
jge
cld
call
jge
cld
call
add
cmp
pop
adc
addr16
cltd
out
mov
cli
popa
imul
sub
bound
sbb
int3
out
cld
pop
iret
pop
in
cmp
jl
add
add
shll
jmp
in
xchg
sub
dec
or
add
add
jb
fisttpll
jae
cmp
push
or
add
push
xor
fiadds
test
ljmp
jmp
sbb
push
rcr
mov
xchg
cli
inc
sub
push
jno
lds
aad
movsl
and
sahf
push
push
gs
xor
jmp
sarb
out
push
xor
add
or
adc
push
and
push
dec
mov
fistl
out
std
sub
mov
and
stc
in
mov
fimuls
cli
and
add
adc
adc
mov
and
cmp
mov
pop
add
insl
cmp
pop
ret
ljmp
mov
scas
inc
and
push
dec
mov
repnz
add
mov
mov
mov
scas
enter
add
cmp
cmp
jb
mov
and
and
into
and
mov
pop
add
mov
dec
or
cmp
sub
cmp
add
sbb
xor
mov
mov
jge
pop
and
test
dec
add
pushf
xor
mov
push
sti
mov
std
adc
gs
adc
unpcklps
cmp
ljmp
mov
call
cli
sub
test
stos
or
jnp
call
inc
xorl
in
subb
pop
jmp
xchg
mov
jge
in
xchg
or
in
add
mov
jmp
pop
cmp
inc
and
push
push
cmc
add
in
mov
push
test
std
xchg
push
adc
add
inc
sbb
jbe
add
out
icebp
ljmp
dec
mov
shl
inc
adcb
cmp
cmp
push
pusha
inc
jnp
in
mov
add
fs
push
pusha
sub
mov
jmp
aas
add
jmp
ds
in
add
mov
add
je
jp
fnstsw
add
bound
out
andl
cmp
mov
add
jmp
movsb
add
mov
add
nop
stos
cmp
add
add
mov
dec
add
nop
cmpsb
pop
mov
sbb
pop
add
add
push
mov
mov
test
mov
add
lea
jmp
add
shlb
mov
sub
dec
add
loopne
dec
and
jmp
push
add
push
fsubs
or
jnp
pop
adc
add
mov
pop
add
dec
into
and
cmp
mov
cmp
mov
scas
and
lods
jl
cmp
imul
xor
in
sub
sub
ret
add
sahf
test
xor
cmp
add
jge
fidivl
sub
sarb
add
ljmp
jmp
call
or
popa
ds
sbb
xor
inc
shll
jns
jbe
sbb
xor
jle
call
jmp
add
add
lods
out
orb
xchg
call
lret
add
lods
out
subb
in
xchg
call
int3
ret
int3
xlat
ret
xchg
hlt
pop
cmp
ret
jae
cmp
stos
shll
mov
stc
out
jbe
add
cmc
jl
call
xchg
mov
gs
int
js
lds
mov
and
jle
sub
mov
aam
aaa
pop
xor
jb
aas
out
cmp
ljmp
jbe
push
and
mov
push
mov
cmpl
inc
xorb
imul
pop
pop
and
sarl
inc
and
sbb
jge
mov
add
mov
cmp
push
pop
pop
mov
push
xor
std
decl
push
and
mov
push
push
jmp
out
out
aam
cmp
push
push
pushf
dec
adc
push
cld
incl
inc
inc
jge
cmpsb
mov
add
push
dec
dec
mov
add
repz
fisttpl
fdivrs
mov
rorb
add
es
adc
pop
jns
xor
sbb
inc
sub
loope
and
mov
cmc
hlt
cmp
add
xor
stc
test
add
mov
ret
cmp
adcb
sbb
cmpl
cmpb
cmpb
mov
cld
out
mov
sbb
jne
repz
fisttpl
push
ret
jnp
add
sub
jp
fistps
int
jle
pop
push
xor
roll
orb
cmp
cmp
sub
sbb
sbb
das
mov
mov
jno
sahf
cmp
fldl
popa
jno
sbb
sbb
mov
add
ljmp
add
add
add
jge
mov
jmp
test
jnp
fbld
mov
das
daa
es
mov
decl
sbb
cmp
jp
ljmp
add
addr16
cmp
shr
cmp
mov
fxch
mov
cld
call
mov
add
push
mov
jp
xchg
adc
and
cmc
shlb
aad
enter
inc
push
jb
mov
int3
xor
hlt
outsb
and
push
jb
js
add
popa
mov
push
jp
loop
cld
rorl
dec
out
and
std
push
ret
mov
sub
push
aad
ljmp
mov
sub
jecxz
mov
andb
mov
out
inc
xor
add
cmp
jl
xlat
aas
and
add
add
mov
and
xor
into
mov
test
mov
es
xor
std
lcall
mov
mov
xchg
cmpsl
and
cmc
test
add
mov
ficoms
ljmp
mov
mov
add
cmp
ss
lods
decl
and
lods
add
rcl
mov
push
sub
out
mov
out
ret
pop
push
std
sbb
scas
cmp
jno
sahf
into
and
rorb
jle
jns
ret
aaa
push
jmp
cs
pop
ds
mov
xor
jle
sahf
mov
or
jb
sbb
outsl
mov
pop
call
popa
mov
outsb
ja
sbb
xor
in
outsl
shll
mov
adc
and
pop
out
call
ljmp
nop
jp
fdivr
js
fdivr
int3
or
popa
ss
sub
sbb
js
loopne
sbb
mov
mov
xor
shll
sahf
sbb
test
sbb
lcall
fisubrl
and
push
fidivrs
sub
mov
and
adc
cmp
jne
mov
add
xchg
xor
jmp
add
and
jge
cmpb
and
cmp
cli
xor
rorb
mov
jbe
push
fisttpll
jb
aad
cmp
adc
mov
sub
dec
add
adc
xor
adc
addr16
push
subb
call
cmp
adc
decl
and
push
push
fwait
jmp
push
and
std
mov
int3
mov
add
fdivrl
ret
push
inc
mov
cmp
pop
repz
mov
nop
idiv
push
testb
mov
dec
mov
xchg
sub
add
mov
sub
add
push
mov
xchg
pop
add
pop
add
mov
push
add
lock
and
and
xchg
mov
and
mov
test
add
dec
and
rorb
adc
aaa
lea
inc
lea
mov
out
shr
aaa
rcr
paddd
test
lea
ljmp
xor
popf
mov
jmp
xchg
jmp
filds
aas
test
mov
mov
push
arpl
pop
inc
fldt
mov
ret
or
ret
sub
xor
arpl
pop
fcoml
out
sub
lahf
sbb
lcall
mov
push
mull
mov
mov
and
xchg
aad
arpl
mov
hlt
inc
hlt
ret
lret
add
ret
mov
or
popa
xchg
pop
xchg
xchg
mov
push
push
cmp
jb
loop
push
mov
mov
sub
xlat
mov
adc
add
or
jmp
cmp
add
sahf
add
es
xchg
sbb
cmp
orl
xchg
or
mov
imul
push
ljmp
aas
add
jmp
pusha
scas
push
bound
and
std
inc
and
pushl
push
pusha
mov
xor
inc
mov
push
cmp
loopne
test
add
or
jbe
stos
dec
and
out
shrl
push
dec
mov
jmp
mov
push
push
fwait
scas
mov
js
icebp
incl
pop
cmp
jg
mov
or
and
add
jne
cmpl
sbb
add
add
jl
cmp
add
mov
add
push
jmp
push
push
xchg
adc
pop
push
stos
dec
decb
stos
inc
aaa
jnp
add
jp
inc
dec
in
dec
out
test
hlt
test
sub
add
push
out
mov
sbb
out
mov
inc
pop
out
les
add
cmp
cmp
out
sub
mov
push
mov
pop
repnz
into
sbb
scas
sub
or
fisubrs
add
addb
jmp
cwtl
xor
jmp
add
rcrb
add
add
cmp
add
add
inc
add
add
lock
jp
pop
cmp
hlt
cld
ret
cmp
test
jmp
cmp
jmp
add
xchg
cmp
jmp
sbb
sti
in
add
xchg
out
mov
data16
cmp
add
cli
xchg
jo
or
cmp
add
mov
add
cmpsl
cmp
add
jmp
cmp
add
call
sarl
mov
mov
pmulhw
add
mov
mov
add
cmp
dec
add
sub
test
sub
rol
add
add
ret
fisttpll
xchg
pop
pop
pop
push
enter
std
mov
mov
inc
and
lds
or
mov
sub
or
add
shrb
pusha
std
ret
and
push
std
mov
dec
mov
dec
mov
dec
dec
mov
push
push
jne
and
add
repz
ret
std
inc
push
leave
lret
leave
lret
leave
lret
pop
mov
mov
es
push
outsb
mov
mov
mov
inc
cmp
or
mov
xchg
or
hlt
out
test
outsl
rolb
inc
xchg
add
pop
fstpt
aaa
xor
mov
or
iret
add
mov
xor
mov
sbb
push
sub
decb
sub
fidivl
popl
lea
add
mov
repz
or
add
jo
xchg
hlt
je
repz
call
test
lds
add
int3
lock
sti
dec
mov
xchg
or
sub
jo
xchg
sbb
sub
in
mov
xchg
add
test
cld
push
sti
test
call
sbb
pop
in
push
mov
xchg
int3
add
sti
pop
sti
insl
sar
inc
jl
fsts
stos
mov
roll
xor
je
push
and
out
add
add
mov
mov
pop
jmp
popa
xchg
call
mov
pop
insb
into
xchg
mov
pusha
hlt
cmpl
jmp
insb
jg
test
sbb
or
int
xchg
es
inc
mov
pusha
dec
add
mov
mov
in
push
xchg
add
jg
shl
add
adc
or
and
push
or
adcl
xor
out
add
xlat
xchg
sub
add
xchg
or
sbb
adc
or
orb
pusha
add
pop
push
xchg
sbb
push
and
jo
inc
push
test
mov
rolb
add
add
imul
adc
mov
add
mov
mov
mov
and
ljmp
inc
add
dec
mov
imul
pop
xor
ja
push
cmp
add
sbb
dec
add
cmp
mov
sub
daa
add
inc
mov
mov
cli
or
add
push
mov
push
mov
stc
or
repz
or
xor
sub
inc
mov
cmp
pop
inc
inc
add
xor
outsl
inc
add
clc
and
mov
mov
les
dec
out
inc
f2xm1
loope
rolb
inc
push
add
or
inc
add
add
inc
pop
or
lock
xchg
add
xchg
inc
xchg
inc
sahf
clc
jo
clc
xchg
inc
pop
lock
add
xchg
inc
pop
or
clc
mov
inc
cmp
ljmp
xchg
ljmp
mov
jne
pop
jno
rorl
ret
inc
pop
jmp
push
pop
push
lahf
lahf
test
stos
pop
jb
test
movl
ljmp
add
out
lea
mov
cmc
sbb
mov
push
add
scas
ret
lret
call
cli
sbb
clc
dec
mov
test
add
xchg
mov
orb
cmp
fsubrs
mov
add
test
add
das
fmuls
xor
cmc
mov
cmc
jmp
in
imul
das
into
pop
out
jg
mov
das
fsts
adc
push
repz
push
add
repz
sbb
pop
sti
sbb
add
and
fildl
lock
cmp
in
push
loope
cli
add
daa
add
mov
inc
add
nop
xor
and
add
lret
js
mov
clc
shr
push
stos
add
cmp
dec
out
insb
push
mov
mov
adc
sbb
ret
out
gs
mov
clc
jmp
add
cmp
dec
out
or
mov
and
mov
std
mov
pushl
dec
test
sti
cmp
add
scas
push
roll
fcoms
xor
pop
pop
xor
in
dec
jns
xchg
popa
fsub
adc
inc
pop
pop
push
add
push
cmp
stc
pop
out
fisttps
add
sti
pop
adc
shr
out
inc
add
add
add
pop
cmpsb
mov
xchg
cld
jl
subl
mov
sbb
shrl
sub
sbb
xchg
mov
add
xchg
mov
or
add
loop
pop
push
sub
std
orb
push
out
sbb
push
xchg
push
or
call
clc
mov
dec
push
mov
test
xor
push
pusha
add
in
pusha
jne
lock
rol
jo
and
fs
test
jo
inc
sub
inc
or
and
rcl
iret
jo
jg
cmp
js
add
mov
sarl
enter
jecxz
xor
xor
xchg
xchg
jecxz
xor
adc
shrb
out
incl
loope
xchg
popa
in
xor
mov
clc
xor
cltd
ret
jg
out
add
psllw
mov
ret
loope
xchg
arpl
add
inc
push
mov
push
pop
pop
pop
loopne
ret
push
push
sub
or
mov
adcb
xchg
iret
montmul
cmpsb
ret
cmp
mov
push
mov
or
paddd
inc
mov
sti
pop
pop
pushl
out
pusha
paddd
out
inc
cmp
cli
xchg
push
mov
mov
mov
decb
fs
ds
dec
js
jge
icebp
data16
in
packuswb
popa
sar
pop
or
out
push
inc
jle
dec
js
jge
mov
sbb
lods
or
or
cwtl
push
xchg
incl
add
mov
sub
jns
cld
ret
xchg
in
cmp
sbb
push
jp
adc
subb
aas
or
xchg
add
xorb
sbb
or
setbe
stos
adc
outsl
adc
or
mov
js
adc
lds
adc
adc
call
sbb
and
les
jl
adc
xchg
mov
jno
mov
mov
hlt
sbb
mov
jmp
and
mov
mov
or
pop
mov
sub
cmpsb
aas
jle
icebp
mov
mov
rclb
lods
pop
pop
stos
and
push
pusha
push
sub
cmp
mov
mov
add
or
mov
add
rorb
cmp
or
mov
mov
jmp
mov
repz
xchg
cmp
lock
das
sarb
mov
jmp
cld
std
test
std
fisttpl
or
jg
mov
sti
or
mov
les
add
cmp
pop
add
into
push
out
data16
std
cmpl
cmpb
jb
andl
jmp
add
sahf
inc
cmpl
cmp
add
pop
lods
pop
shl
shll
mov
xchg
cwtl
pop
mov
pop
add
leave
js
xor
cmp
cmp
add
rcll
lcall
pop
or
or
orl
rolb
insb
bnd
pop
test
mov
add
pop
add
insl
mov
or
push
call
test
mov
or
out
test
rorl
mov
pop
or
into
push
dec
cmp
mov
or
push
outsl
iret
add
cmp
add
mov
jecxz
push
add
mov
or
aad
popf
xchg
or
push
xchg
pushl
push
subb
or
sbb
call
jge
cmpsb
stos
cld
es
mov
mov
or
sub
outsl
inc
lods
mov
mov
ss
repz
aam
or
jge
mov
sub
mov
insl
sub
xchg
sub
clc
push
inc
divb
jns
push
incb
xor
clc
out
divb
xor
mov
mov
sbb
push
or
scas
mov
jg
cmp
mov
popa
sub
push
add
sub
add
jnp
jo
cmpb
dec
mov
pop
add
pop
push
imul
mov
out
pop
cli
jg
push
add
add
dec
inc
mov
jge
add
ret
add
adc
mov
lods
cmp
mov
incl
dec
and
jno
sbb
jecxz
jl
push
push
add
pop
push
mov
dec
push
call
lea
push
lods
cmp
push
enter
lea
xor
adc
jmp
data16
vsubsd
sar
pop
or
cmp
fisubrs
xchg
dec
js
jne
leave
sbb
fimuls
addr16
push
sar
push
sbb
js
cmpsb
xchg
cmpsb
sti
mov
adc
mov
aam
mov
sub
popa
mov
jne
popa
out
cmp
pop
addr16
loop
mov
sub
ds
adc
pop
jne
and
sbb
and
mov
inc
or
adc
jne
outsl
mov
push
nop
pushf
ret
stos
or
aas
or
add
xchg
cmpb
sbb
roll
sbb
ret
mov
or
pop
cwtl
sbb
mov
fdivs
andb
out
pop
push
or
add
stos
rcll
inc
add
cmp
jmp
test
lods
jge
push
pop
add
sbb
cltd
call
sub
sbb
push
ss
arpl
js
sti
clc
jle
shll
add
add
push
scas
mov
sub
jae
add
sbb
mov
testb
insb
scas
add
jnp
aaa
add
cmp
inc
loop
jnp
aas
add
jg
shl
popa
cmp
roll
add
add
aam
out
xor
std
jmp
cli
jg
je
xchg
mov
je
mov
push
mov
sti
call
pop
pop
pop
pop
jmp
ret
push
mov
test
sbb
mov
push
das
leave
sub
js
pushf
or
stc
mov
push
xor
stos
cli
xchg
das
rolb
add
xor
add
incb
mov
jp
inc
rorb
add
inc
cmp
xchg
jp
jl
idiv
push
sbb
add
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jmp
add
add
add
add
add
add
add
add
stc
xor
xchg
mov
or
into
rorl
enter
je
adc
xchg
dec
imul
fisttps
in
dec
jbe
movups
incl
mov
rclb
daa
leave
gs
aaa
shrl
xor
pop
and
pop
dec
insl
add
xchg
pop
pop
inc
cli
xchg
outsb
sub
jl
insb
or
jno
mov
push
arpl
or
jecxz
insl
jb
sbb
sub
mov
insl
xchg
xchg
es
dec
jne
jbe
bound
outsb
jno
adc
out
bound
dec
ljmp
jmp
pusha
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
fsts
movsl
bound
mov
adc
call
add
add
add
add
add
add
nop
add
add
add
pusha
add
add
jmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
fdivs
cmp
je
jne
jne
add
jns
jo
mov
insl
jne
jmp
ja
sub
add
lret
jmp
add
xor
cli
outsb
add
lcall
arpl
cmp
xchg
insb
push
pop
add
pop
jno
ficomps
sbb
insl
add
add
gs
cmp
sub
add
fsubrs
das
fdivrs
arpl
pop
ja
cmpsl
js
xor
cs
mov
fs
sub
add
cmp
add
insb
jb
adc
jae
push
push
jne
outsl
je
outsb
add
jno
jne
imul
inc
imul
das
imul
add
shlb
addr16
push
push
insl
jno
sar
sub
ret
xor
xor
jno
popa
in
addr16
sar
gs
outsl
cmp
insl
arpl
jmp
add
xchg
jmp
jb
jmp
dec
add
rolb
pop
fdivrl
popa
loope
gs
call
jb
pushf
xor
sahf
push
insb
jae
out
jae
js
mov
pop
insb
xchg
divb
popf
out
pop
mov
pop
gs
add
enter
aad
add
pop
xor
or
add
add
insb
pop
out
insl
dec
lret
bound
shll
add
outsb
sbb
bound
push
mov
je
jno
push
jge
jmp
insl
out
and
push
xor
lret
addr16
decl
bound
cmp
push
lods
push
out
cmpsl
popa
add
mov
or
outsb
or
add
arpl
add
cmp
sbb
push
add
dec
push
gs
outsb
out
push
push
outsl
pop
add
bound
add
and
outsl
enter
mov
sub
test
je
adcb
jo
or
mov
pop
pop
mov
pushl
sbb
arpl
loopne
je
fsubrl
jmp
add
insl
add
push
pop
xchg
gs
xor
pop
popa
or
imul
insl
cmp
push
daa
add
or
das
sbb
addr16
outsb
testl
imul
outsb
add
pop
outsl
insl
mov
insl
pop
outsb
mov
add
je
add
jb
gs
push
insb
insb
add
pop
popa
add
popa
pop
jb
outsl
add
and
popa
andl
dec
push
add
imul
imul
imul
mov
ss
xor
insl
add
add
cmp
pusha
jne
rolb
dec
lret
dec
lods
xor
sbb
mov
add
mov
adc
jno
sbb
jno
nop
cmp
loope
gs
loope
push
popa
aam
add
fcoms
aam
add
fmuls
fs
je
movsl
xor
bound
add
add
add
jb
or
out
pop
pusha
cmc
arpl
outsb
add
pusha
push
shll
add
pop
outsb
data16
cmp
outsl
push
pop
int
sbb
insb
push
pop
out
push
addr16
pop
add
jne
add
imul
loope
jnp
aam
out
shlb
pop
loop
dec
arpl
fs
arpl
jno
fisubs
insb
xchg
add
mov
pop
adc
xchg
gs
jnp
sbb
gs
outsb
xchg
add
imul
add
push
pop
push
lret
pop
pop
outsb
ret
xor
dec
popa
pop
lret
jno
sbb
pop
insb
mov
and
popa
jb
adc
outsb
mov
push
add
cmp
fcoms
fdivr
jne
fisubrl
pop
add
ljmp
xlat
pop
insl
aas
cmp
push
jmp
push
push
jb
stos
pop
imul
outsb
pop
add
xchg
bound
sub
push
arpl
cld
jae
cmp
je
ljmp
add
outsb
gs
xor
icebp
popa
pop
add
arpl
add
outsb
imul
jno
jae
outsl
pop
jae
mov
xor
lcall
arpl
pusha
outsb
jo
bnd
mov
imul
outsb
pusha
push
imul
popa
add
insl
gs
add
jo
adc
popa
inc
pop
imul
cmp
fs
jmp
imul
imul
imulb
push
les
or
jno
pop
fldcw
dec
mov
imul
shrb
jmp
jo
sbb
cltd
insb
jb
lea
bound
mov
in
call
outsl
add
jb
push
fiaddl
jbe
push
jo
cmp
popa
rolb
add
out
arpl
add
outsb
lcall
jb
dec
imul
pop
pop
bound
push
insl
out
addr16
imul
insb
pop
outsb
sarl
add
jno
pop
mov
daa
pop
out
adc
leave
bound
add
jo
outsb
xchg
arpl
jp
insl
out
insb
mov
jbe
pop
pop
cmp
popa
pop
inc
cmp
addr16
add
mov
pop
add
fs
cmp
bound
adc
outsw
je
xchg
push
jbe
imul
xor
arpl
xor
pop
add
push
fs
fbld
popa
rorl
sarl
pop
jb
punpckldq
arpl
pop
jno
and
jmp
cmp
mov
arpl
adc
add
mov
fcomps
dec
into
ljmp
sbb
das
sbb
add
pop
pop
add
dec
imul
outsb
xor
add
insb
das
push
addr16
pop
add
arpl
pusha
insb
xor
dec
imul
arpl
ds
xor
gs
pusha
pop
outsb
in
insb
add
imul
add
outsw
jbe
add
jno
imul
pop
insb
insb
mov
popa
add
dec
outsb
add
pop
xor
push
gs
jmp
xor
insb
popa
cmp
pusha
pop
cmp
cmpsl
cmp
test
addr16
fldenv
xchg
sub
cmp
inc
aam
add
enter
jmp
popa
pop
jmp
add
imul
add
iret
push
xor
or
insb
fstps
sub
outsb
adc
pop
insb
sbb
pop
addr16
jp
jno
subb
insb
push
jo
ja
arpl
fcomps
int
dec
popa
aam
push
pop
xlat
arpl
enter
test
dec
pop
lcall
add
push
cmp
pushf
pop
sbb
add
pop
fwait
sbb
gs
add
xor
sub
xor
add
loop
inc
pop
into
jne
jne
add
shll
sbb
ret
bound
push
lret
sub
xor
into
jae
pop
nop
and
xchg
data16
jo
jae
pop
jae
jmp
jae
jbe
dec
insb
dec
add
jno
push
loop
popa
inc
fisubrs
cmp
xor
push
nop
dec
je
pop
jo
cmp
push
push
and
inc
push
push
and
cmp
mov
xchg
adc
addr16
das
prefetch
add
cmp
add
ja
inc
pushf
cmp
std
jmp
cmp
push
sahf
add
in
pop
lods
add
pop
jb
add
push
addr16
imul
aas
jne
jb
outsb
int3
inc
popa
jb
dec
imul
outsb
imul
pusha
add
dec
outsb
jae
gs
insb
inc
push
add
jo
xor
popa
xor
jmp
call
inc
popa
jb
pop
insb
xor
call
addl
add
pop
aas
outsl
xchg
insb
jge
popa
jae
dec
imul
add
dec
pop
mov
lods
pop
push
faddl
cmp
cmp
add
cmp
add
cmp
bound
dec
js
or
insb
int
inc
jb
dec
js
lahf
sub
lods
inc
popa
je
cmp
cmp
add
cmp
push
insl
xchg
or
add
push
pusha
adc
mov
pop
jo
add
fadds
insb
or
push
fs
lds
push
add
pop
fs
push
pop
and
flds
add
add
sbb
add
add
sbb
add
push
add
push
add
sbb
add
sbb
fcomps
jbe
cmc
sbb
outsb
add
sbb
out
cmp
call
add
add
pop
inc
push
popa
mov
pop
insl
insl
out
cmp
or
add
inc
imul
add
add
cmp
out
dec
pop
enter
xlat
jae
pop
mov
add
add
sbb
jmp
pop
add
jmp
adc
jmp
imul
popa
jno
in
insl
ja
cmp
add
add
jmp
mov
push
sahf
pop
je
xor
push
add
cmp
insl
adc
pop
outsb
leave
jnp
jo
pop
je
jmp
sbb
jno
sbb
je
dec
pop
jno
cmp
add
add
jmp
or
dec
pop
jne
insl
popa
outsb
je
cld
add
mov
cld
outsl
lods
dec
imul
fs
mov
outsb
pop
je
jb
and
cld
call
xor
push
cld
cmp
jge
outsb
imul
push
imul
add
and
add
xor
pop
insb
add
dec
data16
pop
jb
cmp
arpl
rorb
outsl
ss
push
jmp
outsb
pop
inc
cmp
jae
adc
insl
push
sbb
jbe
push
mov
inc
adc
jae
ljmp
insl
in
pusha
jb
fcoms
or
cmp
sbb
pop
test
jne
add
push
jno
jecxz
popa
lcall
sub
lcall
inc
outsb
lcall
and
pop
outsb
add
adc
movsb
xor
inc
sbb
inc
cld
pop
je
add
pop
jae
or
sub
loopne
adc
aad
sbb
daa
sub
addr16
cli
test
pop
in
adc
insb
jmp
jo
push
bound
sbb
bound
add
adc
jo
pop
dec
push
inc
cli
sub
insb
inc
pop
lods
adc
cwtl
push
inc
pop
cmpsl
pop
icebp
and
addr16
std
imul
and
push
pop
pop
insb
shll
jb
add
push
or
or
sbb
outsl
jo
frstor
insb
les
dec
mov
inc
xor
or
pop
outsb
vpunpckhdq
bound
daa
faddl
push
outsb
xchg
pop
push
je
es
outsb
xchg
push
cmp
es
popa
mov
pop
insl
xchg
cs
pop
push
sub
push
push
sub
nop
popa
je
lods
pop
xor
inc
pop
insb
dec
cmp
jo
sub
jb,pt
xchg
add
imul
add
dec
add
inc
dec
popa
xor
add
out
daa
jo
add
popa
arpl
add
fisubs
imul
dec
imul
popa
inc
movb
push
gs
in
jp
ret
dec
add
xor
imul
popa
jb
inc
gs
es
jge
gs
jb
jl
outsb
jne
popa
jb
dec
popa
cmp
fs
outsb
popa
add
flds
pusha
or
push
in
jno
out
arpl
inc
jb
jmp
push
jb
scas
pusha
ja
xchg
outsl
ja
int
arpl
movsl
outsl
insl
adc
outsl
ja
lods
dec
arpl
xchg
push
outsb
in
imul
insl
push
out
pusha
insb
xlat
fdivs
jo
bound
into
xor
push
imul
dec
push
pop
lea
insl
xchg
xor
jbe
dec
jno
add
add
pop
adc
push
or
jle
add
jo
push
or
outsb
pop
outsb
repz
push
pop
mov
pop
pop
pop
mov
aaa
or
push
ljmp
push
adc
mov
jmp
push
test
dec
mov
pop
test
add
pop
xchg
jo
imul
lret
pop
jne
int
dec
pop
test
out
stos
addr16
jo
cs
pop
lea
lcall
inc
push
push
push
sbb
xor
cmp
arpl
pop
data16
je
dec
cmp
dec
push
jb
cmp
arpl
push
aas
insb
sub
aad
outsb
arpl
add
insl
ja
push
and
pop
pop
jb
stc
pop
jb
adc
mov
imul
pop
jbe
into
pop
dec
mov
call
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
and
jmp
std
call
std
call
std
jmp
cld
jmp
cld
call
cld
call
cld
jmp
cld
incl
loopne
call
cld
call
cld
jmp
cld
call
cld
jmp
xor
nop
push
and
mov
and
jne
xor
jge
xor
test
xor
cwtl
or
xor
xor
xor
sbb
xor
and
cmp
cmp
es
dec
pop
xchg
ja
mov
push
cmp
data16
add
xor
gs
dec
jmp
pop
ss
or
jno
cli
jo
sub
popf
inc
pop
sub
insb
outsb
or
dec
insl
or
addr16
xchg
or
xchg
xor
insb
outsb
lret
push
jmp
pop
push
add
ljmp
push
lcall
cmpsl
gs
dec
sahf
popa
push
jae
dec
push
push
lea
pop
pop
inc
adc
outsl
sbb
xor
push
push
or
cmp
gs
adc
aaa
outsb
push
add
jge
or
addr16
insl
sub
es
aaa
or
push
and
push
mov
dec
adc
mov
add
or
push
cmp
popf
data16
test
sub
lcall
inc
push
jmp
lcall
das
adcl
push
xchg
add
xchg
push
jne
addr16
pop
es
push
push
pop
ss
outsb
fs
orb
dec
imul
cmp
insl
punpcklwd
sti
pop
cmp
roll
and
les
push
movb
insb
or
push
aam
outsb
fs
in
lcall
ljmp
jmp
or
dec
jno
jecxz
popa
add
inc
push
push
push
sbb
outsb
mov
imul
inc
push
push
add
dec
xor
inc
pop
dec
inc
push
adc
sbb
adc
dec
add
je
inc
cmp
push
xlat
data16
inc
ss
pop
pop
push
imul
dec
inc
popa
adc
pop
jecxz
je
ficoms
and
and
outsl
aad
pop
push
jecxz
imul
pop
jb
adc
lods
aaa
pop
jb
sbb
insb
mov
pop
insb
cmp
cmp
inc
in
jbe
sbb
insl
lahf
test
xor
xchg
sbb
inc
insl
insb
fwait
dec
push
add
data16
dec
push
arpl
jo
pop
dec
jo
jp
xor
test
push
je
sub
push
sbb
pop
push
add
xor
mov
cmp
pop
and
stos
cmp
inc
in
and
xlat
decl
insl
imul
outsb
fstpl
push
cmp
mov
push
mov
cmp
outsl
pushf
pop
dec
jo
aas
sub
cmp
pop
lea
cmp
jmp
jno
dec
imul
cmp
dec
out
push
bound
push
jle
or
jl
popa
outsb
insb
sbb
xor
js
sti
push
jno
mov
adc
les
imul
xor
clc
xor
outsb
adc
cmp
scas
out
enter
test
aas
pop
stos
add
push
xor
lods
imull
mov
imul
das
inc
xchg
jnp
je
je
push
or
insl
jmp
fwait
cmp
sbb
jns
jae
xchg
inc
push
sbb
add
push
arpl
and
add
pop
push
add
add
negb
arpl
and
mov
or
dec
arpl
ret
gs
pop
mov
xor
mov
pop
inc
int3
pop
outsl
push
je
inc
outsb
mov
pop
insb
lods
bound
mov
push
add
inc
outsb
jae
pop
insb
insb
inc
adc
je
add
popa
inc
pop
inc
outsl
add
jb
sbb
and
outsl
cs
je
sbb
jno
inc
addr16
cmp
pop
or
je
jne,pn
inc
pop
je
cmp
insb
popa
andl
sbb
add
xchg
inc
insb
sbb
cmp
addr16
aaa
fstpl
add
mov
fmuls
outsb
insb
cmp
imul
dec
jbe
pop
push
mov
aas
imul
insb
popf
dec
sub
sub
push
jne
sbb
ja
push
insb
pop
jmp
push
pop
dec
cld
aaa
inc
push
in
pop
pop
push
add
push
add
call
push
and
cmp
push
cmp
push
or
push
out
push
push
mov
mov
push
std
push
cltd
push
ficoml
das
dec
test
mov
push
lcall
add
pop
pop
push
lcall
add
pop
cmp
push
or
add
pop
cmp
push
aad
dec
push
adc
popa
sbb
add
dec
pop
stc
das
inc
push
add
add
pop
push
add
cmovle
pop
dec
insl
fiaddl
add
dec
and
in
push
mov
aad
je
arpl
fsts
mov
divb
jno
sbb
arpl
bound
push
jb
cmp
jbe
push
dec
xchg
pop
pop
xor
popf
add
dec
and
pop
push
jbe
and
popa
add
sub
and
add
addr16
pop
dec
insl
sbb
aas
insl
add
xor
jo
cmp
je
jl
je
aam
jno
je
je
bound
data16
imul
pop
jb
add
fs
add
mov
outsl
add
bound
xchg
cmp
pushf
adc
pop
insb
lods
and
cmpsl
push
push
pop
add
outsb
and
data16
das
pop
jb
sbb
test
je
imul
dec
outsl
xor
xor
insb
pop
jmp
jb
out
popa
and
ljmp
pop
lret
xor
add
lds
push
enter
test
inc
in
xor
arpl
push
xor
xchg
pop
and
xchg
xor
dec
addr16
jl
add
push
pop
je
xchg
xchg
cmpsl
dec
insb
popf
test
stos
push
push
lea
arpl
or
pop
je
pop
gs
pop
or
push
mov
inc
insb
push
cmp
je
add
push
dec
imul
addr16
dec
push
gs
pop
and
cmp
xor
inc
or
das
add
sub
ljmp
pusha
cmp
rorb
dec
mov
gs
cmp
push
push
add
pop
shlb
aaa
call
cmp
dec
int3
dec
nop
dec
lcall
dec
sahf
dec
jae
stos
pop
adc
fs
pop
pop
bound
add
push
pop
pop
push
es
popa
add
mov
das
or
add
push
pop
je
pop
dec
arpl
or
cmp
pop
outsb
cli
divb
insb
std
or
je
cmp
insl
decb
sbb
mov
xor
push
cltd
cmp
int3
push
pop
outsb
mov
xor
arpl
dec
arpl
aad
inc
xchg
cltd
pop
imul
ja
jb
data16
insl
pop
lcall
xor
xchg
bound
add
or
imul
push
jae
cs
popa
sub
das
je
xor
outsl
add
xor
mov
inc
imul
xor
pop
popa
add
pop
jb
nop
and
bound
insl
test
dec
popa
mov
jae
mov
xor
das
dec
popa
mov
xor
das
popa
pop
jecxz
data16
sbb
jae
jb
pop
dec
jle
popa
jb
cmp
pop
pop
push
insl
pop
xor
push
xor
adc
imul
insl
pop
sub
cld
aaa
inc
jbe
cmp
push
and
pop
jno
packsswb
out
jno
aad
push
es
add
mov
push
or
xchg
dec
add
xchg
fs
pop
jno
pop
data16
cmp
js,pt
andb
add
js
jne
dec
pop
pop
ja
xor
jl
push
insb
mov
jb
add
dec
mov
lcall
push
imul
inc
test
pusha
jnp
sbb
or
roll
jnp
sbb
pop
sbb
pop
or
push
add
out
push
and
sub
push
adc
rcrb
out
push
push
mov
add
popa
mov
addr16
dec
xchg
push
int
mov
add
cmp
mov
pop
jne
add
xor
nop
push
js
cltd
add
addr16
xchg
arpl
jmp
xor
pop
inc
ja
pusha
sub
push
pop
addr16
or
arpl
push
insl
pop
push
add
push
jno
sbb
jmp
repz
push
ss
notb
les
xor
adc
cmpsl
adc
inc
fsubs
sbb
pop
popf
bnd
out
push
pop
scas
adc
add
mov
sub
push
push
lea
push
outsl
push
ss
insb
loopne
popa
jb
gs
dec
xor
jbe
imul
daa
imul
inc
je
adc
jb
add
outsl
sub
mov
cmp
inc
pop
popa
sub
bound
push
inc
mov
js
jb
je
jns
popa
js
outsl
add
mov
je
test
pushf
xlat
ss
dec
pop
pop
xchg
test
push
cwtl
dec
push
jne
dec
add
push
je
or
test
popa
jb
sbb
imul
pop
arpl
fs
inc
pop
outsb
dec
xlat
sub
outsb
jne
pop
jbe
xlat
sub
arpl
mov
push
pop
or
pop
insl
or
and
add
out
push
jne
mov
cld
mov
push
addr16
ret
add
call
pop
bound
add
dec
out
test
jns
jbe
test
imul
push
push
fs
pop
dec
inc
arpl
cmp
das
ds
push
or
sub
inc
jno
cmp
pop
push
push
sub
inc
adc
pop
sub
cmp
inc
lret
push
int
or
lods
push
jmp
fs
cmp
add
cmp
cltd
or
jno
out
jb
cmp
pop
jp
push
insl
jnp
add
push
addr16
popa
je
imul
ds
push
jl,pt
inc
sub
or
pop
xor
jb
or
inc
outsl
gs
sub
insl
adc
push
jno
imul
push
sub
imul
or
push
pop
sbb
push
arpl
cmp
insl
out
pop
fndisi(8087
sub
aam
pop
add
jb
mov
sub
mov
pop
push
test
in
push
ret
std
sub
pop
add
or
jae
xchg
pop
pop
inc
mov
sub
xor
jo
xchg
add
push
js
jb
je
popa
je
and
pop
arpl
add
push
sub
gs
popa
je
and
sub
xor
add
push
push
jne
je
outsb
outsl
cmp
data16
jmp
gs
fmull
push
pop
or
adc
mov
push
arpl
fwait
inc
insl
lahf
jns
arpl
push
and
arpl
dec
arpl
xor
mov
jo
sub
insb
push
cmp
aas
add
pop
arpl
push
addr16
cld
dec
cs
stc
pop
add
adc
sbb
inc
arpl
movl
dec
div
xor
jmp
stos
das
in
enter
fldenv
aaa
mov
pop
or
pop
cmp
out
inc
rclb
mov
push
mov
add
bound
pop
jns
jbe
mov
imul
lea
pop
mov
push
fs
push
add
push
pop
push
ja
push
pop
push
out
push
inc
push
dec
pop
push
add
pop
push
dec
push
sub
cmp
push
adc
and
push
push
pop
stc
dec
and
adc
jmp
pop
outsb
sarb
ss
mov
inc
pop
outsb
sarb
and
les
cmp
shr
add
jecxz
fs
imul
mov
xor
xchg
jnp
popa
je
add
cmp
je
das
push
pop
mov
jb
adc
insl
cmp
pop
and
je
arpl
adc
push
insl
adc
push
and
or
cmp
add
arpl
sub
cmp
sub
and
jbe
sub
jns
pop
add
adc
inc
or
push
add
adc
dec
xchg
add
jo
pusha
add
sub
leavew
sub
jns
pop
dec
scas
call
test
je
lret
add
imulb
das
loopne
je
dec
out
add
sub
jb
cld
jb
xchg
xorl
data16
popa
jb
je
jo
cmp
pusha
and
pop
je
clc
push
arpl
adc
add
cld
bound
dec
xor
cmp
cmp
stos
bound
xor
scas
add
mov
pop
pop
lahf
sub
push
sahf
addr16
outsb
test
imul
jno
jne
jo
dec
dec
jno
cmp
cmp
inc
popa
push
sbb
push
cmp
push
gs
popa
jb
jecxz
popa
push
sbb
push
cmp
xor
cmp
sub
inc
add
cmp
inc
adc
push
and
push
push
add
push
bound
dec
clc
inc
mov
inc
and
pop
or
inc
cld
inc
clc
cmp
test
add
or
adc
mov
inc
mov
lcall
push
test
xchg
pop
xchg
dec
dec
cmp
sbb
sub
or
inc
js
add
jp
call
or
add
sub
add
adc
arpl
or
sbb
push
add
pop
add
cmc
push
arpl
jmp
pop
add
dec
xor
add
adc
or
inc
mov
sub
fstpl
and
popa
jmp
in
push
xchg
xchg
dec
mov
push
xor
jmp
dec
push
addr16
xor
push
xor
mov
xchg
dec
cmp
ds
pop
pop
or
pop
inc
popa
arpl
popa
inc
add
cld
dec
inc
arpl
inc
jb
popa
inc
je
sub
push
dec
in
sub
push
popa
je
xor
jle
insb
dec
test
dec
insb
jg
add
jmp
pop
xchg
das
je
add
pop
je
push
push
inc
xor
inc
push
incl
popa
arpl
xor
je
push
inc
xor
sbb
lds
insb
mov
call
jmp
std
jmp
std
cmp
add
cmp
add
cmp
add
cmp
add
cmp
push
insb
push
or
addr16
insb
cmp
push
insb
adc
pop
xor
rcll
xlat
push
outsl
add
ljmp
ljmp
pop
jmp
movsb
pop
add
xchg
lds
pop
jo
xchg
mov
jbe
insb
lods
jl
pop
fwait
jo
arpl
jo
arpl
pusha
insl
lea
xchg
add
pop
pop
out
push
push
push
push
dec
push
inc
push
pop
or
out
add
inc
push
pop
or
adc
pop
sub
push
push
sbb
cli
push
sbb
and
push
sbb
push
fsts
push
rcrl
and
dec
fimull
push
out
rorb
or
pusha
aam
mov
dec
lods
and
mov
and
jnp
mov
das
mov
cmp
add
add
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
jo
or
addr16
imul
cmp
data16
add
dec
push
arpl
push
add
inc
sub
sbb
push
les
xor
sub
outsl
aad
xor
jmp
or
jno
add
je
addr16
gs
imul
fldt
xor
cmp
add
outsb
xorl
and
call
call
push
inc
inc
or
outsl
adc
insl
popa
jne
sub
insl
repnz
jb
hlt
jae
cmp
outsl
gs
repnz
insl
sub
in
jns
mulb
and
outsb
jae
icebp
jno
orb
add
and
jmp
jae
dec
gs
call
dec
outsl
mov
imul
imul
pop
add
xchg
je
mov
arpl
xor
mov
sub
test
lcall
cmp
push
out
lcall
cmp
add
sub
inc
cmp
cmpsl
daa
sub
push
or
sub
sbb
arpl
sbb
sbb
dec
insl
pop
adc
insl
add
xor
push
arpl
jae
outsb
rol
cmp
sub
pop
not
xor
lcall
stos
mov
dec
sahf
add
add
xchg
insl
push
jns
lahf
daa
mov
mov
fs
mov
dec
pusha
jne
inc
and
push
cmp
push
xor
daa
cmp
inc
inc
cmp
xor
sub
ss
add
and
and
xor
sub
out
adc
push
cmc
xor
call
mov
push
cmp
shlb
fidivl
or
test
mov
das
fdivrs
inc
es
test
adc
inc
mov
pop
hlt
rorl
das
mov
je
xor
jg
jp
insb
sub
and
or
arpl
lret
cmp
jbe,pn
imul
xor
add
push
push
es
xor
or
add
icebp
and
xchg
pop
pop
cmc
cmp
or
pop
cs
icebp
xor
and
dec
inc
mov
ljmp
jb
call
outsl
insb
out
lock
jb
push
outsb
leave
in
pusha
je
jecxz
push
mov
insl
je
jecxz
jae
dec
dec
and
push
and
out
outsb
ja
out
arpl
inc
push
inc
and
and
out
outsb
je
in
pusha
arpl
dec
dec
je
out
pusha
inc
xor
pop
je
dec
outsb
jae
test
insl
arpl
sti
outsl
je
mov
fs
incl
sti
outsl
je
jl
jo
jns
arpl
jl
pop
add
cmpsl
add
cmp
inc
xor
sub
add
cmpsl
sub
pop
imul
dec
repnz
add
in
xor
sub
sub
add
add
add
xor
cmpsl
push
insl
pop
repz
or
dec
adc
xor
add
je
fildll
arpl
add
jb
mov
inc
xlat
fisubl
int
rolb
sub
shrl
push
into
or
out
cmp
enter
les
imul
add
loopne
lahf
add
add
mov
dec
add
add
pop
add
add
add
add
add
or
sbb
add
add
add
add
insb
add
add
or
and
push
es
inc
adc
add
xor
stc
jo
sub
or
frstors
clc
arpl
sbb
imul
add
outsb
and
add
arpl
and
dec
arpl
jb
jno
cmp
jne
push
arpl
and
fbld
pop
sbb
push
pop
and
push
inc
or
push
inc
ucomiss
aad
arpl
imul
arpl
imul
arpl
dec
and
jo
popa
sub
pusha
dec
gs
cmp
loopne
and
loopne
and
dec
inc
gs
frstor
stc
call
pusha
push
lods
in
jne
mov
and
inc
push
rolb
movsb
out
ja
sahf
inc
push
add
jae
arpl
push
sbbb
pop
jecxz
outsb
xor
je
cld
dec
push
push
in
gs
push
add
jae
jae
je
cmp
sub
roll
cmp
add
out
push
or
dec
dec
or
imul
push
dec
add
inc
cmp
inc
cli
jno
inc
xchg
add
xchg
jbe
addr16
lcall
lahf
outsb
xor
cmpsl
xor
cmp
insl
imul
pop
jnp
arpl
sub
arpl
and
pop
divb
pop
pop
push
sbb
cmp
push
add
sub
incb
push
arpl
call
sbb
add
in
pushl
adc
and
das
sar
or
xor
fimull
cs
fildll
and
sbb
es
sub
push
mov
mov
mov
out
xchg
mov
imul
sub
dec
sub
push
cmp
pop
sub
push
sub
dec
adc
sub
and
add
and
add
xor
bound
sbb
add
sbb
or
dec
je
sbb
sub
and
fiaddl
push
sbb
push
shlb
jno
xchg
mov
sbb
lea
add
pop
sub
jmp
dec
add
add
sbb
jno
cmp
pop
cmpsb
push
and
inc
dec
push
and
sbb
pop
xor
fnsave
or
inc
jb
out
addr16
inc
dec
add
push
dec
inc
add
pop
jp
bnd
add
lcall
arpl
dec
popa
arpl
jb
jb
add
jae
je
jb
arpl
decl
out
jae
repz
outsb
je
fnstenv
and
data16
loope
jb
dec
inc
insb
mov
addr16
pop
mov
hlt
jae
lods
dec
popa
je
in
addr16
pop
inc
cmp
das
jo
cmp
push
jo
test
call
imul
add
es
sbb
and
testb
push
or
and
iret
outsb
lret
js
test
inc
or
dec
push
cmp
je
jbe
xchg
rolb
push
call
pop
push
sub
addr16
xor
jb
xchg
inc
inc
add
mov
pop
xor
add
inc
xor
push
xor
ja
push
lock
div
dec
aas
cld
inc
dec
cmp
repz
fnstcw
repnz
mov
push
in
es
and
lods
dec
jmp
sub
sbb
loop
sbb
add
dec
pushf
push
imul
push
and
xor
push
roll
sub
add
sbb
and
pop
inc
sbb
arpl
divb
cmp
dec
dec
sbb
dec
sub
or
and
dec
dec
push
das
pop
sub
sbb
arpl
pop
sub
xor
dec
aas
sbb
push
push
push
sbb
sub
pop
jmp
mov
xor
lcall
inc
xchg
mov
push
mov
outsb
inc
push
mov
push
xor
loopne
push
push
lock
imul
incl
push
and
loopne
and
arpl
jb
adc
call
cmc
jne
bound
insl
in
add
add
cmc
inc
inc
mov
or
jb
inc
call
push
outsl
testl
pusha
push
popa
jb
fdivs
pop
repz
add
add
clc
cmp
jge
cmp
mov
iret
lds
add
mulb
fbstp
cs
icebp
or
mov
add
cmp
xor
daa
pop
jne
and
fists
adc
stc
ds
pop
cmp
arpl
cltd
cmp
cmc
add
cld
xor
jno
jmp
push
arpl
adc
sbb
adc
ss
cmp
cwtl
cmp
leave
fbld
aad
addr16
xchg
in
jo
imul
cwtl
add
in
xor
in
push
xchg
sub
mov
bound
dec
and
aaa
aaa
gs
xor
and
push
sbb
dec
xor
sbb
adc
sbb
xor
push
fidivs
sbb
in
add
sbb
or
fidivl
out
fidivl
cld
sbb
push
rcll
das
les
add
das
xlat
dec
lea
sub
sbb
add
cmc
xlat
lcall
pop
xor
jne
data16
pop
and
sub
push
xchg
adc
scas
outsb
push
and
sbb
push
sbb
and
xor
add
or
xor
inc
pop
xor
ds
loopne
sbb
add
loope
and
add
dec
je
sbb
and
sbb
jno
sbb
fs
adc
jno
and
pop
fstl
outsb
or
jb
in
inc
push
rcrb
outsb
add
outsl
scas
lahf
pusha
popa
movsb
fisubrs
incl
mov
insl
jb
fldenv
hlt
incl
dec
dec
push
jbe
outsl
jae
fldcw
loop,pt
imul
fs
jb
dec
dec
inc
xor
pop
inc
inc
push
inc
outsb
or
call
pop
je
cmp
push
cmp
xor
insl
dec
decl
cmc
pusha
jb
or
je
add
popf
cltd
cmp
insb
xor
mov
xor
jne
cs
xchg
sbb
ja
xor
push
outsb
push
mov
sub
arpl
inc
push
imul
bound
inc
aas
pop
dec
cmp
sub
fldl
sub
arpl
cmp
lock
cmp
aas
inc
cmp
inc
inc
cmp
cmp
xor
inc
inc
cmp
push
inc
cmp
push
inc
cmp
inc
push
stc
incl
dec
jns
mov
add
dec
jns
push
and
jns
shlb
jnp
jns
std
and
pop
and
push
daa
jns
or
sbb
mov
jns
mov
sbb
jns
divl
jns
sbb
stc
pushl
ss
pushl
inc
sub
incl
sub
call
xchg
incl
test
decl
cwtl
stc
inc
xchg
stc
jmp
xchg
add
incl
lods
inc
add
add
aas
add
ret
aas
add
mov
add
aas
add
inc
add
inc
add
pushf
inc
add
inc
add
inc
add
push
inc
add
arpl
and
inc
add
dec
inc
add
add
inc
add
adc
add
or
add
add
add
aas
add
jnp
add
js
add
jge
add
inc
ret
inc
add
addr16
add
inc
add
int
add
rolb
mov
into
inc
add
int
add
int3
inc
add
int3
inc
add
mov
add
loopne
add
rolb
add
rolb
add
loopne
add
mov
inc
out
pop
dec
jno
add
cmp
dec
inc
dec
dec
push
cmp
dec
dec
mov
ficomps
movsb
push
or
adcb
or
mov
cld
and
mov
sbb
sbb
ss
mov
pop
push
or
push
pop
stc
and
into
loope
pop
mov
outsl
inc
pushf
sti
pop
popf
mov
mov
loope
sbb
pop
sbb
adc
jae
jl
add
pop
insb
and
cmp
xor
push
jmp
jb
cmp
arpl
or
cs
lods
fsubrs
inc
add
add
add
push
fidivrl
add
fidivl
sbb
iret
and
and
xor
xor
adc
sbb
in
leave
push
add
sbb
and
push
les
pop
aad
lcall
push
mov
mov
lea
mov
cmp
inc
imul
das
pop
dec
jle
pop
push
xchg
xor
pop
sbb
test
xor
xor
push
adc
and
add
pop
or
cmp
and
inc
push
or
add
and
inc
push
add
xor
popa
sbb
dec
inc
jno
or
insl
adc
or
add
es
cli
and
outsb
mov
fs
outsb
mov
and
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jmp
mov
add
add
add
add
add
pusha
add
add
add
push
add
add
add
pusha
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
call
incl
sar
jmp
jmp
call
call
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cltd
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
sbb
add
xchg
dec
sub
pusha
pop
repnz
call
add
movl
cmp
ljmp
add
cmp
jmp
cmp
add
cmp
call
call
cmp
add
cli
call
sub
add
push
mov
std
jmp
cmp
add
add
test
xor
add
icebp
cmp
add
cmp
add
cmp
add
cmp
add
ljmp
iret
jmp
push
lock
cli
scas
daa
and
push
or
add
xchg
sub
ss
and
inc
mov
and
lock
sysret
add
cmpsb
or
addr16
push
sbb
or
pop
pusha
mov
adc
outsb
push
pop
add
or
or
or
dec
xchg
sbb
scas
sbb
inc
mov
and
inc
nop
sub
add
incb
add
add
add
add
fcompl
add
cmp
add
cmp
std
pushl
lods
add
add
lods
add
cmp
add
cmp
add
add
test
add
cmp
add
pushl
movsl
add
add
lods
add
cmp
add
cmp
add
add
test
add
add
add
add
jmp
pop
jmp
add
add
add
add
pop
cmp
jmp
mov
out
scas
sahf
out
cmpsb
sahf
jecxz
cmp
out
cmp
jecxz
cmp
jmp
cmp
jecxz
jle
jmp
jbe
loop
outsb
sahf
out
add
loop
cmp
jmp
cmp
jecxz
cmp
jmp
inc
sahf
out
ds
ljmp
jmp
pop
cmp
out
cmp
jmp
push
sahf
out
push
sahf
out
cmp
jecxz
incb
add
mov
add
leave
mov
lock
cmp
add
cmp
jg
mov
add
jmp
add
add
jmp
cmp
lock
mov
lock
mov
add
jmp
mov
lock
call
cmp
dec
cmp
sub
add
jmp
mov
out
jg
adc
adc
loopne
add
inc
test
add
add
adc
adc
add
addl
adc
adc
mov
addb
xor
add
test
addb
add
add
nop
addb
nop
add
addb
add
adc
jo
add
addb
xorb
add
adcb
and
add
adc
add
cmp
or
mov
test
add
cmp
add
cmp
add
inc
test
add
cmp
add
cmp
add
xor
incl
inc
mov
add
xor
add
inc
mov
incl
xor
incl
cmp
xchg
add
xor
incl
incl
cmp
out
cmp
out
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
cmp
out
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
jmp
cmp
or
cmp
add
cmp
pop
loope
jmp
cmp
add
cmp
pop
jmp
ficompl
add
cltd
std
push
cmp
add
sbb
push
cmp
cltd
std
jmp
lcall
push
xor
add
imul
add
jmp
cmp
add
add
jmp
push
popf
std
jmp
add
add
std
call
add
add
popf
std
call
movsb
jge
popa
add
add
pusha
add
add
cld
jg
rcrb
add
add
sar
call
cld
jmp
movsb
std
call
add
add
std
jg
mov
pushf
jge
adc
std
jmp
cld
jmp
pushf
jge
sar
call
jmp
std
cmp
loope
ds
cmp
add
add
sub
lcall
stos
add
cmp
add
cmp
loope
imulb
loope
cmp
add
cmp
add
jnp
add
cmp
add
stc
test
or
test
add
cmp
add
stc
test
add
test
or
test
or
test
add
cmp
jmp
add
out
cmp
out
cmp
add
inc
out
inc
inc
out
cmp
out
xor
add
inc
out
cmp
out
cmp
add
add
add
add
add
inc
out
inc
add
add
add
add
inc
out
cmp
out
cmp
out
cmp
add
add
add
inc
out
inc
inc
out
cmp
out
cmp
add
inc
inc
out
inc
add
add
inc
out
cmp
out
cmp
out
inc
inc
add
cmp
or
jmp
xor
or
jmp
cmp
inc
jmp
cmp
add
jmp
cmp
add
cmp
add
cmp
inc
jmp
xor
add
jmp
jp
add
add
and
cmp
stc
cmp
add
cli
aas
and
cmp
jmp
cli
aas
add
cmp
stc
cmp
and
cmp
jmp
pusha
add
and
add
add
inc
add
pusha
inc
add
push
inc
inc
add
add
adc
add
adc
inc
and
add
adc
add
adc
add
inc
inc
and
add
add
inc
inc
add
inc
inc
and
add
and
inc
add
add
add
rolb
inc
and
inc
inc
add
inc
inc
and
add
nop
inc
add
nop
add
and
inc
add
mov
inc
add
cmp
inc
inc
sbb
add
mov
inc
cmp
add
cmp
add
add
cmpsl
inc
add
test
inc
inc
cmp
add
cltd
inc
add
add
cmp
add
sbb
inc
add
test
add
cmp
test
or
cmp
or
cmp
or
xor
add
add
add
add
cld
call
add
cmp
call
or
add
or
cld
call
add
add
or
cld
call
add
out
pop
cld
call
add
out
cmp
jmp
or
out
pop
add
add
add
add
cld
out
sbb
out
cmp
out
sbb
out
sbb
jmp
or
cld
call
add
pop
cld
call
jmp
loopne
call
inc
add
cmp
call
inc
add
jmp
loopne
call
xor
add
cmp
add
inc
loopne
jmp
xor
call
cmp
add
xor
add
cmp
add
inc
loopne
call
xor
add
cmp
add
inc
add
inc
add
jmp
cmp
ljmp
lret
jmp
lret
jmp
stos
xchg
or
call
std
add
mov
mov
adc
lea
adc
mov
add
std
call
cld
call
add
and
decl
pusha
std
movups
add
add
pusha
cld
add
adc
mov
jmp
std
jmp
std
call
cld
add
sar
decl
loopne
std
push
mov
add
cld
add
nop
mov
add
cld
add
loopne
add
rorb
add
add
dec
cmpsl
icebp
jmp
cmpsl
icebp
incl
add
cmp
add
sub
add
cmpsl
add
dec
cmpsl
add
out
ljmp
cmpsl
add
add
out
add
out
add
out
add
cmpsl
add
cltd
icebp
ds
pushl
cltd
add
cmp
repz
cltd
icebp
add
cltd
icebp
add
pop
icebp
pop
icebp
push
pop
add
cltd
add
dec
cltd
icebp
add
sub
cltd
add
cmp
out
cmp
mov
cmp
out
cmp
out
cmp
sub
cmp
mov
out
cmp
out
cmp
stos
xor
fildll
pop
cmp
out
cmp
out
cmp
ja
inc
pop
sub
lahf
cmp
out
cmp
out
cmp
scas
xor
and
push
out
cmp
out
cmp
icebp
xor
mov
cmp
mov
add
add
jmp
or
std
std
adc
add
cmp
add
push
std
dec
dec
std
jmp
cmp
add
cmp
add
cmp
add
cmp
add
std
adcl
std
popf
and
std
xchg
adc
std
jecxz
std
negl
int
std
mov
fs
std
sbb
std
xlat
push
std
fldl
dec
std
jnp
std
mov
cld
call
cld
pushl
pushl
cld
lcall
dec
fdivrp
ljmp
cld
call
fdivrp
inc
fdivrp
inc
fdivrp
decl
cld
call
incl
inc
call
ljmp
decl
ljmp
call
cld
incl
insb
sar
cmp
cld
ds
decl
sar
decl
fmul
cld
js
cld
cmp
out
cs
out
cs
ficomps
sub
into
xchg
add
cmp
mov
sbb
jmp
aam
call
out
incl
scas
pushl
incl
outsb
stos
das
jmp
das
lcall
xor
push
mov
decl
xor
inc
inc
xor
ds
sbb
ljmp
lcall
push
enter
lcall
push
add
decb
dec
xor
mov
xor
mov
xor
mov
add
add
xor
mov
xor
mov
xchg
xor
mov
mov
out
cmp
test
jbe
xchg
das
outsb
mov
add
add
sub
dec
mov
sub
mov
sub
mov
sub
mov
sub
mov
mov
push
mov
mov
and
std
jnp
mov
mov
adc
std
sub
adc
std
and
std
loope
mov
in
push
mov
mov
arpl
std
mov
std
push
push
mov
imul
mov
mov
mov
jnp
mov
mov
mov
iret
and
std
repz
mov
int
mov
sub
imul
call
frndint
jmp
cld
ljmp
frndint
jp
cld
js
cld
dec
sar
call
iret
cld
call
std
push
sar
mov
sar
incl
sar
incl
sar
decl
cld
call
frndint
jmp
js
cld
decl
lcall
cld
incl
cmp
cld
decl
cld
decl
jp
cld
cmp
sub
lcall
xchg
add
cmp
decl
lds
add
lret
sub
out
inc
cs
cs
ficoms
dec
xchg
add
cmp
sub
mov
push
sub
scas
bound
cmpsb
push
sub
sahf
jp
call
or
add
adc
jbe
add
cmp
jmp
sub
pop
xchg
add
cmp
je
loopne
insb
aam
daa
add
add
daa
mov
add
sub
movsb
adc
outsb
push
or
lcall
pop
pop
rcrb
pop
add
add
rcll
dec
sbb
ja
je
and
fwait
sbb
pop
sbb
add
add
pop
or
jnp
sbb
out
lea
stos
sbb
and
add
and
fstl
inc
daa
cmp
lock
int
cmp
fmuls
inc
inc
cmp
add
aas
adc
xor
jl
add
xor
pop
insb
add
or
sti
xor
adc
jmp
sub
push
inc
outsb
xlat
dec
adc
inc
and
daa
or
shlb
sbb
lods
sbb
shlb
push
nop
inc
and
fistpll
inc
jb
pop
or
cmpsl
cmp
adc
xor
add
or
insb
dec
cmp
sbb
adc
fs
lret
gs
stc
out
add
dec
outsl
inc
loopne
imul
dec
cmp
add
inc
gs
jno
inc
cmp
loope
jae
add
cmc
call
addr16
rolb
xor
mov
loopne
imul
add
aam
imul
inc
imul
inc
gs
jno
add
insl
je
jmp
arpl
push
imul
shll
push
push
out
or
lds
inc
ja
xor
cmp
sbb
aad
jb
jmp
addr16
hlt
inc
add
mov
mov
sbb
cmp
add
test
inc
pusha
mov
aas
cmp
push
inc
sbb
arpl
mov
inc
pop
inc
ss
push
dec
adc
fs
add
imul
or
sbb
pop
or
cmp
add
or
sbb
ss
and
ds
in
and
adc
xlat
sbb
and
sbb
sbb
pop
cwtl
or
adc
jl
es
lea
stc
sbb
push
and
les
inc
out
add
cltd
push
inc
aas
mov
dec
sbb
mov
adc
dec
incl
push
or
add
add
jnp
or
push
xor
dec
sbb
pop
popa
pop
cmp
outsb
pop
sbb
arpl
hlt
ljmp
cmp
arpl
pop
or
cmp
data16
inc
pop
dec
ret
decl
add
jb
pop
adc
push
arpl
dec
adc
add
cmp
fisttpll
arpl
cmp
jae
sbb
cs
push
mov
sti
pop
pop
fwait
cmp
lods
pop
or
sbbb
add
mov
mov
xor
pop
loope
dec
neg
jo
in
shll
pop
insl
std
cmp
add
sub
inc
gs
pop
jae
aas
jb
inc
out
jns
jb,pt
dec
jmp
imul
push
outsb
xor
outsb
push
cmp
fisubs
add
outsb
je
std
pop
add
out
push
jge
outsb
add
dec
jb
fisubs
cmp
xor
jl
je
repnz
and
add
add
addr16
inc
add
jle
inc
loope
adc
cmp
arpl
and
sbb
in
xor
iret
xor
arpl
out
addr16
icebp
cmp
jb
sbb
lahf
hlt
pop
xor
sbb
mov
adc
mov
push
pop
dec
pop
adc
inc
adc
pop
stos
add
jno
adc
adc
push
or
push
adc
add
stos
adc
or
cmpsb
push
push
sbb
add
ljmp
sbb
sbb
sbb
add
adc
int
xor
enter
cwtl
in
add
add
sbb
jmp
add
in
or
dec
add
lea
hlt
add
adc
push
out
ficompl
pop
repnz
and
mov
add
lds
in
jno
jbe
inc
aas
add
shlb
imul
fwait
inc
pop
jge
jecxz
cmp
shlb
stc
jmp
jp
leave
bound
dec
cmp
dec
pop
pusha
in
dec
inc
dec
add
jo
jb
push
loop
and
add
cmp
bound
div
bound
adc
dec
add
add
out
jae
fsubr
jb
add
ds
shl
inc
shr
push
enter
add
addr16
lock
outsl
gs
jbe
jae
je
decl
push
jo
add
insl
mov
std
inc
data16
lock
dec
push
add
sbb
gs
je
jbe
arpl
pop
outsl
insb
popa
add
add
jno
inc
jb
je
jbe
popa
xor
push
jb
inc
std
incl
insl
imul
jno
inc
jo
add
push
jno
test
addr16
inc
pop
roll
mov
add
sub
mov
add
and
or
cmc
jno
xchg
icebp
dec
lock
add
cmp
repnz
push
add
lret
leave
mov
add
cmp
icebp
lds
add
cmp
in
xchg
push
repz
and
pop
movsb
or
inc
cmp
out
pusha
xchg
or
incb
popa
add
pop
jae
cmp
lret
icebp
ret
hlt
gs
out
dec
add
out
jl
add
jecxz
out
hlt
out
add
mul
add
lcall
in
in
jbe
jle
enter
cmpsl
aam
fidivrs
jmp
out
in
dec
in
xor
xor
jmp
add
pushl
icebp
adc
fwait
out
push
negb
shl
jle
xor
mov
out
add
add
adc
add
out
decl
out
insl
imull
in
aad
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
jge
int3
int3
in
xchg
push
mov
pop
mov
dec
inc
gs
ret
or
in
push
pop
shll
leave
fldl
or
add
mov
ret
mov
cmp
aas
jb
add
and
pop
mov
in
orl
inc
loopne
int3
fisttps
sbb
clc
add
mov
mov
testl
mov
testl
ret
mov
sbb
dec
xor
repz
add
jmp
xchg
mov
jae
inc
push
xchg
add
pop
jae
xchg
ret
inc
inc
xchg
xchg
or
cmp
decl
imul
or
stc
repz
loope
mov
mov
jmp
jl
mov
std
inc
or
or
add
lret
out
jmp
aad
rorb
dec
int3
int3
test
jge
int3
int3
in
test
orl
std
mov
mov
shl
sub
std
cmpl
movsb
mov
aas
add
adc
jbe
ljmp
out
addr16
adc
inc
adc
cld
cmp
add
loop
mov
in
ret
sar
adcl
sbb
orl
out
scas
adc
popf
xchg
mov
cmp
int3
insl
dec
int3
int3
test
int3
jge
int3
int3
or
in
mov
pop
test
ret
ds
pop
pop
jp
int3
int3
add
inc
int3
int3
mov
add
mov
dec
inc
cmp
ror
inc
int3
int3
add
inc
int3
int3
mov
push
arpl
push
sub
dec
inc
cmp
add
mov
or
lcall
mov
ret
push
mov
or
mov
sti
mov
int3
or
in
push
jbe
sti
add
cmp
add
inc
mov
mov
jae
dec
xor
pop
mov
add
cs
add
or
inc
je
roll
add
imul
xor
mov
aam
int3
in
inc
int3
int3
add
inc
int3
int3
insb
mov
mov
sbb
add
cmp
ror
inc
int3
int3
test
int3
add
int3
int3
in
mov
orl
js
cmp
test
in
pop
mov
sub
push
mov
mov
jo
inc
sub
imul
sarl
dec
cld
ret
cmp
inc
mov
sti
mov
mov
add
inc
aad
dec
lock
adc
add
add
or
ret
or
xor
push
add
jns
or
jns
or
mov
mov
cmp
add
push
jne
mov
int3
in
mov
orl
inc
inc
xchg
ret
mov
push
call
sarl
cmp
repnz
add
stc
add
add
lock
fisttps
sub
or
call
push
ret
mov
add
sar
adc
sarb
cmp
in
push
mov
pop
mov
add
mov
mov
mov
cmp
jns
ret
mov
pop
add
xchg
add
test
add
mov
jmp
je
add
cmp
mov
cmpb
in
or
insb
pusha
cmpl
je
cmp
mov
jg
add
mov
xchg
sbb
in
sbb
push
jae
jmp
rorb
mov
jae
xorl
inc
gs
in
mov
ret
lea
add
mov
sti
call
les
sarb
push
pop
mov
mov
shlb
jmp
clc
sti
xchg
addr16
mov
ret
push
loopne
add
push
xchg
pop
cli
inc
int3
int3
mov
push
and
dec
inc
cmp
add
xchg
or
std
add
mov
ret
push
ret
push
mov
pop
push
jle
sti
mov
int3
jge
int3
int3
or
in
mov
jg
mov
cld
dec
inc
cmp
mov
rol
int3
std
inc
int3
int3
mov
lahf
add
decl
mov
das
mov
test
ds
mov
mov
mov
repz
jno
xchg
test
ror
mov
mov
je
mov
cld
xor
xchg
xor
dec
mov
lret
pop
jne
test
mov
or
jno
inc
adc
mov
add
push
sbb
mov
ja
inc
inc
xor
xor
and
call
in
cmp
int3
int3
add
inc
int3
int3
insb
test
orl
das
add
call
lahf
in
outsb
mov
sti
dec
jl
or
test
or
decl
cmp
hlt
fidivrl
dec
inc
cmp
idivb
mov
cmp
add
jecxz
or
cmp
decl
push
jmp
cmp
aas
add
jle
cmp
add
mov
es
les
add
add
add
mov
dec
inc
cmp
enter
dec
inc
cmp
hlt
jbe
call
inc
dec
inc
cmp
mov
shl
popf
lds
xor
mov
cmp
pop
mov
mov
outsl
loop
pushf
int
int3
jge
int3
int3
add
jp
mov
idivl
inc
inc
repz
hlt
imul
add
sub
cmp
int3
jge
int3
int3
in
jp
orl
inc
xor
jnp
or
dec
mov
add
rcl
mov
mov
adc
push
fnstcw
push
jns
call
cmp
in
xchg
call
mov
les
add
xlat
ljmp
cmp
push
push
outsl
push
lock
mov
pop
mov
iret
mov
rorl
shrl
jge
les
cmp
mov
jae
sarb
inc
hlt
mov
fisttps
out
iret
add
pop
mov
out
mov
jns
call
lea
push
adc
adc
ret
mov
insl
mov
xor
testl
lods
inc
add
jns
or
mov
out
cld
arpl
inc
sub
insl
std
xorl
dec
xchg
cmpl
in
pop
push
cld
insw
add
stc
lcall
dec
push
jns
ds
addl
pop
dec
inc
cmp
jae
mov
fisttps
add
fs
cmpl
jns
ljmp
cmp
mov
rorl
xor
insl
push
lock
push
fdivr
das
cmp
mov
shrl
cmpsb
shr
mov
mov
pushl
aas
push
ret
push
jecxz
cld
push
add
les
decl
fadd
rcl
mov
inc
add
jbe
loopne
mov
push
mov
mov
dec
inc
cmp
out
or
cld
mov
cmpb
sub
fdivrs
js
add
add
loopne
inc
dec
inc
cmp
inc
xor
je
inc
cmp
hlt
test
push
add
call
hlt
pop
push
call
mov
pusha
mov
cmp
daa
mov
inc
cmp
call
int3
sbb
dec
ret
push
js
dec
mov
inc
cmp
out
adc
sti
sahf
les
decl
ret
idiv
idivb
add
fbld
cmp
decl
add
shl
push
shrb
cmp
xchg
jbe
les
sar
ret
mov
dec
inc
cmp
inc
sub
jbe
loopne
sar
xchg
push
cld
jle
les
pop
dec
inc
cmp
mov
mov
dec
push
aad
mov
dec
inc
cmp
cld
push
or
push
add
add
mov
roll
int3
int3
add
cmp
int3
insb
jne
mov
inc
cmc
lret
ror
cmp
int3
mov
push
xchg
mov
ret
dec
js
mov
push
lret
jp
int3
int3
or
in
push
adc
add
lahf
in
dec
clc
decl
aad
std
mov
imul
mov
or
call
in
imul
add
je
orl
inc
xor
add
cmp
fsubl
ret
cmp
add
je
add
cmp
lds
add
add
jne
or
cli
fisttps
add
test
fnstcw
std
add
hlt
or
xor
dec
inc
cmp
add
cmp
cmp
dec
inc
cmp
cmp
loopne
mov
les
add
add
add
pushl
sub
dec
inc
cmp
mov
shlb
inc
cmp
call
jl
mov
jp
int3
jbe
jmp
add
testb
in
jbe
inc
xor
dec
inc
cmp
add
fcomps
jns
mov
add
pop
ret
addr16
clc
cld
adc
dec
inc
cmp
dec
call
mov
outsl
mov
shl
aad
addr16
xorl
in
sar
in
push
push
mov
push
call
mov
jo
dec
sbb
cld
inc
int
jae
jnp
loopne
jnp
faddl
mov
sti
out
add
js
mov
imul
inc
popf
iret
mov
cmp
idiv
xchg
add
ret
add
inc
add
js
in
mov
xchg
jp
loopne
cmc
out
dec
clc
incl
cld
add
cmp
jmp
cmp
xchg
and
clc
bound
or
jle
incl
je
mov
cmp
mull
cmp
dec
clc
mov
add
add
lret
divl
xor
add
ja
jmp
ja
aam
mov
dec
inc
cmp
mov
inc
cmp
mov
inc
cmp
mull
mov
add
mov
mov
mov
add
mov
inc
cmp
push
call
mov
pop
dec
inc
cmp
out
repz
test
ljmp
adc
dec
inc
cmp
call
je
lahf
les
incl
pop
movsb
fs
mov
inc
add
rol
xor
jecxz
jp
int3
int3
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
inc
add
lea
add
push
cmp
push
xor
xorl
xor
add
inc
lea
lods
aaa
ja
mov
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
jno
data16
cmp
cmp
xchg
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
cmp
cmp
jg
les
cmp
push
cmp
cmp
cmp
ds
jae,pt
jbe
jne
cmpb
ds
add
call
aas
sub
sub
or
cmp
jne
das
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
