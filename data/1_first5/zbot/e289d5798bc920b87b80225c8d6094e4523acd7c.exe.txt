add
add
hlt
incl
mov
imul
popa
jb
addr16
add
push
sub
push
ja
inc
dec
inc
add
xor
sub
adc
push
add
cmp
dec
or
insb
sbb
outsb
adc
inc
hlt
add
add
ja
popa
call
pop
inc
add
jne
jb
arpl
add
add
int
outsl
ret
jne
imul
add
add
pusha
jne
xchg
dec
popa
outsb
cwtl
push
add
clc
add
inc
add
push
inc
add
push
inc
add
inc
add
push
inc
add
add
inc
add
pusha
je
es
inc
sbb
gs
jbe
add
popa
cmp
adc
cld
inc
add
fistps
outsb
shrl
xor
popa
insb
insb
hlt
add
add
jne
arpl
jo
shrb
add
pop
insl
jae
jo
add
jo
mov
add
jnp
add
arpl
imul
dec
outsb
jb
popa
data16
inc
pusha
imul
sub
popa
inc
dec
imul
sub
inc
sbb
outsb
jb
and
push
push
push
add
sub
popa
jo
imul
popa
jb
fldcw
xor
popa
insb
insb
hlt
add
add
arpl
jae
gs
je
add
add
add
mov
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
add
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
movsl
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
in
add
hlt
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
jmp
testl
lods
clc
add
shrl
dec
jmp
testl
loop
or
jmp
inc
add
add
out
add
mov
add
testl
stc
add
in
testl
add
testl
add
add
add
jmp
xor
jmp
testl
jmp
notl
jmp
pop
add
add
add
add
test
add
add
or
add
add
add
add
or
add
clc
add
insl
push
add
int
add
fisttpll
add
add
or
add
or
add
or
add
or
add
or
add
or
add
sbb
add
or
add
add
hlt
fldl
add
fldl
add
fldl
add
fldl
add
or
lods
mov
stos
add
fstl
add
decl
fiadds
add
hlt
fldl
add
fldl
add
mov
pusha
popa
push
cmp
ret
add
fisttpll
add
frstor
add
fldl
add
fldl
add
sbb
jno
and
bound
hlt
cltd
sub
hlt
add
add
add
add
add
add
add
add
add
inc
jmp
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
add
jmp
testl
jmp
lea
add
pop
add
add
dec
add
add
pop
add
add
dec
add
add
sbb
add
add
or
add
add
or
add
add
fldl
add
int
add
int
add
fldl
add
add
add
add
add
add
add
add
add
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
hlt
fldl
add
add
add
xstore-rng
cmpsl
add
icebp
cmpsb
add
out
add
mov
mov
add
daa
mov
add
popa
mov
add
xchg
mov
add
add
mov
testl
mov
testl
mov
testl
add
testl
mov
testl
mov
testl
add
add
mov
testl
mov
testl
mov
add
add
add
mov
add
cltd
popa
add
sub
add
add
pop
dec
add
filds
inc
add
ret
dec
add
in
add
out
add
jne
add
jns
add
dec
mov
add
lret
addb
mov
add
testl
jmp
pop
add
mov
add
push
add
inc
pop
add
inc
push
add
xor
add
jmp
xchg
add
pop
lcall
xor
lcall
add
cmpsb
add
sbb
cmpsl
add
jae
add
adc
cmpsb
add
push
cmpsb
add
arpl
add
inc
test
add
test
add
test
add
cmpsl
add
leave
cmpsl
add
imul
add
lods
cmpsl
add
std
cmpsl
add
repz
add
adc
add
add
mov
add
mov
add
add
dec
movsb
add
hlt
jae
add
lea
add
lea
add
scas
cmpsl
add
add
iret
cmpsb
add
or
add
adc
cmpsb
add
pop
cmpsb
add
insl
cmpsb
add
andl
add
or
add
hlt
mov
add
xchg
stos
add
mov
stos
add
mov
stos
add
mull
add
add
add
movsb
testl
movsb
testl
movsb
testl
mov
testl
testl
add
testl
testl
testl
mov
add
mov
add
mov
add
mov
add
testl
mov
add
mov
add
cmpsl
testl
mov
add
cmp
push
add
push
add
push
add
push
add
push
add
jns
add
add
add
imul
add
fs
add
test
add
push
add
push
add
push
add
fs
add
fs
add
fs
add
test
add
test
add
test
add
imul
or
push
add
push
add
push
add
push
jp
add
add
mov
dec
jp
add
xchg
add
add
add
adc
add
scas
mov
add
mov
add
add
add
popl
add
mov
mov
add
add
add
jecxz
add
sub
add
out
mov
add
add
add
mov
add
mov
add
std
mov
hlt
das
mov
hlt
pop
mov
hlt
inc
mov
hlt
inc
mov
hlt
push
mov
hlt
pop
mov
hlt
dec
mov
hlt
cmp
mov
hlt
out
add
sti
mov
hlt
mov
hlt
fbstp
add
jg
add
mov
add
mov
pushf
add
fldl
add
aas
mov
hlt
fldl
add
mov
add
add
scas
lcall
adc
fwait
add
jecxz
add
fistps
add
add
fwait
testl
fwait
testl
lcall
and
testl
popf
testl
sahf
testl
popf
testl
sahf
testl
add
testl
sahf
testl
sahf
testl
sahf
testl
sahf
testl
cwtl
testl
mov
add
arpl
add
arpl
add
mov
add
addl
repz
add
jno
add
push
add
bound
add
add
add
push
add
out
push
add
xlat
push
add
sti
push
add
aaa
push
add
or
add
push
add
gs
add
pop
xchg
add
dec
xchg
add
stos
jg
add
outsl
add
mov
add
add
outsl
pop
add
aad
add
add
mov
add
add
dec
mov
add
mov
add
mov
add
mov
add
add
mov
add
adc
add
or
mov
add
xchg
add
add
dec
mov
add
mov
add
xchg
add
mov
add
xchg
add
mov
add
movsb
add
sub
movsb
add
repz
add
and
add
jno
add
hlt
mov
add
lss
hlt
pop
mov
hlt
dec
mov
hlt
imul
add
xchg
mov
hlt
lahf
mov
hlt
mov
mov
hlt
mov
add
mov
add
subl
hlt
push
scas
add
inc
scas
add
push
scas
add
add
add
subl
hlt
leave
scas
add
in
add
add
adc
je
add
je
mov
hlt
add
add
test
add
test
add
test
add
test
add
test
add
test
scas
testl
mov
add
mov
add
mov
add
mov
add
add
test
testl
mov
add
add
test
hlt
test
add
test
add
test
add
test
mov
testl
add
test
add
test
add
test
add
test
add
add
scas
testl
popa
mov
pop
add
mov
add
pop
pop
add
push
pop
add
dec
pop
add
arpl
add
pop
add
push
pop
add
mov
add
xchg
movsl
push
add
add
push
add
xchg
add
test
add
push
push
add
testl
mov
fisttpl
in
add
cmpb
cli
fimull
mov
les
sbb
pop
dec
bound
cs
cmp
repz
or
fisubs
and
ficompl
ja
ljmp
stos
xor
ret
outsb
rclb
pop
fdivr
mov
xor
rclb
pop
mov
addps
cmc
in
mov
add
mov
loop
jge
dec
loopne
pop
pushf
dec
xor
ja
cmp
cmpb
cmpsl
mov
mov
sbb
aas
movsl
clc
and
add
scas
stos
xchg
lahf
ret
jge
lods
fimull
push
fdivs
clc
fwait
sub
daa
push
pop
pop
dec
mov
lret
outsb
mov
sbb
call
mov
inc
mov
mov
in
sbb
mov
shrl
jae
add
das
int3
std
xchg
insl
popf
adc
add
add
add
add
stos
jmp
daa
and
push
inc
notb
hlt
les
scas
jl
imul
hlt
stos
jmp
mov
testb
mov
outsb
popf
out
scas
jo
divb
hlt
stos
jmp
imul
jo
cmc
jo
hlt
stos
jmp
cmp
add
cmp
add
add
hlt
add
int
cmc
mov
les
lcall
inc
lods
nop
mov
dec
adc
shrb
mov
gs
sbb
pop
mov
push
mov
loope
in
je
xor
jmp
dec
adc
movsb
mov
std
push
xchg
adc
adc
insl
mov
loop,pn
les
mov
insb
cmp
adc
testb
add
mov
mov
jae
fwait
jg
cs
jbe
adc
dec
orb
adc
mov
daa
jg
mov
add
dec
add
xlat
add
dec
ss
adc
lods
add
and
and
inc
inc
add
add
movsl
imul
rcl
adc
add
bound
mov
add
out
fcmovnbe
adc
lcall
fcmovnbe
adc
xor
std
stos
pop
scas
insl
lret
adc
add
mov
jmp
rcll
arpl
add
loop
mov
hlt
lods
push
sahf
mov
jno
add
and
xor
push
mov
cmp
std
imul
jno
mov
add
sub
fwait
xchg
push
pushl
in
add
add
add
icebp
mov
add
mov
js
xchg
xor
in
lret
add
add
hlt
in
add
hlt
pop
incb
loope
add
in
add
in
add
add
add
add
add
add
add
add
or
aam
jmp
add
add
add
add
and
add
leave
add
icebp
add
add
add
and
adc
imul
mov
or
add
stc
and
testb
and
hlt
add
add
add
or
add
or
or
add
or
inc
add
call
call
jmp
cli
push
add
out
fs
jmp
jmp
out
add
jmp
incl
clc
in
stc
cli
add
jmp
cld
call
cli
pop
add
out
pop
add
lcall
jmp
cli
cmc
call
ljmp
jmp
add
or
jmp
decl
clc
aam
stc
cli
add
jmp
fisttpll
adc
mov
add
add
push
je
popf
push
xor
popf
or
add
add
or
add
push
inc
add
call
add
pop
add
sbb
pop
or
add
dec
push
jl
sbb
or
add
add
add
push
sub
sbb
push
or
or
or
clc
add
fildl
add
jmp
push
hlt
jmp
adc
mov
mov
hlt
jmp
jb
jmp
xor
jmp
hlt
faddl
hlt
jmp
hlt
jmp
and
jmp
movsb
hlt
jmp
add
jmp
addb
add
add
jmp
inc
hlt
jmp
in
fildl
hlt
jmp
pop
hlt
jmp
sbb
jmp
xchg
hlt
mov
inc
hlt
jmp
jp
jmp
cmp
jmp
aam
fldl
hlt
jmp
push
jmp
sub
jmp
mov
jmp
or
jmp
mov
add
or
add
stc
add
add
or
add
test
add
add
jmp
add
loop
jmp
add
add
or
add
jmp
or
add
or
jmp
or
stc
add
add
or
add
or
fldl
add
or
add
or
sti
add
add
or
add
or
add
out
push
add
incl
add
add
fadds
mov
add
jmp
push
call
out
addl
lock
call
call
add
testb
jmp
jmp
add
out
add
add
incl
jmp
idiv
call
std
call
negb
add
lcall
jmp
lock
clc
add
cmc
call
sbb
or
add
or
add
or
add
add
fisttpll
push
add
or
add
or
popf
or
add
add
or
add
test
pop
or
dec
or
add
or
add
pop
add
sbb
add
add
sbb
or
add
flds
pop
hlt
jmp
insl
hlt
jmp
sub
hlt
jmp
or
hlt
jmp
dec
hlt
jmp
cli
hlt
fildl
add
jmp
push
hlt
jmp
adc
mov
ret
hlt
mov
or
jmp
xor
jmp
hlt
faddl
or
jmp
arpl
hlt
jmp
and
jmp
cmpsb
hlt
jmp
add
jmp
xor
or
jmp
out
fildl
pop
hlt
jmp
pop
hlt
jmp
sbb
jmp
xchg
hlt
mov
inc
hlt
jmp
jnp
add
or
add
or
sti
add
add
or
add
or
jmp
or
jmp
or
add
jmp
or
jmp
test
add
add
or
add
jmp
add
add
jmp
or
jmp
or
jmp
or
stc
add
add
or
add
or
add
hlt
addr16
call
jmp
out
mov
sti
hlt
out
call
out
and
jmp
add
xchg
add
incl
add
incl
add
out
rolb
mov
add
jmp
out
hlt
call
out
push
add
hlt
repz
call
out
adc
jmp
xchg
std
call
out
and
jmp
incl
jmp
out
inc
add
call
or
jmp
dec
call
add
xchg
add
dec
sarb
add
pushl
add
rclb
add
jmp
add
incb
add
incb
add
add
add
roll
add
push
add
adc
mov
shrl
add
xor
lea
leave
add
arpl
and
lea
test
add
pop
incb
add
jmp
pop
hlt
fisttpl
pop
hlt
fisttpl
sbb
fisttpl
hlt
scas
push
hlt
fisttpl
jl
fisttpl
cmp
fisttpl
hlt
int
push
hlt
fisttpl
insb
hlt
fisttpl
sub
fisttpl
hlt
fisttpl
or
fisttpl
mov
fisttpl
dec
hlt
fisttpl
hlt
lret
incb
hlt
fisttpl
push
hlt
fisttpl
adc
mov
and
fisttpl
jb
hlt
fisttpl
xor
fisttpl
cld
or
fisttpl
hlt
fisttpl
and
fisttpl
movsl
hlt
fisttpl
add
fisttpl
xor
jmp
or
stc
cld
repnz
or
add
or
add
or
add
or
add
cld
out
jmp
or
add
or
add
or
jmp
add
cs
stc
cld
lock
or
add
test
cld
out
jmp
or
add
or
add
jmp
or
add
or
push
add
out
xchg
jmp
loope
stc
dec
std
call
out
out
call
sub
jmp
out
push
add
add
mov
sti
or
call
out
push
add
xchg
add
call
out
ds
roll
mov
iret
jmp
out
cmc
call
incl
call
lahf
adc
jmp
cli
call
lret
and
pop
shlb
add
addb
lret
inc
add
loop
add
add
add
sbb
sbb
cli
cmp
or
lret
cmp
sbb
cli
adc
or
lret
sub
fst
mov
or
int
mov
int
dec
add
shl
add
sti
add
int
push
add
lret
int
add
into
sti
sub
lret
lret
popf
ror
add
int3
or
add
fs
and
stos
hlt
add
test
inc
hlt
ljmp
sti
pop
hlt
sbb
lcall
sti
jl
cmp
leave
or
hlt
insb
hlt
sub
mov
hlt
mov
dec
hlt
cli
hlt
lret
or
hlt
push
add
adc
mov
or
hlt
jb
add
sti
movb
mov
clc
or
add
sti
push
add
jmp
sti
testb
jbe
jmp
cli
push
add
or
add
sti
sahf
add
sti
push
add
fisttpll
mov
jmp
sti
into
add
cli
and
or
add
sti
mov
sti
add
add
jmp
sti
outsb
add
jmp
or
add
sti
and
test
pop
add
lahf
push
add
adc
jmp
in
sti
call
outsl
and
jmp
pop
add
jmp
dec
inc
add
dec
fildl
stc
in
std
call
das
jmp
call
add
imul
in
addr16
pop
dec
add
ud2
add
push
stos
add
in
out
call
out
sbb
jmp
call
iret
cmp
jmp
cli
add
add
into
add
add
add
add
cld
inc
add
cld
add
test
add
push
cld
and
dec
cld
add
add
cld
or
inc
cld
add
push
cld
addb
cmp
cld
addb
cld
sbb
push
cld
add
cmp
push
add
push
adc
pusha
add
cld
add
sti
add
add
std
xor
leave
std
add
mov
std
add
std
rolb
std
push
lret
add
hlt
int
add
roll
pop
hlt
aam
push
hlt
in
add
add
out
add
iret
add
hlt
fadds
add
loope
add
stos
add
hlt
fildl
add
xor
pop
jmp
fs
dec
push
xor
insl
add
xlat
push
test
arpl
js
xchg
mov
cli
aas
mov
popf
mov
aad
lods
shrb
aas
mov
push
and
test
and
out
inc
mov
add
movsb
mov
out
adc
mov
shlb
mov
test
fwait
punpcklwd
push
enter
jg
xor
lock
por
aam
sti
ja
and
or
int
aam
cmp
cmpsb
mov
mov
jmp
lahf
sbbl
lahf
mov
push
cwtl
dec
pusha
add
aam
and
jmp
test
push
lds
add
add
mov
xlat
push
mov
pop
lods
xchg
and
mov
mov
ficomps
mov
icebp
pop
add
dec
stc
cld
mov
cmp
clc
ret
pop
pop
orb
mov
mov
jbe
stos
add
mov
add
out
jo
xchg
jno
add
push
dec
push
mov
dec
outsb
add
cs
xchg
rcrl
pop
jg
repz
or
pusha
xchg
call
sub
imul
insb
sbb
hlt
test
loopne
push
insb
xchg
sahf
add
or
or
fistpl
mov
idivl
mov
dec
mov
in
fsts
add
or
sti
adc
adc
mov
sbb
fisttps
push
fdivrs
xchg
inc
mov
dec
lods
insl
js
fisubrl
in
add
add
hlt
mov
or
add
inc
jb
add
lods
repz
mov
subl
insl
push
loopne
mov
fs
rolb
xlat
mov
or
lret
mov
xor
xchg
jle
in
divl
mov
shl
aad
aaa
push
rcrb
and
clc
pop
icebp
pusha
push
orb
push
add
mov
in
jno
lcall
add
add
inc
lods
jbe
aam
cmpsb
in
jge
aad
out
vcvttps2dq
xor
xor
test
add
push
jg
mov
xchg
dec
scas
hlt
sbb
test
lret
loopne
cmp
mov
shll
inc
mov
sbb
sub
push
xor
mov
imul
add
add
lods
sub
jg
add
or
fbstp
xor
sarb
inc
jne
es
jecxz
sub
shrl
int3
ljmp
and
icebp
jle
rcrl
js
in
js
mov
mov
fstp
sub
jecxz
jns
sub
add
inc
sub
push
cwtl
das
jne
shlb
push
cmc
or
jmp
xchg
or
in
add
xchg
inc
push
mov
jnp
mov
or
rclb
xchg
jl
insl
fisttpl
add
xchg
cltd
mov
pop
or
mov
outsl
addb
icebp
pop
mov
xlat
adc
data16
add
lcall
clc
scas
lret
imul
insb
push
mov
or
icebp
xchg
lahf
xchg
add
in
and
bound
imul
mov
sti
fidivs
xchg
mov
rcr
mov
xor
mov
test
mov
mov
daa
mov
sarb
rol
fiadds
pop
addr16
cmp
scas
ljmp
and
or
mov
add
adc
sbb
sub
xor
enter
stos
aas
outsl
sahf
into
pop
cmpsb
insl
mov
icebp
jns
int
mov
aam
fistpl
mov
add
add
cmpsb
cmc
ss
jno
inc
mov
mov
cwtl
icebp
mov
fldenv
lods
push
sbb
cmp
inc
shll
mov
cmp
jg
pop
mov
pushf
hlt
popf
adc
fnstenv
lret
daa
add
mov
mov
outsl
idivb
xchg
lret
nop
add
or
dec
mov
mov
add
push
lods
icebp
xchg
call
add
ficoml
pop
pop
xchg
cltd
dec
inc
roll
add
xor
xchg
popf
repz
jmp
add
out
and
cmp
inc
fistpll
popa
mov
and
push
movsl
jmp
push
mov
mov
aad
or
inc
or
and
out
mov
lahf
add
lods
push
pop
leave
inc
or
dec
stc
js
sbb
jmp
fwait
test
fisttpl
xchg
fisttpll
and
and
cmp
aam
and
xor
pop
movsl
adc
inc
push
es
outsb
pop
cmc
loopne
jns
mov
mov
sub
xlat
fisubrs
add
add
int
in
push
jge
cmc
push
jo
jb
loope
imul
push
inc
xor
pop
xor
cmpsl
adc
hlt
jae
cmp
xor
sbb
pop
out
adc
iret
stos
dec
jb
cmc
mov
cmpsl
out
sarl
aam
inc
enter
shll
xchg
call
push
les
add
add
les
gs
cmp
and
dec
and
sbbb
loope
in
adc
sbb
dec
inc
pushf
loope
sbb
push
mov
fwait
inc
std
mov
xchg
shrb
add
mov
pop
mov
insl
xor
jecxz
mov
mov
out
das
and
add
cmp
push
scas
mov
out
stos
test
nop
ret
imul
out
sbb
gs
and
xor
sub
adc
dec
pop
pop
push
loope
mov
lock
in
pop
hlt
fiaddl
insb
jnp
hlt
jbe
add
outsb
mov
and
cmp
les
ret
jle
not
add
xchg
jnp
mov
push
repz
add
sub
dec
mov
pusha
clc
mov
push
fbld
std
jg
pushf
lods
push
lret
shlb
add
xchg
sub
xchg
repz
mov
lods
iret
gs
sbbb
cltd
xlat
out
fwait
mov
lahf
mov
sub
mov
pop
xor
cld
xor
xchg
addr16
inc
fsubrs
add
pop
arpl
fdivrp
lret
pop
outsb
loope
cltd
xor
stc
cwtl
adc
out
xchg
scas
mov
lahf
popf
xchg
inc
mov
add
in
aaa
sbb
adc
sub
cs
jle
jp
push
dec
leave
bound
cmp
add
sub
adc
in
mov
cld
hlt
xor
ret
loope
xchg
inc
cli
and
out
call
pop
int3
mov
jnp
sub
frstor
stos
mov
gs
mov
notb
out
push
pop
or
pop
pop
and
sub
in
cmp
mov
add
jmp
lret
out
xchg
ror
into
mov
scas
out
andl
mov
push
xchg
repz
call
scas
sub
inc
xchg
inc
xchg
ss
pop
cmp
adc
cmc
pop
add
mov
sti
mov
jl
sahf
push
fs
sbb
jmp
sub
add
fdivs
adc
mov
add
aas
imul
inc
push
out
outsb
cli
and
lahf
mov
mov
push
or
xchg
mov
push
or
xor
mov
int3
fcoms
add
add
add
and
push
jmp
sbb
mov
sub
xor
adc
pop
mov
dec
xchg
je
pop
ret
xor
add
add
clc
adc
push
jl
sbb
ds
leave
mov
cmp
lretw
cmp
or
aas
bnd
cmp
jns
add
push
cmp
push
ret
cwtl
aaa
mov
pop
sbb
xor
or
adc
imul
test
daa
aam
sub
and
push
mov
out
mov
and
fidivrl
sub
or
jno
mov
mov
out
cmc
shlb
lcall
pop
push
jae
mov
jb
lahf
xchg
ja
dec
push
jbe
jae
je
popf
aad
cmc
movsb
mov
cs
jg
or
jge
in
jl
out
jg
pop
sbb
add
jecxz
add
dec
leave
dec
ds
mov
dec
adc
cli
sbb
scas
ja
lods
push
xor
sti
repnz
ja
insl
pop
mov
aad
ret
jns
cmpsb
fxch
jns
rclb
sub
xlat
lods
into
fs
mov
popa
daa
fidivs
cmp
add
inc
fstps
mov
aaa
dec
inc
cmp
xorl
inc
ficompl
inc
add
jg
cltd
sub
push
movb
dec
loopne
arpl
les
or
adc
cmp
adc
xchg
pop
push
push
aam
outsl
test
nop
pop
sbb
mov
jecxz
cmp
add
movsb
jbe
inc
movsl
lret
nop
pusha
cmpsl
mov
adc
sbb
in
mov
out
jecxz
cmpsl
add
mov
or
out
outsl
cmpsl
jmp
mov
sub
cmp
adc
mov
incb
pop
sbb
add
fdivr
stos
push
xchg
stc
xchg
sbb
push
add
jle
ret
insb
xor
jge
or
mov
cmc
roll
inc
testb
fsts
inc
jnp
out
mov
fisubl
xor
jb
jno
mov
mov
or
xlat
push
test
xor
out
aam
cmp
sar
mov
in
cwtl
adc
popf
outsb
pop
lds
repnz
pushf
les
fld
push
dec
sbb
jmp
lods
xchg
ret
aas
mov
roll
adc
and
je
lret
enter
or
roll
int
fld
iret
dec
das
add
or
insl
insl
nop
sti
dec
sub
jns
movsl
xchg
movb
hlt
lods
and
and
xchg
mov
add
cmp
cli
addl
jbe
addr16
outsl
rcl
pop
lods
out
mov
pop
dec
sbbb
iret
jae
xchg
subb
inc
jg
dec
add
pop
in
insb
xor
or
add
je
fstp
jne
xchg
jo
pop
push
jns
sbb
jae
xor
jp
aam
lea
and
data16
add
add
movsb
dec
add
cmp
bound
adc
arpl
addr16
popa
les
add
imul
popa
imul
in
jecxz
pop
inc
push
cmpl
sbb
mov
inc
sbb
xor
pusha
leave
jbe
cmc
fisubrl
jbe
push
cmp
jne
loope
outsb
sahf
dec
or
lods
insb
mov
add
test
cmp
mov
scas
jno
out
imul
hlt
add
pop
jo
add
cld
test
imul
fildl
aaa
mov
sbb
popf
xchg
pcmpeqd
jae
std
jl
nop
outsl
outsl
call
fisttpl
scas
push
repnz
shl
mov
and
push
inc
cmpsl
push
cli
mov
add
lret
pushl
jne
fcmovb
int
ret
aam
adc
repnz
dec
inc
or
push
mov
sbb
jns
mov
mov
repz
xor
test
cmp
jge
xchg
and
xchg
jg
pop
test
das
xchg
imul
iret
xchg
pushf
xor
sbb
ljmp
add
add
loop
push
ror
in
inc
mov
push
clc
insb
jno
lock
and
inc
sahf
loop
jmp
cmc
pusha
push
inc
aad
cld
insl
inc
aam
xor
sbb
xchg
lahf
lods
stc
sub
hlt
icebp
cld
mov
hlt
sub
mov
pop
adc
out
cmpsl
xlat
das
xchg
sbb
insl
adc
jbe
sahf
imul
pop
jge
jle
sub
ret
repnz
mov
rclb
test
sub
pushf
ret
cmpl
in
aas
ret
dec
ja
jnp
or
daa
add
arpl
cmp
mov
mov
in
fldenv
jns
mov
mov
cmp
je
test
shr
ja
add
fcmovnbe
adc
xchg
ljmp
andl
xchg
mov
and
js
or
mov
mov
push
ret
add
scas
jo
sbb
sbb
jmp
adc
aas
jecxz
mov
mov
xor
gs
ja
ficomps
ljmp
sti
xor
test
mov
mov
xlat
mov
mov
add
dec
lock
sub
pop
cltd
xchg
movsl
mov
scas
dec
in
pop
inc
test
jns
push
inc
xchg
call
jmp
lock
repz
imul
popf
test
nop
push
ds
cmp
jle
inc
adc
xchg
lea
pop
inc
mov
push
sarl
xor
loop
ja
mov
in
test
and
cmpsb
jo
js
and
or
fildl
stc
push
xchg
not
cltd
sub
mov
in
cli
push
mov
shll
ss
pop
iret
orb
and
add
mov
fimuls
add
arpl
in
pop
and
xchg
push
cwtl
pop
mov
mov
jle
pop
adc
ljmp
mov
addr16
bswap
mov
lods
sub
pop
adc
mov
sub
dec
into
add
mov
iret
out
mov
movsb
mov
test
lods
cmp
mov
icebp
add
and
inc
cmp
inc
clc
cwtl
in
sub
or
ja
cmpsl
cmp
lcall
bound
incl
lock
mov
push
fwait
or
es
mov
loop
push
shr
shr
or
pop
push
add
loope
pop
push
cmp
lods
test
ja
jg
push
cmpsl
fidivrl
add
push
icebp
test
or
jbe
and
mov
jmp
add
rcrb
sbb
mov
rclb
jmp
movsl
lea
loopne
push
sbb
push
adc
lds
imul
pop
repz
push
adc
incl
sbb
add
xchg
sbb
or
mov
mov
jne
mov
aam
int3
mov
sti
sub
and
test
stc
jae
adc
stc
fucomp
testl
sbb
mov
sbb
mov
adc
xor
idivl
insb
movsb
mov
mov
add
sub
dec
sub
jns
or
fs
xor
jno
sbb
inc
fdivp
mov
in
mov
test
dec
or
shlb
jp
fmul
in
dec
push
pop
dec
scas
add
cmpsl
cmp
shrb
and
rorl
inc
in
fbstp
adc
roll
cld
roll
test
mov
test
test
rdpmc
cwtl
insb
xchg
leave
adc
insb
jecxz
mov
aad
ret
adc
dec
clc
lret
int
fsubp
aam
je
aam
loop
ja
dec
jo
xlat
fisubrs
lea
movsl
sti
aad
mov
in
xlat
fadds
nopl
sbb
add
pop
and
jmp
popf
enter
shll
push
addr16
adc
or
test
jne
fldt
insb
in
test
daa
push
add
stc
and
cmpsl
cmpb
add
sbb
imul
stc
fnstenv
and
rcrb
inc
mov
pop
adc
int3
cmp
hlt
ss
add
push
sub
add
adc
aaa
dec
mov
mov
bound
lcall
loope
hlt
int
ds
mov
rcl
mov
dec
add
mov
push
les
fmul
popa
iret
dec
aad
sbb
sbb
mov
jge
xchg
adc
lods
ret
fnstenv
repz
in
mov
pop
sub
lods
sub
cltd
hlt
xor
repnz
stos
ja
testb
mov
xchg
fidivrs
push
push
rorl
pop
adc
push
shrb
mov
and
daa
pop
mov
lret
out
pinsrw
sahf
pushf
dec
cmp
popl
mov
test
lcall
cs
in
ret
sbb
add
add
or
inc
push
cmp
pop
pop
test
lods
into
or
test
scas
daa
mov
stos
xchg
inc
adc
repnz
loop
push
pop
or
or
push
out
mov
jbe
into
sub
sub
mov
fildll
sbb
stc
xor
inc
mov
shlb
add
insb
rcll
ljmp
icebp
mov
push
addr16
mov
jne
das
imulw
mov
fs
ret
jns
dec
and
mov
and
dec
std
sbb
sbb
and
sub
sbb
push
sbbb
lret
jbe
daa
std
inc
test
and
lcall
add
sbb
outsl
pop
xchg
je
clc
outsl
sar
xchg
jns
iret
in
lret
sahf
jg
leave
scas
add
pop
ret
and
sbb
xchg
out
add
cli
icebp
insl
xchg
stc
sub
sbb
push
mov
add
pop
push
dec
stc
icebp
jb
jae
jno
fdivrl
push
inc
into
jb
aad
fwait
pop
loop
ret
in
aam
mov
rol
inc
pushf
into
int
xor
loop
pop
push
inc
xchg
movsl
icebp
jo
sbb
mov
adc
add
iret
fadds
out
inc
jbe
pop
mov
dec
sbb
mov
pop
xor
cli
adc
mov
daa
hlt
xchg
push
ret
ljmp
or
iret
or
fistl
das
dec
mov
mov
data16
scas
fsubrp
nop
dec
jae
aas
pop
add
and
mov
sbb
push
mov
add
cmpsb
arpl
or
lret
mov
and
out
std
add
ljmp
stos
sub
sbb
cmc
mov
add
rdtsc
inc
cmpxchg
idivb
add
add
cld
les
repnz
sub
xchg
dec
xchg
movsl
rorb
dec
inc
jnp
mov
fxch
popa
adc
or
aaa
jle
and
sbb
addr16
adc
shlb
adc
jo
lods
jp
xchg
mov
adc
adc
lea
xchg
iret
push
cwtl
pop
add
stc
pop
pop
add
imul
inc
aas
inc
orb
inc
andb
test
aam
pop
ja
jl
loope
jbe
rcl
imul
sbb
push
jmp
cmp
int3
or
xor
dec
in
push
push
ficompl
mov
pop
cmp
out
ss
inc
pop
inc
dec
xor
add
and
repnz
mov
sbb
test
rcrl
mov
add
mov
lahf
push
pushf
mov
and
into
loopne
sub
or
and
xchg
push
jle
insb
cmc
scas
inc
dec
loopne
orl
ret
mov
push
jecxz
fwait
fidivl
into
lds
in
test
add
mov
mov
xor
mov
cli
pusha
jbe
mov
ljmp
mov
cmc
add
pop
mov
test
sub
sub
add
add
push
out
sub
sbb
adc
push
sub
push
xor
arpl
push
jle
fimull
and
add
mov
scas
xor
lret
addr16
jmp
jmp
dec
int
push
notl
stc
jae
sub
repnz
or
jo
adc
imul
dec
gs
pop
xchg
jl
int
cmp
ja
pop
mov
jne
cmp
testb
or
lret
mov
push
pop
dec
adc
push
clc
pop
aas
int
push
mov
adc
dec
and
mov
outsl
shll
xorb
inc
sbb
mov
imul
mov
cwtl
addr16
fcomp
jo
dec
push
pop
mov
sub
int
sbb
inc
jnp
add
dec
xchg
cmpsl
and
cmp
inc
enter
push
cmpsl
xorb
mov
dec
aaa
rcr
push
pop
sub
dec
nop
jbe
sbb
dec
sub
or
ss
movb
cli
stos
push
push
stc
xchg
gs
scas
push
repz
pop
imul
incb
mov
dec
fld
lahf
add
xchg
int3
mov
add
imul
adcb
pop
sub
sbb
call
push
mov
jmp
in
stos
pop
xor
xchg
push
dec
ja
dec
aas
inc
adc
popf
and
mov
inc
leave
leave
mov
push
dec
push
mov
adc
int
pop
xor
inc
jecxz
dec
add
testb
add
add
rol
add
fbstp
dec
pop
mov
and
mov
pusha
in
cmp
jp
arpl
or
add
pop
adc
cltd
pop
out
aaa
fdivs
popa
sbb
jl
xchg
mov
rcll
pop
push
idivb
mov
in
es
lods
inc
test
outsb
xor
daa
gs
jecxz
shl
lret
test
clc
mov
sub
sbb
outsb
push
dec
movsl
dec
inc
gs
out
es
mov
mov
xor
and
test
and
cld
jmp
cmpl
adc
mov
pusha
inc
cmp
in
push
sbb
pop
hlt
repz
aaa
sub
jbe
push
or
lock
mov
cld
jb
push
add
or
push
push
adc
fistpll
mov
into
ret
je
mov
dec
push
test
xchg
push
mov
rclb
test
rcr
out
loope
fwait
clc
movsl
pop
xchg
push
hlt
movsl
jge
cmpsb
aas
inc
leave
lahf
in
add
cmpsl
leave
xor
and
add
xchg
push
ss
sub
inc
mov
xchg
cwtl
cmp
dec
test
popf
xor
cltd
pop
mov
add
adc
lea
xchg
lret
xchg
or
lods
lahf
inc
out
and
ret
cmp
leave
add
pop
cmp
jge
pop
mov
test
add
xor
add
push
sbb
hlt
mov
add
imul
and
int
and
sbb
movsl
insl
jecxz
out
repnz
mov
rcrl
clc
mov
adc
or
xchg
cmp
aam
push
jp
lds
cmp
nop
cmp
dec
addr16
daa
jle
jno
stc
push
xor
in
sbb
add
adc
outsl
inc
pop
mov
inc
add
add
and
ja
movsb
loope
notl
shlb
out
int3
flds
dec
popf
fidivrs
lret
xchg
add
add
rclb
or
sbb
mov
push
dec
xchg
scas
aam
aam
jecxz
sbb
mov
add
push
sub
and
add
testb
adc
sahf
and
das
fmull
xchg
sbb
mov
lcall
inc
dec
not
jle
rorl
dec
or
pop
dec
out
pop
xchg
pusha
scas
add
cmc
mov
or
mov
adc
mov
aad
xchg
pusha
cmp
xchg
mov
in
xchg
gs
xor
cmpsl
cli
add
jmp
das
insl
sub
sbb
mov
out
movsb
fnstenv
mov
jb
fldcw
mov
push
sbbb
cld
test
sahf
inc
sbb
hlt
adc
xor
mov
inc
sub
inc
inc
divb
add
jno
mov
das
push
loope
invd
jecxz
jp
hlt
js
mov
ss
leave
lcall
mov
jle
rcrb
inc
xorb
xchg
push
lods
dec
pushl
fs
xchg
arpl
dec
js
mov
jbe
loop
add
mov
adc
stos
sahf
sub
add
movsb
popf
test
xchg
es
or
fs
mov
fnsave
sub
jp
and
mov
cs
and
sub
ret
outsl
adc
sub
pop
jp
inc
mov
mov
je
lret
scas
lret
add
sbb
daa
out
sahf
add
bound
lock
pop
add
inc
cs
mov
sbb
rcrl
jl
popf
bnd
test
and
clc
pop
or
notb
subl
or
jb
dec
dec
jae
mov
je
fldcw
insl
shlb
repnz
pop
pop
sub
imul
cmp
popa
xor
sub
imul
imul
fs
push
outsb
sbb
cmp
push
or
mov
ja
add
jbe
outsb
stc
inc
pop
js
inc
mov
stos
adc
sbb
and
cmp
push
jbe
inc
aas
inc
insl
jno
les
repz
cld
stos
outsl
cmp
shr
xchg
sbb
jmp
cmpsl
mov
add
or
bound
popa
and
xchg
inc
pop
in
cmc
push
in
pushf
xor
mov
jp
pop
push
cmpb
pushf
add
hlt
adcl
xchg
outsl
lods
push
scas
lret
xchg
sub
sub
and
sub
or
sbb
xchg
push
lods
mov
add
fsubrs
push
and
and
xchg
xor
outsb
aad
sahf
or
clc
in
sbb
cmp
mov
or
xor
movsb
shl
add
mov
sub
iret
jp
add
sbb
mov
jnp
cltd
mov
mov
mov
mov
sub
fcomps
jnp
hlt
mov
xor
jbe
add
add
mov
or
jnp
pushf
fcmove
pop
cmpsb
test
sub
rcl
iret
push
mov
add
xor
sbb
mov
mov
xchg
loope
fisttpl
ret
aas
cmpsb
dec
jecxz
es
cld
jae
inc
fwait
adc
in
mov
loope
fdivr
push
xchg
in
or
dec
sbb
mov
jnp
add
xchg
subl
rclb
ljmp
std
add
push
mov
pop
loope
mov
test
sbb
mov
push
dec
pop
sbb
mov
test
loope
loopne
lods
fisttps
xor
jmp
enter
adc
insl
cmc
sbb
loope
jle
add
sbb
sub
daa
dec
jecxz
aas
sub
pop
mov
aam
jg
push
js
jle
push
hlt
negb
nop
data16
ds
adc
pusha
push
fnstcw
xor
inc
test
xor
mov
shll
pop
sbb
lods
jb
mov
jg
xor
inc
mov
pushf
push
xchg
stc
or
addr16
movsb
adc
jb
aam
lret
mov
scas
hlt
gs
pushl
jg
cmpsl
mov
out
or
shll
jno
pushf
pop
rolb
xlat
dec
jmp
mov
mov
test
inc
fbstp
jle
pop
lahf
sbb
ret
in
arpl
call
jbe
mov
add
shrb
stc
sbb
xor
jle
or
insl
lcall
movsl
loope
inc
loope
test
xchg
sets
add
in
xchg
jae
in
jno
jns
leave
jp
out
adcb
ficomps
nop
cmc
les
jp
lock
jno
jne
in
xchg
xor
or
bound
push
mov
mov
and
aam
add
scas
mov
mov
sahf
mov
mov
jb
out
dec
push
dec
sahf
add
shl
sti
cld
aaa
in
mov
mov
jle
adcb
cmp
je
inc
lods
int
mov
cmc
inc
imul
add
add
add
and
mov
and
inc
aam
int
and
sub
aas
sub
arpl
addb
aam
push
sub
xor
into
push
fiaddl
jle
jmp
rolb
sbb
mov
jg
outsb
xor
add
int3
mov
cld
rcr
jo
add
push
ja
lods
sub
stos
dec
mov
inc
movb
jbe
fcomi
adc
std
or
cmp
and
pusha
inc
dec
bswap
stos
inc
mov
iret
mov
inc
cmp
es
and
mov
xor
aad
insb
and
in
sub
into
dec
imul
in
mov
cmp
jno
incb
hlt
jmp
lock
ficompl
es
fwait
mov
fisubs
xor
addl
dec
scas
xchg
push
or
lods
push
push
pop
leave
add
divb
insl
es
push
push
push
test
jle
dec
popa
mov
push
in
add
hlt
fwait
add
hlt
fwait
add
hlt
fwait
add
hlt
fwait
add
add
fwait
add
hlt
fwait
add
hlt
fwait
add
hlt
pushf
add
hlt
pushf
add
hlt
pushf
add
hlt
pushf
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
loop
incl
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
testl
in
testl
out
testl
out
testl
icebp
testl
loopne
testl
repz
loop
add
loop
add
cmc
testl
in
add
fdiv
add
jmp
testl
jmp
testl
jmp
testl
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
or
leave
add
add
or
or
add
or
test
add
add
add
add
add
add
or
sub
or
cltd
add
add
add
add
or
or
or
cltd
add
add
add
add
or
hlt
flds
or
pop
add
add
mov
add
hlt
stc
add
hlt
jns
or
mov
or
or
hlt
dec
add
hlt
leave
add
hlt
mov
or
or
hlt
dec
add
hlt
leave
add
hlt
xchg
add
hlt
adc
hlt
popa
add
hlt
loope
or
mov
or
xor
hlt
addl
or
add
hlt
addl
or
push
add
hlt
add
add
addl
or
push
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
lock
scas
clc
or
call
clc
or
sub
or
test
or
enter
dec
clc
or
or
or
mov
or
clc
testl
mov
clc
or
clc
testl
mov
add
or
cmp
or
lock
mov
clc
or
shl
or
push
clc
or
xor
add
clc
or
add
or
xor
add
lock
mov
or
add
or
add
add
or
test
or
enter
sbb
or
fmuls
or
pop
pop
or
test
or
cmp
or
clc
or
add
js
or
js
or
call
pop
or
sub
or
pop
pop
or
enter
mov
or
or
or
inc
pop
or
mov
pop
or
add
or
inc
pop
or
rolb
add
or
add
or
lock
add
or
hlt
cmp
hlt
mov
or
or
hlt
add
hlt
cmp
hlt
mov
or
hlt
jle
or
jle
or
incb
or
incb
hlt
push
add
hlt
push
add
or
sahf
add
or
push
add
or
sahf
add
or
mov
add
hlt
ds
or
jbe
or
out
or
out
or
mov
or
mov
or
es
hlt
es
add
std
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
testl
add
clc
or
add
testl
add
clc
or
add
testl
add
or
add
testl
add
clc
or
add
add
or
add
testb
testl
add
or
add
dec
add
add
or
fimull
or
fiaddl
or
or
or
cli
add
add
or
pop
add
add
or
add
add
add
add
add
or
add
add
add
or
or
fimull
or
ljmp
add
or
sbb
or
or
add
add
add
add
add
add
add
add
add
add
add
dec
add
hlt
lea
pop
hlt
pop
add
hlt
popf
add
hlt
mov
add
hlt
jae
pop
hlt
xor
hlt
add
hlt
ret
add
add
arpl
pop
hlt
and
hlt
jae
pop
hlt
xor
hlt
outsl
add
hlt
daa
add
hlt
dec
add
hlt
pop
add
hlt
pop
add
hlt
pop
add
hlt
mov
add
hlt
push
or
ljmp
hlt
sub
hlt
or
hlt
mov
hlt
dec
add
hlt
lret
hlt
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
jmp
sti
pop
add
out
add
or
decl
lock
or
lock
jecxz
or
jecxz
repz
push
or
icebp
push
or
call
adc
repnz
ud2
repnz
in
or
sti
or
jmp
or
add
or
sti
or
add
or
hlt
cli
or
in
or
add
or
or
push
push
push
push
and
push
push
adc
push
push
adc
push
push
xor
push
push
add
push
push
adc
push
push
adc
push
push
rcll
push
push
rcll
push
push
mov
push
push
ret
adc
push
push
rclb
sldt
add
add
adc
cpuid
adc
setb
setb
lss
jb
adc
setb
rsqrtps
punpckldq
rsqrtps
pmuludq
lsl
psubq
psllq
por
adc
jp
adc
jno
adc
ljmp
pop
jmp
sbb
jecxz
sbb
or
sbb
add
sbb
cld
add
cld
je
sbb
je
sbb
fs
frstor
fstl
sbb
push
sbb
push
push
sbb
incb
sbb
out
jne
sbb
sbb
fisubs
sbb
push
sbb
xorps
sbb
add
add
lcall
repnz
sbb
loop
fistps
int
or
add
add
add
std
pop
clc
sbb
pop
lock
pop
call
sbb
pop
fcomps
aad
adc
int
or
add
pop
clc
sbb
pop
lock
pop
call
sbb
pop
fcomps
aam
adc
int3
and
sbb
add
cld
and
pop
hlt
and
pop
in
and
pop
in
loope
fsubl
fsts
add
adc
sbb
add
sbb
add
adc
sbb
in
adc
sbb
fcoml
sbb
in
add
icebp
out
or
repz
or
or
in
or
out
ljmp
flds
adc
adc
push
push
adc
in
adc
in
adc
in
adc
in
adc
or
adc
add
adc
or
adc
add
adc
add
adc
add
unpckhps
inc
adc
push
arpl
push
push
arpl
push
push
push
adc
pop
inc
adc
pop
and
pop
pop
and
pop
pop
inc
sbb
sbb
sbb
cmc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
les
sbb
aam
sbb
aam
sbb
sbb
sbb
negl
sbb
negl
sbb
hlt
jae
sbb
jae
sbb
arpl
sbb
arpl
sbb
push
sbb
rcpps
sbb
add
sbb
add
sbb
jb
sbb
jb
sbb
bound
sbb
bound
sbb
outsb
add
hlt
insb
add
hlt
imul
hlt
push
add
imul
add
hlt
add
hlt
pop
add
hlt
arpl
add
popa
add
hlt
outsl
add
hlt
add
hlt
jnp
add
outsl
add
hlt
arpl
add
push
add
hlt
or
hlt
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cli
add
jmp
cmc
add
jmp
sti
add
jmp
add
add
add
daa
add
jmp
testl
in
testl
loop
pop
add
notl
add
testl
add
idivl
add
div
ljmp
cmpsl
add
mull
jmp
add
jmp
notl
stc
notl
add
or
add
int3
or
add
adc
mov
adc
jle
adc
cltd
or
dec
or
dec
or
add
lret
add
or
add
add
dec
or
add
or
add
or
add
add
addl
or
add
fdivr
add
pop
add
add
daa
add
int3
inc
add
pop
add
hlt
insl
add
hlt
insl
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
hlt
pop
add
jo
adc
hlt
jb
pop
hlt
jne
sbb
add
hlt
add
hlt
push
add
hlt
inc
add
or
hlt
movsb
jmp
arpl
loop
xchg
inc
fidivs
scas
and
scas
hlt
add
add
add
sahf
and
mov
push
sbbl
add
hlt
or
hlt
add
dec
aaa
add
out
xorl
je
jmp
jle
test
add
and
jo
insb
add
add
xor
test
cld
call
iret
repz
add
xor
jmp
test
jl
imul
fadd
jmp
cld
in
sti
mov
cld
loopne
hlt
cld
call
add
add
add
add
pop
leave
sub
shrl
mov
push
push
and
add
cmp
imul
pop
mov
ljmp
mov
push
xchg
pusha
mov
lcall
enter
cmp
es
add
sub
fnstenv
sbb
pop
lcall
je
je
outsl
std
mov
and
loope
xchg
inc
call
fsub
insb
stos
mov
xor
jecxz
sub
dec
inc
je
or
and
hlt
sbb
int3
push
outsl
jne
bound
ss
xchg
xor
xchg
add
mov
cld
addr16
mov
add
mov
push
in
mov
ret
imul
push
pop
xor
rolb
xor
mov
xchg
clc
sbb
sbb
popf
mov
mov
dec
push
out
jecxz
mov
shrl
sbb
shl
daa
inc
jp
hlt
pop
mov
add
jl
ss
divl
outsb
pop
add
hlt
pop
add
hlt
loope
inc
hlt
adc
hlt
pop
add
hlt
loopne
inc
hlt
ljmp
hlt
fldl
add
inc
add
hlt
roll
add
jge
add
dec
add
hlt
rolb
add
jge
add
inc
add
hlt
xor
add
fldl
add
or
hlt
mov
add
fldl
add
hlt
add
hlt
jg
add
fldl
add
or
hlt
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
stc
lret
outsb
in
hlt
add
stc
mov
add
lock
add
add
add
xorl
mov
add
add
add
hlt
add
xorl
jns
mov
lock
add
add
add
xorb
add
add
mov
add
aaa
and
jmp
adc
call
loop
incl
ret
pushl
add
das
iret
ret
jmp
add
mov
lock
mov
testl
add
xchg
ret
jmp
add
aaa
mov
add
rclb
add
aad
ret
ljmp
add
ret
ljmp
add
pop
popa
ret
ljmp
add
leave
push
ret
ljmp
add
fisubl
ret
jmp
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
add
cmp
add
push
or
add
pop
inc
add
add
mov
inc
add
add
fadds
jle
inc
add
cmp
add
add
or
or
or
xor
jge
ret
add
add
add
or
push
or
hlt
mov
notb
pop
cmc
xchg
gs
icebp
add
cmc
fadds
jecxz
jle
lret
cmc
sbb
add
cmc
sbb
cmp
and
push
cmc
and
add
cmc
mov
sbb
lcall
cmc
lods
add
popl
inc
cmc
nop
add
xchg
add
xchg
add
inc
add
stos
add
jge
push
cmc
jle
add
js
cmp
addl
cmc
test
or
add
add
add
add
pop
add
add
xor
lds
xor
fwait
add
pop
add
pop
dec
add
sbb
add
repnz
add
add
add
add
add
add
add
add
cld
add
add
add
rolb
test
incl
popl
in
add
add
jno
pop
add
add
movl
mov
rolb
test
sbb
imull
add
mul
add
roll
push
negl
add
sub
push
notl
add
idivl
add
add
sbb
movsl
notb
add
idivb
add
div
add
neg
add
testb
xchg
sbb
add
push
sub
int3
push
inc
add
push
dec
add
push
jae
enter
mov
add
and
xor
or
jle
or
xor
inc
add
xor
add
xor
xor
add
xor
loop
push
std
out
sub
ret
std
sti
xor
mov
xor
std
cmpsl
xor
std
test
stos
and
pop
lods
and
pop
scas
and
pop
mov
xor
mov
xor
mov
mov
or
add
jbe
mov
in
or
les
or
les
or
les
or
les
or
and
or
and
or
and
or
and
or
add
or
add
or
add
pop
aad
cltd
pop
fsub
lahf
pop
fnsetpm(287
xchg
fsubp
lea
mov
loopne
mov
loope
mov
loop
add
pop
nop
xor
pop
pop
xor
pop
pop
xor
pop
add
mov
pop
pop
xor
pop
pop
xor
pop
push
xor
pop
dec
xor
pop
daa
xor
pop
xor
pop
xorb
out
jne
jmp
daa
push
aad
sub
sub
pop
ljmp
adc
and
sbb
cs
adc
and
push
sbb
pop
push
or
pushl
add
fwait
add
mov
add
lods
add
lcall
cmc
xor
mov
cmc
xor
mov
cmc
das
push
lahf
cmc
cs
xchg
cmc
sub
push
nop
cmc
sub
inc
cmc
sub
dec
cmc
les
dec
cmc
ret
cmc
roll
cmc
mov
add
adc
mov
add
adc
mov
add
add
mov
add
hlt
mov
fxtract
aam
fdiv
roll
add
add
add
jle
push
add
add
add
add
add
mov
add
les
pop
add
add
mov
pop
add
add
add
add
add
add
jge
push
and
add
mov
add
add
cwtl
add
add
push
pop
add
push
or
push
or
push
or
push
or
push
or
nop
pop
nop
add
pop
push
add
jp
psubb
add
clc
scas
add
lock
add
test
add
lock
xor
movsl
add
xchg
add
clc
xchg
add
lock
add
add
addl
cmp
xor
cmp
clc
sbb
add
incl
inc
lock
inc
clc
stc
add
and
inc
clc
sbb
lock
xor
adc
add
daa
add
lock
clc
adc
dec
lock
add
or
add
or
add
or
add
or
add
or
add
loopne
mov
or
xchg
adc
mov
pop
or
add
or
add
or
fisttps
push
add
or
or
inc
add
or
sti
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
repnz
sub
in
hlt
das
add
add
sub
mov
mov
mov
lea
lea
lods
add
mov
push
imul
inc
pop
xchg
add
mov
dec
dec
stc
pop
cmp
add
cmp
add
and
sbb
add
add
jae
mov
add
je
sub
jae
sub
jbe
add
bound
add
bound
add
xchg
add
add
cltd
add
lcall
bound
pop
bound
add
mov
add
movsb
add
movsl
add
cmpsb
add
cmpsl
add
mov
add
bound
add
bound
add
pop
mov
mov
idiv
std
mov
testl
std
mov
idivl
ret
std
shl
std
ret
negl
std
std
mull
std
enter
mov
pop
int3
sti
or
lret
sti
call
lret
pop
sar
and
enter
mov
mov
xlat
test
mov
xlat
jb
lcall
cld
popf
xlat
lahf
pop
add
pop
cld
and
push
and
and
push
and
cld
push
and
cld
pop
and
cld
adc
stos
sti
or
movsb
sti
cli
and
sti
add
and
movsl
and
xchg
sti
or
and
sti
jbe
mov
or
lods
sti
sbb
and
sti
cmc
and
test
pop
sti
test
dec
sti
and
aad
dec
cli
cmp
add
je
dec
out
or
and
ficoms
and
fimuls
add
and
add
or
mov
push
and
aam
clc
and
icebp
and
flds
lcall
icebp
mov
and
stc
sub
sahf
jmp
add
dec
repnz
dec
ljmp
mov
add
and
add
and
unpcklps
add
adc
jno
and
and
and
and
push
and
andnps
push
orps
or
push
and
push
pop
and
push
pop
and
syscall
and
movaps
jo
add
adc
and
pop
and
minps
fwait
divps
xchg
mov
xchg
movlps
orl
mov
add
imul
fmull
sbb
hlt
sbb
sbb
aad
or
aam
or
adc
or
adc
or
sbb
or
mov
sub
iret
adc
or
out
or
or
mov
inc
push
mov
fiaddl
and
dec
push
stos
fnstenv
push
mov
add
dec
push
sbb
ja
push
sbb
push
data16
or
and
fisttpll
and
fimuls
push
or
push
mov
pop
push
mov
and
mov
inc
push
ljmp
push
add
and
push
and
push
repnz
or
add
inc
or
add
stos
or
es
or
lods
or
daa
cmpsl
or
add
lods
or
daa
cmpsl
or
es
or
and
or
daa
mov
ja
mov
jbe
movsl
or
es
xchg
add
sti
xor
dec
repz
add
inc
sti
xor
inc
jmp
add
inc
sti
cmp
adc
repz
add
ds
adc
aaa
add
push
add
add
fadds
add
gs
mov
in
add
mov
insl
add
mov
in
push
dec
in
push
add
repz
shl
push
mov
add
push
add
hlt
or
ja
or
data16
or
imul
or
imul
push
dec
hlt
push
push
cmp
hlt
adc
das
hlt
adc
repz
add
adc
lock
jecxz
adc
push
push
hlt
pop
push
fs
sbb
addr16
sbb
jbe
sbb
stc
hlt
sbb
call
hlt
sbb
push
hlt
pop
push
add
lods
adc
cli
lods
adc
repnz
adc
ljmp
and
repnz
daa
ljmp
sub
and
adc
ljmp
sub
repnz
adc
ljmp
xor
sbb
xor
cli
rdpmc
ljmp
xor
repnz
getsec
ljmp
cmp
cli
xchg
lahf
ljmp
inc
cli
dec
cmovno
add
movzbl
mov
mov
lea
mov
test
mov
push
xchg
mov
push
orb
push
push
fxsave
push
movswl
inc
push
cmp
mov
cmp
movsb
push
cmp
inc
pop
cmp
inc
pop
cmp
inc
pop
sbb
movaps
pop
mov
push
sldt
add
add
pop
add
sbb
add
dec
pop
dec
push
in
dec
push
out
mov
enter
rcll
or
sub
add
icebp
sbb
push
jmp
sbb
inc
stc
sbb
aas
icebp
push
xor
pop
xor
add
xor
stc
lds
cmp
ret
jmp
shll
stc
shll
icebp
mov
add
add
mov
xor
lret
xor
lret
jmp
leave
xor
xor
xor
lds
sub
mov
sub
mov
sub
mov
stos
out
mov
movsl
mov
lods
scas
xor
dec
or
movsl
or
xchg
or
xchg
or
cmpsb
or
mov
or
arpl
pop
xor
lea
pusha
xor
bound
fimuls
arpl
leave
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
mov
in
or
add
inc
or
in
or
in
or
in
or
in
or
fisttpl
jno
fmull
js
jg
mov
or
lods
or
and
adc
or
add
lret
adc
cmc
push
cmc
shl
cmc
lret
cmc
ja
mov
and
add
mov
mov
and
mov
and
mov
and
andb
push
and
and
loope
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
hlt
add
pop
hlt
add
add
add
pop
hlt
add
add
add
pop
hlt
add
add
add
lcall
add
testl
or
add
pop
int
add
testl
or
add
or
add
or
add
or
add
shl
add
or
add
roll
lods
add
push
lock
ret
add
testb
dec
add
add
add
add
add
testb
sbb
add
dec
lods
ljmp
add
lods
lcall
push
add
adc
add
add
add
sarl
add
ret
push
or
add
incl
xor
add
les
add
cltd
mov
add
mov
add
jbe
decl
add
mov
add
pop
mov
add
dec
mov
add
daa
mov
add
hlt
push
add
xchg
add
mov
add
jg
add
enter
rolb
add
jns
add
roll
add
mov
hlt
adc
add
mov
push
add
mov
push
add
std
add
hlt
scas
push
add
incb
add
orps
hlt
pop
add
hlt
adc
hlt
or
hlt
jno
add
dec
add
hlt
jb
add
dec
add
hlt
test
hlt
xor
push
add
inc
add
hlt
add
push
hlt
add
add
add
push
add
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
add
push
hlt
add
add
hlt
add
push
hlt
add
add
add
and
add
add
and
add
and
add
inc
add
add
inc
add
add
testl
testl
testl
add
add
mov
add
mov
add
mov
rolb
testl
dec
testb
mov
add
inc
mov
add
add
call
mov
add
jp
incl
add
add
jnp
add
add
add
inc
add
or
add
or
add
push
sarl
add
sarl
add
or
sarl
add
add
add
aas
add
or
add
sarl
add
adc
int
aas
add
test
jl
hlt
filds
push
hlt
jg
inc
hlt
lret
hlt
xchg
mov
hlt
cmpl
add
lret
jnp
hlt
or
hlt
out
inc
add
mov
jp
hlt
repnz
hlt
stos
jnp
hlt
lods
add
ret
jnp
hlt
fiadds
or
out
jnp
hlt
outsb
add
hlt
add
scas
add
hlt
cmp
hlt
movl
inc
hlt
filds
or
push
jnp
hlt
in
adc
xlat
mov
add
add
add
mov
and
adc
add
add
add
add
nop
add
add
jno
add
pop
add
add
mov
in
add
mov
int
mov
pusha
add
add
mov
leave
mov
lods
mov
push
mov
cmp
idiv
decl
jle
incl
clc
js
clc
add
popa
jle
ljmp
outsb
ljmp
clc
stc
mov
clc
cld
incl
cld
pushl
testl
inc
div
pushl
idiv
decl
incl
jle
ljmp
idiv
in
insl
pushl
clc
std
call
add
idiv
mov
std
idiv
decl
dec
pop
jge
inc
add
add
add
inc
add
or
push
addb
push
or
imul
inc
add
push
add
and
push
inc
add
inc
add
add
inc
add
push
sub
leave
addb
push
or
fldl
xor
add
xchg
push
push
pop
add
test
filds
or
mov
inc
add
add
adc
add
push
xchg
hlt
cmp
inc
hlt
imul
hlt
jae
inc
hlt
sbb
hlt
jnp
inc
hlt
mov
or
jb
push
hlt
out
inc
hlt
es
jg
inc
hlt
bound
add
hlt
fiaddl
pop
hlt
iret
addl
hlt
sbb
addl
addl
hlt
addl
hlt
mov
add
and
push
hlt
repz
sti
addl
add
xorl
movsb
add
add
xorl
xchg
add
add
test
add
add
add
push
add
add
test
mov
xor
int
fildl
add
add
test
leave
test
roll
add
xorb
xorb
test
decl
clc
ljmp
bnd
js
jmp
js
incl
lock
fdiv
std
inc
ja
dec
idiv
jmp
idiv
incl
js
pushl
lock
clc
ja
lcall
lock
js
lcall
add
stc
ja
jmp
add
icebp
ja
lcall
jmp
lock
jmp
inc
pop
add
clc
inc
xor
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
or
add
push
add
aas
add
add
add
add
xchg
cmp
add
sldt
mov
add
xchg
cmp
add
add
add
aas
add
jge
or
cmp
aas
hlt
sub
adc
xchg
lret
movb
hlt
ror
aas
hlt
push
add
hlt
mov
aas
hlt
lock
hlt
iret
leave
aas
hlt
in
push
hlt
aas
hlt
sub
adc
dec
leave
aas
hlt
pop
add
hlt
xchg
aas
hlt
imul
hlt
test
add
hlt
xchg
add
hlt
das
leave
aas
hlt
cmpsb
add
hlt
pop
leave
aas
hlt
cltd
add
hlt
dec
aas
hlt
mov
leave
aas
hlt
arpl
and
mov
flds
sbb
push
add
add
leave
sbb
sbb
add
add
leave
sti
add
add
add
leave
jmp
add
add
ret
add
enter
add
out
add
enter
add
add
fiadds
push
add
dec
add
add
mov
clc
add
sti
add
add
add
hlt
add
add
push
add
add
lret
add
mov
and
in
test
in
sarb
add
clc
stos
lcall
add
cmp
add
add
adc
push
add
add
add
xor
std
cld
cmp
jb
icebp
jl
add
dec
clc
or
test
add
jle
adc
xchg
sub
jnp
xor
str
testl
add
sldt
clc
adc
jne
add
ja
lock
or
add
aas
add
or
add
aas
add
pop
pop
or
adc
pop
or
pop
push
aas
add
pop
pop
add
push
aas
add
or
add
or
add
or
gs
aas
add
dec
aas
add
dec
aas
add
adc
imul
add
aas
add
push
pop
add
push
or
mov
aas
add
jge
aas
add
sub
add
sub
add
sti
mov
fcmovb
mov
xor
mov
fldl
xchg
xor
fs
pop
in
cmc
and
xor
les
dec
push
and
mov
fidivs
adc
ret
mov
mov
mov
repnz
test
movb
jmp
cmp
pop
js
lock
leave
mov
lea
mov
or
add
add
call
add
add
fcoml
call
cmp
or
mov
xchg
das
ret
mov
jae
jbe
jl
cltd
adc
test
nop
hlt
jl
js
movsb
adc
mov
stos
mov
dec
lea
arpl
cmp
adc
cmp
idivb
push
neg
adc
mulb
negb
dec
cmp
mov
cmpsb
push
je
add
cmp
dec
cmp
rorb
in
adc
fucom
and
xor
add
push
mov
add
sub
adc
into
outsb
daa
dec
dec
cwtl
add
jae
out
xor
push
popa
xor
push
inc
popa
and
xchg
cmpsl
xor
iret
arpl
jae
push
pusha
call
cmp
push
jnp
mov
sub
pop
add
shll
in
xor
sub
pushf
xor
lods
xor
adc
push
xchg
rorl
mov
mov
add
cvttps2pi
xor
cmovl
adc
leave
icebp
sahf
dec
and
pop
insl
aaa
mov
mov
mov
sub
paddusb
paddsb
paddb
push
or
sub
js
jns
cmpb
ret
and
add
test
inc
test
mov
loopne
pushf
add
mov
lods
add
or
int3
mov
xchg
dec
add
mov
push
jb
int
sbb
add
lods
daa
cld
lfs
idivl
daa
fs
inc
mov
clc
lds
jmp
dec
ss
gs
ret
mov
sar
mov
lret
push
add
xlat
inc
xchg
stos
lahf
mov
xchg
cld
out
sub
jno
mov
push
aas
cld
call
add
add
pop
cli
pop
addr16
pusha
sbb
fimull
or
scas
pop
cmp
xchg
enter
movsb
fdivr
addr16
loopne
pop
cli
in
add
hlt
jecxz
in
jecxz
pop
lcall
add
add
and
or
ret
jp
mov
or
mov
mov
add
add
jmp
cmp
pop
xor
gs
sub
add
jge
test
sub
aas
push
adc
dec
int
cmp
stos
dec
cmp
mov
test
cltd
cmc
add
jmp
shrl
mov
pop
testb
add
xchg
pop
xchg
pop
push
ss
or
gs
mov
cmp
hlt
sbb
or
inc
sbb
stos
lcall
pop
and
inc
pop
es
xor
sub
cmp
popf
add
add
aaa
adc
mov
das
xor
xor
inc
andb
mov
ja
clc
mov
lods
imul
or
add
gs
into
xor
xor
jne
xorb
mov
in
mov
std
das
leave
cmp
stc
loope
push
pop
push
leave
adc
aaa
movsl
cmp
lea
push
push
cmp
cmp
test
mov
jp
fstl
sbb
push
jne
imul
repnz
sub
and
add
hlt
mov
add
sub
push
add
ret
pop
gs
jp
adc
fldenv
sahf
sti
gs
mov
dec
cmc
lods
sbb
fcomps
imul
sbbb
cvtps2pi
ljmp
fimuls
in
mov
mov
fsqrt
sbb
addl
add
add
jns
shr
inc
call
mov
pushl
cli
add
xor
jge
sbb
mov
push
mov
push
xchg
cmp
ljmp
push
std
mov
ljmp
ljmp
out
add
ret
in
cmc
dec
fcmovne
iret
in
adc
xchg
jmp
shr
cld
test
add
add
sti
pop
adc
or
pop
mov
sbb
adc
mov
xor
add
push
sub
jmp
pop
popf
jmp
lcall
jl
mov
sub
outsl
shlb
adc
and
daa
das
testb
pushf
ret
or
add
push
jl
cmp
cmp
xchg
pop
scas
cld
sbb
mov
popf
xor
inc
lret
cmp
loopne,pt
outsl
cmp
inc
sbb
cmp
add
ret
add
sbb
insl
xchg
lods
and
xchg
call
inc
cli
movsl
sbb
inc
add
mov
cwtl
sub
stc
xchg
mov
adc
or
stos
jmp
jg
mov
ficomps
lret
fwait
mov
icebp
push
inc
mov
mov
adc
lret
push
stc
test
jge
adc
xor
sbb
std
outsl
lret
hlt
push
add
mov
pop
xchg
and
push
push
push
mov
add
sub
add
hlt
sub
add
sub
add
sub
add
hlt
pop
add
hlt
sub
add
sbb
add
hlt
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
call
aas
out
shrl
add
iret
sub
sub
daa
jo
xor
arpl
add
add
movsb
aad
inc
mov
int
cmp
leave
movsl
cmp
add
add
add
mov
add
mov
hlt
mov
scas
lock
pop
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
pop
push
xor
push
xor
dec
xor
inc
out
xor
ds
xor
fidivs
ljmp
add
xor
es
xor
push
into
xor
push
mov
xor
add
add
push
add
decl
lcall
or
decb
ljmp
out
ljmp
out
cmp
ljmp
ljmp
decl
lcall
or
decb
ljmp
ljmp
jp
ljmp
ljmp
decl
incl
fldl
add
fldl
add
int
add
int
add
popf
pop
add
popf
pop
add
lea
add
lea
add
popf
pop
add
popf
pop
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
add
sbb
add
hlt
sbb
add
hlt
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
hlt
push
pop
loope
cli
or
add
decb
add
sbb
adc
adc
sbb
rorl
and
and
sub
cmp
xor
xor
cmp
fs
arpl
pop
imul
jae
jae
pop
jne
in
jns
add
pop
std
arpl
stc
gs
pop
imul
in
jb
jae
pop
jne
in
jns
loope
jge
pop
test
xchg
movsl
mov
jnp
xchg
xchg
xchg
mov
outsl
rcll
push
leave
pop
cmpsb
push
lds
lahf
icebp
data16
fwait
in
jb
cmpsl
stc
outsb
mov
cmc
jp
loope
mov
aaa
imul
lret
inc
into
cmp
add
add
dec
inc
xchg
pop
fisubrl
adcl
pop
mov
out
test
ljmp
xor
out
sub
cli
iret
mov
jmp
icebp
add
faddl
cli
std
fcoms
push
adc
push
add
rcrl
out
or
push
ljmp
in
ljmp
mov
out
add
divb
testb
sub
shll
cmp
cltd
popf
cmp
mov
leave
or
test
shll
lds
mov
cmp
adc
inc
call
ror
in
test
andl
xchg
jnp
pop
jne
pop
mov
xchg
push
add
mov
inc
or
pop
stos
cmp
jmp
jbe
xor
push
sub
mov
inc
mov
mov
iret
cltd
enter
mov
dec
fisttpl
fsubs
jecxz
int3
es
adc
jmp
adc
out
add
icebp
repz
in
cmc
testl
add
add
std
dec
ss
dec
or
add
or
add
or
add
or
add
or
add
or
add
add
dec
or
add
add
pop
or
add
add
dec
or
add
or
add
or
add
or
add
or
or
add
xchg
xor
repz
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
add
hlt
mov
add
hlt
sbb
add
hlt
sbb
add
hlt
sbb
xor
jae
xor
sti
sbb
add
hlt
sbb
add
hlt
sbb
add
add
dec
xor
xor
ljmp
cmp
jmp
sbb
add
hlt
sbb
jmp
xor
sub
xor
stos
call
add
add
add
add
add
add
add
add
xor
sub
add
sub
add
lods
call
add
add
add
add
add
add
xor
jmp
add
hlt
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
imul
test
in
or
sti
add
jmp
in
push
sbb
decb
adc
add
pop
adc
add
push
adc
in
subb
adc
in
push
sbb
decb
adc
add
pop
adc
add
push
adc
in
subb
add
testl
jmp
testl
add
add
add
or
add
add
add
add
int
add
int
add
fldl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
sbb
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
and
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
and
and
sbb
add
negl
add
negl
add
icebp
sbb
add
add
sbb
add
sbb
add
sbb
add
add
add
add
or
mov
mov
xorl
add
mov
cmp
sbb
xor
push
jb
add
sbb
and
mov
push
add
int
or
add
rolb
cmp
les
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
decl
aam
pop
lock
lcall
fwait
cmp
lahf
decl
lahf
call
clc
lahf
pushl
lock
call
sub
call
jg
call
notl
add
add
xlat
incl
lock
jmp
lock
decl
clc
mov
add
mov
call
notl
add
pop
pushf
outsl
xchg
movsb
mov
test
pushf
outsl
jge
mov
add
pusha
jno
shlb
xchg
test
mov
jae
fs
fs
popa
shll
imul
outsb
outsb
insl
add
ds
push
sub
add
gs
jo
pop
fs
call
or
add
gs
dec
enter
push
jle
outsl
mov
jno
pop
cmpl
push
test
push
gs
cmp
mov
gs
hlt
sub
lahf
push
rcll
fistl
mov
add
js
pop
add
sub
pop
inc
std
out
add
hlt
in
lds
call
mov
dec
inc
fst
push
inc
push
sub
int
push
push
fs
adc
and
mov
es
scas
je
inc
stos
js
repnz
and
xor
shrl
add
hlt
add
filds
pop
jmp
fwait
mov
pushf
lods
into
call
filds
in
ret
movsb
mov
mov
sarl
rol
mov
iret
test
call
adc
lahf
rorl
push
movsb
or
pop
lods
add
arpl
cmp
add
xor
add
add
add
add
sbb
add
add
add
add
testl
nop
subl
test
les
xchg
mov
lea
ja
testl
push
mov
jno
push
xchg
push
xor
arpl
and
outsl
cmp
pushl
rol
ljmp
cmp
incl
jns
incl
loop
call
lds
call
les
incl
and
add
and
lds
and
aad
and
add
push
decl
add
add
add
sbb
and
or
push
sbb
or
data16
mov
arpl
add
fbld
imul
pushf
popa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
dec
push
adc
pop
push
inc
push
push
pop
ss
dec
push
xor
hlt
adc
hlt
inc
xchg
imul
push
iret
push
and
cmc
sub
hlt
pop
mov
enter
hlt
outsb
rclb
mov
add
adc
repz
pop
repz
sub
mov
add
fldl
jb
movb
hlt
les
hlt
mov
je
jmp
add
hlt
out
insb
hlt
testb
hlt
or
insb
hlt
flds
add
add
hlt
or
hlt
adc
hlt
sub
jne
hlt
add
xchg
xor
enter
add
ret
mov
add
add
mov
mov
lahf
shll
test
add
add
mov
int
lret
lods
cmpsb
leave
cmpsl
shll
add
mov
hlt
add
mov
mov
add
mov
dec
int3
adc
jmp
cmp
fistpl
cmp
aas
into
sub
xor
sub
mov
iret
dec
sbb
add
mov
dec
rolb
testl
jmp
lods
ret
dec
popf
testl
jmp
mov
pop
jmp
and
add
cmpsb
inc
mov
sahf
popa
mov
sub
dec
and
mov
cmp
jmp
cmp
add
and
add
scas
insl
or
xchg
push
sbb
ja
lds
fs
jo
outsb
popf
add
add
push
insl
je
push
jae
test
imul
outsb
imul
insl
arpl
gs
add
gs
je
jbe
arpl
data16
fs
push
incl
jle
outsb
jae
or
add
inc
add
inc
add
scas
inc
add
or
add
or
sbb
cmp
out
dec
add
add
and
dec
add
aad
cmp
add
hlt
roll
push
hlt
xor
add
push
add
add
hlt
xor
xor
incl
cs
dec
add
add
hlt
jle
inc
adc
insl
jecxz
mov
fistpl
add
add
add
pop
movsb
jae
sub
mov
inc
hlt
rolb
out
inc
inc
hlt
mov
inc
hlt
call
dec
inc
hlt
insl
cmpsl
inc
hlt
adc
hlt
fisubl
inc
hlt
fsubs
inc
hlt
lret
add
fldl
jb
adc
cs
add
add
add
in
stc
push
jmp
push
out
or
add
add
fwait
stos
sbb
or
add
add
mov
add
xchg
mov
add
jbe
push
push
ja
cmpb
mov
pushf
pusha
cmpl
imul
popa
jbe
add
mov
ret
into
lods
add
inc
das
cmp
sub
sbb
fwait
sub
and
add
add
mov
cmp
sub
testl
xchg
sbb
xchg
fldcw
cld
lods
adc
out
sbb
repnz
testl
push
xchg
mov
xor
testl
out
add
push
in
pop
or
shr
hlt
cmp
in
adc
aam
add
into
sbb
cmp
cmp
push
xchg
aaa
lret
push
ret
dec
inc
cmp
add
add
sbb
rcr
and
add
in
add
mov
js
cmpsb
add
cmp
cmpsl
ss
add
out
shlb
loopne
stc
jne
mov
add
mov
nop
stos
mov
leave
rcr
fsubl
idivb
std
iret
jmp
out
cld
mov
hlt
add
mov
roll
aam
lret
fcomp
fcmovu
sbb
mov
orb
hlt
sub
add
xchg
mov
mov
js
hlt
aam
jge
fstl
roll
adc
jl
and
hlt
xchg
jecxz
fwait
sbb
outsl
and
hlt
stos
jne
jnp
addb
add
hlt
fbstp
int
imul
shl
pop
lcall
sbb
clc
or
out
or
jmp
aaa
sbb
notl
loope
aam
or
add
add
mov
scas
movsb
inc
loopne
sar
ret
pop
test
setb
repnz
cltd
and
xor
out
decl
and
pop
lret
add
add
fpatan
sub
repz
add
in
fcmovu
rorl
aad
pop
xor
mov
add
add
add
repnz
or
xchg
or
out
and
mov
fistpll
shl
jmp
and
std
sbb
stc
add
push
loop
add
cmp
sub
decl
add
add
decb
cmp
fnstcw
inc
loope
pop
and
jo
xchg
ficompl
cwtl
lods
ja
mov
add
cmp
pushf
mov
lcall
daa
in
in
mov
sbb
dec
imul
shrb
xor
pop
or
ss
add
stc
adc
add
jb
push
dec
pop
dec
add
jl
jns
push
inc
into
add
add
test
insl
mov
lret
mov
xchg
mov
mov
jne
add
cli
insl
outsl
push
inc
jge
in
bound
add
addr16
lea
add
push
inc
inc
pop
lods
jp
dec
inc
dec
dec
push
dec
bound
pop
pop
dec
add
lsl
add
jp
mov
add
popf
mov
scas
cmpsb
cmpsl
mov
hlt
lret
jle
mov
jle
push
ret
jp
jo
bound
pop
pop
pop
mov
hlt
hlt
in
sarl
cltd
cmp
add
dec
pop
std
loop
inc
stc
movsl
es
inc
aad
or
push
add
hlt
sub
and
lock
testl
add
add
add
stc
adc
psubb
sbb
inc
or
pusha
fiaddl
scas
je
dec
xchg
and
add
nop
fcomps
xchg
popl
jge
cltd
movsb
mov
mov
pop
fimuls
mov
jmp
adc
adc
push
or
adc
add
mov
mov
jecxz
std
add
add
add
sub
add
enter
jmp
cs
idiv
call
mov
inc
add
add
sub
ret
mov
mov
lret
mov
enter
cltd
add
xchg
mov
call
outsl
lahf
js
cmp
pusha
scas
jg
fs
mov
mov
mov
mov
add
out
cmpsb
shl
add
pop
mov
loopne
dec
xlat
mov
push
jb
jbe
insl
xchg
jo
pusha
cltd
pcmpgtb
xchg
xor
shll
dec
iret
xchg
xor
inc
shll
inc
sarb
clc
push
aam
add
arpl
sub
imul
xor
cmp
jnp
push
add
add
into
rclb
pushf
roll
aad
lret
add
xor
push
or
push
adc
femms
add
stc
cld
adc
prefetch
fisttps
or
cli
sub
aam
aaa
xor
xor
cmp
shlb
xor
pop
enter
fcom
jle
fcmovbe
jp
ror
insb
in
mov
or
add
cmc
adc
or
in
or
add
aas
mov
fs
popa
test
mov
sbb
add
cvtpi2ps
sbb
sub
es
lcall
adc
add
and
sbb
add
sbb
lock
clc
and
xchg
imul
mov
lret
lret
pop
inc
sarb
push
cs
mov
add
push
xor
hlt
std
sahf
jno
call
nop
jns
add
call
aaa
cmp
inc
sub
inc
inc
jmp
int3
scas
mov
les
andl
imul
add
add
icebp
fmuls
in
test
hlt
cli
cld
cli
out
add
push
pop
push
imul
stos
dec
jle
mov
add
pop
xchg
jl
pop
lcall
addr16
inc
pusha
push
pop
dec
add
add
xor
cmp
aam
xor
cmp
add
outsb
mov
jp
popf
fs
adcl
push
outsb
add
ljmp
pop
jecxz
std
add
add
testl
data16
mov
bound
inc
xchg
fstps
add
rcll
ret
stc
leave
repnz
xlat
push
add
mov
gs
mov
into
aad
pushl
stos
stos
pop
add
add
das
xor
mov
cmp
add
notb
imul
or
pop
sbb
ffree
stos
or
clc
in
sbb
enter
int
stos
fdivr
lods
xlat
fcomp
or
iret
int
add
jno
lods
mov
or
xor
leave
adc
sbb
and
add
hlt
fdivp
loopne,pt
add
add
clc
sbb
add
push
add
add
and
add
insl
in
push
cmp
or
scas
pop
adc
out
jo
daa
jmp
add
add
lret
inc
mov
loop
fistl
xor
cwtl
test
ret
insb
add
hlt
sub
cmp
push
stos
movsl
jp
mov
jmp
dec
shrb
scas
lcall
add
hlt
add
faddp
int
jmp
cli
idiv
hlt
fucomip
fwait
or
in
fstpt
fld1
add
add
aad
loop
clc
push
rcll
loopne
fistps
out
adc
repnz
xchg
rcl
adc
mov
add
add
pop
addr16
push
pusha
dec
or
jmp
sti
mov
add
pop
add
es
xchg
imul
add
lahf
pop
xchg
cmp
stos
push
xchg
mov
pop
mov
jp
jle
push
jg
cmp
mov
add
testb
mov
xchg
ret
cmp
popf
pop
mov
xor
mov
sub
xor
add
add
add
mov
iret
sub
testl
push
xchg
je
push
jae
mov
or
mov
add
out
jmp
test
in
in
in
call
fcomp
jo
lret
in
ret
iret
rcr
outsl
iret
int3
add
mov
mov
popa
mov
mov
add
scas
lods
loopne
out
test
movsb
mov
scas
addl
mov
mov
icebp
out
out
add
pop
pop
push
cs
jmp
jne
mov
cmp
lcall
add
dec
cmp
sub
adc
in
mov
push
xor
lds
fsubs
dec
cmp
mov
inc
add
xchg
lcall
mov
popa
mov
xchg
adcb
sbb
add
adc
add
hlt
outsl
addr16
cwtl
xchg
gs
andb
mov
orl
imul
imul
dec
add
or
add
pop
add
add
add
add
add
insb
pop
xchg
pop
fwait
push
lods
imul
inc
cpuid
push
push
dec
pop
dec
pusha
insl
shlb
dec
hlt
add
ficoml
mov
mov
or
xor
hlt
add
xchg
in
call
cmp
jmp
mov
cmpsl
ret
mov
mov
enter
stos
lds
add
cltd
mov
xchg
ja
xchg
addr16
stos
ret
mov
aas
pop
xchg
movsl
jge
sbbb
mov
adc
pop
and
addl
jp
push
add
inc
aam
out
fisubs
and
inc
shrl
push
sub
lds
push
out
add
pop
in
testl
inc
out
jecxz
clc
add
popf
push
popf
add
push
sar
out
jecxz
lock
int
idiv
lock
into
mov
ljmp
xchg
rcl
mov
iret
sarl
ret
repnz
push
inc
rcll
popa
push
pop
lcall
imul
add
out
push
hlt
mov
cli
rol
mov
out
stc
mov
icebp
cmpsl
and
icebp
out
out
enter
in
fcmovbe
out
add
ret
mov
hlt
scas
psubd
push
stos
bound
fs
iret
inc
out
mov
outsl
xchg
movl
shll
xchg
je
gs
test
add
mov
in
jg
loope
cmpsl
push
stc
lcall
mov
hlt
jae
lret
sub
inc
fidivl
cmp
das
aam
fidivs
xchg
cmp
xor
daa
jmp
aam
in
fisubrl
ficomps
dec
and
sub
dec
pop
push
dec
push
dec
jb
add
push
sbb
sbb
add
or
xor
jle
xchg
jge
xchg
je
jnp
bound
mov
pop
andb
jbe
sar
movsb
inc
jb
dec
push
mov
xchg
pop
pop
ret
inc
mov
or
jo
sub
and
out
mov
mov
ljmp
pop
stc
push
or
iret
ret
mov
add
sbb
jge
xchg
cmpb
xchg
insb
stos
jns
jnp
push
subb
inc
popa
in
repnz
out
or
cs
add
jmp
pop
cmp
shlb
or
hlt
or
push
add
popf
cmp
fs
cmp
dec
cmp
fldcw
sub
mov
jnp
xor
xor
lret
stos
lahf
cmp
sub
xor
mov
movl
sbb
rcr
or
call
add
hlt
jecxz
adc
out
sbb
hlt
hlt
or
mov
mov
jg
aad
sub
add
push
add
outsb
outsb
mov
test
test
call
cmp
add
xchg
shll
sub
add
loopne
sub
into
sub
in
loope
add
enter
les
cmp
mov
out
fildl
xor
jmp
add
pop
jbe
outsl
aas
or
adc
outsl
aas
shl
fisubrl
lods
std
call
add
sbb
fidivl
adc
shl
lcall
in
scas
or
aad
or
hlt
rorl
cmc
add
movsb
sub
test
mov
pop
into
lods
mov
mov
xor
popa
ds
inc
xor
push
sub
push
test
hlt
add
xchg
jle
int
and
add
add
and
andb
add
add
push
addr16
push
pop
mov
inc
add
add
loop
and
fiadds
movb
or
call
dec
test
das
push
sahf
rep
pop
xchg
mov
add
add
sahf
push
addb
and
cltd
mov
pop
or
dec
dec
test
pop
dec
rolb
pop
lods
inc
add
add
inc
insl
in
jmp
sub
leave
cmp
add
adc
cmp
inc
and
fiaddl
pop
sbb
or
push
push
out
pusha
jno
jmp
int3
add
in
or
push
mov
je
mov
xchg
popf
jmp
popf
pop
pop
popf
test
jp
cmpsb
pusha
push
cmp
push
add
push
mov
sti
mov
cli
movsl
mov
icebp
out
fwait
and
inc
and
mov
add
add
sbb
push
decb
push
imul
adc
ljmp
cltd
mov
jge
mov
fwait
movsl
test
xchg
mov
rcr
lea
pushf
inc
aam
es
jmp
pop
mov
cmpsl
aam
jecxz
cmpsl
xor
add
sahf
out
adc
add
mov
inc
adc
decl
pop
hlt
call
add
hlt
pop
sub
hlt
adc
das
mov
fisttpll
jb
into
loopne
int3
int
insb
aad
lahf
pop
add
add
hlt
and
push
cmp
repz
mov
hlt
dec
push
les
das
inc
leave
mov
hlt
gs
fmul
jmp
add
js
not
out
lcall
xorl
int3
std
sti
outsl
add
xchg
popa
mov
push
mov
cmp
mov
push
mov
test
inc
in
pop
ljmp
hlt
add
sbb
inc
jmp
popa
int
addr16
jle
jo
inc
sahf
outsb
fstpl
xor
or
jne
jo
sub
hlt
add
add
jmp
mov
add
testl
xchg
pop
mov
movsb
decl
outsb
mov
jo
cld
daa
sbb
push
mov
xor
pop
dec
add
lcall
add
sarb
add
loope
add
out
add
or
cmp
fidivs
mov
arpl
cmp
mov
xor
testl
xor
popf
lods
cld
rcr
sti
hlt
in
das
sbb
push
add
sbb
pushf
pop
add
shl
imulb
stos
lods
jp
call
call
add
lods
mov
jae
movsb
test
mov
cwtl
hlt
cltd
lret
lret
loopne
leave
or
jg
shll
add
push
add
add
dec
pop
pop
and
push
or
pop
or
and
or
dec
dec
pop
xor
sbb
adc
sbb
xor
aaa
cmp
jg
cmp
jae
xor
and
xor
sub
or
jno
hlt
dec
add
hlt
dec
gs
dec
insb
push
dec
outsl
outsb
and
jbe
sub
jns
push
or
jnp
hlt
and
push
adc
cmp
outsl
arpl
jae
hlt
int
and
hlt
jmp
add
or
add
hlt
or
hlt
mov
cmpsb
enter
mov
je
xchg
gs
lcall
add
xchg
jns
mov
insb
arpl
gs
jle
jns
add
dec
outsb
pop
pusha
inc
js
imul
push
sbb
fmull
or
insb
sbb
es
jb
and
outsl
add
addr16
add
add
add
add
add
imul
adc
pop
ficoml
out
pusha
les
adc
scas
and
pop
mov
add
add
add
add
add
add
add
add
add
testl
jmp
testl
add
inc
add
rolb
adc
inc
add
ret
inc
add
inc
add
mov
cs
add
and
sbbl
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
add
mov
fldl
add
and
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
sahf
push
inc
add
push
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
push
inc
add
add
aas
add
cmp
add
add
add
insb
add
add
add
dec
inc
pop
pop
popa
je
add
add
dec
inc
hlt
mov
lea
add
movsl
aas
dec
xor
add
add
bound
data16
and
jno
inc
aas
jnp
hlt
jb
inc
hlt
cmpb
hlt
stos
gs
hlt
cmc
add
add
hlt
jmp
add
cmp
hlt
clc
add
add
testb
hlt
sbb
hlt
aam
jbe
aam
insb
hlt
enter
rolb
hlt
push
test
dec
pop
dec
jno
add
add
addr16
mov
adc
mov
les
sbb
jns
outsb
jl
adc
hlt
les
xchg
shrb
adc
hlt
les
cmp
outsb
jnp
adc
hlt
les
xchg
out
fstl
xchg
jae
xor
xchg
out
fnsave
inc
adc
add
mov
movsb
icebp
repnz
add
push
mov
mov
mov
mov
popa
mov
add
testl
leave
testl
leave
testl
xor
inc
add
mov
pop
sahf
inc
add
xor
in
add
imul
addr16
add
popa
inc
add
arpl
dec
add
inc
add
inc
add
mov
inc
add
inc
add
movsl
inc
add
notl
testl
mov
push
add
popa
or
add
mov
add
pop
dec
dec
outsb
push
pop
pop
push
outsl
outsb
arpl
or
pop
pop
inc
sbbl
add
pop
push
push
insb
insb
add
cmp
add
pop
pop
push
dec
pusha
je
popf
pop
add
ficoml
push
fistps
jne
jne
outsb
sti
pop
add
in
je
cmpsl
sbb
ja
jbe
bound
addr16
pop
insl
das
dec
pop
add
cmc
je
jo
push
das
ja
je
addr16
lret
mov
fsubs
add
cltd
test
hlt
stc
test
hlt
mov
jns
mov
dec
hlt
xchg
add
hlt
xchg
add
test
gs
jb
xor
lods
add
hlt
test
inc
hlt
movsb
add
push
add
hlt
dec
add
hlt
dec
add
hlt
push
add
hlt
ds
hlt
sub
add
hlt
sbb
hlt
incl
inc
hlt
or
add
hlt
fildl
add
push
add
hlt
add
hlt
or
hlt
or
hlt
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
mov
add
xchg
add
test
dec
add
cmpsl
dec
sub
sub
hlt
add
daa
push
add
pop
jo
inc
dec
sbb
pop
adc
or
add
sbb
arpl
pop
push
mov
push
add
add
jno
pop
push
data16
add
js
rcr
push
jae
lds
int3
cltd
js
aad
pop
outsb
into
testl
mov
inc
add
jne
int3
divl
loope
insb
add
imull
add
divl
divl
mov
insb
add
testl
pop
push
fs
dec
adc
gs
daa
add
add
add
fs
jb
push
outsb
inc
jmp
add
jb
adc
cmp
aam
add
sub
jb
imul
jb
arpl
jae
add
jbe
dec
imul
dec
imul
arpl
dec
add
add
pusha
insb
push
pop
gs
jne
gs
jno
je
pop
pusha
add
add
push
add
or
inc
xor
insb
cmp
outsb
xor
add
or
rorl
push
add
or
out
or
cmp
dec
add
or
hlt
or
hlt
or
hlt
incl
je
adc
hlt
add
outsb
hlt
or
hlt
into
add
std
add
mov
pop
hlt
lcall
hlt
enter
hlt
mov
push
hlt
enter
mov
imul
mov
push
hlt
mov
outsl
hlt
jge
imul
cmpsl
add
push
je
inc
add
hlt
dec
add
hlt
sub
hlt
cs
hlt
push
add
hlt
dec
add
hlt
dec
add
hlt
inc
add
hlt
add
add
add
jmp
outsl
sub
outsl
and
roll
roll
add
add
insl
mov
jmp
mov
cmpb
push
fwait
pop
stos
jg
dec
sti
mov
dec
or
add
lea
lret
pop
fs
call
add
enter
add
pushw
sti
jb
jle
adc
or
xchg
jo
cwtl
jns
cld
addb
daa
out
adc
add
inc
add
adc
inc
leave
call
xor
xchg
adc
sub
std
mov
je
jp
adc
repz
push
or
push
iret
stos
insl
push
call
lcall
jmp
sbb
stc
aam
mov
adc
lret
dec
adc
lea
push
push
dec
mov
add
movl
ds
add
add
mov
flds
pushf
or
je
out
incb
or
aas
adc
cmp
push
decl
mov
imul
pop
jo
add
or
leave
iret
out
push
xchg
jg
dec
std
lcall
mov
cmp
call
add
in
jnp
testb
pop
push
lea
clc
call
dec
add
orl
hlt
mov
inc
adc
incl
add
mov
fbstp
mov
mov
cmp
xchg
jno
ja
jle
lock
ja
push
or
cwtl
stc
xor
lea
jns
out
and
cld
sbb
xlat
decl
pop
les
push
cld
mov
lahf
adc
int3
test
shll
jnp
and
sar
jge
fs
push
notl
or
pop
jmp
ja
jge
cld
outsb
sub
jmp
std
push
mov
add
add
jle
std
dec
pop
mov
mov
outsl
fldenv
inc
add
add
jge
jle
stc
clc
dec
push
bnd
ret
sbb
shr
lret
add
stos
iret
ljmp
cmp
mov
cmp
imul
mov
out
cmc
add
bound
std
mov
mov
add
mov
add
fndisi(8087
call
mov
rorl
scas
cltd
add
idivl
xchg
insb
cmc
add
flds
out
jmp
jle
flds
xlat
mov
dec
cs
icebp
xlat
add
xchg
mov
xor
fcomps
xor
add
cmp
jmp
insb
ja
lods
fistpll
bound
mov
add
int
jmp
cmp
add
push
push
les
mov
fdivs
jmp
test
push
lock
hlt
jmp
push
inc
dec
xor
adcl
inc
add
bound
add
mov
push
mov
push
pop
add
cmp
add
push
dec
mov
add
and
insl
clc
mov
cwtl
out
popa
push
fucomi
call
pusha
mov
loopne
neg
nop
pop
faddl
mov
ja
test
inc
in
outsl
and
mov
addb
out
mov
xchg
xor
add
xchg
mov
cmc
fldl
inc
inc
je
cld
jns
daa
incb
inc
outsb
jnp
call
enter
dec
add
neg
ja
add
jne
mov
pop
add
inc
add
add
cmc
icebp
add
imul
jnp
hlt
faddl
jp
punpckhdq
sub
sub
insb
push
dec
clc
jle
fxtract
mov
leave
imul
add
divb
push
add
jno
clc
in
pop
out
adcl
cmp
arpl
test
gs
fdivp
add
sbb
out
js
cld
jno
jg
push
loop
add
jmp
loope
es
cmc
out
ret
add
arpl
or
movsb
ljmp
mov
call
add
adc
add
jmp
or
jns
add
jmp
cmc
dec
mov
testl
sbb
out
add
hlt
ja
jne
je
sub
push
lcall
xor
shl
ja
pop
mov
push
incl
out
jge
or
rorb
push
xchg
incl
adc
dec
call
dec
leave
or
add
mov
add
fdivrl
gs
std
call
loopne
rol
addw
je
daa
stc
mov
fldl
mov
mov
sar
ret
add
popf
fs
add
push
mov
pop
add
sbb
sbb
mov
and
cmc
jno
hlt
fs
jno
cli
adc
add
sti
pop
xchg
add
in
ja
shlb
push
inc
test
hlt
in
fistl
or
lea
sbb
dec
addr16
add
clc
sbbl
inc
cmp
inc
cmp
call
add
andl
les
add
testl
mov
sti
mov
clc
jbe
insb
inc
jg
sub
jmp
hlt
test
stos
adc
gs
jecxz
addl
call
pop
hlt
inc
je
les
out
orl
adc
imul
xchg
fildl
jmp
fildl
pop
pop
aaa
sbb
mov
cld
sbb
pop
lock
xor
arpl
adc
dec
loope
push
cmp
add
add
js
mov
lods
pop
pushl
testl
push
lea
test
inc
sbb
adcl
pop
or
xchg
pop
pop
popa
add
aad
ljmp
push
bound
or
js
clc
add
aas
das
int3
shr
aaa
mov
pushf
adc
push
int
lea
aaa
add
jb
or
out
into
dec
add
or
or
and
addl
adc
and
hlt
mov
pop
dec
and
pop
or
add
dec
cmc
mov
test
mov
mov
mov
call
sbb
lea
out
std
incl
add
je
fsub
add
fldl
in
ret
add
loopne
jmp
into
dec
push
mov
cmp
add
fs
add
dec
or
lcall
push
hlt
jo
jae
bound
ja
add
add
add
pop
inc
cld
ja
incb
pop
push
decl
or
inc
hlt
insb
push
add
jo
jae
push
add
xor
cli
out
inc
add
outsl
enter
push
add
int3
mov
hlt
push
add
jle
test
add
in
fidivrl
in
add
lcall
in
push
add
add
inc
pop
cmp
add
fdivs
in
push
pop
mov
pop
inc
inc
sbb
lock
call
sti
push
or
add
xor
add
mov
sub
pop
fistpl
call
jl
add
in
les
ret
xor
sub
add
mov
sub
aas
in
outsl
lret
je
lret
shlb
jmp
jno
mov
sub
sbb
xor
push
pop
add
mov
divps
fdiv
jle
and
stos
inc
or
pushf
out
or
loopne
mov
lret
shl
aaa
mov
loop
push
stc
xchg
add
lods
sti
sti
xor
popf
dec
in
testl
lret
and
testl
inc
or
add
add
jnp
push
add
mov
lcall
add
je
and
sbb
push
outsl
add
rolb
add
mov
adc
sbb
add
ljmp
gs
add
mov
sahf
loope
jl
jmp
mov
cmpsb
mov
mov
call
mov
sbb
fisttpll
lea
sbb
adc
in
cli
add
and
inc
push
mov
inc
and
mov
hlt
loop
pcmpeqd
jecxz
jnp
xchg
pushl
adc
pshufw
and
lock
push
adc
push
add
lea
in
add
xchg
packssdw
jnp
add
sbb
cmp
adc
mov
testl
cmp
jmp
push
lret
jns
push
jno
sbb
es
pop
jmp
hlt
pop
and
pusha
ret
je
add
dec
fmuls
call
add
jmp
in
inc
fstpt
dec
loope
and
test
and
add
sub
fsubs
lret
mov
loope
sub
in
sbb
insb
add
sub
add
outsl
loope
lds
add
jmp
jmp
jecxz
add
lds
inc
mov
mov
lea
or
cwtl
shl
xor
popa
inc
add
subl
in
xor
xchg
adc
add
jmp
idivl
pop
out
add
and
out
mov
out
add
push
cmp
ret
add
mov
jmp
mov
mov
lcall
inc
loop
pop
testb
lret
pop
mov
clc
test
icebp
enter
testb
add
push
fldcw
lret
imul
jb
outsb
add
fimull
fidivl
aaa
pop
add
rorb
decb
push
jns
add
sbb
jne
pop
add
cmpb
je
int3
arpl
add
jbe
mov
in
dec
mov
test
mov
sbb
adc
dec
xchg
add
psubsb
sbb
pop
or
xchg
mov
mov
jmp
mov
mov
nop
faddl
hlt
cltd
or
add
jae
pop
pushf
or
les
subl
mov
jg
adc
hlt
setle
cmc
in
add
sub
mov
mov
cmpl
repz
popl
fcoms
hlt
bound
repz
fsubp
push
mov
inc
inc
dec
test
add
hlt
pusha
push
or
add
fcoml
stos
or
inc
in
aad
incb
hlt
add
sbb
cli
dec
fimuls
arpl
popa
push
add
repz
in
in
hlt
add
add
sti
ret
lret
ret
sbb
dec
test
mov
add
aam
mov
in
adc
add
frstor
xor
adc
push
xor
add
call
add
xchg
scas
add
xor
jmp
mov
je
add
cli
inc
inc
mov
cmc
add
test
add
rclb
push
into
std
out
mov
mov
fimuls
lcall
dec
fdivr
mov
notl
icebp
imull
mov
testl
ljmp
pop
jmp
add
lea
ret
jbe
je
or
insb
add
add
das
or
and
lea
in
je
int
add
push
inc
clc
lea
ljmp
lea
cmpl
cs
ljmp
or
lea
in
incl
inc
lock
incl
jmp
inc
cmp
imul
pop
leave
popl
mov
hlt
push
cmpsb
in
sub
sti
test
xchg
adc
xor
xchg
out
add
hlt
fwait
xor
daa
lea
hlt
fldl
inc
rcrl
fsts
into
inc
add
push
ds
mov
inc
or
mov
lea
xor
add
mov
aas
push
sbb
dec
lock
xchg
fnstenv
dec
or
repnz
mov
sub
clc
xor
ljmp
movsb
les
hlt
add
mov
mov
cmp
mov
fcmovnbe
add
insl
fstpt
ss
cld
pop
call
inc
hlt
jge
xlat
add
out
xlat
jg
xlat
dec
xor
push
nop
idivb
dec
or
mov
cwtl
lock
add
aas
xchg
xor
out
fwait
clc
sub
add
and
stos
rcrl
in
test
sbb
clc
shl
or
inc
jmp
inc
hlt
sar
pop
clc
pop
jmp
fincstp
rcll
cmp
mov
add
add
xor
mov
movb
and
cwtl
add
pop
icebp
iret
fs
jmp
jge
fnstsw
pop
insb
mov
fistps
push
roll
ja
test
push
add
mov
add
cmp
mov
mov
jns
mov
mov
js
imull
push
aas
jno
push
insb
std
cld
imul
add
in
out
sahf
adc
add
cmp
push
or
xor
push
mov
or
mov
inc
and
push
test
nop
rol
inc
icebp
xlat
decb
movsl
add
mov
add
add
and
push
les
push
movsl
cmp
or
sbb
add
in
movb
pop
jg
add
loopne
pop
dec
add
mov
hlt
inc
and
test
sbb
jmp
mov
out
jns
fldl
mov
sbb
inc
add
inc
add
lock
dec
add
push
ret
mov
sbb
movsb
cmpsb
rcll
jecxz
pop
call
push
dec
outsl
mov
add
pop
aas
add
push
add
or
cli
jae
adc
and
fiadds
add
sub
adc
adc
dec
scas
mov
decl
mov
arpl
jmp
or
add
mov
gs
add
jge
and
jnp
and
pop
sub
add
stc
adc
dec
mov
iret
cmp
add
sbb
aas
adc
add
mov
sub
xor
pop
add
mov
dec
stc
xor
in
add
aad
or
xor
add
in
lock
in
add
pop
pop
sbb
mov
hlt
adc
mov
ret
jmp
jge
and
andnps
ficoms
js
out
orl
add
add
add
roll
xchg
mov
add
xor
cld
mov
lock
insb
insb
and
gs
add
testl
aam
loop
jmp
testb
xor
cmp
sarb
or
inc
or
clc
fdiv
add
add
jl
sbb
add
add
dec
add
push
and
add
aad
add
ds
insl
sbb
pop
sbb
mov
xor
push
push
and
push
push
and
movl
push
lea
in
daa
les
add
pop
in
sub
fimull
inc
add
jnp
pop
in
sbb
leave
sbb
test
sub
hlt
pop
sub
outsl
aas
sub
sbb
pop
sbb
loope
cmc
aas
hlt
loopne
add
fildl
test
sar
jns
sub
jle
adc
sbb
pop
mov
jg
test
dec
pop
add
cli
out
xchg
add
loop
es
and
lods
addr16
add
fiaddl
and
ret
jge
add
popa
les
rcll
int
add
fnstsw
loopne
push
jg
out
filds
test
pop
add
insb
ret
out
cmp
add
fadds
xchg
clc
add
and
pop
jmp
add
add
push
shr
xchg
sbb
bnd
ret
mov
enter
addl
jg
mov
add
in
cmp
in
hlt
add
ret
inc
and
add
xor
xor
mov
inc
hlt
subl
iret
notl
jle
int
or
pop
add
out
pop
ret
push
leave
stos
and
mov
and
push
rol
xor
mov
add
jb
xor
add
push
rolb
jle
ret
adc
pop
adcl
xchg
jno
or
mov
pop
add
stc
push
xchg
movsb
push
add
lret
push
adc
int
sbb
lret
dec
stos
add
sbb
pop
add
ret
dec
rorb
push
add
pop
leave
rorb
push
add
add
or
pushf
scas
push
sarl
or
mov
mov
fiadds
mov
scas
int
mov
push
je
icebp
mov
add
or
pop
xchg
mov
movsl
or
js
std
call
or
lds
xchg
add
dec
cltd
dec
rol
pop
into
mov
add
fildl
and
out
add
add
add
decb
inc
xchg
repnz
jmp
loopne
mov
jge
hlt
push
stos
repnz
flds
pop
insb
loopne
mov
insl
jmp
clc
mov
flds
xlat
mov
loopne
out
gs
adc
push
dec
push
testb
imul
in
out
gs
hlt
push
mov
sbb
shlb
add
jge
ljmp
sbb
cmp
xchg
std
icebp
mov
jle
jmp
jle
cmc
jp
adc
mov
in
sti
pop
data16
add
jnp
hlt
inc
sti
mov
jl
fldt
mov
jl
jnp
or
cmpsb
into
sub
or
rcr
into
jl
sarl
cld
sbb
add
cmp
adc
ss
call
fists
add
add
fwait
jecxz
dec
fucomi
jbe
add
inc
rol
lcall
iret
fisttpl
call
roll
push
ret
mov
push
stc
mov
testl
pushf
repnz
push
pop
fildll
inc
fcmovb
ss
cli
add
jnp
jae
add
xor
sbbl
jb
lcall
mov
testl
push
jb
test
push
clc
add
mov
aaa
add
inc
hlt
pop
roll
add
add
int
adc
add
mov
clc
mov
xchg
inc
inc
rcrb
inc
loopne
dec
je
add
ret
add
bound
mov
stos
mov
fnsave
add
push
sub
in
push
inc
inc
loopne
dec
inc
or
sub
xor
or
or
add
inc
test
adc
jmp
pop
or
sub
xchg
add
add
loopne
faddl
outsw
cwtl
shlb
popf
add
gs
popf
add
test
lret
pusha
les
arpl
cld
packuswb
inc
cmp
popa
mov
faddl
lea
lret
jns
dec
adc
enter
inc
iret
movsb
cmc
jl
out
jae
fcomi
lock
fcoml
pop
add
add
add
aam
sbb
push
xor
dec
int3
push
mov
clc
fisttpl
stos
movl
adc
add
sub
pushf
hlt
jbe
or
xchg
or
xor
sub
jg
xlat
lret
push
jmp
testl
mov
lock
sub
add
repnz
jo
add
test
out
pop
xchg
or
test
cmp
out
mov
je
fldcw
daa
push
ud0
notl
inc
jmp
idivl
call
in
je
sahf
push
roll
roll
jmp
and
mov
sbb
ret
fucomp
dec
clc
cmp
mov
inc
add
lea
sbb
fidivl
sbb
scas
loopne
inc
mov
jmp
xorl
lea
shrb
aad
mov
stc
mov
stc
mov
stc
mov
stc
imul
lea
test
add
divb
out
inc
and
mov
or
aaa
xchg
add
sbb
pop
dec
outsl
int3
dec
push
in
into
add
out
mov
inc
inc
fmul
jmp
testl
dec
push
mov
xor
inc
testl
hlt
lea
jge
add
imul
adc
fldl
pop
xor
cli
gs
cmpsb
mov
mov
add
add
sarl
call
sarl
cli
leave
jnp
mov
popl
jl
je
jle
aad
add
mul
divl
clc
fwait
je
inc
aad
lcall
sti
lcall
aaa
sbb
aad
sbb
xorb
ja
dec
add
pop
das
add
js
mov
pop
aas
add
js
movsb
nop
out
cs
jp
or
or
add
push
mov
mov
sbb
loopne
sti
add
stos
jnp
call
add
and
test
sub
cmp
mov
lds
jmp
js
jl
jl
in
test
add
add
add
push
lock
adc
add
gs
jge
mov
sbb
jmp
or
fsubrl
clc
cmp
ds
aaa
in
das
loope
jmp
loope
add
xor
stos
test
add
sbb
adc
into
nop
mov
mov
cmc
add
scas
lcall
mov
mov
stos
addb
cmc
add
lcall
inc
jmp
adc
cmp
fstpt
add
add
push
enter
inc
add
ftst
pop
add
pop
adc
cmp
cmp
fmuls
int
push
push
sahf
pop
and
fldl
push
fiaddl
mov
call
sbb
jae
adc
add
add
lods
adc
mov
data16
add
jb
into
adc
cli
mov
dec
add
call
hlt
and
add
lock
sub
stos
add
jge
pop
sub
adc
xor
add
adc
pop
adc
imul
xor
and
scas
jle
cmc
stos
add
add
lods
jg
sbb
js
sbb
jp
jmp
ret
gs
inc
data16
push
sbb
addr16
sbb
out
ds
stos
ret
adc
mov
repz
jle
hlt
stos
add
daa
mov
dec
add
and
jns
call
call
xor
adc
mov
add
hlt
sub
add
add
mov
cwtl
call
push
inc
pop
sbb
jecxz
popf
push
xor
insb
les
xorl
pop
mov
pop
jmp
xchg
stos
mov
sub
xor
jo
fdiv
fcmovu
js
int
fwait
sbb
add
subl
mov
xchg
call
cld
mov
mov
add
mov
test
call
add
ss
ret
push
adc
and
sti
scas
adc
ljmp
add
mov
idivb
mov
out
scas
add
cmp
or
pop
stos
fimuls
cmp
cmp
lahf
dec
push
mov
insb
jnp
in
push
and
xor
inc
and
aam
push
mov
or
inc
pop
mov
sbb
inc
and
mov
dec
popl
dec
and
loopne
or
test
shrl
sub
or
push
jle
mov
decb
add
pushl
out
add
push
add
bound
xchg
push
push
mov
jg
clc
push
jne
push
inc
pop
push
hlt
pop
outsl
repnz
mov
mov
int3
mov
rol
sbb
add
stos
stos
aam
stos
add
xor
adc
xor
mov
je
std
stos
cmp
lods
add
xor
adc
mov
add
add
mov
or
cmc
stos
mov
jge
out
lcall
test
lods
add
jg
dec
push
xor
mov
das
mov
call
add
add
addb
add
inc
mov
add
add
add
std
mov
cld
lret
add
add
push
lock
or
xor
sti
subb
lea
inc
lea
cmp
in
push
insl
inc
mov
adcb
cmc
mov
adc
iret
and
in
mov
add
pop
cmp
subl
push
add
icebp
dec
in
xor
xor
jbe
push
xchg
jecxz
dec
int
mov
enter
mov
add
or
loopne
cltd
xchg
roll
icebp
insb
mov
mov
mov
fimull
inc
sub
sti
roll
ror
aas
mov
outsl
dec
and
js
jmp
fsub
cmp
xor
cs
mov
rolb
fcmovnu
mov
rcr
out
out
add
add
les
jecxz
and
add
repnz
test
push
test
shll
ljmp
push
call
dec
fisubrl
add
mov
cmp
dec
mov
idivb
lea
or
jne
xchg
add
push
mov
add
cld
and
mov
and
gs
add
jns
and
jns
and
lea
mov
add
mov
push
call
cmpsl
add
pop
hlt
sub
add
stc
repnz
pop
fcomp
stc
sbb
clc
sub
add
cwtl
loope
mull
les
adcl
jmp
ljmp
xor
add
aaa
add
call
out
outsl
call
or
repnz
lret
push
lods
inc
inc
lods
add
pop
inc
and
in
sti
push
lea
loope
arpl
add
jg
out
outsl
call
stos
and
add
ret
push
sub
hlt
dec
bound
dec
sub
sub
dec
ss
and
test
mov
insl
mov
inc
pushf
inc
jmp
filds
xor
mov
add
add
add
ret
rclb
jno
pop
add
int
repz
scas
in
mov
pop
insl
aas
mov
inc
cmp
cmpsb
adc
adc
add
mov
add
out
and
js
pop
pop
mov
cwtl
out
sar
push
orl
jmp
testl
fldenv
inc
addb
add
testl
add
test
negl
push
pusha
mov
lcall
adc
cmpsb
ljmp
out
and
mov
jmp
incl
jbe
aad
pop
in
aad
inc
out
dec
leave
stos
movsb
jg
push
mov
add
dec
pop
push
fidivl
pop
and
dec
cld
and
xor
push
pop
and
dec
cld
and
and
add
add
xor
dec
cld
and
jb
cmc
sbbl
fisttpl
add
lea
mov
xchg
shll
in
jmp
sarl
mov
inc
call
enter
dec
pop
add
xor
add
mov
in
pusha
xor
pop
pop
test
loopne
lea
fwait
push
lea
xor
testb
or
hlt
daa
les
js
add
hlt
testl
or
add
mov
or
cmp
loopne
xor
and
cmp
in
mov
or
mov
rorb
xor
push
fsub
pop
add
mov
out
hlt
fwait
add
jg
test
hlt
shrl
cmc
fwait
stc
pop
fcomp
adc
add
add
lret
mov
inc
cmp
stos
jle
hlt
fwait
add
sti
mov
push
jge
int
jmp
popa
mov
mov
sbb
lds
cld
arpl
adc
mov
push
mov
mov
mov
jmp
std
adc
add
pusha
aas
fmuls
ljmp
or
lds
jg
filds
and
add
adc
add
push
out
push
in
test
lahf
test
add
dec
add
push
imul
inc
push
ss
jmp
je
je
adc
in
outsb
inc
and
ffreep
jae
icebp
in
pop
std
repnz
mov
ja
push
pinsrw
jl
and
inc
mov
mov
inc
add
xor
xor
push
lcall
fistpll
mov
mov
sbb
jbe
and
pop
scas
dec
lds
test
subl
add
jl
and
pop
jecxz
call
jmp
lock
jmp
clc
filds
or
jp
and
jp
lea
movsl
push
push
std
ja
and
jae
add
cmpl
jbe
xchg
or
das
mov
and
or
add
pusha
and
popf
add
dec
test
push
lea
mov
test
fsubrs
mov
cmc
rolb
dec
jp
test
pop
mov
movsb
cs
adc
mov
mov
pop
cld
add
fisttps
fdivrp
mov
mov
lahf
mov
adc
inc
repz
insb
inc
stc
jmp
jae
clc
xchg
or
add
xor
and
out
add
cmp
cld
decb
or
add
sbb
ja
fisttps
fldl
add
ficoms
cld
ret
and
and
add
shl
xchg
add
add
add
sbb
cmp
push
ss
mov
cld
jno
cld
jnp
or
repnz
push
in
jmp
jb
lock
xor
mov
adc
ljmp
aaa
jnp
std
adc
push
ja
ljmp
or
pop
mov
jb
je
test
hlt
add
dec
or
call
add
hlt
sbb
je
mov
repz
add
xorb
xchg
add
add
mov
push
shll
add
je
rcl
scas
out
jo
in
sub
jmp
clc
jg
jns
mov
jmp
je
fcoms
lods
jmp
idivl
cmp
add
pop
popf
pop
sti
clc
add
sub
notl
or
mov
mov
sahf
sbb
test
inc
stos
inc
cmp
xor
pop
stc
mov
mov
call
into
sahf
inc
int
out
fiadds
add
mov
or
add
or
cmpb
in
push
call
popa
enter
popf
ljmp
push
add
rorb
push
jmp
pcmpgtd
push
add
lds
fiadds
jbe
and
jge
je
or
push
lret
adc
test
inc
push
cmp
je
dec
call
hlt
into
ret
fnsave
push
jg
out
insl
pushf
jb
dec
mov
cmc
mov
outsl
roll
add
out
out
fiadds
add
movsl
rolb
adc
add
fdivl
pushf
add
test
roll
andl
inc
add
popa
push
call
inc
dec
pop
sbb
pop
add
jae
je
push
dec
sti
cmc
fwait
jnp
in
cwtl
xchg
jnp
sbb
cmc
add
add
jge
pushf
xchg
scas
out
into
add
add
lret
add
hlt
ja
scas
outsb
ret
add
das
add
sbb
and
aad
add
inc
hlt
test
incl
jmp
push
push
jb
je
and
hlt
add
out
imul
pop
jg
cmc
or
lds
cmc
add
jle
aam
mov
pushf
or
hlt
add
inc
mov
dec
ss
jge
push
add
call
ret
movsb
cmp
push
xchg
testb
movsb
adc
stc
std
sub
xchg
add
idivl
daa
testb
in
stos
call
push
sar
arpl
mov
inc
stos
inc
or
jmp
jns
mov
adc
jmp
add
add
in
fldl
pop
addb
push
add
je
push
add
scas
and
xor
andl
jne
loopne
or
jge
sti
add
mov
sub
or
sub
out
arpl
mov
sbb
add
jne
lcall
add
in
clc
jmp
add
test
inc
les
push
push
push
jne
incb
jb
fisttpl
mov
lea
aam
push
dec
pop
cmp
xor
pop
and
shr
push
mov
cmpsl
divl
aas
add
popf
push
push
ret
and
aam
add
pop
test
inc
and
lea
add
cld
and
dec
sbb
lods
and
inc
and
in
sbb
jb
mov
mov
inc
hlt
or
jnp
adc
add
sbb
xor
loopne
jg
adc
push
call
hlt
cltd
jmp
dec
fcoms
push
mov
insb
jg
cmpsb
call
xchg
call
add
out
loopne
add
repz
jle
loopne
jle
loope
add
add
mov
dec
ljmp
pushf
orl
clc
popa
mov
push
pushf
add
jnp
call
ja
mov
jg
loope
jnp
loope
pushf
jae
jmp
pop
cld
cld
outsb
cmp
ljmp
jmp
loope
sbbl
sbb
or
mov
add
insb
in
call
fwait
inc
add
idivl
cs
bound
insb
in
call
pop
inc
add
idivl
das
cli
mov
lods
mov
push
jb
push
push
insb
mov
dec
inc
stc
pushf
leave
iret
pop
cmpsb
test
dec
add
jb
dec
rcrl
jmp
add
mov
stc
add
test
loopne
jmp
jecxz
lea
cmp
jne
cld
lcall
and
test
push
mov
cmpsb
add
ss
faddl
incl
or
call
das
enter
lret
add
pusha
and
addl
jg
loope
add
loop
jae
inc
daa
incl
sub
jne
sbb
adc
invd
mov
sbb
and
add
adc
jmp
and
pop
add
hlt
sbb
and
testl
push
xor
test
lock
cmp
ljmp
daa
xchg
push
and
pusha
cli
out
icebp
add
xorl
mulb
test
je
mov
add
add
add
notb
subl
or
add
sub
add
leave
ss
push
outsl
rcll
dec
add
call
add
add
push
fwait
test
rcrl
jl
mov
jb
fwait
dec
jne
hlt
lea
mov
jge
add
lea
dec
add
imul
add
jmp
add
lds
out
pop
mov
stos
sti
mov
mov
incl
hlt
xchg
das
lock
sub
xchg
int3
call
cmpsl
or
mov
add
call
xor
add
js
lcall
dec
je
enter
sarl
add
cmp
sbb
cmp
inc
in
ficoml
inc
mov
stc
push
and
cld
mov
dec
test
call
jg
mov
mov
mov
out
xchg
mov
out
lock
gs
sbb
aas
js
leave
call
push
mov
add
lods
and
push
jb
in
jne
or
add
outsb
lods
sarl
jae
inc
out
out
iret
mov
jb
adc
out
mov
std
jne
adcl
and
out
cltd
add
add
aad
call
xlat
ret
jmp
push
repnz
adc
lret
in
xchg
add
test
jmp
call
mov
int
incb
cld
ret
pop
lcall
mov
cld
push
push
dec
idivl
sbb
sbb
outsl
jge
inc
mov
bound
lods
add
and
pop
mov
adc
lds
movsl
cmp
inc
xor
andl
push
add
ret
jae
sub
jecxz
test
dec
call
jle
movsl
pop
ret
shl
jmp
daa
cld
add
dec
mov
imul
repnz
movsb
pusha
or
jmp
das
clc
shrb
clc
sub
xchg
sbb
mov
jmp
add
mov
negb
hlt
sub
add
add
les
aas
mov
dec
jg
xchg
push
lret
cmpsl
stos
sub
add
add
xor
sahf
adc
xor
mov
ror
xchg
mov
sbb
pop
jnp
mov
ror
jmp
mov
add
jne
and
divl
push
add
add
add
test
lock
ss
adc
jbe
call
push
sbb
mov
es
testl
xlat
push
insl
int3
add
in
ret
std
add
push
testl
and
cmp
in
aaa
mov
or
push
push
cwtl
fdivrp
push
jne
decl
popa
mov
add
dec
cld
mov
out
push
mov
mov
idivl
dec
mov
or
inc
iret
jmp
enter
rcr
leave
ret
push
subl
push
je
lea
fisttpl
je
cltd
out
and
mov
jne
mov
jmp
fisubs
pop
or
mov
hlt
ljmp
jle
stos
push
aaa
pop
adc
test
scas
aad
sbb
fwait
incb
roll
popf
outsl
push
add
scas
push
inc
hlt
nop
inc
loopne
sub
or
jg
xchg
dec
xchg
lea
fdivl
jecxz
cmc
jno
pop
push
fstpl
cmp
jge
rcrb
add
add
in
inc
leave
ss
xor
lret
cld
es
dec
xor
mov
sbb
mov
lcall
jnp
movsl
or
ljmp
mov
add
xlat
test
mov
mov
test
popf
pop
test
jmp
jo
adc
dec
ret
xor
add
cld
lods
hlt
add
xchg
js
sti
pop
out
and
mov
mov
sbbb
leave
hlt
add
lds
roll
into
and
cli
aaa
mov
pop
or
add
or
testl
add
mov
mov
cmp
mov
mov
call
cli
add
xchg
sbb
test
cmp
pop
adc
rcll
testb
push
add
sub
or
pop
or
inc
mov
inc
js
cld
add
cmp
add
add
xor
mov
and
pop
cltd
xor
inc
xchg
jae
xor
daa
inc
cmp
je
pop
push
add
es
add
push
dec
or
movsb
incb
mov
imul
in
or
lret
push
mov
or
repnz
lret
test
cmovno
or
jg
cmc
cmp
or
ffree
andl
mov
push
pop
es
lods
mov
lods
add
pop
pop
out
push
mov
adc
pop
add
out
stos
je
cmp
or
add
sub
les
mov
cmpsl
mov
and
fstpl
add
push
mov
test
lea
add
dec
imul
add
outsb
test
dec
lock
dec
add
pop
pop
and
std
sahf
adc
inc
mov
add
sub
mov
add
cmp
loope
imul
mov
add
add
in
hlt
ss
add
mov
aad
test
fcmovnb
push
and
jb
adc
mov
add
les
dec
cmp
rep
repnz
and
imul
xor
add
testl
icebp
pushf
loopne
incl
jmp
or
in
xorb
add
add
add
je
lcall
add
in
lahf
mov
cmpsl
and
add
and
out
pop
mov
dec
mov
pop
add
jmp
and
adc
jb
cwtl
test
in
jmp
or
add
gs
adc
out
incb
push
cmp
or
std
subb
pmulhuw
pusha
push
dec
call
dec
into
mov
push
pop
testb
aam
push
ficomps
cld
sahf
inc
add
aad
pop
mov
add
ret
pop
jge
add
mov
add
xor
or
ret
adcl
cmp
nop
insl
cmp
orb
inc
icebp
or
jmp
aaa
testb
movsl
push
mov
movsb
adc
lods
inc
add
aaa
add
xor
hlt
sub
aam
lcall
pop
or
ljmp
add
pop
mov
inc
and
push
push
jo
add
hlt
push
jns
fisubs
movsb
sbb
adc
cltd
jae
mov
or
xchg
adc
jns
fistpll
push
insl
add
push
rorl
mov
inc
sbb
xor
add
aas
hlt
inc
adc
int3
add
dec
cmc
add
jg
or
add
hlt
pushf
inc
cltd
mov
jmp
sub
fnstenv
push
aaa
jmp
add
jae
call
mov
add
xor
cwtl
sub
pop
cmc
out
hlt
pushf
loop
hlt
add
mov
aam
xchg
filds
subb
pushf
nop
jns
hlt
push
jmp
adc
ljmp
dec
or
cltd
add
loopne
lods
out
daa
xchg
cmp
idiv
aam
add
imul
bound
sahf
orb
add
sbb
jge
loope
xchg
je
pop
sbb
mov
xchg
stc
mov
mov
in
mov
call
inc
xchg
jmp
testb
xchg
test
ds
or
add
adcl
call
jb
add
gs
test
and
pop
add
imul
scas
inc
add
mov
add
add
and
in
jns
mov
add
popf
pop
xchg
std
adc
mov
mov
push
bound
and
fmuls
mov
mov
push
out
dec
lea
fnstenv
push
fnstenv
push
push
rorb
mov
lea
inc
adc
xchg
mov
mov
add
in
repz
js
mulps
pop
cmp
fidivl
or
dec
jno
fistpll
and
lock
fiadds
push
add
xchg
xor
cwtl
pop
add
add
fs
lea
add
cmpb
sbb
mov
clc
mov
add
dec
stos
ret
add
imul
and
pop
xor
outsl
add
ret
das
mov
sbb
add
repnz
cmp
add
decl
into
adc
sbb
stos
ret
enter
les
add
pop
add
movsl
xchg
inc
nop
repz
add
sbb
rcrl
enter
insb
addb
call
adc
jb
hlt
add
ret
ljmp
xor
arpl
xor
adc
mov
aaa
ret
fwait
pop
or
cld
add
jnp
adcb
stos
xchg
xor
cmc
xor
add
add
iret
ljmp
adc
aaa
sbbl
lea
sbb
jo
add
add
je
or
adc
or
add
mov
or
leave
xor
add
add
aam
repz
jmp
divl
mov
lcall
mov
jmp
idivl
cltd
pusha
stc
stos
sti
add
mov
call
mov
scas
mov
cmc
ljmp
out
inc
add
leave
js
mov
sub
fstpl
inc
int3
add
cld
pop
pop
xchg
xchg
inc
sub
inc
inc
pushf
add
cld
or
notb
push
ficoms
cmp
int
jbe
lret
std
jb
pop
std
aas
add
js
movsb
pop
inc
add
or
addb
push
or
xchg
adc
ds
movsb
and
hlt
movsb
addl
test
sbb
push
jg
loopne
add
jg
sti
test
pop
adc
popf
int
mov
lcall
add
int
call
aaa
pop
lret
call
sbb
jnp
xchg
jmp
nop
inc
add
push
xor
cmpsb
add
aas
push
sbb
sarl
std
mov
add
cmp
out
lret
and
pop
cwtl
jle
fdivs
std
push
hlt
pusha
rcrb
adc
jle
scas
dec
lret
add
out
mov
or
adc
mov
or
fwait
mov
rorl
popf
daa
sub
scas
cmp
push
call
movsb
test
mov
arpl
lret
mov
movl
mov
xchg
sub
mov
mov
mov
mov
lods
aaa
xchg
adc
dec
sub
leave
andl
or
and
mov
hlt
bound
push
cltd
xor
lods
data16
pop
jl
mov
imul
add
jp
xor
mov
enter
mov
loope
lods
mov
push
adcb
insb
or
add
jge
xor
clc
ret
mov
pop
mov
push
shlb
in
daa
inc
icebp
sbb
es
lock
lea
xor
mov
cmp
pop
mov
push
push
in
stc
cld
jmp
mov
push
pusha
inc
add
add
in
je
call
add
nop
mov
xchg
sbb
fdivrs
xor
std
mov
flds
add
fwait
outsb
sahf
scas
jge
mov
jne
lea
add
mov
subb
fnsave
sahf
jge
enter
inc
mov
push
popf
xchg
mov
cld
xor
add
add
xchg
push
fidivs
sahf
jg
shlb
inc
outsl
clc
lahf
out
add
addl
add
mov
sbb
pop
add
test
loope
cwtl
add
testl
sbb
add
xor
rcll
aaa
jns
xor
add
pushf
push
inc
call
mov
pop
fiaddl
jge
xchg
add
fldl
jno
lea
add
add
sbb
add
ret
adc
inc
hlt
lret
test
mov
arpl
inc
xchg
pop
cmc
add
mov
daa
add
cli
outsb
jp
push
std
xchg
mov
inc
jmp
adc
insb
addr16
ds
fcoml
aas
jmp
add
jge
and
and
dec
fs
cld
push
jp
fdivl
repnz
jmp
outsb
inc
clc
pop
jae
cwtl
loop
xchg
cwtl
xchg
push
mov
je
xor
cmp
pop
add
sub
jge
add
das
je
add
inc
jno
mov
mov
cmp
push
push
aam
idiv
and
inc
in
lds
sbb
or
add
cmp
or
add
jo
pop
std
mov
nop
insl
dec
mov
jns
pop
mov
mov
adc
jle
add
add
movups
decl
js
std
push
hlt
outsb
adc
pushf
or
add
pop
ret
jae
sbb
dec
jns
arpl
arpl
xor
inc
call
ret
jae
sub
dec
dec
cltd
in
add
pop
ret
jae
sub
dec
mov
add
clc
inc
jge
push
clc
mov
movsb
push
outsl
cmp
push
jns
jb
jecxz
xor
add
add
shl
ret
jae
loopne
mov
sub
inc
stos
insl
lcall
cli
xchg
mov
xor
inc
hlt
lret
test
inc
jnp
jge
call
sbb
add
add
pop
test
cli
ja
push
mov
arpl
inc
xor
add
imul
pop
test
iret
orb
add
or
jmp
xor
inc
insl
push
dec
hlt
add
ret
sbb
jns
xchg
iret
mov
aam
pushf
sti
push
call
add
mov
loop
mov
fmuls
out
add
aaa
xchg
mov
data16
dec
out
call
jmp
mov
pop
icebp
add
pushf
pop
test
dec
add
inc
out
rolb
fs
add
imul
cli
push
jle
out
jl
fs
adc
lock
pusha
je
cli
out
insl
cmp
loope
add
cli
jge
mov
sbb
pushl
push
adc
mov
dec
mov
test
repz
test
jne
std
decl
push
test
inc
repz
xor
std
jmp
mov
or
addb
inc
or
jp
add
shll
dec
imul
pop
int
lea
movsl
int
add
imul
push
xchg
int3
cwtl
jmp
add
aad
mov
mov
mov
and
xchg
mull
add
je
ret
push
pushl
lcall
jecxz
mov
mov
xchg
movsb
ret
lods
sti
hlt
imul
loopne
xorl
xor
jns
sbb
mov
imul
xor
imul
add
adc
inc
add
jns
xchg
mul
outsl
xor
rolb
imul
or
imul
jae
mov
add
sub
addl
sbb
or
pop
orl
and
add
xchg
xchg
test
inc
pushf
push
stos
out
ja
faddl
add
loopne
xor
adc
call
stc
loopne
hlt
jg
inc
add
add
test
push
scas
testl
aaa
sub
mov
jbe
pop
sbb
pop
push
sbb
rorl
jo
sub
xor
add
test
testl
out
add
add
add
push
test
sbb
mov
in
add
mov
dec
xchg
popl
pop
jmp
fwait
mov
call
in
mov
into
pop
add
cld
add
je
hlt
pop
inc
add
mov
dec
pop
call
popf
loop
jbe
sbb
push
sti
nop
sub
jb
push
inc
and
adc
lock
adcl
add
into
add
std
inc
in
xorl
xor
jne
sti
vpshuflw
test
adc
jmp
mov
pop
cmpps
fstl
mov
insb
xchg
add
sub
pop
mov
add
jae
fwait
adcl
inc
add
jg
lcall
push
dec
add
repnz
push
inc
loopne
cmc
imul
push
jns
shlb
pop
sub
or
cmp
ljmp
hlt
in
sbb
xchg
add
fidivrs
shll
dec
jno
inc
adc
jge
lcall
sar
xchg
test
pop
add
js
fnstsw
add
ss
outsl
jo
xchg
or
sahf
jbe
or
test
jl
sti
fcmovnb
int
hlt
lea
or
inc
in
nop
add
sbb
jle
shlb
add
mov
repnz
insb
mov
call
add
loopne
mov
jb
mov
sub
sbb
mov
aad
or
imul
inc
pop
jo
mov
ja
pushl
sar
jbe
pop
push
std
ud0
jbe
test
in
and
std
fcompl
subl
out
and
hlt
add
inc
jmp
lds
jmp
lret
jp
lds
xor
fs
inc
lock
jbe
pop
sti
mov
std
adc
add
sub
add
test
out
add
and
jge
lret
in
shl
lea
adcl
cmp
pop
mov
xor
nop
push
add
fs
mov
dec
cld
lret
pushl
mov
push
cli
xchg
call
add
shll
pop
pop
push
rorb
push
inc
repnz
adc
jle
pop
adc
add
inc
or
push
or
jmp
clc
ljmp
push
incb
out
out
movsb
add
js
clc
push
outsl
mov
sub
mov
add
xor
jns
stc
xchg
xlat
incb
or
dec
fbld
push
and
hlt
imul
inc
jno
add
test
lcall
and
in
test
or
pop
mov
hlt
pop
inc
pop
iret
and
pop
hlt
adc
andl
mov
shrb
cmp
insl
mov
jns
fdivrs
cmp
shr
add
jo
mov
clc
xor
mov
cmc
addl
call
ja
inc
cmc
cmc
jecxz
scas
fcmovne
js
inc
inc
rcll
imul
and
stos
js
jl
icebp
daa
mov
jge
imul
mov
mov
or
jmp
jl
ret
xor
push
pop
cmp
add
add
lock
bound
lock
push
inc
frstor
pushl
pop
mov
rclb
outsb
inc
and
xor
in
mov
jbe
jo
or
pop
mov
pop
pop
push
bound
icebp
outsb
leave
or
and
push
or
push
clc
aad
jb
pusha
popf
push
clc
add
test
add
shl
mov
add
xchg
cld
icebp
push
add
dec
push
xor
std
das
dec
rorl
inc
clc
daa
add
jbe
pop
add
push
or
ret
testb
add
test
cli
push
addr16
inc
loope
std
or
test
popa
sbb
je
lret
dec
mov
adc
mov
lret
shll
lret
shrl
add
mov
xchg
ss
popf
outsb
add
mov
mov
lea
add
loop
and
loop
push
outsl
scas
jl
lock
je
ljmp
movsb
rorl
idivl
testl
hlt
out
jae
repnz
pop
ja
jge
out
call
add
add
scas
push
lds
jge
repnz
pop
daa
sub
sar
aad
fcomps
je
sbb
call
add
decl
hlt
roll
call
jl
jge
out
aas
in
mov
add
or
add
sti
jl
lock
icebp
ljmp
mov
mov
add
ss
div
xor
inc
lret
jmp
aas
call
jl
cwtl
cli
ret
sti
mov
xchg
cli
loopne
icebp
fsubp
mov
aam
mov
or
add
ret
mov
jg
subb
shll
add
incl
pop
add
fs
lock
cmp
add
xchg
add
fbld
push
imul
fadd
cld
repz
insl
aam
call
mov
vandnps
mov
push
mov
jmp
jl
fistpl
lds
push
inc
mov
icebp
testl
pop
mov
std
aam
adc
mov
das
fistps
fiadds
xchg
add
je
add
pop
mov
add
or
lea
or
pop
pop
add
cltd
out
jmp
inc
fimuls
popa
addb
mov
cld
shr
out
cmp
add
leave
arpl
or
pop
mov
fildl
add
je
cwtl
xlat
cld
call
jae
fldl
adc
out
std
call
add
lcall
inc
or
add
push
lcall
add
shlb
push
jo
adc
call
push
ret
test
subl
js
push
dec
inc
aas
aaa
out
out
sub
add
js
jg
pop
push
pop
mov
mov
add
sbb
adcb
lcall
xchg
iret
mov
push
mov
push
negb
mov
sub
pop
int3
jmp
inc
imul
push
ret
daa
or
pop
scas
inc
test
add
or
fmull
hlt
add
fs
call
add
dec
pop
mov
jb
add
push
cmp
mov
js
call
add
hlt
sub
shrl
mov
js
aam
sahf
push
ror
call
adc
add
inc
sbbb
shl
jg
pop
adc
sub
bnd
pop
js
xchg
or
sub
dec
dec
cmp
decl
cmp
fucomi
jmp
cmpl
adcl
push
notb
mov
call
add
add
shll
jmp
enter
jecxz
call
pop
jo
in
sar
cld
xlat
outsb
adc
out
ljmp
dec
test
and
or
outsl
push
mov
add
ljmp
sti
mov
outsl
pop
mov
jge
lret
pop
arpl
in
outsl
push
imul
out
xor
popf
ret
cmc
orl
lret
fcomps
jg
inc
lea
cmp
pop
or
dec
push
call
pop
int3
jmp
jne
notb
dec
arpl
adcb
daa
mov
add
insl
notb
add
inc
scas
sbb
add
int
lret
movsl
lsl
add
xorb
xor
test
add
mov
xor
xchg
repnz
fistpl
adc
pusha
test
scas
imul
inc
mov
dec
xor
push
fstpt
test
addr16
jb
sub
inc
xor
in
dec
pop
insb
call
jno
adc
scas
xor
inc
mov
cmp
jge
add
aaa
flds
jl
cli
jecxz
mov
cmp
es
mov
xor
push
add
mov
mov
inc
testl
ret
add
sub
lea
cmp
fnstenv
test
push
lea
cmp
roll
cmp
orb
push
movsb
xchg
add
xor
pop
jge
and
addl
dec
fists
daa
sbb
lea
xor
andb
dec
mov
xchg
ljmp
es
inc
fdivl
aaa
test
sub
aas
insl
sub
xchg
and
sub
xor
pusha
adc
insb
jmp
add
jns
mov
aam
sub
aaa
fstpt
adc
jmp
icebp
lock
cmpsb
or
xchg
in
rclb
cld
add
icebp
je
xlat
sbb
imul
rolb
jmp
add
pushl
jl
pop
lret
outsl
jae
sub
push
ljmp
adcb
or
ret
pusha
outsb
bnd
push
outsb
bnd
add
std
decl
sub
or
lahf
dec
je
pop
cmp
insb
add
fisttpll
pop
sub
push
add
incl
dec
push
cmp
fs
add
or
push
push
or
pop
xor
les
inc
iret
test
stos
mov
cmp
push
hlt
scas
aad
clc
inc
add
cmpsl
lock
sub
sti
cmpsl
cli
cmp
jmp
jno
test
pushl
clc
push
adcl
pop
ja
jae
sub
addb
adc
enter
inc
jo
je
ret
inc
jo
imul
add
jmp
outsb
ret
mov
je
xchg
pop
ljmp
cld
addb
add
add
add
hlt
push
ficoml
fwait
xor
sbb
xor
and
inc
cmpsl
push
pop
testl
jl
test
and
imul
repnz
jb
outsb
mov
pop
xchg
dec
call
dec
jo
jnp
push
inc
adc
cmp
in
sub
push
aam
xlat
jo
std
jno
out
pop
into
dec
xchg
imul
jo
shrb
add
add
sbb
fcomip
sub
mov
jmp
hlt
subb
jo
xorl
nop
cmpsb
out
push
add
jnp
jae
jo
and
mov
mov
decb
popa
sub
push
movsb
hlt
ja
xor
cltd
dec
fcoms
not
out
xchg
add
pop
scas
mov
rorl
call
add
add
bound
adc
jae
lds
icebp
add
xchg
cld
call
jecxz
push
xlat
aaa
push
inc
lock
or
cld
mov
cmc
aam
add
aaa
mov
jmp
call
xchg
ds
inc
jmp
inc
push
aaa
sbb
inc
test
movsl
xor
test
add
add
mov
cmpsl
adc
int
add
int
test
int
add
test
add
test
or
add
add
add
push
sub
push
jmp
ret
incl
add
aad
add
push
enter
hlt
pop
add
cmc
pop
xchg
xor
fadds
jns
adc
add
ficomps
mov
lods
pop
pop
fstpl
test
adc
jg
inc
jmp
mov
fildl
mov
sbb
mov
xchg
add
xchg
test
add
imul
inc
decl
push
ja
jnp
js
push
in
pop
repnz
add
add
movl
inc
aad
adcl
repz
aaa
stc
aas
pop
hlt
add
jle
adc
call
push
lock
jno
jecxz
hlt
aam
jns
call
sub
jmp
test
gs
add
jnp
adc
add
mov
lds
xor
popf
stc
adc
mov
add
imul
out
jge
cmc
cmpl
in
add
rorb
push
dec
js
mov
dec
std
add
icebp
lock
int3
add
xorb
pop
ljmp
push
fs
mov
ja
hlt
outsb
mov
cmc
outsl
xchg
call
add
inc
imul
imull
cmc
add
not
fsincos
jb
and
stos
fwait
inc
std
or
add
jle
aas
add
sub
add
addr16
push
adc
jno
or
mov
in
jno
aaa
std
adc
enter
outsb
xchg
mov
xchg
jecxz
jmp
sbb
inc
fsubp
arpl
sahf
popf
cli
incl
fmulp
out
insl
or
ret
mull
test
out
cmpsl
add
inc
push
mov
jecxz
or
cli
add
cmp
popf
pop
add
sbb
lcall
dec
push
test
xchg
stc
xorl
add
clc
add
movl
cmp
inc
and
into
or
aaa
je
dec
in
or
adc
add
inc
add
aad
ja
cli
jno
fsubr
mull
out
hlt
out
jecxz
add
xor
fcmovne
push
cld
push
jg
push
pop
add
negl
rorl
mov
inc
jae
inc
push
jbe
xlat
out
fstl
jp
outsl
add
les
push
xor
jg
js
add
cli
inc
sub
fistps
sbb
pop
test
add
adc
fucom
in
test
mov
xchg
sbb
and
xchg
jnp
pusha
popa
ret
in
movsb
mov
add
add
shlb
divl
ret
sbb
mov
add
pop
mov
sbb
cltd
sarl
or
add
add
push
or
mov
out
cmp
je
or
imul
popa
cmc
mov
out
enter
cmp
add
cmp
hlt
das
popa
jle
divl
je
pushf
clc
ja
aaa
popa
xchg
xchg
mov
adc
sub
inc
mov
lahf
xchg
push
rclb
add
xor
ret
add
in
jg
mov
out
jge
add
andl
inc
int
inc
addb
test
popa
push
insb
add
push
add
add
sub
je
push
lahf
or
push
cmp
push
gs
loopne
enter
push
add
sahf
push
add
dec
fimull
xor
and
xchg
add
mov
add
mov
call
add
mov
loope
or
addl
jmp
pop
pop
adc
jb
dec
cld
or
rolb
arpl
hlt
ljmp
fsub
add
mov
add
test
je
outsb
pop
fnsave
add
scas
aad
out
sbb
xor
in
add
hlt
add
ljmp
add
mov
je
loop
cmp
stc
sub
add
inc
mov
xchg
add
pop
iret
pop
out
or
testb
ljmp
ret
adc
and
shlb
rcr
push
mov
insl
dec
mov
add
sti
mov
or
jp
mov
clc
add
lcall
mov
sbb
ret
out
adc
and
sbb
add
mov
xor
push
in
fmull
in
mov
xlat
jle
fiadds
les
hlt
stos
ret
cmpsb
sub
fnsave
pop
fsts
add
cmp
test
std
testb
add
mov
bound
insl
sub
testl
loope
xorb
testl
and
mov
push
mov
mov
enter
dec
mov
mov
push
insl
ljmp
imul
sub
xor
sub
getsec
xchg
and
inc
jmp
or
add
add
fdivrl
fidivs
adcl
sbb
inc
fisttpll
je
shrb
push
pop
test
mov
aad
dec
test
ss
sub
inc
movsb
adc
stos
mov
dec
add
sub
divl
bts
push
mov
rorl
add
int3
mov
fldcw
ret
xchg
mov
pop
orb
hlt
mov
jp
hlt
insl
add
add
pushl
adc
jmp
pop
daa
hlt
insl
test
repnz
mov
pop
test
sbb
xchg
cmc
insl
add
xchg
insb
add
ja
out
add
out
pop
fs
sbb
push
mov
add
rcll
divl
xor
dec
ret
insb
in
lcall
pop
cli
mov
repz
data16
pop
rorl
or
push
sti
orb
addr16
hlt
add
pop
sub
add
add
out
hlt
or
testl
add
add
inc
or
out
inc
jmp
loopne
lea
adc
imul
jne
hlt
add
out
add
fs
cmc
add
mov
sub
out
add
pop
jbe
enter
cwtl
mov
push
out
push
out
cmp
inc
jns
cmc
add
push
insl
cmp
mov
pop
or
bound
pop
inc
rcrl
das
inc
lds
out
push
add
jb
insl
subb
mov
aam
out
aas
jmp
mov
or
call
mov
shl
or
js
or
xchg
in
push
add
testl
mov
rcl
std
inc
add
mov
xchg
inc
adc
push
and
ljmp
mov
into
dec
and
fists
fs
inc
pop
mov
mov
lock
push
jecxz
inc
in
or
rcrl
or
or
jge
fisubrs
add
dec
adc
std
fs
add
aas
decl
mov
or
shl
pop
subb
push
push
jmp
mov
imul
loopne
xchg
dec
xchg
add
pop
insb
pop
je
shll
popa
data16
dec
ds
lret
nop
push
decl
push
mov
inc
add
jg
ja
mov
loope
xchg
dec
or
mov
xor
fucomip
push
inc
mov
insl
add
js
add
hlt
add
add
ljmp
dec
add
cmpb
xchg
pop
sub
faddl
ja
enter
test
aad
aaa
or
mov
or
hlt
jmp
imull
aam
cmp
int
fmuls
mov
icebp
loope
add
add
adc
enter
sub
mov
scas
daa
jge
clc
addl
imul
sub
sbb
add
pop
mov
testl
ja
push
jmp
loopne
mov
hlt
xor
dec
shll
mov
push
inc
std
outsb
shr
add
push
lea
inc
push
jb
imul
ljmp
mov
add
mov
push
mov
push
push
idivb
fisubrs
add
popa
or
enter
bound
call
dec
mov
sbb
cs
inc
cmp
inc
and
je
jo
cmpl
decl
jmp
or
mov
add
loopne
std
rorb
jg
test
or
cmp
jp
sbb
add
or
jmp
es
or
incl
push
adc
sbb
adc
pop
push
mov
mov
out
mov
pop
add
add
pop
add
ja
add
je
pop
add
hlt
cs
cmp
pop
add
stos
popa
or
jg
mov
outsl
mov
mov
arpl
jne
ret
add
lea
in
movq
mov
adc
stos
cli
or
add
fiadds
popf
aas
pop
decb
outsb
in
decl
in
imul
jg
pop
loopne
sar
pop
test
pop
hlt
fdivr
sbb
push
movsl
pop
cmpsl
sub
call
stc
pop
push
lea
jno
int3
add
add
ret
aas
lret
mov
out
inc
jmp
iret
movsb
pop
out
mov
aad
shl
add
add
add
ds
fiadds
add
movsl
add
mov
add
jle
ljmp
add
push
pop
mov
pop
xchg
jecxz
push
mov
lds
lock
lds
mov
icebp
mov
lret
sbb
pop
xor
testl
inc
push
dec
jle
std
mov
int
push
fisttpll
adc
pop
dec
push
jae
or
sti
dec
cmp
or
int
ss
xchg
add
mov
xorps
std
shr
sarb
add
xchg
jmp
cld
mov
mov
mov
pop
fimuls
data16
fucomp
push
je
mov
and
int3
pop
add
jmp
add
test
push
sarl
sarl
shll
cmp
sti
sbbl
jmp
jno
xchg
mov
arpl
fcmovbe
cwtl
add
add
mov
add
insb
or
mov
es
sub
jp
js
notb
outsl
jno
sub
push
mov
push
incb
jnp
dec
sub
mov
pushf
arpl
insl
sub
xor
aam
repz
mov
or
sub
cwtl
iret
fwait
xor
insl
sub
add
aam
xchg
jnp
sti
pop
xchg
call
add
hlt
pop
mov
lock
rcrl
test
add
and
add
aas
stc
pop
pop
lcall
push
jle
call
scas
testb
jle
ss
call
dec
push
or
cmp
push
dec
add
enter
sti
jmp
das
dec
movsl
push
jno
lret
lcall
hlt
call
cmc
inc
mov
incl
pop
orl
rolb
out
cmp
outsl
rolb
add
add
jp
pop
inc
fchs
pop
inc
arpl
out
add
push
add
push
mov
pop
loop
add
imul
andnps
into
call
js
pmaxsw
insl
std
mulb
or
stc
mov
es
test
lock
leave
pop
push
stc
jns
loope
xchg
inc
in
gs
mov
inc
sarl
sub
push
jb
lods
mov
call
lock
je
test
pop
pop
mov
stc
fdivr
pop
adc
dec
test
icebp
xchg
or
add
add
add
nop
decl
sub
sar
or
mov
ljmp
mov
inc
dec
xchg
push
mov
mov
push
dec
pop
std
jne
push
mov
cmc
pushl
into
mov
add
mov
sbb
mov
pop
ret
es
clc
push
je
fcmovu
std
jb
inc
mov
mov
or
mov
ffreep
fisttps
out
add
dec
lock
je
roll
hlt
ret
jno
incb
xchg
dec
sbb
bts
ljmp
push
push
mov
mov
jge
aad
add
push
push
push
xor
inc
cmc
sub
out
pushf
push
clc
je
mov
pusha
inc
test
dec
inc
add
mov
inc
loopne
data16
fdivr
jl
add
repz
pop
jge
lock
cld
mov
xchg
sbbl
mov
add
dec
dec
cld
fs
add
or
fldl
add
dec
mov
add
test
scas
cli
adcb
dec
push
test
add
orl
add
call
mov
testl
idiv
jge
pop
jl
insb
add
add
mov
mov
add
and
in
jle
jg
hlt
fidivs
outsl
testl
jnp
push
add
inc
mov
push
mov
mov
mov
jb
jbe
call
add
in
push
mov
and
mov
dec
jmp
pop
add
push
sahf
ja
dec
adc
insl
or
bound
testb
fadd
out
mov
pop
xchg
add
ds
mov
push
insl
push
dec
sahf
jmp
loope
mov
push
mov
rcr
cmp
movmskps
adc
int
inc
and
xchg
push
lea
push
push
cli
xor
mov
mov
or
xor
call
adc
or
jmp
sbb
enter
hlt
and
cmp
xor
cmp
sub
jmp
inc
push
add
sub
je
clc
pop
insb
dec
subl
inc
cmc
cmpl
pop
hlt
pop
fdivr
movsb
jmp
push
adc
inc
out
lcall
repnz
jge
call
dec
test
jecxz
add
add
fcomps
hlt
pop
xor
imul
inc
rorl
jecxz
add
mov
imul
test
add
pop
fdivrl
sub
popa
mov
and
add
push
sub
add
movb
test
add
call
jp
pop
dec
or
add
jge
mov
nop
incl
jp
std
add
jp
or
out
dec
lock
xlat
xchg
jp
add
jno
into
jmp
inc
jb
test
jmp
xor
inc
imul
outsb
mov
or
in
imul
sub
subl
pop
inc
push
add
jns
lock
sarb
fs
or
mov
and
enter
add
add
testb
push
or
sbb
testl
arpl
testb
fisubrl
scas
fistpl
dec
xor
cmpsl
fwait
testl
cs
mov
sub
inc
bound
and
and
jns
aad
inc
out
in
add
insb
mov
sub
add
ja
jmp
add
jmp
cld
fdivs
lret
or
jecxz
jne
sahf
mov
inc
add
inc
sub
int3
inc
insb
aas
sbb
test
std
call
xchg
data16
hlt
enter
pop
js
decl
mov
xchg
movntps
and
cld
pop
insb
add
mov
jle
je
cld
pop
or
inc
xor
lahf
lret
cmpsb
ret
or
add
shr
hlt
pop
xchg
add
sbb
adcb
sbb
jg
cmc
loope
inc
je
add
cmp
push
psrld
rolb
mov
xchg
out
dec
call
outsl
je
mov
test
add
sub
pop
in
sub
test
fwait
jmp
ljmp
pop
xor
mov
scas
dec
add
mov
jmp
ja
cmc
add
ret
gs
dec
inc
aad
ss
adc
xor
mov
imul
dec
sbb
sti
adc
or
sub
lahf
jmp
dec
ljmp
dec
xlat
inc
push
in
xchg
testb
sti
imull
add
imul
push
add
or
jg
inc
adc
dec
jp
cmpsb
xlat
out
in
xchg
testb
in
add
pushf
mov
scas
jb
jns,pt
bound
inc
mov
add
or
shr
pop
inc
pop
xchg
scas
inc
push
pop
cli
dec
aad
cmp
loope
sub
scas
inc
cmp
int3
adc
out
pop
mov
add
cmc
in
iret
adc
jle
shrb
adc
andl
inc
push
or
insl
nop
inc
cs
mov
daa
ds
andb
mov
je
in
xchg
lcall
je
add
aas
test
in
lcall
clc
std
sub
xor
in
pop
push
aad
ljmp
push
cmp
cmp
jle
pop
cmp
std
inc
je
sti
jp
pop
insb
fimull
or
sbb
add
sub
push
xchg
sti
ljmp
mov
or
lret
cmp
add
cmp
cmp
lcall
cmp
cmp
add
dec
imul
and
and
hlt
xor
cmp
or
add
mov
cld
sub
add
jo
inc
adc
add
hlt
sub
add
testl
repnz
add
add
jae
jbe
aaa
jle
enter
mov
rolb
ja
and
jo
inc
mov
testl
addl
js
or
add
sub
bound
std
sti
add
clc
jns
loope
dec
add
and
add
jg
cmp
inc
lock
add
pcmpgtw
push
inc
mov
hlt
hlt
call
add
sbb
cld
ds
cmpl
aas
fisttpll
std
packssdw
jecxz
fidivrs
inc
gs
or
insl
mov
in
add
xchg
mov
in
call
xor
call
rclb
push
push
inc
incb
arpl
stos
jbe
or
jne
sti
out
mov
inc
mov
mov
add
fidivs
add
or
add
outsl
cmp
scas
cld
in
pop
jmp
lods
incb
ljmp
jmp
pop
pop
loop
add
push
add
stc
lods
adc
push
in
add
shll
cmp
inc
jne
mov
add
add
rcll
orb
mov
jge
xchg
add
add
push
add
stc
cmp
nop
inc
add
mov
mov
add
loope
cmp
add
jge
or
test
mov
shlb
inc
enter
mov
repnz
mov
loope
mov
add
add
test
cli
test
inc
insl
push
jle
add
incb
adc
roll
test
lock
shlb
loop
sub
mov
mov
mov
inc
fsubr
xor
mov
hlt
sub
pop
and
adc
out
cmp
lock
mov
add
jg
shrb
repz
inc
mov
add
test
xor
mov
add
xor
js
sub
imul
lret
cmp
cmpsb
addr16
push
push
jae
hlt
xchg
js
clc
cmpsb
rcr
clc
xor
rorb
lahf
fcomi
negl
add
mov
or
insb
lret
dec
int3
out
adc
repnz
bnd
pop
xor
lea
inc
jl
cmpb
mov
andb
jl
mov
xchg
call
jne
sarl
jo
jno
test
inc
and
je
cmp
push
aaa
cs
fidivrl
jno
sti
jo
xor
sbb
mov
dec
jnp
inc
fldcw
jb
cli
mov
mov
jp
xor
ret
and
out
jns
or
insb
dec
push
sbb
adc
cmp
sub
idivb
xchg
pop
test
dec
std
sbb
decb
jecxz
add
push
dec
and
dec
and
inc
popf
adc
popf
mov
leave
sub
dec
cmp
add
add
dec
decl
rclb
cli
lcall
je
dec
les
sub
mov
mov
mov
mov
add
adc
jmp
adc
inc
or
mov
fimuls
hlt
es
mov
mov
xor
add
hlt
sub
mov
sub
andl
es
xor
stos
cmp
inc
enter
dec
pushl
sub
inc
and
out
jge
ds
inc
aas
jge
xor
inc
lea
scas
and
insl
call
cmp
sub
mov
hlt
loop
dec
adc
add
jno
mov
cmp
cmpsb
inc
cli
mov
pop
sbb
das
and
addb
or
pmulhw
cmp
scas
ret
pop
pop
cld
and
loop
or
out
jmp
ror
pop
push
paddd
iret
into
or
pop
cmp
into
dec
mov
dec
add
cmpb
cmp
pop
add
jmp
sti
xor
add
sub
jb
call
cmp
mov
sub
rcll
lods
adc
push
mov
mov
mov
icebp
orl
dec
mov
inc
push
pop
fidivrl
inc
ja
out
jmp
lret
cmp
mov
jecxz
pusha
cmp
mov
xchg
divl
je
jle
jl
into
je
aaa
je
cli
mov
rol
sub
cmpb
or
jb
jmp
xchg
push
cli
enter
fldl
cmp
jbe
cmp
jne
sub
std
jmp
mov
inc
test
addps
call
inc
adc
es
cli
cmp
jle
push
leave
or
lcall
inc
ljmp
iret
adc
lea
jnp
inc
pop
push
pop
pop
mov
xor
bnd
inc
std
inc
sub
inc
adc
jmp
sbb
jp,pt
pop
jge
cmp
lock
sbb
insl
out
fistpll
xor
outsl
cmp
cmpl
repz
sti
add
test
mov
mov
mov
jg
test
mov
xlat
mov
stos
pop
push
ljmp
and
or
jmp
test
push
add
mov
adc
divb
stc
pop
fcomps
jg
pop
push
cmp
cmc
mov
mov
aam
outsb
add
or
ljmp
out
sub
cmp
mov
cmp
add
lods
add
outsb
sub
add
jle
inc
jbe
jmp
add
jp
add
jp
add
add
clc
cmp
mov
fwait
das
sahf
dec
imul
hlt
lret
adc
es
test
mov
pop
pop
and
addb
add
add
xor
lock
lds
pop
int3
incl
add
ss
xchg
inc
mov
out
call
mov
pop
or
jge
mov
stos
repz
in
insl
mov
sbb
das
mov
mov
jbe
mov
and
add
add
jge
pop
out
mov
jmp
add
not
pusha
lods
aaa
mov
lock
popf
pop
push
add
leave
lds
scas
xchg
add
add
adc
sbb
inc
cmp
hlt
or
decl
adc
xor
cmp
cmp
out
std
or
decb
repz
add
cmp
pop
jno
add
mov
mov
cmp
dec
push
bound
inc
dec
inc
adc
push
add
adc
je
xor
inc
cld
xor
dec
orl
idiv
push
sahf
mov
hlt
push
jg
pop
or
cmp
xor
outsl
imul
mov
sbb
je
cmpsb
dec
decb
dec
aaa
je
lock
pop
or
sub
repz
push
add
out
pop
fmuls
push
call
jg
aaa
cmp
add
sbb
cmp
pop
subl
or
int
cs
jo
incb
nop
ss
add
mov
js
add
pop
test
psubq
pusha
xlat
add
in
and
cmpsb
adc
and
cmpsl
out
cmp
mov
sub
jge
mov
das
shl
mov
repz
ret
xor
mov
pop
or
xor
jg
mov
subl
xlat
les
xlat
das
rcr
jle
rolb
mov
mov
add
xor
mov
push
fisubrl
mov
add
cmp
pop
std
xchg
or
fisubs
movb
flds
or
faddl
jmp
ja
add
jb
jmp
bnd
jmp
and
dec
xchg
cmp
test
mov
push
pop
xor
jmp
add
enter
add
sbb
jge
add
jo
push
jle
mov
jmp
xor
inc
cli
inc
testb
jb
movzbl
shl
xor
lcall
xchg
mov
jp
subl
mov
add
mov
incb
inc
cli
mov
icebp
or
or
mov
mov
lock
push
dec
test
add
in
or
add
sbb
inc
hlt
sub
mov
sbb
add
push
jmp
dec
push
inc
outsl
pop
cmpsb
cmp
sbb
or
add
add
ret
push
adc
add
jns
add
add
jmp
int
iret
jno
fadds
push
call
add
cmpsl
pop
repnz
les
lahf
inc
bnd
scas
mov
xor
or
adc
add
jmp
call
jae
cmp
addb
sub
aam
hlt
add
subb
xchg
bswap
jl
ja
cld
xor
std
adc
out
test
in
jbe
in
mov
adc
mov
cmp
jmp
xor
sub
mov
add
movsl
xor
ret
xor
pop
inc
fdivl
es
sbb
in
mov
jg
pop
in
push
add
testl
mov
add
adc
mov
cmp
lock
stos
je
or
jmp
repnz
sbb
or
adcb
sub
jmp
pop
sub
lods
add
inc
aad
cmp
or
add
cmpsb
sub
add
shl
sti
mov
stc
add
add
mov
scas
divl
sub
or
mov
adcb
int
test
aas
clc
std
jmp
or
inc
shll
sub
cmp
add
fldl
add
notb
pmaxub
mov
mov
cmp
push
mov
idivl
decl
test
push
adc
inc
and
jmp
bound
add
add
mov
mov
add
out
push
pop
jb
lcall
cmp
hlt
and
jnp
cmpb
xchg
mov
add
mov
xor
add
push
push
inc
insl
mov
cmp
sbb
jmp
cs
inc
pop
inc
sahf
push
ja
push
and
jg
testb
and
test
std
sub
push
cmp
add
push
inc
jge
pop
cmp
xor
cmc
sbb
jmp
cs
inc
das
cli
lahf
push
ja
fldt
in
jns
jge
clc
jge
test
jo
ja
mov
sub
in
mov
inc
add
add
push
xor
inc
fnstsw
add
add
in
xchg
lahf
add
test
add
add
jns
jge
idivl
test
jns
divl
cmp
mov
mov
sbb
hlt
add
push
mov
xor
iret
inc
in
popa
add
add
add
push
mov
jmp
ficomps
mov
fdivrl
clc
mov
adcb
sub
in
inc
aad
dec
ljmp
lret
sub
ljmp
pushf
push
push
cld
call
dec
hlt
mov
push
les
pop
clc
test
es
push
cmp
lods
jecxz
fadds
dec
repz
mov
repz
jbe
or
div
mov
mov
xor
adc
push
mulps
jmp
cmp
jle
mov
dec
clc
rorb
dec
jbe
add
jl
or
sub
adcl
or
add
sbb
decb
mov
mov
sbb
jae
cmpb
sbb
je
call
shr
dec
lcall
inc
imul
xor
cmp
add
adc
sub
jmp
call
inc
jecxz
pop
cmp
sub
jg
lahf
mov
movsl
mov
mov
jnp
pop
mov
sti
jne
or
cmp
mov
cmp
add
jns
es
imul
sti
repz
loope
pop
fistpll
sbb
add
and
cwtl
cmp
mov
ret
mov
mov
and
sub
js
fiadds
hlt
jmp
iret
sbb
and
ja
xor
loop
push
pop
jno
pop
ljmp
ja
repz
rol
vpcomuw
cli
pop
or
sub
add
add
loope
in
inc
add
clc
sub
jmp
sub
and
loopne
out
push
sbb
xchg
cld
jbe
std
sub
cmc
ds
orl
pop
testb
int
call
sbb
sub
sub
cmp
xchg
adc
fiadds
inc
testl
in
push
lahf
jmp
mov
pop
mov
cmp
push
cmp
dec
leave
and
add
push
push
and
ss
pop
adc
push
out
and
push
je
or
jnp
std
push
or
adc
lock
andl
or
lcall
je
into
dec
cmp
add
scas
out
stos
out
std
cmp
jge
addl
dec
xchg
adc
dec
repz
clc
or
clc
cmp
jae
andl
push
orl
xor
sub
xchg
xor
ljmp
xor
insb
cmp
or
xor
add
adc
inc
jg
xor
sub
sub
cmp
subl
adc
mov
repz
push
ja
sub
jmp
jo
outsl
add
cmc
lock
push
js
sub
lret
out
sub
mov
cmp
sbb
cmp
shl
adc
fwait
mov
pop
and
test
mov
sub
dec
das
jge
sarb
imull
sub
arpl
cmp
add
outsl
shl
daa
cli
push
fisubs
sub
and
jno
lea
add
mov
sub
mov
mov
in
mov
pop
push
shlb
movsl
in
sub
xchg
sub
pop
jmp
add
jne
add
and
adc
iret
cld
cmpsl
test
and
out
daa
stc
sbbb
xchg
repnz
nop
adc
faddp
push
mov
out
test
fmul
adc
cmc
jnp
pushl
mov
adc
mov
or
add
cmc
add
inc
call
ss
pop
loop
add
imul
fdivl
sahf
or
mov
icebp
movzbl
hlt
inc
loopne
test
mov
add
mov
hlt
push
pop
lcall
fnstsw
inc
or
add
jmp
cmp
ljmp
std
jne
sbb
sbb
stos
jae
jae
add
jne
or
push
repnz
push
mov
in
jae
and
call
add
push
cld
jmp
sbb
packssdw
push
imul
lods
and
rcr
or
mov
add
loopne
sbb
je
test
lea
andl
pop
or
inc
lea
clc
jmp
pop
jns
or
loope
and
je
xlat
mov
push
pop
cli
out
or
add
add
testb
loop
fists
push
inc
lds
je
mov
int3
decb
ss
pop
fsubl
jmp
inc
push
jns
clc
fldt
jecxz
jle
jmp
push
jbe
and
mov
sub
pop
adc
add
jae
cmpsl
out
sub
mov
cmc
mov
add
shl
add
ljmp
sbb
xchg
es
cwtl
testb
cltd
ret
inc
pop
xchg
sti
testb
sbb
add
cwtl
shll
mov
lahf
jmp
xchg
mov
xor
jmp
add
add
scas
cld
mov
clc
insb
xchg
add
cmp
add
sub
jecxz
jge
sti
or
je
adcb
inc
pop
dec
cmc
add
inc
push
je
in
dec
mov
incl
sbb
or
negl
adc
call
bound
aas
cltd
fcomps
jl
or
aas
jmp
test
pop
or
add
add
and
sahf
adc
test
testl
nop
mov
xchg
sub
and
sbb
std
jne
adc
ret
xchg
jae
or
jne
add
push
add
fdivr
jne
add
shrb
jg
dec
or
and
mov
add
pop
add
cmp
jne
adc
arpl
pushl
add
push
mov
out
or
jge
call
push
rorl
hlt
movsb
shrl
push
mov
lcall
cmc
in
mov
or
adc
add
out
add
jmp
ret
maskmovq
and
dec
dec
adc
and
sub
mov
lds
cld
adc
sub
cld
sub
les
scas
jecxz
stos
sub
je
cmp
or
ret
fcmovbe
sti
add
cmpsb
dec
decb
cmc
and
xchg
push
rcrl
xchg
mov
fs
sti
add
pop
stc
sbb
add
and
repnz
mov
cwtl
adc
lahf
or
in
adc
add
cs
and
fwait
movq
cwtl
sti
sub
inc
sub
arpl
jg
or
add
add
sbb
sub
in
and
hlt
inc
adc
jb
hlt
mov
clc
jle
out
insl
aam
sub
adc
mov
sbb
loopne
add
add
gs
add
pusha
mov
addr16
sbb
or
testl
jmp
jle
and
in
jg
sbb
push
popl
popa
fcos
sub
adc
scas
pushf
daa
sbb
nop
pop
adc
cmp
jp
jae
sub
sti
out
add
or
jb
and
jmp
int3
cmc
mov
ffreep
fisttps
lret
dec
and
push
or
inc
adc
pushf
mov
ja
mov
adc
dec
or
testb
in
je
mov
in
lcall
lea
and
lea
cmp
outsl
sbb
lret
xchg
es
add
jne
add
push
add
mov
in
or
jle
call
hlt
test
push
jns
push
add
xor
out
push
ficompl
sti
cmp
repnz
lods
std
iret
mov
xchg
sub
fldl
jns
cmp
mov
outsl
loopne
mov
mov
xchg
test
mov
in
call
mov
push
add
pop
out
ret
call
sti
mov
add
scas
mov
outsl
dec
cmpsb
rclb
inc
aam
inc
je
add
test
add
and
repz
sub
mov
lock
pop
add
add
enter
xor
jg
add
hlt
add
movsl
add
mov
sbb
xchg
loope
jo
outsb
push
jp
mov
pop
stc
jno
xor
ljmp
lea
push
ficomps
aas
mov
add
mov
mov
xchg
call
pushf
cmc
fildl
enter
out
sar
outsb
rcrl
testl
std
push
cmp
pusha
stos
loope
cmp
push
mov
stc
dec
popl
gs
jmp
mov
mov
add
cld
ljmp
popf
jmp
xor
call
add
add
out
mov
call
clc
xlat
sbb
lret
iret
pusha
jb
call
mov
add
add
inc
adc
sbb
scas
inc
add
scas
dec
add
rorl
int3
or
add
adc
mov
jg
xchg
popf
or
lea
clc
cld
decl
push
in
jp
adc
call
push
inc
fimull
lret
je
icebp
adc
decb
add
or
mov
jle
xchg
sbb
idiv
push
cli
xlat
mov
loop
inc
ffree
call
outsl
imul
dec
jmp
jecxz
imul
mov
inc
in
cmpl
mov
xchg
shrl
mov
mov
in
mov
je
in
xchg
mov
adcl
mov
sbb
jno
or
pusha
push
mov
cmp
dec
cmp
mov
add
sbb
adc
sbb
mov
nop
inc
sbb
pusha
mov
cs
add
lret
jle
mov
adc
add
jmp
lock
cld
fidivs
or
popa
leave
pop
mov
test
test
sti
lcall
iret
int
or
inc
sbb
mov
ljmp
rclb
outsl
rclb
mov
notl
je
jnp
xchg
pop
mov
je
out
cwtl
pop
adc
incb
push
push
add
loop
repz
or
std
jle
dec
push
cmp
mov
jno
in
or
mov
test
adc
test
mov
call
jb
sbb
sub
add
and
daa
push
in
pop
add
roll
fsubp
add
dec
stc
add
fmuls
incl
push
adc
push
sbbl
sbb
adc
jne
in
jae
inc
mov
add
add
pop
xorl
pop
insb
out
and
xor
filds
iret
fchs
mov
hlt
mov
or
aam
sub
in
inc
adc
dec
adc
add
adc
mov
cld
dec
or
sub
adc
xorl
sub
mov
repz
sti
in
testl
and
lods
cli
nop
testb
daa
nop
pavgw
sub
push
test
add
clc
pop
jb
inc
and
stos
data16
and
pop
xchg
xor
jecxz
mov
xchg
xchg
push
mov
add
push
push
minps
mov
sub
jl
movsb
fidivl
punpcklwd
xlat
les
pop
jle
fbstp
or
shl
pop
jae
syscall
sub
push
add
mov
aad
dec
idiv
sub
add
sbb
orb
push
lret
push
dec
jmp
aam
lret
cld
jle
ds
sub
popf
nop
out
or
mov
mov
push
add
add
bound
aas
pusha
xor
dec
push
dec
jnp
popa
cmp
adc
jl
jecxz
loop
pop
aad
cmpl
movsb
sti
incb
xor
pushf
add
pushf
decl
ljmp
jl
push
je
add
ficomps
jae
pop
mov
inc
or
sbbb
bound
cmp
decb
popa
cltd
push
push
and
mov
push
add
push
inc
movnti
inc
movsb
dec
repnz
ret
loope
inc
adc
jge
push
clc
jae
add
jne
jl
push
cli
jge
pushl
pushl
fincstp
xlat
add
mov
clc
sbb
add
push
sub
inc
clc
movsb
dec
adc
dec
xchg
fisubrl
mov
stos
icebp
or
inc
addl
std
jmp
adc
jne
pop
incb
or
push
mov
data16
incb
push
adc
add
add
orb
jae
inc
jae
test
hlt
sbb
add
hlt
cmpsb
mov
mov
add
jg
sbb
mov
adc
jg
cmpsb
cmp
add
jns
add
pop
jno
mov
dec
push
mov
inc
or
fsubl
dec
mov
and
add
mov
xor
out
je
sbb
repnz
fsts
stc
jbe
out
jo
mov
cmpb
mov
cmp
sbb
repnz
jmp
xchg
mov
or
inc
loopne
addr16
xchg
in
inc
add
add
orb
or
call
xchg
out
rolb
jg
aad
cmc
stos
int3
cmpsb
mov
fimull
iret
pop
rorl
call
xchg
into
repnz
call
sub
jmp
jnp
loope
out
test
out
cmp
testl
loopne
nop
andb
jo
fmuls
jmp
out
ljmp
xchg
in
testb
insb
testl
jecxz
xchg
out
addb
xchg
inc
mov
or
mov
repz
cmc
in
iret
add
xor
jnp
pop
add
scas
mov
jmp
or
hlt
add
adc
xor
cltd
or
repnz
adc
jno
push
dec
hlt
jae
out
std
jne
xchg
push
mov
or
jne
in
add
repnz
cmpl
xchg
push
pop
push
pop
mov
roll
adc
inc
sbb
inc
and
out
inc
push
test
inc
incb
pop
inc
ret
cmp
mov
cmp
call
inc
ret
mov
add
mov
ja
ljmp
ret
jl
pushl
incl
mov
ret
mov
decl
hlt
ret
hlt
ret
add
ret
dec
icebp
ret
bnd
add
dec
add
fldl
les
roll
int
lret
cmc
les
repz
les
fwait
mov
les
incl
les
add
xor
les
mov
pop
ja
les
cmp
dec
push
xor
inc
subl
cmp
les
dec
xor
sub
les
cmp
push
les
or
adc
repz
push
mov
shl
mov
inc
fidivs
push
shlb
mov
jbe
mov
add
cwtl
cld
or
xchg
mov
psubb
adc
jl
push
loope
in
sbb
pop
in
sbb
dec
ljmp
pop
in
or
and
add
add
fisubs
adc
sub
dec
fisubrl
popa
mov
dec
mov
xlat
dec
fldenv
aam
shlb
sbb
add
cmp
dec
xchg
dec
inc
dec
mov
aas
sbb
ds
add
dec
mov
popf
inc
pop
insb
inc
pop
insb
inc
xchg
pop
inc
rcrb
add
jnp
pop
jp
pop
add
inc
fdivrs
fsubr
inc
jno
inc
rcr
inc
sbb
inc
lahf
popf
inc
mov
inc
dec
loope
sti
loope
sub
lock
out
inc
mov
cmp
ret
dec
or
dec
add
ljmp
inc
jmp
ffreep
call
fcmovb
jmp
loop
jmp
in
ret
paddsw
call
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
in
ret
mov
decl
call
in
ret
out
ret
out
ret
out
ret
out
ret
sbb
add
add
outsb
mov
out
sbb
lret
adc
mov
and
dec
push
jp
in
mov
mov
xchg
das
insb
popa
repz
in
pusha
mov
fmulp
int
arpl
cli
add
into
popf
adc
cli
add
int3
inc
adc
push
out
hlt
cmp
adc
hlt
adc
or
scas
jge
push
jle
bound
ds
decl
addr16
orb
js
push
or
mov
jo
filds
aas
or
insb
mov
stc
out
add
bound
and
and
lds
mov
clc
xor
dec
push
stos
cmpsl
jbe
fs
out
push
push
dec
mov
fucomip
add
ss
je
jae
cmp
add
leave
mov
or
mov
in
jb
ljmp
add
mov
push
lea
add
dec
fnstsw
add
push
ds
enter
inc
sbb
add
push
dec
mov
adcb
xchg
mov
shr
fcmove
inc
mov
push
call
add
roll
pop
popf
jmp
and
pop
jge
je
or
mov
add
call
add
jmp
inc
clc
adc
push
incl
add
jmp
jge
push
enter
mov
lods
mov
shrl
push
pusha
je
pop
sbb
pop
mov
push
add
je
lea
xor
gs
push
insb
jae
pop
adc
add
addl
add
incb
je
sbb
aam
lea
in
add
hlt
cmp
cmp
in
sar
and
decl
adc
call
lods
in
ljmp
outsb
aas
arpl
cmp
out
add
sarb
pusha
sti
insb
ret
cmp
pusha
jbe
decl
jae
pushf
or
add
lea
sbb
imul
or
fs
add
add
sbb
lea
decl
sbb
lea
jp
pop
testb
mov
andb
pop
jle
jo
negb
or
into
cli
dec
adcl
scas
lcall
lahf
mov
xchg
adc
xor
mov
pop
sbb
sbb
inc
add
lea
add
add
add
jns
ret
std
in
loopne
testl
bound
std
es
mov
xor
push
pop
std
push
sti
std
subb
std
out
dec
mov
cli
decb
sub
or
inc
fnstsw
xchg
mov
cmp
sbb
ret
aam
sub
or
add
daa
xchg
add
jbe
add
cmp
into
add
xorl
dec
adc
dec
mov
add
repz
dec
add
daa
sub
adc
cmp
add
sbb
dec
loope
inc
enter
test
dec
add
vpsadbw
divb
shll
add
add
sub
mov
sub
inc
mov
mov
xchg
add
lcall
mov
mov
xchg
jns
insb
push
mov
cmp
and
call
cmp
repnz
push
shl
xlat
fwait
mov
add
mov
hlt
mov
decb
push
dec
aas
repz
mov
jecxz
cmp
push
aam
add
add
ljmp
mov
mull
in
ja
fisubrs
fwait
mov
mov
je
add
mov
jb
xchg
icebp
inc
rolb
fmuls
mov
xchg
xor
ljmp
add
or
sti
aas
lods
sldt
add
add
subb
hlt
add
jp
clc
repnz
out
jbe
sbb
add
jmp
jg
add
add
mov
fsubrp
inc
add
add
mov
cld
fiadds
add
adc
or
hlt
add
out
push
mov
je
cli
std
scas
clc
jo
loop
xchg
jbe
divl
bound
xchg
sub
add
in
adc
testl
aam
in
sub
inc
std
dec
testl
mov
std
jae,pn
sub
mov
clc
lcall
cli
std
shrl
jno
cmp
or
pusha
test
in
and
inc
std
testb
jp
inc
add
push
aaa
push
add
or
iret
xchg
out
clc
xor
movsb
jne
aaa
dec
lock
fs
sarb
dec
push
add
xor
cmp
or
pop
jbe
hlt
push
fdivl
ret
setle
decl
cmp
mov
aaa
dec
adc
cmp
jo
jmp
cmp
divps
fstl
mov
add
getsec
dec
lock
hlt
and
cmp
inc
movsb
jbe
cld
jg
nop
xor
and
jae
lea
lds
iret
xchg
arpl
sub
call
out
mov
in
mov
dec
call
push
je
call
add
je
add
jmp
add
sbb
jmp
js
pushf
ljmp
es
in
add
enter
add
out
xchg
jp
dec
in
add
jno
lea
stc
lock
xor
scas
add
xor
inc
add
loopne
dec
mov
push
inc
pop
clc
xchg
dec
in
aad
hlt
add
ret
jmp
hlt
add
cmp
jns
ja
mov
fwait
or
sub
inc
or
ss
jo
mov
es
cmp
jbe
test
testl
xchg
clc
jge
add
aaa
pushl
jnp
icebp
pop
fcoms
jnp
sub
dec
fwait
or
iret
jnp
cmp
test
daa
in
jae
ja
inc
sahf
add
lcall
xchg
jmp
incl
jbe
jae
imul
jl
stc
std
push
adc
cld
dec
sbb
fsqrt
or
push
jl
jg
fprem
std
es
push
sbbl
clc
std
add
insb
hlt
pop
push
fidivl
fidivl
ret
in
popf
add
mov
fsubr
or
mov
or
notb
mov
adc
sub
or
add
jg
jp
jns
inc
push
xor
or
jnp
test
mov
lret
push
xchg
mov
stos
idivb
add
add
pop
notl
dec
and
andl
xor
mov
push
popa
std
add
push
mov
lret
rclb
aaa
in
cmpb
push
or
mov
or
cmp
adcl
sbb
add
adc
test
dec
ljmp
cmp
lock
movsl
sbb
jmp
shll
xor
add
jb
std
sub
clc
hlt
hlt
or
fwait
sub
xchg
daa
outsl
dec
adc
push
ja
repz
inc
add
mov
add
fisttpl
insl
dec
iret
pop
sub
pop
jb
jne
and
xor
push
inc
out
jge
paddq
inc
out
and
and
repnz
add
dec
fisttpl
lock
add
jmp
mov
pop
xor
dec
push
cld
inc
cmp
mov
add
stc
mov
add
add
lock
gs
lret
or
jmp
addb
jle
clc
jo
icebp
xchg
shll
sub
add
jb
stc
cmp
testl
iret
add
add
shrl
call
decl
push
xchg
in
std
adc
icebp
push
jns
les
add
decl
cmpb
cmp
fdiv
icebp
adc
xor
cmpsl
jp
dec
add
jne
jb
jecxz
imul
push
lea
jne
decl
cld
add
std
pushl
add
add
add
popf
jge
clc
in
cmp
inc
ljmp
add
jno
hlt
jae
je
jg
mov
gs
adc
jae
add
inc
mov
add
inc
mov
sbb
add
push
add
icebp
jg
add
hlt
mov
adcl
mov
mov
add
int3
mov
jae
sub
jecxz
jmp
clc
dec
out
or
push
or
stc
jmp
dec
scas
int3
dec
out
push
push
mov
aam
add
fwait
push
pop
das
mov
or
sbb
mov
mov
cmc
fildl
mov
faddl
add
andl
dec
mov
fs
clc
jge
or
add
add
clc
icebp
mov
in
add
bnd
add
call
or
pop
pop
cmpl
fildl
push
add
mov
inc
incb
jns
pop
dec
jnp
clc
jl
out
hlt
add
inc
lcall
pop
mov
jmp
sub
mov
mov
adc
data16
lea
or
jb
adc
pop
adc
add
cld
adc
pop
push
xor
mov
out
test
in
insb
or
cld
xchg
jmp
stos
in
push
add
pop
mov
pop
push
lods
faddl
lods
fisttps
xchg
sti
add
fdivrl
or
movsb
mov
call
sti
mov
loope
outsl
mov
lcall
push
imull
add
add
push
or
cwtl
outsb
jle
adc
add
scas
testl
lsl
cli
cmpl
loop
enter
mov
inc
add
insl
sti
add
or
ljmp
jmp
mov
add
add
add
xor
add
add
or
lahf
push
test
push
test
add
mov
mov
pop
dec
icebp
mov
pop
mov
jp
add
roll
std
decl
shrb
sti
jp
pop
pop
hlt
ret
cmp
jb
orl
add
mov
mov
insl
mov
subb
push
xor
mov
xor
imul
xchg
push
adc
sbbl
mov
jns
add
and
or
mov
aad
and
leave
je
and
or
add
add
jg
js
mov
jp
sti
add
jmp
ret
jno
mov
popa
ret
xor
in
or
les
add
ret
add
hlt
lds
sbb
xorb
inc
adc
inc
ror
inc
loopne
aam
xchg
mov
icebp
ret
dec
inc
lret
mov
out
jge
popa
std
jae
push
xorl
add
aas
add
jmp
jae
test
add
jmp
std
aam
adc
je
or
loopne
subl
decb
in
cmp
push
xor
and
push
sahf
jg
std
popa
cmp
data16
add
call
imul
std
jmp
sbb
lret
mov
stc
mov
test
pop
icebp
sbb
push
jae
push
lret
jmp
xchg
xor
add
inc
mov
push
mov
or
popa
insb
add
sbb
add
outsb
lret
pop
adc
add
add
sub
or
sbb
push
inc
sbb
cld
jmp
add
add
insl
and
add
or
push
lea
jg
loope
add
inc
jmp
or
adc
or
push
jg
cltd
dec
call
ret
es
sub
jb
dec
hlt
inc
adc
add
fwait
mov
call
dec
mov
mov
jg
ftst
inc
jnp
jmp
lret
call
add
andl
push
xor
jle
ja
add
jne
lods
cmpsl
sbb
int3
cmp
fisubs
mov
and
std
pop
add
fstpl
sub
in
std
mov
bnd
mov
loopne
lds
mov
icebp
popf
imull
clc
push
fisubrl
iret
icebp
insl
jmp
bound
add
add
cmp
pop
jge
adc
mov
repz
cmc
xor
and
and
xchg
sbb
pop
dec
testb
push
in
push
sbb
movb
jge
xchg
outsl
loop
cmp
jmp
push
call
mov
insl
cmp
adc
xchg
add
int
mov
dec
pop
call
push
mov
call
cwtl
test
jmp
add
push
inc
push
jecxz
out
or
xor
icebp
ljmp
inc
pop
std
cmp
lret
add
push
ljmp
int
into
xchg
mov
call
mov
mov
ljmp
js
adcb
xor
mov
push
je
mov
add
fnsave
xor
add
loop
lret
xlat
sti
push
and
jo
push
xchg
movsl
imul
push
push
roll
imul
test
mov
decl
inc
sub
dec
shl
push
cld
enter
add
pop
stos
insb
and
xchg
dec
and
xchg
sti
incl
stos
jge
je
jl
je
imul
push
xor
xor
pop
pop
jmp
rclb
pop
mov
add
lods
sub
jne
ss
les
or
lock
fwait
dec
ret
mov
mov
pop
mov
fildl
push
daa
scas
jp
add
ret
jbe
pop
jmp
rorb
xchg
add
add
add
test
add
je
clc
jge
lock
rol
mov
arpl
mov
jns
jmp
sti
stos
push
lds
jmp
jmp
add
hlt
fs
ficoml
out
std
jmp
add
rcll
fucomi
daa
std
popf
out
pop
and
sub
call
stc
pop
jge
les
ja
cmc
jb
add
mov
cmpsl
fldcw
loopne
dec
ret
outsl
idivl
cld
popf
aas
lock
call
fmul
in
in
jo
repz
je
jecxz
cmpsl
loop
add
xor
pop
out
andb
in
push
sub
in
pop
sbb
cmp
mov
or
rcrb
call
add
inc
add
xchg
mulb
sub
sub
xchg
xor
hlt
push
add
lret
movsl
add
fs
pop
or
dec
clc
xor
mov
xorl
cmpsb
push
push
ss
mov
cmp
mov
in
mov
adc
sar
mov
subl
or
in
add
pop
add
pop
or
rcrl
pop
lock
lock
loop
sbb
pusha
inc
std
jmp
cld
jmp
test
pop
sbb
cld
jbe
lock
movsl
and
lea
clc
push
push
sbb
dec
push
into
ljmp
loope
adc
inc
cld
xorl
jmp
popa
pop
add
sti
incl
lock
add
dec
add
cld
out
sti
incl
cmp
pusha
in
add
popa
inc
faddl
mov
dec
pop
mov
mov
add
test
mov
sbb
xor
jle
ja
ljmp
mov
or
xchg
mov
push
push
jae
sbb
shr
pop
inc
lcall
add
sub
xor
or
jmp
and
xor
sub
std
or
std
mov
mov
js
sub
or
jmp
hlt
cmp
inc
hlt
adc
mov
ljmp
xchg
jle
xchg
mov
rol
daa
or
lods
push
lea
jg
add
add
jbe
push
aaa
jmp
hlt
mov
jne
call
ja
push
cmpsb
outsl
shl
hlt
sub
inc
out
mov
adc
sub
jl
push
ret
loope
jbe
push
cmpsb
lret
pusha
push
mov
or
imul
arpl
ds
add
testl
add
add
mov
loop
scas
jo
je
mov
icebp
jg
mov
std
jmp
and
adc
sub
push
subl
in
add
neg
icebp
bound
push
add
mov
loopne
in
mov
std
pop
mov
mov
sti
call
nop
aad
adc
add
xor
jne
push
cmp
inc
dec
addr16
sbb
cmp
adc
and
push
ja
mov
jge
add
shlb
jne
cmp
add
adc
fisubs
ret
cmp
and
das
testb
lcall
out
rolb
add
add
add
inc
ja
add
jb
mov
sbb
aam
fdivr
add
out
in
lods
fldcw
repz
in
in
dec
jo
jno
cmc
dec
dec
in
push
lds
call
out
xor
inc
add
sub
pushl
in
add
call
rorl
xor
dec
std
jmp
sub
mov
push
pop
femms
ljmp
add
jmp
and
adc
notb
dec
add
xor
or
test
push
out
sbb
inc
hlt
andl
adcb
push
pop
xor
jmp
or
xchg
dec
jge
mov
insl
in
push
dec
shl
out
hlt
push
js
sub
dec
add
jb
and
test
xor
inc
jg
pop
fbstp
xor
shrb
inc
push
ja
sub
add
mov
and
mov
pop
and
scas
pop
and
aas
inc
mov
insb
mov
sbb
mov
xor
iret
mov
dec
fidivl
add
inc
add
testl
das
push
xor
imul
cmpsl
push
jl
test
sbb
jl
repz
lock
add
shr
insl
aaa
push
add
and
adc
into
cwtl
sub
mov
out
mov
add
scas
lods
std
decl
xor
xchg
dec
mov
add
add
cld
adc
ds
std
jmp
push
add
pop
ret
pop
mov
les
inc
xchg
test
pop
add
int3
push
push
push
inc
loopne
mov
test
pop
pop
hlt
adc
les
stc
sub
je
rorb
addl
decl
fmuls
loop
lock
dec
pop
call
pop
mov
mov
mov
sub
adc
and
dec
jge
mov
mov
test
jae
in
out
dec
cmpl
pop
enter
cltd
and
inc
call
jno
jo
mov
in
add
lretw
cld
jmp
imul
loop
pushf
pop
in
add
add
insb
subl
ss
frndint
xor
inc
out
xor
push
add
jge
fisttps
sub
sbb
fsubs
insb
call
jmp
insb
call
imul
mov
add
mov
mov
int
call
xchg
call
pusha
testl
add
add
add
movsb
mov
dec
lcall
daa
rcr
xchg
fildl
out
jge
or
lock
mov
jae
add
add
sub
mov
dec
adc
jmp
jae
add
testl
xchg
adc
mov
outsb
adc
mov
cmc
push
fbstp
test
fldl
add
inc
clc
push
icebp
cmp
mov
out
inc
clc
out
ret
call
testl
pop
inc
mov
std
call
shll
mov
adc
inc
cmp
mov
push
or
in
in
faddp
adc
call
adc
test
pop
mov
add
push
std
decl
add
test
andb
add
jecxz
std
call
or
dec
inc
sar
aaa
in
mov
cld
jne
mov
jmp
rolb
in
add
outsl
mov
mov
andl
mov
sbb
inc
add
ja
adc
inc
or
mov
movb
in
addr16
and
sahf
jmp
lds
ret
lcall
bound
hlt
in
add
xchg
add
sti
mov
gs
fs
out
sub
jmp
inc
int3
xor
das
pushf
mov
in
les
add
aad
add
in
pop
jo
fwait
ficoms
enter
cmpsb
cmp
aam
mov
adc
mov
int3
in
fnsave
iret
nop
xchg
fimuls
imul
cmp
and
iret
aad
fsubl
mov
dec
dec
out
adc
aas
mov
jo
jb
cld
mov
add
add
add
add
add
dec
dec
dec
mov
lds
bound
mov
add
loope
cmp
add
call
outsb
push
or
sub
jmp
push
or
ret
lods
call
insb
xor
pop
ret
in
pushf
js
std
push
or
mov
mov
or
adc
cmpsb
mov
mov
addl
sbb
add
add
add
xlat
std
hlt
daa
in
movsb
or
add
adc
jle
xor
les
cltd
mov
inc
add
cmpsl
lock
push
inc
inc
lock
jg
enter
add
test
adc
xor
add
mov
jne
loopne
gs
or
mov
std
incl
lock
inc
cmp
call
add
cmp
cpuid
pop
pop
push
rol
sbb
jmp
xorl
push
lret
sbb
adc
or
inc
fldcw
fldl
inc
popf
mov
sbb
iret
inc
add
jne
dec
push
shll
roll
aad
and
inc
out
stc
stos
sub
xor
jo
push
pop
outsl
stos
add
add
je
add
hlt
test
and
or
idivb
hlt
pusha
les
out
pop
out
add
mov
bound
add
sbb
repz
sbb
mov
or
and
in
roll
xchg
sbb
fndisi(8087
push
and
push
xor
out
dec
sub
add
jbe
xorb
add
cmp
pop
add
adc
out
mov
out
jnp
ret
sti
jl
jmp
mov
out
jo
out
popl
jmp
inc
in
xor
push
jg
out
xor
dec
mov
sub
add
jge
jae
shl
imul
movsb
shl
mul
inc
out
xor
mov
bound
call
add
jnp
or
iret
xor
rcl
jmp
test
sub
std
lods
adc
jg
or
add
mov
add
lret
sub
xlat
hlt
push
adc
xor
into
add
subl
sub
mov
sbb
add
in
adcb
iret
mov
hlt
pop
add
add
ret
testl
xor
push
lock
and
inc
add
faddl
inc
rorl
jle
les
inc
inc
int3
adc
and
idivl
orl
push
mov
push
shlb
push
scas
call
test
aas
or
bound
pop
cmc
inc
cli
lcall
adc
add
add
jecxz
dec
arpl
call
xchg
inc
add
roll
add
lods
adc
inc
add
je
add
hlt
cmc
inc
jne
fnsave
std
or
rorl
xor
shll
sbb
popf
add
jno
mov
or
add
rorb
add
or
fimull
or
or
in
fmull
jae
addl
dec
ficoml
shlb
decl
add
xor
jmp
jl
pop
fisttpl
ret
icebp
add
fwait
int
add
add
cld
mov
and
add
clc
jp
shlb
hlt
add
out
mov
ljmp
lds
inc
sbb
out
add
movsl
shr
scas
xorb
jmp
stc
xchg
fists
andb
and
fcmovb
jne
in
pop
jmp
ljmp
jne
jne
fcoml
test
xor
out
in
adc
adc
out
sbb
push
adc
add
testb
push
pop
xor
cli
jno
sub
and
add
add
add
jmp
fdivp
cmp
ja
std
hlt
inc
add
paddusb
sbb
les
repz
jb
and
out
push
xchg
or
pop
pop
adc
faddl
adc
test
mov
icebp
addr16
mov
push
fisubs
adc
lock
in
inc
or
add
add
ltr
in
add
mov
jmp
fnstenv
lret
dec
ljmp
mov
inc
or
xor
jns
push
idivb
mov
adc
add
sbb
in
and
cmc
push
loop
adc
push
lcall
pop
std
addr16
cmp
sbb
adc
add
lds
scas
enter
or
add
push
mov
pop
push
std
dec
loopne
cmp
mov
mov
call
stc
das
add
hlt
imul
dec
cmpsl
pop
dec
inc
ja
aam
in
and
add
push
sbb
xor
jae
add
push
sti
call
jno
add
mov
mov
data16
push
sti
add
fldl
mov
fdivr
xchg
push
stc
aas
cmp
jns
std
jnp
aam
lods
scas
inc
add
push
sti
arpl
xor
add
jo
fsubr
mov
shrb
andl
jecxz
add
add
roll
mov
add
mov
mov
xchg
mov
mov
add
push
pop
dec
hlt
push
jo
inc
lret
jg
rcl
ror
pop
mov
js
fildl
jbe
add
shl
enter
leave
xor
xor
dec
push
shll
rolb
mov
jl
cmp
xor
in
fldt
clc
adc
cmp
pop
jmp
jb
fucom
add
add
sbb
mov
xor
shl
cmp
push
or
mov
fildl
mov
or
sarl
add
or
push
ret
idivl
stc
mov
cltd
dec
and
or
fdivl
pushf
pop
lea
test
add
fisttpl
lcall
orb
push
mov
adc
add
add
cmovo
shlb
hlt
add
sti
adc
cwtl
inc
cld
push
mov
push
mov
dec
jns
push
cmp
int
add
lods
mov
decl
pop
popl
int
add
sbb
mov
andb
jb
ffreep
pop
pop
push
mov
mov
leave
add
std
dec
incl
addb
inc
hlt
ffree
push
outsl
lret
insb
pop
loopne
jae
mov
inc
sbb
xlat
sarb
push
iret
jae
xor
call
test
test
and
or
xor
es
mov
fidivrs
mov
test
rolb
jns
sub
inc
out
xor
test
add
fstl
pop
add
or
dec
sbbl
divb
push
sahf
add
mov
insb
inc
bnd
iret
jnp
jmp
imul
jne
xlat
test
shl
ss
dec
iret
fwait
outsl
inc
shll
push
mov
pop
sub
test
hlt
andl
fadds
jae
popa
dec
in
jl
or
out
pusha
and
pop
hlt
in
shll
in
pop
iret
out
stc
inc
hlt
int
jmp
into
pop
ret
add
inc
adc
sub
leave
xor
insl
inc
adc
in
or
ds
movsb
inc
sub
cmc
divl
xor
out
jmp
jae
add
xchg
cmpsl
mov
push
mov
lock
mov
sbb
mov
add
leave
sub
jge
mov
inc
add
lock
int3
jmp
lahf
sub
mov
sub
pop
push
inc
add
inc
add
into
sub
inc
add
adc
rorl
jno
add
add
cli
je
rcll
in
mov
divl
sbb
or
aad
add
sti
jbe
add
or
cmovo
inc
add
aas
sbb
cmpsb
inc
add
int
sbb
addb
fadds
push
push
shr
xor
sub
add
out
push
sub
push
inc
hlt
repnz
push
out
add
mov
mulb
mov
cmc
cmpsl
push
outsb
add
pop
out
push
add
out
adc
daa
or
adc
xor
in
mov
dec
cmpsl
shl
out
or
and
ja
sbb
adc
xchg
adcb
pop
lods
add
mov
xor
int3
jae
std
shrl
shll
sbb
int
push
in
add
push
inc
sbb
push
out
pop
insb
inc
rclb
ret
adc
dec
lock
and
xchg
ljmp
push
lock
push
in
pop
fs
pop
push
lcall
xchg
and
movsb
ret
pop
hlt
xor
ret
fbstp
icebp
dec
stos
xor
cmp
lret
add
add
sbb
cmc
ret
add
les
adc
scas
pusha
adc
cld
inc
pop
jle
das
sbb
sub
add
addr16
add
jmp
ljmp
add
dec
push
sar
nop
adc
push
sbb
push
push
lds
lods
cmp
test
movsb
and
add
cmc
fsubrs
call
gs
cmp
mov
call
jns
stos
or
call
pop
stos
out
rcll
in
jne
in
sub
dec
adc
repz
jne
ljmp
jo
add
insl
cli
out
cmp
sti
test
push
js
pop
mov
adc
push
test
jno
or
and
lods
into
adcl
cmpb
je
xchg
inc
and
cmc
cli
into
les
cwtl
mov
or
sarb
incl
sar
and
inc
and
cmc
cli
mov
or
hlt
icebp
pop
or
fabs
xchg
jmp
rol
cmc
cld
inc
cmpsb
enter
xor
add
rcr
pmaxsw
fmuls
fstpl
fiadds
push
xchg
sbbb
xor
enter
enter
inc
add
ljmp
cwtl
jl
ja
lock
test
hlt
lods
pop
add
lods
cmp
sbb
mov
adc
rolb
aaa
ja
mov
and
lock
aaa
adc
popa
dec
jb
les
in
lret
mov
pop
mov
fldl
ds
ffree
mov
and
push
xchg
enter
out
aaa
adc
idivl
or
cmp
jp
or
out
idiv
in
add
iret
xor
pop
xor
add
or
jl
mov
add
mov
mov
je
shll
mov
negb
bound
add
jae
out
jmp
fnstcw
clc
add
mov
mov
ljmp
adc
cmpsb
fwait
cmp
jo
or
sub
jb
pop
cmp
and
mov
add
add
pop
mov
mov
bound
pop
call
gs
cmp
pusha
mov
mov
ficompl
add
in
xchg
cwtl
jno
cwtl
push
cmp
add
mov
ss
incl
test
lock
jmp
xor
enter
push
inc
and
jnp
mov
ror
push
call
add
adc
xor
add
dec
and
add
test
mov
jns
shll
add
hlt
xchg
into
aad
adc
std
movsb
dec
ljmp
inc
std
push
xchg
xor
call
loope
pop
adc
clc
mull
lock
in
add
dec
mov
inc
int3
push
ret
jae
cld
xchg
imul
lret
xor
add
lock
in
std
and
into
jmp
or
add
mov
rorl
add
add
js
sbb
stc
cld
or
les
dec
insl
cmp
add
cmp
rol
mov
int3
jg
mov
add
pushf
cmp
inc
hlt
sub
add
add
dec
add
and
jmp
sbb
fcmovne
sub
hlt
xchg
add
pusha
std
outsb
inc
jecxz
hlt
push
data16
inc
adc
jbe
sbb
fadds
and
js
or
fcoml
ret
inc
push
mov
xchg
add
or
hlt
add
ds
xchg
fstl
add
add
cmp
call
push
inc
add
or
jmp
push
std
pusha
lods
mov
cmc
cmp
mov
xchg
jno
cld
shrb
lods
je
xor
add
ljmp
roll
adc
fnsave
push
test
jl
je
sub
icebp
add
loop
aaa
loop
sti
and
xor
add
ljmp
iret
test
sub
nop
jp
rclb
add
xchg
jo
ret
or
push
clc
jbe
mov
out
jge
lea
add
fidivs
push
cmpsl
mov
add
add
pop
push
int3
add
add
add
sbb
jne
outsb
adc
add
lcall
and
iret
or
mov
mov
dec
push
push
stos
push
std
add
hlt
mov
inc
in
lds
adc
rclb
mov
xchg
sti
mov
inc
std
cs
jp
dec
ljmp
std
cmc
pop
std
out
xchg
add
outsl
sbb
push
inc
xchg
sarl
std
scas
ljmp
add
std
sub
test
adc
std
mov
mov
add
jae
push
movsb
pusha
cmpb
or
add
bswap
jb
push
mov
xchg
mov
hlt
mov
mov
sarl
sub
mov
test
adc
and
movsb
lods
and
jnp
mov
cmc
mov
adc
add
lods
mov
mov
xor
mov
scas
repz
jg
repnz
mov
sahf
dec
repz
push
add
add
add
cmp
je
jns
or
mov
add
sub
jmp
cmp
cmp
jnp
jae
cld
pop
cmp
mov
arpl
mov
mov
test
adc
bound
mov
cmpsb
adcb
repnz
bound
lods
out
stc
add
push
cmc
jo
movsl
jbe
in
fdivl
cwtl
pop
cld
inc
repnz
add
lret
call
cmp
mov
mov
call
fadd
jle
int
clc
add
xchg
mov
mov
xchg
std
decl
sti
jne
push
jle
add
inc
dec
sti
jne
push
std
xor
jge
add
xchg
aas
std
sbbl
sti
movsl
push
mov
sbb
push
mov
add
push
xchg
jbe
call
in
add
mov
ret
pop
xchg
hlt
sub
lods
imull
nop
inc
test
mov
shl
out
mov
hlt
and
lock
xor
mov
lods
add
test
rcr
push
cmc
stos
test
ja
loopne
je
adc
adcb
incb
cmc
in
push
mov
mov
btc
or
inc
add
mov
xor
mov
mov
add
pop
sbb
cmp
xorl
lods
bound
xchg
clc
ss
fisttpll
jle
ffreep
mov
pop
push
inc
out
out
fcmovu
movsl
sbb
add
add
mov
cwtl
add
cmc
sti
mov
lods
inc
jnp
out
xchg
xor
xor
jnp
mov
scas
movsb
daa
or
sbb
test
add
jg
loopne
fcmovbe
loope
xchg
lock
push
in
jae
cmp
xor
inc
movsb
mov
jnp
mov
add
dec
mov
add
push
jg
aam
jl
or
jmp
add
cld
jge
clc
xchg
xchg
test
testl
add
sti
adc
imul
call
jb
xchg
push
int3
sti
jp
lds
cmpsl
decl
or
roll
adc
inc
add
add
push
imul
jp
popf
clc
fsubr
and
fistpl
add
add
mov
jb
addl
popf
push
inc
sub
add
push
std
pushl
enter
cmp
mov
cmp
mov
push
dec
push
mov
pop
repnz
in
sbb
add
pop
cmpl
sub
mov
add
cmpsl
or
push
inc
mov
arpl
add
and
push
les
call
sub
and
lahf
enter
jne
test
mov
insl
or
outsl
jns
gs
or
fcompl
xchg
xchg
adc
push
inc
push
mov
or
call
mov
rclb
pop
cld
add
shrb
mov
mov
push
out
mov
jge
lods
call
hlt
scas
adc
jg
pop
sub
jmp
add
into
mov
cmp
hlt
es
mov
xchg
dec
mov
hlt
mov
xor
inc
fisttpl
mov
mov
add
vmovq
add
repz
test
cli
sub
arpl
hlt
add
stos
push
xchg
call
jg
add
mov
add
jl
xor
pushf
dec
arpl
je
iret
sub
pop
push
jle
add
mov
xchg
jb
or
fbstp
add
rcr
dec
jg
mov
std
jmp
add
popf
inc
inc
xor
add
fld1
testl
add
int
call
insb
int
call
mov
repnz
fidivrs
push
call
add
pusha
lds
add
adcb
jle
or
sbb
inc
add
leave
ja
call
xor
push
fisttpll
jg
roll
push
dec
ja
push
mov
sbb
push
lcall
jge
pop
and
call
out
loopne
les
cmp
insl
sti
jmp
xchg
add
sbb
lret
push
mov
call
mov
adc
ret
hlt
dec
dec
aaa
mov
imul
mov
cmpsl
dec
push
jecxz
pop
push
xor
add
sub
je
fiaddl
add
call
adc
repz
xor
pusha
adc
cmp
std
sbb
call
cmpl
std
outsl
pusha
or
jmp
and
into
mov
shr
add
clc
xchg
mov
mov
out
push
sbb
pop
out
out
inc
dec
shll
sti
movsb
adc
repnz
mov
push
jecxz
scas
das
rcrb
jno
leave
dec
xor
add
adcb
hlt
push
sbb
mov
lods
dec
popa
xchg
lods
out
lods
jp
jae
jle
mov
dec
push
mov
mov
push
add
mov
adc
and
push
test
xlat
xchg
mov
stos
clc
nop
call
adc
xor
cmc
push
adc
jmp
lret
cmp
mov
and
sbbl
xchg
mov
test
push
xchg
nop
call
mov
cld
mov
mov
movl
mov
sub
dec
pushf
and
testl
popa
jle
cld
push
shlb
std
roll
cmpb
pushf
sbb
testl
popa
pop
xor
lock
enter
dec
fdivrp
inc
lock
ja
mov
push
mov
push
push
call
sahf
mov
xchg
xor
ja
in
lds
ficomps
add
mov
mov
jbe
mov
pop
pop
push
ret
sbb
pushf
add
sub
inc
dec
adc
dec
sub
sub
or
ds
test
stos
cmpb
call
sub
stc
mov
lahf
cltd
jb
js
add
push
sbb
and
pop
push
outsl
pop
push
mov
add
dec
fsubrl
fwait
xor
or
test
std
and
or
shll
and
fwait
add
roll
xor
xor
test
fwait
jnp
mov
lds
jge
mov
mov
pop
cmpsb
stos
add
test
out
xor
xchg
fwait
ss
out
jge
stos
push
insl
cwtl
push
int3
push
ss
push
out
inc
sbb
pop
loope
pop
sbb
sub
fwait
mov
inc
fistpll
sub
add
pop
push
hlt
add
add
fnsave
lods
push
dec
push
add
pushf
lret
jg
push
add
add
fwait
ljmp
cs
add
call
sbb
int3
push
mov
mov
push
clc
add
ds
shlb
call
sub
scas
mov
mov
loopew
jg
aad
idiv
mov
rol
pop
jo
lcall
add
add
dec
jle
sbb
out
call
lock
std
aam
cmovo
jo
or
sub
jle
scas
repnz
call
mov
mov
cmp
add
sarb
add
addl
or
add
lcall
add
push
nop
adcl
add
das
in
add
add
add
addl
inc
pop
call
decl
add
popf
test
push
adc
add
add
add
jg
push
hlt
fwait
add
fistpl
mov
into
pushf
jp
pop
clc
aad
hlt
scas
jbe
xor
nop
jle
fwait
lret
add
add
add
sbb
add
jg
or
orl
pop
mov
and
or
push
push
idivl
cmp
call
outsl
fsubrs
mov
pop
push
inc
hlt
xor
hlt
fwait
add
and
push
jns
push
hlt
add
push
jns
mov
xorb
add
hlt
push
insb
cmpb
add
popl
inc
movsl
out
ja
call
jb
add
add
pushf
xor
adc
out
jnp
lret
add
add
cld
jle
test
hlt
add
jg
test
mov
jne
fistpl
lock
pop
add
add
jg
popf
ljmp
movsb
sub
add
add
into
call
orb
jmp
cmp
jmp
mov
add
testl
jmp
stc
add
xor
enter
xor
testl
addl
insl
mov
mov
je
clc
mov
add
add
daa
nop
andl
sar
je
or
jecxz
mov
add
cmp
sar
inc
lds
add
in
add
jge
jns
add
andb
and
push
add
mov
mov
and
pop
mov
aaa
mov
in
fnstenv
mov
mov
sbb
add
add
add
mov
add
add
sbb
xchg
int3
push
add
mov
cld
dec
shll
ret
sbb
dec
push
out
push
push
hlt
jp
and
ficoms
hlt
adc
mov
lret
das
int3
hlt
test
sti
lods
adc
hlt
jnp
fisubs
js
lcall
dec
ljmp
xchg
jnp
add
hlt
rorb
inc
pop
rolb
xor
mov
test
std
push
stos
sub
cmc
stos
add
jne
add
mov
push
push
pop
cwtl
dec
push
jecxz
fistps
inc
ljmp
add
outsl
daa
ss
repz
das
stc
test
or
or
imul
mov
out
add
jmp
call
notl
adc
cmc
xchg
lods
jle,pt
call
push
aad
mov
out
in
rol
mov
clc
xchg
push
adc
lret
jecxz
xor
es
lds
jg
pop
in
inc
mov
repz
jae
inc
add
mov
add
mov
cmc
cmp
mov
lea
in
add
inc
aaa
push
pop
adc
xchg
scas
sbbb
cld
orl
push
pushf
mov
mov
fdivs
popf
cmp
add
std
mov
pusha
out
lea
adc
mov
std
push
pop
xor
xorl
testb
fdivrp
mov
test
mov
mov
mov
std
add
adc
addl
pushf
xchg
shl
jno
into
ret
mov
idiv
xchg
push
sbbl
int
push
and
fistps
out
int3
add
fdivrp
add
sub
add
mov
in
inc
dec
mov
shlb
hlt
jp
jno
mov
xorps
add
call
sbb
cmp
xchg
sbbl
jne
sti
push
test
ja
hlt
stos
add
das
test
hlt
stos
repnz
hlt
addl
stos
pop
incl
sbb
hlt
stos
rorl
cld
movsb
adc
inc
add
cmp
or
lods
push
jmp
pop
sub
add
das
cltd
inc
outsl
jno
push
imul
clc
ret
dec
push
insb
add
mov
xchg
sub
push
sti
add
out
inc
out
jmp
add
repz
je
cmpsb
leave
xor
jo
popf
scas
cmpsb
inc
popf
out
lcall
test
popf
lods
add
hlt
inc
xor
orl
mov
jge
push
add
ss
cmpsl
js
cmpsb
push
lods
xlat
test
popf
xor
popf
cmpsb
les
out
cmpsl
jo
mov
sbb
jno
movsb
sub
popa
push
inc
add
stc
out
xor
add
xchg
test
les
add
stc
mov
nop
sbbl
std
cmp
ret
cli
aaa
add
std
mov
or
cld
ret
cmp
add
xchg
fcoms
mov
enter
mov
push
push
lcall
int3
rcll
mov
cs
xor
std
push
shrb
and
add
add
cmp
ljmp
inc
add
adc
clc
mov
pop
add
push
call
mov
fstl
addl
sbb
movups
add
jg
pop
pop
push
inc
add
add
orb
aaa
mov
jg
jmp
add
sbb
inc
aad
mov
or
fmuls
cltd
std
adc
shll
in
jmp
inc
or
dec
xorl
or
loop
add
cmp
stos
xchg
sub
add
jmp
lcall
mov
int3
std
lahf
xchg
aaa
push
jns
fwait
push
mov
jae
rcrb
mov
lahf
std
arpl
pop
dec
lea
adc
xchg
iret
push
incl
cltd
std
loope
idivb
hlt
add
push
sub
arpl
jo
push
mov
or
jl
outsb
inc
out
stos
lods
out
jg
adc
addr16
into
clc
div
es
out
mov
hlt
adc
add
popf
push
insb
dec
pushf
lods
inc
stos
cltd
cltd
mov
test
out
xchg
add
add
push
mov
hlt
inc
mov
imul
mov
cltd
out
ja
cmp
inc
ret
testl
mov
sub
add
jmp
loope
push
push
adc
mov
mov
cld
aad
add
add
add
or
or
or
call
bound
icebp
subl
or
add
dec
push
int3
cltd
adc
mov
add
popa
push
loope
jmp
pop
clc
fsubr
cltd
je
pop
mov
add
jns
sbb
jmp
mov
add
add
mov
sbb
add
dec
aas
add
xchg
in
inc
fnstsw
and
or
dec
loope
jle
fldl
add
cmp
adc
inc
add
or
jno
sub
push
sub
decl
adc
inc
add
mov
pop
pop
movsb
std
push
out
jge
hlt
loope
add
hlt
pop
mov
or
in
cld
roll
and
js
cld
test
out
adc
push
or
mov
sub
or
hlt
mov
and
cmpsb
test
hlt
stos
add
hlt
stos
add
jo
add
hlt
ret
scas
mov
stos
test
repz
pop
add
stos
sahf
xor
xor
mov
repz
insl
add
stos
xor
cmp
add
out
xchg
out
stos
sub
xchg
stos
das
callw
xchg
pusha
sbb
jg
sbb
inc
out
lahf
or
xchg
push
lahf
movsb
xchg
mov
inc
hlt
mov
out
add
add
sahf
pop
or
cmpsl
pop
xor
fs
iret
xchg
fiaddl
testb
hlt
psubw
hlt
hlt
sbb
in
andl
xchg
mov
inc
mov
add
std
outsb
cmc
add
call
mov
subl
bnd
notl
cld
fmull
repz
jmp
sbb
adc
mov
call
call
add
cmpsl
xchg
std
insl
mov
add
xor
sbb
or
std
cmp
xchg
adc
xchg
sbb
bound
sbb
sahf
mov
jge
imul
push
adc
dec
fidivs
jns
dec
cld
cmp
and
adc
dec
dec
add
push
movl
xor
jno
push
pop
dec
add
in
dec
sbbl
test
orl
aas
add
fsqrt
adc
sbb
xchg
push
aam
adc
fiaddl
mov
add
ror
adc
jle
cld
or
sti
xor
add
hlt
outsl
jb
flds
mov
adc
add
sti
jecxz
push
repz
or
repz
sbb
inc
mov
imul
jno
adc
outsl
pusha
popf
mov
pushf
cmpl
mov
test
cmc
pushf
daa
es
mov
add
rcll
scas
add
bound
mov
add
add
mov
out
add
mov
push
shrl
inc
mov
pop
fwait
pop
xor
cmpsb
inc
jne
repz
jl
xchg
jg
and
jnp
mov
jmp
les
push
out
hlt
push
divl
sbb
movsb
add
xchg
jl
insl
dec
pop
lods
push
loope
add
mov
push
insl
inc
xlat
orl
bswap
aas
rcrl
rcrb
mov
xchg
add
cltd
mov
icebp
lret
rclb
mov
sub
add
das
hlt
lret
shl
nop
adcl
std
fsubrl
std
aam
xor
cmpsb
or
mov
mov
cwtl
dec
flds
idivl
in
xor
or
std
mov
inc
icebp
adc
mov
jb
shrb
push
je
aas
sbb
popa
push
call
add
popa
add
cld
scas
pushf
int
leave
dec
add
jg
fsts
bound
or
ds
call
test
jne
dec
aad
sub
mov
incb
sub
cmp
cmp
sar
jae
aam
enter
sub
xchg
push
jns
sub
add
or
lahf
mov
popf
add
push
dec
mov
push
and
mov
out
ljmp
sahf
inc
lcall
inc
leave
ret
das
mov
test
aas
xorb
push
pushl
mov
std
add
aas
hlt
sub
jae
and
cmp
clc
std
movups
xchg
adc
test
or
lahf
or
add
pushf
lods
add
fnsave
ret
mov
sbb
xor
and
xchg
xchg
xlat
lea
lea
dec
cld
std
insb
into
ret
sub
add
add
int3
jmp
mov
cli
test
mul
pop
fists
xchg
mov
mov
in
pusha
mov
add
jae
mov
insb
icebp
xchg
hlt
add
adc
fsts
iret
mov
mov
addb
xchg
add
add
std
arpl
jl
cmpsl
add
lret
or
pop
add
out
hlt
movb
mov
cmp
add
push
shlb
cmp
stc
mull
icebp
inc
add
mov
lds
inc
call
test
mov
arpl
mov
out
inc
jmp
mov
sbbb
inc
add
xchg
mov
imul
or
add
pop
das
or
add
mov
mov
pop
inc
jmp
adcl
imul
rorb
xchg
mov
dec
cmp
popa
mov
es
popf
mov
lahf
les
daa
mov
and
lea
xchg
decb
pushf
lods
adc
add
inc
xchg
mov
pop
or
adc
imul
add
into
fidivl
mov
lret
pop
pop
adc
add
xchg
jge
push
cs
int3
and
cmp
addl
or
pop
lods
or
cmp
push
push
mov
addb
fisttpll
add
jb
sbb
xor
inc
jns
cli
icebp
sar
jg
repnz
add
jbe
pop
mov
sahf
mov
xchg
pop
jmp
sar
sbb
roll
ds
mov
add
clc
in
faddl
and
adc
roll
sahf
mov
bound
nop
add
out
clc
xchg
xor
add
add
out
add
ret
or
ljmp
sahf
inc
call
lcall
int
fdivr
into
iret
test
mov
pop
sub
mov
push
ljmp
lock
imulb
add
jmp
xlat
mov
jle
cld
jno
clc
xor
popa
inc
loopne
or
mov
lret
add
jge
call
add
mov
das
or
cmpl
adc
jmp
cmp
sbb
fmull
cld
hlt
inc
hlt
aas
jmp
and
imul
cmpsl
jb
stos
dec
pop
aaa
lret
rol
testl
mov
fsubr
pusha
sub
pop
add
mov
xor
pop
adc
add
or
pop
repnz
pop
mov
cli
add
add
sbb
lidtl
cmpb
jno
inc
fdiv
inc
cmpsb
add
inc
clc
fisubrs
mov
insb
xchg
test
sbb
sahf
add
or
mov
xchg
push
mov
lea
lret
aam
mov
je
cli
call
iret
xchg
jl
push
push
hlt
cs
adc
inc
clc
outsl
pop
std
mov
lahf
int3
hlt
xchg
mov
mov
push
mov
idivl
hlt
sbb
or
pusha
lea
push
lcall
and
add
add
add
mov
and
inc
mov
push
jle
cmc
xchg
stos
jbe
sbb
fimull
outsl
push
adc
push
adc
fdivrl
out
jae
out
mov
mov
fnstsw
test
clc
jmp
jl
mov
cltd
cmpsb
jp
jl
clc
lea
xor
repz
hlt
mov
jl
daa
rcr
hlt
test
inc
rolb
outsl
dec
les
cld
outsb
rcr
jp
jl
cwtl
in
mov
out
inc
xor
popf
movsl
fisttps
andb
hlt
jns
xchg
sub
xor
add
add
cmpsl
repz
jmp
ja
cmp
fstpl
mov
xchg
je
add
adc
sti
jns
lock
inc
and
stc
dec
insb
cld
in
mov
nop
sarb
negl
dec
ljmp
std
push
mov
pop
lret
mov
mov
sbb
es
sbb
call
push
inc
or
pusha
add
shl
mov
lcall
jl
out
sub
add
push
or
add
jne
ljmp
ret
push
mov
lods
rcll
add
pusha
test
pop
mov
jbe
test
mull
int
pop
push
jbe
or
jge
adc
cmp
push
fs
push
add
sub
aaa
add
je
movsl
out
add
sbb
or
lds
add
popf
push
cmp
rolb
jmp
sbb
test
lods
sti
xchg
xor
mov
cmp
dec
jns
jle
nop
mov
insb
cltd
aaa
sbb
mov
xlat
stc
cld
test
in
and
cld
ljmp
pop
add
hlt
mov
js
dec
xor
stc
hlt
push
inc
or
repz
hlt
insl
xor
add
add
pushf
sbb
insl
add
cmp
je
loope
out
in
mov
sbb
testl
rcr
testl
xor
push
mov
ja
test
insb
or
ja
fcmovne
int
mov
inc
hlt
dec
xchg
clc
or
add
das
sub
add
mov
mov
outsl
add
pop
mov
or
add
lea
int
lcall
enter
fisubrs
inc
inc
push
and
sti
aas
out
push
add
add
enter
addl
xchg
jg
subb
pop
xor
icebp
cmpl
add
mov
sub
mov
push
push
aad
pop
sub
std
aas
mov
or
ss
arpl
insb
jl
lock
daa
push
inc
add
and
in
push
jl
adc
or
xor
pop
lds
rcrb
jmp
jmp
xor
and
and
popf
add
addl
test
pop
inc
test
add
add
out
adc
ljmp
push
dec
push
pop
popa
sbb
ret
test
jle
jge
add
sbb
add
and
in
push
fldl
inc
and
incl
in
pop
mov
xor
int3
add
call
push
or
add
add
insl
clc
xorl
add
adc
loopne
push
outsb
add
or
call
and
add
dec
stos
roll
lock
and
insl
add
dec
lcall
stos
frstor
sub
adc
loop
push
imul
cltd
push
cli
insb
add
add
lds
add
ret
lods
cmp
repnz
jo
or
mov
add
add
test
loop
dec
sub
jl
insb
lods
fwait
hlt
add
ret
add
mov
in
and
out
sbb
jl
ret
dec
jg
dec
add
jg
clc
jmp
mov
clc
lret
and
add
jg
fisttps
insl
test
jg
pop
fmuls
out
add
call
add
add
jg
cwtl
out
hlt
add
ret
imul
out
icebp
xchg
jle
cltd
out
hlt
and
jge
test
testl
add
jle
cld
cmp
xchg
sbb
jmp
xchg
out
je
sub
into
call
bound
add
add
add
and
repz
rolb
or
testl
jmp
cmp
add
xchg
jp
jmp
jl
and
testb
outsb
dec
std
mov
out
rclb
je
add
jbe
ror
add
call
mov
xor
call
add
inc
or
inc
inc
test
add
mov
pop
jge
dec
add
lcall
push
add
movsb
cmc
and
cltd
pop
mov
or
cltd
stos
push
add
outsb
xchg
jg
dec
jmp
push
xchg
jge
incl
xor
sarl
jecxz
std
insb
add
or
mov
pop
and
insl
or
sbbb
add
icebp
aas
and
push
ja
hlt
insl
jle
jmp
jb
jae
xchg
sub
insl
jbe
sbb
pushf
jecxz
insl
add
xor
push
mov
xlat
jmp
shl
pop
les
and
adcb
enter
push
add
cmp
je
add
add
sarb
add
fstpt
aas
inc
fildl
lret
dec
shll
mov
add
inc
lret
stos
jnp
mov
cltd
lock
je
ljmp
ret
and
add
mov
call
ret
loop
xchg
jae
sar
adc
push
aad
mov
xor
sti
sub
aas
lods
mov
sbb
out
fadds
aaa
enter
insl
cmp
jmp
aaa
add
mov
shll
add
divl
icebp
js
subl
xchg
aas
ret
in
cmp
sbb
popf
add
mov
inc
or
jmp
fstpl
sub
ja
icebp
add
insb
divl
jp
xor
js
xor
or
mov
inc
or
push
adc
adc
jmp
ret
incl
arpl
dec
adc
scas
fwait
add
scas
sbb
jg
fiaddl
ret
add
or
inc
adc
addr16
mov
jno
xchg
jl
incl
dec
adc
ret
decl
mov
test
add
cli
jo
or
cmp
pop
add
push
clc
and
adc
dec
stc
pop
jecxz
mov
add
cld
adc
inc
test
hlt
in
add
or
outsl
cmp
std
mov
mov
adcl
add
push
aas
jb
pop
testl
ret
jmp
or
outsl
adc
pop
dec
stos
rcll
repz
xor
xchg
add
std
loope
adc
jp
aaa
sbb
push
leave
jp
aaa
or
cmp
mov
aas
mov
hlt
jle
mov
mov
xchg
jg
or
add
hlt
pop
add
mov
add
jg
call
daa
mov
lea
ds
mov
js
daa
in
ja
pop
out
out
dec
fisubrs
xlat
jl
cmp
inc
mov
adc
pop
mov
sbb
out
popf
cmp
gs
add
fdivrp
pop
imul
mov
or
pop
pop
add
add
mov
js
out
push
add
jnp
je
inc
in
add
pop
std
aam
jns
loope
js
insl
loope
pushl
cmp
pop
fucomp
cmp
jmp
aad
pushf
or
cld
mov
jns
cld
addl
jmp
je
or
mov
dec
lahf
je
clc
fnstenv
add
sub
mov
enter
incl
clc
add
aam
add
pusha
sub
cld
out
dec
jns
imul
ja
xchg
lret
adc
pop
inc
std
pop
mov
add
mov
sbb
inc
std
push
bound
into
call
push
jmp
push
adc
xor
mov
daa
jbe
jmpw
lds
aas
jb
imul
cli
push
mov
leave
test
push
stos
sbb
adc
add
int
jb,pn
ljmp
loop
into
dec
or
push
adc
inc
and
push
pop
pop
mov
cli
xor
hlt
subl
cmc
imul
xchg
jae
inc
hlt
lret
mov
mov
rol
insb
andl
loop
pop
insl
mov
mov
fsub
iret
xchg
insl
subl
daa
xchg
push
imul
bound
push
jg
sub
out
hlt
fdivrp
or
cmp
mov
inc
inc
mov
sbb
and
adcl
xor
mov
add
adc
lret
mov
sbb
cli
mov
add
sldt
add
add
je
mov
xchg
jmp
add
movl
add
mov
add
hlt
add
je
add
add
out
dec
je
imul
jnp
add
add
or
mov
add
jg
adcl
jmp
mov
add
xor
testl
add
adcl
out
inc
jmp
cmp
jl
fnstcw
sbb
inc
icebp
insb
mov
inc
or
into
jge
fldcw
push
push
jg
shll
jae
push
add
in
adc
stos
inc
mov
leave
testl
jb
decb
jne
cmp
add
cmp
test
dec
cmp
or
fnstsw
sti
call
imul
or
je
fwait
inc
cld
add
push
and
xorl
or
sahf
or
call
jne
xor
das
inc
lock
das
rorb
leave
iret
cld
pushl
sbb
fnstsw
add
add
jo
xchg
test
jne
aaa
shr
jno
incl
pop
out
push
lea
out
aas
or
mov
and
cmp
push
or
dec
pop
mov
testb
dec
jae
addb
push
pushl
fiadds
out
adcl
pop
mov
jg
mov
adc
mov
std
sti
fiadds
js
push
add
ss
sbb
decb
imul
mov
jge
negl
std
inc
add
call
ljmp
hlt
add
out
xchg
jl
out
neg
out
nop
jb
jns
inc
out
jg
add
add
fimull
mov
sti
cld
aam
sldt
add
add
adc
add
dec
insb
pop
mov
insb
mov
or
add
sbb
jne
sub
ret
insb
cmp
jo
mov
outsl
imul
add
add
out
xchg
pop
out
enter
mov
leave
add
leave
stc
add
cld
js
or
jno
add
idivl
push
add
jmp
add
incl
jmp
in
add
mull
jmp
jne
call
cld
mov
call
add
mov
aam
xor
in
cmp
call
pop
add
call
idiv
sbbb
add
xchg
lock
mov
std
push
dec
ja
add
cli
in
xchg
add
ss
mov
pop
or
roll
popf
add
mov
popa
cld
cmp
sbb
dec
test
btc
sti
add
mov
movsl
sahf
add
sbb
add
std
jns
push
cmpsb
fs
jmp
ficoms
add
adc
push
or
call
add
cmc
cli
call
jo
cmp
and
stc
xor
nop
pop
out
std
je
xor
jbe
lea
hlt
fidivl
add
std
cmp
add
hlt
inc
xchg
mov
fsubrl
cmp
xchg
sarb
push
cmpsb
jbe
dec
sbb
jns
je
cmp
insb
lock
pop
add
add
lock
out
fildl
or
orl
std
mov
mov
cmp
add
neg
push
ret
imul
cmp
imul
out
js
idivb
push
out
in
mov
jb
rol
iret
adc
add
jecxz
jb
cmp
inc
inc
mov
and
add
jp
js
insb
pop
add
add
shrl
add
add
lcall
adc
add
inc
fmul
jle
ds
ret
mov
push
jne
insb
mov
loope
add
pop
vcvtsd2si
dec
subl
shlb
sbb
mov
orb
negl
shrb
jmp
add
jge
icebp
hlt
mov
test
testl
cmp
inc
inc
ret
add
fwait
ja
xchg
je
repz
lock
pushf
enter
enter
xor
call
adc
mov
pop
push
push
clc
add
xor
fbld
sbbl
push
xor
sbb
sti
xchg
dec
in
add
ja
neg
cmp
int3
pop
or
pop
add
jo
push
decl
hlt
adc
or
cs
aad
clc
invd
rolb
push
push
ljmp
fldl
dec
push
xchg
call
shll
ss
test
pop
mov
in
jo
retw
jo
mov
popf
call
add
testb
sub
mov
pop
rorl
add
pusha
jle
dec
sbb
add
pushf
jl
lock
mov
mov
xor
fwait
push
add
inc
pushf
testb
cmp
add
mov
out
jmp
dec
xchg
push
stos
cli
aaa
outsl
sbb
call
fiadds
jg
xchg
sub
add
andl
in
inc
inc
je
ljmp
push
adcl
ja
mov
hlt
addr16
sub
add
out
jae
out
jl
sub
clc
pop
and
ret
push
rorb
mov
das
rorb
das
inc
clc
add
jle
test
lret
and
xchg
jle
std
jno
ret
andl
add
hlt
orl
imull
testb
pop
push
adc
hlt
aam
iret
sub
iret
cmp
out
add
sahf
aam
aaa
movsl
xor
xchg
cmpsl
pop
aas
roll
cli
call
jae
je
ja
add
add
ljmp
add
add
lock
fiadds
jb
call
lock
xor
call
jo
arpl
call
hlt
jge
lods
or
mov
lods
aam
test
iret
imul
cmp
call
add
shl
sbb
add
dec
decl
pop
xchg
enter
add
add
sub
jle
add
add
mov
mov
push
cld
jne
hlt
aad
nop
fsubp
xchg
movsl
add
mov
jle
lcall
mov
das
fcmovnbe
shll
push
icebp
jmp
lret
pop
add
mov
enter
addw
add
insl
or
pop
add
jg
pusha
mov
fs
incb
jg
mov
in
xlat
cmp
hlt
or
cld
fistpll
je
xchg
ja
sbb
push
dec
sub
sarb
aaa
cmp
cmc
push
outsl
cwtl
dec
mov
faddl
mov
fldt
add
mov
dec
test
imul
inc
inc
dec
push
sbb
cmp
js
pushf
xchg
hlt
out
mov
cmp
dec
add
pop
add
mov
jns
pop
js
sbb
jge
stos
ret
jp
mov
mov
jl
jb
clc
add
outsb
sub
cmpsb
add
ss
sbb
aas
pop
ljmp
fs
or
movsb
pop
push
jne
insl
xchg
and
add
pop
pmaxsw
xchg
pop
jnp
rclb
ja
pop
stc
push
xor
add
shll
xor
xchg
loopne
inc
mov
lods
sub
fbstp
je
stos
repz
add
sbb
jae
pop
jmp
inc
std
ljmp
lods
dec
ret
mov
inc
ja
and
add
add
mov
push
mov
jmp
and
std
fsubr
idivb
jmp
testl
and
icebp
test
frstor
cmp
or
jb
mov
add
adc
or
dec
or
push
popa
xor
in
rcrb
or
data16
and
in
add
fidivs
add
leave
xchg
ds
lret
sahf
push
sti
adc
inc
cmp
push
add
push
add
gs
add
mov
xchg
test
popf
fisttps
insb
ffree
pop
mov
mov
out
mov
stos
stc
cmpl
add
add
hlt
mov
pop
jns
popa
cmc
inc
mov
sbb
add
add
bound
imul
mov
imul
loopne
jo
xor
sti
ljmp
cmc
imul
mulb
imul
hlt
imul
imul
jns
push
stos
fwait
jle
inc
pop
push
sbbl
pop
test
call
hlt
fs
add
shrl
dec
outsl
xchg
push
popa
pop
imul
andb
scas
push
insb
movsl
fdivs
popa
fs
stc
ja
jg
xlat
fbstp
xor
outsl
xorb
jle
inc
jb
add
fs
add
inc
hlt
add
mov
fisttpl
inc
add
cli
inc
int3
push
nop
add
mov
out
xor
pusha
push
add
add
add
insl
rclb
xchg
pusha
movsl
xchg
add
cmc
jno
roll
insb
lret
dec
testl
pop
fwait
jo
push
hlt
mov
sbb
sbb
int
push
xchg
jne
call
lea
lea
out
jae
shrl
je
fcmovnb
jae
sarl
jmp
jecxz
add
out
mov
pop
inc
jb
pop
std
mov
movsb
pusha
adc
loopne
mov
inc
mov
push
or
sti
or
add
movups
std
lcall
or
fadds
add
adc
pusha
orb
movb
cmp
outsb
or
add
cli
mov
cli
jne
jo
jne
pop
incl
jp
pop
or
fiadds
jae
loope
or
test
or
pinsrw
add
mov
lahf
int
xchg
call
mov
test
adcl
and
mov
mov
cld
jae
inc
or
hlt
call
loope
push
xor
add
add
imul
mov
scas
gs
sahf
imul
add
inc
hlt
ljmp
adc
fs
jno
cld
sti
out
shrl
out
or
enter
fs
es
rol
fs
imul
jmp
ljmp
test
aam
addr16
add
jge
pop
push
addr16
adc
sbbl
add
in
imul
pop
pop
xor
addr16
fld
inc
int
inc
insl
dec
mov
jg
xlat
stc
js
cmp
xchg
pop
mov
xchg
add
lock
insb
aas
loope
pop
push
jecxz
push
add
fsts
dec
cli
pop
test
pop
inc
data16
fidivs
add
add
das
inc
mov
dec
fwait
sub
testl
je
or
in
shl
fsin
lds
mov
sbb
adc
pop
daa
mov
sbb
adc
xor
mov
scas
cltd
mov
add
xchg
aad
cmp
jmp
fstps
add
add
jmp
bound
pop
add
loopne
xor
sbb
pop
mov
call
push
lds
cmp
bound
add
xor
jne
sarl
addr16
call
fwait
loope
pop
or
inc
dec
push
mov
pop
add
inc
test
in
movsl
adc
fiadds
cmpb
add
add
insb
adc
jnp
pop
jae
mov
call
add
pop
orb
repz
push
pop
or
hlt
push
add
hlt
out
daa
mov
clc
js
out
adc
jbe
push
insb
add
xchg
imul
in
cmp
cmp
add
ja
fs
or
add
incb
mov
fiaddl
push
adc
leave
pusha
inc
add
inc
or
sub
outsb
and
cs
pop
xchg
or
hlt
cmc
sti
mov
mov
add
cs
or
imul
add
push
xchg
out
js
out
hlt
test
imul
daa
cmp
std
clc
ret
add
jbe
jnp
insb
pop
xor
xor
adc
lcall
out
xor
add
mov
mov
mov
cli
dec
jnp
into
mov
rcl
jmp
movsl
add
and
loop
divl
xor
add
sbb
jge
fcomip
ljmp
clc
pop
jno
jp
or
imull
lock
push
add
arpl
pop
xchg
fs
aaa
push
pop
push
addr16
adc
xor
mov
std
push
inc
out
incl
pop
push
std
not
aad
out
arpl
call
adcb
inc
stos
add
dec
out
mov
std
scas
push
add
sbb
add
cmp
lea
add
jae
int
xchg
or
jb
pusha
ud2
inc
lea
jne
jp
jbe
add
inc
and
sbbb
out
jne
lcall
mov
mov
ljmp
push
push
roll
in
sahf
add
les
aad
or
cltd
and
dec
in
call
pop
in
lock
add
add
cmpl
add
add
out
xor
add
hlt
sub
cmp
out
fistpl
jo
aad
ja
pop
add
and
add
push
jg
sbb
bnd
push
ret
pop
pusha
test
add
icebp
mov
cmp
jecxz
imull
cmpsb
mov
push
add
mov
jmp
adc
insl
mov
outsl
sub
mov
push
jl
imul
imul
add
or
add
add
add
call
sbb
hlt
add
shr
mov
adc
std
data16
shl
ret
das
out
sub
hlt
add
pop
add
ljmp
aaa
pop
xchg
pop
daa
or
lods
pusha
hlt
insb
cmc
add
push
pop
inc
hlt
add
sbb
cmc
in
subb
ficoml
insl
fsub
sub
and
mov
add
mov
or
insb
mov
test
cmp
and
push
std
bound
sti
outsb
cmp
sub
mov
insb
sar
std
bound
mov
cmp
push
pop
push
push
xchg
fcoms
je
push
in
fcoml
insl
aaa
fldcw
cmp
ljmp
adc
lods
pop
mov
out
out
sbb
pusha
fimull
inc
pop
mov
divb
maskmovq
testl
add
pop
dec
push
fisttpll
jg
adc
add
add
jge
sbb
lock
jge
jmp
lock
inc
mov
or
sbb
mov
mov
clc
xor
fdiv
push
es
in
cmpl
es
mov
ret
jne
lea
clc
cmpsb
mov
ret
inc
bound
call
mov
xor
sar
push
pop
mov
fstp
cld
hlt
adc
aam
fst
int3
inc
mov
hlt
pop
mov
or
pop
test
std
or
sub
outsl
mov
mov
test
jae
pop
push
sub
out
pop
mov
mov
leave
ja
cmc
dec
adcl
push
std
add
add
fiadds
jmp
pop
adc
xor
jle
or
cmc
imul
push
jne
jmp
aas
add
ror
sub
push
icebp
int3
dec
and
sub
and
push
bound
testb
enter
lods
lahf
inc
in
add
loopne
mov
inc
mov
in
mov
jge
pop
add
cmc
mov
pop
loop
mov
mov
cmc
int3
sbbb
hlt
rcl
sbb
mov
flds
jne
add
test
add
rcrb
push
testl
subb
push
std
pusha
xor
jmp
jmp
jnp
imul
sub
mov
mov
and
mov
dec
add
push
addl
add
std
jmp
mov
push
insb
mov
push
push
stos
add
aam
mov
mov
dec
push
test
out
mov
call
inc
pop
add
or
pushf
add
fidivs
add
push
loopne
out
dec
add
adcl
add
enter
jl
add
dec
add
inc
sub
jle
sbb
push
mov
and
push
out
jl
incb
mov
jns
faddl
test
into
mov
add
lods
xor
inc
inc
adc
addb
nop
push
add
lods
jo
ljmp
push
dec
add
adc
mov
mov
das
dec
add
add
mov
pop
aas
add
cmp
adc
clc
cs
dec
or
cmp
rorl
jge
out
lds
fcmovbe
div
sbb
mov
rcl
add
hlt
sub
or
jne
cmc
pop
mov
jmp
mov
int3
xchg
popa
std
rcl
mov
pop
fsub
add
in
pop
imul
pop
add
pop
add
xchg
add
hlt
jmp
jns
test
add
mov
gs
add
jp
push
test
stc
out
insb
popa
push
aam
sbb
xor
jno
sti
jnp
pusha
jae
mov
jge
add
add
orb
adc
scas
add
fcmovu
scas
rcll
daa
pop
jo
call
or
fucompp
add
xorb
jmp
dec
pop
pop
mov
push
push
or
jmp
pop
add
and
add
jmp
rorl
in
xchg
mov
add
jmp
push
pop
subl
lahf
jne
ja
cli
shlb
adc
std
test
jnp
xchg
testl
bound
add
dec
lea
dec
lcall
xchg
insl
mov
clc
push
inc
stc
call
or
jae
add
call
pop
add
out
and
incl
sub
mov
inc
cld
dec
adc
and
cmpl
icebp
add
cli
cli
aaa
xchg
mov
push
gs
add
or
xor
cli
jne
pop
std
push
add
fbstp
call
and
pushl
fnstenv
hlt
pop
jmp
std
jmp
hlt
cmc
shr
ljmp
jge
push
subl
clc
call
pop
int3
pop
jg
add
xor
stos
mov
cmp
pushf
add
add
add
or
mov
imul
jmp
add
add
push
inc
inc
hlt
out
mov
jmp
add
add
jne
jmp
idiv
and
mov
int3
or
adc
pop
dec
jecxz
imul
dec
xor
mulb
xchg
in
sarl
testb
push
movsb
pop
test
sub
out
jl
into
pop
mov
and
pop
stos
and
dec
scas
pop
bound
dec
sahf
fiaddl
iret
pop
pop
and
dec
mov
sbb
and
dec
jle
daa
pop
add
dec
std
bound
cld
pop
sbb
call
rorb
cmpsl
cmp
in
xchg
call
das
into
pop
call
pop
pop
call
mov
scas
mov
cmp
ljmp
out
cmpsb
inc
std
cs
sarl
mov
jp
clc
jb
add
push
cmpsl
aam
je
and
std
xchg
jnp
or
add
out
xchg
inc
and
dec
in
mov
add
mov
jle
dec
push
fimull
pop
add
mov
sbb
push
call
add
pop
add
push
xchg
dec
push
pop
das
and
and
and
push
rcll
sbb
adc
or
leave
jg
pop
mov
loope
mov
xor
movsb
test
push
push
repz
inc
jne
add
je
add
into
incl
in
xor
push
je
imul
add
sub
ret
cld
add
push
cmp
pop
add
fmul
and
add
pop
add
movsb
addr16
adc
add
adc
lods
out
js
add
sti
mov
add
pop
mov
loopne
and
lret
mov
int3
in
add
subl
add
xchg
fstpt
dec
and
mov
add
dec
stc
adc
jl
inc
xlat
sbb
scas
cmp
add
call
xlat
sbb
mov
icebp
out
adc
sub
add
add
scas
pop
adc
cmc
xor
add
dec
call
sub
cmp
add
shrb
stc
add
add
mov
and
std
popf
adc
lock
je
fisttps
inc
in
add
adc
and
jmp
addl
sbb
call
pop
int3
and
inc
es
call
dec
jl
pushf
xor
and
mov
call
iret
rcrl
pusha
dec
std
mov
inc
mov
add
add
test
int
cmpsb
imul
xor
and
rclb
or
push
mov
sbb
call
xchg
cmp
cli
je
pop
sti
cmp
in
pop
leave
nop
xor
xor
rcll
or
mov
sbb
or
cli
mov
and
shlb
push
push
and
xor
lea
mov
dec
lea
loopne
je
or
xchg
ja
call
mov
cld
ja
push
movsb
or
fcomi
movsb
stos
pop
and
pop
std
movsb
xor
dec
mov
jb
ret
out
add
call
xchg
dec
std
outsl
xor
shlb
aad
daa
pop
mov
add
jg
adc
push
cmp
clc
cld
ret
sbb
sub
cmp
leave
mov
dec
lds
adc
sbb
fwait
js
fsubl
pushl
dec
push
mov
aam
add
mov
cmpsl
in
sub
ja
xor
jne
jmp
out
cli
inc
jb
add
adc
jle
fidivs
dec
pop
xchg
sti
inc
xchg
xchg
lret
add
cmc
lods
jl
mov
mov
inc
shll
call
inc
ds
jge
insb
dec
or
xchg
dec
add
cli
pop
out
inc
push
dec
jge
insb
push
call
sbb
adc
add
add
out
dec
inc
std
rcrb
call
add
loop
arpl
aas
je
hlt
aas
adc
add
imul
scas
mov
sbb
inc
je
jmp
adc
in
add
add
not
mov
xchg
fdivrs
es
cld
inc
int3
data16
jle
add
xchg
push
bound
aad
aam
sbb
lock
mov
adc
add
inc
adc
mov
cmp
andl
sbb
inc
icebp
call
mov
add
add
ret
adc
mov
roll
aam
xchg
int
add
hlt
data16
loop
push
inc
cmp
adc
es
repz
push
pop
ja
incl
sarb
pop
xor
ss
push
sti
adc
lods
lret
adc
std
push
hlt
jge
fstps
dec
test
notb
pop
jmp
pop
cmp
mov
adc
inc
sar
lock
jae
add
dec
jae
inc
push
sti
outsb
inc
jae
in
dec
add
add
aas
gs
add
hlt
and
jne
mov
hlt
sub
inc
mov
std
add
aas
hlt
stos
aas
or
push
stc
decl
inc
test
sub
iret
and
cmc
mov
add
xor
out
mov
insb
inc
ficoml
mov
adc
sub
add
je
jbe
je
in
rorb
imul
pop
iret
and
add
add
add
cli
outsb
leave
fidivl
hlt
sub
mov
bound
aaa
adc
andl
mov
ja
out
sti
dec
sub
push
mov
lahf
dec
cltd
ds
sub
out
mov
add
inc
lea
adc
sti
jb
sub
mov
fidivrs
int
xor
add
hlt
mov
mov
mul
ret
std
rclb
testl
mov
std
mov
ds
scas
in
adc
in
jbe
or
mov
mov
hlt
faddl
cs
add
and
loopne
xor
or
call
ret
xchg
adc
inc
std
addb
add
add
cmp
push
push
and
out
cmp
mov
push
call
imul
sbb
shlb
add
mov
std
decl
inc
mov
fstps
inc
movb
mov
leave
cli
jne
loopne
add
or
jne
mov
incl
mov
mov
add
add
incl
rolb
imul
outsl
lret
les
inc
dec
ret
out
call
jmp
sti
fiadds
std
lds
cmp
sti
imul
and
sub
cmp
jbe,pn
and
inc
jae
inc
int
or
paddw
cmpsb
dec
xor
in
push
add
stos
cld
jecxz
jp
outsl
sub
jle
inc
adc
push
outsl
and
je
add
sbbl
mov
xor
sti
sub
dec
inc
jo
mov
js
cmp
hlt
add
iret
sti
andl
shr
add
movsl
mov
add
js
xchg
dec
jne
add
add
rcr
into
out
xlat
js
adc
add
fmuls
and
popf
mov
and
andb
fistpl
add
xchg
jl
loope
inc
out
fld
mov
add
add
jb
je
sbb
std
inc
or
mov
mov
call
gs
dec
loopne
or
add
ffreep
and
lods
call
push
ret
pop
jp
aaa
je
sub
dec
pushf
mov
test
add
inc
stc
pop
dec
add
imull
xor
adc
add
cmp
inc
add
push
sahf
std
enter
repz
or
loop
adc
inc
std
imul
sbb
adcl
jno
add
sbb
sti
je
adc
shll
xchg
je
cmc
call
xchg
sti
ss
jbe
add
in
push
add
lea
dec
cld
jmp
mov
pop
pop
or
push
ret
ret
lods
cmp
cli
lea
sbb
movsl
cwtl
ret
cli
lea
sub
loopne
adc
sub
add
add
mov
inc
adc
pop
sar
adc
bound
int3
jae
je
or
sbb
mull
mov
in
sub
push
jg
in
jge
adc
mov
mov
pop
jb
jno
mov
outsl
jne
cmp
jae
or
inc
cld
je,pt
xor
adc
add
push
add
push
insb
or
inc
mov
idivb
add
sub
adc
into
adc
push
inc
nop
imul
sbb
fimuls
shll
add
mov
sbb
out
mov
adc
mov
add
out
mov
lret
movsb
aas
movsl
aaa
fcompl
add
out
scas
cmp
mov
cmp
mov
pop
add
stos
loop
sbb
stos
add
repnz
sub
ja
stc
mov
add
cmp
test
xor
push
subl
sahf
lods
testl
mov
iret
imul
fistpll
jmp
inc
cs
add
or
std
arpl
inc
add
inc
push
jb
loop
mov
jl
push
jo
loop
decb
sbb
inc
in
roll
push
inc
inc
add
cld
mov
cmp
and
sbb
std
dec
mov
add
add
add
jne
xor
jmp
adc
mov
pop
add
lldt
dec
std
cmp
jbe
fisttpl
lahf
ljmp
dec
add
rol
cli
and
adc
imul
mov
mov
je
mov
dec
dec
inc
std
imul
cld
shll
addb
hlt
sub
mov
xchg
push
cmp
incl
outsb
adc
aaa
ja
sbb
ja
or
dec
adc
mov
mov
or
xchg
add
or
in
outsl
xchg
cmp
add
lcall
and
inc
or
xchg
adc
cs
push
jp
adc
or
lock
int3
add
inc
sbb
mov
call
test
out
hlt
sbb
pop
loope
arpl
pop
add
add
cmp
out
out
adc
xor
cmp
cmp
push
faddl
pop
filds
jne
out
mov
out
push
mov
jle
or
add
call
cld
add
inc
jecxz
cmpsl
jg
rol
add
jmp
jecxz
fisubs
dec
mov
xor
fld1
jns
jno
xor
out
or
popa
dec
add
add
lods
mov
inc
inc
cmp
testl
push
jmp
add
test
idivl
mov
dec
call
fsubp
ds
xor
stos
repz
fnstsw
verw
jl
inc
push
inc
cmc
cmp
jnp
mov
sbb
ret
mov
xchg
pop
cmp
test
cmp
and
xchg
or
mov
dec
inc
cmp
sarb
jne
addb
lret
daa
sbb
fcomps
or
add
cmc
cmp
std
test
out
cli
pop
xchg
rol
pop
push
mov
into
fsubrl
push
adcl
cs
inc
xor
movsb
into
out
insl
js
xchg
and
mov
mov
jmp
loopne
xchg
jmp
pushf
repz
mov
mov
imull
adc
sub
dec
in
ss
cmc
sbb
inc
inc
aam
add
hlt
mov
cmp
pop
mov
xchg
mov
mov
int3
and
jb
mov
mov
cmp
add
psubusb
leave
cmp
add
push
mov
mov
mov
scas
xor
mov
fnsave
add
je
movb
sub
imul
adc
jmp
xchg
ret
xor
fsts
xlat
xlat
fistl
mov
pop
imulb
jmp
mov
jae
xchg
jae
inc
test
adc
xchg
add
add
mov
add
add
adc
push
test
add
mov
pushf
jmp
mov
xor
lods
filds
jmp
jge
leave
int
ror
jp
jmp
shll
dec
add
and
cltd
rolb
sub
fbstp
add
ret
sbb
sbb
jb
mov
stos
rep
arpl
mov
lret
es
sbb
in
dec
add
jbe
mov
add
inc
icebp
cmp
outsb
cmc
mov
std
mov
incl
dec
fmull
jmp
jno
jp
or
cmp
mov
jp
pop
adc
ret
das
rolb
add
add
sub
mov
in
mov
adc
or
xor
out
inc
std
popf
out
inc
popf
orb
insb
mov
cmp
sbb
sub
mov
ret
test
mov
jmp
jmp
mov
add
mov
adc
mov
movsb
repz
add
add
push
cmp
push
mov
adc
mull
or
mov
es
inc
mov
jae
xchg
inc
cld
mov
xchg
mov
mov
out
ja
and
ja
and
sbbl
add
lcall
inc
movsb
ss
inc
lods
push
hlt
inc
movsb
dec
pop
inc
lods
aaa
push
adcl
add
movsl
xchg
in
mov
shrb
jmp
mov
adc
jne
push
add
add
and
sarl
dec
jmp
test
sahf
mov
pop
jecxz
aaa
push
out
aaa
and
mov
aaa
sub
iret
add
in
mov
adc
iret
cwtl
test
hlt
lret
adc
mov
and
inc
inc
je
ja
add
cli
lds
ret
jg
and
add
ja
pop
imul
sub
arpl
adc
clc
jne
clc
add
adcl
std
call
int
or
xor
std
jmp
inc
jle
out
and
std
xor
aad
sbb
sbb
sub
cltd
xor
xlat
loopne
fildl
stos
cltd
dec
call
sarb
jmp
jne
call
add
inc
mov
lock
push
cld
jne
add
push
add
out
adcl
jle
in
adc
mov
idiv
andl
mov
jle
dec
adc
inc
push
push
mov
lret
cmc
cli
pop
sbb
sldt
stos
jmp
mov
xor
xor
dec
jmp
xchg
jnp
mov
jmp
push
dec
cld
movsb
fildll
xor
jo
ds
hlt
mov
sti
outsl
nop
xor
cmp
mov
or
rclb
lahf
xlat
xor
jle
add
push
mov
add
adc
add
cmpsb
xor
mov
mov
outsl
lock
int3
mov
adc
fdivs
mov
jg
sub
std
add
lods
inc
jmp
xor
stc
jge
and
jb
push
xor
push
jae
jb
jmp
out
repz
pop
lock
daa
add
jnp
adc
cmp
icebp
mov
mov
fsubrl
lds
jge
xor
fcomps
jl
sbb
xor
bound
ret
pop
mov
mov
leave
mov
or
sahf
jnp
and
out
add
fs
jae
inc
mov
or
lret
adc
mov
cmp
add
add
ret
fldt
or
bound
jb
add
int
subb
jp
dec
mov
jge
not
mov
ret
repz
add
imul
lret
rol
mov
and
jo
dec
mov
jle
int
or
add
cmc
incl
or
xchg
pop
mov
test
gs
push
ds
mov
or
dec
jns
dec
clc
inc
sarl
cmc
inc
cld
push
addr16
mov
repz
dec
cld
dec
lods
add
add
push
or
or
xchg
mov
rcrl
xor
in
add
sub
mov
in
xchg
daa
jp
outsl
lock
lods
sbb
xor
pop
std
hlt
push
cld
hlt
movsb
mov
xchg
js
mov
mov
mov
lahf
sbb
in
mov
movsb
xorb
movsb
lret
dec
sbb
sub
push
jge
sub
add
sbb
mov
out
fsubrl
mov
repz
mov
paddw
mov
jae
adc
shrl
icebp
and
pop
dec
sbb
and
jne
mov
add
mov
add
hlt
lds
pop
pusha
rol
mov
mov
xchg
add
lret
ja
cmc
iret
je
jle
add
or
jbe
mov
sbb
sub
pop
std
imul
loopne
jo
push
stos
loope
dec
lcall
aaa
and
push
jne
jmp
jmp
mov
add
sub
sub
fwait
or
pusha
enter
mov
mov
sbb
mov
and
jnp
add
mov
insb
or
mov
adc
jno
adc
loope
enter
enter
mov
push
push
adc
add
add
ja
or
push
add
cwtl
imul
stos
cmp
mov
add
or
mov
and
push
fmul
inc
incl
fcompl
add
aad
or
xchg
icebp
jo
pop
or
incl
leave
cli
jne
icebp
jo
in
out
jo
jne
stc
ljmp
lock
xor
mov
in
jne
and
out
mov
push
pop
xchg
sahf
inc
inc
dec
cld
call
dec
or
out
cld
jne
add
or
add
sub
icebp
ja
xor
jg
xor
mov
xor
std
ja
pop
adc
pop
adcl
stc
mov
dec
sub
das
add
and
adc
clc
jl
ja
fcoms
fcomi
shl
jp
xor
xor
nop
push
rclb
jmp
pop
pushl
jle
cld
xchg
into
jecxz
push
add
add
push
ds
hlt
cmpsb
mov
outsl
nop
and
mov
frstor
add
add
mov
cmp
incb
add
jle
fsubrl
adc
jno
lret
mov
loope
mov
mov
push
add
das
sbb
in
ret
mulb
daa
pop
pusha
test
mov
mov
hlt
das
jne
jle
repnz
test
dec
or
push
add
dec
add
xabort
mov
lea
mov
out
shrb
cmp
movb
xor
sub
std
jo
stos
js
xlat
fimuls
cmp
sahf
pop
mov
xchg
stc
push
mov
mov
add
sbb
dec
rolb
cmp
mov
xor
test
add
mov
testl
in
cld
mov
lea
ljmp
pusha
pushf
fadds
arpl
adc
sbbl
mov
leave
faddl
fildl
call
or
xlat
test
add
testl
dec
in
adc
rclb
mov
in
push
movsl
add
mov
in
out
push
addr16
decl
cmc
xchg
mov
add
xchg
fsubrl
dec
fadds
in
inc
clc
pop
push
in
mov
data16
hlt
jo
mov
sbb
dec
dec
pop
jne
inc
fbld
xor
es
add
mov
pop
clc
mov
imul
or
pop
lahf
in
sbb
pop
inc
jmp
ja
aam
sub
inc
lock
xchg
pop
jns
in
sub
notl
cmc
mov
and
add
jae
adc
pushf
inc
inc
or
hlt
inc
cmp
add
arpl
add
mov
jge
xor
push
add
adc
sub
cmc
mov
mov
fldenv
test
jge
push
jmp
lahf
jmp
mov
or
je
stc
push
cmp
loope
jp
or
into
jp
sbb
push
mov
add
add
add
add
jb
mov
out
jae
jl,pt
push
jo
cmpsl
inc
add
sbb
and
sbb
sub
add
xchg
xor
in
enter
xchg
notl
ljmp
inc
cmp
sub
mov
test
in
mov
jmp
jmp
add
and
enter
aas
jmp
jb
xor
in
mov
mov
add
bound
pop
ljmp
pushf
iret
shll
inc
mov
xor
add
inc
sbb
adc
add
shlb
or
popf
arpl
add
arpl
add
sbbl
xor
lahf
add
int3
clc
pop
mov
out
fs
mov
inc
lret
add
dec
fildl
jg
sar
pop
or
fadds
popf
sahf
add
add
jo
hlt
jb
testl
cwtl
and
negl
and
pop
adc
mov
add
add
jnp
jmp
xor
mov
cmpl
cmc
xchg
movsl
pop
jl
and
daa
jecxz
mov
pop
and
add
hlt
sbb
cmc
sub
lock
adc
adcl
adc
loopne
adc
sub
cmp
std
inc
add
test
xor
jge
fcmovu
ss
cmc
mov
add
mov
fwait
pop
push
hlt
ds
pop
xchg
push
cmpsl
or
or
cmp
cmp
jne
repnz
hlt
cmp
rolb
push
mov
mov
push
and
jl
sub
jp
insl
outsb
sti
sbb
and
cmpps
sbb
cwtl
add
fstpt
mov
jb
shl
jg
repz
or
arpl
sti
fisttpll
or
or
and
or
mov
xor
pop
sub
push
jb
mov
push
push
dec
in
jb
inc
lcall
data16
or
sahf
cmpsl
add
add
adc
add
push
push
aas
call
and
dec
ljmp
xchg
fmul
test
mov
adc
leave
mov
inc
enter
mov
pop
pop
adc
frstor
rep
add
pop
hlt
mov
aam
in
data16
dec
lds
into
gs
lcall
cmpb
or
mov
add
add
mov
rorl
add
in
aas
rorl
mov
arpl
or
out
out
loop
mov
cmp
mov
push
add
lds
test
sub
add
mov
pop
add
and
dec
adc
add
aad
das
mul
sbb
mov
xchg
int
sti
jle
mov
xchg
mov
jge
pop
or
hlt
mov
add
xchg
adc
aaa
pop
mov
mov
mov
sub
mov
in
xchg
pop
outsl
add
clc
sbb
ljmp
add
out
in
mov
adc
fstl
xor
add
test
dec
mov
add
add
fimuls
cmc
xor
inc
in
jno
out
push
add
faddl
cmpsb
insb
shr
movsl
in
aam
mov
xor
or
dec
mov
fisttps
adc
fimuls
jge
ret
mov
add
mov
mov
push
mov
pop
mov
and
mov
mov
stc
int
xor
test
in
scas
inc
jb
test
shrb
fwait
iret
and
add
add
sub
add
out
sub
je
clc
sti
mov
inc
jmp
fstpt
call
jle
jmp
inc
adc
pushf
add
sbb
in
add
sub
mov
add
push
push
in
imul
in
enter
adcb
jle
lock
enter
adcb
jle
hlt
xor
rorl
adcb
pop
dec
mov
or
jmp
dec
jmp
dec
call
cmpsb
push
or
add
inc
jno
xchg
aas
jno
sahf
imul
push
cld
jne
jle
aam
jnp
mov
push
mov
sbb
int3
add
std
popa
add
inc
les
out
sbb
lods
xchg
mov
ret
mov
mov
dec
mov
pushf
mov
pop
xchg
or
das
std
cmp
inc
cmc
pop
mov
nop
cmpsl
call
mov
jne
sti
arpl
mov
pop
inc
push
std
dec
test
lcall
cmc
into
mov
sahf
daa
mov
imul
dec
inc
sar
lea
push
cltd
cmc
sbb
and
xchg
iret
adc
rcrb
mov
xchg
not
fadd
faddl
sbb
rcll
add
stos
or
add
rolb
in
push
mov
hlt
lahf
das
clc
xor
mov
loopne
stos
pop
push
jge
lret
cld
test
hlt
mov
sub
pop
shrl
cmp
cmp
jmp
jb
ja
add
fwait
mov
jnp
testl
or
add
mov
lods
push
add
or
mov
std
jmp
xchg
adc
lock
mov
addr16
add
mov
movsb
rorb
cmp
xor
mov
test
lock
jb
or
add
sub
push
mov
out
popa
mov
add
push
addb
lods
idivl
or
or
xchg
mov
ret
inc
mov
std
pop
cmovs
xchg
aaa
je
cli
mov
ret
mov
adc
push
les
add
les
mov
dec
icebp
pop
lea
add
cmpsl
mov
and
pop
les
add
decl
in
lcall
dec
add
lea
pop
dec
lea
and
out
mov
pop
in
dec
andl
call
imul
dec
jg
or
std
mov
mov
pushf
sbb
add
roll
cmp
or
or
sub
negl
xchg
and
shrb
sbb
add
iret
cld
jmp
xchg
mov
add
and
cmc
sbb
push
pop
push
icebp
cld
jmp
add
sub
add
add
scas
mov
ss
sbb
clc
jbe
roll
xchg
sti
or
out
xor
adc
add
sbb
push
sub
leave
and
testb
mov
xor
add
inc
xor
enter
daa
add
icebp
mov
es
adc
add
or
shl
inc
jb
add
push
hlt
add
cs
testl
mov
jnp
sub
lcall
gs
std
insl
mov
cwtl
setg
xchg
or
test
std
add
add
add
sbb
add
jmp
cmc
add
lcall
jnp
popf
add
jb
pushl
or
add
ss
or
in
enter
and
out
sti
and
xor
push
mov
bound
out
jecxz
call
or
add
or
inc
inc
int3
mov
mov
jl
int3
add
inc
int
test
std
decl
mov
dec
incl
mov
std
fyl2x
cli
mov
jae
mov
add
jl
addl
xor
push
mov
jg
in
dec
push
add
push
sarl
add
fldl
hlt
sbb
xchg
mov
sub
fisubs
xchg
fsubrl
or
sub
or
movsb
fisttps
outsb
std
sbb
jmp
cmpsb
mov
or
repz
push
and
add
sbb
jb
jnp
mov
or
ret
and
jmp
or
add
sbb
or
test
std
inc
adc
rolb
or
hlt
sbb
and
ja
mov
ja
and
mov
mov
mov
jo
in
hlt
or
repz
pop
sub
or
insl
sub
sub
sub
dec
mov
fdivrl
push
dec
mov
popa
sar
daa
and
mov
lods
ja
push
jle
or
push
mov
push
inc
pop
or
daa
popf
jb
dec
mov
add
inc
jae
idiv
push
sahf
inc
ret
hlt
jno
aad
repnz
xor
or
cmp
mov
pop
mov
out
clc
or
cmpxchg
mov
dec
dec
lahf
mov
add
fwait
mov
cli
jbe
dec
add
insl
cmp
call
dec
or
out
pop
adc
jbe
push
jl
or
jmp
mov
mov
out
add
out
add
inc
cmp
fsubrs
push
fwait
cmp
xlat
add
repz
out
mov
mov
mov
test
jle
clc
add
xchg
pop
add
push
insb
sub
dec
add
inc
inc
push
xor
lds
clc
incl
mov
adc
add
add
add
adcl
cld
decl
push
cmp
mov
repnz
adc
cmc
subl
std
test
insb
outsb
xor
sbb
getsec
stc
mov
xor
add
xchg
add
iret
mov
add
loope
cld
loope
jl
dec
xchg
push
std
pop
lcall
hlt
sbb
repnz
sbb
in
mov
sarl
mov
adc
push
or
jns
sbb
add
adc
lcall
mov
sbb
punpcklwd
jb
bound
test
mov
nop
repnz
std
stc
ret
mov
push
jb
sti
pushf
es
in
add
add
lods
mov
pop
ja
jno
cmpsl
add
jmp
hlt
cmc
push
pop
orb
hlt
add
mov
hlt
add
add
call
xchg
add
add
out
clc
jg
pop
add
add
ret
sub
popf
hlt
ja
jae
sbb
arpl
cmpb
add
ret
inc
ljmp
xor
std
gs
orl
add
inc
mov
lock
test
hlt
or
push
add
loop
inc
call
repnz
inc
movsl
xor
add
add
addl
pop
pop
add
scas
adc
push
sub
push
inc
insl
inc
push
push
and
ss
inc
or
jmp
lods
enter
add
mov
or
jmp
push
xchg
add
lea
mov
mov
sti
test
sbb
pop
int
or
dec
inc
repz
sahf
adc
add
or
adc
rolb
mov
xor
xchg
adc
bound
adc
jno
repz
fildl
inc
repz
or
add
int
rolb
or
je
mov
je
lds
cwtl
testb
hlt
sub
adc
cmpl
repz
inc
inc
ja
std
xorb
add
add
adc
les
add
iret
pop
cmp
cmp
xor
pop
inc
inc
ja
or
daa
movsl
lret
dec
pop
jecxz
mov
ja
repz
mov
and
daa
cmp
add
inc
test
outsb
and
ja
les
add
sar
jl
ds
add
add
mov
add
add
loopne
jae
sbb
cld
add
lods
pop
or
push
fs
mov
add
fidivl
push
decl
pop
in
lcall
cld
fildl
imul
cwtl
ss
xchg
lea
addb
add
add
xchg
cmpsb
cld
imul
jno
insl
int
sbb
add
dec
add
add
clc
cmp
add
call
jmp
fdivp
ss
pop
loop
mov
push
xchg
cld
jb
or
pusha
sbb
subl
subl
test
testl
inc
cmp
loope
ret
jo
mov
sbb
add
fiaddl
decb
notl
inc
test
add
inc
dec
fdiv
push
icebp
jae
inc
push
or
int3
pushl
add
mov
jne
push
inc
clc
xchg
mov
mov
and
rcl
incb
fldl
inc
pop
jns
add
mov
add
fdivr
inc
pushf
cmp
cmpsb
add
add
xchg
add
add
jle
lcall
inc
or
mov
sbb
pop
mov
mov
fidivl
sti
xorb
mov
cld
mov
in
add
in
out
loop
data16
mov
subl
add
ja
mov
cmp
call
js
cli
orl
add
dec
scas
xchg
sbb
sahf
or
jg
stc
out
js
std
js
testb
dec
hlt
inc
lods
dec
add
sub
mov
jmp
dec
dec
ljmp
push
fnstsw
pop
test
hlt
jmp
mov
xor
add
cld
sub
sub
or
bound
lret
mov
hlt
lea
mov
sbb
scas
xchg
mov
std
out
jge
mov
lods
les
hlt
insb
cmc
leave
adc
imul
in
push
xchg
mov
sti
cld
into
loope
jae
pop
test
xlat
je
roll
add
push
add
add
popf
repz
fldt
sub
or
sub
ret
inc
lea
call
add
in
jmp
adc
adc
add
lret
out
icebp
cld
shll
jns
jmp
out
in
je
incl
jmp
iret
gs
jle
std
data16
mov
jl
mov
xchg
nop
jno
imul
jnp
xorb
insl
mov
mov
add
mov
mov
mov
jmp
mov
jl
mov
jl
xor
sbb
cli
or
dec
call
jmp
mov
sti
jne
add
or
enter
sahf
cld
out
push
add
push
sbb
pop
ret
incl
call
jmp
jg
call
add
or
inc
sti
jne
add
mov
repz
mov
inc
adc
adc
dec
mov
shlb
cmp
rorb
clc
rcr
cmc
and
out
xor
jmp
int3
jl
lahf
div
pop
lock
sub
mov
sarl
cmpsl
jl
push
fimull
ljmp
add
repnz
inc
std
hlt
in
add
mov
clc
push
mov
add
cwtl
jns
ja
in
push
dec
cmp
aam
sar
fcomp
incb
push
es
callw
stos
jae
hlt
add
add
xor
add
add
add
sti
sbb
hlt
sti
push
hlt
and
out
cmc
mov
add
ret
insb
imul
lret
add
add
andl
pop
inc
cli
fcmovnb
add
out
in
pop
lea
jmp
daa
sahf
jb
adc
stc
jno
insb
stc
imul
sbb
mov
inc
call
or
aaa
add
insb
and
xor
test
shll
call
add
faddl
sub
push
std
aam
adc
pop
outsb
jb
data16
loop
hlt
push
adc
lock
cmp
lea
cmpsb
test
fldcw
mov
movsl
mov
jns
add
jmp
popa
test
lock
daa
jb
arpl
dec
out
xchg
inc
adc
lock
clc
jne
push
std
cmp
lock
add
xchg
push
enter
pop
xchg
cld
mov
lea
add
push
cmp
add
and
shll
shlb
or
add
xlat
cmp
or
out
add
inc
add
lock
fnstsw
call
pop
shll
inc
es
fstpl
movb
pop
sti
adc
add
cld
hlt
sub
dec
mov
xchg
jnp
dec
enter
or
rorb
jmp
aaa
jae
call
in
fs
subl
scas
call
ret
push
pushf
int
inc
hlt
inc
xchg
call
clc
in
lea
cld
ss
sub
add
fidivs
fsubrl
cld
lret
bound
ja
add
mov
add
mov
add
test
aaa
out
call
add
fildl
in
sahf
cmpl
in
xor
inc
stos
in
movsl
inc
push
pushf
movsl
add
sub
dec
mov
call
hlt
ret
sahf
or
inc
add
jmp
add
arpl
in
push
addl
jmp
xor
inc
sub
fcomps
mov
rorb
add
hlt
ret
dec
insl
xor
inc
out
xchg
jmp
out
mov
loopne
xchg
push
ss
lea
xor
jge
idivl
int
js
cld
scas
dec
adc
test
pop
insb
cwtl
xor
in
stos
clc
cld
mov
call
idiv
jmp
gs
jmp
hlt
adc
mov
subl
dec
mov
dec
jle
jmp
mov
pop
jle
in
dec
mov
dec
jle
add
dec
or
add
aas
adc
shrb
inc
lods
adc
sbb
out
mov
in
and
dec
mov
aam
and
dec
mov
data16
dec
mov
data16
dec
shlb
sub
pop
mov
mov
sub
cmp
notb
add
dec
add
sbb
or
or
pop
or
add
sti
in
hlt
fldl
add
or
in
cmp
inc
nop
pop
push
xor
lds
jbe
cld
jnp
push
cld
jae
dec
in
arpl
push
call
ja
add
outsl
sub
cmc
fisttpll
xor
rorl
adc
push
cld
sti
dec
in
and
jmp
add
add
add
push
add
cmp
repnz
adc
std
add
add
mov
jnp
jg
pop
jnp
push
nop
add
adc
lret
jmp
xor
dec
ret
pushf
pusha
repz
scas
lock
mov
add
add
add
add
mov
jp
jle
retw
fstpt
insl
cmp
or
inc
in
imul
mov
jle
push
or
inc
out
mov
cmp
lock
add
out
push
repnz
gs
add
pop
cmp
push
mov
mov
add
bound
in
mov
jge
mov
imul
xchg
add
dec
lds
popa
insb
jbe
ja
std
ja
mov
pop
xchg
inc
jg
fld1
mov
or
imul
or
inc
mov
rclb
cld
pushf
out
lods
add
mov
fnstenv
imul
ljmp
int
aam
or
fiaddl
jb
popf
add
dec
mov
imul
test
std
popa
xor
add
add
inc
or
pop
outsb
stos
pop
add
loop
push
cmp
pop
push
adc
xor
add
or
dec
pop
outsb
or
pop
outsl
xor
or
add
jae
pop
inc
xor
jmp
xor
jns
call
cmc
fnstsw
jecxz
fdiv
fldl
data16
aas
call
out
add
sub
add
cld
jl
clc
mov
ja
or
ret
xor
hlt
xchg
adc
leave
cmc
stc
adc
ljmp
hlt
lock
mov
xchg
mov
mov
jmp
out
push
cli
lock
dec
jg
js
mov
jb
shl
pop
cli
rolb
scas
dec
dec
add
inc
mov
add
add
movsb
mov
aaa
add
notb
adc
push
jb
fcoml
add
int3
cmp
into
or
push
add
out
cmp
push
scas
insb
dec
out
out
inc
arpl
push
ds
out
adc
inc
hlt
jge
or
or
call
push
pop
cmpl
inc
hlt
mov
inc
push
std
mov
fstp
subb
cld
cld
mov
icebp
aam
dec
cmc
xchg
call
imul
and
call
call
add
pop
mov
push
add
pop
and
jbe
iret
jmp
add
pop
lds
shrb
mov
aas
push
sbb
sub
and
adc
inc
add
jno
fisubl
mov
in
jmp
mov
or
lea
push
sti
adc
push
in
dec
pushl
je
xchg
push
or
fs
das
lods
push
sub
std
lcall
je
arpl
dec
imul
popf
dec
test
jl
sar
adc
jae
mov
fiaddl
push
divb
gs
out
add
fistl
jle
pop
cmpl
fisttpl
and
cmc
fildl
push
add
xlat
or
inc
inc
lret
fnsave
inc
in
xor
sbb
aas
testb
xor
pop
push
mov
loope
push
stc
adc
add
idiv
outsl
ljmp
dec
adc
jno
repnz
jae
mov
out
pop
idiv
into
int
mov
lods
xchg
dec
add
add
add
in
in
lods
mov
ret
and
jo
cmp
adc
hlt
pop
out
ljmp
sar
cwtl
push
jb
jl
ds
add
mov
outsl
shrl
inc
jp
repz
in
and
shr
mov
mov
add
aas
fdivr
out
repnz
paddusw
dec
sub
cmpl
mov
xor
mov
insb
out
popa
or
jmp
or
out
add
mov
mov
jmp
cmpsl
test
divl
pop
test
lcall
mov
clc
pop
pusha
fidivs
jmp
jb
xchg
aad
jl
push
jmp
dec
lahf
loopne
sbb
mov
jmp
mov
jb
clc
mov
add
stos
jae
je
clc
jmp
add
cwtl
jnp
xchg
mov
or
in
pop
fs
jbe
pusha
mov
call
add
jnp
or
dec
cld
add
std
mov
push
push
in
cmp
gs
xchg
mov
adc
pop
push
pop
int
call
mov
repz
cmp
je
stc
cld
cli
adc
inc
out
cmp
push
sti
push
lods
push
jne
add
push
pop
aaa
sti
push
mov
mov
and
jl
push
xchg
push
xor
pop
inc
add
rclb
jns
ja
outsl
fsts
movsb
repz
cmp
sbb
xor
ret
push
mov
sub
inc
in
xor
add
imul
add
jge
imul
adc
aaa
push
sub
js
ja
in
jle
push
std
and
jge
mov
xchg
or
mov
jae
push
xchg
mov
xor
fldl
add
div
out
mov
jle
add
add
xor
cld
movsb
fdivl
repz
adc
out
adcl
sbb
jle
jl
pop
or
mov
push
insb
add
dec
dec
mov
mov
out
insl
fsubs
out
add
add
call
out
stos
out
outsl
pop
adc
cld
insb
mov
push
inc
push
out
stc
dec
cmovl
pusha
out
cmc
jp
jb
pop
add
call
jmp
cli
fistpll
xchg
lock
insb
push
ljmp
jmp
lock
clc
add
xchg
cld
outsb
add
mov
call
lds
mov
dec
outsb
jecxz
pop
testl
clc
dec
in
push
inc
jmp
pop
idivl
dec
add
jmp
nop
movsl
jmp
or
testl
add
jne
and
pop
cmc
adc
add
mov
dec
ljmp
cmc
lods
add
add
shr
vmulss
push
mov
call
push
jecxz
sti
xor
mov
daa
std
call
add
add
mov
add
aas
sti
add
adc
jne
push
hlt
call
cmc
sti
mov
leave
jns
pushf
add
imul
hlt
push
hlt
push
jbe
mov
icebp
mov
in
fldenv
fldl
addl
add
fdiv
bound
pusha
xchg
pop
mov
out
inc
in
cld
movsb
jb
mov
ret
xchg
cmp
add
add
test
cld
lds
add
hlt
xchg
loopne
or
mov
in
jns
add
xchg
cmp
test
add
in
pop
sub
repnz
adc
add
add
xchg
inc
hlt
pop
in
push
mov
add
sub
mov
out
outsl
dec
jmp
jns
lret
add
jmp
jbe
push
add
pop
cld
insb
or
jge
lds
jge
sbb
cmpb
out
sub
je
mov
andl
adc
je
shlb
test
pushl
call
imul
add
pop
int
rorl
iret
push
test
arpl
mov
mov
testl
add
int
sbb
add
sub
shrl
or
jmp
ja
sub
jb
call
xor
or
mov
and
dec
or
stos
cld
jg
loopne
add
sbb
ja
sub
aam
xchg
jmp
scas
lds
enter
jecxz
aad
push
add
popa
add
sbb
cmp
jl
lock
faddl
test
sti
decl
xchg
aas
mov
lods
add
lds
lds
pop
add
notl
adcb
int
xor
or
adc
jb
xor
push
xchg
cmp
jge
sbb
ret
jl
xor
sbbb
xor
xorb
lea
jae
notl
pop
ret
loop
int
xchg
int
inc
hlt
jmp
jae
insb
ljmp
das
cld
mov
imul
and
push
and
xor
shlb
lahf
mov
imul
call
scas
xor
cmp
pop
cli
outsb
sbb
clc
mov
and
sub
shr
not
pop
cld
jg
ljmp
imul
call
addr16
adc
add
xchg
test
xchg
gs
add
je
add
je
add
je
add
js
add
js
add
mov
xchg
iret
mov
sti
leave
mov
ss
sub
cld
lea
and
sub
lock
and
mov
insb
dec
add
mov
aaa
bound
pop
out
ss
sbb
xchg
cmp
test
add
loopne
je
ja
push
decb
aad
mov
inc
cmpsl
cmpb
add
inc
ficoms
mov
out
dec
adc
in
lahf
xchg
lret
add
verw
add
mov
fldt
sbb
daa
push
add
int3
sub
hlt
xchg
adc
fnstcw
fmull
ja
jmp
cltd
add
sbb
add
sahf
or
add
add
setb
add
add
popa
jp
lret
add
test
adc
add
and
inc
cmpsb
inc
int
testl
xchg
fldl
xorb
jg
test
lock
movups
sti
mov
inc
add
adcb
test
lock
fwait
add
dec
les
xor
popf
addb
add
add
or
lock
pmuludq
or
jmp
jnp
mov
xor
inc
or
stos
insb
sub
lahf
sbb
outsl
scas
sbb
pop
and
mov
lahf
cli
mov
mov
test
lock
add
adc
shr
testl
hlt
hlt
aas
std
jnp
cmp
clc
jmp
addb
add
add
cmc
sbbl
add
sub
in
inc
imul
jmp
dec
add
jmp
add
in
add
adcb
out
cmp
sub
cli
sbbl
orb
ret
fmull
mov
in
inc
or
jae
idivb
cmc
imul
clc
popa
mov
mov
fdivrl
addb
and
add
add
pop
outsl
inc
fmuls
out
mov
inc
lret
adc
inc
jmp
popf
or
add
fistpl
mov
or
inc
in
popa
jmp
insl
inc
out
sub
push
xlat
jno
pop
add
sahf
lret
xchg
mov
and
mov
aad
pusha
and
notl
jb
and
pusha
push
and
ret
dec
or
add
and
dec
dec
adc
dec
and
ds
or
mov
xchg
scas
lock
movsl
repz
or
ret
push
pop
or
lock
das
mov
add
sub
pop
lret
subb
and
inc
dec
pop
inc
pop
stc
popa
mov
or
sahf
fs
add
loope
sti
add
addb
add
movsb
sar
jmp
adc
fldl
jmp
sbb
std
add
cmp
popf
push
xchg
rol
add
mov
jl
pushf
pop
inc
pop
pop
sbb
and
pop
inc
and
roll
mov
fnstsw
ror
cld
push
imul
add
in
add
jnp
xlat
dec
je
cmp
lcall
insb
sbb
cmp
push
add
sub
add
and
adc
imul
ja
cld
cld
ja
idiv
je
divl
imul
inc
imul
jmp
in
std
out
adc
cld
je
dec
or
hlt
and
push
add
or
jmp
clc
add
sarl
cmc
jmp
mov
sti
out
mov
add
xor
orb
add
dec
inc
add
insb
call
sub
mov
add
add
inc
call
add
xchg
mov
or
ss
adc
mov
mov
call
add
test
inc
push
and
xor
add
cmpl
add
je
jmp
pop
bound
pop
ret
pop
mulb
adc
repz
loopne
add
pop
ret
jle
repz
arpl
push
out
sti
add
fs
jmp
notb
gs
sub
lods
repnz
icebp
or
mov
sub
jb
sub
rorl
testl
add
dec
les
add
pop
imul
lds
out
enter
gs
daa
data16
repz
cmc
lock
adc
push
xchg
rorb
inc
adc
sub
or
add
mull
pop
jg
or
mov
pop
mov
ljmp
jge
add
inc
push
insl
shlb
or
add
inc
mov
in
xchg
in
lcall
insl
aaa
shl
in
out
add
dec
mov
mull
mov
ret
cmc
in
add
andb
jno
jecxz
std
cmove
pop
add
jg
or
daa
in
hlt
loop
add
je
push
dec
adc
dec
fmuls
add
hlt
imul
add
or
jmp
clc
out
fiadds
orl
orl
mov
call
push
or
jmp
jp
data16
hlt
jmp
mov
hlt
popf
inc
add
push
dec
pop
and
inc
ja
inc
je
xchg
push
sub
inc
add
adc
xor
addl
testb
lahf
add
leave
xor
out
in
sub
mov
in
mov
ljmp
adc
and
lods
push
add
out
mov
dec
out
sub
out
cmp
std
push
sbb
std
xor
fdiv
lods
inc
add
xchg
or
or
inc
add
testb
aam
mov
out
cmp
in
xchg
bound
lds
sub
mov
jo
add
scas
lock
out
clc
add
arpl
push
or
out
cli
mov
call
in
push
imul
inc
xor
lret
and
add
mov
add
add
imul
std
call
shr
call
sub
andb
xor
sahf
inc
jae
mov
push
loop
ret
popf
pop
cmp
sub
and
jno
fisttpl
adc
jno
decl
add
fsts
jmp
int
decb
fdivs
testl
dec
pop
movb
in
sbb
fidivl
lea
or
sbb
mov
or
add
jae
scas
std
je
xchg
add
sub
fmuls
jmp
xchg
push
hlt
mov
cmp
add
inc
pop
xlat
ds
ret
mov
inc
je
add
pop
flds
add
cmp
js
mov
stc
call
loope
cmp
pop
es
mov
repz
jmp
cmp
hlt
fildl
push
in
fildl
sbbb
or
xor
testb
sahf
mov
test
pop
hlt
fildl
shr
add
dec
in
inc
adc
pop
test
sti
jmp
clc
lret
add
add
mov
fidivl
pop
mov
insb
ja
add
mov
cli
lret
add
pop
repz
sbbl
fcmovne
jecxz
pop
test
and
out
leave
ret
int
dec
in
rorl
test
data16
pop
test
mov
push
cmpsl
bound
xlat
insl
repz
fucomip
push
inc
out
jl
mull
pop
inc
jmp
sbb
add
cwtl
or
add
testl
fisttpll
jle
add
add
ss
jae
jno
adc
popa
ss
mov
xor
or
push
dec
test
pop
add
add
lock
sub
add
ja
inc
divb
jmp
adc
jmp
ret
andl
inc
sar
scas
mov
and
dec
or
jmp
je
sti
xchg
into
leave
inc
call
rolb
add
adc
std
es
add
int
imull
lcall
inc
mov
in
xchg
add
lea
cmp
stos
adcb
sbb
bound
xchg
rol
inc
dec
and
adcb
addb
add
add
or
xchg
inc
std
sub
add
sbb
sti
or
mov
mov
xor
inc
std
sub
add
fildl
cmp
and
ss
add
or
ret
xor
test
out
adc
scas
sbb
call
fildl
movb
add
add
fisttpll
out
fiadds
add
xor
imul
les
pop
push
pop
pop
and
fisttpl
jg
sbb
insl
sbb
sbb
insl
rolb
fstpt
sub
mov
je
pop
jmp
or
hlt
add
inc
idiv
jg
icebp
add
sarl
out
ljmp
jmp
add
hlt
lods
add
hlt
add
xchg
mov
mov
out
pop
std
bound
inc
ds
or
in
hlt
int
xchg
cmpsb
cmpsl
add
ljmp
mov
jmp
add
pop
out
jo
into
sahf
and
fistpl
add
add
ds
adc
add
add
xor
push
nop
add
add
jmp
fdivrs
inc
ljmp
or
mov
cld
jmp
jbe
js
idiv
sbbb
add
jmp
cwtl
in
add
ljmp
or
in
cld
jmp
jne
js
idiv
subb
add
stc
call
jae
mov
push
jbe
jno
cmp
sbb
sbb
std
or
dec
or
or
inc
add
jg
shlb
loop
int
pop
sub
inc
int
aas
adcb
mov
add
or
or
add
lea
jg
lret
mov
xor
pop
xor
addb
add
add
or
or
add
xchg
add
mull
and
add
pop
pop
in
hlt
fadds
add
jae
fwait
cmp
and
pop
mov
js
cld
sti
push
push
or
dec
sub
and
setle
mov
rolb
mov
stos
sbb
lock
adc
shl
add
add
xor
cld
ja
sbb
hlt
xor
add
fildl
lds
fisttpll
jmp
sti
pop
mov
hlt
fstpt
sahf
je
and
jo
cld
incl
xlat
push
jmp
imul
add
adc
sub
or
mov
and
mov
mov
dec
xor
mov
or
and
cli
lret
add
add
mov
rcr
sbb
sbb
popa
aas
adc
adc
inc
jle
aam
jg
dec
out
jle
in
xlat
xor
jnp
mov
repnz
inc
add
jo
imul
add
add
dec
cli
ret
pop
fdivrp
inc
clc
xchg
dec
jmp
les
or
push
push
mov
je
loope
adc
cs
add
add
test
testl
in
add
or
jae
lahf
test
or
add
or
jmp
mov
std
xchg
testl
cmpsl
icebp
mul
or
add
std
adc
xchg
sub
inc
add
insb
add
jmp
idivl
addl
xor
dec
mov
mov
decb
stc
sbb
mov
mov
jg
add
adc
or
add
add
cmp
add
push
hlt
or
mov
add
popf
inc
dec
or
into
sub
incl
jg
dec
pop
dec
mov
mov
enter
cs
pop
or
fstpl
call
or
jecxz
add
push
and
pop
int3
cld
jmp
fldl
hlt
fnstsw
cld
push
xor
xchg
dec
add
add
lret
jno
cld
jmp
mov
jbe
dec
inc
hlt
test
rorl
add
fiaddl
add
add
add
pop
leave
or
sti
testl
jno
es
mov
add
cmc
add
sarl
test
push
icebp
jge
iret
cmp
fstpl
mov
dec
aam
sbb
lret
add
div
mov
roll
cmp
jno
cmc
test
iret
fadd
fstpl
inc
inc
out
ja
je
mov
sbbb
div
aas
lahf
cmc
add
orl
shl
mov
scas
icebp
and
cmp
ljmp
fildl
add
ja
movups
add
ja
pop
add
testl
add
int3
add
jmp
cmp
idivl
rorl
test
jge
and
bnd
sahf
cwtl
sbb
subb
add
das
icebp
lea
rorl
sar
jge,pt
or
xlat
mov
push
push
dec
adc
add
testl
and
jg
pop
or
inc
add
or
xlat
mov
ret
sbb
pop
adc
dec
ret
xor
fcmovnb
xchg
aas
int
pop
pop
jnp
sbb
cmp
push
ret
mov
mov
pop
rcrl
je
leave
inc
add
loopne
add
pop
and
pop
adc
and
add
jo
pop
dec
std
cmp
pushf
std
decl
hlt
cmc
add
hlt
sub
or
gs
cmpl
mov
ja
add
lods
and
cld
ja
and
hlt
cwtl
clc
mov
leave
call
dec
jge
and
sbb
mov
shrb
imul
add
lods
sti
mov
cld
and
or
repnz
sub
or
dec
movsl
ret
sbb
or
int3
rolb
add
addr16
fdivrl
loopne
mov
fldl
mov
and
add
lea
xor
inc
ret
test
fisttpll
in
sarl
jbe
in
out
cld
jne
call
and
into
int3
add
mov
hlt
add
sub
fcmovnu
out
hlt
test
add
add
adcb
cld
jbe
jnp
rorb
in
testl
xor
test
lds
testl
mov
jae
pop
loope
enter
lcall
cld
fdivl
int3
les
add
je
and
divl
pop
ret
inc
out
mov
and
bound
or
pusha
fimuls
aaa
cld
xor
ss
clc
fsubr
orl
roll
sarb
or
sti
je
aas
push
and
aas
inc
and
pop
ret
jnp
xlat
adc
jo
pop
inc
adc
mov
xchg
mov
and
scas
out
lcall
mov
cmc
or
adc
iret
push
lret
lock
cli
xchg
dec
movb
lret
inc
and
aas
inc
and
aas
cmc
cmp
in
push
das
in
cmp
pop
or
mov
add
ljmp
push
hlt
shl
mov
sbb
int
popf
jg
add
movsb
jp
add
test
divl
icebp
jl
xor
les
xor
adc
pop
pop
add
hlt
xor
adc
pop
xor
add
and
adc
dec
cmpb
shrb
add
push
mov
mov
data16
out
and
std
xchg
jle
mov
hlt
stos
jge
push
call
popf
lods
in
les
les
mov
add
iret
jle
push
imul
mov
cmp
push
xchg
add
add
inc
add
jne
call
adc
outsl
inc
loope
movsb
lock
ds
sbb
add
add
mov
imul
mov
clc
jbe
cmp
insl
pop
add
jl
incl
sub
adc
popa
sar
mov
push
dec
adc
popa
xor
inc
or
jbe
cmp
idivl
jb,pn
or
mov
loopne
and
mov
cmpsl
cmpb
add
add
add
inc
adc
out
loopne
push
sub
jnp
dec
mov
adc
aaa
xor
call
leave
cmp
jge
jecxz
inc
adc
push
gs
adc
sbb
call
jecxz
mov
rorl
gs
faddl
mov
xchg
int3
add
xchg
dec
or
cwtl
add
cwtl
pop
or
cwtl
dec
or
pushf
or
cwtl
mov
jmp
cltd
pushf
or
pushf
or
mov
xchg
cltd
mov
pop
lcall
add
pushf
int3
add
pushf
hlt
in
add
pusha
in
add
pop
in
add
nop
in
add
mov
add
sub
sbb
add
jo
add
add
add
pusha
in
add
pop
in
add
nop
in
add
in
add
jo
add
push
insb
add
xchg
insb
add
mov
subl
jno
add
imul
push
insb
add
insb
add
insb
add
ss
add
xchg
daa
add
data16
add
addr16
add
popa
daa
add
popa
daa
add
xchg
daa
add
addr16
add
addr16
add
lcall
or
daa
add
fwait
daa
add
fwait
daa
add
fwait
daa
add
fwait
cmpsl
add
cltd
cmpsl
add
cltd
cmpsl
add
cltd
cmpsl
add
lcall
xor
mov
jmp
lea
pop
rcrb
push
add
ss
mov
add
jmp
in
sub
mov
xlat
xor
adc
or
divl
aaa
pop
rcr
pop
shll
stos
gs
adc
addl
mov
hlt
mov
icebp
inc
mov
outsl
mov
cld
pop
dec
sbb
test
add
add
ss
dec
push
test
adc
adc
or
orl
mov
fmull
xor
test
and
or
test
lea
add
dec
pop
jnp
rolb
jl
add
cmovno
pop
xor
outsl
aam
push
ret
add
dec
and
mov
inc
and
push
call
ret
sub
and
lds
ret
add
subl
int3
sahf
add
test
insb
add
sahf
mov
xor
add
ftst
push
mov
xchg
fsubrl
imul
pop
inc
and
xchg
inc
add
mov
out
sub
ss
and
mov
cmc
lods
lods
add
cmc
lods
shll
sub
pushl
pop
add
dec
or
adcl
xor
cld
outsl
std
xchg
loopne
sub
faddl
cmp
xchg
inc
cmp
jno
cld
in
mov
pusha
dec
add
mov
mov
sub
pop
jnp
fcmovne
mov
call
dec
add
and
popa
push
add
pop
fdivrl
add
sub
lods
adc
mov
loop
inc
mov
lahf
adc
incl
hlt
mov
pcmpeqw
shll
mov
scas
jmp
mov
pusha
add
mov
pop
cld
mov
mov
mov
mov
aas
xor
mov
push
lock
xor
ljmp
pop
in
mov
ret
dec
in
call
jge
mov
jns
or
mov
shll
popa
push
divl
xor
mov
ja
push
mov
out
inc
loope
adc
lods
add
add
pop
ljmp
push
movl
movsl
std
jl
imul
call
dec
or
cwtl
adc
ljmp
or
lock
sbb
lcall
inc
and
push
repnz
in
cld
mov
sbb
push
data16
mov
std
add
sbb
out
push
pop
push
incl
enter
int
xlat
xor
mov
mov
popf
or
dec
repz
cmpsl
sbb
je
sbb
hlt
mov
inc
es
std
add
inc
hlt
push
enter
aaa
sbb
cmp
and
cmpsb
mov
and
sbb
jo
shll
sub
mov
push
loop
sbb
sbb
mov
pop
mov
inc
ret
aaa
inc
and
jmp
enter
jb
sti
xor
push
adc
adc
mov
inc
add
jmp
lds
addr16
test
add
rorb
sub
mov
sub
in
inc
pop
sub
cmp
repnz
lods
add
add
stc
ret
ja
lcall
cld
cmpl
add
pop
pushl
inc
add
pop
ret
add
lret
pop
int
fbstp
sti
jge
or
ljmp
push
mov
hlt
push
test
mov
mov
push
mov
hlt
xchg
push
inc
pop
call
adc
add
addl
fidivs
add
loopne
test
add
inc
cmp
sarb
test
jb
jg
clc
es
pop
testl
clc
push
jmp
push
incb
stc
pop
testl
mov
mov
andl
add
out
repz
jmp
xor
mov
pushf
add
mov
stos
and
dec
jl
leave
pop
inc
add
add
addb
fdivrp
imul
jno
sbb
or
popf
add
sub
mov
add
sti
je
addl
jb
cld
incb
lds
cmpsb
enter
pop
fst
sbb
dec
vmovss
adc
adc
push
push
mov
pop
xchg
xchg
mov
movsl
add
xor
push
hlt
xchg
rorl
lcall
mov
xor
push
sub
jb
xor
jae
or
adc
fadds
jg
jg
sti
sub
mov
mov
inc
fdivs
or
imul
neg
mov
add
fcoml
hlt
test
sahf
push
std
loope
cmovo
and
jb
or
call
cld
sbb
xor
fadds
dec
add
ret
pop
mov
popa
clc
pop
sbb
add
add
add
push
adc
add
fsub
gs
jnp
fisttps
popf
mov
mov
cmp
sbb
int3
cmp
mov
add
shll
xlat
adc
ja
lcall
ret
mov
or
pop
bound
hlt
add
lea
call
ret
lret
ret
out
mov
jnp
or
add
mov
pop
loop
xchg
jb
or
xor
adcb
mov
jle
scas
cld
jmp
add
cld
in
testl
push
into
vpsraw
push
mov
mov
or
mov
jnp
std
jbe
mov
mov
sub
cmc
jnp
fnsave
sbb
cmpb
cmp
inc
jb
jnp
cmc
clc
mov
aaa
clc
sbb
add
cmpb
add
call
mov
xor
inc
or
cmp
mov
add
add
or
lcall
mov
pusha
xor
mov
pop
add
rorl
adc
out
repz
push
test
jp
cld
add
sub
jno
add
jg
pop
aam
or
adc
sti
lcall
loope
jno
hlt
lds
jecxz
mov
iret
bound
dec
cltd
mov
jbe
cmovo
cmpl
imulb
call
xorl
cmpsb
add
mov
push
shlb
test
outsl
cmpsb
stc
dec
adc
cld
jle
sahf
add
les
mov
sar
add
mov
jns
fdivl
mov
push
jg
push
mov
fisubrs
push
add
adc
mov
fdivs
pop
scas
cmp
call
test
out
jge
arpl
insb
inc
fbstp
xchg
stos
jge
push
test
hlt
or
out
dec
jg
out
stos
popa
lods
push
mov
enter
out
out
jne
out
lahf
or
call
test
lods
cmp
repnz
int3
xor
stos
jae
sbb
push
dec
test
lahf
repz
in
push
or
jl
or
xor
call
mov
and
les
std
xor
push
xchg
sbb
add
pushf
cmp
dec
test
jae
add
jae
insb
inc
or
cmc
jnp
mov
mov
jmp
mov
call
notb
sahf
insb
das
or
mov
repz
pop
imul
std
lcall
fisubl
push
stos
movsl
add
add
jne
lret
mov
movsb
mov
add
and
xchg
cmpsb
adc
push
push
ds
data16
dec
or
std
repnz
xchg
add
jae
gs
decl
sub
addl
xchg
pop
mov
jae
test
cmpsb
jl
or
call
cmp
and
cmpsb
addr16
add
adc
test
or
aad
fwait
mov
ror
inc
add
jp
clc
and
or
test
add
dec
xor
mov
sahf
jge
outsl
in
xchg
jge
jg
ja
outsl
pop
pushf
bound
add
dec
or
test
add
jnp
jo
int3
int3
hlt
popf
jge
lock
or
or
hlt
xor
mov
sarl
add
fidivrl
outsl
xchg
mov
cld
outsl
cmp
jnp
pushl
fstpt
cld
imul
adc
xchg
adc
std
inc
hlt
andl
bnd
cld
jl
into
das
iret
cmpsl
mov
cmp
sbb
add
arpl
aam
xorl
jl
hlt
andb
add
sbb
sbb
ret
add
xchg
adc
jle
adc
dec
cmp
loop
hlt
add
insb
xchg
or
je
mov
push
data16
xchg
mov
test
xchg
out
mov
jmp
inc
test
mov
movsl
xor
fs
std
into
test
mov
jge
bound
nop
imul
div
mov
stos
add
mov
mov
jnp
cmp
cmc
insb
scas
xor
shrl
or
into
aad
mull
inc
add
cli
add
push
xchg
ret
inc
sub
add
testb
call
imul
rolb
add
add
sub
xorl
sub
test
add
lea
sarl
shlb
cld
push
sbb
cld
decl
std
mov
add
adc
dec
call
mov
jle
psubusw
jns
dec
in
inc
push
enter
inc
scas
cld
dec
fwait
jge
dec
in
cld
dec
test
xor
mov
sti
xor
mov
xor
xchg
sbb
mov
jle
scas
cld
xor
cltd
std
add
test
push
pop
jle
int3
les
shll
inc
adc
jae
inc
ja
rorl
hlt
repz
xor
mov
hlt
lods
test
sub
push
std
jmp
cs
ss
add
fwait
ljmp
add
ja
fimull
jne
out
cmc
xlat
mov
mov
subb
cvtpi2ps
add
mov
xor
mov
push
stos
xchg
stos
scas
stos
cs
sti
jb
jecxz
loope
sbb
add
ds
cmc
add
push
outsl
dec
out
push
mov
mov
out
lret
scas
jmp
stos
add
add
out
add
or
push
or
fcomp
cli
aad
fmuls
jmp
stos
lcall
ljmp
call
pusha
sub
push
add
or
mov
push
call
and
push
ss
mov
add
add
add
mov
call
je
cld
inc
sub
xor
addl
jo
push
cld
jo
test
cmp
adc
ror
jno
xchg
cld
add
nop
sahf
dec
incl
adcb
sbb
test
decl
scas
inc
or
jg
add
or
or
cmp
adc
jo
adc
sti
pushl
add
pop
inc
jo
cmp
mov
mov
sbb
pop
hlt
fadd
pmuludq
jbe
and
xor
cld
add
decb
jmp
stos
orb
lods
cld
loope
adc
xor
jb
adc
xor
std
mov
xchg
stos
jb
add
inc
in
add
cmc
or
cld
sti
mov
adc
jbe
dec
in
adc
loopne
jmp
shl
addb
push
and
out
aaa
in
add
iret
sti
test
clc
and
cld
inc
add
aad
test
mov
test
ret
sti
add
jg
add
test
jmp
xor
lea
xlat
jle
dec
push
movsb
lahf
mov
sti
xor
xor
adc
idivl
cwtl
outsl
cld
jl
adc
pushf
add
add
sti
fwait
xchg
shl
add
xlat
cmc
adc
cmc
cmpsb
add
fisttps
into
test
shll
sbb
cmp
or
mov
sub
lock
fadds
stos
mov
adc
lock
xor
stos
jle
iret
lahf
cld
jmp
pop
sbbl
add
mov
mov
jb
ss
cld
imul
mov
add
adc
mov
add
in
adc
jb
push
out
add
sub
insb
push
cmp
popf
dec
mov
dec
movb
pushf
std
out
push
cld
pushl
pop
mov
fstl
in
lret
popf
add
push
sti
xchg
pop
push
sbb
dec
lea
popf
add
adc
pushl
or
decl
jp
lret
or
xchg
mov
cmp
imul
push
std
jae
les
fld
inc
cld
iret
add
add
lahf
ret
add
inc
mov
add
hlt
stos
jp
in
or
jne
add
je
enter
lock
inc
ljmp
mov
js
mov
cwtl
sti
cmpsb
jb
jae
pop
imul
js
notl
add
fwait
add
inc
sub
cmpsl
add
cmpsl
jge
jb
jbe
call
out
in
jmp
ret
pop
sbb
js
stos
dec
outsl
or
mov
fwait
jge
sti
sub
hlt
lods
call
jg
pop
out
stc
push
sub
addr16
lds
test
or
hlt
add
insl
mov
add
add
fnsave
push
fcmovb
ret
mov
ret
push
add
jmp
push
pushf
jmp
jge
mov
dec
push
lret
dec
sub
add
mov
add
add
test
fwait
adc
inc
das
add
pop
inc
les
mov
cwtl
subl
lret
call
mov
or
jmp
lret
hlt
les
icebp
call
cmc
add
jmp
loopne
add
test
add
bound
jle,pn
add
mov
cld
jmp
out
or
int3
or
xchg
out
cmp
cwtl
cld
mov
add
mov
add
push
push
ja
sti
xor
fcmove
test
lods
mov
dec
cld
adc
push
add
sbb
pusha
sti
orl
cli
popf
push
add
mov
inc
idivb
pusha
add
sbb
add
cmp
popl
packsswb
cmc
push
jge
adcb
sti
push
add
xchg
push
ljmp
decl
sbb
push
and
mov
cmpsl
cld
jmp
jns
lods
xchg
or
xorl
out
stos
add
push
pop
ja
mov
stos
push
outsl
fbstp
jecxz
jae
push
inc
sbb
outsb
sub
stc
idiv
ret
sbb
cld
add
push
mov
add
mov
sbb
incl
ds
out
sub
push
clc
sbb
insl
jae
xchg
fwait
sti
movsb
cs
mov
mov
mov
push
movsb
ja
jb
dec
icebp
cmp
rorb
int
add
mov
leave
ss
out
push
sub
cmp
mov
sub
add
mov
pop
je
loop
and
popf
int3
mov
add
outsl
inc
cmpsl
xor
das
and
repz
sti
mov
hlt
shlb
inc
stos
cmp
testl
in
add
sub
add
imul
movl
cmpb
jnp
add
testl
add
pop
jg
testl
test
cmp
cwtl
dec
push
push
repnz
aaa
add
xlat
in
testl
insb
sbbl
fcompl
push
or
aad
add
sbb
cwtl
cld
testb
cld
aam
sbbb
movsb
test
loop
mov
add
sti
jmp
sbb
loop
inc
call
pop
mov
add
ljmp
loop
aam
sahf
add
adc
inc
jns
sti
sbb
movb
in
cltd
add
call
sar
jne
lea
sti
adcl
test
cmp
sti
adc
cli
jmp
arpl
faddl
aad
fcomps
add
stos
mov
insl
and
sbb
test
imull
lea
or
cmp
repz
les
jnp
std
jecxz
add
sbb
std
jmp
sub
or
push
adc
std
stos
mov
add
hlt
ret
push
xchg
data16
add
stos
lea
fisttpl
cli
sub
arpl
test
jmp
add
xchg
jp
xor
inc
add
out
sub
cmc
test
mov
adc
cli
lahf
add
out
pop
mov
add
or
mov
rclb
testl
add
add
sbb
setno
lahf
fwait
andb
ja
call
add
add
add
and
pop
pop
out
sub
sbbl
xchg
sti
addr16
mov
xchg
inc
inc
lret
roll
cld
cld
add
jns,pn
xchg
and
xchg
mov
and
adc
nop
cld
lcall
frstor
dec
add
incl
jae
call
into
dec
or
jmp
subl
inc
fimull
cld
add
inc
in
addb
std
lret
inc
lock
add
jne
lds
dec
fstl
jmp
xchg
dec
add
add
add
mov
scas
in
bts
cld
decl
fmuls
ljmp
movb
mov
mov
lea
mov
push
std
jge
int3
sbb
dec
inc
pop
adc
mov
popf
mov
xor
inc
int3
xchg
enter
stos
push
leave
jg
mov
add
pop
inc
sbb
bound
dec
pop
cmp
lods
mov
add
lock
jge
nop
cld
movsb
mov
lcall
fwait
and
sti
lcall
jmp
mov
fistpl
int
jmp
push
jmp
ret
mov
add
push
sahf
cmp
sub
cld
mov
imul
sar
mov
lds
add
out
loop
out
fdivrp
xor
insl
or
xorb
push
pusha
xchg
or
jbe
insl
pushf
inc
pop
mov
add
cli
sahf
sub
add
and
or
and
leave
loop
cmpsb
stc
or
xchg
add
sarb
scas
je
in
or
call
xchg
mov
or
add
in
jge
mov
xor
popf
out
fisttpll
jne
cld
cmpsb
pop
xlat
inc
mov
cmpb
jle
cld
sbb
aam
clc
ffree
sbb
sbb
inc
mov
test
popl
test
add
xchg
cld
add
add
add
push
cs
test
call
jge
lock
jg
dec
mov
outsb
cld
ret
mov
cmpsb
aas
std
push
pop
nop
adc
movsb
iret
call
mov
xor
cmp
dec
jno
jle
bound
sti
xchg
pop
inc
adc
movsb
sbb
ror
jg
popa
xchg
test
dec
hlt
or
jl
xor
push
jmp
xchg
pmuludq
or
shrb
push
nop
cmp
mov
rolb
loope
lea
sti
incl
call
sar
jecxz
push
push
cli
call
rorb
mov
push
decl
sti
adc
hlt
ret
mov
push
xor
cmpsl
insl
mov
add
cmpb
ja
mov
test
xchg
xchg
cld
inc
jmp
push
imul
xor
sub
jge
jmp
or
adc
mov
inc
push
push
add
stos
or
cli
in
cmc
cmc
add
mov
cs
jg
test
add
add
add
hlt
add
les
adcb
jl
push
daa
add
jle
out
xor
jmp
rcrl
cltd
push
mov
cltd
pop
std
push
push
out
movsb
sbb
test
lea
je
out
mov
jg
mov
pushf
leave
cmp
lea
and
mov
andl
inc
popf
in
hlt
add
ds
cs
inc
std
incl
sub
and
pop
or
add
pushf
scas
aaa
orl
and
xorb
mov
push
mov
stos
inc
stc
jmp
mov
push
xchg
out
push
mov
addl
push
lds
add
adcb
mov
add
mov
dec
sub
inc
imul
xchg
out
xor
leave
leave
mov
adc
test
push
add
mov
ljmp
push
dec
jb
fdiv
out
add
jge
sti
flds
or
or
or
mov
je
jne
pop
or
lcall
jmp
add
sub
imul
adc
cwtl
inc
cld
push
test
in
lret
push
jae
add
xchg
call
rolb
enter
push
push
inc
fstpl
mov
pop
test
xor
sbb
ja
cwtl
incl
fcompl
xchg
xchg
xchg
adc
repz
xchg
test
int3
xchg
jb
popa
cmp
add
mov
push
mov
js
add
mov
push
jg
sub
popf
add
es
call
pop
xlat
add
das
shll
dec
es
outsl
aaa
mov
inc
fcoml
inc
cmpb
jp
add
sbb
out
jl
mov
jecxz
stos
cwtl
sub
push
add
adc
jp
out
mov
jb
push
testb
jge
adcb
repz
mov
stos
sti
ret
enter
push
mov
imul
add
add
add
add
xor
cwtl
pop
mov
cmpsb
jp
adcb
and
fnstsw
hlt
add
lods
add
push
add
pusha
mov
sbb
mov
cld
push
daa
cmpb
repz
aaa
add
lds
adc
shrb
adc
call
call
push
in
test
sub
std
adc
mov
lds
call
outsb
adc
imul
in
insb
call
mov
mov
mov
cmp
imul
pop
push
or
pop
sub
jae
sbb
repz
hlt
je
fldl
inc
push
in
mov
je
mov
gs
jmp
out
ret
jb
mov
lret
test
mov
shl
cwtl
add
je
mov
jno
clc
in
fucomip
int3
cli
fidivs
jne
push
pop
or
daa
std
lcall
add
mov
xchg
movsl
test
testb
mov
xchg
mov
sbb
jb
hlt
lods
push
jecxz
jge
aam
or
testl
cmpb
incl
jge
mov
mov
mov
shrl
xor
inc
fwait
sbb
out
jmp
cmp
xchg
test
pop
outsl
mov
bound
add
jle
in
into
loope
push
dec
mov
mov
or
nop
sbb
rorl
xor
sub
std
add
incb
sub
push
add
adc
inc
cltd
or
xor
mov
les
mov
shlb
out
scas
xor
push
loop
cld
movsb
inc
hlt
cs
add
call
sbb
jp
ret
add
out
daa
cmpsl
sub
call
cmp
out
call
sub
jmp
cld
sub
or
inc
mov
add
inc
frstor
cmp
subb
add
out
aas
jmp
inc
push
adc
adc
shr
aaa
add
mov
xchg
lret
insl
add
inc
sbb
or
lahf
or
scas
inc
jb
lock
ja
lock
add
cld
aas
jmp
inc
add
push
inc
jmp
add
inc
jb
jbe
cld
add
lahf
add
sahf
nop
sti
je
dec
mov
or
add
mov
xchg
decb
mov
std
dec
lahf
loop
int
sti
jne
in
inc
repz
dec
out
jne
xchg
jno
stos
jl
adc
mov
jo
jne
mov
add
or
push
add
cmp
mov
mov
sti
das
pop
ret
push
mov
jg
hlt
jge
je
out
adc
out
enter
addl
js
push
jns
std
addl
add
cld
out
jmp
add
dec
add
insl
add
shrl
mov
xor
jb
add
sti
out
pop
incl
ret
insb
xchg
inc
je
mov
stos
insb
xchg
call
ja
dec
mov
call
popa
cmp
xor
jg
add
mov
pushf
pop
inc
add
mov
cmp
sub
sbb
cmp
and
iret
adc
xor
out
jbe
push
lods
hlt
inc
adc
test
add
add
add
clc
in
xor
call
add
xchg
sti
push
add
add
bound
in
test
sub
mov
js
or
sub
aam
push
in
aad
aas
sbb
add
dec
repnz
xor
add
aaa
loopne
inc
lahf
inc
or
and
shl
out
add
ss
sbb
add
xor
lret
sub
xor
fs
cmc
adc
in
stos
idivl
xor
or
subl
arpl
bound
sub
lahf
xorl
loop
adc
ret
stos
divl
jne
sub
fs
test
xchg
add
or
imulb
pop
lcall
add
pusha
cmp
mov
sar
inc
dec
fs
push
or
add
xchg
xchg
divb
pop
xor
pushl
aaa
dec
push
dec
add
mov
sti
adc
pop
cmp
push
ret
pop
mov
test
add
inc
sub
mov
inc
pop
xchg
sub
ret
push
mov
mov
into
or
sub
mov
clc
jp
add
clc
out
add
add
hlt
mov
cmpsb
mov
lret
xor
dec
jg
shrb
pop
add
push
add
mov
jmp
loop
push
in
xchg
hlt
mov
cmp
jae
jae
adc
mov
mov
add
add
cli
mov
xchg
mov
inc
hlt
add
mov
into
in
stos
inc
hlt
fnsave
sub
jle
out
out
cmp
add
mov
cld
ja
in
jg
add
testb
and
out
outsb
and
not
jl
mov
add
pop
aas
in
aam
aas
lock
xlat
ds
in
add
jle
divl
add
imul
mov
sbb
mov
dec
test
out
sbb
in
jmp
inc
jmp
int3
or
cmp
outsl
adcb
imul
inc
jmp
add
fdivs
in
orl
repnz
jle
sbb
cld
daa
xorb
jg
popa
fldl
cmc
test
xor
pop
jb
leave
mov
add
mov
pop
sbb
aaa
add
add
stos
cmp
stos
div
sbb
nop
sub
popf
jl
inc
push
or
int3
fiadds
aaa
lds
lea
xchg
outsb
dec
aaa
int
jne
adc
fs
loope
cld
lcall
ss
push
lea
std
add
sbb
enter
lret
xchg
inc
or
cmp
inc
or
decl
push
push
insl
jge
sarb
int3
inc
fnsave
xor
hlt
adc
add
mov
cwtl
stc
push
stos
mov
int3
aaa
outsb
test
outsl
jge
bnd
fmull
xor
or
push
outsb
sub
xchg
insb
mov
inc
cli
movswl
hlt
mov
out
clc
hlt
insl
jg
enter
adc
jmp
ljmp
lret
std
loope
mov
push
sahf
insl
test
mov
inc
add
das
xchg
add
inc
add
sbb
mov
add
add
aas
hlt
add
aas
adc
mov
jp
xchg
testb
and
cmpsl
add
ljmp
aad
aas
adc
add
push
arpl
out
jb
pusha
subb
pop
jp
sbb
aad
aas
cmp
add
movsb
mov
mov
push
imul
cmpsl
or
sbb
sti
cli
insb
fsubrs
dec
aaa
daa
cltd
cmc
mov
and
fstpl
shll
push
adc
jns
xor
sti
xlat
adc
and
jmp
fisttpl
jmp
xor
and
mov
ja
cmp
or
cmp
jmp
pusha
jg
call
add
add
xchg
jmp
pushw
jns
fsubr
mov
fucom
push
mov
jb
fildll
testl
sub
lea
cmc
aam
shl
lea
mov
mov
xor
les
xor
add
push
inc
lea
pop
call
ja
mov
sub
cmp
sub
add
jne
ret
adc
je
add
add
and
sbb
dec
mov
out
in
ss
test
jo
imul
add
dec
rclb
out
mov
push
jo
push
addr16
lea
rclb
ret
hlt
inc
leave
mov
fsub
into
incl
add
hlt
dec
dec
insl
xor
add
daa
fld
shll
mov
pop
pop
cmp
lods
add
mov
jb
push
adc
fwait
outsb
insl
add
sub
popl
popl
cmp
push
imul
jae
roll
mov
fadd
dec
movsb
lock
shll
insl
cld
xor
int3
mov
mov
add
adc
add
add
add
add
fdivrl
jecxz
add
jo
aaa
mov
ss
loopne
mov
add
lock
nop
mov
pop
shl
add
add
fisttpl
in
cmc
xchg
and
ljmp
jbe
sbbl
sbbl
inc
lock
in
ljmp
mov
ss
not
arpl
mov
jbe
dec
test
inc
cmc
je
outsl
fcoml
pop
ret
ja
cmp
mov
testl
cli
xor
sti
adc
adc
call
mov
cld
jmp
mov
popa
mov
add
fnstenv
jecxz
add
jbe
push
js
insl
jne
jmp
test
data16
add
and
ret
or
jbe
pop
jne
cmp
sbb
or
repz
xchg
addl
mov
mov
int
test
add
call
pushf
add
adc
add
mov
test
push
or
test
or
add
sar
out
jg
call
ror
jo
enter
hlt
sub
add
sbb
fistl
idivb
testb
mov
add
add
clc
dec
outsl
mov
mov
aam
andl
mov
ret
adc
mov
add
ja
adc
outsl
and
mov
push
test
or
das
sub
jae
cld
pop
push
or
leave
mov
add
insl
leave
sahf
mov
add
fiadds
insb
leave
sbb
cmp
popa
outsl
jl
fiaddl
fldt
pop
aad
clc
repz
jnp
jb
shrl
dec
enter
mov
lds
or
imull
andb
jb
rcll
jl
emms
inc
jb
and
dec
fadd
cmpl
insl
dec
imul
add
out
js
cmp
add
ljmp
decb
jmp
adc
in
test
xchg
and
out
imul
cmp
clc
or
cli
outsb
add
cld
sbb
rol
sub
add
bound
inc
ja
dec
jmp
add
ret
mov
int
xor
add
jb
jg
int
ret
xor
rol
enter
add
cmpsl
dec
inc
int
adc
test
rorb
inc
or
add
lds
cmpsl
pop
mov
pop
call
rorb
movsb
dec
and
nop
dec
and
dec
and
dec
and
dec
and
dec
and
orl
stc
cld
inc
and
add
add
leave
inc
and
push
add
add
fsubl
int
xchg
jge
inc
and
push
dec
call
sbb
jo
and
dec
insl
jg
and
jnp
and
faddl
cmp
pusha
push
mov
and
adc
or
cmc
repnz
or
mov
inc
pop
hlt
xor
push
ret
inc
and
xchg
push
out
add
divl
add
jbe
pop
call
arpl
hlt
pop
ljmp
into
cmp
sbbb
xchg
lods
ljmp
mov
lcall
push
loop
hlt
pop
fstps
and
roll
rcr
adc
add
jnp
leave
xchg
add
and
fcmovu
jp
dec
xchg
movb
add
add
outsb
sti
pop
add
out
inc
jge
jo
dec
adc
out
lods
adc
jp
add
les
vmovd
sub
jmp
sub
faddl
adc
add
sub
mov
add
clc
pop
add
or
dec
outsb
xchg
outsl
cwtl
clc
out
jp
xchg
rol
mov
repnz
pop
mov
imul
add
jb
jle
jecxz
repz
adc
lock
repz
jnp
cmpl
dec
jae
mov
repz
out
push
outsb
cld
fs
lahf
das
mov
lcall
jno
jp
insl
cld
imul
jl
push
insl
cld
arpl
pop
rolb
cmc
add
rorl
push
xor
ljmp
sbb
lahf
inc
cld
push
bound
int3
push
or
aaa
xor
mov
decl
cld
add
xchg
mov
and
push
stc
cs
adc
adc
xchg
decl
pop
push
mov
sbb
mov
and
pop
inc
xlat
std
fnstsw
adc
push
enter
add
fldln2
or
push
inc
add
xchg
insb
std
mov
arpl
and
jno
adc
outsl
sar
jmp
sub
or
cld
add
mov
push
out
std
arpl
xchg
imull
insl
mov
cld
outsl
scas
cmp
dec
jl
cmc
pop
add
repz
add
sbb
cmc
fcompl
cmp
add
mov
and
add
or
pop
add
insl
mov
out
cmp
pop
push
cmc
pop
mov
push
mov
add
jb
pop
cmp
lea
and
cmp
and
push
jo
out
hlt
jns
pop
aam
decb
stos
sti
bound
cli
imul
add
add
or
fdivl
and
jbe
and
into
sbb
jle
inc
add
jbe
and
mov
xor
hlt
jnp
pop
or
sub
dec
lods
out
hlt
add
mov
lcall
xor
sub
movsl
adc
push
mov
loop
push
jmp
adc
inc
jmp
add
jecxz
roll
notb
xchg
or
and
inc
bound
add
sarl
cmc
and
iret
stos
scas
jmp
xlat
pop
mov
clc
add
sbb
inc
push
jb
xor
adc
daa
or
inc
add
sbb
or
jae
jne
pop
add
pop
push
push
add
adc
and
popf
fst
cmp
jns,pn
xchg
inc
jns
push
jb
add
adc
inc
and
sti
jne
fstl
jge
jnp
adc
lds
aam
ret
inc
stc
adc
decl
push
decb
adc
jl
and
push
pop
pop
xchg
lret
or
add
jo
add
add
push
pop
or
hlt
inc
push
mov
fcmovu
and
pop
call
std
or
inc
hlt
adc
jmp
stos
out
sub
pop
out
sub
or
repnz
add
hlt
in
add
divl
push
add
fldt
jb
cmp
pop
hlt
dec
dec
push
call
add
ret
add
lret
jmp
stos
in
or
mov
add
rorl
inc
push
jmp
jo
sti
andl
pop
movb
jg
fcmovbe
jbe
in
mov
and
add
sti
fwait
cmp
add
iret
pop
lret
mov
jae
fcmovne
jb
std
sub
add
hlt
addr16
inc
push
arpl
lret
test
mov
inc
xchg
jl
or
mov
out
je
sbb
sbb
sub
insl
rcl
mov
jmp
imul
jb
cli
xorb
add
add
pop
std
in
add
adc
xchg
popf
test
jmp
add
repz
add
add
call
lea
xchg
lret
pop
pusha
pop
pop
in
add
das
call
pop
mov
out
jb
std
mov
test
icebp
testl
addb
cld
mov
pop
stos
add
fwait
stos
add
leave
shl
pop
hlt
test
mov
pop
add
or
nop
call
jg
mov
dec
push
ljmp
xor
or
sub
mov
in
and
ljmp
jp
add
jge
add
xchg
leave
pop
cmc
cmp
test
xchg
or
hlt
test
cmpsl
add
or
add
and
pusha
and
hlt
addr16
sbb
dec
pop
incl
ja
sub
hlt
sahf
jbe
mov
and
and
mov
cmpb
les
xor
in
and
lds
mov
cmp
inc
fdivrs
outsl
cld
and
sub
cmc
and
adc
cs
mov
and
add
incb
shr
out
and
outsb
testl
add
lea
das
pop
xor
out
insl
sbb
sbb
inc
sarl
outsl
or
dec
sub
and
out
jge
out
je
shrb
dec
xchg
outsb
es
je
xlat
sub
pop
jle
out
and
mov
arpl
cmp
xor
pusha
stc
adc
out
ja
out
hlt
cmp
push
std
mov
xor
add
fdivl
cmpsb
into
inc
jae
jae
or
mov
std
std
hlt
mov
je
cld
dec
fisttpl
jmp
xor
lods
jmp
mov
or
add
cld
incl
jbe
add
xor
stc
add
popa
inc
es
cmp
adc
dec
inc
jmp
loopne
add
sub
mov
loopne
dec
out
insb
pop
add
pop
and
mov
sbbb
sti
decl
pop
add
call
adc
iret
inc
cld
ljmp
testb
je
faddl
mov
push
xchg
xchg
cmp
adc
xchg
mov
aaa
ret
push
aad
pushl
fcomps
push
std
cli
je
popa
in
addb
outsl
inc
in
mov
jns
add
cld
add
cmp
inc
hlt
rol
mov
in
adc
lret
pop
lahf
out
pop
cmp
push
jg
pop
push
add
test
sub
cmp
aaa
inc
push
sbb
add
cld
cld
and
adc
cmp
ljmp
xchg
jb
inc
in
popf
jge
call
push
das
pop
jle
cld
imul
add
add
add
out
xor
jno
push
add
es
push
out
lock
sub
adc
push
pushf
add
add
adc
fcmovu
push
or
adc
jl
adc
mov
shl
mov
inc
or
dec
imul
in
test
ja
xor
mov
pop
add
add
ret
movsb
hlt
add
mov
lock
cmc
fstl
xchg
ljmp
rclb
aas
sub
cmp
ljmp
or
and
testl
sbb
fisubrl
int
fldenv
loopne
and
sbb
mull
cmc
or
cld
cld
fbld
in
add
ljmp
jecxz
adc
and
andl
mov
enter
scas
adc
cld
jb,pn
cld
pushf
sti
mov
insl
add
or
xchg
out
pop
jb
push
jmp
adc
push
mov
mov
mov
in
into
in
cmpl
call
xchg
enter
aam
sub
outsl
or
add
incl
xor
inc
or
inc
and
lds
add
jbe
sti
jne
xor
fsubs
add
mov
sub
insl
sbb
add
mov
ljmp
call
fidivl
hlt
pop
jns
rclb
inc
sbb
mov
and
push
in
pop
daa
and
orb
sbb
jno
and
dec
push
inc
add
pop
sub
adc
test
arpl
pop
pusha
sar
rcrb
ss
add
loop
and
cld
data16
pop
dec
add
test
xor
hlt
lcall
fwait
and
stos
out
push
xchg
mov
push
pop
out
out
and
add
add
imul
jg
sarl
test
sar
sub
lock
or
mov
icebp
pop
mov
cld
sub
data16
or
orl
sbb
scas
pop
ret
xchg
out
out
xor
push
out
insl
shl
jg
sarb
jnp
icebp
arpl
sti
arpl
add
icebp
rolb
mov
lcall
cld
es
cld
xchg
out
jb
adc
movzwl
pop
push
add
mov
push
bound
test
in
inc
loope
add
call
insb
enter
xorb
es
hlt
aaa
pop
pop
stos
out
push
bound
pop
fldl
lock
test
xchg
into
lret
sub
scas
cld
cld
push
aas
jmp
push
outsb
cld
dec
jbe
cld
add
rolb
add
cld
addb
je
filds
imul
inc
cmp
inc
or
inc
cld
pop
orl
sbb
pop
adc
dec
fidivrl
adc
loopne
and
add
xlat
lidtl
fisttpll
add
loopne
and
or
call
je
test
fldcw
call
pop
shll
out
setl
push
cld
stos
mov
sar
arpl
mov
sti
incb
and
add
push
jg
hlt
sahf
inc
pop
add
in
jo
insb
add
stos
lods
cld
ljmp
xor
add
push
into
push
jns
pushf
dec
cmp
call
push
inc
std
adc
dec
incl
out
fst
hlt
out
les
jp
je
outsb
pop
fs
xlat
arpl
in
insb
add
jge
lods
arpl
out
add
add
mov
cmpsl
sahf
rol
mov
ret
add
insl
popa
xor
sbb
add
out
lods
pop
out
adcb
mov
cmp
add
fs
add
cmpsb
leave
push
add
add
push
repz
out
arpl
rcll
mov
stc
lahf
cmc
es
inc
in
mov
push
out
icebp
sarl
push
pop
test
shll
pushl
pop
fists
add
add
sub
add
cld
jmp
out
ds
inc
icebp
pop
mov
testl
jmp
jle
dec
sbb
lea
out
adc
leave
call
loop
sbb
addb
in
inc
inc
shl
cmp
rorl
dec
push
xchg
das
fs
sbb
add
fistpl
aaa
rorl
ljmp
bound
pop
rorb
inc
inc
xchg
lret
mov
ret
not
jb
jp
jne
add
aad
cmp
jne
push
sti
push
xchg
in
add
add
dec
ljmp
push
or
loopne
sti
lcall
test
add
aad
decl
xchg
xor
jle
jne
lcall
pop
or
dec
in
jmp
hlt
mov
pop
dec
daa
mov
add
call
lret
inc
sub
out
xor
or
fwait
push
ljmp
loop
out
sbb
sti
lds
and
mov
mov
in
mov
jge
js
je
outsl
lea
sbb
cld
les
test
mov
stos
sbb
mov
add
imul
mov
in
cltd
repz
sbb
cmp
aaa
out
icebp
dec
sub
add
add
incb
cmpxchg
orb
add
mov
adc
out
add
push
adc
xchg
mov
xorb
hlt
lods
mov
pusha
out
popa
pop
add
add
jg
mov
lret
pop
pop
cmp
aaa
ret
shl
add
cld
jno
sahf
add
pop
mov
push
sub
lret
jne
dec
testb
xchg
in
add
bound
mov
push
dec
icebp
jbe
shr
jle
xchg
push
cld
jmp
or
clc
pop
jp
testl
jg
sbb
call
lock
jo
test
call
add
outsb
mov
mov
jl
jae
repnz
aaa
or
call
add
or
add
lds
or
out
mov
xchg
mov
xchg
sti
adc
dec
lret
sbb
push
pop
or
adc
push
jne
int3
inc
clc
mov
inc
xchg
pop
pop
aam
add
jnp
xchg
mov
add
dec
dec
push
push
cmp
cmp
aam
pop
add
aaa
fmuls
xor
add
add
push
loope
in
loope
xchg
cmpsb
addl
pop
add
call
aam
jecxz
fistps
incl
pop
mov
add
jb
stos
fcomip
pop
add
insl
sub
fs
aas
hlt
aam
testl
pop
add
jg
mov
stos
pop
xchg
out
mov
sbb
test
and
add
or
hlt
mov
or
js
or
test
pushl
mov
add
add
jecxz
jb
ret
add
sbb
or
ret
ljmp
jg
mov
fmull
insb
lds
out
sbb
mov
pop
xchg
pop
jne
jb
jne
jp
add
mov
hlt
add
xchg
cmp
jno
sti
jnp
mov
push
rcll
mov
lock
out
ss
out
add
dec
push
sub
out
sbb
mov
dec
rcrb
and
add
jge
test
xlat
call
add
sar
fdivrs
xchg
xor
fcomps
mov
mov
dec
mov
arpl
pop
loop
add
testl
jmp
mov
add
stos
or
mov
xor
jp
clc
rorl
daa
mov
outsl
mov
call
aaa
mov
jg
push
push
or
push
jo
cli
jmp
decl
add
in
ret
ljmp
enter
add
mov
sbb
je
call
add
mov
add
dec
lea
adc
and
jle
int3
add
cmovg
imul
outsb
or
add
in
mov
mov
push
mov
xchg
sbb
xchg
out
or
add
pop
add
bound
pop
decl
mov
fcmovu
div
pop
dec
xchg
pop
add
in
jmp
pop
clc
adc
add
hlt
data16
hlt
pop
add
hlt
rol
imull
mov
dec
sbb
jae
add
mov
pop
jge
and
inc
add
shrb
xor
cmpl
cli
push
imul
mov
adc
add
bnd
xlat
out
lea
fcom
pop
mov
jno
and
mov
out
test
lea
cmp
push
add
mov
add
incl
pop
push
xchg
clc
ret
add
jg
push
fildl
pop
enter
ret
mov
dec
imul
mov
dec
out
negb
hlt
add
into
lahf
dec
shl
in
call
jp
adc
jae
add
adc
cmp
testl
subl
hlt
push
out
int3
call
ret
test
add
push
jb
arpl
in
add
pop
test
aaa
ss
dec
cld
jmp
imul
out
jbe
nop
jmp
inc
sbbl
mov
dec
cld
jmp
loope
or
lcall
fistpll
ret
mov
cmp
ds
addr16
lret
pop
pop
ret
push
add
xchg
test
xchg
shlb
sbb
clc
mov
into
nop
sti
xlat
cmpsl
dec
mov
ficoms
and
jle
cmp
push
add
sarb
inc
add
dec
sub
and
repnz
lcall
enter
pop
add
fisubrl
add
mov
jae
push
aam
cwtl
sbb
insl
loop
pop
pop
xchg
movsb
aam
jg
pop
add
hlt
pop
sub
mov
clc
pop
stos
mov
pop
dec
inc
rclb
je
repnz
pop
add
hlt
push
scas
imul
sbb
mov
xchg
add
out
mov
jg
lock
into
xchg
or
lcall
mov
dec
out
imull
hlt
shr
mov
pop
rcll
subl
ret
dec
js
sbb
out
cmp
cmc
mov
add
add
xchg
hlt
jge
mov
dec
out
push
shl
mov
out
ljmp
add
add
inc
dec
xchg
xchg
out
hlt
mov
sub
hlt
add
and
mov
add
adc
mov
outsb
or
jmp
idivl
push
and
pop
inc
cld
jmp
cmp
stc
push
rolb
mov
add
test
aas
jae
jb
push
call
add
cld
insl
mov
add
or
jge
and
add
jb
jg
push
testl
sti
mov
ret
inc
pop
add
hlt
jmp
leave
inc
call
mov
call
push
push
je
push
rcll
ficoml
and
add
push
adc
sti
add
into
mov
sti
adc
lods
test
stc
scas
pop
dec
add
jbe
jg
sbb
add
nop
or
in
add
std
cmp
notl
mov
sbbl
push
push
or
pop
xchg
sub
add
nop
out
or
dec
mov
add
add
fisubl
hlt
adc
push
inc
insl
mov
inc
movsb
add
hlt
mov
jmp
rorb
and
push
cld
push
imul
rol
cld
fwait
gs
clc
pop
mov
sbb
pop
and
add
add
jg
js
add
sub
dec
inc
out
pop
add
ja
hlt
jle
or
cmp
imul
scas
pop
in
test
lahf
jnp
hlt
insb
mov
popa
xchg
jg
out
mov
cs
cwtl
jg
sarb
lret
dec
mov
insb
add
movb
xor
mull
notb
clc
push
mov
add
jl
jg
fcomp
jns
sti
insb
es
ret
xor
xchg
loop
mov
out
or
test
mov
push
push
scas
push
cmp
nop
add
aas
dec
testl
inc
cmovbe
jmp
and
orl
mov
test
add
jo
cmp
push
das
xor
dec
and
mov
in
lock
sti
fnstenv
inc
jmpw
repz
js
fwait
loopne
js
add
mov
jb
mov
je
lea
loope
testl
lret
incb
call
jbe
sti
add
loopne
xor
test
ja
pop
in
adc
jb
xchg
jae
leave
popl
push
inc
movsl
jg
fnsave
mov
icebp
pop
shlb
adc
fdivrl
rolb
add
int
add
sbb
pop
mov
rol
roll
std
jnp
jns
pop
or
dec
pop
mov
mov
sub
fs
fdivl
sub
sub
je
hlt
rorl
inc
or
inc
gs
mov
pop
jns
je
jecxz
mov
xor
cmp
std
loope
repz
hlt
test
or
icebp
dec
out
lds
jg
xchg
repz
cmp
mov
pop
inc
incl
mov
push
je
inc
pushl
inc
jae
xchg
add
movl
hlt
sub
insl
jb
call
jl
dec
call
or
cmpsb
inc
adc
movl
out
iretw
std
add
daa
jne
loop
add
inc
add
cmpsb
jns
sub
inc
roll
inc
inc
adc
fstpt
add
mov
dec
stos
inc
mov
add
subl
add
outsb
mov
hlt
add
dec
push
and
ret
imul
dec
arpl
outsl
add
add
iret
inc
add
xchg
or
add
add
jp
or
testb
add
add
sbb
test
xchg
mov
push
bound
subl
cmp
ljmp
mov
call
sbb
call
xor
pop
test
add
sarl
enter
call
aaa
mov
push
notl
cli
mov
enter
add
add
inc
call
inc
sbb
test
mov
pop
add
lds
add
jnp
lea
jae
ror
cld
mov
fdivr
adc
out
ret
test
adc
int3
add
or
ffree
inc
hlt
inc
nop
pop
add
add
jl
mov
add
test
les
lea
incl
popf
aad
or
push
or
fistpll
mov
nop
aaa
jae
popa
xor
nop
mov
sbb
dec
push
popf
add
ret
call
sub
add
and
push
cld
test
in
adc
cmp
ljmp
cmp
sub
incl
insb
pop
andb
out
imul
jg
pop
jo
sub
test
add
and
decl
out
jge
pushf
jns
incl
ret
shll
out
fcomip
or
and
lret
inc
call
imul
and
lret
mov
movsb
add
mov
dec
outsb
mov
lahf
xor
scas
cmp
xlat
pop
std
int
jmp
sub
mov
sbb
add
ja
cmp
xchg
dec
out
stc
ret
mov
mov
jl
or
out
ss
add
add
out
jns
jmp
xor
xor
ficoml
sti
mov
push
xor
add
add
sti
call
inc
adc
mov
cmc
pusha
out
mov
or
std
jmp
loope
jmp
and
cmp
jmp
div
mov
jmp
imull
push
cmp
push
xor
testl
pop
or
and
add
add
add
jnp
adc
jnp
sbb
mov
add
inc
and
cmc
xchg
ja
das
mulb
js
rorl
mov
and
push
ds
or
mov
jo
and
or
xchg
and
fldl
add
push
inc
sti
call
and
add
jno
mov
std
decl
add
add
test
mov
pop
add
xor
adc
add
push
sub
jbe
sbb
add
hlt
movsb
jl
cmc
sub
in
jnp
add
hlt
mov
add
ja
hlt
xchg
add
hlt
mov
add
inc
mov
mov
cmc
sub
call
pop
and
sbb
add
hlt
pop
iret
aas
hlt
movsb
enter
pop
add
mov
inc
rcrb
pop
mov
mov
fdivr
insb
inc
dec
int3
jns
push
jg
mov
fcmovne
cs
and
in
add
aam
lea
out
hlt
aam
lock
adc
or
add
add
cli
add
jb
or
cmp
or
imull
xchg
and
jecxz
cmp
mov
and
cmp
or
or
ret
cmp
js
fsub
add
std
sahf
iret
std
test
pop
pop
xor
mov
in
divb
and
cld
test
mov
add
mov
lds
in
ja
and
dec
mov
adc
outsl
inc
int
mov
jmp
in
cld
jmp
inc
cmp
mov
cmp
sub
cmpl
imull
inc
add
cwtl
and
add
notb
subl
add
frstor
test
or
std
stos
decb
scas
andb
add
add
mov
cld
incl
jno
ret
ja
je
dec
push
cmp
js
mov
add
pop
xchg
gs
add
mov
ss
ljmp
and
add
add
ljmp
aaa
ret
fwait
sbb
add
in
fstl
les
aaa
out
je
xchg
mov
lcall
div
jmp
test
sbb
incl
flds
mov
test
sbbb
mov
or
out
iret
inc
cld
dec
jo
cld
push
mov
pop
pop
inc
fimuls
subb
push
and
inc
mov
icebp
add
hlt
out
and
add
pusha
movsl
ret
incl
adc
fwait
push
mov
add
inc
aas
push
mov
and
and
lock
dec
add
xlat
int3
sbb
test
dec
jae
xlat
adc
insb
inc
add
into
roll
insb
out
hlt
sub
ret
pop
pop
aad
aas
mov
fldenv
scas
inc
xchg
mov
mov
testb
add
add
mov
mov
adc
xchg
sub
add
add
adc
sub
add
rcrb
pop
ss
push
sbb
ljmp
std
cmp
mov
sbb
mov
std
cld
pushl
adc
call
cmp
push
push
lods
ljmp
lock
mov
cmp
roll
call
aaa
xor
pop
ret
pop
jmp
in
add
not
mov
repz
sub
ret
outsb
mov
push
push
cli
xor
and
mov
cmc
jg
xchg
adc
add
xchg
pop
sti
jne
mov
sti
sub
mov
add
repnz
call
aad
xchg
xchg
loop
or
test
pop
add
dec
enter
outsb
push
mov
xor
ret
add
dec
hlt
jb
push
in
repnz
add
adc
mov
sti
ljmp
popa
cld
add
sbb
adc
hlt
mov
cmp
and
cmp
push
int3
sbb
pushl
outsb
xchg
sub
mov
inc
pop
xor
mov
adc
out
sub
add
cmpsb
or
xchg
or
hlt
mov
call
jno
mov
outsl
nop
cmp
hlt
sbb
je
hlt
sbb
mov
or
xchg
mov
cmp
enter
xor
js
cmpsb
insl
lret
fcomps
bound
or
sub
lcall
xchg
xor
ds
aad
mov
cli
out
inc
add
xor
out
pop
push
and
dec
ds
xor
add
hlt
jle
mov
mov
adc
imul
out
arpl
out
lds
shll
add
aaa
mov
push
xor
lock
jne
cld
cli
aaa
fnstcw
fs
mov
jb
gs
sub
jnp
push
xor
mov
rol
ss
xchg
cli
jnp
add
rorl
jb
mov
test
dec
xchg
testl
push
rclb
stos
insb
fisubs
in
lahf
cmp
pushw
jo
cld
jmp
leave
inc
cld
jae
push
push
call
xchg
cmp
adc
into
aas
push
jg
sbb
pop
rcr
cmp
xor
xor
icebp
sti
pop
add
jge
pop
ss
add
es
sti
xor
lds
outsl
or
add
sub
sbb
out
jmp
pop
mov
clc
inc
es
jae
fdivrl
xchg
dec
add
rolb
hlt
imul
cmp
insb
pop
adc
mov
sti
sbb
push
add
adc
mov
jle
push
mov
cli
jns
clc
cmc
negb
lods
or
inc
das
out
pop
mov
out
fcomps
add
pop
sub
jle
push
incb
daa
lea
test
jae
outsb
sub
mov
outsl
addr16
in
jno
cld
dec
ja
call
cmp
call
add
das
xchg
jecxz
mov
xchg
jmp
mov
mov
sbb
pop
add
inc
in
mov
cmp
inc
jp
lods
loopne
out
hlt
add
mov
cs
lds
out
sub
out
push
sbb
xchg
cs
mov
jns
pop
cmc
aaa
jle
jo
gs
je
push
incl
rclb
pop
mov
sub
cwtl
out
imul
inc
jnp
xor
cwtl
adcb
xor
push
inc
xchg
testl
push
into
test
jmp
outsl
cs
jmp
sub
or
jmp
cmp
call
ljmp
call
mov
in
mov
add
add
iret
pop
and
inc
push
jb
scas
jmp
call
testb
inc
and
mov
cld
add
dec
sar
add
std
lcall
lods
pusha
sti
add
dec
push
cmc
xor
push
lods
mov
decl
jl
call
data16
dec
lea
idiv
add
pop
mov
fstp
add
sub
rcl
adc
popf
or
fucomp
adc
dec
cld
xorb
test
or
add
sub
jne
push
in
hlt
add
push
test
hlt
jne
pop
in
sbb
lods
out
pushf
aad
push
hlt
sbb
add
lret
mov
mov
jns
out
fistps
xor
and
jno
cmp
jecxz
test
dec
jg
sar
loope
adc
mov
cmpb
add
jns
xlat
mulb
sbb
add
adc
mov
xchg
or
xor
ret
arpl
imul
jb
cmp
inc
sub
out
add
xlat
ret
or
inc
call
daa
je
out
sarl
test
sub
shrl
mov
lock
ss
into
sbb
sub
adcb
mov
mov
mov
mov
adc
or
cmpsb
scas
out
sub
aaa
adc
shll
subb
fildl
sbb
stos
jae
push
bound
stos
jmp
testb
sub
pusha
and
mov
rcll
jmp
inc
jg
push
jecxz
cld
mov
loop
mov
call
dec
stos
call
popf
sub
add
je
xchg
sti
fisubs
mov
inc
jmp
add
or
outsl
sub
jmp
add
fwait
cmp
and
xor
enter
not
mov
mov
inc
add
scas
inc
add
push
rorb
jne
out
rolb
cmp
jno
into
jno
add
out
adc
dec
inc
cld
imul
pop
lock
sti
nop
shlb
jb
jne
mov
ljmp
add
add
xlat
incl
sti
adc
stos
push
clc
inc
sub
inc
int
xlat
pop
add
mov
or
icebp
pop
mov
push
call
test
ror
inc
hlt
sbb
push
lret
mov
add
hlt
push
in
mov
xor
test
sar
fiadds
test
add
jno
lods
jge
lcall
add
decb
inc
hlt
cwtl
cld
xor
add
movsb
add
xchg
jno
lods
bound
mov
fadd
cmp
in
cmp
fdiv
cmp
out
jge
int3
jb
mov
lret
out
add
add
daa
adc
aas
xorl
test
add
ljmp
adc
hlt
addb
add
shrl
pop
sbb
xor
shrl
pop
js
add
sbb
popf
xor
sbb
sarl
imul
les
jnp
ret
out
or
addr16
pop
sbb
jecxz
sti
jecxz
vmovq
std
mov
ret
ss
mov
ss
inc
jmp
daa
cmp
add
ret
pop
add
mov
int
mov
cmp
pxor
mov
jmp
fwait
xor
je
out
mov
idivl
cltd
out
jg
xor
std
aaa
jno
mov
pop
inc
push
push
adc
push
add
jb
dec
mul
movsl
lret
stos
mull
aad
jecxz
imul
call
add
add
dec
ljmp
hlt
shlb
xchg
imulb
fiadds
je
movsb
testb
mov
imul
add
std
leave
lret
push
add
cmp
outsb
add
pop
push
pop
pop
adc
adc
pop
test
add
push
push
aaa
cmp
cld
incl
cmp
mov
add
push
inc
cmpsb
jns
push
or
fisttpll
xchg
mov
fcoml
or
movsl
jle
push
cmp
add
sub
jmp
add
jno
incl
jns
pop
dec
push
sub
sar
xchg
outsb
incl
ja
sbb
add
jge
dec
pop
lcall
mov
loop
xchg
test
cmpl
incl
jno
xor
jno
dec
dec
jnp
and
sbb
cmp
test
cmc
add
orb
ja
call
sub
jmp
mov
mov
cmpsb
pushl
call
cmp
js
sbb
mov
out
jg
outsb
aam
dec
push
pop
cltd
repnz
rcrl
jbe
fcmovb
je
dec
add
mov
add
add
mov
push
out
lock
out
les
inc
sbb
lcall
and
adc
add
add
xchg
idiv
add
bound
adc
add
lahf
jecxz
mov
aad
add
add
sub
dec
add
testl
out
testl
mov
sub
decl
loope
and
dec
jp
aas
sub
std
testl
jb
sub
outsl
testl
loope
testl
bound
or
roll
push
jo
add
ret
int
aas
or
jno
inc
dec
lock
push
icebp
xchg
add
adc
fwait
inc
or
out
jno
sahf
fisttps
out
add
lock
add
into
add
dec
xchg
mov
je
pushf
dec
or
inc
or
pop
or
xchg
sbb
cld
lcall
or
add
sbb
push
call
hlt
rol
inc
xchg
inc
dec
jmp
adc
imul
sub
inc
es
dec
sub
mov
sub
scas
adc
aas
mov
xor
jb
stos
lods
out
clc
add
jmp
jns
sub
imul
inc
pop
scas
sub
add
mov
mov
hlt
sub
ja
fidivs
out
subl
mov
mov
std
stos
mov
fcomps
fidivrl
in
xlat
xchg
sahf
sub
push
in
clc
add
std
insb
rcrl
fldt
push
sbb
repnz
outsl
leave
scas
aam
inc
sub
push
cmc
popf
mov
sub
mov
jbe
cli
add
loop
or
gs
mov
out
iret
push
sub
shl
jl
rclb
xorb
or
mov
fisubs
xchg
add
add
cld
push
jnp
cld
cmpsb
mov
mov
add
push
mov
add
aaa
add
cld
out
cmc
cmp
sarl
jmp
pop
cmp
mov
ret
sti
dec
dec
cmp
xchg
pop
xchg
mov
cld
jle
ret
mov
bound
push
mov
daa
and
push
rep
pushl
push
andl
fincstp
aas
add
sbb
push
xchg
cld
incl
cmp
pushf
or
mov
and
sahf
inc
cld
mov
daa
fcomp
pop
hlt
push
std
xchg
add
std
add
mov
cmp
mov
push
push
mov
inc
jmp
mov
mov
dec
call
jne
xor
in
or
mov
cmc
test
ret
daa
inc
roll
inc
adc
jmp
add
add
mov
andl
jne
jo
daa
jb
out
or
cmp
push
popf
test
jb
imul
xorb
mov
inc
add
jb
jae
es
adc
leave
add
aam
stc
cmp
sub
sub
mov
sti
imul
xor
iret
out
jns
cld
lret
sbb
push
out
add
arpl
rol
jp
sbb
into
cld
loope
fbstp
mov
jb
mov
adcl
enter
sub
adc
inc
xchg
mov
add
ficoms
add
scas
imulb
xor
sbb
ret
ret
mov
test
popf
cmp
add
cwtl
add
insb
int3
idivl
cltd
add
hlt
int3
push
iret
xor
loopne
sub
jp
sbb
stos
jecxz
lods
sbb
repnz
test
lock
sbb
outsl
or
negl
adc
in
incl
fwait
ja
divl
out
in
cld
push
sbb
out
cmc
fldt
insb
inc
stos
cld
fisttps
stos
mov
imull
mov
add
lods
xchg
repz
jmp
add
clc
test
sbb
pop
test
in
pop
xorb
iret
xor
jb
mov
add
sub
jge
roll
jne
lahf
inc
or
or
adc
xchg
pop
and
push
sbb
push
cmp
add
sub
and
decb
adc
add
dec
mov
popf
pop
sbb
das
andl
sti
ss
inc
and
inc
push
and
cmpl
add
inc
movsl
pushf
inc
or
inc
or
jmp
and
movups
std
push
sub
adc
out
or
cld
jo
repnz
add
add
inc
jne
sbb
lret
out
sub
add
sar
out
in
out
push
and
sbb
ja
jge
sbb
or
and
nop
mov
jae
cmp
adc
pushl
imull
test
sbb
sub
enter
sar
out
ljmp
outsb
lods
cmp
fistps
dec
or
mov
lods
add
outsb
add
andb
hlt
mov
loopne
mov
cmp
pop
mov
mov
insb
dec
outsl
add
push
and
sub
cltd
jmp
ret
mov
out
mov
shrl
lret
mov
jbe
loopne
add
add
scas
arpl
insb
inc
inc
xchg
popa
cmpsl
pop
cmc
jno
add
enter
sub
mov
add
cmp
aaa
jmp
lea
test
cmc
data16
add
test
cli
imul
clc
mov
xchg
js
cld
out
add
repnz
sub
notl
cmp
cld
mov
pop
andl
mov
xchg
and
push
sti
jge
lds
cmpsl
xchg
imull
xchg
notl
repnz
int3
mov
add
insb
jmp
or
or
icebp
xor
add
mov
or
push
add
push
sub
sbb
add
test
jmp
push
shlb
adc
add
sbb
ret
out
repnz
jmp
jl
push
mov
inc
call
xchg
push
lods
dec
in
xchg
loop
push
inc
xor
in
shl
sti
addb
flds
inc
cmp
out
cmp
add
cmc
mov
jecxz
sub
mov
fisttpl
lret
mov
add
add
lcall
inc
or
xchg
ret
mov
movsl
mov
sbb
loop
add
jno
xchg
cmp
add
andl
add
xchg
and
push
mov
das
cmp
fs
mov
jge
cwtl
gs
pushf
mov
xor
call
add
into
sub
adc
and
adc
add
sbb
mov
xor
xchg
adc
mov
add
add
subl
or
push
testb
push
inc
add
adc
test
lahf
jmp
mov
sahf
lcall
out
jae
loop
mov
sub
and
or
mov
cltd
loop
in
mov
sbb
add
add
sbb
decl
jmp
mul
adc
cmpsb
cld
in
or
jbe
add
or
xchg
or
dec
fs
dec
rcr
call
cmp
cld
and
jle
cmc
mov
or
or
loope
mov
js
jae
mov
push
movsl
push
lods
sub
clc
add
test
adc
mov
pop
std
test
notl
xlat
repnz
sbb
add
jg
cmp
dec
push
push
clc
xchg
jge
add
jg
clc
adc
clc
test
sbbb
cld
je
pop
xor
cs
lcall
inc
adc
push
xchg
in
pop
adc
fsubrs
add
leave
or
fstpt
mov
dec
call
mov
mov
pop
add
jge
lea
je
pushl
hlt
out
mov
sub
outsl
pusha
sbb
xor
sbb
pop
mov
outsb
loopne
out
inc
sbb
js
xchg
mov
pop
gs
add
hlt
out
mov
jg
sti
mov
pop
xchg
cmp
fstpl
mov
add
or
xorb
subl
add
lods
das
xchg
sub
std
repz
add
mov
or
mov
in
imul
mov
or
dec
sbbb
test
add
scas
xor
mov
roll
lds
hlt
pushl
pop
jl
cld
rorl
hlt
add
flds
sbb
jne
or
mov
or
add
rorl
jnp
sbbb
data16
mov
sahf
inc
add
add
and
call
addl
jmp
testl
pop
push
add
jmp
ror
not
incl
add
idivl
loope
iret
pushl
cmp
stos
adc
xchg
lret
sahf
jno
sti
push
adc
cwtl
dec
xchg
testl
jmp
test
and
jl
jo
xchg
cmovle
out
mov
sti
jmp
aam
push
sbbb
nop
jmp
add
bound
loope
aas
push
inc
inc
in
xor
hlt
cld
add
dec
decl
in
jmp
test
subl
fsub
mov
inc
call
lcall
fidivl
das
pop
adc
push
dec
pop
adc
ljmp
dec
push
call
mov
fsubl
add
mov
subl
jl
repz
cmp
sbb
call
sbb
dec
int3
cmp
mov
push
xchg
sbb
adc
pop
jb
in
mov
mov
or
jmp
mov
jge
sti
xchg
mov
hlt
sbb
pop
pop
into
and
dec
xchg
sbb
cmp
jl
cmc
sbb
subl
add
std
jl
mov
add
ds
pop
or
arpl
aas
add
add
inc
push
inc
pop
add
add
inc
add
adc
leave
mov
fcompl
jno
ret
stos
and
jno
or
sbb
into
mov
sbb
cmpsl
fistl
loopne
iret
jg
sub
add
add
dec
jle
add
add
stos
jne
out
jnp
ljmp
cld
jmp
outsl
mov
call
and
imul
adc
push
jb
and
add
movsb
adc
cmc
test
int
cld
pop
jg
testl
jb
pop
pusha
cmp
jmp
js
out
and
xchg
and
loop
sbb
push
pushf
test
jmp
repz
inc
cltd
outsl
mov
fucompp
mov
test
add
add
leave
or
int
add
in
cld
lcall
jne
push
lds
ljmp
inc
and
dec
jecxz
inc
cmp
inc
sub
cmpl
mov
push
xchg
sub
test
jg
lock
and
shl
jg
sbb
clc
add
mov
lock
jo
fadds
add
xchg
rep
adc
sub
add
inc
lock
add
mov
adc
addr16
cld
xor
les
add
clc
mov
cmp
fisttpll
mov
cld
sti
xor
sbb
push
ja
adc
jae
and
mov
sbb
ret
outsl
outsl
pop
adc
mov
jg
and
and
xchg
popa
ret
jnp
cmpsb
jmp
pop
add
loopne
xchg
add
jmp
add
sub
pop
popf
adc
mov
jl
sarl
shl
add
sbb
test
icebp
roll
or
fstpt
dec
test
adc
add
jmp
xchg
repz
or
add
ljmp
mov
jno
inc
mov
fwait
das
dec
pop
inc
xor
xor
xchg
fdivrl
ret
jae
lcall
jge
and
xchg
or
sbb
jne
cld
adc
aas
idivb
jmp
add
imul
add
out
call
test
stos
imull
mov
ljmp
fcompl
xchg
push
push
mov
add
add
loopne
lods
pop
out
scas
mov
cld
hlt
mov
test
roll
add
out
jl
mov
xchg
sub
xchg
cmp
ja
pop
es
push
fstpt
in
push
decb
push
inc
or
mov
inc
sbb
adc
xchg
push
cmp
add
mov
jo
lds
sti
adc
inc
fnstcw
sarl
ljmp
push
lcall
ljmp
xchg
insl
punpckhdq
repz
fadds
hlt
testl
xor
add
hlt
sbb
movsb
xor
add
mov
pop
repnz
hlt
into
mov
aaa
roll
hlt
call
or
cwtl
add
hlt
ljmp
ds
cli
xchg
push
incl
sbb
cmp
sbb
test
add
inc
sub
test
add
or
mov
add
hlt
mov
mov
mov
test
mov
add
add
push
repz
out
mov
int
insb
adc
cwtl
pop
in
imul
imul
aas
shl
test
fidivrs
sub
xor
cltd
add
bnd
add
push
adc
sbb
add
xchg
jae
pop
push
cmp
fcomi
cmp
fmuls
and
inc
xor
add
int
add
in
pop
mov
add
sahf
add
sbb
mov
sti
pop
mov
jbe
in
or
mov
sub
test
cmc
movsb
bound
adc
mov
or
xchg
cs
and
cmc
mov
jmp
add
sub
rclb
xchg
scas
inc
and
iret
add
mov
dec
pop
data16
sti
hlt
sbb
inc
jmp
in
cld
fdivrl
aas
jmp
add
mov
mov
sbb
daa
adc
icebp
adc
add
adc
fmuls
adc
lea
add
pushf
add
lea
add
pop
pop
cmpl
push
pop
or
add
xchg
pop
and
cmp
ljmp
scas
and
or
add
mov
mov
mov
lcall
add
push
adc
icebp
adc
sbb
sti
mov
nop
sti
lcall
popf
pop
xor
sti
call
hlt
stos
decl
mov
sbb
jmp
mov
cmp
mov
outsb
xchg
or
jg
hlt
mov
or
lds
call
inc
add
out
inc
xchg
in
sbb
pop
mov
cld
leave
sti
or
xchg
arpl
jmp
inc
adc
mov
shrb
push
andw
in
lcall
mov
or
incl
in
inc
add
push
xchg
and
and
gs
jmp
inc
add
andw
add
add
mov
xchg
mov
lret
dec
in
out
add
add
loop
orb
hlt
add
inc
sub
ret
add
call
pop
add
jl
je
pop
sbb
jmp
mov
js
jecxz
push
mov
js
in
out
lret
pop
push
push
hlt
add
js
push
mov
xchg
or
inc
inc
or
jmp
add
xchg
dec
jl
add
jbe
cmp
or
mov
out
sub
and
sub
add
orl
ds
add
push
xchg
call
jg
dec
adc
cmp
cmp
mov
add
cmp
sub
or
cli
pop
call
jb
and
insb
call
and
push
xor
jl
and
je
pusha
jmp
enterw
lret
mov
lds
add
fs
idiv
loop
aas
and
sbb
repnz
dec
mov
fwait
lds
or
aaa
add
sbb
inc
add
mov
mov
je
fdivr
cmp
std
jge
gs
add
mov
int3
fimuls
std
adc
mov
jle
adc
sti
sbb
je
xchg
clc
call
repz
adc
mov
div
pop
lret
aaa
in
xorb
nop
cmp
incl
inc
fidivrs
pushf
pop
pop
cld
stos
jno
jae
cmc
and
mov
mov
hlt
fdivp
sbb
sub
clc
sbb
adc
scas
ret
mov
pop
mov
test
inc
hlt
sahf
lock
sub
xor
sahf
xchg
xchg
sbb
addr16
lret
add
inc
cmp
xchg
imulb
stos
add
pop
imul
xor
push
jmp
xor
push
adc
cmp
js
xor
xor
sbb
lret
jge
jne
call
adc
orl
inc
es
sbbl
add
push
outsb
cmpsl
sti
push
adc
fs
dec
std
mov
mov
xchg
jg
ja
popf
add
pop
nop
scas
and
jmp
je
add
mov
sti
hlt
pop
adc
outsb
inc
or
clc
jne
orl
lea
sti
cs
add
cmp
add
testl
sti
fwait
pusha
stc
push
in
adc
shrb
cld
sti
jmp
cld
clc
adc
jmp
add
add
repnz
icebp
icebp
jo
fs
std
scas
cld
dec
call
gs
punpckldq
scas
std
add
push
push
lcall
not
clc
cli
jae
jae
fcomps
jb
movsb
inc
or
mov
sbb
jne
cltd
add
out
xchg
jge
int
cmpsl
or
call
adc
and
add
add
je
push
decb
lods
cwtl
add
push
cs
or
or
je
sbb
add
inc
push
sti
outsl
and
add
in
add
hlt
imul
jo
stos
sbb
push
cmpsl
jb
pop
jno
xchg
sbb
pop
cli
sti
pop
mov
imul
mov
xor
add
add
out
ja
decb
sub
icebp
or
lods
decl
in
outsb
add
and
cltd
add
pause
pop
mov
repz
lods
cld
loope
out
aas
hlt
data16
cmp
xor
mov
cld
cmp
xor
mov
mov
jno
mov
sbb
hlt
test
stc
mov
adc
testl
or
dec
bnd
add
inc
xchg
mov
sbb
out
mov
test
and
push
out
ret
ret
subb
jmp
cmpsb
inc
add
xchg
in
push
push
lcall
inc
jle
and
adc
jmp
sahf
sub
out
add
mov
or
insl
adc
roll
aaa
add
add
dec
jmp
loop
out
sarb
scas
hlt
cmp
stos
sub
add
cmp
mov
aas
add
inc
push
xchg
repz
call
xor
mov
lock
aam
ds
ds
xchg
push
fidivs
cmp
mov
push
lds
and
aaa
mov
add
ret
inc
add
in
pop
xchg
mov
sbb
push
pop
repnz
adc
add
shrb
add
out
scas
int3
fiadds
pop
ret
lods
inc
movl
add
mov
add
add
test
cld
call
jl
mov
outsb
mov
mov
xor
dec
movl
outsb
mov
mov
mov
cld
sbb
add
pushf
aam
mov
mov
sti
inc
add
xchg
xchg
sti
decl
jae
push
in
subb
fstps
xchg
cli
inc
add
test
add
and
jb
mov
out
js
and
lea
ja
or
hlt
jmp
fnstcw
hlt
mov
add
in
xor
pop
push
xor
outsl
xor
call
lock
pop
das
icebp
adc
aas
hlt
mov
je
stos
ljmp
mov
adc
xor
mov
shll
outsb
les
test
outsl
leave
or
int
les
mov
adc
int
les
ret
and
lods
into
es
pop
adc
adc
or
jp
lods
adc
add
decl
add
xor
dec
push
jae
push
jmp
testb
add
pop
jge
inc
hlt
cmc
fcoml
repnz
jmp
loopne
add
push
jae
cmc
adc
jae
loope
xor
je
dec
or
pop
cmp
cmp
jmp
cmc
clc
sti
add
add
add
jo
scas
sti
mov
or
clc
ret
sbb
iret
pop
test
aas
jmp
cltd
cli
sti
xchg
jge
push
xchg
dec
mov
fists
push
inc
call
in
or
lock
ds
repz
jno
jmp
add
fisubrl
jbe
mov
mov
add
rcrl
mov
add
cmc
mov
add
adc
je
pop
jp
pop
or
or
lock
incl
sbb
popf
mov
jne
test
idiv
mov
je
bound
movsb
test
sar
mov
push
and
mov
nop
mull
push
jg
cld
add
cmp
adc
sbb
pop
add
lods
jle
hlt
hlt
mov
jge
loopne
sub
incl
hlt
fnsave
mov
jmp
jge
add
mov
mov
or
sub
mov
mov
test
mov
jle
in
jle
sub
jae
jg
daa
inc
and
add
mov
xchg
add
add
fstpl
enter
push
jg
or
les
clc
mov
pop
fadds
add
fcomi
inc
cld
sti
ja
jns
jns
ret
subb
shr
sub
sbb
sbb
sarl
js
push
adc
mov
jae
fisttpll
cmpsb
lds
xor
inc
clc
dec
mov
mov
xchg
mov
xor
add
add
test
jl
xchg
add
adcl
ret
icebp
fcompl
pslld
cld
add
or
daa
out
icebp
add
fisubrl
pop
dec
call
repz
cli
movsb
or
js
fmul
add
cs
add
testl
adc
out
inc
fxch
into
or
out
sti
negb
testl
add
pop
je
jae
je
insb
inc
or
les
jne
and
ja
ret
inc
fucom
mov
bound
jne
cli
call
arpl
je
jbe
stc
jno
mov
dec
leave
sub
push
mov
iret
dec
call
incl
or
das
or
test
fnsave
mov
repnz
mulb
clc
pop
in
repz
lret
imul
pop
xchg
repnz
popf
push
leave
ret
push
mov
pop
xor
push
notl
cmpsb
push
or
pop
add
nop
cmp
push
jne
cmp
sbb
xchg
jne
scas
daa
jbe
or
mov
add
or
test
dec
jae
je
and
add
mov
xchg
ljmp
repnz
mov
jo
jae
je
das
jne
jae
add
je
pop
negb
in
lret
or
hlt
rclb
push
outsl
aad
rcrb
add
es
pop
mov
mov
bound
jns
jo
je
sub
add
hlt
adc
das
xor
decb
div
sti
add
lea
mov
sbb
cld
jne
gs
add
mov
std
pop
pop
pushl
sub
sub
add
push
pusha
jo
sbb
fcoms
ds
lods
dec
push
sub
jo
pop
out
push
jl
pop
fdivr
cmp
pop
inc
mov
data16
lret
imul
add
jnp
and
lds
add
fsubl
aas
rcrb
faddp
out
mov
push
hlt
add
in
shlb
add
je
fsubl
inc
mov
add
js
and
and
or
out
sti
jmp
lock
mov
adc
add
sbb
jg
mov
jg
in
sub
xchg
add
or
ljmp
sti
div
les
gs
add
jmp
mov
sub
push
test
je
cmp
and
push
mov
scas
sub
add
adc
mov
adc
xchg
call
test
or
add
mov
add
jl
std
add
rcll
lret
cmp
imul
xchg
push
lcall
cmp
test
lea
bound
ljmp
jmp
pop
add
pop
or
call
fildl
pop
addl
fsubs
rcrb
dec
add
xchg
and
or
add
js
incl
hlt
push
and
push
add
mov
mov
xor
sbb
sbb
add
add
jno
sbb
push
dec
stc
mov
addb
insl
add
jae
sti
xchg
pop
mov
push
jno
sbb
add
jge
call
xor
push
dec
lock
adc
andb
add
add
and
add
and
push
insb
inc
fdivrs
cmp
jns
and
add
jecxz
hlt
add
les
rorl
dec
and
mul
or
inc
hlt
jmp
hlt
incl
inc
jmp
pop
cld
jmp
ljmp
cli
call
adc
out
add
jmp
jmp
clc
hlt
add
testb
jo
adc
add
and
int
inc
and
xchg
sarl
push
inc
and
pop
sub
jmp
cmp
ds
int3
ret
mov
ret
xchg
inc
and
das
ret
addb
push
ret
lahf
xchg
imul
bound
pop
add
and
jmp
push
add
bound
call
jb
and
fldl
fcompl
add
aas
add
inc
mov
add
test
cmp
add
jne
xor
jnp
or
xorl
cmpsl
inc
decl
add
mov
cmp
jne
inc
addl
add
add
repnz
jo
xorl
jne
sti
add
add
popf
pop
mov
lea
xor
repnz
adc
cmp
jmp
mov
andb
add
call
loopne
enter
call
sti
jno
ret
std
cmp
or
mov
inc
sbb
je
fidivs
sti
xorl
in
fmuls
sahf
addb
mov
out
out
sti
adc
out
push
fdivrp
mov
andl
add
popf
inc
jne
in
cli
add
add
push
fiadds
rcrb
imul
add
add
jle
in
push
xor
roll
stc
jns
hlt
movsb
fdivrl
das
out
les
hlt
in
ljmp
push
sbb
or
push
in
xor
pop
idivb
dec
call
cmp
js
mov
mov
or
je
insb
fstl
lcall
std
sub
mov
adc
adc
add
add
add
xchg
sbb
inc
adc
adc
add
mov
ja
mov
inc
sub
jne
int
dec
cmp
add
cmp
fldl
lock
and
add
sti
xchg
subb
cmp
addr16
jmp
clc
stc
test
in
sti
je
mov
push
push
push
inc
add
fisttpll
mov
mov
dec
das
sub
mov
add
sbb
test
xchg
leave
sub
push
xorl
gs
pop
jmp
add
inc
adc
mov
repz
add
hlt
adc
push
ret
hlt
xchg
mov
add
push
je
mov
or
jne
fs
int3
sub
test
divl
cmp
push
ror
popf
or
mov
mov
dec
inc
add
xchg
sarl
hlt
adc
and
scas
decl
repz
add
in
lock
or
push
inc
sti
cli
shl
adc
add
cld
pushl
cld
jmp
aad
xor
add
and
mov
jl
jns
jae
jg
cmp
xor
pop
adc
or
mov
push
lret
push
jl
dec
clc
jbe
ja
adc
stos
jnp
in
outsb
ret
sbb
outsl
jo
hlt
add
dec
and
les
fildll
jo
add
or
insb
ret
add
and
jmp
add
push
or
lcall
in
loop
push
jecxz
ret
mov
or
pop
jae
callw
test
cmp
pop
repnz
sbb
pop
xchg
xchg
movl
jmp
fnsave
add
outsb
pop
out
loope
testl
imull
adc
lock
sub
add
xabort
add
sub
pop
int3
sub
mov
dec
and
jbe
sti
fidivrs
add
mull
add
jne
and
into
add
sarl
and
ja
or
mov
pop
sti
adc
ret
sti
mov
jg
pop
pop
insl
jb
nop
dec
lds
xor
arpl
push
cltd
add
or
repz
xchg
ja
add
add
mov
xchg
add
sbb
je
test
inc
xor
mov
mov
into
or
jmp
mov
jne
mov
jne
lret
cmp
lock
or
push
or
lcall
jg
out
testl
bound
and
add
lea
dec
call
pop
leave
pop
test
dec
and
in
rclb
pop
into
je
hlt
bound
or
in
je
push
icebp
jg
or
push
jle
inc
fadds
jb
cmc
in
add
subl
mov
push
adc
jle
ljmp
xlat
call
add
add
sub
movsb
push
call
pushf
fnsave
hlt
sahf
xor
adc
add
jmp
call
cld
cmpl
sti
repz
daa
sbb
bnd
jecxz
mov
in
lods
add
and
movsl
push
cmp
add
icebp
js
in
jg
lahf
fbld
mov
inc
mov
ficomps
sbb
pushf
lea
jns
inc
push
adc
test
jmp
mov
push
mov
fistpll
dec
jb
cs
mov
add
repnz
xchg
and
movsb
xchg
xor
hlt
mov
add
sub
imul
add
and
cmc
or
inc
cmc
jp
and
outsb
cmp
push
shll
pop
xor
xor
inc
loope
dec
or
or
adc
outsl
add
je
je
repnz
cld
fiaddl
out
push
in
call
popa
mov
sti
je
out
push
clc
add
cmp
in
jno
push
fimull
in
jo
jmp
pminub
pop
xchg
roll
jmp
jnp
je
inc
cs
fiaddl
fiadds
mov
or
addb
push
cmpsl
fnstsw
iret
dec
dec
mov
out
or
arpl
mov
ret
push
ret
shll
stos
pop
push
mov
insl
arpl
mov
jae
ret
shrb
xor
fucomp
add
mov
ret
pop
ret
mov
add
add
dec
test
roll
jnp
sbb
mov
xchg
push
pop
dec
pop
leave
push
in
mov
adc
jo
outsb
fdivrs
dec
and
shlb
stc
mov
pop
iret
loope
stc
fistpll
in
out
outsb
out
sbb
pop
repnz
clc
mov
sbb
xor
xor
jle,pt
jg
and
in
sub
sub
clc
mov
inc
add
mov
inc
out
jmp
jmp
mov
xchg
add
stc
jl
inc
cld
std
pop
or
adc
or
sub
les
fcmovnbe
jno
call
dec
and
clc
add
and
gs
push
add
add
call
aam
test
jno
mov
add
add
icebp
jg
icebp
call
hlt
sub
loope
leave
adc
push
and
lcall
inc
jmp
out
aam
xor
lds
sub
clc
add
add
icebp
decl
inc
add
in
inc
cltd
iret
inc
or
inc
lea
xor
adc
lock
hlt
scas
aaa
sti
faddl
lret
or
ds
pop
js
add
inc
sub
int3
std
dec
pop
xor
dec
or
add
adc
add
and
pop
inc
add
add
aaa
loop
pop
mov
push
out
or
and
add
jmp
and
sti
add
lock
add
fidivs
push
push
xchg
push
clc
call
test
je
loop
or
inc
add
int3
loop
clc
push
cmc
add
pop
add
mov
in
jl
dec
lea
push
push
cmp
xor
loop
dec
jge
add
pop
add
and
lea
dec
push
ja
divl
test
lea
ljmp
rorl
inc
hlt
jmp
clc
sahf
xor
mov
sub
gs
add
outsl
fwait
sub
sbbb
inc
lock
in
call
icebp
jmp
ret
imul
sti
loope
adc
xchg
shlb
ss
pop
or
cmp
mov
mov
jo
jg
and
aam
ljmp
cmp
out
mov
or
je
add
jae
add
ja
jne
iret
or
lods
lcall
add
xor
sbb
pop
and
jmp
inc
hlt
subl
in
lods
testl
mov
inc
imul
lock
out
pop
jl
mov
cwtl
addl
adc
xor
sbb
outsb
loop
lods
jbe
lods
xchg
push
jg
mov
mov
mov
inc
push
jbe
fadd
outsb
cld
push
add
mov
call
or
cwtl
add
jmp
loope
sti
faddl
les
push
adc
cmp
cmc
out
add
add
adcl
fidivl
add
in
outsb
jle
inc
pop
mov
int3
mov
cmp
cmp
dec
sbb
inc
add
notl
in
icebp
cli
xchg
jmp
jne
inc
push
mov
sbb
add
int3
adc
arpl
rcr
inc
and
jne
add
cmp
idiv
dec
cmp
inc
push
cmp
fstpl
in
dec
out
push
mov
inc
add
mov
dec
hlt
cmp
repnz
add
push
arpl
add
mov
insl
loop
push
lret
mov
in
fcomip
fiadds
add
add
add
into
addl
pop
pop
lea
jecxz
iret
jno
push
ljmp
data16
adc
inc
or
cwtl
stos
sti
loopne
movsb
lods
aas
add
adc
loop
jne
gs
mov
sbbb
lea
jb
lea
ss
xor
push
stos
inc
std
mov
hlt
call
das
push
sub
push
add
jne
aas
hlt
push
and
adc
repz
jmp
mov
push
jle
sar
push
icebp
push
not
je
das
cmp
loopne
fcomp
imulb
sub
das
pop
inc
add
mov
cld
add
dec
clc
cmp
lock
add
les
mov
mov
mov
out
pop
jmp
add
pop
enter
andl
and
pop
push
lock
or
add
test
jno
mov
and
add
repz
orb
icebp
and
mov
push
sar
jmp
and
sti
testb
jne
adc
std
mov
lea
sti
loopne
push
xchg
nop
mov
sbb
call
push
add
insl
lds
test
push
xchg
cli
add
jmp
addr16
jmp
cld
add
jb
test
add
or
idiv
pop
pop
dec
mov
call
test
push
add
add
lea
pop
mov
enter
lea
cwtl
js
call
push
divl
jne
or
push
call
sbbl
clc
inc
add
xchg
sub
lea
std
incl
add
sbb
int
rorl
sbb
test
ret
push
xchg
xchg
or
mov
fsincos
jnp
inc
push
hlt
fstpt
add
fidivrl
jae
add
fistl
sti
movsb
jae
xchg
aas
add
push
inc
mov
adc
imul
repz
loop
add
cmp
adc
xchg
fs
in
dec
xor
inc
jnp
sti
inc
imul
inc
hlt
ret
push
fucom
or
cmpsl
lods
inc
cmpsl
lods
ds
orl
cmp
lret
cmp
pop
and
out
sbb
push
test
jnp
stc
mov
lods
daa
in
jge
adc
add
mov
sub
mov
add
jnp
hlt
xchg
jge
repz
add
faddl
repz
sar
jecxz
inc
jmp
add
mov
repz
lds
insb
loope
jmp
sub
add
sar
jmp
aaa
add
out
aaa
add
or
ret
push
lock
xchg
rolb
aad
lods
xchg
inc
stc
sbb
mov
xchg
testb
push
add
jg
jl
in
jge
clc
out
pop
movaps
addl
add
lret
jne
das
stc
mov
test
testl
sbb
xchg
or
daa
outsl
hlt
add
add
or
int3
or
add
fiadds
addb
cld
jbe
mov
inc
dec
mov
and
xchg
ds
dec
mov
inc
jne
fbld
mov
loopne
je
cmp
xchg
add
into
mov
cmpl
and
mov
mov
jge
call
and
test
stos
jne
lcall
add
aas
inc
aam
jo
in
push
mov
dec
repnz
hlt
jmp
add
fmull
in
sbb
bound
add
imul
les
push
in
imul
cld
pop
fdivs
pop
scas
and
push
outsl
divl
xchg
dec
ret
push
dec
testw
sub
mov
and
jae
repnz
or
add
hlt
mov
out
hlt
push
mov
fdiv
push
jmp
aas
add
fistpll
xor
inc
add
add
hlt
mov
pop
mov
test
jmp
out
or
test
jae
pop
aas
in
or
jmp
insb
cmc
add
sbb
clc
jnp
jae
into
mov
into
add
jo
push
pop
lcall
inc
hlt
pushf
icebp
dec
fstl
test
add
jbe
add
testl
jmp
testl
bound
std
xchg
jge
adc
add
pusha
lea
jmp
testb
sar
pop
mov
mov
jmp
shlb
jb
lock
jbe
add
testl
jmp
add
loope
iret
add
testl
sbb
sbb
add
adc
push
jmp
mov
add
int
bound
jp
push
shl
rcll
and
jne
mov
fs
popf
xor
cli
push
dec
enter
xchg
cltd
add
jae
add
popf
add
push
in
jmp
dec
push
shl
mov
mov
jo
bound
adc
decl
sub
dec
add
ja
sub
mov
cmc
movl
push
mov
adc
jne
mov
or
mov
jmp
sti
or
cli
imul
rorb
in
rolb
or
push
pop
ljmp
div
dec
jg
loopne
push
add
fnstcw
fmull
leave
jl
push
scas
and
push
call
jae
fstps
sub
inc
push
push
ljmp
pop
data16
jne
gs
outsb
rclb
les
cmp
leave
fimull
add
push
and
fstpt
hlt
add
dec
in
pop
jmp
or
fsubl
jecxz
jmp
pop
xchg
add
xor
jmp
mov
jmp
lods
pop
daa
sahf
lret
call
add
cmpb
hlt
add
mov
jne
inc
add
add
jbe
mov
fs
hlt
add
jmp
notl
jb
cld
gs
add
push
adc
aaa
sti
hlt
sub
aas
jmp
ror
jl
addr16
idiv
test
test
sti
jb
stc
repnz
lcall
cmpb
push
cmp
jno
sti
data16
idiv
and
sbb
icebp
or
sti
add
jmp
inc
lret
sti
popa
ja
add
pop
aaa
sti
push
add
or
add
fnsave
ljmp
mov
decl
add
cmp
mov
inc
inc
and
add
add
add
int
add
mov
mov
add
std
das
lock
pop
mov
cmpsb
or
add
mov
shl
rorb
enter
pop
xor
lcall
add
sub
jne
inc
aaa
jmp
push
in
in
cmp
dec
mov
inc
ds
xchg
sti
insl
jns
in
inc
hlt
add
fistl
sub
jp
in
inc
or
mov
aas
ljmp
shl
cmp
add
add
call
fistpll
ljmp
fdivs
mov
or
add
js
adc
mov
test
mov
push
dec
in
popf
out
xchg
loopne
pop
in
fs
cmc
xchg
gs
cmc
xor
xchg
add
add
sbb
clc
pop
call
pop
test
cltd
xchg
cmc
jns
fistpl
daa
int
cltd
fmuls
pop
lock
call
inc
add
adc
insl
jmp
test
icebp
push
clc
cs
hlt
daa
bndldx
insb
jmp
rolb
add
xchg
mov
jg
jmp
addr16
dec
jle
les
jnp
add
jno
repnz
ret
sarb
aaa
xor
daa
pop
sti
cld
cmp
inc
jmp
mov
and
add
add
jmp
add
je
outsb
add
adc
and
add
mov
mov
insb
les
sub
jmp
sbb
jl
and
jmpw
adc
adc
sub
sbb
loopne
dec
mov
mov
out
clc
popa
hlt
mov
aam
loopne
inc
add
add
pop
add
mov
cmc
cwtl
stos
pushl
ds
cld
fimull
add
loopne
andl
or
cmpsl
or
mov
mulps
add
int
inc
test
stc
mov
add
rcll
test
push
add
ljmp
shrl
fadds
push
push
clc
add
add
hlt
andl
es
out
aaa
dec
adc
imul
mov
mov
div
dec
scas
jbe
cld
cs
lock
aas
std
dec
lret
xchg
movsb
add
stos
push
add
stos
jmp
out
dec
or
push
icebp
dec
mov
stos
push
cmc
stos
cli
imul
lret
jne
es
push
addr16
and
add
cs
sbb
push
adc
mov
lock
aas
or
cs
sbb
xchg
add
add
sti
jns
jmp
dec
pushf
push
inc
pop
pusha
lea
fisttpl
xor
sarl
inc
add
adc
add
sub
add
add
lock
pop
xchg
mov
add
sub
add
add
push
add
mov
movsb
rcrl
rcll
or
sbb
jmp
add
mov
inc
xor
cmp
lret
jb
in
add
loope
add
sub
lret
push
add
adc
add
sub
pop
xor
sub
sti
mov
mov
add
add
pop
leave
sub
shl
xlat
fidivrl
jmp
mov
lds
adc
lds
add
testl
add
mov
adc
mov
sti
or
sbb
mov
add
fs
testl
add
in
add
cwtl
sbb
inc
popf
cmp
add
or
add
sub
mov
pop
add
dec
cmp
pop
ret
inc
ret
sub
mov
mull
jecxz
and
pop
add
imul
or
out
sub
inc
add
test
add
or
aas
or
mov
add
pop
rolb
sti
lock
int
add
add
cli
sub
add
and
fcmovnu
mov
mov
out
xorb
jmp
inc
xchg
push
imul
sti
push
sti
ret
sub
hlt
fdivrl
add
ror
mov
or
test
add
pop
mov
fstpt
add
test
sti
jae
roll
shlb
adc
add
fdivrl
add
pop
fdivl
lods
or
clc
lods
decl
add
es
inc
push
scas
outsb
sbb
inc
hlt
lods
dec
rcrl
inc
push
adc
push
adc
lret
std
inc
hlt
mov
and
inc
jmp
fisttpl
jmp
inc
aas
pop
jmp
clc
fneni(8087
cmpsb
add
sbb
hlt
add
and
jae
icebp
add
add
roll
movsb
std
inc
hlt
xchg
xor
clc
lods
mov
fsubs
add
inc
mov
iret
pusha
add
mov
mov
inc
lods
loop
cli
aaa
add
add
fwait
mov
je
movsl
add
cmp
enter
test
les
mov
jno
add
add
add
lea
xchg
in
fldt
testb
mov
mov
xchg
add
pop
inc
loopne
idivb
adc
cli
mov
xchg
and
pushf
mov
pop
mov
mov
in
push
orb
xchg
dec
and
xchg
dec
and
jmp
adc
mov
int3
testl
add
testb
cmc
int
adc
dec
adc
dec
mov
cmp
clc
push
mov
idiv
adc
mov
adc
ljmp
push
jne
repnz
adc
mov
notb
xchg
dec
call
hlt
es
adc
sbb
daa
mov
xrelease
xor
xlat
ficoms
lods
pushl
mov
add
mov
sbb
mov
inc
sbb
jne
pop
ret
jne
xor
addr16
add
mov
fstpt
sarl
dec
push
add
imul
push
test
fadds
sahf
stos
ret
fmulp
sti
test
add
xchg
ret
jnp
jle
out
bound
call
add
flds
cmp
cmc
js
mov
cmp
ret
cmp
in
pop
jmp
cli
jp
cmc
xorb
sub
pop
adc
in
sbb
jns
jmp
in
roll
leave
lea
leave
out
stos
sbb
xchg
mov
and
add
pop
sarl
nop
push
stos
lods
push
sub
add
adc
add
popf
mov
call
fs
and
inc
stos
mov
sbb
jg
lea
mov
icebp
sub
cmpsl
rorb
stos
mov
in
ja
nop
call
adc
jmp
cmc
add
push
push
rclb
loop
inc
xchg
sti
or
push
inc
jmp
mov
fidivrl
jmp
jo
fiaddl
pop
add
jmp
lods
or
fsubr
inc
add
push
stos
jecxz
lret
test
pop
fldl
push
pop
inc
fnstsw
fsubrs
add
loop
adc
pop
daa
clc
and
push
repnz
push
pop
or
add
in
mov
scas
add
mov
call
notb
mov
inc
jns
ret
push
mov
sub
sbb
add
adc
jg
cmp
aas
add
xchg
dec
xor
movsl
aas
hlt
xchg
les
je
fcmovnu
aaa
lods
pushl
out
add
mov
dec
ffree
add
push
pop
inc
add
lods
add
stos
mov
push
xor
nop
inc
cwtl
cld
nop
test
sti
and
or
hlt
stos
daa
sti
jnp
cli
jmp
stos
decl
add
aas
add
aaa
bt
mov
hlt
fwait
mov
inc
hlt
andl
bound
mov
adcw
ret
pop
dec
lds
lock
insb
xlat
fidivs
jmp
add
mov
or
stos
int3
push
jmp
add
mov
add
sub
hlt
push
cmpsb
xchg
add
jnp
call
adc
pop
les
adc
add
int3
test
testb
mov
rclb
adc
and
jg
mov
out
shrb
cmp
jmp
pop
add
std
inc
add
std
test
mov
add
jmp
adc
lock
xor
jge
stc
daa
push
mov
cld
pop
sbb
js
or
xorl
add
or
mov
adc
cli
push
sti
cld
movhps
xor
add
add
adc
pop
lds
je
pop
notl
sahf
fiadds
add
pop
sub
je
push
xchg
js
add
out
add
sub
push
inc
or
cmp
std
orl
add
sbb
jbe
dec
mov
int3
adc
add
or
jne
fisttps
daa
popf
pop
lea
pop
addl
and
icebp
or
add
enter
dec
mov
jns
cmp
cli
pop
negb
mov
hlt
popf
xor
loope
sbb
scas
mov
add
repz
mov
jne
aaa
add
popf
mov
lea
sti
movsb
test
and
hlt
fwait
daa
sti
jmp
cli
imul
adc
fildl
test
mov
add
fwait
cmpsb
in
int
lock
or
cmp
cs
adc
es
pop
dec
dec
loopne
out
orb
or
es
cltd
add
lock
or
mov
add
int3
lds
jbe
cmp
aaa
add
mov
inc
pop
fstpl
pop
fstps
push
pop
mov
jle
stos
lods
mov
mov
dec
std
pop
dec
enter
out
jmp
dec
mov
stos
cmp
mov
or
add
sub
dec
or
pop
jnp
sbb
mov
sti
sbb
add
add
add
jnp
pop
lcall
and
cmpsl
lods
jne
jp
add
or
adc
add
inc
leave
sub
add
popf
sbb
jo
inc
pop
add
mov
repz
lds
repz
jb
xor
sbb
push
bound
mov
insb
lds
loopne
rcl
sti
scas
jl
je
lock
imul
pop
scas
je
fstl
cmp
enter
mov
lea
test
sbb
push
divl
jno
fsubl
add
clc
aam
inc
dec
jno
mov
xchg
inc
cld
cmp
in
add
cli
idiv
call
mov
inc
sbb
imull
jmp
xor
jmp
jns
ror
testb
inc
add
inc
add
fisttpll
call
push
les
add
roll
fstps
jecxz
mov
mov
pop
hlt
negl
mov
call
sub
or
lret
cmpsb
xchg
sarb
jg
mov
stos
cld
push
push
add
xchg
cmpsl
pop
inc
inc
mov
or
cmp
js
data16
test
out
jg
jmp
xchg
roll
add
add
mov
dec
sti
ss
or
adc
jne
sbb
or
call
mov
add
test
add
fnstcw
add
mov
mov
in
jmp
and
test
jmp
cmp
fstpt
movsb
pushf
arpl
add
inc
add
jp
pop
mov
mov
mov
pop
scas
and
out
add
add
pushf
sbb
and
add
pop
inc
in
es
in
es
data16
fidivrl
imul
fistpll
sub
pushl
clc
out
aas
into
testl
adc
add
out
add
lods
sti
jbe
mov
add
pop
dec
hlt
fcmovne
fidivrs
jmp
movsb
test
cwtl
movb
jo,pn
cld
jb
cld
repnz
repnz
mov
rorb
aam
pop
inc
jmp
popf
xor
push
lock
lea
add
aaa
add
lods
add
add
test
pop
cmc
xorps
jno
mov
jge
xor
aas
xor
test
jmp
pop
mov
repnz
test
imul
or
push
mov
pop
push
popf
or
dec
pushf
adc
pop
adc
dec
les
mov
fiaddl
mov
insl
adc
sti
das
push
pop
or
rolb
leave
iret
add
push
insb
je
add
insb
je
shrl
cli
pop
push
sbb
popf
dec
xchg
push
mov
xchg
dec
xchg
adc
stos
bound
jns
cmp
divl
testl
popf
repnz
hlt
je
popf
addb
mov
fsubp
adc
sub
sub
and
adc
icebp
mov
std
jae
push
xor
hlt
mov
test
jp
mov
bound
mov
sub
jmp
fwait
or
add
iret
xor
stos
lds
sbb
mov
icebp
mov
lahf
jl
mov
lods
push
test
shll
or
add
hlt
pop
outsl
xor
mov
popf
aam
add
mov
jmp
mov
loopne
mov
add
in
adc
push
jnp
data16
push
mov
mov
iret
incb
adc
in
add
cli
jmp
stos
mov
mov
les
test
loope
fnsave
mov
int3
hlt
aaa
add
sti
xor
scas
jne
insb
aas
aam
outsl
aas
or
add
pushf
push
jmp
les
and
stos
outsl
in
jo
fdiv
add
add
ret
sub
add
sub
lods
adc
push
push
mov
ss
lods
je
call
loopne
push
fneni(8087
pop
push
enter
push
cmovo
fnsave
pop
xchg
or
jnp
subl
add
add
fadds
mov
add
inc
popf
jno
or
leave
divl
jno
test
pop
addl
mov
clc
scas
add
hlt
test
imul
mov
stc
divb
jg
hlt
daa
add
jmp
cld
notb
cmpsb
enter
adc
jne
jge
call
mov
out
cmp
hlt
mov
iret
bsf
jg
pushf
sub
mov
popf
jmp
add
pushl
cmp
sub
add
mov
adc
and
int3
test
cmpb
sub
orl
sti
loope
or
mov
hlt
or
das
xor
dec
lea
ret
add
add
popf
call
mov
popf
mov
fmull
cmpsl
and
add
hlt
cmpsl
hlt
mov
inc
jmp
inc
lods
ret
in
add
std
push
pop
add
les
fstl
push
aas
or
test
sub
int
ret
xor
cmpsl
or
push
cmp
mov
int3
mov
hlt
add
cmp
sub
shrl
add
xlat
inc
hlt
test
rorl
sahf
inc
cmpsb
push
mov
stc
lret
and
hlt
adc
add
das
enter
test
add
loopne
add
daa
fbstp
add
dec
sahf
cmpsb
shlb
icebp
cmpsb
push
jb
test
std
add
jg
data16
cli
add
inc
add
rclb
lods
dec
pop
inc
or
stos
sti
add
bound
in
cmc
lret
pop
pop
or
pushf
mov
cld
fldcw
clc
push
sti
cld
push
aas
jmp
mov
jne
and
add
adc
add
cmp
fisttpll
add
or
adc
cmp
add
aaa
notl
inc
dec
clc
adc
jne
fmulp
jecxz
push
pushf
notl
and
cld
cmp
push
adc
inc
cmp
mov
push
into
xorl
inc
loop
lret
adc
cmp
add
and
push
lret
hlt
inc
push
dec
hlt
lods
jbe
cld
push
lds
push
lea
mov
push
sti
mov
mov
cld
pop
push
push
add
sti
and
les
xor
fdivl
add
adc
or
and
inc
hlt
push
inc
or
in
leave
mov
call
test
clc
push
push
out
xchg
mov
incl
hlt
xchg
pushl
clc
mov
loope
xchg
lods
mov
incl
add
iret
jp
inc
add
pop
fiaddl
loope
mov
jmp
and
test
imull
icebp
push
jns
xchg
sti
cmpsb
lods
push
inc
hlt
add
mov
mov
jmp
dec
mov
xor
icebp
stos
shlb
hlt
pop
adc
or
ret
imulb
add
loopne
rcl
add
cmp
loop
repnz
add
test
add
jmp
mov
call
in
add
je
cld
mov
mov
dec
cld
stc
testl
ss
jne
pop
clc
adc
mov
test
mov
inc
add
sub
hlt
aas
jmp
inc
add
sub
mov
add
add
in
cmp
add
jmp
lock
sub
xchg
xor
daa
or
lock
jmp
lret
jge
xor
add
addl
inc
or
dec
fmull
inc
and
dec
adc
pusha
jge
lcall
fwait
mov
lret
push
add
repz
dec
testl
add
iret
add
fisttpll
clc
add
out
add
add
jne
sbb
sub
clc
jmp
sbb
or
dec
jno
inc
lea
divl
jno
add
clc
call
stos
xchg
add
add
jo
and
jno
cmp
mov
inc
scas
jg
or
cmc
sbb
cmpsb
ds
add
pop
lods
push
lock
or
add
hlt
adc
jns
sub
or
xchg
adc
sti
jo
cld
orl
pop
add
lods
cli
inc
sahf
js
ret
fldl
mov
rolb
or
xor
ljmp
pusha
inc
mov
xchg
add
outsl
jmp
sbb
sbb
cmc
lahf
push
or
loopne
mov
fs
leave
xor
add
test
stos
cmc
sbb
cmpl
fcoml
jns
sub
ss
aam
in
jmp
add
mov
lods
lcall
lret
test
add
out
ja
cmp
adc
hlt
add
ret
xor
rorl
mov
xor
add
add
add
sub
sbb
loopne
sbb
scas
in
adc
lock
mov
adc
lds
in
adc
es
adc
xchg
push
add
sahf
adc
subl
out
in
add
push
or
pop
cmp
ret
roll
xchg
inc
add
cmp
mov
ss
add
jb
add
pop
inc
adc
add
add
int
cmp
cltd
mov
adc
mov
iret
sti
aaa
add
mov
add
idiv
add
and
dec
sub
fimull
lret
add
add
dec
mov
out
inc
cmp
call
mov
dec
mov
in
insb
cmp
mov
jnp
and
dec
movl
sbb
dec
push
xchg
inc
or
gs
xor
test
mov
sbb
fiadds
call
push
push
jnp
aad
cmp
xor
es
test
stos
rolb
sbb
outsl
cmp
mov
mov
mov
or
fimull
mov
test
add
ret
movsl
rolb
jp
hlt
xor
rolb
mov
les
xor
add
push
inc
hlt
lods
jp
mov
test
lods
rolb
daa
inc
add
mov
cld
hlt
cs
hlt
jnp
pusha
outsl
insb
pushl
or
jmp
fdivrs
dec
add
mov
add
fnsave
test
test
hlt
or
call
lea
clc
jo
std
call
inc
gs
subl
pushl
add
jge
add
std
mov
add
dec
sub
xchg
push
inc
xor
adc
add
jp
popf
fs
decl
add
cli
or
popa
lods
add
add
jbe
cwtl
jmp
jl
cmpsl
push
and
sub
and
sbb
cmp
negl
in
test
popf
add
negl
clc
xchg
pop
jmp
call
mov
push
test
and
xchg
cltd
mov
push
rcll
mov
add
add
add
mov
sti
add
push
push
and
sti
mov
div
divb
lcall
or
cmpsl
notb
sbb
lahf
divb
dec
aam
incl
inc
add
add
add
push
add
mov
cmpb
push
addb
incl
cwtl
aam
push
xchg
decl
lds
fildll
mov
dec
shll
jl
out
or
inc
hlt
std
jg
popa
lods
in
jg
jbe
jno
sub
outsl
fists
test
les
inc
cmpl
add
add
dec
dec
jnp
pop
jmp
and
add
add
inc
test
std
and
sub
je
and
or
testl
in
insl
sbb
xchg
cmp
dec
hlt
lods
jnp
mov
adc
push
jg
stos
sti
push
lds
movaps
test
jnp
icebp
js
sub
and
shl
out
mov
das
lock
call
mov
mov
movsb
shrb
shr
aas
or
gs
add
push
pusha
add
push
push
add
ds
mov
add
hlt
ret
add
mov
cld
addb
jp
mov
scas
insl
adc
sti
jl
and
pop
gs
add
jmp
je
add
idivl
xchg
xchg
and
inc
push
add
test
lret
daa
pop
out
push
sbb
bound
pop
adc
push
out
pop
sti
push
test
inc
in
mov
sarb
pop
jg
adc
outsl
pop
fwait
jne
jp
or
cmp
insb
lds
cmpb
sbb
jp
xchg
adc
bound
add
cmp
add
mov
jecxz
add
out
push
mov
mov
push
addl
outsl
call
bound
fdivrl
jnp
add
add
fwait
testb
sub
ret
rcrb
lds
cld
ret
call
pop
add
jnp
sarl
cld
into
dec
push
mov
gs
call
leave
roll
jne
add
rorb
movsb
dec
inc
mov
sets
add
dec
mov
cld
movsb
inc
adcb
mov
repz
hlt
stos
mov
daa
dec
aam
cli
jecxz
adc
jnp
push
sysret
cmpl
mov
mov
insb
fwait
xor
jg
adc
jecxz
jge
movsb
daa
xchg
mov
das
mov
int
inc
xor
xor
call
jns
adc
notl
xlat
inc
sub
jecxz
jns
aam
rcll
push
xchg
hlt
cmp
shlb
mov
cmp
insb
inc
fdivs
repnz
or
andl
add
mov
mov
cwtl
add
or
loop
mov
xchg
cmc
gs
jo
xor
xor
mov
scas
das
mov
lea
lea
stos
cmp
push
dec
mov
ficoml
add
testl
les
adc
pop
cmp
add
add
hlt
mov
xchg
mov
xchg
xor
add
aaa
add
or
add
inc
jmp
add
add
aaa
add
or
cltd
sti
xor
cmp
cli
mov
cs
ss
inc
inc
and
sbb
in
je
adc
cld
mov
fisttpl
adc
clc
mov
push
mov
scas
mov
and
mov
jne
push
push
not
inc
lods
call
lea
add
and
aam
repz
xchg
stos
stc
add
and
pop
jecxz
jecxz
xor
mov
adc
mov
rolb
add
add
bound
sub
mov
leave
jno
in
popa
ja
inc
push
lcall
aas
hlt
push
xchg
jmp
scas
sti
jle
popf
sbb
out
inc
adc
out
jg
mov
mov
mov
incl
cmp
sbb
cwtl
lds
mov
int
stc
adc
adc
pop
xchg
add
inc
or
dec
fxch
or
add
ficoml
shl
mov
mov
out
hlt
add
add
sbb
dec
test
add
add
ss
cmc
sbbb
or
inc
aam
call
sub
add
rorl
insl
testb
adc
add
jnp
cmp
loopne
int3
scas
mov
sbb
jl
lods
and
jmp
push
out
lcall
sbb
or
sbb
daa
mov
cmpsl
in
movsl
js
out
orb
pop
mov
xchg
xchg
pop
xchg
sti
jle
les
addl
dec
add
shrb
mov
int3
xchg
lods
add
xchg
sti
mov
pushf
add
testl
out
add
sub
in
add
xchg
jb
add
jmp
inc
or
aaa
sbb
ds
ret
mov
add
add
loopne
shl
inc
sbb
add
movb
aam
add
fmulp
pusha
or
mov
or
arpl
std
jnp
add
cli
cli
rorb
leave
xor
aas
decl
pop
add
jmp
mov
push
jmp
fdivp
pusha
mov
inc
int
push
pop
pop
add
cmp
or
call
add
out
inc
add
xor
add
push
inc
sbb
fs
jmp
les
add
incl
data16
add
push
jnp
sti
adc
lea
xchg
and
adc
pushf
xor
enter
xchg
xor
lahf
cli
mov
add
inc
lret
cs
in
shl
les
hlt
push
dec
sbb
xchg
push
in
int3
test
xchg
mov
add
testl
jo
loop
mov
sub
mov
xor
test
inc
dec
enter
adc
shl
pop
inc
hlt
jge
or
insl
setns
jle
jmp
inc
mov
shlb
sub
mov
stos
xlat
ror
cmpsb
add
and
shlb
repnz
adc
roll
jg
cmp
lods
fcomip
add
add
push
addb
push
push
rcl
lret
call
orl
js
dec
jg
push
sbb
loop
xchg
insb
jg
or
add
jno
mov
call
testl
ja
mov
jns
sbb
pushl
test
ljmp
loop
cmp
fcmovu
mov
mov
lret
push
inc
add
pop
rcll
dec
push
push
outsb
sub
gs
or
adc
dec
and
adc
cld
xor
scas
enter
inc
or
je
jae
cmp
mul
xor
ss
fistpl
nop
add
divl
jl
mov
mov
fdivrp
push
mov
test
and
push
mov
mov
cld
mov
test
inc
adc
out
push
mov
add
pop
xor
add
xor
sbb
pop
lods
stos
dec
fstps
push
xlat
dec
lock
add
xchg
mov
cmc
fwait
jmp
lock
mov
add
pushf
add
hlt
push
cld
stos
lret
xchg
jne
jp
jmp
faddl
repz
cmpsb
mov
jg
cmpsl
pushl
xor
cli
or
add
adcb
push
je
cli
xorb
push
std
xchg
jne
add
jmp
add
fcmovnb
xlat
ret
pop
sub
sar
outsb
or
cmpsb
add
sub
jno
jne
jp
js
lret
add
lods
jnp
or
push
xchg
psubd
in
cld
call
lods
and
inc
mov
jmp
add
add
addr16
inc
jmp
rcrl
mov
jae
inc
jmp
xchg
add
cld
lock
lret
daa
adc
fwait
add
push
lds
loope
add
sub
jne
ss
leave
loope
add
dec
sub
inc
jmp
xchg
jle
cmp
popa
cld
pop
jmp
dec
jmp
lock
jb
loope
pusha
pop
jle
push
or
jmp
clc
xor
sub
jge
lahf
mov
xchg
testl
pop
repnz
addb
call
imulb
sbb
imul
imul
sahf
add
lea
add
popf
rclb
mov
push
ss
into
inc
aad
adc
push
hlt
pop
call
add
push
add
test
mov
repz
mov
jne
push
bound
rcr
divb
push
jb
test
adc
add
add
sub
push
and
fwait
jmp
std
adc
jno
or
fwait
cmpb
jp
clc
adc
or
dec
add
fwait
cmp
adc
cmp
add
into
add
mov
hlt
loop
jb
repnz
xchg
mov
int
ret
out
test
xor
leave
mov
sbb
fwait
sub
loop
out
popa
fstpl
add
out
fwait
popa
mov
decl
dec
popf
sbb
push
js
jmp
add
or
pop
dec
mov
add
sub
xor
jo
ss
add
xor
jmp
sahf
cld
ljmp
mov
jmp
cmp
xchg
mov
or
add
add
jmp
mov
inc
cmp
pop
es
cmp
add
call
nop
test
jp
rorb
addl
test
inc
je
mov
jg
push
es
hlt
fistl
inc
jmp
jg
test
mov
xlat
push
data16
aas
jmp
test
sub
icebp
cmp
jmp
call
push
jg
test
sti
add
inc
out
xchg
icebp
testl
push
sbb
add
sub
mov
push
bound
jle
add
sbb
pushl
dec
adc
add
test
fdivrp
jmp
je
mov
dec
jmp
sahf
push
decb
xchg
add
xor
in
addl
adc
xchg
jne
push
adc
and
jne
cmp
jne
cmp
adc
add
add
mov
je
rcl
test
rcll
or
test
aaa
sub
rcrb
adc
incl
fcomip
in
and
test
fbld
add
and
subb
push
jmp
sbb
imul
pop
inc
lock
lahf
push
rol
repz
inc
pop
mov
sub
or
mov
insb
jbe
jno
or
mov
pop
add
out
je
lock
jne
jb
or
std
gs
inc
mov
push
sbb
dec
daa
xchg
sti
pop
test
mov
out
jmp
add
sbb
fstps
add
imul
mov
adc
clc
sbb
sub
imull
add
out
mov
xor
inc
mov
stos
jns
mov
adc
lret
mov
in
and
enter
in
or
ljmp
insb
push
subl
mull
add
jmp
mov
cmp
pop
cmpsb
jecxz
call
bound
mov
pop
das
int
mov
push
cmp
loopne
mov
xchg
insb
call
lds
push
inc
jecxz
push
test
cmpb
inc
repnz
add
je
mov
xor
shlb
inc
push
aas
jmp
aaa
add
add
lock
add
add
shlb
mov
mov
call
or
fisttpll
ds
call
cltd
inc
je
adc
or
imul
mov
mov
add
lea
dec
sti
fidivs
mov
lea
cmp
je
jo
call
mov
ljmp
aaa
add
test
or
jmp
decl
push
mov
je
jo
add
sub
call
shl
call
push
inc
pop
jecxz
mov
sub
inc
ret
cmp
add
sbb
or
lods
not
scas
sub
add
push
movsb
scas
aas
hlt
shrl
hlt
imul
sbb
jns
je
sbb
mov
insb
call
fldt
sbb
lods
lcall
call
pop
and
in
xchg
je
imul
sub
insb
mov
mov
add
xchg
add
jg
or
jmp
add
jge
cli
jo
jmp
mov
add
lock
sub
add
add
incl
xor
cmc
add
nop/reserved
xchg
insl
hlt
add
fwait
daa
inc
cmp
jnp
call
idivl
xchg
es
int3
imul
lds
adc
xor
add
mov
mov
add
test
insl
adc
fidivl
cwtl
fisubrs
add
mov
dec
hlt
add
and
testl
jmp
jo
adc
aad
mov
add
jb
cli
mov
incl
idivl
in
cmp
push
out
add
testl
movsl
lret
repz
push
xchg
pop
adc
testl
mov
dec
lea
adc
add
push
jp
pop
add
sbb
push
adc
add
clc
dec
or
jne
pop
add
ljmp
and
jbe
leave
repz
sbb
ss
push
dec
imul
xchg
stc
in
pop
jp
push
push
xchg
dec
mov
fisubrl
adc
push
cmp
in
or
mov
jmp
jno
repz
pushl
add
or
sti
cmp
dec
mov
sub
sbb
cmpsb
je
idivb
call
or
adc
jg
xchg
adc
repz
mov
imul
in
sti
dec
add
xchg
jmp
push
testl
cmp
pop
out
jmp
xlat
inc
add
mov
lods
js
xchg
hlt
out
xor
cs
scas
add
jns
sti
outsb
minps
sub
xor
mov
shll
js
hlt
add
ret
mov
lcall
movsl
call
add
arpl
imul
imul
add
movsl
mov
dec
inc
inc
js
filds
mov
xchg
iret
mov
stos
js
or
call
jo
add
imul
repnz
mov
mov
or
pusha
add
and
jp
sub
adc
pop
outsb
jg
add
add
lea
xor
mov
jmp
pop
aam
add
add
cli
pop
xor
adc
mov
sbb
cmp
cmp
idiv
clc
scas
push
jmp
aas
out
jmp
ja
cmp
cmc
dec
idiv
add
dec
ljmp
test
adc
add
sbb
dec
shll
decb
add
popf
or
add
outsl
lea
add
not
jns
dec
fdivs
cld
dec
and
test
pop
cli
cmp
inc
or
fdivrs
idiv
loop
adc
addb
xlat
pop
out
test
add
jg
mov
cmpb
inc
mov
inc
add
mov
mov
insb
cld
jg
jno
push
add
or
jbe
add
jns
or
pop
test
and
sbb
jle
push
jne
loope
jne
cs
sti
jmp
repnz
mov
fcompl
mov
jbe
add
jl
add
je
inc
jns
loopne
je
ljmp
sub
push
or
jns
mov
add
mov
jne
lahf
add
add
aad
insl
add
aaa
mov
movsl
daa
lock
ljmp
xorl
das
out
jmp
inc
add
jmp
xor
rcrl
test
push
cmp
repnz
pop
gs
loopne
pusha
adc
rcrl
push
jg
clc
test
mov
add
add
xorl
jmp
mov
aad
fists
jmp
xchg
mov
jnp
pop
test
adc
hlt
add
pusha
insb
inc
je
out
adc
fisttpll
mov
jb
mov
xchg
mov
pushf
bnd
adc
ret
jo
mov
insb
inc
je
add
into
push
mov
cld
pushl
imul
sbb
cli
sti
shll
mov
xor
scas
mov
and
ds
fs
enter
xorl
dec
stc
lcall
test
rorl
enter
mov
sub
cmp
call
and
ja
add
push
outsl
inc
lea
sarb
pushl
cs
jae
in
fcomps
les
dec
add
jecxz
pop
adcb
dec
add
test
mov
test
push
pop
push
mov
push
push
mov
test
icebp
jecxz
inc
or
test
sarb
clc
pop
faddl
sti
jmp
js,pt
sub
jg
clc
and
sti
dec
adc
cmp
jns
fistpll
test
xlat
call
jg
add
repnz
imul
push
call
jne
sti
call
in
pop
sub
cmp
or
and
adc
and
push
jl
xor
adc
add
jno
sub
jle
sub
pop
sub
jb
sbb
jb
loopne
popa
or
xlat
jecxz
imul
pop
xchg
jle
jno
pop
jns
rolb
fld1
push
je
xchg
adcb
jmp
aad
inc
jmp
jg
jno
cmp
movsb
jle
jg
sbb
jg
jnp
push
sbb
hlt
mov
add
and
sbb
clc
jle
add
inc
jge
imul
lock
ja
sbb
hlt
insl
add
pop
xor
testl
jbe
cli
test
push
insb
jae
inc
jle
pop
bound
out
pushf
xchg
cwtl
enter
idiv
add
jo
imul
mov
add
add
insb
sti
bound
mov
xor
push
jmp
jbe
imul
mov
test
insb
lods
ljmp
xor
or
idiv
loop
inc
decl
cmp
jmp
jge
adc
pop
mov
icebp
or
push
bnd
lock
sbb
mov
push
jnp
add
mov
jb
mov
je
push
dec
repz
mov
ds
loop
loopne
pop
adc
lock
pop
lock
dec
fstpt
push
push
jl
test
jns
push
cld
or
clc
repz
daa
daa
pop
lods
sar
aas
daa
push
in
sti
add
add
arpl
pop
sbbb
mov
in
pop
jg
pop
mov
fs
xchg
cld
mov
add
repz
testl
inc
hlt
loope
aaa
rcrb
mov
leave
idivl
pop
out
loope
mov
add
les
inc
push
jb
stc
aam
mov
push
add
add
add
jae
loopne
add
jl
inc
mov
xchg
jns
loope
pop
inc
add
divl
clc
jl
xor
inc
push
dec
jle
sbb
fcompl
jnp
lock
jecxz
movsb
jnp
inc
ds
jae
jo
xor
xchg
out
lahf
add
das
iret
lods
dec
inc
or
shlb
push
add
mov
testl
pusha
clc
add
xchg
mov
inc
fisttpll
add
or
lret
stos
and
ret
and
outsb
sti
jmp
iret
iret
nop
pushf
adc
daa
std
xchg
add
mov
jge
jge
andb
jo
les
mov
lret
pushf
push
sti
jecxz,pt
add
add
adc
fidivl
pop
sub
aas
call
jmp
call
out
notb
inc
mov
rorb
mov
jmp
shll
jns
push
pop
je
sub
lock
std
addb
jl
ss
mov
jns
hlt
pop
loope
mov
lods
je
bound
add
int
and
pop
adc
dec
dec
lea
idiv
sub
inc
adc
adc
push
xchg
push
adc
pop
mov
imul
hlt
push
jge,pt
inc
mov
loopne
cli
arpl
rcr
sub
jge
insb
out
cmc
leave
push
cld
xor
in
adc
jbe
sub
or
out
aaa
add
jb
cmp
add
adc
ja
add
mov
test
jg
pop
sti
inc
push
cmovo
in
mov
inc
sub
rolb
call
mov
loop
aas
cli
insb
repnz
add
mov
jle
push
sbb
sbb
loope
pusha
mov
add
rol
mov
add
shll
cwtl
les
pop
inc
call
fstps
cld
mul
call
mov
lock
cmp
ja
adc
sub
push
rcrl
movsb
adc
add
push
cmp
in
cmp
in
aad
xor
sbb
cli
cld
pop
adc
jmp
add
pop
mov
push
push
add
loop
or
sti
mov
jmp
push
call
mov
imul
mov
jne
xchg
in
adc
clc
test
lock
test
add
mov
pusha
jne
jg
push
and
ret
add
and
out
cmp
out
je
loop
jecxz
rclb
adc
addl
mov
fcompl
push
xchg
divb
out
into
dec
xlat
out
fdiv
sarb
les
cmovo
decb
call
aaa
notb
into
push
punpckldq
mov
mov
xlat
add
dec
xchg
jne
pop
call
cli
cli
dec
lock
clc
pop
adc
add
hlt
mov
je
inc
mov
cli
add
mov
je
gs
add
pop
fs
add
sti
jmp
sub
hlt
mov
call
into
pop
int
or
incl
sub
or
or
inc
hlt
ret
decb
jbe
sti
add
or
jmp
aas
adc
mov
psrld
lcall
in
lock
sbb
in
pop
out
std
roll
xchg
data16
inc
data16
js
sub
mov
inc
js
data16
outsb
lock
fadd
add
sub
xchg
jge
js
popf
repz
jmp
es
shrl
pop
std
cmp
jp
add
mov
add
sub
rorl
movl
call
clc
push
sub
or
pinsrw
push
or
mov
inc
ret
sbb
add
je
or
aas
inc
xor
add
jge
loope
add
inc
mov
dec
frstor
adc
test
call
std
and
stos
testl
or
pop
nop
push
lock
test
in
aas
jmp
aaa
test
in
out
add
mov
out
xchg
and
sbb
pushl
cmp
repnz
sub
inc
int
dec
push
add
add
dec
lcall
divl
cmp
ja
dec
or
sbb
push
pushl
inc
adc
pop
or
pusha
notb
dec
add
push
or
or
shlb
jmp
adc
dec
xor
add
and
inc
sbb
sub
je
shl
sbb
rcll
xor
pop
cld
ja
hlt
sub
cli
ss
pop
mov
incb
and
adc
jmp
imul
aas
hlt
imul
jae
mov
cltd
hlt
insl
add
push
jo
loopne
jp
out
mov
add
inc
sub
clc
loopne
shl
jl
cld
push
or
cmp
adc
mov
sarl
aam
push
sbb
fcomps
push
or
xchg
hlt
icebp
je,pt
mov
sbb
add
add
clc
and
xor
insb
inc
pusha
bswap
repz
xlat
jmp
mov
cld
and
popa
aam
jmp
or
pop
push
aam
cmpsb
add
mov
into
repz
push
add
mov
notl
cwtl
call
ret
imul
sub
or
add
adc
jno
hlt
shrl
in
rcrl
cmc
add
test
fcoms
xlat
push
fcomi
outsb
jmp
bound
xchg
pop
jb
ljmp
mov
repnz
inc
push
xchg
or
mov
cmc
aas
jmp
aas
pop
out
add
fmuls
push
lods
or
adc
idivl
add
ds
jmp
outsl
mov
cltd
iret
mov
sarb
xor
imul
fcoml
test
rcr
and
jne
fwait
pop
into
sub
cli
add
clc
divb
bnd
inc
cld
adc
or
std
add
sub
add
or
jb
add
inc
std
out
or
enter
pop
cmp
jmp
ds
lds
out
je
rcrb
sar
adc
add
pop
mov
fucomi
mov
addl
pop
mov
loopne
add
push
imul
dec
push
clc
sbb
hlt
sub
add
add
insb
jmp
je
hlt
insl
jp
mov
outsl
fwait
pop
outsb
xor
push
fucom
mov
mov
insl
jmp
std
aad
js
jg
lods
out
pop
jb
insl
incl
popf
xlat
jg
stos
decl
jge
dec
sbb
insl
test
repz
loop,pn
jno
push
arpl
add
hlt
insl
jp
push
add
xor
aas
lods
fsubs
imul
rcll
insb
out
hlt
add
enter
push
ljmp
mov
inc
add
add
icebp
insb
fistps
notb
clc
mov
shll
into
add
outsb
ret
stos
xchg
insb
adc
sub
add
adc
pop
shr
fdivrs
push
mov
add
in
add
hlt
add
hlt
out
pop
fmull
add
call
fstps
idivl
aaa
pop
xchg
enter
gs
cltd
icebp
mov
xchg
jae
clc
push
and
push
sbb
inc
jmp
or
decl
clc
test
add
loop
pushl
xchg
push
mov
rcl
xchg
push
add
mov
in
jne
pop
sub
stos
mul
add
and
sti
add
jmp
imull
push
ljmp
dec
flds
call
and
into
push
aas
sti
imul
xor
sahf
jmp
add
add
test
push
xchg
popf
dec
and
les
sub
push
repnz
je
inc
lock
mov
enter
addb
adc
add
out
je
cmp
repz
or
add
inc
dec
push
sbb
lea
stos
mov
imul
cmp
jae
mov
movsb
add
jl
sub
add
mov
dec
add
leave
pop
push
inc
hlt
adc
jne
stos
icebp
or
fwait
stc
mov
push
mov
data16
or
or
cmp
lock
mov
idiv
add
adc
hlt
call
or
adc
js
stc
addl
add
outsl
pop
gs
call
out
clc
aam
lock
hlt
mov
cmpsb
sbb
ljmp
pop
push
cld
push
xchg
popa
add
add
push
call
inc
xor
add
pop
xor
out
lock
xor
fs
imul
push
pop
cmc
add
add
outsb
mov
mov
add
push
add
pop
hlt
addl
dec
push
xor
jmp
mov
jae
mov
lock
jmp
mov
cli
cmp
sub
aaa
pop
imul
xchg
mov
xchg
inc
add
daa
cmc
aaa
pop
stos
call
add
bound
sbb
mov
mov
sbb
jmp
dec
leave
and
test
adc
arpl
push
test
cmc
xchg
testl
jle
mov
mov
lcall
jae
out
sbb
lea
dec
lea
mov
rclb
test
push
sub
fcomi
jp
sub
add
add
inc
add
xchg
xorps
cltd
pop
sbb
loopne
test
push
sub
dec
les
subb
fcmovnu
jae
popf
fcmovnbe
call
push
pop
divb
mov
addb
jl
fadds
mov
push
and
mov
and
push
bound
mov
enter
add
add
push
test
in
imul
mov
xor
and
je
ljmp
and
aam
outsl
mov
sti
jno
lock
add
push
in
push
outsl
pop
clc
cli
and
gs
fdivrl
inc
je
daa
sub
pop
pop
data16
rcrb
add
repz
add
cmp
cmp
loope
sbb
pop
imul
sti
dec
rol
sti
jb
add
sti
pop
xor
into
inc
mov
jmp
xor
cmpsl
sti
and
and
add
jecxz
call
mov
mov
cmpsb
jmp
insl
jb
in
testb
ret
roll
call
add
hlt
push
fnstenv
or
add
sbb
and
testb
movsb
push
add
xchg
mov
fsubrp
add
jb
mov
dec
or
adc
sti
es
je
rcl
and
scas
stos
adc
idivl
insb
lods
shrb
lcall
xchg
in
add
jmp
mov
add
out
inc
flds
push
mov
js
inc
flds
pop
mov
test
negl
ret
loopne
in
addl
mov
mov
adc
popa
sbb
sbb
push
sbb
dec
mov
add
push
add
inc
and
sub
and
jmp
cmpb
dec
dec
cmp
loop
cld
xor
sti
bound
add
xor
mov
push
and
notb
mov
je
out
and
jne
and
jne
and
pop
mov
addr16
nop
mov
jl
ljmp
ljmp
jmp
cli
loope
bound
hlt
mov
mov
in
pop
mov
sbb
jg
jmp
add
lcall
add
cli
adc
and
pop
sarl
imul
sti
fucomp
or
xlat
lds
adc
fwait
call
mov
inc
sar
bound
adc
jle
add
lock
dec
cmp
hlt
mov
cmc
cmc
jp
in
pusha
loopne
addl
add
add
mov
or
dec
add
mov
push
mov
mov
mov
or
jg
sbb
je
in
add
stc
mov
pop
aas
sbb
int
jmp
or
inc
roll
hlt
add
shrl
add
lret
in
outsl
ret
add
icebp
mov
cmp
pop
mov
add
testl
bound
pop
and
or
add
std
mov
lret
add
scas
mov
pop
js
and
testl
lock
pusha
jge
call
jmp
pop
push
dec
and
test
mov
mov
jne
add
fisttpll
and
cmpsb
add
or
sub
jnp
cmc
jo
sbb
or
add
fldl
add
fstl
sti
dec
mov
and
or
loope
es
add
add
adc
add
jge
add
jle
jmp
mov
gs
mov
pop
add
add
add
loopne
mov
mov
ret
dec
cmp
mov
or
int
dec
lret
stos
push
dec
addr16
mov
jmp
dec
push
andl
pop
sti
insl
mov
mov
push
lret
repnz
adc
pop
je
cs
lods
loope
jp
xlat
test
negb
std
pop
dec
mov
add
dec
add
xor
call
jg
mov
dec
ret
and
rclb
rolb
enter
fldl2e
pop
sti
jg
mov
stos
nop
push
or
push
add
xor
push
jmp
mov
pop
cli
xchg
out
dec
cmp
pop
rclb
stc
pop
xor
xchg
mov
jb
addl
add
add
mov
pusha
sbb
inc
jl
push
ja
out
hlt
add
fs
hlt
add
xchg
push
hlt
add
mov
pop
pop
pop
dec
insl
inc
leave
or
dec
pop
xchg
mov
out
hlt
subl
jl
push
outsb
leave
or
scas
cwtl
cli
out
mov
testl
adc
jl
or
jge
pop
rcll
cli
scas
insb
sar
aas
xor
xchg
sbb
or
je
dec
fdiv
bound
dec
sti
push
push
add
xchg
add
push
xchg
dec
xchg
dec
jne
fildll
pop
and
popa
jg
or
dec
mov
mov
mov
add
test
out
je
sub
scas
jge
call
popa
leave
jae
jne
or
int
out
lea
sbb
dec
lock
jl
sbb
add
push
push
cmp
mov
pop
jecxz
loope
testb
pop
add
push
icebp
mov
jle
adc
stos
je
out
or
pop
jbe
incl
inc
repz
dec
ljmp
pop
int
hlt
idivb
jne
pop
roll
sbb
xor
enter
push
jg
mov
fisubl
cmpsl
or
iret
sti
dec
ss
and
pop
fwait
rcrb
sbb
das
xlat
mov
jne
pop
insb
cwtl
adc
ss
push
in
or
pop
push
add
aas
jne
mov
daa
mov
shrl
push
or
mov
insl
push
jne
add
test
popf
lods
imul
mov
adc
pushf
push
hlt
fldcw
out
mov
dec
std
call
xchg
scas
add
test
rorl
and
pop
xchg
add
in
imul
pop
push
inc
mov
out
stos
scas
lds
jmp
and
xor
arpl
jmp
add
add
add
jmp
lods
ret
add
jmp
mov
jmp
mov
sti
jmp
imul
jmp
mov
add
testl
add
sub
je
addl
add
jmp
lock
sti
jmp
lock
xor
jecxz
xchg
icebp
loop
inc
push
lock
mov
or
out
testl
popa
add
aas
add
scas
push
push
sub
call
stos
incl
add
xor
mov
popa
add
or
add
mov
add
pop
orl
rclb
and
jg
xchg
test
mov
addb
shlb
jmp
pop
jnp
fldl
je
mov
cmc
lcall
jae
inc
or
sub
or
test
or
js
mov
divl
mov
decl
cwtl
and
hlt
into
sbb
sti
lret
mov
incl
sbb
xor
hlt
outsl
push
jg
aaa
pop
add
fadds
call
sub
push
je
push
scas
out
sahf
push
sti
jno
fcoml
jns
lret
adc
sub
sysenter
pop
mov
iret
fs
pusha
cmp
and
pushl
push
mov
add
mov
aaa
cmpsl
push
jle
iret
lret
clc
or
and
neg
out
ret
inc
outsb
dec
outsb
or
les
repz
loope
test
subl
or
or
into
or
pop
jmp
call
mov
pop
stc
mov
test
add
imul
or
mov
push
lds
fwait
push
inc
mov
clc
lret
daa
std
xor
out
xchg
mov
in
push
jb
lcall
inc
faddl
je
enter
mov
dec
test
and
xchg
rclb
push
and
push
test
add
cmp
sahf
testl
mov
add
fs
dec
je
cwtl
jg
insb
dec
rorl
sbb
test
dec
push
shl
add
xchg
pop
cmp
testl
test
lea
enter
sub
fiadds
add
dec
mov
lods
jge
or
icebp
stc
incl
dec
xchg
jg
xchg
push
divb
jg
clc
sbb
dec
call
aam
addb
mov
push
sbb
mov
ret
xchg
add
mov
and
jae
in
jae
mov
mov
ret
push
cmp
jae
rol
and
mov
and
dec
push
ja
jbe
pop
mov
and
in
jp
add
arpl
mov
dec
pop
mov
and
sarb
je
sub
sbb
pop
push
dec
pop
aaa
push
cld
std
inc
pop
mov
mov
lock
sti
or
add
hlt
add
daa
addb
xor
cli
and
adc
mov
jne
push
outsl
push
test
in
incl
daa
sbb
testl
in
mov
mov
mov
xchg
clc
test
jl
push
cmp
in
jmp
das
out
xchg
insb
push
pop
inc
cmp
dec
aad
enter
dec
push
or
add
inc
cld
repz
call
xorb
push
pmullw
mull
test
add
jnp
je
add
ficoml
sar
or
mov
outsb
xlat
xrelease
jmp
daa
jecxz
and
rorl
outsb
sar
sbb
rorb
stos
stos
adc
lock
mov
div
xchg
or
out
fucomp
sti
ret
mov
ret
icebp
lods
dec
bound
inc
cli
mov
dec
add
cli
mov
ret
fnsave
sub
flds
mov
pop
ret
das
sub
subb
mov
xor
dec
mov
dec
jne,pt
and
jmp
pop
aas
sti
push
mov
add
and
xchg
pop
gs
ret
dec
das
mov
mov
jne
roll
cld
pushl
enter
mov
jbe
inc
gs
adc
add
lds
ret
lea
jbe
adc
dec
mov
loopne
sub
add
or
xor
test
sbb
add
jnp
add
sahf
jnp
in
hlt
lods
pop
or
sub
dec
inc
mov
enter
xchg
scas
cli
mov
mov
pop
add
cmp
add
sti
dec
jne
mov
iret
out
add
sub
xor
mov
jle
or
sub
push
mov
cli
loope
out
aas
hlt
test
jne
xchg
add
hlt
sub
idivb
mov
push
sti
sbb
add
hlt
mov
jp
cmpsb
inc
push
outsl
add
cld
clc
out
add
aam
fadds
sti
sub
jecxz
inc
insb
inc
dec
arpl
inc
fcompl
adc
mov
add
lods
jp
call
ret
xchg
jecxz
dec
adc
hlt
add
push
jmp
sbb
add
add
and
adc
insl
ret
xor
rorl
mov
ret
add
lea
xor
pop
mov
icebp
inc
repz
mov
lret
pop
inc
push
mov
pop
or
ljmp
sub
xchg
mov
push
in
lret
adc
inc
test
or
fsubr
fmull
std
out
mov
adc
aas
sti
jo
pop
sti
pop
mov
aas
mov
add
int
pop
xchg
repnz
jmp
testb
rcrb
cli
aaa
aas
test
dec
add
sub
add
and
js
shrl
add
vpmulhuw
lret
jne
mov
idiv
cmp
add
rorl
add
dec
add
in
mov
push
dec
add
add
stos
aas
push
lea
addl
jg
push
add
add
add
test
add
movb
adc
mov
cmpsb
inc
add
hlt
sub
in
xorl
repz
dec
add
adc
add
mov
clc
stc
sti
inc
adc
jle
sti
push
add
adc
hlt
sub
adc
cmp
ss
inc
adc
add
or
lcall
push
fistpll
mov
xlat
xor
imul
ljmp
repz
mov
outsl
testl
fisttpl
jmp
or
in
jnp
in
mov
out
stos
sti
add
call
dec
inc
adc
or
mov
idivl
aam
shr
cmp
arpl
call
js
cmp
test
mov
fnstcw
jmp
jbe
add
jle
or
in
hlt
add
inc
push
sub
insb
inc
loope
mov
leave
or
aad
mov
mov
js
sti
jmp
and
push
push
inc
adc
xor
push
mov
cmpsl
incl
xchg
lds
call
pop
movl
dec
mov
arpl
stc
incl
movsb
cmp
cmp
or
loope
inc
and
xchg
stos
stc
mov
out
mov
sti
outsb
inc
aaa
call
add
pop
cmp
jae
and
push
sub
call
add
push
pop
add
pop
add
jmp
pop
xor
add
shrb
idiv
repnz
mov
fsubs
pop
add
test
imul
xorb
addl
idiv
or
int
push
movsl
shl
incl
push
inc
movsl
adc
pop
add
add
push
push
mov
in
xor
jbe
fcomi
cmp
inc
xorl
pop
sub
jmp
jle
xor
and
mov
sti
xor
push
sbb
pop
or
inc
sti
adc
push
mov
add
das
push
mov
jmp
mov
pop
jge
add
push
icebp
jmp
mov
inc
pop
mov
cmp
inc
pop
sub
mov
jae
test
jmp
bound
pushf
jno
sti
mov
or
inc
pushf
add
mov
xlat
jp
add
add
or
in
movsb
cli
hlt
jg
roll
pushf
cli
push
sub
int3
jmp
adc
sbb
push
mov
add
adc
xchg
sti
push
scas
and
jmp
sar
aaa
je
out
adc
shl
add
push
shrl
cmp
jp
push
xor
mov
mov
pop
jmp
fnstcw
xor
adc
lret
add
inc
push
fsubrl
sbb
sub
mov
or
or
hlt
sbb
inc
jmp
add
cmp
mov
cmp
imul
inc
stc
xor
cs
dec
bound
pop
sub
cmp
movl
out
or
hlt
sbb
inc
jmp
xor
jne
cmp
call
bound
cmp
add
mov
lock
lock
add
std
mov
je
push
mov
jne
shl
adc
stc
xor
lds
add
jmp
pop
imul
xchg
shl
adc
cmpsb
call
inc
add
mov
testl
push
add
fldl
add
mov
pop
add
mov
je
mov
add
add
divb
scas
add
jno
adc
adc
ja
hlt
mov
ret
cmpl
je
mov
xor
ret
pop
sub
push
sub
jbe
je
pop
js
inc
pop
cmp
mov
js
jne
std
sub
sti
hlt
sub
dec
cmc
add
sbb
sub
mov
je
pop
inc
je
sbb
and
in
xchg
in
add
inc
dec
sti
rorb
or
sub
mov
les
cs
xor
sahf
int
jmp
data16
andl
or
sahf
sbb
testl
lret
add
mov
add
xor
cld
and
call
mov
dec
sbb
add
dec
orl
icebp
inc
imul
ficompl
mov
xor
call
faddl
dec
clc
or
jmp
arpl
add
pop
or
test
ss
add
clc
mov
add
std
adc
testl
push
push
sub
jb
jmp
not
xchg
pop
or
sub
loopne
pop
mov
or
dec
call
push
test
mov
daa
call
cmp
and
cmpsl
sub
add
pop
add
cld
call
xor
push
icebp
test
add
dec
sbbb
divb
les
popf
lret
lds
lea
mov
call
test
add
mov
jae
dec
addb
fistpll
push
or
rclb
ret
jnp
cmp
add
dec
sbb
divb
push
xor
sti
sarb
incl
sub
mov
ret
sbb
outsl
inc
mov
daa
jg
sbb
xorl
je
aaa
add
and
mov
hlt
sbb
push
cmc
mov
lock
cli
or
hlt
mov
inc
das
es
rol
adc
aam
push
jg
repz
and
mov
iret
nop
adc
rolb
add
add
rorl
push
adc
adc
add
jle
add
mov
mov
or
inc
ds
jae
hlt
rcll
xchg
add
add
cmc
lahf
cmpsb
insb
add
inc
inc
fcmovnbe
pop
jae
loop
idivb
push
push
xchg
out
ljmp
jno
andl
push
stc
cmp
hlt
sbb
add
add
mov
add
mov
mov
leave
dec
push
pop
xor
in
cmc
jne
xorb
jns
xchg
mov
divl
push
das
xor
mov
and
sti
scas
fs
mov
cmc
stc
xchg
jbe
lcall
loopne
jle
testl
mov
jge
xchg
add
or
push
xor
mov
lock
xchg
and
test
adc
les
lahf
test
in
testl
bound
mov
or
add
add
rolb
test
add
test
insb
adc
into
test
testb
es
mov
mov
movups
inc
adc
add
or
add
xorb
repnz
aas
inc
sti
test
testb
cmp
in
insb
add
adc
inc
push
sub
jl
sbb
mov
xchg
js
xor
and
jg
add
fwait
ss
and
inc
pop
xor
stc
dec
cmp
push
sub
hlt
sbb
in
mov
outsl
ret
loopne
or
cmp
xchg
mov
sti
sub
fmul
mov
incl
pop
fists
add
lcall
dec
fwait
sub
inc
aaa
add
incb
loopne
aam
mov
add
or
ja
push
mov
leave
mov
test
or
lods
loopne
jl
add
test
std
gs
add
mov
jg
add
clc
test
out
push
pusha
mov
incl
cmp
jmp
add
ljmp
mov
mov
and
pop
add
int3
add
in
or
dec
sub
dec
mov
incl
in
shll
pop
ror
cmp
mov
add
add
testl
gs
mov
fidivl
popf
sub
sub
adc
das
jne
push
call
jb
adcl
add
into
mov
xchg
mov
add
cmpsb
das
sti
scas
add
addl
out
out
in
add
das
pop
daa
dec
cmp
jg
rep
fs
mov
and
insb
or
push
cmp
add
jp
or
jp
std
je
adc
imul
pop
add
push
inc
idivl
push
jb
cmp
jp
int
add
or
lea
filds
jp
out
pop
pop
mov
cld
xor
mov
cmp
fsts
jnp
xchg
jno
adcl
push
stc
cmp
fimuls
inc
cmp
push
inc
stc
jmp
inc
jp
pop
gs
sbbl
jae
sahf
inc
out
mov
ffreep
stos
add
xor
jle
in
pop
or
add
add
addb
call
out
add
push
hlt
sbb
push
es
mov
hlt
fldt
mov
or
mov
mov
jg
cmp
clc
int3
jns
and
mov
add
ret
lea
cmp
jae
mov
inc
pop
mov
out
dec
pushl
cmp
add
dec
adc
daa
add
cmc
sub
daa
jl
cmp
in
jbe
jmp
cmp
lock
jl
adc
mov
aam
pop
sub
gs
mov
popf
inc
sub
test
pushl
popf
jo
cmp
fwait
add
aaa
jmp
js
sti
jo
out
or
pushf
lea
mov
add
sbb
jle
repz
mov
add
jp
jl
clc
mov
ret
adc
mov
jb
sbb
out
pop
add
out
shrl
xchg
sub
pop
jo
ja
out
bound
scas
cli
movsb
jo
or
jne
cli
ljmp
add
ret
stos
out
add
xor
sbb
fcomi
add
test
fcmovnbe
push
jb
jg
loope
xor
test
jp
jae
pop
add
test
je
xor
add
xor
fmuls
mov
call
idiv
push
xor
jge
out
je
xchg
push
mov
mov
je
mov
add
popa
push
ds
mov
test
mov
mov
jae
cmpsb
inc
push
jle
dec
or
icebp
jp
leave
lock
add
lret
clc
mov
jl
or
cmc
je
adc
jae
adc
jae
hlt
dec
aas
test
or
mov
push
xor
fdivrl
dec
sbb
in
pop
cmc
jp
add
pop
pop
xor
orb
add
in
out
shlb
lret
addr16
xchg
mov
pop
jg
jnp
popa
dec
jp
push
adc
jp
inc
inc
lock
hlt
sbb
mov
hlt
ljmp
jbe
xor
jecxz
mov
mov
fimuls
dec
add
int
jmp
jg
scas
enter
out
insl
loop
add
mov
sub
mov
aam
das
mov
int3
push
push
outsb
repz
pop
jnp
in
sbb
jle
mov
lock
aaa
mov
notb
out
insl
loop
lret
xorb
lods
inc
inc
sbb
push
adc
push
cmp
mov
mov
iret
push
inc
add
add
iret
xchg
lock
add
and
leave
stos
js,pt
loop
shl
push
loope
add
dec
data16
dec
mov
jl
and
dec
pop
out
jle
scas
or
aaa
and
bound
enter
pop
sti
xchg
mov
push
lahf
out
mov
jmp
add
xchg
inc
or
into
pop
adc
cmpsb
mov
mov
dec
and
test
or
push
mov
pop
sahf
cmp
gs
dec
mov
cmp
jne
sbb
xchg
lret
testb
xlat
je
mov
str
hlt
orb
add
push
cmp
mov
aaa
divb
mov
push
not
aad
inc
rorl
fistpl
and
decl
divb
hlt
inc
push
or
sub
or
fwait
sub
add
cmpsb
ret
adc
mov
ja
xor
ret
pinsrw
call
jg
xor
daa
xor
mov
or
hlt
sub
sub
outsl
repz
aaa
loop
out
sub
decl
sbb
jl
ja
xor
adc
loopne
imul
int3
mov
jp
xchg
push
mov
lods
iret
cs
add
inc
push
xchg
mov
and
inc
repnz
call
add
xlat
inc
add
inc
in
add
add
test
test
hlt
push
xchg
mov
scas
mov
test
ret
jl
stos
outsl
add
xor
stos
arpl
push
inc
push
mov
inc
jae
int3
pop
fisttpl
jge
movups
xor
adc
sub
dec
je
je
add
add
or
adc
ja
add
sub
push
mov
xchg
ja
xor
inc
mov
lahf
cmp
pushf
iret
gs
sub
loopne
testl
inc
daa
push
cmp
cmp
adc
es
iret
pusha
sub
sbb
or
xor
add
add
pop
add
dec
addb
mov
inc
movsl
xchg
add
adc
xor
mov
jmp
shll
push
test
loope
mov
fmull
add
invd
cmp
or
or
push
test
add
les
xor
ret
xor
pop
jg
sbb
hlt
jae
xchg
popa
pop
mov
pop
orb
add
add
pushf
push
inc
enter
fcmovb
or
mov
test
sbb
dec
addb
sub
dec
xor
adc
out
sub
sbb
mov
jmp
xor
jns
repz
cli
inc
dec
adc
in
add
test
mov
out
xor
add
jg
inc
mov
jg
sub
add
xchg
sub
outsl
pushl
shl
decb
jno
sub
and
inc
sbb
fdivrl
adc
test
sar
or
sub
repz
stos
sti
out
subl
add
or
bnd
mov
enter
enter
adc
decl
pop
and
add
mov
or
cltd
in
lods
add
jge
pop
setp
mov
cld
jno
out
cmpsb
or
jmp
out
add
xor
jp
clc
sbb
pop
sub
in
jle
xor
sbb
adc
mov
mul
add
or
xor
ret
dec
cmp
fists
scas
sbb
decb
out
add
mov
jnp
or
sti
fidivs
dec
jmp
sub
jns
mov
jae
clc
push
inc
out
cli
push
icebp
add
loope
fidivrs
add
testl
sti
gs
add
sbb
loope
movsb
add
addb
pop
add
xchg
les
dec
add
add
int
call
adc
mov
add
cmp
pop
jg
int3
or
addb
jae
divb
add
inc
ret
out
call
mov
sbb
or
out
testb
and
push
aam
pop
sbb
pushf
mov
lcall
inc
and
cmp
je
sub
push
sub
mov
and
add
add
das
push
cmpsb
fistpll
jl
fstpt
jge
fstpt
or
mov
or
push
pop
inc
inc
sbb
cli
pop
js
sbb
jl
adc
jl
xor
loope
adc
xchg
sub
outsl
jmp
sub
hlt
mov
andl
and
cmpsl
and
jbe
inc
add
add
and
dec
sbb
inc
inc
adc
cs
lcall
add
mov
loopne
push
xchg
mov
fistps
dec
test
add
adc
popl
jb
or
out
xchg
add
rcr
in
fisttps
adc
mov
icebp
adc
or
cli
sub
enter
jmp
loopne
mov
add
xlat
adc
xchg
scas
xlat
cld
rclb
mov
cmc
sub
add
fistps
lret
test
mov
call
pop
cmp
add
inc
mov
sbb
adc
fists
lret
out
xchg
sti
mov
mov
lret
addr16
sti
mov
jecxz
inc
int
jecxz
out
inc
push
sti
jb
mov
fcompl
xchg
push
test
lods
in
out
sbb
out
fimuls
into
add
neg
pop
icebp
dec
cmc
cli
cmp
push
in
subb
jae
sub
call
push
in
add
dec
pop
xor
cmp
stos
popf
testl
or
add
xor
and
add
push
incl
pop
call
push
push
pop
and
gs
sbb
fiaddl
lret
neg
cwtl
add
add
divb
cs
negb
roll
addr16
dec
and
cltd
inc
and
dec
popa
mov
cmp
test
add
pavgb
addb
test
hlt
stc
stc
popa
or
rcll
cltd
ret
out
fisubs
les
outsb
decl
mov
adc
insl
push
inc
sti
xor
push
xor
js
adc
jl
sbb
inc
adc
call
sub
and
inc
add
mov
jbe
mov
stc
lcall
add
and
add
sti
xor
or
add
and
push
and
sbb
les
mov
clc
add
jecxz
addr16
pop
jb
test
flds
test
bound
mov
push
jp
sub
icebp
sub
mov
sti
repz
fs
jmp
and
dec
or
add
xchg
fcmovnu
test
jne
add
sub
cli
stos
push
mov
jns
jns,pt
mov
pop
pop
or
roll
cmp
add
adc
sti
ret
mov
in
scas
xchg
lcall
adc
sub
je
sbb
jmp
push
xchg
add
fcoms
add
imulb
inc
rcrb
mov
or
add
gs
adc
sti
sub
adc
in
add
scas
add
fisttpll
call
cld
mov
and
testl
test
sti
andb
add
xchg
jns
mov
in
jp
call
add
jge
add
jecxz
incl
std
call
test
sub
jne
call
xor
in
jae
mov
fsubl
call
aas
dec
adc
test
imul
mov
pop
mov
sbbl
mov
leave
jae
xchg
sub
lea
or
inc
test
sub
sbb
nop
inc
fs
jl
add
sbb
jns
daa
call
dec
cmp
decl
out
push
jae
stos
negl
in
incl
pop
add
hlt
cmp
cmp
xchg
pop
jg
pop
das
ljmp
rcl
add
push
daa
aad
add
xchg
inc
adc
xchg
mov
add
nop
test
mov
mov
stc
cmp
ret
add
sbb
add
outsb
int3
sbb
loope
adc
xchg
adc
orb
inc
out
jns
and
add
mov
inc
in
or
mov
andps
inc
lock
lods
add
sub
sbb
cmp
hlt
sbb
daa
or
mov
stos
add
xchg
test
pop
add
fs
repz
sbb
adc
jge
mov
aas
jmp
xorb
jb
je
cmpsl
unpckhps
popf
pmullw
mov
sbb
mov
pop
testb
jnp,pn
test
aam
and
imul
mov
or
add
ret
dec
adc
stos
adc
sti
sub
add
bound
test
or
add
mov
call
sbb
push
adc
push
add
xchg
dec
push
xorb
mov
idiv
adc
jne
push
lret
dec
push
call
icebp
dec
call
ror
push
xchg
popf
jl
jne
ss
std
add
mov
lea
lret
int
je
and
je
shrb
or
jge
or
push
dec
jmp
xor
jae
pop
notb
hlt
sbb
push
mov
out
and
stos
outsb
daa
in
push
jmp
call
daa
sbb
push
imul
mov
call
add
add
jle
insb
in
mov
lret
and
inc
out
xor
sbb
aam
inc
mov
push
sbb
sbb
out
or
aam
sbb
xchg
ss
sub
lret
jmp
jne
hlt
sbb
ljmp
mov
test
pop
hlt
cmpsb
gs
pop
call
mov
cwtl
addl
cmc
mov
mov
sub
pop
or
inc
fwait
shll
add
in
fs
pop
hlt
add
inc
loopne
pop
sbb
ficomps
dec
sbb
rolb
inc
adc
sub
jp
js
std
dec
lret
mov
nop
cld
push
fcomps
jno
cmovp
sub
call
add
cmp
mov
in
mov
adc
testl
in
mov
divb
add
testl
mov
testl
ljmp
je
jb
je
mov
out
repz
fs
push
jb
add
jmp
je
or
je
psubsw
add
repnz
add
push
jp
je
push
clc
dec
adc
push
add
push
call
test
xchg
std
adc
dec
mov
fldpi
fnclex
lock
cmpl
call
sbb
jae
jge
adc
scas
inc
sti
scas
pushf
fiadds
mov
jmp
push
leave
lahf
add
data16
decl
mov
movl
add
mov
pop
mov
in
int3
fsubl
push
cmpsb
clc
addb
or
cli
jge
call
addb
xchg
jmp
push
or
pushl
adc
ja
or
imul
adc
jbe
add
hlt
cs
mov
neg
inc
mov
sbbl
hlt
sbb
cmpb
add
add
ljmp
sub
cld
xchg
dec
call
jno
push
mov
mov
xchg
inc
call
jg
xor
adc
cmc
sbb
jnp
cmc
sbb
repnz
aaa
mov
mov
mov
inc
jg
sbb
pop
nop
fistpll
mov
movsl
test
add
subl
add
ret
addb
and
pushf
sbb
cld
lea
mov
out
xchg
or
or
rolb
loopne
inc
into
movsl
xchg
dec
jg
in
dec
xor
add
lret
cli
or
xchg
xchg
or
fwait
inc
add
cmpb
jmp
add
jge
push
and
call
cmpsl
cmp
inc
addl
jb
push
xchg
inc
je
js
sti
jb
push
in
mov
jmp
jmp
fmull
mul
jns
cli
into
or
jl
cld
std
test
jl
add
push
jge
jmp
jb
repz
cmp
sbb
add
les
inc
sbb
jns
or
jns
mov
js
lock
inc
pop
nop
in
mov
int
mov
ret
xor
cmp
inc
fnstsw
or
dec
repz
popf
add
jge
es
mov
add
push
cmc
addb
xor
add
dec
icebp
imul
add
inc
clc
ljmp
mov
cmc
out
pop
add
repz
lods
nop
add
sbb
pop
lret
mov
or
stos
xchg
out
aas
hlt
out
inc
ret
add
lahf
sbbl
in
jae
inc
test
adc
ja
and
ja
pop
lea
cli
mov
add
ficoms
add
jno
and
mov
lods
add
hlt
add
add
sbb
sub
sub
adc
xor
shlb
push
lcall
add
hlt
add
mov
and
mov
xchg
xrelease
push
jb
iret
add
jae
daa
mov
shlb
loop
call
add
insl
sarl
cltd
stos
data16
add
push
adc
sub
and
hlt
add
mov
sarl
xchg
xchg
add
add
xor
outsb
lret
aad
jecxz
jmp
cld
jl
pushl
jb
gs
jb
sarl
jnp
add
add
push
divl
pop
jle
in
add
add
cld
jg
xor
in
add
aaa
movsb
dec
xchg
or
mov
daa
and
addb
add
imul
mov
add
repz
sbb
or
dec
fbstp
sahf
pop
xchg
sahf
shl
mov
push
jg
adc
jle
outsl
iret
negb
test
data16
loopne
mov
add
cmc
mov
fcmovb
add
pop
divb
fisubrl
or
lock
and
add
jnp
hlt
pusha
inc
mov
xor
jl
test
ja
jmp
push
ja
mov
add
add
pop
test
cmc
decl
je
incb
mov
pop
sub
push
mov
jmp
out
test
jmp
jecxz
stc
push
or
pop
stos
repnz
clc
sbb
xor
add
hlt
lcall
ja
or
pop
cltd
setle
push
xor
cli
pop
jecxz
xor
sbb
inc
enter
ss
hlt
dec
stc
fwait
in
incb
das
jge
add
add
and
or
push
outsb
out
sahf
sarb
and
jns
cltd
or
and
cmc
and
jmp
dec
add
outsl
in
jmp
aad
lock
divb
inc
lock
paddb
cmp
clc
xlat
adc
in
add
add
pop
sbb
cmp
or
inc
fsubrs
sbb
pop
hlt
xchg
scas
js
pop
sbb
movsl
add
add
sub
add
out
cli
pop
insl
mov
push
popa
dec
sti
sbb
add
repnz
sarl
ret
xchg
jnp
add
mov
pslld
cmc
testl
in
sub
mov
mov
out
adc
add
popf
pushl
hlt
in
addr16
xchg
jnp
jae
in
and
add
and
insl
call
sub
xchg
jecxz
mov
push
push
sbb
lret
idiv
pop
mov
add
add
dec
pushl
ret
pop
mov
or
cmc
add
mov
mov
push
or
cli
xor
adc
add
and
xchg
in
sbb
add
scas
shl
jecxz
or
divl
notl
push
dec
or
hlt
jecxz
push
add
stos
and
jle
sub
enter
cmovg
jecxz
lret
push
add
jg
out
shl
roll
call
mov
hlt
inc
out
in
and
push
out
sub
repz
movl
clc
cmp
ljmp
add
in
sarb
outsl
dec
jg
cmp
inc
or
js
add
hlt
push
add
hlt
insb
int3
inc
inc
add
insb
rorl
add
xor
imulb
sbb
add
icebp
jbe
call
jno
test
add
inc
icebp
call
pop
jg
ret
imul
das
adc
mov
sbb
push
mov
jle
mov
add
push
out
cmc
out
mov
push
add
pop
sbb
test
push
rcll
ret
decl
mov
cmc
fidivrl
add
sti
out
mov
aas
add
xor
push
mov
out
lcall
imul
sub
out
push
jmp
aaa
or
mov
cmp
rol
out
fisubrs
or
add
lea
cli
mov
mov
adc
pop
leave
stos
test
jge
lock
sub
mov
sub
les
clc
ret
lock
jge
div
jge
div
jge
testl
jge
lahf
add
orl
adc
pop
add
orb
mov
sub
addl
push
imul
push
mov
in
pusha
adc
push
push
xchg
add
stos
loop
lret
adc
fcomps
cmc
jne
adc
xor
jge
test
stc
cli
jae
adc
adcb
inc
or
adc
push
repnz
fwait
cli
addr16
add
hlt
push
xchg
pop
fdivl
cli
lret
outsl
aas
jne
ds
stos
jle
lods
fwait
xchg
add
pop
push
cwtl
add
mov
or
shl
jns
push
call
outsl
sub
repz
jb
push
lds
mov
pop
jg
dec
test
incl
jns
inc
leave
jl
sub
add
xor
idivl
sbb
cmp
mov
cmp
push
movsl
sbb
loop
incb
repnz
mov
loop
inc
add
inc
jnp
add
cld
inc
push
mov
jb
or
add
add
inc
xor
out
pop
xbegin
xchg
mov
pop
les
sub
jo
mov
or
fnstcw
add
in
jle
xor
jnp
pop
push
bound
add
add
mov
rol
and
xchg
lock
jp
or
add
jno
fidivl
push
push
push
je
cli
pop
cli
cli
xor
push
lds
gs
add
xchg
test
call
lock
insl
cli
out
jno
ljmp
dec
mov
pop
sti
push
out
jecxz
mov
xchg
add
add
inc
leave
mov
jae
add
jo
pop
dec
je
icebp
ljmp
xchg
sub
inc
mov
xchg
loopne
push
push
or
incl
das
sti
icebp
push
into
adc
idiv
inc
add
shlb
adc
or
lds
mov
ss
cmpl
ja
incl
ljmp
push
jns
push
jp
or
push
mov
inc
pop
add
lea
adc
loop
fimull
negl
test
ret
push
mov
xchg
sbb
push
add
mov
jne
jae
in
hlt
nop
pop
sti
or
cld
dec
or
ret
jbe
test
loop
ret
hlt
jmp
popa
ja
add
jo
push
outsb
mov
add
push
or
jno
add
mov
pop
adc
js
mov
jmp
push
mov
xchg
incl
pop
add
jae
jno
clc
add
shl
jns
dec
cmp
jne
jo
or
jg
mov
add
xchg
rolb
int3
scas
cmpsb
xchg
adc
movsb
stc
sti
idiv
push
mov
inc
rcll
mov
sbb
push
pop
jo
aam
mov
add
ret
mov
mov
push
or
cmc
ret
fwait
subl
mov
fs
xor
adc
mov
icebp
push
cmc
jmp
js
or
xor
pop
xor
adc
dec
fadds
stos
lea
cld
jl
add
test
adc
das
mov
ret
inc
in
add
jmp
aaa
clc
fs
adc
aam
adc
or
mov
push
jmp
stos
incl
aad
push
call
jb
pop
mov
loope
add
jb
testl
test
fucomip
clc
incb
stc
ret
add
jbe
or
push
jmpw
push
hlt
xor
add
or
aad
inc
dec
icebp
lods
inc
sbb
rcrb
dec
add
inc
mov
in
mov
aam
inc
pusha
xchg
call
xor
jp
cld
inc
mov
push
repnz
adc
pop
add
inc
stc
call
mov
cli
mov
bound
mov
inc
stc
sbb
shr
fs
mov
push
loopne
fsubrp
hlt
pusha
inc
pusha
aas
je
push
add
mov
push
ja
jmp
xorl
mov
jmp
xorl
gs
add
repz
pop
add
adc
ja
repz
shl
mov
xor
jg
fcompl
jecxz
pushl
xchg
stos
xchg
hlt
mov
test
hlt
jmp
xchg
jae
out
imul
xor
ja
adc
repz
hlt
mov
push
jp
add
nop
mov
mov
sbb
mov
add
add
jo
sbb
jle
or
addb
pop
aad
outsb
es
sbb
hlt
cmp
mov
jmp
lock
pop
jmp
js
imul
js
nop
pusha
gs
frstor
orb
imul
mov
xor
jmp
cld
out
je
add
push
cmp
sar
neg
pop
cmp
add
xor
in
inc
mov
out
dec
shll
mov
incl
sbb
lea
inc
jle
mov
sub
mov
decb
out
cli
jb
jl
add
or
mov
in
lock
mov
ret
stos
push
ds
divb
add
adc
jle
mov
scas
out
push
testl
into
sar
imul
mov
loop
pop
add
jae
jae
filds
pop
jnp
data16
negb
insl
and
jne
sbb
int
and
fldl
or
sarb
add
add
out
and
jno
lea
push
push
pusha
add
adc
and
in
sub
ljmp
stc
rolb
add
scas
mov
mov
test
inc
add
push
cmp
push
stos
xor
push
add
lret
lret
push
sbb
xchg
divl
inc
mov
hlt
fistpl
loope
adc
pusha
mov
add
in
cmp
or
adc
cmp
lds
test
add
insb
push
jno
into
push
int3
mov
jb
push
fsub
mov
jo
jae
addl
or
loope
inc
sub
add
jl
sbb
test
popa
ss
cltd
or
push
jnp
gs
inc
icebp
call
js
fcomps
in
push
jo
jp
ds
insl
dec
add
aaa
lods
fsub
cmp
arpl
push
cmp
jg
cmp
arpl
pmuludq
lods
daa
in
movsb
daa
in
jge
daa
fdivrl
push
orl
sbb
add
jmp
fadds
inc
cli
jmp
testl
add
pop
push
mov
add
fs
in
jmp
sar
jmp
jae
jae
test
out
leave
add
mov
jbe
sbb
mov
push
push
pusha
movsb
clc
mov
push
sti
cld
sti
xchg
adc
imul
or
ljmp
aam
cli
jmp
scas
push
xchg
pusha
jmp
add
inc
add
pop
sti
dec
ljmp
test
cmpb
add
lea
pop
sbb
bound
test
enter
push
sub
stos
bound
fcmovnbe
inc
in
mov
add
inc
push
pop
notl
cwtl
enter
pop
add
inc
icebp
cmc
mov
jge
adc
test
incl
jne
bound
je
jge
adc
enter
addr16
add
ret
inc
push
call
fwait
mov
cmpl
test
hlt
jg
mov
dec
sti
inc
pop
arpl
push
lea
sti
shl
add
push
adc
mov
pop
cmpl
adc
add
xchg
xchg
dec
add
jmp
adc
xor
jl
jg
mov
mov
push
mov
ja
mov
pop
jmp
cld
inc
or
and
jns
mull
out
fwait
rorl
jbe
fisttpll
pop
in
insl
inc
add
loopne
dec
push
loope
add
loop
in
push
ficoml
test
jb
push
or
add
sti
mov
sbb
mov
pop
call
hlt
add
push
cmpsl
pop
and
cmp
jmp
add
mov
dec
jg
call
sbb
lock
fnsave
enter
lods
lahf
push
dec
ret
stc
push
sti
cltd
sti
cmpl
add
daa
pop
sbb
xor
add
pushf
verw
jb
ss
sbb
fs
jns
cltd
cmpsl
out
je
adc
sahf
ss
mov
clc
add
cmpsb
je
stc
mov
adc
jmp
out
xchg
cmpsb
out
dec
loope
inc
clc
call
cld
clc
addb
lock
or
sub
fnstsw
cld
sbb
add
add
sarb
data16
scas
shlb
push
pop
in
push
mov
and
push
inc
push
mov
mov
add
jl
std
cli
out
dec
jmp
add
ljmp
test
roll
adc
imul
in
dec
push
add
inc
into
xlat
lcall
inc
or
push
dec
lea
push
divl
push
notl
hlt
out
sti
jno
outsl
add
pop
pop
jnp
shlb
dec
and
cli
int3
xchg
cli
mov
ficoml
jns
clc
cli
mov
xchg
testl
dec
jnp
andb
dec
and
cli
pop
pop
xlat
cli
imul
cli
jo
cld
adc
sbb
add
cmp
ljmp
orl
xor
dec
add
mov
clc
hlt
inc
push
sbbl
stc
pop
push
xchg
xor
outsb
insb
mov
jp
loope
inc
jno
add
jmp
jb
mov
lods
sarl
push
faddl
aaa
inc
test
stc
call
pop
jnp
or
ljmp
imul
adc
push
push
test
add
jnp
insl
rcll
clc
dec
test
dec
outsl
fucomp
and
loope
outsl
add
dec
not
test
jmp
cmpsb
sbb
dec
add
test
testb
stos
push
push
add
jg
jmp
idivl
mov
psubusb
gs
add
callw
mov
test
insb
add
push
lea
in
dec
std
je
or
add
pop
xchg
jmp
outsl
add
mulb
addl
icebp
add
bound
cli
add
cmp
push
push
push
push
xchg
push
adc
popf
push
add
adc
jp
add
dec
push
pop
mov
cmc
incl
mov
orl
xor
cmc
push
xor
test
jmp
jl
adcb
cmc
push
scas
add
cmc
add
repnz
jl
test
and
pop
cltd
inc
add
hlt
fildl
xchg
and
add
add
add
sub
bound
inc
mov
hlt
sub
jns
orb
or
push
sbb
xchg
ret
pop
rorb
leave
out
xchg
dec
call
ja
cmc
je
pop
pop
hlt
hlt
and
das
pushw
jno
int3
adc
jb
jae
repnz
push
fsubr
lcall
add
and
pop
add
adcl
mov
out
in
mov
pop
cmp
jb
mov
push
pop
out
in
repnz
cltd
add
mov
mov
mov
jnp
pop
jmp
out
hlt
movsl
aas
push
or
xor
jae
outsl
sbb
hlt
jle
mov
add
sub
add
adc
imul
bswap
frstpm(287
es
adc
bound
in
ljmp
lods
call
push
icebp
xchg
inc
in
jb
js
mov
push
sti
sbb
jg
idivb
cli
sahf
out
inc
test
push
mov
xchg
sub
inc
clc
add
movb
add
add
leave
sub
jmp
xchg
nop
call
je
les
push
sti
xchg
bound
xchg
mov
add
cmp
and
fdivrs
dec
push
sbb
add
loop
jne
sarb
xlat
loope
push
enter
mov
sub
les
add
fldl
dec
push
and
and
out
pop
call
loop
bound
dec
in
pop
inc
mov
decl
dec
push
pusha
inc
lock
dec
push
cmpsl
inc
mov
push
call
push
mov
insl
mov
xchg
in
cli
pop
mov
jnp
dec
repnz
inc
inc
xchg
dec
sti
jmp
xor
pop
adc
dec
in
fstpl
fdivl
push
call
jno
ljmp
idivl
cltd
popf
ja
pop
je
inc
fdivr
imul
shll
push
jns
sahf
out
jp
cli
sbb
push
inc
aam
jmp
push
icebp
je
addr16
out
cli
mov
mov
je
cmp
push
sbb
mov
add
sub
cmpsl
jbe
jnp
lds
in
xor
out
jecxz
fyl2x
loope
jl
mov
arpl
jge
mov
in
sbb
test
lds
push
push
out
push
cmc
jle
mov
push
fcomip
dec
adc
inc
shrl
lods
in
mov
mov
mov
adc
shr
loopne
mov
into
pop
jns
cld
lock
call
outsl
je
pushf
push
adc
cmp
bound
shll
lahf
cmp
or
or
lods
loop
cmpsl
lahf
pop
adc
shll
sbb
cli
mov
clc
push
sti
mul
mov
shrl
push
mov
cli
push
cld
cli
adc
call
add
add
hlt
mov
inc
add
mov
aam
fcmovnbe
push
sbb
pop
clc
add
mov
inc
ret
pop
aam
push
add
mov
decl
inc
or
cmpl
rorb
mov
out
cmc
test
jle
or
add
inc
xor
add
repnz
mov
cmp
flds
add
lea
cmp
pop
cwtl
cli
fisttpll
dec
pop
inc
or
fmull
ljmp
rclb
decb
les
xchg
sub
mulb
lds
xlat
inc
call
pop
xor
adc
or
repnz
jecxz
cli
add
xlat
rorb
xchg
add
hlt
push
or
xor
mov
cmp
cli
jg
add
cmpsb
vfnmsub213ss
test
enter
xor
lock
jnp
test
daa
add
in
js
mov
push
and
push
cwtl
sbb
xchg
pop
in
add
in
lods
fbld
jnp
fmull
add
imul
add
stos
in
xor
ficomps
sub
xchg
out
jb
fldl
mov
loop
add
mov
ret
testl
inc
andl
inc
insl
inc
hlt
ss
push
addl
sbb
rol
pushl
pop
aad
cwtl
pop
cld
jb
fcmovbe
pop
and
cli
jp,pt
jp
lds
test
testl
xchg
and
fsqrt
jb
fmuls
dec
xor
in
pop
jle
negb
cmpl
lds
fimull
ss
xchg
in
mov
filds
stos
add
lea
xor
call
xor
pop
rcll
or
cld
in
cmc
call
shrl
les
rcr
jne
pop
dec
fcompl
cltd
cmc
call
mov
mov
lock
ss
inc
or
fmuls
mov
addl
jle
pop
leave
psubusw
push
xchg
mov
add
inc
xor
and
ss
lea
idiv
cmp
inc
call
pop
enter
push
idiv
pop
bound
xor
out
jg
dec
lea
in
mov
in
jle
imul
ret
fsub
cli
xor
ret
sti
popa
incl
ljmp
cmp
mov
mov
add
add
inc
clc
movsb
xchg
push
jno
imul
fimull
jge
out
test
fnstsw
add
push
subl
mov
out
mov
fdivr
jbe
call
test
ficoml
adc
or
cmp
call
test
cmpb
jge
mov
jnp
xor
inc
jmp
mov
mov
popa
fisubl
push
imul
add
add
aas
push
add
add
shll
sbb
jns
push
mov
lret
aas
cld
or
les
xlat
shr
cmp
mov
cmp
std
call
xor
lea
xor
or
inc
fdivrp
mov
inc
mov
stc
add
imul
test
jmp
add
sub
jmp
add
cs
fstl
sbb
out
call
lret
mov
sbb
shr
icebp
lods
or
out
xchg
roll
testl
add
sbbb
push
mov
add
test
inc
insl
pop
add
or
clc
fsubl
mov
add
inc
insl
pop
add
dec
les
xor
jne
fbstp
pop
fisttps
fadd
add
add
insl
rolb
xor
pop
add
inc
or
mov
add
fisttps
cwtl
rolb
cmpsb
inc
call
enter
push
add
jg
cmc
in
incb
jno
dec
inc
lahf
outsl
enter
dec
jno
icebp
test
in
ljmp
enter
sub
sti
addr16
jmp
push
cmp
xorl
icebp
sbbl
rolb
add
in
jl
fcmovnb
xchg
mov
add
mov
push
xchg
decb
jo
scas
incb
in
sbb
aaa
or
jmp
int3
sbb
pop
cmp
out
lock
adc
stos
insl
in
xorl
jns
orb
scas
mov
in
xchg
mov
add
add
jns
in
cmpl
add
mov
pop
lds
in
stos
out
jp
xor
sub
aad
in
mov
jp
jp
cltd
in
cld
push
loop
xchg
inc
in
fmull
imul
cli
into
jl
cld
jb
xor
xchg
jle
sbb
shll
jb
mov
icebp
daa
ficoml
cmp
cld
mov
xchg
inc
ficoml
sub
loopne
lahf
inc
sti
sbb
decb
es
push
mov
push
lock
pop
fidivl
lock
mov
pop
lods
lret
mov
or
movsb
xor
icebp
aas
add
add
and
add
add
pushl
sbb
sbb
cmc
push
jbe
in
loope
outsl
mov
addl
inc
mov
lea
cltd
dec
push
push
or
pop
clc
test
pushf
or
mov
maskmovq
notl
jge
movups
add
lea
lea
idiv
mov
out
mov
out
or
cli
incl
pop
jne
in
hlt
cs
movsl
flds
ljmp
fimuls
ror
push
movsb
mov
test
xchg
lret
add
mov
pusha
dec
sti
xchg
mov
int3
out
mov
mov
or
xor
fs
imul
xchg
xor
fdivrp
es
add
add
popw
push
jae
or
mov
mov
pop
and
dec
push
add
push
sti
inc
jmp
nop
jo
or
cs
lret
subl
push
lock
test
add
andl
loope
fsubrp
test
dec
xor
push
call
xor
loope
jle
aam
jb
cmp
inc
std
insl
pop
xchg
jle
lock
sbb
inc
std
pop
inc
mov
xor
jle
flds
mov
or
sahf
push
inc
or
fldenv
paddusw
andnps
pop
mov
mov
and
notl
add
add
fdivr
out
pop
sub
out
jmp
shll
cli
ud2
cld
into
add
jmp
gs
aam
mov
mov
stc
test
pop
pop
adc
imul
fdivl
sub
sub
data16
push
ret
mov
in
cmp
cmp
bswap
lcall
add
xor
or
gs
addl
add
add
and
push
pusha
andl
adc
push
mov
jns
lar
jae
addr16
sub
enter
jae
mov
jmp
pop
or
clc
push
ret
clc
jnp
xorl
dec
push
or
testb
ds
push
adc
or
hlt
rcr
cli
jge
shlb
xor
subb
cmc
xchg
scas
andb
stos
mov
inc
in
push
roll
imul
cwtl
into
push
or
mov
out
out
pusha
dec
cld
movsb
repnz
ret
or
add
clc
and
jl
lret
fucom
fsubrl
xchg
add
clc
in
cmpb
cmc
xchg
push
xor
add
sub
outsb
and
add
or
hlt
pop
cld
xor
hlt
mov
pop
out
xor
rcr
fstps
sbb
dec
fmuls
fisubrs
jnp
in
push
push
jmp
mov
into
jmp
in
or
fcmovu
jb
aad
mov
les
shll
into
mov
les
dec
or
fisubrs
std
xor
inc
hlt
jns
in
fildl
jmp
mov
rorl
icebp
outsb
inc
xor
popa
sti
push
add
xchg
jl
or
and
or
sti
aam
add
in
cmp
call
adc
test
cld
shll
pop
add
sub
push
sarl
lret
push
lret
leave
clc
scas
add
icebp
mov
std
push
cmp
add
orb
decl
cmc
notb
adc
cmp
mov
adc
push
xor
fstps
rclb
fdivrp
add
pop
add
jbe
notb
mov
cli
sbb
in
icebp
mov
xor
inc
jecxz
or
hlt
call
ret
in
test
push
pop
xchg
ret
incl
jl
push
cld
adc
or
dec
mov
test
cmp
sahf
mov
pop
hlt
lds
jg
sub
mov
mov
dec
dec
xor
xchg
adc
mov
add
and
push
add
xor
jg
sbb
sti
add
icebp
aas
hlt
push
aas
or
jae,pt
hlt
outsb
out
cli
mov
mov
inc
sub
daa
xlat
je
mull
add
jae
xchg
fiadds
mov
cs
imul
add
add
popa
aad
lock
add
mov
add
loop
xor
mov
adcb
inc
jb
icebp
shl
ret
add
fldt
icebp
xor
pop
fiaddl
in
testb
push
mov
push
mov
mov
gs
idivl
iret
insb
sub
mov
inc
icebp
pushl
icebp
mov
mov
mov
sub
aas
icebp
xorl
dec
add
adc
xor
insl
cmp
jmp
dec
mov
es
testl
add
cmp
sti
jnp
loope
inc
add
hlt
dec
pusha
icebp
test
inc
push
jns
clc
push
std
or
divl
cmpsl
sbb
ss
clc
aas
jmp
lock
xchg
add
imull
cli
xchg
orb
testl
jb
or
xor
adc
mov
ja
add
enter
lods
adc
lods
inc
add
fscale
jp
pushf
cld
test
stc
and
add
mov
mov
ljmp
js
and
lds
cmp
add
insl
jecxz
lods
cmp
cltd
jmp
push
mov
testb
cmp
jp
repnz
insl
lods
adc
inc
add
and
dec
mov
add
jbe
fcmovnu
jp
dec
into
shll
loop
data16
inc
add
push
lahf
push
call
sti
daa
aam
ret
adcb
add
add
pop
mov
push
mov
fdivrp
jnp
cmp
jae
xchg
jg
lret
out
xchg
xor
push
mov
sbb
pop
loopne
cli
inc
lret
mov
dec
lret
push
jns
push
dec
and
testb
or
nop
sti
sar
add
call
out
pop
stc
cmp
push
rolb
fdivrl
add
pop
loope
mov
call
xor
add
ss
les
mov
add
xor
xor
in
jnp
mov
out
hlt
mov
stos
fbstp
lret
ja
jmp
add
inc
jmp
jnp
jp
gs
push
in
imul
jnp
lcall
sub
jns
inc
lea
out
adc
lock
in
jl
xorl
fcoml
cs
adc
dec
pop
sti
xchg
dec
cmpsb
mov
inc
in
add
and
jge
push
xor
sbbb
sti
cld
shrl
jnp
xchg
pop
testl
je
popf
xchg
pop
mov
mov
add
mov
add
dec
jb
fidivrs
adc
lret
mov
cwtl
test
fidivl
or
jp
lret
xor
ret
add
daa
add
divl
sbb
pushl
lea
fldcw
fsubs
lea
add
mov
add
push
jnp
xor
mov
jne
jle
enter
push
fsts
sbb
mov
jg
mov
mov
mov
xor
adc
inc
lods
inc
cli
jle
mov
add
outsb
mov
xor
test
into
cli
inc
popa
dec
mov
out
lret
addl
sbb
cli
inc
cmp
add
mov
sub
call
inc
iret
dec
daa
push
adc
hlt
lods
cmp
sub
iret
cli
jno
mov
xlat
pop
shl
dec
aaa
pop
or
lods
jg
push
sahf
dec
xor
cmp
mov
add
jnp
add
scas
xlat
sar
ret
fwait
jle
xchg
mov
inc
repz
repnz
jmp
dec
loopne
ljmp
xchg
sbb
push
cmc
xor
cs
sub
test
div
test
mov
add
jp
in
add
xchg
mov
push
pop
pop
rcll
cmp
ror
mov
dec
inc
lods
aas
hlt
add
cli
mov
ja
ret
cli
jmp
add
out
rolb
jb
mov
call
and
mov
js
les
jae
push
pop
xchg
les
in
cmp
lds
call
lcall
rcr
jne
enter
cwtl
or
mov
in
lret
rcpps
stos
fcoms
and
into
loope
into
loop
add
cmc
push
xor
sbb
call
pop
pop
cwtl
add
and
incb
int
clc
or
add
loop
call
push
inc
aam
lock
xlat
pushl
roll
sbbb
mov
push
pop
xchg
pop
hlt
push
leave
add
add
pop
lea
push
ljmp
or
or
xor
call
repz
cmpsl
mov
or
mov
mov
jge
cmc
stos
je
xchg
std
out
xor
cli
outsl
mov
add
pop
clc
sub
add
icebp
xchg
sub
jae
sub
add
dec
stos
lea
cs
or
repnz
hlt
sub
or
push
jne
sub
aad
xchg
xchg
flds
enter
jb
jae
add
inc
sbb
addr16
hlt
add
pop
mov
out
movsb
mov
iret
jb
in
fsubs
out
jae
clc
sbbl
adc
sub
cltd
adc
addb
add
add
pop
roll
subl
test
mov
mov
bound
ret
adc
call
add
test
addb
std
or
mov
push
testl
mov
lods
mov
jmp
sub
out
in
add
insl
add
cmp
bound
add
idivl
lock
sub
mov
lods
ret
test
aad
add
sub
xchg
dec
call
dec
inc
add
pop
mov
ljmp
or
sub
xchg
xchg
ja
add
rclb
mov
cmp
cld
mov
xor
dec
mov
add
adc
cmpl
out
jmp
mov
aaa
jge
mov
cmc
pop
pop
jnp
push
xchg
fadds
add
aas
or
enter
test
je
add
faddl
add
inc
push
ret
dec
pop
ret
adc
push
push
testl
xorb
mulb
es
sti
adcl
xor
add
out
jo
cli
mov
jnp
outsl
clc
and
test
in
mov
xor
int3
cli
push
sub
cmc
sar
cli
or
cmp
xor
stc
and
out
xchg
cld
inc
out
cs
sub
cmp
and
dec
stos
sahf
or
push
daa
push
inc
cmp
add
fstpt
jns
push
add
outsb
fisubl
sub
mov
das
stc
stc
stos
adc
xlat
mov
outsb
lcall
add
imull
lret
into
pop
push
mov
push
push
lret
or
outsl
dec
push
sar
int
pop
add
lret
in
push
or
sbb
icebp
ret
adc
add
xchg
shl
dec
xor
lret
movsl
xchg
std
mov
jg
mov
in
add
int3
xor
push
push
lret
sbb
pop
dec
sar
add
ljmp
jae
xor
inc
push
data16
jb
and
mov
push
adc
clc
cmp
cmc
je
je
ds
cld
sub
aaa
mov
add
inc
cld
mov
add
push
push
bound
mov
mov
mov
std
stos
sub
ret
int
lods
xchg
push
ds
add
aaa
mov
pop
lahf
mov
orl
cmpl
pop
dec
add
mov
lcall
mov
push
test
or
mov
cmp
fldl
xor
cmpl
add
mov
hlt
xorb
ss
add
lds
call
fisttpll
add
rclb
jg
adc
mov
stc
dec
or
cmp
xchg
aam
loop
mov
decl
adc
mov
push
push
add
push
mov
fdivr
xor
jbe
cmp
dec
int3
mov
sbb
add
xchg
and
sti
inc
lock
imul
adc
add
and
cld
jg
jle
jae
inc
cmpsl
cmpsb
xchg
ss
cli
jo
dec
pop
outsl
cltd
cli
xchg
mov
mov
mov
repnz
mov
jl
in
es
ja
aaa
add
pop
cli
jnp
and
add
in
call
into
jne
sub
push
mov
inc
mov
sub
sub
hlt
stos
lahf
test
loope
add
push
outsb
int3
jb
sbb
fwait
in
add
lea
add
nop
out
mov
in
xor
adc
add
mov
mov
push
jnp
add
add
sub
inc
push
jo
clc
mov
aaa
out
jmp
add
hlt
push
outsb
fsubrs
ljmp
mov
jg
icebp
sub
mov
into
mov
leave
stos
mov
push
push
das
mov
mov
testl
cli
insl
mov
adc
stos
out
mov
xor
dec
filds
mov
jg
arpl
sbb
jb
push
xchg
add
lcall
mov
pushl
sbb
push
add
adc
jmp
call
ss
lret
clc
fbstp
jae
in
or
pop
add
loop
dec
fisubrs
inc
add
div
add
or
and
scas
jp
imul
cmp
xchg
div
add
xorl
inc
push
push
das
outsb
and
inc
and
jge
adc
inc
add
popa
adc
pusha
mov
cmc
adc
pop
popf
hlt
jmp
mov
add
lock
cmp
and
cmpsl
jmp
add
ljmp
inc
ret
lods
repz
adc
aaa
mov
idiv
sub
mov
inc
mov
sub
mov
data16
sub
gs
mov
lods
ja
clc
add
aaa
imull
mov
inc
or
push
push
dec
out
sbb
xorl
cli
mov
ret
or
cmpsb
cli
adc
rolb
add
add
or
xlat
rcll
jbe
int
xchg
jmp
call
lcall
mov
jp
outsb
push
cld
andl
rorl
fstl
cmp
sbb
add
inc
hlt
xchg
ret
xchg
aas
aas
mov
testl
imull
pop
and
xor
add
sub
loopne
movsb
or
push
inc
cmp
sbb
sbb
fnstsw
clc
mov
ret
loope
dec
add
adc
enter
mov
adc
or
out
dec
or
stc
jae
sarl
push
ja
mov
out
cmp
imul
mov
add
add
add
gs
lret
es
mov
call
in
inc
dec
hlt
mov
sub
jg
dec
adcb
cli
add
orb
dec
in
call
sbb
push
lea
push
notl
pop
lret
paddd
push
push
bound
loope
add
or
fld
cmc
pushl
ret
inc
and
repz
adc
dec
decl
or
push
adc
dec
mov
push
mov
jnp
add
addl
hlt
es
out
lahf
pushl
aaa
sub
stos
pusha
lock
incb
xor
jmp
jns
sar
jmp
add
xor
xor
movsb
pushf
stos
xor
and
add
sub
dec
inc
lret
adc
add
rorl
decl
fwait
decb
imul
stc
es
pop
pop
sub
addb
add
mulb
add
rorb
testl
inc
inc
jmp
sbb
dec
cmp
test
mov
sub
in
movsl
add
push
add
add
test
fsts
add
fwait
mov
inc
jmp
repz
hlt
subl
ret
inc
jl
dec
out
jmp
lea
idiv
pop
jns
call
repnz
add
add
add
jge
in
mov
add
cmp
sbb
add
inc
in
stos
into
push
out
addl
cmpsl
adc
flds
or
repz
outsb
loop
out
push
and
fldenvs
cltd
fs
and
cmpl
lods
add
inc
or
inc
adc
add
or
mov
bound
stc
push
stos
es
xchg
ret
adc
sbb
add
adc
push
arpl
not
in
push
lea
jnp
dec
jmp
bound
decl
inc
push
not
mov
mov
dec
fcmovbe
pusha
mov
jns
fld1
mov
call
bound
popa
sbb
inc
add
jl
xor
mov
jecxz
dec
inc
adc
push
not
push
mov
pop
mov
fwait
push
ret
mov
or
hlt
mov
outsl
ficoms
xchg
fists
inc
hlt
fcoml
xor
dec
adc
fldl
push
sbbl
inc
lods
mov
das
ja
sbb
xor
mov
add
jae
add
adc
orb
xor
sti
movl
mov
or
mov
out
inc
or
xor
dec
sti
cmpsl
cmp
je
testl
jmp
faddp
aad
and
mov
sbb
cmc
test
lods
rorl
add
push
pop
mov
adc
add
mov
out
add
push
lods
pop
lds
jns
mov
jns
add
jl
pop
lods
out
cli
stos
fistl
sub
subb
jns
pop
or
lods
out
cli
jmp
xor
jecxz
ljmp
and
and
jmp
add
cmp
inc
add
or
adc
out
add
add
test
sub
stos
sub
jmp
push
push
xchg
stc
xor
sbb
pop
push
cwtl
out
and
mov
xchg
jmp
mov
add
jae
pushl
sbb
jmp
loope
jmpw
add
add
adc
or
add
enter
push
sub
pop
aaa
add
adc
or
hlt
or
pop
pop
jecxz
into
std
testb
pop
jne
ljmp
cmp
or
xchg
mov
inc
add
dec
push
call
test
fildl
inc
or
int3
cmp
fcoml
adc
add
jnp
mov
or
mov
adc
hlt
es
test
or
add
pop
dec
xchg
mov
loopne
stos
inc
arpl
xorl
sub
lret
std
mov
push
daa
aaa
rolb
dec
mov
mov
add
add
push
add
mov
fwait
dec
dec
cmpsl
fisubrl
cld
sti
leave
mov
push
fldt
add
lcall
shll
pop
sti
add
incb
add
sbb
inc
into
jmp
sarb
loop
sub
jmp
shll
add
add
stos
sti
cmc
in
pop
shlb
or
mov
add
add
cmpsb
or
dec
pop
cmpsl
movsb
jge
or
xor
pop
mov
fld
mov
add
add
aas
sub
mov
add
call
sbb
xchg
test
cltd
mov
aaa
add
add
stc
cmpsb
push
out
outsb
test
cltd
addl
add
add
mov
jle
in
aaa
push
je
mov
adc
and
xor
xchg
xchg
scas
cli
jle
push
out
subb
lcall
inc
push
dec
mov
inc
dec
dec
xchg
scas
mov
xchg
testl
stos
jecxz
push
xchg
add
sub
add
pop
incl
mov
vxorpd
lret
or
addr16
lea
sbb
decl
decl
push
add
lea
fwait
lcall
je
sub
mov
gs
dec
pop
sbb
outsb
dec
call
cmpsb
hlt
or
xchg
mov
lcall
ret
pusha
cmp
mov
sbb
xchg
shlb
and
push
pop
mov
addr16
aas
add
push
scas
jmp
sub
das
push
push
lods
mov
lock
int3
lcall
add
jae
inc
add
ds
ljmp
cmpsb
and
mov
xor
in
jns
mov
dec
or
adc
lret
movsb
dec
jnp
add
pop
mov
pushf
repnz
hlt
dec
ljmp
fsubrl
push
jg
push
ret
outsb
add
roll
xor
movsl
shrb
inc
popf
jns
into
movsl
mov
cs
sahf
lret
call
mov
js
add
movsl
pop
pop
lahf
in
rolb
rorl
mov
scas
sub
out
add
add
loopne
xor
jns
push
xchg
add
jnp
popa
popa
addb
jo
pop
and
lock
jnp
pushf
inc
sub
movsl
insl
sub
ja
lods
sbb
mov
in
ret
add
mov
lahf
jg
add
adc
jmp
cli
jmp
add
xchg
bound
pop
movl
or
movsb
cli
jmp
cmpsl
lahf
jle
dec
call
and
sarb
and
sbb
mov
je
adc
jnp
psrlw
insl
mov
addr16
fs
sbb
jne
cli
decl
test
das
push
dec
and
lods
test
and
cmp
add
cmc
xor
incl
aas
pop
mov
mov
call
and
sbb
or
or
ret
fs
add
fldcw
cmp
cmp
cmp
push
cmc
xor
and
and
and
into
or
ret
cmp
push
test
push
cmc
negb
push
adc
lea
add
jge
loop
sbb
lods
cld
add
mov
icebp
repz
add
inc
and
pop
sbb
pop
test
call
ret
sbb
or
iret
lcall
out
add
or
pushl
mov
or
sti
loope
pop
inc
hlt
xor
and
ret
inc
sti
jno
pushf
dec
lock
in
testl
cli
dec
call
add
add
lahf
call
add
sti
xor
dec
and
add
imul
movsb
cs
pop
cwtl
hlt
test
adc
cmp
stc
in
stc
sub
add
test
pop
xor
pop
inc
adc
mov
add
repnz
lds
jns
or
call
hlt
leave
and
jmp
xor
add
hlt
mov
jmp
cmpsb
enter
sbb
call
or
or
pushf
or
jns
jb
call
cmp
out
mov
and
sti
dec
inc
fidivrl
cmpsb
pop
sti
aaa
movsb
xlat
mov
pushf
sti
push
add
or
dec
add
int3
cli
push
inc
mov
cli
add
in
in
pop
leave
out
pop
xlat
mov
shl
out
mov
pusha
addb
cmpsb
cmp
divb
out
mov
xchg
or
xchg
pop
pop
jae
xor
add
outsb
les
ret
and
enter
call
jmp
sbb
call
test
or
lea
add
rolb
inc
int
mov
mov
lds
add
dec
and
int3
cmp
mov
je
cmpl
lcall
call
cmp
xlat
pop
mov
add
push
xor
stos
inc
push
in
push
decl
xchg
jo
dec
cld
cmpb
add
add
xor
dec
test
std
scas
cmc
ljmp
outsl
push
in
dec
pop
adc
hlt
and
outsb
add
movsl
add
hlt
sub
xchg
rorb
ja
jl
adc
add
hlt
fisubrl
and
inc
sbb
inc
or
je
inc
add
add
fisttpll
incl
gs
out
mov
hlt
add
inc
test
and
movsl
dec
and
js
call
sbb
mov
lods
mov
lods
loopne
roll
mov
jp
mov
lods
into
mov
std
ja
call
jle
sub
lods
or
adc
add
add
pusha
lods
add
sahf
push
push
jnp
insl
ds
popf
ljmp
pop
push
or
jb
cmc
ret
or
jmp
mov
stc
cli
not
test
adc
movsl
xchg
jecxz
lcall
mov
inc
mov
stc
inc
jb
or
cli
ss
inc
je
popl
add
add
addl
mov
lock
ret
push
sub
pop
xchg
cmp
mov
shlb
mov
stos
es
push
sub
mov
sbb
jns
dec
outsl
insl
add
push
jb
test
call
les
fimuls
add
sbb
outsb
cmc
mov
dec
mov
inc
add
loopne
je
fadds
idiv
stc
mov
inc
add
stos
fwait
loop
jl
cmc
test
jl
fwait
repz
dec
pop
jecxz
es
and
ja
lea
sbb
dec
inc
insb
add
sub
and
adc
pop
jae
fisttps
imul
out
fsubl
rorb
pop
movsl
push
add
jns
enter
test
xchg
inc
push
sbb
test
jno
das
add
in
cltd
pop
xor
push
lods
cli
pusha
or
adc
jo
rep
xlat
fucomip
lods
xlat
sbb
pop
hlt
jl
push
jns
imull
mov
add
clc
jo
mov
lods
roll
add
add
push
loope
jg
jmp
dec
int3
mov
aaa
inc
sbb
add
sbb
pushf
mov
xor
std
jp
test
add
mov
sbb
call
fcomip
adc
push
call
or
push
jns
fstps
pop
popf
jmp
rorl
dec
sbb
mov
fwait
add
add
add
lahf
add
out
lods
pop
mov
sahf
xchg
dec
push
jg
testl
jmp
jmp
inc
dec
ret
pushf
adc
ret
xor
or
cmc
pusha
mov
lock
push
bound
or
movsb
lods
pusha
jp
sahf
xchg
cwtl
out
mov
add
add
or
icebp
mov
mov
rorb
add
jns
cli
add
les
stos
ljmp
push
cmpsl
inc
push
fldl
dec
incl
jge
stos
mull
cwtl
xor
cmp
jae
addl
mov
les
adcl
xor
sbb
sub
lods
orb
cmc
out
shrb
in
cld
mov
sbb
fldl
add
inc
rcll
pop
mov
or
add
push
xchg
sub
das
iret
jne
je
scas
jnp
mov
add
repz
add
lods
push
sub
add
mov
or
add
lods
push
adc
enter
mov
and
add
lods
dec
lea
jne
sti
inc
and
add
pop
dec
dec
mov
jb
hlt
inc
adc
adc
icebp
xor
ljmp
add
test
insl
inc
adc
jp
gs
mov
call
add
xor
or
push
add
xor
pmuludq
sub
adc
ja
push
pop
push
outsl
lock
mov
insb
out
pop
aas
inc
xor
sub
lds
add
xchg
jns
mov
icebp
dec
pop
scas
stc
mov
mov
scas
mov
aas
sbb
push
movups
test
jge
push
jmp
sub
fdivs
add
cli
aas
add
fsub
mov
pop
adc
inc
push
push
dec
test
cli
aam
add
jae
cmp
pop
nop
jle
popf
dec
dec
mov
sub
dec
mov
orps
xchg
adc
sahf
repnz
adc
lock
je
stos
sbb
xchg
test
inc
lcall
jo
je
push
adc
pop
add
lcall
aaa
add
cmc
adc
jp
adc
lods
dec
add
mov
outsb
and
outsb
inc
int
jae
add
test
pop
or
ret
sub
lret
cmc
adc
push
ds
ret
dec
mov
out
inc
jmp
into
out
test
mov
dec
addl
jmp
fisttpll
test
sub
orl
addr16
or
out
or
or
leave
fisttpll
xchg
cli
jmp
mov
inc
jl
icebp
inc
je
idivw
push
pop
jmp
sti
jmp
mov
jae
sar
cmc
sbb
stos
xor
mov
xor
es
add
push
popf
cli
outsl
mov
stc
add
test
xor
jmp
scas
add
mov
bswap
pop
or
push
pop
cmp
les
hlt
sbb
push
ret
dec
stos
and
or
add
or
mov
hlt
lret
mov
sbb
sbb
cmp
pop
out
lret
cmp
lahf
mov
add
ret
add
add
xor
jle
or
icebp
push
hlt
popf
test
jae
gs
lret
and
fbstp
loope
mov
dec
cltd
xchg
mov
pop
into
or
xor
shl
add
test
jo
and
mov
dec
shll
cli
cld
dec
cmc
aas
jmp
add
add
sti
mov
xchg
clc
imul
add
ret
add
movsb
popl
jl
daa
sbb
das
cmc
aas
jmp
ljmp
scas
mov
add
inc
mov
adcl
push
aaa
mov
enter
flds
into
or
add
jnp
adc
push
pop
into
fiaddl
mov
add
fcmovnu
mov
addl
int3
repz
jnp
cld
inc
mov
sbb
xor
push
add
xchg
dec
add
push
outsb
loop
incl
jnp
cmp
inc
mov
gs
and
rorb
into
imull
xor
cld
gs
push
popf
xchg
testl
lahf
jle
scas
aad
lock
mov
mov
fildl
push
mov
inc
or
mov
pop
xchg
xchg
cmpsb
cmpsb
rcl
lcall
fisttpl
add
and
jae
out
test
pop
out
cmp
add
add
sahf
roll
cmp
add
jl
fidivl
fiaddl
mov
xchg
jge
ds
add
push
loopne
jmp
add
fs
hlt
arpl
addr16
ret
and
inc
hlt
arpl
xor
jmp
add
popa
call
jnp
call
enter
hlt
popa
enter
dec
addl
jmp
add
roll
popa
sub
mov
inc
jmp
add
inc
hlt
popa
dec
enter
mov
hlt
aas
jmp
lock
hlt
mov
lahf
imul
aas
jmp
clc
arpl
fdivl
iret
incl
add
aas
jmp
mull
cmc
aaa
add
incl
push
mov
cmp
aaa
add
incl
clc
aas
jmp
mull
aad
add
incl
clc
aas
jmp
clc
arpl
cld
mov
lahf
or
into
ljmp
inc
pop
and
lds
or
mov
add
dec
mov
mov
mov
and
lds
mov
mov
insb
mov
inc
int
mov
sahf
or
mov
sub
push
inc
popf
and
mov
mov
cmp
push
inc
popf
and
mov
mov
add
jl
adc
add
xchg
sahf
sarb
jl
adc
add
push
mov
xchg
adc
add
push
pop
sarb
jl
adc
sahf
popa
dec
mov
scas
add
jl
adc
popa
outsl
mov
mov
push
sbb
add
add
cmp
push
xor
popa
mov
scas
add
mov
addr16
inc
jmp
add
mov
inc
hlt
addr16
adc
jmp
add
jo
inc
hlt
addr16
ljmp
sub
rolb
xchg
xor
mov
cmp
mov
inc
hlt
sbb
xchg
add
add
add
sbb
xchg
lretw
ret
movsl
add
inc
jmp
inc
hlt
mov
sub
ja
add
enter
cli
mov
in
arpl
add
ds
pop
add
aas
cmpsb
mov
call
jae
xchg
cmp
xor
xor
xor
call
lock
add
jge
add
sub
pushf
sbb
jae
xor
push
loopne
jmp
mov
push
fistl
adc
addl
xchg
sub
xor
mov
leave
add
cli
jae
insb
outsb
and
notb
ss
sub
mov
inc
add
add
leave
pop
sbb
icebp
xchg
cmc
and
jmp
ja
sbbl
cmp
jecxz
add
addr16
add
add
adc
pop
mov
add
pop
hlt
incl
fistpl
add
add
inc
popf
mov
cmp
testl
hlt
sbb
ljmp
mov
push
ret
mov
jnp
cmpsb
add
clc
repnz
or
fildl
out
sbb
push
fildl
aaa
ss
mov
hlt
cltd
movsl
push
ja
add
ret
push
add
fildl
add
fcom
rolb
fs
into
pop
jle
cwtl
movups
sahf
cvttps2pi
sahf
std
out
pop
sbb
stos
stos
movsl
add
ret
mov
sbb
incl
sub
test
in
mov
pop
add
fidivl
jmp
mov
mov
dec
add
add
jge
xchg
and
sbb
ljmp
add
add
mov
add
stos
cmc
jl
popl
leave
inc
jmp
xchg
or
pop
inc
mov
xchg
hlt
cltd
stc
cmpsb
mov
add
mull
lahf
sbb
mov
divl
mov
addr16
jmp
ss
ds
mov
jg
in
mov
add
test
xor
sub
xor
cld
add
clc
aas
jmp
mov
add
sahf
je
popa
mov
int3
arpl
add
mov
mov
push
xchg
aad
sahf
add
inc
int
jne
mov
add
pop
add
test
or
lea
add
or
cmc
test
hlt
add
inc
pop
add
add
push
dec
cmp
dec
xlat
notb
adc
out
fimull
add
push
cs
xor
or
add
outsl
adc
das
inc
add
and
inc
or
fwait
cmc
lcall
outsb
or
hlt
scas
inc
stc
aad
ds
insb
sub
jmp
fsubrs
scas
decb
dec
cmpb
add
or
sbb
cmpl
dec
pusha
add
mov
add
inc
das
add
jmp
add
das
add
dec
cmp
xor
cwtl
inc
add
sahf
mov
and
dec
cld
mov
add
stos
inc
out
fistps
das
add
sub
add
add
sbb
add
add
and
or
dec
jmp
iret
call
jl
imul
mov
es
out
icebp
call
xor
mov
cmpsb
leave
fnstcw
sbb
xlat
je
sub
subl
stos
dec
das
test
xchg
and
mov
cmpb
add
add
add
xor
sbb
popa
xchg
add
aad
xor
mov
xor
fisubrl
iret
adc
scas
and
adc
add
mov
cmp
fsubrl
testl
fsubrl
arpl
push
sub
ljmp
push
loopne
daa
add
mov
mov
mov
test
sbb
cli
insl
cmp
sbb
mov
testl
test
clc
push
pop
sbb
jmp
inc
adc
mov
add
mov
iret
pop
mov
pop
xchg
jae
ljmp
les
add
rorl
popf
xor
add
lea
sub
movsb
push
push
addb
push
add
aas
out
xchg
cmc
adc
rolb
and
adc
add
add
pushf
inc
clc
or
add
add
and
jnp
add
enter
enter
pop
push
movsl
ret
push
jg
test
adc
shl
outsl
sub
int3
push
cli
lret
iret
xor
jbe
icebp
hlt
insl
decb
cmp
das
data16
lock
push
daa
nop
adc
jge
add
add
dec
jns
mov
popa
adc
push
sbb
mov
cli
loope
hlt
aas
hlt
lock
or
add
hlt
push
cmpl
mov
sbb
mov
punpckhdq
out
test
xchg
imul
add
or
sti
jp
or
add
add
testl
hlt
xorl
and
sub
int
call
insl
jmp
aaa
cmp
jno
sbb
jg
in
lds
cmp
and
arpl
xor
cmpsb
sbbb
adc
add
dec
dec
insl
lcall
pop
jae
add
jp
stc
in
add
in
je
sarl
out
xchg
mov
jno
nop
inc
insl
daa
jp
gs
sbb
cmpb
sarb
bound
add
xchg
inc
cmp
jns
sub
jne
add
add
jmp
pop
aad
insb
mov
or
inc
jmp
add
enter
andl
push
out
add
bound
arpl
push
call
fs
dec
sti
out
into
push
sarl
sarb
jbe
cli
push
add
xor
mov
pushf
fs
lcall
push
mov
ljmp
xor
jmp
or
ljmp
add
add
cmc
call
sti
cmp
sbb
push
pop
aaa
push
call
xor
jmp
lcall
cld
hlt
inc
xor
dec
pop
ja
xor
inc
or
mov
loop
adc
or
stos
xor
incb
inc
loope
cli
jno
add
or
and
fistl
and
clc
lds
sti
ret
lret
rolb
sahf
jns
cmpsl
xchg
xor
insb
adc
xor
imul
add
rcrb
or
inc
adc
push
add
sub
or
sub
sub
imul
lods
sti
jge
fldcw
or
or
cmp
sub
push
pop
std
ret
lret
outsl
out
add
sub
cmp
jmp
les
mov
mov
mov
and
out
xlat
pop
cmp
adc
aaa
sub
jnp
icebp
xor
mov
shl
ffreep
fdiv
jmp
lret
ja
xchg
ret
sub
cmp
lds
int
and
jnp
fsub
cltd
outsb
jle
insl
aaa
idivl
daa
lret
inc
out
ja
pop
push
add
ss
sti
sub
mov
ljmp
mov
cmp
out
inc
ret
lock
and
push
push
outsb
out
inc
es
sub
mov
stos
lret
push
jb
addl
inc
xor
add
lret
jge
push
or
xor
or
movsb
outsl
int3
jle
add
jne
out
inc
push
pop
xchg
jmp
mov
push
add
dec
ljmp
sbb
cwtl
push
add
rorb
sub
cli
jne
stc
dec
or
cmp
sub
clc
ljmp
mov
or
cmp
nop
subl
out
cmp
add
mov
dec
sbb
mov
mov
sub
ret
xchg
cmp
incb
mov
pushf
testl
xor
movsl
push
inc
xor
hlt
imul
pop
mov
cli
mov
mov
fildl
ret
mov
xchg
inc
repz
push
jg
jge
add
imul
inc
adc
push
jns
cmp
iret
cs
inc
xchg
pop
add
jp
and
aad
out
mov
hlt
mov
xor
call
mov
insl
les
dec
mov
sub
ljmp
cmp
pop
adc
mov
das
or
jbe
sbb
ret
xor
jae
addr16
out
or
add
add
xor
dec
xchg
ja
mov
and
mov
icebp
loope
xchg
insl
test
mov
in
imull
push
leave
or
lcall
aaa
add
ret
loope
fs
pushf
xchg
sbb
jmp
and
gs
add
sar
hlt
xor
jmp
jb
lods
push
icebp
mov
in
sbb
mov
mov
dec
aaa
sarl
leave
push
aaa
add
adc
scas
sti
jle
call
clc
push
sahf
icebp
pop
pop
lret
add
movsb
inc
add
mov
add
mov
mov
dec
rorb
push
idiv
add
daa
dec
push
addr16
js
or
pop
dec
rorb
cmp
jmp
cmp
dec
pop
lcall
mov
mov
sti
dec
adcl
mov
xchg
xor
and
insb
add
jno
add
xchg
or
hlt
push
les
decl
xor
jne
cli
cmp
bound
adc
test
mov
ds
jno
movsb
fwait
xorl
sbbb
test
inc
sbb
pop
jmp
loope
cmp
repz
ljmp
mov
lods
hlt
popa
xor
and
mov
push
ds
aas
xor
push
add
cmpb
sub
inc
dec
cmpsb
cmpl
std
sarl
add
add
push
rolb
jecxz
add
xchg
out
inc
lcall
push
cwtl
add
sbb
int3
aad
test
je
fwait
icebp
fnstsw
test
dec
add
add
inc
cmp
outsb
mov
mov
add
jnp
pop
je
jbe
aad
fwait
in
lods
loope
flds
inc
add
add
add
lock
fs
jae
in
stos
push
and
push
mov
jo
fwait
add
flds
inc
je
or
andb
int3
mov
pop
idivl
mov
aas
clc
das
sar
ljmp
mov
xchg
add
jmp
mov
add
push
add
jge
mov
mov
jp
aas
pop
outsb
adc
fadd
jmp
jp
das
mov
mov
andl
aam
test
mov
xor
mov
addl
jp
dec
pop
iret
addl
decl
rol
inc
int
inc
adc
outsb
add
int
add
test
popa
decl
mov
or
popf
addl
int
stc
dec
fcmove
jp
inc
push
add
sbbb
add
dec
lods
dec
add
notl
jle
add
pop
push
jle
adcb
test
std
dec
pop
sbb
adc
or
add
loopne
jae
sub
add
hlt
pop
cmpl
out
cmp
pop
ljmp
outsb
in
lcall
icebp
mov
hlt
pop
jg
call
sub
add
pop
sub
sbbl
out
setle
add
hlt
out
jae
and
pop
rorl
push
bound
sbb
and
cmp
cmp
ds
push
xor
cmp
cmp
andl
add
add
adc
dec
add
add
or
inc
lea
add
mov
hlt
xchg
add
stc
in
xor
pop
out
popa
jge
adc
add
gs
push
add
inc
pop
add
jae
clc
xor
mov
xchg
add
add
cmp
xchg
clc
xchg
adc
add
adc
lock
testl
lds
add
cmp
add
mov
dec
mov
fcoms
lock
int
aad
add
mov
sbb
mov
subl
mov
dec
mov
jmp
or
add
pop
es
testl
fldl
mov
rorb
mov
mov
jbe
fidivrs
jae
jbe
and
inc
add
xchg
loop
inc
out
cmc
pop
xchg
fcompl
xchg
add
add
mov
sbb
adc
sub
mov
incl
int
ljmp
out
xor
roll
push
orl
adc
push
adc
loop
lcall
dec
push
decl
adc
inc
cli
imul
cli
test
inc
loop
inc
out
hlt
push
inc
mov
outsl
push
adc
inc
push
mov
hlt
pop
push
mov
mov
add
stos
out
jl
cli
jns
testl
and
inc
out
imul
hlt
out
and
repz
and
adc
sub
adc
pop
sar
xchg
sbb
add
das
and
ja
pop
dec
ret
mull
subb
decb
jp
std
push
fidivrl
repz
add
add
jl
cld
fsts
add
add
insb
arpl
and
hlt
add
iret
xlat
sbb
pop
mov
pop
jl
les
scas
add
test
pop
rcll
pop
xor
insl
inc
cmp
adc
es
fisttpl
scas
adc
adc
ljmp
add
mov
add
call
jl
cld
adc
add
adc
js
cld
fs
insb
call
loope
adc
clc
jge
add
add
add
add
fdivrl
testl
scas
in
adc
clc
jmp
in
insl
incl
xchg
mov
adc
incb
repnz
mov
push
add
test
incl
add
lock
je
daa
sbb
out
outsl
adc
in
ljmp
incb
xor
je
fdivp
and
sub
outsb
and
pop
cli
aas
dec
pop
dec
jmp
jg
inc
sbb
and
add
xor
jmp
push
dec
jmp
ja
inc
or
push
fs
mov
push
add
out
jae
push
call
add
sbb
mov
shll
inc
mov
pop
mov
push
cli
inc
decb
jmp
pop
push
lea
mov
mov
call
jmp
out
xor
hlt
das
ret
jno
adc
ret
dec
scas
or
out
faddl
hlt
sub
icebp
stc
sti
push
add
add
add
pop
ljmp
filds
sbb
add
xor
shll
and
sub
std
pop
add
sub
jns
cwtl
cli
dec
pusha
ja
in
or
cmp
lcall
shr
or
or
xor
or
sub
pop
lcall
imul
add
inc
test
testl
add
test
and
lds
add
push
and
repz
subb
sub
call
adc
mov
js
std
nop
scas
call
sbb
fcomip
clc
ror
bnd
cld
aam
ret
lret
jmp
adc
lahf
outsl
jmp
into
call
pop
and
inc
cmp
add
jg
icebp
loopne
leave
and
adc
add
lock
xor
xchg
out
pop
push
fsubrl
stc
int3
lock
pop
clc
push
push
add
faddl
adc
dec
leave
mov
int
add
mov
push
or
testl
hlt
pop
dec
ds
or
pop
andl
clc
cli
hlt
repz
je
add
adc
mov
pop
mov
outsb
pop
icebp
in
dec
add
pushl
xor
out
je
sub
je
out
jae
cmp
out
inc
out
cmc
jmp
out
jae
and
adc
sub
inc
or
add
and
add
arpl
add
jnp
adc
and
insb
add
add
test
and
inc
fnsave
dec
testb
jne
idiv
and
or
enter
test
pop
jno
cld
mov
push
loopne
pop
and
or
and
stc
sti
push
ds
push
int3
xchg
imul
dec
cmp
add
fistpll
jae
inc
das
and
fwait
je
outsb
ljmp
jae
push
add
inc
je
pop
dec
ljmp
sub
sti
mov
adc
dec
mov
adc
sub
fidivl
pop
cli
push
jg
or
push
push
hlt
pop
jp
inc
push
aaa
xor
and
outsb
movl
stc
dec
jne
pop
fdivs
cmp
jmp
xor
sti
gs
add
call
add
sarl
clc
and
rorl
mov
clc
je
dec
nop
int
hlt
subb
add
sbb
inc
shr
jmp
pop
adc
mov
je
cld
sarb
or
push
out
fcmovu
int
je
in
ret
fcmovnb
xor
add
jmp
sahf
enter
nop
sti
pop
fldenv
xorl
sbb
xor
add
adc
cld
cli
mov
insb
jp
call
fcoms
es
clc
push
push
dec
adc
pushf
lcall
mov
jmp
sub
fisubrl
sbb
or
jmp
clc
sbb
xor
pop
je
jb
pop
scas
in
psubsb
push
pop
cli
xchg
add
icebp
inc
fsts
aaa
add
or
jp
add
mov
xor
xor
rorb
ret
cmp
dec
pop
jne
jne
lret
inc
pop
lret
popf
cld
aas
add
dec
cli
ret
pusha
adc
pop
out
fcoms
in
shlb
push
lds
lret
sub
and
into
or
xchg
pop
add
jnp
add
sub
addl
xchg
lcall
cld
popa
sub
and
push
xor
pop
add
pop
pop
or
add
out
jle
add
add
sub
push
jns
je
lahf
and
and
js
repz
cli
repnz
add
mov
sub
adc
into
xor
mov
repz
or
cli
insl
xor
mov
shl
cmc
and
mov
xchg
inc
add
clc
jl
ja
xor
icebp
or
hlt
add
fnstenv
lock
insl
test
hlt
add
inc
inc
das
insb
jp
sub
in
jl
or
popa
xchg
repz
mov
inc
ds
popa
inc
jnp
cmp
add
add
cmp
sub
sub
in
test
adc
pop
adc
movsl
add
mov
mov
test
call
push
jno
push
sub
lea
cld
sbb
test
or
clc
int
dec
cltd
push
mov
xchg
inc
mov
inc
stc
daa
fdivl
add
sbb
sub
and
fcomip
add
push
decb
add
shlb
mov
clc
push
push
or
mov
mov
sbb
xchg
sti
rolb
fwait
add
out
add
mul
add
push
out
jmp
xor
std
nop
adc
clc
ffreep
loope
rorb
push
mov
add
mov
push
ljmp
popa
cmc
add
add
add
or
jne
fcmovb
call
pushfw
stos
add
dec
pop
ret
dec
push
push
and
pop
cmpl
leave
outsb
pop
pop
out
int
cmp
add
pop
xor
xlat
into
add
ret
push
mov
adc
sahf
data16
fidivrs
adc
add
dec
testb
loop
mov
inc
cli
subl
ljmp
subl
insb
xchg
add
test
call
push
insb
int
lods
cmpsl
mov
jmp
lods
cli
add
or
adc
inc
mov
test
xor
imul
lock
add
movsl
jno
dec
xor
cli
loope
pop
inc
hlt
repz
sub
cmp
cmp
add
movsb
sbb
orl
leave
mov
push
insl
xchg
pop
call
jg
pop
stos
insl
fidivs
add
pop
sti
fcomi
call
lods
scas
add
add
loopne
loope
loopne
ja
pusha
outsb
mov
jle
jo
push
insl
jle
dec
pop
mov
test
jge
lock
nop
arpl
and
repz
mov
mov
dec
in
xchg
ljmp
stc
out
mov
out
or
sub
test
fidivrs
shll
cli
sbb
pop
mov
fstpt
rorl
aad
sbb
xchg
add
add
mov
push
add
ljmp
rcrb
int3
dec
jbe
add
aam
icebp
aas
jmp
repz
or
sub
push
xor
outsl
push
cwtl
inc
mov
sbb
xor
xor
cli
hlt
daa
idivb
add
add
pop
adc
or
lock
mov
fdivr
incl
or
imul
out
jae
stos
cmc
sbb
or
pop
add
fldl
std
fildl
add
cld
sub
adc
mov
xchg
clc
or
repnz
add
test
je
fisttpl
dec
pop
jecxz
jbe
cmc
test
jecxz
push
hlt
outsb
rolb
popf
gs
sarb
jle
bound
popa
add
push
ja
sbb
xchg
cli
or
out
push
pop
push
dec
dec
gs
sbb
cli
and
stos
jecxz
xor
cmp
lret
enter
push
jg
sub
lahf
pop
fdivrl
imul
idiv
flds
or
pushl
out
or
cli
loope
adc
hlt
out
jle
lret
cmc
adcl
add
add
fsin
pmuludq
out
xchg
jge
lods
outsl
add
lock
mov
xchg
adc
pop
jnp
das
lock
mov
mov
cmc
add
lock
xchg
je
lea
cld
movsl
pop
pop
jo
aam
push
jmp
test
pop
mov
je
inc
xor
cmc
mov
call
sbb
mov
pop
inc
mov
out
cmpsl
mov
sldt
add
add
imull
add
inc
hlt
push
jnp
pop
sub
lcall
ret
jae
stos
push
pop
cmp
int
push
add
pop
idivl
pop
push
dec
or
cli
jae
pop
pop
mov
sub
dec
aas
and
shr
shrl
into
jae
jae
jo
cmc
jmp
add
add
je
dec
roll
sahf
rclb
sbb
pusha
or
fwait
hlt
cli
hlt
daa
jg
fstpl
insl
sbb
subl
add
call
or
jmp
insl
lahf
cli
add
add
mov
ret
push
mov
xor
xchg
fidivrs
add
pop
jo
pop
add
inc
cmc
mov
push
add
dec
mov
add
and
adc
movsl
test
je
cmp
bswap
add
mov
add
adc
inc
jmp
dec
fsubr
dec
push
xor
add
mov
shll
inc
idivb
fisttpl
hlt
daa
add
hlt
ret
pop
rclb
je
push
adc
add
ds
nop
jne
movsl
ljmp
lods
cmp
sti
les
out
pop
or
sub
cli
or
or
jne
add
inc
fsubrs
sub
lret
shll
ret
lock
push
dec
popa
je
jle
jle
insl
out
movq
clc
test
gs
sti
mov
pop
rep
inc
adc
mov
cmp
or
xchg
sbb
call
adc
mov
imull
shl
inc
subb
ficomps
lods
xchg
ljmp
pop
pop
out
into
mov
push
push
insl
pusha
ficoms
insb
jo
cmp
cmpl
lock
add
add
add
xchg
or
pop
dec
stos
jns
lret
adc
imull
jle
adc
mov
shl
ret
push
stc
mov
jge
sub
mov
pop
je
nop
pop
cli
jmp
das
pop
shrl
pop
ljmp
jae
mov
sub
push
fsubr
cmp
add
add
dec
mov
mov
mov
add
cli
mov
cmc
inc
leave
sti
cmp
fincstp
ss
pop
add
jns
mov
mov
clc
test
adcl
mov
loope
lret
call
pop
enter
bsr
pop
inc
sub
or
js
dec
cli
push
ja
push
lea
push
in
dec
lea
dec
push
jmp
idiv
jecxz
cmp
testl
notb
ss
push
inc
dec
dec
mov
add
jmp
add
xor
pop
jmp
xchg
mov
add
clc
mov
and
pop
call
add
mov
out
jle
mov
dec
ret
rolb
add
add
sahf
gs
loopne
mull
inc
jo
sti
and
inc
je
cli
clc
or
sahf
jle
xchg
outsl
test
aas
mov
pop
xchg
cmp
mov
lea
xor
dec
jmp
psubq
pop
shll
add
out
pushf
rolb
add
insl
inc
lcall
add
ja
cmc
loopne
ret
subl
jle
push
pop
std
out
cmc
mov
inc
mov
mov
outsl
je
faddl
add
mov
cs
test
push
pop
or
add
xchg
jl
jmp
mov
fpatan
adc
pop
icebp
aad
test
stc
push
xlat
jp
hlt
dec
jo
mov
add
into
or
jmp
pushf
incb
fs
dec
cli
xchg
sbb
aaa
adc
rorl
mov
sbb
sti
mov
add
pushf
dec
cli
rorb
xchg
aad
sub
push
fs
cs
out
loopne
test
dec
in
push
push
inc
std
popa
pusha
push
cmc
out
dec
dec
cli
jo
add
add
and
xchg
adc
mov
add
test
xor
add
rcll
or
sbb
fldl
repz
fs
in
push
stos
inc
cli
mov
add
rcr
push
jb
dec
decl
mov
jne
jg
push
lods
in
sbbl
add
insb
dec
push
jnp
xor
add
jmp
add
in
inc
cmp
inc
cli
mov
pusha
mov
pusha
mov
jns
sub
test
decl
je
dec
pusha
inc
inc
push
hlt
or
in
push
aad
cli
dec
jge,pn
loop
pop
aam
push
call
push
mov
scas
adc
jge
fcomps
mov
xchg
pop
decb
jb
aaa
add
push
rolb
jp
pop
cli
dec
fs
cli
loope
data16
pop
xchg
jae
loop
or
out
pop
out
dec
pop
cli
mov
jl
movsl
data16
pop
push
jns
stos
stc
add
xchg
add
xchg
cmp
cmp
rcrl
dec
clc
mov
out
dec
xor
jb
loopne
mov
aam
ret
add
add
sahf
fdiv
imul
sbbl
dec
adc
jmp
mov
iret
gs
jns
inc
jmp
frstor
call
mov
xlat
xlat
nop
mov
shrb
adc
xlat
fmull
movsb
dec
adc
nop
outsb
cmp
sub
dec
cli
insl
cmp
cmp
cmc
jg
frstor
dec
mov
mov
aaa
sbb
insl
dec
and
test
add
push
bound
gs
xchg
dec
xchg
mov
ljmp
std
gs
fmull
fildll
jae
lret
aad
cmpb
out
sbb
stc
xchg
cltd
roll
mov
ljmp
add
nop
mov
mov
inc
sbb
incb
fldenv
pop
movsb
jmp
xchg
cmp
loop
mov
xor
shl
int
mov
mov
and
pop
je
loop
sub
ljmp
in
fcoml
push
xor
scas
cmc
jne
popa
test
push
incl
mov
ljmp
mov
je
sub
ret
add
dec
loop
jle
call
inc
cmp
inc
adc
mov
or
pop
aad
inc
jg
clc
mov
fidivrs
sbb
ds
add
cli
or
out
aas
hlt
fidivrs
or
push
sub
or
adc
ljmp
lcall
pminub
mov
lea
imul
hlt
fidivrs
or
ret
out
jg
mov
add
xchg
or
mov
orb
jge
pop
jl
in
repnz
repnz
jl
pop
inc
dec
cmp
add
rcr
mov
shl
pop
inc
std
test
pop
xchg
add
add
cmp
addr16
hlt
add
add
lahf
pop
add
add
mov
mov
out
push
cmpsb
pop
dec
pop
push
or
push
out
push
pushf
pushf
dec
cmp
xor
pushl
jge
add
jo
push
bound
lret
not
push
xchg
add
inc
sahf
out
dec
sub
inc
push
shll
cli
add
out
jnp
jmp
push
dec
sub
fs
adc
push
cmp
std
xchg
test
lds
dec
subl
add
sahf
int
sub
jmp
mov
testl
aaa
divb
add
add
aad
add
call
xor
jle
add
std
add
call
mov
shlb
mov
adc
mov
fsin
lds
and
push
data16
ret
pusha
orl
add
sbb
lods
cmc
mov
push
add
jnp
jge
add
sbb
jns
popa
adc
loop
add
push
cmpl
callw
or
stos
dec
cmp
add
pop
lret
cltd
out
cli
test
imul
pop
sbb
movsl
cli
add
rcll
lock
cli
cs
sti
or
dec
gs
mov
lret
repnz
in
test
pop
ja
daa
sti
add
add
inc
rcrb
pop
ja
sti
gs
in
test
cli
jmp
stos
adc
loopne
stc
imul
hlt
add
subb
loop
hlt
pop
addl
notl
jnp
insl
push
inc
sub
jnp
mov
adc
mov
test
add
mov
add
test
lock
test
jae
gs
add
rcll
sbb
or
clc
iret
in
jae
repz
shr
inc
cmp
inc
inc
rol
stc
call
xchg
hlt
scas
xchg
lock
sub
dec
out
sti
inc
repz
pop
arpl
add
jb
mov
mov
pop
inc
push
sar
fdivr
call
decl
test
popa
jle
add
shrl
cmp
push
mov
aaa
inc
subl
scas
cmp
dec
bound
ret
push
hlt
jnp
ret
add
adc
jmp
or
aas
jmp
les
push
sahf
stos
add
ret
hlt
dec
idivl
add
jl
or
jno
ljmp
dec
incl
repz
adc
dec
inc
cli
incb
push
cmp
das
rcll
add
push
cmpsb
mov
push
nop
shrb
add
dec
cli
push
lret
add
je
jb
adc
sbb
push
mov
or
push
jecxz
mov
or
or
adc
in
cmc
add
sub
add
add
pop
dec
cli
or
data16
int
push
dec
fmull
sarb
hlt
add
xchg
add
sub
push
cli
dec
mov
inc
lret
jg
in
push
cli
test
xchg
loopne
out
pop
jmp
dec
sbb
push
cli
jno
lret
sub
gs
xchg
gs
test
push
insl
dec
je
clc
aas
out
add
push
fmuls
add
lods
dec
hlt
sub
ds
dec
pop
cmp
mov
sbb
not
add
add
popl
jmp
mov
imul
add
stc
pop
sbb
add
add
mov
fildl
mov
mov
ret
and
pop
or
add
orb
push
sub
add
inc
gs
incl
pop
dec
xor
fnstenv
out
lret
inc
cmp
push
add
fildl
xorb
stc
add
inc
fcoml
cmp
add
lock
fs
sbb
jae
sub
push
btr
sub
jg
adc
mov
das
sub
aaa
subl
mov
push
bound
or
cmpsb
sbb
inc
test
insb
xor
jmp
cmp
ss
shl
ret
pop
jg
adc
xorl
mov
dec
add
shll
aaa
or
enter
lea
or
cmp
inc
pusha
mov
xchg
test
add
add
mov
jp
in
fisubrs
decl
dec
push
cmpsb
int
lea
mov
rorb
jle
or
ret
add
adc
push
fnstcw
rcrb
lea
cmp
fldl
sub
push
dec
cli
js
shll
imul
ret
add
pop
call
icebp
icebp
jo
out
std
subl
jae
mov
jbe
imul
or
aad
ds
fistpll
adc
add
hlt
jge
cli
loope
hlt
aas
hlt
test
je
mov
mov
push
jbe
adc
cmp
xlat
in
incb
xchg
jnp
inc
jmp
inc
add
add
and
lret
sub
fdivp
aad
xchg
in
outsb
mov
or
add
aas
xor
add
mov
mov
aas
xchg
mov
fcmovnb
ret
rorl
test
ret
add
les
and
setb
or
in
test
adc
aaa
sub
xor
add
adc
add
add
xlat
mov
rep
aas
jnp
out
mov
lcall
insl
jle
ret
neg
or
scas
add
pushf
push
sti
hlt
fwait
adc
jl
jae
xchg
push
push
arpl
cli
sbb
cmp
push
sub
sub
or
pop
stos
cmp
insb
out
call
fmulp
adc
out
add
lock
sbb
mov
shrb
cmp
cli
xchg
imul
jb
push
xchg
sub
pop
mov
fadds
add
arpl
fimuls
pop
sub
movsb
cmp
fst
inc
or
je
sbb
adc
push
ror
mov
adc
loope
in
mov
mov
add
add
cmc
call
push
cmp
push
or
lds
clc
dec
mov
cli
dec
movsl
mov
mov
jmp
cmpl
decl
iret
add
hlt
push
mov
ss
sub
in
aas
hlt
test
cli
mov
cs
xor
clc
imul
hlt
jp
shlb
xor
fidivl
cs
inc
stos
out
add
stos
push
dec
mov
dec
xor
fs
ds
mov
addr16
sbb
fidivl
outsl
cli
and
mov
sar
sahf
sub
hlt
ljmp
or
fcmovnb
sbb
std
lret
movl
int
call
mov
jmp
stos
mov
call
shl
je
pop
mov
loopne
inc
testl
add
loop
mov
xchg
in
jnp
xor
imul
and
imul
enter
mov
push
shrl
dec
call
ss
and
jmp
and
test
aas
cli
dec
sbbb
jae
je
dec
popf
aad
incb
jp
push
dec
dec
pop
ds
sti
cmp
addr16
fldcw
lock
cli
mov
out
sub
jg
sbb
adc
cmp
maxps
jmp
add
cmp
ds
orb
addr16
mov
add
cmp
inc
or
cmp
addr16
call
test
push
xor
cmpsb
cmp
xchg
out
add
cmc
test
push
add
push
mov
dec
push
int3
adc
iret
inc
cli
mov
leave
sti
incl
bound
jge
int3
cmc
test
jbe
into
add
xchg
dec
std
mov
in
xchg
add
add
dec
push
ljmp
and
faddl
sub
or
add
hlt
sub
and
andb
xorb
ret
dec
mov
inc
cli
repz
rolb
pushf
addr16
push
add
insl
incb
jb
mov
pop
bswap
inc
inc
test
and
testl
jns,pn
call
ljmp
adc
sub
dec
mov
jmp
les
sub
push
clc
in
les
add
or
fiaddl
clc
adc
mov
add
mov
scas
jb
addr16
pop
call
jl
in
ret
fistpl
ljmp
inc
xor
add
mov
pop
ret
call
ret
fwait
mov
call
ret
xorl
mov
call
inc
inc
mov
pop
pop
aaa
jns
lret
mov
pop
int3
stos
add
jge
call
mov
inc
mov
into
cs
ds
add
std
inc
mov
sarb
cmpl
stos
testl
xor
xor
test
sub
cli
jo
add
aad
cmp
xchg
add
jb
sub
xchg
std
mov
cli
sub
cmc
push
jle
stc
push
daa
add
sbb
stc
sti
mov
mov
adc
inc
cli
mov
cmp
popa
pop
dec
lea
mov
cmc
jge
cmc
adc
push
ret
inc
jbe
mov
leave
push
incl
mov
or
mov
cmc
je
cltd
pushl
adc
shll
mov
cmc
hlt
test
cld
imul
mov
inc
cli
push
sbb
dec
cmpsb
fistl
fnstcw
loop
inc
push
cli
dec
roll
sbb
fldt
lea
cli
loope
lock
hlt
and
jae
mov
out
icebp
inc
cli
add
and
rcrb
iret
add
push
aaa
push
std
out
adc
and
xchg
add
jne
push
jg
jg
lods
popf
push
inc
sti
sbb
adc
jg
jg
cmc
movsb
mov
lock
out
sub
out
push
and
dec
pop
xor
inc
enter
pop
out
hlt
xlat
rolb
hlt
cld
call
repz
xchg
add
call
inc
call
adc
ret
out
inc
movsl
add
or
mov
movsl
add
sahf
hlt
mov
jge
orb
sbb
jmp
push
and
pop
mov
andl
repnz
jmp
mov
stc
hlt
iret
sbb
jp
and
rsqrtps
xchg
mov
mov
cld
push
ret
stc
pushf
push
inc
xor
stc
hlt
sub
jmp
cmp
stc
mov
or
cs
cs
sti
es
mov
push
aaa
das
jae
repz
add
out
cmp
ss
cli
aam
adc
clc
stc
negb
adc
push
repz
inc
push
loope
add
mov
call
add
dec
cli
mov
inc
repz
shlb
call
out
xchg
jle
nop
cld
jge
xor
dec
cli
mov
xor
scas
or
scas
mov
pop
js
cmc
decl
push
call
pop
movb
or
or
jns
out
repnz
incl
testb
add
and
es
ja
cmp
hlt
sbb
mov
mov
xor
decb
loop
cli
outsl
fwait
and
std
sbbb
push
inc
cmp
lea
mov
addr16
and
sarl
aas
mov
mov
sbb
push
rcrb
cli
add
adc
mov
sbb
jmp
js
inc
push
mov
and
sub
xor
cmp
add
jl
test
or
add
andb
sbb
add
add
mov
jnp
adc
int3
testw
cli
les
add
add
add
pushf
andb
das
push
loopne
sub
mov
test
das
mov
sar
mov
sbb
leave
jo
pop
add
call
ret
lret
jp
clc
jns
jae
mov
push
out
adc
sub
mov
jmp
test
stc
aaa
into
enter
xchg
add
xor
aad
bound
mov
cld
jle
push
mov
idivl
push
mov
xor
test
pop
mov
jg
cli
ror
sub
mov
add
mov
dec
ds
lods
cli
push
add
data16
sarb
add
or
add
adc
push
loop
rolb
shr
dec
mov
idiv
xor
push
or
pop
cmp
dec
push
and
rcrb
shll
cmp
incl
stos
mul
pop
add
jne
push
loop
ret
test
insb
stc
std
pusha
out
cmc
xor
test
in
or
fldenv
or
jle
add
nop
std
stc
xor
negb
pop
push
daa
aaa
mov
and
adc
faddl
jmp
outsl
loopne
push
lods
pop
or
push
sbb
xor
inc
sar
push
sbb
xor
xor
subps
aaa
clc
mov
test
jmp
sbb
ljmp
mov
ret
sbb
pushl
xor
adc
mov
add
add
jb
adc
es
out
cmp
leave
mov
hlt
mov
mov
add
aad
jo
cwtl
cmp
into
push
gs
jns
mov
sub
shrl
cmp
pop
push
sub
inc
pop
or
jp
mov
sub
sub
pushf
call
xchg
test
push
ljmp
jae
sub
sub
lret
cmp
mov
jl
add
int
subb
js
insb
rcrl
jmp
sub
ret
mov
pushl
sub
jmp
sub
cltd
mov
mov
lahf
mov
je
clc
adc
mov
subl
mov
dec
pop
dec
fwait
out
add
cs
sar
stos
mov
xor
xor
pop
aad
adc
js
add
pop
inc
cli
xchg
mov
xchg
xchg
cli
jbe
shrb
lret
mov
aaa
jae
jmp
cli
das
cli
mov
mov
cmc
push
daa
add
mov
in
inc
pop
popf
pop
cld
mov
shl
bnd
lea
cwtl
fdivp
jne
push
add
inc
sub
mov
lea
inc
cmp
clc
mov
mov
xor
dec
jns
or
mov
push
in
pop
inc
dec
push
cmc
adc
xchg
cld
mul
pop
push
sti
or
iret
cmp
hlt
sahf
cmp
jg
jmp
xor
pop
enter
add
add
xchg
inc
push
jg
sub
pop
incl
outsb
add
sbb
mov
aaa
cli
ret
adc
mov
cmpsl
mov
cld
mov
sbb
test
xor
dec
imul
sub
pusha
cmp
and
mov
dec
xchg
add
xor
inc
mov
add
pushf
daa
aaa
cmc
add
add
add
add
jge
lods
mov
sub
sub
pop
and
adc
sub
cmc
in
sub
jg
xor
mov
add
inc
mov
hlt
arpl
imul
sub
xchg
mov
sub
stos
cmp
ja
sbb
jp
nop
sbb
jle
cmp
das
add
or
repnz
lcall
push
out
pushf
sub
gs
sbb
dec
add
push
iret
fisubrl
mov
ja
cld
es
notl
jmp
xchg
lods
or
xlat
icebp
lcall
gs
add
xor
pop
jb
int
mov
jg
adc
add
jmp
push
pop
lahf
pop
and
cs
jae
outsb
pop
out
cs
mov
inc
dec
sub
lcall
add
pop
fdivrp
lcall
add
lahf
fstp
pop
xchg
sbb
xor
adcl
add
add
in
add
loop
lret
mov
mov
call
notb
and
sbb
loop
mov
and
inc
pop
add
add
or
dec
push
dec
push
hlt
ljmp
icebp
cmp
fldt
cld
test
mov
add
into
fisubrl
push
clc
mov
pop
outsl
in
and
mov
mov
es
push
xor
mov
pop
mov
aad
add
mov
pop
jg
sub
out
pop
mov
es
fcompp
aaa
sbb
jae
push
stos
xor
sti
pop
cld
out
xchg
adcb
add
push
ret
es
arpl
jae
int
stc
nop
cwtl
pushf
es
sbb
xor
sub
in
add
jns
sbbl
out
hlt
ja
or
cmp
cli
push
inc
scas
mov
ficomps
jmp
xor
test
xor
mov
push
outsb
mov
nop
add
add
sub
stos
inc
ret
inc
xor
repnz
mov
add
or
cltd
or
aam
hlt
push
cmc
aas
jmp
sub
adc
and
push
je
loopne
xchg
aaa
and
mov
leave
cli
and
xor
das
stos
decb
sub
call
aam
cli
push
pop
mov
adc
cmc
repnz
add
out
and
jp
stc
hlt
stos
adc
sbb
push
jmp
test
and
aaa
inc
add
add
test
fbstp
popf
lret
loop
jb
cmc
xor
movsb
out
jno
dec
push
pop
rolb
mov
dec
jmp
pop
divl
movsl
adc
add
add
test
dec
lods
adc
jle
js
add
xchg
push
loop
loop
in
cmc
lea
movsb
sti
lcall
leave
jae
xchg
lret
jp
mov
pop
ss
mov
sub
imull
cmpsl
sbb
inc
sub
pop
inc
add
cli
sub
dec
ds
cwtl
mov
lock
adc
xchg
sub
xchg
mov
inc
adc
out
sub
jnp
pop
xchg
subl
jg
adc
adc
sub
and
lods
stos
and
or
hlt
inc
xchg
cmc
sub
push
pushf
mov
or
add
hlt
add
add
lods
sbb
fs
addl
dec
aam
add
add
in
ret
push
mov
movsb
inc
and
xor
adc
ret
xor
call
add
aad
xchg
and
sbb
inc
xor
adc
push
and
xor
hlt
add
sbb
inc
xchg
mov
mov
call
cmc
in
jle
add
je
push
mov
lret
notl
mov
and
aam
scas
add
dec
lds
mov
jmp
cvtps2pi
jle
sbb
in
ds
testl
hlt
aaa
hlt
aas
jmp
shll
ds
outsl
repnz
add
add
inc
lds
and
hlt
adc
aas
add
push
add
stos
stc
scas
adc
dec
decl
jmp
xchg
out
cmc
inc
ds
or
shl
push
push
adc
pop
decl
jbe
cmp
or
add
add
and
cmc
jmp
add
add
add
push
add
lret
loop
aad
test
pop
cld
std
push
test
ficomps
sbb
adc
pop
icebp
pushl
loopne
hlt
clc
sub
hlt
sub
pushl
jne
push
icebp
xchg
push
dec
ds
es
sbb
cmp
hlt
inc
pusha
test
dec
sub
xchg
and
pushl
loop
imull
out
dec
das
cli
pop
dec
push
test
inc
ja
xorl
shl
cli
jecxz
sysenter
inc
jmp
sti
mov
insb
out
je
cli
jno
loop
hlt
sub
out
fldcw
cli
jl
loop
and
incl
mov
dec
xor
mov
ja
lock
add
sbb
call
fstps
das
jmp
out
add
jmp
adc
ss
sbb
sbb
flds
adc
sub
fdiv
ret
cmp
sub
add
jmp
push
testl
mov
lods
out
mov
add
repnz
adc
add
ljmp
add
pop
push
sub
jae
lahf
pop
shlb
add
xchg
fwait
or
dec
aas
sbb
imul
xor
xor
inc
lods
out
into
dec
and
je
pop
test
sub
add
cmp
das
push
cmp
sub
mov
xchg
call
ja
cli
outsb
ljmp
pop
daa
jmp
push
loop
pop
divl
add
enter
int
repnz
push
pop
push
into
shll
pop
adc
mov
nop
add
inc
pusha
add
jae
mov
jmp
mov
out
or
jns
lcall
lret
cli
sbb
cmc
add
out
adc
cli
pop
jle
in
pop
cli
add
into
fildl
inc
inc
push
idivb
cmc
adc
add
push
lock
pop
imul
leave
mov
jmp
mov
add
ljmp
adc
mov
out
ret
sbb
add
add
add
mov
rcrb
cmc
mov
jl
or
sub
jae
xor
pop
lcall
cli
imul
or
add
pop
subl
mov
out
add
mov
sub
add
dec
push
mov
jge
or
cmc
hlt
or
mov
jg
add
add
call
cli
pop
sbb
jle
dec
gs
hlt
test
rorl
inc
ror
sti
or
inc
in
sbb
add
add
js
ss
cwtl
js
sbb
lahf
iret
sbb
cmpb
insl
pop
jae
call
ja
adc
jae
sbb
mov
call
sti
je
cwtl
add
add
mov
mov
aad
mov
pushl
test
gs
pop
sti
aaa
sbb
movsb
adc
add
testl
add
add
add
xchg
cmc
adc
inc
adc
arpl
cltd
clc
int
int3
into
mov
mov
add
je
sbb
scas
cwtl
push
cli
nop
or
cmp
or
xchg
aaa
int
mov
fmull
movsl
fists
or
jmp
negl
cli
add
adc
addr16
mov
stc
adc
add
ljmp
pop
xchg
cli
std
cmp
sbbb
pop
jae
ffreep
push
pop
data16
dec
lock
add
add
out
aaa
pop
leave
addr16
cmp
jae
or
loop
inc
in
cmc
cmp
lret
insl
add
insb
lcall
std
xor
mov
lret
pop
add
shl
cmc
incl
pop
cwtl
adc
in
cmc
jg
divl
daa
sbb
out
jl
cli
jge
divl
test
pushw
push
or
sar
repz
scas
or
mov
cld
insl
and
push
outsl
lock
in
sub
add
jmp
sub
incl
ja
mov
and
subl
cli
stc
jns
add
mov
push
add
sub
dec
stos
ss
dec
or
jmp
cmp
fsubl
ss
dec
lcall
subl
adc
jo
imul
ds
sub
mov
lret
mov
iret
orl
add
shl
pop
int
mov
mov
loopne
add
add
adc
xchg
loope
cmp
mov
pop
outsb
mov
push
push
test
rorb
decl
adc
inc
int
mov
icebp
lds
cli
insl
mov
dec
bound
je
loope
jo
loope
xorl
je
jnp
jae
sbb
out
outsl
psubd
add
orb
int3
adc
or
cmp
xchg
mov
xchg
mov
mov
mov
psubsb
xchg
and
cld
sbb
xor
psubd
ljmp
lcall
push
push
or
dec
and
call
loopne
in
xor
add
add
aaa
loop
jmp
rorl
mov
fstpl
push
and
out
loope
xor
jle
loop
clc
add
pop
lea
loop
es
push
mov
push
ja
dec
call
or
add
add
rorl
push
lods
sti
decl
leave
add
add
test
and
inc
shrl
add
mov
fldz
sub
mov
xorl
lods
hlt
sbb
out
dec
or
push
cld
sbb
in
addb
mov
mov
out
jo
cli
dec
xchg
and
les
jecxz
cmpl
decb
js
add
hlt
fwait
mov
mov
inc
out
dec
pushf
xchg
insl
cld
stos
cmpsl
adc
inc
out
push
push
xorb
add
movsb
and
add
mov
out
call
pop
lahf
pop
stc
rcr
mov
jge
mov
xchg
adc
and
adc
js
int3
repz
jnp
sbb
insl
adc
hlt
add
cltd
int3
rep
sahf
divl
out
mov
inc
cmc
jnp
dec
sbbl
add
outsb
inc
rolb
xor
add
add
and
adc
imul
inc
testl
sbb
int3
sti
add
push
xlat
adc
lods
jle
testl
mov
adc
sub
ss
mov
testl
addl
push
or
add
jmp
add
xor
pop
leave
adc
adc
stos
imul
mov
lods
out
insb
or
imul
jmp
xchg
clc
out
lret
jmp
add
bound
cmc
mov
mov
decl
sarl
add
mov
add
add
pop
std
mov
push
fs
loopne
mov
in
rorb
cmpsb
add
outsb
adc
add
push
inc
xchg
sqrtps
jnp
xor
addr16
xor
xchg
adc
jno
sti
and
lods
gs
divb
mov
rolb
inc
sbb
out
ret
xor
cli
into
sbb
ret
adc
jae
mov
decl
stc
xor
xchg
inc
sbb
inc
lret
inc
mov
xchg
sbb
ljmp
inc
push
pop
lret
je
xor
mov
lock
mov
cli
rorl
mov
sbb
fwait
cmp
add
adc
add
adc
mov
sub
and
add
jp
mov
adc
add
push
ret
aam
inc
rol
enter
add
pusha
cwtl
jecxz
outsl
enter
test
push
pop
sbb
or
in
jb
insb
rorb
mov
cwtl
add
insb
inc
pusha
hlt
pop
cwtl
jmp
push
cwtl
add
mov
add
out
inc
push
into
jp
mov
or
outsl
fimull
pop
arpl
mov
sub
add
jb
mov
std
jbe
sti
jmp
inc
or
enter
enter
fisttpl
or
mov
rcrl
sti
push
sbb
imul
addb
cld
cmpsb
add
cli
sbb
xchg
addl
mov
ss
loopne
repz
sbb
hlt
out
je
or
cli
push
outsb
xor
aam
and
add
cmc
mov
dec
mov
icebp
hlt
dec
push
shlb
lea
add
incb
jge
je
jmp
push
clc
repz
inc
inc
or
pop
cld
out
jmp
incl
out
mov
xchg
loopne
test
dec
mov
addl
repnz
pop
testb
adc
inc
cli
inc
adc
cli
dec
jo
hlt
cwtl
adc
sarl
mov
hlt
cwtl
sub
mov
out
adc
cmpl
and
sahf
sub
or
test
add
jg
call
cmpsb
mov
repz
inc
push
dec
dec
fstl
cli
cmp
sbb
sub
sub
int
push
pop
outsb
pop
mov
push
jg
test
fcomps
jmp
fwait
push
testl
xchg
add
filds
or
dec
hlt
add
add
testb
mov
push
rcll
mov
sbb
fistl
mov
jecxz
pop
mov
shlb
add
add
mov
and
call
sbb
imul
add
inc
adc
arpl
and
sbbb
inc
repz
xchg
cld
jmp
mov
gs
in
ljmp
cli
fsubr
js
pop
xchg
xchg
neg
push
pop
xchg
inc
dec
add
xor
lret
xor
xor
lret
mov
mov
lahf
add
dec
sahf
test
int
sub
jle
testl
mov
and
int3
mov
pop
cmp
inc
shll
cltd
add
pop
sahf
loopne
mov
cmp
sbb
xchg
jne
inc
cld
xchg
dec
and
cli
fldl
movsl
pop
out
cmc
mov
xchg
cld
pop
fmull
mov
jns
cld
es
add
fiadds
or
dec
xchg
inc
jns
pop
into
jns
or
mov
add
mov
int3
mov
int3
adc
push
push
push
dec
mov
repnz
loopne
cli
lcall
in
cmc
mov
in
jns
hlt
sbb
or
pop
push
or
pop
cli
repz
cli
xchg
fsubl
out
ret
jns
dec
pop
addl
pop
xchg
lret
clc
fcompl
mov
add
out
pop
jle
and
or
mov
roll
fsubl
imul
mov
in
pop
xchg
mov
negb
xchg
cltd
pop
inc
lret
inc
call
pop
dec
lret
mov
jns
sbb
cmp
mov
call
push
std
push
jns
mov
andb
subb
add
ja
pop
and
jo
mov
jns
mov
or
push
inc
loopne
dec
or
inc
cmpl
add
cli
inc
in
cmp
pop
mov
inc
inc
repz
cmp
and
lahf
nop
std
ja
sbb
push
gs
idivl
mov
cli
pusha
mov
test
in
push
mov
je
je
insb
mov
stc
jle
xchg
in
jle
xchg
insb
or
ja
push
test
jle
mov
or
movsb
incl
inc
sbb
loop
jle
cmpl
mov
cwtl
sub
testb
jno
dec
in
sbb
xchg
add
inc
negb
adc
rcr
es
repnz
test
pop
mov
add
rol
jecxz
dec
jnp
or
mov
add
lcall
mov
and
inc
dec
dec
dec
in
loope
dec
mov
pushf
add
jmp
sti
push
dec
mov
movl
dec
adc
lcall
xchg
je
aam
loope
jns
stc
fiadds
test
lods
mov
mov
mov
aas
dec
ret
lds
cmp
in
mov
ja
add
fstpt
and
add
out
insl
in
insb
sbb
repz
std
outsb
cld
fs
insl
lock
add
in
cmpsl
add
adc
loopne
sar
xor
mov
cmp
mov
pop
jmp
inc
or
std
push
mov
icebp
fmul
jmp
sbb
jae
sub
test
fldt
adc
jg
hlt
outsb
xchg
sub
out
hlt
add
xor
std
jnp
into
xor
jl
lock
and
loope
mov
and
jb
into
cwtl
fisttps
add
add
mov
inc
dec
adc
sti
je
jecxz
hlt
add
or
in
in
int
movsb
pushl
fistps
inc
in
cmp
xchg
add
out
daa
cltd
add
mov
jb
repz
push
outsb
leave
repz
mov
mov
adc
sub
mov
dec
sbb
dec
lds
cmp
addr16
imul
jae
jmp
jge
andb
test
push
je
insb
ret
adc
xchg
ljmp
add
fsub
mov
mov
daa
stc
dec
out
or
mov
aaa
lods
or
jle
push
stc
bound
xchg
idiv
adc
lret
inc
add
in
mov
add
gs
pop
out
pop
ret
addb
add
pop
ljmp
xchg
add
push
add
lcall
jge
in
cltd
loope
adc
stc
lcall
pushf
add
xlat
mov
in
dec
dec
push
jne
cmp
int
mov
pop
or
push
aaa
outsb
adc
push
stc
ljmp
mov
jnp
clc
push
pop
popa
add
mov
mov
ljmp
jne
sti
jno
cwtl
mov
and
std
ss
testl
sbb
mov
std
lcall
fdivrl
hlt
bound
xchg
jae
repz
std
add
in
test
hlt
ret
cli
testb
push
mov
xorb
push
pop
mov
and
dec
les
fildll
sbb
jmp
xor
jl
add
push
mov
cmp
sti
je
jecxz
hlt
add
or
jecxz
hlt
jmp
fmull
movsb
jp
fistps
movsb
in
sbb
dec
jmp
out
cmpsl
cltd
les
repz
push
outsb
leave
sti
mov
lock
jecxz
push
shlb
sti
cmp
add
test
adc
or
jp
cmpl
addr16
repz
cltd
std
test
sti
leave
or
push
je
filds
idivl
mov
and
fwait
out
repnz
pusha
lods
loop
sub
pop
call
and
sub
push
add
jb
repnz
lods
add
jle
ljmp
cmp
dec
jmpw
and
add
incb
shrl
pop
iret
out
xchg
cli
scas
add
push
cmp
call
push
adc
jg
cli
mov
dec
test
std
cli
stc
push
add
dec
add
mov
pusha
or
call
push
inc
std
test
incb
dec
or
add
add
idiv
loopne
aad
out
or
ljmp
fmuls
test
push
idiv
rol
cmc
push
xchg
inc
or
xchg
repz
mov
test
psadbw
sahf
cmc
add
xchg
bound
sbbb
dec
fmull
sbb
cmp
or
test
and
jmp
jl
cld
hlt
mov
sbb
add
loop
mov
xchg
sub
mov
add
adc
xchg
pop
cmpsl
xchg
inc
lret
sub
cmc
dec
mov
jbe
xchg
addr16
sbb
jbe
in
outsb
and
insl
sbb
xchg
pop
outsb
and
mov
xchg
outsl
adc
or
add
add
test
mov
js
jg
popa
cld
cld
out
sbbb
sub
pop
hlt
in
inc
mov
lcall
xchg
or
add
lods
pop
jo
testl
xor
das
enter
enter
xchg
xchg
mov
aaa
fcmovbe
and
ficoml
into
pop
push
jg
pop
cmpsb
jg
mov
out
mov
dec
xor
xor
mov
push
cmp
ds
imul
andb
add
addb
test
xor
subl
add
out
loop
push
clc
cli
insl
in
popf
stc
es
addb
dec
mov
clc
stc
push
add
jle
add
addb
push
nop
cmp
lret
call
push
add
jle
out
mov
addl
lret
call
push
add
jle
incb
cwtl
add
jns
call
pop
cmp
test
jb
pushf
outsl
jp
call
push
cmp
test
mov
adc
addb
add
add
mov
lea
loope
fisttpl
testb
mov
into
add
jg
or
inc
insl
add
cmp
mov
rorl
xor
jg
add
inc
insl
add
or
dec
pop
jge
movsb
xchg
sub
mov
inc
sbb
in
xchg
jle
ljmp
shll
sti
jns
push
dec
add
int
stos
jne
stos
jge
dec
out
dec
pop
cli
ja
add
mov
pop
mov
and
sysret
cli
ja
add
das
jp
and
test
out
out
or
ja
stc
test
add
iret
jb
xor
jnp
in
aaa
out
scas
or
ja
stc
test
add
add
add
add
push
pop
cmp
jge
or
subl
push
int3
jb
xor
push
outsb
cmp
lds
scas
subl
jo
roll
int3
inc
jbe
stc
xchg
jl
xor
xor
jle
sub
jo
xchg
add
lret
adc
pusha
xchg
test
dec
add
clc
insb
sub
subl
jmp
cmpsl
nop
add
push
cld
jnp
ljmp
dec
add
jne
je
jg
cld
jb
es
bound
add
repz
enter
idivl
sti
push
jnp
cmp
fbstp
push
push
add
mov
sbbl
data16
popa
clc
jbe
sub
mov
test
add
ret
xor
divl
aad
mov
in
enter
divl
out
jns
jmp
sbb
jae
lahf
push
sbb
cmpsb
mov
mov
in
dec
push
xchg
cmpsl
std
dec
fdivr
lret
repnz
ss
into
inc
xor
or
jns
jb
inc
mov
fdivrl
mov
filds
add
lea
add
lods
in
je
jns
cld
je
add
jp
xor
add
orl
jp
push
jne
jne
js
cld
div
sbb
add
push
cmpl
hlt
adcl
and
lods
xchg
ret
div
add
inc
jae
jbe
xchg
into
jb
fdivl
ja
add
jb
cli
rcrl
add
nop
std
outsb
cmpl
fisttpll
je
pop
subl
cmp
js
pushf
jp
cli
sbbl
jno
nop
std
jle
lds
loop
loope
add
add
das
andl
add
xor
in
dec
cs
and
add
add
add
divl
call
das
push
repz
testl
adc
push
dec
mov
mov
repz
neg
cld
js
in
outsb
lods
fistpl
cltd
mov
imul
out
jo
mov
mov
orb
jl
sbb
mov
repz
iret
ljmp
outsl
add
jmp
idivl
jb
mov
and
cmp
pop
add
push
or
or
jmp
repz
jnp
cld
jmp
hlt
mov
inc
push
test
sub
sub
leave
adc
mov
std
imul
add
adc
hlt
bound
test
cs
test
add
ret
je
outsl
lds
xchg
sub
jae
inc
mov
pop
jp
mov
std
mov
dec
push
add
cmpsb
cmp
test
add
and
cld
push
pop
xchg
lret
xor
int3
test
ror
and
orl
dec
sbb
cmpl
add
filds
cmp
add
cmp
cmp
and
pusha
sub
push
insl
or
xchg
push
pop
hlt
sbb
jne
ret
add
fldt
into
fldt
insl
test
xchg
fdiv
dec
jno
test
hlt
fisttpl
cmp
xor
push
add
shlb
add
add
fucom
into
out
incl
mov
add
push
les
sub
mov
hlt
cmp
int3
mov
mov
in
inc
arpl
jns
jno
jns
fwait
pop
and
add
pop
add
repnz
jnp
pop
lock
lcall
mov
xor
cmp
or
movd
les
pop
mov
add
std
rolb
lock
lahf
push
movsl
pop
hlt
jnp
mov
add
add
mov
jno
hlt
add
insl
hlt
pop
out
cmp
roll
dec
std
add
add
dec
inc
push
mov
pop
sub
out
xor
add
leave
mov
adc
idiv
push
add
sub
fs
xchg
sub
xchg
xchg
push
or
mov
ror
inc
ror
outsl
loopne
and
mov
jbe
or
in
xchg
outsb
inc
or
xor
test
xor
xchg
mov
add
bound
inc
or
jmp
and
dec
pop
mov
outsl
cmc
insb
lds
jbe
stc
scas
jle
pop
add
jns
xor
dec
cld
push
push
mov
testl
add
push
addl
nop
idiv
inc
xchg
cmp
xor
out
testl
xor
xor
mov
testl
cmpb
add
dec
cld
push
inc
shr
aas
out
testl
adc
sbb
hlt
pop
mov
hlt
fstpt
mov
or
out
push
ja
add
stc
arpl
nop
inc
pop
stos
xchg
arpl
call
ja
add
inc
fiadds
cld
sub
lret
out
stc
adc
clc
add
or
sub
jno
jg
add
mov
add
or
repnz
jb
mov
stc
ret
pop
inc
cld
and
inc
xor
in
inc
cmpsb
add
jecxz
mov
in
cmpb
inc
orl
mov
fldl
enter
cld
jno
mov
add
cli
cld
jno
mov
mov
fucomp
icebp
sbb
andl
dec
add
insb
cld
addr16
ret
and
add
add
or
orl
add
or
out
jbe
stos
pusha
cld
mov
xor
test
cwtl
sbbl
mov
add
in
in
add
jae
sub
test
testl
push
pop
addl
dec
push
test
or
stc
divb
jo
imul
adcl
sub
jmp
testl
xor
jg
mov
cli
jmp
pop
add
push
ret
mov
add
add
jp
subl
addl
lret
repnz
mov
test
jp
pop
iret
cld
call
mov
add
xor
mov
out
negl
jecxz
ret
xor
pusha
add
pop
jecxz
ret
dec
mov
xor
sar
xor
and
ret
xchg
inc
or
rcll
sbbl
add
add
add
jbe
cmp
add
int
or
hlt
imul
pop
outsl
jno
add
fisttpl
cld
scas
mov
js
mov
psllw
add
enter
jae
dec
js
adc
hlt
fidivrl
cmc
jl
jecxz
or
std
push
jbe
jl
mov
add
add
sub
mov
jno
outsl
jbe
testb
pusha
std
push
add
xorb
lea
out
hlt
adc
inc
jno
xor
add
add
push
adc
add
push
dec
jmp
mov
fs
in
andl
hlt
add
sbbb
add
add
push
outsb
mov
push
or
rol
cmp
clc
arpl
call
daa
add
jge
or
aas
sub
mov
cmpb
hlt
add
jle
idiv
insb
jg
add
js
enter
add
sbb
testl
pop
hlt
xchg
jg
stc
popl
jmp
add
jg
loope
lds
js
sbb
or
shll
pop
shrl
lds
jb
adc
lahf
jg
stc
in
insb
jb
adc
cltd
fcoml
cmpsl
jo
add
jle
lock
lret
ja
add
add
inc
or
add
jnp
int3
push
jae
lea
out
or
pop
shrl
aas
js
add
outsw
adc
and
xor
test
jne
jmp
jge
add
aaa
add
mov
orl
adc
popf
sub
adc
jo,pt
ds
stc
jge
push
dec
adc
add
sub
jns
jo
nop
test
or
sbb
sbb
adc
hlt
dec
add
add
pop
jae
hlt
jp
ljmp
push
cmp
pop
mov
std
pop
das
lret
mov
mov
ja
repnz
jg
pop
mov
test
ror
pop
ror
test
in
daa
scas
xchg
ljmp
jns
xchg
push
rcrl
inc
jb
loopne
addb
mov
lahf
mov
jnp
hlt
add
pop
std
push
add
adc
xchg
or
push
cmp
cmp
cmp
enter
sar
sbb
jmp
outsb
repz
sub
inc
in
pop
es
add
push
lret
and
out
cli
push
enter
shr
and
add
add
add
add
add
es
mov
shll
enter
enter
mov
sti
pop
cmp
out
cmp
arpl
add
testl
out
test
sub
push
cmp
hlt
iret
add
dec
cli
int3
mov
sarl
jmp
sti
mov
rolb
add
sbb
hlt
jg
mov
repz
outsb
insb
repnz
je
or
mov
inc
dec
clc
mov
pop
adc
stc
ds
xchg
das
pusha
fstl
adc
call
sbb
addb
jae
and
addl
dec
cld
push
mov
call
adcl
shlb
jnp
stos
bound
add
in
lea
idiv
push
out
push
jnp
rorl
ret
lcall
dec
lock
push
mov
or
test
and
mov
add
leave
je
fisubs
idiv
sub
hlt
sbb
imul
sbb
outsb
enter
js
jbe
in
test
out
stc
and
lock
add
add
inc
jg
adc
out
call
ja
add
mov
sti
js
sbb
icebp
cli
shrl
out
jge
out
mov
inc
out
add
push
mov
out
mov
out
stc
fwait
cld
jle
mov
stc
pushf
fwait
loopne
subl
jno
jno
jbe
out
test
in
stc
arpl
clc
movb
add
and
pop
adc
cmp
les
jle
fdivrl
icebp
cmpsl
negl
adc
fidivl
sbb
pop
adc
pop
in
lods
and
icebp
jns
or
fucom
pop
xchg
pop
loopne
icebp
cmp
xchg
icebp
mov
xor
jmp
mov
out
mov
loopne
icebp
and
insb
sub
loopne
jg
fsts
jge
pop
loopne
loopne
enter
js
addl
mov
adc
stc
jmp
inc
fimuls
mov
cli
push
and
fdivrp
bound
mov
push
or
in
stc
popa
jae
into
in
push
pop
inc
dec
mov
stc
mov
mov
scas
jb
jmp
add
je
jo
stc
bound
stc
xchg
mov
cmpl
std
imul
fdivrp
add
pop
test
and
imul
xchg
shl
faddp
add
or
aad
inc
or
test
aam
call
out
call
sbbl
shrb
add
add
pop
jge
ret
lea
aad
lea
idiv
mov
out
jnp
ret
call
cld
fcom
push
mov
sub
test
and
testl
and
imul
hlt
pop
stc
jae
enter
js
jbe
jmp
punpckhwd
stc
dec
daa
ja
pushl
stc
cmp
jbe
add
nop
icebp
jae
les
test
cmpsb
xchg
sbb
ljmp
pop
inc
cld
movsl
jo
hlt
cli
mov
call
ja
add
scas
xchg
jbe
rolb
cld
and
mov
jle
mov
jmp
mov
cwtl
fs
xchg
xchg
call
out
outsb
jle
lock
ret
or
mov
movsb
out
jns
add
add
je
sub
cmp
jae
ret
out
dec
fstl
out
cmp
fstl
fucomi
ljmp
xor
out
xor
pop
cwtl
mov
lahf
dec
in
std
fsubrl
test
shr
jns
out
stc
orl
dec
or
inc
fcoms
mov
xor
nop
insb
sub
cmc
sub
add
or
jge
mov
test
test
or
ja
inc
push
fisubs
ss
fisubrs
lock
xchg
testb
add
stc
push
scas
ja
push
sbb
xchg
stc
sahf
xchg
pusha
mulb
fiadds
rcll
sbb
je
or
mov
add
add
add
hlt
mov
fldl
xchg
add
stc
sahf
sub
test
mov
int3
add
int3
int3
dec
fwait
int3
int3
lock
in
orl
dec
mov
shlb
scas
or
pop
pop
test
aad
mov
pop
cmp
decl
test
shlb
jmp
push
mov
dec
mov
or
insb
scas
stc
lcall
arpl
lcall
add
sub
pop
lahf
fyl2xp1
lret
test
popf
int3
int3
lock
in
push
push
push
or
adc
add
ja
in
hlt
jmp
jae
icebp
fisttpl
xor
adc
popf
out
lret
clc
add
cmp
daa
sub
pop
ss
add
add
clc
mov
xor
mov
int3
inc
cltd
jp
ja
icebp
push
out
sub
dec
sti
mov
mov
adc
sbb
in
es
je
data16
pusha
jmp
pusha
jae
and
jg
dec
mov
aam
out
hlt
push
loope
pushf
testl
sub
and
fldenv
add
jg
outsl
out
cmp
dec
jno
lods
lds
add
out
fiaddl
lcall
lea
xchg
or
lret
jg
mov
out
and
add
clc
enter
inc
sti
jge
fsubl
movsb
lea
jae
xor
icebp
gs
out
cmp
ds
jnp
add
mov
pop
cmp
and
sbb
push
or
stc
xchg
xchg
adc
or
adc
cs
test
add
jmp
pop
adc
mov
testl
jmp
jo
xchg
add
jmp
or
cli
push
adc
not
stc
jmp
not
stc
jmp
idiv
call
add
addl
add
cmp
je
pop
mov
int
orl
push
test
add
pop
add
popf
stos
add
popf
add
movsl
push
sbb
mov
les
add
dec
dec
push
out
orl
lds
add
icebp
or
cmp
mov
add
sbb
add
xchg
pop
cwtl
add
pop
nop
pushf
sbb
pop
orl
pop
addb
jmp
test
aaa
cld
jge
addb
jmp
into
mull
add
jmp
nop
shr
std
pushl
add
insl
adc
and
xchg
in
std
lcall
lods
in
jmp
pop
daa
sub
test
mov
add
hlt
push
or
bound
adc
pop
cmp
dec
adc
int3
mov
push
sub
ret
js
lock
push
jge
adc
or
adc
hlt
add
repz
push
divl
fistpll
hlt
add
dec
int
mov
and
or
jnp
cmp
aaa
movsl
pmuludq
fwait
mov
test
mov
ror
mov
enter
mov
jo
out
push
fiaddl
fisttpl
ret
inc
enter
enter
xor
add
add
add
sub
and
out
je
out
xor
add
imul
add
jmp
testl
ljmp
add
add
sar
jmp
mov
je
js
stc
jmp
hlt
add
jmp
cwtl
pop
or
testl
jmp
add
or
ror
lods
ror
lods
ror
cmp
stc
inc
les
dec
xchg
lods
cld
sub
sahf
rorl
jmp
lret
stos
testl
push
push
jmp
or
movb
add
add
mov
imul
int3
cltd
fwait
int3
int3
and
mov
stc
jp
lods
inc
dec
lea
loope
lea
flds
cld
into
call
testl
lcall
sbb
inc
clc
push
fisttps
hlt
scas
dec
dec
lock
add
lea
cmp
push
idiv
or
mov
mov
mov
int3
jmp
fwait
int3
int3
hlt
nop
js
lds
mov
repnz
and
jns
loopne
outsl
and
dec
inc
or
cmp
adc
mov
or
add
outsl
and
pop
outsl
mov
mov
mov
icebp
mov
add
out
ret
xchg
in
mov
jno
pop
and
jns
fsts
mov
ficoms
rolb
add
cld
psubsw
or
jl
fld
jo
clc
jge
fistps
shlb
mov
cmp
enter
es
adc
shll
mov
aaa
jle
push
mov
subb
cmp
lea
int
pusha
mov
aam
repnz
out
aaa
int
fldt
pop
das
add
inc
hlt
sarl
mov
clc
loop
jnp
pop
lods
test
loop
mov
jecxz
cmp
cld
mov
xor
int3
sbb
cmp
int3
sub
push
push
bound
mov
add
stc
fs
mov
js
add
cs
jo,pn
add
jmp
testl
insb
bound
cmp
stc
dec
sbb
int
jmp
push
into
jae
push
hlt
or
mov
xchg
mov
mov
pop
push
mov
int3
pop
sub
or
mov
test
add
shlb
adc
ds
dec
push
in
and
dec
add
fwait
inc
push
ret
sbb
jp
mov
shll
add
leave
int3
int3
xchg
mov
int3
int3
push
mov
in
mov
add
add
add
movsl
dec
add
sbb
add
inc
add
inc
in
idivb
push
cmp
add
popf
cmc
lahf
or
or
hlt
fnstsw
mov
inc
icebp
enter
leave
int3
xor
leave
int3
sub
pop
adc
call
outsl
sub
test
int3
jle
clc
repnz
push
aam
lret
test
lods
xchg
divb
dec
pushf
nop
inc
add
fcoml
cmc
ljmp
add
fsubrs
in
enter
icebp
jb
bound
pop
iret
add
shlb
shrl
sub
mov
pop
cld
xchg
vmread
out
hlt
jns
pushl
fiaddl
lds
pop
cltd
int
push
loopne
or
and
lds
jno
adcb
loop
push
add
add
sub
into
int
ficomps
xor
or
les
adc
lret
xor
iret
xor
jns
add
sub
sub
sbb
sub
dec
mov
push
std
outsb
push
inc
insb
aaa
pop
or
sub
mov
dec
sbb
mov
subl
stc
test
fbstp
cmp
or
leave
lock
and
rorl
mov
ja
ss
add
daa
xor
mov
iret
stc
scas
leave
das
pop
stos
in
add
lods
les
push
bound
push
cmp
stos
insl
add
enter
roll
popf
adc
add
push
test
or
into
test
je
jge
xor
ljmp
adc
rcll
test
je
jge
xor
and
add
add
pop
jbe
push
rcll
mov
int3
int3
mov
in
push
push
jle
sub
jg
cld
xchg
cmp
data16
jg
pop
and
or
sub
subl
fsubl
mov
pusha
or
movsl
in
mov
std
test
add
jo
jp
jge
shll
pop
mov
loop
aas
or
mov
push
call
bound
push
out
adc
pop
or
jecxz
aas
lret
sahf
push
add
lahf
jmp
bound
jge
push
out
add
cmc
test
add
stc
push
hlt
add
mov
jle
pop
int
pop
aam
fsubrl
pop
add
dec
jno
rorl
hlt
ja
add
into
out
jge
addr16
out
mov
xchg
jmp
jb
scas
mov
cli
pop
dec
stc
add
mov
xor
lcall
jns
pop
or
sub
mov
jge
inc
adc
push
inc
and
adc
add
push
addb
fisubl
fwait
pop
test
inc
addb
adcb
jnp
fcomip
add
xor
call
das
or
repnz
add
aaa
push
mov
scas
push
add
testl
insb
cmp
stc
jb,pn
sar
testl
xchg
cli
push
insb
ret
sub
mov
movl
mov
addb
mov
push
shl
add
int
les
sahf
mov
inc
rorl
lea
and
ret
lahf
add
add
mov
popl
add
inc
mov
xor
cmp
dec
call
add
les
add
push
add
push
mov
jns
push
mov
or
test
idiv
or
add
jae
jp
cld
push
inc
je
in
outsl
adc
call
mov
pop
push
xorl
cmp
mov
arpl
cld
outsl
out
shll
add
hlt
fldl
add
cmc
jmp
adc
movsb
push
das
je
pop
push
test
xchg
add
dec
fistl
sub
movsb
mov
call
outsl
popa
test
pop
mov
call
outsl
movl
stos
dec
mov
mov
sub
fdivr
ljmp
in
pop
jle
xlat
sar
jno
mov
cmc
jns
sbb
lds
add
adc
cmp
in
and
add
inc
mov
andl
xlat
jno
gs
in
fiaddl
int
cmpsl
ss
adc
jns
fildl
jbe
icebp
add
add
add
orl
sarb
pop
cmc
jns
sbb
lds
add
les
mov
xor
add
hlt
jns
addr16
data16
scas
sub
ja
ret
mul
les
sub
sub
jl
sub
cmc
jg
and
jg
dec
jg
pop
repnz
xor
add
or
mov
xor
add
jle
insb
bound
dec
fldcw
pop
push
out
stc
pop
jle
jge
inc
lds
gs
stc
inc
add
mov
call
adc
mov
xor
xor
dec
mov
push
or
xchg
lahf
stc
fisttpll
cmp
add
or
add
out
movsl
mov
ljmp
ret
popf
push
add
adc
decl
add
lcall
sub
inc
aad
inc
pop
out
imul
imul
dec
cmp
and
add
sbb
lea
out
fiadds
dec
inc
lea
xor
insb
and
adcl
scas
add
lea
hlt
sub
push
insb
pop
xor
dec
sbb
popa
test
sub
jne
sti
dec
lods
sbb
dec
test
adc
hlt
cs
jge
and
or
std
push
adc
dec
add
imul
or
std
push
add
bound
sub
push
jmp
dec
ss
mov
mull
popf
adc
lods
add
xor
mov
lcall
add
xchg
imul
out
jae
add
hlt
add
add
ret
add
int
pop
std
jns
add
add
mov
cltd
sub
call
add
lea
out
out
mov
gs
add
lea
fs
cwtl
test
mov
pop
int
push
repz
jbe
out
hlt
cmp
xor
xor
jle
xor
lods
lea
cmpsl
iret
xchg
add
jbe
jmp
iret
fnsave
dec
sub
bound
stc
xchg
cmp
bound
inc
bound
pop
or
add
add
dec
pusha
xor
add
cmp
out
testl
aas
clc
mov
pop
scas
sub
add
aas
icebp
mov
stos
movsb
or
sbb
cs
inc
push
jo
mov
push
insb
bound
xchg
jmp
add
cmp
xchg
mov
mov
or
add
push
add
add
xchg
add
add
pushf
push
int
test
sbb
sub
xchg
cmp
testl
and
add
add
orl
sarl
cmp
jecxz
sahf
les
sub
dec
push
movsl
adc
jl
mov
fidivs
rclb
sbb
jp
ja
in
cli
xor
add
das
pop
in
sub
and
jg
cmp
cmp
mov
lods
std
pushl
stc
add
xchg
adc
lods
push
cmp
outsl
ljmp
add
pop
test
push
add
stos
adc
inc
add
push
and
lods
std
test
adc
ja
in
xchg
icebp
fildl
xchg
test
jp
aaa
lods
fnsave
or
das
push
jns
test
lahf
ret
xchg
xchg
push
out
hlt
cmp
jge
pusha
insb
mov
pop
outsb
inc
faddl
sbb
pop
hlt
jmp
xor
add
jl
inc
xor
imul
in
bnd
subl
mov
mov
sarb
stos
shrb
adc
or
out
jno
pop
ds
mov
jns
mov
mov
jo
add
testl
jmp
testl
jmp
add
sub
std
mov
jle
pop
jb
xor
bound
std
or
xor
mov
dec
dec
inc
lret
push
sub
dec
inc
aas
or
dec
xor
jbe
jmp
xchg
fwait
je
and
dec
dec
dec
bound
xor
jmp
test
fadds
stc
add
dec
add
fs
pusha
test
addl
mov
orl
rolb
or
icebp
dec
call
mov
or
loopne
push
cmp
add
int
or
push
repnz
pop
jns
int
stc
jmp
push
cmpl
leave
sti
push
subps
incl
lea
ds
lcall
mov
and
sub
sub
inc
hlt
add
loopne
pop
int
and
adc
lods
jp
cld
xor
int3
ficoml
hlt
lods
arpl
push
mov
ljmp
insb
adc
lods
sbb
jnp
out
inc
out
xchg
add
repnz
mov
cmp
xchg
jl
std
incl
subl
std
jle
mov
std
mov
arpl
imul
jge
inc
hlt
cli
or
mov
xchg
cli
mov
inc
hlt
and
outsl
jbe
loopne
hlt
add
lahf
or
roll
hlt
nop
sub
out
ss
xor
push
lea
jle
add
sub
add
rcrl
js
pop
pop
sub
cs
icebp
xchg
sub
aaa
jno
mov
xchg
lock
push
scas
jns
daa
bound
sub
jg
dec
outsb
xor
and
pusha
hlt
inc
mov
testl
pop
stc
pop
insb
push
or
bound
add
jmp
repnz
jmp
add
xchg
fs
mov
into
shl
jg
adc
ret
add
jmpw
push
cwtl
lds
mov
jg
push
adc
cmpsl
adc
test
jb
adc
into
xchg
inc
mov
jp
clc
or
xor
or
xchg
jge
stc
call
cmp
push
add
aaa
cmp
xor
mov
mov
push
add
scas
shrb
add
nop
cmp
mov
sbb
add
loope
leave
xchg
add
jmp
xadd
cmpsb
jno
push
imul
xor
add
inc
and
addl
add
add
addb
test
movl
or
addr16
stc
cmc
aas
pop
stc
ret
pop
faddl
jp
lods
dec
inc
jg
pop
test
es
xchg
mov
mov
stc
lcall
adc
lods
jl
insb
fdivr
ljmp
pop
dec
out
push
cmpsb
pop
add
popa
orb
jle
hlt
lods
std
xchg
jl
push
and
idivl
add
add
inc
lock
pusha
push
out
pop
cli
insl
xor
adcb
jns
mov
stos
push
cmp
dec
fstp
add
mov
pop
jns
gs
dec
std
jb
cmp
std
movsb
repz
pop
jl
add
pop
test
roll
hlt
add
or
mov
cmp
jl
std
in
roll
mov
inc
push
cltd
fildl
aas
add
jg
inc
shlb
or
adc
cli
mov
push
pop
stos
cmp
int3
popf
cmp
int3
mov
leave
int3
lods
lods
leave
int3
cmp
test
sbb
pop
push
sub
or
cmc
sbb
mov
jg
icebp
test
sbb
or
aaa
les
jge
stc
jge
stc
mov
stc
js
add
dec
or
shll
cmp
xor
add
pop
add
mov
cmp
adc
stc
lcall
stos
stc
ljmp
mov
push
pop
pop
mov
mov
mov
mov
int3
cltd
insl
int3
int3
and
in
mov
mov
je
movb
popl
push
aam
daa
mov
adcl
mov
mov
pop
fbstp
in
mov
push
test
je
xchg
lods
jle
hlt
xchg
pop
dec
inc
daa
push
or
mov
add
pop
out
fcmove
lods
jbe
mov
cli
cmp
lods
adc
negl
fimull
jns
push
adc
cld
jnp
push
ret
mov
ret
stc
jnp
and
and
les
dec
and
mov
js
adc
ret
iret
outsl
jmp
mov
push
insb
jbe
in
and
and
jbe
stc
adc
test
dec
cld
ret
andb
cld
add
mov
shrb
mov
mov
repz
clc
sbb
xor
out
fdivrl
imul
in
out
aad
in
jg
and
push
fisttps
dec
cmp
or
jmp
test
daa
stos
adc
js
fdivrl
pop
sub
out
fiaddl
jg
cmp
scas
enter
add
movl
les
add
pusha
inc
lock
jo
rcrb
dec
xchg
mov
mov
insb
aas
and
daa
lods
iret
push
std
shlb
dec
pop
jb
pop
pop
sub
mov
repz
stc
inc
adc
ror
xor
repz
add
add
test
inc
jmp
add
inc
pop
in
testl
cmp
mov
sbb
mov
call
push
and
lret
in
call
pop
mov
lret
mov
fsts
inc
or
jne
daa
mov
pop
pop
push
ret
mov
in
or
fldl
xor
mov
lods
cmpb
jo
sub
inc
or
lret
lods
dec
sub
dec
call
push
cmp
sbbl
mov
add
mov
ret
cmp
mov
lds
cmp
cmpb
mov
push
or
dec
xor
imul
movsl
insl
movsl
and
fwait
std
test
push
mov
or
js
push
add
out
dec
int3
stos
bnd
and
ja
or
and
repnz
mov
inc
sub
fcomip
xor
xor
mov
sahf
std
test
add
iret
pop
mov
lock
daa
pop
pop
test
ret
icebp
mov
jg
or
outsb
pop
xorl
mov
lods
roll
icebp
add
test
pushf
add
adc
testb
cmp
xchg
gs
add
xchg
lock
ss
pmuludq
mov
pop
adc
inc
jge
lock
pop
popa
in
jge
mov
cmc
push
outsb
cmp
jge
mov
pop
iret
mov
movsl
stos
inc
pushf
add
add
subl
hlt
add
out
adc
inc
hlt
jnp
or
ja
adc
xor
add
jg
add
jmp
adc
jnp
idiv
xor
add
cli
pushf
dec
mov
sbb
jl
out
xchg
clc
int3
jge
pop
pop
ficompl
sub
std
xchg
cmc
sub
add
add
xchg
adc
jmp
icebp
jns
aad
test
outsl
push
sbb
es
xchg
add
add
sbb
loopne
jo
or
call
or
shrb
add
jmp
inc
pop
mov
ljmp
incl
jae
jnp
shll
pop
or
jl
jne
jp
sub
jg
in
or
in
inc
sbb
stos
idivl
add
jbe
add
pop
add
data16
push
pusha
add
pop
stc
jl
and
stc
decl
arpl
mov
adcl
add
push
dec
pop
cmpsb
or
jle
negb
movb
ficomps
xchg
inc
out
icebp
or
adc
jb
and
or
hlt
xor
mov
pop
std
test
stos
xchg
std
jl
scas
cs
ja
mov
adc
popf
or
jg
into
loopne
pop
ret
icebp
mov
adc
pop
test
sbb
push
adc
popf
mov
hlt
mov
repnz
fistpl
inc
hlt
popf
lret
add
inc
adc
cmpsl
cmp
cli
jg
ret
adc
mov
mov
out
hlt
add
sbb
sbb
int3
add
dec
mov
pop
inc
or
xchg
stos
es
add
pop
mov
mov
add
roll
mov
lds
js
testl
lea
rorl
add
out
mov
lods
out
icebp
stos
add
add
iret
test
pop
xchg
sbb
mov
jmp
push
sbbl
roll
pop
adc
cmp
add
mov
mov
dec
jmp
cwtl
dec
push
jmp
jle
sbb
mov
cmpsl
stc
jmp
mov
cld
jmp
testl
in
add
int
xor
ret
push
clc
ljmp
test
lret
shrb
or
pop
testl
gs
and
sarl
push
adc
dec
push
add
push
in
pop
pop
or
jge
in
movsl
dec
in
pop
push
dec
push
mov
or
clc
test
xor
mov
fisubrl
aas
adc
int
stc
ljmp
jp
int
sbb
dec
dec
pop
add
cmp
mov
shl
inc
push
les
mov
push
mov
push
pop
mov
xor
inc
jns
sub
jl
adc
mov
fwait
sub
jl
cmpsl
mov
jo
test
cltd
nop
mov
or
std
ljmp
mov
aam
push
stos
or
fldl
mov
std
push
popf
mov
jmp
or
or
std
push
and
inc
outsl
mov
mov
jge
test
insl
hlt
add
add
pop
jg
xor
lea
adc
mov
sub
jo
fucomi
lods
inc
pop
push
cld
jge
mov
add
add
lea
shl
adc
lods
push
out
jno
pop
lea
scas
stos
adc
add
add
jnp
mov
inc
push
aas
icebp
pop
add
jo
in
jnp
scas
sbb
add
jnp
incl
adcl
shrl
add
add
add
add
xor
add
testl
jmp
in
xorb
testl
sub
hlt
jb
in
sub
add
push
orb
cmp
insb
xor
jb
inc
xor
bound
jge
rep
inc
inc
bound
lods
jge
jnp
je
addb
or
adc
add
add
add
adc
dec
clc
push
inc
sbb
push
call
mov
push
cmp
add
jns
clc
pop
test
push
in
test
or
mov
add
add
not
adc
adc
add
add
es
add
add
rcrb
add
pop
or
lea
hlt
inc
out
mov
xchg
test
mov
sbb
je
xor
fbld
insb
jmp
dec
aam
fcomps
inc
xor
push
clc
ja
mov
inc
pusha
add
cld
out
stos
inc
add
push
pop
or
cmp
cmp
movsl
jmp
std
incl
jg
mov
inc
and
inc
cld
imul
jge
adc
addb
fwait
std
in
pop
cmp
jno
sub
mov
scas
std
sar
out
add
add
ds
in
hlt
sbb
subb
out
hlt
add
cmp
adc
add
pop
in
das
mov
and
dec
insb
or
add
pop
cmc
xor
in
pop
sbb
mov
lcall
dec
jle
sbb
mov
xchg
mov
add
out
hlt
cs
ss
add
out
mov
add
std
xchg
testl
jmp
xchg
and
lock
add
add
mov
lret
loop
cmpsl
out
mov
hlt
mov
fidivl
mov
enter
jmp
lods
or
addb
mov
ss
inc
shrl
das
mov
or
add
mull
jns
testl
bound
movl
add
add
addl
push
clc
lret
add
or
and
decb
sbb
add
ficoml
mov
flds
scas
andb
lcall
pop
push
push
add
jne
push
add
into
sar
add
cltd
or
push
inc
cld
xchg
lret
loopne
mov
add
test
clc
add
mov
cwtl
test
dec
add
negl
stc
adc
mov
aaa
lods
in
repnz
hlt
stos
std
jl
scas
pushf
stc
out
stos
std
test
mov
jnp
mov
add
stos
std
incl
or
in
cs
std
pop
or
jmp
lcall
stos
sub
je
push
add
stos
jp
in
jb
sbb
stc
inc
add
mov
add
stos
in
cs
std
sbb
cli
decl
add
roll
ds
in
in
and
in
mov
std
pushf
scas
jno
mov
jb
clts
int3
test
jecxz
mov
repnz
lahf
repnz
lds
adc
jmp
leave
mov
fisttpl
jae
daa
leave
cmc
push
out
hlt
packssdw
add
enter
add
mov
inc
jae
fwait
xchg
arpl
add
jl
mov
add
mov
mov
and
adc
jb
mov
jnp
or
push
add
pusha
dec
hlt
jb
popf
test
jb
jmp
testl
add
cmp
inc
adc
xor
push
adc
scas
aaa
test
loopne
add
out
xor
insb
shr
ljmp
mov
add
jmp
dec
cld
bound
ret
stos
pushf
std
shlb
sbb
lds
std
mov
rorl
add
ret
jecxz
xchg
loopne
xchg
setge
add
add
add
dec
add
jg
hlt
clc
fstpl
aas
fs
inc
pop
rsqrtps
clc
push
lcall
inc
test
add
int
adc
cli
xor
rorb
mov
sti
jb
xorl
add
psrlq
testl
inc
jnp
inc
and
hlt
stos
lds
stos
das
fiaddl
outsl
out
sbb
arpl
add
lcall
push
fildll
cmp
insb
or
xor
cs
adc
push
je
cmp
xchg
addr16
inc
or
mov
add
sub
insb
jge
jl
mov
xchg
lock
add
add
stos
std
dec
sub
std
add
add
add
icebp
imul
std
add
aad
hlt
mov
cltd
enter
mov
inc
sti
add
loop
hlt
add
jp
and
inc
push
fisubrs
add
add
and
add
add
mov
adc
pop
ljmp
nop
sub
mov
lods
mov
leave
ret
or
jmp
in
xorb
jb
and
jno
mov
jns
sbb
ret
sub
add
testl
xor
adc
cmpb
xor
test
pop
mov
cmp
and
mov
and
mov
push
mov
add
fwait
stc
jmp
mov
or
and
jge
not
out
jp
mov
push
cwtl
add
jnp
or
testl
loopne
and
or
xchg
cwtl
scas
cli
mov
push
addl
scas
int
jl
icebp
cwtl
movl
add
adc
sbb
add
add
jnp
push
jecxz
fs
mov
jg
add
push
pop
adcl
orl
add
test
push
jmp
add
sbb
lea
pop
mov
imul
push
fcmovnu
inc
push
or
xor
and
clc
pop
mov
jns
ja
std
jl
scas
jl
dec
insl
cltd
std
add
ja
mov
ret
sbb
sti
flds
stc
mov
jns
daa
dec
jns
shrb
ret
lds
faddl
mov
lods
cwtl
test
jmp
xchg
clc
ret
and
mov
mov
stos
std
jg
adc
testl
add
sub
ljmp
pop
roll
loopne
insl
inc
pop
lods
out
mov
pop
cmp
cltd
sbb
mov
cmp
fwait
add
add
psubq
test
add
add
xchg
add
jg
jmp
add
testl
push
mov
jl
dec
je
movsb
add
add
cmp
push
sub
out
xchg
cwtl
out
jg
add
pop
incl
not
call
sub
mov
push
in
mov
iret
xor
call
shlb
in
and
jmp
cwtl
inc
sbb
push
incb
jo
sbb
mov
sbb
add
add
add
testl
jmp
testl
fwait
std
pop
jnp
repnz
stc
add
fwait
test
sbb
adc
or
out
fisttps
sub
adcl
sbb
xor
sbb
mov
lock
outsl
cmp
xchg
inc
call
add
push
or
jge
dec
clc
xlat
sti
cs
dec
lds
out
add
cmp
jmp
push
fstl
int3
add
add
popa
mov
add
stos
std
push
arpl
mov
cmp
stc
xchg
mov
jge
scas
xor
arpl
daa
cld
hlt
mov
mov
add
stos
std
or
and
push
mov
mov
jmp
lods
std
int3
adc
xor
stos
dec
xlat
push
add
and
mov
out
mov
mov
std
lcall
std
ljmp
ret
and
aam
add
add
gs
out
nop
mov
add
mov
jnp
mov
jp
nop
test
add
test
sub
sub
jno
pop
testb
test
in
add
out
mov
jle
out
hlt
add
sub
add
jg
jmp
add
dec
in
cs
jp
mov
out
std
pop
and
aaa
test
pop
imul
out
mov
fmuls
push
xor
icebp
mov
lods
mov
inc
test
js
inc
std
mov
or
adc
std
stos
pop
fcmovb
jbe
std
mov
xor
and
repnz
gs
call
scas
aas
in
pusha
push
out
sahf
cmp
add
call
add
add
leave
and
shrb
call
cltd
add
out
cld
add
add
je
push
aam
pop
jmp
jbe
pop
loope
cltd
pop
add
cmp
loope
push
inc
dec
ficoml
addl
shlb
jae
sbb
and
pop
add
into
ljmp
pop
pop
pop
mov
push
lret
loopne
filds
clc
add
lret
aad
stc
lcall
push
dec
and
aas
inc
mov
mov
std
jmp
aas
mov
sub
add
fwait
std
ljmp
inc
mov
cmp
sbb
cmp
insb
daa
mov
popf
movsb
hlt
mov
adc
sub
pop
and
hlt
mov
iret
add
fwait
std
or
daa
into
int
daa
dec
pop
mov
or
arpl
pushf
std
int3
adc
dec
push
jge
fwait
dec
xlat
pop
mov
movsb
push
mov
adc
adc
andl
outsl
push
rolb
int
aas
inc
adc
jnp
mov
hlt
mov
aas
test
add
add
jg
in
sub
jns
outsl
adc
sbb
cld
add
lret
data16
fiaddl
in
pop
in
cs
mov
inc
out
in
pop
movsb
mov
add
out
xor
scas
incl
mov
lods
add
xor
inc
cmp
sbb
fcmovb
mov
mov
mov
inc
adc
clc
jge
repnz
gs
call
outsl
cmp
xchg
mov
or
cld
shrb
fnsave
clc
cmpsl
pop
jmp
add
mov
pop
cmc
jl
add
inc
dec
scas
add
cmc
call
lds
jmp
cld
adcl
push
testl
inc
jnp
lds
clc
into
dec
xor
stc
aad
mov
mov
shr
mov
stc
inc
push
pop
jecxz
or
call
pop
add
sbb
add
shll
inc
loopne
aas
lock
adc
and
les
cmp
xchg
outsl
or
or
das
stc
push
popf
mov
mov
jb
mov
test
and
lods
add
lods
fwait
push
xor
xchg
xchg
fmuls
fdivr
fcoml
adc
stos
or
movsl
and
insl
popa
mov
cmp
test
and
add
fldl
xchg
repz
test
and
pop
icebp
stos
xchg
fwait
nop
inc
hlt
and
jle
add
mov
inc
lcall
mov
repnz
add
sbb
out
pop
xchg
out
js
call
stos
jp
cmpsl
mov
in
inc
cmp
jnp
stos
mov
roll
hlt
add
hlt
lcall
push
jo
out
hlt
addl
sub
add
fiaddl
in
push
in
mov
movsb
and
cmp
lahf
subb
cmp
inc
leave
push
inc
lock
cld
daa
or
inc
cmc
js
loopne
aaa
sbb
jb
pushf
test
add
cmp
mov
sub
je
mov
add
out
call
cld
mov
stc
jbe
adc
outsb
dec
lock
movsl
test
in
jmp
add
dec
testb
cmp
jmp
hlt
dec
test
rolb
jmp
test
or
mov
inc
add
mov
or
ja
sbb
or
xor
stc
push
pop
jge
add
test
and
movsl
jl
push
add
test
add
shlb
cli
pusha
imul
adcb
fadds
xchg
enter
jl
or
inc
sbb
imul
mov
incl
add
imul
pop
hlt
mov
test
adc
or
loopne
xchg
xor
insl
aad
xchg
test
pop
sti
pushf
std
pop
jg
cmp
daa
adc
add
fwait
std
mov
pushf
std
in
loop
fdivrs
popa
add
dec
lock
lock
add
add
mov
adc
add
std
xchg
les
test
adc
test
add
pushf
out
pop
or
roll
inc
in
inc
adc
sbb
sbb
ret
andb
adc
xchg
fwait
std
mov
pop
sub
or
xchg
out
xor
ffree
repz
add
add
aas
out
add
icebp
out
loopne
lret
jnp
mov
aam
mov
add
xchg
por
pop
jns
out
mov
jmp
add
jle
sti
adc
pop
int3
testl
sbb
jge
dec
adc
call
std
adc
jmp
testl
add
cmp
int
pop
inc
jge
ljmp
xor
sub
add
xchg
repnz
add
fnstenv
je
je
jb
or
add
test
data16
jle,pn
push
popa
jb
stc
push
into
and
popa
xor
pop
add
ret
and
into
and
mov
cmp
add
xchg
cmp
cltd
cltd
cmp
sbb
pushf
cmp
pop
popf
cmp
jno
cmp
into
lcall
mov
cmp
loopne
cmp
aam
cmp
test
cmp
push
mov
add
cmp
mov
scas
cmp
jae
cmp
imul
cmp
arpl
cmp
hlt
push
fstpt
hlt
js
cmp
rcr
hlt
loop
cmp
stc
fidivrl
pop
sarl
and
cmp
pop
int
hlt
or
cmp
push
ror
pop
ror
call
or
jns
or
jg
testl
push
and
inc
or
xchg
iret
ja
add
cmp
aas
and
dec
cwtl
rolb
ja
add
xor
aam
cmp
add
add
cltd
lea
jmp
test
sbb
inc
mov
sub
xor
movsb
or
imul
icebp
insl
xor
jns
clc
test
xor
mov
shr
popa
jp
hlt
jo
cmp
xor
mov
shr
cmpsb
enter
enter
add
mov
mov
sbb
jns
testl
fdivs
pop
xor
xor
add
outsb
xor
xor
cwtl
xorb
xor
inc
jae
sahf
xor
sub
aaa
test
sti
xor
sub
stc
mov
aaa
mov
int3
mov
mov
add
add
mov
test
or
idivl
in
outsb
xor
cmp
adc
bound
adc
cltd
jbe
or
mov
adcb
incl
clc
data16
add
mov
xor
lods
mov
int3
add
dec
int3
int3
rorl
int3
jnp
ljmp
lea
fisttpl
jae
or
loop
pop
add
add
or
pop
cmc
cmpsl
and
cmpsb
dec
push
into
lcall
sbb
test
pop
scas
adc
mov
jns
orb
add
mov
mov
or
xor
cli
cmpsl
and
lods
std
and
popa
jp
shrb
mov
add
insl
std
ljmp
jp
shrb
cmpsl
or
xchg
add
insl
rolb
jns
in
hlt
out
mov
popa
xchg
fistpll
hlt
in
sahf
stc
hlt
insl
std
sub
loopne
sub
lods
mov
xor
mov
sahf
stc
hlt
imul
add
and
rclb
jns
out
hlt
out
mov
add
add
loope
add
xchg
hlt
add
rolb
mov
xor
lea
xchg
hlt
add
mov
xchg
mov
outsb
filds
hlt
xor
cmpsl
add
sub
mov
daa
add
data16
add
or
xor
test
in
pop
adc
add
add
add
add
jl
push
leave
and
jo
add
clc
xchg
test
sbb
std
inc
lods
push
test
testl
aad
ret
mov
jmp
insb
lods
and
xchg
or
or
add
add
shl
and
add
xchg
jnp
jmp
iret
cs
jmp
mov
jge
pop
mov
bound
out
cmp
push
testl
int
add
mov
cmpsl
sub
lahf
sbb
shl
and
sbb
xor
lea
push
leave
mov
decl
lea
add
popf
add
ficompl
or
dec
push
std
pushf
mov
cmp
mov
jmp
pop
std
pushf
cmp
pushf
cmpsb
testl
shl
inc
or
nop
idiv
sahf
xchg
add
mov
pop
cmp
pop
jl
imul
incb
add
loop
mov
outsl
lds
hlt
insl
std
sub
call
outsb
jl
mov
jmp
rcr
pop
push
xor
loop
hlt
insl
std
sub
call
test
lock
das
push
jno
adc
fs
sysret
push
jge
inc
insl
std
pushl
add
mov
ds
test
stos
mov
in
jg
add
leave
inc
cmp
add
and
add
sub
rorl
test
out
mov
call
daa
fadds
lcall
mov
cmpsl
nop
gs
add
dec
out
add
add
jbe
jp
andl
jle
add
add
mov
insb
daa
sbb
mov
xor
xor
inc
mov
dec
jge
cwtl
jecxz
hlt
xor
add
lcall
imul
scas
push
add
imul
jmp
mov
int3
mov
push
int3
lods
mov
int3
sbb
jno
bound
adc
test
test
loope
jmp
sbb
sti
add
mov
pushf
mov
out
mov
stc
fmulp
sbb
xchg
ds
outsb
shr
sbb
push
cli
fcoml
jmp
jecxz
add
cmp
jge
add
pop
cmp
sbb
jle
adc
jle
sbb
and
rorl
shrl
cld
mov
pop
adc
or
pushf
adc
int
mov
xorb
push
test
push
rorl
inc
xchg
mov
jg
pushl
inc
adcl
inc
or
jg
jmp
fcompl
stc
fwait
mov
jge
push
sub
mov
int3
sub
ror
sbb
ja
faddl
divl
jge
pushf
test
sbb
push
jge
movsb
test
cmp
mov
ja
mov
repz
in
cmp
insl
std
xchg
decl
insl
std
xchg
pushl
jnp
ljmp
xchg
lcall
jnp
ljmp
xchg
incl
jnp
loopne
out
jns
outsl
das
icebp
add
sarb
loop
aas
imul
out
fnstenv
jnp
pop
pusha
push
add
mov
jae
faddl
hlt
add
jle
add
add
outsl
das
stc
add
jp
jno
into
sarl
stos
push
sub
movsb
xchg
pop
ds
clc
cld
fs
push
add
mov
js
incb
mov
mov
mov
ffree
pop
push
push
jecxz
xchg
add
cmp
jecxz
push
fiadds
mov
fbstp
mov
sahf
sub
std
sahf
pop
lods
leave
call
idivl
xchg
jne
je
mov
js
ja
out
dec
push
js
pop
add
pop
sti
jb
jl
and
add
and
cmc
mov
test
cmp
cmp
testl
repnz
loop
add
clc
in
mov
add
add
add
push
jp
xchg
add
rcll
or
cli
mov
ret
call
call
and
mov
xor
test
gs
pushf
pop
mov
stc
je
push
mov
cmp
pop
or
add
fldl
add
cld
fcoms
insb
loopne
cmp
add
add
jnp
jl
add
cli
inc
imul
shrb
mov
mov
pop
cmpb
mov
push
jmp
pop
in
ja
add
fsts
push
outsl
inc
and
cmp
jnp
ja
hlt
dec
dec
aaa
jnp
jg
divl
add
jle
xchg
jo
sti
loopne
add
lods
or
insl
repz
hlt
call
xchg
hlt
aas
jbe
jae
jp
sti
cmc
jae
hlt
insl
test
repnz
jbe
jo
outsb
pop
cld
lea
cltd
mov
add
decl
inc
jnp
add
std
xchg
add
out
sbb
insb
ret
mov
or
out
and
add
and
jle
std
repz
out
push
ficoms
add
decb
mov
in
add
xor
lods
daa
or
jbe
add
icebp
loopne
aam
dec
jmp
add
xchg
jo
add
jmp
sub
push
sub
imul
mov
add
orl
mov
pushf
mov
leave
push
jb
or
aas
mulb
into
ds
insl
shll
stc
jae
pop
mov
mov
add
testl
jae
add
scas
xor
add
xchg
jge
in
add
scas
mov
jge
push
aas
jbe
jmp
in
je
xchg
mov
add
mov
dec
xchg
cmpl
mov
or
pop
test
add
clc
cmpxchg
lcall
mov
add
mov
jmp
add
sub
ret
jle
insl
mov
jge
add
or
mov
pop
or
or
cwtl
and
cmp
mov
cltd
jnp
cwtl
in
stc
jmp
xor
pop
jo
sbb
insb
jbe
push
jl
incl
inc
incl
push
xlat
xchg
mov
into
inc
adc
pop
jbe
pop
pop
jmp
jl
pop
std
popa
daa
add
pop
test
jmp
sub
daa
rcll
pop
je
incl
jmp
xchg
psubb
addb
jns
add
pop
std
xor
lcall
jmp
ja
push
push
std
push
push
xchg
jo
std
out
add
push
or
xchg
jo
lock
hlt
jge
xchg
push
pop
inc
jns
std
outsl
aas
nop
ljmp
jno
cli
jns
lods
icebp
add
jl
bnd
add
lods
sbb
call
xchg
xor
xor
lock
add
add
jg
inc
push
add
call
fnstenv
ljmp
mov
mov
add
jge
mov
pop
dec
push
add
pop
inc
test
in
add
ljmp
mov
mov
std
stos
outsl
mov
add
push
inc
mov
stc
jbe
jb
jmp
add
mov
jb
rorb
xchg
mov
xchg
arpl
int3
or
lock
push
std
addl
inc
adc
adc
nop
pusha
incb
jno
sti
test
push
add
jp
jmp
int3
dec
or
mov
orb
push
or
mov
icebp
pop
mov
push
add
mov
or
pop
shll
push
add
dec
push
icebp
mov
inc
push
add
mov
test
sbb
pop
mov
orb
cmp
data16
mov
push
and
mov
loope
addl
pop
adc
insb
or
add
hlt
pop
mov
in
or
mov
jnp
pop
aad
gs
sub
sbb
outsb
jge
int3
mov
adc
mov
ljmp
fimull
arpl
int
adc
pop
cmpb
pop
mov
jl
je
mov
pop
std
incl
das
test
sbb
idivb
leave
add
sahf
or
hlt
hlt
shr
pop
mov
cmp
xchg
add
or
aaa
sbb
dec
sbb
add
or
jnp
push
sub
pop
int3
sti
jp
mov
call
push
out
jns
push
add
js
sbb
leave
push
pop
jnp
jnp
fsubr
jae
xchg
pop
sbb
add
xlat
dec
out
mov
add
add
orl
jl
sbb
add
or
add
add
jnp
sbbl
add
mov
out
mov
daa
aam
push
fldl
bound
jecxz
pop
jg
add
adc
arpl
adc
idivl
push
adc
nop
fldl
jb
scas
push
mov
add
nop
jne
add
inc
add
int3
push
jo
in
pusha
addr16
jmp
outsl
adc
jmp
mul
int3
lret
adc
nop
mov
mov
call
add
mov
out
add
movsb
jg
clc
push
cmpl
dec
mov
dec
in
jmp
add
add
nop
in
add
es
or
add
cmp
add
cmpl
dec
or
cwtl
mov
dec
add
mov
pusha
push
dec
mov
int3
out
cmpsb
push
icebp
lea
inc
push
add
jg
mov
psubq
test
pop
add
ret
dec
loope
jg
mov
push
pushf
out
add
pop
shl
jge
mov
mov
std
pushl
js
lods
gs
push
insl
adc
mov
jecxz
lea
and
xchg
jl
adc
mov
div
adc
mov
dec
in
in
or
mov
jnp
pop
aad
add
daa
xchg
add
insl
xchg
inc
rorb
hlt
loop
mov
fsts
inc
push
lret
xchg
pushf
adc
add
ljmp
jg
js
push
pusha
test
lods
insl
add
add
stos
pop
out
hlt
pop
add
mov
add
add
add
push
hlt
add
imul
add
hlt
xchg
std
xorl
frstor
cmp
push
cmp
add
add
jmp
subb
testb
je
add
cltd
fnstcw
fisubs
push
xchg
out
ja
pop
add
insb
xlat
pop
arpl
adc
idivl
test
arpl
jg
std
add
jb
outsb
mov
lock
loope
add
push
push
scas
fstps
out
xor
xchg
mov
jo
lods
adc
negl
xchg
mov
rcll
xchg
cld
orb
xor
mov
aas
or
or
push
add
jp
or
inc
xchg
add
add
daa
xchg
mov
popf
add
inc
or
inc
cmc
mov
push
add
mov
mov
pop
ret
fnstcw
and
mov
aam
mov
adc
fbld
fs
loop
std
jl
pop
mov
outsl
cwtl
or
add
fidivrs
ja
add
stos
mov
arpl
call
dec
std
ljmp
or
jp
push
add
cmc
clc
push
cmc
das
adc
hlt
repnz
jg
or
cmp
test
loop
mov
sub
adc
and
int3
mov
inc
hlt
jge
mov
hlt
pop
filds
hlt
ret
daa
add
pop
adc
add
inc
add
jge
mov
add
jl
in
jbe
add
add
mov
out
mov
stc
xchg
negl
add
scas
imul
jl
loop
bound
out
out
xchg
mov
out
in
scas
jno
out
out
inc
std
outsb
sbb
and
in
scas
push
mov
adc
repz
adc
xchg
adc
add
adc
sbb
leave
push
pop
stos
call
call
leave
loop
outsl
mov
add
outsb
xchg
mov
lret
cld
mov
in
daa
add
jmp
inc
lock
adc
imul
mov
div
add
shrl
pmaxsw
clc
mov
orb
jnp
jge
add
jb
pop
dec
xchg
cmp
test
mov
add
add
call
pop
insb
stc
push
mov
jecxz
xor
int3
sub
push
mov
sub
mov
mov
add
xor
mov
pop
add
pop
rolb
add
ds
mov
std
scas
adc
jns
cwtl
cmp
add
lret
adc
in
mov
jns
cld
pop
roll
test
rclb
adc
fldl
and
mov
xor
jmp
into
data16
loop
dec
movsl
inc
add
xchg
xchg
cwtl
mov
dec
cmc
xchg
out
aas
adc
pop
stos
cwtl
lods
insl
std
jg
or
add
pop
std
clc
mov
xchg
int3
adc
jne,pn
ljmp
mov
or
add
xchg
jge
ficoms
pop
std
cld
sub
test
mov
std
jmp
mov
mov
jo
inc
xlat
test
outsb
std
filds
cmp
mov
outsb
stc
decl
jmp
popa
jno
cli
je
or
jl
roll
hlt
xchg
sldt
add
add
jbe
clc
icebp
lods
pop
sahf
icebp
add
lahf
vmwrite
insl
xchg
pusha
sti
out
sbb
cs
enter
mov
add
ljmp
shrb
dec
loop
mov
lret
adc
mov
jecxz
hlt
lahf
testl
jae
jle
inc
or
jmp
pusha
js
in
mov
jo
jae
cmp
mov
push
or
notb
add
cltd
add
adc
xchg
jl
div
add
mov
jg
mov
pop
stc
mov
adc
loopne
dec
movsl
imul
stc
add
dec
outsl
jge
xlat
testl
jmp
add
je
push
add
sbb
mov
add
cli
mov
fisttps
mov
faddl
je
sub
cmp
lea
dec
push
add
push
sbb
test
jae
fimuls
lds
scas
cwtl
mov
add
cmpsb
pop
or
inc
and
scas
cwtl
push
incl
xchg
xchg
loop
mov
or
and
mov
inc
lock
inc
add
repz
lcall
adc
scas
pop
cmp
push
cmpsb
jnp
dec
cmp
ljmp
aad
sti
jne
add
jae
repnz
sti
jns
lock
stos
std
in
cmp
test
mov
or
mov
add
add
out
mov
add
std
dec
add
add
cmp
out
or
subb
xchg
push
dec
jp
cld
cli
pushf
inc
std
jmp
test
and
jne
in
mov
sbb
xchg
outsl
lods
push
add
outsl
por
out
xor
aaa
adc
dec
leave
push
lea
jae
jae
mov
hlt
add
fcomps
outsl
stos
mov
out
push
pop
shr
out
jns
or
out
sub
add
mov
lret
add
sar
mov
add
fdivl
sub
mov
shll
add
mov
adc
add
jmp
cmc
mov
inc
pop
bound
jecxz
pop
add
add
aaa
sbbb
incl
das
data16
or
testl
test
repnz
call
call
bound
pushf
adc
testl
mov
fistpl
xchg
add
testl
jns
repz
call
add
fiaddl
pop
push
out
ret
popa
push
int3
int3
sbbl
int3
int3
inc
push
mov
lea
jbe
add
enter
insb
jl
lea
inc
faddp
add
mov
clc
pop
xor
pop
xorl
add
insl
xor
mov
add
pop
adc
add
sbb
and
add
sbb
add
mov
inc
orl
faddl
add
sub
add
imul
shrb
push
outsl
pushf
jge
cmc
push
inc
inc
lds
jno
jmp
mov
shrb
mov
ja
adc
outsl
mov
lods
pop
std
ljmp
adc
in
les
add
fisttpll
test
movntps
jl
pop
cmp
scas
adc
imul
ja
cmc
jnp
add
sar
das
sbb
adc
repnz
mov
out
int
fiaddl
hlt
pop
or
popf
icebp
add
mov
fwait
aas
test
mov
rorb
mov
inc
repz
sub
ljmp
mov
jno
out
jnp
cmc
cmp
out
lahf
pop
jns
fdivrp
test
adc
ja
xchg
adc
fidivrs
lock
mov
add
xlat
xchg
les
mov
mov
lea
xor
int3
mov
dec
int3
lods
xor
int3
sbb
imul
add
mov
sahf
sbb
jp
not
cmp
sbb
lds
bound
testl
or
pop
jae
push
iret
jno
cmc
clc
test
mov
push
iret
sub
or
in
pop
inc
cmc
sub
test
xchg
cwtl
or
mov
cmp
push
or
mov
pop
clc
inc
loope
jle
adc
push
pop
call
fucomi
cmpl
lea
out
leave
adc
std
int
roll
adc
data16
xlat
pop
add
pop
mov
repz
mov
push
sarl
push
mov
rolb
jge
xor
popa
xor
call
add
idiv
hlt
mov
arpl
lret
test
jns
int3
xor
in
ja
testb
jns
in
out
or
add
pop
cmp
dec
shrb
push
imul
jb
adc
hlt
xor
add
loopne
jp
or
sbb
hlt
imul
push
std
jge
lea
add
add
imul
mov
cmp
add
imul
push
into
shl
iret
xor
cmpsl
cs
fwait
cmp
hlt
add
call
jmp
ss
popa
aam
add
repnz
lea
cmp
add
fisubrs
jne
imul
icebp
out
hlt
push
jno
push
add
add
add
hlt
add
test
jp
xor
mov
lea
pmuludq
push
xchg
mov
push
inc
test
add
cmc
lcall
int3
pop
stc
mov
inc
add
xchg
push
jl
lcall
out
mov
add
mov
jmp
mov
jnp
loop
add
pusha
add
adc
neg
jno
orb
add
andl
add
mov
in
add
mov
jmp
lods
add
jmp
testl
lods
push
push
stc
add
fcoms
xchg
add
icebp
xchg
hlt
xchg
or
dec
or
add
aaa
mov
mov
push
cld
push
mov
in
mov
adc
add
mov
adcb
mov
mov
mov
add
int
arpl
push
les
in
sub
les
add
add
in
testb
adcl
adcl
loop
pop
jge
jle
ljmp
test
cmp
pop
xor
std
out
stc
addr16
mov
sub
int3
cmp
xor
xor
xor
sub
lock
add
mov
incl
cmc
call
sbb
std
pushl
jnp
hlt
imul
lods
xchg
popa
stc
jns
xor
test
lahf
clc
mov
imul
add
pop
stos
mov
sub
call
add
test
in
add
add
fdivr
mov
or
out
rcrb
add
cli
movsl
ret
and
gs
faddl
hlt
add
xor
mov
rol
fnstsw
pop
out
add
add
pop
clc
xchg
add
fs
mul
jne
sti
out
push
dec
das
jns
add
roll
hlt
mov
orb
jne
sti
out
cs
pop
addl
call
sub
sub
into
pusha
test
add
push
jns
inc
mov
mov
out
aas
inc
inc
fidivs
or
loopne
lea
jmp
dec
idiv
call
sti
add
aaa
add
adc
testl
bound
mov
mov
or
mov
je
in
jo
nop
adc
testl
add
fstpt
repnz
fiaddl
pop
mov
test
push
dec
pop
orl
add
xchg
inc
add
add
or
test
les
dec
mov
int3
leave
or
int3
leave
or
int3
nop
int
mov
fdiv
decl
int3
jmp
push
int3
push
adc
lret
insb
or
test
popf
push
add
xchg
cmc
add
lret
xor
incb
fs
bnd
xchg
inc
jb
or
std
inc
subl
jmp
mov
adc
jmp
ret
jg
in
cmp
adc
mov
adc
pop
js
push
push
std
pushl
idivl
ds
sbb
std
insb
mov
sti
in
call
jno
clc
es
jno
or
fcoms
jg
notl
in
mov
test
hlt
out
pop
std
pushl
popa
mov
add
pop
add
mov
add
dec
in
mov
add
xchg
mov
out
jno
rclb
out
shlb
push
jge
not
sti
push
adc
outsl
cli
sub
lret
add
inc
jb
cli
or
lret
mov
insb
lock
mov
flds
hlt
dec
mov
dec
push
xor
xchg
add
add
jle
fwait
out
out
add
lcall
jg
call
gs
adc
testl
test
or
jmp
cmp
out
rorl
jge
pop
jmp
lret
add
jmp
cmpsb
pop
stc
ss
adc
jno
add
push
mov
xchg
add
jmp
jp
or
fldl
loopne
lea
jmp
jo
call
hlt
clc
add
dec
or
popf
addb
mov
mov
push
test
bound
or
pop
loopne
ret
mov
jp
push
dec
add
adc
sbb
push
jge
push
dec
add
add
xchg
cmp
add
cmpb
sahf
mov
cmp
ljmp
add
out
lock
inc
push
pop
out
ret
mov
adc
dec
outsl
sub
push
jg
ds
mov
pop
shrb
sub
or
add
jne
dec
stc
hlt
pop
roll
add
dec
stc
hlt
pop
add
jne
dec
stc
hlt
pop
roll
jne
dec
stc
hlt
pop
mov
xor
sbb
pop
ss
std
push
jg
or
mov
mov
or
ficompl
xchg
mov
xchg
add
and
cld
faddl
fld
and
int
out
cmc
add
mov
test
addl
add
add
jns
inc
xchg
or
inc
xchg
inc
cmp
hlt
xor
inc
test
push
add
adcb
xchg
faddp
push
xor
or
loop
pop
xchg
hlt
add
mov
call
push
add
add
add
add
add
add
or
in
add
push
std
and
xchg
push
in
notb
mov
xchg
push
out
notb
mov
notb
mov
xchg
push
loope
push
std
mov
notb
mov
xchg
push
jecxz
push
std
mov
notb
mov
xchg
push
in
push
std
mov
notb
xor
xchg
push
out
push
std
and
xchg
push
div
push
std
xor
push
jge
daa
les
add
add
add
stc
outsl
fdivrl
ja
fildll
std
cmp
add
add
push
ret
mov
jg
loope
ljmp
testb
test
xor
stos
test
leave
add
clc
jns
lea
add
sbb
add
stc
lods
push
pop
add
add
add
add
pop
add
add
cli
lods
push
push
add
add
cli
lods
push
and
add
stc
lods
push
adc
add
stc
lods
push
and
add
stc
lods
push
hlt
gs
mull
or
notl
add
mull
add
notl
add
mull
add
notl
add
mull
add
add
xchg
and
pop
push
jge
dec
lds
jns
pop
stc
imul
je
bound
cld
dec
xchg
shl
mov
pop
mov
add
notl
jge
adc
xor
add
jle
mov
clc
inc
sahf
mov
mov
pushf
mov
mov
add
sub
add
loop
lods
jle
mov
add
lret
sbb
mov
or
sbb
jno
out
mov
add
pop
shrl
movsl
dec
cmp
stos
dec
xor
sbb
lds
mov
pop
add
pop
add
add
inc
jno
repnz
enter
mov
jmp
mov
stc
cli
sub
std
jecxz
jle
add
add
bound
dec
xchg
jno
and
push
aaa
pusha
movsb
and
jb
fmull
push
adc
test
bnd
add
int
call
repnz
jb
rolb
cwtl
adc
icebp
xchg
sbb
and
out
test
and
jp
aas
jb
and
hlt
insb
sar
add
std
mov
and
xor
adc
jns
sbb
jl
add
icebp
idivb
push
xor
add
sub
cmp
js
and
xor
sbb
inc
stc
push
mov
mov
testb
add
lcall
inc
xor
js
xor
inc
cmp
pop
add
jbe
jl
pop
lcall
into
mov
repz
fidivl
add
sbb
xor
call
pop
rorb
mov
cmp
sbb
sbb
or
jo
or
mov
test
cmp
rcll
test
clc
sti
xchg
add
xchg
lods
sbb
rclb
lock
add
add
and
jmp
mov
xchg
jecxz
aas
jge
pop
or
push
sbb
aad
pop
stc
jg
and
xor
and
pop
std
ljmp
aam
test
adc
clc
js
rcrb
in
jno
and
shll
inc
sub
out
mov
add
xchg
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
lcall
add
testl
inc
xchg
push
hlt
add
push
imul
popa
inc
jp
cmc
add
jbe
sti
ljmp
jmp
gs
or
pop
mov
dec
add
dec
incl
dec
std
cmp
add
dec
sbb
stos
dec
cmp
mov
ds
mov
xlat
dec
gs
inc
std
outsb
mov
sbb
or
shr
mov
mov
mov
mov
outsb
fisttps
add
ss
push
out
clc
add
ljmp
insb
lds
mov
cmp
aam
sbb
add
aam
sbb
add
inc
push
out
cmpsl
inc
mov
and
add
or
push
xchg
inc
and
aas
sub
adc
inc
rcll
dec
mov
adcl
push
cmp
push
sbb
adc
lret
outsb
and
add
pop
mov
and
sub
sbb
fs
ljmp
add
sbb
hlt
cs
push
sbb
sub
mov
inc
outsl
jbe
mov
pop
xchg
adc
jge
insl
cmp
test
std
ljmp
lahf
jno
clc
adc
shrb
js
std
iret
inc
daa
in
add
push
ror
jne
loop
pop
mov
das
jne
out
pop
cmc
enter
add
add
push
sub
loopne
scas
push
add
pop
dec
mov
add
push
ret
cmp
out
hlt
add
push
mov
add
mov
jne
addr16
in
mov
mov
cmp
or
daa
mov
jb
push
std
aaa
xor
imul
sub
add
rcl
pop
adc
out
and
add
inc
int
jno
hlt
cld
mov
add
add
gs
mov
xlat
jge
cmc
ljmp
js
adc
mov
call
mov
dec
jmp
pop
mov
shl
push
push
sub
xor
adc
add
in
jb
in
or
xchg
mov
or
jmp
xor
out
outsl
add
testl
add
inc
bound
dec
subb
xchg
xchg
lock
jmp
pop
repnz
outsb
movsl
cli
iret
mov
xorl
sbb
sub
add
add
jg
sbb
fisubl
repnz
cli
mov
decb
dec
xchg
xchg
jnp
push
xlat
mov
jmp
sahf
sar
je
adc
pop
mov
data16
into
mov
sti
xchg
mov
jmp
or
hlt
xchg
std
push
sub
add
add
inc
std
mov
mov
cld
mov
dec
stc
jnp
ret
or
add
hlt
aad
push
sub
inc
std
xor
mov
push
stc
cmp
sbb
dec
mov
inc
or
add
hlt
sub
jge
adc
mov
sbb
sbb
mov
out
jp
push
add
in
aad
pop
in
push
movsb
outsl
aaa
sbb
iret
add
push
or
sub
adc
mov
stc
cmpsl
fxch
jmp
sbb
sub
sub
and
cmpsl
fscale
jmp
jp
bound
roll
ljmp
jnp
out
sbb
xor
jl
xor
pop
add
cmp
jno
loop
in
scas
and
xchg
daa
sbb
lcall
or
xor
out
pop
lret
lea
out
jle
in
push
mov
not
xor
dec
cli
mov
cli
push
in
sarb
or
leave
mov
test
jbe
mov
jae
ror
mov
sbb
jle
stc
jge
jnp
inc
or
add
mov
sub
adc
insl
and
test
mov
adc
lock
push
or
push
mov
scas
mov
out
xrelease
mov
jecxz
mov
add
pop
aaa
adcl
pop
repz
xchg
mov
in
or
data16
jle
cmp
push
add
lsl
sbb
fisttps
sub
mov
addr16
lds
or
cmpsl
push
je
cmp
rorl
cmovnp
and
cs
add
inc
stc
add
mov
cmp
cmp
sbb
mov
loope
xchg
add
mov
jne,pn
cmc
movsl
mov
jbe
std
in
nop
mov
and
cmpsl
test
in
add
stc
add
scas
inc
ljmp
xchg
add
lods
inc
mov
xchg
scas
push
std
jnp
cld
xchg
xor
imull
jbe
sbb
push
add
dec
test
ret
or
add
hlt
scas
arpl
jmp
cmp
or
sub
aaa
test
cmpsb
push
int3
adc
dec
test
xchg
les
jns
add
hlt
scas
arpl
add
add
add
mov
out
sbb
out
jno
outsl
pop
jmp
repnz
jno
pop
cmp
rorl
movsl
pop
outsb
xlat
xlat
cld
or
add
add
cmp
mov
push
sbb
push
mov
inc
mov
sbb
ss
js
out
xchg
pop
scas
std
mov
mov
mov
push
cs
jns
loopne
or
push
add
and
push
sbb
aaa
aad
in
pop
push
push
mov
movsl
shl
xor
leave
cmp
push
cld
daa
in
hlt
xor
sbb
dec
jb
in
dec
in
inc
cmp
and
inc
sub
and
inc
loope
das
jb
sub
cmp
rcr
insb
and
testl
xchg
dec
jb
xor
xor
mov
testl
cld
adc
cmp
push
lock
add
repnz
test
in
mov
inc
rorb
je
mov
mov
mov
cli
sub
rcr
cmpsb
jmp
push
cmp
clc
test
xor
outsb
adc
rolb
adc
sahf
iret
sbbb
jecxz
mov
adc
adc
add
add
jle
jl
or
push
add
mov
push
jle
cmp
mov
pop
sbb
or
jmp
ret
es
cli
and
iret
es
xor
mov
and
xor
jb
add
add
mov
bswap
and
cmc
lret
out
roll
add
add
sub
ljmp
in
jl
insl
push
mov
mov
cmp
test
jp
ja
enter
adc
repz
cmp
ljmp
mov
je
mov
xchg
mov
mov
xor
jnp
add
dec
add
out
hlt
add
nop
add
rorb
mov
mov
add
inc
mov
jns
into
jl
mov
hlt
xchg
mov
ljmp
push
jae
add
aaa
cmp
ja
push
sbb
cli
jl
cmp
out
jns
jp
and
std
call
jmp
add
add
inc
scas
mov
hlt
add
or
jns
jmp
adc
add
xlat
fcmovnb
out
jge
dec
jns
stc
jmp
sbb
jmp
test
and
push
or
push
push
mov
add
add
ss
jecxz
fdivrl
fildl
mov
ss
jmp
push
loopne
call
add
enter
cmp
xorl
in
shll
test
loopne
sub
shl
jae
add
sbb
cmpb
cmpb
push
adc
jb
inc
inc
test
add
imul
fldl
jae
test
nop
in
pop
dec
pop
or
add
std
push
inc
in
sbb
sub
push
add
add
aad
in
insl
cmp
clc
push
cli
lcall
cmp
dec
or
add
cmp
imul
out
std
ljmp
arpl
out
jl
sbb
mov
test
flds
adc
scas
out
ja
rep
sarl
and
add
xor
jge
cmc
cwtl
cli
cmp
pop
std
fbld
jle
divb
std
incl
lahf
push
ljmp
mov
out
sub
hlt
cmpsb
rcl
clc
dec
test
outsb
ja
nop
mov
es
mov
test
fidivs
add
jle
mov
add
add
roll
jnp
idivb
scas
push
sarl
enter
ds
sarb
sarb
pop
cmp
aas
pop
cmp
out
shll
mov
push
cli
js
sbb
mov
hlt
add
add
jle
hlt
outsb
mov
add
add
xor
pop
sub
call
lcall
je
loop
and
add
add
mov
scas
test
std
inc
jg
jle
inc
std
cwtl
scas
aad
andb
inc
popa
testl
jmp
sub
jmp
push
data16
cld
int
out
dec
add
testl
or
shll
cld
sbb
ret
jl
mov
in
mov
divb
cli
fidivs
mov
add
jae
jb
sti
add
in
mov
rorl
mov
clc
lcall
sti
sarb
xor
jns
lea
dec
popf
nop
adc
sarb
cmp
out
in
mov
insl
les
cld
mov
fldl
sarl
or
mov
mov
add
js
add
jp
lahf
insl
add
lea
mov
insl
adc
incb
or
aas
mov
int
test
mov
out
inc
div
movsb
xlat
iret
shlb
stc
dec
xchg
mov
test
loopne
out
cmpsl
xchg
dec
mov
push
fisttps
jg
or
inc
sbb
xlat
sti
add
mov
hlt
sbb
add
outsl
push
or
mov
mov
sub
fstps
sbb
push
addr16
push
fisttpl
jg
or
mov
push
ret
out
mov
sub
jnp
aas
jge
jo
push
xor
aas
pop
das
pusha
lahf
inc
xor
aas
dec
das
pusha
jg
xor
cmp
das
das
jp
jg
cmpl
das
add
or
xor
xchg
addb
pusha
jnp
in
cs
xchg
ja
sub
fnstsw
pop
jnp
int
fs
testl
add
add
mov
add
xor
test
mov
sub
xor
cld
clc
mov
xchg
roll
add
add
scas
outsl
test
pop
mov
int3
shl
enter
mov
stos
testl
bound
je
jp
je
and
adc
mov
xorb
push
push
xchg
cmp
sbb
inc
inc
int3
sub
xor
test
movsl
mov
movsl
dec
test
mov
insl
outsb
add
aas
add
mov
les
sahf
xchg
inc
add
insb
cmc
mov
lock
xchg
movsb
and
add
add
push
or
push
dec
add
ror
jne
into
cli
je
sub
jbe
jns
or
dec
add
push
sbb
sbb
nop
xchg
adc
add
rep
lock
push
add
add
addb
stc
out
outsb
movsb
mov
mov
clc
fidivrs
repnz
int3
mov
cmpsl
cmp
sub
daa
mov
pop
sub
mov
and
lds
mov
cmpsl
dec
sbb
cmpsl
pushl
push
adc
hlt
sbb
cmp
dec
ficoml
loopne
lret
mov
add
ja
adc
addl
mov
lcall
cmpsl
lcall
inc
add
push
std
dec
mov
stc
roll
inc
loopne
mov
inc
cmp
outsb
scas
pop
incb
xor
add
add
loopne
jge
cmp
out
hlt
add
inc
roll
push
xor
subl
mov
xlat
insl
inc
add
cmp
push
mov
add
jg
sbb
sbb
insb
ss
cmpsb
mov
adc
xorb
arpl
pop
xlat
jmp
sbb
in
sub
or
lcall
je
or
xor
test
insl
push
stc
jb
adc
sub
or
cmp
test
add
add
and
cli
xor
movsb
push
test
dec
sbb
adc
clc
subb
paddw
or
pop
andl
dec
sbb
aad
push
clc
subb
and
ljmp
xor
test
or
dec
adc
ret
sbb
jno
mov
pop
and
lret
mov
inc
mov
push
mov
clc
lods
adc
push
add
jge
dec
lock
lret
sub
psubusb
jmp
out
idiv
pop
insb
or
push
push
jmp
jl
add
insb
or
xorl
fmuls
dec
push
std
in
dec
adc
les
test
loop
stos
jb
jmp
jl
add
push
mov
add
xor
xor
iret
push
inc
out
into
adc
pop
xorl
push
mov
inc
dec
and
iret
inc
ds
add
xchg
pop
xchg
cld
clc
jnp
les
out
mov
mov
adc
out
push
ss
cmove
xchg
mov
xor
xchg
add
ss
and
mov
jae
insl
add
fcoml
jnp
pop
sub
es
cmp
testb
jl
das
in
jl
cmp
daa
pop
ja
and
mov
daa
adc
jnp
or
sub
or
cmp
loopne
jnp
loopne
jnp
loopne
shlb
mov
iret
ret
out
pop
icebp
out
hlt
add
rorb
and
repz
out
jno
lret
int3
out
mov
push
test
repz
test
cs
adc
mov
je
mov
popf
pusha
adc
or
add
pushf
cmp
test
testl
jb
mov
out
hlt
add
add
mov
add
jo
sbb
dec
sarl
add
jmp
testl
int
jg
icebp
inc
ds
xor
popf
pop
add
add
jo
fidivl
les
dec
test
adcb
add
rorb
add
add
jmp
sbb
jae
lcall
adc
loope
push
ret
dec
push
adcb
pop
shrl
dec
iret
sub
dec
in
not
ss
push
pop
dec
jns
mov
push
fsin
add
sub
pop
lret
dec
shrl
lcall
push
dec
push
out
bound
hlt
add
imul
add
test
add
add
and
dec
add
adc
xor
repz
aas
or
lock
mov
inc
int3
test
inc
int3
shlb
in
fcoml
adc
lods
pop
out
lret
repz
repz
sub
or
jl
test
cld
inc
incl
cmp
pop
test
cs
sub
clc
cmpsb
mov
add
dec
add
adc
and
mov
nop
push
or
mov
pop
mov
mov
add
add
cmovno
stos
lea
movsb
xor
pusha
rol
and
in
and
ss
adc
inc
mov
sbb
insl
shlb
jl
je
jmp
incb
clc
sbb
mov
and
imul
or
ljmp
icebp
or
or
pop
aas
dec
mov
xor
inc
inc
xchg
clc
add
jmp
call
scas
fcomip
push
mov
call
or
incl
and
jmp
cmp
callw
adc
fcmovu
ljmp
xor
test
sbb
in
arpl
test
mov
roll
stc
fidivrs
bound
sbb
add
je
lea
pop
leave
sub
inc
add
into
dec
or
call
mov
xchg
out
sbb
mov
aam
add
incl
inc
lea
pushf
push
test
inc
gs
adc
sbb
and
adc
push
pop
add
dec
xor
mov
or
jge
pusha
test
out
fmuls
mov
push
and
sbb
sbb
cli
mov
test
or
sub
dec
jge
sub
or
fadds
stc
mov
add
adc
sarb
repnz
pushf
js
jg
out
or
fdivrs
loope
jg
loope
outsl
push
pextrw
mov
xlat
movsl
mov
fdivr
repnz
lret
fnstsw
ret
xchg
loope
jg
js
rclb
mov
filds
mov
iret
jno
sub
outsb
dec
mov
sbb
rolb
mov
and
pop
xchg
fildl
out
and
es
adc
sbb
stos
cmp
add
clc
dec
dec
es
loop
cmp
sub
bound
rorb
xchg
in
mov
or
add
das
mov
push
pop
dec
cmpsb
add
ret
out
add
add
call
das
dec
cmp
mov
loopne
and
inc
cmp
call
lock
in
inc
cmp
test
cmp
add
testl
pop
jae
cld
and
sub
and
dec
jp
cli
fdiv
or
add
add
dec
test
out
call
in
repz
mov
dec
push
add
rol
lret
int3
arpl
mov
and
mov
lret
idivl
xlat
mov
sub
out
mov
mov
arpl
lahf
mov
sub
mov
sub
mov
sub
roll
je
rcl
ja
xlat
or
in
testl
or
and
add
push
pop
cmp
add
cmp
add
inc
and
hlt
dec
or
sub
cld
and
and
push
dec
icebp
pushf
stos
dec
add
jne
jg
jne
outsl
insl
lret
sub
int3
inc
cli
shlb
and
dec
add
inc
cmp
clc
xchg
mov
insl
ljmp
movsb
jecxz
pop
lods
loop
add
xchg
push
mov
rcl
int3
mov
cmpsl
sub
fidivl
test
ss
pop
add
xor
xchg
shll
add
xor
stc
add
scas
or
jo
jnp
mov
add
add
mov
cmp
aas
xor
cs
mov
mov
test
fcmovbe
movsl
or
cmc
xlat
mov
jle
out
or
sbb
jno
fidivrl
or
lret
sti
pop
nop
ljmp
por
xchg
dec
repnz
dec
mov
ret
push
add
add
push
pop
add
add
jmp
add
and
rcrb
cmp
add
pop
rcrb
shlb
inc
or
enter
mov
sti
iret
and
stc
rclb
inc
int
add
jmp
testl
test
andl
loope
stc
mov
testl
repnz
orb
add
add
xchg
push
bound
adc
fnsave
addb
fs
cld
cli
xlat
es
sbb
shlb
jne
push
popf
clc
xor
push
dec
sbb
adc
jns
adc
loope
push
sbb
sub
adc
loope
clc
call
cmp
push
jmp
icebp
lea
enter
sbb
popf
inc
lock
popf
add
or
dec
push
pop
data16
push
push
popf
notb
cmpsb
sbb
dec
adc
in
mov
ret
push
cmc
addr16
sar
pusha
cmp
cmc
mov
push
inc
stc
fpatan
or
mov
hlt
jle
test
mov
jne
add
xor
test
mov
test
inc
ret
test
and
xchg
iret
and
mov
iret
das
pop
sbb
sub
cmp
or
lahf
and
cmp
in
out
dec
pop
push
rclb
cmc
sar
pop
add
mov
cs
jg
mov
inc
add
aas
sub
out
jp
out
hlt
mov
rolb
add
add
hlt
outsl
cwtl
xlat
hlt
imul
scas
xchg
jle
sbb
mov
pop
inc
sub
dec
sbb
sub
mov
addr16
add
add
sbb
nop
hlt
add
add
int3
mov
inc
mov
mov
es
dec
stos
aaa
sub
ja
push
stc
jmp
push
push
stc
jmp
push
push
stc
add
mov
call
ficomps
jle
fcos
call
ficomps
dec
add
call
sbb
xlat
mov
testl
ja
xlat
jmp
xlat
call
fstpl
jmp
xlat
call
fstpl
call
or
in
idiv
test
cmp
cld
cltd
cmp
int
add
sub
idiv
and
cmp
int
add
ljmp
add
mov
add
jmp
jmp
add
aas
add
in
idiv
test
lds
add
add
sub
idiv
add
aas
add
mov
add
add
add
idiv
jnp
aas
add
aas
add
outsb
sub
or
inc
hlt
pop
dec
inc
hlt
sub
push
mov
stc
jmp
je
hlt
pop
jne
hlt
sub
push
scas
daa
stc
lret
mov
ss
hlt
sub
push
into
daa
stc
stos
daa
xor
imul
hlt
sub
push
pop
test
shll
and
std
pop
add
add
sub
push
add
sub
fwait
in
std
xchg
sub
and
std
aas
add
sub
aaa
add
repz
mov
repz
mov
out
ret
cli
out
adc
out
or
out
cld
cmc
out
add
out
sbb
out
sub
out
sub
out
xor
out
hlt
cmc
out
test
out
add
out
clc
cmc
out
enter
int3
cmc
out
shl
out
push
cmc
out
dec
cmc
out
cmp
out
inc
cmc
out
pop
cmc
out
call
mul
add
cmc
out
xor
call
testl
testl
jmp
imull
adc
mull
divl
jmp
add
js
jmp
divl
adc
mull
adc
testl
jmp
testl
push
jmp
div
push
jmp
idiv
push
jmp
testl
jmp
dec
pop
hlt
adc
pop
rclb
pop
mov
adc
sbb
pop
mov
or
pop
test
fldl
xor
fldl
sub
int
sub
int
and
fldl
and
fldl
sbb
int
sbb
int
adc
popf
push
adc
popf
push
or
lea
or
lea
add
popf
push
add
popf
push
cld
jge
push
hlt
minps
lock
in
cmovge
push
adc
aam
pop
push
cmpsb
adc
hlt
sbb
movsl
in
std
mov
or
mov
jmp
std
sub
sbb
mov
repz
mov
sbb
mov
sbb
mov
sbb
scas
repz
stos
jmp
std
cmpsl
add
lahf
repz
fwait
jmp
std
xchg
add
repz
mov
sbb
xchg
sbb
cmp
std
jg
repz
jnp
sbb
ja
sbb
aam
sbb
loope
sbb
lret
add
add
add
out
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mul
add
out
adc
out
or
out
sbb
out
adc
out
loopne
out
add
jmp
add
add
add
out
lock
add
out
clc
jmp
add
jmp
add
jmp
add
out
mov
call
not
psubsw
mov
or
divl
or
imull
jmp
idivl
or
testl
or
testl
jmp
testl
add
pop
or
negl
jmp
mull
jmp
imull
jmp
divl
jmp
mull
jmp
imull
jmp
divl
jmp
idivl
add
les
pop
add
push
dec
add
push
dec
add
push
pop
add
dec
add
dec
add
sldt
add
add
add
add
push
sbb
add
or
add
fldl
and
int
sbb
int
sbb
fldl
adc
fldl
and
int
pop
bswap
add
push
popf
add
popf
add
pop
lea
dec
sbb
add
sbb
sbb
ja
sbb
sbb
repz
add
add
sbb
out
jmp
sbb
out
sbb
jecxz
sbb
fucomip
sbb
fildl
sbb
xlat
stc
sbb
pslld
std
or
sbb
roll
std
stc
sbb
mov
jmp
sbb
mov
sbb
jns
sbb
stos
jmp
sbb
xor
sbb
lahf
icebp
sbb
fwait
jmp
sbb
push
add
std
icebp
sbb
mov
jmp
add
out
je
out
clc
jmp
add
out
inc
hlt
out
pop
hlt
out
lods
jmp
add
std
out
cwtl
jmp
add
jmp
add
jmp
add
jmp
add
std
out
mov
out
pop
std
out
enter
sub
out
jp
out
adc
out
clc
stc
out
add
stc
out
loopne
out
in
out
call
stc
out
lock
out
ja
call
testl
jmp
negl
or
negl
jmp
neg
or
mul
or
mul
or
imul
or
test
or
not
or
neg
or
testl
testl
add
push
or
notl
negl
jmp
mull
jmp
negl
jmp
mull
jmp
imull
jmp
popf
pop
ljmp
pop
loop
popf
pop
rcll
lea
push
lea
rorb
pop
pop
into
push
pop
pop
lret
pop
pusha
or
pop
pop
or
pop
pop
or
pop
push
or
dec
pop
push
or
pop
dec
or
pop
dec
or
pop
inc
or
pop
inc
or
pop
cmp
sbb
pop
xor
or
pop
sub
fldl
sub
push
and
push
sbb
push
adc
sbb
or
sbb
pop
clc
sbb
add
sbb
call
sbb
idiv
sbb
repz
sbb
out
add
sbb
jmp
sbb
out
sbb
jecxz
sbb
fucomip
sbb
sbb
xlat
lcall
std
shr
sbb
iret
out
sbb
lret
lcall
std
lcall
std
ret
out
sbb
mov
lcall
std
mov
sbb
mov
sbb
out
sbb
ret
std
cmpsl
lcall
std
mov
out
sbb
mov
sbb
adc
add
add
out
fs
out
add
std
out
mov
out
je
out
adc
out
xchg
mul
add
out
loopne
out
fdivr
out
fdivr
out
movsb
std
out
mov
clc
out
ja
out
mov
clc
out
mov
out
mov
out
test
out
cmp
add
add
out
je
out
jo
out
add
add
out
adc
call
imul
add
div
add
div
add
idiv
add
idiv
add
testl
add
jmp
notl
push
jmp
negl
push
jmp
mull
push
jmp
negl
push
jmp
divl
push
jmp
idivl
push
jmp
add
or
divl
jmp
idivl
jmp
mul
add
negl
jmp
int
movsb
or
add
or
add
or
add
or
add
popf
add
lea
je
lea
jo
pop
add
add
dec
add
dec
add
pop
add
add
dec
add
add
sbb
add
or
add
sbb
add
or
add
hlt
sbb
cmp
sbb
aaa
out
sbb
xor
sbb
pop
sbb
sbb
sbb
pop
out
sbb
adc
sbb
paddd
std
or
sbb
cmpsb
out
sbb
add
sbb
incl
sbb
sti
std
sbb
imul
sbb
repz
sbb
out
std
sbb
jmp
sbb
out
sbb
jecxz
sbb
sbb
sbb
xlat
in
sbb
shr
sbb
iret
std
sbb
lret
std
sbb
out
sbb
ret
in
sbb
mov
std
sbb
mov
add
add
out
movsb
sti
out
cwtl
sti
out
mov
out
nop
sti
out
sar
out
add
out
pop
sti
out
pusha
sti
out
test
out
js
out
insb
sti
out
jo
out
je
out
or
out
cld
sti
out
add
out
in
out
fdivr
out
int3
sti
out
sub
out
aam
out
test
out
pushf
sti
out
mov
sti
out
mov
sti
out
mov
out
mov
call
add
int3
push
jmp
negl
add
notl
add
idivl
pop
jmp
testl
pop
jmp
divl
jmp
imull
jmp
mull
jmp
div
pop
jmp
imul
pop
jmp
idiv
pop
jmp
div
pop
jmp
add
out
pop
jmp
mul
pop
jmp
or
or
or
or
or
pop
push
or
pop
adc
int
push
or
pop
or
fldl
mov
fldl
lods
or
pop
test
or
pop
popf
or
pop
xchg
or
pop
lea
lea
mov
lea
test
add
orl
dec
pop
jns
dec
pop
jne
pop
pop
jno
pop
pop
insl
or
mov
or
in
cld
mov
in
cld
mov
in
cld
lods
in
cld
test
out
in
cld
mov
jmp
cltd
jmp
xchg
out
jmp
xchg
out
jmp
jmp
mov
jmp
test
jmp
sub
jmp
jns
jmp
jne
jmp
jno
jmp
insl
jmp
imul
jmp
popa
out
jmp
pop
jmp
pop
jmp
push
out
jmp
push
out
jmp
dec
jmp
dec
jmp
inc
out
jmp
inc
out
add
add
push
out
out
push
out
ljmp
add
push
out
fimuls
out
fimull
out
push
out
adc
out
push
movntq
add
movntq
push
movntq
add
out
decb
out
cli
push
out
testb
add
or
add
or
add
or
add
or
add
out
dec
or
add
out
inc
or
add
out
or
jmp
test
push
jmp
idivl
add
add
mov
jmp
imull
push
jmp
negl
push
jmp
notl
push
jmp
testl
pop
jmp
divl
jmp
imull
jmp
mull
jmp
negl
jmp
notl
jmp
add
dec
or
inc
or
inc
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
popf
add
or
add
or
fimull
pop
add
or
in
cld
aad
in
cld
sar
in
cld
int
in
cld
leave
in
in
cld
cld
sar
cld
mov
in
in
cld
mov
in
cld
mov
in
cld
lods
cld
in
cld
test
in
in
cld
mov
cld
jmp
cltd
in
jmp
xchg
in
jmp
xchg
cld
jmp
cld
jmp
mov
in
jmp
test
jmp
cmp
jmp
jns
jmp
jne
jmp
jno
jmp
insl
cld
jmp
imul
jmp
popa
cld
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
rorb
add
or
out
decb
add
or
out
cli
or
add
push
out
testb
stos
add
out
mov
add
out
mov
add
mul
add
neg
add
neg
add
not
add
not
add
test
add
test
add
add
ret
idivl
add
divl
add
imull
add
mull
jmp
negl
jmp
notl
jmp
mull
add
testl
add
idivl
jmp
divl
add
popf
or
add
lea
bound
pop
or
add
pop
pop
dec
or
dec
or
pop
or
pop
or
dec
or
add
sbb
or
pop
or
or
pop
sbb
or
pop
or
or
pop
fldl
push
pop
fldl
sbb
int
push
pop
int
adc
fldl
push
pop
fldl
or
int
push
pop
int
add
popf
pop
incb
popf
pop
cli
push
add
in
cld
cmc
cli
in
cld
icebp
repnz
cld
in
cli
in
cld
jmp
cli
in
cld
loope
in
cld
in
cld
fptan
in
cld
aad
in
cld
shl
in
cld
int
in
cld
test
in
cld
cmp
cld
jl
in
cld
mov
repnz
cld
mov
in
cld
mov
in
cld
lods
cli
in
cld
test
cli
jmp
mov
cli
jmp
cltd
add
jmp
xchg
cli
jmp
xchg
bnd
cli
jmp
mov
jmp
test
jmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
out
sbb
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
add
idiv
add
div
add
div
add
imul
add
imul
add
mul
add
mul
add
neg
add
neg
add
not
add
add
add
test
add
test
add
idivl
add
divl
add
imull
add
negl
add
notl
add
testl
mov
popf
add
add
lea
add
popf
add
add
add
add
add
pop
add
add
dec
add
add
pop
add
add
dec
add
add
sbb
add
add
sbb
add
add
or
add
add
int
sbb
hlt
in
cld
adc
stc
in
cld
or
add
in
cld
or
in
cld
add
stc
in
cld
std
lock
cld
stc
clc
in
cld
cmc
lock
cld
icebp
clc
in
cld
in
lock
cld
jmp
lock
cld
loope
in
cld
in
cld
fprem
in
cld
aad
in
cld
sar
in
cld
int
in
cld
leave
clc
in
cld
cld
sar
cld
mov
clc
in
cld
mov
in
cld
mov
in
cld
lods
lock
cld
test
add
jmp
movsl
lock
mov
jp
out
outsb
add
add
out
add
add
out
jle
out
jb
out
jbe
out
sbb
out
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
out
mov
out
fiaddl
out
into
add
add
add
add
add
add
add
add
add
jmp
mull
add
notl
add
negl
add
testl
add
testl
add
idiv
add
testl
cld
call
imul
cld
call
mul
cld
call
neg
cld
call
add
loop
call
neg
cld
call
not
cld
call
notl
call
notl
call
divl
call
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
lea
int
popf
or
add
or
add
or
add
mov
dec
or
add
movsl
add
mov
add
fiaddl
and
or
add
mov
cld
pushl
int
imul
add
hlt
data16
cmc
mov
clc
arpl
pushl
clc
clc
movsb
pop
add
inc
xlat
mov
jl
lret
in
fnstsw
inc
out
push
data16
mov
push
test
imul
out
pop
add
inc
out
fdivrl
negb
clc
xchg
jecxz
loopne
fmull
hlt
int
ljmp
jmp
adc
gs
add
repz
jns
push
cmc
inc
inc
call
sbb
jge
out
mov
and
jecxz
dec
std
add
hlt
test
adc
jo
add
fldl
testl
sar
add
cmp
jecxz
mov
in
dec
sub
pop
jle
jmp
mov
in
add
inc
movb
xchg
add
add
call
clc
out
lock
out
testb
je
clc
jb
call
mov
mov
jmp
mov
add
xor
inc
lret
jnp
xlat
insl
add
adc
stos
je
sbb
jmp
jbe
push
adc
sub
or
jge
add
std
sub
test
ss
jmp
or
jbe
es
cmp
testl
add
clc
scas
or
test
inc
pop
and
testl
dec
insl
and
daa
cmpb
insl
push
mov
stc
ffree
addl
scas
or
test
int
mov
add
jp
mov
ret
sbb
shlb
cmpb
insl
push
and
movl
add
mov
orl
in
ljmp
mov
xor
sbb
out
ja
or
add
hlt
lcall
mov
sub
add
xor
push
call
mov
mov
out
std
clc
ja
or
inc
call
std
mov
hlt
lcall
adc
cmp
icebp
pop
dec
sbb
xlat
call
or
icebp
pop
dec
sbb
repnz
jbe
ja
lods
es
and
js
fmull
jmp
sub
test
adc
jmp
out
flds
inc
test
sti
ja
jmp
out
roll
cmpb
add
jmp
add
add
test
xor
ja
fsubrl
hlt
add
test
add
jbe
subl
inc
icebp
pop
lds
jo
adc
adc
dec
lea
andb
add
jmp
push
call
sbb
mov
xchg
std
fcoml
testl
lret
jl
roll
mov
jo
adc
push
call
stos
iret
sbb
jmp
or
in
jo
sbb
jmp
jb
push
adc
stos
jo
sbb
jmp
add
clc
data16
call
hlt
jmp
dec
cmp
add
insl
push
jmp
leave
loopne
and
stc
ret
cli
pop
popa
jmp
imul
testl
and
loopne
adc
imul
idiv
mov
addl
cmp
add
insl
out
cmp
idiv
mov
sbb
push
xchg
pop
mov
in
imul
push
add
or
inc
hlt
testl
sbb
or
ja
dec
ret
push
pop
test
faddl
ja
sbb
cld
xor
jmp
sub
stc
jl
sar
jb
inc
push
cmc
mov
pop
mov
add
adc
sbb
xor
jg
push
cmp
jl
pop
loopne
out
lcall
ret
pop
adcb
adc
call
mov
dec
push
cmc
and
mov
mov
and
flds
insb
ds
jmp
mov
xchg
jecxz
jmp
jmp
jmp
add
add
add
aad
jmp
ret
fldl
daa
dec
icebp
push
es
out
loope
sbb
cld
xchg
hlt
outsl
in
subb
or
cltd
out
hlt
test
push
clc
stc
pop
mov
popa
jmp
std
js
adc
mov
in
subb
in
ja
out
hlt
test
repz
or
ljmp
jns
jl
add
jmp
stc
je
push
ljmp
call
sub
adc
lret
pushf
in
out
mov
push
cli
push
sub
jae
je
push
ljmp
clc
stos
je
adc
addb
adc
je
adc
push
jl
out
out
add
pop
cli
scas
enter
ljmp
ljmp
add
add
inc
jae
test
jno
call
pop
std
sbb
mov
inc
incb
loopne
mov
imul
pop
in
idiv
fisubrs
add
jmp
in
jmp
adc
pusha
and
inc
ds
call
add
imul
push
jmp
decl
jne
fbstp
out
out
idiv
add
jne
out
out
idiv
sahf
xorb
jne
out
out
idiv
hlt
lcall
mov
clc
fwait
fwait
cmpb
jbe
pushf
idiv
sbbl
inc
aas
sbb
ss
mov
jp
fisubrs
pop
ret
dec
sbb
add
clc
xor
cmpl
mov
clc
add
pop
ja
imull
call
aaa
pop
js
notl
out
shl
clc
mov
js
clc
sub
call
ja
or
inc
out
and
add
cli
js
sbb
divl
jmp
ljmp
divb
jmp
ljmp
or
dec
push
jg
pop
pop
jmp
pop
inc
or
lods
flds
pop
add
out
js
add
add
cli
sub
gs
push
xchg
add
add
sbb
gs
add
ret
cld
andb
jb
in
lods
jmp
dec
adc
jno
jmp
jmp
pushl
out
jae
iret
mulb
clc
jo
orl
jae
xchg
jge
clc
jbe
mov
jnp
cmc
jno
push
cld
in
clc
pop
jns
push
ljmp
clc
sub
cld
ds
test
inc
or
sbb
and
add
cld
push
sbb
in
out
pop
inc
cld
out
cld
test
fs
jae
fbstp
in
push
addl
add
add
sarb
stos
add
dec
outsl
cli
invd
adc
push
test
testl
adc
mov
decl
jne
mov
out
in
idiv
push
xorl
sbb
idiv
push
xorl
lods
jmp
add
mov
call
ret
mov
pop
cwtl
adc
jge
adc
cmc
movsl
lock
xorl
add
push
or
popf
loopne
push
scas
jmp
lock
cmp
jge
pop
out
mov
clc
ja
or
sub
in
lods
jnp
jl
call
add
hlt
jne
hlt
mov
jl
mov
js
jae
jge
out
add
dec
mov
jge
loop
outsl
adc
clc
cmp
push
add
bnd
hlt
in
cld
out
div
clc
aaa
outsl
ja
negl
call
ja
pop
std
addb
xor
fdecstp
test
push
push
clc
pop
loope
and
xchg
push
negl
jmp
fsubrl
add
adc
xchg
ret
icebp
std
testb
push
jo
in
fdivrp
jl
and
jbe
cmc
in
pop
out
pop
jecxz
std
push
fnstcw
dec
insl
inc
loop
lods
and
dec
push
add
enter
gs
add
adc
sbb
orl
pop
cwtl
jmp
fdivrp
cmc
or
jae
fistps
jnp
hlt
push
rorl
jnp
cmc
push
xadd
push
ljmp
clc
stos
add
adc
or
call
push
or
sti
sti
in
xchg
fnstsw
xor
inc
sbb
sub
sbb
jmp
adc
push
add
rcr
push
xor
xchg
pop
add
test
inc
add
ffree
testl
pop
sbb
add
loopne
mov
test
mov
push
push
push
and
rcpps
test
add
not
push
cmp
sarb
push
pop
fdivrs
orb
cli
stc
lret
mov
sbb
pop
sbb
je
sbb
je
in
cld
lds
stc
mov
mov
or
addl
add
out
iret
cmp
cmp
imul
test
or
mov
loope
jae
fisubl
jae
jmp
movsl
jae
mov
cltd
jae
leave
cwtl
jae
mov
sahf
jae
mov
jae
sub
push
add
repnz
pop
je
adc
cli
or
jae
divb
or
mov
or
mov
add
or
out
arpl
adc
xor
loopne
es
dec
lds
imul
sahf
in
in
fbld
mov
fildl
out
rcr
gs
neg
xchg
mov
and
adc
sbb
pushf
and
pop
dec
stc
sqrtps
jle
jo
cld
add
push
add
andl
mov
popa
dec
or
jmp
repnz
mov
xorb
call
mull
in
es
mov
call
fimull
mov
fcomps
or
out
in
jnp
cld
pop
add
movsl
clc
mov
lods
aam
fldl
jns
sbb
add
mov
inc
shl
add
jmp
pop
push
call
fs
jmp
sbb
push
repz
sti
push
pusha
jnp
cld
pop
pop
push
jno
clc
pop
cmp
shr
add
mov
lahf
mov
ror
pop
addl
insl
or
mov
mov
aaa
sahf
jmp
dec
clc
add
mov
push
add
dec
clc
call
enter
push
out
icebp
idiv
sahf
mov
pop
or
call
ret
dec
jmp
jne
mov
mov
call
inc
adc
fsubs
jnp
mov
push
add
lea
addl
scas
inc
pop
cs
dec
add
hlt
inc
sub
push
dec
test
out
outsb
cs
sbb
clc
cmp
sub
hlt
jmp
jnp
rcll
push
out
mov
push
mov
divb
repz
jl
mov
lock
jecxz
cmp
add
outsl
inc
sbb
fsubrp
cld
push
inc
sbb
loopne
add
hlt
repnz
scas
jb
clc
ja
adc
in
jge
loop
jo
ja
adc
jmp
in
add
in
negw
xor
jo
sub
jl
mov
mov
fdivrs
mov
cld
sahf
and
in
sbb
orb
xchg
adc
cld
gs
imul
into
sub
fcmovnbe
jp
jmp
dec
jmp
mov
add
and
std
xchg
es
add
pop
clc
fldt
rorl
push
es
incb
shr
add
cld
loopne
mov
push
or
push
hlt
push
add
aad
ds
cmp
faddl
jbe
sbb
repz
testb
mov
push
testl
incl
clc
pop
inc
push
in
mov
rcr
mov
jmp
mov
add
pop
fucomip
je
or
or
add
shl
decl
pshuflw
mov
out
ret
lds
mov
inc
sbb
adc
add
add
pop
pop
xor
jg
mov
jnp
add
add
in
out
cli
les
jl
pop
mov
rorl
andl
add
sub
jp
mov
call
inc
adc
shlb
jnp
scas
add
add
jmp
test
iret
sti
mov
in
sub
add
bound
dec
pop
das
repnz
dec
cs
add
jmp
jnp
push
mov
mov
push
iret
jno
or
repnz
adc
xor
jo
call
aaa
outsb
out
imul
addr16
scas
out
clc
shrl
stc
jl
pusha
add
pop
out
clc
mov
fistpl
add
inc
icebp
add
xchg
sbb
add
hlt
add
add
add
mov
hlt
add
mov
out
hlt
add
add
add
cwtl
inc
fcomps
pop
hlt
add
xchg
xor
out
hlt
add
add
add
fwait
sbb
out
hlt
add
mov
fsub
add
add
add
add
mov
xlat
xchg
hlt
add
mov
xlat
out
hlt
add
add
add
mov
xlat
ss
hlt
add
lea
hlt
add
jmp
push
add
clc
jmp
testl
jno
add
clc
jmp
testl
test
add
mov
testl
fistps
clc
sbb
test
clc
jmp
testl
jno
add
cmc
sbb
jmp
add
add
jmp
cmpsb
fprem
pop
add
clc
jmp
int
add
jae
sti
jmp
mov
decl
add
add
xchg
sti
incl
jge
sti
lcall
add
pop
add
add
xchg
sti
inc
lock
jmp
mov
lcall
add
dec
add
add
sti
jmp
lcall
or
add
add
add
add
jl
pushl
jge
jmp
insl
sti
inc
outsb
sti
out
insl
sti
incl
outsb
sti
push
sub
cld
mov
pop
xchg
cld
stos
mov
cld
fwait
ja
cld
xchg
fistl
cld
subl
cld
jae
xchg
cld
imul
cld
arpl
cld
add
xchg
cld
push
xchg
cld
inc
daa
xchg
cld
cmp
xchg
cld
xor
xchg
cld
and
xchg
cld
sbb
xchg
cld
or
cld
add
cld
sti
ljmp
jmp
test
cld
fildl
cmp
rcl
mov
aam
mov
aam
add
add
mov
aam
mov
aam
mov
nop
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
mov
aam
add
add
scas
and
out
hlt
add
movsb
adc
test
aam
movsl
clc
rorl
lock
movsl
call
sar
std
nop
sar
jmp
add
sar
setbe
clc
and
clc
inc
push
sar
cmp
clc
imul
clc
jg
sar
push
push
sar
lahf
push
sar
movsl
xchg
sar
xchg
sar
jmp
xchg
sar
and
sar
ret
xchg
sar
gs
sar
pop
push
sar
test
clc
jae
sar
sbb
clc
or
clc
sbb
clc
pop
add
clc
fstpl
clc
add
test
sti
incl
movsl
sti
call
sti
cmp
movsl
sti
ljmp
movsl
sti
jge
sti
ljmp
movsl
sti
call
jae
lcall
jb
decl
jb
push
jno
lcall
sti
fnsave
dec
jno
pushl
sti
incl
popa
jb
jmp
jno
incl
jb
jmp
sti
incl
sahf
sti
call
mov
movsb
cld
repz
cld
jmp
popf
cld
jecxz
popf
cld
fcmovnu
pushf
cld
sarl
pushf
cld
ret
outsl
pushf
cld
mov
pop
popf
cld
stos
inc
movsb
cld
mov
and
mov
pushf
cld
jnp
pushf
cld
add
cmp
xchg
cld
pop
movsl
cmp
jno
cld
dec
jge
cld
inc
dec
test
cmp
cmp
xchg
cmp
mov
cmp
filds
test
sar
test
rcr
test
rorb
call
shrb
test
shlb
test
rolb
rcl
cmpb
sbb
add
sar
sbbl
shl
addl
shlb
andl
cmp
dec
rcr
addb
cmpb
mov
xor
lods
subb
repnz
decl
jne
clc
fbstp
sbb
or
and
push
je
clc
push
je
clc
arpl
je
clc
arpl
mov
sar
gs
clc
dec
je
clc
aas
je
clc
daa
je
clc
sub
testl
iret
outsb
sar
cmc
outsb
sar
jmp
testl
jmp
add
lock
pop
push
sar
shrl
clc
jmp
mov
clc
add
js
call
add
addb
add
add
jns
jns
decl
js
incl
js
pushl
decl
jb
lcall
jb
jmp
jb
pushl
sti
decl
sti
lcall
jns
jmp
js
ljmp
js
ljmp
jb
lcall
sti
ljmp
sti
jmp
xchg
sti
pushl
add
add
adc
lcall
add
cmp
movsl
cld
xor
movsl
cld
and
movsb
cld
sbb
movsl
cld
or
lods
cld
add
stos
cld
sti
sti
stos
cld
repz
jecxz
movsl
cld
fistl
movsl
cld
shll
movsl
cld
lret
lea
cld
mov
in
cld
stos
lods
stos
cld
mov
lret
stos
cld
xchg
fildll
add
mov
movsb
cld
addl
jnp
test
cld
imul
arpl
stos
cld
pop
xor
stos
cld
dec
add
lods
inc
int
lods
cmp
dec
lods
xor
push
lods
sub
in
lods
and
fisubrs
int
scas
or
lcall
int3
mov
lock
sahf
scas
call
int3
les
ror
pushf
lods
enter
add
int3
fsubrl
mov
mov
test
stos
stos
mov
int3
loopne
nop
int3
enter
aam
or
cmpsb
js
add
jo
adc
pusha
int3
push
cmpsb
pop
int3
decl
leave
clc
stos
cwtl
leave
clc
fwait
nop
leave
clc
mov
leave
clc
addr16
leave
clc
mov
dec
leave
clc
fwait
pop
leave
clc
stos
pop
leave
clc
iret
dec
leave
clc
add
dec
leave
clc
loope
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
sti
cmp
mov
sti
ljmp
mov
add
add
sti
dec
mov
sti
jmp
pop
add
stc
jno
call
jno
ljmp
jo
incl
jo
jmp
jo
mov
jo
jmp
jb
incl
jb
jmp
jb
inc
jno
pushl
jb
dec
jno
call
jno
cld
add
xchg
cld
arpl
cld
push
add
je
cld
pushl
cld
cmp
cld
pushl
pushl
pushl
pushl
pushl
cld
add
nop
cld
sti
in
mov
repz
mov
jmp
mov
jecxz
cld
cld
lret
loop
pushl
cld
mov
daa
add
je
cld
incl
je
cld
pushl
pushl
cld
mov
add
je
out
hlt
test
add
test
add
test
add
test
add
add
xchg
push
leave
lock
dec
leave
pop
xchg
inc
leave
je
cmp
js
xor
jle
sub
xchg
xchg
and
adcb
push
xchg
or
adc
enter
enter
enter
enter
hlt
add
xchg
ror
cwtl
xchg
enter
ror
xchg
mov
enter
enter
enter
enter
enter
add
mov
and
pop
or
aad
je
imull
sub
arpl
aam
jae
aam
push
jmp
rcrb
cmpsl
sahf
push
dec
rcrb
data16
xchg
push
add
cli
inc
arpl
mov
add
pushf
cli
cmp
jae
push
dec
push
jmp
push
push
dec
mov
push
inc
jnp
pop
outsb
jmp
adc
fs
push
inc
fs
lea
dec
add
pop
addr16
cmp
cmp
add
add
or
insl
lock
add
gs
add
dec
add
xor
jbe
jae
fs
inc
gs
add
gs
pop
push
pop
fs
jns
fs
add
add
gs
push
jno
pop
fs
js
pop
jne
ss
dec
andl
fldl
add
lcall
arpl
pop
jae
dec
negb
pop
je
or
sbb
push
push
sbb
hlt
scas
add
call
arpl
arpl
cmp
cli
pusha
jo
dec
icebp
scas
push
je
mov
push
mov
xchg
mov
outsb
lea
pop
mov
cld
cltd
negb
pop
outsb
cmp
dec
push
cmp
dec
pop
popa
pop
fdivr
leave
add
add
pop
sub
push
adc
push
pop
pop
xor
cmp
pop
and
push
cmp
push
xor
hlt
add
add
fstpl
xlat
cmp
popa
int
adc
enter
movsl
add
dec
push
repz
cltd
push
xlat
inc
hlt
add
lahf
push
fistl
pop
mov
add
adcl
xor
xchg
add
add
aaa
cmp
andb
add
push
test
push
aaa
add
testl
arpl
inc
outsb
push
lret
add
and
push
arpl
and
add
notb
or
push
addr16
arpl
adc
arpl
pop
xor
mov
fs
aam
insl
jmp
jecxz
inc
les
mov
arpl
fwait
daa
dec
les
dec
fs
inc
cmp
pop
xor
ljmp
push
and
pop
fs
dec
add
jo
inc
outsl
dec
xor
popa
insb
xor
into
add
sub
int
pusha
gs
inc
xor
pop
add
cmp
sub
push
arpl
lock
imul
mov
push
push
pop
popa
inc
and
imul
push
popa
outsb
inc
repnz
inc
pop
inc
jne
sub
sub
pop
dec
cmp
fs
xor
dec
add
pop
popa
cmp
push
addb
add
and
pop
push
dec
sahf
pop
pop
pop
lods
cld
lock
push
nop
arpl
sub
lods
cld
ljmp
pop
insb
add
pop
pop
arpl
inc
add
lock
or
pop
insb
xor
lock
add
dec
rorl
dec
int
dec
pop
movb
movb
movsb
mov
dec
dec
xchg
shlb
popf
stos
cld
ret
cmc
push
je
orb
rorl
mov
pop
nop
stos
cld
lods
clc
add
addr16
sub
pop
pusha
pop
jg
add
mov
pop
sub
push
pop
cmp
sub
xchg
pop
sub
pusha
cmp
sub
add
dec
push
push
push
cmp
cmp
sub
dec
or
xor
mov
pop
out
rorb
push
pop
enter
xlat
pop
add
add
inc
rorb
dec
shlb
cmp
cmp
add
cmp
mov
push
xor
test
fs
dec
xor
testl
test
push
add
inc
sub
ds
push
and
sub
arpl
ret
daa
jbe
mov
push
arpl
lods
outsb
test
inc
arpl
add
daa
imul
ljmp
inc
lds
cmp
dec
dec
popa
insb
cmp
data16
popa
test
push
dec
popa
jae
insb
gs
pop
add
sub
inc
fs
pop
inc
dec
pop
push
outsl
pop
je
cs
mov
pop
popa
popa
xor
ficoms
je
sub
fisubrs
add
add
data16
gs
pop
pop
inc
jmp
imul
daa
je
loop
add
jae
cmp
inc
das
pusha
je
sub
es
hlt
pop
add
cld
cld
inc
xchg
fldenv
cltd
push
addr16
pop
pusha
fwait
addr16
pusha
xchg
pop
push
movsb
add
xchg
pop
lcall
sub
push
sbb
imul
in
push
out
js
out
insb
adc
add
mul
pusha
je
inc
push
arpl
inc
inc
imul
stos
cld
mov
cli
pusha
je
add
aad
inc
imul
stos
cld
dec
mul
pusha
je
add
pusha
shll
push
mov
out
push
or
popa
mov
xor
bound
xor
add
nop
push
ss
xor
xor
dec
xor
add
inc
je
sbb
push
pop
dec
sub
and
add
add
cs
and
inc
cmp
xor
inc
inc
pusha
xlat
pop
adc
add
pop
enter
mov
adc
add
add
int
add
shlb
dec
or
and
add
push
imul
xchg
xor
sub
stos
push
add
inc
arpl
cmp
pop
imul
imul
imull
arpl
cs
push
or
sub
sbb
mov
arpl
adc
pop
inc
frstor
inc
inc
xlat
sub
int
je
add
pop
ljmp
shlb
roll
add
push
jmp
pop
outsb
xor
jae
hlt
pop
pop
jae
or
add
pop
jo
pop
insb
outsl
ds
add
pop
jo
push
pop
fldl
lds
xchg
sub
jo
push
pop
popa
subl
outsb
sub
inc
inc
sub
jge
pop
push
pop
popa
and
je
lea
movb
add
add
push
jno
lret
pop
pop
jb
push
popa
je
sub
push
cs
je
pop
data16
pop
cmp
and
jmp
fistl
addr16
int3
mov
cld
jg
loop
arpl
enter
xor
dec
xchg
pop
arpl
aam
insl
adcb
imul
cmp
nop
xor
hlt
push
std
cmp
inc
andl
dec
xchg
insb
and
push
dec
sbb
pop
add
in
std
inc
sbb
outsb
sbb
sbb
imul
testl
hlt
add
add
sub
arpl
pop
aaa
push
int
adc
dec
or
add
add
push
int3
push
xchg
sub
pop
mov
leavew
sub
pop
add
add
pushw
push
push
aaa
mov
push
inc
and
pop
xor
andl
or
sub
mov
ss
push
and
push
cmp
push
adc
and
hlt
add
push
and
sub
push
enter
ret
sub
xor
mov
dec
or
bound
add
sub
idivl
and
mov
add
sub
inc
insb
mov
cltd
sub
dec
add
insb
mov
push
sub
test
dec
test
push
pop
xchg
and
sub
push
arpl
and
dec
and
pop
aas
pop
arpl
add
addr16
and
push
outsl
add
pop
imul
push
mov
pop
add
push
insb
jae
dec
pop
jo
pop
cmp
fdivr
ds
pop
insl
sub
repz
cmp
imul
push
outsl
push
pop
pop
popa
inc
inc
popa
insb
sub
pusha
insl
mov
push
insb
je
inc
jno
push
push
pop
inc
jne
push
mov
insb
jae
push
pop
popa
sub
incl
ud0
insb
push
dec
gs
pop
insb
outsl
add
hlt
out
je
pop
push
pop
adc
push
dec
hlt
int
inc
fyl2x
js,pt
sbb
fadds
xor
or
hlt
loope
imul
push
pop
mov
dec
add
mov
arpl
pusha
inc
push
hlt
pop
stc
push
fisttpl
xchg
shll
jae
jp
inc
insb
lods
cld
mov
add
cltd
pop
pop
push
jl
imul
push
imul
pop
outsb
sub
fs
inc
cmp
sbb
out
dec
add
dec
sbb
dec
push
sub
pop
and
sub
pop
adc
pop
out
jl
and
push
adc
pop
or
dec
add
xor
shrb
pop
hlt
add
add
lea
or
shrb
pop
hlt
add
add
sub
add
mov
pop
and
add
add
bound
xchg
pop
push
add
xchg
dec
inc
and
inc
and
mov
add
mov
xor
das
daa
arpl
sub
push
lds
xor
inc
arpl
ret
dec
ret
add
pop
testb
add
xor
push
imul
jo
into
inc
jb
mov
jne
lods
mov
cmp
mov
outsb
mov
sub
mov
inc
dec
lods
sub
sub
jmp
and
xor
pushf
sbb
insl
add
push
popf
or
add
pop
imul
jae
push
pop
push
add
push
pop
outsb
push
dec
pop
je
in
pop
jae
sub
dec
or
clc
push
pop
push
cld
push
je
cli
push
inc
jne
push
popa
jo
and
pop
je
or
shlb
je
sub
pop
je
push
pop
jae
or
dec
mov
push
insl
je
pop
pop
outsl
int
cmp
sahf
dec
pop
jb
push
jo
add
jae
cmp
jge
dec
sbb
pusha
outsb
dec
sahf
cld
aaa
hlt
pop
push
pop
push
repnz
dec
adc
add
or
dec
add
push
push
fstpl
imul
inc
push
push
popf
cld
test
loop
je
push
pop
outsb
mov
push
arpl
sbb
push
sbb
xchg
mov
add
testb
je
aad
arpl
dec
imul
test
push
imul
dec
imul
push
push
and
push
inc
pop
out
sbb
stos
pusha
and
push
inc
sub
inc
sbb
pop
sbb
cmp
push
add
inc
arpl
daa
sbb
sub
mov
dec
push
shll
cmp
or
or
pop
add
and
xor
test
sti
pop
popf
and
add
pop
call
and
aas
xchg
xor
out
push
pop
mov
push
sub
cmp
lcall
add
push
cmp
push
and
inc
xor
lods
cmp
push
subb
imul
pop
fs
and
shll
add
add
and
add
and
push
mov
and
mull
arpl
lds
sub
stos
sub
ret
sbb
rolb
or
inc
arpl
xor
incl
push
dec
imul
pop
popa
outsb
imul
fs
push
pop
addr16
lcall
add
add
add
add
loopne
jo
dec
data16
add
inc
jae
fstpl
enter
les
movsb
add
fidivs
repnz
dec
push
push
out
repz
gs
inc
fs
add
add
fnsave
clc
imull
cli
fisttpll
push
add
add
jmp
arpl
push
addr16
roll
push
fsubs
dec
pop
imul
add
push
add
leave
add
lcall
inc
xchg
aaa
outsb
sbb
xor
andb
and
daa
je
push
xor
dec
push
imul
ljmp
shl
push
imul
or
es
cld
and
mov
cld
add
out
je
pop
and
mov
add
cltd
mov
xor
add
add
sub
inc
dec
xor
out
add
stos
sub
mov
xor
mov
pusha
add
sub
push
xorb
push
jp
push
daa
mov
adc
sub
push
mov
movb
xor
cmp
loope
dec
sub
push
out
je
push
daa
loopne
dec
xor
aaa
xor
add
hlt
add
add
xor
and
add
daa
test
adc
nop
sbb
pop
cmc
notl
lods
fidivrl
dec
rcrb
into
sbb
jmp
icebp
cmp
cmp
dec
insb
mov
negl
push
adc
mov
adc
movsl
sarb
cmp
mov
push
lods
cmp
imul
sub
add
cmp
mov
sub
pop
cmp
notl
push
inc
push
sub
mov
add
jecxz
push
outsb
add
cmp
out
imul
shl
insb
popa
stc
push
pop
arpl
add
add
fldcw
mov
icebp
pop
addr16
add
out
pop
aas
gs
inc
cmp
or
add
add
add
pop
arpl
or
push
jecxz
push
sbb
push
pop
arpl
or
add
fstpl
sub
imul
repz
mov
call
cmc
dec
gs
in
mov
or
lcall
mov
loop
je
lods
and
add
xchg
popf
cld
fcomi
pusha
sub
add
add
push
sahf
cld
and
pop
and
pop
sub
jo
add
lock
xchg
xor
jl
imul
into
add
sub
jl
push
cmp
hlt
popa
cs
or
sbb
or
es
fisttpll
arpl
fisubrs
pop
out
inc
add
dec
std
inc
roll
outsb
aad
adc
movsb
or
lds
add
jmp
sbb
pop
xor
add
and
mov
lret
aaa
ret
add
lret
xor
xor
sbb
xor
out
pop
add
mov
das
adc
cs
inc
out
addb
es
jp
ret
add
add
xor
rcrl
daa
fstps
add
add
add
add
pop
inc
dec
mov
and
sbb
mov
inc
arpl
shll
add
enter
idivl
addr16
lret
and
insl
fidivrl
sub
std
popf
daa
es
or
insl
ret
jo
notl
inc
fwait
sbb
pop
test
xchg
ljmp
shlb
inc
fcoms
aam
add
iret
pop
je
es
inc
push
mov
add
mov
aas
or
mov
dec
imul
add
arpl
fisubrl
push
dec
imul
loope
jne
in
pop
insl
or
loop
dec
mov
fbld
out
gs
add
add
lcall
push
mov
jae
int
or
pop
fbstp
jno
push
and
gs
in
add
push
js
dec
popa
jmp
fs
imul
out
icebp
div
xor
push
push
imul
aas
das
inc
mov
push
je
add
jae
or
imul
and
add
mov
arpl
lcall
push
je
arpl
xor
outsb
and
jne
push
pop
je
jno
dec
push
shrb
hlt
dec
add
mov
sub
jp
je
xchg
pop
add
mov
inc
sbb
dec
arpl
sub
sub
add
push
ret
sub
lds
xor
loope
dec
and
dec
out
add
repz
mov
add
ss
xor
push
xchg
xor
and
and
adc
add
xor
push
xor
xor
mov
xor
mov
cmp
add
add
xor
and
xchg
cmp
and
stos
leave
sub
add
add
sbb
xor
sbb
testl
pop
push
test
in
std
sbb
and
or
and
call
arpl
mov
imul
lock
ljmp
enter
sbb
inc
je
or
add
idivb
pop
int
das
arpl
push
xor
add
sbb
fidivs
xchg
add
push
repnz
arpl
adc
arpl
lock
je
out
jae
out
pusha
jo
fldt
mov
add
outsl
sbb
pop
jb
push
je
movsb
ficompl
mov
insb
jb
hlt
jo
add
pop
jb
icebp
jae
call
lock
hlt
jo
lock
pop
jb
lock
call
add
sarl
arpl
fisubl
in
jae
fisubl
sub
imul
or
xchg
cmp
sbb
je
je
arpl
xor
and
outsb
daa
lea
insb
hlt
mov
dec
adc
cmp
push
das
arpl
dec
decb
push
inc
jo
push
inc
arpl
repz
dec
cltd
adc
mov
test
lods
cld
xor
repnz
je
or
popa
mov
cld
lock
pop
sub
pop
pop
imul
and
push
cmc
push
je
lds
dec
inc
rolb
sub
xchg
cmp
add
add
sub
xchg
sbb
addl
call
sbb
out
aas
daa
add
sub
cmp
rolb
add
dec
and
popf
daa
or
cltd
inc
push
push
xchg
sub
add
xor
sub
sbb
sub
xor
and
cli
add
sub
es
sub
push
pop
sub
sub
sub
into
adc
add
sub
aam
ja
lret
and
add
add
adc
push
mov
fildll
daa
sbb
and
pop
pop
adc
add
add
aas
dec
pop
push
addr16
fildll
in
js
mov
fildll
loopne
dec
add
and
push
std
imull
sub
sbb
xor
arpl
adc
dec
enter
and
fildll
add
addr16
lods
icebp
pop
add
push
inc
jae
add
out
ja
xor
fs
add
gs
shll
je
push
outsl
mov
imul
dec
add
or
dec
inc
or
in
insb
dec
add
jae
fiaddl
je
pmaxsw
shl
fs
call
add
dec
add
add
add
out
gs
in
imul
pop
arpl
lock
push
cld
sbb
aaa
shrl
and
sbb
imul
mov
insl
sub
cs
sub
sub
mov
cld
sbb
fidivl
outsb
mov
xor
lods
in
add
hlt
frstor
je
in
daa
fs
and
dec
and
testb
hlt
frstor
je
imul
sbb
or
push
hlt
cli
cmp
daa
je
add
les
add
add
dec
mov
sub
sub
pop
hlt
add
add
sbb
es
es
xchg
sub
cmp
add
sub
movsb
sub
sub
add
fldt
jns
hlt
add
add
and
inc
sub
and
fiadds
sbb
inc
hlt
add
add
movsb
adc
and
add
divl
sbb
xor
inc
insl
mov
push
push
jmp
adc
push
mov
jmp
imul
mov
shrl
inc
xchg
lret
and
call
sar
cltd
ret
cs
stos
comiss
jmp
sbb
cmp
jmp
or
cmp
out
testb
mov
cmp
sbb
stc
and
je
lock
fucom
jae
loopne
push
push
in
loop
add
add
add
pushf
xor
mov
imul
or
xchg
out
inc
mov
xor
test
add
pop
outsb
jno
pusha
outsb
jo
addr16
in
insl
push
pop
add
add
inc
js
scas
aad
adc
dec
dec
adc
xor
mov
push
add
in
push
out
in
dec
in
std
pop
inc
add
cmp
add
fisubl
pop
cmp
and
std
cmp
or
outsb
pop
int
dec
dec
push
inc
insb
arpl
sbb
cmp
jg
inc
xor
imul
addr16
cld
jbe
pop
xor
mov
inc
push
sbbl
and
cs
jne
cmp
jb
insl
fbld
imul
cld
cmp
out
sub
add
aad
daa
inc
fidivrl
cmp
dec
daa
add
dec
add
mov
inc
cmp
add
sbb
mov
es
mov
add
fwait
and
push
sub
cmc
sbb
push
out
sbb
sub
aaa
pop
es
sbb
and
stc
sub
push
sub
movsl
pop
inc
sub
pop
pop
fcom
fldl
pop
sub
int
cmpsb
xor
es
xor
xor
adc
sbb
hlt
add
add
and
and
and
hlt
add
mov
lods
inc
ds
sub
aam
fldcw
rcll
arpl
xlat
adc
adc
arpl
or
je
adc
add
arpl
add
es
push
es
shl
arpl
xor
lcall
faddl
jmp
lds
push
adcb
add
cmpsb
and
push
dec
push
insl
add
in
pusha
inc
mov
push
or
loope
gs
push
mov
push
add
loope
jo
xlat
jae
out
loopne
js
add
pop
popa
test
add
jae
mov
inc
inc
xor
add
pop
gs
arpl
negl
lea
jae
jns
imul
add
fs
loope
jae
xlat
sbb
cmp
add
add
repnz
aas
mov
and
inc
inc
jb
icebp
aaa
add
mov
push
cmpsl
in
inc
jb
cltd
xor
out
and
scas
cld
and
testb
cwtl
xor
leave
xor
mov
sbb
cld
xor
jbe
aas
cmp
scas
cld
adc
outsb
dec
aas
aaa
jb
insl
sbb
arpl
jp
inc
hlt
dec
dec
aas
daa
mov
fs
popa
cld
push
add
insb
dec
arpl
paddw
add
dec
and
or
fsubrs
out
jecxz
es
adc
and
and
daa
mov
daa
or
andb
and
add
add
and
das
cmp
push
imulb
push
sub
xor
int3
push
hlt
add
add
and
das
add
mov
sbb
and
add
cmp
mov
inc
pop
adc
and
add
add
es
sub
add
and
adc
je
or
cmp
outsb
dec
clc
jecxz
sub
adc
push
shll
je
mov
and
fsts
arpl
out
sub
adc
div
xor
and
adc
cmc
add
arpl
xlat
insl
rolb
adc
pop
daa
imul
not
dec
nop
inc
xor
mull
add
frstor
je
sahf
rcrb
xchg
push
add
out
jb
fldenv
mov
add
icebp
cmc
imul
cli
pop
arpl
inc
add
add
add
loope
inc
jo
cli
dec
gs
pop
jae
inc
add
sidtl
loope
cmp
pop
jno
imulb
test
pop
fs
push
int
push
add
jae
mov
gs
push
inc
popf
add
gs
jns
arpl
ja
arpl
insb
cld
fs
push
push
je
sbb
arpl
push
imul
fidivrl
sbb
iret
add
das
xor
cltd
sub
sub
xlat
cmp
stos
cld
pop
hlt
shrl
je
ficompl
push
fstps
outsl
addl
dec
add
into
cld
inc
push
xchg
sbb
or
dec
pop
mov
je
mov
adc
and
sahf
cld
xchg
hlt
push
push
je
push
push
arpl
insl
sub
add
mov
push
adcb
daa
jnp
hlt
add
add
and
mov
push
and
add
push
push
xchg
sbb
sbb
dec
add
adc
and
and
inc
hlt
add
add
sbb
xor
sub
and
sub
xor
fisttpl
add
add
dec
and
inc
push
sbb
iret
add
add
dec
push
aam
push
roll
popf
sbb
and
cmp
mov
sub
testl
sub
dec
inc
or
arpl
cmp
outsb
cmp
dec
push
aad
push
les
or
sbb
les
imul
add
dec
push
adc
push
and
jae
sbb
and
imul
testl
add
outsl
icebp
pop
inc
lea
dec
dec
jae
inc
inc
dec
mov
inc
dec
dec
dec
dec
push
dec
xchg
es
inc
fnstenv
gs
rcrb
sti
pop
outsl
dec
push
pop
add
bnd
int
cmp
mov
pop
gs
icebp
jae
out
icebp
imul
rcll
sub
icebp
imul
add
bnd
stc
in
je
shrl
mov
scas
das
arpl
pushf
cld
inc
inc
push
xor
insb
xor
add
jns
pop
adc
push
pushf
cld
in
mov
imul
and
push
flds
cld
sti
testb
pop
sarb
add
lock
sbb
shlb
add
sub
pop
test
fwait
cld
jmp
rcrb
imul
stc
insb
sub
imul
lock
sbb
imulb
pop
push
mov
fwait
testl
and
add
add
adc
push
sbb
add
lods
add
sub
adc
fwait
sbb
sbb
fwait
adc
add
xor
and
push
sub
inc
sub
shll
dec
xor
sbb
out
jnp
sbb
mov
sub
xchg
xor
push
fwait
push
inc
inc
hlt
add
pop
mov
or
mov
add
pop
add
sti
inc
addr16
sub
add
add
sbb
add
in
xor
adc
vmovaps
shlb
jo
rcrb
je
jmp
inc
arpl
lds
insb
mov
inc
js
sbb
je
sbb
or
arpl
sub
lea
pop
push
adc
fs
fstpl
sub
jmp
testl
jmp
add
add
jmp
testl
jmp
int
add
int
add
fldl
add
fldl
add
int
add
int
add
popf
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
incl
hlt
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
fwait
cld
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
mov
aas
inc
mov
call
add
add
add
add
dec
mov
pop
inc
mov
out
hlt
add
add
add
add
add
add
add
inc
mov
add
testl
out
testl
call
add
add
pop
lcall
jmp
cld
jns
jmp
testl
jmp
orl
testl
testl
push
testl
leave
testl
jmp
testl
jmp
testl
add
das
push
inc
add
pop
add
sbb
pop
add
or
test
fldl
add
int
add
std
lds
inc
fldl
add
fldl
add
mov
push
add
popf
push
add
lea
add
lea
add
adc
adc
push
add
lea
mov
idivb
inc
pop
push
add
xorps
add
sahf
mov
inc
fldl
sub
jnp
hlt
sub
rorb
cmc
push
mov
pop
lahf
mov
jl
jae
jle
mov
loopne
lcall
int3
xor
ret
je
cmp
cmpsl
xor
ret
aad
ret
stos
pushf
jnp
push
jns
mov
mov
add
xchg
xlat
lea
fistl
jge
cmp
adc
imul
mov
arpl
repnz
fisubrs
or
mov
lahf
pushf
mov
hlt
es
mulps
mov
popa
push
fcmove
iret
jle
push
xor
in
sahf
int
jge
sub
jecxz
xor
es
sahf
js
outsb
mov
add
sub
test
cmp
pop
xchg
mov
mov
mov
adc
add
add
iret
scas
mov
xor
push
scas
inc
adc
sti
xor
enter
test
mov
sub
adc
out
jmp
lods
lods
xchg
popf
cmp
xchg
push
inc
add
mov
cmp
push
cmpsb
movsb
cmp
je
jo
pop
movsb
cmp
cmp
fistps
dec
xchg
jl
mov
xor
sbb
daa
xlat
dec
xchg
add
jae
add
rcl
mov
cmp
sarb
add
es
aas
loop
daa
lea
mov
add
data16
add
ljmp
lcall
dec
dec
ds
out
lret
out
aam
sbbl
xor
pop
ficomps
mov
jns
cmp
mov
imul
jecxz
and
cmp
add
xchg
jne
inc
cmp
inc
sub
push
adc
add
xorb
hlt
xor
and
in
xor
adc
enter
lds
xor
mov
repnz
insb
cmp
sbbb
popa
orb
js
fnstcw
mov
clc
pusha
pop
xlat
fwait
cld
push
decl
inc
hlt
mov
inc
add
mov
push
inc
hlt
push
push
inc
hlt
addr16
inc
hlt
imul
hlt
pop
push
inc
hlt
arpl
inc
hlt
add
adc
out
hlt
add
add
add
add
add
add
add
add
add
fdiv
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
out
add
add
add
add
mov
add
out
hlt
add
add
add
scas
repnz
add
add
add
add
add
add
scas
rolb
add
add
add
add
jmp
movsl
inc
add
testl
jmp
test
jmp
testl
pop
gs
add
testl
jmp
add
add
stos
bound
jmp
testl
shll
add
jmp
testl
jmp
testl
and
add
testl
jmp
cmp
add
pop
add
lea
add
loop
cmp
pop
pop
add
dec
pop
add
dec
pop
add
add
leave
cmp
pop
pop
add
dec
pop
add
dec
pop
add
jbe
cmp
sbb
pop
add
or
lds
add
pop
add
or
dec
cmp
fldl
add
int
add
int
add
in
dec
cmp
fldl
add
int
add
int
add
push
dec
cmp
popf
push
add
lea
add
hlt
imul
hlt
aaa
enter
add
add
imul
hlt
imul
hlt
imul
hlt
push
ret
imul
hlt
imul
hlt
imul
hlt
mov
cmp
hlt
imul
hlt
imul
hlt
leave
ret
imul
hlt
imul
hlt
imul
hlt
ret
hlt
imul
hlt
imul
hlt
imul
hlt
jae
cmp
hlt
imul
hlt
imul
hlt
adc
cmp
add
imul
hlt
imul
hlt
cmpsl
ret
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
out
hlt
add
add
add
mov
add
out
hlt
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
hlt
add
add
add
xor
add
out
hlt
add
add
add
xor
add
out
hlt
add
jmp
out
add
testl
jmp
ds
testl
jmp
es
add
testl
jmp
push
aas
add
testl
jmp
add
add
or
ds
testl
jmp
ret
jmp
testl
push
inc
add
testl
jmp
roll
add
add
add
add
add
push
add
lea
add
popf
add
add
insb
cmp
lea
add
lea
add
pop
add
add
into
insb
cmp
dec
add
add
add
pop
add
add
insb
cmp
dec
add
add
add
sbb
insl
cmp
or
add
add
insb
cmp
or
add
add
add
add
add
add
add
add
imul
hlt
nop
out
hlt
imul
hlt
imul
hlt
imul
hlt
in
add
add
add
imul
hlt
imul
hlt
imul
hlt
ds
ds
imul
hlt
imul
hlt
imul
hlt
cmpsl
dec
aas
hlt
imul
hlt
imul
hlt
imul
hlt
fists
push
imul
hlt
imul
hlt
push
cwtl
ds
imul
hlt
imul
hlt
imul
hlt
outsb
add
hlt
imul
hlt
imul
hlt
imul
hlt
dec
mov
hlt
add
add
hlt
add
add
add
add
add
add
add
out
hlt
add
ljmp
adc
add
or
add
pop
or
add
xlat
or
out
mov
pop
sbb
lcall
mov
and
mov
pop
sbb
daa
sbb
mov
add
outsl
sbb
arpl
xor
add
or
decl
call
daa
add
in
cmp
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
clc
in
testl
dec
ds
xor
dec
sbb
pusha
shrl
js
jmp
testl
add
dec
movsb
aas
fnsave
add
sbb
add
test
push
cmp
adc
xor
push
insb
xor
push
jl
and
xor
pushf
xor
push
lods
xor
mov
xor
push
fdivl
add
push
in
xor
push
cld
xor
or
inc
push
clc
decl
add
in
add
pop
push
add
dec
push
adc
cmp
xor
xor
pop
push
inc
xor
push
xor
push
test
hlt
stc
int3
fwait
les
int3
mov
and
int3
int3
jmp
cwtl
int3
sti
add
rorl
add
inc
shrl
add
pop
rorl
pop
rcrl
call
imul
sarl
mov
not
fwait
lds
stos
mov
and
rcl
and
pusha
into
or
js
sbb
inc
into
sub
mov
into
dec
out
into
pop
out
into
imul
pop
rorb
aaa
jnp
pop
aaa
adc
aaa
jnp
add
ss
sarb
ss
ror
ss
pushl
ret
rorb
ss
sarl
ss
aas
ss
fcmovnbe
arpl
jg
jnp
pop
xor
jnp
scas
xor
sbb
aas
xor
sbb
dec
xor
sti
xlat
fbstp
ret
xlat
rdtsc
mov
xlat
add
fnsave
test
xor
std
xor
lea
jge
popf
xor
lret
mov
xor
ret
insb
xor
mov
sbb
lds
cmp
and
lret
fdivl
add
stos
cld
xor
mov
jge
pushf
xor
dec
mov
xor
add
xor
insb
xor
out
add
and
sub
lds
in
push
lods
xor
push
mov
int
mov
xor
push
cmp
push
les
in
push
sub
cmc
push
xor
insl
push
pushf
ss
movsb
ss
push
mov
lea
add
sbb
cmp
dec
clc
cmp
mov
dec
adc
mov
cmp
dec
and
lea
add
test
cmp
inc
lods
cmp
inc
mov
sbb
inc
les
hlt
cmp
lret
or
lret
jge
repz
sti
into
jno
bswap
jno
pop
mov
add
daa
das
adc
das
das
jo
aaa
pop
jo
aas
pop
and
inc
add
enter
enter
or
clc
inc
addr16
jg
repz
rol
fwait
rolb
shrb
xchg
mov
sub
ror
rol
sbb
leave
dec
jbe
jae
jbe
add
add
sarl
xor
iret
cmp
mov
rolb
imull
xchg
enter
enter
cmp
movl
fs
jno
push
leave
mov
out
mov
add
sar
xor
rcl
xor
aam
xor
sub
xorb
xor
push
xor
mov
xor
push
sub
xor
inc
xor
cmp
xchg
add
clc
xor
xor
popf
xor
inc
xor
inc
pop
xor
and
ret
and
jle
mov
aaa
xor
scas
imul
rorb
jecxz
out
cmp
mov
test
jge
and
adc
outsb
cmp
inc
je
popa
testl
shll
cmpsl
cmpsb
das
jge
scas
das
add
pop
lds
call
xor
pop
out
pop
push
push
xor
push
inc
xor
push
xor
push
sti
xor
mov
xor
inc
push
xor
addb
outsb
aas
lret
cmp
aas
aaa
cmp
sarl
mov
dec
test
cmp
cmp
cmp
cmp
cmpsl
dec
cmp
add
sarb
leave
dec
pop
aas
or
cmp
adc
popf
inc
clc
ljmp
add
hlt
mov
cmpsb
and
aam
and
xchg
mov
push
jns
cmp
push
dec
out
push
gs
out
int
out
int3
cmp
jno
pop
leave
lahf
iret
push
leave
fmul
mov
pusha
lret
ret
leave
xchg
and
leave
nop
sub
int3
lcall
lds
mulps
cmpsl
jmp
xchg
lds
lock
shlb
bswap
pop
loopne
enter
rcrb
mov
or
mov
dec
xor
enter
enter
lds
test
fnstenv
xor
mov
jb
add
add
shr
xor
rcrl
jg
inc
shll
xor
xor
shlb
cmp
aaa
cmp
iret
mov
scas
iret
shlb
pop
into
lods
cmp
sub
leave
push
xor
mov
hlt
add
sarb
cmp
add
in
mov
cmp
lods
test
cmp
xchg
std
testl
add
inc
imul
inc
je
sarb
fnstenv
jl
push
xor
das
iret
aaa
dec
inc
imul
or
add
xor
cmp
jno
jmp
testl
data16
mov
jbe
subl
push
cmpsb
xchg
xchg
mov
cs
mov
cmpsb
dec
add
lret
xor
push
jb
jecxz
sub
xor
push
repz
push
sti
xor
add
push
or
inc
push
adc
sub
xor
push
and
sub
xor
push
xor
dec
push
cmp
push
push
inc
xor
dec
xor
push
pop
xor
arpl
stos
imul
ss
dec
aaa
jnp
push
aaa
xorl
aaa
mov
inc
aaa
xchg
xor
aaa
fwait
xor
jb
sbb
mov
and
stos
sub
hlt
dec
xor
out
xor
push
xor
push
xor
xor
xor
xor
dec
xor
aas
xor
fbstp
test
fbstp
lea
iret
xor
pop
mov
xor
out
xor
out
xor
push
xor
xor
enter
mov
xor
pop
das
cmp
pop
movsb
cmp
cmp
add
out
inc
mov
outsb
cli
add
add
xor
xor
add
jl
aas
ss
xor
enter
xchg
cmp
aaa
xor
dec
aaa
stc
aaa
cld
cmp
sarl
lds
pusha
cmp
cmp
xor
cmp
sub
cmp
cmp
xor
xchg
das
dec
inc
dec
xor
inc
push
or
cs
push
cs
inc
lods
sub
incl
pop
or
das
push
call
mov
lock
das
out
cs
pop
cs
lret
mov
lcall
add
mov
sub
cmp
sub
push
or
xor
add
sub
cmpsb
call
aad
mov
jecxz
jns
repnz
enter
rorl
lret
mov
xor
clc
xor
jae
dec
push
sahf
xor
xchg
sub
pop
cmp
das
cmp
xor
cmp
sub
leave
sub
cmp
push
sub
ds
push
ds
lods
ds
push
aas
movsb
lea
stc
std
pop
add
pop
aaa
add
xor
les
movsl
xor
xor
xor
xor
xor
xor
jp
je
mov
aaa
cmpsb
sub
cmp
das
pop
cmp
mov
pushf
cs
cmp
cmp
sub
xor
add
push
divl
aad
lods
xor
sub
pop
xor
addr16
or
jno
in
xor
xor
fdivrs
dec
shrb
fs
out
fadd
ja
mov
xor
cmp
sub
cmp
hlt
pop
mov
push
mov
mov
add
pop
cs
out
sub
mov
sbb
add
loopne
aaa
mov
int
fadd
cli
xor
lret
scas
xor
mov
sub
cmc
cmp
sub
cmp
xchg
sub
cmp
sub
cmp
cs
clc
sub
inc
das
adc
jp
pop
cmp
cltd
cmp
and
aas
add
ljmp
push
add
add
xor
aaa
inc
xor
xor
add
add
push
xor
ss
xor
xchg
xor
pop
xor
cmp
dec
cmp
sub
or
add
rol
xchg
mov
insl
xor
sub
cmp
and
cmp
xchg
cmp
adc
cmp
add
popf
stc
push
cmp
icebp
jo
mov
xchg
push
sbb
add
xchg
enter
add
das
das
adc
fsubrs
pop
push
cs
daa
pop
cs
and
aam
cmpsb
add
sub
add
xor
or
xor
xchg
xor
in
outsl
xor
ljmp
add
arpl
das
cmp
mov
sub
cmp
cmp
sub
adc
pop
cmp
sub
cmp
sub
add
add
je
push
add
add
les
sub
mov
popa
daa
lock
adc
sub
add
add
add
xor
xor
xchg
xor
das
outsl
ss
xor
aaa
sub
xor
aaa
mov
sub
cmp
xorl
int3
or
xchg
mov
out
mov
dec
cmp
sbb
cmp
or
ss
repnz
dec
jecxz
xor
fildl
mov
mov
add
hlt
stos
sub
les
xor
es
xor
sub
or
adc
or
sub
call
xor
das
xchg
xor
mov
xor
xchg
xor
je
add
repnz
cmp
add
mov
hlt
add
xor
push
aaa
ss
sub
xor
sub
xor
das
or
xor
das
in
xor
cs
insl
xor
jle
jne
xchg
insl
xor
test
xchg
das
lea
sahf
das
jne
xchg
add
stos
xor
in
xor
in
xor
in
xor
in
xor
lds
adc
pop
xor
les
repz
jmp
add
repz
xor
and
xor
and
xor
add
sbb
sti
add
xor
add
xor
in
xor
in
xor
add
shlb
xor
lret
adc
push
xor
mov
ljmp
sub
aaa
pop
sub
rcll
xor
cmp
sub
shll
xchg
cmp
daa
cmp
stos
cmp
sub
add
add
add
xor
xor
pop
xor
dec
xor
and
add
sbb
xor
adc
xor
xor
xor
xor
xor
pop
adc
cmpsl
cmp
cmp
pop
nop
cmp
push
cmp
sbb
cmp
hlt
mov
add
insl
cmp
dec
into
cld
push
push
inc
add
sub
in
sub
mov
in
cs
vcvtsd2si
lds
shufps
movb
es
xor
es
sub
daa
pop
ljmp
pop
nop
sub
pop
mov
pop
je
or
loopne
xor
cmc
das
xchg
loopne
das
ror
mov
add
cmp
das
test
out
fwait
sub
das
mov
add
in
jmp
stc
sub
add
sbb
sub
jg
push
cs
cs
sbb
cs
sbb
das
jne
pop
das
pop
sbb
ret
cmp
sbb
cmpl
and
aaa
icebp
pop
add
cmp
ja
lods
and
xor
dec
and
and
push
mov
add
hlt
add
xor
add
and
jge
sub
outsb
sub
faddl
sti
sub
push
shrl
push
mov
out
sub
out
xor
lret
cmp
sti
les
xor
les
or
pop
xor
push
xor
adc
or
xor
sbb
into
adc
cmp
add
dec
xor
cs
pop
xor
jmp
cmp
loop
dec
ret
insl
cmp
cmc
sbb
aas
ficoms
test
mov
fistpll
dec
in
pushl
add
lcall
aaa
xor
xorb
sbb
stos
adc
mov
fistl
and
push
xor
xor
cltd
xor
ss
das
pop
ss
divb
add
jae
inc
and
jmp
cmp
push
sbb
cmp
sbb
cmp
sbb
add
push
cmp
sbb
cmp
add
hlt
dec
aaa
ss
or
insl
mov
enter
fbstp
sub
xchg
xor
and
xor
sbb
xor
repnz
sti
xor
rep
insb
incb
sub
cld
push
lock
in
sub
int3
sub
les
lret
les
sub
add
stc
xor
and
dec
add
cmpsl
aaa
in
add
aaa
jmp
aam
ret
mov
cmp
pop
sub
insl
push
pop
cmp
sbb
sub
add
jmp
pop
sbb
xor
and
xor
and
xor
pop
ret
xor
pop
inc
xor
dec
xor
pop
add
add
pop
sbb
add
xor
adc
inc
xor
adc
xchg
xor
adc
xor
adc
pop
loopne
cs
gs
loop
sub
and
lret
jp
push
ret
pushf
xor
sub
xor
jb
test
repnz
xchg
xor
out
xor
out
add
out
or
iret
iret
pop
cmp
fucomip
aaa
xchg
iret
fidivl
outsb
iret
mov
aas
pop
dec
aaa
daa
pop
cmp
aaa
loope
add
add
add
or
icebp
push
daa
aaa
decl
sbb
add
sub
cmp
sub
cmp
das
stos
cmp
xor
cmp
cmpl
in
mov
pushf
adc
jl,pt
sarl
lods
adc
ds
adc
aas
pop
icebp
stc
jmp
add
jnp
jl
int3
sbb
xor
adc
xor
adc
add
bound
mov
xorb
pop
mov
aaa
adc
xor
popf
push
ds
sub
mov
hlt
xorl
add
aaa
push
jecxz
ss
xorb
jecxz
aaa
mov
movsl
aaa
daa
int3
es
mov
jge
and
sub
and
lcall
and
push
mov
sub
out
push
and
xchg
sub
ffreep
sub
iret
pop
xor
enter
rcrb
push
iret
sub
sub
das
mov
rcrb
add
add
xor
rcll
xor
pop
cwtl
xor
pop
ljmp
adc
cmp
or
adc
adc
adc
cmp
cmp
adc
cmp
adc
cmp
adc
xor
mov
lcall
adc
push
adc
dec
adc
aaa
out
adc
sub
sbb
fimull
repnz
ret
cmp
push
cmp
aam
stos
divps
in
or
aaa
sub
loope
ss
fnop
ss
ss
fstpl
xor
add
fnstenv
push
cmc
cmp
sbb
cmp
and
cmp
and
cmp
add
cmp
add
cmp
inc
cmp
or
cmp
loope
cmp
add
cmp
pop
clc
cmp
add
in
and
into
int3
das
add
jb
arpl
pop
push
js
push
push
lods
xor
adc
xor
adc
xor
push
push
xor
adc
add
adc
xor
push
ds
push
push
xor
push
xorb
push
stos
xor
adc
xor
adc
adc
jbe
in
notb
push
xor
jbe
in
ss
add
adc
scas
paddsb
push
sub
cmp
dec
es
cs
scas
cs
push
sbb
sub
out
jns
loop
popa
sub
ljmp
sbb
and
push
shr
sub
mov
sarl
mov
push
insb
sub
add
sub
add
sub
add
sub
ja
out
sub
iret
in
jnp,pn
sti
cs
jp
pop
movl
xor
imul
adc
test
adc
das
icebp
adc
aaa
sbb
adc
pop
adc
xor
dec
xor
adc
xor
adc
xor
adc
xor
xor
rdtsc
or
dec
xor
adc
xor
push
adc
xor
xor
stos
xor
ud1
ret
sbb
jmp
test
sub
cmp
inc
sub
sbb
jmp
add
cmp
xchg
cmp
into
adc
mov
fistpll
jns
jne
dec
seta
and
data16
cmpsl
pop
clc
lods
add
add
out
repz
push
add
xor
subb
out
das
jge
cmp
das
jmp
rcrb
enter
rcl
or
jb
data16
mov
dec
outsb
or
es
sub
add
sub
xor
lfs
icebp
push
shll
add
sysenter
add
inc
xor
es
xor
and
jp
push
es
xor
and
arpl
andb
ss
adc
jge
fbstp
add
aaa
push
adc
cmp
nop
cmp
sub
cmp
add
subl
cmp
es
sub
xor
aas
pop
popa
cli
pushl
add
add
insb
sub
pop
in
sub
in
in
xor
mov
xor
sub
rol
xor
es
es
xor
daa
cmp
xor
or
xor
or
das
aas
add
inc
call
daa
xor
lret
loopne
sub
dec
sub
sarl
lret
dec
ret
je
sub
les
test
das
js
push
xor
or
ja
add
in
sub
or
lcall
adc
push
adc
repz
hlt
add
xor
adc
lock
sbb
xor
or
sub
outsl
sub
mov
xor
add
cmovae
pop
bts
jmp
adc
es
adc
hlt
add
cmpl
add
add
xor
adc
xor
adc
xor
adc
inc
or
push
or
out
add
imul
cli
sub
in
out
sub
mov
mov
ret
scas
sub
es
andl
sub
add
xlat
sub
es
sub
pop
xorb
add
xor
aam
stos
or
xor
loope
xor
fisubl
xor
jg
mov
stos
ss
scas
enter
push
lods
xor
sbb
cmp
negb
cmp
sbb
cmp
and
cmp
xchg
sub
add
cli
incl
add
xor
shlb
sbb
xor
jge
add
test
and
xor
add
add
mov
pop
std
aaa
out
cmp
sbb
insl
cmp
lahf
cmp
sbb
cmp
sbb
mov
sbbl
cmp
stos
daa
jge
sbb
adc
xchg
sub
std
imul
fwait
and
sub
add
scas
sub
mov
add
sub
loop
sub
mov
sub
int
and
cmpsb
mov
and
sub
fs
cmp
xor
fldenv
stos
push
sbb
daa
dec
call
and
lock
and
loopne
and
fsubrs
out
rclb
add
add
inc
and
push
pop
es
push
ljmp
adc
mov
push
loop
hlt
add
xor
adc
int
je
jb
push
push
jl
bound
stos
xor
adc
sbb
cs
int3
cs
sbb
mov
sbb
sub
lahf
push
pop
sub
add
pop
adc
add
and
push
sbb
xchg
mov
rcll
sbb
or
shr
ret
loopne
aaa
js
jb
dec
adc
aaa
jmp
add
ss
icebp
divl
loopw
xor
adcb
xor
jle
cltd
xor
sub
cmp
and
ds
or
fisubl
adc
push
xor
push
add
xor
in
xor
ljmp
sbb
adc
sub
xor
add
push
cmp
out
cmp
out
imul
or
jge
out
cmp
out
xchg
cmp
out
mov
cmp
out
mov
add
mov
cmp
out
int
add
out
loope
loop
repz
pop
cmp
out
or
out
sbb
out
sbb
cmp
in
xor
in
inc
cmp
in
inc
cmp
in
push
cmp
in
pop
cmp
in
imul
outsb
cmp
and
pop
xchg
scas
pop
xchg
fsub
pop
lcall
pop
scas
rcl
mov
xor
add
add
jl
call
sbb
sbb
or
sbb
add
sbb
daa
sbb
icebp
xchg
sbb
inc
sbb
fldenv
out
sbb
add
popa
push
adc
add
push
inc
xor
arpl
sbbl
mov
out
scas
adc
sbb
lret
add
sbb
and
or
and
or
and
or
and
or
and
inc
and
or
and
or
and
or
or
and
or
and
or
and
andl
or
and
add
inc
xor
hlt
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jb
leave
adc
adc
rcll
adc
adc
adc
adc
loope
xlat
out
das
inc
or
test
push
cs
add
gs
and
xchg
into
fstl
lods
frstor
xor
or
xor
jo
test
add
xor
loop
xor
fdivs
aaa
jge
cltd
aaa
sub
xor
pop
clc
in
incl
lock
into
call
lods
xor
addr16
add
out
push
outsl
xor
cmp
fucomip
or
cmp
ljmp
arpl
fnstsw
ljmp
cmc
and
and
and
ret
cmp
insb
call
dec
ds
pushf
call
add
add
out
aas
cmp
xor
fsubrp
insb
aas
sahf
ljmp
ljmp
in
add
or
cmc
lock
xor
push
xor
cmc
jb
hlt
fisttpll
and
or
add
or
add
ficoml
roll
push
xor
mov
or
cmp
aas
add
mov
push
mov
xchg
mov
sub
adc
jecxz
fmull
push
adc
add
adc
dec
adc
add
adc
add
loop,pn
adc
ficoml
movsb
loop
adc
lret
cmp
jo
fsts
mov
push
adc
mov
add
inc
sbb
or
xlat
or
repnz
pop
add
or
pop
addb
sbb
cmc
pop
add
aaa
or
and
insl
sbb
or
movsb
or
jno
push
add
add
adc
adc
unpcklps
push
mov
int3
adc
jbe
sub
adc
adc
loope
rclb
pop
adc
adc
adc
jae
dec
add
sub
add
sub
add
sub
add
sub
in
sub
in
sub
in
sub
jmp
sub
add
hlt
sti
repz
add
xor
in
xor
xor
lea
lods
in
xor
add
xor
add
xor
add
xchg
xor
xor
in
xor
add
push
and
sbb
push
xor
mov
pop
out
xor
ret
ss
repnz
aaa
mov
repz
push
repnz
aaa
shl
repz
div
stc
aaa
ljmp
push
xor
ljmp
cmp
ljmp
jno
sarb
lods
ljmp
fucomp
mov
ja
iret
cmp
xor
call
cmp
dec
call
cmp
out
cmp
out
cmp
sbb
iret
xchg
sbb
loope
or
mov
pop
pop
bound
dec
push
inc
and
push
xchg
adc
pop
mov
sbb
int3
add
pop
out
cli
and
adc
jge
test
mov
add
cwtl
push
aad
pop
dec
std
mov
or
adc
and
adc
shll
dec
adc
dec
adc
adc
out
adc
out
mov
adc
adc
adc
fstl
cld
cmpxchg
jge
stc
insb
adc
pop
adc
add
add
add
add
inc
rolb
hlt
add
adc
testb
add
hlt
add
repz
inc
sub
add
adc
stc
mov
cli
stc
cli
push
or
cli
ja
out
push
sbb
std
sbb
cld
fwait
sbb
std
push
sbb
jmp
push
pusha
ss
sub
pop
xor
jmp
add
add
in
jmp
sub
or
cmp
ss
xor
jmp
testl
scas
loope
sub
mov
std
in
add
in
hlt
cmp
ffree
cmp
or
fnstsw
inc
std
movsb
cmp
in
mov
adc
add
sbb
mov
rcrl
cmp
push
sbb
pop
sbb
cmp
nop
aas
cltd
sbb
aas
stc
sbb
aas
sbb
add
int
sti
jmp
push
adc
mov
cmp
mov
push
xor
sbb
xor
xor
sbb
in
dec
xor
xor
imul
lcall
mov
insl
sbb
add
sub
hlt
adc
add
adc
in
or
cmp
xchg
pop
sbb
jg
mov
lock
hlt
sub
cld
add
hlt
inc
push
int
cwtl
or
cmp
jnp
push
loopne
mov
rorl
add
or
std
loop
popf
std
in
sbb
add
sbb
daa
jmp
ret
adc
mov
adc
hlt
sub
cld
orl
mov
and
adc
and
mov
adc
hlt
cltd
adc
hlt
jecxz
out
repz
fcomip
iret
adc
repz
adc
repz
adc
repz
adc
testb
mulb
xchg
hlt
inc
adc
loopne
loop
imul
adc
stc
push
adc
stc
push
adc
stc
fimuls
call
cli
into
push
call
cli
sahf
push
dec
cli
ds
dec
invd
cli
dec
pshufw
push
push
cli
mov
test
pushl
dec
xor
ljmp
xchg
cli
add
jmp
testl
fldl
sbb
add
add
aad
mov
in
sub
in
sub
in
sub
in
sub
add
sub
add
sub
add
sub
add
sub
add
xor
sti
clc
xor
jmp
xor
cltd
xor
js
and
cld
cmp
in
sbb
or
fstp
xor
sub
je
fstps
mov
cltd
sbb
add
add
hlt
xor
cmp
push
ss
sbb
pop
sbb
ss
sbb
stc
sbb
pop
sbb
pop
sbb
xchg
sbb
mov
sbb
jns
js
jno
xorb
sbb
aaa
sbb
cwtl
aaa
push
sbb
aaa
loope
mov
jns
mov
add
jno
enter
cld
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
incl
hlt
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
popf
pop
add
popf
pop
add
lea
add
lea
add
popf
pop
add
popf
pop
add
lea
add
lea
add
add
add
pop
pop
add
dec
pop
add
dec
pop
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
sbb
pop
add
or
pop
add
sbb
pop
add
or
pop
add
fldl
add
fldl
add
int
add
int
add
fldl
add
fldl
add
hlt
sub
push
sub
push
sub
incl
hlt
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
incl
hlt
sub
push
sub
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
add
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
sub
cld
push
sub
push
sub
push
sub
push
sub
push
sub
incl
hlt
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
add
or
add
or
add
pop
add
fldl
add
int
add
int
add
fldl
add
fldl
add
int
add
int
add
popf
pop
add
popf
pop
add
add
pop
add
popf
pop
add
popf
pop
add
lea
add
lea
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
hlt
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
push
sbb
push
sbb
incl
hlt
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
add
jmp
testl
jmp
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int
add
popf
add
add
add
add
add
add
add
add
add
add
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
add
add
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
jmp
add
add
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
add
add
add
or
add
or
add
add
pop
or
add
add
dec
or
add
add
pop
or
add
add
dec
or
add
or
add
or
add
or
add
or
add
pop
add
fldl
add
int
add
int
add
add
pop
add
fldl
add
int
add
int
add
popf
pop
add
popf
pop
add
hlt
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
add
add
sbb
cld
push
sbb
cld
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
testl
jmp
testl
jmp
testl
add
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
jmp
testl
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
fldl
add
int
add
hlt
sbb
cld
push
sbb
cld
push
sbb
cld
push
sbb
cld
push
fimull
arpl
add
or
unpcklps
dec
xchg
lret
inc
push
add
jns
cltd
inc
loop
sub
fcmovbe
xor
dec
fimuls
sub
lods
adc
jmp
repz
add
add
inc
xor
cltd
mov
jecxz
sbb
mov
negl
sbb
pop
ja
adc
aad
mov
enter
cmp
hlt
outsl
mov
fs
scas
shll
divl
imul
repnz
mov
and
arpl
roll
fldl
sbb
in
and
pop
dec
sbb
sbb
icebp
pop
pop
mov
or
scas
ds
and
push
out
adc
pop
push
shlb
push
pop
mov
push
roll
data16
inc
fldl
pop
push
inc
cmp
add
push
sahf
bound
pop
js
push
cs
mov
xor
add
add
inc
dec
fxch
aaa
and
push
lea
xor
jecxz
ljmp
das
and
bound
xchg
add
or
inc
loopne
xchg
adc
dec
xchg
and
xchg
and
cmp
lds
das
jle
cmp
cs
aas
add
add
sahf
fbstp
or
adc
adc
cltd
js
inc
es
inc
add
inc
sub
stc
mulb
mov
xor
lds
addr16
pushl
test
xlat
or
push
xor
dec
clc
adc
mov
sbb
adc
jb
in
xor
sub
rcrl
mov
jbe
push
fiaddl
test
hlt
mov
xor
add
mul
gs
jb
mov
out
push
push
inc
into
push
push
mov
sub
sahf
leave
shld
sbb
scas
es
xchg
negb
xchg
fwait
imul
mov
mov
and
pop
mov
mov
jg
pop
ret
rorl
leave
rorb
or
in
lea
add
pop
mov
test
imul
std
ljmp
mov
adcl
test
lea
jg
fisttps
and
mov
dec
clc
outsl
mov
cld
inc
cld
mov
jg
testl
jg
testl
mov
repz
hlt
add
jmp
lea
ja
decb
dec
mov
bswap
pop
jae
lea
outsl
pop
std
inc
cld
mov
sahf
adc
test
dec
call
ja
or
mov
adc
in
outsl
mov
mov
and
fisttps
test
test
jmp
aad
mov
xchg
mov
lret
int3
test
lret
int3
rclb
and
out
jnp
clc
mov
mov
sub
clc
xorl
popf
inc
dec
mov
out
cmp
inc
cli
mov
popf
dec
cs
hlt
scas
jmp
add
inc
cli
mov
xchg
dec
inc
cld
hlt
add
add
push
test
test
add
insl
mov
pop
jae
mov
jg
orl
out
mov
inc
cli
aaa
add
add
lahf
xor
lret
int3
mov
lret
int3
test
lret
int3
inc
push
lret
int3
rorl
add
mov
xor
pop
jge,pt
pop
pop
aaa
push
lret
int3
sub
int3
inc
push
lret
int3
rorl
mov
test
enter
sarl
push
lret
int3
rclb
inc
mov
adc
data16
push
loope
cmc
inc
hlt
lea
dec
sub
inc
clc
inc
sub
jl
in
lea
jg
sqrtps
or
leave
pop
push
jnp
sti
mov
mov
push
cmp
sti
add
add
jmp
std
mov
ja
decb
cmp
dec
adc
add
repz
std
mov
lss
iret
inc
jae
cmp
add
hlt
sub
jmp
sarb
int3
mov
lret
int3
test
lret
int3
rclb
and
add
push
mov
mov
gs
inc
hlt
mov
lret
int3
test
lret
int3
rclb
add
mov
adcl
ja
hlt
or
add
lock
push
inc
mov
ja
pop
mov
add
push
mov
mov
jg
sti
cmp
enter
adc
mov
les
add
test
mov
add
inc
jne
clc
sldt
add
add
add
push
mov
iret
or
cld
mov
outsl
or
add
cmc
test
mov
div
test
mov
or
mov
test
out
pop
sbb
mov
adcl
inc
in
mov
jg
jecxz
shrl
push
loopne
push
call
jl
push
mov
ja
out
add
jmp
hlt
add
add
push
cld
pop
push
lock
mov
mov
and
or
add
fisttps
clc
mov
adc
insl
ret
cmp
push
mov
and
jns
push
nop
dec
or
int3
jns
jg
fisttps
in
inc
hlt
outsl
lret
add
or
adc
jmp
mov
add
inc
adc
ja
hlt
nop
or
hlt
nop
add
cmp
test
xchg
inc
enter
aad
add
je
sbb
fstps
clc
ljmp
mov
dec
mov
sbb
cmpl
sbb
outsl
leave
pop
enter
add
sti
push
dec
jae
lcall
ret
or
fisttpl
and
jl
clc
lea
jg
jmp
xor
das
nop
mov
lea
or
mov
pop
mov
lret
int3
inc
mov
adc
push
jmp
mov
dec
sbb
aas
hlt
lea
inc
sub
jl
add
mov
outsl
enter
mov
push
jg
pop
push
xorl
int3
inc
dec
lret
int3
rorl
add
add
cmc
inc
hlt
mov
xchg
push
icebp
mov
int3
inc
dec
lret
int3
rorl
mov
es
jg,pt
das
mov
mov
outsl
int
mov
mov
jg
repz
xchg
fmull
sti
mov
jns
jae
ja
testl
lahf
fadds
fildll
inc
clc
jg
or
jl
inc
adc
pop
mov
dec
cld
test
lea
mov
fldl
leave
add
mov
inc
test
leave
inc
lret
int3
xor
int3
sub
int3
add
lret
int3
mov
cld
rolb
xor
hlt
lods
add
add
decl
mov
call
test
or
repz
mov
and
decl
hlt
pop
push
hlt
push
mov
cmp
decl
add
jmp
mov
add
decl
pop
add
push
add
arpl
mov
jg
hlt
add
add
sub
sub
jl
lock
incl
mov
sub
testl
inc
hlt
jmp
mov
jo
inc
hlt
mov
xchg
out
ret
call
mov
test
mov
popf
enter
mov
sbb
divl
test
pop
fisttpll
rorb
and
add
cmp
add
pop
add
int3
sub
int3
inc
dec
lret
int3
mov
call
and
mov
jge
xlat
mov
add
jge
fisttps
lods
lock
mov
or
inc
call
hlt
mov
mov
ret
fadd
hlt
dec
add
insl
shr
add
push
push
adc
jecxz
sub
test
mov
push
nop
mov
shll
xorl
roll
add
hlt
sub
mov
mov
outsl
enter
mov
cmp
adc
shl
pushf
lock
mov
ja
sldt
mov
mov
inc
dec
aam
int
flds
or
dec
or
int3
adc
scas
out
xor
cld
inc
lock
push
cltd
adc
test
cmpl
in
sub
cld
imul
add
add
mov
decl
mov
incl
ret
or
fildl
add
add
or
cmp
add
ljmp
sbb
hlt
sbb
lods
ljmp
hlt
add
push
call
addb
adc
lock
test
adc
popf
ljmp
hlt
add
push
mov
add
add
arpl
aaa
add
aas
push
outsl
lret
fiadds
push
fs
add
add
jle
fdivrs
xlat
mov
jle
loopne
ret
lds
mov
test
inc
hlt
mov
xchg
adc
xorl
test
mov
add
test
jg
fdiv
jl
add
add
dec
loopne
push
loopne
test
inc
hlt
fistpll
inc
hlt
jg
xchg
scas
call
stc
arpl
add
add
dec
call
ja
or
fmuls
cmp
divl
cmc
inc
hlt
xchg
mov
inc
loopne
fs
decl
add
add
out
sbb
clc
cmpl
lahf
fs
decl
lret
idiv
sti
xchg
add
movsl
addr16
decl
hlt
mov
push
add
adc
xorl
adc
call
enter
test
inc
hlt
add
adc
pushf
fdivrp
incl
test
inc
hlt
pop
loopne
testl
push
sahf
add
hlt
mov
push
and
mov
hlt
add
mov
mov
add
inc
lret
int3
inc
inc
lret
int3
add
cld
test
scas
mov
int3
inc
jle
push
dec
mov
cmp
jg
jnp
aaa
add
cmp
sbb
lret
int3
inc
jle
push
or
add
arpl
call
ja
pop
mov
adc
jg
cmpsl
cli
mov
dec
inc
adc
mov
push
call
add
hlt
dec
inc
fsubrl
repz
add
mov
add
inc
sbb
add
jge
or
cmp
add
clc
mov
sbb
clc
add
cwtl
or
stc
jl
inc
hlt
add
add
sbb
inc
hlt
add
cmp
add
rolb
hlt
add
add
xchg
mov
add
lcall
hlt
arpl
mov
test
insl
ret
or
inc
call
mov
test
jle
insb
push
jmp
or
sti
stc
dec
cli
aaa
add
inc
stc
jo
inc
hlt
cltd
add
pushf
pop
add
add
cmp
es
add
add
arpl
adc
push
pop
cmc
inc
hlt
gs
cli
aaa
add
clc
pushl
add
fs
aad
psubb
dec
ret
decl
hlt
gs
add
call
ja
or
adc
push
cld
iret
mov
inc
loopne
jnp
faddl
test
add
jmp
jl
in
popa
cli
aaa
add
cmp
es
cli
aaa
add
test
idivl
idiv
fwait
add
jg
repz
xor
push
cwtl
jl
in
enter
xor
loopne
add
dec
push
sbb
push
add
or
testl
add
out
jae
jns
test
ret
mov
mov
mov
test
dec
clc
jne
out
hlt
add
adc
divl
cmp
add
pop
jmp
jnp
je
sar
fsts
mov
pushf
cmc
inc
hlt
rol
mov
nop
cmc
inc
hlt
sbb
imull
mov
add
idivl
jne
incl
hlt
add
push
cmp
into
mov
cmc
inc
hlt
arpl
mov
push
call
ja
add
hlt
mov
aad
or
test
and
inc
hlt
xchg
add
lret
aaa
add
arpl
aaa
add
call
mov
popa
cmc
inc
hlt
mov
xor
mov
loop
mov
lret
int3
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
xor
mov
xor
in
add
add
add
fstpt
aam
ljmp
cmp
add
hlt
add
nop
add
cs
xor
xor
xor
test
xor
ss
xor
xor
adc
xor
xor
xor
add
xor
xor
xor
xor
and
divb
enter
cmpsb
xor
xchg
xor
ss
aad
mov
xor
ss
xor
aaa
jmp
xor
aaa
cmp
xor
aaa
popa
xor
cmp
cmp
cmp
cmp
cmp
xor
pop
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
movsb
cmp
cmp
cmp
ljmp
cmp
ret
cmp
cmp
mov
cmp
cmp
cmp
ds
cmp
add
or
push
cmp
cmp
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
and
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
es
add
inc
add
es
add
inc
add
es
add
inc
add
es
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
inc
add
add
inc
add
es
add
and
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
es
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
and
inc
add
inc
add
es
add
es
add
es
add
es
add
es
add
es
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
daa
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
daa
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
daa
inc
add
es
add
inc
add
inc
add
and
inc
add
daa
inc
add
inc
add
inc
add
daa
inc
add
and
inc
add
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
daa
inc
add
sub
test
inc
add
inc
add
add
sub
pop
and
inc
add
inc
add
sub
adc
inc
add
sub
sbb
inc
add
sub
and
inc
add
sub
sub
inc
add
sub
xor
inc
add
sub
cmp
inc
add
inc
add
and
add
add
inc
add
add
inc
add
inc
add
add
and
inc
add
and
inc
add
inc
add
add
inc
add
add
inc
add
and
inc
add
add
inc
add
add
sub
fsubs
inc
add
sub
or
inc
add
add
sub
ret
iret
push
sti
dec
push
or
rclb
or
mov
js
push
push
es
push
xor
or
cwtl
xlat
jmp
lcall
mov
hlt
icebp
shrb
cmc
mov
in
in
add
add
call
lock
push
sahf
mov
mov
xchg
scas
stc
cltd
mov
dec
inc
push
adc
jnp
movsl
aaa
mov
mov
xchg
arpl
addr16
pop
pop
sub
movsb
adc
andb
fidivl
cltd
leave
sub
pop
decb
stos
mov
sbb
add
cmp
inc
mov
dec
sbb
mov
lods
sahf
mov
scas
push
repnz
fimull
repz
mov
pop
sti
mov
push
cmp
movsl
jb
pop
xchg
inc
xchg
mov
les
ljmp
ljmp
js
sbb
loop
xor
xchg
test
add
xorb
pop
mov
aad
or
stc
adc
mov
cltd
jl
test
lea
cmp
in
pusha
or
lea
lret
mov
stos
gs
push
stc
cmp
nop
mov
dec
dec
fs
sub
pop
adc
movsb
sti
out
pop
loop
xor
jl
cmp
fcomps
popa
loop
loope
push
add
or
ss
adc
push
cmp
insl
mov
pop
js
adc
sub
cmp
loopne
pusha
pop
aaa
lret
and
stos
clc
pop
pusha
pop
popf
pop
test
mov
in
inc
stc
mov
push
push
into
inc
sbb
fwait
xchg
jne
jmp
bound
shll
push
push
sub
cmp
out
cmp
xor
ror
pop
fwait
outsb
adc
in
movsl
lret
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
movl
movl
mov
mov
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
push
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
jmp
mov
pop
ret
push
mov
pop
pop
mov
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
