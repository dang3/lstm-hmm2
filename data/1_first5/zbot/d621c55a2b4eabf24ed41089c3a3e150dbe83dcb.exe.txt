add
add
pop
je
in
arpl
push
jb
lds
add
rorb
bound
adc
scas
and
add
or
bound
adc
mov
je
imul
popa
outsb
jb
gs
xchg
bound
add
gs
dec
pop
inc
imul
adc
add
bound
add
je
add
das
or
outsl
and
inc
imul
jns
xchg
bound
add
add
jne
repz
cli
push
gs
xchg
bound
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
je
test
arpl
push
jb
test
add
bound
popa
fs
or
ja
jns
add
pop
and
add
push
xor
jo
insb
insb
xchg
bound
add
jbe
and
cs
add
sub
add
sti
pcmpeqd
pop
cs
arpl
sbb
add
or
jecxz
insb
inc
ret
arpl
or
ret
add
push
outsl
arpl
or
popa
cmpsb
xor
add
mov
inc
jg
add
jb
addl
push
or
push
add
dec
add
insb
outsl
xor
add
xor
push
bound
add
je
and
arpl
cmovs
adc
add
mov
add
xchg
xchg
add
push
add
xchg
mov
add
add
mov
add
mov
add
mov
add
mov
add
sbbl
or
stos
mov
push
outsb
bound
popfw
push
inc
stos
push
outsb
xor
jbe
inc
imul
mov
push
xor
int
xchg
jmp
add
add
bound
sbb
jmp
add
arpl
add
push
jmp
dec
xchg
jmp
in
xchg
jmp
adc
jmp
add
xchg
jmp
add
jmp
add
xchg
jmp
xchg
jmp
add
add
jmp
adc
bound
fsts
bound
jmp
out
add
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
add
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
mov
xchg
bound
jmp
xchg
bound
add
arpl
add
arpl
add
gs
arpl
add
popl
add
add
jg
add
outsl
pop
add
outsl
arpl
add
arpl
add
arpl
add
adc
add
add
add
add
das
jae
add
pop
add
jmp
add
bound
add
bound
add
bound
add
ss
je
pop
add
inc
and
add
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
mov
inc
xchg
arpl
add
push
xchg
divl
loope
push
arpl
lcall
adc
mov
jb
enter
xchg
add
push
or
mov
add
arpl
call
dec
xchg
clc
fs
fsts
mov
add
jmp
aam
test
lcall
add
mov
fldl
jecxz
adc
jge
and
sti
in
sub
push
pop
add
jmp
add
jmp
cmp
xchg
pop
clc
xor
shl
mov
jmp
in
add
mov
ret
jmp
neg
push
xchg
add
xchg
jmp
bound
add
mov
push
pop
clc
mov
rcll
inc
outsb
mov
mov
push
bound
mov
cld
push
push
fwait
lcall
out
add
push
ret
ret
fiaddl
jmp
mov
bound
loopne
int
inc
adc
lcall
cmp
xchg
jne
add
std
sbb
cmpsb
or
adc
test
push
loope
jno
add
outsl
pushl
mov
cmp
or
outsl
push
adc
scas
add
mov
inc
xchg
sub
inc
pusha
sub
mov
or
and
in
xorl
inc
add
loope
or
add
sbb
add
dec
rcrb
or
add
lods
or
add
push
add
mov
or
jb
add
lcall
push
imul
adc
mov
jbe
incl
rcrb
sarb
rorl
jbe
xchg
mov
sub
lcall
mov
repz
outsb
fimuls
lret
jnp
mov
mov
push
add
xchg
lea
outsb
out
add
imul
add
cmc
add
jnp
orb
call
cmova
inc
stos
jg
ret
pop
add
aas
in
push
scas
jnp
add
shl
add
lock
add
test
lock
das
sahf
add
cmp
jmp
mov
xchg
aam
add
mov
in
jmp
pop
test
and
jmp
add
icebp
add
fisttpll
add
call
pop
xchg
xchg
je
cmp
sub
xchg
aaa
jb
scas
sti
inc
xchg
mov
push
xchg
inc
add
js
jp
lock
add
jle
lods
in
stc
ret
sti
push
clc
sbb
add
pop
sub
test
jge
bound
jmp
rorl
pop
movsb
fcoml
sub
mov
jne
movsb
push
or
jmp
leave
sub
sti
stc
aad
clc
fwait
lcall
loope
mov
ret
xor
adc
jae
jne
cld
movsb
adc
es
adc
mov
add
mov
add
decl
ss
in
subl
pushl
cs
mov
mov
ret
adc
cmpl
pop
pop
mov
bswap
fs
or
ljmp
jne
sub
push
decl
out
mov
decl
jg
or
enter
mov
add
cmp
dec
vphaddbd
call
sbb
call
and
or
popa
add
cwtl
cmpb
rol
xchg
dec
jge
sbb
jns
add
mov
decb
fneni(8087
lret
or
xchg
cld
mov
enter
add
mov
mov
and
xchg
dec
lock
push
mov
push
or
into
jl
mov
ja
jmp
pop
jmp
xchg
push
adc
add
add
bound
rcrb
sub
xchg
xchg
add
pop
lcall
fwait
stos
add
cmpsl
and
icebp
lea
sbb
clc
call
pop
xchg
clc
jmp
ret
add
leave
pop
in
pop
mov
add
sub
sub
pop
jns
jp
out
mov
jmp
sti
sbb
fs
jle
roll
or
out
imul
mov
add
popa
stos
fisubrl
filds
cmp
cld
rol
call
sbb
je
cmp
cmp
jp
xchg
xchg
bound
add
add
loope
aaa
mov
outsb
pop
call
pusha
dec
mov
sub
popa
add
xchg
lea
frstor
push
cmc
sub
push
dec
fdivl
push
or
pop
lcall
xchg
xor
clc
fimuls
lods
jno
add
xchg
xlat
push
add
adc
jge,pn
cld
add
sub
call
mov
push
and
inc
clc
mulb
in
push
or
or
jge
or
cmp
ret
xor
in
test
inc
sti
das
pushl
cmpsl
sub
sbb
ret
push
mov
loop
or
adc
mov
jle
adc
or
ret
or
jge
leave
mov
cmp
pop
jle
or
add
loope
adc
fdivrp
inc
xchg
in
jne
mov
inc
push
sti
out
jl
lcall
inc
adc
andl
jbe
nop
xlat
add
push
jbe
daa
in
jmp
dec
jns
adc
xchg
in
jne
or
or
sub
lcall
lcall
out
in
mov
sti
out
push
in
jmp
movsl
sti
xlat
inc
xchg
mov
pop
std
call
pop
dec
mov
pop
xchg
xlat
lods
dec
mov
push
out
sub
ljmp
pop
shll
mov
dec
fbld
xchg
xchg
in
jmp
add
and
sti
aas
bound
sti
mov
mov
out
psllw
int
pop
jmp
psraw
addb
mov
or
mov
movsb
andl
sbb
cmp
ffreep
subl
fildl
cmp
cld
rcrl
leave
je
add
sub
clc
cmp
call
jo
mov
cmp
jns
lcall
mov
sub
pop
enter
cld
int
push
lods
mov
stos
mov
in
pop
aam
hlt
jmp
push
xchg
push
pop
call
add
mov
or
inc
ja
jmp
and
addl
add
push
loope
clc
add
cmp
cld
cmpsl
ljmp
std
jl
clc
add
ds
pushl
int3
not
mov
hlt
ljmp
call
jmp
jp
or
inc
sti
incl
ror
arpl
jmp
data16
arpl
push
and
out
pop
jp
push
add
mov
pushl
stos
sar
xchg
xor
adcl
add
add
movsb
nop
mov
pop
jp,pt
add
je
sub
movb
jl
adc
pop
push
dec
xchg
fisttpl
jns
test
sbb
mov
test
mov
mov
jne
mov
cld
mov
mov
outsb
clc
inc
mov
call
rcll
loope
cli
leave
fistpll
add
add
sti
mov
lea
gs
mov
mov
add
mov
jmp
fistl
mov
call
jecxz
adc
sbb
xchg
xchg
push
outsb
dec
jnp
ficoml
pop
jmp
fsubr
jmp
out
mov
xchg
jmp
sbb
in
add
xchg
jb
push
bnd
fsubrl
jno
test
rorl
and
scas
jmp
pusha
push
mov
hlt
mov
cmp
jge
push
jns
push
in
inc
sub
pop
cmpsb
cld
ss
fsubrs
out
lcall
test
xor
psubb
jp
jl
jge
std
xor
cmp
in
add
psubsb
and
or
loop
inc
jl
pop
mov
pop
add
test
clc
push
or
lods
mov
push
add
inc
popa
addb
pusha
push
push
cmpsb
repnz
pusha
push
mov
adc
mov
mov
orl
sub
add
jle
repz
ret
push
mov
mov
mov
xchg
repz
pop
leave
jge
call
push
push
movsb
repz
cld
je
adc
aas
or
int3
pusha
repz
add
jne
mov
mov
push
fs
add
adc
push
xchg
popa
add
xchg
jns
jne
icebp
xchg
mov
xor
sub
push
add
add
xchg
jns
adc
and
loop
add
sarl
xchg
jo
sub
cmp
mov
jp
cmpsl
jns
mov
jge
mov
adc
cmp
shlb
adc
outsb
aad
inc
inc
leave
aam
add
lds
push
stc
dec
cld
pop
sbb
jnp
jmp
aas
add
bound
add
or
or
jmp
cmpsb
jg
out
test
lods
push
test
lods
mov
dec
cltd
popa
mov
mov
push
adc
imulb
scas
jno
ds
xchg
in
push
loope
ret
sub
sub
xor
ds
jns
jg
add
in
jp
arpl
mov
add
cmpsl
mov
das
fucomp
and
inc
addl
cltd
lcall
jmp
lcall
sub
xorl
xchg
insl
shl
jmp
pop
mov
repz
cld
cmp
sbb
clc
dec
fbstp
mov
sub
ss
jne
jb
iret
jmp
cmp
add
out
test
xor
lcall
xor
jne
xor
divl
fdivp
adc
xlat
testl
incl
push
ljmp
test
or
xorl
sbb
ljmp
test
and
xorl
sar
xor
push
lock
pop
mov
or
add
dec
icebp
in
subl
or
sub
add
add
inc
test
pop
in
add
das
xchg
jae
cmp
add
aas
fs
push
mov
lret
add
andb
push
xchg
cmp
add
adc
xorl
loope
add
jno,pt
pop
mov
push
testb
push
add
inc
jns
jne
loope
iret
add
xchg
mov
sub
jge
mov
adc
popl
sbb
and
jns
clc
and
fistl
mov
push
adc
fucomip
sbb
add
popa
sub
cmp
cmp
test
je
nop
push
clc
or
loopne
jle
push
popa
jmp
push
lcall
add
add
pop
sub
hlt
aam
arpl
push
mov
inc
xchg
loopne
push
mov
ret
or
imul
and
icebp
insl
xchg
jge
testl
mov
lds
xchg
cmp
jmp
push
xchg
jecxz
adc
add
repnz
xchg
test
fldcw
or
ljmp
pop
bound
movsb
ljmp
bound
jb
out
or
xor
ljmp
bound
bound
pop
daa
or
imull
aam
movsl
inc
cmc
xor
inc
jmp
add
subl
xor
xor
adc
into
pop
jge
add
call
jmp
xchg
add
test
add
lea
pop
outsb
add
mov
inc
add
add
mov
jne
pop
mov
add
insb
call
add
add
and
in
incl
pushl
xor
jmp
pop
add
xor
stos
add
test
or
out
inc
mov
add
add
adcl
push
ds
dec
cld
adc
mov
jne
nop
idiv
mov
fdivl
incl
push
les
int3
push
cld
add
mov
les
xchg
mov
add
xor
inc
xchg
shrb
mov
hlt
pop
lcall
popa
push
sbb
or
out
inc
xchg
sub
call
popf
dec
pop
add
mov
lds
lods
jb
inc
sbb
ret
mov
inc
inc
sahf
sub
loop
add
jmp
add
add
lahf
in
insb
bound
insb
pop
inc
add
bound
xchg
jmp
in
popa
jmp
inc
inc
addr16
mov
pusha
jmp
rcll
sub
lea
jmp
add
bound
sahf
mov
enter
jmp
sub
add
xchg
imul
add
add
leave
sub
out
std
scas
bound
cmp
pop
add
lods
add
cwtl
mov
call
pusha
push
jbe
sbb
out
sti
mov
leave
bound
loop
out
or
loopne
inc
aad
add
jbe
stos
xchg
bound
scas
adc
adc
sbb
insw
or
rcll
add
bound
add
popf
jne
dec
lret
add
add
xor
jge
mov
pop
add
pop
add
pop
add
fmull
rorb
add
push
add
xor
dec
xor
add
stos
inc
pushl
mov
lret
pushl
daa
mov
add
pushf
jmp
add
fwait
xor
repz
add
clc
pop
jmp
pushf
sub
inc
and
movsb
pop
leave
lods
imul
xchg
add
push
sbb
and
popa
mov
add
push
mov
add
inc
popf
jmp
dec
mov
pop
pop
dec
inc
hlt
out
pop
push
lcall
fdivs
adc
sub
mov
add
sub
jmp
out
test
movl
add
mov
add
dec
add
inc
jbe
xor
scas
pop
mov
decl
add
xchg
mov
lea
cli
call
cmpsb
xchg
fsts
fisttpll
jns
mov
fstps
sbb
adc
or
add
jmp
cmp
sbb
fsubrs
jmp
add
add
ja
fsubs
or
insl
xchg
or
xchg
jp
fdiv
adc
xchg
fadds
je
jmp
jbe
frstor
or
data16
xchg
jmp
add
adc
inc
xchg
mov
xlat
cltd
jbe
loop
data16
bound
jb
call
mov
dec
jbe
sub
add
xchg
cs
call
xchg
mov
mov
incb
push
adc
jp
negb
arpl
jmp
jnp
add
xchg
adc
xchg
cli
test
stos
jne
mov
shrl
scas
pop
loopne
xchg
jmp
dec
inc
jmp
shll
lods
popa
add
add
or
je
loope
call
popa
pop
push
push
cli
jecxz
out
fmuls
add
jmp
call
shr
out
js
call
pop
mov
call
jmp
out
lcall
mov
pop
mov
jmp
jmp
cld
enter
xlat
pop
leave
add
and
jb
out
lcall
xor
mov
jnp
incl
add
icebp
repz
clc
mov
negl
mov
mov
jmp
ljmp
fcmovnbe
test
xor
push
cld
outsb
dec
lret
popl
ljmp
sbb
ljmp
xor
popa
sbb
out
push
sub
lea
data16
cmp
ds
add
je
lock
call
add
sysret
in
out
stc
xchg
aad
pushf
aad
incb
sub
aam
mov
pop
int3
add
push
jb
mov
jae
pop
dec
dec
sub
xorl
or
loopne
jae
xor
lods
inc
in
jae
push
dec
jmp
aam
xchg
dec
mov
out
jae
jg
add
sbbl
xor
add
sub
mov
adc
add
into
popa
jmp
mov
mov
aam
out
mov
outsl
test
or
loop
call
cmpsb
or
sahf
lret
xchg
jb
push
mov
and
jle
adc
push
sbb
push
dec
jb
jb
add
and
pop
xchg
jno
icebp
adc
sub
xchg
pop
mov
repnz
clc
jmp
enter
daa
jno
in
ljmp
repz
mov
jge
cmpsb
pop
outsb
add
xchg
bound
add
nop
adc
mov
sahf
add
scas
gs
and
or
add
mov
jne
adc
call
hlt
sbb
pop
ss
add
lock
xchg
add
ja
mov
xlat
sbb
jne
popf
add
add
add
sub
add
lahf
jmp
and
jmp
out
or
push
outsl
push
and
mov
jle
add
in
xor
push
inc
add
outsb
enter
mov
xchg
jnp
pop
cmp
cmp
sbb
add
lea
add
xchg
or
loope
mov
xchg
jns
clc
xchg
nop
push
cltd
jns
enter
lcall
cld
sbb
mov
add
and
cmc
cmp
inc
xor
or
iret
iret
ljmp
add
imul
jne
js
cld
out
add
add
jp
xlat
jmp
bound
pop
in
sub
xchg
cmpsl
add
pop
test
pop
mov
jp
lret
dec
imulb
jmp
loopne
adc
roll
pop
sbbl
rorl
mov
jl
pop
jns
shlb
add
mov
outsl
roll
cmp
stos
dec
mov
ds
add
pop
sub
cpuid
xor
mov
add
gs
or
jmp
sub
fucomi
bound
or
xchg
cmc
or
bound
jmp
xchg
xchg
jmp
adc
loop
mov
xchg
bound
xchg
add
nop
test
jmp
lea
dec
repnz
push
bound
push
mov
xchg
data16
add
push
inc
or
cs
testl
jmp
sbb
and
addb
outsl
je
add
je
push
sub
rclb
jne
jmp
leave
ret
push
push
push
pop
add
mov
push
fistl
add
sbb
push
mov
idivb
sub
or
nop
cmp
ds
insb
push
das
nop
andb
pop
nop
inc
dec
push
nop
jl
pop
cmp
jl
inc
cmp
icebp
jnp
mov
nop
jg
dec
inc
nop
cmp
inc
cmp
icebp
jnp
dec
sbb
add
rol
xorl
push
mov
nop
sbb
cmp
mov
add
ss
repnz
push
or
lock
adc
add
push
dec
stos
jecxz
or
mov
or
sarl
jae
push
clc
les
clc
fildl
gs
nop
sbb
push
mov
mov
or
addb
pop
sbb
add
subl
xchg
and
xchg
jns
mov
add
stos
lret
into
mov
clc
jmp
sti
adc
add
mov
mov
je
jnp
add
push
ret
cmpsb
jmp
rcl
imul
ds
jp
enter
ret
mov
faddl
xchg
jmp
add
outsl
jg
adcl
jmp
int
add
push
inc
pusha
imul
cmc
in
pop
idivl
test
sbb
cmp
inc
imul
pop
mov
arpl
icebp
gs
push
push
imul
dec
cmc
pop
pop
sbb
push
fistl
call
pusha
adc
out
loop
call
clc
add
clc
add
bound
test
fisubrl
int
popa
add
push
xor
or
add
dec
push
mov
push
subl
jle
mov
arpl
push
cwtl
sahf
add
push
mov
push
dec
push
and
incl
les
call
add
in
xchg
jne
adcb
push
mov
callw
sahf
decl
scas
data16
jmp
sub
jmp
out
rcrl
add
add
add
mov
gs
mov
mov
add
add
cmp
add
scas
ljmp
and
lcall
sahf
or
push
addr16
add
xchg
adc
ds
lret
decl
sti
dec
cs
sar
cmp
stos
cmpl
inc
lret
inc
push
mov
incl
add
push
lret
decl
in
call
pop
ss
andl
je
aas
hlt
cbtw
push
cld
mov
inc
js
mov
hlt
mov
je
je
sub
jne
loop
repnz
fnstcw
out
loopne
clc
in
fsubrl
icebp
leave
jmp
push
arpl
add
push
add
lcall
add
dec
push
push
lret
sub
pop
movsl
loope
ret
fistl
fiadds
and
jnp
pop
imul
dec
pop
imul
test
sub
dec
mul
push
sti
inc
mov
sahf
addr16
mov
jecxz
add
aas
imul
loop
or
push
sbb
enter
addl
add
jle
add
scas
sub
jmp
inc
xchg
pop
xor
add
adc
jmp
cltd
xchg
cs
bound
and
add
movsb
or
mov
popa
add
xchg
aad
icebp
movsl
addr16
inc
push
pop
cmp
shlb
shr
fcmovnbe
insb
add
js
push
inc
jp
call
sbb
inc
jmp
sbb
call
fsubrs
add
ljmp
arpl
inc
mov
xchg
movl
bound
bound
stos
and
push
push
pushl
lcall
outsl
adc
hlt
add
push
jne
mov
ret
add
add
ret
xor
in
clc
adc
call
jg
call
push
fcoms
or
mov
leave
ret
push
mov
loop
cld
pop
loope
or
mov
add
pop
push
add
xchg
popa
add
xchg
popa
jmp
pop
add
jnp
les
add
push
adc
cmp
lock
mov
add
mov
jnp
add
into
push
jl
jne
loope
push
push
insl
rcll
xor
imul
lods
mov
roll
jnp
adc
dec
xor
lock
or
add
adc
popa
jmp
stos
sbb
fldenv
or
popf
out
adc
loopne
or
add
push
ljmp
aaa
sub
dec
movsb
xlat
add
jb
std
xchg
aas
lods
pop
push
sbb
push
mov
dec
lret
cs
cmpsb
arpl
in
lock
jb
fildl
test
jb
cmpsb
outsl
mov
imul
stos
clc
mov
lahf
add
adc
add
add
push
adc
mov
incb
add
ret
pop
mov
outsb
fdivr
mov
dec
aad
out
int
push
xchg
pop
shrl
pusha
ret
bound
stc
or
stc
insb
cmpsb
dec
push
jle
jns
xchg
and
mov
cmpsl
and
cmpsl
lea
mov
cltd
pop
dec
icebp
aam
adc
das
xlat
cli
mov
lret
incb
add
xchg
mov
test
dec
add
imul
clc
xor
inc
sti
xor
jmp
pop
and
cmc
lods
and
sarl
add
hlt
sub
stc
dec
cs
add
pop
sub
filds
mov
ret
rorb
mov
sti
lea
incb
dec
aaa
and
mov
sub
and
sbb
lea
bound
add
mov
xor
fadds
in
lahf
and
das
outsb
add
inc
and
stc
xchg
insb
mov
pop
jmp
jns
rcl
push
rorb
add
adc
shlb
int
insb
sbb
and
mov
xlat
mov
mov
push
xchg
xchg
stc
add
test
xchg
test
dec
dec
xor
or
push
aam
xor
sub
xor
cwtl
pop
and
add
rcl
push
rcrb
push
idiv
or
adc
movsl
pusha
push
mov
ljmp
pop
cli
mov
cltd
push
and
cmp
rorb
xchg
nop
nop
add
adc
jmp
xchg
and
mov
test
xchg
mov
fs
push
and
inc
imulb
test
imulb
out
pop
adc
mov
int
xlat
jo
int
pop
fidivrl
sbb
add
arpl
jb
xchg
sti
or
xchg
stc
fs
push
add
add
mov
shl
and
mov
pop
lea
mov
and
push
and
ljmp
sti
mov
adc
mov
sub
add
sbb
cmp
push
or
push
xor
xor
ljmp
fldenv
xchg
sti
lret
stc
insb
push
addr16
xor
and
add
retw
mov
add
cli
lea
pop
mov
add
and
or
and
lods
sbb
aad
gs
or
and
add
stc
xor
inc
divl
and
jne
inc
jl
and
cmp
add
hlt
sbb
sti
dec
and
stc
lret
add
icebp
push
rol
addr16
mov
push
mull
push
cli
lea
add
jp
mov
pop
and
or
xor
and
cmp
add
add
mov
push
xchg
orl
mov
dec
pop
xor
or
add
sarb
lea
inc
inc
cmp
les
repnz
mov
xchg
enter
add
lea
mov
mov
pcmpeqb
mov
rclb
lret
repz
xchg
pushf
jns
sti
in
ljmp
cmp
lds
mov
cld
sbb
pop
data16
xchg
popa
sub
shr
push
out
sub
dec
xchg
mov
aam
ljmp
pop
fs
jnp
add
and
add
repnz
ljmp
cmp
test
mov
shl
add
xchg
sub
lcall
repnz
lcall
daa
mov
pusha
push
sub
add
or
xor
add
lea
in
push
rcrl
fisubl
adc
iret
out
mov
add
idivb
cld
or
and
notb
pop
xor
adc
push
lock
fldl2e
fildl
ret
jb
stc
fidivrl
stc
fimull
push
add
xor
pop
lea
pop
jl
mov
and
ljmp
xor
mov
pop
gs
lret
and
ret
or
mov
add
mov
sbb
sti
int3
pop
lea
popa
push
shrl
pushl
push
cli
lea
jbe
call
pop
ret
cs
xor
xor
jmp
xchg
stos
insb
test
sarl
add
rclb
jmp
push
testl
jecxz
cmp
dec
and
xchg
dec
fidivrl
movsl
or
mov
pop
pop
jnp
inc
xor
mov
stc
jo
clc
popf
jae
cli
sbb
mov
inc
aas
ret
dec
sarl
test
test
mov
dec
dec
sub
or
add
sarb
negl
xlat
sbb
fcmovnb
addl
add
sarb
fdivrl
movsl
aad
sti
test
mov
enter
and
add
pop
inc
negl
insl
inc
negl
pop
adc
aas
std
mov
aam
ljmp
xchg
adc
in
xchg
add
xchg
add
sub
xchg
sub
mov
shrl
out
sbb
add
jb
dec
xchg
mov
ljmp
xchg
mov
mov
pusha
imul
dec
ljmp
and
mov
dec
pop
or
pop
lea
repnz
and
incl
push
xor
pop
xor
push
out
jb
das
sub
dec
push
sub
decl
loopne
or
add
call
icebp
shrb
fs
adc
icebp
xchg
pop
add
xchg
popa
dec
loope
scas
or
pop
push
lea
push
addr16
push
push
call
in
mov
ret
lods
mov
les
add
outsl
arpl
jne
ljmp
out
bound
and
add
add
push
aaa
add
out
faddl
ja
add
cmpsl
xor
mov
aas
gs
loope
sbb
or
xor
push
pop
xchg
gs
mov
sbb
xorl
call
cmp
clc
inc
pop
cmp
pop
xlat
ffree
inc
hlt
xchg
or
mov
push
push
mov
in
mov
lret
out
sbb
inc
add
leave
lods
aaa
add
enter
sahf
dec
or
inc
xchg
dec
inc
js
movsb
mov
xchg
dec
jl
and
or
inc
xchg
dec
inc
js
sarl
or
push
add
xchg
cmp
div
xor
bswap
test
gs
dec
mov
mov
ljmp
push
inc
add
dec
push
enter
leave
xor
add
bound
add
loopew
xlat
bound
repnz
or
xchg
gs
pop
add
adc
mov
pop
xor
bound
cs
inc
pop
mov
bound
aas
pop
es
call
test
sbb
mov
xor
push
bound
add
shr
dec
inc
xchg
mov
mov
call
sub
mov
lea
mov
inc
pop
stos
inc
and
sub
jbe
or
bound
jmp
fisubl
sbb
mov
cld
inc
es
gs
jecxz
xor
call
cmp
xor
add
push
out
fs
pop
inc
add
push
jne
sbb
shll
and
in
cmp
pop
sub
mov
jmp
xor
insb
push
mov
lcall
mov
pop
or
cld
adc
mov
push
add
add
incb
pushl
inc
cld
pushf
and
add
push
gs
out
popa
inc
clc
cli
sub
inc
xchg
clc
mov
or
icebp
jmp
ret
add
add
in
call
or
int3
xor
lock
add
rcll
aad
sahf
lret
or
add
push
add
rcll
fcom
push
roll
stos
or
inc
xchg
cmp
xor
sbbl
xchg
les
cld
xchg
inc
mull
mov
cmp
aas
jae
add
aad
xchg
stc
out
or
addr16
adc
pusha
cs
cmc
jns
xchg
push
ret
jne
xchg
mov
roll
or
pop
test
mov
add
arpl
pop
and
add
ffree
xchg
sbb
pop
mov
jmp
lods
or
add
cmp
flds
push
dec
outsb
mov
sub
xchg
and
setg
fwait
pop
jmp
cld
jo
xor
iret
icebp
add
adc
cld
pusha
push
cmp
add
push
push
rcl
jmp
mov
mov
push
cmp
inc
mov
pop
pop
push
rol
add
mov
ret
mov
mov
mov
repnz
popa
add
xchg
scas
pop
mov
xchg
jmp
lcall
icebp
or
in
xlat
mov
add
jb
les
add
popa
add
xchg
cmp
inc
lret
fcmovnb
pusha
sbb
in
xchg
mov
add
and
incl
push
dec
mov
jo
idiv
test
add
mov
adc
ljmp
out
pop
adc
jne
loop
mov
or
ljmp
mov
add
adc
lcall
mov
je
add
dec
mov
jmp
mov
leave
ret
push
mov
in
cld
fsubrl
jne
addr16
dec
dec
mov
call
dec
out
mov
decl
xchg
jns
add
add
add
jle
leave
call
pop
mov
xor
inc
addb
add
mov
push
mov
out
ss
push
jmp
fwait
mov
fisttpl
add
xchg
lret
ret
in
adc
adc
outsb
jge
pop
or
clc
xor
push
sub
dec
ljmp
popf
mov
movaps
mov
or
inc
mov
stc
inc
ret
jne
bound
pop
pop
sar
add
or
sti
rorl
add
test
sbb
add
xchg
dec
out
scas
inc
dec
pop
cld
mov
xchg
add
out
sub
xchg
mov
adc
or
fbld
outsb
dec
cmpsb
push
imul
xor
shlb
xor
cmp
mov
push
jnp
test
mov
lods
leave
xchg
push
sbb
cmp
lret
or
dec
add
jmp
add
in
xlat
adc
push
xchg
cltd
filds
dec
jne
add
cld
in
mov
fistpll
xlat
leave
sbb
cmp
ljmp
mov
adc
hlt
sbb
mov
call
jo
dec
lea
mov
aad
dec
ficompl
adc
adcl
jne
or
add
in
out
sbb
jne
sub
cld
cmp
push
pop
add
out
sbb
lcall
jne
out
incl
and
jne
out
fstl
leave
adc
addr16
mov
std
je
shlb
jg
push
dec
adc
sbb
data16
pop
je
in
xlat
add
inc
mov
add
cmp
push
inc
les
add
lret
outsl
add
test
movb
push
push
xchg
mov
jp
push
add
inc
add
dec
pop
outsb
pushf
flds
jl
cld
decb
clc
mov
ds
jno
mov
cmp
clc
popa
cld
ja
out
mov
add
add
add
add
subl
mov
sub
shr
aas
jp
jge
push
call
mov
js
inc
fwait
and
mov
add
xchg
jmp
stos
sbb
pop
lods
mov
movsb
or
lods
mov
xchg
dec
ss
xor
jmp
lea
aaa
mov
mov
or
add
mov
xchg
lret
xchg
jmp
ja
dec
pop
mov
mov
stos
and
jg
dec
into
jg
test
jmp
shlb
sbb
dec
mov
xchg
xorb
fildl
add
jmp
stos
setg
cmp
xchg
cmp
dec
mov
xchg
jmp
add
xchg
xchg
sarb
and
out
dec
jmp
popf
bound
cs
push
xchg
lcall
into
mov
push
lea
bound
icebp
std
add
xchg
jecxz
mov
aas
arpl
jmp
pushf
bound
pop
adc
cmpsb
push
push
fs
and
jle
das
dec
mov
add
mov
and
add
pop
add
lods
push
rep
mov
sarb
add
inc
mov
inc
aam
pop
add
mov
lock
fsubs
lea
and
push
gs
inc
mov
add
jg
push
cmpl
add
out
incl
jne
data16
sub
out
mov
add
add
dec
mov
pop
scas
push
cmp
call
xchg
inc
ret
jne
in
mov
mov
and
xchg
cmp
mov
mov
sti
sbb
pushf
adc
cs
mov
jne
mov
cld
icebp
jge
jmp
movsl
add
fldln2
outsb
call
leave
in
callw
test
call
add
xchg
pop
test
pop
iret
cli
idiv
inc
aam
sbbl
inc
lcall
add
lsl
xchg
cmp
bound
test
sahf
cmp
stos
dec
inc
push
inc
arpl
adc
cld
cmpsl
lods
outsl
test
mov
sbb
cmp
aam
jmp
mov
repnz
and
add
lahf
das
or
inc
mov
add
inc
push
add
repz
xchg
sbb
ljmp
pop
xchg
dec
inc
sbb
jmp
add
jmp
cmpsl
pop
lahf
add
xchg
cmp
ret
stc
xchg
call
jo
push
cld
icebp
or
xchg
bound
test
add
in
lods
flds
jne
sbbl
inc
and
push
add
sub
pushl
push
xchg
xchg
bound
imul
or
pop
xorl
in
inc
add
xchg
sbb
add
push
sahf
mov
cmp
mov
add
lret
out
mov
pusha
or
add
jp
jmp
mov
movb
lret
jge
cmp
aas
push
mov
repz
add
mov
mov
inc
cld
push
add
add
hlt
push
dec
incl
pop
push
mov
mov
add
pop
je
cmp
aam
sub
mov
outsl
pushl
cld
je
pop
add
inc
scas
je
add
addr16
add
and
inc
pop
imul
call
stc
add
jnp
or
cs
lcall
jno,pn
add
lret
das
mov
outsl
stos
lcall
push
ret
jne
mov
orb
das
adc
add
pushf
inc
out
mov
jmp
ror
or
in
adc
add
push
popf
push
decl
movsb
jne
jno
sti
mov
js
test
mov
cltd
popa
pop
les
mov
push
jns
cmp
jle
sahf
movsb
imul
loope
jecxz
xchg
mov
inc
sahf
js
sahf
ss
or
xchg
ror
adc
mov
xchg
cmp
test
push
or
or
call
repz
fwait
adc
movsb
push
xor
arpl
clc
or
push
cs
dec
ljmp
inc
jne
cld
or
in
cmp
in
ret
and
jmp
pop
mov
mov
out
test
xor
cmp
dec
arpl
leave
stos
add
jg
jmp
ja
add
xchg
in
fsts
push
fcompl
inc
faddl
mov
push
cwtl
sbb
adc
sahf
in
jmp
mov
add
xchg
mov
push
lahf
push
call
add
pushl
or
fldt
fs
mov
ret
lock
pop
incl
add
stos
or
stos
push
add
jne
push
xor
clc
jo
je
roll
add
pop
out
lcall
jno
je
out
cld
das
adc
sbb
jne
add
clc
addr16
ljmp
shlb
jne
pop
pop
cld
jmp
fdivr
jne
or
test
lea
jae
loopne
add
call
mov
add
add
scas
sbb
mov
loop
dec
mov
int3
pop
or
popf
dec
incl
push
stos
pop
je
mov
mov
stc
xor
jecxz
stos
adc
push
in
ret
aad
add
ds
mov
mov
mov
lock
and
add
dec
cmpsl
lret
ret
mov
add
lret
enter
mov
stos
pop
inc
push
mov
cmp
pop
pop
aas
jl
mov
push
sbb
xchg
out
pop
or
bswap
mov
mov
dec
mov
in
mov
pushf
outsb
jle
mov
xchg
mov
cmp
stos
push
movsb
dec
jle,pt
push
lcall
add
xchg
bound
or
pop
enter
mov
xchg
jmp
mov
push
jnp
jmp
xchg
bound
mov
cmp
jno
divb
push
in
outsl
push
out
outsb
call
pusha
psubd
into
adc
ds
push
cmp
mov
dec
cmpsl
lea
add
cmp
lcall
sbb
add
sbb
mov
out
pop
add
xchg
out
xchg
sub
cmp
add
xchg
insl
test
bound
add
sub
shrl
inc
out
or
sub
int3
scas
pusha
add
mov
mov
lahf
push
data16
mov
add
pusha
add
pusha
pop
or
bound
pushl
lds
inc
outsl
fnsave
mov
or
fnsave
out
fdivrp
and
xchg
ret
decb
pop
repnz
mov
fdivl
pop
adc
pop
or
xchg
cltd
popf
push
mov
stos
pusha
adc
out
mov
mov
and
xchg
fiadds
jmp
add
push
mov
stos
inc
clc
dec
add
mov
mull
inc
add
and
incl
adc
call
enter
jne
jmp
sbb
pushf
push
scas
rorb
dec
xor
stos
push
xor
pushf
call
adc
ret
mov
decl
sahf
decl
bound
xor
xchg
add
push
xchg
lock
and
inc
popf
loope
das
jo
bound
push
push
cmp
popf
mov
sub
clc
mov
bound
pop
cmpb
repz
push
fstl
push
jmp
push
mov
mov
loop
push
xchg
mov
push
mov
pushf
ret
dec
cmp
cmp
xchg
stos
add
cmp
mov
in
mov
push
push
cltd
int3
sbb
push
mov
mov
aam
cmp
scas
test
mov
dec
cmpsb
xor
pushl
mov
xchg
mov
aad
push
or
fsts
pop
lock
or
push
inc
loope
scas
or
ss
and
add
bound
jmp
push
add
mov
bound
lahf
lock
push
andl
and
jae
xor
je
add
push
xchg
pop
lea
outsb
call
add
je
jl
hlt
add
inc
mov
out
lock
data16
cld
rorb
or
jecxz
iret
mov
jne
in
incb
add
jmp
add
mov
or
ret
xorl
push
push
mov
xor
mov
add
aas
add
xor
je
cmpsl
cmp
inc
das
jno
inc
xchg
movsb
add
popf
or
das
or
mov
cmc
insl
add
mov
lea
xor
mov
add
inc
test
andl
je
add
cmp
add
xchg
dec
add
pop
idivl
in
adc
fwait
jmp
adc
dec
add
xlat
cltd
test
add
jmp
pop
add
scas
aas
cli
push
dec
add
dec
add
dec
add
ljmp
mov
xchg
xor
bound
add
bound
add
add
add
sub
xchg
int3
or
xchg
in
popf
inc
aaa
cld
jne
mov
jmp
aad
movsb
xchg
xchg
jmp
xor
lods
sbb
jno
mov
out
pop
xor
add
fdivrl
mov
mov
jecxz
int3
test
arpl
push
xchg
inc
mov
xlat
cmp
cwtl
out
add
add
cltd
pop
subl
ja
adc
stos
jmp
pop
gs
call
push
out
lahf
std
sbb
gs
adc
push
fiadds
stc
cltd
mov
inc
inc
test
lods
daa
xchg
pcmpeqd
xor
mov
out
add
or
jmp
shl
dec
add
or
jmp
add
jne
lret
cwtl
ss
incl
push
daa
ret
push
les
add
pushf
test
movsl
pop
pushl
or
inc
adc
pushl
or
aam
int
pushf
out
pusha
add
push
outsb
call
jp
call
add
mov
int
push
push
out
test
add
scas
inc
enter
mov
jmp
loopne
add
bound
or
pusha
inc
inc
out
jg
jg
jb
xchg
inc
ret
je
mov
mov
out
invd
lods
scas
cmp
push
push
dec
add
mov
in
call
data16
or
data16
add
add
dec
stos
jmp
add
leave
xchg
xchg
mov
out
xchg
jmp
and
mov
je
ds
repz
and
add
dec
stos
push
decl
push
test
fs
jne
push
and
xchg
xor
call
in
jns
push
add
pop
jmp
add
xchg
dec
repnz
stos
jg
scas
xchg
cs
sahf
sldt
sahf
dec
pushf
mov
xor
xchg
lcall
mov
jmp
xchg
pop
fnsave
dec
xor
xchg
scas
lods
adcb
ds
leave
dec
mov
xchg
mov
cltd
push
xchg
test
out
cmp
xchg
xor
pushl
add
nop
pop
call
out
mov
fiadds
xor
add
add
xor
into
mov
mov
xor
rclb
xor
in
not
cmpsb
or
mov
add
incl
add
pop
xchg
xor
mov
xor
ret
xor
jge
add
jle
push
or
mov
jmp
mov
add
push
jle
and
or
sub
xor
push
add
addr16
add
call
push
xchg
sbb
repnz
decl
pushl
int
rcrl
jne
aad
or
sar
call
pop
add
add
mov
dec
or
inc
adc
mov
shr
out
jmp
inc
data16
out
sbb
add
pop
pop
add
in
push
cmp
jmp
push
loope
hlt
out
loope
hlt
xchg
push
xchg
incl
sbb
xchg
scas
add
lea
add
xchg
mov
xchg
add
inc
xchg
cltd
insl
or
shll
sahf
mov
out
loope
xchg
mov
push
ds
ret
je
mov
push
add
sbb
xchg
testl
or
inc
add
xchg
stos
jmp
inc
ret
je
ret
leave
test
push
shr
out
dec
xchg
call
das
push
add
pop
addl
mov
fwait
rcll
jge
xchg
add
mov
fwait
mov
out
xchg
jno
rcrb
data16
xchg
pop
mov
fistl
xchg
dec
cmc
mov
add
add
rorl
sub
xchg
stos
cs
aam
jmp
enter
xchg
or
cmc
nop
mov
cmp
ret
mov
bound
inc
mov
movsb
or
pop
jmp
xchg
mov
inc
adc
cs
add
mov
bound
repnz
mov
rcrb
add
jge
sub
lcall
mov
mov
cs
cmp
aam
sahf
push
faddl
ds
incl
mulb
imull
cs
push
cs
call
out
push
es
mov
popa
pushl
add
adcb
popa
call
mov
int
jmp
or
lock
mov
incl
test
cmp
incb
push
data16
lods
xchg
in
testl
loope
call
mov
mov
out
das
dec
add
incl
mov
jo
mov
dec
call
push
dec
lods
test
shrl
mov
mov
dec
ljmp
push
pop
in
mov
call
xorl
sbb
mov
and
xchg
jmp
sbb
outsb
fisttps
inc
and
cmp
jmp
sub
call
add
int
add
dec
clc
cli
ljmp
lahf
adc
sbb
insb
cmp
shl
mov
sarl
arpl
daa
shrb
dec
sbb
jnp
add
mov
fwait
popa
sub
mov
inc
xchg
sub
cltd
mov
push
sbb
sub
pop
jp
jl
jns
sbb
xchg
xchg
jb
add
out
jmp
add
icebp
fwait
mov
mov
add
xlat
mov
cld
adc
sub
incb
test
fcoml
add
pop
call
jo
pop
push
jge
xor
push
cld
in
inc
jmp
and
mov
lcall
loopne
mov
add
lds
jne
sub
cmp
sbb
sub
aad
sub
adcl
push
inc
xchg
bound
imul
lcall
jecxz
cmp
jne
std
mov
xchg
and
jmp
add
hlt
jmp
movsl
add
push
inc
add
das
sub
callw
decb
add
jg
push
push
pop
xlat
je
addr16
ljmp
push
jmp
sub
call
xchg
mov
lcall
adc
xor
dec
add
jg
out
and
decb
das
push
push
push
fnsave
inc
aad
pop
outsb
push
incl
fdivr
call
pop
push
sar
clc
inc
cli
das
xchg
jp
incl
add
fisttps
or
testl
jne
xchg
cmp
rorl
xor
sub
sbb
out
dec
mov
psadbw
add
mov
mov
inc
clc
out
xor
adc
jle
add
je
jle
add
xchg
inc
and
add
add
out
mov
sub
mov
xchg
sahf
adc
sub
out
stc
outsb
lahf
mov
pop
test
rcll
sbb
daa
aam
mov
mov
inc
mov
pusha
stc
inc
xchg
xchg
inc
pop
lret
daa
xor
sub
mov
inc
add
cmp
cwtl
jb
add
cmp
popa
daa
cmp
push
daa
push
xchg
mov
push
fildll
jmp
add
call
cmp
lods
or
test
push
adc
jbe
jmp
push
call
repnz
push
jo
cs
fcompl
daa
jne
sbb
daa
jne
adc
add
pop
mov
inc
jmp
xchg
and
add
dec
adc
push
ret
icebp
or
mov
inc
jmp
lcall
shrl
incl
push
daa
mov
hlt
loopne
hlt
ljmp
out
repnz
ljmp
push
dec
wrmsr
scas
pop
push
push
add
pop
lret
sar
jo
pushl
leave
dec
std
pusha
fisubrl
xlat
aaa
das
inc
scas
dec
and
add
out
jmp
hlt
ljmp
aad
jne
leave
adc
nop
jne
enter
pop
sub
inc
outsl
dec
dec
xor
push
subb
mov
cmp
jne
adc
add
add
cmp
add
call
movhps
jle
jmp
xchg
jecxz
cld
fnstcw
aaa
ror
mov
or
jno
add
jns
cmp
out
fdivrs
or
iret
cli
out
inc
xchg
dec
js
jmp
mov
sbbl
cmpl
add
sbb
scas
in
cmpl
add
mov
add
xor
test
xlat
push
bound
mov
and
clc
jno
aam
xchg
and
div
cmpsb
lcall
and
nop
popa
jmp
test
and
xchg
fisubrs
test
ljmp
xchg
bound
add
dec
and
xchg
push
mov
and
test
add
gs
jmp
outsb
xchg
push
rorl
jmp
or
call
sbb
lcall
push
adc
xor
adc
cmp
lret
jbe
push
call
je
and
pop
adc
push
add
add
test
lcall
adc
ljmp
cli
imul
sbb
arpl
mov
decl
lcall
mov
call
mov
je
jle
sub
pushl
test
dec
out
mov
out
decl
out
push
lods
push
addr16
movsb
add
lahf
mov
add
add
cli
add
add
mov
mov
jne
std
xchg
cmp
out
jns
decb
dec
push
pushl
inc
pop
mov
rdmsr
adc
mov
test
xor
dec
mov
aaa
push
test
dec
dec
idiv
ret
sbbl
inc
dec
or
add
fcoms
add
xor
je
xchg
leave
sti
and
jmp
movl
decl
inc
subb
clc
sti
jmp
cltd
cmp
adc
cmp
dec
adc
imul
mov
add
pusha
stc
pop
scas
fimuls
cltd
or
add
bound
and
and
xor
inc
add
cltd
out
add
bound
sbb
call
xor
bound
and
add
mov
jo
and
adcl
jmp
cmp
add
or
add
stc
mov
mov
inc
jno
add
out
cmpl
pop
addb
jmp
add
adc
push
je
pop
push
adc
push
cmpl
cli
das
test
or
xchg
bound
sub
push
sbb
neg
pop
pop
push
inc
addr16
loope
mov
pop
pop
push
andb
adc
aam
dec
adc
mov
sbb
xchg
or
add
mov
mov
imul
push
xchg
or
and
add
push
and
pop
call
daa
or
inc
outsl
adc
lcall
push
mov
popf
pushl
mov
cmp
mov
call
pushl
jecxz
or
out
call
ret
xor
clc
movl
add
popa
lea
xor
fbld
decb
dec
inc
add
fwait
iret
jmp
shlb
clc
out
add
and
je
xchg
mov
divl
mov
jmp
inc
cmp
dec
or
jecxz
outsl
sbbl
xchg
xchg
or
mov
shl
cmpl
xchg
push
jmp
add
xchg
or
add
adc
ret
pop
imul
sub
push
and
pop
movsl
jg
sbb
sti
lret
adc
jmp
mov
packssdw
sbb
add
xchg
jg
data16
int3
leave
popa
xchg
sbb
pop
jg
mov
mov
mov
jmp
rcrb
test
bound
add
jg
popa
stc
add
imulb
jle
sbb
ret
adcl
lea
push
add
sbb
adc
lds
add
mov
andl
adc
stos
jge
sbb
jmp
xchg
ss
sub
xchg
add
cmp
sbb
mov
add
sub
sbb
lds
mov
cltd
sbb
ljmp
std
aam
es
test
sti
sbb
mov
call
bound
fs
test
add
std
out
or
jl
lcall
in
mov
mov
lds
es
scas
add
stos
push
sbb
jo
push
or
add
mov
bound
push
dec
inc
add
sti
call
scas
push
cmp
out
pop
push
jmp
callw
popf
call
pushf
xor
popf
jne
xlat
mov
cmp
decl
adc
call
xchg
aas
lret
lcall
pushw
mov
push
jg
jne
push
xor
incl
add
push
lret
pop
xchg
push
shl
out
sub
xor
xor
imul
call
jnp
jg
repz
or
imul
xchg
and
imul
mov
mov
or
add
cmpsl
xor
or
out
mov
add
add
jae
rcrl
pop
ror
shll
ffree
call
add
pop
sarb
xor
js
push
loop
lcall
fdivs
into
or
les
jne
bound
out
mov
sbb
incb
jnp
mov
jp
push
pop
rcrb
jbe
jae
hlt
or
mov
xchg
or
add
mov
inc
cmp
sbb
in
mov
test
jns
icebp
imul
fadd
popa
sbb
jns
jp
mov
out
lock
or
js
sbb
addr16
mov
sbb
jp
push
mov
xor
decl
push
and
jmp
out
imul
test
jne
pop
lea
out
call
add
add
pushl
imul
push
pop
pushl
push
data16
mov
dec
cmpsb
jae
mov
std
xor
ss
shlb
int3
xor
std
test
add
in
fmuls
inc
pop
call
addl
cld
sarl
cmp
mov
pop
callw
cltd
ljmp
add
push
inc
add
pop
sti
call
xchg
out
inc
cs
jne
mov
adc
pop
leave
inc
cltd
leave
ret
push
mov
int
pushl
mov
int3
push
cltd
pushl
xor
xor
fwait
decl
push
decl
call
push
addb
call
insb
int
inc
fwait
jne
add
pop
fwait
jne
outsb
call
ret
or
mov
mov
cld
sbb
call
popf
lret
out
dec
js
xchg
or
jle
xor
sti
loope
or
or
or
out
or
push
or
mov
sub
add
shlb
or
jne
mov
js
add
jp
mov
jno
dec
ret
into
mov
aas
cld
in
or
add
mov
call
movsbl
mov
jge
xor
xor
sub
icebp
imul
ja
in
les
jge
xor
cmpsb
xor
mov
imul
mov
icebp
mov
xor
jbe
xchg
add
mov
imul
xor
ja
ret
mov
bound
dec
test
mov
ja,pn
xchg
fcmovnb
jno
xchg
xor
bound
xor
mov
imul
jbe
in
mov
xchg
sub
xchg
adc
lods
dec
dec
mov
adc
les
sub
xchg
adc
jge
sahf
add
pusha
mov
add
sub
xchg
adc
sub
mov
adc
addr16
xchg
bound
imul
adc
xor
push
adc
xchg
bound
xor
adc
addl
inc
xor
pop
push
inc
addr16
push
add
xlat
and
inc
das
pop
add
fdivrp
jne
xchg
jl
pop
jmp
push
inc
add
lea
pop
icebp
cld
lcall
push
lea
jle
push
lods
pop
add
lret
mov
call
icebp
xor
push
xor
add
cmp
pop
call
push
pop
xor
sti
ljmp
add
adc
dec
adc
sbb
pop
add
xor
imul
cmp
and
pop
dec
jne
or
in
sti
add
call
fistpll
andl
je
arpl
push
sti
jae
lcall
addr16
sti
arpl
mov
mov
jmp
add
lds
imul
je
out
cli
add
xor
je
pop
adc
sub
push
je
ja
ret
je
cs
and
addl
sub
aad
cld
or
in
iret
sbb
push
jle
fcmovnb
loope
adc
popa
adc
sti
add
mov
jle
sar
dec
mov
bound
sub
push
stc
mov
aam
nop
push
stc
sbb
bound
dec
adc
ss
movsl
hlt
ret
xchg
pcmpeqw
in
or
lahf
push
sub
lds
mov
js
jl
adc
rorl
movsl
clc
fs
or
push
insb
cmp
sysexit
stc
add
mov
sbb
scas
jb
lock
xchg
or
sahf
push
sub
lcall
and
fldl
adc
and
or
outsb
push
sub
and
mov
arpl
test
arpl
add
adc
add
mov
jg
cmpl
je
mov
or
sub
incl
add
stos
add
aaa
xchg
jne
push
or
jmp
nop
jne
rclb
pop
call
outsb
jmp
adc
cmpl
call
adc
pushl
xchg
jne
inc
pop
pop
call
inc
pop
jmp
lret
cmp
xchg
incl
or
test
add
push
or
push
testl
add
jle
inc
ljmp
imul
pop
div
and
inc
or
inc
pushl
std
cmc
idivl
adc
and
inc
call
sbb
inc
incl
int
jecxz
xlat
inc
push
ret
xchg
dec
jge
pop
enter
hlt
ficoml
xchg
mov
cmp
xor
xchg
arpl
xor
fisubl
add
test
cs
sbb
cltd
test
xor
bound
popf
or
aas
jo
jp
add
mov
test
out
mov
jne
xlat
bound
fistpl
push
test
xor
shrl
and
scas
jle
adc
aaa
push
bound
lds
sub
sbb
les
add
test
stc
popf
or
xchg
fisubs
jo
or
xor
push
in
call
fsubs
add
dec
adc
out
bound
dec
or
jmp
jmp
adc
push
push
jne
mov
hlt
call
int3
mov
add
push
pop
call
add
add
or
bound
test
orb
sbb
add
cmpsb
push
adc
scas
js
out
sahf
jo
call
add
xchg
inc
or
push
inc
adc
add
test
ret
cmp
daa
test
jmp
pop
add
insl
pop
call
add
sub
imul
sar
mov
push
inc
xor
jl
or
add
push
inc
add
inc
xor
jl
xor
jmp
outsl
movsl
jmp
je
pop
ss
jne
cmpsb
xchg
cld
fdivrs
sub
ljmp
mov
aaa
in
pop
inc
dec
sub
cmpsb
xchg
xchg
hlt
insb
or
je
dec
data16
pop
scas
outsl
jo
mov
enter
cmp
das
inc
xchg
xor
xor
sti
fiaddl
add
xchg
sti
sub
cmp
lea
clc
push
jmp
jne
mov
pop
xor
insl
push
jecxz
sub
sti
fidivl
test
add
sub
aam
mov
xor
mov
insb
jne
xor
sti
icebp
rcr
and
dec
cld
out
bound
insb
dec
pop
and
add
dec
push
xchg
xchg
cli
push
inc
mov
mov
jns
in
outsl
inc
mov
add
popa
push
notb
or
jge
repz
stos
xchg
add
popa
mov
add
xchg
xchg
sbb
xor
sub
cwtl
mov
fistpl
not
mov
jmp
xor
bound
imul
into
pop
sbb
imul
outsb
inc
cmc
icebp
scas
add
test
call
les
cmp
xchg
out
dec
loop
xor
xchg
mov
hlt
lods
add
cmp
or
push
xchg
mov
cli
scas
icebp
push
rclb
mov
mov
mov
cmpsl
pop
xor
pop
add
idivl
jmp
add
mov
pusha
call
push
xchg
out
lahf
in
xchg
xor
xchg
pop
jne
insb
lea
add
lods
out
xor
or
xor
call
les
xor
xor
fsubr
jl
push
jnp
or
jmp
shll
leave
ret
push
mov
loopne
cld
push
arpl
rclb
pop
call
add
mulb
sti
push
sub
arpl
imul
push
sub
stos
mov
shrb
out
mov
inc
jmp
push
movsl
mov
xchg
xor
xchg
mov
ficompl
mov
and
fnstcw
shll
stc
push
mov
scas
dec
pushl
fdivrp
add
cmp
inc
xchg
xor
xlat
sti
addr16
jns
aas
jns
inc
je
jmp
jecxz
pop
or
imul
mov
mov
ret
xor
xlat
sti
pop
ss
or
clc
dec
out
cltd
cli
enter
sar
add
dec
das
push
bound
mov
push
add
add
fscale
hlt
aas
roll
cmp
rorb
push
test
pop
orl
add
push
push
add
aas
jo
ds
cltd
cli
imulb
lcall
idivl
or
out
jecxz
jp
xlat
bound
cltd
mov
mov
cmp
add
add
into
xor
sbb
add
into
pop
pop
call
and
popa
add
cmp
hlt
rolb
cmpsb
pop
call
xor
bound
jle
jns
mov
cmpsl
pop
call
or
and
jmp
push
push
pop
pop
mov
icebp
add
cs
call
xchg
add
je
jne
fisttpll
add
jge
ljmp
adc
jmp
jge
leave
cmp
stos
push
push
inc
xor
xor
fbld
add
or
clc
or
jne
jl
or
jnp
or
shl
ljmp
cmpsl
fidivrs
xchg
inc
xor
xor
add
outsl
pop
sub
mov
je
jne
test
or
adc
call
cmpsl
in
mov
jne
push
lock
add
pop
cs
pop
lcall
inc
inc
or
inc
jns
adc
lahf
cli
incb
sbb
mov
loope
cmpsb
push
shlb
out
in
ljmp
cli
add
add
clc
pusha
mov
jne
icebp
mov
mov
jae
pop
jle
test
mov
inc
add
mov
dec
divl
ja
push
arpl
cmp
xor
arpl
xchg
insl
sub
sbb
call
imul
cmc
fs
jmp
fsts
mov
jbe
idivb
ja
neg
fs
xchg
into
out
add
jmp
mov
xchg
insl
test
add
mov
cmpl
adc
stc
jge
inc
xchg
sub
sbb
pop
mov
cmp
out
inc
pop
ret
jno
jl
popa
add
fs
xor
add
out
aam
pushl
push
negl
mov
cmp
mov
add
dec
inc
jmp
jne
test
insl
add
push
lcall
xchg
dec
stc
inc
jne
xor
fildl
out
push
add
pusha
pop
or
cmpsb
xor
cmp
xor
out
xchg
xor
dec
inc
jmp
xor
je
sbb
pop
cmc
xchg
push
dec
psllq
add
cmp
add
pop
dec
inc
add
mov
incl
out
fsubrs
hlt
std
xor
jmp
push
call
xchg
cli
or
mov
call
cmp
fcomi
loopne
adc
mov
out
pop
andl
incl
fs
cmp
out
and
pushl
sar
cmpsl
mov
and
add
add
popf
incl
sbb
call
loopne
out
xchg
cwtl
jmp
imul
movsl
pop
lcall
fadds
ds
pushf
decl
cwtl
loopne
pusha
inc
add
in
outsl
jmp
inc
pop
jmp
add
pop
cs
call
adc
call
stc
icebp
das
insb
xchg
sub
sub
pop
fldenv
fnstsw
add
iret
pusha
mov
fbld
scas
pop
lahf
mov
out
pusha
call
mov
ja
call
arpl
xchg
sub
or
xchg
bound
daa
push
out
imul
mov
pop
movl
jmp
add
cmp
sub
bound
sbb
push
ja
mov
arpl
jo
add
pop
pop
data16
push
or
shlb
jmp
xchg
push
pop
mov
aaa
sub
aaa
fldcw
push
bound
or
jbe
mov
pusha
jmp
pop
inc
std
sti
popf
or
idiv
out
and
rorl
ja
inc
dec
incb
ja
ds
gs
and
data16
add
push
andl
mov
or
mov
sub
xchg
bound
sub
and
bound
jmp
dec
gs
out
cld
push
jmp
daa
out
sahf
popa
std
dec
sahf
fcomip
sbb
or
pop
xchg
bound
add
sbb
xor
add
popf
jne
out
mov
add
add
mov
sar
jmp
push
push
movl
call
and
daa
rclb
xor
out
pushl
jecxz
clc
pushf
push
adc
inc
out
pushf
mov
rcrb
inc
out
xchg
mov
fistl
push
loope
bound
xchg
aam
xor
mov
jb
loopne
je
push
popa
mov
mov
xchg
pop
pushl
adc
xlat
or
and
call
add
repz
incl
push
idivl
pop
pop
xor
xor
jmp
jb
fsubl
cld
pop
adcl
decl
or
fs
sbb
push
mov
add
add
sub
push
in
fldcw
sahf
decl
imul
int3
pop
decl
bound
xlat
cltd
or
pushf
test
repnz
je
imul
jne
mov
xlat
xchg
or
pushf
jno
push
xchg
jbe
dec
pop
popa
jo
imul
adc
dec
cli
sub
pushf
cmp
sbb
pop
ds
push
pop
add
and
cmp
cli
std
imul
add
cli
shl
cmp
fstpl
ficomps
loope
loope
lds
mov
stc
je
icebp
cmpsb
pop
outsl
or
dec
scas
out
xchg
inc
stc
out
stc
jle
icebp
call
outsb
push
bound
xor
push
mov
rorl
add
mov
je
mov
jmp
sub
xchg
stc
je
mov
stc
je
ret
adc
pop
and
jmp
pop
adc
out
out
clc
je
dec
das
xor
out
lret
jmp
jne
clc
and
add
xchg
incl
mov
pop
push
test
inc
add
or
lcall
adc
call
je
je
cltd
add
outsl
or
sub
arpl
jne
mov
mov
ret
notl
cld
mov
lock
aam
ds
lock
xor
mov
into
pop
decl
jg
neg
and
cmp
xchg
mov
lock
enter
sbb
xchg
roll
mov
mov
pop
ljmp
jmp
enter
inc
jns
incl
lret
jg
pop
lcall
xchg
popa
test
push
inc
adc
cmp
decl
push
dec
mov
ss
pop
call
jle
negl
pusha
mov
out
ret
decl
ss
testl
add
or
bound
ret
icebp
nop
cwtl
jmp
pop
push
ret
pop
lcall
cmp
imulb
pop
mov
cmc
or
insl
out
mov
mov
cltd
push
insb
cmp
imul
xchg
adc
jns
shll
test
jmp
pop
popa
notb
adc
mov
cmp
push
inc
imulb
add
xor
and
jge
jmp
pop
sbb
jg
arpl
add
cmc
jmp
xchg
bound
xchg
add
call
and
idivl
sub
cmc
mov
inc
cmc
sahf
fcomps
mov
or
testb
sub
out
data16
pusha
pop
call
push
adc
testl
mov
out
loope
adc
cmc
jmp
gs
push
sub
bound
cmc
das
add
jecxz
call
pop
call
enter
enter
pop
call
idiv
or
pushl
pop
adc
add
add
lea
call
sbb
xlat
testl
mov
inc
mov
clc
xchg
enter
movl
pushf
mov
pusha
leave
ret
push
mov
ret
cld
add
adc
call
sbb
push
inc
xchg
hlt
iret
pop
out
outsb
pop
stc
add
sti
icebp
xchg
or
sbb
push
incl
add
incl
addr16
xchg
sti
data16
iret
or
or
sbb
add
cld
jg
xchg
or
fndisi(8087
add
xchg
or
inc
mov
jns
add
xchg
lsl
xchg
repz
jle
hlt
popa
movsb
push
push
push
mov
inc
xor
add
push
lods
call
xchg
mov
xlat
bound
rolb
add
repz
sbb
hlt
dec
add
cwtl
mov
in
push
icebp
call
fldl
fsts
jmp
push
shl
adc
jmp
push
pop
fldl
cs
ret
cmp
jge
lret
xor
ret
stc
cltd
jno
outsl
jg
cli
pop
push
in
fldenv
add
repz
adc
add
lods
xchg
mov
adc
icebp
xchg
xchg
jp
ficoms
push
push
incb
arpl
xor
aam
out
pop
repnz
pusha
jno
mul
inc
filds
ljmp
mov
nop
xor
sub
icebp
or
pop
stc
xchg
cltd
jbe
mov
add
icebp
xchg
vpshlw
icebp
aam
bound
mov
lret
cmp
icebp
mov
pushl
andb
fs
or
adc
mov
push
popl
xchg
pop
movl
lahf
mov
mov
mov
add
idiv
add
ss
lea
pop
xchg
mov
clc
xchg
call
test
testl
xchg
mov
enter
pop
lret
xchg
inc
mov
dec
mov
add
cmp
push
jg
imull
dec
add
mov
xchg
call
mov
xchg
decl
add
ljmp
out
pop
jmp
add
fstps
cwtl
call
inc
icebp
pop
in
add
push
incl
pop
pushl
enter
icebp
pop
lods
in
push
decl
pop
decl
push
xchg
jns
cwtl
loopne
adcb
pop
and
pop
push
out
inc
dec
add
inc
push
or
xor
cwtl
add
xor
sub
push
cs
push
sbb
pop
arpl
out
or
push
add
add
out
in
push
push
ljmp
arpl
shlb
jmp
mov
imul
out
xor
mov
pop
push
mov
jmp
sbb
bound
enter
add
orl
jmp
ss
test
jp
pop
push
out
std
adc
cmp
fisttpll
sarb
arpl
push
add
je
mov
in
je
addr16
push
jmp
out
test
out
add
push
fidivl
jmp
addr16
dec
data16
call
out
mov
sub
subb
add
add
xchg
in
je
in
inc
mov
out
inc
add
or
decl
shll
xor
jmp
dec
inc
add
adc
call
call
jmp
dec
insl
add
lea
imul
jp
ljmp
popa
add
pop
or
lods
xor
jmp
ljmp
add
or
aaa
jle
push
inc
push
sub
mov
shlb
decl
add
addr16
stc
pop
mov
xchg
dec
dec
jne
loope
fldcw
pop
push
sub
dec
jne
mov
cmp
mov
jns
cld
enter
mov
push
add
adc
add
xchg
jns
add
mov
leave
test
xchg
lock
je
sub
sbb
ret
decl
push
mov
mov
addr16
stc
pop
mov
xchg
cli
ret
jmp
pop
inc
jmp
pop
xchg
movsb
imul
imul
and
jecxz
pop
fmuls
add
xor
cmpsl
cmp
jmpw
imul
jmp
sti
xor
pop
dec
adc
stos
dec
jle
jmp
or
xchg
cld
test
pop
add
out
fst
cltd
cli
loop
leave
ljmp
stos
loopne
xor
movsl
cld
sbb
or
xorl
int3
insb
xchg
bound
test
add
sbb
call
loop
add
xchg
and
shll
jmp
outsl
ljmp
rcr
ds
jmp
mov
lcall
test
inc
jmp
push
mov
and
out
imul
push
xchg
push
roll
mov
fimuls
ficomps
out
es
add
gs
push
sub
xor
out
iret
push
loopne
notl
xchg
push
cmpsl
divl
inc
jg
mov
call
push
sub
ljmp
mov
call
push
stos
xchg
idiv
pusha
xchg
xor
out
sar
incl
xchg
lea
pop
or
ds
lock
xor
scas
pop
call
or
daa
idivl
test
adc
push
jmp
mov
inc
je
sub
adc
push
pushl
add
xchg
jl
in
jns
add
test
mov
xchg
add
push
cmp
into
inc
mov
add
xor
pop
cmp
in
or
incl
pop
dec
incl
push
push
call
cltd
jmp
clc
in
out
shrl
pop
iret
mov
enter
ktestw
outsl
cltd
test
out
lods
dec
scas
in
push
dec
xchg
out
push
and
lea
lods
nop
push
jno
nop
sub
out
dec
add
sub
jne
pop
cli
cmp
push
out
rolb
dec
inc
out
sarb
bound
inc
sahf
bound
lods
bound
pop
lock
dec
setge
add
insb
icebp
pop
sub
cmc
dec
out
in
dec
insl
or
lds
add
lock
push
out
jmp
stos
mov
dec
out
and
add
add
out
movsb
adc
add
inc
jmp
pop
adc
jle
outsl
cld
jbe
pop
call
xor
pop
add
in
decb
lahf
cld
cltd
fisubrs
ds
xor
test
cli
cwtl
push
bound
sub
call
dec
bound
jmp
repz
out
pop
ljmp
insb
inc
hlt
add
insl
test
loopne
call
adc
jmp
call
or
adc
add
push
shll
jg
jne
daa
imul
fs
negl
lcall
call
lcall
mov
lcall
fcom
out
imull
pushl
xlat
sub
in
add
sti
fidivl
mov
dec
jmp
mov
dec
lcall
jbe
test
mov
xchg
adc
lock
jmp
inc
xchg
and
cltd
mov
test
inc
lcall
jg
testl
daa
push
imull
inc
xor
jno
xchg
call
inc
je
js
faddl
add
inc
add
jmp
imull
and
inc
ljmp
out
mov
xor
add
fs
or
subb
cmc
inc
loope
jge
adc
cld
dec
shl
call
pop
leave
jecxz
add
inc
add
fisubs
inc
jmp
mov
xor
jmp
inc
add
xchg
outsb
and
jno
xchg
test
icebp
pop
stc
mov
inc
pop
lods
jl
push
jecxz
rclb
jecxz
nop
cs
inc
xor
pop
sti
mov
inc
and
cs
mulb
push
jecxz
icebp
pop
jne
push
push
jecxz
or
incb
pop
call
testb
imul
pop
cli
xchg
xchg
push
jecxz
xchg
pop
jmp
pop
fsubrs
add
add
mov
pop
jecxz
rcr
mov
mov
lods
out
mov
loope
sbb
inc
sub
loope
mov
out
adc
push
sbb
into
andb
cmp
push
rcll
inc
clc
adc
add
pop
inc
cld
pusha
mov
fisubrl
pop
mov
sub
inc
fwait
mov
push
incl
add
call
or
aad
mov
push
sti
jmp
mov
decl
std
jne
cmp
pushl
es
inc
mov
call
and
pushl
and
add
cmp
out
mov
decl
jg
add
and
add
xor
or
or
add
add
aam
movlps
into
sti
xchg
xchg
incl
push
mov
ljmp
inc
jne
jb
scas
loope
jbe
ljmp
jmp
les
inc
int
cmp
outsb
mov
sbb
lea
and
xlat
leave
fsub
mov
or
adc
add
pusha
mov
add
add
or
dec
push
inc
in
mov
adc
add
iret
mov
push
push
in
fistpll
mov
push
inc
add
xchg
das
out
lea
icebp
in
mov
ja
fists
add
test
bound
adc
dec
hlt
inc
inc
push
cld
mov
push
lcall
shrl
xchg
fildll
sti
bound
pusha
mov
xchg
rol
movl
adc
mov
mov
js
decb
test
inc
aam
sbb
adc
mov
adc
test
xor
dec
sbb
adcl
xchg
cmp
cltd
push
push
or
dec
loopne
out
add
jl
lods
out
dec
sbb
xor
call
mov
adc
sub
inc
pop
fwait
inc
jmp
xlat
fisttpll
xlat
push
or
mov
and
and
push
mov
enter
push
or
call
push
jecxz
inc
aas
mov
cmp
and
push
mov
mov
add
and
xchg
dec
stos
lcall
mov
in
outsb
sub
test
mov
jne
and
out
jle
mov
jecxz
add
popa
add
inc
movsb
repnz
add
ud0
ud0
inc
aaa
mull
sar
jecxz
aas
jne
jecxz
jle
lret
or
lret
addl
add
adc
mov
push
push
lea
lahf
cmp
or
aam
push
inc
decl
inc
xor
icebp
jae
stos
cmp
xchg
repz
push
lret
aas
mov
fstpt
dec
push
psubsb
repz
inc
sub
mov
test
inc
xchg
movsb
js
mov
sub
sbb
aaa
jns
adc
add
rol
imul
test
jecxz
xchg
mov
fdivl
adc
jne
inc
dec
jmp
add
push
pop
aaa
sub
dec
mov
sbb
outsl
mov
shll
loop
and
ds
rcll
paddd
ds
loope
imul
std
adcb
std
ds
bound
push
leave
ss
fists
add
add
ds
scas
sarl
sbb
mov
lods
push
test
mov
mov
mov
arpl
mov
jle
lret
mov
je
insl
mov
mov
push
call
inc
sahf
ret
rcr
je
mov
cs
jle
push
add
pop
testb
lret
nop
cmp
sar
out
insb
hlt
stos
out
pop
pop
dec
arpl
call
inc
push
fdiv
xor
dec
mov
incl
cwtl
jne
adc
pop
call
rclb
test
xchg
ljmp
decl
call
leave
add
insl
jb
push
test
ljmp
xchg
jne
cmpsl
or
cld
pop
leave
aaa
inc
out
or
jne
idiv
rclb
lcall
or
test
jne
mov
insb
decl
outsb
mov
pop
pop
pop
divl
lea
fwait
cmp
or
mov
add
add
inc
movlps
notl
call
movsl
add
mov
lea
rorl
sti
cmp
jg
sti
sarb
je
bound
mov
inc
mov
cmp
bound
cmp
or
cmp
fistpll
mov
add
aas
fdivs
std
bound
cmp
in
adc
mov
pmaxub
mov
fnstenv
xor
fsubs
stos
push
mov
sbb
push
cmp
dec
jmp
add
push
cmp
add
sub
push
cli
iret
adc
lahf
sahf
and
cmp
shl
cmp
xlat
jnp
add
xlat
mov
fdivrp
xlat
pushaw
mov
shl
int3
xlat
je
mov
jmp
push
mov
jne
sbb
cld
mul
mov
jmp
insl
iret
xchg
dec
push
rcll
dec
or
std
incb
or
mov
add
mov
iret
push
lods
dec
or
pop
add
push
pushf
or
incl
call
incl
cwtl
jne
pop
movsl
dec
cwtl
mov
rcrb
insb
adc
ljmp
xchg
cmp
call
or
in
rcrb
dec
inc
call
push
add
push
pushf
incl
cmp
dec
xchg
enter
iret
xchg
dec
add
call
call
idiv
mov
cmp
push
jae
push
rcrb
inc
xlat
sub
lret
add
aam
add
mov
les
lods
lods
pop
scas
mov
xchg
push
mov
inc
xchg
or
das
scas
mov
jmp
sub
add
imul
push
icebp
leave
add
push
fsubrl
incl
scas
sti
cmp
or
lcall
dec
inc
daa
adcl
mov
lgdtl
pop
call
popf
bound
or
in
add
jmp
aaa
xchg
jmp
lods
mov
into
cmp
add
mov
aam
cmp
inc
add
addr16
mov
mov
jno
je
int3
popf
aaa
rcrl
adc
dec
rolb
xchg
pop
fidivrs
inc
aam
inc
ret
jns
int3
gs
xchg
dec
add
push
cmp
jno
int3
cmp
loope
mov
mov
mov
sti
push
add
mov
aam
add
xchg
test
mov
adc
sti
push
xchg
dec
sbb
out
call
pusha
push
xlat
orb
xchg
je
mov
dec
mov
jmp
bound
fiaddl
cltd
inc
jmp
pop
sar
fcompl
shll
sbb
add
add
xchg
bound
add
jne
addr16
inc
mov
rclb
call
cmpsb
and
sbb
jmp
sub
hlt
fs
or
cmp
fdivrs
add
xchg
push
inc
pop
add
add
idivb
mov
pop
call
pop
xlat
gs
add
cli
cmp
pop
call
call
add
push
and
jmp
jmp
push
xchg
insl
pushl
jle
movsb
rclb
sbb
mov
call
insb
pop
xor
push
subb
pop
jno
fldz
decl
sub
movl
les
sbb
jmp
fldl
add
es
add
or
xor
sbb
ljmp
mov
inc
xchg
clc
lods
sti
ds
imul
inc
loopne
push
cmp
or
push
add
bound
leave
pop
and
xor
into
inc
popf
aas
roll
jns
jmp
scas
cltd
mov
adc
rcrl
add
push
or
xor
cmp
add
add
pop
add
add
fidivs
cs
adc
xchg
rcll
jle
xchg
xor
mov
loope
negb
inc
xor
sbb
cmp
dec
lcall
adc
shrb
fs
or
add
pop
fwait
and
sbb
push
rcll
add
push
xchg
xchg
cmp
push
pop
push
incb
and
je
cli
mull
outsl
mov
shlb
mov
jle
push
iret
push
shl
sar
mov
push
cld
scas
cs
mov
data16
mov
incb
sbb
inc
cld
lahf
xchg
jne
test
or
add
out
jmp
jne
rcrb
xor
push
aad
push
aad
lea
mov
test
xchg
jne
cwtl
or
call
les
je
xchg
int
mov
pushw
push
test
dec
dec
test
inc
xchg
call
outsb
sbb
test
mov
incl
add
sbb
xchg
push
out
inc
xchg
fdivl
dec
in
inc
mov
xor
and
ret
call
out
xor
or
int
stc
mov
decb
mul
test
cmpsb
repz
shll
decl
js
mov
pusha
cmp
test
add
pop
jp
decl
aaa
decl
call
outsb
call
loop
lcall
pop
jecxz
push
int3
pop
sbb
lea
lret
pop
xchg
jne
int
fwait
xchg
bound
ret
fwait
sbb
int
xor
int3
dec
xor
cmp
addr16
int3
xor
xor
push
dec
xor
int3
push
xor
add
int3
adc
mov
mov
std
jne
aam
das
mov
int3
sub
cltd
fisubrs
xchg
int3
pop
xor
push
add
cltd
stos
add
push
add
lea
rcrb
int3
dec
sbbl
push
adc
int
loope
test
imul
xchg
mov
push
int3
je
popf
jno
sarl
sub
lret
push
jb
ffreep
sbb
das
imul
dec
imul
xor
int
add
push
sub
xchg
loop
jmp
xchg
bound
outsl
and
add
pop
or
stos
or
andb
test
pop
add
out
cwtl
cmp
call
add
add
and
movb
mov
add
insb
mov
add
jne
push
fld
call
add
imul
jne
push
in
pushl
jl
inc
pop
icebp
cmp
mov
inc
cmp
or
xor
add
scas
pop
out
mov
xchg
mov
sbb
add
sub
mov
pop
cmp
mov
sbb
jmp
sub
jg
mov
icebp
mov
and
cmp
sub
pop
out
jl
stc
mov
imul
mov
cmpb
out
xor
call
repz
cmp
sub
mov
add
sub
ds
inc
xchg
jecxz
add
pop
rorl
leave
aad
or
int
xchg
mov
sbb
add
fnstsw
push
xlat
and
out
sbb
dec
fstpl
rorb
add
fs
add
into
pop
add
add
add
in
insb
xchg
add
shlb
sub
dec
and
add
pop
jmp
xchg
cmp
push
mov
mov
cltd
push
mov
insb
iret
fisubs
call
pusha
pop
shl
mov
imul
xchg
mov
test
sahf
pop
pop
call
pusha
pop
mov
add
js
inc
jmp
add
insb
or
fmull
shrb
mov
decb
enter
and
ds
lods
je
jge
movsl
es
test
test
incb
rol
std
add
idiv
test
jne
xchg
iret
mov
fdivl
decl
push
popf
repnz
idiv
sub
xchg
popf
out
add
inc
incl
sbb
add
aas
jl
pop
sbb
ljmp
jl
jmp
enter
mov
rcrl
jl
jb
idiv
dec
jb
add
dec
test
mov
ret
cmp
jnp
lock
jmp
iret
out
xchg
adc
dec
divl
iret
sub
xchg
sarb
mov
push
mov
decl
mov
sbb
jno
add
adc
add
xchg
and
imul
daa
popf
dec
in
mov
in
cmp
out
cmp
sbb
and
jne
jecxz
popf
adc
sub
add
sub
icebp
inc
dec
imul
test
jne
and
fnstenv
repnz
sub
add
lds
sub
lds
addr16
int
sub
scas
mov
sbb
or
sbb
int
pushf
cmp
sub
pop
sarl
lds
sub
pushf
arpl
popf
outsb
xor
xchg
sub
mov
cmp
and
jge
inc
add
sbb
lea
adc
push
push
lds
add
dec
scas
pop
sub
mov
inc
outsb
out
cmp
in
dec
or
es
lock
outsb
xor
int3
call
repz
and
push
add
cmp
inc
mov
je
lea
mov
xchg
ret
xor
jb
add
outsl
ret
incb
add
inc
mov
or
les
inc
std
jbe
ret
je
mov
in
pop
ret
mov
jmp
push
into
std
add
push
lds
jne
addr16
cmpb
jae
add
scas
pop
lea
out
shlb
pop
or
sub
add
out
cmp
jge
mov
add
push
push
jg
jne
push
add
add
lahf
lock
jne
jl
or
out
jmp
xchg
add
mov
in
lods
cmp
das
jmp
out
adc
cmp
add
adc
inc
xchg
mov
cmp
and
shll
jne
jnp
pop
scas
xchg
xchg
mov
push
jp
add
pop
jne
mull
call
scas
or
mov
xorl
mov
add
xor
xchg
lret
add
and
add
fcmovnbe
rorl
jl
jne
jmp
mov
sbb
inc
je
loop
add
mov
sbb
add
and
add
sbb
fwait
sbb
add
and
rol
aad
ret
sbb
adc
xchg
pop
and
and
mov
and
shll
mov
jmp
pop
add
push
jmp
mov
pop
aaa
in
movsb
add
and
out
sub
rcll
scas
cmp
push
xor
roll
add
test
out
mov
imul
xchg
shll
insl
call
jo
sahf
divb
jp
add
daa
jge
jmp
jb
pushf
test
rorl
inc
data16
jle
add
sti
mov
out
mov
mov
mov
mov
idivb
add
sbb
jmp
jne
lcall
in
xchg
popf
mov
push
add
fiaddl
call
mov
in
idivl
pushl
mov
mov
pop
lcall
push
call
cwtl
sbb
testl
flds
call
mov
fdiv
cwtl
cmp
cmpsl
mov
mov
pop
incl
add
push
call
pop
sbb
testl
icebp
lcall
call
popf
clc
xorl
pop
loop
call
lock
cmp
lcall
jbe
notl
cmp
fisubrl
push
and
dec
and
stc
adc
icebp
pop
and
out
mov
lock
ja
incl
and
add
pop
and
mov
addr16
and
xchg
mov
sti
jle
mov
xor
in
adc
and
jmp
sub
fcomi
stos
xchg
lea
fldl2e
bound
pop
sub
jmp
adcl
loope
cmp
insl
and
cmp
add
subl
or
push
dec
aam
jmp
dec
ficoml
lods
rorl
and
inc
mov
mov
jno
pop
mov
jmp
bound
cltd
xor
add
lret
cmpl
xorb
aaa
in
or
adc
jbe
addr16
push
lahf
sahf
add
jbe
push
add
inc
jmp
mov
lret
mov
ljmp
mov
mov
cmp
pop
mov
mov
or
es
push
leave
sub
loope
or
add
lds
mov
je
mov
xchg
ficoms
add
add
fwait
sar
adc
push
decl
idiv
jne
mov
xchg
add
adcb
das
fisttpl
push
daa
cld
lcall
loopne
adc
roll
mov
mov
jne
jmp
mov
sub
mov
sbb
decl
push
decl
insb
push
decl
push
sub
leave
insl
outsb
add
jae
les
add
add
mov
jge
pop
je
xchg
dec
mov
sbb
add
push
inc
pop
jmp
leave
mov
dec
and
adc
int
shrb
mov
mov
and
xchg
popf
push
or
xchg
or
out
mov
incl
add
enter
inc
or
cmc
inc
call
mov
enter
inc
mov
fisubrs
mov
les
shll
mov
xor
inc
cmp
rolb
ret
data16
inc
popf
mov
sbbl
or
jns
add
xchg
sahf
aas
hlt
or
jno
push
bound
adc
out
fisttpl
or
call
mov
leave
das
sub
sbb
fstpl
adc
cmp
pop
xchg
add
sti
jmp
xchg
bound
cli
icebp
dec
add
dec
sarl
das
adc
push
rcl
insl
pushl
add
repz
push
fs
rorl
sarl
bound
xchg
or
push
push
push
mov
add
movsl
lea
enter
mov
push
pop
add
jmp
es
sub
mov
dec
add
mov
adc
cwtl
dec
add
jg
shlb
out
add
in
ljmp
movsb
ljmp
outsl
fs
mov
ret
lock
rorb
incl
pop
call
roll
call
movsb
push
pop
add
push
inc
hlt
scas
pop
jne
mov
push
call
jbe
cli
lea
push
inc
pop
pushl
mov
inc
push
pop
jne
mov
idiv
add
jne
add
adc
js
mov
mov
cli
call
cltd
push
jl
mov
add
ss
sbb
lcall
or
add
inc
daa
sbb
add
mov
or
pop
adc
hlt
stos
mov
scas
sub
sbb
stos
mov
pop
std
adc
sbb
cmp
stc
inc
mov
add
pop
lret
sbb
sbb
or
cltd
sbb
and
jne
bound
nop
xchg
lret
mov
dec
icebp
sbb
imul
and
testb
mov
inc
xchg
lea
pop
or
arpl
cltd
lret
dec
mov
lea
scas
sbb
ljmp
add
push
popa
sahf
lea
mov
adc
sbb
push
popa
jle
lea
outsb
sbb
jmp
xor
bound
push
dec
call
inc
rcl
cs
das
adc
sbb
push
sub
cmp
xchg
bound
jmp
xchg
bound
xor
lea
add
lcall
je
scas
das
or
mov
mov
je
add
sub
call
rclb
push
std
hlt
test
bound
cs
call
mov
je
std
popa
add
pusha
sbb
jne
mov
sbbb
sbbl
xchg
xchg
incl
add
fbstp
add
mov
xchg
add
sub
add
movl
jne
lock
pusha
add
repnz
repnz
mov
notb
rclb
ljmp
call
addl
jl
jmp
sub
stc
loopne
lock
jecxz
ljmp
xchg
inc
dec
pushl
adc
mov
sbb
jne
je
or
test
jmp
popf
jp
xchg
fs
out
jle
jp
addl
jno
cmpl
leave
adc
xchg
push
movsb
test
dec
jbe
call
lods
leave
adc
xchg
sub
adc
xchg
sbb
les
or
add
add
fcoml
adc
std
push
push
jmp
lret
fld1
stos
unpckhps
addl
lahf
loopne
mov
loope
or
and
add
jmp
push
add
fisubs
mov
mov
scas
imul
in
push
pop
imul
xchg
adc
add
add
adc
jae
mov
xchg
sub
add
fs
inc
mov
xchg
std
addr16
ljmp
adc
shll
adc
call
jo
sbb
clc
cltd
xorb
adc
push
or
mov
je
lods
jl
incb
add
mov
loope
xchg
stc
out
in
lds
dec
into
sbb
je
insl
add
mov
filds
scas
je
insl
add
sahf
and
xchg
xchg
aaa
or
bound
add
test
pop
lea
cmc
std
jne
push
jne
js
push
call
cmp
testb
pop
mov
pop
xchg
or
add
cmp
notb
loopne
call
and
jmp
jmp
pop
call
cmp
pusha
jne
xchg
pop
add
jg
jl
jno
and
repnz
out
into
push
decl
subb
lea
push
incl
push
decl
or
out
in
decl
xchg
add
arpl
sbb
fisttpll
mov
addl
and
shrl
inc
scas
cmp
out
xchg
in
xchg
subb
add
xor
out
aad
adcb
add
mul
stc
cmp
mov
dec
push
jecxz
lcall
mov
stos
mov
push
add
gs
jbe
call
popf
stc
xchg
sub
add
scas
jmp
cwtl
popf
mov
lea
icebp
popf
pop
adc
scas
sti
pop
jmp
shll
fnstenv
adc
inc
pop
and
dec
adc
push
inc
and
inc
dec
add
adc
scas
sbb
add
pop
loop
xchg
out
adc
jno
imul
lods
adc
add
in
sbb
ljmp
adc
lds
scas
cmp
cmc
lea
pop
lods
je
cmpsb
aaa
cld
orl
in
je
or
lods
je
xchg
or
cmc
pop
cmpsl
aaa
cld
inc
pop
fdivrp
dec
jge
pop
jmp
pop
idiv
xchg
jmp
add
pop
pop
or
cs
aaa
add
jmp
xchg
add
out
in
je
std
shrb
sub
sti
xchg
into
cmpsb
mov
sub
aas
push
jne
push
aas
cwtl
push
daa
test
icebp
pop
add
jb
sar
push
push
call
and
pusha
push
push
ljmp
dec
dec
mov
test
add
push
out
popa
test
scas
pusha
add
pusha
dec
add
scas
pusha
add
inc
sub
enter
pusha
call
or
pop
add
repnz
jo
lea
mulb
mov
ret
movsb
incl
inc
jne
xchg
jg
xchg
mov
lahf
sahf
and
cli
mov
mov
lds
or
add
fisttpll
jmp
dec
add
imul
lea
clc
or
sub
inc
cs
repnz
mov
imul
mov
and
mov
test
ud0
adc
dec
xchg
mov
lcall
cmc
sbb
rcr
push
dec
cmc
pushf
or
add
aas
rol
push
adc
push
and
movsl
sbbb
sahf
push
or
xchg
pop
inc
lods
lea
out
cmp
add
in
adc
push
loope
xor
stos
sbb
inc
jmp
or
and
pop
jmp
inc
out
sub
or
xchg
bound
lea
xchg
xchg
loop
add
add
pop
adc
xchg
bound
jmp
xchg
test
xchg
ficomps
test
add
mov
sarl
aad
scas
cltd
ffreep
cmpsl
mov
ljmp
xchg
bound
jle
pop
test
popa
movsb
std
mov
bound
out
call
mov
add
jge
shll
inc
jmp
xchg
pop
rclb
std
push
mov
inc
add
data16
pop
movsb
out
cli
pushl
add
xchg
std
push
mov
adc
lcall
lahf
sub
pushl
dec
cltd
xchg
call
push
dec
inc
loope
sub
test
decl
pop
pushl
add
lahf
push
call
shlb
mov
int3
and
pushl
pop
rolb
call
push
sbb
ret
call
adc
fldl
add
jp
test
test
jmp
dec
pop
mov
add
add
or
inc
mov
cmp
sahf
mov
nop
or
add
sbb
inc
je
imul
outsl
sub
sti
incl
sbb
outsl
lcall
leave
or
ret
incb
sbb
jne
xchg
pop
scas
es
cltd
mov
icebp
sbb
bound
fwait
ret
data16
imul
xlat
add
adc
std
mov
jle
lds
nop
xchg
mov
rolb
add
mov
enter
fcmove
and
or
jb
les
mov
loope
push
sbb
cmpsl
sti
sti
icebp
shrl
mov
rolb
sub
rcrl
cmpsb
call
or
adcl
and
pushf
pop
rclb
and
mov
xor
nop
testb
pop
sahf
movsl
je
popf
push
fwait
shl
jnp
mov
movsl
mov
adc
xor
movsl
je
lods
nop
jmp
js
call
xchg
bound
jmp
xchg
bound
add
cmp
insb
add
add
testb
incl
ljmp
arpl
movsb
out
jg
add
xchg
add
xor
decl
rorb
pusha
icebp
push
call
and
mull
call
push
leave
lods
cmp
pop
pushl
loopne
or
out
xor
incl
pop
cmpl
add
push
call
adc
pusha
out
mov
pusha
pop
pushl
dec
xchg
mov
pop
pushl
xchg
and
mov
or
mov
ret
sbb
xchg
jne
incl
adc
adcl
inc
outsb
arpl
jne
push
or
mov
lods
mov
cmp
dec
test
rorl
stos
test
and
mov
out
xchg
mov
add
xchg
cld
shl
mov
add
jg
cwtl
call
jg
push
or
adc
shll
incb
popa
pop
dec
cmpsb
push
push
xor
jmp
sbb
jmp
lds
mov
mov
jb
adc
adc
jns
mov
pop
add
imul
std
sbb
cmc
push
mov
in
fmuls
inc
mov
or
xor
lds
and
int3
push
sbb
lods
cli
dec
or
mov
lea
pusha
pop
push
loope
test
jmp
mov
add
gs
jmp
nop
mov
xchg
xchg
nop
mov
xchg
mov
rcl
gs
jmp
nop
mov
jg
nop
mov
mov
jmp
xchg
mov
addr16
lret
mov
not
fwait
mov
jl
cltd
mov
and
mov
xchg
negb
fwait
mov
lock
push
loop
call
leave
std
lcall
pop
cld
imul
sbb
add
or
test
gs
and
ljmp
stos
aas
add
pushl
jge
std
cmp
sahf
jnp
addr16
lock
call
xor
inc
das
std
jmp
jne
jl
cmp
repnz
add
push
lock
out
push
push
fstps
mov
rcrl
add
iret
dec
jmp
pop
ljmp
xchg
sbb
fmulp
addr16
and
mov
dec
out
mov
out
cmp
mov
xlat
mov
jne
imul
adc
movsl
cmp
add
mov
pusha
add
or
lcall
or
lret
adc
adcb
add
jne
mov
cmpsb
lea
adc
icebp
adc
lea
insb
inc
xchg
mov
rcrl
loope
push
mov
pop
add
push
int
mov
jmp
lret
testb
add
add
imul
shll
mov
push
cld
xchg
sbb
push
inc
jecxz
push
mov
adc
inc
add
adc
jmp
inc
xchg
or
xlat
cltd
sub
jae
xchg
adc
sub
mov
sbb
push
bound
push
inc
aas
sub
add
jmp
cmp
call
push
call
mov
inc
jmp
push
adc
es
popf
adc
xlat
and
push
faddl
addr16
jmp
shr
ret
movsb
pop
jmp
aad
add
pop
inc
pushl
inc
jbe
ds
add
bound
add
add
and
cli
inc
aas
inc
out
popa
add
out
cmpsb
push
mov
call
inc
or
or
lret
cmpb
adc
sub
leave
ret
cmpb
adc
aas
inc
outsl
popa
jne
mov
add
hlt
xor
add
lods
adc
add
dec
shr
arpl
movsb
and
add
add
xchg
mov
add
mov
lea
fcoml
arpl
adc
fstpl
leave
aam
add
mov
popf
or
jno
jmp
or
jge
imul
and
and
repnz
mov
stos
addr16
inc
xchg
or
or
iret
repnz
fiadds
inc
or
stc
ljmp
aas
inc
lock
or
fwait
pop
or
mov
jmp
ljmp
fildll
cli
fwait
sti
adc
aad
or
xor
in
incb
jbe
mov
cmpsl
lock
mov
in
and
sbb
test
add
adc
jb
add
test
lock
adc
ljmp
or
in
push
jb
dec
outsb
adc
sti
lcall
dec
mov
adc
scas
jb
lods
xchg
fwait
loop
push
add
xlat
push
push
fwait
pop
inc
jmp
xchg
mov
test
mov
pop
inc
jmp
add
mov
addr16
int3
add
xchg
in
inc
gs
fwait
je
test
or
pop
bound
negb
icebp
add
xchg
or
fs
lcall
fisubl
xchg
imul
or
jg
test
data16
ret
adc
mov
or
cmp
add
jmp
add
add
ret
adc
cwtl
std
or
push
add
jae
add
out
in
add
loope
add
lcall
cmp
inc
inc
xchg
jae
dec
adc
push
push
icebp
mov
fcomps
add
mov
in
add
add
jg
jne
xchg
jecxz
inc
xlat
mov
sub
mov
push
mov
add
ja
add
xor
inc
xlat
mov
or
jle
inc
inc
xchg
fdivs
out
sbb
xchg
test
jae
jae
inc
push
mov
icebp
cmp
xchg
xchg
loopne
call
xchg
in
push
mov
fldt
push
lret
and
jmp
xrelease
or
insb
fistl
push
add
arpl
jbe
xor
inc
pop
cwtl
or
inc
inc
xor
ljmp
fstl
fdivr
and
sub
adc
roll
push
cli
bound
ljmp
outsb
sti
call
or
sti
rorb
xchg
dec
sbb
insl
jno
add
xchg
pop
jno
mov
orb
jno
mov
hlt
or
es
push
cld
push
xchg
test
jecxz
in
lock
push
dec
stos
rcr
sub
add
cmpsb
push
lcall
call
loop
adc
ljmp
or
jecxz
pop
jmp
add
xchg
mov
xchg
xchg
sub
stos
pusha
mov
in
xchg
sub
mov
mov
in
cbtw
mov
sar
xchg
je
jge
stos
add
cwtl
or
dec
arpl
lods
jno
ljmp
pushw
mov
sbbb
jne
mov
nop
cwtl
or
xor
cli
add
pushl
pushf
jae
inc
popf
xchg
incl
add
rorb
mov
inc
in
test
test
in
popa
add
and
inc
rolb
push
shrb
pop
inc
add
jbe
add
pop
xchg
aas
outsb
pop
call
push
xor
inc
add
mov
dec
jo
lea
or
mov
add
mov
xchg
mov
jmp
cmp
mov
mov
add
ret
mov
and
cmp
mov
mov
add
decl
xchg
mov
loope
idiv
cmovbe
xorb
jne
jae
sub
divl
test
rcrb
mov
add
jmp
outsb
mov
rcr
add
pop
push
inc
add
dec
jmp
add
jbe
stos
jmp
jmp
add
or
and
add
bound
cs
push
pop
movhps
add
jmp
push
sbb
call
rclb
push
add
imul
add
add
mov
add
mov
lods
int
jmp
lcall
jmp
xlat
call
dec
jnp
daa
imul
push
inc
ljmp
aas
xchg
mulb
push
les
inc
aas
sub
fs
sub
bound
add
cwtl
and
add
rol
cmp
jmp
jb
inc
sub
bound
cmpsl
and
scas
mov
daa
lock
add
push
sbb
aad
pop
add
imul
cltd
jae
out
pop
add
push
push
xlat
int3
push
add
push
pushl
cmpsb
out
add
adc
add
ret
mov
cmp
enter
std
jmp
mov
add
add
call
jbe
mov
jae
loop
mov
xchg
jnp
out
or
outsb
or
adc
mov
or
push
pop
cmc
mov
xchg
ljmp
hlt
hlt
je
xor
test
cmc
je
add
cmp
dec
jae
xchg
cmc
je
arpl
xchg
cmc
je
jae
xchg
nop
repz
bound
xchg
and
adc
mov
add
dec
xor
or
add
dec
enter
add
lea
outsb
xchg
test
jmp
inc
xchg
xchg
sti
mov
and
pop
test
add
add
jmp
jmp
jmp
sub
xchg
add
mov
nop
sub
jge
nop
sbb
jge
nop
pop
ds
xor
rorl
mov
repz
xchg
xor
xchg
repnz
int
add
aad
xor
add
adc
add
call
jp
js
nop
or
jbe
add
jbe
jb
nop
incb
push
call
test
nop
mov
incb
push
add
xchg
fldl
cmp
fiadds
inc
mov
inc
nop
out
frstor
jo
lret
std
mulb
pcmpgtw
popa
add
add
push
test
add
imul
movsl
bound
jmp
out
bound
lea
outsl
inc
add
std
push
add
mov
add
nop
std
incl
sub
xchg
sub
stos
pop
push
scas
bound
sarb
add
push
call
or
push
add
paddd
test
mov
adc
hlt
push
jmp
ljmp
arpl
push
call
pushl
pushl
xchg
jae
lock
icebp
incb
movsb
mov
jnp
lea
test
mov
xor
in
mov
enter
fwait
push
add
lea
sbb
xchg
adc
adc
adc
cltd
add
mov
sub
dec
add
jle
jnp
or
ja
dec
ja
jle
in
popa
and
test
icebp
mov
insl
icebp
ds
pop
add
scas
jnp
ljmp
jmp
push
jns
pop
jno
sub
xlat
xchg
icebp
clc
mov
nop
dec
jmp
inc
xchg
lea
fisttpl
add
push
add
add
mov
mov
sub
std
loope
loope
push
in
cld
pop
pop
subps
cmp
fcomi
fiaddl
jo
je
push
fldt
adc
in
push
dec
push
loope
push
mov
lock
arpl
sub
sub
popf
xor
jmp
jle
dec
add
jmp
out
inc
bound
mov
aam
scas
jmp
mov
stos
mov
mov
push
adc
lods
add
mov
enter
push
jb
loopne
pop
loope
je
pop
add
sarb
mov
imul
push
mov
mov
add
add
jae
pop
es
das
jl
or
aam
clc
cmpsl
or
jnp
or
call
inc
hlt
inc
insl
aas
inc
jnp
hlt
xlat
fadds
clc
cmpsl
test
add
jl
inc
or
add
mov
jl
mov
std
jne
cmpsl
test
clc
js
sarb
add
pushl
sub
pushl
add
cmp
mov
sub
aas
xchg
jnp
sbbl
add
mov
lock
enter
push
adc
mov
add
mov
add
pop
pusha
inc
add
xor
jnp
mov
into
jne
push
imul
jg
xchg
xchg
je
add
clc
push
mov
sti
jg
pop
ja
pop
jge
inc
lea
add
js
ja
push
ja
outsb
inc
out
push
bound
xor
mov
in
stos
pop
adc
mov
in
icebp
inc
dec
out
cld
adc
fucomp
add
push
lock
hlt
icebp
bound
loopne
cmp
add
icebp
mov
rorb
push
rorb
in
sub
jno
mov
iret
mov
jl
push
jnp
jbe
xchg
adc
mov
ja
cld
call
add
add
push
or
adc
es
enter
xor
pushf
mov
adc
jo
jp
jecxz
ja
imulb
add
jp
addr16
mov
xchg
into
addr16
call
shrl
mov
push
call
cmpsb
ljmp
loopne
call
jo
mov
test
push
jmp
add
bound
jmp
shlb
add
push
push
arpl
repnz
push
add
jo
clc
ljmp
xchg
std
jne
cmpsb
mov
or
stos
pop
jmp
pop
mov
jae
xchg
aam
push
jnp
clc
mov
jnp
inc
xor
rclb
adc
stos
stos
std
jne
jnp
or
push
push
jnp
in
daa
lods
jg
and
adc
std
jne
stos
cmp
pushl
stos
fadds
mov
mov
add
faddp
hlt
xchg
sub
pop
and
cli
out
jmp
fwait
pop
sub
jnp
add
insl
ljmp
jae
push
xchg
jnp
out
mov
inc
add
sub
movsb
xor
sbb
call
test
outsb
in
sub
and
ds
jnp
add
add
fimull
adc
fcoml
or
call
roll
xchg
push
pop
jmp
shlb
jmp
pop
psraw
movl
pop
pushf
jp
jle
test
ret
movsl
ds
outsb
fs
cmpsb
jne
pop
mov
test
icebp
movsl
mov
add
lock
sub
lods
mov
sub
jmp
jmp
lcall
add
cli
test
push
bound
leave
pusha
and
pop
lahf
inc
add
lcall
lock
call
shll
jmp
xchg
cli
clc
aam
push
cs
test
insb
mov
adc
mov
add
bound
push
mov
je
jl
ja
test
sub
test
fsubp
ret
aad
test
inc
lcall
test
jo
xchg
in
jp
inc
jmp
ds
lahf
mov
dec
add
dec
push
add
sbb
inc
add
jl
xor
xchg
imul
std
push
add
xor
inc
add
inc
inc
aas
daa
stc
aas
pop
push
jmp
xchg
dec
mov
lea
cs
call
cmpsb
xchg
jge
jnp
ret
push
mov
ffree
hlt
fnstcw
push
sub
jmp
jnp
mov
lds
scas
pop
add
xchg
jg
test
in
jne,pn
add
add
mov
dec
add
fmul
inc
add
add
inc
xchg
sbb
xor
jae
jecxz
inc
out
mov
inc
add
shr
xlat
mov
xchg
mov
and
mov
jns
adc
ficoml
mov
decl
xchg
idivb
mov
mov
or
repz
in
add
xchg
and
fisubrl
push
sub
inc
xchg
jmp
in
fwait
cmpl
xchg
mov
push
xchg
imul
jmp
add
jnp
inc
xchg
cmp
in
push
inc
dec
subl
inc
xchg
or
and
xchg
bound
mov
xor
add
add
jns
in
adc
mov
push
aad
sahf
mov
loope
scas
rcll
ljmp
xorl
jmp
push
adc
inc
inc
jmp
aam
call
repnz
hlt
sbb
xor
lods
test
call
cmp
std
add
fbld
dec
aad
add
xor
xor
aam
call
repnz
sbb
cmp
lods
sub
push
fimuls
call
rorl
jae
adc
or
add
test
add
ljmp
pushw
adc
or
xor
incl
sub
push
mov
rolb
pop
jle
push
push
fnstsw
inc
outsl
xor
jne
mov
mov
add
inc
das
lock
add
pop
lods
ds
das
cmp
mov
mov
xchg
add
jae
push
xchg
cmp
je
xchg
mov
sarl
loope
xchg
inc
test
add
mov
ret
xlat
loope
movsb
sbb
and
je
std
push
or
pop
incl
nop
add
xor
push
mov
ljmp
aaa
mov
arpl
or
mov
push
rcll
xchg
mov
call
bound
xchg
lea
add
add
and
add
jge
or
push
mov
rorb
roll
loop
add
loopne,pn
mov
xchg
repz
push
fnstsw
fists
clc
jne
loopne
mov
mov
and
jmp
das
popa
mul
jmp
clc
inc
loope
daa
cmp
imul
add
mov
ret
add
movsl
pop
mov
loope
or
add
mov
inc
jmp
std
andl
push
idivb
icebp
mov
test
mov
lcall
int
jge
pusha
push
jle
jmp
mov
xor
xchg
jnp
icebp
jge
mov
push
jbe
pop
inc
add
sar
incb
mov
jmp
pop
js
jmp
popf
mov
mov
inc
add
jmp
fisubl
inc
add
ss
inc
out
xorb
rcrb
add
fsubl
scas
and
inc
add
sbb
call
or
cld
incl
fwait
std
leave
std
push
push
xor
add
add
add
push
push
or
or
pushf
jae
clc
xor
and
add
pop
add
mov
or
mov
push
xchg
dec
add
out
std
jne
push
in
pop
enter
aam
add
insl
add
add
adc
xchg
push
dec
jmp
subl
fs
mov
add
inc
mov
imul
xchg
mov
jmp
jns
jmp
pop
add
in
cs
es
push
cld
outsb
sahf
dec
add
mov
jmp
jae
push
fisubrs
fdivrp
lret
outsl
ljmp
or
pop
or
arpl
and
negl
lock
fimuls
jns
lret
add
xlat
dec
jmp
push
sahf
jns
cld
icebp
pop
popa
fucom
jns
adc
out
add
and
fldl
mov
pop
mov
jns
hlt
test
add
jb
xchg
movsb
hlt
add
in
xchg
adcl
fldl
fucomip
fbstp
mov
mov
loop
pop
xchg
inc
fstp
jns
cmovno
jmp
add
sub
or
xchg
xchg
or
ljmp
decb
lret
push
popa
push
push
outsl
call
sbb
add
xchg
mov
jmp
bound
scas
adc
mov
xchg
mov
jmp
push
bound
xchg
in
lea
sbb
jp
add
dec
data16
xchg
ja
loope
call
dec
jns
add
loop
call
xor
sbb
aas
cmpl
test
cs
jp
icebp
call
or
cs
scas
xchg
dec
out
arpl
test
nop
std
mov
cmovno
ljmp
add
pop
xchg
dec
add
movsb
adc
fwait
std
add
mov
add
loope
sti
add
add
sahf
or
add
mov
out
mov
xchg
mov
cmp
lret
xchg
cmpb
mov
incl
xlat
incb
or
sub
jmp
add
xchg
cmp
cmp
insb
add
insb
add
push
jecxz
mov
xor
adc
inc
xchg
je
jae
rorb
xchg
btc
mov
fnstenv
ja
sub
aad
imul
fisubl
xchg
pop
ficoml
cs
xchg
bound
inc
lock
add
jae
and
and
nop
add
inc
jb
xchg
or
or
out
jbe
ljmp
aam
inc
jmp
xor
mulb
and
dec
xchg
jne
or
bound
xor
mov
pop
add
jmp
negb
pop
inc
xor
pop
test
jbe
mov
jl
lcall
faddl
add
je
outsb
sub
mov
sub
je
inc
mov
add
sbb
aaa
add
push
push
mov
leave
sub
je
loope
loope
jae
or
adc
in
shr
jae
sbb
pushl
or
mov
push
lcall
mov
mov
popf
mov
bound
bound
add
imul
sbb
cli
call
pop
clc
das
push
mov
lcall
fstps
lea
js
adc
add
add
adc
outsl
std
lea
sub
clc
mov
mov
sub
ret
push
mov
add
ffree
clc
stc
mov
push
xor
or
int
cmp
mov
push
test
add
aaa
sbb
push
jbe
shl
add
xchg
mov
add
aad
popa
lock
mov
adc
decb
push
std
cmp
push
mov
mov
jbe
cwtl
sti
sbb
adc
push
incl
pop
xlat
incb
add
mov
je
and
outsl
neg
xchg
aad
movsb
mov
fs
leave
aam
add
popf
add
xchg
bound
or
jmp
pop
movsl
faddl
subl
fstpl
xor
fsubr
cmc
loopne
lods
fwait
outsl
dec
push
loop
cltd
mov
lods
scas
in
out
add
cmpsl
jae
into
push
clc
sbb
jns
testb
dec
stos
inc
xchg
fbld
dec
xchg
bound
popf
fildll
mov
fisubl
fcomp
and
xchg
addr16
ljmp
mov
dec
add
push
bound
gs
bound
push
pop
lea
and
adc
mov
arpl
and
fiadds
add
cmp
xor
jge
add
in
decb
mov
jmp
rcrl
call
std
fs
jmp
fisubl
lods
and
es
pop
sahf
mov
les
xchg
bound
add
xor
add
add
lea
xor
rclb
adc
scas
or
jnp
cmpl
je
cld
sbb
add
mov
push
movl
aaa
xchg
jae
shlb
mov
add
xchg
jo
mov
add
sbb
shr
dec
sbb
rorb
mov
insb
scas
lea
add
and
or
and
inc
push
jns
mov
mov
xchg
jns
mov
jle
and
dec
mov
in
xchg
jno
test
add
mov
add
shll
add
xchg
jns
inc
push
add
xchg
dec
dec
int3
xchg
jns
add
testb
add
dec
shlb
add
mov
push
mov
dec
cld
push
int3
xchg
out
inc
andl
je
bound
push
and
rolb
ror
jmp
imul
and
and
clc
mov
add
xchg
js
test
jnp
cmp
arpl
sti
pop
clc
inc
fistpl
add
rol
push
xor
sbb
ss
and
sti
dec
mov
or
aad
mov
inc
xchg
bound
xchg
bound
call
cmp
inc
jmp
jl
subl
div
push
shrb
shrl
jmp
aam
add
adc
call
add
xchg
loope
sti
pushf
and
jmp
xchg
sub
insl
jmp
lcall
mov
jge
and
ds
sub
ficoms
mov
call
xchg
pop
test
bound
push
outsb
call
pusha
mov
xchg
mov
and
jmp
lea
add
or
jle
call
ror
in
add
and
push
clc
and
mov
ljmp
lea
xor
test
add
and
push
xchg
lea
das
call
xor
jb
lods
sbb
add
cmp
or
push
jmp
addr16
jne
xchg
jae
test
or
jge
out
cmp
clc
add
icebp
shlb
xchg
inc
xchg
jns
decl
add
clc
push
clc
xchg
adc
std
test
pushf
into
mov
sar
adc
inc
xchg
push
mov
mov
jns
das
orl
pop
sarb
rolb
jns
sub
jmp
inc
xchg
xchg
movsl
inc
xlat
jns
in
adc
test
sub
mov
mov
and
add
popa
test
xchg
popa
push
lock
pop
push
add
adc
into
stos
jl
inc
xchg
in
dec
xchg
ja
cmpb
call
into
and
pop
mov
lret
cwtl
push
cmp
imul
jno
mov
jo
sti
sti
jno
jg
add
pusha
push
iret
pop
lock
in
gs
pop
movsl
in
jmp
inc
adcb
ss
call
jmp
ss
bound
push
bound
pushf
mov
shl
xchg
out
scas
push
mov
pop
xchg
push
imul
jmp
pop
pop
jmp
cmp
add
jecxz
outsb
cmp
xchg
loop
stc
mov
add
or
popw
ja
adc
pop
jmp
sahf
mov
shl
es
pop
sub
xor
dec
sub
inc
in
aas
jl
add
pop
add
stos
rorb
movsl
fiadds
mov
mov
xor
clc
decl
insl
lea
lahf
inc
hlt
out
add
insb
pop
adc
add
add
inc
lock
add
or
push
or
lea
dec
dec
jb
inc
scas
imul
mov
pop
or
cwtl
mov
ljmp
insl
xchg
mov
jne
out
push
out
xchg
mov
add
xchg
les
pop
dec
cmp
ljmp
pop
jo
roll
add
ds
addr16
cltd
add
sbb
jmp
jns
add
js
inc
into
adc
xchg
jns
movsb
inc
nop
lret
lea
jbe
add
sub
decb
aaa
aam
xchg
pop
add
jle
push
incl
jns
add
loopne
inc
outsb
push
add
xchg
jns
jo
clc
lret
bound
add
lret
aam
and
lret
inc
jnp
jmp
push
xchg
in
inc
push
bound
push
push
jp
aas
xchg
bound
lea
repz
stos
inc
xchg
addr16
stc
clc
movsb
add
in
fcomps
and
add
in
fcomp
arpl
jmp
lret
push
aas
push
and
lret
rolb
jmp
push
xchg
cli
pop
inc
add
xlat
bound
aas
xchg
bound
lea
repz
idiv
sub
push
imul
and
data16
aam
gs
andb
push
in
ss
push
loopne
xchg
gs
int3
out
or
cmpsb
xor
test
jp
xchg
fsubl
cmp
std
dec
outsb
jl
fs
stos
and
shll
repnz
fidivrs
add
out
out
xchg
xor
sub
mov
sti
jmp
pop
fs
mov
add
sbb
inc
shr
and
in
inc
insl
std
xor
out
je
enter
mov
in
add
popa
cmpl
je
insb
sbb
mov
inc
add
mov
pushl
xchg
fcomps
lea
mov
pusha
je
cmp
push
fcoms
shr
popf
fwait
std
jmp
enter
push
jmp
pop
leave
imul
int3
jmp
dec
int
je
loope
insb
inc
std
je
add
push
ljmp
adc
and
fidivrl
enter
enter
dec
or
aam
push
clc
inc
int3
xchg
int
andb
je
lock
je
popa
and
jl
or
lds
out
insb
test
xchg
subb
je
mov
je
bound
ljmp
ljmp
add
add
arpl
lret
sub
arpl
lret
xor
arpl
stos
addb
arpl
stos
xchg
cmpsb
arpl
or
mov
adc
xchg
add
data16
and
std
mov
sbb
push
or
in
bound
add
jp
inc
xchg
ret
add
mov
bound
cmpsb
pop
add
xchg
lds
popa
push
jmp
lcall
jne
out
cmpl
sbb
clc
data16
jmp
loop
add
popa
jmp
xchg
popa
je
in
mov
mov
jle
lock
fsubs
mov
fsubr
adcl
pusha
adc
sar
testb
inc
cmpsb
lock
pop
inc
inc
sub
pusha
cltd
xchg
daa
sub
daa
decl
inc
jecxz
in
dec
daa
incl
fwait
mov
dec
hlt
loope
notl
daa
pushl
loopne
jmp
mov
pop
arpl
add
movl
aam
decl
shl
jmp
mov
add
pushl
sub
jl
jmp
je
daa
mov
enter
jecxz
std
pushl
and
call
das
lds
fdivrp
xchg
and
mov
and
outsb
adc
or
clc
jg
imul
inc
add
jbe
jmp
push
imul
add
push
fimull
ret
mov
mov
iret
aam
add
mov
mov
les
push
insb
stc
mov
mov
int3
mov
add
je
jno
push
pop
js
ret
dec
outsb
bound
add
sahf
sub
push
bound
xchg
and
push
movsb
sub
dec
faddl
loop
add
fisubl
add
add
lret
jns
add
pop
aad
stos
xchg
jle
xor
jmp
cmp
pop
imul
sbb
and
jb
addr16
ret
subb
insb
pop
das
arpl
sub
xchg
mov
mov
adc
movsb
xchg
out
pop
pop
call
bound
xorl
add
or
jmp
jb
xor
adc
xor
pop
je
cmp
loope
loopne
addr16
and
dec
inc
sbb
jle
imul
or
jmp
xchg
andl
pop
mov
and
icebp
sbb
ljmp
pop
push
inc
shll
add
mov
inc
adc
mov
add
in
or
mov
in
add
sub
test
push
and
clc
mov
pop
leave
in
jb
push
add
add
roll
pop
fwait
push
sub
sub
adc
xor
call
movsl
clc
lea
dec
call
test
adc
push
insl
std
jne
and
xlat
leave
incw
add
outsl
rorb
enter
and
enter
inc
sbb
decl
xchg
pop
adc
rcr
adc
mov
push
push
lods
jae
xchg
mov
hlt
test
dec
or
addr16
dec
push
decl
inc
stos
mov
or
jmp
shll
addr16
cmc
mov
sti
incl
add
inc
lods
inc
pop
xchg
inc
xchg
enter
les
adc
mov
or
jno
sar
push
ret
mov
push
add
mov
jns
bound
shr
sbb
lcall
lods
xchg
fistpll
insl
lods
mov
pusha
dec
mov
mov
cmpsb
repz
xchg
pop
call
add
add
fldl
js
and
pop
and
add
out
push
or
push
lods
ror
xchg
xchg
jmp
mov
lcall
mov
mov
pop
xor
pop
jae
stos
jmp
add
xchg
mov
push
jb
loopne
sbb
xchg
bound
jmp
add
dec
outsb
call
aam
jnp
xchg
aad
ficomps
push
outsl
bound
cmp
dec
sub
xchg
bound
or
iret
adc
mov
push
adc
int3
add
sahf
out
jge
dec
data16
pop
call
push
data16
xor
je
fmul
or
sar
push
out
cld
rcrb
add
add
mov
icebp
sbb
incl
in
or
lcall
rclb
inc
xchg
adc
mov
or
jmp
adc
add
mov
jne
inc
xchg
or
inc
cmp
decl
push
inc
and
jmp
lods
cltd
or
add
sub
jne
mov
decl
call
decb
add
xchg
mov
add
dec
aaa
and
or
xor
fldcw
adc
dec
sub
cmp
stos
stos
rclb
push
dec
add
adc
imul
and
adc
sub
add
dec
sub
outsb
enter
and
add
add
push
aaa
sbb
xchg
call
add
ret
xor
popl
lods
arpl
leave
mov
add
int
les
jmp
ss
int3
out
xchg
in
mov
call
push
call
ss
sbb
add
push
call
ss
sbb
add
add
data16
jmp
mov
or
stos
mov
mov
lds
mov
mov
pop
xchg
cmpsb
push
cmc
scas
cmp
add
int
andl
push
je
dec
into
clc
inc
jecxz
incb
into
clc
push
std
enter
bound
jmp
lahf
or
add
inc
imul
push
jnp
xchg
bound
mov
inc
std
sbb
hlt
fadd
dec
jmp
pusha
pop
push
mov
iret
clc
mov
mov
scas
cmpsb
outsb
push
sbb
hlt
sahf
cmpsb
pop
jmp
mov
xchg
call
pop
add
aas
add
add
popw
push
add
in
push
add
jl
or
loop
pop
leave
lods
push
decb
test
out
sbb
xorl
out
pushl
push
test
xchg
add
and
jmp
push
lret
in
nop
sub
adc
inc
arpl
jge
jl
outsl
test
mov
ljmp
data16
sbb
dec
or
add
push
dec
add
out
add
insb
push
mov
cmp
ljmp
dec
add
or
dec
add
xchg
enter
or
cld
pop
leave
aam
add
imul
jbe
mov
cmc
or
adc
leave
aam
add
mov
arpl
dec
add
xchg
mov
in
inc
into
ds
inc
xor
or
mov
in
add
or
jl
dec
cs
imull
pop
dec
arpl
test
sahf
jg
lret
add
std
or
push
pop
pop
and
add
popa
mov
cs
pop
mov
add
add
insb
ds
fs
cs
mov
xchg
movsb
stos
inc
pop
loop
inc
jb
add
mov
push
ret
ret
dec
mov
lds
push
and
lods
mov
in
add
xor
cmp
jno
add
adc
hlt
jmp
push
cmp
or
loopne
stos
mov
add
push
jne
add
add
xchg
out
fld1
int
jbe
out
inc
add
dec
ljmp
add
cmpsl
push
ljmp
inc
add
xchg
bound
lods
stc
mov
call
repnz
or
outsl
dec
add
fistpll
xchg
int
push
inc
add
push
je
sub
sbb
jne
daa
and
pushl
repz
sub
xchg
mov
mov
mov
jl
aas
addb
add
and
je
faddl
xchg
fmull
push
sbb
call
add
out
gs
pop
cmpsb
and
add
fucomp
cmpl
add
int
add
popa
add
add
shlb
adc
fcmovbe
arpl
fiadds
data16
jne
pop
jne
xchg
and
pop
andl
das
or
cmp
imul
mov
pop
outsb
adc
lret
push
stos
dec
mov
mov
fcmovnu
mov
mov
sub
ljmp
fsubrs
call
pop
push
mov
je
mov
mov
mov
and
loope
cmp
je
mov
push
addl
jae
xor
pop
fistpll
idivl
lods
cmp
add
fildll
pop
and
lret
incb
popa
mov
or
loop
mov
fisubl
icebp
out
xchg
cmp
sbb
push
popa
ds
jl
test
dec
std
rdtsc
out
stos
sbb
jbe
or
jae
xchg
or
clc
xchg
dec
fisubrl
leave
aam
stc
aad
stos
xlat
enter
and
sbbb
add
add
or
add
pop
push
xchg
add
add
sub
scas
dec
je
sub
fiaddl
cwtl
std
cmp
dec
je
or
fmull
adc
je
sub
shrb
and
jle
jbe
cld
loope
je
in
or
dec
pop
add
or
je
inc
hlt
inc
dec
enter
push
pop
xor
jb
scas
lock
mov
add
sbb
pushf
rorl
sbb
adc
sarb
std
jne
ljmp
enter
outsl
out
cmp
outsl
bound
test
add
xchg
adc
and
bound
mov
fs
lock
xchg
push
jmp
adc
push
adc
test
or
int3
or
incl
jae
push
jp
incl
add
jge
add
fwait
popa
add
inc
lcall
xchg
je
or
rolb
adc
push
ss
scas
mov
call
stc
sbb
subl
add
add
cmp
call
jbe
fst
pop
cld
add
xchg
in
mov
ds
jnp
ss
inc
in
insl
jle
jbe
lock
inc
rolb
xchg
mov
cltd
add
stos
add
rcll
cltd
cmp
xor
xchg
rolb
popa
pushf
pop
leave
or
fistps
add
pushf
and
test
divb
push
ja
jp
jae,pn
adc
scas
push
les
bound
dec
cmp
mov
loopne
aam
sar
test
sub
aaa
mov
lahf
mov
pop
jle
mov
or
fwait
xchg
inc
addr16
xchg
stos
nop
loopne
mov
dec
dec
ss
add
add
dec
addb
bound
jmp
xchg
mov
adc
sbb
std
jl
inc
cmp
xchg
bound
sub
pop
and
add
addb
sub
aad
add
scas
pop
push
rcrl
or
sbb
icebp
xchg
dec
xor
jmp
aad
xchg
call
add
add
dec
loop
add
push
and
jmp
xchg
dec
je
sbb
push
rolb
dec
pushl
lret
add
leave
movsl
add
lahf
aas
add
or
pop
dec
pushl
or
mov
pushw
inc
out
pop
std
jne
out
xchg
xor
ljmp
xchg
fstps
add
addb
or
add
mov
mov
mov
pop
std
jne
out
xorl
or
sub
pop
out
add
outsl
int
mov
dec
jmp
sbb
cmp
ljmp
inc
xchg
cwtl
cmp
sbb
jmp
push
ret
lock
leave
aam
add
push
sub
jae
mov
cmpb
jg
add
or
adc
add
fwait
mov
les
mov
test
xchg
cmpsb
leave
fistl
add
inc
pop
cmp
add
test
ret
out
jne
call
add
mov
cmp
add
roll
add
and
jecxz
sahf
push
add
out
test
mov
cltd
nop
and
add
add
gs
in
mov
push
jns
pop
adc
push
mov
ss
add
popa
jno
xchg
inc
push
mov
imul
ss
and
add
pop
xchg
loope
xchg
ss
push
jl,pt
lods
and
nop
cmpsl
add
dec
and
data16
pop
dec
inc
imul
iret
hlt
mov
pop
incb
test
add
scas
push
push
outsb
add
int3
mov
pop
cmpsl
fsubl
adc
push
sahf
adc
cwtl
data16
push
orl
lcall
add
push
andl
dec
push
je
dec
push
insb
add
xlat
inc
push
xchg
daa
xchg
inc
je
aas
jmp
clc
cwtl
sti
mov
scas
mov
scas
mov
scas
std
xor
dec
xchg
adc
adc
ljmp
fcoml
mov
in
js
mov
std
jne
ljmp
xchg
lret
inc
aam
xchg
fmull
scas
pop
add
jg
inc
int3
mov
push
jg
add
inc
jo
inc
outsl
inc
mov
add
fnstsw
dec
addb
bound
mov
xchg
cmp
add
shll
rcrb
out
add
mov
in
es
leave
imul
mov
xchg
sti
sbb
add
adc
mov
incl
add
jae
pusha
cltd
inc
jp
pop
dec
cs
mov
mov
fcomip
and
addr16
ja
add
idiv
popa
imul
add
or
sbb
jle
inc
xchg
cmp
imulb
inc
cmp
sahf
sub
iret
scas
pushf
cmpsl
mov
add
jbe
inc
xchg
cmp
mov
add
into
das
pushf
jecxz
out
popf
and
cwtl
add
divl
inc
fnstsw
mov
addps
inc
ljmp
addb
das
inc
test
jo
mov
rol
test
ds
cmp
cmp
or
inc
sbb
cmp
or
inc
pop
aaa
in
and
jmp
add
fnstcw
cmp
pop
or
jmp
sbbb
mov
test
and
cs
cmpb
jmp
js
imul
push
jmp
repnz
andl
bound
fs
rorb
xlat
inc
push
push
lcall
into
cmp
jnp
push
pop
or
add
add
pop
add
add
aas
add
dec
xor
aas
dec
mov
ljmp
lret
jg
inc
clc
scas
leave
inc
cld
scas
push
call
adc
std
push
jp
std
out
movl
leave
inc
hlt
das
lret
pop
lret
ljmp
decl
outsl
call
adcl
add
add
incl
add
arpl
or
call
add
add
cmpsl
pop
jg
out
jmp
add
mov
inc
xchg
loopne
sub
dec
cmpsl
jae
int3
call
incl
mov
imul
or
inc
stos
fnstenv
setbe
jp
adc
add
lcall
into
inc
lock
pop
xor
scas
cmp
cltd
xor
je
jb
pop
xchg
in
push
or
mov
dec
xlat
inc
imul
ret
scas
aas
inc
arpl
add
inc
xor
movsl
xor
xor
mov
fcomp
sub
mov
test
stc
add
cmp
jmp
add
mov
fcoms
sub
cld
leave
add
bound
xchg
es
sahf
dec
in
dec
test
mov
andb
or
imul
loope
in
inc
aad
aas
je
or
in
call
xchg
mov
push
dec
add
shlb
add
push
sahf
js
call
loop
mov
push
dec
add
or
add
push
data16
pop
aas
push
xorb
mov
sub
or
or
dec
cmpsb
in
cltd
repnz
adc
cmp
pushf
mov
mov
add
ret
mov
xchg
std
jne
js
cmp
add
repnz
je
push
mov
lea
dec
push
add
push
adcl
rolb
add
pop
repz
decl
out
add
pop
push
orl
je
dec
mov
mov
jp
in
push
aad
pushl
or
mov
lds
add
mov
pop
or
add
xchg
in
cltd
add
jmp
mov
call
jno
mov
dec
leave
adc
or
adc
lret
xor
std
inc
cmc
push
rol
mov
push
sub
int3
rcll
sbb
clc
and
or
ret
mov
adc
lret
pusha
icebp
les
push
loope
cli
incb
add
xor
dec
xor
out
xlat
mov
decl
jb
xor
mov
lret
push
bound
sbb
imul
cmpb
pusha
stc
fildll
inc
xchg
cmp
pop
mov
mov
xchg
dec
jle
sub
fldt
loopne,pt
mov
sub
jle
add
mov
add
outsl
mov
sub
jae
push
bound
mov
or
leave
cmp
sub
bound
inc
xor
fwait
stos
push
std
pushf
cltd
enter
push
aam
cmp
and
add
lret
arpl
pop
out
jmp
cmp
scas
std
movb
idivb
mov
pushf
cwtl
std
scas
pop
and
push
cmp
imul
mov
cmp
inc
sub
popf
dec
sbb
aam
cmp
pop
dec
imulb
ret
add
out
clc
aad
push
adcb
js
jmp
movsb
cld
push
mov
add
incl
add
mov
aas
add
sub
or
pop
cmp
mov
pop
in
mov
aas
fdivl
pop
or
lahf
pop
std
call
xchg
add
pushf
gs
lods
movsl
add
ljmp
jg
jne
xchg
lods
dec
jb
popf
incb
popf
je
xchg
pop
pop
add
mov
dec
cmp
sub
sub
div
sahf
pop
pop
sahf
addr16
incl
mov
call
imul
lahf
enter
push
sbb
xchg
add
xor
or
cmp
ljmp
mov
cld
scas
int3
inc
inc
xchg
rcrb
or
clc
fwait
decb
loope
cld
add
or
pop
push
popf
incb
add
or
jb
adc
pop
sub
push
sahf
popa
cmp
pop
rclb
sub
popf
stos
cmp
sahf
sub
pop
sbb
cmp
rcll
and
jo
fildll
push
lahf
fldt
sahf
sub
scas
fildll
inc
scas
mov
fwait
leave
cmp
add
add
out
or
dec
push
cmp
test
insb
push
mov
add
adc
push
outsb
adcl
push
and
incb
popf
std
dec
frstor
or
push
xor
xchg
int3
aaa
subl
jo
ss
fmull
add
lret
aam
push
add
xchg
jmp
add
stos
dec
fildl
cmp
test
sub
je
outsl
pop
std
xor
dec
xchg
or
sbb
mov
and
cmp
xchg
test
imul
scas
or
daa
mov
js
mov
mov
or
js
or
ret
xor
repnz
loop
call
call
push
jns
jnp
mov
add
add
ljmp
jne
je
cmpsl
cmp
push
arpl
dec
cld
pop
ljmp
shlb
inc
outsb
pop
push
call
cmp
clc
add
cltd
enter
push
or
dec
add
je
loope
push
loope
mov
xlat
dec
add
jle
add
fldl
xchg
shrb
or
in
aad
scas
jge
lcall
ret
mov
cltd
imul
adc
cld
daa
fwait
je
adc
je
mov
stos
imul
inc
and
sti
or
and
lcall
xchg
adc
add
ss
fwait
clc
xchg
mov
xchg
bound
std
loope
xchg
dec
enter
xor
mov
xchg
or
mov
push
bound
mov
cmpsl
sub
sahf
test
dec
dec
mov
ret
add
ret
mov
jl
leave
lret
xor
out
popa
scas
out
stos
divb
cltd
dec
ss
add
xor
cltd
cmp
mov
cwtl
scas
add
xchg
push
fwait
fs
add
push
cmp
les
xchg
jmp
shrb
add
xor
bound
std
jle
jmp
pop
scas
clc
push
fs
std
ss
cmp
pushf
add
std
push
mov
call
je
add
enter
lret
nop
ss
cld
jbe
or
jmp
les
push
aad
push
inc
das
outsb
adc
stos
into
in
lahf
fsin
mov
cmpsl
std
jne
or
pop
jo
mov
fidivl
lea
push
fidivl
fs
incl
add
iret
in
push
or
sbb
pop
in
mov
push
std
call
sti
jne
pop
pop
push
pusha
lret
jne
or
outsl
push
sti
dec
xchg
or
mov
or
nop
inc
xor
pop
and
rorl
decb
ret
push
movsb
inc
push
dec
xor
add
inc
dec
xchg
incb
inc
mov
xchg
movsb
push
rolb
add
invd
scas
adc
pushl
imul
cltd
jnp
rorb
sub
sar
add
xor
sub
cld
add
cmp
inc
xchg
bound
xchg
lret
ror
xor
stos
dec
and
lret
adcb
add
add
aam
adc
jno
or
jg
stc
xor
or
enter
mov
dec
aaa
shll
pop
xchg
inc
cs
adc
xor
rcll
mov
xchg
cwtl
pop
daa
btcl
stos
and
out
xor
add
movsl
xor
add
dec
nop
and
enter
push
out
jecxz
lds
cld
add
std
scas
or
xor
sti
std
xchg
sub
call
adc
das
je
sub
xor
mov
push
rcll
jmp
cmp
xchg
mov
call
jo
add
cs
fdivrl
jmp
mov
movsl
add
mov
add
shlb
aad
or
pop
and
das
pop
mov
add
pusha
clc
jmp
call
pushl
aad
cld
fsubl
mov
repnz
or
jne
je
push
jb
fcomps
add
add
out
loope
aad
push
pop
pusha
or
push
jb
pushl
jo
mov
jecxz
add
outsb
push
add
popa
inc
sub
adc
decb
jle
addr16
cmp
inc
xchg
and
clc
xor
out
movsb
xchg
and
out
push
xchg
adc
mov
add
add
int3
push
adcl
addr16
xchg
inc
inc
xchg
rclb
mov
adc
push
cs
inc
xchg
test
das
jg
add
dec
rclb
imul
test
add
xlat
bound
iret
into
sub
addb
ret
movsb
inc
xchg
mov
jno
sub
add
test
xchg
xor
sub
sbb
sub
xchg
mov
cmpsb
fdivrs
xor
and
adc
jnp
bound
sti
inc
adc
outsb
iret
add
cmp
aas
aaa
fs
inc
sbb
sub
mov
inc
mov
xchg
and
loope
push
push
add
add
je
add
call
xchg
mov
ds
fisubrs
sub
jmp
mov
popa
sub
sbb
inc
out
cmp
sub
mov
jae
subb
sub
push
outsb
daa
fiaddl
test
push
popf
add
add
xchg
loop
add
add
js
jmp
add
rorl
shrb
dec
push
pop
movb
std
jne
enter
shl
sbb
lret
jne
enter
ror
ret
push
mov
out
cld
mov
outsb
shll
pop
push
incl
inc
cld
test
sub
push
inc
push
mov
jnp
add
out
pop
or
fildl
call
les
jb
incl
add
push
inc
add
push
or
mov
lea
push
ret
orl
jno
jecxz
lcall
ja
add
rcrb
xchg
popl
ret
inc
lcall
and
inc
add
add
xor
je
mov
aaa
call
stc
sbb
dec
loope
pop
jmp
inc
xor
cmp
inc
xchg
bound
out
sub
pop
xchg
dec
lods
outsb
daa
dec
mov
sti
out
push
or
ret
fistpll
sbb
bound
sarl
jg
add
fisubl
out
fwait
ss
fimuls
xor
mov
sub
cltd
pusha
sub
sahf
cmp
aaa
bound
push
imul
add
sub
scas
or
xchg
std
pop
push
es
je
xor
jle
call
loop
add
xor
add
mov
scas
pop
push
jle
std
je
inc
daa
cltd
and
je
sub
scas
or
js
std
mov
lock
out
push
adc
ret
in
xchg
and
inc
cmpsb
test
sub
pusha
pop
es
bound
in
sahf
aas
add
outsl
push
cmp
or
add
jecxz
mov
inc
dec
inc
fs
jne
fbld
jecxz
pushl
movb
mov
sbb
add
fs
leave
dec
add
dec
or
daa
dec
std
incl
xlat
je
xchg
sub
je
pop
push
or
mov
std
push
and
add
xlat
add
std
jne
lret
sub
xlat
mov
add
dec
add
xchg
loopne
addr16
inc
add
inc
inc
xchg
test
or
mov
cli
out
jmp
add
sbb
sbb
xchg
cwtl
dec
decb
inc
lcall
lea
addr16
jno
mov
push
or
cmp
pop
sub
push
cmpsb
cmc
inc
inc
lcall
jle
add
add
xchg
out
pop
add
stc
pcmpgtw
and
and
popa
pcmpgtd
out
push
jg
mov
out
and
jno
cmpsb
daa
std
repz
add
inc
outsb
jo
mov
call
adc
es
adc
jg
mov
mov
fwait
sub
push
dec
push
adc
es
movsl
bound
jecxz
sbb
andl
enter
add
scas
cmp
push
bound
xor
xchg
bound
jmp
xchg
bound
pop
push
es
je
sub
lcall
aam
ja
jmp
sbb
or
add
sbb
jb
sbb
mov
sbb
sbb
cmpsl
inc
std
lahf
jge
ja
sbb
or
aas
daa
decb
scas
and
add
jge
loope
jmp
push
and
mov
aaa
in
and
add
clc
add
pusha
add
mov
pusha
std
jne
test
cld
push
inc
add
add
inc
add
lret
jne
inc
add
enter
pusha
or
lret
adc
push
jl
call
inc
clc
testb
jg
std
jne
fnstenv
push
or
outsl
inc
add
fnstcw
pushl
seto
call
js
clc
add
pusha
add
sbb
clc
call
and
jae
dec
xchg
sahf
adc
add
shrb
imul
in
mov
add
and
dec
leave
lods
jp
lret
incl
xor
xchg
ljmp
pop
cmp
rcrl
leave
mov
sbb
ja
jmp
mov
sbbb
push
adc
cmp
jne
cld
daa
leave
push
xor
shrl
xor
lret
add
out
pushf
and
jg
popa
out
pop
movsl
lret
add
push
out
adc
call
mov
lods
scas
pushf
cmp
and
adcb
mov
pop
mov
ja
push
popf
jnp
inc
adc
cmp
mov
cmp
xchg
and
inc
add
xchg
or
js
jno
jp
pushf
xchg
imul
sbb
call
add
and
gs
and
jmp
and
add
pushf
xchg
call
cwtl
xor
cmp
cmpsl
push
lock
sub
xchg
insb
adcb
pop
jne
adc
mov
or
add
cmc
or
xchg
pop
pusha
pop
ds
aam
lock
dec
push
cmpsb
fsubr
xchg
bound
fs
ss
ret
xchg
mov
xchg
xchg
mov
xchg
xchg
out
inc
xor
cmp
jb
mov
or
jne
call
in
ret
jne
std
mov
jne
xchg
and
fs
jne
std
ja
sub
jne
add
outsl
dec
or
jne
addr16
or
mov
push
call
pop
test
dec
mov
cmp
cli
push
jp
inc
sbb
cmp
call
pop
std
enter
xlat
mov
mov
notl
or
out
adc
sbb
or
dec
add
out
pop
cmp
add
mov
stos
add
enter
push
sbb
sbbl
je
icebp
fmuls
add
loop
dec
scas
dec
add
xchg
or
push
ds
cmp
sbbb
cmp
pop
inc
push
or
add
mov
push
sbbl
push
sub
xlat
bound
or
pop
pop
fwait
imull
daa
dec
cmp
out
andl
pop
or
pop
pop
or
sbb
mov
xchg
bound
in
loopne
push
add
scas
xchg
pop
push
cmp
lea
movsb
and
inc
mov
bound
add
out
cmp
roll
sub
roll
add
movsl
push
aam
call
cwtl
orb
add
jg
jmp
repnz
add
loop
add
insl
ret
sub
mov
scas
mov
daa
out
notb
dec
ficoms
add
sbb
rcrl
sbb
jne
sub
sbb
cmpsb
out
imul
pusha
push
testb
add
add
jae
aas
jmp
adc
hlt
mov
sbb
push
stos
sbb
add
rcr
jmp
jne
mov
push
shl
test
ljmp
sti
daa
inc
add
jecxz
jne
mov
ror
cmpl
scas
repz
add
dec
jecxz
push
out
dec
incl
adc
aas
sbb
pop
pop
dec
incl
stos
test
clc
loop
adc
mov
data16
mov
fwait
incl
or
ret
xor
jmp
in
notl
and
inc
xlat
or
jns
or
pop
push
mulb
cmpl
xchg
add
fadd
ret
iret
jne
xor
imulb
add
orl
xchg
xor
mov
incl
aam
xchg
jge
xchg
jno
fnstcw
call
leave
pop
imul
mov
inc
dec
mov
xorb
aad
scas
fisubl
ja
aad
js
sbb
testb
xchg
or
mov
adc
andb
imul
sub
sbb
negb
sbb
mov
adc
jg
xchg
out
imul
scas
ja
sbb
xchg
jg
or
shl
sbb
jg
nop
sub
sbb
enter
xor
xchg
ja
sbb
addl
add
cmpsb
std
outsb
sub
in
pop
and
aam
sbb
pop
cld
dec
or
mov
or
push
mov
sahf
clc
inc
int3
push
es
cld
adc
js
jmp
outsb
in
in
push
add
push
adc
mov
jo
std
pushf
and
loop
jnp
cltd
pop
mov
sbb
xchg
bound
pop
cltd
and
bound
jmp
dec
orl
mov
dec
call
cmp
or
repnz
in
or
std
jne
fisttpl
cwtl
or
inc
jno
push
sets
ret
js
stos
dec
test
decb
in
clc
das
sbb
pushl
add
addl
repz
add
pop
pushl
mov
inc
fildl
std
xor
cmp
push
call
xchg
add
adc
mov
fldt
inc
xchg
mov
pop
scas
jno
cltd
xor
add
mov
jnp
jp
cmc
pop
jle
int3
imul
jmp
add
jecxz
push
push
leave
cmp
push
sub
sbb
add
xchg
mov
fcmovb
dec
add
cltd
jge
add
addr16
add
andl
out
sbb
call
test
mov
pusha
add
dec
sub
imul
addb
rcl
add
xchg
out
adc
out
adc
bound
sub
dec
jecxz
jnp
push
out
and
std
pop
imul
icebp
xchg
or
add
jmp
in
sbb
add
cmpsb
hlt
loop
push
add
add
mov
pop
ss
jae
add
mov
pop
jmp
mov
ljmp
or
cld
adc
lods
add
mov
ss
addr16
adc
aas
jmp
mov
and
insb
push
push
jmp
mov
movsl
push
sub
push
fisubs
imul
add
add
popa
mov
xor
jne
cwtl
je
xor
cs
pop
or
stos
push
lea
xor
xchg
pop
push
movsl
pop
std
jne
cltd
adc
rcrl
decb
out
add
in
inc
cwtl
decb
iret
xor
jne
pop
imul
adc
mov
add
loope
je
xchg
push
inc
incl
add
adc
ljmp
xchg
mov
fwait
je
xchg
and
inc
add
je
xor
repnz
or
push
mov
mov
push
or
loop
dec
mov
xchg
vunpckhps
outsb
call
jnp
mov
mov
imul
or
add
jb
in
pop
jle
ret
in
enter
push
sbb
jne
adc
add
inc
xchg
popa
sti
sbb
bound
out
push
sbb
add
adc
add
mov
in
loope
and
dec
in
outsl
enter
enter
dec
push
add
out
mov
push
add
popa
out
sarl
jle
stos
js
mov
push
adc
push
jo
adc
js
jmp
das
imul
es
bound
js
ss
js
adc
imul
add
test
adc
push
lcall
pushf
pop
or
into
orl
popa
fstl
pusha
add
pop
pop
imulb
pop
pushf
aas
jmp
dec
adc
aam
dec
aas
jmp
and
addl
mov
xchg
out
sbb
push
or
add
out
pop
adc
jo
push
divb
jmp
test
fcoml
rcll
faddl
dec
dec
add
cmp
testl
add
cltd
std
jae
std
fcom
jne
jge
inc
enter
das
cmp
call
sub
jmp
jne
jge
inc
sub
lcall
adc
call
sub
loope
sub
mov
mov
cmp
enter
or
ljmp
cwtl
jne
jge
incb
add
mov
cmp
xchg
arpl
mov
adc
fwait
mov
jmp
add
inc
jae
or
insb
testb
insl
mov
je
sub
insb
jmp
xlat
jae
not
jae
mov
out
mov
mov
test
add
outsb
xchg
adc
xor
incb
add
adc
fidivrl
in
mov
mov
push
pusha
pop
jae
jecxz
jae
sahf
bound
mov
nopl
addr16
or
push
and
inc
filds
xchg
pop
daa
out
xchg
sbb
or
jne
add
sbb
jl
xchg
mov
je
cmpsb
stos
je
push
cmpsl
out
rorl
adc
add
pop
cmpsl
out
insb
fldcw
aas
bound
mov
out
popf
cli
mov
inc
add
call
rcl
cmova
ds
cltd
cli
add
inc
adc
pushf
rcll
icebp
lods
jle
push
ret
or
mov
mov
add
mov
std
fiadds
iret
jae
add
out
ret
fstl
pcmpeqb
cmp
pop
rcr
das
add
xchg
pcmpeqb
inc
fiaddl
and
cli
std
hlt
sub
adc
jmp
dec
mov
sbb
xchg
pop
rolb
pop
out
outsl
bound
mov
popa
call
add
mov
add
aas
sub
shll
bound
or
add
cltd
or
inc
fldt
stc
inc
scas
push
call
hlt
mov
mov
inc
jg
inc
out
test
add
inc
or
push
jns
xchg
sbb
addr16
push
clc
mov
sbb
jg
mov
fwait
std
call
ss
incb
add
adc
pusha
dec
jb
ret
cwtl
jle
cmp
jle
pop
xchg
adc
lret
sub
jb
or
mov
pop
iret
mov
pusha
imul
aam
and
or
push
sbb
cmp
jmp
fisttps
ret
aam
nop
leave
pushl
sti
add
lock
push
sti
sar
add
sub
pop
subl
inc
outsl
pop
arpl
cld
xorl
mov
in
xlat
or
jnp
push
ret
xchg
fistps
or
jno
aas
push
notl
or
movaps
pushl
out
push
jnp
leave
push
bound
pop
mov
mov
jo
push
negb
add
or
jge
loope
dec
enter
push
push
cmp
pop
mov
xchg
cli
sub
xchg
inc
mov
add
push
adc
jmp
add
add
xchg
js
rcll
fiadds
cltd
xchg
clc
es
pop
jmp
loop
popl
add
bound
jmp
xchg
or
add
dec
out
jns
mov
imul
into
jns
andl
sahf
std
mov
or
or
negb
dec
loope
mov
fiaddl
incl
pop
inc
xchg
idiv
clc
jns
or
add
enter
sarb
outsl
cs
dec
cs
mov
xchg
incl
add
push
call
frstpm(287
testl
sub
std
mov
xchg
clc
or
call
xchg
loope
enter
push
int
inc
out
js
fsubs
jns
call
jns
mov
test
lcall
in
lock
call
flds
cltd
sti
cmc
popa
adc
js
je
add
xor
add
outsb
je
mov
outsb
mov
dec
outsb
pop
into
adc
mov
pop
testb
je
jae
aas
xor
mov
jo
and
outsb
adc
testb
imul
adc
bound
imul
in
fs
pop
insb
je
xor
aas
ror
imul
xlat
leave
popa
cmpsb
insl
add
mov
or
jne
or
insl
dec
adc
mov
xadd
adc
jns
stos
insb
push
or
xlat
mov
dec
jne
or
aad
daa
insl
add
pop
insl
xor
ret
shrb
xsaves
cli
mov
sbb
push
or
bound
inc
lea
jns
jecxz
outsl
add
jg
inc
mov
mov
sahf
mov
inc
xchg
lcall
aam
out
inc
or
xchg
mov
mov
add
add
jbe
or
mov
push
fs
std
pop
lods
and
push
or
aas
fwait
std
mov
push
idivb
jg
jmp
in
mov
ss
aas
jmp
call
mov
testb
call
mov
arpl
xor
sti
jg
inc
adc
into
pop
sahf
cld
add
je
adc
push
call
mov
push
test
and
add
xchg
incb
scas
bound
movsl
pop
push
xchg
pop
mov
das
lea
das
jns
clc
rclb
call
add
loope
add
mov
add
aas
sub
jne
stos
rolb
jns
mov
test
mov
push
std
test
mov
xchg
jno
push
daa
addr16
inc
add
adc
arpl
pop
sbb
push
adc
jb
shll
pushl
in
push
mov
push
add
cltd
fdivrl
mov
cld
sti
fnstenv
inc
mov
lock
jle
mov
out
pushf
push
sbb
decb
fxch
into
mov
jb
xor
ds
mov
jecxz
pop
push
xchg
repz
inc
push
sti
push
fimuls
push
cld
stc
mov
insb
fs
xor
add
add
mov
push
or
mov
mov
fisubl
imul
adc
nop
arpl
fcoml
xorl
call
pop
push
test
lea
jb
cmp
adc
imul
in
xor
imul
sti
imulb
add
add
jl
cli
add
outsb
add
pushf
pop
or
fidivrs
in
outsb
add
push
cmp
add
add
je
or
mov
mov
shll
std
cmpsb
sbb
rclb
jne
call
movsl
cli
push
incb
cmp
or
outsb
out
into
aam
incb
aam
cli
mov
add
aam
add
cmp
add
add
mulb
mov
add
pop
movsl
or
push
mov
jp
mov
xchg
call
jp
call
outsl
push
dec
shl
test
jnp
incl
idiv
or
mov
jb
incl
sub
decl
jnp
clc
push
js
lcall
mov
rorb
add
mov
add
add
mov
cld
mov
dec
incl
in
mov
jne
push
insb
dec
out
gs
xor
xchg
cld
decl
jecxz
inc
xlat
or
add
jmp
add
incb
or
aam
add
sub
imul
mov
jp
add
pop
adc
lcall
mov
ds
push
mov
jmp
shr
adc
xor
out
mov
inc
adc
add
fsts
iret
lret
push
mov
addr16
ja,pn
cmp
add
and
sbb
inc
cmp
lock
add
add
pop
mov
mov
xchg
bound
in
in
push
shlb
pop
mov
fidivrl
bound
add
push
rol
or
nop
add
inc
add
add
ret
jno
out
xchg
or
fbld
inc
mov
push
add
mov
mov
inc
mov
scas
cld
mov
call
push
add
xor
std
pushf
sbb
add
sub
in
cmc
lret
cwtl
push
iret
scas
std
pop
ljmp
sub
in
xor
mov
add
lods
sub
lcall
push
in
mov
psubsw
cwtl
call
sbb
std
mov
xchg
push
decl
andb
jbe
push
stos
cmp
mov
bound
aad
stc
xor
incl
je
jo
cli
decl
sti
in
inc
xchg
pop
inc
cmp
add
das
mov
insb
aas
stc
push
sbb
imul
scas
cmp
shr
cld
je
inc
sub
mov
das
inc
add
jne
jle
push
call
movsb
mov
xor
add
orb
in
mov
outsl
mov
jne
mov
lock
jmp
or
jg
or
stc
shlb
popa
cmp
mov
cltd
mov
mov
push
scas
cmp
push
rcrl
or
arpl
sbb
jmp
outsl
fldenv
sahf
arpl
cmp
add
inc
loop
jbe
push
or
sahf
and
filds
add
and
je
mov
sbb
add
enter
ret
xchg
rcl
add
dec
inc
orb
add
or
sahf
bound
pusha
test
add
ret
pop
add
bound
xchg
bound
imul
ds
lret
push
fcoms
std
dec
pop
pop
mov
add
out
xchg
bound
jne
mov
xchg
out
push
mov
in
mov
or
xchg
out
inc
push
stc
push
cmp
sbb
adc
and
out
jge
xchg
jl
sub
add
mov
std
sbb
sbb
xchg
mov
xchg
or
push
insb
std
mov
add
xchg
bound
ss
push
std
jmp
adc
cmp
fsubs
std
mov
test
mov
jg
std
mov
adc
and
jmp
dec
pop
xor
ss
std
jb
negl
push
pop
add
subb
sub
cmpsb
decb
add
ss
jle
dec
pusha
mov
pop
out
enter
enter
enter
in
dec
pop
add
cmp
mov
or
jne
and
push
movsb
mov
lret
pop
imull
and
or
addl
leave
sub
jb
xor
and
sar
sub
add
add
rolb
fwait
je
xchg
jecxz
or
mov
je
shll
xor
jno
inc
outsb
dec
mov
repnz
pop
decb
mov
insb
push
fwait
or
or
cmc
inc
mov
imul
mov
add
mov
push
ret
push
add
repz
push
or
loop
xchg
or
add
xchg
or
shlb
add
punpckhdq
aad
dec
rcrl
sahf
fistl
out
daa
arpl
imul
paddb
push
fsubl
mov
sub
bound
cltd
or
sbb
dec
fcomps
stc
jg
xchg
out
push
pop
out
or
imul
and
psrlw
pushw
fcoms
clc
cs
add
mov
enter
dec
push
stc
into
or
insl
or
push
add
test
xor
or
loop
clc
or
div
std
jmp
mov
sub
loope
lea
inc
push
clc
cmc
fildl
add
jae
lods
mov
shr
into
add
xchg
divl
lods
sti
xor
mov
or
xchg
xchg
divl
insl
cmp
push
clc
jae
jge
cmp
inc
insb
rcrb
fsubrp
pop
call
loop
outsb
add
in
pushl
mov
cmp
xchg
or
push
jmp
inc
jg
je
add
pop
mov
shlb
aas
ljmp
call
or
adc
jmp
xchg
je
out
xor
jne
mov
cli
push
xchg
inc
jne
xchg
sahf
or
sti
icebp
cmp
push
std
jb
flds
add
jmp
add
jmp
add
push
mov
add
xchg
adc
add
xchg
sub
pop
scas
pop
mov
inc
je
mov
or
rcrb
lret
iret
or
add
pop
jns
pop
enter
push
sbb
pop
mov
negb
add
out
mov
push
pushl
or
rcrl
pop
adc
arpl
jns
fs
addb
jnp
add
lahf
xchg
xor
add
jl
out
sbb
out
xchg
out
push
push
cmc
push
push
mov
mov
in
mov
sub
add
jg
xchg
out
rorb
sbb
push
pop
insb
fs
jbe
mov
hlt
repz
dec
add
push
adc
cmc
bound
cmp
imul
xorb
pop
pushf
sbb
add
mov
or
pushl
out
inc
or
ret
out
out
pushf
add
bound
sbb
mov
mov
movsl
push
roll
sahf
std
mov
xor
scas
or
pop
inc
frstor
push
jb
loop
dec
fdiv
std
ss
jl
cmpsb
pop
hlt
cmc
sti
add
xchg
pop
ss
aas
jmp
shrl
add
xchg
in
pop
fdiv
std
mov
into
hlt
or
lahf
fisubs
cmc
std
es
cmpl
sti
call
lcall
mov
imul
cs
decb
add
scas
in
mov
add
cmp
cltd
mov
or
std
jmp
je
call
out
outsl
les
lcall
mov
sti
fcomps
add
add
sti
ljmp
mov
cltd
jmp
dec
or
mov
push
or
push
iret
add
add
mov
call
or
mov
push
lahf
or
or
add
xchg
or
cmp
mov
cld
imul
sub
inc
xchg
jbe
shrl
dec
outsb
mov
inc
or
push
out
movsl
or
stos
push
inc
xchg
adc
and
or
mov
add
call
mov
into
sub
sub
icebp
cltd
mov
push
mov
fdivr
fimull
enter
mov
cli
xchg
mov
jo
in
lock
push
cwtl
icebp
scas
nop
test
cmpsb
push
jno
ficoml
pop
cmpsl
iret
les
lret
pop
xchg
out
stc
xor
xor
push
icebp
imul
inc
movsl
pop
push
scas
arpl
add
inc
push
mov
adc
and
jmp
xchg
icebp
mov
arpl
std
adc
cmp
push
pusha
mov
cmovs
call
adc
testb
mov
push
stos
std
fisubrs
xacquire
lock
loopne
stos
icebp
fucomi
push
add
hlt
das
add
add
movlps
xchg
bound
orl
mov
add
add
mov
jo
add
xchg
bound
inc
call
fxch
mov
inc
clc
mov
mov
xlat
out
add
call
call
mov
xchg
gs
arpl
call
mov
jno
inc
xor
test
incb
add
in
mov
add
scas
stc
ljmp
stc
add
arpl
shlb
out
call
divb
je
adc
cli
ljmp
in
push
cld
std
push
in
inc
arpl
or
and
dec
xlat
stc
mov
xor
stc
out
jg
out
jg
jmp
incb
add
in
ret
rol
dec
push
stc
imul
xchg
adc
repz
adc
mov
push
je
adc
push
xchg
stc
test
jmp
mov
mov
imull
cld
pushl
dec
or
cltd
mov
push
xchg
sti
mov
frstor
add
cli
or
push
roll
add
mov
mov
add
adc
fldln2
pushf
dec
stc
xor
push
clc
in
pushf
push
stc
cmp
push
call
inc
mov
fcomps
sub
mov
aad
and
mov
sbb
lds
mov
push
cwtl
inc
dec
les
jno
mov
cmpsb
push
xor
out
jno
stos
scas
shlb
xor
push
add
les
gs
bound
jno
mov
aad
loopne
sub
add
inc
pop
addl
ja
add
sub
bound
insb
ds
std
hlt
sbb
aas
jmp
gs
std
jmp
xchg
bound
je
hlt
push
push
xchg
js
inc
xchg
in
jae
inc
push
ret
in
or
add
sarl
lahf
bound
push
imul
popa
mov
sbb
add
add
mov
jne
xchg
je
xchg
pop
std
jne
xchg
adc
mov
decb
jg
sub
repnz
mov
stos
and
push
std
xchg
adc
cltd
pop
decb
mov
lods
inc
add
pop
add
hlt
lahf
je
sub
je
xchg
add
add
jmp
je
out
push
add
cmpsb
push
mov
loopne
rcr
push
xlat
fsub
inc
jg
outsl
add
cmpb
stc
aad
adc
stc
add
push
mov
ret
cmp
push
sar
push
pop
sub
cmp
jge
push
adc
push
sar
push
sbb
incb
add
popa
add
xchg
iret
add
push
lcall
or
mov
xor
roll
dec
dec
ror
std
mov
stc
add
or
push
and
std
mov
out
add
es
dec
arpl
xchg
out
sbb
jbe
dec
xchg
outsb
cltd
add
gs
dec
sbb
bound
push
jmp
testl
adc
out
xchg
jmp
push
and
and
outsl
cmpb
leave
int
jg
xchg
fs
inc
ljmp
popf
and
outsl
ret
dec
subb
test
push
test
enter
xchg
xlat
subl
sub
notb
bound
test
aad
std
xchg
outsb
or
push
test
add
andl
ds
in
call
cs
call
adc
out
adc
add
xchg
xlat
xorl
scas
enter
call
rclb
add
enter
call
add
pop
leave
cmp
mov
cld
lcall
outsl
pushf
outsl
add
cmpb
adc
adcl
inc
aas
fs
push
movsb
pop
leave
in
popf
inc
cld
das
add
js
testb
fs
cli
xchg
ljmp
lds
pop
add
lcall
add
sbbb
push
sbbb
push
add
jb
ljmp
scas
add
arpl
shl
cs
arpl
call
xchg
mov
stc
add
and
sti
and
dec
orb
add
scas
imull
dec
jb
rcl
inc
imul
adc
in
cmp
popf
mov
push
xor
orb
roll
push
data16
add
std
dec
xor
mov
jmp
stc
mov
adc
dec
dec
ljmp
arpl
adc
cmpsl
ret
mov
call
clc
add
sar
add
popa
inc
dec
mov
push
lods
popa
pop
std
mov
loopne
lds
bound
cmp
adc
mov
bound
and
add
add
out
cld
adc
mov
rclb
sbb
jg
pusha
mov
add
adc
ds
pop
mov
repnz
jno
dec
stos
pop
mov
jmp
inc
bound
ficoms
out
jmp
xlat
jmp
add
shlb
dec
jo
into
cmpsb
sbb
sub
add
sti
xchg
xchg
std
cmp
in
and
in
in
mov
xchg
std
cld
fstl
add
xchg
bound
cmp
std
push
mov
add
sub
cld
jmp
call
add
out
push
dec
jo
es
das
test
pop
rcrb
mov
ljmp
add
adc
call
push
mov
add
cmp
push
mov
dec
std
adc
je
push
test
pop
add
xor
mov
add
aas
pusha
std
jae
imul
push
jb
movb
add
aas
mov
add
jo
in
add
pop
add
xor
add
add
pop
mov
scas
jne
xchg
add
pop
or
xchg
pop
dec
add
lahf
pop
int
sbb
adc
push
stc
inc
inc
loop
add
xchg
adc
push
lods
add
xchg
stc
dec
je
adc
mov
push
sub
dec
adc
stc
add
out
mov
cmp
xchg
or
inc
xchg
cli
add
push
js
rcll
add
insl
dec
je
xchg
add
mov
inc
xor
loope
decb
and
lods
mov
xor
sbb
push
fs
loop
mov
xchg
inc
xlat
or
mov
stos
inc
aas
iret
xor
fwait
daa
into
inc
jns
mov
push
xlat
bound
lods
and
pop
add
mov
mov
adc
loope
fsubl
xchg
sub
ret
cmp
jle
xor
iret
mov
and
test
cs
adc
dec
insl
push
push
iret
push
and
jmp
pop
dec
jmp
push
andb
add
push
jb
cli
push
push
leave
xor
pop
loopne
sub
je
fistps
repnz
push
push
or
xchg
arpl
jmp
xchg
call
mov
aas
jmp
xchg
bound
insb
push
fstl
xchg
sub
bound
test
cmp
jmp
shrb
add
xchg
bound
inc
sti
xchg
std
add
add
shrb
push
mov
jmp
add
gs
jb
and
push
cmp
add
fs
jge
std
addr16
cmp
add
sarb
mov
xor
pop
out
incl
adc
xor
in
or
incb
aas
fs
mov
data16
adc
icebp
movsb
std
cmp
das
add
add
xchg
dec
pop
or
and
lret
call
xchg
mov
or
stos
sub
adcb
mov
dec
inc
mov
rcl
pushl
rcrb
aas
mov
mov
test
pop
fisttps
test
pusha
iret
mov
mov
clc
push
push
add
out
mov
jae
test
jo
mov
jnp
stos
inc
xchg
bound
sahf
cmp
stos
push
bound
push
cmp
stos
push
bound
push
push
cmp
stos
push
bound
push
push
cmp
stos
push
bound
push
push
cmp
stos
push
out
sbb
mov
jmp
add
mov
mov
add
mov
bound
add
mov
bound
add
mov
jbe
cmpsb
push
sub
and
pop
das
scas
push
test
frstor
xor
out
mov
test
frstor
adc
mov
and
mov
frstor
adc
add
jecxz
add
scas
int
test
frstor
cmc
lret
out
aad
sub
and
into
jle
push
sub
and
mov
gs
sub
and
sahf
outsb
insl
pop
sub
and
add
lret
outsb
data16
and
mov
pusha
std
and
push
popa
std
and
add
mov
popa
std
and
mov
popa
std
and
cwtl
lret
out
pusha
std
and
test
push
pop
pusha
std
and
mov
data16
and
pop
les
scas
data16
and
cmp
imul
mov
in
in
mov
jnp
fiadds
pop
in
add
int3
mov
jae
fiadds
inc
in
mov
pop
fiadds
sub
xchg
pop
or
pushl
xchg
in
dec
or
mov
jl
stos
insb
or
pushl
fiadds
fs
pop
or
jnp
fiadds
int3
out
cmp
add
jae
faddl
mov
ret
in
mov
mov
sbb
iret
int3
mov
add
mov
fildl
bound
dec
pop
scas
jne
push
xchg
pop
out
jnp
out
push
out
and
or
pop
out
xchg
mov
fistpll
xchg
bound
pop
xchg
fistpll
adc
outsl
or
bound
jns
out
jnp
out
aam
out
leave
and
xchg
mov
out
add
xchg
pop
out
jnp
out
push
pop
out
xchg
arpl
add
imul
out
xchg
bound
hlt
xchg
fs
push
bound
stos
sahf
bound
jmp
xchg
sbb
jmp
xchg
xchg
add
xchg
bound
popf
jne
jmp
xchg
bound
jmp
test
add
push
gs
xchg
addb
popa
mov
sub
add
fscale
xchg
popf
sbb
jmp
xchg
xchg
add
bound
sub
movsb
add
movsb
stos
cmp
xchg
arpl
out
mov
mov
and
add
ficomps
add
gs
jne
in
adcb
add
aas
movsl
movb
add
cmpsb
fimuls
jl
popa
add
add
call
or
scas
in
add
jmp
shlb
mov
jns
add
xchg
je
fimuls
add
pop
sbbb
add
mov
jne
add
fs
sahf
and
add
dec
adc
xchg
leave
mov
add
or
add
fiaddl
pop
xchg
leave
add
push
inc
add
or
push
out
imul
xor
aas
leave
decl
jg
xchg
jp
inc
and
mov
adc
cmpb
and
or
mov
xchg
and
add
leave
mov
sbb
leave
mov
push
bound
lods
pop
out
pop
loope
pop
add
xchg
bound
mov
movsb
call
add
lret
jmp
pop
xchg
out
sahf
jmp
adc
jp
add
pop
out
psraw
pop
xchg
bound
mov
jp
pop
sti
mov
call
fcoms
bound
xchg
bound
test
add
inc
pop
lcall
in
xchg
bound
jmp
cwtl
call
ret
leave
add
imul
jg
pop
std
jo
outsb
add
xchg
and
jmp
xchg
bound
jmp
aas
movsb
add
call
gs
sbb
orl
popf
bound
jmp
adc
sub
inc
and
and
inc
push
jbe
and
mov
jb
bound
add
cmpsb
aas
test
hlt
subl
leave
repnz
add
in
std
and
adc
pop
mov
mov
push
push
les
std
ljmp
popa
add
mov
test
sub
add
add
popa
push
mov
mov
subl
add
jmp
mov
or
cmpsb
dec
inc
sbbb
add
pusha
std
jne
jecxz
adc
pusha
add
xchg
lret
rol
std
pushl
push
jg
lcall
call
incl
ret
xchg
add
enter
add
xchg
inc
aaa
jae
dec
dec
xchg
dec
sbb
leave
xchg
jbe
mov
pushl
push
adcb
leave
add
sbb
add
leave
mov
sbb
leave
mov
xchg
xchg
cmp
push
mov
add
imul
add
arpl
xchg
out
push
add
pusha
andb
mov
add
call
add
jp
orl
shll
mov
jbe
add
out
adc
add
aam
mov
pushf
mov
mov
cmpsb
test
pop
mov
fcmovne
sub
add
bound
shr
sbb
dec
js
sarb
test
pusha
add
add
mov
std
out
xor
push
xchg
in
in
bound
jb
arpl
xchg
jmp
std
sub
add
outsl
mov
call
mov
xchg
mov
stos
or
pop
scas
data16
push
imul
or
sbb
xchg
bound
mov
add
xchg
fildl
bound
add
iret
ret
arpl
add
outsl
mov
jbe
adc
mov
add
scas
fiadds
mov
outsb
add
mov
cwtl
mov
sbb
add
fldl
mov
insl
add
jg
mov
out
or
xchg
std
decl
lds
mov
add
std
lcall
sar
jmp
gs
mov
jns
add
fldl
mov
add
xchg
mov
adc
sbb
mov
add
push
push
arpl
lcall
pushl
mov
sbbl
mov
jnp
xchg
mov
xchg
jns
lods
xchg
lds
add
inc
adc
xchg
mov
add
pushw
push
rolb
mov
movsl
std
push
loope
mov
cmp
mov
cmp
int3
or
sbb
fcmovne
or
in
aam
mov
out
sbb
hlt
notb
out
inc
gs
xchg
mov
out
add
and
sahf
imulb
popa
scas
inc
mov
lcall
int3
out
call
mov
pop
mov
ret
movsb
out
add
mov
push
orl
bound
mov
xchg
into
lret
fistpl
add
imul
xchg
bound
adc
and
xor
add
add
jg
mov
leave
std
cs
and
pmaddwd
in
bound
and
iret
xchg
cltd
into
std
pusha
sub
pop
inc
fsubs
push
int3
call
push
cmp
xchg
xchg
bound
pusha
sbb
add
xchg
and
jmp
xchg
bound
add
add
push
add
mov
mov
popa
add
dec
adcl
popa
add
jmp
add
data16
xchg
add
jg
mov
outsb
insb
add
mov
xchg
mov
negl
add
add
icebp
jno
add
fwait
and
popa
add
outsl
adc
addl
lret
mov
and
scas
dec
lret
call
js
pop
pop
xchg
stc
stc
call
lock
outsl
xchg
pop
pop
push
add
mov
in
or
inc
aas
out
xor
incb
rcrl
rolb
sbb
add
cmp
jg
mov
lods
and
inc
in
xchg
mov
jle
sub
mov
out
mov
sbb
outsl
mov
mov
gs
adc
push
and
pop
jl
inc
arpl
xchg
out
adc
sub
push
pop
out
dec
int3
call
add
cmp
mov
xlat
insl
adc
out
sbb
add
out
pmulhw
pop
xchg
bound
add
mov
jae
push
mov
or
pop
xchg
bound
xchg
bound
test
fnstcw
jp
jb
add
out
addl
add
aad
push
xchg
pop
lret
mov
adc
xchg
bound
jmp
cltd
bound
pusha
daa
jg
jmp
add
xchg
loope
imul
pusha
mov
push
ret
fs
xchg
pop
xchg
fsubs
ret
loope
jmp
cltd
jns
int
loope
jmp
cld
jns
lds
xor
pop
popf
mov
out
sub
pop
movsb
or
xchg
or
add
adcl
data16
das
cmpsb
mov
add
xchg
pop
add
cmpsb
loopne
add
mov
mov
add
or
xchg
popa
add
xchg
adc
mov
jae
add
inc
adcl
add
mov
ret
inc
mov
aam
jns
pop
loope
pop
ret
mov
mov
inc
out
add
gs
add
or
add
cmp
xchg
sub
sub
add
add
mov
add
sbb
lods
dec
mov
nop
jnp
jb
jl
mov
mov
add
mov
in
jmp
pop
add
adc
jns
xor
pop
mov
iret
add
jne
add
movsb
inc
add
repz
jge
repnz
xchg
mov
divb
popa
jb
add
add
or
xchg
adc
cld
or
call
js
pop
jecxz
xchg
fsincos
sbb
out
xchg
popa
jne
lcall
add
out
fnstcw
add
add
bound
mov
xchg
lock
cltd
pop
out
mov
xchg
sub
jb
jne
push
add
popa
out
xlat
push
in
jp
jle
sbb
push
xchg
xchg
bound
imul
push
add
jecxz
jmp
fldl
imul
mov
xchg
bound
jmp
pop
sbbl
std
rcr
push
cmp
add
stc
std
or
test
sub
arpl
xchg
push
sbb
pop
add
xchg
mov
fistps
jnp
push
xchg
mov
push
bound
mov
lcall
add
roll
test
ljmp
mov
test
cmp
push
xchg
add
or
adc
jb
cmp
ret
cmp
lret
push
std
cmp
movl
rcl
cmp
cld
mov
in
lret
movsl
and
cmp
adc
cs
jb
inc
dec
and
inc
imul
jg
mov
adc
xchg
or
scas
sub
xchg
push
mov
add
add
ljmp
adc
sub
mov
movl
ret
loopne
sbb
cmp
jle
push
mov
mov
jne
inc
mov
jle
mov
decl
into
mov
out
push
sub
sbb
xor
mov
sbb
sbb
mov
outsl
aaa
mov
add
push
fdivl
test
mov
ljmp
push
jb
mov
jo
mov
pusha
mov
pop
xorb
add
les
or
les
sub
pop
adc
push
add
pushf
out
xchg
bound
cli
or
push
jge
and
xchg
pop
scas
test
fildl
mov
sub
add
ret
push
cld
push
pop
add
daa
or
das
or
and
xchg
cmp
add
mov
subl
out
jg
jmp
mov
cmp
mov
movsl
push
addl
scas
and
sbb
rclb
and
leave
lcall
mov
add
dec
jo
arpl
xchg
inc
scas
enter
lcall
aam
shrb
loop
or
test
mov
sbb
mov
push
pop
adc
das
mov
mov
outsb
pop
add
int
addl
mov
add
push
mov
in
sbb
add
add
repnz
add
push
xor
cmp
add
cmp
add
aas
data16
cmp
jb
call
add
or
mov
je
or
sti
add
xchg
lret
jl
xchg
iret
add
cmovb
add
and
add
lret
jp
add
xchg
add
nop
add
pmaxub
or
lds
mov
add
xchg
jmp
mov
mov
addr16
sub
std
incl
lds
fidivs
ljmp
ss
and
add
push
ljmp
loopne
adc
mov
sbb
bound
lcall
add
add
mov
sbb
repz
rclb
jne
cwtl
jp
xchg
adc
insb
inc
nop
out
cltd
rcl
mov
xchg
adc
pop
ret
ret
push
dec
lret
xlat
push
pop
ret
fstpt
shlb
out
jge
aaa
shl
in
sbb
test
ss
mov
xor
cmp
jge
movsb
add
shlb
add
es
setbe
add
bound
bound
jmp
lret
jecxz
ljmp
push
adc
push
bound
loop
jae
mov
push
lods
mov
mov
cmc
push
mov
shl
pop
add
xchg
jmp
int
jle
in
bound
rolb
fldcw
jmp
add
xchg
bound
rolb
mov
jmp
add
push
in
xchg
cmc
sbb
inc
push
add
xchg
mov
dec
mov
pop
fsqrt
js
mov
cmp
mov
cmp
mov
adc
mov
inc
idivl
mov
mov
mov
dec
push
hlt
ja
das
add
addb
sub
cmp
cmp
sar
in
shr
gs
in
dec
and
testl
and
in
aad
jae
cmp
call
or
shlb
inc
test
xchg
enter
leave
push
inc
mov
mov
inc
jp
add
xchg
lret
mov
dec
arpl
imul
jb
sahf
das
sbb
fimull
cltd
xor
mov
cmpsl
rcll
push
out
mov
lods
mov
pop
pop
vpmacsdql
add
xchg
cwtl
dec
jg
inc
ret
mov
add
sub
or
ret
sbb
mov
cmp
mov
pop
xchg
nop
cmp
mov
and
int
fldenv
out
mov
push
out
sbb
add
xchg
bound
mov
jb
movsl
out
adc
mov
jmp
loopne
out
sub
mov
or
jl
add
sbb
add
add
dec
adc
xchg
jns
std
sahf
and
cmp
scas
call
rcrb
orl
stos
mov
inc
test
call
push
jb
ret
leave
xor
mov
add
inc
lret
movsb
mov
cmp
pop
add
adc
and
xchg
stos
cmp
adc
lods
jno
call
add
xchg
bound
movsb
xor
cmp
adc
jmp
push
push
mov
in
cli
cmp
add
pop
add
add
testb
pop
cmp
out
pop
add
or
push
mov
mov
add
out
add
in
dec
and
out
mov
add
xchg
cmc
pushl
out
and
out
and
xchg
ret
adc
pop
mov
cmc
jo
push
push
in
mov
in
xchg
xchg
sbb
and
jl
xor
add
sbb
movsb
lock
fcomps
int
mov
sub
fstpl
stc
xor
mov
in
fmulp
dec
mov
sub
xor
add
sbb
int3
inc
mov
fadds
into
sub
enter
add
xchg
ds
jnp
xor
and
sti
scas
mov
push
repz
mov
sbb
fisttpl
pop
bound
cmp
out
add
dec
out
adc
xchg
in
sbb
rcr
push
sbb
add
loopne
add
add
xchg
bound
mov
bound
lods
je
pushf
jge
xchg
xchg
in
scas
mov
push
ret
imull
add
in
and
sub
mov
push
outsb
ss
daa
outsb
bound
or
pavgb
in
stos
out
movzwl
jo
ret
pop
add
imul
xor
test
data16
pusha
add
incb
adc
out
mov
sub
add
pusha
in
fcoms
fbld
jmp
into
aad
in
xchg
bound
unpcklps
add
push
bound
repnz
fwait
mov
xchg
xchg
and
fucomp
shll
adc
add
add
push
mov
in
and
add
mov
xchg
inc
repnz
cmp
imul
lret
in
jmp
dec
jmp
ljmp
daa
lcall
push
loop
sub
bound
add
arpl
jl
loope
add
rolb
mov
push
add
dec
and
in
push
mov
add
lret
repz
mull
pop
xor
and
add
sub
dec
repnz
xchg
arpl
jns
sbb
mov
cs
test
and
jns
int
cmp
inc
pop
sbb
pop
int3
add
sbb
lret
mov
movb
mov
sbb
sbb
jp
int
hlt
sub
in
sbb
add
aad
jmp
cmp
mov
or
or
xchg
lret
lea
add
xchg
lahf
add
arpl
cwtl
lcall
lret
mov
sbb
fwait
jecxz
int3
repz
lcall
mov
pop
xchg
out
xchg
fdivr
decl
adc
jne
pop
and
push
in
sbb
jb
jne
jb
add
jne
sbb
or
mov
add
dec
jecxz
xchg
out
stc
clc
enter
jle
sub
jle
mov
dec
jecxz
xchg
jmp
fisttps
jmp
fisttps
mov
push
push
leave
out
mov
dec
add
xchg
bound
and
std
push
pop
push
add
xchg
fdivp
enter
ja
lds
orl
add
adcb
leave
insb
xchg
push
mov
es
push
fs
cmpb
cmpsb
xchg
xchg
mov
shlb
xorb
call
push
jb
mov
mov
pop
and
das
jb
out
push
lahf
js
jg
add
scas
mov
mov
mov
fwait
xchg
mov
mov
push
push
aas
out
call
in
and
or
mov
hlt
xchg
mov
cli
lret
aaa
mov
xor
add
in
adcl
add
das
pop
je
and
add
lret
xor
sbb
pop
jnp
out
lret
and
or
pop
xchg
jmp
jmp
in
and
add
mov
ljmp
pusha
das
push
dec
inc
inc
out
or
pop
dec
sub
and
mov
mov
fstl
jae
subb
sbb
adc
test
mov
decl
sbb
enter
mov
insl
add
cmp
fcoml
inc
inc
mov
mov
fcmovb
add
addl
add
arpl
add
xchg
scas
stc
cmp
movb
dec
in
add
rcr
jp
aam
xchg
cs
test
mov
inc
mov
cmp
nop
mov
push
adcb
inc
shll
sbb
sarb
rcll
jb
jno
add
daa
xchg
aaa
aam
xchg
fnsave
loopne
add
adc
inc
xor
push
and
cmp
add
xorl
out
or
mov
mov
mov
jle
sub
in
xchg
bound
mov
jb
adc
std
call
xchg
fisttps
push
dec
mov
fs
or
sbb
xchg
bound
adc
xchg
flds
bound
add
push
add
xchg
fcoml
jmp
lods
ret
arpl
je
fldl
jo
push
add
xchg
and
jmp
xchg
bound
jmp
test
mov
xchg
rcrb
push
out
add
arpl
mov
add
mov
scas
std
incl
or
xchg
add
mov
jno
add
jg
sbbl
arpl
add
mov
add
int3
rcrb
inc
and
xor
and
ficoml
sub
in
add
arpl
dec
xchg
testb
push
int
repz
rcl
pop
mov
pop
pop
insb
outsl
xor
xchg
mov
inc
xchg
aaa
aam
add
aad
mov
sarb
inc
mov
or
xchg
ds
je
cmp
ret
or
mov
roll
mov
roll
mov
aad
xchg
mov
call
push
push
shlb
xchg
mov
add
sbb
add
mov
inc
lret
shlb
inc
int
stos
inc
fstpl
jnp
loope
out
inc
adc
xchg
add
repnz
push
bound
stos
ljmp
loope
or
sbb
add
lcall
sbb
add
aam
and
in
xchg
fdivs
xchg
aaa
icebp
jl
mov
addl
add
aad
xchg
cmc
adc
call
adc
lods
out
cmc
fdivp
adc
lods
out
cmp
jne
dec
sbb
sub
scas
sbb
clc
fiaddl
in
hlt
gs
lods
jno
dec
nop
sub
test
cmc
jp
sbb
xchg
bound
test
fbstp
adc
inc
cld
pop
in
faddl
add
lods
popa
pop
dec
nop
stos
adc
iret
loopne
lahf
pop
lods
jge
mov
add
xlat
add
xor
aas
jmp
cmpsb
lods
std
out
iret
loopne
daa
push
lods
jge
cltd
rolb
add
mov
mov
cmpl
xchg
and
addl
jmp
or
call
add
nop
lock
mov
mov
in
cmpb
pop
push
push
clc
cs
or
hlt
jge
outsl
pop
add
mulb
xor
jg
jecxz
hlt
popf
and
popa
add
jle
pop
or
xor
cld
das
and
or
push
mov
xchg
inc
aaa
adcb
pop
pushf
inc
push
xchg
mov
iret
mov
inc
aam
add
lock
daa
or
cli
and
popl
jge
pop
fadds
lock
mov
das
mov
jl
adc
inc
aam
adc
out
xchg
mov
lods
mov
inc
lds
lcall
or
mov
rcll
push
dec
xlat
out
add
inc
movsl
jecxz
sbb
es
sbb
out
jl
in
or
cmpsb
sbb
stc
xor
jge
adc
mov
and
jp
push
je
leave
adc
sbb
out
cs
mov
mov
mov
sbb
out
in
fisttpl
push
pop
out
or
add
or
lret
lcall
mov
and
and
push
and
push
sahf
mov
add
fidivrl
test
popa
or
stos
pop
xchg
aam
or
jo
imul
test
push
mov
push
ret
or
imul
aas
xchg
pop
mov
icebp
xchg
adc
mov
add
mov
rcrl
lcall
popa
lcall
jno
and
push
arpl
add
pop
aas
mov
pop
aas
mov
arpl
mov
sti
mov
in
orb
mov
sub
mov
dec
out
dec
add
jno
jmp
add
xchg
lret
cmpsb
push
xchg
fmuls
push
mov
jle
or
orl
mov
push
mov
scas
dec
pushl
mov
xchg
xor
dec
xchg
xlat
mov
mov
mov
push
pop
xchg
repnz
pop
or
cmp
inc
in
dec
mov
push
adc
add
add
and
xor
or
inc
xor
enter
cmc
adc
cmp
daa
xor
lock
out
mov
and
pop
sub
stc
fnstenv
pop
xchg
mov
and
pop
js
out
lcall
adcb
sbb
roll
jp
ret
arpl
js
push
add
bound
add
push
mov
cmpb
out
xchg
pop
psraw
out
dec
movsb
into
repnz
mov
loop
or
xor
add
lcall
test
rcll
movaps
mov
jnp
xchg
push
mov
xchg
sbb
movsl
out
loopne
mov
inc
js
push
add
add
add
xchg
pop
mov
sub
fcmovbe
sub
add
test
loopne
in
inc
xchg
adc
cld
cmp
fidivl
jmp
inc
and
jo
mov
cld
jmp
xchg
adc
mov
lea
test
jae
add
cmp
rcrl
mov
mov
xchg
push
jae
lret
es
shlb
out
pop
add
je
stc
push
ds
xchg
scas
dec
or
aas
movsl
mov
cs
std
mov
cmp
aas
pusha
or
jle
decb
fidivrs
stos
test
inc
and
pop
jbe
shr
add
jbe
or
data16
xor
sbb
push
add
stos
out
jne
flds
shl
sub
rcll
sub
roll
enter
jecxz
or
call
jp
pop
ja
iret
push
and
xor
inc
xorb
xor
jp
add
push
hlt
xor
inc
xorb
sub
add
dec
cli
and
addr16
jp
push
mov
inc
xor
clc
push
xchg
stos
sub
lcall
pop
lcall
pop
insl
inc
adc
push
push
push
jnp
jp
lahf
test
push
xchg
inc
mov
daa
mov
fbstp
orb
mov
bound
cld
insl
mov
mov
add
add
and
pop
or
cmovl
out
add
jmp
mov
xor
inc
clc
adc
fbstp
adc
out
pop
lcall
jns
sbb
jmp
mov
xchg
out
push
lcall
fs
add
xor
imul
pop
sub
add
in
stc
inc
aaa
mov
es
cltd
and
cli
xor
xor
add
mov
aas
jmp
popf
clc
cld
negb
mov
call
bound
popf
mov
ljmp
mov
clc
sbb
or
sub
add
stos
xor
or
lret
jb
mov
push
pop
lock
ljmp
fistpll
call
cmpsl
std
mov
je
call
adc
inc
clc
mov
into
mov
shl
shll
jmp
push
mov
sub
data16
pop
rclb
pop
sahf
mov
sbb
add
fldenv
push
out
add
out
stc
std
addr16
inc
add
adc
cmp
inc
xchg
mov
test
stc
mov
adc
mov
add
xchg
in
mov
inc
add
fs
mov
mov
incb
pusha
add
sbb
add
imul
add
jnp
jo
push
add
or
cmp
xchg
int3
mov
add
inc
add
push
push
scas
out
mov
adc
test
cmpb
mov
jmp
bound
mov
push
add
jmp
out
push
test
sbb
cmp
mov
sahf
dec
mov
sahf
out
add
xchg
or
fwait
insl
xor
add
push
cmp
lahf
lods
ret
jmp
xlat
loope
repz
pushf
incb
xchg
out
cmp
call
sbb
call
mov
call
mov
mov
call
std
not
arpl
adc
lcall
orl
add
jb
in
pop
add
iret
xor
push
xchg
sahf
std
push
adc
js
xchg
pushf
add
bound
sbb
js
xchg
pushf
add
pushf
std
mov
xchg
aas
pop
mov
mov
mov
xchg
int3
jmp
int
add
lea
data16
cmp
or
call
call
mov
push
rorb
add
push
imul
cmpsl
bound
mov
pusha
push
mov
xor
scas
xchg
sti
call
mov
stc
xor
mov
xor
call
xor
push
ret
dec
mov
inc
or
insb
cmc
pushl
pusha
add
mov
test
lods
lahf
add
insb
arpl
jl
daa
add
xlat
jl
add
out
pop
xchg
cmpsb
jne
sar
mov
dec
push
mov
pop
or
inc
adc
sahf
js
call
aad
add
xchg
add
dec
push
mov
xchg
or
add
popf
dec
aas
xchg
xchg
lock
or
dec
or
ror
add
rol
xchg
testb
enter
add
or
inc
push
push
ds
std
inc
ds
lock
inc
or
jno
clc
sub
roll
fiadds
jg
and
in
and
data16
lcall
push
xchg
pop
in
imul
inc
xchg
in
sub
data16
sti
mov
out
hlt
adc
bound
out
jmp
add
and
in
mov
mov
lcall
call
movsb
repz
mov
cli
push
lcall
aad
mov
fwait
fwait
push
add
sti
mov
xchg
add
xchg
xchg
es
xor
or
bound
shr
std
inc
push
cs
jmp
ret
sahf
add
leave
or
bound
movsb
mov
std
pop
pop
es
sbb
in
inc
icebp
in
inc
pop
loop
jne
adcl
call
xchg
mov
push
mov
es
std
jmp
mov
mov
mov
mov
decl
add
dec
inc
decl
add
add
xchg
sub
dec
mov
and
sbb
jb
clc
pop
add
mov
out
je
cwtl
sti
xor
adc
ljmp
out
jl
cwtl
sti
incl
adc
call
cwtl
sti
wbinvd
gs
pop
in
mov
psraw
clc
negl
add
and
jns
xchg
or
add
add
aas
push
push
ds
and
add
or
sti
add
test
std
inc
mov
sti
jmp
add
pop
aam
add
out
push
gs
xchg
add
or
outsl
adc
fists
or
push
ds
mov
xchg
jge
in
jmp
das
fs
add
sbb
das
xor
push
or
lcallw
cld
sti
push
pop
flds
pushf
fistpll
cmp
adc
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
add
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
in
imul
mov
das
iret
gs
and
push
add
pop
jg
insb
dec
ja
and
add
dec
ja
je
pusha
inc
cmp
add
bound
je
jge
daa
leave
mov
shrl
xor
jb
bound
jb
insl
add
jmp
jb
cli
testb
roll
insb
or
std
fs
and
sub
imul
jne
imul
outsb
sbb
jb
push
add
and
add
jae
test
bound
add
je
pop
or
cs
or
repnz
jmp
add
pusha
add
out
pusha
add
out
pusha
add
mov
pusha
add
scas
pusha
add
scas
pusha
add
mov
pusha
add
scas
pusha
add
scas
pusha
add
jg
add
jg
add
outsl
pusha
add
xchg
out
mov
std
dec
and
xchg
push
iret
push
jb
mov
or
add
xchg
or
cmpsl
lds
push
or
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
add
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
fsubrs
xor
bound
stos
adc
mov
adc
xchg
add
test
ja
add
ret
sbb
gs
xor
cmpsb
pop
xor
cli
jns
pop
or
bound
xchg
push
arpl
pushf
add
insb
mov
popa
add
das
add
or
sahf
pushw
or
sub
outsb
imul
fs
gs
add
outsb
sub
xor
sub
add
add
gs
test
pusha
jns
adc
xor
push
xor
push
inc
add
push
outsl
pusha
sub
push
xor
nop
dec
xor
imul
popa
add
adc
arpl
outsl
pop
jb
imul
pop
pop
jno
jnp
addr16
pusha
pop
jb
gs
or
outsb
stc
sahf
add
add
cmpsb
jb
in
add
movsb
mov
test
push
mov
out
fs
imul
out
jno
fsubl
test
jae
push
jb
ja
add
jg
insb
pop
jae
add
outsb
push
pop
jno
jns
outsb
dec
push
jb
xor
push
bound
insb
inc
add
pop
and
adc
xor
out
icebp
adc
jmp
pop
enter
fnstenv
push
pop
xor
push
pop
add
adc
out
ret
adc
bound
push
popl
adc
out
cmpsl
cli
jp
test
push
test
cli
mov
add
push
je
adc
sub
push
push
sub
add
pop
add
bound
dec
add
pop
aas
ss
push
xchg
push
push
jmp
adc
or
das
jb
std
add
or
out
bound
sbb
cmp
insl
ror
jb
out
outsb
into
icebp
add
shll
outsl
enter
mov
movsl
adc
jb
popf
bound
cmpsb
adc
mov
add
mov
mov
push
xor
xchg
sub
pop
jmp
inc
cld
fs
clc
outsb
pop
sti
jno
push
add
adc
jae
add
jbe
push
mov
jae
addl
outsl
xchg
sti
push
insb
pusha
or
pusha
or
xor
imul
popa
push
add
add
imul
outsb
add
add
mov
cli
pushl
adc
imul
adc
add
inc
sti
imul
jo
sbb
xchg
dec
addr16
inc
es
xchg
jb
sbb
inc
jb
insb
aas
pop
pop
add
addr16
jbe
jb
jae
jnp
addr16
pop
pusha
arpl
add
shll
add
scas
lcallw
imull
add
cwtl
pop
ja
xor
mov
jbe
mov
push
pop
mov
in
add
pop
gs
xlat
pop
pop
jle
pop
pop
outsb
jns
ja
bound
ja
sbb
add
push
arpl
add
je
cmp
inc
bound
popa
add
xor
sbb
add
jbe
adc
jbe
add
push
add
or
out
loope
cld
gs
out
in
shlb
xlat
sar
ja
add
ja
add
add
add
xchg
test
pusha
mov
mov
bound
testl
mov
std
cs
add
js
dec
jno
decl
insb
push
jne
jno
jno
outsb
xor
aaa
imull
inc
bound
imull
bound
insb
sbb
call
idiv
insl
mov
faddl
push
lret
outsb
ret
xor
in
pop
lret
jno
mov
insb
lds
add
insl
mov
add
sub
mov
add
and
gs
jae
cld
pop
jae
cld
pushl
add
ljmp
sub
pop
sub
gs
push
sub
jb
adc
imul
popa
add
adc
insl
sahf
add
xchg
pop
je
xchg
sub
jbe
imul
outsb
add
outsl
dec
xor
dec
add
pop
sub
insl
add
outsb
imul
adc
aas
adc
jbe
movsb
filds
pop
mov
jo
or
imul
imul
addr16
insw
imul
jb
xor
push
jo
jnp
push
xchg
pop
pop
outsb
sub
add
sub
insl
add
outsb
icebp
jns
pop
add
addr16
mov
std
xchg
insb
add
mov
pop
add
bound
jns
addr16
jns
add
incb
pop
movsb
stc
xchg
add
addr16
out
jo
mov
add
jle
push
imul
pop
js
bound
pop
add
aaa
sti
dec
imul
out
xor
stc
adc
xor
or
ja
fdivs
btl
adc
out
cmc
clc
add
adc
pop
clc
stc
lds
fdivs
shrl
lret
add
call
mov
add
cmpsb
bound
mov
adc
add
jmp
pop
sti
js
daa
addr16
jno
jp
ja
bound
bound
jno
arpl
sti
push
cmp
dec
negb
lcall
adc
adc
adc
and
pusha
adc
divl
lcall
lret
in
imulb
bound
enter
bound
add
data16
insl
fs
ljmp
aas
pusha
jae
sub
das
sub
or
imul
je
cmp
push
add
add
pop
or
sub
add
popa
pop
sub
daa
imul
insl
xor
popa
addr16
add
xchg
sub
sub
sub
arpl
add
xchg
pushl
sahf
sub
gs
sub
dec
add
test
insl
rcrl
imul
jnp
pop
scas
in
insb
mov
pop
pop
movsl
fcoml
jl
pop
outsb
xchg
lret
mov
pusha
xor
jnp
pop
je
add
pop
xor
movsl
jnp
insb
ja
pop
pop
xchg
sub
cmp
pop
add
pop
jb
jnp
push
add
cmp
arpl
jnp
xor
xor
aaa
pop
popa
arpl
stos
add
xchg
icebp
xchg
repnz
insb
je
xchg
jno
frstor
bound
xor
xchg
cli
push
mov
movzwl
lret
fs
push
mov
push
xchg
pusha
test
mov
andb
jnp
jb
xchg
xchg
mov
out
add
jnp
dec
pop
jnp
push
pop
push
bound
inc
push
dec
pop
xor
std
cmp
stc
cmp
add
pop
daa
bound
pop
xor
sbb
sti
add
cld
notl
add
push
mov
mov
xchg
pushl
jmp
imul
xchg
cli
jae
lds
push
insl
dec
cs
push
push
cs
jl
cmp
add
gs
xor
movsl
cmc
insl
nop
scas
std
pop
xchg
push
bound
imul
jo
je
popa
dec
mov
xor
mov
or
pop
dec
cli
outsl
jmp
sub
xor
je
aas
hlt
insb
or
stc
pop
cli
packssdw
imul
je
outsl
push
sub
cmp
mov
push
add
jg
pop
inc
add
add
je
xchg
pop
sub
push
jno
jmp
jb
or
and
push
sbb
jae
pop
imul
jbe
pop
testl
ljmp
dec
lahf
xor
cmp
xchg
inc
push
je
inc
dec
mov
xor
aas
aas
push
xchg
push
inc
jae
push
push
data16
xor
add
pusha
inc
push
xchg
mov
add
mov
rclb
aas
into
inc
dec
out
lods
outsl
insl
lds
pop
outsb
mov
int3
jo
movsb
scas
push
je
cmpsb
outsl
jno
fcoms
ret
icebp
pop
outsb
test
fs
jp
push
outsb
outsl
fnstenv
ja
push
push
push
pop
outsb
jno
cmp
pop
pop
push
arpl
mov
add
xchg
mov
add
es
cmp
xor
js
pop
insb
xchg
bound
push
inc
sub
roll
sbb
push
sub
repz
jae
or
push
roll
out
in
lret
repz
pop
ljmp
push
mov
lret
add
out
xchg
add
xor
mov
and
push
add
xchg
xchg
outsl
jne
jae
push
testb
mov
pop
pop
xchg
adc
dec
testl
xor
push
xchg
getsec
pop
inc
bound
call
inc
add
xor
add
lret
adc
fxtract
dec
or
or
jmp
xchg
lock
test
shll
xchg
mov
test
cmpsl
daa
test
xchg
daa
test
add
jne
test
outsb
sub
xchg
xor
sub
xchg
out
sub
xchg
jg
jmp
xchg
sub
push
or
outsb
pop
inc
call
scas
bound
inc
outsl
testb
add
add
bound
dec
mov
and
mov
popa
incl
add
pop
arpl
bound
inc
push
pop
imul
andb
bound
dec
push
repz
fisttpll
add
das
bound
dec
es
inc
outsl
or
imul
popa
add
sub
imul
push
inc
popa
xchg
pop
arpl
xchg
mov
xorb
add
and
add
aas
sub
and
push
add
add
aad
outsl
imul
and
push
imul
pop
jno
mov
add
mov
jb
ret
lods
outsl
and
scas
jo
mov
push
je
stos
push
addr16
and
insl
jno
mov
add
fwait
add
xchg
lret
jg
insb
jno
fldenv
std
and
jb
mov
add
xchg
or
add
lock
jae
add
addr16
cmp
das
push
addr16
cmp
testb
xor
jae
lock
icebp
sbb
divb
add
add
and
out
push
push
cmc
lock
out
add
into
outsl
mov
fsts
adc
push
jbe
xchg
aaa
dec
clc
xor
loope
add
stos
out
lcall
and
sbb
popf
push
add
inc
inc
jg
or
cmp
cmp
add
inc
sub
inc
aaa
xor
fwait
and
ljmp
imul
jcxz
aas
insb
sbb
push
arpl
into
add
mov
add
mov
insl
xlat
add
jmp
push
ja
mov
repnz
sbb
or
mov
icebp
jae
js
imul
and
imul
outsb
add
arpl
or
and
sbb
or
pop
arpl
sbb
and
repnz
das
mov
add
jae
popf
repnz
cmp
add
dec
dec
mov
xor
pop
push
and
hlt
arpl
mov
daa
dec
or
cmp
inc
push
adc
dec
push
hlt
bound
add
pop
je
rep
cmp
sub
popl
and
push
push
fcoms
xchg
jle
dec
imul
push
or
push
cmp
jne
popa
xor
add
outsb
popa
sub
imul
and
xor
outsb
je
aaa
pop
sub
sbb
fwait
adc
aad
outsb
outsb
sti
insb
pop
addr16
dec
insl
jno
xchg
push
in
push
sub
pusha
outsb
lret
dec
mov
stos
cs
pop
and
mov
jo
mov
insb
bound
fmull
fsubrl
jns
mov
add
dec
hlt
or
dec
lds
cmp
xchg
dec
adc
pop
popa
repnz
adc
xor
insl
push
out
dec
xor
push
cmc
std
out
cmc
out
xor
hlt
sub
push
out
add
or
movsb
dec
add
bound
pop
repz
imull
adc
outsb
les
push
rolb
insb
add
addr16
push
mov
add
mov
je
pop
or
pushl
jp
addr16
outsb
adc
xchg
and
je
push
mov
movsb
outsb
or
addr16
addr16
bound
pop
cmp
push
inc
bound
cmp
inc
push
inc
or
xor
and
and
icebp
bound
jae
icebp
out
push
sbb
hlt
dec
or
add
bound
mov
repnz
sti
jmp
and
in
inc
int3
out
jno
int3
sub
push
arpl
jb
adc
pop
popa
popa
dec
add
outsl
and
popa
js
arpl
sbb
jb
sub
dec
gs
decl
add
pop
push
pop
gs
adc
ljmp
xchg
jo
pop
adc
pop
sbb
inc
std
bound
add
outsb
push
pop
pushl
mov
or
movb
popf
add
outsb
add
je
xchg
or
sbb
popa
decl
pop
and
dec
xchg
pushf
fs
shrb
dec
mov
push
mov
jno
xor
into
data16
xchg
lret
imul
push
jns
data16
inc
stc
imul
add
gs
add
xor
pop
push
xor
push
je
cmp
inc
and
xor
xor
aas
xchg
dec
pop
jb
aas
push
jmp
pop
jb
bound
cmc
push
arpl
xor
loop
push
arpl
bound
ss
pusha
xchg
and
pop
cmpsb
out
cmpsl
data16
iret
push
mov
int3
push
add
mov
lds
fwait
pusha
data16
push
pop
out
mov
sti
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
bound
jmp
add
xchg
bound
jmp
xchg
bound
jmp
xchg
sub
popa
bound
cmpb
add
xor
mov
inc
and
mov
sbb
les
xor
test
pop
int3
movsl
xor
movsl
xor
stos
xor
xchg
sbb
je
inc
call
dec
out
bound
inc
lcall
fiaddl
add
bound
cmpsl
add
jb
mov
pusha
jae
pop
dec
outsl
mov
adc
inc
dec
or
arpl
push
pop
inc
jecxz
pop
dec
dec
push
je
das
imul
pop
jb
sub
sbb
and
imul
das
pop
dec
or
je
out
sub
pop
jb
sub
pop
cmp
add
popa
adc
ljmp
push
es
or
jnp
push
push
mov
outsb
je
aaa
imul
pop
jb
sub
xchg
dec
push
pop
lds
arpl
aas
imul
insb
dec
insl
les
inc
ljmp
push
mov
push
jne
lea
into
cwtl
push
je
lcall
test
addr16
add
ret
cmp
add
daa
addr16
add
dec
push
dec
xor
pop
jmp
fs
das
or
dec
outsb
aas
dec
arpl
jnp
insl
cmp
dec
pop
and
cmp
and
repz
adc
and
add
leave
add
popa
in
sbb
div
les
adc
mov
hlt
ret
test
jbe
push
add
mov
hlt
out
shl
mov
imul
ret
sbb
bound
mov
inc
sub
insb
inc
inc
andb
mov
adc
xor
sub
bound
inc
pop
xor
xchg
and
add
rolb
jno
icebp
hlt
jbe
movsb
std
gs
add
sahf
and
insb
sbb
das
push
sub
and
mov
push
mov
mov
and
popa
enter
into
jae
je
add
jns
popa
mov
inc
test
and
mulb
mov
and
jae
jno
cmp
insl
mov
push
dec
sub
jmp
push
add
add
inc
insb
loopne
pop
insb
lods
and
jne
cmovbe
xor
mov
imul
add
add
adc
adc
pop
call
pop
dec
inc
xor
in
pop
je
jmp
inc
push
jb
or
jae
cld
push
push
pop
pop
push
cmp
imul
pop
jb
xor
pop
push
pop
jb
add
aaa
inc
insb
adc
pop
insb
sbb
cmp
jne
cmovbe
and
jbe
arpl
inc
xor
sbb
insb
hlt
sbb
in
pop
je
pop
push
arpl
inc
push
push
aad
xor
mov
inc
xor
mov
push
les
lds
gs
mov
pop
pop
movsb
jnp
inc
sbbb
add
jp
inc
aas
data16
xor
inc
dec
stos
add
bound
das
inc
push
lret
ds
push
testb
xor
jmpw
pop
bound
pusha
inc
add
inc
and
xor
push
sub
pop
sub
pop
add
out
xlat
divl
imul
icebp
or
repnz
add
std
add
jecxz
stc
push
cli
sub
add
out
mov
push
stos
add
push
cmpsl
cli
movsb
sub
bound
test
xchg
dec
jb
mov
das
stos
bound
pop
jb
cltd
inc
cmp
mov
jno
mov
inc
add
jge
bound
pusha
negb
ss
push
dec
dec
cli
ljmp
negb
xor
bound
mulb
mov
pop
xor
add
xchg
push
dec
sbb
add
icebp
or
sbb
mov
push
pop
cmc
xchg
push
inc
add
push
pop
sbb
icebp
scas
insl
adc
push
inc
shlb
pop
shrb
pop
jmp
outsb
negl
jp
arpl
xchg
push
jb
jo
insl
add
popa
jb
cli
jno
fsts
imul
dec
add
pop
add
inc
or
add
sar
jno
stos
sbb
sarb
push
mov
jae
sahf
adc
pop
mov
insb
movsl
pop
insb
insb
sahf
inc
aas
insb
cmpsb
add
das
sub
inc
add
and
aas
daa
imul
push
jae
adc
outsl
add
add
out
xor
insl
cmp
popa
and
jb
add
sub
jb
xchg
ficoms
inc
rclb
xchg
enter
out
cs
in
je
enter
push
push
cs
or
xchg
sub
and
push
cs
push
jno
dec
gs
pop
push
cs
push
je
sub
jnp
arpl
dec
gs
push
push
arpl
fwait
xor
les
jb
inc
pop
jno
jnp
pop
movsl
and
add
pop
xor
dec
ja
push
and
push
jbe
lods
and
bound
push
push
mov
push
jbe
xchg
push
inc
bound
xor
hlt
je
and
aaa
gs
out
inc
cmc
pop
and
lcall
cmc
hlt
push
cmp
repz
add
push
pop
and
add
pop
in
and
pop
add
in
testl
add
cmc
cli
sbb
shlb
pop
mov
stc
lds
adc
push
jne
or
call
xchg
adc
inc
out
pop
fwait
outsb
push
inc
mov
push
cmc
imul
imull
and
sbb
push
dec
cmp
je
inc
add
out
imulb
out
adc
loope
and
flds
je
sti
hlt
bound
repz
cmc
gs
fisttpl
push
leave
aam
data16
out
pop
and
ljmp
fs
gs
pop
jb
jno
push
scas
popa
adc
imulb
fimull
and
or
and
sub
push
or
out
xor
data16
adc
sbb
inc
jne
add
or
pop
adc
or
sbb
jae
dec
lcall
dec
add
jb,pn
rolb
and
and
or
mov
or
mov
outsl
cltd
or
jge
pop
inc
and
daa
pop
jae
xor
cmp
imul
insb
gs
xor
pop
adc
mov
inc
orb
add
test
jle,pn
pop
add
pop
pop
lds
inc
jns
pop
pusha
loopne
addr16
ficoms
xor
push
add
push
je
jmp
cs
push
add
adc
push
fs
add
pop
imul
sbb
lret
push
stc
push
pop
jne
dec
gs
ret
xchg
push
pop
jno
pop
pusha
insb
add
pop
pop
push
mov
mov
das
pop
sbb
aaa
bound
pop
cmp
pop
inc
add
data16
mov
add
pop
xchg
adc
push
xor
add
xor
adc
inc
push
xchg
adc
pop
out
push
push
cli
bound
cmc
lock
add
std
jmp
cmp
icebp
sbb
lock
incl
pop
lret
pop
les
pop
out
out
stos
icebp
cld
outsl
add
insl
fcmovnbe
bound
mov
insl
enter
mov
pop
lock
mov
std
jno
jb
jmp
inc
add
insl
xchg
add
repnz
lcall
bound
add
push
jae
dec
hlt
bound
adc
hlt
sti
imul
push
hlt
out
je
loopne
pop
das
cmpsb
adc
sar
sub
adc
out
bound
xchg
sbb
cmp
add
add
popl
jb
aas
xor
fists
push
dec
decl
jb
roll
insb
gs
js
lret
pop
pop
inc
adc
and
adc
add
add
sbb
data16
pushl
sti
and
and
or
jb
sub
inc
inc
js
or
push
or
push
fmuls
jae
lcall
mov
or
mov
dec
xor
lods
adc
or
xchg
sub
ret
jb
cmp
js,pt
pop
push
jb
addr16
add
stos
sahf
push
add
push
jno
movsb
push
fs
leave
bound
lods
pop
jb
lds
jae
cmp
lds
dec
imul
pop
jb
jns
outsb
das
in
pop
sub
bound
aas
je
enter
dec
dec
imul
and
pop
add
pop
addr16
jg
pop
add
inc
insl
lock
pop
add
aad
pop
mov
cli
push
mov
or
bound
mov
loopne
jne
mov
pop
pop
mov
lds
adcb
jb
cltd
bound
mov
jb
orb
mov
daa
push
mov
xor
inc
xlat
jp
inc
lret
pop
popa
push
mov
push
add
add
pop
add
aad
push
call
mov
dec
ds
movb
rclb
in
add
loope
je
mov
aam
add
mov
addr16
mov
jae
ror
shll
add
shlb
xchg
les
dec
leave
outsb
int3
pop
nop
fs
dec
rcrb
bound
ss
mov
add
add
dec
aam
jmp
xchg
mov
dec
inc
xlat
pop
pop
idivl
outsb
and
lret
lods
mov
outsl
shll
jo
andl
gs
mov
push
and
mov
ja
mov
and
and
das
subb
mov
jb
xor
into
mov
jb
lods
popa
add
lods
jo
and
pop
dec
and
jb
sbb
jb
push
mov
outsl
jae
mov
push
popa
in
mov
outsl
xchg
mov
push
arpl
popf
push
jb
dec
xor
popf
dec
pop
in
sub
xchg
and
shll
mov
pop
pop
aad
bound
jb
inc
add
lret
inc
ret
popa
mov
dec
outsb
mov
cmp
arpl
dec
jo
sbb
jb
sub
xchg
cmovge
sub
popa
clc
dec
fs
and
je
sbb
inc
clc
push
jb
dec
cmp
pop
jb
in
dec
insl
and
add
bound
aas
ljmp
pop
add
dec
push
cmc
mov
icebp
int3
dec
sub
int3
sbb
mov
pop
ret
push
mov
and
pop
mov
repz
lret
sti
pop
cmpsl
bound
push
mov
fisubs
mov
sub
movsb
fwait
xor
rcrb
xchg
xor
les
mov
push
cmp
out
pop
mov
push
xor
jle
and
fwait
aas
xor
add
add
insl
jnp
orb
roll
cmp
scas
push
inc
mov
shrl
dec
mov
add
scas
push
or
addr16
rcrl
mov
pop
aam
ret
xchg
mov
arpl
push
fiaddl
shrb
mov
mov
enter
lcall
jno
ljmp
add
add
mov
add
inc
xchg
arpl
mov
and
insb
gs
xchg
data16
data16
fisttpl
js
outsl
xchg
gs
xchg
cs
popa
jae
outsb
imul
xchg
push
popa
popf
mov
test
xchg
mov
push
js
push
push
outsb
mov
pop
jnp
pop
jo
add
jb
ljmp
insb
insb
aas
xchg
mov
gs
scas
pop
jae
cltd
imul
dec
outsl
sub
dec
popa
xchg
out
add
daa
jb
ljmp
xor
sub
sub
mov
ja
cltd
das
jb
test
add
js
jb
xchg
das
popa
icebp
movsl
add
jmp
ja
pop
add
fldt
je
arpl
dec
les
jb
jne
pop
gs
inc
stos
mov
jo
bound
addr16
adc
jg
es
and
addr16
or
xor
add
sbb
imul
xchg
mov
es
lods
mov
xor
stos
sub
jo
inc
lret
jns
xchg
mov
sub
rorb
add
cmc
mov
xor
lret
cmp
daa
test
inc
sub
les
ss
leave
std
xor
enter
mov
adc
xchg
pop
inc
push
test
push
dec
cmpsb
out
dec
mov
push
pop
bound
jmp
jg
insb
mov
push
in
shll
lret
gs
sub
jge
sarl
mov
ret
push
lcall
push
mov
mov
insl
dec
sahf
iret
pop
cmp
dec
sbb
pop
leave
in
sbb
jb
lcall
adc
std
push
cmpsb
pop
fcmovb
addb
into
pop
lds
add
xchg
popa
jb
inc
inc
push
xor
insb
insb
roll
pop
outsl
adc
jae
sub
data16
xchg
jb
sbb
pop
imul
mov
lret
pop
dec
outsl
leave
lcall
fmull
dec
push
jp
dec
dec
jns
push
inc
lea
outsl
jae
xchg
pop
push
xchg
xchg
inc
frstor
cmp
movsl
sub
or
xor
insl
repz
push
xor
push
add
call
sbb
push
in
jno
out
pop
dec
repnz
repnz
pop
sbb
push
clc
xor
push
dec
das
les
xor
outsb
repz
mov
ss
jle
aaa
movsb
push
inc
cmp
add
mov
ret
jb
jl
data16
add
mov
pop
jmp
mov
add
ret
insl
test
es
out
bound
es
sub
push
inc
shlb
xor
lcall
test
push
dec
test
lods
push
add
inc
mov
sub
out
sub
pop
rcrb
sti
mov
inc
daa
in
sbb
stos
adc
mov
xor
out
fists
sti
dec
mov
add
test
add
mov
jmp
pop
xchg
jae
mov
ret
pop
mov
in
push
lods
add
addr16
les
ja
mov
mov
test
shll
je
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
shrl
stos
into
arpl
aas
shrl
outsl
adc
fadd
jo
jl
jno
jle
je
xchg
dec
pop
arpl
mov
add
xchg
xchg
popa
xor
nop
jb
fistpll
decl
popa
xor
mov
popa
outsl
jno
test
mov
outsl
sub
jne
and
je
dec
pop
arpl
jge
insl
sbb
add
ljmp
je
dec
sub
add
mov
rorb
outsl
popl
insb
imul
add
mov
xchg
data16
cmpsl
push
sub
mov
pop
xor
test
jno
push
sub
jnp
pop
jno
push
xor
cmp
pop
jne
and
bound
and
sbb
das
cmc
pop
xor
sub
es
xor
sub
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
xor
fwait
sub
ljmp
bound
and
iret
cmp
mov
mov
sar
fisubrl
jae
into
sub
fidivl
jp
rcrl
xchg
iret
shlb
push
into
scas
das
xchg
iret
shlb
ret
xchg
xor
test
add
add
bound
sub
aad
push
into
out
mov
out
mov
and
lret
sub
cmp
in
rorb
rolb
cmp
mov
lds
nop
shlb
shlb
mov
cli
xlat
insl
sti
mov
inc
sbb
and
scas
int3
pop
aad
addr16
stos
bound
add
mov
bound
int3
addr16
mov
scas
jl
arpl
outsb
lret
bound
jb
inc
popf
insl
xchg
insb
mov
sub
xchg
enter
jle
jmp
jl
sub
pop
movsl
mov
add
xchg
popa
inc
stos
mov
imul
sbbl
mov
add
xchg
dec
orb
lcall
jns
fs
insb
loopne
add
insb
outsl
int3
jnp
inc
sbb
xchg
pop
add
xchg
add
imul
insb
popa
jecxz
jb
sbb
gs
add
outsb
je
push
xchg
popa
pop
and
push
push
jg
jo
xchg
jge
jb
insl
and
add
add
mov
les
pop
insl
mov
movsb
out
mov
add
mov
pop
and
add
pop
sub
xchg
jbe
dec
sub
jnp
jecxz
ja
add
pop
cmp
xor
xor
jb
add
in
dec
inc
push
hlt
cs
dec
cmp
outsl
ss
sub
sbb
cmp
icebp
das
add
into
or
or
inc
fcoms
push
push
in
dec
push
cmc
aam
pop
in
sbb
lds
cs
cmp
sarl
push
rol
sbb
mov
out
mov
and
and
or
jne
sti
add
cli
das
xchg
stos
cmp
jo
les
push
lret
add
cmp
int3
xor
rorb
mov
jge
xor
xchg
xor
cmpsl
add
ret
mov
leave
in
jno
ret
mov
inc
cmp
mov
adc
insl
cmp
jl
inc
outsb
bound
xchg
arpl
rolw
pop
pushl
add
mov
ja
mov
add
shlb
shll
int3
mov
inc
enter
jmp
xchg
bound
jmp
roll
test
jnp
aas
bound
sti
lea
mov
jo
jge
mov
inc
dec
inc
push
loope
sub
jge
scas
add
add
add
and
dec
cltd
add
js
ja
xchg
popa
pop
add
lcall
xorw
outsb
xchg
mov
inc
xchg
xchg
insb
outsl
or
xorb
gs
enter
sub
gs
add
mov
pusha
popa
add
pusha
xor
add
das
add
xchg
fadds
fs
and
sub
push
add
add
xchg
jbe
popa
xchg
addr16
xchg
jb
xor
xchg
add
xchg
push
add
dec
add
xchg
outsb
sbb
je
insl
mov
push
push
scas
arpl
outsb
mov
push
sub
sbb
jmp
je
pop
arpl
and
je
dec
inc
jno
and
cmp
dec
push
push
arpl
jb
cmp
inc
es
arpl
popf
sub
add
les
inc
lcall
or
lcall
test
pop
in
out
icebp
inc
push
cmc
rcrb
in
add
repnz
pop
mov
mov
ds
lds
daa
movsb
aam
ss
add
fs
or
xchg
scas
adc
jne
or
add
jecxz
adc
vpavgw
add
out
data16
mov
and
mov
add
bound
and
jno
push
cmpsl
dec
mov
lods
jo
jae
mov
shll
mov
mov
xchg
mov
into
pop
jmp
mov
inc
dec
mov
addr16
cmpb
sbb
lcall
add
add
cwtl
push
sbb
pop
bound
mov
bound
lods
cltd
push
movsb
xchg
mov
add
push
fwait
dec
add
subl
gs
test
std
imul
ja
nop
fs
or
jno
or
pop
jbe
xorb
jg
jo
sub
add
xlat
mov
sub
out
je
jl
sub
aas
cltd
inc
outsl
addb
jb
andl
movsl
push
jne
pop
pop
inc
xchg
xchg
imul
insb
jne
fs
outsl
fsts
sub
das
insl
cmp
push
insb
dec
or
inc
sub
inc
aas
in
add
sbb
add
out
popa
add
dec
push
imul
dec
inc
jmp
cmp
stc
pushf
sbb
xchg
cmp
int
aas
arpl
sahf
sbb
sub
sahf
and
lahf
add
mov
jno
jle
addr16
dec
inc
xchg
pop
push
dec
sbb
xchg
insb
cmp
push
filds
imul
addr16
sbb
cmp
les
xchg
cmpsb
popf
sbb
add
lret
andb
rcrb
xchg
into
out
xchg
mov
out
xchg
out
shll
movl
roll
bound
aas
add
and
rorl
loop
out
xchg
and
sub
roll
cmp
add
andb
xchg
pop
and
add
aam
jmp
push
mov
jno
xchg
cmpsl
jno
pusha
shll
xchg
xchg
pop
mov
imul
mov
pop
cmpsl
jns
jno
in
pop
sbb
insb
mov
cmpsb
push
mov
roll
inc
aam
pop
arpl
je
pop
jbe
inc
sbb
mov
shrl
jbe
pop
push
push
outsb
cmp
mov
fs
mov
outsb
gs
mov
jmp
lea
xor
and
outsl
imul
add
push
inc
sub
sbb
popa
jae
jg
gs
lods
push
inc
sbb
subb
xchg
pop
push
add
out
popa
dec
jl
jnp
aaa
sub
cmp
ss
cmp
sahf
sub
pushf
xor
xor
ss
inc
xchg
outsb
dec
das
mov
inc
sbb
lds
add
dec
sub
inc
imul
push
sub
outsb
cmp
xlat
ja
sub
cs
pop
xor
push
dec
inc
jmp
xor
add
fnstsw
xor
das
and
xchg
out
xor
imul
cmp
sbb
cli
cmpsl
pop
jno
jg
cmp
xchg
push
in
fcos
shrl
and
pushf
xor
shrb
dec
mov
push
add
mov
nopl
cmp
pop
scas
push
inc
fs
sbb
rolb
push
scas
pop
in
je
dec
add
inc
mov
fiaddl
addr16
movsl
dec
imul
and
inc
cmp
push
lods
dec
inc
scas
test
xchg
pushf
mov
mov
xchg
xor
into
out
lret
inc
icebp
mov
loopne
bound
and
iret
push
sbb
mov
push
pop
les
xor
bound
jge
or
sbb
add
lret
add
lahf
shlb
mov
add
bound
mov
lret
jo
xchg
jb
jmp
xchg
mov
inc
mov
or
out
dec
jecxz
je
push
jmp
mov
inc
sub
out
gs
xchg
arpl
lcall
arpl
mov
xchg
addr16
add
test
mov
add
ja
add
xchg
pop
jae
push
outsl
lods
jb
push
lcall
imul
mov
fwait
xchg
pop
imul
popa
jne
pop
add
pusha
jb
fcompl
data16
addb
cld
pusha
je
pop
arpl
roll
and
pusha
cmp
jg
imul
sub
jb
test
outsb
push
push
xchg
push
jne
xchg
push
pop
mov
adc
insl
lds
pop
ret
cmpsb
add
movsl
scas
xor
jle
add
push
jno
jo
fs
jnp
jb
popa
das
imul
dec
data16
imul
arpl
notl
dec
es
je
add
sti
and
add
cmp
sub
pop
push
fcomps
data16
out
jae
sub
clc
aad
pop
add
add
fchs
arpl
mov
sub
jmp
lds
mov
out
ljmp
sbb
mov
lds
add
xchg
aaa
in
lds
xor
or
jns
std
jecxz
sar
add
imul
pop
xchg
test
push
mov
add
leave
aad
dec
leave
into
adc
dec
bound
and
mov
adc
xor
xchg
push
sti
bound
xor
enter
mov
cmp
cmc
into
add
movsb
lret
scas
nop
pop
lods
bound
mov
ret
pop
xor
xchg
sub
add
or
adc
or
inc
addr16
je
ret
or
lahf
inc
add
bound
xchg
inc
js
mov
add
scas
fiaddl
int3
mov
mov
cmpsl
pushf
into
arpl
xchg
mov
mov
jge
addr16
out
insl
fwait
stos
mov
test
bound
adc
cs
or
jb
mov
fs
pop
inc
xlat
jo
insl
rclb
daa
inc
jg
mov
inc
outsl
pop
dec
mov
data16
dec
scas
data16
aam
mov
pop
pop
scas
data16
pop
pop
jmp
pop
jmp
pusha
out
popa
and
arpl
popa
jmp
jmp
fs
popa
jmp
add
add
popa
lock
popa
sbb
push
or
imul
or
xchg
out
add
add
or
jne
mov
into
mov
mov
mov
lods
mov
lods
mov
sbb
add
sbb
add
and
add
push
mov
push
mov
jnp
add
cld
mov
add
sub
add
or
mov
or
jmp
or
xor
or
int3
decl
add
out
or
mov
or
mov
arpl
add
jmp
add
std
cmpsb
add
cld
cmpsb
add
es
and
add
and
add
and
add
and
add
pop
daa
add
pop
daa
add
es
add
and
ds
add
sub
add
sub
add
sub
daa
add
adc
add
add
push
cmpsl
add
adc
cmpsl
add
sbb
add
sbb
test
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
scas
int3
je
int
jno
xchg
xchg
push
sub
add
cmpsl
push
adcb
dec
and
js
lcall
cmp
or
addr16
mov
scas
outsl
leave
nop
push
and
mov
push
pop
or
fimull
add
and
enter
lahf
insl
and
push
add
add
adc
and
sbb
and
dec
inc
sbb
insb
jecxz
js
int3
push
je
outsb
pop
outsl
push
sub
pop
popa
js
jb
jb
push
cs
add
adc
xor
jmp
add
jb
nop
je
je
outsb
jb
jmp
addb
xchg
es
add
add
adc
adc
push
xor
pop
add
es
stc
xlat
sub
sti
adc
jecxz
arpl
fiadds
push
repz
arpl
scas
es
jmp
mov
daa
gs
stos
and
fwait
xor
mov
mov
xor
outsl
sub
mov
arpl
add
jnp
cs
add
and
pop
pop
insl
bound
jb
xor
xor
sub
mov
es
xchg
fldcw
leave
shrb
sub
mov
add
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
add
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
add
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
jg
add
outsl
bound
add
add
jg
add
jg
add
outsl
bound
add
add
aas
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
popa
add
jmp
add
popa
add
out
popa
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
loopne
stc
ret
jns
mov
xor
dec
loopne
mov
add
imul
xor
add
dec
add
sub
adcb
add
xchg
dec
add
xchg
dec
add
add
xchg
out
xchg
out
xchg
out
jmp
out
xchg
out
shll
repz
xor
or
xor
add
xchg
bound
xchg
bound
add
xlat
add
jmp
xchg
jmp
add
sbb
xchg
rcl
adc
aad
addb
add
pusha
and
jle
adc
icebp
xchg
pop
add
insb
jge
lock
pop
add
flds
add
add
call
fwait
pushw
fsubrp
push
adc
ficompl
in
lds
jmp
xchg
dec
pop
inc
push
add
incl
leave
push
and
les
sti
jns
sub
or
daa
fdivs
sbb
add
add
add
xchg
bound
jmp
pop
xor
in
xor
in
dec
xor
in
bound
jmp
xor
std
jmp
and
add
xor
sti
xor
add
pop
std
add
pop
add
jmp
add
sti
xor
pushl
std
add
xor
add
xor
mov
pop
std
add
xor
add
add
pop
add
stos
pop
std
jg
add
jnp
std
jnp
ljmp
add
jg
std
jnp
incb
jnp
add
outsl
data16
add
xor
add
data16
das
data16
das
xor
cmp
add
cmp
sbb
add
inc
add
xchg
inc
std
call
inc
std
xchg
aas
add
add
loope
add
xchg
aas
std
call
aas
std
inc
inc
std
mov
inc
std
ljmp
cmp
call
inc
add
mov
std
incb
aas
add
xchg
sbb
add
cmp
adc
sbb
add
bound
test
loop
test
add
loop
adcl
pop
add
movl
xchg
add
loop
add
loop
adcl
out
xchg
push
add
bound
add
loop
add
bound
test
loop
add
out
xchg
movl
add
cmpsb
movl
adc
arpl
jmp
adc
bound
or
push
orb
push
add
lcall
jmp
adc
push
sub
push
add
xchg
bound
leave
adc
bound
jmp
xchg
bound
jmp
sbb
jmp
add
xchg
bound
or
push
sub
push
add
xchg
bound
jmp
xchg
bound
add
add
aas
popa
add
das
arpl
add
popa
add
aas
popa
add
daa
arpl
add
arpl
or
arpl
or
bound
add
popa
add
mull
add
bound
or
pusha
add
jmp
or
bound
add
pusha
add
mov
pusha
add
add
scas
bound
or
pusha
add
cmpsl
pusha
add
scas
pusha
add
scas
bound
add
bound
add
add
outsl
add
jg
add
jg
add
xchg
cmp
add
xor
call
cmp
add
cmp
add
inc
add
xchg
inc
incl
sahf
cmp
lcall
cmp
incl
add
xor
add
cmp
add
xor
add
inc
incl
xchg
cmp
add
cmp
add
inc
call
xor
add
inc
add
sahf
out
xchg
call
jecxz
sub
add
jecxz
bound
push
call
add
add
call
add
out
xchg
bound
mov
add
out
xchg
bound
push
call
add
sub
add
call
add
out
push
call
in
sub
add
call
in
sub
add
arpl
jecxz
sub
imul
add
add
loop
out
loop
call
xor
jmp
xchg
bound
jmp
xor
loop
addr16
loop
out
bound
call
cmc
sub
push
xchg
bound
push
xchg
bound
call
mov
std
call
mov
std
imul
add
sub
jmp
jle
jge
out
pop
add
outsl
pop
addb
aas
std
aas
jge
outsl
data16
outsl
data16
aas
pop
or
aas
data16
pop
or
das
data16
aas
pop
add
pop
or
das
pusha
or
pop
or
lcall
add
pop
or
pop
add
pop
or
pop
or
lcall
inc
out
pop
add
add
out
pop
or
pop
or
pop
add
scas
pop
add
pop
or
pop
or
pop
add
scas
pop
or
cmp
add
cmp
add
cmp
or
add
aam
add
xchg
cmp
or
cmp
add
cmp
add
cmp
or
add
cmp
add
push
cmp
or
or
add
xchg
cmp
add
add
push
cmp
or
cmp
or
or
add
push
out
xchg
movsb
out
mov
add
mov
out
xchg
out
sahf
mov
out
xchg
mov
out
and
add
xchg
xlat
inc
and
adc
xchg
xlat
inc
and
out
xchg
xor
push
out
push
xlat
add
out
xchg
and
xchg
xor
xchg
out
xchg
testl
xchg
and
xchg
out
push
bound
fsts
and
xchg
bound
stc
xchg
mov
and
xchg
bound
stc
aad
add
add
aad
and
aad
add
aad
add
aad
and
xchg
bound
jmp
xchg
bound
stc
xchg
mov
add
aad
and
xchg
mov
add
xchg
bound
jmp
push
bound
jmp
push
bound
fsts
mov
add
xchg
mov
add
push
mov
add
fbld
and
add
arpl
add
arpl
lahf
mov
add
arpl
mov
add
outsl
mov
add
dec
arpl
pop
mov
and
cmp
sub
add
arpl
add
sub
cmp
sub
add
sub
add
bound
add
bound
add
bound
add
add
bound
add
bound
add
sub
out
sub
add
cmp
and
cmp
add
cmp
pop
lcall
and
cmp
incl
cmp
pop
xchg
cmp
add
cmp
pop
xchg
cmp
add
cmp
and
cmp
call
add
cmp
add
cmp
add
cmp
and
cmp
jmp
out
jns
jmp
add
pop
out
jbe
out
xchg
out
xchg
jmp
sti
jns
out
xchg
jmp
add
and
out
imul
add
add
jmp
repz
push
out
dec
and
cmpsl
repz
push
out
xchg
push
cmpsl
repz
add
push
daa
add
out
xchg
push
daa
hlt
xchg
push
out
xchg
out
xchg
push
add
loop
add
in
std
sub
pop
adc
xchg
bound
jmp
ret
jmp
xchg
pop
add
lcall
add
add
and
jmp
xchg
bound
test
xchg
bound
jmp
gs
add
xchg
pop
add
xchg
pop
add
inc
pusha
adc
inc
and
test
xchg
pop
adc
and
pusha
add
add
bound
sub
pop
add
mov
pop
add
out
pop
add
scas
cs
sldt
mov
add
outsl
pop
add
outsl
pop
add
mov
das
std
movq
std
imul
add
das
add
jg
add
outsl
das
add
das
das
std
aas
das
std
aas
pop
add
outsl
pop
add
outsl
das
add
jnp
std
aas
pop
add
das
pop
add
mov
jbe
inc
ja
ljmp
pop
add
das
pop
add
jmp
add
int
stc
cmp
add
cmp
cs
fnstcw
add
stc
es
mov
shrb
ljmp
cmp
add
cmp
decl
or
add
aaa
and
imul
sub
pop
or
add
icebp
and
add
inc
test
cmp
pushl
or
add
imul
adc
and
or
out
xchg
out
xchg
and
and
add
out
xchg
out
xchg
out
xchg
bound
sub
test
and
sub
and
sub
mov
adc
add
jns
fwait
sub
and
sub
and
sub
and
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
out
jns
std
xlat
jno
std
adc
and
and
scas
and
cmp
mov
and
dec
scas
and
pop
jle
std
test
outsb
and
mov
std
addl
jle
std
xlat
jle
std
outsb
and
mov
and
lds
pop
std
gs
pop
std
jno
pop
std
xchg
mov
pop
std
das
scas
pop
std
or
jg
std
icebp
jae
std
repz
std
shll
add
std
jmp
inc
std
incl
inc
std
ljmp
add
jge
std
call
inc
std
ljmp
inc
std
incl
add
inc
std
out
arpl
add
dec
std
mov
inc
std
call
dec
std
dec
dec
std
jmp
std
pushl
std
call
dec
std
incl
dec
std
lcall
dec
std
ljmp
add
test
arpl
add
dec
std
ljmp
arpl
add
std
call
xor
pushl
int
ljmp
iret
and
add
and
and
sbb
add
xchg
mov
and
add
and
icebp
ljmp
loope
and
fxch
and
rcl
and
leave
and
rorl
add
push
and
test
cmc
sub
cltd
loop
call
or
incl
adc
pushl
daa
ljmp
daa
jmp
daa
incl
add
daa
call
xchg
dec
push
mov
inc
push
imul
xor
push
sub
push
sub
and
sbb
sbb
add
adc
fldt
or
in
add
std
daa
stc
sbb
jmp
jmp
sbb
xor
rcrl
ja
rcrl
daa
mov
cmpsl
daa
test
sbb
jno
add
xchg
sbb
or
daa
jns
stos
es
mov
es
sbb
std
jg
sbb
std
daa
js
std
xor
jnp
std
icebp
jae
std
jecxz
sbb
std
mov
sbb
std
aaa
hlt
sbb
jmp
hlt
sbb
arpl
sbb
jnp
sbb
stos
hlt
sbb
fwait
mov
std
popl
add
add
mov
std
jmp
mov
std
shll
std
and
std
shll
je
std
shll
arpl
std
add
std
std
ljmp
add
mov
std
aas
pusha
add
movsl
std
jmp
pusha
add
pop
add
call
jmp
std
cmp
inc
push
incl
add
out
pop
add
dec
push
call
pushl
std
incl
std
lcall
std
pushl
std
in
std
push
std
push
std
ljmp
std
jns
jg
add
mov
cs
sti
ret
jmp
repz
xchg
mul
pop
repnz
jmp
mov
enter
out
pop
add
test
in
bound
repnz
fdiv
in
bound
xchg
repz
incl
stc
add
movsb
out
cmpb
jge
add
je
lock
inc
pop
out
pusha
cmp
dec
out
pusha
aaa
gs
data16
xchg
push
out
pusha
aaa
insl
shrl
jecxz
xchg
xor
add
xchg
loopne
jns
cli
add
add
xchg
shl
testb
add
jg
leave
mov
mov
out
mov
movsb
sti
mov
mov
cmpsl
mov
aam
xchg
push
bnd
sub
arpl
out
mov
push
je
std
add
dec
jecxz
jg
jmp
jg
jecxz
xchg
adc
xor
sbb
add
cmp
add
or
xor
adc
mov
pop
andb
jg
rolb
insl
enter
lret
arpl
std
lcall
insl
mov
fwait
cmp
lods
cmp
push
mov
cmpl
sub
pop
push
out
movsb
addr16
incl
aas
jmp
add
xchg
addl
cmp
mov
lahf
arpl
mov
test
xchg
adc
push
imul
sbb
data16
bound
xor
imul
jae
push
data16
bound
std
jmp
insb
jae
adc
pop
pop
ds
pop
inc
imul
add
or
add
inc
imul
pop
inc
gs
xor
adc
dec
or
push
sbb
inc
xorl
jb
add
add
insl
shrb
lock
out
xlat
or
je
inc
out
in
bnd
es
insl
clc
and
mov
leave
xor
arpl
shl
inc
add
mov
fsubr
jbe
or
dec
xchg
shl
sti
jmp
mov
out
movsb
lock
stos
jae
loop
fs
or
jp
pop
in
push
scas
bnd
lahf
clc
inc
jg
in
push
bnd
or
adc
lods
in
outsl
push
out
dec
popa
es
mov
jmp
adcl
out
xchg
hlt
cmp
add
add
test
ret
mov
fstpt
shl
mov
loop
jg
icebp
ljmp
testl
nop
cltd
out
mov
divl
push
fldl
adcb
aam
push
hlt
add
dec
clc
js
push
clc
je
ds
jle
shll
add
add
mov
push
inc
add
mov
inc
push
roll
cmp
push
ljmp
jle
insb
or
jl
add
mov
int3
push
adc
arpl
pop
mov
aad
xchg
jb
addr16
jb
xor
arpl
xor
outsb
mov
adc
jb
idivb
jp
push
inc
addb
je
add
xchg
jp
cs
inc
jmp
pop
push
jb
std
popa
jae
dec
xor
push
jno
or
inc
cmp
push
mov
outsb
cwtl
pop
std
pushl
inc
js
adc
nop
sti
popa
jae
pusha
lods
add
jno
popa
or
pop
cld
popa
cmp
pusha
gs
add
outsl
popa
and
or
outsl
add
outsb
or
das
xor
add
imul
bound
add
lea
pop
insl
xor
inc
inc
orl
popa
arpl
add
inc
call
inc
lods
out
dec
push
fistps
or
push
xchg
dec
jmp
jae
cmp
data16
add
dec
jmp
dec
sti
retw
data16
xchg
dec
jmp
jae
shl
jo
add
sub
pusha
sti
or
icebp
xchg
int3
in
fbld
in
jae
sub
mov
insl
stos
out
xor
out
add
stc
repnz
fistpll
xchg
mov
bound
in
stc
popa
mov
inc
jge
leave
jns
inc
int
cltd
and
cwtl
bound
roll
sti
imul
ret
mov
push
add
lds
add
jge
add
fs
repnz
add
mov
xchg
mov
hlt
mov
in
mov
xchg
out
mov
cli
js
push
add
xchg
loop
xchg
test
fidivs
add
icebp
xchg
arpl
lcall
pop
sarl
add
loopne
arpl
mov
inc
rclb
rclb
arpl
fdivl
std
or
push
xor
jno
insb
jmp
jb
insb
std
cmp
arpl
jns
xor
lods
xchg
cltd
add
das
test
mov
xchg
pusha
xchg
insb
test
mov
mov
das
test
add
bound
xor
sbb
imul
push
je
xor
std
mov
xor
push
mov
dec
je
xor
adc
add
xor
ljmp
adc
dec
ds
add
outsl
push
inc
adc
outsl
outsl
push
add
inc
fs
pop
fs
bound
popa
fs
loopne
jae
nop
bnd
loop
pop
jnp
add
mov
pusha
insl
out
push
pusha
add
jns
out
jne
add
xchg
pushf
call
insb
xor
cmp
loopne
mov
add
xor
pusha
sub
add
xchg
imul
or
add
or
jae
add
or
pushl
add
lds
in
jb
stc
add
cmp
push
mov
add
in
in
mov
xchg
mov
mov
and
mov
pushf
in
jg
fbld
icebp
dec
xchg
jle
js
dec
add
xchg
inc
bnd
pop
es
cmp
out
xchg
out
xchg
out
add
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
add
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
jmp
xchg
bound
add
popa
add
das
popa
add
das
popa
add
aas
popa
aas
popa
add
das
popa
add
dec
push
int3
int3
loop
int3
int3
arpl
jmp
or
fimull
sbb
fldpi
push
dec
mov
leave
jb
outsb
xor
outsb
mov
fildl
or
loop
imul
cmpb
xchg
add
scas
lods
pop
mov
ror
xlat
jmp
jb
mov
flds
sbb
add
push
add
mov
cmpsb
in
fimuls
dec
clc
or
inc
add
flds
sbb
inc
add
fsts
sbb
outsb
add
shll
add
lahf
xlat
push
hlt
adc
push
mov
xlat
dec
hlt
lea
push
lock
flds
cmp
push
mov
add
dec
call
adc
xchg
sbb
jle
mov
or
push
mov
pop
inc
or
fistpll
jmp
dec
rorb
push
int3
int3
dec
push
int3
int3
loop
int3
int3
arpl
jmp
repnz
mov
mov
mov
sub
or
adc
mov
add
add
add
pusha
inc
add
je
push
push
bound
push
js
push
xchg
jo
push
xlat
bound
cld
xchg
bound
add
mov
out
add
mov
sbb
or
fldl
sbb
mov
call
push
xlat
bound
loop
aas
add
xor
add
add
int3
int3
rclb
int3
int3
lret
int3
loop
int3
int3
inc
fucomp
mov
cwtl
fnstsw
xor
fwait
or
push
int3
int3
lret
int3
loop
int3
int3
inc
fucomp
mov
push
mov
dec
ljmp
cmpsl
ror
push
int3
int3
dec
push
int3
int3
bound
int3
int3
ret
fucomp
xorl
add
bound
xchg
mov
push
inc
add
xchg
fildl
scas
cli
add
fldl
cli
mov
les
xchg
adc
scas
or
or
scas
cld
mov
cmpsb
ror
fucomp
push
fstps
add
lahf
fldl
adc
push
mov
dec
dec
adc
gs
cld
xchg
rolb
mov
add
pop
mov
int
je
bound
add
add
push
rorb
pop
int3
int3
dec
pop
int3
int3
bound
int3
int3
jecxz
jmp
sahf
bound
add
jb
inc
xchg
movsl
ror
pop
int3
int3
dec
pop
int3
int3
loop
int3
int3
arpl
jmp
bnd
inc
mov
ja
xchg
push
test
push
pop
mov
jecxz
or
cld
xchg
fildl
adc
adc
inc
add
mov
add
xchg
sti
push
mov
add
sbb
push
jno
or
adc
cli
lcall
inc
pop
fisttpl
mov
add
setbe
push
fildl
sbb
fistl
or
jb
dec
sahf
fistl
xchg
jno
dec
fadds
or
mov
inc
or
add
pop
out
flds
std
mov
fucomi
xorl
inc
in
xchg
in
inc
incb
push
fsts
or
jecxz
call
mov
add
bound
lock
mov
add
test
arpl
add
loopne
lret
pop
add
mov
adc
add
fisubrs
cld
mov
cmpl
push
add
mov
mov
xchg
lcall
sbb
pop
add
fildl
or
pop
add
pop
mov
pop
or
add
loope
adc
add
fisttpl
call
loope
add
add
orl
aaa
bound
add
mov
jecxz
mov
jnp
std
ljmp
mov
mov
add
xchg
clc
sbb
or
pop
add
lahf
cld
push
out
in
cli
fchs
ret
or
lahf
fmull
loop
push
mov
add
sbb
pop
xchg
clc
xchg
mov
add
add
loopne
push
std
jns
loop
push
pop
int3
int3
ret
xlat
jmp
jb
push
ljmp
flds
scas
push
add
xlat
inc
clc
cli
cmp
les
xchg
adc
scas
or
sbb
scas
cld
mov
movsl
ror
push
int3
int3
inc
xlat
jmp
subb
stos
outsb
push
inc
add
xchg
add
mov
movsl
ror
push
int3
int3
inc
xlat
jmp
mov
lahf
adc
add
sbb
xlat
sarl
or
sbb
push
xchg
xlat
push
clc
pop
lods
cld
mov
sbb
je
adc
pop
xor
cmp
xlat
dec
sbb
or
xlat
inc
clc
sbb
add
mov
inc
adc
mov
add
in
imul
inc
into
inc
inc
cld
dec
pop
xor
lods
pop
jmp
in
pop
int3
int3
rclb
int3
int3
bound
int3
int3
jecxz
jmp
jb
lds
arpl
add
bound
push
outsb
xchg
cld
call
ret
or
test
push
in
dec
clc
add
out
adc
lret
mov
push
push
add
cmc
push
push
inc
xchg
in
aam
mov
mov
jmp
in
or
xchg
mov
add
add
fs
add
bound
xchg
add
inc
or
les
bound
add
push
inc
xchg
dec
enter
push
inc
add
xchg
in
adc
mov
push
inc
xchg
xchg
mov
xchg
call
sbbl
adc
xchg
xchg
or
cs
mov
lahf
ror
sub
jmp
pop
push
inc
mov
mov
jmp
inc
xchg
lahf
ror
sub
int3
int3
arpl
jmp
mov
lds
popa
jo
xchg
in
inc
or
add
cmpsl
fmuls
mov
cmp
xchg
loopne
roll
or
push
jbe
inc
or
push
add
jmp
cld
ret
mov
stc
decl
ret
or
cmpsb
lock
mov
xor
popa
add
call
in
imul
inc
bound
mov
xchg
call
adc
lds
add
bound
add
testb
or
xchg
push
cmp
jo
sbb
push
add
dec
call
add
mov
jmp
adc
mov
mov
xor
mul
mov
outsl
lods
inc
mov
dec
or
xchg
call
inc
xchg
xchg
call
add
add
cld
sbb
mov
loop
sub
lods
call
in
or
cld
jmp
mov
push
bound
push
mov
loop
or
movsl
faddl
xchg
bound
or
bound
jmp
cmpl
mov
xor
xchg
mov
ljmp
add
cmc
push
push
inc
xchg
or
push
mov
xor
xchg
push
sub
aas
add
bound
jne
mov
xchg
xor
add
std
push
out
rcll
bound
fcomps
sbb
inc
sub
loopne
mov
push
sbb
push
push
inc
xchg
xchg
call
sbbl
dec
add
jbe
mov
xchg
bound
add
cmp
fcoms
bound
loopne
push
aam
xlat
bound
push
mov
adc
mov
aas
add
jmp
add
xchg
in
push
jl
decl
loope
or
cmpsl
loopne
mov
push
inc
xchg
popa
dec
sub
outsl
adc
push
bound
add
push
push
inc
add
xchg
nop
lahf
adc
mov
lock
push
bound
push
cld
call
push
push
inc
xchg
nop
call
adcl
popa
add
sar
xlat
bound
ret
call
push
mov
out
push
loopne
push
push
inc
xchg
pop
inc
sub
out
lock
mov
cld
decl
loopne
or
push
lock
add
push
bound
inc
lcall
push
sbb
push
bound
inc
cmp
mov
addr16
push
aam
clc
pushl
bound
add
cs
int3
bound
int3
int3
jecxz
jmp
fldt
inc
jp
ror
cs
int3
ret
out
push
enter
jbe
aas
add
bound
add
pushf
pop
pop
add
push
cs
int3
ret
out
push
scas
cmpsb
add
sar
push
bound
cmp
cld
call
decb
add
bound
inc
decb
int3
arpl
jmp
mov
lds
popa
add
xchg
and
bound
add
movsb
hlt
add
idiv
call
arpl
add
push
xlat
call
mov
jnp
cld
add
cli
push
inc
xchg
bound
add
cli
push
inc
xchg
arpl
add
mov
lds
xchg
bound
add
bound
jne
mov
incl
vandnps
mov
push
call
inc
xchg
in
inc
call
add
xchg
movsb
cmp
push
or
fsub
mov
inc
add
rclb
mov
fwait
push
inc
xchg
outsl
add
mov
bound
add
or
divl
stc
add
lds
push
xlat
std
adc
xor
ret
or
bound
inc
clc
cld
call
repnz
xchg
call
add
add
clc
cld
sbb
mov
mov
push
push
ret
repz
push
bound
or
cld
call
xacquire
in
push
cld
int
lock
jmp
loopne
jmp
fadd
or
les
bound
add
rorl
xlat
bound
inc
xor
aas
add
adc
lcall
in
or
add
push
add
jmp
cld
add
xchg
jmp
loopne
add
bound
push
cli
call
mov
adc
xchg
jmp
clc
pop
popf
lock
jmp
hlt
jmp
add
mov
xchg
clc
mov
xchg
popf
clc
mov
and
add
lea
add
add
shl
xlat
bound
inc
cs
sub
lret
mov
push
inc
xchg
xor
mov
sbb
xchg
xor
mov
or
jmp
lea
add
movsl
clc
mov
pop
or
add
dec
iret
mov
shl
push
bound
xchg
cld
cld
call
out
push
inc
add
xchg
xchg
call
test
add
push
or
mov
loope
add
cmp
push
xlat
bound
je
ret
rcll
bound
pop
sub
cld
mov
nop
shll
jmp
int3
int3
xchg
bound
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
push
nop
xor
push
cwtl
xor
push
mov
xor
bound
add
pop
pop
cmp
pop
xchg
cmp
pop
test
ficompl
cmp
pop
popf
cmp
pop
xchg
adc
rcrb
ds
pop
fwait
aas
out
pop
scas
aas
stc
pop
int3
aas
les
cmpsl
pop
stc
aas
add
mov
xor
add
add
xchg
push
sbb
pop
push
xchg
rclb
xor
push
xor
push
lea
cmp
xor
xor
push
and
jg
inc
xor
push
push
xor
push
pop
xor
push
xchg
xor
push
cmpsl
xor
ret
push
or
nop
dec
adc
mov
sub
push
dec
jle
push
push
xchg
xor
push
stos
xor
add
push
mov
xor
dec
fnsave
mov
hlt
xor
or
push
adc
je
sub
push
xor
push
pop
xor
push
mov
push
pushf
xor
push
jmp
outsb
push
or
adcb
scas
push
xor
loop
pop
xor
sbb
xor
xchg
bound
add
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
int3
inc
add
lret
inc
add
inc
add
int3
inc
add
lret
inc
add
inc
add
lret
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
inc
add
add
lret
inc
add
lret
inc
add
int3
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
int3
inc
add
inc
add
int3
inc
add
int3
inc
add
inc
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
lret
inc
add
lret
inc
add
inc
add
lret
inc
add
int3
inc
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
int3
inc
add
lret
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int
add
inc
add
int
add
inc
add
int3
inc
add
int
add
inc
add
inc
add
lret
inc
add
int
add
inc
add
lret
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
inc
add
int
add
lret
inc
add
inc
add
add
inc
add
inc
add
inc
add
int
add
inc
add
add
inc
add
add
inc
add
add
inc
add
int3
inc
add
lret
inc
add
add
inc
add
add
inc
add
add
int3
inc
add
inc
add
inc
add
inc
add
inc
add
add
int3
inc
add
inc
add
int
add
int
add
int3
inc
add
inc
add
inc
add
inc
add
int
add
int
add
inc
add
inc
add
int3
inc
add
inc
add
int
add
int
add
int
add
int3
inc
add
int
add
int
add
inc
add
int
add
int
add
lret
inc
add
int
add
int
add
int
add
int
add
add
int
add
int
add
into
inc
add
inc
add
into
inc
add
int3
inc
add
inc
add
into
inc
add
inc
add
inc
add
int
add
into
inc
add
inc
add
int
add
add
lret
inc
add
add
inc
add
int3
inc
add
inc
add
inc
add
int3
inc
add
inc
add
into
inc
add
inc
add
lret
inc
add
int
add
into
inc
add
inc
add
into
inc
add
inc
add
int3
inc
add
inc
add
movl
fadd
inc
add
movl
call
movl
hlt
movl
cld
movl
add
inc
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
inc
add
inc
add
enter
leave
inc
add
enter
leave
inc
add
inc
add
inc
add
leave
inc
add
inc
add
leave
inc
add
inc
add
leave
inc
add
enter
leave
inc
add
leave
inc
add
inc
add
leave
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
enter
leave
inc
add
inc
add
add
movl
jl
inc
add
leave
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
leave
inc
add
leave
inc
add
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
inc
add
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
enter
leave
inc
add
lret
add
inc
add
lret
or
inc
add
inc
add
lret
or
inc
add
inc
add
add
leave
inc
add
lret
sbb
inc
add
lret
cld
movl
sub
inc
add
inc
add
inc
add
lret
xor
inc
add
lret
cmp
inc
add
inc
add
movl
dec
lret
dec
lret
push
lret
push
lret
pop
lret
pop
lret
pusha
lret
fs
push
lret
jo
inc
add
add
inc
add
movl
or
add
enter
lret
mov
inc
add
inc
add
inc
add
inc
add
lret
mov
lret
nop
lret
pusha
leave
inc
add
lret
mov
inc
add
inc
add
inc
add
lret
ror
add
inc
add
lret
enter
test
inc
add
lret
ror
inc
add
lret
cmp
inc
add
lret
pushf
enter
lret
loopne
inc
add
lret
call
lret
lock
fadd
inc
add
lret
inc
leave
inc
add
lret
clc
lret
cld
lret
add
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
movl
sbb
inc
add
inc
add
lret
inc
add
movl
nop
enter
leave
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
enter
lret
inc
add
inc
add
add
inc
add
inc
add
add
add
inc
add
inc
add
add
inc
add
add
lret
inc
add
enter
lret
inc
add
lret
inc
add
inc
add
lret
pushf
lret
inc
add
leave
inc
add
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
movl
movl
mov
mov
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
push
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
push
xor
ret
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
