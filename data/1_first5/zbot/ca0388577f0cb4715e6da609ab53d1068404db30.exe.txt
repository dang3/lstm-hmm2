insl
sub
int
outsl
cmp
in
pop
sahf
xlat
push
and
ret
inc
mov
aaa
xor
xchg
fsub
mov
xchg
jg
adc
test
clc
fdiv
or
dec
xchg
push
mov
mov
repz
mov
pop
mov
and
rcl
into
fnsave
cmp
roll
pop
adc
out
in
ret
call
xor
dec
ss
lods
and
add
dec
push
mov
xchg
lods
addr16
dec
rcll
mov
jns
mov
xchg
xchg
push
cmpsb
sub
movsl
clc
mov
imul
mov
cmp
pop
rcr
pop
fisttps
mov
pusha
mov
lock
scas
addr16
fldenv
mov
adc
pop
mov
xchg
test
add
sbb
ja
mov
sub
dec
or
mov
pop
das
pop
jle
pop
jecxz
popa
or
mov
mov
or
pop
add
cmpsb
mov
jns
push
mov
dec
xchg
cli
faddl
mov
mov
in
sub
lods
mov
xor
rcr
adc
xor
ljmp
push
sub
jbe
mov
movsl
mov
ret
sahf
ja
mov
add
pop
jne
fstps
and
pop
test
loopne
in
push
ss
dec
icebp
sub
stos
pusha
fidivrl
sub
jg
dec
and
jmp
popa
xor
aas
pop
call
xchg
xor
and
out
mov
ret
and
aad
aaa
pusha
jae
dec
arpl
cmp
pop
add
mov
outsb
cld
jecxz
xchg
and
rclb
or
push
test
jo
lods
xor
add
xchg
rolb
fisttps
pop
orb
cmp
xor
pop
ret
or
pop
cmp
cld
pop
popa
in
icebp
sbb
mov
ja
push
inc
sbb
mov
xor
hlt
jae
push
pop
enter
popa
imul
adc
rclb
lret
xchg
enter
push
dec
push
inc
inc
cwtl
push
mov
mov
pop
mov
fmull
idivl
or
jmp
adc
imul
and
sub
js
mov
imul
sbb
lods
lea
fdivp
hlt
bound
scas
sbb
push
scas
inc
inc
xchg
pop
cmp
sahf
jmp
sti
mov
fmull
fcomps
cmp
mov
and
dec
xor
xchg
cmpsb
loope
roll
mov
mov
push
bound
imul
pop
lcall
xor
jle
mov
clc
fisubl
mov
mov
cmpsl
ret
cwtl
mov
lods
jg,pn
mov
ljmp
lock
mov
into
shrl
dec
rclb
jae
imulb
adc
js
mov
je
js
imull
lock
andb
mov
xchg
fistpl
jg
xchg
cltd
pop
xchg
int3
test
inc
jno
mov
push
test
push
or
sbb
out
xor
mov
inc
pop
inc
xor
jge
push
mov
sbb
leave
cli
stos
inc
movsb
jge
insb
hlt
in
adc
adc
out
ljmp
jecxz
mov
paddusw
insb
pop
push
mov
mov
mov
push
jae
test
mov
stos
ret
fidivrs
insl
arpl
cld
or
sub
js
cmp
hlt
int
jmp
jmp
lcall
xchg
mov
push
ret
int
gs
mov
mov
jb
imul
cmp
leave
enter
enter
or
push
mov
pop
icebp
mov
adcb
push
inc
pop
movsl
sub
ret
bound
repnz
les
pop
ds
cmp
inc
add
sbb
sub
jge
xchg
jg
push
movsl
daa
repnz
mov
dec
push
pop
adc
test
dec
sar
push
sub
xor
rcll
add
in
movsl
sbb
push
andb
adc
xor
sahf
dec
xor
insb
dec
imulb
pop
pop
lea
jae
lret
daa
push
dec
adcl
je
sahf
jg
movd
add
pusha
add
xchg
add
stc
and
fstpl
test
inc
cmpsl
filds
mov
sub
iret
add
pop
cmp
dec
fucomip
fdivrs
pop
mov
jp
movsb
mov
test
mov
xor
test
mov
popa
bound
xchg
push
sub
cs
and
jmp
lret
dec
mov
push
test
cwtl
mov
mov
dec
pop
ficoml
xchg
jp
das
popa
xchg
and
incb
mov
out
jb
sbbl
xor
pop
and
call
je
loope
mul
hlt
mov
and
insl
ljmp
jb
push
jnp
lcall
sti
or
jo
push
pop
shr
outsb
mov
sbb
ja
out
jge
and
xor
cmp
lock
dec
jmp
lods
icebp
popf
aad
pop
mov
jnp
test
and
dec
scas
es
xor
mov
rorl
imul
mov
xchg
pop
mov
out
inc
aaa
inc
push
sub
or
mov
and
push
sub
push
fsubl
xchg
mov
mov
repnz
cmpsb
cmp
jae
sti
xchg
jge
aaa
sbb
cmc
fnstsw
int3
inc
inc
ja
les
xchg
cmp
xorb
lret
sarb
cmp
or
inc
jae
pop
loope
add
inc
in
subl
jmp
jns
dec
shlb
hlt
inc
adc
cwtl
adc
jecxz
jbe
mov
cli
sahf
mov
and
test
push
sbb
adc
pop
jmp
outsb
in
rcll
pop
dec
cmpsl
inc
test
pop
add
mov
test
mov
test
adcb
test
bound
cmpsl
jge
sti
out
adc
push
fldcw
jnp
push
rcl
jae
aad
roll
sub
daa
pop
jno
xchg
xchg
cs
sbb
shll
xchg
cmpw
and
orb
repz
leave
stos
add
jecxz
sub
mov
loopne
push
mov
sub
or
jle
mov
insl
nop
pop
mov
repz
fs
lcall
ja
sub
jns
push
ja
gs
out
xor
aaa
or
adc
sbb
inc
fiadds
scas
in
popf
mov
in
loope
test
adc
push
pop
sbb
movsl
arpl
sar
or
mov
pusha
mov
dec
outsl
jae
pop
xor
push
out
push
cmp
pop
lret
jnp
adc
or
mov
cmc
dec
cli
jbe
sbb
xchg
in
cld
xchg
stos
addb
adc
int
aam
bound
mov
fdivrl
cltd
loopne
popf
int3
push
mov
stos
icebp
insl
sub
or
inc
andl
lcall
xchg
imul
pushl
mov
adc
ret
insb
push
aaa
jbe
daa
push
cwtl
lds
pop
arpl
bound
js
out
push
incb
jnp
dec
jge
mov
pushf
popf
js
sbb
scas
lahf
clc
sti
push
dec
or
negb
test
imul
pop
inc
loopne
adc
xchg
lock
or
cli
aaa
mov
scas
es
jne
add
ss
jae
pop
sub
insl
test
mov
xchg
in
jle
subl
jmp
xchg
mov
mov
out
addr16
cmpsb
jmp
dec
in
mov
stos
imul
inc
ror
ret
call
out
push
inc
aad
jo
inc
and
notl
cld
dec
jb
shrb
lods
std
mov
jg
jae
pop
adc
xor
cmp
sbb
outsb
mov
in
mov
in
hlt
jg
add
inc
fisttpll
imul
pop
shlb
js
movl
mov
lret
lds
fcmovnbe
mov
movsb
xchg
cli
imul
add
lret
sbb
mov
xchg
jae
jo
mov
cmpsl
inc
xor
xlat
stos
hlt
inc
xor
push
cwtl
fldl
inc
xor
sub
jle
mov
pop
or
popa
pop
aad
inc
int3
stos
sub
jmp
and
int
jecxz
jns
xor
loope,pn
push
test
pop
xchg
or
test
xor
xor
mov
enter
adc
imul
xor
movsb
cmp
stos
inc
dec
and
mov
sbbb
fisttpll
jb
int
jmp
sbb
and
lods
jo
rclb
inc
inc
in
shlb
pop
cmp
cmp
fiadds
cmp
dec
lret
cmp
inc
mov
jge
jns
or
lcall
cmp
push
insb
and
jns
mov
mov
push
sub
push
mov
xchg
subl
jge
shlb
outsl
in
fidivs
cmp
xchg
push
sahf
cmp
xchg
movsl
lcall
lcall
ja
incb
sti
hlt
push
pop
jecxz
sbb
sub
cmp
pop
je
sub
lods
inc
dec
add
dec
sub
pusha
inc
xorl
cli
test
cmpsl
push
scas
das
jp
push
into
test
or
mov
andb
in
aaa
push
loopne
cmp
mov
pop
imul
xchg
pop
inc
or
mov
mov
test
addr16
call
in
out
adc
test
sub
jno
dec
hlt
js
xchg
dec
cmp
rcrb
pop
popf
leave
fnstcw
sbb
xlat
or
pop
cmp
xchg
sbb
xchg
movsb
or
xlat
adc
push
push
add
arpl
in
mov
or
insb
dec
push
shlb
mov
dec
xor
les
hlt
fsubr
test
xor
mov
mov
push
mov
push
gs
ss
lret
sub
dec
dec
jmp
mov
icebp
lods
movsb
inc
or
mov
dec
push
cmp
and
lcall
icebp
jmp
mov
lret
lds
xchg
aad
sbb
inc
mov
out
cmp
dec
cmp
nop
mov
cmp
fidivrs
or
pop
adc
mov
push
movsb
dec
fstl
mov
jns
sahf
add
push
dec
mov
jmp
push
stc
adc
in
stc
loope
or
mov
out
xor
xlat
ret
xchg
cli
cmp
add
cwtl
adc
inc
push
pop
adc
sub
out
push
push
xor
jmp
push
fcompl
and
mov
pop
sub
and
iret
mov
loopne
pop
mov
or
fmull
jmp
sbb
addr16
arpl
in
lret
pop
movsb
mov
pop
fwait
mov
xor
pop
xor
push
sub
or
jnp
pop
clc
lock
cmp
jo
cmp
mov
rcrl
sub
lcall
push
fldl
add
xor
ljmp
jns
mov
lock
mov
cmp
mov
sub
test
jb
sbb
sub
popa
push
xor
dec
inc
ret
into
and
pop
and
or
out
sub
adc
ret
cwtl
push
push
in
test
inc
mov
push
jne
repz
mov
xchg
sbb
das
push
fimuls
jnp
into
jmp
iret
dec
or
mov
jae
sti
lret
enter
in
and
pop
in
adc
pop
outsb
imul
cmp
out
es
inc
xchg
cmp
test
subb
into
dec
in
daa
mov
iret
arpl
int
loop
push
jae
repz
lea
mov
mov
call
jp
push
xchg
ret
cltd
popf
arpl
jp
sbb
push
xchg
xchg
movsb
je
outsl
or
shlb
adc
imul
jl
cmp
add
aaa
and
into
ret
adc
jnp
icebp
das
sar
js
mov
mov
cmp
clc
inc
pop
int
mov
aad
idiv
sbb
add
cmp
rorb
aad
mov
lcall
xor
fdivp
push
jecxz
ljmp
push
jle
hlt
shll
mov
adc
and
andl
nop
sub
js
and
add
popf
cmp
pusha
add
adc
dec
inc
pop
mov
ss
or
sub
add
rcrl
cmp
mov
inc
repz
mov
lcall
pop
and
mov
daa
dec
leave
cmp
rcr
in
sbb
pop
ja
dec
sbb
pfmul
or
dec
ror
rclb
lret
jb
loopne
push
sahf
cli
add
lea
pop
repz
repz
sbb
popf
and
sbb
xchg
adc
sahf
jle
cmp
jne
xor
cmp
pop
lahf
and
jb
rcr
sub
inc
das
mov
dec
push
rcrl
ds
cld
xor
jecxz
pop
clc
subb
imul
nop
icebp
and
and
mov
stc
mov
popa
lods
lcall
or
jns
sbb
rorl
in
inc
imulb
in
aam
es
push
adc
mov
pop
jp
push
repnz
pop
push
push
cmp
add
jmp
aad
in
push
xchg
int
loope
push
cwtl
decb
out
dec
jle
jecxz
cwtl
jo
fidivrs
dec
lahf
or
pop
sbb
mov
loopne
sub
lods
out
rorb
in
xor
mov
arpl
and
movsb
dec
inc
adcl
cli
sub
leave
in
sbb
dec
repnz
or
out
dec
hlt
mov
jo
jecxz
icebp
jl
ret
idivb
scas
mul
dec
out
in
ljmp
adc
mov
sub
sbb
aaa
mov
xchg
subl
pop
mov
jae
scas
inc
inc
pop
scas
and
push
lock
xchg
fists
int3
push
xor
stc
jb
cmp
add
push
mov
data16
push
inc
adc
ja
clc
cmp
xchg
dec
and
sub
jl
cmp
fstpt
lret
jns
push
stc
ror
dec
adc
push
shll
or
outsl
jbe
cwtl
data16
pop
stc
arpl
imul
xchg
jl
rol
dec
mov
clc
add
push
mov
jg
leave
mov
xchg
cmc
cmpps
test
int
push
ja
add
cltd
sbb
shrb
add
jl
movsb
gs
mov
jl
jp
imul
fsubrl
jp
sbb
fwait
xor
or
lret
push
xor
dec
aad
lret
cltd
mov
lcall
fcmovbe
sbb
and
int
adc
rclb
mov
sub
mov
outsb
sbb
es
ljmp
repnz
rcl
adc
ss
sti
clc
pop
or
loop
mov
cmp
sti
or
sbb
xor
ret
jg
xor
jae
dec
ja
test
or
andl
push
test
and
subl
repnz
jno
in
jne
pop
movsl
shrb
popf
adc
or
repz
jle
xchg
add
xchg
lea
add
pop
mov
fwait
sbb
xor
mov
shrl
xchg
cmp
gs
fs
jecxz
or
mov
and
fisttpl
inc
push
cltd
iret
jecxz
xchg
mov
bound
cli
fisttps
movsb
cwtl
daa
cmp
es
xchg
push
cmp
add
sub
aad
jmp
pop
clc
push
sarb
cmp
push
mov
fs
movsl
jo
xor
imul
inc
je
push
movsb
jl
out
or
lds
sbb
add
adc
test
mov
popf
and
jno
les
add
inc
call
xchg
clc
xchg
lcall
push
inc
jb
xor
fcomps
and
insb
pop
cmp
fistpll
pop
hlt
mull
inc
sbb
aas
push
sub
shll
test
outsb
and
pop
cwtl
xchg
cmp
dec
or
adc
fsubp
inc
sub
push
test
sub
test
cmp
aas
ss
push
rcrb
lea
mov
aaa
lret
pop
pusha
xor
sti
js
mov
xor
aad
and
dec
or
mov
add
int
sub
mov
sbb
stos
push
xor
mov
cmpsl
and
pop
mov
xchg
adc
test
stos
sbb
cltd
add
clc
jmp
popa
pop
jecxz
jge
mov
fcomps
mov
loope
jb
mov
mov
frstor
mov
lea
sbb
or
jecxz
inc
add
sub
or
ds
sbb
add
add
mov
pop
mov
mov
inc
dec
push
lods
lods
outsb
sbb
data16
dec
sub
in
dec
lret
pop
sub
jmp
push
test
push
and
stos
jl
lea
iret
mov
dec
mov
cmc
ja
testl
adc
mov
out
xlat
cmp
add
mov
bound
repz
mov
mov
mov
gs
xor
sub
and
fadds
sbb
lock
and
dec
jmp
insb
add
scas
lcall
mov
mov
pop
fmuls
cmp
pmulhw
pop
jp,pt
arpl
in
sahf
add
pop
out
inc
imul
push
xor
shlb
ss
mov
aam
lods
push
xor
or
sub
jmp
jno
bound
aam
aad
jbe
mov
push
movsl
flds
lods
cmp
mov
lds
cmpsb
mov
jp
dec
xor
fwait
in
gs
pop
lahf
lahf
xor
mov
push
pop
insl
lret
inc
out
jae
pop
test
push
mov
or
push
sbb
push
mov
jno
add
fidivrl
pop
call
xchg
jge
ss
push
cwtl
sbb
or
lods
sbb
sbb
mov
or
mov
push
dec
mov
mov
dec
aaa
jo
xchg
pushf
pusha
out
mov
sarb
call
cmp
shrb
inc
lcall
xlat
test
mov
mov
mov
push
adc
xor
rcrl
lock
push
jmp
fcmovb
jne
pop
aad
movsb
mov
fwait
incl
mov
add
mov
cmc
lods
inc
lahf
not
fidivrl
sub
fisubrl
pop
cmp
jo
dec
fstpt
add
test
sbbl
repz
iret
test
dec
shl
pop
cmp
test
push
mov
pop
xor
and
mov
add
les
mov
jne
rorb
push
adc
arpl
in
scas
pop
dec
mov
lret
test
shlb
iret
mov
adc
jge
sub
out
mov
stos
nop
or
fadd
cmp
cmp
add
or
stos
addl
imulb
xor
mov
mov
icebp
movsb
pop
inc
bound
push
jb,pt
jmp
rcrb
test
in
sub
jbe
stos
test
dec
dec
in
repnz
xor
xchg
dec
fbstp
pop
push
aas
pop
clc
shl
inc
push
test
scas
adc
sarl
in
fcmovnb
sarb
lret
loopne
or
xorb
loopne
pop
out
fildll
or
das
call
vrsqrtps
push
sahf
out
adc
in
or
cmp
inc
repz
pop
pop
push
mov
in
notl
adc
adc
cld
add
out
xor
out
add
test
imul
popa
pop
mov
out
jle
inc
cmp
push
inc
subl
les
outsl
jnp
mov
inc
or
pop
lret
pop
test
std
das
shrb
jmp
je
mov
pop
in
push
lock
aam
pop
into
and
fstl
jecxz
daa
dec
sbb
sahf
ret
imul
mov
sahf
jae
xor
test
fsubs
cmp
mov
movsl
dec
subl
sub
pop
pop
jl
inc
sbb
ret
xchg
jl
dec
xchg
pop
and
in
mov
dec
repz
mov
mov
cwtl
sarb
sbb
mov
jbe
out
aad
mov
xor
add
sarl
xor
in
fcmovb
push
adc
xchg
pop
jae
cli
cwtl
fcmove
mov
or
pop
add
inc
lret
cmp
xlat
xchg
xchg
or
call
mov
sbb
inc
push
xor
add
or
aad
je
ficomps
sub
pop
popa
addl
sarl
mov
mov
push
fidivrl
xor
lea
bndstx
mov
sbb
sbbb
xchg
mov
popa
or
mov
push
xchg
cltd
sbb
jae
cmpsl
pushf
enter
xchg
test
idiv
xor
in
pushf
aad
or
adcl
loope
cmp
dec
cmp
aaa
gs
inc
int3
cmpsl
dec
insb
insb
sub
cmp
xor
xor
or
loopne
fxch
pusha
mov
jo
icebp
pop
fdiv
test
cmp
dec
mov
test
test
push
aad
les
aam
pusha
aam
addr16
rolb
adc
xchg
cmp
or
adc
add
ds
mov
pop
jle
mov
xchg
pop
insl
push
push
pop
movsl
pop
fimull
in
add
repnz
mov
pop
lds
mov
and
call
cmp
or
cmpsl
sub
aad
int
jle
xor
add
push
scas
aam
test
lods
adcb
ret
sub
stc
mull
lahf
mov
insl
sbb
arpl
mov
inc
jnp
dec
inc
sbb
xchg
sub
arpl
sub
sub
lea
pushf
push
cmpsl
inc
inc
mov
shll
cmp
sub
outsb
jmp
xchg
cwtl
scas
adc
add
movsl
negb
out
cld
cmc
insl
notb
sub
jno
imul
loop
add
icebp
daa
outsl
jl
mov
and
cmp
xor
repz
and
stc
push
or
push
mov
ljmp
imul
je
xorb
cmp
test
nop
lahf
rcll
dec
popf
add
mov
test
sub
rclb
sahf
mov
dec
lods
ret
test
push
push
sbb
dec
adc
repz
lds
lds
loop
sub
xor
add
mov
mov
ret
adc
in
xchg
out
test
xor
or
popf
mov
cmpl
add
test
pop
lods
xchg
cmp
jecxz
lret
shrb
jae
test
xchg
mov
push
fcomp
adc
mov
push
incb
jge
test
mov
jle
adc
js
push
call
push
xchg
loopne
cmc
bound
inc
adc
addr16
jnp
inc
add
cs
ret
vmovupd
mov
xchg
and
dec
addr16
or
mov
mov
fldt
mov
aaa
cmp
es
push
pop
jp
cmpsl
push
out
in
xor
scas
je
into
out
cwtl
cmp
mov
aad
imul
mov
xchg
cmp
adc
and
ret
rcrl
addr16
or
adc
inc
push
gs
addr16
lea
repnz
fldenv
lahf
mov
loopne
dec
gs
push
adc
push
out
sub
into
xor
cmpsl
stc
or
lret
mov
push
pop
pop
loop
adc
fwait
and
jecxz
shll
and
test
xchg
movsl
js
mov
pop
pop
cwtl
add
jb
aam
mov
fucomp
lcall
mov
stos
adc
xor
in
xor
loope
mov
xor
mov
and
das
mov
inc
lds
enter
adc
mov
sahf
mov
xor
cmpsb
add
jge
out
push
outsb
push
add
fstps
mov
xchg
or
mov
js
xor
ret
lods
mov
call
lods
lret
inc
push
cmp
add
lcall
int
fnstenv
inc
adc
lcall
jns
jb
dec
pop
andl
rorb
lods
inc
dec
or
xlat
bound
sbb
in
rcll
mov
mov
mov
push
push
inc
or
cmp
scas
stos
xchg
dec
lcall
mov
jne
lret
jae
movsb
add
pop
cwtl
add
fildl
sahf
jns
adc
adc
outsl
scas
shrl
test
inc
xchg
mov
xchg
iret
xchg
js
mov
mov
sub
out
and
cmpsb
xchg
test
pop
ds
cmp
decl
jno
jnp
mov
or
iret
movsb
or
jp
shrl
add
xorl
jmp
movsb
xchg
imul
int3
inc
dec
pop
lahf
xlat
cld
xor
int
sub
stos
lods
outsl
cmc
clc
bound
sbb
mov
movsl
test
xchg
and
test
mov
bound
adc
jp
cli
rclb
pop
loopne
cmpsb
jecxz
notb
xchg
rorl
push
addr16
lea
xor
shr
cmp
ss
cltd
cmp
out
insl
xchg
and
fldt
lcall
add
dec
into
pop
push
and
adc
cmpsb
inc
rol
jnp
mov
sbbb
inc
push
movsb
cmp
cwtl
jmp
fisubrs
flds
sbb
test
lods
xor
scas
and
jne
psllq
mov
mov
mov
lods
and
mov
and
sbb
stos
and
pxor
iret
dec
pop
movl
xchg
gs
call
adc
ss
lds
sub
mov
inc
ja,pn
stc
xor
subl
call
int
and
and
sbb
jle
loope
mov
fstpt
imul
sbb
and
or
adc
ljmp
xchg
xor
popa
adcl
pop
or
pop
sub
dec
pop
jns
aas
jnp
daa
loope
pop
scas
lret
sub
or
mov
das
in
lret
xchg
data16
push
stos
sti
or
mov
in
adc
xchg
jmp
mov
dec
nop
inc
pop
xchg
or
mov
mov
jnp
sbb
mov
out
es
sahf
push
or
sahf
cmc
mov
sub
mov
cld
sti
add
jmp
or
cltd
dec
lahf
je
pop
mov
mov
out
mov
fcmovnu
clc
pushf
fidivs
popa
fisubl
daa
and
scas
lret
adc
add
pop
scas
cmc
in
sub
in
jbe
int
jle
negl
mov
mov
sub
mov
pop
and
faddl
or
fs
mov
mov
cmc
pusha
div
stos
aad
lods
cli
inc
xchg
rorb
or
inc
inc
push
xchg
mov
loop
adc
repz
in
mov
pop
or
xor
jns
rclb
fnsetpm(287
movsl
shrb
mov
aas
mov
inc
scas
cmpsb
cmpsb
loopne
test
or
xchg
push
pop
out
ds
cs
add
pop
jmp
out
inc
cmp
push
cmp
jbe
add
lahf
push
sub
lret
pop
jbe
idiv
sub
push
push
lods
arpl
ljmp
and
pop
add
test
sub
push
lock
and
rcrb
cmp
push
inc
and
sahf
aas
or
xchg
loopne
gs
fs
ret
pushf
shl
ss
pusha
mov
stos
and
jae
mov
xor
jno
rorb
add
push
adc
mov
cwtl
in
daa
bound
into
sbb
cli
inc
add
je
jbe
ret
shrb
int
xchg
jno
dec
dec
es
inc
movsb
xor
stc
stos
mov
mov
add
and
inc
add
mov
jge
mov
leave
or
sbb
cmp
popfw
add
je
std
ja
mov
push
imul
jne
std
adcb
and
mov
inc
sahf
stos
sahf
xchg
loope
das
inc
stos
xchg
in
cli
fnstcw
sbb
lret
and
stos
push
sub
mov
inc
idivb
xchg
std
mov
loope
aas
jl
jge
stos
sub
add
xor
cmp
scas
imul
cmp
dec
xor
divl
insl
xchg
adc
ret
xchg
sar
mov
lahf
addr16
sub
jb
nop
in
mov
add
ss
xchg
cmp
mov
leave
mov
mov
lds
inc
seto
push
stc
push
dec
fildl
xor
aam
xchg
sti
xchg
inc
inc
add
int3
mov
jge
xchg
mov
mov
xor
xchg
adc
fstps
pushf
xchg
jl
repz
js
pop
scas
sub
stos
bound
xor
mov
in
leave
cli
fwait
adc
push
push
int
inc
outsl
imul
ds
fld
sbb
addr16
and
xchg
mov
jecxz
ja
imul
cmp
cwtl
ret
and
lret
xor
nop
jg
mov
mov
aas
loope
xchg
stc
pop
movd
pop
sub
data16
sti
add
push
xor
data16
mov
push
loopne
or
jle
aaa
loop
stos
lods
sub
pop
test
adc
inc
sbb
mov
or
inc
or
jl
xor
cld
cmp
mov
mov
or
sub
pop
push
pop
mov
cwtl
test
outsb
in
popf
ret
pop
in
fxch
dec
and
sbb
hlt
and
dec
xor
in
inc
jbe
jg
cmp
scas
rol
ja
mov
mov
add
cltd
xchg
pcmpeqd
lret
sbb
ljmp
cmpsb
mov
imul
or
lahf
fldcw
roll
pop
mov
mov
int
mov
mov
push
les
mov
daa
stos
into
xchg
push
fidivs
xor
push
cmp
mov
dec
mov
sub
pop
xor
jecxz
loop
pop
test
xchg
adc
pop
lret
shrl
xchg
repnz
shll
cmp
rcrl
pop
xor
mov
xchg
jno
cld
outsl
jo
mov
sbb
outsl
dec
pop
cmp
shrb
mov
xchg
mov
cmp
or
adc
sahf
test
repnz
enter
std
repz
dec
adc
push
xor
mov
adc
repz
mov
push
xor
imull
xchg
jnp
xor
out
das
movsl
das
add
lods
cltd
mov
sahf
lcall
out
jl
jnp
jbe
subl
add
loopne
imul
in
sub
and
cmp
mov
push
ret
insb
movsb
xchg
call
outsb
mov
mov
cmp
mov
fcmovne
pop
mov
pop
nop
in
fs
lds
aaa
icebp
ret
inc
fs
jecxz
inc
dec
hlt
jmp
xchg
pusha
repnz
lods
sbb
pop
icebp
cmp
rcrb
fdivrl
std
cltd
ja
neg
daa
fwait
je
cmc
insb
movsb
loopne
leave
decb
rep
aam
mov
xor
xchg
ret
mov
mov
jae
push
adc
insb
vmovhpd
sbb
jnp
jge
pusha
push
or
lea
mov
jmp
popa
cmp
outsb
cmp
push
cwtl
cmp
push
aam
movsl
pop
fsubl
insl
mov
mov
jo
imul
xchg
in
xchg
inc
mov
mov
outsb
popf
into
dec
jbe
inc
cmpl
cwtl
ss
pop
shll
out
in
mov
mov
xor
pop
test
daa
outsl
cld
popl
cwtl
in
dec
mov
sub
outsb
test
enter
movsb
pop
icebp
movsb
fldt
rorl
negl
mov
adc
lcall
adc
push
pop
jns
adc
or
jl
xor
jnp
inc
pop
ljmp
push
mov
pop
fisttpll
movsl
pop
repz
and
xor
push
or
pop
add
xchg
mov
xchg
ds
xchg
mov
mov
ret
in
dec
outsl
mov
loop
cmp
inc
in
sub
mov
inc
cmp
dec
inc
mov
push
icebp
add
and
adc
jmp
mov
test
push
out
xchg
and
xchg
outsb
push
das
mov
inc
jne
cmp
push
mov
pop
stc
mov
lcall
inc
stos
mov
mov
sub
sub
mov
mov
push
iret
out
mov
popf
add
vpsubusw
testl
jns
fcomps
mov
pop
mov
icebp
mov
jecxz
xor
lcall
aad
mov
jne
add
push
repz
pop
adc
cmpsl
jne
pop
adc
movl
sbb
cwtl
mov
daa
gs
push
mov
or
jg
sbb
mov
jae
lods
fidivrs
dec
hlt
push
push
fidivrl
push
jbe
jne
dec
pop
idivl
cwtl
es
jge
mov
jnp
out
roll
cmp
adc
stos
mov
outsb
inc
sub
movsl
insl
lods
mov
test
popa
mov
pop
addr16
cmp
adc
mov
cmpsl
inc
mov
mov
mov
in
cmp
sub
mov
cwtl
ds
xchg
xchg
mov
inc
mov
fwait
push
mov
xchg
or
push
mov
adc
mov
cmp
mov
popf
idivb
jecxz
fdivrp
sub
shlb
pop
stos
in
xchg
xor
push
and
xlat
scas
cmpsl
pop
adc
js
pusha
int
mov
jb
mov
ret
clc
call
dec
or
xchg
cmc
add
fstpl
scas
or
add
lds
scas
xor
lret
cmc
leave
push
dec
insb
fadds
inc
sbb
mov
mov
int
clc
xlat
mov
mov
aam
pop
pop
cmp
popf
lea
sbb
xchg
ss
and
pop
xchg
mov
rol
sbb
cwtl
cmp
orb
sarb
mov
push
arpl
add
shlb
pop
adc
and
shrl
scas
ds
ja
roll
adc
push
std
cmp
ret
xor
int3
xlat
outsl
sub
xchg
lret
mov
lds
xlat
mov
aam
xlat
nop
call
inc
inc
bnd
negl
loopne
sti
jne
dec
test
sbb
mov
leave
lret
mov
pusha
sbb
push
cwtl
cmp
push
jecxz
int3
xchg
pop
andb
dec
inc
fidivrs
jns
sbb
out
jge
cmp
xchg
adc
pop
mov
das
and
scas
movsl
add
jge
mov
jecxz
xchg
mov
imul
loopnew
adc
ljmp
mov
mov
out
mov
aaa
stos
lret
ret
mov
inc
push
lahf
imul
mov
cmp
dec
or
mov
xchg
jge
mov
xor
cmp
xchg
and
mov
rorb
mull
test
cmp
aad
daa
fdiv
cmp
fwait
ss
mov
cli
testb
subb
pop
pop
fs
inc
cli
jg
mov
shrl
aaa
mov
mov
pop
pop
push
mov
aaa
jecxz,pn
jns
xor
jns
inc
adc
adc
pop
in
test
pop
mov
pop
push
xadd
pop
cmovns
addr16
mov
arpl
mov
aad
mov
loop
out
xchg
stos
jge
mov
jae
and
jge
lret
push
call
cli
out
cld
mov
jne
ljmp
inc
leave
sahf
fsubs
cmp
jo
repnz
icebp
loope
inc
cmp
jae
lcall
pop
xchg
int
jmp
rcrl
xchg
imul
sbbl
add
repnz
dec
inc
cld
sbb
fmulp
xchg
ret
jmp
popf
in
in
pop
adc
pop
pop
or
or
fsubs
adc
and
pop
aam
je
decb
and
add
xor
pop
repz
sub
pop
scas
push
hlt
orl
cmp
icebp
mov
arpl
addb
psllq
xchg
lea
and
fisubrs
dec
cmp
js
add
sarl
bound
int3
pushf
xchg
mov
cld
mul
jl
mov
jge
sub
mov
dec
push
pop
shlb
nop
pop
inc
xlat
aas
mov
pop
mov
iret
dec
arpl
xlat
fcmovnb
cmp
cmpsb
pop
jbe,pt
xor
in
sub
stc
jb
dec
pop
mov
push
jmp
push
add
fldln2
fnstsw
add
js
popf
pusha
lret
jno
sub
cmpsb
nop
fs
pop
add
lret
cltd
fiadds
cltd
shlb
cmc
jb
stos
and
test
sub
or
add
cltd
push
leave
sbb
cld
pop
add
xchg
push
andb
push
pop
pop
ja
incb
ret
pop
xor
out
les
or
test
pop
scas
inc
dec
lods
mov
mov
mov
dec
push
inc
pop
add
mov
fbld
aaa
std
jns
add
cmpsl
push
ret
call
cltd
fnstenv
pushf
push
xor
fwait
mov
ror
imul
push
lods
call
insl
lea
stos
in
and
ficomps
ret
pop
popa
jbe
jbe
lea
sub
jle
aad
inc
jg
inc
sbb
adc
lcall
xlat
inc
icebp
clc
sbbl
mov
lret
jle
bound
xchg
cmp
jns
sti
and
sub
xor
push
std
xchg
inc
ja
cmpsb
add
adc
incb
sbb
and
sub
call
add
insl
shrl
push
sbb
jl
mov
leave
in
scas
cld
jp
mov
pop
xor
idivl
in
sub
test
lret
adc
in
or
sbb
out
aam
hlt
enter
lds
push
add
push
push
ss
scas
scas
xor
movsl
cwtl
loopne
xorb
andb
ljmp
insb
std
arpl
mov
and
loopne
test
mov
popf
scas
sbb
inc
lods
cmp
adc
ds
xchg
pop
sbb
das
subl
mov
fdivrs
cmp
into
sbb
xor
sbb
outsl
js
data16
in
adc
mov
int3
daa
cs
and
cwtl
call
cmp
adc
mov
scas
enter
stos
les
cmp
dec
sti
xchg
es
pop
adc
and
push
sub
in
addl
daa
jmp
adc
pop
mov
or
ds
xor
dec
int
in
jo
jne
out
lds
arpl
ds
mov
iret
or
pop
mov
int
pop
cwtl
push
jle
push
xor
push
mov
repz
or
dec
mov
xor
inc
int3
outsl
add
jg
das
sub
mov
jo
push
inc
cli
mov
mov
dec
je
push
inc
xchg
in
inc
out
in
sbbl
fistps
dec
xchg
cmpsb
enter
das
mov
adc
out
movsb
imul
adc
mov
faddp
pushf
push
andb
fstps
add
int
int3
adc
stc
addl
nop
icebp
dec
mov
addr16
cmp
das
xchg
stos
or
push
leave
mov
push
das
clc
xor
dec
repnz
nop
adc
pop
pushf
out
push
pop
rcrb
adc
cwtl
cmc
pop
ret
js
dec
inc
mov
dec
xchg
movlps
fwait
decl
adc
jne
mov
dec
pop
mov
jle
dec
sbb
mov
and
jns
mov
and
push
add
mov
ret
stos
in
adc
lahf
add
adc
mull
mov
fldcw
out
xchg
lock
mov
rcrb
add
mov
xchg
leave
mov
dec
ss
call
in
jmp
jp
pop
negb
push
xchg
push
pop
mov
loopne
int3
jae
dec
adc
roll
pop
pop
dec
out
lds
aad
cwtl
testl
lods
jmp
adc
add
mov
pop
int3
sub
pusha
cmp
inc
imul
sub
jmp
pxor
gs
cmpsb
inc
lret
xorb
sub
mov
fiadds
mov
or
push
cmc
xor
sub
xchg
inc
mov
jmp
loope
mov
cltd
cmp
repz
es
fidivrl
inc
mov
xchg
xor
out
ljmp
mov
cli
mov
xchg
out
pop
ror
rorl
cwtl
dec
leave
repz
mov
inc
sahf
push
push
push
jmp
push
pop
daa
pop
sbb
ja
rolb
sub
fldenv
rcr
sti
lcall
sbb
ljmp
cwtl
mov
scas
xor
mov
decl
insl
scas
pushf
mov
inc
imul
sub
shlb
push
aam
cmp
cltd
fisubrs
jo
insl
out
and
sbb
ljmp
or
hlt
rcrl
jle
mov
cmp
es
fsubrl
fistps
nop
in
mov
movsb
jecxz
add
mov
inc
pop
clc
imul
test
cld
outsl
ret
repnz
add
cli
sub
or
mov
jbe
dec
push
inc
push
adc
push
xchg
mov
adc
or
stos
aaa
call
fisubl
sub
loop
lret
mov
in
je
ficoml
fstl
pop
es
and
cltd
pop
hlt
mov
and
iret
mov
das
add
decb
jne
mov
pop
mov
adc
fiadds
mov
mov
xchg
loopne
call
push
pop
out
lock
pop
push
mov
pop
push
clc
sbb
and
adc
fwait
loopne
inc
jl
xor
sti
mov
inc
sbb
pop
cld
aaa
out
mov
mov
inc
aaa
nop
cmp
ja
push
dec
sbb
mov
loopne
add
or
mov
pop
in
xor
mov
lods
inc
sub
mov
cmpsl
jl
aas
or
push
xchg
sti
aad
or
inc
or
repnz
cs
ljmp
outsl
pop
or
pop
rolb
stc
add
lahf
cmpb
pop
sub
pop
in
mov
popf
xlat
sub
and
push
hlt
xchg
loopne
lods
mov
mov
cmp
mov
jno
pushf
scas
lcall
xor
gs
lret
mov
inc
fstpl
xor
call
into
testl
mov
cmpsb
mov
pop
add
sub
xchg
aas
je
jae
or
jae
outsb
xchg
leave
mov
jle
sbb
and
mov
jp
cmp
cltd
mov
andl
pop
cltd
mov
pop
mov
lods
mov
iret
stos
adc
sbb
out
hlt
fldt
sbb
mov
push
aam
push
loopne
iret
cmpsl
jp
cmpsl
or
les
sbb
inc
out
cltd
sahf
sub
mov
pop
aaa
mov
fistpll
insl
mov
or
nop
mov
pop
popa
in
aam
mov
inc
test
outsb
dec
movsb
mov
and
pop
mov
cmp
mov
pop
mov
leave
cmpsl
icebp
int
hlt
loope
adcb
fwait
je
insl
stc
and
xor
fidivs
mov
je
xchg
inc
daa
xchg
sbb
push
dec
int3
lret
arpl
movsb
fstpt
mov
pop
dec
rcll
jge
sbb
push
jge
mov
jb
pusha
cli
mov
addr16
popa
pusha
pop
insl
mov
cli
btr
xor
adc
enter
movsb
and
mov
mov
shll
cmp
dec
adc
popf
ds
jne
rorb
popf
sub
sub
mov
add
fldt
dec
add
std
jle
pop
das
out
fstps
mov
jns
jge
mov
mov
add
mov
jno
mov
sub
sub
mov
cmp
or
cmp
inc
aad
inc
movsl
movsl
mul
adc
xchg
hlt
xchg
sti
js
mov
pop
dec
push
pop
sbb
adc
in
inc
aam
stos
sub
je
rclb
cmpsb
stos
lock
ja
xor
push
xchg
fdivrs
add
sbb
dec
mov
jns
sbb
jno
xchg
mov
repnz
arpl
std
into
mov
xchg
fisubl
std
adc
dec
cmp
jns
cmc
xchg
mov
jno
popf
dec
arpl
movsb
mov
daa
mov
inc
and
jmp
jmp
mov
popa
icebp
mov
arpl
push
insl
ds
mov
repz
cli
mov
hlt
adc
insl
xchg
stc
imul
push
ret
push
scas
xchg
mov
movsb
xor
cmp
scas
xor
pop
jae
mov
or
jbe
sbb
enter
dec
jg
and
outsl
mov
jmp
scas
sbb
inc
out
lret
and
jne
xor
push
xchg
cmp
neg
and
mov
insl
je
push
movsb
mov
ret
jmp
sub
mov
lods
mov
dec
fidivl
jae
xor
cmc
out
stos
mov
int3
stos
scas
icebp
incb
and
sub
cmp
pushf
scas
push
push
push
out
ret
ja
cmc
mov
sarl
sbb
scas
inc
mov
stos
inc
daa
sti
mov
sbb
mov
pop
shlb
jg
inc
mov
ret
mov
dec
outsb
sbb
fnstcw
adc
inc
sti
cmp
bound
cmp
std
lock
add
sbb
and
xchg
xchg
js
pop
aas
movsl
lods
and
or
or
sub
cmp
sbb
mov
enter
lock
adc
repnz
cmpsl
push
dec
pop
adc
aaa
cld
bound
stos
cmp
inc
lcall
cmp
mov
push
dec
fwait
sub
push
push
sbb
mov
pushf
add
out
idivl
aas
mov
mov
jecxz
aam
or
push
div
jbe
fmul
xor
cmc
jb
push
adc
or
xor
push
pop
sub
add
lret
mov
jbe
cmp
dec
sub
fwait
pop
adc
iret
mov
mov
cwtd
and
lret
mov
fidivs
adc
test
dec
sbb
imul
mov
and
fidivrl
mov
loopne
mov
fidivrl
fisubl
inc
divl
insb
inc
lahf
ret
ja
sub
imul
jle
clc
and
sub
pop
incb
sub
lret
mov
sti
adc
jecxz
jecxz
sti
mov
fsubs
and
xchg
add
loopne
mov
jmp
dec
cmpsl
sub
daa
inc
mov
ret
pop
aaa
inc
dec
jo
inc
data16
sti
mov
scas
xor
dec
les
adc
mov
sub
jno
xchg
and
dec
pop
mov
dec
pop
clc
arpl
lods
movsl
inc
jecxz
in
push
pushf
jmp
orl
pop
lahf
clc
jne
sbb
in
push
sbb
fisttps
stos
aaa
mov
pop
sarb
lcall
push
popa
or
xor
or
fdivr
push
mov
pop
in
mov
fcomp
push
pop
mov
int
xchg
pusha
mov
in
shrb
jecxz
fwait
cmpsl
gs
dec
out
cs
mov
ffree
push
xor
loope
insb
iret
and
mov
adc
sbb
dec
mov
sbb
xchg
popf
stc
jbe
dec
lcall
jmp
stc
xor
lds
xor
sbb
mov
cmp
bnd
push
std
jo
mov
xchg
xor
idivb
es
ret
dec
jmp
and
scas
daa
cmp
xchg
pop
cmp
out
test
xor
std
cmp
inc
dec
std
adc
fisubrl
cmp
rcl
shrb
cs
inc
jnp
jne
outsb
jle
mov
sub
dec
imul
fistpll
leave
out
mov
adc
add
add
jl
fists
push
and
cmp
cmpsl
cmp
movsl
icebp
mov
push
in
in
add
xchg
sub
cmp
add
shlb
or
test
das
mov
lcall
fidivl
addr16
xchg
std
add
lock
dec
imul
sub
lds
outsb
jb
inc
insl
xor
inc
dec
and
add
outsl
add
pop
insl
adc
cmp
inc
adc
arpl
push
pop
mov
daa
inc
sti
lods
push
jae
dec
lahf
es
aaa
mov
in
movsb
or
sub
fcomp
or
sbb
xchg
movsb
sub
jbe
fwait
sub
or
pusha
add
dec
inc
adc
clc
xadd
shll
lahf
lods
call
mov
jnp
repnz
dec
aad
shlb
outsl
cli
jbe
mov
pop
push
lods
and
adc
mov
lods
xor
loop
and
divl
dec
sbb
lock
adc
sbbl
add
pop
pop
mov
lea
es
inc
mov
es
mov
ds
lahf
jns
lock
std
adc
sbb
xor
and
mov
fcompl
nop
dec
inc
cmp
pop
push
jae
and
mov
dec
aad
or
nop
cld
cmp
fadd
sub
mov
nop
xor
adc
cltd
dec
inc
nop
cmp
sub
jg
sbb
mov
ret
mov
popa
cmp
int3
adc
jno
xchg
mov
cmp
roll
pop
inc
xor
jl
push
and
jbe
inc
lahf
and
cwtl
aaa
pop
push
pop
mov
fstps
inc
mov
idiv
inc
mov
incl
cmp
mov
mov
mov
shl
pop
cmpsb
mov
popa
outsl
sub
jmp
leave
push
negl
mov
ficoml
jg
add
push
imul
inc
cmp
pmaddwd
add
dec
dec
shrb
push
xchg
mov
inc
sub
or
pop
jns
inc
out
stos
js
jle
jle
inc
xor
and
movsb
mov
adcl
ja
ret
in
ja
adc
ds
les
dec
sub
xchg
mov
icebp
mov
xchg
fistl
call
lahf
pop
cli
addl
inc
sbbb
cmp
sub
dec
inc
and
pusha
call
jl
push
imul
out
test
fwait
mov
mov
insl
jb
dec
ss
scas
rcrb
push
lahf
test
dec
shlb
das
std
pusha
cmpsl
popf
push
xchg
mov
xchg
bound
lds
je
imul
lret
out
xchg
fidivs
jl
mov
mov
cmpsl
push
add
push
aad
lock
sub
add
and
sbb
enter
xor
popf
mov
jno
xchg
push
cmp
enter
enter
sub
mov
aam
movsb
imul
cmovl
sub
or
push
pop
push
dec
test
adc
int3
push
jnp
shll
clc
movsl
mov
jb
inc
xchg
cwtl
push
daa
mov
pop
push
es
ftst
movl
sub
outsl
add
jg
hlt
inc
lret
std
jns
lahf
into
int3
in
sub
mov
pop
cmp
xor
adc
sub
sub
aas
pop
push
cltd
mov
int
test
sub
lock
ret
mov
sub
push
les
nop
or
loope
xor
pop
dec
sbb
lcall
pop
aam
test
jge
and
out
test
imul
ljmp
cld
cmp
cmp
testb
clc
stos
mov
mov
fsts
clc
inc
add
mov
aaa
cltd
mov
pop
lahf
rclb
pop
pop
popf
shll
add
fidivl
stos
orl
sbb
scas
cmp
repnz
repnz
in
rcll
nop
jmp
xchg
push
add
in
add
data16
aam
inc
aas
cs
mov
and
jne
movsl
test
bound
and
into
dec
int3
les
outsb
inc
les
fwait
mov
sbb
pop
in
pop
dec
out
sbb
cmp
push
outsl
pop
or
daa
jnp
jecxz
mov
inc
fwait
popf
leave
fwait
pop
popf
pop
outsb
adc
lds
mov
cs
add
lret
popa
imul
aad
in
inc
xchg
aaa
add
mov
into
inc
sub
dec
pop
int3
out
mov
fistps
xchg
iret
insb
cs
je
and
cmp
xchg
jb
aad
sbb
lods
aam
xor
jnp
push
or
mov
and
sub
hlt
inc
cld
or
sub
inc
in
sbb
cmp
bound
je
sarb
jb
inc
xorl
and
and
fcomps
jo
cmp
inc
cld
ret
scas
dec
lret
shlb
mov
pop
cltd
lret
pop
insl
add
cmp
std
dec
push
sbbl
push
push
adc
xchg
sbb
movsb
dec
xor
ss
dec
fadd
or
xchg
and
jp
stc
scas
imul
lahf
popa
lahf
pop
sub
sub
push
cmc
mov
xor
or
sub
lds
push
rcrb
push
mov
nop
jo
jle
mov
jp
out
mov
imul
sub
mov
inc
jg
gs
scas
dec
fdivs
out
hlt
cmp
dec
adc
dec
xor
lcall
cld
mov
aaa
jp
lock
movsl
jmp
push
jp
inc
and
mov
mov
outsb
xor
lods
ret
add
shlb
mov
in
pushf
and
out
arpl
mov
pop
sub
mov
mov
jp
jb
cmp
xchg
pop
cmpl
xchg
xchg
cmp
jnp
aad
jae
lea
mov
dec
xchg
xor
stos
and
sub
jge
fcmovnu
fidivrl
push
lret
sti
and
sub
nop
push
jp
xor
adc
out
pop
mov
xchg
adc
jns
jp
cmp
std
xchg
jg
scas
outsl
mov
xor
sbb
dec
pop
mov
int3
insb
adc
inc
js
mov
arpl
fisubrs
or
jns
rorb
sahf
xor
bound
addr16
imul
insb
jbe
out
push
pop
mov
mov
pop
add
out
dec
lret
cli
imul
stc
xor
and
push
or
ss
in
mov
sub
out
rol
inc
mov
iret
cmp
iret
outsl
add
jae,pt
jmp
xchg
pop
push
mov
xor
mov
incb
jne
jo
push
rorb
xchg
pop
and
repnz
lock
xchg
sbb
cmp
inc
cmc
movsl
cmp
pusha
sub
or
sub
xor
lret
in
cltd
shlb
sbb
lret
mov
pop
clc
inc
pop
test
sub
push
mov
lcall
xchg
aas
mov
gs
inc
pop
addr16
and
rorl
rcrl
jl
jge
inc
push
xchg
jno
aaa
xor
mov
fisubs
inc
sub
inc
push
cmp
mov
push
dec
int3
inc
testb
clc
mov
xchg
pusha
fcmovb
out
push
dec
aad
and
inc
nop
stos
xchg
jb
cmpl
shlb
arpl
inc
mov
lret
pop
mov
add
ss
sub
or
out
aaa
adc
es
aad
loope
gs
add
in
orb
scas
mov
sub
mov
cmp
xchg
cmp
sbb
mov
or
dec
hlt
sub
arpl
and
stos
rcrl
fdivl
cs
flds
jns
dec
push
fidivrl
scas
push
das
cwtl
inc
pushf
jl
mov
mov
pushf
imul
cmp
insl
sbb
repnz
cmpsl
rcrb
lcall
aaa
cmp
mov
andb
dec
pop
inc
addl
adc
pop
push
push
test
aaa
iret
pop
pop
push
and
push
pop
or
ret
xchg
adc
jno
lret
scas
lret
jns
xchg
pop
aad
xchg
mov
jg
pop
mov
lcall
and
push
call
lds
sbb
sarl
inc
xchg
pop
mov
gs
mov
mov
xchg
adc
push
into
pop
mov
cmp
arpl
pop
int
das
movsb
pop
es
pushf
jl
insl
repz
jno
aad
out
push
jmp
shlb
fdivrs
inc
xor
ret
sbb
or
addl
inc
scas
popa
xchg
pop
or
jp
xor
sub
jns
or
pop
fdivl
or
cmc
pop
jmp
and
pop
inc
pushf
push
into
fstl
loopne
pop
gs
pop
add
inc
pop
negb
push
mov
push
mov
mov
jno
mov
xchg
push
mov
out
adc
jne
nop
xchg
ret
cwtl
mov
or
jae
divl
mov
rclb
lods
xchg
pop
inc
incl
push
xchg
mov
xchg
mov
fsubs
mov
push
in
lods
mov
pop
cmpsl
dec
pop
int
cmp
cli
cmp
fdiv
andb
movl
shl
insb
pop
add
pop
jg
xchg
fisttpll
out
jno
push
iret
popa
jno
cmp
sbb
in
jl
cld
loope
push
movsb
dec
sub
outsl
repnz
dec
rcrl
and
xchg
rol
test
cmp
rol
cwtl
inc
cmpsb
scas
cs
and
stos
push
xor
and
inc
jae
fistpl
mov
inc
addl
cmp
shrb
fucomi
ss
adc
pop
xchg
into
sub
cmp
aas
jnp
les
pop
or
sahf
jb
lods
out
sahf
jl
inc
imul
cmc
fsubl
cs
int
add
add
xchg
adc
out
cs
jmp
add
fstl
push
sbb
gs
mov
mov
iret
fldl
xor
cmp
aad
mov
xchg
std
scas
or
out
loop
jmp
sbb
or
cltd
inc
dec
gs
sbb
push
push
xor
and
mov
add
cmp
add
mov
jae
xchg
decb
in
sbb
loop,pt
push
sbb
data16
mov
imul
cmp
into
ss
adc
test
mov
fidivrl
call
les
cmpsl
insl
shrb
cltd
cmp
mov
das
mov
icebp
testl
mov
loopne
cmpsl
fwait
mov
in
cwtl
or
cli
js
jl
sub
pop
packuswb
and
mov
or
and
sbb
rol
stc
arpl
lcall
jp
jb
insl
fcompl
and
pop
out
div
lret
xor
add
dec
push
pop
les
jno
mov
mov
dec
xchg
cmp
push
pop
lahf
xchg
jge
ret
sbb
orl
xchg
pop
scas
sbb
pop
adc
sub
pop
lahf
pop
jecxz
cmp
sbb
jae
cmp
les
adc
mov
in
sub
mov
stos
xchg
adc
nop
fiadds
push
loope
push
fiaddl
xchg
std
stos
push
pop
pop
or
mov
jo
in
push
mov
pushf
roll
lods
pop
ds
stos
ret
xchg
sbb
add
pop
stc
test
lods
adc
dec
popa
cvtdq2ps
popa
mov
call
stc
sbb
fcmovnu
mov
insl
or
mull
add
push
jae
fs
xor
pop
shlb
fadd
jp
stc
xor
adc
xor
cltd
adc
in
jl
xchg
xor
retw
popa
stc
add
sti
sub
mov
push
cmc
mov
iret
iret
ret
call
mov
and
loop
jl
popa
cmp
mov
push
fwait
or
pop
pop
in
ljmp
adc
lcall
loope
cmp
mov
aas
cltd
cmp
movsl
iret
iret
adc
add
xchg
jae
pusha
call
sbb
jle
jne
mov
jbe
je
lahf
and
bound
xor
add
subl
les
andl
out
rorl
hlt
sbb
push
lret
xchg
outsl
shll
jno
ljmp
add
add
pop
mov
sub
mov
scas
roll
xchg
fiaddl
into
test
push
das
and
push
adc
mov
stc
jne
sarb
mov
push
loop
dec
jg
fistps
add
data16
fildll
push
lods
jg
pop
jbe
mov
out
jnp
mov
push
jl
mov
stc
test
hlt
lcall
fdivs
outsb
or
or
int
pop
shlb
gs
pop
sbb
or
lcall
mov
push
push
lds
and
out
mov
aas
xchg
subl
enter
cs
push
addr16
add
add
je
testb
dec
pusha
jmp
insb
pcmpeqb
stos
popa
push
xor
imul
insl
push
pop
and
inc
sub
loop
mov
inc
fs
push
push
mov
pop
cld
das
nop
jl
test
mov
xchg
dec
add
and
stc
imul
scas
push
pop
xchg
insl
add
in
dec
stos
xor
sub
push
xchg
stos
aaa
sbb
adc
filds
cmp
ret
xchg
jnp
pop
xor
lea
push
inc
lahf
pushf
pop
flds
test
mov
mov
jecxz
xchg
inc
nop
push
and
and
lcall
sbb
stos
bound
mov
push
adc
lret
cltd
inc
popa
testb
mov
mov
push
stos
imul
pop
test
dec
popf
insl
dec
movsl
pop
jne
jns
or
cmp
lea
imul
dec
rep
inc
das
cli
push
jne
dec
mov
mov
sbb
push
mov
jp
adc
push
mov
dec
insl
das
les
out
icebp
pushf
push
xchg
fstpt
in
daa
inc
xchg
jmp
lahf
pop
outsb
jl
push
leave
arpl
sbb
jmp
lret
sbb
pop
push
rolb
cmp
fcoml
sub
xor
cmp
imul
push
lcall
iret
pop
mov
lods
mov
pop
call
xchg
outsl
addr16
stos
outsl
mov
cmpsl
fwait
and
out
cmp
ljmp
jns
scas
ja
inc
loope
addr16
in
pop
mov
dec
mov
pop
dec
jne
jb
pop
dec
fwait
in
xchg
inc
dec
jecxz
dec
jp
push
mov
inc
mov
stos
push
inc
push
mov
incl
mov
lret
scas
jb
and
cli
cmp
pop
lods
shlb
sub
dec
out
dec
mov
testb
push
cli
xchg
out
mov
mov
sbb
in
aas
bound
jbe
sub
add
cwtl
stc
movsl
mov
mov
xchg
cs
sbb
sbb
xchg
dec
insl
pop
mov
movsl
int
xchg
in
shrl
sbb
ljmp
into
loope
pop
xchg
mov
xor
xor
pop
mov
stos
hlt
ficoms
rcr
and
mov
loop
scas
sbb
ja
cmpsb
je
jb
dec
mov
orl
aaa
fwait
inc
imul
or
pop
and
adc
in
movsb
mov
popf
adcl
push
fildl
pop
xchg
mov
fistpl
out
push
mov
add
ljmp
add
push
inc
inc
mov
sub
adc
xlat
inc
fsts
rcl
adc
or
push
je
mov
inc
int
add
cmpsl
insb
cmpsb
lret
xchg
jmp
xorb
jb
xor
adc
scas
dec
jae
cmp
pusha
or
pop
icebp
ds
mov
jle
call
cltd
loopne
shrl
addr16
out
movsb
xor
in
mov
xor
jg
icebp
test
push
cmp
setge
adc
mov
and
jnp
mov
and
enter
push
scas
outsb
fsubs
std
cs
out
and
fcmovnu
mov
pop
cld
dec
rcrl
mov
sti
lods
pushf
ret
movups
cmp
push
add
xor
repz
gs
dec
lods
xchg
sarl
mov
lret
into
cmp
in
or
jb
cltd
mov
add
ret
repz
das
xchg
inc
xor
nop
jns
sbb
xor
jno
jecxz
and
cli
aam
cmp
in
das
and
ljmp
sub
subb
sub
fsubl
imul
sub
lods
orb
pop
add
push
mov
pop
iret
cmp
mov
loopne
jnp
xchg
mov
nop
push
sbb
jg
inc
xor
lea
dec
cmp
xor
xchg
popa
jl
adc
movsl
jne
and
shlb
add
mov
xchg
pop
std
cltd
push
mov
jns
cs
cld
pop
sbb
mov
enter
mov
mov
pop
outsl
ficompl
rcr
add
mov
inc
and
jns
push
sti
push
sub
dec
inc
pop
mov
jp
lods
or
xchg
in
jbe
cmp
stc
pop
jp
or
adc
sbbb
jo
repnz
sub
test
imul
mov
xor
push
cmp
cmp
ljmp
rcpps
pop
inc
in
sub
loop
xchg
or
insl
mov
cmp
andb
outsl
mov
movsl
ljmp
jns
mov
pop
mov
clc
mov
hlt
divl
leave
bound
jp
icebp
cmp
fdivrp
dec
mov
pusha
dec
cmp
cli
sbb
shr
hlt
daa
sbb
inc
pop
cwtl
mov
mov
daa
int
loope
les
adc
icebp
dec
cmp
pushf
rcrl
lods
mov
xor
inc
or
pop
and
out
inc
lods
jg
cmpsb
dec
lahf
aas
adc
pushf
add
in
or
push
pop
ja
rcll
sub
pop
int
ret
sarl
cmp
aas
lods
xchg
sbb
xchg
xor
cld
call
push
and
shlb
test
dec
fistpll
xchg
sub
adc
pop
cmpsl
mov
insl
cmp
push
sub
jbe
pop
sub
clc
jmp
push
pop
sarb
mov
fidivrs
xor
repz
push
push
nop
out
mov
out
cli
xchg
vmwrite
push
inc
cs
test
cli
in
lret
loope
add
sbb
or
add
shll
add
enter
lods
and
xchg
cli
jl
jmp
arpl
shrb
dec
iret
jge
xor
sub
xchg
push
test
daa
loop
cli
pop
aam
adc
das
andl
jno
incl
sbb
dec
sahf
decb
lcall
sbb
decb
mov
xor
xor
pop
sbb
std
or
dec
jno
inc
cmp
jl
hlt
fs
push
clc
fcmovbe
insb
lods
xchg
sbb
or
mov
mov
and
pop
lahf
push
xor
mov
xchg
sbb
loopne
or
mov
jmp
push
int
in
sbb
outsl
mov
aas
jno
inc
xchg
sub
cmpsl
jp
sti
hlt
and
imul
lahf
pop
cli
mov
adc
add
mov
scas
jle
in
repnz
mov
iret
push
sbb
push
mov
or
mov
sbb
add
stc
icebp
sbb
pusha
insb
test
jne
or
inc
xor
cmpsl
out
jo
xchg
adc
roll
dec
jbe
cmp
dec
sub
mov
pop
dec
sub
push
mov
sti
cmpsb
shll
mov
mov
add
sub
jo
push
or
cmp
movsl
mov
and
popf
fs
fwait
inc
xchg
movsb
outsb
pusha
or
mov
mov
mov
pop
sbb
loop
rolb
sub
adc
push
out
add
cmp
sti
cltd
sbb
jnp
mov
or
push
cmpsb
pop
jo
jl
add
sahf
jns
cmp
sbbb
mov
aas
ret
inc
shrl
std
xchg
test
ficomps
call
mov
sub
push
aad
int
in
adc
mov
pusha
pop
nop
orb
inc
xor
mov
ljmp
push
mov
push
std
push
mov
inc
popa
mov
push
sub
or
mov
mov
and
lahf
xchg
fistpl
movb
std
imul
and
mov
inc
mov
aam
push
inc
mov
fstp
mov
inc
std
sbb
in
mov
arpl
mov
test
cmc
inc
sub
adc
sbb
stos
sub
add
mov
add
and
xor
and
sbb
jo
imul
fsubrl
jo
mov
js
jae,pn
xchg
lods
loop
pop
push
mov
mov
jb
mov
cltd
imul
js
aad
mov
stos
pop
ja
xor
jl
mov
int
in
stos
sahf
xchg
or
mov
sub
fnstcw
es
sub
pusha
ret
pop
and
stos
jnp
repnz
ret
stos
je
push
cmp
push
push
das
xchg
mov
jne
jns
addr16
mov
add
imul
stos
sti
mov
inc
aam
fisttps
sbb
cmp
jecxz
adc
mov
and
cmp
sahf
loop
mov
ds
mov
aam
dec
pop
fisttpll
in
imul
jp
mov
fdivr
call
loop
int
fs
xchg
aas
les
out
jecxz
xchg
mov
sar
lahf
icebp
cmp
xor
push
pop
or
in
xor
fs
scas
xchg
jae
je
add
and
push
xchg
adc
mov
push
pop
lcall
int
out
outsl
mov
jnp
and
out
jle
leave
imul
repnz
sbb
or
lods
push
xor
nop
xor
lret
push
add
xchg
lods
data16
ret
inc
lock
sub
lret
and
mov
stos
fnsave
inc
jge
jg
pop
loopne
sbb
outsl
gs
das
aaa
xlat
rcl
mov
mov
dec
sbb
pop
std
mov
xor
xchg
cltd
mov
pop
cmp
scas
mov
sub
int
cmpsb
aam
stc
push
cmp
testl
push
out
and
das
mov
repnz
shrb
and
out
mov
inc
lods
jmp
fisttps
jo
sbb
fisttps
xlat
scas
shl
stc
das
mov
aas
cs
mov
pop
fcomi
faddl
push
jnp
sub
xchg
push
outsl
mov
push
add
mov
fcmovne
sub
cli
cmp
imul
xor
into
jnp
jmp
add
gs
dec
pop
aaa
scas
push
pop
loopne
into
jmp
xchg
sarl
and
and
mov
daa
icebp
push
pop
ss
cwtl
mov
fsubrl
popf
in
ret
lods
jnp
xchg
call
mov
pop
sbb
xor
push
dec
inc
aad
add
mov
test
mov
in
je
xorb
lods
and
sbbl
daa
adc
test
mov
push
shlb
mov
pop
push
int
cli
pop
pop
push
push
ds
stos
sbb
and
rclb
fs
pop
cmp
or
ja
out
adc
dec
add
dec
and
mov
addr16
cmpsl
jp
faddp
add
cmp
in
sub
loope
add
jmp
fsts
cmpsb
aad
pop
push
xchg
lahf
mulb
xor
xor
je
jno
pop
addl
fadds
icebp
or
mov
std
push
mov
push
in
repnz
adc
test
imulb
inc
sbb
mov
loop
sbb
sub
xchg
faddp
mov
stos
scas
xor
and
mov
jno
pop
sbb
mov
cmpsb
bt
xchg
mov
sub
dec
fstl
mov
mov
mov
push
mov
sti
mov
outsl
or
jbe
xchg
push
cmp
jo
add
push
mov
push
outsb
xor
xchg
sbb
shlb
sarl
mov
and
sti
pusha
or
push
dec
shl
outsb
mov
sti
clc
ds
mov
xlat
mov
mov
daa
aaa
add
pop
sbb
mov
sbb
push
xchg
ror
jge
jge
mov
mov
or
dec
pop
mov
pop
mov
pop
cli
vrsqrtps
push
ret
mov
daa
mov
int
adc
cmpsl
pop
scas
pop
pop
pushf
rol
sub
popa
mov
mov
out
cwtl
sbb
inc
out
repz
ror
push
sub
pop
mov
fdiv
stos
dec
and
pop
mov
pushf
stos
roll
dec
cld
arpl
sbb
bound
out
mov
and
push
add
xor
divb
lods
jecxz
sub
xchg
xchg
into
and
not
mov
mov
add
dec
xor
inc
add
int
lcall
jno
mov
push
daa
mov
sbb
insl
add
dec
test
das
jge
inc
out
addl
shlb
sub
sahf
inc
stos
inc
xor
into
xchg
cltd
sbb
and
pop
xchg
or
xor
rcrb
xchg
rcr
and
in
pushf
push
jbe
mov
pop
ret
cmp
xchg
lcall
mov
cmp
pushf
or
mov
or
pop
dec
jg
jns
push
mov
shlb
insb
fs
fwait
xchg
dec
test
nop
inc
xchg
cli
repnz
test
popa
call
jno
roll
and
hlt
xchg
into
or
iret
outsb
ret
adc
sbb
hlt
mov
stc
aaa
cli
mov
cmp
lods
inc
push
inc
cmp
rcrl
clc
ret
test
in
bound
mov
and
jecxz
mul
add
aaa
in
push
mov
lods
xchg
xor
movsl
nop
daa
test
inc
push
sbb
push
aad
out
scas
jne
mov
or
mov
nop
subl
out
movsl
shlb
mov
imul
stos
ss
cmp
lods
in
jl
gs
or
push
push
mov
jmp
mov
inc
push
xchg
std
sbb
pushf
sub
arpl
inc
scas
in
pop
adc
pop
pop
ret
lret
test
call
adc
push
in
xor
das
int3
xchg
or
mov
xor
add
push
test
xchg
daa
sub
outsl
arpl
lods
add
mov
cmp
fs
push
fiadds
rclb
dec
mov
dec
mov
inc
lods
aaa
shrl
cmp
jo
arpl
pop
test
cmp
loope
xchg
sub
cmpps
fsts
xlat
mov
mov
arpl
jecxz
pop
mov
ljmp
push
inc
aas
pusha
fsts
push
int
and
fcmovne
jmp
test
push
testl
push
pop
rclb
inc
jns
mov
mov
add
cmpsb
mov
out
mov
in
mov
cmp
add
vmread
sub
push
iret
sbb
loope
mov
and
pop
push
fdivs
movsl
adc
stos
xchg
repz
xchg
inc
ss
pop
xor
rcl
sub
jne
xchg
xlat
cltd
dec
adc
stc
dec
mov
insl
jnp
addr16
xor
dec
or
in
mov
sub
adc
xchg
psrld
hlt
adc
cmpl
jmp
fistpll
insb
sub
pop
shrl
jmp
add
mov
shrb
and
pcmpgtw
mov
pop
mov
dec
push
inc
adc
aad
mov
fistpl
mov
fs
into
lods
mov
push
xor
bound
cwtl
leave
loop
cmp
and
ret
mov
jb
pop
pop
fs
mov
nop
insl
jae
add
xchg
insl
sbb
add
outsb
repnz
and
xchg
adc
test
cli
outsl
jne
mov
inc
in
or
sbb
mov
xor
mov
repnz
ljmp
lock
pop
and
scas
pop
xchg
js
jne
and
push
or
popa
cltd
dec
mov
sub
adc
sbb
mov
idiv
dec
iret
xchg
sbb
jae
imul
loop
push
imull
and
fldl
pop
out
cltd
sbb
pusha
cmp
xchg
mov
sbb
mov
sti
inc
jg
enter
sub
add
cmp
ljmp
sbb
call
lahf
push
mov
pusha
js
fisubrs
xchg
xor
dec
lret
popf
pop
mov
out
dec
daa
mov
add
inc
lea
inc
or
dec
jae,pt
lock
shrb
ffree
ds
bound
insl
fxch
or
aas
sbbb
cmp
arpl
mov
cmc
fsubs
xchg
dec
pop
pop
data16
push
cwtd
inc
shl
cltd
mov
inc
je
mov
and
pop
mov
cld
add
xchg
movsl
jge
lret
sub
test
jmp
test
arpl
lods
dec
inc
xor
dec
or
and
adc
int
enter
std
mov
xchg
out
cmp
movsl
dec
xchg
cmovbe
stc
dec
sbb
repnz
push
ret
leave
nop
popf
and
mov
shrl
mov
js
sub
dec
js
std
mov
in
fistpl
jle
sbb
scas
cmp
int
pop
stc
lret
push
movsb
jle
test
inc
jmp
mov
jle
jge
test
pop
das
sbb
test
mov
and
inc
movsl
gs
outsl
jbe
and
inc
inc
loop
mov
inc
leave
lock
push
loopne
fs
gs
xchg
movsl
sbb
shlb
jne
xchg
movsb
xchg
or
aam
mov
sub
pop
add
mov
test
outsw
dec
std
clc
and
jp
inc
mov
aas
sbb
xlat
xchg
imul
xchg
mov
xchg
fcoms
test
mov
test
popf
mov
dec
ja
pop
in
push
xchg
or
lret
and
push
sbb
in
pop
or
push
jp
pop
mov
jno
adc
cmp
outsl
es
xorl
les
inc
cmp
cmp
inc
fistpl
mov
cmp
mov
mov
mov
imul
popa
daa
out
stc
mov
mov
loope
push
xchg
stos
clc
insb
out
cmc
lret
int
aaa
daa
or
ds
jp
mov
cwtl
stos
pop
mov
rolb
push
sbb
out
inc
loope
pop
xchg
je
cmp
push
dec
mov
xchg
lods
icebp
sub
mov
std
or
cmpsb
ficompl
rcrb
pop
adcl
nop
mov
jmp
les
jp
push
sbb
mov
mov
data16
pop
and
adc
aam
cmp
fldenv
enter
mov
in
fisubrs
xor
test
inc
sbb
cmpsl
les
dec
mov
cmp
repz
mov
cmp
or
mov
pop
cmpsb
les
cmp
repz
cmp
pop
out
into
mov
test
sub
andl
xchg
cmp
or
pop
push
xor
test
aad
in
mov
or
rcll
inc
jl
inc
test
idiv
insl
xor
leave
or
hlt
push
rclb
xchg
xchg
inc
mov
jne
imul
or
inc
or
imull
stos
xlat
push
lock
mov
mov
add
mov
xor
sbb
inc
cmp
pop
inc
popf
jne
cmp
mov
mov
enter
mov
scas
repz
jl
test
dec
lcall
adc
arpl
rol
pop
rolb
in
leave
lock
fsubrs
hlt
cmp
and
pop
pop
mov
out
xchg
xchg
add
cld
lahf
imul
cmpsb
or
icebp
ret
int3
je
pop
insl
xchg
call
sbb
mov
lret
int
adc
xchg
nop
js
mov
push
or
call
dec
jl
xor
test
or
ss
cmp
out
loop
or
pop
cmp
leave
fnstcw
daa
rolb
sub
and
cmp
nop
orl
stc
scas
xor
push
test
imul
mov
gs
imull
jo
push
movsb
jle
aam
shlb
gs
adc
sarb
cmpsb
mov
xchg
shl
ret
lret
test
icebp
scas
ss
adc
sbb
clc
lcall
dec
sti
leave
or
insl
mov
dec
int3
fs
dec
fisttpl
xchg
addl
movsb
cltd
shlb
clc
ret
mov
sub
sbb
sub
push
inc
sbb
cli
fsubrl
notl
das
testb
out
add
xlat
inc
ljmp
push
fidivrl
cli
cmpsl
jnp
add
movsb
mov
in
in
scas
xchg
out
into
dec
pop
scas
and
xchg
dec
xor
pop
jo
pop
fmul
pop
lock
push
gs
hlt
pop
cltd
dec
sub
xchg
in
sub
mov
mull
imul
lret
sbb
xchg
fisttpll
dec
xchg
jecxz
mov
inc
scas
shll
sti
das
enter
lods
mov
pop
movsl
lds
imul
or
pop
xor
add
sub
lods
mov
pop
lods
fimull
xor
sbb
mov
pop
loope
push
jo
lods
pop
repz
frstor
sub
push
bound
es
outsb
loope
inc
test
loop
sbb
cltd
test
push
xor
lret
pop
pop
adcl
push
mov
sbb
sub
shll
inc
xchg
fiadds
push
std
push
mov
xor
scas
jns
push
xchg
loope
pop
lret
adc
mov
insl
cmpl
fs
xchg
les
stos
push
sbb
mov
mov
movsl
mov
jb
pop
addr16
adc
cmp
pop
pop
or
xchg
pop
shll
lds
orl
push
fs
push
push
sub
fwait
jnp
xchg
add
into
pop
fcmovu
out
les
imul
pop
out
cmpsb
out
loopne
out
xor
xchg
pop
negb
sbb
push
mov
outsl
movsb
dec
in
mov
outsl
or
mov
xchg
bound
mov
jnp
imul
jp
stos
pop
in
in
out
mov
repz
fs
xor
xor
push
fistl
jmp
pop
add
aaa
pop
cmc
lods
scas
and
jnp
xlat
arpl
bound
pop
cmp
rcr
cmp
and
xor
mov
push
loop
xchg
std
adcl
mov
pop
test
scas
idiv
push
dec
jmp
arpl
mov
pop
cmpsb
subb
mov
mov
rclb
inc
lods
sbb
mov
push
mov
shl
fildll
adc
adc
aaa
mov
sbb
inc
or
rcrb
popa
dec
xor
fcmovnbe
ja
xor
leave
das
jns
push
fimull
mov
in
xor
add
add
cli
les
mov
lcall
data16
inc
call
push
xor
adc
sar
mov
lea
cli
jp
in
adc
lock
inc
js
rol
dec
in
inc
sbbb
pusha
enter
add
notb
or
ss
push
mov
jl
sbb
ret
pop
push
cmp
jno
dec
xlat
imul
mov
frstor
dec
movsl
cmc
jg
jecxz
pop
ds
mov
scas
jne
fstps
inc
pop
sub
mov
mov
sbb
test
and
imul
xlat
test
xchg
test
out
or
je
or
imul
test
movsb
xor
xchg
add
cmc
add
push
movsb
cld
stos
pop
outsb
push
mov
push
dec
leave
inc
jo
outsb
sbb
imul
jns
mov
and
jle
data16
ljmp
push
pushf
pop
and
lahf
jne
loope
hlt
add
dec
xor
push
lret
fs
mov
loop
stc
push
mov
mov
mov
mov
add
push
adc
fldt
pop
or
sbb
cmp
mov
js
mov
mov
dec
fdivp
clc
popa
mov
jle
fdivr
jae
push
mov
inc
insl
xor
roll
int
pusha
pop
dec
rcrb
xor
add
mov
push
movsb
xbegin
subb
iret
cmp
int3
inc
subb
cmp
pop
pop
es
mov
push
mov
cli
add
inc
add
data16
xchg
js
pop
pop
sti
adc
imul
jmp
add
stc
pop
outsb
adc
mov
cli
mov
sti
push
ficoms
push
jge
sbb
add
clc
aaa
mov
lcall
cltd
cmp
jecxz
xlat
int3
inc
adc
push
rcl
loop
xlat
ja
sti
loop
out
mov
cmp
dec
or
icebp
sub
push
scas
in
data16
sbb
icebp
filds
lahf
dec
dec
jle
jl
out
loope
lock
xor
sub
ds
pop
orb
mov
int
mov
notl
pop
push
sbb
lock
or
pop
test
dec
inc
lds
popf
and
mov
and
repnz
pop
push
shrl
mov
adc
and
pushf
js
fwait
push
sbb
jae
xchg
ret
and
add
jle
jp
movsl
test
push
mov
ficoml
inc
jl
sub
push
push
movl
jp
jge
lock
or
cwtl
xchg
push
arpl
das
rolb
mov
clc
sahf
adc
movsb
push
xor
out
sub
adc
pop
and
jge
add
mov
cmc
xchg
loope
or
mov
repnz
jne
jmp
xor
push
movb
and
and
aas
mov
cmpsl
adc
lods
push
jns
adc
pop
rcrl
fwait
pop
push
push
inc
incl
dec
jg
cmp
out
mov
mov
enter
mov
adcb
gs
iret
sub
out
outsl
hlt
push
inc
push
sub
outsb
mov
push
mov
sti
jo
int3
aaa
mov
imull
cmp
adc
cli
popf
jne
addl
sub
fisttpll
out
lea
jnp
in
pop
jo
mov
lods
push
enter
clc
divl
or
orl
cmp
pop
mov
jecxz
test
ror
fs
inc
shrb
mov
jmp
sarb
sub
jno
push
dec
xchg
mov
sbb
clc
into
xchg
ret
and
xlat
mov
add
daa
mov
pop
dec
adc
rclb
movsb
movsl
pop
nop
out
repnz
xchg
sub
sub
jl
test
pop
fcmovne
in
aam
mov
pop
sbb
daa
adc
xchg
push
or
cwtl
xchg
add
stc
pop
adc
push
fmulp
xor
mov
jg
sbb
sub
enter
xor
mov
xor
shlb
inc
xchg
cmp
and
fs
mov
out
clc
mov
pusha
jb
push
jle
fdivrs
mov
xchg
mov
xchg
sahf
xorb
scas
rorl
cmpsb
in
test
mov
enter
inc
sub
cmp
das
popa
inc
bound
jae
mov
push
lods
pop
loop
lock
jl
es
pusha
notb
jns
repz
fmuls
or
dec
rcr
or
pop
xor
sub
inc
jg
jmp
pop
lahf
xchg
xor
dec
mov
sarb
mov
cmovg
inc
and
aad
inc
enter
das
shll
sbb
pop
dec
pop
pop
push
js
dec
mov
pop
xlat
mov
dec
fcmovu
or
mov
jns
in
test
cmp
fisubrl
lods
pop
push
stos
insb
cld
cmp
cwtl
int
push
cmp
push
insl
mov
push
int
push
bound
jmp
loope
mov
pop
adc
cs
lcall
mov
sub
mov
cmc
lea
ds
out
add
int3
fdivrs
inc
shlb
add
mov
mov
cmc
xorl
data16
nop
push
or
inc
test
adc
out
out
bound
cwtl
pop
std
xchg
test
in
and
ss
dec
cmp
inc
pushf
push
mov
icebp
dec
stos
or
lods
inc
xchg
lea
or
push
ljmp
lds
cmp
push
inc
test
xor
inc
cmp
push
pop
loop
sti
scas
jnp
cltd
push
cmp
push
es
dec
mov
daa
push
push
cmp
wrmsr
out
daa
xchg
and
leave
or
or
movsl
sub
negl
dec
mov
mov
test
mov
xor
lret
or
pop
das
stc
jle
push
add
es
call
and
cmpl
cmpsl
jns
movsb
sti
xchg
mov
ljmp
jns
sbb
inc
test
pop
insb
mov
in
jne
aam
hlt
add
es
or
mov
mov
mov
push
pop
addr16
add
mov
dec
insl
cmpsb
popf
inc
and
loope
iret
fcoms
inc
mov
lea
cmp
loop
xor
xchg
scas
test
dec
or
inc
sub
xlat
xchg
in
cltd
filds
sub
cmpsb
cmp
pop
je
inc
std
cmpsl
out
fbld
mov
mov
mov
popf
cmp
fistpll
dec
pop
mov
mov
xchg
insb
popa
pushf
imul
dec
addr16
loop
mov
addr16
jb
mov
cmp
icebp
xor
insb
inc
push
add
aaa
inc
push
andb
stc
stc
mov
push
insl
aas
pushf
mov
push
mov
lahf
adc
add
sahf
lock
adc
jo
out
int
push
push
jb
movsb
xchg
in
ljmp
push
sbb
jmp
iret
fs
scas
cltd
push
push
mov
loope
pop
dec
pop
je
gs
pop
imul
pop
jge
lods
arpl
ret
ja
mov
arpl
xor
in
push
outsb
stos
leave
cmpsb
sub
push
cmc
scas
data16
mov
dec
mov
and
xabort
mov
sbb
push
hlt
inc
adcb
xchg
sarb
fsubr
pop
jno
pop
dec
sbb
loop
leave
xchg
cmp
jbe
push
xchg
and
scas
push
stc
jmp
pushf
adc
or
jmp
pusha
mov
ja
jecxz
in
xchg
adc
popa
outsb
data16
pop
push
fbld
cmp
inc
xor
mov
push
insb
jns
fmull
jae
xchg
mov
dec
adcb
clc
jl
in
sbb
add
pop
in
repnz
or
outsl
call
and
push
jle
xchg
orb
aaa
mov
lret
adc
xchg
iret
or
rcll
adc
pop
sti
imul
adc
push
mov
je
icebp
and
cmpl
push
out
aad
add
scas
fisubrs
test
pop
test
dec
hlt
movsl
push
mov
jmp
pop
mov
or
xor
dec
push
das
sub
push
les
sub
push
dec
fistl
and
cmpsl
jl
out
js
add
cmc
xor
addr16
lret
dec
clc
bound
sub
pop
mov
jp
sub
jno
cld
icebp
in
xor
cmp
xchg
and
idiv
popf
imul
cld
mov
stc
out
and
dec
fwait
mov
int3
mov
stc
sbb
jo
pushf
lret
int
stc
lcall
leave
mov
add
fmuls
scas
adc
xchg
arpl
dec
mov
aas
pushf
fnstcw
out
imul
or
xchg
cs
add
and
xchg
fiadds
jo
xchg
cs
jns
inc
std
lea
and
scas
mulb
push
lret
fdivrl
and
cli
sbb
cmp
fwait
sarl
pop
dec
cmc
xor
xor
sub
and
push
ss
adc
and
lods
add
jg
push
mov
adc
in
pop
push
mov
add
and
bound
or
mov
pop
or
pusha
lock
add
add
imul
pop
rolb
aad
xor
es
dec
mov
vpaddusb
and
or
sub
mov
aam
add
ja
cld
loop
sbb
hlt
or
push
rorl
mov
sub
jg
mov
jne
jb
and
jecxz
aam
jnp
mov
cli
lods
mov
add
mov
outsl
ljmp
aad
cmpsb
sbb
or
movsl
pop
jo
adcb
insl
mov
fistpll
daa
cmp
sbb
stos
cmpsb
dec
insb
xchg
push
fidivl
cmp
ss
mov
lret
scas
pop
sbb
roll
xor
xchg
dec
pop
fidivl
into
push
adc
call
and
dec
cwtl
pop
xor
push
addr16
dec
cmpsb
lods
pop
cmp
dec
sti
loopne
and
pop
mov
jg
aam
xchg
jne
mov
add
lods
mov
push
into
arpl
repz
adc
cmp
xchg
insl
and
sub
xchg
pop
adc
lret
fimull
xor
adc
jp
pop
xchg
xchg
sub
lods
cmp
mov
or
cmp
roll
test
push
stc
iret
ja
popa
leave
lods
xchg
cmp
or
mulb
loopne
popa
stos
xor
out
jmp
lock
ljmp
int
pop
lcall
jae
decb
cmpl
sbb
pop
loopne
bound
cmpsb
and
mov
xor
ja
push
pop
xchg
sbb
inc
lcall
ss
xor
push
popl
or
lret
fs
cld
xor
outsb
sub
xor
cld
ret
adc
mov
test
jl
gs
pop
jecxz
loope
icebp
pusha
fdivrl
lahf
pop
pop
iret
lods
pop
in
ret
outsl
out
je
movsl
stos
jg
in
jo
loop
lods
inc
sti
xor
es
scas
mov
call
fsubr
in
adc
in
xor
or
cmpsl
cmpsb
aaa
xchg
fisubrs
inc
sub
mov
in
xchg
icebp
pop
jmp
mov
loopne
lcall
mov
divb
scas
or
adc
movsl
xchg
adc
add
add
jne
shrl
sub
mov
add
sti
xor
push
test
out
and
xchg
adc
or
into
xchg
scas
pop
dec
mov
mov
and
jb
xchg
mull
push
addr16
add
xor
fwait
xor
cmp
pop
mov
push
adc
rol
faddp
jo
dec
cs
or
movsl
clc
incl
jecxz
mov
jb
xor
add
scas
loopne
cmp
and
add
call
std
in
pop
jle
pop
pop
jb
out
mov
lret
movsb
stc
ljmp
fists
icebp
push
nop
adc
subb
add
push
in
and
dec
pop
int
shll
xor
hlt
sbb
inc
das
outsl
cwtl
test
push
mov
fiadds
or
jecxz
push
insl
cmc
aad
aaa
mov
push
fidivs
adc
xchg
in
sub
push
inc
pop
jp
adc
stc
and
add
or
fnstenv
cmc
push
scas
xchg
fdiv
cmp
xor
dec
daa
cwtl
andl
fsubs
gs
ret
lea
inc
scas
xor
or
lods
mov
cmp
clc
jle
outsb
out
ja
xchg
mov
jl
push
mov
push
and
dec
fisubs
popf
or
cmp
mov
insl
movsb
xor
push
ret
lds
out
fisubrl
es
pusha
add
dec
xorl
or
fisubs
push
clc
subl
xor
fcmovnbe
dec
and
inc
scas
hlt
pushf
addr16
imul
icebp
popf
fcomps
cmp
inc
add
movsb
cmp
push
and
and
push
aas
std
pop
xor
mov
xorb
mov
nop
rcr
mov
js
shll
xchg
dec
jmp
adc
icebp
sub
cmp
hlt
add
in
lret
xchg
rcr
scas
test
mov
je
gs
cmp
ds
sub
movl
fadds
push
arpl
cmpsl
les
mov
cmp
repz
popf
clc
mov
sub
gs
ffreep
mov
xchg
mov
push
and
loopne
aas
push
and
nop
stos
inc
incl
mov
sbb
mov
daa
or
cwtl
movsb
adc
popf
dec
lock
xchg
jae
in
loopne
lcall
or
in
test
add
addr16
adc
lods
lods
subl
hlt
out
loope
or
sbb
sub
xor
fs
in
fimull
push
std
xchg
lods
and
and
push
push
inc
sub
clc
pop
push
idivl
sarb
push
xchg
outsb
mov
out
sbb
xorb
imul
das
shrb
add
ja
lfs
cmp
xchg
pop
adc
pop
mov
sub
insb
call
es
xchg
and
pushf
addr16
rcr
sbb
out
test
xor
jne
mov
mov
sbb
mov
shlb
jle
sarl
ficoms
xchg
cli
inc
outsl
hlt
movsb
mov
dec
testl
xor
fwait
mov
sub
pop
dec
sbb
inc
popa
or
decl
in
pop
jp
fiadds
sub
jge
jle
xchg
mov
dec
inc
jl
lds
xchg
pop
sub
mov
pop
in
jne
and
aas
fs
xor
inc
xor
add
mov
mov
iret
mov
out
pop
push
test
das
pop
out
int
cltd
inc
adc
mov
rorb
pop
pop
jp
xlat
outsb
mov
inc
jp
insb
js
adc
xor
cli
or
inc
push
jb
movsl
scas
pusha
call
xor
cmp
or
add
dec
sub
sbb
js
adc
lahf
dec
pop
ficomps
sbb
and
xor
sbb
push
js
jnp
xchg
jns
cmp
pop
mov
movsl
mov
push
cmp
xchg
lea
cwtl
mov
out
repz
sub
stos
ret
testl
fwait
cmp
push
add
je
lods
pusha
mov
aas
int3
push
and
mov
sub
movsb
mov
inc
ljmp
push
call
inc
jae
enter
cli
ljmp
daa
loope
xlat
pop
push
outsl
mov
data16
lret
mov
sbb
flds
push
iret
repnz
movsb
ret
lock
cmpsl
cmc
inc
rol
mov
fbstp
cmpsl
daa
adc
scas
mov
pop
stc
mov
xlat
xchg
xor
out
ret
xchg
int3
or
dec
sub
loop
orb
popf
ret
mov
fcmovne
cmc
es
sahf
cmp
add
mov
je
cwtl
inc
dec
mov
mov
jge
jge
cmp
mov
lret
sbb
imul
push
sbb
cmp
outsl
into
sbb
push
mov
fsubrl
sbb
cmp
mov
mov
push
push
jle
ds
dec
sub
bound
dec
cmpsb
xchg
out
arpl
mov
mov
call
mov
stc
adc
lcall
sub
xor
add
loop
mov
mov
sbb
jbe
in
pop
adc
fisubrs
push
fisttps
dec
ss
mov
or
mov
dec
or
push
out
pop
and
adc
xor
cmp
jle
pop
adc
int
or
push
in
fcompl
imul
aad
lret
lcall
jns
pop
out
lret
xor
aaa
push
ffree
mov
or
aad
pusha
jnp
jns
cmp
into
add
dec
jb
int
rep
daa
adc
xchg
loope
jmp
dec
sbb
adcb
test
jmp
ret
andb
out
and
pop
dec
or
nop
negb
cmpl
pop
imul
mov
fcompl
xchg
scas
inc
jo
xor
mov
jno
scas
shl
adc
notb
mov
jle
add
popa
push
cmp
mov
ffreep
fyl2xp1
inc
das
mov
fsub
sbb
xchg
stos
jl
xchg
cltd
in
test
adc
mov
into
and
rclb
inc
sbb
mull
aad
fidivrl
movsb
je
cwtl
fs
sbb
stc
rcr
push
aaa
fidivrl
xlat
into
jb
jl
add
xchg
lret
xchg
sahf
clc
scas
hlt
gs
pop
clc
jbe
adc
and
inc
sbb
push
cli
lahf
or
add
add
add
jp
insb
pop
bound
mov
enter
xchg
inc
cmc
mov
popf
dec
adc
mov
pop
adc
pop
sbb
cltd
incb
lret
inc
mov
inc
outsb
fs
data16
push
sbb
imul
rcrb
int
sbb
add
add
mov
int3
mov
call
idivw
pop
mov
mov
lods
xor
add
iret
cltd
sub
movsb
andnps
movsl
push
shrl
cmp
into
test
sub
loopne
or
lds
pop
out
push
jns
lods
leave
add
popa
or
xlat
into
dec
lahf
push
or
in
lret
dec
mov
mov
cwtl
xchg
shlb
sub
pop
mov
or
or
data16
stc
dec
test
sbb
mov
mov
jns
jne
les
pop
roll
jle
in
adc
out
adc
or
inc
pop
lret
xor
cmp
push
mov
or
jbe
jg
push
push
pop
sbb
fs
or
and
inc
outsb
or
push
adc
mov
icebp
insl
ja
adcl
es
fisubrl
cmp
jmp
dec
jnp
movsb
lods
mov
dec
ja
cwtl
lds
jmp
xchg
or
add
sahf
mov
cli
or
adc
rcrb
stc
add
aaa
mov
push
and
push
mov
dec
mov
sahf
ljmp
ljmp
xor
add
dec
push
out
sarl
inc
popa
xor
testl
add
xchg
mov
je
adc
daa
repz
sbb
mov
out
push
vpshaw
addb
mov
test
sub
ret
sub
jo
int
lcall
sbb
push
repnz
mov
lods
cs
ficoms
mov
sahf
mov
cmp
mov
sub
aad
mov
sub
cmp
xchg
imul
jge
jns
jns
imul
mov
mov
push
sbb
fdivrs
dec
mov
dec
test
outsl
pop
add
fimuls
push
xchg
outsl
xchg
dec
inc
jno
imul
sbb
icebp
mov
cmp
aaa
test
push
sbb
dec
dec
jl
jne
mov
mov
cmp
mov
inc
xchg
add
jp
cltd
push
lcall
or
cmpsl
mov
mov
stos
subb
push
push
add
push
mov
sub
mov
imul
cmp
push
mov
iret
rclb
aad
leave
dec
inc
lret
jae
xchg
xchg
test
lcall
mov
xchg
mov
das
fadd
mov
popl
pop
mov
xchg
gs
sbb
fdivs
test
lock
mov
jno
mov
and
dec
jbe
ret
sbb
mov
pop
out
or
icebp
mov
sahf
pop
aam
adc
adc
aas
jnp
outsl
cli
in
lods
out
mov
decl
hlt
insl
fwait
cmpps
inc
movsl
cltd
push
inc
xor
lods
test
mov
mov
push
push
movsb
dec
jecxz
dec
mov
lcall
pushf
inc
push
jecxz
fisttpl
insl
xchg
adc
je
mov
loopne
pop
pop
andb
in
push
add
xor
rorb
push
je
xlat
loop
fs
dec
fdiv
in
fwait
cld
leave
in
dec
scas
stos
cli
movsl
xchg
jp
push
sbb
mov
cmpsl
fcmovnb
add
repz
jo
in
sub
cmp
jbe
call
pop
or
adc
cmp
and
xor
push
and
enter
shr
cmp
jbe
clc
inc
push
stos
popa
imul
xchg
xchg
pop
sub
mov
fcomi
outsb
fdivrp
pop
cwtl
scas
xchg
fmuls
pushf
push
loop
push
roll
pop
fiaddl
icebp
cmp
mov
aad
in
mov
mov
inc
ficomps
insl
jb
leave
push
test
icebp
inc
mov
mov
xor
jl
pop
adc
dec
iret
insb
ljmp
loope
repz
aaa
cmp
popa
cltd
int
xlat
or
popf
add
add
out
inc
aad
and
lock
fs
add
add
mov
loop
pop
jnp
jl
repz
cmp
in
jb
mov
push
and
or
test
dec
jns
adcl
mov
jmp
or
mov
push
sbb
pop
in
ljmp
push
iret
mov
push
aaa
jno
icebp
dec
outsl
jp
add
negb
push
cwtl
inc
lea
dec
fiadds
rorb
xchg
or
scas
xor
sbb
push
fstpl
and
cltd
push
jae
and
pop
fnsave
mov
pop
jbe
pop
lret
lcall
js
icebp
cmc
sbb
lret
mov
ljmp
in
mov
stc
pop
jmp
out
sub
lret
jle
pop
scas
fsts
push
int
jne
mov
mov
pop
push
hlt
dec
out
pop
push
and
inc
jno
es
push
movsb
jbe
and
lods
xchg
pop
push
mov
icebp
es
jnp
cmpsl
imul
loopne
xor
iret
jge
mulb
cmc
addb
data16
adc
jle
dec
xor
push
test
test
dec
jecxz
lea
sbb
insl
sub
xchg
popf
inc
aas
mov
push
aam
loopne
bound
nop
and
test
mov
xchg
lods
sub
test
sub
js
mov
fxch
or
sub
mov
ljmp
test
stos
shll
shll
lret
and
imul
cli
xchg
lock
push
int
mov
in
mov
lret
jb
jo
in
push
pop
jmp
add
mov
les
dec
jo
mov
ljmp
push
ret
sub
cwtl
cmp
cwtl
mov
shl
and
xor
enter
sbb
sbb
add
sbb
jae
push
clc
jns
xchg
pop
jns
pop
cmpsl
int
inc
xor
aam
mov
mov
adc
cmp
mov
cmpb
test
sub
aam
cmpsl
xor
mov
lret
dec
push
push
fstpt
jle
jns
lods
xor
rcl
scas
push
bound
mov
mov
cmpsb
xchg
lock
xor
imul
rcll
xchg
push
inc
cmpb
lcall
mov
lds
push
fcoml
sbb
pop
or
enter
dec
rorl
xchg
lds
adc
xor
pop
sub
test
push
cmp
or
shr
fwait
adc
cvtps2pd
xor
cmp
mov
mov
and
push
aaa
jb
cmp
int
imull
aad
pop
adc
hlt
xor
push
pop
fwait
stos
jno
test
pop
push
popf
pop
xor
repnz
push
adc
jns
mov
fwait
ljmp
adc
lret
test
imul
lcall
dec
dec
mov
sbb
mov
out
cmp
test
ss
lret
lcall
sbb
lret
outsb
ret
gs
mov
mov
sbb
xchg
add
pushf
fisttpll
jae
jnp
jmp
sbb
outsl
pop
or
mov
insb
cmovb
movsl
inc
insb
pop
or
and
jmp
dec
mov
mov
in
dec
push
shll
stos
jg
loope
lods
es
gs
shll
jbe
sub
xor
imul
jmp
test
fnstsw
mov
adc
mov
sbb
xor
popa
mov
or
icebp
dec
mov
dec
dec
pop
insl
push
cmpsb
push
iret
mov
out
fcoms
add
loopne
sbb
shll
call
xchg
test
lods
hlt
daa
mov
mov
outsl
in
out
ret
mov
data16
call
aas
les
movsb
adc
and
into
fisubrs
mov
loope
mov
cmp
mov
or
inc
es
xchg
outsb
xchg
mov
test
lods
rcrb
loop
andb
or
xor
gs
add
jp
dec
stos
push
push
sub
and
and
cmp
lock
roll
flds
xchg
push
je
popa
lock
orb
sbb
mov
jmp
addr16
add
popf
int
adc
add
mov
aaa
imul
nop
cs
sarl
lods
imul
push
sti
pop
jp
adc
dec
negl
push
add
jbe
imul
insb
ret
add
enter
popf
leave
stos
ja
mov
or
andb
jge
enter
inc
pop
movb
xchg
push
cmpsb
xchg
aad
ja
mov
add
xlat
jno
and
sbb
xchg
inc
mov
xchg
push
sbb
scas
mov
testl
mov
lds
jg
mull
lahf
adc
adc
in
inc
sub
aam
sub
dec
aad
ret
fadds
in
mov
jno
cmc
jmp
xor
cli
mov
push
xor
mov
cmp
add
gs
sub
push
mov
xchg
mov
pop
add
test
dec
hlt
pusha
fisubs
cmp
mov
rolb
cmpsl
lds
scas
inc
in
fstpl
shlb
movsl
xchg
lods
aas
push
sbb
cmpsb
cs
test
dec
imul
dec
cmp
stc
push
dec
pop
pop
shrb
cmp
int3
push
jo
test
sub
sar
add
icebp
add
pushf
pop
into
pop
bsf
shl
std
arpl
adc
and
stos
iret
sub
dec
xor
ljmp
inc
jns
dec
and
pushf
test
cmc
cltd
lret
add
xchg
test
mov
insl
sbb
addr16
mov
mov
mov
xchg
xchg
mov
arpl
sub
gs
sbb
cmp
xchg
dec
xchg
xor
pop
repz
or
shll
push
hlt
loop
or
sub
or
jl
mov
ss
fstpt
push
sbb
jle
inc
das
adc
lahf
inc
lods
hlt
insb
mov
notb
pop
xor
mov
xchg
lock
int
lods
sub
add
push
inc
jne
loope
push
sbbb
je
int3
jecxz
cltd
jge
or
inc
das
lret
gs
push
cmpsl
and
fldt
mov
in
add
sbb
mov
jmp
ds
and
adc
out
movsl
xchg
dec
ss
pop
mov
into
adc
mov
fwait
push
shll
push
mov
insl
sahf
es
fidivs
xchg
faddl
xchg
cmp
aam
ljmp
in
iret
int3
ret
inc
movsl
jno
les
hlt
mov
cmpsb
push
mov
cmp
in
test
push
push
test
dec
add
jns
shll
std
ds
push
fcoms
pop
xchg
dec
inc
mov
sbb
inc
pop
pop
sub
xchg
movsb
push
cmp
add
fs
jno
mov
testb
push
test
add
sbb
stos
xor
mov
mov
sbb
pushf
sub
pop
popa
scas
xor
jle
and
aam
jo
pop
add
sbb
cmp
repnz
jno
iret
and
pop
jbe
and
sub
out
adc
mov
sub
popf
arpl
cltd
mov
daa
xchg
repnz
inc
icebp
pop
ja
mov
cltd
movsb
sbb
push
rolb
mov
test
or
arpl
mov
rcr
add
xor
into
push
xchg
das
sbb
orb
sub
inc
out
test
jmp
cmp
sbb
jl
xor
movsb
cld
jnp
fcomi
sbb
cltd
or
xor
leave
ljmp
jno
mov
cmp
fsts
mov
das
addr16
jge
mov
test
int3
pop
dec
inc
rcrl
sub
or
sbb
aas
aad
xchg
dec
popa
inc
sbb
pushf
aas
add
aaa
pop
ffree
test
cltd
push
adc
fdivr
repz
mov
or
fnsave
nop
rolb
jae
push
mov
add
cmpb
mov
stc
jae
jg
test
leave
add
fistl
push
mov
jp
cs
push
aad
add
and
pop
inc
sub
int
in
add
and
dec
add
sbb
adc
inc
cld
inc
lock
adc
sbb
mov
mov
test
lods
sbb
mov
xchg
pandn
push
fisttpl
subl
pop
bound
sbb
repnz
jg
sub
xor
and
lds
sub
or
mov
jb
enter
shl
je
repz
adc
jnp
test
xor
xor
stc
sbb
flds
aas
xchg
loop
add
and
repz
pushl
jb
xchg
add
xchg
pop
cwtl
fnstenv
pop
movsb
cwtl
enter
cmp
or
in
sub
push
je
sub
mov
cmp
jnp
les
cmp
or
pop
push
fcoml
fsubp
out
mov
enter
pop
adc
inc
adc
loope
pusha
add
test
cmp
inc
cmp
popa
push
dec
das
sbb
push
movsl
cmpsl
clc
repnz
lock
mov
loopne
xchg
jnp
jae
mov
cli
dec
pop
xchg
dec
aad
or
sbb
xor
insl
mov
xchg
adc
fldt
in
lock
and
roll
cs
lods
add
mov
push
stos
insb
pop
or
jbe
xorl
fsubs
popa
pushf
and
insb
popa
mov
cmp
ja
sbb
repz
jp
push
sbb
push
sbb
pop
cmpb
mov
cmp
gs
lods
pushf
sbb
xchg
jge
cmpsl
jnp
movsl
ss
jno
push
dec
filds
lea
dec
sbb
nop
hlt
jg
loopne
mov
scas
ljmp
xor
stc
and
pop
dec
or
jg
lods
cmpl
push
and
xor
aad
iret
and
push
or
inc
add
xchg
mov
aas
enter
adc
mov
and
lds
out
xchg
dec
lds
pop
sub
jmp
adc
xchg
das
iret
cmp
rcrl
shl
xchg
mov
enter
pop
aaa
or
das
rcrb
and
cmpsb
loope
shll
testb
dec
cli
add
jg
xor
pop
cmpsb
sub
sarl
dec
icebp
dec
fldcw
mov
xor
out
xor
mov
lgs
je
jo
sub
mov
insb
loop
sbb
mov
mov
movsl
jb
inc
sbb
idiv
jp
stc
stos
xchg
mov
lcall
inc
cmc
sbb
rorb
cmp
out
dec
sbb
and
stos
sbb
jbe
xor
inc
sbb
mov
or
adc
pop
xchg
cmp
dec
push
fwait
jae
add
dec
insl
sub
loop
add
dec
cli
ss
js
push
sar
mov
push
ret
pmulhw
into
enter
cmp
lcall
loop
sbb
xor
repz
test
fistl
sub
clc
jecxz
ljmp
aas
or
push
fs
or
in
and
jnp
fidivrs
leave
push
pop
inc
push
das
out
xchg
mov
ficomps
pop
jnp
xor
pop
sbb
scas
movsb
lods
enter
sub
fwait
imul
xchg
xor
lock
inc
pop
outsl
mov
jbe
test
pusha
mov
fsts
sbb
jae
cmpsb
aas
jnp
sahf
mov
xchg
dec
inc
push
sub
shrb
pop
imul
iret
mov
cmc
jns
call
adc
cld
dec
mov
stos
or
fldcw
ja
stc
mov
lret
rcl
mov
mov
mov
mov
repz
jb
push
popf
ljmp
in
scas
jno
push
pop
out
hlt
popa
xchg
les
ret
mov
stc
addr16
shl
es
int3
cs
cmp
stos
sub
dec
pop
ficoms
mov
stc
aas
and
sub
int
push
jmp
fwait
insl
pop
nop
add
pop
mov
adcl
cmp
pop
or
scas
enter
add
lock
in
jb
pop
push
add
sbb
addr16
cmp
jmp
jmp
mov
aad
mov
aas
push
nop
subb
jo
shl
in
xchg
lret
iret
jnp
stc
cmpsb
xor
jle
pop
pop
mov
pushf
arpl
push
stos
sub
pop
in
mov
push
mov
dec
imul
xchg
outsl
mov
lahf
imulb
cmp
sbb
pop
into
push
lret
ljmp
pop
dec
std
inc
xchg
call
mov
fstl
bound
vpunpcklwd
iret
push
repnz
pop
push
ret
push
jle
mov
pop
sub
fsubr
mov
cltd
out
ds
push
sahf
movsl
jne
push
xor
dec
push
mov
mov
push
inc
sbb
jge
jae
mov
adc
jmp
insb
and
push
loope
nop
loope
lods
bound
mov
movsb
les
inc
mov
testl
clc
fadd
stos
insb
inc
loop
popf
sbb
xchg
sbb
and
cmp
or
dec
pop
cmp
xchg
add
push
aaa
xchg
push
mov
mov
xor
jbe
cmpl
adc
add
out
pop
fcom
jecxz
loope
push
orl
cmpsb
testb
mov
adc
sub
inc
sarl
or
xchg
xchg
add
fdivrl
jb
call
pop
test
push
ljmp
sub
sbb
and
pushf
push
in
leave
mov
xchg
push
popa
pop
les
loop
push
stos
icebp
in
adc
inc
icebp
push
loop
test
in
pop
mov
push
movsb
popa
popf
xchg
mov
jmp
dec
pop
jmp
pusha
iret
loopne
fmull
adc
pusha
lret
mov
decl
jae
fisubrl
out
vunpckhps
imul
test
clc
cmp
dec
mov
and
adc
loop
inc
pop
and
lahf
jge
leave
fwait
out
aaa
adc
rorb
inc
push
pop
mull
and
int3
fsub
jae
push
cmp
insl
in
dec
push
push
xchg
and
xchg
and
in
in
xor
cmpsb
jp
outsb
xor
cmp
lods
fsubr
or
pop
ret
jo
cmpsl
fwait
outsl
xor
or
inc
and
div
fidivrs
test
mov
and
out
jge
fwait
xor
sbb
xor
ret
and
push
cmp
pop
pop
push
xor
push
leave
dec
add
js
hlt
rol
adc
dec
cmp
rorl
ds
sub
loopne
mov
jmp
fnsave
clc
pop
outsb
icebp
ffree
mov
repz
push
sahf
les
jmp
add
stos
ret
repz
or
popf
dec
mov
movsl
mov
fldcw
int
test
pop
pop
insl
in
test
rcrl
adc
sub
adc
pop
or
add
int3
mov
lret
les
cld
stc
add
stos
repnz
cmp
mov
fsubl
pop
stos
int3
imul
negb
lahf
xor
out
clc
xchg
imul
mov
push
lahf
int
mov
xor
lret
jno
sti
daa
jmp
test
inc
mov
adc
scas
aaa
mov
shll
hlt
jmp
push
or
jmp
shl
or
dec
loope
xchg
add
test
dec
and
xor
aas
movsl
rcll
iret
pop
leave
stc
and
fwait
cli
pop
hlt
popa
stc
pop
sbb
cwtl
dec
dec
sbbl
xchg
shlb
mov
lcall
jl
mov
fimull
mov
jnp
jg
sub
mull
xor
xchg
dec
rclb
pop
data16
cmp
sbb
pop
daa
aad
mov
cmc
inc
sti
adc
xor
mov
cmp
loopne
call
addr16
scas
outsl
rorl
mov
scas
xchg
adc
out
dec
in
pop
add
popa
sarl
adc
arpl
inc
push
mov
mov
in
mov
or
lahf
ja
inc
fcomps
push
mov
jl
arpl
ljmp
inc
sbb
fiaddl
pop
loop
jp
cmp
movhps
fld
or
lcall
jg
inc
or
jns
mov
outsb
cmp
frstor
aam
aaa
or
in
cmp
xchg
icebp
rorb
dec
xchg
xor
arpl
pop
cld
jbe
or
sahf
xchg
scas
jnp
mov
pop
xchg
sub
pop
fistl
vmovd
loopne
sti
xor
fidivs
dec
shll
xlat
roll
es
pushf
shll
imull
xchg
in
sbb
sub
clc
insl
pushf
insl
fdivrs
push
cwtl
xor
jbe
mov
inc
dec
scas
test
icebp
and
daa
cmpsl
add
push
sbb
dec
repnz
ds
test
push
fwait
and
push
mov
scas
lock
gs
popa
sub
iret
xchg
jb
or
xor
cmc
cwtl
inc
pop
pop
cvttps2pi
mov
mov
in
in
mov
std
aam
addr16
insl
out
daa
stos
outsb
fadd
adc
outsl
push
mov
int
stos
arpl
fisubrs
pushf
xchg
push
fwait
std
sahf
icebp
mov
shll
out
aas
xchg
call
xorl
sti
push
push
subl
addr16
divb
mov
test
mov
test
jmp
inc
pop
sbb
cmp
or
ss
mov
xchg
fisubs
bound
das
aam
cmpsl
pop
in
test
fstpl
popf
inc
mov
adc
cli
mov
pop
mov
scas
std
and
pop
and
inc
nop
ljmp
gs
mov
inc
mov
inc
jbe
xchg
int3
fimuls
cmpl
or
xchg
jb
sti
out
jno
mov
cmpsb
xchg
lods
mov
jmp
fisttpl
inc
pop
aaa
add
jl
call
cmpsb
das
push
stos
mov
xlat
fs
aas
cmp
cmc
je
pop
das
ds
sti
insb
fcmove
testl
iret
sbb
push
hlt
mov
push
iret
mov
cwtl
adc
mov
repnz
cmpsl
jbe
aaa
push
rorb
jns
inc
or
sbb
sub
mov
mov
arpl
pop
jb
jle
or
inc
adc
add
mov
push
push
in
lds
jae
ja
jp
cmpsl
rol
push
xor
call
pusha
xchg
pop
dec
sub
xchg
arpl
fadds
push
sbb
mov
mov
repnz
mov
xchg
lock
out
icebp
xor
jne
inc
ret
into
xor
test
xchg
inc
dec
sub
fsubrs
adc
jno
ret
in
test
imul
push
xchg
mov
outsb
shl
mov
and
orb
sbb
mov
or
leave
frstor
mov
add
add
test
inc
jp
mov
mov
iret
data16
cmp
sub
test
aas
aad
and
lods
and
out
sub
je
mov
inc
mov
gs
mov
je
or
adc
fcomps
inc
adc
and
and
in
push
fnsave
and
dec
sub
or
mov
int3
ret
ljmp
mov
add
push
mov
dec
dec
adc
xor
in
jmp
pop
ret
or
cli
das
in
je
xor
push
in
adc
shrl
call
pusha
nop
aam
int3
mov
jae
out
dec
push
mov
dec
xchg
jecxz
and
fldl
jno
aaa
mov
ja
clc
inc
jecxz
iret
inc
sub
sub
mov
cld
jecxz
dec
add
pop
xchg
test
test
and
push
pop
mov
enter
nop
push
cmpsb
gs
dec
xchg
insl
mov
rcl
mov
gs
xlat
fdivrp
movsl
sub
shr
clc
xor
xor
das
inc
lret
ljmp
mov
inc
cmp
inc
xlat
inc
push
fistl
popa
inc
repz
call
imul
negb
sub
out
add
xor
push
inc
imul
and
sti
cmc
or
jns
xor
hlt
push
jle
xor
addl
flds
femms
sub
iret
fsubs
jne
sar
mov
push
pop
or
add
dec
lods
push
pop
jno
or
lret
inc
xchg
mov
mov
imul
inc
je
xchg
daa
mov
inc
xor
sbb
sub
in
lret
sbb
fsubrs
std
pop
add
add
cs
scas
mov
dec
loop
stos
or
add
pop
mov
popa
popf
or
mov
mov
incl
mov
int
loope
pusha
cmp
leave
cmp
pop
clc
stc
xorb
aam
vpaddd
inc
pop
js
jle
imul
popa
ficoml
test
xor
lds
imul
jmp
fldl
mov
mov
mov
mov
dec
cmp
idivl
cmp
push
ljmp
lods
icebp
xchg
mov
stos
jno
pop
xchg
add
lods
fdivrp
add
imul
iret
pop
lock
adc
data16
sbb
sbb
testb
loopne
les
out
icebp
pusha
into
xchg
test
mov
lods
dec
rolb
insl
sbb
xor
sub
into
loop
mov
or
je
and
insl
insl
fcmovne
pop
scas
xor
rcrl
or
adc
ljmp
fistl
popf
fmuls
xchg
fildl
mov
pop
inc
popa
push
outsl
fsubs
jmp
mov
mov
adc
pop
test
rolb
mov
sbb
out
stos
repnz
cmp
mov
lock
add
pop
dec
les
cwtl
sti
mov
and
dec
mov
cmp
jns
lret
cmp
jo
pop
ret
clc
mov
sub
clc
xchg
push
add
jae
nop
out
and
pushf
or
adc
jl
aaa
or
push
shll
adc
pop
and
int
aad
add
jno
sbb
ljmp
stos
xchg
and
xchg
mov
or
jbe
andb
mov
gs
je
sahf
xchg
fcoml
cmp
xlat
cmp
das
repnz
ds
popf
jp
orl
out
cwtl
in
push
cs
dec
addr16
and
dec
test
popa
mov
addr16
out
jne
mov
in
adc
iret
adc
fimull
cs
push
jb,pn
mov
and
imull
sbb
addr16
xchg
mov
fcomps
aas
bnd
outsl
cmp
adc
out
xchg
push
xor
xchg
cltd
sti
les
pop
xchg
sub
cli
adc
push
pushl
mov
push
mov
mov
dec
in
push
jae
dec
mov
in
cmp
push
pop
dec
leave
fcompl
cwtl
icebp
add
xchg
inc
lods
pop
iret
loop
nop
pop
jg
stc
dec
gs
mov
inc
sub
mov
mov
and
sub
mov
imul
pop
negb
adc
or
fsubrl
fidivrs
jmp
pop
lock
pop
ja
pop
xchg
in
mov
sub
mov
mov
sti
adc
sbbb
and
decb
or
inc
repnz
inc
mov
push
sbb
xor
push
jbe
rorl
outsb
sub
xor
xor
cmp
xor
xchg
mov
lahf
int
pop
xchg
movsl
dec
cmp
ja
out
push
aad
cltd
in
mov
xor
lods
int3
sub
jp
and
jl
add
dec
loope
cmp
stos
in
cld
pop
insl
pop
fadds
pop
outsb
arpl
xchg
sbb
xor
cmc
inc
cli
call
into
jae
dec
cli
xchg
cmp
aas
and
rcr
add
or
repz
adc
jge
shll
mov
leave
add
push
fistpl
inc
int
js
jo
stos
sbb
pusha
and
leave
movsl
std
jecxz
scas
call
sub
mov
lcall
in
outsb
shl
fidivs
lret
sub
pop
push
scas
test
jl
push
jle
cmp
clc
je
and
dec
loopne
mov
xchg
dec
enter
pop
leave
cmp
xchg
test
cmpl
insb
pop
push
xchg
out
cmp
push
and
aas
mov
mov
jmp
mov
cli
inc
push
xchg
mov
push
sub
dec
mulb
addr16
les
mov
dec
lods
dec
pop
xchg
sub
dec
jle
adcl
add
inc
xchg
and
cltd
and
scas
lds
jecxz
sub
ret
pop
add
lret
xchg
fwait
sti
pop
push
inc
shll
dec
or
or
jl
imul
outsl
mov
mov
out
xor
aaa
out
mov
fimuls
dec
and
dec
mov
insl
repz
adc
push
xlat
addl
cmp
cmp
jmp
mov
xchg
cld
adc
mov
mov
addr16
iret
shl
repnz
cli
test
xchg
enter
imul
xchg
mov
repnz
mov
or
jo
xchg
lahf
cmp
out
sbb
or
cmpsl
imul
loop
pop
std
or
sub
out
ror
and
push
inc
loop
and
mov
repnz
dec
jb
push
sub
inc
pop
test
into
mov
aas
pusha
rol
hlt
pop
cmp
mov
lret
mov
pop
jb
jno
lods
mov
addr16
push
lcall
int
sbb
pop
sub
pop
aas
xchg
sti
mov
sbb
daa
rcll
incl
inc
aas
mov
xchg
pop
sahf
mov
push
stc
push
outsb
hlt
xchg
rep
stos
xor
outsl
cmpsb
add
sub
jp
mov
jae
push
loop
jne
jo
jg
and
push
push
ljmp
and
fdivp
repnz
pop
push
xor
popf
cmpsl
sub
nop
cmp
cmp
cmp
mov
scas
or
sbb
and
mov
es
and
scas
movsb
mov
call
xchg
push
into
repnz
sub
push
int3
pusha
mov
push
pop
mov
jnp
imul
scas
scas
clc
xchg
scas
sub
xor
lahf
xor
adc
mov
ja
mov
gs
in
mov
and
pop
movsb
adc
mov
fdivrl
aad
dec
and
mov
adc
xchg
jne
insl
rorb
ljmp
into
pushf
inc
js
pushf
dec
push
aam
in
xor
les
sbb
pop
inc
xchg
sbb
and
clc
push
es
mov
mov
in
xchg
cmp
orb
xor
sbb
aam
mov
xchg
sub
push
mov
in
shr
test
outsb
test
adc
sub
std
adc
das
imull
add
fidivrs
negb
and
push
sar
mov
rclb
aam
mov
add
push
push
cwtl
xchg
rorl
fisttpll
mov
cld
inc
subl
insb
inc
push
lret
jg
hlt
lret
popa
das
mov
mov
iret
bound
leave
mov
mov
leave
dec
loop
jg
mov
dec
or
lcall
pop
mov
mov
rorb
inc
rorl
cli
fdivl
jno
xor
shlb
stos
cld
mov
sub
cmpsl
sbb
dec
jecxz
fcoml
fstl
push
cli
stos
adcl
or
hlt
xor
jno
xchg
cmc
jl
cmp
stos
cmp
popf
insb
pop
xchg
or
imul
lods
ss
push
pop
rcrb
jnp
or
ror
dec
dec
dec
test
inc
aas
mov
sbb
std
push
dec
mov
jl
jnp
lret
ljmp
mov
jbe
lods
lret
cmp
pop
in
cwtl
jne
xchg
hlt
test
dec
pop
inc
ret
adc
stc
and
dec
inc
push
int
arpl
outsl
mov
data16
push
movsb
pop
lea
sub
jp
cltd
lret
or
enter
scas
jae
call
push
je
or
insb
into
xor
cmp
repz
lahf
mov
lret
inc
dec
fildl
xor
or
lcall
push
pop
in
test
pop
add
push
sahf
xchg
xchg
mov
leave
add
lods
fisubl
nop
mov
shlb
outsl
mov
push
jmp
mov
cmpsb
dec
dec
jno
or
jno
stos
stos
std
inc
test
or
or
sub
mov
lahf
dec
cmp
data16
pushf
and
movsl
fs
and
dec
sarb
or
dec
pop
add
sti
mov
es
and
pop
les
or
mov
jge
push
mov
push
mov
push
lds
cmpsb
lret
movb
inc
dec
pusha
int3
jp
add
xor
and
xchg
mov
cmp
sub
sub
fisubl
pop
pop
add
or
cmp
dec
adcl
je
adc
fs
inc
push
nop
fimull
xor
mov
cli
mov
fisubrl
fucomip
push
sbb
in
shll
repz
inc
fidivl
jle
jmp
mov
and
mov
inc
sbb
jae
inc
sahf
std
push
dec
cmp
icebp
pushf
adc
adc
push
cmp
mov
hlt
or
ret
mov
and
mov
xchg
mov
sbb
das
jl
lcall
decb
push
lock
outsl
fldt
jbe
inc
ret
mov
or
nop
adc
sub
add
into
loopne
bound
dec
lahf
lret
fs
loop
push
cmp
outsb
dec
rcrl
mov
and
popa
mov
data16
es
push
inc
cmp
lods
xor
and
sbb
xchg
inc
dec
or
loope
fidivl
loop
adc
lret
popa
xor
inc
and
cmpsl
ds
data16
xchg
cmp
testb
sbb
dec
jl
lahf
lret
imulb
inc
out
push
int
fdivrs
std
imul
pop
cmp
aaa
push
sbb
das
adc
icebp
xchg
ljmp
ss
popa
std
imul
pop
js
jecxz
cmc
in
push
pop
jnp
test
sub
ljmp
inc
jp
xor
jl
xchg
sbb
mov
xchg
andl
jl
and
iret
stc
sub
mov
jns
rcrl
push
xor
stos
pop
lods
cs
xchg
xchg
in
ret
mov
or
push
dec
add
les
adc
sbb
or
adc
das
mov
pop
clc
sbb
mov
in
cs
repnz
sbbl
cld
movsb
xlat
xor
fs
in
in
cmp
lock
pushf
vmread
daa
call
xlat
push
fildll
push
out
jbe
jns
dec
sbb
mov
pop
cmp
pop
add
add
in
popf
cmp
int3
pop
pop
in
add
mov
mov
xor
iret
lock
mov
in
pop
pop
sub
das
push
ds
mov
test
sub
movsl
loop
mov
out
sub
inc
adc
outsl
or
out
dec
fsubrs
sahf
jmp
iret
add
lcall
mov
int
push
lcall
stc
ljmp
shlb
jp
mov
int
test
pop
xchg
and
mov
test
stos
pop
cld
mov
adc
outsl
int3
outsb
cs
fdivrl
sub
mov
dec
fcompl
adc
les
cli
repz
call
or
lret
inc
mov
lock
jmp
or
xor
addr16
mov
test
es
sub
push
inc
sub
lahf
loopne
jp
mov
pop
push
sub
lahf
and
jno
cmp
jo
pushf
in
dec
fistl
jae
jb
push
inc
jb
push
mov
popf
adc
daa
jae
xchg
sub
dec
in
adc
stos
dec
jbe
imul
into
jno
popa
ss
in
push
sahf
inc
lods
and
pop
dec
xchg
sub
dec
mov
call
add
inc
aas
mov
mov
insl
clc
mov
daa
jecxz
lods
sbb
adc
rclb
movsb
or
cmpl
pop
xor
in
test
mov
adc
adc
push
inc
sub
mov
subl
in
cmpsb
fstl
cmpsl
jno
out
dec
mov
and
fnstenv
in
jae
ljmp
mov
push
mov
xchg
or
aaa
sub
add
sbbb
jp
aas
pushf
mov
or
aas
andl
stos
xor
inc
xchg
and
jno
jg
xor
jae
xor
js
mov
pushf
ret
xchg
mov
pop
lods
call
sub
cmpsl
in
mov
iret
gs
fstpl
scas
mov
out
inc
mov
mov
std
cmp
sbb
push
jl
xorb
sbb
loop
movsl
das
mov
cmpb
enter
les
pop
stos
pop
fwait
mov
dec
push
mov
jno
mov
mov
imul
loope
sub
inc
fbld
push
add
or
je
loope
jp
das
cmp
mov
in
ja
cmpsl
addr16
aad
add
mov
adc
lock
dec
test
xchg
push
sub
fwait
mov
aaa
dec
loop
sti
call
aaa
and
in
push
cld
mov
push
orl
mov
aad
in
and
scas
call
push
add
jp
adc
mov
adc
mov
cmp
jmp
xchg
fst
mov
jl
inc
mov
cwtl
pop
loope
or
mov
and
xchg
stos
sub
sub
ret
mov
roll
jns
aam
dec
dec
or
ficomps
xchg
arpl
gs
xor
jno
push
push
dec
jle
xor
fstpl
leave
jbe
sub
adc
psllw
ja
sarl
adc
inc
push
add
test
std
inc
fwait
sbb
dec
imul
test
push
fdivrs
mov
jle
loop
ss
xchg
mov
xchg
jo
cmp
xchg
sahf
push
xor
push
lods
xchg
xor
aad
or
aam
in
pop
jne
mov
shll
es
mov
ljmp
push
inc
mov
inc
mov
rorl
decb
push
xor
fiadds
in
push
mov
test
shrb
je
negb
repnz
ret
and
pop
dec
andb
je
lock
sbb
test
fs
xor
mov
into
jle
xchg
cwtl
adcl
js
in
cmp
and
sub
cmp
or
sbb
mov
jecxz
mov
bound
sti
xlat
push
mov
cmp
sbb
jno
pop
int
or
dec
xchg
aas
mov
cwtl
jge
pop
or
jmp
mov
dec
xchg
cmpsl
cmc
fnstenv
jmp
xchg
pop
cltd
cmpsl
sbb
test
lods
aaa
sub
mov
cwtl
dec
mov
xor
mov
flds
or
pop
dec
test
loope
jns
pop
push
aaa
stc
push
jb
fdivrl
cmc
movsb
xchg
cmp
aam
xchg
inc
and
stc
adc
pop
ret
mov
mov
push
sbb
add
mov
ret
adc
mov
cltd
jo
add
xor
mov
pushf
jns
ljmp
lock
in
add
adc
in
mov
or
jns
jnp
sub
adc
jle
bound
mov
stos
fwait
incl
mov
scas
mov
out
movss
pop
xchg
jl
mov
scas
xchg
sub
jo
imul
push
or
or
scas
pop
insl
jg
stc
fdivp
call
mov
std
fwait
aad
lahf
mov
lahf
jl
and
sbb
xor
jae
xor
or
xlat
inc
sahf
pop
in
dec
jmp
jecxz
push
xor
mov
inc
adc
rcrb
lds
cmp
andl
dec
sub
aaa
jmp
cmp
push
xchg
andb
std
push
mov
xchg
addr16
inc
xchg
pop
into
push
mov
vpcmpgtw
nop
or
sahf
push
sbb
mov
jns
in
cli
scas
pop
mov
xor
xchg
ret
adc
xlat
pop
pop
jle
dec
fisubs
rol
jno
hlt
in
stos
test
pop
inc
loop
add
dec
mul
xchg
loop
mov
testb
jae
push
sbb
lret
pop
stc
adc
hlt
movsb
loop
pop
popa
inc
mov
mov
lods
sar
test
popa
sahf
push
jp
jmp
cwtl
lea
sbb
xor
stos
sbb
mov
adc
test
and
int
mov
in
mov
adc
pushl
inc
outsl
js
xor
rclb
ss
lahf
imulb
and
stos
bnd
clc
clc
cmp
std
xchg
adc
mov
sbb
mov
push
add
test
xor
or
push
imul
clc
leave
iret
popf
popa
lods
int3
shlb
out
stc
aaa
ret
cmp
pop
and
out
sub
xlat
in
les
xchg
lcall
and
and
adc
mov
jecxz
dec
test
mov
inc
push
jne
xchg
pop
mov
lahf
in
shl
leave
lret
shll
or
outsb
mov
jne
inc
repnz
inc
pop
loope
rolb
adc
xor
dec
test
mov
daa
in
lret
jne
cli
filds
xor
out
inc
mov
lods
push
jne
mov
scas
dec
repz
call
xor
pop
adc
ret
cmpsl
pop
and
imul
dec
hlt
dec
cltd
lahf
in
dec
jecxz
xor
outsl
lock
adc
mov
test
adc
test
int
pushf
or
sbb
push
dec
cmp
stos
adc
insb
and
pop
pop
loopne
psrad
lcall
pop
sub
fadd
or
addb
repz
lods
sbb
outsl
scas
int
pop
nop
aad
push
sbb
jmp
push
adc
mov
xor
jmp
pop
jno
mov
adc
xlat
out
std
outsl
fwait
enter
fdivrl
arpl
jl
mov
movswl
dec
ss
push
pushf
mov
aaa
lahf
mov
ret
push
mov
xor
shrl
push
xchg
sbb
cmp
rcrl
xor
dec
adc
hlt
imull
jecxz
movsl
mov
ljmp
stc
lahf
clc
sub
insb
pusha
or
test
lahf
gs
inc
out
hlt
loopne
repnz
inc
push
cmpsb
cmpsl
cmp
push
faddp
mov
sti
in
je
fs
mov
xchg
cs
add
mov
mov
jle
push
test
inc
out
fwait
es
push
xor
in
xor
adc
inc
inc
orb
add
shrb
fcmovnu
sub
loop
mov
aaa
int
jbe
outsl
jle
adc
imul
mov
mov
pop
cmp
ss
movsb
ss
mov
ret
daa
out
push
xchg
cld
push
stos
pop
in
mov
lret
jmp
sub
pop
jnp
test
cli
xchg
mov
scas
jecxz
in
fiadds
sahf
sub
jmp
xchg
pop
mov
mov
loop
test
jae
or
jnp
imul
enter
hlt
xorl
mov
iret
add
es
sub
add
orb
pushf
mov
inc
je
hlt
ljmp
jne
sar
shll
loop
dec
fldcw
jg
and
sub
repz
dec
repz
stos
inc
xor
push
mov
imul
enter
popw
inc
scas
out
imul
push
mov
and
mov
testl
test
ficoms
cmp
lcall
sahf
andb
or
stos
xchg
jle
test
push
dec
pop
adc
int
lock
aad
adc
jns
xchg
mov
in
daa
pop
pop
jmp
push
add
xor
add
mov
mov
dec
add
imul
push
sub
mov
mov
sub
dec
add
movswl
push
mov
push
mov
push
sub
push
add
call
inc
push
sub
lea
mov
and
dec
xor
sub
lea
add
mov
lea
add
add
add
sub
mov
sub
add
sub
mov
lea
mov
add
add
test
je
and
add
mov
mov
sub
xor
sub
sub
mov
mov
inc
imul
inc
mov
mov
dec
repnz
add
dec
add
mov
jmp
mov
inc
add
sub
mov
mov
xor
inc
add
add
lea
add
imul
add
sub
mov
movsbl
pop
sub
add
mov
pop
jmp
push
mov
xor
add
push
sub
and
push
mov
mov
push
xor
call
dec
push
sub
sub
push
call
pop
ret
sub
mov
mov
movsbl
mov
sub
add
mov
mov
mov
mov
imul
xor
sub
dec
push
mov
mov
push
xor
or
mov
add
sub
inc
lea
pop
sub
dec
pop
dec
mov
cmp
jne
lea
push
or
imul
mov
sub
sub
push
lea
push
movzbl
sub
xor
xor
xor
add
mov
xor
movzbl
push
xor
add
xor
sub
lea
mov
add
xor
mov
and
mov
movzbl
sub
dec
add
add
sub
add
movzbl
add
add
sub
mov
mov
sub
imul
inc
sub
mov
mov
and
add
add
cmp
jb
sub
xor
mov
mov
movswl
inc
dec
add
inc
add
mov
dec
sub
xor
mov
or
mov
cmp
jb
lea
xor
inc
add
add
add
mov
sub
movsbl
dec
sub
mov
xor
xor
xor
add
sub
pop
sub
lea
test
jbe
dec
dec
sub
sub
mov
inc
push
or
add
incl
sub
mov
pop
dec
and
add
push
add
mov
add
and
inc
sub
mov
add
mov
movzbl
or
sub
add
jmp
push
mov
imul
add
inc
mov
mov
dec
movswl
sub
mov
mov
sub
dec
mov
mov
mov
push
mov
sub
pop
inc
sub
mov
call
mov
inc
sub
mov
call
mov
mov
and
add
add
mov
call
mov
add
call
sub
add
sub
call
mov
add
add
push
sub
sub
mov
inc
inc
add
mov
add
dec
movswl
mov
mov
call
add
add
pop
add
add
sub
pop
mov
pop
sub
pop
add
add
add
pop
mov
pop
sub
add
pushl
sub
add
push
mov
mov
sub
jmp
sub
push
xor
mov
push
lea
push
sub
dec
push
add
add
push
mov
mov
imul
push
add
and
sub
call
call
call
mov
inc
add
sub
mov
mov
dec
sub
dec
add
mov
add
add
add
mov
mov
call
call
movzbl
and
add
ret
push
call
mov
add
mov
cmp
je
call
inc
add
inc
add
lea
dec
sub
add
sub
lea
dec
sub
add
mov
mov
inc
dec
sub
mov
lea
add
or
movzwl
sub
lea
xor
add
add
add
mov
dec
sub
dec
add
mov
movswl
sub
inc
sub
mov
add
add
imul
add
mov
add
add
xor
mov
mov
add
add
add
sub
mov
and
sub
movzbl
mov
mov
sub
inc
sub
mov
mov
inc
movsbl
dec
add
mov
add
imul
xor
add
mov
add
add
sub
mov
mov
dec
movswl
add
mov
mov
inc
inc
add
mov
mov
sub
inc
call
xor
mov
mov
sub
dec
dec
add
mov
sub
add
jmp
inc
and
add
mov
mov
imul
mov
add
sub
mov
sub
mov
pop
dec
dec
sub
xor
mov
add
mov
nop
jne
add
mov
inc
inc
sub
lea
dec
xor
xor
mov
mov
mov
inc
add
sub
add
lea
mov
dec
add
test
jbe
sub
sub
mov
movzbl
dec
lea
add
add
push
mov
add
push
dec
xor
sub
add
pop
mov
xor
xor
sub
mov
and
add
movzbl
mov
add
sub
and
dec
add
mov
mov
movzbl
mov
mov
sub
sub
mov
and
sub
movzbl
mov
add
xor
sub
and
sub
mov
movzbl
mov
xor
inc
inc
inc
sub
pop
mov
mov
add
sub
movzbl
sub
dec
jne
mov
mov
xor
add
add
pop
sub
mov
pop
xor
sub
pop
sub
sub
inc
pop
jmp
push
push
call
pop
pop
jmp
push
push
push
push
mov
push
mov
push
or
dec
sub
sub
lea
sub
add
sub
mov
sub
push
mov
xor
add
add
push
sub
mov
push
lea
push
dec
add
mov
inc
add
mov
call
mov
sub
inc
add
add
pop
jmp
push
add
push
mov
mov
inc
je
inc
dec
add
inc
mov
mov
lea
mov
imul
sub
mov
or
add
lea
mov
cmp
jne
add
add
add
sub
add
mov
mov
mov
movsbl
dec
lea
inc
jmp
add
push
mov
mov
add
test
je
xor
inc
sub
lea
movswl
dec
add
mov
repnz
mov
pop
inc
jmp
add
pop
and
mov
mov
sub
add
add
movb
dec
add
inc
mov
dec
jne
and
pop
dec
pop
ret
into
addb
addb
addb
addb
addl
sub
add
cmp
add
add
add
pop
addl
jo
add
add
add
push
jnp
aad
mov
xor
or
ljmp
sbb
ret
xlat
test
cmp
mov
std
jae
fcmovbe
out
pop
add
inc
xor
mov
add
and
sbb
adc
adc
sub
xor
adc
mov
pop
shrl
pop
push
inc
push
test
cmc
dec
lods
sbb
xchg
pop
push
es
inc
jo
sub
lahf
lods
and
es
or
fs
sti
ds
pop
push
movd
dec
mov
sub
jne
test
leave
ja
ja
jmp
sarb
andb
add
xor
sarl
mov
aam
aas
iret
test
jg
jnp
loope
pop
xchg
xlat
mov
adc
add
aaa
iret
mov
aas
insb
bound
or
add
pop
push
cmpsb
jb
stos
xorl
loopne
adc
mov
out
cmpsl
lods
lea
xor
gs
or
cltd
adc
into
sbb
aas
aam
in
dec
xchg
ret
cmpsb
sbb
push
imul
rcr
dec
cmp
sarl
pop
lock
mov
dec
repz
add
mov
mov
jmp
ret
inc
movsb
push
inc
jmp
adc
add
mov
clc
add
ret
int3
shlb
add
imul
adc
cld
xchg
mov
xchg
xchg
ds
xchg
pushf
bsr
imul
or
ret
orl
or
into
arpl
lcall
xor
fnstenv
pop
arpl
xor
mov
xchg
loopne,pt
and
sahf
int3
or
xchg
or
fidivrl
aaa
out
ret
push
ljmp
lret
pop
leave
push
mov
cmp
sahf
jp
gs
inc
out
les
push
sbb
adc
or
sbb
mov
ja
adc
movsb
ret
rorb
jno
or
pop
fmuls
push
xchg
pop
mov
sbb
data16
cmp
add
addl
shll
jecxz
bound
lock
orl
cld
pop
out
jbe
xor
int
inc
push
aad
dec
cmp
xchg
and
shlb
sub
in
sub
and
cmc
or
jmp
mov
int
mov
jne
xchg
adc
sbbl
loop
pop
pop
sbb
mov
xchg
scas
test
aad
adc
add
pop
mov
jge
std
outsb
stc
add
mov
sbb
in
adc
mov
pop
inc
pop
jmp
and
mov
or
jmp
pop
push
ret
jg
mov
xchg
insb
jecxz
inc
ret
add
sbb
movsb
movsl
adc
mov
xchg
js
mov
ret
rorb
imul
sub
lret
push
adc
out
push
xor
inc
jmp
sbb
subb
inc
xlat
pushf
sbb
cwtl
mov
int3
fildll
lds
fcmovne
mov
ret
idivl
mov
pop
inc
test
dec
sub
jp
ficoms
push
push
mov
fadds
dec
or
scas
int
jp
inc
lds
cmp
movsb
movsl
mov
adc
jle
data16
sbbl
cld
xor
push
gs
mov
mov
lods
pusha
mov
add
lock
jp
stc
rclb
jns
add
jnp
or
or
out
pop
dec
jmp
mov
loop
add
sarl
clts
stos
mov
mov
cli
outsb
fdivl
sbb
cmp
add
or
and
ret
and
jne
jecxz
psubq
das
push
ss
hlt
fs
movsb
mov
pop
push
inc
in
gs
lods
shll
push
pop
clc
iret
cmc
inc
inc
lods
push
dec
sbb
mov
rcll
cmpsl
stc
outsl
push
sarb
cltd
mov
movsb
shrb
dec
roll
push
ljmp
fisubl
lret
adc
in
lret
xchg
cld
mov
inc
dec
shrl
xchg
stos
dec
add
fs
movsb
cmpsb
leave
add
or
ja
sbb
lods
sub
pop
mov
jns
in
inc
xchg
jno
cmp
out
dec
loopne
pop
adc
cmp
loopne
dec
repz
sub
adc
stos
cmpl
pop
jg
xor
in
jae
pextrw
mov
test
stos
imul
pusha
aas
les
out
push
jp
push
dec
adc
jo
or
sbb
movsl
sbb
ljmp
lods
mov
das
lock
cmp
push
pop
pop
popa
idiv
data16
add
shr
sub
lahf
fbstp
loope
jecxz
cwtl
sbb
xchg
rcl
adc
outsb
aas
stos
adc
cld
mov
ret
jbe
aas
sbb
ja
sub
xchg
cmpsl
mov
aaa
push
test
into
sub
pop
mov
lcall
push
pop
loop
lret
ret
shl
cmp
xor
xchg
dec
mov
mov
cmc
jmp
inc
iret
movsb
lea
mov
out
pop
and
rcl
fildll
adc
xor
loop
dec
mov
sbb
sub
mov
fistl
mov
popf
int3
cmp
jns
and
jb
pop
sbb
adc
cmc
in
cltd
loopne
jg
push
mov
dec
popa
jo
stc
rcr
rol
push
int
pushf
outsb
cmp
call
sahf
pusha
outsb
sti
pop
adc
mov
push
push
jo
sbb
pusha
dec
divb
mov
std
pop
aaa
mov
cmc
sub
ja
cmpsl
push
dec
rcr
adc
cld
bound
stos
idivb
xchg
or
cmpsb
dec
cmp
push
daa
sub
outsb
cwtl
jno
mov
fistps
xor
xchg
lcall
pop
pop
leave
xchg
xchg
int
mov
jns
rcrl
divl
or
mov
xchg
xlat
loope
test
jno
movsl
inc
int3
fstp
mov
fcmovbe
sbb
fidivs
mov
in
cmp
adc
das
lock
or
and
cs
loope
add
gs
fwait
push
add
bound
pop
mov
mov
or
cltd
sbb
ja
sbb
push
jns
adcl
xor
lock
add
in
dec
mov
out
sbb
jg
setnp
or
inc
xchg
jns
dec
adc
shlb
sti
je
mov
ljmpw
or
bound
test
xchg
push
xchg
mov
mov
ret
fnstenv
nop
push
incb
push
into
mov
mov
mov
dec
mov
nop
adc
mov
cmp
hlt
or
inc
mov
sti
rcl
clc
or
xor
js
popa
add
add
mov
dec
sbb
xor
in
adc
into
mov
push
adc
in
or
sub
inc
mov
clc
jg
es
dec
mov
vmread
sub
test
jmp
mov
lods
push
jg
shr
mov
cld
cmc
bound
fdivr
popa
pop
push
mov
ja
leave
aas
cltd
and
cmp
cmc
pop
repz
rorb
pop
movl
and
jo
sti
std
imul
and
adc
shr
mov
cwtl
aam
or
or
sahf
or
scas
fidivrl
sbb
cmpsb
aam
mov
sub
xor
mov
fxtract
or
xor
cmp
movsb
pop
fidivl
or
pop
iret
pop
dec
mov
add
push
shll
dec
and
stos
fs
lret
jns
push
test
pushf
mov
insb
into
or
lret
in
mov
and
jg
fidivs
movsb
jns
xchg
hlt
ret
jl
or
or
cmpsl
jbe
push
xchg
mov
sub
cs
inc
mov
test
rorl
fwait
mov
mov
ret
lods
sub
mov
sbb
dec
bnd
lods
sbb
cmp
lret
pop
cmc
and
xor
mov
jne
cmp
xlat
sub
in
cmp
lea
les
inc
cmp
shll
cwtl
nop
sbb
inc
pop
mov
sub
inc
mov
sub
mov
cmp
mov
push
inc
and
mov
fists
movsl
fisttpl
shl
lret
cmp
adc
sbb
movsl
lcall
add
jge
fs
pop
add
sub
inc
and
ficomps
sub
xchg
xor
mov
leave
adc
testb
adc
cmp
jns
and
xchg
and
pop
and
jno
test
data16
mov
push
imul
dec
rcll
mov
cltd
or
inc
mov
ljmp
xor
mov
push
push
loop
decl
pop
xor
mov
test
inc
pop
popa
mov
aaa
xchg
stos
jg
mov
pop
cwtl
mov
dec
jbe
or
mov
dec
repnz
sub
aaa
ljmp
dec
nop
jbe
lret
jge
call
pop
lods
popf
sub
jl
leave
push
xchg
dec
fsubrl
into
add
cmp
fisttpll
roll
dec
xor
leave
in
jle
not
jecxz
mov
or
repnz
sarl
ss
inc
pop
fwait
cmp
mov
mov
lds
push
call
movsl
enter
mov
in
inc
subl
sahf
stos
mov
mov
sbb
daa
ljmp
insb
in
insl
xchg
pusha
mov
push
jp
push
cltd
xor
mov
mov
add
movsb
sarb
out
dec
in
push
jno
iret
sbb
xor
pusha
lahf
and
repz
stc
add
gs
pop
push
daa
lcall
and
test
sbb
cli
shrl
push
sti
cmc
arpl
scas
inc
xchg
mov
jmp
add
xlat
sub
push
sbb
imul
fstpt
pop
xlat
pop
cmc
add
into
ficompl
dec
mov
or
xor
xor
mov
xor
mov
dec
xor
pop
js
mov
jecxz
in
or
mov
test
into
mov
inc
test
arpl
cmovg
pop
imul
jle
fdivr
lret
inc
std
push
xorl
loop
int3
test
pop
adc
bound
mov
outsl
test
push
inc
lcall
pushf
pop
test
dec
in
xchg
pop
ror
imul
add
mov
std
aam
movsl
shlb
xchg
add
and
scas
or
mov
push
mov
lret
mov
sub
mov
mov
sub
test
test
shlb
cmp
cmpsb
fisttpl
jb
imul
xchg
rcll
cmp
gs
pushf
out
ss
dec
test
xchg
js
push
mov
pop
and
movsl
jle
outsl
fwait
mov
ss
jns
xor
pop
and
pop
mov
dec
in
sub
mov
loope
aaa
mov
sub
data16
sub
lea
or
jbe
push
mov
xchg
add
push
nop
test
clc
ja
stc
sbb
jmp
add
pop
lcall
leave
dec
les
and
aam
mov
cmp
mov
lret
loop
pop
xchg
aaa
out
lods
in
inc
add
cld
pop
js
cmp
shl
in
adc
jmp
repz
fidivrl
nop
cmp
rclb
lret
mov
std
ret
jl
stc
mov
lret
jl
jmp
aas
repnz
fidivrl
sbb
shll
mov
pop
imul
inc
and
nop
imul
push
mov
aas
fimull
add
adc
fisttps
jmp
pop
jmp
xor
lret
mov
adc
addl
es
jg
and
test
gs
mov
es
adcb
sbb
xchg
sub
clc
push
pusha
cmp
pop
pop
pop
loopne
ss
inc
push
out
mov
pop
jno
fidivrl
sbb
inc
lret
mov
xchg
cmp
outsb
pop
addr16
cmpsl
rcr
lretw
xor
pop
insl
inc
test
sub
iret
adc
jmp
add
and
out
lock
insl
lods
jnp
push
rcll
xor
push
insb
add
inc
dec
inc
jnp
push
out
jbe
mov
out
adc
dec
push
jno
neg
mov
jo
ljmp
jmp
fld
pusha
jp
push
cli
orb
ds
and
mov
or
popa
jb
adc
dec
pop
cmc
rcrl
into
inc
leave
scas
and
xchg
add
hlt
jns
insb
pop
push
popa
mov
push
stos
or
cmp
ja
mov
mov
add
popa
cltd
jg
inc
aam
xchg
jno
inc
push
and
push
xlat
iret
jg
jp
stc
mov
push
adc
mov
dec
add
push
xor
xor
cli
vzeroupper
out
das
pop
loope
or
into
outsl
stos
scas
movsb
sbb
jecxz
je
xor
imul
dec
nop
jl
xchg
push
rolb
dec
in
and
jge
dec
mov
call
icebp
cmp
cs
jbe
js
dec
test
add
cmp
cwtl
add
cltd
sbb
or
xchg
shl
out
xor
enter
cwtl
or
outsl
cmp
or
jb
out
sbb
aaa
int3
push
testb
push
xchg
cli
pop
pop
add
pop
fimuls
add
call
sub
inc
repnz
cli
daa
fnstsw
xlat
ret
pop
mov
dec
xor
pushf
stos
jp
insb
push
std
out
loope
mov
xchg
loopne
sbb
call
sbb
mov
or
iret
jmp
stos
daa
test
sarb
ja
insl
test
mov
lock
xchg
add
lods
out
or
add
sti
test
jae
xor
jnp
cmp
xlat
stc
xor
fidivs
fisubl
mov
daa
mov
add
out
int3
mov
movsl
stos
push
and
xorl
cmc
stos
inc
repnz
rcrb
xchg
xor
jle
add
and
adc
loopne
xchg
jmp
add
inc
sbb
cld
xlat
lret
adc
mov
sub
cs
mov
enter
mov
imul
neg
xor
sub
addr16
push
mov
sub
clc
test
or
clc
std
das
push
pop
xchg
in
and
and
insl
stc
scas
test
pop
or
jmp
popf
add
cltd
push
cmp
cld
mov
dec
test
ss
inc
loope
fstpl
push
out
shlb
test
and
push
pop
push
inc
add
divb
js
adc
add
push
daa
sbb
addl
mov
mov
repnz
pop
cmp
adc
inc
add
repz
bound
pusha
mov
adc
enter
sbb
xchg
xor
push
js
mov
inc
sub
xchg
in
sub
sbb
push
inc
cmc
test
cmp
es
xchg
xchg
incb
sbb
xor
rorl
fnstenv
dec
inc
ret
mov
out
fwait
pop
xchg
push
cmp
inc
inc
popf
mov
imul
cmovae
pop
sar
je
lcall
dec
mov
aas
pushf
mov
movsl
cli
test
lock
jo
lret
dec
sub
jb
jge
cltd
push
or
popf
mov
mov
stos
test
push
mov
pop
outsb
ja
int
ja
fcmovbe
int
in
outsb
shll
shrb
inc
bound
ficompl
imul
stc
popa
mov
cmp
arpl
cmpsb
lods
jge
push
xlat
lods
and
leave
or
mov
mov
add
dec
fcompl
arpl
imul
sbb
pop
push
lods
or
aam
test
pop
inc
mov
mov
jno
cltd
fdiv
mov
xchg
fldt
jmp
mov
xchg
add
pop
mov
mov
in
mov
jo
loop
nop
sub
jecxz
test
dec
pop
inc
inc
fwait
repnz
sbb
jne
outsb
sbb
ja
adc
js
xor
adcb
outsb
mov
int3
inc
xor
pop
or
inc
out
cltd
pmullw
inc
add
data16
test
xor
push
sarl
pop
inc
fs
dec
shlb
mov
dec
fisubrl
mov
xor
insl
fs
push
inc
out
inc
sahf
or
fists
out
mov
lods
and
hlt
mov
xchg
push
ret
xchg
xchg
data16
int3
daa
mov
mov
fcoms
sub
push
push
add
loopne
dec
pushf
lcall
int
add
jl
jmp
add
or
mov
jb
pop
or
fists
dec
cmp
sbb
add
mov
push
in
movl
mov
negb
lret
dec
cmp
ret
sbb
sub
lods
stos
push
and
pop
imul
in
jge
jle
movsl
xchg
and
mov
bound
adc
mov
fsts
bound
lcall
dec
sub
jno
out
dec
or
adc
mov
lds
icebp
fs
pop
mov
xchg
and
push
dec
and
push
call
iret
pusha
test
in
push
jle
and
cmpb
rcr
lret
cmp
aas
push
cmpsb
push
aaa
pop
cli
outsb
inc
and
sbb
pop
std
dec
mov
les
sub
and
and
cmp
movsl
gs
aam
frstor
out
out
shlb
inc
ljmp
adc
push
insl
clc
out
xchg
out
enter
inc
insb
in
imul
xchg
nop
mov
fwait
mov
jns
aaa
and
push
add
lea
ja
scas
std
fwait
cmc
lods
outsb
into
enter
xchg
or
xor
into
xchg
jp
lcall
sbb
repnz
gs
mov
pop
jnp
pusha
insl
test
add
add
push
cmp
call
leave
jmp
push
jle
int3
inc
scas
mov
sbb
mov
stos
add
jne
mov
jnp
and
mov
rclb
out
les
sbb
pop
mov
jbe
in
push
xchg
sub
push
xchg
push
jmp
fcoms
and
pop
rclb
push
repz
scas
mov
lahf
ds
pop
inc
cmp
inc
xchg
xor
or
es
out
or
out
fnstenv
xor
xor
cmpsl
dec
ds
pushw
cs
jg
xchg
shrb
cs
icebp
xor
adc
mov
or
sub
mov
dec
call
jae
popl
mov
dec
lds
lret
mov
or
xchg
add
add
pop
cmpb
lds
out
cmpsb
je
sbb
lods
lcall
call
btr
ljmp
push
push
fcompl
movsl
out
clc
aaa
mov
mov
leave
dec
int3
sbb
inc
es
inc
sub
icebp
push
js
and
mov
push
or
push
sbb
lock
mov
nop
out
jbe
xchg
mov
pop
gs
and
fildl
lret
pop
stc
js
arpl
adc
dec
xchg
in
mov
push
imul
lret
xor
jmp
push
out
out
inc
setb
ret
push
pop
mov
sbb
fcmovnu
or
icebp
shl
ret
cmpsl
push
mov
mov
pop
aam
mov
jne
push
aas
repz
cmc
jno
or
out
add
cmp
lret
loope
xor
popa
pop
cmp
movsl
push
sub
shlb
pop
xor
or
jg
negb
clc
adc
push
jnp
inc
xor
sbb
test
jp
and
or
ja
stc
in
fdivrs
lods
gs
arpl
sahf
in
insb
jle
stos
pop
dec
push
shlb
mov
xchg
out
fstps
jnp
testb
fwait
pop
or
inc
sub
mov
mov
rorb
cmp
mov
popf
pop
adc
cmp
mov
rorb
mov
mov
sub
mov
das
pop
inc
scas
in
paddusw
adcl
icebp
aas
mov
cmp
add
pop
push
mov
xor
mov
push
mov
loopne
shrb
mov
cmpsb
lcall
xchg
and
int
js
sub
cmp
mov
test
jp
jb
out
mov
fsubrp
sub
and
hlt
mov
xor
popa
test
icebp
stos
dec
out
int
js
pop
out
lgdtl
xor
add
dec
cwtl
rolb
jge
mov
add
and
mov
ljmp
xchg
adc
xchg
cmp
push
mov
jmp
adc
mov
mov
mov
mov
sbb
mov
repnz
cmp
add
clflush
popf
lret
das
hlt
or
and
mov
out
fsubp
and
cwtl
in
mov
cld
enter
mov
adcb
gs
pop
ds
jo
outsb
sub
cltd
push
mov
and
shrl
sub
mov
mov
and
jp
cmp
gs
test
loop
inc
mov
cmpsl
int3
std
xchg
xchg
cs
rorl
hlt
push
push
mov
xor
mov
daa
push
fistpl
aas
or
jne
stos
xchg
inc
mov
dec
int3
inc
xor
jb
sub
ficoml
jb
jl
outsb
mov
mov
sbb
or
dec
jp
loop
aas
fucomp
mov
sti
imul
xchg
inc
dec
dec
in
jae
into
pushf
lret
xchg
cmc
push
enter
insb
lcall
clc
lods
pop
dec
out
andl
nop
mov
sub
mov
aam
cmpsl
sub
fwait
imul
adc
lret
mov
mov
scas
push
fildll
xlat
lods
test
sub
push
fmull
hlt
mov
pop
dec
loope
std
sub
mov
outsl
ffreep
jno
xchg
jl
add
sub
leave
push
or
shrb
mov
out
jnp
pop
dec
leave
fstpl
sub
sub
imul
sti
call
xchg
sbb
lret
fimull
popa
cmc
push
pop
addr16
hlt
movsl
mov
dec
pop
cs
pusha
cmp
insb
jno
adc
mov
mov
xor
inc
push
xchg
and
or
rolb
fcompl
data16
fldl
pop
imul
push
icebp
push
jae
cmpsb
hlt
push
fwait
jp
daa
leave
xor
out
xor
test
andb
loopne
pop
push
ss
enter
icebp
inc
negl
subl
xor
lods
aad
sub
jae
das
repnz
xchg
sub
aaa
movsb
inc
pop
fucomi
dec
and
ret
push
mov
rcl
sub
out
jl
dec
insl
mov
push
in
sbb
in
mov
fwait
xor
jbe
jne
mov
mov
jnp
movsb
or
ffreep
push
jae
ds
cmp
repnz
cmp
pop
es
cli
or
popf
or
repz
iret
stc
sbb
sub
clc
lcall
pop
add
jge
dec
inc
movsl
clc
ret
mov
or
xor
cmpsb
sti
push
add
ficoml
dec
xchg
adc
xchg
push
mov
mov
negl
cmp
lret
jl
sbb
call
ret
decl
int
out
iret
mov
mov
data16
or
pop
mov
cmpsb
orl
in
mov
rcl
int
cmp
imul
mov
jbe
adc
sbb
cmp
data16
cmc
cmpsl
jbe
push
insl
add
aas
pop
hlt
pop
ja
iret
inc
mov
loop
mov
inc
aas
adc
xlat
sbb
in
out
orb
push
push
cmp
push
lret
ds
cld
xor
pop
jno,pt
xchg
xchg
out
push
loopne
ja
test
add
loope
mov
mov
mov
imul
or
xor
popa
aas
adc
ds
dec
xor
and
out
pushf
andl
mov
repnz
mov
rcrb
inc
and
into
add
xchg
xor
adc
les
mov
push
cwtl
std
les
loopne
dec
mov
cmpsb
xlat
adc
ljmp
test
js
sbb
push
ret
mov
sub
fcompl
push
add
sbb
repnz
and
jge
add
and
cmp
mov
into
or
jp
cmpl
mov
jae
jns
cli
lods
add
imul
lea
jecxz
cs
or
stos
lcall
data16
aam
addr16
or
sar
or
cmpsb
shrb
adc
adc
ficoml
lret
out
cmp
adc
decb
loope
les
push
sub
pop
test
outsl
mov
mov
shll
std
xor
dec
or
js
inc
mov
mov
lods
ljmp
xchg
call
mov
ljmp
push
rorl
jmp
aaa
push
xor
pop
mov
shl
jp
mov
jae
and
fimuls
aad
mov
mov
repnz
push
or
inc
add
xor
repz
dec
sbb
nop
jno
and
out
rclb
adc
mov
loope
push
test
xchg
sub
cmp
xchg
dec
scas
dec
int3
xchg
data16
jns
enter
pop
adc
pusha
mov
sbb
adc
pop
add
sti
dec
xchg
mov
jmp
imul
lods
or
enter
js
mov
cmpb
scas
xor
push
mov
lret
pop
xorl
andb
mov
in
int3
mov
cli
mov
pop
or
xor
dec
push
stos
popf
addr16
push
sub
adc
mov
mov
je
lea
stc
inc
sbbl
jne
xchg
cmp
repnz
pop
pop
test
dec
out
xchg
mov
outsl
xchg
pop
and
mov
dec
pusha
sub
ret
movsb
fs
jb
cli
lea
xchg
outsb
jmp
mov
sbb
jno
les
cwtl
push
stos
pop
cmp
sub
push
mov
test
subl
loop
stos
stos
sbb
xchg
lahf
out
inc
idivb
popl
cld
sub
iret
mov
xchg
pop
push
pop
shlb
incl
bound
inc
roll
pop
in
push
pop
scas
outsl
aaa
shrl
and
add
inc
out
int
iret
int
mov
mov
clc
fs
jbe
dec
mov
mov
jp
pop
fnsave
sahf
xchg
mov
sub
icebp
sbb
adc
jl
fistpll
rcll
lret
scas
jecxz
sahf
lods
fisubrs
jae
push
or
sti
stos
mov
mull
xor
adc
in
out
out
ret
mov
mov
fcoms
int3
repz
or
cs
dec
je
orb
xlat
sub
fbstp
xor
push
or
xchg
fwait
pop
loope
mov
outsb
in
rcll
jl
pop
in
test
dec
out
cli
sbb
faddp
push
dec
cmp
icebp
inc
bound
add
jb
rcr
mov
ret
lret
negb
push
movsl
dec
nop
fdivs
shlb
or
sub
xor
jmp
xor
xlat
test
test
jge
mov
lret
in
cltd
or
stos
shll
dec
pusha
push
enter
lds
mov
and
jecxz
mov
mov
inc
mov
mov
and
andl
jnp
decb
add
push
roll
cltd
loope
jno
repz
or
test
jae
sbb
pop
out
pop
or
fcomi
cmpsb
sbb
mov
xor
lea
adc
push
cmpl
enter
inc
hlt
mov
mov
adc
dec
xor
pop
mov
mov
stmxcsr
movsl
insl
xchg
jecxz
icebp
nop
popa
insl
adc
in
inc
xchg
add
cmp
ret
inc
jl
xorl
push
push
mov
enter
xor
je
fnsave
cmp
push
adc
clc
mov
fwait
xchg
fidivs
jl
dec
mov
xchg
in
push
add
sub
xlat
ficompl
pop
xchg
jge
in
pop
and
sti
sub
push
imul
pop
in
dec
jg
xchg
jecxz
enter
test
decb
inc
pop
loope
dec
mov
jno
aad
daa
lods
ja
or
in
jno
adc
adc
and
shll
dec
pop
mov
in
bound
cmp
xlat
ret
inc
in
adc
mov
xor
cmp
sysret
rcr
std
jbe
jge
push
insb
test
push
jbe
mov
dec
or
cltd
divl
jb
stc
cwtl
mov
leave
push
cmp
inc
aam
jae
int
test
imulb
test
aad
add
cmp
insl
out
jb
stos
sahf
pop
scas
adc
or
pop
dec
sub
pop
pop
sahf
and
mov
icebp
inc
hlt
test
imul
cwtl
inc
ret
jp
pop
mov
scas
and
jp
pop
ficompl
mov
jmp
cld
in
and
cmp
sbbl
in
push
mov
aaa
dec
or
clc
add
inc
push
cmp
xchg
sub
arpl
adc
xchg
or
push
leave
sbb
xchg
mov
cmp
sti
xlat
andb
bound
ljmp
jo
adc
or
enter
fstpt
call
add
adc
mov
xor
fisubs
lcall
js
jg
gs
loope
ss
in
call
add
pop
pushf
aad
mov
mov
pop
mov
scas
pop
test
adc
sbb
int
loopne
add
jg
int3
inc
mov
repnz
pop
cltd
mov
mov
cmpsl
mull
bound
mov
cmp
push
dec
pop
scas
je
nop
pop
inc
dec
pop
sahf
popa
pop
test
or
inc
and
sbb
cmp
pop
adc
lock
sti
and
shl
or
sub
jnp
xor
les
xor
idiv
dec
mov
cli
mov
jns
mull
shrl
cmp
sbb
and
add
fadds
mov
les
lret
iret
inc
cmc
stos
lods
lahf
mov
roll
inc
inc
in
and
mov
mov
ds
prefetcht0
inc
sbb
and
clc
int3
mov
daa
stos
mov
sbb
xchg
ficomps
xchg
int
xchg
test
jnp
in
in
jl
push
nop
jbe
fistl
mov
pushf
mov
dec
ss
leave
out
sub
lcall
mov
dec
sbb
fists
popf
outsl
cmp
push
je
or
cs
cmp
aas
dec
insb
lds
filds
sahf
push
or
aam
sub
test
inc
mov
mov
mov
movsb
icebp
xchg
mov
pop
data16
sbb
fsub
pop
rolb
sub
push
mov
dec
or
jno
std
bound
cmpsb
repz
inc
push
jmp
jge
loopne,pt
xchg
pop
inc
mov
fsubrl
pop
pandn
cmp
inc
mov
jne
push
pop
dec
aaa
jmp
faddl
imul
jne
add
push
push
stos
push
loope
mov
dec
mov
push
inc
pushf
adc
outsb
insl
icebp
jbe
pop
xchg
dec
cmp
ljmp
out
xor
mov
loopne
xchg
jbe
rorl
sti
cmpsl
mov
mov
out
inc
cmp
jmp
test
out
add
fs
cltd
jp
dec
adc
rorb
aaa
add
pushf
movsl
icebp
jne
pushl
adc
orb
shrb
hlt
stc
push
call
ss
jmp
cli
ja
sbb
xor
cmp
outsb
cmp
or
jge
cmpsl
pop
popa
cli
outsb
ljmp
out
into
dec
adc
add
scas
sahf
push
cmc
jp
int3
in
es
imul
mov
mov
cld
mov
mov
add
inc
scas
idivb
mov
xchg
jae
cmp
push
nop
push
or
enter
mov
cmpsb
inc
jl
sarl
imull
lret
mov
dec
mov
mov
test
mov
icebp
dec
or
ret
sbb
mov
inc
xchg
sbb
ja
mov
lods
dec
pop
cmpsl
popl
stos
int3
loopw
clc
mov
mov
imul
inc
xor
jge
cmp
sub
xchg
mov
int3
dec
movsl
add
lahf
inc
cwtl
add
pop
jmp
ret
aam
arpl
mov
mov
sbb
scas
fisttpl
pop
notl
leave
mov
gs
xor
xor
imul
call
dec
shrb
dec
ret
mov
jb
cmpsl
xchg
jecxz
ljmp
and
xor
xchg
andb
ret
adc
test
stos
cmpsb
lgs
inc
lea
mov
and
pop
ficoml
add
xchg
dec
stc
insb
arpl
shll
fucomip
lcall
fnstenv
vpsrlq
ret
cmp
lcall
pop
mov
cmp
sahf
cmp
int
cmpsb
test
pop
push
mov
repz
fists
inc
fcompl
fsub
daa
aaa
test
and
ljmp
mov
fsubr
jnp
mov
mov
iret
xlat
push
nop
lea
mov
repz
out
xchg
jbe
jo
fiaddl
sbb
test
xor
push
jecxz
dec
cmp
mov
inc
lods
lret
sub
out
or
xchg
cmp
mov
imull
jne
sbb
cmp
cmp
push
sub
inc
xor
inc
mov
lret
scas
popa
inc
xchg
jb
mov
out
mov
scas
and
fmull
call
enter
outsl
and
push
call
push
and
jo
jb
push
mov
fwait
jp
pop
scas
xchg
idiv
test
xor
pop
jle
mov
das
sbb
leave
sbb
test
sbb
mov
sub
pop
test
or
and
int3
inc
lret
stc
popf
xor
xchg
inc
cmp
orl
outsl
cmpsl
stos
inc
ret
repnz
adc
cmp
add
repz
nop
data16
xchg
test
or
cltd
mov
loope
mov
or
jo
dec
mov
xor
pop
mov
sbb
enter
push
pop
stos
cmp
int3
mov
adc
insb
int
or
repz
mov
pushf
add
out
jb
imul
outsb
push
push
mov
mov
mov
loope
std
pop
cmp
sub
mov
dec
notb
dec
dec
rcrl
jno
mov
inc
fsubr
stos
fs
jne
sar
sub
cmc
jns
push
mov
or
jmp
cmp
out
push
pop
cld
dec
mov
push
lods
test
jae
in
adc
push
add
ds
pop
ds
test
pop
addl
cs
mov
jnp,pn
out
jae
dec
stos
inc
popa
push
mov
call
push
jnp
out
xor
dec
cmc
rclb
pop
lods
loope
and
push
in
jmp
lret
in
mov
popf
in
inc
test
insb
push
fucom
and
mov
adc
fs
fs
jo
in
xchg
pop
cmpl
in
xchg
mov
addr16
in
in
adc
or
add
xor
xor
js
notl
sub
inc
int3
and
mov
jae
stc
je
xchg
imul
and
outsb
adc
ficoms
in
inc
push
rclb
sahf
rcll
rclb
hlt
jbe
xor
add
add
dec
cwtl
jmp
lea
xor
testb
sbb
cmp
int
sbb
in
std
push
pop
stc
mov
mov
stos
mov
jg
sbb
jmp
xchg
and
pop
push
outsl
inc
dec
mov
loop
add
mov
out
mov
mov
hlt
ret
into
mov
sbb
rclb
xor
cmp
mov
jnp
cmp
xor
notb
lock
mull
int
mov
jb
jne
jno
jl
out
mov
movsl
les
popf
cltd
jmp
or
shrb
jne
lret
mov
out
inc
out
jae
sbb
pop
pop
xor
nop
adc
loop
dec
adc
es
push
dec
mov
jl
adc
xchg
in
cs
movsb
and
mov
inc
shr
dec
nop
and
adc
inc
jl
pop
push
cwtl
jmp
and
dec
jno
sbb
jle
cmp
mov
push
jne
test
std
xchg
pop
mov
mov
mov
sarb
mov
test
shrl
or
push
outsl
mov
aaa
add
xchg
lds
addr16
out
sub
sbb
daa
cwtl
adc
pop
out
mov
loopne
sbb
clc
pop
jmp
mov
jnp
fs
sahf
jns
sbb
push
lret
pop
push
jg
and
xchg
mov
inc
dec
out
mov
push
jmp
scas
push
aas
data16
cmpsb
jne
sbb
xchg
fcomi
mov
scas
dec
fldl
xlat
jo
in
aad
pusha
cmp
aam
jno
sub
stos
lret
sbb
cmp
outsl
nop
into
fcoml
cld
and
outsb
sbb
cmp
inc
mov
cli
xchg
inc
adc
mov
and
imul
lods
jno
ja
sbb
mov
push
mov
or
mov
sub
das
mov
sbb
aaa
sbb
xchg
sbb
lret
in
les
mov
dec
xchg
adc
push
fwait
xchg
pusha
in
and
stos
add
or
sub
cmp
fwait
test
add
inc
xchg
xor
fcompl
mov
xchg
dec
idiv
xchg
mov
adcl
pop
dec
outsb
jnp
push
loop
and
aam
icebp
call
mov
dec
cs
and
adc
adc
adc
cmp
cmc
inc
or
in
mov
xchg
insb
jl
pop
mov
cmpsl
push
mov
shll
dec
jmp
sub
xor
arpl
mov
fs
shrl
stos
mov
and
jl
fsubrl
xlat
pop
cmp
lret
scas
lret
mov
mov
jge
jae
js
movsl
add
jno
jmp
mov
sub
or
sbb
lret
sbbl
insb
outsl
sbb
test
jno
stc
call
lcall
fsts
push
out
aad
aam
jg
cmp
enter
scas
xchg
cmp
fst
leave
sbb
xchg
and
rolb
inc
xchg
or
stos
ret
dec
cltd
mov
stc
sub
loopne
int3
cmp
movsl
and
or
mov
out
pop
adc
int3
mov
mov
xchg
xchg
lds
movsb
adc
out
sub
inc
scas
sub
sub
add
rclb
dec
cmpsb
into
aaa
lea
loopne
push
fisttpll
or
cmp
pop
loope
clc
cltd
sub
lock
cmp
sub
xchg
daa
adc
xchg
jmp
sbb
test
and
or
test
or
mov
jb
jbe
jbe
in
or
imul
pop
pop
adc
or
mov
les
fstl
adc
or
mov
aad
pop
mov
out
fimull
data16
sub
xor
inc
pop
pop
xchg
lds
add
or
leave
push
mov
jle
lods
inc
testl
in
in
ljmp
cwtl
mov
cmp
sub
jp
push
mov
xchg
sbb
jb
mov
shlb
jle
ror
add
add
sub
jl
and
loopne
mov
jg
cmp
dec
nop
imul
push
pop
mov
out
scas
jb
xchg
jnp
sbb
mov
daa
in
sbb
add
inc
pop
jno
into
out
sbb
push
push
popa
imul
call
xchg
xchg
pop
adc
cld
or
lds
xor
cli
imul
into
int
pushf
sahf
lea
mov
xor
cmp
jbe
sub
mov
ljmp
jmpw
divl
mov
and
scas
sbb
out
push
xchg
fwait
sub
sub
xor
adc
ja
mov
cmpsl
and
pop
xor
in
pusha
xor
sbb
sub
jp
loopne
dec
mov
fld
sarb
cmc
sub
mov
xchg
pop
fwait
or
into
rcrl
mov
out
lret
xor
mov
jnp
daa
imul
sbb
fucomp
int3
inc
mov
into
adc
cmpsb
xor
jmp
adc
fcmovb
mov
jmp
data16
pop
loope
and
das
ret
cmp
dec
xchg
mov
jl
mov
icebp
cs
fildl
mov
gs
add
rcll
fcmovnbe
ljmp
leave
inc
adc
lret
or
push
out
and
cli
and
push
xor
mov
ja
and
pop
imul
jle
sbb
inc
dec
pop
fbstp
nop
jae
sub
lods
sub
pop
push
aad
mov
cli
shrl
xchg
sbb
test
or
clc
inc
mov
pop
and
daa
je
adc
cmp
cmp
jp
push
cmp
dec
dec
cmc
mov
cmc
pop
fldt
inc
jl
xor
mov
lcall
or
in
dec
and
ds
dec
sbb
lods
out
imul
lcall
test
idivb
xchg
mov
mov
push
jecxz
ret
sub
mov
iret
stos
adc
cltd
xchg
rcll
dec
pop
dec
cmp
fists
lret
lcall
fs
push
xchg
xor
add
adc
test
ret
cmpsl
rol
insb
fcoms
dec
cmp
out
sbb
imul
lods
sbb
nop
sub
mov
adc
addb
outsb
pushf
sbb
mov
jle
add
in
loopne
inc
and
inc
and
ljmp
das
cltd
nop
stc
and
xchg
add
test
sar
popa
fadds
scas
xchg
repnz
add
jbe
clc
dec
inc
in
pop
cmp
es
icebp
loopne,pt
out
in
sub
pop
repnz
and
pusha
jbe
mov
push
xchg
clc
orl
adc
adc
sahf
jmp
add
or
shrb
lret
and
jmp
fildll
mov
adc
in
xor
pop
mov
out
in
adc
imulb
mov
sub
adcb
inc
mov
push
arpl
movsl
int3
daa
xchg
inc
xor
pop
fnsetpm(287
ljmp
pusha
adc
adc
push
push
cmp
cmpsb
icebp
stos
test
pushf
mov
movsl
add
bnd
stos
popf
mov
cli
jecxz
stc
sbb
sbb
lcall
or
cltd
xchg
icebp
push
rep
loop
popf
lock
sub
fs
int
sahf
dec
ja
inc
xchg
icebp
add
mov
push
imul
sahf
xor
daa
cmp
sub
inc
lea
cli
and
mov
dec
insl
ja
inc
adc
jmp
or
test
arpl
pop
pusha
test
mov
insb
jns
sbb
mov
rcrl
mov
call
jns
mov
jp
adc
psrlw
xor
push
lds
fisttpl
mov
jecxz
jg
push
cwtl
ret
cmp
jecxz
xor
push
jb
ficoms
mov
lds
or
adc
pushf
nop
adc
insl
push
xor
je
xchg
pop
ret
mov
mov
or
leave
faddl
mov
popf
sahf
cltd
dec
push
pushf
sub
xor
jmp
rorb
mov
or
addr16
scas
lret
aad
enter
inc
scas
adc
jl
ret
cmpsb
stos
push
mov
rorb
std
fsubr
push
imul
scas
lea
push
mov
testl
xchg
outsl
ljmp
jbe
xor
adc
push
iret
xchg
dec
testl
fnstcw
enter
jp
sbb
xchg
adc
rcll
imul
push
test
cmc
fdivp
xor
mov
fstp
jmp
cmp
sub
out
rcrl
cmp
mov
cmpsb
add
les
fstp
adcl
outsl
sbb
cwtl
fcmovb
ret
xchg
pop
mov
or
ret
jb
int
int
std
into
inc
add
mov
and
adcb
pusha
mov
or
mov
enter
rcrl
cmp
and
scas
add
add
ja
and
out
call
cmpb
fisubl
cs
sub
mov
jae
add
dec
dec
mov
dec
les
out
lahf
pop
push
push
iret
sub
mov
popf
fistps
mov
lret
lahf
xchg
add
cli
sub
call
or
in
xor
stc
jmp
addb
cmp
stos
faddl
test
adc
sub
lret
montmul
cmpsb
add
sbb
mov
mov
pop
sub
lea
or
jae
sbb
xlat
fnstsw
cld
outsb
sidtl
cs
outsl
jg
test
push
hlt
or
mov
dec
lock
push
out
aam
ret
imul
inc
and
fldl
sbb
arpl
pop
push
dec
loopne
push
loopne
shl
push
xchg
fdivr
insb
dec
gs
in
aaa
mov
movsl
xchg
cmp
pop
mov
xchg
ss
push
pop
sub
popf
mov
xchg
mov
xchg
mov
scas
pop
pop
movl
push
mov
push
or
or
outsl
or
ja
mov
sbb
inc
sbbb
dec
sbb
push
inc
jb
push
jmp
jg
stos
je
jecxz
loope,pn
push
jmp
nop
ror
pusha
shll
mov
test
into
push
inc
inc
imul
dec
std
stos
shrl
pushf
xchg
mov
push
das
test
adc
lahf
add
adc
dec
xchg
cmp
cmpsb
cli
je
shll
ret
loopne
cmp
in
dec
fldcw
xchg
mov
mov
je
repnz
xchg
rol
mov
rolb
aad
inc
jbe
xor
push
mov
out
sarb
stc
inc
jno
inc
xor
shl
xor
bnd
adc
pusha
rorl
les
pop
js
pop
dec
xchg
cmc
push
and
inc
inc
flds
aaa
cmp
mov
pop
xchg
loop,pt
lds
inc
cmc
fsts
incl
fwait
idiv
mov
inc
test
aas
mov
out
bound
sysexit
mov
test
cmp
cli
lcall
data16
pop
sub
scas
scas
cli
xor
shl
enter
insl
loope
js
or
es
sbb
mov
dec
addr16
loop
addr16
ss
outsb
pusha
out
xchg
lods
imulb
cmpsl
frstor
in
cli
sub
popf
xor
pop
scas
add
insb
sbb
mov
xor
sbb
and
sbb
cli
in
std
jno
orl
loopne
lret
es
stos
xor
dec
mov
lea
xchg
scas
cmp
add
mov
mov
rorl
call
and
mov
cs
push
sbb
leave
cwtl
sar
mov
jle
stc
or
sbb
cmc
shrl
pop
inc
inc
xor
lret
arpl
mov
fwait
mov
mov
shll
mov
imul
add
clc
shl
pop
cmpsb
add
inc
xor
jecxz
aaa
iret
scas
xchg
fcomps
adcl
sub
mov
xor
shlb
repnz
aam
xchg
or
mov
mov
ret
daa
loope
das
fidivl
fwait
cld
lret
sarb
and
or
das
or
sahf
dec
push
stos
test
xchg
or
shrb
dec
jnp
into
mov
imul
int
mov
mov
stos
data16
push
xchg
add
das
inc
mov
or
ljmp
pop
push
test
mov
loop
mov
push
out
add
or
lds
sub
dec
add
mov
mov
andl
push
stc
daa
lret
cs
das
mov
lea
xor
pop
and
dec
lds
sub
xor
pop
mov
pop
push
sbbl
or
xchg
ljmp
xchg
lock
cmp
out
xor
ss
sbb
andl
sub
cltd
lock
mov
ljmp
cmp
cmp
aam
mov
push
mov
daa
bound
sbb
xchg
cld
movsl
jno
test
or
ljmp
jmp
fnstsw
ret
xor
stc
xchg
fnstcw
xchg
lret
pop
aas
daa
std
add
and
lret
jno
mov
out
ja
xor
jp
and
dec
mov
or
mov
inc
push
insl
in
add
adc
idivb
ficoms
lock
out
or
and
push
in
cmp
or
int3
out
cmp
xchg
ss
adc
mov
xchg
push
and
adc
sub
inc
pusha
gs
sbb
fs
stos
and
mov
daa
repz
pop
fidivs
dec
cmp
jno
mov
mov
fnstenv
imul
ds
xor
movsl
rol
fs
cmp
int
inc
es
mov
adc
int
data16
push
mov
repz
test
sbb
stos
lcall
dec
cmp
or
and
xchg
mov
sub
out
std
js
mov
negl
or
jns
neg
lret
mov
mov
call
push
test
xchg
mov
dec
jl
pop
add
mov
jae
stos
adc
xchg
xchg
mov
inc
repnz
in
movl
or
or
push
jae
in
notb
pop
mov
and
sbb
cmpsb
in
xor
outsl
cli
add
push
sub
std
mov
sbb
fisttpll
call
sub
cld
xchg
bound
mov
and
jl
icebp
mov
mov
push
jp
les
jmp
pop
sahf
cwtl
mov
cmp
lahf
bound
jle
fdivp
add
es
jns
shll
into
lahf
dec
test
pop
adc
aaa
movsb
lcall
push
mov
and
dec
out
push
xorb
fcoml
sub
std
pop
cli
push
sub
jnp
cmp
jp
out
pop
test
addr16
js
sub
xchg
lret
sub
insl
cmp
sub
imul
in
push
es
call
sbb
push
test
and
mov
stos
cmp
and
shrl
inc
out
adc
jp
mov
push
inc
lret
jne
dec
stc
mov
sub
lods
nop
hlt
shl
repz
lods
xchg
jg
push
jecxz
pop
inc
imul
xchg
cmpsb
daa
jno
ljmp
popa
sbb
add
flds
ret
je
mov
loop
js
fcmove
sub
nop
push
sbbl
pop
add
inc
or
lock
testl
xchg
stos
ret
aas
aas
jns
pop
test
cmp
enter
aam
push
in
out
enter
xchg
mov
cmp
std
dec
adc
imul
std
dec
pop
xchg
adc
ret
scas
push
sbb
imul
mov
fisubs
sub
mov
jmp
push
sub
inc
xchg
push
mov
pop
push
xchg
sub
in
dec
push
test
ss
stos
mov
add
xor
outsl
xchg
mov
or
cmp
inc
mov
movsb
dec
cmp
movsl
dec
xor
iret
lods
ss
push
push
pusha
mov
or
push
mov
mov
pop
xchg
std
push
push
repz
and
and
jp
mov
sub
mov
or
inc
push
adc
mov
in
sub
or
es
jl
xor
fnstsw
test
cltd
sar
push
jmp
lods
push
pop
mov
fildll
lahf
scas
dec
jo
jmp
push
repz
lods
mov
call
pop
cmpsl
ljmp
jne
in
nop
and
mov
clc
xchg
adc
insl
pop
cmp
fidivrs
sbb
jnp
addr16
nop
aad
fwait
ror
out
shlb
insb
loopne
dec
sub
adc
nop
test
fimull
jecxz
mov
xchg
lret
mov
xchg
inc
sub
mov
pop
pop
xlat
lock
aas
and
jmp
and
sub
fidivrs
add
jbe
insl
push
sub
shl
mov
push
sub
jb
mov
xor
daa
add
fwait
push
mov
jo
xor
push
sub
scas
prefetchwt1
mov
mov
mov
inc
or
insl
sarb
cmp
push
mov
pop
imul
xchg
sahf
push
jmp
ret
xchg
test
lret
into
jecxz
in
scas
or
movsb
sub
cli
fs
popf
mov
sbb
test
fists
and
dec
xchg
push
aam
sarb
andb
xchg
cmpsb
in
daa
test
push
je
pop
gs
jae
dec
xchg
and
iret
jg
vrcpss
popf
pop
leave
hlt
xchg
jne
in
cmpsb
hlt
dec
pop
push
jbe
ficoml
gs
sahf
xchg
orb
xchg
inc
or
bnd
xor
jg
nop
dec
jl
cmpl
cli
roll
push
xor
int3
xor
and
xor
adc
sub
outsl
cmp
clc
out
pop
clc
ds
cmp
sti
enter
mov
out
sbb
fs
push
jge
mov
out
mov
mov
cltd
push
push
mov
xchg
inc
ljmp
test
shr
jae
xchg
ret
arpl
and
pop
dec
popa
jnp
sub
ret
cmp
inc
outsb
ret
add
mov
cli
jae
cmp
xor
lret
sub
push
mov
jnp
in
sub
test
pop
sbb
xchg
cmpsb
lds
cmp
xchg
popf
shrl
cld
jns
imul
sbb
lret
jo
cli
push
mov
sub
jnp
dec
inc
pusha
inc
xchg
sbb
fdivs
or
loop
or
in
pop
xor
inc
sbb
out
dec
xchg
jne
gs
nop
cmp
sub
dec
push
sbb
sti
mov
push
idivl
jns
inc
jno
pop
enter
xor
and
iret
sbb
addb
push
sub
cld
dec
pop
xchg
repz
into
xor
sahf
sub
mov
xor
repnz
jb
mov
out
dec
mov
arpl
cwtl
jmp
daa
inc
out
ja
dec
jp
xchg
pop
jno
jno
fistl
dec
and
into
inc
cmpsb
test
out
ret
jne
fsts
and
jno
adc
xchg
or
out
lret
jle
iret
or
cmc
fildl
jmp
fadd
aaa
mov
jmp
mov
add
rcl
sarb
push
aas
sub
rorb
nop
xchg
pop
loop
scas
mov
imul
and
jg
mov
jnp
jg
fsubrl
dec
popa
adc
stc
ret
push
adc
loopne
xor
enter
adc
adc
sub
loop
dec
fstl
or
adc
aaa
push
mov
fsubp
xchg
hlt
adc
and
insl
pop
mov
out
into
xchg
in
add
aas
loopne
or
aam
xor
dec
push
or
shlb
lahf
xchg
mov
xor
push
ljmp
shll
nop
test
cmp
pusha
das
adc
es
jo
push
imul
clc
or
inc
dec
fsqrt
daa
cmp
cmp
push
xor
aam
push
je
cld
xchg
ljmp
fildll
in
inc
imul
and
xchg
push
ret
push
mov
arpl
cltd
add
jo
jmp
sbb
in
add
mov
adc
ljmp
jecxz
xchg
xlat
arpl
test
sti
sbb
sti
pop
icebp
inc
inc
shrb
hlt
jmp
or
shr
lahf
mov
ljmp
cwtl
shl
xchg
je
shll
scas
inc
bound
jp
pop
adc
xor
add
ficoms
je
mov
pop
jle
xrelease
and
out
fwait
cmp
adc
movb
jbe
cmp
shll
jae
cmp
jl
insl
shll
mov
fiaddl
nop
fisubrl
repz
xchg
mov
jno
ljmp
popa
test
fs
sub
mov
lret
sbb
pop
aas
daa
adc
pop
cmpsb
jnp
inc
jecxz
push
mov
and
test
mov
cwtl
cmp
loop
mov
bound
jl
rolb
sub
mov
xor
sub
loop
dec
stc
test
imul
push
mov
jge
addb
inc
jns
sahf
xchg
ret
cmpsb
fstps
inc
mull
outsl
add
dec
mov
and
adc
popa
cmp
ljmp
aaa
stc
lret
call
cmp
and
and
mov
sbb
cmp
loop
stos
cmp
jge
jns
into
push
out
test
and
cmp
leave
inc
inc
pop
dec
or
das
lock
rclb
es
pop
popa
mov
imul
fcomip
fcomip
xor
mov
sub
and
or
sub
out
repnz
enter
mov
scas
into
fwait
movsb
jg
sarl
aas
adc
lcall
lea
ror
sbb
cli
or
cmp
jb
mov
fcomps
call
lods
pop
mov
shr
cmc
xor
dec
xlat
pop
cmp
push
jmp
push
adc
idivb
subb
push
test
ljmp
imul
push
mov
push
lcall
and
pop
dec
jecxz
stos
or
aaa
and
test
test
clc
add
pop
lahf
mov
mov
or
mov
push
dec
mov
push
xchg
xchg
xchg
push
loopne
movsl
js
xchg
pop
lods
adc
push
pop
pushf
popf
imul
mov
sbb
shrl
pop
pop
sbb
push
mov
shll
add
mov
addb
test
icebp
sub
inc
test
inc
adc
and
xchg
pop
sbb
mov
xchg
sub
mov
fldcw
loopne
inc
mov
dec
insb
mov
clc
shll
repnz
into
out
push
lret
fs
and
push
cs
cli
fs
fidivrs
adc
lds
int
std
and
xor
xor
fisttpll
daa
pop
dec
pop
ltr
dec
push
js
xchg
adc
cmp
fldenv
outsl
mov
push
push
and
fidivl
js
xor
outsb
push
and
push
fwait
rclb
jmp
je
push
xchg
dec
stos
cwtl
jg
enter
bound
test
mov
scas
sbbb
pop
xlat
xor
fisubrs
sub
scas
cltd
pop
and
push
outsl
add
push
mov
jno
push
mov
cmp
pop
xchg
addr16
mov
arpl
jae
ss
ror
jns
int3
inc
cmp
jne
xor
call
out
jbe
lock
jle
dec
or
and
dec
cmp
inc
pop
add
arpl
push
dec
push
add
add
das
sbb
lret
stos
jbe
dec
xchg
mov
push
xchg
xchg
in
scas
sub
sub
aaa
sbb
pop
pop
iret
aad
mov
push
imul
in
xor
lret
and
mov
or
pop
pop
or
cmp
pop
lret
test
and
test
sub
lea
decb
inc
jg
dec
out
adc
cmp
xchg
fwait
pop
mov
cmp
addb
or
stc
insl
cmpsb
sub
data16
fbstp
jae
pop
popf
cwtl
mov
int
sbb
imul
test
dec
rcrb
rcrl
enter
repz
leave
mov
mov
js
stc
cmc
jo
movsb
mov
leave
jne
je
or
scas
fildll
dec
adc
aam
sbb
fwait
repz
repnz
out
jbe
jge
jecxz
xchg
aam
dec
xchg
push
jg
jae
aam
or
addr16
adc
fidivl
enter
mov
sbb
lahf
sub
jmp
jae
mov
cmp
push
pcmpgtd
aad
iret
add
pusha
adc
sarl
outsb
and
sub
aam
pop
imul
or
sahf
out
js
mov
ret
inc
fwait
or
and
stos
cmpsl
std
lret
dec
out
or
loopne
xchg
mov
fisttps
sbb
add
sbb
pop
or
xlat
scas
inc
add
mov
pop
mov
inc
andl
push
insl
rclb
xor
xchg
inc
hlt
les
loop
lahf
stos
sub
aas
in
subb
adc
jo
sub
and
xchg
sbb
xor
gs
jle
and
jnp
sub
add
adc
add
push
xchg
js
and
aas
ret
dec
mov
bnd
xchg
clc
mov
popa
sub
mov
jp
push
sbb
lock
pushf
fmuls
dec
mov
arpl
shlb
iret
bound
iret
inc
jns
scas
int3
testb
push
jle
xor
jecxz
sbb
sub
mov
adc
xchg
pop
pop
xor
rcr
cmp
xchg
pop
aad
movsb
add
loopne
and
sar
ret
sbb
and
stos
add
lods
div
outsb
xchg
pop
xor
push
dec
cli
into
push
xchg
mov
jae
in
xor
mov
stc
test
daa
or
je
lods
or
aas
jo
frstor
lcall
test
movsl
jb
repnz
dec
mov
push
int
or
mov
into
out
es
test
adc
sti
test
pop
mov
sbb
cmpsw
jbe
rclb
je
adc
push
ret
fsts
mov
lock
push
outsb
push
andl
jg
cmp
out
xor
movsb
popf
fwait
push
call
fcmove
xor
push
lcall
cwtl
dec
inc
insb
out
xor
lahf
jbe
imul
lea
mov
push
add
aad
popa
xor
sbb
xchg
adc
or
inc
add
call
xor
cmc
and
pop
cmp
hlt
fstl
imul
out
cmp
rolb
scas
cmp
inc
push
xlat
popa
push
cmp
pop
mov
repnz
pop
xchg
psubb
mov
cmpb
int3
xchg
rorb
mov
test
sub
xor
int3
test
fs
push
unpcklps
lock
out
xchg
lret
mov
push
push
fdivl
adc
lahf
lea
jge
sti
inc
mov
dec
add
arpl
sub
imul
mov
dec
outsl
pop
pop
mov
add
jmp
jne
adc
in
out
mov
inc
inc
xor
iret
jno
scas
ljmp
xor
inc
jle
sahf
push
pusha
xchg
and
sbb
adc
dec
movsb
shl
lcall
mov
pop
or
ss
xchg
sarl
scas
adc
pop
adc
xchg
adc
sbb
std
incb
mul
mov
sbb
adc
dec
push
in
lea
fsubrl
cmp
popa
or
das
dec
fmull
lret
fisttpl
std
int
pop
fisubl
jmp
xchg
inc
rcl
xor
add
mov
and
insb
lds
aam
fdiv
xorl
add
cmp
das
lcall
enter
jg
negb
sub
push
dec
push
lea
negl
or
shlb
cmc
pushf
pusha
les
movsb
pop
jp
cmp
jo
jecxz
xor
test
cwtl
mov
pop
and
sbb
cli
xor
push
mov
stc
in
add
repnz
iret
jg
pop
pop
loope
dec
call
ljmp
out
mov
push
xor
cmp
cld
mov
shlb
sub
decb
movsl
in
rorb
sub
mov
adc
outsl
aad
adc
hlt
sahf
pop
xor
dec
xorb
rcrb
into
loopne
sbb
or
jp
lods
ds
pusha
pop
xor
mov
cs
sub
cltd
jle
sbb
lds
cmp
cmpsl
mov
mov
andl
stos
jp
gs
cmp
cli
test
xchg
les
xor
or
fidivrs
mov
addl
gs
sbb
ja
fisubs
dec
jns
sbb
out
cmpsb
jnp
iret
outsl
out
sbb
fidivl
xchg
dec
subl
mov
cli
inc
fwait
xchg
test
dec
jp
sub
insb
sub
js
arpl
subb
or
jns
or
push
push
popf
lds
mov
insl
mov
dec
test
mov
imul
cwtl
and
clc
pop
movsl
pop
xor
add
outsb
dec
aad
push
imul
cmpsb
jae
aas
hlt
shll
daa
xor
mov
and
and
push
mov
sub
test
mov
aad
cmp
ljmp
mov
or
ljmp
in
jmp
lcall
leave
and
pop
loopne
xlat
xchg
mov
lds
imul
jne
dec
lahf
neg
xchg
rdmsr
fwait
adc
pop
jno
icebp
daa
sbbl
xchg
dec
addr16
popf
lret
dec
lea
lods
mov
jns
mov
mov
xchg
call
movsb
popa
test
rcll
cmpsb
xchg
in
mov
lret
addr16
cli
push
cld
cli
sub
adc
dec
jl
aaa
adc
mov
shll
daa
stos
pop
loopne
inc
inc
in
mov
insl
pop
xor
das
mov
xchg
sbb
xor
jb
mov
cmp
and
ret
mov
inc
xor
movsb
outsb
sbb
adc
pop
pop
dec
xchg
cmp
adc
dec
dec
movsb
cwtl
aam
add
sbb
enter
jno
mov
scas
mov
push
rclb
clc
cmpsb
stc
popa
out
push
and
push
mov
sub
lcall
call
inc
test
test
into
mov
dec
loope
daa
outsl
pop
subl
dec
sbb
push
test
enter
add
pop
inc
dec
int
push
xchg
data16
xchg
sub
xor
mov
test
pop
cld
sbb
jl
xchg
sbb
in
jge
and
cmp
add
mov
push
pop
enter
and
cmpsb
sahf
and
popf
dec
xor
push
out
pop
loop
and
outsl
mov
repz
imul
inc
mov
add
inc
jo
jmp
rcl
mov
subb
mov
mov
jl
cli
xchg
sarl
mov
jmp
cmp
mov
mov
jge
add
lret
xchg
xchg
imul
loope
cmc
xchg
inc
sub
xchg
jp
jle
aam
xor
stc
adc
aas
mov
xchg
inc
dec
jp
pop
mov
cmp
fs
fidivs
out
or
sbb
mov
mov
leave
cmp
mov
popa
pop
lahf
sbb
cmpsl
sarb
sub
dec
push
stc
or
xlat
dec
js
daa
jecxz
xchg
rcrb
jb
xor
test
daa
pop
push
dec
icebp
sarb
popa
jb
lret
bound
and
loope
fsub
out
negb
jbe
pop
lock
mov
mov
adc
add
jge
popw
dec
jne
dec
std
inc
mov
xchg
cmpsb
and
cmp
jo
dec
fwait
jne
iret
cmp
pop
clc
aam
loopne
xchg
shrl
mov
pop
inc
ror
js
push
push
cmp
arpl
or
dec
push
pop
dec
lret
icebp
addb
sbb
cli
shrl
push
rcll
mov
in
lock
jecxz
aaa
push
add
ss
ret
push
xor
popl
out
sub
pop
les
jecxz
sbb
fists
cmp
lcall
sarb
mov
fs
jl
jl
and
jmp
fmuls
gs
fs
dec
jae
xor
fildl
sbb
xor
xchg
and
enter
lret
push
loope
in
cld
aaa
popf
mov
mov
stos
repnz
repz
xor
clc
inc
lahf
divb
or
cmovne
out
movsb
lods
xchg
sbb
shrb
aad
pop
add
fs
pop
mov
inc
dec
or
adc
ds
enter
adc
cwtl
outsl
or
jle
dec
jbe
and
call
lea
push
or
out
dec
sub
cmp
addr16
lcall
outsl
mov
popf
lahf
pop
jg
test
and
and
fs
add
inc
lods
repnz
lods
lds
ds
mov
xor
pop
sti
inc
inc
cltd
clc
rclb
or
test
xlat
lods
mov
adc
cwtl
inc
dec
push
sbb
out
jne
push
int3
and
les
and
pushf
add
lods
or
push
jl
call
test
popa
dec
iret
cmp
lods
xchg
cmp
test
push
fs
inc
jecxz
inc
add
xchg
int3
fisttps
bound
rclb
cld
add
dec
mov
or
bound
loopne
sub
dec
mov
cwtl
stc
jae
pop
pushf
scas
addr16
rcrb
lods
inc
push
sub
sti
add
std
xchg
dec
in
sub
mov
jl
sub
xchg
mov
jmp
mov
lock
imul
shlb
repz
test
and
mov
jne
push
lahf
sbbb
fwait
jp
pop
inc
cmp
inc
xrelease
or
lcall
push
inc
or
mov
pop
es
cmp
outsb
lock
jmp
push
ss
addb
sub
jns
frstor
or
shll
imul
adc
add
xchg
add
daa
rcll
mov
fistps
pop
cmpsl
xchg
lea
popf
adc
cltd
jle
and
pop
mov
and
popa
xor
cltd
fldt
loope
rcrb
or
cmp
ss
ss
xor
les
mov
cmp
jmp
mov
push
nop
xchg
mov
xor
lea
in
rolb
lret
xor
dec
movsb
push
sub
loopne
fildll
sbb
and
inc
mov
test
dec
popf
leave
or
add
sbb
xor
and
not
dec
xchg
and
sbb
mov
cltd
mov
and
cmp
idiv
mov
das
jp
fdivrs
and
xor
adc
pop
clc
push
cmp
pushl
test
data16
lea
jo
cmp
sub
push
into
inc
or
sbb
adc
sub
negb
popf
aam
nop
ret
push
or
or
pusha
das
fnstcw
icebp
lods
and
mov
sti
aam
ss
dec
iret
mov
inc
daa
aaa
sub
add
adc
clc
insl
cmpsl
pop
scas
stos
cli
stc
enter
jmp
dec
mov
ss
dec
idiv
pop
and
sub
push
cmp
mov
inc
mov
mov
mov
dec
lret
jb
into
stos
xchg
test
aaa
fwait
ja
stc
mov
xchg
mov
stos
lea
popf
out
mov
sbb
popa
pusha
cmc
push
jp
and
lcall
xchg
xchg
pushf
cmp
cwtl
es
mov
mov
mov
push
ret
ja
mov
scas
jno
pop
jle
loope
insl
aas
pushf
mov
js
std
fstpt
xor
mov
mov
testl
into
ret
jae
xchg
ljmp
shlb
mov
std
lock
imul
fsubrs
or
cwtl
mov
in
cs
and
cwtl
xchg
mov
jne
ljmp
pop
in
arpl
mov
rcl
inc
ja
sbb
aam
lret
ret
xchg
loope
pop
lcall
enter
inc
sbb
pop
out
xchg
shll
adcb
lret
dec
int3
dec
push
flds
push
adc
scas
cltd
push
pop
cmp
inc
dec
stc
push
out
lea
cmp
shr
mov
dec
out
jne
es
pushf
mov
mov
lock
mov
mov
push
mov
outsl
lret
daa
ret
mov
leave
push
inc
dec
mov
inc
mov
xor
ss
adc
inc
cwtl
aaa
lods
xchg
js
add
add
pop
decb
rclb
test
xchg
mov
or
adc
jp
pop
cwtl
test
gs
into
cmp
cli
ret
lea
jge
stc
fcmovu
pop
mov
ja
add
lock
das
mov
movsl
into
pop
insl
xchg
cwtl
fmul
jbe
xchg
loope
incb
cmpsb
sbb
cltd
and
and
dec
stos
out
sahf
xlat
mov
stos
jmp
pop
or
fidivs
push
cs
out
push
dec
push
in
lea
cmp
sub
aaa
lds
arpl
adcl
pusha
out
out
sub
fcomps
cmc
cli
sbb
jp
push
push
mov
repnz
cmp
loop
ja
fwait
pop
pop
mov
sbb
ja
xchg
or
rclb
andb
je
cmp
adc
scas
xor
in
pop
lods
xchg
cltd
mov
nop
mov
push
loop
mov
shrl
dec
int
sbb
mov
rcrl
sub
mov
shlb
lods
repnz
jmp
mov
shlb
sbb
and
inc
jle
or
mov
aad
pop
pop
push
ja
lcall
xchg
stc
adc
stos
sbb
das
inc
and
pop
decl
adc
adc
aaa
lret
sbb
hlt
xchg
mov
add
mov
pop
sbb
rcrb
mov
adcl
insl
pop
inc
inc
lret
and
dec
inc
mov
sti
jnp
and
mov
insb
outsb
dec
dec
lods
cmpsl
outsb
cmp
mov
mov
pop
stc
lock
aas
and
mov
jl
push
jle
and
scas
jmp
mov
jg
imul
xlat
ret
in
aaa
sub
push
lret
pop
loop
and
and
and
mov
pop
and
mov
hlt
dec
testb
and
pop
pusha
lods
repz
push
movb
cmp
out
push
or
mov
xacquire
mov
push
jle
testb
fistpl
lcall
enter
loop
pop
shll
cltd
inc
sub
stos
stos
sbb
ret
jecxz
pusha
sbb
ss
popw
dec
inc
jne
jl
leave
push
sub
sub
mov
pusha
and
jbe
inc
xor
push
dec
pop
and
inc
mov
mov
sbb
sti
xor
mov
and
jb
je
push
mov
adc
filds
push
xchg
test
in
fstps
mov
lret
ret
adc
and
negl
jae
inc
dec
xorb
sbb
mov
jnp
pop
xor
xchg
aad
into
lret
pop
mov
lds
mov
push
addr16
dec
adc
fnsave
fwait
pop
mov
mov
int3
mov
in
xor
pop
pop
jnp
into
mov
daa
pop
mov
arpl
push
xchg
shl
in
aam
aaa
cmp
push
xchg
inc
fisttps
inc
xlat
shrl
test
stos
cltd
jecxz
inc
leave
arpl
mov
loop
mov
das
cmp
das
icebp
scas
xchg
std
int3
or
jge
dec
cmp
xor
cmp
std
mov
test
pop
cli
fldl
mov
popa
sbb
imul
jp
jns
rcl
inc
stos
pop
fxch
repnz
push
jnp
inc
inc
fmuls
in
jl
bound
int3
mov
aaa
add
sbb
fisubrl
loopne
test
or
sbb
iret
mov
loopne
push
sti
jmp
push
xlat
leave
rclb
push
pop
cld
sub
loop
fcompl
nop
pop
rcrb
fwait
in
dec
repz
jne
sub
dec
xlat
xchg
push
push
inc
andl
mov
xchg
dec
out
sbb
jecxz
mov
push
fdivs
jo
inc
dec
sub
pop
jg
and
loop
push
pop
push
cmp
insl
add
sbb
imul
andl
test
fdivrl
das
nop
int
add
imul
mov
adc
hlt
adcl
xor
lahf
cli
sahf
jns
inc
xor
mov
sbb
add
in
xchg
ret
or
xor
insl
sbb
or
fcoms
and
mov
sbb
gs
and
lahf
test
add
aam
dec
repz
mov
sbb
hlt
mov
xchg
add
mov
pop
outsb
add
sbb
mov
xchg
and
test
loopne
pop
loopne
push
mov
daa
enter
repnz
and
inc
pop
mov
dec
sbb
adc
mov
sti
bound
lea
insb
sbb
test
inc
pop
lea
js
in
bsf
xchg
loop
add
add
and
fistpll
sub
cmp
adc
add
lods
dec
mov
xchg
dec
dec
adc
pushf
mov
cmp
xchg
sbb
xchg
jae
push
xchg
ljmp
ds
push
andl
push
ret
inc
iret
pop
add
sub
je
sbb
loop
add
xchg
mov
add
push
pop
int
pop
movsl
les
xor
xor
push
bound
arpl
inc
dec
pusha
in
inc
js
cltd
je
icebp
loop
mov
js
cld
sbb
cld
add
mov
or
xchg
sbb
lret
shll
test
mov
cmpsl
repnz
pop
adcb
call
enter
push
scas
sub
adc
in
in
stos
scas
push
decb
dec
add
mull
dec
lock
sbb
fcmovu
in
push
or
jp
and
mov
xchg
sub
shlb
xlat
aad
sub
and
fiadds
addr16
dec
cld
mov
imul
and
pop
cmp
iret
movb
and
aas
jo
and
pop
pop
hlt
add
stos
cmp
xor
ljmp
pop
lahf
mov
cs
mov
and
add
add
dec
jb
ja
stos
add
fcompl
mov
jnp
insl
jecxz
jecxz
dec
pushf
icebp
pushl
je
fsubs
fsubs
and
pop
pop
xchg
addr16
lea
sarb
ljmp
vpmulhw
loop
mov
sbb
sub
les
les
cwtl
add
pop
test
js
sub
or
add
push
leave
mov
sarb
mov
mov
inc
test
mull
cli
sbb
lock
ffreep
loop
lods
iret
mov
sub
pop
adc
mov
jle
or
roll
mov
pop
scas
push
test
xchg
mov
lds
test
xor
ja
pop
out
test
rorb
mov
mov
arpl
ljmp
xchg
ret
enter
sbb
sbb
imul
and
push
lock
imull
jg
pop
pop
push
mov
jae
mov
cmc
xlat
sti
cwtl
inc
std
mov
jae
lock
mov
push
sbb
lahf
sbb
add
mov
inc
les
jl
xchg
fnstenv
pop
bnd
add
xor
mov
or
rcrl
pop
inc
and
jbe
push
repz
faddl
pop
dec
push
pushf
adc
cltd
and
inc
dec
and
or
and
or
loop
imul
pop
sub
frstor
lods
push
xchg
insb
pop
push
out
popa
pop
faddl
bnd
out
repz
fsubrs
test
sub
or
push
rolb
repz
ja
xor
jp
cmp
push
add
incl
and
sbb
xchg
int
mov
bound
pop
sbb
das
xchg
jno
bound
jmp
push
les
in
decw
gs
in
popf
cmc
adcl
out
int3
push
adc
ret
dec
or
pop
rclb
xchg
xchg
arpl
cmpsb
mov
inc
jmp
std
ret
or
movsb
mov
sub
sub
mov
fstps
mov
in
dec
xchg
rolb
sub
mov
divb
mov
sbb
fistpll
pop
addr16
dec
add
addr16
hlt
das
clc
in
or
js
lahf
adc
lret
popa
call
jo
mov
out
jmp
dec
pop
mov
cmp
cmp
add
imul
sub
inc
jae
mov
mov
adc
fadds
add
lods
loop
mov
outsb
in
mov
addb
dec
jns
out
repnz
xchg
adc
jb
cmp
rcrb
mov
xchg
scas
gs
insb
mov
int
gs
cmp
cmc
gs
imul
or
xor
outsb
fisubs
mov
push
lods
mov
and
lods
lods
scas
out
mov
lea
or
xchg
rcrb
or
pushw
movsb
add
pop
ja
xchg
in
cltd
in
popf
mov
xchg
push
jmp
test
decl
shr
fcmovbe
scas
mov
loopne
in
sahf
shll
aad
sbb
push
les
mov
xchg
rclb
in
dec
xlat
sub
cmc
cmp
jno
pop
mov
dec
jle
mov
mov
add
jns
js
sbb
xor
sahf
fwait
daa
add
adc
dec
dec
mov
mov
fdivs
jle
dec
inc
ds
add
jmp
test
push
mov
mov
or
mov
xor
or
mov
mov
roll
or
pushf
sahf
test
cmp
sbb
sub
dec
sbb
outsl
xchg
dec
aas
add
dec
inc
stos
lea
clc
inc
mov
lea
sar
aad
stos
enter
pop
lods
popa
negb
push
int
jg
lahf
arpl
test
push
fwait
roll
or
je
pop
mov
cli
pop
adc
mov
in
mov
sub
sbb
add
cmp
or
sti
test
repz
adc
push
sbb
jo
idivl
icebp
in
cmpsl
or
out
data16
ret
xchg
pop
adc
push
shll
fstps
je
jp
and
popl
inc
and
dec
sti
int3
or
in
mov
mov
sbb
gs
pop
mov
mov
mov
leave
xchg
fwait
ret
shlb
out
push
dec
roll
in
push
xor
xor
xchg
pop
aad
xor
and
dec
push
aam
aaa
mov
add
mov
pop
mov
outsb
les
mov
outsb
popf
lahf
xchg
and
pop
sub
shll
adc
mov
adc
call
push
out
mov
jmp
xchg
lock
inc
addl
arpl
push
cmc
mov
sti
and
movsl
jge
call
lods
cmp
arpl
cmpsb
xor
rcr
ss
sbb
aaa
bound
jg
repnz
loop
aad
filds
push
mov
cmpsl
out
jecxz
arpl
call
xchg
outsb
shr
aas
pop
aam
jmp
idivb
add
ret
dec
pop
aam
inc
pop
cmpsb
mov
and
lds
jno
cmp
pushf
mov
mov
fiadds
scas
xchg
fwait
pop
and
test
push
xchg
jecxz
jb
cmpsl
lea
push
scas
or
insb
icebp
imul
and
cld
jle
lahf
pushl
sahf
mov
and
sub
mul
in
xchg
xor
fldenv
xchg
mov
or
and
add
andl
pop
pop
std
adc
movl
loope
inc
fwait
jmp
cmp
jnp
mov
insl
xor
push
push
inc
mov
mov
fistpll
jns
sbb
subl
cli
sti
and
inc
addl
js
fs
js
scas
push
ror
add
test
push
aam
add
lock
repz
or
add
fsubrs
mov
or
hlt
mov
xor
pop
pop
add
mov
add
inc
pop
out
pop
dec
mov
dec
fdivr
rclb
movsl
icebp
rcr
sbb
dec
popf
inc
push
mov
push
push
push
pushf
bound
loop
jae
mov
imul
dec
xchg
fwait
push
lods
stos
je
sub
sub
ret
int
lea
push
mov
leave
sub
mov
mov
into
in
xchg
sub
push
js
cmpsl
mov
dec
mov
iret
pushf
in
mov
imul
and
cld
movsl
or
lods
xchg
enter
push
mov
add
cmp
dec
addl
shll
cltd
add
pop
push
pop
int
mov
in
sbb
lahf
fucompp
and
inc
inc
push
add
mov
dec
mov
fsubl
ljmp
xchg
out
ss
pop
out
or
movsl
push
call
mov
xlat
mov
shll
dec
inc
sbb
push
aam
repnz
ds
mov
cmc
jae
nop
cmp
mov
stos
imul
test
lahf
stos
inc
add
pop
cwtl
fiadds
pop
mov
aaa
imulb
in
adc
mov
push
lret
inc
imul
push
adc
pusha
cld
je
mov
lods
push
test
fs
fidivrl
add
icebp
and
fimull
xorl
dec
lock
iret
sbb
pushl
mov
sub
int
nop
sahf
xchg
lcall
xorb
add
iret
ja
pusha
loopne
mov
mov
dec
cltd
push
sarb
shlb
xor
cs
xlat
push
aam
cmp
call
test
cmp
sub
jmp
lds
add
jecxz
sbb
pop
xlat
or
adcb
pushf
xchg
sbb
xor
dec
leave
push
mov
mov
adc
jae
sub
aas
inc
aaa
mov
inc
loopne
call
push
push
lds
out
xor
lods
mov
xchg
aad
sbb
mov
mov
ret
mov
sub
adc
mov
jge
test
inc
fwait
sbb
inc
sahf
sbb
xchg
ret
movl
outsb
dec
xchg
dec
xor
add
inc
in
add
sub
nop
outsl
xchg
shrl
sahf
lahf
xor
and
cmpsl
subl
or
sarb
loop
jno
mov
jae
sub
dec
hlt
dec
lret
roll
int
dec
xchg
xor
rcrl
rcrb
lods
cwtl
cli
or
mov
sub
or
insl
dec
cli
pop
ja
xor
adc
jae
xor
pushf
int
lret
mov
adc
fisttps
xchg
mov
in
andl
arpl
stc
fisubs
mov
cmp
fldenv
jl
test
or
dec
mov
lods
push
mov
add
ljmp
mov
ss
sbb
pop
xor
sahf
sub
sbb
push
mov
mov
imul
sub
jecxz
push
jns
mov
xchg
in
popf
xor
xchg
aad
pop
mov
aam
xchg
mov
je
jae
ljmp
inc
cltd
subl
dec
repnz
pop
cld
cli
or
jne
test
and
sub
mov
lret
sbb
jno
add
repz
ljmp
in
lds
and
mov
mov
pop
mov
fnclex
je
outsb
xrelease
jae
jge
sbb
lock
or
dec
fwait
lods
xor
gs
cmp
ljmp
push
add
cli
in
cmc
xchg
jo
jmp
jnp
nop
test
int3
xchg
mulb
cld
adc
lock
bound
outsb
lods
dec
loop
pop
mov
lock
cli
movsb
loop
ss
xor
adc
jns
and
xor
xor
lret
addr16
push
pop
add
or
mov
ret
dec
arpl
inc
lock
stc
adc
lods
xor
push
fs
shrb
xchg
mov
sarb
es
push
or
jge
pop
test
mov
aas
les
loopne
sub
mov
inc
xchg
into
ljmp
mov
dec
inc
jne
pop
xchg
ljmp
jnp
out
dec
outsl
mov
fcmovnbe
imul
addr16
mov
cmp
jle
mov
jnp
pop
and
adc
adc
aaa
xchg
jmp
xchg
xor
mov
arpl
mov
xchg
push
mov
andb
mov
xor
mov
sub
mov
mov
xchg
pop
bound
jge
push
sahf
and
jg
mov
mov
lods
sub
cltd
jne
fdivs
mov
fidivrl
movsb
in
mov
stc
xor
jle
xchg
data16
lods
push
xor
test
mov
sub
int
in
lahf
sub
iret
cmp
xorb
test
xor
in
push
inc
mov
jns
pushf
pop
dec
push
mov
push
sahf
out
lock
push
das
dec
add
cli
pop
dec
cmp
sbb
cmp
rorl
aam
xor
fwait
jmp
jnp
fwait
xorb
or
adc
pop
shll
pop
pop
outsl
dec
dec
push
inc
rcrl
inc
fs
and
xor
int3
popa
in
inc
pop
gs
mov
stos
imul
sub
or
mov
xchg
test
push
shrb
jmp
inc
insb
inc
dec
out
cmc
cltd
mov
push
andl
imulb
mov
ljmp
push
mov
test
mov
leave
mov
decl
addl
and
roll
test
pop
lods
adc
xlat
clc
push
push
mov
push
mov
jne
rcl
fwait
mov
xchg
insb
cmp
xor
xchg
pop
xor
dec
dec
jle
jmp
xchg
fimuls
sub
xchg
or
push
popf
nop
inc
push
pop
dec
ficomps
jle
scas
aad
cmp
xor
or
es
mov
orl
shll
push
shlb
adc
pop
add
hlt
cmc
in
mov
roll
push
test
mov
fidivrs
sbb
jecxz
je
jns
sbb
push
in
mov
and
jl
mov
popa
or
into
ret
outsl
cwtl
lock
adc
jp
or
fs
xor
scas
rcll
dec
sbb
mov
or
cmp
ret
addr16
fsts
jne
mov
inc
jb
call
push
aaa
aas
jnp
cmp
or
js
mov
outsl
movsb
lods
mov
xchg
aam
pop
mov
add
pop
or
out
ret
mov
adc
clc
xor
add
add
pop
testl
loop
scas
movsb
nop
pop
and
clc
outsb
in
push
inc
push
enter
sub
adc
into
sub
inc
push
lahf
cmp
leave
xchg
sub
xchg
cmp
push
lcall
es
inc
cmc
idiv
lret
movsl
or
or
scas
mov
orl
jl
sti
test
shll
ficoms
loope
sub
inc
add
jns
and
cmp
cmp
fwait
rcl
mov
fnsave
mov
leave
jae
jne
test
out
adc
pop
or
loop
or
sub
jmp
add
sbb
mov
adc
das
mov
xchg
in
pop
jo
out
lds
xchg
hlt
push
cmp
sbb
add
cmp
dec
or
das
jle
cmc
lods
ja
mov
dec
lds
insl
lcall
mov
inc
sbb
repnz
mov
popa
add
out
mov
jnp
jmp
outsb
push
sub
icebp
popa
das
sub
mov
mov
mull
pop
sbb
notl
leave
cwtl
shrb
dec
icebp
mov
cmp
sahf
in
gs
rcrl
aam
adc
mov
dec
loope
xchg
inc
xorl
dec
in
outsl
cmp
xor
ds
push
nop
fildll
inc
mov
mov
mov
je
adc
js
jp
mov
cmp
sbb
sub
sbb
adc
fcomip
pop
aam
or
arpl
jbe
addr16
ss
loop
pop
or
out
std
and
test
insb
popa
sub
xor
and
fsubrp
jbe
aad
je
icebp
inc
lock
sbb
lods
and
loop
pop
jnp
inc
add
ffree
mov
and
cmpsl
mov
leave
sub
pop
mov
or
push
jne
aad
insl
psadbw
adc
jmp
sbb
mov
iret
stos
dec
push
add
adc
mov
stc
xor
push
loope
push
into
adc
ja
test
inc
rorb
lcall
push
mov
xchg
ss
sti
mov
jmp
xchg
loopne
add
outsb
movsl
pop
adc
dec
push
push
fsub
xchg
ja
pop
lods
adc
leave
jge
bound
xchg
pop
sub
push
pop
inc
and
aam
mov
shr
pop
test
stos
sub
arpl
fildl
xor
jno
cmp
xor
mov
adc
or
iret
mov
mov
iret
sbb
xor
pop
mov
push
pop
and
or
repnz
or
add
mov
xchg
dec
cmp
cmpsb
lock
mov
add
out
pop
push
aaa
mov
fsubrs
push
inc
decb
test
or
jne
psllw
shlb
notl
and
and
gs
mov
or
stc
add
mov
and
inc
sbb
mov
pop
test
mov
aam
mov
jecxz
jae
jne
in
in
inc
add
mov
and
and
mov
stos
inc
push
jmp
fists
dec
notb
outsl
stc
subb
adc
jno
push
movsb
pop
ret
inc
cld
fwait
push
push
mov
outsl
loopne
int
testb
int3
cmp
leave
ss
jl,pn
mov
fwait
std
mov
dec
movsb
jb
insb
dec
dec
xchg
jecxz
lret
adc
adcb
ret
and
pop
leave
sub
or
dec
xchg
sbb
xor
pop
sbb
out
aam
and
adc
pop
add
adc
in
stos
dec
sbb
lds
xor
pop
adcb
jo
pushf
add
movsb
test
adc
sarb
enter
cmp
or
and
sarb
ja
cmp
adc
fs
cltd
lcall
out
mov
cmc
sbb
mov
in
rorb
lcall
mov
and
xlat
leave
jnp
cltd
in
sub
add
mov
push
inc
or
lea
and
cmp
fldcw
cmp
inc
mov
push
cld
dec
jp
test
add
xchg
shlb
orl
mov
fwait
inc
cmpsb
cltd
jmp
test
pushf
imul
jb
sbb
inc
lock
ljmp
ret
pushf
imul
mull
cmp
enter
andl
jp
repnz
xor
adc
loope
jp
sbb
in
shl
jb
fdivp
pop
sbb
pop
push
jp
inc
shll
in
or
dec
xchg
xchg
not
addr16
pushf
jno
and
sub
lock
lea
sub
add
add
lret
mov
or
add
hlt
fstp
bound
aad
cmc
movsl
xor
adc
adc
lret
nop
and
or
int
or
aam
lret
shlb
sbb
xchg
stos
or
mov
pop
movsl
mov
and
pop
jbe
decl
sarl
ficoml
repnz
fs
fistpl
test
out
xor
pop
push
xor
cmpsl
sub
lcall
loope
incl
cltd
cmp
ds
out
xorl
jecxz
cmpsb
push
dec
clc
insl
adc
inc
xchg
rcl
cmp
mov
leave
sti
and
aam
cld
cmpsl
push
pop
and
adc
pop
popa
jns
mov
or
shlb
aaa
inc
pushf
cmc
mov
cmp
dec
in
xor
cmp
push
sub
je
sbb
pop
sub
mov
push
movsb
movsb
daa
repnz
dec
in
leave
dec
dec
xor
lea
jbe
add
add
std
sbb
jo
rolb
sub
fistps
sarb
jp
dec
dec
int
fwait
inc
repnz
mov
pop
push
sbb
popf
dec
das
xor
test
dec
fisttps
sahf
imul
in
fisubrs
movb
jbe
mov
lahf
xchg
ljmp
scas
xorl
lock
fmull
cmp
sbbb
mov
shr
pop
pop
aam
lret
mov
pushf
dec
addr16
ljmp
wbinvd
or
adc
dec
sbb
shll
cltd
push
stc
sahf
dec
call
inc
mov
popa
jl
mov
mov
rcrl
pop
out
pop
pop
daa
inc
mov
xor
mov
ds
mov
and
popf
outsb
aam
ret
and
les
inc
pop
mov
push
lds
and
jg
mov
add
jb
xchg
xor
sub
roll
push
imul
movsb
sbb
test
mov
sub
outsl
sub
fwait
and
dec
loope
aaa
mov
pushl
inc
mov
dec
xchg
mov
jmp
pusha
add
cmp
xchg
cmp
lcall
push
push
pop
cld
pusha
push
add
aam
in
gs
pop
inc
push
cmpl
in
adcb
imul
sub
mov
adc
sar
into
push
and
sti
movsl
mov
ss
adcl
mov
sub
pop
lret
and
mov
cmp
xor
add
inc
dec
test
mov
sbb
cwtl
mul
cmp
enter
pop
stc
pusha
arpl
les
hlt
ljmp
ja
sahf
dec
out
movd
push
push
dec
xchg
hlt
das
ja
xor
or
into
or
pop
lods
jg
inc
das
inc
orl
mov
in
lret
add
and
mov
or
mov
lock
popa
sub
rol
ret
or
sarl
loop
xor
mov
scas
inc
cmp
pop
js
mov
incb
fcompl
mov
jle
xor
les
inc
lds
test
cs
insl
cmp
adc
scas
add
lods
cmp
repz
lret
jg
sub
adc
cwtl
out
xor
mov
xchg
add
jle
sub
icebp
mov
pop
js
dec
sub
add
idiv
jnp
push
andb
push
test
je
add
push
sbb
pop
cld
pop
jnp
mov
xchg
sub
pop
ret
jb
pop
cmc
inc
sti
dec
pop
adc
jmp
pop
dec
jne
aam
fptan
fstpl
out
cmp
cmc
in
shr
pop
inc
pop
sbb
lcall
hlt
add
dec
push
mov
or
clc
lret
sbb
sub
test
cmp
call
and
push
xchg
xor
movsl
std
xor
ret
lcall
add
sub
pop
fsts
rcrl
stos
mov
je
int3
ss
shlb
xchg
aam
jbe
cmc
mov
fsts
xchg
loope
out
je
popa
mov
inc
mov
xchg
adc
addr16
adc
lahf
adc
lds
outsb
pop
les
repnz
sub
adc
pop
cli
push
sbb
pop
adc
andb
repz
mov
xor
dec
pop
pop
jo
shrb
mov
scas
leave
dec
pushf
adc
aaa
nop
shrb
dec
pop
loopne
sbb
sbb
orb
mov
int3
adc
push
ja
in
xorl
mov
push
popf
dec
inc
insb
jg
dec
xadd
push
jb
push
mov
sbb
inc
sbb
mov
mov
pop
lcall
adc
lods
dec
lcall
jns
dec
mov
mov
popa
xor
jae
dec
jg
mov
scas
ffree
mov
sbb
shrl
out
mov
inc
dec
fcoml
daa
scas
mov
mov
add
in
cmp
cmp
sbb
push
repnz
inc
xor
adc
add
sahf
outsb
leave
mov
mov
mov
lahf
mov
roll
scas
sbb
popa
movsl
sub
cmp
and
shlb
dec
xchg
xor
mov
adc
rcll
push
lods
sbb
imul
xlat
pop
cmc
fwait
and
lods
push
dec
sub
add
mov
ds
mov
gs
mov
std
push
lahf
test
in
dec
mov
xor
dec
mov
test
add
ss
push
mov
sahf
shll
dec
push
rolb
inc
das
decl
or
fcomp
jmp
dec
inc
xchg
or
mov
lret
inc
std
xchg
xchg
test
xchg
fisttpl
xor
insb
out
adc
in
test
sbb
xchg
in
adc
cmp
cld
cmp
mov
in
cmp
mov
iret
adc
xor
cs
pop
mov
je
lret
and
mov
dec
movd
repnz
sub
inc
cwtl
jmp
mov
les
repnz
pop
outsl
lods
push
jle
or
andb
inc
js
mov
xlat
int
loopne
push
dec
cld
ret
jbe
in
enter
push
dec
inc
cmp
dec
mov
pop
fstpt
bound
cmp
pop
ljmp
loopne
add
jg
lock
loop
xor
cli
adc
cmpsl
jns
cli
popa
inc
or
sub
jnp
cli
int
cmp
cmp
and
shlb
enter
rolb
inc
movsl
cmp
inc
lahf
sahf
movsb
mov
push
jmp
cmp
dec
in
sbb
dec
rol
jge
push
lods
push
iret
dec
jp
int3
pop
xor
roll
sahf
roll
mov
adc
sub
jmp
shlb
sbbl
iret
hlt
pop
or
adc
xchg
mov
dec
test
pop
cmp
pusha
jb
jb
pop
subb
inc
pusha
xor
lret
insb
jns
push
mov
lret
imul
std
xor
aam
lret
or
pop
adc
push
and
js
mov
jecxz
filds
adc
les
shl
repnz
jl
mov
mov
out
mov
lods
cmp
stos
loop
xchg
pop
stos
add
jae
adc
pop
enter
xchg
sbb
add
sub
xchg
popa
push
stos
loope
xchg
out
or
sarb
cld
jnp
push
cmp
loope
mov
jno
pop
mov
sub
jmp
dec
mov
insl
shrb
enter
out
adc
faddp
ljmp
fs
push
lock
dec
std
sbb
dec
xor
pop
shl
bound
fistps
xchg
test
lcall
push
xor
pop
lea
cmp
mov
ljmp
shll
mov
pop
jo
call
enter
in
cli
and
out
icebp
or
dec
repnz
xor
cmpsl
ret
das
jns
or
out
test
in
adcb
clc
bound
test
jae
rcrl
fcmovne
sti
scas
lahf
cmp
leave
clc
jae
lcall
ss
iret
repnz
xchg
fs
xchg
cmc
xlat
mov
jecxz
leave
mov
adc
add
dec
bound
and
or
hlt
mov
pusha
rcr
adc
movsl
test
jo
xchg
adc
out
sbb
inc
inc
mov
cmc
test
cmp
add
jge
pop
or
mov
add
stos
shl
adc
cmp
je
jmp
jp
sti
nop
stc
jne
xchg
and
cltd
jl
jp
mov
mov
in
xor
mov
sub
cmp
hlt
sbb
shll
cmpsb
sub
or
lock
leave
mov
add
dec
mov
xor
dec
test
shl
shll
push
stc
push
sbb
xchg
hlt
push
mov
sub
lock
data16
mov
mov
cli
ja
divb
arpl
fists
xor
test
sbb
repz
loop
shlb
xchg
xchg
icebp
in
pop
sbb
cmp
or
inc
not
sbb
inc
fcmovnu
cmp
jns
minps
sbb
push
xor
daa
xchg
or
sub
lcall
and
repz
jo
dec
int
outsb
je
pop
sbb
insl
fsubs
dec
jb
fildl
scas
aas
xlat
aaa
xlat
test
cmp
lods
stc
sti
hlt
cli
std
xchg
cmp
push
mov
std
popf
mov
icebp
lds
sbb
sarl
mov
jbe
sarl
push
xor
cmp
pop
dec
mov
or
ja
and
adc
test
or
test
rorb
mov
pop
je
and
xor
xlat
loope
jbe
push
shrl
cmp
sub
sub
jecxz
jae
push
jecxz
outsb
lods
inc
jp
int
flds
adc
fwait
push
hlt
mov
dec
mov
dec
shrl
fdivrl
mov
add
loopne
mov
pop
test
push
dec
sub
adc
mov
mov
sub
rcrl
push
lret
sub
loopne
add
sbb
insb
mov
ret
inc
rorb
lods
jo
push
iret
popa
mov
and
ds
xchg
enter
js
loope
sub
psubsb
push
popa
test
sahf
dec
sub
lcall
dec
fstpl
adc
movq
mov
cmpsl
hlt
xchg
jnp
out
out
push
lea
xchg
jnp
dec
xor
push
jnp
xor
test
pop
fmul
inc
aaa
sbb
test
ljmp
loop
dec
or
inc
inc
cwtl
and
push
mov
out
aaa
jbe
mov
sub
push
mov
add
push
aam
test
in
popf
or
dec
add
shlb
out
mov
mov
fwait
lods
push
push
inc
rcl
or
addr16
hlt
sub
ret
cmpsl
call
jae
test
jbe
leave
ret
push
lret
mov
lea
leave
aad
and
cmp
in
clc
setno
dec
xor
mov
stos
mov
xor
push
xchg
std
daa
jbe
push
in
sahf
xchg
sub
jl
mov
jno
loopne
ds
xchg
mov
xor
ret
xor
adc
push
cwtl
mov
jne
rcrl
add
bound
add
test
dec
add
xchg
cmpsb
mov
in
sub
cmp
inc
xchg
insl
jle
sahf
push
lahf
lods
mov
ret
fsubs
and
pop
je
or
jns
jb
cmp
dec
int
xlat
aam
cmp
push
scas
mov
stos
shlb
mov
push
xchg
pop
jg
mov
lods
aas
mov
sub
or
and
popa
aas
les
insb
jb
sbb
movsb
mov
mov
jo
dec
cli
xor
dec
roll
cmc
add
add
push
or
pop
cmp
xchg
sbb
mov
fadds
xchg
adc
jge
jp
inc
divl
mov
sbb
push
add
loop
cwtl
mov
xor
aas
jp
lcall
ffreep
es
mov
mov
movsl
jle
test
mov
pop
outsb
test
xchg
nop
pop
xchg
lods
scas
lret
mov
adcb
das
aaa
test
stc
lods
jg
scas
aaa
in
cltd
sbbl
data16
std
in
and
jp
push
mov
jecxz
dec
dec
movsb
cli
xor
out
push
cmp
test
sbbb
je
addr16
mov
ja
mov
jge
test
fists
pop
cmpsb
cmp
out
imul
and
rorb
icebp
out
lret
arpl
mov
testb
jg
cmp
sti
xchg
loopne
or
pop
sub
pminsw
test
xlat
test
notb
mov
push
enterw
mov
fcmovnb
push
mov
or
movsl
push
lods
or
insb
mov
mov
popf
adc
movsb
outsl
sahf
inc
adc
sahf
test
inc
xchg
fcmovb
in
pop
add
pop
jae
lcall
cmp
jl
jmp
ret
sbb
inc
into
pop
and
sbb
loop
popa
mov
repz
dec
shl
lods
mov
xchg
loopne
lret
cs
int3
arpl
lods
aas
push
loop
sub
lods
mov
cmpsl
lods
cmp
and
aad
icebp
push
xchg
lock
rol
data16
inc
scas
adc
sbb
sub
fs
sbb
ljmp
add
and
andl
lret
in
stos
test
lret
loop
cld
cmp
mov
push
dec
fisubrl
int
rolb
out
adc
mov
mov
cmpsb
roll
push
sbb
push
cmpsl
mov
inc
je
cmp
or
sbbl
or
inc
mov
push
push
mov
les
aam
push
mov
imul
push
xor
mov
adc
xchg
xchg
cmpsl
and
xor
mov
mov
call
into
inc
inc
sub
cmp
cld
dec
push
test
sbb
shl
fildll
or
add
xchg
call
or
jle
sbbl
movsl
push
inc
mov
fists
mov
addl
das
inc
add
sub
inc
int3
jl
rcll
ror
cmp
into
xor
scas
cltd
xor
rorb
pop
and
add
sub
adcb
jle
cmp
cli
dec
in
shl
mov
sub
inc
test
inc
ret
jbe
icebp
sti
repnz
jg
jb
xchg
xchg
sub
gs
pop
cs
mov
sub
adc
out
je
jno
in
add
mov
mov
adc
sahf
or
sub
sbb
cmp
and
add
ljmp
xchg
neg
int
mov
jo
pop
clc
mov
iret
mov
push
adc
push
fisubrs
movsl
in
or
mov
pushf
jmp
dec
mov
mov
inc
mov
mov
mov
cmp
jmp
pusha
fs
lds
sbbl
jl
not
sahf
push
pop
scas
icebp
pop
cmp
mov
jl
jo
mov
out
and
xchg
mov
push
add
stc
popf
stos
adcl
fbstp
in
xor
and
imul
repnz
int
xchg
leave
and
or
cltd
inc
aas
cli
imul
push
mov
sbb
inc
jp
sub
or
mov
ja
aaa
or
pop
aaa
lcall
jbe
lock
std
jnp
and
sbb
jbe,pn
jns
xor
jg
stc
pushl
xchg
jp
fstps
jg
jae
xor
jge
mov
mov
cwtl
inc
xor
fstps
stos
in
add
inc
add
xchg
dec
stos
sbb
je
pop
inc
mov
inc
add
popa
cmpsl
xor
cmc
inc
push
int
fldenv
icebp
ss
ret
lahf
xor
cmpsl
sub
dec
cwtl
inc
popa
imul
or
and
loope
dec
es
lea
ret
sbb
es
lahf
movsl
or
or
inc
add
xchg
and
movsb
mov
xorb
cltd
dec
add
jmp
and
ret
fldcw
fwait
jle
lret
es
loop
shlb
in
lods
pushf
sbb
pusha
outsl
xor
icebp
aas
mov
mov
insb
fists
je
mov
andl
push
pop
sti
mov
inc
sbb
mov
clc
iret
outsl
ja
inc
clc
bound
push
jns
pusha
pop
xlat
jbe
jne
ret
xchg
fcmovne
dec
sti
mov
pop
pusha
ja
rorb
out
jge
add
js
xadd
fdivrp
sub
add
test
jl
xor
addl
es
imul
movsb
mov
sub
sbb
movsl
jmp
and
in
insb
pop
stc
std
aam
lcall
negl
add
inc
por
pop
sub
xchg
out
push
pop
rcrb
dec
adc
jno
fwait
repnz
jbe
sbb
pop
jge
push
push
sbb
das
xchg
jg
loope
dec
sbb
je
lret
icebp
loop
dec
imull
adc
sub
cli
cli
lds
in
lcall
adc
insb
jnp
lret
adc
js
lea
cmp
xchg
pushf
add
lds
xchg
cmp
hlt
in
sbb
jb
jmp
das
repnz
xchg
xchg
out
or
movsb
mov
pop
sbb
pop
xlat
js
mov
jmp
ds
adc
jge
cmp
stos
lret
pop
jl
mov
lret
int
mov
fistpl
fdivs
jecxz
adc
push
lahf
xchg
push
adc
lock
int
iret
sbb
sar
jno
inc
or
loopne
dec
pop
push
pop
fsts
popa
xchg
cli
mov
testl
icebp
imul
xchg
imul
sbb
mov
mov
push
lcall
repnz
test
lods
and
jle
dec
pop
push
arpl
cs
scas
call
ss
pop
push
into
call
rcll
out
mov
loope
pushf
popf
mov
and
cmp
mov
lds
add
sub
pop
and
dec
lock
push
and
mov
xor
sbb
jae
push
repz
sbb
imul
loope
out
jo
fisttpl
or
cmp
mov
adc
dec
fwait
lods
aad
outsb
sub
arpl
mov
xor
sub
stos
testb
mov
inc
fisubrl
popf
sub
mov
pop
push
mov
mov
int
xor
and
fwait
mov
mov
xchg
push
xor
xor
mov
xchg
mov
and
lds
push
adc
mulb
pushf
lds
mov
fadd
push
inc
xchg
fsubl
lahf
push
add
cmc
mov
and
test
xchg
xor
sbb
sbb
push
jmp
push
scas
sub
or
add
sub
scas
push
leave
jp
mov
sarl
sbb
xchg
cmpsl
out
repz
push
frstor
add
outsl
and
rcrb
pop
and
mov
add
mov
arpl
bound
stc
xor
mov
insb
push
mov
and
cmp
push
xchg
pushf
fcompl
cli
sarl
inc
into
test
das
mov
mov
movsb
add
dec
cmc
xchg
scas
fwait
mov
enter
pop
dec
aam
push
das
fstp
pop
hlt
sub
jle
arpl
ljmp
pop
mov
mov
mov
xchg
cmc
jo
in
cs
adc
xor
ds
mov
js
adc
cmp
mov
and
add
mov
pop
out
imul
lahf
test
test
or
pushf
xchg
add
add
ss
xchg
enter
jnp
gs
push
xchg
fisttpll
std
cmp
lds
fisubrl
gs
fcmovu
out
std
jmp
lods
lahf
movsl
or
mov
fcomps
nop
mov
inc
adc
xchg
test
pop
lds
xor
daa
pop
mov
xorb
sahf
adc
and
popa
call
mov
dec
jle
bound
imul
incb
nop
test
dec
sbb
pop
pop
sti
out
sahf
xor
stos
mov
bound
mov
and
push
insb
inc
jmp
mov
mov
jp
xor
add
mov
xchg
rorl
lret
mov
test
sub
push
cwtl
lds
adc
mov
and
cld
sti
or
mov
sbb
push
mov
lcall
lahf
rorl
aad
mov
shrl
pop
pop
add
leavew
xor
sbb
fiadds
lods
imul
push
lcall
xchg
call
out
push
pop
lcall
push
nop
les
mov
and
push
pop
add
sar
jae
jno
das
push
rcrb
fs
lahf
inc
mov
mov
mov
or
and
push
out
jp
cld
or
jp
mov
jmp
mov
xor
jo
ret
fs
push
jb
add
dec
aaa
mov
in
iret
inc
fcoml
ljmp
fwait
outsb
sbb
cmp
inc
rcrl
js
pusha
fsubs
push
test
inc
roll
mov
ljmp
mov
jg
jb
mov
mov
sbb
mov
push
mov
movl
mov
mov
pop
jae
fcmovb
ret
dec
subb
repnz
lods
xchg
xlat
sub
xchg
mov
lods
mov
xor
imul
bound
test
xchg
adc
daa
sub
int3
mov
arpl
pop
pop
mov
pop
jae
push
sbb
sbb
push
or
mov
popf
sub
das
aam
mov
lret
xchg
and
negb
rcr
fildll
lret
cltd
call
mov
push
int3
cmp
fisubs
mov
or
fcmovnu
lahf
dec
rcrl
push
ljmp
loope
sar
add
rorb
popa
mov
ret
pop
fidivl
adc
cmpsl
jp
mov
xsavec
in
into
out
leave
ret
push
and
out
pop
pusha
jnp
insb
adc
mov
bound
pop
mov
add
mov
in
lock
pop
loope
lods
push
fcompl
ja
imul
bound
jp
sub
in
loop
pop
mov
add
out
adc
mov
sub
imul
sbb
cmpsl
pushl
into
mov
rcll
shr
push
arpl
mov
gs
lahf
cmp
sbb
cmovae
mov
fs
dec
scas
hlt
push
movsl
daa
cwtl
inc
mov
lods
xor
adc
jmp
xor
add
lret
inc
popa
stos
mulb
cmp
or
out
dec
arpl
nop
in
inc
ds
mov
add
and
inc
pop
shlb
jno
test
push
mov
ret
rcrl
xchg
push
and
clc
sbb
lcall
cltd
add
xchg
add
jmp
cld
outsl
nopl
mov
cwtl
nop
cltd
divl
cmc
add
or
inc
push
xchg
mov
pop
sbb
imul
movsl
mov
aad
and
stos
add
in
push
int3
dec
xor
in
jne
lds
mov
movsl
mov
push
stos
loope
cmpsb
sub
sub
xchg
into
sbb
adc
test
cmp
adc
je
inc
cmp
mov
mov
adc
sub
jo
dec
jbe
pop
push
stos
mov
jmp
outsb
popa
outsb
dec
fdivrs
rcll
imul
out
pop
push
inc
push
stos
outsl
pop
jl
adc
out
arpl
in
push
inc
mov
xchg
inc
jo
nop
mov
mov
es
movsl
mov
movsb
mov
xchg
outsb
scas
mov
aad
pusha
ja
fsubr
jae
cmc
cld
xor
jge
mov
push
mov
adc
int3
push
sbb
test
dec
xchg
dec
sahf
shll
jo
loopne
pop
adc
jl
mov
mov
in
sti
loopne
mov
jne
inc
int
lock
aas
outsb
xchg
or
sub
je
pop
xor
sub
imul
aaa
movsb
nop
lea
ds
inc
push
hlt
mov
mov
sbb
int
mov
pusha
and
xchg
add
pop
in
jmp
lea
mov
bound
imul
shr
dec
inc
mov
mov
sbbb
and
fimull
shr
sti
dec
gs
sti
jl
ds
inc
push
push
sahf
mov
in
xchg
stos
sbb
dec
push
int3
xchg
cmp
adc
es
insl
mov
adc
push
lea
nop
pop
test
cli
mov
out
cs
xchg
std
int
adc
scas
dec
cltd
ss
rcll
lock
mov
arpl
popa
xor
int3
and
jbe
inc
pop
mov
cmp
shl
and
outsb
xchg
cmp
xor
xchg
das
test
pop
sbb
test
jp
pop
mov
or
sub
test
push
mov
shll
and
mov
inc
daa
inc
sbb
or
fisubrl
test
mov
xchg
pop
outsb
ss
into
enter
xchg
lds
loopne
mov
rorl
imul
test
ja
pusha
adc
aad
mov
mov
dec
push
mov
lds
ds
lret
movsl
les
fnstsw
fdivl
repz
cwtl
or
int3
das
xchg
cmp
movsb
in
jge
scas
je
adc
out
mov
movl
xchg
mov
stc
push
aaa
pop
repnz
mov
pop
jg
rolb
call
cmp
leave
int3
lock
cs
in
das
fcmovnbe
test
fistps
sub
cltd
jnp
in
scas
push
aaa
outsl
test
xor
data16
mov
lea
fistl
fs
int3
outsb
jecxz
stc
stos
test
adc
test
push
xchg
cmp
and
jo
mov
fsubr
cmp
in
push
insb
dec
sub
and
xor
jnp
aam
adc
stos
or
push
mov
xor
mov
sbb
imul
xchg
ret
shll
icebp
or
pop
lock
movsl
lahf
lret
xlat
je
scas
mov
mov
xor
ljmp
sbbb
push
or
inc
push
cltd
cs
cmp
adc
mov
push
add
pop
lret
gs
ficoml
inc
push
inc
inc
stos
jbe
jb
and
addr16
faddl
pop
dec
jnp
repz
test
xor
inc
out
jmp
cltd
jecxz,pt
and
imull
jb
push
add
into
mov
mov
sub
dec
call
rorl
jnp
cmc
or
fs
inc
stos
jge
jg
push
jl
xchg
lods
hlt
pushf
xor
pop
inc
jmp
mov
jecxz
or
cmpsl
xchg
lods
xchg
daa
or
js
fwait
push
out
fmuls
xchg
js
xor
cwtl
rcll
inc
mov
mov
sbb
mov
repz
xchg
mov
sub
leave
jge
mov
fistpl
ret
mov
scas
insl
xchg
aas
test
inc
ds
pop
sar
jb
aaa
sti
int3
jno
enter
or
push
xchg
inc
cmovbe
into
data16
dec
ds
loope
push
je
std
arpl
cli
testb
fstpt
push
or
imul
divl
int
inc
loop
lret
xchg
pop
pop
fbld
sub
or
cmpsl
and
mov
dec
jecxz
fnstcw
add
push
clc
and
or
and
jnp
aaa
xlat
pop
pop
bsr
mov
test
or
iret
les
xchg
test
call
out
loope
movsb
int3
mov
inc
pop
or
loopne
add
ficompl
fdivp
js
lahf
fwait
xor
adc
int
jb
mov
pop
prefetch
cmp
jae
fsubrp
loopne
sub
mov
mov
dec
xor
test
je
pop
or
les
ret
ss
cmp
pop
sbb
dec
lea
icebp
and
pop
xchg
notl
jle
insl
pop
lahf
mov
cli
ja
sarl
int3
addr16
dec
cmp
jo
inc
orl
jp
add
cmp
pop
rcrb
popa
cmp
jb
push
xchg
sti
sub
dec
jge
call
testb
pop
stos
movsl
push
inc
mov
sbbb
dec
push
sub
inc
lods
jo
jle
mov
and
and
mov
dec
sub
in
clc
inc
icebp
mov
rcrb
xor
xchg
cmp
fsubs
pushf
jbe
dec
inc
scas
in
aas
push
test
mov
adc
adc
push
dec
and
xor
push
fdivl
pop
arpl
or
fbstp
cli
fs
push
sub
mov
mov
fsubs
rolb
