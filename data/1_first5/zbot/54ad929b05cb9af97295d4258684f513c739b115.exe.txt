sbb
add
inc
push
loopne
jne
into
insl
shll
stos
jno
sub
jae
cwtl
sub
push
push
scas
mov
or
mov
xor
mov
xchg
divl
or
push
orl
dec
hlt
shl
xchg
jmp
pop
jecxz,pt
mov
jge
dec
push
inc
test
inc
fdivrp
cltd
sbb
scas
jg
std
adc
mov
sbb
es
call
dec
cmpb
push
push
call
inc
dec
iret
mov
idivl
mov
mov
jnp
arpl
mov
mov
mov
jmp
movsl
ljmp
stos
or
mov
xchg
dec
data16
pop
stos
pop
lea
inc
fcmove
daa
mov
and
mov
mov
pop
xor
lret
imul
fnstenv
or
jo
fimuls
inc
and
pop
bound
lret
pop
xor
pop
les
push
xor
addr16
ja
stos
lret
jne
loope
call
test
jle
sti
pushf
cmp
iret
push
lea
dec
inc
les
sub
mov
imul
insb
jmp
push
sub
xor
testb
jb
xchg
or
loope
ds
xlat
stos
cmp
fisttpll
xchg
arpl
stos
xchg
adc
cmp
pop
sbb
sbb
pop
imul
mov
jno
and
cmp
push
cli
ljmp
les
jecxz
ret
mov
and
ja
add
shrl
je
jbe
mov
aam
lods
xchg
mov
pop
pop
sub
cmp
fucom
adc
jne
shll
sti
dec
ds
popf
lcall
into
cmp
sbb
xchg
push
repnz
dec
dec
imul
adc
movsl
stc
mov
loopne
pop
scas
fidivl
and
cli
cmp
mov
sahf
mov
mov
dec
push
jmp
xchg
adc
sbb
icebp
dec
outsb
insb
les
cmpsl
mov
inc
add
pop
pop
test
test
fcomps
icebp
mov
mov
movsl
test
xchg
lcall
fistps
jle
xor
scas
imul
rorb
outsl
cmpsl
loope
sbb
push
mov
lock
iret
push
adc
pop
in
mov
clc
and
xor
rcrb
cmp
sub
jnp
cwtl
xchg
je
inc
mov
mov
call
pop
loope
outsb
sub
and
hlt
testb
pop
xchg
push
inc
ds
or
sahf
or
dec
fldenv
popa
push
jmp
movsl
mov
call
rclb
jns
notl
loope
fsubrs
movsl
nop
rcrl
cmp
or
mov
arpl
pushl
les
test
scas
jl
jns
cmp
out
xchg
xchg
call
adc
jecxz
dec
dec
push
aad
jl
neg
xor
stos
mov
orb
dec
mov
in
jne
xor
jo
jne
mov
inc
push
or
sahf
xchg
add
adc
cmp
nop
push
scas
dec
lahf
push
insb
cmp
dec
nop
xchg
add
and
cmp
inc
fcomip
sbb
push
outsl
dec
mov
push
sti
notl
nop
sub
comiss
mov
mov
xor
mov
pop
add
mov
dec
add
ja
adc
pop
test
and
incl
add
daa
push
or
icebp
outsl
and
mov
in
sbb
mov
adc
jo
ja
adc
mov
shll
dec
fstl
rcl
push
jmp
adcl
xchg
iret
hlt
inc
dec
xor
mov
negb
stc
lcall
cmp
insb
mull
xorl
rolb
mov
cli
xor
or
jg
loopne
mov
and
xchg
mov
push
insb
add
sbb
int
dec
daa
jge
jmp
mov
cwtl
sub
lret
cmp
adc
add
push
pop
mov
pop
js
pop
loopne
jg
mov
fcomps
lock
test
mov
push
jns
push
sub
adc
jne
sub
call
stc
int
push
out
cltd
cltd
subb
and
dec
pop
xchg
cmpsl
cli
sub
xlat
cmpsb
adc
mov
xor
push
fimull
mov
repnz
in
mov
xor
lcall
cmp
mov
mov
mov
add
outsl
push
jmp
stc
push
xor
push
or
push
insl
mov
mull
xchg
mov
pushf
sub
test
mov
inc
fldcw
or
aas
inc
notb
xor
popa
sub
cmp
sub
adc
mov
loop
ret
pop
sub
stos
test
dec
xor
in
cmp
out
adc
sbb
scas
fcomps
inc
outsb
out
cltd
pop
ficomps
sahf
sbb
leave
dec
outsb
push
sub
faddp
inc
lods
movsl
nop
neg
jecxz
dec
jb
add
stos
in
jle
mov
add
stc
xchg
mov
iret
xchg
mov
push
adc
jno
clc
push
cld
outsl
out
xchg
mov
mov
add
in
mov
add
lret
test
xor
cmpsb
mov
xlat
int3
loop
lcall
sti
aas
fs
cld
xchg
mov
or
popf
adc
pop
aaa
add
addr16
mov
add
fwait
addr16
cmp
sub
arpl
jno,pn
push
and
cmpsb
lea
pusha
xchg
loope
leave
inc
arpl
mov
leave
fwait
and
lea
hlt
call
lea
sbb
mov
jne
push
enter
push
xchg
push
je
dec
sahf
mov
out
cmpsl
fbstp
ljmp
pusha
scas
out
clc
add
push
sahf
push
addr16
popf
cmp
xor
sub
sub
das
xchg
jns
sahf
xchg
add
arpl
jo
test
rcr
jmp
and
fsubrl
aad
loope
stc
xchg
jb
mov
mov
repnz
pop
cltd
jecxz
dec
pushl
dec
insl
pop
sub
mov
pop
ss
fistl
cmp
test
in
insl
aam
in
pusha
or
pushf
jo
js
data16
testl
push
xor
jge
mov
nop
cmp
mov
jo
pop
insb
jle
jo
cld
cli
loop
cmp
sub
lods
arpl
jno
adc
dec
push
pop
sub
cwtl
lods
mov
iret
cwtl
jno
inc
jae
mov
aam
mov
xor
cmp
mov
repz
or
xor
lcall
add
inc
out
icebp
sub
movsl
xchg
xchg
or
out
in
push
pop
in
adc
jl
inc
shr
xor
lds
mov
xor
mov
pop
mov
int
adc
aam
call
dec
fcomip
jae
mov
push
notl
or
fidivl
in
insb
adcl
mov
xchg
inc
das
stos
ss
mov
xor
jo
dec
jnp
add
mov
jle
aaa
push
pop
dec
jmp
or
mov
aad
push
pop
lods
test
and
out
cmp
xor
cmp
cli
movsl
dec
test
stc
mov
jae
scas
addl
hlt
call
push
adc
aam
mov
or
ds
adc
dec
xchg
or
xor
xor
fwait
add
sub
cld
enter
ljmp
push
xchg
sub
and
cmp
cmp
inc
mov
or
out
hlt
add
mov
rorl
fbstp
adc
sbb
push
les
ljmp
fimull
cmp
ss
adc
cmp
mov
into
jp
popa
or
paddw
je
insb
lcall
repz
scas
sbb
xchg
cmp
aad
je
fidivl
loop
fisubrs
mov
in
jns
or
pop
xchg
adc
in
pop
es
adc
jnp
movsl
or
mov
es
out
fnstcw
out
push
cli
mov
sub
sub
jge
insb
pusha
xor
pop
das
or
imul
in
sub
sub
mov
add
dec
roll
mov
stos
les
and
in
mov
ljmp
movsb
mov
out
movsb
cmp
or
add
mov
xchg
add
lds
add
inc
dec
sbb
jo
jb
adc
mov
cmp
cltd
insb
sbb
notl
addr16
es
insl
dec
cmpsb
gs
cmp
mov
int
popl
arpl
cld
aam
ds
push
push
mov
xchg
mov
push
adc
arpl
inc
std
sbb
movsb
and
in
enter
pop
jmp
iret
sbb
out
js
imul
xchg
mov
cli
xchg
and
mov
adc
clc
cmpsb
nop
cmpsb
loope
mov
xchg
xor
js
mov
loopne
out
scas
jb
lock
or
ss
test
les
pushf
das
mov
jmp
lahf
scas
pop
adc
pop
test
inc
mov
inc
xor
incb
cmc
xor
jecxz
jae
sub
mov
fs
mov
mov
dec
outsb
nop
mov
adc
xchg
leave
popf
push
xor
xchg
leave
rcr
sbb
sub
cmc
bound
shll
cmp
into
cmc
push
shrl
mov
filds
movsb
in
pop
fdivr
jno
push
jmp
enter
jbe
or
scas
push
xchg
and
xor
iret
push
jg
mov
or
stos
mov
add
hlt
jg
pop
push
and
ret
or
aad
dec
movsb
fists
lods
lods
push
jo,pn
stos
fs
jae
jnp
xorb
incl
ss
mov
into
mov
dec
sub
xor
inc
push
pusha
dec
fistps
insl
xor
js
xor
scas
js
cmp
push
or
idivb
push
insb
enter
mov
push
in
mov
test
jno
jb
mov
test
gs
pop
out
or
sbb
test
push
mov
ds
xchg
mov
dec
inc
data16
flds
popa
or
mov
pop
push
pop
icebp
imul
push
mov
movsb
bound
xchg
adc
sub
cld
xor
loope
jecxz
mov
push
fisttpl
or
xchg
lret
jmp
and
jmp
xchg
add
cmp
out
popf
orl
inc
add
xchg
and
xor
and
std
setp
inc
jmp
fs
in
and
mov
push
sbb
jno
ret
mov
rcll
xor
jnp
out
jo
mov
subb
and
or
je
cld
push
xchg
test
cmp
popf
xlat
hlt
add
in
test
cmp
cld
cld
sub
mov
incb
pop
and
inc
push
cmp
jbe
int3
lds
and
repnz
jge
pop
sbb
scas
sarl
cmpsb
xlat
shrl
movsb
test
insb
and
push
dec
imul
lret
in
add
aas
xor
mov
cwtl
push
mov
or
and
movsl
aas
insb
and
mov
sub
adc
pop
int3
inc
xchg
dec
xor
dec
mov
insb
aaa
aaa
add
push
mov
mov
mov
shld
cmp
and
dec
inc
or
lds
push
add
xor
xchg
cmc
dec
ret
mov
ljmp
sbb
adc
jge
stc
xchg
pop
or
jle
insl
divb
inc
xchg
stos
sbb
dec
sub
pop
jle
movsl
orb
push
call
cmpsl
in
mov
jbe
sbb
push
in
or
enter
in
sbb
xchg
adc
jno
sub
test
or
leave
lret
frstor
loop
inc
or
scas
and
cmp
cli
arpl
mov
lods
sarb
xchg
pop
jbe
gs
out
fildll
int
mov
push
and
fnstenv
fsubrp
sbb
adc
adc
dec
data16
pop
mov
cmpsl
mov
mov
push
js
aaa
jns
in
addr16
adc
cmp
lret
fdivrp
mov
imul
add
and
cmp
mov
loopne
push
incb
pop
mov
inc
add
xchg
pop
sbb
ss
xchg
lahf
mov
push
sbb
and
cmp
sbb
xchg
out
xchg
out
repz
pushf
mov
mov
mov
repz
xor
or
mov
addr16
rcl
cmp
jbe
int
jmp
push
mov
ljmp
leave
jecxz
jg
dec
xchg
cmp
sub
cmpsb
addr16
jo
mov
andl
fildl
xchg
std
push
or
inc
outsl
xchg
xor
dec
loopne
dec
lods
mov
inc
in
pop
mov
add
xchg
adc
mov
dec
lods
enter
mov
sbb
push
orb
jge
sbb
ret
push
adc
dec
sarb
lret
jge
mov
dec
mov
and
cmc
test
outsb
stc
andps
lcall
popa
pop
stos
cmp
lods
mov
pop
sar
lds
mov
sbb
mov
fimull
xchg
inc
lea
aas
aas
adc
jns
cmp
scas
inc
ljmp
stos
and
push
inc
das
pop
xchg
addr16
aaa
repnz
adc
rorl
mov
mov
mov
jno
add
pop
movsl
jp
es
test
jne
mov
inc
sbb
arpl
aas
fimuls
push
cld
and
dec
pop
cmc
in
xchg
sbbb
push
add
fcmovu
test
cwtl
imul
xchg
fdivrs
mov
sub
push
int3
in
pop
add
xchg
or
fdiv
cmp
mov
movsb
inc
xchg
test
mov
hlt
inc
mov
xchg
xor
dec
adc
xchg
pusha
das
scas
add
imul
pop
mov
cld
jo
mov
xor
sbb
sbb
loopne
jl
mov
dec
in
mov
push
xchg
int
xchg
subb
mov
jecxz
mov
fldenv
mov
leave
gs
aam
data16
xchg
dec
sarb
cmp
adc
jne
call
movb
xor
shrb
cmp
and
lods
lcall
iret
aaa
or
and
cwtl
mov
fcmovu
insb
popa
les
faddl
adcl
adcl
sbb
in
inc
jg
xor
dec
dec
pusha
or
sbb
movsl
push
icebp
aad
jne
js
outsl
aaa
je
mov
mov
shrl
xchg
dec
sub
jae
in
shll
js
test
jne
mov
dec
xor
or
shrl
mov
mov
rcrl
pop
lret
fstpt
dec
cmpsb
clc
out
mov
push
stos
push
cld
jns
shll
sbb
pop
sub
mov
movsl
pop
xchg
sbb
mov
and
iret
testl
hlt
or
cmpsl
xor
mov
and
insb
jp
ds
cmpb
xchg
aad
lcall
cmpb
inc
jbe
hlt
in
outsb
dec
add
ret
sub
xor
insl
jno
mov
push
sbb
inc
int3
inc
je
xor
int3
xchg
fldenv
mov
data16
out
idivl
jl,pt
adc
inc
fisubrl
mov
lds
pop
jmp
mov
lds
push
cmp
pop
jnp
fstps
mov
lret
inc
cwtl
addr16
add
lret
aas
sar
add
mov
aam
add
jno
out
shlb
or
pop
pop
sbb
ss
stc
js
sbb
mov
mov
jns
jle
icebp
sahf
stos
pop
push
add
jmp
cmp
imul
lea
mov
test
shll
sub
adc
pop
cmpsl
fxch
adc
inc
loopne
add
sbb
xchg
cld
jne
sub
leave
or
xor
sahf
int
cmp
cmp
adc
lcall
dec
pusha
fdiv
cwtl
adc
xchg
add
dec
rcrl
mov
mov
adc
fwait
dec
mov
dec
jo
repnz
jg
decl
and
repnz
mov
fistl
lret
jl
inc
push
push
sbb
das
fistpl
pop
pop
pop
sub
sub
sub
js
fists
ret
in
fsubr
insb
ficoml
jo
aaa
jo
fadds
jecxz
cmp
orb
pop
ret
sub
pop
pop
movsb
negb
in
inc
mov
js
sub
iret
mov
je
lods
hlt
fcomp
aas
nop
jne
add
or
fisubrl
xor
out
das
adc
xor
pop
mov
sarb
dec
bound
adc
cli
xchg
or
inc
in
mov
lret
jmp
mov
imul
es
adc
cmp
dec
ljmp
subb
out
cmp
stos
ret
arpl
inc
adc
out
repnz
addb
aas
push
cmp
mov
pop
sbb
dec
into
jge
in
outsl
mov
cwtl
fxch
cs
inc
cltd
in
loop
movsb
ja
int3
sub
inc
inc
cld
mov
flds
imul
stos
mov
lods
or
ror
mov
xchg
cmp
pop
sbb
adc
in
loop
popa
xlat
jl
sbb
lock
jp
shlb
cmpl
stos
mov
imul
mov
pop
je
pop
sbb
pusha
pusha
or
mov
daa
adc
mov
ja
lods
mov
dec
mov
mov
push
xor
mov
xchg
imul
xor
or
jae
jmp
hlt
cmp
cmp
ds
into
fnstenv
sbb
rcrl
leave
insb
inc
cli
insb
sbb
or
mov
movl
pop
dec
push
sub
aaa
mov
or
fdivl
jp
inc
bound
cmp
std
xor
iret
push
aas
mov
pop
or
add
add
fmuls
fwait
cmpsb
test
jmp
inc
and
sbb
cld
aad
cmp
or
mov
mov
xor
shrl
inc
jbe
xor
addl
cmp
pop
sbb
stc
mov
jbe
aad
aad
xor
jp
sub
shlb
mov
dec
mov
push
loopne
inc
out
adc
xchg
mov
and
xchg
or
push
fadds
gs
jae
lock
fwait
adc
and
cmp
mov
cmp
pop
mull
push
pop
outsb
mov
popa
fwait
jge
pop
fwait
js
mov
or
in
mov
cmp
mov
sbb
or
sub
cmpsl
imul
xchg
cltd
loop
ficoms
fsubl
les
xchg
fldenv
es
dec
div
pusha
jae
push
adc
adc
es
pop
or
ja
inc
pusha
push
and
dec
andl
xchg
sbb
and
out
xchg
movsl
sbb
add
mov
mov
jbe
xor
rorl
adc
jbe
or
inc
into
rcll
lock
shlb
cmp
mov
push
or
shl
or
movsb
mov
call
stos
xchg
fs
mov
fldl
inc
ja
popf
sbb
daa
arpl
jae
push
fdivrs
cwtl
push
mov
xor
and
testl
into
pop
sbb
cmp
push
dec
adc
bound
inc
jno
add
jmp
in
movsl
pushf
call
xchg
jmp
mov
add
sti
push
mov
mov
or
or
xchg
dec
hlt
shl
xor
mov
push
addl
xor
int
out
mov
inc
into
jb
ret
aam
into
or
inc
scas
out
cmp
add
popf
push
popl
in
adc
fmuls
jbe
repnz
movsl
ret
test
sti
pop
add
in
in
adc
mov
addb
xor
xorl
loop
add
inc
cmpsb
repnz
rorl
adc
into
lret
imulb
sarb
dec
or
fwait
cs
push
sub
in
jmp
mov
sbb
jecxz
jmp
test
mov
ljmp
or
sub
dec
imul
ja
cmpsb
addl
mov
lods
fadds
sahf
push
fcomip
decb
imul
insl
clc
pop
push
or
mov
push
and
mov
lea
data16
dec
in
add
inc
pusha
pop
push
jnp,pn
fnsave
lahf
sbb
cmp
stc
std
out
test
loope
je
jg,pn
fisttpll
clc
sbb
fbstp
mov
xchg
shl
enter
insb
mov
or
movsb
xchg
sbbl
enter
xor
xor
ljmp
jp
mov
iret
cmpsb
lock
fstl
es
inc
inc
repz
shl
aas
add
ficoml
mov
int
int
jp
pop
leave
ret
test
cmp
mov
adc
mov
in
push
mov
mov
jo
push
fisttps
inc
mov
dec
dec
push
rcr
mov
jns
xor
inc
mov
test
and
push
fcompl
push
sub
lods
ret
and
jmp
loope
adc
pop
cmpsb
data16
push
sub
ret
jo
popf
pusha
xchg
mov
push
jge
push
push
icebp
pop
lods
das
push
mov
ret
push
mov
push
pop
out
pop
popa
and
test
aas
sbb
imull
dec
mov
mov
jmp
rol
scas
push
fsub
inc
aaa
leave
pop
or
mov
call
stc
js
in
xchg
test
xorb
adc
int3
call
push
cltd
xchg
lock
mov
rcrb
pushf
scas
lods
add
mov
jnp
jo
add
mov
cmp
insb
sbb
mov
jo
sti
daa
mov
dec
shlb
sbb
pop
xchg
pop
iret
mov
mov
outsl
cmp
and
mov
cmp
mov
or
jg
jo
or
mov
mov
adc
xor
sub
imul
stos
iret
in
jge
inc
xor
jmp
pop
imul
mov
mov
pop
dec
les
nop
in
repz
repnz
add
call
aad
lods
lock
in
xor
pop
push
mov
aad
sbb
fidivl
dec
pop
cmp
fwait
addb
je
les
dec
packsswb
out
sub
call
pop
jne
test
push
push
hlt
xchg
outsl
pop
and
mov
aam
jl
add
andl
xorb
adc
xor
jae
jle
out
icebp
push
lret
pop
aad
push
inc
int3
mov
lea
mov
sub
rclb
sti
sbb
popa
mov
cmc
dec
cld
inc
mov
imul
and
ret
jmp
push
stos
cmp
adc
add
imul
pop
clc
sub
iret
adc
jl,pt
pop
pop
jl
push
mov
xchg
inc
or
repz
xorl
mov
int3
dec
aaa
mov
dec
mov
jl
imul
cmp
leave
pop
pop
adc
fucom
jle
lcall
cmp
mov
jo
push
mov
test
jns
and
cmpb
ss
and
push
cmp
lock
or
pop
out
out
jecxz
imull
lds
and
adc
fstl
xor
inc
sbb
xor
cmp
jp
mov
push
stc
shl
pop
cltd
fstpl
cmp
rcrl
pop
test
sbb
sub
test
mov
sar
popa
in
and
jo
fdivrs
clc
jg
int3
cmp
gs
lcall
jle
fwait
cmp
jmp
cs
add
mov
dec
repz
mov
scas
or
ljmp
lcallw
inc
mov
jle
mov
xlat
cmp
xchg
loop
pop
xlat
mov
jmp
inc
mov
add
aas
stos
pop
mov
adc
cltd
jecxz
je
cmp
scas
dec
jno
push
pop
scas
arpl
dec
lods
or
sbb
jbe
jmp
push
sub
add
sbb
inc
cmpsb
mov
mov
cmpsb
lods
xchg
push
or
cmpsl
push
xor
ss
lahf
or
xchg
pop
bnd
sub
push
out
cld
into
xor
dec
sub
movsl
clc
es
mov
sbb
test
aas
adc
or
adc
pop
sbb
cmp
loope
mov
xor
rorl
cmc
xor
adc
test
xor
outsb
xor
sub
enter
mov
insb
mov
dec
pop
push
and
call
rol
insl
and
pop
mov
das
sahf
sub
jle
cmc
iret
lret
sbb
push
mov
jmp
out
movsb
pop
lcall
test
sub
movsb
jecxz
mov
and
jge
scas
inc
mov
xor
inc
mov
mov
lods
mov
push
addr16
add
and
mov
adcb
jg
or
xchg
dec
int3
pop
es
test
ficomps
jmp
or
mov
push
popf
pop
inc
xchg
inc
rcrb
stc
xor
push
les
test
push
or
mov
call
dec
and
icebp
xor
int
or
pop
imul
push
push
xor
call
inc
pushf
stos
cli
jge
pop
es
movlps
das
scas
ret
mov
push
mov
out
sar
inc
pcmpeqb
cmc
insl
add
aas
mov
cmp
scas
fsubp
pop
inc
int
and
xchg
push
cmp
add
aaa
xor
pop
mov
fstl
mov
stc
rcr
push
dec
cmpsl
js
mov
hlt
insl
cmp
scas
cmp
pop
push
js
dec
popa
ud0
test
mov
xchg
push
sub
xchg
mov
lcall
fwait
mov
repnz
cli
loop
pop
mov
xor
mov
xor
cmpsl
mov
xchg
sub
cmpsl
and
mov
xchg
pusha
imul
dec
aas
push
das
pop
jns
aad
or
lock
imul
jno
mov
mov
add
stos
dec
lret
ds
or
mov
frstor
mov
pop
xchg
xchg
mov
ljmp
aad
push
cs
imul
xchg
pop
cmp
mov
push
adc
das
jb
and
test
push
push
pop
lea
lea
movsb
out
sbb
inc
idiv
sub
add
ret
push
out
add
xchg
loope
ljmp
rol
mov
aas
push
push
inc
fnsave
in
mov
adc
in
ja
ret
js
stos
decl
popa
or
je
xchg
sub
inc
out
aaa
jne
add
inc
xor
imul
testl
das
jge
mov
test
ja
mov
or
leave
daa
jle
or
xchg
mov
jp
or
add
into
mov
jne
iret
fidivrs
cmp
scas
sbb
fidivs
movsb
add
lret
push
iret
std
rcll
enter
push
sub
jae
rcrl
jle
inc
imul
dec
imul
sahf
and
scas
scas
jle
dec
jg
or
out
mov
mov
addl
cmc
sbb
test
push
mov
aaa
int3
inc
cmp
imul
pop
stos
push
dec
xor
pop
fcomp
jl
push
fcom
std
mov
push
push
cmp
pop
and
xchg
sub
push
hlt
push
or
into
xor
push
out
jle
fwait
mov
push
mov
xchg
pop
jmp
lods
popf
fsubrp
push
bound
jmp
mov
fimuls
xor
mov
push
shrl
aam
or
adc
cmp
repz
inc
push
icebp
sbb
adc
jmp
mov
jae
rorb
mov
jo
mov
cli
mov
out
clc
xor
imul
and
xchg
pop
movsb
inc
movsb
repz
sub
cmp
fcomp
cli
fcompp
and
aas
lea
icebp
sbb
mov
or
jmp
xchg
fidivrs
hlt
push
arpl
adc
movsb
inc
cmpsl
stos
dec
xor
imul
mov
sarl
addl
push
inc
mov
inc
add
add
lea
je
or
lds
inc
cmp
adc
pusha
jns
hlt
mov
sub
jo
mov
lahf
push
aaa
fstl
xorl
mov
add
nop
xor
push
push
xchg
out
pop
inc
adc
ret
or
pop
mov
inc
and
sbbl
and
xchg
mov
cmp
lret
mov
sub
mov
sti
jno
mov
ja
lret
mov
int3
cwtl
into
or
lcall
aaa
ja
inc
xchg
mov
movsb
jle
lcall
inc
mov
mov
sbb
sbb
push
pop
and
add
rol
aaa
test
push
sbb
aas
nop
or
add
mov
je
fiaddl
mov
cmp
in
jae
mov
ret
and
xchg
and
lods
add
jle
push
mov
cwtl
sar
call
lock
into
cmpsb
mov
push
inc
shrl
out
adc
fmulp
stc
add
sti
jg
ret
adc
stos
fmull
mov
popf
movb
ret
daa
add
add
sub
inc
div
or
repnz
pop
jecxz
inc
sahf
test
data16
jmp
and
daa
in
in
or
mov
cs
out
test
jl
jecxz
xor
arpl
mov
mov
lock
cmp
aad
js
and
testb
push
xor
rol
fnsave
lock
fsubl
sbb
push
aad
xor
aaa
enter
aad
jae
sarb
daa
add
mov
cmp
imul
in
jnp
cmp
xlat
cltd
stos
cwtl
popf
inc
rolb
xchg
push
shlb
push
repz
jecxz
aam
inc
ja
cld
rcr
or
inc
sbb
push
xchg
push
lods
sub
cltd
rorl
inc
addr16
pop
mov
fmuls
push
jns
das
data16
xor
aam
arpl
push
xchg
pop
or
sbb
incb
int3
sub
push
jae
gs
stos
push
enter
daa
or
adc
test
cmp
sbb
fiaddl
adc
out
cwtl
ja
adc
mov
ret
dec
sbb
loopne
daa
push
test
lret
and
in
arpl
arpl
repz
sub
push
fdivl
dec
jno
inc
js
lret
pop
out
and
lahf
lock
loop
mov
imul
inc
js
jmp
or
clc
outsb
stos
movsb
pop
int
sub
call
xor
fisubl
and
arpl
sbbl
jno
gs
mov
mov
xor
ds
xchg
cwtl
cmpsl
cmp
push
mov
dec
fcoms
out
test
repz
mov
push
xchg
cltd
and
repz
pusha
outsb
in
lods
adcl
mov
data16
adc
sub
jg
sbb
sbb
into
lcall
push
ljmp
adc
pop
outsl
xor
dec
and
cmp
jle
add
cmp
push
decb
jmp
cltd
pop
stos
movnti
sbb
jmp
or
add
imul
sbb
mov
test
sub
mov
call
mov
mov
add
shlb
sbb
lret
int
sti
mov
jmp
adc
stos
sti
dec
enter
inc
lods
cmpsb
pop
and
lret
aaa
cld
xchg
int3
adc
dec
popa
rclb
sbb
mov
push
push
stc
cmp
jns
pushf
out
ja
ret
push
jecxz
outsl
imul
jl
mov
fidivs
mov
sub
enter
adc
jno
scas
xchg
daa
repz
jle
lret
xor
jns
mov
xor
push
mov
loopne
mov
inc
adc
scas
imul
push
xor
sub
outsl
pop
hlt
nop
mulps
sbb
pop
imul
divb
jl
xchg
lahf
jne
mov
mov
hlt
push
loop
fldcw
stc
jb
movsl
dec
imul
mov
popf
push
into
into
pop
leave
xor
sbb
loop
mov
negb
mov
ret
and
xlat
mov
sub
movsl
andl
mov
add
cltd
sub
jg
add
cmp
push
rcl
pop
in
adc
mov
pop
cmpsl
sbb
ficompl
sub
add
cwtl
rep
fstl
xchg
call
dec
fsubl
cli
out
xor
add
sar
hlt
cmp
sbb
cli
sbb
inc
push
dec
inc
lret
xchg
nop
mov
push
shrl
pushf
lret
push
xlat
pop
sbb
pop
test
lcall
int
addr16
stos
xchg
in
call
mov
inc
aaa
addb
adc
and
mov
and
rcrb
or
jno
cmp
jl
jmp
push
mov
pop
xchg
mov
fstpl
cmp
add
cmc
sbb
das
or
or
addr16
scas
test
ss
adc
idivl
aaa
lcall
test
nop
sahf
lods
sbb
pop
gs
das
cs
dec
pop
jbe
pop
arpl
mov
mov
inc
aaa
dec
sub
push
rcll
sub
shrl
dec
leave
xchg
sbb
xor
sbb
stos
push
das
cwtl
cmp
insl
aad
mov
xchg
std
mov
dec
cmp
jp
rcll
lret
loopne
mov
mov
stc
pop
mov
pushf
push
lcall
fadds
cmp
push
mov
movsl
test
xlat
pop
fbstp
scas
inc
mov
jae
fstpt
xchg
jg
fimull
rcl
sbb
iret
mov
jbe
setnp
loopne
add
test
sbb
cmpsl
cmp
cs
dec
fildl
and
xchg
push
push
pusha
lods
sbb
cwtl
push
cbtw
dec
mov
add
adc
out
mov
adc
jb
cmpsl
push
pop
mov
mov
mov
xchg
int3
iret
push
mov
ret
fiadds
xor
jp
sub
pop
ja
fistl
dec
iret
je
jp
into
pushf
jae
mov
push
ljmp
mov
fucom
jl
pusha
das
sahf
lds
adc
add
sub
frstor
or
addr16
adc
fstp
test
mov
movsb
lods
aam
cli
add
mov
repnz
aaa
mov
sbb
xchg
ljmp
in
push
int3
cwtl
lods
ss
jo
mov
xchg
ret
add
or
pop
jp
insl
mov
out
adc
loopne
xchg
adc
jno
xchg
je
mov
inc
push
daa
jl
jae
daa
jae
cmp
jmp
loopne
adc
subl
stos
out
jg
data16
mov
pop
icebp
mov
and
aam
sub
adc
lret
inc
addr16
jp
sahf
call
xchg
xor
push
rcl
inc
cld
ds
or
jl
add
inc
in
inc
sub
mov
cmp
mov
sub
into
or
and
dec
cltd
lsl
lret
rorb
int3
adc
and
xor
sub
sbb
sti
ffreep
popf
sub
outsl
aam
mov
cwtl
pop
or
pusha
lock
ret
mov
pop
out
clc
add
popfw
and
pop
xchg
pusha
sbb
mov
fwait
add
js
or
xor
adc
loope
jns
fs
popa
aam
xlat
hlt
inc
in
data16
sbb
out
mov
lods
jle
out
cmc
or
scas
xlat
jmp
lds
mov
int3
jo
mov
aad
out
cmp
dec
mov
jmp
dec
dec
pusha
xor
hlt
cmp
push
gs
ljmp
add
jge
jmp
xchg
arpl
ss
es
stos
push
cs
dec
js
negl
mov
jmp
dec
inc
ret
mov
in
mov
cmp
lods
pop
jns
sub
dec
xchg
enter
enter
or
mov
andl
jecxz
stos
add
or
faddl
scas
inc
cltd
pop
sti
jno
aam
insb
adc
mov
push
xor
jmp
add
aam
lret
push
xor
hlt
ss
adc
jo
and
inc
imul
xchg
bound
sahf
mov
inc
repnz
jae
adc
je
ret
pop
in
in
dec
push
mov
sub
push
sub
inc
repz
ja,pn
rcl
movsb
out
mov
add
inc
inc
sbb
dec
push
ss
movsb
adc
adc
out
xor
xchg
cs
inc
lds
mov
stc
sub
push
mov
out
cmp
sub
cmp
or
fisubs
pop
sbb
sti
fs
clc
cmpsl
ss
xor
hlt
mov
jle
jge
rolb
or
adc
mov
xchg
push
mov
sub
mov
mov
xor
addr16
frstor
and
dec
fdivs
add
andb
testb
je
scas
daa
dec
pop
fbstp
xchg
imul
mov
and
pop
ds
pushf
jmp
clc
push
movsl
sti
sub
sub
scas
scas
repnz
lea
inc
mov
sbb
jmp
fcoml
sbbb
xchg
int
fcoml
inc
cmpsb
dec
dec
and
and
aad
pop
jns
adc
out
or
clc
sub
hlt
mov
and
push
movsb
aaa
mov
lahf
gs
imul
ret
push
dec
maxps
dec
int3
cmp
or
sahf
jbe
inc
push
xor
cmpsl
subl
xor
push
popf
subl
mov
mov
push
insb
shrb
outsl
or
bound
movsl
mov
adc
icebp
out
test
pop
aad
test
mov
mov
jmp
mov
lret
push
pop
test
pop
sbb
mov
add
lods
jb
dec
sub
xchg
push
scas
or
mov
sub
test
call
int3
ljmp
rorl
dec
jno
mov
xchg
shrb
inc
jb
int
adc
mov
rcrl
or
shrb
sub
cwtl
sbb
sub
pop
sbb
adc
add
out
stos
inc
mov
ja
mov
and
xchg
push
push
and
test
fldt
fadd
addb
pop
cmpsb
insb
mov
xor
popf
xchg
mov
es
test
pop
mov
jo
or
jb
shlb
addr16
std
push
adc
sbb
push
cmovp
xchg
stos
pop
push
mov
cmp
or
mov
push
call
pop
fwait
inc
jmp
mov
push
stc
mov
xor
mov
adc
les
inc
push
leave
outsb
das
or
outsb
rolb
daa
sub
add
aad
push
pop
ret
hlt
add
mov
pop
mov
inc
scas
mov
inc
rcl
dec
add
daa
aas
cmpsb
scas
pop
fldln2
mov
mov
test
sahf
push
ja
in
hlt
adc
dec
hlt
mov
cmp
popa
jne
hlt
std
mov
sub
popa
outsb
xchg
pop
adcl
xor
mov
mov
dec
mov
inc
shlb
loopne
or
xlat
mov
insl
mov
jp
mov
mov
mov
movsb
inc
cmp
loopne
nop
pushl
loope
test
maxps
jae
cli
lods
movsl
repz
and
sbb
int
jne
fxch
test
bound
push
in
fstpl
nop
cwtl
add
push
popa
sti
orb
ret
ficompl
stos
icebp
inc
xchg
into
out
es
es
icebp
mov
push
in
mov
roll
shll
sub
into
mov
and
or
fs
pop
dec
je
mov
adc
xor
adc
cltd
sbb
xchg
add
in
roll
ds
sbb
xor
in
dec
xor
addr16
fidivl
test
repz
popf
cld
cmovp
imul
jns
cmp
or
fldl
pop
add
iret
xchg
insb
into
push
lret
test
dec
mov
add
movsl
ljmp
mov
push
add
xchg
push
fs
mov
xchg
or
inc
imul
les
push
push
pop
pop
push
fstps
and
fdivl
adc
lds
sbb
dec
mov
jnp
and
mov
sub
out
aas
shl
nop
leave
xor
scas
mov
or
adc
fwait
repz
data16
insl
jmp
jbe
and
cmp
adc
xchg
mov
jle
pop
inc
xchg
jmp
test
repnz
andb
push
inc
fsubr
js
dec
sbb
je
sub
and
fs
push
popf
pop
and
in
dec
jl
and
mov
call
pop
lret
test
mov
cmc
and
das
popf
andb
leave
call
xchg
fbld
fcoms
pop
jl
out
jnp
push
sbb
pop
out
mov
jg
push
incl
in
stc
popf
mov
aas
stc
imul
sti
jno
lret
out
adc
jecxz
shr
mov
jle
test
repnz
cmp
jl
loope
cmp
push
or
adc
and
in
roll
aam
jne
popf
mov
fbld
cmc
hlt
repz
out
dec
or
fmulp
push
repz
sbb
sbb
lea
into
rcll
movsl
icebp
arpl
mov
movhps
scas
add
aas
pusha
or
or
sub
out
ss
jg
mov
xchg
mov
nop
jle
mov
inc
mov
push
insb
test
push
loop
sbb
xor
mov
clc
or
jne
push
sub
pop
add
loop
cmpsl
dec
dec
xor
inc
fcoml
mov
mov
fidivs
cmpsl
repz
pusha
and
test
jecxz
xlat
mov
mov
dec
mov
pop
and
rcrl
in
xor
xor
xchg
sub
sub
inc
in
cmpsb
sbb
mov
mov
add
jle
out
cmp
or
jecxz
mov
sbb
pop
in
fucomip
mov
mov
pusha
pop
mov
scas
pop
pusha
and
idivb
pop
jle
mov
or
mov
arpl
and
testl
fisubrl
js
sahf
adc
arpl
and
cmpsl
mov
mov
fcompl
jle
adc
mov
push
sub
push
test
ret
lds
pop
dec
mov
cs
jns
dec
lds
push
dec
cmpsb
sub
fstpl
adc
and
mov
push
mov
jo
imul
jmp
inc
ret
xor
aas
xchg
cmpl
mov
je
inc
mov
push
dec
mov
test
pushf
loopne
push
out
jg
ficompl
and
aad
ja
aaa
popf
std
bound
dec
add
cmp
fcompl
stos
cmp
int3
push
xchg
mov
out
inc
hlt
jo
add
daa
iret
cmc
add
stos
adc
in
sub
sbb
mov
jno
mov
filds
scas
push
inc
in
inc
mov
add
add
stc
mov
in
pop
cli
sbb
js
sbb
rcll
ret
push
pusha
mov
fcompl
test
repnz
jp
jge
mov
movsb
in
push
lea
js
and
push
sub
ror
aaa
nop
mov
aam
leave
push
aaa
call
cmp
jae
inc
outsb
lret
ror
dec
mov
outsl
xlat
sahf
mov
sti
pop
cld
loopne
repnz
stos
dec
push
mov
js
orb
movsb
roll
and
fbld
lahf
xor
jmp
nop
jle
daa
ljmp
mov
jno
movsl
in
push
daa
and
or
add
mov
push
jl
je
ljmp
add
das
push
sbb
cmp
stc
mov
add
in
popf
add
push
sbb
loopne
jmp
mov
pop
rcll
bound
fcoms
imul
pop
clc
jge
hlt
sub
adc
xrelease
out
add
adc
inc
out
cli
in
push
inc
xchg
push
pusha
loopne
dec
xchg
lret
lods
fsubr
mov
ret
jecxz
notl
and
shr
mov
or
gs
mov
mov
movsb
insb
mov
mov
inc
cmp
adc
jbe
sub
cltd
nopl
add
ja
movsb
mov
roll
adc
in
push
mov
or
shll
sbb
xchg
das
test
addr16
les
fs
mov
std
fcmovnbe
xchg
mov
xchg
jg
sbb
cmp
jo
movsl
es
pop
pop
lahf
jg
popa
or
xchg
xor
lret
adc
or
pop
or
pop
sbb
inc
adc
and
dec
movsb
and
sbb
fsts
lods
sbb
outsl
lea
push
arpl
pop
popa
jle
push
cs
leave
cs
and
fsubrs
scas
aam
inc
clc
sub
dec
adc
fcmove
push
or
les
mov
cmp
inc
movsb
jle
pop
cmp
loope
inc
daa
pop
inc
aad
inc
or
ss
into
popf
std
xchg
sub
inc
cmpsb
jnp
hlt
sbb
jae
cltd
and
adc
or
mov
out
jae
adc
and
adc
add
imul
and
push
popf
aad
or
std
adc
cmp
ljmp
je
push
clc
insb
adc
mov
sahf
fisttpll
or
movsb
test
ret
adc
gs
in
nop
mov
jg
pop
pusha
fsub
jo
imul
aaa
scas
adc
aaa
xor
dec
es
jbe
xchg
mov
or
push
arpl
sub
mov
loop
popa
sub
stos
orl
jge
loope
push
cltd
mov
lret
fs
push
dec
jb
inc
xchg
gs
inc
or
les
cmpsl
insb
das
stc
mov
addr16
sbb
test
xor
or
into
int3
push
jb
test
loopne
leave
jp
imul
arpl
sbb
push
ljmp
and
shrb
mov
pop
clc
data16
rcrl
loop
mov
or
addb
pop
mov
mov
push
and
pop
lods
scas
jns
divl
jo
lods
aas
lcall
pmuludq
push
adc
push
or
jbe
mov
imul
cmp
int
lahf
aaa
inc
cmp
mov
lock
pop
push
cmp
mov
aad
je
mov
jl
pop
add
ja
lods
ss
add
adc
cwtl
call
mov
xchg
or
mov
outsb
mov
iret
pop
imul
repz
fsubrs
mov
incb
mov
jnp
add
push
js
ljmp
xchg
mov
xor
mov
jp
dec
inc
int
mov
or
xor
js
sbb
pop
jl
sbb
adc
add
rol
sbb
loop
cmpsb
addb
andl
pop
pop
mov
lods
xlat
std
cmp
push
es
adc
push
mov
adc
stc
push
fimull
in
xchg
dec
inc
or
cmp
arpl
xchg
mov
jmp
es
cld
jp
fldt
aam
pop
jp
pop
cmp
pop
ret
cmpsb
std
ljmp
jnp
pop
sarl
idivl
imulb
outsl
adc
sub
addr16
lahf
xor
ljmp
xchg
mov
push
jno
lret
push
imul
gs
inc
icebp
xchg
mov
cmp
insl
sub
pop
cmp
mov
pusha
aaa
cwtl
sarl
in
push
cld
xchg
xor
aad
cli
push
lea
and
loopne
mov
test
icebp
dec
stc
aas
jmp
orl
sti
pop
xor
std
jno
mov
fmul
test
subb
insl
or
sbb
cmpsl
mov
paddb
mov
xchg
mov
pop
orl
shr
and
mov
xor
repnz
bound
pop
add
adcb
mov
cmp
into
and
mov
loop
leave
push
lcall
iret
push
inc
xchg
mov
mov
aas
lahf
lret
xor
mov
aas
push
lods
ficoml
mov
push
arpl
xor
mov
cmp
xor
push
fadds
insl
push
mov
shr
test
shr
sub
mov
cmpsb
pop
mov
push
pusha
loope
jmp
add
mov
sbb
outsl
popf
xlat
lods
fidivrs
lret
hlt
fs
lock
sbb
adc
adc
stos
jmp
imul
adc
nop
rcr
in
out
xchg
jae
ret
ja
cmp
lcall
or
movsl
jg
cwtl
rcrb
in
cli
cmpsb
stc
testb
testl
pop
dec
or
push
out
fstpt
pop
dec
imul
mov
jbe
xchg
inc
adc
sbb
lret
and
stos
push
cli
bound
arpl
mov
cmp
dec
ss
call
cmp
adc
and
lods
testl
or
orb
lods
test
lret
mov
push
sub
bound
jae
fdivrs
test
sbb
les
jmp
pop
rorb
testl
sbb
pop
and
adc
or
aas
std
nop
push
lret
into
insl
test
pop
pushf
mov
ja
push
outsb
adc
push
add
xchg
xchg
loopne
mov
inc
les
adc
jb
outsb
in
in
cmp
fstpl
mov
outsl
stos
mov
pop
in
mov
and
fsubr
push
xchg
or
push
stos
jo
cmp
cmpsb
xchg
shl
adc
jb
mov
dec
jmp
or
inc
ljmp
mov
imul
cmpsb
sti
pop
adc
sub
aam
divl
outsl
insl
lahf
mov
add
add
sbb
cmp
mov
call
xchg
mov
lods
aaa
push
xor
data16
mov
test
or
adc
lods
psubsb
pop
call
sbb
xchg
pop
nop
outsb
call
cmpsb
inc
xchg
icebp
dec
ret
pop
or
or
in
fdiv
nop
pop
mov
call
jo
xchg
je
xchg
loope
cld
lds
inc
out
mov
sahf
movsl
push
push
icebp
leave
aas
es
enterw
lods
push
sub
lods
xlat
test
fwait
lcall
or
bound
lret
dec
das
add
xor
pop
push
jnp
into
inc
push
aaa
jns
inc
cmpb
jp
cmpsl
adc
js
adc
inc
movsl
and
mov
add
jge
mov
je
jecxz
pop
pop
xlat
call
shll
lcall
sbb
and
fcompl
mov
leave
int3
adc
sub
sub
jbe
shl
push
pop
add
enter
mov
xor
cmp
mov
jecxz
pop
negb
push
add
jns
mov
fistpll
adc
inc
fucomi
pop
outsb
repz
cmc
call
cmp
outsl
call
inc
test
in
push
ret
pushl
adc
jle
aas
mov
addr16
pop
push
cmpsb
dec
pop
sub
dec
xor
pop
pop
dec
xor
push
movsb
out
loope
pop
pop
push
dec
and
hlt
sub
repnz
pop
xchg
ds
movsl
sbb
in
add
sub
dec
dec
inc
mov
dec
mov
adc
repz
clc
int
mov
fildl
pop
es
cmpsb
sti
mov
pushw
iret
decl
into
sbb
jge
inc
inc
ds
lret
push
test
mov
mov
enter
stc
inc
fstpt
lahf
jmp
mov
cmp
loope
jns
cltd
inc
insl
cld
push
add
push
mov
les
test
adc
lret
push
jmp
fwait
sbb
and
test
push
jmp
mov
stos
aaa
sbb
mov
push
mov
test
jge
xor
sti
xor
xchg
mov
fildl
test
inc
iret
pusha
out
fcompl
addr16
enter
mov
lods
sub
xor
push
push
mov
push
mov
mov
jno
leave
or
sbb
xor
in
movsb
aas
dec
ljmp
dec
adc
cmp
sbb
jecxz
je
test
aas
loope
pop
sbb
scas
and
icebp
or
test
notl
mov
mov
adc
in
cmp
mov
cmpsb
xchg
xor
or
ret
int
add
dec
les
data16
jo
xchg
jl
insb
stos
pushf
sbb
xchg
and
mov
dec
inc
xor
rolb
insb
jnp
clc
aaa
jno
xchg
jg
mov
in
cmp
fstps
in
into
pop
dec
mov
mov
dec
mov
mov
adc
lds
outsl
lahf
fcmovu
mov
mov
jb
cmp
fistps
jb
shll
inc
dec
in
mov
mov
icebp
mov
jmp
lock
fs
fisubrl
std
shlb
mov
or
iret
fs
scas
ret
xor
pop
jmp
push
sub
loop
push
fadds
mov
loopne
add
xchg
int3
cmp
andb
push
shrl
clc
push
gs
jmp
aaa
jne
mov
sbb
add
push
stos
lods
inc
out
push
mov
inc
mov
cmpsl
imul
jg
out
xor
imul
jns
bound
sbb
and
scas
and
data16
mov
cltd
adc
xchg
lcall
jl
mov
jne
daa
sbb
inc
popa
add
push
sbb
xchg
push
and
ret
mov
mov
inc
sbb
test
xchg
dec
mov
inc
xchg
mov
push
add
and
jg
arpl
cltd
jno
cmp
and
mov
pop
mov
idivb
enter
jne
xchg
inc
aaa
orb
in
aas
mov
xor
mov
inc
rorl
arpl
in
mov
subl
je
lret
outsl
js
mov
aas
jle
mov
cltd
dec
pushf
mov
loop
mov
pop
nop
les
clc
pop
mov
cwtl
xchg
mov
fisubrl
call
ficompl
jae
cwtl
ret
push
sub
movl
loope
dec
lea
imul
xchg
mov
outsb
ss
push
push
dec
inc
stos
test
ret
out
add
negb
pop
jmp
ror
xchg
outsb
cmp
mov
push
or
inc
notl
or
jo
aam
pusha
push
cmp
jnp
or
jb,pn
jmp
and
aas
fistps
fs
or
or
ficoms
push
jl
insl
in
add
repz
dec
mov
xor
push
das
and
ret
arpl
xchg
pop
and
lcall
inc
dec
xchg
mov
popa
push
in
lods
push
fisubs
mov
fisttpl
or
pop
in
dec
mov
or
in
les
cli
pushf
push
leave
rclb
push
lahf
fcoml
mov
inc
lahf
dec
inc
cmova
cmp
sbb
movsb
cmp
xchg
jl
xlat
jb
dec
xlat
jp
ror
pop
int3
mov
push
xchg
or
sbb
mov
cmp
scas
flds
icebp
or
repz
sbb
icebp
loope
fisubl
inc
ja
movsl
dec
repnz
shl
mov
sbb
inc
das
shll
jns
cs
outsb
or
mull
pop
popf
pop
and
les
stc
lods
movsl
in
in
sbb
call
and
xor
jle
mov
test
xchg
subb
sahf
jmp
es
inc
inc
jge
int3
shlb
add
js
stc
cli
addl
bound
mov
xchg
nop
icebp
xor
ss
xor
mov
or
cmc
sbb
shll
jge
out
test
test
add
inc
or
arpl
dec
jnp
xlat
sub
dec
jmp
movsb
and
sub
imull
pop
cmpl
imul
dec
sbb
push
mov
jno
pop
movsb
jno
loopne
and
adc
fisubrl
stos
mov
orb
and
jecxz
sbb
lds
push
addb
add
dec
add
xor
push
xchg
je
pop
js
adc
ror
jae
inc
mov
xlat
xorb
imul
mov
ja
jle
sbb
cmpsl
cmp
xchg
ljmp
and
mov
dec
shll
mov
push
addr16
je
sbb
inc
sarb
rorl
out
xchg
and
fwait
mov
push
sub
push
lods
pop
xor
push
in
jmp
inc
addr16
add
mov
jnp
xchg
outsb
adc
ret
inc
adc
cmp
pop
cwtl
xor
cmpsb
push
jnp
ret
mov
inc
mov
out
jbe
cmpsb
mov
xor
pop
dec
sub
out
idivl
aas
loope
xor
insb
add
mov
xchg
stc
cmp
inc
fwait
pop
sahf
inc
fbstp
jne
xor
mov
xchg
stos
test
mov
loope
sub
hlt
ljmp
lahf
aas
jl
js
lock
subl
xlat
aas
clc
loopne
and
dec
cmpb
rol
cmp
adc
imul
sbb
call
xor
push
or
dec
jnp
in
jae
in
mulb
in
dec
or
iret
sub
xor
jl
adc
fistl
cld
inc
lcall
pop
ficoml
or
or
sub
jl
mov
adc
andl
jecxz
in
cmp
jmp
xchg
and
into
mov
sub
loope
movsb
xchg
test
xor
movsl
push
inc
shrb
in
jecxz
bound
rep
fbld
fistpll
add
test
cmp
addr16
push
xchg
sahf
enter
jnp
imul
fs
imul
jle
fwait
jmp
aad
push
cmp
sub
dec
lods
push
adc
pop
pop
or
iret
adc
lea
push
and
ret
aas
cli
or
jns
sub
add
ret
filds
jo
jge
or
jmp
pushf
jge
dec
call
loope
std
cmpsl
push
ret
add
push
test
sti
inc
jo
loope
jg
cmp
insl
les
hlt
iret
xchg
lds
sub
popf
in
cwtl
popa
ret
enter
inc
cmpsb
fidivl
movsb
notb
and
mov
popa
or
stos
loop
sub
pop
cmpsb
cwtl
pusha
adc
scas
jae
out
std
jl
sbb
inc
push
sbb
cmp
jns
lret
mov
jmp
movsl
jl
add
pop
fsubs
lcall
imul
movsl
mov
cwtl
lret
pop
into
in
fistpll
outsl
and
push
loop
rorl
dec
je
js
xchg
outsl
or
push
pop
jae
test
pop
sbb
ret
insb
aas
add
inc
cli
loope
dec
int
pop
loop
fidivs
outsb
or
hlt
jl
ficoml
ret
sub
xor
dec
test
add
push
out
lcall
out
aas
adc
mov
outsb
mov
stos
dec
mov
jb
aas
mov
sti
add
or
push
jl
aaa
push
push
sti
dec
cmp
scas
js
push
mov
pop
pushl
dec
adc
jl
dec
mov
imul
aam
inc
and
dec
xlat
loopne
sbb
rclb
testl
push
es
sti
xor
or
sarl
insb
mov
out
sub
fcoms
cmp
jmp
cmp
mov
sub
loope
dec
adc
mov
sbb
fdivs
cmc
xchg
clc
mov
insl
adc
inc
sub
mov
aam
stos
mov
cmp
outsl
das
dec
daa
cmp
sub
daa
jmp
in
leave
enter
andl
fsubs
jbe
daa
push
cmp
mov
xchg
sub
in
cmpsb
aaa
sbb
mov
or
pop
or
in
roll
xor
lods
sbb
int3
ljmp
add
adc
xor
mov
mov
loope
dec
xchg
lret
dec
push
mov
inc
pop
pop
jns
dec
mov
sub
push
addr16
js
sar
scas
inc
int
sahf
jge
and
andb
neg
roll
popf
cltd
inc
adc
negl
out
lock
out
add
pop
and
adc
mov
aas
repz
push
mov
fcoml
scas
adc
mov
pop
mov
cld
xor
test
imul
mov
and
jecxz
xor
js
int
mov
pop
jne
push
dec
test
sti
push
jb
xor
cmp
push
add
aas
jp
xor
fisubs
movsb
xchg
mov
clc
mov
neg
sti
loop
pop
or
pop
subl
pop
sbb
xchg
inc
jmp
push
cmc
dec
and
jl
adc
mov
out
fwait
pop
and
jno
insl
aam
push
fists
ds
jb
and
js
repnz
push
push
stos
mov
scas
jnp
mov
inc
lock
std
fsubl
dec
mov
sbb
cmp
mov
sub
in
push
xchg
in
lds
dec
scas
cmp
xlat
dec
mov
mov
sub
je
jbe
adc
dec
jns
sub
arpl
jmp
mov
mov
scas
iret
pop
imul
outsl
repnz
ja
rcrl
jmp
and
hlt
add
into
cld
dec
dec
mov
rorl
cmpsl
lahf
sbb
lcall
fbstp
adc
or
dec
push
fnstsw
aaa
mov
insb
inc
lock
inc
ret
jne
cs
addr16
add
cwtl
loope
fistpll
iret
aam
sarb
in
and
push
push
inc
jge
in
inc
xor
lret
shrl
mov
mov
pop
xor
pop
mov
pop
aad
jbe
jp
cmp
xchg
dec
std
jl
dec
into
scas
js
xchg
stos
jns
inc
imulb
inc
xor
jnp
pop
popf
xlat
movsl
test
jns
sbb
mov
loopne
insb
loop
dec
sbb
sbb
push
sub
movsl
sbb
cli
mov
mov
jne
xchg
sti
movsb
outsb
add
pop
scas
mov
dec
imul
vmovss
adc
ffree
divl
xor
adcb
inc
hlt
sahf
iret
rcrb
sub
fildl
push
push
inc
jno
ds
mov
jmp
inc
adc
outsl
cmp
ja
jmp
sbb
mov
xor
pop
insl
sub
dec
push
dec
jmp
inc
adc
adc
xor
or
xchg
push
daa
loop
stc
lods
pop
out
or
mov
sbb
or
sub
ret
insl
xchg
cmc
ret
sbb
jns
sarb
mov
and
paddw
call
rorb
test
jbe
pop
repnz
xor
cmp
push
xor
loopne
xor
push
cmp
push
ljmp
pushf
lods
inc
push
je
sub
mov
mov
aas
lahf
jge
nop
hlt
clc
test
fbstp
sbb
addr16
dec
movsl
dec
mov
push
negl
arpl
out
cmp
sbb
test
ss
and
mov
loopne
mov
mov
mov
rcrb
sbb
sbb
push
insb
add
adc
fsubs
mov
shll
or
push
and
and
lea
sub
lock
lock
loopne
adc
mov
xor
repnz
jmp
lcall
cmpsl
lahf
mov
and
inc
mov
or
ficoms
rclb
cwtl
pushf
jnp
cmp
stc
cld
adc
adc
fimull
add
xchg
dec
push
and
push
jbe
sarl
out
push
jbe
in
push
test
loope
mov
ja
leave
jbe
jo
xor
sub
sbb
sub
mov
fisubrs
or
mov
insb
dec
pop
popf
mov
lret
hlt
stos
jmp
push
adc
lcall
lods
inc
push
scas
mov
dec
cmp
xchg
cmp
popl
inc
xor
rorb
add
mov
in
or
into
mov
jb
ror
in
lods
sbb
repnz
and
pop
les
das
xchg
xlat
cmc
fnclex
mov
dec
inc
lahf
lret
jg
add
pop
push
lock
jecxz
out
mov
mov
movsl
sub
enter
stc
lock
scas
sub
fstl
inc
scas
xor
jecxz
push
negl
flds
in
repz
movsb
cld
push
dec
lds
aad
cmpsb
cmp
jnp
ds
inc
lahf
jp
jmp
stos
icebp
or
das
lret
sbb
adc
sub
cmc
push
std
or
sub
rcr
sbb
xchg
and
sub
mov
outsl
sub
test
mov
adcl
xchg
pop
rorl
sub
xchg
mov
and
sub
aam
les
outsl
clc
pop
or
data16
pop
xor
xor
push
mov
es
rdtsc
dec
insl
sub
int
jnp
mov
sub
xchg
cmp
loope
int3
sbb
and
js
sarb
int3
and
dec
add
sub
lds
dec
loop
mov
aas
scas
mov
and
inc
sub
movsb
arpl
mov
pop
ret
sbb
or
sbb
add
loop
sub
insl
xchg
sbb
rorl
dec
imul
xchg
lret
jns
xchg
cld
loopne
out
push
mov
mov
xchg
ss
mulb
rclb
jmp
push
rcll
cltd
movsb
adc
popf
inc
ret
test
jo
dec
xchg
mov
out
lret
lahf
ror
dec
mov
inc
mov
es
int3
cmp
out
mov
imul
mov
xchg
test
sub
pop
test
les
jg
popa
jbe
pop
sti
mov
add
mov
mov
cwtl
test
dec
mov
jae
pusha
int
loop
mov
aaa
sbb
inc
inc
out
int
dec
in
pop
and
mov
jae
clc
bound
out
in
push
mov
hlt
stc
xchg
add
jecxz
mov
mov
pop
dec
popa
shll
xchg
inc
pop
jmp
pushf
jns
popa
shll
stos
jl
movsb
loope
xor
scas
icebp
je
div
jmp
push
leave
popw
mov
out
lea
mov
sahf
shll
mov
dec
js
xchg
ja
jp
pop
bound
jb
pop
out
imul
loope
jno
xlat
les
lcall
into
push
pop
cltd
jo
and
iret
dec
or
call
movsb
pop
repz
mov
dec
clc
or
jne
xchg
jbe
imul
and
popa
gs
inc
sub
mov
adc
sti
adc
mov
sbb
push
push
jg
pcmpgtb
loop
mov
cs
jmp
dec
adc
inc
jno
fimull
ds
lock
and
imul
test
mov
neg
test
mov
jns
dec
or
nop
mov
popa
cmpsl
cmp
jl
inc
rorl
outsb
mov
scas
cltd
dec
test
jg
xlat
pop
test
push
ret
jl
outsl
add
lcall
mov
ljmp
out
xor
iret
pop
pushf
push
sahf
ljmp
mov
push
insl
ss
repnz
outsl
jb
adc
gs
jl
loopne
cmp
and
clc
xchg
ret
sbb
mov
lock
mov
pop
push
adc
lds
shll
xor
sbb
scas
xchg
xor
std
inc
sbb
imul
das
xchg
sub
out
mov
sub
cmp
dec
stos
push
ret
daa
lock
cli
xchg
push
gs
inc
rorb
and
mov
movsl
das
push
push
stos
cmpsb
cmp
jae
rorl
es
mov
inc
and
xchg
loopne
pop
xchg
xchg
addb
bound
push
adc
pop
push
pop
bound
outsb
les
sub
scas
pop
aad
mov
sbb
fisubrl
sti
jae
fistps
dec
dec
inc
test
aas
mov
mov
shlb
out
loop
ret
lds
icebp
add
popf
jb
mov
pop
and
xchg
sbb
stos
gs
cmp
mov
pop
and
das
scas
cli
aam
sbb
add
push
jbe
mov
fnstsw
outsl
cmp
xchg
adc
inc
mov
push
pop
push
ljmp
mov
je
scas
sbb
insl
mov
xchg
movsl
lea
imul
lods
or
clc
adc
pusha
mov
or
outsb
inc
inc
sbb
sti
cltd
or
loop
push
xchg
mov
add
iret
adc
in
cmp
push
inc
fstl
testb
mov
aaa
orb
lret
int
mov
jmp
and
jge
push
mov
inc
mov
and
cmpsl
in
push
pop
lds
aas
bound
cltd
notl
pop
jg
addr16
fcomps
and
lock
and
pushf
stos
mov
je
pop
cmpsb
xchg
xchg
dec
add
loop
loope
add
flds
mov
dec
roll
xchg
jl
hlt
jge
jmp
cltd
and
jecxz
pop
in
lret
fiaddl
dec
pop
and
or
sbb
idivl
in
mov
out
adc
add
test
push
mov
sub
sbb
mov
push
sbb
mov
mov
hlt
mov
mov
and
jle
faddp
sbb
mov
push
inc
mov
mov
sub
cld
dec
jns
mov
mov
push
fstpt
rorl
shlb
push
ror
push
cmpsl
stos
shr
mov
mov
data16
in
adc
mov
xor
add
iret
jle
cmp
pop
cs
or
or
xor
icebp
cmp
fisubrl
push
xor
sub
data16
lea
repz
and
aam
or
mov
bound
call
aad
xchg
sbbb
push
xor
orb
les
loop
xchg
stc
xchg
in
aad
insl
pop
or
stos
cmp
pop
outsb
xor
dec
rorb
jo
stc
aam
iret
adc
lods
push
dec
ret
mov
sbb
xchg
loopne
pop
sti
mov
dec
sub
pop
inc
out
fs
adc
jae
xlat
jl
inc
push
sbb
bound
fucomip
loop
aam
pop
outsb
out
fwait
sub
push
mov
cmp
xchg
imul
mov
and
lock
hlt
xlat
xlat
cmp
dec
and
sbb
mov
scas
mov
pop
sub
scas
cli
mov
dec
pop
aaa
ss
xlat
add
cmp
inc
jno
sbb
push
mov
mov
mov
jbe
pop
push
add
pop
aas
fsub
jae
push
lret
dec
in
dec
push
call
dec
imul
inc
xchg
xor
hlt
in
and
pusha
arpl
and
outsb
mov
mov
mov
pop
icebp
inc
daa
mov
add
pop
inc
adc
popa
push
mov
sbb
shlb
test
and
sbb
aam
ret
or
in
fwait
lret
in
cvtdq2ps
sti
push
sub
pop
ja
xchg
sub
and
rorb
pop
repz
mov
mulb
repnz
inc
mov
mov
mov
dec
inc
mov
js
push
test
lretw
das
test
push
jp
or
mov
mov
aad
ficoms
cmp
lds
pop
idiv
mov
xchg
pop
jb
ljmp
xchg
push
repz
sub
jno
popf
ljmp
lods
pop
mov
les
ss
hlt
orb
repz
mov
fbld
idiv
push
fidivrs
or
les
adc
imull
stc
aaa
outsl
push
jge
int3
xor
ss
xor
jne
popf
jp
sbbb
push
mov
test
fld
adc
mov
popa
fs
or
cmp
xchg
push
jecxz
std
push
test
xchg
out
out
sub
pop
ljmp
lods
sub
mov
movsb
lea
jmp
mov
or
loope
jb
test
sub
or
push
daa
add
pop
add
je
xor
push
sub
and
sbb
adc
xchg
cmpl
sub
dec
call
or
dec
and
pop
fdivs
mov
lods
jp
inc
and
fistps
pushf
or
gs
into
push
push
jbe
mov
adc
xchg
mov
push
lret
add
push
pop
dec
mov
aas
dec
or
xor
ja
inc
loop
mov
cltd
xchg
fwait
push
stos
pmulhw
cmp
inc
xor
xchg
aam
fs
icebp
arpl
rcrb
xchg
add
out
pushf
ficoml
js
mov
mov
out
mov
divb
push
insl
rol
aas
loop
dec
jge
pop
cmp
aas
and
jb
inc
adc
push
jl
mov
dec
jmp
inc
xchg
cwtl
xorl
cs
scas
sarl
stos
stc
xchg
ljmp
dec
dec
mov
xchg
ret
leave
scas
shlb
xchg
pop
sub
cmp
sub
xchg
mulb
add
lods
les
push
out
mov
scas
or
add
lods
std
sub
pop
dec
xor
int3
sbb
sub
adc
rorb
pop
dec
out
push
es
ret
into
pop
dec
cmp
andl
inc
lahf
repz
leave
mov
loopne
orb
in
es
or
push
mov
sti
hlt
std
test
inc
cld
ja
lds
jmp
adc
add
pushf
xchg
push
mov
loope
jecxz
imul
adc
es
and
into
pusha
ljmp
mov
test
fidivrs
lahf
arpl
jbe
mov
cmc
xchg
and
adc
mov
and
lods
loope
test
call
dec
imul
in
pushf
aam
or
stos
adc
sbb
call
std
dec
fisubrs
filds
fwait
leave
cld
cmpb
xor
sub
pop
in
fsubs
aaa
or
rcll
in
inc
and
bound
and
in
fdivl
cmpb
je
or
lods
imul
lods
mov
sbb
test
in
cmp
out
and
jecxz
inc
shll
int
mov
pop
xchg
aas
out
es
cmpsl
test
iret
or
movl
mov
aas
lret
fs
jo
push
loope
mov
cmp
popf
sub
mov
add
data16
adc
add
jae
xchg
push
hlt
push
sarb
aaa
aas
sbb
pop
pop
push
or
fisubl
xor
xor
inc
nop
fidivrs
inc
loop
cmp
ret
mov
or
inc
imul
pop
lcall
pop
mov
inc
inc
inc
or
xchg
jne
push
das
xchg
cmc
jp
mov
inc
jbe
inc
sbb
push
sbb
into
pop
in
test
rcll
lods
push
fstl
movsl
cmpsb
mov
or
rcrl
aas
pop
pop
dec
scas
aam
or
andb
std
addr16
push
pusha
dec
ret
xor
xor
call
repz
gs
fstpl
daa
cmp
lods
ljmp
popf
sub
popa
pop
loope
add
mov
sbb
inc
inc
mov
jnp
mov
out
jbe
and
jbe
and
outsl
push
cmp
adc
cmpb
sbb
mov
mov
bnd
lock
pop
das
add
mov
lret
or
addl
pop
xchg
xlat
shrb
repz
pop
jnp
lahf
mov
mov
ret
inc
iret
cmpsl
pop
inc
add
mov
aas
xchg
jbe
add
aad
bound
cmp
mov
dec
insl
add
push
xor
inc
xchg
or
test
mov
add
mov
xchg
add
clc
hlt
das
dec
loope
jno
cs
pop
in
out
inc
test
xchg
sbb
and
sbb
sbb
mov
sub
int3
jmp
xor
dec
xor
bound
rorl
mov
fadd
ficomps
jo
mov
inc
jbe
cli
xlat
lret
dec
es
imul
out
pop
mov
cmc
inc
stos
shlb
pop
cmpsb
ss
dec
loope
repz
fwait
jmp
xchg
lods
in
pop
and
add
xchg
andb
nop
test
or
cmp
imul
ret
add
adc
add
scas
or
or
mov
or
xlat
nop
dec
in
push
ja
aaa
in
jl
pop
loopne
inc
cmpsl
fildll
or
fsubl
addl
dec
movsb
lock
xor
dec
pop
push
adc
jnp
xchg
dec
pushf
xor
push
sbbb
cmp
mov
outsb
jns
xor
dec
mov
scas
fisttpll
mov
xor
jmp
jl
push
push
inc
pop
fsubl
aad
jne
mov
push
stos
lret
shrl
and
mov
and
cmc
scas
clc
xchg
cmp
mov
add
aaa
mov
jl
popf
inc
rcll
or
jno
xchg
je
dec
mov
xor
nopl
pop
mov
out
cs
rorl
pop
out
inc
cmp
xor
movsb
push
pop
inc
ljmp
or
add
xchg
jae
cs
sahf
jmp
jno
dec
pop
dec
in
inc
pop
pop
ds
loop
jae
test
add
xor
jecxz
jecxz
shll
jle
mov
scas
push
aas
xchg
and
arpl
sarb
lahf
sub
testl
fistps
lds
roll
jge
push
pop
aam
cld
std
and
dec
lea
fidivs
adc
mov
inc
nop
es
lds
jo
ja
pop
mov
popa
fadds
sbb
aam
mov
xchg
inc
in
addr16
jl
int
jge
xor
sbb
shlb
inc
sbb
add
cmp
in
jnp
lcall
fstpl
jge
aaa
call
aas
jmp
fcomps
lods
dec
cmp
push
sbb
push
xor
mov
cmpsb
bound
jnp
xor
pop
ds
xor
jmp
sbb
dec
aam
add
xchg
mov
mov
jmp
fsubrl
jo
jnp
fs
sbb
repnz
mov
xchg
setb
aaa
or
mov
in
mov
gs
in
imul
int
adc
mov
mov
xchg
imul
lahf
mov
xchg
outsb
xchg
push
sub
add
fwait
mov
inc
sub
dec
cs
xchg
push
les
stos
jne
aas
loopne,pt
aam
pusha
dec
xor
mov
lahf
fildll
inc
jge
inc
sub
pop
xchg
adc
cmp
aaa
pop
cli
out
jle
lods
sub
lret
fimuls
xchg
inc
orb
enter
ret
rorb
jno
arpl
cs
inc
xor
fmull
pop
jnp
cltd
inc
out
into
ds
into
cltd
and
mov
loopne
mov
lea
insb
pop
aad
sbb
sarl
xor
jae
cmp
arpl
ret
mov
sbb
mov
xchg
andb
imul
mov
sbb
je
int3
lcall
add
sti
popa
mov
adc
pcmpeqd
sub
sub
imul
pop
pushl
mov
xchg
sub
xor
cli
dec
mov
out
std
ljmp
loopne
dec
aam
test
inc
fwait
xor
jge
jbe
lods
lret
lea
sub
js
pop
dec
jmp
test
jno
pop
test
xchg
dec
mov
lods
cli
xor
push
pop
pushf
orl
outsb
mov
xlat
cmc
icebp
cmc
lea
test
addr16
mov
or
sarl
lds
out
and
xor
clc
pop
insb
xchg
and
cmp
popa
pop
in
lods
outsb
sub
nop
inc
iret
nop
dec
cwtl
inc
add
andb
stos
rcll
xchg
jne
xchg
cltd
push
in
mov
les
icebp
mov
jns
push
push
bnd
shll
int3
sti
enter
test
dec
cmp
repnz
xchg
movsl
add
push
inc
outsl
dec
cmpsl
pop
and
mov
adc
sti
cmp
mov
div
mov
sbb
sarl
lret
imul
and
pushf
outsb
inc
mov
mov
repz
and
jle
ljmp
dec
out
in
les
inc
lods
lock
test
mov
cmpb
jb
jb
ret
test
jmp
int3
mov
push
mov
jl
mov
jns
mov
sub
lcall
push
pop
mov
jnp
pop
or
pop
sti
jg
mov
adc
sub
scas
mov
idivl
pop
pop
push
push
negl
mov
mov
add
sub
mov
test
mov
inc
mov
repz
xor
add
sbb
xchg
sahf
cmpsb
jne
cmp
mov
sub
and
cmpsb
mov
or
jbe
push
scas
scas
xchg
inc
pop
pop
sbb
xor
add
adc
dec
sub
lret
iret
js
sarl
pushf
jno
popf
sahf
int3
sahf
fiaddl
and
inc
mov
jecxz
js
int
add
mov
mov
test
cmpsb
and
xchg
xor
jnp
pop
pop
adc
jb
shll
mov
mov
xchg
dec
fmuls
sub
mov
mov
imul
push
lds
push
dec
mov
mov
sbb
les
pop
gs
add
adc
int3
jb
jns
mov
aas
and
pop
or
pushf
jnp
sub
int
pusha
outsb
mov
push
outsl
inc
jmp
movsl
jb
js
mov
cmp
mov
mov
into
cmp
adc
pop
aam
loop
movsl
xor
movsl
cmp
insl
sbb
scas
arpl
clc
jp
aaa
push
out
inc
pop
xor
jbe
popf
jbe
mov
mov
sarb
and
xor
hlt
sbb
lea
push
insb
sarl
lea
in
scas
jmp
add
or
mov
repz
and
cld
inc
jbe
xchg
popa
xor
cwtl
inc
hlt
mov
sbb
sbb
sbb
or
sbb
jb
jae
dec
adc
scas
lds
adc
hlt
daa
imul
cmc
shl
add
fwait
jb
add
scas
add
xor
loopne
fiadds
adc
mov
xor
xchg
jnp
jmp
arpl
imul
sub
sub
push
and
mov
outsb
add
pop
repnz
and
sub
cmp
in
lods
cmp
insb
xor
out
jle
stos
sahf
movsl
sarb
fwait
xchg
imul
adc
das
int3
jmp
inc
xchg
pop
mov
ljmp
sbb
push
in
sti
hlt
dec
mov
lret
popa
pop
lret
dec
sub
push
sub
jnp
les
loopne
push
push
out
or
out
xchg
mov
cmp
lahf
xchg
aas
outsb
hlt
push
pop
mov
imul
add
or
loop
popa
xor
out
jg
daa
lret
inc
adc
std
cmp
push
push
pushf
movsl
ss
dec
sub
jb
add
ss
cld
pop
adc
mov
cmpsl
xor
mov
and
enter
push
fistpll
push
jmp
fwait
out
fldl
sarl
fdivrl
sbb
lods
and
into
mov
inc
fnclex
dec
into
out
mov
jno
cmp
xchg
push
int3
std
ljmp
push
add
fisttps
push
testb
mov
in
xchg
je
mov
push
je
dec
enter
shrl
jp
es
xor
mov
pusha
mov
test
cs
stc
test
xchg
cmp
or
mov
mov
xchg
stos
pop
imul
loop
cmp
stc
loop
and
dec
js
mov
xor
mov
in
ficoms
jg
mov
jge
push
mov
push
in
int
sbb
lret
lds
and
cmp
cwtl
and
sub
pop
mov
adc
out
jmp
loope
outsl
mov
inc
mov
mov
jecxz
loop
bound
mov
push
jns
xchg
add
cmp
es
adc
and
icebp
in
je
cmp
das
or
das
sbb
inc
lock
or
shll
or
iret
mov
les
or
jae
std
cmp
testl
sbb
lcall
aaa
xchg
icebp
sbb
imul
adc
adc
imul
push
push
mov
pop
jmp
xor
mov
data16
sub
cmp
cmp
or
dec
jmp
pop
adc
sub
lds
mov
dec
clc
or
mov
fsubs
popf
mov
and
inc
roll
pop
into
inc
jp
or
lret
adc
int
repz
pop
or
outsl
scas
pop
jbe
mov
lods
jnp
sarl
nop
mov
hlt
mov
inc
aad
sbb
leave
ds
addr16
xchg
jl
out
arpl
push
repz
loopne
rorb
aaa
xchg
mov
lock
scas
loop
lock
or
sub
xchg
enter
fsubrs
push
outsb
lahf
push
mov
jb
push
mov
or
pop
es
jl
inc
push
ds
mov
movsb
add
ja
outsl
out
icebp
mov
sbb
mov
push
out
pop
fwait
lock
test
pusha
cwtl
sbbl
cmp
aaa
xchg
mov
ss
aam
or
mov
jmp
stc
das
mov
lahf
xor
sub
out
dec
lea
clc
enter
fisttpll
jno
ret
inc
mov
daa
inc
popf
push
mov
mov
dec
push
imul
imul
or
sub
push
adc
popa
ja
and
into
cmp
xchg
adc
push
insb
out
pusha
roll
pushf
push
dec
inc
sahf
sub
inc
mov
stos
mov
in
dec
mov
aaa
mov
pop
cmp
test
in
mov
repz
sub
sbb
addr16
inc
shll
jne
pushf
inc
mov
mov
rcl
cltd
stos
push
cmc
dec
pop
sbb
xchg
pop
mov
adc
fisubl
test
pop
decl
mov
test
mov
push
and
xchg
fwait
pop
lret
testl
xor
cwtl
jne
push
pop
movsl
lret
push
jg
push
adc
aaa
push
jno
clc
sub
insl
adc
cli
cmpsl
xor
incb
pop
or
cwtl
mov
cltd
fimull
cmp
jp
cs
enter
push
add
push
sbb
sbb
and
sahf
jecxz
push
sub
xchg
clc
mov
mov
lds
xor
shll
pop
pop
je
adc
cmp
push
sbb
xchg
je
xorl
and
mov
and
pop
mov
aaa
jae
sbbl
and
fs
fldl
inc
pop
mov
js
inc
mov
scas
into
cmp
cli
xor
loopne
jp
lcall
int3
xchg
mov
popf
aaa
push
jl
lahf
shll
test
pop
repnz
dec
sub
test
je
cmpl
xchg
sub
roll
pop
fs
dec
xchg
js
mov
mov
inc
jae
aam
sub
and
arpl
out
adc
ret
dec
xchg
bound
xor
scas
lret
ljmp
js
arpl
jmp
sub
sbb
add
lods
leave
jg
mov
and
imul
fnstsw
jmp
jge
and
add
xchg
cmc
mov
std
jne
cmp
inc
loop
push
loope
lods
mov
ret
in
dec
xchg
ret
cmp
pop
cmpsl
rorb
mov
into
inc
xor
jg
adc
cmp
sub
test
xor
or
jp
loope
adc
jmp
in
adc
or
cmpsb
sarl
sbb
pop
mov
aaa
add
pop
mov
stc
rol
or
lcall
xor
adc
mov
pop
pop
xor
pop
je
cmp
lea
fistpl
sbb
jl
cs
dec
jo
sbb
fistpl
and
aad
xchg
test
dec
jnp
push
fdivl
add
pop
push
iret
xor
sbb
and
mov
add
mov
dec
popf
cmpsl
in
sbb
xor
imul
and
inc
mov
cltd
into
shll
sbb
loopne
mov
dec
pop
inc
ss
xchg
pop
adc
jb
xlat
push
popf
dec
stos
add
mov
jmp
out
sbb
sbb
fisttpl
sarb
mov
xchg
outsl
xlat
or
fists
ret
xchg
lods
add
jno
loopne
or
pop
sub
subb
lds
shll
outsl
xchg
mov
dec
xchg
add
icebp
xchg
cmp
outsb
sbb
cmp
sti
push
pop
inc
xchg
pop
pop
jle
and
loopne
rolb
es
xor
lock
add
mov
dec
pop
fisubl
xor
and
je
call
xchg
or
ret
out
or
xor
shr
dec
mov
icebp
in
scas
scas
jae,pt
push
mov
daa
push
mov
push
ss
adc
inc
or
pop
mov
fldl
fsubrp
sub
call
jmp
into
cmpsl
jmp
push
inc
rolb
jae
mov
add
sbbb
adc
testb
mov
fs
pusha
rclb
in
push
jp
bound
xchg
out
add
fisubrs
sbb
nop
hlt
mov
es
popa
adc
push
enter
aas
arpl
inc
imul
inc
bound
cmpsb
and
imull
jnp
xchg
outsb
inc
pop
rorl
mov
popf
subb
jecxz
les
popa
stos
in
add
xchg
ficoms
sub
or
mov
aad
test
dec
nop
inc
lods
clc
test
pusha
mov
adc
sbb
in
or
pop
andl
pop
xchg
push
pop
lret
loope
sub
mov
or
int3
or
out
es
les
xchg
xor
std
out
cmpsb
add
arpl
xchg
sbb
fsts
mov
adc
sub
mov
lret
cmp
sbb
jl
xor
aas
cmp
mov
jnp
fdivs
iret
push
shlb
jae
cmp
dec
jnp
sti
icebp
adc
mov
inc
jnp
rcr
dec
dec
push
add
push
mov
jns
aad
hlt
dec
mov
add
inc
and
jl
xor
das
ljmp
rcrl
test
call
xchg
mov
fistpl
lea
mov
mov
scas
les
out
push
xor
out
sub
loop
dec
ret
lea
mov
cmp
in
addl
dec
in
pop
loope
pop
adc
filds
mov
movsb
fisubrs
pushf
dec
out
test
iret
push
andb
decl
adc
rclb
adc
sbb
dec
mov
lock
aad
pop
mov
xor
pop
sbb
mov
inc
pushf
mulb
ret
repz
inc
lcall
and
dec
cltd
push
add
fists
in
inc
negl
xor
inc
lods
jl
mov
sbb
or
dec
inc
pop
mov
adc
dec
mov
add
popa
fimull
out
or
jae
add
and
dec
push
outsb
mov
dec
mov
xchg
jbe
in
iret
sub
dec
adc
das
push
cmpsl
or
xchg
lds
and
popf
mov
mov
mov
stos
xor
addr16
repz
push
pop
cli
pusha
lds
inc
or
mov
or
test
xchg
addb
push
mov
arpl
push
lds
cmpsb
icebp
add
fcomi
movsb
rcrl
test
int3
out
stos
lds
mov
jmp
mov
mov
out
xchg
mov
xor
repz
push
mov
mov
cmp
push
sub
movsb
jmp
xchg
mov
roll
out
dec
adc
test
sbb
lock
mov
testb
test
pop
jno
inc
xor
push
js
xor
jmp
mov
mov
insb
mov
cmpsb
cmp
outsl
sub
movsb
ds
dec
iret
cld
repz
mov
xchg
adc
mov
push
push
jne
adc
mov
sub
fcmovnbe
daa
clc
inc
and
sbb
mov
cmp
fidivrl
rorl
xor
movsb
dec
jae
arpl
or
popf
pop
fs
and
jmp
cmpsb
call
mov
jg
subl
or
pop
push
adc
cmpsb
cmp
mov
push
mov
jle
jnp
push
mov
sar
aas
cwtl
bound
sub
fdivrs
cmpsb
push
je
fistpll
roll
adc
fbstp
push
cmpsb
mov
mov
scas
jmp
cmpsb
ficoms
lahf
insl
invd
mov
arpl
out
mov
test
daa
jecxz
insl
maxps
loope
pop
int
push
inc
cmp
sbb
rcrl
stc
xchg
faddp
jmp
inc
xchg
mov
jle
inc
inc
mov
daa
jo
and
pop
pushf
in
dec
xor
add
or
fs
xor
xor
ret
xor
fiaddl
cltd
dec
inc
lds
cmp
insb
adc
in
ljmp
xchg
pop
add
daa
mov
stc
imul
xchg
or
push
in
adc
icebp
repnz
pushf
cs
mov
sub
mov
test
xchg
daa
xorl
insl
outsl
es
and
sbb
xor
cmp
rcr
daa
jb
xchg
mov
and
push
mov
or
xor
add
pop
movsb
aam
or
jbe
mov
not
jl
loope
into
or
and
xor
leave
fdivrl
sbb
in
jmp
dec
jmp
cmc
push
repnz
jb
out
sbb
pop
dec
popf
add
push
test
jecxz
adc
sbb
and
mov
dec
mov
mov
or
add
pop
mov
or
dec
xchg
mov
jae
jmp
adc
mov
pcmpgtw
fnsave
adc
aad
mov
out
outsl
cmpsl
ds
cmpsb
ret
sahf
aad
fisttps
inc
cmpl
repz
orl
mov
xchg
ret
mull
fcomip
xchg
mov
mov
pusha
push
push
inc
nop
popa
ret
push
push
pusha
xchg
xchg
dec
lods
dec
dec
fists
pusha
mov
mov
fistpl
shrb
shlb
mov
movsb
push
push
popa
sbb
test
sbb
arpl
stc
inc
icebp
sub
xchg
inc
ljmp
push
or
push
movsl
pop
test
loop
push
movb
aad
repz
cmc
xchg
shlb
pop
jo
xor
js
xor
pop
cs
sti
pusha
push
aas
xor
daa
sub
or
jge
fstpt
popa
adc
mov
lea
xchg
mov
fldl
ja
xor
std
push
mov
jle
jmp
xchg
jg
vpcmpeqd
cmp
int
stos
test
and
in
mov
push
fmuls
adc
lret
movsb
dec
mov
clc
xchg
xchg
mov
orl
xchg
daa
jecxz
loopne
decl
cltd
push
mov
or
stos
repz
mov
push
sub
push
cli
jbe
and
mov
adc
fdivrs
mov
mov
sub
mov
mov
adc
dec
loop
xlat
mov
aad
scas
jg
sbb
xor
jge
icebp
test
mov
and
arpl
mov
push
jnp
inc
xor
mov
out
out
jg
ss
pop
cs
loopne
cmp
ja
add
or
das
std
outsb
std
push
sbb
test
push
or
mov
mov
sub
sbb
adc
ficompl
push
fcmovu
dec
scas
cs
and
lods
xchg
js
add
jg
loopne
imul
enter
mov
loopne
cmp
sbb
js
cmp
les
lcall
icebp
cmpl
pop
loop
test
mov
shlb
jp
sub
mov
jmp
jbe
lea
jno
jge
pop
mov
loopne,pt
sar
and
mov
repnz
incb
sbb
hlt
movsb
call
aaa
test
lods
popf
pop
xchg
pop
inc
notb
adc
shll
or
out
dec
lods
mov
pushl
mov
fs
inc
inc
mov
test
mov
pop
xor
pushaw
pop
bound
push
mov
scas
mov
and
pusha
pop
rclb
ss
xchg
aaa
mov
add
emms
arpl
js
rorl
repnz
aam
cltd
jp
lcall
push
pop
mov
adcl
call
ret
inc
cmp
adc
int
or
repnz
leave
pop
sbb
sub
std
test
cmp
mov
test
ljmp
lea
dec
push
loope
or
xor
sub
bound
loope
sbbl
pusha
je
imul
push
sub
sub
inc
lahf
adc
jle
xlat
addr16
ljmp
fisubrs
mov
adc
push
loope
jge
sbb
or
mov
mov
aaa
xor
lods
subl
insb
je
inc
jmp
sub
jp
stc
pop
test
or
push
js
fisttpll
adc
shll
sbb
ficompl
add
dec
jmp
mov
jle
fiaddl
pop
hlt
and
out
push
sbb
and
sbb
test
cmpsl
push
and
mov
pushf
rolb
gs
es
lods
mov
push
jo
jo
sar
imul
into
pop
jb
mov
fwait
jno
popa
jl
ja
out
ret
orl
mov
jle
dec
dec
jb
les
cmp
xchg
frstor
fistpll
jl
in
movsb
cmpsb
movsl
or
mov
push
jne
lret
and
sub
xchg
xchg
and
test
orl
add
int
add
cwtl
sbb
lahf
jl
outsb
push
adc
mov
aas
cmpsb
inc
test
fnstenv
add
push
clc
xor
cmc
push
insb
inc
jmp
das
cmp
lock
stc
push
or
push
xorl
ror
sub
ret
mov
cmp
adc
ljmp
popf
ds
mov
push
ret
cmp
leave
ret
mov
sub
aas
push
mov
into
enter
mov
mov
movl
aam
scas
sub
dec
negb
sbb
sub
jne
jns
leave
adc
push
sbb
or
jp
sbb
or
push
icebp
or
repz
lods
fdivs
decb
mov
xor
dec
and
sub
daa
loopne
dec
jb
dec
or
ret
sti
mov
arpl
cltd
stos
mov
std
out
daa
mov
cld
or
sbb
cld
mov
sub
mov
add
in
mov
lods
xchg
and
cwtl
into
xlat
out
ret
cmp
inc
xchg
pop
ja
fistpll
andl
cmc
xchg
lods
mov
pxor
outsl
into
pop
aaa
in
cwtl
insb
cli
pop
push
in
iret
sbbb
mov
rcr
adc
adc
sarb
xchg
push
ja
cmp
mov
lcall
ja,pt
imul
fwait
shll
test
fistpl
jp
xchg
xor
sarl
mov
call
lret
cmpsb
aas
cli
mov
push
aaa
test
jl
out
sahf
nop
cmc
inc
sbb
and
pop
lock
insb
xor
adc
movsb
or
in
jp
es
aad
lods
pop
xlat
stos
mov
pop
mov
loope
sub
xchg
pop
and
mov
dec
pop
mov
int3
jle
stos
mov
es
push
lcall
jp
arpl
repnz
sub
dec
cmp
xchg
xchg
enter
or
in
mov
push
pop
lret
ss
jnp
icebp
push
out
cmp
in
lods
repz
xor
shr
cwtl
repz
cmpsl
aaa
rolb
jo
mov
test
inc
push
dec
pop
adc
adc
mov
jecxz
ja
outsl
mov
repz
push
jg
xor
sub
pop
xor
mov
add
add
pop
dec
xor
mov
ja
xchg
xchg
sub
and
cltd
and
aam
cmpsl
lods
mov
pusha
push
push
and
outsl
int
enter
packuswb
mov
add
dec
dec
lret
pop
and
fiaddl
ljmp
sbb
popl
lcall
dec
xor
shlb
inc
adc
dec
mov
sbb
outsl
pop
and
in
mov
and
sti
inc
jp
aam
shrl
pop
xchg
jae
sub
dec
iret
xor
lcall
out
xchg
ja
inc
sbb
ss
or
movsb
mov
cmp
fs
inc
inc
insb
mov
adc
movsb
addl
add
loope
std
add
lods
lret
xchg
jbe
add
pop
sbb
movsb
aad
inc
jno
pop
cmpsl
cmp
out
popa
movsl
outsb
sub
inc
sub
int3
push
sbb
movsl
les
nop
enter
xchg
cli
leave
jns
inc
jb
test
and
ss
cmpsb
push
loop
insb
orl
add
pop
int
or
sub
inc
cmp
xchg
imul
insl
xchg
cwtl
push
push
pcmpgtw
mov
mov
mov
push
xchg
xchg
jmp
cld
dec
xchg
sbb
pop
mov
sub
sub
cmp
pop
cld
shll
mov
imul
bound
adc
cli
push
fwait
aaa
aaa
inc
cli
rcrl
out
and
test
rcrb
mov
icebp
loope
insl
cmp
pop
out
movsl
sbb
inc
jmp
sbb
pop
rep
arpl
mov
mov
lods
fs
xchg
aas
cs
mov
das
cmp
lret
loop
mov
dec
cs
adc
and
xchg
data16
mov
popf
xlat
xchg
fmuls
rclb
insb
cmpsl
test
shl
adc
inc
add
vmovq
fistpll
jle
jo
adc
jne
repz
lods
out
ds
pop
sbb
xchg
rcrb
mov
add
push
cmc
ficompl
mov
fxtract
mov
mov
js
add
aam
sbb
inc
pop
clc
cli
mov
mov
ret
addl
scas
mov
loopne
dec
jne
xor
sub
mov
jecxz
sti
or
mov
xor
outsb
or
scas
jmp
and
dec
inc
loop
sbb
sbb
aas
inc
out
jp
fnstenv
mov
dec
hlt
xor
adc
fstps
stos
sbb
pop
jp
mov
inc
jg
mov
mov
push
sar
and
ja
mov
idiv
adc
les
sbb
scas
inc
add
xor
xor
imul
aas
mov
add
jae
mov
pop
inc
dec
add
jge
cld
arpl
adc
inc
mov
pop
jbe
mov
jae
ficompl
lea
loopne
jge
loope
das
pop
dec
inc
xchg
sar
icebp
inc
inc
dec
js
pop
xchg
push
lods
cmovae
push
popf
cwtl
dec
add
pop
push
sti
fidivrl
cmp
mov
or
loopne
adc
or
mov
stc
xchg
inc
in
dec
mov
mov
mov
jp
dec
outsl
sbb
es
jbe
or
sbb
es
sbb
scas
inc
jmp
arpl
cmp
test
gs
hlt
add
fcoml
add
mov
cmp
sub
fmuls
mov
in
rcrl
dec
pop
out
push
add
mov
add
lcall
call
outsb
fidivrs
insb
push
jno
mov
cltd
xchg
hlt
pop
pusha
inc
nop
imul
aaa
lret
test
sbb
pop
roll
scas
icebp
cmpsb
cmp
mov
add
shrb
fidivl
xlat
xchg
inc
test
and
jmp
in
inc
ja
ret
jo
int3
mov
mov
cmp
daa
cli
dec
jge
ret
loop
ja
in
ljmp
mov
sub
ljmp
fildll
out
xor
xorl
stos
xor
pop
cmc
dec
xchg
rol
xor
mov
pushf
pop
cmpsl
adc
aad
popa
jl
fistps
ds
faddl
filds
jnp
dec
scas
fbstp
dec
xor
mov
jne
pop
imul
adc
sti
dec
jge
andb
mov
xchg
xorb
aas
ljmp
faddp
inc
iret
dec
into
add
push
ja
jle
jge
mov
push
test
fwait
repnz
adc
test
cmp
ds
sarl
fnstenv
in
popa
popa
push
inc
or
adc
dec
call
mov
lret
cwtl
jns
mov
jae
loope
push
into
jo
xor
or
fildll
dec
ret
bound
inc
arpl
lahf
inc
jb
jno
inc
add
daa
sub
dec
adc
and
jmp
mov
sti
insl
push
fs
enter
or
or
push
adc
pop
lcall
lods
fcoms
jno
or
xchg
in
cwtl
aas
pop
push
jmp
adc
ret
xor
loopne
or
imulb
fistps
sub
xchg
lods
mov
push
pop
dec
sbbl
lret
hlt
xor
andl
cmc
jge
xchg
ja
jge
cmp
dec
pop
test
cli
mov
sub
adc
add
dec
cmp
push
popa
mov
push
sarl
xchg
pop
inc
xchg
adc
xchg
clc
sub
and
shrl
inc
inc
loopne
sbb
loopne
dec
lret
push
xor
dec
sub
sarb
lret
arpl
jg
int
add
pop
inc
sahf
dec
loope
adc
mov
pushf
dec
das
out
popa
js
jae
call
inc
or
sbb
push
ret
jo
scas
add
lock
bound
mov
es
pop
dec
loopne
push
insl
dec
push
mov
loopne
sub
test
in
xor
fs
lcall
adcl
sahf
sahf
lret
or
nop
fs
mov
or
in
iret
out
mov
cli
sti
pushf
pop
push
repnz
xchg
push
lods
and
and
pop
repz
xlat
aaa
add
call
pop
inc
xchg
cmp
lret
and
test
adc
ficomps
add
mov
fs
adc
loopne
mov
int
dec
test
mov
cmp
pop
test
jo
rcrb
xchg
jbe
lock
dec
push
test
das
jo
std
xor
mov
div
mov
mov
sbb
lahf
adc
mov
lock
loope
push
addr16
push
xor
xchg
mov
lret
cmpsb
fsubr
mov
fnstcw
in
jne
outsl
jge
into
inc
movl
das
adc
mov
push
sahf
jbe
gs
pop
into
dec
repnz
cmp
stos
rcrb
jne
xchg
push
call
cs
sub
dec
mov
movsb
cs
and
xlat
daa
out
andb
jo
push
add
iret
and
and
xchg
jmp
sahf
cmp
insl
adc
add
movsl
pushf
xor
cmp
pop
pushf
dec
mov
jl
cmp
inc
inc
cs
cmpsb
and
ds
sub
sub
xchg
shr
sbb
mov
sahf
lods
jg
aas
fidivs
adc
ljmp
jp
dec
mov
push
mov
push
repnz
or
mov
cmpsl
mov
adc
into
inc
jp
add
mov
gs
mov
mov
mov
out
hlt
push
in
cmpsl
mov
sub
ds
xchg
xlat
movsb
insl
fimull
lds
xlat
lods
fdivrl
fwait
hlt
mov
xchg
cmp
add
jbe,pt
or
into
jae
xor
enter
movsb
fwait
ret
imul
cld
or
push
int3
aam
mov
mov
inc
rolb
push
imul
xlat
mov
or
sub
je
mov
dec
mov
aad
sbb
stos
mov
add
icebp
ret
push
mov
mov
inc
adc
jmp
add
cld
das
xchg
inc
sbb
pminub
sbb
dec
or
in
or
daa
push
shll
mov
mov
aam
je
pop
jnp
scas
std
pop
pop
mov
repnz
cmpsb
jmp
rclb
sub
in
jmp
cmc
ficomps
mov
repz
scas
pop
mov
loopne
ret
retw
arpl
inc
loop
adc
or
mov
jp
jae
lahf
sbb
dec
imul
xchg
xchg
add
sbb
push
or
adc
and
jns
outsl
mov
mov
insl
xchg
ds
and
xor
clc
pushf
sub
push
iret
xchg
lds
cwtl
add
clc
je
in
jecxz
mov
mov
ret
pop
mov
inc
jo
inc
pop
rclb
mov
mov
xchg
loope
mov
outsb
cmp
sbb
adc
testl
cltd
mov
cmpb
and
push
lret
test
jge
cmpsb
adc
adc
cmpb
shl
adc
in
xchg
adc
push
fistl
lcall
push
mov
rolb
lds
lods
shrl
inc
and
inc
or
mov
sbb
std
mov
in
mov
stos
cld
test
repz
fwait
jno
dec
inc
xor
push
push
sub
pop
fwait
clc
fists
lock
lds
xchg
push
pop
mov
out
mov
scas
pop
call
xchg
stos
ss
add
das
enter
addr16
ret
or
je
ljmp
xor
stc
arpl
sub
add
push
adc
stos
nop
xchg
xchg
ret
rorb
mov
ds
sti
mov
and
jecxz
xor
jbe
daa
xor
leave
mov
roll
insl
cmp
cmc
lret
pop
xchg
mov
jbe
dec
jle
and
inc
push
add
fstl
ljmp
scas
add
rorb
ds
addb
adc
pop
leave
sbb
and
js
clc
mov
pop
leave
sub
cli
or
pop
add
xor
sub
stc
out
icebp
arpl
pushf
jp
and
lahf
movsb
out
mov
pop
mov
dec
adc
nop
hlt
pusha
fisttpl
mov
pop
icebp
sbb
xor
adc
mov
in
pop
nop
add
outsl
mov
ret
lcall
repnz
test
cmp
xchg
push
mov
xchg
push
cltd
pusha
push
xor
jne
ficoms
ret
mov
jb
frstor
loop
jecxz
dec
xor
mov
xor
mov
scas
xchg
push
inc
sbb
fstl
xor
or
jle
sti
sahf
xchg
int
sahf
in
repz
dec
pop
scas
dec
xor
adc
pop
cld
into
pop
loopnew
out
push
out
xor
mov
jo
mov
mov
pop
call
adc
inc
and
pusha
aaa
mov
int3
mov
push
pop
stos
scas
sti
xchg
adc
or
loope
xchg
ss
or
cmp
xor
lds
mov
sub
or
mov
adc
leave
sbb
add
jae
lcall
rcrl
add
xchg
fmuls
cmpsb
sub
jb
adc
sbb
push
arpl
push
clc
sub
mov
ss
xchg
xor
xchg
fcom
pop
iret
xchg
fwait
xor
lcall
push
daa
aas
int
test
sub
inc
fidivrs
stos
cltd
push
or
js
clc
adc
cmp
cli
xor
adc
push
push
bound
aas
jo
mov
lock
mov
mov
call
clc
pushf
jl
xor
dec
cmp
inc
lock
das
aaa
cmc
push
out
xchg
xchg
xor
cmp
in
and
push
mov
gs
mov
dec
aad
addr16
inc
push
dec
test
loopne
je
mov
std
mov
dec
or
sti
add
sbb
push
mov
movsb
pushf
fs
sub
add
cmp
xchg
inc
sahf
shlb
adc
out
adc
pop
cld
xor
jmp
shll
fs
adc
adc
adc
push
repnz
ret
and
lcall
imul
or
push
ss
pop
and
push
pop
gs
jae
add
xchg
cld
mov
pop
decl
arpl
xchg
mov
and
test
mov
mov
dec
sub
push
mov
xor
lret
adc
test
sbb
jno
mov
adc
cmp
xchg
scas
pop
mov
in
jmp
lea
movsl
mov
outsb
dec
push
rorb
sti
sti
xchg
ret
in
jno
frstor
call
rorb
pushf
push
scas
adc
movsl
dec
outsl
insb
mov
mov
movl
mov
loop
mov
jmp
lods
xchg
std
lahf
hlt
mov
lods
leave
mov
mov
pop
jae
fcmovnu
push
adc
sub
mov
fiadds
lea
sbb
cwtl
bnd
push
fucomi
pop
test
or
arpl
inc
lret
scas
add
cli
sub
mov
outsl
jp
jmp
adc
and
or
push
jp
les
pop
inc
and
mov
mov
scas
jecxz
add
sub
sbb
rcrl
scas
out
outsl
mov
loop
out
aam
mov
stc
and
cmc
insb
imul
mov
inc
outsb
into
mov
and
bts
aad
xor
or
test
and
adc
int3
inc
sub
decb
out
test
in
push
mov
pop
push
int3
cld
mov
out
sbb
sub
mov
dec
les
push
adc
fwait
sub
mov
and
pop
push
ss
mov
repnz
into
xchg
shlb
mov
fldenv
int3
pop
arpl
xchg
js
imul
mov
cmpsb
mov
pop
adc
mov
out
in
in
enter
sbb
xchg
or
adc
repnz
sbb
push
pop
or
dec
leave
pop
pop
fisubl
add
or
fcoml
pop
xchg
fistpl
push
mov
xor
cltd
insl
test
mov
sbb
mov
call
xor
adc
out
nop
sbb
mov
je
dec
insl
sub
out
mov
das
test
jle
int3
popl
or
repz
jo
iret
inc
sub
dec
cmp
add
imul
cmp
mov
push
arpl
jg
repnz
xchg
dec
mov
sub
in
xor
or
xchg
ror
stos
jmp
xlat
and
icebp
es
xor
shr
pop
pop
mov
dec
aad
fwait
lahf
push
jne
in
imul
sti
scas
out
push
xchg
jg
lods
movsb
xchg
gs
push
es
lods
mov
cs
mov
test
push
mov
xchg
call
insl
test
xchg
dec
lcall
imul
pop
mov
in
in
sarb
sub
mov
and
push
adc
xchg
jns
push
xor
js
sahf
call
sahf
fs
mov
lea
ret
insb
lods
jp
mov
cmp
sub
or
mulb
lds
cmp
test
add
mov
sahf
std
xorl
pusha
mov
rclb
decb
mov
dec
in
cmpsb
fstpl
mov
sbb
ret
inc
addr16
movsb
or
pop
lock
ja
add
in
adc
fsubrl
and
jle
jecxz
arpl
add
xchg
aas
mov
mov
and
mov
bound
add
fidivrs
dec
dec
mov
aaa
pop
or
push
xchg
lret
cmp
data16
xchg
out
pop
lds
jo
rclb
pop
test
sbb
sbb
inc
imul
and
lods
push
dec
aam
ret
add
xchg
jecxz
sbb
mov
addr16
pusha
and
scas
outsb
inc
mov
jae
lahf
cmp
mov
call
or
pop
mov
ljmp
fimuls
cmc
jecxz
xchg
out
jmp
jmp
rcrb
ljmp
sahf
jmp
push
jae
adc
adc
sbb
pop
fnsave
movl
inc
pusha
mov
and
into
mov
jb
inc
dec
adc
mov
testl
lret
stos
lods
pop
insl
push
popf
scas
cmp
sub
popf
adc
flds
stos
mov
add
pop
mov
jp
push
les
adc
sbb
mov
lock
sub
or
pop
es
sbb
xchg
mov
inc
cmp
pop
ror
inc
jl
pop
dec
dec
out
mov
mov
aaa
sti
cmp
dec
jns
fcoml
xor
jno
pop
out
or
rolb
aas
cld
stos
push
dec
shll
jno
xchg
xchg
cltd
int3
cmp
push
imul
cli
lods
cmp
xor
jg
pop
push
fisttps
and
fistpll
bound
push
pop
loopne
rolb
ret
icebp
out
sub
push
mov
lret
enter
pop
jle
push
cmpsb
or
or
sub
lods
cli
sti
push
pusha
cmp
loopne
insl
xor
aaa
sarb
ret
jp
leave
xchg
gs
add
sbb
imul
das
icebp
push
cltd
cmp
adc
lock
lret
add
sti
and
data16
cmp
add
inc
loope
scas
dec
test
int
ss
inc
es
mov
xcrypt-ctr
cmpsl
pop
sbb
lods
fisubs
xor
inc
lcall
lods
add
insb
mov
sbb
repz
cmc
sar
mov
adc
int3
loope
and
addr16
mov
ljmp
adc
xlat
movsl
cmp
lods
adc
cmpsb
add
aad
andl
sbb
or
jmp
lret
cli
arpl
incl
push
mov
je
xor
sarb
scas
inc
sbb
test
sub
cld
leave
adc
hlt
insb
bound
stos
movsb
nop
push
addr16
mov
mov
xor
bound
xor
lods
cmp
jb
lea
xor
lods
movsb
ljmp
into
sbb
stos
rcrl
xchg
test
js
cwtl
clc
scas
jle
mov
iret
insl
mov
jl
outsb
int3
jmp
pop
push
fstpl
aad
mov
xor
mov
xlat
pop
les
push
ss
ss
mov
pop
stos
aas
push
xor
xor
jmp
push
and
adc
or
jg
adc
xor
dec
push
push
mov
in
das
stc
mov
das
insb
pop
cmp
xchg
mov
and
xor
into
ret
cmp
lahf
sbb
pop
into
mov
fwait
push
xchg
mov
adc
cmp
lret
sub
fistpll
lahf
ds
inc
jbe
push
cmp
mov
fistpl
xor
pop
fwait
cmp
and
push
das
std
xor
mov
jge
and
inc
lret
add
inc
mov
pop
stos
das
xlat
pop
orl
mov
out
xchg
or
xchg
push
daa
pop
sahf
in
mov
mov
sbbb
rorb
or
mov
loop
mov
test
mov
sarb
fstl
mov
inc
sub
outsb
loopne
outsb
pop
mov
jne
call
jp
mov
pop
stos
ljmp
lea
xchg
sub
cmc
add
rcrl
fdivl
jl
jp
sbb
xchg
xor
xchg
scas
or
xchg
cmp
dec
arpl
fnstcw
jnp
in
sub
pop
in
loopne
jne
ret
mov
out
fwait
sub
push
imul
movl
ja
mov
push
xlat
lock
or
addb
outsb
adc
shrb
adc
push
or
pop
nop
ss
xor
loopne
cmp
adc
push
jp
push
scas
and
orb
and
or
lock
test
mov
imul
xchg
mov
call
call
lcall
push
loope
les
std
divb
jnp
js
bound
sub
iret
xchg
pop
jo
inc
aaa
add
in
lods
sub
in
lahf
ljmp
int
ljmp
jg
imul
insb
out
inc
lea
cltd
je
int
sti
jno
daa
pop
inc
xchg
imul
xor
mov
movsl
xor
jne
loope
testb
iret
movsb
lret
or
leave
icebp
pop
fidivrl
dec
jge
sbb
hlt
pop
lods
ss
pop
push
dec
pop
loop
mov
out
cltd
dec
mov
jo
cmp
dec
adc
cmp
mov
cmp
bound
or
pop
adc
cmp
inc
pop
pop
mov
cmp
sbb
lret
cltd
mov
cmp
pop
push
sbb
and
mov
hlt
ret
out
call
imul
jno
pop
push
sub
mov
cwtl
cmp
arpl
in
lahf
mov
cmp
or
cmp
ja
rcll
mov
out
cmp
out
out
xor
jo
jno
loop
popa
js
mov
push
pusha
cli
mov
and
out
sub
or
inc
pushf
pop
or
or
xchg
xchg
cwtl
icebp
push
mov
incb
repz
or
dec
jae
xchg
stos
add
fisubrl
adc
xor
push
inc
test
fstpl
jg
mov
pop
inc
push
outsb
leave
push
jge
sbbl
sub
pop
pop
push
out
ljmp
leave
pop
push
bound
call
rcrb
jne
outsl
fidivl
or
sub
mov
std
sub
xchg
scas
inc
js
xchg
jecxz
inc
add
test
addr16
xor
mov
xchg
pop
mov
lret
fnsave
pop
and
hlt
fcom
mov
scas
and
sub
xchg
dec
mov
jno
repnz
lods
cld
icebp
and
movb
jg
dec
add
cmp
rclb
push
les
jne
add
mov
or
mov
bound
dec
lock
and
es
push
repz
cmp
push
fst
push
pop
fwait
jl
sbb
lock
daa
lds
loopne
out
xor
in
adc
pop
adc
push
fs
adc
jp
ss
test
cmp
repnz
and
xchg
dec
ds
jb
xchg
repz
les
jg
ja
lret
lods
mov
aas
mov
or
call
repz
out
lea
cmp
sub
insl
ficoms
outsb
xorl
jl
or
cmpsb
das
sbbl
scas
adc
pop
pushw
dec
mov
sub
push
adc
sarl
dec
inc
jmp
lret
leave
adc
sbb
xchg
adc
out
pop
inc
or
pop
xchg
lret
or
sub
mov
leave
lock
push
xor
stos
ret
aaa
sub
dec
xor
push
mov
jbe
fidivrs
sahf
out
or
fwait
lods
mov
cld
push
jp
cmpb
hlt
pop
push
push
inc
sub
ret
jbe
xlat
mov
pop
out
je,pn
pushf
mov
lret
ss
jg
xor
jp
arpl
mov
adc
sbb
out
jle
cltd
dec
mov
bound
mov
dec
bound
scas
into
xchg
bound
imul
mov
push
cmp
test
jecxz
mov
orb
and
lods
lcall
pop
push
xchg
popa
loop
pop
jo
div
ret
in
xlat
lea
pop
push
cmpsb
mov
fistpll
outsl
test
pmullw
cmpsb
fcoml
jl
int3
dec
clc
lods
mov
xlat
aas
adc
fcomps
pop
mov
cmp
sbb
push
mov
sbb
pop
jne
aad
insl
movsb
cmp
dec
xor
repz
les
mov
and
ljmp
xchg
xor
mov
mov
mov
shrl
jecxz
fidivs
xor
sbb
sub
daa
sub
and
mov
ss
jp
les
lret
mov
dec
inc
and
cmp
jecxz
mov
ret
int
sarb
mov
mov
or
es
in
bound
out
mov
push
sbb
imul
mov
pop
jbe
imul
mov
fistps
jb
call
cmpsb
jbe
dec
or
and
and
push
inc
je
mov
cmp
std
es
sbb
xchg
mov
sbb
push
movb
test
mov
cmp
adc
mov
jmp
cmc
sub
aad
mov
sub
mov
int3
mov
pop
in
popf
and
in
mov
push
mov
and
mov
repnz
add
xor
bnd
dec
xchg
fcmovne
inc
push
sbb
mov
cs
cmp
pop
sub
pop
mov
jne
push
ljmp
out
cmp
lods
or
pop
cmpb
push
jg
mov
jb
jmp
imul
repnz
jge
sbb
add
test
mov
lret
jge
jae
jne
and
gs
test
mov
cmp
adc
dec
xlat
inc
lcall
sub
mov
jp
in
add
push
pushf
stos
leave
shr
test
cmp
out
jl
and
or
xchg
nop
xchg
fistpll
dec
imul
add
bound
xor
push
loope
mov
and
aaa
dec
adc
in
xor
repnz
or
xor
scas
aaa
push
jle
test
imul
add
ss
fisubs
sbb
push
adc
push
jns
repnz
mov
movsl
adc
mov
push
imul
arpl
pusha
adc
pushf
mov
cmp
sahf
call
xchg
pusha
rclb
mov
dec
pop
push
mov
movsl
sbb
pop
rcl
in
sub
lock
outsb
mov
mov
leave
dec
pop
push
out
fmul
add
inc
adc
sub
and
sahf
or
pop
ficomps
arpl
push
sbb
orl
push
andl
inc
or
or
jecxz
jecxz
jo
cmp
lret
adc
mov
fidivs
das
push
addr16
mov
dec
ljmp
jb
scas
dec
mov
cltd
dec
dec
fstpl
mov
mov
xchg
enter
or
mov
rcrl
gs
mov
cmp
ja
outsl
lcall
loope
ret
nop
add
fs
lds
dec
jb
stos
std
adc
ret
ja
cmpsb
xor
enter
scas
sub
jge
add
cmpsl
lods
mov
test
pop
fmul
push
scas
ljmp
inc
jb
js
add
js
ds
cmp
ror
and
dec
push
mov
imul
out
jle
js
lods
lods
xchg
insl
fsubrs
sarl
inc
in
jbe
pop
cwtl
mov
sub
test
push
mov
xor
call
decb
sar
jl
push
movsl
test
push
cmp
add
sub
out
insb
mov
or
ljmp
mov
xor
jbe
sub
mov
sub
pushf
cmpsb
notl
or
mov
into
hlt
in
and
out
loopne
adc
rcrl
out
jp
out
mov
sbb
in
dec
insl
ret
cmpsl
inc
lods
loopne
out
gs
test
push
adc
or
aas
iret
lds
popa
stc
aas
push
pop
and
out
pop
add
in
mov
mov
sub
adc
aaa
mov
mov
inc
add
push
jno
pusha
cmp
enter
xor
sbb
dec
sbb
jle
in
or
into
repz
jp
into
cmpsb
rclb
rcll
cs
mov
pop
mov
inc
jg
push
add
ss
mov
pop
mov
cltd
cmp
jl
or
lret
fisubl
js
lahf
or
cmp
pusha
push
adc
mov
mov
sub
in
mov
popf
test
ljmp
and
stos
and
stc
outsb
in
fsubrp
ljmp
sub
into
xor
xchg
mov
enter
sti
ret
sbb
icebp
and
or
loope
daa
xchg
pushf
xchg
mov
xchg
mov
mov
xor
rorb
gs
cltd
push
inc
sbb
icebp
insb
dec
xor
add
loopne
xchg
and
sahf
das
jmp
shrb
xor
sub
outsl
cmp
inc
or
jge
jnp
rorl
popa
sti
dec
jmp
jecxz
mov
cmp
imul
dec
sub
test
lods
jno
lahf
aam
inc
jo
dec
jle
ja
ficoms
sub
aas
cmpsb
push
pop
outsl
adc
lds
lods
test
ljmp
imul
cmpsb
lock
lods
jg
psrld
inc
mov
sub
sahf
sub
lahf
sub
pusha
leave
lahf
popa
and
dec
pop
loop
mov
call
cmpsl
dec
sbb
cmp
mov
sub
push
or
shrl
loope
adc
fsubrl
sbb
xchg
adc
fisttps
in
cmp
dec
sub
rclb
mov
add
dec
popa
xchg
rcrb
mov
es
sub
hlt
sahf
and
pop
adc
push
cld
inc
aaa
jecxz
cld
ret
sar
or
mov
adc
jle
inc
in
sbb
in
fisubl
outsl
sbb
psadbw
sbb
ficoms
bound
sbb
cld
mov
and
push
cltd
in
xor
shll
test
lret
push
cmp
das
clc
cli
dec
dec
jne
rolb
xchg
xor
push
jg
dec
mov
mov
test
push
cld
sub
pop
cmc
mov
outsb
push
stc
jae
xor
sbb
out
leave
int
add
inc
pop
sbb
lahf
repnz
jbe
and
stc
out
sbb
sbb
pop
scas
sbb
mov
shrb
loop
xchg
mov
mov
jl
cwtl
jle
mov
pop
pop
adc
or
and
mov
nop
das
icebp
js
xchg
push
stos
and
stc
xlat
in
cmpsl
xchg
xchg
xorb
inc
lret
jmp
test
fcoms
push
ret
lea
jnp
xor
mov
mov
sbb
pop
push
mov
cmp
jg
cld
das
imul
lret
sub
dec
hlt
in
jge
mov
or
vmovmskpd
xchg
xor
or
fstps
les
mov
jecxz
xor
sahf
in
imul
sub
mov
dec
xchg
inc
mov
push
fsts
hlt
push
pop
loope
add
xor
sbb
cmp
mov
jmp
sti
inc
xchg
sbb
add
mov
out
rdpmc
std
add
dec
mov
mov
jo
sahf
dec
mov
add
lret
scas
mov
mov
int
fsubs
aam
jg
push
jge
or
in
dec
mov
lcall
inc
out
xor
mov
sar
pop
dec
iret
push
dec
ret
movsb
jo
xchg
out
jne
sbb
pop
dec
mov
jecxz
xchg
aaa
aad
mov
sbb
jne
jl
jno
push
add
fidivrs
push
pop
push
cwtl
das
fistpl
or
pop
mov
sbb
cmpsl
scas
xchg
or
in
icebp
or
add
push
filds
jo
incl
sub
mov
xor
iret
fs
add
jno
aas
jo
lds
mov
inc
mov
or
jge
lcall
add
sbb
add
and
jmp
lret
xchg
rclb
and
inc
add
mov
xchg
ja
xor
push
leave
sbb
fdivp
clc
lods
push
push
leave
mov
test
xchg
dec
pusha
loop
lret
xor
xor
stc
mov
jg
or
mov
sti
add
mov
sbb
add
jmp
or
xchg
sbb
addr16
pop
inc
ds
fistl
xchg
ja
mov
mov
icebp
andb
inc
fwait
sbb
stos
movsb
push
push
imul
push
dec
shl
xlat
and
stos
mulb
popf
or
lahf
enter
std
xor
mov
ret
fcmovnb
lock
dec
inc
xor
pop
call
sbb
jb
call
out
dec
in
mov
xor
add
adcb
pop
sub
ret
test
les
stos
adc
iret
pop
insb
dec
and
std
pop
stos
sbb
xchg
pop
or
mov
ret
push
int3
push
mov
hlt
loopne,pt
pushf
and
dec
mov
xchg
push
stos
fistl
stos
cmp
cmp
iret
push
mov
sahf
cltd
adc
jae
test
sbb
cmpsl
lods
xchg
jl
mov
xor
mov
add
xchg
xchg
jmp
ljmp
fldcw
push
fimuls
jp
cmpb
iret
gs
dec
loope
xor
xchg
test
sub
fwait
leave
xchg
push
or
inc
jg
outsl
or
pop
jno
stc
fs
adc
jmp
out
xchg
sahf
ss
xchg
loope
shlb
sbb
loopne
cmp
xor
xchg
xchg
fcomps
jecxz
ficoml
cwtl
mov
out
sbb
push
mov
dec
xchg
dec
xchg
movsl
fiaddl
mov
loop
xchg
sbb
adc
xchg
and
inc
and
fstpt
ficomps
sbb
sbb
add
cmp
stos
push
dec
sbb
mov
sahf
shr
ds
push
stos
imul
or
lret
lods
shrb
push
lahf
jge
ja
xorl
arpl
dec
mov
stc
scas
daa
pushf
aam
stos
xchg
jb
jb
call
repnz
ljmp
out
sti
mov
jmp
mov
xchg
pop
aad
jo
jae
mov
popf
addr16
divb
mov
ds
inc
mov
mov
pop
sbb
or
xor
sbb
rolb
in
ret
sbb
decl
mov
xor
loop
jb
testl
sub
pop
gs
inc
nop
and
icebp
bound
and
outsl
popf
into
add
mov
cmp
xlat
inc
mov
enter
mov
popl
inc
push
lahf
jmp
subb
popa
ficomps
popa
fistl
lods
insl
shrb
push
movsb
xchg
mov
sub
pop
addb
dec
mov
es
aad
dec
inc
mov
mov
jne
orb
dec
sub
adc
lods
push
inc
cmpsl
sub
das
in
and
mov
loope
push
fidivrs
jmp
repnz
fucomip
lods
test
fbld
js
das
jnp
int
and
leave
es
out
pop
enter
dec
and
adc
sahf
pop
lcall
mov
add
or
dec
aad
in
cli
jnp,pt
sub
jns
mov
stos
lods
cmp
call
xchg
push
inc
insl
jge
pop
out
push
insb
dec
mov
das
mov
mov
cwtd
jb
test
push
sbb
divl
rcrb
icebp
in
nop
enter
pop
cld
dec
xchg
test
into
pop
push
adc
and
dec
cli
cmp
in
pop
and
cmp
and
and
xchg
aaa
mov
pop
mul
subl
mov
dec
or
xchg
je
cmp
adc
and
or
push
dec
fs
js
mov
mov
popf
push
dec
rolb
sbb
in
xchg
dec
in
cmp
pop
lret
and
jb
xchg
pop
jmp
push
mov
pop
in
cmpsb
aaa
loope
nop
aam
pop
in
lret
xchg
mov
scas
xchg
stos
pop
mov
aas
enter
add
xchg
into
add
mov
sub
or
je
out
in
mov
mov
mov
xlat
mov
push
ret
fndisi(8087
rcl
xchg
mov
repnz
lcall
xchg
dec
iret
xor
mov
xchg
add
movsl
in
cli
or
insb
gs
push
lock
inc
push
aam
scas
and
jle
and
cmc
leave
mov
jne
add
leave
in
bound
std
cltd
inc
xlat
pop
or
xorl
imul
inc
cwtl
pop
mov
inc
cmpsl
test
push
mov
mov
dec
jmp
std
add
mov
lock
push
iret
outsl
xchg
or
sti
or
mov
lcall
fisttpl
mov
inc
xchg
mov
pop
sbb
mov
inc
xlat
int
je
xchg
pop
in
mov
arpl
jg
xor
or
cmpsb
dec
cmp
ja
mov
add
pop
cmpl
or
addl
lods
je
push
jb
call
bound
into
testl
cmpsl
push
mov
iret
mov
and
mov
in
repnz
cmp
enter
aad
jp
adc
loopne
movsb
pop
cmp
in
sbb
jb
push
cmp
add
inc
outsb
div
sbb
shlb
clc
bswap
mov
popa
cmp
enter
and
mov
aad
mov
push
or
adc
aaa
popl
mov
mov
sbb
mov
leave
pop
ljmp
loop
rcr
mov
inc
enter
adc
or
fdivp
mov
daa
jae
adc
mov
inc
adc
adc
insb
mov
pusha
add
inc
out
dec
mov
push
pop
cld
movsb
mov
test
fistpll
push
jge
push
out
add
inc
mov
out
imul
ljmp
aam
jnp
push
fwait
outsb
cmp
ds
pop
fwait
xchg
pop
sub
sbb
push
jo
adc
int3
cmp
push
ret
es
stos
push
stc
pop
cmpsl
mov
lock
lahf
push
clc
repz
add
orb
sub
dec
cmpsl
adc
aaa
imul
shl
cmc
add
cmp
test
fdivl
adc
push
xor
cmp
aaa
and
out
int3
cmpsb
aam
scas
jo
leave
sub
inc
hlt
icebp
and
test
jmp
jne
push
aad
add
xchg
dec
cmp
in
rcr
push
xchg
lret
lret
scas
imul
push
ljmp
mov
icebp
mov
pushf
sbb
enter
icebp
cmp
sbb
cltd
dec
pop
pop
adc
inc
pusha
pushf
xor
imul
int3
cmp
xchg
xlat
std
xchg
mov
cmp
sarb
out
stos
repnz
mulb
bswap
mov
pop
jp
jo
sub
mov
test
pop
sbb
cmp
movsl
fnstenv
add
das
cmc
pop
mov
outsb
push
stos
es
idivb
or
ror
jge
rolb
loop
mov
pop
push
in
adc
stos
imul
inc
xchg
fs
mov
les
ss
push
sbb
lcall
loopne
es
xchg
loopne
cmpsl
adc
fstpl
ljmp
cmpsb
dec
test
add
loope
fdiv
stc
or
ficoms
push
lcall
xchg
xor
imul
movsb
out
dec
adc
jmp
lods
mov
push
flds
lret
xor
std
std
lds
inc
and
pop
add
fdivs
xor
cmp
scas
or
add
bound
mov
mov
call
push
lock
rorl
mov
xchg
cs
mov
inc
sub
das
dec
test
stos
cmp
mov
mov
pop
mov
add
loopne
aaa
push
xorb
ja
pop
mov
mov
mov
add
pop
xchg
mov
inc
inc
fwait
enter
mov
xor
dec
push
lods
popa
xor
pop
inc
push
push
and
xchg
jmp
or
sbb
hlt
push
jns
sub
popa
cmp
repz
rcrb
stc
push
addr16
dec
and
and
xchg
add
and
lods
jo
pop
jo
sub
cltd
lcall
xchg
pusha
pop
push
sub
cmc
daa
negb
push
sub
jb
mov
fmuls
sbb
mov
inc
adc
stc
cvtpi2ps
sub
icebp
sbb
inc
inc
test
mov
and
mov
mov
pusha
aaa
sbb
test
xchg
mov
mov
call
stos
pop
adc
push
mov
fcoml
aad
and
cs
in
pop
push
dec
into
lcall
push
leave
mov
fsts
xor
or
mov
mov
pusha
scas
or
mov
jmp
inc
cmp
loop
mov
xchg
outsb
adc
iret
jo
lcall
mov
cmp
jge
push
sbb
ja
dec
loop
repnz
popa
arpl
movsb
xor
scas
push
jg
adc
mov
cmc
sub
cmp
xor
sti
repnz
ret
mov
and
adc
sub
testb
push
popf
and
lds
add
mov
jo
mov
sti
lea
pop
xor
sbb
inc
xchg
sub
cmp
mov
test
mov
add
jmp
mov
loop
lret
bound
xor
popf
lahf
jb
das
cmpb
repz
mov
aad
jbe
sbb
xor
aaa
mov
push
fisubs
pop
jns
leave
cmp
jne
add
repnz
pop
sbb
cmp
push
pop
inc
dec
fstps
inc
xchg
gs
and
out
sub
cmp
inc
inc
movsb
pop
fistpll
fistps
or
push
shll
sahf
imul
std
cmp
ljmp
jmp
xor
cmc
push
pushf
jb
pcmpgtw
mov
loope
cmp
cmpsb
mov
pushf
movsb
or
pop
cwtl
xchg
cmpl
sbb
pop
xchg
pop
call
hlt
and
sub
lods
inc
cmp
adc
mov
add
adc
xorl
sub
xor
popf
lods
cmc
push
push
out
xchg
bound
mov
mov
mov
add
xor
clc
clc
enter
cmp
fistps
dec
and
lods
or
sbb
mov
and
mulb
mov
fst
jns
fldcw
test
sarl
movsl
gs
xchg
push
xchg
loope
jg
fbld
roll
fistpll
mov
mov
dec
inc
xchg
add
lret
movsl
add
dec
lret
scas
imul
jae
popa
and
das
daa
push
insb
cmp
popf
xchg
fs
mov
or
in
xchg
cmpsl
xor
add
stc
mov
and
cmp
frstor
push
out
pop
xor
mov
or
inc
mov
sub
xchg
xchg
cmc
mov
jecxz
add
push
js
xchg
xor
add
or
loopne
cli
aad
test
mov
sub
dec
mov
adc
jbe
jle
xchg
push
aam
addr16
int
push
fwait
aaa
or
pusha
sbbl
mov
dec
rclb
pop
add
sub
out
out
or
outsl
or
fs
aaa
bound
out
inc
loope
daa
mov
movsb
push
mov
dec
ds
rorl
iret
jne
mov
sahf
lahf
popf
sti
xchg
sbb
cmpsb
or
aaa
push
int3
jb
and
mov
dec
mov
loope
cmc
xor
mov
jnp
movsb
clc
addr16
fs
mov
not
xchg
dec
sar
xchg
rclb
jp
pop
jo
inc
push
or
clc
cmp
jp
movsl
mov
cltd
dec
stc
dec
scas
xchg
ret
sub
add
nop
sub
adc
rclb
xor
fmul
push
mov
xchg
pop
xchg
frstor
movsb
pop
not
mov
lret
mov
pop
pop
inc
and
ljmp
fnstsw
inc
sub
lcall
cmp
mov
sub
andb
cmovl
je
js
jbe
hlt
dec
push
in
iret
in
arpl
pop
push
jnp
jne
inc
add
sub
mov
dec
push
adc
sub
in
dec
mov
xor
dec
clc
inc
mov
xorb
or
push
iret
icebp
cld
xchg
pushf
fnstcw
jecxz
jge
lcall
insb
pop
ljmp
push
lcall
or
xor
repnz
jns
mov
or
mov
mov
sbb
out
pusha
push
mov
push
insb
ds
mov
stos
adc
hlt
jo
dec
ret
dec
loope
aam
push
aad
popa
pop
jmp
divb
dec
test
stos
jnp
subl
lods
jge
mov
pop
stos
lea
popf
stc
shlb
clc
notl
adc
loop
dec
lahf
inc
pop
and
jle
daa
faddl
shrb
lods
notb
fdivl
or
sarb
push
cltd
in
icebp
cmpsb
jnp
sub
or
dec
insb
mov
ja,pn
into
mov
cmp
xor
das
inc
ficomps
sahf
mov
stos
jo
ljmp
xor
out
jg
aad
fsubs
data16
xorl
jb
sbb
out
cmp
push
jo
jl
lcall
and
mov
imul
ror
xlat
inc
fxch
jns
int
xchg
fs
mov
out
test
aad
data16
lret
into
daa
or
cmp
rcrl
cmp
inc
test
jmp
pop
adc
pop
imul
mov
xor
out
adc
push
mov
int3
out
adc
addl
aaa
cli
pop
sub
or
adc
adc
fst
push
test
jbe
add
jb
ret
sub
lods
divl
sub
stos
xchg
cmp
and
sub
call
jne
cmpsb
or
and
fbstp
or
mov
jnp
inc
jno
sub
ret
cmp
cltd
sbb
mov
ss
jle
clc
add
mov
push
fdivl
adc
adc
aaa
xchg
pop
repnz
and
jl
inc
jge
pop
sbb
push
cwtl
in
into
mov
jne
jne
les
jne
insl
ficoms
outsl
outsl
pusha
icebp
rcrb
pop
pop
das
fwait
or
bound
adc
shrl
cmp
stc
push
xlat
movsl
jns
dec
jecxz
push
stos
jmp
clc
out
std
dec
stos
idivl
jecxz
sub
daa
fistps
jno
jnp
mov
push
dec
loope
adc
xor
mov
jl
outsl
andb
lcall
adc
pop
adc
dec
stos
adc
subb
andb
inc
adc
fdivr
mov
and
lods
adc
aam
or
outsw
sub
sbbb
addr16
lret
mov
stos
in
and
das
pop
testb
dec
and
int3
push
pusha
pushf
sbb
insb
and
test
orl
inc
clc
aas
xor
hlt
dec
inc
andb
xlat
cs
sbb
lahf
fisttps
and
mov
dec
dec
cmova
pop
pop
mov
xchg
leave
push
outsb
jae
sbb
dec
pop
imul
dec
xchg
imulb
aas
in
pop
push
mov
pop
stos
pop
jp
jb
ret
movsl
loopne
ds
mov
lret
cmpsl
or
scas
call
stc
mov
test
pop
call
dec
loope
inc
aam
jno
cwtl
mov
mov
add
aam
lahf
cmp
sarl
or
imul
dec
test
inc
lods
push
inc
scas
mov
xchg
and
dec
lcall
jo
pop
inc
into
ret
mov
dec
push
or
pop
and
mov
clc
mov
sahf
jns
xchg
and
loopne
insb
test
pop
sub
xor
add
inc
sbb
jmp
cmp
in
cmp
mov
cld
add
xor
pop
das
jbe
or
push
dec
lods
sbb
mov
xor
test
in
xchg
loop
add
andb
xor
rorb
push
add
inc
sbb
inc
pop
adc
lcall
or
sbb
test
or
pop
push
mov
addr16
cmpsb
sub
into
imul
push
pop
push
ficomps
adc
movsb
ficomps
test
int
jp
or
pop
pop
xchg
hlt
lds
jle
stc
jns
jae
ficomps
push
sub
cli
cmp
xor
dec
or
cmpsl
loop
pusha
mov
xor
aad
addr16
cltd
testb
ficoml
or
fbld
and
xchg
cmp
mov
add
cmp
push
fsubs
jecxz
pop
sbb
ss
add
lods
jp
mov
push
into
rclb
dec
sub
xorl
sub
mov
xlat
inc
test
pop
loop
cmpsl
sbb
arpl
mov
xor
add
test
adc
sbb
sub
iret
mov
cmp
mov
ret
adc
aad
lods
adc
cmpsb
mov
or
add
inc
fucomp
lods
add
pop
dec
popf
and
gs
test
pop
add
mov
cmp
or
sbb
mov
xchg
shrb
sbb
push
in
call
jmp
push
jge
fbstp
dec
inc
loopne
in
fmull
push
punpcklwd
jp
gs
dec
mov
jmp
out
js
lock
push
in
cmpsl
ficomps
inc
loop
loopne
push
test
pop
mov
repz
mov
pop
lods
leave
sahf
mov
dec
into
sahf
jno
lea
mov
popa
cmpsb
js
lods
jb
andl
out
sub
divb
orb
adc
and
inc
sti
scas
pop
inc
sbb
ffreep
addb
dec
jbe
shrl
mov
xchg
or
scas
daa
mov
push
cmp
testb
lahf
pop
dec
pop
add
imull
insl
inc
call
xchg
pushf
xor
out
les
dec
outsl
adc
test
inc
xchg
fisubl
pop
adc
sub
mov
and
dec
ret
and
xor
dec
sub
mov
lret
mov
xchg
adc
mov
repnz
xchg
mov
jne
xchg
and
pop
xorl
and
cmc
cmp
in
out
push
inc
ds
adc
mov
xchg
jae
dec
inc
inc
out
pusha
daa
out
stos
xor
push
cwtl
lock
movsl
daa
sbb
mov
and
inc
push
in
inc
xchg
sub
jmp
xlat
ror
or
lret
mov
ljmp
sbb
inc
mov
jecxz
fwait
xor
pop
jg
push
insl
aad
test
cmpb
xchg
test
ret
xchg
in
lahf
cli
sub
mov
ret
in
dec
sub
adc
cmp
stos
lea
lcall
test
lahf
push
lock
adc
movsl
or
mov
outsl
push
dec
and
pop
xchg
arpl
in
fcoml
test
inc
jne
data16
xchg
pop
lock
cmpsb
stos
arpl
popf
cmpsb
jo
pop
jl
or
mov
movb
xchg
jbe
bswap
divb
cmc
stos
mov
scas
mov
lret
dec
std
sub
ds
xor
inc
loopne
sbb
xchg
sbb
call
imul
mov
mov
sub
and
scas
ljmp
fs
out
pop
out
cmp
ja
cmp
lret
jmp
mov
je
push
out
gs
ss
dec
sub
mov
mov
add
std
iret
dec
loope
lods
cwtl
sbb
mov
ret
lods
cmp
enter
stos
xor
sub
push
idivl
ret
cmpsl
or
repz
fbld
lahf
mov
jmp
loope
rol
fisubrs
jnp
dec
or
sbb
iret
aad
loope
adc
jmp
dec
dec
xor
mov
arpl
jno
mov
fisubl
sbb
iret
and
jns
inc
add
cmp
jl
sub
mov
jns
out
jp
fcomi
jbe
or
lcall
ds
pop
inc
xor
mov
mov
or
sbb
dec
or
pop
cmp
sbb
mov
pop
inc
mov
ljmp
inc
add
into
insl
push
das
inc
cs
divb
and
pop
arpl
cli
dec
aad
lds
xor
in
pop
xchg
mov
popf
pop
aaa
fcoml
cmp
sbb
aam
mov
or
in
pop
lds
pusha
sbb
int
pop
add
inc
addl
addr16
add
fdivl
push
or
xor
dec
dec
ja
adc
mov
psubusw
aas
jg
pusha
mov
mov
ss
pop
mov
call
xchg
sahf
cltd
xchg
lods
mov
push
daa
mov
and
and
push
movsl
scas
push
imul
mov
movsl
lcall
push
pop
pop
bound
daa
xchg
jne
insl
add
push
ss
sub
mov
push
cmpsl
nop
jl
in
rolb
in
mov
cltd
jne
xor
xlat
mov
jecxz
xchg
fisttpll
outsl
fwait
icebp
call
mov
sub
dec
lret
sahf
and
lds
xchg
shll
pop
ljmp
mov
mov
xor
jnp
fsubrl
adc
pop
cmp
inc
mov
cmc
jmp
incb
mov
popa
popa
mov
rorb
loope
pop
jno
pop
xchg
jae
fisubrs
ja
xor
loop
inc
push
mov
xor
xor
mov
xchg
cld
inc
adc
in
xchg
push
rcrl
adc
dec
jle
lret
jp
push
mov
test
cmpl
or
mov
out
inc
test
jmp
in
out
jns
jnp
mov
nop
insl
ret
mov
bound
lahf
sti
push
ret
push
stc
int
fisttpl
aas
lea
mov
popf
test
push
arpl
gs
add
dec
imul
insb
data16
nop
mov
pushf
and
scas
addr16
inc
mov
dec
jo
sub
pop
sub
daa
pop
xchg
ds
sub
mov
ljmpw
inc
and
pop
lret
movsl
push
jbe
sub
stos
add
test
xchg
lahf
xchg
cmp
leave
data16
loope
sbb
mov
add
repz
or
mov
call
out
mov
iret
inc
mov
cmc
jl
cmp
add
fs
ret
aad
out
int3
jg
pusha
pop
and
jge
sub
jno
lock
sub
or
mov
jnp
push
inc
lahf
adc
loope
and
sti
inc
push
adc
lea
insl
repz
rclb
std
fisubrs
rcll
dec
lods
jmp
jne
cmp
ret
mov
jl
or
push
dec
inc
mov
mov
enter
cld
int3
movsb
lcall
ss
mov
jno
fsubl
xor
mov
cmpsl
aam
mov
movsb
push
out
dec
inc
push
jecxz
rorl
das
jae
andl
push
sbb
jbe
stos
jnp
dec
mov
xor
cmp
repnz
mov
adc
fs
push
sti
lock
outsl
lods
xchg
roll
hlt
pop
adc
inc
out
mov
shll
insb
daa
in
mov
daa
aad
leave
mov
and
inc
mov
cmc
jb
int
sbb
outsl
jle
inc
push
adc
cs
mov
jnp
mov
mov
insb
and
jnp
jae
xor
sbbl
cltd
xchg
fistpl
pop
fildll
rolb
ret
xchg
jbe
pop
jl
in
scas
dec
inc
fs
sub
or
jge
xchg
mov
lods
stos
xchg
push
xchg
xchg
aam
mov
jl
jmp
xor
sbb
es
mov
in
loope
xchg
lds
pop
jecxz
lods
movsl
rcll
inc
and
fidivl
pop
test
mov
int
out
testl
fcoml
adc
dec
decl
mov
int
sbb
cmp
mov
xchg
mov
in
lods
push
add
cli
push
xor
and
or
cmpsl
mov
xchg
xor
mov
dec
jns
push
pop
std
sbb
xchg
jmp
pop
addl
movsb
call
mov
outsl
pop
jge
mov
xor
leave
mov
outsb
or
push
cmp
pop
mov
repnz
cmp
repz
xchg
cwtl
loop
xor
out
out
or
add
insb
aad
mov
cmp
incl
sbb
mov
push
dec
xlat
rolb
mov
leave
fsubrs
test
popa
sbb
loope
divb
jmp
scas
mov
cmp
cmp
and
pop
mov
cmp
xchg
sub
sarl
mov
jl
jns
les
fidivrl
pop
xor
mov
push
mov
scas
sub
popa
aas
mov
sbb
jecxz
mov
sbb
aas
xchg
leave
fisttpl
into
ja
cli
and
popa
test
pop
mov
xchg
add
lods
data16
out
mov
adc
pusha
jmp
gs
mov
or
mov
dec
call
inc
repz
lods
loope
stos
je
and
pop
iret
idivl
xchg
scas
lahf
test
fidivrl
inc
popf
movntq
aad
ss
subb
sub
popf
dec
fistpl
mov
dec
mov
out
jg
sarl
xchg
and
xchg
andb
adc
in
in
cmc
jns
adc
loope
cli
mov
xor
cmpb
pop
dec
cmc
mov
rol
sbb
mov
xor
stos
mov
dec
dec
adc
mov
jns
mov
mov
add
pusha
inc
pop
sub
ror
loope
mov
aas
aas
cmp
jmp
xlat
orl
adc
add
lock
xlat
aaa
in
repz
xchg
mov
out
mov
jns
jl
pop
popf
cmpsl
xchg
xor
cmpl
pusha
dec
inc
nop
in
in
dec
sub
sbb
fcoms
pusha
push
sbb
mov
and
lret
add
fmull
sub
jb
sub
adc
ret
repnz
sahf
inc
mov
or
xor
or
sbb
jne
sahf
cld
aaa
xchg
out
mov
pop
push
push
adc
mov
sbb
xchg
xchg
pop
adc
enter
ficoml
jnp
out
add
sub
mov
pop
ljmp
imul
loopne
dec
sbb
jg
add
sub
das
rorl
insb
jne
pop
and
cld
adc
lea
adcl
xor
fiaddl
add
popa
push
push
adc
pop
xlat
inc
test
add
stos
scas
mov
xchg
cmp
lahf
mov
outsb
sbb
mov
data16
pop
enter
loope
scas
push
repz
repz
jno
adcl
ljmp
jbe
jnp
insb
or
mov
pop
in
inc
je
push
in
dec
repnz
addb
dec
std
push
popf
push
addr16
pop
cmp
imul
cs
data16
jnp
xchg
mov
rcl
jge
sbb
enter
mov
mov
insl
pop
out
cmp
dec
in
inc
ret
pop
push
and
xchg
add
jmp
inc
nop
sahf
dec
aaa
sahf
xchg
loopne
ror
adc
std
aad
push
mov
mov
xor
dec
and
adc
fdivl
stos
outsl
cltd
xchg
mov
xchg
mov
dec
xchg
outsb
xchg
shlb
xchg
sbb
inc
push
inc
stc
dec
cmp
or
lahf
aad
add
cmpsl
mov
jmp
cmp
xlat
inc
add
jnp
mov
cmp
mov
test
adc
hlt
jg
mov
pop
sub
mov
orb
stc
into
lods
pop
ss
sbb
jge
insb
mov
cmp
loopne
icebp
jae
insb
lahf
sti
cmp
sarl
and
xor
fistps
cmp
fimull
push
jle
ret
shl
cmp
dec
pusha
out
pop
fs
repnz
lret
das
cwtl
notb
test
ret
ror
cmp
push
outsl
mov
xchg
sbb
mov
out
push
addr16
pop
dec
in
jns
dec
add
push
test
loop
add
and
mov
inc
loop
loopne
dec
fxch
popa
nop
sar
sub
leave
xorb
dec
and
xor
rcrb
inc
mov
lcall
jecxz
push
test
push
push
gs
int
xor
sbb
pusha
dec
arpl
es
xor
cwtl
pop
dec
inc
mov
movsb
and
push
fadd
sub
push
fidivl
add
ja
sub
adc
mov
xchg
cmc
pop
shrl
mov
dec
mov
push
dec
inc
jg
sub
sub
sbb
jg
test
sub
loopne
sbb
arpl
fstl
push
fmul
leave
inc
pop
js
jmp
sub
pushf
es
lahf
comiss
sub
imul
xchg
push
dec
popa
subb
js
add
fisttps
mov
nop
xor
shll
xchg
pushf
bound
jne
adc
add
fdivrs
push
cld
es
add
sbb
and
hlt
dec
test
bswap
faddl
mov
inc
jl
loope
js
add
push
in
cltd
jp
push
add
and
rclb
lods
js
mov
sub
imul
mov
lods
xor
scas
mov
mov
adc
popf
cmpl
out
or
stos
outsb
imul
cmp
addl
cmp
mov
mov
rcrb
daa
push
movsl
and
cltd
jne
pop
push
rclb
xor
sbb
inc
sub
mov
ret
mov
pop
pop
movsb
fmul
add
dec
fsub
pop
fs
xor
mov
jae
icebp
pop
sbb
sbb
icebp
cwtl
jl
sub
dec
les
ds
out
sub
cmp
addl
pop
call
adc
imul
jge
push
iret
lock
inc
stos
and
sub
daa
scas
mov
daa
inc
aaa
shlb
mov
hlt
bound
push
inc
in
repz
xchg
je
ljmp
cmc
push
insb
dec
mov
mov
xor
push
jae
loop
iret
out
mov
sbb
add
xchg
pop
xchg
sti
sbb
inc
mov
push
out
push
inc
fstpl
in
mov
push
pop
lds
sbb
jb
add
loopne
clc
pop
xchg
clc
cmp
ficompl
inc
mov
mov
loopne
cmpb
mov
addr16
fwait
shrb
stos
xor
xor
test
mov
jnp
mov
inc
jle
es
dec
lods
xchg
fs
push
mov
lock
cmp
inc
xchg
dec
pop
insl
xchg
sub
adc
sbb
shlb
or
push
or
lods
xchg
mov
cmp
mov
sbb
sbb
outsl
roll
call
enter
jno
add
xchg
arpl
fiaddl
jne
add
stos
into
out
xor
adcb
dec
enter
stc
pop
or
into
mov
negb
les
cmp
xorb
pop
mov
mov
push
xchg
or
icebp
xor
mov
jb
pop
sub
iret
fcoms
mov
jle
lock
push
mov
or
jmp
mov
call
mov
pop
sub
in
dec
lret
je
mov
sub
mov
jl
fisubrl
push
je
fisttpll
mov
or
mov
shrl
int
int
push
lock
or
xorb
cltd
cmc
sub
inc
fstpl
jnp
and
jp
and
inc
inc
ret
mov
shr
adc
dec
aaa
ja
daa
jmp
mov
mov
dec
aad
mov
lock
push
shl
or
lds
les
lds
sub
ss
stc
cld
sbb
pop
jecxz
jae
inc
cltd
jp
xchg
in
or
dec
ss
loope
inc
shl
les
sahf
pop
lea
adc
es
test
and
int
loop
or
or
sbb
cwtl
inc
sarb
fstpl
test
sbb
push
mov
lods
inc
sbb
dec
pop
faddl
add
mov
insb
or
adc
cld
and
out
dec
idivb
into
arpl
cmp
or
mov
pop
jp
mov
jnp
mov
popa
nop
cmc
out
jg
jae
shlb
rorl
xchg
ds
testb
in
les
outsl
mov
mov
push
mov
dec
movsl
xor
pop
adc
inc
lds
imul
popf
jno
inc
lahf
rol
clc
jnp
push
add
ja
or
push
xchg
and
popf
xor
orl
xchg
call
stos
je
cmpl
dec
pop
push
in
fucomi
mov
sahf
jo
sub
and
imul
leave
adc
push
ret
and
cmp
push
mov
and
or
cmc
dec
cltd
clc
jbe
inc
loop
fiaddl
adc
ret
mov
fisubs
xchg
iret
dec
inc
mov
lret
flds
repz
xor
mov
shlb
jo
mov
mov
cs
xor
into
cmp
mov
lock
sub
stos
xor
xchg
inc
cmovno
shrl
jmp
mov
mov
dec
in
scas
subl
mov
loopne
jecxz
xor
jnp
imul
das
je
into
rcl
jae
jp
nop
lret
sbb
fsubr
shll
xchg
les
out
mov
mov
add
xchg
cmp
mov
sbb
cmc
lret
popa
sbb
in
xor
or
jo
je
daa
mov
cmp
dec
cs
mov
and
je
je
sbb
push
pop
mov
mov
sub
int3
add
imul
ret
test
and
into
push
lret
sarb
xor
aas
adc
sbb
loop
pop
pop
das
fwait
aam
and
mov
sarl
sahf
pop
cmp
repz
mov
fwait
pushf
aam
add
rorb
push
lds
outsl
push
jo
cltd
icebp
aas
fs
inc
ret
and
pop
jb
sub
mov
mov
retw
jne
push
xor
lahf
xchg
sbb
je
aaa
jnp
lds
test
leave
xchg
pop
bsr
xchg
cmc
or
sub
pop
jp
scas
ds
jge
add
pextrw
movsb
jbe
push
adc
out
jle
pop
call
mov
add
or
mov
mov
cmc
mov
push
and
pop
cmp
and
bound
repz
adc
mov
call
popa
xchg
je
add
ljmp
enter
or
shrl
mov
and
inc
push
inc
push
mov
push
cwtl
or
pop
lock
scas
outsb
cld
fldcw
cltd
xor
or
aad
inc
dec
cmp
lahf
lods
inc
shll
pusha
mov
cmp
test
sahf
cmp
mov
roll
shrl
out
mov
push
mov
stos
mov
clc
jge
and
cmpsb
mov
sarl
xchg
lock
ds
push
push
mov
mov
popf
cmp
xchg
arpl
dec
fmuls
push
cmp
sub
ret
jge
and
lock
inc
sub
daa
mov
inc
add
ret
out
ret
aas
les
xchg
data16
rclb
outsl
pushf
fldcw
fmul
xlat
mov
cmp
pop
push
mov
or
shll
push
lret
dec
push
push
shl
jle
aaa
imul
push
mov
por
sub
jns
int3
mov
cmc
idiv
adc
cmp
inc
cmpsb
pop
ret
lahf
ss
fistl
push
in
and
inc
icebp
mov
decl
bound
or
scas
push
or
mov
js
mov
push
mov
pop
pop
ljmp
lret
dec
outsl
sbb
leave
daa
imul
ljmp
movsb
xchg
push
ss
pop
xor
mov
pop
sub
fbld
leave
pop
popa
fnstenv
rorl
enter
aaa
pop
inc
int3
fimull
dec
adcl
aad
call
shl
dec
push
pop
mov
or
mov
mov
stos
inc
cmpsb
mov
test
shrl
mov
jl
mov
pop
jp
xor
stc
inc
sbb
xchg
sbb
jecxz
subl
into
mov
outsl
repnz
pop
sbb
jl
push
dec
sbb
or
js
pusha
sbb
xchg
mov
lds
xchg
dec
leave
jne
mov
divl
dec
mov
lahf
movsl
fsubr
call
insb
cmpsb
cmp
fs
outsb
movsb
push
xor
stc
and
xchg
imul
stos
sarb
pusha
add
cmp
out
xchg
das
outsl
std
mov
mov
pop
inc
xor
xor
or
cmpb
mov
cmp
cwtl
mov
xchg
scas
push
jle
push
imul
loope
sbb
jo
or
adc
insl
ljmp
mov
mov
mov
push
pop
sarb
loopne
bound
test
push
mov
jae
ljmp
pop
pop
adcl
cmp
cmp
pop
mov
icebp
std
and
in
ds
pop
ret
and
jl
ret
push
hlt
mov
add
stc
jns
mov
arpl
xchg
add
bound
sbb
mulb
testl
cltd
gs
aam
lret
scas
lcall
and
in
xor
sbb
mov
in
int
add
mov
test
pusha
jbe
aad
mov
cmpsb
adcb
sbb
mov
imul
das
repz
pop
cltd
clc
pushf
aad
popf
and
sub
mov
mov
inc
sti
dec
mov
jp
and
dec
sbb
inc
les
push
mov
mov
dec
pop
fistpll
sahf
lahf
pop
cmpsl
enter
pop
cmp
icebp
xor
mov
loop
jbe
sbb
push
into
frstpm(287
call
dec
arpl
dec
scas
daa
cmc
mov
or
mov
cmpb
test
bts
je
cmp
ficompl
xchg
out
in
je
lret
inc
lock
or
call
test
repz
mov
addb
mov
movl
push
in
loopne
mov
int
sbb
mov
mov
xchg
dec
inc
add
jg
xor
jae
push
inc
mov
ror
sbb
imul
mov
jnp
sbb
stc
and
in
mov
adc
ficompl
icebp
cld
movsl
xchg
fldl
out
gs
and
mov
enter
inc
cmc
dec
loope,pn
mov
ljmp
movsl
add
jns
xor
clc
xor
test
mov
add
or
lods
xor
in
fcompl
loop
mov
add
aaa
push
or
xor
mov
pop
lds
in
fs
push
fs
lods
fsubrs
mov
inc
aaa
adc
mov
mov
jl
in
pop
addr16
loop
shr
subb
movsb
sti
add
test
sub
aad
js
or
and
jae
cltd
dec
mov
add
ljmp
je
das
xchg
fpatan
xor
push
add
pop
jl
loop
clc
mov
aaa
cmpsl
fnstcw
push
stos
test
fwait
int3
in
ss
pop
cmpl
pop
lods
add
xor
xlat
jle
mov
jbe
cmp
sbb
sbb
xor
xchg
movb
xchg
addr16
xor
sahf
in
sbb
clc
aas
pop
flds
lahf
adcl
adc
les
aad
addr16
push
sti
into
cmp
sub
movsl
xor
cwtl
jbe
pop
cmp
lret
stc
and
popf
sub
pop
iret
imul
cmp
xor
adc
xchg
call
loopne
addl
sbb
cs
ret
add
insb
adc
cmp
test
xchg
jnp
push
sub
adc
inc
xchg
or
jns
adc
punpckhbw
outsl
leave
mov
mov
and
pop
movsb
inc
aam
jns
xor
and
test
out
sahf
adc
pop
into
decl
addr16
jg
jbe
pop
dec
adc
sub
sbb
out
int3
cld
xchg
pop
gs
addl
inc
lods
mov
out
sbb
mov
xchg
mov
in
add
adc
jmp
push
jmp
jecxz
push
pushf
sub
inc
adc
pop
and
push
daa
mov
and
pop
scas
cwtl
stos
sub
dec
mov
xchg
in
push
andb
enter
icebp
cmpb
jns
xchg
sub
negl
std
mov
pop
mov
insl
jmp
call
dec
repnz
movsb
test
mov
xchg
or
cmp
aas
sub
lods
jg
pusha
icebp
stos
psllw
inc
and
add
rorl
jb
sbb
or
arpl
bound
mov
imul
inc
push
andb
arpl
int3
add
rcrb
fisubl
push
or
addb
fs
daa
lret
cmp
adc
addl
mov
insl
pop
xor
and
xchg
test
loope
xor
pop
aas
js
test
aaa
loopne
mov
shrl
in
cmpl
push
mov
jecxz
mov
fwait
stos
cmc
test
xor
ret
inc
xor
call
push
dec
xor
outsl
inc
rcl
adc
stc
jne
add
add
jns
out
repz
int
int
xor
incl
push
adc
mov
rorb
mov
cmp
movsb
call
mov
sbb
xor
jp
xchg
test
jae
repnz
cmp
mov
les
pop
nop
stc
aad
cwtl
inc
lods
mov
fwait
xor
and
sbb
sub
jnp
mov
outsl
dec
fucompp
pop
testl
stc
cmp
pop
dec
js
lods
adc
sbb
lock
not
xchg
mov
dec
mov
bound
loope
push
stc
iret
sub
mov
mov
fdivs
xor
sbb
mov
ds
jl
inc
xchg
out
jbe
dec
lret
test
push
iret
rcrb
xor
je
inc
mov
nop
xchg
mov
bound
jmp
in
xchg
and
jl
cmp
test
adc
lcall
outsl
or
jge
sub
aas
sbb
loopne
xor
imul
movsb
jp
cli
push
in
and
sub
enter
scas
pop
add
icebp
mov
movsb
stc
pop
mov
mov
pop
std
insl
or
cs
cltd
lock
mov
rcll
clc
loopne
or
pop
or
subl
cmp
daa
xchg
add
orb
shll
sub
pop
push
inc
mul
sub
sbb
mov
enter
push
hlt
sub
scas
test
je
inc
movsb
jns
bound
rcrl
dec
add
mov
out
stc
sbb
lahf
aam
mov
ret
inc
dec
stos
stos
shll
sub
rcrl
push
dec
pop
and
inc
and
sbb
adc
or
push
bound
int
xchg
inc
xlat
movsb
jno
std
movl
pop
rcr
vmread
mov
xchg
imul
sbb
leave
das
mov
repnz
aas
sahf
adc
sbb
and
es
enter
fildl
sahf
int3
loopne
sub
es
mov
mov
cltd
mov
cwtl
push
lea
mov
sbb
jmp
nop
je
and
fwait
or
or
mov
std
and
arpl
xlat
stos
xor
and
call
fiaddl
data16
xchg
popf
xchg
ds
xchg
lcall
inc
fisttpll
inc
push
cwtl
sbb
nop
jp
jle
insl
mov
push
pop
sahf
push
out
cli
js
inc
popf
nop
mov
ds
sti
mov
mov
popa
sub
sahf
stos
fnstcw
adc
or
xchg
push
cltd
out
adc
mov
scas
push
jle
cmp
mov
adc
pop
sbb
and
cmpb
mov
pop
ljmp
daa
fisubrs
testl
andl
insb
sti
push
adc
into
loope
cmpsb
mov
add
dec
inc
out
imul
les
mov
je
cmova
stc
ds
cs
pop
icebp
jge
xchg
or
sti
jb
push
jbe
inc
dec
jl
mov
lds
insb
stc
fwait
adc
call
cmc
jmp
and
pop
mov
scas
adc
bsf
ljmp
cmpsl
jae
cmp
mov
call
fmuls
cmp
ss
inc
mov
inc
sub
hlt
cld
fcomip
and
xor
xor
pop
push
cmp
jp
or
and
cmc
imul
rolb
or
inc
cli
inc
jns
and
test
inc
popf
xchg
cli
insl
inc
sub
ja
mov
push
pop
push
frstor
repz
inc
push
mov
or
sti
pop
adc
pop
cld
or
lret
in
cmp
xor
push
or
or
mov
xchg
sub
add
jne
lahf
cmp
pusha
ffreep
push
cmpsl
repnz
mov
test
divb
xor
aam
add
loopw
xchg
sub
mov
cmc
in
es
into
mov
push
jbe
xor
and
out
mov
sbb
xor
imul
cld
inc
popf
das
mov
enter
inc
sub
adc
mov
jnp
xor
scas
test
inc
clc
aas
jg
or
add
inc
or
push
xorb
mov
cmp
xchg
sub
fisubrs
mov
push
fldcw
xchg
xchg
or
pushl
lahf
sub
fld1
psubusw
inc
clc
push
pop
mov
inc
mov
jmp
loop
or
jne
inc
test
andl
in
xchg
xchg
aad
into
cmc
xor
dec
ljmp
lock
mov
push
push
addr16
in
xchg
mov
inc
xor
jo
std
cs
scas
lahf
jl
sarb
aam
std
lea
dec
or
xor
sub
mov
hlt
stos
xchg
add
jb
shrb
sbb
into
aaa
int3
sub
mov
mov
sbbb
shrl
xchg
ljmp
aad
test
pop
xchg
orb
or
fs
sub
das
xchg
dec
sub
incb
in
jb
cmpsb
sub
lret
push
clc
aas
daa
jo
xchg
and
clc
addr16
mov
es
push
dec
lds
sbb
jbe
inc
in
das
insb
loopne
cmp
and
iret
insl
clc
movsb
mov
pop
mov
arpl
add
sub
lret
cmp
mov
outsl
addl
aam
aaa
cs
dec
push
ficomps
dec
pop
jmp
fidivrs
ja
or
scas
push
fistl
ret
das
stos
inc
cltd
jle
sahf
add
xchg
push
or
cmp
inc
mov
mov
xchg
inc
fisttpll
sub
xchg
cmpsb
clc
es
mov
jbe
sub
push
adcl
cltd
movsl
lods
mov
shll
mov
mov
fwait
imul
lods
in
out
sbb
aad
push
outsl
adc
xor
out
leave
dec
and
mov
imul
fcmovnbe
mov
lret
mov
cmc
negl
ljmp
lcall
test
cmp
and
je
outsl
jmp
cmp
or
ret
mov
mov
es
or
in
pushf
pop
push
pop
mov
push
mov
jb
shlb
hlt
push
cmpsl
out
jp
pop
fisubs
aaa
add
xchg
popa
mov
imul
push
mov
fmull
ret
inc
push
cmp
inc
les
icebp
popa
jbe
mov
push
imul
fbld
int
ja
clc
out
dec
stos
es
xchg
inc
xchg
lret
clc
insl
xchg
fsubr
movsb
mov
pushf
clc
enter
jg
ret
cmc
inc
push
scas
cld
stos
and
popf
add
sbb
xor
mov
mov
imul
and
std
xlat
lock
sbb
adc
subb
sub
xchg
jge
sbb
jecxz
out
fisttpl
cmp
inc
xchg
cmc
lea
pop
insl
push
scas
and
mov
cmc
fstps
mov
sub
lock
jns
das
jb
lods
or
lock
pop
and
add
jmp
jmp
xor
scas
icebp
lock
lcall
mov
dec
popf
dec
or
mov
cmc
inc
mov
test
xlat
mov
rcll
ljmp
mov
jecxz
dec
add
push
adc
lret
and
shlb
or
testb
jns
mov
or
dec
xchg
jp
sahf
mov
lods
or
pushf
shll
out
les
jge
or
pop
out
pushf
mov
sbb
adc
into
outsl
mulb
fs
push
outsl
sub
inc
mull
push
outsl
dec
jne
xor
pushf
xor
xlat
dec
mov
pop
hlt
lar
rcr
cs
mov
mov
jge
cwtl
negl
out
fildll
mov
aas
or
leave
pop
mov
fs
dec
dec
lahf
adc
rclb
pop
pusha
push
jbe
shl
aaa
xor
push
arpl
js
pop
xchg
or
cs
sub
test
adc
adc
cmp
das
cmc
lock
je
insl
lret
mov
pop
pushf
mov
jge
loop
sbbl
jge
push
sarb
lea
addr16
outsl
dec
inc
fstps
adc
das
jle
into
and
pop
imul
inc
sbb
ror
mov
cmc
jecxz
arpl
sub
ds
mov
xlat
shll
sti
mov
lahf
push
dec
mov
push
loope
push
icebp
mov
std
lods
aad
arpl
loop
outsb
inc
lds
pop
out
mov
subb
cmp
xchg
jle
sub
mov
mov
orb
lea
add
std
jle
das
sarb
je
cmpsl
push
es
lret
sub
pop
ret
insb
cmp
jno
hlt
push
xlat
stos
xor
cmpsl
mov
loopne
test
call
adc
repnz
pop
jl
mov
adc
adc
notl
sarb
xchg
nop
xchg
add
in
std
cmpsl
mov
add
pop
inc
or
adc
push
popa
mov
enter
cli
mov
imul
cmc
movsb
push
cmc
or
pop
pushf
pop
mov
inc
jbe
mov
out
lds
add
jp
add
popl
lods
pop
clc
fstpt
jmp
push
pop
and
ficoml
repnz
popa
cmc
sbb
xchg
adc
inc
sbb
push
cmpsb
xor
xchg
pop
add
popa
push
ret
fmull
or
ljmp
shl
inc
dec
xchg
or
and
push
dec
addr16
and
xchg
sti
mov
mov
xor
xchg
push
mov
incl
bnd
dec
cmc
inc
pop
insl
mov
mov
mov
lds
or
xor
aas
mov
loope
push
repnz
sub
cwtl
mov
shl
jno
fidivs
les
push
mov
push
out
cmp
adc
in
cli
mov
push
cmc
push
gs
mov
sbb
push
xchg
movb
rolb
fstpl
aas
push
fimuls
inc
or
xsha256
cmpsb
aad
adc
sub
cmpsb
gs
jae
and
ds
pop
xor
lea
inc
mov
xchg
jecxz
mov
test
lahf
fs
stos
fiadds
aas
add
adc
data16
addb
aam
bound
mov
sub
bound
push
mov
aad
push
xor
in
push
imul
pop
mov
pop
mov
sbb
mov
pop
icebp
lea
sub
xchg
in
add
cmp
lock
shll
roll
dec
mov
cmp
mov
sub
jge
stos
jle
or
and
imul
inc
cmp
ds
adc
lcall
fisttpl
mov
push
call
bound
scas
pop
mov
dec
dec
popa
test
mov
inc
mov
outsl
push
aad
scas
out
dec
shrb
jg
pop
je
sbb
xorl
jp
sbb
imul
inc
sbb
inc
dec
xlat
loop
sbb
cmpsb
test
xchg
icebp
cmp
push
out
aaa
popf
mov
insl
scas
cmp
outsb
jmp
dec
scas
cmp
sbb
jo
xchg
test
jecxz
fsts
mov
cli
xor
inc
or
popf
push
movsb
and
xchg
push
mov
fstl
xchg
and
pop
inc
add
sbb
ret
outsl
pop
xchg
cmp
xor
pop
dec
lret
mov
mov
and
sbb
xor
popf
ljmp
cmp
scas
in
or
xchg
ficoms
je
mulb
pop
repz
stos
out
jne
shl
dec
xor
add
fiadds
shr
out
sub
push
mov
mov
jns
cmp
insl
aam
cmpsb
push
add
mov
mov
mov
jnp
pop
cmc
popf
rorb
loope
sub
inc
inc
xor
mov
xor
sub
aas
icebp
mov
inc
iret
sbb
mov
mov
lret
xchg
dec
sbb
mov
or
and
in
lea
es
jo
push
mov
sbb
xchg
mov
xor
push
bound
outsb
cmpsl
cld
pop
sbbl
mov
mov
jne
icebp
ss
push
xor
imul
lods
insl
lret
cli
test
ror
jo
xchg
push
ss
cmovae
or
and
je
push
stc
out
push
xor
jns
outsl
add
aad
or
mov
xlat
or
cltd
mov
cmpsl
leave
add
mov
js
dec
in
or
imul
push
ret
cmp
lods
jmp
sub
lds
hlt
and
add
jnp
cmp
xor
mov
std
les
jno
repnz
mov
xchg
fwait
pop
mov
pop
pop
jg
shl
push
iret
int3
fstpl
aaa
incb
adc
jns
icebp
stc
test
stos
sub
test
push
or
add
dec
mov
aad
pop
jl
mov
add
mull
fadds
adc
iret
jb
inc
cmp
mov
pop
sbb
jb
into
sbb
adc
hlt
iret
xchg
jp
cmp
add
mov
ror
and
pop
mov
xor
inc
or
pop
fcomp
lds
and
inc
clc
mov
or
adc
push
mov
xchg
cmp
pusha
mov
lea
das
stos
loop
or
mov
movsb
aad
add
pop
cltd
decl
cmp
mov
ss
xor
add
cmp
mov
mov
inc
pop
repnz
inc
enter
push
push
jg
dec
js
ret
fstps
in
push
sbb
subb
mov
out
pop
ja
push
mov
and
mov
pusha
js
cmp
push
test
out
adc
enter
cmp
jne
inc
add
iret
faddl
push
cli
fistpl
pop
xchg
ret
jg
and
lock
addr16
xchg
xchg
pop
pop
or
leave
sub
push
std
xchg
test
addr16
orb
mov
nop
xchg
out
add
fs
adc
popa
sbb
rcrb
in
insl
mov
xlat
mov
out
ja
mov
xchg
add
inc
lods
xchg
sbb
fistps
std
xchg
icebp
sub
dec
jmp
cli
jmp
cmp
mov
dec
daa
adcb
mov
adc
negl
daa
rorb
pop
addb
iret
xchg
jno
ficompl
xlat
and
xor
aas
shll
stc
sbbb
and
jle
inc
dec
sbb
or
jae
xor
inc
pop
enter
lret
andw
adc
mulb
add
dec
int
in
cmc
dec
lcall
pop
push
mov
pop
pop
arpl
pop
lods
bound
ret
push
xor
cmp
cmc
test
call
aad
mov
pushf
adcl
xlat
adc
add
inc
cwtl
add
lods
rcrl
mov
xchg
pop
mov
call
orl
in
fisubrs
push
pop
adc
pop
adc
jp
stc
xchg
inc
mov
push
pop
mov
cld
or
or
in
cmp
sub
iret
fs
and
aaa
jg
stos
jae
call
scas
mov
loope
mov
dec
dec
and
leave
movsl
mov
sbb
gs
xchg
clc
mov
xor
push
mov
lret
nop
xor
je
pop
xor
cli
pop
movsl
imulb
jmp
mov
test
mov
imul
push
scas
jb
jbe
sbb
xchg
orb
out
addr16
pop
or
jno
add
fwait
and
lea
xlat
mov
mov
test
mov
rorl
pop
xor
mov
dec
cwtl
sbb
rcl
scas
xor
jmp
mov
scas
fcompl
sbb
gs
xlat
push
dec
or
sbb
or
orb
push
fdivr
cmpsb
cmc
push
cmpsl
into
bound
xor
les
sub
cmc
stos
aas
cli
dec
lcall
sbb
jp
idivb
frstor
popa
pop
add
std
mov
inc
jmp
xchg
sub
fnsave
inc
mov
xchg
or
mov
cmp
lret
sub
imul
test
pop
fmull
call
cmpsb
loopne
xchg
pop
call
mov
inc
push
shll
std
jnp
mov
std
or
jo
addr16
mov
pop
xor
push
sbb
addr16
mov
mov
adc
call
fsubrl
lods
or
inc
ss
and
pop
adc
jp
push
and
and
test
mov
rcll
mov
cmp
and
out
dec
mov
insb
repz
ficoms
loop
repz
imul
inc
mov
adc
cli
popf
jmp
out
mov
sbb
push
outsl
ret
movsl
aad
xchg
mov
lcall
inc
push
inc
jl
add
sahf
addr16
das
mov
dec
addr16
push
inc
mov
xchg
loop
mov
fcmovne
add
dec
stc
add
fistps
sahf
jge
das
lds
divl
sbb
jecxz
dec
enter
ret
imull
je
daa
out
fwait
add
ret
mov
imul
adc
test
jg
movsb
sbb
adc
dec
and
insb
inc
push
mov
ret
inc
lods
push
ss
sub
sahf
shrl
aad
out
insl
xchg
jbe
cmpsb
xchg
mov
lahf
ds
stos
add
lock
jns
pop
pop
lret
vpaddd
inc
fildl
inc
addr16
and
mov
push
scas
inc
enter
jecxz
and
aam
add
ret
inc
xchg
jb
sbb
iret
ficompl
jmp
out
mov
push
scas
cltd
pop
xor
sub
sti
push
xor
insl
ss
ffree
mov
cmp
js
cmp
mov
adc
mov
xlat
repz
repnz
out
cmc
pop
insl
sub
jns
out
inc
sub
ret
xor
cmpsl
jl
adc
das
sti
ds
mov
fucomp
adc
sub
inc
sub
add
or
push
insb
mov
add
mov
daa
cmp
dec
pop
or
clc
addl
je
mov
lods
mov
clc
fdivrl
jo
mov
stos
jb
movsl
in
ficoms
data16
push
adc
inc
sub
cli
nop
inc
mov
cmp
dec
xor
xchg
or
pop
int3
dec
jae
mov
inc
enter
mov
fcmovnbe
lock
loop
lret
loope
xchg
sub
jl
sub
clc
movsl
rcrl
pop
inc
pop
push
popa
cmp
shrl
dec
dec
inc
mov
and
popf
sbb
out
cmp
or
iret
jnp
xor
cmc
add
pop
scas
inc
add
sub
or
mov
sbb
sbb
adc
mov
and
lcall
lea
xchg
xchg
mov
push
aad
ja
fwait
pop
mov
mov
and
les
stos
inc
lea
mov
pop
push
fidivl
insl
arpl
in
addr16
ds
mov
rcll
xchg
jne
xor
shrl
inc
popf
test
cs
popf
sub
add
sub
and
inc
or
pop
jbe
dec
out
ja
pushf
sub
inc
mov
out
fwait
lcall
pushf
sbb
pop
in
scas
sbbl
mov
dec
stc
clc
sbb
mov
clc
aaa
inc
fdivrl
adc
dec
std
fcoms
fs
outsl
ds
add
gs
fs
pop
loopne
mov
icebp
rolb
xchg
mov
adc
mov
and
hlt
les
xlat
jno
inc
add
mov
adc
lods
xchg
dec
push
rcll
mov
dec
cmp
xor
mov
mul
dec
mov
inc
test
lock
sub
pop
rolb
xchg
xchg
ficoml
mov
repnz
lods
lods
xor
insb
cmp
mov
ja
mov
lret
insl
out
pop
push
push
inc
xor
xchg
cmpxchg
outsb
scas
push
jl
gs
fcmovbe
lods
pop
xor
jmp
xchg
fstps
push
or
xlat
dec
jmp
je
ja
mov
clc
in
cmc
or
dec
cmp
cmpsb
mov
es
mov
inc
lods
or
scas
repz
outsb
and
jns
rcrb
cmp
call
loope
dec
and
cmp
mov
out
jg
in
cmpsl
push
push
jp
push
xchg
stc
xor
lods
addr16
and
jmp
inc
cmp
sbb
ficoms
js
push
mov
les
mov
lods
jmp
test
cmp
dec
pop
push
sbb
or
mov
imul
test
or
mov
scas
add
rcll
mov
negb
cmc
flds
fsubr
xlat
pushf
mov
inc
cltd
bound
js
mov
dec
or
loope
jg
pop
and
fstpt
ds
sbb
das
movb
inc
out
popf
cmpsl
les
fidivrl
push
call
mov
push
cmpl
jnp
cmp
inc
into
and
imul
popf
mov
testb
fwait
movaps
rcl
mov
xlat
aam
push
adc
aas
arpl
fsubs
pop
lcall
mov
jae
rclb
lds
xor
push
lea
xchg
movsb
rcll
mov
ret
jnp
dec
inc
or
test
or
in
test
testl
mov
adc
inc
xchg
mov
sub
psllw
shlb
and
imul
sbb
sbb
ja
sti
rolb
rolb
sbb
dec
pop
add
aaa
test
dec
pusha
outsb
hlt
lret
sub
test
int
xchg
stc
dec
movsb
into
stc
ret
dec
std
cwtl
or
rcr
push
add
cld
movsl
jge
xor
popa
popf
fistl
mov
adc
pushf
inc
jl
jge
and
add
fdivl
pop
aam
dec
dec
jecxz
push
aad
push
cld
mov
jno
fcmove
pop
jecxz
xchg
mov
hlt
rcrl
loope
test
and
orl
loopne
add
xor
push
loop
push
mov
fucomp
iret
cli
mov
or
cli
jne
xchg
bound
dec
test
stc
mov
inc
or
xchg
adcb
jo
into
movsl
xchg
dec
jae
pushl
adc
pop
dec
and
scas
xchg
or
or
xchg
sbb
xor
shl
fisttpl
mov
dec
orl
adc
adc
adcl
cmpsl
or
xchg
mov
sbb
cmpsl
push
lods
xchg
cmp
sub
out
fidivs
mov
dec
jg
ja
out
ja
sub
imul
jno
imul
xor
pop
lret
sub
jecxz
dec
scas
dec
adc
ljmp
mov
jne
and
jbe
popa
sub
xor
xchg
xchg
pop
pusha
es
push
sub
bound
pop
add
mov
jo
rorl
aaa
pop
xor
mov
cmpb
ret
pop
inc
cmp
aad
push
xor
add
mov
xlat
dec
sub
push
cmpsl
sub
push
sbb
int
scas
adc
gs
mov
or
icebp
and
in
mov
negb
push
jmp
jmp
das
sti
jae
mov
sub
push
les
or
into
mov
mov
pop
imul
xor
popf
cmpsl
call
andl
jg
dec
repnz
or
test
cltd
mov
mov
clc
jp
inc
mov
je
cmc
repnz
pop
pop
push
mov
pusha
lcall
fwait
sub
pop
mov
sub
fstpt
xor
sub
mov
sub
bound
jmp
sbb
mov
outsb
pop
outsb
mov
and
test
imul
shr
sub
fsubrl
std
and
xchg
mov
repz
pop
call
outsl
push
and
xor
testb
movsl
out
xchg
cli
inc
and
repnz
sbb
push
dec
sub
sub
imul
mov
repz
pop
cltd
int
inc
cmp
test
xchg
jb
mulb
dec
fimull
xchg
inc
cmp
adc
jno
dec
or
je
pusha
and
ljmp
inc
add
out
push
leave
lahf
lock
int
ds
and
adc
fimuls
fwait
push
mov
cli
sarl
dec
andl
mov
cmc
mov
add
xchg
sub
mov
adc
mov
pop
shll
pop
cli
inc
subb
outsb
enter
inc
das
xor
mov
pop
outsb
in
je
push
mov
les
xlat
je
test
lret
shrl
sub
add
sbb
push
imul
jmp
pop
aam
imul
cwtl
xor
filds
fidivl
pop
outsl
adc
mov
loop
sub
movsb
push
ficompl
pop
shll
and
or
outsb
push
pop
dec
jnp
das
out
sub
mov
loope
iret
int3
fiadds
call
xor
in
and
cltd
scas
mov
xchg
mov
add
mov
fmuls
into
and
inc
push
addr16
sub
pushf
into
js
repnz
mov
pop
add
mov
hlt
mov
jne
dec
addl
data16
out
push
clc
mov
mov
call
pop
sbb
fsub
adc
jno
fisttpll
mov
adc
pushl
jecxz
xor
cmpsl
xchg
pop
loop
dec
xchg
xor
mov
dec
or
insl
je
mov
lcall
xchg
lods
fwait
jmp
loop
sbb
pop
ret
mov
mov
mov
icebp
adc
mov
cmpsb
xchg
push
mov
out
mov
push
add
test
jae
pop
jecxz
mov
cs
ljmp
cwtl
fdivrs
sbb
mov
jp
iret
fisubrl
pop
jb
or
imul
outsl
andb
dec
movsl
adc
jp
rcll
outsl
inc
int3
shll
je
in
repnz
push
test
mov
push
push
mov
in
insb
shlb
lret
lea
data16
adc
ficomps
xchg
sub
add
cmpsb
jae
mov
or
cwtl
sbb
sbb
std
imul
pop
andb
xchg
and
hlt
into
test
sub
inc
or
xchg
pop
or
push
jb
out
ficoml
pop
lahf
cmp
or
adc
and
push
inc
mov
cwtl
out
xlat
inc
xorb
fldcw
xor
xchg
sub
push
cwtl
sbb
jmp
lock
icebp
pop
push
dec
mov
mov
rorb
xchg
mov
faddl
hlt
xlat
js
push
mov
incl
adc
jb
and
add
jae
pop
movsb
mov
cmp
ja
shr
or
xor
mov
test
inc
lea
inc
add
mov
lock
pop
mov
loop
push
dec
stc
inc
into
and
lds
iret
pop
shll
jnp
dec
into
leave
mov
pop
imul
sub
imul
mov
xor
jle
loop
sbb
cmp
sub
mov
inc
mov
hlt
rolb
adc
push
cld
fdivr
mov
mov
scas
fcmovbe
lods
andl
mov
xchg
sti
push
sub
clc
mov
mov
xchg
xchg
xor
in
push
push
inc
aad
sub
rclb
cli
xchg
xchg
lods
and
and
inc
jmp
xor
lea
push
std
loop
ror
sbb
out
scas
adc
stos
out
mov
or
mov
in
push
and
xchg
mov
orl
xchg
inc
jns
mov
in
jp
bound
cmp
mov
out
clc
sbb
lods
mov
scas
fiaddl
sbb
push
pop
loope
ret
push
jle
sbb
pop
pop
pop
jb
jnp
mov
ja
fisttps
int
add
cmp
cmp
andb
das
daa
ret
adc
fisubl
mov
lret
inc
sub
testb
sbb
mov
aam
mov
movsl
imul
stc
fildl
scas
jnp
push
fwait
push
ror
jl
dec
ss
inc
sbb
lahf
cli
out
adc
je
xor
cmc
xchg
lods
lret
add
sub
push
lcall
xchg
dec
sahf
pop
int3
mov
mov
incb
outsl
icebp
or
test
mov
subl
adc
xor
int3
xor
fwait
sti
imul
adc
jl
int3
aaa
jae
cmp
fbld
mov
arpl
pop
subl
pop
pop
shld
xor
xlat
arpl
pop
fistpl
pop
mov
sbb
stc
scas
icebp
mov
adc
pop
pop
cmpl
mov
xchg
push
call
rorl
dec
imul
push
xor
push
mov
add
dec
out
add
hlt
mov
jno
and
ss
and
inc
pop
push
int3
sbb
bound
inc
lods
mov
add
call
mov
xchg
cmp
popf
push
cmp
mov
or
mov
je
inc
mov
gs
test
stos
out
push
enter
cmpsl
movsl
mov
dec
pop
jle
dec
cwtl
cmp
std
push
or
lock
out
push
sub
inc
xlat
movsl
daa
aad
js
dec
rorl
into
jg
loop
nop
aam
or
xor
pop
ret
xor
sbb
inc
sub
ret
add
icebp
popa
sub
adc
cmpsl
ret
sub
ret
adc
or
aas
clc
push
lea
mov
pop
test
lret
aad
ja
and
aam
xlat
and
dec
test
add
cmp
es
push
int3
mov
mov
mov
fldcw
dec
mov
test
loopne
sub
sbb
js
cmp
les
jno
pop
data16
and
xor
shll
push
ds
xchg
icebp
push
and
sub
mull
pop
test
xor
jb
pop
cmc
outsb
test
test
call
adc
adc
rolb
iret
loope
movzbl
and
pop
xchg
push
sub
fstps
aam
rcl
fs
xchg
test
cs
sub
jge
scas
xor
lcall
ret
xchg
pop
test
xor
add
mov
es
sti
mov
inc
fcmovu
or
xchg
pushf
fcomps
flds
mov
loop
lock
mov
std
push
jecxz
ror
and
jle
jp
adc
sub
push
xor
movsb
hlt
mov
mov
push
test
rcll
cs
leave
in
rcr
push
repnz
mov
jno
mov
adc
sbb
add
loopne
mov
stos
or
mov
push
aad
sub
cmp
test
mov
pop
mov
push
aad
mov
pop
sbb
cmp
aas
jge
mov
cmp
pop
push
fildl
add
outsl
lcall
sub
ja
add
pop
cmpb
mov
xor
pop
or
sbb
or
and
pop
mov
mov
inc
popa
pop
repnz
sub
push
add
xchg
fistpll
adc
push
xor
pusha
repnz
roll
xchg
inc
imull
dec
and
movl
and
push
test
fwait
lods
es
lods
xor
dec
movsl
scas
mov
xor
add
push
roll
test
and
mov
sbb
call
fsubrs
fimull
repnz
dec
and
int3
js
inc
dec
push
mov
sahf
jb
int3
lea
inc
imul
js
mov
addr16
push
mov
or
call
pop
shll
enter
adc
xor
xlat
dec
or
adc
js
jbe
addr16
dec
cmp
es
add
adc
stos
lcall
imul
int
add
sub
ret
inc
jecxz
pop
out
lret
andb
les
pop
pop
mov
xchg
pop
sub
push
iret
mov
sahf
xor
in
cmpsb
call
imul
mov
leave
dec
addl
pop
mov
iret
jle,pt
std
sbbb
jl
dec
pushaw
cwtl
push
sbb
les
pop
add
into
into
imul
ret
sahf
xchg
jp
sub
rolb
or
jmp
add
jmp
rcrb
jl
ja
dec
jne
mov
and
mov
lcall
add
popf
inc
or
inc
xlat
movsl
cmc
sbb
cmp
mov
mov
push
je
push
cwtl
lret
mov
in
cli
and
xlat
add
scas
outsb
and
pop
divl
sbbl
xchg
in
cmc
sub
jnp
inc
scas
cltd
or
mov
adc
imul
sbb
xchg
cmp
or
dec
sbb
pop
and
jp
xor
aam
cmp
rclb
xchg
xchg
pop
xor
jg
cmpsb
aam
inc
test
xorl
sub
sbb
xchg
cmpl
mov
dec
add
push
das
daa
nop
dec
fimuls
jmp
xchg
adc
aam
mov
jle
ficoml
mov
xchg
sbb
sub
and
jae
cmpsb
cmpsb
dec
in
jmp
fs
cmc
adc
out
add
and
scas
mov
lret
pop
adc
lcall
push
push
cmp
data16
out
and
xchg
scas
fdivl
ss
pop
or
into
lods
sub
jmp
lods
cmp
dec
into
sub
test
cli
test
hlt
repnz
dec
adc
sub
cmp
push
add
and
ljmp
mov
dec
daa
iret
cmp
gs
or
add
sbb
cmp
lret
sbb
loop
mov
xchg
std
xor
dec
orb
dec
aaa
sbbb
sti
loope
enter
and
fisttpl
sbb
lret
mov
cltd
xchg
ret
push
cli
and
xor
outsl
das
dec
or
add
jbe
or
xchg
fimuls
popa
cmpsb
mov
xchg
and
mov
cld
mov
dec
jne
jge
adc
cmp
xchg
and
ret
jmp
adc
data16
sub
mov
arpl
mov
repnz
lea
jnp
int
in
mov
add
cmp
aas
dec
fildl
bound
ds
adc
sbb
mov
cs
arpl
dec
sbb
cli
test
inc
mov
mov
test
jno
xor
orb
sub
xor
push
xchg
scas
hlt
push
aam
popa
or
or
xor
lock
les
hlt
jnp
add
enter
mov
mov
insb
jns
fnstcw
push
and
inc
add
aaa
ret
fcoml
imul
mov
cmc
sahf
stc
adc
lock
jmp
fsubp
rcrb
cmp
push
sbb
orb
xlat
faddl
arpl
shl
push
fsubp
flds
mov
xchg
jle
data16
xchg
xchg
int
cmp
insb
sub
jmp
xor
out
movb
and
jbe
push
or
cli
sbb
mov
dec
iret
cmpsb
loope
gs
cmp
push
jp
repnz
sbb
mov
enter
insl
jno
out
dec
xchg
push
in
cli
pushf
push
jl
xchg
clc
jb
xor
inc
xchg
and
mov
fidivl
test
xchg
mov
mov
sbb
pop
fs
daa
inc
mov
ret
inc
xor
jg
push
mov
lock
enter
lcall
or
out
rep
fmul
inc
stc
out
shll
aad
lods
mov
fisttpll
or
adc
jp
icebp
adc
or
ljmp
xor
fsts
cltd
inc
mov
lret
in
ljmp
push
mov
add
lret
or
add
mov
jmp
pop
mov
enter
sub
outsb
adc
stos
pusha
insb
imul
pop
shlb
and
mov
repz
sub
lods
jb
jle
xchg
leave
movb
inc
mov
pop
iret
pop
popf
or
mov
cmp
movsbl
xchg
sti
adc
xor
jl
insl
mov
pusha
iret
push
popf
jmp
mov
cmp
push
and
js
into
fisubl
out
icebp
hlt
sbb
cmp
mov
inc
cli
stc
popa
xor
push
and
push
adc
xor
inc
mov
stc
sbb
mov
jg
mov
loopne
cmpsl
xlat
test
mov
test
ret
aad
das
imulb
jmp
adc
xchg
sbb
fisubrs
jb
pop
lds
aaa
mov
xor
popf
push
lret
ficoms
push
and
add
imul
or
in
sahf
out
test
aas
mov
mov
loop
pop
cmp
cmpb
lcall
or
negb
lret
push
test
dec
push
pop
je
test
out
xchg
inc
and
sbb
hlt
rcll
and
push
orb
pop
mov
push
fidivl
mov
mov
into
jmp
push
imul
nop
sbb
sbb
call
mov
xor
cmp
in
inc
mov
pop
add
add
jp
push
arpl
dec
loop
push
add
repz
out
shl
mov
pop
cmc
loop
stc
mov
push
flds
leave
lods
dec
jns
xchg
mov
mov
je
insb
jns
loop
sbb
in
int
cmp
inc
push
push
pop
sub
jl
sbb
push
scas
call
sub
sub
inc
xor
lcall
cmp
in
pop
xor
jnp
cld
add
iret
sahf
in
stos
dec
sub
pop
push
jmp
xchg
ss
jp
jg
jle
frstor
mov
cmpsl
push
jns
and
daa
push
push
js
add
inc
mov
mov
int3
cli
mov
dec
jae
popa
dec
mov
ror
push
inc
jne
movsl
out
mov
testb
xchg
xchg
mov
add
sahf
aaa
push
adc
pusha
inc
sbb
adc
or
hlt
mov
dec
in
mov
scas
gs
and
jne
out
dec
leave
jne
mov
push
fidivrl
xchg
in
in
inc
xchg
jl
push
and
push
pcmpgtb
pop
test
jp
cs
daa
adc
sbb
sbb
bsr
cmpsb
shl
jbe
in
lcall
daa
mov
push
dec
push
sub
shr
xchg
mov
sub
jge
mov
movsb
xchg
jmp
xchg
pushl
scas
mov
bound
nop
std
fisubs
popf
in
mov
push
dec
ret
xchg
outsl
adc
test
jo
dec
aaa
inc
push
into
push
ficoml
jo
sbb
mov
iret
xchg
clc
jbe
int3
aad
mov
cld
xchg
pushf
sbb
dec
mov
push
push
fistpl
sub
lret
push
jnp
xorb
dec
test
and
insb
fwait
mov
rcrl
and
lcall
ror
andl
xor
jns
pop
mov
out
fs
sbb
pop
mov
movsb
jb
scas
dec
and
testb
lahf
or
mov
cmpl
jl
lcall
enter
testl
adc
roll
inc
dec
mov
mov
fidivrl
lahf
cmp
push
sub
push
arpl
adc
mov
stc
adc
jg
test
fadds
ret
pop
pop
rcll
cmp
int3
cli
push
mov
push
mov
repz
mov
dec
call
lods
push
mov
sbb
dec
xor
pop
in
insb
shr
loopne
jg
xor
clc
add
int3
xor
andl
stc
outsl
std
cmp
fwait
mov
test
sarb
sahf
test
push
mov
inc
and
pop
xor
sti
mull
enter
push
in
lods
popa
rcrb
sub
jbe
fistpl
iret
push
inc
stc
bound
mov
dec
cmp
sbb
shrb
adc
jl
stos
mov
loop
orb
sbb
jecxz
cld
std
loope
dec
in
mov
jnp
sbb
clc
jl
inc
jecxz
cmpsb
int3
jle
inc
ret
mov
dec
sub
es
in
pop
lods
pop
mov
dec
gs
jl
stc
and
sub
test
scas
adc
fnsave
rcrb
mov
pop
xor
and
fidivrs
push
ficoml
fdivr
int
repnz
rcr
vunpckhps
jo
push
jmp
out
lods
pop
jge
scas
xchg
xchg
js
fldcw
cmp
repnz
cmc
shl
bound
outsl
jge
rcl
push
gs
icebp
push
call
mov
cmpsl
andb
test
mov
and
lret
test
mull
inc
push
jbe
in
nop
nop
loope
xor
scas
outsb
lret
popf
insb
inc
mov
inc
dec
ret
adcl
and
jge
cmp
lret
jno
aad
ja
push
fisubs
stc
lahf
xor
sbb
fs
sti
dec
roll
int3
imul
xchg
mov
cltd
cmpsb
dec
outsl
cli
push
push
mov
add
test
xor
dec
cmc
addr16
fdivrl
inc
mov
jbe
adc
int3
or
mov
ret
fidivrl
aas
pop
je
jmp
xor
nop
fisubrl
in
mov
pop
clc
aam
pop
mov
fs
mov
mov
sarb
aas
dec
mov
iret
cld
xchg
pandn
and
pop
mov
jle
loopne
jl
jecxz
in
jbe
dec
es
mov
mov
addr16
xchg
add
cltd
ss
pop
sbb
scas
in
pop
test
mov
jnp
or
insb
loopne
sub
nop
inc
and
leave
inc
jno
xor
push
dec
popl
jg
imul
jb
dec
lret
xchg
mov
inc
aas
mov
lods
cmp
out
inc
xchg
cmpsb
arpl
jmp
sub
inc
cmp
and
ret
xor
mov
jmp
push
cmp
mov
shrl
mov
shr
ret
test
add
mov
test
dec
popf
pop
sub
cli
stc
shlb
dec
mov
je
je
fmull
or
and
pshufw
pop
cltd
add
dec
jns
dec
daa
sbb
push
push
push
dec
add
xorl
repz
mov
daa
les
pop
jmp
mov
incb
js
push
xchg
cmpsl
mov
xor
or
pop
xchg
stos
out
push
jne
cmp
or
push
sbb
inc
mov
pop
fabs
and
push
xlat
adc
jmp
or
mov
je
xor
lret
xchg
and
adc
bound
in
cli
and
sub
call
call
xchg
decb
test
add
cltd
mov
imul
in
mov
push
adc
push
aas
cmp
jmp
xor
pop
movsl
push
fwait
ja
filds
fwait
lcall
dec
cmpsl
jp
imul
xchg
ret
push
xlat
mov
cltd
in
movsl
pop
add
inc
jge
hlt
leave
mov
xchg
lock
jbe
sub
mov
pop
movsl
lock
pop
pop
jo
aas
jmp
ja
movsb
addr16
cltd
fsubrs
roll
ss
fdivs
inc
cmpsl
addb
fldl
andb
roll
mov
push
add
push
inc
adc
icebp
movsl
dec
imul
aaa
xchg
test
arpl
lcall
inc
mov
call
dec
outsb
aam
xor
je
push
adc
pop
sub
push
inc
int
es
add
cmp
mov
cmp
ret
push
cmp
das
lds
adc
adc
adc
adc
fs
mov
jne
mov
jg
std
out
repnz
pop
or
insb
mov
mov
xor
pop
cmp
add
out
and
mov
adc
lahf
and
les
or
std
adc
or
dec
ja
push
bound
dec
add
movsb
call
roll
imul
decl
push
ret
je
icebp
insl
test
sub
jle
sub
xor
mov
mov
and
mov
jle
hlt
xor
mov
ljmp
mov
inc
mov
mov
dec
add
dec
aam
adc
mov
pop
in
jecxz
loopne
xchg
cltd
jo
sbb
test
addr16
repnz
aad
or
cmp
daa
roll
inc
pop
cli
fisttpll
jbe
mov
pop
add
and
scas
push
mov
leave
push
sub
xchg
cmpsl
xchg
mov
cmp
mov
mov
mov
adc
lods
aad
mov
xchg
rolw
cmp
push
or
call
sub
sub
push
mov
pop
jecxz
push
ret
cmpsl
lcall
repz
mov
fisubs
xchg
in
out
repz
arpl
mov
mov
mov
lods
cmp
stc
mov
stos
xor
xor
dec
dec
and
jmp
and
mov
dec
pop
gs
stos
pop
pop
lods
test
je
jbe
jns
jle
ds
orl
in
shll
out
arpl
arpl
xor
in
push
fcoml
insl
inc
lcall
add
add
dec
jle
in
jbe
std
cld
clc
icebp
jecxz
daa
int
je
dec
cmpsb
xchg
push
and
insl
in
ficoms
iret
push
rcrb
xchg
dec
into
sbb
popf
add
daa
mov
cltd
clc
cmpl
dec
push
repz
xchg
sti
stos
sub
out
xchg
shrb
inc
scas
xchg
mov
aam
and
pop
jp
sar
aad
inc
cmpsl
fadd
gs
clc
loop
and
ret
std
inc
enter
jecxz
aad
cs
iret
jecxz
mov
pop
outsl
daa
push
imul
dec
xchg
or
orl
adcl
sub
pop
sub
imul
pop
mov
push
out
and
into
addr16
inc
inc
adc
mov
sub
adc
ror
fdiv
stos
ret
cmp
andb
ficomps
lret
outsl
mov
rorb
push
xor
mov
dec
inc
jo
add
jo
in
divb
je
jle
or
pop
xor
dec
aam
sub
test
test
add
and
mov
xor
push
fnstcw
bnd
jb
addr16
inc
or
xchg
add
aad
test
inc
mov
test
ror
fiadds
stos
pop
pop
lret
orb
insb
add
dec
xor
sub
andl
mov
xchg
mov
rcl
mov
enter
push
cmp
nop
push
inc
push
xchg
inc
fimuls
dec
imul
ja
or
sbbb
sub
jo
hlt
lret
push
jo
sti
mov
pop
jo
lock
in
cmp
inc
js
and
movsb
repnz
sbb
and
push
pop
adc
push
push
push
mov
popf
push
pop
mov
inc
xchg
add
mov
xchg
jl
mov
dec
mov
ficompl
inc
xchg
ja
mov
mov
int
mov
out
out
test
out
dec
adc
mov
inc
sub
push
push
arpl
mov
arpl
sbb
xor
imul
popl
or
shlb
jbe
and
gs
jae
testb
adc
loop
out
rorb
pop
outsb
or
or
pop
dec
mov
cmp
lahf
mov
das
mov
fcompl
jg
movzwl
mov
jne
dec
xor
pusha
test
xor
add
adc
dec
adc
ds
mov
fcomi
imul
outsb
push
and
into
movsb
push
gs
sbbl
fcoml
or
mov
test
add
decl
xchg
pop
pop
and
pop
xor
jne
lret
push
unpckhps
popf
rcl
sbbb
pushf
les
stos
add
rorb
icebp
fcomp
lods
dec
and
jae
inc
aad
adc
das
scas
sbb
out
movsl
pop
lds
inc
imul
adc
popa
in
cmp
dec
outsl
cmp
or
mov
pop
push
sbb
push
and
xor
pusha
lock
cmc
fcoms
push
mov
ficomps
jbe
sub
push
jecxz
sarb
push
mov
jne
cwtl
jo
jnp
inc
jmp
jge
repz
movsb
fistl
push
or
mov
sbb
loope
push
hlt
sbb
jp
mov
push
adc
leave
jbe
xchg
jecxz
mov
jae
mov
pop
insb
jne
pop
repz
or
mov
adc
or
add
and
aas
dec
aam
int
roll
iret
cmp
les
jle
int
push
mov
mov
add
fsubs
adc
mov
xor
scas
mov
push
mov
movsb
lahf
fsubl
or
les
pop
jne
gs
clc
jl
pop
adc
mov
daa
push
test
add
mov
and
fwait
xchg
bswap
loopne
insb
dec
cbtw
ljmp
jne
in
and
andb
repz
pop
pop
sbb
add
pop
imul
xchg
and
or
mov
movsl
cltd
push
lods
ja
fstps
cmp
ret
mov
pop
push
xchg
dec
cmp
mov
in
leave
dec
mov
loopne
rorb
or
fisubl
mov
mov
mov
insb
pushl
fidivrs
xor
xchg
in
cmp
jg
jle
inc
push
dec
lods
dec
xchg
dec
in
and
jbe
fists
mov
jo
cmp
and
and
mov
or
sbb
stos
cmp
and
mov
dec
pop
icebp
pop
fwait
movsl
aas
ds
aaa
mov
xchg
lock
or
in
xchg
xchg
mov
mul
repnz
jae
add
lea
stos
jnp
mov
scas
popf
inc
jl
xacquire
jg
enter
insl
mov
lock
cmp
xor
cmp
xchg
adcl
inc
clc
mov
sub
fucomp
imull
outsb
rol
repnz
fstl
inc
adc
lret
dec
fwait
add
add
repnz
repz
sarl
loop
repz
shrb
ljmp
mov
or
mov
pop
pop
mov
cmp
jmp
fdivrl
inc
dec
test
mov
popf
dec
push
mov
xor
push
add
arpl
test
ret
rcr
or
ret
dec
mov
pop
icebp
fnstenv
or
aam
xchg
dec
out
ret
pop
test
nop
ljmp
jno
push
ljmp
mov
in
fbld
loop
aad
decl
shld
mov
adc
sub
sbb
int3
jl
ljmp
jmp
out
jb
jbe
or
cmp
dec
cld
xchg
test
lret
clc
sahf
cwtl
mov
mov
jbe
push
dec
lret
jno
push
cs
xor
sbbb
rolb
mov
dec
rorl
loopne
push
xchg
push
pop
pop
lahf
push
lret
or
cmp
jecxz
sub
xlat
mull
loop
cmpb
arpl
into
mov
sbb
popf
xchg
cmp
mov
xlat
xchg
notl
push
xchg
inc
fldcw
mov
sub
inc
xor
xor
outsb
jmp
pop
add
daa
popa
clc
sti
or
mov
enter
mov
pusha
lahf
jnp
and
xor
jle
shll
int
sbb
ljmp
fistl
lods
or
ffree
jb
and
incb
add
dec
and
push
push
orl
xor
test
in
lock
adc
and
jmp
mov
inc
mov
mov
jmp
inc
xchg
jl
xchg
cmp
aad
fldt
inc
jbe
sbb
adc
add
loop
mov
fcmove
in
xor
inc
sbb
mov
clc
mov
gs
iret
test
fisubrs
neg
cmpsb
mov
outsb
mov
push
inc
jno
out
cmp
loope
pop
jnp
lea
shll
sahf
pop
sbb
adc
pop
popf
outsb
aam
popf
std
or
in
sti
ss
mov
insb
fsubs
lret
ret
dec
add
mov
pop
pop
repnz
ljmp
and
sahf
or
test
jo
out
inc
jbe
cmp
daa
or
sbbl
mov
pop
and
inc
rcll
test
cs
jb
icebp
insl
out
in
into
out
push
dec
cli
nop
pop
loope
or
push
enter
imul
ljmp
sbb
adc
lret
xchg
popf
push
aad
jmp
pop
test
out
dec
ret
push
decb
jo
cmp
ds
fnstcw
push
push
aaa
lock
fldenv
mov
lret
movb
xchg
faddp
bswap
jne
popf
sbb
leave
xchg
je
loop
pop
adc
jnp
sahf
jae
add
fwait
sub
sti
and
out
jmp
push
jbe
mov
mov
mov
sub
add
push
push
test
adc
inc
jmp
lcall
jns
jecxz
or
into
pusha
pusha
cmpsb
in
adc
data16
pop
out
sbb
leave
xchg
add
aaa
cmp
add
xchg
sbb
rcrb
xchg
push
scas
ficompl
sbb
push
push
std
imul
lahf
lods
in
push
lds
mov
pop
lods
jmp
xchg
push
das
xchg
gs
insb
dec
out
add
mov
test
mov
and
mov
xchg
psubq
cmpsb
xor
fs
repnz
rolb
out
movsl
shrl
into
sahf
xchg
mov
divl
stc
pop
imul
scas
testl
cmp
xor
inc
push
adcb
lods
daa
loopne
inc
aam
pop
das
sbb
pushf
and
test
sbb
xchg
popa
jle
dec
mov
insl
adc
cmc
test
pop
sub
add
movaps
cmp
aam
add
push
xchg
lock
lock
insl
sbb
dec
inc
push
dec
loopne
imul
hlt
inc
ret
setns
xor
sbb
mov
test
xor
and
pop
adc
sub
nop
mov
insl
gs
inc
dec
sbb
sbb
inc
cmp
cld
int
lock
rcl
mov
lahf
fcomps
jns
push
idivb
or
lcall
addr16
pop
add
push
rcrb
fidivrl
cli
sbb
mov
adc
jne
dec
xor
mov
mov
xchg
jp
inc
pushf
loope
cld
fildll
or
pop
sub
stc
add
adc
add
pop
mov
shll
sbb
mov
pop
pop
out
mov
push
stos
mov
inc
dec
movsb
jmp
frstor
or
fwait
dec
push
pop
mov
repnz
xor
sbbl
jne
inc
sub
das
mov
mov
ret
sbb
adc
test
and
enter
cmp
mov
or
test
enter
sub
cmpb
nop
je,pt
inc
add
lods
jp
sbb
popl
lods
insb
test
push
push
rcrl
mov
or
lret
pushf
out
aas
outsl
cmp
pusha
add
sbbb
sub
cmpsl
cmc
jns
lods
push
lret
pop
fildl
lret
cmc
xor
mov
dec
jecxz
lcall
std
add
movw
inc
cmp
arpl
filds
rcl
mov
aad
sub
inc
inc
lods
mov
out
repz
test
inc
mov
jne
cs
test
mov
cmp
mov
fs
push
shll
cmp
adc
insl
int
mov
cmpsl
dec
cli
push
sub
repz
sbb
cld
les
enter
int
sbb
ret
inc
xchg
jl
sbb
push
aad
js
stos
xor
lea
mov
ja
xchg
sarb
stos
pop
in
push
or
lock
lret
xor
lds
jmp
jle
fstps
sbb
xchg
pop
pop
xchg
push
pushfw
pop
fisubs
stos
int3
loope
cmp
aad
ret
lods
into
adc
add
xchg
add
lods
cwtl
pop
jne
shll
icebp
sub
push
jecxz
repz
dec
outsl
aad
or
adc
cmp
and
dec
sahf
fs
arpl
cs
mov
xor
inc
pop
out
ja
lret
add
rcll
fisttps
mov
aad
inc
stos
sbb
mov
addb
xor
mov
fucom
insl
loopne
xchg
popf
xor
cwtl
je
sub
mov
mov
arpl
jl
xchg
insb
pop
out
mov
hlt
ja
cmp
mov
cmc
stc
sahf
ret
daa
popa
pop
imul
dec
jmp
inc
jmp
test
and
mov
hlt
lds
cwtl
jp
push
sub
cmpsl
fnstcw
cld
cs
dec
dec
pop
xchg
iret
adc
ficompl
adc
fsub
aas
inc
hlt
xchg
sbb
aaa
inc
aas
sbb
adc
mov
fnop
test
sbb
mov
cmp
mov
ret
inc
xchg
insb
popf
mov
fdivr
jp
jb
pop
pop
stos
int
daa
das
pop
push
stc
sbb
sub
add
xchg
sbb
repz
mov
mov
jl
inc
inc
insb
popa
xor
or
pop
mov
mov
lock
mov
pop
aam
mov
ss
ds
jmp
in
inc
mov
pop
mov
movaps
push
stos
inc
xor
xchg
and
jno
dec
cmc
or
jg
in
or
sbbl
fwait
sbb
sbb
xor
sub
repnz
ret
mov
sub
push
shll
xchg
shll
or
xor
push
jg
ds
xchg
sbb
pop
add
shrb
inc
pop
sub
push
mov
xlat
fisubl
xor
sub
cmp
adc
mov
cld
daa
or
fidivs
inc
insb
xchg
inc
in
movsb
sub
roll
mov
mull
pop
pop
push
or
inc
std
add
ja
inc
cmp
loop
push
and
mov
push
jae
sub
inc
mov
sbb
fbld
pop
cmp
push
jne
or
sbb
mov
sarl
jl
pop
imul
inc
in
inc
push
xchg
dec
cli
adc
push
popf
push
cmp
sub
push
fwait
andb
into
mov
in
cltd
mov
out
daa
repnz
inc
sbb
xor
dec
jbe
jnp
cltd
loope
pop
pop
mov
call
sti
aam
fcmovnbe
adc
cmpsl
xor
outsl
and
pop
and
cs
mov
cmp
and
sarl
sbb
xlat
jno
pop
dec
sub
test
test
xor
movsb
ljmp
push
cmp
lahf
fwait
mov
lea
push
and
pop
scas
repz
xor
push
mov
movsl
mov
pop
pop
inc
lods
loop
jbe
fildll
mov
inc
ja
and
lcall
mov
cmpsl
or
dec
testb
je
mov
push
push
or
push
pop
xchg
pop
xchg
imul
imul
test
dec
sub
xchg
loope
jge
shr
lret
inc
add
lock
xor
pop
cmpsl
bound
jb
pop
clc
test
push
pop
hlt
ret
and
and
or
mov
mov
or
pop
fisttpl
pop
rcrl
jns
xor
in
push
std
jno
jnp
cmp
sub
rcr
pop
sbb
arpl
jnp
pop
aam
sarb
gs
subl
fdivs
xor
test
ja
sbb
fs
sti
lock
mov
sub
mov
aam
mov
adc
xlat
neg
dec
roll
pop
cmp
aaa
idiv
std
mov
adc
aad
test
dec
push
daa
iret
sub
enter
jg
sub
push
pop
or
inc
and
in
mov
hlt
inc
mov
fidivrs
stc
in
cmp
push
repnz
lret
or
add
nop
mov
cwtl
rorb
test
cmp
mov
std
pushf
rep
or
jge
lods
jmp
lret
dec
pop
mov
xor
add
or
pop
sar
sbb
out
aaa
mov
lock
or
fstl
add
data16
jmp
mov
sub
xchg
mov
mov
jmp
orb
pop
sub
dec
aad
lcall
push
jl
push
sbb
dec
scas
dec
xlat
fadd
cld
push
add
xchg
jb
ret
enter
imul
shl
xchg
jb
nop
icebp
icebp
les
adc
jae
sub
sub
jns
jp
testb
pop
mov
shl
test
pop
xchg
sahf
sub
cmp
and
pop
lods
inc
push
mov
jo
cmc
jo
mov
mov
xor
repz
repnz
movsl
cmp
loopne
mov
mov
dec
inc
stos
scas
dec
xchg
test
push
and
cld
add
pop
add
dec
xor
lcall
mov
cmpsb
sbb
pushf
mov
mov
andl
addr16
mov
rcll
mov
pop
adc
inc
push
cmp
add
ss
je
js
jp
mov
xor
jae
sahf
dec
mov
mov
lahf
mov
and
cld
jae
inc
and
push
enter
mov
inc
aam
sahf
les
add
popa
outsb
mov
add
iret
sti
add
adc
movsb
xchg
mov
add
in
lret
adc
popf
cmp
sbb
cli
jp
xor
push
push
mov
jmp
stos
addb
scas
jl
xchg
push
add
lret
xchg
fildll
roll
or
dec
inc
add
xrelease
fwait
js
fildl
hlt
push
xchg
loop
mov
loope
loope
pop
sbb
loope
gs
and
in
sub
into
hlt
pushf
cmp
clc
mov
mov
in
dec
or
fcmovnbe
adc
sar
dec
lods
das
inc
jno
fnstsw
mov
pop
mov
ljmp
cmp
shrl
inc
outsb
imul
rol
lds
fwait
shll
xchg
ret
call
and
ret
dec
lret
scas
xchg
pop
mov
bound
fs
ret
inc
inc
xchg
mov
in
adc
xchg
je
and
cltd
ja
arpl
xchg
addr16
fnstcw
lret
jo
jge
jns
sbb
push
out
lds
xchg
and
sarl
mov
mov
cmp
adc
adc
cld
push
sbb
les
leave
addl
lods
inc
shl
stos
jns
imull
push
fdivl
mov
data16
pop
push
jb
test
push
test
loopne
loopne
mov
cs
jg
ja
jmp
repnz
or
xchg
fisubrl
negl
sub
cmp
repz
add
push
add
jae
dec
shrl
mov
sbb
das
jl
icebp
aaa
adc
enter
insl
push
pusha
mov
inc
cmpsb
pop
inc
jnp
mov
inc
outsl
cmpsb
int3
ljmp
sub
movsb
xchg
popf
pop
int
rcr
jno
scas
mov
mov
cmp
rolb
mov
adc
lock
ljmp
and
add
cli
push
xor
mov
ds
cmp
push
outsb
pop
repnz
arpl
cmpsb
dec
es
test
mov
push
movsb
pop
gs
xchg
cmpsb
gs
rorl
cmpsb
scas
enter
inc
adcb
scas
scas
jbe
mov
popa
aam
rorb
outsl
sbb
inc
xchg
out
pop
adc
fstl
mov
add
push
rcll
sbb
call
pop
popf
xlat
xchg
sar
cwtl
rolb
push
ja
or
mov
jns
pop
mov
push
cmp
or
outsl
push
xor
jno
sbbl
dec
std
push
hlt
test
adc
pop
pushf
push
sub
mov
cmp
movsb
mov
sub
mov
mov
inc
aad
fwait
test
ja
out
mov
pop
lret
jo
cmc
push
adc
cmc
std
movsl
xrelease
ds
ret
sub
cwtl
inc
jmp
sub
pop
adc
xchg
adc
test
pop
loope
lret
test
cltd
jmp
sbb
adc
mov
fnstsw
loope
jne
and
push
xor
cmp
jno
inc
inc
insl
lods
daa
inc
leave
scas
pop
dec
add
movsb
push
out
cltd
xchg
in
lods
fcmovbe
out
repnz
ja
add
mov
sbb
fdivl
mov
iret
lods
push
jmp
and
mov
test
cmc
cmpsl
lds
sbb
shlb
jecxz
cmp
inc
pusha
mov
mov
mov
sub
insb
mov
call
or
cli
dec
repnz
outsl
in
cltd
jecxz
aaa
jp
and
pop
pop
lahf
and
mov
cmp
adc
sbb
jo
imul
jno
jle
fildll
sub
repz
in
inc
rclb
add
loop
popf
test
cwtl
clc
test
gs
inc
aam
lcall
xchg
push
jo
orb
cs
mov
pushf
jge
ljmpw
push
popf
mov
jno
sbb
push
gs
mov
adc
jg
lahf
das
sub
pusha
outsb
add
jbe
cwtl
enter
lahf
sahf
sub
pop
push
inc
adc
mov
xchg
sub
and
push
inc
dec
sub
sbb
es
mov
ret
mov
aam
mov
and
add
sbb
out
pop
leave
push
out
pop
mov
enter
or
jge
cmp
mov
and
test
das
add
push
movsb
call
dec
aad
cld
test
stc
add
outsl
fstpl
inc
inc
jb
sbb
jl
dec
mov
fildl
data16
out
je
outsb
std
fmuls
test
test
cli
ret
dec
ss
sarl
sarl
jge
jge
push
xor
mov
adc
adc
loope
pop
mov
dec
popf
mov
scas
sahf
mov
adc
jne
jle
in
add
movsl
or
mov
pop
fisubs
xor
sub
jbe
jp
mov
aaa
fsubrs
add
push
adc
lods
push
ss
test
xchg
dec
pop
inc
loope
divb
push
mov
adc
push
and
and
sti
jge
pusha
ret
insb
inc
dec
adc
mov
dec
test
insb
ficomps
xchg
adc
pop
and
inc
es
jae
dec
cmpsb
and
aad
das
mov
pop
inc
ret
subw
mov
xchg
sbb
add
mov
mov
mov
fidivl
mov
sti
test
dec
std
testl
cmp
xchg
jle
and
push
in
push
push
int
jmp
data16
jns
push
into
jl
imul
loope
jle
pop
and
and
mov
xchg
mov
outsl
jae
cmpsb
fstps
cmp
aas
mov
push
mov
and
imul
lea
in
sbb
mov
test
xor
inc
mov
push
add
and
or
adc
movsl
jmp
popf
int3
les
xor
and
sbb
out
inc
cmp
mov
aam
mov
imul
adc
dec
mov
lret
jne
mov
cmp
push
add
outsb
sbb
es
mov
cld
xchg
mov
test
sub
aad
lds
mov
mov
mov
xor
pop
sub
pop
mov
or
dec
rorl
push
mov
push
sbb
imul
repnz
mov
out
mov
sub
repz
imul
mov
imul
lret
mov
add
sbb
mov
pop
in
or
xor
xchg
add
sbb
xor
dec
mov
inc
int3
cmpsl
call
sub
andl
outsl
or
add
add
xlat
and
lea
aas
or
les
and
out
arpl
push
dec
loop
xchg
stos
stc
es
std
push
movsl
out
adc
stos
jo
iret
push
cmp
cmp
imul
sub
ret
jo
jecxz
sbb
jl
sub
jae
lea
xchg
adc
mov
repnz
xchg
and
add
sbb
shlb
aas
mov
sub
xor
jnp
push
lret
cltd
mov
pop
xchg
xchg
test
push
add
repz
and
aad
out
mov
fmull
aas
stos
inc
aaa
sarl
pushf
jae
fiaddl
fdivp
xchg
sbb
mov
inc
push
add
push
mov
xlat
or
or
mov
arpl
popf
loopne
sbb
add
nop
dec
mov
decb
pop
dec
jl
loop
fiaddl
adc
or
cmp
mov
outsl
rorb
adc
cmp
cmp
int
scas
cmpsl
mov
xor
popa
inc
push
dec
test
imul
je
cld
out
sahf
outsb
add
lret
cmc
movsb
mov
push
sbb
es
adc
inc
and
fildl
data16
inc
stos
dec
scas
loope
mov
sbb
mov
inc
xor
into
and
or
mov
sbb
push
stos
jg
push
mov
js
and
gs
std
rorb
pop
dec
mov
shll
js
xor
loopne
xchg
ljmp
xchg
push
mov
ficoms
push
inc
mov
mov
addr16
ja
loop
sub
mov
outsl
add
out
inc
lahf
rcrl
pop
aaa
xchg
outsb
divb
in
insb
push
jmp
cli
int3
iret
sub
movl
dec
adc
cwtl
or
dec
cmpb
xchg
add
shrl
daa
mul
pop
adc
pop
or
or
stos
subl
or
xor
lea
inc
push
jnp
nop
aad
pop
pop
imul
out
popf
loopne
add
inc
mov
xchg
rcrb
and
xchg
pushf
sub
and
pop
pop
inc
mov
sub
pop
aaa
xor
cmp
icebp
add
arpl
hlt
test
test
shll
mov
ficoml
and
jbe
cmpsl
add
push
std
lea
cmp
add
fildll
insl
mov
pushf
pop
outsl
ret
jae
leave
add
cmp
jne
jns
or
lret
jne
enter
adc
inc
cld
in
mov
xor
sarb
inc
dec
gs
pop
and
dec
pop
mov
cmovs
and
sub
pop
jo
cmp
aas
movnti
mov
xlat
es
cmc
push
cmc
aam
les
scas
loope
shrb
mov
out
inc
pop
outsl
xchg
mov
pop
cmp
push
pop
mov
push
dec
and
xchg
push
insl
and
push
pop
pop
icebp
lods
pminub
jle
jae
fisubrl
cli
idivb
sub
sub
jne
pcmpeqd
inc
jb
pop
and
loopne
push
hlt
push
out
xchg
and
push
push
scas
fneni(8087
mov
add
addl
test
sbb
fs
inc
pop
lods
jb
mov
lods
cmpsb
adc
cmp
shl
cmpl
sarl
jmp
fisttpll
iretw
xor
sbb
lret
cltd
inc
adc
fistps
fnstsw
jo
push
xchg
sti
add
bound
sbb
in
dec
push
cld
fwait
mov
xchg
sub
pop
xchg
mov
or
mov
mov
aam
lock
bound
stos
icebp
stos
jae
lret
mov
ja
mov
imull
std
nop
jo
push
or
jge
les
std
sbb
fcompl
fiadds
gs
cmp
inc
cmp
sbb
jmp
inc
dec
sub
inc
jno
jno
xchg
gs
icebp
out
cmpsb
pusha
das
in
fs
fs
repz
pop
jne
dec
mov
subb
push
mov
cld
push
in
push
sbb
lret
sbbb
pop
sbb
daa
jns
xchg
sbb
dec
xchg
push
sbb
cmp
dec
imul
cmc
cld
mov
sub
cmc
call
sahf
sbb
jp
and
cli
scas
out
icebp
pop
push
or
cmp
dec
lret
ss
stos
mov
and
sahf
stc
out
in
les
scas
mov
jg
push
dec
push
in
adc
rcl
test
push
ret
out
pop
leave
fisubs
movsb
aam
sbb
jmp
mov
repz
addb
pusha
pop
adc
fsubrl
subl
mov
cmp
add
dec
test
jno
hlt
push
mov
cld
dec
mov
cmp
cmpl
push
clc
push
mov
out
jmp
inc
push
shlb
call
test
pushl
fidivrl
lods
sarl
add
out
ret
fwait
xchg
fnstsw
cltd
movsb
addl
movb
mov
loope
xor
push
xchg
outsl
sbb
repz
add
pop
loopne
cmpsl
jg
pop
lahf
test
mov
mov
in
iret
mov
cmp
xchg
addb
dec
push
in
pop
xchg
bound
ljmp
xchg
inc
mov
sub
jns
cmc
in
leave
pop
pop
jnp
fsubrs
int3
xor
std
lods
pop
int
out
movsb
fldcw
mov
cwtl
mov
fistpl
imul
add
shll
fnstenv
ja
push
orb
cmp
daa
stos
jl
cmp
test
adc
leave
popa
imul
add
nop
in
cmp
inc
out
jae
out
popf
scas
aam
dec
push
pop
mov
sbb
sarb
cld
mov
pop
mov
inc
mov
inc
xor
in
pop
or
inc
xor
pop
js
sbb
push
in
push
pop
xor
adcb
inc
outsl
aaa
pushf
arpl
and
adc
fadds
xor
lds
or
jle
in
repnz
inc
lret
push
cmp
daa
fwait
daa
in
lret
mov
dec
jecxz
jg
mov
icebp
std
test
pop
pop
sub
mov
lods
in
push
cmp
xchg
dec
bound
scas
pop
push
cmpsl
and
dec
mov
movsl
push
adc
adc
xchg
sbb
lods
ja
lret
enter
ja
stos
mov
add
add
repnz
jle
push
orb
or
mov
js
adc
xchg
cmp
xor
cwtl
mov
sub
cmp
jno
cmovo
add
mov
and
inc
mov
sub
mov
cmpsl
insb
and
dec
icebp
and
in
cli
fs
movsb
sbb
mov
inc
cltd
sub
add
inc
movsl
mov
aas
cmp
mov
push
ja
and
lock
insb
jnp
mov
jmp
shr
jno
mov
ds
fabs
or
outsb
jb
inc
dec
aad
jnp
push
insl
jle
xchg
sbb
add
cwtl
jmp
sbb
sub
aaa
cmp
data16
pop
push
das
xchg
mov
push
lock
pop
incb
mov
pop
and
mov
lahf
mov
data16
sbb
mov
sbb
cmc
pop
ret
or
daa
test
lret
adc
lods
popf
jge
clc
leave
push
sbb
mov
pushf
aaa
sbb
sbb
mov
cmpsl
fisubrl
imul
fld
ss
in
or
sub
jo
sub
pop
xorl
sbb
ret
mov
ds
pusha
les
icebp
lock
dec
mov
out
inc
mov
mov
and
pop
pop
jne
out
mov
das
popf
lcall
sub
cli
adc
sbb
jo
sub
jbe
fdivl
sbb
pop
jbe
add
jecxz
in
out
mov
and
push
jno
cli
jno
xchg
sub
inc
cmp
in
sub
out
xorl
mov
repz
jle
adc
jo
jecxz
scas
out
sbb
push
fildl
mov
insl
lcall
idivl
pop
or
mov
pop
pop
rcl
inc
mov
xor
cwtl
mov
movsl
mov
in
mov
xchg
add
xor
dec
mov
outsb
es
sbb
je
push
inc
aam
and
mov
cmp
or
mov
nop
and
cmp
fstpl
subb
jmp
stos
sub
sub
xchg
cmp
and
or
push
adc
inc
pusha
in
fwait
in
es
outsl
test
dec
imul
imul
and
daa
subl
mov
lods
cwtl
or
repz
imul
pop
sub
dec
loopne
out
mov
outsb
inc
sub
adc
cmovg
or
push
imul
fnstcw
ret
mov
int3
leave
cmp
lret
cli
enter
jmp
dec
sbbl
in
jb
fld
je
mov
fildl
stc
xchg
cmc
ret
lds
cs
ljmp
xchg
ljmp
loope
xchg
int
sbb
xchg
int
test
xor
loop
pop
int
cld
add
or
mov
lock
inc
fidivrs
adc
push
mov
repnz
jne
clc
and
cmc
inc
aam
outsl
or
aad
jnp
mov
sti
sub
test
jle
fcomp
int
cmp
mov
mov
push
lahf
mov
rolb
mov
cmp
mov
popa
pop
jl
mov
push
nop
add
pop
mull
out
mov
mov
std
test
orl
fstl
xchg
and
leave
out
sub
rorl
adc
jl
jge
xor
fwait
adc
lock
push
sti
aad
and
shll
mov
lds
xor
fwait
and
ret
sbb
or
xchg
push
aam
addr16
and
mov
lea
out
pop
int
sub
cli
stc
xchg
jecxz,pt
cmp
aaa
fnsave
ds
push
push
inc
ds
call
mov
mov
inc
xor
outsb
ficoms
xor
push
stos
jmp
xchg
push
or
out
pop
push
push
loopne
scas
in
or
sbb
call
mov
sbb
mov
fidivrl
loope
leave
push
xor
mov
rcr
xchg
adc
or
test
cltd
in
insb
cwtl
outsb
int
xchg
sbb
dec
stos
aas
fsts
cld
outsb
lods
dec
jecxz
ret
ja
shrl
sbb
mov
test
cltd
sub
push
cmp
mov
fimull
mov
jnp
push
movsb
test
int3
inc
mov
add
xor
mov
mov
inc
inc
push
jmp
in
sbb
clc
pop
adc
addb
xorl
movaps
popa
outsl
jbe
pop
ljmp
mov
sub
pop
mov
stos
in
mov
dec
repz
shll
mov
xlat
and
sbb
dec
xchg
add
mov
insb
xchg
push
imul
cltd
inc
repnz
mov
xchg
cli
fisubrl
movsb
xchg
ffreep
jb
ja
push
imul
scas
loopne
loopne
es
jno
inc
sub
mov
loop
testb
xchg
push
jno
pusha
mov
mov
mov
sub
or
mov
dec
cmp
jbe
repz
ss
push
sub
push
dec
push
sbb
dec
mov
cwtl
into
sbb
outsb
mov
aaa
mov
add
pop
add
pcmpeqd
addl
xor
sub
stc
xor
push
scas
push
in
adc
fs
aaa
push
pushf
daa
nop
cmp
cmp
btc
test
adc
add
adc
mov
das
jo
inc
mov
cmp
incb
add
mov
lahf
jnp
outsb
rorb
adc
push
aas
roll
stos
movsl
imul
pusha
mov
test
repnz
xchg
sub
fwait
dec
or
add
mov
lret
loopne
pop
out
cmp
movsb
mov
sub
sahf
fsubp
out
sbb
inc
xor
dec
int3
and
pop
loopne
xchg
sbb
dec
aam
inc
push
mov
ljmp
xchg
add
dec
test
mov
lods
stc
aad
lods
cli
mov
mov
jp
push
mov
shrl
fildll
cld
pop
in
out
pushf
add
mov
sub
push
sbb
out
sub
mov
or
xchg
sub
out
shlb
ret
push
mov
sbb
pushf
stos
cmpb
adc
insl
cmpl
lock
mov
in
or
aas
shrb
inc
adc
stos
outsl
mov
jo
jecxz
push
rcr
outsl
js
ds
popa
adc
pushf
fmull
pop
mov
push
push
andb
cmc
lock
test
jns
mov
inc
int
out
daa
add
rcrb
push
sahf
repnz
ljmp
cmp
ja
fdivl
jo
jge
pop
faddl
push
mov
xor
push
adc
mov
add
dec
je
push
pop
lds
mov
cmp
out
in
outsl
in
pop
mov
add
sarl
out
push
ret
sbb
fwait
sahf
push
inc
pop
xor
mov
rorl
rep
add
pusha
nop
insl
inc
imul
popf
pushf
jg,pn
fstps
mov
nop
dec
daa
xchg
sbb
sub
cmp
mov
or
xchg
ret
mov
mov
or
test
jle
sub
push
cmc
sub
divl
adc
mull
inc
lret
lods
shl
push
inc
decl
fisttps
fistl
hlt
shlb
add
pop
or
push
or
scas
add
ja
mov
loope
mov
pop
lea
aaa
and
or
dec
xchg
sti
mov
stos
ljmp
sub
jbe
xchg
sub
adc
pop
push
cmp
popf
push
popa
hlt
in
jae
mov
adc
loope
std
das
lods
loope
pop
cmp
insl
repnz
and
sub
loop
pop
imull
jnp
leave
les
mov
jecxz
aam
mov
inc
cmp
enter
lret
lret
cmp
stc
mov
insl
fs
fdivr
scas
inc
ss
aas
pop
test
jl
add
bound
leave
test
icebp
imul
dec
dec
clc
jmp
adc
frstor
lea
pop
jecxz
lds
jmp
push
and
in
jb
add
movsb
shlb
pop
xor
push
pop
xorb
xchg
fs
daa
mov
pop
dec
jbe
cld
xor
lcall
cmp
mov
aad
aam
imul
pushw
js
or
jmp
fwait
mov
cmp
push
sub
push
bound
pop
or
dec
push
jle
es
cmp
xor
imul
inc
loopne
and
ja
dec
add
into
addr16
xchg
ret
fstpl
stc
push
mov
lret
imul
pushf
hlt
and
fdivl
out
mov
cltd
lahf
dec
sbb
jecxz
inc
movsb
shlb
push
jge
push
addb
icebp
nop
add
xlat
repz
jb
mov
popf
pop
add
pop
jbe
dec
add
je
jb
mov
push
push
mov
push
cmp
pop
rcrl
pop
push
fwait
addl
and
outsl
std
lds
nop
jmp
lods
push
scas
push
adc
sbb
sub
cld
movsl
cmp
aam
fdivl
pop
adc
data16
popl
and
das
rcl
sbb
sbb
scas
sbb
lahf
aam
imul
mov
and
aaa
xchg
daa
or
int
sbb
push
in
ds
jno
popa
add
and
cs
shll
mov
jmp
ss
lret
filds
movsl
js
stos
cmp
inc
or
push
movsl
ss
or
call
dec
xchg
lods
popa
jmp
cmp
lcall
mov
pop
movsb
mov
push
lcall
add
lock
xchg
cmc
test
dec
ret
out
sub
xadd
xor
lahf
aad
adc
ja
cmpsl
out
lret
popf
enter
bound
ret
inc
popf
or
sub
subl
dec
mov
fcmovbe
inc
imul
loope
fwait
push
js
fwait
mov
rorb
cmpsb
ficompl
sarl
add
sbb
cmpsb
nop
jbe
dec
inc
cwtl
xchg
mov
adc
push
repz
aam
test
push
adc
inc
ret
and
jns
sub
dec
int
xlat
sbb
xchg
or
stos
sub
inc
cld
sub
mov
sbb
mov
cmpsb
out
and
test
sbb
cmp
sbb
je
xchg
inc
aad
sub
rcrl
repnz
in
push
mov
add
xchg
pop
sahf
jge
jbe
mov
enter
call
int
sub
fsubrs
adc
jb
or
int3
push
gs
or
mov
imul
push
icebp
and
pop
xchg
xchg
lret
int3
cmpb
sbb
test
sbb
inc
rcr
jnp
mov
mov
xchg
cld
push
iret
pushf
or
and
test
js
out
cmp
dec
mov
outsl
add
xchg
and
outsl
xor
push
jg
lds
jecxz
out
dec
dec
lret
cmpsb
sbbl
inc
call
std
xchg
pop
leave
and
sub
cs
xchg
frndint
adc
rcrb
ret
lds
push
or
mov
dec
leave
nop
dec
sbb
je
mov
out
cltd
mov
fwait
repnz
ja
jo,pt
into
test
cmp
push
fndisi(8087
push
movsb
es
jae
jmp
insb
clc
insl
jno
inc
in
insl
aam
jmp
movswl
jp
dec
xchg
mov
jno
push
pusha
fstl
jl
int
xorb
and
pop
push
into
mov
daa
sbb
mov
inc
inc
lds
and
cld
cs
push
sbb
roll
push
call
into
lret
daa
repz
cltd
insl
add
out
pop
cmpsl
sbb
sbbb
rcl
cwtl
out
aad
pop
or
add
subb
outsb
fisubrl
push
and
or
cld
dec
mov
insb
and
loopne
fildl
lret
in
mov
cmp
repz
shll
jge
mov
pop
jae
imul
pop
aas
mov
mov
xchg
adc
loope
xchg
leave
loopne
sbb
andl
and
stos
and
xor
les
mov
xchg
sbb
je
pushf
xor
xchg
mov
jnp
push
cmp
inc
outsb
adcl
daa
inc
dec
mov
filds
int
mov
inc
fstps
cwtl
lea
pop
divl
inc
fidivs
mov
inc
loope
dec
and
and
mov
cld
js
icebp
mov
insl
cs
call
mov
popa
sub
sub
test
or
shrl
or
sub
leave
dec
dec
pop
in
jmp
gs
test
adc
dec
mov
jg
test
mov
push
ds
test
push
lods
or
enter
fimuls
push
out
lea
pushf
jno
cmp
repz
jmp
cwtl
ss
jae
andb
rorb
mov
cmp
xor
inc
scas
cli
imul
repz
ret
mov
adc
dec
push
das
sub
pop
ja
aam
lret
cmp
rcrl
push
das
test
addr16
lcall
inc
push
mov
inc
cmpsl
mov
movsl
lret
loope
xlat
das
into
or
icebp
fisubrs
pop
mov
mov
in
pop
dec
xchg
inc
movsl
dec
ret
test
out
lods
loope
sbb
sahf
fnstcw
xor
push
test
inc
scas
or
inc
es
cmpl
jne
lods
xchg
imul
fldenv
lods
insl
inc
cmpsl
cmp
repz
xor
jbe
mov
pop
arpl
rcrl
stos
and
pop
hlt
mov
mov
inc
sahf
or
mov
dec
test
mov
jno
pop
out
jg
push
sbb
xchg
push
jmp
lds
jecxz
add
inc
push
mov
repnz
jg
and
lds
out
sub
xchg
push
mov
lods
enter
pushf
out
in
cltd
aad
inc
fidivrs
inc
and
fsubrp
mov
or
dec
je
jmp
addr16
fdivrs
int
in
xor
frstor
rcll
jnp
push
add
xchg
xor
fisubs
outsb
inc
sub
stos
cmp
aam
or
dec
out
lret
sbb
mov
pop
inc
leave
mov
push
lahf
mov
sbb
mov
add
push
mov
iret
fistps
repz
insl
mov
lret
cs
or
out
push
dec
sbb
xchg
fistps
stc
jbe
cltd
jns
fwait
jp
sbb
inc
std
add
ja
add
dec
sbbl
ljmp
cs
dec
and
dec
mov
add
pop
or
and
mov
jp
pop
xor
inc
push
adc
sti
adc
testb
cmp
divl
insb
hlt
movsb
xor
shrb
or
and
leave
andl
lods
push
or
jns
mov
mov
xchg
mov
xchg
jb
mov
dec
rcrl
or
ljmp
dec
mov
mov
insl
sbb
adc
mov
orb
lea
stos
xor
pushf
mov
mov
test
mov
cmp
push
cli
mov
mov
cmc
pop
mov
ja
inc
lret
mov
inc
push
in
fmulp
sbb
pop
pop
imul
sbb
aam
pop
cmpb
imul
jnp
mov
xor
xor
in
xor
and
push
dec
mov
mov
out
out
sarl
test
cmp
aam
insb
push
mov
pushl
imul
jo
push
sub
lahf
loop
rcrl
lock
sti
pop
out
sbb
and
xchg
mov
cli
popa
imul
inc
xchg
lds
and
jg
stos
aaa
sub
hlt
pop
mov
pop
loope
push
fisttpl
sbb
pop
cmp
push
cs
pop
dec
fidivs
or
sbb
filds
fisttps
popa
or
mov
or
mov
mov
sbb
imul
dec
push
cmpsl
pop
mov
mov
bound
out
sbb
movsb
jbe
andl
testl
daa
insl
scas
fstl
add
or
pop
popf
adc
push
out
fidivs
cltd
push
inc
jbe
or
pop
or
or
dec
in
pop
pop
out
cmc
das
mov
dec
mov
jbe
add
mov
sbb
sarl
push
xor
outsb
repnz
inc
stc
pop
push
cmpsb
jle
xor
inc
jnp
mov
out
inc
inc
cmp
xchg
lahf
mov
dec
sbb
mov
xchg
fmuls
pop
and
out
pop
pushf
push
shl
repz
xchg
lds
pop
sub
sub
int3
neg
xorl
jnp
push
flds
fxch
pop
leave
sub
hlt
push
and
loopne
pop
mov
lret
jne
sub
rclb
cmp
xchg
mov
lds
stos
push
sub
xor
fistps
sbb
dec
fadd
or
inc
popf
add
and
mov
push
rolb
push
xchg
dec
mov
fldenv
lret
fsubs
ss
fwait
inc
pop
aad
ds
xor
test
mov
ret
popf
popf
popf
shr
lock
mov
jno
add
shll
pop
inc
inc
sbb
icebp
fnstsw
bnd
mov
into
movsl
xor
mov
mov
pop
fcoml
test
int
mov
shrl
in
mov
ret
push
rorb
adc
and
jnp
mov
idivl
out
adc
int
out
jno
cmp
mov
sub
sub
shll
add
or
enter
sub
shll
xor
jl
add
sti
sub
sub
hlt
jne
fisubrl
data16
shlb
add
mov
mov
movsl
ljmp
xchg
jp
les
fs
adc
lahf
lods
sti
mov
mov
dec
xor
xchg
inc
lock
addl
cltd
pop
or
gs
sti
dec
into
mov
test
inc
push
test
jge
fwait
out
and
inc
test
dec
pop
rorb
lea
sbb
fadds
add
xchg
mov
das
jge
push
push
mov
push
adc
outsl
mov
mov
mov
cmpsb
inc
pop
mov
in
lcall
fstl
cmp
push
jge
sbb
rorl
stos
mov
aad
and
aam
aad
mov
ds
mov
xchg
pop
dec
call
mov
mov
cmp
popf
idivl
pusha
movb
out
pop
xchg
mov
dec
push
jns
outsb
jno
and
or
mov
je
fmulp
fldcw
push
sahf
rcrb
or
insl
xor
cmp
lahf
sub
add
sub
cmc
mov
das
dec
loopne
mov
mov
out
out
aaa
push
jecxz
fsub
xorl
rol
lods
add
xor
jecxz
pop
shrb
xor
ljmp
cmpsb
std
adc
inc
insl
pop
or
cmpsl
fwait
sub
jo
mov
cwtl
das
jmp
lods
pop
enter
adc
mov
sub
mov
or
adc
adc
jp
and
pop
push
add
xchg
stos
jne
movntq
test
xchg
xchg
leave
repnz
pop
imul
pushf
test
push
lds
cli
or
xchg
loope
sbb
stos
fsubrl
jp
rcr
call
mov
mov
sbb
sbb
push
repnz
fmul
and
lock
push
test
insl
push
and
dec
loopne
les
lods
xchg
adc
stos
jb
jae
mov
sub
mov
lds
ds
cmc
jo
push
lcall
cltd
dec
xchg
push
mov
mov
mov
pop
int
outsl
cmpsb
scas
xor
aad
stc
dec
shl
sbb
sbb
xlat
mov
pop
push
dec
dec
jle
inc
mov
dec
mov
sti
push
mov
sub
add
adc
push
cmp
stc
test
or
ss
pop
in
xor
cli
inc
mov
hlt
and
pop
xor
ljmp
fsubs
and
jno
scas
push
cwtl
xchg
cmpsl
sbb
popa
nop
arpl
fildl
or
movsl
mov
icebp
sarb
jns
xchg
push
xchg
sbb
add
push
in
nop
lahf
fs
insl
mov
push
pop
ljmp
and
test
out
sti
jnp
ja
mov
imul
mov
sbb
loop
dec
shl
lds
mov
pop
ja
je
fldl
incb
rclb
ja
pop
cld
sbb
xor
xor
dec
je
mov
xor
imul
imul
nop
mov
mov
fs
test
out
bound
out
add
lods
jle
out
push
pop
push
xlat
xor
test
adc
xor
hlt
push
add
mov
push
pop
jp
adc
movsb
shlb
shrl
lret
inc
cmpsl
and
sahf
add
sbbl
ss
cli
mov
mov
mov
scas
inc
add
ds
sub
add
mov
aaa
in
repz
xchg
or
jge
scas
sub
lock
cmp
mov
cmp
jae
xchg
outsl
mov
push
jge
insb
jae
push
test
iret
mov
and
add
out
mov
add
iret
cmpsl
mov
lcall
shll
rclb
add
and
jl
lds
ljmp
ds
add
jns
cmp
in
test
xchg
push
inc
jge
fcomps
push
leave
dec
mov
ja
stc
xchg
mov
xor
sub
sbb
out
xor
lahf
ljmp
fdivl
cld
call
mov
add
sbb
mov
add
int
push
ficoml
fs
add
cmp
daa
insb
mov
and
fcomps
aam
mov
mov
ja
imull
stos
push
mov
dec
xchg
cmp
nop
or
xchg
pop
pop
inc
lret
xor
mov
push
aas
cmc
inc
ljmp
push
mov
adc
daa
sbb
xchg
insl
or
jle
mov
leave
mov
stos
in
cmp
ret
sarb
jae
scas
pop
sub
imull
subl
xchg
pop
dec
stos
push
xchg
lret
push
pop
call
or
mov
fistpll
jg
pop
dec
test
mov
mov
inc
mov
or
or
xchg
test
imul
shlb
dec
pop
mov
jecxz
or
xchg
cmc
fs
mov
icebp
call
push
fsubrl
insb
xlat
andb
cwtl
mov
int
or
daa
adc
inc
call
bndstx
out
add
fs
int
data16
xor
test
test
jnp,pt
sub
and
push
idivb
decb
inc
sub
stc
cmpsb
sbb
jmp
mov
lcall
mov
test
mov
fbld
inc
lcall
mov
push
call
push
das
mov
les
xor
mov
xchg
fbstp
mov
add
je
lret
int3
mov
push
lock
mov
lds
xchg
sub
mov
jge
sub
imul
xor
jge
pop
shll
sub
dec
insl
popa
cmpsl
cmp
inc
ljmp
or
cs
push
hlt
sub
mov
mov
js
mov
cmp
ret
aas
out
movsl
sub
dec
sbb
mov
int3
dec
mov
int3
push
test
test
ret
inc
ret
adc
push
sbb
jo
dec
jnp
add
arpl
test
pop
mov
jge
inc
push
push
in
sbb
mov
and
lea
out
push
out
pop
mov
mov
js
cmpb
push
mov
or
repz
adc
xchg
fidivrs
cmpsb
pushf
movsb
js
mov
test
mov
cmp
ss
aad
mov
mov
fbld
push
sbb
pop
or
clc
bound
sti
jg
sarl
lret
jns
jp
cmpsb
fwait
cli
outsb
gs
scas
jmp
cltd
test
or
push
aaa
aam
push
mov
inc
mov
or
rcrb
adc
xchg
mov
and
in
loope
sbb
sub
xor
shll
xor
int
in
add
movsl
mov
dec
data16
fstl
sbb
mov
cmpsl
mov
lret
pushf
lret
daa
ret
pop
in
sub
lods
fildll
outsl
mov
and
cmp
xor
pop
fsubp
jno
and
flds
push
or
sub
mov
insb
popf
and
popa
aas
mov
js
daa
ljmp
insl
dec
sti
xor
iret
inc
xor
out
je
insb
pusha
inc
imul
xchg
test
std
cmp
fs
pop
and
popa
mov
or
push
pusha
xchg
sahf
xchg
testb
inc
aam
fiadds
and
sbb
push
dec
push
call
push
arpl
out
daa
int3
pop
leave
sbb
and
or
stos
imul
inc
loope
push
out
clc
push
or
inc
stos
xor
mov
inc
mov
jns
les
nop
inc
icebp
lds
mov
mov
scas
push
fimull
cmp
fnsave
repz
pusha
push
sbb
test
pop
js
les
add
fcoml
fs
xor
mov
inc
fsts
push
pusha
outsb
jg
mov
movsl
add
aas
add
dec
popa
xchg
xchg
mov
mov
std
add
sub
repnz
mov
aam
stos
and
lret
cmp
jecxz
aam
test
sub
shl
sti
ucomiss
mov
movsl
cld
imul
sarl
and
insb
and
dec
out
xchg
inc
jb
jle
imul
sbb
pop
negb
cmp
fsubl
imul
sub
aad
shll
cwtl
jp
mov
aad
mov
mov
out
leave
movsl
mov
out
adc
dec
or
jnp
inc
mov
out
mov
or
inc
lds
mov
mov
jo
sub
out
fstpl
dec
add
dec
cmpsl
mov
push
xchg
adc
or
adcl
test
loop
movsl
fbstp
dec
lds
test
lods
sub
inc
out
cmp
mov
inc
mov
andl
push
mov
jno
stos
cmp
stos
ret
lods
stos
cmp
iret
and
xchg
movsl
out
ljmp
fisttpl
scas
xchg
arpl
pop
cmpsb
sub
pop
arpl
aaa
incb
sbb
cmp
mov
sub
addr16
js
pop
hlt
out
fisubrl
push
in
call
shlb
xchg
dec
xor
xchg
inc
xor
in
push
pushf
inc
push
popa
loopne
jecxz
sahf
dec
mov
sub
and
mov
add
jg
loopne
cld
cmp
subb
sbb
xor
push
pop
ret
jae
imul
xor
xchg
enter
sti
or
push
outsl
in
mov
ret
cmp
cmpb
and
cmp
into
in
stc
mov
mov
je
inc
mov
adc
hlt
mov
pop
lret
inc
jp
ret
arpl
mov
add
in
jo
outsb
jp
mov
adc
jmp
lret
jbe
mov
out
or
sub
bound
ret
jl
add
add
fnsave
out
pushf
push
mov
cmp
ret
scas
cmp
mov
dec
cmp
and
ja
pop
fstl
inc
fidivs
pop
push
and
mov
sti
xor
call
shll
aaa
adc
insb
iret
lock
sub
xchg
ss
mov
xor
mov
movsb
pop
arpl
imul
fildll
push
mov
ljmp
adc
add
mov
or
aam
xchg
call
push
and
inc
loope
cmpsl
sub
push
arpl
mov
pop
xchg
and
adc
nop
cmpsl
push
xlat
shlb
imul
hlt
fists
loopne
xchg
out
dec
mov
out
jns
mov
mov
jmp
dec
dec
inc
insb
mov
pop
shll
cmpsb
jp
iret
push
add
fsubr
test
call
sub
lret
lods
jle
fldl
pop
lea
cmp
add
data16
and
jmp
mov
xchg
stc
jo
addr16
pop
dec
sahf
push
movsl
sub
jl
cmpsl
shll
and
add
dec
daa
mov
inc
inc
pop
jl
jecxz
nopl
enter
pop
jge
ljmp
mov
inc
icebp
jp
sbb
cmp
test
inc
orl
ljmp
cmp
aaa
lcall
mov
lahf
push
fistl
fnstsw
xor
and
mov
movsb
cwtl
imul
push
in
addr16
movsb
or
std
jns
push
scas
sarl
sub
add
inc
adc
mov
cmp
call
sub
mov
mov
pop
xor
cmc
repnz
xor
out
outsb
pop
mov
sbb
sbb
dec
mov
add
lds
push
popf
sub
in
les
iret
inc
dec
call
aad
cmp
push
stos
int
inc
cmp
mov
mov
and
sbb
fstl
push
dec
add
push
jge
mov
add
inc
push
popa
in
mov
mov
or
mov
lret
bound
adc
or
pop
dec
pop
dec
cmpsb
mov
xchg
pop
xchg
sub
js
jb
dec
fiaddl
fs
push
add
popa
arpl
xchg
out
mov
lret
lds
rcr
push
mov
push
fldl
sub
push
aas
jno
fldz
jmp
or
inc
add
fwait
call
call
fbld
fcom
pop
mov
lahf
enter
sub
popa
sub
loope
push
xchg
or
lds
jmp
and
int
loope
hlt
ss
jecxz
push
scas
mov
aam
add
pusha
pop
xor
imul
cld
sarl
inc
cmp
inc
push
dec
pop
or
cmp
push
call
andl
lods
cmp
lret
lcall
mov
xchg
pop
mov
subl
or
hlt
inc
cmp
imul
sbb
inc
xor
in
in
rcrb
jg
mov
addr16
jne
jne
lret
enter
das
sbb
mov
mov
pop
pop
xchg
adcb
mov
mov
das
addl
jp
jmp
fcomps
popa
stc
pop
adc
and
rorb
movsl
repz
hlt
ret
ss
push
stc
cltd
xchg
adc
push
nop
mov
xchg
arpl
sbb
aas
sarb
push
in
inc
pop
test
out
xchg
mov
or
and
pop
mov
cmpsb
cwtl
popf
add
es
shlb
ljmp
push
test
push
lods
iret
jl
ljmp
stc
sbbl
add
sbb
and
jbe
mov
in
lahf
or
xor
out
imul
adc
movsl
mov
adc
sahf
test
push
sub
std
mov
mul
inc
pop
mov
adc
mov
in
push
xor
push
inc
jge
xlat
mov
and
cmp
fdivl
addr16
in
arpl
cmp
fstp
scas
xor
lods
dec
sbb
shll
outsl
in
pop
dec
je
lods
rcll
pop
cmp
cmp
pop
adc
push
mov
movsl
push
cmc
sbb
out
jbe
jbe
inc
les
adc
incb
xchg
cmc
int
add
add
out
and
dec
and
pop
shl
cmpsl
out
nop
xor
add
in
dec
xor
mov
push
push
push
mov
xchg
lcall
add
in
div
add
insb
dec
daa
sahf
sub
pop
pop
inc
mov
dec
sbb
loopne
daa
inc
es
mov
in
jecxz
sub
mov
sub
mov
stc
nop
xor
cmp
jmp
pop
pop
mov
aas
add
mov
xchg
or
bound
jge
adc
cmc
mov
icebp
adc
cmpb
mov
adc
pop
push
pop
js
jmp
divl
testl
xchg
sub
inc
into
mov
rcrb
pop
bound
bound
lret
or
mov
arpl
pop
out
loopne
cmp
jecxz
or
outsl
lcall
xor
sbb
ds
ja
pusha
pushf
outsl
leave
xchg
mov
sub
fdivrs
sub
push
jp
aad
bound
jo
mov
cmp
insb
lea
test
icebp
leave
xor
repnz
jb
push
mov
inc
xor
ret
nop
ss
aam
pop
sbb
out
cmp
int
xor
xor
pop
inc
rorl
dec
inc
divw
mov
insb
mov
shrl
lods
mov
int
outsb
sbb
pop
and
mov
jl
cmp
inc
ficompl
jmp
fsincos
sub
mov
inc
std
pop
sub
lea
arpl
add
mov
xchg
xchg
je
push
mov
and
dec
jg
jnp
fnsave
leave
or
hlt
xor
ret
lods
movsb
jae
lcall
mov
jnp
cmpb
test
pop
jecxz
mov
call
and
inc
lahf
adc
jmp
sub
test
sbb
cmp
pop
fnstsw
movsl
stos
inc
pusha
hlt
mov
lret
out
xchg
sti
cmp
repz
xlat
sub
sbbb
call
sbb
aad
pop
push
fimuls
test
sbb
pop
mov
inc
jns
add
pusha
lret
and
stos
jmp
cmp
xor
push
xor
mov
out
mov
mulb
out
test
dec
push
pavgw
in
mov
out
pop
dec
pop
add
mov
loop
push
mov
jecxz
scas
mov
add
add
sub
rcrb
outsb
addr16
mov
mov
sbb
jno
jno
sub
aaa
dec
jnp
out
test
inc
mov
ds
push
inc
jecxz
loopne
lret
test
sub
jo
iret
sar
jmp
aaa
dec
loope
adc
dec
jne
roll
stc
fs
lock
sbb
sbb
arpl
lods
test
push
and
fbstp
dec
jne
aad
inc
inc
sub
dec
adc
inc
mov
jmp
idivb
jno
pop
xchg
push
or
rorl
pop
rclb
test
jle
int3
inc
scas
xchg
adc
adc
push
inc
es
je
pop
test
test
mov
aas
adc
push
mov
data16
lods
icebp
movsl
adc
pop
es
sbb
pop
insl
scas
ds
movb
adc
out
jg
lret
enter
pop
or
dec
push
mov
xchg
pop
insb
sub
xor
cmpsl
sti
fnclex
xor
ret
fcomps
push
pushf
push
add
movsw
ret
mov
add
sub
push
mov
cmpsl
mov
outsl
bound
inc
xor
js
dec
push
pushf
in
das
arpl
push
jbe
je
inc
mov
in
je
inc
sbb
xor
or
das
push
jno
mov
cmpxchg
int3
jg
inc
clc
pop
aad
test
sub
js
add
lret
cli
dec
xchg
mov
jg
cmpsl
mov
dec
sbb
sbb
fmul
push
mov
mov
dec
jno
sub
jg
jp
out
inc
pushf
lock
popa
aaa
push
pop
arpl
push
or
cmpsb
xorl
sub
leave
je
cmc
cld
pop
add
mov
arpl
out
push
icebp
and
xchg
pop
les
imul
mov
jmp
jbe
call
cmp
imul
js
sbb
jl
aas
sti
dec
push
push
aad
pop
adc
int3
arpl
pop
leave
mov
cmpsl
aam
fcmovu
xchg
sarw
jp
cmp
imul
jnp
sahf
clc
and
pop
insl
out
xchg
jl
and
jne
dec
adc
call
xchg
push
fwait
pop
xor
or
push
mov
paddw
cmpsb
popa
and
fcoms
in
scas
xor
mov
push
aad
enter
daa
sahf
ljmp
sbb
insl
and
mov
enter
mov
push
cmp
push
out
xchg
sbb
imul
jns
pop
cmp
pop
mov
fimull
insl
fs
sub
imul
mov
jne
adc
pusha
adc
add
adc
inc
pop
in
out
mov
mov
mov
and
call
aam
rep
jmp
and
push
scas
xchg
and
and
mov
jg
inc
jg
xchg
and
mov
fwait
mov
sahf
xor
adc
sub
inc
cmpl
arpl
jle
xchg
popl
mov
int
lcall
jae
aam
insb
int3
xlat
rol
or
das
mov
pop
cmp
pop
xchg
cwtl
outsb
jo
pop
je
inc
rorb
lea
shlb
int3
lret
jmp
jae
jecxz
dec
lods
jecxz
cwtl
aas
or
stos
imul
sub
xor
arpl
jo
jns
mov
cld
shlb
rcl
adc
enter
push
fisttpll
add
push
cmp
fwait
sbb
fs
std
push
jbe
xchg
int3
in
loopne
lret
sub
push
xor
pop
cld
or
js
leave
pop
adc
leave
iret
cli
lea
mov
push
push
in
dec
jbe
adc
aam
int
or
mov
xchg
scas
cld
imul
adc
out
sbbb
out
inc
shlb
je
int3
mov
loop
adc
jp
inc
daa
andb
mov
xchg
push
cli
out
jecxz
mov
aam
xchg
xchg
test
mov
cmp
cwtl
cmpsl
jb
jle
adcb
mov
int
add
stos
or
mov
iret
add
jo
jnp
xchg
jmp
push
das
mov
adc
ja
pop
lods
push
adc
cmp
mov
jecxz
pop
adc
rcl
rorb
jae
test
leave
mov
je
inc
bound
fwait
into
loopne
adc
lods
scas
lods
mov
jb
call
or
push
dec
sbb
or
movsl
and
lods
in
xchg
adcb
popf
dec
or
fcompl
sbb
insb
jbe
mov
xor
cmp
sbb
fiaddl
pop
jb
repz
cmpsl
xchg
adc
dec
dec
mov
sbb
pop
lea
fcomps
cmp
xchg
add
cmp
out
into
cmp
test
scas
jo
fucom
aam
rcr
lcall
xor
cmpsl
lock
das
jb
fs
dec
sahf
jae
jl
fsts
jecxz
fnsave
aad
repz
cld
test
mov
xchg
bound
roll
and
cli
ficoml
xchg
popf
int3
xrelease
clc
in
repz
push
inc
js
scas
and
inc
movsb
negl
nop
std
repnz
loopne
jge
pushf
insb
cld
inc
fldt
ss
stos
int3
xchg
and
add
mov
and
stos
push
aam
stos
cmpsb
insb
aam
cld
lea
inc
in
mov
lods
aam
call
or
rcll
adc
push
les
loopne
cltd
sarl
out
into
lods
or
es
mov
and
pop
mov
sub
push
roll
pop
cli
lods
push
jle
cmp
invd
xor
pop
fstl
inc
test
in
aam
pop
mov
in
sbb
dec
clc
adc
mov
mov
cmp
jo
icebp
dec
cli
sbb
lock
sbb
popa
add
out
pop
or
jae
pop
xor
inc
add
or
cld
pop
imul
xor
adc
xchg
loope
int
mov
addr16
add
bound
push
mov
cwtl
ret
pop
and
je
push
xlat
inc
add
test
repz
sub
sub
sahf
lret
scas
enter
push
ret
sub
imul
decl
test
sarb
dec
cwtl
stc
xor
add
xor
sbb
mov
in
xor
stos
fcoms
aam
je
and
push
push
sbb
add
push
imul
loop
jmp
repnz
adc
pusha
sub
fwait
pop
ret
xlat
das
add
stos
xchg
into
lcall
adc
add
sub
fwait
push
xchg
imul
and
in
movsl
cmp
inc
ret
jg
mov
jne
pop
lods
sbb
shrb
stos
pusha
pop
fildl
shlb
sar
or
mov
sub
pop
or
or
iret
imul
mov
xchg
movsl
in
je
mov
jno
mov
lock
inc
pusha
lahf
orb
push
and
ljmp
pop
pushf
adc
sbb
lds
mov
les
mov
push
lcall
rcl
leave
sbb
or
or
mov
cmp
mov
push
scas
icebp
sub
pop
stc
movsl
add
xlat
bound
dec
inc
hlt
sub
fisubrs
outsb
lret
push
mov
popf
jmp
and
test
sbb
mov
mov
or
iret
push
mov
pusha
fcomip
inc
arpl
fmuls
adc
mov
jb
int
mov
push
push
push
mov
fs
mov
and
stos
int3
mov
lods
inc
jge
mov
xchg
repz
ja
cmpsl
jbe
mov
cwtl
mov
cwtl
push
ljmp
test
inc
jb
dec
push
insb
loopne
mov
jns
shll
stc
dec
fildll
jne
jns
pcmpgtw
sub
mov
jo
mov
push
dec
enter
fs
sbb
idivb
jge
xchg
inc
and
iret
xchg
jbe
add
inc
rcrb
int3
mov
pushf
cmp
push
inc
fwait
push
int
call
adc
and
push
loop
loope
call
push
daa
shll
loopne
jle
push
xor
push
pop
leave
les
pop
cmp
jo
cmpb
mov
shlb
shll
jns
inc
mov
cli
or
adc
mov
push
xchg
inc
mov
jg
sbbl
andl
shll
aad
push
popf
dec
adc
mov
mov
adc
xor
sub
aad
add
push
lcall
or
add
mov
sub
lods
int
fcompl
push
sarb
mov
mov
mov
xchg
xchg
test
xchg
inc
idivl
adcl
call
sbb
mov
lret
mov
test
mov
pop
jo
or
cmp
stc
push
movsl
cmp
clc
and
xchg
nop
pop
jno
andb
les
fiaddl
mov
sub
cmp
sbb
loop
cmpsb
test
inc
cmpsb
sbb
dec
mov
dec
fwait
leave
mov
push
in
lock
lods
push
test
lret
cwtl
fistps
ljmp
add
inc
xchg
cmp
hlt
cmp
xchg
cmpl
fldcw
mov
cmp
fsubl
bound
rcrb
int
xchg
sub
mov
insl
push
jbe
adc
sbb
cwtl
push
push
mov
rcll
sbb
dec
sub
add
les
in
xor
inc
in
lahf
xchg
jo
mov
xchg
ret
xchg
pop
js
aam
mov
ss
das
mov
cs
dec
pop
xchg
and
rorl
jns
cmp
or
ss
cmpsl
jge
add
jp
out
js
inc
lcall
adc
jmp
test
inc
push
and
cmp
shr
ss
cmpl
xchg
lods
outsl
xor
adc
bound
jecxz
inc
pop
repnz
xor
aas
jno
adc
or
xor
mov
js
mov
add
cmp
inc
mov
icebp
sub
test
dec
leave
daa
add
out
test
fimull
gs
cmc
pop
pop
popa
and
dec
xchg
push
mov
inc
pop
lret
jl
pop
adc
stos
shl
push
cli
xchg
ficoms
pop
sub
jo
addb
add
in
xorb
mov
push
jo
outsb
cld
xchg
pop
dec
fisubrs
jecxz
mov
imul
insb
jmp
out
mov
lods
ja
jnp
in
fwait
rcl
stos
loop
ja
mov
or
add
out
out
add
js
jecxz
jne
dec
xchg
das
mov
add
out
lcall
aaa
add
test
popa
mov
push
in
adc
mov
ja
jne
and
daa
xor
xor
testl
lods
mov
lcall
push
sbbl
pop
sbb
outsb
test
ljmp
imul
bound
pop
jno
pop
and
push
xchg
and
xor
add
loopne
mov
inc
fs
iret
enter
decl
xchg
movsb
jb
jo
jecxz
arpl
ficompl
pop
mov
cmpsb
pop
adc
jge
cmpsb
mov
mov
cmp
fildll
cwtl
inc
adc
sbb
push
adc
inc
inc
cs
inc
adc
testb
aad
pop
clc
pusha
imul
ret
sbb
jle
jae
adc
mov
rclb
mov
test
daa
add
cmc
xchg
shl
je
ljmp
adc
push
mov
inc
xchg
lock
nop
mov
data16
xchg
lret
push
push
fdivl
jl
outsb
or
testl
int
sbb
pop
mov
pop
adc
into
outsb
aas
insb
ret
gs
jp
push
fstl
out
add
mov
xchg
sbb
cwtl
jnp
xor
jmp
das
es
mov
test
mov
outsl
jns
stos
and
cmp
pop
add
mov
push
jmp
jae
ss
push
stos
loop
xor
jne
pop
mov
sub
add
shl
aaa
lea
xor
adc
push
mov
je
or
mov
cmp
and
js
xorb
and
cwtl
dec
negb
andl
and
imul
xlat
clc
cli
pandn
jmp
adc
xor
loope
and
mov
lahf
mov
mull
push
pop
scas
or
cwtl
in
push
icebp
std
pop
lds
lock
pop
aas
pop
out
insl
fisttpll
imul
icebp
and
cmpsl
clc
movsb
pop
ret
arpl
mov
mov
dec
push
inc
inc
add
leave
push
mov
xchg
testl
cmp
rolb
inc
jno
jns
mov
mov
jnp
add
dec
fistpl
rcr
xchg
mov
dec
pop
fcompl
dec
mov
movswl
mov
inc
mov
dec
jge
aam
filds
outsl
sub
adc
sub
push
fs
inc
outsb
or
stos
rolb
inc
fidivs
cmp
pushf
pop
push
iret
xchg
cmp
pop
mov
cmp
aaa
cmpsb
mov
hlt
xchg
xor
push
cmp
hlt
sbb
pushf
cmc
add
mov
test
fsubl
mov
das
mov
pop
mov
bound
fs
fiadds
inc
sbb
sbb
loopne
dec
or
icebp
add
jns
ljmp
jne
sbb
adc
dec
movsl
ss
adc
into
cmpsl
pop
lret
insl
and
rclb
xchg
sbb
xchg
sbb
and
add
adc
shll
push
mov
push
es
pop
push
cltd
adcb
sbb
bound
sub
mov
ljmp
iret
into
fistl
sub
jb
push
push
lods
dec
push
pusha
cmp
aad
pusha
and
lret
test
lret
xor
push
or
stos
outsb
cltd
lods
pushf
sub
aam
frstor
cmc
into
fdivrs
mov
sub
push
aas
mov
in
lcall
push
outsb
icebp
mov
call
insl
push
loopne
inc
xorb
iret
cwtl
clc
sarb
sub
test
dec
cmp
cmp
mov
in
xchg
je
sub
repz
xchg
ss
test
dec
pop
push
outsl
push
in
and
cltd
notl
in
push
insb
xor
aad
dec
cld
xchg
subb
nop
loop
push
push
imul
lock
icebp
addb
inc
imul
cli
push
sahf
and
fstpl
call
cmp
or
mov
outsl
call
popw
mov
push
mov
inc
adc
nop
dec
fbstp
adc
xchg
mov
mov
xchg
fisttps
test
cwtl
xchg
xchg
xchg
jmp
cmp
ss
xor
test
sub
in
scas
sub
cmpsl
aam
mov
or
mov
inc
push
sbb
jb
adc
add
ret
inc
cmp
xchg
sub
in
mov
fiadds
inc
dec
jne
mov
push
or
push
repz
fldcw
mov
inc
mov
jle
movsb
outsl
fisttpll
repz
fwait
int3
inc
lcall
push
out
imul
pushf
inc
loope
leave
xchg
daa
push
jb
clc
movsb
gs
pop
jb
xchg
jp
jnp
aaa
xchg
dec
out
push
mov
mov
je
dec
mov
ljmp
add
push
push
test
xchg
les
sub
stos
and
insl
fwait
cli
mov
pop
loopne
jmp
mov
addr16
xor
add
xor
into
addb
bound
xchg
insb
das
outsl
pop
push
aad
xchg
jns
dec
lcall
xchg
mov
int3
sti
ja
cmp
sbb
decb
mov
fwait
sbb
sbb
out
push
add
popf
or
mov
fcmovu
xchg
test
leave
cltd
nop
sbb
fidivl
mov
xchg
xchg
ja
xchg
out
mov
icebp
dec
cmpsb
pop
int3
push
xchg
jp
pop
stos
jmp
inc
cmp
rcrl
sub
lds
inc
sub
xchg
mov
addr16
aam
fs
jo
les
vpmulhuw
push
dec
cmc
jge
pusha
add
adc
cmp
and
mov
inc
aam
test
inc
les
add
sbb
jo
dec
dec
out
fsubr
cmp
dec
aad
mov
push
test
stos
and
fbld
lret
insl
push
mov
push
pop
mov
sti
stos
cmp
mov
jge
or
es
movsl
jmp
jno
xchg
insb
and
enter
popf
lahf
push
xchg
sub
imul
jg
repnz
jecxz
in
sbbl
push
imul
or
dec
imul
in
pop
daa
xchg
pop
insb
lea
push
fnstcw
clc
ds
repnz
ds
jge
lret
outsb
pop
fists
dec
enter
adc
stos
ds
and
roll
leave
sbbl
loope
ss
xor
test
mov
rclb
xchg
inc
pop
sbb
cmovne
jno
ss
out
loopne
cmp
inc
rcll
pop
hlt
hlt
sarl
jg
inc
es
push
push
jp
gs
sbb
or
dec
shl
inc
push
sub
adcl
bound
mov
pop
sbbl
jmp
sub
mov
fs
clc
pop
ljmp
xchg
mov
fsts
add
mov
shll
lahf
fstpt
in
push
fbld
mov
mov
dec
jns
lock
xchg
cld
iret
lret
xchg
sbb
mov
out
movsb
arpl
jae
fiaddl
xor
inc
dec
mov
cltd
add
aaa
pop
push
je
clc
xor
mov
das
imul
mov
aas
add
xor
rclb
cld
cmp
inc
add
xchg
fsts
ja
sub
push
es
lret
cmp
sub
jo
adc
dec
xor
mov
push
jge
dec
mov
jb
stc
mov
inc
lret
das
mov
xchg
push
fistps
mov
mov
stos
mov
mov
jp
stos
and
shrl
pop
jmp
and
push
lods
daa
int
fucomp
ljmp
hlt
push
mov
pushf
dec
test
push
aas
insb
bound
orb
pop
fcomp
sub
or
add
lock
xacquire
gs
push
iret
in
adc
pop
outsl
sub
dec
sub
movsb
dec
jmp
cmp
out
in
imul
xor
xor
pop
rorl
sbb
js
mov
sbb
xchg
push
push
fwait
popf
inc
xor
shrl
xchg
xor
jns
xchg
les
aas
xor
dec
or
in
push
lods
push
lcall
cmp
aam
fmulp
out
mov
mov
out
in
jne
jmp
repnz
pushw
adc
pop
jbe
jbe
or
sbb
xor
movl
xchg
push
fs
insl
sbb
dec
jle
aad
orl
mov
xchg
test
shlb
fcoml
mov
jecxz
lods
dec
sti
push
int
mov
and
dec
jge
mov
fs
rcr
cmp
mov
int
nop
and
cmpsl
es
outsl
sbb
push
xor
cmp
pusha
xchg
mov
not
jp
inc
xchg
ret
call
mov
cmp
aaa
dec
sbb
mov
mov
mov
in
mov
mov
stc
sti
cmp
sub
lahf
daa
cmpsb
rorb
popa
xchg
fisubrs
pop
inc
dec
out
lods
adcb
mov
xlat
pop
push
stc
mov
mov
mov
or
shlb
stc
inc
out
pop
mov
mov
pop
jns
and
jne
or
scas
mov
xor
jne
mov
mov
jmp
push
data16
or
jp
sub
push
dec
jg
jecxz
push
int
cmpl
xor
test
xor
push
repz
adc
add
cmc
jecxz
jge
xlat
sub
pusha
scas
subl
mov
cltd
jne
mov
mov
mov
pop
rorb
leave
sti
inc
cwtl
add
out
pop
fstpl
push
pop
xor
mov
push
sbb
mov
push
jno
arpl
lea
or
sbb
adc
inc
dec
faddl
push
dec
divb
xor
adc
stos
xor
popa
jp
inc
add
add
cmp
cmp
pushaw
fcmovnu
inc
icebp
xchg
cmp
lea
pop
push
or
xchg
cli
adc
pop
movsl
adc
fucom
push
push
enter
movb
xor
dec
xor
pusha
mov
outsl
fldt
sarb
jge
gs
sti
repnz
in
dec
jle
dec
adc
cmpsb
push
mov
sub
or
imul
dec
testl
sbb
fldenv
jbe
sbb
sub
sbb
in
add
mov
xor
cmp
aas
jmp
push
enter
je
adcb
mov
ljmp
and
imul
jae
shll
outsl
push
push
fldenv
xchg
inc
jmp
lret
into
je
and
mov
mov
add
sub
mov
pop
mov
stos
mov
or
pop
adc
repz
lds
sbb
mov
in
enter
push
fldcw
add
mov
mov
cmp
xchg
add
popa
or
ss
mov
cmp
inc
adc
out
lcall
xchg
ret
dec
push
out
push
add
in
dec
out
sub
xor
pop
call
fucom
mov
out
loop
cmpsb
inc
pop
xor
jbe
inc
std
xchg
and
addr16
dec
mov
sub
mov
inc
je
stos
push
idivb
rcrl
xchg
cltd
pusha
scas
aam
push
daa
dec
push
icebp
adc
rcll
xchg
fcmovu
repz
xor
jae
mov
test
mov
cmc
mov
movsb
movsl
mov
cmp
pop
or
push
repnz
aad
aas
or
shll
stos
jle
inc
add
aaa
out
pop
and
popf
iret
xlat
das
std
jl
mov
in
std
cmp
scas
sbb
sarb
pop
into
adc
jecxz
and
stos
mov
dec
xchg
ror
int3
rcl
jecxz
add
and
pop
sbb
jg
test
movsb
imul
inc
pop
andl
nop
adcb
sub
shrl
and
ljmp
int3
aas
sti
je
iret
jo
sub
mov
aad
in
mov
testb
add
scas
sbbb
ja
repz
xor
popf
pop
ljmp
popa
adc
adc
into
ret
dec
test
add
xlat
adc
or
imul
mov
mov
sub
stos
and
les
xor
fwait
or
stos
cmp
mov
push
les
lahf
or
jmp
push
cmp
lcall
push
dec
lahf
xor
aas
inc
mov
mov
dec
scas
shll
test
mov
cli
mov
mov
lret
jns
lock
gs
cmp
pop
sahf
fwait
cltd
lock
mov
jne
in
leave
jp
cmp
push
jo
lea
jae
fisubl
lds
jp
or
and
mov
shl
lock
or
xchg
fcom
lahf
subb
nop
scas
sbb
aas
imul
jmp
fcomp
xor
jg
or
xor
xchg
ret
sub
lds
push
jo
call
bound
adc
bnd
sub
push
icebp
sub
pop
push
es
mov
cmp
out
push
jmp
bound
ljmp
das
cs
cmp
and
sub
fcmovbe
push
xchg
std
xor
jg
nop
jb
ret
mov
fs
outsb
pop
cmp
lods
mov
mov
add
and
movsb
das
repz
dec
ja
add
xor
cmpsb
lahf
out
pop
push
add
or
sar
lcall
stos
sub
or
movsl
lret
adc
cmp
xor
mov
in
arpl
test
loope
mov
inc
fdivl
mov
mov
xchg
xchg
out
mov
ror
cmp
push
data16
test
dec
test
mov
test
mov
fdivp
jge
inc
xchg
ss
sahf
jne
inc
xchg
xchg
mov
imul
rcrl
aam
ficompl
enter
fisttps
dec
lcall
push
int
std
aam
mov
cmp
mov
pusha
adc
sbb
ret
xchg
mov
frndint
lcall
sbb
fucom
mov
test
stc
cmp
mov
addl
nop
xor
mov
in
sub
mov
pop
push
lods
pop
cmp
fimull
jns
sub
dec
cmp
mov
mov
jge
fcoms
cli
lret
test
gs
outsb
test
add
xchg
cltd
dec
or
push
sahf
or
into
cld
mov
lcall
pop
cmp
push
out
int3
jo
nop
jne
repnz
ja
xor
push
insl
xchg
adc
mov
xchg
inc
movsb
xor
and
jl
int
cmp
xchg
repnz
sti
mov
add
popf
rclb
fimuls
and
icebp
enter
lock
stc
jmp
push
cmpb
and
mov
push
xor
sahf
fmul
mov
leave
sub
test
add
aas
mov
xchg
mov
fs
movsb
stc
js
icebp
stos
xor
test
repnz
lds
mov
cmpsl
fnstsw
lds
jbe
or
mov
push
xchg
icebp
mov
int3
sbb
mov
shlb
fcmovu
mov
push
sti
in
mov
cmp
jns
mov
scas
aad
fidivrl
jnp
add
or
adc
xchg
xchg
adc
xchg
adc
add
cli
lret
int3
xchg
sub
mov
sub
in
jmp
loope
scas
pop
hlt
loop
mov
dec
mov
roll
mov
notl
push
fistpl
xor
push
xchg
push
pop
lods
cltd
enter
sbb
push
cmp
cmp
push
enter
jno
insb
fcmove
out
xchg
icebp
scas
arpl
adc
lcall
pushl
add
xor
push
push
leave
ljmp
and
fadd
repnz
arpl
fists
bound
cli
and
and
adc
mov
add
inc
mov
rclb
xchg
mov
add
out
movsb
insb
fbstp
jae
arpl
aas
add
xchg
pop
dec
in
icebp
addr16
xorl
or
xor
mov
rcll
mov
and
push
inc
in
cs
pop
mov
sub
out
sbb
std
ja
cmc
add
xlat
pop
leave
cmp
subl
and
pushf
jle
hlt
or
enter
pop
rorb
nop
and
out
xor
into
scas
test
shrl
shl
cwtl
inc
add
lret
test
leave
push
lcall
xlat
dec
jbe
push
push
adc
mov
out
aaa
cli
push
cmp
arpl
sub
add
daa
fdivs
adc
icebp
add
leave
int
jno
mov
in
xchg
data16
jb
cmp
dec
scas
cmp
pop
dec
fadd
notl
test
fs
and
je
push
loop
insl
xchg
xchg
mov
sub
jmp
aas
jge
push
dec
int3
mov
cmc
sarb
shll
inc
fstl
out
aaa
fildl
inc
xor
test
dec
movsb
jno
mov
cmp
mov
push
ja
adc
jecxz
cwtl
out
fwait
or
xor
add
ljmp
jae
xlat
xor
scas
and
or
sub
xchg
lods
int3
popf
sar
adc
shll
mov
and
pushf
addr16
shlb
jo
or
and
pop
pop
cmp
jle
jno
cmp
lahf
out
mov
dec
dec
pusha
out
fwait
rorb
das
orb
addl
in
push
inc
cmpsl
xchg
test
aas
rorb
push
stc
popa
dec
push
push
lods
mov
lds
imul
nop
test
repnz
andb
jnp
jmp
mov
adc
add
dec
fistps
or
das
loop
out
lock
mov
repnz
inc
xor
imul
cmc
cmpsb
adc
fcoms
jo
jp
in
adc
in
into
pop
orb
sbb
lods
aam
imul
jg
pop
or
push
rol
stos
lods
lock
mov
xor
jbe
inc
push
adc
adc
mov
roll
inc
ret
repz
int3
adc
aad
mov
stos
jbe
mov
pusha
icebp
gs
rorb
push
mov
lock
adc
insl
gs
xchg
mov
or
and
or
test
scas
mov
jnp
pusha
inc
cmpb
jp
dec
inc
add
sub
loop
cmp
xor
daa
jbe
sbb
mov
xor
adc
jp
aas
xchg
or
insb
dec
in
icebp
jmp
fdivr
out
rcll
daa
xchg
sub
jmp
xchg
inc
sti
jp
cwtl
cwtl
sti
js
push
pop
adc
xchg
es
fisubrs
int
jno
test
stos
ret
ja
mov
and
dec
mov
mov
cmp
mov
add
es
xchg
outsb
push
inc
push
jl
push
mov
es
and
outsl
xor
dec
mov
cld
cmc
sahf
and
sub
negb
xchg
pusha
cmp
cltd
jo
lret
shll
push
scas
jbe
adcl
lcall
mov
cmp
or
pop
lea
cmp
cmp
mov
iret
jge
sbb
rcrb
cmpsb
cmp
sub
pop
jno
iret
std
imul
xchg
adc
adc
pushf
cmp
mov
push
aaa
ret
test
in
cli
jb
or
add
fs
movsb
cmpsl
outsl
sub
cmp
sub
lret
or
mov
loopne
add
call
jp
push
inc
jb
lcall
out
shlb
andb
jns
outsb
push
test
inc
mov
jns
fiaddl
cwtl
js
fdivr
stc
pop
push
data16
jne
adc
jo
and
cmpsb
cmp
bound
scas
sub
aam
pushf
jmp
jno
jb
iret
addr16
shlb
mov
out
jmp
sub
push
push
push
sub
int3
into
adc
or
imul
cmpsb
hlt
xchg
dec
insb
sub
jbe
lahf
in
sub
sbb
push
sub
fisubrl
daa
sbb
push
aam
pop
movsb
outsl
cwtl
dec
xchg
jl
rol
jl
das
je
imul
icebp
test
push
adc
push
inc
mov
or
push
sbb
xchg
jle
xchg
shll
sub
or
bound
leave
ljmp
xor
rcll
into
pop
or
insl
jp
dec
cwtl
xchg
fisubrl
hlt
jb
js
mov
xlat
xchg
and
sbb
adc
hlt
rcr
xchg
xor
loopne
je
or
push
testb
xchg
mov
repz
xor
out
cmp
dec
in
and
sbb
add
mov
and
inc
sub
push
lret
sub
lcall
xchg
jbe
ja
pop
popa
cli
popa
mov
and
dec
sahf
mov
popa
enter
test
push
sub
das
cmp
mov
jnp
dec
ja
ret
addr16
in
sbb
test
dec
cmp
push
mov
aaa
mov
xchg
cli
or
push
mov
mov
xor
das
setle
sbb
push
cwtl
scas
lods
loopne
shlb
or
lock
adc
addr16
daa
fdivrs
out
xchg
sbb
iret
push
add
mov
loope
pop
sbb
dec
ds
xchg
cmp
iret
sub
xor
lock
sub
pushf
mov
jbe
adc
and
mov
bound
sti
mov
mov
rcrl
xchg
out
push
nop
push
leave
out
outsb
push
data16
and
int
dec
add
add
and
lock
jae
dec
imul
insl
fs
rol
and
mov
bound
cmp
dec
add
leave
je
xor
icebp
loope
adc
shrb
inc
add
stc
jns
and
out
dec
dec
sbb
fidivs
addl
pop
pop
jne
movsl
imul
ds
jbe
jl
adc
outsl
in
jmp
xchg
inc
in
push
cwtl
mov
and
icebp
cwtl
mov
pop
xlat
stos
push
iret
push
pop
jns
push
pop
pop
pop
fistpl
cld
nop
nop
rcll
pop
frstor
movsb
push
cwtl
in
inc
lods
pop
mov
mov
nop
aaa
shrl
imul
mov
cmc
push
test
xor
jl
sbb
add
lods
mov
pushf
fiadds
cmp
inc
jb
xchg
into
std
jp
push
fucomip
xor
lret
sub
int
jne
dec
or
xchg
inc
inc
mov
or
jae
icebp
movsl
cmp
subb
js
xlat
mov
daa
jge
mov
addr16
psubb
ffreep
fsubl
adc
fwait
mov
dec
jns
inc
sub
mov
push
gs
cmp
out
lahf
les
push
sbb
cli
bound
inc
mov
stc
jo
addr16
pusha
clc
loopne
mov
popa
add
inc
pushf
mov
lock
in
mov
out
mov
adc
cmp
lods
sbbb
jge
lret
ds
out
push
mov
sbb
push
jo
or
aam
add
mov
push
push
mov
enter
divb
popa
outsb
xchg
jbe
cli
outsl
enter
jb
push
orb
cld
adc
pop
mov
xor
sub
jb
mov
cmp
fadd
inc
call
jg
movsl
xchg
out
mov
jle
jg
mov
gs
test
movsb
pop
lods
lods
rol
enter
std
andb
or
or
repnz
pusha
das
popa
and
addb
mov
dec
imul
and
cmp
adc
test
adc
mov
test
mov
ljmp
roll
sbb
imul
sub
sarb
cmp
imul
mov
lock
fstpt
mov
lds
rcll
dec
fidivs
sahf
loopne
stos
leave
mov
dec
push
aaa
aad
aam
stc
sbbb
fnstenv
cmp
push
lock
je
popa
ror
pop
and
mov
into
push
dec
cwtl
inc
scas
inc
das
sbb
dec
subl
stos
andb
xchg
shll
pop
pop
sti
in
or
enter
dec
cvtdq2ps
and
mov
mov
sub
incl
ret
jnp
mov
pop
and
xchg
sub
pop
jb
lea
leave
idivl
or
adc
add
push
sub
inc
add
inc
sbb
rorl
fbld
ficomps
cmpsb
and
int3
jg
mov
lods
addr16
icebp
xor
jb
jmp
mov
loope
imul
xor
fistpl
out
icebp
mov
jg
mov
mov
dec
cmc
and
ficoms
dec
xchg
mov
jecxz
jae
push
into
mov
sbb
shl
fnstsw
jg
inc
int
mov
mov
pushf
xchg
je
fnstenv
xchg
cmp
pop
shrb
int3
sbb
xor
iret
ds
sbb
adc
in
ja
xchg
fsts
mov
andl
sub
addr16
daa
hlt
mov
mov
loopne
iret
sub
ljmp
sbb
mov
pop
xor
popa
mov
mov
ret
lret
lret
adc
adc
xor
xor
stos
push
stos
lock
inc
add
xchg
or
cmp
cmp
cltd
mov
mov
test
jge
arpl
cmp
sbb
adc
bound
pop
cmc
test
jb
mov
stc
xor
and
testb
cmp
fwait
ret
mov
xor
jns
xor
call
lock
adc
stc
add
cwtl
fdivp
pop
stos
pushf
int
sbbl
push
mov
cmc
add
inc
es
mov
fmul
rorb
xor
xchg
pop
xchg
pop
das
adc
ja
lods
roll
and
fwait
xor
ror
cmpsl
in
inc
cmp
mov
das
push
test
add
xchg
in
cmc
mulb
xchg
sbb
jnp
lods
mov
adc
test
sub
outsl
sub
shrb
push
std
pushf
pop
js
dec
outsb
sbb
inc
inc
inc
push
in
insl
or
shlb
filds
repz
clc
dec
adc
and
out
xchg
aaa
add
stos
orl
push
sub
jecxz
mov
add
lock
mov
out
shrl
stc
lret
fisttpl
ret
testl
pop
das
xchg
cmp
sub
dec
jne
bound
add
cmpsl
out
push
enter
shll
xchg
cmp
mov
mov
and
pusha
shr
and
mov
ficoml
inc
in
adc
xlat
mov
mov
xchg
push
xchg
mov
jg
xor
push
jp
inc
pop
aam
mov
add
cmp
adc
pop
add
cld
dec
jb
pop
mov
xchg
xor
test
daa
sbb
mov
lret
mov
enter
jbe
cmp
lods
xor
sbbl
inc
into
add
je
adc
pop
mov
sbbl
fildl
pop
loope
jnp
sub
pusha
sub
mov
adc
lret
in
ret
push
clc
imul
mov
adc
and
cmc
xchg
outsb
stos
lret
xchg
dec
or
sub
dec
or
lea
test
mov
out
mov
fsts
out
push
and
lock
ja
test
mov
fcoml
sub
andb
imull
cmp
dec
cmp
f2xm1
xor
repz
dec
pop
sbb
inc
call
mull
js
pusha
popf
sbb
cmp
in
push
pop
cld
insl
out
rorb
js
pop
shrl
mov
je
jne
clc
push
push
dec
ss
lea
dec
jge
mov
sti
idivb
mov
sarb
pop
push
sbbl
ds
or
sub
xor
inc
addl
fidivs
nop
xchg
adc
int
jns
mov
lock
xlat
mov
jp
dec
cltd
movsb
sub
fs
sub
pop
icebp
cmp
cmp
inc
push
movsb
inc
pop
scas
mov
jnp
push
mov
rcll
adc
and
xor
push
cmp
out
adc
outsb
aas
in
stos
push
or
jo
lods
jae
test
or
bound
mov
lahf
dec
addr16
dec
test
or
lds
pusha
clc
and
pusha
xchg
inc
imul
ret
or
dec
sbb
xchg
fcoms
in
in
lahf
jae
test
outsb
lret
xor
js
call
mov
cli
in
cmp
call
pop
push
push
shl
inc
mov
in
lret
mov
lcall
leave
cmpsb
movsl
or
xchg
push
addr16
or
mov
push
xor
dec
lods
xor
mov
loop
ret
jae
mov
sub
pop
jmp
push
cmpsb
fdivrs
dec
rorl
and
adc
xor
cmp
lods
stos
xchg
pop
fs
sbb
inc
mov
insb
mov
subb
cmpsl
xor
sub
mov
aaa
xor
or
cmp
push
ja
jnp
std
push
cld
inc
cwtl
push
ffree
lret
es
mov
add
pop
dec
xor
enter
mov
in
out
pop
xor
fsubrs
add
mov
jmp
jle
jge
filds
add
call
xchg
fistpl
ljmp
rcr
xchg
add
mov
out
rolb
popa
sub
adc
mov
js
bound
cmp
or
insl
or
push
rorb
ficoms
sarl
stos
jg
mov
sub
loop
sub
out
ss
jl
repz
add
repz
es
sbb
jl
mov
or
jb
sub
in
lea
pop
scas
cmp
mov
inc
inc
add
ja
icebp
pop
cmp
icebp
push
lock
mov
jp
out
outsb
and
xor
popf
mov
and
je
or
mov
inc
fldt
inc
mov
cmc
nop
decb
jp
das
cmpsb
pop
xchg
sti
mov
outsb
cs
xchg
pop
cmove
mov
incb
push
addr16
xchg
pop
push
xchg
mov
pop
sub
dec
sbb
lcall
xlat
shl
sub
lret
and
and
add
jnp
sarb
sub
mov
inc
cmp
add
sbb
lock
call
lea
repz
sub
sarb
fstps
xchg
xlat
xchg
sbb
xor
inc
dec
in
cmpsb
and
mov
cmpsl
xchg
jno
rcrb
mov
dec
adcb
cwtl
nop
push
sub
push
mov
adc
test
cltd
je
lret
iret
mov
es
pop
push
mov
es
and
or
mull
sbb
fnsave
push
cmpb
xchg
mov
cwtl
pop
repnz
sub
stc
inc
dec
inc
push
sub
nop
cmpsl
mov
je
vmovss
pop
repnz
ucomiss
push
out
xchg
adc
add
fsubl
xor
test
jge
mov
jmp
ret
xor
mov
jo
xlat
enter
add
jns
shll
je
mov
shrl
lcall
int3
xchg
jae
adc
int3
neg
icebp
jp
jmp
mov
or
lea
ljmp
push
bound
popf
mov
dec
xor
inc
add
sub
not
push
inc
jnp
rcll
cli
call
mov
movsb
or
sbb
std
neg
cmpsb
outsb
daa
sub
out
cmp
and
daa
addl
and
loope
dec
inc
xchg
ljmp
and
and
jmp
sbb
test
in
xchg
dec
pushf
js
jge
mov
loop
add
mov
fsub
push
pop
insb
fcomps
in
bnd
fcoms
addl
in
mov
pop
mov
add
jno
mov
test
jo
inc
xor
jno
push
test
out
cmpsb
into
bnd
test
inc
test
ret
pop
mov
jl
mov
xchg
cmc
in
jae
loop
adc
mov
aaa
jmp
mov
jne
loopne
cmpsl
loop
xor
adc
ret
sub
popf
stos
and
sbb
push
or
inc
xchg
mov
adc
loopne
cmp
filds
sbb
add
add
add
test
cli
xor
add
and
cmp
ja
push
insl
aaa
leave
adc
jo
aam
cltd
icebp
test
add
movsb
pop
clc
push
scas
test
pop
add
mov
dec
pop
push
dec
push
imul
jo
roll
add
stos
stc
movsb
push
mov
mov
sti
nop
rorl
insb
imul
or
adc
and
imul
enter
or
sbb
xlat
js
push
ds
cmovno
icebp
js
dec
adc
popl
scas
pop
push
push
cltd
stos
adc
dec
push
dec
sbb
daa
stc
xchg
into
shll
loop
and
mov
sarb
cltd
push
loopne
sub
mov
outsb
nop
int
subl
sbb
shll
es
popa
loope
fcomps
stos
in
roll
mov
inc
notl
fisttpll
or
clc
sub
pop
js
or
push
mov
sbb
xor
in
xor
stc
mov
sahf
nop
aad
xor
adc
inc
jnp
push
jl
fnstsw
aas
push
adc
inc
adc
mov
data16
push
imul
addr16
divb
push
sbb
xchg
push
rsm
fcmovb
or
mov
adc
pop
add
push
int
sbb
add
cmc
aad
jp
out
and
jno
mov
dec
imul
push
addr16
pop
je
pop
scas
inc
mov
add
call
ret
fistl
or
test
aam
sub
sbb
insb
daa
push
mov
pop
cli
fcmovnu
pop
ror
mov
mov
cs
addl
adc
stos
mov
push
sti
sbbb
mov
lock
adc
pop
fsubr
jns
mov
sub
ss
pop
fsubs
mov
push
stos
in
mov
aas
sub
fbstp
push
add
cmpps
cli
sti
dec
sbb
jne
inc
jbe
push
jns
push
loopne
sarb
sub
fsts
lods
and
into
mov
test
pop
das
gs
cmp
negl
pop
inc
ret
xchg
orb
sub
popf
jle
cmp
imul
outsl
scas
adcb
das
movsb
dec
inc
add
pop
mov
idivb
mov
negb
mov
cmp
sarb
mov
add
xor
das
mov
stos
xchg
jecxz
add
add
or
out
inc
test
mov
pop
add
int
cmp
push
mov
xor
adc
out
mov
adc
sbb
imul
mov
outsl
xor
in
xor
das
in
xlat
imul
add
outsb
or
fldl2e
imul
dec
adc
and
or
mov
out
leave
xchg
and
pop
repnz
pop
and
enter
dec
mov
mov
or
mov
mov
pushl
mov
sub
mov
xorl
jp,pn
lds
out
stos
shlb
xchg
xchg
in
push
lcall
aas
lret
jae
shll
pop
shll
das
insl
scas
es
fdivrs
lods
push
in
imul
cs
roll
fistl
mov
rcl
das
cmpsb
mov
cmc
hlt
fwait
in
jge
insl
lahf
lods
jge
jno
pop
and
aaa
xor
clc
js
lods
inc
adc
add
xlat
lcall
add
xchg
xor
outsl
pop
sahf
outsb
ficompl
les
out
push
mov
adc
mov
shrl
push
add
daa
cli
jl
cltd
cli
leave
mov
cli
idivb
test
stos
pusha
and
xor
pusha
pop
fldl
stos
ja
scas
dec
push
ss
std
jns
stos
fisttps
mov
dec
inc
xor
jp
and
push
nop
rcll
shlb
xchg
jg
xor
ljmp
in
and
daa
mov
and
jo
mov
adc
jnp
mov
sub
cmc
inc
sahf
sub
or
pop
out
test
lahf
or
insb
ret
lcall
dec
inc
loopne
lcall
aam
fimull
xchg
inc
mov
mov
dec
xor
aaa
repz
push
jl
lret
sbb
sbb
dec
inc
addr16
dec
and
mov
enter
in
jge
icebp
leave
out
imul
jns
dec
cmp
push
bound
mov
shll
imul
cmp
sub
cltd
or
insl
xchg
clc
repnz
subb
outsl
inc
xor
stos
dec
and
xchg
add
jge
int
push
push
mov
lock
je
mov
dec
add
xchg
mov
sbb
je
mov
cmpsb
push
xchg
iret
add
add
lret
inc
aam
pop
adc
xchg
rolb
xlat
loop
std
jecxz
ret
pop
out
sbb
xchg
lret
adc
add
cmp
ljmp
mov
stc
leave
xchg
cli
rorl
xchg
mov
cmpsl
out
std
mov
jne
jbe
jecxz
mov
mov
dec
data16
mov
dec
andb
sbb
rcr
or
adc
mov
fisttpl
jbe
lret
jmp
in
sbb
lcall
and
in
jb
nop
xchg
jmp
lea
xchg
xor
fdivp
add
testb
lock
loopne
hlt
fs
adc
mov
icebp
xchg
aad
adc
pop
in
bnd
loopne
jb
stc
jns
in
or
lcall
aas
mov
test
fisubl
shrb
lods
cmp
test
sti
push
push
mov
movsl
pop
push
lret
pop
lret
inc
pop
jns
sbbb
jne
inc
outsl
int
lea
imull
xchg
roll
mov
and
rdpmc
hlt
add
pop
in
lar
dec
cmp
cmp
sbb
mov
mov
mov
adc
sbb
xchg
lock
jp
sti
jno
inc
cmp
lret
aam
iret
lods
xchg
repnz
jb
push
xchg
in
jp
insb
sbb
push
cmp
push
pop
cwtl
ret
ja
pop
sub
sbb
test
sbb
cltd
ret
cmp
pop
mov
adc
rolb
and
jp
push
or
test
sbb
cwtl
mov
rcll
push
jns
mov
mov
lahf
es
hlt
add
std
aad
roll
jnp
repz
dec
cmpsl
xchg
sub
outsb
enter
mov
and
mov
lock
or
daa
test
mov
stc
jno
mov
push
fdivp
mov
sbb
jecxz
push
cmpsb
es
xchg
test
outsb
cmp
int3
out
outsl
mov
adc
xlat
pop
and
jg
jl
adc
insb
xor
fucomip
ljmp
loopne
xchg
inc
dec
xor
dec
xchg
add
ljmp
in
add
loopne
rcr
or
ljmp
ss
inc
adc
inc
pop
or
cmp
and
pop
xchg
std
pop
fisubrl
std
fisttps
xlat
lods
mov
push
loope
jmp
out
cmp
push
lds
dec
adc
mov
imul
xor
rorb
sub
cmpsb
adc
mov
fwait
jle
iret
mov
popa
pusha
stos
arpl
xor
inc
scas
mov
or
faddl
mov
out
xchg
loopne
pop
ja
lds
jnp
push
and
dec
aam
lret
mov
lods
jb
mov
push
dec
lock
jo
shl
lret
gs
cld
mov
scas
adc
jl
sub
mov
pushf
sbb
mov
adc
dec
in
insb
lret
jp
lock
testl
int3
movsl
mov
mov
icebp
jge
orl
ret
sub
gs
xchg
dec
mov
cli
xchg
cmpl
bound
sbb
in
sbb
mov
subb
xchg
cmp
addr16
mov
mov
jl
stos
subl
mov
xchg
mov
loopne
js
ja
push
andl
icebp
shlb
pop
lock
movsb
xor
ljmpw
ja
sub
or
cmp
pop
adc
imul
insb
movl
rcrl
insb
rclb
cmpsb
sub
imul
movsl
jno
and
setno
aam
and
in
sub
loopne
pop
repz
rcr
push
mov
xor
or
cmpsb
leave
loopne
jb
pusha
jge
jg
and
adc
subb
testl
xchg
mov
and
sti
orb
jle
sub
cmp
aas
push
movsl
ret
mov
adc
mov
test
ret
fisttps
push
sub
mov
ljmp
aaa
sub
adc
jne
mov
xlat
add
sbb
jb
or
sub
fwait
lea
enter
lods
pop
push
fdivr
inc
sbb
add
shll
xchg
adc
xor
mov
sbb
shrl
lcall
cmp
test
push
fwait
rclb
roll
and
jmp
shrb
and
jg
add
movsb
or
pop
insl
lea
dec
loopne
stc
pop
jb
lods
mov
jo
jo
sbb
scas
std
xlat
les
inc
and
add
inc
and
or
ret
xchg
sub
jg
jae
mov
call
call
fs
pop
js
adc
xlat
pop
imul
cmp
mov
push
pop
jg
xorb
aad
xchg
sbb
adc
pop
inc
sbb
push
ja
std
test
sbb
dec
xchg
cmp
jle
xor
sbb
xor
inc
push
jp
xchg
jle
pop
cmp
sub
lret
push
loop
retw
cs
push
vprotw
cs
aaa
inc
cmpl
xchg
es
shlb
push
inc
in
movsl
push
stc
enter
push
and
imul
pop
fwait
mov
jle
outsl
dec
in
lea
fadds
mov
pushf
cmp
mov
dec
scas
sub
add
js
pop
push
xor
negb
arpl
or
out
and
push
jo
or
pop
pop
sbb
lret
adc
inc
xor
pop
push
dec
xchg
pop
pop
loop
paddusb
in
inc
iret
cmpsb
daa
hlt
sbb
jae
jno
stos
push
xor
mov
and
dec
cld
pop
cmpsb
cmpb
icebp
sbb
jg
dec
jne
xchg
cmp
iret
pop
mov
test
into
mov
imul
fldl
clc
insl
sub
cmpsl
jns
in
rorb
jg
cmp
popl
iret
mull
addr16
fwait
fwait
push
fildl
sub
ss
lods
sub
or
test
sti
push
popa
inc
inc
adc
push
push
stc
or
pop
iret
pop
ja
xlat
mov
or
call
stos
sbb
mov
cmp
pusha
mov
jp
xchg
sub
cmc
cltd
into
loopne
mov
shrb
inc
jne
call
scas
cli
lahf
mov
jle
adc
rclb
scas
adc
cmp
adc
add
and
inc
lret
icebp
aad
adc
xor
mov
sti
xchg
mov
jg
lret
sub
movl
sarl
ret
fs
dec
sub
cmp
ljmp
repnz
sbb
repz
test
adc
or
or
sbb
js
inc
dec
jmp
bt
pop
dec
dec
xchg
loope
mov
iret
xchg
sub
fbld
ljmp
test
pop
mov
xchg
in
sbbb
cs
pop
out
loop
es
jp
ficomps
inc
and
inc
flds
add
cmc
pop
cmc
stos
sub
inc
fcmovb
out
rolb
sub
pusha
mov
mov
mov
xor
iret
xchg
jl
rol
popw
cmp
xchg
xchg
push
push
outsl
bnd
test
mov
sub
mov
in
inc
dec
cltd
lods
pop
dec
sti
sbbb
lea
xor
test
add
add
les
xchg
cmp
cs
jle
inc
mov
imul
push
out
xchg
xchg
xor
gs
sahf
mov
leave
nop
push
loope
mov
shl
sub
xor
je
sub
stos
push
add
ja
lds
cmp
inc
shrb
je
shrb
xlat
and
test
dec
add
ret
int
sub
inc
mov
or
out
xchg
enter
sahf
mov
aas
xor
jl
in
inc
mov
adc
jmp
imul
imul
imul
loopne
xchg
adcb
cmpsl
out
xor
inc
and
dec
fdivrl
jge
sbbl
inc
jmp
call
rcr
jb
sbb
flds
xchg
sub
inc
mov
push
cs
push
pop
xorl
mov
jmp
es
lds
sbb
or
ljmp
arpl
insl
outsl
sbb
aaa
enter
pop
outsl
mov
aam
popl
out
in
dec
icebp
sub
mov
mov
ret
cmpsl
jmp
jnp
test
sbb
xchg
enter
add
adc
sbb
add
jl
mov
insb
test
add
imul
imul
loopne
jns
imul
hlt
hlt
int
gs
sbb
shlb
or
xor
fistpl
out
js
lea
lea
aam
mov
sub
clc
imul
cmpb
out
push
mov
int
xor
insl
pushf
mov
psraw
mov
xchg
pushf
fs
mulb
mov
cmp
dec
mov
pop
fcomps
or
sub
jl
div
stos
inc
test
pop
fnsave
std
js
push
xchg
and
aas
imul
push
sbb
pop
jle
cltd
fidivrs
lds
in
jg
mov
nop
mov
mov
mov
sarl
add
popf
or
and
in
out
push
sub
adc
inc
je
xorb
xor
outsl
cwtl
xchg
fwait
rcr
sti
aam
ja
inc
lret
in
adc
sbb
and
push
aam
sub
jnp
adc
insb
mov
mov
ja
xchg
cmpsb
push
xor
push
repz
jge
dec
inc
sbb
outsb
xchg
mov
out
push
add
xlat
mov
sbb
nop
sbb
paddsb
cmp
inc
in
push
bound
add
ret
mov
popl
stc
pushf
test
adc
sbb
push
inc
insb
cs
inc
add
es
dec
stos
sbb
fidivl
in
stc
scas
push
pop
pop
popa
subl
sti
fcomps
mov
loopne
leave
les
leave
in
push
fwait
popf
aam
push
sub
sahf
sti
ljmp
sbb
test
in
movsb
pop
pop
imul
mov
inc
or
sbb
lea
arpl
mov
iret
adc
mov
or
jb
sub
stos
ficomps
xchg
jbe
sti
and
mov
dec
loopne
jo
int
outsl
xchg
adcb
dec
xchg
push
rcll
jo
popf
cwtl
cmp
mov
shl
push
xor
or
daa
pop
repnz
or
cmp
mov
pop
int3
dec
jnp
sub
adc
dec
xchg
adc
mov
dec
push
int
inc
ljmp
out
sbb
test
cli
xchg
shld
mov
in
test
movsb
adc
stc
ficompl
je
ret
nop
pop
loopne
jmp
sahf
and
adc
mov
lods
mov
adc
mov
dec
add
jns
dec
int3
mulb
mov
fwait
mov
xchg
inc
inc
insl
outsb
lods
xor
cmp
lahf
mov
insl
loopne
xor
scas
iret
fdivrl
jae
jo
and
jmp
or
and
mov
mov
xor
lahf
mov
xlat
ds
lcall
cld
xchg
or
sarb
shll
aas
addr16
jo
lds
paddd
xlat
inc
lds
aaa
pop
aas
imul
adc
add
mov
test
xchg
and
movl
mov
stos
fstpt
mov
clc
dec
insb
sbb
into
outsb
inc
adc
pop
test
ret
add
pop
xchg
jge
fs
rclb
inc
rcrb
pop
dec
jne
fidivrs
and
enter
adc
mov
xchg
mov
jno
push
jl
loopne
leave
cmp
aam
inc
jae
in
aad
pop
in
xchg
ss
out
stc
rcrl
lret
xchg
test
and
dec
jp
inc
ljmp
mov
loope
jecxz
iret
sbb
movsb
mov
cltd
add
sahf
or
jo
je
and
xlat
cmc
mov
cwtl
fisubs
lods
xchg
lcall
jne
xchg
fwait
imul
dec
jbe
lret
inc
add
mov
dec
dec
sbbl
int
lcall
cmpb
pop
cltd
dec
mov
pop
or
mov
mov
adc
xorb
insb
ret
dec
push
insl
adc
cmp
xchg
mov
adc
jae
mov
mov
inc
dec
inc
push
push
ficoms
js
stos
push
daa
movsb
sbb
stos
xchg
sbb
xchg
jmp
mov
xor
xchg
cmpl
pop
test
xchg
or
xchg
lret
scas
pushf
jae
jge
outsb
lcall
rcll
push
or
adc
les
add
or
idiv
mov
out
pusha
xchg
test
rcl
int3
inc
push
mov
add
dec
xchg
outsb
aam
lds
daa
lahf
ret
fxch
mov
out
jg
pop
test
pop
xor
mov
mov
stos
cmp
popf
jae
rolb
ror
jmp
out
jbe
dec
xor
cwtl
add
pusha
ret
cmp
gs
or
vpsllw
cmp
in
vmovaps
fidivrl
xchg
pop
icebp
xor
xchg
mov
mov
mov
ret
cmp
mov
jg
push
pop
leave
xchg
xor
jg
cli
arpl
pop
pop
adc
xchg
push
cmc
mov
test
sub
ss
popa
outsl
mov
std
adc
inc
hlt
imul
xorb
jmp
sub
popa
pop
xchg
mov
adc
fadds
jnp
jno
test
mov
xor
and
inc
shl
inc
inc
inc
and
mov
push
add
test
add
hlt
jmp
xor
and
fildl
cmp
fidivrs
inc
jl
repz
lea
aas
jl
mov
xchg
imul
jno
lds
adc
test
add
out
add
pop
push
dec
bound
or
je
sbb
or
in
movsl
cwtl
insb
sbb
push
rolb
jbe
mulb
mov
mov
cmpsl
mov
jge
fistl
jb
push
loopne
nop
jmp
mov
dec
add
lahf
sub
imul
add
cld
mov
imul
jge
sbb
pop
std
lock
cmpsb
jecxz
in
lock
je
ret
cmp
jb
push
sbb
dec
shrl
jnp
sub
sub
fisttps
fildl
xchg
mov
mov
adc
das
push
pop
adc
lods
fucomp
jmp
add
movsl
and
jge
xlat
call
imul
dec
mov
arpl
dec
jl
repz
sti
xchg
pop
movsb
xchg
sbb
or
mov
movsb
jo
jb
lds
cld
jg
jo
push
jo
test
lret
mov
iret
stc
cmc
imulb
jl
lea
sbb
pop
jge
inc
les
xchg
das
aas
mov
xchg
mov
xchg
dec
movsb
jp
imul
or
sub
mov
cmpsl
and
cltd
nop
cmc
fisubl
in
mov
add
enter
arpl
push
sub
inc
adc
adc
fsubs
adc
inc
rclb
enter
jmp
or
rcrb
push
andb
xchg
xchg
gs
mov
test
stos
mov
jns
aad
outsb
cli
sbb
sub
xor
push
add
mov
jbe
add
test
xor
jnp
sarb
or
add
imul
int
mov
adc
mov
ljmp
stc
dec
xchg
cmpsb
pop
sub
push
inc
adc
test
ret
xchg
xchg
cmp
pop
or
adcl
dec
mov
mov
sub
ja
ror
in
in
mov
mov
in
jl
push
mov
or
fs
int3
mov
daa
or
mov
sub
inc
inc
mov
outsb
fistpll
push
inc
and
cmp
dec
aaa
xchg
insb
mov
cmp
pop
cltd
int
push
arpl
sub
or
leave
out
sbb
pop
xchg
mov
out
das
out
aad
jns
inc
stos
dec
and
jbe
pop
sub
or
shr
inc
call
mov
jmp
cmp
add
shrl
adc
sub
or
call
and
lcall
sti
outsl
pusha
fdivp
mov
mov
in
ds
jae
rcl
cld
pop
lea
clc
orb
and
sbb
push
inc
scas
call
shrb
aaa
lods
cmpsl
add
jl
xchg
addb
pop
fcomps
popf
std
repz
pop
scas
lahf
or
iret
out
pop
dec
xchg
dec
adc
inc
and
adcb
into
test
rol
inc
ljmp
push
lock
adc
and
rclb
adc
cmp
jne
lcall
jne
jmp
ja
lcall
aas
test
iret
loopne
inc
je
iret
dec
xor
mov
mov
sub
test
mov
cltd
cmc
cli
jecxz
sub
sbb
pop
dec
mov
sub
xchg
cmp
sbbb
out
pop
fcmovu
dec
pop
std
or
in
out
stos
and
ja
or
push
jl
pop
nop
pushl
jne
les
int3
pop
inc
sbb
pop
scas
or
inc
fstp
add
jecxz
out
xor
sbb
sbb
mov
pop
sbb
jno
jmp
lods
ffreep
push
jns
out
js
add
pop
test
xchg
imul
mov
mov
stos
jecxz
push
mov
sbb
out
pop
mov
xchg
ret
std
xor
loop
add
fistpl
xchg
je
jecxz
fldenv
pop
in
dec
mov
ret
adc
and
pop
push
arpl
jl
loopne
loop
dec
addb
je
lret
bound
shlb
nop
mov
dec
jo
loope
jae
pop
int
mov
cs
push
shr
cltd
cmp
add
and
or
pushf
lock
push
ljmp
cmp
mov
aaa
clc
adc
ficoml
cmp
lret
and
jo
iret
and
clc
jo
mov
mov
test
movsb
andb
inc
ds
and
outsl
jg
cmp
jno
pop
sbb
dec
dec
mov
and
fiaddl
dec
in
add
test
int3
inc
into
cmp
xor
jle
mov
jmp
xchg
push
adc
pusha
pop
popf
xchg
inc
xchg
mov
and
inc
lret
ficoml
pop
sti
push
repnz
add
xchg
xor
ljmp
ljmp
dec
shrb
mov
mov
push
and
rcl
out
mov
sahf
enter
jbe
cli
mov
push
ss
iret
fmul
inc
jnp,pt
sbb
idiv
or
dec
dec
mov
pop
fsubrp
push
fs
lds
in
jo
xorb
push
inc
cmp
rcl
daa
in
popf
adc
out
inc
das
out
test
test
xor
ret
push
pop
movsb
and
mov
ret
popf
je
sub
push
xchg
ret
jg
arpl
lret
mov
sahf
fdivrs
pop
enter
push
movsb
mov
pop
xor
loopne
jae
xchg
imul
xor
mov
jbe
xor
jae
pop
lods
ret
in
or
mov
fildll
in
sbb
pop
xor
xchg
sub
std
shl
pop
stc
into
fstpt
inc
fwait
xchg
cmp
adc
inc
push
mov
cmpl
out
arpl
js
cmp
inc
ja
and
ret
dec
sub
xor
lock
push
xchg
test
pop
sbb
aas
pop
inc
jp
divb
inc
test
xchg
sub
mov
popa
jle
and
inc
mov
cmp
sar
cmp
lds
xchg
mov
sbb
mov
out
repz
cli
popa
adc
push
sar
push
popa
or
mov
mov
push
pop
loope
data16
lock
lret
pop
dec
lahf
pop
add
sub
std
iret
jo
fldt
lahf
loopne
pusha
out
inc
adc
sbb
sti
fs
sarb
test
test
jl
imul
jb
xchg
ret
lcall
cmp
add
stos
pop
scas
testb
jb
in
push
jmp
ds
fmuls
dec
shl
enter
mov
xchg
out
daa
jo
es
out
hlt
nop
dec
sahf
lock
push
jmp
rolb
test
cmpsl
cmp
or
cld
dec
cli
out
fst
mov
lahf
ds
fdivrl
adc
shll
das
test
mov
mull
jnp
adc
mov
adc
mov
push
dec
into
cmp
sahf
add
pusha
mov
xchg
xchg
inc
mov
shll
imul
mov
or
lcall
pop
arpl
test
or
pop
fsts
int
arpl
dec
ja
mov
mov
mov
movsl
lods
pop
mov
mov
in
incb
into
loopne
mov
mov
sbb
xor
repz
cltd
xchg
das
push
xor
jg
popf
dec
adc
or
lcall
xor
push
or
or
xchg
mov
sub
in
lret
mov
into
dec
mov
mov
fs
rorb
mov
jecxz
xor
and
notb
negl
xchg
call
test
outsl
icebp
test
repz
jle
jo
outsl
xor
push
pop
test
push
fldl
pop
lahf
jecxz
ds
and
sub
push
out
repz
cs
mov
fdivrs
add
jmp
ret
sbb
push
gs
hlt
lcall
cwtl
mov
xchg
xchg
xchg
inc
lods
fistpll
mov
jnp
mov
out
ret
test
clc
iretw
outsl
xor
mov
enter
jb
sub
jbe
push
xchg
jecxz
clc
decl
add
dec
mov
xchg
adc
mov
out
pop
outsb
and
jecxz
dec
inc
push
pop
mov
sub
sbb
lret
lods
sti
sahf
test
repnz
lcall
jg
push
insb
push
ljmp
faddl
mov
pop
imulb
push
fsub
fmuls
popa
imull
xlat
js
lcall
test
mov
sub
inc
int3
and
push
mov
xchg
mov
pop
sub
pop
ds
sbb
adc
jmp
mov
sbbb
sub
std
fisttpl
das
xchg
shrl
outsb
cmp
in
dec
aas
lock
dec
jae
mov
aaa
js
cli
in
jnp
mov
int3
dec
scas
sti
jecxz
sbb
push
xchg
sti
rcrb
outsl
sbb
inc
jl
jg
xlat
leave
jge
mov
xor
jnp
add
scas
pop
pop
rcll
mov
pop
pop
add
lods
out
testb
adc
or
xor
push
push
and
out
xor
mov
push
jp
lds
sbb
and
out
nop
xor
cmc
pop
ds
pop
sub
fwait
int3
pusha
andb
cmp
pop
repnz
sub
adc
testl
push
xor
cmp
jmp
dec
xchg
fisubrl
dec
ss
das
xchg
adc
repnz
cmp
xor
imul
mov
pop
mov
scas
cli
inc
loopne
xor
repz
mov
sbb
and
arpl
push
repnz
nop
fnstenv
adc
addr16
in
and
stc
ja
and
fimull
sbb
ljmp
dec
lock
in
mov
cmp
and
imul
jle
or
cmova
fisttpl
popf
cmp
int
lret
xor
push
in
sbb
test
mov
stc
out
or
inc
push
fcomps
inc
push
dec
ret
in
lea
imul
fistps
insb
dec
push
in
cwtl
jle
push
pop
add
rorl
dec
jmp
sub
cmp
dec
mov
aas
mov
shr
jmp
jmp
adc
sahf
pop
cmp
or
mov
fisubl
dec
pusha
xchg
insb
push
dec
out
jmp
cltd
jge
pop
jne
sbb
les
out
sub
push
sub
out
pusha
pop
push
cmp
sbb
and
sbb
lret
jl
hlt
pop
adc
int
cmpsl
sbb
in
fs
xchg
shll
sbb
xor
pop
subb
aam
pop
xlat
sbb
adcl
jmp
adc
xlat
adc
int
xor
mov
jnp
sbb
call
cmp
sbb
mov
adc
xor
popf
xchg
xlat
mov
lods
cmp
push
insb
scas
imul
mov
inc
fdivrl
dec
push
push
mov
cmpsl
pop
rclb
loopne
sbb
lcall
or
add
cmp
inc
imul
les
sbb
lods
cmp
mov
mov
test
sbb
popa
imull
js
mov
lret
leave
xor
mov
sti
sbb
les
out
in
lods
dec
pop
pop
jo
add
or
rorb
add
mov
rol
mov
lahf
add
out
jns
aad
inc
popf
rcrb
rorb
repz
sahf
xchg
cmp
jl
lea
push
lds
in
inc
add
cmpb
loopne
jl
cmc
push
sub
enter
addr16
ja
dec
push
or
pop
dec
pop
out
xchg
pop
mov
and
lret
xor
nop
into
int
aaa
cmc
jg
sub
in
lea
jge
xchg
adc
int3
lods
adc
jb
repz
cld
push
push
push
or
dec
lahf
dec
mov
sub
std
leave
shll
jbe
pop
sahf
test
push
mov
mov
dec
adc
mov
pop
cmp
mov
aas
fdivrs
out
out
xchg
mov
lcall
inc
sarb
sbb
inc
mov
mov
sub
mov
les
in
loopne
adc
xlat
inc
xor
cmp
gs
xorb
jl
jb
inc
aam
shll
shr
stos
jb
push
push
nop
jb
iret
sbb
pop
mov
sahf
cmpsl
mov
dec
add
jae
test
push
push
loop
nop
cmpsl
ljmp
push
or
insb
mov
mov
jge
int3
fdivrl
scas
cmpsb
cwtl
xor
popa
mov
ljmp
xchg
cmp
mov
jmp
mov
inc
rorb
jb
jge
mov
stos
jg
xchg
mov
jl
sub
scas
xor
add
inc
loop
xor
push
mov
mov
imul
fwait
jl
and
jno
jbe
add
xor
or
bound
fsincos
enter
arpl
push
je
mov
and
mov
repz
mov
pop
popa
jg
je
sub
sbb
dec
imul
js
sbb
xor
popf
and
js
adc
lods
or
push
push
cmp
sub
xchg
cli
pop
iret
jmp
adcb
mov
and
push
rcl
dec
pop
mov
sti
mov
mov
sbb
push
ficompl
mov
sub
fidivrs
pop
xor
sbb
jecxz
push
sbb
or
mov
outsl
call
adc
pop
dec
xchg
mov
jnp
fisubl
xchg
clc
jecxz
cmp
aaa
les
push
lea
adc
adc
add
mov
xchg
movsl
inc
pushf
aas
test
sbb
lahf
pop
cltd
and
fisubl
gs
mov
and
cmp
cmp
cmp
fwait
jo
pop
repz
inc
fildll
mov
cmp
pop
rorl
push
dec
or
addr16
in
xor
loope
aam
push
xchg
je
pop
outsl
push
mov
dec
js
jmp
imul
sub
loope
mov
mov
add
dec
popf
adc
fbld
daa
aaa
sub
pop
pushf
nop
sub
add
jecxz
push
leave
mov
mov
movsl
orb
push
mov
clc
jl
mov
lahf
fucomip
mov
xor
jle
imul
pop
pushl
aaa
push
pop
and
ja
mov
jo
pop
fucomp
test
test
push
divl
insb
mov
add
loopne
push
pusha
pop
repnz
subb
lods
xor
push
push
bnd
pop
fcompl
loope
and
push
cmp
fstps
and
mov
dec
hlt
es
adc
jmp
dec
out
sub
lret
dec
repnz
test
lret
cmp
jp
shlb
cmp
in
jp
and
in
jb
and
push
xchg
mov
test
fsubrl
jl
das
negl
and
sub
daa
test
inc
mov
sbb
push
jmp
mov
mov
sbb
pop
fisttpll
sahf
dec
xchg
scas
ds
movsl
int3
mov
cltd
dec
arpl
je
aam
add
daa
outsb
xor
mov
mov
idiv
sbb
aaa
xor
popa
out
ret
rcrl
or
outsl
out
ret
out
jmp
enter
sub
add
push
sbb
inc
mov
cmp
arpl
ret
incl
pop
stos
in
pop
push
hlt
mov
repz
inc
cmpsb
mov
pop
xchg
je
jno
cmpsb
pop
jbe
jbe
mov
adc
idivb
int3
lods
sbb
adc
xor
shlb
pusha
pop
mov
mov
ljmp
fldt
aas
loope
lret
loope
pushf
addr16
push
es
stc
scas
xchg
jno
test
mov
jmp
cmc
nop
imul
pusha
ret
mov
dec
scas
xlat
cmp
jg
fsts
stos
iret
test
sub
sbb
rcrl
jno
sbb
loope
sbb
or
xchg
xchg
ret
imul
ss
imul
test
mov
subl
push
add
mov
pop
jns
in
enter
dec
imul
push
sti
inc
adc
pushf
sub
xchg
mov
das
jno
cs
adc
jmp
add
stos
fstps
std
cmp
jge
loop
mov
call
mov
mov
das
out
jp
mov
pop
xor
xor
adc
mov
lock
mov
add
and
add
ret
jmp
test
mov
pop
insl
adc
sahf
sarl
lret
popa
loop
and
cld
jne
pop
dec
rep
ja
or
mov
jge
or
fs
push
xchg
sbb
sub
int
pop
repz
mov
mov
gs
adc
arpl
jb
out
lock
or
mov
pop
aam
xchg
add
aam
push
ret
xchg
xchg
popw
cld
outsb
cmp
dec
pop
movsl
sub
add
push
cmc
sbb
push
repnz
in
in
mov
xchg
aas
and
add
lock
inc
clc
jle
pop
cmp
movsb
aas
outsl
loope
lcall
or
rcrl
add
adc
cmp
sbb
push
and
les
test
addl
aad
and
adc
pop
lret
fisubs
pop
push
sbb
inc
xor
into
mov
jae
mov
cmp
mov
enter
orl
dec
push
out
imul
lcall
jb
sbb
leave
push
test
sbb
mov
fldenv
es
mov
insl
xor
fwait
aad
in
jne
adcl
xorb
jle
and
dec
clc
mov
cmp
gs
add
push
sbb
movq
sahf
ret
out
and
call
or
pop
jns
dec
sub
and
sub
pop
insb
dec
rcrb
sub
dec
xchg
sub
cli
mov
jno
dec
das
decl
sbb
frstpm(287
sub
or
pushw
dec
or
xchg
popa
icebp
mov
sbb
cmp
sbb
fcmovnb
cmc
aas
sub
sbb
or
bound
xor
outsl
test
sahf
lret
jmp
inc
lcall
fwait
outsl
repnz
sbb
lcall
int
popf
cmpsb
aas
sub
pop
dec
xchg
jecxz
adc
int
movsb
in
sbb
push
loopne
mov
imul
sti
adc
daa
sub
sti
and
call
adc
call
jnp
dec
ficoms
imul
mov
mov
test
fwait
inc
mov
xchg
cmp
sbb
mov
in
imul
loopne
pop
std
mov
sbb
je
push
pop
xor
and
dec
xor
lock
cmp
ljmp
pop
movaps
pop
aas
or
mov
aaa
lods
mov
shll
outsb
ret
dec
pushf
dec
insl
and
mov
ss
stos
movb
pop
iret
push
mov
sub
cmp
roll
rol
sub
jmp
inc
inc
pop
jg
imul
mov
je
sbb
mov
mov
jle
out
into
sbbb
fwait
inc
ds
loopne
jg
enter
jb
dec
mov
fildll
lods
inc
or
add
dec
mov
sbb
nop
cmc
in
cmp
jae
sbb
cmp
mov
neg
mov
mov
sub
jmp
sbb
and
sub
jnp
std
xor
out
push
lret
xchg
xchg
lods
ret
fmuls
dec
hlt
imul
pop
inc
sbb
pop
jo
sub
mov
fdivrs
fwait
inc
inc
stos
add
cmp
and
repz
out
aad
dec
sarb
insb
loop
cmpb
pop
jg
sbbb
push
sub
xchg
pop
dec
mul
adc
pop
fdecstp
das
cli
inc
std
xor
jmp
cli
jbe
xor
fimull
mov
aad
rcrb
inc
test
int3
repnz
nop
js
pop
push
jbe
push
push
mov
dec
shll
cli
or
into
push
dec
xchg
jp
mov
jne
xlat
in
push
push
inc
enter
pop
xchg
shrl
sahf
pop
and
cmc
push
dec
mov
lret
cmpsl
cmp
dec
lahf
inc
inc
repz
in
xchg
push
and
pop
cwtl
hlt
pusha
cwtl
sub
repnz
mov
movl
push
imulb
inc
or
adcb
jp
sub
jae
pop
in
std
pop
leave
pop
dec
orl
arpl
repnz
inc
rclb
adc
rcll
lock
push
or
test
adc
mov
daa
sti
and
xlat
lods
sbb
testb
cltd
bound
aad
je
fwait
pop
mov
je
mov
sti
and
mov
or
inc
and
pop
hlt
jns
daa
int
add
pop
shlb
adc
adc
sub
sub
and
push
popf
push
jne
ja
dec
jae
sub
dec
mov
pushf
and
mov
pop
mov
sarl
or
orl
add
dec
daa
add
scas
sbb
jbe
pop
loop
daa
pop
mov
fs
add
les
loop
add
sbb
xchg
fadd
imul
mov
cmc
sub
add
lcall
fsubl
or
add
mov
lods
aas
test
and
leave
cld
pushw
add
fisttpll
aad
iret
into
cli
push
pop
mulb
sub
repz
movsb
mov
in
movsl
cmc
sub
negl
rclb
jne
scas
or
pop
add
and
out
xlat
addl
movsl
dec
fildll
lret
and
cwtl
pop
jp
inc
xlat
pop
jmp
xchg
push
incb
mov
cwtl
push
push
mov
pop
xor
mov
mov
movsl
jp
scas
cltd
bound
insl
insb
mov
cmpl
and
fucom
sub
cmp
outsl
adc
jns
into
ds
in
pop
or
daa
fisubs
outsb
ja
sbb
pop
imul
scas
cmp
mov
jmp
push
jge
cmp
ljmp
sti
test
aas
sub
add
dec
or
ret
insb
test
push
mov
call
mov
jnp
sub
pop
xlat
iret
xor
nop
push
mov
inc
aam
cld
loopne
stos
leave
scas
inc
jge
cmpsl
pop
jb
outsl
jnp
jae
inc
fistl
call
xchg
mov
mov
aas
rorl
push
ds
ds
xchg
dec
mov
pop
push
mov
dec
sbb
aaa
mov
dec
ret
mov
sbb
pop
push
jbe
mov
xchg
cs
dec
and
pop
xabort
mov
movsb
xor
fiadds
mov
insl
out
popa
jl
cmp
pinsrw
dec
push
sub
mov
iret
in
fdivl
cmpsl
std
jle
jno
sahf
inc
dec
scas
dec
or
les
jnp
aas
jb
cmp
iret
out
dec
outsb
mov
push
lret
inc
pop
call
loop
jl
ljmp
test
icebp
jns
sub
aas
shrb
shll
mov
lods
data16
or
jae
rcrb
xchg
cmp
push
xchg
call
inc
fists
push
scas
jo
and
enter
mov
mov
mov
hlt
mov
jecxz
cmp
adc
push
mov
jge
mov
scas
ret
icebp
pop
inc
push
lahf
and
cmp
push
aas
add
lods
mov
jge
mov
fildll
jbe
sub
xor
jmp
mov
push
inc
mov
jbe
dec
in
cmp
shlb
cmp
shl
cmp
mov
dec
mov
add
cmpsl
xchg
push
test
incl
stc
fistl
and
xchg
mov
push
hlt
sub
ja
and
insl
bound
into
adc
dec
push
pop
push
fs
lcall
cmp
cmp
push
fstp
xchg
sti
xor
fs
push
fnsave
jl
int3
dec
add
mov
push
out
dec
fsubl
mov
adc
dec
mov
add
pushf
xchg
sub
push
js
popf
jp
shr
insb
pop
jecxz
add
cmp
lea
dec
mov
ljmp
lock
xor
loope
es
scas
out
sub
jne
out
sbb
out
out
push
and
decl
xchg
and
fildll
scas
and
dec
stc
hlt
pusha
call
jne
push
jno
mov
lds
adc
adc
iret
add
ljmp
or
ror
add
lea
pop
mov
stc
push
addr16
aas
shl
xor
adc
add
jmp
jl
mov
or
fisubrl
insb
jo
jo
cltd
cmpsl
loop
lods
adc
jmp
mov
dec
push
cmpb
jns
inc
push
sbb
and
int3
adc
push
and
sbb
outsb
sub
inc
push
bound
call
lea
mov
sub
cmc
iret
sub
aas
mov
jl
dec
std
dec
mov
sub
or
push
pushf
sub
movsl
shll
xchg
cli
dec
addr16
test
push
lods
lock
clc
pop
gs
test
lods
cmp
call
and
out
leave
out
push
pop
fldt
jns
jns
sub
sbbl
xchg
scas
cmp
jnp
mov
sahf
xor
les
xor
xchg
xchg
inc
insl
ja
sti
test
xchg
pop
out
xlat
pop
shl
insl
inc
in
das
lea
dec
or
stos
flds
stos
ljmp
mov
push
jg
xchg
sbb
sub
testb
and
sub
push
cmp
adc
push
pop
push
sub
or
or
rcrb
inc
aaa
mov
pop
aas
mov
inc
out
mov
mov
sbb
dec
dec
popa
movl
insb
push
mull
sar
push
add
fwait
or
dec
test
jle
or
in
orl
push
xchg
lock
aas
sbb
gs
arpl
inc
pop
data16
cmp
xchg
inc
jo
sti
insb
mov
cmp
jno
insl
lock
cli
xchg
aaa
enter
push
sbb
pop
in
call
rorb
test
movsl
add
jle
mov
sahf
mov
dec
loop
and
push
paddw
daa
mov
cmp
dec
add
ror
aam
outsl
arpl
and
out
pop
mov
std
je
stos
mov
test
out
enter
in
mov
sub
inc
xchg
ljmp
push
push
insl
cmpsb
fcoml
in
jmp
dec
data16
mov
je
sub
and
imul
adc
cmc
mov
xor
dec
shll
icebp
sub
es
or
jecxz
xor
push
cmpsb
cwtl
out
mov
push
mov
loop
inc
pop
lods
mov
xchg
aaa
pop
xor
shll
movsb
popf
mov
dec
arpl
mov
jns
adc
jo
push
popa
nop
sub
xor
lds
daa
addr16
in
iret
push
in
icebp
gs
push
aaa
flds
into
arpl
cmpb
mov
xor
movsb
leave
in
loope
jmp
pushf
into
or
repz
pop
test
sub
subb
movsb
jmp
adc
mov
sti
mov
and
and
xor
fbstp
imul
js
int
and
out
ja
and
imul
inc
out
mov
repz
inc
mov
lds
notb
push
or
out
push
cltd
xor
mov
adc
test
xchg
jg
movsl
lods
xchg
shrb
sbb
test
or
sub
jno
bound
mov
and
cmp
inc
popf
dec
in
hlt
out
xorb
xor
and
inc
shrb
jnp
data16
int
mov
rclb
or
mov
daa
in
push
daa
mov
cmp
es
repnz
lock
xchg
scas
push
mov
and
push
shrb
enter
xchg
xor
adc
adc
inc
test
dec
ja
sub
inc
add
adc
icebp
xchg
inc
js
aam
inc
mov
icebp
add
sub
mov
push
cld
test
loop
jae
jae
xchg
dec
jb
sub
and
ja
negl
jo
inc
les
push
adc
loope
test
cmp
inc
lods
cmpsl
sub
imul
pop
xor
in
fnstsw
aaa
pop
fsubrs
xchg
pop
push
mov
sbb
loop
jl
mov
jo
pop
insb
xor
push
jb
push
mov
cmc
mov
aaa
mov
cmp
sub
lock
sub
xchg
icebp
neg
sti
cmc
cmp
xor
mov
mov
sbb
nop
xor
mov
mov
movsb
out
mov
push
push
push
lods
add
mov
mov
ret
jl
or
jl
xor
leave
inc
lret
xor
ljmp
out
mov
mov
pop
lcall
jge
test
loope
sub
call
ja
leave
daa
jg
sub
sub
or
inc
push
mov
pop
push
out
mov
mov
sbb
jg
jo
cmpsl
mov
test
pop
xchg
push
xchg
loopne
je
in
cltd
scas
jbe
test
jge
aas
outsb
outsb
jnp
mov
xchg
dec
sti
lret
dec
xlat
jmp
fistpll
js
in
xchg
push
xor
mov
xchg
adc
iret
or
inc
xor
in
mov
bound
xchg
popa
idivl
or
cmc
lret
je
push
aam
test
and
ljmp
sub
adc
dec
or
jo
xor
fcmovb
popa
inc
imul
sub
fisubl
xchg
fsubrl
les
shrl
mov
adc
add
es
aaa
mov
dec
dec
cld
mov
ret
andb
dec
mov
jbe
jbe
push
iret
push
push
mov
mov
mov
mov
jb
cmp
in
cld
mov
jg
xchg
jno
jo
inc
mov
xor
xchg
fmull
sub
xchg
pop
icebp
adc
mov
jge
and
lods
imul
cmpsb
pop
cmp
xchg
ror
or
mov
xorl
sbb
nop
outsl
int3
inc
adc
call
or
jp
addr16
cmpsb
add
jmp
ds
fldt
sub
mov
lcall
mov
xchg
push
jbe
push
rcrl
das
sub
repnz
adc
pop
mov
out
out
push
add
lock
pusha
jne
iret
sub
fistpl
movsl
cmp
mov
fstps
jno
mov
xchg
mov
out
or
jg
les
movsl
repz
mov
pop
dec
scas
stos
adc
push
sbb
inc
lock
adc
stc
out
aad
mov
cmp
insl
jp
mov
inc
dec
cmp
cld
pusha
xor
sbb
les
jbe
mov
fcmovb
xchg
lods
xor
push
cmpsb
pop
shlb
insl
jp
aad
cld
sub
push
ss
jo
sbb
sub
repz
repz
mov
or
ror
sub
or
xlat
rorb
loopne
sub
test
push
adc
insl
adc
mov
bound
lock
xlat
mov
sbb
push
lea
xor
aaa
inc
add
mov
sbb
fdiv
jecxz
jno
fstpl
stc
mov
ljmp
dec
movsl
in
mov
rol
daa
jbe
pushf
imul
mov
xchg
mov
fstps
sub
aam
stos
jmp
push
adc
subl
dec
icebp
push
in
ss
cltd
push
pop
test
lea
out
sbb
lcall
mov
mov
popf
mov
sub
sub
dec
mov
test
in
mov
push
push
fs
cli
xchg
cmp
xchg
inc
jae
jmp
out
mov
or
push
stos
xchg
movd
popa
test
int
out
lock
in
rcrl
nop
adcb
sub
adc
jae
sbb
rcr
push
iret
pusha
movsl
ljmp
mov
in
cmpsb
or
inc
fldt
scas
stos
or
loopne
push
push
loope
insb
mov
jb
push
bound
jo
xchg
sub
cwtl
sbb
popf
mov
adc
in
cltd
arpl
lods
jb
stc
mov
lds
xchg
sbb
xor
movsb
bnd
and
movsb
adc
pop
jl
cs
shll
addr16
cmp
mov
cwtl
pop
jb
push
scas
fwait
cmp
pusha
jo
shlb
addr16
movsb
call
rorl
push
adc
push
loop
mov
xchg
shlb
sub
push
fsts
ja
jo
pushf
adc
movsl
mov
sbb
ds
out
cmpsl
dec
imul
stc
lds
out
outsl
ds
jne
nop
xchg
lods
testl
push
xchg
je
test
push
cmp
clc
dec
adc
and
int
rorl
mov
and
adc
or
ljmp
sub
idivb
xor
popa
mov
lea
aam
sbb
inc
mov
arpl
sti
xor
imul
mov
pop
pop
aaa
push
fisubs
dec
adc
adc
movsl
push
jp
add
fstl
cmp
push
mov
test
mov
idivb
out
mov
mov
test
arpl
push
pop
mov
jns
loop
and
ret
push
imul
and
mov
scas
jle
push
push
xchg
mov
rcll
std
sbb
out
in
pop
loope
jle
ret
add
sbb
icebp
ljmp
xlat
mov
cmp
les
test
rorl
lahf
pusha
in
push
push
add
push
mov
add
push
push
mov
mov
add
pop
ss
shll
incb
mov
xorl
or
mov
mov
mov
pop
aas
aad
push
cmpl
pop
je
fisttpll
jecxz
jno
pop
push
aas
fcompl
into
lret
or
stos
dec
mov
push
adc
mov
inc
popf
jne
lock
outsb
xchg
adc
arpl
xor
mov
adc
xor
and
dec
push
mull
mov
mov
adc
pmaddwd
xchg
pop
pushf
clc
jmp
cmp
pop
cmpl
cs
sar
dec
jmp
cmp
mov
jg
lret
jnp
push
ds
or
fsts
inc
insl
jecxz
inc
add
leave
add
shlb
movsl
xchg
cmpsb
add
mov
mov
lcall
test
add
push
cld
xchg
imul
js
leave
leave
jno
dec
std
out
dec
push
push
addl
mov
out
xchg
clc
movsl
mov
mov
mov
mov
push
xchg
jb
dec
rclb
jb
lods
fistps
arpl
xor
push
xchg
enter
addl
ret
mov
jnp
pop
cmc
mov
xchg
push
lcall
cmp
sbb
fiadds
inc
aas
push
nop
insl
push
test
mov
ret
push
cmpb
xor
jno
sbb
mov
pop
rorw
xchg
enter
dec
jno
cld
cmpb
add
xor
inc
cmc
push
aaa
loopne
pop
les
jmp
insb
jo
int3
inc
scas
xchg
jb
inc
shll
notb
and
jns
fisubrl
or
jl
cmp
dec
jmp
imul
xchg
dec
push
mov
adc
hlt
lcall
arpl
mov
mov
cwtl
inc
xchg
pop
gs
or
mov
mov
stos
ds
loop
ffree
pop
push
mov
arpl
fcompl
xchg
pop
mov
arpl
out
lea
cli
mov
aad
clc
mov
xchg
imul
jnp
popf
push
jle
cmc
mov
sub
xor
mov
add
sarl
shr
inc
sub
stos
or
pop
xor
das
xor
loopne
cmpsl
cs
pop
out
adc
in
mov
pop
testl
adc
mov
ss
add
shlb
adc
lock
je
or
addb
adc
das
push
adc
jae
sbb
pop
fwait
imulb
sub
pop
pop
out
xor
jp
push
add
arpl
or
jne
push
ljmp
xor
in
dec
and
call
mov
aad
outsl
cmpsb
aaa
sub
push
jnp
cld
sarl
pop
mov
mov
sahf
add
sub
mov
std
insl
jmp
addr16
xor
add
mov
push
jb
out
push
aas
insb
mov
notl
xchg
aaa
out
xchg
jnp
call
loope
stc
jb
or
lods
and
jo
cmpsl
push
insl
or
inc
sbb
ja
outsl
into
aas
push
push
in
fwait
sub
fsubrs
mov
lock
and
fdivs
push
clc
pop
notl
enter
xor
mov
mov
cmp
sbb
lods
inc
gs
cmp
mov
adc
lock
inc
dec
add
lret
lods
xchg
dec
mov
dec
jmp
sahf
push
mov
ficoms
cltd
repz
mov
fcmovbe
mov
dec
mov
and
rcl
iret
mov
mov
pop
imul
int
std
fsubrl
sub
dec
shlb
sbb
jecxz
cli
je
inc
lcall
push
xor
test
pop
dec
out
sbb
outsb
loopne
inc
xchg
push
into
pop
adc
mov
unpckhps
outsl
and
hlt
xchg
mov
imul
pop
rcrl
aas
sbb
shlb
inc
adc
sbb
in
xor
cwtl
lea
and
std
in
xchg
call
pop
div
in
mov
cmp
mov
sbb
sub
out
push
mov
jecxz
in
add
das
js
mov
outsl
movsb
mov
scas
mov
inc
lods
mov
fwait
test
sub
mov
in
out
inc
fistpl
mov
sbb
cmp
xor
sub
jg
fimuls
push
adc
sbb
cld
pusha
xchg
imul
inc
enter
sub
sbb
lret
dec
js
lret
add
jmp
mov
mov
mov
xchg
cmp
xor
loopne
mov
repnz
lret
sbb
sarb
or
xor
fsubl
push
enter
inc
jbe
mov
add
dec
sub
ss
mov
fnsave
dec
mov
mov
inc
lret
jno
iret
pop
sbb
push
push
sarb
ja
jno
mov
sbb
mov
xor
inc
xchg
sub
rcl
ja
mov
mov
ret
push
mov
sub
pusha
fiaddl
mov
out
fwait
shlb
test
inc
xor
xchg
maxps
aam
stos
fistps
pop
cmc
xor
adc
pop
jne
mov
dec
xor
push
pusha
dec
scas
pop
cld
push
int
add
inc
outsl
daa
clc
pop
fnstsw
and
ss
movsl
divb
outsb
and
xchg
mov
jbe
pop
rcl
leave
imul
js
jg
pop
cs
mov
add
fbstp
shlb
xchg
sarb
xchg
pop
mov
sahf
cmp
rcrl
xchg
out
add
fstps
pop
xlat
ret
addr16
adc
jbe
sbb
mov
decb
or
and
repnz
mov
push
push
lcall
mov
or
push
xchg
xor
sbb
imul
xchg
xchg
jmp
mov
jns
pusha
ret
inc
xchg
iret
or
mov
aad
cld
push
or
mov
adc
into
daa
adc
mov
pop
out
out
int
out
push
loopne
scas
shlb
loop
xor
xchg
sub
mov
add
push
sub
jnp
je
testb
loope
enter
push
movsb
loopne
xchg
push
sub
cli
gs
pop
xor
ret
jne
int
movsb
lock
adc
mov
mov
fildl
adc
pop
push
xorb
outsb
xchg
sahf
and
outsb
jnp
lcall
or
pop
aam
jae
test
and
std
jmp
inc
jmp
aad
scas
xor
mov
and
cs
and
fisttpll
sahf
popf
or
pop
lahf
cs
stos
push
xorl
push
xor
sub
ds
ret
push
jno
insl
or
mov
addl
mov
das
cli
and
call
aam
xchg
out
sub
mov
pop
ljmp
nop
dec
cmp
mov
faddp
mov
scas
loopne
aaa
fsubrp
mov
aam
pop
cmpl
xchg
mov
stos
sub
cmpsb
mov
push
or
aam
push
push
push
test
neg
cmp
mov
pop
and
cmp
stos
sub
shlb
mov
mov
or
xor
inc
hlt
jnp
sub
stc
insb
mov
inc
add
cltd
imul
sti
int3
fmuls
pop
push
in
lcall
pop
test
cmpsb
cmp
test
sbb
xor
cs
or
scas
inc
sub
dec
xchg
jecxz
dec
jg
test
xchg
aad
imul
in
inc
into
lea
fdivl
cli
xchg
inc
or
orb
mov
add
lods
xchg
xchg
jmp
mov
lret
push
add
push
ret
rorl
pop
fstpl
jno
jl
mov
fs
loopne
inc
outsl
insl
push
or
mov
loope
inc
adc
fwait
pop
cmp
orl
inc
test
mov
push
jae
adc
iret
push
jl
aam
std
dec
fmull
in
pop
sahf
call
or
stos
mov
push
movsl
loope
jl
mov
rorb
cwtl
cmpb
push
mov
xchg
scas
fisubs
cmpsl
sub
adc
out
sbb
aas
cmp
out
icebp
inc
cmp
lock
and
sbb
int
repz
inc
jecxz,pn
pushf
lret
push
xchg
jecxz
pop
xchg
jns
xchg
fwait
pop
mov
and
lret
xchg
mov
pushaw
pusha
out
sub
jae
cmp
cmp
stos
lods
lods
push
inc
or
ljmp
push
aas
std
mov
je
in
cmpsl
test
fwait
rorb
add
jmp
xchg
outsb
or
aaa
cs
cmp
adc
mov
and
pop
lods
dec
lock
xor
sbb
sbb
neg
popf
aaa
test
add
shr
sub
dec
cmp
push
dec
mov
cmp
int3
fimuls
push
mov
dec
addr16
mov
sbbl
movsb
inc
insb
cwtl
add
mov
jno
dec
jl
mov
aas
inc
jbe
jge
rorl
cmp
stos
and
or
icebp
pop
inc
stos
in
mov
orb
mov
in
scas
inc
mov
hlt
repnz
mov
and
push
pop
dec
dec
adc
and
sbb
mov
rol
push
add
and
fbld
ret
push
imul
stc
mov
and
jb
sub
adc
inc
mov
and
es
rclb
fadds
pop
add
pop
inc
sbb
enter
jne
xchg
mov
rclb
adc
pop
pop
pop
inc
sbb
into
xchg
or
xchg
cs
lods
sub
lcall
mov
push
stos
subl
ds
xchg
and
bound
sahf
insl
mov
inc
test
push
mov
fidivs
cmp
aam
jo
cmp
cltd
inc
jae
fsubrp
ljmp
into
lods
rorl
xor
adc
in
pop
xor
outsl
mov
cmp
je
dec
into
jecxz
cwtl
inc
rorb
xchg
pop
jae
lahf
pop
xor
xchg
scas
adc
inc
jo
inc
decb
enter
add
aam
roll
aam
orb
sbb
dec
ljmp
push
and
fldenv
sbb
adc
movsl
mov
aaa
or
jne
je
cli
push
sti
jnp
inc
mov
fisttpll
add
jmp
pop
cmp
shl
js
repz
aas
inc
push
loopne
fwait
sub
not
stos
test
mov
adc
mov
sub
xchg
stos
push
int
cmp
dec
out
mov
rcll
xor
ja
pop
mov
cmp
data16
jg
adc
cmp
roll
pop
push
add
mov
sbb
mov
push
xlat
xlat
adc
dec
mov
inc
inc
xor
shlb
inc
jmp
imul
dec
in
jle
xchg
adc
cld
xchg
orb
pop
inc
jae
mov
push
aas
jg
cmpsl
in
jmp
test
ljmp
mov
movsb
push
sbb
pop
in
adc
sub
aaa
mov
mov
dec
fistpl
lret
sub
rcrl
add
adc
xchg
mov
mov
xorb
xorb
pop
mov
mov
orps
cld
mov
lahf
popa
fdivs
sbb
in
sub
mov
fcoml
jecxz
fbstp
popa
repnz
mov
xchg
mov
mov
lock
repnz
mov
inc
add
sbbl
nop
push
sbb
cmc
cmpsb
add
inc
sbb
ds
fstpt
adc
xchg
cltd
inc
and
cmp
pop
cmp
sbb
push
push
mov
inc
jae
mov
sbb
lahf
lock
stc
mov
es
lods
lahf
ss
fwait
dec
shlb
or
xlat
sbb
movsl
jle
mov
aaa
cld
push
xor
insb
and
fildll
repz
daa
test
mov
mov
pop
sbb
mov
aas
add
xchg
scas
and
pop
cld
add
rcl
jg
cmp
and
xchg
shrl
jecxz
repnz
cmpsb
push
pop
jmp
mov
aad
sbb
mov
xchg
imul
aaa
pop
mov
jns
mov
jl
inc
lods
out
pusha
jne
adc
mov
xchg
adc
push
repz
scas
aam
fldt
pop
pop
jecxz
jb
call
cwtl
jge
jl
leave
int
mov
insb
out
xlat
pop
ret
xor
inc
data16
inc
lock
adc
mov
cli
hlt
push
inc
or
fsts
push
dec
mov
mov
add
in
xchg
test
cmpsl
gs
mov
pop
jp
roll
fists
xor
sub
imul
jp
js
and
arpl
push
sbb
andb
test
xchg
sti
lret
xchg
xchg
insl
icebp
cli
and
gs
jns
xor
imul
and
adc
pop
sub
mov
push
aam
and
jne
sub
imul
loope
xchg
mov
stos
jne
stos
rcrl
dec
dec
jmp
pop
lcall
scas
insb
into
push
fwait
add
pop
outsl
fnstcw
pop
sbb
addr16
into
popa
add
sbb
lock
test
fdivrs
nop
add
test
mov
xacquire
adc
clc
sub
cmc
xlat
add
stos
mov
in
cmp
and
aad
mov
popf
xor
popl
js
mov
jae
mov
inc
sbb
dec
inc
iret
xchg
lret
jbe
inc
aam
aad
xchg
sahf
hlt
int
fdivs
sbb
fstl
int3
adc
cmp
cwtl
xor
test
aad
add
jb
test
jno
fimull
mov
scas
fs
in
leave
sub
lret
jnp
xchg
icebp
jae
mov
in
dec
xchg
xor
inc
aas
jno
insl
mov
sbb
je
or
jmp
jmp
xor
jl
rorb
jp
mov
sar
fwait
scas
lahf
push
mov
mov
push
push
je
ret
add
and
js
mov
mov
push
cli
mov
cmp
test
mov
dec
inc
mov
scas
mov
or
movsb
scas
mov
es
aam
stos
in
xor
cmp
mov
cmc
out
jne
movsb
dec
out
iret
pop
push
mov
movsb
std
push
shll
mov
out
cmp
shrl
bound
jo
sbb
sahf
adc
sub
push
push
repnz
aam
icebp
pop
outsb
rorl
ficoms
lret
add
jle
in
xchg
in
pushf
leave
fistpl
mov
out
add
adc
mov
add
pop
mov
jo
std
or
out
pop
out
popf
cs
std
outsl
lods
popf
psrlq
cmc
pop
adc
adc
fcomps
inc
xchg
push
std
das
test
jle
xor
mov
xchg
jne
pop
lahf
dec
imul
imul
in
fstpl
pop
cld
xlat
mov
aam
mov
pusha
sbb
fwait
scas
popa
pop
jo
jo
pop
test
or
pop
pusha
call
les
or
scas
into
inc
pop
nop
sbb
cltd
bnd
cmp
mov
or
stos
ljmp
push
shll
fwait
int
adc
stos
lods
add
ror
push
push
jg
lret
sbb
cwtl
xchg
xchg
and
inc
add
lret
in
lcall
adc
mov
out
mov
aas
lds
or
mov
movsl
test
add
or
cmc
sbb
in
inc
push
mov
mov
hlt
adc
lahf
inc
aaa
sub
sub
ljmp
jmp
push
mov
leave
cs
mov
rcrb
fistpll
pop
jnp
rclb
sub
scas
in
fcoms
xchg
sub
dec
ds
and
pop
fiaddl
or
fidivs
push
lea
mov
push
sbb
adc
inc
pop
lock
mov
test
or
insl
push
cmpsl
push
ficoml
test
add
rorb
loope
xchg
inc
inc
insl
in
loop
outsl
decl
adc
or
xchg
nop
pusha
flds
adc
xchg
cli
cmc
fildl
add
and
lahf
and
jno
adc
in
adc
mov
vshufps
ja
or
mov
cmp
sbb
bound
movsl
adc
push
cmp
fdivl
repnz
arpl
hlt
insl
push
in
xchg
stc
cltd
push
loopne
pop
loope
pop
mov
dec
lret
ljmp
mov
rolb
inc
fcomp
xchg
hlt
bound
insl
cli
fidivl
sbb
and
sti
hlt
or
out
loop
sub
movsl
push
mov
arpl
fimuls
pop
inc
in
clc
mov
or
pop
sbb
push
xchg
dec
fstps
adc
jnp
repnz
push
adc
mov
mov
jnp
push
push
stos
ja
cmpb
out
cmp
adcb
inc
mov
je
repnz
xorb
stos
sarb
cmc
mov
xchg
pop
inc
cmp
push
sub
mov
cmp
je
psubusw
out
cld
es
or
xor
stos
test
js
inc
xchg
xchg
subl
inc
or
lods
or
sti
xchg
or
sub
int3
xchg
fisubrl
xor
add
sbb
push
jbe
cmp
stc
add
push
jno
sarl
out
mulb
mov
cmp
jp
jno
fdivrs
push
push
call
lret
scas
pop
int3
push
scas
in
das
add
repz
add
push
xchg
sub
sub
fbstp
cmp
cli
sbbb
dec
pop
push
rcll
andb
fistpll
int3
gs
hlt
cmp
add
add
add
mov
cwtl
mov
sbb
add
fs
out
mov
mov
test
int
mov
pop
pop
and
out
sub
and
inc
xor
gs
mov
movb
cmpsl
ffreep
sbb
ret
or
cmp
mov
cld
xchg
cmp
mov
mov
mov
mov
mov
rcll
pop
shll
mov
es
mov
dec
imul
inc
adc
movsb
fdivp
gs
jge
stos
mov
add
mov
xchg
mov
sbb
mov
sbb
mov
cmc
arpl
pusha
dec
jne
jg
xor
inc
or
inc
push
in
jne
mov
xor
cmp
out
jg
xchg
inc
enter
add
pop
lea
push
adc
xchg
les
ljmp
mov
imulb
inc
jno
push
add
xor
mov
inc
xchg
or
testl
fcomps
adc
scas
cmp
scas
inc
mov
jge
mov
sbb
sbb
inc
sub
push
pop
jmp
mov
leave
mov
adc
loop
lods
loop
ss
jnp
sub
clc
pop
mov
xor
inc
adc
push
xchg
les
icebp
enter
rorb
fcomps
adc
inc
in
ret
lret
jb
sub
ljmp
cwtl
or
mov
mov
cmpsl
ret
xor
jns
adc
mov
xorb
dec
or
fbld
cs
add
in
push
ds
adc
or
mov
pop
inc
xor
mov
shrl
push
cwtl
testb
add
and
push
movsb
sub
shrl
call
adc
add
push
jmp
mov
xchg
stc
or
cmp
mov
lock
mov
jmp
ljmp
jnp
mov
leave
pop
mov
test
loope
xchg
jae
and
sub
lea
mov
inc
dec
iret
sub
jns
movsl
cmpsb
inc
loope
jnp
and
cmc
filds
cmp
int3
mov
test
mov
xlat
and
pop
das
mov
insl
shrl
jmp
lea
stos
inc
push
nop
lods
daa
stc
lret
mov
adc
dec
iret
notl
xchg
repz
repz
lods
nop
daa
clc
or
mov
fsts
pop
mov
mov
pop
addr16
jl
adc
loope
dec
push
pop
pop
xchg
paddd
cmc
or
cmpsb
icebp
and
jmp
test
dec
push
xchg
push
imul
and
mov
adc
cmp
mov
and
lds
ds
pop
je
cmpb
movsb
jg
aaa
loop
fs
push
dec
stos
mov
mov
sub
pushf
lret
mov
mov
cld
aaa
aam
mov
jo
jp
sbb
adc
shrl
jne
push
out
cltd
xor
inc
repz
adc
lahf
test
or
push
shll
jnp
inc
lea
fsub
dec
inc
xchg
cli
ss
stc
jbe
cli
cmp
lahf
repnz
enter
and
in
ret
mov
push
int
pop
loopne
xlat
frstor
fistl
inc
test
cmp
sub
out
jo
adc
ret
mov
loop
pusha
dec
push
or
mov
dec
lcall
lock
insl
test
lcall
repnz
push
add
sahf
add
and
cld
enter
inc
mov
pop
sbb
cmp
mov
dec
pop
mov
jp
push
mov
idivb
in
inc
stos
pushf
pop
xchg
cmp
dec
stos
popa
aam
xchg
in
mov
fisubrl
mov
mov
dec
sbb
repnz
and
mov
add
clc
lcall
adc
shrl
test
inc
ja
lods
lahf
repnz
mov
or
scas
cmp
push
mov
rorl
aam
in
pop
mov
or
or
mov
sub
sbb
fadd
push
test
add
lds
push
int
aas
sbb
xlat
mov
xchg
mov
test
and
pop
dec
lods
movsl
sub
xor
incl
fldt
jo
ret
cmpl
stos
pop
xchg
ljmp
xlat
fmulp
push
js
daa
aaa
mov
sub
fisubrs
inc
xorb
ret
popa
push
or
shrb
mov
loopne
repnz
jae
mov
pop
cmpsl
pop
rcrb
test
pop
popa
mov
xchg
or
aas
scas
push
mov
cld
das
cmpsb
xor
or
mov
out
loope
cld
xor
int3
push
xor
fcomi
shll
movlps
mov
pop
nop
pop
imul
mov
inc
xor
jp
cwtl
cmpsl
pop
mov
pushf
aas
mov
sbb
mov
in
enter
xchg
hlt
adc
std
stc
imul
inc
call
xlat
jnp
adc
push
mov
and
sub
xchg
das
xchg
es
divl
fdivl
xor
mov
outsb
pusha
dec
or
inc
dec
or
imul
ret
or
lods
sbb
insb
shlb
pop
jl
out
xor
xor
cmp
mov
fstpt
xchg
fwait
push
xchg
ret
pop
pop
scas
dec
imul
imulb
pop
mov
add
dec
adc
push
and
dec
inc
jge
mov
or
jge
mov
lods
push
lret
push
cmc
fs
inc
add
jg
icebp
addr16
xchg
lahf
fwait
dec
stc
out
mov
divb
pushf
es
mov
out
pop
jp
sbb
aas
cmpl
movsb
jl
sub
push
inc
jl
scas
lret
sbb
jp
popf
lea
enter
xor
xor
pop
mov
fistpll
jne
sub
mull
adc
test
cmp
sbb
nop
add
push
enter
xchg
leave
cld
stos
fwait
int3
pop
gs
xor
arpl
gs
sbb
cmp
jo
inc
mov
hlt
popa
push
inc
cli
jle
lock
dec
call
repz
cmp
add
test
xchg
js
cmp
jo
sub
xlat
mov
cld
push
cltd
add
pop
rorl
clc
out
scas
aad
push
cwtl
ss
ljmp
mov
cmp
adc
arpl
adc
push
stos
inc
popa
and
arpl
aas
andl
lock
sbb
mov
sbb
addr16
outsl
dec
dec
iret
mov
push
or
out
ss
cmp
push
jmp
sub
fcomps
mov
or
fstpt
std
data16
add
and
ficompl
test
es
push
es
jmp
das
inc
into
lods
adc
dec
jge
je
jns
shl
shrl
lock
push
outsl
insl
sbb
mov
sbb
les
xchg
filds
add
jge
pop
mov
lods
mov
ds
dec
dec
or
mov
add
rol
pop
cs
xchg
mov
faddp
inc
into
mov
dec
cmp
inc
add
js
icebp
bound
scas
out
mov
ss
sub
mov
insl
loopne
mov
jp
xchg
cltd
push
inc
xchg
pop
jb
xchg
adc
aaa
ja
or
popf
xchg
shll
outsb
dec
sub
inc
mov
lods
scas
sub
push
loop
pusha
iret
xchg
mov
mov
push
xchg
adc
pop
pop
movsl
iret
enter
pop
mov
jecxz
mov
repz
mov
jo
repnz
test
lods
lods
scas
int3
movl
xchg
cmp
xor
jae
ret
cli
sbb
cmp
int
daa
fiaddl
pop
push
jbe
ljmp
adc
pop
jnp
push
add
xor
inc
jno
insb
rorb
or
mov
loopne,pt
movsl
add
mov
dec
in
out
and
push
dec
aaa
sar
ret
sti
subl
dec
adc
push
iret
arpl
popf
pop
xchg
pop
xor
mov
jge,pt
xor
idivl
sbb
push
pop
or
movaps
stc
push
inc
in
int
scas
sub
xor
in
push
bnd
js
inc
jmp
mov
data16
and
lods
pop
cmp
push
addr16
sbb
int3
pop
mov
pop
jge
push
sub
or
enter
pop
inc
inc
in
jg
add
cld
rorl
scas
sbb
xchg
sbb
data16
pop
js
sbb
daa
es
dec
xor
stc
hlt
xchg
in
repz
nop
hlt
mov
in
adc
lret
sbb
ljmp
mov
stc
lock
pushf
mov
call
scas
lock
adc
inc
in
mov
ret
aam
call
dec
jecxz
repnz
pop
inc
mov
lods
sbb
arpl
jns
fisttpll
or
popf
in
ror
movsb
hlt
clc
fbld
xor
fstl
adc
and
jbe
add
add
jmp
and
ds
sub
mov
sbb
insb
jns
xchg
jno
shll
and
add
xchg
in
test
inc
ficoml
add
mov
test
lock
aam
test
add
aam
push
add
jle
cmpsl
jbe
push
subw
fs
jmp
hlt
mov
clc
mov
clc
dec
mov
jge
lret
dec
pop
sub
pushf
popa
xor
add
bound
mov
test
mov
aam
es
ja
push
loop
xchg
in
movsb
xchg
aas
sbb
cs
stc
arpl
aam
adc
jg
fdivs
cs
lock
sarl
andl
xchg
sbb
lock
inc
cld
sbb
xor
mov
push
mov
mov
xchg
shll
lgs
fnstcw
lcall
push
mov
imul
inc
lds
jg
std
dec
test
push
xchg
dec
cmp
xchg
insl
mov
test
out
sbb
or
pop
imul
lock
dec
adc
loop
jno
loopne
daa
mov
sbb
xchg
xchg
outsl
jecxz
in
fstl
and
mov
hlt
sbb
pop
aaa
dec
lahf
jl
add
test
mov
test
and
adc
jge
out
test
loop
mov
adcl
stos
push
inc
jmp
mov
std
pop
jns
dec
sahf
into
lcall
dec
pop
stc
sbb
push
xchg
sbb
fmull
sbb
pop
jg
popa
fsubrl
pop
cltd
cmp
cwtl
orl
push
repnz
sarl
loope
jb
inc
mov
jp
jae
mov
inc
mov
aad
add
push
imul
xchg
jmp
insl
jp
sub
sbb
sub
dec
push
decl
movsb
aad
mov
jge
int3
inc
clc
fldcw
sub
cmpl
xor
cltd
scas
test
scas
jl
inc
pop
and
pop
mov
and
fdivl
inc
sahf
sbb
fisubrs
aad
push
xchg
jbe
bound
rcll
sbb
ret
imul
iret
push
fnstsw
imulb
js
fdivrs
lahf
add
mov
test
insl
dec
call
es
cmpsl
lret
push
lret
mov
fcoms
pop
stc
jg
sub
push
jne
xchg
cmc
cmp
mov
push
popf
repnz
pop
adc
fs
add
lret
ss
stc
mov
sbb
xabort
es
adc
sbb
sbb
inc
cmp
xchg
xor
sub
pop
call
in
mov
pop
mov
out
xor
pop
mov
or
int
sub
ficompl
sbb
cs
add
pop
lods
add
or
leave
dec
lahf
pop
jbe
inc
push
hlt
in
mov
adc
inc
push
and
mov
iret
push
push
xor
lcall
test
sub
bound
loop
rolb
imul
pop
add
mov
into
or
mov
fistps
pusha
and
cmp
dec
scas
mov
gs
js
mov
cmp
dec
cmpsb
push
mov
mov
cmp
cs
inc
negb
pop
test
pop
mov
inc
dec
out
iret
je
mov
test
dec
inc
adcl
or
xor
test
out
popf
loopne
xchg
pushf
fiadds
push
fisttpl
sbb
imul
test
mov
dec
int
cmc
xor
leave
movsb
or
std
aaa
cli
das
cltd
adc
stc
jno
outsb
jo
sub
sysenter
data16
cli
imul
fildll
adc
add
mov
xlat
mov
scas
sbb
cmp
jne
push
push
or
inc
clc
sub
fs
adc
xchg
push
in
and
mov
cmc
outsb
xor
push
test
jb
test
add
pop
add
push
mov
aaa
std
stos
sbb
adc
pop
dec
js
cmpsl
loopne
aam
out
flds
jns
ret
iret
push
jmp
xchg
je
pop
mull
or
aad
or
add
andb
das
mov
push
mov
mov
or
xor
std
sbb
fldenv
sbb
into
pop
hlt
dec
out
mov
add
jne
add
xor
sub
fmull
xchg
ret
loope
pop
push
adc
ds
ds
jae
sbb
sbb
lret
xchg
dec
xor
mov
add
loopne
sub
xchg
es
sub
mov
adc
mov
mov
adc
jae
inc
pop
repz
mov
pop
adc
xlat
rcll
dec
cmc
xchg
xor
lcall
jnp
and
sahf
subb
xchg
jp
mov
into
jecxz
push
cli
ret
xchg
out
je
lock
sub
mov
dec
add
push
sbb
dec
ljmp
jne
cmpsb
test
sbb
test
das
stos
in
aad
cltd
sub
add
pop
mov
dec
pop
jle
jns
cmc
sahf
mov
mov
dec
push
dec
cli
int
sbb
cmp
and
sar
cs
xchg
add
mov
xchg
adc
fisubs
test
out
out
dec
pop
xchg
int3
pop
sar
and
pop
sub
jl
repnz
xchg
sub
pop
aad
inc
aam
ficoms
jns
jnp
int
jno
hlt
lcall
mov
mov
imul
mov
faddl
mov
mov
cmpsb
fimull
and
adc
lock
into
adcb
xor
push
hlt
xlat
stos
stos
jp
ficompl
xchg
lds
aad
cmpsb
lea
adc
pop
mov
mov
sbb
add
scas
add
jnp
push
loope
push
push
nop
and
testl
mov
jnp
or
sub
cmp
or
fstpl
mov
filds
pop
mov
add
cmpsl
std
imul
imul
sbb
fmuls
insl
pushf
mov
cmpsl
xchg
xchg
int3
sbb
dec
sti
dec
jb
scas
out
cmpsl
pop
dec
adc
xor
jle
imull
pop
sbb
clc
aaa
xor
pop
xor
sbb
inc
mov
xchg
xlat
cmp
movsl
popa
pop
leave
adc
stos
sbb
loope
fnsave
imul
mov
sub
clc
cmp
insb
jo
mov
in
mov
outsb
movsb
mov
dec
jns
cmpsb
dec
dec
fildll
adc
shll
mov
hlt
test
xor
cltd
mov
push
cmpl
cmp
imul
inc
mov
std
sub
sti
pop
out
arpl
xchg
xchg
call
and
cld
pusha
mov
fdivrp
clc
nop
sub
je
adc
or
xchg
add
push
xlat
pop
sub
cmp
orl
mov
push
mov
cmp
push
inc
fadds
cmp
or
fnsave
mov
mov
sub
jnp
mov
in
test
sbb
imul
xor
mov
jne
mov
inc
repz
sub
or
in
sbb
insb
int3
andb
out
movsb
mov
cltd
push
sbb
push
fs
fcomps
out
repnz
push
hlt
negb
adc
aad
scas
jg
test
jnp
mov
pusha
imul
sarl
pusha
stos
test
mov
or
icebp
fistpll
rcr
mov
into
cmp
xchg
fdivl
sub
dec
testb
jo
dec
cld
xor
jnp
mov
xchg
dec
test
es
pop
inc
gs
in
sub
test
dec
les
arpl
pop
jno
sub
push
popa
gs
rcrl
pop
scas
mov
push
mov
movsb
xchg
xchg
or
test
test
mov
jmp
cmpsl
mov
ret
xchg
stos
nop
mov
ljmp
pop
xchg
ja
std
rol
inc
cmp
cmpsl
or
pop
push
cmpsl
leave
inc
das
mov
push
arpl
ja
sti
adc
pop
loop
inc
mov
fstl
fbstp
clc
stos
mov
sbb
mov
ja
cmc
jl
ret
pop
cli
int
mov
mov
cmpsb
mov
cmpsb
mov
dec
adc
popf
ror
add
or
push
mov
call
aas
mov
mov
lcall
fldt
arpl
pop
mov
test
mov
or
pop
jge
and
xchg
inc
inc
xchg
or
cmp
aam
push
and
out
inc
loopne
jmp
shl
and
stos
adc
imul
mov
mov
or
push
dec
test
and
pop
call
mov
mov
lahf
test
out
sahf
repnz
imul
out
ljmp
lret
in
gs
int3
dec
pop
and
jnp
add
push
push
clc
jb
cmp
adc
shrl
push
mov
inc
pop
jg
jge
mov
pop
lret
dec
mov
add
stos
shl
sbb
js
and
sbb
fmull
gs
pop
cld
lods
mov
ljmp
xchg
or
adc
cmpsb
mov
pop
subl
gs
leave
xor
cmc
adc
sub
and
sbb
push
mov
inc
inc
and
adc
addb
test
adc
mulb
stc
aas
adc
lahf
daa
loop
mov
push
bound
sahf
pop
adc
inc
xor
push
xchg
fdivs
add
jns
pop
movsl
cmp
popa
loope
enter
cmc
and
push
inc
aas
pop
test
xlat
movl
or
loopne
adc
movsbl
inc
mov
pop
cmpsb
pop
jl
pop
xor
sub
cmpl
ret
repnz
push
and
sbb
into
inc
add
mov
xlat
cmp
mov
or
xchg
xchg
xorb
fldl
icebp
and
inc
pop
and
rcl
add
cmp
jnp
popa
inc
or
jmp
sub
mov
rorl
lea
xor
gs
and
outsl
ss
push
sbb
jp
or
and
dec
stc
jae
mov
std
add
inc
adc
mov
xor
adc
rclb
daa
cltd
int
inc
push
xchg
add
xchg
add
mov
cltd
push
adc
mov
sbb
pusha
xor
lods
fadds
xchg
adc
pop
xor
in
ss
push
fistpll
test
xor
mov
jecxz
scas
negb
cmp
mov
rcrl
adc
pop
adcb
inc
sbb
cmp
shlb
pop
add
or
inc
out
stos
lods
push
enter
mov
jge
sub
mov
push
dec
das
adc
inc
inc
cld
lods
int
fcoml
push
mov
push
lea
ret
cs
mov
jl
adc
xor
jle
and
jbe
or
and
insb
emms
mov
shll
shrl
push
adc
pop
in
xchg
sub
push
cmp
xchg
rorb
negb
jmp
test
cmp
xor
cmp
cmp
loop
add
mov
mov
jge
hlt
jg
sub
xchg
popa
icebp
pushf
push
fs
cwtl
and
xchg
cmp
out
dec
push
push
cmp
mov
mov
rorl
pop
dec
cs
pop
push
mov
mov
add
icebp
fs
lds
loope
push
or
push
mov
lds
int
and
sub
imul
add
add
pop
jl
jp
and
mov
push
sub
mov
cli
xor
xor
mov
mov
sbb
je
rolb
in
adc
iret
int3
jo
imul
and
jns
mov
mov
ja
in
push
and
shr
out
and
enter
sub
pop
out
sahf
and
or
ret
push
inc
cmpsl
add
mov
xchg
mov
fistps
iret
in
cmpsl
pop
mov
pop
cmp
test
xchg
daa
mov
sub
jecxz
scas
fldcw
and
push
push
jp
filds
xor
or
bound
mov
and
xchg
or
dec
rcr
mov
arpl
in
fiaddl
xor
lret
xchg
dec
mov
sahf
push
pop
pop
ljmp
sub
lahf
inc
adc
pop
bound
rolb
je
xchg
sub
inc
push
cmp
jae
test
dec
jae
jecxz
jmp
inc
xchg
mov
sub
add
movsl
push
sbb
outsb
cmp
sub
dec
test
enter
in
scas
int
loope
pop
fidivrs
jmp
jno
sarl
cmpb
and
outsb
sbb
insb
add
in
dec
data16
or
dec
jmp
sahf
xlat
das
dec
mov
mov
mov
dec
xchg
pop
mov
xlat
test
pop
xchg
pushf
cmp
lret
and
js
aas
jae
sub
and
je
clc
negb
nop
jle
mov
push
jp
push
xchg
or
in
pushf
loopne
pop
cld
shll
push
xchg
dec
shl
jp
dec
mov
aam
sub
xor
and
fisttpl
fcmovb
rcr
lods
pop
mov
dec
or
inc
push
xchg
xchg
sbb
mov
lret
jns
mov
imul
inc
rol
fnsave
or
and
out
add
jbe
inc
cld
or
popw
rcr
aaa
rcll
mov
ja
stos
repz
jge
pop
shlb
push
shrl
sub
ror
jae
push
or
bound
sti
test
cmp
in
lds
dec
lcall
nop
in
mov
xlat
cmp
cmp
pop
out
mov
movsl
adc
leave
inc
pop
xchg
mov
pop
or
and
popf
arpl
xor
out
inc
out
lock
or
imul
movsl
test
mov
mov
std
or
pop
loope
js
repnz
fcoms
or
mov
mov
sub
daa
loopne
aad
sbb
ds
lret
in
nop
jg
rcrb
xchg
add
ret
jp
lret
fmulp
mov
adcl
mov
movsl
repnz
xor
in
jp
add
jo
clc
push
push
pslld
in
ret
aad
cmpsb
stos
ja
test
or
add
pusha
jne
test
xchg
and
push
ss
sub
adc
jne
rcr
push
ret
clc
xchg
sarl
xor
sub
pop
mov
jns
push
sbb
fldl
inc
dec
js
inc
add
push
jge
sbb
sbb
idivb
mov
pop
mov
imul
rorl
inc
les
xchg
addr16
sbb
inc
fcmove
pop
or
push
sub
imul
mov
int3
movsl
lcall
rcrb
jns
loope
pop
mov
ret
rcrl
arpl
test
pop
popa
push
mov
and
fstpl
leave
aam
mov
mov
es
push
mov
xor
or
mov
orl
aas
mov
sti
fcmovnbe
inc
push
jge
sbb
sub
aad
call
ret
inc
enter
sar
or
adcl
into
and
pop
and
in
push
lret
ret
dec
jbe
cmp
mov
mov
mov
and
mov
and
push
ret
aam
sbb
ss
dec
pop
mov
push
sbb
adc
pushl
fdivl
out
jg
mov
pop
xor
dec
jecxz
in
ret
sbb
pop
xchg
xchg
push
inc
addr16
add
int3
sub
inc
ret
jmp
sub
mov
inc
pop
movl
mov
jbe
sbb
jp
lods
adc
mov
push
jle
jl
jbe
aam
inc
fmuls
push
decl
pop
xor
nop
mov
rcrb
mov
adc
shll
or
mov
or
cmp
test
loop
pop
loopne
add
out
sub
out
pop
push
daa
nop
jge
scas
aad
cmp
inc
icebp
mov
mov
dec
cmpsl
orl
orb
addl
and
or
sbb
push
lea
adc
cmp
xchg
inc
addr16
inc
dec
pop
fwait
mov
shr
lea
stos
nop
jno
push
mov
js
pop
icebp
bound
add
ficoml
dec
enter
inc
outsl
das
ja
inc
das
jnp
jg
sbb
out
jb
shl
aad
inc
inc
xchg
cs
lret
pop
fs
aad
loope
or
mov
in
sbb
fs
adc
mov
adc
mov
cmp
mov
pop
pop
mov
lahf
pop
or
out
jl
jg
mov
cmp
shr
add
cli
dec
in
dec
lret
push
shll
imul
loopne
cwtl
push
adc
add
add
ja
sub
mov
jp
rorl
sbb
mov
mov
xchg
mov
stc
lods
adc
inc
pop
hlt
push
jmp
xchg
mov
hlt
pop
push
adc
loopne
cmp
fwait
inc
dec
add
dec
add
sbb
pusha
bound
lods
add
xor
and
aas
and
cmpsb
out
push
push
nop
lahf
pop
or
insb
mov
loopne
ds
loopne
test
cmp
mov
pop
jae
xorl
jecxz
or
sub
in
loopne
stos
jnp
loopne
or
jae
jbe
dec
or
mov
pop
in
mov
xchg
mov
xor
mov
imul
insb
popa
gs
sub
test
and
loop
xchg
int3
leave
sbb
out
xor
or
inc
cmc
hlt
adc
jmp
lods
es
cmp
jge
inc
int3
cmp
adcl
rcll
shll
push
arpl
mov
aas
fidivs
cs
pop
je
mov
pop
enter
add
ss
das
jbe
mov
adc
jle
inc
mov
cmovge
mov
mov
jp
cmp
jbe
push
dec
dec
and
in
imul
adc
inc
sbb
shrl
xchg
aaa
arpl
ss
test
pop
mov
outsb
out
xchg
jecxz
aad
fwait
and
mulb
pop
mov
cld
jp
mov
loop
sbb
insb
and
jbe
icebp
xchg
pop
adc
stos
dec
sarl
adc
mov
pop
mov
dec
mov
jb
mov
jb
add
cli
sahf
jbe
sbbl
gs
scas
ss
movsb
dec
dec
cmp
icebp
mov
jne
push
inc
push
mov
lahf
shll
mov
adc
lds
push
inc
sahf
xchg
mov
push
sbb
test
cmp
xor
adc
in
sub
test
mov
and
adc
sbb
outsl
cltd
sahf
dec
lods
xor
xor
mov
push
loop
adc
jno
ret
in
push
sbb
push
mov
lods
int
data16
adc
out
xchg
icebp
repz
fsubrs
mov
inc
pop
mov
outsb
das
stc
mov
enter
pop
arpl
jno
sbb
out
mov
pop
mov
fdivp
shl
push
insl
mov
enter
mov
jno
mov
movsl
std
adc
pop
adc
negl
sbb
insb
inc
and
and
xchg
stc
xchg
fxch
rorl
enterw
hlt
and
dec
pop
cmp
mov
hlt
ret
push
call
jecxz
xchg
imul
stos
adc
and
clc
cmpsb
mov
add
mov
call
addr16
push
add
mov
jbe
and
pusha
sub
pushf
inc
xchg
addr16
aam
imul
fwait
cwtl
ds
mov
addb
fildll
sbb
mov
mov
cmp
mov
dec
lret
jns
aam
xchg
fistpl
test
aam
lcall
aam
adcl
test
cmp
mov
jnp
adc
aam
aad
jmp
xor
test
or
lock
inc
jl
mov
mov
repz
gs
sbb
ficoms
jne
push
subb
adc
adc
test
stc
loopne
sub
cmp
add
fwait
mov
data16
aam
mov
inc
xor
jmp
or
enter
adc
mov
out
stos
in
inc
cmp
jo
xchg
xchg
dec
sti
das
xor
lods
jae
mov
fstp
adc
loopne
das
sti
clc
repz
das
jg
cld
mov
rol
pusha
mov
cmpsb
inc
pop
pop
fidivrl
xchg
sahf
jecxz
lea
dec
push
cmp
cwtl
add
nop
push
fildll
push
and
mov
inc
mov
jmp
mov
inc
fidivl
inc
xchg
shlb
cmpsb
fistpl
stc
movsb
mov
scas
inc
push
dec
outsl
jge
pop
xchg
les
push
push
xchg
in
in
push
gs
out
cmp
sahf
push
push
add
inc
div
lcall
aam
sub
pop
lret
adc
in
mov
mov
jg
or
shrb
mov
cmp
dec
call
pop
out
push
push
sbb
push
in
mov
mov
or
loope
jo
aaa
sub
dec
add
mov
jmp
mov
arpl
inc
fiadds
dec
fwait
aam
push
pusha
test
aas
and
fmuls
loopne
jl
clc
sahf
sub
icebp
cltd
cmp
jl
push
inc
inc
test
add
inc
shl
mov
lods
pop
pusha
cmc
xor
inc
sub
cmp
add
push
push
lods
inc
int
mov
and
call
mov
dec
xor
mov
jle
mov
jge
loopne
mov
mov
sarl
jmp
xor
dec
sbb
in
cs
pop
dec
sarl
das
dec
xchg
xchg
xor
inc
mov
addr16
leave
ds
xchg
cmp
push
ljmp
xor
and
fwait
jno
pop
je
push
or
mov
imul
icebp
add
mov
mov
xchg
xor
cli
test
mov
mov
test
testl
aas
outsb
enter
inc
xchg
mov
adc
add
shll
push
mov
mov
sbb
xor
pusha
mov
mov
add
cwtl
dec
mov
xlat
sbb
aaa
xchg
pop
pusha
scas
sarb
in
push
in
bound
call
pop
ss
gs
test
pop
dec
pop
mov
xor
nop
sbb
xor
mov
sarb
push
add
outsl
popa
rol
rcll
lahf
fidivl
lock
rclb
sbb
or
mov
push
sbb
mov
lock
and
mov
adc
xor
jnp
dec
pop
push
les
sbb
pop
int3
pop
fisttpl
sub
mov
cwtl
xchg
popa
jns
pop
and
inc
xchg
cmp
push
hlt
push
stos
into
mov
push
mov
xchg
rcll
push
add
adc
cwtl
fisttpll
mov
enter
sbb
iret
ret
sbb
mov
bound
dec
mov
insb
push
push
dec
pop
shlb
xor
cltd
dec
syscall
sub
or
inc
enter
loope
or
ret
insb
pop
scas
iret
adc
int
mov
les
or
mov
fimull
mov
adc
mov
sti
and
in
lret
mov
pushf
jmp
cmp
lret
std
divb
dec
push
xchg
aas
push
add
mov
lods
pop
push
mov
call
pop
addr16
call
push
or
nop
adc
test
out
daa
cmp
xchg
or
into
ja
sbb
mov
dec
ficomps
shrl
test
pop
sub
cwtl
sahf
xor
and
cltd
out
adc
cmp
and
dec
dec
sub
push
test
ljmp
xchg
rol
movsl
ja
add
stc
loope
clc
in
hlt
push
leave
sbb
or
mov
mov
add
xchg
test
mov
lret
or
jno
idivl
cmp
sbb
ret
jns
stc
jp
xchg
jae
add
scas
subl
mov
lea
xchg
cmp
sub
and
es
rol
gs
call
jno
cld
jecxz
xor
inc
pop
dec
push
mov
sub
jae
leave
aas
sub
aas
fnstcw
add
mov
pop
add
imul
mov
cld
cmpsl
je
fnstenv
xchg
lods
lret
xchg
int3
data16
pop
iret
inc
adc
jl
sbb
addl
call
in
inc
jle
outsb
xor
mov
adc
lds
and
dec
or
or
add
fmull
aam
insl
sbb
push
mov
mov
sbb
dec
out
loope
lock
mov
mov
stc
stos
dec
pop
hlt
fmuls
push
pusha
inc
pop
lods
fisubrs
loop
mov
lock
xchg
add
mov
inc
pop
pop
movl
sbb
add
gs
add
gs
inc
lods
int
icebp
xchg
or
xlat
sahf
pop
jbe
jne
inc
lret
lret
adc
pop
cmpb
mov
int
sahf
dec
das
cmp
shr
icebp
sarl
jno
xor
lret
ficompl
lds
push
in
test
notl
inc
pusha
outsb
add
inc
pop
pop
sbb
push
pop
jns
shl
fdivl
stc
inc
ljmp
lods
and
les
repnz
ret
inc
lret
push
cmp
popa
xor
test
sbb
fimuls
and
xchg
aaa
loop
sub
popa
dec
out
sti
pusha
testb
mov
pop
mov
arpl
xchg
pop
scas
insl
fadds
cmp
je
addr16
addr16
shlb
jne
jecxz
jnp
icebp
push
mulb
adc
mov
inc
repz
aad
movb
and
inc
or
icebp
mov
push
jb
dec
shrb
add
adc
outsl
ja
sahf
cmp
jne
test
sbb
jge
mov
cmp
add
sub
add
adc
jge
mov
sub
call
movsl
test
add
fimuls
popa
lahf
popf
cltd
or
mov
divl
and
mov
mov
je
popf
out
pusha
pop
push
inc
data16
mov
add
dec
das
leave
push
jne
mov
jmp
cmp
pop
mov
mov
cmp
jg
cmp
mov
add
push
cmp
push
cmp
jb
push
xor
mov
roll
pop
fldenv
mov
push
es
nop
dec
pop
pop
cli
testl
push
pop
inc
lahf
int3
in
jae
mov
cmp
jmp
cmp
ret
jmp
call
push
loop
push
stc
int
jb
push
xchg
sti
xor
icebp
inc
outsl
jl
addr16
and
or
mov
je
test
fisttpl
mov
cwtl
adc
imul
mov
push
loope
in
xlat
inc
push
dec
mov
mov
fstl
mov
insb
cld
inc
jne
or
rorb
push
mov
lods
dec
dec
xchg
and
cmc
sbb
in
adc
andb
jne
pop
in
mov
xchg
cmp
in
les
data16
pop
shrl
lret
adc
sahf
fstpt
mov
insb
mov
adc
int3
cwtl
andl
jle
addr16
jae
pop
out
lcall
add
nop
adc
push
pop
sti
jp
push
outsb
fsubs
fcmovu
sub
bound
adc
rol
xchg
or
push
sub
movsl
fcomip
xchg
and
fdivrp
xor
into
jp
in
imul
mov
mov
fs
lock
or
mov
adc
cltd
fsubs
cs
xor
iret
outsl
enter
sub
data16
xchg
jl
outsb
xor
push
aad
cmc
xchg
adc
repnz
xorb
dec
rcrl
lea
pop
testb
xchg
nop
push
outsb
xor
test
pop
mov
bound
xor
xchg
in
pop
adcb
push
andl
mov
mov
adc
inc
stos
mov
lret
ds
lock
cmpsb
scas
inc
fdivp
add
sbb
inc
enter
arpl
dec
sbb
ss
loop
outsl
outsl
xchg
push
jno
mov
out
ja
cld
push
add
aas
inc
xchg
mov
pop
lret
push
xchg
or
hlt
jle
push
je
mov
loopne
shrl
dec
data16
imul
insl
out
or
lea
ljmp
fbld
fisttpl
ja
outsb
add
mov
int3
imul
popa
fmul
ljmp
jo
jb
stos
xor
sahf
std
out
in
scas
push
mov
fldt
mov
mov
push
jns
std
jp
jo
push
pop
or
imul
pushf
int3
aaa
mov
fdivrs
cmp
and
test
adc
cmpsb
pop
in
adc
jg
mov
jp
subb
cmpsl
adc
pop
in
hlt
scas
in
fcmovbe
add
das
push
scas
xchg
inc
ficoml
adc
jae
xchg
or
push
and
lods
inc
mov
xor
aad
inc
flds
nop
das
data16
rcll
dec
or
mov
nop
test
push
cwtl
dec
insb
and
sbb
sti
dec
xchg
pop
into
jb
cmp
stos
mull
xchg
mov
lods
mov
adc
cmp
cwtl
js
jle
inc
push
enter
sbb
int
or
pop
rcrb
loopne
clc
movsl
mov
in
clc
in
lret
loope
mov
int
faddl
adc
inc
inc
cmc
push
cltd
mov
loope
or
pop
ficoml
lods
or
rcrb
ret
int3
nop
lret
outsl
jl
inc
js
jmp
mov
jg
mov
xorb
ss
mov
fs
adc
add
test
mov
push
mov
gs
jne
ret
push
mov
sub
lcall
in
xorl
mov
xchg
jmp
movsb
jb
iret
scas
aaa
jge
mov
sbb
mov
mov
adc
hlt
stos
inc
into
arpl
aas
jge
inc
add
cmpsb
cmp
in
rcrb
and
bound
mov
data16
push
xchg
es
sbb
push
pop
insb
roll
int3
ret
test
clc
sbb
sbb
and
inc
notb
xchg
or
stos
pop
adc
js
xchg
gs
mov
cmpsl
ret
cld
jg
cmp
xlat
xchg
shl
enter
ljmp
dec
push
sarb
or
scas
xor
jl
or
rcrb
mov
sbb
hlt
mov
stc
jle
popa
js
inc
inc
aad
fsts
adc
adc
outsl
push
ds
cmp
cmpsl
pop
jne
lea
push
xchg
scas
xor
adc
inc
sub
bsr
fisubl
std
jmp
rorl
stc
jns
scas
cmp
fcom
cmp
pop
loopne
mov
notl
mov
pop
in
or
mov
jbe
idivb
push
inc
in
notb
and
cmp
add
movsb
sub
subb
or
pop
lds
insl
roll
fistps
sbb
adc
lds
pusha
cwtl
iret
xor
xor
jge
stos
inc
aaa
mov
fiaddl
mov
inc
dec
fmuls
sarb
cmpl
xor
sbb
dec
in
outsl
jecxz
iret
dec
mov
ja
sub
out
sbb
push
imul
cwtl
in
testb
mov
dec
xlat
loopne
ret
test
outsb
mov
sbb
mov
jnp
call
call
sbbl
mov
aad
arpl
fs
loop
aad
popa
pop
jmp
test
loop
jo
mov
out
scas
roll
int
popa
daa
sub
sbb
ljmp
lret
enter
push
cmp
push
adc
or
in
pop
lock
xor
mov
and
stc
xor
cmpsb
cmpsb
mov
mov
mov
inc
icebp
out
pop
test
adcb
jg
test
add
shrl
jnp
str
insb
jl
inc
inc
push
fadd
mov
iret
idivl
add
pop
shlb
fmulp
mov
push
push
lea
shrl
out
cmp
or
or
sbbl
out
aaa
mov
das
adc
or
cmc
and
dec
into
imul
sbb
lods
mov
ret
add
les
test
lahf
pop
lret
xchg
push
push
jp
jmp
xor
push
add
lcall
aaa
insl
lods
arpl
lret
sub
sub
pop
mov
out
push
xor
dec
or
cmpl
mov
scas
js
sti
dec
jb
xor
scas
or
nop
jp
adc
push
mov
aad
imul
jo
xor
push
scas
lret
and
icebp
ljmp
jae
out
jecxz
inc
cmp
dec
pop
push
cmp
cmc
fadd
hlt
cmpsl
lods
and
imul
notl
xorb
xor
jl
or
xor
movsb
hlt
push
mov
mov
cmp
loop
and
pushf
cmp
sbb
sbb
arpl
push
xchg
cmpsb
and
fs
mov
lock
lock
jge
jne
dec
pop
jecxz
push
in
push
fwait
push
faddp
and
push
jge
add
out
neg
push
aam
sbb
pop
dec
ret
leave
ret
mov
mov
dec
and
call
aam
mov
pop
icebp
add
rcll
jno
nop
inc
dec
xor
mov
push
mov
or
fidivs
mov
and
ret
mov
sbb
aad
das
and
rcrb
pop
int3
adc
in
loope
loopne
adcb
fldcw
push
ret
fiadds
mov
and
test
inc
adc
mov
sti
fs
dec
and
jns
jns
outsb
inc
out
mov
aam
xchg
jno
or
pop
mov
dec
cltd
pop
mov
nop
dec
mov
xchg
mov
fstps
insl
ja
icebp
orb
loop
mov
dec
cld
cld
sub
js
out
nop
sar
lods
fsubrp
push
rol
in
xchg
xor
out
push
scas
ja
inc
data16
stos
or
pop
sub
scas
mov
jo
cmpsb
lock
aam
call
push
ret
notb
mov
loopne
ja
sbb
aad
lods
adc
push
adc
ja
cltd
fstps
sahf
and
pop
mov
jg
sub
sbb
and
inc
data16
stc
mov
mov
jle
sti
or
fcoml
sti
out
inc
adc
mov
out
add
jo
out
pop
pop
cltd
insl
dec
sbb
hlt
dec
pop
lods
mov
les
mov
in
in
ja
mov
mov
dec
aas
dec
mov
ret
cmpsl
xor
pop
xor
pop
das
jmp
mov
movb
and
xorl
xchg
pop
popa
das
daa
cmpsl
push
cmpsl
es
int3
and
pop
cltd
popa
mov
adc
lcall
insl
pop
jmp
rorl
stos
lcall
test
lea
in
lret
inc
xchg
cmc
jae
mov
lret
mov
repnz
mov
adc
das
xlat
mov
fsubrl
dec
push
test
cmp
and
stos
push
pop
cltd
jle
lcall
pusha
pop
pop
adc
mov
or
push
faddl
dec
pop
test
jns
sub
sub
jl
or
gs
adc
mov
cmp
dec
movsl
mov
shlb
mov
jno
fbstp
mov
ja
xor
add
pop
push
sbbb
and
cmpsb
shrb
sbb
out
mov
push
jge
sar
in
and
push
pushf
cld
cmova
mov
adcl
mov
cmp
scas
or
mov
and
mov
imul
in
jle
orb
clc
call
sahf
lret
jmp
imul
repnz
sbb
aad
pop
ja
pop
fs
mov
xchg
out
cwtl
je
pop
xchg
fistpll
test
xor
nop
int3
adcb
adcl
mov
push
in
adcl
xor
push
adc
ficompl
or
sub
jb
sbb
bound
movd
pushf
rcrb
jl
cld
inc
inc
into
mov
and
or
cmp
xchg
cmp
lds
sbb
cmpsl
jmp
add
ret
js
addr16
rorl
pop
popf
sarb
pop
pop
mov
cli
mov
dec
push
imul
and
imul
mov
aam
lock
add
xchg
xor
loopne
sahf
rcrl
repnz
inc
push
pop
insb
cmp
lock
fdivr
sti
mov
push
js
adc
pop
hlt
icebp
jecxz
mov
incl
cs
mov
dec
lret
xor
addr16
sbb
or
xor
rclb
outsl
insl
mov
sub
lock
movsl
dec
aas
xchg
sbb
adc
xor
js
into
or
loopne
ljmp
dec
sahf
adc
adc
inc
inc
aad
push
cmp
cmp
leave
frstor
add
leave
mov
or
xlat
fiaddl
xchg
lods
cs
imul
pop
add
dec
dec
aam
jge
insl
xchg
pop
dec
shlb
mov
and
and
icebp
imul
pushf
ja
ljmp
pop
mov
mov
repz
enter
or
adc
scas
sbb
mov
int
or
inc
std
mov
lret
cli
cmp
test
pusha
imul
inc
push
icebp
insb
cmc
cmp
loope
mov
imul
xchg
sbb
cmp
adc
sbb
push
loopne
lahf
ljmp
mov
iret
push
movsb
xchg
hlt
mov
cmpsl
in
movaps
add
inc
inc
into
fisttps
xor
sbb
ret
insl
xchg
add
push
lds
filds
push
fucomp
je
dec
pop
cmp
out
mov
jno
mov
out
stos
pop
push
sub
lcall
mov
cs
cld
cmp
fisubrl
stc
insl
in
addb
std
fwait
mov
cmp
stos
xchg
ja
pop
pushf
jbe
mov
lret
cmp
lds
cmp
dec
movsl
rcrb
dec
shr
xor
cltd
cmp
data16
frstor
pop
in
push
push
dec
hlt
fcoms
xor
xor
fcmovnbe
insl
pop
test
mov
sub
in
mov
xchg
leave
in
mov
pop
push
insb
rolb
xchg
pop
loope
imul
cmpsb
mov
popa
mov
pop
xchg
popf
adc
insl
or
push
xlat
cmpsl
and
add
fmull
jae
aas
rorb
stc
iret
push
in
dec
push
cmp
mov
inc
rolb
mov
jmp
int
pop
clc
inc
popf
ds
add
aaa
mov
iret
pop
jg
rep
adc
repz
jge
push
rolb
push
jo
inc
pusha
mov
xchg
rclb
in
adc
lcall
dec
ja
ss
nop
imul
xchg
jecxz
sbb
or
add
stos
imul
nop
cmp
jp
pop
lahf
out
mov
ds
push
jmp
pop
push
aam
mov
cli
jmp
loop
hlt
vpackusdw
push
pop
or
xor
mov
xor
mov
xor
xor
lcall
pop
inc
jns
jge
push
sbb
or
or
xchg
fcomi
push
in
pop
clc
popa
xchg
inc
out
sbb
call
lret
cmpsb
jp
ss
arpl
adc
ljmp
add
stos
add
lods
xor
pop
dec
fs
cmp
outsl
cmp
xchg
add
jmp
popa
sub
in
ud2
mulb
dec
xchg
push
nop
ljmp
idiv
fwait
out
cmpsl
jns
sbb
pop
lret
cmp
out
jno
sub
fsts
xchg
mov
fists
xchg
inc
mov
ja
inc
iret
jecxz
sahf
imull
dec
push
mov
icebp
push
mov
jb
mov
pop
xchg
divb
mov
mov
jno
mov
sbb
in
sbb
es
ret
leave
imul
loope
mov
mov
int
jp
jmp
es
jns
cli
adc
fbstp
scas
arpl
subb
xchg
aad
je
movsb
jmp
dec
cld
dec
pop
add
test
inc
stos
add
pop
mov
sbb
out
outsb
dec
popa
and
xor
xor
and
aaa
or
popa
or
mov
push
hlt
mov
sbb
insl
xor
mov
sbb
sarb
fidivl
push
pop
cmp
cmpsb
stos
loopne
clc
sub
mov
rolb
outsl
faddp
sbb
dec
lea
insl
stc
lods
adc
dec
lret
sub
ret
cmc
mov
mov
cld
push
mov
jb
xor
cmpsb
dec
mov
xor
inc
and
mov
mov
stc
ljmp
pusha
pushf
mov
xchg
lret
jns,pn
pop
jae
scas
cmp
mov
popa
jb
mov
iret
in
pop
mov
mov
cmpsl
shrl
mov
mov
pop
sarl
div
fistpl
sub
jnp
ljmp
inc
out
scas
mov
jo
sbb
jo
das
hlt
cmp
cmc
imul
adc
aaa
nop
jae
adc
push
pop
push
fistl
push
movsb
or
in
xchg
pop
mov
cmp
aam
lahf
dec
pop
lret
xchg
movsb
shrb
add
jmp
call
sub
mov
mov
jle
mov
aad
mov
pusha
mov
mov
mov
cld
lods
ret
inc
popa
testl
call
cmp
and
dec
call
xor
pop
xor
mov
dec
mov
addr16
sbb
adc
cmp
pop
call
ret
sbb
xchg
lcall
cmp
inc
clc
repz
mov
iret
xlat
shlb
and
mov
je
jmp
pop
inc
push
leave
test
scas
movq
cli
fdivr
mov
imul
jp
rorl
sbbl
hlt
sub
iret
jb
psubb
jle
mov
sti
cmp
push
sbb
mov
mov
add
push
bnd
add
xchg
xlat
mov
mov
xchg
mov
fwait
orb
lret
std
dec
xor
shrb
scas
sub
mov
mov
mov
outsl
adc
loope
adc
cmp
pop
cmp
sbb
and
sbb
pop
inc
dec
push
subb
sub
mov
jbe
out
sbb
xchg
inc
fnsave
dec
mov
outsb
fisubs
inc
lahf
call
lret
add
imul
sbb
ds
dec
sub
pop
jl
clc
stos
push
jnp
sub
sub
pop
jg
frndint
ljmp
push
imul
xor
adc
sbb
xlat
aam
mov
aaa
mov
in
sbb
and
jo
xchg
push
shll
push
xchg
xchg
cltd
and
jae
fldcw
jg
sbb
cmp
pop
dec
inc
rorl
inc
dec
in
and
and
movsl
cli
fildl
mov
in
or
ja
push
xchg
mov
test
faddp
sub
out
pop
lret
or
pop
sahf
or
add
stos
aam
push
cmpsl
jge
pop
pop
pop
movsl
movsl
bound
lea
xchg
push
xchg
or
jae
int3
jbe
inc
adc
push
mov
lahf
push
ret
addr16
popa
push
rolb
lds
pop
push
sub
sti
inc
andb
sub
inc
das
fdivrs
movsl
fxch
mov
xchg
jo
sbb
sarl
jne
fwait
sbb
mov
or
push
mov
xchg
sbb
and
sbb
pop
push
ficoms
mov
lds
iret
push
sub
bound
jne
sbb
fsubs
jns
mov
icebp
push
rcll
jge
loop
jg
cmp
out
iret
sbb
inc
jge
or
sub
push
xchg
call
mov
jnp
stos
mov
ret
scas
mov
out
adc
mov
sbb
xchg
inc
jnp
stos
push
inc
repnz
popf
ss
sbb
xor
and
xor
out
jmp
jp
inc
push
call
hlt
addr16
push
repz
out
arpl
inc
repnz
lahf
mov
or
lcall
cmpsb
js
popa
jg
out
mov
sar
popf
pop
mov
icebp
hlt
and
pop
cmc
jg
popa
inc
cmp
test
push
xchg
xor
or
rclb
mov
mov
out
push
popf
cltd
push
push
scas
cld
scas
mov
int
ficomps
pop
outsb
jnp
adc
stos
xchg
jns
or
xchg
push
push
xor
outsb
adc
test
jge
cmp
std
out
push
dec
mov
aas
pop
insb
rclb
cwtl
out
xchg
scas
and
inc
and
loope
int
or
add
out
jecxz
sbb
and
insb
movsb
mov
or
dec
cmpsl
xchg
xchg
aas
xor
xchg
test
sub
push
cmp
and
pop
sbb
int
stos
mov
sub
sbb
popa
jecxz
nop
push
mov
mov
iret
outsb
mov
push
hlt
pop
jb
push
sahf
push
lods
aas
jno
in
jle
hlt
in
mov
adc
lahf
shrb
jge
pusha
sub
dec
fsubr
sbb
xor
inc
lcall
push
arpl
push
cmpsl
pop
mov
sbb
mov
mov
test
les
inc
unpckhps
inc
or
lret
mov
and
scas
xlat
dec
dec
shll
mov
mov
mov
push
adc
cmpsb
pop
or
fwait
stos
pop
xchg
call
jb
loop
lock
pop
lods
mov
rorb
and
xchg
add
dec
xchg
inc
scas
xchg
daa
hlt
adcl
push
addl
jmp
xchg
sbb
xor
sub
cmpsb
aam
jae
adc
push
add
lret
add
bound
daa
mov
mov
mov
in
fidivs
les
cmp
pop
cmpsl
cmpsb
sub
js
adc
mov
mov
fwait
mov
cwtl
insb
mov
insb
push
dec
jp
mov
jo,pn
mov
ss
push
sahf
addr16
cmp
je
sub
cli
pusha
inc
jl
or
stos
idivl
movsb
fnstenv
es
fidivrs
mov
shll
xchg
addl
rcrb
je
loopne
leave
push
pop
jmp
fildll
filds
fnsave
enter
xor
push
and
add
pusha
or
or
cmp
or
mov
add
addb
ret
lret
xchg
adc
push
dec
pop
dec
jbe
dec
cmp
cmp
xchg
gs
jmp
divl
test
dec
pop
pop
std
inc
dec
stos
daa
aad
setnp
xor
movsb
mov
lods
adc
clc
mov
sbb
mov
fwait
jge
push
push
mov
mov
int
arpl
cmp
movsb
cs
inc
in
sub
in
xchg
fmuls
mov
out
fwait
rcll
enter
mov
jo
sahf
das
jno
inc
test
orl
add
ja
pop
cld
pop
xchg
jmp
lea
or
aam
js
nop
dec
mov
dec
xor
mov
cltd
sbb
and
adc
pop
add
out
imul
xor
pop
dec
es
ljmp
ljmp
mov
jl
or
scas
ret
xchg
jmp
fldcw
loope
aas
sbb
xor
sbb
xor
stos
in
sub
repnz
imul
lods
cli
ret
enter
mov
xlat
cmpsb
cmpsl
hlt
push
xor
cltd
out
stc
call
mov
mov
shrb
leave
call
cmp
movsl
cmp
fs
or
xchg
fsub
stos
je
shlb
jbe
ljmp
je
inc
ja
mov
jge
push
stc
sub
xchg
popa
xlat
imul
test
mov
push
dec
jmp
ret
dec
or
int3
xlat
push
aaa
xlat
jl
mov
pop
ljmp
or
sub
test
push
outsb
faddl
data16
cmp
xchg
sbb
cmp
decl
insb
movb
stos
test
ret
mov
das
aad
mov
jg
pop
mov
adc
aas
jmp
ja
mov
lcall
pop
or
repnz
movsb
inc
or
mov
add
add
aas
inc
add
cmpsb
inc
xchg
cltd
shlb
popf
adc
cmp
pop
xor
les
daa
pop
imul
cmp
or
je
pushf
jp
fcomps
mov
shll
aam
mov
nop
sbb
cmp
repz
inc
xchg
shl
loop
xchg
xchg
mov
or
jle
jge
pop
out
adc
dec
dec
lret
lds
inc
push
cltd
mov
cli
ret
pop
push
fcmovbe
test
lods
dec
dec
pop
push
mov
or
mov
mov
xor
sub
outsl
lds
mov
xor
xor
xchg
rolb
add
mov
mov
cmc
push
push
xor
popf
mov
addr16
push
jnp
in
das
or
xchg
jge
jl
mov
shrl
in
xor
add
dec
mov
and
inc
in
movsl
or
push
pop
mov
sub
dec
inc
mov
mov
jne
mov
jo
push
scas
add
insb
inc
aad
enter
jns
adc
mov
xor
mov
test
mov
jle
rcr
mov
insb
ds
lods
movsl
aam
jo
jnp
popa
sbbb
pop
sarl
mov
xchg
popa
movsb
dec
imul
fstpt
dec
fnstenv
xchg
mov
lock
sub
mov
test
push
jle
imul
bndstx
sahf
repz
out
dec
pop
ficompl
sbb
dec
adc
jo
leave
fwait
movsb
jg
rclb
push
adc
je
rcr
aad
and
sub
lahf
xor
pusha
rcrl
out
shlb
loop
mov
push
push
xor
mov
push
jmp
mov
sar
shll
add
sbb
dec
jg
sahf
outsl
dec
jne
push
or
nop
cmp
mov
aas
mov
inc
cmc
out
aas
add
sbb
std
add
jmp
push
push
mov
aad
ss
dec
adc
loope
mov
inc
in
or
mov
ret
xorl
inc
aas
lock
fucomip
and
sub
dec
or
add
ret
js
out
aam
clc
inc
add
mov
and
shll
sub
mov
dec
jae
shlb
xlat
dec
mov
push
std
rcrl
lods
inc
mov
dec
jmp
js
test
loopne
push
xor
lds
movsl
jb
test
dec
fs
or
jmp
test
sbb
std
insl
fstl
push
sbb
adc
data16
inc
decl
xchg
cli
jb
inc
insl
sti
fisubs
push
movsb
shrl
and
in
xor
or
pop
ljmp
addb
dec
js
aad
cmp
mov
cmp
lret
adc
loopne
stc
adc
jne
imul
ss
repz
and
cltd
jp
test
sti
pop
test
movsb
in
add
rcl
jae
cmp
rcll
dec
movsl
loopne
push
inc
jne
lods
enter
pusha
push
out
es
sbb
push
inc
test
mov
mov
or
dec
sub
movsb
sub
jle
dec
nop
sub
aas
enter
shl
mov
pop
mov
push
ret
popf
dec
js
sub
dec
xchg
lcall
mov
cmc
loope
inc
je
mov
lock
pop
cmpsb
jg
jp
fwait
push
pop
int3
xchg
pop
int3
lea
pop
push
dec
mov
mov
ret
enter
mov
xchg
out
ret
arpl
movsl
cltd
aas
adc
lds
outsb
cld
push
jmp
arpl
inc
adc
or
jne
mov
push
out
dec
mov
out
loopne
mov
push
xlat
xor
mov
icebp
xchg
mov
mov
xchg
cmp
fcoms
push
adc
xchg
push
sbb
mov
pop
outsl
stc
cltd
cltd
push
ja
shl
xchg
jns
test
ljmp
push
adc
sbb
pop
popa
mov
sbb
stc
insb
insb
in
ja
lret
int
mov
cmp
xchg
pushl
add
mov
adc
mov
jnp
dec
mov
push
and
aam
cmp
sbb
pop
mov
into
js
inc
aam
cmp
cli
imul
pop
xor
dec
and
fcoml
repnz
clc
add
pusha
push
lcall
fs
daa
inc
out
sbb
cmp
push
test
subb
addr16
mov
iret
jmp
mov
or
jnp
bound
icebp
je
push
xchg
add
xchg
out
sahf
or
in
xlat
je
pop
push
out
ret
scas
stos
add
lcall
in
stos
push
xchg
fisubrs
int
xchg
mov
sbb
scas
loope
push
dec
and
test
arpl
dec
gs
and
popa
movlps
lret
insl
ret
pop
push
clc
mov
outsl
mov
push
cmpsb
jmp
out
and
test
xchg
jl
push
scas
popf
movsb
mov
ret
mov
nop
sub
in
push
dec
jl
or
movsb
fistpl
mov
cwtl
dec
sti
dec
aad
adc
push
sub
jbe
jl
sub
stos
pop
lds
push
xor
push
mov
pop
jge
fildll
and
loop
push
test
insl
out
filds
jle
or
add
mov
outsl
and
lret
push
hlt
or
add
rcrb
clc
ret
pop
loop
mull
pushf
mov
push
jle
jmp
lods
mov
add
inc
sbb
notb
xchg
and
rcrl
adc
mov
xlat
cmc
ss
mov
mov
inc
add
fiaddl
dec
xor
push
popa
xchg
test
or
out
les
or
je
aam
iret
gs
xor
repz
lods
jge
orl
testl
jno
cmp
ja
push
and
and
dec
sbb
lret
sbb
cwtl
push
mov
adc
rcrb
out
rcrl
and
jmp
xor
jae
push
and
in
add
sub
pushf
push
cwtl
popa
rcll
push
imul
xchg
insl
scas
and
imul
push
xor
inc
lcall
out
stos
and
inc
and
aas
or
sbb
outsl
scas
out
into
jb
jnp
insb
pop
ss
add
push
xor
aaa
rcrb
lret
ss
mov
sbb
cmp
or
scas
add
out
sbb
jb
in
and
sub
aad
ss
into
lcall
ret
xchg
loope
mov
cmpb
aam
loope
or
xchg
fs
mov
mov
jb
mov
dec
rorb
shlb
nop
aam
mov
push
bound
ja
or
cmp
and
or
and
je
push
ret
jecxz
fsubr
xor
adcl
pop
pop
aad
push
ret
add
test
cltd
jg
movsl
lea
pop
fldt
out
push
pop
test
adc
mov
in
imul
pop
shr
jl
lods
cmpsb
xchg
fstpl
push
psubusb
mov
mov
adc
aad
fisttpl
inc
lret
into
lret
push
lods
or
xchg
sbb
sbb
jge
popf
inc
sbb
cmp
mov
inc
movl
loopne
pop
in
gs
cltd
adc
inc
faddl
sti
push
jle
ja
jmp
adc
call
sub
cmpsb
repnz
add
mov
cmp
mov
rcrl
dec
dec
subl
jno
adc
test
cmp
mov
shll
dec
adc
lcall
icebp
aad
pop
adc
mull
dec
loop
out
int3
jbe
imul
hlt
je
and
and
or
xor
dec
push
push
cwtl
rcrl
repz
jmp
aas
pop
stos
sub
test
divb
cmc
je
leave
cli
cmp
jmp
or
add
nop
xchg
std
enter
stos
xchg
push
jnp
inc
add
xor
bound
subl
pusha
xchg
cmp
sbb
outsb
cmp
pop
int
jle
sbb
lods
cmp
mov
push
adc
xchg
outsb
pop
testl
pop
mov
xchg
test
rcr
push
jno
sahf
xchg
imul
dec
jl
jb
jg
xchg
jnp
stos
test
std
hlt
mov
loopne
addr16
cmpsl
mov
and
int3
stos
add
dec
xchg
inc
sbb
insl
adc
idivb
push
outsl
insl
lea
out
icebp
sub
sbb
mov
jp
or
adc
adc
cmpsl
lods
es
je
mov
js
pop
out
cwtl
mov
mov
clc
out
jbe
pop
xchg
inc
test
or
in
stos
cli
repz
xchg
mov
imul
les
subb
ss
out
lock
mov
out
and
out
add
or
mov
hlt
pop
cmp
aas
movsb
out
push
jns
and
shl
ljmp
xchg
push
es
fcmovnb
mov
out
lcall
movsl
or
mov
in
dec
loop
bound
nop
lahf
sbb
fnstsw
dec
imull
int3
loope
push
cld
iret
mov
cltd
push
dec
out
xchg
sub
out
mov
roll
les
sbb
jo
or
xchg
ss
leave
jl
movsl
xchg
push
pop
inc
out
push
fdivp
ret
pop
mov
pop
popf
or
sub
in
in
outsb
mov
adc
fwait
jne
sti
stos
xor
into
insb
cmp
mov
xorl
sub
adc
clc
fbstp
jno
and
cmp
jnp
int3
pop
jns
push
and
int
cs
jns
les
jmp
mov
sbb
aaa
push
push
outsl
cltd
xchg
xchg
movsb
mov
jne
inc
dec
stos
fsubr
lock
xor
btl
popa
imul
sbb
int
xchg
cmp
test
jne
in
sbb
mov
loop
data16
mov
fidivrl
dec
bound
xchg
notb
hlt
mov
mov
in
mov
inc
sbb
out
mov
flds
mov
sbb
jle
out
ret
addr16
arpl
js
out
sahf
aad
movsl
xor
testb
bound
stos
call
jno
jecxz
lods
sub
sub
insb
popf
test
sbb
fwait
stos
test
call
in
sbbb
sbb
insl
cmpsl
dec
push
loopne
ficoml
add
enter
mov
push
cmp
test
mov
sahf
aad
imul
xchg
or
mov
fwait
and
mov
cmp
int
xchg
lods
outsl
mov
xor
xchg
and
dec
push
inc
out
dec
fwait
test
sbb
jmp
mov
mov
cmc
add
fldcw
popf
outsl
sub
add
fists
cmpsb
aaa
inc
add
jo
fdivrp
mov
xor
in
lret
cs
shrl
jge
daa
test
mov
es
and
fisubl
lods
lds
inc
and
push
aaa
lahf
insl
mov
push
jno
aaa
mov
add
xchg
pop
dec
adc
push
sbb
mov
fcmove
push
jns
call
lret
sti
pop
das
xorb
gs
mov
sbb
nop
xor
shl
popa
es
pop
adc
sub
adc
nop
loop
xchg
or
movsl
arpl
push
je
pop
sbb
jnp
dec
in
xor
push
and
ret
ss
testb
add
sti
inc
sbb
mov
outsl
inc
xor
scas
sbb
and
mov
jp
call
fcmovne
pop
inc
mov
adc
adcl
cmp
mov
daa
sub
push
popf
in
aad
pop
dec
test
push
aaa
inc
repz
cmp
leave
or
xor
lret
aaa
repz
pop
icebp
les
push
push
inc
and
mov
es
imul
push
and
rorb
ret
loop
mov
adc
in
pop
and
hlt
imul
int
out
and
mov
mov
test
cmp
aad
sbb
inc
and
add
cmp
mov
sbb
mov
pop
sti
lods
sbb
cltd
dec
pop
orl
sar
mov
sbbl
cmc
sbb
test
in
out
xor
mov
inc
or
add
inc
adc
popa
jmp
jo
xor
popa
mov
out
cmp
inc
sub
ljmp
pop
inc
jae
mov
push
inc
mov
xor
xor
lcall
adc
push
lods
dec
adc
test
mov
sub
aam
xchg
sub
or
mov
cmc
ja
cmp
cwtl
stos
rorb
push
loop
dec
js
xor
ljmp
cld
cli
sub
xchg
ds
xor
mov
sub
mov
xchg
gs
sub
inc
jle
int
inc
out
and
pop
or
mov
add
dec
xchg
in
mov
cli
inc
adc
lock
xor
pcmpgtw
test
inc
jle
lods
jmp
dec
fs
insb
sbbb
mov
loop
lock
sub
cmp
jecxz
in
scas
push
aam
ret
ljmp
hlt
mov
clc
adc
pop
jle
repz
icebp
adc
mov
pop
mov
fdivs
shll
push
dec
imul
xor
lods
outsb
dec
and
mov
dec
in
stc
xchg
mov
out
jge
push
or
cmp
orb
sahf
insb
loopne
js
xor
imul
movsl
xchg
inc
or
lret
pop
xchg
and
mov
lahf
xlat
mov
jnp
pop
pushf
into
insb
insb
pop
xchg
fistps
jne
dec
lret
mov
testl
flds
xlat
sub
cmp
inc
int3
mov
mov
xchg
into
pop
int
fwait
inc
xchg
and
pop
aas
jb
ja
sar
cmp
xchg
lods
pop
rcll
add
into
mov
dec
sbb
sub
sbb
sub
or
sahf
insb
mov
adc
addr16
negl
insb
movsl
loope
push
xor
fiadds
mov
aaa
lahf
dec
mov
pop
sbb
or
faddp
inc
mov
jno
xor
mov
xor
imul
jp
outsb
or
pop
inc
or
push
cld
outsb
push
cmc
sbb
mov
lcall
shl
hlt
xchg
mov
jns
outsl
jae
adc
imul
inc
lods
or
shr
lock
scas
in
aas
jmp
add
mov
mov
mov
mov
jnp
push
enter
repz
cmpsl
and
xor
loop
jns
ret
mov
scas
dec
stos
orl
mov
sub
pop
add
mov
adc
add
push
in
mov
sub
sbb
out
iret
push
adc
mov
jo
ret
lret
sbb
int
push
popf
cld
jmp
add
enter
lcall
ja
or
and
push
jg
and
out
lcall
pop
test
dec
xchg
jmp
ret
jle
dec
call
xchg
mov
inc
fxch
and
mov
mov
adc
mov
xchg
imul
movsb
or
clc
test
sbb
adc
rolb
in
mov
pop
xchg
xor
or
movb
hlt
jnp
out
fcomi
mov
mov
rcrb
mov
clc
xchg
scas
test
movsl
mov
adc
orl
mov
sti
cli
mov
mov
jmp
sub
loop
test
mov
in
fisttpll
in
fadds
cld
mov
pop
arpl
dec
inc
mov
pop
jno
xor
adc
scas
xchg
mov
dec
in
bound
adc
xchg
decl
clc
icebp
and
sub
stc
cld
js
jae
dec
inc
xor
les
ret
imul
adc
dec
in
push
insb
insb
xchg
mov
add
in
sub
adc
adc
xchg
sub
in
rol
test
in
cli
mov
stos
mov
je
leave
push
push
pop
xchg
cmp
push
stos
mov
add
es
adc
gs
popa
mov
outsb
ret
rorb
add
mov
mov
adc
adc
outsl
fcoml
inc
rcl
popa
fisttps
xlat
push
fstpl
call
imul
xchg
dec
stc
and
dec
shlb
add
adc
adc
dec
push
mov
xchg
loop
mov
loope
and
js
in
or
jne
mov
dec
fadds
fidivs
inc
inc
adc
and
and
les
mov
xchg
lcall
sbb
add
neg
dec
sbb
sub
mov
std
mov
aas
sbb
mov
pop
lret
ret
imul
cmpsl
lret
lahf
xchg
cmp
xor
sbb
adc
outsb
push
lret
jo
xchg
xor
cmp
inc
popf
pop
pop
pop
jle
xorb
cmp
movsb
jecxz
mov
fcmove
int3
mov
mov
stos
add
jae
and
aas
cwtl
push
mov
or
pop
jb
mov
pusha
aas
mov
inc
xor
nop
fcompl
mov
rorl
sbb
jns
xchg
out
enter
je
push
ret
fs
shlb
xor
cmp
fidivl
sahf
pop
jmp
xor
sub
inc
xchg
push
int3
adc
or
cmp
inc
les
jle
or
in
nop
xchg
pop
xchg
cmpl
loop
mov
mov
fstps
call
into
inc
push
ljmp
and
jno
jle
ret
fsubrs
subl
out
pusha
dec
out
adc
out
jp
jmp
pop
push
stos
aaa
arpl
jnp
and
imull
and
gs
cmp
mov
add
ss
sub
pop
or
stos
lret
cmc
xchg
lods
lock
pop
jns
or
std
lods
movsl
fwait
xchg
sti
lret
dec
lds
idivl
mov
xor
bound
xor
sbb
dec
inc
push
repnz
ret
dec
mov
jno
ret
xchg
xchg
jnp
test
mov
sti
fnstsw
gs
stos
mov
out
push
push
adc
pop
inc
cmp
aam
aas
sub
and
scas
xor
das
jae
lods
pop
movsl
imulb
push
sub
mov
xchg
cmp
clc
mov
cmp
push
mov
mov
cmpsb
inc
pop
pop
bound
or
fstl
mov
leave
cwtl
jp
and
mov
nop
or
xchg
test
or
in
insb
lods
xchg
addl
lret
sub
fsubs
mov
js
popf
shl
jl
in
cmp
roll
loopne
cli
adc
cmp
or
inc
in
push
push
outsl
cwtl
int
out
shll
adc
lea
into
out
jecxz
inc
jne
mov
fsubrs
dec
shr
xlat
mov
adc
mov
out
sub
cmp
pushf
adc
xchg
pusha
and
movsb
fcompl
push
xor
mov
inc
ds
call
bound
jmp
xchg
pop
xor
dec
jns
cmp
inc
xor
jnp
add
rorl
xorl
dec
in
or
clc
mov
scas
ljmp
jmp
pop
cmp
mov
push
dec
pop
std
mov
aas
daa
fstl
push
out
fwait
push
push
in
sbbl
lock
or
test
xlat
out
fwait
jmp
push
ror
cmp
jp
and
pop
imul
ret
jbe
into
sbb
les
push
andl
movsl
out
mov
stos
test
insb
add
shrl
pop
push
lods
and
int3
inc
shrl
mov
shll
mov
ss
and
arpl
mov
mov
xor
adc
adc
andl
xor
or
fwait
out
fndisi(8087
dec
fisubl
lds
out
lcall
push
negl
sbb
cli
test
loop
scas
jle
ret
xchg
inc
xchg
adc
fdivr
mov
dec
pushl
mov
inc
adc
or
push
gs
mov
cs
xlat
mov
inc
dec
and
xchg
mov
jl
and
add
enter
jmp
sub
out
jmp
jmp
and
insb
xor
xchg
in
loop
jne
jge
or
stos
or
in
and
mov
inc
inc
std
lea
daa
nop
push
sbb
mov
jg
sub
mov
es
std
xor
or
inc
fstl
or
push
cli
jmp
inc
add
mov
rolb
enter
data16
stc
pushf
repnz
pop
push
add
call
outsl
clc
jge
pop
cmc
xor
xchg
pop
and
call
adc
in
push
jle
jnp
jge
shl
addl
pop
and
pushf
jnp
cmpsl
movsb
jecxz
pop
xchg
les
lds
fs
sbb
xchg
jecxz
pop
and
fistpll
test
outsl
in
mov
dec
adcl
hlt
mov
inc
adc
sar
xlat
xor
movntps
insl
and
jnp
pop
adcb
clc
cmpsb
shlb
pusha
fsubrl
jb
in
and
mov
add
ret
push
lods
mull
in
into
loop
mov
rorb
rol
shll
popf
adc
clc
lret
mov
cli
cmp
lea
cmp
push
mov
in
dec
pop
mov
mov
leave
js
mov
pop
out
sbb
mov
push
mov
jmp
pop
scas
jmp
popl
inc
pop
fstpl
and
ficoms
jns
sbb
mov
dec
adc
cmp
insl
imul
shlb
or
cwtl
xlat
mov
mov
add
insl
roll
push
in
or
cmp
push
adc
icebp
movsl
push
mov
in
sbb
jecxz
pop
mov
arpl
add
xchg
ficoml
stc
adc
cmp
rolb
and
insl
push
sbb
inc
dec
mov
in
ds
cwtl
icebp
push
insl
pop
dec
es
dec
fdivs
cli
jl
adcl
mov
lcall
shl
dec
fldenv
cmp
and
testb
negb
jne
fmuls
jg
stos
xchg
sti
incb
adc
ja
push
rol
daa
cld
popf
pop
mov
and
bound
aam
std
cmp
imul
lea
aaa
aas
xor
int3
mov
pop
lret
sub
sub
jecxz
pop
add
es
mov
cld
and
aas
sub
jns
gs
sub
adc
inc
sbb
sarb
fdiv
sbb
movsb
or
jg
cmp
mov
push
xchg
sbb
out
loop
inc
push
test
mov
sbb
insl
pushf
shlb
adc
or
repz
testb
push
cmp
lea
and
add
mov
inc
mov
cmc
es
cmp
mov
mov
cmc
mov
into
push
pop
ret
stos
fs
xchg
scas
insl
fisubl
adc
aas
and
fwait
js
jo
in
or
ret
cli
adc
adc
data16
mov
sahf
in
add
cmp
hlt
bswap
sbb
cmpsb
lea
fimull
or
jb
dec
push
sub
adc
dec
pop
in
imul
mov
fiaddl
les
js
cmp
add
pop
notb
dec
lods
pop
arpl
in
and
enter
rolb
fcomip
cmpl
sub
or
pop
loop
cmp
jp
fdivrl
dec
gs
add
mov
mov
mov
pop
into
cmpsl
aas
jle
or
jp
test
mov
push
lret
push
adc
hlt
faddp
loopne
xchg
xchg
fsubr
and
inc
push
aad
push
addr16
xlat
loopne
rcl
in
jecxz
in
ds
push
pop
or
aad
ja
mov
mov
mov
add
mov
arpl
cwtl
xchg
sbb
add
mov
mov
cltd
push
cmp
fisubrl
push
dec
and
outsl
stos
xor
or
pop
sub
pop
inc
jb
cld
jne
push
mov
mov
xor
adc
inc
lea
sahf
mov
jmp
int3
adc
lcall
and
test
jmp
adc
mov
stc
sub
lods
test
cmpsb
mov
or
mov
mov
scas
inc
mov
and
mov
aad
mov
xchg
add
rclb
cmp
sbb
cmp
jb
mov
mov
lcall
loope
push
dec
mov
sbb
daa
cld
push
mov
inc
push
inc
fildll
pusha
subl
mov
cltd
sub
nop
sti
cmpsb
xor
add
push
and
roll
ljmp
push
push
bnd
push
mov
dec
aas
jae
adc
lcall
mov
mov
push
leave
adc
test
cmp
test
jmp
ds
sarl
lahf
cmp
sbb
in
rol
mov
jae
cmc
notl
dec
stos
sbb
jmp
idivb
bound
fs
std
out
popa
add
repz
push
fisubrs
aad
adc
jl
and
sub
xor
xchg
stos
mov
das
lret
test
faddl
push
call
and
add
and
mov
stos
dec
daa
mov
stc
mov
popf
adc
sbb
int3
fwait
push
sbb
dec
push
mov
xor
sbb
mov
scas
cmp
mov
xrstors
adc
dec
xor
aad
mov
dec
push
jle
xlat
sub
lea
es
jnp
mov
mov
es
push
int
mov
jmp
lahf
mov
and
int
inc
or
sbb
std
cltd
loopne
jp
xchg
sbb
cmpsl
pop
mov
andb
adc
xchg
pop
cmp
arpl
push
outsl
sub
in
and
dec
pop
pop
jae
dec
shll
mov
sub
mov
aaa
not
inc
sbb
out
push
xchg
mov
lods
jo
xor
mov
jae
imul
cmp
pop
ds
lcall
fimuls
das
stos
and
inc
subl
arpl
shll
clc
pop
test
lahf
lcall
and
ud1
push
add
rorl
or
mov
jns
arpl
xor
xchg
or
and
popf
cwtl
lcall
and
xlat
jge
loopne
dec
or
test
stc
ss
shl
rcll
mov
add
jl
xchg
pushf
arpl
test
iret
mov
xor
and
imul
mov
or
mov
les
loop
dec
xor
or
div
pop
loop
repnz
sbb
lods
pop
loop
mov
into
mov
jl
int3
hlt
add
out
mov
or
cmpsl
jne
jns
cwtl
adc
dec
push
test
push
mov
mov
mov
jns
xchg
xor
jne
xchg
roll
mov
or
mov
adc
inc
xchg
mov
out
dec
or
dec
addl
ja
mov
iret
xor
or
inc
rcrb
cmp
movsb
insb
mov
popa
push
fsubs
mov
fs
roll
and
adc
push
jne
in
lods
lcall
or
ret
stc
jmp
add
cmp
dec
icebp
leave
aam
les
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
