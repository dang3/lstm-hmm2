push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
xor
jmp
push
push
push
push
call
mov
push
push
push
push
mov
push
call
push
push
push
mov
push
call
push
push
mov
push
call
push
push
push
mov
push
call
push
push
mov
push
call
mov
push
call
mov
xor
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
mov
cltd
and
add
sar
mov
mov
imul
cltd
and
add
sar
mov
mov
cltd
and
add
sar
mov
mov
imul
cltd
and
add
sar
mov
lea
push
mov
push
mov
push
call
lea
push
mov
push
call
xor
jmp
mov
push
call
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
push
lea
push
call
movl
movl
movl
movl
movl
movl
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
lea
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
lea
push
call
call
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
push
call
xor
jmp
push
push
call
push
push
call
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
jmp
mov
pop
ret
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
add
add
fs
lods
outsb
arpl
gs
lods
jb
add
push
jns
xchg
add
push
jns
push
add
andl
arpl
outsb
pop
insl
gs
mov
outsl
gs
xor
imul
jno
jb
arpl
add
add
data16
add
imul
inc
imul
outsl
jns
mov
data16
fldenv
insb
fisttpl
outsb
mov
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
insb
arpl
gs
dec
jo
add
popa
fs
bound
jo
inc
add
inc
add
adc
outsb
xor
call
add
add
jno
arpl
cs
jae
jne
add
jo
arpl
jne
fs
add
arpl
jp
add
bound
insl
outsl
arpl
push
je
bound
insl
outsl
arpl
imul
push
imul
push
insl
add
jb
dec
bound
insb
je
pop
jne
add
gs
jo
insl
insb
outsl
sbb
gs
and
xor
gs
insb
mov
fs
in
push
gs
outsb
dec
fbstp
add
movsl
pop
nop
mov
in
add
mov
xor
add
sub
add
call
add
mov
call
add
mov
call
add
mov
call
mov
push
add
imull
sub
push
outsb
sub
and
or
sbb
insl
outsb
fisubs
fs
or
mov
mov
add
mov
dec
jmp
add
add
add
das
jmp
dec
mov
add
mov
add
adc
add
adc
add
add
add
add
add
jae
add
add
mov
add
add
scas
add
adc
add
adc
add
fnstcw
add
jmp
out
add
and
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
mov
add
jmp
mov
add
cmp
add
insl
mov
add
jmp
xchg
add
add
add
addr16
add
add
mov
js
add
add
cld
add
push
adc
add
add
daa
jmp
add
add
add
add
add
add
std
lcall
outsl
fs
jae
add
add
add
add
adc
add
std
call
out
add
xlat
add
add
add
add
add
add
push
popa
je
std
decl
and
add
stc
add
mov
call
add
mov
jmp
add
mov
call
mov
aad
inc
mov
std
div
jne
addb
mov
call
push
mov
inc
sub
jle
sti
jb
stos
testl
xor
lahf
push
or
stos
add
imul
add
add
sub
ret
cmc
pop
popl
jno
inc
mov
add
mov
imul
stc
jno,pt
negb
add
mov
jge
inc
jmp
idivl
add
add
mov
mov
mov
mov
negb
insb
shl
mov
push
rorb
in
add
clc
adc
scas
inc
jmp
testb
xchg
add
imul
add
push
or
mov
mov
jne
nop
outsl
or
or
xchg
push
or
jmp
into
stc
lcall
mov
mov
insb
push
ret
ret
mov
leave
stos
ret
bound
add
sub
stc
jb
hlt
cmp
hlt
jne
add
jns
cmpsb
rorl
rclb
ret
mov
adc
ljmp
in
jne
adc
test
jne
mov
cmp
arpl
mov
or
sub
or
sub
sahf
mov
in
subl
inc
add
cmpb
fs
xorl
rcrb
or
add
mov
pop
pop
ret
insb
arpl
lcall
push
fisttps
push
ljmp
adc
jle
aaa
in
rclb
rorl
jbe
mov
mov
mov
call
outsb
les
ljmp
mov
push
clc
imul
inc
add
add
inc
jg
push
mov
push
mov
push
and
call
inc
push
lock
xchg
in
ret
pop
add
in
push
callw
mov
mov
sbb
out
mov
jns
repnz
cmpsb
mov
mov
sub
pop
mov
repnz
add
jle
jmp
insb
test
jmp
push
lea
jmp
add
xchg
add
call
pop
mov
movsl
hlt
repnz
sub
mov
popf
sti
inc
mov
icebp
inc
add
add
js
jmp
add
pop
in
lods
in
sti
jge
clc
sbb
mov
decb
jge
add
jmp
cltd
lock
jne
std
pop
mov
loope
adc
aam
icebp
jne
insb
ja
adc
leave
sub
push
bound
add
std
add
fwait
ret
cmpl
incl
sub
ret
push
mov
jmp
jne
push
les
jmp
mov
push
add
call
decl
push
enter
outsb
in
andl
pushl
dec
add
xchg
icebp
push
call
in
out
cmp
decl
xchg
js
mov
icebp
bswap
in
pop
sub
into
or
inc
insl
in
andl
add
and
out
test
decl
push
js
pavgb
xchg
into
add
add
lods
ret
push
mov
xchg
mov
imul
call
inc
icebp
stc
bound
cmp
fistpll
sub
mov
jge
xor
fidivl
xchg
xor
fneni(8087
mov
idiv
mov
call
add
xchg
out
add
jmp
fistl
push
lock
jl
add
sub
jl
mov
adc
pushl
lock
psubusw
or
insb
or
mov
mov
sub
mov
je
lods
mov
mov
loopne
and
leave
out
cmp
in
jmp
pop
mov
add
ret
add
shr
add
gs
adc
jns
fstps
out
jns
es
jbe
jmp
sti
xor
fs
push
push
roll
imul
jns
out
mov
add
add
jl
jl
jno
out
cmp
je
shrl
call
hlt
lods
je
adc
cmp
fsubs
stos
add
mov
inc
std
out
movsb
in
jmp
ljmp
mov
ret
std
outsb
mov
adc
out
fsubrl
jne
pusha
ja
inc
out
fwait
mov
ret
push
mov
imul
add
mov
add
jmp
das
push
push
push
fdivl
add
jne
ljmp
push
or
clc
push
rolb
push
push
imul
fidivs
lcall
cld
jmp
test
mov
lods
stc
mov
push
pushl
enter
fmulp
ret
push
mov
jge
cmpsl
je
andl
jne
adc
decl
leave
xchg
add
push
fsub
pushl
fnsave
add
cmpb
fidivl
cmp
hlt
in
jne
jmp
or
insl
sti
out
fucomi
push
xchg
ljmp
filds
les
roll
mov
or
jne
fwait
jbe
inc
in
inc
mov
or
adc
xor
in
jne
imul
pushf
in
call
jmp
dec
jbe
pushaw
in
pushl
rorl
js
popa
mov
out
xor
out
mov
roll
ljmp
xor
in
mov
adc
and
pop
mov
ljmp
add
js
adc
jmp
stc
shlb
ljmp
jae
lds
mov
jecxz
shr
inc
add
js
call
pop
add
sti
mov
ljmp
gs
jmp
je
fcmovne
in
dec
jmp
inc
inc
mov
inc
fldl
push
cmc
movsb
pop
add
jmp
xchg
ljmp
mov
ljmp
and
inc
icebp
adc
cld
rol
mov
je
add
jae
cmp
add
jo
cmc
cmp
fdivs
sbb
loope
mov
scas
stc
xchg
lea
cld
movsl
loope
jg
jmp
push
bound
les
aas
hlt
jmp
in
dec
out
stc
out
pop
aad
add
les
mov
call
into
inc
clc
sbbl
jb
jg
clc
add
fdivl
iret
mov
add
call
jne
daa
inc
add
push
call
not
pop
sub
call
ljmp
sti
lcall
pop
ror
add
jmp
add
add
inc
cld
jmp
loop
add
xchg
add
inc
out
pushl
int3
sar
mov
dec
add
add
out
mov
pop
push
flds
add
adc
sub
xor
add
movsl
jl
cmp
push
call
fiaddl
test
jno
decl
call
jne
shll
mov
into
call
clc
outsb
ret
mov
xchg
sbb
mov
xorb
add
fmuls
mov
ret
int3
sti
add
jns
icebp
fistpl
ret
sub
jmp
fstpt
ljmp
lret
in
fimull
add
cld
jno
insb
xchg
icebp
push
outsb
adc
sti
fnstsw
cld
call
fsubl
add
add
in
rol
add
addb
jecxz
add
xchg
jmp
fsubl
sahf
jno
out
lock
repnz
mov
jp
add
jmp
xchg
xor
add
aam
ficoms
loope
add
test
out
icebp
jne
cld
ss
cli
xlat
cs
in
lcall
out
xor
insb
clc
push
scas
fcos
jl
fsubp
std
sbb
and
add
insb
in
add
imul
call
imul
or
inc
push
ret
cld
lcall
inc
aad
sub
in
icebp
mov
mov
jmp
mov
int
inc
popl
addb
add
xlat
lds
int
add
ret
push
mov
xor
mov
mov
loopne
push
cmpsb
lds
sub
aam
add
lea
leave
ret
push
mov
ss
mov
in
sti
mov
filds
repz
pop
leave
aad
call
push
push
insb
push
or
pop
sub
sub
imul
add
cmpsb
int3
cmpsl
jne
xchg
ds
leave
adc
lret
push
xor
mov
jne
xchg
xchg
call
adc
add
mov
inc
ret
pop
addr16
fwait
js
lret
mov
pusha
add
ss
in
sbbl
out
fidivrl
mov
fisubrs
mov
mov
add
jg
adc
outsb
aad
and
cld
fldl
push
xor
push
dec
push
shrl
pop
xor
jnp
ret
pop
inc
add
sub
add
es
sti
jmp
jb
scas
fisubrs
out
in
lods
sti
in
lods
shrb
jno
jno
mov
mov
push
adc
imulb
xchg
jle
inc
js
in
push
loope
mov
jmp
sub
sub
xor
ds
loopne
jns
in
add
inc
inc
xchg
mov
dec
lock
mov
sbb
cmc
je
loopne
loop
cmp
fxch
popf
ret
test
mov
fldcw
xchg
popf
loop
sub
loop
jge
lret
jmp
fdivrl
pop
pop
insb
hlt
push
aam
call
cmp
dec
imul
mov
pop
jne
ss
loop
sub
mov
inc
lret
jmp
xchg
leave
je
pop
sbb
lcall
sbb
jne
fsubrl
je
sar
push
call
into
jbe
out
mov
cmc
adc
push
or
decl
jg
jne
dec
cmp
pushl
in
and
jne
aas
mov
jne
jb
ret
pop
sahf
or
add
nop
in
andl
or
add
movl
or
cmpl
jne
lea
add
lock
and
add
add
or
pop
dec
cld
push
mov
xor
jmp
cmc
ljmp
add
inc
hlt
push
cmc
add
sub
loopne
lcall
or
adc
test
ljmp
jmp
test
jmp
fildl
inc
inc
std
push
inc
clc
cmp
add
das
push
adc
jge
call
mov
pop
or
sub
adc
sub
inc
stos
jecxz
je
out
push
clc
inc
add
loopne
fst
jbe
add
mov
or
push
mov
inc
cld
add
stc
sub
push
aad
sub
movsl
push
mov
and
lds
cmp
xor
outsb
push
leave
sub
insl
mov
push
stc
loopne
or
xor
add
inc
mov
in
or
add
sbbb
sub
add
repnz
testb
push
fisubrl
inc
inc
or
or
adc
repnz
sbb
shr
iret
push
and
jb
test
stos
stc
jecxz
jle
ds
stos
scas
add
outsb
xor
out
addb
inc
add
or
inc
cmc
inc
sub
pusha
push
or
movsl
enter
mov
popa
xor
xor
into
icebp
add
call
ljmp
push
call
insb
ret
pop
leave
and
out
push
addl
inc
or
sub
and
or
lret
inc
xchg
xchg
inc
cmpsl
mov
enter
fdivr
mov
add
add
push
call
in
cwtl
pushl
adc
pop
sahf
add
decl
or
add
lock
call
lods
mov
add
pop
out
cmp
ss
push
adc
stc
popa
dec
cld
cmp
ljmp
push
mov
add
jne
xor
stos
add
inc
mov
lods
push
cld
add
mov
add
push
int
inc
mov
dec
inc
or
xchg
inc
add
ljmp
xor
sub
dec
adc
jmp
mov
pop
add
lds
cmp
lret
jb
sbb
ret
mov
sbb
jb
mov
sub
xorl
cmp
idivl
inc
add
add
push
add
mov
or
lock
jmp
inc
sub
cmp
lods
leave
jmp
add
add
push
sub
vpmaddwd
ds
push
mov
jmp
sarl
out
mov
push
add
fs
call
mov
rclb
rcrb
sub
add
adc
std
add
adc
add
ret
add
mov
je
xchg
xor
mov
pusha
jg
pop
sbb
push
cld
mov
jge
add
jge
or
pmaxub
sbb
inc
jge
add
stos
mov
mov
adc
pop
test
test
sarl
mov
add
add
mov
or
lea
inc
jae
push
addr16
daa
decb
push
insb
add
insb
add
xor
mov
out
or
jae
mov
imul
out
add
or
decl
repnz
jae
in
push
xchg
add
movb
les
ljmp
mov
mov
add
and
call
inc
or
loop
pop
leave
movsl
or
push
mov
cmpsb
or
cmp
add
pushf
jmp
pop
sub
add
mov
add
sub
ljmp
out
add
ljmp
xchg
sub
ljmp
jg
jmp
mov
out
sub
ljmp
sub
sub
fdivs
cmpsb
mov
add
mov
pop
jmp
cmpsb
outsb
add
dec
jle
jmp
and
dec
fnstenv
ds
xor
or
jmp
mov
add
or
pop
fs
inc
int
fadds
add
add
mov
xlat
neg
mov
imul
mov
fld
fmul
xor
out
fmuls
xlat
je
mov
rorl
pop
fs
mov
sub
add
push
roll
jmp
add
jge
test
add
jb
test
mov
data16
or
jge
jmp
insb
sbb
jge
push
not
push
xchg
movsl
sub
out
loopne
jmp
add
divb
add
jmp
push
jne
jmp
shl
inc
repnz
mov
cltd
inc
stos
int
scas
aaa
jl
xchg
jno
push
adc
sub
jo
loopne
imul
add
add
or
je
cmpb
imul
cld
out
lock
push
call
push
mov
push
shlb
out
loopne
call
pop
mov
call
mov
jmp
call
jmp
mov
push
cli
les
xlat
inc
push
lea
lods
out
pushl
pushl
add
hlt
jmp
repnz
lods
pushl
addl
call
aad
popa
fs
cld
sarw
adc
out
inc
inc
xor
cmp
add
dec
out
sub
inc
sub
lea
out
adc
aad
push
add
ret
js
rorl
call
add
in
out
shll
aad
arpl
mov
ljmp
xchg
push
rolb
add
ret
or
jno
xchg
in
aad
shll
stos
sub
add
popf
jle
in
aad
outsb
movsl
add
xchg
aam
xor
mov
inc
aam
ja
add
jle
pop
mov
jae
inc
aad
jmp
jo
add
in
aad
mov
in
aam
push
icebp
roll
mov
jmp
roll
inc
add
jmp
mov
jmp
mov
fiadds
mov
call
cmpsb
inc
shr
sahf
jb
pop
xchg
call
incl
xchg
xor
jle
mov
or
push
adc
jb
or
inc
add
shlb
cmp
jo
mov
test
enter
sub
adc
dec
cmp
add
or
jge
shll
adc
cmpl
mov
out
cmpsb
ja
add
mov
sub
cmpsl
mov
mov
mov
inc
xchg
cmp
loop
add
cmpsl
ljmp
mov
std
je
cmp
cld
call
fmull
pop
push
mov
cmp
jmp
pop
mov
jg
idiv
js
jne
movb
daa
lcall
sbb
add
ljmp
jne
mov
ret
xlat
std
cmp
aaa
xorps
and
rorl
add
repz
add
mov
les
out
inc
mov
fstpt
call
lds
add
mov
cmp
mov
scas
push
mov
jle
loopne
mov
mov
pop
cld
xor
stos
add
outsb
inc
shl
sub
lock
or
outsb
iret
pushl
fcomi
add
pop
sar
jae
shlb
xlat
push
cld
out
or
mov
fnstcw
rcl
lret
pop
mov
sub
shrb
pop
lods
jl
pop
pushf
sbb
add
fsts
xlat
cmpsb
inc
jmp
loopne
xor
subb
rcr
jmp
stc
call
jge
jno
push
add
shlb
rcrl
jno
mov
xchg
ljmp
mov
xor
add
pop
add
add
add
mov
ret
or
lock
clc
stc
or
mov
add
jmp
stos
mov
idivb
cmpl
call
add
add
lds
jne
lret
sub
aaa
push
mov
mov
loop
inc
push
ljmp
xchg
leave
mov
push
or
std
ljmp
add
add
int
cmc
in
mov
or
sarb
jne
dec
ret
pop
sbbl
push
push
dec
stc
call
repz
mov
push
cmp
pop
sub
nop
adc
ds
movsb
icebp
cs
lret
adcl
jl
cmp
push
xchg
inc
cmp
push
jl
rcrl
nop
jg
out
inc
nop
adc
inc
cmp
push
jl
adc
nop
jg
out
inc
add
inc
rol
loopne
sarl
mov
nop
xor
sbb
mov
loop
ss
lret
or
push
push
adc
inc
or
call
xor
xchg
or
lcall
jecxz
rcll
jae
dec
pop
lds
pop
faddl
add
nop
xor
out
mov
mov
in
inc
sub
push
in
addb
pop
add
cltd
add
jmp
sbb
inc
xor
mov
xchg
add
into
mov
sbb
pop
mov
push
add
add
sarl
je
call
sar
jmp
shrl
push
call
ret
loop
mov
add
pop
mov
mov
jmp
int
xor
jle
shlb
add
push
inc
cmp
push
stc
jno
in
pop
inc
sbb
into
sbb
add
sti
lret
jne
int
and
or
jmp
add
pop
inc
sar
push
repz
ds
jmp
out
cli
push
add
push
add
push
add
add
test
jb
call
pusha
clc
leave
inc
xor
jb
or
add
lret
xchg
lret
jmp
lret
jne
test
jmp
push
int3
mov
jnp
call
roll
or
call
add
call
add
inc
mov
or
out
add
jmp
mov
cmpsl
int
fcmovbe
ljmp
cld
dec
test
cltd
mov
push
add
add
add
decb
shrb
cmp
xchg
decl
adc
addr16
inc
cld
mov
mov
test
pushl
mov
rclb
test
cmpsb
mov
xor
sti
dec
es
sar
adc
sti
xchg
loopne
test
and
decl
repnz
add
xor
pop
out
lret
sbb
rorl
jmp
sbb
add
inc
hlt
push
mov
les
mov
push
hlt
xchg
leave
mov
mov
or
jne
addl
push
adcb
ljmp
rorl
adc
add
add
in
lret
add
mov
leave
mov
lret
sub
test
adc
fmulp
xor
add
call
or
inc
imul
xor
repz
sahf
adcl
inc
mov
cmp
mov
test
dec
enter
sbbl
enter
addl
or
lret
scas
decb
jmp
sbb
mov
push
xor
add
pop
inc
jmp
rorl
lock
push
mov
pushf
mov
ret
or
mov
add
jmp
enter
add
hlt
inc
sbb
stos
xchg
movsb
mov
insb
add
int
inc
loop
call
pop
sbb
jp
je
jle
in
mov
leave
popl
stos
movsl
pushl
dec
inc
in
aam
or
dec
int3
movb
jmp
cmpsb
pop
pop
mov
add
add
in
add
mov
add
jne
mov
add
cmpsl
add
aas
hlt
add
jne
stos
mov
add
ret
pop
mov
mov
js
add
or
call
xor
push
outsl
mov
ret
push
mov
cld
mov
jge
mov
cwtl
sub
jl
add
jne
add
add
mov
rcrb
movsb
fcomp
lock
or
stos
adc
adc
lock
sti
mov
fsubs
add
insb
push
push
out
jne
addb
mov
fdivr
mov
cmpsl
enter
mov
roll
jnp
cmp
jmp
inc
or
arpl
adc
add
add
mov
and
inc
inc
icebp
add
out
cmp
xorl
lret
jmp
add
lds
mov
es
mov
cmp
jl
mov
mov
and
cs
scas
les
dec
icebp
js
rcrl
add
add
into
rorb
idivb
jb
cmp
sub
sbb
jbe
jge
out
adc
lds
jb
stc
mov
inc
ja
mov
pop
jbe
out
test
shrb
inc
bound
adc
or
adc
insb
mov
push
jle
flds
xchg
stc
rol
mov
enter
enter
cmpsb
jo
mov
dec
icebp
cld
rcll
pop
js
mov
xorb
add
and
jle
add
pop
dec
stc
xor
sti
xor
test
clc
int
cmc
fs
add
fdivrl
xor
lret
sub
inc
inc
add
add
mov
icebp
cli
lea
add
rol
adc
mov
add
and
hlt
mov
pushf
mov
add
add
dec
stc
xor
dec
test
scas
push
subb
and
testb
sub
xor
mov
and
dec
mov
faddl
rolb
idiv
popf
sahf
idiv
cmp
add
rol
scas
xlat
int
inc
xchg
lea
adc
ficompl
push
mov
int
out
int
xchg
test
notb
xchg
xlat
dec
xor
pop
or
std
dec
mov
xor
pop
cwtl
pop
sub
test
xor
mov
cli
inc
add
cmp
push
dec
adc
jg
ljmp
mov
in
jne
pop
adc
cmpsl
rolb
mov
xchg
out
cmc
nop
add
or
jmp
mov
les
in
mov
insb
xchg
leave
inc
lcall
ret
lock
out
mov
pop
in
div
mov
pop
jmp
decl
ljmp
mov
fisubrs
ja
add
pop
shrl
add
jb
hlt
cli
or
clc
fs
or
mov
add
add
les
mov
mov
adc
mov
ret
or
insl
mov
mov
add
cmpsl
mov
sub
push
add
xor
xor
popf
pop
xor
out
lahf
adc
sub
add
bound
hlt
clc
insb
ss
and
loop
cmpsl
fld
rolb
add
mov
mov
mov
lea
sbb
pop
enter
ffreep
ret
rorl
sti
test
mov
push
dec
or
les
add
cmpsb
divl
sub
push
pop
inc
push
and
rcll
fstps
xor
mov
pop
add
imul
mull
jle
cli
lea
fwait
sbb
mov
out
ret
ret
rorb
and
fstpt
add
add
fucompp
rorl
loop
cli
in
mov
xchg
pushf
mov
stos
pop
xor
sbb
xor
mov
inc
cmp
inc
lret
add
imul
cmp
dec
mov
stos
rorl
and
nop
paddusb
mov
sar
add
xor
icebp
nop
pushf
rcr
sti
in
add
pop
cmpsb
shrb
mov
mov
out
inc
aam
inc
add
push
sub
mov
icebp
fcomip
test
int
dec
mov
or
shll
mov
pop
and
jnp
jo
aaa
and
stc
add
nop
sub
ljmp
fisubl
in
mov
mov
cwtl
cwtl
add
js
daa
ret
ret
mov
mov
pop
enter
pop
add
sub
or
cmp
adc
mov
xor
jmp
ret
xchg
clc
je
pop
sbb
cld
inc
add
ret
idivb
mov
pop
lock
aad
ljmp
ret
jb
lock
ficoml
lcall
cld
pop
add
das
mov
jl
mov
rcll
testl
pop
gs
sub
add
or
ret
loopne
fnstcw
push
jns
sti
in
lea
add
shl
add
fdivrs
cwtl
mov
or
push
xchg
mov
rol
fs
mov
xor
cli
xor
mov
fs
cmp
push
push
add
clc
jge
mov
mov
lea
cmp
adc
ret
adc
mov
int
or
lods
inc
mov
cmpsl
inc
xor
call
mov
clc
mov
lock
xor
xchg
mov
ret
sarl
int
psubd
rorb
out
andl
mov
divl
cmp
shl
sub
add
call
cmpsl
fdivrl
in
cs
xor
cmp
ljmp
mov
inc
div
add
pop
adc
mov
in
cld
push
ljmp
in
adc
in
add
mov
ret
mov
mov
shl
xchg
adc
dec
mov
pminsw
sub
mov
mov
add
in
mov
inc
scas
ret
mov
mov
or
mov
icebp
and
les
ljmp
xor
mov
or
sub
xchg
shrl
add
push
add
decl
enter
add
xchg
shrl
add
lds
adc
icebp
mov
add
mov
mov
aaa
cli
or
adc
lret
mov
mov
movl
daa
add
jne
mov
pop
mov
add
pop
loope
add
sahf
es
test
mov
add
add
fsubrl
movl
cwtl
mov
lock
mov
pop
add
push
aas
ja
inc
xchg
push
call
sbb
inc
call
adc
testl
jle
inc
fdiv
pop
add
pop
inc
add
mov
addl
inc
add
sub
aaa
add
lods
or
inc
mov
inc
mov
mov
aas
mov
sbbb
inc
js
xor
or
mov
add
xlat
lret
je
test
adc
xchg
nop
add
mov
test
adc
xor
test
enter
leave
sbb
mov
add
add
add
and
add
fiaddl
mov
rorl
hlt
popa
xor
adc
sbb
add
cltd
and
inc
xchg
out
inc
pop
nop
push
xor
mov
andl
enter
add
inc
jmp
ret
and
add
add
inc
push
flds
mov
mov
mov
sub
inc
add
insb
add
fcmovb
xchg
add
add
stos
push
mov
inc
sub
pop
mov
jnp
mov
divl
sbb
sbb
cld
inc
out
je
test
test
bound
jb
adc
push
adc
inc
or
inc
add
mov
in
inc
ds
jo
mov
cmpsl
mov
bound
ret
in
flds
mov
mov
mov
mov
xor
mov
fs
add
fsubrs
xor
aas
mov
push
jae
mov
mov
fadds
push
jecxz
mov
pop
jbe
push
jnp
inc
cld
mov
and
fadd
add
xor
out
inc
clc
loop
mov
cld
sbb
testl
movsb
rol
movsb
xlat
inc
jne
cmp
ljmp
mov
mov
mov
jmp
aad
inc
lret
pop
test
xor
cld
add
adc
sar
add
jg
roll
ret
clc
push
inc
mov
imul
inc
mov
popf
ja
jg
mov
test
add
std
lea
call
cmp
add
or
scas
ret
jne
lock
cltd
mov
sub
cs
test
mov
jns
ret
add
ja
in
or
sbb
je
out
sbb
fsubrs
cmp
cmpsb
or
daa
flds
inc
fwait
outsb
mov
mov
jb
scas
jnp
sub
pop
xchg
jmp
call
adc
lret
std
cmp
icebp
add
adc
aam
push
cmp
cltd
jge
add
aaa
jmp
lret
lods
push
sbb
pop
pop
mov
cmp
adc
mov
push
shll
jmp
lock
mov
mov
jne
aad
add
mov
std
pushl
std
mov
add
mov
fnstenv
icebp
and
xchg
xlat
roll
add
int
jne
push
add
jmp
add
js
ret
push
mov
insb
mov
add
mov
test
jns
mov
add
test
jmp
add
adc
pushl
addl
jmp
push
push
lods
add
push
verw
iret
sub
add
lods
mov
jmp
sbb
add
add
ret
push
mov
int
push
jno
or
scas
mov
ljmp
lods
out
mov
fdivs
add
lcall
movb
mov
cwtl
xchg
or
jge
stos
loopne
push
lcall
int3
push
add
mov
out
ja
or
or
shll
cmp
movsl
xchg
mov
jl
test
adc
or
add
or
push
sub
rorb
jae
fwait
sbb
aas
mov
insb
sub
out
xor
call
mov
adc
sub
jmp
sti
test
inc
fstps
add
scas
pop
cld
cltd
lcallw
sub
mov
jp
add
inc
add
jl
add
scas
cmpsb
push
inc
xor
scas
mov
xor
jp
push
into
add
add
in
cmc
xor
jnp
dec
mov
jp
andb
mov
cltd
sbb
loope
es
fiaddl
add
mov
lds
je
test
inc
adc
pop
push
or
cmp
cld
in
xchg
decb
jge
cmpb
ss
sbb
add
ljmp
mov
cmp
hlt
sbb
sbb
fisubs
lods
pushl
lods
lea
push
call
pop
push
adc
cld
dec
lods
jne
and
push
xchg
out
inc
repnz
mov
jle
add
cmp
jbe
lea
xlat
add
jne
mov
fcomps
rclb
jne
mov
push
xchg
sub
push
or
xchg
add
jne
pop
jne
cwtl
dec
or
mov
add
int3
inc
add
xchg
jno
inc
aad
add
shlb
push
add
stos
xor
push
inc
lods
mov
ljmp
jae
add
lods
rol
cwtl
add
or
inc
out
lds
pushf
dec
pop
data16
inc
mov
in
add
pop
js
push
or
inc
mov
cwtl
add
jmp
push
adc
mov
popa
xchg
adc
mov
in
add
or
jmp
clc
rcl
movsb
jp
push
fwait
push
call
xchg
pop
inc
mov
sub
and
xchg
xor
ja
arpl
mov
stos
aam
icebp
xor
lods
jae
inc
movsb
jecxz
inc
lods
push
mov
xchg
stos
ss
or
sub
shll
mov
movhps
add
dec
mov
push
xor
stos
pop
mov
dec
icebp
stos
jmp
sarl
into
incl
and
xor
push
cmp
adc
jmp
xchg
mov
lods
adc
add
fwait
mov
inc
xor
mov
stos
mov
push
in
call
jo
inc
sub
test
aam
lds
add
pushl
call
das
mov
call
push
push
ret
icebp
push
mov
mov
cltd
mov
add
jmp
mov
add
push
sahf
out
gs
pop
jle
push
add
das
and
jne
xchg
inc
pop
ret
add
fnstcw
inc
mov
sarb
add
or
popl
ret
inc
aam
sti
fadds
pushl
les
cmpsl
push
add
or
call
or
fadds
jne
test
or
jne
add
jne
roll
add
test
push
push
fdivr
call
and
out
mov
test
scas
mov
pop
test
sti
jmp
pushf
pushf
adc
fs
dec
xchg
test
push
inc
repz
rcl
fdivrs
dec
add
test
stc
test
cltd
es
add
stc
test
inc
pop
dec
pop
xchg
call
and
cmpl
inc
pop
cltd
add
mov
outsl
cs
out
sti
out
add
test
sub
adc
sbb
jle
outsb
cmpsb
cld
cmpsl
push
leave
mov
movb
jl
subb
mov
cmpsl
filds
push
std
arpl
add
push
roll
cmpsb
jmp
fwait
js
jmp
add
jp
test
cmp
add
sbb
adc
cmpsb
into
jge
ret
scas
add
fwait
xor
inc
jno
add
jmp
popa
cmpsb
mov
je
movsl
stos
in
call
fs
jmp
jbe
int
aam
jbe
pop
and
dec
shll
out
mov
push
push
xchg
mov
cwtl
scas
jmp
fwait
cmpb
cs
jmp
jo
pushl
push
fisubrs
add
add
scas
add
mov
add
add
add
lcall
add
shl
pusha
inc
les
add
incl
sbb
fcomps
jmp
add
lea
gs
push
or
call
sbb
add
out
add
jne
test
xchg
pop
jne
mov
lret
mov
mov
add
rcll
push
in
push
mov
pop
pushf
add
mov
add
loopne
aas
mov
in
outsl
call
sub
add
outsb
jae
mov
popf
andl
jge
lcall
imul
stc
sarl
stc
mov
xor
lret
bound
jne
add
mov
xchg
mov
lcall
in
es
cltd
add
or
fwait
sbb
add
movsb
popa
sub
into
movsb
cmp
stc
mov
lds
mov
mov
into
add
adc
stos
insl
mov
xchg
cmc
call
adc
movsl
sbb
sbb
jmp
movsl
add
inc
jbe
mov
ds
pop
mov
or
cs
mov
pushf
sti
mov
jbe
movsb
adc
add
and
add
pop
mov
cmc
cmp
andl
sbb
add
jmp
mov
xchg
adcl
je
add
and
jmp
or
fisubrl
mov
or
stc
out
sbb
add
add
pop
or
leave
idiv
pushf
lods
mov
ficoml
pop
mov
or
scas
repz
or
or
fimull
decl
repnz
je
decl
jae
je
add
addr16
lcall
lock
pusha
cli
or
lods
addr16
lcall
sti
add
xchg
pushl
arpl
jo
imul
add
in
les
cmp
cli
cmp
outsl
arpl
outsl
xor
incl
insb
jmp
jne
insb
mov
shlb
mov
sahf
test
mov
sbb
xchg
xchg
movsb
jns
dec
or
sub
mov
loop
mov
ror
mov
cli
mov
loop
push
or
jge
stos
add
mov
lcall
or
mov
push
out
movsl
jmp
pop
mov
or
push
mov
cmp
jecxz
jne
movb
mov
mov
add
mov
xchg
dec
cltd
adc
push
mov
xor
xor
loope
sub
out
sbb
call
mov
mulb
cmp
xchg
mov
sahf
push
test
les
stos
pop
mov
cmp
cmpsb
xchg
mov
jmp
or
adc
mov
add
test
or
enter
test
or
call
mov
jle
cld
add
jl
test
mov
fisubrs
mov
sbb
push
fdivrl
push
sahf
lcall
add
mov
add
decb
add
add
dec
je
ja
sahf
imul
in
popf
jmp
mov
dec
push
add
test
jne
outsb
int3
add
jnp
ljmp
inc
sub
aas
imull
inc
xchg
imul
shl
jmp
push
or
push
add
decl
daa
cli
push
push
js
or
xor
decl
push
push
pop
ljmp
jl
push
sti
rorb
dec
pop
jmp
stc
adc
repnz
dec
push
or
lock
jnp
call
mov
sahf
mov
cmp
test
repz
imul
incl
cltd
repnz
rclb
sub
scas
stos
cmp
xor
pushf
jmp
stos
test
popf
push
cmp
mov
pushf
jne
pop
aaa
sbb
cli
pushf
jne
jb
std
sbb
outsb
cmc
jb
lea
sahf
incl
cli
pushf
mov
sbb
jmp
mov
les
cmp
pop
sahf
fstps
fwait
push
popf
jg
mov
fwait
lods
lock
popf
ja
aad
or
xchg
notl
push
push
pop
mov
popf
jns
xor
into
add
push
es
pushf
pop
pop
test
hlt
stc
test
sbb
lret
push
mov
outsl
pushf
and
sahf
lret
call
mov
stos
lcall
aam
add
mov
mov
fwait
jne
xor
jne
adc
lcall
rorb
or
push
fwait
lcall
test
in
push
xchg
push
lahf
mov
fidivl
or
clc
out
lret
or
aad
add
jmp
add
add
cmp
mov
xchg
push
inc
mov
jle
stc
mov
icebp
ljmp
mov
xlat
jbe
cmc
incl
pop
icebp
cs
add
inc
or
dec
lock
out
push
inc
add
pop
mov
jecxz
in
mov
jl
lock
jne
gs
cmpsl
xchg
add
fistpl
movsl
or
push
fsubrl
les
push
push
out
xchg
cs
insl
into
cmpsl
push
add
cld
add
add
ds
les
cmpsl
daa
add
mov
mov
stos
ss
lds
push
xor
cli
stos
jb
stos
add
iret
test
stos
push
stos
add
mov
xchg
pop
add
je
ret
repz
cmp
mov
jge
inc
mov
dec
test
ljmp
add
mov
in
mov
stos
roll
roll
roll
roll
in
xchg
cmp
mov
sub
sub
sahf
add
add
push
loope
push
xor
jae
fldln2
fucomip
jle
bnd
push
add
pop
add
add
xchg
xchg
cltd
cwtl
xor
stos
jmp
or
and
add
in
addr16
sub
xor
test
out
sub
pop
xchg
into
xor
sarl
mov
add
xchg
push
rcl
add
nop
sarl
dec
inc
xchg
int
mov
push
xor
aas
mov
push
out
cmp
sbb
push
mov
xor
seta
cmp
mov
in
push
mov
cmp
mov
cld
add
lds
add
push
int
movsb
inc
xor
sbb
inc
cmp
cltd
xchg
les
test
mov
xchg
call
mov
inc
mov
call
jmp
imul
sbb
inc
cld
scas
cld
out
imul
cmp
fwait
add
add
pushl
outsb
movl
sbb
push
call
mov
cmp
fsubrs
pop
lods
pushl
add
add
shl
inc
pop
push
aam
subl
in
daa
add
add
mov
les
call
adc
stos
xchg
jne
jb
aam
je
int
insb
xchg
push
stc
in
or
pusha
jbe
call
jmp
adcb
jb
xchg
incl
push
xor
add
inc
xchg
push
push
stos
jmp
stos
xor
dec
mov
invd
xchg
jg
jns
xchg
add
xchg
xchg
call
test
add
add
stos
call
xchg
pushf
cmp
xchg
into
xchg
stos
or
inc
adc
xchg
outsb
xchg
xor
es
mov
xchg
add
xchg
fs
xchg
mov
jle
xchg
jbe
xchg
jbe
inc
sub
movsb
xor
xchg
pop
add
ds
push
xchg
dec
xchg
lret
addl
xor
xchg
xchg
or
push
xchg
cmp
xchg
in
jno
jl
push
push
add
xchg
out
sub
out
xchg
call
stos
mov
fucom
add
push
or
pushl
sub
lcall
push
stos
jmp
mov
mov
add
ds
sub
sub
add
jl
xchg
ds
aas
movsb
jmp
movl
loop
or
pop
add
sar
add
insl
push
call
cmp
insl
incl
aas
sar
adc
cld
add
pop
call
shl
ret
push
mov
call
fidivl
fiaddl
pushl
dec
pop
movsb
add
xchg
mov
add
movb
std
lcall
add
decl
loopne
imul
bnd
mul
je
ljmp
jge
jne
negb
or
or
sbb
lahf
notl
add
mov
mov
pop
mov
xchg
inc
les
or
inc
add
es
negl
pop
xor
incl
pop
jno
es
idiv
ja
lea
ja
jmp
mov
fcoms
cmpsl
flds
call
mov
push
push
aaa
es
idivl
iret
push
pushl
xchg
fwait
dec
mov
xchg
sbbl
call
add
xchg
or
adc
nop
push
sahf
les
call
fisttps
cltd
xchg
push
nop
xor
push
nop
out
lret
stc
rolb
nop
xchg
imul
mov
nop
mov
add
or
mov
movb
jge
andl
xchg
push
std
jne
test
daa
add
mov
sub
inc
xor
add
add
add
xor
jmp
stos
add
add
mov
dec
push
push
rorl
mov
ret
sub
mov
jmp
push
fiaddl
dec
adc
dec
in
jp
je
xchg
idivl
mov
test
sahf
cs
incl
mov
add
cmp
xchg
jle
aad
sarb
push
pushl
cmpsb
negl
sbb
sarl
jmp
loopne
call
push
xlat
add
jno
test
add
js
add
adc
mov
inc
add
xchg
dec
fiadds
cmpl
testb
popa
idiv
clc
add
inc
movsb
xor
testl
ljmp
aas
pushl
imul
mov
jbe
cmp
pop
call
dec
sub
negl
pushl
iret
imul
ljmp
hlt
mov
cltd
int3
pop
in
aam
call
subl
fwait
cs
mov
xor
xchg
jmp
loop
pop
mov
decl
sti
out
movsl
mov
cmp
divl
mov
or
mov
pushf
mov
mov
sbbb
cld
xchg
add
inc
jg
repnz
mov
cmpsb
mov
fsts
dec
cld
dec
fiadds
sbb
or
add
lea
inc
jmp
mov
frstor
fwait
lret
mov
outsb
inc
mov
fcoml
mov
xchg
popa
push
icebp
fwait
sahf
mov
lea
js
sbb
push
in
mov
stos
stc
shlb
mov
mov
inc
popf
push
ret
xchg
add
add
push
cmc
fwait
pop
stos
sahf
hlt
popa
test
inc
mov
xor
sarl
sub
pop
add
mov
std
das
test
mov
inc
shll
je
int
mov
xor
or
in
mov
push
add
rorb
xor
push
mov
xor
cld
add
mov
mov
es
je
in
xor
cmp
cltd
mov
sbb
adc
jmp
inc
lcall
lds
xor
cmpsb
add
add
or
out
aad
jle
rorb
or
add
pushl
into
jne
data16
sarb
mov
sbb
decl
add
push
das
add
add
data16
push
jbe
ror
dec
push
and
or
rorb
out
jne
callw
jbe
xorl
fs
inc
out
jne
dec
xchg
mov
hlt
sti
out
add
mov
leave
adc
or
out
mov
mov
dec
jle
cmp
les
jp
enter
iret
sbb
or
mov
inc
pop
mov
cltd
add
popa
outsb
mov
pop
and
adc
xchg
add
mov
mov
jnp
sub
mov
ret
insb
mov
add
mov
into
sti
out
add
pushf
stos
scas
xchg
mov
xchg
inc
mov
mov
rorl
fwait
or
push
jmp
popa
or
cmpsl
add
cltd
jp
mov
inc
sarl
es
imul
jmp
mov
dec
xor
movzbl
push
add
push
inc
mov
add
iret
mov
daa
add
push
mov
xor
mov
stc
out
inc
mov
adc
add
or
out
sub
mov
mov
test
dec
xchg
inc
or
call
or
incl
add
addr16
add
add
inc
jmp
cld
add
mov
xchg
mov
loop
incl
mov
push
andl
push
adc
call
loop
or
incl
shlb
jne
imul
jp
jne
imul
sbb
add
jae
inc
xlat
ljmp
out
sub
dec
jmp
aas
sar
lcall
in
addr16
mov
add
das
inc
cmpsl
ljmp
movsb
jns
or
notb
jne
jns
or
xchg
cld
dec
jns
hlt
mov
in
addr16
scas
inc
add
test
add
daa
sub
fs
push
mov
cltd
mov
adc
add
mov
call
inc
mov
mov
xchg
jecxz
mov
jle
or
pop
mov
rorl
hlt
cmpsb
repz
mov
adc
test
fiadds
jmp
cwtl
push
addl
pop
insb
faddl
push
xor
cmc
xchg
jns
dec
decb
add
mov
lahf
ret
je
add
add
push
in
xchg
jmp
fwait
or
xor
cltd
or
clc
fldcw
xchg
cwtl
in
sbb
daa
add
push
fstpl
aaa
jg
test
test
mov
mov
push
mov
push
js
mov
inc
push
inc
cmpl
xchg
push
push
add
test
inc
mov
mov
orl
dec
fadds
mov
aas
add
in
sbb
add
sub
or
add
mov
movl
push
rcll
add
out
jne
inc
insl
add
mov
add
cld
rcrl
lea
ljmp
xor
in
cltd
inc
cmp
adcl
leave
icebp
dec
dec
sar
fildl
call
mov
ss
pop
lea
inc
cmp
mov
inc
jmp
cmp
add
dec
mov
sub
jle
or
xor
incl
jle
mov
jge
push
js
incl
iret
dec
add
pushl
out
xor
sbb
add
add
lcall
fdivrl
jne
das
adc
fcmove
and
test
jl
jmp
mov
icebp
jge
call
sbb
pushl
jge
outsl
inc
decb
aaa
mov
repz
mov
push
xor
sarl
add
and
cmp
pop
clc
sbb
jg
add
mov
sar
dec
aam
imul
pop
orl
in
decl
imul
cmp
add
pop
mov
or
pop
add
xlat
test
scas
loope
jmp
in
add
xor
pushl
cmpsb
jg
ret
add
jp
imul
jge
mov
movsl
jmp
add
mov
add
add
mov
sbb
adcb
fs
add
cmp
in
add
add
jg
orb
add
dec
xor
add
shlb
or
test
js
andb
jae
xchg
orb
jg
adcb
call
add
ljmp
call
addr16
ret
cmp
test
jne
jmp
arpl
out
aas
sar
pop
mov
pop
fdivrl
cmp
mov
into
lcall
rorl
je
aad
das
sub
cmp
loopne
dec
mov
pop
call
xchg
lahf
dec
pushl
mov
jmp
test
xchg
cmp
inc
insl
das
inc
jmp
inc
or
fwait
mov
xor
jge
pushl
jmp
mov
xorb
cmpsb
lret
lret
daa
pop
mov
aas
add
out
flds
pop
call
pop
lds
add
mov
adcl
inc
cmp
add
out
inc
cld
add
insl
cltd
xor
xorl
dec
ret
cs
imull
add
mov
cmp
jne
ljmp
adc
push
jb
jg
jl
add
les
jns
mov
add
arpl
mov
gs
mov
pop
xorb
push
xor
sbb
dec
adc
or
mov
in
dec
stc
iret
cld
sub
jle
mov
cmpsb
lea
push
add
mov
xchg
cmpsb
in
dec
pushl
in
jle
mov
jge
insb
mov
lea
jge
push
inc
movsl
jmp
inc
push
adc
add
mov
inc
pop
jg
stos
das
out
jmp
adc
add
or
imul
push
mov
jge
nop
jl
cmp
xchg
sub
pusha
add
push
scas
jle
mov
xor
push
jge
jl
mov
or
jle
imul
xor
testl
iret
push
or
dec
dec
xchg
mov
jl
push
xor
ss
xchg
das
loopne
push
es
mov
popa
jo
add
push
mov
jnp
notb
mov
cwtl
jl
roll
call
jne
or
call
jge
xor
imul
and
or
testb
jmp
add
jnp
adc
imul
iret
push
xor
dec
jne
out
and
out
int3
cld
push
lock
call
push
and
push
decl
sub
call
call
aas
std
xor
je
iret
mov
and
decl
je
call
out
or
pop
xor
add
mov
push
cld
je
das
xor
pushl
out
lret
jl
dec
mov
test
add
test
jmp
insl
jl
rolb
enter
inc
sbb
sub
test
idivl
xor
xchg
imul
add
jle
sbb
incl
inc
je
rcrb
add
std
or
or
jmp
cld
dec
call
pop
aaa
rolb
incl
push
stos
cmp
cmp
icebp
pop
mov
call
icebp
imul
sahf
jnp
sbb
lods
jp
jns
and
js
jnp
sahf
mov
or
ljmp
shrl
add
rorl
scas
ret
jmp
inc
das
pop
jns
in
mov
test
dec
out
loopne
mov
in
les
js
or
adc
jp
ljmp
mov
jns
lock
test
inc
ret
sbb
subw
je
push
out
setle
or
sbb
imul
cld
mov
and
leave
stos
mov
test
mov
js
stc
add
or
inc
incl
inc
je
cmp
inc
jmp
imul
push
js
push
pop
sar
xchg
lds
push
mov
push
cmc
adc
xchg
push
mov
jbe
loope
mov
into
ja
cmpsl
add
inc
mov
out
add
cli
push
xchg
cli
je
das
push
ljmp
cli
je
aas
popa
enter
rcll
dec
mov
mov
cli
je
out
out
lret
call
jmp
int
stc
jne
push
jne
jmp
ljmp
inc
xor
out
fwait
clc
jmp
adc
sub
mov
push
incl
fidivrs
in
andl
jne
pop
imul
js
xor
mov
aas
mov
call
adc
imul
push
xor
mov
jne
call
imul
dec
push
stos
xor
push
in
pop
dec
js
imul
dec
lcall
inc
or
mov
sbb
push
cmp
mov
imul
ja
xorl
test
ret
add
xlat
shr
mov
shll
xor
add
xor
push
cmpsl
shr
dec
or
in
inc
xor
add
sub
les
ret
sub
xor
cmp
test
add
sub
lds
ret
jmp
push
fisubrs
ds
fsubrl
test
out
cli
les
fmull
xchg
ret
lret
or
cmp
in
stos
das
test
xchg
les
mov
mov
pop
rcr
jae
ficoms
jmp
cld
mov
out
pop
shll
xor
ret
fildl
cli
je
fmul
sub
sub
pop
xchg
stos
jbe
jle
fbstp
sub
jmp
addr16
add
inc
divb
outsb
xor
push
xor
add
mov
imul
mov
ljmp
add
cmp
das
call
xchg
jmp
das
inc
add
incl
addr16
je
jmp
bound
xchg
std
addr16
aad
jmp
jg
fs
call
mov
addr16
xor
std
add
lcall
in
push
outsl
xor
add
addr16
jne
out
std
mov
inc
jmp
xor
das
add
add
in
je
mov
xor
sbb
testb
mov
je
movsb
inc
je
movb
std
or
add
or
repz
je
icebp
int
pushl
imul
add
mov
jge
push
xor
mov
or
sbb
jmp
jne
call
xchg
xor
incl
push
fmul
add
shlb
push
out
pop
shrw
dec
add
mov
jb
jmp
das
test
xor
fsubrl
inc
push
je
jmp
cltd
je
or
sti
and
pop
sub
fidivs
aas
loope
mov
rcll
jno
lcall
in
rcr
add
sub
imul
aam
mul
pop
and
jae
out
jae
mov
popa
pusha
cmp
jo
adc
sbb
lds
leave
cmp
jno
leave
insl
fsubr
jb
adc
hlt
movsb
sbb
in
enter
inc
adc
mov
jne
lods
ss
rolb
jno
mov
idivl
sub
sar
push
into
jo
in
ss
add
jno
in
jo
jo
push
popa
push
dec
negb
scas
cld
fsubl
leave
xchg
sub
inc
jge
fistps
sub
cld
mov
in
enter
inc
inc
inc
out
sti
jmp
mov
fdivr
push
jecxz
jmp
jge
push
add
push
or
jne
int3
xor
mov
repz
scas
out
sar
or
je
sbb
call
sbb
call
repnz
or
out
call
repnz
jmp
bnd
dec
ja
call
insl
out
push
icebp
call
lret
inc
ret
cmpb
je
in
filds
dec
add
popa
scas
sti
out
sbb
gs
incl
dec
mov
out
sbb
cmp
jno
sub
jno
sbb
push
mov
jno
or
jb
stos
popf
jo
stc
aad
call
jmp
popf
jo
pop
fwait
daa
add
pop
addl
adc
in
sbb
push
dec
ret
or
inc
mov
pop
fildl
sbb
add
add
ret
jns
aam
jo
loopne
xlat
outsl
dec
jo
adc
pusha
sbb
test
add
nop
shr
sub
test
cmpsb
ljmp
jg
orl
mov
outsb
adcl
mov
jb
vpmulhw
xor
push
inc
shr
and
sub
push
cli
add
mov
imul
mov
adc
les
add
loop
idivb
xchg
jmp
icebp
insb
pop
jmp
mov
jle
cmp
leave
insb
mov
aaa
imul
loop
cmc
add
add
adc
insb
jl
gs
mov
add
push
cmp
jp
mov
push
jb
mov
insb
jne
gs
cmpsb
sub
cltd
sub
addl
testl
adc
arpl
lahf
add
adc
push
adc
call
into
cmp
push
nop
imul
decl
push
add
das
inc
add
add
mov
xlat
je
push
daa
xchg
cld
call
int
ret
adc
imul
out
sbb
xor
in
imul
out
jge
jmp
push
sbb
inc
mov
fcomps
adc
or
jle
cld
dec
out
ret
testb
xchg
outsl
decl
sub
inc
sbb
jmp
nop
or
add
sbb
lds
clc
push
outsb
mov
add
cld
stc
arpl
std
dec
insb
push
push
testb
into
outsl
fxch
and
dec
jo
jo
mov
push
fwait
testb
add
jo
push
mulb
loop
insb
add
aam
pop
cmp
xlat
call
sti
pop
clc
sub
lods
outsl
xor
add
mov
test
ds
test
add
add
pop
cwtl
aas
sbb
fistl
push
lods
xchg
xor
cmc
rcrl
icebp
imul
fcompl
xor
repnz
push
or
pop
bound
addr16
repz
jne
cmc
adc
popa
stos
adc
jmp
inc
gs
push
pop
aam
push
pop
push
pop
test
enter
push
jb
fcos
call
rol
decl
adc
xchg
push
mov
jmp
out
add
mov
cmp
pushl
imul
or
sbb
sbb
out
loopne
dec
fisttpl
dec
jno
call
das
mov
ret
push
mov
in
cld
push
inc
pop
incl
mov
loopne
add
xor
pop
xor
add
xor
iret
ret
ret
dec
addr16
add
lret
mov
call
mov
inc
jmp
sbb
mov
pop
push
jmp
loope
inc
bound
rorb
faddl
mov
push
cld
out
jnp
jmp
adc
lods
ret
sub
xlat
cs
cmpsl
cltd
add
xlat
sbb
pushl
test
jne
sar
decb
pop
jg,pt
imul
pop
fninit
repnz
add
jmp
sbb
add
les
add
mov
add
cli
out
push
push
inc
jmp
mov
pop
das
jg
cs
sub
or
push
add
sarl
imul
xchg
pop
movsb
inc
mov
push
xchg
rcrl
andl
pop
andb
aam
pop
out
mov
dec
out
push
mov
es
inc
cmp
cmp
popa
push
xor
hlt
pop
mov
inc
popf
mov
adc
shlb
incl
adc
ret
push
loop
push
int3
popa
pop
inc
mov
loope
sub
pop
aas
les
gs
adc
xor
ret
adc
pop
sub
jmp
cmc
push
subl
fs
cmc
jg
dec
fnstcw
inc
fs
mov
pop
xorb
fs
cltd
out
pop
adc
lcall
add
lcall
incl
mov
jne
leave
fwait
mov
fildl
push
mov
dec
jmp
xor
jg
xor
pop
scas
notrack
fistpll
jae
xlat
fdivl
jno
push
inc
jno
call
aas
ret
mov
lock
mov
dec
add
push
sub
xchg
or
cmpsl
push
adc
add
decl
insb
dec
decl
push
call
loopne
ud0
addr16
mov
sti
out
mulb
notl
idiv
xchg
fists
cli
push
fdivr
push
jo
jne
push
cmp
inc
rol
add
fnstcw
jge
sbb
xor
pusha
mov
gs
push
repnz
mov
cmpsb
add
mov
subl
incl
lock
cmpl
mov
or
or
lcall
lret
add
incb
fdivrs
mov
jmp
std
or
add
fs
repnz
mov
insb
fldlg2
aam
xor
add
mov
cmp
add
add
inc
mov
je
outsl
mov
shr
pop
push
andl
fs
das
fs
test
pop
lods
pop
insb
push
bound
mov
test
push
dec
sub
add
ljmp
pop
bound
rol
lcall
lcall
adc
push
inc
ja
in
pop
bound
add
bound
mov
sub
ret
test
bound
mov
popa
addr16
ret
inc
push
negl
loop
incl
xor
lea
ljmp
jmp
xchg
repnz
call
push
pop
add
incl
sub
jae
movsb
mov
add
in
mov
xchg
out
jns
jmp
xadd
out
test
shl
fcomps
jmp
xchg
add
cmpb
cmp
sub
idiv
pop
add
push
iret
add
je
aas
cmp
in
add
pushl
call
pushl
jecxz
or
jle
mov
mov
incl
or
push
pushl
frstor
sub
bound
repnz
popa
decl
jne
call
stc
adc
div
push
push
sub
ljmp
ss
fnstenv
xchg
mov
ss
call
in
sahf
mov
cwtl
popa
call
jmp
subb
popa
incl
jno
aaa
orb
in
imul
push
xor
pop
roll
in
push
xlat
shrl
inc
pop
jo
xor
jmp
rcrl
iret
ret
lods
inc
or
inc
mov
cwtl
jmp
add
mov
call
sbb
out
out
fwait
pusha
rorl
push
jg
push
popf
repz
jmp
inc
test
pop
repnz
adc
cmp
mov
aam
mov
aam
imul
jle
data16
xor
enter
jo
call
push
jo
call
mov
inc
sbbl
push
bound
pop
pushl
pop
push
push
call
sub
xchg
adc
out
cmp
jmp
mov
repz
jmp
inc
mov
push
push
insb
inc
push
divl
add
movsl
sub
mov
mov
push
call
jmp
inc
add
cmp
call
mov
ljmp
push
call
fimuls
out
mov
push
imul
mov
pushl
add
inc
jo
decb
lock
addr16
inc
add
jns
mul
mov
inc
add
pop
mov
in
js
push
push
pushl
pusha
stc
push
sub
add
mov
pushl
in
idivl
jmp
inc
mov
jmp
call
mov
mov
push
mov
jmp
add
jae
push
jmp
sub
pop
out
add
pop
mov
testl
pop
pop
mov
push
push
jmp
imul
not
cmp
insl
ret
add
mov
xor
mov
lcall
call
xchg
pop
push
insb
xchg
pop
xchg
pop
or
xorl
imul
pop
pop
pop
pushf
fs
pop
pop
pop
rorl
inc
push
push
pop
dec
pop
jae
ds
xor
or
sub
and
push
int3
xchg
push
pop
or
add
pop
sub
pop
jmp
pop
out
xchg
ficoms
pop
out
mov
aas
leave
pop
into
imul
pop
mov
mov
mov
add
idiv
pop
jmp
ljmp
and
imul
or
pusha
mov
add
loope
les
pop
imul
lcall
sti
rcrl
aam
inc
jae
jmp
jb
sti
push
lock
ret
and
add
andl
jp
or
scas
repnz
ret
pusha
mov
jle
add
mov
call
mov
ljmp
ljmp
mov
mov
test
lock
xor
jmp
out
decl
cmpsl
xor
ljmp
inc
daa
mov
mov
lea
lea
add
decl
mov
ss
out
mov
lock
sub
in
sub
test
mov
mov
lock
pushl
xchg
pop
xor
jmp
sarl
xchg
ja
push
add
mov
xlat
pop
ljmp
repnz
push
repnz
pop
mov
mov
decl
add
clc
cmp
divl
mov
lcall
notb
loopne
pop
pop
lea
push
incl
lcall
sub
jmp
test
es
inc
add
xor
push
add
repnz
inc
jge
push
test
cltd
mov
movsl
out
loope
or
cmp
sahf
pop
jns
mov
jns
hlt
add
dec
jle
push
ljmp
dec
dec
pop
dec
or
inc
in
push
dec
mov
cmp
pop
sub
ss
jge
add
mov
dec
push
pop
mov
add
test
push
pop
jmp
add
jmp
xchg
lcall
lcall
dec
dec
push
int
rcll
mov
notb
xor
imul
push
loope
call
stos
mov
xchg
fdivl
push
cld
lds
xor
push
lcall
out
pop
inc
dec
mov
dec
cmp
mov
cmpl
add
mov
lcall
adc
pushf
lds
push
xchg
push
jmp
in
arpl
push
call
decl
in
mov
add
jg
mov
subb
call
pusha
jae
mull
out
add
lods
lcall
push
idiv
inc
out
mov
out
aas
cltd
mov
loopne
inc
clc
out
adc
jmp
lods
je
jg
xchg
daa
mov
pop
xchg
mov
xchg
sar
daa
imul
or
insl
push
decb
mov
insl
or
imul
jmp
int
call
imul
add
inc
test
add
sbb
or
jmp
sub
mov
push
sarb
ds
jbe
add
mov
arpl
add
push
jmp
push
incl
push
push
cmp
dec
testl
push
jne
ret
mov
pop
insb
and
add
stc
xchg
mov
cmp
push
jmp
cwtl
push
inc
jle
dec
rcll
cmp
out
outsb
jmp
scas
dec
into
push
test
add
insl
push
push
mov
cmp
push
mov
call
add
lea
psrlw
sub
flds
pop
mov
push
outsb
ljmp
pop
cs
push
push
xor
add
addr16
mov
add
imul
adc
push
mov
mov
push
shr
test
imul
idivb
jge
divb
push
push
jecxz
inc
jmp
or
adc
sub
adc
push
sarb
push
in
jo
flds
fcompl
stos
jl
jle
or
jmp
xchg
mov
outsb
inc
jl
pop
ljmp
jmp
xchg
push
incl
and
inc
daa
out
mov
push
push
cmpb
inc
or
pop
jge
aam
lods
jmp
adc
aam
lods
incb
out
decl
in
fdivrs
in
mov
add
cmc
cmpb
sub
test
push
mov
push
pop
imul
pop
mov
ret
decb
daa
sub
cmp
idiv
cmp
jne
fsubrs
test
mov
rcr
idiv
cwtl
add
xchg
mov
mov
xlat
popa
cmp
sub
xchg
jb
add
mov
xchg
mov
pop
push
mov
push
push
incl
ror
cli
out
or
shrl
mov
inc
pop
mov
aas
push
mov
push
lcall
xchg
push
jne
inc
cltd
mov
cmpsl
push
mov
ja
pushl
sti
out
lods
push
jmp
arpl
pop
iret
push
jne
orb
fists
pop
add
cmp
cwtl
xor
cwtl
sbb
push
push
inc
jl
sbb
pop
or
pop
add
push
add
adc
xor
push
loope
dec
cwtl
leave
pop
cmp
dec
out
xlat
lds
mov
add
adc
push
add
xchg
mov
aaa
lds
out
xlat
ret
mov
xlat
mov
dec
insb
dec
mov
add
inc
jmp
test
dec
xor
inc
and
je
xchg
repz
pop
inc
jp
jmp
aam
push
or
pushf
in
call
jl
pop
and
dec
push
in
call
dec
fimuls
xchg
roll
jb
add
imul
out
aam
xchg
add
xchg
lcall
ret
dec
test
add
inc
decb
out
cs
lcall
mov
dec
mov
mov
ret
push
mov
cld
in
add
shlb
pop
call
outsb
inc
sti
push
aas
xorb
xlat
sub
jne
test
imul
cmpsl
sub
pushl
jg
mov
orb
mov
add
pushl
jl
mov
jnp
pop
xor
push
jae
mov
aam
jne
pop
or
add
lea
cmp
xor
push
or
pop
push
xchg
incl
loop
sti
inc
cs
sub
jp
add
cmp
je
jb
aaa
jg
mov
jecxz
add
mov
fsubs
xor
mov
icebp
sbb
xchg
das
xchg
lcall
cmp
out
jne
jmp
popf
xchg
jno
xchg
add
adc
jmp
daa
push
lea
dec
push
dec
jle
sbb
out
fmuls
dec
hlt
dec
cmp
lock
mov
pop
inc
add
subb
or
loopne
or
cs
inc
and
icebp
dec
push
lea
faddp
loope
sbb
jg
push
fdivrs
dec
not
lds
sti
mov
cmp
pusha
aas
inc
lods
push
cltd
dec
je
xchg
mov
xlat
mov
add
mov
inc
jmp
mov
mov
inc
xchg
add
add
jmp
ret
add
add
xlat
pushl
dec
push
insb
inc
push
notl
mov
aam
dec
jne
jb
sub
mov
add
rol
lcall
dec
dec
mov
jbe
decb
dec
jmp
push
mul
add
lcall
aaa
sub
dec
mov
add
decl
push
sub
add
decb
dec
sub
addr16
testb
jae
idivl
mov
inc
add
mov
ljmp
mov
or
push
mov
mov
js
push
sub
out
cmpb
lcall
mov
aaa
inc
out
mov
shlb
push
sub
movsl
mov
test
or
adc
mov
mov
jmp
test
xor
mov
nop
pop
adc
lcall
imul
pushl
mov
add
mov
xor
dec
add
mov
mov
pop
pop
mov
hlt
js
incl
add
push
idiv
pop
dec
jne
bnd
mov
out
fldcw
out
scas
dec
dec
or
dec
jne
add
scas
mov
out
jae
dec
mov
jae
dec
xchg
dec
jl
xchg
dec
mov
dec
jns
mov
push
das
dec
sahf
dec
sub
dec
pop
pop
adcl
cmp
cmp
dec
daa
xlat
dec
sub
inc
push
mov
add
lods
jno
cmp
fcmovu
dec
jae
inc
pop
and
jl
inc
xchg
and
stc
add
roll
dec
push
inc
dec
mov
inc
jmp
sti
std
cmp
push
andl
dec
jne
cmc
xchg
mov
inc
ficoml
add
cs
jmp
adc
inc
decl
inc
pop
fisttps
inc
leave
stos
mov
add
popl
insb
popa
dec
push
push
or
adc
sbb
gs
jg
mov
xor
jmp
ret
jmp
mov
ljmp
xchg
push
and
repz
or
lahf
jg
add
shr
call
push
xor
or
or
jmp
mov
pushl
xchg
push
call
into
out
test
mov
idiv
mov
inc
cmp
xor
scas
inc
jmp
fildll
lcall
jecxz
mov
lahf
aaa
inc
add
mov
inc
call
sub
sub
pop
mov
inc
decl
mov
add
and
jmp
sub
xor
mov
rolb
lea
ja
ljmp
fdivl
sbb
adc
call
adc
xchg
sbb
movl
rcrb
cmp
fdivr
je
mov
mov
pop
inc
dec
mov
inc
je
push
cmp
adc
movl
hlt
add
dec
push
inc
mov
push
testb
jge
cmp
add
inc
jmp
js
sub
inc
xchg
mov
nop
mov
scas
xchg
inc
jns
test
or
inc
cmpsb
add
mov
push
inc
add
stc
adc
inc
xchg
push
jbe
cmp
sbb
pushf
pop
sub
xchg
stc
inc
lea
dec
inc
push
sub
inc
add
icebp
inc
add
js
pop
inc
sti
xchg
jmp
js
loopne
addb
pop
xor
popa
dec
adc
scas
idiv
inc
mov
sti
inc
call
das
xchg
fiadds
call
popa
add
inc
inc
xor
mov
sti
inc
jmp
pop
inc
cmpsl
sti
inc
call
pop
repz
add
stos
dec
inc
push
jb
jle
jne
int3
or
movsb
mov
call
pusha
push
inc
call
addl
or
sbb
mov
hlt
dec
decl
stos
movsl
jp
mov
inc
out
add
inc
out
cld
mov
jne
mov
stos
js
je
js
sti
pushl
mov
out
or
call
add
xchg
jne
cmpsb
mov
mov
inc
pop
leave
push
inc
decl
dec
out
mov
sbb
andl
add
stc
mov
or
pushl
popf
push
ljmp
inc
jne
loop
mul
in
xchg
dec
fmulp
jmp
nop
cmpsb
rol
test
push
add
ljmp
sub
mov
cld
inc
mov
sub
or
push
jmp
mov
mov
push
sub
lret
xor
stc
cmp
inc
pop
add
sub
adc
sbbb
sub
or
mov
stc
mov
sub
imul
jmp
outsl
es
dec
sbb
pop
inc
leave
sub
loope
inc
icebp
add
lea
add
out
mov
cltd
inc
jo
xchg
test
into
mov
jns
push
add
pop
icebp
les
imul
daa
add
push
pop
inc
dec
or
mov
test
sbb
jb
jbe
rorl
data16
dec
jg
call
outsb
call
sbb
testb
and
push
stc
inc
jmp
jl
push
mov
jl
dec
push
push
or
cmp
notrack
pop
insl
push
pop
sbb
push
add
aas
push
std
mov
push
xor
inc
jmp
ds
sbb
rorl
sub
call
xchg
movd
xchg
sbb
out
int
incl
sub
jae
iret
lahf
cmp
push
out
out
push
push
jmp
mov
rorb
jbe
call
popl
lods
pushl
jbe
call
decl
mov
sbbl
shll
or
sti
jl
decl
add
pop
inc
testl
stos
stc
incb
add
std
add
lea
push
mov
mov
mov
es
je
addl
incl
mov
sub
xlat
aas
push
xor
aas
decl
idivl
mov
clc
aaa
je
rcrl
lods
jmp
sti
inc
mov
add
ljmp
das
sub
cmp
cmp
cltd
roll
push
mov
aas
jne
push
fwait
scas
jno
lea
aam
stos
out
add
add
ja
aaa
add
xchg
mov
cmp
jle
xchg
add
cs
call
aas
adc
test
add
inc
stos
icebp
movsb
repnz
jle
ss
xor
aas
fnstenv
push
aas
aaa
xchg
andl
and
mov
jle
ss
cmp
mov
adcb
repnz
mov
or
sarl
ljmp
nop
cmp
adc
sub
inc
cmpb
in
incl
ja
pushl
jbe
jbe
cmp
fadd
sub
fnsave
dec
mov
imul
mov
sub
push
mov
stos
push
add
cmp
adc
push
jecxz
in
neg
cmp
jge
cmp
ficoms
sub
ret
sub
add
mov
jge
sub
mov
cmc
lcall
jae
pushl
std
call
out
popa
stos
test
incb
out
test
jne
in
xlat
jns
dec
ret
push
mov
or
jb
call
pop
inc
sti
push
das
add
add
je
mov
insl
adc
push
xor
test
pop
call
push
fisttpll
call
xchg
add
mov
cmpl
arpl
call
lds
test
add
add
in
add
mov
pop
mov
sub
inc
bnd
test
cli
cmp
mov
mov
loope
aas
call
add
test
add
sub
test
sahf
test
xchg
sub
push
in
add
negb
fimuls
jns
popa
outsb
jno
push
add
sar
les
popa
cmp
cmp
sbb
sahf
lea
push
sahf
cmp
lods
call
add
outsl
jns
and
jbe
lds
stc
push
push
xor
xchg
add
les
xor
cmp
cmp
es
leave
mov
push
jno
xor
cmp
data16
cmp
jle
add
int
incl
cmpl
xchg
int
call
mov
or
aam
inc
cmp
mov
cmp
scas
mov
and
sahf
test
je
inc
jbe
xchg
hlt
cmp
std
adc
jmp
mov
add
rcrb
testl
data16
movsb
cmp
add
add
xchg
lcall
dec
sbb
jne
in
cmpsb
add
sti
mov
repz
call
mov
fcomi
pusha
stc
jne
jmp
cmpsb
cmp
mov
icebp
decl
stc
mov
or
call
and
out
jle
ljmp
test
inc
icebp
incl
outsl
dec
test
pusha
clc
mov
cwtl
clc
decl
jne
ljmp
xchg
lock
jg
test
mov
push
std
mov
add
mov
sub
mov
sub
call
inc
in
push
push
sub
jne
inc
xor
push
stos
jl
jmp
sub
cmpb
or
sbb
aaa
ljmp
scas
aaa
leave
cld
sbb
push
xor
iret
aaa
decl
aaa
push
icebp
dec
adc
jae
sub
sub
or
push
jle
mov
add
add
cs
add
add
mov
mov
pop
cmp
scas
fsubrl
lods
lods
call
add
jae
push
sub
insb
xor
scas
aam
scas
clc
ss
add
xchg
lea
xor
mov
cmpb
xor
add
and
aaa
dec
es
aaa
stc
xor
xor
xor
aaa
jae
push
inc
divl
aaa
adc
add
mov
icebp
push
xor
ljmp
imul
sub
jmp
xor
pushl
dec
mov
xor
and
test
adc
ljmp
pop
xor
mov
bound
sub
test
call
sub
xchg
call
sar
or
sub
xor
loope
add
outsb
shrb
addr16
add
aas
add
jno
call
or
cmp
dec
xchg
xor
push
dec
fdivr
jne
out
stos
enter
push
ss
scas
nop
stos
decl
out
mov
addr16
jne
out
int3
js
push
push
out
loopne
inc
addr16
jne
out
int3
sbb
out
sub
leave
gs
add
jmp
push
je
aas
xchg
movsb
lcall
sbb
jne
out
mov
ret
scas
pop
scas
xor
decl
sub
dec
fdivl
mov
dec
ret
into
mov
lods
push
call
mov
add
pop
sub
add
aaa
xor
add
scas
punpcklwd
aaa
call
incl
aaa
push
inc
adc
xor
mov
add
sbb
sar
stos
xor
ret
push
mov
call
xchg
jns
inc
mov
sub
imul
add
jne
xor
shrl
jne
leave
xor
or
shr
xor
adc
xor
add
and
rolb
dec
add
xor
stos
stc
jmp
add
mov
sbb
pop
xor
lcall
sar
shlb
scas
xor
movsb
sbb
addr16
xor
inc
in
xchg
jl
xchg
sub
jle
mov
xor
pusha
imull
jmp
cmc
sub
push
lods
xor
inc
in
mov
lea
push
add
or
or
in
xor
mov
xor
lds
push
int
fs
jp
imul
fisubrs
jmp
push
movsl
cmp
mov
or
lods
scas
xor
push
sub
xor
sub
mov
leave
stos
mov
add
hlt
xor
imulb
push
mov
incl
sbb
out
or
or
test
push
add
sub
jmp
add
inc
mov
push
add
ljmp
ljmp
addb
addl
decl
out
dec
add
or
jbe
jmp
das
xchg
inc
xchg
hlt
je
mov
push
mov
loop
hlt
notl
sbb
incl
icebp
call
std
add
inc
decb
xchg
xor
xorb
and
fwait
iret
flds
pushl
leave
cmp
icebp
iret
mov
cmp
jmp
mov
xor
leave
sbb
out
js
jg
lcall
xor
mov
icebp
xor
sbb
out
dec
sbbb
push
xor
add
sti
out
popa
xor
cmp
inc
add
add
pop
mov
mov
xchg
cmp
cs
mov
sbb
and
add
mov
jmp
add
je
cmp
outsb
mov
sbb
jbe
xor
test
fldcw
sbb
gs
jae
cmp
sub
sti
add
sub
push
sbb
das
mov
lock
out
das
jns
in
mov
add
in
or
das
sar
rclb
sub
out
and
shl
push
xchg
sub
cmp
movsl
call
and
lcall
loope
pop
xchg
pop
cmp
jbe
movsb
add
fsubrs
jg
sar
cwtl
mov
inc
add
cmp
dec
mov
cmp
icebp
mov
inc
cld
xchg
nop
lcall
lds
inc
or
jp
mov
in
fldl
add
mov
sub
rcll
je
mov
cmp
addl
xchg
inc
daa
or
jno
add
push
push
out
add
push
mov
cmp
decl
imul
incl
addr16
lods
inc
decl
imul
jg
mov
push
jo
jbe
xchg
decl
shlb
push
call
daa
dec
add
push
mov
je
push
mov
sbb
add
lret
mov
inc
ret
cmp
pop
fs
ds
dec
inc
mov
or
jmp
mov
stc
fwait
cltd
sbb
dec
sti
out
lret
push
imull
rol
cltd
sbb
jne
out
repz
cmpsl
jmp
push
xlat
pop
add
sub
sbb
fwait
sti
sub
dec
ds
and
add
xor
pushl
out
sub
jbe
sub
lret
jl
jmp
inc
outsb
xor
shll
mov
sub
std
nop
test
add
clc
pop
cli
arpl
mov
sub
add
sub
add
xchg
call
aaa
outsb
jl
aaa
leave
sub
enter
add
inc
mov
jno
jmp
ret
add
add
jle
ret
xchg
adc
shlb
xor
std
lods
sub
cltd
and
xchg
sub
mov
fwait
call
jmp
jmp
in
pushl
and
fidivs
call
and
incl
aad
jne
add
mov
outsb
movsl
jp
push
lods
sub
sarl
sub
xchg
mov
incl
scas
or
pop
pushl
cmp
ss
push
inc
xor
test
sub
push
dec
cld
out
andl
divl
mov
cmpsl
test
cmp
repz
incl
std
out
cmp
decb
addr16
sbb
jmp
je
inc
xor
test
call
add
ljmp
add
movb
add
add
shl
sbb
push
xorb
jne
or
movsb
loopne
mov
mov
clc
sub
mov
sbb
mov
mov
push
xor
pop
sbb
cmpl
add
dec
add
add
pop
es
mov
xor
in
xor
ljmp
nop
sub
dec
xorl
pop
push
hlt
mov
stc
scas
outsb
in
xchg
sub
jae
sbb
adc
xor
shll
xchg
shl
fdivl
and
and
sub
cmp
es
push
xchg
es
add
adc
jg
imulb
jno
in
scas
rcrl
xchg
sar
out
scas
mov
es
outsb
pop
cs
sub
es
xor
cmpsb
sbb
sahf
sub
insb
xorl
pop
xchg
dec
inc
jbe
stc
sbb
outsb
adc
data16
dec
mov
add
and
dec
sub
inc
scas
mov
and
imull
sbb
movsb
in
int
out
call
add
sub
push
leave
add
dec
and
pop
rcrl
mov
inc
jmp
add
jb
loope
push
adc
scas
pop
andl
sti
jle
std
out
inc
and
mov
mov
call
and
pop
add
pushf
clc
cmpsb
inc
cld
jg
add
xchg
test
push
scas
and
add
sbb
add
sub
test
pop
push
mov
js
add
mov
pop
call
pand
cld
pop
jno
call
dec
ret
shrb
imul
out
pop
push
popf
push
mov
decl
notrack
pop
ljmp
add
mov
data16
out
mov
pushl
push
scas
push
cmpl
mov
scas
vmwrite
add
mov
cmc
test
add
sbb
add
add
pop
mov
sbb
inc
xor
ja
sub
notl
push
sub
add
pop
mov
out
add
mov
sbb
sbb
pop
aam
push
fs
sub
outsb
iret
push
and
pop
and
jnp
xor
and
mov
sub
and
incb
push
outsl
mov
push
and
test
mulb
jl
sub
out
and
push
and
lret
cmc
rorb
pop
and
and
xchg
call
add
insb
cltd
sub
and
popa
add
jo
out
jle
add
add
inc
jmp
mov
sbb
mov
sub
inc
push
and
cmpsb
ret
sbb
imull
fisubl
jne
mov
mov
xor
and
cmpl
xor
sbb
negb
arpl
out
xchg
popf
and
into
mov
sub
je
add
call
sbb
int3
pop
lcall
sub
jae
and
add
in
or
dec
lcall
in
ljmp
ljmp
out
incl
in
in
in
ljmp
call
cli
pushl
sbb
fdivrl
ljmp
incl
stos
fdecstp
jmp
je
outsl
cltd
pushl
mov
push
cmp
jo
jmp
jo
out
jb
jp
idiv
xor
in
popf
mov
outsb
sbb
stc
jno
popf
icebp
sahf
and
jno
fldenv
and
sti
xchg
and
shll
enter
fists
jmp
xchg
call
and
mov
jmp
jns
push
call
ja
push
add
movsb
addl
and
inc
inc
lcall
mov
xor
and
or
incb
movsb
and
stos
push
fnstsw
add
mov
or
and
jbe
mov
push
xor
mov
subb
and
inc
xchg
mov
push
pusha
movsl
mov
out
loope
call
ret
aad
or
call
add
shr
popa
cmp
add
mov
loop
lret
sub
addr16
and
into
inc
out
popa
ljmp
into
pop
push
cmp
xchg
pop
subl
pushf
jle
sub
das
cmp
push
mov
pop
lcall
push
repnz
push
jne
ficoms
call
xchg
jg
ret
mov
adc
xor
lcall
sbb
lods
rcrl
add
jne
out
inc
iret
or
std
xchg
inc
push
sbb
xchg
sti
sarl
jne
cld
je
cld
je
ficoml
dec
sbb
push
call
or
ljmp
or
cld
dec
add
sub
sahf
mov
in
pushl
pushl
call
jne
push
jne
call
enter
push
mov
jnp
rclb
sub
add
jge
addr16
sbb
pushl
jg
adc
sub
pop
nop
push
inc
adc
dec
push
sbbl
inc
je
das
inc
pop
popa
aam
ret
mov
cmpsl
and
cmp
cs
push
and
mov
cld
sbb
sub
mov
or
inc
addl
call
sub
inc
aam
cld
inc
inc
mov
in
pop
loop
imul
add
mov
iret
or
popl
jns
jne
sub
ret
data16
xchg
jge
gs
sbb
xchg
lds
test
and
scas
sbb
aaa
lds
std
pop
stc
add
sub
ret
pop
loop
mov
xchg
lock
pop
push
mov
inc
push
pushf
bound
ds
xor
and
sbb
sbbl
xchg
and
or
add
mov
lods
add
add
jb
or
ljmp
lea
mov
pop
add
push
mov
mov
pop
lcall
or
loope
add
cltd
out
sets
cmpsl
incl
ret
hlt
int
call
mov
add
sub
dec
mov
lret
mov
dec
mov
sub
push
push
sbb
mov
std
mov
mov
shl
fucomi
rcrl
xor
rcll
push
mov
aam
out
push
test
lcall
xchg
add
dec
ljmp
mov
add
or
jae
xchg
inc
repz
push
jae
dec
add
decb
push
dec
jne
sti
je
outsl
xchg
cld
jmp
inc
clc
adc
decl
cld
je
paddw
rorb
lock
cmp
cld
out
mov
sub
mov
pop
sbb
jl
add
xchg
and
stos
and
mov
sbb
stos
cmp
jne
inc
push
adc
jne
pop
nop
pop
push
mov
nop
psllw
or
je
sbb
xor
psrlw
call
cmp
pop
sbb
popl
xchg
inc
sbb
mov
push
or
and
sbb
mov
pushf
repz
cli
sbb
outsl
jno
push
nop
mov
fstl
dec
sub
push
scas
popa
daa
dec
hlt
lods
mov
insl
jge
xor
push
or
lock
sbb
mov
lock
jmp
lods
cld
mov
lock
pop
jle
inc
lods
rorb
leave
lods
jno
cmp
pop
fsubr
daa
add
shrl
outsl
mov
push
add
push
mov
aad
add
mov
fcos
xchg
push
add
movsb
mov
add
mov
pop
jne
cmpsb
mov
fiadds
dec
out
xlat
push
jmp
cmpb
lea
push
loope
inc
jmp
data16
call
and
push
jne
xchg
addr16
stos
inc
sub
add
jmp
mov
add
xchg
mov
inc
insl
outsb
incl
clc
stc
je
fadds
incb
inc
adc
cmp
je
call
movl
ret
add
add
add
loop
dec
loop
dec
loop
dec
jmp
adc
jne
jmp
cmpb
jae
xchg
jp
add
sub
push
push
jp
add
sbb
je
aas
push
xchg
lcall
je
pop
jb
call
mov
test
mov
lcall
mov
decl
adcb
jns
adc
mov
pop
push
insl
push
lcall
cwtl
jmp
xchg
hlt
imul
mov
ljmp
inc
push
push
cmp
call
dec
nop
sti
push
push
outsb
incl
int3
or
leave
popf
push
icebp
push
pop
mull
incl
mov
lods
decb
sub
jnp
pop
cmpb
stc
xchg
pop
call
dec
jl
jmp
pop
das
adc
add
call
shlb
nop
mov
adc
gs
sbb
adc
insb
pop
mov
add
add
test
mov
cmp
add
std
pop
adc
mov
repnz
mov
dec
stos
or
jle
sbb
sbb
stos
test
sub
stos
adc
aam
sub
js
adc
je
or
inc
cli
out
or
push
lea
mov
add
mov
pop
adc
pop
push
ds
jecxz
xor
mov
mov
push
adc
rorb
movb
sbb
pop
ljmp
dec
or
aaa
jne
or
cmp
cld
push
orl
lret
adcb
andl
call
cld
decl
std
out
add
cmc
decb
addr16
out
xchg
shl
cmp
jg
jmp
in
sti
push
lds
mov
push
jne
in
adc
inc
orps
jne
in
cmp
add
mov
push
jne
in
sub
inc
pop
push
jne
in
sar
mov
push
inc
ljmp
leave
xchg
jl
add
lods
enter
cwtl
pop
cmpsb
jne
ljmp
cmp
xchg
sbb
add
dec
xchg
sbb
inc
mov
ljmp
mov
and
lcall
adc
add
fs
sbb
add
stos
sub
into
mov
aad
addr16
aad
out
js
jnp
icebp
unpcklps
xchg
in
or
adc
xchg
xchg
adc
nop
cmp
dec
sbb
lds
cmpsb
jne
divps
mov
sbb
cwtl
mov
setg
mov
pop
pop
adc
movsb
or
cmp
sti
push
mov
pop
cmp
std
add
add
sbb
sbb
jle
adc
xchg
les
mov
rolb
add
into
xchg
pop
cmpsb
dec
or
mov
loop
xchg
vmlaunch
icebp
out
inc
scas
xchg
or
pop
call
outsb
push
or
sub
push
pushl
add
mov
testb
inc
pop
test
jmp
jns
mov
jmp
mov
xor
out
fisttpll
push
std
xchg
push
xorl
or
mov
fmulp
cld
addr16
push
sar
xor
out
inc
lcall
dec
icebp
addr16
add
dec
push
out
std
cmp
mov
lock
aas
test
cmpsl
mov
cwtl
test
add
xchg
add
call
push
adc
xchg
add
inc
sub
jne
inc
addr16
or
inc
add
test
repnz
std
decl
inc
sub
imul
test
add
mov
cmp
decl
adc
mov
xchg
jg
push
jne
jb
xchg
jmp
sbb
jne
lret
cwtl
roll
push
pushl
jmp
mov
xor
mov
sub
sbb
cwtl
mov
push
call
mov
push
jmp
push
mov
in
push
call
mov
je
jb
sub
sbb
jne
add
cmp
push
mov
add
push
sub
mov
or
cld
add
mov
jmp
mov
or
dec
call
mov
fimuls
leave
push
cmp
js
add
push
imul
test
or
inc
lret
jp
subl
push
jns
jmp
pushl
call
add
add
call
add
je
out
mov
mov
pop
mov
inc
dec
ret
mov
jnp
or
insb
cmp
mov
mov
je
or
cmpsb
lret
jmp
enter
sarl
jmp
jl
pushl
decl
jmp
sub
add
and
push
lret
or
mov
add
dec
jne
xchg
mov
lcall
loope
sub
mov
decl
xchg
jb
jmp
mov
aad
mov
jg
sub
std
je
out
lahf
xchg
incl
mov
xor
push
jmp
xchg
jmp
xchg
mov
cld
mov
inc
std
call
add
cmp
divb
jp
out
add
call
adc
dec
ljmp
pusha
push
add
xchg
clc
or
adc
test
mov
sbb
call
xchg
and
or
scas
mul
repnz
pushl
ljmp
jmp
push
add
xchg
push
xchg
pushl
add
dec
lcall
sub
or
adc
or
ret
jno
popf
jmp
add
incb
xchg
lock
ret
mov
mov
jo
or
inc
mov
cwtl
fwait
lds
pop
cld
sbb
or
sbb
jne
or
xchg
movb
add
add
cmc
jnp
loope
test
lods
mov
call
lock
pop
or
lahf
mov
incb
roll
mov
outsb
dec
or
mov
jnp
pop
add
jo
je
sub
jp
dec
push
cs
mov
push
incl
fdivl
push
movsl
arpl
cmc
mov
add
js
out
inc
add
push
adc
inc
lds
jne
mov
sarl
mov
mov
add
mov
push
imul
into
mov
insb
into
push
lcall
push
pop
jne
mov
inc
aad
call
jmp
add
push
incb
out
sar
push
fmul
mov
daa
dec
out
xchg
clc
decb
sbb
adc
add
cmp
stc
mov
lock
inc
or
sbb
out
idiv
sbb
in
inc
stc
incb
mov
add
out
mov
cmp
je
dec
xchg
mov
sub
mov
xor
call
clc
mov
idivl
daa
or
mov
jns
pop
mov
les
call
jb
popa
fdivrl
call
sti
push
inc
test
inc
rolb
insl
jl
aas
xlat
sbb
sub
jne
and
incl
or
inc
sbb
shl
sbb
add
fimuls
mov
lock
add
cmp
push
jne
mov
jmp
decl
mov
fldenv
sbb
ds
push
jns
jns
or
mov
pop
inc
jle
cmovns
filds
xor
lcall
incb
sub
negl
jns
sbb
pop
or
push
push
adc
mov
stc
add
inc
push
sbb
sbb
sbb
add
push
mov
adc
push
js
incb
add
sbb
outsb
mov
imul
ja
incl
push
sbb
ds
xorl
jns
call
mov
cltd
mov
mov
add
xor
or
out
outsl
fidivrs
add
into
xor
cmp
sbb
mov
rorb
ljmp
ret
add
mov
xchg
ret
add
mov
dec
ret
push
mov
cld
mov
jae
call
push
inc
sti
push
imul
addr16
push
jne
out
mov
cld
test
push
sub
std
je
iret
cld
pushl
data16
add
jg
jp
out
repnz
push
jg
jmp
je
mulps
incl
xor
cmp
std
addr16
std
jg
stos
add
add
shr
pushl
repz
addb
out
add
jg
jne
push
loope
xchg
pusha
clc
mov
ret
test
jno
jno
mov
mov
cmc
lds
mov
mov
mov
scas
lds
lcall
add
lock
cld
repnz
movl
or
orb
push
aam
jne
add
outsb
popf
add
mov
add
or
add
insl
jns
jmp
xor
mov
push
es
inc
test
mov
fdivl
pop
add
test
push
rclb
ljmp
cmp
lret
jmp
pushl
imul
sub
bound
clc
push
ret
insl
mov
add
fsubr
cmp
jmp
std
je
sahf
cmpsb
add
sub
add
jmp
hlt
cmp
ret
roll
mov
or
adc
incl
push
or
sub
and
cld
mov
inc
jmp
cli
add
sbb
inc
add
or
add
mov
les
add
add
or
je
mov
add
add
adc
inc
xlat
test
add
pop
cmc
cmp
lret
inc
inc
add
xlat
add
add
mov
and
out
push
sub
or
push
jns
subl
add
sub
jl
rorb
xorb
xchg
adc
add
pop
sub
add
mov
push
dec
xorl
cmpl
jne
or
jmp
mov
add
shl
push
call
stc
aaa
lea
push
pushl
push
call
jbe
lret
rol
sub
leave
adc
decl
insb
add
call
movb
cmpsl
adc
jle
mov
outsl
insl
or
scas
repnz
xchg
pop
incb
pop
push
jmp
add
cmp
mov
sti
sbb
xor
mov
rorl
cmpsb
repnz
scas
loop
decl
add
call
push
sbb
sub
cld
xor
loope
mov
jg
push
mov
mov
test
xor
mov
cld
fildl
jmp
or
call
push
outsb
jns
cld
sti
add
inc
jmp
pop
into
mov
pop
add
mov
jmp
fcoml
add
push
jns
jmp
icebp
ret
lods
add
add
xchg
adc
in
sti
or
int
push
push
imul
xchg
mov
push
shlb
lock
add
addl
aas
xchg
decb
add
add
dec
inc
cld
sbb
icebp
cmp
icebp
mov
push
insb
push
add
jmp
gs
push
aad
ds
cli
je
push
push
clc
out
add
out
imul
add
inc
add
cmp
jmp
xchg
inc
hlt
push
jge
pushl
out
adc
add
or
add
xorb
out
cmpb
je
push
cmp
add
cmpsl
dec
mov
inc
push
call
lods
xchg
and
ljmp
push
call
test
lock
inc
sbb
call
cmpb
jae
push
scas
pop
pop
add
lret
inc
add
jge
out
sahf
add
add
sub
cmpsb
in
cmp
sarb
pop
mov
adc
icebp
push
in
out
and
mov
jbe
data16
inc
inc
mov
call
inc
add
xor
xchg
jecxz
or
lret
adc
out
add
inc
ljmp
mov
mov
push
out
xor
incb
push
scas
testb
lods
incb
outsl
inc
xchg
cld
mov
adc
and
std
sti
xchg
in
cwtl
jmp
imul
sti
ss
aad
sub
outsl
mov
push
call
mov
outsb
icebp
jmp
xorb
push
or
sti
xor
xchg
jno
jmp
test
clc
repz
clc
repz
clc
shl
popa
inc
arpl
jo
shr
popa
jae,pt
pusha
ljmp
iret
cmc
aam
ss
jmp
dec
cld
push
add
psubsw
add
je
jmp
mov
jno
inc
ds
sbb
stos
test
adc
push
je
cmp
mov
jmp
jne
ret
sbb
rorb
add
push
mov
push
mov
xchg
push
call
loop
outsb
add
jmp
inc
stos
push
rol
in
leave
roll
add
jne
cld
jae
jmp
lcall
cld
jae
iret
inc
dec
pop
rorb
testl
cld
sbb
call
sbb
or
incl
outsb
ss
mov
jle
add
ja
add
add
mov
std
lcall
sar
xchg
int
je
inc
add
std
push
add
idiv
jae
mov
ljmp
xchg
shlb
pop
inc
add
fsts
add
or
mov
int3
or
ja
jge
mov
mov
movl
call
scas
incl
xor
add
in
sub
icebp
push
daa
aas
call
ds
add
inc
xor
add
testl
data16
inc
mov
mov
ret
fiadds
mov
ljmp
mov
in
pop
mov
add
add
ljmp
mov
jmp
mov
add
add
ljmp
adc
add
jbe
mov
jmp
add
outsb
fimuls
out
call
add
cmc
cmpb
add
popf
orl
outsl
mov
sub
mov
cld
lods
inc
xchg
sti
call
sub
cltd
hlt
call
mov
inc
cmp
add
pushl
movsb
and
hlt
je
bound
ss
mov
insl
fcoml
lret
push
inc
cmp
out
daa
repz
jo
mov
inc
jmp
push
xor
in
push
jmp
mov
add
outsb
shl
add
outsl
sbb
xor
aad
push
jmp
call
ret
repz
add
inc
inc
xchg
out
push
xchg
decl
imul
add
jb
call
cld
push
push
call
daa
addr16
jne
out
push
daa
decl
rorb
jne
out
push
daa
decl
add
in
std
mov
std
jne
out
push
out
dec
decl
in
std
mov
jae
push
push
add
fnstsw
mov
or
ljmp
sub
inc
test
cmc
je
push
outsl
or
cmp
inc
outsl
shlb
push
xor
add
jnp
inc
and
es
xor
outsl
mov
and
outsl
mov
adc
pop
orl
aas
call
cmp
sbb
sub
push
lods
ljmp
xor
jnp
add
mov
xor
add
ja
jmp
push
jmp
cld
js
xchg
add
or
imull
push
icebp
adc
out
inc
sahf
inc
hlt
push
icebp
mov
popa
scas
outsb
hlt
inc
icebp
mov
and
mov
xchg
icebp
add
icebp
add
add
add
std
mov
repz
enter
lock
add
jle
adc
imul
add
jmp
add
sti
mov
call
flds
jae
out
ljmp
lock
xchg
cmc
mov
jns
mov
scas
add
jmp
dec
out
dec
push
filds
shrl
out
dec
es
std
push
sub
add
push
jp
test
add
fs
ret
in
testb
add
cmp
mov
pop
je
stos
inc
add
cmp
add
ret
jae
jle
add
cmpsl
adcb
aad
push
push
das
xchg
push
add
into
sub
addr16
jne
lret
rcll
add
test
pop
call
jmp
dec
add
jb
call
lea
mov
cld
dec
adcl
mov
std
push
daa
hlt
jae
or
pushl
out
f2xm1
std
call
mov
fdivrs
mov
scas
lock
mov
cmp
flds
or
and
rolb
in
push
call
subl
icebp
decb
push
ja
add
decb
aad
out
inc
icebp
push
cwtl
test
inc
aaa
mov
cmp
icebp
out
stos
add
cmp
arpl
add
pop
fiadds
mov
insl
add
aas
jg
jmp
lock
mov
pop
je
sub
mov
icebp
shr
les
jmp
inc
mov
in
xchg
fildl
dec
push
jmp
ret
adc
icebp
aad
push
loop
in
sbb
mov
adc
push
lock
push
mov
inc
ja
lock
cwtl
lock
stc
adc
daa
in
sbb
lock
xchg
icebp
adc
cwtl
lock
scas
out
add
lcall
std
sti
test
jmp
fisubs
test
inc
cmp
mov
out
mov
test
push
mov
daa
adc
sbb
in
je
jne
cld
xchg
push
mov
popa
jne
push
or
pop
lods
je
or
je
gs
mov
push
idivl
sub
in
outsb
adc
or
xchg
cld
addr16
add
add
push
call
mov
push
std
ljmp
hlt
push
add
call
dec
cmp
push
jg
cmp
outsb
inc
cld
iret
add
incl
pop
fdivl
das
mov
push
out
pand
jae
pop
sti
add
jae
pushl
testb
push
test
jge
jle
add
adcl
mov
add
mov
jae
je
sub
mov
push
xchg
jg
pop
xor
inc
push
add
stos
jbe
and
pop
and
xchg
push
push
add
into
jmp
mov
hlt
xchg
xlat
cmp
or
add
cmpb
cmc
inc
mov
aam
adcb
push
dec
lods
cli
out
sub
es
jg
xor
mov
stc
in
stos
icebp
sbb
out
adc
or
cmpsl
add
popf
mov
out
pop
ljmp
iret
jle
in
fdivs
fcmovnb
jle
in
enter
mov
outsl
mov
add
outsl
stc
in
sub
popf
jbe
fstps
out
nop
jmp
call
popa
jmp
dec
push
jmp
push
in
shll
inc
jmp
jbe
fldenv
xchg
jmp
inc
cltd
fnstcw
adc
or
xchg
xor
add
jg
push
push
test
sbb
add
cmp
pop
add
call
sub
in
out
inc
call
out
inc
out
shll
scas
or
or
mov
out
sub
jne
bnd
or
cltd
cmp
jmp
jl
lock
in
out
mov
add
push
inc
add
jb
std
jne
fdivl
add
ret
daa
out
je
cmp
add
adc
mov
jo
push
mov
fs
in
clc
jo
pushl
pushl
clc
jo
call
push
jle
lcall
lock
fdivl
aas
outsb
push
add
loopne
clc
movsl
rclb
mov
cmpsb
repnz
fcomp
push
pushl
loopne
add
aaa
ljmp
out
add
pop
repnz
and
push
push
es
cmp
mov
fcomps
mov
scas
inc
add
lods
adc
jg
out
rcrb
into
mov
add
clc
incl
es
push
add
nop
ja
cltd
xchg
add
cmpb
fsub
je
outsl
or
imul
mov
andb
out
pop
mov
stc
push
insl
mov
in
or
and
sub
pop
das
sub
mov
jmp
jmp
inc
jmp
fildl
punpckhbw
sarb
inc
jmp
jbe
in
mov
add
xor
add
mov
inc
mov
add
in
inc
jmp
inc
mov
insb
push
in
aaa
cmpsb
inc
add
jg
inc
jmp
mov
cmp
xor
in
fs
es
fsts
and
je
add
and
out
shl
dec
mov
imul
rcr
les
mov
mov
add
mov
jmp
scas
cltd
xor
in
ret
xchg
cmc
xor
jmp
mov
add
sbb
add
xor
sub
enter
fsubl
pop
cmp
inc
add
pavgb
add
cmp
pop
enter
fmull
incl
or
pop
add
jne
fdivl
iret
jp
push
movsb
rolb
mov
data16
repnz
lock
jge
pushl
cmp
sbb
inc
jae
add
mov
add
xchg
decl
dec
push
add
adc
inc
add
fcomps
sbb
pop
xchg
inc
add
movaps
fsub
je
inc
inc
xor
inc
jle
add
cwtl
inc
add
rolb
mov
adc
test
repz
mov
jle
mov
jmp
or
lret
fnstenv
jns
aas
xchg
out
std
shll
je
shrb
inc
mov
add
add
add
add
jl
out
loop
pop
ret
add
sub
mov
add
dec
incb
pop
pop
and
sbb
add
fldenv
inc
jle
jmp
add
pop
jmp
mov
fldenv
jg
loop
in
fld1
add
loope
cld
fnstenv
in
mov
inc
dec
xlat
cmp
les
imul
xor
add
out
pop
ljmp
mov
add
cli
inc
add
mov
loopne
test
ret
cmpsl
cmc
jne
test
xor
faddl
mov
fwait
loopne
sarl
add
add
add
loopne
sub
sbb
or
imul
out
aas
test
test
xor
je
call
out
pop
loopne
addr16
push
lret
add
in
leave
push
or
push
sbb
add
cmpsl
outsb
sub
mov
call
mov
ja
call
adc
add
mov
inc
add
jecxz
or
mov
jle
in
xor
pushf
and
sub
cmpb
cmp
jns
inc
add
lock
out
or
jae
push
call
inc
insb
add
fsubs
add
cmp
call
mov
enter
imul
cld
int
fwait
xchg
test
icebp
add
or
js
cld
jns
or
fldl
jecxz
or
int3
sarl
sti
call
repz
mov
push
jnp
push
mov
sbb
test
sub
push
push
jle
add
jge
add
jle
push
loopne
dec
push
call
xchg
aas
jg
jmp
jmp
insl
mov
dec
loope
ljmp
movsb
inc
mov
jle
lods
loope
ficomps
popf
adcb
or
inc
or
stos
or
lds
imul
ficoms
sbb
add
jmp
andl
imul
test
ficoms
jmp
inc
jg
cltd
loopne
or
add
mov
jl
je
ficoms
inc
pop
dec
test
add
lock
push
fldcw
sub
pushl
jmp
mov
gs
outsb
lahf
addr16
inc
add
gs
inc
jmp
imul
call
and
add
mov
inc
jmp
add
out
fdivl
sarl
push
mov
add
push
pop
gs
jl
push
add
xor
call
aas
add
out
mov
add
add
sbb
call
ljmp
jns
mov
push
mov
add
or
adc
lcall
push
loopne
adc
mov
test
dec
and
add
push
decl
or
incl
push
call
ja
jae
scas
pop
dec
add
int
or
ljmp
xor
jo
lea
mov
add
dec
fstl
insl
ret
je
pop
cmp
dec
das
add
add
call
or
push
popl
jmp
add
add
ja
repnz
pop
out
dec
loopne
je
xor
js
cmp
je
inc
rorb
call
add
xchg
push
call
sub
xchg
add
fimuls
jmp
pop
ror
pushf
mov
fidivl
add
push
shr
pushf
pop
out
push
cmc
jmp
dec
jmp
push
ret
cld
mov
fidivl
clc
cwtl
push
or
rclb
ss
in
addr16
loope
cmp
jge
pop
xor
jmp
gs
cmpsb
mov
ficoml
xor
mov
push
clc
and
cmp
jmp
jmp
jmp
pushf
in
add
mov
add
fs
test
jmp
loop
add
mov
aam
into
mov
jle
mov
mov
mov
adc
fdivr
cmp
jmp
mov
dec
je
loope
jle
dec
cld
dec
fdivs
push
or
mov
xor
loope
dec
or
or
jmp
cmpb
call
add
std
jmp
add
mov
xlat
xchg
push
mov
jg
je
les
add
ds
add
cmp
pop
mov
add
and
adc
pop
mov
data16
add
fmuls
incl
add
push
mov
inc
fisttpl
into
dec
add
imul
jg
add
mov
test
stc
jmp
cmp
repnz
fidivl
gs
leave
out
test
mov
xor
push
inc
add
cmp
aad
cltd
stc
ficoml
sub
mov
dec
inc
xor
aad
jno
fldt
fsin
jmp
fnstenv
push
fdivr
dec
push
data16
rep
add
in
dec
nop
sbb
inc
ficompl
lea
xlat
xor
scas
or
and
fiaddl
lock
call
add
int3
in
call
mov
stos
mov
xchg
lcall
test
cmp
cwtl
xor
roll
call
das
ss
xchg
xchg
cmp
into
sti
fwait
pop
xor
test
xchg
call
jge
je
push
dec
adc
je
add
dec
or
aad
inc
testl
add
add
pushf
sub
adc
push
popa
inc
lock
pushf
inc
xlat
push
loope
enter
sub
or
out
push
bound
jle
fists
aam
loope
add
cmp
aam
std
adc
sti
scas
data16
call
xchg
xlat
xchg
cmp
mov
xlat
incb
inc
adc
jmp
mov
push
or
imul
nop
mov
mov
decl
std
jne
adc
jne
jmp
add
sarl
test
jp
cld
call
mov
decl
lods
push
or
mov
in
push
ret
jo
push
mov
mov
xor
push
lods
dec
push
push
fimull
call
cmpl
add
push
xlat
xor
cli
mov
mov
jae
and
or
addr16
cld
mov
dec
fdivr
add
je
jae
aad
mov
pop
jmp
fnstenv
mov
jae
add
cmp
mov
xor
mov
mov
mov
push
mov
int
mov
das
mov
xchg
dec
or
mov
add
add
jg
jmp
add
xor
xlat
lret
push
ja
sbb
push
cmp
inc
cmp
daa
aas
mov
rolb
jg
shl
cwtl
imul
test
inc
cmp
scas
add
cmp
sbb
cs
not
ss
cld
push
lea
jmp
insb
lret
aas
sub
cmp
xor
sar
sub
test
shlb
popa
jnp
mov
int3
sbb
rclb
dec
inc
inc
jmp
sarb
xchg
sar
repnz
add
fxch
add
rorl
jmp
aad
add
sub
subb
mov
dec
or
cltd
jl
addb
enter
movsb
push
sar
jmp
aad
add
icebp
xor
add
mov
cmpsl
pop
add
pushl
es
push
cli
mov
mov
mov
jp
adc
mov
or
jns
jne
pop
add
fdivs
in
mov
call
out
push
add
out
push
mov
call
out
inc
mov
pop
sahf
ret
xor
andl
push
push
mov
inc
inc
add
fiaddl
decl
arpl
mov
xchg
xor
jmp
rclb
les
ss
add
mov
xlat
xchg
sti
outsb
add
mov
fiaddl
add
fiaddl
add
movsl
mov
mov
jg
xor
mov
fs
je
out
xor
push
cmp
cwtl
test
push
inc
push
loope
inc
mov
add
inc
mov
cld
dec
lret
cltd
iret
call
or
add
shl
mov
sbb
popa
call
sbb
mov
push
icebp
ror
test
jmp
lret
xor
pop
pop
add
iret
mov
jle
into
mov
mov
inc
fisubrs
adc
push
jnp
test
mov
cmp
inc
mov
xchg
inc
jg
add
les
mov
cmpl
adc
incb
push
test
gs
into
jmp
cld
add
out
inc
loope
call
ret
jmp
mov
int
je
leave
dec
sarl
add
hlt
cmp
jmp
and
jmp
mov
add
insl
and
jmp
scas
xchg
call
pop
mov
mov
sbb
ret
addb
adc
cmpsl
test
add
loopne
roll
push
movsl
inc
add
push
add
add
inc
call
addr16
add
push
dec
inc
lock
mov
cmc
aas
add
xlat
xor
addl
jae
jge
jmp
add
rorb
jne
mov
call
sub
data16
loope
call
mov
add
add
push
leave
add
loop
cmp
mov
mov
adc
int3
inc
add
xchg
roll
cmc
jp
cmp
inc
pop
push
rcr
test
add
cmp
sbb
mov
sbb
cmpsb
fs
inc
mov
arpl
sarl
add
cltd
inc
add
pop
dec
incl
add
sarb
add
cmp
add
add
es
add
add
xor
cs
clc
xchg
inc
test
cmp
outsl
add
add
hlt
aad
xchg
lret
push
cld
mov
ja
int3
inc
lock
jbe
sbb
push
int3
popf
into
pop
push
loope
movsb
lret
into
dec
push
test
lret
xor
scas
lret
incl
imul
inc
xor
jmp
sti
sbb
test
mov
push
or
add
pop
and
pop
jmp
sarl
bound
add
jb
cli
mov
pop
xchg
or
or
cmp
dec
cld
sub
cld
jg
add
imul
xlat
or
jge
pop
aas
adc
adc
mov
adc
leave
inc
jb
roll
leave
inc
add
push
stc
sub
out
pop
and
add
sub
decb
add
addr16
andl
mov
mov
std
jne
dec
inc
cld
mov
std
incl
cmpsl
add
lock
add
imul
outsl
adc
inc
add
hlt
add
dec
dec
lock
int
sub
dec
je
fdivl
or
les
jae
cwtl
add
jne
lods
push
inc
pop
add
add
sub
cld
loop
sub
mov
sti
decl
sbb
add
insl
lret
incb
into
addr16
inc
push
mov
add
fistpll
xor
mov
mov
pop
add
or
aaa
sbb
add
pop
push
call
inc
call
mov
inc
jge
sbb
adc
add
add
fldenv
mov
enter
fsubrl
lret
fsts
and
loopne
stc
pop
mov
dec
sbb
add
repnz
ljmp
add
add
xchg
fstl
pop
sbb
add
push
xchg
fiaddl
mov
cmp
loope
sub
sbb
popa
pop
sub
mov
dec
stc
pop
ljmp
fisttpl
add
addl
faddl
enter
push
pop
add
jo
loope
jmp
mov
hlt
in
sbb
cmc
mov
inc
xor
icebp
je
test
call
pusha
test
lock
sbb
sbb
gs
xchg
xchg
adc
cmp
je
ja
pop
sar
add
jno
pusha
mov
incl
cmp
xor
incb
call
mov
int3
xor
decb
fwait
jo
call
jge
aam
enter
add
xorl
decb
pop
pushf
jmp
dec
inc
les
mov
std
incl
mov
mov
jmp
lret
xchg
add
ljmp
xor
std
or
jne
add
adc
cmpb
pop
test
std
jne
mov
mov
inc
je
je
jl
or
nop
push
ljmp
dec
dec
fsubs
into
cli
out
lods
adc
enter
subl
add
shr
test
out
test
cmp
int
jl
dec
sysexit
sahf
mov
out
sti
dec
or
cld
imul
mov
push
incl
push
push
pushl
push
hlt
push
push
push
jmp
push
lock
push
pop
flds
inc
les
push
add
les
and
adc
and
insl
push
push
fnstcw
ljmp
push
push
fldcw
adc
hlt
push
loope
sub
push
rol
sbb
push
rol
ret
pushf
jp
andl
cli
lds
adc
imul
testb
add
imul
inc
mov
cld
call
out
push
cmp
out
jle
ret
dec
jle
leave
cld
stc
fisubrl
mov
cld
call
roll
or
pop
dec
lods
jbe
fs
add
push
adc
jge
push
clc
ret
out
adc
je
rorl
jno
inc
jmp
testb
inc
jmp
jnp
test
in
ljmp
cmpb
xor
loop
cmc
ljmp
mov
cmc
decl
mov
call
sbb
mov
ljmp
std
call
cmc
js
mov
mov
std
jmp
out
add
test
je
test
ljmp
std
push
fprem1
ljmp
std
mov
into
std
ljmp
or
mov
rorb
out
dec
out
lret
call
push
push
enter
add
ja
cli
call
xchg
xchg
jp
je
sub
sbb
jp
add
rorl
mov
mov
je
inc
dec
or
rclb
loope
add
out
push
jno
add
pop
dec
or
xor
cld
xor
stos
ja
into
ret
add
add
inc
push
sub
inc
jmp
add
or
cmp
push
rorl
mov
out
jmp
inc
add
add
ret
lret
cmc
dec
rorb
adc
daa
test
add
mov
push
shlb
mov
cld
mov
mov
sub
jmp
ret
jae
cmp
std
mov
call
dec
mov
mov
cmp
rcrl
js
add
add
adcl
in
inc
adc
mov
or
jne
ljmp
mov
inc
mov
jl
decb
fwait
ds
mov
test
loope
adc
lods
inc
mov
gs
filds
pusha
xchg
adc
mov
movsb
sub
rcr
cmp
jo
mov
or
inc
inc
or
adc
je
scas
mov
mov
mov
pop
leave
ret
push
mov
or
push
mov
sub
push
push
add
mov
xchg
add
std
mov
jge
inc
inc
push
call
ljmp
push
pushl
shll
testb
and
ret
dec
add
testb
sub
jne
insl
add
rorb
rolb
jne
mov
insl
test
inc
stos
adc
decl
mov
mov
jecxz
sub
scas
aam
mov
cli
shlb
arpl
mov
or
sub
dec
xor
cmp
jg
mov
mov
ret
add
mov
mov
das
cltd
pop
rcrb
xor
pushl
shlb
fs
mov
fs
add
inc
mov
add
cmp
test
sbb
and
in
add
adc
jmp
lods
inc
sub
inc
mov
pop
inc
lods
adc
les
mov
adc
cmp
cmp
mov
add
mov
or
xchg
les
aaa
stc
addb
mov
mov
addr16
add
movsb
shl
movsb
mov
or
jmp
mov
add
daa
add
dec
mov
add
mov
xor
mov
ret
inc
or
cmc
out
push
dec
inc
cld
cmp
incl
mov
pushl
adc
or
imul
daa
add
or
dec
call
std
jmp
push
inc
or
push
sahf
std
jne
call
call
call
adc
cmp
push
lcall
incb
and
ud0
jge
mov
call
inc
cld
imull
decb
out
push
incl
lock
adc
pop
pop
cbtw
jl
add
std
call
mov
jge
push
fsubrs
or
jl
call
rcrl
mov
or
sbbl
add
scas
xor
je
rclb
data16
mov
push
inc
add
cmp
mov
add
in
pop
movl
mov
add
push
push
inc
cld
mov
stos
cld
mov
or
add
inc
cli
add
add
add
pop
xor
inc
push
out
aas
mov
mov
or
mov
add
mov
jl
push
add
add
add
mov
pop
push
add
rcll
ss
mov
mov
mov
loop
in
fisubrl
jno
cmp
sbb
cs
mov
test
pushl
or
hlt
scas
mov
push
scas
mov
incb
and
mov
push
jb
mov
je
inc
ss
add
mov
fnsave
hlt
push
lods
or
out
jl
lahf
das
addl
cmp
hlt
scas
mov
bound
mov
add
add
adc
lahf
in
add
mov
mov
add
leave
push
adc
push
pushf
pop
push
and
add
pop
leave
ret
add
fldcw
imul
outsb
std
jne
push
imul
mov
push
sbb
mov
xchg
or
mov
cwtl
xchg
pusha
lods
lea
in
adc
or
mov
jns
add
incl
or
inc
sbb
incl
adc
inc
mov
mov
mov
mov
add
mov
pushf
mov
add
mov
mov
mov
mov
push
or
testb
mov
leave
ror
mov
das
or
fdivrl
hlt
mov
pop
cmpsb
dec
cmp
dec
subl
mov
mov
cmpsl
jbe
daa
ss
mov
insb
testl
leave
jl
add
sti
jbe
inc
add
es
arpl
das
loope
popa
push
cs
incl
cmpsl
mov
cltd
mov
mov
ds
add
xchg
scas
xorl
mov
inc
adc
mov
mov
mov
push
mov
add
lret
mov
ds
add
sti
imul
cmp
roll
imul
dec
add
jno
mov
in
mov
cs
jmp
iret
popf
mov
xor
in
and
push
push
movsb
sub
pop
cmp
mov
adc
movsb
add
xchg
test
push
call
mov
sub
add
jb
cmp
loopne
into
fildl
icebp
sub
loopne
shrb
sub
fadd
addr16
add
jae
outsl
insb
decl
test
pop
enter
daa
mov
mov
in
stc
jecxz
mov
cmpl
inc
or
add
lret
lea
push
adc
lcall
call
dec
pop
leave
movsl
cli
call
add
out
je
das
jmp
decb
cmpsl
rorb
mov
inc
lock
imul
loop
call
aam
mov
ds
lret
mov
adc
jae
dec
aam
je
mov
bound
pop
mov
cs
adc
mov
adc
stos
or
xorl
je
sbb
or
cmpsl
and
loope
das
adc
int3
or
pushf
mov
xor
test
or
pop
mov
sub
cs
aad
push
leave
jl
add
outsl
adc
inc
xchg
cld
sub
leave
roll
add
sub
jecxz
mov
pop
adc
loope
inc
and
mov
inc
mov
mov
adc
xor
mov
mov
adc
aaa
std
mov
stc
orb
outsl
incl
mov
divb
orb
xor
inc
enter
call
lods
add
ret
jle
add
add
mov
and
mov
sbb
push
xchg
ss
stos
into
dec
mov
ss
xor
jmp
jmp
int3
push
mov
xor
inc
leave
cmp
jae
insb
xor
jmp
clc
adc
xchg
xlat
or
adc
mov
mov
xor
out
sub
loop
xor
cmpsw
mov
mov
add
dec
leave
sub
test
sbb
notl
je
insb
or
aam
push
cltd
outsl
push
fs
je
hlt
scas
adc
jo
mov
add
mov
bound
sub
add
mov
pop
push
pushl
mov
add
je
add
adc
or
std
mov
jmp
out
cli
jae
sub
add
rorb
cli
call
mov
push
decl
out
enter
mov
cwtl
aaa
jns
test
leave
jl
add
mov
sub
pop
inc
call
add
rcr
adc
mov
xor
out
and
cmp
in
cmp
rcr
xor
js
dec
out
ret
and
lcall
addl
fcmove
add
add
iret
scas
je
mov
arpl
aaa
out
or
lods
add
int
pusha
inc
xchg
jns
jg
cmp
leave
cmp
mov
mov
jnp
aam
aaa
movsl
fwait
rorb
mov
das
cltd
add
add
mov
leave
xchg
ss
cld
or
mov
leave
nop
add
mov
jno
cmp
data16
lods
shll
shrb
add
call
lcall
pop
xor
lds
test
lods
je
xor
clc
mov
sub
jmp
inc
enter
imul
push
push
call
bnd
add
jmp
pop
stos
cmpsb
insb
pop
aaa
out
mov
cwtl
fdivrs
push
pop
mov
cld
add
add
xor
call
and
add
add
fs
add
jb
out
cmpsb
decl
xlat
call
lea
aas
push
inc
xchg
pop
jae
iret
shrb
addr16
jne
pop
jae
call
add
lcall
roll
mov
jae
push
add
inc
inc
pop
pop
jae
dec
sbb
add
test
jne
cmp
leave
push
add
inc
mov
jge
xchg
mov
insl
and
adc
add
repnz
out
mov
fdivs
push
popa
bound
jl
aas
loope
jmp
mov
out
or
movsb
cmpb
xchg
clc
jg
gs
mov
add
out
ljmp
add
cwtl
add
xor
sbb
es
incl
adc
jne
pop
inc
cld
mov
mov
negb
clc
ret
inc
loop
jmp
in
jne
in
lods
subb
add
add
xorb
out
mov
clc
and
das
pushf
hlt
or
xchg
adc
repnz
add
add
mov
cmp
test
aas
aad
mov
stc
jno
pushf
or
add
lods
xchg
lods
ss
in
xchg
lods
mov
adc
popa
inc
mov
mov
test
sub
inc
subb
nop
lods
push
push
shll
leave
sub
add
or
mov
add
in
sar
add
xchg
mov
clc
jmp
or
inc
jmp
mov
pop
inc
jmp
mov
pop
inc
jmp
mov
cmp
and
cmp
fcoml
push
inc
jmp
adcl
inc
in
xlat
sub
pop
xor
ds
cli
adc
movsb
pop
pop
std
lea
rorb
fs
lea
dec
ljmp
pop
jae
jmp
idiv
loopne
jae
and
ljmp
mov
inc
shlb
add
loop
int3
push
cmp
add
in
std
mov
push
call
add
test
fxch
add
daa
incl
pop
add
in
test
add
push
aam
jnp
jge
add
and
xor
xor
lahf
push
call
add
cmp
add
mov
xchg
jle
mov
cmp
add
mov
incl
andl
cmpsl
jmp
test
pusha
popa
xchg
sbb
fiaddl
call
out
inc
add
cmpsl
je
shlb
mov
rcrb
or
add
arpl
xlat
add
inc
jmp
inc
scas
add
cld
xor
sub
ja
add
inc
jmp
fstl
jns
lods
sbb
das
in
jl
cs
incl
push
das
mov
movsl
or
scas
jo
in
fwait
mov
test
das
stc
test
cltd
in
ret
inc
dec
movsl
aad
pop
movsl
push
enter
fwait
incb
test
das
add
inc
pop
mov
hlt
pushl
mov
jl
clc
repz
add
dec
mov
movsl
dec
sarl
loop
push
push
cmpb
test
mov
lods
mov
add
pushf
dec
pushf
pop
iret
mov
jge
jmp
and
lods
sbb
jmp
xor
clc
call
mov
jno
lahf
add
ds
jno
lcall
or
lcall
inc
clc
push
lcall
jne
mov
jge
std
push
test
decl
jmp
inc
hlt
push
sub
push
sbb
push
jge
std
jne
xchg
jge
cld
je
rolb
or
es
mov
add
pop
std
jmp
std
ljmp
std
jne
les
jnp
add
mov
xor
sbb
faddl
mov
into
push
data16
movsl
jae
adc
inc
or
or
mov
cmpsb
not
adc
adc
xchg
cmpb
je
push
pop
pop
mov
dec
pop
mov
xchg
test
out
shlb
xchg
cli
jmp
enter
pop
add
mov
add
cld
inc
mov
jmp
push
sub
fwait
roll
movsl
cmp
xchg
add
sti
rol
idivb
lahf
cltd
mov
inc
bnd
push
adc
add
add
add
sti
add
xchg
loopne
pop
push
iret
inc
mov
mov
xchg
movsb
nop
test
add
pop
push
mov
lods
call
mov
cli
lods
lcall
push
cmp
out
cltd
add
test
jmp
pop
orl
out
push
popa
enter
mov
push
pushl
test
mov
adcl
jae
push
popa
enter
mov
push
cld
aad
mov
sbb
push
push
lods
fstpt
or
je
lods
dec
rorb
call
push
add
ds
sub
xor
pop
jmp
inc
gs
iret
call
mull
lret
jge
add
vcmpneqsd
lea
aad
and
cli
pop
call
mov
cli
pop
call
xchg
jge
jno
xchg
add
or
push
or
mov
mov
jo
push
fs
call
pop
incl
out
mov
inc
repz
add
clc
or
dec
or
insb
test
or
and
inc
push
stos
jno
mov
mov
push
dec
test
ror
mov
cld
es
mov
je
pop
pop
cld
es
cmp
adc
or
testb
mov
push
repnz
jnp
fprem
sub
jmp
mov
je
inc
test
stos
lds
dec
mov
push
inc
inc
sub
mov
add
pmulhuw
adc
mov
mov
inc
test
push
adc
sub
push
js
mov
and
sbb
stos
or
loope
aas
sahf
lods
mov
inc
sub
jg
xchg
pop
ret
mov
sub
mov
sbb
inc
mov
loop
pop
test
rolb
lods
xchg
inc
test
cltd
pop
add
jecxz
mov
test
enter
push
bound
add
cwtl
add
push
push
or
xchg
aaa
push
inc
inc
cld
orl
or
mov
into
rorb
call
mov
add
sbb
test
add
jmp
je
and
mov
call
je
and
pushf
je
push
push
or
aaa
lcall
ret
call
xchg
imul
push
or
cmc
cs
std
mov
xor
add
push
or
jmp
popa
std
push
call
push
add
adc
lods
pop
pop
jl
rclb
jle
xlat
add
mov
add
idiv
rorb
std
push
mov
in
addl
pushl
jl
or
repz
pop
jl
clc
outsl
rcrb
sbb
cld
mov
jecxz
jmp
jne
jmp
cmp
mov
stos
imul
hlt
sub
push
jmp
stos
pop
pop
pushf
popf
dec
xchg
popf
je
add
inc
movsb
lret
rol
aaa
mov
sub
sti
xchg
test
ss
or
xlat
loope
incb
lahf
addr16
in
add
decb
call
icebp
std
lahf
jae
stos
arpl
movsb
add
test
add
add
test
pop
dec
stos
sub
inc
incl
inc
sbb
test
xor
or
enter
xor
scas
cmp
or
mov
or
mov
lcall
cli
inc
jmp
iret
xor
int
mov
ljmp
add
adc
push
lds
clc
add
dec
jg
cmp
lcall
mov
notb
negb
add
xor
out
mov
test
mov
inc
add
cltd
jb
xchg
jg
test
xor
adc
jge
pop
sahf
adc
or
pop
add
mov
push
clc
inc
and
je
push
jg
cmp
cmp
test
sbb
sub
sahf
enter
dec
cwtl
incb
gs
inc
add
jne
clc
das
negl
push
or
je
aam
jne
aad
jne
insb
push
adc
leave
insl
jne
lcall
out
pop
jne
cld
test
mov
shlb
repnz
jne
cld
shr
pop
call
and
rolb
mov
push
out
or
mov
les
and
out
sarl
add
push
repnz
call
push
pop
jmp
mov
out
mov
mov
add
push
jg
or
and
dec
and
xor
test
ds
pop
gs
add
inc
or
mov
xchg
xor
rol
mov
rdmsr
inc
lcallw
sbb
or
cmp
fwait
pop
push
fwait
imul
test
clc
movsb
or
ljmp
mov
je
roll
sbb
xchg
xor
sbbl
cmpsl
stc
add
lock
stos
push
cs
lcall
sub
jl
push
add
ffreep
or
stos
lret
cs
ljmp
add
inc
rcll
inc
jmp
add
or
setge
adc
fstl
lock
add
stos
sbb
inc
aas
incl
cltd
lcall
in
stos
push
cmp
cltd
xor
xchg
aad
das
adc
add
xchg
xor
lcall
add
add
stos
andb
inc
add
enter
movb
jmp
daa
or
add
fdivr
call
mov
out
aam
jo
xchg
mov
xchg
je
rclb
xchg
mov
add
jmp
add
xchg
adc
push
inc
add
mov
add
jb
lea
cmp
add
cmc
out
addr16
aam
add
hlt
call
lea
jne
imul
je
jp
call
dec
xchg
sub
call
or
incl
push
or
add
data16
or
xor
call
std
jne
jns
or
jns
in
scas
sbb
dec
insb
jae
mov
mov
lods
std
jne
mov
push
mov
cld
es
or
or
int3
pop
call
mov
movaps
aas
inc
mov
jnp
dec
push
ret
add
jecxz
imul
call
cmpsb
popa
cmp
xchg
cmp
or
and
incl
rol
ljmp
xchg
decb
sbb
add
pop
inc
add
mov
or
pop
sbb
xor
shl
xchg
xchg
decl
jmp
mov
lret
or
int
xchg
add
mov
cwtl
mull
test
add
fmuls
stos
pop
xchg
test
mov
adc
mov
xchg
fisttpl
xchg
inc
mov
mov
sub
cmc
stos
scas
xor
mov
inc
mov
xchg
sbb
cmpsb
sbb
out
incl
cltd
xchg
rorb
adc
ret
cmc
fs
out
add
shl
sub
int
mov
cmp
test
xchg
jo
xchg
imul
fs
cmpsb
xchg
fdivrp
adc
test
imul
pop
xchg
jle
or
out
out
nop
xor
mov
popf
subb
iret
mov
sub
cmp
gs
add
xchg
xchg
jb
xchg
add
mov
xchg
incb
dec
lds
sub
pusha
xor
shrb
push
ss
inc
add
push
std
jne
pop
jnp
jbe
jne
pop
clc
push
and
xor
sub
incl
lock
out
lea
inc
add
dec
cld
out
stos
jbe
pop
pop
ret
lret
sbb
push
push
xchg
fidivrl
jp
out
dec
jne
mov
mov
out
jae
fcompl
pop
scas
mov
push
stos
outsb
fiadds
xchg
or
jecxz
adcl
loopnew
inc
add
xor
lcall
ret
push
pop
dec
icebp
pop
xchg
icebp
sbb
add
add
aaa
sbb
jnp
add
fldl
xchg
cli
out
xchg
xchg
and
sbb
add
push
cltd
out
cli
sub
cwtl
lcall
cmp
add
xchg
inc
inc
mov
add
xchg
stos
test
mov
pop
dec
push
sbb
sbb
inc
test
cmpsb
sub
inc
jmp
xchg
inc
inc
flds
sbb
inc
sub
sub
cmpsb
inc
jmp
xchg
ss
xchg
xchg
call
xchg
leave
adc
xchg
call
add
cltd
ret
xor
xchg
mov
sti
cltd
push
mov
xchg
adcb
xor
ss
je
dec
adc
lcall
sub
in
mov
xchg
add
arpl
pop
cmpsb
pushf
pushf
dec
je
cmpsb
xchg
cmp
push
xor
push
sub
xor
je
push
xchg
push
scas
dec
das
leave
stos
mov
push
jb
add
mov
push
das
adc
jle
inc
cld
add
inc
inc
jmp
cmp
mov
sub
out
add
mov
shll
push
bound
pop
jb
or
insl
and
mov
jb
or
dec
rolb
mov
movsb
cli
push
jge
push
clc
repz
call
outsb
inc
cld
mov
lods
es
xlat
cmpb
mov
and
xlat
lea
stos
add
jb
or
sbb
add
mov
data16
mov
mov
xchg
fidivs
jns
sarl
imul
ret
out
je
add
push
dec
sti
das
leave
jl
add
incb
add
mov
inc
adc
shrl
flds
add
push
inc
pop
dec
inc
add
lcall
out
sub
rcrl
sbb
mov
out
add
adc
or
add
repnz
int3
rorl
push
lret
jle
or
shll
xor
loop
mov
sahf
add
xor
add
movsl
add
xor
shrb
dec
push
add
add
cltd
mov
sbb
add
inc
mov
cltd
pop
or
mov
mov
mov
cltd
call
repz
push
arpl
add
jbe
push
lcall
andl
xorb
inc
clc
popl
sub
mov
pushf
dec
mov
fisttpl
dec
mov
adc
out
in
mov
je
xchg
dec
roll
rorb
enter
push
xchg
imul
ljmp
sub
sbb
adc
add
mov
sti
push
pushl
mov
clc
mov
cmpsl
jbe
clc
out
mov
add
jbe
clc
lar
mov
fstps
push
sub
out
sub
call
shl
call
xor
sti
ljmp
jbe
leave
add
push
pushf
push
ljmp
jbe
or
scas
dec
pushl
or
cld
jg
out
popa
in
inc
inc
add
fadds
shr
out
xchg
xor
mov
jl
add
ss
inc
sbb
adc
mov
mov
jns
push
into
sub
lcall
mov
lcall
shll
jg
xor
lahf
mov
mov
mov
pop
add
scas
mov
mov
out
inc
mov
ret
flds
cmpsb
pushf
dec
xor
dec
rolb
add
push
jge
stos
xchg
sti
cltd
scas
sbb
mov
subl
add
cmp
in
xchg
ret
enter
mov
add
add
mov
call
add
stc
xor
fcoms
xchg
mov
adc
lcall
insl
cld
iret
mov
jge
sub
xchg
jb
sahf
xor
mov
inc
xchg
push
adcl
xchg
orl
mov
mov
dec
xchg
inc
into
cmc
out
cltd
xchg
pusha
ds
imulb
inc
sbb
xchg
js
inc
jmp
xor
xchg
xor
mov
test
push
out
lcall
and
jns
add
jo
lcall
shl
sub
push
sbb
jmp
sub
jne
imul
cmpl
push
or
out
lret
call
icebp
add
ljmp
jp
adc
addr16
pushl
enter
sti
aam
ljmp
jp
add
jo
inc
daa
jp
in
lock
mov
into
mov
inc
push
mov
add
inc
cmpl
jle
mov
faddl
xor
dec
mov
jnp
xor
add
or
push
sbbl
add
inc
jecxz
and
mov
mov
lcall
cld
gs
push
and
xchg
jno
cmp
xchg
or
pop
xchg
sbb
rorl
cltd
and
stc
or
adc
fwait
mov
dec
mov
mov
inc
cmp
adcl
mov
icebp
fwait
cli
xor
xchg
addl
push
lcall
jns
dec
push
xchg
mov
popa
inc
cltd
xchg
jnp
add
sub
xchg
cmp
mov
std
xchg
xorl
or
cld
out
cmp
rorl
xor
inc
ds
shlb
inc
inc
push
cld
sarl
in
call
mov
push
lahf
mov
xor
sti
inc
add
sarb
inc
jmp
xor
pushl
inc
jae
add
jle
mov
inc
push
inc
add
add
xor
add
xor
pushl
add
leave
and
imul
inc
out
inc
data16
jne
lods
push
and
imul
mov
psraw
and
dec
adc
jo
repnz
cmpsl
int3
lcall
push
add
cli
ljmp
pushl
popf
nop
dec
and
test
add
aas
add
adc
call
popl
inc
inc
addr16
std
jne
popf
fdivr
mov
jg
inc
mov
push
cmp
xchg
add
mov
add
decb
push
pusha
or
push
mov
jns
cmp
les
push
scas
or
inc
icebp
cmp
sub
inc
mov
add
sub
shl
add
adc
mov
push
subl
repz
add
cmp
add
add
mov
das
test
mov
add
sbb
movb
fidivrs
add
add
add
adc
repz
mov
add
fsts
pusha
leave
roll
fdivrl
fmuls
inc
rol
call
stc
mov
add
mov
mov
inc
cld
les
mov
add
mov
sbb
mov
sbb
push
insb
mov
jmp
int3
test
jmp
lds
lahf
cmp
mov
jg
icebp
cmp
out
hlt
or
aaa
or
push
fwait
movb
imul
shll
jmp
or
jmp
and
mov
cs
imul
mov
sub
fiadds
call
lea
inc
cmp
jmp
mov
rclb
mov
push
push
pop
sub
adcl
stc
inc
decb
xlat
jbe
jmp
cmp
fimuls
jne
outsb
imul
jmp
inc
add
in
shll
add
jae
incl
lcall
xorb
add
rorb
std
jmp
xorl
sbb
lcall
xorl
push
dec
lcall
xorl
rcll
xchg
cwtl
test
imul
pop
push
cltd
sub
dec
ret
cmp
and
into
sbb
repz
in
std
and
mov
sbb
mov
push
inc
sub
cli
pop
cmc
pop
out
int3
jmp
outsb
add
dec
add
cmp
orb
adc
repz
inc
mov
push
shlb
inc
inc
xchg
push
add
add
add
ljmp
icebp
mov
push
jl
roll
push
divb
adc
inc
lret
jmp
push
add
add
jnp
mov
cwtl
adcb
popa
push
cmp
cmp
loope
cmp
mov
lock
insb
cmp
lds
add
js
call
jg
jnp
push
out
call
jg
test
add
shlb
cmp
push
je
outsb
add
pop
adc
jl
pusha
aaa
testb
call
jo
inc
jmp
leave
jnp
hlt
test
inc
jmp
mov
test
mov
incb
add
xor
jae
testb
out
or
inc
pop
not
push
ret
inc
jmp
push
jnp
cld
mov
inc
jmp
cmpsb
cmp
push
data16
insl
incl
std
jne
out
dec
adc
std
mov
hlt
std
call
jp
call
lock
std
jne
out
dec
nop
sti
std
mov
repz
jmp
jns
call
sarb
std
jne
out
dec
adc
std
mov
repz
call
jb
call
call
mov
notl
cld
std
jne
in
incb
cld
std
mov
hlt
std
pushl
call
cld
mov
pop
idiv
call
mov
mov
xor
xchg
cs
testb
jl
xor
je
jno
int3
dec
imul
jl
cmpsw
push
cmp
notl
jl
inc
sub
sti
es
add
mov
mov
jmp
pop
subb
leave
decb
outsl
jnp
jnp
ljmp
jb
pop
call
inc
jnp
push
addl
push
mov
jmp
repz
and
add
or
idivb
js
adc
or
idivb
mov
imul
lret
push
jl
mov
inc
testb
adc
sahf
jl
or
div
mov
sub
imul
inc
lea
xchg
add
or
and
add
pop
ret
loopne
int
int
cmp
in
lock
je
sub
dec
cmpsb
xor
int3
mov
aaa
adc
jle
inc
je
addr16
rcr
test
js
in
aad
dec
push
in
rcr
push
call
fcmove
dec
lds
sti
es
imul
movsl
pop
jp
movsb
ja
xchg
mov
add
std
sar
xchg
jb
jmp
mov
add
sub
ret
add
add
add
xchg
jg
inc
inc
cmpsl
push
out
mov
jno
jmp
xchg
mov
fiadds
inc
std
push
call
pop
ret
or
mov
xchg
inc
inc
push
ljmp
into
jno
push
and
xchg
sbb
add
rclb
cmp
test
pushf
inc
loop
add
add
decl
data16
jb
std
jne
jmp
mov
dec
mov
adc
out
adc
adc
out
xor
xor
je
cmpsb
in
enter
add
test
addr16
repz
push
add
js
jle
sub
mov
cmp
add
fldcw
out
js
cmc
inc
jg
sar
mov
push
xchg
or
out
ja
pop
sub
jae
addr16
in
jmp
ja
movb
int3
xorl
jne
push
fldz
loopne
sbb
js
and
js
je
sbb
je
js
add
push
incb
adc
add
call
andl
jne
out
shrl
pusha
je
inc
mov
subb
je
xchg
jne
js
add
test
mov
jle
add
add
add
cld
call
mov
xchg
test
dec
in
test
mov
add
add
out
add
cmp
jg
sub
or
ret
mov
or
ljmp
inc
fnstenv
push
jns
push
fs
es
incl
dec
idivb
leave
jae
loope
rorb
test
jae
xchg
mov
jae
push
jb
incb
shr
or
test
std
push
data16
inc
xchg
std
mov
in
incl
jb
call
dec
and
test
std
jmp
gs
std
mov
jecxz
incl
push
call
push
and
lock
add
jmp
fmuls
in
std
jp
call
mov
fdivp
incl
jmp
add
cmpl
cmpl
add
add
adc
jbe
into
add
inc
icebp
bound
push
je
loope
adc
push
and
rorl
je
push
jmp
mov
mov
adc
add
jne
cltd
into
push
notb
lock
xorl
jno
imulb
je
add
sarb
inc
pop
fdivs
mov
je
lret
jb
jno
cmp
imul
sub
adc
jns
sbb
jne
pop
sarb
std
je
push
scas
je
jo
insb
lock
imul
fnsave
int3
insb
shlb
cld
xorb
or
je
pop
mov
mov
lods
mov
mov
xchg
pop
sbb
mov
add
xchg
test
jo
loopne
mov
pop
je
stc
shlb
sbb
ret
inc
push
pushl
push
call
movsl
cld
push
mov
or
fadd
incb
jnp
push
insb
imul
fisubl
sub
dec
outsl
mov
call
addr16
test
incl
mov
pop
xchg
ss
sahf
or
pop
call
mov
add
adc
pop
subb
sti
mov
push
pop
call
loop
incl
loopne
testb
add
idiv
pop
pop
add
sub
add
mov
push
hlt
jae
call
or
add
ret
out
mov
subb
add
lahf
dec
js
dec
mov
xor
repz
push
in
xchg
aas
fildl
cmp
mov
neg
repz
jne
lret
clc
xrelease
dec
inc
add
std
mov
cmp
dec
divb
aaa
jb
mov
inc
inc
and
jl
sub
jb
movsb
pop
ficoml
cltd
add
dec
and
stc
outsb
testb
sub
out
data16
inc
lods
js
shll
fdivl
sbb
or
testb
iret
mov
jecxz
movsb
jo
mov
pop
outsl
mov
xchg
jo
subl
jno
inc
fisubs
imul
pop
jno
rcl
xchg
stc
ret
adc
jno
insl
mov
jo
jnp
pop
xor
test
sbb
fdivrl
add
or
negl
insb
std
add
addb
pop
jno,pn
adc
jle
fnsave
jb
jo
insb
push
adc
jno
jno
insb
jae
add
adc
gs
insb
movsl
jo
pop
xchg
jo
insb
sbb
push
daa
jno
insb
cmp
insb
jge
sub
jge
imul
int
xchg
test
imul
fnsave
push
into
cmc
cmovno
sar
inc
lods
iret
ss
imul
add
sahf
scas
pushf
lods
pop
cmp
insl
jae
push
mov
je
pop
pop
test
outsb
imul
int
mov
push
imul
xlat
add
add
dec
pop
push
test
arpl
jl
je
scas
add
inc
cmpsb
sub
or
gs
out
clc
call
lock
not
push
sub
std
ljmp
out
push
int
inc
lock
mov
repnz
decl
fiaddl
add
sti
jmp
fidivl
scas
test
add
rorl
mov
fs
dec
ljmp
out
push
fdivr
mov
inc
push
dec
xchg
add
inc
add
call
add
cmpsl
jle
lea
mov
popa
pop
arpl
subl
add
test
imul
lret
jo
add
sti
mov
insl
xor
jg
cmpb
mov
addr16
ljmp
notb
mov
pop
aam
push
nop
add
fnstenv
fxch
sti
out
shrb
jecxz
inc
add
add
jle
insb
mov
add
testb
imul
pop
cltd
ret
sbb
scas
inc
mov
test
pop
out
lock
inc
ret
ss
inc
mov
jns
call
ret
and
lds
imul
fisttpl
imul
idivl
push
in
fcmovnu
push
xor
add
loopne
mov
rcrl
mov
mov
cmp
push
push
jb
add
imul
jmp
jne
sbb
sub
jnp
mov
mov
cmpl
call
xchg
jp
jmp
mov
out
pop
addr16
mov
pop
loopne
mov
push
lock
xchg
fisubl
adc
ret
mov
inc
imul
addr16
push
jb
adc
jno
push
gs
test
std
pop
leave
and
add
push
mov
adc
cli
push
rolb
mov
jae
dec
ja
call
xor
cmpsb
std
mov
xlat
sbb
je
dec
adc
push
call
sub
jb
inc
lret
add
dec
push
das
push
dec
inc
pop
push
std
jne
lret
mov
fdivr
jmp
inc
jle
out
clc
inc
fldt
sarb
dec
cwtl
aaa
ror
sub
out
mov
lcall
addb
jno
add
mov
add
movsb
mov
pop
inc
push
orb
fisubs
ds
add
stos
jo
je
rclb
cmp
das
pop
mov
pop
add
jae
imul
adc
sbb
je
xor
pop
add
xor
pop
add
mov
popf
mov
rcr
push
stc
add
loopne
pop
jmp
mov
sbb
sub
xchg
icebp
add
sti
js
xchg
add
fs
push
pop
pop
or
push
imul
push
popa
iret
lds
adc
lock
test
mov
add
add
idivb
gs
ret
jl
jmp
jle
add
test
dec
test
pop
sbb
push
arpl
xor
and
inc
aaa
call
mov
jge
scas
es
enter
push
add
repnz
out
ja
add
adc
sarb
pop
jb
push
pop
jb
inc
hlt
mov
and
js
mov
add
in
jecxz
or
or
mov
arpl
shrb
add
daa
xorb
push
mov
cmpl
hlt
inc
sub
jb
sar
ljmp
fistl
inc
cli
push
and
call
fidivrl
push
call
fiadds
inc
add
fiaddl
cld
jg
or
daa
push
jae
loopne
repnz
jg
notrack
fidivl
scas
dec
or
pop
fdivl
mov
repz
sbb
mov
clc
cmc
dec
outsl
inc
jae
lahf
add
mov
inc
std
aas
test
mov
add
dec
aas
add
andl
adcb
jae
pop
jg
inc
mov
outsb
call
sti
stos
adc
incl
cli
out
or
xor
out
mov
add
mov
lea
cmp
std
aas
ret
stc
imul
sti
mov
addr16
mov
jne
ret
mov
popa
loope
sub
pop
fsubr
mov
fcom
nop
xlat
fcompl
and
std
add
add
add
pop
jecxz
xchg
jl
jg
jmp
fsubr
cmp
inc
cmp
inc
mov
popa
adc
sbb
call
mov
mov
mov
call
aad
adc
pusha
aad
add
mov
push
mov
pusha
or
sbb
pop
rcr
push
pushl
out
addr16
mov
or
xor
loop
aad
xchg
jg
je
cmc
jnp
jbe
or
hlt
mov
or
pop
loope
loop
jge
add
pusha
je
das
mov
cmp
xlat
pop
mov
add
add
mov
add
xlat
mov
add
dec
rcrl
pop
push
pop
mov
notl
cmp
call
push
call
or
sbb
shl
jne
jmp
lcall
or
rorb
pushl
in
or
aas
push
cmp
rorb
lcall
mov
pop
ficoml
add
jb
enter
adc
iret
jnp
add
mov
jns
mov
das
arpl
in
enter
fbstp
ja
or
outsb
dec
out
pop
dec
jmp
jmp
push
xchg
sti
cmp
push
adcb
sub
inc
mov
add
push
out
mov
jmp
jo
pop
push
xlat
or
jl
add
xlat
pop
shrl
sbb
mov
bound
pop
cmp
xchg
pop
mov
popa
mov
add
add
lcall
add
xorl
cmp
repnz
hlt
inc
fdivs
gs
lret
cwtl
pop
mov
sbb
mov
mov
push
cmp
add
shl
inc
push
popf
cmp
add
insl
mov
add
inc
xchg
push
lahf
pop
dec
mov
adc
shr
cmp
mov
jmp
mov
pop
decb
sub
pop
pop
adc
push
lcall
out
adc
out
push
subb
xchg
lods
dec
sub
mov
sbb
or
mov
test
lahf
ficomps
xchg
push
mov
xlat
add
movsb
cld
incl
rorb
addr16
mov
call
loope
test
std
jmp
add
add
add
std
jmp
loope
hlt
mov
repnz
fdivrl
add
data16
sarb
push
test
mov
nop
mov
add
jg
or
cmpsl
or
nop
call
xchg
decl
xchg
push
add
dec
popa
or
mov
pop
out
inc
std
push
fdivl
add
aad
cli
xor
add
les
es
pusha
inc
je
inc
xchg
jg
popl
add
loope
xchg
xchg
cld
add
insb
js
adc
pop
ljmp
arpl
inc
in
std
test
or
inc
in
sahf
std
xchg
fwait
pop
mov
xchg
pop
incb
add
pop
mov
sbb
xchg
and
pop
fmull
add
in
adc
daa
add
xchg
inc
pop
cmp
pop
js
pop
jmp
and
lahf
sbb
jmp
sub
aam
add
pop
xor
push
adc
pop
loope
rcrl
xor
pop
cmc
push
push
out
pop
mov
test
pop
scas
test
add
cwtl
pop
es
xchg
test
lods
ljmp
sbb
loopne
call
mov
jb
mov
xor
mov
sbb
inc
xor
add
mov
pop
jb
mov
jo
push
mov
aaa
xor
mov
pop
imul
mov
push
je
in
add
mov
add
sub
lcall
adc
mov
add
std
imul
std
add
addr16
call
lods
out
outsl
add
mov
xchg
mov
inc
call
std
jne
in
sub
push
add
pop
mov
in
sahf
or
add
rolb
inc
push
aaa
in
push
or
add
add
add
std
add
dec
add
add
roll
daa
xor
xchg
dec
aas
add
xchg
retw
adc
pop
incb
out
inc
shl
cmpsb
jno
add
imul
push
pop
les
out
pop
out
popa
add
cmp
adc
jmp
add
mov
add
dec
jg
mov
adc
add
push
pop
xchg
sbb
adc
test
xor
imul
movsb
negl
imul
sub
add
push
pop
enter
addr16
push
ljmp
push
mov
lcall
push
insb
dec
leave
mov
push
jle
lods
pop
jo
lcall
inc
xor
cmp
js
loope
sahf
ret
inc
dec
cli
add
push
imul
mov
test
lds
push
aam
cmp
jg
jmp
mov
fldcw
mov
jmp
mov
jmp
sub
repnz
mov
add
jle,pn
call
or
imul
test
into
mov
or
xor
pop
pushf
out
mov
into
pop
push
dec
call
push
je
ljmp
jge
mov
int
jbe
push
imul
sbb
rcr
mov
add
push
adc
shlb
push
std
xchg
lea
mov
add
rolb
add
add
idiv
jmp
lcall
pop
leave
mov
mov
push
add
cs
and
into
aas
mov
sub
push
inc
adc
daa
add
jmp
cs
add
jne
and
sub
andb
push
add
int3
mov
std
sub
ljmp
gs
test
out
inc
fisubrs
add
push
push
decb
inc
std
add
xchg
push
mov
push
add
mov
sub
jno
imul
fs
mov
popf
push
decb
add
mov
int3
push
dec
xor
xor
sub
push
adc
icebp
incl
std
adc
or
mov
imul
sahf
mov
xor
cmp
add
jmp
std
leave
push
icebp
inc
mov
arpl
add
test
jmp
xchg
push
sti
movsb
jecxz
call
push
or
lock
sub
cmp
arpl
add
inc
mov
mov
pop
mov
sti
call
and
xchg
sub
and
iret
mov
fwait
inc
adc
xchg
ljmp
sti
push
pushl
add
ficoml
xchg
jno
shr
mov
pop
enter
jmp
adc
testl
ss
out
push
dec
fimuls
std
jmp
shl
add
mov
dec
dec
std
mov
imul
add
subb
adc
subl
cld
push
cmc
mov
cmp
fcmovnb
call
push
cmp
es
dec
call
add
jmp
add
inc
stos
add
inc
hlt
out
add
mov
add
lea
mov
lea
dec
lea
dec
push
xchg
out
add
pop
incb
xchg
xor
xchg
jnp
call
mov
cmpb
call
jb
ret
inc
pop
cmpl
lcall
call
sahf
fdivrp
fcompl
cwtl
mov
shl
mov
mov
or
fisttps
or
imul
test
mov
pop
jg
add
test
xor
push
je
pop
in
insb
fcomps
add
mov
inc
add
mov
inc
push
cmp
popa
push
je
mov
add
mov
mov
xchg
push
mov
ljmp
dec
add
sub
adc
mov
nop
push
lds
dec
rorl
add
inc
movsl
scas
push
inc
jno
cmp
movsl
out
mov
dec
imul
mov
add
cmpsl
add
cli
sub
mov
add
add
fucomi
fnstsw
add
xchg
xchg
shr
sbb
jecxz
inc
add
add
in
hlt
les
adcb
add
insl
dec
je
dec
dec
jb
cmc
dec
call
mov
add
bnd
sub
testb
mov
mov
pushf
jne
decl
push
pop
inc
jmp
or
testl
sti
sbb
push
add
sbb
dec
mov
lods
orl
lea
mov
push
adc
dec
jb
out
cmc
mov
jl
or
daa
add
ficompl
movl
mov
add
inc
fdivrp
in
lea
mov
add
cwtl
inc
ljmp
mov
jmp
add
inc
stos
add
inc
fadds
mov
cld
iret
mov
add
jbe
jnp
xchg
xor
cli
test
inc
add
repnz
lcall
aam
add
add
inc
dec
add
add
jae
xor
cs
negb
call
cmp
pop
add
cmc
pushf
call
push
sbb
pop
add
and
cmpsb
cltd
add
mov
out
add
sbb
repz
icebp
push
add
leave
insb
dec
out
pop
add
mov
dec
dec
lods
ret
or
mov
cltd
fs
lds
incb
pop
add
mov
idivb
cmp
inc
ret
call
sbb
push
daa
ljmp
dec
nop
shrb
jge
mov
sub
pushf
mov
push
push
adc
nop
fcmovnb
call
add
sub
mov
inc
xchg
shr
or
dec
pop
or
leave
loop
sbb
add
mov
dec
add
add
add
mov
dec
push
ds
call
add
mov
int3
dec
jo
shl
addr16
pushl
cmc
push
stc
cmpsb
add
clc
mov
das
add
add
adc
push
xor
lahf
xchg
add
lods
addl
inc
push
dec
dec
xor
aaa
sar
or
add
in
je
jo
mov
lods
dec
es
dec
test
add
jmp
add
add
imul
jmp
add
ret
pop
pop
add
or
rorl
out
add
jmp
roll
inc
in
std
divl
ret
sub
add
call
lods
fdivr
test
out
xchg
mov
call
outsl
sbb
ljmp
cmp
inc
pushl
and
add
xor
repnz
sub
out
add
out
inc
incb
add
add
mov
add
add
cmpsb
test
test
out
stos
mov
ret
out
mov
jo
mov
pop
add
in
test
andb
gs
push
ljmp
xlat
testb
jmp
xchg
add
sbb
inc
mov
cltd
add
jecxz
stos
inc
mov
xchg
cltd
add
fwait
mov
inc
mov
cltd
add
mov
pop
es
add
fwait
out
inc
mov
lcall
mov
cltd
add
fildl
in
lods
incb
fisubs
mov
daa
add
sbb
and
test
add
sbb
scas
and
sbb
xchg
and
test
add
xor
jle
test
add
sbb
and
test
add
sbb
dec
and
sbb
lods
jle
and
cmpsl
add
sbb
lods
jle
push
and
cmpsl
add
add
and
test
add
fisubrs
and
push
sar
sahf
loope
sub
sbb
mov
ret
cmp
sahf
rcrl
mov
sar
fmulp
pop
sub
inc
and
push
sar
fiadds
and
pop
sar
fidivrs
test
inc
and
and
incl
jno
test
inc
and
sub
ljmp
mov
sar
ficomps
and
setbe
add
mov
add
and
mov
std
and
and
pop
xchg
std
and
adc
lret
pop
cmpsb
std
and
and
rcrl
std
and
inc
in
pop
std
and
mov
add
and
nop
in
pop
es
and
mov
es
and
mov
add
and
mov
lcall
mov
cltd
add
jecxz
lods
inc
mov
sbb
fwait
add
sub
sbb
mov
xchg
sbb
lcall
imul
jecxz
scas
inc
mov
sbb
add
and
push
fs
add
mov
out
lret
cli
or
aaa
lret
or
mov
add
icebp
mov
jmp
test
add
add
dec
loopne
mov
add
hlt
cli
stc
nop
jno
call
dec
rol
mov
add
add
addb
ret
or
call
add
sub
mov
std
call
add
inc
call
add
add
enter
add
add
jmp
lds
ret
add
loope
add
xor
aas
add
movb
jmp
cwtl
inc
jmp
sbb
and
jmp
mov
inc
cmp
jge
xor
mov
jmp
mov
add
inc
out
call
int3
cmp
mov
inc
mov
jg
ljmp
out
jmp
orl
mov
add
out
lds
iret
std
incl
xchg
add
add
decb
cmpsl
push
or
xlat
mov
shlb
and
sub
add
jae
in
test
add
add
call
add
add
pop
mov
add
push
ret
jmp
lcall
xor
jg
add
out
sbb
sub
mov
pop
dec
mov
add
jle
add
xor
sahf
push
add
cwtl
stos
xor
xor
mov
ss
xorb
out
cmp
inc
inc
decb
cli
jae
sbb
mov
sub
sbb
repnz
add
jle
mov
ret
mov
pop
decl
mov
jmp
iret
mov
add
sub
xor
add
into
cmpsb
mov
mov
sbb
add
add
fdivr
cltd
aas
jno
test
sbb
sub
xor
mov
mov
fistpll
mov
sbb
test
mov
ret
mov
adc
add
add
cmp
add
or
jae
shll
add
loop
test
fmul
mov
jo
pop
add
mov
add
paddsw
add
pop
scas
sahf
inc
add
add
mov
std
xlat
sub
mov
movsb
int3
add
jmp
cmp
sub
dec
mov
test
cmp
mov
sbb
rolb
test
add
or
adcl
inc
xchg
outsb
and
js
pop
xor
pop
ret
mov
push
push
dec
cmc
lds
add
add
add
test
mov
add
and
jbe
add
add
cmpsl
mov
sub
nop
cmp
or
inc
ljmp
add
add
jne
mov
fstps
lds
das
add
add
sub
mov
xor
add
pop
push
add
mov
and
test
add
nop
jge
pop
mov
test
mov
sub
mov
pop
push
add
sub
inc
aaa
les
add
sub
add
sbb
sub
inc
cmp
mov
add
repz
add
sbb
sub
mov
push
push
add
mov
add
add
add
mov
dec
mov
adc
xchg
mov
jmp
mov
addl
mov
sbb
adc
add
mov
sbb
add
cmp
mov
iret
jno
mov
xchg
mov
cmp
cmp
ljmp
jne
fldl
jae
xchg
inc
pop
cmp
add
mov
in
add
jb
or
mov
add
sub
sbb
mov
add
pop
in
mov
dec
std
sub
or
pop
sahf
add
mov
add
pop
in
add
add
pop
add
mov
add
bound
add
mov
cmp
popa
stos
add
pop
roll
add
adc
mov
sbb
push
lea
mov
mov
add
rorb
pushl
test
and
decl
out
xchg
add
push
add
std
mov
mov
decl
add
add
jg,pn
add
add
add
cmpsl
xchg
and
push
add
sbb
addr16
mov
or
mov
mov
sbb
sub
mov
pop
push
add
sub
rcr
sub
jne
mov
add
mov
push
add
inc
test
xchg
out
add
pop
cld
xor
mov
mov
xor
sub
add
fwait
adc
inc
ds
add
and
sahf
sub
cmpb
rol
jmp
add
flds
jmp
sub
sub
incb
call
pushl
mov
add
cmp
fstpt
test
mov
cmp
aaa
pop
leave
or
fmull
sub
cmp
aaa
lods
adcb
cmpsb
inc
roll
mov
loopne
adc
in
add
sbb
add
xchg
aaa
call
out
std
jns
pop
ss
mov
movsl
mov
rcrl
and
cmp
mov
mov
ss
and
pusha
xor
add
mov
ljmp
aaa
add
std
call
lret
stc
loope
pusha
cmp
add
mov
cmpsb
std
call
mov
std
call
in
xchg
ret
in
add
sahf
xchg
jmp
inc
xchg
out
orb
add
ss
jmp
and
andl
mov
cli
pusha
sti
mov
lahf
sbb
add
pop
test
insb
cmp
xlat
outsb
push
xor
push
add
sbb
xchg
call
and
pop
in
add
xchg
outsl
add
pop
push
push
cmpl
data16
xor
mov
cmp
or
add
inc
add
add
test
add
xchg
mov
in
filds
mov
and
adc
cmp
xor
stos
cmp
cmp
jmp
mov
and
arpl
add
sub
add
xchg
shll
out
mov
call
scas
cmpsb
mov
mov
sbb
add
mov
std
call
lcall
popa
subl
aas
jo
mov
xor
sbb
xor
xorl
add
mov
adc
add
add
push
leave
clc
xchg
mov
mov
inc
push
mov
xor
in
mov
and
add
pusha
aaa
filds
jmp
mov
jle
int
decl
jb
sbb
xchg
xor
ja
shl
cmp
mov
call
cli
jmp
push
ljmp
mov
mov
leave
rcrl
adc
jae
in
add
add
add
call
ljmp
mov
add
decb
jmp
sbb
pushl
adc
decl
mov
add
aas
mov
sbb
push
test
loope
add
addr16
push
mov
mov
std
pop
leave
pop
pop
ret
mov
mov
in
mov
add
jne
mov
cmp
icebp
add
rcll
add
std
roll
icebp
mov
rclb
push
inc
aas
ficomps
or
mov
sub
lods
push
add
mov
sbb
or
fdivrp
jno
add
cmp
lcall
mov
add
sbb
cmp
or
xor
cmp
jne
add
mov
inc
add
adc
add
test
add
mov
mov
mov
cmp
jb
roll
add
ret
jne
in
mov
in
mov
add
add
add
add
in
add
mov
add
mov
add
andb
add
xchg
call
pcmpgtd
add
push
xor
jb
mov
mov
mov
fsubrs
movb
mov
add
insl
addb
bound
xchg
jmp
test
fldl
add
add
add
jns,pn
sbb
lds
add
call
jmp
popf
test
add
rorb
add
mov
cli
add
mov
fdiv
add
das
callw
add
lea
bound
mov
mov
jmp
add
jecxz
loop
incl
cmp
jmp
add
xchg
cmp
or
add
adc
add
or
add
movsl
add
add
cmp
cmpb
cmpsl
add
fisubl
out
push
es
add
cmp
add
push
pop
fdivs
scas
dec
and
scas
push
mov
in
jmp
pop
pop
and
pop
push
int3
call
mov
adc
aad
lock
xor
movsl
nop
jge
mov
mov
mov
pop
mov
fadd
les
jge
mov
and
decl
shlb
cmp
push
add
lahf
inc
out
adc
incb
out
inc
adc
add
or
xor
xor
leave
call
add
pop
cmp
jb
adc
lret
fcomp
adc
pusha
rcr
adc
movsb
out
mov
in
mov
test
pop
mov
add
add
inc
call
push
in
sub
add
cmp
in
mov
out
add
adc
xchg
js
adc
inc
mov
int3
adc
aad
adc
mov
xor
add
lods
adc
adc
test
loopne
jmp
adc
inc
aaa
stos
mov
mov
sub
xorb
inc
pop
jmp
lods
cmp
jae
dec
shlb
movsl
cmp
inc
xor
adc
mov
or
mov
add
popa
fbld
in
push
xchg
cmp
pop
push
clc
jl
iret
sub
push
aaa
aam
adc
push
cld
mov
mov
push
scas
inc
jne
ljmp
add
outsb
push
add
daa
jno
test
sub
call
adc
sbb
add
call
xor
loop
call
cmpsl
daa
adc
jmp
stc
cmp
mov
test
add
stc
sub
xor
mov
fcoml
or
lods
test
decl
lods
pushf
add
decl
add
lret
mov
and
add
mov
add
fsub
sbb
push
add
mov
sbb
mov
or
mov
cmovae
inc
int3
add
ljmp
test
jle
call
inc
aaa
push
out
add
loop
sub
outsl
out
inc
mov
add
sbb
dec
lcall
add
shll
jns
fnsave
mov
mov
inc
mov
add
iret
fldl
int3
xor
int3
filds
fnsetpm(287
or
popf
int
jle
std
call
shrl
mov
flds
mov
add
add
call
pop
mov
mov
imul
std
mov
test
mov
clc
push
adc
rorl
sti
and
aad
daa
mov
cmpsl
mov
loop
ret
add
inc
int
in
jecxz
mov
daa
add
cmp
add
mov
add
daa
add
cmp
add
mov
jl
or
mov
jns
add
inc
add
outsl
jbe
int
mov
pop
aad
stc
add
aad
dec
jnp
aaa
dec
mov
inc
data16
inc
and
push
jp
int3
int3
push
mov
inc
testl
mov
and
push
pushf
jmp
das
sub
std
mov
and
sub
dec
mov
push
mov
shr
test
and
dec
mov
outsl
and
call
cmpsl
push
and
cmpsl
mov
ds
inc
cmpsl
int3
call
mov
cmp
pop
jle,pt
add
sbb
out
jecxz
inc
inc
mov
sbb
shl
in
imul
fbld
mov
jle
push
jle
and
dec
mov
ret
push
outsb
mov
out
mov
mov
jge
lcall
adc
scas
scas
dec
xchg
and
inc
dec
push
jge
stos
sbb
add
aad
inc
add
sub
add
mov
mov
adc
add
jns
js
or
sbb
dec
popa
popf
leave
outsb
std
cmpb
add
or
jmp
push
leave
jae
add
loope
subb
xchg
cmp
ljmp
mov
out
js
sbb
inc
sub
xor
or
test
or
vmwrite
aam
loope
daa
stos
and
jge
js
lods
jno
push
cltd
or
out
shll
rolb
mov
bound
and
js
lds
dec
jb
sbb
aam
and
mov
pop
sub
cwtl
jmp
leave
test
add
mov
fnstsw
cld
sub
mov
fdivrl
movsb
and
mov
dec
ss
nop
and
jb
js
or
out
jle
loop
std
cmp
sub
sbbb
add
incl
aam
decl
xor
mov
repnz
push
jle
std
add
jle
add
test
and
dec
mov
setne
lcall
inc
and
test
and
test
and
pop
rcll
dec
jl
pop
and
cmp
push
push
insb
jmp
inc
add
pop
push
mov
je
loop
inc
mov
mov
es
xrelease
inc
push
fisubrs
xchg
out
incb
add
cmp
imul
inc
call
add
sbb
pop
mov
add
incl
loop
into
and
or
mov
aas
jae
add
xlat
inc
daa
mov
jp
mov
loope
dec
push
dec
cmp
cmpsb
and
add
add
or
out
mov
xchg
iret
fnsave
jae
fsubl
shll
les
xchg
inc
cltd
rorl
out
mov
jl
in
sbb
in
negb
popa
rcr
shll
out
and
loopne
mov
das
clc
and
inc
inc
mov
icebp
popa
mov
popf
aad
mov
out
in
in
mov
shl
lock
jecxz
dec
add
rorb
ss
inc
push
pop
jecxz
jmp
data16
in
mov
mov
fst
les
flds
sub
stc
lcall
and
out
pop
bound
imul
rclb
mov
ljmp
cmpsb
mov
in
adc
incb
inc
cltd
push
add
fmuls
adc
pop
and
gs
jmp
lcall
iret
sub
mov
add
dec
or
jl
cmp
dec
and
jnp
jl
add
in
add
dec
and
dec
dec
mov
int3
repz
jmp
pop
pushf
dec
and
mov
sub
mov
mov
call
inc
and
xchg
add
jmp
adc
mov
mov
out
adc
leave
pop
and
aas
sub
add
testl
push
movsb
push
out
fsubs
incb
inc
insb
out
repz
int
lock
insb
out
cmp
ljmp
inc
push
add
xor
add
sub
add
sub
jmp
int3
aad
jp
mov
test
fsub
mov
xor
add
dec
nop
in
sbb
jmp
pop
mov
popf
cmc
sti
and
mov
jno
fnstsw
mov
push
lea
in
mov
sub
mov
xchg
testb
mul
add
mov
mov
add
inc
sbb
in
mov
in
add
sub
adc
add
add
sub
call
or
bound
loope
jb
out
insb
mov
cmp
jb
inc
or
out
mov
fs
cmp
cltd
loopne
mov
sbb
lock
xor
lea
out
lahf
sbb
rcll
mov
lcall
bound
outsb
loopne
sub
adc
dec
add
ret
and
push
cmpsl
mov
call
insb
dec
and
mov
mov
pop
call
std
cmp
jnp
mov
and
add
daa
add
xchg
pushl
lret
add
add
sbb
jnp
subl
dec
mov
iret
in
out
dec
xor
push
ja
add
push
decl
push
pushf
mov
or
std
inc
xchg
ljmp
loop
mov
cld
ret
std
out
lds
xorb
push
cmp
dec
sub
add
test
add
repz
xchg
imul
mov
adc
dec
mov
ret
fcmovb
or
inc
ficoml
flds
jmp
cmpl
mov
sub
out
mov
and
pop
cld
nop
mov
dec
sbb
xlat
push
sbb
push
shll
or
rolb
inc
lods
add
inc
roll
mov
dec
add
stc
xchg
fadd
imul
mov
mov
pop
push
mov
dec
cltd
add
test
fsub
or
add
aas
or
jae
mov
call
pop
mov
dec
adc
pop
sbb
add
xchg
or
movsl
std
call
push
cli
mov
add
pop
in
add
std
add
mov
add
bound
add
mov
push
shll
sahf
cmc
roll
adc
mov
jo
icebp
add
mov
std
call
mov
add
jmp
test
xchg
mov
add
inc
jle
in
mov
add
jmp
add
jg
add
add
xchg
add
add
sbb
add
pop
add
mov
mov
xor
add
sub
rol
mov
addl
and
mov
stos
sub
dec
xchg
add
add
dec
jnp
push
push
push
adc
mov
pop
pop
pop
add
ss
mov
mov
pop
pop
pop
aam
ss
add
jge
and
sub
inc
push
or
mov
test
add
xor
sub
mov
ret
add
cmp
mov
sub
mov
add
sub
push
push
mov
and
mov
hlt
mov
and
add
inc
lret
jp
inc
lret
jb
inc
lret
mov
in
aam
ljmp
jmp
mov
shlb
or
push
in
incb
jo
jle
jmp
mov
addb
mov
les
add
dec
in
out
add
jecxz
jl
rcr
jne
divl
mov
or
imull
mov
cwtl
out
sbb
adc
fcomps
test
call
test
ret
cmpsl
add
lock
mov
call
in
daa
pop
arpl
into
stos
jno
testb
xchg
push
sbb
mov
mov
cmp
aaa
insb
mov
jl
cld
lea
pop
arpl
int
popa
cmc
aaa
cmp
jg
pop
std
adc
and
les
inc
jmp
cmpsb
adc
out
jo
jle
test
fdivl
movb
jge
stc
cmpsb
adc
add
sbb
mov
or
std
ljmp
call
sbb
mov
arpl
add
add
loopne
inc
or
add
add
test
addl
mov
jg
pop
or
add
loope
or
test
addl
in
or
roll
addl
cmpsl
shr
mov
lahf
roll
mov
xor
movzwl
add
mov
and
mov
mov
cmp
mov
incl
test
out
sub
add
mov
add
mov
dec
jg
mov
add
add
aas
outsl
xchg
dec
jg
nop
in
jl
add
stos
ffreep
pushl
icebp
mov
jle
add
xchg
pushf
les
add
xor
loopne
add
je
push
scas
mov
add
adc
stos
sbb
add
sub
mov
mov
mov
mov
or
inc
inc
sub
sub
test
rorl
cmc
dec
movb
les
pusha
or
inc
sub
or
test
sar
mov
jp
xchg
cmp
add
rorb
lahf
xchg
cli
sbb
rorb
lahf
mov
sti
mov
jge
mov
cli
and
loop
jp
pusha
cli
rorb
pop
lret
icebp
sti
push
pop
add
lods
shl
mov
xchg
adc
mov
jp
pop
jno
ret
jl
punpcklwd
sub
jno
ret
std
jns
push
add
jmp
jl
pop
jno
ret
jl
punpcklwd
ret
out
das
add
into
mov
pop
xchg
and
or
pop
mov
arpl
or
adc
add
sarb
add
xor
mov
repnz
out
push
xor
jl
xorl
in
mov
xchg
push
out
xor
icebp
addl
fmuls
out
xchg
es
xor
jnp
cmpl
inc
addr16
in
dec
inc
mov
xchg
add
xor
or
or
mov
push
xor
clc
inc
out
mov
jmp
cli
sbbl
mov
ficompl
inc
loopne
out
ret
or
sbb
sbb
leave
mov
incl
inc
out
add
sbb
or
fnsave
xor
push
out
test
or
push
nop
or
call
cli
ds
mov
shlb
addl
repnz
das
imul
in
cmpsl
add
inc
adc
add
add
pop
lds
daa
and
addb
push
jns
inc
and
sub
add
add
add
adc
lds
popf
jp
add
stc
cli
jo
cmpl
cmp
bound
or
add
call
dec
ret
int3
inc
out
out
and
jmp
inc
mov
rolb
and
mov
mov
mov
inc
subb
jp
mov
xlat
lret
mov
mov
sub
into
mov
out
mov
mov
cmpsb
add
or
lock
jmp
or
decb
push
add
inc
aas
add
std
dec
das
xchg
add
repz
mov
rcr
push
ror
faddp
pop
icebp
out
aad
enter
jecxz
stos
test
push
fisubrs
fxch
aad
loopne
xchg
sarl
mov
ror
das
enter
jecxz
add
add
xchg
data16
xor
into
sarl
inc
sbb
shll
lods
or
mov
pop
and
pop
jns
add
jno
xor
nop
inc
sbb
ud0
pop
and
out
pop
jns
jg
push
xor
inc
sbbb
sub
loop
jmp
lds
ret
pop
aaa
sub
pop
jl
add
scas
and
or
sarb
fnstenv
out
add
str
lcall
cmc
or
ljmp
adc
mov
rol
loopne
mov
jle
rcll
or
add
mov
jbe
add
mov
mov
sbb
adc
shr
add
mov
psraw
stos
or
sbb
pusha
or
syscall
shr
cli
or
verw
jl
or
or
cld
and
jmp
dec
mov
inc
or
in
ds
sub
or
in
out
les
incb
mov
jmp
mov
mov
mov
mov
bound
mov
jns
or
inc
jmp
mov
mov
or
enter
jb
or
inc
adc
sarl
inc
in
inc
cld
adc
data16
xor
decb
icebp
std
mov
in
sti
add
add
pop
dec
out
or
std
pop
jl
ljmp
loope
in
add
add
push
mov
add
addl
mov
addr16
inc
aas
add
xchg
cld
incl
xor
dec
inc
mov
xor
repz
mov
add
jae
pop
or
in
add
mov
mov
or
or
inc
cmpsb
or
jnp
call
sbb
pop
mov
or
adc
shl
sbb
fcmovnb
xorb
jne
out
mov
and
mov
add
cmp
mov
test
enter
cmp
add
add
mov
sbb
jmp
js
cmp
xchg
lds
adc
in
mov
pop
call
fwait
jne
daa
add
xor
or
rcrb
vmovd
aad
xorb
dec
pop
popf
or
lods
pop
adc
jl
or
shll
or
jl
or
pop
push
or
or
cmc
dec
mov
inc
inc
pushl
xor
ret
ljmp
jl
cmp
lods
push
adc
add
ja
mov
ljmp
add
ja
les
call
jne
imul
cmpsb
pop
adc
pop
stos
lds
inc
int
lahf
mov
rorb
ja
add
add
test
mov
lea
xchg
xor
sahf
stos
mov
sub
out
shr
std
ljmp
dec
inc
addr16
or
call
aas
std
dec
inc
pop
jmp
or
call
cmp
ret
push
mov
push
idiv
clc
add
xlat
add
mov
pop
or
mov
cmp
jno
mov
dec
std
mov
jno,pn
add
jl
inc
xchg
outsb
in
pop
aad
add
pop
and
mov
mov
cmpb
add
sbb
aaa
sub
add
out
inc
mov
sar
daa
jns
cmp
adc
add
adc
jp
cmp
lahf
movsl
pop
xor
inc
mov
out
or
leave
movsb
mov
pop
push
jno
divl
leave
test
into
out
rclb
loopne
cmp
or
add
or
rolb
add
call
sbb
or
loope
mov
push
jbe
sbb
sbb
or
jno
add
mov
popa
cmpsb
sub
mov
addb
or
sbb
or
pop
pop
test
jno
adc
test
call
sbb
or
jnp
adc
movsl
js
adc
movsb
jl
add
outsl
rorl
sti
sbb
lds
add
rol
inc
jmp
mov
idivl
mov
add
inc
lret
mov
mov
testl
dec
jne
stc
dec
sbb
rolb
daa
or
push
ret
aaa
adc
cli
lcall
pop
sbb
add
or
push
bound
cli
mov
mov
cmp
lret
mov
mov
sbb
xor
sbb
add
cmp
mov
fimull
add
push
mov
pop
xor
sbb
call
jge
jl
pop
ljmp
jnp
jl
pop
decb
roll
and
adc
decb
dec
xor
add
movb
sarl
std
in
jl
push
lret
sbb
jmp
jne
mov
aam
jne
imul
jg
call
pop
jne
jo,pt
decb
push
push
cld
jno
mov
pop
jl
add
dec
mov
in
cwtl
js
mov
movsl
or
je
adc
div
xor
xacquire
pop
repnz
insl
pushf
sbb
in
pop
clc
sbb
xor
aam
jnp
sbb
mov
cld
mov
repnz
adc
sbb
test
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
stc
mov
mov
mov
int
into
and
mov
and
xchg
insl
dec
imul
imul
adc
mov
add
jbe
inc
and
pusha
daa
leave
repnz
shr
xor
and
fimull
add
adc
pop
fiaddl
cli
out
sub
sti
insl
insb
or
addr16
and
xlat
bound
or
jecxz
insb
jb
frstor
lods
jae
mov
and
xchg
jno
int3
je
jbe
bound
outsl
jno
addr16
dec
push
push
in
or
jmp
out
add
xlat
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
sub
ficoml
cmpsb
bound
cmp
or
arpl
push
mov
add
add
add
add
add
add
add
add
add
add
out
add
out
add
xlat
add
add
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
ljmp
mov
mov
ljmp
mov
ljmp
mov
ljmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
xor
mov
jb
jne
add
jns
jno
mov
jne
jmp
xchg
add
dec
outsb
jno
xchg
das
xor
xchg
xor
cli
jmp
sub
fiaddl
mov
pop
addr16
mov
add
pop
add
fidivl
outsl
sbb
insb
add
add
fs
mov
jne
xchg
repnz
fsubr
sub
fdivrs
pop
ja
xor
xor
xor
cmp
add
gs
mov
xor
add
insl
jb
test
jae
imul
addr16
add
pop
outsl
je
jae
arpl
push
add
push
jae
jno
addr16
mov
pop
insb
insb
push
pop
outsb
mov
push
je
jae
add
xor
daa
jo
popa
imul
inc
add
outsl
mov
cmpsl
jbe
arpl
add
mov
insb
ljmp
pop
dec
add
addr16
insb
pop
pop
ss
push
inc
gs
ljmp
sbb
add
sbb
jae
jmp
jae
add
insl
or
pop
insb
and
jo
sbb
pop
pop
in
add
add
leave
outsl
jne
fdivl
mov
xor
mov
add
add
mov
insl
lods
bound
shlb
add
outsb
popf
jae
bound
add
jno
imul
pop
jae
xor
xor
xor
dec
cmp
add
xor
jnp
pusha
cmp
add
push
outsl
stc
jb
bound
pop
add
lar
insb
add
jae
imul
or
push
sbb
xchg
add
callw
fnsave
jo
addr16
outsl
fldl
iret
bound
add
cmpsl
insb
jno
mov
outsb
add
add
mov
mov
mov
mov
xor
sbb
pop
pop
jmp
pop
addr16
add
je
inc
and
add
adc
imul
pop
popa
or
insb
arpl
ret
add
push
mov
bound
into
add
mov
das
sbb
push
add
pop
outsb
add
push
gs
fs
inc
outsb
add
push
pop
outsb
xor
je
outsl
je
add
arpl
popa
addr16
xlat
push
insb
insb
cmp
gs
popa
add
add
cmpsl
pusha
jb
hlt
bound
ja
imul
push
jno
xchg
imul
imul
xor
add
arpl
mov
arpl
pusha
jne
roll
lretw
outsb
ja
lods
xor
lahf
mov
push
add
mov
jo
jnp
add
addr16
mov
push
ljmp
arpl
add
pop
push
jo
arpl
popa
pop
dec
popa
fs
jmp
and
pop
jb
cmp
sbb
jo
and
arpl
push
jbe
pop
sbb
sbb
add
filds
insb
arpl
ljmp
add
add
pusha
int
shll
add
pop
jmp
pop
enter
int
lahf
fs
insb
mov
push
pop
xchg
add
jne
add
push
nop
outsl
pop
data16
push
pop
jnp
push
xor
pop
gs
pop
add
push
fs
arpl
xor
dec
imul
and
insl
or
arpl
add
arpl
outsb
in
adc
arpl
mov
aam
push
lret
fstps
ret
xor
int
pop
lret
jno
lcall
mov
xchg
pusha
insl
mov
push
outsb
mov
data16
push
jno
pop
push
jno
pop
add
pop
insl
insl
pop
add
insb
inc
pusha
pop
insl
aas
mov
insl
arpl
ljmp
cmp
push
jb
or
imul
jmp
outsb
add
outsl
add
push
arpl
std
jae
mov
push
andl
push
sub
pop
add
arpl
outsb
add
jo
imul
gs
outsb
pop
jae
and
xor
pop
jne
bound
out
jo
gs
ss
imul
imul
js
popa
add
je
add
add
push
push
add
pop
outsb
je
std
gs
gs
jmp
fisubrl
in
push
pop
ja
jmp
insl
in
jl
mov
sub
jno
fcmovne
imul
mov
pop
addr16
pop
xchg
fisubl
xchg
jo
lcall
jb
xchg
add
cwtl
pop
addr16
pusha
outsb
jb
outsl
add
insl
push
pop
aas
jb
arpl
arpl
jns,pt
cs
imul
pop
arpl
inc
popa
imul
adc
outsb
sbb
add
jb
lods
js
pop
mov
jae
pop
fstpl
jno
je
push
rolb
fsubrs
sarl
add
jno
bound
pop
xchg
pusha
leave
bound
mov
jae
outsl
cltd
pop
addb
pop
mov
jae
insb
popa
je
fs
add
jns
pop
pop
mov
arpl
mov
gs
add
and
add
pop
pop
cmp
fs
icebp
pop
add
loope
je
loopne
jbe
in
popaw
adc
pop
outsb
or
pop
jbe
ret
gs
les
fnstsw
add
test
popa
sarl
pop
fs
jns
jno
movsb
pop
ja
mov
pop
mov
jno
xchg
jne
mov
mov
pop
arpl
add
sbb
push
add
popa
pop
add
insb
popa
xchg
dec
imul
outsb
xor
popa
addr16
bound
popa
insb
xor
imul
arpl
mov
arpl
gs
pop
outsb
jb
insb
add
outsl
add
addr16
add
jae
mulb
jns
popa
pop
js
pop
insb
insb
pop
dec
pop
jae
pusha
add
dec
outsb
add
jne
ja
pop
xor
xlat
arpl
dec
add
xorl
xlat
arpl
cmp
mov
cmp
das
xor
jb
and
jne
pop
fstpt
xor
aad
add
add
add
call
push
je
jecxz
add
int3
push
xor
pop
insb
mov
stos
push
outsb
cmpsl
lds
ficompl
xchg
xchg
push
jno
subl
pop
jns
jo
jns
arpl
insl
dec
add
arpl
push
pop
push
gs
jns
add
das
jbe
pop
sbb
cmp
sbb
cmp
sbb
lar
sbb
fs
add
das
mov
sub
jne
jne
pop
into
jne
je
add
sbb
xor
sub
cmp
sbb
ss
fbstp
xor
jae
pop
nop
and
xchg
data16
pop
jae
outsb
daa
add
sahf
sub
mov
add
sub
adc
sbb
ds
sub
cvtpi2ps
jmp
or
sub
sbb
arpl
out
gs
pop
cmp
fildl
or
pop
add
jne
and
jo
fbld
gs
mov
pop
push
mov
cwtl
add
shlb
mov
jns
inc
movsl
xorb
mov
push
dec
add
cmp
sbb
push
push
push
inc
push
pop
aaa
push
inc
inc
cmpsl
cmp
dec
cmpsb
or
add
decb
fisttpl
add
pushl
push
inc
ret
inc
gs
dec
outsl
outsl
mov
dec
outsl
push
jo
gs
jb
gs
outsl
jno
push
outsb
add
dec
outsl
je
dec
insb
add
outsb
fs
insb
add
jb
dec
arpl
pop
dec
outsl
jo
gs
mov
pushf
add
mov
fadds
imul
das
bound
imul
popa
sub
arpl
dec
pop
jno
aaa
addr16
and
and
cmp
jb
sbb
notl
add
divps
fiaddl
add
fiaddl
popa
int3
loope
je
or
fs
mov
jno
xchg
shlb
xchg
scas
push
je
fiaddl
add
imul
jae
jns
adcb
insb
inc
cltd
add
test
add
add
jne
sub
xor
pop
cmp
mov
outsb
and
jb
bound
pop
leave
add
add
inc
out
cltd
inc
out
mov
inc
out
mov
inc
out
mov
inc
out
out
out
in
out
aam
out
aam
out
in
add
mov
add
imul
bound
pusha
push
je
add
or
jmp
orl
jmp
mov
push
and
sub
dec
push
inc
add
mov
add
sub
out
jmp
mov
pop
arpl
mov
and
jmp
leave
push
jb
mov
add
jmp
mov
imul
dec
popa
outsb
push
jb
add
add
inc
dec
dec
imul
aas
pop
je
add
jmp
andb
out
dec
jns
push
arpl
jb
adc
add
cmpsl
subb
xchg
add
outsl
or
outsb
movl
outsb
shrl
add
add
inc
mov
and
imul
jbe
ja
imul
add
daa
add
add
pop
addr16
shll
mov
and
push
jno
flds
add
fldl
add
addr16
pop
push
fcoms
pusha
insb
jb
dec
jne
dec
push
jnp
insl
dec
dec
bound
pop
outsb
sbb
jno
sbb
sub
pop
je
cmp
pop
pop
add
xor
or
sbb
pop
arpl
and
out
arpl
out
push
or
push
and
push
push
sub
pop
scas
insl
adc
pusha
lret
insl
add
adc
stc
mov
lret
jno
sbb
mov
pop
test
and
pop
push
push
and
loopne
add
pop
pop
sub
cmp
sub
pop
adc
std
push
dec
pop
sbb
push
icebp
and
push
push
jne
div
inc
jecxz
sbb
insl
mov
cs
divl
pop
add
out
insl
lret
je
stos
insl
jb
pushf
pop
or
jp
outsb
mov
rcll
imul
add
stc
push
lcall
outsb
jge
and
arpl
pop
push
xor
lea
sub
push
jo
cs
bound
sub
sbb
cmp
jmp
dec
addr16
push
push
jne
fisubrl
cmp
jo
or
mov
pop
outsb
adc
mov
je
jge
dec
outsl
mov
je
inc
dec
cmp
push
mov
xor
movb
or
dec
adc
pop
inc
hlt
pop
popa
jo
adc
or
push
pop
pop
gs
push
sub
pop
imul
cmp
inc
fs
push
gs
or
sub
insb
cmp
mov
dec
popa
arpl
inc
imul
pop
insb
add
or
aad
cmp
cmp
mov
add
sub
popa
fscale
jae
lret
insb
mov
mov
and
cli
xor
fisubrs
outsb
jno
add
mov
loop
cs
inc
sub
mov
fs
cmpsl
das
cs
je
add
insl
aas
dec
cmpl
jb
cmp
arpl
or
jb
cmp
mov
fsubrl
sbb
pop
add
push
add
orps
jb
imul
icebp
push
adc
mov
or
add
pop
stos
jo
fs
data16
mov
push
push
mov
gs
xchg
lretw
jo
pusha
push
cwtd
jb
push
add
test
outsl
push
add
test
outsl
jl
pop
push
mov
inc
out
sub
inc
ds
dec
add
push
push
je
dec
dec
jo
push
inc
jb
data16
mov
push
inc
and
outsb
jb
cmpsl
fs
push
ja
into
inc
arpl
loope
insl
add
push
ja
test
inc
jno
jle
outsb
fldl
fs
add
fs
iret
mov
xor
pop
fs
jns
imul
outsl
pop
jne
dec
insl
mov
fs
adc
jno
sub
inc
inc
cs
inc
add
aas
clc
insb
jb
ljmp
inc
clc
aaa
jbe
mov
dec
imul
push
outsb
mov
gs
add
outsb
push
add
inc
push
pop
imul
jo
adc
aas
arpl
fs
jne
inc
add
cmp
push
dec
imul
push
jb
insb
gs
inc
ds
jae
add
dec
push
je
cmc
hlt
arpl
aas
gs
outsb
dec
jo
xor
popa
insl
hlt
cmp
add
inc
mov
pop
push
imul
push
je
inc
imul
sbb
xor
add
add
jno
jecxz
pop
insl
int3
or
push
je
or
cmpsl
fisubrl
fwait
mov
pop
stos
int
jb
mov
je
xchg
push
add
call
add
mov
call
add
mov
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
sub
es
xchg
cs
repnz
out
adc
sbb
notl
xchg
notl
adc
xchg
xlat
adc
pop
push
mov
push
push
push
adc
mov
sbb
dec
sbb
sbb
gs
cmp
xorps
cmc
int
insl
dec
loope
jno
stos
outsb
sbb
jb
incb
sbb
xor
outsb
cli
mov
sbb
dec
insl
cli
xchg
push
add
scas
arpl
pushf
dec
arpl
jle
insb
aam
outsb
mov
rorl
xchg
push
add
pop
dec
arpl
xchg
cmp
test
add
packuswb
inc
xor
push
dec
adc
data16
pop
jb
jecxz
pop
jb
sbb
leave
bound
pop
insb
outsl
clc
dec
gs
push
jb
add
push
outsl
je
minps
cmp
mov
xor
xor
add
jb
push
push
pop
js
imul
sbb
push
push
dec
inc
push
incl
xor
xor
jb
call
outsl
addr16
outsb
arpl
pop
bound
lea
pop
cmp
sub
xor
insl
jne
or
sbb
arpl
inc
push
add
dec
push
arpl
sub
addr16
or
jb
sbb
je
fsubl
inc
fprem1
outsb
pop
rolb
jb
hlt
dec
jo
shrl
mov
push
xchg
mov
jno
call
push
addr16
imul
add
imul
add
insl
popa
add
mov
mov
inc
movsb
inc
add
add
cs
dec
add
aaa
add
inc
das
insl
cmovle
or
cmp
dec
ds
sbb
push
sub
aas
inc
inc
in
dec
add
repnz
adc
fnsave
push
jo
stc
add
fldcw
inc
lret
outsb
pushf
xor
mov
add
mov
xor
push
insl
push
push
jno
push
addr16
lea
data16
mov
add
and
clc
gs
mov
push
sub
xor
call
clc
sub
dec
push
adc
sbb
sub
pop
cmp
xor
push
dec
pop
sbb
xor
pop
std
mov
sbb
stc
xor
inc
sbb
in
push
insl
iret
cwtl
push
jno
stos
addr16
inc
mov
data16
add
bound
push
gs
arpl
cmp
insb
push
and
push
inc
or
je
ds
push
idiv
pop
dec
dec
push
push
outsl
sub
popa
add
cmp
cmc
pop
pop
inc
lret
bound
adc
inc
add
ds
inc
mov
popa
inc
rorl
jb
rcrl
mov
pop
dec
inc
mov
bound
lret
cmp
outsl
mov
insb
push
push
inc
push
inc
pop
inc
jno
mov
call
pop
pop
push
inc
aas
mov
inc
mov
add
insb
bound
xor
js
pop
std
dec
push
arpl
clc
je
and
adcl
adc
inc
push
out
call
pop
pop
or
ss
loopne
push
pop
in
inc
cmp
dec
push
push
call
push
pop
int3
std
aaa
inc
rorb
push
push
jmp
mov
push
arpl
push
iret
inc
jbe
mov
mov
pusha
shll
push
mov
add
out
orl
dec
jno
andl
pusha
xchg
imul
mov
pop
jns
or
orb
adc
aaa
add
addr16
and
or
and
xor
pop
add
aaa
clc
or
cmp
xor
adc
aaa
add
push
cmp
xor
or
add
add
pop
je
cmpsb
xor
enter
jmp
insb
jmp
pop
arpl
dec
jbe
mov
mov
pop
pop
insb
mov
insb
jge
and
and
push
mov
dec
jne
adc
cmpsl
adc
inc
and
xor
out
dec
pop
pop
loope
inc
push
out
pop
push
out
pop
or
addr16
aam
add
add
push
je
out
pop
sub
xlat
push
je
daa
and
xor
sub
je
push
xor
jmp
and
add
sub
push
jns
xor
push
cli
sub
dec
outsl
xor
add
jbe,pn
and
add
sub
push
popa
and
add
sub
push
outsl
add
xor
push
divb
push
jbe
sub
jns
xor
dec
imulb
and
xor
lret
dec
shrb
mov
enter
rcrb
fsubrp
push
arpl
and
mov
arpl
add
dec
and
xchg
and
xchg
dec
add
push
je
xchg
pop
jb
jge
and
outsb
mov
mov
leave
xor
sub
pop
jb
je
jo
jmp
inc
pop
or
pop
pop
adc
add
or
and
sub
filds
arpl
call
imul
aad
dec
out
cld
dec
add
dec
aaa
push
stos
bound
push
mov
stc
pusha
mov
add
xor
popa
dec
les
jl
lods
das
mov
int3
dec
sahf
xor
cmp
imul
dec
xor
pusha
adc
sbb
xor
jle
fidivs
pop
or
push
sbb
pop
inc
push
push
push
push
fsubs
and
sub
push
dec
or
pop
add
loope
je
fistl
sub
sbb
mov
xor
mov
xor
push
addr16
fwait
push
add
pop
push
arpl
pop
push
push
mov
mov
xchg
js
jb
mov
jge
gs
maxps
fldl
cltd
fldl
sbbb
je
sti
push
je
and
jmp
or
jb
add
or
mov
outsl
je
xor
scas
data16
inc
scas
pop
popa
add
gs
cmp
xor
insb
rcrl
daa
es
jmp
pop
push
cli
bound
push
and
and
outsl
xor
es
and
imul
fs
xor
imul
je
xor
imul
ss
add
jb
call
adc
mov
inc
cmp
bound
cmc
xor
xlat
inc
dec
je
or
jo
in
imul
lcall
leave
stc
push
arpl
and
inc
xor
add
pop
mov
mov
pop
lcall
arpl
push
bound
add
push
mov
pop
pop
insl
ja
pop
push
cmp
mov
insl
and
pop
dec
push
jne
dec
pop
add
dec
pop
jb
add
sbb
push
sub
push
out
fstpl
fldl
push
mov
add
arpl
push
xor
xor
push
sbb
pusha
adc
mov
push
push
push
add
push
stos
pop
mov
enter
mov
fs
mov
push
sahf
xor
push
pop
sub
cltd
popa
sbb
pop
lea
jp
minps
icebp
push
pop
jnp
cs
cmp
pop
cs
es
inc
xor
push
popa
jno
movsl
pop
jno
ret
inc
add
add
lock
add
test
push
sbb
jmp
pop
data16
pop
insb
jmp
fldl
fldenv
jb
xchg
add
addr16
jne
xchg
pusha
pop
cmpsl
test
push
insb
mov
ja
push
leave
jbe
jo
sbb
arpl
and
arpl
bound
aas
push
adc
inc
add
xor
xor
sub
add
pop
je
divb
popa
pop
test
cmp
popa
jb
adc
insb
gs
push
popa
and
jae
and
outsl
ja
ss
push
xor
dec
popa
outsl
je
or
popa
add
ss
bound
pop
insb
push
push
xor
add
xor
push
add
xor
cs
pushf
inc
jb
jl
je
mov
cs
sbbl
jb
outsb
add
arpl
pop
pop
outsb
loopne
addr16
or
xor
mov
pop
pop
insl
loopne
add
fsqrt
push
jne
out
pop
nop
stc
popa
inc
mov
fs
std
bound
add
pop
outsb
cwtl
add
outsb
mov
pop
je
insb
mov
sub
jno
rcrb
je
push
outsb
push
jno
add
xor
and
and
pop
jnp
pcmpgtw
sbb
gs
icebp
pop
test
out
pusha
pop
push
or
push
push
pop
pop
pop
mov
push
dec
push
cmp
repz
fsts
xor
pop
add
scas
pop
add
mov
adc
dec
out
cltd
push
add
fistps
imul
xchg
pop
les
lea
push
push
pusha
int3
push
insb
push
jne
outsl
add
in
push
popfw
or
jb
flds
sbb
jnp
dec
arpl
ljmp
popa
adc
outsb
sub
add
and
arpl
mov
push
pop
cmp
dec
insl
sbb
and
jecxz
and
lret
roll
push
mov
fs
and
push
pop
pop
xchg
notl
sub
pusha
jbe
mov
add
repnz
adc
xor
or
push
ss
ja
xor
adc
jae
das
imul
add
imul
daa
data16
fs
mov
adc
adc
pop
jb
adc
insb
push
xor
add
push
push
mov
bound
shlb
je
daa
je,pt
in
jb
mov
add
xor
jae
xor
or
inc
jecxz
push
popa
adc
jae
mov
mov
push
jno
push
mov
fs
rorl
pop
jb
fnstenv
dec
clc
test
or
sub
push
sub
jne
dec
pop
add
outsb
sbb
push
outsb
ljmp
jne
or
add
xor
inc
outsb
shl
cs
add
stc
push
arpl
and
insl
mov
das
inc
add
ds
xchg
std
pop
je
add
add
pop
mov
inc
outsb
xor
gs
dec
enter
mov
push
sub
add
push
mov
push
mov
pop
jae
sbb
push
fsubs
push
mov
push
inc
pusha
minps
loope
inc
push
add
es
or
fists
daa
add
pop
dec
push
fstpl
popa
mov
adc
push
lds
push
add
add
aaa
cmpsb
pusha
stc
pusha
lcall
lcall
pop
adc
push
outsl
lds
inc
insl
iret
pop
bound
outsb
push
and
pop
push
arpl
adc
cltd
pop
dec
jo
push
push
insb
test
push
mov
dec
arpl
pop
pop
jne
mov
push
cs
adc
add
lods
and
dec
cmpsb
xor
push
sbb
xor
mov
aas
cmp
dec
add
push
push
or
push
je
sub
xor
fistpl
popa
jb
aaa
pop
outsl
jae
sub
xlat
or
or
pop
insl
or
push
jae
cs
popa
add
push
cli
sub
add
gs
pop
je
inc
xor
je
sbb
bound
add
daa
imul
insb
addr16
pop
jb
sbb
add
or
jne
push
sbb
xor
sub
add
push
xor
std
push
cmpsl
in
pop
add
pop
je
enter
fidivl
pop
insl
cmpsl
xor
insb
mov
add
mov
pop
add
je
rcll
mov
aaa
fnstenv
insl
sub
add
jae
jne
addr16
pop
in
imul
mov
push
and
jge
push
fnstenv
pop
jno
add
cli
es
jbe
sbb
insl
loopne
pop
popa
rolb
outsb
int
xor
lods
add
push
add
and
cmp
add
cmp
add
xor
pop
pop
pop
fiaddl
aas
inc
dec
clc
dec
dec
pop
dec
xchg
ds
push
dec
mov
xchg
adc
pop
xor
push
hlt
adc
add
dec
xchg
or
push
pop
jns
mov
adc
bound
add
dec
adc
sub
push
dec
push
add
and
push
loopne
ds
pop
out
jmp
cmp
je
mov
jmp
fidivrl
outsb
sbb
insb
adc
add
sahf
dec
pop
mov
cltd
push
push
lea
lods
pop
push
imul
push
fs
arpl
mov
pop
sub
loope
popa
mov
dec
push
jmp
jge
popa
jb
loope
popa
mov
dec
push
jmp
lods
dec
inc
xor
xchg
inc
insb
dec
in
xor
xchg
jmp
dec
imul
push
inc
xor
adc
xor
inc
in
inc
inc
loope
sub
inc
ss
adc
inc
xor
xor
repz
inc
xor
cmp
adc
ds
push
push
outsl
add
push
jns
and
call
xor
bound
xor
push
or
xor
xor
aas
jge
dec
gs
pusha
je
mov
rcrb
stos
dec
addr16
pop
je
or
cmpsl
stos
cmp
push
ja
pop
pop
jb
adc
mov
pop
dec
pop
add
or
mov
pop
outsb
popa
jnp
data16
pop
insl
push
stos
push
jno
sbb
fs
add
fwait
and
push
rorl
pushf
xor
xchg
dec
je
nop
dec
outsb
mov
mov
enter
and
data16
dec
add
push
and
add
pop
fisttpll
pop
in
pop
cmp
fnsave
cmp
sub
or
add
cmp
lock
pop
cwtl
xor
or
mov
adc
and
push
imul
sbb
jae
mov
push
dec
add
add
add
add
add
add
add
add
add
jmp
addb
xor
xchg
sub
insb
inc
xchg
and
lea
arpl
xor
xchg
xor
insb
ds
sub
pop
sbb
and
enter
shrb
pop
cli
mov
jo
test
insb
shlb
sub
fmull
xor
outsl
int
xor
insl
mov
jecxz
insl
mov
xor
loop
arpl
inc
mov
insb
xor
outsl
jno
out
jae
xor
imul
pushl
bnd
mov
arpl
hlt
insb
insb
out
stc
pusha
xor
cmc
jno
mul
jno
pop
hlt
insb
insb
into
stc
pusha
xor
hlt
jae
mov
outsl
jno
out
jae
inc
and
ret
cli
push
je
cli
repz
in
fs
mov
arpl
in
jo
icebp
pop
bound
jmp
add
add
add
add
stos
add
mov
stos
add
mov
subl
jb
dec
sub
dec
jno
dec
xor
push
cmp
sbb
je
stos
push
pop
mov
pop
insl
add
and
lea
daa
outsb
mov
mov
add
or
insl
pusha
mov
jae
fiadds
jno
ret
das
insl
push
shlb
outsb
push
int3
xor
call
pop
mulb
add
cmc
sbb
add
push
fisubrs
xchg
xor
sub
cs
es
jns
out
xor
inc
ss
and
loope
xor
das
inc
xor
and
push
cltd
cmp
mov
dec
ss
fisubrs
jnp,pt
push
sub
sub
es
sub
add
sub
shlb
jp
mov
and
dec
push
aaa
shrb
sub
add
mov
xor
call
add
xor
sub
cmpsl
xor
addr16
inc
push
cmp
jmp
dec
xchg
add
mov
push
ja
cltd
inc
insl
xor
sub
arpl
sub
adc
xor
sub
pop
das
into
sub
adc
jb
test
add
cmpsl
and
add
aaa
addr16
add
lock
mov
pusha
jae
add
jb
inc
ljmp
popa
push
push
add
outsl
inc
repz
in
insb
and
jno
xor
fbstp
leave
jmp
gs
inc
outsb
callw
inc
xlat
std
dec
fs
incl
out
push
into
stc
pusha
jae
loope
je
push
outsb
loope
push
add
add
jae
hlt
cmpsb
popa
out
dec
push
sahf
dec
pop
jnp
scas
inc
xor
mov
xor
insb
lock
out
sub
imul
aaa
out
imul
rclb
das
insl
sbb
xchg
xor
sub
js
imul
pop
inc
repnz
inc
arpl
push
and
push
fimull
add
out
je
mov
pop
inc
lea
das
insl
cwtl
push
pusha
aas
jp
push
push
mov
mov
inc
js
mov
jb
add
add
int
pusha
push
fildl
and
es
int3
daa
sbb
es
dec
std
loope
push
out
loope
and
xor
add
push
test
add
movb
out
xor
in
sbb
in
frstor
push
sub
frstor
push
daa
stc
daa
cmp
cltd
daa
dec
daa
mov
xor
icebp
out
out
xor
xor
push
cwtl
xor
sub
andb
and
add
jmp
jge
xor
clc
dec
cmp
cmpl
xor
fadds
sub
add
decl
fstpl
int
or
add
push
inc
pop
jp
std
jmp
mov
sub
pop
lahf
push
dec
push
cltd
xor
xchg
pop
je
repz
je
lock
arpl
and
inc
call
and
aas
insl
sbb
xor
and
add
loop
xor
add
add
fdivr
popa
add
loopne
xor
mov
std
xlat
test
cmp
xor
movsl
std
bound
stos
std
pusha
cmpsl
lods
std
xor
mov
pushl
xchg
scas
std
cmp
std
xor
add
fdivrp
ss
jecxz
add
dec
out
fdivl
in
gs
push
outsb
out
out
je
mov
cmp
and
dec
outsl
add
icebp
jb
mov
pop
inc
mov
out
insl
imul
je
pop
pop
jb
std
xor
je
ja
jb
lds
and
js
add
xor
jns
and
mov
xor
sub
sbb
jb
test
and
jge
je
lret
int3
inc
and
pop
cmp
in
inc
xor
cmp
jecxz
lcall
push
xchg
out
sbb
mov
das
ficomps
das
push
xchg
add
xor
dec
add
pop
sub
sub
sbb
push
push
mov
xor
outsl
cmp
daa
sub
push
out
sbb
les
cmp
add
cmp
fwait
sub
sub
and
sub
pop
daa
icebp
sub
dec
rcrb
jmp
ljmp
dec
add
jge
dec
adc
jns
push
inc
ret
and
inc
jmp
addl
cs
ds
je,pn
add
cmpsb
sbb
xlat
mov
insl
fistl
jb,pn
mov
sub
mov
fldcw
arpl
call
push
imul
add
data16
jne
xor
push
mov
jne
xor
pop
in
cmp
and
dec
xchg
push
pop
sub
das
insl
add
in
outsl
jp
jo
daa
dec
aas
push
jmp
imul
loop
jb
pop
aas
push
jmp
outsb
jae
fsubrl
or
fs
dec
inc
jb
fisubl
add
addr16
fisubl
dec
inc
imul
imul
push
imul
popa
insb
push
add
imul
lcall
lcall
addr16
push
jb
pcmpgtw
xor
orl
add
cmp
scas
inc
and
insl
mulb
cbtw
aad
push
outsb
lcall
addr16
add
stos
add
xor
scas
sub
cmpl
gs
lret
mov
outsb
add
rolb
mov
jle
insb
and
insb
fisubs
jne
xchg
pop
loop
das
add
in
jnp
add
sub
jno
push
adc
inc
shlb
push
pop
xorb
pop
fsubs
dec
xor
cmp
xor
xor
add
outsl
add
and
adc
pop
xor
inc
jns
repz
arpl
fildl
outsl
and
das
dec
and
push
sbb
and
sbb
inc
add
and
push
out
and
das
and
xchg
mov
sub
cmp
jecxz
mov
clc
push
add
movsb
pop
imul
dec
insl
pop
fstps
pop
dec
fistpl
imul
add
fildl
sbb
inc
insl
aas
fsubs
popa
sbb
sbb
js
ret
mov
scas
es
scas
fbld
add
fiaddl
insl
add
xor
addr16
jb
push
cmp
push
lods
icebp
inc
insb
enter
lcall
mov
sub
insl
repnz
adc
xor
xor
cmpsl
xor
sub
xor
cmp
jecxz
sub
ret
mov
ja
jecxz
xor
daa
cmp
fidivrs
push
push
pop
ds
fistl
jb
jecxz
add
fisubl
xlat
aaa
push
push
pop
inc
imul
push
push
adc
jb
in
je
xchg
mov
dec
dec
pop
push
push
inc
inc
cmp
out
sub
mov
jno
mov
addr16
inc
adc
insl
faddl
loope
add
ljmp
lods
lcall
stos
cmp
add
inc
and
incb
push
lahf
pop
xor
add
test
pop
push
add
xor
outsb
push
into
sbb
push
data16
and
add
imul
arpl
mov
testl
mov
subl
repnz
ret
popa
out
cmpsl
outsl
and
xchg
out
pop
loop
hlt
out
movl
in
push
mov
sbb
cmp
cmp
and
sbb
mov
or
pop
das
out
imul
add
add
mov
add
out
sbb
loop
sbb
fwait
inc
adc
add
lret
and
cs
enter
mov
arpl
xchg
and
push
xor
xchg
and
pop
sbb
and
pop
stos
jae
fisubrs
arpl
stos
push
ds
jne
call
push
insl
inc
jbe
je
fstl
pop
cmp
push
push
inc
mov
sbb
stos
and
mov
dec
push
stos
xor
add
push
jb
popf
push
arpl
insl
dec
jno
negb
int
push
insl
fcomi
cmp
mov
pusha
jb
push
popa
jb
pop
outsb
popa
dec
push
jne
xor
dec
jo
cmp
push
outsl
jecxz
outsl
popa
inc
int
add
gs
fbstp
sti
imul
pusha
inc
xchg
cmc
pop
push
add
jecxz
ja
out
pusha
add
dec
push
and
or
scas
or
aam
jno
ret
inc
mov
and
jae
leave
in
imul
push
push
and
rcrl
xor
push
outsb
fisubrs
jno
jo
jb
fwait
inc
push
out
cli
daa
arpl
mov
in
mov
inc
add
mov
arpl
sub
fldcw
loope
filds
insb
test
ljmp
xchg
xor
push
push
cmpsb
xor
cmp
adc
insb
push
and
lcall
insb
cmc
dec
dec
jg
fists
clc
aaa
pop
orb
inc
push
add
push
sbb
aaa
sub
cs
out
add
dec
xchg
cmp
and
add
push
mov
sbb
sub
out
xchg
xor
sbb
xor
sbb
cwtl
sbb
mov
push
push
sbb
lods
sbb
popf
xor
inc
jb
sub
sub
or
popa
dec
jle
cmp
add
aas
jle
jg
jle
xchg
pop
add
add
push
inc
add
add
add
icebp
inc
add
fldl
or
inc
add
filds
mov
inc
add
mov
inc
add
inc
add
stos
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
aad
add
ljmp
fiaddl
inc
add
inc
inc
add
jne
add
addr16
add
lahf
mov
loope
inc
add
inc
add
jnp
add
add
jnp
add
js
add
inc
add
jns
add
jns
add
sbb
aam
inc
add
dec
inc
add
inc
add
sbb
mov
inc
add
push
inc
add
push
inc
add
push
pop
inc
add
sbb
pop
sbb
ss
inc
add
mov
inc
add
mov
inc
add
pop
mov
inc
mov
inc
mov
inc
mov
repnz
test
rolb
in
iret
inc
mov
das
iret
inc
mov
mov
lcall
mov
lcall
jecxz
sub
push
mov
push
sub
push
dec
mov
dec
test
sub
mov
lcall
arpl
add
pop
and
add
cli
imul
jecxz
adc
xor
mul
jecxz
push
sti
jecxz
ficoms
in
shl
lock
and
std
rcrl
sbb
cs
std
mov
add
test
adc
sbb
xor
clc
mov
mov
shl
pushf
icebp
movb
loope
loopne
ffreep
jecxz
loope
add
ds
pop
lahf
cs
pop
loope
pop
sbb
adc
inc
sbb
xor
and
shrb
arpl
add
sarl
push
arpl
mov
arpl
mov
outsb
or
push
push
fcmovnbe
sub
enter
or
push
lret
jb
iret
sbb
push
add
xlat
sbb
mov
sub
jb
scas
sbb
push
add
pushf
sub
arpl
das
addr16
aad
arpl
add
add
popa
inc
jmp
push
jbe
jnp
arpl
dec
popa
push
sub
outsl
aad
push
jb
out
fs
mov
pusha
add
pusha
popa
les
dec
jne
icebp
pop
push
mov
jbe
mov
arpl
dec
popa
inc
test
fs
dec
jb
push
jno
xor
addr16
jb
xor
insb
gs
add
add
call
incl
addr16
jmp
call
call
jmp
jmp
call
mov
cwtl
add
mov
cwtl
add
mov
cwtl
add
mov
cwtl
add
mov
cwtl
add
mov
cwtl
add
mov
stos
add
mov
stos
add
mov
stos
add
add
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
mov
add
jmp
mov
add
jmp
add
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
call
test
cwtl
add
dec
xor
into
cmp
out
add
mov
inc
add
add
and
add
add
add
add
add
add
add
add
add
xlat
add
add
add
jmp
addb
xlat
inc
add
xlat
mov
jmp
sahf
std
call
add
add
add
add
add
mov
add
xchg
add
add
pop
add
add
add
push
add
add
mov
daa
sahf
mov
repnz
out
sub
add
or
fldcw
rolb
or
xchg
aad
lcall
or
mov
hlt
adc
lods
icebp
or
stos
add
adc
mov
repz
nop
testb
add
sbb
fstps
shll
xchg
add
out
cld
out
pop
add
add
popf
jmp
inc
add
add
add
pop
xor
out
and
out
adc
jecxz
or
out
mov
add
add
add
add
mov
add
pop
mov
add
pop
rcrl
mov
out
test
add
add
add
add
pushf
out
mov
add
in
pushf
std
jmp
mov
pushf
add
mov
pushf
add
rcrl
mov
add
in
mov
pushf
std
jmp
mov
add
in
mov
add
in
mov
pushf
add
mov
pushf
add
mov
add
in
mov
lcall
roll
jmp
roll
call
cld
jmp
std
call
call
cld
add
addr16
adcb
add
adc
daa
decl
add
push
decb
xorb
add
pop
jg
adcb
jg
jle
and
mov
add
idiv
jo
pop
decl
add
jle
adc
jmp
jle
add
adc
xchg
decb
add
adc
mov
ds
add
or
ds
adc
enter
test
add
enter
test
adc
test
adc
test
adc
test
add
test
add
or
mov
or
mov
test
add
enter
test
adc
test
adc
mov
lret
add
mov
lret
add
add
add
add
subl
out
mov
add
add
addl
subl
out
mov
add
add
out
mov
add
add
add
add
or
add
mov
or
add
out
add
or
add
or
add
add
jmp
mov
add
icebp
mov
add
jmp
mov
add
loope
add
jmp
mov
add
jmp
mov
add
jmp
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
or
add
add
add
or
add
or
add
or
add
add
add
pop
add
or
add
mov
std
call
popf
std
jmp
popf
jge
xchg
std
jg
push
add
jmp
add
add
mov
jge
data16
add
xlat
add
add
addb
add
add
test
cmpb
add
mov
mov
sub
call
test
loope
jns
add
imul
loope
mov
sub
cmpb
loope
mov
sub
add
test
add
sub
decl
sub
mov
test
loope
mov
sub
incl
flds
addr16
add
dec
add
mov
add
jecxz
xchg
call
jecxz
xchg
addr16
add
ds
jecxz
xchg
addr16
xchg
out
ds
jecxz
add
mov
add
jecxz
xchg
addr16
add
add
add
add
jmp
add
jmp
add
aas
out
mov
out
mov
inc
out
add
jmp
add
inc
out
mov
out
mov
inc
out
mov
or
ret
jmp
mov
or
mov
add
jmp
mov
or
mov
or
mov
add
jmp
ret
jmp
mov
or
jmp
jmp
ret
jmp
mov
or
jmp
mov
add
jmp
mov
incb
add
incb
inc
xlat
jmp
incl
out
pop
inc
xlat
incb
inc
xlat
incb
add
add
inc
xchg
incl
add
incl
inc
cmpsl
incl
add
add
xchg
add
add
add
incl
add
call
pop
inc
add
add
add
lcall
push
aas
and
aas
add
pop
aas
inc
and
aas
and
push
ds
and
aas
add
aas
add
mov
test
inc
mov
mov
inc
add
cwtl
inc
add
cwtl
add
mov
test
add
mov
add
mov
cwtl
add
test
add
test
inc
sahf
mov
inc
inc
mov
test
add
cwtl
add
mov
test
inc
mov
test
inc
mov
add
add
add
inc
mov
mov
add
add
loope
inc
jle
out
jle
testb
out
loope
add
loope
add
add
add
loope
inc
incb
out
mov
add
inc
mov
add
inc
loope
add
add
inc
mov
add
add
add
out
add
add
jmp
add
call
mov
add
mov
add
jmp
add
mov
add
mov
add
jmp
ljmp
add
mov
loope
jmp
mov
loope
jmp
lds
add
mov
add
add
add
jmp
mov
call
call
adc
cld
incl
and
add
add
add
add
add
add
sti
incl
xlat
add
add
sti
pop
add
sti
jmp
sti
pop
add
sti
pop
add
sti
jmp
sti
pop
add
add
add
sti
pop
add
cmpsl
add
add
sti
pop
add
add
add
pop
add
and
sti
call
add
sti
incl
addr16
call
and
pop
xchg
std
movsbl
add
pop
icebp
add
cwtl
add
scas
pop
icebp
inc
pop
add
mov
fadds
add
cwtl
add
fdiv
add
cwtl
icebp
add
fdiv
add
mov
fadds
add
fadds
add
cwtl
icebp
mov
cwtl
icebp
add
fadds
add
cwtl
icebp
add
cwtl
add
mov
pop
add
pop
add
scas
cwtl
icebp
inc
pop
icebp
add
add
add
icebp
out
and
cmpsl
add
or
out
stc
std
es
add
add
icebp
out
mov
icebp
out
mov
add
hlt
sar
add
icebp
es
add
add
icebp
out
ret
repz
std
es
mov
out
mov
icebp
out
mov
add
repz
lea
test
mov
dec
add
movsl
hlt
mov
jmp
mov
mov
sbb
mov
shl
mov
jmp
mov
mov
lea
mov
jmp
mov
mov
test
xchg
mov
jmp
mov
mov
mov
mov
adc
mov
jmp
mov
mov
push
add
mov
jmp
push
add
add
iret
cld
decl
fdivr
call
add
daa
add
add
iret
cld
lcall
fdivrp
lcall
add
add
add
add
cld
pushl
jmp
call
lcall
cld
pushl
call
call
jmp
cmpsl
fcmovnu
cld
dec
call
fdivr
jmp
cmp
cld
decl
cld
mov
jecxz
jmp
sub
call
decl
sub
inc
add
cmp
sub
sub
jmp
jge
lcall
adc
sub
or
sub
add
stc
pusha
sub
icebp
fs
add
mov
jmp
dec
sub
fstps
sub
inc
test
mov
das
ljmp
das
lcall
inc
sub
incl
mov
jno
jecxz
imul
std
cs
mov
cs
mov
xor
aas
add
mov
sbb
sbb
add
mov
cs
mov
cs
mov
out
mov
mov
add
mov
cs
mov
cs
mov
sbb
mov
repz
std
add
mov
jmp
add
add
ret
cwtl
mov
scas
nop
mov
jmp
loope
std
inc
std
sub
loope
std
adc
mov
jmp
test
std
fbld
mov
icebp
popf
mov
or
mov
icebp
popf
mov
sub
mov
inc
fimull
add
fimull
cld
incl
cmpsl
add
add
lcall
jmp
call
ljmp
lcall
inc
inc
call
push
jmp
cld
jmp
lcall
ljmp
cld
cmp
jmp
incl
cmc
frndint
decl
jmp
xlat
cld
mov
test
das
call
sti
das
incl
pop
xor
jno
xor
imul
lcall
das
call
decl
incl
cs
cmp
ljmp
dec
jmp
add
sub
decl
inc
sub
sub
stc
push
cs
dec
cs
jmp
lcall
rorl
sub
mov
xchg
add
xchg
add
xchg
mov
mov
sub
imul
loope
push
xchg
sub
xchg
add
cmp
xchg
sub
xchg
add
xchg
or
and
test
sub
test
add
test
sub
test
and
test
rcrl
test
test
loope
test
sub
test
and
test
and
test
jmp
fldl
jmp
sbb
inc
jb
lcall
test
les
fwait
sahf
and
scas
mov
loop
test
in
outsb
leave
and
adc
jb,pn
shll
nop
mov
add
mov
adc
add
cwtl
and
sbb
out
mov
mov
jmp
pop
imul
call
jb
ret
add
call
insb
insb
mov
sti
imul
pop
jo
cmp
imul
pop
popa
adc
inc
add
insb
add
popa
jne
loope
inc
pop
add
popa
sub
inc
outsb
xchg
in
outsl
cmp
pusha
outsb
jae
jae
mov
bound
std
sbb
add
inc
sbb
xor
arpl
xor
sbb
and
repnz
cwtl
add
mov
icebp
sbb
stc
cli
inc
addr16
add
mov
test
jcxz
cmp
rcll
loope
sbb
pop
int3
push
inc
add
xor
ja
fs
add
jge
jo
jns
push
mov
and
jp
pop
pop
pop
or
out
popa
add
pop
push
sbb
pop
add
cmp
icebp
add
add
sbb
sbb
sub
aaa
push
and
or
lar
jmp
or
lcall
or
or
mov
fimull
int3
add
add
lods
sbb
push
mov
fsts
add
push
fwait
adc
loope
push
add
sbb
jo
add
inc
mov
inc
insb
push
int
add
xchg
adc
push
mov
dec
dec
mov
insb
inc
jnp
add
bound
lret
out
insl
and
inc
add
ret
adc
add
out
ds
lahf
cmc
push
loopne
cmc
int3
mov
mov
push
shlb
lds
fsubp
jae
iret
clc
ds
fdivp
dec
fwait
mov
shll
xor
gs
cmp
jb
pop
arpl
add
add
jb
adcl
pop
je
adc
add
add
add
adc
jo
xchg
add
add
and
push
jbe
stos
and
mov
gs
mov
sbb
imul
add
jb
imul
popa
dec
add
cmp
gs
ret
jo
inc
and
mov
mov
add
insl
decb
insb
pop
add
add
into
packuswb
arpl
sub
int
push
mov
ret
std
pop
or
mov
sbb
add
mov
mov
ljmp
pop
fisttpl
add
pop
xor
jb
push
mov
dec
and
xchg
adc
lcall
shrl
xchg
mov
repz
pop
bnd
scas
jg
outsl
cmc
out
movb
adc
out
adc
inc
adc
push
add
dec
and
iret
inc
or
add
and
rcrl
adc
lock
add
stc
movups
hlt
add
add
sbb
mov
sbb
out
lret
in
or
in
psubusw
int3
cmp
shl
inc
enter
leave
xor
iret
mov
mov
stos
scas
loop
jge
shlb
fcomp
push
lret
leave
inc
jge
jecxz
push
mov
icebp
inc
cs
in
popa
dec
into
ret
jno
iret
shlb
cmpsl
fsubrl
mov
ret
add
in
jmp
rcrl
nop
enter
repz
push
add
insl
ret
pop
icebp
bound
dec
loop
jmp
or
dec
or
imul
add
xor
cs
insl
imul
daa
ja
outsb
subl
jb
bound
aaa
cs
push
push
add
dec
bound
jge
add
push
jb
cmc
jle
popa
jmp
bound
inc
std
push
add
imul
add
fs
ja
imul
add
dec
imul
into
movsl
stc
ds
inc
jno
dec
cmc
bound
cld
ds
adc
add
test
ja
push
lds
test
push
mov
jb
sub
mov
insl
jge
cmc
jno
aam
push
sub
push
add
xor
rcrb
push
sar
or
jne
sbb
xor
push
in
ljmp
fidivrl
fildl
lret
in
add
jmp
sbb
rolb
mov
mov
lods
in
icebp
pushf
cmc
test
in
cmpsl
add
in
icebp
pushf
cmc
test
out
out
add
jp
ljmp
inc
lock
add
pop
aad
out
das
ret
mov
idivb
jmp
sti
add
cmc
sbb
and
add
enter
add
cmc
clc
aam
out
daa
add
add
sbb
inc
cld
insl
int3
inc
test
or
mov
push
ret
push
jmp
fldt
out
in
lds
fbstp
sbb
arpl
and
addr16
out
popa
sub
push
mov
loopne
test
jns
push
ret
dec
loopne
pusha
pop
ret
dec
into
in
jo
add
cmc
ljmp
repnz
xchg
jns
sub
repnz
mov
loop
add
inc
add
jae
fs
inc
std
push
push
es
jno
gs
jo
add
push
insb
add
pop
fs
je
jb
jae
imul
pop
add
imul
cmp
jb
pop
data16
mov
jo
jp
bound
daa
fs
cmp
jmp
add
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
mov
push
inc
mov
dec
pushl
mov
push
jo
xor
add
outsl
xor
adc
inc
cld
inc
hlt
pop
mov
cmpl
jmp
aad
mov
mov
subl
inc
mov
xor
bound
push
lcall
mov
stc
add
mov
inc
iret
testl
xor
and
push
mov
add
adc
dec
cld
stc
mov
add
mov
push
hlt
cmp
insl
mov
mov
test
pop
jae
mov
inc
incl
inc
mov
inc
fcoml
push
mov
push
dec
call
cmp
out
sbb
push
add
or
mov
inc
into
jmp
sti
jne
add
add
add
mov
cmpb
bound
rorb
inc
int3
int3
add
int3
cli
inc
int3
int3
imul
add
subl
shl
sub
jae
cmp
mov
addr16
aas
add
out
mov
movsb
push
incl
mov
imul
or
xchg
cmp
mov
or
add
sti
adc
or
xchg
xor
sar
inc
int
push
sub
mov
mov
adc
ds
int3
or
int3
add
int3
cli
inc
int3
int3
mov
add
lds
ds
lret
jge
int3
int3
add
inc
int3
int3
or
push
mov
or
mov
dec
inc
mov
inc
int3
int3
addb
jp
int3
int3
or
push
in
push
stos
test
inc
clc
cmpsb
imul
clc
mov
lcall
jb
mov
xor
int3
or
mov
sti
mov
jecxz
ror
xchg
push
add
jmp
xchg
cmp
outsb
mov
sub
mov
add
cld
leave
mov
mov
incb
dec
mov
mov
lds
pop
add
add
xor
ror
ds
int3
cmpb
int3
jp
int3
int3
jmp
in
mov
lcall
inc
add
ds
int3
add
int3
int3
cli
cmp
in
sub
mov
test
mov
add
mov
test
or
pop
xchg
jl
or
jno
inc
stos
add
add
outsb
add
xor
jne
inc
inc
sti
mov
jb
mov
ret
mov
cli
add
shll
mov
jl
lock
arpl
movsbl
xchg
jl
or
jl
clc
inc
add
mov
jl
or
adc
or
cltd
mov
jl
or
stc
out
shrl
mov
int
int3
imul
mov
js
in
mov
add
js
call
mov
addb
mov
in
out
add
test
add
add
inc
aad
mov
popa
cmpl
add
add
fisttps
mov
cld
adc
inc
andl
mov
popa
mov
add
mov
jp
or
pop
jmp
fisttps
into
js
hlt
inc
mov
add
aaa
aam
movl
add
adc
bound
movl
add
add
loopne
inc
push
jp
sbbl
sbb
jecxz
std
jmp
shl
mov
outsb
std
addl
xchg
loop
sbb
xchg
jne
add
pop
lea
sti
push
out
sti
call
add
mov
mov
jnp
mov
jne
rol
inc
hlt
xor
push
xchg
pop
xchg
mov
popa
add
addr16
cld
pushl
jecxz
jge
int3
int3
or
subl
lock
mov
inc
mov
cmpsb
insl
add
js
clc
mov
std
and
jp
cld
inc
mov
or
movl
mov
into
ror
cmp
in
mov
clc
add
mov
push
inc
mov
inc
mov
into
ror
cmp
in
subl
decl
xor
js
add
or
xor
incb
clc
aaa
sti
mov
inc
inc
je
cmp
add
mov
js
sbb
pop
jne
js
clc
xor
or
inc
adc
mov
add
in
mov
ja
mov
mov
daa
inc
cld
xor
xor
movsl
push
jmp
mov
add
int3
int3
mov
int3
int3
cmpb
int3
jp
int3
int3
jmp
in
subl
inc
jbe
xor
mov
add
dec
iretw
sti
decl
les
aaa
jle
dec
clc
jbe
int3
pop
decl
mov
inc
dec
inc
mov
sar
jae
mov
jmp
jbe
add
mov
jno
add
add
aas
add
add
mov
pop
sahf
mov
test
sub
mov
inc
dec
inc
mov
jne
inc
mov
sar
pop
inc
dec
inc
mov
shl
popf
inc
push
addl
mov
mov
pop
mov
es
mov
int3
ror
cmp
int3
imul
cmp
inc
ret
mov
std
mov
int3
ror
cmp
int3
int3
imul
stos
push
lds
add
mov
mov
mov
add
cmp
iret
fisttps
push
push
mov
ja
or
jp
call
mov
out
ret
push
mov
les
inc
mov
ljmp
mov
add
push
push
jecxz
jae
mov
rorl
push
fcmovbe
out
jmp
std
cmp
les
add
add
insl
add
inc
mov
punpckhwd
add
pop
xor
push
add
dec
call
add
mov
jl
adc
fisttps
into
push
shl
iret
and
lods
inc
adc
inc
es
or
into
out
jnp
add
shl
push
adc
addl
mov
test
jmp
jl
in
pop
push
cld
loope
add
jle
lahf
in
outsl
ret
add
jnp
mov
mov
dec
inc
mov
cmc
fists
add
repz
cmpl
fcos
das
mov
aam
inc
pop
jnp
xor
push
lock
pop
adc
fcos
das
mov
aam
add
int
mov
cmp
add
jne
fstpt
push
add
sti
push
push
add
push
out
mov
mov
js
fdivs
dec
add
js
loopne
mov
mov
rclb
sti
pop
push
mov
cmp
out
mov
cmpl
push
pop
cmpb
repnz
fdivrs
add
loopne
cmp
inc
xor
pop
insl
dec
inc
mov
sar
inc
or
push
jg
push
mov
imul
cmp
popa
mov
mov
std
push
inc
mov
sar
dec
adc
decl
testl
mov
popa
dec
inc
mov
gs
addl
decl
mov
les
push
loop
xor
sar
lret
push
dec
inc
mov
gs
cmpl
inc
adc
les
mov
dec
inc
mov
js
loopne
ret
push
sbb
stc
add
pop
bound
mov
add
mov
xlat
add
inc
mov
pop
loop
test
mov
mov
mov
xor
in
mov
cli
mov
mov
jp
int3
int3
or
push
lock
mov
xor
add
add
xor
int3
mov
push
cmpsb
mov
in
push
jg
push
call
cmp
mov
shrb
xor
jg
push
ljmp
mov
imul
imul
stos
push
lds
add
add
add
add
add
movl
add
inc
bound
add
mov
cmc
fists
add
test
pop
sarl
add
in
or
ret
pop
dec
inc
mov
push
or
mov
add
add
mov
sar
mov
les
mov
and
add
xlat
stos
mov
inc
mov
add
add
out
shll
inc
mov
mov
mov
js
int3
out
sar
push
aas
add
mov
incl
mov
mov
dec
inc
mov
mov
add
add
add
jg
std
adc
pop
stc
push
inc
mov
add
sub
cmp
jno
dec
into
iret
out
shlb
addl
mov
mov
push
push
push
mov
push
call
cmp
push
xchg
lea
add
mov
jae
lea
push
lea
punpckhdq
movsb
lock
incl
mov
in
mov
add
mov
or
mov
cmp
call
test
or
mov
add
add
mov
inc
sti
add
mov
movsl
push
lock
jg
xchg
insb
sahf
jnp
add
add
mov
cmpl
cmpsb
mov
aad
out
jae
mov
in
ret
repz
mov
mov
mov
add
mov
aas
inc
out
mov
mov
add
mov
add
mov
jmp
mov
aam
ret
shll
dec
inc
mov
dec
dec
inc
mov
sarl
dec
mul
pop
mov
inc
into
idivl
aas
push
add
sub
mov
cmp
mov
add
mov
inc
add
mov
dec
inc
mov
pop
std
test
add
jle
sub
mov
sbb
add
les
add
call
mov
mov
xor
mov
pop
std
dec
int3
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
xor
cwtl
xor
mov
xor
add
add
cmp
jle
dec
aaa
xorl
xorl
ss
aaa
adc
fnsave
aad
add
mov
lea
sub
ja
cmp
test
push
mov
cmp
cmp
cmp
cmp
imul
jno
icebp
cmp
dec
cmp
sarl
xchg
cmp
imul
ds
cmp
ds
repz
jge,pt
dec
outsl
cmp
mov
cmp
ds
cmp
idivb
ds
aas
les
aas
push
cmp
movsb
aas
adc
les
add
cmp
aas
xchg
cmp
aas
xchg
cmp
aas
mov
add
add
xor
xor
xor
loop
xorb
xor
xor
push
xor
xor
xor
xor
jnp
push
xor
xor
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
lods
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
lods
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
inc
add
inc
add
scas
inc
add
inc
add
inc
add
lods
inc
add
add
inc
add
add
inc
add
add
inc
add
scas
inc
add
add
inc
add
add
inc
add
add
inc
add
add
scas
inc
add
scas
inc
add
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
scas
inc
add
scas
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
mov
add
scas
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
scas
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
scas
inc
add
add
inc
add
add
inc
add
lods
inc
add
add
inc
add
add
lods
inc
add
inc
add
add
mov
add
add
scas
inc
add
inc
add
add
scas
inc
add
lods
inc
add
add
inc
add
inc
add
mov
add
scas
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
inc
add
add
mov
add
inc
add
add
mov
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
mov
add
mov
add
mov
add
mov
add
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
mov
add
add
inc
add
add
inc
add
add
inc
add
mov
add
add
inc
add
add
add
inc
add
add
inc
add
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
add
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
add
mov
add
inc
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
mov
add
add
inc
add
add
add
inc
add
add
inc
add
inc
add
add
inc
add
mov
add
inc
add
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
mov
inc
add
add
add
inc
add
mov
inc
add
mov
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
mov
add
inc
add
mov
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
inc
add
mov
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
add
inc
add
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
inc
add
inc
add
mov
inc
add
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
add
add
mov
inc
add
add
inc
add
inc
add
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
mov
inc
add
add
inc
add
inc
add
inc
add
mov
inc
add
add
inc
add
mov
inc
add
inc
add
mov
inc
add
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
