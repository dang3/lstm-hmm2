nop
test
mov
add
ja
add
inc
add
es
add
mov
push
clc
jb
ret
pushl
push
push
call
leave
ret
sbb
aas
in
cmpl
je
mov
mov
daa
call
std
das
sti
shll
clc
push
inc
clc
movl
int3
add
dec
adc
add
nop
inc
xchg
mov
ss
xchg
clc
aaa
lea
push
push
pop
cmp
jb
out
jb
cmp
add
mov
jb
xchg
sbb
outsl
adc
cmp
jbe
sub
arpl
mov
pop
jnp
push
arpl
jnp
scas
or
jne
lret
jno
push
sbb
mulb
or
sarb
cld
cmp
jne
dec
jmp
pop
in
in
pop
jmp
pop
std
cld
push
push
fisubl
or
pusha
sub
mov
cmp
mov
sbb
loope
push
insl
adc
sub
cld
inc
addl
pop
add
ds
in
push
push
add
loopne
in
mov
loopne
cwtl
mov
jne
imul
sbb
or
or
lock
cmp
ss
sbb
add
clc
in
xorl
push
jo
add
movsb
insb
fldenv
arpl
aaa
inc
sub
xor
sbb
adc
add
mov
adc
cmp
fstl
rol
sbb
and
in
es
push
xchg
add
insl
or
cmp
pop
jne
pop
push
in
test
jmp
sub
pop
fldln2
and
movzwl
les
lret
fiaddl
incl
movzbl
and
je
adc
xchg
ret
out
or
movl
sysenter
inc
rorb
sti
inc
sub
stos
gs
pop
push
leave
add
sub
sbb
nop
xor
add
push
xchg
lea
je
pop
xchg
mov
dec
addb
push
cs
icebp
xor
add
sbb
pavgw
out
xchg
add
mov
sub
rcrl
cld
adc
dec
xchg
fidivs
or
dec
xorb
lds
bswap
jno
or
and
add
adc
and
push
aas
and
out
popf
lods
inc
add
inc
cmp
or
in
mov
mov
push
and
jno
mov
jnp
or
imul
mov
push
add
in
push
imul
mov
dec
repnz
rcl
rorb
sub
addl
adc
add
andb
jp
jae
pop
add
jmp
sub
popa
int
fnstenv
jbe
mov
sbb
hlt
mov
pop
hlt
imul
movsl
xor
push
lock
or
sti
mov
sub
insl
add
mov
push
jne
cmp
xor
add
pop
call
enter
sti
jne
add
mov
xor
lock
test
fs
lret
or
inc
xchg
adc
sahf
dec
sbb
cmp
adc
or
jge
cmpsb
call
mov
push
fwait
mov
test
sub
icebp
into
aas
add
adc
fs
leave
and
or
sbb
aam
mov
out
xor
repz
mov
jnp
loop
mov
out
outsb
repz
sbb
xor
xor
pop
clc
inc
packssdw
popa
lods
adc
sub
outsl
push
sbb
xor
mov
mov
inc
outsl
loope
and
or
ret
jg
mov
push
push
cld
mov
mov
jecxz
push
shr
fisttpl
ret
stos
pop
and
rep
pop
xor
pop
or
mull
data16
jecxz
rep
pop
jecxz
adc
cmp
pop
cld
adc
or
jne
inc
pop
psraw
dec
inc
push
push
push
fcmovb
out
ja
inc
inc
sub
mov
cmp
ret
adc
out
sub
cltd
mov
mov
mov
add
xor
outsb
push
or
mov
cmp
cmp
jb
leave
inc
jne
pop
push
push
imul
mov
cmp
add
sti
add
sbb
in
outsb
incl
adc
mov
push
cld
or
pop
jne
lds
or
int
movsl
in
adc
incl
dec
pusha
imul
jnp
jmp
cltd
xor
in
push
xchg
xor
xchg
icebp
je
push
sub
and
pop
xchg
clc
or
push
aad
loope
js
repz
arpl
xor
adc
fcoms
mov
pop
xor
call
pandn
mov
fcmovbe
sbb
nop
mov
add
fcoml
int3
add
or
push
mov
cli
outsl
es
ficompl
fildl
dec
fsubrs
inc
pop
hlt
push
or
je
jge
jp
inc
xor
xor
ficoms
nop
jmp
mov
add
push
mov
pop
sbb
push
push
pop
sbb
adc
imul
loopne
test
push
addl
pushl
xchg
ja
sbb
sub
rcl
shl
mov
or
shr
jae
xor
add
cmpsb
shrl
mov
je
ret
ds
aaa
sbb
add
sbb
div
outsl
cmp
ljmp
add
xor
inc
loop
cmp
or
mov
popa
loopne
or
or
psraw
mov
fdivr
add
inc
push
push
sbb
outsb
adc
or
into
sbb
aam
push
orl
pop
enter
push
push
xor
cmp
push
ljmp
push
pop
mov
push
lcall
xchg
jmp
mov
sub
jg
cmp
fdiv
inc
add
sbb
inc
or
fildll
mov
fsubrs
or
ficompl
or
pop
into
iret
inc
sbb
add
pop
test
cmp
push
in
cltd
lret
add
jmp
add
aam
ret
or
sbb
and
ss
or
movsl
fstl
je
test
mov
mov
add
notl
sub
adc
mov
sbb
push
add
pop
and
ficoml
jg
mov
pop
mov
lods
stc
sahf
lcall
pop
ja
insb
nop
add
sub
xlat
jne
jmp
divl
sub
jo
dec
pop
push
xchg
cmp
insl
pop
push
cmp
pop
cmp
push
enter
inc
out
int
add
loopne
data16
js
adc
or
in
inc
mov
mov
adc
lock
jne
lcall
test
or
pop
add
enter
test
mov
adc
ljmp
mov
out
mov
pop
mov
fists
aas
adc
push
pop
shlb
fcom
mov
dec
icebp
fwait
shlb
repz
sbb
push
mov
hlt
push
xchg
movsl
mul
sti
sub
sbb
mov
mov
imul
shlb
mov
push
mov
cwtl
enter
fimuls
mov
cmp
and
inc
cmp
xchg
out
insb
jl
test
jmp
sbb
cmp
xor
or
dec
in
jmp
jne
push
iret
test
mov
pushf
add
filds
lea
mov
mov
xchg
pop
and
push
mov
jb
in
push
leave
inc
xor
lret
sbb
xor
loop
sub
shlb
popl
jl
xchg
mov
lret
jne
cmp
xchg
lcall
fbld
rolb
cmp
mov
iret
inc
xor
jmp
pop
fdivs
jmp
shll
pop
push
xor
sub
adc
pop
icebp
cwtl
xor
mov
adc
push
enter
push
cmpb
add
cli
xchg
ja
mov
xchg
push
inc
push
pop
fisttpl
movb
out
imul
adc
popl
movb
lods
dec
mov
or
lret
add
ret
or
and
lods
fbld
sbb
aam
xor
imul
pop
out
add
cmp
in
add
dec
or
int
push
mov
jmp
lock
pop
pop
pop
or
nop
xor
push
cwtl
cld
mov
nop
fimuls
sbb
sub
add
jmp
rclb
aam
jbe
adc
jmp
adc
cmp
xor
mov
std
sub
mov
add
inc
adc
loopne
xchg
data16
arpl
or
movsb
dec
inc
sbb
pushf
sti
or
or
cmpsb
stos
test
out
sub
and
jns
cmp
push
mov
rolb
fistl
cmp
nop
mov
nop
add
nop
inc
cmp
or
xor
jbe
fsin
nop
jg
add
add
push
inc
or
push
sub
jg
stc
mov
sub
rol
loop
ror
mov
bswap
shr
dec
and
nop
pop
dec
push
into
mov
adc
nop
mov
sti
jecxz
nop
push
nop
mov
jle
stos
das
outsb
loop
xchg
int
clc
nop
pop
nop
das
add
jg
aas
ret
sbb
mov
mov
pop
movsb
or
xchg
adc
out
dec
aaa
jecxz
mov
add
xchg
pop
addl
stc
add
loop
in
repz
fimull
and
cmp
ror
mov
or
popf
out
jbe
mov
rcrb
lahf
jns
sbb
mov
mov
inc
xchg
js
ds
test
clc
and
daa
mov
mov
or
push
inc
ret
or
sbb
pop
or
mov
addl
and
in
mov
call
sarb
out
lock
jecxz
bound
pop
or
in
jecxz
xchg
add
xchg
cld
sahf
and
add
cmpsl
addr16
xor
mov
sbbb
push
imul
fldenv
and
dec
push
sbb
mov
cwtl
jmp
push
lds
frstor
add
pop
and
or
je
or
je
sub
jbe
cmpb
adc
or
int3
mov
or
inc
cmp
add
in
mov
push
or
adc
cmpsb
xor
imul
testl
imulb
adc
jae
push
pop
imull
int
int3
insl
sub
in
out
call
mov
xor
jno
ret
adc
and
pop
paddsb
daa
jo
dec
hlt
pop
js
push
lock
xchg
mov
pop
push
xchg
call
add
add
call
and
insb
movsb
sub
dec
push
and
fwait
mov
sub
mov
push
push
push
fisubrs
lea
xchg
je
les
push
movsb
mov
add
movb
cmp
jb
add
mov
lcall
add
mov
lea
movl
movl
stos
int
push
or
fdivrl
xor
into
adc
dec
icebp
mov
sbb
cld
repnz
ficoml
pop
pop
pop
pop
out
mov
jae
std
mov
fstl
mov
push
adc
xor
and
ficomps
mov
js
push
add
rol
add
sub
lea
add
rorl
mov
cli
add
and
dec
or
rcll
lret
xor
and
add
ljmp
lea
add
rol
add
pop
scas
fs
xchg
std
cmc
add
pop
sub
xchg
jle
lret
adc
test
add
and
fcomps
dec
xchg
pop
scas
testl
xchg
in
mov
mov
stc
xchg
sub
and
nop
imul
jno
std
and
fs
inc
jns
cmp
or
mov
cmp
stc
pop
jge
gs
and
sub
ficomps
mov
rcrb
mov
pop
pop
xchg
ja
push
pop
pop
es
mov
fs
pop
stos
mov
add
pop
adc
adc
and
das
adc
adc
add
pop
leave
repnz
enter
cld
enter
adc
int
and
xchg
in
pop
aaa
ret
cmp
stc
xchg
sub
in
adc
inc
and
lret
popl
clc
mov
and
flds
outsl
addr16
inc
xchg
pop
mov
xor
sti
insb
xchg
xchg
aaa
inc
cmp
incl
clc
inc
fs
fiadds
or
fs
cli
and
insl
adc
add
aaa
or
in
cmp
xchg
pop
enter
mov
fimuls
daa
in
std
inc
pusha
dec
mov
mov
mov
fwait
sub
test
or
daa
mov
test
out
aam
lret
das
fs
sbb
or
cmp
aam
and
cltd
inc
xchg
pop
fdivs
push
clc
jl
pop
cmp
xor
cld
gs
lods
les
mov
jg
or
and
hlt
das
push
sbb
repnz
cmp
xchg
ljmp
inc
sbb
mov
sti
or
cmpsl
and
nop
or
xchg
sub
xchg
cld
adc
ret
int3
sub
mov
andl
or
or
fisubl
andb
in
fs
xchg
rcrl
test
scas
in
cmc
dec
jle
outsl
inc
loopnew
sub
cmp
scas
mov
inc
add
pop
jle
adc
dec
xor
jle
mull
mov
xor
add
repnz
xchg
jo
xchg
in
xchg
and
add
add
ljmp
dec
mov
jns
psubd
adc
popa
jg
push
outsb
aad
out
imul
mov
data16
or
pop
data16
or
cmp
aam
lock
ret
jmp
jecxz
inc
push
push
popf
test
addl
mov
insl
jae
mov
ret
inc
daa
or
add
movb
imul
aaa
jbe
add
je
andb
testb
in
mov
add
mov
dec
mov
loope
std
fdivp
bswap
mov
xor
sti
mov
bswap
mov
jnp
and
push
in
jne
enter
push
loope
dec
xor
int
insb
mov
movsl
mov
mov
incb
fnstsw
lea
divb
ret
xor
mov
mov
push
fsts
pop
nop
xchg
cld
or
into
in
sub
not
and
and
or
add
aam
call
cli
movsl
add
inc
clc
mov
rol
mov
mov
jecxz
mov
or
fcomps
stc
leave
outsl
sti
mov
xor
xor
mov
mull
mov
and
nop
lahf
sbb
jno
je
fdivrl
xchg
shll
and
add
add
adc
and
dec
cwtl
add
xor
in
adc
insb
jne
or
jnp
dec
sbb
inc
or
push
pop
rcrb
fnstsw
aaa
insl
add
cmp
push
sub
push
mov
adc
rcll
aas
sti
data16
int
mov
xchg
add
jp
pop
mov
and
or
hlt
idivb
push
pop
jle
or
ret
push
or
adc
push
adc
adc
mov
pop
add
pusha
jle
clc
mov
out
mov
mov
push
cs
mov
cmp
or
iret
sbb
jge
test
and
and
int
mov
cld
or
or
or
leave
add
push
dec
inc
ret
daa
pop
or
and
call
xchg
add
cmc
inc
dec
lock
mov
push
xor
adc
push
int3
and
adc
andb
pop
jb
lea
fistpll
add
roll
clc
cmp
push
je
push
addl
jbe
push
xor
or
lds
xchg
jmp
mov
es
sbb
sub
daa
push
xchg
ret
and
adc
lahf
xchg
add
lret
rolb
outsl
pop
add
cld
or
xchg
push
pop
dec
leave
inc
aaa
cmpl
imulb
cmp
outsb
andb
call
ljmp
push
mov
and
xor
adc
cmp
lds
and
push
adc
and
roll
push
adcl
push
pop
push
shll
xchg
dec
push
dec
ss
divb
inc
mov
mov
mov
repnz
mov
cli
mov
push
int
push
or
nop
enterw
test
xlat
or
mov
insb
movsb
push
push
addb
cmp
mov
push
push
outsb
test
pop
int3
push
cld
sbb
clc
push
mov
lock
pop
inc
mov
push
adc
movl
pop
mov
add
mov
cmpl
lea
mov
stos
xchg
jmp
outsl
outsl
rorb
aam
pop
lock
sbb
add
push
in
or
sub
fstpt
jge
mov
movzbl
ja
mov
lds
sub
mov
popf
mov
orl
gs
sbb
stc
fisubrl
mov
and
iret
cs
jae
shl
hlt
std
adc
fcmovne
xchg
dec
sub
in
bound
pop
int
adc
test
and
insl
push
xchg
lods
mov
adc
fs
ss
sub
jnp
adc
push
dec
pop
mov
cmp
push
add
push
dec
sbb
pop
ss
ret
xor
adc
or
add
les
lock
nop
fcomp
push
hlt
out
add
sub
pinsrw
mov
jns
sbb
jo
rclb
sub
adc
js
jecxz
rcrb
daa
loope
mov
xor
dec
or
fmuls
orl
xor
or
and
mov
mov
push
lods
scas
lods
sub
push
adc
adc
adc
sbb
dec
jne
and
and
cmp
or
out
adc
sub
cmp
dec
add
xchg
sub
jmp
push
sub
repnz
stos
mov
jge
pop
jns
rcr
aaa
or
mov
fcomps
push
or
sar
mov
je
xchg
add
push
adc
add
sub
inc
mov
inc
mov
insb
mov
outsb
adc
adc
pop
sub
xor
sub
dec
jo
xor
and
popa
inc
clc
data16
inc
xchg
or
movsl
dec
enter
mov
and
aam
mov
pop
int3
mov
mov
inc
inc
in
sub
pop
push
loop
mov
or
inc
push
sbb
clc
ret
and
ljmp
mov
inc
jae
sub
xlat
packssdw
lret
in
and
cs
enter
int3
mov
leave
push
or
inc
push
sub
mov
sbb
jae
aad
inc
sub
push
pusha
movsb
push
lcall
mov
adc
sbb
adc
gs
push
or
push
cmpsb
sbb
xchg
test
in
adc
xchg
adc
push
jne
xor
into
inc
adc
aaa
pop
nop
fidivl
in
fs
pop
push
iret
fistpll
jnp
insb
mov
or
xchg
adc
nop
sub
inc
stc
or
sahf
mov
mov
repnz
xor
addb
stc
dec
sub
push
arpl
mov
add
add
pop
mov
mov
pop
pop
sub
lock
ja
inc
inc
cmp
or
hlt
xchg
lock
into
insl
sbb
sbbb
js
sarb
jecxz
cld
push
lcall
ds
js
jmp
lock
push
inc
bound
sarl
xlat
and
pop
ret
inc
xchg
call
fcmovne
cs
cmp
xlat
lret
ret
dec
cmpsb
jmp
movb
add
lret
bound
or
inc
mov
push
cmp
aam
cmp
cli
or
inc
insb
in
movsb
dec
mov
hlt
sub
rorl
and
movsl
cltd
shlb
pop
sti
jbe
setns
xor
and
adc
adc
imul
out
fcmovnu
pop
sbb
sahf
out
add
std
cld
sti
cli
inc
popf
xchg
out
clc
mov
notb
mov
add
out
out
shr
or
or
test
add
add
adc
mov
ret
cld
sub
or
fiaddl
rorb
pop
aad
jl
ret
mov
add
fwait
jb
popa
xor
inc
add
bound
pusha
movsl
jg
imul
xchg
add
add
mov
loope
mov
ret
popw
notb
adc
pusha
sub
outsl
cld
ret
dec
add
xchg
lahf
pop
stos
fisubs
jnp
cmpl
sti
xlat
or
adc
cmp
sub
pop
leavew
mov
push
push
fld
fldenv
dec
repz
pop
test
mov
xor
dec
iret
popf
xor
or
fisubrs
call
inc
cmp
sarl
xor
and
outsl
xor
subb
sub
push
or
mov
call
scas
clc
adc
xor
in
divl
popa
hlt
idivl
sbb
xchg
xor
fwait
jmp
scas
mov
add
pop
pusha
dec
jmp
ror
mov
xor
mov
mov
mov
fldcw
test
xor
ret
push
pop
lock
add
ja
call
push
xor
mov
enter
outsl
lock
or
daa
in
add
adc
add
adc
test
xor
xchg
push
hlt
push
mov
xchg
negl
xor
sbb
jmp
in
aaa
push
or
sub
xchg
in
cmp
xor
inc
call
aaa
xchg
push
pushl
inc
xchg
xor
or
ret
es
xor
call
jns
inc
je
or
xor
xchg
add
movl
and
lret
push
sbb
dec
addb
or
push
and
mov
adc
popa
cwtl
lods
add
xchg
push
push
push
mov
xor
and
push
cmp
jb
ss
jo
push
fdivrs
adc
aaa
imul
mull
mov
inc
das
data16
pop
ljmp
or
test
scas
sub
outsl
out
pop
imul
push
insb
inc
sub
and
or
dec
and
pop
in
out
lock
adc
sbb
test
pop
sub
mov
push
lahf
dec
inc
or
inc
pop
movsl
mov
add
add
mov
jb
cmp
sbb
or
nop
push
daa
cmp
andl
jmp
inc
lods
mov
in
insb
xchg
jo
mov
das
cmp
fstpl
jno
aaa
or
cmp
cmp
mov
js
and
sbb
mov
ss
xor
pop
xor
lock
add
negl
mov
cwtl
cwtl
enter
add
in
dec
add
inc
push
add
insb
negl
adc
cltd
or
cmp
leave
xchg
and
xor
mov
andl
in
and
and
inc
cs
js
push
mov
add
lock
inc
add
sub
inc
ret
in
xchg
ret
or
sbb
rcr
and
iret
outsb
inc
xor
je
test
jmp
jno
dec
dec
mov
inc
inc
das
pop
xchg
and
cmp
adc
mov
jl
xchg
mov
stos
xor
mov
push
inc
fxch
repz
push
sub
ja
lcall
mov
test
cmp
ja
push
push
or
jne
icebp
add
pop
cld
xor
mov
repnz
cmp
jne
sarl
es
cli
bound
in
or
test
in
push
in
ret
sbb
jle
inc
xchg
xchg
adc
jno
outsb
cld
pop
and
mov
dec
sbb
pop
mov
mov
repz
sbbl
inc
mov
or
mov
mov
and
jb
cmp
scas
shrl
in
test
imul
or
xor
filds
pop
xchg
shrb
movb
fstl
pop
movsl
or
inc
movsl
movsl
loop
nop
and
lds
inc
cmpsb
insb
push
fnstsw
pop
push
rclb
pop
xor
sbb
push
imul
dec
addr16
push
lret
cltd
push
aas
and
push
and
sub
test
pop
cmp
pop
movb
loopne
in
mov
lahf
and
jns
cld
sbb
sbb
mov
call
and
sub
in
loopne
in
pop
rclb
xchg
add
add
lcall
pop
xor
cmp
xchg
loope
pop
mov
hlt
cmpl
add
xchg
imul
fs
mov
loopne
mov
xchg
andb
xor
nop
roll
sub
clc
and
sbb
in
icebp
pop
xor
and
mov
cmp
mov
xor
jae
insb
ret
push
push
sub
iret
cmc
jmp
scas
stc
or
pop
xor
add
push
or
idivb
daa
xor
clc
inc
pop
jo
jne
hlt
addb
fs
push
pusha
rorl
inc
mov
xchg
sbb
popa
out
inc
jb
add
xor
cmovs
loopne
je
inc
mov
push
and
inc
fldcw
sub
xor
daa
or
test
pop
mov
xor
and
jae
imul
test
loope
hlt
xchg
and
push
inc
cmpb
add
cmp
rcrl
mov
push
jbe
outsl
inc
int3
scas
adc
and
mov
xchg
xor
jl
add
xchg
jo
fwait
xor
cmpsb
inc
push
sbb
fcoms
adc
sbb
dec
cmp
push
sbb
lods
xor
or
or
daa
dec
inc
pop
repnz
mov
fsubs
or
stos
xor
dec
sbb
jae
enter
or
clc
mov
and
or
cld
and
repz
jb
das
sbbl
or
fxch
pop
pop
pop
mov
inc
inc
adc
sub
push
push
mov
adc
adc
xchg
and
fcomp
in
enter
pusha
ss
add
xorl
pushf
pop
call
add
mov
ficomps
mov
and
sub
dec
add
pushf
inc
daa
pop
adc
leave
and
ret
loopne
fdivl
xor
popa
rcrb
nop
mov
inc
or
xchg
in
cli
add
pop
sub
pop
xchg
push
inc
xor
nop
sub
push
mov
xchg
dec
pop
fsub
add
rclb
mov
es
jns
cwtl
xchg
sub
inc
sbb
ds
and
xchg
fcompl
jp
pop
dec
hlt
dec
push
add
xchg
or
sbb
hlt
sarb
add
mov
aad
andl
aaa
add
and
xchg
pop
or
adc
or
or
mov
dec
rcrb
jo
push
pop
fsubs
fwait
dec
inc
into
or
call
and
jno
mov
or
lret
in
and
enter
sbb
rclb
mov
push
mov
xchg
xchg
lahf
pushf
inc
pusha
and
adc
leave
orl
add
dec
or
xchg
pop
push
sbb
inc
push
lret
int3
pushf
aaa
inc
pop
leave
and
aaa
mov
ret
cmpsl
xchg
aaa
mov
and
xchg
arpl
and
add
aas
push
daa
arpl
pop
sbb
cs
sbb
int3
jne
cmp
adc
in
push
sbb
enter
mov
jmp
inc
xor
imul
xchg
pushf
sub
hlt
rorl
push
pop
push
and
inc
lods
jne
cmp
pop
inc
and
sub
add
fnstenv
push
lahf
xchg
je
mov
into
ficoml
adc
in
in
sahf
es
ret
ret
or
and
cmp
lret
xchg
sub
add
dec
push
push
add
jae
or
in
mov
xchg
insb
dec
leave
adc
inc
cmp
mov
push
loopne
cmp
pop
cmp
or
mov
test
or
push
cmp
pusha
xchg
cmp
push
cmpb
mov
xchg
jge
dec
dec
pcmpgtb
adc
xor
jecxz
jns
and
xor
sbb
cmpsl
popf
fadds
andb
mov
mov
mov
add
mov
stc
loopne
outsl
fcoms
addl
aas
mov
fcomps
gs
push
andb
shll
fnstenv
add
sbb
lds
mov
sub
fs
and
dec
push
add
push
hlt
mov
mov
fwait
cltd
lea
aaa
xchg
in
or
cli
mov
jmp
push
call
pop
push
jle
ljmp
push
adc
aas
test
pop
dec
pop
pop
or
rorb
add
jnp
mov
xchg
jmp
pop
mov
js
cmp
leave
lods
or
sbb
paddb
dec
push
jo
pop
les
push
mov
and
sbb
sub
xchg
pusha
xor
pop
mov
pop
pop
adc
dec
jb
dec
cmp
pushf
or
pop
push
sbb
cmp
in
inc
or
enter
jle
orb
dec
adc
decb
or
popf
pop
jb
cmp
sbb
aad
mov
cmp
mov
aad
stos
xor
enter
lods
mov
xchg
mov
pop
icebp
inc
dec
leave
and
pop
xlat
nop
xchg
adc
sub
cmp
in
in
popl
add
push
ficoms
es
rcrb
xchg
rorb
xchg
mov
and
sub
cltd
shrb
sti
sbb
pop
xchg
clc
pop
fldt
adc
fsts
cmp
cmp
and
cmp
cmp
popf
xchg
and
xor
cmp
out
dec
pop
leave
inc
sbb
and
sbb
ret
xchg
nop
adc
les
stos
dec
cld
popf
adc
insb
or
idiv
xchg
mov
insl
inc
test
sahf
jmp
ss
mov
sbb
popa
mov
nop
add
or
sbb
mov
xor
push
and
pop
or
call
inc
sbb
cmp
cmp
and
ss
mov
pushf
sti
in
pop
jbe
fsts
call
enter
pop
rcll
xchg
bound
jecxz
notb
in
inc
enter
sbb
mov
inc
insb
mov
sbb
cmp
ret
jne
or
and
inc
push
push
add
push
fs
jge
add
inc
jge
or
or
or
lret
jp
test
lods
sub
adc
std
shlb
dec
pop
and
push
and
cmp
cmp
in
adc
inc
cmp
adc
dec
cmp
enter
fadds
jbe
pop
fsubs
adc
rcl
xchg
addr16
add
nop
or
fcompl
sub
xchg
aam
fsubl
aam
scas
inc
es
cmp
test
xlat
push
repnz
cmp
mov
add
inc
andl
sub
sub
mov
xor
cmpsl
pop
push
leave
adc
xchg
cmp
xchg
aam
hlt
mov
nop
imul
shlb
stos
push
mov
pop
and
rorl
cs
fmuls
cmp
adcl
push
je
mov
or
adc
aam
sbb
jge
fdivs
sbb
nop
insb
jns
xchg
jns
je
fadds
imul
imul
jb
inc
adc
cltd
ret
adc
and
sbb
or
and
dec
push
dec
mov
push
or
add
xchg
push
cs
xor
jl
cmp
adc
dec
adc
lahf
adc
sbb
xor
lds
bound
pushf
cmp
outsb
mov
negb
and
push
arpl
inc
adc
iret
mov
loopne
clc
loop
pop
mov
or
movsl
mov
cmc
mov
fisttpl
outsl
sub
repnz
inc
pop
mov
insl
sub
adc
pop
and
adc
testb
xchg
sub
lcall
fisttpl
enter
les
cmp
mov
adc
add
or
and
adc
inc
mov
xchg
inc
inc
add
mov
fldl
jb
cld
cmp
in
sub
or
fidivl
cli
xchg
pop
adc
out
add
push
orps
std
xor
or
in
movzbl
clc
or
lock
xlat
popa
out
mov
push
add
sub
push
pushf
fisttps
pop
and
adc
jnp
mov
lock
pop
mov
clc
pop
add
pop
inc
or
fwait
cmp
inc
imul
lock
xchg
sub
jmp
cld
fsubrs
stos
mov
subb
insb
cwtl
jnp
insb
push
jb
stos
jg
sub
pushf
insb
imul
test
add
inc
add
ss
arpl
movsb
push
add
sbbb
pcmpgtb
aam
fadds
adc
sub
jp
lock
mov
adc
in
fdivr
add
pop
fwait
jo
and
cmp
and
add
dec
adc
clc
pop
mov
cmpsb
in
das
in
sbb
mov
rorb
or
loopne
xchg
ljmp
loop
test
cmp
xor
add
sub
leave
add
ljmp
cs
clc
out
imul
inc
int
insl
lods
fsubr
lds
or
repnz
idivb
sbb
and
fstpl
mov
lods
mov
pop
das
pop
cld
into
jne
add
mov
cmp
daa
icebp
out
add
arpl
das
add
sti
ret
pop
in
sbb
arpl
jne
pop
notb
cwtl
adc
gs
inc
das
subl
cmova
nop
into
mov
fbstp
clc
jb
sub
mov
or
xchg
sbb
jb
push
in
call
ret
insl
add
xor
notb
push
nop
pusha
fcomip
adc
mov
pop
not
pop
or
fldlg2
or
dec
fmuls
inc
mov
push
testl
imul
hlt
push
xchg
movsb
cmp
pop
mov
jo
adc
movl
jne
inc
xor
je
repz
pop
dec
add
je
add
and
je
adc
jae
mov
cmp
in
aam
mov
xchg
sub
push
dec
push
xorl
fcmovnb
and
insb
adc
nop
jne
test
scas
push
roll
cmp
dec
or
mov
adc
adc
mov
push
push
adc
ja
je
mov
and
adc
fwait
or
pop
leave
in
cmp
cmp
cmp
xchg
xor
gs
dec
movsl
add
and
nop/reserved
sub
inc
inc
lret
add
cmpl
loop
sub
dec
in
adc
pop
add
sub
jb
pop
pusha
clc
ja
ja
testb
inc
push
push
add
mov
inc
push
sbb
mov
adc
mov
or
jne
dec
lea
add
cmp
jg
in
lahf
inc
add
cmp
add
enter
in
js
cmpb
js
and
ret
cmp
cmp
lock
adc
adc
js
push
xchg
cmp
sbb
cmp
enter
and
jns
pop
fsts
push
movl
lcall
add
jbe
add
sub
pop
clc
cmpw
mov
add
fs
inc
ds
xchg
jbe
inc
gs
push
xchg
jae
jl
pop
mov
push
mov
and
sti
and
jmp
pop
xor
mov
and
and
arpl
cli
mov
sub
fs
jmp
inc
int
pop
dec
hlt
loopne
daa
enter
int
xchg
or
adc
mov
test
loop
or
dec
mov
push
inc
or
add
and
pop
mov
decl
mov
loopne
xor
ret
movsb
test
push
push
adc
notb
inc
pop
inc
fwait
jo
jmp
adc
mov
fldl
dec
lock
pop
jne
adc
js
push
or
insl
out
sbbb
pushl
push
add
cli
xchg
or
and
test
fxch
popa
and
orps
inc
call
test
inc
outsb
je
stc
mov
inc
jbe
jp
push
ds
mov
sbb
lds
jl
int3
xlat
fs
mov
xchg
xor
lret
and
push
adc
lea
mov
test
clc
fs
or
inc
das
or
fsub
mov
hlt
inc
push
inc
pop
pop
add
inc
lock
sar
xchg
push
insl
xor
pop
pop
push
flds
mov
or
pusha
mov
push
sbb
push
dec
pop
jmp
arpl
fmuls
mov
add
push
mov
test
test
or
cs
pusha
aam
insb
enter
mov
jge
jge
call
push
mov
stos
adc
push
out
sbb
ret
dec
ret
addr16
xor
dec
cmp
jae
sub
addb
push
add
mov
loope
adc
fldt
fbld
adc
test
vpshlb
mov
leave
inc
pop
mov
into
aas
push
or
into
rcrb
jl
pop
mov
leave
jge
pop
jne
xchg
dec
inc
movsb
mov
mov
cmp
push
stos
sub
jg
jne
xchg
sbb
jne
data16
out
inc
stos
int3
pop
cmpsl
test
jo
pop
adc
jge
adc
sahf
out
out
add
std
and
inc
add
adcb
and
iret
add
sub
insl
jae
sbb
or
imul
out
popf
xchg
xchg
mov
push
les
lret
rorb
and
gs
push
xchg
andl
inc
shlb
sbb
cld
mov
sahf
fimuls
adc
xchg
sub
mov
push
sub
enter
jmp
imul
push
andl
mov
push
sarb
adc
lods
std
shrb
mov
addb
inc
adc
xor
inc
repnz
jne
adc
cmp
pop
sbb
fimull
sbb
mov
and
jp
xor
mov
adc
mov
aas
dec
leave
sbb
cs
mov
mov
pushl
mov
add
jae,pn
push
fnstenv
adcl
scas
xor
dec
jle
mov
inc
and
and
or
cltd
jae
inc
mov
pop
sub
inc
stos
sub
push
jge
int
xor
pmuludq
push
pusha
add
push
add
gs
inc
aaa
pushf
inc
jo
jbe
mov
jae
loopne
pop
push
push
ja
decl
lock
sbb
mov
pop
push
push
popa
xor
hlt
fstl
mov
cmp
jne
enter
xchg
xchg
adc
out
or
shl
adc
pop
or
cs
dec
push
xor
xor
or
pop
pop
in
pusha
mov
rclb
ret
mov
pusha
or
lods
mov
dec
test
ficomps
nop
cmp
call
sub
cmp
and
sub
jo
add
pop
hlt
sub
and
push
adc
int3
fadd
cmpb
and
jl
pop
push
jmp
cmp
jmp
leave
sub
add
sub
js
cmp
pop
popa
imul
inc
loop
push
add
dec
or
ss
xchg
jo
xorb
or
xor
fs
ljmp
pop
and
pusha
xchg
rclb
test
cmp
es
xchg
addl
sbb
daa
push
inc
sahf
and
mov
test
xchg
dec
adc
test
adc
or
enter
test
dec
add
add
pop
xor
sbb
fwait
ret
aad
movsb
in
dec
notl
ret
inc
xor
mov
fisubl
pusha
orl
sub
and
mov
sub
and
jb
sub
nop
push
push
in
or
std
sub
push
leave
outsl
inc
cmp
cmp
enter
mov
adc
pop
sbb
sbb
jne
sbb
nop
cmc
add
dec
xor
jno
shlb
nop
xchg
jbe
and
loop
or
or
enter
adc
adc
pushf
sbb
pop
mov
adc
add
pop
es
dec
and
xor
mov
push
inc
repz
mov
cld
cmp
cmp
xor
les
hlt
enter
add
shrb
or
add
fs
dec
add
sub
cmp
fistpl
push
push
in
call
ret
mov
subl
fistps
or
jns
fisttps
add
out
sahf
mov
inc
test
push
pushf
pop
leave
jae
mov
add
les
in
fcompl
hlt
mov
xchg
mov
cmpl
insb
scas
inc
mov
in
or
fsubrs
xchg
sub
and
jp
mov
ss
data16
repz
nop
data16
testb
pop
jmp
sub
fs
jecxz
sub
mov
mov
mov
mov
cli
insb
xor
and
shl
dec
je
iret
sbb
mov
subl
bound
or
add
dec
mov
inc
scas
dec
add
cltd
movsb
negl
pop
cmp
sbb
and
cld
test
mov
xor
mov
and
mov
add
adc
xchg
stos
cmp
or
or
xchg
popf
add
lea
cs
cltd
ret
nop
fisttps
arpl
rcll
pop
push
xchg
cmovge
jne
nop
jmp
xchg
mov
into
push
inc
cmp
pop
xlat
pop
std
addr16
and
push
push
sbb
cmp
leave
mov
inc
ss
decl
mov
sub
add
inc
cmp
jb
sub
mov
sub
cs
add
fsubrs
adc
sbb
js
inc
cmp
roll
insb
mov
int3
stc
dec
rolb
push
lods
shll
repz
mov
mov
int3
mov
enter
aam
movsb
js
mov
sub
shlb
arpl
sub
add
xor
ss
mov
jle
pop
push
into
fs
movsb
adc
mov
cmp
scas
int
push
test
pop
jo
fmuls
dec
adc
sub
lea
in
push
fcomps
sub
xor
int3
aaa
inc
lods
push
jne
sbb
xchg
das
int3
add
aam
push
loopne
adc
data16
testl
pop
mov
pop
les
lds
fsubr
mov
mov
push
lahf
lods
xchg
mov
jne
popa
aaa
mul
mov
shlw
add
ret
es
repz
fildll
sti
xchg
ficoml
out
sahf
or
cwtl
push
dec
sub
jo
and
ss
and
or
sub
or
mov
sbb
mov
pushl
or
add
in
sarb
loopne
sbb
fstps
loopne
mov
mov
and
insl
bts
or
mov
xor
lea
clc
cmc
add
cmpb
or
ret
cmp
call
jl
pop
rcl
cmpb
dec
sub
inc
xchg
in
nop
pop
mov
and
hlt
adc
inc
test
ja
add
inc
cmp
fcmovb
sbb
into
add
testl
mov
repnz
add
xchg
idivb
push
mov
orb
adc
int
ja,pn
push
shr
rorb
ljmp
fiaddl
add
cmp
jb
add
ja
sub
jmp
xchg
xchg
mov
push
inc
jb
inc
ja
inc
add
jmp
fucomi
jbe
cmp
or
add
es
cmp
or
add
adc
js
shl
les
inc
mov
mov
mov
inc
je
jae
xor
or
and
orb
cmp
clc
or
cmp
call
in
cs
and
adc
gs
inc
clc
pop
xor
push
and
and
lock
jbe
and
push
sub
sbb
or
loopne
clc
fsubl
cmp
adc
aam
rorb
jl
int3
jmp
rorb
sbb
xchg
mov
xor
sbb
sarb
push
es
jne
outsl
push
or
loopne
or
mov
loop
xor
mov
xchg
int3
cld
mov
loopne
cmpl
loopne
or
enter
js
adc
stos
jnp
adc
push
xor
leave
or
and
cltd
mov
lock
test
cmp
sub
adc
sub
or
jb
xor
fs
adc
dec
mov
sbb
push
and
call
dec
push
rcrb
jmp
int3
rcll
inc
cmp
hlt
dec
jne
sbb
pop
sbb
fisubrs
add
push
je
in
sbbb
fistpl
ret
fimuls
inc
les
and
pop
inc
clc
push
pop
add
pop
inc
sbb
lods
mov
fs
rcll
inc
jo
mov
cmp
add
inc
sbb
push
and
test
test
outsl
sbb
jne
mov
shld
mov
test
or
adc
iret
pusha
mov
jbe
jge
jmp
pop
inc
mov
es
mov
cmpl
jbe
inc
or
testl
cmp
or
cmpsb
bnd
add
cmp
jae
mov
outsl
mov
je
hlt
andl
mov
mov
inc
iret
push
pop
cmp
scas
out
dec
cmp
jne
sqrtps
push
sbbl
and
mov
mov
add
jbe
or
dec
or
icebp
xchg
sbb
test
jl
jl
push
and
adc
rorb
sub
push
roll
mov
inc
add
movups
mov
cmp
inc
push
mov
cltd
out
testl
inc
mov
xor
adc
pushf
ss
sahf
aam
and
iret
xor
scas
add
add
add
push
add
dec
repnz
sbb
add
sbb
sbb
imul
and
jbe
pop
and
popa
sbb
mov
and
inc
xor
or
xchg
mov
or
push
jge
push
aas
ficoml
or
jae
movsl
mov
mov
roll
jecxz
add
sbb
jno
add
and
ss
or
mov
or
add
or
aam
push
insb
jnp
cmc
imul
jmp
loope
icebp
push
add
loopne
aas
pop
aad
add
outsl
pop
or
call
sbb
pop
or
or
or
das
fcoml
sub
fsubs
or
or
or
aam
in
or
loope
cmp
hlt
add
push
lcall
emms
or
add
cmp
push
je
call
in
jbe
jp
insb
sub
int3
clc
push
in
cmpsb
loopne
shr
push
nop
clc
sub
adc
add
jbe
inc
sub
pushl
stos
repnz
aad
jp
sbb
or
push
movsb
insb
cs
push
hlt
add
fdecstp
in
xchg
fcompl
push
loop
pop
lods
jp
loopne
loopne
inc
lock
push
pushf
ja
out
mov
je
loopne
add
enter
jp
loopne
sbb
je
pushf
add
mov
sbb
inc
sbb
fidivrs
sahf
add
outsl
adc
andl
outsb
or
subb
andl
pop
clc
cmp
es
or
lods
loope
imul
pop
push
lea
cmp
pop
jne
in
adc
and
popf
add
subb
cmp
push
orb
clc
jb
add
test
cmpxchg
xlat
mov
cmp
mov
sbb
xor
pusha
shlb
divb
push
lods
mov
fs
out
xchg
lea
inc
add
enter
outsb
inc
enter
loopne
or
in
cmp
xlat
mov
sub
push
aad
adc
nop
in
loope
fcomp
mov
call
mov
or
icebp
push
pop
dec
scas
and
sbb
cmp
ja
sub
loop
sub
xchg
cmp
fsubr
add
push
in
and
jae
lods
jmp
dec
sbb
sub
and
push
aam
leave
in
stos
and
bound
insb
adc
in
xor
fcmovnu
outsb
lock
xchg
or
imul
lret
dec
push
inc
out
mov
jnp
repnz
sub
insb
add
in
and
or
test
popa
mov
add
xor
push
clc
rorb
add
jae
cmp
rorb
push
inc
push
or
sbb
sti
mov
push
inc
inc
ss
mov
or
lock
and
sbb
adc
wbinvd
pop
pop
fiadds
je
pop
je
pusha
mov
pop
and
rolb
dec
daa
jne
dec
pushf
sub
clc
addr16
sbb
or
pop
mov
push
das
pop
cmpsb
incl
inc
xchg
out
mov
cmp
bound
xchg
add
notb
cmpb
adc
pop
fbld
pushf
mov
sub
inc
das
push
fisubs
and
inc
insl
hlt
mov
sub
ds
sub
or
faddl
push
cmp
sbb
rclb
sbb
adc
das
mov
or
call
in
lock
loopne
add
imul
push
xor
scas
call
add
and
test
comiss
cwtl
stos
ret
ja
push
sub
adc
dec
rolb
movsb
sbb
into
jp
or
push
add
data16
adc
adc
jmp
push
out
sbbb
popa
sbb
xchg
and
pusha
inc
daa
jne
mov
addr16
loopne
xor
or
in
mov
hlt
call
sbb
or
scas
or
xchg
outsb
inc
pop
push
sbb
add
rcll
xor
mov
add
pop
orl
mov
in
pop
add
shll
xor
notb
rcl
xor
movsb
lods
fldt
shlb
aam
les
mov
pop
or
xor
in
insb
inc
les
pusha
addr16
scas
and
fsubl
inc
jbe
fstl
pop
or
inc
enter
push
pop
push
and
sub
jl
jae
inc
xor
pop
mov
mov
cmp
je
fadds
inc
mov
inc
lret
and
enter
and
sub
and
inc
sbb
sbb
xchg
mov
xchg
shrb
add
mov
repnz
enter
lds
and
add
mov
push
roll
add
mov
dec
mov
nop
pop
sub
mov
shll
stos
mov
push
fisubrl
add
add
xchg
sub
sbb
xor
lret
stos
in
xchg
in
lcall
adc
stos
inc
xchg
inc
fadd
inc
inc
aas
adc
sbb
sbb
rclb
nop
add
add
mov
xor
aaa
nop
add
inc
and
shlb
sbb
loope
xor
sahf
mov
xchg
cld
add
jl
faddl
push
les
push
inc
mov
cmpl
jne
sbb
out
scas
clc
sarl
adc
adc
rorb
jb
fwait
test
add
fs
add
push
cmpl
mov
sub
mov
and
cmp
or
push
xor
and
gs
jo
push
inc
mov
cs
sub
enter
pop
push
add
xor
sbb
adc
lds
push
xchg
clc
add
js
ret
push
sbb
call
ljmp
or
adc
push
xchg
push
pop
sbb
loopne
adc
push
lock
jmp
mov
mov
es
and
and
mov
dec
sbb
add
or
sahf
and
dec
jge
pop
push
nop
or
cmp
dec
call
repnz
xchg
ds
push
pop
sub
cmp
in
cmp
inc
pushf
or
filds
mov
jb
or
jl
add
sub
inc
add
mov
cltd
inc
mov
hlt
imulb
cmp
sbb
jl
add
xor
jge
inc
test
dec
inc
leave
hlt
in
call
out
cmp
sub
data16
insb
and
outsl
push
add
xchg
filds
xchg
inc
enter
add
add
or
inc
in
sbb
pop
dec
pop
shlb
inc
xchg
add
cmp
xor
subl
jbe
or
pop
mov
sub
jne
or
adc
or
sbb
jmp
inc
aas
inc
insl
sarl
dec
sub
loope
or
enter
xor
jmp
xchg
pop
xchg
inc
into
mov
clc
xchg
or
clc
push
data16
gs
inc
aam
push
or
fcmovu
sbb
inc
xor
push
adc
into
je
sbb
jne
and
rclb
mov
sbb
fcmovnb
and
jae
push
xchg
inc
dec
data16
je
rclb
roll
xor
mov
jl
push
add
sahf
add
mov
pop
xlat
data16
lret
test
push
call
add
mov
or
mov
adc
and
stc
clc
pop
xchg
or
aas
and
pop
movsl
mov
mov
jmp
or
movsb
cmp
and
imul
addr16
shr
push
dec
push
jge
sarl
adc
push
push
add
inc
pop
mov
mov
cli
pop
lcall
mov
push
ja
and
int
test
jo
test
test
pop
lahf
xchg
call
mov
shr
push
jmp
lods
subl
pop
mov
dec
sahf
push
xchg
jle
sbb
dec
arpl
pop
mov
jo
mov
dec
test
sub
aam
and
push
push
fsubl
xor
cwtl
cmp
sbb
in
and
and
adc
imul
cli
pop
inc
es
or
jb
ret
into
push
sub
mov
dec
pop
inc
jg
dec
and
jmp
push
add
push
add
enter
xor
cmp
adc
in
in
hlt
mov
inc
fadds
rolb
or
imul
clc
sbbl
mov
rolb
add
add
in
jbe
xor
mov
in
jl
inc
or
les
insl
mov
and
pop
sub
or
inc
movsb
xor
and
fadd
and
or
sar
orb
mov
cmp
in
or
sub
inc
das
add
imul
pop
mov
mov
and
inc
out
jmp
dec
or
inc
push
dec
xor
lret
pop
adc
push
or
pop
dec
jne
arpl
push
dec
imul
jne
and
hlt
out
mov
sbbb
sbbl
nop
jp
dec
out
mov
adc
dec
int
or
leave
enter
pop
mov
fs
cmpsb
out
in
fs
jmp
out
jg
add
icebp
sbb
insb
scas
xchg
mov
das
outsb
insb
and
insl
sbb
notb
incb
loopne
jp
lock
aad
pop
mov
mov
mov
insb
push
hlt
or
sub
sbb
pop
aaa
sahf
out
xchg
hlt
lds
ljmp
aaa
or
adc
or
mov
pop
adc
mov
inc
or
sbb
mov
shlb
test
xchg
jecxz
in
jle
subb
in
out
loopne
mov
js
cmp
pop
or
adc
add
cltd
mov
or
mov
out
dec
shlb
push
adc
je
shl
ss
dec
sbb
or
xchg
and
xchg
fsubr
out
inc
dec
lcall
cs
in
in
repnz
cmp
mov
in
loopne
and
sarb
lret
and
call
addb
adc
stc
inc
or
testb
add
leave
inc
mov
xchg
push
sub
xchg
xor
and
adc
inc
push
cltd
adc
xor
or
or
enter
or
pop
leave
xchg
loopne
loop
mov
cs
es
pop
jb
call
dec
xor
sarl
nop
dec
jbe
adc
sbb
and
dec
fsubl
xlat
mov
ss
and
pop
sti
and
jge
pop
sbb
lock
in
adc
xlat
push
mov
inc
cmpsb
mov
dec
sbb
and
daa
push
rcrb
dec
outsl
repnz
aaa
ret
sbb
hlt
int3
fsts
adc
sbb
nop
pushf
ss
pop
mov
lcall
imul
push
rorl
je
pushf
or
pop
jge
in
mov
sub
xor
mov
dec
enter
sti
or
mov
roll
mov
dec
add
add
fadds
dec
dec
pusha
adc
dec
pushl
ds
jge
fwait
add
dec
leave
adc
pop
dec
or
addr16
in
leave
adc
nop
sub
repz
and
push
rolb
cmp
dec
lar
sbbl
push
and
and
dec
ss
inc
adc
sbb
imul
pusha
es
adc
mov
mov
dec
stos
mov
inc
add
mov
leave
add
dec
inc
dec
and
dec
dec
nop
lret
and
pop
dec
sub
xchg
mov
jb
dec
in
push
dec
scas
nop
mov
push
mov
push
jb
les
xchg
add
scas
iret
dec
push
push
mov
push
cld
mov
out
popl
mov
insl
jge
add
mov
fndisi(8087
iret
lods
lret
stos
mov
clc
add
pop
mov
imul
fadd
or
movsl
fistpl
icebp
lahf
inc
mov
cmp
pop
cmpl
mov
jmp
adc
sbbb
adc
add
das
dec
popf
sbb
inc
movsl
dec
push
mov
nop
pop
jb
cmpb
sbb
or
adc
cmp
add
ret
popl
aaa
mov
jge
sbb
push
push
leave
sub
jb
insl
mov
adc
push
pop
add
sbb
add
mov
add
push
pop
adc
xchg
add
pop
ret
add
or
or
cmp
or
add
pop
roll
xor
stc
push
xor
cld
sub
loop
or
mov
inc
test
or
stc
clc
pushl
or
jecxz
xor
sti
push
push
add
adc
or
mov
sbb
jbe
mov
mov
inc
fildl
jl
shrl
lock
adc
pusha
push
pop
lock
push
or
and
je
jne
or
pusha
pop
or
aam
call
adcl
into
or
sbb
leave
iret
jno
pop
sbb
imul
es
popa
loopne
sbb
inc
xor
xor
je
adc
mov
roll
or
push
and
popl
cld
bound
and
sbb
test
int
dec
sbb
or
or
in
push
fisubrs
or
add
or
call
sbb
xor
cmp
imul
in
into
adc
jge
imul
pop
jp
and
shr
subb
sub
adc
or
call
sti
add
adcb
adc
inc
mov
push
adc
sub
sub
fisttpll
adc
adc
fmulp
pop
adc
mov
cmp
cmp
ret
adc
test
inc
push
fistpll
stos
or
lret
pop
cs
fisubs
loopne
daa
xchg
add
jmp
mov
andl
aaa
movsb
test
push
subb
xorb
loop
test
or
or
adc
push
add
in
push
outsb
mov
pop
cld
jge
cmpl
and
inc
adc
pop
scas
ret
push
pushf
fs
fnstenv
in
push
adc
or
and
sahf
add
add
jle
adc
bound
dec
and
pushf
insb
push
rorl
mov
jo
or
mov
dec
adc
inc
jl
push
adc
pop
ss
lret
hlt
loope
adc
mov
or
loop
cmp
or
les
mov
sub
aam
or
ss
lcall
imul
push
imul
dec
adc
add
sbb
int
add
or
dec
push
sbb
mov
lds
out
push
aad
pop
sbbl
dec
inc
imul
repz
dec
push
fdivrl
in
push
imul
cmp
inc
pop
pusha
popa
adc
push
cmp
loop
out
mov
fwait
mov
inc
adc
pop
and
dec
call
daa
xchg
aaa
aad
adc
stos
cmp
add
add
jg
xchg
ficompl
shrb
nop
push
push
mov
aad
pop
testl
jp
pusha
loopne
inc
cmp
pop
xchg
hlt
xor
xor
mov
push
adc
icebp
clc
dec
adc
mov
hlt
out
gs
icebp
push
insb
iret
dec
outsb
in
jecxz
sub
or
repnz
out
in
idiv
shrb
ja
mov
sub
ret
push
push
int3
cmpsb
int
lret
sub
push
popa
enter
jp
fimuls
lods
sbb
lahf
outsb
adc
jmp
lock
cltd
ret
pop
les
mov
movsl
adc
sub
cmp
ja
stos
popa
in
roll
or
add
xor
je
dec
sti
cmp
shrb
outsl
add
sub
mov
jae
xchg
popl
sbb
xchg
push
mov
jmp
or
adc
aam
jbe
xor
xchg
jno
mov
and
sahf
sti
addb
adc
lock
aam
pusha
xchg
add
inc
shr
push
cmpl
push
int3
mov
je
out
inc
sbb
jmp
jae
sbb
ret
xchg
inc
loopne
xor
jecxz
mov
or
rorl
pop
inc
add
aas
mov
push
add
in
jno
in
inc
sbb
data16
jno
cwtl
aad
cmp
jno
adc
add
ss
out
sti
popw
idivl
push
inc
push
and
mov
outsb
xlat
cmc
push
rorb
rorl
mov
mov
pop
clc
xlat
repz
and
push
add
pop
and
cmp
out
adc
mull
out
dec
add
jmp
xorl
jne
or
xor
popa
inc
ds
push
xor
mov
and
xchg
cmp
mov
xor
mov
pop
stc
lock
adcl
insb
sub
xor
fbstp
adc
or
push
in
dec
insl
out
popf
test
divl
cwtl
pop
mov
dec
aam
pop
scas
scas
cs
lock
andb
fst
sahf
inc
shll
lods
ljmp
popf
out
add
and
mov
imul
sbb
das
push
push
cs
sbb
dec
ret
fsubrs
and
sbb
pop
mov
cwtl
or
mov
outsb
flds
dec
adc
ss
mov
dec
jbe
inc
sti
xor
pop
test
popf
lsl
and
add
lock
push
jmp
inc
inc
pop
lcall
push
rcll
lret
xchg
iret
gs
mov
aaa
add
lods
ds
push
es
push
das
ret
xchg
stos
push
mov
add
fcomip
icebp
cmp
push
add
stos
pop
sti
cld
shrl
jmp
nop
sbb
sbb
xchg
cwtl
pushf
mov
movsb
test
mov
sbb
sbb
sbb
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
hlt
clc
cld
add
xor
repnz
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
inc
dec
dec
push
xor
xor
push
pop
pusha
xor
xor
push
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
rcl
fdivs
xor
xor
in
in
xor
xor
lock
clc
cld
data16
add
or
mov
add
jge
mov
ss
and
and
or
push
daa
int
int
or
cmp
addb
or
add
in
xchg
inc
add
add
sbb
adc
adc
nop
xchg
inc
inc
push
and
sbb
fs
sbb
cmp
setge
lea
mov
cmpsb
sbbl
adc
mov
adc
leave
mov
cmpl
mov
mov
add
mov
cmp
popa
xorl
sar
in
ret
ret
xchg
mov
push
push
xor
lea
out
and
das
mov
add
call
jne
sub
in
idiv
cmpl
incl
test
jle
cmp
mov
add
mov
add
inc
mov
das
shlb
aaa
mov
shr
jbe
jne
pop
add
dec
test
add
inc
mov
add
pop
popa
xor
push
pop
cmpb
push
jns
std
pcmpeqd
mov
mov
sub
lea
pop
test
je
mov
mov
lea
dec
inc
adc
add
push
or
push
imul
outsb
add
inc
inc
orl
jne
push
pop
jg
dec
push
movl
mov
popa
cmp
idivl
nop
cmp
je
dec
inc
test
pop
pushf
mov
xchg
xchg
xchg
push
mov
and
bound
inc
or
and
inc
je
or
mov
in
cmp
dec
mov
and
cs
or
leave
inc
mov
and
movsl
push
mov
fsubrl
ss
push
or
and
push
fsubs
inc
xchg
pop
int
fldcw
add
jecxz
ret
out
jo
mov
aaa
mov
jae
jns
jae
cmp
jp
neg
sbb
mov
pop
ret
cs
rcll
sub
loope
mov
push
xlat
cmovg
jge
insl
adc
add
mov
divps
inc
sbb
pop
pop
outsl
popf
testb
add
pop
and
mov
mov
push
sbb
scas
jae
fidivrs
sbb
fsubr
mov
icebp
xor
lret
and
leave
add
in
cmpsl
ja
sbb
sahf
cmpsb
imul
mov
lock
rcl
in
movsl
ljmp
xor
nop
add
pop
push
lret
add
xor
mov
data16
pop
inc
add
aad
pop
add
sub
in
leave
and
imul
mov
sbb
ret
push
sub
jb
lahf
jb
ret
inc
push
data16
and
mov
test
push
or
popf
imul
inc
clc
fs
lea
inc
jbe
push
fcomps
cmp
leave
sub
clc
insb
loop
add
sbb
adc
xchg
xor
push
mov
adc
mov
scas
or
fiaddl
repz
inc
or
rorl
std
push
lea
cmp
adc
pop
fsubrs
pop
sbb
adc
dec
add
xchg
enter
mov
scas
cltd
gs
dec
add
adc
mov
sbb
mov
sub
clc
cmp
dec
add
mov
subb
xor
jbe
mov
mov
jmp
jne
add
inc
jl
jne
dec
push
xchg
cmp
pop
fcmovne
in
clc
enter
vmptrst
sbb
adc
jb
inc
push
je
lea
xchg
xchg
test
clc
clc
jmp
fdivl
loop
push
dec
mov
fidivrs
jae
cmp
jp
pusha
push
rorb
ret
sub
mov
sti
mov
in
adc
add
xchg
js
adc
or
hlt
adc
pusha
je
cmp
xor
ret
sarb
jae
lea
call
neg
mov
push
inc
inc
push
jb
xor
inc
xor
sub
mov
mov
mov
push
sbb
decl
call
dec
in
les
in
cmp
sti
shl
sar
ret
add
add
adc
fcoms
in
dec
xchg
dec
push
xor
aas
rclb
adc
idiv
mov
int
mov
imul
mov
shr
lret
jecxz
push
outsb
ja
jb
xor
jg
dec
mov
xchg
sub
mov
roll
arpl
mov
xor
test
andps
out
mov
or
in
ljmp
jg
add
jne
cmpsl
mov
or
cmp
sbb
push
or
inc
xor
fistps
je
inc
dec
test
je
dec
adc
jns
push
and
out
sti
out
stos
xor
inc
test
je
pop
jb
test
add
fsub
push
or
das
insl
test
mov
push
lea
add
lcall
sbb
adc
push
sbb
add
cmp
sub
dec
sub
jne
sahf
mov
mov
mov
sahf
add
push
jnp
mov
es
mov
mov
notl
add
sbb
add
pop
jp
insb
inc
sbb
pop
cmp
pop
repz
or
mov
sbb
or
and
pusha
sbb
adc
push
or
sub
push
call
jge
in
push
mov
jne
pop
inc
ss
fmulp
lods
scas
pop
sub
sub
pop
mov
lods
lea
lea
sub
cmp
inc
roll
jl
lea
cmp
jne
push
clc
mov
fcoms
push
cmp
add
push
and
push
mov
push
push
ljmp
lea
or
data16
cmp
add
daa
mov
mov
xchg
mov
outsl
or
dec
push
lea
push
inc
push
lea
mov
aas
jl
sub
add
inc
add
jl
mov
push
insl
movsb
inc
push
sbbb
push
and
add
mov
and
cli
pop
movsb
out
and
xor
sub
inc
mov
mov
lcall
cltd
mov
cs
add
call
leave
cmp
add
cmp
bound
fadds
sub
cmp
dec
dec
clc
cmp
dec
jge
mov
loop
insb
xchg
pop
lea
pop
adc
addr16
fdivrs
lahf
adc
lret
outsl
adc
into
add
mov
gs
in
pop
mov
or
ret
add
mov
xlat
and
fcmovnu
mov
es
xor
push
jl
outsl
pop
sub
mov
pop
adc
imul
xchg
aaa
je
test
popa
jmp
loope
pop
test
xor
enter
mov
lds
insl
mov
add
shlb
lret
repz
and
sar
add
push
add
fisttpl
shlb
sbb
pop
push
push
mov
sub
rcr
or
enter
cmp
fcomp
and
push
imul
mov
mov
fneni(8087
sbb
or
jbe
movl
imul
dec
or
fimuls
jb
jae
xchg
push
pushf
xor
test
pop
push
cmp
cmp
movsl
xor
jne
dec
xor
out
inc
test
popa
hlt
jge
mov
mov
adc
ljmp
add
and
push
movsb
sbb
testl
xor
sbb
xor
mov
cltd
jmp
shrl
xlat
popf
add
imull
cmp
dec
incl
adc
push
popl
sbb
sub
cmp
dec
mov
std
ffreep
cmp
int3
xor
je
shrl
push
jo
and
sub
jne
int3
sbb
mov
mov
es
and
cmp
dec
pop
sub
mov
mov
adc
mov
xadd
push
inc
mov
nop
jl
push
lcall
push
mov
call
sub
add
jo
cmp
sbb
pop
push
mov
outsb
mov
dec
ret
mov
push
mov
loop
mov
aaa
sbb
mov
mov
cmpl
addl
adc
sub
outsl
mov
and
and
aam
push
sbb
ss
or
pusha
fcoml
inc
jmp
mov
mov
sbb
rcr
mov
sub
add
and
or
sahf
and
add
int3
sbb
bound
sub
dec
xchg
sbb
mov
int
and
inc
mov
push
xor
adc
adc
push
mov
addb
jne
pop
repz
sub
pop
adc
push
sbb
or
test
imul
or
or
in
sub
inc
pop
add
mov
mov
xchg
inc
push
or
push
push
test
cmp
out
insl
adc
sarl
add
pop
ficoms
push
or
fistpl
aad
pop
mov
dec
shl
add
or
add
icebp
and
movzwl
movswl
xchg
rol
mov
jno
jl
xor
jnp
pop
mov
or
add
jmp
inc
lds
adc
mov
aaa
mov
clc
lea
cmp
jge
jmp
xor
or
sbb
fnstcw
inc
enter
orl
test
movsb
nop
mov
jnp
popf
pusha
or
ja
mov
inc
cmp
cmpsl
fwait
loopne
sarb
int3
test
jo
or
sbb
int
incb
or
ds
mov
in
xor
shl
mov
and
outsb
lods
cld
out
or
mov
pop
out
or
xor
sub
out
push
or
mov
cmp
inc
inc
pop
cltd
add
fdivr
shl
or
mov
and
out
jmp
out
or
mov
dec
jo
cmp
push
xchg
sbb
test
ret
mov
fstp
sub
jb
sbb
outsb
or
and
xchg
sub
fdiv
insb
out
cwtl
or
push
std
cmc
and
adc
mov
mov
mov
inc
pusha
or
loope
pop
aaa
jb
xchg
adc
or
shll
pusha
ja
das
adc
or
xor
pop
fildl
add
adc
push
dec
and
aaa
mov
mov
inc
pop
adc
mov
add
and
jo
fimull
push
dec
in
sub
mov
adc
dec
add
fisubrs
jo
lret
jnp
add
adc
shr
xor
repz
test
adc
in
sahf
xchg
into
add
xor
xor
pop
add
icebp
cmp
repnz
add
or
push
add
cmpsl
clc
pop
popf
mov
add
pop
push
stos
rcr
int
es
loope
mov
push
in
inc
sub
jb
dec
mov
mov
out
mov
pop
lahf
repz
mov
mov
push
xor
cmp
fisttps
testb
push
loop
mov
push
adc
ss
pushf
dec
push
push
dec
jne
mov
sub
dec
ss
push
pop
or
adc
push
push
enter
push
and
inc
shl
or
stos
shlb
cs
pusha
mov
pop
pop
shr
outsl
or
lea
mov
xor
xchg
xchg
cltd
arpl
jl
ret
sarb
xchg
sbb
add
pop
add
das
iret
filds
adc
shrb
ficoml
adc
roll
xor
pop
fisubrl
imul
or
sbb
lcall
addl
testb
addr16
popf
jle
pop
mov
push
jge
cld
push
notb
adc
sbb
roll
push
and
sub
or
pop
push
mov
and
or
insb
fnsetpm(287
insb
or
lock
mov
jns
leave
add
daa
mov
and
push
ds
or
add
pop
shll
out
sbb
mov
mov
mov
xor
test
pop
stos
mulb
mov
bound
or
jl
lahf
arpl
adc
mov
loopne
mov
mov
xor
addr16
mov
insb
icebp
jge
cmpb
out
arpl
add
pop
add
cmpsl
cmpl
mov
xchg
sti
daa
pop
mov
add
pop
add
or
test
ror
sub
mov
lea
mov
outsl
mov
dec
xchg
rcl
push
add
pop
xchg
pop
fistl
adc
or
push
sbb
daa
xchg
mov
fadd
add
pop
fdivrs
mov
inc
movsl
add
add
sbb
subl
inc
adc
inc
or
dec
lcall
imul
xor
pop
xchg
gs
call
lret
inc
dec
cld
dec
push
imul
and
subb
adc
test
pop
jb
sti
push
daa
push
pop
mov
or
push
or
and
in
push
push
mov
lcall
ja
mov
mov
adc
mov
add
outsl
mov
dec
imul
xor
and
fucomi
arpl
and
popa
insb
insb
gs
bound
je
cmp
sub
std
ljmp
jns
imul
sub
xor
cmp
sub
and
dec
outsl
fucomip
in
fbld
outsb
and
jae
sub
inc
and
jae
jg
insl
push
adc
gs
dec
outsl
jb
imul
push
popa
je
outsl
outsb
cmp
and
das
das
ja
idivb
fildll
imul
ja
and
das
xor
jg
mov
and
push
in
frstor
or
push
push
idiv
or
adc
in
jp
mov
add
xor
xor
add
jae
ja
jb
or
bound
fwait
test
jb
jns
sbb
push
jae
jae
aaa
cmp
out
arpl
add
arpl
add
insl
imul
daa
jnp
or
jbe
sbb
gs
adc
add
outsb
imul
jb
outsl
sub
je
outsl
psubq
mov
xor
add
jns
jne
add
mull
sti
push
jo
add
jb
pop
test
shlb
insl
pop
popl
mov
or
outsb
arpl
mov
pcmpgtd
je
mov
insl
outsb
push
insb
mov
pop
fcmovnu
mov
jbe
jb
gs
add
insb
push
insl
mov
push
bound
dec
jb
jo
imul
gs
insl
imul
lcall
orb
mov
jne
imul
outsb
mov
pop
inc
gs
popa
jb
xlat
fisubs
xchg
xor
mov
ss
ja
adc
popaw
imul
pop
insb
ret
push
shll
fwait
and
jo
add
add
ja
pusha
insb
jns
fs
mov
outsl
or
push
cmpsl
jb
imul
pop
imul
iretw
mov
popa
js
pop
jae
jno
jp
jae
or
mov
mov
add
ss
xor
xor
test
jbe
add
dec
insl
push
push
push
mov
rorb
and
xchg
int
jb
popa
jo
call
or
in
fstpl
pshufw
push
xor
insb
je
iret
adc
out
imul
adc
js
xor
jb
ja
imul
outsl
sub
add
popa
addr16
jns
pop
mov
or
mov
mov
js
cmp
adc
cmp
xor
subb
or
insb
cmp
bound
xchg
into
mov
addr16
mov
clc
sbb
insb
dec
bound
mov
shll
cmp
mov
movsb
or
ljmp
xor
cmc
scas
shl
rcrb
imul
std
jo
lea
popa
jno
cld
fidivs
sbb
jb
mov
pop
push
jnp
faddl
fs
inc
imul
xor
jae
mov
or
sbb
push
mov
mov
mov
hlt
lret
inc
je
xchg
insb
icebp
pop
cmpsl
out
add
adc
shlb
je
imul
and
ja
outsb
fisubs
jae
push
jo
mov
jle
sbb
in
jne
push
and
sbb
shrb
xor
popa
adc
imul
sti
hlt
push
jb
cmpsb
mov
lods
pop
mov
mov
jge
insb
mov
loope
jp
push
pop
add
repz
cmpsl
inc
dec
cmp
insb
cltd
pop
xchg
cmp
inc
sti
mov
fs
or
push
gs
sub
jb
stc
jae
jo
rcl
inc
aaa
bound
imul
das
jno
ja
xor
add
imul
sbb
and
mov
pop
xor
lcall
jne
icebp
aad
jns
ja
xchg
jo
insl
insl
mov
jbe
outsb
insl
sti
jne
imul
xlat
cmp
sbb
addr16
aaa
add
pop
jae
out
xor
mov
inc
push
add
ja
or
add
outsb
das
bound
test
jge
jae
xor
loopne
popf
mov
add
push
push
ret
or
pop
popa
mov
sar
dec
push
push
push
jnp
pushf
subb
mov
scas
mov
bound
outsl
lretw
insl
je
xor
and
pop
mov
xor
fmul
mov
fisubs
add
cwtl
adc
dec
mov
ficoms
xor
ret
into
lock
scas
clc
gs
leavew
cmp
mov
push
mov
sbb
imul
sbb
cmp
jae
rclb
xchg
je
ljmp
mov
in
dec
or
clc
mov
fbld
je
pushw
insl
scas
lea
jnp
inc
or
ja
mov
mov
xor
out
fnstcw
cmp
add
jo
das
dec
jo,pn
or
js
cmpb
outsb
in
lds
sub
fcmovnu
popa
add
xor
xor
cs
push
sbb
cmp
cmp
jp
pop
aaa
js
push
js
test
arpl
xor
into
and
xor
pop
addr16
out
faddl
add
mov
dec
inc
inc
or
xor
shll
std
jg
push
cmc
pop
sub
pop
push
dec
push
push
inc
inc
dec
dec
inc
xor
dec
inc
push
pop
push
push
inc
inc
inc
decb
push
add
dec
dec
inc
push
add
adc
call
inc
push
push
inc
push
inc
pop
dec
xchg
pop
push
test
insl
dec
fistpl
jb
push
ja
jne
push
ss
ret
gs
xchg
cmpl
imul
pop
adc
insb
mov
mov
inc
add
arpl
insb
dec
jae
push
iret
push
dec
fldln2
inc
push
outsl
adc
notb
jo
inc
inc
outsb
push
sbb
or
dec
dec
inc
popa
sub
and
test
push
push
les
je
fistpll
outsb
jne
jae
mov
inc
imulb
aaa
inc
lret
sub
cmpsb
pop
ss
add
push
sub
lcall
je
mov
lds
pop
cmc
dec
mov
push
in
jns
inc
ret
jae
stc
bound
mov
mov
dec
shrl
and
jo
push
daa
or
push
inc
and
adc
pusha
in
sbb
adc
xor
pop
addr16
cltd
pop
daa
sub
fcoms
sub
inc
fldl
jae
pushf
cmp
add
and
xor
and
sbb
push
and
lcall
mov
pop
push
mov
fistl
dec
push
push
and
push
push
das
mov
or
adc
adc
inc
mov
sarb
das
sub
pop
and
or
jb
mov
pop
cmp
cmp
and
or
dec
add
in
inc
xchg
adc
dec
in
outsb
cmp
out
lret
sbb
daa
push
pop
gs
jl
push
or
sbb
in
pop
repz
jb
inc
imul
mov
sub
outsl
jp
pop
fsubr
mov
das
xor
and
cmp
xor
dec
inc
and
jbe
mov
cmp
outsb
test
ret
sub
inc
and
divl
imul
pop
sub
sub
add
cmp
dec
or
inc
fidivs
mov
adc
cmp
insl
inc
xor
std
pop
mov
cmpsl
push
xchg
xlat
pop
mov
or
insb
pop
pop
gs
jbe
loopne
pop
or
push
sbb
dec
test
adc
sbb
mov
push
cmp
sbb
jbe
cmp
dec
pop
punpckldq
je
inc
aad
mov
cmpsb
mov
rsqrtps
int
inc
jo
sahf
js
push
gs
mov
pop
mov
es
xor
sti
fbstp
outsl
addr16
outsb
imul
and
and
rorb
dec
xor
dec
inc
or
outsl
xor
xor
pusha
jb
out
push
dec
push
cld
jne
dec
push
cmp
leave
dec
sbb
orb
and
cmp
jo
push
fstpl
adc
mov
mov
sub
sbb
inc
adc
mov
sbb
dec
dec
jno
or
sarl
add
push
dec
inc
add
jnp
sub
fs
pop
add
add
imul
push
jo
dec
jae
shlb
mov
inc
add
push
sub
gs
imul
xor
sub
push
push
add
inc
negb
mov
sub
sub
enter
or
dec
inc
dec
aad
pop
xor
loop
js
jb
jae
dec
dec
push
fisubl
adc
push
iret
xchg
cmp
sbb
outsl
inc
pusha
dec
push
mov
pusha
insb
pusha
mov
in
test
push
dec
in
add
and
mov
cmp
mov
cwtl
sub
mov
pop
mov
lods
out
in
pusha
mov
adc
dec
xchg
inc
inc
inc
push
sub
scas
lds
jp
push
inc
out
sub
add
inc
push
inc
adc
imul
pop
and
jecxz
sbb
scas
sub
ret
data16
xor
aaa
arpl
and
cmp
sbb
sub
pop
inc
sbb
je
test
mov
fldl
mov
push
adc
pusha
sub
mov
pop
mov
pop
add
and
sbbl
cmp
bound
or
push
mov
or
or
mull
mov
fimull
jo
sbb
adc
adc
testb
insl
adc
jp
mov
inc
adc
dec
xchg
pop
inc
lods
popf
es
jne
mov
fcom
roll
repnz
imul
push
jb
sbb
lds
and
xor
xchg
mov
aas
or
ss
inc
sbb
aas
dec
or
addr16
push
and
or
jnp
adc
dec
enter
and
scas
sbb
adc
xchg
adc
xor
adc
js
test
jo
or
sub
mov
bound
inc
push
std
adc
and
adc
or
lret
dec
adc
inc
fldcw
cmp
fsts
or
push
test
sbb
cmp
in
iret
js
push
xor
pop
push
insl
xor
test
inc
aam
sub
fs
loopne
fcmovne
cmp
push
jne
outsl
cmp
add
mov
in
inc
sbb
data16
loop
mov
roll
pusha
mov
fdivs
xor
sbb
call
mov
punpcklbw
jae
xchg
shl
in
or
outsb
test
push
inc
mov
gs
jo
dec
inc
xor
insb
andl
push
xor
fimull
imul
fstl
pop
push
xor
insb
pop
sbb
push
in
ret
adc
mov
mov
pop
inc
dec
inc
push
aaa
pop
das
sub
je
add
inc
mov
les
xchg
inc
mov
int3
std
scas
mov
or
dec
jbe
scas
and
dec
mov
imul
xor
xchg
sub
sub
insb
sbb
add
js
xlat
push
insb
jae
inc
xchg
adc
cwtl
xchg
in
mov
add
cld
pop
neg
dec
lret
jo
cld
ds
das
bound
push
jne
pop
sub
mov
mov
dec
outsb
js
xlat
inc
sbb
lret
insb
gs
pop
push
add
xchg
xor
sub
mov
insl
lret
adc
fs
shrl
fistl
mov
push
sub
xchg
sbb
pop
push
mov
cmp
pop
push
add
dec
mov
lods
pop
pop
sarb
aaa
outsl
jne
popw
pop
dec
and
or
bound
inc
add
or
push
rcl
pop
pusha
dec
mov
inc
jp
or
sbb
pop
loopne,pn
inc
lret
fstl
js
add
xchg
es
jmp
sti
jne
inc
jmp
push
push
js
cs
sub
pop
xor
pop
xor
jle
jae
insb
push
sbb
mov
popa
jo
adc
or
and
or
sbb
or
fbstp
leave
bound
or
dec
mov
or
test
jmp
rclb
add
add
popl
push
mov
mov
imul
jmp
mov
or
sahf
dec
inc
push
stos
and
int3
push
jb
or
insb
ja
jne
push
mov
inc
andb
outsb
xorl
pop
imul
xchg
and
and
push
push
dec
dec
or
out
andl
or
fwait
sbb
sub
jge
mov
sbb
jae
pslld
shrl
pop
mov
sbb
push
ret
adc
and
dec
pop
xor
dec
icebp
ds
dec
pop
arpl
xor
xor
rcll
dec
push
push
nopl
sub
out
or
ljmp
jnp
inc
xor
inc
xor
cmp
cmp
xor
inc
inc
sub
or
inc
ss
xor
inc
dec
outsl
rolb
fnstcw
cmp
nop
xor
sub
inc
jne
aaa
xor
nop
mov
idivb
xor
pop
jge
call
ud2
push
bswap
lds
push
jno
aam
pop
xchg
ficoms
outsl
shrb
cli
insb
adc
ss
fisubl
push
add
sub
or
or
sub
dec
andb
rorl
mov
dec
pop
orl
cs
xor
dec
push
cwtl
inc
xor
push
cwtl
sbb
sbb
je
inc
cmp
add
mov
outsl
adc
push
dec
xchg
xchg
and
add
insb
sub
or
or
jo
or
jae
sti
push
arpl
lds
pop
bound
ficomps
jae
jo
outsl
jp
mov
adc
bound
rclb
mov
xor
add
inc
mov
and
test
lcall
sbb
xor
lcall
add
dec
push
push
and
sub
clc
nop
mov
aaa
adc
lods
aam
out
dec
and
jp
cmp
adc
data16
movsb
push
pop
adc
pop
rcrb
sbb
sub
dec
testb
add
and
mov
lret
pop
shlb
pop
adc
inc
sbbb
popa
int
mov
xor
adc
mov
mov
mov
jl
test
call
cwtl
xchg
test
lds
nop
cs
inc
sub
negb
xchg
dec
mov
pop
or
inc
dec
push
dec
inc
in
inc
cs
jg
xor
sub
sub
inc
sub
xor
pusha
or
sti
xor
adc
dec
adc
sbb
ja
leave
push
outsl
mov
xor
movsb
push
mov
pop
movsl
inc
mov
hlt
jle
movsl
inc
dec
jg
and
sub
adc
test
dec
push
fistl
bound
adc
loop
dec
push
dec
into
jge
sbb
push
push
test
aam
pop
iret
add
aad
inc
dec
in
lods
mov
aaa
cmp
mov
stos
ss
out
inc
unpcklps
xchg
xor
fsubrl
imul
fmuls
push
rolb
icebp
pop
sub
add
dec
outsl
int
aad
add
add
clc
cvtps2pi
xlat
jne
or
xor
xor
outsb
xor
dec
xor
xor
push
mov
fs
test
icebp
sbbb
and
dec
ja
pop
shrl
popf
adc
fsubr
ret
push
sub
push
add
mov
dec
or
push
push
inc
imul
fildll
inc
negl
andl
js
or
jge
fdivl
and
bound
add
outsl
cwtl
sub
fisttpl
loopne
adc
sbb
dec
fistpl
fistl
xorb
push
push
inc
sbb
dec
push
js
dec
pop
sub
dec
cmp
pop
pop
jne
sub
mov
push
jae
mov
rcrl
mov
rcrl
jb
adc
mov
push
xor
flds
pop
sbb
xor
sbb
dec
iret
dec
add
lret
inc
sub
dec
cmpsl
dec
push
lret
sbb
pop
or
mov
cmp
add
and
dec
mov
xor
test
add
xor
add
pop
dec
popf
push
mov
mov
push
add
pop
cmc
adc
orb
stos
mov
xlat
dec
cs
sahf
or
xchg
pop
fdivrs
adc
inc
mov
mov
mov
icebp
pop
sub
loop
and
test
push
insl
dec
or
es
jae
bound
insb
sub
test
inc
or
shll
cltd
or
inc
xor
adc
adc
or
loope
in
cld
jg
cmp
xor
inc
cmp
sub
xor
inc
sub
subl
inc
push
or
or
xor
xor
daa
mov
inc
jns
icebp
push
loop
sbb
jb
leave
clc
push
mov
loop
push
das
sub
sbb
cmp
cmp
je
xor
ucomiss
pop
and
jl
pop
sbb
xchg
hlt
push
das
shll
pop
jp
and
pop
cs
in
pop
or
imul
sub
xchg
and
mov
lcall
push
inc
inc
sub
push
lahf
mov
inc
dec
das
mov
pop
mov
cmc
ret
dec
popf
movsl
xor
ret
xor
mov
or
push
add
sbb
rorl
push
xor
fnsave
lods
dec
mov
jns
fs
cs
mov
jae
cmp
cmp
inc
add
push
xchg
loopne
or
push
push
pop
jno
and
dec
les
insb
std
cmp
add
jo
xor
dec
mov
xor
shl
and
insb
adc
shll
jae
mov
movsb
in
aad
push
sbb
xchg
xor
test
sub
or
jp
xorb
testl
or
cmpsl
pop
cmp
mov
push
push
add
sti
pop
js
xor
mov
mov
ds
add
mov
rcll
push
jne
stos
fildl
xor
inc
add
inc
pop
dec
xlat
dec
add
push
jae
pop
cs
ficoms
pop
pop
sbb
cs
pop
pop
add
pop
jb
sub
fdivl
lret
cmpsb
out
imul
lret
in
mov
xchg
outsl
xchg
jo
imul
jno
jb
je
add
mov
fwait
leave
sbb
ja
dec
xchg
push
mov
mov
xchg
xchg
add
cwtl
sahf
mov
fwait
gs
sbb
pop
fwait
mov
ss
in
xor
mov
lcall
mov
dec
xlat
or
shlb
cltd
fldt
add
inc
ret
mov
cs
mov
test
leave
daa
jb
sub
add
shll
aad
push
fcomps
xchg
int
or
xchg
add
and
lds
inc
push
push
lock
push
cmp
call
fsubl
shll
imul
adc
mov
in
mov
jno
or
or
test
data16
ss
sarb
adc
addr16
in
dec
out
sub
add
ja
and
and
add
xchg
jne
insl
sub
data16
les
or
leave
adc
arpl
push
dec
fsubs
outsl
xchg
pushf
jns
cs
add
dec
pop
push
outsl
sbb
inc
movsb
xor
xor
mov
sbb
jne
push
scas
jmp
sbb
addr16
mov
or
pop
jns
add
jo
rcr
add
xlat
shrl
or
andb
sub
push
push
pop
add
cmpsb
pop
or
add
inc
and
cmpsb
imul
fistpll
push
xor
sub
sbb
adc
lcall
adc
add
xor
and
adc
add
xor
and
ss
push
push
push
cmp
jmp
cmp
sub
sbb
or
sbb
or
add
add
or
mov
idiv
movups
adc
or
add
push
add
pop
sbb
std
decl
push
sbb
or
sub
push
and
ss
das
sub
es
and
pop
jne
or
sub
in
fwait
cmp
cltd
or
mov
jmp
sbb
pop
in
bound
add
add
data16
testb
add
push
xchg
mov
ja
mov
insb
testb
cmp
dec
ss
mov
adc
outsl
notb
lahf
clc
insb
push
sub
mov
popa
add
push
lcall
aaa
jmp
push
pop
and
andb
ds
pop
add
and
sub
mov
fwait
jo
dec
sbbb
negl
add
or
pop
mov
jnp
sub
outsl
mov
data16
lahf
outsl
xchg
fsubrs
add
addr16
mov
insb
or
outsl
aas
sbb
rcll
xchg
cmp
mov
popf
out
int
add
adc
pop
add
data16
adc
cmp
inc
jnp
ss
dec
sbb
das
push
adc
mov
jb
fisubrs
addr16
ja
insb
jbe
jnp
sbb
or
cmp
fwait
mov
fwait
mov
mov
stos
xchg
cmpsb
rcll
out
inc
js
dec
wbinvd
add
loope
dec
cmp
add
sub
sub
aaa
jnp
or
or
or
sbb
insb
gs
ja
inc
fdivs
xchg
dec
ss
mov
or
xchg
addr16
inc
clc
out
xor
inc
adc
mov
or
inc
or
cwtl
and
sub
insb
inc
add
pop
insl
mov
pop
or
add
lret
es
outsl
leave
fisubrs
adc
adc
rcrl
inc
ss
add
sbb
or
dec
dec
adc
or
sbb
adc
add
sbb
cmp
and
add
adc
add
mov
adc
or
jnp
ss
dec
pop
dec
sbb
data16
or
repnz
daa
outsl
add
in
lds
and
mov
gs
fidivs
hlt
mov
and
call
push
sbb
sbb
pop
jbe
es
repnz
outsb
neg
or
and
sbb
cmp
add
add
dec
mov
mov
or
ja
add
xchg
dec
or
cmpsl
pop
stos
xchg
xchg
out
cmp
add
add
fwait
loopne
cli
adc
pop
add
test
xchg
adc
or
pop
data16
mov
cmp
data16
sub
addl
insb
fcoms
add
mov
fwait
dec
mov
mov
fwait
jae
xor
test
dec
mov
das
add
mov
ss
subb
push
and
adc
pop
mov
ret
out
insl
pop
pop
insl
inc
or
or
scas
push
xor
es
daa
or
pushf
cltd
mov
bound
imul
cvtdq2ps
outsb
insb
or
jp
or
fldcw
pusha
inc
cmp
jns
or
fsubrs
je
je
imul
mov
clc
movsl
cmpb
jb
outsb
xchg
lea
loopne
lcall
add
sbb
jo
and
push
imul
pop
fdivs
xchg
insl
adc
sub
push
cwtl
mov
add
andps
jo
pop
add
xchg
inc
fsts
ja
add
fldenv
cmp
aaa
adc
imul
adc
dec
jne
je
inc
cmp
imul
jae
cld
imul
in
sbb
inc
push
dec
outsl
fs
orb
or
mov
testb
pavgb
les
and
out
xor
cmp
movsb
fwait
pop
int3
push
das
stos
lods
and
gs
xchg
je
mov
ficoms
push
inc
sub
xor
push
mov
or
out
pop
cltd
sub
adc
out
sub
pop
inc
pusha
dec
aad
pop
push
scas
outsb
mov
mov
push
outsb
cli
push
inc
lahf
adc
rdpmc
sbb
je
add
or
dec
push
push
frstor
mov
ret
push
push
out
push
jmp
mov
dec
add
pop
pusha
sti
sbb
push
jne
jns
popa
fadds
andl
dec
or
dec
cwtl
inc
sub
push
add
outsb
icebp
and
insb
adc
or
mov
xorb
dec
mov
sub
iret
mov
cs
jne
rcll
push
clc
or
fiadds
push
pop
pop
nop
or
cli
and
loop
mov
insb
out
mov
push
les
dec
inc
or
pop
arpl
or
inc
add
push
inc
insl
jo
mov
push
into
inc
jl
rorb
add
pop
imul
jmp
sbb
xchg
cmp
adc
mov
xchg
sarb
lret
inc
adc
adc
imul
inc
jae
adc
jno
jns
add
cmpb
ss
arpl
imul
add
insb
sbb
or
push
jns
push
fcoml
inc
push
jmp
or
dec
add
add
test
add
add
xor
daa
adc
mov
insb
jmp
xor
inc
into
mov
into
fidivs
or
pop
shll
push
das
cmp
and
pop
push
mov
jbe
adc
add
in
or
add
and
insb
lods
test
and
mov
fldenv
pop
jnp
cmp
fadds
pop
inc
dec
daa
loopne
sbb
test
add
add
add
add
add
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
