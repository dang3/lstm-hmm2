es
call
add
divl
add
inc
add
es
add
call
in
push
clc
jb
ret
pushl
push
push
call
leave
ret
sbb
aas
in
cmpl
je
mov
mov
daa
call
std
das
sti
shll
clc
push
inc
clc
movl
int3
add
dec
adc
add
nop
inc
xchg
mov
ss
xchg
clc
aaa
lea
push
push
pop
cmp
jb
out
jb
cmp
add
mov
jb
xchg
sbb
outsl
adc
cmp
jbe
sub
arpl
mov
pop
jnp
push
arpl
jnp
scas
or
jne
lret
jno
push
sbb
mulb
or
sarb
cld
cmp
jne
dec
jmp
pop
in
in
pop
jmp
pop
std
cld
push
push
fisubl
or
pusha
sub
mov
cmp
mov
sbb
loope
push
insl
adc
sub
cld
inc
addl
pop
add
ds
in
push
push
add
loopne
in
mov
loopne
cwtl
mov
jne
imul
sbb
or
or
lock
cmp
ss
sbb
add
clc
in
xorl
push
jo
add
movsb
insb
fldenv
arpl
aaa
inc
sub
xor
sbb
adc
add
mov
adc
cmp
fstl
rol
sbb
and
in
es
push
xchg
add
insl
or
cmp
pop
jne
pop
push
in
test
jmp
sub
pop
fldln2
and
movzwl
les
lret
fiaddl
incl
movzbl
and
je
adc
xchg
ret
out
or
movl
sysenter
inc
rorb
sti
inc
sub
stos
gs
pop
push
leave
add
sub
sbb
nop
xor
add
push
xchg
lea
je
pop
xchg
mov
dec
addb
push
cs
icebp
xor
add
sbb
pavgw
out
xchg
add
mov
sub
rcrl
cld
adc
dec
xchg
fidivs
or
dec
xorb
lds
bswap
jno
or
and
add
adc
and
push
aas
and
out
popf
lods
inc
add
inc
cmp
or
in
mov
mov
push
and
jno
mov
jnp
or
imul
mov
push
add
in
push
imul
mov
dec
repnz
rcl
rorb
sub
addl
adc
add
andb
jp
jae
pop
add
jmp
sub
popa
int
fnstenv
jbe
mov
sbb
hlt
mov
pop
hlt
imul
movsl
xor
push
lock
or
sti
mov
sub
insl
add
mov
push
jne
cmp
xor
add
pop
call
enter
sti
jne
add
mov
xor
lock
test
fs
lret
or
inc
xchg
adc
sahf
dec
sbb
cmp
adc
or
jge
cmpsb
call
mov
push
fwait
mov
test
sub
icebp
into
aas
add
adc
fs
leave
and
or
sbb
aam
mov
out
xor
repz
mov
jnp
loop
mov
out
outsb
repz
sbb
xor
xor
pop
clc
inc
packssdw
popa
lods
adc
sub
outsl
push
sbb
xor
mov
mov
inc
outsl
loope
and
or
ret
jg
mov
push
push
cld
mov
mov
jecxz
push
shr
fisttpl
ret
stos
pop
and
rep
pop
xor
pop
or
mull
data16
jecxz
rep
pop
jecxz
adc
cmp
pop
cld
adc
or
jne
inc
pop
psraw
dec
inc
push
push
push
fcmovb
out
ja
inc
inc
sub
mov
cmp
ret
adc
out
sub
cltd
mov
mov
mov
add
xor
outsb
push
or
mov
cmp
cmp
jb
leave
inc
jne
pop
push
push
imul
mov
cmp
add
sti
add
sbb
in
outsb
incl
adc
mov
push
cld
or
pop
jne
lds
or
int
movsl
in
adc
incl
dec
pusha
imul
jnp
jmp
cltd
xor
in
push
xchg
xor
xchg
icebp
je
push
sub
and
pop
xchg
clc
or
push
aad
loope
js
repz
arpl
xor
adc
fcoms
mov
pop
xor
call
pandn
mov
fcmovbe
sbb
nop
mov
add
fcoml
int3
add
or
push
mov
cli
outsl
es
ficompl
fildl
dec
fsubrs
inc
pop
hlt
push
or
je
jge
jp
inc
xor
xor
ficoms
nop
jmp
mov
add
push
mov
pop
sbb
push
push
pop
sbb
adc
imul
loopne
test
push
addl
pushl
xchg
ja
sbb
sub
rcl
shl
mov
or
shr
jae
xor
add
cmpsb
shrl
mov
je
ret
ds
aaa
sbb
add
sbb
div
outsl
cmp
ljmp
add
xor
inc
loop
cmp
or
mov
popa
lret
or
ret
inc
mov
mov
cld
add
inc
push
push
sbb
outsb
adc
or
into
sbb
aam
push
orl
pop
enter
push
push
xor
cmp
push
ljmp
push
pop
mov
push
lcall
xchg
jmp
mov
sub
jg
cmp
fdiv
inc
add
sbb
inc
or
leave
sub
fsubrs
or
ficompl
or
pop
into
iret
inc
sbb
add
pop
test
cmp
push
in
cltd
lret
add
jmp
add
aam
ret
or
sbb
and
ss
or
movsl
fstl
je
test
mov
mov
add
notl
sub
adc
mov
sbb
push
add
pop
and
ficoml
jg
mov
pop
mov
lods
stc
sahf
lcall
pop
ja
insb
nop
add
sub
xlat
jne
jmp
divl
sub
jo
dec
pop
push
xchg
cmp
insl
pop
push
cmp
pop
cmp
push
enter
inc
out
int
add
loopne
data16
jo
je
dec
js
adc
or
in
inc
mov
je
je
idivb
cmpsb
lock
jne
lcall
test
or
pop
add
enter
test
mov
adc
ljmp
mov
out
mov
pop
mov
fists
aas
adc
push
pop
shlb
fcom
mov
dec
icebp
fwait
shlb
repz
sbb
push
mov
hlt
push
xchg
movsl
mul
sti
sub
sbb
mov
mov
imul
mov
pop
add
push
mov
cwtl
enter
fimuls
mov
cmp
and
inc
cmp
xchg
out
insb
jl
test
jmp
sbb
cmp
xor
or
dec
in
jmp
jne
push
iret
test
mov
pushf
add
filds
lea
mov
mov
xchg
pop
and
push
mov
jb
in
push
leave
inc
xor
orb
xor
loop
sub
shlb
popl
jl
xchg
mov
lret
jne
cmp
xchg
lcall
fbld
rolb
cmp
mov
iret
inc
xor
jmp
pop
fdivs
jmp
shll
pop
push
xor
sub
adc
pop
icebp
cwtl
xor
mov
adc
push
enter
push
cmpb
add
cli
xchg
ja
mov
xchg
push
inc
push
pop
fisttpl
movb
out
imul
adc
popl
movb
lods
dec
mov
or
lret
add
ret
or
and
lods
fbld
sbb
aam
sbb
imul
pop
out
add
es
add
cmp
scas
mov
mov
mov
jmp
lock
pop
pop
pop
or
nop
xor
push
cwtl
cld
mov
nop
fimuls
sbb
sub
add
jmp
rclb
aam
jbe
adc
jmp
adc
cmp
xor
mov
std
sub
mov
add
inc
adc
loopne
xchg
data16
arpl
or
movsb
dec
inc
sbb
pushf
sti
or
or
cmpsb
stos
test
out
sub
and
jns
cmp
push
mov
rolb
fistl
cmp
nop
mov
nop
add
nop
inc
cmp
or
xor
jbe
fsin
nop
jg
add
add
push
inc
or
push
sub
jg
stc
mov
sub
rol
loop
ror
mov
bswap
shr
dec
and
nop
pop
dec
push
into
mov
adc
nop
mov
sti
jecxz
nop
push
nop
mov
jle
stos
das
outsb
loop
xchg
int
clc
nop
pop
nop
das
add
jg
aas
ret
sbb
mov
mov
inc
movsb
or
xchg
adc
out
dec
aaa
jecxz
mov
add
xchg
pop
addl
stc
add
loop
in
repz
fimull
and
cmp
ror
mov
or
popf
out
jbe
mov
rcrb
lahf
jns
sbb
mov
mov
inc
xchg
js
ds
test
clc
and
daa
mov
mov
or
push
inc
ret
or
sbb
pop
or
mov
addl
and
in
mov
call
sarb
out
lock
jecxz
bound
pop
or
in
jecxz
xchg
add
xchg
cld
sahf
and
add
cmpsl
addr16
xor
mov
sbbb
push
imul
fldenv
and
dec
push
sbb
mov
cwtl
jmp
push
lds
frstor
add
pop
and
or
je
or
je
sub
jbe
cmpb
adc
or
int3
mov
or
inc
cmp
add
in
mov
push
ss
adc
dec
jno
xchg
stc
or
imul
mov
mov
xor
pop
std
sbb
in
push
shll
push
pop
loope
divl
mov
xor
add
inc
call
and
mov
jns
lock
adc
hlt
inc
stc
in
or
sahf
shrb
popa
lock
inc
mov
pop
push
xchg
mov
add
add
sbb
dec
add
xor
mov
and
fwait
mov
xor
push
jmp
dec
sbb
mov
push
push
push
adc
mov
mov
adc
aad
pop
shl
les
push
movsb
mov
incl
aas
sub
cmp
jb
add
mov
loop
outsl
or
cmp
add
inc
movl
stos
int
push
or
fdivrl
xor
cmp
icebp
mov
sbb
cld
repnz
jg
movsl
push
pop
pop
pop
pop
repz
xor
add
fcomi
ja
mov
mov
mov
push
adc
xor
and
add
cld
decl
push
add
rol
add
add
xchg
pop
push
mov
call
dec
add
idiv
and
add
and
dec
or
rcll
lret
xor
and
psubusb
mov
into
mov
rol
add
pop
scas
xchg
in
div
add
pop
sub
xchg
stc
xchg
sub
adc
test
add
fs
cwtl
subb
and
scas
testl
dec
xchg
pop
leave
sub
in
mov
and
nop
imul
jno
std
xchg
sub
xchg
xor
inc
jns
cmp
aaa
fs
and
mov
cmp
stc
pop
testl
add
sub
gs
mov
rcrb
mov
pop
fs
ficomps
pop
pop
es
mov
lahf
nop
in
ja
stos
mov
add
pop
adc
adc
fs
xchg
sub
push
adc
add
jle
lret
popl
enter
leave
repnz
mov
pop
out
loope
and
dec
xchg
pop
pop
aaa
ret
cmp
in
mov
in
adc
inc
and
xchg
sub
add
clc
mov
fs
add
sbb
or
jle
dec
sub
inc
inc
fiadds
cli
incl
clc
or
jno
and
push
aaa
and
insl
adc
pop
fs
fimuls
in
cmp
inc
ljmp
add
iret
fimuls
lahf
mov
or
mov
mov
test
jle
sub
daa
mov
test
out
aam
sub
nop
or
sbb
das
fs
cmp
aam
and
cltd
xor
pop
jle
push
clc
jl
pop
cmp
ror
repnz
lods
les
mov
std
mov
sub
das
push
sbb
cmp
stc
or
xchg
ljmp
inc
sbb
repnz
cmpsl
and
nop
or
cld
pop
inc
mov
adc
ret
int3
gs
lret
addr16
int3
or
or
imul
push
rcrl
test
jle
mov
inc
loopnew
sub
cmp
mov
add
fs
mov
cmpb
nop
in
enter
cmp
pop
mov
xchg
roll
jmp
filds
pop
add
lret
mov
add
decl
jbe
jns
cmp
stos
xchg
push
cmpsb
popa
jg
in
inc
mov
imul
fstps
cwtl
push
outsb
or
push
cwtl
in
jno
pop
je
pusha
out
pop
push
mov
jmp
jecxz
inc
push
push
jne
enter
addr16
cli
repnz
jae
mov
ret
inc
daa
push
aaa
js
pusha
add
movb
mov
add
je
andb
testb
inc
nop
scas
and
add
pushf
xchg
mov
or
bswap
negl
jnp
mov
xor
mov
mov
mov
in
lds
inc
push
mov
jns
das
cmpsb
fstpl
mov
int
mov
movsl
mov
mov
jne
mov
data16
push
fidivrs
repz
rol
xor
inc
cs
mov
fcmovnb
imul
xchg
cld
or
fcmovnu
jp
sub
not
and
and
or
add
mov
inc
mov
cltd
jns
pop
inc
clc
mov
rcr
push
decb
pop
int3
cmp
stc
insl
aas
mov
xor
xor
mov
sahf
or
rol
mov
repnz
arpl
and
jno
push
data16
adc
movsb
test
in
lret
add
inc
add
or
mov
insb
jne
or
das
shrl
inc
or
or
gs
fnstsw
aaa
lea
daa
lock
xor
push
sub
inc
js
adc
sti
data16
pop
xchg
xchg
mov
xchg
add
mov
pop
mov
and
or
sahf
out
insb
hlt
inc
push
pop
jle
or
ret
push
ss
adc
inc
add
adc
mov
sbb
mov
mov
sbb
mov
sahf
lret
hlt
mov
out
test
inc
mov
and
mov
push
pushf
cld
or
xorl
add
push
or
cmpl
lods
pop
xchg
and
call
adc
mov
mov
fsubl
cmp
mov
add
movl
pop
mov
loopne
jb
add
roll
clc
je
push
sub
add
push
out
sbbl
cmp
fildl
add
sub
daa
push
xchg
xchg
add
pop
add
jae
xchg
rolb
push
sbb
adc
insb
ds
in
lods
or
inc
mov
or
shl
and
inc
aaa
cmpl
mov
push
nop
and
push
call
cmp
push
push
mov
and
xor
adc
cmp
pop
jbe
and
push
adc
and
sbb
les
xor
push
ljmp
push
sbb
inc
xchg
dec
push
dec
ss
push
mov
jo
inc
mov
mov
mov
repnz
mov
cli
lea
mov
or
in
push
push
sub
pop
or
adc
or
mov
sub
push
ret
sbb
mulb
cmp
mov
push
and
adc
int3
push
cld
sbb
ja
jne
pop
lock
loop
and
adc
sub
sbb
mov
mov
sub
pop
insb
and
cmp
cmp
shl
jnp
rep
xchg
rorb
aam
pop
lock
fistpl
rolb
inc
jo
rcll
ret
in
inc
arpl
rorb
mov
ja
das
insb
pushf
mov
mov
sub
inc
xlat
and
add
add
leave
xlat
fidivrs
outsb
jo
test
add
sbb
push
std
adc
sahf
pushf
sbb
sub
iret
push
cmp
cltd
sbb
scas
adc
adcl
mov
pop
rol
pop
pop
cmp
xchg
insb
lds
movsb
and
cwtl
andb
shll
sub
into
xchg
adc
push
dec
pop
rcrl
xchg
loopne
mov
add
push
and
insb
lods
push
shll
xor
adc
or
test
cmp
outsb
cmp
rcl
add
nop
fcomp
push
hlt
dec
cs
test
aam
xchg
dec
enter
les
xchg
or
pop
mov
push
ret
cmpsl
xor
ret
push
fcoml
sbb
mov
pop
ljmp
loope
mov
dec
fmuls
insl
or
or
xchg
lods
xor
dec
push
cmp
mov
icebp
adc
mov
cwtl
add
sub
insb
xchg
or
fmuls
dec
jne
and
rcrl
cmp
or
pushf
jno
sub
or
jo
inc
push
jo
jmp
add
in
mov
jns
rcrl
or
fisttps
mov
or
sar
mov
ss
push
add
push
adc
mulb
bound
sarb
inc
add
outsb
adc
adc
mov
sub
xor
popa
xchg
inc
ret
leave
xor
popa
ret
and
and
fs
ss
adc
xor
inc
inc
push
cmp
adc
add
mov
into
stos
int3
mov
mov
inc
inc
in
sub
insb
xchg
lods
punpckhbw
incb
jmp
push
inc
shlw
in
clc
ret
stc
push
outsl
or
mov
outsl
mov
inc
jae
sub
jle
imul
popw
jmp
mov
pop
dec
sbb
mov
jbe
or
inc
push
sub
pusha
stc
mov
cmc
sbb
rclb
gs
xor
adc
mov
pop
cmp
xchg
sbb
sbb
sub
or
scas
push
sbb
or
xchg
cmp
in
xchg
adc
push
jne
inc
jo
xchg
xor
adc
roll
daa
pop
idivb
fistpll
jnp
popf
insb
pusha
dec
dec
push
push
xchg
xchg
adc
sbb
lret
jo
lock
cmc
enter
xor
flds
cmp
inc
xchg
stc
cmp
pop
hlt
sbb
sub
jb
xor
pop
adc
ds
leave
mov
sub
lock
ja
loop
pop
test
fxtract
xchg
lock
xchg
jb
insl
sbb
lods
rol
add
js
sbb
fisttps
pop
inc
lcall
ds
add
pop
mov
push
adc
mov
cmp
add
dec
pop
ret
mov
cmc
fstpt
push
mov
shll
cli
push
add
or
dec
add
mov
add
pop
push
and
cli
or
inc
insb
in
movsb
dec
mov
hlt
sub
mov
movsl
cltd
shlb
pop
sti
jbe
setns
xor
or
mov
adc
imul
out
fcmovnu
pop
sbb
sahf
out
add
std
cld
sti
cli
inc
popf
xchg
out
clc
mov
notb
mov
add
out
out
shr
or
or
test
add
add
adc
mov
ret
cld
sub
or
fiaddl
rorb
pop
aad
jl
ret
mov
add
fwait
jb
popa
xor
inc
add
bound
pusha
movsl
jg
imul
xchg
add
add
mov
loope
mov
ret
popw
notb
adc
pusha
sub
outsl
cld
ret
dec
add
xchg
lahf
pop
stos
fisubs
jnp
cmpl
sti
xlat
or
adc
cmp
sub
pop
leavew
mov
push
push
fld
fldenv
dec
repz
pop
test
mov
xor
dec
iret
popf
xor
or
fisubrs
call
inc
cmp
sarl
xor
and
outsl
xor
subb
sub
push
or
mov
call
scas
clc
adc
xor
in
divl
popa
hlt
idivl
sbb
xchg
xor
fwait
jmp
scas
mov
add
pop
pusha
dec
jmp
ror
mov
sbb
mov
mov
mov
fldcw
test
xor
ret
push
pop
lock
add
ja
call
push
xor
mov
enter
outsl
lock
or
daa
in
add
adc
add
adc
test
xor
xchg
push
hlt
push
mov
xchg
negl
xor
sbb
jmp
in
aaa
push
or
pop
pop
inc
in
xchg
in
cmp
xor
inc
call
aaa
xchg
push
pushl
inc
xchg
xor
or
ret
es
xor
call
jns
inc
je
or
xor
xchg
add
movl
and
mov
aaa
push
sbb
dec
addb
or
push
and
mov
adc
popa
cwtl
lods
add
xchg
push
push
push
mov
xor
and
push
cmp
jb
ss
jo
push
fdivrs
adc
and
xor
mov
mull
mov
inc
das
data16
pop
ljmp
or
test
scas
sub
outsl
out
pop
imul
push
insb
inc
sub
and
or
dec
and
pop
in
out
lock
adc
sbb
outsl
or
sub
mov
push
lahf
dec
inc
or
inc
pop
movsl
mov
add
add
mov
jb
cmp
sbb
or
nop
push
daa
cmp
andl
jmp
inc
lods
mov
in
insb
xchg
jo
lcall
jno
aaa
or
cmp
cmp
mov
js
and
sbb
mov
ss
xor
pop
xor
lock
add
negl
mov
cwtl
cwtl
mov
and
add
in
dec
add
inc
push
add
insb
negl
adc
cltd
or
cmp
leave
xchg
and
xor
mov
xor
nop
in
and
and
inc
cs
js
push
mov
add
fiaddl
inc
add
sub
inc
ret
in
xchg
ret
or
sbb
rcr
and
mov
push
cmpsl
je
test
jmp
jno
dec
dec
mov
inc
inc
das
pop
xchg
and
cmp
adc
mov
jl
xchg
mov
stos
adc
and
push
inc
fxch
repz
xchg
sbb
ja
lcall
mov
test
cmp
ja
push
push
or
jne
icebp
add
pop
cld
xor
mov
repnz
cmp
jne
sarl
es
in
inc
push
in
or
test
in
push
in
lods
fiaddl
pop
add
xchg
adc
jno
outsb
cld
pop
and
mov
dec
sbb
pop
mov
mov
fstpl
add
add
inc
mov
cmc
xor
orl
das
xchg
and
mov
dec
scas
shrl
imulb
xor
xor
sub
andl
nop
fsubrs
pop
jge
das
arpl
insb
or
pop
pop
xor
inc
enter
pop
fmul
bound
and
push
mov
pop
push
mov
pop
sbb
or
sbb
mov
and
arpl
dec
mov
pusha
or
lret
cltd
enter
push
adc
cmpb
push
orb
inc
mov
loopne
repnz
lahf
and
cmp
cld
sbb
lods
pop
vsubps
xchg
and
loopne
push
cs
mov
ljmp
xor
int
mov
push
push
fwait
sub
sub
inc
cs
clc
hlt
cmpl
rcrb
mov
packssdw
in
fs
shrl
add
mov
pushl
insl
jns
pusha
add
orl
in
in
js
cwtl
or
mov
scas
fsts
mov
fsubrs
push
sub
out
sarl
jl
adc
xor
add
add
sub
cmp
inc
inc
ret
leave
mov
xor
lahf
push
mov
test
mov
xchg
sbb
inc
push
push
dec
out
and
xor
movsb
flds
lret
sbb
and
insb
xchg
push
sub
sbb
or
sbb
pop
test
mov
cmp
mov
push
ret
lock
hlt
jno
inc
jg
jbe
arpl
ds
inc
loop
inc
cmp
call
or
xorl
xchg
pop
pop
test
inc
jl
sbbb
adc
xchg
int
xor
push
and
or
xchg
cmp
push
sub
and
and
mov
or
xchg
sbb
lods
xor
inc
mov
xchg
jl
dec
dec
push
or
jb
xor
adc
repnz
add
mov
lods
insb
dec
aaa
or
adc
cld
out
fstl
jb
das
shrb
push
adc
pop
pop
mov
and
adc
or
or
leave
adc
leave
adc
repnz
add
dec
dec
ss
in
pop
ss
sbb
call
cmp
fimull
or
mov
popl
sbbb
or
into
mov
stos
andb
nop
inc
pop
push
xor
pop
enter
or
sbb
mov
xchg
or
clc
inc
or
dec
jbe
add
ss
sti
xor
ret
repnz
inc
xor
enter
add
inc
push
cs
dec
pop
fdiv
andb
ror
inc
xor
mov
sbb
jge
mov
ret
add
jb
mov
or
jb
fcompl
cmp
dec
push
add
push
fs
or
sbb
add
hlt
sarb
xchg
rorb
xchg
add
aad
mov
cltd
dec
bnd
not
xor
add
gs
push
dec
fdivrs
jno
jb
in
or
call
push
push
jno
mov
or
inc
xor
jg
mov
insb
int
sbb
rclb
mov
xchg
lahf
sub
fcoms
dec
aaa
xchg
xchg
sbb
add
into
dec
cltd
inc
push
nop
or
mov
push
and
fs
xchg
inc
pushf
aaa
jns
cmp
mov
add
adc
mov
xor
or
leave
rcl
aam
ds
push
add
je
sbb
and
push
xor
pop
jp
int3
jne
cmp
inc
mov
in
imul
and
dec
repnz
popa
out
xchg
sbb
imul
dec
leave
mov
hlt
adc
sbb
xor
aaa
inc
dec
ss
bound
add
mov
ficoms
mov
adcb
lahf
fcomip
dec
dec
aaa
mov
mov
add
adc
inc
sahf
into
rcrl
push
lahf
xchg
mulb
in
aaa
sub
pop
xchg
shrb
sbb
push
test
and
cmp
push
sub
jae
xchg
adc
enter
or
xor
das
in
leave
inc
mov
jne
push
cmp
repnz
test
fcompl
fmull
loopne
xchg
sbb
or
inc
xchg
shrl
push
adcb
push
dec
repnz
push
enter
xor
cmp
adc
xchg
xchg
adc
xchg
fmul
rorl
add
sbb
add
xchg
dec
cmpsb
mov
jle
insb
sbb
push
repnz
fcoms
inc
push
xchg
sbb
cltd
fcomps
ror
loopne
andb
nop
or
out
mov
outsl
sbb
das
add
dec
inc
rorb
and
sub
test
enter
imul
xchg
call
sbb
pop
lcall
in
in
mov
cli
mov
jmp
push
pop
mov
testl
adc
lock
mov
adc
sub
push
pop
dec
pop
pop
mov
pop
ret
xchg
mov
int3
insl
popa
inc
xchg
lret
mov
test
jmp
pop
mov
fnstcw
cltd
push
pop
pop
cmp
cmp
sub
out
pop
fsts
and
nop
subl
nop
and
sbb
stos
scas
pop
mov
pop
pop
adc
cmp
and
add
inc
sbb
daa
xor
call
dec
jle
xchg
mov
xchg
inc
leave
pop
loopne
push
rorb
xchg
pushf
mov
pop
lods
push
pop
jne
cs
push
cmp
xor
inc
adc
pop
test
adc
mov
orl
nop
push
jb
mov
xlat
pop
sub
sbb
js
js
cmp
add
in
popl
es
dec
xor
mov
adc
mov
js
jns
xor
inc
es
sti
sbb
lods
pop
enter
push
and
dec
scas
sti
add
push
xchg
pop
cmp
cmp
push
inc
push
popf
xchg
cmp
cmp
repnz
pop
leave
sbb
or
and
stos
ret
adc
add
les
cld
popf
adc
es
or
cld
jno
add
inc
mov
jmp
push
popa
mov
and
notl
gs
enter
sub
and
or
call
nop
sbb
sub
adc
sub
and
xor
pushf
push
ss
mov
pop
shlb
cmp
sbb
cmp
sub
pop
pop
ror
pushf
xchg
xchg
xor
jecxz
movsb
nop
sub
add
add
addl
mov
cmp
dec
cmp
sbb
negl
xchg
pop
add
mov
jne
das
or
jmp
push
push
inc
inc
add
push
jge
nop
inc
add
inc
or
fisttpll
sbb
repnz
adcb
adc
dec
lods
sub
std
shlb
daa
dec
pop
inc
add
adc
and
loop
sub
adc
cmp
cmp
mov
xchg
loopne
cmp
enter
fcomp
roll
jbe
dec
insl
aam
in
and
nop
fcomp
aam
sbb
cmp
fsubr
cmp
scas
gs
inc
es
test
cmp
adc
andl
sub
out
mov
inc
sub
fwait
cmpsl
xchg
pop
push
leave
push
jg
mov
nop
pop
pusha
xor
inc
hlt
popa
mov
imul
push
sahf
mov
stos
sbb
fdiv
push
sbb
das
je
mov
xchg
je
adc
jge
test
insb
and
jns
xchg
push
repnz
fadds
imul
nop
daa
pop
mov
inc
adc
adc
and
push
icebp
or
stos
and
gs
test
sub
cmp
dec
mov
loopne
cmp
adc
adc
xor
mov
dec
insb
sbb
dec
jge
cmpl
cmp
xor
mov
and
push
cmp
adc
or
push
mov
ret
es
pop
or
shlb
adcb
aad
sub
or
repnz
mov
pop
mov
mov
mov
adc
pop
and
inc
xor
sbb
sub
mov
lcall
roll
les
cmp
push
mov
pop
inc
aam
jo
or
jb
test
mov
sahf
sbb
pop
enter
dec
mov
mov
ja
cld
cmp
mov
or
jmp
loop
pop
push
mov
inc
adc
shr
mov
jmp
mov
push
pop
std
xor
in
pcmpeqw
sahf
clc
or
lock
out
adc
pop
xchg
push
mov
sub
sub
jle
push
push
jnp
inc
xor
ss
push
add
push
dec
fs
jle
clc
pop
add
pop
inc
or
test
sti
adc
je
push
cmpsb
jmp
inc
inc
mov
out
dec
test
xor
subl
and
jbe
call
mov
sbb
add
ss
mov
push
in
push
adc
push
or
and
jbe
adc
adc
xchg
lea
sbb
adc
jmp
pop
mov
adc
addr16
jbe
movsb
call
js
jo
addl
or
sub
fs
mov
cltd
mov
clc
in
inc
addr16
das
in
sbb
add
xchg
test
xchg
jp
or
sub
mov
scas
cmp
mov
outsl
sbb
cmpsb
sub
dec
jne
ljmp
or
lock
stos
mov
scas
and
lods
pop
push
sbb
pop
repz
in
pusha
xchg
lret
fbstp
or
mov
and
in
xchg
lcall
dec
push
fs
mov
adc
cld
gs
jg
into
jne
add
push
jbe
fsubrs
xchg
mov
daa
arpl
pop
mov
pop
and
in
or
jmp
adc
xchg
mov
add
adc
outsl
pop
and
mov
int
das
subl
into
jle
sbb
mov
jb
add
fadd
sub
xchg
mov
or
enter
jae
sbb
add
xorl
into
lock
fcomip
push
cmp
and
je
mull
xor
pop
in
or
dec
call
cmp
inc
testl
imul
dec
rorl
inc
scas
pop
cmp
pop
push
jo
adc
movl
test
je
adc
adc
jge
inc
push
and
pop
mov
gs
lcall
adc
test
mov
and
nop
sub
mov
push
jb
push
fcmovnb
inc
pop
aam
adc
sbb
pop
push
or
scas
pop
roll
cmp
dec
sbb
adc
gs
andl
ja
je
jns
push
push
and
and
sbb
mov
push
cmp
cmp
adc
sub
lret
sbbb
push
xor
bound
xor
mov
add
add
js
aad
les
adc
mov
sub
in
mov
ja
in
adc
test
out
jbe
jb
jns
push
cmp
add
mov
jl
inc
js
decl
ljmp
dec
jb
jns
rcll
imul
add
nop
xor
cmp
js
loopne
jns
js
and
mov
cmp
cmp
and
into
lahf
adc
fbstp
push
adc
js
push
sub
xchg
cmp
jne
test
and
jns
mov
sbb
push
movl
pushl
outsb
clc
add
add
sub
popw
lods
das
lock
movl
push
mov
jbe
inc
imul
jae
or
bound
cmpl
inc
mov
cmp
xor
popa
cmove
and
dec
inc
adc
gs
lahf
jmp
inc
enter
or
xor
call
or
loopne
jle
adc
adc
or
pop
dec
and
or
xchg
pusha
mov
add
and
inc
movhlps
dec
or
shl
push
sub
push
push
and
and
inc
fwait
loope
sarb
and
loop
xchg
push
mov
push
dec
jne
adc
push
push
or
in
fiadds
push
add
cli
push
add
cmp
or
or
inc
outsb
sbb
cmovo
sub
add
inc
call
test
test
psubw
in
and
push
ds
jae
test
push
ss
dec
outsl
scas
add
jl
cltd
scas
leave
xor
sub
outsl
dec
ror
cmp
pop
or
addr16
adcb
test
and
fs
push
in
clc
fs
sbb
or
sarl
or
pop
mov
push
mov
sbb
cmp
xchg
pop
sub
push
inc
ret
je
push
or
pusha
jl
xchg
sub
xor
leave
and
nop
mov
jb
jne
enter
push
fstpl
sbb
push
and
mov
adc
xor
push
pusha
test
or
jbe
popa
ret
and
or
rorl
lock
imul
pop
push
adc
push
out
sbb
ret
dec
jmp
lods
cmpsl
test
addr16
pusha
adc
cmpsl
movl
cmpl
pop
adc
jecxz
adc
ret
sbb
fistl
push
sbb
clc
sub
testl
test
push
or
and
je
outsl
shrb
jge
pop
jne
daa
xchg
mov
or
stos
sub
jg
jne
lsl
dec
int3
jne
inc
int3
in
or
loope
pop
adc
jge
adc
cmp
jae
mov
mov
add
adcb
inc
dec
sahf
add
sub
mov
aam
mov
daa
sbb
sti
push
inc
les
push
out
enter
addr16
les
lret
rorb
inc
shlb
lret
enter
or
add
rol
mov
xor
sbb
fcmovnb
insb
or
mov
cmp
or
mov
and
mov
aad
ret
add
in
or
popa
push
jne
andl
mov
movsb
xorb
mov
mov
outsb
loop
sub
xchg
pop
add
fs
xchg
pushl
adc
jb
in
xchg
test
xor
mov
sbb
mov
inc
cs
test
mov
adc
mov
aas
xchg
xchg
xor
mov
inc
ja
outsl
cmp
out
pop
cmp
pushl
mov
or
jae,pn
push
mov
loope
adc
imul
popa
push
pushf
jle
mov
test
cs
mov
push
jmp
mov
pop
sub
mov
xor
and
pmuludq
push
rolb
adc
adc
add
insb
out
scas
xor
call
cmp
jbe
inc
inc
add
imul
repz
decl
lock
push
ficompl
rorb
mov
adc
ret
push
sub
hlt
frstor
or
enter
and
and
cmp
inc
or
lock
mov
call
fcoml
jns
xor
cli
aas
pop
pop
in
shrb
push
jne
pop
xchg
cmp
or
lods
insb
push
xchg
or
ficomps
and
fs
mov
les
pop
lods
and
add
inc
xchg
ret
sub
jo
add
mov
inc
lods
adc
cmp
and
jl
mov
test
mov
push
adc
loop
pop
jb
add
jp
inc
xchg
mov
popa
xlat
lock
and
push
add
xchg
adc
and
jo
add
adc
push
sbb
gs
jmp
insl
and
dec
shlb
test
jo
leave
pop
mov
es
or
arpl
pop
gs
xchg
sub
cmp
xchg
flds
iret
lahf
xchg
sbb
nop
xchg
and
sub
cmp
push
les
or
add
adc
test
sub
gs
loope
test
out
inc
pop
push
sbb
insb
fidivrl
je
cltd
inc
outsb
sub
inc
repz
sub
fs
enter
inc
jb
test
or
or
in
dec
xchg
std
sub
in
mov
cmp
repnz
add
inc
push
sbb
mov
mov
hlt
push
sbb
mov
daa
sbb
nop
cmc
loopne
add
pop
dec
xor
insl
nop
cmp
nop
xchg
loop
push
mov
or
adc
add
adc
inc
popf
adc
or
adc
add
pop
sbb
insl
fsubs
or
push
and
pop
roll
sbb
inc
les
cld
cmp
adc
adc
add
je
les
hlt
enter
and
clc
movsb
sbb
or
add
add
adc
sbb
loope
xchg
insl
push
push
in
call
push
sbb
inc
fistps
or
add
int3
cmp
aam
mov
inc
test
push
add
scas
in
and
mov
rclb
sub
mov
adcb
cmpl
dec
inc
push
push
pushf
inc
xlat
mov
in
test
data16
fsubrs
sbb
dec
and
jp
mov
ss
xor
js
dec
nop
data16
outsl
pop
sti
add
or
xor
in
mov
fmuls
mov
sbb
jge
and
cmp
iret
sbb
adc
subl
sti
add
data16
incl
decl
jne
jmp
inc
aaa
or
add
jg
test
dec
sarb
sbbb
popf
out
or
and
cld
bound
mov
sub
mov
ficoml
imul
jne
jmp
test
cmp
enter
cmp
leave
into
add
add
notb
je
cltd
out
test
push
xchg
cmovge
jne
nop
jmp
xchg
mov
into
inc
sbb
and
push
ljmp
pop
cmp
leave
mov
inc
movzbl
add
pop
ljmp
jb
sub
mov
sub
inc
pop
add
fdivrs
or
or
push
js
inc
xorl
lea
gs
dec
aam
icebp
and
push
inc
sahf
and
xchg
enter
fdivr
int3
repz
mov
mov
int3
rclb
pop
enter
adc
ljmp
or
adc
shlb
adc
cmp
arpl
mov
pop
push
adc
mov
xchg
shlw
ror
mov
pop
xlat
push
test
mov
rorb
arpl
cld
insb
cmp
out
jmp
dec
movb
add
fcom
sub
dec
and
xor
int3
rclb
pop
shll
add
push
das
lret
jne
aam
push
xor
lock
iret
inc
pushf
jnp
and
mov
xor
nop
stos
sub
fadd
bound
or
bound
lret
mov
lds
loopne
xchg
inc
adc
fwait
jnp
xchg
or
shll
add
sub
popa
in
repz
leave
cs
xchg
lds
sahf
or
cmp
mov
xlat
jo
inc
fcmovne
adc
data16
adc
or
mov
push
push
mov
pushl
mov
add
mov
loopne
sbb
and
call
shlb
jb
out
cmpsl
push
jge
out
sbb
mov
lea
sbb
cmp
add
pop
sarb
xor
sbb
lods
add
adc
cmpb
hlt
sub
inc
xchg
into
inc
and
nop
scas
inc
pop
hlt
adc
movb
add
adc
cmc
fcmovb
into
add
mov
mov
clc
jmp
roll
repnz
adc
adc
mov
and
ljmp
call
or
inc
fmuls
sbb
or
pop
mov
cmp
jb
add
ja
sub
jmp
push
inc
jb
in
xchg
xchg
or
add
jmp
cmp
mov
in
jbe
cmp
add
es
cmp
or
jnp
pop
add
add
shl
mov
in
les
mov
inc
gs
jae
adc
je
xor
push
and
push
and
orl
add
clc
or
lock
nop
add
call
in
sbb
and
fists
sub
sub
and
xor
and
xor
jb
or
mov
jbe
and
xchg
adc
and
loop
push
or
loopne
clc
fdiv
xor
cmp
lock
leave
in
rorb
dec
inc
int3
jmp
and
rorb
lods
rcrb
xchg
mov
sbb
les
pop
push
cli
jne
outsl
push
dec
push
loopne
or
notl
mov
push
sub
shll
mov
ror
sub
enter
pop
in
fmull
or
fcom
js
push
adc
jnp
sbb
add
dec
leave
or
lock
mov
xorb
or
test
cmp
leave
mov
pop
xor
dec
mov
fs
adc
sbb
call
fdivs
or
sbb
dec
push
ror
rcll
in
pusha
inc
pop
xchg
hlt
dec
jne
sbb
movsb
pop
sbb
sub
cwtl
lea
add
push
in
fistpl
and
notb
xor
or
add
cmpsl
inc
sub
repnz
clc
push
jp
mov
mov
ljmp
or
sub
mov
or
fildll
sti
or
or
push
and
jae
or
xorb
xor
fadds
jne
mov
shld
loopne
mov
mov
adc
pop
sti
or
cmp
jbe
jge
jmp
es
xchg
push
xor
hlt
mov
cmpl
jbe
dec
xor
adc
and
mov
test
and
cmpsb
repnz
lcall
orl
outsl
jmp
sarb
dec
test
andl
add
iret
push
mov
cmp
out
dec
cmp
pop
mov
push
and
pop
test
add
push
and
adc
inc
push
jbe
or
xchg
sbb
xchg
adc
and
mov
xchg
add
adc
rorb
popl
test
out
or
movups
test
popa
dec
mov
fsubl
add
out
testl
daa
inc
add
jne
xor
adc
mov
out
sahf
aam
and
cmc
sbb
add
fwait
shrb
add
jns
add
push
or
add
and
add
xor
leave
popa
mov
imul
adc
pop
and
pop
adc
fwait
push
or
or
in
js
push
or
push
jge
xorl
mov
hlt
or
or
or
add
mov
pusha
xor
hlt
jno
add
cmp
xor
cmp
inc
push
nop
cmpsl
or
inc
push
add
int
aam
push
imul
sub
mov
push
cli
sbb
loope
jne
insl
lods
nop
outsl
pop
or
xchg
sub
push
sbb
mov
sbb
jl
or
or
rolb
push
sub
insl
lea
or
or
pop
fwait
push
jne
in
or
loope
hlt
add
mov
add
in
push
lcall
shlb
repz
sub
je
call
in
jbe
jp
shl
mov
int3
clc
push
in
data16
in
push
or
dec
call
pop
mov
xchg
sbb
aaa
stos
jp
fistps
in
sbb
or
push
inc
lret
jmp
mov
xchg
ficomps
add
lahf
add
pop
lods
inc
inc
outsb
and
loopne
pop
xor
pushf
ja
out
test
dec
loopne
add
in
sahf
fdivrs
loopne
cs
xchg
cmp
xorl
movb
sbbb
aas
or
pop
loopne
shrb
adc
mov
div
outsb
xchg
inc
push
arpl
lret
xchg
inc
xchg
inc
xchg
pop
clc
jno
call
je
xor
imul
mov
lea
cmp
pop
jne
dec
cs
add
or
push
add
call
add
inc
cmp
jb
fldt
pusha
inc
call
je
pop
dec
cmpsl
cld
cmp
mov
repz
andl
mov
cmp
xor
and
mov
movb
es
lea
xor
nop
enter
jae
jbe
push
mov
add
sarb
bound
pusha
mov
in
mov
xchg
add
xchg
call
push
sub
rolb
mov
or
icebp
push
pop
dec
scas
call
mov
ja
sub
sub
outsb
lods
adc
xchg
add
jecxz
in
and
jae
lods
jmp
repnz
sub
add
push
aam
xchg
int3
scas
cmp
bound
iret
push
sbb
pop
pop
xchg
mov
add
in
daa
imul
mov
fs
out
mov
aas
push
repnz
and
insb
add
orl
and
loopne
movb
inc
push
xor
inc
mov
pop
fiadds
cwtl
add
cmp
jb
xor
fistl
in
push
push
inc
mov
cmp
andb
andl
ljmp
repnz
je
pop
je
pusha
mov
andb
adc
lret
xchg
cmp
jne
dec
loop
icebp
daa
adc
mov
pop
adc
inc
cmp
lcall
pop
inc
mov
add
push
sbb
jne
cmpb
or
int
pop
mov
fbld
pushf
fnstcw
jne
das
push
fisubs
add
inc
insl
hlt
mov
data16
enter
rorw
aaa
out
mov
cmp
int3
enter
xchg
mov
testl
xor
xorb
dec
dec
shl
mov
loopne
and
dec
in
sub
mov
call
sub
int3
sti
aam
inc
orb
add
js
shrb
sbb
fs
pusha
shlb
add
dec
rolb
and
or
into
jp
or
in
and
mov
dec
scas
xchg
xor
push
xchg
xor
inc
inc
enter
xchg
sbb
dec
push
push
or
sub
jne
mov
mov
lcall
js
in
add
push
mov
adc
xor
push
dec
mov
jo
xchg
add
push
enter
fadds
add
push
mov
add
pop
orl
in
pop
add
mov
or
nop
dec
mov
mov
nop
lods
icebp
cmpl
fldt
lret
enter
or
and
hlt
push
mov
pop
es
insb
and
push
add
jp
inc
fsubl
adc
push
or
sbb
inc
push
lcall
pop
push
and
fdivrs
mov
negl
in
xchg
sub
ss
je
outsb
rcrb
mov
or
or
xchg
jne
inc
out
popa
and
inc
and
flds
and
orb
jl
outsb
shrb
add
test
std
nop
out
xor
push
add
and
dec
imul
push
sub
mov
xchg
mov
pop
mov
cmpb
mov
push
xor
or
les
pop
sbb
sbb
xchg
insb
push
mov
sbbb
repz
xor
pop
rorb
xor
xchg
lret
lea
push
xchg
inc
addl
dec
fmul
orb
add
mov
xor
add
xorl
sbbb
sbb
adc
mov
or
xor
repnz
xchg
or
mov
jl
movb
and
push
inc
mov
in
lods
xor
jnp
fsubrs
scas
clc
sarl
adc
clc
xchg
fwait
add
nop
add
call
sbb
push
push
in
scas
adc
and
cmpsl
mov
add
jns
inc
push
xchg
and
push
mov
shr
inc
xchg
sbb
mov
mov
or
mov
test
mov
and
js
rcll
mov
dec
push
pop
inc
sub
sbb
mov
push
xor
ret
adc
jmp
add
dec
stos
dec
pop
ljmp
or
pusha
and
xchg
push
rcrb
ja
add
sub
push
mov
nopl
ret
nop
push
xor
cmp
xor
or
pop
jb
in
and
xor
js
sub
dec
cmp
fs
cmpl
daa
loopne
sub
cmp
es
fcoml
and
fwait
inc
in
aas
or
data16
addb
mov
lcall
jl
mov
jle
xor
das
orb
cmp
cmp
add
lods
imul
mov
xchg
daa
bound
lods
test
inc
outsl
push
sbb
out
inc
jb
stc
roll
inc
enter
repnz
jo
and
xchg
inc
add
inc
inc
repnz
pop
push
adcl
xchg
sbb
lret
sbb
lock
dec
add
loope
mov
mov
sub
jne
push
nop
lret
test
clc
or
out
inc
ret
and
inc
insl
or
shlb
jne
dec
sub
mov
das
or
inc
push
xor
leave
inc
jmp
mov
jge
into
aam
sub
mov
fwait
sub
push
aaa
add
push
gs
inc
aam
mov
fmul
sbb
lock
je
in
or
sbb
adc
jne
adc
dec
or
or
or
and
jae
push
xchg
cmp
xchg
inc
je
sbbl
aaa
jl
pop
movsb
mov
or
add
es
repz
rolb
add
xchg
push
push
hlt
test
mov
js
insl
incl
or
add
push
jo
inc
inc
clc
sub
mov
and
cmpsl
clc
pop
xchg
outsl
cwtl
xor
aas
and
pop
add
mov
lds
or
movsb
fmul
push
mov
pop
sub
lods
shr
or
sarl
mov
push
push
add
and
insb
sub
jle
pop
add
sub
lds
dec
push
ja
dec
push
mov
repnz
and
fcmovu
jae
lahf
xchg
call
decl
jmp
lods
or
fs
inc
movsb
pusha
inc
sahf
push
xchg
testl
arpl
pop
mov
dec
adcb
fcom
andl
and
icebp
shl
adc
and
add
loope
inc
call
and
lods
iret
add
inc
or
repnz
or
lea
and
pop
inc
xchg
clc
add
push
push
push
adc
mov
dec
jns
and
xor
leave
sub
jne
mov
and
in
hlt
mov
inc
rolb
cs
add
sbb
push
in
lret
clc
imul
add
addb
nop
pop
fdivl
and
adc
and
inc
xor
xchg
in
jl
jbe
bound
and
jbe
inc
inc
push
fs
pop
or
or
and
test
icebp
jae
cmp
sbb
in
in
fs
sub
mov
inc
jno
daa
mov
ret
sub
jmp
imul
or
ret
sub
mov
and
dec
loop
sti
cli
or
inc
push
xor
and
mov
add
or
add
pop
arpl
or
jne
pusha
leave
es
adc
out
movsb
shrb
jp
dec
sahf
add
dec
sbb
std
pop
int
or
das
mov
int
inc
dec
inc
inc
cmpsb
rcrl
dec
mov
jg
add
jb
insb
cltd
mov
sbb
pusha
notb
jg
jp
lock
aad
pop
mov
mov
mov
lock
in
add
sub
jp
in
aaa
pmuludq
jg
ljmp
aaa
or
pop
dec
xchg
mov
cmpsb
ss
mov
pop
adc
mov
sbb
repnz
pushf
sub
add
jns
push
in
jle
in
addb
xchg
rol
loopne
call
cmp
gs
lds
adc
data16
fsub
xor
stc
cmp
test
inc
sbb
call
daa
and
dec
add
dec
fcompl
nop
rcr
pop
and
inc
faddl
sbb
jb
fsubr
and
pop
enter
adcb
add
adc
lret
mov
inc
sahf
adcb
enter
enter
mov
sbb
cmp
xchg
or
inc
mov
add
enter
dec
adc
add
cmp
xchg
or
fs
inc
aam
loopne
pop
mov
push
dec
inc
aas
xchg
inc
es
ret
add
push
dec
push
dec
or
sarl
jbe
adc
and
mov
inc
mov
cmp
test
adc
insb
cmpsb
sbb
testb
jge
pop
sbb
adc
xlat
mov
mov
push
mov
je
mov
pushf
xor
icebp
inc
mov
rclb
pop
leave
inc
add
and
in
aaa
ret
sbb
sbb
jb
mov
inc
in
pop
or
ss
repnz
fcomps
ret
out
push
xor
orb
in
pop
cmp
cmp
in
add
jb
inc
aam
sub
push
inc
es
adc
cmc
xchg
mov
or
xchg
and
mov
int3
pop
mov
lret
push
add
lcall
sub
adc
sbb
jnp
pop
mov
xchg
dec
addr16
nop
mov
adc
adc
inc
mov
mov
push
enter
or
jno
cmpb
dec
xchg
jns
enter
adc
enter
and
nop
pop
mov
adc
fisubrs
mov
aas
dec
xchg
lret
cwtl
mov
push
add
enter
dec
jns
cmp
xor
dec
add
sub
test
dec
inc
dec
ja
xchg
dec
leave
push
pop
outsb
outsb
dec
dec
and
or
push
jb
nop
push
and
push
pushf
adc
scas
cmpb
mov
fidivrl
cmp
popl
mov
or
jge
add
mov
lret
stos
mov
sbb
mov
pusha
cmove
or
cmc
scas
mov
add
mov
jg
pop
cmpl
clc
adc
mov
and
adc
add
jne
popf
sbb
inc
mov
scas
ret
pop
jb
aas
or
xor
test
adc
jg
sub
pop
ret
popl
aaa
mov
clc
pusha
add
push
testb
leave
sub
add
test
add
pop
add
push
add
push
add
pusha
jmp
adc
dec
aad
pop
mov
add
or
cmp
inc
sti
das
mov
jmp
decb
add
negb
push
pop
push
stc
pop
daa
popa
add
xor
mov
mov
or
jnp
inc
dec
jecxz
push
mov
inc
pop
fbstp
mov
and
xorb
xchg
inc
xchg
xchg
mov
adc
fldl
pop
jl
sahf
lock
adc
jmp
or
andl
jne
push
sar
dec
or
je
jne
int
inc
pop
or
pop
ljmp
sub
add
cmp
inc
adc
or
icebp
test
xor
insb
mov
jno
push
imul
push
push
sbb
and
xor
es
push
sub
aam
call
mov
xchg
inc
movsb
pop
push
cld
bound
and
sbb
dec
dec
sbb
add
xacquire
cmp
fisubrs
dec
push
mov
xor
jbe
loope
sbb
jp
dec
and
mov
pop
js
into
adc
mov
imul
pop
jp
or
shll
adc
xchg
sub
adc
sub
inc
xor
push
call
or
jmp
adc
push
and
cli
inc
notl
hlt
add
add
mov
pop
adc
mov
add
inc
movnti
roll
fistpll
jo
mov
clc
int
cwtl
daa
xchg
add
adc
xchg
test
les
je
subl
movsb
or
aaa
movsb
test
adc
int3
negb
adcb
sub
loop
loopne
test
sub
or
daa
jnp
mov
jb
push
add
ret
outsb
mov
pop
jp
movb
xchg
push
add
sub
iret
ret
push
pushf
testb
adc
or
and
inc
or
bound
jle
adc
push
lock
mov
add
insb
xor
dec
mov
adc
jmp
mov
out
ss
movsb
or
test
loope
inc
roll
loopne
fcomps
rcrb
or
adc
push
adc
push
aaa
inc
dec
test
add
mov
lahf
test
in
jne
pop
lret
pop
push
lock
subb
inc
add
xlat
push
inc
dec
adc
jge
push
or
rorl
fwait
lea
sbb
orl
mov
out
mov
mov
dec
xor
push
iret
adc
xchg
fsin
push
out
jne
add
je
jecxz
add
jnp
rolb
or
test
cmp
loop
push
jo
fwait
mov
pop
pop
and
mov
call
and
bound
into
jmp
in
add
stos
rcrl
sbb
push
cld
push
sub
sbb
nop
push
clc
mov
in
inc
dec
cmc
xlat
cld
push
mov
movsl
pop
xor
adc
cmp
je
jae
dec
pop
icebp
xchg
insl
push
adc
sbb
dec
mov
lock
adc
hlt
icebp
dec
outsb
out
push
in
jecxz
out
insb
iret
adc
sbb
push
in
loope
scas
and
mov
or
sub
int3
cmpsb
pop
sub
push
int
popa
enter
xchg
and
or
lods
xchg
or
out
mov
sbb
jmp
les
aam
mov
xchg
mov
push
hlt
inc
fwait
lds
adc
adc
arpl
cwtl
je
and
xchg
adc
cmp
shl
mov
add
add
mov
ret
adc
fmull
jmp
push
mov
mov
mov
cmc
mov
cltd
aam
jbe
xor
or
and
sahf
add
pop
or
push
popf
mov
push
dec
adc
call
cmp
mov
icebp
fisubl
jmp
inc
je
add
sbb
inc
loopne
xor
jecxz
push
daa
call
popl
mov
add
sub
push
add
dec
insb
push
pop
in
jno
push
mov
outsb
sti
cwtl
push
xor
cld
and
add
lret
xchg
push
in
push
fisubs
and
cmc
push
rorb
ljmp
and
repz
cmp
add
aaa
ss
cli
icebp
and
pop
jmp
sub
adc
mov
jns
fnstsw
clc
fiaddl
jmp
or
and
enter
mov
frstor
fdivl
or
lock
mov
xchg
dec
shlb
es
xlat
pop
stc
lock
fsubrs
test
jnp
sub
hlt
hlt
test
aam
popa
push
mov
lock
in
dec
insl
fldl
lret
idivb
testl
scas
lock
aad
int
sbb
inc
jo
frstor
aad
or
sub
sbb
popf
add
add
and
mov
jle
cs
in
sub
std
push
ds
mov
pop
sub
aaa
leave
ja
cmp
adc
mov
sbb
cwtl
or
mov
sub
f2xm1
cmp
mov
fnstcw
xor
xor
movsb
sahf
and
xor
popf
mov
lsl
popa
pop
in
imul
scas
jmp
and
pop
lcall
fs
js
cli
adc
lret
enter
xchg
iret
aaa
jmp
mov
es
push
das
aad
xor
ret
push
add
pop
repz
cmp
push
add
stos
pop
sti
pusha
mov
jmp
jl
and
and
and
and
and
and
and
and
and
and
enter
and
rcl
fcomp
and
and
loopne
call
and
hlt
clc
cld
inc
inc
sahf
and
pop
add
or
inc
inc
inc
adc
sbb
inc
inc
inc
and
sub
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
inc
inc
inc
inc
push
inc
inc
inc
jl
test
mov
inc
inc
movsb
test
mov
inc
inc
inc
mov
inc
inc
inc
int3
rcl
fadds
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
cld
sbb
pop
imul
mov
sbb
shrb
or
add
rcrb
sbb
add
push
rcrb
sbb
or
in
popf
jnp
addb
or
add
sbb
fs
add
add
xchg
inc
inc
adc
adc
cmp
push
and
xchg
inc
inc
push
inc
sbb
sbb
leave
adc
popf
rorl
cmpsb
fstp
pop
clc
sbbl
adc
mov
jge
adc
jl
mov
loopne
add
sub
mov
cmp
or
cmp
cs
fistpll
sbb
xchg
mov
push
push
xor
lea
cs
mov
add
call
jne
lcall
clc
lock
mov
je
push
mov
add
mov
ret
mov
pop
loopne
ret
mov
add
inc
mov
das
shlb
aaa
fwait
jnp
add
shr
jbe
jne
incl
pop
outsb
adc
sar
ret
mov
adc
xor
push
clc
pop
subl
insb
and
push
jns
std
pcmpeqd
or
pop
lcall
fs
pop
test
je
rolb
and
fwait
jne
sbb
dec
inc
sub
aaa
or
add
push
or
out
push
adc
or
orl
jne
push
pop
out
test
pop
pop
mov
movl
or
decl
je
mov
or
inc
test
leave
enter
xchg
xchg
xchg
mov
cs
call
mov
cld
sub
imul
mov
lea
ror
xor
dec
mov
ret
cs
add
inc
mov
and
movsl
push
mov
fmull
jnp
mov
or
orl
push
xchg
pop
xchg
lods
sub
push
out
sahf
and
adc
or
xor
jns
jae
cmp
pop
jp
neg
sbb
mov
pop
ret
ss
cs
cmp
fstl
insl
mov
mov
xlat
cmovg
fistl
xchg
jge
push
add
fcomi
add
test
inc
sbb
jmp
inc
push
rsqrtps
pop
sbb
hlt
pop
and
or
pushaw
lods
mov
or
jae
xor
sbb
fsubr
mov
sbb
mov
add
in
jp
movsl
sbb
sahf
cmpsb
imul
iret
mov
or
int
pop
cli
mov
shr
ret
fwait
dec
xor
mov
push
nop
add
sbb
lret
add
xor
or
pop
cmpsb
pop
inc
add
aad
rolb
or
fwait
xor
dec
inc
cmp
adc
imul
outsb
rolb
ret
inc
and
popa
xchg
jb
ret
and
xor
sbb
add
cltd
imul
movsb
clc
fs
lea
inc
bound
or
ror
iret
fidivs
add
sbb
je
sbb
push
mov
cmpb
adc
sbb
scas
or
cmp
or
lock
popa
enter
pop
push
rcrl
sub
jbe
mov
sbb
adc
dec
add
xchg
enter
mov
pop
xchg
adc
add
adc
mov
jl
or
enter
mov
pop
jbe
dec
add
mov
subb
xor
jge
call
push
or
or
add
xchg
pop
imull
add
inc
xchg
cmp
mov
fmull
enter
vmptrst
sbb
pop
mov
cmp
jb
inc
push
je
lea
sbb
clc
insl
pop
mov
jmp
add
dec
mov
inc
cmp
cmp
jp
pusha
mov
mov
jnp
cs
add
xchg
js
adc
sti
std
inc
mov
pusha
je
cmp
xor
cmp
jae
lea
call
in
pop
sub
sub
jne
inc
inc
push
jb
xor
jae
or
cmp
fnsave
loope
pop
sbb
out
pop
jae
adc
call
dec
in
les
mov
insl
mov
pop
ret
add
add
adc
fnstenv
in
dec
xchg
dec
ret
jbe
jae
aas
rclb
adc
jg
nop
int
mov
imul
mov
shr
lret
loope
jbe
jecxz
jb
xor
jg
dec
fwait
insl
cltd
add
mov
sub
je
pop
or
adc
and
inc
pop
jbe
pmaxsw
shrb
cmp
add
fcmovnu
ret
jl
adc
inc
mov
pop
mov
call
cmp
fldl
dec
test
je
dec
adc
lahf
cmpsl
push
push
and
out
sti
out
stos
adc
mov
outsl
inc
shlb
or
add
add
or
rolb
or
push
mov
lea
add
sbb
add
adc
lods
xor
jbe
add
cli
jb
sub
dec
sub
jne
sbb
fsubrl
mov
imul
or
and
es
arpl
mov
notl
mov
or
sahf
sbb
movsl
pop
into
add
inc
sbb
pop
cmp
pop
inc
jns
repz
cmpsl
sub
loope
mov
inc
jo
jne
insl
mov
push
adc
push
repnz
pop
push
push
call
jge
scas
jecxz
sbb
adc
inc
ss
mov
sub
sub
pop
mov
sub
push
push
lea
shrl
sub
roll
jl
push
repnz
sub
push
pop
mov
add
cmp
add
sbb
mov
ficoms
cmp
ljmp
lea
data16
jl
inc
add
or
jge
xor
and
jg
mov
and
lea
push
inc
push
lea
loope
out
mov
cmp
inc
lea
pop
push
jl
mov
push
fstpl
insl
dec
insl
jmp
add
mov
testb
mov
and
jne
jmp
xor
sub
mov
sarb
mov
inc
sub
ret
xchg
fnsave
cs
add
ret
dec
out
call
adc
cmp
lds
mov
jl
sub
cmp
ret
cmp
jge
mov
popa
sub
dec
loop
cmp
sti
lea
dec
fdivrs
lahf
push
jbe
cmp
into
add
pushf
sti
ret
mov
push
push
push
add
test
push
dec
xor
push
loope
push
dec
inc
fcmovnu
mov
xchg
addr16
push
jl
outsl
pop
sub
fcomps
shrl
andb
lret
popa
jmp
mov
jmp
dec
sub
stos
push
push
outsl
jecxz
int3
jno
faddl
sahf
addr16
add
aam
dec
pop
incb
pop
sar
add
push
add
data16
shlb
ds
and
into
sub
outsb
add
mov
fisubrl
enter
rcrb
fsubl
xor
clc
test
bound
or
fiaddl
fbld
jbe
movl
imul
enter
dec
xor
xor
push
jo
test
jl
jle
inc
ljmp
cmp
rol
sbb
inc
and
sahf
movsl
jne
dec
xor
aaa
sub
inc
out
sub
add
push
out
std
movsb
and
jle
jmp
pop
and
mov
testl
xor
pop
out
xor
int
fists
inc
jecxz
sub
inc
pop
mov
adc
or
adc
inc
sbb
in
popl
dec
push
or
push
and
cmp
inc
push
ficomps
std
pop
int3
xor
cli
adc
in
je
push
jo
mov
loope
adc
leave
jne
int3
sbb
dec
pop
mov
es
in
cmp
cmp
dec
or
or
pop
cmp
adc
push
mov
mov
insl
add
xadd
push
sbb
mov
xor
pop
sbb
lcall
test
xchg
push
insb
call
lds
add
sbb
and
or
xchg
mov
test
in
inc
loop
mov
xchg
push
inc
dec
dec
fmuls
in
push
pushf
add
mov
outsl
inc
leave
add
mov
movsl
dec
xor
sbb
repz
mov
nop
push
pop
jmp
mov
dec
ret
mov
mov
adc
frstor
jb
or
xchg
pop
fmul
sahf
dec
mov
out
sahf
jae,pn
rorl
insl
push
push
lods
mov
inc
xor
xor
adc
inc
mov
les
push
adc
xorl
push
mov
in
xchg
pop
adc
shrb
ret
or
test
mov
or
or
in
sub
inc
pop
add
or
inc
mov
push
push
pop
push
sub
xor
test
repz
cmp
add
rcll
in
ficoms
push
bound
fistpl
lods
dec
shl
pop
push
add
icebp
and
movzwl
pop
mov
rol
mov
jno
aas
push
cld
cmp
shlb
or
add
sub
fistpl
jmp
or
lea
andl
add
lea
in
xor
cmp
push
stos
mov
xor
or
inc
out
dec
lods
push
sbb
fnstcw
inc
push
cmp
push
orl
lcall
add
jbe
fstpl
jae
or
insl
lock
mov
inc
cmp
cmpsl
cmp
test
add
mov
and
fisubrs
inc
or
ds
mov
and
or
add
out
mov
and
or
adc
lret
pop
out
or
xor
fiadds
and
push
or
mov
cmp
add
mov
mov
repnz
scas
xor
mov
and
or
lahf
shll
and
or
mov
dec
jo
xchg
enter
andb
out
dec
shlb
lods
adc
cmp
out
sbb
mov
ficoms
add
sbb
cmc
mov
arpl
mov
insl
push
adc
div
and
adc
mov
or
roll
shl
pop
or
enter
or
or
shll
sbb
das
adc
or
xor
rorb
pop
push
fucomip
mov
sbb
or
jle
ss
add
and
ret
aas
mov
mov
push
dec
in
sub
enter
xor
rorl
mov
popa
shll
lret
jnp
add
push
xchg
push
repnz
out
adc
and
rclb
test
adc
repz
pop
add
xor
xor
pop
add
icebp
out
lods
mov
or
add
or
mov
add
cmpsl
clc
pop
ja
cs
pop
push
stos
add
jnp
xor
mov
push
repnz
jb
dec
out
fiaddl
pop
lahf
repz
mov
mov
mov
xor
and
sahf
fisttps
leave
fnstcw
and
mov
push
adc
fisttpl
push
push
dec
jne
dec
flds
lods
adc
dec
push
pop
or
xchg
dec
cwtl
dec
push
push
and
mov
xlat
xor
icebp
and
push
stos
rcr
mov
loopne
pop
shr
outsl
or
shlb
enter
data16
sbb
ret
sarb
sbb
ret
mov
in
xor
pop
add
das
adc
cmp
pop
xchg
shrb
ficoml
adc
roll
cwtl
pop
fisubrl
lods
fst
ljmp
mov
insb
and
push
or
mov
add
test
sete
sarb
mov
sbb
div
mov
push
adc
in
inc
or
inc
in
xor
adc
push
push
add
mov
incb
mov
xchg
mov
lock
mov
testb
pop
mov
jns
daa
daa
add
add
pop
test
lock
add
mov
add
test
loopne
mov
and
das
test
sti
sbb
xor
test
cmp
btc
cmp
pop
int3
push
jno
in
sbb
adc
mov
loopne
mov
mov
xor
addr16
mov
cmpb
mov
push
out
sbb
movsl
pop
add
cmpsl
cmpl
fsts
mov
adc
pop
or
clc
push
mov
mov
xor
js
mov
push
mov
jl
fisttpll
xchg
rcl
push
add
mov
push
adc
insb
adc
popa
sub
std
shl
xchg
mov
fadd
add
mov
ret
jb
mov
inc
add
sbb
adc
pushf
sub
orl
call
mov
call
leave
mov
call
push
testb
dec
pop
call
add
adc
addl
cli
xchg
dec
test
sbb
push
daa
push
pop
mov
pop
stos
leave
mov
push
or
push
jmp
in
push
push
mov
mov
xor
ja
sahf
sbb
inc
adc
or
adc
jg
decl
popa
push
dec
imul
xor
and
and
fbstp
sti
popa
insb
insb
gs
bound
je
cmp
sub
jo
imul
pushl
addr16
sub
xor
cmp
sub
and
dec
outsl
and
outsb
outsl
jmp
outsb
and
jae
sub
inc
and
jae
jnp
sti
insl
adc
gs
dec
outsl
jb
imul
pop
popa
je
outsl
outsb
cmp
and
das
das
ja
imul
ja
and
das
xor
incl
shll
in
frstor
or
or
adc
punpckhbw
dec
jp
mov
add
in
lcall
xor
xor
jae
ja
jb
or
bound
jno
fstpt
add
push
jae
jae
aaa
cmp
ja
add
arpl
add
insl
imul
adc
jnp
jbe
sbb
mov
add
outsb
imul
jb
outsl
sub
mov
jb
je
outsl
sbb
add
imul
mov
mov
popa
add
popa
outsl
ja
cmp
arpl
imul
outsb
sbb
pop
mov
add
jo
or
imull
andl
je
cmp
mov
mov
mov
imul
ja
xor
jb
gs
mov
subb
bound
dec
mov
imul
imul
jnp
mov
add
outsb
mov
mov
mov
inc
jne
imul
jae
dec
pop
inc
gs
sub
jb
xchg
xor
mov
jne
jo
ss
popaw
imul
insl
insl
ja
insb
sbb
jne
insb
mov
mov
popa
fwait
and
addl
js
adc
jns
fs
pop
mov
or
shll
push
cmpsl
jb
imul
in
insl
outsb
or
iret
mov
mov
and
popa
js
popa
jp
jae
or
mov
mov
int
cwtl
add
ss
popa
insl
push
or
add
insl
push
lea
push
push
push
or
or
fistpl
and
jb
popa
jo
adc
shl
mov
test
loope
xor
adc
les
lods
adc
cmp
ja
mov
js
addr16
ja
mov
leave
pop
imul
mov
data16
addr16
out
dec
pop
xchg
mov
adc
scas
lds
js
adc
cmp
inc
sub
imul
dec
jg
xchg
and
bound
imul
cmp
push
cmp
xchg
jno
out
mov
dec
bound
sbb
outsb
movsb
sbb
fwait
mov
or
mov
pop
bound
gs
cmc
sbb
imul
loopne
jno
lea
pop
mov
push
cld
addr16
jns
inc
jecxz
sub
mov
push
adc
cld
rorb
idivb
xor
xor
in
loope
rorl
outsb
add
dec
iret
xor
or
je
push
imul
add
fstpt
push
iret
adc
sbb
je
imul
sbb
ja
outsb
pop
add
fmull
cmp
pop
xor
ss
sub
inc
jb
loope
repz
mov
sbb
sub
test
imul
sbb
gs
cmpsb
mov
dec
mov
push
rcll
mov
outsb
cmpsb
xchg
mov
add
push
push
sbb
gs
jo
add
xchg
mov
fwait
leave
pop
cmp
fs
dec
pop
cmp
push
mov
stc
jae
insl
test
lahf
jo
bound
imul
and
ja
gs
adc
dec
fldt
push
or
scas
cld
dec
xor
stos
mov
mov
lods
cmp
out
outsl
fs
dec
adc
pop
lods
fldt
jne
cmp
xchg
jo
clc
mov
js
jbe
outsb
insl
sti
jne
shl
pop
es
ss
js
jo
jne
jns
pop
add
pop
jae
xchg
es
xor
fs
or
jge
cmpsl
int
test
add
fcmovb
jne
outsb
das
jge
jae
test
add
xor
lcall
test
sar
dec
mov
xlat
and
pushf
subb
iret
loope
mov
data16
cli
cli
mov
andb
insl
je
ret
ljmp
sbb
jnp
xor
fisubs
inc
rcrb
insl
in
mov
add
in
or
ss
scas
clc
gs
imul
data16
shlb
shl
pushf
sbb
imul
push
xor
xchg
cmp
push
adc
push
push
lret
and
xlat
mov
pop
outsb
lods
jae
fs
or
out
or
bound
pushw
push
scas
jb
adc
ss
lock
insl
sbb
sbb
mov
in
push
fidivl
xor
das
jo
ret
pop
das
dec
js,pn
adcb
jns
lds
sub
rcrb
xor
adc
add
lcall
bound
push
pop
cmp
je
cmp
xor
sbb
inc
fdivr
jg
inc
xchg
das
dec
fs
push
xor
push
das
inc
pop
xor
sti
push
je
imulb
push
inc
outsb
jno
push
push
fmuls
inc
push
jns
xor
dec
push
push
inc
out
in
inc
dec
dec
inc
xor
dec
inc
push
pop
push
push
inc
inc
cld
lahf
test
push
popa
add
dec
dec
inc
push
add
cmp
incl
push
inc
push
inc
pop
dec
jle
push
adc
fsubl
outsb
pop
inc
jne
adcl
lret
je
cltd
jmp
push
out
cs
imul
push
arpl
push
shll
dec
mov
fnstsw
imul
push
push
push
inc
or
inc
arpl
dec
jae
push
inc
or
js
insb
fldln2
or
add
jns
je
inc
or
and
outsb
push
xor
popa
test
push
insl
fildll
push
scas
mov
cmp
je
outsb
stc
jae
xchg
dec
xchg
jae
and
mov
or
add
lock
fwait
insl
lcall
cmp
in
or
and
and
jae
sbb
mov
stc
bound
insb
and
and
or
jo
inc
and
pusha
nop/reserved
add
adc
pusha
in
and
add
cmp
pop
fcoms
add
xor
push
and
pushf
cmp
pop
jae
cltd
push
and
jecxz
push
inc
js
sub
lock
pop
push
mov
dec
push
push
and
jae
dec
push
push
push
das
mov
or
je
adc
btc
inc
test
or
das
sub
pop
xchg
add
sub
repnz
cmp
cmp
pop
push
imul
sbb
or
outsb
cmp
adc
repnz
xchg
daa
rorb
gs
pop
imul
sbb
rep
gs
mov
insl
daa
jb
cs
push
pop
sub
push
jae
dec
outsl
jp
popa
das
xor
and
daa
dec
enter
dec
cmc
inc
push
adc
cmp
sub
enter
sub
add
or
outsl
insl
test
mov
add
pop
sub
dec
or
cmp
ss
lret
ss
or
inc
std
popa
inc
xchg
jnp
and
insl
lahf
pop
xor
cmpsb
add
je
dec
cmpsl
push
xor
rorl
inc
mov
imul
xchg
jp
inc
arpl
inc
push
inc
push
sbb
dec
loopne
jae
sbb
andl
mov
push
cmp
sbb
inc
cmp
into
xchg
jae
jns
push
inc
nop
mov
or
gs
mov
gs
insb
cmp
lods
push
inc
mov
mov
dec
mov
add
dec
outsl
addr16
outsb
imul
out
add
dec
insb
add
jnp
lock
scas
dec
inc
mov
lods
aaa
outsl
xor
pop
movsl
stos
xor
pusha
push
test
push
cld
jne
xorl
sbb
mov
push
cmp
fsubp
mov
adc
mov
push
lods
mov
ss
sbb
rcrl
sbb
push
dec
add
jno
or
test
push
sbb
and
and
inc
add
gs
sub
fs
xor
or
jge
cwtl
lds
dec
pushf
sti
jo
outsb
jl
xchg
push
shlb
mov
mov
add
push
pusha
fsubrs
cmp
or
fs
inc
sub
inc
shl
inc
mov
mov
sub
inc
sub
and
push
std
or
mov
mov
inc
jo
pop
loop
push
xorb
dec
push
loop
iret
push
fwait
inc
xchg
inc
sbb
divb
inc
push
or
pusha
mov
scas
mov
and
and
push
test
mov
cwtl
fsubrl
inc
sub
push
pop
mov
push
xor
adc
clc
mov
inc
inc
inc
push
inc
push
jp
addb
je
pop
jae
sbb
push
inc
adc
and
pop
imul
push
xor
mov
cltd
sub
mov
sub
xor
test
cmp
test
sub
adc
sbb
ss
ss
push
sub
movl
ss
shrb
int3
xor
and
xor
cmp
ljmp
loop
insb
and
or
jo
jae
jne
insb
push
mov
or
sub
xchg
add
push
sbb
cmp
sbb
push
js
insb
adc
add
insl
adc
xchg
mov
mov
gs
dec
inc
dec
cmpsl
shll
pop
inc
jne
hlt
inc
imul
jnp
divb
and
push
jb
and
fcomps
testb
xor
cmp
and
sbb
push
mov
adc
dec
cmp
inc
ret
into
and
dec
adc
faddp
pop
dec
adc
jl
adc
je
gs
push
andb
and
mov
test
je
mov
or
and
add
jne
call
sub
aaa
cmp
adc
and
mov
sub
mov
test
pop
or
jae
stos
or
cmp
sub
jp
adc
in
sahf
icebp
adc
add
insl
data16
pop
xor
inc
aam
pop
or
enter
loopne
mov
jno
ljmp
imul
inc
fldt
fstps
pop
int
call
add
bound
mov
push
cli
xor
dec
ss
adc
jae
sub
inc
adc
out
or
arpl
sub
inc
inc
xchg
mov
shll
jo
dec
andb
mov
insb
lods
pop
mov
push
or
mov
push
shrb
push
add
mov
push
dec
push
inc
fdivs
es
fildl
push
add
adc
inc
cmp
xor
push
sbb
je
dec
xchg
insb
addl
and
cmp
jae
adc
popf
jbe
scas
and
popf
inc
lret
int3
movsl
push
imul
xor
and
mov
flds
add
add
lock
xlat
push
insb
jae
lea
and
or
push
or
sub
imul
cld
mov
mov
jo
clc
jge
in
bound
push
jne
mov
mov
dec
outsb
js
sbb
lret
fmul
bound
push
add
enter
insl
fcmovnu
xchg
adc
fs
shrl
mov
push
push
popf
and
jl
push
sub
cs
inc
add
pop
push
adc
loopne
pop
or
sub
mov
imul
subb
push
lea
aaa
outsl
jne
int
push
dec
and
sbb
xor
fadds
fs
xor
pusha
xchg
or
fwait
or
sbb
pop
cs
xchg
mov
add
jmp
push
das
andb
jne
jge
push
js
cs
push
push
adc
pop
xor
sbb
int3
std
jae,pn
insb
push
sbb
inc
lods
movsb
cld
jp
jo
and
dec
add
or
dec
and
or
sbb
or
fbstp
xchg
lds
sbb
adc
adc
push
pop
dec
cwtl
int
mov
sub
ret
push
rclb
pop
scas
add
push
sbb
or
imul
gs
sbb
sahf
dec
inc
push
stos
inc
push
cwtl
shrl
insb
test
jne
rorl
test
jne
outsl
pop
in
push
mov
aaa
dec
xor
aam
imul
and
stos
push
jo
pop
and
push
push
dec
dec
or
out
push
lds
fwait
add
jle
lcall
sbb
sti
mov
pslld
pusha
mov
pop
push
dec
js
xchg
dec
sbb
sub
xor
sub
push
dec
dec
pop
ds
dec
pop
arpl
pop
gs
mov
sub
inc
dec
push
push
cmovge
inc
pop
ret
out
or
lcall
out
jnp
inc
xor
inc
xor
cmp
cmp
incl
inc
sub
or
inc
ss
xor
inc
aaa
fbld
cmp
jp
cmp
inc
pop
aas
aaa
xor
cmp
popa
fucomi
xor
pop
jge
fst
comiss
ud2
push
push
cwtl
mov
push
jno
aam
sub
das
in
and
insb
jl
fisubl
cmp
push
clc
push
pop
outsb
or
sub
dec
andb
adcb
mov
dec
pop
orl
cs
xor
xchg
mov
dec
push
xor
into
and
cmp
or
arpl
outsl
adc
push
dec
xchg
sub
das
add
fsubrs
mov
pop
leave
push
xchg
in
les
or
jo
hlt
je
movsl
mov
lds
pop
bound
mov
jns
insl
outsl
jp
lret
add
dec
xchg
inc
inc
test
xchg
sar
arpl
in
and
dec
mov
pop
fsubrs
xor
frstor
and
arpl
fs
das
ljmp
clc
and
mov
aam
pop
aam
out
dec
and
aam
push
pop
and
fmuls
sub
jnp
pop
adc
mov
xor
sub
nop
testb
add
dec
shl
rorl
orb
adc
jmp
insl
pusha
inc
sbbb
ret
lcall
adc
xor
sbb
clc
bound
or
cmp
sub
or
xchg
dec
mov
dec
mov
mov
push
dec
inc
in
inc
xor
inc
aaa
adc
sub
inc
push
jp
fldt
inc
loop
adc
adc
dec
adc
sbb
fucomi
sub
push
pop
xor
dec
cmp
inc
mov
call
dec
jg
inc
scas
pop
inc
jbe
imul
test
stos
dec
push
xor
imul
lds
jge
xor
sbb
inc
shl
aam
inc
lahf
add
inc
dec
aaa
fstps
std
cmp
mov
stos
ss
out
inc
movaps
nop
or
aas
xor
mov
rorb
ss
push
test
ja
inc
jecxz
push
andl
cmp
pop
stos
mov
or
clc
cvtps2pi
scas
jmp
or
xor
xor
leave
fsubl
aaa
dec
jg
dec
lret
pusha
sbb
xor
push
fs
test
loop
cmp
lret
jae
and
popf
ja
pop
sbbl
popf
adc
loop
roll
adc
test
push
xchg
xchg
push
mov
ret
sub
xchg
mov
andl
icebp
insb
or
jge
mov
and
adc
sub
sub
xor
jp
mov
dec
mov
sbb
dec
fistpl
mov
add
dec
push
push
inc
sbb
dec
stos
lock
cmp
mov
add
in
push
enter
jbe
jae
popa
int
pop
push
push
jne
add
xor
and
imul
negb
or
lods
jo
iret
dec
add
xchg
mov
xor
cmpsl
dec
sub
push
gs
rclb
lods
popf
inc
jo
push
add
dec
mov
and
je
out
cmp
or
data16
add
push
mov
sbb
push
cmc
sub
adc
xlat
push
pop
mov
dec
cs
sahf
or
xchg
mov
adc
inc
mov
sbb
pop
push
or
das
or
int3
inc
inc
mov
gs
inc
jmp
ficoml
pop
es
out
leave
bound
insb
sub
or
test
mov
mov
gs
cltd
or
inc
arpl
insb
and
adc
js
inc
out
inc
jp
bswap
jg
incl
xor
inc
cmp
sub
xor
inc
sub
add
sub
inc
sub
inc
inc
or
xor
xor
daa
inc
inc
sti
call
icebp
push
loop
lods
xor
add
fs
icebp
lods
sub
push
das
sub
add
xor
bound
cmp
call
cmp
cs
cltd
pop
xor
sub
ss
mov
pop
cs
in
mov
add
adc
push
and
pushf
mov
sub
stos
dec
rolb
daa
scas
addb
or
jge
inc
dec
das
mov
pop
mov
dec
or
xchg
popf
movsl
xor
int3
or
clc
pushl
or
or
push
add
sbb
inc
and
jle
mov
mov
mov
jbe
fs
cs
mov
add
pop
and
mov
packuswb
add
pop
push
imul
xor
push
push
pop
jno
test
sub
add
insb
std
out
and
jo
jo
xor
and
sbb
repnz
mov
inc
jl
xchg
mov
jl
and
aad
xchg
lret
fcompl
mov
sub
or
jmp
fiadds
push
lods
ja
repz
push
sub
cmp
jne
mov
push
push
add
sahf
orl
lds
test
lea
ds
pop
jge
cmpsl
push
mov
push
jne
stos
insl
pop
aam
cmp
xchg
lret
gs
pop
dec
xlat
dec
add
push
int
jbe
aam
ficoms
pop
pop
sbb
mov
add
pop
jb
sub
jb
sub
out
imul
cs
lret
in
push
insl
xchg
outsl
xchg
jo
jno
lods
mov
je
add
xchg
fcmovne
insl
sbb
ja
dec
xchg
push
mov
mov
jb
ficoml
sahf
and
cltd
lods
cmp
mov
jb
xor
xor
mov
mov
xchg
mov
cmpsb
xlat
fwait
gs
or
shrb
outsb
ja
roll
inc
ret
mov
adc
lds
gs
add
rcrl
aad
push
fcomps
push
cwtl
pop
ss
xchg
pop
or
and
and
lds
bound
dec
push
cmp
dec
lds
mov
inc
sbb
fisubrl
mov
push
or
xchg
mov
or
or
outsb
adc
data16
xlat
imul
pop
and
mov
popf
sub
add
stos
sbb
sub
add
mov
jne
insl
mov
adc
data16
les
aaa
add
sbb
push
jbe
arpl
push
sub
leave
pop
xchg
pushf
jns
mov
pop
push
inc
mov
xor
aad
cmp
dec
imul
rolb
dec
mov
addr16
mov
add
add
add
add
adc
ret
mov
mov
adc
inc
push
inc
add
lcall
inc
and
imul
lods
push
xor
sub
sbb
adc
sbb
aaa
decl
add
xor
and
adc
add
xor
and
ss
push
push
push
cmp
call
sub
sbb
or
sbb
or
add
add
or
movups
adc
or
add
push
add
pop
sbb
clts
idiv
lcall
adc
sub
push
and
ss
das
sub
es
and
pop
sub
jne
mov
pop
mov
test
fwait
cltd
or
lds
jnp
and
sbb
jnp
fisttps
add
inc
fwait
int
fldcw
add
push
pop
pop
neg
arpl
ja
inc
into
data16
add
cmp
add
fldenv
adc
test
dec
lahf
loope
pop
mov
mov
lcall
or
xor
and
andb
add
fdivl
sub
es
ret
sbbb
int
jnp
sub
dec
pop
leavew
out
add
dec
inc
outsl
into
ficomps
xchg
add
gs
push
dec
mov
fidivs
cld
push
xchg
out
mov
add
ja
aaa
cmp
pop
pop
add
ss
lds
inc
dec
out
mov
das
push
adc
sub
jb
sub
dec
ja
mov
fldlg2
push
sbb
or
cmp
outsl
neg
adcl
pusha
mov
cmpsl
stos
xchg
cltd
push
push
mov
fldcw
lock
wbinvd
add
test
ss
mov
pop
insb
mov
pop
adc
and
in
inc
or
or
xchg
mov
inc
insb
fdivs
inc
popa
ret
inc
ss
xor
mov
or
xchg
out
popf
adc
inc
xor
inc
adc
inc
out
inc
or
inc
or
repz
or
inc
mov
mov
inc
add
pop
outsl
addr16
pop
or
add
sub
ja
outsl
and
cmp
sub
mov
inc
fxch
xchg
in
arpl
add
mov
adc
or
sbb
lea
adc
add
outsl
mov
je
add
adc
add
sub
mov
es
in
mov
dec
sbb
or
leave
mull
cmp
outsl
add
pop
or
dec
dec
testb
sub
lret
lahf
adc
addl
sbb
xor
push
mov
bndldx
pop
add
cltd
fwait
lock
repnz
mov
and
sbb
fsubrp
sub
cmp
mov
lds
mov
sub
and
add
sbb
xchg
push
xchg
dec
or
outsw
jae
pop
stos
outsl
sbb
dec
or
mov
add
add
outsl
sbbb
sbb
adc
jmp
pop
iretw
mov
xor
cwtl
cltd
inc
sub
outsl
fmuls
cwtl
pop
sub
mov
push
cmp
sbb
imul
cmp
fwait
jae
xor
adc
fnstenv
xor
bound
test
sbb
inc
push
and
inc
movsb
pusha
mov
mov
inc
or
or
mov
dec
cmp
data16
insb
mov
mov
outsb
sub
imul
outsb
insb
or
nop
add
in
cmpsl
adcb
jo
inc
or
mov
je
je
imul
jae
addl
imul
inc
xorb
sub
into
sub
or
gs
lods
push
insl
adc
mov
or
add
sysexit
cmp
cld
push
gs
jo
pop
or
lea
adc
data16
pusha
filds
testb
imul
out
inc
hlt
insb
je
inc
dec
push
inc
imul
jae
cld
imul
add
push
ja
mov
outsl
fs
subb
and
mov
pop
jecxz
xorb
sbb
test
adc
and
insb
pop
xchg
outsb
int3
push
das
stos
mov
add
cmp
xchg
xor
xchg
shlb
ret
push
inc
push
or
nop
test
xor
push
shrl
inc
inc
mov
jo
sub
pop
xor
inc
push
or
subb
push
outsb
cli
mov
inc
lahf
adc
cmovns
shll
mov
inc
inc
push
xchg
frstor
aad
or
dec
push
test
mov
dec
inc
out
jmp
add
pop
sub
sub
cmpsl
push
push
jne
jns
test
dec
adc
and
sbb
sub
sub
cmp
sbb
popa
inc
sub
push
adc
inc
js
mov
or
push
push
fs
outsb
dec
mov
sub
cmp
pushw
sub
cs
jne
or
push
jno
insl
ficoms
inc
hlt
push
addr16
insb
inc
and
cli
cmp
ss
rcrl
int
mov
add
or
test
push
add
movl
push
inc
insl
jo
xor
fistl
pusha
push
pop
sub
pop
imul
pop
cs
jmp
xchg
cmp
adc
push
mov
mov
loope
adc
adc
imul
inc
mov
adc
jns
add
cmpb
ss
arpl
imul
add
insb
sbb
or
push
jns
push
fcoml
inc
push
jmp
or
dec
add
add
test
add
add
xor
daa
adc
mov
insb
jmp
nop
addb
shll
add
pop
lret
into
push
rcll
mov
enter
push
daa
enter
popa
cmpb
mov
fisttpll
add
mov
mov
sti
adcb
sbb
push
cmp
add
adc
and
testl
mov
dec
clc
mulb
daa
rclb
add
add
add
add
incl
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
