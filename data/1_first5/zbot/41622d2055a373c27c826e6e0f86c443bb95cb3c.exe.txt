add
add
mov
jne
movsl
andl
test
pusha
mov
js
outsl
scas
add
xchg
andl
ss
js
dec
mov
jne
sub
pusha
outsb
xor
add
adc
fs
or
inc
add
fwait
jne
hlt
lea
xlat
out
add
adc
out
andb
fwait
inc
imul
pushf
js
xlat
out
add
nop
mov
rorb
outsb
mov
out
add
fucomi
inc
add
in
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
mov
inc
andb
mov
inc
pushf
add
and
arpl
popf
js
add
pop
scas
add
cld
mov
repnz
mov
insl
insb
xlat
out
add
add
repz
ljmp
add
lcall
ret
arpl
test
mov
subb
out
add
test
lea
addl
add
mov
dec
mov
add
cwtl
jae
inc
nop
insl
push
and
addl
sete
push
fwait
insl
outsl
hlt
out
add
cld
xchg
jae
cli
lcall
xlat
out
add
adc
gs
dec
gs
add
xlat
out
inc
add
push
pop
nop
xlat
sbb
add
sbb
add
or
add
mov
add
xlat
xlat
add
add
add
pop
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
xchg
add
mov
mov
pop
and
das
out
jbe
daa
or
add
ss
add
insb
outsb
mov
dec
push
mov
imul
or
xlat
out
call
add
add
out
mov
add
out
mov
inc
mov
call
add
out
repz
shr
xlat
out
call
add
out
push
in
xlat
out
call
adc
out
call
adc
out
call
add
out
call
add
out
call
jae
out
call
iret
out
ljmp
add
out
call
add
out
call
jmp
aam
add
aam
add
aam
add
movsl
in
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
sub
out
add
aam
add
aam
add
jle
add
outsb
out
add
outsb
out
add
ds
add
and
add
mov
add
filds
add
add
add
cs
add
out
add
out
add
into
repnz
test
mov
out
add
out
fiadds
add
lock
mov
out
add
scas
out
add
scas
out
add
repnz
stos
pusha
je
repnz
out
add
jle
add
jle
add
outsb
hlt
add
xlat
pop
add
xlat
pop
add
xlat
pop
add
xlat
push
add
xchg
sbb
add
pop
add
xlat
pop
add
xlat
pop
add
xlat
dec
in
mov
out
je
add
adc
divb
insl
add
out
mov
ret
push
mov
scas
sub
xchg
pop
cli
jb
push
testb
mov
pop
and
push
or
jmp
dec
xlat
add
lcall
cmpb
xlat
out
jae
iret
jne
imul
addl
aas
jno
add
or
add
push
nop
jge
scas
call
notl
mov
add
out
call
add
out
arpl
jne
mov
or
lock
test
lret
jne
cld
push
sub
add
je
adcb
call
negb
out
call
add
out
add
add
testl
aam
or
orb
push
jecxz
mov
popa
or
cmpsl
testb
dec
cmp
movl
push
cmc
mov
add
mov
pop
ret
ret
loope
inc
add
aam
enter
push
ljmp
int
xlat
adc
fildl
jae
pop
or
cmp
pop
je
add
mov
repz
ret
in
jae
loope
fmull
mov
add
pushf
or
mov
cmp
cwtl
push
mov
add
in
sub
imull
xor
push
push
jl
ret
fldcw
or
xchg
pop
sbbl
rcrl
or
add
add
adc
mov
ljmp
gs
or
add
ja
repz
push
jmp
ficoml
xlat
loop
incl
adc
rorb
ja
xlat
cli
cld
sub
pop
mov
sbb
sub
or
pop
pop
add
xlat
gs
ret
dec
mov
xchg
mov
push
add
rorl
inc
add
push
ret
sub
push
popa
add
popa
add
pop
add
push
inc
add
inc
push
mov
add
in
push
outsl
pop
adc
xlat
mov
push
shr
lock
xchg
mov
xlat
stc
test
flds
lahf
add
fldcw
repnz
pop
mov
addr16
push
aad
add
js
push
repz
jnp
repz
push
cmp
out
call
add
xor
add
loopne
add
sub
and
jne
clc
push
cmc
repnz
sub
xlat
fwait
jae
outsl
dec
cli
inc
xlat
push
pop
add
insl
out
js
push
outsl
lock
mov
inc
adc
sti
adc
stc
sbb
add
das
decb
stos
sub
jge
out
add
sub
hlt
addb
pop
gs
loope
loopne
aam
add
inc
gs
ds
out
sub
bound
xchg
add
xchg
out
stc
fldt
incb
cld
pop
incb
and
cltd
mov
mov
je
cmp
jns
pusha
repnz
push
add
jecxz
cmc
add
std
mov
out
add
adc
jmp
in
subl
jne
mov
push
dec
add
ret
push
std
std
mov
jnp
mov
in
sub
cmpsl
sub
add
sub
mov
mov
push
decl
std
std
mov
cmpl
jnp
jns
and
sub
add
inc
ret
or
fwait
mov
jge
std
decl
lods
push
adc
xlat
scas
lock
popl
push
in
add
inc
enter
xchg
dec
les
xlat
ret
pop
mov
ja
mov
lcall
add
loopne
jns
or
or
add
pop
add
jl
pop
add
loop
fsts
add
icebp
leave
adc
les
jne
pop
add
stos
pop
pop
jmp
sbb
or
test
addl
adc
xchg
aaa
stos
add
jne
lock
add
jnp
lods
out
call
add
fwait
arpl
push
sub
out
mov
cmp
mov
pop
xlat
xchg
jmp
xlat
out
call
add
add
sbb
add
fs
jmp
pop
jns
push
sbb
pusha
add
dec
pop
out
call
sti
pop
fsubl
aas
sahf
rolb
xchg
out
sub
mov
add
in
stos
add
jl
jb
jno
add
cmp
jnp
roll
inc
jne
std
inc
cmp
pop
clc
xchg
aam
mov
add
or
cltd
mov
das
repz
pusha
sysret
sub
out
add
aam
jae
pushf
cs
outsb
imul
push
out
fdivl
je
imul
fdivs
mov
lahf
push
add
aam
lods
xor
add
aam
push
add
test
lea
adc
push
adc
add
ja
call
xchg
sub
in
push
addb
je
xchg
sar
ljmp
ret
or
testb
and
cld
pop
adc
ret
push
mov
jl
outsb
ja
cmpl
je
adc
js
incl
adc
leave
cld
out
add
push
jne
adc
add
ds
dec
insl
jl
xlat
adc
incl
ja
add
in
lcall
push
incl
or
je
xor
mov
and
sub
dec
ja
mov
aas
rorb
mov
adc
jne
jl
or
in
js
cld
ljmp
add
add
pushf
ja
outsl
xchg
in
lcall
rorb
jns
dec
inc
cli
out
in
jmp
out
rolb
std
xchg
sti
cmp
call
pop
or
pop
aad
lods
decl
shl
call
fidivrs
jmp
out
and
std
dec
sahf
xor
add
push
xchg
push
loop
test
rolb
add
addr16
sti
out
xchg
std
hlt
sti
js
jno
js
hlt
out
xor
mov
pop
jmp
and
ret
cli
dec
jmp
mov
mov
dec
or
push
add
movsb
inc
out
add
aam
inc
sbb
cld
mov
roll
adc
imul
inc
icebp
std
cmp
fbld
add
loope
jne
add
in
cmp
xor
jmp
jo
add
cmp
pop
or
stos
adc
mov
cmpsl
in
leave
xchg
movsb
lahf
cld
mov
jg
cld
stos
js
push
bound
mov
jmp
pop
sti
push
dec
out
add
das
jns
add
call
cmpsl
scas
stc
addl
jb
jne
clc
add
cli
or
push
roll
out
cld
mov
clc
dec
lcall
icebp
aaa
not
ja
cmc
ljmp
pop
jmp
jmp
push
je
xchg
mov
ror
out
add
mov
out
add
cltd
std
decl
add
add
jle
mov
mov
sar
xlat
movsb
call
je
add
add
cmp
push
add
xlat
mov
sub
loopne
sub
mov
jge
push
shr
lea
std
add
sbb
fcomp
sbb
mov
xor
rcl
pop
std
mov
lret
inc
outsl
clc
pop
xor
or
pop
jmp
rcl
pop
jmp
cli
mov
ret
iret
pop
dec
mov
mov
lea
out
fs
pusha
test
fistpl
call
jnp
out
call
fistl
ss
mov
out
call
xchg
out
call
outsb
or
sub
xlat
out
imul
out
cmp
cs
call
out
add
xchg
mov
repnz
add
xlat
fsubrp
push
mov
addr16
jno
stc
sbb
nop
addl
outsb
out
call
pusha
push
idiv
hlt
jo
fs
out
aam
adc
loope
scas
sub
sbb
std
ss
fldcw
cmpsb
add
pushf
sbb
mov
xor
cmp
xchg
jl
adc
std
icebp
clc
and
add
clc
sub
fsubr
add
stc
sub
loope
std
jmp
mov
sub
mov
repz
or
icebp
mov
sbb
enter
push
add
out
addl
mov
in
enter
push
mov
hlt
mov
or
add
cld
test
add
add
mov
ret
push
mov
test
cli
mov
or
pop
leave
mov
push
push
push
xchg
cld
xor
jne
or
in
repnz
lds
add
mov
leave
jl
std
push
and
test
push
xlat
in
add
xlat
add
xchg
js
js
cmp
test
xlat
add
ret
loop
mov
nop
push
jns
rol
ds
xlat
fdivrl
cmp
in
lcall
loopne
dec
pop
adc
mov
sub
inc
clc
jl
cmp
add
leave
loope
outsl
aad
mov
add
xor
les
mov
jp
stos
xchg
inc
add
sub
add
add
cmp
adc
out
xlat
out
jae
out
sub
sbb
out
adc
fisubrs
pop
out
mov
loopne
lods
out
fistl
jl
hlt
imulb
out
in
sub
in
fneni(8087
jns
cmc
jmp
sub
xor
mov
sub
repz
add
in
jp
out
inc
inc
jl
stos
adc
add
fwait
arpl
push
sub
pushf
arpl
cmp
push
mov
test
aam
sbb
push
cs
je
xchg
cmc
jae
addl
cmc
cmc
addr16
pop
je
cmc
push
mov
stos
stc
dec
sahf
cli
std
mov
inc
pushl
xor
jae
xor
in
cld
mov
aam
xchg
shlb
pop
cmc
hlt
std
cltd
cld
dec
push
cmc
hlt
jae
cmc
jp
je
add
fidivs
hlt
std
into
pop
out
add
adc
incl
imul
loop
xchg
je
decb
xchg
adc
xchg
stc
jmp
jmp
and
adc
xor
je
push
outsl
idiv
mov
ret
sub
add
add
sbb
jnp
or
push
movb
lock
add
jmp
add
out
add
adcl
je
push
add
out
ljmp
ljmp
xlat
mov
add
lcall
mov
mov
lea
ds
hlt
daa
loopne
incl
mul
jne
insl
pushf
iret
add
xlat
add
test
add
add
add
cmp
inc
cmpsl
lods
inc
std
cmp
push
subb
push
les
sbb
call
fadd
pop
or
jmp
cld
add
je
add
clc
dec
out
call
push
out
call
push
fldt
cld
add
jge
mov
xlat
sub
jl
loopne
fbld
or
rclb
sbb
or
out
call
push
or
test
insl
xlat
icebp
fdiv
inc
jl
loopne
loop
push
filds
xor
sub
and
out
add
dec
pop
cmp
dec
call
add
sbb
gs
add
in
fptan
add
or
pop
dec
fildl
fwait
jnp
stos
push
in
ds
stos
or
andl
pop
mov
sbb
das
jmp
jmp
add
imul
out
xor
sub
push
bound
sub
out
je
sbb
add
loop
aam
sub
movb
jnp
inc
add
shlb
jmp
loopne
xor
shr
add
xchg
popf
jmp
add
jne
mov
add
arpl
push
call
inc
sub
add
add
sbb
add
sub
les
sub
out
inc
jp
sub
adc
add
fcos
arpl
jmp
add
add
push
call
lds
jne
mov
add
jae
push
call
jmp
adc
incl
jecxz
push
xlat
mov
adcl
aaa
push
mov
dec
cld
push
inc
outsl
sub
push
add
sbb
decb
imul
push
fnsave
fwait
add
inc
xlat
add
cmovno
add
jg
fdivr
mov
cld
xlat
add
sub
pop
cs
jl
or
ds
add
in
imul
inc
or
pop
sub
mov
fdivr
fadd
pop
add
iret
test
add
out
out
andb
inc
add
mov
add
sub
outsb
mov
in
add
out
ljmp
add
out
inc
add
repnz
add
out
push
test
out
ljmp
out
ljmp
cli
aaa
in
jns
jmp
aas
lock
out
adc
or
scas
testl
fisubs
and
shr
dec
push
cmp
xlat
out
arpl
in
incl
jmp
add
add
cmpsb
add
aam
lret
out
push
jb
jno
std
outsl
out
addr16
lahf
mov
jbe
or
ljmp
jmp
sbb
jmp
loop
arpl
cmpsb
es
sbb
flds
bound
jmp
stos
xlat
out
push
jb
inc
mov
pop
adc
inc
jb
data16
add
aam
add
add
aam
add
aam
add
mov
sbb
add
and
outsb
lret
out
lock
pop
add
pop
add
pop
add
sbb
lock
dec
sbb
push
pop
add
and
dec
jne
add
jmp
std
jae
fdiv
lret
cld
xor
enter
add
popa
leave
std
jmp
add
mov
cld
jmp
enter
xor
pop
leave
in
testl
push
pop
fwait
or
and
add
adc
add
add
jmp
pop
push
sbb
incl
mul
fmuls
sub
aad
adc
push
jmp
movl
add
cmp
inc
xlat
aad
add
pop
adc
add
jmp
xor
outsl
icebp
fdivr
jo
std
imul
gs
push
add
arpl
push
jno
jmp
dec
fimuls
xor
scas
pop
adc
push
jmp
jno
out
ljmp
out
ljmp
in
ljmp
add
mov
fsubr
ljmp
xlat
push
jmp
xlat
push
jmp
push
out
fdivs
fcmovb
fadds
ljmp
or
ret
ss
out
ljmp
out
ljmp
pop
roll
cld
xlat
pop
ljmp
aam
add
jl
pop
das
ljmp
pminsw
sub
jb
jmp
add
aam
mov
std
cs
je
push
pop
ljmp
shld
add
push
aam
adcl
fsubrl
add
push
out
out
cmp
std
xchg
mov
jmp
std
rcll
ljmp
push
inc
jmp
sub
add
addb
incl
add
cmc
shll
call
and
push
mov
rcll
mov
xchg
cltd
sar
mov
shr
loop
std
pop
leave
jg
out
fld
push
jmp
aam
hlt
leave
shr
mov
jmp
jne
cld
mov
std
push
xchg
icebp
lret
sub
lea
shr
pop
sbb
mov
sar
incl
add
aam
negl
std
mov
jne
ljmp
fdiv
pusha
jno
test
aam
ds
decl
push
cld
das
add
add
mov
in
sub
xor
and
imul
arpl
out
adc
jmp
lea
jecxz
clc
movsl
aam
out
sar
jmp
into
add
pop
sarl
lock
call
add
dec
pop
out
out
mov
mov
mov
je
sub
mov
mov
jg
into
add
out
out
ret
add
xchg
xchg
aad
fisubs
stc
push
sub
xchg
jl
cmp
je
aas
push
mov
loopne
out
xor
mov
inc
push
push
out
ljmp
fiaddl
sub
jg
add
sbb
lock
add
call
push
stos
add
pushf
pmulhw
out
and
pop
add
test
fisttpl
xlat
loope
aam
lret
add
mov
out
add
mov
pop
xchg
std
xchg
jle
inc
pop
mov
scas
imul
push
or
std
jb
add
sub
in
icebp
push
xor
jo
mov
test
mov
in
cmp
mov
sub
jmp
mov
add
in
in
stos
pop
or
movsb
in
sub
flds
jmp
push
inc
add
mov
or
mov
icebp
call
incl
add
ret
cmpl
inc
call
mov
cli
pop
ja
or
jns
aas
sub
jmp
sub
call
mov
add
out
lock
daa
mov
sub
push
call
gs
jne
enter
lock
inc
or
jne
mov
ja
jl
add
movsb
push
push
sub
cld
mov
rcl
pop
pop
std
aad
call
int3
xchg
push
add
aam
or
mov
aad
clc
aam
add
fcom
jl
mov
mov
pop
vsubps
add
cmpsl
sub
jle
repz
or
or
push
fxtract
add
loop
iret
decl
shlb
fcoml
scas
dec
or
xlat
out
jecxz
mov
jnp
test
mov
pop
adc
movsl
add
imull
pop
fistl
mov
xlat
out
inc
and
cmp
test
testb
int3
scas
fimuls
nop
inc
mov
jl
idivb
jge
push
add
jecxz
sub
dec
jecxz
roll
jle
mov
imul
add
imull
push
rolb
xor
jmp
call
jmp
insb
lods
or
jmp
testl
add
pop
or
out
add
cmp
mov
pop
sbb
add
mov
aam
add
add
shll
imul
lods
lret
sub
out
push
bound
cmp
sub
in
aam
add
inc
iret
push
inc
dec
jnp,pn
mov
pop
or
bnd
and
jecxz
cmc
lds
rclb
jne
rcrl
lret
ret
push
push
inc
testb
jle
xor
cs
fcoms
add
pop
pop
or
sub
inc
add
std
lods
cmp
lods
sub
ret
call
xchg
inc
mov
xchg
jl
icebp
cmp
cmp
pop
jle
lret
jg
add
std
pushf
inc
cmp
pop
jle
or
xchg
jg
add
scas
sub
mov
xlat
or
mov
nop
pop
sbb
cmp
add
stos
test
mov
pop
or
push
adc
inc
or
add
ss
jg
int
addb
stc
int
sarl
inc
jne
jno
inc
push
movl
jmp
jno
mov
aad
mov
vmovaps
push
in
sbb
inc
sbb
add
ret
inc
xlat
sub
clc
mov
add
push
enter
sbb
push
call
sti
rcrl
fninit
test
add
scas
jle
adc
jbe
mov
repz
add
jno
rcll
ljmp
xlat
out
ffreep
loopne
push
add
out
fldl
out
ljmp
push
jmp
push
fstpt
inc
orl
add
sub
push
inc
and
push
stc
pop
pop
out
pop
push
push
stos
add
cmp
add
add
and
ja
movsb
es
adc
jmp
pop
pop
loop
push
lcall
pusha
push
lret
cld
out
mov
dec
add
dec
add
out
add
fsubrp
int
out
add
xlat
inc
xor
fwait
fs
sahf
add
or
ljmp
fidivs
sub
shr
jmp
mov
and
std
push
fnstenv
out
push
or
ljmp
scas
pop
leave
lods
push
jne
add
stos
std
ljmp
inc
or
stc
inc
add
add
sub
jmp
or
fiaddl
sub
test
push
out
add
jle
out
jle
or
jno
mov
add
icebp
add
stc
test
add
inc
cld
sahf
mov
popl
fidivrs
or
sub
gs
mov
inc
ss
or
sar
clc
das
stc
push
jp
clc
adc
incl
add
incl
add
xor
dec
add
kmovw
enter
into
andl
add
inc
hlt
daa
lods
push
cld
jg
ret
push
sarl
push
hlt
jg
les
xlat
loopne
je
adc
pop
repnz
insl
jl
scas
je
clc
movsb
cmc
popa
adc
xor
lret
fs
movsl
pop
lret
or
mov
lret
sub
push
mov
add
pop
repz
inc
add
pop
xor
jnp
xor
xlat
popa
imulb
or
or
bound
sub
pop
fists
icebp
dec
mov
adc
add
pusha
inc
ds
js
test
add
adc
scas
fcmovne
dec
lret
or
jmp
ror
frstor
addl
ret
push
jl
ret
repz
or
call
xor
repnz
addl
bound
push
lret
sub
aam
jne
pop
sbb
iret
xchg
out
add
lods
or
jecxz
lds
imul
fnstenv
add
cld
hlt
jnp
inc
jmp
stos
popa
shr
shrb
mov
cmp
aam
or
arpl
out
aam
add
repz
inc
in
mov
aad
inc
jle
add
cs
add
in
add
out
adc
out
adc
cld
jne
cmpsb
pop
out
or
add
xor
add
cld
jne
mov
shrl
inc
xchg
rorb
or
call
mov
mov
push
cltd
aas
or
xchg
ret
add
lret
ret
push
mov
cld
popf
insl
jg
xlat
push
pop
cld
xchg
leave
adc
std
add
push
in
ljmp
fld
push
movl
mov
ds
lock
stc
mov
add
arpl
js
insl
pop
add
add
jne
imul
xlat
std
outsb
rcl
clc
mov
into
aad
in
lods
js
cld
sahf
ret
add
sbb
push
xchg
aad
and
das
push
and
or
dec
addl
lcall
stos
pop
cmpsl
stos
fcmovnbe
gs
add
mov
adcl
sub
jo
add
movsl
call
jmp
xlat
add
add
fsubs
jns
fisubs
adc
out
sub
adc
xchg
out
cmpsl
lea
cmp
out
jle
mov
fistps
add
out
outsl
inc
out
mov
sub
test
fcoms
mov
aas
push
sbb
pop
fs
iret
xor
pusha
or
mov
mov
out
push
das
fs
mov
push
imul
sub
in
shlb
sti
or
sbb
insb
call
sub
add
xlat
mov
and
out
pop
lret
leave
fdiv
dec
icebp
xchg
mov
ljmp
sti
sbb
add
xor
test
std
add
aaa
push
sti
xor
xchg
loope
jns
insl
adc
sarl
ret
mov
xor
or
inc
adc
add
faddp
ret
rorl
je
clc
lea
adc
jb
dec
divb
mov
in
test
pushf
shl
xchg
inc
repz
pop
sbb
add
scas
adc
pop
push
sti
xor
push
stc
xor
pop
xchg
dec
subb
and
outsb
jmp
xor
xlat
call
lcall
std
jmp
rorb
cli
mov
cmc
cli
bound
mov
jl
add
enter
cwtl
mov
lea
adc
pop
add
push
aam
stc
add
les
cli
les
xchg
test
jmp
dec
xor
pop
or
adc
mov
xor
dec
lcall
jae
rclb
hlt
cli
hlt
fcomip
cli
dec
out
jbe
popa
xor
aam
adc
xchg
out
dec
fprem
mov
pop
jae
in
lcall
jmp
and
nop
add
push
in
or
rcr
call
or
scas
pusha
mov
xlat
outsb
xchg
loopne
cwtl
inc
pop
lock
push
mov
push
pop
push
xor
call
cmp
jmp
xchg
in
int
fcomp
mov
bound
insl
nop
pushf
add
fxtract
ret
out
fidivl
pop
stc
or
sti
fs
jmp
stc
xchg
iret
lods
ret
scas
mov
fmuls
and
adc
addr16
mov
insb
popa
mov
push
int3
mov
sub
add
pop
fdivs
push
cli
fidivl
push
dec
jb
xor
mov
ret
out
fisubl
pop
stc
lret
sti
insb
pop
ljmp
mov
ret
jmp
mov
add
fcomi
and
clc
roll
icebp
stos
add
lods
rorb
mov
and
insl
xchg
mov
pmullw
jmp
or
lods
or
test
xor
cmc
xor
pop
mov
push
and
jge
add
mov
xor
or
imul
shl
rorb
lea
add
xchg
add
lods
rorb
mov
mov
lea
fadds
cmp
dec
ret
push
rorb
or
loope
int
pushf
loopne
push
sub
pop
xor
pop
mov
lea
inc
cmp
add
xchg
add
test
mull
adc
add
add
rorl
or
cmpsb
mov
rclb
add
pop
sub
xchg
pushf
mov
out
out
xrstor
pop
aam
pusha
mov
bound
inc
mov
jmp
shr
daa
mov
ja
mov
sti
les
xlat
clc
mov
enter
add
dec
in
xor
push
scas
sti
add
sbb
nop
push
lock
jg
xchg
call
push
aam
pusha
mov
pop
imul
xorl
ret
fucomi
daa
mov
sbb
call
aam
mov
adc
xchg
jecxz
cmp
xor
pop
loope
xor
sub
in
fwait
lods
adc
mov
mov
add
aaa
out
push
cld
dec
ljmp
xlat
mov
shlb
ret
add
ljmp
shlb
sti
fidivrl
idivb
adc
xor
aad
jne
jle
loop
dec
adc
push
arpl
add
xchg
xor
jae
sbb
add
ret
out
fidivrl
add
loope
std
lcall
mov
sub
hlt
add
rorl
or
clc
cli
loop
call
das
add
mov
or
mov
xor
jge
setns
xchg
stos
sub
sti
add
xchg
mov
jmp
mov
cmp
or
xlat
fcomp
mov
movsb
xor
sti
movsb
mov
flds
xchg
pop
pop
add
icebp
clc
icebp
cli
pop
sub
xchg
xchg
fisttpl
ret
sarl
rorb
mov
cmp
sub
inc
mov
neg
mov
stc
push
dec
sbb
lcall
add
add
fcomp
mov
in
or
test
out
mov
das
pop
call
add
mov
mov
inc
neg
jp
adc
and
les
int3
adc
mov
adc
lods
add
mov
inc
vpcomuq
mov
cmp
imulb
outsl
sbb
add
fdivp
dec
aam
test
nop
int3
lods
mov
cmp
mov
cmp
stos
add
scas
cmp
sbb
add
or
leave
jge
add
and
push
add
add
std
inc
sbb
enter
jp
jb
mov
ret
out
push
insl
lret
std
push
mov
add
pop
shrl
out
pop
lds
ja
icebp
aad
add
xlat
in
dec
loope
and
sbb
aaa
adc
mov
xchg
lret
std
adc
shr
and
test
lds
xrelease
add
out
cld
jne
jne
clc
xor
dec
gs
out
add
xor
lds
ja
iret
out
mov
push
add
das
out
sti
faddl
add
pusha
cmp
adc
leave
pop
gs
icebp
loope
mov
sbb
or
add
push
inc
jle
ljmp
xchg
cmp
add
std
adc
inc
popf
movsb
mov
jae
inc
mov
or
xrelease
shr
inc
add
lcall
mov
cmpl
scas
aaa
add
mov
xorb
inc
xlat
xlat
inc
js
das
mov
xlat
xlat
jle
loopne
mov
xorb
xlat
xlat
inc
js
cmp
or
mov
xlat
divl
xor
gs
fmuls
add
add
xlat
jbe
gs
fmuls
add
gs
fadds
enter
je
and
add
dec
adc
sub
sti
inc
and
das
jmp
lret
inc
xlat
stc
mov
sbb
out
popa
adc
stos
add
pop
xor
push
mov
xchg
out
enter
sub
ret
popf
mov
and
mov
push
stos
add
insb
cmp
jmp
clc
xor
push
out
popa
adc
add
sub
aam
push
push
sub
jecxz
jg
sub
mov
enter
lcall
in
xchg
fs
sub
push
or
out
mov
or
fwait
out
cld
sbb
push
inc
jmp
out
addr16
ja
xor
std
mov
jb
add
ror
jb
push
adc
dec
andb
jmp
add
gs
cs
xor
jo
lret
leave
jae
bound
lods
shl
cmpsb
inc
add
cmp
xor
xchg
ret
mov
sub
add
mov
mov
sbb
inc
push
jae
cld
aas
mov
jo
icebp
shrl
aas
sbb
mov
jne
mov
cmc
inc
cld
fnsave
add
pop
fs
scas
out
inc
clc
mov
jl
cld
add
cli
mov
ret
mov
cld
mov
stos
inc
jne
dec
out
call
push
into
xor
mov
rcl
test
jg
aad
cmp
inc
mov
cld
add
push
xchg
pop
mov
push
mov
adc
add
xchg
mov
sbb
xlat
in
push
jb
add
mov
sbb
xlat
push
cmp
lret
xchg
xlat
mov
cld
pop
xor
mov
mov
dec
add
push
fbstp
or
rol
sar
mov
adc
adc
add
stos
cmp
xchg
mov
add
rorb
out
outsl
add
mov
add
mov
in
sbb
in
xchg
add
cmp
jg
pop
fildl
dec
int3
insb
mov
lods
scas
mov
out
outsl
inc
insb
sub
pop
xchg
ljmp
in
xor
out
mov
push
inc
repz
jmp
jmp
iret
jg
add
cwtl
les
nop
cmp
sahf
jecxz
add
mov
mov
lahf
notb
test
mov
aam
mov
lret
out
jbe
mov
and
adc
add
repnz
add
ret
ja
popf
ret
ja
dec
jg
jmp
enter
mov
add
add
out
jbe
cmp
add
aam
add
ja
and
mov
gs
std
add
les
mov
cli
imul
test
out
add
sti
imul
sbb
jne
outsb
add
imul
mov
fsubp
add
mov
xchg
std
je
add
sarl
repz
add
out
lret
out
push
mov
mov
ja
es
std
decl
les
call
in
leave
jg
or
pop
xor
add
jl
mov
jne
out
add
xlat
xlat
test
icebp
out
inc
ret
cmovne
ljmp
mov
sbb
inc
incl
add
out
ljmp
popa
mov
lcall
fisttpl
jle
adc
loop
in
push
mov
clc
lock
push
sub
dec
ljmp
cltd
sbb
xor
push
add
scas
int
mov
out
addps
sti
add
out
ljmp
rcll
pop
sub
sbb
add
xlat
in
scas
pop
ret
jo
xchg
add
imul
aam
shl
cwtl
jne
add
add
jae
add
shll
fidivs
fstl
out
std
add
push
jnp
and
mov
lods
mov
push
sbb
sbb
sbb
enter
ret
out
add
aam
mov
add
push
xchg
fdivs
adc
inc
sbb
in
jle
pop
jge
insl
jg
aam
lret
sbb
insb
ret
mov
in
sbb
sbb
out
jmp
jo
ret
pop
pop
ljmp
push
sbb
or
out
cld
cld
inc
shlb
imul
add
cmp
out
pop
incl
jmp
insb
jb
add
xchg
aas
add
add
bound
add
arpl
rcll
jne
arpl
push
mov
push
jecxz
and
cld
jne
xchg
ja
sbbl
add
jmp
hlt
in
add
or
sbb
stos
jbe
movsl
xchg
push
add
add
inc
add
std
xchg
push
inc
test
add
mov
add
lds
push
push
xlat
sub
js
iret
xchg
movl
int3
fldl
or
cld
mov
js
mov
call
fldl
mov
movl
fildll
and
add
push
cld
icebp
xor
xlat
fcmovb
sbb
popf
addr16
jge
mov
sarl
cmp
push
call
js
inc
jmp
or
incl
cmp
add
xchg
inc
clc
xlat
out
ljmp
inc
pop
lods
dec
out
movsb
lret
lods
dec
ret
push
xchg
inc
jmp
aaa
enter
dec
loopne
add
jecxz
xchg
mov
and
push
pop
and
ja
mov
rep
loop
ret
jg
mov
and
dec
lret
addr16
jmp
and
xchg
jge
mov
ljmp
xor
cmp
aam
outsb
dec
sub
mov
sti
add
add
aam
sarl
mov
sub
xor
cs
add
push
mov
cld
pushf
cmp
cmp
mov
push
lret
movsb
xchg
pop
push
aam
addl
aam
rcrl
jg
aam
pop
sarb
add
adc
out
add
push
cmpsb
out
push
aam
andl
add
add
out
mov
stos
add
out
mov
lods
add
imul
mov
in
mov
stos
icebp
cs
out
add
orl
sbb
add
icebp
repnz
scas
push
push
flds
incl
push
ljmp
or
sti
lahf
add
pop
incl
xchg
jne
fimull
sub
repnz
jne
pop
enter
cs
add
mov
inc
inc
and
jns
call
xlat
rol
jne
jo
mov
pop
daa
mov
lds
bound
stos
jne
sbb
mov
enter
dec
les
cld
mov
jg
test
imul
cwtl
arpl
ret
decl
out
js
movsl
call
add
shl
stos
lcall
pop
mov
xchg
sbbl
jle
fcmovne
shll
add
movl
add
je
and
cmp
ffreep
add
add
adc
jnp
jecxz
cmpsl
jmp
insl
test
push
fs
cmp
xchg
out
dec
dec
lret
mov
out
ljmp
add
inc
out
jbe
mov
ljmp
mov
cmp
xlat
cmpsl
sub
push
mov
dec
add
es
xlat
out
ljmp
out
ljmp
xor
test
aam
mov
addl
aam
jmp
jo
jp
cld
xor
jmp
add
and
lds
mov
sub
dec
push
ja
lods
test
add
imul
std
je
mov
xchg
aam
add
out
cld
xchg
jl
mov
shr
or
cmpsl
lock
in
mov
inc
cltd
jns
add
iret
xor
add
ss
into
pop
xchg
mov
in
or
add
mov
jmp
mov
ss
xchg
iret
std
mov
inc
les
in
add
jno
mov
inc
push
xchg
or
hlt
adc
std
incl
push
xchg
jmp
add
mov
add
push
add
ljmp
jne
nop
ja
push
jmp
inc
outsb
xchg
ja
add
es
add
cwtl
outsb
inc
sbb
pop
add
add
call
int3
test
inc
dec
pop
sub
incl
push
jne
xlat
aad
jne
inc
sub
fdivrs
icebp
orb
je
and
adc
cmp
inc
scas
std
cmpsb
or
inc
into
or
adc
decl
mov
or
jo
jp
push
testl
movsb
dec
mov
push
cmp
fwait
movsb
sub
pop
xlat
cmp
movsb
mov
mov
js
sbb
adc
ret
push
enter
add
push
cmp
pop
push
enter
add
lret
jle
add
ret
repz
out
fwait
push
pushf
xor
dec
sub
movsb
and
ljmp
fisttps
jg,pn
add
ffreep
call
bound
lods
jmp
jl
fcmovbe
je
shll
mov
jmp
pop
ds
mov
arpl
cmp
out
add
aam
popa
pop
fucomi
lret
add
out
cmc
aad
jg
aam
sbb
fadds
mov
fadd
mov
fnsave
or
xchg
std
ds
push
out
popf
nop
jno
in
aam
adc
cld
xchg
int3
lods
add
cld
jne
mov
fldt
lret
ret
push
mov
insl
lock
or
incl
add
fiadds
je
ja
push
movsl
loopne
cmp
shll
lock
push
lcall
shll
cld
out
out
adc
cld
jne
xchg
ja
es
ljmp
in
jne
nop
ja
sbb
std
jmp
std
jne
xchg
jmp
jmp
call
push
or
lcall
add
inc
lods
sbbl
mov
push
int3
mov
dec
sbb
inc
xchg
test
or
stc
mov
xchg
test
or
addb
push
adc
mov
bound
mov
or
xor
lock
and
jecxz
sbb
fnsave
xor
add
mov
lret
in
mov
stos
pop
int
mov
cli
out
pop
sbb
or
movsl
arpl
or
or
inc
out
pop
cmc
outsl
dec
mov
movsb
fidivrs
pushf
das
repnz
sub
cmp
mov
mov
or
mov
add
add
out
adc
push
leave
mov
enter
mov
xlat
gs
paddusb
add
shr
mov
out
add
loope
jmp
loop
cmp
jmp
jbe
std
imulb
imul
jnp
std
pusha
dec
jbe
into
push
inc
cmp
aam
mov
std
mov
movsl
lea
add
insb
adc
mov
push
pop
mov
xorl
mov
out
aam
jmp
imul
test
out
add
and
cs
scas
test
shrb
int3
outsb
in
add
loope
inc
sub
add
sub
in
jmp
or
aad
jmp
add
popa
in
add
and
or
pushl
adc
inc
cs
ja
push
ss
inc
test
push
push
ja
data16
popa
pop
xchg
ret
std
int3
mov
popa
sti
cld
jne
push
ja
xor
adc
xlat
or
xlat
adc
fldt
sub
push
xor
adc
push
add
add
in
sbb
js
push
jo
test
cmp
add
xchg
cmp
sbb
push
cmp
incl
pop
cmp
lahf
incl
stc
adc
mov
int
push
out
pop
adc
mov
test
call
push
dec
sar
aaa
decl
out
push
mov
add
xchg
insl
xchg
mov
dec
popf
bound
popf
mov
out
xor
lods
sub
jg
aas
popf
cmpb
mov
out
or
ret
lods
jle
popa
and
pushf
loop
add
push
scas
in
lret
ljmp
xchg
xor
mov
rcll
adc
pushf
addb
popf
mov
xchg
pop
clc
lods
xchg
stos
add
std
enter
mov
add
add
jbe
cld
hlt
fcomps
sbb
imul
mov
leave
add
aam
lods
ja
out
sar
mov
xchg
movsb
ss
std
mov
lods
ja
arpl
push
xchg
js
ja
cmp
std
push
dec
mov
inc
mov
or
adc
push
out
jl
loope
and
xchg
stos
lds
add
add
aam
aas
push
sub
add
loopne
subl
xor
cmp
out
orb
jno
xrelease
inc
hlt
addr16
repnz
jecxz
adc
lds
testb
fwait
mov
jge
lock
je
cmp
jnp
or
test
jne
ja
incl
add
jnp
aaa
add
out
pop
divl
xorl
push
icebp
fimull
bnd
mov
inc
cld
out
add
cmc
scas
jbe
out
sub
out
in
inc
xlat
xor
add
push
or
pop
test
add
add
nop
shll
lea
dec
xor
bnd
add
cmp
add
int
push
add
xchg
cmp
iret
ret
mov
sbb
xchg
push
in
push
rcll
inc
xlat
xchg
or
cs
xchg
add
aad
jmp
pushf
pop
add
xchg
add
adc
cmp
xchg
xchg
add
xchg
xchg
add
xchg
out
out
adc
out
sbb
out
pop
xor
add
out
adc
add
iret
call
cs
cmpsb
popf
pop
stos
push
xchg
and
lret
cmpsb
xchg
xlat
out
ljmp
and
xlat
test
jmp
xchg
and
rcrb
jmp
xlat
out
sti
push
dec
stos
ficoms
das
jmp
lcall
test
ja
ds
aas
inc
add
xchg
nop
mov
test
add
fdiv
subb
jne
push
xor
cmp
test
adc
aas
or
out
xor
sbb
pusha
inc
gs
mov
push
ds
fiadds
xor
cltd
iret
pusha
inc
inc
stc
mov
ds
mov
push
jg
add
push
add
push
add
push
mov
insb
adc
add
push
add
add
add
inc
jne
pop
add
lcall
shll
rcll
add
cmp
add
repnz
jne
push
movsb
aad
orl
jne
push
in
inc
subb
in
add
adc
jmp
cmp
cld
call
daa
add
jle
xchg
jg
push
push
bound
add
add
lret
jne
je
jg
jmp
insb
cmp
add
in
add
in
incb
cmp
inc
inc
scas
mov
in
mov
je
sub
mov
cmpsl
pusha
adc
out
and
push
sti
add
test
or
jmp
sub
or
in
add
jmp
add
mov
mov
xchg
jmp
xchg
xchg
mov
jmp
icebp
incl
xchg
test
push
push
clc
xchg
jne
std
and
push
test
call
xchg
add
mov
cmp
push
add
out
ljmp
aad
add
les
cmpsl
mov
stos
mov
mov
xchg
lock
fists
xorl
cmpsb
test
enter
lock
jmp
bound
mov
test
push
xchg
xlat
sbb
xchg
mov
mov
xchg
js
out
xchg
sub
xchg
push
popa
cmp
push
cmpsb
cld
mov
imul
dec
xchg
std
fiadds
mov
add
dec
cmpsb
std
into
leave
imul
mov
std
rcl
sbb
inc
shll
inc
cmpsb
std
subl
pop
pop
xchg
ljmp
push
dec
mov
cmp
add
sar
push
dec
jno
std
inc
movsl
std
jmp
jb
add
adc
cld
arpl
or
fdivr
mov
std
push
add
cmpsb
movsl
rolb
jge
fdivs
insb
xchg
dec
cmp
add
add
lea
jne
mov
sbb
ja
push
jae
ljmp
loope
leave
cmp
add
dec
add
mov
jnp
push
pop
push
push
incl
mov
shrb
les
jmp
add
add
clc
add
movsb
lock
jne
imull
outsl
inc
hlt
outsl
xchg
xlat
add
incl
cmc
sbb
push
and
add
aad
add
xlat
sbb
and
nop
add
mov
or
xchg
lods
pushf
mov
roll
inc
mov
call
adc
xlat
nop
shll
call
add
pop
or
incl
nop
xor
mov
nop
shll
lock
push
andb
adc
out
gs
pusha
mov
addb
sbb
fwait
add
add
cmp
nop
add
sbb
fwait
hlt
shr
xor
cltd
sub
aam
sbb
jecxz
lcall
cltd
add
add
lods
xchg
lcall
xchg
push
add
out
ljmp
xchg
push
mov
sub
xor
sbb
nop
loop
adc
xchg
xchg
out
ffreep
loopne
cwtl
add
out
and
out
add
aam
les
adc
xchg
aam
add
or
outsl
mov
cli
testb
loope
ljmp
sbb
rcrb
out
add
mov
mov
fidivrl
jns
divb
dec
sbb
inc
js
cltd
aas
mov
std
xchg
out
imul
inc
mov
add
mov
out
addr16
jle
push
xor
in
cld
mov
xchg
incl
add
mov
jmp
mov
xor
push
inc
cmp
testl
inc
add
inc
aad
add
xchg
stc
jo
andl
call
ljmp
inc
jno
je
insl
mov
add
mov
mov
out
outsb
jo
decl
dec
cmc
incl
ja
push
sub
xor
call
xlat
ret
lret
out
decl
loope
jne
sub
mov
outsl
mov
pop
stc
pop
in
dec
icebp
mov
repnz
idivl
cltd
cltd
sbb
xchg
mov
xchg
jmp
rcrl
das
jae
call
mov
lock
mov
clc
rorb
call
add
stc
ljmp
or
sbb
sub
insl
lock
out
rcrb
lock
inc
daa
xchg
lahf
dec
sbb
test
fwait
and
cld
inc
xlat
lahf
sahf
sti
js
sbb
ficoms
xchg
aam
inc
lahf
cld
pop
cmp
sbb
xlat
cmp
add
scas
out
ljmp
sbb
fwait
jae
mov
add
repnz
lahf
push
add
ljmp
pop
out
add
ljmp
sbb
addr16
aam
inc
sbb
cld
cld
rol
jmp
ljmp
enter
and
add
ja
insb
cmp
push
xchg
sbb
ljmp
push
xor
sub
das
add
out
add
std
rol
push
ljmp
leave
ljmp
stos
popf
ja
cmp
std
xchg
arpl
ljmp
repnz
rol
inc
add
lds
outsl
icebp
jmp
or
add
push
or
int3
sar
test
cltd
in
mov
pop
std
call
ss
fincstp
add
roll
aam
inc
ds
jno,pt
lods
arpl
or
sbb
imul
sbb
push
inc
lcall
cmpsb
fs
incl
sar
cmp
adc
xlat
movb
add
test
sbb
mov
test
xor
mov
cmp
mov
mov
ret
test
add
stc
out
cld
mov
dec
dec
test
xchg
add
dec
mov
dec
cmovae
scas
mov
add
pushf
adc
aas
into
fs
nop
shll
add
test
or
orb
jmp
add
pop
adc
jmp
call
out
mov
adc
xchg
out
mov
out
bswap
push
enter
sbb
pushf
sti
js
push
mov
les
scas
mov
clc
iret
cli
inc
xlat
ds
pop
mov
repz
pop
popf
adc
mov
fwait
add
js
xlat
sbb
add
fisubrs
mov
fwait
cmp
adc
call
xchg
out
push
inc
sub
add
xchg
out
jmp
cmp
or
jmp
das
add
adc
inc
jmp
adc
lcall
shlb
ja
pop
pusha
incl
lcall
add
pop
add
inc
jmp
aam
aaa
movsb
sub
mov
ja
dec
dec
push
pop
add
inc
jmp
fistpl
add
out
mov
mov
hlt
and
cmc
ljmp
addr16
jmp
ljmp
cmc
sub
inc
outsb
sub
push
add
push
jbe
pushl
fdivrp
jne
jne
std
and
add
cmc
aas
xor
in
imul
mov
lods
jbe
fdiv
ljmp
std
jne
jne
std
shll
jne
je
shlb
jno
add
sub
xor
xchg
sub
mov
clc
testb
pop
sbb
outsl
mov
xlat
jmp
xor
xchg
add
test
dec
inc
adc
pop
rcll
jne
insl
sar
adc
rorb
sub
or
mov
add
jp
in
out
test
out
sbb
adc
cmp
loopne
test
push
std
jmp
loop
ljmp
leave
cmpb
out
ljmp
add
cli
dec
and
cmpl
ljmp
mov
adc
push
push
xlat
pop
out
fwait
adc
xchg
rclb
inc
xlat
xchg
div
mov
cwtl
xchg
xchg
fs
in
ljmp
xchg
mov
xchg
sub
sub
xchg
jno
add
mov
data16
out
ljmp
lahf
add
and
std
jmp
das
daa
push
das
cs
or
jmp
dec
pop
add
aam
xchg
stos
pop
xchg
std
pop
xchg
lret
das
ret
inc
jmp
aam
rcll
xchg
jmp
mov
add
loop
jbe
xchg
std
je
mov
pop
push
fs
add
add
lds
ljmp
sbb
cltd
push
sbb
inc
gs
std
cs
int3
es
mov
xchg
ret
cmpsl
xchg
std
push
fistpl
add
cld
mov
insb
std
call
and
je
repnz
jne
jns
rorb
imul
jb
std
dec
jb
shrb
imul
in
adc
repnz
gs
scas
xor
push
push
adc
add
add
icebp
add
hlt
xchg
mov
jne
jns
stc
push
sarl
scas
cld
decl
loop
mov
imul
push
shll
psllq
mov
call
shll
in
mov
jbe
test
push
leave
hlt
incl
mov
or
sti
or
pop
push
incl
add
lahf
inc
je
push
lret
sti
loopne
adc
adc
enter
xor
dec
lret
subl
fwait
or
jmp
cmp
sub
cmp
enter
adc
xchg
ss
rolb
aam
cli
pop
outsl
push
dec
lcall
lret
sti
mov
out
insl
mov
adc
cmpsl
xchg
mov
add
fsubrs
add
out
mov
out
ljmp
push
xchg
xor
xchg
int3
addb
jb
out
mov
fcomps
adc
out
ljmp
add
jmp
imul
add
pop
mov
mov
add
rolb
push
imul
out
popf
push
cmp
add
sub
push
fucomi
add
cld
push
push
ds
in
sub
inc
jmp
aam
dec
push
aam
or
or
addr16
push
xchg
push
add
jmp
and
jg
push
xchg
push
cmpsb
push
out
adc
xchg
xchg
dec
adcl
sbb
addl
add
xchg
std
outsb
add
iret
push
pop
test
xchg
xchg
imul
sbb
inc
inc
xchg
std
add
addl
mov
insb
std
jmp
xor
test
lcall
jmp
ljmp
push
sahf
lret
lret
ret
push
mov
xchg
call
mov
jne
outsb
ja
push
sbb
rorb
mov
cli
movl
add
outsb
add
mov
mov
std
dec
cld
xor
inc
push
int
and
shll
clc
cmpsb
in
add
pusha
outsb
ja
xlat
cmp
divl
or
or
pop
jns
sbb
cmp
mov
cmp
mov
xlat
xchg
mov
addb
add
roll
push
incl
mov
sti
pop
out
sub
fsubrs
out
scas
sti
movb
cmpsl
jns
mov
jl
test
cmp
xlat
test
jmp
outsb
mov
mov
arpl
js
push
mov
jg
data16
data16
add
out
jne
add
adc
in
cli
add
out
xchg
negl
sub
nop
outsb
ret
subl
jb
add
scas
push
add
xor
cwtl
adc
sub
pextrw
xor
inc
inc
in
pop
push
jns
jge
sar
data16
popl
cwtl
sbb
in
adc
mov
add
in
lods
int
icebp
ja
test
push
cltd
fstps
or
nop
std
cs
popa
xchg
mov
pop
mov
aad
out
add
xchg
inc
push
cld
out
xchg
pushf
xor
leave
bound
mov
push
mov
scas
sar
stos
adc
or
add
loop
mov
aam
imul
sbb
std
out
lcall
mov
or
call
xchg
das
inc
outsb
or
xchg
sub
stc
mov
std
dec
flds
std
call
ror
fstps
cld
jne
sbb
push
mov
mov
sbb
add
sbb
push
fdivl
ljmp
mov
cld
jne
jl
call
cwtl
cmpb
push
jle
sahf
pop
or
sub
insl
adcl
add
cwtl
xor
mov
int3
mov
enter
cld
pop
dec
xor
add
add
xlat
hlt
sbb
add
mov
in
rcrl
mov
addr16
call
inc
jnp
lock
lret
jp
pop
outsb
jns
fmuls
scas
setge
les
out
xchg
jne
mov
mov
sbb
jp
notl
out
mov
testb
mov
inc
xor
out
push
icebp
rclb
rorl
add
cmpsb
sub
inc
cmp
mov
add
repz
adc
mov
lea
das
in
std
jp
pop
dec
xor
fcoms
push
push
cmpsb
sub
ret
mov
jp
mov
adc
std
push
adc
out
push
testl
stc
sbb
repz
add
add
mov
jbe
imul
xchg
adc
mov
lcall
addr16
mov
mov
test
and
aam
ja
mov
push
add
lods
dec
push
incb
repz
subl
mov
add
fwait
cli
jmp
push
add
pusha
roll
lcall
lock
add
insl
call
std
jne
sbb
or
ret
push
mov
fwait
call
jne
push
jmp
adc
std
jne
sahf
in
add
std
decl
imul
ds
pop
std
push
rcrl
call
cltd
or
incl
pop
ja
add
pop
pop
ja
es
call
xor
int3
mov
adc
cld
fmul
or
daa
pop
jp
fcoml
dec
dec
sarb
xlat
xchg
push
aas
inc
aaa
inc
xlat
pusha
in
sti
mov
jo
call
push
xor
cwtl
jp
jnp
in
pop
jg
jp
push
jns
frstor
lret
jns
fildll
loopne
inc
fdivrs
add
cmp
mov
xor
inc
ret
int3
mov
adc
cld
lods
xchg
out
add
add
call
dec
push
jne
pop
out
sbb
lock
xchg
out
shll
xchg
xlat
sub
add
imul
stc
rclb
xor
out
mov
add
add
imul
ja
aas
mov
xor
out
jae
adc
sub
add
imul
icebp
mov
dec
sbb
pusha
adc
mov
add
imul
fld
xor
data16
aad
add
add
imul
add
lds
sub
roll
sti
into
popa
push
mov
fwait
xchg
push
add
roll
sti
sahf
add
and
mov
fs
add
roll
sti
outsb
add
fwait
sbb
sub
add
add
push
mov
push
xor
adc
sbbl
lahf
xchg
andl
xor
jmp
add
ljmp
sti
add
push
add
xchg
mov
add
mov
sbb
cltd
mov
roll
lock
cs
jbe
push
pusha
lcall
test
mov
mov
insb
repnz
mov
cld
call
lcall
ds
jmp
cld
push
inc
add
jmp
add
add
xchg
cmp
or
in
pop
out
mov
lock
jmp
imul
mov
inc
je
enter
rol
call
sahf
pop
std
incl
add
and
xor
cwtl
jbe
fistpl
leave
cmp
xlat
xchg
mov
in
pop
jg
imul
pop
xor
push
add
add
add
ret
pop
or
xchg
add
jno
mov
lcall
or
jg
mov
or
je
sbb
movsl
aam
cli
repnz
pop
xchg
aam
out
jbe
jae
mov
cld
enter
sar
pop
mov
pop
push
aas
lock
les
test
add
jo
jl
adcb
inc
fucomip
mov
fs
out
push
stc
enter
push
mov
push
fisttpl
test
ss
xorl
stc
or
test
xchg
inc
and
add
jl
test
pushf
shrl
std
fisubs
cli
fs
cld
cmp
xorl
add
loop
add
loope
std
scas
xor
repnz
xorl
cli
or
sub
xchg
pushl
divl
mov
or
test
xchg
out
in
mov
out
or
stos
out
add
lods
jle
add
imul
lret
test
xchg
sub
jnp
std
jne
es
cld
cld
jne
cld
jbe
push
mov
jmp
jp
call
das
xchg
and
jne
pushl
inc
jp
call
push
in
cld
jne
add
add
call
add
decl
cld
adc
gs
jp
jge
xchg
hlt
push
dec
dec
incl
mov
aas
xlat
inc
ljmp
imul
and
adc
hlt
repz
hlt
sti
out
fwait
inc
push
nop
hlt
idiv
addl
hlt
out
out
mov
mov
jmp
xchg
inc
inc
inc
hlt
jecxz
cmp
mov
inc
and
ret
push
dec
jno
cwtl
pop
fsts
xlat
add
clc
adc
inc
xlat
out
js
push
cwtl
fnstcw
add
sbb
pop
or
xchg
out
dec
neg
cmpl
add
ret
dec
in
jmp
or
fadd
adc
pop
xor
out
xchg
cmpsb
les
jmp
cmp
fidivs
not
sub
sbb
out
ret
scas
aas
lds
adc
push
out
push
or
cs
stos
mov
fadd
add
mov
out
xchg
stc
fdivrl
cld
jo
test
jb
jo
addb
jo
aaa
sbb
sub
add
pop
inc
ja
cltd
sub
jmp
push
jl
out
out
addr16
push
orb
lahf
ja
push
sub
std
adc
aas
jbe
lea
push
lret
sub
jmp
add
add
jb
aad
cmp
movsl
xchg
cmpsb
sub
std
scas
cmp
repnz
xor
notl
add
std
add
loopne
stc
adc
inc
out
xchg
jmp
ljmp
cmp
mov
add
xor
ja
cmpsb
clc
sar
add
push
stos
xor
adc
cmp
incl
add
movsl
std
mov
data16
xor
getsec
dec
pop
stos
std
out
sub
jmp
sub
sahf
lcall
cltd
or
test
std
push
lcall
lods
mov
incb
sbb
xchg
in
dec
daa
jne
pop
outsl
loope
pushl
lret
ret
fdivr
clc
movsl
xor
lahf
shlb
xchg
add
add
xchg
dec
stc
push
xchg
jne
das
sar
aad
xor
inc
sub
inc
add
xchg
cmp
inc
call
mov
bound
sbb
movsb
outsb
call
sub
lahf
jmp
mov
test
std
out
out
cmpsb
insb
cwtl
or
insb
or
and
jge
insb
add
or
not
xchg
inc
shr
adc
outsl
add
roll
mov
xchg
inc
inc
jge
cmp
mul
clc
das
jmp
ljmp
add
das
jmp
lock
xlat
jmp
adc
sbb
hlt
shlb
ljmp
out
cmp
out
into
mov
int3
pop
pop
mov
imul
das
push
test
les
jmp
test
add
out
in
dec
mov
push
std
hlt
insb
xchg
cs
jnp
adc
jl
push
shlb
pop
fildl
clc
scas
mov
rcll
dec
cmp
daa
imul
mov
ja
jl
mov
xor
mov
aam
mov
jmp
add
jge
push
mul
repz
push
shr
in
lahf
lods
imul
and
pushl
mov
in
jno
or
in
xor
incl
xorl
outsb
lahf
in
sub
std
push
into
pop
ja
push
pop
std
push
pop
aam
icebp
or
ret
push
mov
out
or
call
add
mov
stc
push
xchg
addr16
sub
sub
push
mov
shrb
push
or
push
xchg
loopne
mov
mov
xlat
mov
loopne
push
mov
mov
movb
xlat
scas
jnp
cwtl
push
mov
xchg
daa
imul
pushl
lret
shrb
incl
add
subl
xchg
xchg
lcall
cmp
je
push
sar
mov
leave
push
loop
push
jge
fnstenv
inc
add
mov
mov
xchg
xchg
adc
cli
dec
xchg
jecxz
fadds
ret
cld
xchg
jns
fnstsw
out
push
shl
das
jmp
ljmp
add
add
jns
inc
add
cmp
addl
test
stos
push
ljmp
fucomp
jns
sti
xor
or
out
aas
xor
push
fadds
xor
out
mov
sti
js
idiv
jne
push
mov
out
add
jo
push
cmp
add
pop
mov
js
into
lock
and
pop
cwtl
hlt
xchg
js
cmpsb
xchg
jmp
xor
pop
stos
mov
lock
ja
orl
gs
push
jp
jmp
sub
jnp
mov
mov
lock
xchg
add
mov
ja
pushf
add
push
jo
push
add
jge
call
jmp
jae
xchg
jnp
std
leave
jl
std
push
xor
push
aaa
inc
mov
repnz
xor
xchg
add
cmp
sbbl
or
emms
or
out
jmp
adc
or
shlb
add
cs
call
and
adc
jmp
jle
call
out
mov
jne
call
xor
js
pop
out
mov
fmul
inc
or
mov
in
push
dec
push
xlat
xor
incb
pop
mov
adc
jmp
jnp
call
push
addr16
out
xchg
out
add
cmp
cmpsb
xor
fistps
pusha
std
data16
add
test
add
xor
push
int3
dec
divl
sub
data16
mov
add
push
jns
xlat
jmp
ljmp
out
ljmp
out
ljmp
pop
jmp
adc
ja
jp
fs
add
or
stos
out
roll
adc
or
cmpb
mov
pop
sahf
jbe
arpl
fs
and
jp
jle
fs
xchg
movsl
inc
jne
add
je
jae
jne
fs
sbb
mov
push
jnp
add
jnp
repnz
add
mov
movb
inc
ret
out
xor
xchg
sub
std
push
fildl
dec
pop
xchg
je
xchg
or
xor
dec
adc
je
pusha
pop
xchg
cmpsb
hlt
or
adc
inc
jmp
hlt
jae
mov
in
cld
ret
xchg
pop
xchg
cmc
pop
mov
push
fisubrs
cmc
add
add
inc
add
jecxz
je
imul
pop
cmp
xchg
gs
rorl
push
call
aad
or
dec
out
call
jns
fdivp
mov
out
cmpb
fwait
andw
cmc
incl
jne
std
dec
ljmp
cmp
icebp
dec
std
jne
pop
imul
add
push
sbb
inc
xchg
add
jmp
sbb
ljmp
sub
ljmp
pop
lcall
mov
lahf
decl
int3
cltd
loopne
aam
incl
in
jmp
leave
push
jmp
jae
pop
out
mov
xchg
in
mov
push
arpl
mov
mov
arpl
push
pop
lcall
add
push
arpl
outsl
fcomps
push
sub
pusha
lret
pop
jmp
push
jnp
call
xlat
cmpsl
sub
sbb
push
stos
push
out
sub
lock
stos
out
fstps
xor
lcall
push
leave
das
jmp
pop
mov
popf
sub
jb
or
sti
add
mov
pop
daa
jb
or
dec
mov
mov
jecxz
test
jbe
test
push
clc
loop
jmp
xchg
xor
or
cli
repz
in
ljmp
jb
cld
faddl
ljmp
mov
or
jb
inc
mov
std
ds
jmp
and
add
andl
sub
mov
leave
and
test
xchg
addr16
or
out
ret
call
sbb
add
aam
inc
aad
call
imul
jo
jmp
pushw
sahf
and
sahf
sahf
js
sbb
xchg
pop
shr
or
cs
push
jmp
push
sub
adc
cmpsb
sbb
incl
add
gs
cltd
rsqrtps
or
fldenv
lock
std
call
fs
imul
aaa
dec
pop
stos
std
out
push
std
pushl
data16
mov
test
inc
scas
adc
inc
popf
sub
add
mov
lcall
jae
stos
std
and
add
add
pop
pop
xor
js
lahf
lcall
mov
dec
clc
pop
push
in
fnsave
inc
sbb
rcl
sub
sub
sbb
add
ja
incl
adc
clc
iret
pop
xor
lock
fsub
outsl
pop
adcl
aad
push
xchg
jb
mov
fstps
add
mov
or
lcall
push
imul
dec
out
xchg
push
js
pushf
xlat
fcoms
pushf
push
data16
in
imul
xchg
outsb
xlat
rclb
pushf
xor
xchg
aaa
dec
pop
and
repnz
cmp
adc
xlat
fcoms
pushf
clc
insl
sbb
sti
gs
call
push
pop
add
loopne
jo,pt
insl
cld
imul
hlt
pop
enter
shrb
jge
fcompl
fcompl
jecxz
mov
gs
jae
outsb
std
je
data16
cmpsb
sbb
or
or
lea
insl
std
jle
gs
test
imul
xor
pop
andl
add
enter
jl
mov
stos
ja
sub
aam
ja
jl
call
mov
or
mov
std
push
xor
jmp
sbb
cmc
out
jp
ja
or
insb
in
mov
add
repnz
cmp
cmc
add
add
mov
lock
repnz
repnz
add
mov
cld
faddp
jbe
mov
stc
call
xor
lds
add
pop
mov
jne
xlat
fidivrl
subl
rol
push
push
push
xchg
fxch
cld
push
push
repz
cld
mov
sar
mov
dec
sub
bnd
decl
pop
negl
cmp
inc
add
xlat
movsb
xchg
lock
inc
xlat
jge
mov
jae
pop
in
push
jmp
incl
fcoml
dec
out
xchg
add
mov
pop
fisubrl
and
inc
xlat
sub
lock
dec
mov
inc
xlat
std
dec
mov
testl
sub
fdiv
mov
ret
dec
sub
add
rcrb
or
adc
mov
xchg
cwtl
test
loopne
sub
push
pop
fninit
ficompl
jns
cmp
in
pop
jo
testl
fcoms
pop
xor
dec
push
out
dec
push
xchg
je
cmp
ljmp
push
out
scas
ljmp
je
push
add
xchg
add
repz
and
xlat
stc
data16
out
ljmp
out
repz
out
ljmp
push
jmp
aam
imul
xchg
icebp
jmp
popa
pop
cmc
mov
in
push
mov
pop
push
xchg
pop
push
sahf
cltd
icebp
jmp
mov
cmc
xchg
aaa
mov
lahf
imul
add
add
icebp
jmp
push
push
dec
cmc
dec
jg
ja
jl
mov
scas
insl
mov
jmp
movsb
popa
std
push
call
inc
cmc
push
jg
xor
fnstcw
add
call
stc
add
call
mov
testl
xlat
hlt
decl
jnp
dec
sar
xchg
mov
mov
add
dec
shlb
mov
lcall
leave
mov
cld
incl
ret
hlt
mov
mov
std
mov
popf
mov
jmp
ret
push
mov
in
addr16
xlat
jns
fmul
ret
sbb
xlat
push
pop
mov
lret
pop
adcb
mov
sbbl
mov
lret
push
imul
push
sbbb
add
lcall
inc
dec
loopne
cmp
add
push
fcmovb
repz
xor
adc
imul
out
call
sub
add
push
movsb
lcall
testl
jae
push
mov
outsb
push
mov
xor
push
cwtl
mov
ljmp
data16
scas
scas
ljmp
insb
xchg
add
adc
push
gs
inc
data16
or
cltd
xor
jg
pop
pop
push
lods
out
ret
scas
ljmp
add
cmp
or
scas
scas
add
insb
shlb
lcall
ficoms
pop
std
push
and
rclb
gs
pusha
xor
out
je
rcll
std
cmp
gs
sbb
mov
rcll
jae
or
pushf
pop
std
xchg
pop
fiaddl
mov
jne
movsl
add
fwait
gs
xchg
into
sub
std
aam
out
add
mov
cmp
imul
inc
hlt
dec
sub
icebp
jmp
or
and
jmp
arpl
sar
mov
aad
les
mov
ret
add
cld
jle
cmp
add
add
cmc
incl
jbe
adc
mov
sahf
mov
cld
call
inc
mov
or
mov
mov
mov
std
call
adc
in
mov
add
push
add
clc
push
aad
push
shll
call
fcoms
add
flds
xlat
cld
decl
pop
cmpsl
add
test
push
pop
ljmp
push
xchg
lcall
xor
incl
pop
pop
in
inc
movsb
push
incl
pop
pushl
lcall
pop
pop
lods
and
xchg
pop
decl
fiaddl
das
xchg
cmp
cltd
loopne
aam
jmp
mov
dec
pop
adc
dec
inc
arpl
push
xor
clc
push
ja
add
lock
lcall
push
out
pushf
push
push
fsubs
arpl
bound
jno
add
rcrb
push
in
push
adc
xchg
mov
arpl
addr16
out
ljmp
push
push
fucom
popa
ss
jo
pop
push
pusha
js
push
out
out
ljmp
out
adc
or
add
add
test
stc
mov
aam
sbb
adc
cld
adc
pop
inc
jmp
cmpsb
cmc
sarl
out
add
inc
bound
jl
mov
bound
es
push
test
jmp
testb
std
push
jo
inc
jmp
es
into
daa
fdivr
test
popa
std
mov
ljmp
add
add
aad
adc
popa
ja
lods
or
mov
inc
std
decl
push
jno
std
addr16
inc
add
adc
ljmp
gs
jl
cld
leave
lods
jmp
add
inc
std
imul
mov
jmp
in
add
sbb
outsl
in
imul
and
xchg
mov
push
add
ljmp
subl
inc
outsb
les
shlb
std
dec
inc
dec
mov
xlat
js
xlat
push
pop
mov
xlat
add
sbb
sub
pop
push
imul
jmp
lods
ds
mov
ret
mov
cld
mov
dec
jne
std
fdivs
add
ror
sbb
xchg
add
xlat
aad
add
fsts
out
xchg
add
test
je
pop
pop
rorl
dec
push
or
push
mov
cwtl
mov
xlat
push
pop
mov
rclb
cmp
sbbl
mov
test
or
sub
stos
mov
pop
insb
dec
and
cltd
pop
fmuls
fdivrp
add
lock
cltd
dec
add
ljmp
shr
fld
pop
sahf
sti
lock
pop
dec
shrb
dec
aas
out
ljmp
out
xchg
and
and
add
pop
fadds
xchg
mov
inc
fucomi
sbb
xor
add
adc
or
sub
inc
iret
insb
shr
or
add
inc
jae
call
mov
xor
add
pop
imul
pop
imul
mov
mov
mov
or
mov
fucomi
or
push
ljmp
push
inc
jmp
adc
push
cmc
out
adc
std
fimuls
pop
ljmp
add
imul
hlt
pushl
stos
ss
xchg
std
out
cmp
mov
out
push
stos
addr16
cmp
stos
mov
test
pushf
sub
mov
mov
adc
imul
shl
mov
xor
out
test
incl
ljmp
ret
pop
cmp
add
jg
cld
mov
sar
mov
dec
sub
bnd
or
test
sbb
idivl
add
pushf
push
push
es
jmp
pop
jbe
xchg
dec
jmp
pusha
inc
je
adc
dec
push
push
pushl
inc
add
xlat
enter
int
add
lds
xlat
cmp
clc
inc
int
jg
add
add
sub
cwtl
fcoms
in
enter
inc
dec
pop
adc
cmp
pushl
dec
cwtl
jmp
out
jecxz
nop
loope
pop
mov
push
js
rcr
inc
jb
push
arpl
push
pop
push
push
inc
pop
xchg
pop
sub
mov
xchg
sub
je
add
push
je
sbb
xchg
adc
rolb
lds
pop
dec
sar
inc
in
xlat
out
xor
out
popf
jle
outsb
daa
inc
insl
out
nop
not
in
pop
mov
adc
dec
mov
fistpl
pop
stos
add
pop
add
push
pop
ja
push
in
roll
push
jmp
pop
pop
push
xor
push
mov
push
pop
mov
add
movl
data16
inc
jmp
sbb
sahf
jecxz
jbe
bnd
xor
dec
subl
mov
cltd
lahf
jecxz
fsubrs
fwait
push
out
or
into
jb
call
or
add
aam
inc
add
cmp
imul
add
loope
hlt
mov
sub
jmp
cmpsl
jmp
or
sub
jmp
push
sub
cmpsb
jbe
data16
mov
imul
push
push
inc
daa
mov
test
cmpsb
cld
call
jnp
fincstp
test
in
add
cmpsb
cld
xor
xchg
push
mov
stc
aam
in
add
cmpsb
cld
push
inc
fsts
push
dec
ljmp
xchg
call
pop
lret
pop
testl
sub
jmp
sub
jg
aas
jns
lcall
sub
inc
xorl
imull
flds
cs
pushl
push
nop
call
pop
inc
je
les
add
add
roll
inc
xor
gs
sbb
in
inc
clc
mov
mov
pop
inc
shrb
rclb
mov
jmp
push
hlt
inc
mov
cltd
decl
push
jmp
add
mov
add
lret
inc
add
jno
dec
push
push
mov
xor
lock
ret
ret
pop
pop
xchg
inc
add
xlat
loop
fdivl
push
xchg
test
loope
pop
mov
mov
fs
inc
mov
nop
out
pop
dec
inc
lock
pop
cmp
add
mov
cs
cmc
adc
icebp
sbb
lods
push
adc
or
push
std
push
xchg
jmp
testb
out
sbb
xchg
adc
xchg
pop
pop
std
sbb
into
add
sbb
rcrl
push
std
rcrl
pushf
repnz
push
ljmp
pop
jmp
xchg
push
std
mov
pop
ljmp
out
sbb
inc
andl
aam
inc
push
xchg
inc
cmp
inc
cld
mov
stos
cld
jne
mov
or
push
mov
cmp
mov
push
incl
add
scas
jmp
or
sub
popa
in
mov
push
jbe
jmp
push
cld
jne
mov
cld
jne
stos
jbe
andl
call
ja
or
lret
xlat
in
cmpl
lcall
pop
in
int
cld
or
scas
or
xlat
lret
xchg
incl
add
pop
inc
rcpps
add
xlat
add
sti
mov
fistpll
ljmp
push
inc
jne
decb
mov
icebp
mov
js
sar
movl
pop
ss
out
push
push
call
aam
jne
scas
aaa
cmp
movb
cmp
adc
inc
add
aam
out
add
push
or
push
les
lods
out
ret
outsb
sbb
add
inc
lea
out
push
sub
push
xor
mov
pop
push
inc
rclb
scas
add
mov
cmpsb
xor
inc
cwtl
ja
push
adc
and
pop
xor
lods
add
inc
add
ret
push
int3
mov
push
push
ja
lods
ljmp
add
lods
lods
dec
lret
cmc
cld
xchg
out
adc
ljmp
jae
push
lock
mov
push
inc
jmp
xchg
push
push
mov
mov
sub
inc
xchg
enter
mov
jbe
jnp
cmp
inc
push
std
adcl
dec
lcall
fmull
add
push
std
out
add
mov
lds
loop
jbe
cmp
cmp
fstpt
std
inc
mov
inc
jmp
xchg
push
push
cmp
push
std
mov
enter
mov
and
mov
mov
shll
cmp
out
push
call
push
mov
inc
cmp
cld
push
ds
jbe
push
cmp
stc
add
add
stc
scas
cld
jne
scas
jbe
lds
add
cmp
testl
scas
jbe
cmpsb
sahf
jl
jle
rorl
outsl
add
outsb
cmpsb
inc
clc
outsb
in
add
subl
add
cmp
cs
xlat
add
push
pop
lret
and
mov
outsl
sarb
push
rorb
inc
add
out
sar
cmp
call
xchg
push
lea
cmp
enter
sub
xor
mov
sub
xlat
jge
cmp
inc
inc
mov
push
cmp
call
dec
lret
sub
jo
test
lock
inc
xlat
sub
pusha
xchg
cmp
xchg
js
cmp
aaa
cmp
add
add
push
push
xor
push
test
mov
push
je
push
inc
je
add
ljmp
cltd
pop
aaa
call
inc
cmpsl
outsb
fmuls
mov
out
ret
lods
ljmp
dec
sahf
movswl
outsb
pusha
mov
dec
cld
ds
jne
push
xchg
lret
ss
jmp
sti
imul
add
pusha
dec
int3
add
mov
subb
xlat
fiaddl
sbb
std
mov
in
shrl
test
dec
std
mov
jmp
jle
inc
cmc
jbe
dec
ja
lods
sub
mov
test
out
lcall
cmc
adc
loope
xchg
stos
add
inc
add
push
outsl
imul
jle
dec
std
push
add
pop
push
cmc
push
fsts
push
rorl
cmp
inc
std
out
lods
fs
int
dec
std
rcrl
into
mov
or
call
add
ljmp
add
incl
ja
push
xchg
call
or
pop
xchg
or
ljmp
or
push
nop
or
decl
push
ljmp
add
add
cltd
std
imul
jns
cld
push
aaa
cmp
cltd
add
scas
jno
jne
sbb
std
orl
std
fstpt
ja
xlat
das
and
jne
xor
pop
aas
or
inc
add
loop
in
push
fwait
pop
divl
insb
mov
pop
aas
jne
jl
or
sbb
add
add
inc
inc
rsqrtps
not
push
add
sbb
add
xor
push
and
lea
add
mov
ss
data16
adc
mov
je
out
jg
xlat
push
test
incl
sub
xor
push
dec
out
mov
cmp
cmp
pushf
int3
cmp
mov
mov
add
jle
mov
inc
aam
std
xchg
out
mov
cmp
ret
push
lcall
adc
jg
mov
add
xor
dec
cmp
push
mov
pop
dec
push
cmp
fsubr
stos
dec
push
stos
add
cmpl
mov
push
mov
mov
jb
mov
out
addb
hlt
cmp
add
push
xor
dec
mov
std
fidivrs
dec
gs
arpl
cmc
or
in
mov
jne
lea
push
cmc
sahf
in
out
jbe
pop
mov
xchg
fisttpll
std
aaa
jo
lds
jmp
lods
inc
std
data16
push
rcl
out
in
xchg
popf
rorl
add
std
inc
or
dec
std
mov
add
std
dec
std
pop
cld
inc
std
push
in
ret
or
inc
xchg
std
push
fldl
std
incl
imul
mov
add
cmc
jns
ja
xchg
mov
orl
jmp
inc
push
cmc
ljmp
je
jns
std
mov
add
call
stos
decl
mov
xchg
pop
std
call
mov
jmp
push
add
inc
or
incl
hlt
decl
pop
std
mov
add
decl
lcall
call
add
dec
sbb
xlat
loopne
call
loopne
push
xchg
lock
add
cld
push
add
xchg
sub
push
pop
and
push
and
push
mov
testl
push
push
ljmp
add
push
sar
push
add
push
jo
pop
pushl
incl
shrb
test
lcall
adc
and
adc
xor
rol
mov
xadd
add
fsubr
sub
push
js
add
das
scas
cmp
out
ljmp
out
ljmp
ljmp
inc
aam
add
pusha
lahf
shll
aas
dec
inc
add
rep
mov
push
push
mov
mov
xor
pushf
aaa
xchg
adc
ret
xchg
xchg
test
pop
jb
das
add
inc
orl
add
aaa
xlat
ret
loopne
inc
jbe
cmpl
jno
aas
cmp
rol
loope
aaa
lret
cs
inc
std
adc
add
mov
add
ja
mov
xor
mov
push
xor
push
rcl
sbb
daa
out
jmp
pusha
pop
inc
push
dec
scas
add
roll
loope
adc
cmpsb
loope
fchs
sbb
jmp
out
orl
lret
jmp
sbb
push
add
inc
push
fldt
out
add
ds
jbe
es
incl
std
jbe
add
call
out
add
ljmp
jmp
or
dec
inc
add
mov
push
jmp
out
inc
xchg
adc
ljmp
jb
cld
pop
xchg
icebp
add
rclb
dec
bnd
call
add
inc
mov
add
ja
subl
push
jne
sbb
inc
xlat
fwait
cmpsl
sbb
sbb
call
sub
scas
mov
mov
test
test
or
push
in
lcall
push
sub
dec
add
jmp
les
lods
or
push
pusha
inc
inc
rcpps
add
into
mov
add
add
push
ss
jl
sti
aas
xor
sub
sti
inc
xlat
pop
lods
sti
dec
push
or
lods
incl
je
push
clc
inc
or
adc
ss
in
ds
loopne
rcrl
inc
inc
popf
jle
inc
sarl
out
ljmp
push
mov
inc
adc
inc
sbb
or
stos
add
cltd
add
daa
xlat
ljmp
add
fwait
xor
testb
lahf
inc
in
inc
fdivl
out
les
lds
push
xor
or
add
xor
movsb
xor
mov
push
xor
aad
xor
ss
and
jne
inc
imul
mov
std
pop
pop
test
pop
dec
mov
jmp
rcl
fsubs
add
outsb
jmp
xlat
in
std
xchg
aam
sbb
jecxz
inc
std
sbbl
cld
je
dec
stc
mull
scas
add
inc
ja
mov
xlat
cwtl
adc
inc
imul
mov
std
mov
mov
jmp
mov
ljmp
in
cmp
add
inc
cld
fdivrp
jbe
imul
es
std
jmp
scas
or
xor
add
add
cmc
add
cli
cld
pop
scas
out
add
add
mov
dec
std
jbe
flds
std
incl
inc
add
jle
mov
jne
out
test
mov
xchg
addl
push
test
outsb
or
incl
add
cmpsb
cmp
xlat
pop
in
inc
xlat
jo
lock
incl
mov
cmp
loopne
add
or
call
bound
test
lahf
into
cmpsl
mov
add
call
mull
pop
add
sbbb
decl
cmp
js
mov
jg
cmp
push
mov
add
add
sub
decl
mov
das
fs
cmp
imul
js
add
out
xchg
jno
sub
ret
pop
sbb
inc
mov
mov
xchg
jne
inc
jl
xlat
out
xorl
mov
loopne
sahf
sbb
inc
pop
xor
inc
lea
push
cmp
mov
inc
xor
mov
jp
xor
add
repz
js
cld
jne
cmp
das
jg
inc
xor
cs
aaa
push
inc
pop
xor
dec
push
add
xor
outsl
and
mov
stos
scas
lock
inc
dec
sbbl
mov
jmp
xchg
add
jmp
mov
cmpsb
imul
add
or
ja
lret
push
aas
clc
aas
lret
sub
imul
test
in
xchg
jl
pop
dec
test
mov
scas
add
aad
sub
outsb
cmp
jmp
cs
add
fsub
mov
ds
shr
cmp
test
bound
add
ljmp
call
into
sbb
out
fistpll
add
push
add
dec
inc
add
ja
push
je
push
fldcw
inc
push
popf
aaa
inc
outsb
and
add
mov
xchg
scas
pushl
dec
push
cmpsb
mov
inc
xlat
inc
sar
lret
push
add
sysexit
das
pop
mov
mov
cmp
aas
sbb
pop
das
call
in
inc
jg
inc
mov
cltd
mov
cs
mov
test
pushf
cs
movsb
mov
scas
or
mov
inc
sbb
ret
or
pop
scas
movsb
sub
nop
pop
sbb
push
dec
cs
jns
clc
out
add
out
out
xlat
outsl
add
xlat
out
push
lret
or
cmp
int3
mov
inc
imul
xor
add
push
pushf
sub
imul
cmpsl
cmp
ficomps
xchg
ret
ljmp
lock
out
ljmp
out
rolb
out
rolb
out
jne
movsb
lahf
insl
xchg
add
cmp
sub
shr
fsubrl
lahf
push
outsb
bnd
fistl
out
sti
mov
inc
add
fistps
insb
pop
inc
std
fisubs
sahf
jmp
pusha
push
aas
cmc
cld
inc
orl
ljmp
les
std
sahf
inc
call
std
pusha
push
push
cmc
xchg
inc
jmp
add
lods
xor
fmul
push
imul
std
dec
pop
cmp
shrb
ss
cmp
mov
xchg
les
std
adc
sub
xchg
cmp
add
or
inc
cmpsb
ljmp
xchg
xor
std
lea
pop
gs
xor
mov
hlt
ljmp
aaa
dec
xlat
xor
out
add
int
incl
loope
imul
xor
imul
std
jmp
cmp
je
push
in
pop
add
hlt
decl
filds
add
add
push
xchg
jp
inc
scas
add
std
jmp
in
xlat
stos
daa
decl
dec
divl
cmpl
push
jge
xlat
inc
add
add
xchg
and
decl
cli
adcl
add
divl
xor
rcpps
add
add
lret
fistps
popf
or
mov
pop
sub
clc
loop
out
shrl
call
shrb
iret
outsl
les
mov
sub
rcrb
out
lret
mov
dec
imull
scas
inc
popf
cwtl
or
mov
out
sbb
add
mov
xchg
sti
js
je
js
dec
push
push
aad
xchg
sub
ret
fdivrs
fsubrl
dec
cmp
sub
out
pop
cmp
sbb
ljmp
cmp
adc
arpl
cmp
out
inc
dec
sub
cmp
sbb
cmp
mov
orb
ja
pop
sub
add
inc
and
cmp
inc
cmp
mov
rorl
std
cmp
es
aaa
ljmp
inc
jmp
mov
std
xor
jmp
cmp
and
dec
andl
int3
js
lock
mov
shll
aaa
sbb
scas
add
scas
aaa
std
add
add
inc
jmp
push
cmp
mov
aaa
ja
clc
rorl
and
pop
add
out
push
adc
push
jne
shrl
rorl
inc
mov
add
outsb
jmp
test
adc
ljmp
ror
jno
jmp
shr
ds
jmp
ja
push
fs
repnz
fisubrl
add
add
adc
ds
mov
push
push
ret
incl
repz
xor
std
jne
adc
push
pop
sahf
jmp
mov
in
insl
idiv
push
push
pop
dec
cmp
or
jnp
push
xlat
inc
adc
aas
sbb
inc
xlat
pop
xchg
push
dec
and
iret
scas
push
les
or
mov
js
inc
add
jp
in
add
push
add
mull
jne
pop
pop
and
out
lods
or
adc
incl
inc
rsqrtps
add
mov
add
or
call
inc
add
mov
push
loope
lea
push
das
push
mull
jne
insb
lods
sti
out
lea
je
outsb
outsl
add
out
ljmp
mov
dec
and
add
pop
cmp
scas
nop
sub
pop
imul
xorb
ja
dec
adc
push
scas
ljmp
xor
mov
addr16
inc
xor
jbe
xchg
out
ret
outsb
daa
cmp
out
in
lods
and
imul
outsl
push
rol
lock
loopne
test
loop
sub
add
xor
ljmp
cmp
add
and
sbb
cmc
ss
clc
inc
jmp
mov
std
pushf
push
xor
aas
xor
add
scas
add
mov
xor
in
mov
mov
xor
push
dec
cmc
mov
add
pop
jb
mov
xor
sbb
fdivl
std
jmp
aam
mov
call
dec
xchg
in
idivl
adc
jne
pop
aas
fwait
sbb
std
mov
fdivr
lcall
push
add
fsts
std
mov
fdivr
mov
mov
dec
xchg
fincstp
std
jne
pop
setnp
std
mov
xlat
cld
incl
add
push
add
lcall
xchg
aad
or
std
jne
pop
repz
cld
call
aam
cmp
mov
popa
adc
call
xlat
pop
pop
call
cli
leave
pop
fdivr
cmp
sarb
pop
decl
mov
pop
mov
cltd
pop
ljmp
icebp
pop
lock
pop
incl
adc
jne
add
filds
js
pop
mov
rcrl
jg
cmp
outsb
dec
and
push
cmp
incl
inc
or
cli
mov
push
test
push
lods
add
stos
aas
sub
lcall
dec
out
xor
xchg
fadds
pop
call
scas
ljmp
mov
insb
and
mov
inc
out
dec
dec
xor
ljmp
fwait
cwtl
xchg
lods
nop
or
add
inc
mov
xor
adc
jo
cli
push
stos
add
jmp
out
push
pop
mov
test
mov
xor
lods
inc
cmc
sub
inc
xorl
mov
adc
mov
push
and
mov
add
add
inc
mov
jmp
cld
add
dec
imull
jmp
jmp
xorl
imull
std
cmp
testl
mov
or
push
std
es
xchg
lret
out
push
bound
mov
jmp
pusha
adc
icebp
in
pop
xchg
arpl
add
jbe
push
testb
fimull
jne
add
dec
fdivrp
jne
jnp
jne
add
xchg
inc
rclb
ret
fiadds
push
outsw
cltd
incl
mov
adc
cmp
jne
pusha
add
out
mov
mov
rcll
dec
jecxz
mov
dec
fists
dec
jecxz
xor
add
iret
cld
leave
lods
loop
push
js
push
lods
lea
jge
jmp
or
les
sbbl
inc
pop
test
dec
ret
mov
les
pop
push
rclb
add
or
imul
jl
mov
mov
dec
and
cwtl
mov
or
popa
mov
incl
add
rcrb
jne
pushf
leave
mov
andb
mov
pushl
leave
ret
pop
addl
cmp
lcall
and
add
sub
js
lea
movsb
stos
sbb
jp
int3
sbb
insb
cs
movl
push
inc
pushl
sbb
jecxz
es
dec
movsb
jp
add
push
xor
enter
jnp
rcr
pop
out
mov
adc
fimuls
dec
mov
scas
and
cs
mov
sub
js
cs
mov
push
stos
and
out
ljmp
addr16
aam
add
mov
add
push
sar
jp
jmp
cmp
ret
xlat
stc
cld
xor
add
xor
or
pop
inc
adc
andb
sbb
sbb
xlat
jbe
add
sub
jmp
inc
cld
addr16
addr16
repnz
sub
jecxz
mov
cmp
mov
adc
pop
cwtl
add
ds
popf
add
movsb
or
sub
jbe
pop
cltd
push
push
mov
je
lock
sub
sbb
inc
cli
jmp
push
sub
call
or
inc
cld
shll
hlt
out
pop
ja
dec
jle
call
aaa
cs
lea
repz
jne
xlat
lcall
or
leave
jge
incl
cld
jne
add
pop
mov
leave
jge
call
pop
cld
xchg
idivl
cmp
dec
jg
push
inc
stos
or
outsl
sbb
pop
pop
mov
add
dec
add
xor
invd
loop
call
clc
loope
push
sub
push
sbb
insl
pop
std
shlb
jne
test
pop
scas
into
sbb
mov
add
sbb
enter
sbb
cwtl
xchg
cltd
or
imul
jne
scas
cwtl
cld
js
pop
jne
out
and
pusha
sub
enter
lret
outsb
arpl
cld
sbb
repz
rclb
iret
outsl
xor
mov
out
xor
or
push
ja
or
mov
or
adc
hlt
add
pop
in
fwait
int3
sub
or
inc
lea
shlb
lock
in
jnp
int3
sub
or
jne
sti
pop
in
xor
out
mov
sub
ret
in
jmp
inc
xchg
jge
cs
mov
jmp
aam
mov
repnz
and
mov
add
sub
out
mov
std
mov
fucomip
jne
inc
int3
cmp
popf
lods
je
jmp
fcoms
cld
hlt
call
out
mov
adc
jmp
lock
jne
cmp
add
and
cld
jne
aam
xchg
roll
jne
push
ja
movsl
xchg
inc
aam
add
add
mov
jae
add
sub
xchg
in
add
imul
ds
les
repz
cs
add
mov
in
push
subl
push
inc
jle
ljmp
add
add
add
jg
mov
incb
jne
insb
jg
scas
ja
ljmp
sarl
xchg
add
std
jne
leave
adc
add
jecxz
iret
xchg
mov
xchg
or
jb
jo
xchg
idivl
jns
pusha
or
call
xchg
out
aas
cmp
inc
pop
or
enter
xor
cmpb
lea
lret
sub
stos
decl
ljmp
insl
adc
adcl
jg
or
inc
cmpb
add
insl
adc
and
adc
add
push
test
fisttpll
scas
jle
push
cwtl
js
andps
add
out
ljmp
pushf
loop
dec
andb
lods
and
out
ljmp
notb
fisubs
cld
mov
out
jbe
push
movsb
out
movsl
in
addr16
sbb
pop
or
ljmp
add
out
insl
mov
fcoms
scas
jae
and
push
add
cs
or
les
xchg
mov
jb
jno
xchg
sbb
in
jmp
fs
sbb
jmp
jo
adc
aam
stos
stc
cltd
ret
fwait
or
adc
in
nop
sbb
ja
in
fmuls
add
add
jae
icebp
fs
loope
inc
clc
out
jno
sbb
push
into
pop
sub
cmp
and
pushl
and
ja
lods
push
clc
sahf
ret
jno
xchg
aam
pop
push
aam
add
scas
pop
lret
lock
pusha
cld
jne
sti
jbe
cmp
call
std
jl
add
lock
lods
or
add
sti
fs
push
mov
mov
ljmp
clc
jmp
cmp
jbe
xlat
repnz
outsl
jg
xor
repz
pushl
cld
lea
and
cmp
std
lea
and
cs
std
xlat
rorb
out
jo
decl
adc
incb
add
push
sbb
pushf
mov
mov
mov
inc
adc
lods
pop
sti
subb
xlat
popa
xchg
sub
add
out
jns
adc
add
cmp
std
dec
push
mov
add
stos
jg
add
pop
mov
stc
fsts
add
push
xchg
sub
add
outsl
out
ljmp
push
push
jbe
and
mov
pop
adc
pushf
ficomps
xchg
jge
adc
repz
pop
and
pop
push
inc
bound
cmp
ljmp
adc
push
adc
and
push
movsb
adc
ret
neg
sbb
imul
cmp
jo
sub
and
out
xchg
jle
outsb
scas
adc
add
pushf
out
sbb
push
rcll
mov
aas
outsl
adc
and
cmp
and
mov
cmc
rcll
fwait
std
orl
ja
dec
and
ffree
fwait
or
pop
std
pop
out
std
inc
sbb
dec
mov
je
push
sub
jmp
add
sbb
or
outsl
ljmp
test
add
fwait
or
out
and
idivb
cs
and
in
push
lcall
sub
or
xchg
cltd
pushl
movsb
xchg
mov
add
xor
push
call
pushf
cltd
cld
incl
sar
call
jmp
sti
pushl
add
data16
mov
add
cld
ljmp
out
test
outsb
in
add
mov
in
add
aas
sub
test
sub
add
out
js
jmp
mov
mov
inc
ret
lods
loop
std
out
pop
cmpsl
incl
or
addb
adc
mov
mov
call
add
or
add
or
ljmp
adc
std
inc
cwtl
or
dec
push
or
cwtl
lcall
outsl
mov
icebp
dec
js
stc
out
fisttps
jg
jne
pusha
lods
rorb
or
dec
xor
mov
dec
data16
adc
cltd
mov
mov
ja
push
or
or
add
jbe
push
xchg
dec
push
loopne
ret
push
inc
pop
movsb
sbbb
push
enter
sbbl
add
jae
push
divl
mov
push
fs
xchg
ljmp
push
inc
inc
fs
inc
cmp
jmp
mov
daa
sbb
arpl
xlat
out
pop
enter
xchg
shrl
add
add
out
add
cmp
cs
sbb
xchg
xchg
std
inc
or
add
jno
sarb
cmp
cmpsl
loop
push
sahf
and
xchg
rolb
out
shr
mov
std
jle
in
test
and
cld
data16
add
aam
add
pop
insl
add
aam
xchg
sub
sbb
xchg
leave
push
sar
inc
jmp
aam
rcll
cld
push
lret
add
popa
lods
sbb
std
out
inc
std
pushl
inc
mov
jnp
sub
sbb
sub
clc
lcall
ljmp
imul
cld
dec
jp
cmp
repnz
mov
add
jmp
data16
mov
cmp
lock
mov
ljmp
xchg
in
cld
call
cmpsl
ljmp
ljmp
xlat
add
call
pop
std
test
fisttpl
or
add
inc
dec
or
add
jge
clc
sub
ret
mov
sti
pop
xchg
or
push
jo
add
fcoms
inc
je
aad
incb
sbb
cs
or
sahf
inc
incl
mov
fwait
ljmp
daa
or
mov
jle
subl
incb
push
sbb
mov
xchg
pop
outsl
lcall
lret
sbb
or
lods
ljmp
loope
fcoml
sbb
incb
add
mov
lods
push
lds
stos
rcll
lock
push
inc
sbb
xchg
out
inc
mov
add
jo
sbb
inc
sub
sbb
sbb
sti
mov
outsl
or
sbb
add
out
ret
scas
ljmp
cmp
pusha
out
sub
push
cltd
in
cltd
cwtl
add
fucom
rcll
scas
add
jo
std
mov
push
fwait
pop
fstpl
std
pop
fistps
ja
fsubr
mov
into
daa
shl
ret
mov
push
xor
mov
sbb
xor
sbb
in
cmp
jmp
cmp
add
aam
inc
adc
mov
jbe
out
add
fildl
insb
add
inc
sbb
cmc
dec
fidivrs
cld
jne
cli
movsl
arpl
or
mov
ljmp
cmp
loope
or
decl
rorl
and
call
xchg
jmp
push
je
cmp
repnz
mov
cld
jmp
push
cld
incl
in
mull
cmpb
add
cld
mov
in
in
mov
and
cld
jne
hlt
xchg
mov
out
mov
cld
call
lods
cmp
mov
jmp
cmc
loop
sbb
push
leave
or
xor
incl
pop
nop
cmp
or
out
mov
jne
incb
xlat
add
lods
mov
xchg
or
add
incb
add
add
fstpt
clc
mov
xlat
add
add
xlat
push
ret
repz
push
fwait
ds
fwait
call
adc
mov
notl
out
bound
or
push
push
cmc
out
ljmp
out
ljmp
sbb
pop
dec
mov
pop
mov
pop
add
sub
adc
pop
cld
sbb
out
addb
popa
fisttpl
add
fcoml
lock
bound
loopne
iret
push
fcoms
ret
aas
outsb
push
lods
cli
mov
xchg
push
mov
push
mov
mov
ljmp
aam
mov
jmp
rcll
lcall
add
add
inc
jmp
rcll
adcb
push
aam
mov
jmp
rclb
push
rcll
std
fimuls
push
mov
adc
std
mov
pusha
in
jmp
cmpsb
adc
cmc
sahf
rolb
outsl
data16
repz
cld
incl
add
ljmp
add
jns
imul
insb
mov
sbb
add
enter
jg
imul
xchg
jmp
push
fldenv
cld
jne
clc
xchg
std
stc
jmp
std
addr16
lock
cwtl
in
cld
incl
js
add
add
clc
pop
jns
imul
xlat
pop
add
push
mov
scas
filds
lcall
adc
out
mov
decl
mov
sbb
inc
movsl
add
addr16
adc
jmp
lds
out
jns
lcall
or
add
out
push
outsb
mov
add
sbb
add
bound
add
push
insb
add
sub
mov
push
mov
loop
inc
adc
iret
push
jo
nop
adc
and
adc
cltd
pop
add
out
int
adc
ljmp
ljmp
add
aas
add
out
aaa
nop
out
ljmp
pushf
flds
pop
outsl
adc
jns
mov
stos
cltd
in
sbb
inc
add
cwtl
out
jmp
mov
add
or
xlat
xchg
xchg
out
rcrb
fldcw
jbe
aam
or
fldt
in
fldcw
ja
aam
xor
adc
mov
push
lods
cmp
fucomi
jbe
add
aad
sub
sbb
call
call
adc
cld
aam
roll
push
cs
loop
sahf
and
ljmp
stos
xchg
scas
add
out
cld
fsubr
rolb
sbb
out
add
aam
call
inc
sbb
or
push
sarl
push
xchg
out
add
lcall
add
ljmp
add
nop
lods
add
mov
in
add
scas
sub
bound
lock
arpl
jne
jno
in
xchg
or
cmp
add
scas
mov
ret
cmpl
inc
stos
cmp
cs
jbe
and
loop
addb
ja
mov
or
or
cltd
add
cli
rol
lret
or
test
add
add
xlat
pop
add
add
push
push
mov
push
inc
push
rcr
push
scas
push
cltd
mov
pop
leave
xchg
push
add
jl
je
cwtl
adc
push
sti
add
inc
xlat
test
bswap
lds
dec
std
imul
scas
repz
outsb
add
icebp
dec
dec
push
std
ljmp
or
lds
pop
inc
icebp
addb
lahf
or
je
pushf
inc
or
sbb
mov
mov
lock
out
pop
or
cvtdq2ps
pushl
addr16
test
nop
xchg
push
sbb
jmp
cld
inc
xlat
imul
mov
lods
ljmp
and
outsl
lock
cltd
out
incb
out
sbb
sub
push
jo
out
jecxz
push
sbb
add
mov
and
pop
lock
sub
ljmp
unpcklps
pop
cltd
out
push
ljmp
lar
int
jbe
or
adc
lods
xlat
paddw
adc
add
push
icebp
int
jmp
rcll
mov
or
imul
adc
inc
jmp
add
jl
xchg
jle
stc
shl
pop
add
aam
inc
gs
ja
imul
andb
gs
aam
add
push
ret
cmp
cld
xchg
sub
add
loop
add
icebp
add
orl
adc
jge
add
pop
cmpsl
add
out
jl
hlt
out
cwtl
add
add
add
in
mov
cld
or
test
mov
push
std
push
xor
add
scas
jno
add
icebp
push
mov
push
inc
push
push
pushf
mov
stc
test
inc
push
or
hlt
or
mov
cltd
xor
ds
add
icebp
mov
add
icebp
add
ds
jbe
xlat
outsl
sub
pop
jmp
push
jg
inc
inc
add
xlat
add
call
xlat
add
jae
lahf
das
inc
xchg
pop
jmp
push
aas
or
xlat
dec
je
scas
xchg
xlat
adc
jae
fnsave
inc
push
push
jmp
push
das
and
xlat
je
call
xlat
jo
push
jg
pop
add
inc
imul
lods
call
or
inc
outsl
lea
add
fdivl
aas
out
scas
std
sub
jbe
lahf
add
or
mov
lahf
nop
add
xor
or
sti
icebp
sbb
sti
loope
cs
dec
ret
addr16
out
sub
out
ljmp
or
sti
test
and
sti
xchg
cmpl
pop
or
sbb
add
push
and
imul
cmpsl
lea
dec
jno
push
scas
lea
cmp
das
push
add
dec
or
inc
inc
or
es
std
push
fdivrs
aam
in
arpl
push
or
rcr
mov
add
addr16
lcall
jmp
loop
jle
ljmp
push
cmp
daa
hlt
ret
jmp
add
aam
add
and
shr
mov
mov
jl
or
data16
ja
std
aaa
sar
or
cmp
scas
add
out
pop
leave
in
fldl
ljmp
cld
jne
push
push
inc
mov
push
inc
roll
shl
testl
add
jbe
push
xor
add
add
cld
rorl
daa
add
mov
or
scas
testb
xchg
mov
inc
rolb
shrl
enter
jmp
cld
jne
lcall
push
icebp
cltd
shrl
movl
xlat
pop
pop
pop
jno
int3
in
or
into
or
fdivrl
lods
add
add
pop
add
fcom
cmp
xlat
pop
add
add
clc
stc
in
cmp
inc
out
push
add
xlat
xchg
cmp
loopne
dec
add
adc
cli
decb
leave
xorb
add
je
outsb
test
xlat
adc
add
xlat
adc
add
xlat
outsb
add
xlat
out
ljmp
jne
filds
add
mov
add
mov
ljmp
mull
aaa
xor
add
dec
ljmp
xor
ds
repnz
out
addr16
repnz
pop
dec
mov
add
out
shrl
out
ljmp
mov
add
jne
rclb
push
add
imulb
add
add
adc
mov
xlat
out
add
aam
les
das
inc
sub
mov
add
xchg
inc
add
aam
cld
mov
movups
sub
mov
out
sti
push
add
xor
adc
decb
std
mulb
lds
enter
out
jbe
imul
sub
push
wrmsr
shr
push
push
add
in
scas
inc
jmp
jns
add
jbe
xor
inc
sub
push
repz
out
push
add
scas
inc
add
jne
popaw
pop
add
shll
inc
das
bnd
push
push
enter
std
jne
cmpsb
xchg
push
add
sbb
add
mov
add
jae
in
inc
repnz
scas
jle
incl
add
repnz
xchg
leave
call
lds
das
in
push
jmp
push
cltd
xchg
pop
cld
pushl
mov
jae
outsb
jle
scas
xchg
sub
pop
add
dec
je
or
cmp
test
add
call
pusha
and
cmp
idiv
ret
je
lahf
and
add
scas
cmp
pandn
xchg
in
je
out
sub
inc
fbld
xchg
add
je
out
sbb
push
mov
add
mov
cwtl
jae
xlat
shll
mov
leave
out
fiadds
outsb
shrb
es
xlat
out
ljmp
add
jo
and
imull
add
add
sub
in
out
ljmp
insl
push
hlt
dec
shrb
inc
add
hlt
inc
push
add
loope
xchg
sub
outsb
pop
pop
pop
jge
add
outsb
add
inc
jge
add
ds
lahf
adc
dec
add
ljmp
sub
xlat
cltd
outsl
loopne
sub
mov
add
add
jo
add
push
mov
into
adc
cld
adc
push
pop
js
add
test
mov
add
fucompp
jb
add
adc
mov
adc
cld
aam
push
out
pusha
inc
add
fs
std
inc
fwait
les
jmp
and
mov
sub
cmp
dec
pushf
out
add
inc
cld
mul
ret
cmp
add
add
push
pop
rcr
add
jmp
out
add
aad
addl
cld
into
push
push
xchg
xchg
push
add
and
jle
mov
add
inc
jle
pop
push
outsb
out
or
jnp
ljmp
fucompp
mov
out
xchg
mov
inc
add
xchg
inc
add
add
icebp
xchg
jmp
cld
lea
pushf
push
call
ds
cld
jne
jne
mov
or
xlat
and
inc
das
mov
pop
add
imul
das
jecxz
inc
xlat
pusha
mov
mov
out
mov
jp
inc
sbb
adc
js
pop
mov
add
aas
fdivrs
inc
inc
bnd
test
or
shlb
in
and
repnz
loope
jmp
pop
add
xchg
in
add
add
aam
xchg
aad
cmpb
out
push
ja
adc
pop
push
shrb
sarb
icebp
mov
out
ljmp
pushl
lcall
add
xchg
jne
add
push
out
mov
js
adc
movsb
adc
and
cld
xchg
cld
pop
jnp
pop
mov
test
cmp
sub
sub
mov
popf
adc
jp
push
or
fistl
outsl
lock
jno
add
test
mov
out
std
rcr
cwtl
add
pop
aas
or
into
add
test
mov
out
add
add
test
ja
addb
stos
jecxz
push
bound
ja
imul
hlt
insb
pop
je
add
stos
xlat
out
push
jb
insb
pop
mov
mov
mov
xlat
out
cld
mov
sub
or
mov
pop
xor
bnd
add
add
sub
inc
push
and
or
cmp
mov
pop
test
mov
hlt
push
mov
inc
mov
push
inc
clc
out
incb
jle
push
test
mov
lcall
std
or
mov
sbb
sarb
mov
jne
cltd
jmp
jne
add
sbb
clc
sub
xchg
push
jge
xlat
pop
cld
sbbl
add
sub
xlat
fnstcw
mov
add
pop
test
dec
adc
fadds
add
dec
sbb
out
movb
add
xor
pop
cli
mov
loope
push
sub
push
xlat
pop
xor
cli
xor
loop
out
je
add
call
mov
mov
je
sbb
dec
inc
int3
mov
add
adc
aam
adc
adc
push
std
sbb
sar
popf
adc
sbbb
imul
mov
cld
sti
out
movsl
cs
frndint
jmp
xorb
in
sar
clc
mov
addr16
mov
cmp
in
mov
add
cld
sbb
in
cmp
fsubrp
jmp
xchg
jno
cld
jnp
mov
out
add
adcb
jbe
sti
aad
das
xchg
ja
mov
pop
mov
addb
sub
std
es
jbe
movsb
sahf
jmp
loop
xorb
xchg
push
push
imul
call
jbe
and
xchg
cld
push
inc
pop
push
into
es
adc
jno
mov
sub
add
std
cmpsb
stos
jge
sahf
insb
xchg
add
aam
jmp
jo
testl
push
jmp
les
inc
pop
shr
add
adc
out
add
add
add
out
add
push
add
mov
stc
ljmp
sti
jne
sbb
shrb
cmp
and
adc
cmp
pushl
sbb
xchg
add
adc
jne
add
cld
pushl
add
cmp
add
cld
jne
push
cmp
cld
jne
adc
lret
out
push
mov
add
mov
pop
and
cmp
out
cmp
decb
in
fimull
sub
pop
add
xlat
mov
dec
jg
push
add
fbstp
xlat
pop
pop
add
inc
add
dec
inc
add
cli
inc
inc
xlat
sbb
ljmp
adc
cmpsl
test
movl
xlat
scas
cmovo
or
xlat
pop
cmp
add
add
push
js
pusha
xlat
fstl
lret
je
out
push
rol
stc
pop
mov
pop
or
and
inc
jmp
sbb
sub
pop
mov
pop
fldl
pushf
jle
clc
ffreep
rolb
push
out
loope
jmp
out
sub
add
clc
push
cld
mov
mov
add
mov
jecxz
test
mov
add
out
ljmp
clc
cmp
ljmp
xchg
inc
push
out
adc
mov
scas
add
fcomi
ss
lods
add
out
pop
xor
cld
shll
inc
jmp
aam
adc
aam
subl
stc
clc
cld
insb
jns
cld
push
jmp
sub
push
jno
cld
je
nopl
clc
lret
notl
lahf
outsb
aad
clc
cld
inc
fildl
test
clc
cld
jo
sti
in
mov
out
add
pushl
lahf
jo
push
add
in
add
mov
dec
add
imul
mov
add
call
ss
out
add
adc
in
fwait
paddb
add
stos
inc
inc
xchg
adc
jmp
add
ljmp
lret
paddb
fldenv
add
push
push
cld
jne
sbb
ret
push
mov
or
and
jecxz
in
lret
or
les
outsb
repnz
xlat
mov
dec
out
add
add
add
pop
xchg
push
xlat
pop
pop
jge
movb
scas
std
inc
inc
xlat
pushf
xor
inc
add
stos
fsub
sbb
inc
add
inc
inc
xlat
pop
cmovo
pop
cmp
jecxz
jecxz
push
std
in
rclb
push
or
decl
out
iret
pop
cmc
jl
sbb
rcl
dec
mov
xor
imul
add
mov
incl
adc
lods
add
mov
mov
xlat
out
ljmp
cmc
jnp
mov
push
ret
push
xlat
out
rorb
bound
stos
inc
xlat
cmc
std
ss
scas
ljmp
cmc
sub
test
inc
xlat
xchg
inc
xchg
out
addb
out
push
arpl
adc
hlt
repz
add
in
in
lahf
sarb
sub
shrl
push
addr16
rcl
adc
lods
jo
add
repz
pushf
jge
jnp
inc
xchg
push
out
imul
mov
jmp
xchg
out
jmp
repnz
sbb
jb
test
test
cmc
cld
inc
aas
jb
add
sahf
out
imul
dec
mov
jmp
xchg
out
jmp
repnz
jg
cltd
sub
add
jnp
sub
out
push
fimuls
out
xor
cld
rorl
xchg
pcmpeqd
push
xchg
or
inc
xchg
cld
pushl
sub
add
push
push
push
aam
sub
or
repnz
cld
inc
movsl
std
push
pop
stos
xorb
sbb
dec
push
push
cmp
jne
pop
adc
inc
adc
mov
test
inc
out
arpl
push
stos
add
push
or
mov
xchg
sbb
or
mov
xor
xlat
mov
je
pop
mov
nop
xor
std
or
loopne
leave
test
add
jae
sarl
mov
pop
loop
fbstp
pop
or
ficomps
loope
leave
adc
movsb
add
xor
push
sub
call
mov
out
inc
add
sub
push
dec
push
sbb
push
xlat
pop
or
inc
sbb
call
daa
out
push
add
add
add
add
repnz
or
lcall
mov
mov
add
cmc
sub
movsl
cs
imul
jecxz
sbb
std
fists
bnd
je
loope
nop
mov
mov
shrb
jnp
jmp
je
loope
stos
outsb
xlat
test
imul
test
add
mov
jmp
add
jmp
addr16
and
add
add
jbe
mov
or
push
mov
cld
push
mov
jbe
jl
ja
ja
shr
cltd
mov
fildl
int
lock
pusha
adc
imul
xchg
lods
inc
jmp
shr
jbe
cmp
mov
push
aaa
jnp
inc
add
xchg
je
inc
sbb
arpl
push
hlt
addr16
faddl
jmp
div
mov
xor
je
inc
add
inc
inc
scas
push
jbe
pop
mov
add
test
inc
add
dec
cld
decl
std
inc
loop
repz
cld
leave
cmp
add
jg
dec
arpl
add
add
xchg
or
adc
mov
xchg
and
arpl
lea
test
push
leave
xchg
or
add
jmp
add
inc
dec
add
jp
jne
fldln2
pop
mov
add
cld
add
push
cmp
lret
bound
loop
test
adc
sub
push
cwtl
inc
cli
and
add
cmc
mov
imul
xlat
push
jmp
out
jmp
or
icebp
add
add
pop
cld
das
lret
xlat
mov
stos
xchg
sub
or
stos
fucomip
push
lahf
cmp
decb
xlat
add
negl
add
out
popf
sti
lock
mov
neg
arpl
fimuls
adc
out
sti
lret
add
xchg
add
cmp
push
fucomip
pop
cld
mov
arpl
mov
jnp
add
cs
add
mov
pop
js
stos
push
lret
in
sbb
in
mov
xchg
fisttpll
jns
adcl
fldl
std
sti
dec
jae
fbstp
in
mov
mov
mov
in
fstpl
arpl
loope
add
add
adc
xchg
aam
std
ljmp
cld
push
or
push
and
addr16
daa
out
add
pop
fdiv
out
cld
add
aam
xchg
xchg
cld
jmp
out
add
mov
mov
lods
xchg
cld
jmp
test
out
mov
cld
xchg
xchg
dec
jae
jp
add
in
push
cmp
shr
jbe
scas
out
cld
aam
in
dec
add
outsl
mov
add
jae
add
out
cmpb
cli
test
out
out
add
cmp
out
add
inc
outsl
out
mov
out
ficoml
dec
scas
out
xchg
cli
xor
test
sti
jg
in
mov
outsb
jbe
add
sti
push
add
inc
mov
mov
aam
sti
add
fdivrs
add
dec
call
mov
js
add
lods
xchg
inc
xchg
aad
test
and
cmpsl
sub
or
arpl
inc
add
aam
adc
add
addb
inc
pop
sbb
loope
push
sar
test
and
add
sar
nop
sub
xlat
outsb
add
xlat
outsb
add
loope
jo
xor
ret
inc
xlat
fadd
jae
adcl
dec
jno
mov
gs
cmp
lock
push
sar
sub
push
fisubs
ljmp
adc
sub
xlat
out
dec
clc
add
inc
xlat
aaa
jmp
and
imul
nop
add
add
adc
mov
jmp
sti
ljmp
add
jbe
test
pusha
mulb
xchg
xor
out
ret
dec
shr
xor
dec
lret
jmp
sbb
add
out
ljmp
xor
push
xor
jbe
cmpsb
cld
sbb
insl
jle
insb
subb
call
std
mov
in
mov
xor
jo
add
pop
mov
push
nop
stos
jbe
ret
mov
jne
push
adc
lret
sub
outsl
vmovd
cld
ss
inc
adc
jnp
shrl
out
cld
xor
push
add
iret
jno
sbb
scas
xchg
aam
add
add
movl
lea
sbb
jns
hlt
test
jae
cld
cwtl
sti
add
mov
mov
lock
incl
jmp
xor
sti
fcmovb
sti
incl
out
xor
mov
hlt
jns
sti
push
jbe
lret
ret
push
mov
add
mov
push
mov
sti
push
repnz
adcb
and
test
ljmp
xlat
aad
mov
aam
and
xchg
dec
lea
aam
or
fdivrp
clc
daa
aad
jecxz
cmpl
fwait
sti
flds
aad
rolb
sub
iret
in
aam
add
push
or
aam
and
jne
gs
jb
cltd
in
xchg
testl
loopne
push
pop
lods
jg
daa
aam
shr
xchg
int3
pxor
or
pop
out
xor
es
addr16
jns
mov
pop
fucomip
mov
arpl
in
mov
dec
sub
loopne
fcomps
scas
xchg
jno
out
add
data16
int
pop
sbb
mov
adc
xor
xor
mov
xlat
out
addr16
sbb
jne
mov
ja
mov
jb
lock
ret
stos
in
add
in
mov
xor
sub
mov
xor
add
stc
mov
xor
pop
add
in
and
jb
movsl
add
jecxz
jbe
mov
inc
test
in
lods
mov
push
or
push
cld
jmp
xorb
jmp
mov
mov
mov
sub
movsb
xchg
in
mov
sub
cmpsb
shll
orb
inc
add
jne
add
add
add
mov
pop
push
push
popa
aad
sub
ljmp
repnz
jne
mov
clc
mov
inc
lds
icebp
ljmp
xchg
xor
cmp
imul
lcall
call
icebp
xor
call
shll
call
push
mov
mov
sub
add
mov
inc
add
das
or
sub
fdivrs
xchg
int3
js
xlat
aad
mov
mov
or
dec
dec
add
movsl
rorl
pushl
aad
jl
aad
orl
add
xchg
mov
adc
add
xchg
sbb
movl
dec
int3
xlat
aad
add
mov
pop
dec
int3
add
daa
push
dec
shlb
outsb
add
push
lret
fadd
je
push
push
int3
bound
and
add
adc
mov
ljmp
out
ljmp
test
ljmp
mov
test
cmp
sbbl
aam
xlat
out
addr16
out
idiv
sbb
fdivs
jmp
add
cld
jb
cmp
jne
rolb
jne
iret
pop
std
xor
loope
sti
shrd
add
jbe
xchg
test
xlat
out
jge
cltd
jmp
inc
push
out
add
aam
add
dec
das
inc
jmp
mov
dec
orl
loopne
sub
shr
or
xchg
loope
jmp
xchg
out
add
push
roll
jmp
add
aam
ds
xlat
push
jmp
pop
loope
jmp
fucomi
add
mov
mov
lcall
loopne,pt
sub
push
fwait
add
aam
jle
shr
test
out
add
jecxz
add
in
mov
lds
mov
mov
bnd
fisttps
add
add
ljmp
mov
add
sub
push
mov
into
cld
ljmp
in
mov
sbb
add
ljmp
aam
mov
sbb
adc
cmc
stos
jo
insl
xor
add
pop
mov
or
in
jne
mov
or
roll
out
jns
clc
clc
add
mov
shll
xchg
inc
xlat
aad
decl
fiadds
clc
xlat
cmp
add
sti
test
mov
jo
sar
ret
inc
xlat
idivl
mov
lret
aad
das
inc
add
out
push
int
pop
adc
jg
movl
scas
int3
inc
inc
xlat
mov
fsub
cmpl
sub
add
add
inc
inc
xlat
sub
les
out
test
xlat
out
addr16
xor
sbb
ljmp
aas
fwait
addb
cwtl
into
jmp
sub
jae
dec
aad
hlt
cmp
ljmp
mov
lret
pop
ficomps
dec
push
into
ret
fwait
xor
fstpl
into
xor
std
sti
xor
jge
add
and
std
iret
sbb
movsb
pop
fs
pop
mov
add
fbstp
adc
ljmp
out
insl
sbb
add
out
je
mov
jb
ljmp
outsb
jmp
sbb
call
imul
outsb
in
stc
jg
xorl
add
adc
punpckhwd
xor
push
leave
inc
imul
scas
pop
add
xor
sbb
cmp
rorb
xor
push
sbb
or
inc
or
sbb
pop
add
cwtl
ret
mov
add
mov
dec
cmp
inc
mov
xor
xor
decl
mov
mov
hlt
scas
lock
sub
add
lock
inc
lock
add
add
mov
sub
xlat
mov
hlt
ds
ss
out
mov
out
ja
lods
xchg
push
jle
movsl
sbb
jecxz
mov
cld
jne
pop
std
sub
in
xlat
mov
add
movl
pop
push
or
ljmp
movnti
add
xlat
lcall
xlat
movsl
add
mov
pop
inc
cld
das
and
xlat
in
xchg
jno
int3
jp
cmp
fsubs
ret
mov
add
aas
pop
leave
decb
xlat
in
add
pusha
push
incl
inc
in
scas
lds
add
insl
inc
jb
je
inc
das
std
add
jo
dec
leave
mov
add
sub
inc
jnp
out
ljmp
inc
or
out
sub
cmpsb
aas
xlat
out
addr16
popf
repz
test
xlat
fnstcw
mov
insl
cs
xchg
fistpl
sub
fs
and
jmp
push
mov
lret
push
pop
adc
jmp
jecxz
ret
out
ljmp
inc
sbb
add
add
fidivrl
xlat
out
addr16
mov
add
lcall
lods
aam
andb
aam
fdivs
mov
das
add
pop
std
ss
xor
ret
aam
jbe
lea
push
out
sub
popf
fmuls
decb
jecxz
jl
fdivs
pushf
jmp
add
bound
fdivrp
xor
inc
add
fcmovnu
jbe
sahf
ljmp
xchg
cmp
xchg
cmpsb
nop
lret
sbb
ss
das
add
pop
push
inc
shrb
sub
incl
loope
xor
cmpsb
dec
jbe
mov
int3
jge
loop
jmp
in
cmpb
or
dec
repz
sub
pop
mov
inc
add
repnz
jne
mov
pop
sarb
add
cmpb
or
repz
add
sbb
push
cltd
sub
call
lods
jo
mov
ss
cs
jmp
jbe
repnz
add
stos
fstp
int3
stos
pop
lret
or
insb
add
je
cmp
js
call
add
lcall
inc
and
incb
lret
adc
push
inc
int3
xlat
sub
je
pop
cmp
nop
xchg
leave
je
in
and
rcr
or
fildll
les
subb
les
dec
jo
mov
je
out
xchg
push
xlat
fwait
stos
fiadds
stos
lret
add
cmpsl
xlat
jnp
mov
subb
xlat
imul
rclb
xchg
pop
imul
cmp
dec
imul
dec
mov
or
sub
dec
mov
sbb
sub
or
sub
sti
mov
pop
ret
imul
dec
sub
xor
out
mov
dec
inc
xlat
out
out
ret
add
loope
add
shr
add
aam
les
aad
jmp
fisttpl
adc
arpl
les
jns
aad
sbb
pop
cli
cmpsw
shr
pop
xchg
out
add
adc
pop
inc
xor
cld
jmp
aam
jbe
lods
ss
cltd
and
icebp
push
cltd
aam
mov
cltd
data16
mov
cld
adc
inc
std
testb
add
repnz
sbb
inc
sub
aad
shll
and
sub
sahf
add
repz
stos
sti
add
or
dec
mov
jmp
xor
stos
cmpl
sbb
ret
test
out
add
xchg
enter
mov
call
mov
add
mov
or
jbe
sti
cmp
test
mov
mov
std
pushl
call
adc
stos
sti
call
jb
mulb
lds
fdivr
push
xchg
lds
sahf
push
cmp
sub
cld
das
or
xlat
sahf
ret
cli
jp
push
add
xlat
out
adc
add
add
xor
mov
xchg
jmp
fsubs
inc
sbb
je
sub
mov
mov
popf
pop
add
std
lods
push
fdivrl
adcl
scas
out
sub
adc
pop
out
push
xlat
pop
es
das
sub
fiadds
ffreep
repz
stc
push
movsb
ret
add
mov
xchg
add
sub
rep
jg
ret
lock
dec
push
adc
cmp
sub
sub
pop
jb
jmp
jle
pop
aas
ret
inc
out
jge
shrb
arpl
test
or
cmp
push
stos
adc
sub
add
out
ljmp
out
add
jecxz
mov
pop
or
fwait
add
lcall
jmp
xchg
incb
xor
push
cli
cld
xor
shll
jl
imul
pop
lds
push
std
jle
out
jno
xchg
jmp
sbb
pop
bound
loope
sub
scas
loope
pop
sub
pusha
pop
shr
fimull
cli
jb
rorl
add
int
inc
adc
incb
cmp
je
inc
jp
xor
add
sub
lds
cli
mov
incb
push
lds
mov
inc
sbb
add
jle
ret
scas
xor
call
xchg
cli
lea
push
std
ljmp
push
call
loope
jne
scas
jne
xchg
inc
incl
add
inc
std
mov
sbb
incl
scas
sti
mov
cmp
aad
xorl
add
fisubrs
mov
fisubrl
sub
jecxz
gs
or
addr16
int
mov
rol
je
jge
and
push
ret
inc
incl
add
or
inc
xlat
inc
test
xchg
adc
xor
loopne
or
mov
sar
ffree
je
cmp
push
rclb
jns
out
and
test
dec
adc
fucomi
ljmp
imul
pop
insl
lods
loopne
jne
js
dec
mov
pusha
iret
ljmp
iret
ljmp
add
iret
xor
mov
pop
lods
cli
add
sub
sbbb
lods
xchg
inc
test
rcrl
mov
fldt
pop
in
mov
iret
ds
cmp
pop
xor
into
outsl
dec
jmp
add
cmp
add
aam
lret
sub
out
push
jb
jno
sbb
aad
add
aam
shl
add
psubq
jmp
xchg
jno
cmc
aam
adc
lahf
loop
ljmp
cld
mov
sub
aam
xorb
jbe
jo
adc
cli
int
pusha
out
pop
add
fistpll
jge
fs
int
jmp
xchg
cli
call
cmc
int3
jbe
sbb
inc
or
add
jnp
cld
add
push
push
add
lea
mov
inc
movsb
add
scas
jo
or
push
and
or
add
call
addl
adc
orl
add
adc
adc
dec
out
add
testb
push
mov
jmp
insl
or
jmp
cld
jne
push
add
or
jmp
decb
push
sub
xlat
aad
jl
and
adc
or
in
adc
fsubrs
add
aad
stos
or
add
push
pop
or
je
pop
push
jmp
int
adc
test
sub
das
pop
mov
add
add
aad
jl
mov
ret
add
subb
inc
sti
in
arpl
pop
mov
add
outsl
fisttpll
into
inc
test
xlat
out
inc
ss
jmp
sarl
mov
test
lret
ljmp
xchg
add
out
adc
or
cmp
fbstp
fldl
sarl
add
ljmp
idivl
or
out
sub
les
mov
jecxz
and
or
pop
xchg
mov
jle
mov
out
cmc
scas
stc
inc
add
inc
or
sbb
push
rcl
lret
jbe
mov
inc
mov
inc
cli
push
mov
out
add
aam
popa
push
cli
push
fwait
add
pop
test
sub
fst
out
inc
out
leave
ss
je
jns
std
pop
pop
neg
sbbl
cmpsl
ret
test
cld
push
jecxz
jbe
jge
cli
mov
test
addr16
out
jmp
mov
jmp
call
cwtl
add
add
jns
push
add
cmp
out
pop
leave
in
leave
cld
mov
mov
sti
xor
jg
scas
repnz
jmp
pop
mov
add
call
push
mov
nop
in
add
add
lock
xchg
cmp
jge
sbb
mov
fdivrp
jo
jbe
cmp
add
push
sbb
ja
adc
or
add
adc
arpl
mov
add
dec
lcall
xlat
push
xor
sub
fiaddl
ljmp
into
test
aaa
sbb
sub
rolb
mov
fidivrs
arpl
roll
add
sub
hlt
pop
test
mov
in
add
enter
inc
sub
fsubl
or
xchg
pop
pop
push
out
test
xlat
adc
test
xor
add
out
cld
or
out
pop
xor
stos
out
push
pop
mov
shrb
add
mov
mov
inc
xchg
cmpsb
stos
add
add
add
add
jnp
dec
sub
mov
adc
and
lods
dec
inc
in
ret
ret
push
imul
push
dec
imul
out
cld
sbb
iret
jb
dec
enter
daa
lret
stos
iret
out
addb
jne
inc
je
jmp
sub
jbe
jae
inc
lcall
dec
mov
and
add
out
call
es
iret
add
aam
mov
ss
push
imul
push
cmp
cld
repnz
inc
push
push
mov
jle
aam
and
bswap
add
lds
insb
in
imul
push
lcall
jb
mulb
jge
rcl
lret
ret
mov
pop
cld
dec
dec
jno
in
adc
jecxz
cld
je
js
or
fisttpll
push
mov
add
scas
icebp
pop
pop
out
or
dec
js
cmp
push
xorl
jne
dec
add
jle
pop
leave
lods
cmc
add
inc
loope
shl
cs
fwait
and
inc
lock
cld
jne
jnp
or
scas
pop
pop
inc
mov
jl
xlat
sub
add
call
add
iret
hlt
mov
sbb
adc
mov
mov
lcall
or
cmpsb
and
call
mov
mov
pop
mov
je
sub
mov
lret
add
or
push
cmp
je
pop
xor
addl
cld
jae
mov
adc
xor
xlat
out
cmp
add
out
loop
fcoms
stos
push
push
mov
add
inc
hlt
ret
cs
ret
xor
mov
jbe
int3
mov
ljmp
les
or
mov
lock
stos
pop
dec
je
dec
sbb
aam
stos
clc
push
fsubrs
or
aad
mov
dec
cmp
std
scas
xchg
lret
ljmp
add
ljmp
ja
scas
dec
ljmp
pop
les
jl
sub
out
ret
jbe
insb
frstor
test
popf
fldz
cld
cmp
ret
jbe
dec
ss
mov
js
aad
push
add
ret
jbe
imul
inc
sbb
cmp
sbb
cld
and
jbe
and
cld
pop
add
enter
test
testb
std
inc
nop
sbbb
add
push
shll
cmp
push
into
mov
pushf
add
loope
dec
cld
add
jge
sarb
add
cld
jne
pushw
cmp
rorb
ret
arpl
add
out
cmpb
or
and
add
aad
jmp
mov
xchg
lock
aam
push
jmp
ret
mov
jl
adc
push
or
lea
xor
jbe
sub
imul
notb
std
inc
stos
pop
leave
cld
flds
or
add
pop
aaa
out
push
jl
adc
fdivrs
or
mov
jo
inc
adc
scas
add
mov
sub
push
fadd
pop
push
xchg
sbb
inc
loop
add
xchg
xlat
addl
add
aaa
rcr
rcrl
add
cmp
ja
notl
call
lods
adc
sub
or
shl
cltd
add
daa
pop
push
mov
push
in
xchg
cwtl
cmp
sub
add
aam
inc
in
out
popf
pop
mov
andps
mov
negl
lods
scas
mov
xchg
mov
mov
push
test
pusha
lods
sub
jno
pop
sarb
adc
or
test
mov
mov
ss
mov
xchg
fwait
ret
arpl
shrl
mov
cs
add
test
addb
out
add
pop
mov
aad
sbb
icebp
pop
mov
insb
ds
out
or
mov
out
scas
shr
cld
push
inc
rcrb
sarb
notb
clc
add
sbb
mov
icebp
aam
xor
sub
loop
scas
imul
add
add
fidivrs
pop
push
xchg
mov
jmp
aam
jbe
pop
stos
ss
imul
lods
mov
add
ss
add
mov
jne
loope
or
inc
outsb
fisubrl
inc
das
repnz
jne
pop
xchg
xor
stos
mov
push
mov
xor
mov
sarl
add
cs
mov
jge
lock
leave
fcmovu
inc
scas
repnz
jne
pop
xchg
icebp
or
jmp
pop
pop
daa
mov
add
mov
add
add
xlat
sub
or
rol
shll
xchg
roll
mov
rclb
fiadds
or
ret
cmpb
cmp
jg
nop
xor
push
test
add
fiaddl
pop
ret
push
notl
xlat
sbb
lcall
inc
pop
movl
or
jbe
addb
inc
clc
movl
inc
jecxz
add
xlat
jo
negl
add
xlat
out
ljmp
xor
xlat
out
ljmp
xor
shll
ljmp
add
add
lock
mov
imul
inc
pop
jns
out
adc
lret
outsb
jae
testl
inc
data16
push
cld
ljmp
cld
ljmp
mov
jecxz
mov
loope
sti
into
push
incl
test
sbb
pop
mov
inc
data16
sbb
inc
imul
out
inc
jae
pop
xor
enter
and
mov
add
lea
add
mov
lods
adc
fbstp
push
mov
mov
aam
orb
jle
sub
jmp
jbe
out
add
andb
jmp
add
push
je
mov
insb
add
xchg
mov
arpl
sarl
mov
inc
push
and
inc
push
and
xor
or
adc
push
mov
ljmp
xor
push
sub
loop
sti
das
out
mov
out
cld
jne
push
mov
leave
test
jne
xor
fisttpll
out
repnz
ds
inc
int3
fadds
push
faddl
push
add
faddl
repz
dec
incl
xchg
sub
mov
add
jo
shr
mov
add
in
add
lcall
add
cmp
rcrb
mov
pop
mov
je
dec
inc
in
lcall
push
mov
dec
push
mov
jl
testl
loope
outsl
incl
add
cmpsl
je
fildll
pop
mov
sub
dec
inc
mov
fbstp
or
aas
sbb
jmp
xlat
sbb
decl
movl
or
das
daa
inc
xlat
sbb
call
xor
add
inc
mov
out
jmp
fsubrl
scas
inc
xlat
mov
mov
mov
add
add
cld
ljmp
out
ljmp
jne
test
mov
jmp
jmp
adc
mov
test
mov
jne
cmp
push
mov
inc
ret
test
ljmp
mov
mov
mov
sbb
shl
or
mov
adc
xchg
arpl
push
add
rolb
insb
jecxz
add
dec
xor
mov
sub
mov
and
outsl
mov
or
inc
mov
jmp
mov
sub
jmp
repnz
call
add
push
pop
add
push
push
repz
js
jle
push
icebp
or
add
push
repnz
inc
std
cmc
push
shlw
mov
dec
std
out
xor
inc
clc
out
aaa
inc
cld
out
fadds
dec
loop
mov
mov
adcl
cld
ljmp
mov
inc
hlt
outsb
aaa
inc
clc
pop
aaa
inc
cld
fadds
mov
sti
adcl
jne
jne
lods
pop
sub
incl
add
sti
cmp
inc
cs
sti
call
jne
mov
and
mov
out
jae
adc
sahf
add
movl
inc
xlat
push
sub
push
fwait
jo
xchg
mov
mov
pop
push
incl
sbb
mov
push
lea
and
sub
je
sbb
or
inc
pop
ja
push
add
add
add
rcrb
imul
fnsave
or
dec
lcall
shlb
pop
xlat
jno
push
dec
out
sub
inc
sub
mov
aas
add
ljmp
mov
cld
lock
icebp
call
adc
fcomps
cmpsl
test
shlb
mov
inc
out
sub
add
js
pop
dec
push
mov
shlb
add
out
stos
xlat
cmp
fcoms
sub
mov
pop
aas
imul
das
ffreep
in
dec
push
cmp
andb
std
push
xor
add
in
add
adc
mov
aad
mov
icebp
dec
leave
pop
jnp
stc
call
cmp
mov
add
or
mov
add
mov
push
sahf
mov
mov
loop
cmp
stc
ret
lret
mov
stc
ret
add
jmp
push
repz
push
xor
jmp
dec
lods
or
or
out
cltd
xor
or
inc
push
std
push
push
mov
jle
aad
add
and
out
mov
pop
std
jne
push
outsl
pop
cmp
add
xor
mov
lea
jne
push
cvtdq2ps
cmp
in
scas
jne
push
jg
decl
hlt
add
loope
clc
mov
cmp
mov
mov
mov
cmp
out
push
xchg
sti
jne
xchg
leave
lea
sub
lea
orb
jne
leave
xlat
or
add
xlat
imul
xlat
push
mov
push
or
mov
pop
lahf
xor
mov
dec
mov
adc
mov
add
rolb
and
push
int
rol
cmp
mov
mov
sbb
daa
jo
pusha
mov
xor
lea
mov
add
mov
test
push
lock
out
pop
lahf
decb
out
outsl
scas
lock
ljmp
out
or
jecxz
loope
ret
out
push
inc
mov
sub
out
sti
pusha
mov
mov
adc
jno
adc
jl
inc
sub
fildll
ljmp
mov
call
add
jecxz
add
cmp
stos
sub
out
ljmp
out
push
pop
lret
inc
or
mov
add
inc
mov
pushf
fadds
enter
aaa
mov
and
call
andb
mov
loope
and
ja
inc
fucomp
sbb
sub
scas
jbe
cmp
std
movb
aaa
mov
mov
fstl
jmp
sbb
adc
push
and
mov
inc
arpl
fadd
sbb
aam
mov
loope
daa
pop
dec
aaa
cmpsb
mov
mov
imul
xchg
jmp
xor
fmuls
call
out
push
loope
or
in
sti
incl
add
mov
add
daa
inc
add
xchg
dec
sub
ljmp
ds
cmp
mov
sub
push
xchg
sbb
decb
clc
inc
aad
call
jp
inc
mov
dec
gs
stos
mov
jne
pop
jbe
add
scas
dec
xor
popf
je
aas
arpl
add
into
rcr
cmp
in
xchg
sub
mov
fwait
pop
pop
pushf
addr16
sub
call
sub
stos
lahf
test
jle
fwait
enter
push
pop
les
add
push
sbb
jmp
dec
cld
outsl
aaa
inc
inc
xlat
test
or
je
cld
shlb
incb
add
out
outsl
scas
push
mov
sub
sbb
or
inc
sahf
and
shrb
xor
sahf
jmp
inc
popf
imul
sbb
xchg
sarb
and
aam
popf
mov
es
scas
out
sbb
and
stos
sbb
popf
dec
xor
sub
xor
add
and
stos
sbb
mov
fwait
mov
push
repnz
xchg
dec
cmp
inc
or
adc
jmp
scas
aas
add
push
lods
push
outsb
sar
enterw
popa
lods
cld
inc
push
dec
std
dec
pushf
scas
or
push
movsb
push
ret
aam
cmp
shl
xchg
pushf
stos
cld
jo
stos
mov
cli
inc
jmp
loopne
mov
add
scas
jne
add
ljmp
test
imul
xor
xchg
xorl
push
push
cmpsb
leave
imul
and
lods
cld
xchg
jmp
and
add
cld
cmp
int3
inc
push
cld
jne
pop
jne
cmp
dec
pushl
imul
insb
loopne
sti
call
test
in
mov
add
sbb
jne
mov
out
push
ljmp
out
ret
push
mov
xchg
push
push
shll
inc
scas
repnz
call
into
xchg
into
xchg
inc
lods
cmp
pop
xlat
sbbb
dec
test
cmp
outsl
mov
adc
add
mov
xchg
or
out
into
inc
inc
xlat
subb
xchg
fs
outsl
shll
pop
popf
shlb
inc
clc
dec
sbbl
das
adc
clc
mov
mov
xchg
je
cs
orb
incb
pusha
xchg
sti
movsb
push
pop
loopne
mov
add
xchg
adc
add
test
sbb
mov
out
sbb
xchg
or
aad
jg
mov
xchg
dec
jmp
jmp
out
push
jo
stos
sub
stos
add
xchg
mov
ret
int
stos
lds
jle
mov
jmp
inc
push
jmp
and
rep
mov
fcompl
or
aas
test
mov
fldenv
add
shl
jmp
ds
scas
add
push
nop
add
fiaddl
aam
push
mov
fistl
sarl
test
addr16
aam
inc
inc
pop
and
push
movsl
inc
std
ss
xor
shlb
std
push
loopne
addr16
xor
clc
mov
add
shrl
inc
jmp
pop
test
jmp
test
add
add
xchg
jno
adc
jmp
in
fiadds
pop
shrb
in
pop
xor
jne
push
inc
push
call
xchg
adc
in
incl
add
jnp
sub
xchg
or
jmp
mov
sub
cld
call
clc
jmp
jne
push
pop
push
and
jne
push
xchg
pop
xor
jne
pop
testl
rorl
test
sbb
push
into
ror
xor
mov
xchg
shlb
lcall
add
cld
xchg
incb
lock
mov
xlat
xor
addr16
inc
add
xor
pop
pushl
aad
push
das
jl
pop
int
ror
sub
push
add
mov
sub
pop
add
xchg
mov
inc
xlat
out
cmp
lea
int3
xchg
cmpxchg
add
mov
insl
loop
adc
xchg
xor
movsl
jno
lret
sbb
xchg
dec
testl
or
sbb
xchg
and
push
aaa
nop
movsl
pop
xchg
add
movsb
xor
xor
aam
xchg
mov
pop
outsl
testb
sti
push
roll
out
mov
xchg
mov
jmp
inc
fs
fcoms
movsl
jbe
add
insb
or
push
xchg
bound
bound
jo
lds
sbb
roll
adc
movsl
jbe
jl
cld
xchg
push
and
dec
movsl
cld
adc
jp
outsb
inc
movsl
jbe
push
or
inc
std
push
mov
in
push
pushf
push
rcl
sbb
shl
jmp
jo
add
mov
inc
jmp
sti
push
inc
add
inc
sub
cs
ficomps
hlt
and
out
dec
mov
add
cmc
stc
jmp
jns
push
and
add
cld
popf
scas
mov
repnz
add
jnp
cld
sub
or
rcr
lcall
add
mov
in
arpl
push
xchg
out
addr16
sbb
or
push
push
in
mov
sub
outsl
cmp
imul
in
inc
sub
xchg
or
mov
jne
dec
aad
and
lea
xchg
lahf
mov
xlat
mov
clc
lock
out
xor
out
sti
nop
rol
sarb
add
sub
push
inc
aas
push
add
js
addr16
inc
add
jecxz
inc
xlat
adc
or
or
mov
inc
add
daa
dec
inc
xlat
sub
dec
mov
jg
decb
pushf
imul
das
jmp
addr16
add
fcompl
iret
mov
addb
and
dec
xchg
out
fcmovnu
xchg
xlat
sub
add
iret
xor
pop
sub
xor
sub
dec
push
out
mov
add
jmp
xchg
mov
and
and
push
inc
push
and
or
rolb
xchg
pushf
xchg
or
inc
aaa
and
lcall
pusha
mov
cld
mov
mov
xchg
pusha
mov
dec
push
add
inc
mov
ljmp
mov
jmp
fsubrp
lcall
enter
mov
xchg
jmp
scas
call
mov
cmp
pop
mov
xor
adc
mov
dec
outsb
data16
gs
stos
inc
test
push
add
aam
jmp
add
add
aam
jmp
jo
ds
pop
add
shrb
push
push
aas
inc
inc
ds
jne
test
jns
jg
sbb
mov
jne
test
ljmp
cld
leave
add
push
jge
or
mov
inc
cld
inc
mov
sub
ljmp
pop
sub
leave
cmpb
add
mov
pop
fdivrp
incl
add
add
sub
jg
aas
add
sub
outsl
adc
lcall
dec
push
push
rorb
inc
add
shlb
mov
mov
mov
add
stos
or
adcb
xor
xlat
cmp
orb
mov
std
inc
add
add
add
mov
xor
shlb
and
jo
pop
test
clc
mov
xlat
xchg
inc
xlat
out
mov
out
lcall
dec
insb
loop
dec
popa
sahf
cmp
lret
loop
jae
mov
sub
repz
loop
xchg
out
mov
nop
push
jmp
sub
mov
add
and
fwait
notl
fmull
icebp
or
pushf
xorl
mov
scas
ss
xlat
ds
cltd
and
ljmp
out
cmp
sub
add
pushf
jbe
pop
and
push
lret
aas
std
pop
test
inc
mov
setg
mov
sahf
cld
loop
add
xor
lcall
cli
outsl
cmp
mov
xchg
and
pop
pushf
jbe
push
and
sarl
xor
cmp
pop
push
cmpsb
mov
lds
stc
inc
rorl
inc
cmpsb
call
pushf
cld
pusha
sbb
imul
lock
jp
push
stc
imul
add
add
cli
push
jne
jnp
and
and
lcall
dec
push
lock
mov
add
add
call
mov
or
clc
mov
jne
sbb
cld
pushl
scas
add
ret
adc
push
adc
std
jne
ja
push
jns
mov
add
add
xlat
je
addr16
inc
add
cltd
inc
inc
xlat
sbb
or
push
decl
mov
sahf
movl
fwait
sub
dec
dec
lea
dec
mov
push
xor
je
in
adc
das
and
lcall
pushf
push
sbb
sbb
incb
xchg
mov
roll
add
lock
out
repnz
outsl
sbb
inc
xlat
scas
or
xlat
xchg
mov
xor
mov
incl
pusha
and
push
adc
std
repz
decl
add
jno
jae
ljmp
xchg
adc
cltd
mov
mov
popf
xchg
and
fwait
imul
sub
mov
xchg
cmp
lcall
in
insl
scas
mov
das
jmp
arpl
push
add
and
xchg
lret
adc
add
aam
add
xchg
xor
jmp
pop
fwait
push
je
xchg
push
adc
push
mov
adc
cld
aam
int3
inc
jmp
pop
sbb
jmp
add
pop
cltd
jo
fldenv
push
ds
mov
pop
and
cs
cld
lahf
cmp
jae
pop
and
add
cld
push
out
cltd
dec
add
add
jge
insl
cmp
out
cld
pop
dec
cwtl
push
sahf
or
scas
add
add
lock
jns
stc
add
jle
ljmp
pop
inc
cld
outsl
add
push
cli
add
add
jo
jne
cli
add
je
and
or
mov
push
call
adc
clc
aaa
cli
add
jne
data16
icebp
out
push
cli
add
cwtl
nop
cld
pushl
out
call
mov
jmp
xorl
jae
gs
adc
stc
call
loopne
shlb
mov
fistpll
daa
add
add
ret
aam
in
testb
dec
daa
jle
dec
mov
js
mov
xor
add
ss
jl
inc
sbbb
mov
push
jne
pop
dec
mov
ret
hlt
jmp
loope
push
push
ret
xchg
test
jne
push
sub
adc
add
mov
jecxz
ljmp
ljmp
xchg
cmp
pushf
jl
movsb
xchg
scas
jmp
aam
ljmp
xchg
adc
xor
fwait
movsl
xchg
jae
dec
sub
xchg
xchg
arpl
outsl
pop
jns
push
out
inc
les
dec
jge
xchg
push
xchg
mov
mov
lods
inc
add
xlat
xchg
cmp
popf
xchg
sub
outsb
pop
and
ljmp
jno
je
xchg
or
xchg
cld
jmp
in
add
pop
sbb
bound
leave
cwtl
jae
jmp
stc
out
cmp
sub
xchg
test
or
je
push
mov
xchg
mov
pop
test
add
xor
pop
sub
movsb
pop
pusha
lahf
mov
aam
fs
dec
xchg
sub
jmp
xchg
mov
add
aam
inc
xor
sti
sub
jo
jge
flds
orb
fdivr
in
incl
js
cld
or
jne
jae
and
jae
dec
imul
add
add
jb
dec
push
jne
jae
dec
dec
push
inc
push
fucomi
nop
jecxz
sti
pop
call
lds
push
testb
cwtl
in
cmp
mov
js
std
or
add
stc
xchg
mov
not
les
scas
test
out
push
jle
inc
xchg
test
decl
test
incb
add
cmp
xchg
addl
ret
ret
hlt
pop
add
jge
dec
test
ja
mov
movb
pushl
inc
xlat
hlt
popf
jne
test
or
mov
sub
add
lds
mov
fdivr
mov
xlat
out
ljmp
add
out
or
ss
cmp
sub
xchg
jmp
out
and
bound
stc
fcoml
push
adc
mov
aam
adc
push
rcll
andl
fwait
stc
int3
xchg
inc
loope
mov
leave
mov
ljmp
ljmp
in
out
rolb
add
pop
aam
insb
cmp
xchg
lcall
xchg
jmp
repnz
sbb
add
sub
sub
jl
push
push
and
notb
push
cmp
push
ficoms
xchg
pop
nop
cld
rcr
std
addr16
sbb
xchg
mov
sub
in
icebp
mov
hlt
mov
add
add
adc
pop
in
jle
nop
cld
hlt
loopne
out
mov
in
cwtl
cld
push
push
mov
xchg
push
call
jne
add
mov
mov
shl
shrl
movsb
inc
add
push
call
jne
add
push
add
rorb
cld
ljmp
loopne
add
out
dec
incl
xchg
push
push
inc
lcall
cmp
adc
jle
dec
inc
scas
ljmp
add
sti
jmp
addr16
xlat
cmp
inc
xchg
test
cmp
call
pop
add
and
xchg
mov
xchg
xlat
test
push
add
mov
decl
je
lock
call
mov
or
xor
adcl
je
add
cmp
mov
icebp
jmp
mov
add
shrb
adcb
je
insl
dec
dec
jo
xorb
aad
outsl
push
mov
ja
pop
and
cmp
add
rolb
sub
and
repz
adc
adc
js
popl
neg
xchg
stc
mov
mov
xchg
jmp
jmp
and
mov
rorl
ret
jg
xchg
mov
mov
mov
jg
add
jg
mov
mov
test
inc
lcall
add
in
pop
loopne
cld
aam
lea
mov
mov
push
clc
cmp
ss
cli
inc
lea
adc
add
mov
jns
push
xchg
mov
das
add
popa
add
shll
scas
jne
mov
add
add
inc
mov
or
mov
add
out
add
fdivs
add
std
das
std
adc
push
sub
mov
cld
mov
jmp
add
xor
inc
in
cltd
loope
jg
cld
jne
sbb
dec
cltd
or
rolb
in
mov
dec
insl
mov
or
dec
out
jge
out
test
mov
add
addl
xor
add
ret
dec
cltd
or
inc
out
repnz
xor
jns
add
outsl
sti
inc
or
xlat
xchg
call
decb
jle
fnstsw
jg
stos
shrb
inc
xlat
sbb
pop
outsl
fistpll
pop
sahf
add
xlat
adc
and
inc
xor
hlt
pop
aas
add
sub
aas
add
dec
mov
add
push
shlb
test
add
cld
hlt
pop
out
push
enter
sti
push
inc
jno
xchg
xchg
add
pop
inc
call
sbb
add
add
add
xchg
cmpl
xchg
test
loop
cmpsl
sub
pop
push
jmp
inc
mov
jmp
enter
xlat
out
addr16
fsubrl
add
sti
outsb
xlat
out
ljmp
add
mov
fildl
push
leave
aas
sub
push
add
add
push
je
xchg
out
nop
add
loope
sub
or
jnp
sti
data16
out
ljmp
mov
jb
sub
fdiv
rcll
outsl
ror
jne
in
pop
add
mul
sbb
out
add
add
jl
inc
sub
mov
mov
add
loope
or
out
cld
jmp
int
out
aam
cld
xchg
popa
mov
les
repnz
jmp
xchg
inc
xor
lea
repnz
add
shrl
cld
jmp
jl
movsb
js
push
fsubp
mov
sub
cmc
rcr
add
add
scas
in
mov
popf
sti
jne
add
in
jno
shrb
repnz
ljmp
add
repnz
in
cld
jne
add
nop
mov
or
cltd
push
jnp
in
xchg
mov
mov
popf
sti
jne
fwait
cld
imul
sub
adc
and
in
add
mov
mov
roll
or
jge
ljmp
jmp
jnp
cld
jne
push
jbe
xlat
lods
lret
inc
sarb
dec
mov
jp
mov
or
icebp
add
jmp
orl
xchg
jns
xchg
dec
js
xchg
or
repz
subl
outsb
std
pop
adc
push
sub
xlat
and
testl
jns
add
xor
in
pop
aas
cld
mov
enter
push
pop
cli
add
jmp
je
clc
or
inc
xlat
in
sbb
xchg
or
test
out
ljmp
out
mov
add
adc
in
test
jmp
mov
jp
outsl
mov
xchg
js
mov
or
add
push
add
in
ljmp
mov
pop
aas
scas
js
push
pusha
push
push
jno
jo
xchg
js
jne
push
sub
and
jle
xchg
dec
xchg
sub
adc
xchg
imul
add
push
mov
push
fistl
iret
es
xchg
pushf
pop
jge
into
inc
mov
in
pushf
test
pusha
add
push
lcall
and
cmp
sahf
or
inc
jmp
loopne
xchg
rcll
aad
sbb
cld
push
enter
adc
cld
jo
xchg
hlt
ss
add
subb
mov
fstl
addb
insb
ret
dec
add
std
mov
insl
inc
call
add
add
cld
cld
jae
xchg
cld
lcall
sbb
mov
adc
ljmp
add
xchg
inc
sti
ljmp
call
jne
sbb
inc
imul
cld
lcall
add
and
loopne,pt
jmp
sbb
mov
adc
decl
inc
sti
jmp
cld
sti
jne
sbb
add
mov
adc
call
out
cmpsl
inc
clc
repz
out
jbe
pushl
mov
jmp
xchg
jbe
push
jbe
enter
rcrb
push
outsb
test
testb
jbe
mov
jbe
jg
mov
imull
jae
js
in
sti
jg
sbb
xlat
ds
pop
xlat
loop
jmp
dec
jns
xlat
lahf
incb
add
jge
test
xor
test
push
add
mov
mov
jbe
fucomip
adc
push
jmp
into
dec
xchg
addr16
in
jge
dec
loop
xlat
imull
out
aam
sub
xlat
sbbl
flds
add
imull
pop
xlat
jne
jl
stc
ret
sub
or
adc
add
add
cmp
imull
jo
out
insl
mov
pop
xchg
mov
inc
int3
rolb
out
xchg
je
testb
addl
repnz
fcoms
cld
add
pushf
addb
addl
arpl
mov
dec
sti
or
faddp
inc
jbe
add
cmpsb
mov
fst
jae
mov
cld
out
mov
cmc
rcr
mov
jbe
and
xchg
add
inc
jge
cli
std
xchg
cld
hlt
in
mov
hlt
mov
mov
in
das
add
aam
roll
imul
cwtl
cs
add
aas
out
jmp
add
add
push
fimull
add
cmpsl
in
imul
add
scas
xchg
jmp
add
inc
lcall
call
mov
jbe
test
dec
inc
scas
and
add
pop
xchg
push
mov
in
or
imul
cmp
fisttpll
fdivs
in
mov
aaa
std
call
sbb
lcall
add
mov
shrb
xor
inc
sti
push
adc
pop
call
cmpb
outsl
call
dec
outsl
decb
jo
mov
popf
add
add
or
pop
aam
test
sbb
rol
jmp
scas
fisttpl
dec
aad
roll
push
xchg
add
xor
insl
inc
push
xchg
sar
add
ljmp
out
lret
push
out
sub
inc
sbb
push
stos
push
fidivs
push
mov
in
xchg
jg
jnp
add
adc
loop
xor
sbb
rclb
orb
stc
repnz
inc
cmp
jo
ljmp
out
push
imul
test
jo
add
fcoms
cltd
jg
inc
aam
adc
dec
mov
jle
cmpl
jmp
mov
rclb
out
inc
leave
imul
cmpsb
adc
jmp
rolb
ret
aam
add
aam
inc
xor
popl
stc
or
add
xchg
sti
push
add
add
cld
inc
sub
add
sub
dec
out
cmp
mov
sub
cmp
dec
into
cmp
mov
test
std
mov
jle
sub
add
call
jo
mov
data16
fiadds
imul
sub
mov
xchg
inc
decl
or
push
dec
outsl
repnz
mov
add
mov
mov
incl
or
cld
ds
out
cld
mov
mov
incl
loopne
mov
add
fwait
inc
inc
scas
or
fsubs
cld
call
jp
adc
adc
lcall
mov
xlat
jecxz
andb
jae
pop
xchg
popa
push
ret
dec
or
je
add
pop
imul
aas
sub
mov
mov
adc
aas
inc
imul
add
add
imul
aas
lock
mov
jecxz
loopne
adc
dec
inc
imul
mov
outsb
mov
popf
outsb
mov
outsb
test
mulb
popf
xlat
aas
nop
inc
outsb
je
dec
mov
mov
mov
add
add
repz
out
xchg
insl
imul
loope
jl
insl
mov
insl
dec
xchg
roll
mov
test
cmp
test
sub
sub
xchg
das
cmp
adc
jne
jl
xor
inc
adc
xchg
shr
or
call
jnp
test
jl
xlat
out
and
out
cmp
outsl
add
ds
inc
mov
loop
les
mov
inc
fldenv
inc
jmp
xchg
jnp
xchg
add
xchg
popa
repz
aad
add
jbe
jl
insl
mov
or
mov
add
push
ja
jmp
or
div
jnp
mov
cmp
sub
add
add
push
xor
jae
or
sub
test
jmp
mov
out
add
xchg
into
push
xor
add
addb
filds
add
or
jnp
add
cmp
add
mov
out
addr16
repnz
repnz
mov
sti
ljmp
jbe
cmpl
add
add
jno,pn
cmpsl
sub
add
xchg
mov
jne
push
rolb
add
test
leave
add
ret
add
test
std
sti
call
fnstsw
pushl
xor
mov
test
addr16
and
mov
outsl
incb
mov
dec
imulb
addr16
outsl
addr16
add
pop
jo
test
push
rorb
das
jo
xor
repnz
aas
sub
out
xor
pop
fldt
or
jmp
inc
add
inc
das
jo
lock
icebp
pop
dec
mov
jecxz
out
addr16
xchg
lahf
subl
mov
insw
fs
lahf
mov
add
add
cs
dec
xchg
mov
jns
sbb
imul
mov
push
out
neg
push
cmp
out
mov
movsl
pop
sub
add
adc
mov
ficoms
shll
imul
mov
out
into
in
icebp
ja
pop
loope
adc
fiadds
push
cltd
ja
imul
add
ja
jl
xchg
pushf
sbb
in
das
jns
push
ret
xchg
add
js
je
cmp
out
add
shl
cld
cmpsb
pop
cmp
xchg
js
sbb
cmp
cld
in
addr16
movsb
cmp
scas
inc
aad
mov
xchg
aam
ja
and
out
jmp
add
add
cld
sub
mov
jg
cld
pop
fs
jl
inc
add
push
cld
mov
sti
call
bound
test
push
cld
call
mov
testl
or
decl
jnp
sub
cld
mov
push
cld
incl
cmp
dec
push
inc
clc
push
or
lcall
jbe
inc
adc
cs
or
add
lahf
xchg
mov
cwtl
dec
incl
jp
or
push
cld
jne
lcall
pop
roll
insl
std
dec
or
ja
xchg
xchg
add
xchg
inc
repnz
pop
xchg
repnz
xchg
mov
push
dec
stos
jg
fwait
mov
mov
add
arpl
add
stc
lahf
vminsd
cmpb
fcmovnb
addr16
mov
out
xlat
xchg
mov
push
ds
xchg
fsubrs
mov
push
adc
clc
out
stos
arpl
out
cli
and
clc
das
push
inc
push
out
in
bound
movsl
scas
push
fnstenvs
xorb
addr16
pop
loopne
jmp
adc
aam
xor
push
xchg
cli
repnz
dec
mov
gs
sub
mov
push
cs
stos
and
ret
push
push
je
inc
aad
faddl
andl
and
out
rolb
inc
mov
adc
jo
mov
add
int
das
add
add
jmp
push
add
lock
pushf
fmull
lret
out
push
jb
jno
cmc
mov
jmp
stos
mov
cmp
sub
imul
jb
or
sub
outsb
cmp
push
add
or
jmp
rcrb
pop
mov
sub
mov
test
adc
dec
outsb
inc
jmp
mov
je
push
jmp
cld
push
add
jg
inc
imul
dec
sti
inc
or
scas
out
jne
mov
clc
decl
in
add
cld
pop
xorb
in
sub
cwtl
cld
imul
cmp
andl
mov
ret
inc
add
int
je
adcb
outsb
jnp
jmp
jno
cwtl
add
dec
add
popa
push
dec
push
out
dec
inc
cs
jne
push
arpl
or
lret
xchg
stc
xchg
sub
clc
mov
aaa
fdivrs
fwait
lret
pusha
je
fbstp
pop
sahf
lds
add
std
jno
fwait
jae
ljmp
push
pop
je
out
sarb
test
lea
mov
push
mov
fildll
mov
flds
outsl
mov
inc
add
mov
jmp
dec
pop
push
out
dec
ds
xlat
pop
add
inc
inc
inc
xchg
add
mov
pop
je
out
jae
mov
dec
sbb
out
push
out
mov
imul
ljmp
jo
fcom
xchg
shlb
cli
sbb
add
mov
pop
inc
xor
mov
xlat
out
ljmp
out
inc
ret
jmp
hlt
gs
pusha
add
mov
push
mov
ret
test
push
add
xlat
iret
cmpsl
sub
add
adcl
and
add
mov
add
pop
lods
sbb
sbb
bound
loopne
mov
add
shr
add
or
mov
outsl
cld
jmp
push
cmp
jmp
fwait
cs
test
cld
mov
and
jmp
xchg
outsl
in
mov
out
add
push
lods
and
jmp
paddsb
out
divl
jb
jae
mov
in
add
inc
movsb
fsubrs
shll
add
sub
mov
add
jl
or
mov
sbb
jmp
popa
leave
add
leave
push
jne
in
or
add
std
sub
jne
lods
mov
or
xor
imull
incl
add
out
inc
or
ret
rolb
mov
jl
scas
inc
test
testl
les
xor
idivl
lock
add
add
xchg
addb
int
or
outsl
jp
xlat
push
mov
iret
jg
xor
in
inc
das
sbb
decb
push
decb
push
add
pop
lods
hlt
incb
xchg
stos
sbb
push
outsb
inc
lret
decl
push
addb
je
jg
dec
push
pop
pop
je
out
nop
or
add
xlat
push
pop
shlb
xchg
add
push
add
add
ret
xor
mov
mov
fistl
out
ljmp
jecxz
imul
mov
notb
sbb
scas
ljmp
insl
imul
mov
fcomp
push
rcrb
insl
dec
fcomp
push
ss
stc
insb
addb
ljmp
pop
addr16
add
loopne
in
adc
adc
xlat
das
or
sti
add
rclb
sbb
out
ljmp
xlat
add
pop
out
ret
insb
lret
or
ljmp
arpl
loop
insb
or
mov
cld
jmp
fwait
insb
mov
ss
jge
aam
inc
adc
add
aad
cld
add
insb
jbe
insb
mov
inc
lcall
jmp
insb
addr16
es
rcll
cld
xchg
shrb
icebp
sub
cld
adc
loope
and
rcrl
fisubrs
imul
adc
jmp
xlat
and
and
pop
shrb
and
lret
add
push
movsl
cmp
push
test
sub
inc
ljmp
imul
lcall
add
mov
mov
shll
es
cmp
jmp
andl
pop
sarb
cmp
jb
xchg
add
out
add
mov
scas
add
dec
ja
push
jbe
add
xlat
inc
pop
je
add
cmp
pop
outsl
cli
pop
jo
inc
je
mov
push
call
fcoml
or
lret
pop
cmp
enter
push
pop
je
ret
cmp
inc
add
out
popf
push
adc
add
dec
addr16
push
xchg
decl
mov
push
addb
cmp
jne
fcmovb
jmp
lock
xor
out
ljmp
jnp
push
adc
push
jno
ret
jmp
in
scas
ljmp
out
ljmp
out
ljmp
pop
adc
jae
int
div
push
jmp
add
push
mulps
imul
add
rcrl
pop
fldl
lock
jmp
add
and
mov
jb
enter
int
ljmp
sub
shrb
out
jne
leave
inc
jne
loop
jne
jp
mov
mov
add
inc
mov
mov
repz
std
scas
dec
sub
push
jb
outsb
lds
push
push
cmpsb
sbb
sti
add
aad
cld
ss
adc
push
sub
notb
jns
pop
popf
push
xor
fidivs
call
xchg
es
test
out
add
sti
push
push
mov
ljmp
daa
divb
js
jns
out
loopne
mov
fcomps
fs
movsl
sub
mov
mov
incl
add
fwait
in
jne
add
jl
sti
inc
mov
dec
sti
call
cmpsl
call
inc
subl
lock
test
jae
lcall
pop
add
test
sti
jmp
addr16
xlat
cld
or
pushl
push
adc
enter
nop
pop
mov
mov
add
push
push
or
push
add
loopne
inc
decl
push
push
scas
or
inc
xlat
fiaddl
dec
das
mov
add
fadds
jge
mov
scas
movsb
or
push
mov
mov
or
imul
mov
add
out
test
push
shll
arpl
push
test
mov
cltd
pop
xlat
mov
in
mov
rcll
push
sbbl
gs
sub
mov
push
pop
gs
nop
inc
mov
push
inc
stc
stos
iret
add
out
xchg
pop
shr
ljmp
fs
imul
add
rolb
out
dec
nop
sub
inc
push
jo
adc
loopne
add
insb
mov
jmp
and
adc
std
push
and
jmp
push
pusha
sti
testb
add
adc
out
xchg
jmp
fs
cld
and
lret
jns
push
push
imul
and
add
imul
or
mov
js
add
out
add
jl
xor
mov
push
imul
sub
rorb
jne
mov
xchg
arpl
add
out
jmp
mov
jne
ljmp
shlb
add
and
add
jne
jo
add
das
cld
incb
add
mov
add
outsb
push
add
push
jmp
out
add
jno
in
call
mov
lock
xor
xor
ljmp
mov
add
pop
cld
sub
add
xlat
adc
stos
dec
xchg
push
mov
hlt
dec
add
insl
push
ljmp
push
call
incb
imul
add
fcoms
mov
fs
dec
push
pop
push
push
ljmp
outsl
mov
pushl
push
je
inc
int3
push
xlat
push
test
xchg
and
xchg
nop
mov
sbb
das
std
pushl
aad
or
jg
push
xlat
push
sti
mov
pushf
out
test
or
out
filds
std
rolb
add
inc
fld1
popa
mov
jo
add
rcl
ljmp
pop
aad
mov
pop
aad
test
lgs
aaa
daa
mov
enter
xlat
sub
ljmp
xlat
jmp
push
pop
or
jno
dec
popa
mov
fdivs
jne
scas
xchg
sub
scas
push
add
test
xchg
gs
add
out
shrb
aad
sbb
aad
insb
ds
add
add
addb
inc
jmp
sbb
lret
inc
jmp
insb
jg
dec
subl
jmp
and
cld
jmp
aam
add
push
push
rcl
add
pop
jbe
push
sti
fcoml
xchg
pusha
pop
test
add
adc
cmp
out
add
in
or
stc
jmp
mov
pusha
mov
repz
lea
fwait
sti
jne
mov
cld
jne
mov
cld
or
mov
in
push
cmp
adc
or
inc
sbb
mov
in
call
mov
jne
insl
mov
add
add
jle
jne
gs
cld
cmpsb
testb
jle
mov
mov
mov
filds
mov
add
jg
inc
add
add
push
aam
push
xor
sub
aam
xlat
rcll
add
test
sub
pushf
aaa
ret
push
adc
inc
decl
push
pop
adc
incb
add
lock
xlat
addl
add
test
test
push
and
nop
roll
dec
cmpb
js
pop
flds
or
inc
add
and
jmp
push
std
dec
lea
add
jmp
ljmp
pop
addl
ljmp
mov
and
arpl
add
sbb
out
pop
jns
pop
dec
dec
int
xrelease
ljmp
insl
ljmp
pop
sbb
mov
ljmp
out
ljmp
push
gs
mov
ljmp
or
add
cs
lods
popa
jecxz
dec
ret
cmp
and
inc
cmpsb
dec
popf
sti
cmpsb
add
mov
jmp
lcall
not
inc
pop
out
out
or
xchg
pop
cld
data16
or
push
cltd
insb
push
pushf
ret
scas
add
dec
pop
ds
pop
jmp
cs
fs
adc
add
xor
and
jmp
rcl
pop
cld
fiadds
add
mov
jmp
add
lods
push
leave
jge
xchg
mov
in
out
cs
add
jg
cltd
cld
inc
add
inc
or
out
jbe
adc
mov
cld
out
out
add
mov
out
add
cmp
inc
or
add
mov
out
add
inc
xor
push
inc
xor
push
add
xor
push
push
stos
lea
mov
add
cs
out
mov
outsb
jge
jle
or
xlat
inc
add
xor
sti
pusha
adc
lret
je
shrb
jb
jge
inc
sub
call
faddl
push
shrl
xor
rorl
test
mov
add
mov
mov
adcl
jmp
orb
je
mov
call
lock
incl
out
inc
dec
jno
addr16
insb
out
pop
std
popa
in
dec
ret
lea
xlat
out
adc
xor
call
sub
idiv
push
sbb
sbb
add
daa
jg
stc
lahf
loopne
jns
xlat
out
push
and
pop
cmp
rcrb
mov
or
inc
pop
xlat
out
filds
hlt
adc
xlat
out
ljmp
out
add
push
push
fcmovnb
fldl
fldl
sub
add
in
xor
aam
cld
cmp
inc
push
sub
jo
jl
call
pushf
test
add
aam
imul
ja
add
jmp
mov
jmp
xchg
push
push
rcl
pushl
or
push
sub
mov
xchg
xor
fldenv
add
add
add
ljmp
scas
inc
cld
jle
add
sti
xchg
clc
push
adc
addr16
cmp
decb
cmc
inc
add
repnz
jno
aam
cs
add
repz
add
jmp
jae
inc
loopne
inc
add
mov
ret
inc
xchg
add
scas
inc
in
out
jmp
add
jmp
jae
cld
incl
add
mov
cs
jmp
rcl
call
je
lock
repz
push
mov
push
inc
inc
inc
mov
cmp
adc
dec
je
sub
fiaddl
pop
push
or
and
out
xchg
dec
push
dec
xor
je
js
shl
push
push
sar
sbb
inc
add
push
pop
std
incb
add
mov
dec
je
lods
inc
add
inc
inc
xor
adc
stc
test
add
pop
out
cld
out
loopne
push
adc
xor
push
test
ljmp
out
shlb
pop
sbb
inc
cmp
dec
push
xchg
out
inc
arpl
scas
ljmp
add
sbb
and
ficoms
into
push
sbb
add
mov
dec
jnp
lock
rcl
mov
pop
stos
add
dec
adc
movb
in
scas
add
sbb
aaa
cs
or
xchg
push
fs
scas
add
adc
in
testl
sbb
sub
push
cld
repnz
adc
pop
cmpsb
xlat
dec
dec
sub
out
add
aam
add
aam
jmp
mov
test
std
call
pop
pop
push
xchg
adc
fildl
jmp
out
or
mov
inc
jmp
xchg
sub
or
add
aam
add
sbb
add
mov
fs
leave
sub
out
sar
out
push
mov
add
aaa
add
outsb
lock
jb
mov
push
mov
mov
leave
mov
mov
add
add
xorl
jmp
call
push
repnz
stos
in
dec
stos
sti
addl
inc
inc
out
jne
jge
shrb
scas
ljmp
xor
cld
sti
pushf
sub
lock
add
xlat
lds
int3
movsb
inc
out
test
into
call
or
rolb
sub
hlt
push
orb
pop
ljmp
insl
divb
jo
add
xlat
xor
insb
incb
push
cli
mov
inc
xlat
sub
je
push
push
push
sbb
sbb
push
cli
lds
test
add
frstor
mov
mov
inc
xlat
out
arpl
dec
mov
add
or
pop
out
dec
push
imul
stos
pop
out
xor
jnp
test
stos
pop
out
sbb
imul
stos
pop
out
add
dec
mov
xor
sub
stos
fstl
out
shr
adc
sub
add
mov
xchg
out
mov
add
or
fstl
mov
mov
xchg
out
mov
sub
sub
or
fstl
dec
pop
sub
push
es
add
pop
test
push
es
stos
scas
add
pop
pop
test
push
xor
push
pop
test
push
es
jle
push
test
push
es
add
mov
in
test
push
std
push
sub
push
es
xor
push
sub
push
or
scas
add
rcll
roll
scas
add
fistl
fldcw
scas
add
pop
inc
xor
ljmp
jns
cmp
das
in
cld
and
sub
pop
jg
cld
and
add
stc
inc
dec
pop
jg
cld
and
stc
inc
pop
pop
outsl
in
cld
and
flds
pop
das
in
cld
and
imul
and
jns
je
ljmp
sbb
pop
out
ljmp
jns
test
ljmp
xlat
js
xchg
lods
push
push
mov
shl
mov
add
lea
push
pushl
enter
xchg
cli
jne
inc
xlat
mov
add
repnz
fildl
sbb
mov
cli
add
inc
xlat
lock
sub
icebp
fildl
call
add
mov
inc
jecxz
std
push
push
pushl
cmp
fildll
and
inc
xlat
nop
jecxz
lea
push
incl
add
xchg
fiadds
out
mov
or
scas
dec
sbb
pop
mov
addr16
shl
jnp
out
ljmp
jmp
ljmp
inc
loop
rolb
sub
xlat
jno
adc
divl
xlat
out
ljmp
lret
bnd
out
ljmp
scas
test
aas
stc
ljmp
outsb
ljmp
add
lret
bnd
out
ljmp
out
ljmp
out
ljmp
lock
pop
idivb
stos
fucomip
ds
roll
mov
loope
out
jle
pop
loope
jmp
xlat
out
adc
aam
or
push
repnz
aam
add
xchg
cmc
mov
sub
add
out
ds
faddl
mov
imul
jmp
add
jmp
ja
mov
outsl
scas
add
mov
icebp
cld
jne
js
adc
icebp
add
xor
xor
icebp
add
addr16
add
lock
mov
add
add
add
out
sar
ja
ret
shll
cld
repz
scas
or
or
jle
mov
cs
sbb
lock
jle
add
outsb
jns
sbb
add
fildll
add
xlat
cmp
sbb
xlat
adc
or
add
xchg
xchg
sbbb
push
add
xlat
push
add
add
push
inc
add
xlat
rorb
mov
push
inc
std
pop
into
add
dec
adc
add
add
test
xor
ror
decl
and
out
inc
bound
aad
scas
push
mov
push
or
mov
bound
je
mov
add
push
mov
pop
adc
cmpb
jno
in
repnz
add
out
pop
and
ljmp
js
add
dec
cmpsl
mov
push
call
pop
shr
ljmp
out
ljmp
scas
popa
jp
repnz
out
outsl
and
ljmp
sbb
push
pop
jmp
fcom
xchg
into
pop
xlat
out
popf
sbb
pop
xlat
out
popa
sub
ljmp
add
js
pop
fucomi
ljmp
out
mov
repnz
push
xor
push
fnstenv
stos
dec
mov
cwtl
cmp
stos
dec
cld
cmp
jne
fstps
dec
cld
jo
loop
jmp
fcomip
add
dec
outsl
adc
aam
mov
repnz
test
pop
paddd
add
int
stc
push
sbb
mov
push
test
add
out
add
pop
lds
xor
int
jmp
inc
jmp
mov
out
add
jle
sbb
inc
test
in
xchg
mov
add
sbb
subl
inc
lods
xchg
and
jle
pop
enter
cmp
mov
push
push
test
les
out
in
add
je
test
jmp
add
in
push
mov
sub
subl
add
mov
pop
cmp
mov
add
sbb
in
cld
jne
jns
adc
jecxz
add
push
rol
pop
cld
pushl
add
xlat
mov
add
push
xchg
mov
cld
incl
or
dec
cmp
mov
inc
pop
add
xlat
fidivrl
jae
aad
mov
subl
sbb
lock
add
mov
add
push
xchg
pop
iret
sbb
pmullw
cmp
pop
and
add
sub
lea
pop
out
insb
sbb
out
ljmp
inc
popa
and
ljmp
inc
pusha
adc
add
sbb
inc
pop
fsubrp
mov
repnz
repnz
inc
sub
xlat
jne
adc
out
ljmp
je
add
or
sahf
mov
pushf
outsl
dec
clc
and
cmp
jb
test
push
cs
roll
push
push
call
js
inc
cmp
xor
jne
add
inc
cld
scas
mov
lret
je
in
out
mov
push
testb
push
inc
cld
sub
sbb
outsl
jecxz
add
pop
insb
sbb
aam
xchg
and
stos
dec
testb
out
ljmp
jmp
add
dec
insb
sbb
aam
inc
jo
jmp
sbb
inc
cld
bound
add
add
add
js
jmp
inc
mov
in
mov
cld
add
mov
aaa
lds
jle
inc
mov
out
add
xchg
push
add
jle
or
mov
ljmp
xlat
jns
adc
icebp
add
xor
jmp
icebp
mov
dec
push
add
add
add
fninit
mov
addr16
adc
out
lock
mov
jae
adc
call
push
pop
mov
mov
dec
int3
adc
push
lea
pop
mov
add
jo
jle
rcll
shlb
push
add
sarb
rcll
mov
add
add
xlat
adc
add
pop
aam
add
push
mov
daa
in
rcrl
add
mov
shlb
cmp
push
add
and
cmp
cld
dec
out
fmulp
leave
incl
dec
in
aam
cs
xchg
imul
clc
pop
or
add
mov
ljmp
push
cli
idivb
ljmp
add
in
fwait
imulb
ljmp
notb
sub
dec
jecxz
test
push
idivb
xor
mov
xorb
add
inc
or
fsubr
aaa
mov
cltd
subb
out
add
out
adc
aam
xorb
cld
jmp
cwtl
fiaddl
push
add
jecxz
mov
in
adc
jecxz,pt
lret
inc
into
inc
cld
cs
scas
and
in
out
xchg
nop
out
lcall
das
pop
jno
inc
sbb
inc
cld
pusha
push
push
jmp
cltd
jmp
add
push
rorl
cmp
jne
fnop
out
add
fiaddl
push
out
add
jnp
adc
aam
mov
ljmp
add
out
ret
add
daa
std
rorl
in
add
roll
inc
repz
scas
mov
jne
add
in
mov
mov
loopne
cmpl
cli
fscale
xchg
mov
mov
add
ret
inc
in
add
js,pn
addl
mov
add
and
out
ror
adcl
pop
pop
xlat
xchg
clc
call
add
scas
or
pop
push
mov
mov
out
xchg
in
dec
xchg
in
push
int
out
pushf
das
incb
mov
pop
xchg
ds
pop
out
or
xlat
push
add
xlat
sub
push
add
aad
and
dec
mov
pushf
in
xlat
push
mov
add
aas
dec
decb
inc
out
dec
xor
dec
nop
sbb
mov
es
xlat
mov
push
add
out
insb
adc
out
ljmp
mov
ljmp
ljmp
fbstp
adc
out
ljmp
scas
popa
bound
fiaddl
xlat
out
pop
mov
add
ljmp
jp
jb
xor
xlat
out
xchg
or
pop
xlat
out
jno
call
jne
adc
out
ljmp
jae
or
out
ljmp
out
ljmp
inc
or
in
push
xchg
pop
inc
cld
sahf
jae
adc
aam
mov
insb
out
add
aam
sbb
out
add
adc
jmp
add
aam
clc
imul
jno
or
mov
push
gs
cmp
xchg
cltd
cltd
mov
jmp
fadds
inc
int
outsl
clc
jmp
cmp
imul
fdiv
cli
out
pushf
pop
cmp
xor
jmp
aam
jbe
aaa
mov
add
out
xor
add
add
out
add
or
icebp
mov
ds
add
lret
ljmp
inc
jne
add
icebp
inc
mov
add
adc
ljmp
push
adc
add
or
push
ret
mov
mov
test
add
icebp
jae
lds
ds
cmp
xlat
popf
or
push
mov
in
xchg
add
add
roll
mov
jmp
iret
push
pop
jmp
pop
sbbl
jg
mov
jge
sti
dec
in
lods
fisttps
add
enter
inc
pop
or
in
test
add
push
dec
add
xlat
lret
lock
add
popl
add
push
inc
jne
add
xor
int3
xor
xlat
pop
add
mov
xlat
inc
sti
mov
out
repz
in
outsl
fadds
pop
add
or
int3
jae
xchg
repnz
scas
jmp
js
repz
xlat
incb
xlat
in
je
fucomi
ljmp
addr16
out
ljmp
out
ljmp
add
jmp
pop
je
pop
xlat
out
icebp
pop
fdiv
ljmp
cmp
mov
push
add
in
ljmp
adc
icebp
aad
andl
out
add
stos
mov
out
mov
jno
bound
jae
ret
mov
aam
mov
out
add
jns
or
sbb
push
jmp
cltd
mov
stos
clc
clc
std
enter
insb
out
add
aam
sbb
out
jmp
fadds
cli
push
aam
stc
mov
add
orb
lods
notb
add
pusha
orb
add
in
add
mov
out
mov
dec
rcr
cmp
or
add
test
adc
cld
mov
dec
adc
ret
mov
cmp
stc
outsb
lret
in
mov
aaa
fidivrl
mov
and
jb
cld
cmp
dec
fidivl
mov
push
pslld
std
jle
pop
and
jg
push
xlat
jbe
int
xchg
sub
push
mov
out
shll
fists
mov
int3
sbb
cld
pop
jnp
sti
cmp
in
pop
fcomps
ret
mov
repz
std
inc
jnp
push
das
pop
add
dec
dec
jne
into
mov
mov
sub
dec
inc
ret
int
out
mov
fmull
pop
sahf
jnp
sti
cmp
sbb
mov
mov
add
jmp
pop
sub
adc
adc
aam
out
popf
stos
adc
ljmp
hlt
popa
hlt
ficomps
xor
jmp
jmp
cmp
jno
call
cmp
sub
ljmp
xlat
out
popl
movsb
aaa
outsl
cli
dec
sti
push
jge
movntq
xlat
jmp
test
filds
dec
add
leave
jno
sub
stos
push
or
lcall
pop
mov
push
or
cltd
add
xchg
subb
inc
cmp
or
es
cld
rcrl
out
mov
jns
xorb
sub
and
iret
sbbl
movl
add
adc
jo
xlat
add
stc
shlb
cld
inc
out
cmp
push
lret
daa
push
out
ja
fsts
sub
adc
push
in
add
adc
mov
mov
jge
inc
add
cmp
add
jl
test
test
mov
mov
jno
sbb
add
add
mov
add
sar
add
out
mov
add
icebp
add
cli
icebp
add
insb
ret
icebp
add
lret
mov
cld
pushl
mov
and
icebp
add
xlat
inc
jge
roll
add
stc
add
inc
jge
pop
xchg
adc
inc
ja
add
dec
add
dec
popf
fldl
xlat
inc
jp
pop
sbb
dec
mov
push
dec
push
add
add
insl
adc
inc
mov
mov
dec
cld
incl
mov
aas
push
pop
js
call
inc
add
xchg
mov
and
inc
dec
add
pop
push
mov
pop
pop
pop
out
je
fucomi
ljmp
add
mov
decl
sahf
cltd
jp
or
adcb
pop
xor
hlt
rclb
mov
dec
ret
into
xlat
pop
fwait
fstpt
lcall
mov
popa
push
loopne
mov
scas
and
mov
bound
xor
add
hlt
ljmp
xlat
out
ljmp
mov
or
test
add
lods
scas
and
ljmp
push
adc
mov
fbstp
cmp
mov
repz
push
repnz
shl
rolb
jmp
cmp
add
aam
jge
push
xor
in
cwtl
out
jmp
add
shr
jge
push
xor
out
js
call
sbb
int
push
cld
ret
inc
lds
add
sbb
inc
mov
fdivr
cmp
mov
cmp
lea
mov
and
and
add
aad
idivl
mov
xchg
dec
push
mov
in
add
inc
push
cld
mov
and
imul
lret
mov
sar
movsl
test
call
out
popa
dec
and
jnp
into
es
ljmp
bound
mov
aam
mov
cmp
sahf
popa
into
call
enter
xchg
mov
test
aam
inc
shrb
sbb
inc
mov
inc
mov
or
fisubrs
add
mov
daa
add
int
leave
pop
pop
mov
cmp
push
cmpsl
mov
pop
in
add
pop
repz
mov
adc
inc
add
pop
sbb
inc
addb
jecxz
add
jge
mov
pop
push
sub
dec
lcall
hlt
scas
cmp
xor
add
sbb
ret
mov
cld
jmp
and
push
pop
mov
cwtl
stos
push
clc
js
ljmp
adc
out
xlat
imul
xlat
out
pop
mov
push
jo
in
ljmp
sub
mov
das
call
loopne
arpl
dec
stos
push
aam
stos
push
in
pop
fwait
add
add
setle
xchg
mov
pop
mov
push
and
xchg
loopne
cld
rcrb
push
orb
das
cli
jmp
add
cld
lret
fs
add
and
xor
and
inc
lahf
jb
cmp
cmp
fs
sub
rolb
and
and
adc
les
add
aam
xchg
ds
cmp
push
cmp
jmp
jmp
xchg
push
push
jne
in
cmp
cld
cmp
repnz
shll
mov
decl
mov
sbb
dec
push
push
mov
and
sar
jae
add
add
dec
and
popa
xchg
add
enter
jp
and
jnp
and
jnp
and
dec
mov
jl
fisubl
cmc
xor
push
push
movsl
mov
in
xlat
dec
sbb
dec
or
and
inc
pop
push
inc
clc
aad
icebp
out
mov
sub
mov
pop
fucomi
sub
mov
in
lahf
sbb
scas
mov
ss
add
pop
loope
call
sbb
flds
lock
aam
and
push
add
xlat
xchg
sbb
scas
adc
sti
mov
mov
adc
push
repz
mov
pop
push
in
addb
sbb
pop
cmp
jp
add
out
addr16
mov
jmp
push
or
add
jns
call
pop
cltd
jmp
add
je
add
add
xlat
out
pop
mov
ret
in
aaa
jne
fucom
mov
mov
mov
imul
dec
mov
arpl
and
sbb
push
sub
and
push
scas
stos
push
fsub
loop
mov
ficoms
loopne
sub
mov
js
out
les
pop
xor
inc
pop
lret
add
sub
xor
shlb
pusha
add
aas
sarb
push
es
repnz
js
add
and
xchg
in
and
xchg
sahf
xor
xor
jmp
aam
jbe
dec
mov
and
bound
adc
pop
fisubrl
lcall
jmp
bound
js
mov
jbe
int
mov
jmp
lock
or
cmp
xchg
out
stc
jne
and
in
sub
mov
bnd
and
jne
and
inc
xchg
out
add
outsl
mov
add
daa
cmp
jl
outsl
sti
add
inc
cld
jl
out
jge
std
or
je
ja
and
arpl
add
test
into
repz
imul
adc
fisubs
xlat
mov
into
xlat
out
imul
stc
sbb
out
mov
mov
lret
cmpsb
in
int
movsl
adc
cmp
pop
push
sbb
add
add
pop
mov
xchg
pop
fndisi(8087
daa
sub
mov
dec
pop
sub
cmp
add
call
call
incl
add
pop
mov
add
xlat
xor
subl
push
mov
pop
mov
lcall
dec
xor
xor
xchg
mov
cmp
in
sub
pop
xlat
out
ljmp
sub
shlb
sbb
ret
outsl
mov
outsl
mov
add
mov
sbb
push
les
mov
add
jns
stc
mov
shll
subl
add
add
jne
jne
jne
scas
aas
icebp
pop
sub
mov
add
aam
push
cltd
popa
cmp
pop
std
sub
push
push
cld
add
fidivs
jecxz
lds
stc
xchg
add
aam
add
int3
push
jb
aam
insb
xlat
hlt
cmp
sub
or
scas
ret
bswap
cmp
adc
shrb
cld
shlb
xor
int
rorb
adc
js
sub
and
mov
mov
repnz
fsubp
bound
lret
adc
dec
fiaddl
push
lret
dec
add
fimull
push
sbb
xchg
push
push
jle
into
call
movsl
and
dec
pop
xchg
mov
in
clts
cld
cmp
cmpb
mov
inc
add
ja
adcl
add
ljmp
mov
in
jne
mov
jle
andl
or
inc
shl
jmp
cmp
jmp
jae
and
add
repnz
xlat
lock
xchg
dec
out
mov
sub
loop
xchg
inc
lea
arpl
inc
dec
fcoml
fisttps
subb
push
in
or
sbb
add
xlat
mov
mov
lods
push
mov
pop
xchg
mov
nop
inc
mov
dec
fadd
add
inc
lret
mov
aas
xlat
test
or
add
pop
jg
out
or
add
and
cmp
or
add
out
in
addb
aad
xlat
mov
mov
inc
jo
cmp
push
sbb
mov
inc
les
add
repnz
repz
xor
ds
mov
add
daa
xlat
fwait
aad
sarb
loopne
add
jae
pop
xchg
pop
inc
lock
aam
loope
loopne,pt
arpl
add
out
out
ss
into
jne
shlb
dec
insl
pushl
xor
jnp
imul
add
cmp
call
aam
dec
loopne
pop
mov
lock
dec
push
in
aam
inc
pusha
push
or
jmp
cmp
bound
add
js
jmp
and
aad
and
je
jns
stc
add
jo
sti
add
pop
out
out
add
dec
push
in
out
mov
out
add
pop
repz
mov
aad
sbb
lock
imul
mov
and
add
mov
pop
movsl
or
outsb
out
mov
add
scas
or
pushl
add
jbe,pt
sbb
out
add
mov
add
ds
int
push
jbe
and
movsb
mov
and
jbe
adc
out
add
ret
push
test
add
out
sub
push
push
sar
xorl
test
adc
pop
mov
pop
pop
sub
ljmp
test
mov
add
add
lret
mov
aaa
xchg
inc
add
xchg
popf
mov
sarb
inc
fists
mov
hlt
or
xlat
xchg
inc
je
xchg
cmp
fistl
add
dec
xchg
faddl
pop
add
xlat
pop
scas
mov
rolb
pop
mov
arpl
add
pop
mov
dec
mov
aas
fistl
add
ret
mov
add
pusha
xchg
add
add
mov
mov
scas
inc
pushf
xor
adc
and
mov
mov
popl
inc
pop
dec
ret
jno
xchg
es
sub
cli
jl
insl
dec
or
pop
jbe
test
test
js
icebp
je
pop
stos
add
int3
lods
aas
fnstenv
xlat
fwait
lock
sbb
addl
add
fdivp
push
cmpsl
jmp
adc
and
xchg
cli
adc
and
aam
lock
test
add
shll
rcrl
sbb
aam
addr16
hlt
and
or
fldt
sub
sbb
jmp
push
cmp
aam
xor
int3
bound
cld
pushf
addr16
fadd
adc
arpl
add
fldt
stos
push
and
fsub
mov
sbb
jl
iret
jle
jne
jae
push
adc
inc
jmp
out
cld
out
mov
adc
jl
fdivrs
add
sub
mov
sti
in
imul
addl
test
sti
jmp
push
dec
call
add
rcrl
and
or
mov
dec
jl
outsb
jmp
push
cmp
jl
cs
add
mov
add
lods
out
mov
and
mov
mov
add
out
stos
jmp
out
mov
xlat
mov
adcb
inc
push
xlat
pop
aas
out
rcll
rorb
add
mov
adc
xlat
inc
sub
pop
and
bswap
push
jge
push
imul
ljmp
xor
das
push
scas
rorl
movsb
mov
dec
push
enter
arpl
out
pop
add
cwtl
xor
inc
add
nop
les
fcmovnb
push
or
test
rorl
out
xchg
out
ljmp
add
xor
add
or
push
stos
or
test
lahf
xchg
inc
aam
xor
mov
mov
jp
ljmp
jmp
jbe
lds
lods
or
pop
xor
out
mov
sbb
mov
add
ljmp
ret
pop
das
stos
incb
add
sub
pop
scas
repz
fildll
or
fucomp
add
gs
bound
test
cmc
or
imul
mov
xchg
fisttpll
mov
fmull
ret
das
loop
cmp
mov
adc
adc
sahf
addr16
pusha
adc
or
xchg
das
loop
out
aas
aam
ret
mov
mov
add
js
mov
adc
jno
lods
mov
xchg
adc
popa
fldt
or
lods
mov
adc
push
out
mov
pushf
lock
cld
mov
sbb
mov
adc
inc
mov
mov
or
inc
mov
xchg
int3
mov
inc
ret
fs
cmp
popa
xchg
xchg
push
or
xchg
dec
add
faddp
jmp
add
sbb
vmwrite
mov
out
aas
std
mov
mov
xchg
out
orl
scas
out
dec
std
mov
out
cld
add
loopne
out
sbb
inc
fimull
aad
js
movb
repnz
call
iret
fstps
aas
in
idivb
mov
push
dec
stos
adc
add
rclb
out
sahf
invd
mov
adc
jge
sub
jle
aam
dec
popa
aas
out
lock
stc
cwtl
lret
or
mov
leave
aas
out
fisttpl
inc
adcb
rcrl
add
mov
inc
cmp
imul
popa
repnz
out
jno
add
pop
or
cmp
ljmp
scas
ljmp
adc
add
out
fists
test
mov
lcall
jmp
jmp
shrb
int3
mov
xchg
add
jle
xlat
out
fists
ret
pop
cmp
sbb
outsl
inc
or
ljmp
and
add
add
cmp
add
aam
mov
fs
add
ret
sub
cmc
mov
xchg
or
jo
insb
shl
sti
mov
push
adc
pop
bound
cmp
sbb
push
aam
mov
subl
std
jmp
mov
cmp
xchg
out
add
and
gs
add
sti
xor
sbb
fldt
fmuls
test
jecxz
add
fcmovnb
xchg
in
and
in
add
xor
in
mov
out
hlt
push
or
sbb
mov
mov
push
outsl
int3
clc
add
jmp
mov
bound
mov
jb
clc
mov
in
mov
aad
out
add
aaa
lods
or
daa
jecxz
enter
jecxz
mov
xor
pop
jecxz
loopne
xchg
rcll
ret
xchg
int3
roll
xor
out
and
xlat
imulb
mov
and
iret
push
lods
add
pop
mov
xor
aad
in
daa
mov
lds
push
std
cmc
xor
sahf
inc
xor
or
lock
mov
add
inc
and
cmpsb
inc
ja
push
sub
inc
xorb
mov
adc
loop
push
cmp
pop
test
pop
xchg
and
push
sub
jle
mov
out
rep
xchg
xchg
inc
leave
pop
sub
xor
mov
out
inc
cld
sub
sub
popa
sbb
cmp
jb
xchg
out
add
or
xor
add
rcrl
imul
mov
and
insb
sbb
ljmp
adc
lds
pop
xchg
or
mov
js
pop
sbb
add
movsl
jmp
ret
pop
sub
add
push
pusha
divb
stc
test
jbe
mov
or
mov
shr
fcoml
cmpl
cltd
fdivrl
lea
movsl
jmp
bound
mov
inc
lds
icebp
push
stos
mov
stc
sbb
test
cmpsb
lea
add
mov
cld
add
cli
mov
xchg
pop
lock
orb
xchg
inc
clc
push
clc
inc
cld
test
sub
mov
dec
call
push
xchg
inc
clc
dec
clc
fdivr
stc
in
jg
es
lea
pop
in
in
sti
pop
xor
pop
cld
push
ja
sub
popf
inc
push
mov
pushf
test
add
cwtl
jmp
add
scas
jne
xchg
add
aas
rorb
xlat
add
cmp
jmp
add
jo
add
xlat
jo
mov
jl
pop
mov
xor
cmp
incb
jl
cmp
push
pop
push
push
sub
push
push
pop
or
jnp
in
push
add
dec
sub
testl
ret
or
add
rolb
out
cmp
std
shrb
cmp
mov
test
add
out
jne
sbb
fwait
add
pop
or
xlat
out
sub
xchg
out
scas
pop
or
pop
pop
lock
out
mov
arpl
dec
adc
cmp
ljmp
add
test
fwait
enter
aas
ds
jns
imull
xchg
insl
adc
jl
sub
adc
add
out
ljmp
insb
pop
add
adc
mov
adc
add
inc
add
adc
mov
mov
xchg
out
orb
adc
fidivrs
shll
orl
aam
aas
push
jle
push
xlat
add
mov
cld
push
push
dec
jns
aam
add
out
jbe
pop
push
jns
aam
add
adc
mov
aam
pop
mov
add
lret
out
push
xchg
lea
int
mov
insb
stc
pushf
or
fs
ds
add
mov
mov
cli
test
sbb
iret
sldt
sub
dec
subl
call
out
dec
inc
jle
aaa
stc
push
in
or
outsb
adc
dec
inc
outsb
add
stc
icebp
in
or
adcb
ret
push
mov
or
loopne
push
push
subb
add
jne
test
insl
sub
cwtl
inc
stos
add
push
cltd
dec
add
das
in
mov
addr16
add
push
add
cli
sbb
in
sbb
or
add
popa
and
hlt
in
call
xchg
test
dec
push
push
lea
dec
adc
lds
lea
adc
mov
dec
adc
adc
adcl
inc
add
dec
movb
xchg
push
test
pop
or
add
mov
jmp
inc
lock
lcall
call
je
rol
aaa
in
cmpsb
pop
fildl
ds
xlat
jnp
cld
daa
pop
inc
sti
mov
push
pushf
sbb
sbb
sub
mov
inc
xlat
jnp
in
daa
pop
or
jp
outsl
pop
jae
and
mov
pop
pop
arpl
jmp
add
push
mov
ljmp
pop
cmp
mov
jnp
xrelease
aad
adc
xchg
sbb
mov
add
decb
cltd
or
fstpl
jo
add
sbb
out
mov
sahf
jmp
inc
inc
mov
icebp
cmp
add
out
mov
sahf
jmp
pop
inc
mov
sbb
stc
outsb
pop
jns
icebp
movsb
jns
pop
mov
or
lods
cmp
jmp
xchg
jge
in
mov
testb
arpl
orb
movsb
push
bound
mov
jae
mov
sbb
jmp
jmp
inc
mov
add
outsb
sbb
repnz
scas
cmp
mov
xor
add
jle
push
mov
xorb
xor
mov
cmp
jmp
or
inc
cmp
test
or
cmovs
and
jns
jl
or
push
int3
sub
mov
ret
add
mov
xorl
add
add
jne
std
call
add
add
add
cwtl
mov
add
mov
pop
push
sti
sti
test
pop
pop
cld
mov
pop
xchg
or
push
push
and
mov
nop
pop
or
loop
das
sahf
jg
maxps
or
dec
sbb
mov
push
aas
orl
call
das
and
add
xor
jge
inc
push
mov
rorb
pop
repnz
or
jg
lods
scas
mov
test
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
add
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
add
aam
add
aam
add
aam
add
into
cmc
pop
mov
xor
movsb
fldenv
leave
test
mov
pop
ds
insl
dec
ss
pop
sub
jne
and
aaa
adc
add
hlt
inc
inc
and
jne
mov
sarl
scas
mov
pop
add
xchg
popw
mov
pop
cli
mov
sub
or
jg
mov
insb
jg
fs
pop
or
sbb
outsb
pop
xchg
outsl
insl
dec
cltd
outsl
push
lret
and
cltd
jno
add
jbe
imul
pop
mov
push
mov
pop
andl
mov
or
mov
in
add
scas
in
add
scas
in
add
jle
add
jle
add
outsb
in
add
outsb
in
add
jle
add
jle
add
outsb
in
add
outsb
in
add
ds
add
ds
add
cs
add
xlat
bound
sub
rclb
cmpsb
ljmp
add
add
pop
pop
push
dec
push
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
add
xlat
adc
xlat
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
out
ljmp
add
out
ljmp
out
ljmp
out
ljmp
out
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
stos
mov
jno
imul
bound
pop
mov
xchg
je
inc
jnp
jmp
add
add
xor
and
jo
jmp
xor
out
xor
aam
das
cli
mov
aad
fcmovbe
xchg
sbb
push
aam
data16
add
pusha
add
mov
and
sbb
imul
add
outsw
sbb
jne
inc
xorb
mov
sub
add
psllw
xchg
pusha
jns
jle
xor
xor
jae
mov
and
sub
fnstsw
xor
sbb
jle
jae
mov
pop
lea
lret
mov
roll
jno
xlat
loope
jb
in
addr16
clc
bound
adc
bound
jmp
insl
lret
aaa
gs
stos
adc
add
add
push
add
in
xor
push
jp
add
push
subb
jle
arpl
gs
imul
inc
jns
arpl
outsl
jae
mov
imul
add
pop
xor
add
jno
push
outsb
or
add
insb
add
ljmp
jns
popa
add
repz
jo
mov
popa
mov
or
add
jp
jno
fdivs
mov
sbb
jns
jae
mov
imul
jp
add
sub
xchg
jle
push
jp
jno
xchg
lea
mov
mov
xor
ljmp
mov
ds
add
and
mov
inc
or
bound
idivl
sarl
push
clc
mov
fs
jg
or
mov
add
scas
out
xor
add
add
xchg
nop
imul
lea
cmpsl
mov
mov
add
jne
imul
out
jb
jle
jo
aam
bound
jne
outsl
sbbb
addr16
mov
add
out
xor
mov
jmp
add
outsb
sbb
jne
sbb
jae
lea
mov
addr16
fs
ljmp
fucomi
jno
aad
push
insb
and
sub
iret
mov
push
outsb
sbb
imul
add
jge
gs
mov
imul
mov
push
pusha
add
pop
outsb
dec
xchg
add
jne
push
xchg
add
jl
gs
arpl
xchg
insl
insb
xlat
mov
jo
mov
arpl
les
add
adc
push
add
popa
insb
mulb
jmp
pusha
jae
adc
popa
arpl
aas
cmp
add
or
cmp
stos
and
mov
and
mov
add
xor
ja
cmp
push
outsl
jbe
pop
jg
add
push
imul
jae
pop
aas
je
pop
das
push
popa
ja
out
pop
arpl
mov
add
mov
das
mov
mov
ljmp
out
cmp
add
mov
js
mov
jbe
js
jbe
lea
push
lds
ljmp
ja
push
movsl
out
fisubl
nop
aad
xlat
mov
ja
int3
add
ret
pop
js
ljmp
out
xchg
pusha
jbe
lea
out
jge
jbe
lea
nop
xchg
ja
mov
mov
xchg
sbb
add
add
mov
xor
insb
push
xor
jo
xor
add
mov
add
gs
mov
out
jne
in
mov
xchg
insb
sti
leave
mov
adc
lds
sti
popf
xchg
add
mov
das
jmp
lods
xchg
jo
jae
insb
insl
mov
imul
add
add
outsl
jmp
jbe
add
fs
push
jae
xchg
xchg
jbe
xchg
jne
or
add
outsl
fdiv
sub
lea
das
xor
sub
mov
andb
xchg
pusha
outsl
mov
fwait
imul
add
xchg
imul
jb
pushf
fs
icebp
outsb
outsb
sbb
cs
jg
arpl
jbe
imul
jg
jae
sbbb
jae
gs
pop
dec
jns
cmp
ss
ja
imul
add
xor
sub
outsl
repnz
imul
add
pop
imul
pop
outsb
jmp
pop
add
call
loopne
outsb
mov
pop
pop
vpunpckhdq
clc
pusha
insl
mov
in
xor
mov
pop
add
add
je
imul
js
xchg
test
jg
pop
test
xor
xor
jl
aas
mov
dec
jb
xchg
pop
js
out
inc
pop
add
testb
jne
sub
hlt
mov
cld
test
lock
jbe
jne
ja
out
fnstenv
test
je
sub
mov
add
pop
mov
out
fnstenv
push
out
jno
lea
jmp
jne
add
addr16
outsl
xchg
outsb
adc
insl
mov
add
xchg
jo
sbb
push
xor
ja
sbbl
xor
push
roll
gs
testl
add
lock
jmp
lds
imul
jae
fistl
add
lods
mov
out
pusha
rorl
arpl
add
xchg
imul
fs
xchg
pusha
jae
xchg
imul
outsb
outsb
dec
out
push
jae
xchg
jne
jl
das
xor
bound
nop
pop
insb
sbb
sub
mov
xchg
bound
xchg
insl
popa
outsb
fwait
outsb
jb
xchg
imul
in
fs
sarl
mov
rclw
insl
xor
mov
data16
add
xchg
jne
fists
outsb
or
arpl
and
arpl
xor
test
pop
imul
pop
outsl
pop
popa
insb
jae
pop
pop
fs
add
ss
dec
xor
pop
xor
stos
ss
add
pop
pop
xlat
xchg
jae
stc
movsb
bound
push
shll
push
arpl
add
mov
xor
stos
and
add
out
pusha
arpl
push
add
repz
popa
mov
pusha
add
repz
out
fsubl
out
sbb
xlat
xchg
push
jnp
ljmp
out
into
addl
xchg
pusha
imul
andl
mov
insb
xor
ljmp
add
orl
out
push
pop
sub
cmp
pop
hlt
out
inc
arpl
xchg
aaa
add
test
pop
repnz
pop
out
add
push
pop
xlat
popl
mov
mov
add
aam
jne
stos
subb
mov
xchg
test
shufps
mov
add
leave
mov
sub
xor
ret
ffreep
cmp
into
mov
pop
jmp
mov
insb
aas
cld
ret
fs
pop
xchg
sub
sbb
jmp
mov
jp
or
mov
imul
mov
or
push
jbe
leave
dec
outsb
and
inc
jo
mov
add
popa
mov
gs
add
xchg
jmp
xchg
pop
fsubrs
jmp
mov
xor
shrl
xchg
add
xchg
mov
pop
jb
xchg
je
push
xchg
imul
sub
fnstsw
int
cs
mov
jae
jns
jle
push
push
mov
push
inc
mov
dec
inc
jle
push
dec
add
xlat
mov
inc
xchg
into
cmp
iret
push
inc
xchg
mov
inc
xor
xlat
add
add
dec
xor
add
add
pop
add
inc
dec
push
xchg
pop
inc
pop
xchg
pop
pop
jb
pop
push
dec
cmp
cmp
jne
dec
aas
jae
js
outsb
sub
and
push
outsb
add
jno
add
stc
scas
push
jno
cmpsl
pop
insb
and
outsl
add
mov
and
clc
addl
add
out
punpcklwd
test
pop
mov
lahf
stos
pusha
mov
jl
inc
jp
xlat
push
jae
xchg
pusha
xchg
push
andl
xchg
cmp
lcall
cmp
xlat
out
ljmp
out
xchg
jg
xor
les
sub
daa
jb
jg
dec
stc
jle
push
or
ss
out
add
aam
sub
add
add
xor
imul
mov
imul
out
add
xchg
mov
insl
jmp
js
insb
mov
add
jne
imul
xchg
out
rcl
out
rcl
adc
out
cmc
rclb
adc
ret
adc
out
push
adc
outsb
adc
xchg
add
stos
add
add
outsb
out
add
jle
addl
int
push
add
out
add
out
jp
inc
add
fistpll
add
out
add
bound
cmp
cs
je
out
cld
out
insl
and
in
inc
popa
sbb
in
add
jge
outsb
imul
add
in
add
xchg
jb
push
jg
add
add
ret
xchg
and
fs
stos
outsl
je
or
add
xchg
add
xlat
pop
inc
insl
repnz
outsb
mov
push
jo
out
pop
xlat
push
add
push
sub
add
mov
fs
cmc
push
add
add
imul
and
and
fs
push
add
xchg
add
pop
inc
insl
push
outsl
outsb
testl
jno
push
gs
jo
and
popa
outsl
insb
and
add
add
add
test
inc
sti
adcl
and
pop
hlt
into
push
jae
xorl
push
out
ljmp
orb
xlat
fwait
add
ja
push
mov
xor
push
mov
test
stos
ja
aas
xchg
jns
push
je
fidivrs
je
xlat
insb
push
cmpsb
dec
outsl
jle
jb
mov
outsl
add
imul
jb
mov
push
es
lret
iret
mov
or
add
shlb
and
in
sub
lea
pop
mov
add
les
repz
jnp
sub
lea
andb
gs
jp
sbb
fstpt
mov
movsl
jp
pop
jg
dec
add
mov
add
repnz
es
jecxz
stos
xchg
push
data16
lret
jo
shl
inc
mov
sub
push
mov
xor
push
popa
add
pop
insl
outsb
cltd
pop
popa
je
inc
daa
jae
inc
pop
popa
sub
pop
inc
sbb
sbb
inc
mov
popa
gs
push
arpl
inc
jae
je
jno
in
sbb
shll
cmp
cmp
outsb
popa
or
sub
push
sbb
fildl
je
push
outsb
gs
inc
push
inc
xor
cmp
inc
pop
insb
or
and
or
or
sub
pop
jbe
jp
insb
xlat
mov
xlat
mov
ss
push
inc
sbb
push
sub
sub
mov
add
xor
sub
loope
popa
hlt
xor
popf
mull
sub
mov
push
outsb
mov
imul
sti
push
ja
mov
cmp
cwtl
insb
outsb
jns
pusha
je
mov
cmp
mov
push
mov
arpl
sbb
and
xchg
pop
xor
fs
adc
add
push
mov
pop
mov
push
lea
push
cmpsb
xor
xor
sbb
push
and
push
dec
push
shlb
adc
stc
out
add
dec
ljmp
std
out
adc
dec
sbb
and
stos
pop
jmp
push
mov
mulb
push
testl
push
fnstsw
xchg
dec
jno
movb
pop
mov
add
add
pop
jmp
cmpsb
test
lcall
add
cmp
mov
das
fildl
push
outsb
xchg
aam
outsb
lea
dec
popa
jge
sub
test
pop
imul
push
dec
inc
out
out
ds
clc
dec
addr16
adc
dec
lock
outsl
inc
mov
dec
cmp
data16
pop
insl
or
add
out
ds
mov
inc
sti
jns
add
fwait
dec
jbe
cmpsl
dec
jo
jns
add
cmp
xor
jo
cmp
add
inc
jb
jp
jno
pop
pop
jae
pop
inc
add
inc
jb
cmp
outsb
gs
aas
pop
inc
adc
testb
sbb
jb
daa
insl
push
sbb
add
add
inc
jno
adc
outsb
ds
jno
rorb
rcrb
fistl
outsb
lret
aas
pop
jb
xor
ljmp
adc
popa
xlat
lret
push
insl
jns
fs
test
xorl
gs
arpl
xlat
fwait
outsb
sub
jno
xchg
sbb
das
jb
add
push
insb
cli
jo
push
testb
push
fadds
in
dec
push
je
sub
stc
pop
push
addr16
cmp
xlat
xor
ja
or
xor
repz
push
arpl
repnz
arpl
out
faddl
arpl
inc
je
enter
mov
push
push
jmp
add
add
cwtl
pusha
arpl
sub
inc
ss
jle
and
arpl
dec
hlt
ds
insl
or
popa
push
push
push
add
out
call
add
out
call
add
out
call
add
out
call
add
out
call
add
out
call
jmp
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
dec
mov
xor
xor
cmp
int3
adc
or
sbb
add
sbb
add
push
xor
enter
rcrb
and
push
xor
call
add
cmp
mov
pop
jbe
rorl
outsb
rclb
imul
insb
or
xor
adc
add
push
outsl
adc
xor
gs
dec
jbe
lahf
cmp
pop
jo
jo
jle
outsl
addr16
jno
adcb
pop
jbe
jno
sbb
ss
or
pop
inc
pop
cmp
pop
mov
add
pop
jno
rcrb
pop
mov
jno
popf
ljmp
or
pop
inc
lahf
cmp
push
iret
inc
pop
fs
pop
insb
xlat
in
pusha
dec
mov
out
cmp
pop
dec
insl
test
call
in
push
jne
leave
pop
pop
xchg
mov
xor
stos
cmp
mov
push
je
stos
pop
pop
adc
xor
push
jno
add
insl
push
xlat
sahf
pusha
imul
sub
cli
imul
add
cmp
icebp
cmp
sub
dec
inc
add
inc
push
xlat
push
fs
ss
xchg
cs
add
push
adc
push
push
add
push
add
dec
mull
sub
push
push
stos
cmp
fcoml
xor
push
add
je
jmp
dec
js
aaa
sbb
push
cmp
aaa
sub
sub
test
cmp
mov
dec
xchg
add
ss
and
out
xchg
insb
add
aaa
xlat
inc
xor
push
push
notb
das
push
inc
and
pop
out
and
lock
or
push
add
repnz
insb
inc
fstpt
dec
inc
stc
cmp
lock
call
add
cmp
add
xchg
ss
aam
imul
pop
popa
inc
mov
movsl
sub
aas
mov
add
xor
or
insl
test
xor
mov
cmp
lcall
gs
leave
push
imul
aas
inc
cmp
test
push
push
add
add
arpl
dec
outsb
pop
fildll
pusha
popa
int3
ljmp
mov
dec
pusha
popa
loop
inc
inc
out
and
or
pop
inc
cmp
and
fidivs
insl
insl
sbb
dec
inc
sub
insb
or
jo
insl
dec
fs
dec
jo
push
and
dec
dec
outsb
push
jge
push
inc
bound
outsl
je
and
push
mov
and
add
fs
dec
outsb
pop
mov
push
pusha
popa
xlat
inc
push
push
lock
mulb
bound
pop
cmp
push
arpl
mov
insl
mov
cmp
add
xor
jb
add
mov
pusha
jb
stos
ds
xorb
push
lcall
push
daa
clc
sbb
add
add
cmpsb
data16
pusha
insb
adc
arpl
xchg
pop
adc
divb
inc
push
mov
adc
dec
arpl
out
cmp
xlat
inc
and
cli
dec
dec
pusha
push
sub
inc
sub
dec
and
cmpsl
push
sbb
out
or
stos
push
pop
gs
cmp
xor
dec
cmpl
aas
js
push
add
sub
je
adc
pusha
rorl
xlat
cmp
lret
inc
stos
pop
xor
das
aas
xchg
push
xlat
cmp
xor
mov
dec
ds
pop
xor
das
adc
mov
push
inc
xchg
les
jmp
repnz
outsb
dec
or
popa
push
sti
ds
cmp
scas
push
add
mov
jbe
add
mov
and
mov
aas
jbe
lea
add
enter
mov
out
pop
sbb
dec
popa
aad
inc
dec
rorb
enterw
cmpsl
sub
rorl
push
loope
pop
scas
adc
xchg
push
inc
push
mov
out
pop
cmpsl
sti
push
add
outsb
insb
pop
jmp
jae
aaa
pop
insl
dec
dec
pop
add
and
sub
sbb
pop
cld
inc
popa
gs
inc
jno
or
pop
jb
or
pop
xchg
dec
pop
jp
dec
outsb
popa
sbb
insb
sbb
ret
jb
push
inc
imul
dec
pop
add
dec
fs
dec
jo
sub
arpl
and
cmp
xor
outsb
jge
pop
insb
jp
inc
imul
add
add
add
js
jb
xchg
pusha
jno
enter
call
jb
je
cmpsl
inc
addr16
ss
inc
arpl
sbb
repnz
ss
sbb
popa
jno
ss
and
push
arpl
std
bound
pop
pop
jno
arpl
mull
add
pop
imul
arpl
add
dec
jo
cmp
pushf
pop
push
xor
cmp
dec
ss
xchg
push
testl
and
xchg
sub
add
push
mov
mov
xor
out
or
hlt
pusha
pop
imul
jmp
and
push
aaa
push
mov
or
bound
add
dec
sbb
inc
push
push
add
mov
push
stc
push
mov
or
push
or
pusha
jmp
inc
jb
imul
push
cmp
push
icebp
bound
mov
out
pop
stos
cmovnp
add
jo
add
mov
sti
pusha
gs
aam
pusha
jns
out
dec
jle
bound
add
xor
cmp
add
popa
imul
inc
sbb
xchg
dec
add
mov
mov
pop
outsb
std
jg
push
sti
test
dec
fs
mov
xor
mov
mov
mov
push
mov
cmpsl
inc
insb
je
cs
imul
inc
pop
inc
pop
xor
bound
jbe
add
outsb
cmp
inc
push
pop
or
ljmp
outsl
sbb
jne
cld
push
pop
inc
stos
dec
outsb
or
jo
xchg
push
and
push
jbe
lahf
inc
pop
pop
cld
inc
outsb
insb
push
jb
cmp
push
push
and
ss
dec
incb
outsl
lock
jbe
pop
pop
xlat
xchg
inc
sub
push
push
add
cmp
inc
addr16
mov
push
jl,pt
jno
jg
add
jb
je
pop
pop
inc
push
adc
mov
pop
insb
xlat
xorl
notb
inc
add
push
inc
testb
out
cmp
add
je
pop
push
jno
sub
jmp
es
movsl
in
cs
cli
push
popa
jl
arpl
sub
popa
insl
add
xchg
sti
xor
je
out
leave
push
je
mov
gs
les
aas
jmp
bound
dec
mov
xor
mov
or
das
push
dec
xchg
sti
xor
inc
add
bound
pop
jmp
cmpsl
push
hlt
push
dec
pop
jmp
dec
pop
push
inc
dec
addr16
bound
stos
bound
add
cltd
xor
xor
inc
or
cmpsb
out
cmp
pop
adc
test
xor
dec
add
es
sbb
mov
dec
les
jbe
adc
jmp
aam
imul
out
push
mov
or
xor
les
outsl
lcall
imul
imul
add
cmp
popa
pop
idivb
aas
inc
mov
gs
nop
pop
jb
or
xor
ljmp
insb
xor
xchg
push
sbb
add
lods
push
jbe
add
fisubrl
push
rcll
fisubrl
dec
push
xor
push
push
sbb
arpl
add
inc
jbe
arpl
jb
sbb
jb
push
push
mov
add
push
data16
jb
dec
arpl
sub
imul
pop
xor
push
and
jb
jmp
and
add
pop
jb
push
inc
push
push
adc
js
ss
jb
inc
pop
inc
shlb
and
inc
outsb
outsl
mov
xor
push
pop
je
sub
add
insl
push
mov
xor
mov
lds
insl
cmp
inc
sub
inc
aas
cwtl
push
insl
and
lcall
xlat
xchg
pusha
jno
jne
jb
das
pop
add
push
insl
add
incl
pop
dec
add
cmp
das
insl
lds
push
inc
mov
cmp
pop
ret
aas
push
inc
stos
pop
xor
js
out
adc
jnp
pop
pop
add
jp
sbb
pop
jno
jmp
inc
push
inc
sti
popa
js
lds
popa
fcomps
inc
fadds
sub
push
inc
dec
aam
inc
out
xchg
pop
cmp
bound
inc
lods
dec
cs
mov
push
hlt
sub
add
inc
xchg
popa
lock
leave
xor
pop
addl
add
pop
pop
lret
dec
pop
push
add
iret
inc
cmp
xor
pop
cmp
add
inc
dec
inc
xchg
and
add
jbe
je
movsl
out
push
sbb
insb
or
pop
outsl
incb
pop
jb
andl
fstpl
xor
clc
sub
pop
xchg
aaa
push
dec
rcrb
push
mov
inc
imul
int
insb
test
add
pop
nop
or
notl
lea
pop
insb
dec
decb
xor
dec
jo
mov
gs
std
and
lcall
push
loope
jbe
iret
inc
pop
pop
mov
jo,pn
call
aas
jno
loope
jno
ret
jo
cmp
jb
and
xchg
xor
test
jno
xchg
inc
add
add
jle
jno
imul
and
ljmp
push
pop
jb
or
js
dec
insb
inc
cld
xor
jp,pn
pop
cmp
push
and
cmpsb
cmp
ds
pop
jb
xor
xlat
sbb
lds
pop
imul
dec
insl
movsl
sub
pop
xchg
push
jno
in
xlat
add
jp
push
insl
test
add
add
add
xlat
pop
pop
xchg
or
and
push
arpl
test
inc
mov
popa
adc
sbb
xor
push
jae
pushf
push
add
je
push
cli
jne
arpl
fwait
push
arpl
cmp
jno
pop
push
jb
out
call
xor
pop
pop
dec
mov
inc
add
pop
cmp
pop
inc
popa
add
mov
cmp
sub
xchg
xor
inc
lahf
push
cmp
pop
adc
test
addl
mov
or
pop
sti
dec
data16
mov
cmp
bound
mov
sub
test
xor
adc
rorb
pop
jmp
dec
clc
pop
mov
es
orl
test
xor
pop
hlt
inc
jne
push
dec
add
add
pusha
add
inc
inc
outsb
dec
shll
inc
cmp
xor
mov
imul
jmp
pop
outsl
jmp
rorl
scas
pop
jbe
lds
xlat
mov
aas
push
test
pop
jbe
push
dec
outsl
mov
mov
out
pop
lcall
gs
add
loope
outsl
cwtl
rolb
aam
dec
cmpl
add
dec
sub
dec
das
fstpl
outsb
imul
add
push
outsl
mov
add
jb
loop
add
push
pop
popa
out
fsubl
shr
jo
loop
jno
loop
jbe
in
add
fstp
outsb
xlat
ljmp
add
mov
sbb
jp
pop
jo
aaa
push
add
inc
push
inc
sub
dec
pop
pop
popa
pop
xor
jb
jmp
outsb
insl
pop
pop
insb
xlat
imul
notb
inc
push
decl
push
xor
call
cmp
arpl
adc
imul
cmp
cs
mov
xor
lds
add
test
dec
jae
jecxz
jb
pop
push
push
gs
cmp
loopne
add
xor
andl
inc
lahf
xor
daa
stos
sub
lahf
sub
adc
cmc
inc
test
daa
mulb
outsb
fcoms
and
xchg
aaa
hlt
inc
lret
sub
push
jmp
inc
in
jnp
xlat
push
mov
and
xchg
xor
mov
sub
add
lods
push
jmp
dec
mov
pop
aaa
cmp
push
inc
mov
inc
sbb
test
push
jb
sbb
cmp
push
je
adc
jb
add
jo
clc
pop
sub
inc
pop
shll
and
les
sub
cmp
xor
and
xor
add
aam
push
mov
sub
dec
movsl
add
aam
push
mov
pop
jo
aam
push
jnp
push
imul
lret
imul
cmp
cmp
arpl
sub
add
ds
stc
int3
insb
sbb
sub
popa
std
aam
dec
push
mov
push
pop
push
or
enter
or
fucomi
out
dec
enter
add
add
inc
and
jp
jo
lea
dec
lahf
add
inc
sbb
dec
sbb
and
adc
jle
jb
in
adc
dec
pop
dec
pop
fstl
pop
insb
shrb
insl
jo
sbb
arpl
push
add
lcall
ljmp
bound
maxps
add
adc
ja
add
mov
add
and
push
push
jmp
aas
pop
jge
pop
jae
push
jno
xlat
mov
jo
push
bound
mov
inc
out
icebp
inc
out
repnz
mov
inc
inc
mov
inc
inc
ret
cs
movsb
repz
movsl
mov
test
inc
add
push
inc
stos
sbb
pop
les
and
or
jo
jmp
testl
add
mov
icebp
sub
lods
hlt
xor
pop
inc
xor
scas
cmpsl
hlt
inc
scas
test
xor
out
xor
les
jno
out
fidivl
icebp
push
lret
sub
inc
ret
push
aad
stc
push
shrl
xlat
xor
and
push
mov
repnz
cltd
add
and
and
cmp
xor
out
movsb
push
out
push
mov
add
pop
mov
add
xlat
pop
pop
xor
sbb
stos
out
and
sub
cs
jmp
push
scas
inc
cmp
add
sbb
push
test
sub
daa
xchg
inc
or
je
jmp
and
cs
push
adc
gs
aam
inc
sbb
insb
mov
call
add
pop
imul
sub
rclb
test
pop
mov
sbb
lcall
jo
add
add
nop
sbb
ds
cmp
dec
mov
push
shr
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
outsb
add
adc
rol
sub
jae
add
adc
xchg
rcrl
add
rdtsc
pop
lea
insl
jae
in
jo
lcall
jb
cld
pop
jb
in
jo
pop
sbb
lea
add
packsswb
pop
arpl
movq
and
mov
add
orb
jne
adc
bound
push
insl
jp
add
add
loop
xor
xlat
stc
sub
xor
outsb
leave
and
js
xor
outsl
cmp
xor
mov
insb
sub
and
mov
pop
daa
test
jo
test
add
and
mov
pop
add
and
fs
imul
insb
ljmp
arpl
aad
outsl
mov
xor
add
add
xor
insl
mov
call
aad
call
aad
call
aad
call
aad
call
out
call
add
out
call
add
adc
jo
push
xor
xlat
push
imull
cmp
push
xlat
aaa
fcoms
push
lret
cmp
mov
das
lcall
les
cmovl
xor
dec
xchg
sub
inc
lret
xor
add
push
subb
out
xchg
sub
push
xchg
sub
adc
cmp
out
ja
mov
jl
movb
xor
dec
inc
sub
inc
cmp
add
add
dec
rorl
xor
inc
xor
mov
and
fs
mov
jns
add
sbb
push
jo
cmc
pop
gs
ljmp
add
add
dec
push
enter
loop
and
mov
js
mov
aas
add
mov
push
js
mov
popa
popf
xchg
dec
jo
notb
aam
imul
popa
pop
mulb
dec
inc
in
dec
outsb
cmp
ret
xlat
sti
gs
das
shr
imul
imul
sti
add
lret
add
adc
clc
push
push
jae
pop
jae
in
je
and
orl
pop
inc
or
pop
pop
insl
cvtdq2ps
or
inc
sbb
inc
bound
inc
insb
push
adc
sub
insb
ja
push
jo
ds
insl
jp
or
popa
cs
outsl
mov
outsb
insb
lahf
es
jb
sub
addr16
das
pop
add
xlat
call
and
jb
dec
arpl
cs
mov
in
addr16
insl
je
sub
jmp
cmc
imul
sub
cmp
xor
and
sub
mov
insl
stc
xchg
addr16
cmp
add
sti
mov
add
pop
and
jo
popa
and
imul
inc
add
fwait
popa
cmp
push
cltd
testb
imulb
xchg
out
and
xchg
adc
repz
push
cld
loope
sbb
call
sub
icebp
sub
lock
and
cmpsl
inc
adc
xchg
je,pn
fdiv
loopne
push
xor
divl
add
sub
and
push
daa
sub
xor
xlat
add
mov
xor
cmp
push
adc
and
dec
lret
add
and
sbb
sbb
mov
push
in
xchg
mov
xorl
sahf
in
push
imul
push
gs
dec
dec
stc
cmp
out
aas
add
push
dec
and
sub
sti
xor
cmp
mov
add
fucom
add
cmpsb
cmp
icebp
dec
sub
call
sbb
add
cmp
fldcw
jo
cmc
cmp
repnz
jbe
cli
dec
gs
les
das
sti
jb
outsb
vcomiss
les
push
xchg
movsb
cmp
xchg
leave
dec
jbe
mov
popa
jmp
ds
add
ds
add
shlb
in
stos
or
xchg
inc
hlt
lds
in
lods
or
cmpsl
xor
inc
mov
aaa
in
add
cmpsl
add
xor
aas
out
in
add
in
or
or
ljmp
outsl
mov
clc
pop
jb
pop
jbe
jae
jb
test
add
loopne
imul
xor
pop
cli
pop
xlat
jb
lcall
pushl
aad
decl
stc
call
sub
add
add
out
pushl
aad
jmp
aad
add
out
mov
aad
inc
aad
pushl
cmc
jmp
aad
pushl
add
clc
pushl
clc
inc
aad
addr16
and
mov
pop
add
xor
aad
je
in
fisubrs
and
andl
fs
xchg
add
or
and
dec
addl
push
xchg
sub
cmp
add
dec
ja
mov
or
mov
xor
cmpsb
cmp
push
mov
inc
push
je
cmp
test
push
sub
cmp
add
push
sbb
cmp
out
and
daa
cmp
std
divl
adc
xor
std
and
jmp
push
xor
shll
add
and
and
es
push
cwtl
es
push
and
mov
adc
fwait
push
jns
in
sbb
imul
push
jo
cmp
cmp
push
outsb
pop
jmp
inc
xor
iret
push
outsl
btr
jmp
lahf
sbb
imul
dec
and
add
mov
popa
jmp
rsqrtps
pop
testb
decl
das
jmp
icebp
out
sub
jge
sbb
adc
mov
inc
das
push
add
inc
dec
das
and
dec
das
inc
push
sub
inc
es
dec
outsb
daa
dec
push
jnp
inc
dec
ds
insl
outsl
pop
fsubrs
cs
jo
pop
fsubrs
mov
outsb
add
jno
jns
outsl
add
roll
lret
pop
add
pop
jo
maxps
adc
fcomi
arpl
cs
out
fdivs
out
enter
fdivs
mov
lock
inc
mov
fs
fwait
sub
push
xlat
lds
call
and
and
sub
xorl
add
and
arpl
mov
jb
cmp
push
add
mov
imul
mov
sbb
outsb
xor
mov
xor
push
cmp
add
je
xor
sub
pop
xchg
sub
insl
jae
push
pop
test
push
imul
icebp
sub
dec
dec
cli
add
insb
cmp
sbb
sbb
das
insl
cmp
and
out
call
add
xor
sbb
sbb
push
add
or
and
xlat
aas
ret
aas
rcrl
inc
jmp
sub
out
lods
push
mov
xchg
and
push
andb
xorl
out
aaa
add
out
push
add
out
inc
add
out
inc
add
out
call
sbb
xchg
dec
xor
jnp
or
je
jmp
xor
inc
jmp
sbb
and
add
add
sbb
aas
std
cmc
xor
scas
call
inc
gs
mov
sbb
and
outsl
mov
aam
popa
mov
cmpsb
dec
outsl
lcall
outsl
test
out
dec
mov
inc
push
mov
inc
add
cmc
cmp
inc
cltd
dec
popa
pop
mov
sbb
mov
gs
mov
inc
jbe
add
rcll
jmp
lods
dec
inc
adc
or
daa
das
pop
daa
add
xlat
pop
jae
adc
fcmovu
jno
mov
popa
outsl
mov
pop
outsb
mov
and
sub
push
jbe
cltd
and
daa
inc
and
pop
jae
aam
imul
xor
sub
add
mov
add
push
mov
and
pop
lods
pop
jae
pop
rorb
jb
lret
pop
mov
xor
add
inc
cmp
popf
fiaddl
adc
sub
jbe
ds
aaa
out
cmc
inc
in
jmp
adc
pop
mov
addr16
mov
call
cmpsl
xor
sbb
add
pop
and
add
xor
sub
stc
push
sbb
pop
inc
push
mov
add
jne
adc
and
jmp
int
xor
adc
pop
jb
in
jo
lds
jae
xor
pop
jae
xor
fs
pop
out
addr16
call
push
sbb
aaa
push
repnz
sub
movntps
sub
sub
sub
xor
cmp
das
add
xor
or
dec
jmp
push
rcrb
and
xor
repnz
sbb
xlat
sbb
xchg
sbb
inc
mov
leave
idiv
decl
movsl
inc
inc
ss
sub
push
sub
test
add
and
in
inc
add
or
test
outsl
sbb
add
pop
sbb
dec
gs
in
sub
and
dec
jbe
hlt
inc
inc
shl
push
pop
aad
inc
jns
and
jo
mov
inc
add
mov
out
adc
aam
jp
xchg
out
mov
andl
or
nop
aam
sub
cmp
and
add
adc
or
add
aad
push
in
out
out
sbb
stos
lcall
fwait
es
imul
pop
and
adc
aad
add
fdivs
mov
icebp
push
popa
popf
cli
add
sti
jne
dec
aam
outsl
stos
aam
inc
xchg
sti
add
pusha
gs
outsb
arpl
or
cmp
pop
jb
or
pop
fsubs
add
cli
pop
je
fsubrs
push
xlat
pop
insl
pop
int3
and
or
jae
cmp
cmp
xlat
and
and
sbb
jg
sbb
push
push
jle
dec
arpl
insl
cmp
add
dec
add
mov
sbb
aad
jno
xchg
adc
sti
lds
add
cmpsl
and
add
push
and
lahf
adc
jo
lds
push
add
xor
pop
mov
fdivr
test
mov
mov
mov
dec
and
inc
dec
xor
sub
push
mov
inc
xor
inc
and
mov
push
xor
pop
add
sbb
in
dec
sbb
xor
xor
add
inc
or
and
sub
push
testl
and
inc
les
push
cmp
xor
out
mov
and
cmp
adc
rorl
push
lds
jmp
pop
mov
jge
rorl
mov
adc
rolb
rcrb
push
or
inc
imul
gs
shrl
sbb
add
out
arpl
mov
dec
add
loop
jbe
hlt
cmp
sub
pop
inc
fs
adc
push
sbb
inc
fs
adc
gs
add
fnstsw
lods
mov
dec
imul
dec
jo
sarl
cmpsl
cmp
jmp
ss
add
test
dec
jbe
scas
bound
outsb
add
push
out
inc
popa
popf
add
test
cld
insb
ja
shrl
mov
push
dec
xchg
jne
xchg
or
pop
mov
pop
jbe
loop
insb
pop
std
shrb
fcmovnbe
push
insb
jecxz
add
sub
ret
repnz
lock
pop
hlt
sub
xlat
dec
sub
add
inc
sub
add
push
sub
add
inc
sub
inc
sub
add
sub
aas
add
fs
add
arpl
add
imul
add
add
add
inc
add
inc
add
cmc
inc
add
inc
add
or
inc
add
faddl
cmp
inc
add
inc
add
dec
inc
add
dec
inc
add
add
cmp
call
ds
add
dec
inc
add
sbb
add
jl
inc
xlat
shll
stc
inc
inc
xlat
mov
push
inc
xlat
data16
xor
mov
inc
xlat
mov
inc
xlat
out
inc
xlat
inc
jle
xlat
sub
xlat
sahf
imul
test
add
add
or
inc
xlat
xchg
stos
inc
xlat
sub
inc
xlat
fldt
xlat
xchg
inc
xlat
sbb
inc
xlat
test
inc
xlat
ficompl
inc
xlat
push
sbb
adc
sbb
cltd
adc
out
loopne
xchg
out
push
inc
xchg
out
fwait
xor
xchg
xchg
out
or
xchg
out
adcb
out
add
aam
add
aam
add
add
aam
add
aam
add
aam
ds
mov
es
cmp
inc
push
cmp
inc
push
les
cmp
clc
fsubl
out
and
mov
std
ret
jmp
mov
jbe
int
or
leave
clc
or
xchg
sbb
das
xchg
or
into
pop
insb
into
stc
push
xor
xchg
or
inc
fldenv
inc
xchg
pusha
js
add
jbe
aaa
xchg
sbb
push
xlat
insb
je
xchg
add
xchg
add
or
cld
and
and
into
xchg
sub
xchg
sbb
fildl
and
into
xchg
sbb
out
loop
gs
js,pt
shrl
add
aad
insb
ret
sub
gs
add
pushf
aam
fisttpl
pop
add
sub
jmp
sub
xlat
xchg
incl
add
xchg
arpl
ret
packsswb
push
and
lds
sub
push
das
jb
test
insb
mov
and
test
push
mov
push
ss
inc
sub
add
sbb
cmp
arpl
adc
das
xor
sti
add
popa
sub
push
push
and
add
sti
and
or
push
xor
xor
sub
adc
sub
aas
into
dec
add
xlat
sub
and
xor
sbb
adc
mov
mov
add
cwtl
sub
sbb
adc
inc
xchg
sub
subb
adc
add
out
call
add
out
call
add
add
out
call
add
out
call
add
out
call
add
out
call
add
out
call
jmp
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
scas
out
add
scas
out
add
jle
add
jle
add
outsb
out
add
outsb
out
add
jle
add
jle
add
outsb
out
add
outsb
out
add
add
ds
add
ds
add
cs
add
cs
add
ds
add
ds
add
cs
add
cs
add
in
add
in
add
out
in
add
out
in
add
in
add
in
add
out
in
add
out
in
add
mov
in
add
scas
in
add
scas
in
add
xlat
xchg
call
xchg
call
xchg
call
xchg
call
xchg
incl
add
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
in
jo
imul
sarl
push
imul
xchg
in
cmp
push
inc
xlat
cmc
add
add
add
out
lock
out
out
mov
jmp
add
out
call
add
out
call
add
out
call
add
jmp
inc
xlat
out
call
repz
test
or
out
call
add
xlat
out
push
add
out
enter
fadds
xlat
out
loopne
xlat
out
in
xlat
out
out
add
xlat
out
jmp
aam
into
lock
add
mov
loope
fldln2
add
mov
cmc
jmp
mov
fldenv
mull
aam
in
hlt
add
mov
repz
out
repnz
loop
or
arpl
adc
arpl
push
hlt
fs
adc
push
in
push
out
add
xlat
dec
idiv
call
stc
add
add
sub
add
add
es
xor
sub
and
xor
sbb
sub
clc
cmpsl
add
aam
add
aam
sti
in
cmpsl
add
ljmp
mov
repnz
ljmp
cmpsb
cld
add
cmpsb
sti
ljmp
repnz
add
add
jp
add
push
sti
jle
sti
add
add
sti
add
cld
ljmp
cld
ds
add
repnz
add
cmpsb
sti
add
repnz
cmp
add
cmp
add
cmp
cli
ljmp
repnz
cli
movsl
sti
cli
movsl
cld
out
icebp
add
out
icebp
cli
cli
movsl
cld
add
xchg
call
xchg
xlat
xchg
sti
xlat
xchg
call
xchg
call
xchg
sti
mov
xchg
test
sti
incb
add
xchg
sti
call
xchg
sti
call
mov
js
sti
xlat
mov
push
mov
call
xchg
call
mov
decl
sti
incb
sti
xlat
xchg
sti
pushl
xchg
sti
call
xchg
sti
call
xchg
call
xchg
adc
call
mov
xlat
out
or
outsb
jmp
test
add
out
call
add
out
or
outsb
or
outsb
leave
add
jmp
add
outsb
jmp
add
out
enter
enter
jmp
add
out
or
out
call
adc
or
outsb
leave
add
out
enter
jmp
add
enter
xlat
out
call
jmp
push
out
add
aam
add
push
incl
or
incb
or
sub
push
incb
jmp
push
out
or
push
incb
leave
aam
add
push
out
add
aam
orl
push
incb
or
out
orl
add
push
out
orl
sar
add
push
incb
jmp
push
out
or
out
add
push
outsl
adc
out
add
in
incl
out
out
add
imul
incl
mov
out
add
mov
ljmp
out
jmp
out
add
scas
out
incl
out
incl
add
incl
jbe
add
jle
add
data16
add
outsb
lock
outsb
lock
ds
ds
incl
ss
incl
ss
jmp
lock
ds
call
xchg
incl
xlat
popl
add
lahf
call
lahf
add
iret
xchg
add
xlat
xchg
fists
dec
incl
xlat
popl
add
xchg
incl
xlat
xchg
add
iret
xchg
add
add
iret
xchg
call
xchg
add
xlat
lahf
incl
xlat
popl
add
xchg
add
fistps
add
xlat
xchg
call
incl
fistps
incl
xlat
xchg
dec
popl
add
lahf
call
lahf
add
xlat
xchg
add
xlat
fucomip
call
add
mul
add
out
call
add
out
lock
out
loopne
aad
call
add
add
out
jmp
in
mov
imul
out
imul
out
jmp
add
out
call
jecxz
out
imul
xlat
out
call
add
out
jmp
add
out
call
add
jmp
add
out
call
call
cmp
shrl
call
xor
add
hlt
lahf
sti
imul
pop
add
out
add
outsb
add
aam
add
hlt
pop
add
pop
add
out
add
aam
add
aam
add
mov
add
lahf
sti
imul
outsb
add
aam
add
je
add
lahf
sti
push
aam
add
pop
add
add
out
add
aam
add
xor
sti
add
jmp
add
mov
ljmp
jmp
add
mov
ljmp
jmp
add
mov
jle
add
out
ljmp
jle
jnp
jmp
add
jmp
add
ljmp
mov
icebp
add
scas
repnz
repnz
mov
repnz
add
scas
icebp
add
jle
or
icebp
add
repnz
icebp
or
jle
add
repnz
outsb
repnz
xchg
pop
xchg
xchg
call
xchg
add
xchg
or
xchg
pop
xchg
xchg
add
xchg
call
xchg
call
xchg
call
xchg
pop
xlat
xchg
add
add
xchg
call
xchg
call
mov
pop
aad
add
adc
mov
add
xchg
call
mov
pop
adc
xchg
or
mov
add
xchg
call
xchg
pop
adc
xor
add
out
call
add
xor
add
lock
add
cs
add
out
call
add
cs
add
add
out
call
add
cs
add
cs
add
into
call
inc
xlat
out
clc
inc
pop
iret
call
add
out
fadds
iret
call
inc
xlat
into
clc
inc
pop
out
call
add
into
fadds
pop
out
call
jmp
adc
add
aam
add
aam
add
xchg
out
and
xchg
out
add
add
xchg
cs
xchg
out
and
aam
add
aam
and
aam
and
aam
add
xchg
cs
xchg
cs
xchg
out
add
xchg
cs
xchg
cs
aam
and
xchg
out
and
aam
add
aam
and
adc
add
adc
and
aam
add
adc
add
aam
and
aam
add
adc
and
aam
and
adc
add
sahf
out
add
add
sahf
das
inc
and
inc
add
inc
and
inc
add
inc
and
out
add
dec
out
inc
and
out
add
cs
add
ds
inc
and
das
inc
add
das
add
push
out
inc
add
das
add
out
add
out
cs
and
out
add
push
out
inc
add
das
add
out
out
and
in
out
and
xchg
sti
add
xchg
sti
ljmp
mov
xchg
sbb
xchg
sbb
out
and
xlat
xchg
call
test
fildl
fildl
idiv
pusha
mov
call
test
pop
xlat
test
pop
xlat
xchg
call
test
call
xchg
pop
fildl
lcall
xlat
xchg
pop
roll
idiv
or
negl
xlat
test
call
xchg
incl
add
xchg
pop
xlat
xchg
call
xchg
pop
xlat
xchg
pop
xlat
test
call
test
call
test
pop
fildl
call
out
out
imul
call
sti
mov
call
sti
fdiv
out
jo
out
enter
shl
sti
pop
cltd
out
xlat
repnz
call
bnd
add
out
out
xlat
out
out
add
shl
add
out
out
lock
call
sti
add
call
sti
call
out
sub
fsubr
call
add
out
sub
aam
call
hlt
mov
add
shr
add
aam
adc
shl
add
aam
adc
sub
jmp
test
adc
imul
jmp
fucomi
add
add
aam
adc
inc
cwtl
or
inc
in
add
aam
adc
and
adc
aam
add
aam
add
aam
adc
in
or
aam
add
jecxz
add
aam
add
jmp
jmp
out
repnz
repnz
out
mov
sti
sldt
mov
repnz
outsb
jmp
adc
jmp
adc
add
movd
add
jle
decl
jle
add
adc
jmp
adc
fwait
sti
movd
add
outsb
fwait
decl
lcall
cs
sti
ljmp
fwait
sti
ds
add
ljmp
push
mov
add
xchg
call
pop
sub
mov
sbb
ljmp
xchg
call
cltd
sub
nop
enter
pop
incl
xchg
call
mov
sub
pusha
subb
pop
mov
call
xchg
call
fldt
incl
sub
pushl
mov
call
xchg
call
loope
lcall
sbb
adc
incl
add
xchg
call
push
pop
push
cvttps2pi
call
xchg
call
out
call
and
xchg
lea
mov
out
call
and
xchg
or
nop
xchg
jmp
add
out
shlb
js
xchg
sub
xlat
out
call
add
out
call
add
out
push
sub
add
cmp
or
and
stos
sub
xchg
mov
or
cltd
sub
xchg
test
xchg
jno
call
xchg
sti
xor
xchg
sti
mov
in
xchg
sti
jmp
clc
xchg
sti
or
xchg
sti
sti
clc
xchg
sti
daa
out
xchg
sti
cmp
mov
xchg
sti
jns
xchg
sti
add
mov
xchg
sti
xor
xchg
sti
inc
call
sti
push
out
xchg
sti
imul
xchg
sti
sti
call
sti
lahf
out
xchg
sti
mov
xchg
sti
jns
xchg
sti
push
mov
xchg
sti
and
fadd
cli
jmp
cli
push
leave
cli
jmp
int3
cli
jmp
int3
cli
push
int3
cli
incl
int
jmp
int
incl
add
int3
cli
ljmp
lret
xor
cli
cmp
cli
decl
cli
clc
leave
cli
jl
cli
jle
add
mov
cli
ljmp
add
repnz
cli
pushl
cli
incl
int3
cli
pushl
cli
pushl
int3
cli
call
cli
pushl
int3
cli
call
test
call
out
and
lock
call
mov
incl
add
mov
call
lret
and
inc
aam
mov
ds
mov
call
xor
call
ds
and
pushl
ljmp
jmp
lcall
call
decl
call
mov
cmp
push
pushl
mov
call
das
sub
and
sbb
enter
int
add
mov
sub
xchg
xchg
loopne
jns
fcoms
jno
enter
rclb
sub
xchg
lret
sub
xchg
fldenv
nop
xchg
daa
mov
sub
js
xor
sub
sti
daa
pusha
xchg
pop
daa
pop
xchg
dec
daa
add
push
xchg
xchg
daa
dec
xchg
mov
daa
cmp
push
daa
sub
add
icebp
xchg
sti
sti
mov
xchg
sti
mov
xchg
sti
xchg
mov
sti
jns
xchg
sti
push
mov
sti
xor
mov
sti
adc
sti
lret
mov
sti
loope
xchg
sti
loope
xchg
sti
add
mov
sti
and
mov
sti
inc
jne
sti
sbb
add
sti
jmp
jne
sti
push
jne
sti
mov
xchg
sti
lahf
jne
sti
xchg
sti
jmp
xchg
sti
jmp
xor
out
add
jp
cld
pushl
cld
decl
cld
decl
cld
jp
cld
decl
mov
decl
mov
out
jmp
add
mov
mov
mov
incl
add
mov
ljmp
mov
jmp
mov
dec
mov
decl
mov
call
cld
call
jmp
add
mov
jmp
mov
incl
cld
ljmp
mov
pushl
cld
decl
mov
incl
mov
call
pop
xor
sub
out
sbb
in
adc
incl
push
jae
add
out
imul
ds
ljmp
test
and
pop
jmp
inc
cmp
pop
xor
xlat
mov
cli
bound
pop
repnz
xlat
stos
push
insb
and
repz
mov
inc
repz
jecxz
jmp
lock
cld
xchg
pushl
div
push
jmp
xchg
push
out
mov
mov
int
adc
add
add
lock
lock
aad
lods
sbb
in
mov
add
add
ret
clc
add
add
ret
faddl
lcall
ret
ja
ss
out
xor
add
cld
inc
adc
call
es
dec
out
xor
add
repz
add
out
and
add
add
cmc
and
incb
add
out
ret
add
jecxz
adc
das
cmp
gs
sbb
inc
jmp
xor
add
push
adc
aam
add
adc
sahf
daa
adc
lar
aad
imul
sub
adc
xor
movsb
push
lcall
jmp
mov
add
adc
jmp
test
popa
sbb
outsb
pcmpeqd
gs
add
mov
bound
ficoml
inc
and
insl
je
jle
arpl
xorl
adc
dec
outsl
imul
je
lock
add
insl
xor
fs
add
push
mov
pushl
jle
insl
push
lcall
sbb
inc
imul
out
inc
imul
jg
add
popf
outsb
xlat
ljmp
repz
lcall
push
inc
mov
mov
insb
mov
idivl
xlat
filds
mov
jmp
mov
pushl
add
pop
ljmp
into
insl
jno
lcall
subb
jo
lock
outsb
pop
ljmp
cwtl
decl
loop
daa
es
ss
dec
and
cmp
jae
pop
in
fs
cwtl
jns
in
jae
out
sbb
clc
adc
pop
out
add
icebp
jmp
in
or
cld
pop
out
add
mov
out
stos
out
push
xlat
ljmp
mov
shlb
sbb
ret
mov
xchg
adc
loop
adc
out
jne
mov
adc
repnz
adc
rolb
out
add
clc
cmp
push
ret
mov
xor
cld
adc
inc
mov
add
xor
inc
and
push
push
adcb
add
adc
aam
add
cmp
push
add
push
aas
decb
jbe
aam
add
aam
add
xor
insl
les
adc
sbb
insl
les
xor
and
outsl
popf
adc
outsl
jle
mov
mov
mov
fs
mov
adc
sbb
add
push
insb
dec
stos
ljmp
cmpsl
mov
add
push
jo
add
das
inc
pop
xorl
roll
arpl
jg
add
pusha
jae
shrl
fisttpl
dec
inc
adcl
outsb
sbb
js,pt
cwtl
dec
jb
xchg
pusha
jae
in
stos
add
outsl
push
pusha
xchg
pop
outsb
add
pop
nop
pusha
cmp
outsl
inc
scas
fs
dec
jno
push
mov
pop
xor
loopne
insb
mov
aam
bound
and
push
and
loopne
add
out
adc
out
test
xchg
xlat
fsub
jae
shr
insb
cmc
imul
inc
in
ljmp
xchg
decl
jae
pop
repnz
pop
add
xlat
push
call
dec
mov
shll
decl
push
call
jae
ds
pusha
jb
push
xlat
push
out
jae
ja
dec
jae
insb
xor
xor
out
dec
call
and
pop
idivb
adc
cmp
xor
addb
leave
add
int
pop
cs
add
mov
or
rol
or
cli
mov
sub
ret
pushf
add
adc
rolb
or
xchg
fidivrs
mov
cli
shr
add
sti
int3
jne
scas
sti
mov
or
xor
les
push
aam
gs
mov
jbe
mov
jne
pusha
std
inc
jmp
add
aam
add
mov
inc
dec
js
push
dec
outsl
add
shll
sbb
jmp
and
dec
test
loop
sub
adc
fs
push
and
int3
adc
sti
pusha
fldcw
sbb
aam
add
inc
std
fs
gs
ljmp
lock
fldt
std
add
add
xchg
pusha
je
jp
arpl
jno
ljmp
cld
mov
in
andb
lea
sbb
insl
imul
jmp
je
lahf
outsl
jb
test
push
je
sahf
inc
push
and
push
je
mov
dec
sbb
je
mov
out
add
insl
xchg
jno
sbb
or
sub
jle
push
xlat
xchg
pushl
add
pop
inc
pop
and
xor
inc
jne
arpl
sub
sub
sub
jae
sub
in
add
push
inc
xlat
enter
xor
js
add
hlt
flds
insb
in
out
insb
mov
loopne
xlat
leave
add
add
add
fadds
pusha
mov
cmpsl
loop
mov
dec
loop
test
clc
cmc
add
shlb
out
gs
call
loop
mov
lea
or
movsb
out
or
repnz
push
call
clc
out
xor
loopne
incb
adc
inc
fiadds
add
adc
in
or
es
adc
add
out
call
add
out
call
add
out
call
add
out
call
add
out
call
add
out
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
in
add
out
in
add
out
in
add
in
add
add
in
add
out
in
add
or
into
int3
and
dec
sub
mov
jbe
lcall
ret
add
or
das
leave
xor
pop
stc
or
inc
iret
jne
cld
dec
add
mov
out
aas
or
ljmp
mov
xorl
xchg
jne
loopne
xor
mov
add
jne
in
sub
mov
jne
clc
dec
sbb
mov
jne
call
xchg
push
iret
jne
lock
sub
mov
jecxz
dec
iret
jne
cld
nop
sub
add
out
add
fidivs
hlt
push
lods
add
jae
hlt
int3
sbb
je
lock
in
incb
inc
fdivr
lock
add
mov
add
push
stos
push
test
stc
push
mov
out
mov
xchg
in
dec
sbb
mov
jmp
or
lock
imul
dec
xor
jmp
mov
mov
int3
or
into
int3
and
xorl
sti
mov
xchg
sub
repz
mov
add
xor
push
dec
sub
push
js
mov
push
out
sahf
mov
xlat
or
push
push
in
push
xchg
out
mov
mov
cld
xlat
out
add
cmp
xchg
jb
add
incb
mov
inc
cld
pop
jmp
mov
add
and
push
lock
push
xchg
out
xchg
addr16
lea
and
add
sub
into
int3
mov
into
int3
add
mov
fldcw
xor
ds
or
stos
into
int3
mov
into
int3
add
mov
jmp
mov
out
ljmp
int3
adc
into
int3
and
out
xorl
add
cs
loop
push
inc
add
xlat
addr16
clc
outsl
xchg
inc
xlat
imul
loopne
jg
iret
addr16
cld
pop
sub
push
pop
and
push
dec
xor
push
mov
sbb
push
cwtl
xor
add
out
add
fisubs
cld
push
scas
add
jnp
dec
adc
fildl
cld
rolb
or
decb
mov
or
jbe
jg
add
add
xlat
xchg
jmp
rol
xor
mov
int3
or
into
int3
mov
out
add
jae
or
xlat
sbb
int3
or
into
int3
and
xorl
jp
xlat
jmp
mov
out
add
shrl
or
addr16
or
mov
jg
inc
add
jae
add
xlat
xchg
mov
jnp
rcl
dec
cld
pop
and
cmp
xor
mov
sub
clc
add
addr16
lock
push
inc
push
nop
sti
pmovmskb
mov
inc
or
add
addr16
clc
dec
repnz
xchg
fiadds
or
filds
or
inc
or
add
sub
mov
out
imul
mov
xorl
inc
iret
addr16
in
sub
mov
xchg
call
addr16
call
pop
outsl
add
xlat
addr16
lock
cld
icebp
add
jb
add
out
xchg
in
push
lock
and
mov
out
or
out
add
loop
mov
push
fistpl
adc
add
pop
and
add
decb
xlat
add
mov
popl
mov
mov
or
adc
pop
and
mov
out
inc
out
inc
hlt
dec
sub
mov
out
adc
out
sbb
add
out
xchg
insl
jp
xlat
add
mov
add
lcall
push
sub
add
add
or
push
add
mov
jns
ljmp
xchg
push
ljmp
out
inc
stos
test
mov
addl
or
call
xor
push
scas
pusha
std
lcall
xor
mov
addl
adc
inc
hlt
pop
sub
adcl
xchg
mov
add
gs
loopne
jmp
in
adc
into
int3
andb
xor
imul
ljmp
clc
outsl
jp
inc
xlat
arpl
xchg
jg
iret
gs
cld
dec
sub
push
pop
and
push
pop
xor
push
shlb
mov
stos
into
int3
add
ret
and
xchg
out
imul
add
xlat
gs
add
mov
sbb
int3
add
jae
mov
mov
xor
dec
es
mov
xor
mov
arpl
pop
and
mov
pop
scas
jbe
push
stc
stc
add
cs
xchg
bound
pushf
and
jne
imul
add
psrlq
adc
sbb
lods
xlat
xchg
push
mov
ja
inc
mov
shrb
movsb
scas
xchg
or
into
int3
mov
into
int3
mov
xlat
ret
out
xor
xlat
push
push
add
das
add
and
call
jb
or
imulb
imul
add
cmpsb
imul
push
jne
hlt
xor
push
inc
xlat
jno
aam
xor
add
mov
jmp
push
add
add
add
add
lock
add
push
push
out
add
lock
add
jne
shll
add
pop
out
sub
aad
add
xlat
leave
leave
mov
ljmp
add
xlat
imul
inc
xlat
push
xchg
pop
ljmp
loop
adc
aam
or
out
je
mov
adc
int3
and
mov
out
inc
lret
incl
mov
out
add
rcll
mov
int3
mov
push
ret
out
jno
xlat
addr16
or
add
fimull
iret
out
push
cmp
sbb
mov
fiaddl
or
gs
call
xlat
addr16
push
jmp
idiv
or
or
repnz
push
add
xlat
out
imul
xlat
jae
lock
sub
mov
popl
dec
iret
sbb
ljmp
loop
inc
add
stos
out
add
xlat
xchg
mov
jnp
rcl
inc
hlt
dec
and
cmovo
outsl
pop
pop
sub
sbb
add
dec
call
ret
mov
push
das
addr16
adc
mov
jae
dec
aaa
mov
xchg
loop
inc
lret
push
xchg
dec
or
es
push
pop
sbb
mov
push
ljmp
add
jb
sbbl
shrl
and
jmp
push
in
xchg
test
jg
fildl
add
out
mov
push
jg
clc
incl
sub
xorl
je
dec
in
push
push
out
push
ljmp
sbb
add
sti
sbb
xor
out
xchg
sbb
dec
xor
jno
lock
xor
push
inc
xlat
test
xor
out
xchg
sbb
add
sbb
mov
push
mov
push
push
out
add
add
push
dec
sub
push
cmp
dec
push
push
out
xchg
addr16
fcomps
mov
xchg
incl
addr16
loopne
and
push
pop
sbb
push
ss
pop
jno
sbbl
xchg
add
insl
mov
add
mov
push
aaa
gs
fcom
insb
mov
inc
sub
loopne
fcmovnbe
push
xchg
out
es
lret
addr16
mov
xchg
aam
das
add
sbb
push
mov
insb
or
sub
mov
lcall
pop
loop
push
push
out
jle
lahf
sbb
xlat
stc
sub
loop
push
inc
add
xlat
sbb
adc
add
loop
push
push
out
push
call
push
stos
push
mov
lcall
jo,pt
adcl
out
mov
dec
push
xchg
out
push
call
push
stos
or
sub
inc
add
fwait
push
inc
xlat
jmp
sub
sub
std
dec
imul
dec
fyl2x
push
add
push
out
add
sbb
add
sbb
inc
lahf
push
push
or
es
aam
mov
pushl
add
xlat
out
xchg
add
into
int3
and
out
mov
adc
int3
andb
mov
xchg
pop
shr
push
xchg
out
xchg
cwtl
adc
add
adc
into
int3
andb
outsl
sub
aas
xlat
dec
push
push
out
push
call
push
xor
mov
imul
pop
add
push
push
out
dec
incl
imul
and
xorl
inc
jg
add
xlat
xor
add
cwtl
mov
add
out
add
lcall
inc
cmp
add
xlat
jns
or
icebp
push
add
xchg
out
jmp
mov
mov
loop
fisubl
inc
xlat
out
add
xlat
pop
or
shlb
inc
xlat
out
add
xlat
jno
lock
ret
ret
inc
add
out
add
push
sub
push
push
out
add
fadds
inc
cs
inc
xlat
xchg
repnz
push
out
xchg
dec
mov
push
inc
xlat
jns
call
add
aam
cmp
dec
aas
ja
fsubl
icebp
inc
add
add
push
xchg
out
sahf
cld
subb
inc
xlat
jecxz
aas
xlat
popa
add
ret
inc
add
insb
jg
fists
cli
adc
je
push
inc
xlat
lea
push
push
out
push
call
push
xor
mov
pop
xchg
mov
cltd
insb
sti
sbbl
add
xlat
notb
out
push
call
push
xor
mov
pop
mov
js
cld
or
icebp
jae
ja
loopne
ja
faddl
insb
jg
iret
popl
push
xchg
out
xchg
movsl
lea
push
xchg
out
incb
xchg
aam
std
push
out
inc
stc
fsubrs
or
add
add
dec
call
push
in
mov
add
dec
mov
ja
loopne
stc
add
out
mov
push
pushf
adc
add
out
out
dec
sar
xchg
repnz
ja
clc
pushf
mov
jae
ja
hlt
stos
lods
add
lcall
mov
aam
stc
mov
ja
clc
push
sub
xchg
add
aam
stc
xor
notb
out
incb
or
and
in
lods
add
xlat
sbb
push
inc
xlat
sbb
push
inc
xlat
push
dec
imull
les
dec
mov
inc
add
add
xlat
out
xchg
push
rorl
xlat
out
push
call
push
xor
mov
bound
add
xlat
mov
sti
test
in
xor
push
sub
xlat
insl
movb
cli
push
xchg
out
add
push
xchg
out
mov
jmp
mov
add
mov
in
xchg
cmp
int3
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
add
xlat
out
add
mov
fcoml
xor
mov
xor
scas
add
xchg
add
hlt
rorl
xchg
pop
cmp
imul
imul
in
cmp
rclb
cmp
rcrb
push
rcll
js
jg
push
rcrb
aas
cmp
int
test
out
data16
aas
add
pusha
rolb
add
mov
add
rcr
sbb
push
filds
xor
fisttpll
adc
fcoml
xor
fsubl
xor
fcoml
mov
pop
xor
jl
push
fstl
xor
fmull
xor
fistl
xor
fistl
add
arpl
mov
xor
fcomi
xor
xor
fimull
xor
ficoml
xor
fidivl
xor
ficompl
push
fimull
xor
xor
fimull
xor
fcompp
inc
xor
jne
jo
pop
xor
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
xlat
out
add
add
xlat
out
add
xlat
out
add
xlat
out
add
test
inc
add
inc
add
inc
add
inc
add
les
enter
int3
les
rol
inc
add
les
fadd
inc
add
les
loopne
inc
add
les
call
les
lock
hlt
les
clc
les
cld
les
add
inc
add
inc
add
lds
or
inc
add
lds
adc
inc
add
lds
hlt
les
sbb
inc
add
lds
and
inc
add
lds
sub
inc
add
lds
xor
inc
add
lds
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
lds
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lds
enter
push
lds
int3
lds
rol
inc
add
lds
fadd
inc
add
lds
hlt
les
clc
les
loopne
inc
add
lds
xchg
lds
call
lds
lock
hlt
lds
clc
lds
rol
inc
add
lds
add
inc
add
inc
add
movb
lds
or
inc
add
movb
movb
movb
movb
movb
movb
movb
movb
lds
xor
inc
add
inc
add
movb
movb
movb
movb
movb
movb
movb
movb
lds
pop
movb
movb
movb
movb
movb
movb
movb
movb
lds
js
inc
add
add
movb
movb
lds
mov
inc
add
inc
add
les
push
movb
movb
movb
movb
movb
movb
movb
movb
les
mov
inc
add
inc
add
inc
add
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
or
inc
add
add
inc
add
movl
adc
inc
add
movl
push
movl
sub
inc
add
inc
add
movl
xor
inc
add
inc
add
movl
cmp
inc
add
inc
add
add
inc
add
les
dec
movl
and
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
movl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
movl
or
inc
add
lds
mov
movl
movl
int3
movl
aam
inc
add
movl
loopne
inc
add
movl
in
movl
lock
clc
movl
cld
movl
mov
enter
lds
or
inc
add
inc
add
enter
enter
enter
enter
les
and
inc
add
movl
sub
inc
add
inc
add
enter
movb
enter
enter
lds
or
inc
add
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
lea
push
push
push
push
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
movb
lea
push
push
push
mov
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jne
push
push
push
push
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
pusha
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
push
call
push
push
push
push
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
mov
pop
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
