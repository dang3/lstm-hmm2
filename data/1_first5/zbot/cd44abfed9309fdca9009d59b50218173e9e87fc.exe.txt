push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
lea
push
call
push
lea
push
call
movl
movl
movl
movl
movl
movl
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
lea
push
call
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
lea
push
call
call
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
push
push
call
push
push
call
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
add
add
xchg
aad
add
gs
out
arpl
fs
jae
add
outsl
popa
fs
mov
jns
lods
inc
add
shrb
fs
jne
jns
mov
add
je
imul
dec
popa
outsb
jo
gs
xchg
add
add
gs
dec
gs
imul
jae
jb
popa
je
xchg
add
add
je
add
jae
imul
jb
inc
xchg
add
add
arpl
gs
icebp
dec
popa
outsb
clc
insb
gs
xchg
add
add
add
js
inc
add
add
rolb
add
inc
add
je
xchg
inc
js
jb
xchg
add
popa
fs
bound
jb
inc
add
add
arpl
xor
jb
insb
insb
xchg
add
add
jbe
es
xor
sub
jae
je
add
jno
arpl
jne
fs
fs
arpl
ja
add
addr16
loope
insb
inc
shrb
add
add
addr16
rcrl
shrb
add
add
outsb
insl
popa
movsb
push
imul
jge
add
jb
sbbl
gs
add
dec
arpl
push
insb
insb
outsl
aaa
add
add
arpl
cmp
push
insb
insb
xchg
add
add
je
es
arpl
jno
gs
jo
add
pop
add
add
xchg
jmp
add
xchg
jmp
add
add
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
mov
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
jmp
add
xchg
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
xchg
add
add
jmp
jmp
xchg
add
mov
cwtl
std
incl
xchg
je
jmp
xchg
add
or
push
add
sar
call
xchg
add
nop
push
add
jmp
idiv
call
xchg
add
cltd
add
in
xchg
jmp
xchg
add
in
xchg
call
jmp
jecxz
jmp
xchg
add
jmp
xchg
adc
jmp
mov
std
ljmp
std
ljmp
ljmp
jge
jge
ljmp
ljmp
cmp
int
add
std
cmp
cmp
std
ljmp
cld
std
cld
in
cld
in
cld
std
cld
std
cld
in
cld
in
or
add
mov
cld
call
add
xchg
out
add
jo
or
add
xchg
adc
add
ljmp
add
add
add
xchg
leave
add
mov
pusha
popa
enter
xchg
and
add
or
xchg
jmp
add
xchg
jmp
add
xchg
sub
aam
jno
xor
add
roll
xchg
jmp
xchg
add
jmp
add
jmp
add
xchg
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
jmp
xchg
add
jmp
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
insl
add
add
add
jge
add
jge
add
insl
add
add
add
cmp
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
out
add
add
xchg
out
add
add
xchg
out
add
add
xchg
out
add
add
xchg
jmp
jmp
jl
xchg
jge
add
jl
xchg
aas
jl
xchg
sub
mov
add
mov
xchg
fistpll
xchg
or
idivl
xchg
sbb
jl
xchg
add
jl
add
xchg
add
xchg
add
jl
add
jl
add
jl
add
jge
add
arpl
add
jge
add
jge
add
jge
add
jge
add
jle
add
add
sbb
adcb
jns
xchg
add
xchg
add
xchg
add
adcb
outsl
adcb
pushl
adc
jmp
adc
adc
pushl
adc
mov
adc
call
incl
sub
pushl
and
call
sub
call
repnz
js
std
incl
call
std
lcall
repnz
decl
ljmp
idivb
std
stos
std
incl
movsb
std
lcall
movsb
std
jmp
add
add
lret
jo
add
add
imul
add
jno
add
jno
add
bound
add
arpl
add
bound
add
bound
add
popa
add
xor
add
popa
add
pop
bound
add
popa
add
mov
add
add
outsl
add
add
outsl
add
stc
outsb
add
sub
outsl
add
mov
add
movsl
outsl
add
xchg
imul
xchg
stos
jno
xchg
jno
xchg
mov
add
jo
xchg
aad
add
jno
xchg
icebp
jo
xchg
outsl
jo
xchg
dec
jo
xchg
aas
jo
xchg
lahf
jo
xchg
das
jo
xchg
sub
xchg
cmp
jo
add
addl
cltd
addl
test
xchg
add
xchg
add
xchg
add
insb
add
std
push
add
push
add
push
add
push
add
push
add
push
add
xchg
add
xchg
add
push
add
push
xchg
add
push
add
push
add
push
add
imul
add
insl
xchg
add
xchg
add
insl
xchg
add
xchg
add
insb
xchg
add
insb
xchg
add
lods
mov
add
test
add
rolb
aad
add
iret
scas
add
mov
add
scas
jg
add
add
add
add
insl
jg
add
js
add
push
add
mov
add
leave
das
add
aad
add
jmp
and
add
sub
add
and
add
add
add
add
mov
ljmp
test
loop
add
arpl
add
add
sub
xchg
jae
add
jbe
add
xchg
add
pop
xchg
add
mov
add
add
add
and
add
repz
sub
add
xor
add
add
lods
add
add
add
lret
push
add
loope
add
inc
push
add
xchg
add
arpl
add
subl
add
jp
xchg
push
jp
xchg
cmp
xchg
arpl
xchg
outsl
jns
xchg
push
jp
xchg
sub
jp
xchg
int
add
jp
xchg
jmp
add
xchg
cmpsl
js
xchg
xlat
add
xchg
daa
mov
xchg
iret
xchg
xchg
mov
xchg
xchg
jecxz
add
addb
pop
addb
xchg
xchg
add
addb
iret
addb
popl
add
roll
xchg
add
adcb
push
xchg
add
adcb
ret
adcb
fildl
xchg
add
adcb
inc
addl
xchg
add
adcb
jge
xchg
add
adcb
xchg
adcb
adcb
xchg
add
mov
jp
lcall
adc
mov
adc
jmp
decl
lcall
pop
mov
lret
mov
sbb
call
adc
pushl
inc
sbb
jmp
sbb
call
jmp
jmp
out
sbb
call
adc
inc
sbb
jmp
decl
addb
pop
test
add
test
add
test
add
insl
addb
pop
addb
pop
addb
cmp
add
imul
add
imul
add
jge
add
jge
add
add
dec
jge
add
add
std
jge
add
jle
add
mov
add
xchg
add
xchg
das
xchg
add
addr16
add
xchg
add
xchg
add
xchg
add
js
xchg
add
xchg
pop
jns
xchg
sub
js
xchg
dec
jns
xchg
aas
jns
xchg
xor
xchg
pop
jns
xchg
xlat
add
xchg
lds
add
jbe
xchg
call
add
adc
add
adc
jbe
xchg
hlt
add
add
add
adc
jp
xchg
fwait
jns
xchg
add
add
or
jns
add
add
mov
add
jmp
add
xor
jbe
add
jbe
add
xchg
cmp
xchg
sub
xchg
cmp
xchg
sbbb
sub
xchg
add
add
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
xchg
xchg
add
filds
add
adc
add
adc
and
add
sbb
and
add
arpl
add
sbb
add
add
fwait
lret
add
scas
ret
add
mov
add
mov
add
lret
add
add
jmp
xchg
add
mov
scas
shlb
mov
xchg
imul
xchg
push
push
mov
sbb
andb
mov
dec
cwtl
mov
mov
jle
icebp
inc
push
add
cmpsb
or
and
subb
pop
inc
neg
ljmp
sahf
xor
add
rclb
mov
jp
pusha
rcrb
rclb
jg
mov
out
outsb
pop
cmc
or
rcll
movsb
cltd
add
xor
sbb
dec
inc
mov
sti
or
push
mov
or
inc
jnp
and
xchg
inc
mov
mov
movsb
sub
xchg
aaa
sub
push
cmp
into
ja
daa
mov
mov
sbbl
xor
jns
ficoml
adc
sub
lahf
loop
std
jge
cltd
fimull
push
fcom
inc
sub
dec
in
shrl
xchg
add
std
adc
adc
xor
add
xlat
cmp
mov
inc
push
roll
xchg
shrb
sbb
imul
xchg
lcall
inc
mov
rorl
mov
lcall
cmpsb
into
jo
adc
xchg
xchg
jmp
imul
push
ss
xchg
jmp
cmp
xlat
int3
push
adc
xchg
add
add
in
fiaddl
pusha
xchg
shrb
add
pop
stos
cmp
mov
shrb
sbb
add
out
or
rclb
push
cmp
shrb
out
in
adc
xor
pushf
in
dec
arpl
movsb
xor
jnp
mov
leave
add
scas
sub
add
xor
adc
adc
push
dec
mov
jae
cmpsb
jg
out
gs
add
orb
mov
popa
push
std
es
ror
lcall
ja
stos
sub
adc
and
mov
int3
nop
inc
out
iret
adc
test
inc
pop
dec
addr16
icebp
rclb
pusha
dec
add
andb
into
out
adc
inc
add
inc
cmpsb
std
sti
or
out
adc
les
adc
dec
ds
or
insl
push
rclb
ret
mov
rolb
mov
loopne
xchg
pop
or
adc
mov
rolb
mov
jnp
sahf
les
test
adc
addb
push
fcmovnbe
cmp
movsl
mov
std
jmp
aaa
sbb
test
mov
xor
fwait
repnz
pushl
add
sbb
mov
test
jmp
cltd
js
icebp
or
shlb
xchg
cltd
mov
push
mov
bound
je
je
test
jo
xchg
mov
outsl
je
and
jns
imul
push
dec
jb
imul
add
fldcw
add
imul
push
cmp
cltd
cmp
adc
push
xchg
add
adcl
cmp
out
ret
adc
xor
mov
add
imul
hlt
push
out
pop
les
push
les
loope
xchg
or
or
jmp
add
xchg
add
jmp
pushf
inc
add
xchg
add
loope
add
sbb
add
add
cltd
inc
add
xchg
push
add
xchg
and
fsts
add
stc
xchg
lock
fsubs
lock
xchg
and
lock
addb
nop
inc
add
xchg
and
imul
cwtl
addb
nop
add
mov
add
jmp
add
stc
mov
add
sub
loopne,pn
add
or
or
std
or
add
or
incl
jo
std
or
add
or
add
or
mov
or
add
or
mov
add
or
jge
sbb
jge
nop
add
cmp
insl
or
jge
cmp
jge
rolb
cmp
adc
insl
or
cmp
or
or
xchg
out
mov
or
xchg
mov
add
out
push
xchg
out
adc
aam
jecxz
fiaddl
xchg
out
je
out
xor
out
enter
or
add
or
xchg
out
test
or
xchg
mov
or
or
out
cwtl
xchg
fildl
xchg
out
jl
out
cmp
out
fcoms
or
jmp
or
call
or
add
or
add
or
flds
add
or
jmp
hlt
or
add
add
add
or
jmp
or
call
add
add
or
add
or
jmp
or
add
or
jmp
add
add
or
add
or
add
add
add
or
add
or
add
fistl
data16
lahf
es
add
push
add
lahf
xchg
jmp
mov
add
nop
add
add
lahf
repnz
nop
add
cli
xchg
verw
lahf
push
add
lahf
adc
jmp
xchg
or
jmp
lahf
and
jmp
popl
add
lahf
addb
lahf
inc
add
nop
in
add
xchg
or
jmp
lahf
cli
call
add
pop
add
jge
add
faddl
aas
sbb
cmp
pop
add
pop
push
add
pop
dec
add
std
push
push
add
push
adc
or
addl
std
push
add
push
jno
std
push
xor
in
or
add
push
popa
add
or
add
mov
push
inc
add
std
add
add
sbb
insl
or
add
xchg
out
jns
out
cmp
add
xchg
out
imul
or
xchg
out
mov
or
xchg
mov
add
out
push
xchg
out
adc
xchg
add
xchg
out
jne
xchg
out
xor
xchg
mov
or
out
and
xchg
out
add
xchg
out
inc
xchg
out
ljmp
or
add
or
add
add
add
or
add
or
add
add
add
or
jmp
or
add
or
roll
jmp
add
add
or
stc
add
add
or
call
add
add
or
jmp
or
add
or
jmp
fcoms
add
sti
call
xchg
inc
add
lahf
pop
add
sbb
jmp
fistl
add
sub
jmp
lahf
or
jmp
dec
add
mov
add
xchg
std
call
out
ljmp
mov
add
repnz
jmp
verw
mov
add
rolb
add
lahf
pop
add
pop
add
mov
call
lods
or
lods
add
add
insl
or
jge
pop
add
pop
add
sahf
add
bound
jge
jg
insl
or
add
fiadds
outsl
sbb
cmp
or
add
or
add
or
sub
std
or
in
or
add
or
out
aad
add
or
in
or
add
add
add
aad
add
mov
or
add
jmp
or
xchg
jmp
incb
xchg
out
sbb
cmp
or
xchg
out
rcll
or
out
sub
or
xchg
out
mov
or
xchg
mov
add
out
adc
int3
or
xchg
sub
or
out
leave
xchg
mov
or
jmp
or
add
or
add
or
jmp
cld
xchg
add
or
add
or
add
cld
movb
or
add
or
add
cld
mov
add
or
push
call
or
add
or
add
or
add
or
jmp
or
add
cld
mov
jmp
or
call
enter
bound
jmp
sahf
fwait
add
lahf
add
jmp
popl
jmp
mov
call
idiv
call
std
push
push
add
push
add
sahf
lods
add
dec
out
call
es
sahf
lea
jmp
popl
add
sahf
int
std
call
in
ljmp
lock
cli
sahf
verw
fisttps
add
xlat
xor
add
push
verw
xlat
and
add
mov
xlat
test
lods
xlat
inc
add
in
add
or
insl
xlat
pop
add
sbb
add
arpl
insl
xlat
jge
insl
xlat
cmp
add
sbb
sub
xlat
sub
add
xlat
lea
sub
sar
add
push
add
adc
call
xlat
or
add
sti
xor
or
xchg
jmp
sti
and
sti
add
sti
inc
xchg
out
loop
mov
push
xchg
out
pop
xchg
out
sbb
or
xchg
out
js
out
cmp
or
xchg
out
push
xchg
out
mov
out
or
out
dec
xchg
out
repnz
mov
add
out
push
xchg
add
sti
mov
stc
sti
xchg
stc
or
add
sti
mov
jmp
or
add
sti
js
jmp
sti
cwtl
add
sti
adc
jmp
cli
jle
mov
jmp
sti
nop
add
cli
push
add
or
add
sti
fadds
jmp
jmp
or
add
sti
addb
cli
out
call
sti
or
jmp
cli
push
add
add
out
in
push
out
mov
add
fisttps
jmp
into
mov
add
mov
sbb
add
lahf
std
call
popl
jmp
add
outsl
jmp
call
mov
jmp
dec
or
jmp
mov
call
das
sbb
jmp
pop
sti
call
std
lret
dec
add
lret
add
in
lret
push
add
lret
push
add
push
xor
in
lret
jbe
mov
int3
into
add
faddl
verw
lret
add
lret
push
add
lret
inc
add
out
add
or
insl
lret
pop
add
push
add
sahf
add
arpl
insl
lret
jle
cmp
int3
fiadds
pop
push
sbb
sub
lret
add
fsincos
push
xchg
fsincos
mov
cld
xchg
test
mov
add
add
add
or
cwtl
lods
or
lods
or
push
test
or
xchg
int
and
or
xchg
rorl
add
or
xchg
cmpsl
or
xchg
mov
adcl
enter
rorb
add
lods
or
mov
or
scas
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
lds
ficoms
popf
loopnew
stc
add
mov
ja
outsb
sbb
incb
inc
loopne
stos
data16
inc
add
jnp
add
mov
pop
inc
mov
sbb
push
movb
test
sbb
in
stos
insl
cwtl
and
aas
js
adc
iret
popa
std
mov
test
adc
mov
stc
mov
add
mov
pop
cmp
add
pusha
aad
out
mov
es
dec
je
roll
or
movsb
arpl
xchg
xor
aas
push
mov
test
fisubrs
fdivs
or
inc
jb
aad
add
shrb
aaa
add
push
lods
push
xlat
enter
mov
into
ret
mov
fs
mov
mov
in
add
or
cltd
lods
or
fcoml
push
rol
gs
inc
fdivl
xor
add
rcrb
add
mov
bound
push
enter
cs
mov
js
mov
pushf
or
shrl
xor
cld
or
sub
add
in
xor
scas
ja
insb
js
adc
add
imul
push
hlt
jo
jo
mov
or
jb
psraw
fnsave
pop
cmp
call
fisubl
inc
cmp
scas
inc
gs
fwait
xor
pop
in
add
sbb
fdivrs
dec
iret
inc
add
fsubr
cmp
scas
jnp
fwait
cmp
sbb
or
and
stos
in
cltd
xor
xchg
and
repz
mov
cwtl
mov
nop
insb
xor
subb
scas
jp
dec
fbstp
test
mov
nop
xchg
pushf
jecxz
fiadds
pop
sub
pop
sbb
daa
icebp
xchg
jl
out
ror
push
xchg
in
std
jb
inc
push
rolb
dec
push
imul
mov
add
movsw
jae
pusha
pop
jecxz
mov
repnz
or
repnz
stc
jecxz
dec
notl
js
add
test
out
cmp
testl
movsb
les
xor
cmpb
sbb
xchg
push
outsb
pop
icebp
lods
dec
js
mov
bound
addr16
in
xchg
rolb
mov
xchg
sub
mov
pop
and
cmp
bound
mov
cmpsb
or
mov
mov
mov
xlat
in
fsubrs
aad
scas
repz
add
outsb
test
fbld
cltd
addr16
dec
outsb
xor
jns
inc
test
jge
mov
jecxz
push
int3
out
inc
or
and
and
lds
sbb
adc
xlat
ret
shlb
fsubrs
pop
cmp
mov
in
xchg
dec
mov
insl
xchg
xor
or
xchg
pop
out
add
int
mov
iret
icebp
ljmp
aam
aad
inc
xlat
faddl
test
cmpsb
fisttpl
fwait
loope
add
inc
sbb
or
mov
ljmp
mov
mov
or
pop
psrlq
sti
add
xor
imul
and
mov
cmp
xchg
xchg
pop
or
repz
jbe
shll
xchg
dec
add
push
mov
inc
xchg
cmp
cli
push
pop
or
xchg
clc
xchg
and
out
cmpsb
mov
out
inc
jmp
xorl
mov
inc
mov
in
pop
std
lret
cs
pop
mov
xchg
mov
call
xor
incb
mov
sti
pop
pop
leave
add
add
cmpsl
jmp
xor
cmp
inc
dec
jge
or
push
cmpsb
repnz
dec
icebp
frstor
shll
aad
and
lret
jecxz
orb
addl
insl
xchg
mov
push
cmp
js
push
aad
pushf
sub
aaa
push
sbb
push
adc
add
add
das
add
jae
or
ja
shrl
incl
cld
inc
aam
lret
pop
int
in
xchg
push
rcrl
cmpsl
mov
call
call
cwtl
outsb
outsb
pop
pop
out
inc
inc
xchg
mov
push
mov
xor
loop
sub
xchg
movl
adc
inc
fildll
pop
movb
adc
in
frstor
imul
mov
mov
push
mov
lahf
pop
divl
push
xchg
xor
test
js
cmp
call
push
aad
fnstsw
push
jns
sbb
icebp
dec
push
fwait
and
lea
sbb
and
xchg
fnstsw
sbb
enter
mov
jne
imul
cmpsl
rolb
int3
rclb
es
mov
push
loope
test
dec
int3
das
mov
or
adc
shlb
mov
cli
loope
inc
dec
cld
test
push
sub
push
mov
repz
xor
inc
ja
dec
cs
pop
xchg
inc
int3
or
sub
dec
jno
add
iret
cmp
or
sbb
xchg
movsb
js
dec
rorl
popa
mov
out
mov
sbb
mov
dec
mov
ficomps
cmp
adc
mov
popf
push
jecxz
in
movsl
cld
cli
jle
xor
add
pop
jns
es
pusha
out
sahf
rol
push
daa
mov
or
mov
ret
add
outsl
lcall
cltd
test
xor
repz
push
or
xchg
adc
rcl
pop
out
mov
cmpsl
insl
pop
xchg
repz
inc
ljmp
dec
fsubrs
std
adc
gs
mov
ret
push
xor
push
pop
add
das
sub
ss
rcrl
daa
mov
add
iret
cld
xchg
mov
cmp
sub
fldl
pop
ret
addr16
and
pop
scas
in
sbb
xchg
mov
sub
rcrl
scas
inc
loope
mov
lds
pop
call
dec
loopne
mov
adc
test
test
xchg
and
sub
pusha
fdivrp
xchg
ror
repz
mov
test
std
ja
lahf
es
sti
cmp
call
pop
mov
inc
sub
cmp
aam
inc
mov
jno
div
cli
pop
scas
movsl
loope
gs
jge
mov
je
adc
sub
mov
mov
xchg
cmpsb
das
cmp
and
push
jl
fwait
dec
mov
insb
push
mov
sub
bound
push
leave
int3
cmpl
xchg
mov
add
mov
and
adc
into
decb
dec
aaa
ds
cmp
mov
in
sbb
hlt
push
stos
fistps
cltd
faddl
xor
xchg
mov
pop
dec
sar
pop
xchg
int3
sub
arpl
xor
push
loope
pop
mov
ret
cmovge
xchg
test
mov
sbb
jl
jg
mov
nop
inc
stos
add
cmp
xor
sbb
push
mov
gs
aas
inc
repz
add
mov
cmpsb
inc
jae
mov
and
aad
lds
push
out
push
mov
idivl
pop
mov
cli
lret
std
mov
push
in
jmp
lods
ret
pop
test
xor
inc
add
push
leave
push
cmp
mov
stos
dec
add
outsb
cmp
xchg
or
add
sbb
decb
popf
or
inc
pop
or
cmp
in
add
mov
push
inc
pop
das
sbb
in
sbb
xor
xor
adc
mov
jae
leave
push
cmp
mov
push
mov
jp
sbb
lods
mov
repz
leave
cmp
ja
cmp
inc
aas
data16
cmp
push
add
push
sti
fwait
aaa
add
push
pusha
sub
xchg
fs
sub
or
adc
cmp
test
mov
jne
bound
lcall
adc
outsb
mov
and
jge
push
jl,pt
sbb
data16
ret
aaa
mov
xchg
mov
push
add
xor
movsl
loopne
jmp
dec
push
loop
mov
enter
roll
xlat
or
cmp
or
cmp
xor
pop
sbb
cmp
fs
ss
shlb
pop
ljmp
aaa
mov
out
sub
cmpsl
arpl
jmp
test
mov
sub
cmp
sbb
dec
outsl
jg
cmp
add
and
js
and
push
mov
pop
sub
and
into
imul
mov
inc
adc
add
dec
mov
js
add
push
dec
inc
insb
cltd
dec
andl
add
fldl
sub
inc
lods
sub
inc
mov
ss
inc
int3
adc
push
xchg
xor
lds
jne
xlat
mov
push
or
jp
sarl
loopne
outsl
sti
and
adc
cmpsb
pop
ljmp
pop
cmp
insb
pop
imul
outsl
loop
lret
sub
cmp
xchg
out
loopne
in
add
jne
es
sub
mov
in
shll
call
jmp
js
imul
mov
sar
imul
push
push
dec
or
cli
idiv
xlat
sti
js
stc
inc
daa
pop
clc
test
repz
add
mov
dec
inc
icebp
inc
ds
push
lods
lret
xchg
testb
mov
cld
dec
shll
cmp
cwtl
mov
jae
loop
imul
imul
test
inc
sub
dec
cmpsb
pop
bound
mov
out
sbb
pop
sarl
in
pusha
inc
sbb
in
push
push
add
xchg
xlat
dec
test
aad
stos
adc
xchg
addr16
iret
rorl
fcoms
inc
enter
popa
rcl
rolb
mov
add
sub
add
lock
xchg
divb
mov
mov
lea
clc
xchg
imul
xchg
or
add
fwait
lods
aam
lcall
pop
test
mov
xchg
scas
push
mov
nop
mov
add
xchg
push
sbbl
mov
sbb
pop
in
add
scas
or
xchg
mov
cmpsl
cmpsl
imul
mov
test
scas
lods
add
mov
push
push
movsl
ffreep
sub
sub
mov
dec
adc
cmp
mov
mov
dec
inc
mov
int3
xorb
dec
add
mov
je
mov
mov
mov
out
stc
push
mov
add
mov
mov
daa
dec
pop
mov
insl
add
add
les
stos
jecxz
mov
jp
bound
and
and
loop
mov
add
popa
mov
xlat
adc
aam
repnz
in
loopne
adc
adc
push
mov
movsb
call
cld
js
inc
movsl
mov
decb
jb
fcmovnu
int
pop
jmp
xchg
test
adc
arpl
lods
iret
scas
out
jae
jle
lds
jp
fwait
xor
int3
mov
mov
mov
xchg
adc
dec
andl
pop
sbb
mov
jns
jnp
mov
jo
push
add
xor
inc
sub
pushfw
fucomi
push
shll
mov
xchg
pop
mov
dec
sahf
divb
or
shrl
inc
jmp
add
aam
out
adc
test
xor
fisttps
jbe
in
pop
orl
in
mov
pop
xchg
xor
adc
lret
pop
pop
mov
ret
jb
and
cli
cmp
push
xchg
sbb
stos
or
stos
rorb
mov
out
into
ss
mov
es
das
ror
and
cld
mov
pop
mov
mov
ja
sbb
sarb
ja
adc
mov
imulb
mov
add
jecxz
cmpl
scas
into
sub
fstpt
pop
add
nop
jl
lea
sbb
sahf
mov
push
xor
cmpsb
push
inc
jo
loop
into
jle
push
jmp
fldpi
addb
mov
pop
testb
pop
mov
arpl
fidivrs
jg
rcrb
mov
in
dec
loope
in
outsb
push
dec
rolb
mov
lds
add
cmpsl
cmp
and
loopne
aaa
sub
xor
pop
in
stos
int
push
mov
add
cmp
inc
inc
xchg
adc
mov
mov
sub
in
xchg
mov
cmc
mov
cmp
mov
mov
inc
cmc
add
adc
sbb
lret
out
mov
dec
aam
add
jnp
inc
movsl
push
xchg
addl
add
dec
cltd
lahf
fldcw
and
or
stc
xor
imul
jns
repz
mov
nop
dec
add
repnz
pop
arpl
jbe
xchg
push
test
xchg
loope
add
and
add
fcmovbe
gs
mov
xchg
mov
movsb
xchg
push
jno
fisubrl
leave
cmp
sbbb
stc
add
and
pop
lret
xor
pop
mov
es
pushf
lahf
sub
lods
popf
dec
test
popf
fnstenv
or
mov
addl
test
xchg
jne
push
cs
push
fwait
push
sub
sti
lret
or
sbb
popa
xchg
in
and
mov
xchg
xchg
cltd
add
sub
sbb
mov
mov
test
cmpl
leave
sbb
jecxz
jmp
cltd
dec
jno
push
icebp
or
out
roll
shl
jge
shrb
outsb
pop
fdivs
jl
xor
pop
repz
mov
push
add
aaa
stos
mov
ret
fisubrl
add
jge
test
and
mov
xor
mov
data16
mov
rcll
arpl
mov
gs
roll
cmp
out
jbe
jmp
jb
mov
xlat
outsb
or
fabs
mov
fidivrs
add
add
scas
pusha
sub
test
les
cmp
fbld
and
mov
jmp
sbb
jne
scas
insl
jb
cmp
insb
sub
add
xchg
jae
out
imul
outsb
inc
ljmp
in
stos
xlat
mov
sbb
test
test
sbb
stc
push
and
leave
js
add
push
insb
pop
jo
cmp
dec
sti
or
lahf
sbb
adc
cmp
mov
in
out
pop
aam
xchg
test
inc
stc
mov
add
in
cmpsb
stos
jno
sbb
push
or
lahf
movsb
int3
pop
xor
adc
dec
iret
lret
mov
aam
orb
adc
ja
jne
jo
fbld
outsb
icebp
sti
adc
fmull
scas
clc
insb
outsb
cwtl
jl
adc
sbb
adc
and
nop
call
je
jle
movsb
divl
out
add
add
movsb
movsl
cmpl
test
mov
push
xchg
sbb
mov
in
sub
mov
xchg
inc
mov
add
andl
insb
jne
xlat
sbb
dec
xchg
xchg
xchg
in
loop
gs
mov
shl
mov
sti
es
push
std
push
jl
dec
or
aam
fmull
dec
sub
gs
pop
pop
jecxz
dec
into
dec
mov
lock
add
mov
xlat
loope
les
shl
sti
out
or
push
push
frndint
sbb
xchg
fnsave
jae
add
pop
cwtl
test
leave
sbb
add
imul
xchg
push
mov
int
test
mov
jecxz
pop
mov
push
test
cwtl
and
iret
test
mov
cmp
or
cmp
sbb
and
pop
mov
xchg
xchg
jno
cwtl
adc
push
iret
inc
jge
ja
fwait
int3
andl
and
sbb
pop
sub
cli
into
popl
adc
add
push
and
mov
cmp
add
ret
push
pop
pop
pop
addr16
iret
pop
ss
mov
aam
je
int
out
ds
dec
push
shrl
pop
imul
xlat
cmp
add
shlb
daa
ror
push
mov
cwtl
insb
mov
inc
addr16
pop
mov
xchg
lds
jbe
cmp
outsb
lret
scas
xor
add
jge
es
ret
xchg
and
dec
clc
sbb
sbb
xor
daa
jne
and
or
sbb
pusha
mov
testl
lret
add
jns
stos
push
data16
imul
cld
stos
iret
jnp
je
arpl
incl
xchg
xorb
sbb
arpl
cmp
test
sub
ds
sub
test
add
cmp
rolb
or
pop
out
fwait
inc
lds
mov
xchg
mov
into
and
rcl
sbb
mov
clc
out
int
outsb
push
inc
ficomps
daa
das
loope
xor
ja
lahf
dec
out
mov
jo
mov
leave
clc
cwtl
stc
pop
add
loope
call
lods
imul
push
iret
inc
add
cmpsl
loope
or
adcl
ret
es
or
add
repz
add
push
push
mov
fdivrl
mov
lock
scas
push
xchg
sbb
jg
xor
jmp
xchg
ret
xor
cmpsb
push
shll
add
or
mov
add
loope
mov
xchg
add
mov
xor
movsb
add
or
or
aad
in
popa
push
ret
push
repz
lds
add
inc
xchg
push
out
lret
call
xchg
call
iret
mov
mov
dec
subl
gs
and
movsb
scas
jo
ja
inc
es
xlat
dec
outsb
outsb
out
lret
mov
add
imul
dec
addb
or
in
dec
xchg
sub
inc
mov
inc
mov
cmpb
insl
test
loopne
pop
ret
and
xor
pushf
stos
lds
fstl
inc
inc
push
movsl
cmp
add
fcom
xor
sbb
repz
or
dec
xchg
loop
mov
fiaddl
pushf
adc
daa
inc
xchg
outsb
add
push
lock
fldenv
push
pusha
fwait
xchg
jne
cwtl
xorl
fs
out
adc
or
ret
loop
cmp
or
call
cmp
adc
cmp
jb
inc
stos
out
xchg
pop
sub
addr16
dec
cmp
ret
mov
dec
jecxz
pop
cli
and
into
movsl
jecxz
or
push
mov
jae
push
dec
xor
js
repnz
add
cwtl
push
jb
test
shlb
fcmovbe
pop
out
out
lods
call
test
pop
jp
and
xchg
les
push
pop
imul
mov
and
cmp
scas
mov
ficoms
int3
and
std
pusha
sub
iret
out
mov
mov
movsb
xor
adc
cmpsb
filds
dec
fdivs
ljmp
mov
lods
or
inc
fwait
cmc
sub
ss
out
sub
and
and
lds
lahf
ret
mov
clc
or
mov
mov
outsb
sbb
pusha
push
fdivrl
lea
jnp
mov
jno
sbb
mov
fcmovnu
xchg
insb
xchg
cld
mov
push
and
adc
inc
and
out
sbb
inc
fcmovbe
push
adc
in
lcall
sbbl
cwtl
inc
push
push
xchg
cmp
lods
xchg
out
pop
add
fldenv
inc
into
cld
push
mov
mov
jo
push
mov
xchg
push
mull
xor
mov
or
jne
pop
sub
in
inc
jmp
sub
lods
lcall
jg
mov
out
into
rol
faddp
fwait
pusha
mov
xchg
jns
ljmp
fs
adc
add
outsb
mov
aas
and
cmp
lcall
mov
cmp
ds
sbb
jle
xchg
in
adc
cmc
lock
xor
dec
push
jae
andb
xor
xorl
add
push
ja
cs
mov
fs
int3
mov
orl
add
adc
outsl
inc
mov
idivb
inc
add
sub
sbb
ffree
add
dec
cwtl
inc
and
test
clc
sti
stc
shlb
lret
mov
repz
pop
push
cmpsl
popf
push
cltd
xchg
fcompl
dec
xor
loop
cltd
mov
push
fadds
les
pop
mov
push
sub
aam
outsl
mov
imul
xchg
cmp
fnop
sar
repnz
jp
shrl
rcrl
call
xor
mov
jns
jb
dec
movsl
xchg
mov
mov
mov
xor
lock
out
ja
pop
loope
add
mov
sub
mov
fnsave
adc
iret
jb
ja
les
imul
pop
add
or
jg
scas
and
and
lret
xchg
call
add
xchg
ret
mov
inc
movsl
enter
mov
dec
push
adc
div
fs
out
mov
mov
mov
ss
sahf
lock
fsubl
icebp
mov
orl
add
testb
cmpsl
int
mulb
out
and
insb
jecxz
xor
mov
sti
test
cli
xchg
sbb
clc
push
mov
jno
fistpll
pop
and
sbb
dec
loope
fisubl
ror
add
mov
or
movb
mov
mov
push
lods
xchg
xor
ret
push
adc
outsl
sbb
shlb
call
pop
test
bound
ljmp
movsl
nop
les
mov
mov
dec
dec
lret
aaa
jecxz
leave
cmp
enter
adc
mov
inc
add
dec
or
mov
repz
and
popa
lods
sbb
rcrb
mov
scas
sbb
into
cwtl
add
adc
sub
mov
jb
push
fwait
inc
sti
mov
js
dec
mov
enter
fld
bound
aam
je
aad
push
xchg
pop
fwait
lahf
lret
lret
xor
mov
stc
inc
xchg
mov
fisubrs
jge
jmp
insb
pop
out
jmp
adc
jae
xor
into
out
aas
fsubrl
rcll
xlat
aam
loopne
jecxz
mov
imul
xchg
fidivs
pop
fcmovu
je
popf
sarb
or
jecxz
mov
std
jnp
cmp
lcall
inc
dec
loop
test
push
or
gs
out
data16
push
add
pop
adc
jbe
rorb
jbe
pop
jle
cmp
in
push
shlb
in
adc
pop
xchg
sti
ljmp
or
mov
mov
sahf
orb
pop
stos
mov
out
xchg
pop
jae
test
xchg
add
dec
fmuls
mov
inc
data16
cmp
call
mov
inc
insl
addb
cmc
add
pop
jno
jp
das
lcall
mov
push
inc
icebp
aaa
xor
fiaddl
insl
dec
fcmovnb
pop
sbb
jg
inc
lret
icebp
mov
int3
jg
add
mov
xchg
int
lahf
xor
push
mov
mov
mov
mov
mov
xchg
sbb
rorl
test
fdivs
jle
out
cmp
cli
push
sbbl
aaa
xor
cmc
adc
jecxz
pop
sub
xchg
adc
jmp
xlat
dec
sub
sub
aad
sub
mov
xchg
mov
addr16
sbb
mov
and
je
push
insl
inc
repnz
mov
inc
lods
jmp
inc
cs
sub
mov
loopne
stos
push
pop
add
cmp
clc
jae
lods
iret
popa
mov
xchg
jo
jns
jne
outsl
and
pop
add
dec
addr16
jge
inc
test
pop
xor
loope
inc
mov
popf
in
push
inc
neg
hlt
add
cmc
push
and
scas
jp
mov
inc
and
int3
call
es
pop
jle
mov
mov
mov
mov
push
inc
pop
outsb
sbb
inc
in
adc
lods
cmpsb
shll
mov
xchg
addl
mov
jl
aas
push
xchg
inc
mov
std
out
mov
sbb
std
sbb
cs
mov
fmuls
not
mov
add
out
shll
jae
into
test
imul
jl
mov
popa
pop
add
mov
dec
jmp
jbe
sub
lret
sub
dec
lods
mov
movsl
fmull
pop
mov
push
hlt
sbb
add
pushl
sub
mov
mov
rcll
cli
dec
jne
pop
fs
pushf
push
sbb
mov
movsl
or
push
and
jl
adc
addr16
adc
add
dec
sti
pop
les
mov
stos
loope
cmp
dec
inc
arpl
add
leave
pop
jecxz
sbb
fsubrs
xor
insb
mov
insb
xchg
jno
sarl
inc
pop
fstpt
push
xor
test
cli
mov
push
mov
jae
mov
jecxz
or
and
dec
add
inc
outsl
divb
aas
cmpsl
jge
imul
nop
dec
clc
fwait
mov
ljmp
mov
aas
cmp
jl
imul
push
cwtl
push
cmp
cmp
mov
sbb
into
push
push
test
lret
out
push
loope
mov
jo
push
nop
push
mov
xor
fidivrs
lods
mov
jg
push
push
das
push
outsb
testl
push
sub
xchg
mov
insl
rorb
loopne
and
and
sub
imul
inc
lods
adcl
movsb
incl
scas
add
xlat
ret
mov
and
lahf
jmp
nop
mov
shll
aam
pusha
add
mov
lds
xchg
iret
sbb
clc
pop
loope
or
shr
outsl
xchg
pop
xchg
dec
psrlw
das
loop
mov
dec
add
xchg
xchg
sub
xor
jge
push
or
movsb
in
cmpsl
aaa
jnp
negl
sbb
neg
jb
in
test
cwtl
sarb
or
add
cli
das
in
xchg
sub
aam
cmpsl
inc
xor
xor
push
mov
mov
mov
in
cwtl
stc
andl
lods
jns
fisttpll
test
xor
sub
lea
xor
or
insl
fs
lahf
movsb
in
jp
pop
out
sub
dec
mov
push
repnz
push
add
js
in
test
dec
test
or
rolb
movsl
mov
leave
js
lds
les
xchg
repnz
jmp
pusha
mov
mov
inc
push
jmp
push
jle
add
aaa
add
loope
jno
shr
sbb
mov
mov
add
mov
add
fcoms
cmp
add
mov
push
nop
testb
shrl
cmp
test
jb
loope
out
xchg
fmul
addr16
mov
inc
std
es
push
data16
cli
add
mov
repnz
icebp
and
xchg
inc
add
cmp
mov
push
repz
arpl
aaa
lea
scas
js
lods
adc
xor
cmpsb
mov
push
sbb
mov
jmp
xchg
nop
xchg
push
ss
imul
jb,pn
imul
pushf
ficomps
mov
push
add
sub
das
fwait
into
in
rolb
xchg
ljmp
pop
push
test
addb
jae
pusha
rcrb
into
fst
test
dec
push
inc
add
es
fs
aad
js
mov
or
sbb
adc
mov
push
mov
shl
call
pop
ret
stc
sbb
jmp
stc
pop
out
inc
push
outsl
and
and
fdivl
aaa
lock
adc
jae
add
or
push
mov
cmp
push
add
sarl
and
in
xor
dec
or
mov
popl
xchg
vpshlb
jmp
add
jmp
add
add
xchg
add
call
xchg
add
call
xchg
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
add
add
add
in
xchg
add
in
add
in
xchg
add
in
add
in
xchg
add
in
add
in
xchg
add
in
add
jmp
inc
bnd
cwtl
stc
add
cmc
xchg
std
add
xchg
sti
call
xchg
add
add
in
cld
cld
out
out
mov
mov
pushl
pushl
pushl
pushl
incl
pushl
pushl
jmp
jmp
pushl
pushl
decl
ljmp
cmp
decl
ljmp
call
add
add
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
cltd
add
xchg
xchg
add
xchg
xchg
add
xchg
lcall
xchg
xchg
add
xchg
sbb
xchg
arpl
or
add
xchg
jnp
or
add
xchg
mov
sub
or
add
xchg
add
add
adc
add
imul
add
add
add
add
add
add
fildl
mov
pop
add
sbb
mov
fildl
mov
pop
add
sbb
mov
repz
add
add
xchg
add
add
pushf
add
add
add
add
add
nop
clc
call
xchg
clc
jmp
clc
call
nop
clc
call
xchg
clc
jmp
clc
ljmp
nop
clc
jmp
nop
clc
incl
xchg
clc
incl
clc
ficoms
clc
lcall
push
cwtl
clc
ficoms
clc
lcall
cwtl
clc
push
xchg
clc
ljmp
clc
jmp
cwtl
clc
call
nop
clc
decl
nop
clc
mov
xor
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
or
faddl
or
dec
add
add
add
add
add
or
jl
or
mov
add
add
or
pushf
add
add
or
xor
or
mov
or
test
pop
add
pop
add
add
xchg
mov
add
xchg
lock
xchg
jo
or
xchg
mov
add
xchg
lock
xchg
jo
or
add
xchg
aam
or
add
xchg
jl
or
add
xchg
movsb
add
xchg
sub
or
add
xchg
movsb
add
xchg
sub
or
add
xchg
mov
or
add
xchg
in
or
add
mov
mov
add
adc
mov
mov
mov
in
pushf
add
add
mov
mov
mov
fiaddl
popf
add
add
add
lea
pop
add
add
add
add
add
add
add
add
lea
jp
lea
lcall
popf
add
add
add
add
add
bound
idiv
xor
idiv
mov
xchg
idiv
adc
idiv
sbbl
idiv
adc
idiv
adcl
idiv
push
cwtl
idiv
push
xchg
idiv
rcll
pushl
add
idiv
add
idiv
jno
idiv
jno
idiv
mov
xchg
stc
call
cwtl
stc
call
xchg
stc
incl
decl
add
cld
or
repnz
add
decl
add
decl
add
decb
add
decl
add
add
add
decl
add
decl
add
add
add
adc
or
sar
or
ret
add
or
inc
decb
add
add
add
decl
add
decb
add
decb
add
decl
add
decb
add
decl
add
decb
add
add
xchg
mov
or
add
xchg
and
or
add
xchg
pop
add
xchg
bound
add
xchg
repnz
xchg
jp
or
add
xchg
repnz
xchg
jp
or
add
xchg
mov
add
xchg
xor
or
add
xchg
rolb
xchg
cli
add
xchg
addb
or
xchg
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
add
add
fwait
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
xchg
clc
dec
xchg
clc
decl
clc
decl
xchg
clc
call
xchg
sti
jmp
xchg
sti
call
xchg
sti
in
xchg
sti
push
xchg
sti
jmp
xchg
sti
in
xchg
sti
ljmp
jmp
xchg
sti
call
xchg
sti
out
xchg
sti
push
xchg
sti
jmp
xchg
sti
out
xchg
sti
jmp
xchg
sti
call
xchg
sti
filds
xchg
sti
dec
xchg
sti
jmp
sti
push
xchg
sti
jmp
xchg
sti
jmp
sti
mov
cld
add
mov
add
data16
add
add
add
add
jns
add
push
jp
pop
pop
jne
or
xor
or
or
or
push
or
aaa
push
or
daa
push
or
daa
push
or
ss
or
or
or
or
icebp
or
or
or
or
or
or
or
or
fs
or
cltd
je
or
mov
mov
je
or
mov
push
mov
ja
push
xchg
outsl
adc
mov
push
mov
lcall
push
mov
push
mov
ja
push
xchg
outsl
or
push
mov
ja
push
xchg
outsl
or
bt
setnp
setae
jnp
pop
push
setnp
testb
pmaxsw
mov
out
mov
psadbw
xchg
pmaxsw
mov
out
mov
or
or
jmp
adc
adc
sbb
push
xlat
adc
stos
adc
icebp
sbb
loope
jl
loope
jl
rcrb
pop
add
popf
pop
repz
sbb
sbb
jecxz
jle
add
lods
sbb
shrl
sbb
add
sahf
sbb
repnz
sbb
mov
sbb
jle
sbb
jle
sbb
scas
sbb
shrb
sbb
add
sbb
in
mov
in
sbb
fnstsw
sbb
mov
sbb
stos
sbb
add
fwait
sbb
cmc
xchg
sbb
in
mov
in
sbb
fnstsw
sbb
mov
sbb
stos
sbb
add
fwait
sbb
hlt
add
sbb
sbb
call
sbb
sbb
sbb
mov
sbb
sbb
sbb
cwtl
sbb
sbb
jno
push
pop
or
or
or
cmp
or
or
push
sub
adc
add
movups
cmp
adc
out
adc
adc
adc
adc
adc
adc
adc
adc
pop
adc
pop
pop
adc
push
pop
adc
pop
push
adc
test
je
adc
xorb
mov
push
adcb
stos
pop
adc
mov
jp
pop
mov
jno
sbb
popa
sbb
jl
sbb
lods
push
sbb
lods
push
sbb
pushf
add
pushf
add
mov
sbb
pusha
sbb
jge
sbb
lods
push
sbb
lods
push
sbb
popf
add
sbb
lea
repz
jle
jecxz
jle
jecxz
scas
push
rcrl
sahf
push
add
sahf
push
add
mov
repnz
pop
repnz
jg
loop
add
loop
scas
adc
rcrb
lahf
adc
add
sbb
add
jmp
xchg
add
add
in
xchg
add
add
loope
xchg
add
add
out
add
add
xchg
add
add
add
leave
xchg
add
rcll
add
add
add
sbb
add
fsts
add
mov
add
dec
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
add
ljmp
add
xchg
add
loope
add
fstl
add
add
add
sbb
add
add
add
add
add
sub
std
jge
std
add
add
add
add
js
mov
add
add
or
add
sbb
add
cmp
jge
cmp
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
data16
add
data16
add
stc
data16
add
add
add
add
add
add
xchg
jb
or
xchg
pop
add
xchg
push
add
xchg
dec
add
xchg
pop
add
xchg
sub
xchg
or
xchg
ljmp
xchg
imul
xchg
imul
adc
add
xchg
jns
adc
add
xchg
pop
add
xchg
pop
add
add
add
xchg
jne
adc
insl
add
push
add
xchg
pop
add
sub
add
ljmp
add
add
add
add
add
add
add
aad
out
adc
add
call
call
and
loopne
add
add
add
sti
add
add
add
add
add
add
add
add
add
repz
loop
scas
add
add
adc
test
add
sar
or
cmp
sar
sub
call
cwtl
cld
add
cwtl
mov
xor
dec
cwtl
fiaddl
inc
nop
loopne
push
cwtl
add
faddl
inc
cwtl
testl
xchg
cwtl
stc
add
cwtl
pop
add
cwtl
add
flds
jle
cmp
add
aad
bound
cli
add
add
jge
mov
jnp
insl
cld
push
add
add
add
cmp
repz
add
cmc
add
testl
sbb
cmp
push
add
add
das
add
and
push
add
add
testb
add
add
or
add
add
cmp
push
add
add
or
add
lcall
add
decl
add
incl
incl
cmp
add
adc
outsl
xchg
incb
jno
jae
arpl
enter
addl
xchg
nop
add
xchg
jle
push
xchg
cmc
add
jmp
and
xchg
out
add
xchg
fldl
xor
xchg
mov
add
xchg
mov
add
add
add
xchg
ret
add
xchg
int3
add
xchg
roll
sbb
add
xchg
cmp
jl
sub
add
xchg
inc
add
add
add
add
insl
add
add
xor
xchg
mov
pop
mov
add
pop
xchg
add
pop
mov
add
pop
push
add
pop
inc
add
pop
add
pop
addl
pop
addl
pop
outsl
add
push
add
loope
cmp
ret
aas
pop
pop
add
xor
out
das
fwait
in
cmpsl
xchg
xor
dec
mov
das
dec
mov
dec
pushf
add
dec
pushf
ljmp
inc
mov
dec
mov
inc
pushf
lahf
xor
fwait
fwait
xor
fwait
cmpsl
xor
add
pop
xor
cmp
xor
sahf
xor
pushf
xor
lcall
fwait
cmpsb
xor
xchg
movsl
xor
fwait
mov
xor
xchg
lods
xor
adc
mov
add
mov
xor
cli
mov
xor
ret
xor
lds
jns
xor
leave
xor
imul
xor
lret
xor
pop
int
in
into
xor
pop
iret
xor
or
xor
aad
xor
fdivs
xor
adc
fidivs
sub
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
ljmp
sub
or
les
or
les
or
pushf
movsb
aad
or
loop
sbb
sbb
and
sbb
and
and
and
lcall
sub
mov
sub
movsl
push
sub
mov
sub
lcall
xor
mov
xor
lea
xor
xchg
push
xor
push
push
ss
arpl
xor
int3
push
xor
int
and
mov
push
dec
push
aad
dec
push
push
or
xlat
push
add
push
flds
pop
push
rolb
push
push
fildl
adc
int3
push
add
fldl
add
fiadds
rorb
iret
push
int
enter
popa
push
mov
or
mov
or
mov
push
add
dec
push
inc
add
push
gs
push
pusha
add
push
imul
dec
lcall
nop
lcall
sbbb
add
into
add
xchg
push
and
add
xchg
add
lcall
cmp
add
xchg
push
add
lcall
mov
add
stc
add
cltd
nop
add
xchg
incb
jbe
std
add
cltd
xor
xchg
das
add
cltd
movb
xchg
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
lahf
add
add
add
mov
add
add
add
add
add
push
dec
add
push
aaa
add
push
dec
add
push
dec
add
push
dec
add
push
inc
add
push
dec
add
add
adc
push
adc
jp
es
addl
cwtl
jl
adc
cwtl
jle
adc
rolb
sbb
nop
sub
add
sbb
nop
sub
pop
cwtl
or
das
nop
pop
push
and
adc
add
push
cwtl
push
adc
pusha
add
pop
cwtl
dec
add
sub
nop
stos
add
sub
add
or
dec
add
add
push
add
out
decl
or
push
add
add
incl
adc
xchg
add
add
add
lcall
add
pushl
jnp
pop
pushl
add
pop
add
jmp
popa
decl
pop
call
add
inc
add
jmp
add
ljmp
add
ljmp
add
ljmp
sub
scas
add
jmp
add
sbb
scas
add
xchg
mov
xchg
mov
lods
xchg
lea
cmpsl
xchg
mov
sahf
xchg
mov
cltd
xchg
mov
add
xchg
movsb
add
movsl
add
xchg
mov
add
xchg
cwtl
add
xchg
xchg
add
scas
add
scas
add
lods
add
xchg
mov
seta
add
xchg
test
adc
xchg
cmpsl
add
xchg
cmpsb
add
xchg
movsl
add
xchg
lods
add
xchg
stos
add
xchg
stos
add
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
and
or
sbb
and
and
sbb
and
add
adc
mov
and
gs
gs
and
cmpsl
and
stos
and
arpl
jo
pop
and
imul
sub
xchg
xchg
cld
xor
xchg
cld
sbb
mov
cld
cmp
mov
shll
cld
shll
cld
pusha
jbe
cld
sbb
cld
xorl
cld
sub
jbe
cld
sub
sti
es
cld
daa
mov
sti
add
ret
mov
cld
nop
mov
cld
xchg
mov
cld
xchg
mov
cli
and
cli
lds
cli
xchg
jns
cli
or
cli
or
cli
or
hlt
cli
or
sti
and
sar
sahf
sbb
cli
mov
sbb
aam
xchg
cli
sbb
push
and
cli
rcrl
cli
lcall
sbb
ja
addr16
jno
xchg
sbb
mov
xchg
and
std
nop
and
xchg
and
std
lea
push
std
cmpsl
and
cmpsb
and
jbe
aas
std
jno
push
std
js
cmp
and
cmp
shll
cmp
int3
and
xchg
push
into
and
and
enter
sti
and
adc
insl
ficoms
and
add
sbb
stos
mov
lret
scas
ret
and
sahf
and
mov
mov
sub
scas
and
push
jle
and
sbb
and
pop
or
sbb
and
add
and
xor
xor
add
stos
and
mov
and
fisubl
and
int3
stos
and
fisubs
and
shlb
shll
and
push
mov
adc
mov
es
push
bound
sbb
sbb
es
addr16
daa
in
addr16
and
fbld
and
adc
mov
push
daa
mov
insb
mov
addr16
es
or
adc
adc
push
jne
clc
aaa
je
clc
sbb
sbb
xchg
jne
cmp
mov
stc
es
stc
scas
xchg
cltd
stc
movsb
mov
stc
sub
popf
stc
pop
xchg
mov
pop
jbe
stc
xchg
ja
stc
mov
lret
stc
pop
ja
stc
sub
stc
xorb
xorl
sub
push
mov
test
xchg
mov
rcrl
mov
or
pusha
incb
clc
imul
add
dec
decb
clc
dec
adc
cmp
cld
imul
std
shl
call
std
std
fdiv
add
std
mov
hlt
std
mov
div
std
mov
mov
fwait
divl
std
popf
divl
std
jg
mov
std
inc
notb
mov
xchg
repnz
xchg
repnz
nop
repnz
cltd
repnz
notb
repnz
jg
clc
or
push
inc
testb
inc
hlt
or
push
add
repnz
cmp
adc
cmp
adc
lcall
push
pushf
movsl
or
push
jle
or
addl
push
push
bound
add
push
movsl
add
push
inc
test
push
test
test
push
stos
movsl
push
push
sub
sbb
sub
sbb
daa
test
push
add
movsl
movaps
mov
sub
ja
sub
xchg
sub
jno
sub
jo
sub
push
bound
das
push
jge
xor
jl
xor
scas
rdmsr
push
dec
adc
push
dec
adc
cmp
xor
push
or
aaa
push
xor
adc
push
daa
adc
push
rcll
ds
add
aas
push
or
adc
pop
adc
push
adc
add
adc
adc
fistl
inc
push
ficoml
inc
push
xchg
mov
cmovns
into
cmovnp
and
dec
lcall
push
mov
adc
arpl
push
xchg
insb
andnps
push
push
lcall
pop
mov
xor
jbe
xor
je
xor
test
adc
test
adc
gs
adc
gs
cmp
mov
adc
lds
xchg
adc
adc
adc
adc
adc
adc
rclb
jl
fsts
ja
rclb
pop
adc
adc
int3
adc
fstl
push
adc
adc
iret
adc
adc
das
adc
pop
adc
adc
adc
stos
adc
stos
adc
movsl
adc
lods
adc
cmpsl
adc
scas
adc
mov
pop
adc
adc
mov
aas
adc
movsb
movsl
mov
xor
movsl
mov
xor
test
xor
test
xor
test
xor
movsl
test
adc
add
lods
adc
test
adc
test
adc
xchg
adc
xchg
xchg
adc
mov
lret
lcall
lds
cltd
adc
lcall
xchg
mov
sbbl
mov
adc
xadd
or
ret
push
insl
xor
fisttpll
jno
int3
push
js
iret
push
jg
sahf
push
xorl
nop
push
xchg
orl
xor
push
jmp
test
lock
push
test
and
push
push
add
push
ja
or
and
and
and
and
and
and
cmpsl
and
test
add
and
je
and
pop
add
xchg
push
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
xchg
push
add
xchg
sti
pop
add
pop
add
aas
pop
xchg
add
add
lret
add
pop
xchg
add
add
mov
pop
xchg
add
add
add
pop
xchg
add
add
push
add
add
pop
xchg
add
add
leave
add
loopne
add
in
add
jns
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
pop
push
add
jg
add
les
add
xchg
add
popa
cmp
add
xchg
add
push
call
add
test
add
or
add
or
mov
add
push
call
add
xchg
add
int3
xchg
add
jbe
add
mov
mov
add
inc
push
add
xchg
pop
add
dec
cwtl
add
test
add
add
add
mov
jmp
add
adc
add
pop
mov
lcall
mov
decl
incl
lahf
add
add
mov
decl
mov
lcall
decl
mov
lcall
dec
mov
lcall
pushl
inc
mov
call
call
mov
decl
mov
jl
ljmp
add
add
add
xchg
movsl
pop
add
cmpsb
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
xchg
call
mov
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
pop
xchg
add
pop
xchg
add
pop
xchg
add
pop
xchg
add
add
lods
add
pushf
add
add
xchg
add
call
xchg
add
ljmp
add
cltd
add
jmp
add
jmp
add
jmp
add
cltd
add
xchg
add
jmp
cld
add
xchg
add
in
cltd
add
jmp
add
jnp
add
add
and
jmp
nop
add
ljmp
add
ljmp
add
nop
add
call
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
daa
lods
add
sub
jmp
xor
shr
aaa
ljmp
pop
popa
arpl
arpl
jns
insl
outsl
dec
sub
jne
inc
xor
pop
pop
pop
pop
popa
arpl
gs
imul
sub
jne
xchg
outsl
fdivrl
addl
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
jmp
jmp
push
or
push
add
push
sti
push
out
push
repz
out
jmp
ficoms
push
push
fistl
rcll
lret
push
mov
push
mov
push
jmp
cltd
std
loopne
fwait
push
mov
push
xchg
lahf
add
add
jnp
outsb
push
jae
push
imul
push
push
push
pop
push
dec
push
add
inc
or
push
add
loope
ljmp
leave
push
jmp
rcll
leave
push
call
rcll
imul
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
add
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
add
ljmp
cmp
ljmp
std
in
in
std
std
in
in
mov
sti
add
add
add
mov
sti
add
lods
sti
add
lods
sti
add
jl
add
jl
add
insb
std
add
insb
std
add
jl
add
jl
add
insb
std
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
push
add
xchg
add
xchg
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
jmp
add
jmp
add
xchg
add
add
jmp
add
pop
enter
lahf
rcll
xlat
cmp
test
cmpsl
sti
or
in
int
fldenv
push
bound
xor
dec
mov
and
push
inc
call
dec
push
mov
cmp
jg
add
jns
insb
mov
test
cltd
sub
cmpsl
jb
ss
push
fisttpl
jmp
cwtl
insb
jecxz
jbe
lods
adc
int
les
mov
mov
popf
pushf
in
test
loope
xchg
mov
cmpsl
push
scas
jecxz
imulb
pop
inc
push
rcrl
aaa
lods
mov
cmc
add
and
inc
pop
je
inc
outsb
fnsetpm(287
add
das
adc
mov
inc
repz
cmp
cmp
sti
mov
sbb
ret
cmp
mov
out
int3
sbb
push
leave
mov
cmp
jecxz
add
dec
cli
push
cmp
cli
arpl
sbb
jae
jns
cmpl
std
or
add
jbe
clc
sub
adc
xchg
dec
int
lahf
in
pop
outsb
in
stc
cld
add
test
clc
and
xchg
inc
or
cmp
inc
sbb
cld
mov
pop
pop
lcall
repnz
or
adc
aam
jmp
in
ret
or
outsb
iret
js
repz
xor
jecxz
mov
in
or
aaa
dec
pop
sub
arpl
fisttpl
test
lret
or
imul
xchg
lods
dec
sti
mov
xchg
sub
test
mov
jp
push
std
or
xadd
adc
or
adc
bswap
mov
icebp
orl
mov
mov
pushf
and
lret
cmpsb
mov
cmp
xor
adc
or
push
push
and
inc
sbb
jo
or
inc
fwait
or
adc
fmuls
mov
rorb
or
ror
dec
adc
add
hlt
fisttps
inc
sahf
nop
sub
negl
jnp
cmp
inc
add
nop
ss
cwtl
push
cmp
mov
jmp
jle
jae
popa
xchg
pop
cld
mov
popf
xor
adc
cmp
sahf
push
cmp
sahf
and
sub
sub
inc
jnp
adc
adc
mov
cld
push
push
arpl
jl
jns
je
jno
mov
add
adc
mov
cmp
lods
cmp
xor
mov
jne
xchg
stos
pusha
sbb
iret
call
repz
jmp
xchg
aad
ficompl
sbb
cmp
shll
push
mov
or
xor
ss
cmp
clc
mov
mov
sti
mov
lods
loop
cmp
push
daa
dec
sbb
xor
icebp
cmpsb
mov
xchg
mov
or
add
inc
jae
or
adc
jg
xchg
inc
cmpsb
and
clc
jecxz
leave
push
sbb
leave
inc
dec
rcll
adc
dec
lods
pop
xchg
imul
cltd
and
outsl
movsl
adc
test
lret
adc
pop
int3
add
mov
test
add
xor
aad
aad
mov
rolb
leave
jae
mov
stos
cmp
aaa
mov
dec
adc
dec
add
mov
movsb
pop
or
ss
add
adc
adc
adc
adc
adc
orl
ret
xor
mov
inc
faddl
xor
mov
xor
in
cmpsb
call
aam
movsl
test
or
or
or
or
inc
mov
and
sub
outsl
movsb
mov
xchg
insb
jae
add
push
sbb
cltd
mov
xor
hlt
aaa
mov
or
fisubrl
lahf
aaa
cld
mov
add
sub
fdivrs
jge
or
ret
mov
jno
testl
xor
dec
out
aad
sub
jmp
pop
shll
bswap
in
dec
mov
int3
in
and
rcrl
lds
dec
lret
xlat
and
xchg
xchg
push
lock
imul
mov
pop
aam
daa
xchg
xor
mov
pusha
inc
rclb
outsb
pmulhw
sbb
rcr
lret
mov
dec
cmpsl
pop
xor
roll
xor
stos
xor
cwtl
push
push
ljmp
shll
mov
or
xor
ja
inc
adcb
mov
loop
mov
xor
scas
movsb
pop
shll
stos
cmp
lea
in
fnsave
xor
sub
lret
cmpsb
mov
in
fstl
lahf
insb
jbe
cmp
out
pop
jmp
stos
xlat
adc
or
test
and
jns
notb
das
adc
fisttpll
sbb
sti
fwait
mov
push
scas
mov
push
xlat
or
fwait
ret
arpl
push
fsubrs
ja
lret
mov
movl
in
ja
mov
xchg
shll
xchg
add
add
mov
jmp
lea
lahf
lea
xchg
add
jge
aam
mov
jl
add
add
stos
add
add
add
add
add
lcall
add
add
add
add
test
incl
xchg
sar
xchg
sti
dec
add
nop
xchg
add
in
jo
ljmp
pusha
sar
xchg
cli
in
dec
sar
nop
call
inc
sar
nop
mov
mov
and
dec
nop
cld
call
xchg
clc
ljmp
repnz
pushl
incl
sar
xchg
cld
cmp
sar
xchg
stc
incl
adc
fldcw
add
add
aas
add
enter
cld
or
cmp
add
add
aas
add
push
cld
pop
add
aas
add
incl
add
aas
add
jmp
add
les
add
lds
add
and
dec
les
add
decl
add
les
add
sbb
movsl
lds
add
lds
add
lds
add
incl
jns
aas
add
add
in
ret
aas
add
jge
xchg
rolb
adc
xchg
sub
add
xchg
pop
jl
xchg
mov
pop
xchg
and
xchg
add
jge
xchg
cltd
add
and
xchg
cmc
add
jmp
add
xchg
xchg
mov
pop
add
xchg
xchg
add
xchg
jne
inc
xchg
xchg
add
xchg
ja
inc
xchg
dec
add
xchg
jg
inc
xchg
arpl
xchg
add
xchg
dec
mov
xchg
sti
add
xchg
decl
add
add
add
add
add
add
mov
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
cwtl
add
mov
add
pusha
xchg
add
jmp
add
lods
add
xchg
add
xchg
add
cmpsl
add
mov
adc
pushl
adc
jmp
adc
jns
sar
xchg
hlt
ljmp
sar
xchg
mov
ljmp
adc
call
xchg
cld
inc
adc
jmp
fcoml
sar
xchg
cli
call
add
sar
xchg
sbb
int
sar
xchg
sti
inc
adc
aas
cwtl
stc
lcall
add
xchg
adc
incl
adc
dec
xchg
ltr
sar
dec
add
add
xchg
push
adc
in
xchg
xchg
add
add
inc
add
xchg
es
add
xchg
rolb
sub
add
add
inc
add
add
add
test
mov
pop
add
test
nop
add
add
add
add
addl
add
sbb
pop
add
addb
add
roll
add
jle
add
or
add
loope
inc
xchg
and
or
loope
inc
xchg
dec
add
add
add
xchg
add
add
push
addb
add
xchg
sub
push
xchg
or
xor
add
xchg
leave
addb
add
flds
or
test
add
xchg
roll
adc
leave
addl
add
je
add
aam
out
add
add
add
add
adc
fiadds
nop
add
test
add
mov
loope
aam
mov
add
adcl
fwait
add
mov
popl
add
add
add
mov
mov
xor
sahf
add
add
add
add
addb
mov
addl
add
adc
inc
inc
std
ljmp
add
nop
or
sbb
xchg
adc
rcll
lcall
nop
or
roll
push
xchg
or
std
repnz
lcall
nop
or
fucom
cld
call
xchg
adc
inc
push
std
in
xchg
adc
inc
inc
std
ljmp
xor
decl
xchg
verw
add
std
decl
adc
lcall
adc
dec
add
std
xchg
jno
cld
call
nop
adc
pop
loop
inc
add
mov
aas
add
jp
add
jle
add
add
add
aas
add
add
aas
add
and
add
jl
add
jl
add
push
add
add
aas
add
incl
add
aas
add
add
or
add
incl
add
aas
add
add
add
decl
fnstsw
add
add
jnp
add
mov
add
mov
add
xchg
int
aas
xchg
jmp
mov
push
xchg
add
add
aas
xchg
leave
add
xchg
dec
mov
addr16
popa
mov
add
xchg
push
add
xchg
mov
cmp
add
xchg
or
pop
xchg
jge
aas
xchg
or
or
pop
mov
or
pop
add
add
mov
mov
sarl
lahf
add
mov
add
add
add
add
stos
add
add
add
movsb
add
mov
loope
popl
imul
imul
add
add
add
add
add
add
mov
mov
add
mov
mov
add
fiadds
xchg
sldt
cwtl
add
decl
fdivr
call
dec
stc
jmp
std
incl
xchg
add
jmp
and
fists
add
std
or
out
xchg
add
add
clc
cli
xchg
add
icebp
xchg
add
sbb
clc
fcoms
add
aad
stc
filds
xchg
add
add
stc
jmp
xchg
add
in
add
add
ljmp
cld
mov
cld
ljmp
cld
call
cld
call
inc
add
cld
cmp
inc
add
les
mov
jmp
cld
inc
mov
add
pop
clc
inc
add
cmp
add
clc
inc
add
rolb
cld
jmp
inc
add
jmp
inc
add
jmp
inc
add
ds
xchg
movsb
add
xchg
enter
cmpsl
add
xchg
ret
xchg
cmpsb
add
xchg
sub
xchg
mov
inc
inc
xchg
mov
add
add
xchg
or
xchg
mov
add
xchg
sbb
xchg
popf
add
xchg
add
add
xchg
mov
inc
xchg
lahf
add
xchg
jmp
add
xchg
and
xchg
mov
dec
inc
xchg
sub
add
sub
add
jmp
xchg
add
leave
jecxz
movsb
add
out
add
in
add
jmp
add
lcall
or
adc
adc
sbb
sbb
loope
loopne
ffree
in
lods
jmp
mov
lock
mov
jge
lods
clc
jno
test
mov
les
lods
test
mov
mov
lods
pushl
int3
rcrl
xor
addw
push
cld
mov
jb
add
jbe
clc
mov
insl
in
mov
imul
jg
popa
or
pop
and
xchg
push
sbb
lahf
dec
lock
inc
call
scas
cmp
jb
xor
mov
jbe
sub
inc
ret
and
enter
add
add
rcl
xlat
movsl
aam
fsub
jecxz
loopne
out
in
jmp
fsubr
out
int
icebp
repz
in
test
in
std
mov
xor
or
jno
or
adc
push
pop
gs
sbb
popa
or
pop
pop
pop
and
pop
push
and
sub
sbb
xor
or
xor
cmp
sub
arpl
gs
inc
stos
imul
mov
xchg
jne
jno
jns
test
pop
dec
mov
inc
push
pop
mov
dec
pop
xchg
dec
pop
cltd
rclb
into
push
arpl
mov
sub
jge
adc
test
add
int
xchg
and
cltd
lcall
popa
mov
xor
imul
pop
in
insl
mov
icebp
jns
out
in
mov
push
aas
and
dec
fiadds
inc
fiaddl
push
out
adc
pop
into
push
or
and
push
add
sub
and
xor
cs
sub
cmp
xor
icebp
mov
add
add
jmp
add
jmp
add
push
add
add
add
add
add
add
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
add
add
jmp
xchg
add
pop
xchg
pop
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
iret
xor
jmp
xchg
add
jmp
xchg
add
jmp
xchg
xor
xchg
xchg
xchg
sub
std
cmp
cmp
std
mov
out
lcall
jg
cld
in
cld
std
cld
std
cld
in
cld
jp
ljmp
out
jg
cld
ljmp
cld
mov
cld
mov
add
clc
jl
add
add
add
add
jge
add
jge
add
add
repnz
ljmp
add
xchg
sbb
add
add
xchg
sbb
add
add
xchg
cltd
add
xchg
sbb
add
add
xchg
sbb
add
add
xchg
sbb
add
add
xchg
cltd
addl
and
nopl
sbb
add
or
push
sbb
sub
adc
dec
adc
addb
push
scas
adc
adc
cmpsb
adc
adc
xchg
fistl
xchg
add
add
jmp
add
jmp
add
jmp
add
xchg
add
add
jmp
add
jmp
add
jmp
add
jmp
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
push
mov
jo
sbb
jo
add
dec
inc
inc
pusha
nop
jo
jo
jo
lock
xor
out
jnp
cmp
stc
int
inc
into
sub
shrb
inc
mov
mov
jp
or
cltd
pop
jl
mov
push
out
insl
add
es
fcomip
out
insl
outsb
jae
cmpb
out
movsb
sub
lock
and
adc
cmp
push
nop
fs
scas
subb
jbe
push
mov
sbb
xor
test
lods
popa
push
call
sub
movsl
adc
mov
mov
mov
xchg
fistpl
repz
mov
daa
xchg
hlt
mov
bound
in
fiadds
icebp
pop
push
jns
push
das
and
add
mov
mov
popf
nop
out
push
mov
iret
push
je
sbb
insl
lcall
fstl
inc
push
add
cmpsl
mov
adc
fld
rcrl
add
xchg
jg
add
add
xchg
into
add
xchg
stc
cld
inc
inc
add
xchg
aad
add
xchg
stc
cld
ljmp
in
add
xchg
add
xchg
add
xchg
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
add
cli
pushf
mov
add
movsl
movsl
stc
mov
sub
lcall
call
mov
scas
lret
mov
add
cmpsl
jecxz
lahf
mov
scas
mov
xor
xorl
mov
mov
mov
jno
imulb
jno
xor
add
inc
xchg
push
cmp
movsl
pusha
dec
dec
scas
pusha
cmp
pushl
icebp
popf
inc
add
hlt
scas
inc
or
mov
insl
or
mov
xchg
mov
call
xchg
mov
lcall
xchg
ret
call
popf
lcall
xchg
cltd
decl
xchg
sar
incl
insl
add
outsb
add
std
jb
int
dec
add
add
add
add
add
add
add
add
add
lcall
add
add
add
std
add
imul
mov
decl
jno
gs
cld
imul
cld
dec
add
cld
pusha
add
cld
fs
cld
pusha
add
std
add
mov
sbb
shrb
inc
shrb
add
xchg
dec
std
incl
xchg
in
decl
sbb
imul
roll
push
xchg
cmp
xchg
push
push
xchg
ffree
inc
xchg
loopne
inc
xchg
mov
add
xchg
sbb
add
add
imul
aam
dec
pop
dec
cltd
iret
inc
stc
popf
adc
test
dec
rorl
lahf
test
movsl
add
add
scas
dec
pop
insb
mov
test
stos
scas
dec
ds
sbb
adc
addr16
mov
dec
fisubrs
mov
int3
mov
xchg
inc
cs
adcl
adc
xchg
inc
cs
jecxz
xchg
add
aam
cmp
aam
mov
aam
add
add
add
add
add
movb
add
add
add
mov
cmc
xchg
jno
divb
js
notb
jmp
add
dec
jg
xchg
jno
xor
js
xor
sbb
rcrb
addr16
jmp
or
pop
jmp
add
mov
mov
cwtl
xchg
incl
add
sbb
dec
fnstenv
push
stos
out
outsb
lret
jae
xchg
add
add
mov
in
add
add
mov
std
dec
pop
push
or
add
dec
pop
push
das
test
lods
add
add
add
add
add
insl
add
add
outsl
push
inc
add
inc
add
sbb
add
inc
add
sbb
pusha
add
add
add
push
dec
sub
insl
insl
push
push
cmp
aas
push
add
push
push
push
sub
xor
add
add
bound
inc
scas
sub
cmp
fs
testl
insl
inc
cmp
jae
mov
outsb
inc
je
or
mov
lcall
adcb
sti
mov
mov
add
mov
add
add
xchg
or
out
cmp
out
pushl
add
ljmp
adc
jmp
adc
lcall
add
call
lcall
and
mov
and
mov
and
mov
and
add
xchg
jmp
add
loopne
stc
div
stc
negb
scas
stos
and
add
mov
mov
xor
rcrb
negb
or
add
add
add
add
sbb
add
add
sbb
add
mov
or
add
pushf
pusha
cmc
sub
iret
and
lret
ljmp
add
jno
and
mov
xchg
lcall
xchg
xchg
call
sar
mov
add
and
pop
or
and
cltd
xchg
or
add
or
sub
pop
inc
pop
scas
outsb
leave
sti
and
or
add
sub
sahf
add
xchg
and
nop
jo
das
xor
and
std
std
ljmp
add
cld
std
outsb
add
push
add
dec
repz
lods
std
fstl
or
add
mov
cld
addr16
cld
jae
sar
outsb
add
cld
jno
aam
jne
aam
imul
cld
data16
sub
add
dec
inc
xchg
push
add
xchg
aas
add
add
xchg
fiadds
dec
xchg
add
bound
dec
xchg
outsl
add
xchg
incb
cmp
add
xchg
scas
cmp
xchg
mov
inc
xchg
int
inc
xchg
add
xchg
dec
xchg
nop
add
stos
add
addb
xchg
xchg
add
xchg
sti
add
xchg
in
add
add
fldl
imul
add
lret
xchg
add
add
add
fldl
ds
add
add
add
add
xlat
add
xchg
into
add
add
add
int
imul
add
lds
xor
add
add
fildl
arpl
xlat
add
add
jp
out
addl
jmp
push
add
add
lret
ret
int
add
add
and
stos
cmp
add
add
mov
xor
movsl
add
inc
xlat
test
sbb
popf
popa
sbb
mov
stos
cmp
xchg
push
dec
shll
sub
fisttpl
xchg
ljmp
cld
mov
insl
cmpsb
and
add
aad
dec
pushf
add
jno
xchg
add
jmp
jl
xor
je
cmp
je
sub
imul
add
add
add
lea
add
cmp
lods
mov
movsb
mov
stos
mov
mov
lods
mov
imul
mov
test
mov
mov
punpckhdq
sarl
add
xor
and
shlb
cs
cmp
fnstsw
add
ror
nop
ret
enter
jge
add
xchg
fcoml
jne
fsubl
sbb
jns
and
pop
mov
bswap
lods
sti
mov
in
mov
mov
push
mov
add
xchg
cmp
je
negl
add
xchg
cwtl
fs
subl
xchg
adc
or
pushf
adc
adc
repnz
in
cmp
pop
xchg
inc
fsubl
lds
aaa
add
sbb
addl
mov
outsl
cmpsb
popl
mov
add
outsl
jp
add
lcall
sub
xchg
or
add
add
mov
stos
rorl
mov
xchg
add
or
lret
popf
ljmp
rcr
mov
imul
in
cmp
lock
mov
lret
pop
lcall
pop
pop
nop
add
sub
push
jmp
rolb
push
add
and
xchg
add
jmp
rcrb
mov
jle
jnp
jl
push
lods
imul
subl
lea
pusha
push
mov
insl
insl
cmc
jae
pop
mov
cmp
cmpsl
cmp
dec
xchg
pop
mov
and
imul
dec
jo
add
leave
cltd
test
lock
in
xchg
push
scas
jecxz
call
loope
out
hlt
test
pop
mov
shl
loopne
sbb
lds
aam
int
lret
sub
nop
popf
xchg
jb
idiv
adc
notl
mov
adc
add
aaa
pop
push
pop
sti
inc
ds
dec
inc
pop
and
call
jl
pop
push
addr16
mov
sub
pop
icebp
and
pop
or
mov
iret
pop
cmc
daa
add
xchg
insb
xor
dec
dec
sub
aas
gs
fcoml
aam
pop
dec
fists
add
xchg
fdivrs
mov
rol
pop
pop
in
inc
push
clc
mov
insl
pop
loope
push
push
jle
mov
aas
gs
pop
push
inc
call
icebp
iret
and
inc
shll
je
stos
sub
adc
aam
mov
ret
into
dec
xchg
rcr
int3
xlat
fcmovnb
mov
jmp
int
fimuls
add
mov
aam
sub
cli
mov
xlat
lock
ljmp
mov
faddp
xchg
jbe
adc
cmpsl
repnz
xchg
rclb
enter
into
mov
add
add
loop
cltd
cmc
in
dec
pop
mov
cmpsl
mov
sti
xchg
addr16
or
pop
into
pop
mov
inc
js
pusha
shrl
jno
xchg
add
jae
cltd
jnp
add
data16
or
pushf
fisubs
popa
mov
mov
mov
pop
mov
lds
cltd
mov
add
es
js
and
fs
fcoml
insb
or
popf
imul
in
mov
mov
aas
add
lahf
cmpsb
mov
push
imulb
scas
ds
mov
mov
lods
mov
fbstp
rolb
out
out
cmc
xchg
out
stc
jbe
out
cmc
dec
ljmp
fsubrp
cmpsb
cmp
add
inc
sub
or
add
pop
add
lcall
inc
push
mov
push
pop
inc
push
dec
pop
xchg
aas
push
pop
mov
fwait
mov
xchg
lcall
andl
jbe
adc
add
xchg
mov
jbe
or
jnp
std
subb
lea
sbb
add
xchg
mov
jge
xchg
movsb
jnp
movsl
mov
add
and
dec
pop
testl
add
xchg
aaa
out
add
cmp
add
jne
add
movsb
subl
dec
shll
add
loopne
int
faddl
adc
lea
mov
lahf
cs
popf
lcall
pop
std
cli
fmuls
xchg
add
or
lock
shl
xorl
xchg
add
repz
cmp
mov
add
loopne
test
jmp
sbb
out
fsubr
add
xchg
or
jg
add
jmp
lods
sti
fsubp
adc
div
pop
push
cwtl
add
dec
mov
testl
push
add
sub
rorb
xor
call
jge
mov
outsb
nop
pop
add
add
addb
jecxz
scas
xchg
outsl
popf
jne
pop
cwtl
arpl
addb
jl
jmp
xchg
data16
lds
mov
xor
incl
int3
sbb
aas
daa
sub
and
call
mov
mov
xor
dec
cli
and
or
add
ja
jns
je
dec
add
je
add
add
int
ret
rolb
movsb
addb
mov
cmp
rcl
ffreep
mov
cwtl
mov
pushl
pop
add
jmp
fwait
mov
mov
mov
mov
xchg
sbb
jg
stc
add
inc
popa
daa
add
xchg
icebp
mov
add
xchg
scas
pop
out
out
daa
add
xchg
dec
add
jnp
in
or
xor
adc
daa
add
xchg
dec
out
xor
icebp
sbb
daa
out
adc
cld
das
daa
add
xchg
pop
in
xor
cmpsl
in
push
or
daa
add
xchg
xor
lea
push
push
insl
add
xchg
jle
cmpsb
or
adc
pop
pop
aaa
gs
or
jmp
sbb
aas
sub
filds
sub
jno,pn
add
test
xchg
add
or
sti
out
or
xchg
add
xlat
xchg
cli
mov
add
inc
scas
call
fwait
add
ret
add
lods
ror
lods
leave
imul
or
or
call
add
insb
sbb
test
push
adc
add
and
add
sbb
inc
enter
and
stc
add
xchg
add
and
cmpsb
insb
or
sub
xor
add
xor
add
insl
insl
dec
mov
mov
outsl
sbbb
fwait
pop
push
add
icebp
mov
push
mov
daa
mov
mov
inc
mov
push
lds
and
mov
jp
xchg
add
rorl
aas
fnstcw
call
shl
sti
ret
or
sub
mov
pushw
outsl
jae
fnstenv
mov
data16
std
add
add
nopl
push
adc
add
ret
jae
xlat
xchg
push
into
int3
or
ret
iret
pop
lret
aam
push
mov
mov
repz
mov
fistpll
mov
ss
std
shll
or
cmp
jp
out
lcall
and
mov
sub
adc
cltd
adc
add
maskmovq
mov
push
push
mov
jo
pop
add
xchg
cmpsl
xchg
xchg
bound
dec
ds
scas
jp
xchg
push
loopne
mov
push
testb
jb
xchg
lahf
imul
and
add
das
add
add
mov
lods
xor
pusha
add
adc
pop
adcl
xor
inc
sub
push
ja
repnz
mov
pop
popl
test
add
shll
movsl
mov
sahf
adc
add
xchg
movsb
mov
fdivr
call
fsubrl
sarl
add
or
fnstenv
add
repnz
jmp
or
call
loope
das
out
or
cmp
enter
into
jmp
mov
out
or
cltd
loop
in
in
sbb
mov
std
adc
test
xor
add
xor
xchg
incb
mov
arpl
xchg
add
lods
sbb
arpl
lcall
jge
decl
call
jmp
insb
ljmp
pusha
in
sti
ljmp
loopne
in
fcmovb
fsubp
clc
fcmovb
dec
vpaddw
clc
and
sub
sub
xchg
add
add
cmpsl
stos
add
test
in
jecxz
outsb
jecxz
loop
ret
loop
imul
loopne
loop
ficoml
repnz
sti
in
mov
jp
shll
mov
pop
push
in
rclb
cwtl
sub
pusha
add
sbb
aas
dec
cmp
xor
cmp
movl
adc
out
sbb
add
bound
into
in
push
add
xchg
mull
pusha
imul
cmp
out
xchg
imul
sub
movsb
jo
pop
xchg
xor
insl
ds
mov
mov
push
jmp
dec
dec
push
mov
inc
data16
mov
shrl
leave
fistpll
mov
cwtl
fbstp
add
cmp
mov
aas
pop
sub
inc
push
cmp
lahf
fiadds
or
or
dec
inc
bound
adc
or
or
push
xor
jp
leave
sbb
and
je
push
js
insl
lock
aad
adcb
add
inc
lret
orl
xor
cmc
js
dec
les
push
ficomps
cmp
jns
cmpsl
cmp
fs
mov
push
xor
cmp
push
xor
sub
pop
sbb
rcll
mov
and
les
xchg
addr16
pop
mov
push
ss
insb
adc
xchg
jge
hlt
aam
cld
sar
testl
out
scas
psubw
push
popa
rcll
jp
inc
adc
sub
ss
push
sbb
xor
cmp
dec
and
das
dec
xor
push
outsl
bound
ror
fstpt
mov
rcl
xchg
icebp
rcr
mov
ret
aas
call
out
lds
and
jecxz
loopne
pop
clc
out
arpl
jecxz
or
movsb
stos
pop
loope
out
inc
lcall
xchg
sub
pop
pop
sbb
add
je
cld
mov
sbb
mov
adc
ds
add
xchg
into
es
inc
int3
dec
xchg
aaa
lret
push
sbb
add
dec
movsb
xchg
xchg
pop
mov
jns
lods
and
clc
ja
mov
jnp
xchg
jae
pop
add
xchg
leave
xchg
imul
dec
cmpsl
push
mov
adc
frstor
xchg
testb
dec
ljmp
stc
add
add
xorl
ja
xchg
add
call
cmpsl
add
jle
aas
mov
xor
cmp
sub
insb
sbb
jae
cli
arpl
jno
add
add
mov
add
and
ds
xor
add
lret
add
xor
mov
or
adcl
lods
sub
incl
xchg
jmp
jmp
into
imul
xchg
add
clc
add
add
jns
sbb
sub
inc
add
mov
lock
or
decl
add
sub
sbb
rcrl
sbb
int
add
cs
aas
inc
add
daa
sbb
xchg
popa
and
lock
jmp
lret
add
jp
add
add
aam
fidivrl
incl
scas
sbb
lods
cmpsl
sub
push
push
in
inc
push
jbe
pop
push
pop
sub
pop
add
inc
inc
sub
push
xor
and
fnstcw
mov
repz
and
and
adc
add
sbb
or
push
pop
or
push
or
push
add
mov
pop
ljmp
aas
push
push
xchg
sarb
inc
inc
fldt
inc
imul
cld
sbb
mov
jle
jmp
sub
add
lcall
in
ficomps
and
and
imul
pop
lret
inc
orb
push
shlb
ret
push
add
cli
arpl
mov
add
xchg
sbb
fistpl
rclb
inc
push
loop
or
into
aam
popa
mov
shrl
sub
jmp
cmp
in
mov
adc
fldenv
inc
xchg
add
sti
pop
nop
lret
push
lea
jle
pop
insl
dec
add
add
jp
mov
cmp
andb
add
fs
cmp
add
and
xor
rcrb
or
xchg
inc
inc
movsl
imul
cli
dec
push
jmp
sub
cld
and
xchg
add
dec
adc
and
xchg
add
sarl
xor
mov
jge
mov
inc
fdivs
add
out
jecxz
sbb
call
xchg
add
cmpsl
add
push
mov
or
es
add
cmp
cmpsb
mov
add
cld
gs
into
add
lahf
cli
pusha
shrl
add
scas
sub
sbbl
je
pop
imul
outsl
dec
les
add
mov
add
xchg
sahf
imul
inc
add
pop
js
ds
jp
add
add
mov
jle
or
jbe
jo
inc
push
dec
mov
add
add
rcr
fmuls
into
pushl
add
add
add
add
jnp
xor
and
inc
das
arpl
pop
popa
addr16
and
inc
xor
int3
and
jne
daa
add
pop
jp
dec
inc
add
xchg
test
popa
add
xchg
jp
lods
cmp
out
pop
mov
mov
xor
cli
jl
mov
push
movsb
stos
add
lcall
pop
xchg
xchg
fildl
ret
test
mov
scas
testl
stos
dec
inc
xchg
mov
dec
inc
xchg
nop
dec
inc
add
testl
mov
arpl
sub
inc
and
rorl
dec
iret
dec
sbb
lret
push
sbb
push
adc
arpl
pop
jne
dec
push
jge
adc
outsb
push
je
jb
js
jbe
jnp
jp
xor
xor
cmp
sub
jmp
daa
js
int3
jno
daa
je
jne
jns
jns
and
add
inc
inc
movsl
dec
rolb
dec
into
dec
popf
push
lret
push
out
xchg
pop
loop
add
jnp
and
jae
pop
inc
iret
pop
pop
aas
lret
pusha
popa
dec
mov
gs
mov
imul
jo
jmp
pop
push
push
ss
push
pop
cmp
push
sub
pop
dec
push
inc
push
pop
int
xchg
add
adc
push
or
add
jne
add
jne
add
cwtl
jb
jmp
and
pop
add
add
add
mov
add
shrl
add
push
add
or
ljmp
add
add
add
add
add
add
add
insb
add
pop
add
add
arpl
mov
inc
dec
inc
xchg
push
add
addl
cltd
jae
push
mov
inc
dec
inc
shlb
jb
jbe
add
inc
inc
add
cli
ds
lcall
cmp
inc
add
inc
inc
xchg
lea
test
addb
jne
inc
xchg
jo
inc
xchg
inc
inc
inc
xchg
inc
popa
fs
cmp
jb
xorb
js
dec
imul
lock
xchg
xor
cld
aas
xchg
sbb
pop
xchg
jmp
add
add
add
xchg
adc
xchg
mov
push
xchg
movsl
add
xchg
xchg
arpl
std
add
add
xchg
test
mov
add
lcall
add
add
add
insb
mov
push
imul
add
add
jl
push
add
add
addb
add
add
pusha
insl
jo
jno
sub
pusha
cmp
dec
std
fs
je
jae
xchg
add
jo
dec
shll
mov
pop
std
jo
jne
pop
add
cld
pop
jo
loope
insl
mov
inc
push
movsb
rclb
cmpsb
repz
mov
arpl
mov
gs
mov
jo
mov
dec
inc
mov
gs
pop
outsl
dec
jne
jae
jno
gs
je
jo
add
dec
or
popa
gs
pop
outsl
add
xchg
add
es
jo
xor
and
imul
xchg
add
xchg
jae
sbb
inc
loope
pop
mov
add
jmp
jle
add
js
add
ja
add
inc
add
addl
mov
mov
inc
add
jle
inc
add
jle
add
sti
add
cld
dec
add
cld
ljmp
add
int
add
rolb
insl
add
add
call
add
fadds
jo
cwtl
cld
jb
lods
add
add
add
xchg
lcall
jmp
push
gs
popa
je
jmp
ret
add
xchg
mov
add
xchg
roll
xchg
mov
add
xchg
add
jae
cld
add
xchg
adc
xchg
jmp
sub
mov
add
xchg
dec
push
imul
push
jns
jbe
leavew
arpl
or
jb
add
push
inc
pop
adc
dec
bound
push
dec
xchg
add
bound
jae
jne
imul
aam
icebp
pop
jmp
push
rcll
inc
leave
push
movsb
aas
xchg
add
outsl
mov
xchg
and
outsl
lods
gs
and
pop
jmp
push
fsts
push
movb
xchg
add
gs
mov
popa
jo
cmp
jns
cmp
insb
or
mov
pshufw
gs
and
jo
xor
add
push
push
push
add
pop
dec
inc
sbb
pop
dec
inc
mov
out
inc
mov
add
sar
outsb
popa
int
pop
and
cli
data16
lock
out
jb
icebp
pop
add
rorl
mov
cmp
stos
rolb
popf
fadds
jmp
mov
pop
and
pop
jb
ja
cmp
mov
push
jae
outsb
pop
and
jne
fs
add
and
pop
and
inc
add
inc
push
dec
jbe
push
dec
xchg
add
les
popa
leave
arpl
push
je
aas
and
lea
outsb
xor
je
pop
outsb
adc
add
jb
add
dec
inc
pop
add
push
inc
add
inc
inc
pop
cmp
lock
dec
inc
popa
inc
add
push
pop
jbe
leave
and
popa
jb
popa
je
scas
sbb
outsb
popf
fs
xchg
push
jb
movsl
dec
inc
pop
xchg
and
push
adc
aas
inc
push
sbb
pop
dec
sbb
pop
jmp
cmp
aaa
shll
cmc
outsb
gs
or
add
pop
je
mov
mov
cmp
fld
push
inc
xlat
lods
cmp
jbe
jne
fs
jo
mov
pop
outsb
test
add
xchg
mov
inc
push
aad
dec
inc
jae
push
inc
push
adc
dec
push
push
data16
cmp
outsl
data16
and
insb
sbb
pop
jmp
push
pop
push
xor
inc
sub
dec
add
adc
dec
mov
add
mov
bound
imul
push
rcll
inc
lret
dec
rclb
inc
call
add
push
and
cmpsb
insb
jmp
push
fsts
inc
ret
cmp
dec
jmp
bound
and
inc
ja
je
add
cmp
push
dec
inc
and
push
dec
push
jmp
ss
add
dec
inc
add
aad
inc
movsl
enter
jmp
push
int
pop
and
cmc
pop
je
negb
out
pop
mov
cmpb
int3
dec
dec
scas
fildl
add
rcrb
mov
insb
popa
pop
lea
dec
ja
gs
cld
jmp
ds
inc
xorl
inc
push
mov
add
and
jbe
jb
push
outsl
outsb
lods
cld
jmp
dec
inc
pop
inc
inc
push
inc
xor
push
push
inc
inc
dec
add
je
popf
jbe
arpl
jbe
or
data16
pop
jb
push
arpl
rcrl
or
outsl
and
arpl
and
ret
and
jae
xchg
cmp
xchg
and
sbb
inc
and
pop
push
es
dec
pop
sbb
dec
aaa
add
xchg
adc
arpl
mov
data16
sti
push
xor
and
add
cmp
gs
enter
add
addr16
arpl
add
xchg
mov
inc
lret
mov
push
pop
lret
scas
inc
push
ficompl
jbe
mov
xchg
gs
je
js
and
add
gs
and
pop
inc
addr16
add
push
push
dec
xor
inc
sub
inc
pop
dec
sbb
push
sub
xchg
add
bound
arpl
jne
popa
push
addr16
arpl
pop
and
or
cmp
or
pop
lret
negl
push
push
lds
add
inc
rcrl
je
pop
into
retw
popa
mov
ja
add
popa
jecxz
jle
mov
pop
mov
pop
add
lods
pop
imul
inc
pop
sub
bound
add
pop
arpl
push
push
dec
push
cmp
arpl
jne
insb
or
arpl
or
pop
insb
or
popa
imul
pop
imul
push
dec
push
fildl
dec
arpl
hlt
jo
int3
or
fbld
rorl
lock
fsubl
mov
popa
imul
pop
imul
in
inc
pop
ds
push
lahf
jbe,pt
imul
and
pop
push
scas
cmp
and
insb
insb
dec
arpl
frstor
imul
inc
pop
push
scas
cmp
add
dec
pop
jne
dec
and
dec
insb
bound
and
imul
push
inc
pop
cs
pop
jne
dec
add
and
and
jno
mov
addr16
mov
imul
dec
and
jne
pusha
gs
add
xchg
and
push
inc
pop
jns
jno
jne
addr16
jbe
imul
ja
aaa
cld
jo
xchg
and
xor
add
and
xchg
adc
push
jmp
mov
inc
xchg
cmpsb
push
inc
out
push
dec
pushf
add
xchg
fwait
cmp
dec
add
test
xlat
cmp
add
movsb
add
mov
leave
push
jmp
cmp
cmp
dec
xchg
add
inc
cmp
pop
xchg
add
pop
cmp
cmp
push
sbb
aas
xor
add
push
push
push
das
cmp
jmp
cmp
xchg
add
push
cmp
cmp
xor
stos
cmp
inc
jmp
push
aad
movsb
add
dec
sahf
xchg
dec
add
aam
add
fidivrl
inc
jmp
fidivrl
mov
jo
outsb
dec
jae
imul
pop
js
lea
push
dec
arpl
inc
pop
outsb
jmp
outsl
pop
je
outsb
je
or
pop
add
adc
xor
pop
arpl
xor
outsb
push
cwtl
add
faddl
bound
jecxz
add
fbstp
ret
add
inc
pusha
gs
arpl
pusha
add
pop
push
outsl
jae
sbb
decl
lcall
push
mov
inc
add
ret
inc
add
std
imul
add
add
add
add
add
add
add
pop
add
cld
call
je
mov
das
ja
insl
bound
insl
das
mov
jo
jo
add
bound
insb
add
arpl
mov
aas
xchg
gs
aas
xchg
mov
gs
test
arpl
add
popl
imul
add
xchg
mov
gs
jno
gs
flds
add
add
xchg
daa
jge
fcmovnu
mov
inc
mov
cmc
sti
add
push
call
push
dec
ret
rcrb
xchg
flds
push
dec
push
jge
pop
outsl
sbb
push
dec
add
xchg
add
adc
call
add
add
pushf
jge
jo
divl
pop
call
xor
shrl
nop
mov
adc
jle
insb
idivb
ja,pn
call
lahf
jne
add
xchg
insb
cmp
inc
ds
add
adc
out
fildl
stc
call
icebp
inc
adc
xor
mov
jmp
fstl
imul
in
je
cmc
ja
std
pop
call
inc
stc
repnz
je
call
mov
fldenv
mov
loope
jns
fldenv
jb
adcl
mov
push
call
imul
jmp
dec
cli
out
aaa
out
cmp
insb
or
sti
into
andb
hlt
mov
mov
sahf
pop
ret
or
mov
gs
push
jb
out
stc
cs
incb
es
push
inc
jge
inc
adc
fs
adc
inc
adc
mov
data16
and
lea
push
push
jmp
inc
mov
lcall
jmp
sub
sub
ficoms
xor
inc
add
pop
cmp
push
xchg
mov
sub
push
addr16
mov
sbbb
xor
movsl
jae
mov
cld
jle
imul
and
add
pop
sahf
outsl
dec
pop
adc
jo
fists
pop
xchg
fldcw
jmp
xlat
mov
xlat
inc
aas
jp
mov
lods
cli
mov
xlat
push
inc
aad
adc
jecxz
add
mov
mov
or
jmp
pusha
dec
cld
int
out
int
jmp
pop
and
loope
mov
repz
fadd
fisttps
mov
dec
mov
add
add
cli
fdivl
call
ret
push
ja
cld
sbb
mov
ja
jg
insl
in
jle
insb
loope
xchg
push
call
js
inc
sub
push
mov
inc
in
push
aam
push
shufps
xchg
ja
test
cmc
imul
add
jecxz
pop
mov
and
jmp
pop
push
inc
insb
outsl
js
add
shlb
test
push
fnstenv
mov
lea
xorl
cmc
mov
adc
aad
xor
cmc
xor
gs
jne
or
xchg
add
test
movsl
add
loope
gs
outsb
outsb
push
mov
sbb
adc
add
scas
cmp
sarl
and
push
xor
cs
inc
pusha
cmp
adc
xchg
mov
sbb
pusha
and
ss
std
jae
aad
lods
std
add
clc
incb
add
adc
adc
jecxz
add
inc
and
aad
mov
shlb
jmp
fidivs
cmp
cli
push
cmp
add
dec
cld
decl
cmpsb
xlat
pop
ret
call
and
add
mov
jae
in
aas
lock
xchg
je
enter
aam
xchg
push
dec
mov
call
test
xchg
sub
cmpb
add
mov
adc
imul
push
or
adc
mov
push
add
jne
inc
cmp
mov
cmp
nop
xlat
add
das
jge
mov
cmp
stc
ljmp
mov
shl
idiv
adc
mov
loopne
in
cmp
xchg
add
pop
imul
call
push
test
xor
dec
loope
mov
test
cmp
mov
inc
xchg
subl
xor
pushf
mov
or
add
leave
call
push
push
fs
lahf
jmp
add
aas
mov
sarb
xchg
add
add
orb
adc
push
aam
add
inc
shlb
call
mov
lcall
mov
push
push
int3
lock
push
pop
imul
jmp
push
add
ret
add
or
add
int3
add
mov
push
pop
movsb
and
in
jne
sbb
ret
imul
fdivl
ret
push
push
push
cs
mov
inc
in
fwait
push
adc
inc
mov
add
dec
pop
in
lock
add
lea
in
addb
push
push
ss
faddl
out
adc
adc
ds
rolb
fadds
or
or
aaa
loopne
test
out
inc
add
test
add
push
aad
cmp
insl
test
add
in
loope
sub
mov
cmp
daa
filds
test
sub
fmulp
out
mov
mov
xchg
out
inc
mov
add
ja
add
xor
mov
xor
mov
push
push
out
ret
cwtl
icebp
add
mov
inc
jg
lods
xchg
jmp
popl
imul
pop
sub
add
out
mov
add
xchg
mov
cmp
inc
add
and
or
sarb
dec
adc
pop
jb
test
sarl
rolb
add
push
adc
add
push
or
cmp
shll
dec
adc
xchg
sti
push
outsw
enter
fldt
pushf
lea
fisttpl
add
add
adc
in
loope
jmp
fstp
fcom
loop
pop
lea
push
ret
mov
aaa
inc
jg
pushl
sbb
add
pop
pop
add
xchg
xor
push
jecxz
mov
xlat
test
fs
push
or
in
add
cld
add
sbb
and
mov
movsb
out
xor
xchg
test
mov
jge
cmc
xchg
flds
cmp
inc
addl
ror
aaa
and
aam
gs
dec
jo
lock
cmp
add
inc
enter
xchg
mov
fbld
int
std
imul
or
xor
mov
les
out
push
add
cmpl
jle
ret
test
das
fsubr
xchg
add
add
std
jne
or
std
jne
in
and
jge
cmp
add
pop
leave
das
or
push
imul
and
push
adc
xchg
pop
test
push
inc
and
dec
inc
add
ss
dec
sub
out
aam
ljmp
mov
cmp
pop
xor
imul
sbb
push
daa
inc
test
add
cli
lea
dec
orl
or
ja
xacquire
pusha
aas
and
jno
das
xchg
jmp
dec
mov
dec
or
mov
jmp
adc
add
cmp
lods
pop
lahf
add
jo
inc
out
add
push
push
dec
sti
xor
jmp
add
fnsave
jge
dec
mov
jmp
lcall
add
mov
popa
inc
cwtl
call
insl
les
add
xchg
xor
cld
sbb
lods
inc
aam
xchg
jl
dec
sti
mov
mov
add
cli
push
aas
add
and
call
imul
psubd
xlat
add
scas
inc
mov
aam
and
xchg
xor
mov
push
pop
push
add
xchg
jae
fldl
xlat
pop
pop
and
repnz
mov
xchg
call
mov
xchg
mov
jg
je
add
les
test
xchg
add
xor
loope
inc
and
xchg
addl
push
inc
rolb
std
cld
push
add
or
pop
add
push
call
icebp
shll
adc
fidivrl
stc
cmc
push
je
test
call
mov
add
gs
cmp
mov
add
xor
sbb
subl
push
pop
std
push
call
jno
jae
sahf
and
cli
fiaddl
adc
scas
sbb
dec
out
std
inc
std
adc
test
cltd
scas
xor
xchg
lds
add
add
xchg
out
push
imul
nop
push
test
aam
stc
call
ds
xcrypt-cfb
cmpsl
cmpsl
add
sub
xlat
ljmp
xor
test
cmpsb
xor
pop
push
loope
add
int3
ds
call
outsl
add
xchg
or
add
xchg
fs
je
xchg
or
jmp
add
pop
std
add
data16
push
mov
sbb
std
or
add
out
in
mov
addb
data16
test
xchg
inc
xchg
shl
or
dec
ljmp
add
addb
sbb
add
fs
add
push
std
or
lcall
sarl
shll
cmp
inc
xchg
out
xor
fimuls
mov
sub
in
loopne
addl
les
cli
ret
mov
mov
subl
or
inc
aad
push
sub
jmp
jae
jae
add
and
in
add
adc
cmpsb
inc
jmp
xlat
add
in
xchg
jg
add
inc
dec
and
lods
add
fdivl
cmpsb
inc
jmp
push
add
in
sub
jb
jae
push
shll
ss
sarb
in
call
das
aad
push
add
jp
int
dec
and
lds
ret
push
enter
mov
lea
sub
dec
movsb
xchg
push
cmc
int
notl
lods
jb
inc
out
jmp
lods
mov
mov
inc
and
jb
and
or
add
push
rolb
jbe
push
mov
stos
std
jns
jb
jbe
add
lods
jb
add
pop
call
xchg
enterw
jge
scas
in
rclb
add
push
lcall
sub
aam
lock
pop
hlt
cmp
add
mov
loope
push
ljmp
inc
lret
jg
fcomip
dec
mov
or
lret
rcll
test
add
mov
cmp
mov
sbb
adc
incl
stos
push
push
push
out
ret
nop
pop
les
add
dec
push
add
les
stos
sti
mov
push
and
push
int3
dec
push
test
adc
cwtl
iret
sti
adc
std
cmp
add
jle
add
inc
xchg
ss
ljmp
adc
out
inc
jmp
push
test
in
pop
xchg
xorl
test
test
push
stc
lock
sub
shl
repz
jmp
popa
xchg
add
stos
xchg
ss
sbb
adc
andps
lret
out
sub
iret
jae
push
add
repnz
push
lock
xchg
pop
shl
iret
ljmp
inc
imul
cwtl
fcoms
inc
into
subl
and
jmp
xchg
add
in
fwait
pushf
inc
jmp
flds
je
cwtl
inc
and
mov
mov
lds
ret
mov
push
add
add
inc
mov
jbe
addr16
cmp
clc
loop
std
addl
mov
or
push
or
sti
divl
into
imul
call
or
incb
lods
mov
pop
mov
jle
ljmp
scas
adc
test
lret
xlat
cmp
int
push
mov
ljmp
add
xchg
insb
cli
out
std
iret
incb
sbb
push
adc
push
sti
out
aad
adc
add
and
add
pop
push
or
add
xlat
jg
xchg
iret
add
scas
loopne
ja
sub
add
enter
jecxz
inc
mov
push
mov
lods
hlt
repz
out
push
test
test
add
xlat
or
ret
sarl
fdivl
add
xor
mov
int
sti
xchg
lds
iret
jns
fwait
data16
xchg
lds
into
lret
add
push
sarb
xchg
sub
sbb
lock
fildl
clc
jnp
sub
sub
roll
mov
jge
pop
outsl
jmp
in
add
jmp
xor
fadds
xchg
sbb
push
lret
dec
xchg
add
sub
mov
inc
push
add
in
xlat
adc
jae
loop
and
out
mov
test
fnop
lahf
inc
fldcw
adc
add
fsub
repz
add
or
stos
sub
icebp
aas
jmp
aas
inc
std
outsb
popa
jbe
insb
bound
push
jecxz
push
adc
mov
mov
mov
push
cld
pushl
into
add
jmp
or
push
loop
adc
pop
iret
std
jne
icebp
mov
push
push
insl
add
lock
or
mov
sub
push
loop
or
enter
xor
pop
ret
push
mov
adc
jne
dec
jl
loop
sbb
dec
push
ljmp
push
ljmp
std
adc
xchg
pusha
inc
sbb
sbb
sbb
push
cmp
add
call
fs
jae
dec
adc
cmc
add
pop
test
mov
mov
push
and
fmul
je
loop
fistps
test
mov
pop
jne
or
pop
call
sbb
push
adc
hlt
repz
in
je
jp
pop
adcb
mov
ja
jg
or
add
repz
inc
push
cltd
push
jmp
lret
inc
sub
leave
sub
lds
sub
jle
hlt
mov
pusha
and
nop
leave
jae
ficoml
xor
push
fnstenv
lret
push
icebp
lret
testb
sub
sbb
push
inc
adc
cmp
lods
dec
lock
notb
outsl
jle
dec
rorb
cmp
add
cmp
push
jp
and
mov
leave
pop
xchg
sti
ja
jae
dec
je
pop
sar
pop
dec
inc
sub
ja
xlat
inc
jb
testl
out
aas
jmp
xchg
dec
adc
mov
call
fimuls
ffreep
incb
bound
sahf
lods
sub
mov
xor
or
in
fistl
add
jne
and
lahf
ljmp
imul
dec
fistps
xchg
add
sarb
in
mov
add
fmuls
add
dec
add
jb
loop
cmpsb
test
add
adc
add
add
lcall
adc
sub
aaa
adc
mov
test
sub
sbb
push
push
dec
inc
adc
pushl
mov
xchg
scas
inc
add
lods
mov
push
push
mov
aaa
or
inc
in
mov
pop
push
movsb
add
jnp
mov
bound
mov
out
mov
xchg
xlat
add
xor
ret
stos
push
jo
ret
fcmove
loope
pop
enter
pop
mov
jnp
addl
jmp
in
out
inc
aaa
rclb
xchg
mov
call
ret
add
jmp
push
sub
pop
add
sbb
pop
add
inc
xchg
jns
faddl
push
add
xchg
add
pop
add
sub
shlb
jns
inc
jmp
add
sub
call
xlat
dec
test
add
jb
dec
lds
adc
mov
sarb
xchg
add
adc
test
cmp
jns
xchg
xor
lods
xor
pop
inc
xchg
lds
or
inc
jmp
add
lods
push
cld
add
inc
add
push
or
mov
sahf
inc
pop
and
rolb
call
fwait
xchg
inc
jmp
cwtl
ret
aad
cwtl
dec
inc
jmp
add
push
stc
pop
inc
aad
add
cld
xchg
xchg
inc
jmp
xchg
ret
aad
mov
inc
jmp
push
add
cwtl
add
je
mov
je
add
add
mov
jmp
test
pop
cs
mov
push
mov
int3
out
inc
cld
incl
sbbb
inc
jge
push
push
shlb
inc
insl
jge
lods
jle
out
push
lcall
xor
inc
sub
ret
xor
out
sbb
leave
cbtw
popf
inc
add
out
add
roll
add
cli
add
movsb
cmpsb
idiv
mov
test
call
ret
jno
mov
test
xor
mov
fsubs
ret
sub
xchg
inc
xchg
das
mov
add
hlt
xchg
inc
xchg
pop
ret
jae
add
das
jae
orb
xlat
xor
xor
inc
adc
scas
aad
call
add
fsubs
ret
popw
rclb
jmp
aad
add
popf
cli
add
xchg
add
out
xchg
xchg
xlat
jle
popa
rcll
shr
pop
mov
xchg
add
out
fwait
in
xchg
xlat
jle
dec
ret
pop
add
add
add
jl
shrl
repz
test
nop
and
mov
and
add
mov
popf
and
add
add
cwtl
sub
bound
xchg
add
pushf
lcall
pop
jmp
mov
shr
jo
cwtl
inc
xchg
jmp
mov
add
add
stc
ret
gs
inc
jmp
ret
cli
xlat
rclb
add
ret
push
or
cmp
push
lret
ljmp
rorb
jb
xor
inc
xor
adc
push
xor
mov
cwtl
lea
push
adc
test
mov
xchg
xor
in
xorl
add
in
aaa
insb
inc
jmp
aaa
insb
inc
jmp
movsb
loopne
stos
xchg
mov
pop
jns
pop
leave
sub
sub
add
fdivs
inc
mov
add
xlat
fisubrs
mov
push
mov
arpl
add
and
inc
jge
mov
mov
ret
rclb
arpl
xorl
push
jmp
mov
adc
std
call
mov
jl
xor
cmp
inc
dec
jne
mov
push
sar
mov
push
xor
add
in
adc
mov
jle
std
call
les
xor
dec
cmp
jb
xchg
and
mov
call
ret
push
or
ret
repz
mov
mov
or
mov
aam
ss
in
sti
aaa
inc
xchg
pop
xchg
add
mov
adc
cmpsl
orl
push
mov
iret
add
xchg
daa
mov
out
inc
cld
or
repnz
out
pop
add
shlb
mov
mov
xchg
mov
adc
adc
je
pop
inc
in
push
mov
cli
inc
xchg
mov
mov
add
icebp
test
jae
lahf
es
mov
xchg
mov
xchg
add
mov
call
imul
jo
cmp
test
outsl
add
sti
sub
xor
popf
rclb
test
cwtl
mov
adc
jg
call
into
shll
or
inc
add
add
into
cmp
jmp
dec
mov
int
jg
in
lcall
cmp
out
fisubrl
add
jmp
ja
inc
jmp
dec
mov
xchg
jl
out
jl
mov
add
sbb
dec
push
fists
inc
jmp
xchg
test
adc
add
pusha
test
in
ds
cli
lds
in
add
pop
pop
mov
pop
inc
pop
add
dec
jne
ss
push
fucomi
cmp
add
adc
decl
add
adc
adc
jne
loop
and
rorb
sti
dec
mov
addr16
add
add
sub
adc
orb
xchg
xchg
inc
add
xchg
ret
pusha
sti
icebp
stos
sub
jmp
xchg
sbb
pop
rorb
mov
ds
mov
adc
inc
cwtl
scas
push
test
mov
test
add
add
mov
xor
out
mov
add
push
out
xchg
cmpsl
add
inc
cmpsl
add
out
xchg
dec
lods
add
les
imulb
clc
add
inc
xchg
sub
push
add
stos
mov
ljmp
mov
cmc
xchg
mov
loope
dec
add
mov
mov
out
or
pop
xchg
mov
xchg
push
jb
push
movsl
rolb
xchg
push
push
mov
in
push
xchg
add
adcl
sbb
orb
sbb
push
cmp
add
sbb
and
jg
scas
stos
xchg
test
add
add
ret
push
inc
jne
or
es
dec
insb
inc
jmp
add
mov
adc
adc
fcoms
cmp
jl
push
call
aaa
cmovo
stos
mov
jb
pop
mov
in
ret
in
jmp
and
call
cwtl
test
ljmp
dec
in
test
aam
mov
xor
add
insl
ds
andl
call
sub
jmp
jnp
or
mov
out
addr16
adc
in
add
sbb
jnp
inc
adc
inc
lods
ss
add
je
ret
jns
mov
sub
add
mov
push
push
mov
stos
inc
xchg
test
pop
loop
xchg
jp
mov
cmp
mov
xchg
roll
and
or
je
and
outsb
ds
add
jmp
mov
xor
sub
pop
int3
mov
push
test
inc
add
out
stos
push
test
mov
push
jmp
rolb
fnstcw
inc
add
cmpsl
sub
xchg
add
or
in
xchg
shr
jnp
cs
mov
mov
add
mov
inc
jmp
stos
or
pop
mov
or
mov
xchg
js
je
add
cs
dec
inc
sub
mov
jg
sub
mov
lret
sub
sub
mov
mov
test
stos
push
in
push
cmp
pop
pop
ret
incb
into
icebp
jg
sub
or
adc
add
mov
inc
ret
lods
fmull
jmp
je
lea
inc
and
call
adc
xchg
insb
push
sub
insb
lds
add
cmp
jmp
add
push
sahf
outsb
sbb
jmp
or
mov
mov
mov
cltd
and
aam
push
inc
jmp
out
test
mov
ret
add
insb
add
clc
xor
jmp
inc
push
decl
jg
or
lock
adc
mov
aad
cmp
cmp
mov
jge
inc
mov
sub
add
jg
push
jae
add
test
xor
mov
push
sbb
in
mov
sbb
inc
lea
dec
push
mov
fmull
push
std
incl
inc
dec
push
lea
dec
xor
loopne
add
outsl
cmpsb
jg
jae
mov
lds
ljmp
jl
lar
incl
push
xor
aas
insb
sbb
jmp
add
pop
pop
add
addr16
outsl
add
dec
outsb
cmpsl
test
stos
cmp
push
aas
pop
inc
popl
lea
pop
call
ret
mov
lea
mov
and
xchg
pop
xor
push
cs
mov
lcall
adcb
mov
sbb
addl
test
cmp
push
sub
aaa
jbe
cld
call
and
add
mov
lock
inc
xchg
test
mov
mov
xchg
inc
xchg
jge
pop
pop
mov
call
cs
sub
movsl
cmpsl
xchg
std
call
incb
shll
jmp
mov
test
dec
xchg
add
inc
test
stos
vpmacsdql
call
adc
mov
pop
enter
and
inc
add
jmp
push
jmp
stos
loopne
xchg
xchg
mov
jmp
jno
mov
std
call
stos
movsl
addb
dec
push
mov
add
test
adc
lret
inc
daa
mov
es
mov
call
fimull
sti
neg
inc
in
lret
sysret
mov
add
add
test
jo
fidivrs
xchg
xchg
adc
decb
push
mov
inc
push
add
mov
call
jae
jne
and
lahf
cld
jbe
into
cld
push
stos
call
out
ss
test
stos
mov
inc
cmpl
std
xchg
call
jbe
imul
movl
cmc
cmc
addr16
mov
mov
mov
xchg
mov
add
out
pop
pop
pop
push
pop
pop
pop
pop
add
and
pop
add
pushf
pop
jb
mov
aas
mov
jae
xor
das
fwait
repz
xchg
ret
adc
in
xlat
cltd
pop
fbld
push
add
xchg
addb
xchg
cltd
sub
add
in
ret
scas
xor
lcall
xchg
jnp
pushf
cmp
out
cmpxchg
push
add
inc
cld
incl
fwait
idivb
add
add
cmp
scas
aad
mov
add
pusha
add
add
loopne
add
push
mov
push
andl
xchg
inc
cmc
aas
scas
cld
xorb
scas
insl
jo
jnp
add
rcl
or
pusha
dec
nop
ja
sti
push
mov
add
sti
das
inc
add
out
mov
xchg
sbb
mov
jae
ds
lds
scas
jp
adc
pop
inc
jmp
xchg
mov
or
inc
add
stc
mov
outsl
pop
inc
jmp
xchg
call
mov
dec
pop
inc
jmp
xchg
pop
pop
inc
xlat
add
repnz
in
add
lods
decb
bound
sub
jmp
xchg
add
pop
pop
clc
dec
add
pop
cmp
mov
ja
je
push
push
ljmp
test
add
cmc
aas
add
das
repz
mov
add
pop
and
mov
je
add
mov
and
or
daa
addl
pop
jb
mov
dec
decl
adc
dec
pushl
daa
push
and
inc
adc
dec
lea
cmp
inc
sar
jne
call
adc
xchg
jb
mov
mov
mov
push
cmpsl
imull
lcall
lea
push
adc
push
cltd
add
aam
test
xlat
add
incb
xchg
lcall
xorl
into
cltd
add
mov
adc
icebp
out
sbbb
xor
sub
pop
shl
jns
addr16
roll
adc
jmp
test
push
push
push
inc
add
xchg
jge
mov
sbb
out
xor
in
fsubrl
cwtl
fwait
or
rcrb
sbb
push
idivb
jl
mov
lret
add
or
out
rorb
jmp
aas
dec
inc
mov
imul
movsl
rolb
dec
pop
push
push
hlt
sub
add
or
inc
jo
jmp
add
sar
push
inc
lds
sbb
jae
mov
pushf
cwtl
or
push
outsb
and
je
idivb
and
das
shr
call
jae
adc
in
pop
xchg
add
ficoms
jecxz
jmp
mov
cli
sbbl
add
jnp
add
mov
inc
fnstsw
add
pop
inc
jmp
xlat
add
push
insl
jns
call
cmp
add
std
xchg
mov
std
cld
je
inc
push
shll
arpl
jno
test
in
cld
cmpsl
and
incb
add
daa
andl
add
std
test
rolb
mov
test
sti
mov
cmpl
add
adc
loop
jge
lea
out
cld
decl
adc
dec
push
cwtl
add
xchg
call
cmc
mov
push
lcall
add
adc
add
xchg
sbb
adc
add
pop
fisubs
shr
push
add
push
mov
sbb
add
cltd
jge
adc
push
aam
pop
add
push
add
jae
roll
add
inc
xor
and
shrb
add
adc
sbb
adc
xchg
add
push
mov
cwtl
jno
and
les
add
add
add
xor
xchg
jl
xor
xchg
cmpsb
sub
push
test
hlt
lret
adc
lods
xchg
sub
ljmp
add
add
cmc
xor
jmp
xchg
aad
shl
add
test
clc
jae
mov
call
imul
jmp
xchg
add
into
vmread
xchg
cld
cmpl
jbe
nop
add
inc
push
add
testb
cmp
add
dec
inc
add
fs
imul
xchg
add
mov
pushl
fmull
cmc
xchg
cmc
test
add
je
fsubl
mov
pop
pop
inc
jmp
lahf
add
jmp
xchg
add
or
imul
inc
xchg
jae
add
xchg
push
inc
sub
gs
incl
daa
inc
and
dec
push
push
or
jle
adc
mov
and
inc
and
test
and
pop
cmp
or
inc
std
mov
jo
and
sbb
adc
inc
mov
inc
add
adc
push
je
pop
jb
xchg
pop
aad
or
ljmp
call
fsubs
adc
aam
adc
xchg
test
jnp
insb
icebp
or
mov
stos
inc
xchg
cltd
lcall
jl
push
xor
and
or
bsr
mov
push
push
orl
adc
sbb
mov
or
add
sti
movsb
adc
inc
call
lods
mov
ljmp
push
stos
cmp
ret
cmp
and
pop
sahf
insl
test
test
pop
rcl
je
stos
insl
inc
xchg
push
pushf
add
loopne
insl
add
das
pushf
cmp
mov
cwtl
cmpl
bnd
add
or
movsl
mov
dec
mov
pop
aas
jmp
adc
ljmp
fwait
cmp
sbb
dec
adc
push
scas
std
hlt
loopne
repz
shrl
xchg
add
adcl
jbe
xor
push
hlt
add
adc
mov
push
ret
scas
cwtl
xorl
insl
push
push
add
mov
add
or
in
push
inc
jmp
xor
add
fnsave
fcmovu
or
cmpsb
add
mov
call
leave
and
fwait
ret
or
or
xor
cmp
ljmp
addr16
mov
jae
dec
jae
jmp
inc
and
sub
jns
call
xchg
jo
add
sub
mov
movsl
push
push
imulb
cmp
in
test
jp
out
fidivs
cmp
add
jb
adc
movsb
xchg
push
movl
xor
inc
inc
in
mov
push
cmp
cld
cld
add
xchg
mov
cmc
cmp
ljmp
sar
fwait
add
cld
mov
xor
dec
wrmsr
js
ljmp
js
add
xchg
test
push
fwait
stos
rclb
mov
mov
jl
add
jae
xchg
arpl
sub
faddl
dec
xlat
pop
call
adc
je
add
shl
mov
mov
mov
add
lods
add
push
xor
mov
in
movb
xchg
mov
or
push
ds
inc
jmp
mov
xchg
lea
add
sbb
add
pop
pop
cwtl
out
mov
jb
and
pop
add
call
adc
test
xchg
push
out
fidivrl
or
mov
mov
xor
bound
add
aas
insb
hlt
sti
inc
xchg
lahf
cmc
pop
cld
sti
dec
add
aas
les
sbb
cmp
ret
dec
fxch
push
sub
add
add
inc
add
outsb
mov
jb
sub
mov
stos
fldcw
sbb
xchg
mov
add
push
mov
je
dec
pop
ljmp
add
rolb
dec
mov
movsb
sub
fs
mov
mov
inc
adc
out
aad
jmp
popf
jae
pop
lea
xor
pop
add
jno
call
or
pop
mov
or
dec
add
mull
push
mov
cltd
jae
mov
sti
loop
lods
xchg
jmp
enter
add
add
xor
adc
fistps
jmp
or
pop
dec
add
mull
fstpl
inc
add
stos
outsl
jl
ds
popa
clc
aas
add
mov
sbb
jae
std
lds
mov
mov
inc
jo
stc
add
push
lods
mov
dec
mov
adc
jl
cmp
cmpsb
mov
insl
ret
out
sub
xor
and
testb
stos
divb
add
sbb
insb
cmp
xchg
add
mov
add
rorb
xor
add
popf
pop
fs
nop
test
add
push
lods
loop
push
test
pop
inc
xchg
jno
jecxz
adc
jae
jmp
data16
pop
or
mov
lods
mov
pop
dec
cmc
xor
push
lods
sahf
add
mov
popa
xchg
sbb
and
add
push
loope
fcomps
je
les
jmp
stos
inc
lahf
in
pop
rclb
aad
mov
clc
cmc
addl
popf
popa
pushl
mov
add
jecxz
and
cmp
pushf
push
inc
icebp
and
pop
call
adc
add
rcpps
call
adc
loop
sbb
mov
sub
xchg
add
jmp
leave
xor
adcl
cmpsl
or
adc
jmp
add
inc
lock
hlt
cmp
add
jmp
add
mov
xor
lea
dec
lcall
cltd
adc
and
cwtl
mov
sub
add
std
jg
out
jg
inc
std
adc
dec
sbb
out
pop
dec
jg
add
je
pop
mov
add
pop
shr
mov
cmpl
add
lea
out
inc
add
jbe
add
jno
mov
std
je
adc
ljmp
push
or
jge
test
cmp
push
aas
mov
xchg
inc
dec
je
andb
fiadds
add
cmpl
inc
add
rolb
lcall
cld
mov
add
add
aas
push
inc
inc
cmpb
in
inc
add
add
inc
cli
lock
cmpsb
imul
push
setp
je
and
adc
sysret
les
add
popf
inc
add
inc
mov
paddq
cmpsl
push
out
mov
das
or
dec
adc
and
ret
mov
mov
sbb
or
adc
addr16
adc
call
inc
mov
das
lcall
xchg
sti
out
mov
adcb
mov
or
shll
aam
stos
add
inc
outsl
out
add
xor
mov
or
dec
aam
data16
addr16
call
inc
add
sub
inc
or
aaa
mov
and
rolb
mov
inc
or
dec
mov
cmp
inc
nop
or
mov
and
call
imul
fwait
mov
push
jae
mov
xor
add
lock
jmp
fnstenv
lock
clc
std
mov
and
mov
sub
add
mov
ljmp
imul
icebp
test
ljmp
jns
test
push
pushl
add
xchg
mov
data16
xor
xor
repz
repz
add
add
push
loope
js
push
test
loopne
mov
push
mov
js
and
push
xor
out
pop
push
push
js
adc
or
ret
inc
insb
xor
xor
push
sub
movsb
cmp
sub
sbb
xchg
pop
sub
rolb
xchg
and
je
adc
cld
push
add
fists
adc
and
push
out
mov
dec
test
xor
add
test
shrb
xchg
sub
or
mov
pushf
xchg
cmpsl
add
xor
jnp
xchg
je
fiaddl
adc
add
call
add
inc
xchg
jge
shld
sub
call
add
sbb
add
xchg
lods
xchg
xchg
or
arpl
or
xor
cmp
mov
sbb
outsb
xchg
fidivl
je
mov
xchg
push
stos
imul
inc
xchg
mov
imul
xchg
sub
xor
out
pushl
or
adc
push
xchg
jb
insb
inc
xor
add
mov
out
add
cmp
cmp
shl
sub
or
cmpsb
imul
fnstcw
psubsb
cld
out
add
arpl
lock
es
mov
push
insb
stos
mov
scas
mov
add
push
pop
mov
cld
push
decb
jnp
dec
inc
mov
add
cli
into
jle
fisubrs
rorb
jmp
sub
add
xchg
sub
or
data16
insl
xor
sub
sete
mov
push
out
mov
into
mov
mov
loopne
jo
add
mov
or
jmp
mov
add
cld
mov
rorl
jo
sti
lcall
into
out
test
incl
out
std
decl
xor
cli
jmp
movl
decl
cmp
xor
sbb
incb
push
mov
add
and
in
movsl
test
sub
inc
aam
add
out
test
test
add
xchg
push
add
xor
add
mov
ss
sbb
les
xchg
xchg
fwait
loop
test
test
aam
xchg
jno
or
adc
add
loopne
mov
pop
pop
cli
dec
cmpsb
leave
inc
add
add
pop
jg
add
add
xchg
mov
inc
pop
add
inc
xchg
jns
stos
mov
cmp
ds
sbb
add
stc
adcb
fstl
add
add
xchg
ljmp
add
sbb
pusha
mov
mov
xchg
test
dec
es
jge
imul
shl
int
jmp
ss
xor
out
add
xchg
jmp
add
jmp
sbb
mov
sbb
repz
push
add
aas
call
gs
incb
fsubrp
inc
divb
add
loop
mov
mov
adc
add
mov
aas
jmp
fldl
in
push
shll
mov
push
aaa
and
fs
enter
in
mov
sub
jb
fiadds
add
mov
xchg
push
push
in
add
addr16
ljmp
outsl
std
mov
pop
cmp
or
lds
add
fstpl
test
pop
fmuls
pop
or
rorw
mov
mov
push
cli
mov
je
out
adc
jno
loopne
inc
add
dec
or
les
sub
add
xchg
push
or
xchg
mov
test
lret
push
jo
mov
mov
xchg
cltd
jge
aam
lcall
push
icebp
and
lcall
xor
flds
add
mov
lods
pop
xchg
push
adc
jnp
push
and
fdivrs
insl
dec
xchg
mov
xchg
cmp
dec
testl
xchg
xchg
dec
jg
xchg
add
sub
mov
sub
sub
test
incl
lods
xchg
nop
add
add
inc
lea
cmp
mov
mov
stc
arpl
les
add
orb
popl
fistl
jl
inc
push
bound
aam
mov
addb
fucomp
mov
pop
dec
xchg
add
sub
rorb
xchg
add
xchg
add
sbb
jmp
inc
xchg
ja
lret
loopne
pop
xchg
out
dec
add
add
adc
lcall
and
cli
data16
call
xchg
add
push
adc
or
mov
adc
lods
mov
cmp
test
or
add
repz
push
adc
fisttpll
mov
add
call
sbb
std
fimuls
mov
test
adc
je
and
pop
xlat
push
add
ljmp
test
sbb
lock
jmp
bound
add
xor
or
ljmp
inc
lock
cmp
dec
push
lds
add
jnp
mov
popf
add
or
jp
pxor
add
insl
in
test
std
call
mov
adc
jge
cmpxchg
add
cmp
repz
fidivrl
std
jmp
jecxz
clc
add
sbb
std
or
sbb
lcall
mov
add
adc
leave
push
fwait
and
add
sar
or
jge
mov
adc
xchg
jns
mov
xor
jg
or
incb
inc
mov
dec
and
inc
mov
jl
add
aas
test
sub
mov
out
adc
test
inc
add
add
nop
repz
cmp
cmp
add
test
add
sbb
adc
pop
mov
add
js
aam
mov
in
add
xchg
out
insb
popf
call
incl
pop
rcr
out
jmp
jns
pushl
add
add
jns
std
aaa
jns
insl
aam
sub
rorl
push
xchg
mov
call
xlat
je
mov
xor
push
mov
insb
jnp
decb
in
jmp
testb
shl
jb
mov
daa
mov
jp
pop
add
inc
in
mov
mov
sbb
jb
sbb
inc
stc
mov
pop
sbb
sbb
test
xchg
inc
sub
or
js
sub
rcl
incb
push
jns
jne
jns
or
inc
add
add
add
mov
add
js
incl
xchg
lea
rorb
popf
roll
add
add
fcos
inc
out
pop
fildl
add
cs
std
data16
add
jae
and
je
push
sar
adc
sbb
std
data16
adc
xor
mov
jl
or
sbb
adc
mov
mov
pop
lcall
push
mov
jle
xchg
xchg
add
aam
push
faddl
sbb
mov
leave
pop
loopne
fisttpl
or
lret
lods
out
and
jbe
jo
mov
inc
adc
aam
xchg
fcmovnb
in
lcall
in
or
adc
js
testl
sbb
jmp
mov
xor
arpl
xor
test
xchg
mov
add
fldenv
xor
or
inc
xchg
leave
test
jns
test
mov
xchg
adc
lahf
push
or
push
push
jg
push
xchg
mov
movsl
xchg
andb
or
pushl
jns
sbbl
inc
call
jns
cmp
in
jmp
call
jne
movlps
aaa
iret
pusha
cwtl
cli
mov
xor
mov
cmp
inc
cmp
xorl
add
push
add
jmp
cmpsb
mov
iret
enter
push
pop
fdivrs
leave
add
cmp
fadds
mov
push
push
xor
pusha
sbb
std
inc
sbb
push
or
aaa
sbb
test
sbb
adc
fs
jmp
repnz
inc
jnp
inc
lock
xchg
xor
add
repz
ljmp
ds
jl
jne
data16
inc
inc
inc
call
pushl
cmp
in
inc
out
icebp
or
in
or
lods
fs
dec
jge
add
add
mov
repz
orl
test
std
dec
icebp
fists
aad
lock
jnp
mov
leave
mov
lahf
xor
fadds
add
or
pop
aam
jnp
add
or
call
paddusw
push
arpl
or
push
sti
push
mov
jmp
scas
mov
lcall
arpl
add
hlt
sbbl
pop
sbb
je
fnstcw
mov
xchg
ja
pop
roll
xchg
ds
jl
sub
add
test
clc
add
inc
pushl
push
and
sub
xchg
xchg
testb
cmp
add
push
cwtl
cltd
mov
jmp
pop
cli
andb
ret
out
adc
and
adc
icebp
fs
addb
lret
addl
adc
lock
lods
push
addl
sub
push
insl
or
mov
add
lods
repz
xchg
xchg
inc
inc
adc
dec
ud0
or
jae
adc
add
jg
jmp
cmpsb
mov
and
in
popf
andl
rorb
cmc
arpl
js
insb
int3
jae
xchg
faddl
and
dec
jg
fimull
add
sbb
mov
int3
mov
push
xchg
rorl
add
jmp
outsl
insl
add
leave
addl
lea
push
mov
hlt
push
ljmp
ret
jae
inc
out
sub
add
sub
inc
inc
push
out
add
test
cmp
lea
jbe
and
std
jg
mov
call
shrl
mov
or
shll
ret
inc
cmc
pop
jo
ljmp
imul
add
lods
jnp
movnti
inc
imul
mov
and
pop
in
inc
jae
movsl
cmp
add
adc
jg
fnstenv
xor
aas
cmp
mov
daa
add
aam
or
push
mov
cmc
out
pushl
jge
imul
cmp
adc
ljmp
cmpl
pop
insb
lret
roll
andb
inc
xchg
cmp
push
add
fldl
jl
xchg
or
jmp
push
in
add
ret
push
andb
add
adc
ret
or
mov
add
clc
mov
ja
addr16
xchg
add
addr16
xchg
add
or
mov
imul
cmp
xchg
jg
js
jg
repz
xchg
pop
or
xchg
push
jo
sbb
inc
clc
mov
xchg
mov
jne
fdivl
gs
lahf
cltd
add
jb
add
movsb
add
call
xchg
inc
jae
xchg
xchg
fldl
push
add
insl
rcll
ljmp
negb
pop
out
jmp
add
pop
out
dec
add
push
jp
insl
icebp
jp
mov
pushf
inc
inc
mov
xchg
xchg
fstpl
push
decl
pop
sbb
roll
inc
dec
in
mov
call
mov
cs
std
rdtsc
cmp
ljmp
incb
push
jo
cli
std
andl
pop
mov
ljmp
lds
mul
add
lock
out
mov
sti
add
shlb
xchg
ljmp
lcall
std
add
xchg
mov
in
outsb
lock
xchg
fdivrp
add
mov
sbb
add
pop
add
incl
cmp
and
imul
add
sub
add
sub
pop
shld
rolb
addr16
push
lods
mov
imul
add
mov
filds
dec
xchg
outsl
call
push
pushf
aaa
jge
enter
push
lods
push
test
xor
mov
xchg
cld
call
cmpsb
into
fbld
popa
iret
std
xchg
cmp
add
mov
add
mov
sbb
add
jp
jl
fstps
inc
jmp
push
insl
inc
out
pop
les
add
xchg
idiv
mov
push
imul
call
push
addr16
test
push
sub
jno
int
shll
ret
aam
repz
add
test
aaa
add
call
insb
jle
call
outsl
add
sbb
pusha
enter
adc
cmp
outsl
pop
jp
out
jl
push
cs
mov
cld
mov
jmp
push
push
icebp
push
mov
dec
ret
add
lock
push
insb
fpatan
xor
cs
xlat
das
mov
inc
shl
lods
ret
bound
xor
shlb
add
bound
push
pop
fldl
push
cld
call
mov
sti
std
mov
out
push
imul
cmp
lods
pop
pop
pop
out
push
mov
mov
xor
fisttpl
test
inc
data16
jnp
add
push
out
ret
sbb
jo
decl
push
inc
insl
jle
or
ret
jae
mov
cli
inc
mov
jbe
roll
movb
test
add
push
mov
cld
dec
push
xor
sub
aaa
jle
gs
sub
pop
add
jb
sti
xor
inc
and
pop
push
push
imul
sti
push
ljmp
loope
sti
inc
adc
nop
imul
inc
test
jb
insb
dec
ja
jnp
jnp
add
pop
add
xchg
push
arpl
jns
pop
push
add
daa
les
sub
dec
js
mov
nop
loop
add
out
add
test
arpl
shrl
mov
lock
mov
add
xchg
mov
ja
aas
lea
loope
addl
repz
lcall
pop
sub
push
imul
in
rcrb
repz
cld
rorl
js
pop
jne
inc
mov
add
xchg
rcr
pop
or
clc
mov
insb
mov
jle
aam
add
add
sbb
sti
adc
fs
psubq
movl
sar
push
or
sub
mov
inc
aaa
ret
jnp
pop
mov
and
dec
in
inc
push
sar
ret
mov
movb
test
push
test
loop
repz
cld
mov
aaa
inc
in
orl
push
call
scas
add
push
dec
pop
leave
aas
je
mov
cmpsl
push
add
ljmp
inc
push
mov
out
in
sub
xchg
xchg
call
inc
mov
jmp
inc
xchg
lds
call
icebp
mov
add
jle
push
mov
jae
adc
add
dec
pop
ret
add
jne
jmp
xchg
xchg
fwait
add
add
or
enter
push
arpl
jnp
in
fucomp
jmp
mov
fiadds
sub
out
adc
mov
add
orb
mov
add
shlb
inc
or
pmaddwd
mov
outsl
out
add
add
dec
and
out
xchg
pop
movsl
jae
out
call
xlat
inc
int3
dec
push
add
aaa
mov
add
mov
test
adc
sub
subb
in
fstpt
cmp
orl
in
shl
or
or
cmp
jne
add
mov
ffreep
stos
in
out
addl
add
out
xchg
ficompl
xchg
cmp
jne
fisubrl
addr16
aad
adc
subl
rorb
add
cmp
jle
in
adc
imul
imul
cwtl
xchg
mov
loope
add
lea
mov
aam
or
adc
or
push
jb
testb
inc
mov
xor
xchg
cmpb
add
mov
add
jno
adc
mov
aaa
inc
jo
out
or
push
js
rol
out
or
push
subl
xor
or
jae
push
mov
imul
sbb
cmp
dec
mov
mov
push
andl
call
add
aaa
pop
cmp
xor
out
add
lock
loope
xchg
add
add
jo
ljmp
or
lods
add
icebp
js
js
inc
add
mov
push
pop
leave
incl
add
fidivrs
jge
dec
repnz
addr16
lea
dec
call
cs
add
pop
test
nop
in
jae
lcall
enter
inc
scas
int
nop
pop
jge
aas
push
shrb
push
je
xchg
push
je
or
mov
je
or
push
adc
pop
jae
mov
xchg
sub
imul
adc
pop
lidtl
inc
push
arpl
jne
test
cmp
les
adc
add
cmc
rcrb
or
pop
and
adc
dec
push
push
jp
push
jge
cld
popa
mov
jnp
cmp
jle
pop
cwtl
jle
dec
mov
ret
cmp
loopne
sarl
das
insl
out
xchg
popf
jle
add
adcb
pop
js
jns
jo
jnp
sti
loope
mov
imul
shrl
push
inc
sbbb
lea
sbb
das
adc
sbb
mov
fists
pop
add
mov
inc
dec
pop
incb
lods
jae
fadds
pop
icebp
outsb
jo
add
jmp
les
jmp
mov
ficoml
xchg
xchg
aad
faddl
lret
push
inc
jmp
or
fsubp
aad
cld
cmpsl
push
inc
jmp
int
out
outsb
jo
add
jmp
xor
jmp
inc
das
shrb
aaa
ret
das
rol
add
jne
push
mov
push
cli
or
adc
mov
adc
push
les
mov
inc
xor
ret
inc
sub
lock
ds
leave
aas
inc
pop
adc
mov
push
cli
jae
or
or
lods
add
stc
repnz
sbb
dec
mov
into
mov
and
inc
xor
roll
inc
pushf
inc
pop
dec
or
ljmp
repnz
sbb
or
inc
mov
test
jg
orb
xchg
cmp
lods
inc
or
bound
je
jnp
outsl
jg
pop
push
hlt
lds
fadd
and
gs
mov
push
adc
jge
mov
adc
inc
or
sbb
pop
xlat
add
fsts
sbb
ret
loopne
sbb
out
flds
jmp
aaa
stos
shr
push
std
push
addl
hlt
in
jle
or
jle
adc
jle
adc
add
imul
adcl
xchg
fwait
hlt
idivb
and
jle
add
popa
vhsubps
adc
ljmp
jle
cmp
jge
jmp
ret
adc
int
push
out
xor
call
xor
sub
or
not
imul
das
stos
sbb
push
addr16
icebp
addr16
insb
pop
rorl
cmpsl
jge
icebp
call
jo
jbe
mov
out
dec
ret
imul
mov
and
bound
push
aas
fscale
sub
subl
ja
sbb
insb
ret
add
insl
ret
outsl
dec
add
add
dec
cmpsb
add
jecxz
cmp
fs
pop
xchg
ss
ret
push
notb
int3
scas
add
insl
adc
add
xor
adc
add
cmp
dec
add
jmp
pushf
js
cmp
and
jmp
push
xor
adc
inc
incb
std
add
cmp
jmp
ds
fs
xchg
inc
incl
xchg
aas
jge
jb
dec
js
jb
je
loop
and
lock
fwait
cli
incl
jg
add
pop
sub
pop
add
outsl
mov
jnp
mov
je
mov
xor
push
cli
adc
je
add
fwait
adc
dec
cld
mov
pop
adc
sub
lea
adc
mov
lret
adc
inc
ret
sbb
add
mov
in
out
sti
pop
loopne
mov
cld
cmp
jno
imul
out
lea
and
jns
enter
add
cmp
xor
or
popa
push
gs
ret
push
jg
in
jmp
lret
adcl
mov
add
pop
add
add
xchg
jns
leave
ds
pusha
shrl
ljmp
jecxz
in
and
jmp
jg
fsubr
mov
in
into
mov
mov
decl
imul
cmpsb
push
jmp
mov
test
cs
ljmp
ljmp
jl
add
andl
push
insb
out
add
imul
add
bnd
add
inc
xor
jle
and
xor
cmp
pop
cmpb
fdivr
decl
add
cmpb
push
mov
repnz
jle
pop
sub
xchg
int3
or
jge
pop
jo
mov
push
rclb
inc
dec
jne
jg
jne
mov
push
xorb
decl
add
add
mov
enter
fdivr
push
xor
lock
hlt
je
xor
test
adc
ret
xchg
aam
jae
jnp
adc
sbb
dec
push
xchg
out
out
aam
je
pop
add
mov
jg
cltd
fmull
sbb
jns
rorb
enter
push
add
mov
test
or
xor
mov
push
ljmp
decb
jns
jo
inc
push
pop
mov
test
xor
push
and
loop
inc
jae
cmp
pop
add
jp
fs
inc
enter
mov
bound
sub
ds
test
push
adc
jmp
mov
scas
or
jle
and
adcl
cld
and
popf
and
fs
jns
rclb
jnp
fs
mov
leave
ja
sti
jae
pop
bound
enter
and
lock
mov
cmp
mov
jnp
mov
daa
jge
and
mov
sub
orb
jae
xchg
xchg
stc
jg
xchg
popa
je
push
pop
cmp
sti
jb
jbe
shrl
test
mov
js
pop
jg
add
sub
and
and
jae
mov
pop
testl
cmp
and
in
mov
sti
push
add
ds
jmp
push
add
fs
sub
out
adc
les
fsubrs
xchg
push
add
jl
pop
outsb
inc
testb
mov
roll
cld
pushl
xchg
push
ss
inc
sar
mov
lods
mov
aam
movb
add
or
jne
jno
adc
inc
or
lret
and
nop
out
addl
cmp
xorb
jae
in
clc
xchg
rorl
push
iret
mov
ljmp
jns
outsb
sub
in
je
ror
testl
cmp
notl
jl
imul
pop
adc
aad
pop
pop
mov
lahf
aas
popa
decb
xchg
test
shll
or
mov
imul
fwait
negb
fadds
push
arpl
out
xlat
imull
jae
inc
jae
add
xchg
in
fcomps
dec
xor
cmp
aad
subl
xchg
pop
xor
bound
mov
shrl
repz
popf
addb
addb
sbb
push
push
or
cmpsl
inc
shll
add
pop
pop
cmp
movsb
pop
xor
movsb
pop
cmp
test
popa
stos
pop
test
mov
add
test
pop
call
xlat
xchg
pop
fildl
lock
jmp
xchg
shrb
pop
push
pop
jb
push
out
dec
add
sub
dec
stos
xchg
push
addl
je
je
jnp
xlat
pop
xchg
push
sbb
ret
bound
mov
test
jmp
inc
pop
jmp
dec
pop
je
xor
or
cwtl
pop
je
dec
int
add
ss
incl
push
xor
jnp
insl
pop
or
xor
add
mov
inc
clc
ret
and
push
mov
loopne
or
push
jbe
cmp
add
jne
hlt
cmc
incl
cli
mov
test
cmp
aas
test
aaa
sbb
ljmp
testb
mov
add
ss
call
es
jmp
pop
ljmp
mov
mov
lret
rcr
pop
pop
rorb
adc
imul
mov
lds
xchg
call
add
xchg
jb
mov
imul
or
aam
incl
fmull
lea
jecxz
scas
adc
mov
lret
out
inc
jl
pop
mov
data16
int3
add
inc
fwait
add
mov
aam
test
add
sub
pop
addr16
imul
add
add
adc
lret
out
push
aas
dec
pop
pop
inc
mov
hlt
xor
or
ret
pop
mov
test
fnsetpm(287
mov
dec
push
or
pop
mov
adc
pop
dec
cmc
mov
dec
xchg
xchg
in
fistpll
idivb
inc
and
jmp
scas
pop
pop
xor
mov
sub
jecxz
mov
xor
xorb
or
push
add
arpl
adc
mov
or
sub
cmp
ljmp
pop
je
mov
hlt
ja
xlat
pop
dec
push
fcompl
ret
push
inc
add
xchg
ds
adc
and
xchg
roll
sbb
cs
pop
je
pusha
int
add
cmp
decl
pop
out
ds
xor
push
adc
and
mov
cmpb
push
out
jae
scas
jmp
jne
mov
adc
cmp
inc
add
test
je
xchg
std
je
or
ja
std
call
mov
mov
or
ds
jl
inc
xchg
addr16
add
mov
incl
hlt
inc
int
bound
pop
cmp
adc
decb
mov
ds
add
call
icebp
mov
shrl
insl
add
sub
add
inc
push
add
jp
push
pop
and
cmp
cmp
call
and
pushf
test
movsb
out
xor
add
rcrb
pusha
ss
subl
rclb
wrpkru
mov
int3
add
xchg
aas
cmp
int
jmp
rolb
dec
inc
in
add
roll
push
cmp
pop
adc
cld
mov
enter
lods
push
stc
subl
cmpsl
lds
inc
arpl
roll
shl
mov
push
or
mov
and
int3
mov
push
ljmp
mov
push
mov
aad
push
aaa
mov
popl
push
or
pushf
pop
ret
dec
outsb
mov
stc
in
incl
in
push
incb
jbe
stc
in
inc
cli
add
add
push
insl
mov
mov
mov
lcall
gs
fmul
pop
gs
add
xlat
mov
sub
jmp
jl
orl
pop
add
push
mov
incb
dec
in
lock
lods
mov
loope
mov
jmp
mov
jl
hlt
add
test
cmp
or
mov
sub
mov
xchg
push
jmp
mov
test
call
mov
jae
fdivr
mov
sar
mov
or
add
test
call
sti
loope
sti
pop
or
jno
aam
jle
add
add
enter
mov
or
subb
pop
push
lods
decb
faddl
out
xor
mov
inc
jge
filds
aaa
adc
and
insb
or
pushl
daa
mov
sub
pop
xor
lcall
mov
cmp
xchg
or
cwtl
xchg
incb
nop
data16
adc
lahf
pop
adc
or
imul
mov
push
pop
push
scas
rclb
in
push
push
cmp
repz
push
sarb
push
mov
imul
push
addl
scas
push
dec
imul
sbb
je
push
add
pop
push
call
and
rolb
pop
mov
jecxz
cmp
into
or
mov
pop
pop
notrack
push
jae
call
out
jg
mov
and
and
sti
adc
repz
pop
pop
or
cmp
loope
inc
and
jmp
ret
pop
cmp
or
ljmp
into
clc
lahf
xlat
add
inc
pop
cli
sbb
push
cli
adc
push
dec
test
xchg
push
in
add
push
pop
xchg
pop
adc
jae
mov
inc
addr16
inc
ds
call
mov
push
xchg
cli
pushl
mov
add
sarl
clc
mov
cli
mov
lods
mov
call
mov
add
fidivrs
pushl
pop
leave
out
mov
or
lret
xchg
sbbl
sbb
mov
pop
hlt
push
rorb
jb
push
add
je
mov
xor
xchg
xor
adcl
sub
inc
jno
incb
pop
fadds
add
add
pop
lock
nop
fidivs
mov
addr16
or
fldl
adc
push
or
out
or
pop
test
xchg
out
dec
jno
fnsave
sub
sub
xlat
adc
xchg
inc
pop
inc
pop
jb
popw
bound
add
test
xchg
inc
dec
jno
inc
dec
je
sti
xchg
loop
sub
add
rorb
add
add
push
pop
add
inc
push
pop
inc
mov
adc
std
movb
add
ret
out
add
sub
or
mov
adc
jmp
push
jns
push
push
dec
mov
jle
dec
roll
shufps
pop
pop
lcall
scas
inc
scas
dec
inc
xor
addl
adc
outsl
mov
or
adc
incl
jb
push
mov
inc
movsb
dec
xchg
in
xor
push
or
xchg
or
pop
add
push
nop
out
sub
call
rorl
je
or
pop
dec
js
mov
xor
mov
jns
mov
push
push
das
in
in
jg
lds
loope
and
xchg
leave
add
lret
inc
in
lret
inc
int
xor
mov
fiaddl
jge
mov
add
cmc
push
xchg
cmp
shl
add
inc
testb
add
mov
movb
fidivl
bnd
decl
ret
or
push
or
mov
mov
xor
je
xor
jmp
lock
divps
ds
xchg
sub
sbb
shr
ja
pop
add
push
aad
pop
pop
dec
stc
jge
mov
pslld
sbb
mov
pop
xlat
push
rcl
pop
rsqrtps
str
sbb
mov
pop
inc
gs
xor
pop
jl
imul
pop
sbb
sub
repnz
clc
mov
inc
dec
xchg
sub
rclb
int
xchg
test
fisubrl
ret
inc
aam
inc
jnp
add
cmp
push
in
push
js
push
dec
call
out
dec
jbe
adc
add
jmp
ja
jnp
clc
popa
push
adc
sar
sbb
push
cmp
add
dec
mov
movb
es
add
dec
call
repnz
add
rcl
lds
je
popf
push
mov
xor
fnclex
arpl
mov
inc
xchg
sti
jne
mov
pop
lock
add
mov
jbe
push
idiv
adc
mov
lcall
mov
pop
repnz
insb
test
fnsave
rcl
and
shrb
fimuls
adc
jle
push
repz
jle
jmp
inc
add
pop
add
sbb
imul
loop
cmpsb
mov
cli
lods
pop
sub
ss
add
js
insl
outsl
aam
adc
add
sahf
mov
cmp
sub
fs
stos
addl
add
mov
dec
mov
xchg
sbb
incl
push
push
aad
mov
or
mov
std
adc
incb
mov
std
pop
jle
std
jne
hlt
xchg
std
adc
movsb
mov
or
mov
or
in
pop
ret
xchg
or
decb
sbb
or
out
push
mov
adc
push
inc
inc
mov
push
or
jb
ja
pop
add
push
cltd
push
xor
mov
mov
pushf
repnz
xor
xor
sti
add
push
sbb
push
test
inc
clc
incb
sbb
into
pushf
cli
mov
adc
mov
les
cmp
ret
sar
mov
pushl
mov
jbe
dec
push
dec
int
jge
mov
rcrl
lods
dec
mov
je
mov
xchg
jecxz
dec
xchg
jg
inc
sub
sbb
mov
loope
add
jns
lock
hlt
jae
das
pop
enter
popa
push
sbb
std
sbb
inc
pop
jnp
popa
sar
fwait
sti
or
jb
push
cmp
dec
mov
inc
xor
pop
sbb
push
dec
ljmp
inc
je
dec
shll
icebp
pop
in
jg
xlat
inc
mov
adc
jge
mov
arpl
adc
inc
call
xchg
jns
insb
xlat
rcll
cmp
lds
xchg
fs
adc
nop
jns
icebp
daa
add
jmp
inc
pop
stos
inc
inc
jmp
or
push
push
je
xor
cld
gs
push
int3
or
xor
shr
jns
jo
subl
add
fimuls
je
mov
mov
ret
out
jmp
cmp
add
or
ss
sub
cmp
rcll
insb
cmc
aad
pop
xorb
nop
jg
addr16
add
das
add
push
test
in
add
inc
sbb
xchg
jb
inc
and
lock
out
jae
ljmp
adc
push
jbe
pop
inc
or
rolb
mov
dec
xchg
pop
jnp
hlt
decl
mov
inc
daa
aam
or
lcall
sbb
enter
in
scas
xchg
xor
xor
mov
and
test
pop
mov
push
adc
aad
mov
or
push
jl
pushf
inc
call
str
push
jns
mov
inc
pop
ret
ret
add
sbb
lret
mov
out
push
pop
add
push
aam
pushf
loopne
mov
mov
dec
inc
xchg
subb
or
pop
add
or
js
inc
scas
loop
test
in
sub
sub
test
inc
sbb
mov
ret
imul
mov
shrb
mov
hlt
jp
inc
loop
ja
jb
test
jno
and
scas
repz
jg
inc
sbb
lahf
or
faddl
inc
pushl
dec
adc
rcrb
imul
incb
dec
mov
ret
push
push
inc
out
cs
and
in
add
adc
call
push
add
and
mov
jmp
js
mov
adc
cmpsb
rorb
rclb
jmp
adc
mov
inc
cli
mov
cltd
ja
in
push
push
ret
fisubl
or
dec
dec
cmp
in
mov
cmp
mov
mov
mov
mov
stos
jne
std
add
cmp
sub
les
in
inc
sar
mov
sbb
lea
js
inc
mov
iret
mov
ret
jbe
inc
mov
jo
push
mov
out
add
clc
and
jnp
adc
add
mov
ficoml
mov
xorl
adc
and
adc
int3
imull
pushf
inc
inc
jae
cs
sarb
inc
or
repnz
inc
lods
add
sub
negb
xor
pop
aas
jge
add
outsl
dec
mov
imul
test
push
mov
inc
scas
push
add
testl
lret
test
lods
out
add
pop
mov
out
sbb
add
mov
call
js
sbb
lods
push
int3
sti
fimull
push
mov
pop
lods
pop
ret
lds
dec
adc
jne
aad
ja
cmp
mov
mov
mov
inc
xchg
aas
xor
push
clc
add
dec
inc
loopne
mov
in
lods
inc
sarb
adcb
sub
pop
mov
push
inc
mov
pop
aam
cmp
les
push
push
dec
push
sahf
xchg
pusha
add
xchg
ja
jb
pop
subl
stos
adc
add
out
adc
sar
pop
or
jmp
jmp
aaa
mov
repnz
sbb
mov
sarl
call
int
add
sub
push
sub
add
jns
lea
js
push
mov
add
je
dec
jg
mov
add
add
push
imul
out
ja
jne
xor
das
mov
incb
add
outsb
cld
xor
or
int3
jb
je
divb
mov
xchg
fnstcw
std
lea
mov
add
add
jo
negb
add
call
daa
add
or
sbb
add
scas
inc
mov
daa
add
aam
loopne
fucomp
str
insl
ds
sub
addr16
sub
add
fdivr
mov
inc
xchg
js,pn
movsb
stos
inc
or
out
sbb
ja
cmp
push
das
add
cwtl
xchg
aas
je
int
inc
lea
adc
sbbl
xchg
cmc
out
aas
aas
incb
pop
hlt
aas
push
lret
ficompl
popf
test
pop
jmp
cmp
adc
cmp
mov
inc
mov
inc
sbb
in
test
out
cmp
inc
in
ja
jmp
aas
repz
inc
rorb
lods
add
std
aas
dec
mov
mov
dec
mov
inc
dec
sub
cmp
mov
in
icebp
cmp
push
mov
cmp
popa
pop
or
push
mov
cld
cmpsb
fwait
jle
in
ljmp
imul
std
push
lea
and
mull
aaa
push
ss
or
aam
test
sub
cmp
lds
call
sub
jl
in
les
call
addl
je
shl
pop
sub
arpl
push
pop
inc
mov
aad
lds
push
aaa
imul
notl
push
testb
jge
xor
leave
or
out
or
imull
jae
xor
jne
cs
cs
pop
sub
leave
out
add
add
cvtpi2ps
push
mov
cli
add
std
jne
push
push
call
insl
inc
cli
add
and
je
cld
push
ret
push
or
or
inc
movsl
sti
cs
xchg
xchg
add
out
dec
rcll
das
stos
xchg
daa
add
adc
cltd
mov
add
mov
sub
scas
mov
adc
sub
out
cmp
pop
ret
xchg
lock
sub
pop
inc
pop
ljmp
adc
push
cltd
rorb
lods
jbe
adc
xor
cmp
sbb
mov
pop
mov
jg
mov
push
sbb
rcr
push
enter
add
inc
faddl
fdivrs
jno
arpl
pop
xchg
add
clc
shlb
sbb
add
inc
xchg
pusha
out
repz
xor
add
push
xchg
jecxz
call
sti
pop
adc
or
notb
sbb
sbb
sub
jmp
sub
mov
add
cmp
clc
out
jmp
out
stc
xchg
mov
push
xchg
xorl
cs
xchg
add
cmp
mov
outsl
dec
push
adc
push
insb
mov
jmp
mov
jmp
je
cmp
xchg
pop
test
lcall
je
pop
push
jo
xor
fnstsw
cmp
bound
fidivrl
fldenv
mov
mov
xchg
mov
ss
movsl
sar
push
or
inc
cmp
flds
lods
add
jge
insl
fucomip
mov
std
fstpt
add
stc
jb
xchg
les
ret
clc
mov
add
push
call
es
xor
mov
jb
or
mov
lea
jle
xchg
mov
cli
mov
jmp
pop
std
add
loopne
add
xor
sarl
push
lods
outsb
sub
out
or
jmp
std
push
inc
inc
mov
xchg
xlat
shlb
mov
and
xor
inc
gs
dec
lods
add
lods
mov
cmp
adc
test
sub
add
push
fisubl
add
out
gs
gs
mov
data16
push
xchg
add
and
ja
sub
adc
shr
test
mov
jae
add
popf
repz
add
or
ret
fstps
ret
sub
xor
xor
or
call
add
filds
jmp
cmp
or
jmp
xchg
mov
lret
xor
cmp
sbb
scas
lods
xor
in
xchg
int
mov
xor
cmp
xor
insb
add
add
mov
jg
add
jnp
add
call
inc
jecxz
call
add
jl
outsl
dec
pop
jmp
dec
mov
shl
jne
adc
imul
push
add
movsl
hlt
adc
in
je
fbstp
add
add
repz
daa
mov
stos
sub
jmp
outsb
mov
jb
sub
test
xchg
aas
mov
add
jmp
fwait
lret
xor
jmp
je
sub
incb
and
mov
dec
out
add
add
in
scas
pushl
jae
movsl
rcll
lods
xchg
push
push
push
xchg
adc
adc
ljmp
mov
add
mov
adc
insl
jle
or
mov
push
push
push
adc
lods
cld
add
inc
std
adc
shlb
out
pop
cld
decl
jo
cmp
stc
xorl
incl
dec
xchg
sbb
add
push
jae
mov
mov
ds
sar
mov
cmpsb
or
jmp
cmp
xchg
sub
cmp
push
mov
jg
cmpb
scas
push
add
jnp
pushf
daa
sub
ret
jmp
push
sub
add
xor
shrl
pop
jmp
add
mov
xor
cmp
decl
fisttpll
andb
add
pinsrw
add
cmp
pop
adc
outsl
dec
xor
xor
mov
xor
xor
add
xchg
dec
aad
jmp
sub
call
xchg
shll
sub
xor
pop
adc
mov
inc
xchg
or
pushf
sub
call
je
lock
repz
imul
add
jae
leave
lods
sti
pop
sub
decb
cmp
jp
mov
mov
aam
je
cmp
mov
ljmp
push
jmp
daa
push
inc
xchg
add
pop
mov
scas
cmpsl
js
aad
int3
divl
sub
xor
daa
xchg
lods
fildl
filds
test
mov
in
out
incl
sub
cmp
dec
xadd
out
push
jp
cmp
jp
mov
cmp
push
out
push
repz
xorl
out
call
jp
ljmp
rcrb
notb
sahf
in
add
cmpl
cli
ficoml
leave
cs
mov
out
subl
push
mov
add
push
add
jns
je
bnd
movb
mov
icebp
sbb
add
pushf
scas
and
sbb
incl
sub
enter
or
sbb
call
pop
jmp
fmuls
js
shl
into
fbstp
decb
shrb
add
dec
xor
mov
jnp
sti
out
out
add
aam
pop
push
pusha
sbb
push
pop
rcrb
inc
into
rcll
imul
cmp
sbb
lods
sub
add
inc
xchg
scas
pop
add
add
out
xchg
add
pop
xor
dec
add
add
sub
pop
into
das
inc
dec
jns
test
jns
jnp
sub
pop
xchg
sub
fiadds
or
std
rolb
lcall
pop
test
call
ret
rcll
and
inc
jmp
add
lea
mov
adc
mov
push
incb
mov
lods
sarl
out
lock
or
push
sub
jg
sahf
mov
imul
add
scas
jns
ret
add
lds
fmuls
test
adc
xchg
add
ret
ret
clc
mov
sar
sub
lods
inc
xor
sub
jne
inc
movb
or
inc
add
les
xchg
push
sub
and
outsb
jno
add
cmp
je
cmpsb
push
or
out
push
mov
addb
dec
push
rcrb
mov
cmp
jne
xchg
pop
adc
idivb
negb
mov
rorb
jge
mov
xchg
cwtl
push
mov
adc
inc
mov
xor
mov
sub
add
cmpsl
sti
xchg
out
inc
and
sbb
pushf
sbb
test
sub
decl
dec
imul
add
fldt
out
jge
shll
int3
enter
jmp
add
mov
add
out
xor
mov
cmp
call
adc
test
add
popa
dec
or
or
sbb
fdivs
xchg
add
icebp
dec
shrl
sbb
lret
pop
mov
and
stos
adc
sti
adc
sub
add
mov
cmp
xchg
adc
mov
add
ss
xchg
mov
sbb
call
sbb
out
jae
mov
adc
add
lahf
aam
jmp
lods
jmp
add
inc
fisttpll
push
test
or
sub
fstl
shl
call
lea
xchg
leave
pop
fiaddl
xlat
mov
in
cmp
sub
imul
rclb
rcl
mov
xor
test
adc
test
subl
adc
test
jmp
lods
pop
mov
test
pushl
aad
mov
sub
push
mov
ljmp
int3
push
call
dec
jb
push
cmp
add
test
jo
lea
dec
call
or
mov
addl
add
cmp
push
mov
outsb
loopne
orl
push
sub
add
inc
xchg
sub
call
cmp
push
xchg
imul
adcl
add
cmp
fimuls
pop
fimuls
and
filds
sbb
push
rorb
cmc
or
fdiv
jecxz
xchg
sbb
fdivs
add
sahf
sbb
add
add
adc
sbb
cld
xchg
sub
inc
shr
jmp
jle
push
mov
mov
lock
push
add
mov
rorb
xchg
iret
outsl
mov
inc
daa
xchg
negl
dec
xchg
sub
add
xor
cwtl
xorb
imul
call
sub
jns
clc
mov
daa
aaa
cld
jmp
inc
fnstsw
add
add
mov
cmp
rolb
add
inc
sti
mov
mov
insb
jmp
sbb
movsl
cmpsb
dec
jno
out
jns
add
jnp
mov
jb
jl
sbb
imul
xchg
adc
xorl
insl
mov
sbb
jae
adc
adc
gs
lock
sbb
popf
mov
sar
dec
fs
and
jp
mov
inc
aas
repnz
sbb
dec
test
out
jb
xor
cmp
and
divl
mov
sbb
and
push
data16
adc
aam
jns
ret
xchg
and
dec
add
cmpsb
mov
incl
call
in
cmp
push
pop
add
dec
sub
rorb
aaa
inc
test
mov
dec
or
std
ja
jns
std
push
lods
cmpl
push
sahf
fisttpl
test
jae
add
mov
push
decl
jb
call
xchg
mov
cmpsb
add
jno
push
jb
inc
test
inc
cli
mov
pop
les
xlat
adc
popa
sahf
pop
add
add
xchg
data16
push
add
mov
xchg
andl
add
add
xchg
jle
xchg
sbb
push
mov
sti
nop
inc
sbb
jp
sbb
sub
iret
add
or
test
addr16
mov
addl
iret
jle
xor
fsubl
dec
or
mov
cltd
shl
lods
pusha
jp
shll
pop
jo
add
cmp
add
in
into
mov
sub
jecxz
mov
push
sti
sahf
es
adc
add
jp
and
decl
inc
inc
cmc
and
lods
dec
and
vpextrw
lds
subl
jmp
int
add
add
xchg
and
clc
push
xor
imul
cld
icebp
jle
fstl
jge
pop
mov
imul
adc
mov
mov
cs
and
and
movsb
and
lahf
adc
std
mov
push
push
and
xchg
mov
jo
or
insl
jnp
cmp
jno
sbb
jns
adc
adc
sti
scas
jo
push
push
and
int
and
bound
and
push
push
jp
push
test
fdivr
mov
test
jae
adc
dec
adc
mov
testb
xchg
lods
jnp
ljmp
test
mov
push
test
test
push
aam
inc
jb
rorb
xor
enter
dec
push
mov
cmp
lock
push
dec
pushl
dec
jmp
lea
push
std
ss
sbb
xchg
jmp
dec
out
jae
pop
data16
imul
sub
xor
imul
int
incl
popa
xchg
das
add
add
push
sub
xchg
aas
xchg
jno
je
sub
cli
sub
mov
fdivp
mov
sub
push
or
jmp
cmp
xchg
sub
push
mov
xor
insb
dec
xchg
add
sub
add
add
lds
gs
mov
stos
test
add
faddl
add
iret
mov
popa
ret
call
xorl
jmp
mov
test
xchg
cwtl
xchg
mov
pop
add
dec
jb
adc
push
pop
enter
and
or
and
inc
adc
rcr
mov
mov
xchg
xchg
in
add
ljmp
push
dec
cmp
inc
incb
adc
imul
shrb
hlt
xlat
sbb
jae
and
mov
dec
push
lods
dec
mov
cmpsb
cmp
add
mov
sbb
push
push
sbbl
je
adc
push
or
mov
ror
fs
fimuls
or
xchg
add
scas
data16
inc
repnz
push
pop
add
lea
int
hlt
add
cltd
adc
add
adc
push
mov
or
inc
sti
call
inc
hlt
test
lea
add
add
data16
adc
add
adc
push
data16
adc
jno
or
jb
hlt
inc
xchg
cmp
xchg
mov
gs
add
in
sbb
push
add
xor
add
inc
mulb
es
adc
sub
in
pop
out
lods
push
decb
cmp
mov
sti
pop
and
inc
test
or
stos
js
test
cmp
mov
or
mov
mov
in
mov
mov
arpl
stos
mov
pop
add
add
mov
xchg
rolb
add
push
mov
cmpsb
add
adc
nop
test
repz
popf
mov
sub
or
scas
popa
ss
mov
je
add
add
inc
rorl
pop
xchg
in
movl
mov
mov
xlat
call
mov
or
stos
jecxz
jae
jb
xchg
mov
stos
lcall
es
add
sbb
out
mov
dec
pop
add
dec
cltd
mov
push
in
inc
shr
and
sbbl
mov
mov
inc
test
fcomps
push
inc
sub
push
insl
movb
jmp
adc
cmp
and
xchg
add
cmp
out
lret
iret
sarl
je
or
mov
out
xchg
sti
std
pop
add
inc
loopne
shl
addb
xor
jae
mov
jle
insl
add
xlat
xchg
pop
divb
testb
outsb
mov
lods
fdivrp
std
jl
add
lods
jno
cltd
mov
into
jne
das
mov
mov
xchg
cmp
je
xchg
mov
hlt
out
dec
cld
std
test
jge
das
lock
decb
jne
mov
dec
push
std
adc
xchg
stos
sbb
add
sbb
vhaddps
xchg
lret
or
xor
shrl
data16
cmp
lods
mov
std
sbb
sub
sub
sub
push
mov
mov
jno
stc
xchg
sub
fstpt
jmp
jns
lret
dec
cmp
jge
add
call
mov
ret
xor
mov
push
sbb
mov
nop
jmp
dec
or
pop
sbb
pslld
and
pop
fwait
and
jb
jnp
push
int
mulb
clc
sbb
pop
sub
fstl
rcrb
xor
mov
add
das
cmpl
inc
in
sbb
adc
sub
sti
or
xchg
jge
or
sub
add
push
mov
nop
int
xchg
mov
mov
adc
xchg
jl
sbb
orl
jns
adc
push
les
add
sbb
push
loope
and
cwtl
dec
jge
test
add
xchg
mov
inc
testb
nop
add
lds
dec
push
sbb
mov
add
jmp
push
test
jg
push
test
xor
call
hlt
test
push
inc
push
nop
add
add
gs
push
rclb
bound
add
jne
in
jg
add
sbbl
imul
add
lea
dec
dec
ljmp
mov
loopne
ss
std
mov
es
push
jo
dec
jmp
clc
push
call
data16
mov
mov
xchg
hlt
mov
add
flds
inc
lds
mov
xorl
dec
std
mov
jmp
pop
pop
jae
test
sub
push
ss
je
lahf
adc
arpl
nop
testl
rcr
sbb
test
sub
add
repnz
cld
aad
decl
cwtl
repz
fisttpll
push
pop
arpl
push
pop
pop
mov
push
or
push
adc
add
xlat
call
mov
test
ds
xchg
pop
lcall
stos
sti
test
sbb
arpl
fwait
mov
mov
jno
pop
adc
out
inc
pop
aaa
pop
push
inc
lock
enter
xor
inc
cmp
adc
nop
fwait
sub
nop
add
jb
adc
or
cli
ds
arpl
fiaddl
dec
stos
or
add
add
jmp
jae
add
xchg
iret
mov
out
push
push
mov
dec
jae
mov
movsb
outsl
aas
je
xchg
jge
mov
cmpsb
pusha
insb
and
push
add
ljmp
je
mov
incb
add
out
xchg
rcl
jns
jmp
xchg
jl
jmp
addl
add
test
mov
lahf
imul
xchg
addl
add
cmpb
pop
jmp
push
scas
test
xor
repnz
insl
push
inc
lods
xchg
mov
hlt
add
fs
std
jp
clc
inc
push
mov
jge
std
jmp
add
add
out
xorl
lea
arpl
inc
inc
adc
insl
add
pop
dec
mov
push
out
std
decl
mov
int3
mov
movsb
push
rorb
sbb
insb
cmp
std
push
push
in
add
daa
add
add
add
xchg
daa
cmp
add
xchg
jg
lcall
inc
aaa
pop
pop
add
lods
xchg
adc
fwait
jno
pop
pop
fdivr
jmp
mov
add
xchg
dec
lods
push
decb
adc
sub
bound
inc
adc
test
sbb
add
inc
xchg
das
xchg
xchg
sbb
cmp
push
pop
xchg
xchg
sbb
mov
jmp
sti
ret
sti
js
xor
inc
in
cli
add
add
jae
xlat
test
icebp
leave
add
jle
mov
cltd
rorl
sti
dec
movsl
shr
fcos
insb
dec
xchg
add
mov
inc
jge
and
prefetcht0
xchg
add
jle
and
and
sbb
sarl
or
test
mov
jno
or
test
mov
sub
cwtl
dec
mov
mov
test
test
test
xchg
add
fs
call
fistpll
xchg
and
dec
jbe
xlat
test
xchg
add
fs
inc
push
mov
or
push
fs
call
bound
push
inc
inc
mov
xchg
scas
mov
mov
call
rclb
push
xchg
add
jo
and
call
dec
xchg
add
and
add
add
or
inc
ljmp
adc
add
jne
dec
mov
push
in
shr
loope
cmp
jb
add
dec
imul
or
fsubr
aaa
ss
mov
mov
call
clc
les
sub
add
out
aad
std
mov
inc
or
movsl
outsl
fdivr
inc
mov
push
xchg
rcrl
test
adc
xchg
push
lcall
aam
out
popa
paddd
sbb
cmc
add
pop
mov
push
imul
nop
test
jge
mov
pcmpeqd
jmp
pop
xchg
fcoms
or
incl
andps
mov
xor
insb
lahf
cli
dec
jnp
cli
mov
aad
pop
repnz
pcmpgtw
loope
jnp
in
mov
pop
pop
and
mov
jb
add
js
mov
mov
jp
or
ret
sbb
adc
or
cltd
fisttpl
fldt
pop
cmpsl
scas
inc
dec
ja
test
inc
out
xchg
scas
ss
loopne
ret
shll
adc
ret
jns
and
or
xchg
add
add
test
cltd
lret
test
xlat
xchg
jmp
daa
jmp
cld
pop
jnp
jno
pop
movsl
adc
add
cmp
mov
mov
mov
sti
arpl
xchg
add
jmp
mov
out
ljmp
xchg
add
adc
or
cmpsb
push
call
mov
sti
jmp
mov
dec
mov
out
test
xchg
add
pop
cld
sbb
icebp
aas
jmp
add
test
xchg
add
das
pop
or
out
loope
cltd
adc
cmpsl
das
mov
dec
xchg
dec
cmpsl
mov
push
jg
fisttps
mov
or
pushl
push
mov
dec
push
lea
dec
push
mov
sti
dec
or
les
push
jg
or
cld
std
add
push
decl
cld
jb
add
cld
std
data16
je,pt
cmpb
inc
lds
roll
xor
xor
jb
or
dec
xorl
xchg
fdivrs
sbb
rclb
mov
or
subl
jns
and
notl
sub
pop
and
test
cmp
mov
pop
inc
ja
fs
mov
paddq
mov
ja
inc
bound
mov
inc
mov
ja
fwait
mov
mov
gs
ja
dec
mov
push
imul
or
bound
ret
inc
jae
sbb
add
sub
or
adc
popa
or
pop
push
or
and
sbb
adc
or
or
lods
push
mov
or
xor
dec
ljmp
or
nop
test
jge
xchg
xorl
inc
in
test
jmp
test
pop
call
add
clc
adc
jecxz
sar
loop
into
fisttpl
or
inc
mov
mov
mov
add
imul
pop
dec
or
gs
clc
jbe
xchg
push
mov
aaa
ljmp
or
sub
imulb
enter
pop
outsb
xor
cli
add
adc
ret
gs
test
add
add
loope
push
stos
add
xchg
inc
out
data16
gs
xchg
cmp
or
cld
imul
mov
out
data16
hlt
aaa
ja
addr16
or
lea
or
subl
divl
loope,pn
test
cmpsl
add
imul
out
push
mov
mov
or
std
dec
mov
push
add
jo
add
in
lcall
je
and
sbbl
incl
mov
adc
test
mov
xor
lods
or
jl
add
xchg
cwtl
int3
inc
aad
mov
add
pushf
add
fs
push
insb
inc
dec
push
mov
je
mov
mov
push
add
adc
dec
nop
jp
or
std
dec
addr16
add
add
sbb
mov
mov
xchg
push
pop
xchg
pop
add
scas
adc
xchg
pop
jnp
pop
push
mov
xor
sbbl
jbe
cli
mov
or
add
or
ljmp
mov
subl
xchg
add
mov
add
ja
cld
mov
cltd
mov
dec
push
inc
add
xchg
mov
test
or
pop
and
insb
andl
inc
call
addl
push
call
cmpsb
inc
cmp
sbb
sbb
xchg
add
sti
or
loope
add
popw
adc
rcr
jle
loope
ja
jo
or
xchg
mov
push
sbb
cs
add
push
js
jmp
xchg
xchg
add
adc
sbb
cwtl
add
aas
push
mov
sub
mov
pop
jl
sti
lcall
call
xchg
jg
sbb
mov
mov
pop
mov
inc
vpsadbw
or
jae
xchg
adcl
add
movl
inc
movsl
dec
push
incl
push
std
adc
mov
jb
inc
xchg
ss
or
sbb
mov
sti
mov
mov
sbb
inc
std
addb
sti
add
ret
inc
in
cmp
outsl
fisttpll
xor
jne
cld
jae
xchg
push
dec
cmpsb
xlat
add
dec
cmpl
orb
fstps
add
cmp
mov
ja
push
scas
add
lahf
pushf
inc
jae
add
xor
ret
fs
pop
mov
scas
imul
add
inc
test
imul
add
add
add
inc
ljmp
cmp
push
mov
pop
fcmovnu
pop
jmp
mov
nop
add
mov
mov
add
adc
out
push
sbb
inc
xchg
sbb
mov
or
rcll
add
add
push
jb
imul
mov
push
add
push
fwait
addl
add
lods
fs
sub
add
cld
inc
cmpsb
inc
out
aam
jmp
aam
in
mov
add
mov
adc
pop
xchg
pop
stos
pushf
add
sbb
xchg
jne
fsts
xchg
xor
fcoml
inc
jmp
lahf
fadd
in
xchg
push
mov
add
mov
xchg
je
mov
inc
add
add
std
jmp
lods
pop
or
lcall
inc
jmp
inc
ret
inc
jmp
test
cwtl
ret
sub
and
mov
cmc
mov
pushf
lds
enter
pop
sti
adc
jae
or
test
push
lcall
aas
mov
jne
add
pop
mov
or
sub
xor
xchg
xchg
push
mov
add
lcall
cli
fcomps
or
push
add
fidivrs
sbb
push
scas
lds
xor
inc
add
jbe
or
out
sbb
popf
ret
push
out
add
call
movsb
flds
inc
dec
adc
or
insb
rolb
test
std
test
add
je
iret
or
std
mov
inc
add
cmp
shr
shrb
mov
imul
jae
adc
divb
std
inc
neg
sbb
fldt
out
add
ret
test
sub
mov
cmpb
jecxz
jmp
pop
je
call
std
xchg
add
rclb
rclb
sbb
add
or
je
pop
add
inc
xor
jbe
add
and
adc
or
xchg
add
or
fsts
jne
pop
pop
inc
or
sti
xor
mov
in
xchg
add
ljmp
pop
rcll
or
pop
nop
std
ss
popf
and
sub
cmp
mov
xor
imul
flds
mov
or
call
test
push
jb
dec
push
jbe
or
aam
push
inc
jmp
fildl
loopne
push
loopne
cltd
std
add
incl
add
pop
std
jae
add
cld
adc
std
push
sbb
je
lods
add
cmp
add
aad
inc
sub
or
sub
test
mov
out
cld
ljmp
mov
out
cld
xor
mov
ret
push
xchg
outsb
jmp
cmpl
push
mov
add
push
sbb
push
add
add
sahf
jge
or
xor
cmpl
je
push
mov
dec
sti
inc
or
sub
add
or
xor
mov
dec
sti
xchg
lds
pop
lea
add
jne
mov
call
inc
lds
jle
cld
jae
insb
inc
lock
adc
pop
dec
call
out
jae
stos
jne
rcrl
std
xchg
add
fsubr
shl
and
ret
imul
test
pop
js
cwtl
push
adc
cmc
add
cmc
dec
and
lock
es
loop
addr16
add
add
insb
inc
and
adc
sbb
arpl
mov
inc
or
jbe
call
arpl
push
pop
mov
pop
test
or
xchg
add
inc
cmp
pop
enter
lds
push
mov
test
jae
push
cmovnp
push
ljmp
aaa
cmpsb
inc
out
push
insl
fisttpl
out
outsl
inc
cwtl
jmp
aad
cs
je
hlt
call
fistl
pop
and
ljmp
jg
in
inc
cld
add
stc
std
out
inc
clc
ljmp
clc
jno
pop
lock
dec
sbb
jmp
add
xchg
andl
jae
aaa
cmp
scas
sarb
insb
and
inc
call
ret
push
mov
inc
or
jae
xor
inc
jae
fisubs
mov
sti
movhlps
or
mov
sti
por
data16
xlat
add
out
or
add
mov
cmp
add
cvtpi2ps
test
test
jle
or
sarl
mov
inc
or
test
inc
lea
sti
pushl
aas
or
imul
js
xchg
xor
xchg
xchg
outsb
dec
clc
cmp
call
adc
push
push
decl
xlat
repnz
dec
inc
and
mov
testl
adc
inc
inc
outsl
pop
jae
das
int
add
fmuls
jmp
movsl
sub
fcompl
mov
add
jo
clc
lahf
movsl
pop
xchg
idiv
jb
leave
ret
dec
mov
xor
clc
inc
cmpsl
mov
jo
lock
jl
push
add
jmp
add
aam
inc
js
mov
sbb
cmp
push
cmc
out
jb
cmp
jmp
or
push
fistps
fidivrs
jmp
add
push
inc
xlat
loopne
add
sti
jbe
mov
jae
mov
bound
aaa
repz
jb,pt
popf
push
xlat
jbe
mov
mov
outsb
add
je
dec
insl
lock
adc
mov
lock
jb
ljmp
add
cmp
add
inc
inc
jae
arpl
mov
xchg
ja
cmpsl
cwtl
outsl
adc
cld
mov
sbb
rcr
clc
sub
xchg
dec
clc
jb
fsubrl
stc
xchg
movsl
xlat
stos
push
jo
fidivrs
cmp
mov
mov
hlt
jnp
leave
cli
mov
jnp
leave
sbb
jmp
xchg
xchg
push
push
adc
cli
dec
adc
int
lea
add
mov
addb
sbb
mov
dec
sti
mov
inc
mov
shl
or
mov
mov
ljmp
lcall
aaa
cmp
ret
add
jns
mov
loop
pop
add
mov
loopne
dec
clc
add
aam
push
fmull
xchg
jmp
jle
hlt
lret
mov
mov
out
lret
mov
cmp
dec
and
mov
cld
dec
loopne
pop
dec
hlt
outsl
adc
jl
jns
clc
adc
loope
push
mov
idiv
xor
dec
in
aam
aas
adc
fwait
push
jae
arpl
mov
insl
dec
fcomps
mov
jmp
pop
push
add
push
push
pop
cld
sub
cmpxchg
lock
popf
or
adc
leave
mov
inc
ljmp
rorb
xchg
int3
add
mov
xchg
add
shlb
mov
xchg
add
xchg
and
addb
cmp
push
push
jo
push
mov
cmp
iret
std
pop
aas
push
test
mov
sbb
imul
cmpsl
lock
icebp
incb
push
sti
mov
bound
add
dec
loopne
jge
in
adcl
push
mov
orl
fdivrl
lds
add
sub
lock
and
lock
mov
jb
or
jnp
mov
in
jae
mov
mov
add
popa
mov
jae
ds
loopne
lods
pop
out
dec
adc
cmpl
test
jmp
jmp
pop
loopne
icebp
add
adc
adc
pop
in
mov
je
adc
je
jecxz
or
inc
clc
or
xchg
inc
xorb
add
mov
jno
add
sti
jae
std
jno
add
dec
adc
push
sti
pop
cld
or
mov
push
sti
sub
or
cmp
xlat
mov
bnd
xchg
imul
decl
repz
add
bnd
loop
dec
call
or
call
movl
push
mov
pushf
mov
cmc
push
std
sub
in
mov
sbb
adc
and
adc
add
xchg
add
movsl
fsts
pop
popf
flds
sarl
mov
sub
jle
loop
ret
adc
sbb
ret
shlb
dec
xor
in
sbb
adc
mov
adc
add
repz
out
pop
clc
pop
push
hlt
ja
hlt
or
in
add
xchg
add
add
mov
aas
int3
std
pop
add
std
push
xchg
in
out
arpl
fmuls
push
outsb
leave
xlat
in
add
sti
outsb
ret
jns
repz
aas
jge
enter
data16
jl
in
jb
insl
cmp
outsb
cltd
jns
jmp
daa
jmp
cmpsl
push
scas
sub
adc
pop
sub
stc
mov
xchg
jnp
add
imul
fstpl
imul
inc
mov
add
jmp
decl
call
and
inc
and
bound
sub
sbb
sub
adcl
push
hlt
ret
mov
dec
sbb
out
xor
inc
pusha
ljmp
dec
jns
push
into
aaa
in
lea
adc
or
insb
add
jb
mov
adc
add
mov
inc
fdivrl
sbb
imul
xor
repnz
add
cmpsl
mov
imul
mov
dec
pushl
inc
xor
inc
add
add
mov
in
add
shl
dec
fmuls
rol
sbb
clc
pop
scas
jno
call
adc
xchg
icebp
jp
mov
aam
sbb
pushf
leave
jl
pop
aas
adc
mov
jp
in
sbb
out
inc
fcomps
adc
gs
ret
in
decl
add
xchg
xor
inc
outsl
and
or
add
xor
pop
loop
mov
sarb
mov
fstl
movsl
stc
mov
fistl
sbb
sarl
jge
out
sub
sub
dec
and
pusha
inc
in
mov
dec
cli
imul
ljmp
ljmp
js
hlt
popf
rcr
jle
or
out
jge
jo
rcl
ljmp
ja
in
adc
sub
imul
push
call
test
xchg
ja
int3
or
cmp
sub
jns
clc
mov
ja
fadds
push
jmp
jb
nop
jne
lods
inc
jg
or
nop
jg
adc
jne
fistps
add
mov
push
aam
lods
rol
inc
sbb
jge
pop
inc
jg
rcll
xchg
cli
mov
cmp
inc
xchg
inc
std
cld
and
sbb
in
adc
ja
scas
push
adc
pusha
ljmp
jo
in
sarb
jmp
insb
aam
fiadds
sub
add
fcmovbe
add
ds
jbe
xor
push
loopne
jmp
mov
jecxz
mov
mov
jge
add
data16
shlb
add
or
call
in
roll
fs
sarb
add
sub
add
pop
rolb
daa
add
pop
sti
add
mov
je
add
push
fcoml
test
out
fmull
xchg
loope
inc
mov
fdivrs
pop
ret
loope
cvtps2pd
jae
push
add
sbb
jae
mov
jae
adc
sti
in
push
lock
outsl
cmp
inc
int3
or
popa
sar
mov
leave
ljmp
fldl
cmp
jns
add
data16
mov
mov
std
or
mov
adc
hlt
cmp
cmp
ljmp
lods
xlat
adc
cmp
pop
and
jle
inc
xor
test
mov
push
gs
sahf
ss
incb
shlb
ja
out
add
dec
ret
jnp
aam
dec
xor
sahf
shl
out
pop
clc
outsl
dec
mov
xor
jp
in
mov
xchg
add
cwtl
jns
in
fucomip
jp
enter
sub
mov
xchg
add
pusha
mov
mov
add
shl
cmp
enter
sub
mov
push
jnp
cwtl
cmp
rorb
test
out
daa
jnp
jnp
dec
ret
push
pusha
jnp
xchg
jnp
jp
xchg
jnp
xchg
data16
xor
jl
pop
xlat
add
pop
fadds
bound
adc
jo
adc
cli
jbe
test
cmp
ret
sub
sbb
enter
add
cld
idivb
in
sub
das
addr16
cmp
or
in
push
mov
mov
jns
sub
std
mov
gs
adc
mov
lods
fldl
cmp
call
xor
jne
jo
mov
mov
dec
cli
inc
dec
xor
inc
sub
add
sub
mov
add
add
xchg
fistpll
dec
insb
jnp
shlb
push
jae
mov
dec
popa
cmp
or
push
jnp
pusha
push
sarl
dec
call
inc
pusha
dec
fcomps
mov
xchg
adc
sbb
xchg
in
test
lea
jae
outsb
inc
or
cwtl
sub
pop
fimuls
int3
xlat
cmp
add
add
cmp
sarb
leave
sub
test
jne
mov
into
call
add
cmp
testb
jge
jno
sub
sbb
jne
inc
mov
add
les
jle
push
or
add
dec
adc
jp
adc
or
std
adc
add
mov
lods
mov
fs
jl
fdivs
add
lahf
fsts
cmp
jnp
aam
aam
jae
jb
add
add
jns
mov
decl
xor
ss
pusha
lret
call
xchg
ja
mov
fidivrs
or
fdivrl
repz
imul
cmp
mov
in
std
lods
cmp
hlt
push
enter
les
push
loopne
push
faddl
jb
lock
xchg
jns
xor
mov
lcall
sub
loope
test
push
faddl
jne
add
xchg
cmpsb
and
jne
fildl
movq
add
pop
cmp
sldt
fdivrl
add
push
in
xorb
aam
gs
inc
shrb
pop
loopne
and
push
fsubr
cmp
fsubl
out
je
sub
sub
jg
out
pop
add
data16
ljmp
rol
aam
inc
stc
xchg
popa
cmp
xchg
popa
dec
push
xchg
scas
inc
xchg
push
add
adc
cmc
call
jmp
pop
rclb
pop
std
xchg
fisttpll
cmp
sbb
mov
push
sub
or
ret
call
push
xor
xchg
mov
push
fldcw
add
mov
jmp
mov
nop
out
jae
fstpl
jmp
aad
add
push
shr
jno
jecxz
roll
xlat
mov
push
adc
inc
fcomp
lcall
jbe
mov
push
outsl
leave
xchg
add
pushf
mov
sbb
xchg
jmp
rorb
les
jecxz
shlb
das
jg
adc
pushw
inc
andb
insb
sbb
jl
daa
adc
dec
cmp
jmp
mov
repz
inc
push
adc
and
leave
pop
sub
xchg
xor
sbb
inc
adc
push
jno
jmp
insl
hlt
add
fsts
jnp
jne
and
or
push
int
loop
mov
or
and
call
sarb
inc
sbb
hlt
mov
xlat
incl
nop
mov
aaa
add
xlat
call
inc
sbb
fisubrl
sbb
notb
cmp
lret
cmp
sti
mov
and
aas
test
lret
icebp
out
jg
mov
add
mov
or
test
sub
mov
inc
leave
add
inc
inc
or
jo
or
popa
jnp
popf
adc
inc
add
sar
push
ss
xchg
icebp
mov
add
in
inc
mov
clc
push
xchg
or
jns
pop
xchg
std
out
xadd
add
cmp
add
test
imul
mov
les
in
test
int3
mov
ret
or
dec
push
ss
mov
jno
pusha
push
lock
push
inc
lock
out
ss
add
add
sbb
add
xchg
mov
xchg
inc
ljmp
inc
sub
xchg
jge
inc
jo
inc
les
fsub
sub
xchg
sarb
push
add
mov
aad
outsl
xchg
lds
xchg
ret
cmpb
out
adc
call
cmp
add
push
inc
pushf
or
into
cltd
xchg
je
fcomp
mov
jo
int3
or
fcoml
ret
les
mov
arpl
pusha
cmp
mov
xchg
add
les
jb
lods
mov
out
or
call
jo
push
push
sub
test
ljmp
or
insb
testl
inc
sub
add
inc
loop
call
xchg
dec
aas
jb
pop
shl
push
call
sbb
dec
adc
dec
sbb
hlt
sub
fadds
xor
stc
pop
xor
mov
or
pop
push
into
nop
add
roll
adc
call
push
or
clc
mov
lea
ret
mov
sub
add
test
xchg
rorb
rolb
jb
decl
jbe
xchg
mov
add
rolb
add
andl
je
std
inc
cld
push
int
inc
add
loopne
inc
jl
test
mov
push
inc
cld
lea
shr
pushl
mov
js
incl
xchg
pop
mov
xchg
ret
mov
mov
rol
pushf
xchg
push
add
mov
push
xor
or
pop
popf
push
mov
or
ret
sub
dec
lods
fdivr
mov
ss
sub
dec
je
and
push
cld
xchg
jb
std
or
lea
outsb
dec
clc
pop
sbb
push
pop
mov
fldl2t
lods
dec
dec
fcomps
in
scas
std
roll
xlat
mov
xor
pop
jmp
fisubl
xlat
mov
or
imul
jo
add
push
mov
push
add
mov
jb
loopne
lods
fistps
shrb
loopnew
xor
insb
mov
cmp
lock
push
pop
pusha
inc
cwtl
push
mov
add
fildl
or
iret
push
cmc
ret
jg
dec
add
outsb
push
in
outsb
add
mov
fmull
add
aad
add
inc
aam
sbb
out
xchg
inc
xchg
xadd
mov
add
and
std
into
add
xchg
test
push
fmuls
pusha
cltd
xchg
mov
stos
nop
add
lods
jg
in
cs
inc
push
loopne
sub
rcll
in
adc
xor
call
xchg
jge
add
inc
or
xchg
aas
add
jo
add
inc
or
mov
std
cmp
adc
mov
in
add
push
mov
in
lea
push
push
xchg
into
mov
in
jecxz
xor
mov
add
inc
or
inc
inc
push
movlps
data16
call
or
hlt
inc
or
jle
push
orl
inc
or
pop
inc
push
sbb
mov
sbb
fcmovb
add
jecxz
or
push
sbb
test
or
test
jl
jmp
add
xchg
and
hlt
fwait
jmp
iret
test
mov
out
les
add
fucomi
rolb
fadds
xchg
sbb
hlt
ret
jmp
sub
and
push
pop
sbb
aad
or
push
and
push
push
pop
sbb
call
jns
and
sub
xchg
insb
mov
xor
cmp
xlat
inc
xchg
push
jmp
stc
cmp
mov
push
dec
in
xlat
jg
xlat
adc
iret
adc
std
xor
push
icebp
in
push
hlt
stos
add
cwtl
jge
push
nop
mov
pushl
aas
shl
push
mov
push
hlt
mov
lret
add
gs
icebp
xor
adc
add
push
add
mov
adc
f2xm1
cld
hlt
add
aas
jmp
rolb
sbb
bound
push
and
subl
in
xchg
ljmp
test
xchg
add
jmp
out
mov
jmp
add
mov
icebp
mov
add
imul
into
push
or
add
push
or
stc
mov
je
stos
stos
jno
xor
call
stc
mov
out
pop
mov
add
call
incb
xchg
addr16
xchg
inc
inc
add
in
pop
cld
cld
add
push
sti
pop
in
cld
addr16
sbb
std
imul
in
pop
in
cld
add
push
jecxz
add
or
mov
pop
cmp
call
xchg
rorl
dec
ds
and
xchg
ret
xchg
flds
sarb
jmp
mov
xlat
mov
or
loopne
incl
mov
cmp
std
in
flds
add
test
pop
add
push
xchg
cmpsb
xor
add
das
add
popf
in
int3
bound
fists
mov
add
aam
xchg
add
mov
fistpl
adcb
fisttpll
xor
pushf
mov
xchg
jnp
imul
add
inc
js
bound
cmpl
test
or
out
add
xchg
pop
daa
pop
popf
add
dec
sub
aas
nop
rolb
xchg
cld
cwtl
add
orl
push
stc
xor
xchg
fcoms
addl
jge
jecxz
xor
in
mov
xchg
add
push
mov
push
cld
into
js
insb
inc
cld
andl
std
aam
iret
repnz
jmp
ljmp
test
stc
gs
xchg
les
sub
mov
cmp
das
or
mov
ret
and
xchg
lret
add
out
or
adc
and
repnz
or
fadds
mov
and
lock
sti
call
lds
add
int
shll
push
dec
inc
pushf
lods
scas
jno
mov
rorb
in
add
je
or
jne
scas
jno
adc
test
cmpxchg
add
sub
inc
add
or
enter
inc
fisttpl
scas
push
sbb
push
test
scas
rcll
into
cmpsb
mov
fistl
sbb
add
xchg
add
xlat
pop
sub
xlat
add
push
mov
pop
xchg
flds
xchg
flds
std
mov
idivl
xchg
lods
cmp
orl
clc
inc
into
pop
std
inc
int
cld
mov
dec
inc
or
rcl
push
add
icebp
lcall
inc
push
outsl
pop
outsl
adc
mov
jl
cld
add
gs
xchg
add
or
out
jl
fcoms
mov
sti
push
xchg
add
mov
sti
push
xchg
add
orb
inc
mov
lret
sbb
adc
jge
loopne
gs
add
fistps
xor
iret
xlat
lock
dec
movsb
jg
fcompl
jb
push
mov
out
insl
lret
dec
iret
adc
into
cmpsl
hlt
fadds
flds
aam
int3
std
bound
addr16
cwtl
ja
push
mov
add
xchg
add
add
add
xor
subl
jle
jmp
add
sbb
or
jmp
fwait
add
add
push
sbb
in
decl
sbb
std
insl
push
cld
xor
add
rcl
push
sbb
mov
xor
adc
mov
add
jbe
les
mov
xchg
lods
cmpsl
adc
scas
inc
int
lahf
int
loope
mov
xchg
mov
or
inc
or
into
jns
bound
test
sbbl
lods
xor
add
les
fcoms
insl
add
add
adc
mov
sti
push
popa
adc
adc
sti
jmp
cmpsb
cmp
push
xchg
mov
xor
add
add
adc
sti
or
add
jb
inc
out
mov
push
adc
adc
add
test
pop
les
movsb
stos
or
pop
and
jae
cmp
outsl
inc
or
push
add
add
adc
ja
adc
add
loopne
test
enter
mov
or
cltd
cmp
mov
pop
add
aas
test
jb
roll
jecxz
cli
jp
rorl
mov
loop
orb
mov
fwait
repnz
mov
jp
pop
orl
adc
adc
or
in
repz
mov
shll
movsb
or
mov
icebp
stc
ret
sbb
push
add
inc
popf
rcrb
std
in
dec
push
add
into
sub
movsb
dec
lock
or
add
jle
add
push
insb
aad
push
inc
pop
dec
std
dec
jl
or
bound
mov
push
std
mov
iret
les
xchg
mov
inc
xchg
cltd
fbstp
xchg
jl
fiadds
sub
jnp
xchg
cmc
xchg
test
or
jb
js
test
icebp
jle
xchg
add
jmp
pop
cmpsb
adc
xchg
ret
add
push
mov
filds
inc
mov
xchg
stos
adc
fs
or
xor
add
les
ss
lret
incl
add
inc
leave
or
adc
mov
shl
or
pusha
shrl
out
mov
dec
clc
inc
mov
jnp
pop
jecxz
inc
loopne
arpl
test
add
in
data16
jne
mov
clc
out
clc
imul
pop
mov
jge
xchg
xlat
add
loopne
jnp
mov
mov
rcll
xor
cld
cwtl
dec
std
or
cld
add
pop
inc
and
push
push
dec
or
int
jmp
push
les
xchg
bound
cmp
push
sbb
xor
and
add
pop
testl
pop
aaa
cmp
pop
cltd
push
std
xchg
flds
mov
pushf
faddp
sbb
sbb
cmpsl
clc
pop
jae
add
xchg
repz
lret
or
jmp
mov
xor
clc
pop
dec
call
push
jge
mov
lret
sti
repz
mov
xchg
jl
clc
pop
call
repz
daa
lea
stos
cmp
bound
cltd
mov
dec
fsubr
mov
jmp
xlat
jl
pop
loope
mov
ror
add
mov
test
jp
cmp
in
or
les
xchg
mov
inc
stc
jmp
or
out
jmp
jmp
lahf
mov
lock
clc
int
loopne
out
loope
into
or
dec
lock
cltd
push
enter
cmpl
faddp
std
addl
pop
clc
cld
mov
cwtl
inc
jmp
push
add
out
adc
cli
push
fisubl
add
mov
std
call
test
sbb
in
mov
incl
cmp
gs
sub
std
imul
std
add
daa
cmpb
sbb
mov
sub
jge
imul
mov
sub
sar
or
inc
mov
mov
mov
mov
inc
mov
dec
aas
xor
fnstcw
ret
mov
dec
call
insl
lock
std
pop
push
inc
adc
jmp
cld
rol
adc
rclb
add
iret
call
sbb
std
inc
js
in
arpl
std
sti
sub
ret
jae
aas
dec
cmc
jecxz
and
adc
adc
dec
dec
push
fnstcw
inc
mov
shlb
dec
add
aad
jmp
xchg
add
addl
rorb
stc
adc
imul
mov
fildll
ljmp
mov
add
push
adc
xor
out
sbb
ret
cld
ret
out
add
roll
jle
roll
add
add
xor
call
stos
add
mov
repz
jle
pcmpeqb
or
cs
lods
lds
push
add
loope
inc
hlt
jb
xchg
sbb
xor
add
pop
movb
test
mov
mov
inc
je
mov
push
aas
jb
std
hlt
jae
inc
jmp
jns
subl
xlat
adc
mov
mov
std
mov
sub
lahf
mov
std
aam
mov
inc
jmp
mov
lods
aad
andb
mov
mov
pop
mov
lret
mov
mov
xor
inc
add
insb
mov
leave
xchg
xor
mov
cmp
lods
scas
add
roll
sbb
pop
xchg
jl
push
mov
push
das
fucomi
int3
aaa
repz
xchg
xchg
or
mov
hlt
je
mov
jne
cmp
into
das
jo
mov
pop
push
xlat
inc
push
push
push
in
cli
inc
loope
inc
xchg
cmpsl
mov
jg
xor
cmp
lahf
xchg
mov
pop
clc
cld
cmp
ds
idivb
enter
shr
mov
xchg
mov
dec
add
in
sbbl
sbb
mov
mov
or
xchg
xchg
adc
push
xchg
or
sbb
mov
pop
fucomp
or
xor
and
je
out
add
xor
push
addr16
mov
out
xchg
fs
inc
xchg
jno
inc
xchg
popa
inc
push
clc
inc
out
in
stos
add
xchg
inc
xchg
pop
cmpsl
addr16
mov
fs
popa
faddl
pop
addr16
mov
inc
out
inc
sub
cmp
out
aad
dec
xchg
xchg
test
add
xchg
faddl
pop
push
add
les
add
gs
inc
xchg
pop
cmpsl
push
add
jmp
xchg
fwait
pushf
cld
push
add
dec
add
adc
cmp
mov
xlat
push
add
dec
ja
inc
jmp
cwtl
fwait
adc
xlat
add
mov
jo
sub
add
dec
xor
inc
jmp
cwtl
fwait
xor
xlat
add
dec
lods
adc
jmp
xchg
fwait
cmp
push
add
mov
int3
adc
std
sbb
pushf
sub
add
pop
pusha
adc
lods
sbb
pushf
fsubrs
and
add
inc
lods
sbb
pushf
sub
and
add
adc
jge
jo
mov
add
sbb
adc
cmp
add
cwtl
cmp
add
add
jno
inc
sub
add
enter
mov
or
adc
xchg
cmpsl
sarb
add
inc
add
dec
arpl
mov
push
cmpsl
lock
mull
int
push
cmpsl
bound
sti
add
aaa
inc
xchg
mov
xor
out
lahf
push
mov
add
out
inc
add
pusha
push
sti
in
lahf
mov
inc
xchg
dec
mov
jo
in
lahf
inc
roll
mull
arpl
dec
push
adc
pusha
and
stos
add
lods
sti
inc
xchg
pop
xchg
add
pusha
and
stos
add
jl
inc
xchg
pop
daa
gs
add
cmpsl
inc
out
les
add
inc
faddl
pop
pop
add
dec
mov
inc
out
test
add
mov
inc
xchg
arpl
imul
mov
pushf
sub
adc
inc
out
xchg
mov
mov
xchg
xchg
sub
ss
push
mov
aam
add
jne
cmpsl
sub
cs
jmp
push
add
aaa
mov
dec
mov
ss
sub
addr16
push
jg
cmpsl
stos
xchg
popa
pusha
push
push
add
cmp
mov
arpl
fnstenv
mov
push
lock
add
mov
xor
inc
add
gs
test
cwtl
mov
add
inc
add
nop
test
es
add
push
pop
sarl
dec
cmp
sub
add
sbb
add
test
push
add
pop
call
jo
jno
add
gs
push
xchg
xor
add
or
add
mov
ret
outsl
add
push
imulb
cmp
add
andb
or
inc
add
xor
or
push
adc
nop
cmp
lea
push
call
pushl
daa
imull
mov
cmpsl
xor
addr16
xchg
scas
cmp
jmp
orb
out
mov
int3
je
daa
mov
dec
xchg
daa
mov
imull
mov
aas
nop
or
mov
push
xchg
cmpsl
pop
jmp
or
and
je
daa
stc
sub
mov
js
xchg
cmpsl
cs
stos
push
les
and
pushf
cmpsl
dec
mov
sub
adcb
fisttps
dec
push
sbb
mov
sbb
mov
lret
pop
push
adc
pusha
cmc
rolb
sbb
jno
inc
int
push
inc
pop
lea
sbbb
dec
jo
es
js
xchg
xchg
decl
sub
add
mov
cld
pop
add
inc
xchg
add
push
jl
clc
add
dec
aam
sbb
jnp
add
mov
push
call
mov
setno
add
jmp
xlat
cld
call
mov
inc
push
push
add
es
das
dec
call
dec
cmpsb
call
inc
inc
dec
int3
in
mov
jmp
mov
pop
lds
add
and
add
jb
fmull
push
cwtl
jmp
fcoml
call
mov
clc
and
cmp
pop
push
and
or
or
add
xchg
sti
jmp
jge
and
imul
imul
add
adc
adc
andb
decl
xchg
in
and
imul
lods
dec
call
cmpl
ljmp
mov
inc
mov
add
add
mov
cmp
inc
add
push
add
pop
mov
adcb
push
sub
mov
xchg
cmpsl
push
push
dec
fisubl
cmpsl
jge
pusha
int
movb
or
test
adc
and
mov
inc
push
inc
or
xor
add
mov
xchg
and
and
add
xchg
fsubrl
push
lds
cmpb
jo
js
iret
xor
sub
sub
or
ret
pop
sub
notl
aam
mov
jo
jb
xor
daa
add
lret
mov
cmp
add
jl
testb
mov
ret
test
adcl
add
inc
push
ss
pop
jmp
loopne
jmp
add
add
mov
mov
fsub
mov
mov
inc
lds
lds
aaa
inc
sub
dec
out
sub
das
out
sub
mov
inc
out
sub
adc
sub
scas
push
add
test
cmpsb
insb
add
sbb
or
in
inc
mov
call
sti
dec
call
jo
std
dec
icebp
mov
sub
das
in
add
add
cs
xlat
push
fnstcw
mov
add
test
inc
sbb
orb
add
add
scas
jae
jne
imul
add
add
fiadds
add
inc
pop
mov
std
jno
adc
inc
add
push
inc
std
mov
add
push
push
stc
or
enter
call
xchg
and
int3
cltd
std
mov
and
cltd
stc
inc
mov
mov
popf
test
add
adc
imul
jmp
xchg
shl
mov
out
in
je
xor
pushl
xor
mov
fimuls
std
mov
or
mov
xchg
xchg
inc
inc
xorl
test
xchg
xchg
add
roll
push
dec
push
xor
dec
adc
xchg
out
inc
mov
xchg
add
add
add
add
push
decl
loopne
out
push
xor
sub
adc
jp
mov
jg
pushf
iret
outsl
or
clc
roll
shrb
xor
jns
mov
cmp
cli
push
cmp
push
lods
inc
sub
xchg
inc
mov
xor
jg
push
out
nop
sbb
mov
mov
cld
pop
test
jl
in
pop
cmp
add
sbb
jmp
cltd
add
in
icebp
addr16
popf
push
call
dec
pushf
call
imul
inc
std
fisubs
jae
call
call
xchg
das
pop
mov
stos
push
insb
imul
push
cmp
clc
int3
sahf
call
stos
lods
std
jb
cwtl
xor
xchg
add
xlat
dec
sub
sub
inc
push
push
ret
shlb
add
decl
cmp
add
adc
xor
add
lock
mov
pop
mov
dec
sti
adc
lods
push
mov
daa
mov
incl
mov
jns
mov
sti
ljmp
mov
pop
jno
mov
mov
js
push
push
xor
sti
cmpl
jg
loop
xorb
push
push
lds
lods
inc
xchg
cltd
scas
adc
add
cltd
test
mov
adc
xchg
movsb
jbe
xchg
cltd
cmp
fwait
mov
cld
test
xchg
push
daa
or
sub
jge
cld
mov
lret
xchg
add
jmp
xlat
add
and
add
dec
inc
add
mov
push
ret
adc
jecxz
push
fs
pop
scas
add
stc
cmpb
jl
inc
add
call
pusha
or
adcb
aaa
lods
push
iret
add
test
out
xchg
add
add
daa
aaa
cwtl
jo
lcall
push
scas
pop
stc
push
cwtl
pop
jmp
icebp
cmp
dec
pop
mov
roll
call
jecxz,pt
in
cmp
inc
or
pop
shlb
xchg
push
add
xchg
adc
add
lods
cmpsl
add
inc
xchg
cwtl
cltd
sub
stc
test
insl
fdivr
andl
add
push
stc
test
and
push
push
and
das
cmp
add
mov
movsb
jmp
mov
jne
int
sbb
mov
xchg
jns
lds
in
and
jp
push
inc
add
loopne
cmp
in
mov
mov
dec
cmp
stos
cld
push
mov
test
cld
add
popf
jne
cli
lock
adc
jg
je
stos
incb
mov
add
mov
mov
sbb
mov
add
ja
sub
jp
add
repnz
sti
decl
inc
and
sbb
pop
xchg
cmpsl
in
pop
sti
lea
pop
pop
add
lods
cld
cli
sub
push
call
mov
xlat
je
daa
jl
xchg
mov
std
adc
icebp
pop
cmc
fistps
xchg
adc
mov
imul
sbb
and
aaa
bound
adc
testl
add
mov
mov
stos
xor
inc
add
adc
aam
call
or
push
iret
sub
cltd
xchg
xchg
idivb
cmp
jge
pop
add
stos
xchg
arpl
cmpsb
adc
or
pop
add
out
push
movsb
pop
pushf
testb
add
or
jnp
xor
icebp
es
lods
repz
xchg
jp
js
test
dec
xchg
add
dec
cmp
dec
pop
ret
sbb
hlt
out
subb
in
out
arpl
push
pop
inc
push
push
iret
dec
xor
cli
and
mov
mov
es
mov
sub
arpl
subb
leave
mov
lahf
cli
jns
dec
push
sub
insb
mov
lds
cwtl
mov
sub
rcll
mov
pop
jmp
cld
xor
inc
out
std
sbb
adc
movsl
std
push
loope
loope
sub
xor
pop
and
cmp
mov
ljmp
jmp
andl
imul
es
add
cmp
push
roll
into
and
int3
cmp
lock
sbb
rcrl
add
loop
jmp
xlat
sbb
data16
rol
dec
mov
jle
stos
test
lea
jns
sti
mov
sbb
rcrl
jmp
leave
sub
add
push
mov
sarb
mov
xchg
and
push
loop
jg
rolb
dec
addr16
test
jno
imul
xlat
dec
xor
jle
cmp
es
jg
cli
gs
jmp
xchg
sub
sub
push
ja
adc
hlt
jp
sbb
je
xchg
push
mov
test
gs
data16
movsb
add
lock
fwait
outsl
ret
or
in
sbb
mov
add
add
out
pop
push
cmpsl
inc
or
fdivl
std
imull
daa
add
in
rclb
xor
dec
push
lret
xlat
cmp
xchg
adc
push
add
xor
fwait
sub
rcll
sti
add
add
add
mov
adc
stos
fists
jge
sti
cmpl
or
cmp
jp
mov
mov
inc
add
xchg
stos
inc
add
rcrl
mov
add
ja
push
xchg
mov
add
pop
ret
sub
arpl
lods
push
add
fwait
xchg
adc
cwtl
cmpb
sbb
add
addb
pop
icebp
mov
mov
push
ss
mov
add
dec
mov
add
push
add
push
incl
insl
gs
stos
sar
cmp
bswap
adc
loope
push
rcrb
ljmp
push
insl
add
les
cmpl
orl
lcall
repz
out
sbb
push
mov
xchg
push
mov
ljmp
sbb
fiadds
mov
lahf
mov
add
add
in
jl
jbe
xchg
test
add
sub
add
adc
repz
mov
pop
add
shrb
aad
or
dec
test
xor
test
mov
mov
mov
and
xchg
xchg
or
bound
mov
inc
add
mov
sbb
mov
mov
sub
add
xchg
add
stc
ret
add
mov
fld
push
mov
pop
mov
jmp
clc
xchg
add
sbb
inc
out
lret
mov
or
or
mov
xchg
addl
add
jg
sbb
sahf
out
push
pushf
aaa
xchg
pop
mov
or
out
rcll
out
lret
roll
add
iret
repz
add
sarl
popf
add
popf
std
jmp
pop
ret
cmpsb
push
shlb
iret
mov
sub
dec
je
sbb
mov
rcrl
or
cmp
dec
pop
roll
roll
shl
add
pushf
or
addl
mov
push
lahf
mov
mov
cmc
das
push
hlt
adc
pusha
push
pushf
std
hlt
lret
repnz
add
inc
cld
push
cmc
pop
decl
sti
adc
stos
pop
pop
rolb
mov
in
or
call
std
in
dec
pop
test
popa
adc
inc
add
popa
sar
jne
popa
jbe
loop
mov
fsub
mov
add
test
or
jo
pusha
adc
enter
xor
add
push
imul
aad
push
inc
outsb
xchg
xchg
inc
in
add
fwait
sub
inc
xor
fwait
rolb
xchg
es
add
movsl
sub
fdivr
push
xor
cltd
adc
aad
and
lret
adc
add
imul
adc
out
xchg
out
and
inc
cld
pop
data16
cld
stc
popf
std
or
cld
add
aad
popw
xor
decl
xchg
inc
les
or
or
test
add
push
unpckhps
sbb
aam
mov
cmp
add
test
shrl
addl
sahf
adc
std
into
sub
lcall
negb
cmp
xchg
push
ljmp
lock
stos
lcall
js
mov
lahf
adc
cltd
std
pop
loope
jb
fwait
add
insb
xlat
or
fistl
add
cld
fucomip
aas
jmp
inc
cltd
ljmp
add
and
std
hlt
jae
aas
jmp
push
sub
nop
jmp
xorl
std
push
cwtl
xor
inc
push
cltd
std
fisttpl
mov
test
cmc
out
lret
stc
and
scas
mov
pop
xor
add
jmp
cltd
std
push
xchg
add
fs
clc
data16
clc
data16
ret
or
xorl
lds
sti
call
xor
jno
pop
xchg
adc
add
cld
pushl
inc
clc
in
div
xor
add
jbe
mov
std
lcall
hlt
mov
adc
xor
lret
ret
xor
ljmp
call
xor
rorl
int3
or
adc
xchg
and
pop
inc
cli
xor
cmpl
adc
mov
loop
je
dec
mov
mov
and
jmp
xchg
imul
insl
cli
mov
jmp
pushf
push
daa
add
cmc
out
imul
adc
inc
xchg
in
adc
pop
cmpsl
sub
push
ja
adc
mov
add
aam
cmp
push
add
add
sbb
xchg
adc
lahf
xchg
sbb
jmp
add
test
movsb
ret
bound
bound
das
jb
dec
xor
test
adc
ds
iret
or
lcall
jnp
xchg
inc
cld
rcrb
scas
les
push
jmp
push
or
xchg
xlat
lods
pop
adc
xchg
xlat
and
inc
add
adc
fbld
xchg
add
xor
rol
add
scas
adc
int
aad
fcmovbe
cmpsl
ljmp
adc
xor
mov
xchg
pop
and
bound
xor
loopne
cltd
adc
ret
xchg
xchg
jae
push
adc
mov
iret
icebp
aas
jmp
mov
std
jge
or
jne
or
js
xchg
adc
inc
aad
stos
mov
push
jb
jle
add
add
out
xchg
add
inc
pop
dec
mov
into
or
and
add
call
lods
xor
lods
add
xor
push
mov
clc
cld
imul
lods
adc
inc
aam
add
cmp
dec
jno
call
lcall
es
jmp
jns
fcoml
and
std
jmp
icebp
mov
call
push
push
add
or
sti
cld
mov
popf
cwtl
adc
pusha
test
sti
mov
movsl
add
jle
in
add
imulb
std
dec
xchg
mov
mov
inc
add
mov
mov
sbb
add
lret
and
mov
xchg
test
add
or
rorb
ljmp
xchg
jns
jae
xchg
jmp
cmpsb
imul
jae
add
adc
xchg
xchg
sbb
push
or
fsubrl
jg
xchg
in
hlt
imul
xchg
add
add
add
fdivrs
dec
jno
out
dec
lock
push
mov
les
ljmp
mov
or
xchg
pop
xchg
ds
mov
cmpsb
add
test
cmp
repz
test
cmpl
ret
les
pop
dec
mov
xchg
xor
mov
xor
addl
or
xchg
add
sub
icebp
and
xchg
mov
call
push
add
xchg
push
inc
mov
cld
pushl
pop
movsl
dec
add
dec
sub
or
jge
sar
pop
out
idivl
jmp
imul
inc
jmp
cld
jmp
sub
cld
cmp
aas
jmp
add
xchg
pop
cltd
jns
push
imul
jge
adc
xor
roll
ss
cmp
add
mov
mov
in
aam
sti
mov
jne
inc
in
out
mov
out
push
jecxz
call
ds
incl
sar
rcrl
std
cld
push
jmp
cli
ljmp
add
filds
push
jle
push
cmp
roll
xor
xchg
dec
xchg
adc
inc
add
push
sbb
mov
cmp
les
stos
push
fildl
stos
push
add
xchg
cmpl
aas
xchg
and
or
addr16
add
push
pusha
xchg
std
inc
outsb
out
testl
mov
xor
jb
mov
imulb
push
and
dec
inc
sbb
in
inc
dec
xor
jmp
mov
adc
cld
sub
clc
jnp
inc
std
mov
sti
in
stos
add
cmc
mov
jnp
xchg
ret
jnp
xor
popf
xchg
inc
jns
or
jae
add
xor
xor
sbb
pop
cld
les
ss
xchg
xor
add
scas
xchg
sbb
sahf
stc
jg
es
inc
fbstp
jb
mov
nop
add
mov
addl
ss
repz
mov
jmp
roll
pushf
add
leave
xlat
out
pop
xchg
add
call
jb
test
mov
sbb
lcall
mov
adc
inc
out
or
ljmp
pop
fs
dec
pop
mov
daa
repnz
push
add
mov
xor
inc
fdivrl
add
lods
enter
roll
mov
jge
int
push
add
pusha
repz
es
add
les
pop
cmpsl
add
add
push
orb
clc
jl
dec
lea
call
add
sbb
inc
cmc
pop
lcall
lds
inc
std
test
je
call
sti
jne
outsl
adc
inc
add
cmp
dec
ret
in
aad
in
ds
push
push
and
or
cmp
jno
mov
adc
xchg
jmp
add
out
rcll
or
add
pop
inc
or
pop
stc
xchg
int
inc
mov
inc
or
lods
enter
add
xchg
sbb
je
and
push
fstpl
xorl
jmp
pop
adc
or
xchg
push
push
or
int
mov
pushf
pop
pop
cmc
sti
mov
jle
mov
adc
or
add
arpl
fs
mov
push
inc
inc
add
xchg
jp
xchg
inc
mov
add
jl
call
popa
add
xor
adc
xlat
xchg
push
xchg
add
jl
pushf
insb
les
ja
xchg
adc
mov
mov
mov
push
jl
out
add
xchg
xor
jns
mov
dec
std
jge
cmpsl
repnz
cwtl
xor
xchg
add
or
mov
jl
mov
leave
add
add
add
fmull
out
aas
jmp
pop
add
push
cltd
cmpb
adc
push
popf
lock
push
call
sub
add
into
sarb
std
shr
rol
push
decl
rolb
mov
add
push
dec
push
pusha
push
xchg
jmp
add
sbb
jns
mov
mov
jne
jp
and
cmp
std
push
mov
shrb
mov
mov
add
out
push
cmp
sarb
sbb
rorl
rolb
sbb
push
push
ret
or
outsb
sti
jne
push
je
add
jnp
clc
fidivrs
mov
adc
xchg
sbb
xchg
xchg
cld
mov
jle
jo
xor
sub
ljmp
fsubs
push
roll
test
sbb
jae
mov
and
sbb
push
mov
mov
mov
cld
bound
int
xchg
or
xchg
cltd
add
les
xchg
push
sbb
jae
and
or
into
out
in
xor
std
pusha
std
jmp
mov
xchg
xchg
leave
or
out
shrb
add
call
jns
and
insb
cmp
aad
lds
ds
ret
out
jp
add
mov
loop
loopne
bound
mov
mov
nop
inc
daa
push
cli
popf
xchg
xor
add
stos
fimuls
idivl
xchg
nop
xor
lds
and
int3
ljmp
xlat
and
inc
sar
call
enter
mov
xor
mov
fcmovne
add
xchg
sarl
or
inc
mov
or
dec
or
jb
pop
xchg
je
pop
pop
pushf
stos
repz
shll
jae
xchg
test
test
inc
bound
push
imul
lock
es
js
add
testl
inc
out
ja
cmp
lahf
cmpl
jp
inc
cmp
cs
in
mov
cmpsb
mov
push
inc
mov
rolb
jg
jns
push
mov
push
inc
or
inc
clc
xchg
mov
push
call
negb
fldt
mov
inc
mov
jle
dec
repnz
jge
pop
pop
je
or
data16
cmpb
test
cmp
add
insb
jb
xchg
testl
ss
mov
xchg
andl
or
aam
sub
adc
cs
sbb
jae
jle
or
fdiv
cmp
push
fbld
xchg
clc
pop
xor
insb
shrb
mov
xchg
lds
jb
cs
and
cltd
jl
out
testb
mov
cld
in
ds
xor
mov
xor
lcall
xchg
add
lods
sub
mov
cmpl
mov
test
aas
roll
push
add
ldmxcsr
iret
push
push
add
mov
jg
idiv
mov
sbb
ret
loope
cmc
jnp
lds
pop
subl
sahf
arpl
add
push
sti
xor
jg
mov
pop
mov
jge
sub
inc
mov
xchg
add
gs
add
fs
push
push
bound
xor
dec
xor
call
fdivrs
xor
iret
mov
sub
add
pop
adc
sbb
jmp
adc
lahf
xlat
js
insb
pop
or
mov
xchg
jg
jmp
push
inc
add
mov
mov
adc
pop
dec
ret
stos
xchg
add
pop
sar
add
mov
add
aas
add
ret
jns
lock
cmp
aas
add
addr16
add
aas
add
rcl
inc
in
push
lock
repnz
push
aam
adc
xor
add
mov
nop
popf
adc
rcrb
je
push
dec
and
add
scas
insb
pushw
mov
jmpw
mov
in
sbbl
aas
add
cmpsb
inc
fcoms
add
movsb
xchg
adc
xchg
cmpl
add
cmp
push
adc
pop
hlt
inc
ret
push
xchg
add
cltd
jg
inc
xchg
cwtl
sub
mov
aas
xchg
cmp
xchg
call
paddq
add
add
cmp
add
xchg
out
lods
in
or
fwait
cld
decl
push
shlb
jnp
jecxz
call
push
test
ss
xor
adcb
mov
cmp
lods
mov
sbb
add
add
push
push
push
add
xor
jno
mov
sbb
repz
jl
out
jg
fwait
push
sahf
out
shufps
rcl
mov
sarb
mov
sbb
mov
add
add
add
aam
add
sbb
test
add
out
fdivp
aas
lcall
mov
jmp
sbb
fs
push
mov
shll
cld
out
pop
push
jg
cwtl
dec
add
std
add
mulb
cli
pop
cmp
inc
xchg
fimuls
test
cmp
add
xchg
or
aas
jmp
outsl
mov
mov
sbb
inc
mov
fwait
test
inc
fwait
mov
addl
ja
mov
lock
std
addb
jne
jmp
jmp
lea
xchg
ja
clc
lds
std
imul
mov
aad
jno
pop
or
aas
pop
cld
call
cld
in
nop
adc
mov
sti
mov
andb
out
or
push
ss
jle
adc
add
push
jnp
mov
jmp
mov
and
push
or
bound
orb
push
add
xchg
out
pop
add
stos
add
mov
and
paddq
rorb
rorl
or
sub
fdivr
and
insb
add
lahf
jg
pop
add
or
add
jg
je
pop
add
sbb
jp
adc
push
sub
add
add
or
add
out
mov
or
sbb
jnp
mov
and
xor
mov
and
out
les
fwait
daa
mov
add
mov
and
or
mov
bound
lds
fdiv
xor
adc
xor
lret
jnp
mov
and
pop
sbb
jle
sbb
adc
jno
jnp
jmp
xchg
add
jno
rolb
xor
mov
fmuls
jmp
cmp
jmp
std
sbb
sti
adc
sti
in
sub
mov
inc
arpl
adc
mov
test
push
add
int
out
movl
int
aam
fnsave
inc
xchg
push
jge
mov
push
mov
pop
jb
add
popf
dec
call
mov
shl
add
add
adc
stc
xor
pop
pop
mov
push
mov
jge
clc
cld
lock
and
call
test
xor
pop
imul
lea
decb
add
mov
xchg
lods
mov
cli
test
xchg
adc
lods
stc
adc
cmp
pop
mov
pusha
mov
in
lods
push
push
push
cli
jo
and
xchg
nop
inc
test
ljmp
out
jo
mov
push
jle
mov
jecxz
clc
mov
push
scas
rcll
push
or
mov
inc
xchg
out
or
ljmp
jmp
xor
add
mov
in
lds
jge
lods
das
add
xchg
imul
adc
lock
sbb
sub
push
int
mov
ds
clc
sbb
add
shll
dec
shrl
jo
sti
out
add
imul
stos
loopne
add
add
jge
insb
mov
pop
ljmp
dec
xchg
and
out
push
out
loop
push
insb
loopne
out
iret
dec
xchg
add
imul
out
mov
shll
js
inc
int
sub
xchg
orl
mov
xor
inc
jle
popl
xor
inc
addr16
addb
lahf
rcrl
pop
dec
iret
outsl
cmp
or
mov
mov
adc
out
cmp
add
add
jmp
inc
sbb
insb
decl
pop
ret
testl
out
mov
decl
sarb
std
cli
shll
cli
xlat
mov
push
sti
jmp
sub
mov
cmp
xchg
xchg
push
jl
shlb
xchg
in
add
add
std
pop
add
add
xchg
jl
push
fdivs
add
jno
call
aaa
aam
jne
in
add
in
cli
adc
mov
push
sub
jne
push
cld
adc
clc
mov
in
jmp
incl
stos
mov
in
add
in
stc
jb
xor
push
pop
pop
leave
add
add
call
push
call
cld
call
xchg
test
incl
sbb
push
sbb
aad
jno
sbb
xor
ret
jno
adc
std
sub
inc
nop
aaa
jns
pusha
insl
sar
movsb
add
adcl
outsb
add
movsb
jp
leave
iret
mov
imul
inc
arpl
std
call
pop
add
stos
xor
adcl
or
xchg
or
inc
mov
jge
mov
sar
mov
jmp
add
jmp
pusha
pop
in
sarb
out
and
out
test
aam
je
fimull
or
lret
popa
push
xchg
pop
in
sub
out
jl
jno
orl
rcll
movsl
dec
mov
push
cmp
mov
mov
iret
xchg
mov
mov
push
mov
ficoml
jmp
sarl
pop
mov
lcall
in
mov
js
cld
pop
mov
call
bound
notb
cs
lret
xchg
add
bound
mov
jne
jae
push
mov
scas
mov
jmp
dec
imul
pop
aad
adc
cld
mov
inc
xchg
inc
fistpl
push
shll
jb
jg
mov
pop
call
scas
insl
cmc
insb
leave
out
or
add
add
dec
or
push
call
mov
add
dec
push
mov
ss
outsl
xor
cld
ljmp
outsl
and
add
xchg
test
jno
xor
xchg
add
insl
xchg
call
xor
cld
push
mov
addr16
in
stc
mov
pop
pop
es
mov
in
in
dec
push
lea
add
xchg
ucomiss
or
enter
sbb
popf
jne
lods
push
push
pop
jecxz
adc
pop
cmp
fcom
or
pop
test
mov
mov
mov
add
sub
in
inc
cmp
mov
shrl
imul
repnz
add
mov
js
scas
push
push
pop
arpl
jg
jmp
push
or
jmp
sub
in
out
dec
cmp
xor
rolb
xor
add
lret
jge
or
fs
mov
addb
out
int
ljmp
or
cld
sbb
sbb
insb
imul
insb
shlb
or
add
loopne
inc
jg
mov
aad
lret
jno
filds
add
xor
je
clc
dec
or
outsl
push
mov
lods
lcall
iret
out
mov
cld
mov
sarb
jmp
xchg
xor
loop
hlt
cmp
or
pop
xchg
lds
movsb
arpl
inc
loope
and
aad
lahf
repz
les
call
add
fisubs
inc
xorl
pop
fsqrt
push
rol
shlb
xor
insl
xor
xchg
inc
add
les
sbb
or
or
fisubrs
adc
xchg
sub
jae
adc
aad
das
jmp
jmp
inc
call
ret
xchg
and
les
js
or
push
or
mov
jo
out
lock
and
mov
inc
xchg
xchg
jne
sbb
dec
shll
add
inc
or
cmp
xor
jmp
pop
repz
jne
adc
inc
std
mov
xor
jmp
dec
mov
xchg
add
dec
daa
mov
pop
shl
aaa
mov
sbb
add
cld
sar
push
xor
push
aam
xchg
nop
lock
das
inc
jle
cwtl
int3
mov
dec
add
rolb
jle
jmp
or
push
arpl
cld
pusha
sti
adc
je
push
push
push
xchg
nop
pop
rolb
nopl
mov
cmpsb
lret
daa
or
or
iret
pop
push
arpl
push
jae
add
in
insl
aam
or
aas
arpl
dec
jle
ja
sti
push
jbe
pop
xchg
mov
lods
adc
cmpb
addb
std
notl
shl
dec
add
rcll
rolb
add
int
mov
addb
xchg
pop
aaa
mov
inc
lret
test
xchg
shll
in
popa
dec
jl
out
xchg
pop
loopne
xchg
add
mov
in
pslld
cld
hlt
aas
cmovo
insb
addl
xchg
mov
jae
addl
test
fwait
add
jmp
fwait
sar
add
inc
jmp
xor
jb
rcl
ljmp
jae
inc
xor
hlt
mov
ret
push
out
push
bound
or
xchg
add
pop
out
pop
inc
lret
inc
or
insl
aam
cltd
out
and
add
xchg
in
cmp
std
test
enter
incl
push
or
xchg
add
pop
outsb
in
inc
or
mov
adc
std
adcb
std
ret
jmp
or
cld
in
push
push
mov
fstpt
jmp
xchg
add
jmp
add
dec
inc
mov
mov
movl
icebp
jno
add
shlb
stos
cli
fisubrl
xchg
fdivl
pop
add
xchg
andps
aam
outsb
jae
or
nop
ficoml
jo
xchg
add
mov
push
xlat
add
mov
dec
scas
pushf
rol
fstps
add
sar
push
and
adc
cs
mov
push
add
cld
jl
jmp
inc
or
xchg
fadd
pop
fs
test
sbb
call
jnp
inc
xchg
in
jae
add
xchg
add
sub
clc
in
clc
movsb
xchg
add
push
outsb
les
jmp
shl
xlat
clc
arpl
mov
aas
insl
inc
imul
shll
adc
adc
fwait
jge
pushl
jl
or
push
outsb
fs
jp
clc
cltd
addb
or
adcb
in
fxch
fwait
imul
adc
xor
aas
test
aad
xor
add
push
cmp
cld
pop
mov
imul
inc
jmp
outsb
icebp
xor
dec
leave
sub
dec
mov
adc
out
dec
add
inc
gs
add
hlt
addb
add
imul
gs
add
push
sti
lcall
sti
cld
cld
cmpsl
adc
jb
ljmp
ds
push
ss
or
stc
decl
jle
je
jmp
jae
jl
cmc
andl
jae
add
in
jae
movsl
add
jne
rorl
add
sbb
add
push
jb
xor
in
add
or
cmp
jmp
push
in
inc
aam
mov
push
push
xchg
dec
dec
push
jl
je
fnstenv
call
cmp
mov
mov
fsts
inc
push
xor
add
adc
push
orl
adc
test
arpl
fwait
xchg
push
add
pop
adc
xchg
movsl
pop
in
mov
xchg
and
pop
sub
enter
cld
mov
push
dec
pop
add
xchg
mov
mov
rorl
popa
arpl
mov
nop
addl
push
sub
sbb
in
add
stos
add
mov
push
mov
aam
gs
jmp
shl
push
in
repz
jo
sarb
pop
popf
int
adc
mov
push
pop
sbb
push
push
gs
mov
imul
lock
gs
push
jp
push
leave
das
inc
cwtl
add
or
popf
push
hlt
imul
push
add
fs
gs
in
dec
imul
add
into
sub
cld
cld
xor
arpl
inc
std
sti
scas
sub
gs
or
mov
in
jl
std
jae
call
jae
call
inc
push
call
arpl
lds
add
or
bound
cwtl
inc
faddl
mov
xchg
repz
jmp
push
out
add
pop
rcll
in
aas
add
dec
xor
ljmp
fdivs
jae
add
add
fsubl
add
aas
std
mov
loop
je
dec
mov
dec
push
mov
cmpsl
cld
test
fmul
test
rcr
jp
ret
jno
add
jae
in
add
cli
pop
ljmp
inc
sub
and
dec
adcl
push
mov
fs
xor
dec
push
pop
sti
mov
cld
lret
jae
inc
mov
adc
call
popa
ljmp
lds
call
pop
inc
jg
add
cli
jbe
mov
xchg
out
pop
xchg
mov
adc
fstps
rolb
jp
jo
sti
mov
cld
push
insb
inc
mov
pop
repnz
xchg
lods
jp
in
fdivrp
xchg
test
sar
aam
sti
les
data16
add
dec
pop
inc
xchg
es
mov
hlt
or
out
push
add
jb
mov
jne
add
bnd
fs
iret
mov
repnz
clc
mov
lock
jne
pop
pushf
leave
mov
push
shll
push
sbb
adc
jp
addr16
insl
adc
push
cmpsl
add
bnd
pushf
cld
ret
cmp
js
fs
cmpsw
hlt
jge
and
add
add
jae
jp
subl
icebp
aas
jmp
enter
mov
shlb
add
cmp
loope
inc
je
aad
cld
pop
mov
icebp
aas
jmp
jecxz
push
mov
push
std
mov
cmpsl
mov
cli
inc
je
in
lret
sti
jo
mov
mov
push
pop
xor
push
mov
mov
sub
push
add
add
sub
inc
shll
test
outsl
add
jbe
jl
cmp
lahf
icebp
test
call
dec
push
xor
cld
loop
cli
jne
fiaddl
loop
jle
in
jno
mov
aas
pop
std
push
push
mov
or
jge
pusha
je
adc
jmp
andl
or
inc
cmp
ljmp
xor
sbb
out
inc
sbb
andps
clc
mov
pop
and
jae
add
inc
repz
in
sub
jbe
fdivrl
cld
dec
cmp
cmp
cvttps2pi
adc
push
mov
mov
rsm
insl
or
pop
inc
xchg
scas
adc
ret
mov
adc
adc
push
aaa
loope
aad
ret
decl
xchg
bound
add
imul
leave
daa
sbb
adc
xchg
call
pop
adc
movsl
call
push
out
adc
out
pop
add
add
mov
or
xchg
xchg
imul
insb
pop
push
bound
rcrb
rorl
out
push
pop
pop
in
sub
out
jl
xchg
bound
or
out
out
pop
mov
push
push
call
sub
mov
cmc
push
pop
std
insb
xlat
or
push
xor
add
mov
add
rcll
insl
pop
jae
jg
inc
es
out
int
std
bound
adc
jl
xchg
outsb
shl
divb
gs
xor
out
in
inc
je
aas
or
xor
inc
jae
sbbl
icebp
dec
pop
adc
fisubrs
ljmp
mov
inc
cld
mov
sub
popf
in
mov
sub
xor
mov
mov
mov
test
xchg
lret
adc
popa
cmp
cwtl
push
push
xor
adc
xor
ss
pusha
dec
push
call
and
iret
inc
mov
in
jp
push
and
adc
add
inc
xor
je
mov
lods
xchg
cld
adc
lock
fldl
xchg
push
pusha
xor
mov
cmp
arpl
pop
aad
jmp
call
adc
or
imul
jnp
sti
xchg
imul
xchg
cld
jecxz
inc
inc
add
aaa
pusha
jae
add
out
sub
std
pop
xchg
pop
pop
push
push
dec
ret
mov
push
inc
in
fldl
jmp
fdivp
mov
out
pop
sbb
mov
xchg
loop
jle
xchg
jbe
outsl
xchg
add
adc
arpl
fmull
test
out
add
hlt
arpl
pop
lods
pop
or
sub
dec
jmp
xchg
mov
add
mov
cmp
sub
dec
pop
push
or
repz
imulb
push
nop
pop
cmp
cltd
repz
roll
add
addr16
push
jecxz
out
sti
push
pop
das
test
xchg
add
repz
fldenv
mov
and
add
faddl
fwait
out
aas
jmp
mov
movsb
pop
adc
sbb
sbb
pop
inc
js
sub
push
inc
add
int3
dec
xchg
popl
mov
mov
repnz
jmp
push
int
fldcw
add
cmpb
int
sbb
or
cld
xchg
gs
sub
add
xchg
add
push
std
decl
push
pop
hlt
hlt
xor
imul
test
jmp
add
call
mov
inc
or
mov
jb
mov
lock
adc
xchg
pop
leave
mov
sarb
test
xchg
sub
aas
cmp
jp
inc
and
or
xchg
pop
ljmp
mov
std
test
dec
incb
mov
add
xchg
ljmp
or
daa
or
jecxz
pop
in
cmc
jmp
sub
xlat
or
dec
jo
dec
je
cwtl
mov
sub
xchg
loopne
and
filds
push
or
negl
push
push
mov
test
in
je
jp
stos
xchg
add
add
inc
push
add
jg
mulb
sbb
mov
cld
push
add
adc
add
add
add
pop
out
mov
fadds
jmp
push
or
push
outsb
mov
push
mov
mov
and
pop
push
mov
xchg
mov
arpl
out
repnz
add
xlat
into
pop
mov
push
push
shrb
push
xchg
repz
add
xchg
mov
or
call
inc
nop
mov
inc
cmp
scas
cld
aam
repnz
jmp
inc
mov
push
xchg
scas
push
add
flds
bound
add
jo
push
sub
add
je
cmp
push
test
mov
xchg
add
adc
adc
pushf
repz
adc
add
pop
push
dec
lock
adc
inc
std
addb
mov
dec
dec
inc
pop
sub
mov
add
push
jnp
loope
jnp
test
mov
std
xorb
out
notb
mov
inc
frstor
mov
mov
sahf
call
incl
mov
gs
into
gs
fcos
lret
je
jl
or
inc
push
incl
les
imul
lret
fldl
push
jg
mov
mov
stos
xor
sti
stos
xor
lock
ret
jnp
cmp
mov
pop
add
lcall
push
pop
add
mov
fnsetpm(287
into
dec
call
das
outsb
jmp
or
cmp
js
xchg
mov
movups
sbb
push
jae
mov
pop
add
adc
adc
jae
pop
mov
jg
push
push
jg
lret
int3
or
mov
jecxz
lods
in
jnp
test
mov
je
inc
push
ficoms
test
inc
push
imul
sub
andl
subl
sahf
mov
jae
push
pop
test
push
xchg
xlat
dec
sbb
xor
xchg
pop
push
pop
push
push
cmp
mov
push
dec
mov
mov
pushl
push
mov
lret
aas
jmp
inc
xchg
add
mov
push
xchg
scas
push
out
movsb
add
dec
icebp
adc
mov
cwtl
add
je
gs
inc
add
std
insl
xlat
int
fcmovnbe
pop
stc
jmp
ljmp
call
loop
pop
jns
inc
xchg
call
imul
inc
test
add
mov
in
ret
bnd
add
cld
mov
test
incl
cld
mov
sbb
aas
in
add
sub
jmp
mov
sti
dec
cmp
mov
mov
inc
popa
xor
xorl
gs
push
add
jmp
push
or
push
push
push
popf
in
xchg
add
cmp
xor
cmp
js
call
xchg
loopne
idiv
add
std
add
xchg
xchg
pop
add
aam
repz
jmp
scas
addr16
pop
add
cmpsl
sbb
push
lds
add
xchg
pop
push
xor
mov
imul
sub
imul
lcall
mov
add
xchg
inc
mov
xchg
pop
adc
pop
and
call
mov
lock
dec
push
std
in
mov
cmp
add
jle
push
aam
adc
add
cltd
scas
les
fnstsw
add
sbb
mov
arpl
out
xchg
aad
jmp
leave
dec
jb
jge
jae
sbbl
and
sub
jnp
mov
sar
xchg
or
jnp
in
rorl
cpuid
shl
pop
std
arpl
sub
add
xor
push
cltd
xchg
and
aad
sbb
mov
data16
out
call
cltd
pop
add
addr16
mov
xchg
push
je
mov
jle
adc
add
in
add
adc
pop
clc
imul
pop
dec
adc
pop
cld
subb
repz
push
clc
cmp
les
push
roll
push
std
into
mov
aas
add
cmp
dec
mov
lret
jb
and
fisttpl
cmp
add
push
mov
int3
cmp
lods
sub
icebp
and
add
xor
test
pop
mov
addr16
mov
add
pushl
sti
jg
idivb
ret
add
inc
repz
shll
sti
jg
stos
in
in
stos
loopne
es
in
xchg
dec
xchg
cli
push
sbb
sub
add
mov
add
pop
add
notb
in
xchg
jno
or
and
jge
pop
loope
lret
or
in
xchg
in
xchg
sub
dec
cmp
add
fwait
shll
adc
sbb
push
pop
add
mov
xorb
mov
push
xor
add
pop
in
push
ret
xlat
pop
add
xchg
push
xchg
inc
nop
into
mov
mov
sub
jb
repz
scas
jp
cwtl
bound
xlat
movsb
jo
add
jbe
sbb
sti
cmp
xchg
inc
xchg
sbb
in
push
sti
pushf
rclb
scas
or
pusha
out
cld
xor
inc
sbb
cmp
lds
sbb
mov
add
inc
lods
imul
mov
ret
xchg
test
add
out
add
add
or
cltd
pop
push
data16
sbb
call
inc
jle
call
cmp
pop
push
fnsave
pop
push
push
cmpsb
cwtl
sti
mov
xchg
mov
loope
mov
inc
pop
jle
call
sarb
pushf
out
js
mov
int
push
in
cmc
cld
xchg
mov
dec
addl
add
or
inc
std
ficoms
add
dec
jl
inc
add
push
jmp
add
jmp
add
dec
inc
or
outsb
mov
or
scas
std
or
mov
mov
cld
ljmp
pop
adc
int3
mov
jle
add
inc
mov
pop
or
add
ret
fisttps
out
ss
lods
xor
add
and
inc
leave
lds
inc
inc
jmp
fidivs
cmp
cmp
sbb
repnz
add
inc
jmp
cmp
add
dec
unpckhps
std
js
fildl
pop
lcall
aam
stos
push
sbb
push
or
lds
loopne
bound
add
push
and
setno
cwtl
fimull
adcb
cmpl
shll
push
inc
jp
rol
adc
loop
jmp
sbb
xchg
jbe
movsb
pop
ret
and
add
mov
int
dec
cmpsl
or
ret
subl
js
push
out
xchg
imul
mov
mov
inc
add
jnp
add
jne
add
jbe
xchg
clc
pop
mov
xchg
les
negb
mov
dec
adc
stc
data16
mull
xchg
add
sbb
push
iret
loop
xchg
out
or
dec
daa
in
popa
push
inc
jae
adc
std
push
add
cld
into
iret
pop
clc
sets
mov
add
jmp
mov
std
cmpsb
dec
mov
dec
mov
fsubs
loop
jge
sbbl
add
mov
add
jmp
sbb
out
incb
mov
xchg
jg
or
pop
or
mov
loope
aaa
cmp
call
aas
and
lock
mov
les
mov
sbb
adc
inc
sbb
lcall
inc
in
in
in
cmp
inc
in
sub
jle
add
inc
in
scas
roll
sbb
push
jge
push
pop
mov
jo
mov
in
rdpmc
dec
or
cmp
mov
mov
adc
std
in
add
sbb
shrb
cmp
xor
inc
xchg
inc
jl
outsl
xchg
and
mov
pop
add
test
and
pop
mov
jmp
sub
mov
fsubl
dec
inc
push
aas
xchg
pop
popl
push
jns
or
push
iret
jns
xchg
pop
add
aad
push
fdivrs
les
or
or
mov
xchg
out
mov
dec
jmp
pop
add
jno
outsb
rolb
es
cltd
mov
add
bnd
add
scas
idivb
jge
add
lods
rol
out
xchg
pop
xchg
xchg
add
lahf
inc
leave
add
jl
lock
in
outsl
out
xchg
ja
clc
or
ret
jns
hlt
xchg
ja
push
arpl
call
add
xchg
out
or
add
cmp
in
add
jge
int3
xchg
add
jmp
movl
or
add
jns
aad
les
jo
repnz
jg
in
mov
std
arpl
push
out
filds
jb
push
inc
cmp
addr16
add
push
xchg
mov
inc
cli
out
pop
inc
std
push
inc
jno
jmp
and
or
nop
pop
stc
jmp
mov
decl
dec
cmp
rorb
jg
jmp
movb
aas
add
test
inc
sbb
sbb
mov
mov
add
test
xchg
add
mov
out
pop
mov
inc
push
xchg
imul
add
dec
mov
bound
or
xchg
and
out
lods
inc
std
pop
mov
in
fisttpl
sti
rcll
testb
inc
inc
std
mov
repz
std
and
or
mov
aam
je
insb
jecxz
mov
repz
mov
add
cld
or
dec
sbbb
hlt
mov
shrl
hlt
mov
sub
mov
inc
add
add
dec
inc
je
hlt
orb
add
addr16
or
pusha
inc
add
xchg
mov
xchg
inc
inc
cld
pushf
inc
adc
sbb
add
jo
dec
sub
shll
out
xchg
jbe
add
lods
in
inc
mov
test
jns
bound
pop
mov
sub
lods
dec
pusha
jle
aas
scas
inc
adc
jb
insl
dec
out
flds
test
pushf
mov
xchg
jbe
add
int
pusha
dec
or
dec
incl
mov
movsb
out
sub
cmpsb
cmp
insl
xchg
add
pusha
or
add
add
push
fs
cmp
push
xchg
add
jmp
subl
shl
addr16
xchg
or
push
push
out
mov
adc
add
mov
insb
pop
add
sbb
xchg
aaa
xlat
mov
add
js
jmp
or
enter
addl
jae
cwtl
loop
incl
dec
adc
packsswb
push
arpl
rcrb
sarl
mov
mov
inc
jo
inc
add
je
cmp
pop
add
mov
jl
mov
outsl
fisttps
xchg
idiv
add
cmpl
add
xchg
mov
push
xchg
cli
shll
sbb
xchg
inc
std
add
out
sbbb
je
adc
push
and
xchg
mov
cmpl
xchg
lods
sbb
xchg
daa
mov
inc
add
inc
dec
inc
jae
jge
jae
push
mov
call
sbb
adc
pop
mov
out
push
add
xchg
fwait
decb
dec
or
push
daa
cmp
jmp
adc
shr
shrl
add
inc
cmpsl
sbb
ret
adc
mov
inc
cmpsl
or
xchg
or
add
adc
out
sub
call
inc
xchg
cmp
inc
mov
sub
cmp
adc
leave
out
add
call
dec
xchg
inc
addr16
inc
mov
lea
dec
in
sar
add
mov
lea
mov
fnsave
imul
out
xchg
loope
call
aam
inc
idivb
int
test
or
test
cmp
nop
sbb
std
jbe
jb
call
push
pop
or
pop
mov
add
cmp
push
mov
dec
fldl
and
add
adcl
sbb
xchg
andl
outsb
fmuls
pop
xor
sbb
xchg
xor
movsb
test
loopne
or
add
aad
add
test
add
or
fwait
sub
dec
add
lret
inc
add
or
pop
enter
mov
clc
test
add
adc
inc
cmp
std
call
mov
xchg
mov
or
adc
xor
mov
out
gs
xchg
lock
mov
cmp
adc
add
sarb
adc
xchg
xchg
add
adc
cmp
dec
jns
xor
or
daa
mov
push
mov
add
paddw
scas
lds
pop
adc
fnstenv
mov
cmpsb
inc
or
in
out
mov
pop
cmpb
iret
pop
fwait
stos
stos
sti
jecxz
stc
pop
in
test
stc
cmp
rclb
cmp
dec
mov
pop
fwait
lods
jmp
inc
jo
shrl
ss
sbb
mov
add
add
mov
sub
aaa
popa
cmp
jge
sbb
stos
pop
insb
xchg
or
loop
add
subb
sub
mov
xchg
add
mov
clc
loop
ret
clc
push
movsb
in
xchg
mov
push
stc
ljmp
test
bound
inc
add
daa
or
xchg
sub
mov
adc
dec
int
add
adc
mov
adc
mov
and
or
scas
or
cmp
mov
call
sbb
jmp
push
std
loop
lahf
call
jmp
inc
clc
xlat
xchg
mov
pop
loope
and
and
add
imul
dec
mov
subl
add
jmp
sbb
call
inc
push
mov
mov
jge
xchg
add
add
add
insb
outsb
mov
xchg
jp
add
jg
lods
cld
or
mov
pop
mov
xor
inc
sbb
mov
or
add
sbb
add
add
jno
adc
std
out
mov
push
daa
enter
xchg
add
sbbl
test
jae
daa
cmp
or
xchg
and
add
adc
std
mov
sub
add
mov
adc
add
push
cmp
push
mov
pop
adc
and
mov
scas
daa
rorl
cmp
mov
xchg
movsb
inc
jae
pop
inc
mov
mov
in
fstpl
add
std
arpl
in
hlt
test
mov
add
sub
mov
add
sbb
aas
mov
es
cmp
stos
loop
add
jecxz
jmp
shl
sarb
jb
cmpsl
add
add
movsb
cmp
sbb
lods
frndint
fimuls
xor
mov
aam
inc
xchg
sbbl
add
inc
std
adc
jno
xchg
add
hlt
add
push
andb
or
push
popf
inc
fimuls
add
mull
or
aas
add
jg
fidivs
and
es
sbb
pop
xor
dec
jge
inc
je
mov
mov
popw
mov
rcrb
xchg
jg
out
loop
cld
pushf
sub
bound
sub
adc
cmp
sub
adc
xor
insl
xchg
xor
rclb
or
shlb
std
xchg
inc
inc
ret
cmpsb
or
mov
std
outsb
and
test
xor
or
jo
std
add
movb
pop
cmp
int
clc
cli
push
push
out
cmp
cmp
pop
jo
jb
decb
jns
add
mov
cli
jmp
pop
imul
cmp
inc
cmp
or
mov
push
ljmp
add
movsb
decb
cmp
std
call
out
imul
cmp
inc
jnp
or
push
mov
jle
inc
jmp
add
nop
das
adc
push
repnz
jg
movsl
or
test
std
stos
sub
punpckldq
inc
mov
mov
pop
or
jnp
imul
xlat
cmpsb
cmp
fwait
mov
push
xchg
dec
add
or
add
adcb
pop
xchg
daa
push
xchg
inc
loope
adc
cli
or
xor
aas
mov
sti
repz
gs
push
out
add
push
ss
loopne
pop
inc
inc
sarl
push
movsb
fldl
ss
push
jl
sbb
add
jmp
scas
mov
xor
cmpl
xor
sbb
xor
xchg
add
jg
cs
xor
xchg
sbb
add
add
mov
loopne
adc
fidivrs
sub
movb
ljmp
std
outsb
jecxz
pop
jmp
lds
lock
call
mov
pop
int
andl
xchg
ja
add
mov
out
icebp
sti
push
roll
std
shrb
iret
mov
add
jmp
mov
add
pop
sub
mov
xchg
std
sbb
loopne
call
xchg
enter
imull
std
add
scas
out
jp
cmp
add
psrlw
jp
std
das
in
add
push
push
data16
fs
ljmp
jmp
mov
jp
clc
or
stos
hlt
cmp
icebp
pushf
sti
jp
and
jge
or
mov
add
cli
jmp
xchg
push
imul
ljmp
or
test
clc
xchg
and
xchg
xor
rcrl
out
mov
cmp
popf
test
fcmovne
out
es
add
ret
sarb
mov
sbb
mov
sbb
xor
lcall
add
daa
mov
pcmpeqw
mov
loopne
add
xchg
xor
flds
sbb
push
inc
push
push
jl
inc
sub
or
xchg
add
xchg
sbb
rorb
out
popa
add
cmp
mov
out
xchg
xor
and
pop
out
sar
xchg
lret
inc
sti
pushf
inc
pusha
rolb
jbe
sub
jle
mov
mov
push
sub
cmpsl
subb
lods
jns
jle
insl
adc
sbb
jno
pop
mov
jae
xor
ds
cmpsb
add
jns
xor
fiadds
dec
sub
mov
mov
fildl
add
dec
adc
mov
adc
jns
popf
lds
leave
xchg
add
sbb
or
jmp
rorl
mov
push
mov
inc
or
adc
mov
movsb
ret
addl
shlb
mov
adc
xchg
sub
repz
sub
mov
je
std
insb
xlat
std
orl
add
add
cmp
jmp
pushl
sbb
add
jb
cmp
data16
imul
and
dec
bts
decl
dec
mov
mov
mov
out
mov
add
mov
fildl
jb
cli
jg
inc
cmc
cmpl
mov
loope
cmpsl
dec
in
xorb
std
push
mov
stos
insl
lods
add
mov
dec
xchg
leave
and
lods
call
pop
pop
jnp
and
ret
xor
leave
mov
pop
jo
orb
pop
jp
cmpsl
test
loop
jne
mov
pushf
push
test
xchg
mov
sub
mov
adc
negl
cld
subl
std
pop
xchg
sbb
or
xchg
scas
and
mov
xchg
adc
add
jp
pushf
sbb
add
pop
jmp
add
jns
mov
imul
sub
cs
aam
les
out
mov
lock
push
jmp
add
adc
out
or
icebp
inc
sbb
cmp
fadd
ss
add
decb
out
inc
shr
xor
out
je
icebp
inc
movsl
push
addr16
idiv
pop
aad
push
std
jge
orl
std
jmp
inc
push
xchg
sbb
push
sub
cli
xlat
rolb
mov
mov
cmc
mov
jmp
add
jmp
fldt
subl
add
pusha
shrl
or
movsb
lahf
daa
mov
add
jb
xlat
or
xchg
divl
cmp
mov
inc
add
dec
adc
cmpsl
jo
jmp
xor
inc
es
adc
add
gs
inc
xchg
addr16
cmpxchg
cmc
ljmp
cmp
or
imul
or
push
jmp
adc
add
jge
stos
dec
adc
imul
gs
cmp
out
jo
roll
movsb
cmp
sbb
and
aaa
pop
add
roll
xchg
and
arpl
jge
fs
adcb
daa
or
cmp
mov
mov
add
mov
add
adc
mov
sub
jg
in
repz
adc
or
pop
add
cmp
sub
lret
mov
sti
fistl
add
sbb
or
cmp
xlat
add
mov
mov
bound
ljmp
sbb
push
aas
add
cmpsl
cmc
arpl
add
jl
and
cmp
repnz
mov
clc
out
mov
adc
sbb
in
or
jg
cmpsl
scas
add
mov
enter
jp
daa
data16
jnp
pop
mov
hlt
push
jle
fdivr
test
shll
inc
loopne
sub
xchg
fwait
jns
push
inc
or
push
and
cld
jl
and
jmp
lods
mov
or
xchg
add
cmp
mov
rorb
imul
adc
mov
push
cs
rcll
rorl
in
xchg
incl
add
push
jmp
lods
sbb
lods
and
subb
jmp
mov
xchg
cmc
mov
cltd
arpl
add
fstpt
scas
push
addl
cmp
or
mov
and
xor
jb
ret
or
fidivrl
popa
in
add
xor
sarb
lock
stc
jmp
jnp
cld
sub
in
inc
es
mov
cli
jle
and
mov
lock
push
mov
roll
push
sub
aas
xchg
inc
addr16
sar
mov
sti
add
insl
stc
mov
jge
pop
sub
fldcw
add
js
add
cvtps2pd
or
inc
adc
data16
repz
daa
inc
or
mov
call
pop
add
add
repz
adc
inc
mov
hlt
sub
adc
aad
aaa
dec
inc
mov
cmc
or
push
daa
sarl
xchg
ja
pop
jnp
adc
cs
add
fisubrs
jne
pause
push
stc
ret
mov
mov
stos
pavgb
jb
push
lods
fldl2e
out
clc
pop
testb
inc
mov
and
xor
out
sub
mov
int
stos
testb
negl
mov
stos
ret
xchg
out
addr16
cmp
stos
call
loope
jae
jb
or
stc
out
sahf
and
insb
push
repz
add
mov
dec
sbb
cmp
sbb
inc
std
cwtl
add
jmp
js
pop
jge
or
aaa
pop
shll
orl
out
add
mov
xlat
dec
std
stc
cmp
mov
jns
cmpl
or
add
sbb
mov
sarb
aaa
or
adc
jns
aaa
add
in
adc
pop
adc
sbb
loope
ss
mov
or
je
xchg
sub
dec
cmpl
movsb
in
cmp
cmp
or
negb
inc
in
and
loopne
mov
pop
add
jne
cwtl
jmp
or
jmp
hlt
cli
jne
in
or
out
pop
sahf
mov
add
push
cmp
push
shr
add
lods
dec
add
and
push
js
shl
pop
call
sub
xchg
jg
xchg
mov
add
sub
mov
sub
mov
aaa
xchg
out
mov
cmpb
fwait
inc
adcl
mov
jg
cmp
sub
add
mov
inc
or
sti
dec
aas
addr16
mov
ret
or
out
add
cmc
pop
mov
sti
sbb
xorb
movsl
and
mov
adc
fisubs
adc
ret
mov
xchg
jmp
inc
and
xchg
adc
jne
xchg
add
xchg
push
cltd
or
out
mov
xor
fldcw
adc
jmp
clc
cmp
sbb
mov
testb
sahf
call
xchg
xchg
sbb
sbb
and
sub
test
mov
mov
daa
and
stc
sub
or
cmp
mov
std
inc
or
incb
out
insl
out
std
cs
imull
pop
lock
mov
mov
add
cmp
cmpsb
test
std
jne
add
jo
add
xchg
inc
inc
cmc
xchg
add
jmp
adc
add
icebp
jle
dec
loop
jnp
or
jb
repz
jle
shll
pop
or
and
addb
decl
test
hlt
cli
ljmp
pop
pop
add
andb
loope
inc
test
mov
cmp
imul
cmp
call
add
incl
xor
inc
imul
xor
mov
outsb
test
or
and
xchg
xor
sbbl
push
and
adc
sub
test
jmp
ss
adc
add
xchg
adc
addl
add
xchg
dec
mov
icebp
mov
movzbl
xor
cwtl
or
daa
adc
jnp
cmc
fsts
lahf
sarb
add
xchg
loop
adc
add
or
xchg
dec
mov
pop
and
in
sub
adc
hlt
push
and
or
add
push
adc
and
mov
daa
imul
jmp
add
pop
add
aas
or
movsb
sbb
ljmp
pop
adc
jg
mov
sbb
imul
repnz
dec
daa
lahf
add
add
pushf
dec
fadd
fiadds
or
call
mov
in
cmpl
imul
or
cwtl
fsubp
mov
fwait
xchg
sbb
and
roll
add
out
nop
add
mov
int3
xlat
shl
or
call
mov
sti
or
fiadds
mov
push
cwtl
fsubrp
xchg
jl
cmp
imul
cmc
or
out
xchg
add
fisubl
adc
ret
rolb
sub
roll
fistl
adcl
cmp
xchg
inc
jge
cld
add
xchg
cmp
cli
pushl
jne
jmp
mov
sbb
ret
xchg
add
roll
mov
sbbl
incl
mov
das
xchg
inc
jge
jl
test
cmc
cli
pushl
inc
popa
jne
jmp
xor
inc
in
adc
xchg
jmp
pop
outsl
sub
rcl
inc
mov
or
mov
push
or
icebp
or
or
std
sbb
adc
in
jge
xor
xor
ljmp
shlb
ljmp
xor
sub
or
adcb
adc
popf
sbb
loopne
adc
rolb
or
mov
xchg
leave
add
adcb
mov
mov
push
xchg
add
out
or
mov
sbb
push
filds
xor
popl
jge
out
mov
jno
pop
scas
fimull
sti
adc
jno
jecxz
cld
mov
roll
push
lock
mov
xchg
ret
pop
jecxz
iret
push
adc
cli
xchg
in
add
pop
mov
aaa
mov
mov
bound
subb
lock
aad
lahf
add
fdivrs
sahf
jg
stc
xchg
add
and
sbb
or
and
and
and
and
mov
cld
xchg
scas
add
push
cmpsb
add
std
adc
adc
scas
mov
mov
adcl
roll
xchg
sub
adc
push
cltd
test
add
mov
xchg
or
cmp
jno
inc
data16
std
xor
jne
jecxz
addl
pop
add
xchg
jle
inc
test
addl
or
cmc
addb
add
test
stc
cli
ljmp
inc
adc
cmp
jl
call
ss
push
or
inc
cli
cli
cmovnp
test
cli
cli
andl
or
jg
cli
incl
sub
lahf
add
clc
cli
aas
cmp
ror
sub
movsl
or
adc
std
andl
adc
iret
or
sbb
cli
xor
add
mov
aas
sub
dec
mov
mov
sbb
mov
cmpsb
sbb
mov
test
lahf
or
add
addl
lret
bound
std
pop
pop
push
or
add
ret
in
cmp
or
out
mov
lds
cltd
adc
push
movsl
jge
or
lea
repnz
fmull
xchg
add
or
xchg
fmull
xchg
xor
adc
pop
adc
pop
mov
adc
fcmovnb
movsb
in
add
pop
mov
int3
mov
sbbb
pop
push
adc
mov
daa
sub
shll
test
rcl
test
jge
leave
mov
std
ficomps
mov
fwait
add
add
mov
jnp
test
jns
aad
dec
push
or
push
aas
mov
out
and
push
mov
stos
xor
cmp
jmp
adc
sti
out
cmpb
cmc
add
out
lods
adc
pusha
aam
cmp
mov
add
insl
mov
std
notb
mov
les
add
cwtl
add
outsb
jmp
adc
mov
cmp
test
mov
test
ljmp
std
or
mov
or
std
mov
and
dec
push
js
jmp
les
cmp
jnp
idiv
cmp
push
cli
ljmp
mov
repz
adc
test
cli
ljmp
inc
adc
push
std
cmp
or
mov
out
mov
adc
sti
add
sbb
pop
sbb
mov
inc
add
sub
dec
push
add
jne
or
sbb
and
adc
sbb
call
loope
ds
mov
fnstenv
mov
fwait
mov
fwait
ja
nop
popa
flds
std
andl
mov
pop
bound
nop
add
and
push
insb
inc
inc
sti
lret
cmc
mov
mov
add
xor
xchg
inc
inc
or
push
scas
add
and
or
cmp
sub
out
pop
arpl
add
addr16
out
shl
cmp
popf
mov
hlt
nop
add
xchg
rclb
call
in
or
adc
test
add
jmp
loope
adc
into
dec
cmp
or
push
or
or
js
std
insb
push
sti
andb
incl
out
pop
ret
add
mov
subl
lahf
and
push
sbbl
lds
mov
inc
jmp
xchg
sbb
stc
cld
jl
js
xchg
xchg
add
xor
or
push
add
lds
out
shl
insb
cli
mov
repnz
jne
icebp
jne
xor
dec
cmp
inc
lods
pop
push
test
in
or
mov
in
dec
or
add
add
push
mov
or
xchg
incl
mov
xor
add
mov
and
push
mov
sbb
jne
pushl
add
dec
cld
jne
mov
ljmp
call
add
cmp
xchg
sbb
mov
in
lahf
sbb
add
mov
and
jae
sub
fucomi
out
or
mov
push
sbb
jae
push
cmp
or
mov
mov
fdivrs
std
adc
incb
dec
push
or
call
mov
pop
mov
jmp
loop
sbb
pop
add
leave
adc
xchg
jmp
sahf
cmp
test
add
adc
inc
out
xchg
out
adc
jle
add
xchg
add
mov
push
in
mov
xchg
movb
add
jae
lods
es
xchg
fiadds
mov
xchg
xchg
ja
adc
cld
gs
fwait
sbb
xor
adcl
jnp
jo
add
punpckhwd
inc
xor
outsb
or
jl
in
pop
jmp
xchg
movb
add
xchg
lahf
stc
cmp
add
cmpsb
add
xchg
call
cwtl
inc
push
out
add
add
iret
or
lahf
or
shl
push
or
xchg
jg
jmp
mov
in
std
cmpsb
mov
or
xchg
ja
int
mov
mov
mov
jo
adc
or
hlt
add
lea
jb
or
xchg
lea
inc
out
std
inc
sbb
clc
call
mov
dec
adc
cld
mov
cwtl
rorb
jmp
sti
jne
or
add
push
cld
jne
dec
jmp
xchg
lret
call
jo
or
gs
incl
cli
jmp
sub
xchg
ret
faddl
ss
mov
mov
test
xchg
aas
icebp
mov
mov
cld
xchg
in
in
cmpsb
sub
out
jo
hlt
or
cmpb
add
adc
jp
js
jl
jo
xchg
and
cmp
mov
mov
sbb
mov
repz
popa
adc
es
push
test
dec
adc
sbb
sbb
add
xchg
xchg
sbb
mov
sbb
mov
sbb
pushf
adc
add
xorl
mov
adc
nop
mov
repnz
add
jns
ljmp
jns
out
or
xlat
hlt
pop
xchg
jmp
add
inc
rolb
push
fsubl
mov
mov
std
sub
lds
add
es
mov
add
lods
movsl
xchg
fwait
jnp
or
hlt
xchg
xchg
xchg
sbb
das
mov
insb
inc
cltd
jge
add
lods
push
outsb
enter
jmp
mov
xchg
xor
movsb
stos
add
mull
sbb
out
xchg
mov
mov
into
jle
jmp
aas
jg
cltd
mov
gs
xchg
ja
std
xchg
sbb
xor
sti
out
lahf
jge
pop
rcrb
add
xchg
add
test
xchg
add
ja
add
loope
aas
add
pop
xchg
add
addb
hlt
mov
xchg
repz
xchg
inc
lcall
jge
add
jo
xor
xchg
add
add
inc
or
jge
addl
hlt
sbb
lock
fsub
sbb
les
lds
add
add
in
push
add
test
sub
add
outsb
or
add
push
cmp
mov
xchg
inc
add
mov
pop
sbb
jle
ds
and
and
cwtl
and
mov
pop
mov
or
push
sbb
sbb
fisttps
jae
arpl
jae
ret
pop
inc
stc
out
cmc
or
sbb
sbb
andl
add
jno
add
xchg
xchg
sbb
adcl
mov
pop
std
xorl
add
xchg
jmp
xchg
or
and
adc
je
dec
dec
xchg
adc
xchg
pop
and
lahf
pop
add
xchg
xchg
aas
or
in
orl
std
pop
add
adc
xchg
jne
adc
add
pop
repz
or
sbb
mov
jne
adc
add
int
mov
or
jbe
out
cli
jae
add
mov
add
int3
fisttpl
jle
ror
cmpsb
ret
mov
lea
shll
or
cli
ret
arpl
adc
test
loop
daa
sbb
jbe
adc
add
xchg
ja
icebp
mov
call
add
out
or
mov
lea
cli
or
jb
sbb
sub
mov
pushf
mov
inc
fstpl
jae
jg
std
push
call
lea
into
add
sbb
mov
and
out
add
xchg
enter
add
icebp
lods
repz
jo
mov
test
call
lock
icebp
pushl
adc
clc
pop
pop
out
jns
movsb
jo
cmp
imul
dec
cs
cmp
mov
stc
cli
cmp
clc
or
jbe
and
aas
and
add
mov
addr16
cli
jne
test
incl
push
jmp
stc
jo
aad
xlat
cli
jg
wrmsr
arpl
add
cs
daa
inc
sbb
mov
add
jecxz
outsl
lret
idivb
jno
push
cmp
loope
test
push
std
cmpsl
sub
xchg
popf
leave
cmp
arpl
idivl
in
or
or
and
xor
mov
out
pop
divb
out
and
push
sbb
mov
inc
call
push
insl
xor
adc
std
jecxz
mov
imul
jb
call
hlt
mov
jecxz
daa
or
lret
incl
sbb
out
adc
leave
pop
jge
enter
fildl
mov
xor
addl
stos
call
arpl
sub
mov
test
add
or
cmpl
fcmove
outsb
or
leave
cmpsl
jp
pop
and
xor
cmpsl
out
push
imul
push
and
jnp
and
mov
and
sbb
xchg
sahf
and
push
xchg
add
paddw
sti
jb
jg
xlat
jle
cmpl
les
in
push
in
inc
jl
xlat
or
sti
add
cld
cs
repnz
nop
xchg
mov
or
shl
cld
push
dec
pop
or
cltd
mov
xchg
test
fdivrl
cld
jb
and
jo
adc
sub
push
jmp
clc
add
loopne
add
pop
insb
loop
xchg
in
add
mov
mov
mov
add
outsb
cmp
mov
add
inc
imul
sti
jne
sar
dec
sbb
adc
ja
lcall
or
lods
jne
sti
test
mov
push
push
add
movb
movsb
inc
and
xchg
sub
inc
test
inc
adc
and
aaa
pop
adc
jg
cwtl
add
bndstx
aas
cmp
pop
call
adc
cmp
push
mov
add
into
push
mov
jmp
jae
jg
fsubs
inc
in
push
xchg
jmp
inc
xchg
lds
stos
outsb
dec
clc
lods
movsb
adc
sbb
cld
arpl
bound
jmp
adc
xchg
jae
or
loopne
hlt
mov
adc
inc
mov
js
scas
jmp
adc
je
sti
add
jne
jmp
rcl
add
rcll
clc
out
xchg
xchg
sub
sub
mov
filds
or
sti
xchg
cmp
or
test
mov
ret
inc
jnp
sbb
add
stos
pop
jno
add
sti
fistpl
or
xchg
pop
push
jne
add
or
ja
call
imul
mov
out
es
jb
adc
add
push
addl
jecxz
call
call
xchg
lret
mov
inc
cmp
out
adc
in
add
inc
jb
sbb
jmp
or
out
add
add
cmpl
cld
xorb
cmp
sbb
loop
dec
sub
cmpb
movsb
test
dec
xchg
sti
mov
movsb
test
or
mov
sbb
or
or
sti
and
dec
mov
in
test
or
adc
xchg
cld
or
jle
or
lods
std
decl
xor
sarb
or
adc
cld
jge
pop
insb
jp
lahf
add
jg
ja
sbbl
insl
jle
or
adcl
popf
or
or
xchg
clc
and
jbe
xchg
je
int3
mov
add
std
cld
out
mov
sub
vpaddb
mov
or
cld
pop
scas
pcmpeqd
xchg
mov
jmp
negb
pop
dec
xor
out
add
int3
mov
ja
or
adc
call
xor
nop
loope
jmp
inc
fimuls
adc
daa
incb
add
js
push
cmpsb
adc
sbb
mov
dec
push
js
divl
add
jmp
into
in
std
push
shl
outsb
neg
std
in
add
inc
push
sub
add
xlat
inc
inc
xchg
mov
inc
xchg
roll
adc
add
add
std
inc
xchg
daa
adc
inc
xchg
dec
add
inc
xchg
ja
inc
xchg
leave
lret
inc
xchg
jge
inc
xchg
icebp
mov
inc
xchg
jecxz
inc
xchg
sub
mov
add
xchg
add
adc
roll
push
add
jl
add
jp
add
pop
push
add
pop
push
add
and
add
cmp
repnz
aam
push
add
push
add
push
add
push
add
cld
add
xlat
add
add
add
add
add
rcl
add
insl
std
inc
add
test
inc
add
add
add
add
add
or
movl
sbb
sub
inc
add
addb
pop
cmp
xor
jb
cmp
jp
cmp
sub
cmp
imul
add
cmp
add
aas
cmp
jnp
cmp
out
sub
cmp
jp
cmp
mov
cmp
and
cmp
add
add
push
pop
gs
or
push
or
adc
iret
sbb
mov
sbb
mov
sbb
and
and
mov
and
mov
pop
es
mov
sub
inc
dec
xor
dec
and
sub
xchg
sub
mov
das
ss
cmp
cmp
pop
xor
dec
shll
ds
daa
inc
inc
xlat
sbb
dec
nop
add
add
dec
lock
add
add
inc
xchg
jns
inc
xchg
mov
into
inc
xchg
cli
mov
inc
xchg
sbbl
xchg
push
mov
inc
xchg
mov
nop
inc
xchg
dec
addl
jne
xchg
outsb
insl
inc
xchg
pushf
fs
xchg
lret
xchg
or
xchg
add
xchg
pop
inc
inc
xchg
pop
cmp
xchg
sbbl
xchg
aad
inc
xchg
push
sbb
xchg
jnp
inc
xchg
ret
xchg
std
add
xchg
mov
inc
xchg
mov
lret
arpl
add
jae
add
jae
add
arpl
add
arpl
add
jae
add
jae
add
xlat
add
xlat
add
jae
add
xlat
add
push
add
jae
add
in
jno
mov
push
in
cld
push
lock
push
cld
cmp
push
or
or
inc
mov
enter
jns
movsl
push
dec
call
sahf
shl
or
stos
sti
ljmp
fimull
icebp
or
add
push
adc
xor
push
jb
cmp
add
push
out
in
xor
decl
ret
add
jp
sti
cmpps
mov
sti
ljmp
xchg
mov
je
sub
cli
jmp
sti
jmp
and
in
ret
mov
clc
mov
inc
add
inc
push
jle
je
sub
cli
jmp
xchg
in
mov
add
ja
cmc
loope
data16
add
lcall
rorb
push
aas
adc
xchg
data16
sbb
int3
or
cwtl
push
xchg
aas
add
out
data16
sbb
and
add
add
dec
roll
inc
mov
nop
xchg
cmp
add
in
xchg
mov
pusha
pop
xchg
mov
mov
push
push
ret
xchg
das
cmc
cld
mov
mov
pop
inc
jo
arpl
lock
mov
test
push
jne
mulb
lods
or
fcos
and
jp
jae
lock
mov
call
cmp
add
and
notb
jp
ja
lock
push
xor
jg
push
sub
out
in
or
out
mov
outsb
cld
jg
xchg
and
mov
into
or
sbb
jmp
clc
and
xchg
jo
adc
add
stc
xchg
je
les
inc
cmp
xchg
xor
cmc
xchg
sub
jmp
mov
add
cs
in
xchg
add
pusha
sbb
std
sub
std
jmp
sbb
mov
mov
jno
push
std
call
jmp
add
shrl
mov
in
cld
into
lods
adc
push
xlat
or
bnd
push
repnz
mov
sbb
call
cmc
xchg
hlt
push
lcall
ljmp
dec
outsl
mov
mov
lcall
cmp
add
jns,pt
ror
cli
adc
xchg
test
js
jno
daa
call
add
cmp
std
in
add
or
adc
xchg
jl
adc
xor
lods
pop
cmpsl
pop
stos
mov
call
or
sub
xchg
mov
enter
xchg
push
dec
adc
or
add
sbb
lret
outsb
add
lret
sbb
push
or
into
cmp
jg
call
aam
cwtl
dec
test
nop
repnz
cld
pop
adc
cmp
mov
mov
lret
icebp
cld
add
fcoms
add
mov
jle
jmp
add
movb
sarl
cmp
add
in
in
xchg
clc
pop
dec
mov
je
add
std
jle
ret
cli
loope
add
sub
or
outsl
add
test
add
out
fdivp
pop
dec
push
js
decl
inc
jl
call
bound
jle
xchg
add
cmpsl
xchg
jmp
out
add
imul
sbb
xchg
jo
adc
call
jb
inc
ss
into
add
and
int
cmp
cmp
jle
adc
fldcw
fistl
xchg
call
cmp
cld
outsb
jecxz
andl
jmp
fs
cld
inc
lods
add
mov
lahf
data16
push
xor
test
aaa
movsb
dec
outsl
add
jbe
add
clc
pop
cmp
repz
addr16
cld
jbe
or
int3
lds
mov
sbb
mov
incb
xor
push
mov
sar
jmp
decl
icebp
or
push
nop
psllq
int
cmp
sti
ljmp
jbe
lock
cmpsb
inc
cld
jmp
lea
ljmp
cmp
mov
decl
aam
sub
shrl
jmp
in
mov
add
lahf
pop
jae
push
jne
std
lret
lret
outsl
lcall
xchg
sub
mov
adc
cmp
daa
loopne
xchg
jmp
add
jb
push
scas
aas
jae
in
out
cmpl
jmp
sbb
jnp
cmp
clc
xor
cwtl
add
movsb
test
fwait
dec
mov
call
ror
jmp
xor
es
mull
and
shrl
mov
mov
clc
imul
clc
sub
push
and
mov
and
into
sub
clc
imul
stc
es
lock
mov
add
sub
imul
shlb
push
jl
jg
shlb
cmp
dec
sbbb
inc
out
sub
add
dec
add
jle
push
nop
push
jo
and
push
add
fists
daa
ljmp
mov
je
rclb
pop
inc
mov
loop
in
faddp
sub
xchg
add
popf
in
sub
mov
repnz
jae
ficoms
lret
xchg
addr16
pushl
cld
pop
js
xlat
ficomps
mov
jp
fnstenv
fnstenv
int
cld
and
daa
std
pop
xor
adc
rorl
add
cmp
jmp
xchg
inc
ret
call
js
or
xchg
adc
jge
push
out
jbe
xchg
sub
sti
pushl
push
push
loop
sti
cmp
aas
sti
jmp
add
jle
incl
xchg
sbb
jge
sbb
add
insl
pop
andb
jne
sbb
dec
or
idiv
in
jne
out
jg
aam
in
cld
xchg
mov
jmp
sbb
je
pop
push
inc
std
or
pushl
sahf
jns
clc
mov
xor
shl
out
xor
stos
jmp
mov
or
mov
xor
jmp
mov
call
test
xlat
pop
hlt
in
push
int
loop
jae
xlat
add
pop
sub
orb
sbb
dec
add
xchg
add
cmp
popa
cmp
pushf
sti
adc
jmp
adc
mov
mov
ret
xor
jo
sbbl
daa
call
jb
add
rcr
sbb
clc
ss
xor
inc
xchg
subl
arpl
sub
ljmp
out
ds
sahf
ljmp
cmp
lods
mov
ljmp
mov
adc
jns
insl
mov
jo
cld
call
push
xchg
pop
dec
sub
xor
jp
or
push
add
jmp
push
add
sub
inc
int3
add
or
jae
lods
movsl
add
pushf
movsl
fcoms
shrl
sub
cld
adc
jmp
cmp
jmp
jae
push
fs
cld
call
or
jno
push
sub
je
jg
call
cld
mov
gs
call
mov
jno
xor
adc
ds
out
add
mov
jmp
add
out
into
mov
add
add
cltd
sbb
pop
sbb
sahf
mov
inc
icebp
dec
push
pushl
sub
inc
mov
test
addr16
cld
add
and
push
mov
addr16
xchg
mov
adcl
push
xchg
mov
push
fcomps
loop
jle
inc
pop
call
fdivrs
ds
sub
cmp
loopne
mov
lock
pop
jae
adc
hlt
add
jo
pop
xchg
in
pop
or
mov
jne
xchg
mov
shr
incl
pop
add
fidivrl
nop
push
shll
sub
cld
scas
js
jb
pop
in
test
fsubrl
xchg
in
or
mov
cmp
sbb
push
cmp
add
fsubs
std
pop
loope
ds
mov
jecxz
lahf
stc
jno
inc
inc
jo
pushf
pop
bound
pop
pusha
ds
jne
rcll
jmp
add
fstp
lea
aad
mov
ljmp
push
or
dec
sahf
out
clc
pop
jno
sub
fldt
rcrb
cmp
jp
call
jno
mov
xor
dec
cmp
push
add
sub
sub
insb
push
push
cmp
std
js
andl
add
jae
enter
xchg
push
rcll
icebp
aas
jmp
push
push
xorl
repnz
icebp
repnz
je
out
loope
fdivr
je
out
icebp
mov
mov
xchg
add
test
add
sub
sbb
or
xor
pushf
adc
mov
mov
je
daa
add
jbe
daa
je,pt
daa
sub
xchg
std
ljmp
add
mov
lds
in
dec
leave
pop
dec
incb
xor
ss
add
push
xchg
das
leave
aam
hlt
je
cmpb
rep
or
adc
or
xchg
std
add
or
xchg
push
ds
mov
jge
xchg
out
mov
iret
pop
cmc
adc
in
adc
jmp
cwtl
jg
fwait
out
jp
xchg
out
cmpb
gs
insb
inc
xchg
sar
ret
aas
daa
std
sbb
mov
or
mov
mov
out
push
sahf
daa
cmc
ficomps
imul
in
sbb
insl
pop
shrb
add
out
cltd
push
fucom
cltd
jmp
push
inc
xchg
sbb
mov
test
mov
xlat
clc
out
jbe
popf
jecxz
rcrb
bound
test
push
arpl
sbb
mov
push
testb
mov
rcll
pop
push
add
dec
or
mov
mov
or
sbb
sub
sub
xchg
add
mov
out
push
std
out
shl
pop
testl
fadds
in
cld
call
sbb
test
loopne
aas
clc
jb
rolb
sarb
sub
or
cld
aas
sbb
clc
ret
inc
loope
ret
shr
xor
sarb
or
add
adc
or
out
das
adc
xorb
push
or
es
pop
shrl
test
jg
js
adc
dec
adc
adcb
pop
jne
jg
jp
testl
cli
mov
popf
ret
pop
int
jecxz
jg
xor
outsl
popf
jl
je
popf
ret
jl
jb
mov
and
or
add
incl
jbe
and
cmp
push
pop
jae
push
add
lds
xchg
or
mov
sbb
jbe
sti
jmp
xor
pusha
lds
fcmovu
cld
jmp
add
jmp
in
or
xor
add
mov
cmc
ja
daa
add
fsts
loopne
push
sub
xor
mov
sbbl
dec
mov
cmp
dec
push
or
fsub
push
pusha
adc
pop
sub
or
add
jp
call
lock
push
fcoml
fsts
loopne
jl
inc
xchg
andl
fwait
test
sbb
lods
adc
cmpsl
aas
cmp
push
movsb
std
xor
or
scas
mov
hlt
add
sbb
xchg
out
add
mov
push
cmp
sti
or
out
pop
xchg
subb
push
push
xchg
dec
jmp
add
adc
push
add
add
fsts
lock
out
bound
mov
ds
jb
hlt
sub
or
jmp
je
jb
sbb
pop
mov
dec
fwait
adc
inc
xchg
inc
jmp
add
pop
bound
cmpsb
dec
aad
jb
jae
dec
aas
mov
repz
xlat
add
jno
inc
or
xchg
cmp
pop
push
jb
sub
mov
or
push
add
test
push
pusha
cld
jmp
mov
cld
inc
cld
sub
dec
jg
mov
icebp
jae
ss
clc
cmc
cld
jg
mov
pop
push
sti
jne
mov
pushf
outsb
inc
add
shl
ljmp
repz
or
aaa
or
inc
call
aaa
idivl
mov
js
pop
pop
fs
call
cmp
push
adc
aam
adc
aad
xchg
lock
fcmovnbe
pop
mov
pop
stc
xchg
pop
sbb
add
adc
or
dec
add
xchg
jbe
mov
int
jb
xchg
test
xchg
call
ret
jne
out
cs
add
inc
add
test
insb
adc
pop
cmp
add
movl
fisttps
cwtl
xor
adc
sbb
in
xor
in
out
mov
call
push
jne
rcll
adc
and
push
sbb
cld
mov
xchg
notl
ljmp
aad
pop
mov
mov
shrb
pop
movsl
xchg
xchg
shl
pop
orb
test
aad
fcmovnbe
mov
or
cmp
outsl
das
cmp
sbb
add
fildl
movb
cmp
loope
int
xchg
adc
xchg
jge
or
fwait
scas
call
subb
inc
inc
cltd
or
ss
sub
adc
jae
out
xchg
add
out
xchg
or
jb
add
cltd
sub
ljmp
cmp
inc
ds
fidivrs
cli
mov
jno
mov
add
call
mov
mov
std
xchg
mov
pop
mov
mov
sar
cmp
incb
sti
sub
addl
add
mov
test
add
je
jg
or
or
aas
cmpsb
lock
or
sub
ret
test
sti
jle
jmp
add
aam
push
xor
mov
out
inc
cmp
jo
xchg
push
lcall
repz
js
xlat
mov
fnstsw
push
sbb
pop
in
lea
xlat
mov
mov
rcrl
aad
cli
adc
pop
add
or
dec
dec
call
add
mov
pop
push
in
sub
aam
std
xor
std
and
dec
icebp
mov
dec
or
aad
push
aam
add
ss
out
pop
cwtl
pop
mov
or
loop
pushf
dec
lret
add
inc
inc
jl
dec
mov
xchg
and
cmpsl
mov
out
mov
sbb
rcrl
push
dec
in
mov
xor
cs
cmp
xor
cs
mov
testl
rcll
add
int
cs
dec
je
sub
dec
data16
push
add
cmpsb
adc
inc
xchg
jnp
push
pushf
sub
roll
cld
sbb
mov
adc
adc
bound
xor
stos
nop
add
sub
jmp
subl
add
and
xchg
push
sarl
pop
fs
push
cs
fcompl
jmp
xchg
inc
jmp
pop
inc
icebp
roll
push
fmull
ljmp
sub
push
mulb
les
mov
xor
cmp
repz
push
and
adc
jge
adc
pop
inc
add
js
dec
push
pop
sti
lcall
adc
cmpl
fnsave
call
push
mov
add
dec
jmp
inc
std
cmpb
inc
call
clc
add
add
adc
cmp
jno
pop
add
jne
mov
mov
xchg
lcall
lgs
dec
pop
cmp
push
lret
cmpl
add
xchg
push
xchg
test
fmuls
ljmp
inc
pop
les
cs
pop
movsl
cltd
add
gs
cmp
xchg
pusha
push
cld
sbb
std
jecxz
aam
out
das
mov
xor
inc
cmc
sub
clc
mov
ret
shll
push
fsts
shll
adc
dec
mov
xor
or
mov
add
out
popa
add
push
jmp
push
fcomi
push
xchg
adc
add
xchg
ss
jbe
iret
jge
sub
xchg
jno
insb
mov
cs
int3
out
in
cmpsl
add
repz
icebp
stos
add
and
xor
repz
icebp
mov
insb
ret
inc
lock
inc
mov
mov
ret
es
mov
inc
int3
push
or
stos
int
jmp
je
push
sbb
adc
dec
add
cmp
add
sbb
jns
sbbl
rorl
int
inc
jmp
adc
jge
push
or
lcall
mov
int
add
xchg
add
mov
cmp
pop
xchg
cmpl
stc
adc
in
mov
jns
std
push
cld
add
mov
xor
add
mov
mov
test
add
int3
cld
push
imulb
inc
or
sub
aad
jae
cmp
scas
sti
xor
out
or
or
xor
fs
inc
add
mov
rclb
mov
sbb
sbb
std
scas
jno
inc
out
cli
ljmp
jbe
in
stos
mov
mov
call
xchg
add
adc
inc
xchg
push
push
lock
fnstcw
mov
or
movsb
add
xchg
push
cmp
xchg
xor
dec
inc
fdivl
iret
jb
dec
lods
cld
bound
in
jg
incb
outsl
lcall
lret
push
push
or
or
dec
sbb
arpl
jb
pusha
dec
clc
outsb
movsl
cs
push
xchg
jge
cld
imul
aas
xchg
add
cwtl
jg
add
push
outsl
jnp
mov
jae
test
mov
imul
lret
call
rolb
cwtl
add
jnp
out
les
push
cmp
xor
pop
test
xchg
adc
rol
loopne
push
hlt
out
es
mov
push
push
lret
in
inc
and
hlt
lret
cmpsl
add
or
mov
shlb
sub
mov
pop
add
sahf
pop
push
mov
sub
dec
push
cld
js
insb
xlat
dec
add
insl
fmuls
int3
pop
sub
jmp
dec
push
add
dec
or
imul
xlat
add
mov
imul
stc
outsb
pushl
test
jl
jmp
xor
add
xchg
xor
or
cmp
hlt
bswap
adc
or
insb
or
cmp
call
add
jns
add
cld
mov
push
fstpt
or
add
add
sub
movsl
or
lods
cld
add
add
rolb
enter
push
sub
add
push
clc
outsl
stc
jmp
adc
cmp
cmp
call
mov
add
add
mov
lea
adc
adc
jo
lods
cld
jb
dec
call
xchg
loope
inc
insb
cltd
add
popf
inc
std
jecxz
lds
pop
adc
or
addl
xchg
mov
jb
push
mov
mov
push
or
and
push
cwtl
iret
lret
cmpsb
test
sbb
cld
jnp
pop
fs
sbb
lcall
stc
pop
mov
push
aam
lret
pop
int3
cld
ret
add
flds
mov
sbb
pop
je
sbb
xchg
and
add
arpl
das
mov
xchg
add
aam
jle
test
lret
mov
push
mov
int
das
cs
loopne
out
xchg
mov
out
jl
jecxz
or
call
mov
outsb
mov
insb
addr16
int
adc
pop
xchg
jns
add
rcll
in
sti
aas
test
js
fadds
and
adc
sub
pushl
xlat
push
cmp
nop
cmpl
jmp
xchg
dec
and
outsl
in
call
stos
les
test
add
fadds
cmp
add
pop
ss
jb
hlt
les
add
jmp
mov
add
dec
fs
enter
xor
aas
jmp
sbb
in
sti
mov
jo
movsb
pop
and
shlb
mov
mov
mov
mov
jo
add
shl
xor
sti
jne
test
sti
jnp
xchg
xor
out
dec
inc
push
jmp
mov
lock
aad
adc
adc
mov
push
mov
ret
cmp
enter
add
cld
cli
ja
or
mov
int3
cmp
call
xlat
push
sbb
cld
push
xchg
es
rcll
jle
add
add
xchg
out
fldcw
daa
adc
iret
leave
jb
inc
fdivs
inc
cmp
in
test
cld
rcrl
cmp
lea
pop
int
mov
xor
cld
mov
pop
dec
xchg
fstps
adc
push
lods
arpl
add
cld
in
mov
dec
jl
push
std
imul
ret
push
int3
cld
loopne
jb
pop
cmp
push
or
cld
daa
cmpsl
inc
out
sub
sbb
push
test
dec
mov
in
sbb
adc
stos
je
imul
add
dec
test
xor
pushf
lock
inc
xchg
sub
adc
ret
dec
mov
jne
ret
dec
fadds
xor
add
push
nop
ja
leave
and
xchg
enter
sti
jecxz
sbb
out
adc
push
or
std
arpl
sub
jbe
clc
push
leave
leave
sbb
rcl
cld
scas
ret
or
inc
or
lds
inc
loope
call
dec
cld
jle
cmp
xlat
dec
dec
add
cld
call
jmp
xchg
dec
xor
push
mov
sub
inc
push
jmp
inc
mov
xor
cmp
or
cmp
add
dec
adc
hlt
imul
xchg
sub
xchg
push
cld
ds
jge
push
mov
je
add
or
xchg
je
add
jae
jge
mov
cmp
sub
mov
inc
std
or
sti
xor
std
cld
incl
in
inc
in
inc
roll
std
std
into
cmp
jmp
inc
cmc
imul
das
sub
add
mov
call
jmp
sbb
xchg
ljmp
xchg
xor
push
xor
add
add
sub
hlt
pusha
ret
pop
out
pop
adc
jb
push
xor
sbb
and
mov
test
pop
dec
and
pop
aas
jmp
decl
jae
push
imul
jae
and
str
add
in
adc
aad
shr
lea
jns
add
inc
imul
iret
jns
mov
bnd
aam
int3
in
mov
add
inc
xlat
dec
fwait
mov
cld
adc
mov
enter
or
push
insb
into
xchg
jb
nop
mov
clc
or
scas
dec
nop
xor
shl
stos
subl
popf
fcom
movsb
shlb
xchg
roll
push
jg
inc
dec
dec
add
ds
test
push
gs
ljmp
mov
inc
add
pop
mov
jne
dec
lret
push
mov
hlt
iret
push
mov
hlt
mov
pusha
jb
scas
push
sub
aas
push
lahf
negl
push
push
push
aaa
imul
cmp
cmovno
mov
outsb
in
out
fdivrs
call
inc
add
ds
xchg
test
fnstcw
lahf
movsb
mov
mov
xchg
mov
das
add
cwtl
les
xchg
out
repnz
push
sub
lock
notb
sub
in
test
cmp
stc
cli
ljmp
jmp
jp
icebp
cmp
testl
cmp
lds
jmp
lret
imul
call
mov
lods
mov
lods
and
es
push
mov
add
push
xchg
cmp
cld
xchg
bound
mov
mov
add
ljmp
rorl
add
xchg
push
dec
and
push
push
add
mov
cmp
add
xchg
paddw
cmp
push
mov
push
mov
sbbb
cld
inc
push
ret
test
adc
xorb
cld
fs
pop
cmp
ljmp
xchg
fistl
stc
dec
out
std
jae
inc
pop
setbe
add
sub
mov
test
dec
xchg
add
lret
out
mov
shl
sub
icebp
pop
xchg
lods
mov
lods
ror
push
sub
imul
out
push
pop
nop
rcll
adc
push
inc
aaa
push
or
inc
fadds
xchg
call
add
add
test
sub
test
cli
mov
mov
je
mov
insb
pop
fmull
cmp
test
mov
orb
outsl
imul
mov
aaa
push
stos
add
mov
jp
dec
dec
ljmp
xchg
cmp
jg
mov
adc
mov
dec
call
xlat
sub
cmc
outsb
aam
add
sti
pop
aam
push
loope
adc
jmp
or
incb
jge
incl
sar
pop
std
push
mov
std
call
jmp
lea
bound
jno
stc
xchg
mov
jge
ret
popl
push
push
sub
mov
ljmp
test
cmp
xchg
push
lea
clc
call
push
sti
adc
je
cld
andl
test
add
out
lea
pop
xor
dec
add
push
mov
pop
inc
clc
inc
and
mov
xor
jb
call
adcb
stc
mov
sub
out
mov
js
xchg
add
and
push
inc
in
mov
shrl
sbb
pop
insl
fdivrl
jmp
mov
inc
add
lods
mov
inc
xchg
sbb
pause
push
lea
fcoms
sub
dec
pop
add
movsl
int3
aam
jb
adc
mov
inc
xchg
add
push
adc
sub
sbb
add
shl
sbb
out
pop
scas
pop
ds
sbbl
cmp
inc
xchg
test
xchg
test
mov
mov
mov
or
nop
iret
mov
add
scas
mov
clc
dec
add
sahf
adc
mov
inc
pushf
cmp
test
decb
add
mov
dec
inc
cs
add
push
push
sbb
scas
mov
add
cmp
lock
sub
aam
sbb
shlb
push
push
inc
fldenv
scas
inc
add
jle
rcrl
in
sub
inc
add
add
cmp
jbe
or
jns
inc
add
adc
ss
mov
sbb
and
mov
add
xor
test
dec
add
ret
push
inc
mov
mov
mov
xor
enter
inc
dec
dec
add
ret
push
push
add
out
lahf
or
adc
insb
push
call
cmpsb
rorl
mov
xchg
cmpsl
mov
adc
add
loope
add
pop
push
std
test
push
shlb
lea
sbb
or
insl
les
rcrb
add
push
incb
xchg
xchg
push
pop
add
sldt
push
test
jo
push
push
out
fstl
xlat
mov
mov
loop
mov
sbbb
int3
shrl
add
mov
test
movsb
pop
es
cmpsl
clc
mov
ret
mov
add
or
xchg
stos
or
push
mov
fsin
out
dec
push
add
cmp
push
shr
inc
out
adc
jl
add
jl
addl
outsl
mov
mov
les
mov
add
sub
idivb
out
pop
cmp
inc
test
mov
fsubrs
test
lcall
in
jae
add
xchg
xchg
add
add
or
jge
fiadds
add
xchg
andl
arpl
jmp
and
or
test
cld
push
sti
jno
stos
sbb
clc
jmp
xchg
add
pushfw
call
sbb
movsb
add
sub
bnd
hlt
mov
in
aas
jmp
icebp
cld
std
decl
sub
and
std
ljmp
mov
ljmp
in
std
xchg
sar
mov
add
push
fbstp
mov
mov
adc
cmp
pop
add
fildl
imul
xor
std
xchg
jecxz
mov
imul
loopne,pt
cmpsl
add
fisubrl
aas
lock
in
or
jo
adc
or
adc
add
mov
or
or
in
out
test
add
das
mov
jle
dec
xchg
cmpsl
mov
sub
das
fcoms
stos
test
movsl
lock
push
fwait
mov
es
sub
data16
sahf
xor
add
adc
rcll
add
fbld
mov
xchg
add
or
clc
inc
jmp
ucomiss
add
jge
mov
sbb
divl
std
scas
xchg
addb
mov
push
mov
cwtl
je
loopne
pop
inc
test
nopl
mov
jmp
xor
nop
or
xchg
xor
call
push
pop
push
cs
andl
mov
out
lods
jge
pop
lret
cwtl
pushf
ds
add
fs
dec
bound
aas
std
pop
test
jb
pushl
ljmp
jns
shll
scas
cmovo
and
jp
xchg
pop
mov
mov
xchg
add
sbb
enter
xchg
lock
pop
mov
inc
add
adc
mov
imul
mov
loope
mov
and
clc
jmp
xchg
mov
aas
jns
add
cs
clc
add
sub
jne
inc
mov
jne
inc
insl
ja
or
movsb
inc
add
ret
ljmp
mov
xchg
jle
and
leave
xchg
add
push
pop
repz
mov
jmp
add
sub
xor
ljmp
out
sti
push
es
dec
push
push
pop
call
add
testl
push
push
push
pop
add
mov
mov
int3
test
stos
sub
lahf
push
std
rcrl
cld
les
in
lds
xor
mov
jle
xchg
xor
scas
jno
xlat
xchg
in
push
inc
xor
ds
push
in
loop
jg
fadds
push
add
fistps
jb
jne
inc
inc
mov
aam
or
add
mov
mov
and
jl
ja
lods
jmp
dec
push
mov
add
sbb
je
adc
cmp
out
lret
test
dec
adc
test
xchg
push
cmpsb
aaa
mov
popf
sbb
test
aam
scas
movsl
push
inc
xchg
add
out
repz
insb
mov
test
aaa
lods
push
popf
decl
inc
out
mov
add
mov
stos
adc
in
push
push
push
jb
in
mov
fiaddl
mov
fdivrs
je
jle
jge
repz
inc
add
mov
subl
push
adc
mov
sar
cld
scas
add
mov
sbb
inc
lods
push
xchg
mov
dec
pop
jb
inc
rcll
xor
sub
es
dec
inc
jo
subb
nop
cmp
inc
lods
jae
cltd
adc
aaa
push
outsb
sti
add
xchg
popf
inc
je
clc
jg
and
jae
adc
jno
lock
ds
push
jle
jl
dec
je
mov
in
add
sti
xorl
cmc
jmp
push
lea
cli
ss
pop
ljmp
pop
jmp
xor
or
scas
add
adc
ret
sub
pop
aas
cmpsb
cld
mov
cmpb
add
or
xchg
popf
xor
iret
pop
sbb
jb
aad
add
popf
cmpb
jmp
xchg
add
add
jno
jb
push
inc
or
addr16
mov
scas
adc
lds
or
popa
loopne
sar
fisttpl
or
cmp
dec
int3
iret
inc
inc
xchg
xchg
jg
jo
push
mov
dec
dec
sbb
sbb
lods
xor
sbb
rep
cld
jecxz
xor
xchg
jnp
js
jns
pushf
add
nop
jne
adc
adc
hlt
sbb
cwtl
test
dec
jo
xchg
fwait
dec
sbb
add
shl
rolb
add
fsubs
mov
inc
out
or
cmpsl
mov
scas
dec
out
jno
sbb
fnstcw
test
sbb
push
aaa
js
mov
add
mov
and
mov
add
addb
fsubrl
push
sbb
cmpsl
mov
rcrb
mov
or
outsl
adc
cs
call
out
adc
inc
add
out
xor
sbbl
xchg
ljmp
sub
jnp
out
call
insb
int3
fcompl
mov
and
add
jns
sbb
pop
insb
pushf
jecxz
jmp
add
test
cld
testb
mov
adc
inc
jmp
je
sub
shll
mov
daa
dec
cmp
push
add
jecxz
add
imul
push
sti
mov
incl
jle
push
incl
loope
sub
or
aaa
mov
test
jmp
push
xchg
dec
out
and
mov
sub
inc
sbb
decb
adc
aad
jmp
ljmp
inc
mov
aam
add
and
push
ss
xchg
cld
ljmp
test
xchg
xchg
add
test
jge
mov
inc
dec
mov
xchg
out
ja
sbb
test
xor
jae
push
sub
je
push
insb
jns
add
dec
call
adc
iret
dec
cmp
cmp
mov
dec
les
pushf
mov
data16
and
cmpsl
xchg
fwait
mov
add
xor
lea
pop
pushf
push
pushf
add
xlat
pop
sub
inc
dec
adc
fmuls
inc
aam
pop
inc
mov
jae
xchg
push
stos
mov
lcall
jne
cmpsl
push
ds
xchg
add
push
shll
jl
inc
xchg
push
jecxz
fistps
push
rcrl
fistpll
test
push
sbb
mov
pusha
add
xor
and
ds
push
hlt
jg
movsb
cld
jmp
lods
movsl
cld
jbe
clc
psubsw
movsb
mov
leave
or
test
or
jg
adc
xchg
ja
out
out
jne
cs
nop
cld
xlat
add
sarb
movsb
cld
push
hlt
jnp
push
add
xlat
add
add
or
scas
cld
test
cld
call
or
insl
fs
lds
push
aaa
call
pop
push
jge
push
and
adc
jmp
mov
jae
xor
or
shl
call
lods
loope
mov
stos
ret
stos
sti
inc
jno
inc
or
add
or
mov
or
jno
pop
js
daa
push
jo
in
data16
jl
cmp
xor
xchg
push
sti
je
repz
mov
push
ljmp
scas
xlat
arpl
jmp
xchg
addb
push
push
pop
mov
jl
cmp
xor
sbb
lcall
cmp
push
int
mov
xor
sbb
add
xchg
outsl
inc
movsb
xchg
in
or
test
pop
shl
adcb
dec
cs
mov
mov
movsb
cld
sbb
sub
cmpsl
cmp
push
add
call
lds
sub
sbb
rcr
int
lods
cmpsl
push
rclb
add
je
cld
sarl
jecxz
sbb
mov
repnz
sub
xchg
dec
mov
jp
cld
jno
push
shll
out
add
sub
sub
xor
add
xchg
movsl
adcb
in
push
mov
inc
in
aaa
sbb
fnsetpm(287
sysenter
scas
add
pushf
cld
gs
adc
cli
xlat
cmp
add
clc
xorb
add
filds
cmp
and
push
mov
inc
cmpl
insb
xlat
adc
push
pushf
call
in
or
ds
dec
pop
jmp
pop
cmp
arpl
aad
data16
hlt
imul
add
scas
add
cmp
das
sarb
in
scas
ja
sub
cmpsl
inc
cmp
xchg
addb
outsb
cli
incl
add
add
or
ficompl
imul
in
add
mov
out
pop
push
and
cmpb
pop
cmp
scas
inc
add
fisubs
call
add
sti
adc
or
ret
jge
incl
sub
xchg
je
jg
test
je
sahf
sub
out
xchg
mov
call
inc
in
sub
xchg
cld
adc
ds
sbb
jne
call
in
mov
loop
mov
jmp
push
std
dec
jae
stc
add
push
movsb
adc
jl
xchg
cmpsl
add
pop
gs
mov
sub
add
inc
adc
jo
xchg
cmpsl
add
jmp
movsl
sbb
or
add
add
xchg
sbb
bound
xchg
add
jb
add
add
mov
adc
add
add
cmc
sbb
data16
xchg
add
xchg
clc
pop
xor
sub
mov
adc
out
shl
jbe
mov
jle
movsb
popf
sti
ud1
fbld
xchg
mov
xchg
or
mov
mov
insb
insb
incl
popf
mov
and
cld
push
popf
or
aaa
fwait
cld
jmp
and
daa
inc
roll
je
adc
data16
or
mov
pushf
cld
jo
nop
subb
add
jmp
or
in
cli
or
cmpl
jg
add
pop
loope
hlt
incl
cmpl
fstpl
inc
cmp
jge
incl
jo
subb
out
in
push
or
dec
in
mov
mov
je
mov
decl
imul
push
lea
into
add
jge
in
out
lret
pop
sti
mov
add
add
inc
lock
mull
cmp
fstpl
js
cmpl
xor
std
call
sbb
aaa
or
push
xchg
add
scas
loope
test
add
sbb
mov
dec
dec
jne
push
cmp
cwtl
cld
inc
cmovne
punpckhbw
mov
fwait
mov
movsb
push
inc
lock
mov
ret
mov
mov
inc
in
sbb
lret
aas
js
mov
mov
add
inc
lock
jae
mov
aaa
stos
xchg
pop
pop
mov
mov
nop
push
adc
cltd
jno
test
roll
mov
and
popa
aas
cmpsb
add
rcrl
and
sarl
in
lahf
sub
out
pop
aam
inc
cmp
stos
popa
aad
sbb
ss
jno
lods
xchg
adc
inc
mov
stos
in
jno
lock
sbb
sbb
mov
test
mov
mov
xchg
jne
inc
pop
adc
sub
nop
out
inc
xchg
cld
inc
lds
cld
push
shrl
stos
xchg
xchg
adc
data16
jno
test
pop
inc
jmp
xlat
add
outsl
jo
notb
xchg
adc
iret
inc
add
add
or
adc
nop
xchg
jb
and
or
pushf
or
fmul
dec
inc
jmp
mov
inc
pusha
cmp
sub
mov
push
mov
cwtl
in
adc
add
es
and
jbe
clc
add
inc
add
out
jp
je
fdivr
adc
test
hlt
pushl
xchg
data16
or
jmp
mov
jmp
jecxz
mov
stos
mov
std
mov
jne
mov
in
push
incl
imul
jne
adc
jne
or
ficompl
xchg
loope
xor
jmp
sbb
aas
xchg
idivb
ret
das
push
test
test
xchg
repnz
xchg
scas
cmpsl
add
cld
cmpsl
sub
imul
xor
sub
mov
inc
xchg
jbe
adc
add
push
sub
dec
mov
icebp
lret
and
adc
adc
aas
add
pusha
jg
add
xchg
xor
adcl
es
xchg
popf
or
sbb
cmp
xchg
test
fcoml
out
inc
test
out
xchg
add
jmp
inc
out
jecxz
mov
cmpsb
nop
fadds
xor
sub
xchg
sub
adc
push
subb
add
iret
imul
decl
jecxz
imul
out
outsb
add
jg
add
add
xor
or
jno
add
call
insl
rolb
test
add
push
pushf
pop
inc
jmp
ret
nop
jmp
movsl
xchg
ret
in
andb
pop
shlb
add
add
inc
add
mov
invd
bound
push
pushf
inc
das
call
xchg
dec
mov
cs
bound
jb
out
mov
inc
testb
pop
mov
in
jnp,pn
add
shl
das
mov
sti
pushl
in
mov
call
xchg
in
adc
cli
jne
jbe
or
icebp
pop
dec
ja
inc
mov
xchg
push
mov
mov
aas
add
mov
push
call
hlt
shll
and
cld
jae
rcl
dec
xchg
movsb
pop
add
mov
push
out
call
xor
xlat
jle
repnz
xchg
int
pop
or
cmpsl
pop
test
add
pop
imul
add
add
xchg
es
and
test
jge
xchg
test
cmp
test
jbe
test
add
sbb
adc
fsubl
insb
adc
add
add
or
fcoml
and
xchg
add
adc
fcoml
xchg
mov
cmpsl
add
mov
push
add
add
adc
cltd
add
inc
out
outsl
faddl
jg
add
fistl
lods
aas
and
add
fsub
rcll
sub
lods
add
cmpsl
mov
sub
arpl
icebp
dec
push
mov
outsl
aas
mov
imul
clc
sub
add
add
add
xchg
xchg
cmpsl
jae
xchg
add
jl
inc
mov
or
or
jmp
push
jge
gs
add
inc
idivb
sub
xchg
add
or
and
jg
and
xchg
add
int
inc
std
hlt
cmpsl
xchg
jae
je
cli
cmp
add
mov
push
push
cltd
enter
lds
or
or
iret
sub
and
int
cmp
pop
dec
nop
cld
add
add
xchg
scas
fdivr
sub
and
jle
and
add
mull
sbb
jno
callw
mov
adc
iret
and
lea
and
jnp
jmp
adc
ja
and
jge
and
pop
nop
loopne
jbe
jl
nop
cld
je
stos
jns
popa
cmp
pop
mov
jmp
out
int
sti
mov
scas
adc
stos
ljmp
lea
xor
and
sbb
pusha
xchg
and
push
sbb
mov
jge
and
fs
xlat
xchg
cld
jmp
inc
and
rcrl
js
xchg
lcall
sub
xchg
push
pop
jge
cmp
ljmp
add
lods
daa
aaa
stc
stos
adc
push
cmpsb
std
imul
sarl
adc
stc
inc
xchg
fwait
pop
ret
inc
cmp
jns
cwtl
add
jb
xchg
and
jg
sbb
out
xchg
add
pop
push
add
addb
fdivs
inc
add
jno
sti
jle
xchg
fadds
out
inc
out
fnstcw
cld
adc
cld
dec
inc
xchg
fistl
es
mov
outsb
out
xchg
push
test
xor
sub
xchg
fistl
add
inc
add
push
inc
stc
out
call
movsb
or
lret
xor
pop
xchg
sub
add
xor
ljmp
add
push
mov
push
jp
imul
jae
sbb
push
xchg
adc
xchg
push
xchg
sarl
jmp
insl
ja
push
xchg
addb
imul
fnstsw
or
fwait
mov
jmp
jne
out
clc
outsl
sti
test
add
xor
test
xor
cmp
add
mov
clc
adc
or
cli
in
cli
decl
push
call
xchg
je
movsb
aaa
not
andl
std
jg
icebp
pushl
jnp
jno
add
fs
repnz
out
lods
incl
mov
outsl
test
mov
dec
mov
js
stc
mov
call
xchg
jae
stc
fwait
rcrb
lret
enter
loopne
fmuls
rol
inc
js
add
mov
inc
call
sbb
add
jecxz
and
cmpsl
cltd
shrb
inc
and
and
movsb
and
and
mov
jecxz
jp
lahf
dec
pop
popa
push
mov
pop
mov
pop
and
cmpsb
shl
loope
add
pop
pop
sbb
xchg
in
or
jg
mov
imul
clc
pop
inc
mov
sub
mov
mov
out
jnp
out
cwtl
fwait
orl
xchg
xchg
push
mov
adc
nop
cmpsl
in
jl
in
nop
cmpsl
in
fwait
add
in
nop
push
adc
imul
cwtl
jl
call
loopne
dec
mov
in
inc
adc
out
inc
repz
mov
nop
mov
adc
sbbl
add
in
sbbl
test
loop
pop
stc
lcall
push
leave
push
in
dec
push
inc
jmp
filds
jmp
mov
push
shll
call
pop
popf
imull
jge
call
call
js
out
add
rcrl
push
std
into
cmp
sub
stos
mov
push
std
scas
mov
int3
push
xchg
jnp
cld
xchg
add
cltd
xchg
jns
sbb
xor
cld
jge
pop
and
xchg
cmp
xchg
cmp
mov
and
lcall
jp
aad
arpl
ljmp
add
and
insb
mov
lock
jnp
test
cld
cli
out
and
push
out
and
aad
gs
fimull
jno
xchg
andl
add
inc
xchg
xchg
test
xchg
imul
cmp
repz
xchg
mov
xchg
mov
test
push
cltd
add
cli
adc
jae
mov
xchg
cltd
add
adc
add
fsts
mov
inc
cmp
push
xor
pop
push
in
pop
mov
inc
mov
stos
inc
add
fucom
cmove
dec
and
mov
ja
flds
mov
xlat
xchg
inc
lds
xor
lods
test
sbb
or
jg
repz
xor
mov
insl
iret
fmull
fcmovnu
fdiv
fsubs
out
fsts
mov
xlat
fsubr
add
or
sbb
add
inc
sub
repz
ret
notl
fldl
fwait
add
cld
adc
in
xchg
lret
jns
mov
test
mov
jle
fmull
pushf
testl
lods
ret
cld
adc
cld
cmp
mov
das
xchg
sub
mov
push
add
mov
pop
js
push
add
jge
in
or
sub
xchg
mov
js
push
add
lea
call
adc
sub
fwait
sbb
adcb
sarb
sbb
inc
xchg
cwtl
and
je
jmp
in
add
cli
lcall
mov
adc
add
incl
push
das
testb
or
jne
dec
hlt
cld
decl
cmpsb
mov
psubsw
std
cmp
cld
and
or
sti
xor
fs
adc
add
std
cli
push
stc
cmpb
and
pushl
push
add
adc
add
movsb
pop
inc
or
out
decb
add
stos
scas
xchg
and
and
jmp
mov
mov
cmp
xor
cltd
add
inc
sbb
mov
cmp
dec
cmpsb
pop
add
push
inc
repnz
dec
mov
ljmp
hlt
cmpsb
inc
add
add
lahf
add
xchg
inc
rcrb
jge
and
das
sbb
aas
jecxz
jbe
out
imul
jo
add
adc
add
xchg
or
in
xchg
cmpb
cwtl
fsubrl
movsb
cwtl
hlt
lods
add
jno
nop
subl
mov
cld
ds
ja
in
stos
adc
and
inc
xchg
cwtl
or
out
cmpsl
cld
mov
ljmp
scas
mov
xor
dec
inc
jmp
sbb
aaa
xchg
push
add
xchg
mov
in
add
test
jo
xchg
mov
push
orl
adc
or
jne
cld
jmp
push
aas
jmp
loop
call
lret
push
test
push
sub
hlt
andl
add
insb
stos
test
call
add
repz
orb
jbe
aaa
repz
push
lea
stc
incl
lret
call
inc
mov
jno
cmp
lock
xor
out
mov
test
arpl
rolb
aas
add
adc
lea
stc
sti
jmp
sar
xor
push
in
aam
mov
jno
aad
sbb
push
sbb
add
push
test
sbb
repz
xchg
mov
add
daa
aas
std
xchg
and
std
pusha
cmp
inc
lock
sbb
stos
orb
clc
push
lods
popa
out
mov
sbb
xchg
cltd
cmp
push
test
xchg
xchg
push
out
out
inc
cmpsl
sub
jl
cmc
pushf
enter
ljmp
xor
cwtl
mov
xchg
cmp
and
xchg
fistpl
ret
popa
add
out
fsubr
out
in
push
pusha
add
adc
jle
sub
xchg
ljmp
xchg
shl
ret
test
xlat
pop
adc
add
ljmp
sbb
daa
add
pop
inc
repnz
sarl
imul
cmp
test
sarl
jae
shl
out
fnsave
faddl
lcall
int
adc
mov
xchg
push
rcrb
add
test
jns
out
sar
jb
mov
xchg
add
fwait
xchg
add
push
int
jmp
push
jl
mov
jl
insb
xlat
sti
sbb
int
popa
inc
sar
adc
xchg
int
in
inc
jge
insb
push
or
test
inc
mov
cli
push
adc
mov
mov
mov
jno
push
sub
or
subb
cmp
add
xchg
data16
cld
jae
xor
adc
out
rorb
mov
lods
in
fwait
aam
add
or
xchg
std
add
sti
jmp
vaddsd
dec
push
scas
push
mov
call
mov
in
or
rorb
mov
dec
jo
push
pop
push
daa
fisttpll
xor
insl
out
dec
cmp
push
mov
inc
push
femms
sub
push
pop
or
daa
or
ret
xchg
xchg
imul
pop
ret
xor
jle
mov
mov
xchg
imul
std
xchg
mov
fcmovnb
sar
subl
mov
addl
mov
bsr
push
jnp
mov
out
cmp
push
popa
clc
lahf
mov
mov
or
sbb
mov
fiaddl
cmp
adc
inc
pop
enter
movsb
jmp
push
addr16
push
or
shl
lahf
add
add
cmp
cmpsb
clc
dec
out
andb
dec
add
push
bound
adc
pinsrw
inc
call
lcall
mov
adcl
vmread
push
jp
insb
adc
and
es
push
test
or
mov
jnp
aam
xor
jmp
std
mov
dec
shl
adc
out
add
cld
sbb
pop
xor
or
pop
jnp
in
int
lds
inc
sbb
mov
fnstcw
pushl
mov
jl
add
rorl
jno
inc
in
in
test
sti
cmpb
std
mov
dec
in
imul
in
stc
jg
mov
aam
std
ljmp
in
addb
addb
test
clc
mov
std
cld
call
outsb
addr16
add
in
push
aad
js
fiaddl
jno
in
jl
ljmp
adc
inc
rclb
inc
mov
adcb
inc
test
popl
sbb
xchg
xchg
imul
cld
pminub
or
adc
add
xchg
repnz
scas
popa
xor
pop
sub
hlt
and
fildl
add
mov
iret
sbb
add
mov
cmpb
mull
outsb
jne
inc
sarb
inc
cwtl
cmp
mov
call
cmpsb
or
aam
or
rcrb
ljmp
cmp
or
rorb
lahf
test
mov
int3
cmp
js
pop
sbb
ljmp
adc
mov
js
jle
xor
ret
cmp
sub
insb
add
iret
enter
jnp
subl
xor
add
rolb
ja
mov
fdivrl
inc
pop
cs
in
mov
jge
mov
mov
shlb
scas
scas
push
pop
cmp
ret
pop
mov
std
mov
out
bnd
bound
mov
lret
addr16
add
push
xor
push
bound
std
inc
or
out
push
mov
pop
jb
adc
jmp
mov
xchg
call
or
xor
je
mov
xchg
pop
aas
add
lret
push
xchg
iret
push
ds
jle
add
mov
repnz
adcb
cld
mov
mov
and
lock
add
mov
add
mov
call
jg
ja
or
out
sar
jle
call
cld
jl
aaa
ret
stc
sbb
jae
xor
cmp
add
scas
cmp
jne
xchg
dec
movsl
xchg
jmp
outsb
lock
cmc
in
jg
sti
test
outsl
adc
xchg
aam
mov
ds
mov
icebp
into
negl
sub
dec
mov
jle
push
add
xor
repz
jns
jae
jl
leave
in
or
cld
pop
pop
js
leave
add
inc
stc
add
xchg
rolb
cmp
inc
sub
div
cmp
push
std
and
div
mov
push
inc
add
add
insb
mov
cmp
push
jl
xchg
add
add
cmp
jg
add
add
addl
popa
dec
or
mov
add
push
popa
pop
adc
lea
adc
icebp
enter
pop
sub
ret
pop
test
imul
add
rolb
xor
insb
inc
cmpsl
or
push
cld
adc
sbb
adc
ret
sti
jle
lock
push
mov
add
xchg
cmp
sub
mov
push
mov
add
mov
adc
pop
inc
jne
nop
out
jmp
sbb
sti
jb
jbe
ret
or
cmpsb
jae
outsb
jmp
cmp
xchg
xchg
adc
repz
mov
mov
dec
aam
and
std
call
nop
sub
add
lret
push
sbbl
out
adc
cli
ljmp
stc
test
aaa
pusha
add
flds
mov
popa
and
sub
mov
mov
sti
mov
mov
test
das
rolb
ret
inc
push
or
js
cld
ret
sbb
mov
call
mov
jg
add
sub
in
or
std
xchg
mov
or
in
sti
mov
or
sete
jo
adc
out
ss
cmpsb
add
pop
push
roll
fldenv
call
sbb
cmpsl
out
add
testl
mov
adc
jbe
fwait
push
lods
out
xchg
push
and
push
push
std
and
and
movsb
pop
mov
cmp
jnp
inc
cmp
dec
add
push
add
adc
cmp
inc
jb
push
mov
xchg
pop
jne
dec
dec
sar
add
pop
xchg
add
push
icebp
outsl
jno
xchg
jnp
mov
pop
int
fldt
jbe
dec
and
test
ja
outsl
adc
std
int
add
into
mov
arpl
sbb
push
jns
and
outsl
push
out
sbb
outsl
jne
push
and
ja
je
ja
mov
inc
fldl2e
mov
mov
add
outsl
ljmp
and
xchg
add
int
insl
adc
sar
add
and
adc
repz
imulb
cmpsl
loope
clc
out
lcall
jmp
rclb
scas
sub
fistpll
add
orb
aad
mov
push
push
push
xchg
hlt
or
nop
add
imul
adc
enter
scas
sub
out
jns
add
stc
or
cld
call
xor
pop
inc
dec
xchg
inc
rolb
sub
push
cs
push
cmc
in
testl
mov
lods
in
movl
lock
pop
push
mov
fsubl
shl
hlt
xchg
clc
cmpsl
add
mov
repz
test
add
add
roll
add
icebp
out
stos
fmull
or
int
cwtl
add
mov
jge
test
fs
cld
test
std
or
je
aam
ljmp
inc
repnz
iret
imul
xchg
divl
inc
aam
cs
frndint
mov
adc
xchg
faddl
sub
jg
cwtl
push
fdivrp
add
jmp
xchg
mov
add
push
push
sub
roll
sar
loope
jp
dec
fistl
pusha
movsb
add
pop
cmp
pop
jae
push
inc
sbb
inc
mov
jae
mov
ret
add
outsl
clc
daa
sbb
lahf
inc
in
jmp
out
popa
add
rclb
mov
test
fimull
pop
adc
add
adcl
out
lcall
inc
push
daa
cmpsb
sbb
adc
shlb
push
inc
cli
sbb
jno
ja
jo
insb
jae
adc
sti
mov
pop
push
fsubrl
insb
aad
xlat
out
add
pop
pop
xchg
mov
xor
mov
inc
shr
xchg
rorb
add
or
nop
add
jb
jg
jne
jns
sbbb
xor
rcll
call
xchg
iret
mov
pop
push
imul
xchg
add
insl
ja
andl
jno
add
popa
shll
addl
sti
mov
int3
pop
ljmp
sub
test
adc
cmp
jmp
inc
lock
cld
movb
insl
cmp
in
call
int
inc
hlt
jbe
decl
in
xor
xchg
push
mov
dec
or
lock
fisubl
jo
add
lods
std
cli
adc
lock
les
addr16
add
test
pop
push
outsl
jb
jg
std
dec
fidivrl
dec
jb
aas
cmp
outsl
adcl
pop
add
xchg
inc
gs
push
pop
mov
push
add
inc
lret
test
loopne
mov
mov
mov
lods
ljmp
xchg
push
jbe
add
push
add
mov
cld
add
jns
adc
xor
lret
aam
jge
stc
mov
imul
sbb
stc
mov
shrb
xchg
or
jl
push
leave
cmp
xchg
or
adc
add
fiadds
dec
test
out
mov
out
mov
add
call
adc
addr16
in
inc
out
in
jle
outsb
mov
dec
jge
test
lcall
pop
jmp
xlat
repnz
aas
fdivrs
mov
add
pop
fucomip
xchg
add
outsb
addr16
push
inc
pop
sbb
sbb
fs
mov
fcomip
add
adc
or
push
inc
pop
out
sub
lods
fldl
ret
pop
ret
aam
xchg
bound
cmp
sbb
call
jecxz
dec
add
dec
sub
mov
jns
xor
jno
jno
out
imul
idivb
inc
je
inc
stos
jno
xchg
retw
inc
sbb
add
sub
mov
add
in
jno
lds
pop
add
call
cld
dec
jbe
dec
push
cmp
jb
mov
loopne
clc
icebp
or
sbb
les
mov
mov
hlt
pop
xorps
ljmp
cld
std
fldenv
jg
je
jg
pusha
pop
cmpb
sti
andl
arpl
mov
in
xchg
bnd
xchg
push
add
xchg
repnz
lds
incl
add
add
fisubrl
jmp
ja
inc
pop
add
or
push
add
pop
scas
add
add
jmp
sbb
arpl
out
in
call
cld
sbb
and
fs
adc
call
add
in
mov
lock
js
cwtl
push
jns
lods
push
imul
mov
aam
fst
test
fs
icebp
dec
pop
lds
insb
cmp
add
das
es
xchg
in
out
rorb
mov
xchg
fs
call
addl
aas
push
into
mov
sbb
cmp
dec
mov
cld
jmp
sbb
call
hlt
jbe
fstl
push
pusha
fs
les
cld
jmp
scas
push
in
fistl
xchg
add
add
out
in
call
cwtl
add
jb
imul
xchg
jg
divb
call
adc
jae
mov
adc
adc
incb
add
sti
lds
sti
or
scas
jecxz
add
lock
lcall
cmp
dec
add
pop
jg
lds
lea
cld
jo
mov
lock
jge
hlt
cmp
imul
mov
push
xchg
sub
xlat
push
adc
jo
jle
in
add
call
inc
xchg
rol
xchg
push
sub
mov
out
repnz
and
and
mov
mov
jge
in
cmp
dec
adc
xlat
in
sar
lcall
arpl
pop
push
adc
sar
xor
jl
xchg
mov
or
xchg
inc
cmp
cli
add
mov
in
or
xchg
data16
jo
xchg
add
push
add
pusha
data16
std
jae
or
jmp
inc
pop
hlt
and
sbb
aam
and
push
add
cmp
jl
cmpsl
data16
ficomps
and
xchg
adc
aad
jp
push
outsl
mov
mov
adc
es
outsb
jnp
pop
and
xchg
subb
pusha
popa
imul
iret
out
xchg
pop
mov
add
cmp
mov
jmp
cmp
push
mov
cmpsl
cmpl
xchg
push
inc
rclb
add
jae
testb
pop
ret
adc
call
fcompl
movsl
sar
cmp
or
jmp
xchg
add
xor
shl
insb
test
push
subl
ret
inc
pop
adc
xchg
jmp
shlb
add
roll
jbe
flds
jle
adc
mov
cmp
sti
pop
dec
decb
push
call
add
or
lahf
sti
cmp
je
ret
mov
add
add
mov
insl
in
mov
fadd
call
out
add
sub
pop
cld
dec
adc
aam
insl
add
jne
mov
xchg
cmpsb
xchg
hlt
adcl
cmp
mov
std
out
add
repz
push
cld
xor
sub
mov
daa
pop
mov
lods
cltd
in
or
pop
sub
push
pop
push
pop
imul
jle
xchg
addr16
shll
cld
push
rsm
pop
and
lret
xor
dec
or
add
xchg
cmc
das
push
sbb
int
inc
addr16
mov
push
sti
mov
mov
add
sbb
xchg
xchg
cli
pop
out
add
sarl
xchg
rcrl
mov
or
fisttpl
cmp
jmp
add
add
lcall
add
aaa
jmp
add
sbb
xchg
add
mov
xor
cld
push
addl
xchg
add
mov
xor
dec
mov
cli
mov
sbb
add
push
xchg
roll
cmpl
push
pop
mov
pop
cld
jmp
push
in
call
cmp
cld
jmp
xchg
add
jmp
jnp
xchg
pop
cld
jmp
xchg
add
push
fdivr
call
cwtl
add
ficomps
ljmp
cld
jmp
adc
or
push
mov
adc
cmp
cli
xchg
add
lahf
pop
pop
or
arpl
ret
mov
pop
incl
add
push
xor
mov
cld
lcall
icebp
or
or
adc
add
shll
add
add
add
cwtl
adc
jae
inc
out
out
imul
inc
out
push
add
es
mov
std
lcall
cltd
std
jge
xor
cmp
xchg
lock
xchg
pop
pop
adc
push
sar
jmp
cmp
cld
dec
in
xchg
add
sbb
mov
add
cld
imul
test
ret
lcall
mov
add
mov
insb
add
xchg
xchg
inc
inc
inc
add
repnz
jmp
cmpsl
add
mov
pop
pushl
cmp
mov
in
push
dec
jae
aam
push
xchg
addr16
imul
sub
les
jmp
out
xchg
test
mov
jmp
add
orl
testb
add
ret
add
rcrl
repz
mov
inc
sub
popl
jno
mov
cmp
pusha
je
jae
jg
out
inc
inc
stos
pusha
stos
jge
pop
sbb
ficompl
insb
clc
ret
xchg
adc
lea
pop
setae
add
add
out
add
add
xchg
mov
jns
add
sub
int3
pop
bound
subl
adc
mov
aam
out
aas
jmp
pop
rcrb
bound
mov
call
push
mov
pop
adcl
addps
movsb
jb
mov
sarb
adc
add
sbb
cld
jmp
das
idiv
out
push
jb
repnz
sti
push
push
xchg
mov
add
inc
roll
mov
dec
push
mov
pop
icebp
xor
in
test
cmp
xor
jecxz
add
add
ljmp
push
in
pop
add
lea
pop
xchg
mov
adc
js
jnp
outsb
push
lock
add
jne
mov
sbb
sub
jne
ljmp
sub
add
xchg
lea
addb
push
adc
fsts
pop
cld
push
adc
sbb
loope
aam
dec
aaa
push
push
sub
inc
std
xor
cld
lret
in
mov
push
xor
push
shrd
ljmp
sbbl
xrelease
loopne
mov
out
sbb
cld
sbb
fcoms
je
mov
jno
mov
mov
xchg
dec
xor
pop
add
xchg
lret
sti
mov
rcl
adc
and
ljmp
xchg
add
adc
or
dec
sbbb
xchg
xchg
pusha
les
je
add
mov
pusha
mov
add
fs
popa
push
or
push
lret
clc
mov
or
andl
push
rcll
inc
std
fadds
jo
add
push
jge
push
push
mov
cwtl
femms
cwtl
add
pop
mov
ss
rcl
dec
xchg
fbstp
mov
push
jo
add
inc
popf
push
gs
push
je
adc
pop
pop
pop
test
call
lret
push
ret
push
std
aam
add
adc
or
aad
out
outsl
push
cld
bound
cmp
xchg
xchg
sub
std
es
fs
imul
cmp
xchg
jns
stos
out
fiadds
jnp
xchg
add
add
inc
out
push
inc
imul
data16
push
inc
pushf
out
sub
add
data16
cli
cmp
add
jge
gs
mov
adc
stos
sarl
sbb
cli
pushl
jo
mov
testl
mov
xor
stos
jg
cli
in
inc
or
add
stc
repnz
xchg
jmp
add
mov
push
push
cld
sbb
jmp
subl
rcrl
adc
sbb
add
xchg
testl
ja
ficoms
inc
xor
xor
cmpsl
imul
lret
ror
imul
fsts
push
pop
mov
add
in
push
std
sti
mov
mov
cmp
or
push
push
cmpb
fucom
add
fists
test
insb
cld
dec
cld
pop
mov
push
fadd
xchg
xchg
pop
call
cld
out
or
imul
jmp
add
mov
mov
inc
push
sti
movsl
shl
push
xchg
pop
add
add
mov
add
add
mov
out
xchg
std
jecxz
sbb
out
xchg
mov
testb
push
inc
cmc
mov
add
add
mov
or
xorb
add
pop
cli
add
xchg
shl
aaa
je
mov
out
das
push
mov
jns
call
in
cld
into
add
cld
xor
subb
dec
adc
pop
sar
call
push
cwtl
dec
fcmovbe
addr16
cwtl
add
call
shlb
jns
dec
subl
add
movsb
push
std
fsubl
adc
inc
inc
data16
mov
push
out
incb
fisubl
mov
sti
xchg
push
mov
cld
push
add
iret
mov
jl
jnp
mov
add
jl
add
inc
sti
add
inc
hlt
out
std
ljmp
xor
mov
dec
add
mov
clc
movb
push
das
std
cmp
mov
lcall
mov
adc
jge
sti
add
cli
xchg
popa
push
mov
mov
add
sbb
add
push
scas
and
add
dec
lock
xlat
lahf
sbb
xlat
xchg
adc
adc
test
mov
data16
fwait
insl
test
push
jmp
hlt
gs
loopne
pop
imul
add
xchg
out
adc
movsb
pop
adcl
ljmp
cmp
mov
add
add
xchg
xlat
pop
xor
cmp
ja
add
push
push
push
xchg
fisttpl
add
mov
ja
add
ficoml
jmp
pop
adc
xchg
add
ret
addl
inc
xchg
add
inc
jns
xorb
add
add
mov
in
sub
out
or
repnz
aam
mov
and
xchg
jns
mov
adc
add
xchg
pushf
call
in
dec
xor
adc
jno
add
pusha
and
mov
xchg
add
adc
xchg
fiaddl
ficoml
fwait
int
dec
cld
jmp
xchg
ja
lds
inc
addl
clc
mov
and
daa
cmpl
fadd
and
out
mov
mov
add
ret
and
ljmp
add
cld
dec
push
mov
add
xchg
mov
test
test
in
ret
mov
add
add
add
jp
andb
add
add
add
dec
test
es
mov
int
jge
mov
jp
data16
mov
je
mov
lahf
stos
inc
cld
mov
clc
xchg
push
add
and
aaa
pop
add
pop
jge
cmp
dec
cld
and
inc
jb
icebp
jecxz
xchg
pop
mov
adc
add
xchg
mov
mov
adc
add
xchg
mov
and
call
rcll
dec
add
rcrl
or
pop
add
aad
repz
mov
stos
les
inc
icebp
sbb
mov
xchg
push
add
adc
add
xchg
pop
test
adc
add
inc
jae
fiadds
mov
dec
cld
das
add
fbld
add
ljmp
cld
and
or
aad
or
repz
ret
int3
or
nop
into
inc
pop
hlt
add
add
jne
mov
dec
in
fadds
out
pextrw
dec
dec
xchg
sti
mov
ljmp
test
add
cwtl
out
xchg
push
stos
daa
add
jb
lret
insb
or
pop
inc
adc
cwtl
xorl
add
dec
jne
adcl
call
xchg
ja
xchg
fbstp
jb
int
and
jmp
js
mov
mov
fistpll
jmp
fs
cld
jmp
mov
js
ds
add
sub
pop
mov
push
mov
in
call
add
dec
cld
jb
or
jne
jns
fcompl
cmc
roll
sbb
dec
inc
or
aaa
inc
cld
add
pop
and
inc
xchg
rolb
test
sub
or
pop
in
adc
in
add
sti
pushl
and
push
mov
in
lret
out
inc
cld
mov
add
in
add
add
cmp
and
dec
je
mov
and
mov
cmp
pop
dec
je
mov
and
mov
jmp
xor
and
sbb
pop
test
jge
call
add
sbb
xchg
call
lods
pop
pop
xor
shr
pop
xorb
sub
lret
mov
testl
dec
jle
jg
mov
xchg
pop
jne
call
sbb
pusha
pop
xor
lods
adcb
add
dec
jae
stc
pop
dec
lcall
mov
call
mov
fmuls
inc
jmp
jmp
lret
test
xchg
or
shrl
nop
mov
xchg
sub
int3
out
js
fsubp
stc
xor
out
or
nop
out
xchg
mov
testl
int3
lret
and
scas
inc
sti
jmp
inc
repz
lret
repnz
data16
pop
imull
test
push
add
jns
cmpl
sub
sti
mov
lret
sbb
xlat
ja
xchg
and
jmp
jnp
xchg
inc
inc
adc
push
sbb
jmp
jl
or
jmp
addl
jmp
xchg
add
xor
cld
insl
push
hlt
cmpl
add
jbe
inc
adc
push
hlt
orl
adc
dec
dec
jle
stc
sbb
cld
jmp
add
inc
dec
adc
push
xchg
pop
xor
push
fs
add
xor
lock
ljmp
sti
aaa
cld
mov
ret
mov
std
lcall
dec
adc
add
cmp
test
mov
dec
lods
jle
jo
add
and
jmp
in
mov
lea
clc
ljmp
sti
aaa
add
std
dec
mov
test
cld
lcall
dec
adc
incl
add
mov
and
jmp
adc
xchg
repnz
das
xchg
and
adc
pop
test
pop
dec
pop
sbb
leave
into
push
out
nop
inc
cld
sbb
pop
push
add
add
loop
iret
adc
jecxz
jb
mov
dec
adc
shlb
dec
jb
jp
pop
or
stos
push
pop
jge
adc
lret
push
sbb
int3
dec
pop
jmp
je
sete
or
jmp
cltd
add
cltd
add
shlb
cmpsb
rcrl
push
lock
cmpsb
add
inc
jb
or
mov
xchg
push
cmpsl
subb
in
add
add
ret
dec
mov
adc
add
pop
xor
fcomi
nop
sub
inc
sti
adc
hlt
sbb
aad
out
or
push
imul
jmp
add
out
fsubr
adc
xchg
add
lahf
jae
call
push
pop
add
pop
js
icebp
cs
call
ss
inc
cld
xchg
xchg
daa
insb
inc
sub
test
call
mov
add
cmp
cmp
xchg
add
sarb
xor
fiadds
imul
daa
pop
orb
add
jo
pop
call
push
pop
insb
or
xlat
jno
and
aas
mov
repz
jge
mov
add
push
mov
in
fmull
call
add
ljmp
push
inc
insl
test
or
inc
dec
push
pop
or
add
jmp
and
mov
mov
cld
mov
data16
mov
push
lea
je
xlat
xchg
add
incl
std
mov
add
orl
add
inc
mov
add
add
xchg
cltd
ja
loopne
add
mov
add
stos
add
xchg
das
add
in
jge
xchg
sub
push
insb
dec
call
add
push
xchg
push
add
mov
mov
lea
fldcw
push
outsb
pop
xchg
push
jp
repnz
add
xcrypt-cfb
cmpsl
in
xchg
sub
daa
add
pop
add
cmp
aam
xlat
mov
mov
mov
cld
movsl
js
int3
jno
mov
ss
mov
mov
in
arpl
jo
xlat
jmp
add
adc
add
add
mov
add
out
jo
jle
imul
jbe
xchg
out
xchg
shlb
imul
add
cmp
dec
add
ds
push
xchg
out
xchg
shlb
aas
add
add
sub
push
or
jno
xor
out
adc
add
call
add
mov
xchg
add
jns
ret
cmc
filds
call
add
jo
ljmp
cld
add
int
xchg
add
jmp
stos
ds
jmp
pop
cmp
andb
add
jmp
sub
sahf
mov
mov
add
cmp
decl
xorb
in
jg
clc
imul
add
jo
test
sti
call
sbb
mov
dec
or
dec
jne
cmp
mov
roll
mov
jge
loope
add
mov
add
ret
pop
test
inc
add
add
push
or
pop
sbb
add
cli
sub
add
out
out
in
fsubs
add
pop
add
jbe
add
mov
sub
add
cmp
inc
imul
inc
xchg
stos
adc
inc
jae
dec
aad
fwait
xor
adc
sub
rorb
or
inc
add
test
mov
std
call
adc
inc
adc
out
or
sub
pop
mov
out
cmpsb
or
xor
dec
outsb
out
xchg
sub
call
into
mov
inc
inc
in
xlat
fs
mov
shl
aam
hlt
nop
lahf
lock
fsubrl
adc
add
andb
add
ret
jae
stos
out
xchg
bound
out
push
or
test
xchg
out
cmpsb
sub
xchg
int
popl
dec
jmp
xchg
add
das
jae
cld
push
cmp
iret
or
cmp
push
push
cmp
and
loopne
cld
aam
adc
call
push
xor
mov
xor
aam
sahf
mov
cltd
xchg
ficompl
mov
xor
xorl
in
add
mov
xchg
add
adc
cld
jl
cmp
and
enter
jo
cld
sbb
stc
jmp
jns
sub
cli
sti
decl
cmc
cli
mov
or
mov
mov
cld
incw
xchg
cmp
push
ljmp
mov
mov
lods
cld
dec
call
jb
pusha
adc
cld
test
xor
clc
pop
xor
movsb
dec
jge
repnz
loopne
adcb
xchg
mov
jmp
ret
mov
push
sti
adc
les
cmp
popl
adc
lods
adc
imul
ret
mov
bound
add
push
in
dec
insb
dec
call
rcl
mov
jp
push
ret
sub
push
push
sub
jae
inc
add
jbe
mov
std
mov
mov
imul
xorl
add
push
add
xchg
aaa
fnstsw
loope
cmp
xchg
ror
sbb
daa
add
ds
xchg
aaa
mov
sbb
or
add
sub
mov
jg
push
add
out
movsb
push
adc
stos
pop
mov
out
fwait
shrb
ja
fldpi
rorb
mov
in
push
add
add
push
aaa
mov
adc
cmpsb
insb
test
sti
sub
cmpsb
shlb
push
mov
cld
scas
sub
xchg
daa
add
fdivs
aad
rcrl
adcl
aaa
cmp
aam
add
bound
bound
data16
add
test
push
shll
xchg
lods
add
test
sub
sbb
jg
lahf
xor
or
jmp
imul
xchg
cmpsl
test
pop
push
xor
out
add
add
lods
xchg
std
push
in
fs
sti
mov
fdivrp
cmp
loop
ljmp
add
jo
add
add
add
push
mov
dec
in
outsb
repz
push
test
mov
sbb
cmp
mov
dec
fs
sub
inc
pop
or
pusha
lods
add
cmp
hlt
sti
push
push
call
lock
jo
inc
cmc
adc
or
aam
jae
test
in
sub
cld
sub
mov
pop
xchg
sub
cmp
sbb
cmp
cmp
xor
sar
cmpsl
sbb
std
les
sub
push
add
mov
fcmovu
sbb
sbb
push
sub
mov
scas
rcrl
pushf
inc
jae
jns
rorb
pop
add
jno
adc
jae
cltd
cmp
subps
orb
sbb
add
lods
jmp
ret
es
shr
adc
daa
add
cli
arpl
pushl
cmp
dec
loopne
add
mov
xchg
add
add
out
xchg
xor
and
aam
add
jge
or
sbb
inc
sti
mov
cmpsb
dec
test
ret
test
xor
xor
jmp
andl
jg
mov
test
mov
push
xor
jmp
add
xchg
mov
adc
in
call
stos
sar
mov
call
jge
pop
das
push
inc
add
sbb
cld
jmp
sbb
or
pop
lret
std
mov
lret
push
jns
test
fnstcw
dec
es
cmp
adc
cmpl
cld
jmp
push
xor
add
jecxz
mov
cmp
xchg
ljmp
stc
adcl
xor
rolb
or
mov
inc
mov
mov
sub
jmp
aas
test
sarb
adcb
incl
stc
pusha
incl
in
pusha
incl
mov
add
xchg
ds
adcl
sar
mov
inc
xchg
xchg
aaa
adc
out
bound
mov
add
xchg
pushf
mov
inc
mov
cld
mov
adc
xchg
pushf
inc
jae
lcall
mov
xor
in
es
jne
xor
mov
std
pop
mov
add
xor
push
mov
sub
aam
or
xchg
and
mov
mov
add
mov
in
ds
pusha
iret
ret
stos
jp
out
insb
roll
lea
sar
mov
add
test
add
add
out
sbb
imul
into
pop
nop
adc
mov
cwtl
mov
sbb
sbb
add
sub
int
movl
daa
adc
add
adc
insb
inc
xchg
mov
ss
aam
rolb
iret
or
jno
add
sub
jmp
xchg
add
sbb
sbb
out
les
cld
insb
push
mov
ds
or
mov
cld
imul
in
outsl
cld
xchg
dec
cli
cld
jge
cli
push
adc
call
dec
cs
jb
and
or
or
pop
xor
call
add
cld
jmp
xor
call
test
js
xlat
sub
sti
push
std
mov
hlt
push
inc
lds
inc
lods
xor
mov
dec
or
mov
les
add
pushl
cmovo
mov
push
lcall
inc
jge
pop
and
inc
aaa
pop
push
adc
pop
mov
add
add
lcall
cmp
jne
hlt
adc
inc
inc
cld
mov
jg
cli
lods
hlt
add
add
ret
enter
mov
fists
push
dec
sar
xchg
cld
dec
or
cld
dec
das
xor
loopne
sar
push
add
fwait
mov
sub
inc
decl
mov
add
sub
test
jle
xchg
popf
popa
lcall
test
push
rclb
sbb
adc
sbb
ljmp
sbb
cld
mov
std
out
xchg
flds
add
cmpsb
sbb
adc
add
lcall
jecxz
cli
pop
movsl
inc
xchg
add
jne
lods
adc
add
sub
add
add
inc
mov
lcall
xor
push
repz
daa
sbb
jns
out
sti
push
inc
std
add
mov
mov
enter
jl
out
jns
out
jns
call
xor
sar
cmc
ds
aam
sbb
cmc
decl
ljmp
nop
int
fiaddl
push
enter
inc
pop
jmp
jnp
cmc
in
push
inc
jmp
add
adc
add
sub
pop
loopne
es
das
push
pcmpgtb
mov
sub
adc
mov
incl
xchg
sub
cmpsb
scas
or
sbb
std
aam
or
or
jge
pop
xchg
push
sub
push
xchg
sbb
xchg
add
subl
inc
mov
xor
cmp
repnz
stc
inc
xchg
jno
call
imul
pop
mov
xor
mov
adc
jne
add
out
push
jno
fmuls
sti
adc
adc
mov
in
mov
and
divb
je
add
add
cmc
ss
fcoms
jne
lods
dec
adc
push
mov
sub
sub
sbb
std
mov
jb
or
jb
pop
adc
pop
push
push
adc
inc
sahf
sbb
cltd
aaa
pop
inc
xchg
sbb
mov
mov
mov
mov
hlt
pop
in
push
add
shlb
std
add
das
sbb
xchg
out
call
subl
jnp
clc
cld
mov
adc
xchg
outsl
int
test
aad
push
pop
add
mov
sbb
clc
add
das
pop
inc
push
or
in
inc
insb
aam
push
adc
scas
jp
or
mov
add
rcll
cli
data16
sbb
lds
jno
sar
pop
push
add
aad
scas
divb
test
or
stc
cmp
add
adc
mov
subl
push
mov
lret
lcall
out
cmpsb
test
ret
dec
aad
add
pop
inc
jmp
mov
sbb
loope
icebp
pop
jno
es
stos
mov
jb
push
std
adc
push
push
xchg
mov
call
xchg
push
jle
sti
cld
cld
mov
sar
les
jmp
mov
stos
stos
xchg
cld
push
jb
cli
jae
test
mov
mov
out
mov
sar
xchg
jb
fidivrs
out
inc
sti
jmp
popa
xlat
jno
and
jno
cmp
xor
jge
pop
pop
out
or
push
mov
repnz
icebp
dec
xchg
insl
sbb
incl
cs
mov
or
mov
or
sti
dec
shl
adc
insl
adc
rclb
push
inc
sub
adc
jmp
mov
in
ret
std
pop
lods
add
add
insl
or
pop
or
rclb
inc
xchg
movsb
adc
rorl
pushf
cs
sub
daa
cld
xor
std
mov
in
jb
ss
adc
push
pop
lret
inc
add
arpl
add
jbe
test
loope
aas
shrl
cld
sbb
pop
insb
mov
btc
adc
add
sub
iret
repnz
mov
dec
or
or
cld
add
sub
ljmp
roll
sub
xchg
out
addr16
out
xchg
push
sub
xchg
in
ret
inc
lods
in
imul
cmpsl
add
jmp
xchg
out
cltd
push
stos
fists
sub
loope
das
daa
add
int
sbb
adc
into
xor
pushl
inc
clc
cli
fnstenv
jl
mov
jge
mov
ja
pushl
jge
mov
xchg
rcrl
mov
aad
jmp
sub
jbe
adc
mov
push
and
sar
pushl
push
sar
gs
loope
aad
outsl
mov
xlat
scas
and
push
aad
out
mov
scas
adc
int3
mov
mov
xchg
dec
and
mov
mov
call
fwait
sar
addl
push
shl
in
mov
inc
jmp
lahf
scas
xor
imul
shlb
bnd
jns
xor
sbb
cli
incb
stc
adc
or
xchg
stos
inc
fadds
rorb
repnz
cld
pop
leave
out
add
push
jbe
sub
lock
adc
add
sub
out
sti
test
jo
and
jno
inc
ds
data16
sti
ljmp
mov
push
loopne
dec
call
xchg
mov
pop
push
dec
jg
into
cld
test
mov
rcrl
add
or
mov
test
orb
sbb
add
jb
push
jmp
push
xorb
lods
add
push
inc
aas
or
adc
add
in
std
sbb
xor
call
xor
dec
das
xor
add
xor
xor
add
adc
stos
fistps
sub
mov
imul
adc
shll
test
xchg
sahf
push
add
add
loopne
jo
scas
test
push
fsubs
add
xchg
sbb
loopne
sbbb
in
pop
xor
add
fistpll
adc
and
xchg
add
andl
sbb
aam
stos
add
push
xchg
cli
xlat
ffreep
in
xchg
or
ret
jns
fld
rol
xchg
add
dec
or
clc
mov
cmpsl
ror
test
repz
pop
cmpl
rcr
pop
mov
push
outsl
sub
movsl
cmp
xchg
xchg
sub
roll
pop
out
dec
fidivs
fisttpl
xchg
adc
data16
call
add
jmp
dec
data16
jno
inc
push
mov
xor
jnp
or
ret
xchg
adc
inc
and
sub
dec
add
and
jo
cmp
and
outsb
add
adc
je
xchg
std
ljmp
push
jle
or
dec
sar
jge
mov
jbe
cld
xor
rcrl
std
xrelease
daa
lods
add
ret
lds
decl
pop
addb
popl
add
out
mov
mov
jbe
insb
lea
fmuls
hlt
out
sbb
dec
cmp
daa
jns
js
add
xchg
mov
add
push
mov
add
xchg
daa
add
or
fistps
data16
cmp
std
test
add
add
ss
ret
and
add
lret
or
jg
mov
cwtl
iret
jno
jnp
lea
cmp
inc
cmp
add
add
arpl
inc
add
test
ja
out
xchg
pop
dec
add
in
add
in
add
lcall
int
jae
jae
mov
mov
sbb
inc
dec
pop
int3
fildll
cmp
and
mov
andb
inc
mov
cltd
add
bound
call
or
inc
push
sub
fildll
lods
jae
cld
mov
mov
xchg
mov
inc
cli
mov
jae
add
punpckldq
push
sbb
fisttps
divb
mov
or
cld
out
out
jge
cld
into
sub
sbb
in
mov
and
decb
test
cmpsb
cld
mov
ljmp
xchg
add
fs
ljmp
lcall
and
test
insl
decl
call
lahf
cld
pop
jge
out
mov
and
loopne
and
decl
inc
and
jo
and
out
scas
cmp
push
or
cmpsl
dec
and
pop
jo
xchg
repz
or
cmp
add
add
xchg
cmpsb
lahf
and
add
pop
and
add
xchg
daa
mov
lret
add
push
hlt
adc
mov
aad
add
out
xchg
daa
add
insb
lock
mov
sarb
push
adc
mov
dec
cmp
daa
mov
xchg
add
bound
pop
add
xchg
add
mov
out
xchg
xchg
adc
out
in
test
add
add
adc
loop
cmp
xor
sbb
sbb
push
add
fsts
les
cmc
jnp
andl
scas
xchg
pop
dec
cmp
cmc
add
lret
xchg
xorb
xlat
fsubl
add
inc
in
adc
or
sbb
leave
test
push
xlat
pop
cld
xchg
int3
and
xchg
sahf
sub
mov
add
pop
mov
push
mov
mov
int
sbb
jmp
mov
mov
or
mov
add
jp
and
fnstcw
jae
mov
rcrl
subl
xor
add
add
xlat
or
sub
push
fimull
add
movsb
jg
add
mov
xchg
push
push
mov
insb
adc
push
sti
jne
cmc
jno
mov
add
xlat
data16
rep
mov
push
in
popa
cmc
sti
mov
aaa
ret
mov
dec
sti
jne
cmc
jno
mov
add
mov
clc
call
lahf
mov
clc
mov
mov
test
cmp
test
test
cld
pop
pop
push
lds
dec
jo
sub
sub
xchg
add
sub
mov
das
mov
add
inc
pop
xchg
int3
xchg
adc
daa
scas
push
dec
roll
add
xchg
outsb
test
pusha
sub
fbld
or
int
mov
cmpsb
sbb
mov
add
out
pop
pushf
push
jne
pop
out
dec
out
sub
mov
add
mov
mov
push
sbb
add
out
pop
mov
imulb
pop
add
sbb
pop
inc
cmc
xchg
mov
xchg
xchg
jg
adc
adc
repz
mov
subl
repz
sbb
jnp
xchg
sahf
adc
push
bnd
fs
es
jae
scas
daa
imul
adc
sub
push
add
mov
push
sub
xchg
sbb
cmp
mov
repz
adc
or
jmp
decl
std
push
into
and
sub
adc
popa
pop
aam
je
sub
jo
pop
mov
sbb
loop
adc
mov
adc
jnp
sub
mov
jns
sub
je
pop
out
xchg
adc
cld
jmp
adc
loope
mov
pop
rcpps
shr
scas
mov
sbb
repz
mov
add
sti
jae
xchg
pop
add
pop
mov
call
xor
ja
xor
or
pop
and
dec
push
xchg
sbb
incl
sub
mov
jo
or
loop
test
mov
outsb
or
push
addl
mov
pushl
or
push
add
or
ds
add
addb
mov
int3
shrl
pop
push
leave
mov
jnp
call
add
xor
lds
std
push
push
outsl
neg
sbb
sub
mov
pop
xchg
daa
add
pushf
dec
jmp
imul
adc
inc
sub
add
jle
mov
xchg
mov
pop
imul
sbb
adc
bound
jmp
outsb
cltd
xchg
daa
jge
fwait
mov
adc
std
xor
add
add
pop
sbb
out
fimull
mov
sub
cmpl
jmp
or
lret
aas
xchg
add
mov
pop
sbb
push
mov
add
clc
movsb
mov
and
int
sbb
repnz
out
adc
lahf
sbb
fiaddl
xchg
add
xchg
divb
xchg
jl
dec
test
fisttps
hlt
xchg
imul
lds
adc
xlat
xchg
pop
insb
test
jl
add
push
push
outsb
std
sbb
jb
or
mov
push
or
icebp
push
stc
mov
mov
frstor
punpckldq
or
xlat
cltd
add
insb
aam
pop
scas
cwtl
add
and
sti
pop
aas
mov
stos
xchg
add
jl
jecxz
adc
jle
push
call
lods
fdivl
insl
add
test
push
and
add
idiv
ljmp
and
push
in
ja
add
add
mov
push
in
dec
add
test
add
lea
gs
incl
push
stc
xchg
lods
pop
imul
mov
stos
sbb
out
or
add
mov
add
adc
imul
sbb
push
sbb
fcoml
insb
inc
pusha
std
pop
cwtl
xchg
and
sbb
add
xchg
pop
mov
mov
add
invd
jl
mov
daa
stos
imul
fstl
add
in
adc
frstor
jmp
xchg
and
int3
fists
mov
shl
fildl
aaa
stos
sub
out
jmp
fadds
mov
repnz
int3
adc
in
lods
in
mov
add
js
filds
cbtw
ja
out
xchg
jns
sub
nop
or
sbb
les
or
sub
mov
add
out
sub
ljmp
or
add
xor
add
lcall
js
fucompp
xchg
ja
fisubl
mov
inc
lds
hlt
out
cmp
cld
add
add
je
cmp
ud1
jns
adc
loopne
xchg
std
xchg
push
inc
xchg
xor
call
inc
and
jle
or
xchg
dec
std
frstor
ja
lds
and
test
inc
dec
push
xor
or
insl
push
cld
xorl
clc
rclb
imul
incl
ljmp
addb
push
push
add
cmpl
cmp
sbb
sti
jne
out
jno
push
dec
call
jmp
add
add
je
out
jno
daa
insb
dec
call
mov
jo
je
out
jno
daa
insl
dec
call
jns
jo
cmpb
cmp
lldt
adc
mov
dec
aas
adc
adc
das
adc
add
sub
out
adc
add
outsl
dec
sahf
xchg
pop
js
mov
pop
add
aam
xchg
imul
pop
jg
mov
sbb
lret
adc
xchg
mov
stos
orl
or
and
xor
sub
outsb
std
sbb
pop
xor
push
xor
jb
pop
syscall
mov
mov
sbb
cmp
dec
pop
pop
mov
jnp
cmpsb
xchg
pop
jne
pop
jle
out
mov
fcmovne
dec
dec
sbb
push
ja
or
or
nop
jne
int
xchg
mov
or
or
or
mov
mov
andl
xchg
or
or
rorb
sti
in
call
adc
imul
jbe
lods
push
ds
hlt
imul
movsb
mov
pop
rcll
dec
je
add
rcl
xor
sbb
in
dec
call
adc
add
dec
je
addl
jb
sub
testl
arpl
add
adc
fcoml
xchg
or
add
xchg
add
dec
scas
lcall
inc
push
jb
sub
loopne
cld
pushf
pop
jnp
adc
push
or
pushl
jo
or
cmp
or
jne
mov
lret
cmpxchg
or
add
fs
sti
incl
sub
fcom
sub
ret
push
lds
in
sub
adc
cmc
mov
popf
repnz
das
or
cmp
cld
incl
mov
sub
cmp
mov
dec
sti
adc
xchg
xchg
inc
jae
movsb
xchg
adc
or
cld
ret
sti
cld
add
xchg
inc
jae
movsb
xchg
icebp
sbb
leave
jmp
xchg
inc
jae
ss
pop
pop
pop
push
sbb
out
push
or
andb
js
fwait
jne
mov
cmp
nop
pop
mov
jo
sbb
xchg
pop
add
scas
stc
inc
xchg
pop
xchg
add
fwait
push
inc
and
jae
faddp
negl
das
sub
sub
jmp
xchg
add
push
pop
mov
out
xchg
jae
and
xchg
test
xchg
out
shrl
xchg
jns
or
add
add
mov
jl
shl
cmp
add
js
jnp
xchg
xchg
shlb
adc
scas
mov
cltd
add
xlat
cltd
add
add
ret
pop
andb
push
mov
jg
adc
loopne
mov
pop
xor
add
mov
sbb
loopne
mulb
add
dec
jge
out
add
pop
das
js
icebp
mov
or
std
sub
hlt
mov
xchg
ja
out
xchg
mov
fimuls
std
jae
mov
js
call
nop
dec
shr
int
push
adcl
add
and
hlt
inc
pop
and
jb
sub
xchg
cmp
inc
cli
mov
push
add
je
lds
dec
mov
sub
push
and
aas
or
inc
jne
aaa
dec
cltd
adc
add
cmp
cmp
pop
pop
cmpb
mov
jg
mov
jns
mov
call
push
hlt
push
lds
and
inc
mov
hlt
pop
addl
adc
repnz
or
cmp
test
xchg
mov
ret
dec
shll
into
push
mov
jp
xchg
or
sbb
movntq
cwtl
fcomps
add
pop
call
rolb
jno
add
xchg
imul
mov
inc
out
push
cmp
xchg
add
xchg
jecxz
or
rorl
xchg
push
cmp
stc
mov
cli
jp
fwait
add
xor
add
xchg
call
mov
sti
clc
inc
hlt
sbb
pusha
test
jns
add
mov
jnp
std
imul
rep
lret
add
std
test
fwait
aaa
sub
jmp
jno
adc
ljmp
mov
sub
jl
in
test
add
add
mov
xchg
push
into
scas
adc
roll
add
xchg
add
jae
daa
ret
lds
hlt
mov
loop
xor
add
jmp
cmp
inc
xor
sub
ffreep
bnd
ret
lea
lea
xchg
lcall
mov
mov
arpl
or
jmp
sbb
repz
ja
rorl
sti
arpl
fsubrp
add
mov
test
cltd
test
loop
mov
rol
jno
add
xchg
mov
or
inc
add
xor
sti
inc
es
mov
or
push
or
decl
jge
hlt
xchg
mov
rorl
mov
lock
mov
mov
ja
add
xchg
jge
push
out
mov
mov
ret
inc
jne
add
pushl
mov
je
cld
push
jmp
rcll
or
mov
or
mov
inc
jmp
out
pop
rol
push
xchg
jl,pt
mov
std
cli
jo
call
add
imul
or
dec
fisttpl
mov
or
pushf
add
popf
jae
add
pop
jmp
mov
rcrl
jl
sbb
add
inc
pushf
add
push
cmc
nop
add
mov
nop
int3
dec
cmpsb
lock
call
loopne
pop
test
iret
adc
mov
jmp
add
lcall
push
sub
add
adc
jmp
hlt
hlt
sbb
jl
or
mov
shr
xor
push
inc
ret
adc
jmp
repnz
out
xchg
xor
inc
or
outsb
cmp
or
jmp
jae
outsb
cmp
jo
jp
mov
sbb
cld
ljmp
push
outsb
ss
mov
inc
push
idivl
test
cmpsb
jns
addl
and
add
dec
sbb
dec
jb
bound
in
xchg
std
out
or
enter
cld
sti
sub
cld
jo
mov
mov
ds
call
dec
bound
lret
adc
ret
mov
call
mov
mov
jne
inc
jne
or
inc
aas
add
out
inc
xchg
das
into
pop
add
pop
add
adc
xchg
dec
add
mov
jge
je
ja
and
sbb
and
mov
jle
imul
call
xchg
repz
rclb
rorl
scas
mov
mov
sub
mov
dec
jmp
mov
xor
rclb
stc
call
incl
sbb
lret
decl
fwait
or
call
pop
or
pop
repz
push
push
cmovbe
or
mov
xor
scas
sbb
or
xchg
add
lret
xor
fstpl
dec
jne
pop
in
shll
out
incl
out
incl
cvtpi2ps
cld
add
and
cmp
imull
xor
or
lret
cli
sti
or
pop
bound
or
por
dec
popa
out
jmp
add
jecxz
sbb
add
shlb
or
push
jo
outsb
rcrb
ret
scas
cli
mov
aam
fisttps
xchg
xchg
test
es
mov
push
pop
cmpsl
or
jmp
add
jmp
add
or
mov
dec
daa
sbb
or
xor
adc
lock
add
dec
and
es
add
cld
leave
stos
movsb
add
les
std
sbb
add
jl
icebp
dec
dec
xchg
mov
sbb
or
or
add
es
xorl
jmp
sti
and
aaa
inc
jno
in
hlt
xchg
or
adc
add
xchg
addl
imul
add
push
in
add
xchg
orl
adc
add
xchg
in
shr
add
add
ljmp
jge
cld
jae
loop
add
mov
std
pushl
into
and
jno
testl
js
dec
popa
cmp
mov
jnp
jno
and
adc
jmp
sldt
add
scas
cld
xor
outsl
jb
in
mov
adc
mov
or
mov
pop
orl
sub
adc
and
xchg
xchg
pop
repz
lldt
inc
repz
pop
add
xchg
jb
jg
fnsave
pop
aam
jb
push
hlt
insl
unpcklps
sbb
aad
das
xchg
xchg
lds
mov
mov
jg
rol
inc
add
xchg
lods
sbb
incl
xor
inc
dec
sti
cmpb
mov
jmp
inc
pop
mov
add
ret
repz
mov
lock
inc
dec
outsb
sbbl
add
add
imul
add
push
pop
pusha
shl
rcll
test
sub
pushf
xchg
lahf
subb
xchg
add
adc
mov
mov
push
push
add
adcb
inc
addb
and
ficomps
faddl
inc
jno
sti
cs
or
idiv
jmp
loope
add
ljmp
ljmp
jge
push
xchg
pop
add
mov
rorl
das
cmc
sti
jmp
lret
inc
nop
call
test
xchg
add
loope
cmp
insb
dec
ja
sbb
js
xlat
add
push
sbb
sarb
jp
sti
sarb
pop
lds
mov
mov
inc
sar
inc
enter
cmp
mov
add
add
test
test
jne
jbe
in
clc
testl
mov
jnp
mov
jp
mov
jg
or
jle
add
add
add
insl
add
and
icebp
add
jnp
jno
jle
insb
add
idiv
incb
test
incl
cmp
test
decl
xchg
jmp
or
dec
jmp
lcall
xchg
jmp
call
cmc
add
mov
fsubrp
imul
mov
cld
sti
pop
xchg
xor
cmp
and
ljmp
int
xchg
pop
mov
xchg
mov
in
outsl
push
xchg
testl
jle
out
push
adc
sti
pop
push
mov
jmp
dec
sti
aas
test
repz
push
sbb
inc
jno
dec
cmp
pushf
push
test
pop
adc
adc
repz
pop
rolb
stos
repz
mov
repnz
jno
out
inc
mov
bnd
push
pop
sbb
cmpl
sbb
jg
cmp
sbb
cli
outsl
push
xorb
fs
pop
repnz
call
test
mov
or
pop
pop
mov
sti
inc
loopne
add
xchg
addl
xchg
add
test
ret
add
mov
cltd
or
nop
mov
int
test
sahf
jl
call
adc
xlat
sbb
int
popf
jg,pt
xchg
jno
flds
out
test
rcl
push
add
hlt
sti
add
mov
add
push
push
add
fadds
enter
notl
test
inc
lea
lock
lock
push
xor
hlt
mov
popa
fdivr
add
inc
std
divl
jo
pop
inc
pusha
aad
adc
testb
jo
add
div
mov
sti
dec
adc
out
add
jge
negb
mov
add
xchg
fcmovbe
jg
xchg
add
pop
mov
jae
call
mov
test
push
aam
sub
mov
cmp
mov
add
mov
adc
lcall
repnz
je
rcr
fstpl
add
in
or
sbb
mov
mov
scas
jno
addr16
lahf
notb
call
sti
loop
jno
or
mov
outsl
jnp
in
cmp
mov
or
pushf
pusha
dec
add
or
leave
add
in
repz
mov
add
ljmp
pop
inc
enter
pushf
jge
cmp
sbb
out
subl
jno
lcall
add
inc
sbb
lods
jge
mov
and
jns
or
inc
rorl
inc
roll
xchg
insl
pop
lods
mov
out
xorl
mov
call
add
ja
mov
inc
js
mov
lods
je
inc
inc
cmp
jbe
jne
aas
nop
or
xchg
in
je
mov
add
jp
xchg
notb
ja
aad
jae
add
cli
push
cmpsb
shlb
mov
pop
xchg
shrb
in
push
dec
dec
aas
pop
test
or
inc
add
les
test
jae
add
cmp
insl
add
jge
adc
cmp
pop
fadds
andb
js
mov
push
mov
subl
int3
mov
shr
cmp
ljmp
add
add
roll
in
pop
aas
jge
add
or
ds
or
jns
add
add
push
test
xchg
mov
xchg
pop
mov
call
ja
aam
hlt
jae
pushf
es
rol
mov
stc
pop
cmpl
movb
inc
pop
mov
adc
push
cmp
mov
cmp
les
and
mov
cmc
sti
or
and
push
fdivr
jle
imul
fldt
ljmp
cli
ret
pusha
cmp
pop
add
repz
test
add
dec
insb
das
scas
das
jl
hlt
into
cld
jae
clc
stos
shlb
sub
lahf
test
add
add
push
subb
xor
hlt
mov
test
in
loope
dec
sti
insb
movsb
xchg
add
ss
xchg
jae
dec
adc
loopne
in
sub
idivb
shrb
out
dec
outsb
inc
in
jl
test
add
dec
sub
jmp
insl
orl
or
cmp
mov
mov
out
inc
mov
cwtl
mov
js
pop
lock
xchg
add
push
cmp
sti
jb
fadds
fs
mov
xor
test
clc
xchg
insl
sub
jns
adc
fistl
xchg
orb
rcll
ja
push
xchg
enter
lds
in
ss
cmp
fldl
adcb
sub
lock
aad
xchg
pop
lret
sbb
ss
inc
call
mull
fsubr
addl
aas
and
dec
sub
mov
add
jge
lret
xor
lret
out
addl
jge
lds
jne
aad
cmp
sti
ljmpw
loopne
lret
rorb
push
leave
mov
loopne
in
xchg
mov
fistl
clc
xchg
xchg
cmp
cmpsl
aas
xchg
sbb
mov
pop
add
xchg
popf
inc
add
or
mov
test
or
jg
jl
pop
mov
insl
repnz
lock
stc
inc
nop
fdivs
cvtps2pi
cli
out
jp
mov
dec
call
adc
push
inc
and
out
jg
dec
sti
mov
popf
mull
addb
out
push
push
fnstcw
add
jl
add
stc
pop
ret
dec
jmp
mov
add
mov
sbb
mov
pusha
dec
pop
fsubs
xor
jl
add
xchg
add
pop
imul
jbe
xchg
out
insb
aad
out
dec
jnp
fdivl
cld
cmc
add
shr
add
fs
xchg
mov
cmp
sbb
add
jmp
add
pop
or
sti
push
xor
sbb
insb
mov
sti
addr16
cltd
ficomps
pop
je
stos
std
fidivs
add
int
ljmp
jb
xchg
stos
jmp
jne
adc
fcoml
cmpsb
jnp
jmp
push
jge
cld
cmp
rolb
mov
fsubl
ljmp
or
repz
add
add
std
inc
dec
jne
push
call
roll
lea
xor
call
cmp
je
inc
orb
sub
aaa
cmp
mov
sarl
sub
fldt
call
add
lock
inc
lock
lea
clc
inc
idiv
add
and
idiv
in
cmp
shl
jmp
mov
cmp
dec
cmc
cmp
xchg
ret
sti
cmp
add
out
push
std
scas
cwtl
push
imulb
xchg
inc
scas
xchg
xchg
js
mov
jb
fildl
push
push
xlat
dec
das
aam
mov
sti
sbb
js
fwait
popf
sarb
jae
dec
fiadds
inc
fwait
push
jp
xchg
fnstenv
je
and
pop
add
cmc
add
add
pop
inc
mov
dec
outsl
out
inc
in
test
outsl
push
in
xchg
add
cmc
fld1
call
add
icebp
jp
clc
arpl
jge
cwtl
in
mov
inc
xchg
ja
xchg
repz
add
mov
aaa
mov
jg
jecxz
jns
lret
inc
ja
ret
jmp
cmp
push
repz
int
or
add
add
and
push
or
jmp
jecxz
add
jecxz
das
cmpsb
inc
jmp
arpl
jns
aad
out
insb
adc
decl
jmp
sub
out
loope
jl
cs
jmp
xchg
add
hlt
ja
inc
jmp
adc
sti
push
scas
bound
jmp
mov
call
daa
push
cwtl
add
cli
jle
sti
scas
aam
add
jns
sti
mov
in
loope
in
and
rolb
add
jge
add
lea
and
stos
cmp
jne
les
mov
dec
xor
pop
jp
clc
in
jp
and
mov
pop
test
jp
imul
add
cmpsl
call
test
pop
mov
sbb
jg
inc
add
mov
addl
testl
cmp
sub
mov
push
and
in
mov
sti
in
jg
loope
jp
outsl
test
sti
cmpsl
mov
push
call
pop
sbb
rcrb
iret
sbb
adc
add
or
jmp
xlat
es
sbb
sti
addr16
jl
fs
cmp
fs
cmp
ret
les
mov
mov
lea
mov
incb
repnz
xchg
mov
inc
jo
cli
pop
sub
jl
jbe
imul
xchg
add
and
or
xchg
orb
push
fldl
xchg
sub
xchg
push
fcomi
or
jmp
adcl
pushf
jmp
lods
jmp
pcmpgtw
add
sub
ds
add
repnz
and
dec
mov
mov
push
xor
push
dec
cmpsb
inc
icebp
adc
sbb
jae
call
outsb
aam
xor
gs
xchg
add
xor
sbb
inc
add
jo
scas
xchg
lock
ret
ret
and
sub
dec
jle
add
or
add
mov
cmp
jecxz
bound
lock
call
mov
or
xor
lds
jmp
cmpsb
inc
add
xchg
bound
hlt
dec
lds
jmp
adcl
add
test
test
inc
lds
insl
adc
mov
or
popa
sbb
jae
cmp
pop
mov
dec
inc
scas
adc
inc
out
push
adc
out
flds
call
jmpw
repnz
mov
in
add
rorl
test
add
enter
lods
add
inc
and
mov
out
or
and
loopne
jb
divl
adc
pop
mov
or
arpl
cmpsb
in
lods
insb
stos
sbb
jbe
pop
sub
push
in
xchg
push
dec
call
int3
aam
add
aaa
cmc
inc
mov
into
fwait
stos
iret
test
mov
mov
ljmp
test
jnp
push
add
dec
push
sbb
ret
or
mov
add
out
xchg
aam
add
add
fdivrl
or
add
xor
push
test
in
push
rcr
sub
mov
pop
push
mov
in
pop
out
add
add
pop
cmp
mov
jmp
jae
sub
cld
xor
call
insl
ret
mov
add
pop
ds
lock
jnp
add
inc
lods
jg
jmp
push
fistl
cli
sbb
iret
test
outsl
nop
jg
jmp
fistl
and
cli
ja
fadds
xchg
pop
xor
sub
addl
in
adc
mov
cld
xchg
scas
lea
jmp
sub
pop
test
mov
adcb
nop
add
imul
add
adc
bound
xlat
out
pop
sbb
adc
dec
cmc
aas
fildl
or
call
xchg
sub
adc
inc
sbb
sysexit
cld
daa
dec
fldl
add
cmp
add
out
jp
jge
decl
add
or
jle
adc
jl
sbb
cmc
mov
je
mov
cmpxchg
sbb
pop
jbe
stos
mov
mov
sbb
dec
sbb
std
jo
sbb
inc
sbb
or
scas
lea
and
fs
mov
scas
xorl
inc
add
add
ret
add
movsb
data16
es
jne
fs
decb
add
in
xchg
or
mov
cmp
jecxz
clc
jl,pn
xchg
arpl
loopne
pop
icebp
loopne
test
aas
add
mov
in
and
mov
xchg
jecxz
cmp
and
xchg
pusha
cmp
test
mov
add
xchg
add
cmp
fdivrp
sub
sti
imul
loope
mov
inc
sbb
mov
outsb
adc
xor
test
sub
xor
loop
and
xchg
call
pop
mov
or
jmp
sbb
jmp
mov
mov
xchg
loopne
xorl
das
jge
push
add
cmp
xor
fs
inc
sbb
jmp
lret
adc
mov
cmp
adc
mov
movsb
mov
in
push
je
in
mov
xchg
xor
push
int3
sti
hlt
addr16
jmp
adc
test
pusha
fistl
jb
or
call
jg
test
jae
add
enter
push
scas
fstp
add
test
dec
fildl
adc
or
int3
jg
push
lock
mov
jg
ret
xchg
jg
mov
dec
hlt
add
xor
pop
xorb
mov
sbb
aaa
hlt
ja
pop
cmpl
test
aaa
adc
or
hlt
jae
repnz
incl
mov
repnz
mov
lods
mov
cs
push
inc
decb
pop
test
and
jp
cmc
add
jge
add
dec
hlt
push
mov
lahf
idiv
mov
mov
xor
clc
add
jge
add
nop
inc
loopne
nop
inc
fdivl
outsl
test
pop
or
es
lock
mov
add
xchg
jge
jge
fisttps
test
out
cld
mov
lock
ss
cli
jae
fdivr
loope
adc
sbb
decl
xchg
xchg
push
pop
adc
mov
daa
mov
add
xchg
cld
xlat
or
mov
imul
repz
shr
inc
add
add
or
inc
divl
in
movsb
andl
fsubl
mov
sub
andb
xchg
mov
stc
add
and
in
shl
ret
ljmp
repz
ret
lock
pop
mov
out
addl
ja
jecxz
scas
cld
insl
dec
test
xorl
sarl
call
shll
fadds
dec
sti
dec
push
ds
jb
jnp
loope
aam
mov
xchg
call
test
arpl
xchg
xchg
rcll
inc
fcoms
stos
and
test
cltd
push
fstl
add
mov
fsubp
fsubr
das
add
sti
arpl
xlat
pop
daa
mov
sub
and
xchg
sarb
push
or
fmull
in
sahf
jle
add
decl
in
je
dec
xchg
divl
orb
push
dec
call
jno
pop
test
lcall
sti
popa
adc
out
in
jp
test
stos
push
mov
mov
mov
pop
hlt
mov
into
mov
jnp
push
push
iret
add
addb
mov
push
decl
add
inc
cld
push
jg
insl
incb
mov
add
shll
orb
mov
scas
fstps
xchg
mov
les
xchg
adc
mov
xchg
jg
dec
sbb
mov
aas
lcall
push
add
mov
cli
add
mov
xor
hlt
gs
dec
lock
loopne
pop
das
sti
and
mov
out
inc
std
fwait
sarb
or
inc
jo
dec
clc
cmp
jg
xchg
scas
inc
jle
stos
lea
pop
add
fcoms
adc
add
mov
jmp
mov
cld
add
sub
jmp
flds
adc
jno
add
hlt
sarl
mov
int
call
sub
add
inc
fldenv
push
fistl
fnstcw
add
add
pusha
inc
xchg
sar
out
inc
jmp
fsts
cmp
mov
clc
pop
aas
mov
add
enter
or
out
pop
dec
cwtl
xlat
test
xchg
add
push
add
addl
xchg
push
cmp
or
jmp
add
mov
cwtl
fcomp
imul
sti
xor
push
xchg
xchg
aas
jmp
xchg
aas
jmp
xchg
add
bound
xchg
outsb
inc
cld
ljmp
cwtl
or
cmc
out
fistl
sti
movsb
jg
inc
add
adc
shll
adc
fimuls
rclb
in
repnz
sub
add
add
or
cmc
cmp
mov
adc
mov
sbb
and
outsb
sub
int
incb
aad
jb
outsb
xor
std
cmp
jnp
inc
js
je
push
out
cmp
mov
incb
jb
mov
jmp
mov
decl
sti
out
sub
shl
mov
ret
sub
test
push
push
push
mov
je
xchg
jecxz
ljmp
inc
jne
out
xor
add
sti
jmp
mov
jecxz
or
mov
out
mov
test
out
pushf
xchg
xlat
ljmp
add
mov
incl
sbb
sbb
in
pop
or
or
movsb
sbb
fwait
push
cmp
push
dec
fs
rclb
inc
pusha
cmp
jmp
lcall
test
fdivr
jmp
push
jmp
add
aad
and
aad
and
aad
and
aad
dec
faddl
ja
and
cmpsb
add
xchg
jns
or
sbb
imul
jmp
dec
push
add
inc
add
fisubrl
ss
add
mov
int3
nop
test
imul
test
dec
data16
pop
push
int
push
mov
mov
jmp
xchg
and
add
imul
mov
cmp
mov
or
inc
pop
jge
or
stc
sti
ljmp
pop
test
jo
adc
and
inc
lds
call
push
std
test
xchg
add
add
jnp
aas
jmp
mov
addl
addr16
mov
enter
push
add
add
inc
and
imul
push
push
and
jge
pop
and
scas
adc
adcl
or
add
xorl
adc
and
scas
adc
call
and
jmp
cmp
and
jle
and
add
cmpb
decl
and
add
ja
pop
scas
je
xchg
lods
clc
jle
scas
push
pop
mov
adc
and
lods
xlat
in
sti
into
sti
or
sti
out
mov
jae
sub
and
aas
inc
stos
into
mov
sti
out
out
cmp
inc
and
out
inc
js
ss
lret
push
inc
and
outsl
pushf
jp
jae
inc
jo
cmp
adc
pop
das
or
inc
and
sub
mov
jmp
into
adc
inc
pop
inc
and
inc
adc
ret
pop
inc
and
mov
cmp
and
fcompl
dec
adc
or
out
jecxz
lods
daa
lods
xor
adc
cmp
shrb
loope
arpl
fcmovnb
leave
rcl
shll
in
sbb
xchg
or
mov
nop
leave
cmp
cmp
sbb
or
ja
rolb
ja
rcrb
inc
jge
data16
lret
dec
pop
or
cmp
mov
pop
repnz
mov
inc
pop
xchg
repnz
add
cmc
addl
pusha
dec
cld
sub
call
mov
sbb
scas
sarb
aas
add
and
dec
xchg
jge
inc
jp
or
push
dec
or
dec
lret
adc
sti
push
sub
aas
inc
dec
and
mov
hlt
out
or
sti
mov
addl
add
add
outsb
andb
add
jmp
jg
sti
push
inc
mov
adc
lods
add
idiv
pop
or
or
dec
call
ss
divl
mov
add
push
add
rclb
cs
jae
xlat
enter
cld
pushl
icebp
call
jmp
cli
jae
dec
inc
and
js
je
add
int
aas
adc
inc
in
subb
incl
xchg
enter
jg
adc
sub
call
ljmp
or
push
lret
test
and
mov
push
int3
test
rolb
xchg
fsts
sbb
push
or
pushf
and
sahf
xrelease
inc
in
cmpsl
jbe
mov
or
sti
shl
xchg
push
and
mov
mov
lahf
jbe
sbb
dec
xor
adc
add
cmpb
xchg
repz
pop
sahf
xlat
fincstp
add
sbb
or
lds
outsb
lds
mov
sub
jmp
das
mov
jp
into
push
add
add
inc
cmc
std
pop
je
add
jl
add
lret
sarb
mov
bound
xor
jmp
add
sub
cld
push
xchg
vmwrite
add
jmp
call
stos
rolb
mov
loope
xchg
sti
jle
sti
jmp
mov
clc
ss
cmp
cli
xchg
add
jl
in
in
fimuls
pop
inc
jge
xchg
inc
adc
sbb
jne
in
cmp
sti
cmp
push
into
loop
out
das
sti
push
push
mov
mov
popf
dec
adc
popf
leave
repnz
scas
ret
xchg
jns
add
xor
stos
std
jp
test
rcrl
in
cmp
insl
inc
xchg
decl
or
add
mov
inc
inc
adc
dec
pop
or
jl
add
cmpb
cmp
mov
iret
jecxz
sahf
mov
jmp
mov
inc
pop
cmpsl
jl
cmp
dec
hlt
xorl
gs
negl
enter
enter
cmpsl
dec
sbb
mov
pop
xchg
mov
or
in
pop
insl
clc
xchg
xor
in
mov
dec
xor
push
imull
jg
jge
rorb
or
orb
mov
pushf
idiv
or
je
pop
aas
and
push
push
or
dec
pop
xchg
fistpl
pop
pusha
mov
sub
pop
int
adc
xlat
jge
mov
add
add
inc
or
loopne
dec
sub
add
aas
fidivrl
or
repz
aam
mov
enter
push
inc
dec
fisubs
out
mov
jecxz
cmp
std
xor
mov
repz
gs
ret
push
std
mov
mov
xor
fisubrs
push
jo
movsb
sti
jp
pop
cmp
fnstcw
jge
push
shr
push
dec
testl
xor
mov
aad
sub
add
lds
mov
sti
out
and
mov
xchg
add
mov
sti
jmp
rorb
cmpsb
mov
add
stc
pop
cmc
cmpsl
jmp
stc
and
int
ljmp
lock
mov
mov
mov
lcall
cs
and
pop
std
call
jae
add
add
pop
stos
lret
add
add
leave
idiv
lea
inc
les
into
test
mov
icebp
cmp
sbb
movsl
leave
idiv
ret
add
ret
pop
cmp
mov
idiv
jb
sarl
rorl
test
add
mov
test
mov
inc
push
lock
xchg
enter
outsl
push
decl
decb
cmp
mov
sub
testl
call
push
rorl
xorl
in
cmc
es
xor
ljmp
sub
mov
jnp
repnz
xlat
adc
test
repz
icebp
scas
movsb
imul
sti
mov
aas
xchg
mov
or
add
dec
or
mov
jl
push
ret
mov
adc
insl
movsb
ret
pop
add
or
add
inc
cmc
jl
pusha
outsb
inc
dec
ljmp
shll
inc
hlt
jmp
push
add
add
jl
je
inc
adc
adc
es
pop
inc
jl
insb
lock
pop
add
dec
add
cld
sub
jnp
mov
xor
inc
sbb
out
pop
add
or
mov
mov
xchg
cltd
negl
lcall
push
out
jge
sub
mov
pop
push
std
pop
dec
callw
add
xchg
mov
pushf
cmpsb
inc
clc
pop
jge
pcmpgtd
mov
adc
xchg
add
cld
jmp
adc
popa
mov
dec
les
mov
xor
mov
push
add
cmp
add
mov
mov
test
sahf
pop
in
mov
inc
cli
xchg
dec
sti
hlt
inc
adc
jge
inc
hlt
push
jecxz
je
icebp
divb
lds
xchg
lds
mov
dec
lea
adcl
pusha
mov
hlt
not
test
inc
ret
aaa
inc
mov
adc
dec
push
push
push
in
loopne
dec
inc
mov
dec
push
les
xor
pop
pop
pushf
lock
gs
pop
lsl
les
mov
mov
add
ret
sti
jae
les
arpl
push
adc
test
mov
sarb
pop
xor
add
fnstcw
or
ret
sub
scas
push
and
mov
lea
mov
cld
movsb
mov
push
insb
mov
add
arpl
test
enter
cmpsl
test
jp
adc
dec
inc
sbb
test
test
pop
pop
aas
loopne
or
add
dec
orb
loop
pop
add
mov
call
mov
cmp
repnz
add
mov
adc
shll
mov
push
adc
adc
sbb
add
pop
popa
pusha
and
push
inc
xchg
add
pusha
in
pop
test
call
inc
cmpl
sar
adc
les
add
sub
test
mov
add
push
add
sub
or
addl
cmpsl
mov
cmp
icebp
into
test
ja
mov
scas
mov
push
cmp
loopne
xlat
add
fnstcw
jmp
roll
add
adc
loope
sbb
ret
sbb
sti
insl
shlb
push
sahf
or
sub
inc
add
push
ret
add
in
loopne
inc
andb
sti
hlt
aas
adc
jmp
dec
sub
lods
out
cld
add
mov
dec
mov
testl
rcll
pop
jg
je
mov
add
sbb
inc
dec
les
out
or
cmp
inc
cmp
or
jmp
shll
loop
or
cmovs
sarb
lods
mov
out
and
jmp
shl
std
out
sbb
test
mov
push
sbb
xor
mov
incb
punpckhdq
out
pop
adc
loop
add
andb
pop
xor
cmpsl
adc
scas
mov
sbb
cmpl
add
movsb
movsl
cmp
pop
test
cmpsb
add
sbb
mov
pushf
push
xchg
leave
imul
popf
push
xchg
or
aad
fisubrl
mov
inc
xchg
mov
sub
sub
cli
cmp
mov
stos
xchg
dec
xor
mov
aam
test
add
mov
inc
xchg
cld
xchg
mov
or
orl
rcrb
clc
fistpll
add
or
adc
adc
in
iret
xorl
movsb
subl
andl
test
aaa
out
mov
inc
test
std
lock
mov
or
or
movsl
cmpsl
inc
add
nop
mov
mov
adc
push
iret
or
or
lods
rclb
test
xlat
mov
adc
or
sub
in
xlat
add
hlt
jbe
jmp
xchg
loopne
sub
or
push
mov
sti
hlt
mov
or
push
add
xor
std
push
add
dec
mov
adc
sbb
ud0
add
jne
jae
enter
cmpl
divl
jae
int3
lods
inc
add
jae
or
je
adc
jne
fsubrl
add
aad
rclb
pop
inc
hlt
cmp
pusha
rclb
inc
insl
push
bound
mov
add
add
jne
jne
or
jne
rolb
pop
add
mov
in
cmpsb
jl
add
sti
ljmp
sbb
mov
mov
add
stos
xor
test
call
mov
divb
inc
mov
ljmp
int
xchg
sbb
adcb
mov
sti
adc
cmp
pop
jecxz
push
add
and
std
pop
mov
call
adc
or
lea
les
and
std
sub
jge
xchg
test
mov
add
stc
add
mov
mov
cmpsl
jmp
subb
push
adc
fs
out
movsl
inc
jmp
xor
mov
lea
sub
inc
in
aam
movsl
inc
jmp
mov
push
adc
test
fisubrl
pop
mov
leave
cld
mov
xor
jle
adc
push
lret
test
ss
lods
sub
ret
or
add
or
add
test
out
lcall
add
jno
jb
xor
jno
movsl
and
sbb
data16
mov
test
xchg
cmovo
fsubrp
arpl
arpl
inc
jmp
inc
or
jmp
ret
inc
xchg
mov
aas
jmp
jae
cld
jl
pusha
push
call
xor
pop
xchg
flds
call
incl
xchg
addr16
cltd
std
pushl
mov
not
xchg
cld
popa
add
adc
ljmp
jnp
dec
and
push
mov
mov
in
xor
dec
divl
jge
call
bound
rorb
das
add
lea
push
divl
imul
sub
xchg
push
jge
jne
rolb
xchg
and
adc
sti
sbb
cmpsl
pop
cmp
mov
clc
ss
rcr
mov
add
insl
sub
push
cltd
sub
fsubrl
jae
rorl
jmp
add
jecxz
pop
shll
push
mov
cmp
pop
add
mov
or
repz
cltd
jp
call
cs
test
sbb
or
jmp
rorl
xor
mov
adc
adc
add
sbb
fnsave
jp
lcall
add
mov
rcl
inc
xchg
test
add
scas
cld
adc
xor
mov
imul
fisttps
cli
add
call
adc
pop
add
mov
jp
pop
inc
inc
lds
xchg
add
test
push
add
push
fiadds
add
push
movb
adc
inc
xchg
es
je
push
movsb
push
sahf
jp
add
xchg
test
add
cwtl
dec
pop
mov
clc
lcall
setge
ljmp
xchg
inc
adc
loop
cmp
xchg
add
mov
mov
adc
adc
or
add
jmp
iret
in
sub
faddl
mov
jp
push
pop
roll
add
je
jg
sbb
push
scas
les
mov
sbb
jae
test
les
data16
adc
loopne
cmovo
sub
ds
jg
add
test
push
not
inc
les
xchg
jge
cli
xor
shlb
adc
stos
divb
sbb
push
std
ljmp
int3
pop
mov
int3
jnp
mov
test
and
je
mov
call
lret
jmp
add
cmc
mov
gs
addl
sbbl
insl
int
pop
mov
xor
push
adc
add
pop
test
pop
std
mov
dec
scas
cmpb
xor
pop
test
xchg
xchg
xchg
in
mov
add
push
add
cs
push
adc
rorb
in
mov
test
das
shrb
cmc
mov
cwtl
scas
das
xchg
add
rclb
xor
add
xchg
leave
pop
in
add
aas
in
xchg
jle
sti
push
les
shr
imul
mov
call
or
cwtl
jl
mov
cwtl
mov
push
in
mov
or
push
ficompl
cmp
in
loopne
incl
jmp
cwtl
cmc
xchg
sub
jmp
in
adc
xchg
inc
mov
test
sub
jmp
fstcw
mov
add
sarb
pop
sub
mov
inc
dec
push
jb
divb
jmp
adcl
hlt
loope
inc
int
pop
add
xchg
mov
je
xchg
mov
or
xchg
add
add
mov
add
std
jmp
inc
and
add
pusha
ljmp
addb
rolb
mov
add
lea
jecxz
or
mov
incl
mov
shrb
cmc
ljmp
and
lcall
lods
jl
add
incl
mov
arpl
push
mov
das
mov
ret
jl
mov
sbbl
je
pushf
and
call
lds
inc
les
in
mov
jl
jne
enter
test
testb
cltd
decl
mov
xchg
testb
push
cltd
xchg
inc
fists
sti
mov
adc
and
pushf
lcall
sub
and
out
mov
lea
sub
or
mov
jns
out
sbb
jle
fdivl
add
insb
pop
pop
mov
fwait
cwtl
mov
hlt
cmc
inc
xchg
jnp
sti
adc
mov
dec
jbe
jb
or
movsb
aaa
inc
xchg
jne
call
arpl
call
push
sbb
fcoml
cmp
sub
inc
xchg
cwtl
loopne
iret
cmpsb
pop
int3
adc
pop
adc
int
jg
lds
push
aas
jmp
xlat
add
negb
outsl
cli
sub
enter
maskmovq
idivl
jmp
sub
xchg
push
mov
ljmp
cmpsl
leave
jge
adc
int3
test
ss
cmpsb
cli
push
or
jb,pn
test
test
xchg
sub
xchg
lods
adc
sahf
pop
test
xchg
mov
sti
add
pop
dec
push
push
jne
sub
test
mov
add
push
mov
ss
ret
dec
push
and
mov
testl
add
call
mov
dec
dec
jmp
or
js
jne
push
mov
cmp
inc
pop
push
negl
sub
inc
cwtl
shl
adc
std
push
call
test
add
add
stos
unpckhps
rolb
mov
inc
and
push
addr16
push
lea
or
insb
xchg
xchg
cltd
incl
push
jecxz
mov
ret
xchg
ficoml
inc
sbbb
fsts
jmp
push
out
ret
int
adc
sub
rorb
jae
call
add
adc
sub
shlb
js
mov
jo
mov
movsl
mov
sbb
push
xchg
shl
mov
push
mov
jmp
mov
dec
inc
mov
jmp
aaa
cmpsb
mov
jmp
pop
aam
mov
sub
add
dec
repnz
or
loop
push
sub
rcrl
push
prefetchw
adc
push
add
dec
ljmp
in
push
lods
add
add
jne
decl
cld
push
add
and
popa
add
sub
out
sti
fnstsw
cmpsb
sti
sub
jns
mov
in
ljmpw
or
je
lahf
sub
mov
push
xchg
add
jmp
add
add
jmp
xchg
add
rolb
add
sub
inc
and
add
add
jge
inc
add
pop
std
std
sbb
fs
add
in
xchg
sarb
cs
shrl
cmp
mov
std
pushl
cwtl
sti
add
sti
loop
addr16
mov
jae
nop
cld
std
incl
jge
and
mov
cmp
push
dec
call
mov
and
test
je
movsb
xchg
loop
pop
add
lret
jecxz
push
testl
xchg
push
les
xchg
pop
lahf
add
sbb
jne
cmp
sbb
inc
sbb
pop
add
xchg
push
sbb
mov
mov
xchg
push
adc
xchg
fldl
or
aas
add
xlat
das
or
inc
call
push
cli
dec
pusha
xchg
in
pop
jg
pop
dec
pop
iret
rol
or
sub
je
sub
nop
in
add
or
jl
sbb
aam
cltd
inc
jmp
xor
loopne
xor
jle
sbb
jle
adc
test
clc
xlat
inc
xchg
mov
pushf
lcall
push
xchg
add
test
sti
xorl
lret
outsb
mov
mov
test
mov
inc
mov
in
xchg
mov
sbb
xorl
add
add
sar
cld
sti
or
jmp
lock
push
mov
lods
je
xor
pop
fcoms
mov
lock
int3
aad
sbb
nop
add
push
lcall
inc
xchg
sbb
xchg
xchg
je
push
fwait
sti
fnstsw
lock
mov
lea
mov
sub
call
dec
push
bound
mov
add
or
jecxz
jne
xchg
cld
sar
sub
shlb
clc
out
test
popa
lock
fs
loop
jo
je
xor
jnp
cli
inc
leave
ret
test
mov
out
adc
jmp
sbb
sub
gs
push
add
sbb
ljmp
je
pop
add
add
xorl
sub
add
jge
xchg
and
clc
cmp
mov
out
test
mov
adc
sub
std
or
fwait
aaa
stc
int
leave
xlat
adc
adc
xor
or
dec
roll
ret
cli
fisttps
psllq
pop
mov
fisttpl
mov
hlt
rolb
mov
fistl
cmpl
sti
jae
rolb
pop
fildl
insb
movsb
sti
push
add
rclb
dec
int
out
xchg
fistps
test
cmpsb
pop
pushf
xchg
rol
std
addb
out
xchg
xor
movsb
lea
stc
fwait
lret
inc
icebp
fwait
pop
add
add
test
stos
rcrl
mov
mov
iret
test
repz
movsb
fnstsw
test
lcall
add
adc
mov
adc
and
iret
adc
bound
xchg
xchg
add
pushf
cmp
lcall
notl
add
lea
rolb
aas
aaa
cmc
jnp
push
add
or
adc
jno
mov
pusha
gs
test
cli
push
cltd
jecxz
push
xchg
sti
push
xchg
je
lret
dec
push
mov
stos
dec
sti
add
dec
out
or
mov
bnd
jno
xor
mov
sbb
out
mov
std
divb
pop
adc
xor
imul
pop
xor
sub
mov
sub
mov
cmpb
divb
jmp
imul
mov
cmp
test
test
and
popa
mov
pop
xor
mov
shlb
mov
aas
mov
enter
ror
cs
cs
mov
and
je
repnz
adc
fs
sti
mov
jg
aas
xchg
push
dec
les
jl
jle
or
mov
cmp
xchg
lods
cmpsb
ret
mov
daa
add
xchg
inc
xchg
pop
imul
test
mov
xchg
cmpsl
decl
push
rorl
test
add
aam
xor
bound
insb
les
out
insl
dec
mov
repnz
loope
inc
negl
add
inc
mov
xor
mov
adc
test
shll
jmp
cmc
add
add
int3
push
or
add
xor
dec
rcrl
fildll
insb
ret
dec
clc
pop
leave
mov
or
fsubp
add
cmc
inc
xchg
add
bound
mov
popa
scas
cmp
fwait
or
shrl
jmp
xlat
add
insl
movl
cmp
jmp
bound
adc
outsl
int
aaa
sub
pop
push
test
pop
add
pop
sbb
cmp
push
add
mov
jg
xchg
nop
mov
and
cli
mov
dec
or
jo
inc
jmp
sbb
or
jne
cmp
jno
push
cmp
je
test
or
push
adc
or
shrb
push
call
pop
jmp
adc
mov
mov
pop
outsb
mov
or
or
add
add
icebp
cld
inc
jne
sbb
inc
add
cmp
add
and
into
add
jmp
sbb
xchg
das
lcall
popf
lcall
fisttpll
mov
adc
out
mov
or
add
xchg
and
or
cmpsl
xchg
and
xchg
cmpsl
incl
rcrb
lcall
pop
pop
mov
dec
add
or
loopne
mov
add
or
add
xchg
cmpsl
mov
aas
out
xchg
dec
xchg
cmpsl
decl
mov
adc
inc
mov
sub
insl
inc
xchg
sti
ss
add
popf
mov
xlat
inc
xchg
mov
or
test
xchg
add
xor
les
inc
xchg
sub
mov
rcrl
ds
add
cs
xchg
sub
aam
add
nop
xchg
jmp
add
test
inc
xchg
xor
xor
add
mov
xlat
stos
leave
and
dec
add
mov
in
dec
pusha
pushl
pop
test
add
cwtl
adc
jmp
sbb
adc
or
xchg
cmp
xchg
mov
jle
add
fcoml
add
or
das
inc
or
sti
jo
mov
jmp
outsb
in
add
sbb
or
or
xchg
add
push
out
out
lods
xchg
sti
insb
push
or
or
rorb
notb
shlb
cld
jmp
in
push
test
shll
clc
mov
mov
popa
add
sbb
bnd
cmpl
cmpsb
add
cmp
push
xchg
sbb
inc
insl
lret
dec
push
shrb
and
mov
jl
or
dec
call
jb
repz
cmpsl
mov
repz
fistpll
or
sub
sub
cld
ljmp
xlat
xchg
jne
xor
clc
fnstcw
shll
aam
loop
push
mov
xchg
fwait
mov
xlat
mov
in
xchg
cli
mov
cmp
sarb
xchg
push
mov
pop
ror
dec
ret
data16
ja
pop
and
aam
mov
icebp
aas
xchg
es
mov
xchg
cltd
test
aam
jnp
xchg
cmpsl
cli
addl
ficompl
push
add
add
or
xchg
adc
push
movsb
dec
lea
aas
les
push
aas
pushf
aam
adc
mov
aas
jl
repnz
inc
push
lea
loop
jecxz
jmp
adc
lods
mov
xchg
sbb
xchg
cwtl
test
stc
rcl
out
push
push
out
mov
cwtl
rcrl
ret
mov
jne
cmp
or
fcom
fisubs
cli
mov
mov
sub
pop
fistl
xchg
cmpsl
sub
call
jb
mov
sbb
cld
adc
cli
jle
sub
std
mov
cmc
pop
sti
xlat
add
sub
push
bound
xor
insb
push
adc
out
orl
test
mov
out
repz
pushl
je
jbe
or
roll
cmp
je
jo
je
mov
add
into
or
add
iret
sub
insb
filds
add
ret
xor
adc
add
push
xchg
add
pop
cmpsb
add
mov
jecxz
and
fidivrl
aad
pop
fidivrl
pavgb
testl
cmp
ljmp
push
int3
mov
add
push
adc
arpl
sti
sahf
cmpsl
xchg
cmp
fwait
xchg
mov
or
mov
scas
fisubl
push
into
or
jmp
sti
and
add
and
sti
mov
das
dec
adc
rorl
and
clc
xchg
daa
mov
pop
decl
cmpsl
out
xchg
incl
add
adc
or
lea
mov
xchg
fs
aam
xchg
inc
jmp
mov
out
mov
fwait
lds
xchg
add
add
add
xchg
pusha
mov
mov
adc
add
add
mov
jle
movsb
in
aad
adc
pop
lods
test
xchg
repz
cmc
subb
incb
jmp
mov
xchg
dec
xor
mov
and
call
insb
push
clc
subl
add
fdivrl
push
xchg
xchg
cmp
xchg
add
sub
xchg
out
fisttpl
push
mov
sub
pop
fcoms
jg
xchg
subl
sbb
fs
lea
das
sti
cld
das
cs
aam
std
aas
jmp
xor
call
xchg
js
loop
xchg
ljmp
je
mov
and
je
rorb
nop
stc
jb
push
call
cmp
call
push
add
in
addl
dec
dec
jge
inc
out
push
pop
xor
or
mov
in
addl
lods
rorl
xor
xchg
std
add
stc
pop
outsl
imull
sub
idiv
and
popa
add
call
call
test
aam
mov
inc
add
push
cmp
lds
lcall
fdivr
xchg
push
sbb
jne
xchg
mull
jmp
test
out
mov
fs
clc
cmpsl
push
incl
sti
sti
jge
mov
sub
popf
imul
xchg
movl
pop
pop
push
mov
sbb
add
xchg
push
push
adc
das
lea
and
jmp
incl
xchg
decl
mov
xchg
dec
xor
adc
test
ret
and
cmp
mov
call
xchg
or
mov
xchg
ljmp
insb
mov
xchg
xchg
inc
cwtl
and
les
add
xchg
add
sbb
xchg
add
orl
insl
mov
mov
mov
clc
insb
insb
xchg
add
jle
mov
jg
popf
mov
insb
push
add
test
cmp
je
sbb
call
icebp
push
mov
jmp
mov
arpl
ds
and
test
lods
roll
and
and
push
add
add
jne
loope
cwtl
mov
scas
stos
and
ss
jge
les
call
bound
mov
add
add
jne
add
lahf
sti
xlat
add
sbb
or
ljmp
cmpl
jne
pop
inc
clc
aad
fiaddl
test
jo
push
jp
out
call
adc
jle
cmpxchg
jp
adc
ficomps
fs
lea
jnp
dec
mov
idiv
jo
notl
add
add
in
jg
xchg
call
add
xorb
add
mov
dec
jns
std
cli
jbe
add
jo
mov
push
xchg
call
test
mov
mov
movl
test
mov
in
sbb
scas
xchg
daa
call
and
xor
test
jl
es
xchg
xchg
jbe
adc
pop
aas
pop
jge
incl
mov
sbb
lods
orl
xchg
mov
pusha
jmp
jne
sbb
clc
ds
sbb
sub
call
inc
sbb
mov
sbb
clc
sub
add
mov
sbb
add
push
jle
imul
insb
subb
add
mov
testl
iret
add
add
cld
xor
jo
and
pop
jl
mov
adc
mov
mov
xchg
icebp
fwait
insb
lock
das
cmp
std
cmc
xor
ja
jp
cld
scas
rcrl
add
mov
jge
lds
xchg
syscall
ficoml
out
fs
mov
test
das
lea
xor
movsb
aas
jne
and
and
out
xchg
jmp
pushf
call
ret
bound
fnstcw
rcrb
roll
adc
out
nop
fisubl
push
in
cli
xor
add
mov
add
push
rorb
add
add
mov
call
fs
outsb
jno
jne
nop
rclb
pop
push
je
add
test
imul
cmp
icebp
adc
mov
fsubr
divb
add
call
int3
out
mov
imul
pushl
xor
cmp
push
push
push
cmp
icebp
or
cmp
repnz
xchg
pop
xor
lods
lcall
aam
les
inc
adc
pop
adc
pop
xchg
xchg
fwait
xchg
add
cli
jae
cmpl
or
out
lahf
jp
les
adc
push
iret
adc
xchg
add
push
sub
or
push
add
addr16
call
ret
jno
leave
push
mov
push
pop
hlt
test
lods
xchg
jmp
cs
orl
testl
add
sbb
jmp
add
jl
add
testb
jl
mov
js
inc
xchg
jnp
setno
add
pop
ljmp
jnp
mov
mov
jle
orb
or
js
mov
mov
xor
xor
sbbl
xchg
jge
mov
or
xor
add
test
arpl
cwtl
adc
push
cmp
add
mov
add
jmp
sti
xlat
add
mov
cs
add
push
orb
mov
lds
push
cwtl
mov
out
lret
inc
and
cli
inc
dec
rcrb
dec
mov
rcrl
dec
test
or
jnp
push
movsb
and
add
sbb
icebp
push
enter
jns
rorl
ret
divl
orl
add
xor
xor
mov
inc
ljmp
add
cmp
mov
push
pop
push
enter
xchg
sar
test
add
decl
inc
pop
xchg
insb
testb
mov
cld
dec
sbb
outsb
sub
mov
pop
xchg
add
sti
mov
das
sbb
aam
lea
mov
adc
insl
add
mov
je
imul
and
add
sub
add
fistpl
inc
addr16
ds
cmpsb
cmp
sub
inc
in
sub
rcrl
addl
jbe
add
sub
push
psubusw
add
nop
test
and
xchg
inc
pop
add
int3
mov
test
test
fnstcw
aas
sti
in
jb
mov
xchg
pop
ret
jo
adc
cmp
movsl
or
add
ret
xor
cmp
add
xchg
add
ja
add
add
aad
mov
jge
xchg
mov
dec
xchg
add
add
adc
rclb
add
inc
push
add
int3
mov
stos
xchg
sub
aas
jmp
pop
mov
jmp
xchg
add
jbe
jmp
add
dec
or
stc
pop
cmp
inc
in
add
jg
xchg
test
dec
test
jmp
sbb
xchg
gs
loopne
inc
add
cmovge
jb
dec
mov
xor
add
test
inc
das
sub
dec
rcll
bound
sbb
pop
add
jnp
shr
push
mov
push
inc
orl
mov
in
mov
decl
or
mov
push
cmp
loopne,pt
push
mov
jmp
loopne,pt
sahf
mov
or
cld
inc
push
mov
cs
push
inc
push
adc
das
notl
clc
aas
jne
adc
adc
cmp
call
sub
scas
mov
adc
add
rorl
fsubp
out
cmpsb
test
shr
test
cmpsb
lds
sub
fldenv
xchg
xchg
shrl
test
fcoml
cltd
cmc
dec
aas
xchg
mov
cmp
shll
push
mov
jmp
mov
jnp
filds
shrb
inc
aaa
rorb
jb
orb
nop
sbb
xchg
das
push
add
sub
pop
cmpl
aaa
jnp
xchg
pop
shlb
loope
add
fldcw
lock
or
mov
add
add
mov
mov
nop
mov
adc
jge
movsb
out
add
insl
ds
add
int
test
cmp
scas
jns
mov
xor
add
add
lahf
adc
call
mov
add
mov
sar
faddp
out
dec
sbb
mov
mov
imul
call
mov
mov
jp
xlat
outsl
cli
push
push
cmpsl
add
xchg
add
ret
jmp
adc
jmp
add
js
fistps
jmp
adc
jmp
fdivrs
inc
addb
inc
sbb
je
or
imul
lea
push
push
jl
jb
mov
pop
mov
aas
test
xchg
data16
pop
mov
add
div
or
je
jg
jne
cli
inc
or
xor
xlat
sub
add
lock
or
mov
inc
pop
bt
mov
pop
loop
ss
or
jo
lea
xchg
addl
xchg
rolb
sbbl
shlb
cmp
pop
sete
add
repnz
jne
test
test
or
rcll
jle
rolb
shlb
pushf
popa
repz
cmp
mov
jmp
notl
ret
aaa
adc
push
cmp
cmpps
mov
repnz
movsb
or
pop
and
popa
aam
out
loop
or
jb
mov
mov
out
or
add
repnz
gs
je
pop
or
aas
and
add
rorb
inc
xor
mov
testb
cmp
clc
lcall
repnz
andb
dec
rclb
or
pop
inc
mov
cmp
add
jmp
ret
shll
sub
orb
sbb
jno
insl
push
pop
or
sub
aaa
js
or
sti
outsb
add
xchg
xchg
leave
sub
xor
inc
je
rdpmc
sub
jg
aas
jmp
outsl
jne
add
jg
dec
mov
cmp
sti
aam
push
inc
jmp
adc
pop
jo
or
std
add
ficoml
pusha
rcll
mov
ret
lahf
repnz
xchg
add
inc
adc
je
mov
jns
add
imul
mov
xor
mov
div
decl
repnz
decb
xor
dec
and
inc
sub
js
mov
sbb
inc
add
and
dec
in
xlat
jp
std
push
adcl
cwtl
cmp
je
jp
jne
push
jecxz
push
div
and
sbb
inc
mov
imul
inc
lods
out
push
shl
mov
xchg
and
mov
in
mov
sti
fs
imull
stc
jae
icebp
pop
adc
incl
adc
dec
mov
xor
icebp
les
out
rorb
ret
xchg
jne
and
mov
inc
pushf
cltd
mov
cltd
jl
pushf
mov
aam
iret
push
cld
movsl
lldt
or
push
imul
inc
xchg
add
cli
mov
jle
jnp
pop
pop
or
es
inc
adc
lock
out
lahf
jno
or
jno
dec
mov
call
adc
add
jl
cli
gs
mov
in
sarb
or
icebp
mov
pop
jno
jnp
inc
daa
adc
imulb
push
mov
mov
add
jmp
cmp
or
shlb
sub
rolb
pusha
call
in
movsb
js
sub
jno
lods
mov
xchg
add
jmp
test
aas
jmp
jmp
add
xchg
shlb
popa
gs
je
addl
add
or
inc
or
add
jmp
xchg
jns
in
shll
add
cld
push
test
or
adc
es
or
stos
xchg
lret
cli
fcoml
dec
xchg
xchg
xor
je
arpl
push
lret
out
cld
not
es
xor
sbb
adc
jae
push
cld
dec
push
inc
add
inc
jo
mov
inc
jge
cmp
movsb
or
test
cmp
add
pop
ret
ss
push
add
add
inc
cmp
add
xor
pop
mov
cmp
sub
call
lock
jge
and
lret
xchg
fisubl
addr16
mov
bound
addb
addl
ljmp
jp
add
dec
mov
inc
je
inc
lods
cli
add
jnp
loopne
addb
addl
ljmp
xchg
jp
enter
cmp
jmp
pop
inc
ja
jmp
mov
pop
mov
hlt
loop
sbb
bound
decl
loop
hlt
xchg
test
jmp
inc
cmpsb
add
dec
pusha
ss
cmpsb
add
add
push
xor
mov
add
hlt
das
xchg
call
ja
addl
popl
fs
call
add
icebp
lret
enter
insl
sub
jnp
pop
fcompl
lods
aas
outsb
push
ja
xor
sub
add
mov
movsb
shll
sub
repz
incl
xchg
test
jg
test
arpl
inc
insb
add
rcll
sbbl
jl
enter
imul
movsb
mov
xchg
add
jmp
push
inc
push
jle
add
imul
add
insb
xlat
hlt
adc
add
add
sbb
lret
xor
in
mov
inc
insb
and
pop
inc
add
mov
mov
dec
inc
push
call
jo
outsl
push
xlat
add
fldt
js
aam
mov
cmc
adc
int
sti
test
or
jnp
mov
fpatan
cmp
les
inc
jno
mov
push
add
imul
je
pop
decl
addl
addl
ja
jo
adc
pop
inc
lea
pop
call
xchg
aaa
mov
dec
jecxz
sbb
imulb
lahf
xorb
addr16
je
pop
add
mov
xchg
sbb
fisttpl
gs
sahf
cmpb
es
cli
mov
test
jecxz
xchg
fdiv
inc
cmp
adc
in
cli
add
pop
jg
lods
aaa
add
fldcw
str
cwtl
addl
xchg
aad
xchg
pop
add
or
enter
out
push
mov
mov
xchg
inc
rorl
aad
addr16
add
xor
jl
pop
or
mov
fidivrl
add
add
push
out
push
je
je
fs
mov
sahf
push
je
or
test
jle
ljmp
fbstp
pop
jbe
int
jo
push
popl
mov
cmp
inc
jae
xlat
jmp
adc
cmpsw
sbb
jo
add
pop
xchg
jle
jmp
incl
xor
pusha
in
pop
test
xchg
test
fists
add
les
test
xchg
test
scas
xchg
cmc
cmpl
add
orl
bound
add
adc
add
sbb
sti
sbb
xchg
rclb
je
adc
jecxz
pusha
cmpsb
cmp
inc
std
decl
stos
lds
pop
scas
aad
je
jmp
imul
out
cmc
pushl
jae
xchg
mov
fisttpll
dec
cmp
push
jp
or
in
jg
mov
aaa
xchg
idiv
rorl
xchg
out
jae
ss
out
es
testb
or
xchg
aas
repz
sub
ljmp
or
add
repnz
adc
xchg
lea
jg
pop
nopl
iret
mov
jge
setne
subb
add
sarb
cmp
es
pop
xor
pop
incl
pop
add
clc
leave
divb
lods
mov
ret
sbb
cmp
iret
cli
add
repnz
jae
pop
cmp
subl
add
xchg
or
nop
add
jno
xor
ret
push
subb
leave
hlt
nop
mov
data16
lret
or
push
push
fisttps
xor
pop
inc
mov
pushf
jl
addb
push
movsl
add
dec
jne
daa
add
data16
popf
daa
dec
shrl
ja
mov
inc
sarb
inc
aas
movsl
daa
subb
sub
and
rorl
in
incl
mov
xor
jae
sti
sahf
adc
mov
and
mov
mov
and
adc
and
add
call
mov
call
mov
pop
pop
mov
add
int
mov
add
mov
je
adc
and
xchg
ja
or
cwtl
add
stos
xchg
in
or
add
inc
add
dec
ljmp
or
or
mov
dec
mov
push
mov
push
add
sub
je
imull
inc
pop
imul
popa
dec
xorb
push
push
lcall
insl
std
mov
mov
push
add
add
movsl
push
les
leave
push
dec
mov
push
pop
push
sub
in
xchg
adc
push
add
roll
xchg
pop
js
pop
sbb
andb
mov
cltd
aas
xchg
adcb
cmpsl
sbb
pop
loope
repz
push
cmpsb
xchg
pop
cli
test
push
lret
xchg
cmp
test
insb
adc
sbb
cmp
inc
jbe
hlt
fildl
adc
repnz
adc
cli
repnz
idiv
or
adc
and
add
xor
cld
cld
or
les
fadd
jae
test
or
call
lahf
rolb
pop
push
ja
push
das
in
jl
fsts
andl
in
mov
addr16
adcb
addl
addr16
adc
das
inc
repnz
bound
jns
addr16
pop
xchg
int
pop
cmp
shrb
mov
sarl
std
test
fimull
movsl
push
bound
push
fadds
repnz
jmp
idivl
xchg
add
jmp
test
mov
adc
loope
aad
nop
jmp
bound
cmp
xchg
in
add
out
dec
add
xchg
jns
stc
stos
aas
je
jo
jle
xchg
or
add
pop
mov
add
cmp
inc
lds
or
stos
jo
icebp
add
and
dec
push
and
mov
dec
mov
and
decl
loop
call
push
in
jp
cli
gs
cmp
jg
and
add
nop
add
cli
xor
icebp
cmp
mov
and
ret
aas
ljmp
call
lea
add
mov
popa
add
les
stos
mov
addl
inc
and
dec
jp
mov
xor
cmp
pop
or
mov
incl
xchg
les
adc
imul
inc
xor
mov
xchg
sub
cmp
inc
sub
enter
sub
sar
lcall
push
xchg
inc
pop
dec
cld
fnstcw
or
mov
je
jno
adc
push
lds
imul
shlb
sarb
pop
mov
cmovl
test
sbb
or
push
aam
loope
clc
push
cli
jle
or
jg
add
les
shrl
pop
sbb
mov
pop
aam
or
scas
xor
pop
adc
mov
ja
xchg
xchg
pop
jp
fsubs
jp
clc
pop
mov
add
pop
push
out
dec
sub
sub
lock
inc
xchg
lock
call
xchg
push
mov
sbb
cmc
adc
pop
jmp
pop
inc
leave
fs
cli
pop
mov
xor
pop
add
test
adc
je
call
hlt
add
xchg
add
xchg
sbb
push
sub
cwtl
test
mov
pop
stos
test
cmp
or
je
push
jg
jnp
or
mov
aas
jmp
mov
andb
push
dec
std
or
mov
jp
lods
xor
or
xlat
call
ss
add
jnp
add
jge
cmp
xor
pop
ret
popf
xor
aas
lds
add
add
push
mov
sti
mov
jecxz
jmp
fdivrs
decl
add
mov
pop
push
push
gs
idiv
fdivrl
jne
stc
inc
jmp
adc
repnz
data16
cmp
call
out
pop
lods
mov
xchg
jl
test
mov
out
inc
sbbl
inc
mov
call
add
insb
imul
jb
jmp
jmp
jne
sarl
push
lods
push
jmp
cmp
add
and
mov
lea
stc
or
cmc
add
jmp
dec
or
cmp
pusha
mov
mov
stos
sbb
cmp
xchg
push
pop
dec
adc
popf
int
jg
add
jle
scas
aad
pop
ficompl
sbb
daa
ss
add
adc
mov
push
xchg
push
pusha
mov
xchg
addr16
fsts
cmc
sbb
and
inc
or
pop
xchg
cmp
movsl
pop
andb
pop
mov
jo
inc
outsl
jo
and
push
mov
scas
lcall
inc
pop
jg
repz
xchg
xchg
inc
sti
bound
lea
xchg
push
test
cmpb
xchg
add
fdiv
push
mov
sub
addb
push
mov
arpl
and
sahf
cmp
fldenv
and
add
add
add
add
test
add
jle
pop
adc
repnz
inc
mov
pop
push
cld
cld
jae
fnstcw
inc
mov
and
aam
add
inc
and
jo
and
in
enter
rclb
mov
dec
call
lcall
ds
jp
jae
popf
fstl
jg
sti
mov
sub
mov
adc
mov
test
std
je
repz
pop
push
sub
dec
nop
jl
aas
mov
mul
pop
sti
sete
adc
addr16
or
dec
cvtpi2ps
sarb
xchg
jl
pop
mov
sti
pop
addr16
call
in
cli
add
and
shrb
inc
nop
jl
aas
mov
xor
pop
sti
inc
insl
pop
xchg
jbe
jne
dec
cmp
addr16
sub
jnp
imul
imul
sbb
add
xchg
rcl
pop
cmp
dec
sti
dec
push
inc
jne
add
insb
adcl
in
adc
sub
call
fadd
lock
enter
sbb
fsts
mov
out
int3
ljmp
mov
callw
call
add
ljmp
add
xchg
hlt
inc
sub
ret
call
mov
fsubs
sbb
or
or
loop
xor
lods
les
sbb
or
sbb
xor
jl
imul
sbb
and
xchg
int3
or
mov
pop
adc
sbbb
cmc
movsl
mov
jle
add
push
add
movsb
ret
mov
call
xlat
push
xchg
pop
aaa
sub
cld
push
adc
xchg
je
sbb
vunpckhps
push
loop
sti
push
add
pop
sti
bound
add
out
and
jle
mov
dec
ljmp
or
jno
and
in
ret
add
push
pop
jbe
in
aas
dec
sti
push
jbe
out
sahf
mov
test
scas
cmp
sub
je
lds
add
sbb
aaa
pop
decl
or
adc
and
or
inc
movsl
xchg
mov
xchg
push
decl
or
leave
xchg
mov
pushl
jp
jb
pop
push
sub
pop
push
dec
call
addr16
xchg
pop
test
push
xchg
cli
cmp
addr16
push
test
bndstx
mov
adc
or
out
mov
xchg
nop
inc
adcb
push
leave
in
mov
jle
lret
xchg
add
sti
adcl
addr16
clc
pop
push
sub
xor
stc
xchg
fidivrs
je
xchg
push
data16
mov
and
int
mov
push
cld
pop
xchg
call
enter
add
add
mov
call
adc
sbb
jge
call
fdivs
clc
imul
mov
call
mov
cmc
mov
or
stos
xor
fwait
mov
xor
xor
xlat
popl
out
push
add
xlat
stos
push
je
mov
fadds
jne
fsubr
lahf
cld
push
push
pop
jb
mov
std
xchg
lods
xchg
add
and
shll
stc
mov
inc
je
movsl
dec
shlw
mov
or
mov
mov
movlps
cwtl
rol
in
push
mov
add
insb
and
fsubl
pop
sti
adc
je
enter
xchg
add
mov
and
pop
int3
and
push
int
push
mov
mov
xchg
dec
mov
push
push
lea
sbb
push
and
out
jbe
testb
inc
pop
or
addb
je
or
ud0
add
adc
imul
push
mov
je
stc
notb
jbe
call
test
or
inc
in
mov
adc
gs
incl
mov
incl
add
cwtl
mov
jmp
xchg
cmpsl
lcall
fiadds
push
arpl
push
pop
add
dec
push
test
das
push
and
or
add
clc
cmp
dec
lret
pop
in
push
jne
in
pop
inc
adc
cli
shll
dec
sub
rolb
shrl
andl
call
mov
push
clc
push
sti
add
dec
add
sub
xchg
or
popa
mov
into
push
test
mov
cli
dec
xor
add
mov
icebp
imul
adc
mov
out
mov
fdivs
test
scas
mov
add
pop
push
insl
inc
loopne
leave
iret
cmpsl
jge
or
add
in
cmp
push
add
push
pop
das
loope
push
es
pop
add
movsb
add
std
dec
insl
inc
add
mov
std
sub
jmp
pop
out
out
repnz
adc
loopne
repz
inc
pop
dec
dec
cmp
popf
sub
add
push
verw
repz
lret
arpl
xchg
inc
dec
adc
mov
xor
aas
jmp
mov
xchg
pop
mov
fmull
or
cmc
aas
jmp
int3
test
adc
pop
pushf
jg
dec
sti
int3
xor
jmp
loop
add
in
jl
jmp
adc
mov
je
and
jmp
and
or
adc
nop
dec
push
pop
sti
push
imulb
cmp
out
or
pushl
jge
jge
push
test
sbb
mov
and
push
jl
cld
mov
mov
or
inc
bnd
mov
cmp
rclb
add
push
scas
inc
add
das
out
mov
add
add
mov
xchg
arpl
mov
rclb
ret
xchg
lods
out
mov
or
jbe
push
jl
ret
stc
mov
fwait
lea
pop
sti
jnp
sbb
pop
jmp
cli
arpl
scas
xchg
arpl
inc
push
loop
call
mov
fcoml
xlat
xlat
pop
xchg
sar
xchg
dec
mov
cmpsl
dec
push
xor
cld
mov
imul
addr16
lcall
add
dec
pop
jmp
xchg
test
adc
hlt
sbb
cwtl
lods
xor
pusha
ret
scas
incl
xchg
pop
lods
pushf
mov
push
out
stos
pop
inc
pushf
add
int
pop
lahf
ret
jge
jg
stc
add
ret
arpl
or
mov
shlb
pop
movb
jge
shll
sbb
pop
inc
add
add
insb
shlb
nop
add
add
imul
jge
jno
mov
jmp
test
push
sbb
inc
jne
das
ss
xchg
inc
jne
sbb
inc
sti
jb
orb
addl
jmp
nop
rclb
loope
mov
aad
pop
xor
or
mov
je
dec
aam
cmpsl
cli
inc
retw
inc
lods
aas
in
movsl
push
inc
lea
loop
cmpb
call
insl
jg
add
orl
jp
add
mov
jmp
test
icebp
pop
dec
push
push
pushf
idiv
pop
jns
mov
mov
add
jle
xor
subb
lea
notb
add
dec
mov
incb
jne
lret
mov
call
pop
sub
test
std
xchg
ret
gs
ss
ljmp
pop
in
pop
add
jmp
xchg
jnp
jg
pop
mov
imul
inc
add
pop
call
or
sbb
pop
pop
and
fists
decl
mov
das
iret
push
pop
jo
dec
adc
mov
and
lret
add
rolb
outsb
clc
push
fmuls
pop
movsb
out
addr16
push
ljmp
cli
push
fstpt
je
lock
or
xchg
ja
jo
pop
sub
cltd
testl
push
pop
aam
sti
sarl
je
cld
call
ret
fcomp
fcos
call
push
filds
adc
dec
mov
lock
mov
clc
imul
add
mov
test
xor
call
testl
add
int
repz
or
jae
adc
jle
sbb
pop
pop
inc
ret
int
add
sldt
orl
scas
ficomps
out
dec
lea
jb
sti
bound
pop
and
pop
stos
xchg
add
imul
fs
dec
mov
dec
lea
pop
idivb
jmp
inc
int3
add
add
inc
pop
mov
dec
roll
mov
outsl
pop
ljmp
incl
sarl
push
jl
mov
xchg
xchg
jo
xchg
xchg
inc
add
push
or
mov
sbb
jp
and
test
inc
sub
cli
iret
mov
leave
cs
repnz
or
cld
jp
in
jb
pop
add
sti
push
cmpsl
push
push
loop
dec
add
stos
addr16
jmp
imull
rclb
lods
lds
cmpsb
cld
mov
lds
sbbl
call
lds
lea
cmpsb
or
lret
cmp
adc
fwait
cmp
sub
roll
adc
dec
push
aam
jle
or
jbe
add
clc
jle
jnp
push
jle
cmpsl
out
jno
sti
cmpsb
pop
push
aas
adc
fdivr
lret
test
add
call
sbb
fsubs
xchg
dec
xchg
ja
mov
dec
sti
adc
fcoms
pcmpgtb
push
out
push
cmpsl
mov
dec
push
mov
cmp
fdiv
insb
add
inc
out
test
cld
call
fbstp
adc
jnp
pop
xlat
ja
mov
add
mov
adc
mov
repnz
adc
adc
mov
lret
mov
shll
add
lret
notl
lret
inc
mov
test
push
xchg
shr
fldt
mov
enter
jmp
add
and
pop
sub
push
test
addb
inc
fs
sub
test
jmp
flds
mov
popf
in
call
inc
imul
dec
inc
iret
arpl
pop
xor
sbb
add
outsb
cmp
jmpw
inc
and
xor
xlat
inc
xchg
test
leave
mov
mov
mov
jp
icebp
jns
fdivp
jno
mov
push
xchg
pop
addb
mov
mov
sbb
lods
movsb
cltd
aad
mov
push
xchg
mov
mov
pop
xor
dec
inc
je
daa
jnp
cmp
mov
xor
aas
sti
addb
add
gs
jbe
pop
sub
out
xor
decl
push
andl
scas
cld
add
out
ljmp
push
call
push
inc
ss
push
sbb
push
scas
cmc
mov
mov
sti
in
fscale
pop
xchg
dec
add
push
cli
mov
lock
xchg
fstpt
je
into
sar
cwtl
shlb
xchg
jnp
mov
push
mov
add
xchg
pop
je
dec
pop
mov
jnp
stc
jl
pop
cwtl
add
xor
je
outsb
cld
gs
pop
pop
dec
push
lret
inc
pop
int
mov
rcl
clc
adc
push
mov
arpl
sub
into
ret
incl
cmpsl
and
xchg
decl
ret
jg
call
hlt
mov
xchg
mov
inc
cli
xor
lret
inc
jne
test
loope
cmpl
push
mov
repz
add
adc
or
mov
ja
and
inc
decl
mov
ret
jmp
imul
sbb
dec
out
sub
pop
and
lods
pop
mov
or
mov
pusha
fistpl
repnz
or
or
lods
fwait
in
pop
xor
pop
cltd
fidivs
sub
xchg
jmp
leave
sar
cmpb
pop
je
out
inc
cmp
jb
sar
aam
adc
and
dec
cmp
adc
mov
fsub
sub
adc
ja
xchg
add
dec
dec
cmp
fisubs
or
out
lds
pop
call
addb
lods
jae
test
jae
dec
pop
cmp
mov
insb
add
call
inc
pop
test
pop
adc
jp
jae
xchg
je
movb
das
fucomi
cltd
enter
aas
roll
xor
enter
fisubrl
incl
test
mov
inc
std
mov
pop
pop
data16
mov
sub
add
xorb
mov
sub
dec
jne
lahf
dec
adc
or
sbb
sbb
testl
jnp
out
or
and
call
call
push
add
repnz
sub
cmp
mov
or
pushf
add
xchg
movsb
mov
adc
insl
adc
add
xchg
out
pop
push
add
inc
imul
and
inc
lea
add
pop
daa
cmp
inc
lahf
jne
pop
je
icebp
mov
add
rcrb
in
insl
and
insl
and
dec
add
add
stos
ret
mov
jne
dec
andl
inc
test
cmp
das
aad
add
popa
inc
pop
test
clc
ret
mov
neg
iret
dec
mov
lock
add
or
cmp
sar
dec
les
add
das
xor
xchg
add
movl
test
mov
jl
inc
int
aaa
je
outsl
int3
push
adcl
call
jb
loopne
xchg
stc
rolb
jmp
js
xlat
bound
cli
hlt
scas
push
inc
jmp
pop
jnp
bound
psubsw
or
adc
lahf
ss
bound
icebp
decl
pop
mov
rorl
loope
jp
lods
dec
add
inc
mov
bound
rclb
clc
jl
add
andb
sub
mov
imul
insl
mov
cld
sub
incb
sub
cmp
adc
mov
ja
cmpsb
jp
test
in
dec
std
xor
insb
xor
xor
in
int3
inc
and
and
jae
repz
mov
rcrb
ds
sahf
mov
xchg
rolb
or
pop
pop
inc
idiv
mov
imul
jmp
jmp
push
dec
push
lret
inc
jno
arpl
mov
lret
push
incb
adc
pop
cs
dec
clc
push
mov
mov
daa
push
sbb
xchg
inc
jne
xor
ss
orl
add
pop
pop
or
cmp
or
inc
push
jecxz
inc
cmpsl
or
mov
inc
sarb
prefetch
or
sarl
aam
int
sbb
aam
test
mov
call
std
jle
rorb
inc
test
test
fnstcw
inc
lds
mov
mov
or
xor
add
lds
into
sub
loope
sar
scas
xor
je
or
mov
cmp
sbbb
ss
insl
push
mov
rcrl
dec
lea
sti
inc
outsl
adc
test
cltd
or
mov
add
insl
add
sti
je
sbb
gs
or
std
out
sar
hlt
repz
adc
in
icebp
add
call
dec
call
xchg
notb
adc
or
jo
push
add
jg
jne
cmp
jg
outsl
adc
sub
incl
enter
test
push
idiv
shrb
pop
es
insl
dec
sub
lock
add
dec
push
sub
xor
sarl
lahf
push
add
test
test
add
add
xchg
in
add
mov
or
in
aaa
sti
cmpl
mov
mov
nop
or
sub
cmp
xor
call
pop
mov
xor
xchg
sub
xchg
dec
mov
cli
xchg
mull
inc
sub
aas
push
movhps
jae
je,pt
mov
pop
inc
push
pop
mov
mov
sub
cmp
fwait
cli
inc
pushf
je,pt
add
mov
lahf
into
rolb
xor
mov
fistps
lahf
inc
mov
cmp
add
jmp
inc
fbstp
jp
adc
test
in
push
sbb
add
xchg
ja
add
inc
and
sub
shrb
fdivrs
jmp
cmp
inc
cmpb
popf
or
les
xchg
lods
dec
xor
pop
dec
push
push
rcr
pop
cli
fdivp
mov
mov
dec
push
push
push
cmp
xor
push
stos
call
xchg
pop
mov
lret
xchg
xchg
add
add
sub
xor
int3
xor
jmp
fwait
or
sbb
je
push
inc
daa
movsb
pop
xchg
and
push
das
dec
push
add
and
cld
pop
add
add
iret
mov
lcall
sbb
div
push
dec
or
adc
incl
inc
mov
popa
adc
xchg
add
cmc
das
call
mov
mov
in
jle
xorps
cmc
adc
repz
sti
xor
bound
lods
addb
mov
decb
addb
mov
pop
addb
mov
addb
out
loop
cmc
mov
mov
incl
xchg
cmp
arpl
lret
jnp
dec
lea
push
das
cmp
mov
stc
sub
ss
cmp
push
aad
xchg
inc
clc
lret
dec
push
jb
int3
push
in
mov
stc
sti
rol
sti
inc
xchg
and
push
clc
or
push
jge
mov
daa
cwtl
xchg
into
addr16
mov
imul
add
cmpsb
int3
incb
xchg
xchg
daa
je
loope
leave
push
add
popa
xor
rol
leave
dec
pop
xchg
add
rcrb
jl
ds
xor
inc
mov
in
bnd
and
push
pop
and
mov
xor
lods
lahf
andl
add
cmp
jge
or
or
xor
xor
addl
shr
mov
jmp
mov
and
enter
mov
add
add
xchg
sar
push
sbb
je
sub
adc
shlb
and
testl
xchg
jl
jge
addl
sbb
call
gs
stos
or
pushf
addl
xor
data16
fldl
sbb
lret
cmp
mov
mov
add
sti
fdivl
cmovo
adc
jne
ret
enter
jb
push
subb
cwtl
jg
das
add
inc
out
push
repz
dec
hlt
out
xlat
lea
add
test
enter
movsb
addb
sub
ss
incl
cmpsb
in
test
leave
outsb
roll
mov
mov
mov
lea
jnp
add
mov
add
inc
add
xor
inc
sti
gs
inc
pop
outsw
out
data16
or
outsl
jecxz
and
or
xchg
mov
or
mov
dec
or
add
arpl
jo
mov
out
jmp
push
dec
or
pop
movq
iret
or
pop
or
leave
stc
add
in
push
xchg
xor
sub
mov
sbb
stc
or
stc
sti
mov
mov
dec
fmul
and
dec
inc
out
cmp
push
xchg
sbb
xchg
push
lds
jmp
les
fwait
mov
rorl
inc
cmpsb
add
pop
push
mov
jmp
mov
inc
in
push
ret
out
hlt
xor
repnz
cmp
or
xchg
call
call
push
int3
or
push
in
or
add
add
fld
call
ret
add
add
aaa
mov
mov
call
jg
push
jmp
bound
movsb
clc
push
sub
inc
repnz
outsb
push
jb
lods
jecxz
sbb
jmp
add
push
sub
fldz
ja
lds
idivb
adc
sub
jmp
xchg
cmpsb
pop
out
dec
cmpsl
sub
sub
jmp
in
cmpsb
sar
mov
jnp
add
mov
call
sbb
and
jmp
inc
sti
test
outsl
or
add
orb
jge
inc
and
pop
jecxz
sub
push
dec
call
adc
jns
and
test
add
call
mov
inc
and
push
add
sbb
cmp
and
pop
xchg
xor
pop
xchg
add
orl
shrb
das
jno
js
and
cmc
add
pop
adc
daa
xorb
mov
or
pop
lcall
inc
adc
shlb
adc
incl
xor
add
outsb
add
add
xchg
jno
test
sbb
fmull
cmpsl
xchg
sbb
rcl
add
jo
incl
xchg
sbb
addr16
sbb
lcall
movsl
ficoml
addr16
rorl
movsb
mov
adc
fildl
jmp
popf
or
int
mov
sbb
pop
add
std
ret
fwait
ja
ffreep
out
sub
sub
add
add
inc
mov
jecxz
insl
filds
add
add
sub
jae
shr
push
mov
jg
mov
orl
icebp
or
mov
adc
icebp
stos
enter
push
cmpsb
inc
sub
add
les
cli
sbb
xor
sub
scas
add
fisttpll
jmp
and
or
stos
add
and
push
and
int
mov
dec
mov
push
sar
fdivs
jo
sub
cmpsl
lea
inc
repz
and
dec
fisttpll
repz
fisttpll
push
fisttpll
popa
pop
add
popf
add
adc
sbb
inc
or
test
jl
mov
adc
jg
stc
jmp
jge
and
add
inc
in
dec
and
stos
pop
jne
in
jae
add
add
dec
push
mov
push
mov
in
loope,pn
and
dec
push
dec
xchg
xor
push
adc
inc
pop
sbb
aaa
pop
sbb
aaa
pop
and
aaa
pop
and
stos
aas
pop
sub
add
add
cmpsb
dec
and
add
inc
cmpsl
inc
and
inc
mov
outsl
or
in
sub
xchg
dec
cmc
mov
xchg
sub
lea
adc
pop
std
pop
add
sub
shll
getsec
movl
xchg
mov
or
adc
add
add
add
aas
ret
add
sbb
cmp
mov
repnz
jg
xchg
sbb
pop
ja
add
xor
push
sbb
jmp
cltd
add
lock
jg
faddl
xor
mov
sbb
hlt
arpl
mov
rclb
or
add
mov
repnz
cmp
hlt
xor
popf
xchg
shlb
ja
jge
sbb
add
jmp
stos
hlt
jge
fcoml
xor
fdiv
xchg
fadds
jae
out
shlb
push
sarl
xor
pop
cmpl
jp
fmul
jl
sar
add
jmp
lret
mov
ret
add
loope
nop
stos
sub
jmp
lret
out
sarb
mov
add
sub
je
sub
subb
test
lods
or
negb
cli
pop
mov
sbb
sti
test
add
inc
aam
sti
bound
js
int
out
lahf
je,pt
in
push
lods
add
add
filds
je
xchg
subb
jmp
sbb
call
jo
jae
lret
cmp
sbb
cmp
adc
pop
adc
pop
cmp
push
lds
dec
jecxz
imulb
or
lock
icebp
jae
and
pop
adc
bnd
cmp
incl
pushf
cmpsl
cli
test
jg
or
or
cmpl
rolb
push
div
inc
xchg
xor
movq
out
test
in
lret
sub
adc
pop
fs
jl
add
mov
sbb
cmp
xchg
rorb
rcrb
inc
jo
int3
pop
pop
sahf
and
sbb
sub
gs
add
dec
repz
sbb
cmpsl
in
add
push
pop
push
inc
xchg
sbb
cli
subl
ret
add
push
sbb
xchg
subb
enter
out
shrl
mov
fs
movsl
shr
jmp
jmp
jle
nop
fiadds
out
push
mov
push
xchg
and
xchg
jle
xor
xchg
add
sbb
jge
sub
cmp
jg
nop
sbb
jmp
add
call
add
dec
iret
mov
test
data16
int3
dec
sti
aas
lret
pusha
jb
add
sub
jae
mov
cli
ret
pop
xchg
sahf
mov
mov
lds
add
cmp
into
cs
hlt
mov
cmpsb
or
mov
int
sbb
cmp
and
stos
popa
lea
in
aaa
pusha
int3
inc
mov
out
mov
add
out
pusha
add
xchg
cmp
fisttps
mov
pop
add
aad
jmp
std
mov
cmp
jnp
jmp
inc
aaa
push
xchg
ss
cmpsl
andl
ljmp
dec
jecxz
push
testb
decl
lods
cmpsl
inc
and
mov
inc
and
mov
inc
and
mov
inc
and
popf
popf
inc
and
ret
inc
and
adc
ds
mov
add
xchg
sub
mov
mov
and
sub
ljmp
cmp
xor
and
je
push
and
jnp
jo
ljmp
sub
mov
fnstenv
mov
pop
in
out
push
jmp
fisttps
data16
mov
pusha
fldcw
push
inc
movsb
inc
je
nop
and
mov
nopl
lods
fildll
sub
xchg
mov
jbe
in
aad
mov
in
leave
stos
out
mov
pop
mov
int3
mov
xchg
mov
shl
mov
jbe
in
aad
test
jl
add
sub
arpl
sub
pop
cld
pusha
cld
insl
mov
pusha
hlt
dec
jmp
xchg
adc
int3
or
shlb
mov
push
pop
mov
mov
aad
fwait
mov
sub
sbb
add
and
stc
or
inc
push
jg
dec
cli
std
imul
int3
and
jl
lea
xchg
sti
add
loop
add
mov
ret
lods
repz
pop
pop
xlat
sbb
add
xchg
sub
loope
call
into
dec
mov
add
loope
cmpsb
lret
jno
xchg
xchg
out
mov
cmpsb
aam
das
add
pop
and
lcall
cmp
pop
add
jne
pop
and
adc
jno
imul
pop
lcall
in
test
and
inc
popa
adc
add
addb
inc
lock
inc
and
pushf
ds
xchg
push
add
push
fisubrl
push
lret
push
mov
cli
xlat
lret
push
jge
jae
xchg
or
cli
ret
inc
add
and
mov
loopne
call
je
popa
pop
xchg
stc
lret
and
or
sti
and
pop
cmp
xchg
stc
inc
mov
ret
rcll
xchg
insl
inc
add
mov
pop
pop
testl
into
mov
push
pop
mov
shll
pop
bound
add
mov
dec
jne
add
jmp
xchg
jmp
aad
pop
mov
and
in
inc
jmp
in
mov
add
inc
in
push
mov
jmp
ret
pop
test
cmc
pop
or
add
mov
jnp
ljmp
lods
and
and
push
call
add
inc
cmpsb
add
popa
sub
add
inc
imul
es
daa
inc
sbb
inc
add
xchg
sbb
mul
add
call
push
xchg
or
cwtl
add
sbb
dec
inc
add
out
mov
cmp
xor
mov
imul
or
je
jns
xor
xor
mul
repnz
rcll
das
or
ret
stos
xchg
add
cmc
adc
add
add
in
add
call
add
enter
ret
mov
fwait
mov
les
dec
lds
outsl
adc
cmp
je
popa
popf
dec
lds
std
cltd
xor
inc
sti
ljmp
sti
mov
push
addb
lcall
ljmp
xor
add
mov
dec
mov
sub
sti
xchg
xor
sahf
stos
arpl
fidivrl
rcll
push
daa
add
adc
jg
add
imul
mov
fcoms
dec
dec
aas
xchg
rcrl
adc
adc
vmovaps
je
sbbl
and
arpl
pop
enter
add
imul
cmpsb
imul
aas
xchg
ljmp
sub
push
loop
inc
aas
xchg
ja
adc
mov
push
sub
je
add
roll
in
pop
fimull
mov
pop
stos
pop
fdivrl
mov
mov
sub
pusha
fldl
add
mov
cmp
sarl
adc
cmp
aam
mov
call
lds
cli
sub
and
inc
mov
inc
mov
sub
dec
cmp
and
inc
repnz
add
test
xchg
arpl
pusha
mov
mov
mov
scas
das
pop
mov
push
push
inc
jmp
adc
sti
cmp
xlat
call
movsl
push
or
pop
jne
aas
lods
fcoms
cli
aam
inc
aas
jmp
add
mov
jge
jge
dec
mov
ficoml
loop
call
add
fdivr
dec
or
sub
inc
add
and
jmp
mov
mov
xchg
jge
add
sti
add
push
jp
cmc
add
add
ret
jle
repz
cld
addr16
sti
out
iret
idiv
inc
in
test
cmpl
testl
arpl
dec
sbb
mov
inc
testl
lahf
dec
notb
mov
je
andb
mov
testb
sbb
addl
testb
inc
repz
mov
jae
mov
add
push
xor
in
xchg
pop
xchg
stos
test
xchg
xchg
or
add
test
mov
jg
sbb
xchg
dec
mov
push
daa
cmpsl
outsl
add
inc
sbb
xorps
cli
sub
sti
xorl
push
test
repnz
in
mov
or
mov
cmp
mov
jmp
or
scas
das
adc
xchg
or
and
jmp
loop
aas
sbb
sub
push
mov
shlb
out
test
add
cmp
mov
pop
or
mov
mov
sbb
out
and
xchg
test
adc
mov
hlt
inc
stos
mov
cwtl
xchg
jg
and
lock
adc
adc
inc
std
cli
adc
lcall
adc
push
adc
sbb
fcoml
mov
add
fcomps
push
sti
es
ljmp
movsb
lahf
ret
out
test
jge
jl
loop
add
jns
and
push
or
push
push
loope
sub
pop
push
jnp
push
mov
stos
pop
maxps
jmp
jae
dec
aas
loope
out
notl
arpl
adc
nop
jmp
sti
jbe
or
das
ja
cmp
adc
xorb
xchg
add
add
sbb
sti
imul
add
orb
add
notl
decb
inc
in
push
notb
push
cmp
push
adc
pop
mov
jp
adc
mov
addb
or
in
pop
lahf
movsb
push
pop
lahf
notb
push
inc
testl
ds
enter
in
adc
dec
push
xchg
push
inc
inc
push
daa
daa
dec
dec
mov
cmp
shl
loop
xor
aas
push
jne
orl
pop
pop
add
dec
mov
and
add
sub
xchg
mov
pusha
dec
stc
inc
outsl
call
aam
or
int3
sbb
sub
inc
inc
stos
daa
mov
push
adc
adc
push
add
adc
pop
jb
pop
pop
pop
mov
add
jnp
mov
pop
fs
sbb
cwtl
imul
data16
setns
adc
and
add
jnp
dec
mov
dec
mov
gs
nop
jnp
fiadds
ret
cwtl
lret
pop
xchg
sti
shrb
push
xchg
sbb
scas
sbb
jmp
lea
in
inc
es
sti
aam
dec
xchg
add
std
xor
mov
adc
fcoms
fcom
xlat
jge
popa
jns
push
mov
and
or
mov
sahf
or
call
lret
or
lea
adc
imul
jne
lods
xchg
pop
sahf
pushf
cmc
pop
xlat
xlat
push
ss
push
imull
movsb
xchg
add
mov
fistpll
jne
stos
enter
cs
jnp
push
ret
jne
adc
gs
cmp
jmp
jnp
jns
jne
lods
add
scas
add
out
push
jmp
jae
pop
jmp
adc
push
inc
sti
cmp
sub
mov
pop
push
pop
add
push
notb
xchg
jp
ljmp
aas
out
push
xchg
shlb
sbb
sbbb
cmc
add
les
xchg
cmc
adc
ret
inc
sti
sub
add
rcll
mov
out
cltd
rclb
pop
dec
adc
ret
sahf
nop
pop
or
lahf
adc
adc
popl
pop
iret
adc
push
pop
dec
mov
xchg
lcall
movsb
testb
add
nop
sar
sub
mov
jb
das
and
sub
mov
ss
leave
ret
lret
or
mov
mov
adc
sbb
adc
add
mov
mov
cmc
repz
xchg
mov
or
pop
or
adc
push
sub
loope
push
aas
xchg
inc
sub
mov
inc
xchg
mov
cmp
jmp
mov
mov
push
jns
jg
fs
sbb
cmp
push
jg
add
and
adc
or
pop
shr
aam
jmp
xchg
mov
mov
inc
adc
sbb
or
sti
hlt
mov
aas
jmp
add
pop
pop
bound
pushf
and
sbb
in
xchg
add
or
scas
fcoml
cs
jge
mov
pop
sti
lahf
fldl
test
push
xchg
pop
jb
xchg
pop
and
add
adc
loop
pop
push
cmp
or
clc
mov
lea
notb
jns
decl
sub
xor
inc
jge
inc
jo
mov
loop
imul
repnz
notb
mov
shl
dec
push
push
arpl
jb
stc
cmp
cmc
idiv
jb
jp
cld
add
insb
mov
add
add
jns
adcl
in
xor
aaa
pop
lea
xchg
js
pop
cwtl
pop
addr16
call
cmpsl
sahf
mov
sub
pop
jl
mov
mov
adc
sti
jae
jl
pusha
xchg
push
sti
insb
jmp
adc
shll
test
rorl
les
sarb
add
fucomip
mov
xchg
jge
mov
repz
push
xor
push
pop
mov
imul
jmp
cli
mov
cmp
sti
call
push
jnp
mov
bnd
pop
sahf
or
adc
inc
sbb
aad
mov
sbb
push
inc
scas
pop
pop
pop
mov
sbb
clc
test
jb
push
adc
or
cmpsl
jne
inc
lcall
xchg
add
adc
movsl
es
or
jle
popw
fcompl
mov
call
aam
ljmp
xchg
push
add
xor
gs
or
popa
mov
cs
xchg
insl
shlb
and
push
in
aaa
add
adc
arpl
mov
xlat
push
pop
jle
test
push
shrl
dec
mov
int
sti
push
pop
arpl
mov
or
rcll
je
jmp
test
jg
lahf
add
rcrl
je
jp
sti
add
or
shll
je
ljmp
cld
in
sti
incl
lods
out
je
xor
repz
test
push
enter
push
mov
jnp
dec
into
dec
xorb
xor
add
sub
ljmp
int
mov
sub
int3
mov
mov
sub
movsb
jecxz,pt
mov
test
sub
add
xor
push
test
add
add
cmp
call
sar
mov
or
adc
test
fstl
aaa
fimull
xor
pop
cmp
dec
sti
subl
lock
mov
sbb
pop
decl
add
sti
loope
or
xchg
inc
jne
push
cwtl
sti
lret
ja
cmpsb
sar
leave
sbb
adc
add
xlat
xchg
push
rcrb
or
ret
or
mov
fwait
add
mov
mov
jmp
out
orb
sub
or
lahf
jnp
add
adc
jns
jnp
cwtl
and
pop
cwtl
dec
lret
push
leave
push
hlt
sti
sbb
ret
jnp
and
les
lahf
out
add
outsb
enter
out
push
mov
jmp
lcall
pop
enter
out
sbb
lcall
mov
push
je
sub
sbb
sti
pushf
incl
push
add
xchg
mov
cwtl
fistpll
icebp
lods
testb
pop
ror
cmp
pop
push
cmc
sub
not
xchg
sarl
enter
push
bound
or
xchg
add
std
adc
mov
or
jle
je
cli
cld
pop
je
jno
pop
sti
mov
xchg
jge
fldl
jp
in
mov
add
jbe
dec
add
mov
pop
jmp
repz
cmp
cmc
test
imul
or
cs
dec
add
xlat
imul
loop
divl
lods
add
adc
cs
sub
push
pop
cmpsb
lds
inc
es
jne
jae
mov
jge
push
mov
in
xlat
sbb
and
mov
decb
xchg
test
jb
fiaddl
sbb
out
push
or
out
mov
incl
push
jecxz
xchg
fiaddl
addps
jae
dec
pop
pusha
stc
or
xchg
sahf
mov
out
movb
push
xchg
inc
je
xor
push
mov
outsl
nop
cs
icebp
jnp
xlat
add
adc
call
fs
bound
jp
movsb
sahf
cmc
mov
test
push
add
cwtl
in
or
mov
dec
lock
stos
pop
sbb
fcmovnbe
inc
dec
stos
pop
adc
sbb
int3
jmp
mov
int3
fistpl
mov
or
cmp
add
mov
js
add
ja
shlb
jle
adc
ret
add
mov
add
fmuls
xchg
add
push
mov
add
add
sbb
xor
aad
sbb
lods
push
adc
lods
inc
sbb
dec
and
sti
rcrl
jmp
xchg
call
dec
push
sti
lods
stos
xchg
sti
rol
pop
je
sahf
sub
mov
add
dec
inc
add
add
cli
jmp
xchg
adc
jecxz
sti
pop
stos
inc
xchg
imul
push
das
sahf
dec
jns
pop
xchg
pushf
xor
add
shll
xor
xchg
out
in
clc
ljmp
mov
dec
mov
or
mov
jl
clc
outsb
adc
loope
call
mov
inc
jns
inc
add
mov
add
jg
add
cmpb
bound
orl
out
jg
jb
mov
int3
iret
jb
jne
add
sbb
sbb
or
add
test
mov
fistpll
pushf
test
rorl
test
push
in
push
pop
jns
cmp
or
rolb
cld
add
pop
icebp
or
ucomiss
xchg
cltd
mov
or
xchg
jne
out
xchg
or
push
add
mulb
mov
sarl
stos
or
psubusb
out
inc
das
xlat
add
cmpl
push
jp
decl
scas
push
xchg
fdivrl
adc
out
inc
mov
fiadds
sbb
hlt
mov
jmp
repnz
std
shll
inc
jmp
sbb
add
aaa
lcall
repnz
add
stos
fadd
loopne
imul
pop
jmp
inc
push
mov
inc
cli
add
clc
xchg
cltd
sar
lret
movsb
inc
jmp
mov
test
add
xchg
add
pushl
test
test
idiv
int
add
xchg
les
sub
add
jbe
or
add
jmp
push
cld
or
add
jmp
outsb
push
jb
lock
adc
add
test
mov
hlt
stc
cli
pusha
aam
ss
cmpsb
jmp
cmp
std
cli
out
icebp
arpl
in
xchg
add
hlt
lret
adc
sub
ss
test
decl
push
push
pushl
stos
cmp
mov
add
mov
add
cmovo
sar
stc
ja
push
sbb
cmpsb
inc
cmp
in
clc
ljmp
mov
lea
icebp
jno
add
decb
xchg
add
adcl
add
divl
add
out
test
add
call
jp
and
cmp
xchg
jmp
add
stos
add
mov
add
imul
jne
mov
lret
test
add
push
jmp
stc
dec
jae
sti
add
ja
iret
jge
adc
sbb
repz
in
stc
sbb
cli
jae
cmpsl
enter
in
gs
lods
mov
scas
gs
cli
popa
fbstp
loopne
add
sbb
mov
cmp
add
xchg
xchg
jno
mov
cmp
sub
jns
call
pop
fdivl
jge
add
jno
xchg
jae
xchg
clc
or
ja
jge
or
je
mov
loop
push
bound
cmp
out
sbb
and
std
lods
out
mov
add
jbe
sub
stos
mov
jl
push
xchg
orl
insl
hlt
adc
pushf
adc
add
add
fadds
cmp
cmp
dec
call
cli
jb
loope
imul
mov
jmp
loope
gs
test
pop
add
cwtl
sti
je
sbb
jo
xlat
add
adc
inc
loope
sti
je
add
clc
push
mov
add
mov
imul
add
in
sbb
jmp
fcos
pushl
fs
or
push
pop
adc
mov
divl
gs
inc
or
ss
adc
divb
xor
adc
push
lret
aas
or
push
div
dec
push
jle
dec
lea
decb
sahf
add
lds
add
mov
add
test
outsb
and
jne
add
add
pushl
outsl
cld
push
jp
inc
std
jge
jne
stos
incb
cmc
adc
addr16
sbb
inc
lock
in
orl
push
lfs
push
jmp
xor
or
sub
dec
fwait
dec
or
lret
mov
dec
xchg
stos
cmp
insb
xchg
aas
jg
fdivrl
mov
add
jae
mov
inc
sbb
rcll
test
cmpb
bound
sbb
jno
clc
out
je
inc
outsb
adc
cmpsl
cmc
repz
inc
jmp
pop
ffree
hlt
add
sub
push
cltd
add
roll
data16
sti
outsl
test
mov
incb
push
cmc
inc
jmp
or
cmp
dec
xor
inc
xchg
xchg
in
dec
or
adc
add
push
insl
call
imul
decb
mov
jmp
lea
lcall
shlb
sub
add
inc
mov
push
push
call
sbb
add
xchg
inc
dec
lcall
adc
xchg
jb
xchg
in
or
add
jmp
cmpsl
inc
add
clc
ss
mov
add
sbb
cli
cmp
pop
incb
cwtl
ja
jmp
cmpsb
inc
add
in
ss
stos
and
pop
jl
adc
mov
dec
notl
add
jae
je
hlt
mov
xlat
or
imul
or
test
xchg
int
decl
xchg
dec
notl
and
in
cmp
js
mov
or
dec
divl
cmc
rorb
mov
ret
cmp
dec
divl
cmc
jae
sahf
push
divl
cmc
adc
in
ja
cmp
mov
inc
int3
sub
stos
addl
fiaddl
mov
es
push
add
inc
xchg
and
sbb
shl
or
xchg
xchg
jb
ret
imul
loop
jno
mov
loop
push
jmp
adc
test
add
xchg
in
rorb
aam
xor
push
add
fdivr
sbbl
jae
mov
push
mov
adc
add
sarl
pop
iret
mov
mov
daa
test
sti
andl
push
add
jae
fnstcw
adc
ss
mov
idiv
into
jge
push
fnstcw
lcall
xchg
icebp
sti
repz
inc
jmp
add
push
ret
push
sub
test
jmp
shll
push
aam
add
jmp
push
cmp
shl
vphsubdq
mov
es
mov
xchg
lahf
push
sub
add
pushf
dec
push
cltd
out
sub
aas
push
adc
xchg
xor
sbb
mov
iret
pop
mov
das
in
lcall
sub
xchg
push
mov
cmp
lahf
mov
sub
repz
insb
jnp
push
shrl
scas
cmc
jns
inc
push
das
add
lock
jmp
xlat
add
jp
pop
ret
dec
mov
sub
in
pop
inc
add
and
cltd
sarb
shll
call
xor
pop
or
push
outsb
mov
idiv
add
notl
or
incl
jg
adc
jg
inc
add
dec
mov
cld
test
mov
add
call
test
add
mov
xchg
lcall
fldenv
push
sbb
mov
test
sbb
add
mov
ds
jp
stc
push
rcrl
pop
mov
in
shlb
dec
mov
pop
inc
and
pop
les
pop
jo
jo
xchg
ljmp
out
mov
add
incl
jl
data16
cmpl
xlat
xlat
jns
call
aad
paddq
jmp
mov
add
inc
xor
call
pop
sbb
jmp
cli
push
jp
pop
js
and
sbb
mov
clc
sbb
fwait
clc
dec
clc
insl
jbe
pop
leave
mov
in
test
add
orl
adcl
add
push
dec
add
imull
mov
and
add
add
pop
aas
inc
jmp
outsl
add
jmp
nop
jmp
add
sub
fcoml
push
icebp
mull
sbb
add
pop
imul
loope
mov
mov
outsl
jmp
ds
adc
test
mov
xchg
test
mov
push
jmp
add
ja
loope
js
out
stos
cmpb
sbb
cli
jmp
adc
jg
add
pop
add
jae
cmp
adc
mov
sbb
pusha
add
jo
addl
out
outsb
or
ja
jmp
dec
bound
jle
cmc
call
jbe
loope
push
pop
add
bound
or
outsb
sub
in
cmp
inc
add
xlat
enter
dec
call
or
adc
mov
jo
push
gs
adc
xchg
shl
je
mov
add
pop
and
pop
add
adc
add
outsl
pop
in
or
movsb
sbb
mov
pop
les
or
adc
add
ret
mov
xchg
rcll
mov
fsin
cs
outsl
jae
sbb
mov
pop
cmp
cmc
repz
inc
inc
add
adc
add
loop
sarb
jg
push
inc
add
push
fisubrl
jmp
jmp
jle
jne
imul
test
add
adc
adc
add
or
mov
pop
jne
imul
jmp
sbb
add
nop
shll
or
fsts
pop
jg
out
jne
jecxz
ds
mov
push
int3
outsl
inc
push
jnp
loope
jmp
or
dec
fdivs
dec
scas
jmp
add
or
shr
inc
dec
pop
cmpl
add
sub
sbb
loope
aas
addr16
and
jle
inc
jmp
jno
loope
sti
pop
mov
adc
lea
push
cmc
push
sbb
outsl
add
jge
adc
in
adc
push
jecxz
sub
xchg
iret
mov
dec
xor
inc
fsubr
test
fcom
push
cwtl
add
add
cld
call
cmpb
popf
adc
incl
test
bound
inc
inc
add
or
lods
cld
jp
cmp
je
sub
add
js
pop
cmp
bound
add
push
adc
das
rorl
rcll
dec
or
adc
add
cli
jg
add
add
pop
xchg
jno
mov
mov
xor
jno
icebp
inc
rcrl
jg
xchg
in
adc
lret
adc
js
and
or
add
shl
test
xchg
mov
inc
aaa
roll
inc
xor
jb
dec
in
xchg
xor
incl
pop
in
cli
xchg
push
scas
lcall
fnstenv
push
cld
push
sti
stc
add
mov
cmp
push
xchg
jmp
pop
xchg
ret
gs
xchg
push
sti
dec
add
icebp
mov
jns
iret
add
rclb
push
xchg
lock
fildl
andl
test
sbb
leave
lock
cmp
outsb
subb
pop
xor
inc
cmpsb
jl
fsubs
dec
out
outsb
pop
out
sarb
or
adc
add
pushf
add
sub
cld
cld
inc
jns
cld
sti
dec
out
xchg
jp
fcoml
clc
dec
push
add
in
mov
dec
add
repz
cs
jae
les
stos
mov
add
cltd
push
rclb
mov
add
adc
cmpsl
arpl
outsb
jmp
or
cwtl
fcmovnb
idiv
jns
xorb
js
pushl
xor
mov
or
jbe
cmp
xchg
add
js
inc
adc
xorl
push
add
or
in
out
add
mov
sbb
jo
addl
mov
ret
idiv
push
mov
rcr
adc
sti
pcmpeqd
push
mov
pop
pop
mov
pop
repz
idiv
rolb
insl
add
pop
mov
push
mov
sahf
scas
lds
add
stc
push
lods
stc
mov
shrl
add
sti
push
add
mov
ds
cld
clc
ja
mov
in
xchg
lcall
jg
adc
inc
adc
jmp
in
mov
and
movl
aad
or
mov
addr16
dec
aas
fists
dec
mov
out
sub
mov
sahf
cli
ja
sbb
xchg
pop
add
outsb
loopne
sub
push
push
mov
adc
fldcw
xlat
push
add
outsl
ja
loop
xor
repz
push
push
pop
in
xchg
clc
arpl
in
dec
mov
add
clc
inc
xchg
ja
jnp
in
mov
push
dec
push
jmp
or
adc
add
jl
cmpsb
jbe
jae
clc
jnp
int
outsb
je
clc
jnp
mov
dec
out
inc
mov
cmp
inc
jmp
pop
in
cmp
xchg
push
sbb
sub
jae
imul
outsb
add
sbb
ds
call
mov
lea
pop
add
test
mov
arpl
in
sbb
mov
xor
cmp
xor
out
out
je
push
cmp
and
test
adc
nop
jnp
cmp
je
mov
jecxz
mov
jnp
sarb
insb
in
aad
dec
orl
jae
lcall
clc
jp
cli
mov
aad
in
das
mov
pop
outsl
call
push
enterw
jnp
or
cld
call
dec
sub
fsubrp
loop
add
incl
loopne
ljmp
fdivrl
pop
push
add
add
cli
mov
dec
or
inc
add
mov
jne
push
shr
test
sub
or
jbe
or
adc
out
sub
add
mov
ja
or
out
fs
lea
inc
mov
jmp
sub
not
push
out
mov
insl
mov
sbb
or
sub
sbb
call
sub
mov
call
jb
mov
call
push
sub
pop
mov
jmp
fdiv
xchg
add
add
mov
cld
adc
call
push
test
mov
sub
call
sti
or
adc
xor
shl
add
push
or
or
push
cmp
xchg
jbe
lock
sarl
mov
jl
sbb
push
lea
dec
and
jl
jmp
insl
cmpl
sbb
adc
add
push
add
add
lock
xor
jmp
repz
xchg
add
pop
add
xor
jmp
inc
or
push
xchg
xor
jmp
push
insb
xlat
or
xchg
xchg
mov
arpl
push
and
sti
adc
add
xchg
test
scas
nop
add
in
call
fldl
add
stos
clc
add
push
add
push
insb
cmp
bnd
jg
lods
call
test
add
inc
les
jmp
jbe
mov
add
std
or
outsb
add
in
xor
adc
rolb
addl
add
or
xchg
in
add
pop
je
and
add
div
std
ljmp
mov
clc
mov
in
arpl
cld
xchg
jmp
idiv
dec
pop
add
loop
rolb
sbb
jmp
mov
push
ret
mov
mov
push
mov
mov
xchg
pop
mov
xchg
js
cmpsb
decb
xchg
sub
mov
add
adc
cmpsb
test
adc
dec
and
ss
mov
jg
xchg
jmp
ds
cmp
test
pop
jae
xchg
in
inc
jmp
movsb
add
sub
cld
mov
inc
xchg
jmpw
into
pop
cmpsb
outsl
jae
jmp
pmulhuw
sub
mov
push
bound
xor
test
or
inc
xchg
pop
outsl
jg
in
pop
and
xchg
out
mov
cmp
and
pop
es
lea
add
arpl
add
add
or
call
mov
cli
repnz
add
mov
cmp
adc
add
loope
sahf
mov
adc
jmp
stc
hlt
dec
ficoml
test
push
ss
aad
add
lock
loop
inc
fnstenv
cmp
cmpsl
fimull
cmp
or
enter
sbb
or
add
cli
add
fldl
inc
fcos
incl
jge
repnz
insl
mov
push
outsl
cmp
pop
mov
mov
jno
ljmp
test
cmc
jne
mov
std
xchg
or
rorl
call
or
loopne
or
or
ficoms
jl
cmp
mov
ds
mov
jmp
dec
mov
clc
or
jg
mov
dec
or
sub
xchg
pushf
pop
and
outsb
fsubs
push
or
fistpll
push
pop
sub
clc
aas
xchg
push
or
mov
jae
push
push
or
sbb
cmp
or
push
dec
cld
sbb
add
push
dec
pop
adc
clc
das
mov
cmp
add
leave
out
fidivrl
mov
mov
adc
add
inc
xchg
adc
mov
aas
loope
push
ret
lcall
push
jnp
adc
in
cmpsl
cwtl
loope
or
sub
sbb
push
outsl
xlat
push
or
jmp
dec
andl
mov
inc
into
ret
aaa
xor
aad
cmp
loopne
in
inc
xchg
adc
aaa
popa
adc
dec
and
adc
in
loopne
adc
fistl
insl
xchg
xlat
cld
fwait
into
in
fdiv
addl
insb
sarb
in
push
sti
fisttpll
ficoml
stos
push
add
cld
jle
das
in
sbb
mov
lods
cwtl
sub
aad
sbb
shl
sbb
add
nop
sti
stc
into
add
fsts
dec
push
add
jns
mov
cmp
inc
in
pop
xor
jge
push
add
movsb
jnp
jmp
test
test
add
xorl
or
add
call
sub
outsb
insl
push
fs
or
cmc
jne
loopne
or
loopne
push
popl
mov
stc
ljmp
repz
add
or
jne
notl
mov
adc
mov
xlat
adc
insl
cld
dec
push
add
dec
adc
dec
ljmp
mov
add
loope
call
loope
xchg
orb
pop
mov
jl
pop
sub
add
int3
inc
stc
out
cmpsb
cmpsl
pop
add
sub
leave
mov
push
inc
bound
in
xchg
pop
or
out
scas
cli
xor
mov
xchg
out
rcl
or
lods
xchg
push
xor
in
lds
loop
outsb
xchg
aas
inc
pop
pop
hlt
pop
dec
xor
push
cmp
xchg
aam
sub
inc
jg
ret
or
arpl
cli
push
shll
sti
add
pop
inc
and
add
inc
dec
cmp
cmp
in
out
jae
call
or
roll
and
fisubrl
call
imul
or
in
jmp
insb
mov
aad
fucom
test
loope
pop
in
jo
fwait
add
pushf
jg
ffree
cld
dec
or
mov
fmull
jge
filds
cs
ljmp
fs
popf
xchg
mov
movsb
sbb
sub
ljmp
xchg
jmp
repnz
cli
push
enter
nop
add
aas
pop
or
mov
test
mov
jl
xchg
movsb
jns
bound
xlat
cli
fwait
aad
in
xchg
je
dec
inc
or
add
push
lea
cli
fisubs
lret
xchg
xor
pusha
xlat
test
jo
sbb
mulb
das
jmp
xchg
lock
fs
mov
jae
jg
add
orl
decb
pusha
mov
dec
decl
sub
incl
and
incl
fucom
add
shlb
orl
jmp
adc
push
cmpl
lods
js
cmc
push
cmp
or
push
dec
adc
cmpb
cli
loopne
xor
js
add
rorb
lret
cmp
xchg
pop
aam
or
or
mov
ljmp
xor
adc
mov
icebp
and
xchg
cmp
and
add
aad
cmp
or
aad
out
pop
ds
and
dec
imul
or
sbb
xchg
aad
xor
dec
and
out
imul
sub
das
hlt
insl
cmp
enter
mov
mov
push
cmp
and
lods
bound
aam
jg
test
cld
nop
inc
add
iret
xchg
push
xlat
push
test
sub
out
cmp
adc
insb
adc
jmp
insl
xchg
pop
jmp
push
mov
fistl
mov
mov
xorl
daa
push
lock
lock
icebp
loop
stos
repz
xchg
repz
cmc
xor
mov
ret
out
ss
iret
sti
mov
dec
add
add
loope
mov
jp
cmp
xchg
xor
push
fidivrl
push
adc
add
jmp
fdiv
das
fistl
mov
cwtl
dec
clc
outsb
inc
push
lea
es
test
jg
jge
dec
aas
xchg
ret
je
push
or
fisubrl
add
jmp
leave
adc
add
adc
lea
ds
pop
mov
adc
dec
push
add
or
cmp
add
jne
lods
add
sbb
add
add
adc
test
mov
sub
add
insl
jl
test
cmp
dec
loope
inc
lods
jl
or
sub
adc
outsb
push
sub
in
add
add
dec
xchg
push
and
test
sbb
add
mov
insb
xor
jae
xchg
mov
xor
push
inc
add
add
xchg
xlat
xchg
in
cli
or
movhps
jae
push
mov
aam
jmp
xor
imul
push
xchg
mov
push
add
call
adc
push
push
push
xlat
jge
xchg
jne
inc
adc
ficoml
sbb
pop
iret
adc
adc
test
add
call
out
incl
xor
shrl
int3
mov
call
sti
mov
dec
rcl
call
adc
fxch
lods
dec
sbb
sub
push
in
xchg
add
int
mov
lods
aad
jg
pop
cmp
inc
dec
jnp
and
sbb
cwtl
and
adc
dec
push
loop
xchg
lret
xchg
or
and
mov
fs
loopne
ljmp
jnp
sbb
leave
stos
xchg
add
test
nop
push
jne
nop
popl
roll
xlat
bound
bound
add
sbb
sbb
sub
sbb
stos
movsl
xor
push
push
mov
xlat
outsb
jmp
pop
xchg
sub
ficoml
popa
shl
mov
adc
pop
mov
inc
add
sub
add
ja
push
jnp
push
test
lret
sti
add
notl
lock
aam
pavgw
je
sub
ds
mov
ljmp
add
mov
out
push
cmpsb
jg
push
add
add
sbb
js
add
loope
dec
call
jo
outsb
jp
dec
pop
adc
mov
or
std
mov
mov
clc
jmp
pop
lea
aad
mov
sti
mov
xlat
cs
and
repnz
jl
loopne
int3
cmpl
add
sub
sub
iret
cli
xor
cld
dec
sub
pop
cli
sbb
and
adc
adc
enter
xchg
pop
mov
test
add
adc
incl
stc
xsha256
cmpsb
xchg
push
lret
rcl
adc
mov
push
dec
jmp
and
loop
inc
jo
cs
mov
sbb
clc
add
jge
or
stc
add
sti
outsb
push
or
xchg
repz
sbb
pop
stc
push
inc
or
hlt
inc
jmp
movsb
jno
stos
inc
jl
call
or
shll
aaa
in
cmp
sti
das
pop
mov
subl
xor
shlb
sub
mov
scas
addl
push
add
pop
inc
add
outsb
lret
mov
lret
sbb
jae
jmp
pop
add
xor
add
insb
push
dec
xor
clc
mov
fidivrl
pusha
xchg
js
in
rolb
in
jge
je
pop
cmp
jmp
add
jo
lock
mov
add
in
mov
mov
out
mov
leave
lea
and
jle
jge
push
cmpsb
mov
xchg
fistl
mov
xorb
add
sub
add
and
add
out
lret
mov
test
add
push
lock
idiv
stc
mov
jmp
adc
loope
push
xchg
fs
mov
ret
push
jle
add
das
pop
mov
sub
inc
inc
sbb
push
cld
xor
inc
roll
shrb
add
add
adc
cmp
mov
out
cmp
lods
mov
pop
add
jnp
mov
pop
mov
and
sarb
mov
std
je
pop
dec
clc
xchg
inc
jge
fldt
xor
leave
lret
jbe
dec
and
out
cmp
push
adc
out
lret
test
xchg
push
add
xlat
aad
lds
xor
imul
call
sbb
sub
iret
leave
jle
jle
mov
stc
add
cmc
add
fsub
adc
adc
fildl
ja
jge
fdivrs
into
jle
les
cld
add
lret
sub
mov
pop
sub
shlb
out
sub
in
push
add
xor
cmp
jl
clc
std
ret
mov
xchg
add
add
outsb
sti
addb
jl
pop
ja
add
lret
push
xlat
dec
jge
push
call
xor
movb
pusha
pop
int3
test
iret
je
cmp
add
int3
dec
mov
dec
cmp
les
mov
xor
jl
je
dec
push
sti
pop
sbb
jae
into
cmp
and
les
ds
pusha
push
adc
jl
inc
adc
sub
xlat
add
cmp
fsubrs
lods
fcmovnb
scas
call
arpl
xchg
ret
add
mov
inc
push
or
mov
or
adc
out
mov
or
loopne
push
adc
xor
jmp
sub
push
movsl
fstpl
lcall
inc
test
cmp
xor
mov
inc
jl
ds
leave
add
cmp
mov
lock
test
sub
mov
xchg
jle
add
pop
leave
ret
xchg
pop
inc
lock
inc
jbe
mov
adc
jle
push
setae
xchg
ja
ja
xor
cs
jae
push
mov
rclb
inc
sbbb
mov
test
add
insb
mov
cmpsl
test
aas
test
cli
gs
lock
cmpsb
pop
add
pop
stos
fiaddl
ret
call
pop
cltd
push
sbb
mov
jns
verw
add
xor
repz
arpl
addr16
cmp
stos
lds
jns
or
pop
mov
dec
jg
clc
fcomps
sbb
cmp
pop
mov
add
mov
les
out
into
sub
xchg
push
mov
stc
push
roll
iret
inc
sub
lret
insl
ret
or
lret
lret
cmp
mov
insb
inc
or
add
call
ds
in
fs
xchg
out
jb
imul
sbb
out
mov
jns
xor
ficoml
sub
lock
scas
xchg
push
or
test
inc
hlt
repnz
jae
jmp
xor
and
add
aam
add
icebp
jne
xchg
inc
adc
out
mov
cmp
dec
stc
pop
add
mov
xchg
or
rcrb
xor
leave
push
bound
mov
lret
add
pop
add
push
and
test
add
xchg
adc
mov
repz
xor
lret
push
push
or
jl
jo
pop
addb
shr
es
stc
les
pop
add
add
push
adc
adc
mov
inc
cld
add
xchg
cmp
and
cmpsl
mov
rcr
jno
icebp
sub
or
cmpsl
and
in
mov
sub
jle
jle
in
ffree
jle
xor
cmpsl
jg
mov
ljmp
mov
std
sub
sbb
mov
int
push
mov
addb
cmpsl
jg
shl
test
out
fsubl
mov
or
add
lock
push
add
jle
fs
mov
cmpsb
test
cmp
jp
and
adc
aaa
add
mov
inc
xchg
orb
lods
xor
or
jmp
add
sbb
ret
adc
xlat
ljmp
fcmovnbe
and
aas
or
add
out
mov
sti
mov
sbb
outsb
orl
int
xor
es
test
add
sbb
push
inc
push
cmp
sbb
add
adc
or
add
imul
je
pop
sbb
pop
mov
cli
xchg
fidivrl
stc
into
dec
jp
nop
cmpsl
cmp
pop
jmp
aam
outsl
jnp
aaa
add
icebp
aaa
inc
add
inc
fidivrs
jbe
mov
mulb
sarb
pop
inc
jmp
mov
mov
push
pop
mov
mov
add
add
ror
in
iret
xor
pop
inc
cmp
ficoms
lods
sbb
idivl
shlb
cli
mov
addb
mov
je
jge
sbb
mov
or
mov
inc
mov
cmpsb
mov
inc
mov
sub
sahf
inc
lods
in
popf
inc
jge
mov
inc
insl
jno
inc
insl
mov
inc
jge
popf
inc
xchg
cmpsl
push
mov
inc
daa
loopne
pop
or
xchg
xlat
das
xchg
lahf
sub
add
les
fmuls
hlt
mov
add
mov
lock
jbe
mov
sahf
inc
push
pop
in
jae
mov
call
popa
dec
inc
push
repnz
mov
xor
jae
daa
adc
cli
jle
popa
fsub
xchg
jns
or
js
mov
jp
or
js
mov
add
add
or
jnp
adc
ret
xchg
cmpsl
call
cmp
nop
xchg
cld
sbb
nop
xchg
in
cld
decl
in
xchg
xchg
or
mov
in
mov
xchg
add
xchg
clc
pop
and
mov
jg
or
add
xchg
add
pushf
or
mov
mov
add
ret
fstpt
imul
pop
scas
add
jmp
adc
push
sbb
push
sbb
addb
or
repz
scas
fldl
adc
mov
jl
out
add
bound
add
ret
div
xchg
xchg
add
test
add
push
fcoml
jmp
cmpl
jge
fnstsw
jg
or
and
cli
add
test
mov
jp
in
and
jb
jns
cmp
verw
cli
shl
lods
jbe
ud1
add
cmp
jg
or
cld
movsl
out
rol
cmc
adc
pop
test
or
call
js
add
in
enter
sub
jne
cmpb
out
add
in
fs
xor
cmp
loopne
add
and
mov
xchg
and
sbb
aaa
nop
ror
push
add
mov
test
aad
call
jle
fisubrl
loop
mov
dec
decl
mov
cmp
xchg
cmpsl
mov
dec
and
xor
xchg
in
cltd
pop
rolb
inc
mov
shll
stc
add
outsb
pushf
xor
mov
repnz
and
jl
cmp
sub
and
cmpsl
xor
shrd
sbb
add
sbb
fcoml
push
or
mov
mov
inc
add
or
mov
add
xchg
add
add
call
sbb
mov
mov
jl
sbb
adc
jnp
daa
push
adc
rcl
sbb
push
or
ds
adc
or
sub
dec
lcall
add
test
add
xchg
mov
add
xchg
xor
lcall
cmpsl
sbb
in
test
ret
mov
decb
or
or
jmp
or
inc
adc
sbb
add
jbe
jno
fmull
out
mov
inc
or
xlat
test
adc
sub
cld
in
nop
mov
ret
xor
fwait
jge
hlt
xchg
add
call
mov
jmp
jg
jp
mov
jns
test
jmp
and
je
std
jbe
push
add
inc
add
jb
sti
and
test
cld
std
call
lods
jbe
cmpxchg
add
cmp
xor
sub
add
inc
mov
pop
jmp
insl
jns
jo
mov
sbb
jns
or
and
add
jg
js
mov
les
lahf
movsl
add
add
or
std
push
jge
or
xchg
daa
mov
imulb
pop
push
bound
out
out
bound
call
and
fcmovbe
jne
xchg
cmpsl
popa
outsl
call
decl
loop
and
movsb
pop
jmp
sbb
sarl
repnz
popa
mov
shlb
out
popa
sbb
add
paddsw
add
mov
xchg
xchg
add
subl
scas
cmp
sbb
add
sbb
jge
sbb
ret
push
repz
xchg
inc
inc
hlt
fbstp
sbb
jge
sbb
sbbl
inc
mov
cmpsl
fwait
or
insl
dec
xchg
add
mov
or
repz
add
mov
rorb
push
or
das
aam
add
jbe
inc
fwait
mov
mov
add
sbb
adc
ret
mov
pop
jmp
jnp
jg
lea
imul
inc
add
cmp
div
stc
shll
add
imul
push
add
push
inc
add
clc
add
repz
in
cltd
shl
add
test
add
imul
jg
add
in
andl
jle
or
jle
or
ja
push
and
in
or
jmp
in
push
xchg
inc
sub
jnp
add
mov
fbstp
imul
jnp
jns
or
jb
fmuls
insl
add
pop
jnp
push
or
dec
add
push
add
add
inc
jnp
push
add
or
loop
xchg
sbb
lods
icebp
dec
je
icebp
das
adc
dec
xchg
and
add
stos
lahf
stos
sbb
fimuls
inc
mov
out
or
lcall
pop
data16
or
andl
add
ret
and
lahf
xlat
xchg
jle
je
or
cmp
sub
ret
adc
sub
decl
mov
or
add
std
scas
add
jmp
cs
cmpb
push
xor
rcll
stos
les
jmp
or
mov
add
jno
add
jg
mov
cli
fisttpl
cmpsl
out
lds
and
stc
dec
cltd
jae
call
sbb
mov
adc
add
xchg
xor
addl
add
rcll
sub
imul
push
add
pop
mov
out
adc
add
mull
add
add
mov
cmp
sub
sbb
cld
out
adc
inc
idivl
aas
or
add
loope
adc
out
lock
xchg
xor
je
pop
mov
aam
ret
mov
add
insb
lret
stc
call
adc
or
xchg
xor
lcall
add
decb
jl
dec
add
xchg
mov
icebp
and
sub
or
jp
xchg
movsb
cli
je
jbe
and
jl
and
test
lock
mov
in
add
sub
inc
lods
mov
push
inc
jnp
add
test
push
adc
or
jge
icebp
or
jp
js
loope
out
outsb
in
mov
jo
add
data16
insl
inc
add
adc
xchg
fstps
shrb
mov
mov
cmp
add
cmp
pop
adc
test
mov
add
push
add
mov
fistl
mov
lds
adc
jecxz
and
xor
fwait
lcall
xor
fdivrp
add
add
mov
neg
mov
push
pushf
xchg
inc
ficompl
call
push
push
lahf
sub
ds
sub
xchg
jecxz
fistl
push
ljmp
inc
call
add
leave
mov
test
iret
outsl
xchg
add
sub
loope
shrb
add
and
jl
movsl
xorl
ja
adc
inc
call
add
push
cmp
xchg
add
jmp
sahf
cmc
addb
mov
mov
push
das
imul
call
sahf
mov
cmp
adc
cmc
xorl
cli
shlb
cli
mov
adc
cld
scas
pop
addl
mov
cmc
and
or
xchg
mov
adc
xchg
add
aaa
fildl
add
sti
subl
add
fcompl
jmp
jnp
mov
and
jns
dec
mov
inc
add
sub
add
in
push
test
cld
jnp
cli
pop
xchg
rolb
std
mov
mov
inc
out
clc
call
mov
stc
push
sub
inc
mov
lods
ljmp
in
stc
cmpsb
add
mov
orb
mov
xchg
gs
clc
enter
jmp
ljmp
add
xchg
xchg
mov
cmp
add
xchg
fisttps
jg
xor
js
std
xchg
push
divl
std
and
fwait
inc
lcall
dec
xchg
sbb
push
cwtl
pushl
or
add
adc
add
xchg
sbb
add
xchg
push
lcall
jl
xchg
sbb
call
add
xchg
jnp
add
add
sahf
cltd
xor
pop
xor
fidivrl
jmp
clc
daa
inc
jmp
lcall
add
dec
and
paddq
add
or
loopne
xchg
ljmp
inc
jmp
adc
jnp
push
xchg
add
pop
nop
add
mov
add
mov
fcompp
jns
ljmp
addl
pusha
xchg
add
das
int
push
push
pop
cld
call
adc
add
jmp
xchg
imul
cmp
das
int
sub
fcompl
insb
dec
cli
xorl
clc
test
add
xchg
addr16
out
jnp
push
jp
sti
and
adc
adc
pop
inc
and
sarb
mov
test
add
pop
scas
or
xchg
ret
lods
scas
loope
sub
and
inc
add
pushf
add
std
push
pop
psllw
ljmp
mov
push
jne
daa
inc
and
and
inc
add
inc
add
fnstsw
cmp
push
fs
in
es
mov
outsb
sub
dec
and
jbe
and
xchg
int
std
jmp
mov
and
leave
sti
xchg
sub
xchg
mov
mov
stc
or
jo
cli
fwait
push
and
cltd
fwait
xchg
nop
cltd
jg
scas
aaa
add
add
ficoml
jle
lea
dec
enter
cmpsl
pusha
les
cltd
stc
test
fwait
ds
pusha
jbe
xchg
push
mov
in
mov
jmp
xchg
adc
mov
or
add
jmp
nop
xor
rcr
std
or
lods
dec
pop
xchg
add
and
fcmovnu
jnp
decb
orb
faddl
push
cmp
icebp
mov
xchg
add
mov
mov
mov
adc
jecxz
push
fs
test
mov
loop
inc
call
cld
pop
iret
in
xchg
aaa
jge
pop
icebp
fs
add
add
add
or
pop
addr16
xchg
cmpb
xchg
add
imul
std
call
cwtl
cmc
mov
pop
xchg
and
mov
or
out
lret
add
ljmp
or
cld
call
pop
idivb
xchg
add
jb
add
and
or
loope
call
psubusw
clc
out
jle
hlt
aas
cmpsb
or
out
jge
and
in
adc
cld
aas
and
out
jnp
add
cld
inc
jnp
psubsw
push
or
testl
or
jle
std
adc
mov
cltd
stc
ljmp
inc
add
jg
add
xchg
sti
imul
cmp
rclb
ja
imul
test
pop
test
inc
cli
adc
inc
add
sahf
add
jmp
adc
cmp
xchg
inc
std
lcall
adc
sti
or
sbb
inc
movsb
rclb
test
jg
stos
jle
or
out
add
lods
cltd
rolb
sub
fcoml
jae
subl
std
jae
jle
pushf
inc
and
arpl
sub
push
test
popf
xchg
test
js
xchg
test
jl
js
cmc
mov
sahf
lds
aam
lahf
out
pop
jmp
mov
add
pop
add
push
insl
call
add
sahf
cltd
jg
pcmpgtw
sahf
mov
push
testl
test
or
jle
xchg
mov
xchg
sbbl
pop
or
ret
jno
or
subb
sbb
stos
sti
sbb
jl
or
das
xchg
mov
pushf
movsb
add
add
rcll
sar
jp
lods
add
adc
pushl
sbb
ret
push
call
insb
xlat
adc
cmpsl
push
cmp
inc
add
jmp
ret
popf
cli
xlat
or
xlat
adc
push
or
test
cmp
jle
arpl
push
jg
inc
or
cwtl
test
je
mov
xchg
add
out
add
pop
test
cmp
xor
cli
jmp
sahf
aas
or
or
add
xor
sub
add
insl
insb
or
mov
cmp
std
add
mov
sbb
adc
jae
cmp
xor
fidivrl
add
out
lods
add
mov
pop
psrlw
inc
add
es
lret
add
add
xor
xchg
jl
cmp
add
test
test
add
or
ds
call
clc
or
stc
add
xchg
jle
lcall
mov
jle
lods
incb
push
mov
fsubrp
ficoml
add
add
push
inc
or
fisttps
pmulhuw
xchg
mov
adc
push
scas
in
pop
cmpsb
jne
pop
fdivrs
mov
add
cwtl
and
and
dec
mov
stos
mov
pop
dec
push
mov
or
and
std
inc
adc
fcomi
sbb
jl
stos
add
cmp
add
sbb
jle
adc
js
in
fcoms
xor
into
mov
les
pop
cmpsl
in
clc
xchg
mov
or
push
mov
mov
fs
sbbl
add
push
repnz
add
mov
xlat
in
js
in
js
movsb
fbstp
add
cli
lods
cmp
push
jl
sbb
sub
jmp
jne
call
xchg
or
cmp
cli
mov
pop
aas
adc
mov
icebp
daa
xchg
adc
cli
jmp
out
cli
jae
in
and
or
jns
add
jae
in
and
icebp
call
arpl
or
loop
fnstsw
adc
test
nop
or
js
mov
or
sub
icebp
andb
sbb
std
sbb
and
xchg
mov
cli
lds
sarb
cmpl
cmp
lds
jmp
lcall
xchg
push
mov
flds
inc
psubsw
dec
mov
lock
jmp
xchg
pop
adc
jp
xchg
sahf
xchg
inc
inc
lahf
and
mov
out
sub
and
test
or
enter
dec
ret
dec
and
pop
mov
or
mov
mov
and
loop
idivb
sbb
cli
fldt
or
jp
inc
add
push
and
mul
pop
pop
ja
dec
jo
xor
aam
or
cwtl
stos
xchg
cmovns
sti
sahf
xchg
jb
sahf
jle
add
lcall
aaa
jo
insl
sarb
xchg
mov
sbb
aad
int3
mov
mov
outsl
add
lock
inc
arpl
jmp
das
sub
jmp
sar
inc
jmp
or
inc
jmp
out
cli
inc
jmp
cmp
repnz
jmp
xchg
xor
loop
inc
jmp
jmp
in
imul
jmp
push
push
addr16
jmp
out
addr16
jmp
dec
push
cmp
jmp
inc
push
cmp
jmp
lods
imul
jmp
xor
cmp
jmp
cmpsb
gs
jmp
insl
xor
test
inc
jge
cmpsl
inc
insl
cs
inc
insl
gs
cmp
mov
inc
sub
mov
inc
cmp
sti
scas
inc
sub
or
mov
in
jbe
inc
in
push
stos
inc
std
stos
inc
std
js
inc
in
mov
inc
mov
or
inc
lods
pop
scas
inc
add
pop
scas
inc
lods
pop
scas
inc
lods
roll
incb
call
xor
rcll
fwait
pop
pop
adc
lcall
and
pop
mov
jle
mov
incl
sti
or
adc
test
adc
fs
pop
shlb
pop
das
aam
xor
mov
pop
or
incl
popa
mov
jno
stos
add
dec
mov
xchg
add
cltd
cli
stos
jno
mov
smsw
cld
xor
push
add
xchg
sti
xlat
movsl
inc
jmp
call
mov
adc
or
in
movsl
cmp
or
js
out
and
imul
push
inc
add
inc
repnz
jg
push
cmp
cltd
stos
or
in
lahf
insb
es
sarl
cli
mov
push
mov
or
jo
mov
add
sbb
cli
into
inc
ret
das
mov
add
xchg
mov
incl
cmovs
or
sub
sarb
add
faddl
call
xchg
pushf
cld
inc
or
add
lods
stos
sar
imul
mov
push
add
xchg
pop
lcall
jae
inc
jmp
xchg
or
push
nop
sbb
push
xchg
sbb
ret
sub
jp
jne
shrb
jge
add
clc
shr
xor
cmp
xchg
jns
dec
test
ret
cwtl
xchg
andl
push
push
divb
shrb
std
repnz
addb
je
xchg
dec
cmp
or
clc
push
cmp
test
lock
gs
xchg
je
lea
pop
loop
std
jb
test
addl
in
cli
std
add
sub
or
xchg
dec
and
lahf
out
cmpsl
cwtl
cli
sbb
or
in
out
cwtl
cwtl
cli
adc
sbb
xchg
sub
jecxz
lock
and
lock
mov
das
stos
pop
jle
xchg
xchg
stc
cmp
pop
pop
fldt
insl
pandn
mov
pop
out
clc
add
fmull
cli
repz
push
mov
pop
lds
xchg
add
lret
loopne
js
pop
or
cltd
icebp
cmpl
add
xchg
adc
sub
stos
xor
scas
cwtl
cwtl
call
lock
aam
outsb
xor
mov
push
fcmovb
hlt
cmp
ret
out
pop
fwait
sbb
stos
mov
rcll
stos
mov
sbb
shrb
adc
adc
add
xor
or
out
inc
cwtl
jmp
xlat
mov
xlat
adc
aas
add
sub
ja
cltd
xchg
cmpsl
adc
jmp
movsb
cmpsb
ja
std
mov
push
mov
lret
push
sub
xchg
add
add
in
loope
or
je
or
fsubl
ja
inc
mov
data16
call
inc
xor
movsb
aas
ds
pushf
cwtl
push
sub
lock
jo
outsb
adc
xor
push
ljmp
inc
std
push
add
in
inc
jecxz
scas
rol
add
orl
mov
clc
mov
inc
insl
mov
jns
sbb
enter
mov
mov
adc
fdiv
sub
lds
ljmp
insl
and
jp
sub
inc
sbb
mov
and
xchg
xchg
decl
out
mov
pop
popl
das
call
pop
cmpsl
xor
sbb
jge
mov
xchg
jle
ret
add
sub
stos
cmpsb
aas
das
cmpsb
pop
fs
dec
mov
and
scas
pop
add
sahf
int3
mov
orl
call
or
dec
std
mov
push
sti
add
add
add
icebp
iret
xchg
jns
pop
ret
xchg
add
cld
test
aam
arpl
mov
add
mov
loope
or
sub
cmp
loopne
xchg
xor
add
fcoml
jae
cltd
adc
dec
mov
sbbb
adc
pop
mov
add
sub
rcll
mov
je
mov
stos
and
add
jge
in
add
mov
ficomps
pop
ljmp
jg
test
testb
push
enter
test
mov
jno
add
jb
clc
out
testl
hlt
test
stos
repnz
pop
addb
xchg
js
cld
jle
dec
jae
adc
cld
outsb
call
inc
in
fidivrl
inc
adc
scas
mov
ljmp
call
jns
decl
push
adc
js
jmp
mov
inc
scas
fs
xchg
pusha
bt
jp
cld
int
mov
je
mov
and
je
ds
jae
xor
push
repnz
mov
jge
sbb
sarb
and
orb
xor
sub
cli
cmp
add
jae
add
xchg
cmpsl
ljmp
push
push
das
inc
inc
jae
mov
inc
int
add
mov
xchg
loop
adc
xchg
jmp
cmpsl
mov
push
mov
jmp
xchg
jmp
jp
mov
sar
sbb
inc
lock
xchg
add
xchg
push
inc
and
cltd
lahf
xchg
mov
cmp
cwtl
jmp
cltd
jg
mov
mov
dec
and
and
and
add
jge
fdiv
jl
scas
fmull
pushf
mov
shr
daa
add
add
mov
sbb
int
arpl
jmp
xchg
xchg
xchg
jmp
call
ss
xchg
or
hlt
xchg
mov
inc
xchg
leave
xor
cmpsl
mull
xchg
xchg
pop
xchg
mov
fwait
push
int
out
jle
loopne
shlb
ljmp
cwtl
or
outsb
mov
xor
in
push
adc
pop
in
jg
xlat
add
movsl
adc
lret
fcompl
mov
cmpl
pushl
int
ss
adc
mov
push
fmull
jmp
push
add
adc
add
jle
add
jl
xchg
mov
and
and
and
out
pusha
mov
adc
add
and
cmp
inc
add
dec
sahf
push
je
jge
and
jno
or
call
lcall
add
rcl
mov
icebp
mov
push
sti
ljmp
add
jle
pop
add
mov
adcl
xchg
dec
mov
add
or
adc
mov
push
insb
or
ret
pop
push
lds
std
dec
fs
xor
jo
or
icebp
pop
imul
cld
arpl
sub
xchg
mov
push
scas
cwtl
push
add
in
out
xchg
inc
mov
pop
aas
sub
lcall
add
into
cmpb
test
sti
mov
rorb
xchg
mov
stos
jmp
aam
push
pop
cli
ljmp
or
mov
or
add
mov
inc
add
jnp
cmpsl
or
addr16
call
xor
dec
out
insb
hlt
addl
mov
push
call
in
cmp
dec
xchg
push
jp
pop
lret
mov
test
or
jmp
dec
sbb
and
mov
push
into
addl
test
add
add
in
cmp
and
sub
sti
xchg
fdivrl
xor
inc
adc
jmp
movsb
or
cli
xchg
sbb
or
mov
pop
sarl
sbb
add
negb
jnp
test
or
std
inc
or
sti
aam
repz
jmp
adc
push
test
movntq
out
or
jg
jge
das
lea
test
xchg
add
pop
out
cli
jb
jecxz
push
sub
add
lret
xchg
add
xor
cmp
das
mov
add
jo
jns
std
adc
insb
add
add
xlat
lds
jo
inc
cmp
call
imul
cmp
push
mov
outsb
leave
scas
clc
call
dec
push
add
mov
push
cs
shrl
cmp
gs
shlb
adc
rolb
shlb
xchg
stos
adc
pop
push
adc
push
xchg
inc
push
ds
out
pusha
mov
jmp
xchg
inc
leave
xor
xchg
sbb
das
arpl
dec
in
mov
sbb
dec
or
sbb
push
cmp
mov
call
mov
fs
cwtl
bound
add
xlat
adc
jl
std
call
decb
insl
decb
adc
cli
mov
add
out
arpl
dec
jae
mov
mov
aad
test
test
pop
arpl
lret
dec
movsl
push
xchg
imul
mov
add
aaa
test
pop
add
inc
inc
hlt
lcall
cld
lcall
jle
mov
fwait
into
jg
mov
hlt
jmp
add
add
sbb
sub
bound
call
jb
or
loope
lcall
inc
icebp
mov
rol
inc
loopne
fistpll
call
sub
mov
pop
or
test
pop
pop
cltd
pop
pusha
pop
loop
loope
mov
and
pop
cmp
pop
repnz
loope
xchg
add
mov
repz
sub
pop
pop
cmp
pop
pop
repnz
mov
in
rolb
add
and
mov
mov
jno
mov
insb
adc
fldl
or
insb
add
shrl
add
sbb
mov
mov
push
iret
shll
sbb
cld
mov
mov
call
je
sti
jnp
inc
jge
mov
lcall
add
cli
add
stos
xchg
mov
orl
push
mov
pushf
cmpsb
jnp
push
and
mov
jl
push
push
addr16
test
inc
pop
xchg
incb
cld
mov
std
call
xor
lock
xchg
incb
and
xchg
xchg
adc
push
ljmp
mov
in
mov
mov
sbb
cmp
in
pushf
ds
cs
inc
mov
jl
cmp
cltd
jl
jmp
pop
stos
adc
in
mov
xabort
sbb
call
test
repz
sarb
add
out
mov
push
xchg
icebp
adc
add
inc
icebp
jg
add
add
cmc
lret
jp
adc
inc
sub
jmp
add
add
or
add
popa
je
inc
ret
movsb
pop
sti
div
xchg
sbb
hlt
lahf
enter
enter
add
ret
jae
jg
das
add
mov
mov
shll
push
dec
pop
lahf
ret
je
adc
repz
jo
fiaddl
pusha
mov
loop
fdiv
xchg
imul
dec
mov
sub
loop
jbe
jl
aam
or
enter
xlat
hlt
pop
ret
xchg
lea
ja
add
adc
mov
notb
add
repz
xchg
bound
decl
shr
clc
xchg
dec
decl
cmc
jne
sbb
ljmp
xor
pop
jo
add
push
leave
out
sub
or
ljmp
dec
je
push
sti
pop
xchg
cmp
outsb
xor
add
insl
or
sub
adc
sub
jae
test
inc
push
sub
push
mov
cld
call
cmp
addr16
out
and
cld
sub
push
mov
add
popa
call
addr16
add
pop
repnz
push
addr16
shrd
cmp
cld
std
call
call
jns
mov
addr16
insb
data16
jmp
jp
loope
sbb
les
daa
add
pushf
adc
cs
lock
xchg
decb
call
jmp
cwtl
addb
jp
call
jp
xchg
add
jp
in
out
xchg
test
rcll
mov
test
jo
test
push
add
or
xchg
call
ds
out
lock
nop
aas
push
icebp
out
xchg
in
loope
daa
xabort
shlb
mov
push
dec
mov
test
xchg
or
push
in
pop
outsb
cld
adc
xor
push
lcall
push
je
out
adc
add
xchg
mov
negb
aad
out
push
inc
xchg
xchg
or
jmp
repnz
cli
je
mov
pop
sti
je
jnp
dec
sbb
psubsb
xchg
push
jp
frstor
in
adc
push
jp
cmp
lods
call
push
in
pop
add
test
mov
or
add
add
andl
test
add
add
outsb
idiv
jae
jle
add
cmpsl
jle
add
aas
cmp
fdivrl
je
fcomps
and
add
sub
jne
jmp
add
sbbl
ljmp
fs
push
cmp
in
mov
xor
out
adc
xchg
inc
shr
roll
add
xchg
insb
add
cli
mov
xchg
add
and
add
incl
push
outsb
push
cs
fwait
out
inc
dec
insb
jns
call
loope
outsl
and
xchg
cmp
mov
addr16
ljmp
add
xchg
push
jge
mull
decl
in
cmp
sbb
incl
jae
icebp
leave
pop
add
xchg
add
aam
or
insb
push
jns
xorb
mov
adc
xor
stos
rolb
add
imull
jne
mov
out
imull
je
test
push
mov
imull
jnp
cmpb
call
jg
scas
mov
jb
je
rcrl
add
add
je
jg,pt
mov
call
xchg
add
push
mov
test
ficomps
das
sti
xchg
add
xchg
popl
jns
add
in
addr16
call
movsl
xor
or
cli
ds
inc
popa
insb
push
push
test
add
cli
sahf
inc
or
cli
push
dec
in
pop
push
mov
imul
add
leave
jp
jb
add
adc
mov
add
cld
jae
testb
adcb
add
jle
or
in
inc
or
imul
mul
mov
mov
jg
add
sub
ss
in
cmovg
lods
xchg
call
repnz
addl
pusha
add
lods
test
inc
push
or
mov
jne
ljmp
pop
ljmp
ds
push
fs
pop
inc
ja
arpl
loop
add
xchg
jle
repnz
sub
add
bound
xchg
loop
mov
xchg
into
add
xlat
ja
add
lret
and
xor
add
pop
jge
xchg
push
aad
mov
add
icebp
sbb
pop
repz
add
aam
or
adc
aam
addb
add
clc
mov
call
push
mov
push
out
addb
cld
push
push
in
or
add
inc
adc
or
jnp
idivl
sbbb
in
add
push
jb
mov
ret
sti
out
jmp
repz
das
jl
cmp
add
jp
testl
sub
test
pop
adc
jl
sub
jne
outsb
inc
int
hlt
or
insb
ret
add
jmp
xchg
call
imul
cmp
push
insb
mov
add
je
test
push
xlat
les
outsb
test
adc
xchg
test
jmp
add
inc
fcompp
lcall
push
addr16
mov
or
add
scas
clc
es
push
sub
mov
out
cli
scas
rolb
add
pop
push
dec
push
lds
or
mov
add
dec
push
xchg
push
cli
ljmp
test
mov
mov
fisubl
stos
ljmp
dec
push
bound
repnz
add
out
inc
in
outsb
sbb
in
add
push
stos
jo
lea
jb
ficoml
jb
stos
insl
test
ljmp
push
addr16
pop
ljmp
jo
mov
sbb
push
in
movsb
add
lcall
jl
fxch
sar
rorl
cli
cmp
adc
shld
pop
out
xchg
push
cli
mov
addb
je
jecxz
out
sarb
jmp
push
add
sub
add
add
std
push
cmpsl
std
pop
inc
dec
aas
pop
adc
cmp
add
lahf
repz
js
sub
ret
xchg
into
inc
fstpl
add
add
out
xchg
pop
cmp
fs
out
pop
push
in
test
add
mov
call
call
arpl
and
aam
jnp
jnp
and
insb
push
pusha
pop
js
inc
fsubrl
adc
add
sbb
and
sti
sarb
add
insl
call
xchg
fdivs
in
xchg
add
pusha
filds
das
sub
stos
add
push
and
aam
insb
hlt
in
mov
ds
std
inc
cld
into
adc
jae
xor
mov
cwtl
orl
jns
jmp
push
and
jb
fdivs
in
add
mov
xchg
addr16
test
pushl
xchg
and
shr
inc
inc
cmp
lods
jae
xchg
ja
and
cs
cmp
ds
xor
lods
xlat
add
pop
out
call
decl
ss
cmc
adc
mov
jae
lret
cmp
cmp
shr
push
pop
pop
push
and
adc
add
add
cmp
call
mov
adc
add
or
push
test
add
cmp
rorb
xor
push
mov
shll
cmpsl
sbb
aas
aas
push
jmp
push
push
pop
sub
dec
test
cmp
jae
adc
xchg
jno
lock
mov
mov
xlat
push
xor
jmp
pop
lcall
mov
pop
ret
push
push
or
aam
pop
rcr
mov
push
inc
and
sarl
jb
sbb
mov
in
add
xchg
hlt
jno
cs
outsb
sbb
jnp
movsl
add
dec
and
inc
xchg
pop
add
fcoms
mov
push
mov
dec
in
jecxz
call
add
jmp
or
imul
imul
pop
adc
add
push
cltd
je
inc
xor
icebp
psubsw
adc
int3
or
imul
cld
mov
sti
cmc
stos
or
xchg
lods
adc
add
cli
dec
pusha
add
leave
stos
psubsw
sub
xchg
inc
hlt
pop
es
sti
xchg
cmpsl
gs
loope
adc
lcall
mov
data16
ror
pop
mov
adc
cmp
pop
push
jb
add
insl
adc
push
mov
in
or
out
inc
fcoml
test
push
cmpsb
addr16
mov
push
bound
mov
jmp
dec
dec
dec
mov
add
push
out
push
jmp
imul
dec
adc
add
inc
pop
jg
add
pop
addl
pop
leave
jg
incl
pushf
addl
mov
jecxz
inc
push
push
inc
jge
call
dec
mov
push
cmc
xlat
lock
jae
push
lods
cmc
je
clc
notb
add
sbb
je
clc
popa
add
repnz
xchg
push
repnz
les
mov
xchg
addb
lcall
call
add
andps
xlat
inc
in
testl
cli
inc
popa
jbe
ret
nop
add
xchg
fldcw
sbb
clc
dec
inc
loop
je
cltd
decb
add
orl
cli
jnp
ret
fadd
repz
or
cli
loope
outsl
je
scas
push
test
cli
leave
add
je
in
fnsave
clc
gs
fdiv
inc
xor
mov
testl
mov
es
repz
arpl
mov
addr16
roll
jmp
xor
aam
arpl
push
rorb
jno
shl
ret
stos
jl
divl
jns
iret
mov
call
jo
shr
pop
sbb
fsts
aam
into
sub
jnp
outsb
outsb
cmp
in
ret
pop
je
cmpsl
push
pushl
test
ljmp
icebp
cmp
cld
xchg
movsb
mov
mov
loope
sub
mov
cmp
add
imul
iret
adc
mov
fdivr
adc
or
dec
ds
call
mov
adc
call
cli
scas
lds
mov
fcos
lcall
xchg
add
jmp
mov
loope
dec
mov
shl
add
sar
dec
cmp
dec
cmp
roll
or
sub
dec
and
add
jg
add
cmp
inc
jle
add
push
jge
fstps
divl
addb
adc
clc
call
es
shll
xorl
jb
loop
leave
shl
cmovnp
push
sub
push
dec
sbb
jne
xchg
mov
sti
mov
add
aas
cli
imul
jne
insb
jp
stc
pop
in
or
adc
mov
test
adc
mov
push
add
push
add
add
jmp
jne
faddp
cmp
gs
xchg
add
mov
push
in
aam
sbb
ss
movsl
add
in
or
inc
aam
add
aam
jae
inc
je
and
jge
nop
arpl
jg
sub
fs
add
outsl
bound
add
cmp
sbb
push
pop
int3
jmp
xchg
jne
jns
clc
gs
add
outsl
jge
cli
testl
insb
mov
call
add
add
mov
std
pop
jne
add
xchg
jne
jmp
dec
pop
iret
xchg
jae
add
dec
fldl
cmp
jno
outsw
out
lahf
jne
adc
jge
add
int3
insl
rcll
mov
sar
in
push
pop
pushl
pop
ss
inc
mov
dec
sbb
jae
pop
inc
cli
out
add
fsts
adc
add
add
out
or
cmc
sub
mov
jle
sub
test
rcrl
cli
cltd
xchg
pop
or
push
and
lods
cmp
sub
jbe
xchg
mov
push
add
jo
add
inc
mov
adc
mov
in
inc
lds
add
dec
inc
pop
cmc
adc
add
inc
fidivrl
push
push
push
mov
jmp
enter
cmp
push
das
push
pop
xor
sbb
jle
add
dec
push
mov
incl
in
jne
ljmp
movsl
xadd
movsl
faddl
pop
push
call
lds
jne
cmp
jg
add
add
cmc
jne
popa
gs
pop
mov
pop
jle
pop
gs
or
sub
mov
fnstcw
mov
xchg
imul
stc
ret
shr
cmp
imul
incb
pop
cmpl
jne
out
mov
loopne
xlat
pop
scas
jae
rol
or
popa
jnp
hlt
jecxz
jae
rorb
incl
ljmp
inc
mov
fistpl
add
sub
shr
and
std
call
into
stc
out
arpl
notl
inc
je
sbb
int3
jnp
andl
inc
cmpsl
imul
xor
shll
das
pop
inc
cmp
push
add
inc
loopne
jp
adc
call
call
testb
jge
or
xchg
add
push
inc
mov
test
test
add
xor
cs
jb
adc
cmp
sbb
inc
and
mov
pop
bound
aaa
flds
mov
cmpsl
and
push
add
push
data16
icebp
out
mov
stos
add
popa
ljmp
pop
cli
jae
popa
out
cs
cli
stos
minps
arpl
jmp
addl
std
cmc
and
add
and
push
ds
out
mov
iret
out
call
flds
and
loop
mov
cmc
test
add
lea
mov
xor
mov
add
mov
sbb
call
pop
push
addb
mov
jge
addr16
mov
scas
mov
mull
fidivrl
add
push
xor
cmc
bts
stc
ret
lock
jnp
xchg
lods
data16
push
sbb
stos
mov
rcrl
push
fadds
addr16
ret
repnz
push
dec
adc
lock
pop
push
jle
xchg
dec
xchg
push
fadds
xchg
shl
in
push
je
mov
add
jge
mov
push
pop
push
cmpl
ss
pop
or
int
push
cmp
jae
fcos
out
cmp
inc
pushf
push
out
add
call
loop
in
call
lods
add
xor
ljmp
insb
mov
pop
jecxz
insb
decb
push
inc
dec
xchg
add
sub
repz
shr
adc
leave
gs
add
les
mov
loopne
shl
mov
ret
add
addr16
mov
mov
movsb
in
sub
out
xchg
sar
mov
sti
mov
xchg
add
pop
arpl
out
ret
test
cli
inc
cmp
sti
gs
int
vpcmpd
and
jmp
addl
add
pop
cli
jmp
pop
mov
sub
stos
call
ret
mov
aas
add
sub
xchg
add
mov
pop
sub
scas
lcall
loop
push
test
lods
verw
call
push
repz
in
jecxz
or
int3
add
fcomps
push
push
aaa
call
push
push
push
cmc
xlat
xor
jp
push
call
jge
jo
push
pop
pusha
push
sub
pop
negb
push
mov
repnz
fldenv
bnd
xor
andl
adc
sbb
or
pop
and
push
inc
sub
scas
inc
xchg
pop
or
stos
aad
sbb
push
shr
scas
cli
ret
loop
or
cwtl
out
ss
xor
fcoms
add
xchg
repnz
inc
cmp
sti
addl
fadds
iret
repnz
loop
roll
or
jmp
cmp
pop
mov
imul
push
setns
leave
push
dec
out
push
push
add
xchg
mov
mov
pop
int3
scas
inc
xchg
fwait
inc
outsl
enter
and
sbb
push
pop
mov
push
popa
jl
popa
into
push
out
xchg
add
mov
push
inc
bound
adc
arpl
add
in
xchg
sete
insl
shlb
call
or
insl
les
mov
insb
leave
cmp
popa
pop
inc
cmp
adc
insl
aam
xchg
add
popa
rcll
cmpsb
inc
or
ds
jno
or
xchg
jge
loope
add
scas
xchg
add
jmp
xchg
sbb
jg
enter
daa
add
jmp
inc
pop
xchg
call
add
jle
movsb
xchg
jo
push
mov
hlt
pop
subl
or
pop
mov
pop
test
xchg
pop
je
push
loopne
hlt
repnz
call
mov
test
jnp
adc
cs
pop
xchg
add
mov
test
ret
ja
add
xor
add
pop
jmp
sub
jle
mov
add
loope
or
test
cld
fdivrp
ljmp
aaa
dec
dec
add
or
xchg
test
mov
add
faddp
or
or
mov
push
lea
sbb
loopne
adc
or
sbb
jae
adc
in
jnp
cld
repz
pop
test
push
sbb
stos
faddp
pop
add
xor
call
lret
xor
xchg
pop
jno
ror
pop
dec
in
pop
mov
push
xlat
lods
jmp
cld
xchg
out
add
pusha
gs
rorb
int3
pop
out
and
mov
pop
xchg
push
adc
or
pop
inc
push
leave
mov
add
enter
or
loopne
xchg
les
push
adc
mov
sbb
pop
xchg
pop
adc
push
addr16
imul
iret
push
pop
mov
jl
xlat
mov
xlat
nop
xchg
inc
dec
mov
sete
hlt
add
add
enter
mov
test
add
incl
cmp
out
or
fdivs
jo
mov
rolb
cwtl
add
inc
stos
and
shll
push
push
stos
pop
mov
sbb
or
adc
jnp
in
mov
ss
lret
or
std
call
adc
pushl
pop
push
push
popa
push
test
jecxz
out
adc
std
repnz
cld
jle
xchg
pop
or
push
cli
sbb
loope
inc
in
push
jge
arpl
add
ret
loop
imul
ret
push
mov
loopne
inc
cli
incb
or
mov
mov
jns
add
mov
decl
je
adc
fs
push
xor
jg
add
xchg
addl
dec
stc
movl
add
cmc
mov
add
jge
orl
xor
mov
xchg
rol
add
lahf
push
mov
popa
xchg
loopne
or
adc
adc
hlt
push
pop
lcall
aam
add
xchg
mov
sarb
out
insb
push
cli
cmp
leave
mov
add
pop
int
pop
lcall
and
das
aam
enter
jg
inc
cmp
cmp
xor
pop
xchg
out
decl
xchg
ljmp
dec
sbb
add
add
dec
xchg
or
aaa
insl
push
sbb
add
enter
inc
dec
fstps
jl
dec
cmp
sbb
pop
add
dec
xor
sbb
pop
push
or
nop
cs
cltd
mov
pop
sti
adc
or
bound
dec
mov
ds
or
mov
add
call
add
jmp
push
mov
push
mov
cmp
ret
dec
xor
inc
verr
test
pop
xchg
ja
insb
xlat
rcll
bound
or
push
repnz
jmp
out
or
sbb
or
mov
scas
out
rorb
fsubs
xchg
pop
pop
pop
call
addr16
mov
dec
dec
cli
jmp
cmpsl
dec
lcall
add
call
mov
push
in
cld
push
or
push
popf
test
and
pushl
call
insl
loop
mov
cli
mov
fdivr
jmp
cmpsl
cmp
clc
adc
mov
cmc
call
rolb
sub
cmp
enter
clc
jmp
fsubs
sub
addl
cmpl
lods
test
cs
add
sub
in
test
or
pop
ss
xchg
xchg
jle
sub
and
add
jae,pt
push
add
adc
sbb
lret
add
jge
add
pop
mov
mov
sbb
add
into
addr16
dec
lods
cs
or
sbb
mov
pop
add
sbb
push
sbb
decl
mov
add
add
or
add
jns
inc
ds
mov
cmpsb
add
out
test
sbb
push
outsl
mov
mov
lods
inc
lret
push
movl
or
fmuls
fstps
jbe
cmp
xor
imul
iret
ficoml
jbe
mov
aas
jg
out
rorb
sahf
lods
arpl
js
rolb
xor
dec
sub
lock
in
sub
in
pop
inc
stos
add
cmc
aad
subl
add
movsb
dec
fidivrs
dec
xchg
or
jno
mov
dec
lcall
xlat
dec
push
pusha
dec
pop
mov
roll
divl
aam
add
push
push
dec
add
mov
add
inc
je
push
aad
inc
lahf
add
sub
aam
mov
cwtl
leave
imul
fucomi
stc
sub
leave
jl
xchg
fidivrl
loope
hlt
xor
ret
cmp
loop
mov
mov
fcompl
cmp
mov
mov
out
scas
std
decl
xchg
bound
insl
mov
or
dec
loop
pop
mov
test
addb
dec
pop
adc
cld
test
loopne
sub
sbb
cmp
cmc
push
inc
std
mov
int
cmp
mov
ret
push
add
lret
addl
test
pop
arpl
leave
or
push
test
inc
push
xor
push
jns
or
stos
cli
add
xchg
mov
aas
xchg
mov
xchg
notl
pop
dec
jns
fisubrl
push
je
addr16
pop
dec
cli
leave
push
push
dec
sti
and
pop
lret
inc
enter
dec
je
nop
ds
lahf
xchg
add
jno
repz
pop
jle
add
mov
jmp
push
fidivrs
mov
in
and
xchg
add
iret
jge
add
sub
add
nop
mov
out
inc
push
adc
jge
roll
pop
dec
fildl
dec
jle
insl
sub
lds
sub
jmp
push
pop
jnp
mov
pop
int
push
gs
push
sbb
and
aaa
repz
jnp,pn
mov
int
push
inc
adc
xlat
pusha
shll
shrl
je
aas
jmp
inc
dec
adc
call
pop
jle
rorw
in
cli
cli
hlt
mov
dec
cli
pop
adc
idivl
sar
lahf
inc
test
add
das
adc
jge
sbb
pop
incb
fwait
lret
adc
or
cli
jl
dec
je
pop
mov
out
cli
sub
inc
or
sti
dec
insl
mov
push
mov
dec
mov
adc
xchg
xchg
pop
leave
das
inc
cli
scas
sahf
dec
jno
in
ss
scas
popa
mov
test
add
outsl
mov
icebp
fmuls
aad
sti
jge
cmc
enter
sti
push
mov
mov
mov
cmp
adc
cli
jge
in
add
fnsave
jb
mov
adc
add
add
cmc
out
jle
mov
cli
sbb
test
cmp
sub
xor
xchg
mov
iret
fwait
cmp
sbb
shll
pop
mov
inc
jbe
sti
ret
mov
imul
xchg
addr16
cmpsb
lock
add
jle
mov
and
inc
add
loop
cmpsl
and
sub
outsl
enter
pop
sub
outsl
mov
dec
add
cmp
dec
imull
ja
test
fmul
add
add
aaa
add
add
mov
xchg
std
cmp
or
mov
and
lahf
xchg
mov
xchg
xchg
or
mov
push
xchg
push
mov
and
or
lret
or
sub
push
sti
std
dec
sub
std
arpl
xchg
call
sbbb
inc
push
nop
inc
jae
aad
and
xor
aas
mov
or
nop
add
mov
cmp
xchg
add
fwait
sti
mov
das
xlat
push
inc
jge
xor
les
shll
mov
cli
mov
cwtl
pop
ja
fs
test
push
inc
cli
sub
int3
clc
fistl
push
int3
jae
negl
cli
sbb
inc
mov
add
dec
xor
pop
add
mov
mov
xchg
jae
sbb
fistps
cs
imul
addl
sub
lcall
test
mov
mov
ds
test
roll
xor
cli
mov
lret
in
cmp
lcall
add
sub
push
in
std
dec
push
push
sbb
rolb
mov
mov
cmc
mov
cmc
adc
xor
out
cmp
std
decl
std
jmp
dec
cmc
jmp
mov
push
cli
xorl
mov
lahf
cmp
push
pop
adc
add
inc
add
mov
ds
cli
lods
add
scas
push
push
push
cmpl
inc
jb
jg
pop
add
sbb
scas
inc
cli
mov
fisttpl
inc
mov
incb
sarl
mov
jg
jnp
xchg
xchg
outsl
add
dec
jae
adc
inc
stos
dec
xchg
aas
xchg
push
add
movsl
icebp
mov
shrl
sub
xchg
add
mov
pop
fimuls
les
lea
pop
arpl
and
mov
push
cmp
fdivp
shlb
icebp
mov
sub
mov
or
test
stos
cmp
stc
mov
mov
je
add
stos
repz
lcall
subl
test
jecxz
mov
call
int
cli
cwtl
fisubrs
cld
fisubs
test
je
lahf
cld
mov
mov
cli
scas
adc
jae
insl
test
sbbl
jae
dec
test
dec
add
aas
cli
in
mov
ljmp
sub
dec
add
orl
inc
mov
adcl
inc
out
ljmp
add
and
lret
mov
aaa
cmp
jnp
jne
xor
jne
adc
out
inc
cli
add
in
add
add
test
lret
pusha
mov
dec
push
pop
cmc
push
scas
adc
inc
cli
test
dec
lea
mov
pushl
je
subb
jp
into
dec
dec
out
and
jp
add
mov
xlat
inc
cli
imul
pop
stos
dec
cli
adc
iret
add
inc
add
insb
inc
pop
loop
xor
addb
mov
lods
push
adc
mov
dec
inc
mov
jge
dec
pop
bound
xchg
fmull
xchg
mov
fsts
jnp
fs
test
add
jecxz
je
pop
inc
ret
jp
add
jle
sti
jae
shr
sbb
sub
and
stc
adc
jle
cmp
dec
jecxz
call
inc
cmp
inc
xchg
leave
nop
xchg
mov
mov
dec
sbb
shll
xchg
inc
orb
inc
jne
arpl
mov
inc
xchg
das
into
cmc
mov
mov
cmp
fildl
cmp
mov
push
test
pop
xchg
sub
mov
cli
ss
mov
and
ss
adc
jge
push
or
xchg
rclb
out
in
rolb
rorl
call
push
mov
lret
xchg
arpl
cli
sbb
mov
pop
test
subl
xchg
sub
dec
push
cmp
outsb
adc
incb
add
sub
fcmovb
dec
lock
sti
ljmp
addb
mov
stos
insl
cmc
call
ret
sub
xor
dec
addb
cmp
dec
lea
ljmp
lcall
ret
cmc
push
jbe
dec
mov
push
ret
loop
xchg
xchg
inc
cli
pop
fs
test
add
xchg
pop
pop
inc
out
mov
cmp
pop
mulb
jecxz
addr16
mov
adc
pushl
mov
insl
mov
shrl
add
scas
xchg
xor
fs
ja
fcoms
or
daa
dec
sbb
movb
push
add
jns
popa
pop
outsl
imulb
sahf
mov
into
nop
fbld
dec
mov
xchg
dec
sbb
sbb
sub
ret
stos
test
hlt
or
dec
js
loopne
mov
in
repz
add
pushl
pop
subb
xchg
sahf
insl
subl
pop
cld
mov
push
fstpl
or
push
repnz
int3
cli
push
push
in
lea
sbb
lods
aad
inc
in
shll
outsb
push
sti
mov
xchg
loope
out
and
xchg
push
jge
xchg
add
cld
jle
mov
sub
add
mov
repz
mov
loope
cmp
mov
scas
popa
cltd
add
adc
add
push
and
mov
dec
mov
adc
xchg
add
sbb
cmp
iret
cld
or
aaa
cli
jmp
in
add
cmc
call
dec
js
hlt
pushl
add
mov
jle
jnp
loope
mov
sub
mov
add
lods
xorl
xor
cli
jge
or
inc
test
rol
jp
jl
outsb
mov
or
lcall
mov
mov
mul
jae
ret
cmc
test
dec
mov
or
xor
stos
push
addl
xchg
xchg
or
jle
fists
mov
jbe
push
xchg
fisubs
dec
pop
push
test
add
adc
aaa
mov
mov
es
shll
sub
pop
fcomip
inc
add
aaa
add
xchg
daa
roll
movsb
push
pop
push
scas
out
mov
cmc
ret
push
mov
sub
dec
add
mov
mov
and
xchg
testb
out
xchg
mov
or
add
add
push
nop
pop
lret
xor
add
daa
xor
xor
push
xchg
add
mov
shlb
cmp
xor
test
icebp
inc
jle,pt
cmp
scas
xor
jno
jmp
inc
sbb
test
leave
jmp
cmp
dec
leave
jg
pop
fildll
addr16
add
bound
icebp
pop
and
icebp
push
in
xchg
mov
gs
mov
xchg
jmp
xor
mov
jg
jg
les
stos
xchg
add
je
add
jle
into
dec
pusha
mov
ss
stos
sar
shlb
jmp
push
jns
and
inc
add
lods
fbstp
pop
out
jg
cli
insl
fsubrs
add
imul
lock
or
std
sub
pop
pushl
addl
aad
jecxz
lret
test
or
aad
fdivrp
sub
out
pushl
addl
dec
loop
es
xor
jb
jmp
out
mov
repnz
call
lock
testb
xor
mov
in
push
mov
testb
mov
out
incl
xchg
sahf
mov
add
add
xchg
sbb
add
mov
test
jle
mov
imull
inc
pop
inc
cmp
xor
cmp
jb
les
pop
in
aaa
pop
pop
ljmp
or
xchg
mov
movsb
mov
aam
rcr
addr16
or
push
xor
jg
test
shll
movsb
sarl
out
inc
add
in
dec
gs
iret
jmp
xchg
daa
xchg
sbb
mov
pop
insb
cs
add
dec
daa
sarb
xchg
test
mov
pop
das
sub
ja
aas
push
xor
sti
inc
xchg
ds
xchg
mov
sub
fiadds
cmpsb
or
nop
add
sbb
xor
mov
xchg
add
movsl
jecxz
sbb
mov
xor
push
add
xchg
add
mov
lcall
out
call
imul
sbb
sbb
repz
inc
mov
jmp
test
cwtl
test
insb
and
cli
out
out
xor
sub
push
repz
into
scas
sub
insl
aaa
mov
or
push
imulb
cli
testb
stc
or
cmp
add
jle
mov
xlat
rcl
sub
fdivs
jg
cltd
add
add
cmp
mov
fildl
dec
or
mov
out
leave
xor
divl
mov
sub
dec
call
xchg
or
add
ja
hlt
lret
push
addl
std
jge
insl
xchg
in
ja
mov
xor
dec
repz
repz
inc
out
push
and
push
and
xor
insl
add
pop
inc
incb
js
sub
aad
cli
sbb
es
jge
xor
xchg
jg
dec
out
out
add
cli
jl
jbe
sbb
call
pusha
lcall
sbb
and
xor
dec
addb
mov
sti
jecxz
jo
pop
ret
popf
aad
std
lret
pop
mov
pop
nop
lahf
jae
inc
inc
jae
inc
inc
jae
push
inc
jae
lcall
add
cli
in
mov
sarl
or
add
pop
call
cmp
scas
sbb
in
xlat
jns
or
add
add
std
repnz
lock
push
jmp
lahf
xchg
or
into
add
in
dec
xor
scas
repz
scas
xchg
subl
inc
inc
in
popa
jns
test
add
add
call
sub
cld
out
andb
jb
add
out
les
pusha
pop
loopne
bound
jg
arpl
mov
fwait
stos
pop
loope
js
int
addb
mov
xchg
jg
enter
add
inc
add
out
mov
mov
jae
nop
sbb
cli
mov
and
push
cmp
sbb
lret
xchg
pop
mov
cli
add
js
add
popa
testb
push
push
push
cli
adc
adc
les
negb
sbbb
testb
dec
cmc
adc
lods
imul
pushl
jbe
or
add
out
int
cmc
mov
testl
push
je
mov
jne
add
add
or
icebp
jle
mov
scas
sti
call
std
xchg
push
add
push
pop
push
cli
jmp
sahf
and
xor
cs
jb
xchg
mov
stos
adc
pop
sub
pop
pusha
xor
mov
ds
iret
out
lea
dec
sahf
mov
out
sbb
div
mov
int
sbb
out
mov
xchg
pop
sub
pop
pop
jle
or
add
inc
inc
jmp
cli
sbb
fprem
aaa
popa
add
scas
test
mov
aaa
andb
and
fidivl
lret
cmp
mov
ret
xchg
or
inc
in
dec
fcmovu
and
pop
mov
xchg
clc
push
lock
mov
adc
inc
sub
aas
leave
mov
add
jne
xorb
sub
movsb
fbld
ja
fistps
jecxz
xchg
rorl
push
in
add
repnz
int3
decl
ds
add
mov
stc
xchg
sub
gs
sub
jmp
sbb
and
addr16
add
jmp
sub
bound
testb
xchg
cwtl
xchg
xchg
add
jg
out
mov
push
add
jg
mov
add
or
out
pop
sub
adc
add
adc
jne
in
sub
sti
cld
add
das
mov
inc
ds
jne
icebp
ds
xorl
incb
orb
cli
ljmp
std
push
mov
cld
push
inc
push
sbb
outsb
or
mov
or
shl
pusha
addl
clc
push
mov
movsl
jbe
gs
je
adc
jne
jle
add
sub
sbb
cmpsb
ds
add
add
mov
cmp
testl
adc
out
in
add
cld
shll
je,pt
pop
ret
sbb
pop
or
push
inc
jo
jle
mov
mov
cmp
andl
cli
pop
pop
loop
pop
pop
push
mov
insb
loop
sbb
leave
xchg
jne
sete
mov
jae
daa
push
arpl
hlt
sub
push
pop
hlt
rorl
adc
nop
inc
jne
repz
leave
in
and
test
xchg
icebp
test
pop
int
hlt
shlb
mov
add
inc
xor
xor
mov
hlt
scas
and
xor
es
pop
ret
inc
xlat
adc
pop
test
call
outsl
jns
ljmp
into
pop
inc
jae
mov
dec
jl
mov
sar
mov
int3
cmp
fwait
das
sbb
clc
fnstenv
pop
insl
mov
pop
lods
or
lea
bndldx
std
popa
dec
pop
xor
jge
sbb
test
into
push
bound
jns
jmp
fbstp
xchg
jg
inc
cmpl
push
mull
jno
movsl
lods
sti
push
push
push
cld
push
loopne
test
or
lods
cmpl
insb
jnp
inc
pop
mov
je
add
dec
jp
sub
sub
aam
inc
icebp
cmpsb
sub
in
lock
mov
decl
imul
call
xor
jmp
xor
movb
incl
jge
cmpb
dec
cmp
stc
mov
dec
fs
inc
rclb
lds
lret
jns
jne
mov
jmp
mov
mov
ljmp
out
cmp
cmpsb
cmp
and
ja
test
js
cmp
out
sbb
movsb
cltd
or
inc
nop
inc
inc
std
addr16
mov
inc
adc
out
xchg
ss
scas
add
mov
mov
je
lcall
jle
jnp
cmp
addr16
mov
xor
pop
xchg
out
jnp
outsl
cmc
inc
add
ds
xor
das
dec
stc
mov
inc
inc
out
add
push
lahf
imul
add
jno
or
cmp
xchg
insb
xor
add
mov
cltd
add
xchg
add
mov
jg
addl
cwtl
xor
mov
xor
mov
pop
add
xor
add
roll
xor
scas
jmp
outsb
mov
enter
gs
test
and
call
xchg
add
call
imul
in
push
mov
sub
or
pushf
jnp
cmpsl
xlat
and
pop
xchg
sbb
fnsave
in
ss
les
stos
icebp
jns
fs
mov
jmp
xchg
rorb
sub
mov
inc
les
xlat
or
cltd
pop
loopne
fsubrl
sbb
sbb
mov
popl
add
and
fs
cmc
bswap
call
adc
inc
cli
test
ret
mov
cld
jbe
or
cmp
sarb
adc
sbb
sub
add
pop
insl
add
mov
ror
jge
pop
rcrl
fsts
movsl
sub
outsb
fdivl
dec
subl
xchg
shl
lea
jl
add
popa
lahf
mov
add
movsb
add
xchg
sub
cli
leave
adc
ljmp
icebp
or
and
sbb
adc
bnd
push
daa
or
popf
test
xchg
or
xchg
daa
jmp
sub
cli
popa
xor
mov
loop
mov
push
pop
push
jns
and
std
pop
or
add
sbb
daa
cli
pop
lahf
push
mov
rorb
add
and
and
mov
mov
fidivl
cmc
dec
ds
sarb
push
mov
das
xchg
clc
sub
mov
sbb
add
add
adc
in
pop
loopne
repz
pop
rcll
sub
subb
sub
add
into
or
xchg
aas
or
insl
sarl
mov
pop
ret
adc
adc
lret
sbb
aas
jmp
test
or
or
add
bswap
scas
mov
loope
scas
pop
mov
jo
mov
cld
pop
out
aas
jmp
into
test
jb
mov
nop
ficompl
jmp
or
rcrl
adc
push
push
bnd
cs
pusha
loop
dec
cmpsb
repnz
adc
into
cli
sbb
pop
je
mov
imul
jno
add
xor
or
sbbb
ljmp
mov
inc
add
push
add
pop
and
push
je
inc
cmpsl
std
push
ljmp
cld
and
jp
sub
je
push
repz
xchg
inc
in
popa
xchg
bound
test
push
cmpb
jae
jl
add
ljmp
fdivp
out
ljmp
dec
insl
add
mov
jae
loope
xchg
ss
add
xor
cmp
insb
out
cli
jae
inc
jae
sahf
stos
outsl
insb
sti
inc
cli
pop
movsl
inc
je
sahf
cli
gs
sahf
xor
movsb
push
ds
ficompl
mov
je
push
add
in
mov
ja
fsubrl
call
fwait
sti
popa
scas
sbb
or
imul
xlat
incb
imul
pop
sbb
nop
arpl
insl
push
in
add
gs
mov
or
inc
lret
sub
pop
jo
pop
mov
or
jecxz
pop
xchg
rep
shr
popf
cmpsb
clc
es
xlat
mov
push
mov
in
test
jmp
daa
mov
mov
push
add
hlt
outsb
rorb
icebp
scas
mov
mov
aam
sbb
test
in
lods
xchg
int
sbb
mov
or
mov
mov
adc
cli
mov
ret
cld
xchg
scas
cli
lcall
pop
push
icebp
gs
pushw
cli
out
scas
adc
add
adc
inc
jno
call
and
mull
jno
out
or
cli
leave
sub
ud1
xchg
lret
sub
call
aad
sub
jo
cmp
jo
mov
inc
mov
std
repnz
popf
or
cmc
pushl
lret
jecxz
mov
fwait
cwtl
xchg
clc
adc
cmc
data16
out
repnz
rcr
push
jne
test
nop
mov
data16
mov
rcr
xchg
mov
cwtl
inc
add
xchg
loop
jb
mov
aam
xor
add
mov
sti
push
cmp
adc
lcall
enter
xchg
sub
out
sub
incl
cli
inc
mov
push
cli
fwait
dec
dec
lret
pusha
gs
lret
pop
xor
add
add
imul
jge
or
xchg
mov
fcmovb
loopne
xchg
enter
dec
mov
sti
dec
or
mov
lock
outsl
inc
lret
push
cmc
dec
lret
dec
int
lret
loopne
dec
lret
fsubs
mov
popa
adc
jno
jp
rorb
adc
sub
gs
nop
pop
add
mov
mov
xchg
neg
call
rolb
lods
clc
xchg
fs
or
xchg
outsb
mov
push
fimull
xchg
stos
mov
sti
sbb
out
lahf
pushl
sbb
jae
fstpl
outsb
mov
rolb
dec
iret
inc
xor
filds
filds
mov
xchg
pop
sub
out
add
or
push
bound
or
or
cli
aam
out
aas
jmp
jmp
adc
cli
jmp
mov
ret
fstl
test
push
push
bound
add
jle
dec
adc
sub
push
adc
push
jmp
xchg
add
je
sbb
push
icebp
pop
mov
pop
xchg
cli
jmp
adc
ljmp
hlt
in
add
add
mov
hlt
mov
ss
into
in
idivb
repnz
addl
push
push
push
add
leave
loop
sub
cmc
xorl
out
insb
add
mov
xchg
rolb
test
push
jle
cmc
push
push
jge
or
mov
or
popa
loop
jmp
dec
cmc
push
inc
jge
or
mov
or
in
popa
and
repz
pop
inc
imul
mov
ltr
arpl
cli
mov
es
adc
cmc
sti
push
inc
negl
push
test
inc
or
imul
roll
sti
push
stc
sbb
inc
or
jmp
mov
nopl
ret
js
push
mov
lcall
xchg
pushf
loop
inc
mov
adc
lods
fisttpll
es
clc
xchg
add
mov
sub
cmpsb
add
adc
pop
sahf
adc
mov
mov
in
int3
add
xchg
mov
sbb
enter
jnp
xchg
cmp
pop
xchg
scas
and
mov
pop
push
mov
mov
scas
pushl
mov
jp
sbb
dec
jp
ret
out
ret
es
adc
les
cli
out
mov
xlat
mov
sub
sbb
add
scas
mov
ss
and
mov
mov
pop
insl
mov
mov
cli
sub
repz
mov
xchg
inc
mov
xlat
stc
push
cltd
jp
stc
sbb
repz
call
cmc
pushl
cmpl
cmc
mov
cli
mov
test
data16
cmp
loop
int3
cs
dec
mov
sub
mov
adc
dec
dec
push
add
testb
cmc
xor
sbb
mov
mov
es
jge
addl
pop
gs
and
xor
mov
jnp
mov
xor
xchg
mov
jae
repnz
jno
outsb
dec
mov
inc
mov
insb
dec
addr16
sbb
decl
pop
push
call
sub
xchg
xchg
mov
add
call
mov
xlat
mov
les
lcall
call
push
xchg
adc
insb
jne
cli
jae
mov
xchg
cli
in
cmp
push
jle
add
mov
adc
pop
xchg
add
inc
enter
add
in
sub
sti
hlt
sbb
incb
in
inc
mov
mov
sbb
xor
into
xor
mov
cltd
out
ss
add
cmc
ds
cmc
xor
loopne
xchg
mov
mov
add
add
dec
outsl
ret
call
add
lods
sbb
add
lcall
arpl
out
popf
or
push
stc
pop
sub
cmp
sub
scas
mov
cmp
aam
dec
jb
repnz
bound
push
das
fldenv
xchg
das
aam
jmp
xchg
add
out
pop
xchg
xchg
or
cli
xor
test
adc
or
lods
mov
bound
dec
std
icebp
sub
add
sbb
add
jnp
sbb
outsb
pusha
out
lea
mov
push
icebp
mov
mov
lock
mov
push
mov
faddl
lcall
add
inc
dec
repnz
mov
jge
add
inc
jp
fstpt
jnp
sti
into
mov
aaa
incl
jnp
or
sub
jmp
out
pop
mov
aam
ret
call
repz
jle
pop
inc
ds
sbb
ds
sarl
and
add
movsb
jae,pt
sahf
rorl
sbb
add
ljmp
pop
ljmp
insl
push
dec
arpl
dec
stc
mov
sahf
enter
pop
xchg
push
test
push
inc
cs
adc
push
nop
add
ja
or
cmp
pop
mov
lds
sar
insl
das
cmp
push
or
mov
sti
fs
add
or
fdivr
mov
sbb
push
mov
mov
xor
push
in
in
ret
add
loope
repnz
out
in
in
stos
add
dec
ja
test
xlat
in
xchg
pop
sub
add
add
add
cmc
mov
clc
out
and
insb
pop
add
aas
pop
ljmp
nop
sahf
mov
mov
jbe
lods
add
decl
add
fs
fs
cwtl
sahf
mov
mov
ds
test
jl
add
test
or
adc
mov
or
push
stos
add
inc
or
call
inc
lret
push
popa
ds
aad
pop
in
inc
ret
popa
ds
add
add
test
add
fcoml
repz
push
hlt
adc
pop
cmp
cmp
rcrb
cli
adc
push
cmp
or
cmp
push
cmp
je
int3
popa
mov
int3
sub
and
idivl
and
ja
and
das
int3
idivl
mov
sub
add
int3
ja
mov
pop
and
ja
mov
sti
pop
and
call
jmp
fimull
por
or
pop
gs
sub
xlat
push
mov
imul
arpl
fists
punpckldq
loope
push
fisttps
lret
and
pop
stos
adc
es
repz
enter
aas
repz
stos
and
lcall
pop
roll
test
inc
lret
enter
movsb
mov
scas
push
ljmp
pop
ds
add
ja
outsl
mov
or
mov
lods
lock
mov
inc
xor
inc
dec
xor
inc
pop
xor
inc
pop
xor
adc
jnp
jg
clc
inc
shr
jmp
std
pop
jae
or
shll
andl
cwtl
shll
dec
xchg
add
add
mov
sahf
insb
es
movsl
and
inc
fbstp
sub
fbstp
pop
adc
cld
jle
clc
insl
mov
pop
sar
or
das
mov
mov
jge
fstpl
mov
or
decb
jecxz
xchg
xchg
inc
inc
pop
aaa
xor
xlat
ss
push
loop
xchg
add
push
or
cs
add
in
sbb
pop
insb
xlat
xchg
cmp
dec
es
inc
mov
pop
cmpsb
or
nop
xor
mov
jle
int
sbb
fucomip
dec
mov
cli
add
xchg
mov
mov
add
stos
lea
gs
inc
cld
lret
out
cmc
decl
add
ret
dec
sbb
lret
int3
sub
int3
cmp
int3
idivb
push
or
inc
push
adc
orl
push
add
loope
adc
aam
inc
xchg
add
fs
or
xlat
xchg
push
or
loope
shlb
mov
incl
std
pop
cmc
xor
xchg
mov
lahf
and
push
dec
push
pop
lcall
pop
xor
rol
inc
nop
mov
xchg
inc
inc
nop
cmp
cli
mov
adc
sbb
call
jbe
xchg
sbb
mov
mov
pop
in
jnp
jmp
sub
xchg
or
sub
pushl
mov
testl
insb
inc
cli
mov
clc
aas
xchg
add
aas
iret
xor
jl
ja
out
sbb
aam
mov
jge
xchg
push
mov
mov
mov
rcrl
out
lahf
add
xchg
sbb
std
lock
fldenv
clc
adc
hlt
mov
stos
lock
lock
das
stos
pop
cltd
fwait
jge
call
ds
out
adc
xchg
jmp
pop
addl
add
jle
fisttpll
jae
push
push
push
popf
in
cli
xchg
jmp
push
and
std
call
pop
or
out
test
xchg
add
jns
or
dec
pop
shrb
stc
xchg
fs
sub
fidivs
daa
cmp
jnp
fnstsw
lea
icebp
fisttpll
push
fimull
push
scas
sbb
leave
test
mov
sbb
sub
dec
decl
push
mov
orl
mov
or
mov
xchg
shlb
inc
sbb
std
call
jns
rclb
lods
mov
jmp
pop
pop
aas
clc
dec
xor
int3
cwtl
xchg
mov
aaa
divl
mov
test
imul
ret
mov
cmp
adc
cmpsb
add
push
xchg
mov
pop
or
je
mov
xchg
mov
inc
mov
jne
movsb
mov
xchg
mov
call
cmc
lret
stc
cmp
add
pop
ja
push
je
lret
fmuls
lret
rclb
lret
enter
shlb
jb
adc
xchg
add
or
imul
ss
sbb
xchg
shll
dec
cmp
pop
cli
add
mov
comiss
sub
stc
pop
mov
sub
cld
inc
inc
dec
cmp
incb
add
inc
repnz
inc
pop
pushaw
add
outsb
mov
pop
loop
push
data16
cmp
xchg
xchg
sub
sbb
mov
xchg
mov
sbbl
packssdw
jmp
jle
je
mov
mov
pop
adc
call
call
nop
fcmovb
jmp
dec
add
pop
cmp
jecxz
add
xchg
mov
arpl
or
xor
pusha
xlat
inc
jg
xchg
add
jmp
adc
jmp
lahf
cli
test
adc
jmp
pop
outsb
popa
bound
imul
rol
insl
int3
fcmove
test
add
idiv
out
add
push
std
add
xchg
xchg
dec
dec
inc
nop
dec
call
push
or
xchg
cmp
stc
inc
fisttpl
rcr
outsb
and
cmpsl
add
das
add
xor
xor
icebp
mov
xor
cmp
fcompl
stc
push
jp
jmp
add
pop
ss
vmovups
push
add
jg
or
add
ds
repnz
or
lods
add
add
ret
movsl
add
lds
je,pt
inc
push
test
add
add
mov
aas
je,pt
add
add
add
je
int3
leave
jb
rcr
iret
sbb
adc
mov
ljmp
add
adc
xchg
jbe
pusha
jb
jle
adc
xchg
fwait
rolb
bound
add
js
test
outsb
add
scas
call
mov
jmp
sub
xchg
jmp
add
fidivl
rol
mov
adc
add
fs
jp
sub
adc
repz
dec
adc
jns
jl
cmp
inc
xor
adc
or
xchg
mov
call
pop
shrb
cmpsl
adc
aas
mov
sti
pop
clc
jb
rol
jne
test
pop
mov
fidivrl
add
lahf
xchg
cmpsl
cmpsl
in
lea
add
pop
cmpsb
cmp
stos
cmp
add
out
pop
xor
add
xchg
cmp
or
out
add
cli
xor
testb
dec
add
call
mov
add
fs
push
test
mov
ds
bound
push
test
xchg
test
popf
enter
mov
push
jb
ds
pusha
jecxz
bound
aas
bound
insb
test
sub
dec
adc
orb
out
inc
mov
cwtl
pop
mov
mov
orb
dec
sub
ss
add
outsb
or
dec
incl
fnstsw
pusha
bnd
add
std
jmp
mov
data16
verw
ja
pusha
dec
popf
push
mov
fwait
mov
ja
cwtl
decl
mov
iret
add
orb
xchg
cltd
je
iret
daa
add
xchg
arpl
cwtl
out
mov
pop
insb
add
add
or
call
hlt
mov
dec
repnz
adcb
ds
mov
test
add
cmpsl
std
popa
xchg
jae
xchg
arpl
push
cmc
ss
out
jl
mov
std
xchg
hlt
xchg
aad
mov
dec
dec
into
jl
xchg
out
jb
add
xchg
mov
pop
xchg
pop
sub
outsb
lods
decl
das
jns
cmp
dec
xlat
add
xor
push
mov
sarb
or
or
das
cmc
push
std
daa
loope
mov
les
scas
sub
cmp
jnp
dec
push
mov
add
dec
cld
and
xchg
add
add
outsb
mov
mov
out
scas
in
push
dec
and
rol
mov
push
outsb
lods
add
mov
scas
iret
jge
jmp
mov
jbe
adc
jmp
mov
adc
jmp
xchg
add
dec
scas
add
out
or
adcl
add
sbbl
sbb
adc
xchg
or
add
pop
aad
repnz
cli
stc
add
dec
pop
fs
ja
jb
cmp
daa
mov
push
insb
adcl
dec
call
ss
insb
mov
push
addl
mov
idiv
notb
jnp
jge
pop
test
add
decl
pop
mov
leave
jne
addl
mov
xor
jle
add
mov
sub
dec
push
push
add
xchg
insb
test
mov
jle
adc
icebp
lcall
pop
xor
adc
icebp
adc
dec
loope,pt
pop
xchg
sub
rclb
mov
add
xlat
xchg
mov
inc
lea
adc
mov
test
rolb
pushl
je
jl
cli
stc
arpl
je
mov
incl
push
out
push
pop
adc
add
out
mov
out
rclb
add
bound
pop
scas
push
test
mov
cmp
test
lss
add
setle
out
push
inc
sbb
mov
inc
ss
jne
inc
jnp
pop
sub
pop
push
add
mov
imul
adc
pop
pop
add
in
xchg
add
in
mov
push
push
insl
sbb
add
pop
push
push
sti
out
xchg
aaa
cwtl
js
push
sbb
bound
out
xchg
mov
data16
xchg
imul
sbb
insb
test
pushl
lds
add
jmp
add
test
test
call
aaa
or
xchg
push
insb
dec
mov
test
cld
pop
and
fists
testl
call
inc
test
or
cwtl
fists
cld
adc
call
sub
mov
add
cmp
xchg
add
add
in
popl
cmp
idiv
mov
jmp
imul
rorl
jge
dec
in
loop
mov
leave
rcll
inc
inc
insl
pop
stc
fwait
ljmp
pushf
dec
ljmp
cs
sarl
popf
push
add
mov
add
jnp
add
test
js
push
or
cs
inc
add
insb
mov
xor
pop
xchg
pop
pop
xor
inc
xchg
ljmp
mov
push
test
mov
ljmp
arpl
or
dec
outsb
push
inc
xor
inc
dec
call
dec
js
xchg
std
pop
call
pop
inc
insb
add
insb
add
call
sti
stc
cvtpi2ps
lsl
aas
in
scas
out
mov
mov
add
enter
pop
cld
xchg
push
std
in
test
subb
or
mov
mov
aam
rolb
add
add
cmp
cmp
cld
adc
pop
lea
pop
out
mov
inc
mov
push
pop
xchg
or
out
adc
outsl
pop
xchg
add
cmpsb
add
or
rorl
add
cwtl
jae
xchg
add
xchg
out
xchg
jnp
lahf
xchg
out
fldcw
add
adc
jmp
arpl
inc
adc
rolb
add
ds
sahf
mov
test
push
inc
pop
jb
insl
stc
mov
test
call
and
outsl
fnstcw
stc
out
out
pop
push
jg
je
fistps
aad
jmp
add
or
arpl
out
cli
bound
mov
xchg
inc
cmpsb
add
fisubl
test
add
std
add
mov
and
pop
add
xchg
add
add
add
jnp
push
je
decl
cmpsb
push
sub
ss
xor
testb
mov
sub
xor
insl
jg
insb
add
pop
mov
push
in
lcall
pop
xor
stc
jp
add
sti
mov
fimull
dec
scas
loope
pop
xchg
lcall
ret
and
add
xlat
or
in
pop
adc
shll
inc
sbb
sbb
sbb
lret
mov
jo
sbb
cltd
sub
xchg
add
jl
inc
sub
mov
xchg
dec
shlb
xchg
xlat
std
rolb
jmp
jg
xlat
xchg
popa
dec
push
sbb
xchg
sbb
xchg
fdivr
call
std
clc
inc
add
cwtl
add
sub
add
dec
mov
sbb
clc
js
or
xorl
cmpb
pop
in
push
pop
outsl
nop
cmpl
xchg
xor
icebp
out
fsub
mov
mov
and
aas
add
popf
sbbl
xchg
data16
lea
pop
jmp
in
mov
stc
out
aad
fs
call
je
push
sbb
shll
stc
arpl
and
insl
xor
xchg
add
cmp
dec
or
and
loope
ljmp
lahf
add
push
imul
sub
mov
xchg
or
add
jmp
inc
jp
jmp
outsl
stc
andb
add
mov
sub
adc
push
inc
sbb
loop
jae
xor
and
sub
aaa
add
sub
jle
add
dec
cmp
xchg
add
push
cmp
not
mov
jnp
and
repz
push
push
mov
cmpsb
dec
mov
or
jl
sbb
jl
xor
lret
idiv
push
ja
test
adc
sti
push
orl
push
jl
les
jp
sbb
mov
jne
pop
lock
aad
idiv
addb
pop
dec
int3
inc
ret
inc
ret
xchg
lcall
add
push
pop
xchg
xlat
std
rcl
xchg
push
aam
mov
call
test
lds
test
push
jae
xchg
adc
dec
mov
fscale
call
call
repnz
pop
sbb
xchg
add
ficoms
xchg
xlat
std
lcall
loopne
xlat
mov
or
add
cmc
mov
pusha
cmp
add
mov
sbb
cld
cli
sbb
nop
jne
xor
adc
and
ds
jge
or
inc
rcll
xlat
add
pop
fistpll
ja
clc
rol
sbb
mov
je
pop
sbb
add
mov
int
mov
mov
inc
cmc
add
cmp
adc
and
inc
mov
das
inc
adc
add
popf
call
sub
sbb
push
adc
pop
bound
mov
mov
add
daa
mov
jge
or
xchg
mov
pop
insb
dec
sub
cmp
mov
cmp
aad
and
gs
mov
add
jge
int
jmp
call
cwtl
jl
cli
xchg
add
cwtl
jae
push
cld
jmp
inc
rorb
repnz
add
out
add
jmp
xchg
add
inc
add
testb
out
addl
imul
in
adcl
cmp
add
add
push
add
cli
pop
jge
pop
add
and
pop
or
add
and
or
in
jge
adc
sbb
jge
cld
push
test
or
cli
clc
or
fdivrl
xorl
push
test
xlat
subl
ficoms
xor
xchg
out
jp
xchg
mov
xchg
xchg
std
gs
cmovge
xchg
xlat
jl
add
addr16
mov
push
jl
push
call
pop
add
inc
sbb
xlat
std
cmp
jb
and
adc
xchg
xlat
std
adc
push
rcll
add
inc
mov
incb
fwait
ret
fistpll
aad
cmc
cld
aam
shll
lret
sub
int
adc
add
ja
jns
sti
adc
aam
stos
js
add
cmp
sbb
ficomps
cmc
gs
subl
scas
dec
in
add
add
fldt
xor
jl
call
xchg
test
add
fwait
ja
or
aas
mov
lea
ds
adc
add
mov
int3
sbb
add
mov
jae
xchg
jnp
and
mov
cli
stc
and
jge
addl
insl
cmpsb
repz
call
mov
loope
push
stc
xchg
out
push
adc
into
dec
adc
stc
or
add
cmp
add
xchg
add
aas
or
sbb
add
push
test
add
and
mov
mul
mov
in
inc
adc
cltd
add
fldl
fisttpll
add
std
test
addr16
in
cmp
push
or
incl
sbb
clc
stc
jge
loop
out
icebp
and
jl
cld
jge
test
or
testb
addr16
rcrl
jnp
inc
fs
clc
cs
decb
sbb
rorb
aas
adc
add
mov
mov
adc
push
hlt
popa
add
cmp
mov
loopne
push
xchg
cmp
pop
cmp
fs
jle
fscale
test
jnp
mov
sub
mov
push
ljmp
mov
cli
andl
clc
loope
jbe
inc
mov
jl
pop
xlat
lds
call
and
push
sub
test
in
xchg
xlat
std
xchg
out
jbe
je
mov
aas
mov
aad
decl
cwtl
or
adcb
outsl
push
out
jne
or
aas
cli
movsb
add
jp
addr16
push
xor
mov
out
push
adc
pop
xchg
add
jb
jge
out
xchg
icebp
push
lea
out
inc
icebp
aas
jo
sbb
je
data16
mov
in
pop
leave
data16
movsb
outsb
test
dec
aam
cmpsl
js
js
sbb
loope
ja
js
loopne
aam
pop
adc
sbb
xchg
jns
or
push
in
addb
xchg
add
add
cmc
test
nop
mov
add
sar
add
xchg
add
cmpsb
xchg
add
xchg
testl
pushf
jnp
inc
std
lods
lahf
jb
cld
lahf
xchg
outsb
add
xchg
test
adc
je
int
adc
mov
mov
adc
push
add
inc
fisttpll
xchg
faddp
loop
push
add
push
test
popf
pop
cmp
push
lea
inc
inc
pop
dec
clc
outsb
or
add
incl
mov
ss
mov
jmp
dec
lds
push
push
push
aam
add
inc
sbb
cltd
add
sub
inc
adcl
jge
jle
dec
add
mov
add
insl
add
add
adc
inc
add
cmpxchg
jne
cmp
add
xor
pop
inc
add
jnp
or
and
fsubl
enter
adcl
mov
dec
aam
lods
push
bound
add
lods
flds
sub
jp
mov
aaa
in
inc
movsb
out
add
jp
insb
arpl
call
unpckhps
xchg
iret
jp
inc
add
cld
xchg
ja
jnp
call
xor
out
in
add
je
cmpsl
outsl
xchg
lds
or
daa
add
add
ret
out
xchg
aad
adc
xchg
lock
lea
push
add
add
insb
pop
js
loop
cwtl
lock
jl
aam
inc
je
lods
fists
rcrb
iret
mov
mov
aam
lahf
sbb
or
sub
or
in
call
dec
orl
aam
xor
jbe
aas
adc
cltd
add
sbb
xchg
xchg
xor
bound
dec
cmp
mov
adc
test
push
fdivr
cmp
pop
in
dec
xor
out
inc
or
xchg
jecxz
jb
and
test
xchg
mov
add
aad
ljmp
adc
xchg
push
faddl
fsubp
or
jmp
add
cld
bound
mov
clc
add
test
adc
pop
mov
or
fldenv
pop
repz
xor
sub
out
roll
je
pop
inc
adc
add
and
and
ljmp
cmp
adc
pop
dec
clc
xor
sbb
cmpsb
jmp
test
and
and
push
test
sar
pushl
cli
incb
jecxz
into
push
in
cmp
adcb
std
xlat
pop
lret
and
pop
dec
mov
push
test
adc
jmp
ret
call
mov
loop
xchg
out
test
in
out
xchg
jl
movsb
xchg
sub
xchg
jmp
std
or
sbb
mov
scas
std
out
jecxz
decl
je
xchg
jnp
les
clc
push
jmp
incl
in
repnz
icebp
add
add
or
out
mov
add
decb
ja
add
mov
push
jbe
add
fidivrl
fildl
in
pop
fcompl
shl
and
push
int3
std
ds
aam
sbb
cmp
adc
inc
add
dec
jmp
pushf
std
mov
popf
and
push
mov
sub
mov
out
stc
ljmp
adc
add
fmulp
stc
out
adc
decl
xchg
add
push
jecxz
imul
fyl2xp1
test
fcmovb
out
xchg
add
adc
std
jmp
pop
clc
inc
adc
add
out
lcall
imul
fdivr
jb
pop
lods
jmp
and
jne
jnp
cwtl
pop
test
lods
fdivr
out
fsqrt
pushf
mov
lret
pop
jge
mov
adc
data16
out
add
bound
add
xchg
in
xor
dec
push
adc
push
sub
sahf
out
jge
addb
decl
mov
add
sub
add
mov
push
rorb
dec
std
pop
inc
cld
ret
jbe
orl
ret
outsb
add
popa
push
rorb
roll
mov
inc
clc
mov
lock
js
mov
add
cld
lods
pushf
in
fdiv
ja
insb
push
or
cmpsb
cmp
call
fisttps
insl
jb
push
cld
xchg
mov
jg
jmp
fimuls
into
int
sub
clc
xchg
roll
iret
imul
jg
out
add
or
in
push
leave
jge
aad
fists
sub
add
das
push
jg
leave
mov
pusha
dec
pop
mov
sbb
test
popl
xchg
add
lret
out
xchg
mov
push
fucompp
out
fildl
data16
push
add
adc
aad
add
stos
mov
fidivs
out
mov
out
jns
out
into
mov
insb
popf
jecxz
test
daa
add
lret
xchg
pop
jo
push
push
pop
dec
sub
mov
xchg
push
jbe
xchg
add
jmp
ljmp
jmp
mov
xor
lret
sub
cmpsb
xlat
inc
xorl
fwait
add
fs
xchg
push
aas
dec
je
sar
call
pop
xor
cwtl
call
dec
push
push
add
add
loope
inc
fsubrs
addl
shl
aam
jmp
pop
pusha
aaa
add
push
pushl
das
push
mov
into
faddl
sbb
testb
mov
jp
mov
lods
xor
jnp
inc
add
test
add
xor
jo
or
filds
and
add
add
loopne
dec
roll
mov
jle
enter
bts
addl
test
rcll
stc
int
dec
mov
xchg
ficoml
xor
jmp
pop
cld
xchg
mov
scas
pushf
jmp
loopne
js
iret
int
cmpsl
test
pushf
push
xor
xchg
and
fcoms
jae
test
xor
test
stos
bound
jmp
xchg
jmp
shll
mov
xchg
int3
or
incb
lock
nop
movsb
mov
pop
cld
xchg
mov
dec
pushf
add
add
aam
into
loope
pop
push
enter
mov
push
xchg
pop
pop
cmp
stos
imul
aam
shl
and
mov
xorl
push
sar
adc
xlat
int3
in
cmp
jle
xchg
add
add
lock
xchg
push
mov
cmpsl
inc
fs
adc
mov
in
nop
cmp
pushaw
lock
xchg
stc
out
lea
add
ret
loopne
fs
push
or
inc
and
std
pop
insb
fdivs
push
push
xchg
jge
xchg
push
shr
cmp
mov
xlat
stc
adc
test
out
mov
insl
push
push
cld
jmp
out
add
aas
xchg
xlat
dec
in
sbb
inc
fsubrl
adc
test
out
sub
xlat
lcall
jge
popf
jns
popf
xlat
fiaddl
popa
stc
xchg
mov
cmp
in
in
cld
decl
cmp
pop
xor
stos
jnp
add
cld
jae
es
jmp
scas
addl
sub
jo
xor
xchg
add
in
testb
xor
add
lods
testl
roll
add
dec
mov
xchg
cmp
mov
jp
dec
mov
in
add
xchg
push
mov
xor
fcmovnu
push
add
leave
sub
sub
inc
fcomps
sbb
sub
stc
movq
dec
mov
je
xchg
fscale
dec
adc
dec
pusha
pop
flds
add
mov
das
xchg
add
les
add
stc
pop
cmp
add
in
fcmovnb
xchg
stos
std
call
fscale
rcrb
pop
lock
xchg
push
jecxz
out
ja
and
sbb
pusha
dec
nop
jnp
fistl
clc
insl
dec
mov
mov
adc
jmp
adc
decl
add
mov
clc
insl
xor
jns
repz
iret
mov
or
xor
mov
add
rcrb
mov
out
jo
cmp
arpl
adc
int
ficompl
add
bound
mov
mov
repnz
jmp
mov
inc
dec
jb
test
fisubs
adc
xlat
pop
cmp
dec
int3
add
and
mov
outsb
cmp
bound
loopne
into
xor
push
push
clc
cld
inc
bswap
stc
jmp
into
cmp
pushf
aas
cmp
bound
out
mov
xor
test
xchg
add
mov
xor
inc
aam
pop
mov
lods
enter
mov
add
rcrl
and
hlt
insb
fsts
add
jl
enter
addl
cmp
ud2
xchg
outsb
pop
cmpsb
incb
xor
add
sbb
aas
jge
rcrl
inc
cld
inc
mov
mov
jbe
in
loop
xchg
mov
std
int3
hlt
dec
inc
in
pushf
add
sbb
sub
pop
dec
dec
jle
push
dec
mov
rclb
stos
or
xchg
mov
pop
xor
xchg
movlps
xchg
bound
in
call
lds
aam
mov
pop
xchg
fscale
out
in
mov
push
mov
out
sub
xchg
mul
add
popl
pop
inc
mov
daa
cld
push
push
daa
add
mul
add
fimull
add
add
inc
pop
adc
dec
adc
xchg
add
mov
add
add
int3
pop
push
loope
adcb
xor
sbb
cmp
fwait
add
out
popa
loope
aam
sbb
inc
sbb
lret
cs
rolb
dec
hlt
call
xchg
add
call
dec
jmp
jb
addl
add
out
xchg
mov
jo
aam
scas
pop
inc
nop
push
int3
add
cmp
mov
ret
fnstcw
ds
push
clc
cld
and
leave
stc
jmp
shlb
xchg
add
bound
out
xchg
mov
add
inc
hlt
cmp
mov
mov
std
decl
movsb
inc
aam
add
scas
enter
mov
cld
call
int
inc
in
pop
mov
hlt
sub
adc
sub
enter
addl
add
hlt
in
fisttpl
sti
shlb
push
cs
add
add
mov
jns
ror
jns
fsubrl
mov
mov
jnp
in
fimuls
call
std
int3
xor
inc
in
sbb
loope
inc
sbb
jecxz
mov
push
arpl
fidivrs
pop
test
rolb
adc
xor
sub
mov
scas
push
std
lcall
xchg
mov
xchg
pop
mov
in
sub
je
bound
or
cltd
cmc
inc
or
std
decl
and
push
sbb
adc
add
add
aaa
mov
cld
test
out
sbb
scas
jle
dec
cmpsl
sbb
addb
out
sbb
add
sarl
mov
inc
xchg
mov
out
leave
dec
pop
push
fidivrs
cmp
add
add
mov
cmp
jb
mov
call
in
rcll
out
dec
loopne
inc
movsb
jp
inc
leave
mov
jo
mov
add
add
rcll
add
stc
jmp
pop
push
or
push
jl
mov
aaa
sub
int3
and
mov
enter
test
jle
mov
aaa
inc
jo
movsb
xor
test
cli
test
sbb
jb
inc
xchg
jle
mov
inc
hlt
bound
test
add
ret
dec
jns
cmp
adc
call
aaa
inc
bound
pushf
outsl
jge
add
addb
inc
aam
push
cld
addb
or
inc
hlt
mov
test
inc
add
aaa
add
add
add
jne
sub
add
mov
inc
or
add
mov
add
cli
incl
in
jnp
or
incl
adcl
imul
pop
and
cs
dec
add
scas
inc
cld
xchg
bound
ret
xor
xchg
and
test
cmp
inc
fs
cmp
xchg
cwtl
icebp
ror
jbe
xor
les
cmp
packssdw
dec
outsl
and
dec
mov
fscale
in
xchg
shr
adc
jl
pushf
dec
xor
or
leave
test
fnstcw
push
inc
loopne
xchg
push
sbb
xchg
pop
mov
mov
mov
add
add
add
ja
ret
in
leave
cmp
push
cwtl
ja
sti
push
inc
filds
inc
out
enter
mov
arpl
out
out
add
jb
add
bound
and
test
jl
add
add
xchg
adc
sbb
adc
mov
add
jle
and
mov
xor
clc
test
inc
xchg
mov
out
xchg
jg
jno
testl
pop
push
pop
bound
mov
inc
icebp
xor
test
les
in
dec
cmp
shlb
cmp
xchg
daa
test
stos
sub
jmp
call
fildl
cmpsb
pop
test
rol
test
jl
shll
bound
stc
pop
sub
xchg
pushf
inc
jns
xchg
jns
add
aad
outsl
cmp
int
aas
xor
mov
orl
cmp
rcrl
inc
fldl
or
mov
fidivrl
je
mov
lcall
jne
mov
adc
or
clc
sbbb
push
adc
or
sbb
cli
pop
cltd
jg
or
in
jl
popa
loope
jg
cld
dec
je
faddl
or
cmp
sub
push
push
call
push
ret
test
fstpt
lods
mov
dec
mov
pusha
inc
xor
fiaddl
rclb
call
add
fnstenv
js
cwtl
movsb
adc
jne
cmp
scas
jb
xchg
fs
inc
adc
test
or
mov
add
ret
add
ret
push
add
pop
add
mov
inc
in
and
or
cmp
stc
sti
pop
daa
mov
dec
and
pop
add
add
inc
mov
out
ret
cld
mov
outsb
out
ret
adc
stos
repz
add
repnz
add
icebp
rolb
addr16
enter
rolb
lock
add
testl
mov
add
cmc
mov
jo
addb
hlt
js
xor
jo
cs
push
add
pop
add
rolb
sbb
enter
rolb
ljmp
add
mov
lcall
mov
std
fstpt
call
jp
decl
jns
std
pushl
sti
fiadds
cmpsb
sti
call
sti
lcall
xchg
mov
in
cmpl
stc
test
test
je
fiaddl
fs
xor
sub
cmp
sub
in
fwait
dec
sarl
pop
roll
add
jmp
fiaddl
add
call
int3
int3
add
int3
add
jbe
int3
add
int3
mov
dec
mov
push
mov
idiv
lods
add
lods
push
sub
lea
ret
aam
add
incb
jge
icebp
xorl
aam
add
mov
or
ret
dec
mov
mov
push
pop
add
or
xchg
sub
adc
fnstenv
mov
cmpsb
popl
xchg
pop
ds
fdiv
dec
repz
cmpsl
push
add
cmpsl
test
cmpsb
jge
mov
fimull
punpckhwd
std
pop
jl
loopne
jb
mov
xchg
sub
mov
test
add
xchg
xor
fstl
sti
xchg
loope
jle
add
std
cld
pop
call
adc
add
add
add
add
add
add
ljmp
jmp
pushf
clc
and
ljmp
lret
lcall
stos
ljmp
stos
lcall
mov
sub
inc
push
fldl
mov
sbb
inc
push
out
add
ljmp
and
lcall
and
ljmp
add
lcall
add
ljmp
and
das
daa
inc
or
stc
out
sub
test
or
add
mov
mov
cmp
or
fidivrl
or
adc
clc
mov
sarl
divb
lret
add
xchg
cmp
xchg
jmp
pop
test
jmp
adc
std
and
mov
xor
push
jmp
mov
and
push
ljmp
push
in
xchg
mov
and
push
add
lock
scas
push
xor
lock
scas
push
add
lock
scas
push
cmc
lock
mov
push
add
lock
mov
push
idiv
lock
mov
push
lock
mov
push
mov
mov
push
test
lock
mov
push
mov
mov
push
mov
lock
jle
adc
jnp
jge
push
test
ret
lock
jp
incb
mov
cli
clc
push
push
in
mov
xchg
sbb
mov
mov
xchg
in
test
stos
jge
xor
or
repz
cmc
punpckhdq
mov
aad
and
rcrb
ja
jecxz
jns
dec
int3
jb
jo
std
call
hlt
mov
jbe
jg
cmp
xchg
push
push
mov
std
ds
fisttps
sub
and
stos
js
push
inc
stc
test
arpl
aad
pop
add
ret
xor
push
add
add
push
stc
roll
fisubl
jmp
add
fldcw
mov
add
mov
add
es
push
jmp
sbb
mov
add
es
fldt
les
scas
sbb
push
add
push
stos
call
nop
xchg
pop
and
add
jge
out
sar
or
or
bound
ja
fxch
fdivrs
push
xchg
add
push
xchg
jge
pop
lahf
loope
jmp
jl
add
ja
add
adc
or
call
out
stc
dec
add
stos
shll
call
scas
idiv
popa
fidivl
loope
aad
jmp
hlt
mull
nop
jge
test
sbb
test
nop
add
sbb
add
sub
adc
data16
mov
add
inc
cmp
add
xor
cmp
in
add
xor
or
and
add
xor
mov
das
mov
xchg
mov
mov
daa
insl
cld
sbb
data16
mov
cmpsb
cmp
sarl
pushf
mov
cmp
in
pop
testl
cwtl
sub
sub
cmpsl
cmpb
cmp
aad
ds
in
mov
mov
test
cmpsl
test
and
mov
test
stos
sbb
stos
lcall
cmpsb
std
jmp
out
sub
aad
adc
lret
cmpsb
std
decl
fwait
cmpb
out
test
stos
or
cmpsl
hlt
add
outsb
in
aas
xchg
push
fidivrl
xchg
xchg
pop
in
mov
add
add
inc
out
lea
mov
nop
cs
retw
adc
mov
adc
fwait
cli
add
roll
mov
movsb
std
add
add
hlt
imul
inc
out
mov
hlt
push
sti
mov
out
int3
add
add
arpl
insb
inc
out
add
sub
jno
adcb
cltd
push
sar
jmp
in
jl
adc
jmp
sbb
pop
sub
int3
pushf
and
pushf
in
mov
lret
movsb
lahf
test
add
mov
int3
pushf
insb
dec
dec
push
faddl
in
testb
nop
add
add
jl
cmc
push
dec
jl
xchg
jae
jmp
jae
stc
mov
xchg
mov
jle
cwtl
add
bound
xor
mov
test
xchg
hlt
clc
and
out
lea
stc
mov
sbb
int
addb
inc
cltd
scas
incl
cmp
ljmp
in
js,pt
add
je
add
and
cli
sub
test
xchg
xchg
and
call
movb
jmp
jnp
add
std
clc
dec
test
add
jecxz
clc
outsl
data16
pmulhuw
add
jecxz
lgdtl
xor
cmp
cmpsb
mov
sar
pop
mov
cmp
cmc
pop
xchg
cmpsl
std
mov
mov
incl
xchg
add
test
fwait
out
inc
pop
mov
add
std
std
xor
lcall
xchg
es
sub
es
add
mov
jecxz
fldt
cmp
cmp
addl
cmp
fwait
test
inc
adc
add
adc
push
sbb
sbb
inc
add
sbb
xlat
clc
sub
cld
mov
in
add
out
jns
mov
ret
out
jnp
out
loop
mov
imul
out
add
add
ret
sti
sbb
and
inc
push
stc
lret
das
in
sub
pop
sbb
in
and
add
add
icebp
pop
outsl
xor
leave
push
insl
or
punpckhwd
insb
daa
imul
and
sbb
insb
lock
imul
movsl
daa
pop
ja
pop
shrb
outsb
rorb
fidivs
lock
cli
add
sub
adc
ja
call
mov
and
add
lds
add
push
add
xor
or
jl
add
mov
inc
loopne
add
jo
mov
icebp
in
mov
fwait
jnp
xchg
jns
add
lods
jnp
lods
imul
mov
sbb
add
jp
cmp
add
cmp
mov
mov
int3
int3
call
xchg
push
adc
add
xchg
pop
mov
pop
or
add
cld
mov
pop
xchg
js
call
sbb
pushf
sbb
or
xchg
into
outsb
adc
mov
sbb
push
stc
int3
es
sbb
xor
push
adcb
add
lcall
aas
add
xchg
test
std
test
cmp
mov
dec
push
mov
ss
xor
cmpsl
and
push
addl
mov
push
adc
xchg
das
sub
mov
add
fs
decl
add
add
mov
cmp
mov
jo
or
adc
stos
lea
inc
mov
js
or
lea
outsl
and
adc
fwait
enter
enter
enter
mov
cmp
adc
push
sbb
outsb
dec
pushf
jns
stos
sbb
pusha
dec
pop
js
inc
jns
mov
sbb
div
push
jp
lahf
popf
jae
rol
add
test
pusha
or
add
xchg
orl
add
inc
add
xor
cmp
mov
mov
add
push
add
xor
push
adc
xchg
test
mov
bound
jge
jno
push
adc
xchg
test
inc
fsubs
lods
xchg
add
out
push
call
lret
add
hlt
push
sub
mov
dec
in
test
nop
jbe
hlt
mov
imull
mov
ja
inc
xchg
jbe
mov
mov
cli
cmp
jmp
dec
cmp
pushl
add
ljmp
mov
cmpps
iret
jl
test
jge
orb
shll
push
add
cli
aad
and
add
sbb
add
out
testl
or
add
xchg
sbb
js
sahf
std
decl
lea
dec
test
std
call
std
decl
mov
push
cmpsl
decb
ss
or
cmp
jp
add
imul
xchg
push
bound
sbb
jns
cs
cld
sbb
sub
mov
mov
and
je
push
dec
lock
test
out
pop
test
add
pushf
mov
lcall
in
sub
push
inc
sub
add
xor
add
aam
movsl
pop
push
in
clc
jns
adc
mov
push
xchg
add
xchg
xchg
mov
mov
pop
aaa
addb
pop
adc
jnp
push
xor
sub
push
mov
mov
cmp
dec
lcall
inc
add
inc
mov
movsb
out
test
inc
sbb
aas
add
subb
clc
mov
nop
add
insb
enter
add
add
push
or
add
jmp
pop
sub
jb
clc
xchg
jle
mov
in
stc
mov
push
in
into
sbb
in
mov
or
and
pop
or
sub
adc
mov
call
popf
add
add
idivb
inc
in
add
and
or
cmp
insb
jg
daa
add
xor
cmp
or
add
jge
add
stc
mov
std
add
lea
jecxz
add
mov
cmp
add
inc
hlt
jne
push
push
pop
ss
push
ret
loope
int3
int3
icebp
mov
in
adcl
dec
push
push
outsl
pop
mov
sub
lcall
incl
bnd
pop
leave
jg
pop
xchg
inc
clc
cwtl
xchg
std
call
jecxz
or
xor
xchg
inc
clc
xchg
xchg
std
call
xchg
std
call
add
xchg
cwtl
std
test
and
lock
ret
add
or
ret
jl
rclb
sarl
add
add
push
movsb
add
std
call
stc
decl
xchg
std
mov
xchg
std
mov
add
add
add
sub
into
rcl
jns
sti
mov
push
imul
outsl
sbb
sti
adc
inc
sti
add
push
sbb
xchg
sti
adc
jle
roll
xchg
outsl
imull
out
add
dec
sti
fstp
sbb
std
mov
ja
insb
cmpsb
add
jl
pushf
mov
je
cli
out
roll
sbb
jnp
or
add
xchg
add
fs
repz
xchg
jg
out
mov
jb
xchg
jl
jmp
adc
jp
xchg
add
shr
jnp
adc
xchg
js
notl
sbb
ss
jl
xchg
add
lret
pusha
cmp
jo
pushf
loopne
imul
fldl
mov
in
xchg
lds
or
xor
add
popa
mov
adc
add
jne
jl
adc
dec
sahf
pusha
orl
push
or
es
mov
mov
push
pop
mov
test
data16
mov
daa
jmp
pop
orl
cmpsb
mov
jecxz
incl
sub
mov
lret
adcl
movsl
stc
ljmp
or
add
push
orl
popa
jbe
lret
mov
pusha
pusha
pop
rcll
inc
in
cli
mov
mov
sub
std
decl
adc
sarl
add
push
sub
pop
pusha
cmc
test
adc
xchg
das
sbb
pop
dec
jo
xchg
xchg
jbe
xor
xlat
lds
cwtl
test
jg
mov
std
lcall
test
adc
gs
out
and
cld
jg
add
xchg
xchg
inc
clc
sbb
xchg
jbe
loopne
stc
add
loope
call
int
jp
clc
outsl
dec
js
loopne
sub
out
sbb
jns
push
jmp
adc
inc
add
or
sub
add
jp
clc
pop
pop
lea
outsl
xchg
out
xchg
call
sbb
sahf
jns
cmc
jnp
add
flds
xchg
sbb
sbb
out
repz
in
xchg
sbb
insb
cmpsb
add
cmp
iret
in
mov
add
cmp
add
xchg
and
repz
ja
call
or
jmp
mov
repnz
call
popa
push
nop
sub
stc
jo
lods
bound
testb
iret
ds
mov
cltd
add
add
jno
jne
std
mov
adc
rorb
pop
outsl
repnz
call
add
jmp
xchg
cmp
cmpsl
out
dec
in
test
mov
push
adcl
xor
mov
and
add
ds
fwait
mov
dec
add
add
subb
cmc
inc
sbb
rolb
adcl
fildl
mov
pop
or
pop
push
adc
cmpl
fcoml
cmp
mov
adcl
leave
cltd
test
xchg
and
in
xchg
loope
scas
test
mov
mov
add
and
cmpsl
pushf
daa
xchg
cmpsl
std
popa
mov
inc
push
add
add
xchg
xchg
outsb
mov
std
jg
jnp
cmp
jl
mov
pop
push
or
aaa
rolb
cmpsl
jl
sub
cmc
xchg
push
pop
and
push
add
insb
adc
aas
in
add
adc
sbb
repz
or
or
out
or
icebp
jle
pop
roll
xchg
mov
mov
ljmp
mov
ja
cmpsb
add
jle
pushf
add
pop
flds
xchg
test
sub
push
popf
rcl
mov
cmpsb
add
and
add
cmp
pop
xchg
out
or
stc
add
xchg
loopne
imul
jle
or
lock
adc
xchg
adcl
cmpb
cmpsb
addl
cmp
xor
pop
aas
repnz
call
test
test
out
call
iret
hlt
scas
stc
pop
bound
out
jo
fists
pop
adc
xchg
movsl
or
loopne
daa
pop
adc
xchg
sbb
mov
movsb
repz
int
imul
nop
add
cs
cwtl
std
call
sti
lods
ljmp
mov
add
push
add
incl
mov
or
decl
inc
mov
int3
rcrb
pop
mov
and
add
std
jmp
notl
cmp
xor
jge
lret
fsts
mov
arpl
ret
daa
push
add
cmpl
adc
pop
mov
test
jl
pushf
push
cmp
or
clc
test
in
push
add
xlat
lds
push
pushf
jge
mov
xchg
add
mov
jp
mov
int
cli
nop
jnp
mov
lods
jl
cmp
testl
test
sbb
ss
adc
insl
mov
adc
jp
mov
add
test
insl
mov
out
sbb
sti
jp
or
lock
testb
jae
push
xchg
add
inc
orb
fldenv
mov
dec
mov
stc
add
out
mov
inc
shll
out
adc
in
jl
pop
icebp
add
dec
or
push
xor
jnp
and
jl
pushf
sar
pop
stc
add
jg
xchg
add
add
adcb
mov
test
jg
or
pop
adc
xchg
cltd
pop
aad
lock
push
xchg
xchg
out
call
mov
add
test
int
mov
addb
add
call
test
mov
add
ljmp
in
mov
or
sub
sbb
jmp
lcall
add
mov
mov
and
add
sbb
test
or
cmp
pop
mov
sub
add
sbb
inc
or
mov
in
and
pop
mov
mov
lods
cmp
pop
mov
sub
add
add
jmp
lahf
lea
add
lcall
test
shrl
mov
mov
jbe
xor
pop
call
mov
xor
mov
stc
pop
je
inc
sbb
jne
xchg
test
movsl
stc
repz
test
pop
ror
in
int3
enter
pop
xchg
push
dec
add
cmp
sub
and
idiv
mov
xorl
fwait
and
and
and
hlt
pop
and
xchg
cmpsl
push
mov
fmuls
jmp
adc
sbb
mov
mov
lcall
add
xchg
add
pop
loopne
in
test
out
jno
jo
sbb
sub
mov
pop
pop
mov
add
inc
clc
push
loopne
sub
out
adc
fisttpl
xchg
mov
hlt
int3
inc
rorl
or
out
adc
sti
mov
pop
negl
out
push
in
ja
mov
mov
cvttps2pi
xchg
adc
stc
jae
add
xchg
cmpsl
arpl
and
lods
pop
add
adc
add
xchg
stc
jmp
rolb
out
mov
add
jb
xchg
stc
jmp
pop
jnp
loope
mov
xchg
inc
fwait
cld
call
or
pop
jns
repnz
call
scas
xchg
stc
bound
xchg
cmpsb
xchg
inc
aad
push
cwtl
jo
xchg
stc
fsubr
test
nop
mov
or
incl
xchg
add
add
adc
daa
out
jmp
inc
clc
lea
and
add
xchg
stc
call
xchg
pop
mov
xor
sub
out
nop
test
clc
mov
test
lretw
sti
mov
outsl
jge
push
cmc
and
jl
inc
lods
test
mov
add
int3
pop
mov
jmp
or
aaa
mov
mov
aaa
push
add
stc
ss
testl
xchg
test
adc
test
cmp
les
xchg
incl
out
or
cli
es
and
idiv
jmp
int3
xchg
or
idiv
fisttpl
push
shlb
fwait
add
mov
adc
inc
add
mov
test
test
push
jl
cmpsb
xchg
xchg
push
testl
adc
fistpl
pop
mov
add
push
nop
dec
or
sbb
and
xor
icebp
add
cmc
xlat
sahf
push
in
pop
dec
mov
jmp
add
xor
mov
jmp
add
inc
fistl
sub
loope
pop
push
les
ja
cmpsb
add
mov
dec
in
pop
icebp
add
inc
mov
mov
loopne
pop
adc
xchg
xchg
lret
push
adc
xchg
jnp
push
push
sarl
jmp
add
pop
test
add
ret
clc
mov
add
call
xchg
fcomi
add
push
push
mov
dec
loope
stc
scas
popa
add
mov
cltd
jmp
sbb
cli
aas
adc
imul
jns
jnp
icebp
pmuludq
jb
push
adc
xchg
xchg
inc
cmc
inc
lock
ljmp
add
lea
cld
adcb
xchg
pop
rorl
out
nop
aad
stc
ds
stc
pushl
and
add
insl
testl
sub
xchg
stc
incl
cwtl
jmp
cmp
xor
adc
push
mov
add
add
in
or
mov
in
nop
add
rcll
mov
cltd
test
inc
clc
test
xchg
xchg
paddb
nop
xor
imull
inc
ja
dec
pushf
sbb
push
inc
and
stos
cltd
std
popa
or
cltd
or
pop
fwait
add
xchg
pop
cmp
adc
jecxz
fisubl
test
add
add
push
mov
std
call
scas
std
jmp
cltd
std
pop
or
add
sbb
lea
aam
xlat
fstpt
xchg
add
mov
add
and
out
inc
lds
out
or
xchg
add
add
aam
xchg
dec
out
xchg
add
in
add
add
add
mov
mov
cmc
out
xchg
jo
xchg
add
scas
add
add
dec
add
loopne
sub
fdivrs
clc
adc
iret
rclb
nop
iret
rcrl
mov
mov
int3
bound
dec
adc
xchg
cmp
lahf
or
out
add
push
test
test
pop
in
push
jle
hlt
test
inc
test
mov
mov
daa
add
sub
jae
dec
adc
xchg
js
fcomps
inc
adc
enter
dec
repnz
call
xchg
add
sarl
int3
int3
jns
int3
int3
and
push
and
mov
pop
mov
lret
jge
mov
mov
incl
inc
orl
push
or
mov
mov
roll
rcll
adc
in
adc
ret
dec
mov
imul
or
dec
mov
pop
lret
pop
jo
je
jbe
adc
sub
clc
sbbl
add
pop
add
sub
lahf
pop
pop
je
int3
enter
loopne
ror
pop
ror
int3
mov
pop
dec
fstl
int3
mov
call
inc
bound
in
enter
mov
imul
dec
add
jge
lcall
mov
push
addl
or
pop
sub
psraw
add
js
stc
add
fsubr
jb
inc
cmp
movsl
mov
mov
jle
or
inc
out
xor
ja
mov
xor
mov
les
xor
stos
jle
hlt
out
xchg
add
add
adc
orl
mov
rorb
subl
imul
xor
add
xchg
ja
outsb
loopne
out
adc
sbb
mov
mov
rorb
pusha
xor
mov
cltd
jmp
stc
jmp
cmp
xchg
add
in
dec
stc
addr16
call
xchg
add
jmp
xchg
add
mov
ret
xor
xchg
add
ja
out
call
loop
dec
inc
push
loope
push
jns
stc
push
xor
xchg
mov
and
xchg
xchg
addl
ds
test
xchg
jge
cwtl
or
mov
cmp
stc
add
les
data16
jl
jbe
clc
je
clc
jmp
ja
and
cld
pushl
push
adc
cld
orb
xchg
pusha
add
or
mov
dec
orl
push
jp
pusha
xchg
xorl
stc
xchg
mov
push
adc
add
pushf
repz
add
mov
jnp
mov
jns
xchg
adc
xchg
and
jp
lock
es
test
std
test
cwtl
xor
add
mov
push
std
mov
lods
test
xchg
mov
test
std
or
jmp
popa
sbb
sbb
xchg
and
into
jo
xchg
jge
xchg
cmpb
mov
stc
or
out
call
jnp
mov
stc
push
add
jnp
add
mov
push
mov
pop
insl
enter
in
push
cmp
std
mov
fdivs
sub
enter
les
notl
insb
out
xchg
incl
xchg
xchg
fsubr
add
out
jl
mov
aam
add
xor
xchg
insl
andb
add
loop
sbb
es
xchg
push
push
push
pop
in
add
mov
lret
ret
aas
jmp
xchg
call
insl
js
stos
push
add
fs
jecxz
add
mov
clc
mov
inc
ret
aas
jmp
cmpsb
call
and
jl
xchg
or
call
xchg
sub
inc
clc
cwtl
jp
notl
cwtl
imul
adc
xchg
sub
sub
out
repnz
call
or
int3
jmp
add
test
scas
je
jle
int
mov
mov
mov
leave
pop
data16
adc
mov
cmp
add
add
xchg
or
arpl
mov
lods
add
inc
loope
dec
adc
roll
mov
mov
mov
cmpsb
ret
dec
pop
orl
mov
push
jge
adcl
xorb
aad
add
add
fadd
bound
in
mull
js
mov
mov
daa
pop
and
idiv
add
pop
xor
cwtl
xchg
sahf
inc
mov
xchg
sub
ror
mov
int3
loopne
jl
gs
jl
movsb
arpl
push
dec
test
inc
cld
xchg
cltd
std
lcall
jp
pop
sub
std
add
nop
xchg
cmc
js
mov
dec
cld
arpl
mov
add
mov
sub
js
sub
add
jl
push
stc
add
ffree
repnz
daa
lcall
mov
stc
arpl
ja
jle
cld
ffree
gs
inc
mov
ja
mull
cmp
sub
mov
call
jl
add
pop
popf
jl
add
add
mov
add
call
adc
add
or
jns
jp
mov
pop
cmp
pop
outsl
enter
xor
xor
cmp
xchg
adc
nop
add
test
outsb
jle
fists
push
adc
pop
pop
int
pop
shr
adc
jmp
dec
out
call
sbb
push
pop
push
push
out
call
adc
jmp
jbe
add
xchg
add
jge
push
inc
jl
dec
call
sarb
cmp
or
add
mov
jmp
pop
add
sub
std
decl
out
jge
or
fcmovne
loop
jbe
adc
or
mov
xor
dec
or
mov
mov
xor
add
lret
pop
mov
ja
call
xlat
pushf
jge
mov
std
cli
loopne
mov
cmpsl
pop
scas
loopne
pusha
cmpl
imul
push
std
mov
xchg
add
imul
or
or
cmp
repz
test
rol
jecxz
sub
repnz
int3
fdivrs
or
lods
in
dec
mov
ljmp
enter
pusha
dec
stos
mov
jo
and
in
imul
data16
nop
frstor
mov
mov
pop
dec
xorb
jle
add
jle
add
jle
add
jle
add
jle
add
add
out
xchg
add
add
fiaddl
xchg
add
add
and
xchg
add
add
or
add
cld
mov
cli
jmp
jle
test
stc
out
popl
add
add
add
ficomps
jle
stc
into
sldt
pop
or
mov
pshufb
pop
js
sahf
pop
js
xchg
vmread
lea
js
xchg
js
jle
js
jbe
js
outsb
vmread
pop
js
mov
rorl
insl
inc
dec
jnp
and
cmpsb
add
out
lcall
int
xchg
mov
orl
fimull
add
pushf
out
fnstsw
add
add
dec
subb
dec
xchg
je
inc
cltd
std
inc
push
in
and
in
and
in
add
insl
incb
push
mov
mov
sub
sub
loopne
sti
inc
and
sub
push
addb
dec
xchg
push
adcb
test
std
push
cmp
or
and
out
outsl
and
add
mov
or
mov
in
and
sbb
fdivrl
or
loopne
and
add
lock
addr16
call
std
inc
setg
add
loopne
enter
arpl
sbb
xor
in
push
xor
imul
push
addr16
adc
negl
jb
or
adc
push
or
adc
mov
std
call
out
test
lock
repnz
adcl
xor
mov
out
xchg
inc
in
and
out
add
xlat
push
popf
adc
repz
sbb
jnp
pop
andb
sbb
jl
and
in
xchg
jb
dec
int
push
insl
imul
sbb
or
add
add
hlt
add
fs
push
xor
inc
add
test
add
add
imul
push
insl
clc
xor
sub
jne
xchg
pop
mov
call
call
shlb
or
jmp
daa
adcb
hlt
out
xchg
add
xchg
lock
jb
and
bound
lret
add
scas
push
mov
ret
repz
jmp
push
test
add
xchg
sbb
mov
xor
add
data16
test
loopne
xchg
or
add
add
lods
sbb
outsb
xchg
sti
iret
xchg
je
push
test
cmp
inc
aas
pop
orb
incl
xor
testb
mov
decb
outsl
jle
add
jp
mov
sub
xchg
je
dec
jne
add
scas
dec
jbe
and
xchg
jmp
xchg
fistpll
sbb
mov
fstpt
or
pop
call
scas
loopne
inc
sar
and
out
clc
jge
mov
cmp
sbb
call
mov
int3
or
and
repnz
jge
popa
test
pop
jecxz
test
fdivr
iret
lock
repz
jl
mov
call
int
test
fdivrs
mov
add
fadds
cmpl
push
cltd
inc
cmp
push
pop
sub
xchg
cmp
js
sbb
enter
add
roll
les
sbb
fisttpl
sub
outsb
sub
xchg
lock
lret
mov
test
sahf
sub
fadds
sub
enter
fcoms
jae
js
sub
js
sbb
lcall
repnz
out
js
pop
add
hlt
and
out
xor
push
jecxz
or
sbb
aam
loope
ja
mulb
jge
imul
or
mov
add
arpl
push
pop
or
lock
or
push
test
adc
mov
mov
mov
jge
pop
mov
jl,pn
mov
sub
add
add
sbb
jmp
add
push
test
test
mov
inc
mov
bndstx
jge
mov
adc
roll
jg
ja
adc
lret
xorl
mov
mov
push
or
push
in
jle
adc
or
inc
rolb
sub
pop
test
cld
out
loope
je
adc
sarl
pand
jge
scas
cmp
je
dec
xchg
cmp
adc
add
mov
outsl
cli
and
fwait
loope
sbb
imul
in
xor
lock
shrb
stc
shrl
jns
dec
fistpll
jl
dec
icebp
lods
arpl
dec
xchg
cmpsb
add
push
imul
pop
mov
push
jg
jae
les
add
movsb
add
xchg
out
or
test
or
xchg
ret
cmp
add
dec
adc
insl
imul
adcl
jge
add
add
popf
add
and
mov
add
dec
adc
pop
imul
outsb
dec
sbb
pop
clc
ja
fiadds
inc
add
add
dec
sub
ret
xchg
in
sub
push
cmp
ljmp
test
insb
into
aaa
mov
je
xchg
sub
addr16
rcrb
cmp
ljmp
cwtl
jo
cwtl
push
sbb
test
insb
xor
cwtl
sbbb
nop
jo
pop
mov
jb
mov
jno
cmp
or
in
test
in
and
cs
es
shrb
xchg
add
add
and
stos
add
xchg
add
add
jb
add
jnp
add
scas
cmp
call
addb
leave
cltd
std
orb
inc
sbb
or
add
cld
stc
je
incl
pop
mov
xchg
lods
jecxz
sub
add
test
lds
cltd
sbb
xchg
in
sbbb
pusha
sbb
pop
mov
push
sbb
add
call
sahf
inc
jl
sbb
js
ucomiss
jno
mov
out
fsubs
test
pop
jb
sahf
pop
jge
pop
mov
mov
and
push
pop
mov
and
pop
jg
addr16
xchg
loopne
pxor
cmc
jmp
test
xchg
push
or
push
jno
fidivrl
xor
test
shlb
adc
imul
popf
test
mov
add
sub
rclb
cmpsb
xor
push
loopne
into
push
pop
mov
add
inc
jge
mov
inc
les
adc
mov
add
add
inc
add
push
scas
sub
jno
pop
cmp
mul
mov
outsb
dec
pop
inc
mov
adc
fimull
add
add
mov
out
sbb
pusha
or
add
inc
xchg
add
add
test
lods
push
cmpsb
xchg
add
jmp
jns
jnp
sub
jae
pop
xor
cmp
xor
jnp
stc
outsb
stc
jmp
xor
add
call
jb
js
adc
push
stc
jno
or
pop
fs
hlt
add
outsl
insl
jecxz
enter
aad
dec
repnz
sub
outsl
ljmp
jmp
sti
and
jmp
or
add
imul
cmpsb
jnp
jg
orb
clc
dec
jo
mov
aaa
rolb
sub
add
inc
or
mov
dec
psrld
cmp
or
test
dec
add
les
xchg
jp
in
lods
idiv
push
jae
and
pop
dec
sub
dec
inc
inc
mov
xor
cwtl
clc
inc
stc
sub
add
add
aad
push
aaa
cmp
xchg
inc
add
fwait
push
mov
push
mov
ljmp
mov
loopne
fistpl
pusha
or
add
imul
loope
mov
jg
add
mov
lock
jmp
lahf
mov
loopne
iret
or
mov
notb
pop
std
out
pusha
xor
dec
or
inc
pop
std
call
push
mov
rorl
mov
push
std
call
jne
sub
or
sbb
decb
add
add
leave
cmp
jns
jno
lea
out
adc
pop
iret
mov
pop
adc
in
inc
xlat
adc
push
jecxz
mov
jno
outsb
inc
sbb
cmpb
pop
outsb
dec
fstps
repz
dec
sysexit
push
add
add
add
jge
mov
into
pop
and
lea
insb
into
mov
add
sbb
test
sub
pushl
sub
xchg
adc
js
mov
push
out
sbb
stc
jmp
dec
lahf
xchg
adc
pop
outsl
or
add
jmp
in
test
stc
mov
inc
orb
cmp
int
mov
jb
ss
mov
push
or
imul
ljmp
test
clc
mov
or
jbe
lock
icebp
sub
stc
mov
rcr
cmp
fisubrl
lock
dec
movsb
xorb
jle
inc
cmp
mov
in
jb
jbe
testb
js
mov
cmp
pop
dec
mov
jle
add
std
call
idivb
pushl
adcl
add
in
std
decl
data16
xchg
jne
mov
add
outsl
sbb
xchg
loopne
xlat
cmp
movl
outsb
push
sub
inc
sbb
adc
or
jnp
roll
add
xor
pop
and
test
dec
xchg
xchg
mov
lds
lcall
mov
xchg
iret
add
xchg
push
dec
loopne
mov
gs
ja
aam
fimull
mov
dec
lock
dec
adc
fimull
xchg
add
or
sbb
sub
sbb
aad
inc
jne
fcoms
test
mov
add
jnp
fdivrs
xor
cmpsl
add
outsb
inc
and
out
xor
out
xchg
shrb
ja
jo
ja
fs
fxch
cmp
xor
pop
mov
or
mov
add
add
faddl
jmp
pop
mov
inc
mov
xor
lcall
mov
lds
adc
fdivs
and
push
jle
add
enter
adc
push
and
jb
and
mov
aaa
fdiv
into
repz
jge
mov
fistpll
int
xchg
jno
ljmp
adc
cwtl
add
cmpsb
sbb
xor
js
pop
xchg
jnp
idiv
in
add
add
add
add
idiv
movl
cmp
mov
in
idiv
dec
mov
add
mov
add
add
lcall
add
mov
add
add
jp
idiv
add
cmp
push
into
cmp
cmp
repnz
pop
iret
cmp
push
iret
cmp
cmp
icebp
idiv
mov
ret
mov
call
dec
inc
xchg
mov
inc
xchg
push
std
call
dec
inc
xchg
lods
dec
inc
xchg
push
std
call
scas
ds
cmp
call
push
add
std
call
xchg
ds
and
ds
push
std
call
xchg
ds
mov
ds
push
std
call
std
call
addr16
movb
pop
adc
out
je
out
push
movntq
pusha
movntq
js
out
or
out
or
out
adc
out
push
movntq
add
movntq
orb
add
out
sub
out
sub
out
arpl
out
mov
out
test
out
pushf
adc
add
adc
add
adc
add
adc
add
adc
add
out
cmp
out
inc
adc
add
and
jmp
xchg
sbb
jmp
xchg
inc
adc
add
dec
adc
xchg
pop
adc
xchg
add
jmp
xchg
cld
push
jmp
xchg
movsb
adc
xchg
test
jmp
xchg
cmp
jmp
xchg
jle
jmp
xchg
mov
adc
xchg
mov
jmp
xchg
pushf
adc
xchg
inc
adc
xchg
fimuls
jmp
xchg
adcb
xchg
in
jmp
add
incl
adc
jmp
adc
decb
adc
incb
adc
incb
adc
call
std
sti
adc
notl
in
repz
mov
adc
mov
mov
stos
adc
das
adc
sub
insl
daa
adc
and
add
pop
adc
sbb
insl
pop
adc
adc
cmp
push
std
or
std
add
std
sti
xchg
push
std
testl
push
std
jmp
push
std
or
push
std
test
test
mov
stos
push
std
movsl
push
std
mov
mov
sub
push
std
mov
mov
mov
push
std
mov
push
std
scas
xchg
push
std
stos
mov
cmpsl
mov
push
std
lahf
xchg
push
std
fwait
mov
out
sub
out
and
out
and
out
or
out
sbb
out
adc
out
adc
out
cwtl
icebp
out
mov
out
loope
out
testb
add
push
out
out
inc
icebp
out
add
out
dec
icebp
out
pop
icebp
out
push
icebp
out
xor
add
add
out
fs
out
jo
out
insb
icebp
out
fdivp
out
les
out
mov
out
lods
movntq
mov
verw
xchg
cld
or
xchg
clc
or
xchg
hlt
or
xchg
lock
xchg
or
jmp
xchg
add
jmp
xchg
pop
or
add
push
or
xchg
les
jmp
xchg
sbb
jmp
xchg
pusha
or
xchg
cmp
jmp
xchg
xor
jmp
xchg
or
jmp
xchg
inc
or
xchg
inc
or
xchg
pushf
or
xchg
cwtl
or
xchg
xchg
or
xchg
xchg
or
xchg
nop
or
xchg
lods
or
jge
test
jge
movsb
push
insl
add
push
add
add
push
sub
add
push
cmp
add
push
sub
add
push
std
add
push
std
add
push
in
add
push
in
add
push
std
add
in
add
in
add
bsr
insb
shrd
dec
push
lods
add
push
mov
add
lods
add
jge
xor
add
and
xchg
addr16
sbb
addr16
adc
addr16
and
addr16
adc
addr16
mov
mov
test
addr16
and
jge
std
fldcw
addr16
repz
addr16
out
mov
jmp
addr16
out
addr16
jecxz
addr16
fisttps
addr16
xlat
cltd
addr16
lldt
addr16
shll
std
mov
mov
mov
add
add
out
decb
out
sub
out
xor
out
xor
out
clc
or
add
lock
and
out
or
out
sbb
out
adc
out
adc
out
cwtl
or
add
out
xlat
out
out
loop
out
add
out
out
dec
or
add
out
push
or
out
insb
or
add
out
fs
add
out
testb
push
or
add
or
jmp
xchg
sbb
jmp
xchg
and
jmp
xchg
clc
or
xchg
hlt
or
xchg
lock
xchg
or
jmp
xchg
add
jmp
xchg
pop
or
add
push
or
xchg
push
or
xchg
insb
or
xchg
push
or
xchg
sub
jmp
xchg
and
jmp
xchg
push
or
xchg
adc
jmp
xchg
sub
jmp
xchg
pushf
or
xchg
cwtl
or
mov
ljmp
or
jmp
or
ljmp
or
jmp
mov
or
lcall
push
cmp
mov
push
cmp
sub
call
push
std
dec
push
std
dec
push
in
pop
or
pop
or
push
or
push
or
decb
in
decb
mov
incb
lods
aas
or
imul
aaa
cwtl
imul
std
das
mov
sub
addr16
and
addr16
sbb
addr16
adc
addr16
or
addr16
add
addr16
sti
lahf
addr16
negl
addr16
out
addr16
jmp
addr16
out
addr16
jecxz
addr16
fisttps
addr16
xlat
lahf
addr16
rorl
addr16
lret
lahf
addr16
lahf
add
add
add
out
lock
out
call
add
out
cmp
out
cmp
out
push
lock
xchg
out
add
out
add
out
and
out
sub
out
mov
out
ss
add
out
movsb
add
add
out
js
out
inc
add
out
adc
add
or
add
add
xchg
aad
jmp
xchg
je
jmp
xchg
mov
jmp
xchg
addb
xchg
fadds
xchg
int3
add
xchg
and
jmp
xchg
in
add
xchg
lock
xchg
add
jmp
jmp
xchg
add
jmp
xchg
dec
push
jmp
xchg
fs
jmp
xchg
pop
push
jmp
xchg
fs
jmp
in
add
or
add
mov
add
or
lods
add
or
add
or
add
or
lods
or
push
movsb
or
mov
or
cwtl
or
xchg
or
nop
or
add
or
add
sub
add
std
add
add
in
add
add
xchg
imul
push
mov
push
mov
dec
sahf
imul
inc
mov
add
imul
inc
mov
inc
mov
aas
sahf
addr16
cmp
addr16
xor
addr16
sbb
addr16
adc
addr16
or
addr16
add
addr16
sti
popf
addr16
testl
addr16
jmp
addr16
out
add
add
pop
out
add
pop
out
enter
mov
pop
out
in
out
fadds
out
cmp
out
rolb
out
aam
out
call
pop
out
loopne
out
inc
pop
out
cmp
out
sub
out
xor
out
jo
out
or
out
cld
push
out
add
out
and
out
sbb
out
or
out
adc
out
adc
out
add
pop
out
mov
pop
add
xchg
in
jmp
xchg
inc
add
jmp
xchg
mov
push
jmp
xchg
les
jmp
xchg
mov
push
jmp
xchg
sbb
jmp
xchg
jbe
jmp
xchg
outsb
add
jmp
xchg
jp
jmp
jmp
xchg
sbb
jmp
xchg
into
add
xchg
testl
jmp
xchg
fiadds
sub
out
or
jmp
in
jmp
or
decl
std
push
or
in
or
call
or
fmull
lods
ljmp
or
dec
or
lods
inc
or
adc
or
or
or
mov
jge
lods
or
test
insl
jmp
cmp
in
or
call
xchg
mov
mov
std
xchg
std
jle
imul
jbe
imul
rorl
imul
mov
imul
lods
sahf
imul
movsl
mov
mov
sahf
addr16
cltd
sahf
addr16
xchg
mov
xchg
mov
lea
addr16
test
addr16
jge
addr16
jns
addr16
jne
addr16
jno
add
add
push
out
mov
push
out
mov
out
jb
out
add
out
push
out
pushw
out
bound
out
pop
push
out
pop
push
out
push
push
out
xchg
push
out
mov
out
mov
out
xchg
out
addb
add
out
jp
out
jbe
out
mov
out
scas
push
out
stos
push
out
cmpsb
push
out
mov
push
out
lcall
add
out
dec
pop
add
add
dec
pop
jmp
xchg
popw
jmp
xchg
pop
pop
jmp
xchg
ss
jmp
xchg
cs
jmp
xchg
inc
pop
jmp
xchg
ds
jmp
xchg
xchg
pop
jmp
xchg
mov
jmp
xchg
cmpsb
pop
jmp
xchg
sahf
pop
jmp
xchg
push
jmp
add
jle
jmp
xchg
xchg
jmp
cmp
add
or
add
or
add
or
add
or
add
std
add
in
add
in
add
std
add
std
add
in
add
in
add
or
add
or
add
or
mov
add
or
add
or
sbb
jge
push
or
adc
insl
add
or
or
jge
push
or
std
add
pop
std
stc
mov
cmc
mov
icebp
pushf
pop
std
in
pushf
pop
std
jmp
mov
loope
pop
std
fstpl
std
aad
pop
std
rcrl
pop
std
leave
mov
lds
std
mov
mov
mov
pop
std
mov
pop
std
lods
pushf
pop
std
test
mov
mov
pushf
push
std
cltd
mov
xchg
mov
xchg
pushf
add
add
stc
out
push
stc
out
adc
out
push
stc
out
lret
add
clc
out
cmpsb
clc
out
mov
scas
clc
out
mov
out
jbe
out
push
out
pop
clc
out
clc
out
inc
clc
out
pop
clc
out
dec
clc
out
push
clc
out
push
clc
out
mov
out
jle
out
cmp
add
out
jp
out
outsb
clc
out
jb
out
mov
out
stos
clc
out
sahf
clc
call
xchg
repnz
jmp
xchg
pop
add
add
add
jmp
xchg
dec
add
xchg
push
add
xchg
push
add
xchg
pop
add
xchg
pop
add
xchg
add
xchg
bound
jmp
xchg
sub
jmp
xchg
xor
jmp
xchg
cmp
jmp
xchg
inc
add
xchg
mov
jmp
xchg
xchg
add
xchg
xchg
add
xchg
sahf
add
xchg
jecxz
jmp
add
add
insl
add
insl
add
jge
dec
add
insl
add
pop
cmp
add
sub
add
add
cmp
add
sub
lcall
std
lcall
in
call
in
call
std
decl
std
decl
in
incl
add
mov
mov
pushl
pop
mov
ljmp
pop
lods
jmp
and
xchg
pop
std
sbb
xchg
pop
std
adc
xchg
pop
std
or
xchg
pop
std
add
xchg
pop
std
std
lcall
cmc
lcall
in
lcall
in
pop
std
loope
pop
std
fldl
lcall
aad
pop
std
rcll
pop
std
test
pop
std
jl
pop
std
mov
xchg
pop
std
mov
pop
std
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
out
bound
out
pop
add
add
out
inc
add
add
out
xchg
add
add
std
out
mov
add
jmp
xchg
push
add
xchg
sbb
jmp
xchg
and
jmp
xchg
ljmp
add
out
add
xchg
cli
add
xchg
testb
xchg
add
jmp
xchg
dec
add
xchg
inc
add
xchg
push
add
xchg
dec
add
xchg
pop
add
xchg
push
add
xchg
bound
jmp
xchg
sub
jmp
xchg
xor
jmp
xchg
cmp
jmp
xchg
inc
add
xchg
add
lods
cld
mov
add
add
cld
test
add
jge
sahf
add
insl
add
add
jge
mov
insl
add
add
cmp
add
add
cmp
add
add
sub
add
std
add
in
add
in
add
std
add
std
add
add
add
in
add
xchg
pop
std
inc
xchg
pop
std
inc
cltd
pop
std
cmp
cltd
pop
std
xor
cltd
pop
std
sub
cltd
pop
std
and
cltd
pop
std
sbb
cltd
pop
std
adc
cltd
pop
std
or
cltd
pop
std
add
cltd
pop
std
std
nop
pop
std
stc
cwtl
pop
std
cmc
nop
pop
std
icebp
cwtl
pop
std
in
add
pop
std
in
pop
std
loope
pop
std
fstl
pop
std
aad
pop
std
rcrl
sti
out
fdivrp
out
sar
out
sti
out
cli
sti
out
out
sti
out
loop
out
out
out
ljmp
add
std
out
ss
out
sbb
out
push
std
out
add
out
push
std
out
or
out
add
std
out
adc
out
push
std
out
mov
cld
out
mov
cld
out
stos
cld
out
jle
out
jb
out
jbe
out
pop
cld
out
dec
cld
call
xchg
mov
jmp
xchg
mov
add
xchg
ret
xchg
push
add
xchg
or
xchg
push
add
xchg
adc
xchg
push
add
xchg
sbb
add
and
xchg
out
jmp
xchg
out
add
xchg
repnz
xchg
testb
xchg
cli
add
xchg
incb
jmp
xchg
inc
std
call
xchg
dec
std
call
xchg
push
std
call
xchg
pop
std
call
in
add
add
add
add
add
add
add
add
add
add
add
adc
lods
add
add
add
add
stc
add
cmc
add
icebp
add
in
add
ljmp
add
add
fldl
cmp
add
add
add
add
add
add
add
add
std
mov
xchg
pop
std
mov
pop
std
scas
xchg
pop
std
stos
xchg
pop
std
cmpsb
xchg
pop
std
mov
lret
in
mov
inc
inc
jbe
dec
inc
xchg
cmp
call
std
call
pop
adc
or
inc
xchg
cltd
std
call
sti
mov
sbb
stc
inc
dec
stc
loopne
jl
ja
ret
cmpsb
jl
cmp
inc
add
faddp
sbb
or
jo
stos
add
out
rorb
jp
mulb
repz
loop
push
out
test
std
xor
pop
mov
call
push
xchg
add
add
inc
nop
inc
xchg
inc
sbb
out
je
sub
jns
stc
inc
ds
xchg
and
and
mov
mov
in
je
outsl
mov
lret
faddl
jge
in
xchg
cmp
add
ret
inc
rcll
lock
push
mov
pop
into
dec
inc
test
inc
inc
or
mov
inc
or
inc
lret
jge
xchg
lock
pop
and
mov
call
stos
pop
std
fadds
mov
inc
stc
pop
in
push
stos
inc
stc
jmp
push
into
add
inc
stc
jmp
xlat
ret
jp
mov
add
in
sub
mov
jp
push
into
add
mov
jge
add
incb
jle
sbb
movsl
jg
ljmp
jge
cmp
and
cmp
aas
in
cld
incb
mov
addl
scas
or
stc
test
lods
jge
add
or
add
mov
mov
outsb
and
dec
sbb
xor
jg
aas
outsb
push
aad
stc
jge
addb
scas
or
pop
xchg
insl
add
jp
mov
ret
enter
pop
xorb
lret
sub
test
dec
cli
mov
pushf
mov
mov
push
xor
pop
int
pop
jo
push
hlt
ljmp
mov
shrl
jg
xchg
rolb
lods
loope
call
inc
jge
dec
add
push
stos
enter
add
mov
std
call
test
jae
ds
pop
je
cld
loopne
push
test
add
dec
add
sub
add
in
mov
call
movl
mov
data16
mov
push
pop
xlat
xchg
subl
inc
data16
call
dec
int
cmpsb
pop
into
jmp
add
jg
add
mov
pop
inc
jp,pt
loope
hlt
add
bound
faddl
add
dec
dec
xor
mov
xchg
add
sbb
ljmp
xchg
add
sub
std
enter
lods
je
mov
sub
mov
sgdtl
stc
out
mov
adc
and
add
into
jae
adc
and
add
push
in
aas
xor
sub
xchg
add
sbb
xchg
mov
jge
jae
mov
jbe
mov
out
fnsave
stc
sub
ljmp
mov
jb
js
cmp
jge
loope
add
jle
cmp
jge
add
push
xchg
stos
hlt
call
add
ret
gs
idiv
add
jp
scas
inc
outsb
push
in
idiv
loop
out
add
leave
testb
dec
sti
pop
mov
lret
js
add
and
xchg
mov
scas
idiv
cs
str
add
sbb
xchg
out
jnp
sub
add
stc
arpl
jns
jle
rcrb
and
push
cmpsl
std
mov
push
inc
stc
cmp
inc
stc
add
cmpsl
adc
add
mov
mov
jnp
sub
add
lds
repz
mov
mov
inc
mov
shrl
cwtl
enter
inc
xor
jb
sahf
mov
jge
inc
stc
mov
and
push
ss
stos
inc
mov
add
test
inc
jl
dec
dec
insl
sub
inc
add
movw
dec
dec
aas
outsb
mov
mov
daa
popf
inc
sub
add
sub
icebp
dec
or
cmp
jl
push
call
and
loope
ret
cmp
dec
pop
mov
mov
inc
sbb
cld
add
gs
in
orb
jp
add
cmp
mov
ljmp
jge
insl
decb
pop
xor
add
mov
jnp
mov
cmp
mov
ljmp
jge
sub
add
jmp
sarl
je
cmp
fsts
mov
ljmp
call
stos
pop
mov
ljmp
je
add
stc
scas
push
jnp
and
std
jb
push
mov
ljmp
stc
add
jge
push
mov
jmp
dec
ret
idiv
jge,pt
push
jae
add
je
fsubl
fcmovb
mov
jne
jle
or
push
adc
dec
jle
push
sub
ret
idiv
jle
std
std
lcall
inc
fidivrs
and
mov
imul
lahf
jle
pop
cmp
in
shl
inc
adc
sbb
inc
sahf
std
mov
jmp
xchg
jle
andb
add
jle
stos
sub
add
stc
sub
jnp
sub
add
stc
imul
jnp
and
dec
stc
push
jmp
jnp
sbb
add
sub
inc
stc
cmp
jge
mov
ret
add
inc
stc
and
jne
jle
rcrb
push
add
mov
mov
jg
mov
lret
leave
inc
stc
shrl
jnp
sub
push
lods
add
mov
add
mov
leave
mov
inc
movw
inc
lea
movsl
cld
fcomi
add
pop
inc
insl
adc
push
xor
mov
pop
mov
andl
cmp
inc
test
add
add
aaa
cli
inc
cld
xor
inc
or
add
jns
add
dec
in
data16
mov
push
adc
xor
push
shll
add
adc
sbb
cmp
sahf
xor
lock
jbe
jae
in
jno
je
fbld
pop
fdivs
aam
add
mov
mov
repz
lods
sub
xor
cs
jp
cmp
stc
push
aam
jp
and
stc
xchg
mov
call
stos
test
sti
ficoms
test
mov
sbb
out
mov
testb
jmp
mov
je
jmp
mov
je
jmp
jp
ja
push
test
add
lds
cmc
inc
mov
insb
sbb
or
push
test
testb
jmp
mov
incl
outsb
jge
push
sub
out
hlt
idiv
mov
ja
out
cmc
idiv
jle,pt
push
xchg
and
xor
add
jmp
test
adc
jae
jg
clc
mov
sub
stc
mov
mov
mov
sbb
fadds
addl
sarb
pop
add
dec
and
jge
pop
add
adc
cld
call
inc
jge
sub
adcl
cmpl
push
sbbl
std
in
add
in
xor
mov
sub
fnsave
mov
jmp
add
mov
adc
mov
jg
push
cltd
lods
adc
jp
dec
jg
sbb
aaa
bound
jg
sbb
cmp
fnstenv
dec
and
xor
mov
or
adc
adc
sbb
mov
fistpll
or
rclb
add
cmp
sub
mov
or
cmp
push
or
add
sub
mov
cmp
mov
inc
notb
jle
je
mov
mov
jecxz
lods
xor
data16
push
inc
sti
das
stc
dec
adc
call
sub
mov
ljmp
stc
push
sti
cld
fwait
xchg
sub
add
mov
cmp
outsb
cmp
ds
xor
paddsw
std
mov
jns
lahf
add
in
repz
mov
scas
or
or
add
int
inc
scas
sbb
testb
cmp
in
aas
sbb
cmp
xor
out
call
aam
push
push
testb
roll
subb
rolb
mov
call
pushf
addl
icebp
cmp
xchg
or
sbb
mov
and
mov
inc
daa
stc
mov
pusha
and
test
pusha
sbb
or
es
fildl
decl
in
or
pop
nop
add
es
jl
sbb
rcr
jecxz
add
or
jg
cmp
jae
xorl
add
cli
or
mov
std
data16
add
bound
addr16
sbb
jecxz
mov
push
shrl
or
outsb
mov
ret
scas
xchg
mov
lods
xchg
stos
scas
addr16
and
adc
add
or
add
adc
mov
icebp
das
sub
add
loop
mov
sbb
cmp
jecxz
jne
jge
mov
inc
nop
das
aaa
inc
pop
lds
mov
cmp
aas
cmp
push
or
ja
jnp
ja
clc
call
mov
shrb
rol
sbb
rorl
jl
divl
scas
ss
out
mov
test
adc
ljmp
mov
jmp
mov
mov
xchg
jmp
jmp
outsl
cld
icebp
mov
stos
jp
nop
stos
add
aam
scas
je
daa
test
ret
aam
inc
repz
add
add
mov
add
cmp
div
ljmp
clc
pop
jl
or
clc
incl
out
xor
in
add
jl
jnp
rol
add
imull
jmp
jae
fcompl
add
mov
aaa
ds
je
add
mov
push
adc
lds
jnp
jmp
inc
jmp
icebp
pop
dec
jmp
xor
jmp
cmp
add
and
xor
sub
xor
cmp
loop
sarl
add
xchg
pop
std
test
push
mov
sbb
mov
movsl
push
repnz
mov
in
inc
cs
fistpl
mov
jno
inc
mov
pop
cmp
jge
dec
mov
pop
pusha
or
test
inc
jge
dec
mov
add
stc
adcl
xorb
inc
mov
data16
out
xchg
add
test
js
inc
in
jns
xchg
add
cmp
mov
xchg
jg
adc
sbb
std
sub
clc
xor
out
push
pop
jecxz
sbb
fldcw
add
loopne
cmp
xor
mov
aas
lea
or
jl
jns
jge
cld
xchg
add
mov
jge
js
mov
jmp
xor
mov
xchg
out
jmp
jg
rep
lods
jp
xchg
cmpsb
sbb
push
pop
out
jmp
push
push
adc
xchg
cmpl
xchg
scas
add
test
stc
ficoms
loop
mov
test
sub
mov
inc
rcll
mov
fistpl
add
dec
adc
jecxz
daa
stc
add
jb
add
push
add
push
xor
mov
call
cmp
mov
jp
sub
cld
jp
xor
out
idiv
outsb
test
wrmsr
add
mov
jno
cli
jne
sbb
push
xorl
sti
ret
adc
in
std
decl
jge
xor
jle
aad
repz
daa
add
mov
std
decl
mov
push
xchg
and
pop
lods
push
jae
lahf
xchg
cmp
call
lret
cmp
sub
dec
sahf
mov
jl
idiv
mov
xchg
pop
std
test
add
xchg
pop
std
js
dec
in
add
jge
mov
xor
stc
jmp
idivb
push
mov
mov
pop
cmp
jge
xor
stc
mov
jle
cltd
hlt
stc
out
leave
lcall
cmp
add
sbb
sub
mov
insl
sub
or
sub
mov
sbb
sub
xor
sbb
rclb
pushl
add
add
adc
xchg
add
mov
daa
out
xchg
add
add
mov
adc
add
add
out
xchg
add
gs
stc
jmp
xchg
add
jg
and
add
xchg
add
jmp
sbb
add
push
and
add
jmp
sbb
add
xchg
add
jmp
or
stc
xchg
add
and
jmp
xchg
add
dec
sbb
add
xchg
add
jmp
adc
add
adc
mov
add
add
adc
add
add
add
add
cmp
call
add
add
add
std
xchg
sti
incl
test
jno
ljmp
add
add
sldt
dec
jae
std
add
add
add
add
sti
jmp
push
cld
std
add
add
add
add
or
add
std
call
std
call
test
fwait
repz
xchg
add
test
add
push
test
jae
test
imul
arpl
jne
push
idivl
dec
or
xorl
cmp
xor
std
sub
jnp
and
jnp
adc
jnp
or
jnp
add
jl
sti
inc
jl
rep
jl
jmp
jl
jecxz
jp
mov
movsl
jl
and
jl
and
jl
mov
and
jge
and
jge
and
mov
add
addl
and
subl
add
push
and
add
cmc
cmpb
aas
jg
and
subb
scas
andb
ret
sbbb
mov
orb
cmpsl
addb
roll
add
and
jg
and
push
adc
stc
and
stc
rcll
jmp
daa
es
jmp
add
stc
icebp
and
jae
and
mov
and
xchg
and
fwait
xor
repz
and
xlat
cmp
iret
xor
mov
and
mov
and
stc
fcomip
and
gs
stc
pop
in
stc
test
in
stc
sub
and
or
inc
and
stc
cmp
ret
xor
iret
sub
add
push
cld
lcall
push
cld
lcall
cld
pushl
cld
call
cld
decl
cld
lcall
push
cld
jmp
push
cld
jmp
cld
decl
push
cld
jmp
push
cld
lcall
cld
call
jo
pushl
outsb
cld
lcall
outsb
cld
incl
cmc
outsl
cld
dec
outsl
cld
ljmp
jo
jns
cld
dec
outsl
cld
fildll
fldt
incl
cld
lcall
jno
push
jo
lcall
jno
call
scas
cld
repz
scas
cld
jmp
scas
cld
jecxz
scas
cld
fcomi
scas
cld
rorl
cld
lret
sbb
jge
mov
xlat
cmp
pop
test
mov
fwait
int
std
xchg
xchg
std
mov
std
xor
std
jnp
movsb
cld
jae
movsb
cld
imul
arpl
cld
pop
inc
cmpsb
cld
push
cltd
movsl
cld
dec
mov
cld
inc
in
movsl
cld
cmp
cmpsb
cld
xor
movsl
cld
sub
movsl
cld
sbb
movsl
cld
adc
mov
test
clc
and
test
loopne
int
fsubs
fildll
lods
enter
shlb
lods
mov
and
lods
mov
and
lods
nop
and
lods
mov
cmp
js
and
push
and
pop
and
stos
dec
and
stos
inc
and
stos
xor
pop
stos
sub
arpl
out
sbb
lea
sbb
sbb
stc
sbb
stc
fnstsw
sbb
stc
stc
and
stc
mov
or
stc
popa
jmp
sbb
pop
jmp
sbb
sub
stc
fldl
stc
dec
sbb
incl
stc
jmp
and
icebp
xor
cltd
and
jmp
es
sbb
stc
jmp
and
add
subb
add
std
add
add
cltd
cli
jmp
cli
call
cli
std
add
add
cltd
cli
jmp
cli
call
cwtl
cli
decl
cltd
cli
lcall
cltd
cli
dec
xchg
cli
mov
cwtl
cli
ljmp
cwtl
cli
aas
cwtl
cli
call
xchg
cli
incl
iret
xchg
cli
call
xchg
cli
call
lcall
mov
cli
incl
add
xchg
stc
jne
xor
std
call
std
call
cmp
add
mov
sti
sub
std
jmp
jg
jecxz
jg
fcmovnbe
jg
rol
jg
lret
xchg
cmp
lahf
cmp
roll
std
stos
roll
std
fwait
incl
std
mov
cmp
cmpsl
jg
jnp
jg
jae
jg
imul
std
arpl
std
pop
jge
std
push
addl
cmpb
pop
xorl
sbb
scas
sbbb
popl
or
ret
cmp
filds
add
sbb
and
pop
sbb
pop
adc
sub
add
sbb
xorl
sbb
sbbb
inc
orb
and
jno
pop
subl
andl
sbbl
stos
pop
push
stc
fwait
pop
push
stc
dec
pop
push
stc
push
pop
push
stc
out
sbb
stc
icebp
adc
stc
cmp
push
adc
stc
adc
push
stc
and
push
stc
sbb
stc
push
adc
stc
jae
push
stc
pop
adc
stc
xchg
push
stc
adc
stc
xchg
sbb
stc
popf
adc
stc
and
adc
stc
bndldx
stc
sti
adc
stc
pop
push
stc
iret
pop
push
stc
xchg
pop
sbb
stc
fsts
sbb
stc
xchg
jmp
stc
add
and
fwait
cli
fistpl
cli
lcall
jge
sti
jge
decl
sti
ljmp
jg
call
jg
lcall
sti
ljmp
jge
std
push
insl
sti
out
insl
sti
lcall
je
in
outsb
sti
lcall
outsl
sti
aas
outsl
sti
incl
sti
incl
mov
outsb
sti
decl
cltd
cli
call
js
arpl
ja
push
adc
dec
add
inc
pop
js
cmp
std
xor
std
call
jno
sbb
std
call
std
call
jno
sti
sub
call
std
call
ja
jecxz
ja
std
call
cld
incl
adc
ja
ret
adc
std
call
add
adc
std
call
std
call
jae
mov
std
call
sti
add
movsl
jns
sbb
popa
sbb
add
adc
xchg
and
xchg
adc
xchg
adc
xchg
and
xchg
add
xchg
and
sub
xchg
adc
adc
add
sbb
xchg
stc
sbb
xchg
icebp
sbb
xchg
jmp
sbb
xchg
fstps
int
rcrl
mov
xchg
rcrl
xchg
mov
sbb
add
pop
ja
sbb
test
push
stc
cmp
adc
stc
sub
jecxz
stc
lret
jmp
stc
mul
adc
add
hlt
movsl
imul
negb
fcomi
stos
bound
xchg
mov
imul
popf
lds
pop
fwait
xor
bound
jmp
pop
xorb
push
xchg
mov
pop
jne
test
sub
cmc
pushf
cmp
sti
test
jmp
pop
jo
ja
insb
shrl
add
add
mov
add
add
mov
mov
incl
xor
mov
jae
jbe
jo
add
add
jne
jo
push
pop
popa
fnstenv
lcall
inc
outsb
aam
bound
jp
gs
bound
pop
insb
jbe,pn
je
insb
addr16
decl
sbb
pop
inc
dec
jp
imul
popa
insl
imul
aas
std
inc
xor
xchg
jae
lret
out
sahf
jae
xchg
jnp
std
inc
stc
add
callw
pop
call
lock
imul
mov
adcb
xchg
push
sub
lcall
dec
mov
dec
cmpl
jmp
std
inc
add
shrb
test
pop
cmp
dec
xor
pop
leave
and
adc
push
shrl
cmp
mull
or
cmpsl
adc
out
or
stc
fwait
or
jmp
push
or
movsb
or
aad
cli
mov
lods
cmpsb
stos
fwait
les
repz
lods
pushf
shrl
scas
jbe
mov
lods
out
push
add
mov
mov
xchg
xchg
jecxz
fs
xchg
mov
cmpsb
jl
adc
notb
mov
imul
imul
dec
cmp
add
nop
insl
dec
inc
movsb
ds
flds
or
cmp
cld
xor
and
lahf
imul
xchg
mov
pop
enter
enter
les
test
imul
nop
shll
mov
cmp
jae
or
inc
add
add
stc
dec
pop
popa
sbb
adc
es
push
dec
imul
insb
jae
pop
outsw
iret
ja
incl
or
dec
jns
js
insl
mov
push
aas
imul
cli
ds
dec
bound
push
push
data16
popa
push
pushw
cli
add
pop
insl
dec
ficompl
insb
xor
gs
outsb
add
pop
insl
push
inc
insb
insl
or
insl
adc
inc
add
xchg
mov
inc
xchg
test
outsl
sub
lods
xchg
jae
lds
pusha
xchg
hlt
nop
imul
shll
mov
jmp
cmpsl
xlat
mov
add
sti
mov
push
jmp
nop
imul
shll
add
cwtl
icebp
movsb
insl
rorb
lds
insl
lods
pop
xchg
jmp
out
dec
mov
mov
bound
cmp
add
add
mov
mov
mov
pop
cmpsw
je
inc
lahf
add
movsb
jns
push
cwtl
out
dec
jmp
xchg
ss
and
or
add
fsubs
inc
xchg
fimull
test
rcrb
cwtl
imulb
add
add
xchg
mov
cli
test
test
test
rcrb
lods
mov
fwait
lds
push
fwait
mov
cmp
stc
xchg
cltd
imul
insl
movsb
pop
adc
adcl
imul
inc
cwtl
fldl
ds
lcall
nop
jmp
inc
mov
or
or
adc
test
cld
shll
psubw
int
or
xchg
bound
add
cmpsb
repz
insb
rcll
aad
popa
add
pop
imul
jmp
inc
aam
pop
push
add
pop
inc
xor
pop
insl
dec
sbb
insl
inc
dec
jno
jb
add
add
pop
insl
inc
adc
pop
push
inc
pop
pop
add
jmp
inc
gs
insl
gs
add
add
push
pop
dec
mov
push
imul
data16
lcall
bound
insl
je
pop
pop
jne
data16
push
sub
dec
mov
bound
xchg
bound
push
xchg
fs
outsl
dec
inc
mov
data16
std
roll
nop
dec
stos
push
imul
bound
sahf
jae
fbld
and
test
ret
xchg
fisubs
insl
icebp
lds
pop
lock
std
xchg
cwtl
lret
sar
bound
testb
xchg
fisubs
arpl
cmpsb
leave
xchg
scas
lahf
fisubrl
add
nop
xchg
out
push
add
xchg
push
out
fwait
add
scas
cmp
mov
sub
sub
daa
ret
push
xchg
cld
xchg
out
enter
loop
sub
ljmp
mov
out
add
add
jmp
mov
push
cmpsb
insl
std
cltd
xlat
adc
pop
lds
incl
cmp
pop
int3
or
mov
mov
pop
mov
pushf
ljmp
xchg
mov
jnp
lods
arpl
or
addr16
cmc
lods
arpl
ret
push
and
stc
xchg
int
dec
add
nop
bound
xor
mov
addr16
add
stc
sub
sahf
data16
insl
gs
jb
xchg
pop
pop
push
and
outsb
push
dec
stc
jns
aas
gs
dec
imul
insl
gs
arpl
fstpt
add
add
js
fs
imul
pop
insl
push
inc
jne
outsb
add
jae
add
dec
jb
inc
addr16
jb
jb
jo
arpl
pop
dec
fidivs
outsl
jmp
jle
mov
insl
push
aad
pop
popa
roll
outsb
subl
add
cwtl
jae
add
push
test
std
dec
xchg
loop
jae
daa
test
mov
xchg
inc
js
std
cltd
xchg
push
xchg
bound
lcall
dec
sbb
ret
lcall
jnp
push
cmp
lcall
push
sub
movsb
ljmp
cmpsb
mov
rcrl
push
cmc
mov
bound
mov
loopne
pushf
imul
or
push
add
ljmp
mov
add
add
mov
mov
push
add
ret
xchg
mov
test
jbe
mov
add
jbe
xchg
sarl
mov
push
xorl
mov
jbe
dec
xchg
jle
mov
xchg
dec
mov
out
sbb
repnz
inc
mov
fwait
decl
sar
add
xchg
arpl
sub
imul
stc
mov
hlt
lret
imul
sahf
ljmp
xchg
mov
or
decl
and
lahf
push
lret
push
fwait
xchg
mov
bound
pop
mov
lret
xchg
mov
jae
sbb
bound
xchg
popa
dec
cwtl
xor
inc
pop
xor
imul
popa
insl
push
movsb
jae
addb
pushf
jno
je
xor
outsb
popa
mov
jmp
aas
sub
addr16
arpl
jmp
jb
decl
aas
gs
pusha
insb
jae
push
data16
add
push
pop
imul
cli
pop
push
and
jns
js
je
jb
js
add
push
out
imul
cltd
pop
or
push
int
pushf
imul
sbb
leave
xchg
ficomps
fs
cwtl
out
pushf
pop
mov
mov
inc
mov
add
int
fwait
push
jge
mov
add
xchg
jae
imul
jl
lcall
dec
nop
insb
xchg
mov
push
xchg
mov
mov
sub
inc
add
add
and
iret
xchg
inc
test
aad
dec
mov
out
xchg
inc
test
loope
adc
lods
add
push
push
mov
mov
add
lods
adc
dec
jmp
aam
xchg
lret
add
cld
nop
stos
jns
mov
cmpsl
insb
mov
mov
ds
cwtl
sahf
push
xchg
xchg
sahf
pop
mov
add
add
cmpsb
pop
mov
bound
add
bound
cwtl
imul
dec
dec
xor
scas
push
sbb
xchg
imul
lcall
or
mov
stc
jge
scas
push
sbb
jae
cmp
push
les
insb
mov
xor
dec
movsb
sbb
sub
jmp
setle
sbb
push
inc
adc
push
jo
out
cmp
ds
jb
loope
dec
loopne
imul
stc
pushl
gs
je
push
insb
pushf
imul
popl
jno
pop
inc
das
pop
lea
arpl
pop
insl
dec
loopne
insb
popa
rcrb
outsl
fdivrp
fwait
add
pop
pop
push
les
outsl
add
push
imul
stc
dec
cmp
fs
imul
dec
xchg
push
xchg
push
movsb
imul
pushf
imul
andb
icebp
mov
xchg
cmp
mov
std
arpl
mov
xchg
jae
out
decl
add
mov
fwait
data16
insl
mov
and
imul
push
xchg
inc
cwtl
data16
inc
jns
pushf
jae
dec
std
xchg
xchg
push
mov
cmp
add
mov
je
mov
xchg
cmp
out
add
mov
mov
icebp
xchg
inc
ret
jnp
inc
push
loop
push
cmpsl
lret
enter
add
popf
ficomps
add
inc
add
add
fwait
adc
jo
incb
jns
push
cmpsl
mov
and
jbe
out
cmpsb
jmp
lcall
stos
mov
sbb
lcall
sub
insb
jmp
repnz
insl
stos
or
push
jmp
add
mov
jae
push
sahf
insb
pop
xor
sub
or
stc
or
jmp
mov
arpl
or
dec
or
mov
out
xchg
ret
stc
xchg
dec
or
xchg
jae
xchg
lods
daa
sahf
imul
push
lea
sub
inc
subps
add
cld
mov
jmp
pop
dec
jb
pop
push
add
ds
jo
cltd
push
jge
mov
mov
sahf
pop
outsl
lret
add
popf
imul
insb
fcoml
clc
incl
rcrl
movsl
pop
mov
add
insb
push
sbb
mov
outsb
std
add
add
test
lea
cmpsl
ds
and
lods
pop
insl
nop
call
pop
add
xor
cltd
jo
xchg
decb
mov
pop
cmp
jb
xchg
cld
ret
xchg
cmp
arpl
pop
shrb
mov
imul
stc
xor
fwait
jo
ds
ss
imul
cmpsb
cltd
dec
mov
mov
dec
stos
or
bound
out
pop
add
xchg
inc
imul
fwait
cmp
pushf
pop
gs
add
xchg
mov
sbbl
ja
add
add
popf
imull
mov
jb
mov
fsubs
xchg
add
fs
inc
add
testl
add
arpl
test
arpl
xchg
loop
add
cmp
pop
add
arpl
mov
arpl
mov
cmpsl
inc
add
cmp
cld
ss
and
xchg
xchg
dec
lds
pushf
xor
mov
arpl
xchg
xor
je
das
insb
arpl
and
popa
mov
std
clc
mov
jge
bound
fidivs
test
jg
std
clc
aas
cltd
aas
arpl
bound
sub
push
xor
aas
arpl
sub
cmp
dec
add
and
imul
push
cld
hlt
jo
add
xchg
inc
outsb
xchg
cltd
dec
add
movsl
arpl
nop
insl
jo
mov
clc
jmp
add
add
mov
insb
fdivs
inc
add
lahf
insb
dec
adc
inc
sub
jb,pt
cwtl
dec
outsl
adc
insb
add
inc
jo
xchg
cmp
ficomps
clc
inc
add
insl
bound
add
dec
nop
lea
mov
mov
dec
xchg
sub
xchg
jb
std
lahf
push
and
lahf
jae
rcll
bound
mov
jmp
lahf
pusha
cmp
xchg
fwait
imul
xchg
xchg
pop
cmp
inc
daa
xchg
lahf
pop
and
xor
repnz
scas
ljmpw
add
push
popf
imul
mov
inc
add
cmp
mov
movsl
movl
or
and
pop
add
gs
push
cltd
test
mov
fs
pop
gs
xchg
dec
arpl
mov
cli
cmp
imul
lret
cli
sti
add
imul
cwtl
sub
std
xchg
sahf
pop
push
jg
add
pop
cmpl
jo
add
add
cwtl
cld
insl
inc
shl
dec
nop
in
jo
add
push
cmp
push
pmuludq
cmp
je
std
addr16
xchg
cmp
aaa
outsb
arpl
das
push
je
or
iret
and
clc
cmpsl
xchg
cmp
pop
push
sar
pop
imul
add
outsb
push
fwait
or
arpl
add
lcall
add
ss
arpl
or
jmp
add
add
test
aas
mov
data16
nop
inc
outsb
fwait
xchg
clc
call
cmp
mov
or
cld
sub
mov
into
xchg
dec
jecxz
add
jb
mov
ret
decl
xchg
popa
arpl
cltd
pop
add
add
or
pop
jb
scas
insb
popa
sbb
inc
popa
or
outsl
push
loop
data16
cld
rolb
xchg
and
push
xchg
sbb
arpl
jmp
push
lahf
jae
lcall
xchg
flds
inc
jns
mov
dec
jae
cltd
push
xchg
lds
inc
jns
lods
pop
les
inc
jno
test
jo
les
inc
sub
mov
cmp
dec
pop
jg
pop
std
jne
push
add
push
xchg
lcall
mov
nop
lock
add
popa
aaa
scas
mov
fs
lahf
lret
add
push
sub
xorb
lahf
mov
add
xchg
les
cwtl
pop
data16
add
mov
push
pop
jae
rcrb
rorl
mov
xor
push
insb
mov
sub
dec
out
sar
movsl
xchg
add
jo
mov
add
mov
xchg
movsl
ljmp
push
push
outsl
push
pcmpgtb
or
inc
or
jmp
outsl
jo
push
arpl
arpl
or
add
jb
pop
xchg
xor
add
sti
xor
add
push
insl
add
outsl
jo
xor
aad
imul
add
outsl
jo
xorps
add
enter
mov
arpl
add
gs
jle
bound
jge
dec
add
xchg
insb
push
adc
dec
jne
ret
lds
imul
sti
inc
jo
jb
push
mov
cld
push
add
je
test
jne
cmp
xchg
jno
imul
mov
ds
imul
push
fsubrl
fildl
jl
imul
push
pop
jae
cmp
addr16
mov
jno
imul
add
loop
push
sbb
js
sti
dec
addr16
push
imul
addr16
mov
xchg
es
les
data16
adc
mov
ja
mov
es
test
inc
arpl
or
imul
jb
fs
imul
dec
mov
std
cmp
shrb
jno
inc
mov
inc
cmp
mov
jno
insb
andb
jl
insl
mov
push
arpl
xlat
js
add
add
jb
insb
push
arpl
imul
ret
jnp
pop
ss
aaa
js
outsb
out
out
xor
cmpsl
outsb
add
cmp
jne
outsb
adc
cmc
inc
arpl
add
add
jno
push
jne
dec
shll
lret
pop
aam
cmp
aaa
outsl
jne
jo
mov
mov
and
mov
and
xchg
add
push
jmp
cli
insb
dec
mov
insl
outsb
sub
inc
dec
loope
outsb
push
call
push
pop
cmp
mov
dec
inc
mov
imul
insb
imul
nop
sub
cmp
cmp
add
pop
ja
js
add
add
insl
arpl
pop
dec
pop
lds
inc
shrl
add
sti
dec
ficoml
roll
clc
jne
add
sti
dec
sbb
inc
gs
jne
das
pop
pop
push
sbb
popa
adc
inc
in
add
jp
cmp
enter
aam
add
jl
dec
inc
lods
inc
sub
xchg
push
outsl
add
data16
lea
outsb
mov
add
outsb
jo
movsb
bound
cld
popa
add
imul
pop
inc
in
cld
adc
outsb
push
mov
dec
pop
test
insb
xchg
xchg
arpl
insl
push
inc
xchg
push
add
fs
sub
insl
push
push
xchg
jb
push
cmc
insl
gs
stc
insb
push
icebp
pop
imul
je
imull
add
xchg
sub
xlat
push
je
aad
cld
push
xchg
or
mov
or
test
insl
ja
frndint
sub
jl
push
arpl
imul
add
xchg
add
push
inc
gs
js
int3
jno
add
popa
mov
outsb
es
fs
pop
xchg
outsl
add
jae
push
xchg
add
fnstcw
stos
push
out
cmpl
out
cmp
ss
fsubs
loopnew
push
addr16
push
out
stos
add
js
inc
dec
je
push
out
test
pop
xor
test
sqrtps
jbe
fs
sti
imul
je
pop
add
insb
push
add
push
pop
push
bound
int3
add
lret
push
jmp
ss
cwtl
sub
les
mov
pop
push
jmp
divb
repz
arpl
negb
sahf
xchg
or
cmp
ss
cmp
jmp
fs
push
cwtl
stos
lcall
enter
ficoml
inc
mov
push
or
add
sbbl
dec
add
push
repz
add
filds
dec
push
cmc
pop
jne
dec
add
cmp
rcrl
add
add
gs
imul
pop
insl
adc
push
jge
dec
gs
jbe
xor
sbb
add
add
pop
cmp
bound
pop
imul
gs
pop
dec
outsb
add
pop
popa
je
arpl
pop
add
jge
cmp
pop
popa
je
arpl
adc
jno
outsb
outsb
insl
jmp
add
addr16
add
insl
loope
inc
pop
xlat
cld
pop
xchg
lcall
xor
cmp
jb
xor
mov
add
pop
cmc
xchg
cld
add
push
cmc
pushw
icebp
insb
aas
outsb
stc
cmp
or
outsb
mov
push
popaw
xchg
inc
add
daa
imul
jb
mov
sub
inc
aad
jge
or
mov
add
add
push
je
data16
push
jo
add
push
gs
pusha
dec
mov
outsl
xchg
add
add
gs
add
jb
data16
aas
enter
rolb
pop
outsb
test
cmpsb
push
jo
outsl
sti
pop
xchg
pusha
mov
jo
add
pop
pop
cltd
pop
dec
je
je
mov
inc
xchg
add
add
gs
pop
test
add
lcall
add
sub
pop
pop
arpl
xchg
mov
dec
or
jno
dec
push
outsb
add
fcoml
pop
jae
aas
add
sbbb
arpl
pop
pop
popa
movsb
pop
add
fistl
je
lods
rorb
cli
xchg
sub
rcrl
xchg
ret
lret
mov
nop
sub
pop
pop
jmp
inc
sub
pop
pop
add
outsb
cmp
xor
cs
pop
insb
add
push
mov
add
add
push
cmp
arpl
gs
pop
jb
dec
pop
fs
jb
outsb
lret
pop
add
inc
std
pop
gs
push
data16
add
inc
fidivs
ficomps
imul
std
dec
push
sub
push
or
pop
inc
jmp
data16
std
and
or
add
pop
insb
gs
ss
xchg
add
out
aas
push
cmp
arpl
and
arpl
sar
push
sbb
ja
push
push
inc
sbb
inc
push
bound
dec
jae,pn
sub
ret
pusha
add
insb
je
mov
pop
pop
sub
cld
adc
xchg
test
insb
imul
dec
je
insb
pusha
add
imul
es
mov
arpl
mov
xor
addr16
add
popa
stos
insb
xor
ss
insb
or
push
insb
cli
jno
dec
out
mov
insb
es
pusha
push
aad
xchg
add
add
mov
outsl
push
push
aam
jns
mov
cmp
bound
int3
jb
push
xchg
outsl
sub
add
jo
push
andb
mov
jb
insb
negb
mov
insb
arpl
shrb
xchg
push
inc
xor
insb
cmp
xor
mov
dec
push
cmp
jl
add
adc
je
arpl
jp
insl
std
mov
dec
add
cmp
rorb
bound
xchg
cmp
xor
arpl
shrb
jmp
stc
insb
arpl
push
inc
je
loope
je
fiadds
insb
fstps
arpl
inc
add
push
add
loope
push
add
jo
jne
jb
inc
fdivl
inc
arpl
insb
int3
bound
add
gs
pop
pop
je
inc
pop
fs
pop
insb
gs
cmp
dec
add
loope
push
loopne
dec
faddl
imul
add
icebp
inc
push
rclb
gs
jo
aam
inc
jge
push
add
je
xchg
stos
pop
push
test
je
je
xlat
cld
mov
mov
arpl
sub
out
arpl
inc
pop
test
bound
push
push
add
je
mov
push
arpl
add
push
outsb
xor
cmp
dec
clc
pop
fs
mov
je
leave
pop
arpl
pop
push
mov
cld
cltd
add
pop
arpl
mov
push
add
out
dec
out
in
lahf
ja
jo
jae
push
xchg
push
loopne
out
loop
das
js
jo
push
pop
push
js
pop
dec
push
xchg
add
rcll
imul
add
push
adc
push
or
pop
insl
add
add
divl
push
stc
inc
xchg
add
add
shrl
push
int3
ja
outsb
enter
mov
imul
add
add
or
arpl
loopne
aas
jmp
cld
insb
push
jnp
and
inc
xchg
push
ja
mov
imul
mov
pop
dec
inc
cmpsl
outsl
arpl
lods
cmp
lods
pop
outsb
cmp
mov
ss
aaa
push
dec
sub
push
aas
aas
xor
adc
insb
jmp
jae
push
cli
cmp
int3
inc
cmp
xor
add
xchg
ss
push
jo
add
imul
enter
sar
sub
gs
cmp
adc
inc
inc
sub
push
dec
cs
adc
add
ds
ds
in
push
fs
jae
imul
fs
dec
dec
jge
push
dec
xchg
cmp
std
dec
add
push
xchg
pop
add
pop
cli
fs
jo
std
std
in
nop
pop
gs
push
push
out
pop
gs
std
loopne
xchg
mov
insb
add
pop
addr16
sbb
or
xchg
or
xchg
stos
jbe
add
add
pop
loope
jo
lret
xlat
cld
jmp
dec
imul
xchg
mov
pop
push
xchg
add
mov
xchg
std
pop
test
arpl
pop
insb
xchg
add
pop
jbe
add
loopew
outsb
push
xlat
cld
mov
xor
out
add
sti
lret
sub
xchg
add
pop
imul
cmp
push
or
pop
cmc
inc
out
pushf
add
ja
xor
addl
add
jno
xorl
push
push
add
add
inc
push
lods
arpl
imul
ja
out
aaa
add
or
outsb
or
fs
dec
divl
outsl
or
insb
add
cmp
add
xchg
cmp
arpl
dec
push
arpl
data16
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
insl
add
add
add
jge
add
add
add
insl
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
call
cld
call
cld
call
cld
call
cld
incl
xchg
out
call
cld
call
cld
call
loop
das
cmp
mov
xchg
out
call
cld
call
cld
call
loopne
and
cld
call
add
xchg
scas
add
xchg
add
xchg
add
in
fsubr
add
movl
add
out
xchg
add
mov
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
inc
add
xchg
add
jmp
jle
inc
jmp
and
adc
lret
leave
out
mov
mov
stos
lods
sbb
inc
cltd
dec
xlat
and
dec
add
pop
inc
fadds
decb
inc
jnp,pt
inc
adc
aas
data16
mov
xchg
push
int3
aas
jle
mov
inc
inc
sub
fs
jo
lock
xor
popf
pop
mov
rclb
aam
dec
add
add
outsb
jecxz
shlb
das
jns
push
inc
xchg
hlt
push
stos
xor
shl
push
mov
mov
inc
cwtl
cwtl
mov
mov
sarb
or
jge
jne
xchg
inc
dec
in
in
ds
xor
xor
fwait
push
cmp
xchg
lock
push
fcomps
popa
jl
sbbl
sbb
xlat
mov
repz
js
xchg
and
std
lds
and
movsb
mov
sarb
lret
enter
mov
and
ret
inc
insl
cmp
sbb
jno
cmp
shrl
add
add
push
mov
out
imul
sbb
mov
mov
mov
ret
xchg
add
jle
mov
popf
add
iret
loopne
and
js
lret
sub
xor
add
sbb
fcoms
mov
dec
je
inc
aas
cli
ja
daa
sbb
and
frstor
add
sbb
push
dec
mov
aad
insb
sbb
movsl
adc
or
mul
pop
mov
jns
int3
xchg
cli
jecxz
pusha
adc
pop
leave
out
push
les
xchg
repnz
mov
inc
fadd
das
adc
gs
and
mov
or
jmp
or
xor
out
outsb
jb
fisubrs
ss
xor
or
and
aaa
dec
jb
mov
dec
xor
cmpsb
push
dec
gs
and
pop
sub
sbb
mov
dec
dec
xchg
jmp
cld
mov
push
mov
jg
xchg
and
mov
lahf
mov
mov
or
pop
inc
mov
rorb
cmp
pop
inc
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
xchg
add
inc
add
jno
inc
add
cmp
aad
cmp
mov
outsl
cmp
popf
outsl
cmp
aad
cmp
xchg
pop
aas
xchg
pop
aas
xchg
cmp
aas
xchg
aas
aas
xchg
inc
aas
xchg
push
nop
aas
xchg
dec
nop
aas
xchg
addr16
aas
xchg
sub
aas
xchg
inc
aas
xchg
repz
xchg
repz
xchg
and
aas
xchg
ret
aas
xchg
orl
aas
xchg
imul
xchg
inc
aas
xchg
dec
aas
xchg
mov
mov
xchg
sti
lea
xchg
fisttps
aas
xchg
inc
mov
xchg
arpl
xchg
stos
add
mov
add
xchg
xchg
add
xchg
mov
or
jnp
daa
xchg
jae
xchg
je
add
arpl
push
je
add
je
add
je
lret
add
je
add
jae
add
jae
add
jae
add
jae
add
xchg
xchg
add
xchg
addl
xchg
jnp
addr16
jae
xlat
xchg
imul
xchg
arpl
adc
roll
jmp
lret
add
xchg
ret
add
sub
adc
push
push
adc
imul
adc
movsl
add
adc
loope
adc
add
and
adc
adc
adc
cltd
add
add
xchg
add
jmp
xchg
add
jmp
xchg
add
push
sti
adc
jmp
xchg
add
jmp
xchg
adc
jmp
xchg
add
jmp
jno
add
xchg
add
jmp
xchg
add
dec
rcll
add
jge
ljmp
incl
insl
lcall
adc
add
ljmp
ljmp
cli
adc
add
ljmp
adc
add
ljmp
inc
cmp
std
in
in
inc
adc
add
in
in
pushl
cmp
mov
ljmp
pusha
adc
add
call
cmp
xchg
out
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
out
call
cld
call
cld
call
cld
call
out
xchg
add
add
hlt
ror
add
add
out
xchg
add
shrb
add
add
nop
rorb
add
add
sub
push
out
add
out
xchg
add
ror
add
add
out
xchg
add
shrb
add
add
jae
mov
out
xchg
add
add
add
add
jmp
xchg
add
or
add
xchg
add
jmp
xchg
add
rolb
jmp
add
add
pop
addr16
xchg
add
jmp
xchg
add
mov
verw
xchg
add
jmp
xchg
add
gs
add
xchg
add
jmp
xchg
add
cwtl
ret
push
add
xchg
add
jmp
xchg
add
lret
add
lods
add
add
add
add
cmp
lods
add
add
jge
add
nop
sbb
add
insl
add
add
add
push
sbb
add
add
insl
add
add
sbb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
frndint
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
xlat
cld
call
cld
call
out
xchg
add
add
movsb
int3
addl
out
xchg
add
add
out
xchg
add
add
out
mov
add
add
out
xchg
add
mov
add
add
mov
add
out
xchg
add
bound
out
xchg
add
add
xchg
xchg
ret
add
add
xchg
add
mov
push
add
xchg
add
jmp
xchg
add
and
push
add
xchg
add
jmp
xchg
add
faddl
push
add
xchg
add
jmp
xchg
add
pop
and
add
xchg
add
jmp
cmp
or
sub
inc
add
xchg
add
out
add
out
add
movb
movb
movl
sub
addr16
add
xchg
das
inc
add
call
jo
cltd
in
mov
ljmp
mov
mov
ljmp
jge
ljmp
ljmp
jge
jge
ljmp
ljmp
cmp
ljmp
cmp
ljmp
std
call
cld
call
cld
call
frndint
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
incl
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
xchg
add
add
movb
add
cld
push
fistps
orl
dec
scas
pop
ss
scas
test
add
push
cmp
dec
cmp
test
popa
jge
cmp
je
andl
add
jmp
xchg
add
pop
xchg
insb
xor
cwtl
xor
add
lods
xor
mov
cld
xor
xchg
in
xor
mov
aad
or
fstpl
sub
lods
mov
or
jae
test
notl
aaa
sub
mov
sub
ret
aaa
cmp
shll
sub
jecxz
leave
div
aaa
sub
add
stc
jmp
cmp
jmp
cmp
jmp
cmp
jmp
cmp
jns
push
cmp
arpl
mov
jae
test
jmp
cmp
mov
cmp
jmp
cmp
jmp
cmp
jmp
cmp
in
cmp
and
imul
inc
cmp
sbb
sbb
sbb
pop
pop
sbb
pop
xor
adc
int
adc
mov
mov
lods
adc
lods
test
sahf
fstl
adc
mov
and
lods
push
xor
movsl
push
inc
jle
push
push
jle
push
outsb
in
adc
test
push
xchg
pop
xor
adc
les
adc
in
sub
hlt
scas
add
add
fistl
adc
mov
and
add
sbb
or
sbb
mov
or
sbb
arpl
add
dec
sbb
or
sbb
or
sbb
or
sbb
or
pop
addb
js
rcll
addb
pop
add
sbb
sub
cmp
sbb
add
pop
sbb
dec
pop
cmp
pop
inc
add
pop
push
add
pop
jo
push
pop
jo
adc
add
add
movsl
subb
stos
pop
cmp
stos
jl
mov
pushf
cmp
mov
cmp
subb
add
and
and
add
lea
xor
jl
xor
jl
xor
lods
mov
inc
sahf
cwtl
xor
nop
xor
mov
aaa
addl
pop
xchg
add
push
cltd
shlb
push
xchg
enter
add
in
clc
xor
cmp
repnz
repnz
sti
cmp
repz
adc
bnd
adc
repz
repz
repnz
cmp
repz
cmp
repz
cmp
in
lock
int
adc
int
and
cmp
jg
sub
xchg
jmp
xor
jmp
xor
jmp
sbb
test
dec
pop
stc
stos
call
rorl
mov
sbb
andb
pop
jno
rdpmc
push
push
bound
xchg
pop
adc
int3
add
ljmp
ret
ret
mov
adc
pop
stos
inc
vmwrite
fstps
xchg
std
adc
push
adc
test
or
pop
gs
gs
or
mov
cmp
pop
adc
push
jno
fstl
or
mov
adc
add
or
xchg
push
sbb
sbb
or
sbb
popa
sbb
or
sub
mov
das
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
sbb
or
stos
lods
mov
xor
add
sub
les
xchg
aaa
orb
aaa
inc
lahf
stc
fistps
sbb
into
mov
aaa
pop
sahf
shlb
mov
ss
mov
xor
mov
jnp
xchg
mov
xor
mov
mov
xor
sahf
loop
cmc
sahf
or
add
insl
xor
lahf
xchg
xor
cmc
int
div
fistpll
mov
insl
cmp
adc
add
ret
cmp
adc
cmp
xchg
adc
cmp
in
adc
cmp
mov
or
arpl
sub
loope
arpl
rorb
aas
jno
ret
aas
lods
bswap
aas
clc
push
add
in
xchg
clc
ljmp
pop
adc
xor
adc
test
push
adc
xor
adc
xor
adc
sbb
cmp
push
test
movzwl
push
fadd
aam
pop
cmc
or
inc
shrb
lahf
adc
mov
fistl
mov
push
sbb
adcl
adc
rclb
push
adc
jecxz
adc
adc
adc
dec
adc
mov
and
out
lods
adc
add
fmull
sub
lds
push
cld
adc
xor
cmp
cld
pop
adc
sti
jg
movsb
sti
mov
pop
cld
push
push
cmp
out
jnp
mov
xchg
add
adc
icebp
pop
adc
out
out
jne
into
repnz
adc
repz
jns
mov
insl
hlt
sbb
outsb
pop
sub
rcll
sbb
pop
or
negl
or
cld
scas
push
cmp
sbb
outsb
rorb
cmp
test
xchg
add
mov
mov
add
cmpsl
data16
les
ret
test
xor
test
sub
jge
in
and
jnp
mov
mov
xor
orb
std
sahf
dec
aaa
mov
xchg
outsl
mov
ss
mov
sbbb
xor
adc
cmp
idivl
push
mov
mov
mov
xor
adc
ss
adc
cmp
or
cmp
or
xor
inc
cmp
in
mov
aas
cmp
push
aas
pop
pop
add
insl
sar
stc
stc
xor
push
mov
popf
adc
xor
fidivs
test
add
ss
xor
jl
scas
ss
push
aaa
xor
js
jo
dec
cmp
jp
xchg
xchg
cld
lahf
mov
inc
cwtl
xor
pop
icebp
mov
push
push
andl
add
add
xchg
fimull
fs
adc
ljmpw
adc
test
or
ret
dec
push
pop
lods
js
je
and
xchg
pushf
sub
add
mov
add
movb
push
add
out
or
and
or
pop
mov
or
pushf
or
test
imul
mov
mov
adc
inc
imulb
or
xchg
add
repz
add
add
sti
test
pusha
std
cld
push
adc
inc
or
stc
stos
or
cli
out
cmpl
pushf
adc
out
sahf
adc
mov
adc
rep
adc
mov
or
stc
jl
ljmp
or
testl
or
clc
call
xchg
ss
pop
ss
sahf
imul
test
mov
ss
sahf
shll
lahf
sahf
rorl
movsl
add
add
stc
xchg
or
ss
loope
iret
cltd
jmp
mov
cmc
xor
mov
dec
ss
push
ss
xchg
sbb
ss
cltd
cmp
popa
xchg
test
test
arpl
push
mov
add
or
cmp
or
cmp
add
add
std
cmp
add
adc
jmp
sbb
xchg
add
das
cmp
add
dec
cmp
push
cmp
or
test
jne
out
or
jmp
or
cmp
or
cmp
lret
or
cmp
or
cmp
add
cmp
xchg
mov
and
add
jnp
xchg
enter
ret
movsl
mov
repz
das
add
fwait
popl
mov
xchg
test
cld
call
adc
pop
adc
in
or
test
and
lcall
or
movl
mov
fwait
or
enter
loopne
cmp
or
andl
push
shr
push
mov
out
push
push
int3
clc
xchg
or
jb
and
dec
or
stc
pop
or
stc
orb
clc
icebp
or
cli
stos
or
stc
rorl
stc
cmp
lock
mov
xchg
hlt
testl
push
hlt
adc
orl
repz
push
hlt
inc
pop
dec
hlt
fadds
inc
testl
pop
div
add
cmc
fldl
cmc
testl
xor
push
jge
adcl
cmp
sarb
adc
mov
gs
add
mov
jnp
cmp
int3
das
ret
xchg
iret
cmpsl
adc
jecxz
sbb
cmpsb
and
sub
adc
sub
xor
xchg
and
xor
xor
xchg
xor
mov
xor
mov
add
aaa
mov
sub
cmp
add
aaa
push
or
cmp
or
cmp
std
push
clc
call
add
cmp
insl
xor
lods
out
xor
stos
push
xor
stos
xorl
or
cmp
je
dec
xor
jp
dec
scas
int
add
call
xor
cmp
mov
out
xor
mov
fnsave
mov
testl
mov
mulb
andb
push
idiv
cmc
imul
shlb
cmc
cmp
xchg
sti
jl
inc
sti
mov
in
fidivrl
dec
cli
stos
scas
xchg
cli
into
sahf
leave
cli
push
lahf
push
stc
stos
ja
or
pushl
jns
pushl
dec
dec
imul
call
repz
sbb
adc
je
cwtl
pop
lock
test
add
sti
sub
out
pop
mov
add
add
hlt
cltd
icebp
icebp
cmc
movsl
out
scas
test
inc
clc
xor
xchg
sti
clc
jb
cwtl
hlt
inc
add
mov
repz
daa
repz
out
mov
insl
icebp
and
xchg
out
xor
adc
hlt
sub
jmp
clc
jp
xor
testl
fs
cld
pop
mull
std
fdiv
xor
std
fdiv
add
add
xor
loop
cmp
bound
xor
dec
xchg
xor
inc
cltd
xor
cmp
xorb
xor
sub
bound
jns
sub
shll
leave
xor
or
xor
add
xor
stc
mov
xor
call
loopne
xor
fildl
cmp
rorl
cmp
lret
adc
ret
sbb
xchg
fistpll
add
cmp
mov
aas
cmp
xchg
inc
cmp
mov
cmp
push
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
ss
cmp
xchg
mov
cmp
add
mov
cmp
ss
cmp
ss
cmp
push
mov
cmp
jbe
jbe
ds
jle
leave
mov
aas
lods
mov
jge
ljmp
sti
xor
mov
xor
xchg
shl
fcmovnb
fwait
hlt
sbb
xlat
hlt
dec
mov
inc
sti
add
hlt
ss
shl
lods
add
js
hlt
cmp
cli
outsb
jb
cli
lea
cli
mov
lock
ljmp
stc
aaa
lret
data16
pop
ret
dec
stc
cmpsl
mov
add
stc
jmp
cltd
pop
fisttpl
hlt
test
mov
jb
pop
test
repz
repz
repnz
add
mov
repnz
add
repnz
sub
xchg
icebp
pop
repnz
repnz
push
repz
repz
bnd
in
mov
cmc
leave
clc
jae
adc
into
test
or
pop
cmc
div
je
pop
not
sti
sub
mov
std
out
cld
mov
lcall
jmp
ljmp
jmp
stc
sbb
ljmp
add
in
call
jmp
daa
xchg
dec
cmp
xchg
and
xchg
xor
xchg
js
xchg
subl
push
cwtl
add
jecxz
adc
dec
push
lret
das
inc
dec
lahf
das
ljmp
cs
inc
das
das
data16
je
sub
add
sub
push
or
xor
add
xor
add
dec
xor
out
aaa
mov
loopne
aaa
add
sbb
popa
into
cs
int
xor
add
test
cmp
cmpsl
in
cmp
cmpsl
outsb
cmp
jl
push
test
lds
xor
cmp
lods
lds
scas
mov
aas
push
xchg
aas
outsb
lods
sarl
lods
fstpt
add
lods
clc
cmp
add
add
repnz
mov
xor
cmpsl
xor
mov
xor
mov
xor
dec
mov
xor
add
in
xor
cmpl
arpl
hlt
sbb
sti
mov
cmp
loopne
cmp
cmpsb
enter
rclb
lds
stos
daa
testb
mov
cmc
inc
xchg
shl
mov
cmc
flds
ret
xchg
in
and
xor
fs
lahf
les
hlt
dec
lds
repnz
rcrb
int3
test
out
andl
out
scas
mov
repz
inc
repz
xchg
call
loopne
jo
inc
std
sub
jae
add
jmp
cmp
sub
out
out
mov
jne
inc
in
icebp
stc
ret
ljmp
movsb
jmp
cli
sbb
aaa
cli
push
stos
out
dec
stos
add
inc
repz
popf
cmc
mov
or
divl
movsb
imulb
jle
out
fsubrp
test
hlt
movsb
out
jns
out
adc
decl
jae
sbb
jmp
xor
les
xor
mov
xor
stos
jmp
xor
cmpsb
mov
xor
mov
les
jbe
jge
mov
mov
jns
xor
pop
push
xor
jb
or
xor
dec
pushf
xor
inc
push
cmp
cmp
cmp
and
cmp
sbb
cmp
in
repz
insl
cmp
ds
jns
cmp
lahf
aas
cmpsb
cmpsl
ret
aas
test
aas
mov
std
inc
lods
xor
mov
xor
lods
pushf
xor
scas
test
and
add
xor
inc
xor
scas
scas
xor
scas
shlb
jmp
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
jl
adc
scas
xor
mov
xor
sahf
call
pop
test
call
je
and
mov
push
out
imul
jmp
xchg
outsb
push
hlt
out
idiv
mov
lcall
imul
jnp
enter
or
lock
stos
inc
ljmp
aas
cld
fmull
lock
jns
testl
and
call
jae
and
repnz
hlt
ljmp
out
outsb
in
ds
out
pop
out
sbb
out
test
out
add
out
stc
cld
sbb
ljmp
or
inc
cli
xchg
in
stc
add
dec
clc
cmp
mov
dec
in
clc
jg
out
xchg
out
cmc
mov
daa
neg
out
test
xchg
out
idivb
cmpsl
out
xor
push
hlt
push
ljmp
pop
in
lea
sbb
dec
or
xor
in
xor
icebp
and
xor
shll
add
xorl
pushf
mov
cmc
aaa
clc
lahf
cmp
dec
nop
sbb
jnp
pop
aaa
push
or
mov
or
ss
pop
daa
aaa
outsb
pop
xchg
aaa
dec
fs
dec
leave
ss
aas
cmpsl
ss
cmp
out
add
or
jnp
stos
cwtl
cmp
stos
cmp
test
dec
cmp
test
xchg
cmp
lods
gs
lods
mov
cmp
lods
fistpll
lods
in
cmp
scas
or
xchg
lods
cmpl
stos
aas
ds
jbe
add
subb
add
cli
jmp
mov
xor
scas
xor
out
jb
inc
out
or
out
inc
addr16
mov
xor
lock
call
cmp
bnd
mov
mov
in
jl
jmp
jge
ljmp
xor
pop
mov
insl
ljmp
mov
sub
mov
enter
shr
push
lahf
add
call
jb
add
out
mov
call
mov
ret
in
lock
cli
lock
mov
cmp
adc
pop
loop
icebp
loope
jmp
and
dec
repz
add
lock
inc
loop
cli
add
icebp
add
adc
mov
cmc
es
mov
dec
in
mov
sub
clc
pusha
in
jo
hlt
stc
lret
cli
aam
xor
out
add
pop
ljmp
and
lcall
ljmp
dec
xor
ds
xor
adc
shrb
sub
jns
jno
sub
mov
xor
push
xchg
xor
mov
cmp
jmp
aaa
mov
out
mov
adc
rorb
into
mov
inc
ss
mov
mov
mov
xor
dec
cmpl
push
jno
cmp
imul
sub
pop
fs
repnz
cmp
mov
cmp
mov
cmp
mov
cmp
jmp
repnz
xchg
or
in
pop
cmp
push
xchg
xchg
repz
add
add
dec
ds
mov
std
dec
cli
incl
pushl
mov
repnz
and
add
stos
arpl
cmp
lods
or
cmpsb
test
xorb
xorb
cmpsb
jno
fwait
cmpsl
cmp
push
xchg
lds
xchg
mov
in
popf
pmulhw
mov
out
lea
out
jle
ljmp
add
repnz
clc
ljmp
jmp
call
jns
aad
or
push
jmp
xchg
cltd
call
ljmp
xchg
sbb
mov
xchg
inc
hlt
in
lret
gs
lret
out
xor
adc
fld
pop
in
or
sarl
repz
aam
clc
icebp
aam
clc
push
aad
clc
jle
scas
clc
and
cmpsl
stc
cmp
sbb
push
xlat
sub
mov
or
testb
sbb
das
fsubr
jmp
fmuls
in
int
mov
or
in
add
sti
in
ret
in
add
add
ljmp
fucomi
mov
fsubrl
faddl
jns
sbb
push
fstpl
lock
mov
mov
jmp
add
int3
jno
cmp
imul
cmp
jp
cmp
cmp
cmp
cmp
xchg
xor
clc
inc
xchg
add
leave
daa
dec
das
mov
sub
rorl
push
xor
add
sahf
cld
jb
xor
or
gs
pop
xor
loop
xor
push
xor
ret
adc
cmpsb
xor
rcll
or
inc
cmp
bound
cmp
lods
outsl
cmp
lods
cmp
lods
fwait
cmp
lods
scas
cmp
lods
xlat
cmp
or
repz
stos
add
pop
stos
sbb
cmpsl
test
ds
stos
dec
cmp
stos
fs
stos
jb
jge
cmpl
adc
test
push
cmp
cmpsl
cltd
cmp
mov
jmp
mov
cmp
lods
xor
dec
lods
jle
repnz
jo
es
out
xchg
lahf
ljmp
jae
add
roll
sub
ret
sti
ljmp
cmpsl
jl
imul
fwait
movsb
push
in
push
test
in
inc
test
in
arpl
jecxz
shll
in
pop
data16
mov
movl
cmpsl
enter
shrb
cld
mov
mov
repnz
mov
jge
xorb
mov
addl
repz
aad
repz
aad
repz
fcomps
fcom
fsubr
mov
sub
repnz
in
adc
stos
in
mov
cs
ret
xor
adc
outsb
out
das
xlat
mov
insl
xlat
mov
inc
xlat
mov
xlat
jnp
or
xlat
mov
pop
fadds
sub
ds
or
fmul
out
mov
cld
out
out
fdivrl
call
and
inc
call
in
decl
lods
mov
cmp
mov
and
cmp
jl
cmp
jle
cmp
outsb
cmpl
insl
mov
movsl
jge
cmp
jle
cmp
outsb
dec
cmp
adc
push
jp
aaa
ds
cmp
daa
popf
clc
jge
xchg
add
mov
xor
daa
das
dec
daa
mov
das
add
adc
outsb
add
cs
sub
loop
sub
jne
push
sub
jle
ret
stos
inc
xor
stos
shll
nop
cwtl
xor
in
enter
rorl
pop
aaa
jne
sbb
xchg
sub
xchg
dec
aaa
xlat
push
aaa
xchg
lods
aaa
push
nop
push
cmp
lods
fdivrs
ret
cmp
je
sbb
sbb
cmpsl
stos
sub
xchg
stos
push
cmp
stos
outsb
cmp
test
cmp
lods
sbb
mov
dec
cwtl
dec
loopne
nop
fsub
out
stos
loope
sbbl
fwait
jno
loope
add
loope
popa
mov
out
shlb
out
lret
enter
push
mov
and
fsubrl
iret
add
xchg
lret
test
repz
test
in
lea
in
and
repz
insb
repz
popa
out
xlat
lret
add
mov
out
inc
ret
jl
dec
stos
add
add
mov
jb
jnp
inc
sarl
inc
sarl
inc
sarl
inc
jae
cwtl
movb
aaa
hlt
out
mov
jno
sub
or
xchg
push
rcr
out
cli
int3
dec
lock
add
in
mov
in
mov
mov
in
xchg
mov
in
fstps
in
into
fsts
in
fnstcw
in
mov
mov
xlat
in
xchg
mov
in
push
pop
jmp
jae
cmp
ss
icebp
bound
inc
jmp
push
ss
mov
ret
test
mov
sarb
shrb
sarb
call
insl
or
fdivrs
xor
enter
shrb
fadds
cmp
push
xor
std
sbb
push
ds
xor
cmp
cmp
cld
sarb
pop
test
mov
sahf
clc
std
ret
dec
add
add
mov
xor
mov
xchg
mov
xor
nop
dec
xor
test
xor
jp
add
jmp
outsl
cmpsb
adc
movsl
lds
or
cmp
sub
in
ss
mov
jns
rep
mov
cmp
cmpsl
cmp
loopne
leave
lret
loopne
roll
mov
add
cmp
pusha
loop
lcall
mov
add
cmpsl
jecxz
jae
jecxz
imul
push
arpl
js
sbb
lods
rcll
decl
xor
call
repz
movsb
sub
mov
in
lds
in
xchg
shr
jmp
data16
icebp
je
push
lock
lods
out
mov
out
pop
lret
fucomi
add
int
in
cmp
jo
aad
out
cltd
fcoms
call
sar
out
rol
in
mov
fs
test
loop
xor
cmp
rcll
loop
rcll
loop
sarl
loop
shll
aam
jecxz
aam
mov
xchg
add
ror
sar
add
dec
dec
das
movsl
inc
in
out
push
cs
inc
inc
cs
xchg
dec
ljmp
insl
lret
dec
sub
ret
mov
xor
ret
adc
in
mov
xor
int
xor
mov
enter
sub
scas
push
xor
bound
cmp
je
cmp
jbe
cmp
jmp
xchg
add
leave
or
out
sub
xor
stos
sbb
push
stos
and
in
test
xor
in
test
inc
xor
xchg
sub
and
stos
addr16
stos
adc
lock
mov
int3
mov
cmp
mov
cmp
mov
cmp
mov
cmp
ds
sahf
js
or
sahf
lcall
lahf
mov
ds
ret
lahf
sarb
pop
lahf
fistpll
or
fisttps
mov
fbld
jae
fimuls
lock
cmpsl
cld
cld
sbb
add
xchg
sahf
int3
adc
fcmovbe
rol
xchg
int
lds
int
movsl
add
xlat
pop
add
fisubrs
mov
scas
andb
call
into
mov
arpl
add
icebp
fucom
lret
cmpsl
fdivr
addl
cmp
jae
xlat
cmpsl
adc
cmpsl
add
aam
int
aam
int
aam
int
xlat
xchg
int3
ljmp
int3
lret
int3
or
jae
or
add
int3
sbb
ret
int3
or
ret
int3
stos
xlat
push
int3
stos
xlat
arpl
lcall
leave
insl
fmuls
leave
js
stc
enter
enter
enter
fcomp
fstpt
mov
pop
fmuls
or
leave
mov
pop
leave
scas
fdivl
jmp
mov
fcomp
mov
inc
aaa
or
cmp
pop
jno
mov
imul
add
dec
pop
xor
inc
cmc
xor
ss
clc
jmp
xchg
add
stos
out
xor
push
xor
mov
cmp
push
lock
mov
xchg
ss
loopne
scas
fnsave
lahf
shll
cmp
lret
or
ret
push
mov
mov
jmp
add
mov
xor
adc
popf
mov
xor
xor
lods
mov
xor
mov
xor
mov
xor
mov
xor
mov
ljmp
add
add
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
nop
xor
xor
mov
xor
mov
icebp
mov
xor
mov
xor
into
xlat
arpl
fbld
ret
into
out
cmpsl
push
into
mull
mov
rorb
mov
rcrb
push
ret
shrb
push
jecxz
aas
enter
shlb
enter
shlb
add
ret
shrb
push
shlb
arpl
jg
and
xchg
adc
xchg
andb
mov
jecxz
shll
xlat
repz
add
xlat
shll
xlat
out
dec
xlat
pop
aam
daa
rorl
inc
ror
addr16
aad
lret
and
out
or
aad
dec
aad
aad
aad
inc
mov
daa
loop
xchg
or
aad
aam
aad
aam
aad
aam
aad
aam
aad
aam
aam
aam
aam
fildl
enter
enter
enter
enter
enter
enter
jo
push
mov
pusha
aaa
xchg
push
add
jmp
xchg
add
jmp
add
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
add
ljmp
lods
jge
jge
ljmp
ljmp
jge
jge
ljmp
ljmp
cmp
ljmp
cmp
ljmp
std
std
in
in
std
std
in
in
incl
mov
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
xchg
cld
call
cld
call
cld
call
cld
call
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
std
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
jge
add
insl
add
add
add
jge
add
jge
add
insl
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
incl
xchg
cltd
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
incl
xchg
xchg
cld
call
cld
call
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
add
add
out
xchg
add
add
out
xchg
add
add
add
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
add
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
add
add
add
std
in
in
std
std
in
in
mov
mov
ljmp
mov
ljmp
jge
ljmp
ljmp
jge
jge
ljmp
ljmp
cmp
ljmp
call
cld
call
cld
call
cld
incl
xchg
cltd
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
out
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
add
add
out
xchg
add
add
add
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
insl
add
add
add
jge
add
xchg
imul
call
cld
call
cld
call
cld
call
cld
incl
xchg
imul
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
out
xchg
add
add
out
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
jmp
xchg
add
jmp
xchg
add
jmp
jge
add
jge
add
insl
add
add
add
jge
add
jge
add
insl
add
add
add
cmp
add
add
add
add
add
add
add
add
std
in
incl
in
std
std
in
in
mov
ljmp
mov
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
incl
xchg
imul
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
cld
call
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
add
out
xchg
add
jmp
xchg
add
jmp
add
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
xchg
add
jmp
add
add
add
cld
ljmp
cld
mov
cld
call
aaa
daa
fucomi
into
add
insl
rcr
loop
call
cmpsb
adc
out
mov
adc
dec
mov
push
pop
jo
mov
sub
push
es
mov
mov
pop
and
ljmp
xor
xchg
movsl
stc
scas
adc
xchg
mov
sub
imul
jnp
arpl
popf
cmp
pop
in
jns
sarl
imul
ret
cmp
jb
inc
xor
cmpsl
cltd
mov
pop
mov
iret
cmp
out
mov
mov
pop
dec
dec
add
mov
xor
pusha
or
mov
loope
sti
pop
pop
jbe
jb
in
movsb
ret
pop
inc
pusha
push
jno
lret
jo
add
jecxz
aam
lret
mov
mov
mov
iret
sbbb
add
aaa
ret
xchg
xlat
adc
mov
sbb
mov
in
in
ds
xchg
scas
adc
arpl
or
mov
shrb
in
xor
nop
jecxz
mov
lcall
mov
cmp
testb
das
mov
sarb
jnp
mov
cmp
inc
scas
ljmp
rcll
popa
mov
xlat
scas
lods
add
mov
lret
mov
add
out
jae
fdivs
cmpsl
scas
nop
xchg
dec
les
dec
imul
xchg
or
ffree
cmp
ss
out
in
rclb
sub
test
cmpsb
inc
fs
inc
xlat
add
jmp
rorb
sbb
push
mov
sub
jle
stos
add
rorb
shrb
mov
xor
imul
dec
outsl
mov
in
add
push
cmp
ljmp
jle
pusha
inc
lret
int3
loope
jmp
movsbl
mov
pop
ret
roll
leave
lock
pop
jmp
mov
adc
inc
mov
pop
mov
cmp
mov
in
std
ljmp
mov
xor
test
mov
pop
fisttps
mov
mov
cld
dec
pushf
mov
bswap
testl
pop
testl
pop
mov
std
dec
mov
repz
push
hlt
add
decb
dec
xchg
int3
xchg
paddd
inc
pushf
mov
mov
sar
leave
push
dec
call
pop
cmp
test
in
adc
popa
insb
test
add
in
bswap
jmp
push
je
add
incl
mov
jle
add
clc
rorb
inc
lret
int3
add
inc
lret
int3
pusha
inc
lret
int3
loope
jmp
jo
call
mov
push
out
arpl
adcl
hlt
addr16
aas
add
out
cmp
rcl
add
imul
clc
rcll
xchg
cmp
xchg
add
add
pop
test
jge
add
je
jae
jne
inc
cld
pop
add
call
int3
out
mov
hlt
rcll
test
xchg
lea
push
test
jmp
inc
lret
int3
dec
inc
lret
int3
pusha
inc
lret
int3
roll
add
ret
pop
ds
inc
lret
int3
dec
inc
lret
int3
pusha
inc
lret
int3
roll
mov
or
test
xchg
sarl
enter
loopne
lret
int3
inc
test
xor
data16
push
mov
xchg
sub
cld
aas
xchg
test
inc
push
jl
mov
sqrtps
or
movb
jnp
sti
mov
mov
push
pop
sti
add
inc
cld
pop
inc
decb
dec
cmp
adc
add
xchg
mov
mov
cld
cld
dec
adc
mov
iret
inc
jae
cmp
add
xchg
pop
add
les
rorb
cmp
int3
enter
loopne
lret
int3
popa
jnp
mov
xor
mov
int
int3
sarb
int3
enter
pusha
cmp
int3
loope
jmp
jo
test
mov
orl
clc
test
and
gs
xchg
jnp
or
inc
pop
mov
jo
inc
xor
add
xchg
pop
push
mov
insb
jl
xchg
jns
cld
pop
aad
cmp
insb
inc
pextrw
dec
jo
mov
sarl
imul
dec
lock
clc
sete
xchg
jp
or
pop
mov
push
clc
lsl
test
jns
or
jne
or
test
jns
or
clc
out
pop
outsb
clc
mov
int3
mov
xorl
test
ja
in
mov
cld
push
pusha
ja
call
sbb
call
out
add
add
push
lock
pusha
jl
movsb
add
test
add
bsf
mov
cld
push
cwtl
sar
adc
or
pusha
jl
xchg
hlt
push
mov
pusha
test
add
mov
je
inc
je
dec
or
pop
in
pop
rcr
mov
clc
cld
inc
movsb
ja
hlt
btc
mov
clc
cld
adc
fldcw
call
ja
xchg
hlt
or
xchg
hlt
add
pop
push
test
xorb
enter
mov
call
sbb
jns
clc
ljmp
rolb
cltd
insb
clc
sbbl
inc
push
je
add
mov
std
push
pop
sti
push
insb
xchg
cli
incl
pop
add
sbb
pop
test
jp
mov
je
rcrb
jmp
push
add
nop
mov
jl
mov
cli
clc
sti
ja
pop
xlat
cmp
int3
inc
ja
xor
addr16
sar
test
jns
clc
sub
cld
aas
xchg
ja
clc
inc
pop
cmp
stos
imul
inc
cld
movsbl
push
add
aad
push
pop
lds
push
adc
mov
mov
int3
shll
rclb
add
test
jns
add
aas
xchg
int
int3
pusha
cmp
int3
shll
xor
sahf
push
inc
mov
ds
shrb
out
int
or
pop
dec
cld
xchg
jbe
clc
sbb
xchg
add
add
inc
jae
pop
in
testl
mov
jbe
sbb
pop
jne
jne
clc
pop
mov
test
jbe
adc
add
add
test
jbe
mov
push
inc
cld
leave
add
shrb
in
addr16
test
leave
cmp
lret
int3
dec
cmp
lret
int3
popa
jne
addl
or
inc
cld
add
add
lahf
cmp
mov
sti
call
jge
or
jne
clc
gs
sbb
mov
dec
push
imul
xchg
jge
adc
mov
mov
jmp
jne
add
jo
add
jmp
std
aas
add
adc
xlat
add
add
cltd
sub
les
add
add
adc
inc
xchg
adc
roll
jne
inc
sarb
xchg
rolb
enter
fdivr
test
xchg
roll
mov
test
push
mov
int3
loope
jmp
fprem
xor
mov
add
add
nop
lds
pusha
xor
jmp
xor
add
jnp
or
dec
test
add
sbb
pusha
or
hlt
jne
or
add
xchg
jnp
cmp
ret
call
mov
dec
add
or
fdivr
das
xchg
add
add
push
lock
pusha
test
rolb
jo
out
jno
clc
adcl
inc
push
pop
push
mov
insb
jl
xchg
jns
hlt
fisttps
add
add
leave
insb
insb
pop
pop
mov
add
dec
call
andb
fisttps
test
dec
add
xor
mull
test
imulb
inc
lods
jp
or
int
mov
cld
inc
nop
shl
push
cltd
data16
sbbl
dec
jl
mov
jmp
jp
in
pop
or
imul
cwtl
fsubs
add
add
dec
cmp
cmc
incl
ret
or
sub
inc
xchg
add
pmuludq
aam
xlat
add
imul
xchg
jmp
push
fdivr
das
xchg
add
inc
hlt
jns
xor
gs
lock
push
fdivr
das
xchg
add
add
dec
cmp
pop
and
aam
add
jne
fidivrl
push
btc
push
incb
stc
push
mov
test
ja
fadds
pop
lret
xlat
mov
dec
cld
inc
xorb
btr
mov
rorb
rcrl
xchg
or
inc
xchg
iret
out
adc
adc
test
xorb
push
js
fcoms
add
loopne
or
inc
xchg
sbb
xor
mov
or
call
or
push
add
fsts
add
addr16
call
cmp
test
xchg
shll
mov
jg
cmp
inc
adc
adc
sar
psadbw
xlat
add
xorl
out
sbb
fdiv
sahf
adc
mov
idiv
sti
jg
add
loopne
xor
sar
xchg
and
inc
xchg
shl
push
int
clc
adc
xchg
call
mov
fisttps
xchg
incl
inc
ja
xor
call
pop
cld
incl
xor
inc
xchg
std
rcll
mov
dec
push
add
xchg
into
clc
push
pusha
pop
xor
add
mov
int3
loopne
lret
int3
popa
ja
mov
test
clc
les
inc
ja
push
dec
lret
test
pop
add
test
pop
ret
xlat
xor
int3
inc
ja
push
sub
add
mov
push
call
pop
cmp
test
iret
add
or
aam
add
shll
cmp
jmp
xor
add
add
add
pop
mov
add
pop
fs
call
add
xchg
jne
or
add
test
movsb
dec
cmp
jns
clc
add
aam
xchg
add
add
aam
xchg
call
incl
test
add
cmp
add
add
jne
incb
popf
das
aam
add
add
xor
inc
xchg
jne
call
rcrl
dec
cld
jbe
sbb
mov
aas
add
or
aam
add
cltd
mov
inc
xchg
jmp
inc
xchg
fcomps
push
add
add
mov
les
add
adc
aaa
mov
dec
aam
add
inc
pop
clc
call
inc
add
fs
aad
pusha
clc
sbbl
xor
decl
xchg
mov
push
call
pop
inc
or
hlt
mov
iret
mov
jae
mov
mov
inc
push
jl
mov
add
add
dec
aam
add
inc
mov
test
xchg
int
push
lods
aaa
idiv
fwait
add
pop
mov
add
cmp
push
js
push
in
fnstcw
inc
push
or
xchg
imul
xchg
add
or
mov
adcl
push
sub
inc
clc
pop
pop
mov
xor
call
pop
test
xchg
mov
mov
xchg
test
out
xchg
add
add
mov
std
inc
lods
mov
jmp
mov
and
ret
pop
and
inc
xchg
adc
mov
clc
roll
adc
mov
push
mov
or
add
add
add
mov
lahf
daa
aam
add
nop
pop
clc
call
inc
add
xchg
scas
out
pop
clc
test
roll
xor
imul
add
sbb
aam
add
je
lahf
adc
push
add
pop
test
mov
inc
xchg
mov
xor
pop
push
dec
lret
int3
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xor
xor
xor
xor
add
ja
mov
add
lcall
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
mov
ds
add
inc
ds
sarl
aas
xchg
pop
ds
aas
cmp
mov
dec
ds
jle
add
xchg
rolb
add
add
add
xor
jmp
data16
xor
xor
xor
xor
xlat
xor
xor
xor
das
push
xor
push
push
xor
xor
das
jmp
add
das
xor
xor
xor
aas
xor
dec
xor
push
xor
xor
sub
jb
and
lcall
xor
xor
xor
xor
in
xor
fnsave
test
and
popf
xor
xor
xor
in
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
add
xchg
add
add
xchg
add
add
add
xchg
add
add
add
fsubrs
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
sub
inc
add
cs
add
inc
add
cs
add
sub
inc
add
cs
add
inc
add
cs
add
inc
add
cs
add
inc
add
cs
add
inc
add
cs
add
inc
add
cs
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
sub
inc
add
add
inc
add
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
das
inc
add
inc
add
das
inc
add
inc
add
cs
add
das
inc
add
inc
add
das
inc
add
inc
add
sub
inc
add
inc
add
das
inc
add
inc
add
das
inc
add
inc
add
das
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
cs
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
inc
add
inc
add
das
inc
add
das
inc
add
das
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
sub
inc
add
das
inc
add
das
inc
add
xor
xor
xor
das
inc
add
inc
add
xor
xor
xor
xor
xor
xor
cs
add
inc
add
xor
xor
xor
xor
sub
inc
add
inc
add
inc
add
sub
inc
add
inc
add
inc
add
inc
add
cs
add
add
inc
add
add
cs
add
sub
inc
add
inc
add
das
inc
add
das
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
inc
add
xor
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
inc
add
xor
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
add
inc
add
inc
add
xor
xor
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
xor
xor
add
xor
add
xor
add
xor
add
inc
add
xor
add
xor
xor
xor
add
inc
add
xor
add
inc
add
inc
add
inc
add
inc
add
xor
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
add
xor
add
xor
add
inc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
add
xor
add
xor
add
xor
add
xor
xor
xor
add
xor
add
inc
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
inc
add
xor
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
xor
add
add
inc
add
xor
xor
add
inc
add
add
xor
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
xor
add
add
inc
add
xor
inc
add
inc
add
xor
xor
add
xor
xor
add
add
inc
add
inc
add
xor
inc
add
xor
add
xor
inc
add
inc
add
xor
inc
add
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
inc
add
inc
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
ss
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
inc
add
ss
add
xor
inc
add
ss
add
ss
add
aaa
inc
add
inc
add
aaa
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
aaa
inc
add
ss
add
inc
add
ss
add
inc
add
ss
add
aaa
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
add
add
ss
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
add
inc
add
ss
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
inc
add
xor
inc
add
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
ss
add
inc
add
cmp
xor
inc
add
cmp
cmp
cmp
ss
add
inc
add
add
inc
add
cmp
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
daa
cmpsb
cwtl
add
adc
xchg
mov
dec
mov
int3
adc
arpl
cmp
mov
ss
sub
push
sub
rorb
xchg
jne
pop
pop
repnz
sahf
movsl
add
sbb
dec
xor
pop
in
jae
fmuls
das
arpl
aad
inc
test
adc
fdivs
mov
ss
outsb
scas
mov
cwtl
add
xchg
imul
mov
adc
sbb
incl
movsb
mov
adc
push
mov
popa
std
scas
mov
aam
cmc
mov
arpl
aam
mov
mov
mov
inc
add
and
adc
outsb
adc
ja
sub
imul
and
outsb
idivb
shll
sbb
jle
rorl
fs
mov
jle
mov
push
pop
ss
mov
sti
clc
xchg
mov
and
mov
inc
out
push
in
or
leave
push
xchg
jecxz
into
popa
push
out
sahf
xchg
in
mov
xchg
push
jp
andb
mov
aas
pop
mov
jle
jne
das
aam
addb
fadds
add
jge
aaa
mov
mov
sbb
lahf
pop
adc
push
insb
add
xor
test
sub
into
out
mov
xchg
in
push
stos
adc
mov
inc
pusha
push
fwait
push
xchg
cmp
mov
dec
pop
loop
lods
jmp
adc
dec
push
leave
insl
or
sti
aad
pop
loopne
and
int
je
mov
or
and
add
daa
outsb
shrb
repnz
psllq
cmp
outsl
push
push
in
in
cmp
ljmp
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
