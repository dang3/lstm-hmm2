les
test
lret
mov
icebp
dec
fildll
mov
mov
lret
aaa
sub
mov
mov
or
mov
cwtl
jmp
mov
cli
hlt
cmc
lods
xor
xor
adc
sbb
add
lahf
pushf
or
xor
stos
std
mov
xchg
fwait
icebp
pop
outsl
rclb
sbb
dec
mov
inc
push
push
inc
call
inc
ja
xor
les
icebp
out
in
pop
pop
xchg
imul
jae
call
xchg
cwtl
cwtl
mov
and
sub
hlt
out
dec
mov
mov
push
std
jnp
pop
popa
mov
das
push
je
xchg
aam
sub
ret
jecxz
mov
adc
in
aaa
stos
and
ja
mov
mov
mov
xor
repz
dec
outsb
aam
xor
push
add
in
ja
cltd
fiadds
xor
rolb
xchg
or
jae
dec
rclb
jge
notb
hlt
ljmp
or
sbb
notl
sbb
imul
stc
clc
xor
fdivs
sbb
outsb
pop
imul
sbb
lods
test
mov
jno
out
push
outsb
jg
add
cwtl
dec
out
mov
mov
into
out
ret
ljmp
je
inc
jno
out
sbb
dec
mov
addb
mov
dec
pusha
cmp
mov
aam
es
and
inc
mov
call
cwtl
popa
mov
jnp
jnp
hlt
insb
pop
dec
ret
movsl
ret
jb
faddl
push
xorl
and
or
push
leave
xor
pop
in
cmp
mov
sarl
sbb
out
mov
push
sbbb
xchg
rorb
mov
rorb
aaa
jge
test
movzwl
das
push
xlat
ss
mov
adc
in
pop
insb
ja
test
int3
add
jbe
insb
pop
scas
sub
mov
testl
lcall
jo
test
add
cmpsb
and
sbb
aaa
test
outsb
aad
not
mov
fwait
lods
stc
das
mov
out
xchg
cli
adc
mov
xor
fistps
dec
scas
mov
sub
pop
or
ss
and
jg
js
out
push
iret
jg
pop
outsb
sub
jns
out
movsb
adc
rclb
sbb
xor
lea
push
adc
loopne
pop
scas
bnd
inc
and
shll
mov
mov
das
cld
call
and
popa
pop
jae
and
xor
add
push
sbb
enter
mov
or
pushf
xor
into
cmp
bound
adc
subb
sub
mov
mov
or
movsl
iret
fisttpl
jecxz
pop
addb
js
and
inc
sub
outsb
outsl
adc
cmp
out
push
adc
inc
setns
and
dec
adc
das
rorl
cmc
add
and
lahf
lds
mov
negl
inc
jecxz
rcr
or
lcall
mov
test
call
into
push
out
jmp
popa
sbb
push
addb
push
ja
into
dec
push
push
in
inc
add
es
pop
push
dec
cmpsl
hlt
dec
popa
add
icebp
sti
leave
jae
mov
mov
enter
loop
sbb
repz
cmc
mov
push
add
out
mov
jb
jbe
or
mov
mov
push
shll
lret
and
jbe
cmp
iret
push
call
inc
pop
lods
mov
movsb
test
fs
pop
es
jmp
inc
mov
pop
mov
incb
sub
mov
sbb
and
aad
lock
insl
add
pop
xor
mov
jp
idivl
in
lds
aad
pop
jo
cmc
jl
inc
scas
xor
addb
pop
push
movsl
ficomps
sub
inc
inc
dec
or
fwait
cmpsb
sti
add
xchg
sub
push
push
mov
shlb
or
cmp
xor
repz
adc
jo
shlb
pushf
and
mov
lret
cmpsl
pop
lods
ss
std
cmp
call
jmp
pop
inc
and
sub
popa
pop
xchg
int
and
test
xor
or
mov
es
xchg
fldenv
mov
xorb
js
dec
cmc
xchg
mov
inc
or
mov
adc
pop
cltd
out
fisubrl
pusha
dec
mov
mov
push
adc
jle
sbb
xchg
dec
sbb
insb
fdivs
aam
xchg
xchg
xlat
mov
push
inc
out
test
push
add
orb
xchg
mov
sbb
fisttpl
ret
outsb
jp
add
mov
mov
jbe
xlat
xchg
stos
or
push
mov
inc
adc
jnp
sarl
inc
cmp
xchg
xchg
js
mov
mov
cs
mov
mov
test
xor
ljmp
and
dec
xchg
lcall
push
cs
jmp
fistpll
pop
inc
inc
into
ljmp
adc
inc
insb
les
and
shl
mov
aas
movsl
mov
and
cmp
jmp
rorl
inc
rorl
fwait
and
add
sbb
lock
hlt
icebp
insl
xchg
mov
sub
pop
mov
lock
outsb
mov
mov
pushf
pushf
adcl
or
adc
pop
pusha
int
mov
and
xchg
into
jno
popl
dec
sub
daa
fsqrt
iret
mov
adc
push
test
cmpsl
call
fcoms
mov
cmp
dec
jp
or
das
mov
jnp
icebp
jno
push
stos
pop
pop
jecxz
mov
sbb
mov
dec
lcall
sub
ja
fbstp
imul
sub
xor
sti
mov
mov
lahf
add
repz
pusha
fdivrs
movsl
loopne
dec
in
xor
sub
pop
cmp
inc
jmp
scas
sub
jbe
sub
mov
mov
pop
sbb
xchg
push
push
xor
push
xor
scas
mov
mov
jnp
ret
fldt
into
pop
push
shl
in
loop
mov
jns
xor
jmp
in
dec
add
fildl
push
dec
pushf
push
pop
xor
and
popf
xchg
and
fsubrl
push
fmull
sbb
adc
push
or
lds
out
pushf
loopne
dec
push
jo
and
add
arpl
scas
jl
lea
js
add
imul
fidivrl
rcrl
xchg
push
bound
mov
jecxz
rclb
insl
push
xchg
cmc
pop
jge
xorl
data16
aaa
dec
fcomp
or
leave
mov
pushl
jnp
out
push
cmc
imul
push
push
or
loope
mov
push
and
and
pop
stos
or
add
lods
cld
cli
push
jmp
adc
mov
push
outsl
xchg
ljmp
js
es
iret
jae
and
mov
divl
pop
push
mov
lret
mov
in
xor
cs
mov
cs
mov
mov
pop
ds
sbb
stos
inc
sahf
fstpt
jl
sub
fcompl
outsl
test
push
insl
pop
fstpt
push
stos
insl
mov
mov
push
outsl
nop
out
in
fcomps
std
cli
cs
sarb
xorl
inc
mov
js
inc
scas
mov
int3
lret
fsubrl
pop
dec
dec
sbb
jmp
popa
in
and
cmc
scas
out
sbbl
scas
adc
fnsave
imul
mov
test
push
xor
in
fildll
jmp
pop
pop
sti
inc
stos
mov
sbb
inc
repz
or
std
push
test
loopne
mov
add
adc
pop
and
mov
outsb
js
adc
pop
or
data16
sub
push
mov
jmp
gs
dec
gs
movsb
and
lds
xchg
dec
xchg
pushf
cs
fildll
mov
mov
add
adc
jb
loop
aam
push
jns
scas
sbb
mov
stc
and
push
push
jb
popf
icebp
ficomps
dec
jbe
ret
loop
addb
and
enter
mov
pop
addr16
aaa
sbb
call
sti
jbe
add
adc
movsl
cmp
inc
xor
fcoml
int3
out
ja
push
or
mov
jle
mov
shll
pop
mov
pushf
cmp
pop
cmp
rcrl
daa
inc
add
lcall
in
or
xor
imul
mov
movsb
mov
mov
enter
adc
cmp
sub
lock
mov
adc
mov
out
adc
xor
movl
out
in
inc
mov
jne
iret
adc
repnz
in
jl
push
mov
mov
ja
jecxz
mov
stos
test
lods
mov
or
adc
sbb
dec
push
jbe
cltd
movsb
clc
mov
gs
cmpsb
push
and
fwait
clc
mov
push
push
sti
sub
or
inc
aas
pop
movsb
sub
sbb
mov
shlb
pushf
test
cmp
imul
pushf
push
cli
sub
fs
mov
push
sbb
andl
dec
cmp
insl
and
push
inc
in
xor
sub
pop
dec
pop
inc
sbb
adc
pushf
es
out
lods
mov
seto
pop
xor
jg
sub
adc
in
or
das
rcrl
ds
push
cmp
jae
movsl
xor
cmp
aam
add
pop
or
cmp
addr16
andb
inc
mov
testb
movsl
mov
stc
in
xor
add
push
sbb
dec
cs
aaa
sbb
nop
fiadds
lea
lahf
jge
pop
pushf
pop
mov
imul
push
int3
mov
and
aad
push
sub
inc
push
or
scas
lahf
fistl
aas
repz
fldt
mov
jg
adc
push
adc
or
pop
rorl
stc
jnp
mov
nop
cld
aam
cmp
pop
daa
and
or
or
in
arpl
push
int3
mov
and
je
dec
mov
les
call
push
aad
or
lea
mov
inc
mov
cli
das
in
adc
mov
repnz
fisttpll
les
sub
arpl
mov
adc
mov
in
adcl
push
addr16
test
cltd
xor
sbb
les
push
push
inc
sbb
adc
sub
mov
cs
stos
xchg
aas
jbe
aaa
cltd
xor
in
dec
or
and
leave
out
push
cmc
mov
and
jo
inc
jae
add
jnp
mov
mov
fiaddl
sti
inc
push
mov
stos
or
sbb
outsl
pop
lahf
in
loop
jns
test
in
jle
ljmp
loop
mov
sar
pop
jno
sub
int3
imul
xchg
jg
in
out
rcll
mov
fwait
xlat
shl
cmpsl
add
lds
xchg
adc
cld
push
inc
pop
xchg
sub
mov
xor
pop
pop
jo
repnz
fldenv
push
cmp
pop
pop
pop
loopne
push
test
sbb
inc
dec
cmpsb
jge
mov
pop
in
sahf
bnd
rorb
inc
shlb
sbb
pop
orb
je
enter
fisttpl
fs
and
fldcw
scas
cmp
adc
inc
repnz
mov
rcrl
sub
mov
aas
mov
in
sub
das
adc
ljmp
je
cmp
push
or
loop
int3
fwait
movsl
mov
jle
in
orb
aam
push
imul
inc
add
and
or
fimuls
dec
cmp
inc
std
add
in
dec
insl
into
and
jmp
xchg
or
mov
xor
mov
iret
sub
leave
cmpsb
push
inc
stos
lcall
ret
cmp
shl
fdivrp
out
mov
dec
mov
mul
cli
push
dec
pop
adc
lods
gs
outsl
mov
idiv
out
sbb
cltd
mov
cmp
xor
and
adc
roll
sbb
push
and
ds
movsb
and
clc
xchg
ss
pop
cmp
aas
test
dec
dec
jne
bound
in
xor
cli
loope
dec
ss
xchg
mov
inc
dec
mov
mov
test
xchg
push
outsb
in
ds
pusha
test
adc
mov
pop
cmp
and
pop
xchg
inc
shlb
inc
out
decb
mov
dec
sub
jp
icebp
ss
jp
mov
mov
sbb
cs
pop
js
push
add
jmp
adc
pop
insb
hlt
push
call
pusha
imul
inc
or
add
je
cmp
sbb
mov
push
jo
int3
jmp
lahf
lret
lret
cld
jbe
cltd
and
cwtl
and
pop
cmp
mov
pop
mov
jle
jecxz
faddl
mov
rcll
outsb
bound
sbb
cmp
ljmp
lea
push
popf
mov
mov
pop
insl
out
or
rcll
add
push
test
fisubs
add
fistps
jecxz
ret
sbb
idivb
jbe
ds
aad
jmp
movb
xchg
push
test
mov
add
push
push
ljmp
jp
stos
jmp
imul
sub
cmc
and
push
arpl
subb
xor
jecxz
insl
fdivrs
dec
mov
pop
dec
sbb
mov
jno
les
pop
cmp
mov
popf
fiadds
insb
jmp
int
jb
inc
out
or
in
nop
insb
and
mov
outsb
jge
jg
mov
sbb
adcb
movsb
popf
cli
popf
jno
adc
nop
push
mov
scas
sub
add
jb
nop
aad
ret
aad
ja
cmp
je
lods
pop
sub
scas
mov
push
int3
stos
xchg
push
pop
out
and
push
cpuid
adc
sarb
and
mov
jge
dec
lods
fs
fistl
ret
inc
addb
fstpl
loop
stos
outsl
or
mov
out
fldcw
cmp
lcall
and
stc
shl
fincstp
cmp
lahf
pop
scas
mov
push
and
pop
in
lods
xor
das
mov
mov
mov
adc
imul
aam
sbb
adc
dec
jno
xchg
jl
add
in
mov
cmp
push
and
jmp
lcall
xor
jmp
jg
out
mov
pusha
mov
repz
mov
out
lret
inc
xchg
cmp
rorl
sbb
aas
out
fiadds
loope
mov
or
pop
mov
imul
outsl
jne
in
movsl
pushf
sar
ss
jbe
mov
leave
inc
icebp
jns
sbb
jmp
out
and
cmp
cld
jne
and
push
outsl
out
out
mov
xchg
and
pop
lret
cmpb
or
aas
popf
lods
mov
push
call
sbb
sbb
cmc
stc
push
scas
out
fildl
das
push
push
inc
add
lret
inc
lds
popa
and
les
xorl
stos
movsb
push
popf
mov
adc
cmpsl
and
mov
mov
lcall
adc
and
lods
cli
aam
push
or
test
push
std
fiadds
jbe
dec
movsl
adc
and
cmp
xchg
stc
sbb
sbb
sub
nop
fstl
test
insb
pop
icebp
add
push
ds
cmp
adc
repnz
xchg
pop
stos
xor
test
je
cwtl
pop
fs
sbb
call
sub
int3
rorl
or
jmp
fldt
adc
adc
pop
ljmp
mov
mov
pop
bound
and
out
inc
push
out
push
and
xchg
cwtl
decl
gs
fucom
jge
aad
add
jecxz
pop
popa
frstor
cmp
fstps
int
sub
stc
cld
jge
pop
mov
sub
xor
repz
fcoml
sbb
mov
scas
mov
out
mov
pop
inc
mov
sbb
xchg
mov
push
jl
jl
std
test
das
je
push
jmp
pop
into
or
add
jae
xor
xchg
mov
pop
test
adcl
mov
jp
es
inc
mov
xlat
mov
sbb
push
or
popa
sub
andl
movsb
sbb
or
outsb
pusha
cmp
or
es
inc
pop
xor
lret
xchg
adc
leave
mov
mov
xchg
sti
jbe
dec
lods
jae
sti
int
ficompl
xor
cmp
jno
jge
xorb
addr16
outsl
in
xlat
in
adc
xor
pop
int3
mov
xor
imul
push
jge
fnstenvs
mov
lret
dec
es
stos
mov
fldt
push
jp
add
xchg
aas
jne
sbbb
jnp
mov
jl
out
sub
in
push
cld
push
shll
stos
mov
inc
adc
mov
cmp
xchg
in
aas
mov
out
fcomps
cmpsb
push
mov
or
push
cmp
aas
sahf
cmc
and
xor
mov
dec
mov
test
imul
pop
inc
ljmp
push
fisttpl
mov
sub
inc
or
cwtl
pop
mov
inc
lret
popf
lock
or
mul
pop
sbb
add
and
movsb
add
sbb
push
fildll
jge
cmp
scas
jo
xchg
sbb
jg
lret
call
xchg
stc
fdiv
pop
cmp
xor
mov
and
xchg
addb
jl
sqrtps
push
cmp
pop
xchg
cmpsl
xor
idivb
mov
adc
xor
sbb
cmp
sbb
xor
inc
xorl
nop
pushf
xor
imul
mov
adc
inc
jno
inc
pop
mov
test
mov
inc
pusha
imul
insb
stos
jae
jmp
int3
rcll
or
mov
enter
sub
out
outsl
xor
mov
push
pop
dec
test
ret
mov
dec
mov
loope
pop
add
and
les
mov
mov
ljmp
mov
rcll
notl
sti
out
sub
mov
sbb
pop
out
and
scas
sbb
not
sub
je
fidivrs
lds
loopne
push
inc
int3
push
ret
jns
cld
pop
push
dec
mov
mov
mov
dec
mov
jno
or
stc
add
lds
push
mov
dec
mov
cld
and
sbb
push
lds
inc
int3
fwait
in
stos
adc
lock
add
or
mov
pop
cltd
sub
mov
scas
adc
push
bound
lods
mov
mov
dec
mov
cmp
outsl
daa
fimull
pop
enter
gs
cwtl
adc
out
jo
out
scas
mov
xchg
jnp
cltd
mov
sub
daa
fsubrl
ja
xor
sbb
push
xlat
jle
or
jnp
push
jmp
xchg
loopne
dec
pop
mov
jp
cmpb
faddl
mov
sub
inc
sub
xchg
ret
jno
int
aas
loop
loopne
and
fldenv
adcb
jo
loop
stos
in
push
cltd
add
jmp
mov
push
mov
outsl
or
insl
fisttps
mov
insl
ds
mov
xor
add
dec
dec
fwait
shll
xor
xor
sub
lret
out
lahf
jns
call
mov
shr
pop
iret
ljmp
xor
jle
push
jo
dec
loopne
xor
inc
fists
xor
adc
lods
jne
sbb
cmc
leave
sub
pop
lahf
xchg
add
jnp
mov
xchg
pop
and
subb
pop
mov
cwtl
std
pop
movsl
mov
xchg
jg
sub
out
jmp
adc
daa
sbb
into
xchg
mov
out
out
stos
int
aas
cld
xor
shlb
fucomi
sub
into
or
clc
int3
mov
jae
idivb
ljmp
in
imul
out
push
stc
adc
xchg
jmp
ficoms
inc
cwtl
test
inc
add
jo
icebp
and
pop
xchg
jnp
insl
pop
push
lahf
stc
mov
fmuls
jg
rorb
adc
xchg
sub
jnp
cmpsl
cwtd
mov
fnsave
jb
xchg
push
fisttpl
cmp
or
mov
sbb
scas
test
pop
test
loop
repz
aad
add
fcoml
mov
in
nop
xchg
inc
test
jnp
add
sbb
aam
lcall
insb
fstl
outsl
dec
jecxz
popf
enter
push
mov
mulb
popa
mov
negb
dec
cmp
add
bound
jbe
ja
sub
push
int3
adc
inc
mov
rcrb
push
xor
lods
cmp
pop
je
xchg
int
sub
jmp
xchg
add
rcrb
loop
stos
mov
jo
popf
popa
jno
imul
sbbb
inc
addr16
mov
jp
out
rcrl
gs
popa
add
outsb
push
outsb
push
sbb
sbb
bound
xor
inc
sbb
mov
pop
jl
loop
sub
add
xchg
nop
aam
fwait
cmp
xchg
inc
jge
sbb
jb
int
mov
mov
sub
lods
push
imulb
filds
rorl
mov
fs
ja
mov
push
lret
sub
mov
xor
inc
xchg
sbb
in
xor
mov
push
loopne
mov
out
sbb
addl
test
lods
outsl
loopne
shl
std
cmp
mov
or
test
xchg
mov
int
test
stos
push
dec
jge
push
imul
jb
movups
cmp
notb
gs
inc
int
lock
and
mulb
sbb
daa
js
cmp
cmp
sahf
push
aad
fidivrl
adc
popf
mov
push
inc
js
dec
mov
xchg
jg
movb
jmp
jg
repnz
movsl
add
roll
in
scas
ja
sti
aad
ja
in
jno,pn
in
pusha
mov
xor
pushf
mov
xlat
imul
xor
pop
sub
addr16
cmpb
lret
sub
add
jg
xor
inc
sti
inc
mov
sub
push
stos
pusha
dec
aam
jbe
orl
mov
xchg
lea
sarl
cmp
lahf
cmp
fldl
xchg
adc
pushw
xor
or
or
andb
stos
lret
cmc
scas
or
sub
lods
mov
or
mov
xor
sarb
push
dec
mov
pop
aaa
imul
cmp
sub
push
mov
sahf
fists
pusha
inc
mov
jnp
and
data16
cmp
mov
pop
outsb
arpl
aad
mov
jno
std
adc
loop
int
iret
cs
or
fsubs
mov
jecxz
fcompl
stc
mov
int3
lcall
xor
jo
sub
in
and
push
jo
gs
fstps
push
mov
stc
sbb
aaa
xchg
xchg
push
fisubs
popa
lret
std
stos
xchg
imul
mov
mov
jle
cmpsl
mov
ret
adc
scas
and
jns
push
xlat
incl
pop
jbe
or
sub
outsb
fnsave
xchg
icebp
adc
sbb
adc
sub
mov
inc
test
dec
mov
popf
sbb
repnz
mov
jmp
test
lds
scas
sbb
les
aad
push
icebp
jge
mov
ret
pop
and
loop
push
es
and
inc
inc
push
add
mov
push
mov
js
imul
jmp
cli
lret
movsl
push
leave
push
mov
clc
sub
fldl
mov
xchg
cmp
idiv
pop
xlat
xchg
adc
cmp
jo
cwtl
mov
imul
push
cmc
subl
push
inc
pop
jg
pop
lea
mov
pop
scas
mov
push
mov
pop
loope
xchg
sbb
fs
xchg
mov
mulb
rcll
adc
fucompp
inc
hlt
rcrb
xor
loop
out
lret
aam
imul
xchg
in
ss
add
fs
mov
jg
mov
and
jp
mov
sbb
repnz
adc
mov
xchg
scas
shlb
push
test
xor
shr
loopne
adc
into
sbb
add
push
orb
pop
push
add
fidivl
adc
icebp
sti
je
insb
aam
add
subl
sarb
mov
rol
mov
lret
mov
cmp
mov
or
cmpsl
js
jmp
mov
das
scas
data16
hlt
das
mov
into
pop
ss
add
adc
xlat
rcr
mov
xor
and
adc
mov
jb
mov
pop
into
repz
dec
out
shlb
fcomps
xchg
xchg
popa
mov
pop
xchg
cmp
das
lret
subl
mov
adc
jne
insb
xlat
mov
cmp
aam
je
pop
inc
out
inc
sbb
mov
cmpsb
data16
les
xchg
pop
mov
push
xchg
sahf
dec
punpckldq
aaa
pop
inc
into
sahf
ret
cmp
and
loopne
add
data16
xor
ret
loop
push
sub
je
mov
jae
jo
repz
mov
arpl
xchg
fistl
xchg
lret
fcmove
inc
lock
and
lock
insb
aas
addr16
cmpsl
push
mov
lea
pop
jle
fstps
es
xor
jne
add
pop
jae
fcmovnu
loop
adc
mov
xchg
out
mov
add
loop
loop
xor
call
mov
mov
mov
lods
leave
sub
jecxz
inc
orb
mov
popa
movsb
shrl
fwait
jnp
popf
ret
lcall
xor
out
mov
imul
fisttpll
dec
rol
dec
cli
shl
pop
sbb
or
xlat
je
xchg
xor
dec
decb
push
hlt
ljmp
inc
sub
leave
lock
or
push
jge
rorb
mov
inc
jge
lods
mov
sbb
cmp
jmp
in
mov
sub
push
inc
shr
xchg
xor
stc
lods
data16
add
pop
ffreep
or
pop
mov
or
or
addl
jmp
je
enter
jmp
das
xchg
fnsetpm(287
push
mov
loop
dec
test
scas
mov
fucomp
sub
and
js
mov
jmp
divl
or
je
insb
push
dec
int
les
pop
pop
stc
jmp
int
sbb
jo
aas
cli
pop
mov
inc
and
dec
mov
mov
sub
pop
xchg
dec
in
cmpb
xor
aad
loope
bound
mul
mov
mov
jae
adc
lret
cmp
mov
mov
add
jecxz
sub
sub
fwait
pop
push
stc
jmp
sub
mov
adc
and
cmpxchg
cmp
pop
xchg
out
pushf
lret
adc
xchg
mov
add
out
fwait
fcoml
xor
sub
or
bound
and
fdivrl
and
in
scas
mov
push
in
cmpsl
cmp
jmp
push
push
pop
adc
aad
std
sub
inc
add
bound
xlat
push
jno
mov
popa
add
out
cmp
xor
jb
bound
sbb
mov
ficomps
jb
loop
push
je
inc
mov
sub
mov
add
popf
jg
hlt
imul
mov
dec
cmp
sbb
out
mov
xor
lds
push
lods
in
aad
add
lock
jl
pop
jne
sub
mov
add
and
xor
cmpsb
pop
jle
xor
mov
push
inc
push
jnp
cmp
imul
add
inc
enter
lods
movsb
pop
inc
jo
stos
sbb
test
outsb
push
xor
decl
fldt
add
inc
mov
clc
jbe
pop
and
pop
push
adc
movsl
and
mov
pusha
les
dec
lea
jle
xor
or
shr
shl
iret
cmp
stc
xlat
sbb
xchg
or
iret
or
mov
or
dec
sahf
lcall
adc
nop
jbe
mov
movsb
xchg
js
or
pop
fs
fwait
negb
lret
adc
mov
mov
pop
nop
add
or
mov
adc
xchg
rclb
in
in
jge
sahf
aaa
mov
lcall
sbb
loopne
xchg
dec
push
pop
fidivl
aam
xchg
add
inc
and
inc
mulb
xlat
cmp
inc
stos
movsl
adc
xchg
xchg
shrb
and
addb
jg
aaa
cmp
pop
fwait
sbb
xchg
pop
scas
dec
js
adc
xchg
bound
mov
lcall
test
addl
jb,pt
mov
push
pop
jo
jecxz
jle
inc
popl
shll
adc
xlat
mov
jl
and
push
sbb
sub
out
jg
mov
xchg
xlat
jne
loopne
dec
daa
jmp
daa
sub
fcoms
jp
daa
jg
xor
mov
mov
inc
mov
lock
mov
addr16
push
repz
xlat
in
sbb
in
cld
or
stos
jbe
push
cli
popf
sarl
or
fldl
shlb
inc
rclb
mov
fimuls
add
pop
je
insl
jmp
dec
inc
addl
cmp
xchg
test
xchg
jae
out
bound
pop
sbb
and
or
pop
lcall
lods
insb
das
mov
out
pop
scas
xchg
iret
sbb
push
mov
inc
aad
and
imul
pushf
mov
push
jle
adc
inc
jg
cmp
lods
lret
xchg
das
lcall
mov
and
es
xchg
mov
adc
je
xor
cli
bound
mov
or
adc
add
push
out
xor
jns
pop
inc
xor
outsb
ret
jae
xchg
fcmovne
sub
sbb
inc
mov
mov
dec
dec
sub
adcb
add
roll
cmp
xor
push
loop
xchg
out
or
popf
das
mov
stos
ss
dec
ret
xor
inc
pop
and
in
test
lock
pushf
pop
inc
das
lahf
jge
cwtl
ljmp
pop
stos
mov
rcrb
mov
insb
pop
xchg
iret
dec
or
lock
shll
aam
mov
xor
mov
enter
xchg
push
scas
rcll
inc
pop
cmp
jnp
mov
pop
dec
cmp
shrb
clc
in
sub
idivl
das
push
mov
mov
cmpl
and
popa
mov
sub
fwait
xor
mov
fstpl
xor
popa
fs
adc
lret
jmp
out
cmp
lret
inc
ds
jp
outsb
dec
jmp
cwtl
shll
mov
xchg
mov
sbb
adc
stos
out
loopne
jg
push
and
mov
inc
movsl
push
sub
sbb
jno
mov
sub
and
dec
out
mov
push
cwtl
push
xchg
xor
or
or
fnstcw
stos
shlb
adc
push
sbbl
xchg
retw
mov
outsl
jge
rcrl
out
cld
outsb
pop
xor
lock
push
sbbb
into
cmpsl
les
enter
clc
mov
lret
rolb
sti
push
bound
xor
jb
xchg
sbbl
push
xor
inc
outsl
inc
ss
dec
sbb
sbb
mov
cwtl
and
jae
sbb
xchg
sub
inc
repnz
push
pop
pop
add
mull
and
pop
cmpsb
inc
sbb
or
push
into
stos
dec
lahf
out
imul
lods
daa
pop
sub
andl
cmp
mov
mov
loope
or
dec
jg
rcll
mov
mov
mov
es
lret
sbb
xchg
orl
pop
adc
mov
mov
add
in
into
cmp
adc
mov
filds
mov
cmp
jmp
enter
jg
subl
cmp
call
dec
pushl
mov
xchg
jno
addr16
scas
lea
test
dec
add
pop
fistl
in
mov
pop
insl
mov
mov
push
mov
sbb
pop
jae
outsl
stos
xor
fsubrl
mov
ret
sub
leave
loopne
lret
sar
or
jge
nop
mov
adc
inc
inc
xor
jl
add
xor
insl
add
xchg
rcll
int
cli
imul
in
hlt
mov
xlat
or
aam
sub
push
inc
mov
add
mov
mov
sub
xor
out
mov
or
cmp
xlat
inc
mov
or
mov
sbb
adc
fidivrs
pop
xchg
add
mov
push
and
popf
xchg
daa
mov
sbb
mov
fdivrl
xchg
fiaddl
inc
adc
js
nop
jne
repz
jmp
xor
in
dec
out
out
sbb
aas
enter
push
mov
pusha
sub
jl
clc
push
sbb
test
dec
data16
push
or
push
loopne
scas
jl
jns
push
sbb
loop
inc
xlat
mov
add
cwtl
stos
cmp
mov
xor
test
roll
cwtl
popa
push
pop
insl
xorb
iret
jbe
lock
jb
mov
mov
mov
xor
push
js
mov
int
or
add
call
outsb
das
mov
nop
out
xor
xchg
outsb
push
push
lock
insl
pop
push
mov
out
jne
imul
jo
push
pop
push
je
jmp
lret
out
xchg
shlb
shrl
inc
inc
sahf
and
add
sbb
leave
pop
xchg
lods
into
mov
jnp
add
mov
mov
cltd
int
aas
int3
inc
mov
outsb
gs
ja
data16
or
jge
jg
inc
rol
mov
sbb
jne
or
pop
addl
add
lret
push
sub
in
sbb
shr
pop
jnp
sbb
lahf
sub
and
cmp
cmp
out
int3
mov
pop
mov
adc
lock
inc
hlt
call
cs
xchg
aad
add
mov
shlb
adc
cmpsl
mov
cmp
cld
lea
aam
jp
ret
enter
push
test
mov
adc
push
sarl
cmp
pop
adc
pop
rolb
daa
and
daa
cmp
xchg
repnz
fildl
test
lods
dec
xor
sbb
movsb
pop
leave
jae
fisubs
dec
loopne
jg
outsl
sahf
movntps
lea
in
popf
or
les
adc
mov
mov
cwtl
enter
jnp
in
or
orb
imulb
push
xchg
lods
test
add
lcall
cmp
sbb
or
mov
aaa
std
xchg
push
hlt
faddp
dec
adc
jle
jnp
scas
gs
andl
mov
lcall
scas
orb
stc
ss
add
cmp
xchg
bound
mov
imull
lcall
mov
ror
pusha
mov
insl
adc
lret
shlb
and
outsl
daa
ds
fmull
push
cld
cmp
gs
pop
jns
xchg
push
sub
sub
add
mov
push
dec
decb
cmc
test
pushf
xor
test
imulb
sbb
lock
loop
xor
jbe
xlat
idiv
dec
sbb
mov
xchg
push
insl
fidivl
roll
jmp
sub
sub
xor
jae
fldenv
xor
push
mov
aam
test
aas
jecxz
lods
jmp
inc
ljmp
sar
mov
add
stos
fldl
cmp
and
out
arpl
fists
xlat
test
bound
lods
ljmp
jne
loop
loopne
mov
lret
mov
ret
scas
cmpsb
dec
adc
push
rcr
lods
int
psrld
pop
xchg
das
enter
and
icebp
and
lods
faddl
jge
lods
neg
xorl
adc
fcmovnbe
lea
mov
test
mov
pop
sbb
sub
ret
cmp
jge
jmp
xchg
sub
adc
xchg
jae
cmp
pushf
je
outsl
addb
out
or
push
sti
xor
bound
jmp
inc
js
jge
stos
cwtl
sbb
push
adc
pop
mov
loopne
dec
cmp
inc
mov
enter
adc
push
popa
cs
das
push
add
or
test
add
cltd
rcll
stos
call
popa
and
mov
jg
xlat
push
cmp
jne
aad
aas
aas
mov
rcrl
lcall
lret
imul
jns
xchg
stc
adc
add
inc
cwtl
dec
je
cmp
adc
dec
popa
icebp
mov
sbb
jbe
dec
xchg
mov
jecxz
ds
insb
adcl
pop
out
leave
push
cmc
jmp
mov
je
filds
sbb
les
lock
sub
fwait
dec
mov
cmp
and
push
mov
shr
cmp
incl
push
pop
stos
call
add
lcall
and
ds
adc
outsb
gs
int
in
mov
add
and
addr16
js
mov
inc
jp
xchg
into
stc
aas
sbb
cmp
mov
cld
sub
jg
frstor
inc
and
cmpsl
adc
mov
jmp
sub
rol
testl
jp
dec
lods
pushf
addr16
gs
es
jnp
push
inc
cmp
jb
subl
push
fsubrs
arpl
ja
dec
mov
into
sub
fsubr
mov
jne
jbe
add
fistpl
inc
repz
lcall
jmp
test
mov
pusha
cmpsl
neg
test
fs
sub
into
jo
scas
jbe
bound
and
jb
inc
mov
insb
push
rcrl
adc
push
mov
mov
xor
int3
add
xchg
jecxz
sbb
out
add
iret
repz
js
sbbl
scas
cmpsb
ds
mov
dec
ljmp
js
add
shll
sbb
add
popf
popa
sbb
movsb
inc
lret
popf
mov
stos
rorb
insb
pusha
insb
pusha
aam
sub
pop
adc
xchg
jae
repnz
sbb
pop
mov
or
clc
mov
mov
pop
sbb
subl
mov
stos
adc
pop
fcomps
loop
and
stos
sub
popf
xor
addr16
cmp
and
mov
and
pop
cmp
sub
int
pop
push
shll
mov
mov
lcall
cmp
sub
sbb
filds
mov
popa
in
add
les
mov
mov
xor
add
mov
pop
lods
in
sbb
jle
pop
enter
mov
ss
movsl
inc
sarl
je
mov
popa
movsb
lret
xchg
imul
jmp
roll
or
movsl
sbb
rcrb
inc
aaa
dec
push
cmp
mov
ret
pop
mov
push
shlb
push
iret
mov
add
mov
sbb
sti
inc
pushf
aad
push
test
mov
push
dec
pop
sti
sub
out
sub
scas
mov
notl
add
bound
inc
shl
dec
ret
cltd
mov
sub
xchg
jp
sahf
aas
repnz
in
and
test
xchg
clc
stos
or
xchg
test
cli
imull
pop
ret
das
test
jge
pusha
rcr
iret
mov
dec
aas
push
aad
fs
mov
ret
lahf
leave
loopne
subb
cmp
mov
fnstcw
mov
in
daa
push
jbe
inc
or
gs
scas
pop
popa
add
je
loop
xor
mov
out
dec
inc
xchg
call
or
xor
sub
in
sarb
sahf
pop
loope
sbb
clc
inc
pop
sub
in
insb
pushf
push
xchg
adc
sbb
sub
mov
icebp
push
outsl
insl
into
add
mov
stos
xor
inc
std
leave
mov
push
lods
in
mov
pop
pop
scas
pop
adcb
jl
jmp
scas
cltd
or
pop
aaa
dec
mov
outsl
xor
mov
iret
xchg
jns
repz
scas
fistl
fwait
cmp
ficompl
cwtl
sub
dec
mov
pop
cwtl
mov
xchg
testl
jle
imul
dec
and
pop
push
or
ja
daa
xor
jg
pushf
test
mov
add
rdmsr
push
shrl
cmpsl
dec
inc
movsb
dec
popf
jne
sub
pop
pop
fwait
movsl
daa
lds
nop
in
xor
nop
jp
lahf
xchg
daa
mov
mov
mov
jp
push
jbe
gs
daa
fwait
cmp
mov
inc
push
xor
movsb
loope
insb
iret
push
xchg
nopl
sub
jecxz
mov
lods
push
test
loopne
sahf
or
cmp
dec
ja
in
pop
cmpsl
subb
movsb
rcrb
les
dec
push
arpl
mov
int
jo
jbe
xor
dec
call
cmp
fiadds
xorb
ja
imul
lahf
gs
mov
ja
pop
xchg
jae
xchg
movsl
es
repz
rorb
sub
sbb
repz
pusha
jbe
dec
js
aas
xchg
or
movsl
push
jbe
pushf
adc
sti
xor
jne
je
stos
push
add
inc
sbb
pop
and
jo
mov
imul
xchg
aas
jmp
ret
cmpsl
enter
push
adc
negb
push
test
jns
int
lret
fcmovbe
fsub
inc
push
notb
in
mov
lret
mov
sbb
ja
imul
ds
out
jp
or
je
inc
test
or
lea
sbb
lock
pop
arpl
fwait
inc
test
mov
ljmp
pop
or
rorl
push
popf
and
scas
inc
lock
pusha
jmp
xchg
pop
dec
stos
cmp
outsl
jnp
mov
andl
sbb
mov
data16
add
fistl
cmp
dec
jp
cmpsl
and
out
test
inc
inc
push
cs
or
mov
sub
pop
sahf
cmp
push
hlt
inc
insl
inc
insb
dec
xor
stos
fmuls
dec
pop
xchg
add
notb
gs
jg
fwait
add
jg
imul
jmp
lret
mov
aas
aad
pop
pop
sbb
sahf
daa
mov
std
dec
push
jns
dec
mov
inc
xchg
idivb
xchg
shrl
cmpsl
in
mov
andb
lahf
pushf
std
mov
stos
fs
and
ret
stos
xor
movsb
dec
or
mov
cltd
hlt
inc
in
fisttpll
pop
cmp
outsl
adc
and
ds
arpl
shll
mov
xchg
adc
mov
jnp
sahf
outsb
adcl
lods
cli
add
jmp
loop
movsb
cmp
mov
int3
jno
jb
add
ret
inc
mov
je
dec
repnz
and
ss
testb
jle
shlb
pop
lock
dec
lock
aam
ja
xor
movb
add
jns
push
imul
xor
add
adc
mov
test
sub
fxtract
pop
lds
pop
fs
lcall
pop
lret
sarl
rolb
push
repnz
mov
add
cmp
imul
ret
mov
sar
jge
popa
adc
loope
add
stos
leave
pop
cmp
jp
out
mov
cmpb
dec
jl
sti
inc
test
test
push
push
test
and
adc
sbb
adc
adc
popa
jnp
mov
jbe
or
and
ja
mov
xor
or
ficompl
pop
loop
pushf
or
loopne
push
push
mov
nop
shr
inc
jno
mov
or
add
push
insl
mov
outsl
ret
loop
movups
cwtl
or
pop
fcoml
push
sbb
out
outsl
insl
aad
push
stos
xlat
mov
nop
mov
xchg
das
scas
xor
sbb
cld
jecxz
jmp
sub
fdivrp
fidivrl
push
pop
jne
sub
jmp
cmp
vmptrst
push
scas
cltd
stos
mov
mov
pop
test
xchg
cs
ret
jbe
jecxz
testb
push
lods
push
mov
push
xlat
mov
in
add
fs
cmp
cld
mov
enter
jo
es
lods
push
or
and
pop
mov
mov
fstpt
jbe
xchg
mov
jmp
adc
cmp
cmpsb
ljmp
push
repnz
mov
into
test
insl
int3
sub
aaa
add
sbb
xchg
sbb
int3
jmp
loope
pop
inc
mov
xchg
sbb
add
and
xor
pusha
les
aam
arpl
xorl
jb
xchg
jnp
pop
pop
xchg
jns
sahf
fildll
loope
hlt
mov
fwait
push
mov
xor
add
adc
adc
aaa
mov
add
mov
jp
sub
or
push
mov
insl
adc
xchg
data16
insl
xchg
mov
lea
pop
push
sbb
insl
dec
enter
and
rclb
or
dec
jmp
mov
jmp
dec
out
and
and
xchg
jne
outsl
dec
ret
push
inc
push
cmpb
mov
in
je
sub
leave
sbb
lds
mov
cli
cmp
inc
inc
pop
std
pop
loopne
pop
mov
test
sbb
push
popa
and
sub
jmp
je
ja
mov
subl
jecxz
stos
mov
aaa
mov
cwtl
sti
push
sub
outsb
stc
repz
aam
icebp
push
ja
or
stos
fwait
les
dec
xchg
mov
inc
test
inc
add
mov
fdivrl
imul
jo
sbb
lea
jns
xorb
stc
inc
stos
aad
jmp
inc
jmp
repnz
lahf
lds
sbbb
mov
sbb
mov
pop
sbb
aad
mov
popa
sahf
add
popf
lret
pushl
negb
nop
stc
rol
inc
insl
xor
into
cld
sbb
sub
adc
inc
mov
jle
push
dec
hlt
in
loope
xor
and
scas
fwait
sbb
push
popf
cmp
mov
sti
ja
aam
xor
dec
dec
cli
rorb
sti
push
lds
imul
rclb
sub
mov
mov
add
sub
inc
iret
daa
inc
fisttpll
pop
scas
sbb
and
pop
sub
addl
addr16
mov
and
add
cmp
dec
into
adc
push
inc
cmp
mov
sti
mov
xchg
sbb
and
push
imul
add
scas
lds
negb
mov
cwtl
in
push
mov
mov
js
les
adc
test
push
test
xchg
adc
pop
das
inc
mov
pop
adc
rcr
popa
cmc
pop
dec
xchg
mov
mov
jb
test
cltd
stos
in
xor
and
or
adc
lret
iret
jmp
imul
jmp
into
hlt
mov
lock
inc
sub
in
adc
mov
je
add
push
femms
cmp
mov
add
loope
xor
xchg
cmp
pop
dec
and
dec
lods
movsb
mov
push
sbb
mul
xchg
nop
sbb
mov
outsb
repz
inc
jg
push
dec
test
add
out
push
xchg
lods
test
adc
fmulp
pop
cmp
aad
and
clc
or
stos
pop
addr16
pop
jmp
aam
fimull
adc
data16
sub
xor
adc
or
negb
test
inc
cmc
inc
adc
in
pop
sbb
inc
ret
mov
jmp
imul
rcll
mov
jle
mov
imul
cwtl
out
xchg
bnd
fdivs
inc
jno
jmp
in
sub
repz
jge
add
jp
enter
push
lods
fbstp
in
xchg
hlt
and
rorb
iret
stos
fnstenv
imul
rcll
rcll
push
cs
push
insl
jbe
jne
sub
jmp
scas
xchg
mov
into
cmp
xor
rorl
loopne
xchg
or
adc
mov
xor
inc
imul
stc
filds
xor
out
mov
loope
and
pop
cmp
ror
sbb
add
test
dec
cmp
jo
std
out
pop
cmc
inc
sub
imul
mov
test
xchg
lret
popa
lods
pushf
mov
push
shrl
xchg
xor
push
fistps
fnclex
loope
mov
pop
jo
sub
xchg
mov
jl
xchg
std
mov
sub
mov
mov
and
pop
xchg
sti
jl
fnstsw
jns
inc
dec
dec
mov
cwtl
mov
pop
mov
mov
jle
movsl
addl
sub
mov
gs
dec
inc
es
cmp
sbb
int
cli
cli
mov
jo
fdivrs
fisttpll
lods
in
jg
loopne
xchg
jmp
aas
cmp
mov
in
fdivl
or
sbb
insl
mov
pop
enter
cltd
cmp
mov
scas
push
fldt
push
cmc
into
mov
push
fnstsw
adc
adc
mov
dec
mov
inc
jb
pop
inc
lret
mov
jmp
add
scas
pop
sbb
mov
adc
das
xchg
add
inc
jb
cmp
pop
mov
mulb
mov
es
add
inc
push
push
pop
inc
sbb
aad
pusha
ja
mov
loopne
cmp
mov
out
jno
xor
aaa
lods
ret
pushf
inc
cmpsl
pop
cwtl
scas
inc
push
divl
cli
mov
iret
fsubr
in
cmp
add
data16
adc
jb
inc
stc
xchg
mov
or
daa
mov
mov
jge
sub
sahf
gs
fcoms
add
mov
dec
sti
out
cltd
fbstp
idiv
dec
add
lret
aam
sub
iret
push
jge
push
mov
jl
sbb
xchg
test
sbb
sub
sti
lods
cmp
jg
jnp
sbb
adc
push
mov
andl
xchg
movsl
fstpl
push
adcb
cmp
cmp
jo
pop
je
adc
into
jns
jp
cmc
inc
adc
sbb
ljmp
ja
and
movb
adc
push
add
lahf
jb
jg
icebp
dec
mov
inc
mov
jp
popf
movsl
sbb
cltd
sub
or
jae
mov
pop
aaa
shr
mov
and
rcrb
je
aaa
movsl
loop
push
daa
shr
push
mov
mov
dec
jl
pop
jmp
frstor
lret
aam
or
cmpsl
add
ljmp
mov
sti
mov
or
push
notl
and
sub
cltd
adc
adc
sbb
cmpsl
mov
mov
add
stc
lcall
repnz
add
in
loop
add
hlt
cmp
mov
or
lods
sbb
sub
ja
es
fimull
pop
xchg
xor
icebp
sub
seta
dec
and
or
aas
fidivs
test
jle
lods
orb
in
pop
mov
outsl
xchg
push
sbb
test
or
imul
enter
mov
sub
iret
sbb
cmpl
mov
int3
jb
dec
fistpll
add
pop
or
sar
loopne
pop
arpl
inc
mov
je
sbb
mov
xchg
hlt
jo
call
or
xor
ret
fsubp
out
js
bound
in
sub
mov
xchg
mov
xchg
in
fidivrl
pop
stos
inc
ret
sub
fsubs
mov
movsl
ret
das
jmp
cmpb
jmp
mov
pushf
les
push
imul
jno
sahf
mov
adc
xchg
xor
add
icebp
sbb
sahf
cltd
lahf
mov
add
adc
xor
loopne
add
mov
push
into
sti
mov
dec
aaa
jne
pop
pop
fisttpll
xor
scas
xchg
cs
mov
outsl
fildll
je
adc
pop
pop
dec
dec
inc
in
mov
mov
add
pop
std
mov
int
cmp
rorb
xlat
pop
mov
rcl
jb
sub
pop
jmp
jmp
xchg
in
in
je
xchg
add
lods
stc
test
jnp
push
mov
and
sbb
adc
lahf
dec
push
sti
fcmovu
jb
mov
stos
jg
loopne
xor
mov
xorl
push
leave
and
dec
mov
out
add
lcall
dec
fmuls
and
setp
xor
sbb
test
mov
mov
push
leave
xchg
lods
push
ljmp
or
pop
push
xor
ficompl
ret
jnp
adc
sbb
mov
inc
and
loope
inc
fs
adc
test
leave
mov
xor
aaa
adc
cmovne
fwait
aam
es
ljmp
xchg
jbe
xchg
popa
mov
push
iret
mov
mov
enter
adc
jl
es
or
push
jmp
scas
les
jmp
test
stos
adc
decb
stos
cmp
imul
or
pop
sbb
xchg
mov
xchg
xchg
fmull
lods
dec
test
notl
push
add
into
fdivr
std
movsl
sbb
add
lahf
sbb
cmp
xchg
popf
dec
hlt
add
push
lret
sbb
push
mov
loopne
lret
cs
mov
lds
int3
sbb
bound
mov
mov
dec
jp
pusha
cmp
mov
mov
das
add
push
fdivrs
mov
cmp
nop
dec
cli
inc
loop
and
xchg
jecxz
pop
xor
iret
sub
xchg
addb
movsb
xchg
pop
sub
iret
mov
adc
scas
dec
hlt
push
movsb
mov
inc
dec
pop
std
dec
xchg
sub
xchg
jp
cmp
ljmp
faddp
xchg
data16
add
int
cmpsb
shrl
or
sbb
filds
inc
sbb
mov
xor
nop
jge
xor
cmpsb
inc
les
push
jl
mov
es
arpl
fimull
sarb
push
insl
xchg
rep
xor
pop
jle
push
shl
dec
xchg
loop
and
lods
mov
int3
xorl
rcrl
push
int
scas
mov
jae
pop
pop
add
insb
sub
inc
cltd
sbb
mov
aad
imul
in
test
dec
int
fiaddl
dec
sbb
jo
mov
stos
pushf
pop
adc
inc
insb
inc
pop
inc
stos
inc
add
inc
push
jns
out
xchg
jl
daa
push
les
cwtl
aas
and
mov
aam
xchg
or
hlt
clc
mov
ljmp
mov
fnstsw
loopne
pop
leave
cmp
jge
push
test
mov
sub
dec
loop
and
push
subl
sbb
loope
xlat
aas
push
fs
adc
fistpll
xchg
ljmp
fmull
dec
fdivrs
add
mov
or
rcll
lcall
repnz
ss
sbb
push
mov
aam
jp
dec
and
pop
pop
nop
je
add
sahf
xchg
pop
inc
das
fadds
leave
xchg
add
fstpt
rcl
jge
add
or
cwtl
and
icebp
adc
add
or
bound
xor
lods
add
fidivl
in
mov
bts
aaa
cmpsb
fwait
dec
int3
data16
rcrl
jne
inc
adc
and
pop
mov
aaa
jecxz
in
rcrl
or
sbb
sbb
jmp
push
das
lock
in
pop
imul
mov
lahf
insl
sbb
enter
test
mov
adc
stos
mulb
push
xchg
leave
hlt
jno
out
xchg
xchg
sbb
mov
xchg
movsb
bound
cli
cmp
cld
out
loope
inc
mov
xor
adc
mov
xor
push
pop
movsl
test
rclb
movsb
out
mov
test
mov
scas
dec
lods
mov
adc
icebp
jmp
add
pop
lahf
cmp
mov
aas
data16
pop
repz
sub
mov
icebp
mov
mov
scas
mov
call
push
mov
hlt
les
sti
xchg
or
jno
mov
mov
jg
lret
std
outsb
dec
mov
mov
cmp
pushaw
into
sbb
mov
scas
pop
xor
rcll
frstor
push
sbb
ds
mov
cbtw
fildl
ljmp
imul
data16
xchg
popa
dec
lret
mov
adc
cli
inc
rolb
push
pop
or
fsqrt
das
in
fidivs
addb
mov
push
pushf
xchg
and
scas
adc
incl
sub
dec
fsubrp
sbbl
adc
ljmp
adc
iret
lret
insb
fisubs
ss
add
int
pop
loop
jb
jae
call
mov
xor
bound
mov
ficompl
cmpsb
es
cmp
gs
sub
pop
push
sub
mov
outsl
lock
and
call
fsubs
sub
lgs
xlat
fs
jo
shlb
pop
dec
je
cmp
inc
xchg
hlt
rep
stos
cmp
outsl
xchg
add
or
lds
xchg
mov
loopne
aas
out
jne,pn
fs
adc
or
sbb
xchg
mov
test
mov
and
adc
daa
add
fmul
int
repnz
in
mov
jb
jb
xor
imul
jecxz
fdivl
dec
sahf
jbe
dec
mov
iret
fwait
pusha
sub
pop
in
mov
jae
push
pushf
bnd
jg
inc
dec
repz
inc
mov
loop
ljmp
dec
fs
xor
test
cs
pop
call
mov
mov
popl
push
lods
adc
ret
mov
pushf
cmp
add
data16
inc
daa
bswap
into
push
cli
jl
into
ljmp
icebp
cltd
cmpsb
fs
lods
adc
mov
dec
lret
mov
insl
or
in
ret
hlt
push
popf
xchg
xchg
push
xchg
jmp
inc
jno
fisubrl
movsl
dec
push
movsl
gs
leave
sbb
adc
nop
lahf
loope
insl
fwait
hlt
int
push
lret
jae
shlb
mov
cmp
push
popa
in
stc
ret
add
andl
dec
stos
sahf
iret
inc
aam
pop
mov
sbb
ficomps
or
pop
es
adc
stc
int
movsl
in
add
adc
in
or
clc
iret
cmc
loope
cmp
xchg
adc
jb
xchg
out
or
gs
sub
push
js
add
ja
in
lret
jecxz
popa
jae
mov
popa
jno
ret
call
int3
mov
stc
call
push
cmp
jno
adc
into
dec
xchg
insl
sub
das
movsl
ss
call
mov
roll
pop
mov
xor
lret
xlat
mov
lahf
cmp
mov
test
fdivrl
stos
sub
adc
cwtl
pop
and
outsl
pusha
hlt
jl
push
imul
movsb
mov
mov
xchg
repz
popf
test
xlat
bound
or
stos
inc
roll
cmp
mov
xor
fisubs
shlb
pop
ljmp
ljmp
jb
xchg
mov
or
lcall
sahf
dec
push
aaa
lds
dec
add
sbb
sub
ss
and
shrl
lods
dec
mov
inc
push
das
ds
lcall
decb
enter
push
repz
dec
push
sbb
xor
push
adc
clc
push
jns
popf
or
jp
int
dec
mov
push
psllq
xor
lret
mov
add
dec
push
jg
gs
sub
int
push
and
pop
pushf
xchg
mov
rcll
xlat
push
daa
jp
ret
or
mov
mov
xor
jbe
lret
inc
fwait
repz
mov
lock
test
imul
mov
adc
lret
scas
mov
fs
mov
inc
cltd
jne
xor
xchg
testb
ja
jmp
cmc
cwtl
test
xor
and
push
popf
lods
mov
divl
jmp
cli
mov
adc
fxch
cmp
sti
aaa
cmp
lcall
push
mov
mov
adc
push
test
push
popf
adc
xchg
jg
sbb
adc
xchg
add
mov
in
sub
inc
inc
fucomp
mov
jmp
scas
cmp
mov
mov
push
or
push
aam
cmp
int3
aas
les
mov
pop
ss
rcl
insl
loope
imul
jge
push
imulb
pop
sbb
in
repz
xor
fsubl
cs
xlat
ret
sti
das
in
xchg
push
dec
mov
stos
push
clc
daa
mov
jle
stos
int3
bound
mov
dec
cli
inc
inc
or
mov
push
sub
add
mov
in
xchg
in
inc
inc
inc
int3
outsl
jmp
dec
pop
pop
pop
push
mov
jp
insl
mov
xchg
sub
and
sub
jnp
jge
xor
andb
movsb
xor
lods
loope
xorb
mov
fnstcw
lcall
adc
jns
or
sub
pop
push
jmp
test
sub
pusha
ret
and
mov
and
int
lea
js
sbb
test
adc
mov
mov
mov
xchg
jb
ja
clc
lds
leave
push
pop
sub
stc
lahf
aaa
mov
xchg
mov
lcall
out
adc
sbb
mov
and
mov
ret
in
push
loope
xchg
mov
xchg
lcall
or
pop
fdivl
sub
inc
xchg
scas
daa
fsubl
fs
dec
aas
bound
fnstenv
and
mov
push
fsubrl
sbb
xlat
fistpl
inc
fsubrs
test
inc
insl
lods
std
popa
iret
mov
lods
sub
xchg
out
leave
loope
out
mov
fidivrl
loop
dec
aam
mov
icebp
sti
fwait
or
push
lea
shlb
jb
push
aaa
sbb
dec
sbb
jecxz
fsubrl
and
mov
mov
imul
dec
js
pusha
lds
iret
inc
sub
lret
mov
outsl
mov
dec
jb
add
xchg
pop
out
test
sahf
mov
js
and
dec
jbe
out
pop
decb
push
test
subb
mov
xchg
lret
jge
cmpsl
mov
idiv
pop
dec
aad
mov
jle
mov
jno
pop
mov
int3
enter
xchg
xchg
cmp
xchg
ja
mov
into
out
push
mov
push
das
add
dec
xor
lods
sub
outsl
pop
inc
mov
jne
mov
out
shrd
mov
adc
xchg
pop
lahf
inc
mov
push
mov
daa
or
dec
movsb
movsb
nop
push
cmp
out
adc
rorl
repz
sbb
popa
sub
push
adc
jmp
stc
mov
cmp
call
int
and
jp
dec
pop
insb
jge
je
cmp
fs
jle
push
jmp
or
scas
xorl
in
push
mov
pop
je
and
inc
psubsw
jmp
push
cltd
ja
mov
stos
xchg
xor
call
xchg
push
xor
mov
xchg
lock
call
mov
repnz
add
cmc
inc
jnp
or
mov
enter
scas
xchg
fildll
jge
mov
clc
cmp
jp
jno
lcall
vmovapd
rolb
test
std
das
insl
cmpl
fwait
imul
dec
inc
in
mov
test
xor
fldt
add
imulb
jno,pn
dec
jp,pt
sub
add
iret
lods
push
stos
jns
fucomi
xor
lods
out
into
mov
dec
inc
fcomps
inc
and
lods
ss
cmp
jg
xchg
lods
add
sub
cmp
shl
rcr
rclb
adcl
das
cmpsb
loopne
shrb
or
movl
scas
in
sbb
call
jg
sub
rorb
std
int3
inc
shrb
cmp
adc
mov
test
mov
sub
jg
divl
repnz
jbe
sbb
lods
insl
xchg
pop
add
stos
jo
loop
stos
popa
lret
xlat
out
popa
mov
repnz
xor
or
xchg
mov
cmp
scas
sub
dec
cmp
xchg
pop
daa
mov
mov
sbb
dec
mov
add
pop
rcll
jne
or
out
or
jnp
sbb
fcmovbe
sbb
or
stos
mov
fcmovu
mov
mov
xchg
fsubs
pop
jmp
movl
daa
inc
lret
jnp
jo
xchg
lcall
jl
push
sub
pusha
aaa
sub
ds
xchg
cmp
fisttpl
dec
cwtl
js
push
adc
and
xor
int3
fwait
dec
sbb
cmp
cmp
xor
dec
jo
orl
or
out
stc
rolb
inc
sbb
cmovb
aaa
clc
repz
stos
push
push
inc
sub
inc
push
mov
and
rolb
add
push
xor
lea
nop
jg
dec
sbb
mov
das
pop
inc
sub
fdivrs
inc
jecxz
pop
sahf
add
pop
in
mov
adc
adc
or
cmp
iret
adc
out
in
sbb
rolb
sub
dec
inc
stos
pop
or
and
pop
jmp
sar
add
adc
mov
out
subl
sub
mov
ja
in
lcall
adc
icebp
adc
int
pop
cmp
add
jb
inc
xor
xorb
int3
xor
xlat
hlt
out
fists
loopne
movsb
mov
out
rcl
fs
xor
ds
jb
xchg
xchg
test
xchg
jl
gs
push
dec
mov
inc
mov
cmc
out
sbbb
popf
test
hlt
sub
sahf
int3
or
push
xchg
cmc
inc
out
xlat
lods
inc
test
jg
pop
adc
movsl
mov
movsbl
test
out
in
andl
cmp
adc
lock
enter
mov
add
movsl
sti
xchg
mov
jg
push
cltd
add
push
ja
and
outsl
fdivl
mov
in
outsl
mov
add
aam
enter
lods
and
into
insl
fsin
mov
jmp
sti
je
cltd
andl
into
push
dec
xchg
cmp
mov
mov
clc
gs
sti
inc
xor
push
in
gs
jne
std
fldl
imul
ss
in
rol
lret
sub
test
cmp
fnsave
aad
mov
stc
pop
fistps
incb
dec
add
ja
pop
dec
movsb
xchg
sbb
in
out
clc
int
jecxz
enter
out
mov
push
imul
or
in
ret
ret
dec
cltd
data16
daa
pop
es
stc
or
sbb
mov
and
das
jecxz
cltd
cmp
in
mov
mov
lock
iret
xor
lret
xor
jle
pop
xor
adc
jbe
add
or
xor
sub
mov
sub
sbb
arpl
mov
movsb
push
sbb
dec
sub
sub
jg
aam
call
mov
cmc
cli
into
mov
shlb
adc
jb
test
mov
mov
push
and
sbb
jb
mov
ja
adc
xchg
cmp
push
and
pusha
jge
out
out
aaa
push
stc
xor
scas
add
mov
sarl
lcall
imul
inc
imul
inc
add
lock
imul
stos
cli
stos
push
fwait
push
aas
ljmp
mov
jmp
test
mov
outsb
and
stos
sbb
call
fadds
ret
lea
sbb
add
adc
fs
push
ret
or
movsl
pop
push
es
ss
nop
pop
xchg
aam
stc
and
stc
mov
push
pop
scas
call
mov
jp
fwait
test
jae
aaa
dec
jge
sub
jns
xchg
fwait
hlt
add
mov
clc
jae
and
nop
int3
out
cmc
dec
push
les
jl
adc
add
jnp
cmp
int
mov
cltd
mov
cmp
movsb
imul
pop
cmc
dec
stos
dec
insl
dec
jns
push
rcr
ss
dec
ljmp
mov
lods
mov
sar
pop
mov
aas
dec
ret
ret
mov
cwtl
dec
clc
pop
cmpsl
arpl
adc
or
ljmp
xor
mov
or
mov
pop
xchg
push
add
adc
jbe
jge
add
sbb
ja
mov
sarb
lahf
adc
ret
pop
inc
push
adc
insb
movsb
xor
pushf
es
cld
pop
lock
stc
cmp
inc
xor
and
mov
insb
inc
cmc
lret
jae
push
aas
cs
int
enter
and
movsl
pop
es
shll
jb
and
jg
sbbl
mov
cmp
or
dec
stos
out
std
push
push
sbb
lods
push
lret
cmpsb
cli
pop
xor
xchg
test
dec
mov
arpl
and
out
lcall
and
roll
and
dec
add
xlat
add
ror
loop
data16
pop
pop
mov
clc
pop
jae
pop
gs
sub
xchg
mov
int3
test
scas
inc
xor
das
notb
bound
popf
out
xor
scas
pop
sub
mov
inc
jno
push
push
leave
dec
jge
add
inc
xchg
jno
cmpsl
lds
xchg
jp
inc
xchg
and
xchg
mov
test
movsl
lods
popf
sub
imul
loope
roll
sub
jg
mov
sahf
lret
aaa
jmp
jg
xchg
pop
hlt
outsb
psrld
dec
add
nop
pop
imul
xchg
mov
xchg
jecxz
fldt
mov
sbb
inc
push
push
pop
aam
push
jae
dec
inc
push
push
out
nop
mov
dec
hlt
adc
push
cmp
movsl
mov
pop
movsl
fs
cmc
shr
mov
lea
push
lea
xor
push
addl
rcrl
repnz
push
cmp
mov
adc
pop
and
mov
imul
or
shl
sti
mov
adc
sbb
lcall
repnz
inc
jmp
and
cmp
add
mov
dec
pop
int
pop
fcomps
mov
cmp
ja
lcall
dec
xchg
mov
xlat
mov
pop
je
pop
sarb
dec
mov
bswap
mov
fiadds
add
cli
cmp
adc
fwait
xchg
pop
fs
xchg
ja
fimuls
xor
or
inc
add
rcrl
mov
push
lock
test
fcmovne
clc
push
pushf
adc
xor
adcb
out
sub
adc
dec
pop
adc
cmpb
lock
mov
outsl
cmpsb
sbb
add
in
sbb
jg
or
mov
adc
sbb
lahf
sbb
push
fucom
pusha
repz
mov
inc
jge
test
std
clc
jb
pushf
movsb
mov
xor
adc
adc
sub
mov
sub
dec
std
mov
test
fcoml
add
push
cmp
push
stos
lods
aam
jns
data16
aam
imul
inc
sbb
js
dec
loope
xor
pop
push
add
jne
inc
test
aad
in
cmpb
lret
lods
cmc
inc
or
jbe
adc
mov
pop
push
pop
jbe
dec
jge
mov
bound
sbb
push
xchg
jl
mov
mov
lock
mov
mov
dec
or
jae
rorb
fwait
push
psraw
xor
dec
mov
div
int3
fcoms
cwtl
add
mov
push
jmp
divps
cmp
movsb
ficoms
test
mov
dec
mov
test
ss
cmpsl
lret
push
jge
mov
mov
pusha
in
ret
mov
iret
and
sub
shll
xlat
shl
cmp
xchg
dec
mov
mov
add
popf
and
ret
shrl
in
pushl
add
sbb
scas
mov
xlat
dec
pop
daa
bound
jo
shll
or
test
jmp
jge
testl
ret
insl
push
gs
test
lods
pop
jle
loop
fwait
int3
sarl
dec
pop
mov
pop
mov
rol
aas
dec
xor
add
jb
jbe
hlt
or
mov
ds
leave
es
inc
int
mov
rorb
fnstcw
insl
dec
leave
test
and
roll
dec
sahf
out
mov
stc
push
andb
into
and
cmp
faddl
imul
daa
xor
orps
dec
dec
sub
sub
mov
fisubrs
pop
sub
jae
jg
adcl
sahf
insb
push
mov
add
inc
mov
jno
cmc
cld
aad
or
fs
lret
sbb
push
push
lds
xchg
sub
push
adc
insl
xor
repz
sbb
ret
out
add
aad
push
rcrb
add
pop
es
fmuls
jnp
cmp
mov
fistps
lea
in
jecxz
clc
adc
xchg
ret
xor
jl
jmp
and
mov
in
push
cltd
adc
jb
incb
sahf
fnsave
cmp
mov
inc
into
push
jmp
xchg
sbb
gs
movb
and
sub
insl
add
iret
imul
add
xchg
add
sbbl
push
pop
ret
sub
lea
mov
mov
sub
int3
push
mov
mov
push
fists
xor
mov
mov
outsl
inc
aam
fisubs
imul
cmp
mov
std
stos
and
push
fcoml
and
add
add
mov
imul
ds
es
inc
dec
cli
int
inc
pop
aaa
xchg
jb
push
lret
lods
mov
test
mov
jg
sub
aam
sbb
loop
adc
imul
andb
jecxz
and
lds
dec
bound
roll
sub
mov
cmc
adc
out
dec
cli
idivl
dec
rcr
xor
jo
and
mov
es
decl
scas
fisttps
cltd
mov
fldenv
add
add
fildl
push
jecxz
loope
mov
xor
in
and
in
rcl
lcall
xchg
cld
lahf
loopne
icebp
sub
outsb
inc
imul
mov
sub
shlb
or
xchg
mov
jae
notb
loopne
cmp
pusha
mov
mov
test
adc
addr16
add
les
imul
push
cltd
jge
insl
test
pop
add
faddp
add
decl
mov
lock
inc
mov
pop
inc
es
cltd
sub
cmp
filds
imul
daa
and
mov
or
stc
sbb
fcomps
pop
out
mov
jnp
sub
js
notl
enter
cmp
jns
mov
sub
insl
mov
inc
imul
daa
imul
stos
cmp
pop
adc
sub
sbb
xchg
push
inc
es
xchg
mov
push
dec
iret
movb
imul
mov
cltd
das
lods
push
xchg
sbb
add
jg
leave
and
lock
mov
mov
popf
test
sbb
std
fcoml
flds
mov
dec
imul
loop
push
jno
rcrb
inc
arpl
cli
ficomps
cmp
push
jbe
mov
inc
pushf
jno
gs
adc
cld
mov
cmp
js
xchg
je
xchg
xor
jo
clc
push
loopne
and
and
pop
idivl
imul
loopne
int3
mov
sub
sbb
fcomi
push
mov
push
movsb
adc
jns
pop
inc
ljmp
fbstp
mov
imul
mov
bound
mov
stc
or
test
or
inc
xchg
inc
or
mov
inc
pop
mov
sbb
mov
inc
fisubl
out
nop
dec
cmp
pop
mov
repnz
or
shll
xor
jnp
and
push
dec
sar
mov
pusha
imul
pusha
imul
movsl
push
aaa
mov
xchg
dec
inc
sbb
inc
test
das
dec
in
ret
call
imul
stos
fisttps
subl
and
or
cmp
mov
inc
lret
xor
mov
and
inc
adc
loopne
sub
inc
gs
cmc
jle
mov
pusha
imul
push
inc
cmc
pop
xchg
mov
outsl
mov
jns
mov
pop
decl
sub
int3
dec
jbe
aad
pop
and
shll
push
mov
mov
or
and
xlat
adc
ret
ds
into
mov
cmp
stc
add
mov
lods
inc
rcll
xchg
rcrb
xchg
ret
fcmovnbe
dec
inc
stc
xor
mov
sbb
sbb
scas
scas
push
and
push
repnz
push
stos
pop
sarl
jae
shlb
loopne
pop
and
jp
add
add
mov
inc
mov
xchg
into
xchg
addr16
scas
mov
iret
fldcw
mov
cmpsb
or
dec
pop
popa
sub
and
inc
jge
cmpl
sbb
xor
lea
int
mov
dec
sbb
pop
call
nop
adc
ja
dec
dec
inc
or
ror
inc
cli
bound
sbb
dec
pop
imul
xor
mulb
ret
arpl
ret
cwtl
adc
pop
mov
xor
fstl
jp
je
cmp
pop
push
rcrl
lret
push
in
or
jae
imul
pop
pop
jmp
dec
je
and
cltd
mov
je
test
adcl
jno
cmp
leave
push
pop
test
mov
sub
sbb
inc
or
mov
cmp
lahf
pop
mov
mov
out
sub
int3
rorb
pop
out
fwait
add
in
test
lea
daa
inc
bound
cltd
hlt
adc
fwait
add
test
cli
popf
pop
cmp
inc
xor
or
cmp
inc
stos
jno
lods
pop
insb
push
addr16
inc
mov
add
cld
xor
test
aaa
in
loope
inc
jge
ret
shll
sti
rcll
xchg
push
jbe
push
xor
pop
sub
hlt
test
mov
outsl
out
sar
xchg
inc
mov
std
sub
je
xchg
sbb
adc
ds
hlt
addr16
push
test
mov
cli
push
mov
xor
cmp
inc
movsb
sbb
and
push
inc
push
inc
frstor
mov
in
das
push
pop
xor
mov
cmc
xchg
pop
sarl
push
loopne
scas
xchg
and
sti
pop
push
sbb
dec
push
stc
xchg
mov
and
test
in
mov
push
push
addr16
movsl
dec
scas
push
pop
and
dec
and
test
out
inc
sbb
shrl
mov
jle
xchg
xor
adc
inc
cltd
push
addr16
push
call
dec
mov
xor
lahf
lds
cs
or
dec
loope
jbe
jl
popa
sbb
dec
scas
sub
cltd
fstpl
cltd
leave
ret
xchg
cmp
inc
call
jecxz
adc
cmp
push
add
pop
inc
jmp
lods
inc
mov
sub
les
pop
pop
cli
add
push
xchg
xchg
jae
and
push
mov
lods
into
sahf
xor
mov
jb
cwtl
mov
icebp
cmpsl
mov
and
cmc
inc
add
push
inc
enter
lods
scas
popa
pop
fwait
nop
pop
pop
divb
push
jmp
adc
sbb
dec
cmp
inc
shl
dec
repz
adc
cld
test
jle
add
cmp
arpl
subl
pusha
sub
jp
lods
jb
arpl
add
testl
pop
xorb
cmp
adc
mov
pop
mov
jl
testl
xchg
outsb
pop
out
jae
setbe
repz
flds
cs
daa
divl
cld
clc
xchg
ljmp
inc
lock
jp
pop
xchg
xchg
daa
cld
xchg
fs
pop
adc
lret
sub
mov
pop
leave
jg
mov
aas
mov
push
pusha
mov
mov
pop
out
adc
arpl
ret
int3
out
inc
scas
in
call
jg
lret
shll
and
push
add
fmull
out
mov
jae
andl
inc
in
fs
fchs
aas
pop
mov
into
and
stc
mov
cmp
shlb
jb
jno
aad
jle
pop
push
pop
outsb
pop
xchg
sub
cwtl
pop
inc
out
out
push
xor
fwait
or
shl
fstpl
cmp
inc
ret
mov
daa
jbe
lahf
xchg
stc
addr16
jle
xlat
fldenv
mov
icebp
inc
inc
pop
shrl
mov
andb
mov
sub
mov
dec
sbb
jo
adc
in
mov
lock
shrb
and
cmp
sbb
rcll
repz
test
dec
jbe
enter
das
daa
inc
cmpsb
or
lea
clc
jno
jnp
dec
cmp
pusha
dec
mov
mov
jmp
xor
cmp
aam
test
into
cltd
ret
popf
ffreep
pop
mov
mov
testb
and
jbe
and
add
inc
mov
gs
jne
jmp
test
xor
dec
and
jbe
push
scas
cmp
into
imull
ja
lods
pop
adc
fbstp
push
insb
movsb
sbb
out
lret
pop
out
sbb
and
push
je
xchg
inc
mov
mov
xchg
je
and
jge
shr
lds
cmp
lods
popf
call
push
out
jbe
xlat
and
cwtl
xor
repz
sti
lcall
out
pop
jae
adc
aas
rcl
loopne
jb
std
lcall
icebp
hlt
es
xor
or
mov
cmpl
sbb
test
scas
push
cwtl
or
loope
aam
in
mov
inc
pminsw
push
ss
fxch
aas
out
mov
inc
mov
push
mov
sub
clc
mov
dec
das
out
call
push
jae
out
clc
popf
pop
fwait
mov
mov
ja
stc
or
xlat
sahf
add
enter
push
out
mov
cmp
es
loop
lahf
mov
cmp
shlb
idiv
movsb
hlt
push
je
loopne
mov
scas
and
arpl
mov
outsb
dec
icebp
or
in
cld
jne
push
loopne
inc
push
hlt
dec
pop
inc
jo
pop
jecxz
adc
cmp
xchg
add
jge
add
bound
hlt
les
shll
add
arpl
xor
lods
enter
push
and
leave
pop
ss
ret
xor
fiadds
movsb
in
imul
adc
mov
sbb
or
jo
jne
inc
adc
or
iret
in
fdivl
lret
adc
xor
out
xchg
dec
lds
pop
loopne
xchg
xor
mov
int3
hlt
pushw
fstps
pop
nop
jnp
popf
dec
xor
outsb
push
aas
mov
imul
cmp
repnz
cmc
jb
outsl
sbbb
enter
mov
sarb
cmp
cmp
lods
mov
push
outsb
jne
cmpsb
jns
mov
daa
or
push
into
xor
xchg
out
icebp
fsubrl
fcom
mov
mulb
outsl
jae
aaa
in
ret
mov
aad
xor
push
mov
lock
inc
or
jge
out
inc
addr16
jo
ljmp
test
jecxz
mov
das
cwtl
mov
into
das
dec
pusha
ror
cmc
mov
pusha
xchg
enter
jp
mov
adc
lret
mov
imul
jo
fs
xor
aam
out
jecxz
jge
lea
jb
sti
sbb
push
data16
fwait
mov
jne
mov
add
inc
pop
jb
pop
xchg
mov
movsl
push
mov
and
jns
insl
arpl
scas
shll
adc
nop
cwtl
and
cmp
fisttpll
mov
cmpsl
in
ds
aad
arpl
pop
lods
sub
add
add
mov
out
mov
in
mov
mov
jb
mov
sbb
xlat
out
jno
cmp
ret
ror
push
jbe
ds
inc
jne
sahf
push
addl
ljmp
pop
insb
and
movb
mov
call
sub
jp
pop
adc
pop
add
inc
punpcklwd
mov
mov
lret
mov
or
push
popa
cmp
jo
xor
ja
cmp
jmp
mov
or
int
adc
fcmovbe
mov
push
jecxz
scas
pop
mov
arpl
int
lods
fisttps
inc
xor
mov
clc
lcall
jmp
add
pop
loope
andl
movsb
push
pop
into
out
inc
push
xor
mov
mov
pop
jne
adc
sbb
push
sbb
jne
cmpsl
das
ret
cmpsb
jb
dec
inc
mov
dec
adc
cmp
or
and
pop
loop
xchg
mov
pop
lods
or
stos
inc
dec
lcall
stos
test
scas
insb
xchg
cld
pop
xlat
sti
rcrl
mov
movsl
test
cmpl
sbb
inc
jnp
js
sbb
idivb
push
divl
out
push
leave
imul
sub
and
nop
fildll
add
shll
mov
out
cmp
push
jle
test
dec
scas
ja
dec
adcb
push
jge
loope
mov
lret
lea
test
jmp
es
add
cli
dec
lock
loop
add
orb
sbb
sbb
in
adc
clc
stc
sbb
into
lea
filds
decb
sbb
sbb
or
add
insl
outsb
mov
lods
sahf
jns
jg
xor
sub
mov
iret
jnp
xchg
lret
hlt
cmp
xchg
jle
imul
xor
or
mov
pop
and
shr
lcall
sbb
cli
sub
add
hlt
ret
pop
in
add
mov
lds
mov
jmp
xlat
out
pop
dec
mov
clc
movsl
xor
call
jle
sub
call
or
and
stc
test
test
ds
in
inc
nop
dec
lret
mov
dec
add
inc
cld
push
xchg
into
cmp
mov
and
lahf
lret
jmp
mov
insb
sub
jnp
out
test
fnsave
xchg
jo
outsl
inc
sbb
jb
ljmp
inc
lret
mov
xchg
out
cld
imul
cmc
inc
movb
add
outsl
inc
int3
cmc
pop
and
and
add
dec
or
fldenv
shlb
mov
dec
rolb
orl
jp
dec
call
mov
mov
xor
push
xor
xlat
leave
lret
mov
push
pop
jmp
mov
inc
jge
ljmp
es
jmp
nop
dec
ja
testl
aam
ljmp
addr16
sub
clc
lret
mov
xor
jbe
mov
stc
lahf
and
and
cs
inc
cmp
push
push
dec
push
data16
sub
or
nop
push
add
adc
icebp
xchg
cld
out
stos
sub
stos
sub
cmpsl
push
or
stos
loop
cmpsb
je
lret
dec
pop
test
mov
movsl
xchg
mov
rcl
fcmovb
add
icebp
and
stos
pop
push
mov
adc
pop
repz
or
and
aaa
ror
dec
aas
xlat
mov
mov
mov
xchg
andl
jno
xchg
cmp
pop
mov
scas
xchg
sti
dec
inc
test
pop
inc
cld
insb
cwtl
jbe
test
leave
cmp
movsb
enter
sti
cwtl
test
scas
hlt
dec
jmp
cmpb
or
mov
dec
push
sti
xor
sarb
cmp
dec
lds
icebp
add
cwtl
shl
sbb
data16
jnp
fpatan
fdivl
lret
cli
test
jg
pop
xchg
mov
out
xor
mov
popf
movsb
sub
int3
push
shlb
hlt
jns
pop
mov
out
push
sub
or
movsl
cmpsb
les
push
sbb
pushf
push
or
dec
or
push
adc
and
fisubl
stos
fisttpll
movsb
xchg
adc
je
int
scas
mov
mov
mov
adc
cld
push
jae
repz
xor
cmc
push
data16
inc
and
sbb
lock
mov
cmp
or
movsb
jmp
dec
jmp
mov
push
mov
ss
push
hlt
cmpsb
cmpsl
aam
mov
out
push
jb
inc
jbe
pop
and
mov
ret
xor
inc
sbbl
or
call
je
and
clc
adc
lds
dec
pop
or
sbb
ficoms
out
dec
inc
cs
outsb
mov
mov
mov
sub
or
and
mov
mov
dec
add
fwait
sbb
jb
lods
ficomps
adc
test
sbb
je
jns
adcl
mov
push
mov
and
outsl
jle
adc
sub
pop
pop
jae
jne
xor
and
arpl
out
dec
clc
jle
cmpsb
lret
dec
xor
movsb
cmp
fsts
add
aaa
push
xorl
or
adc
shrb
sbb
mov
jmp
mov
pop
push
jns
mov
pop
push
mov
lods
test
loop
hlt
fcomps
lds
xchg
mov
lods
rorb
in
add
outsl
fdivrl
pop
dec
sub
lea
and
sar
cmp
add
push
add
jmp
adc
movsb
divl
fs
pop
insl
sub
pop
lahf
int3
push
inc
add
int
sti
or
push
nop
sub
ja
push
dec
test
test
repz
xchg
into
cmp
xchg
pushf
cmpsb
insl
push
cmp
sbb
pop
sbb
xchg
pop
imul
adc
push
movsb
inc
jge
jmp
testb
cmp
mov
sbb
sub
inc
movsl
mov
hlt
sbb
outsb
inc
lods
es
psubsw
jne
gs
cmpsl
in
into
sub
mov
roll
pop
lahf
gs
pop
cmp
mov
jp
fnstsw
and
pop
ret
jmp
test
and
frstor
inc
sbb
shrl
imul
mov
lahf
dec
mov
jns
jge
push
sbb
or
add
dec
insl
movsl
cwtl
jae
addr16
cmp
jne
xchg
mov
insl
push
lcall
mov
or
dec
clc
sub
leave
mov
loope
lods
imul
aad
js
popa
mov
cmpsb
in
push
pop
addr16
loop
ret
jb
and
in
jbe
popa
scas
cs
insl
imul
xor
fucom
fwait
add
fistpll
iret
js
inc
jecxz
cmc
ljmp
imul
inc
xchg
mov
aam
in
mov
jg
mov
pusha
aam
push
jmp
movsl
cmp
inc
push
mov
sub
in
das
dec
jl
pop
push
mov
jge,pn
in
push
repnz
xor
mov
or
jg
int3
cli
fdivrs
or
fidivrl
test
jge
pop
mov
ds
mov
mov
sbb
es
movb
push
test
pushf
stos
pop
mov
mov
outsb
cmp
sub
out
popf
loopne
or
into
push
sti
test
scas
pop
lods
movsl
out
insl
push
jmp
and
mov
jb
dec
pop
cmp
sahf
cmpsl
mov
decb
dec
mov
jmp
pop
add
or
imul
rclb
shlb
cmp
pusha
inc
inc
inc
fldl2t
pop
scas
xlat
ret
lds
add
lods
into
scas
push
mov
or
leave
cli
daa
pop
xchg
enter
pusha
js
mov
xor
and
push
inc
jecxz
movsb
dec
sbb
in
inc
testl
pop
pop
push
push
mov
dec
outsb
shlb
cwtl
iret
call
std
test
outsl
jg
xchg
jnp
sbb
adc
clc
or
call
dec
cltd
hlt
push
popf
mull
sub
add
mov
sub
aad
fstpl
or
mov
mov
add
lods
jbe
pop
bound
jno
aam
movq
outsb
and
ja
rep
aaa
and
fwait
mov
pop
dec
scas
js
jmp
fbld
inc
jb
pop
mov
icebp
pop
push
dec
stc
add
sub
dec
test
cmp
push
rcll
add
cmp
xrelease
mov
popl
sub
lods
add
lahf
int3
mov
mov
push
xor
dec
or
in
add
sub
jg
jbe
mov
adcb
iret
mov
lock
push
data16
or
pop
aaa
xor
test
fistpl
sub
fsub
jb
xor
mov
int3
xchg
jp
je
test
movsb
cmp
inc
xor
inc
inc
lcall
sahf
into
cmp
fistl
ja
pop
loopne
pusha
movsb
rclb
aaa
in
sbbl
and
jns
and
cmp
ljmp
mulb
in
inc
cld
cmpsl
jmp
pop
mov
or
jecxz
repz
jle
test
mov
cs
jl
xor
xchg
jae
rolb
bound
mov
push
jmp
lods
cmp
mov
push
in
xchg
shll
ja
lea
pop
cs
mov
mov
aam
sub
or
dec
xchg
push
inc
mov
test
data16
pop
or
cmp
hlt
lahf
in
xor
les
lock
stc
std
sbb
fucomi
stc
push
movsb
and
add
ljmp
dec
mov
divb
mov
sub
pop
or
movsb
mov
sti
sbb
call
aaa
adc
dec
mov
pop
loop
clc
bound
xchg
in
pop
lods
inc
mov
test
in
negb
rolb
adc
or
fnsave
dec
sbb
leave
mov
mov
leave
and
sahf
cmc
sub
lahf
in
in
add
push
sub
inc
xlat
and
and
pop
test
cmp
roll
bound
xchg
insb
mov
cld
insb
in
ja
jl
stc
add
push
mov
lahf
xchg
inc
fisubs
inc
jmp
xchg
in
lds
cmpsb
add
jmp
pusha
push
pusha
in
push
in
mov
mov
fidivrl
sub
push
inc
ficompl
in
cmc
ja
aaa
xchg
xor
aad
fnstsw
push
and
in
jl
aas
ret
movsl
jns
popf
push
xchg
sub
leave
insl
push
mov
insl
pop
and
cwtl
sbb
mov
xchg
pop
and
push
jo
pushf
adc
push
dec
cli
lahf
dec
xchg
sub
aaa
sbbl
repnz
repnz
rorl
cmpsl
aaa
jp
scas
aad
shrl
or
adc
xchg
push
xchg
adc
lds
push
loop
cmp
adc
inc
iret
inc
nop
imul
fnstcw
movsb
and
cmpl
inc
insl
in
add
cmp
enter
lea
rclb
inc
pusha
test
mov
insb
xchg
dec
sub
xchg
add
push
into
fdivs
jae
or
out
stos
in
out
jno
pop
mov
xor
test
cmp
mov
lods
aas
scas
cmp
lods
ret
dec
aad
inc
lods
test
mov
out
stos
cmpsb
test
frstor
addl
pusha
lods
push
pushf
cli
sbb
dec
test
mov
add
xchg
shrl
out
mov
ret
aas
out
push
ret
lahf
jl
out
cmp
push
cmp
mov
cli
lock
jl
mov
xlat
add
insl
shlb
xor
sti
push
jmp
mov
les
stos
rcr
bound
jmp
or
dec
enter
mov
xchg
cmp
mov
mov
in
pop
sub
icebp
sbbb
add
popa
sbb
dec
xchg
cwtl
test
dec
in
ja
sbb
mov
jno
bound
fidivl
dec
cmp
mov
fcmovnbe
inc
mov
loope
xorl
jae
sahf
cmp
fyl2x
sub
rcl
pop
and
jecxz
in
cmp
add
lret
arpl
shlb
and
mov
fdivrs
stos
cmp
mov
stos
sub
movsb
cmp
add
sub
pop
cmp
cmp
or
xor
movsl
fidivl
shl
les
insl
mov
dec
lret
push
sbb
movsl
sub
dec
nop
fldt
dec
loope
mov
or
xchg
stc
into
std
add
dec
aas
sbb
dec
ror
lods
sarb
dec
clc
ja
imul
push
fsubrs
cmp
gs
or
enter
inc
sub
dec
ret
aad
inc
movsl
clc
lahf
scas
in
inc
add
in
rcrl
adc
stos
ds
and
arpl
and
lods
das
add
and
push
jp
dec
sub
xor
mov
aad
xor
xorb
repnz
cli
in
es
push
daa
movsl
shll
sti
xor
and
sub
or
sub
sbb
jl
jmp
or
sub
fwait
ds
mov
pop
movsb
outsl
xchg
enter
pop
sub
cmp
incb
scas
mov
push
sbb
fisttps
mov
add
scas
dec
cltd
inc
add
hlt
in
orl
mov
dec
or
orl
insb
adc
mov
stos
push
xchg
les
scas
iret
imul
and
adc
jbe
inc
popf
es
les
das
fwait
or
push
xchg
ds
into
sbb
mov
sbb
cmp
cmpsl
dec
cmp
lahf
push
test
or
sub
mov
mov
cmp
js
jae
cmp
shll
sti
pop
push
movsl
adc
jl
mov
pusha
lret
inc
in
fiadds
out
push
rorl
push
andb
and
shlb
das
push
xor
fs
xchg
shll
sub
xchg
pop
enter
fisubs
jl
repz
pusha
pop
imul
lea
fldenv
dec
dec
leave
repz
dec
jge
aad
add
std
js
inc
push
mov
movsb
int
lea
cmpsl
ret
cmp
mov
inc
mov
cmp
cmc
jge
cwtl
push
mov
icebp
mov
xor
decl
jmp
lock
add
or
and
lret
jb
mov
xor
lahf
or
fidivrs
cltd
inc
or
pop
scas
sbb
mov
dec
mov
ss
push
stos
stc
inc
cmp
ret
lret
sub
jge
inc
inc
pop
mov
add
adc
push
scas
ret
mov
sbb
jnp
mov
addr16
xor
lea
pop
mov
inc
jl
scas
pop
and
xor
mov
inc
mov
out
and
sbb
xchg
push
int
aas
pop
mov
packsswb
out
xchg
ss
in
add
xchg
stos
mov
pusha
sbb
hlt
push
adc
mov
popa
cmp
lods
cmp
hlt
out
xchg
sbb
out
xchg
out
inc
adc
mov
and
xchg
jge
mov
xchg
mov
mov
icebp
sahf
call
fcomps
pusha
js
and
fnsave
stos
mov
or
outsb
ffreep
fimuls
jne
or
incl
cmpsb
and
xchg
push
hlt
sub
ja
cltd
repnz
or
shrl
mov
xchg
fcoms
imul
adc
repnz
mov
jb
mov
dec
jp
stos
in
jecxz
cmp
xor
mov
mov
test
xchg
mov
jbe
sub
pop
imul
xorl
inc
orb
dec
arpl
mov
ret
gs
inc
mov
mov
cmp
add
and
add
push
cmp
or
ret
push
cs
nop
xchg
or
inc
xor
jno
stc
clc
mov
xor
dec
scas
adc
jne
rep
add
stos
pop
addl
mov
cmpsb
xor
sarb
scas
cmc
fnstenv
pusha
xchg
call
fisubs
pop
bound
xor
sahf
call
add
push
xor
test
adc
ljmp
jbe
sbb
nop
cmpsb
inc
pop
mov
lods
jle
cli
sbb
and
movsl
fucomi
mov
cmpsl
or
in
mov
test
sarb
lcall
or
add
push
jmp
add
push
subl
dec
stos
cmp
arpl
fsubs
pop
rcll
ds
push
ljmp
push
movl
cli
hlt
std
outsl
jl
cmp
sbb
jmp
test
adc
sbb
movsb
iret
inc
jo
out
ja
stos
mov
jo
and
insl
aam
add
cwtl
sti
lea
xor
loope
int3
pusha
popl
and
cli
int3
int
int
xchg
add
push
or
cwtl
aaa
xor
icebp
cmpsb
xlat
add
dec
mov
cmp
mov
test
mov
mov
fadd
movsl
lcall
dec
jb
xchg
pusha
int
lcall
jmp
enter
lock
and
adc
mov
cmp
sub
cmp
fcomps
adc
mov
mov
addl
dec
hlt
pop
pop
mov
ss
cmc
lahf
sub
cmc
aaa
dec
push
mov
pop
cmp
sub
sub
scas
loopne
fmull
mov
xor
jle
mov
mov
test
clc
jge
jecxz
es
dec
fwait
add
cmp
sbb
sub
push
fmul
scas
and
sbb
add
andb
mov
in
int
sub
rol
je
fmulp
out
mov
jbe
push
insb
pop
js
and
fs
int
fsub
aaa
mov
lock
sti
jmp
inc
xor
stos
jns
les
dec
loopne
movsb
xor
repz
pcmpgtw
scas
jne
inc
fwait
dec
push
out
cld
sbb
repz
movsb
lcall
jns
xor
xchg
mov
sbb
packuswb
cmp
mov
inc
neg
mov
daa
sbb
push
push
sti
lods
inc
mov
xor
in
les
or
mov
or
mov
stos
and
pop
and
sub
outsl
popa
adc
jl
inc
mov
cmpsl
pop
mov
dec
mov
xchg
js
es
dec
xor
dec
rcll
jno
sub
inc
cmpl
cwtl
mov
dec
mov
xchg
cmpsl
iret
andl
mov
fdivrl
test
pop
test
js
out
mov
pop
int
sbb
lods
push
gs
in
das
jmp
fsub
sub
dec
int
or
mov
shll
mov
lret
scas
stos
or
je
lods
mov
and
adc
inc
addr16
jb
dec
cmp
clc
scas
shlb
xor
and
cmpsl
ss
ss
inc
pusha
lret
sarl
mov
in
and
push
mov
adc
jnp,pn
inc
std
push
sbb
mov
xchg
inc
repnz
mov
fsubrs
pop
push
test
add
int3
and
push
pop
stos
or
in
mov
fidivs
aam
pusha
pop
adc
aas
in
movsl
movsb
adc
fldcw
mov
mov
dec
adc
sbb
pop
sbb
mov
sbb
xor
push
ret
pop
lahf
pop
push
lock
jbe
jae
lods
mov
cmp
repnz
jb
mov
pop
daa
xchg
mov
sbb
or
jmp
push
or
push
in
sti
lds
mov
jge
inc
dec
sbb
int
or
sarl
pop
inc
test
inc
addr16
jno
iret
mov
or
xchg
inc
clc
ljmp
icebp
inc
pop
aaa
push
xor
stos
sahf
hlt
xor
xor
adc
int
inc
fxch
sub
push
lods
test
ret
into
or
xchg
stos
mul
inc
or
decl
xchg
cmp
stos
xchg
add
test
jmp
pop
sub
jae
or
sub
imul
sahf
xchg
mov
shlb
xor
pop
xchg
enter
sbb
push
in
jle
pop
pop
dec
inc
pop
mov
aad
out
scas
push
cltd
dec
daa
pop
lods
inc
lea
outsb
sbb
scas
ja
jbe
push
nop
adcb
es
aad
sbb
cs
cmp
add
mov
add
arpl
jg
aam
cli
lret
inc
dec
aad
fldt
hlt
mov
mov
or
das
dec
addr16
aas
pop
push
sub
adc
test
pushf
add
or
adc
jg
insb
cld
cmp
clc
mov
jecxz
inc
add
rep
add
inc
sar
jge
icebp
mov
jle
test
mov
les
mov
jl
insb
cmp
arpl
fwait
loope
rol
push
push
mov
push
cmp
hlt
xor
std
dec
dec
mov
repz
mov
jl
and
ja
cmp
jne
add
or
daa
sbb
mov
stc
andl
out
shl
fdivr
out
adc
ret
mov
add
jno
insl
test
into
mov
cs
jle
cmp
bound
mov
pop
lds
cs
dec
adc
mov
push
mov
inc
fstpl
push
leave
sbb
or
rcl
pusha
mov
cwtl
mov
push
mov
cmpsl
dec
xor
inc
ret
test
ja
loopne
arpl
mov
icebp
push
push
push
out
xor
das
xchg
fldenv
leave
adc
jbe
jle
xchg
dec
or
ja
mov
daa
out
jmp
cmpsb
imul
mov
xchg
inc
sub
add
shrb
imul
jp
shll
outsl
es
or
mov
js
mov
shrb
mov
pop
add
jae
hlt
pop
jg
mov
shlb
xor
adc
mov
cmp
mov
sub
jb
mov
jmp
sbb
mov
pop
and
xchg
inc
cmp
dec
jmp
repz
aaa
shrl
push
sbb
repnz
jno
sub
jp
ss
lock
arpl
mov
add
loope
jl
push
mov
dec
xor
addr16
int3
cmp
and
out
and
int
cmp
push
rorb
out
sahf
mov
iret
xchg
mov
cmp
call
pop
repnz
test
push
push
mov
imul
sbb
mov
pop
sub
in
cmc
adc
mov
lret
loop
fsubp
xchg
sub
sbb
and
into
cmp
hlt
ljmp
fisubrs
ja
adc
clc
cmpsl
out
loopne
cmp
mull
data16
mov
inc
jb
mov
pop
adc
mov
push
cmp
mov
jns
mov
fsubr
fs
xchg
add
mov
mov
jo,pn
popa
mov
arpl
xor
dec
xor
mov
cmp
xchg
mov
mov
paddusb
in
testb
outsl
inc
push
pop
call
push
imul
rclb
inc
pop
push
sub
cli
popa
je
cli
jbe
cmpsl
aas
xchg
popl
lods
xchg
jbe
fisubrs
mov
sub
mov
add
arpl
mov
xor
lods
xchg
push
xchg
sbb
fdivl
inc
sti
xchg
jmp
insl
xchg
jle
adc
hlt
xlat
dec
gs
mov
pop
add
test
fisubrl
add
push
mov
xor
stos
xchg
jg
sbb
sbb
int
das
cli
cmc
fwait
cmp
out
jb
loope
lret
and
xchg
lods
addr16
in
popa
mov
shl
lods
imul
call
adc
cltd
sub
clc
push
mov
in
jp
dec
add
in
lcall
addb
pop
ret
aam
cwtl
mov
ja
mov
or
mov
out
cmp
nop
pop
jnp
mov
fs
jmp
clc
iret
fdivl
jne
mov
xor
jb
leave
xor
out
xor
jns
fldt
dec
imul
popf
lds
xchg
addb
scas
xchg
push
sub
or
out
pmulhw
cltd
jl
dec
arpl
inc
mov
mov
out
pop
cmp
cs
cmpsb
dec
leave
push
das
ret
cs
int
lods
pusha
ljmp
dec
shl
data16
mov
sub
orb
inc
mov
mov
in
adcl
out
nop
sti
ror
inc
sbb
inc
mov
cmc
cs
imul
cwtl
fstps
sub
pusha
add
dec
push
clc
and
fmuls
inc
scas
mull
sbbb
in
rclb
cmp
test
pop
sbb
jmp
into
fdiv
or
ds
test
aaa
xor
push
and
aas
jl
aas
int
insb
pop
xchg
aad
stc
sbb
out
xor
cmc
scas
mov
fiadds
dec
and
inc
sbb
xlat
lods
adc
push
test
mov
lods
jmp
xchg
imul
dec
jmp
push
mov
out
adc
jecxz
xor
jge
jns
xchg
int3
pop
movsl
ja
test
pop
sub
add
cmp
inc
movsl
outsl
sbb
and
data16
into
cmc
pop
testb
jmp
clc
or
pop
daa
sub
fwait
xor
or
lret
mov
inc
int3
pop
xorb
jne
sub
xlat
fnstcw
xchg
sar
mov
mov
push
adc
pop
xor
ljmp
xchg
mov
imul
lahf
jl
in
ss
mov
sbb
fwait
outsb
addr16
jne
jb
push
push
je
lret
stos
gs
dec
out
pop
mov
adc
lods
add
cwtl
jge
add
mov
in
cmpsb
movsb
jo
pusha
sub
fists
dec
pop
lret
imul
inc
ljmp
xchg
std
leave
jno
mov
push
push
xor
andb
movsl
cld
push
gs
mov
pop
arpl
dec
jge
push
adc
leave
mov
xchg
pop
inc
cmp
push
arpl
sub
mov
jne
push
addl
test
add
pop
repnz
gs
sub
scas
adc
int
mov
pushf
sub
mov
jmp
ja
inc
insb
mov
push
lds
mov
mov
hlt
push
pop
cmp
jmp
xchg
adcl
lret
scas
movaps
shll
xchg
xor
jae
push
stos
fsubs
adc
sbb
int3
or
fmull
ret
xchg
dec
mov
mov
pop
ret
insl
mov
mov
mov
ja
jecxz
xchg
jle
mov
call
xor
sbb
popf
test
ss
xor
stc
test
loopne
cmp
js
mov
push
xchg
push
mov
push
fstps
lds
stos
lret
mov
mov
jnp
mov
mov
dec
popf
xchg
repnz
mov
mov
orb
insl
rolb
xchg
dec
add
je
push
popa
jo
push
sbb
jl
fcmovnu
xor
lods
loop
les
sub
or
movsb
ret
out
inc
dec
adc
mov
je
stc
jns
lods
testl
xor
push
rorl
out
call
daa
or
jmp
mov
sub
push
sti
add
xchg
addl
sub
stos
lea
rcl
adc
in
adc
inc
aas
jo
repnz
out
xor
push
stos
adc
push
xor
adc
inc
test
mov
pop
in
mov
cwtl
cmpb
repnz
cwtl
lahf
js
and
and
xchg
sarb
dec
jo
jmp
cmp
or
pop
inc
xchg
enter
jnp
dec
sbb
cmp
in
adc
pop
mov
mov
and
pop
fstpt
inc
push
adc
movsl
sbbl
dec
loope
or
adc
pop
push
push
xchg
mov
ret
fidivrl
aad
or
scas
push
shl
push
lahf
xchg
aas
gs
sub
imul
or
movsl
mov
leave
and
xchg
pop
mov
and
paddb
pop
or
fst
sub
mov
sbb
add
jno
or
cmp
ja
in
mov
and
push
ss
cmp
fwait
adc
fadds
arpl
int
or
sbb
jmp
jae
andb
cmp
add
rcl
push
adc
aas
push
xchg
es
popl
inc
mov
pushf
mov
fcmovb
dec
fistpl
sahf
sti
mov
sbb
push
scas
mov
jle
outsb
imul
data16
adc
sahf
repz
xchg
lods
loop
es
push
pop
sbb
adcl
iret
cli
xchg
mov
imul
aas
cmc
push
push
mov
pop
jge
outsl
mov
lcall
mov
jb
pop
lea
mov
js
sub
adc
mov
sbb
ret
pop
pop
mov
int
xchg
push
jecxz
in
out
lea
and
adc
lahf
icebp
cltd
out
into
outsl
mov
and
cwtl
or
popf
pop
pop
sbb
nop
test
testl
stos
mov
popa
cwtl
fdivrl
mov
jp
sbb
loop
xlat
dec
jecxz
mov
lock
dec
in
add
push
jns
inc
fs
jo
cmc
hlt
in
and
xor
test
mov
outsb
xlat
in
push
lret
jbe
pop
mov
cli
mov
in
jo
adc
jl
inc
mov
int
push
mov
push
shr
jge
dec
mov
sbb
in
and
stos
stc
jbe
or
mov
aaa
xorb
cmp
sbb
repz
data16
jg
hlt
rcr
vpcmpeqd
xchg
inc
por
subl
ss
or
lods
sarb
add
cmp
stos
pop
pop
pop
xor
jo
jnp
cwtl
test
push
ss
data16
xor
jge
adc
fsubrs
jae
xor
mov
push
iret
scas
sbb
add
popl
andl
popa
movsl
inc
mov
adc
rorb
in
data16
and
mov
mov
mov
out
xchg
mov
jb
xor
adc
dec
int
jecxz
aad
out
add
test
popf
push
jo
into
sub
mov
cmovno
push
lods
xor
adc
das
sbbb
dec
pop
sbb
lock
je
pop
adc
iret
mov
pop
loope
clts
popf
xor
jae
and
mov
push
adc
pop
cmpb
out
daa
add
cmpsl
ret
gs
pushf
adc
pop
repz
xchg
adc
fistpll
xor
pop
sub
jnp
mov
xor
mov
leave
xor
pop
xlat
adc
dec
mov
or
sbb
xlat
je
inc
pop
stos
and
nop
test
int3
cmpsb
cli
mov
outsl
jbe
scas
insl
into
sbb
mov
in
outsb
lcall
scas
stc
or
popa
ret
jne
xchg
pop
nop
movsb
jmp
orb
or
rcrb
outsb
jp
cmp
dec
cwtl
push
xor
pop
leave
add
fwait
inc
icebp
scas
neg
adc
or
nop
movsb
jecxz
add
loopne
imul
push
adc
fdivp
fcomps
fs
and
mov
mov
pop
sbb
sub
adc
js
mov
addb
jb
bound
adc
std
imul
js
adc
lea
jle
cmc
adc
cmp
test
and
pop
pop
xchg
pop
fwait
xor
cmp
cwtl
popl
fisttpl
outsl
in
push
int
mov
xchg
inc
cmp
xchg
ret
in
and
fdivl
cltd
test
push
and
mov
inc
jno
sub
jl
push
movsb
push
pop
mov
out
adc
fwait
jg
jecxz
xchg
cmc
mov
pop
sub
xor
fdiv
in
les
inc
inc
insb
sbb
test
pop
xor
cmp
mov
pavgw
std
add
cltd
aas
pop
ds
inc
pop
into
repnz
fs
aaa
sbb
xor
sarl
cld
mov
inc
incb
sub
pop
xchg
inc
iret
xchg
outsb
daa
pop
fcmovne
out
mov
jns
shll
xchg
dec
cmpsb
cld
icebp
out
lret
dec
scas
jne
mov
jno
cltd
out
gs
and
jnp
hlt
inc
add
xchg
mov
push
adc
imul
and
out
push
push
jns
outsb
and
mov
pop
xchg
mov
sub
insb
aas
or
push
push
mov
lret
jecxz
jecxz
adc
out
adc
and
clc
leave
pop
mov
jne
jb
and
cmp
outsl
fidivrl
insl
faddl
mov
test
adc
dec
cmc
cmpsl
push
xor
or
mov
push
sbb
xchg
out
addb
sbb
and
aas
sbb
xchg
dec
orl
or
pushf
mov
jl
xor
loopne
pop
scas
inc
daa
mov
push
cmpsl
pop
fildll
lret
arpl
js
jns
inc
es
add
or
pusha
aad
cltd
mov
popf
dec
xor
popa
movsl
mov
repnz
rep
fidivs
aam
mov
jg
cmc
sbb
push
fcmovnb
out
cld
xchg
push
lsl
add
inc
dec
xlat
dec
xchg
lods
dec
daa
add
push
cmp
dec
pop
stos
mov
pop
in
dec
loop
cwtl
xchg
jno
push
push
clc
jmp
jo
int3
mov
adc
imul
push
scas
scas
outsl
push
movsb
outsb
mov
hlt
dec
shl
frstor
inc
push
sub
add
push
lods
adc
push
jmp
jnp
incl
xor
stos
mov
mov
test
or
test
sarl
pop
cmpl
push
inc
test
pop
push
std
jns
pop
es
pop
xchg
pop
or
loop
sub
sbbl
dec
add
mov
sbb
pop
or
pop
cvttps2pi
xchg
xchg
push
pushf
push
outsl
pushf
and
xor
push
jmp
addps
sbb
jmp
cmp
ret
mov
shll
popa
repz
ret
and
dec
add
mov
cmc
inc
pop
push
ret
mov
nop
rolb
xor
fwait
cmp
sarb
add
xor
fadd
pushf
xchg
xchg
jecxz
mov
xrstor
push
pop
jno
adc
inc
sub
cmp
cs
addr16
jns
sbb
into
sub
imul
inc
sub
hlt
add
sarb
xchg
mov
jbe
mov
rcll
mov
xchg
aam
icebp
push
mov
or
ja
test
orb
sahf
mov
push
and
aad
das
lds
gs
sbb
je
mov
dec
or
xchg
test
jg
cmc
mov
and
cmp
xchg
lods
add
clc
repnz
dec
imul
movsl
push
lret
aaa
clc
fisttpl
add
movsl
shll
pop
outsl
popa
aam
mov
sub
xchg
xchg
add
push
push
loop
mov
fiadds
jecxz
add
xchg
sbb
sub
scas
jnp
inc
addr16
js
jne
xchg
je
push
bound
mov
hlt
loopne
jecxz
pop
or
pop
lcall
mov
xor
push
jp
imul
jno
fisubl
pop
lahf
pop
pop
fstpl
sbb
les
frstor
mov
mov
es
loope
mov
pop
leave
push
out
or
jg
loopne
mov
xlat
hlt
dec
add
inc
sbb
jge
aam
lods
pop
stos
cmpsb
mov
pop
ret
adc
cmp
push
push
lea
lods
lret
jne
sub
and
shlb
or
inc
push
push
rcr
loopne
mov
test
and
mov
les
loope
push
xchg
sbb
stc
movsl
in
mov
mov
mov
xor
pusha
jmp
push
inc
out
mov
cmp
or
jmp
sub
sbb
or
push
mov
dec
push
pop
xchg
mov
ffree
stos
nop
mov
ljmp
leave
pop
divl
ss
stc
ret
addb
mov
movsb
add
js
stos
pop
adcl
repnz
dec
shll
mov
jnp
shrb
aaa
inc
push
cmc
test
dec
add
and
push
out
mov
cmp
loop
mov
dec
mov
ret
scas
xchg
mov
testb
movsb
dec
pushf
shll
inc
insb
add
std
xor
inc
inc
and
repz
mov
aam
add
imul
lret
or
jne
test
pop
or
xor
cmp
repnz
repnz
mov
aaa
adc
mov
cld
jno
mov
or
subb
mov
jnp
pop
pop
add
lahf
lds
lcall
pop
inc
or
test
sbb
pushf
sbb
jae
dec
fstpl
arpl
dec
mov
jmp
movsb
sbb
lahf
jb
aaa
in
jle
or
in
inc
mov
dec
shll
loope
rcrl
fcoms
ret
gs
jmp
divb
shrb
xchg
push
dec
in
mov
int3
mov
imulb
add
jge
arpl
fcompl
imul
or
add
and
arpl
jae
js
and
push
pop
loop
rdpmc
inc
enter
clc
mov
std
icebp
or
mov
movd
out
rol
xchg
push
ret
ds
inc
xor
sbb
sahf
mov
inc
sub
mov
pop
or
inc
xchg
cmp
mov
jbe
pop
stc
push
mov
clc
or
ljmp
cmc
out
push
mov
fwait
cmp
lods
stos
pop
jae
scas
gs
into
jne,pt
add
loopne
dec
fsts
dec
cmpsl
out
ret
xor
and
xor
jnp
mov
bound
jle
inc
mov
lock
addr16
test
cmp
ljmp
mull
inc
push
or
adc
out
ljmp
dec
pop
movsb
call
jne
ret
rcr
std
add
adc
loopne
cmp
dec
lret
test
lcall
inc
push
jo
movsb
je
or
cltd
mov
pop
cmc
lds
push
or
and
clc
mov
adc
faddl
cld
stc
cwtl
repz
test
jno
iret
cltd
pop
or
jne
mov
scas
mov
cmpsl
int
andl
in
stc
or
js
bound
push
inc
and
ds
mov
sbbb
loopne
or
fdivrl
mov
or
xchg
in
testl
stc
out
sub
repnz
mov
loop
test
sub
sub
jnp
jl
sub
nop
adc
push
jae
mov
cmpsl
popl
or
dec
cmp
or
sub
ret
ja
cli
cmpsb
popa
mov
shl
mov
inc
imul
xchg
or
xor
mov
outsb
ljmp
push
ljmp
rcrb
xchg
and
jmp
xchg
add
fistpll
enter
enter
pop
js
push
fadds
insb
jns
popa
xor
inc
into
sub
pop
test
fmuls
cmp
cwtl
jno
jle
dec
and
movsl
pop
mov
xchg
inc
sti
jo
sub
pushf
or
fsubrs
movb
inc
out
test
push
adc
inc
pusha
jp
lea
out
push
push
mov
icebp
addb
jne
xchg
sbb
sub
shll
out
std
add
jecxz
loope
nop
pop
cltd
jnp
popf
fisttpll
inc
outsl
loopne
dec
mov
and
xchg
dec
test
mov
jp
jle
add
js
idiv
push
nop
loope
cmp
sub
scas
outsl
dec
add
xor
rorl
mov
jp
sbb
jge
ret
mov
sbb
lods
pop
out
lahf
xchg
loopne
popf
pusha
jp
movsb
fiadds
loopne
mov
and
pusha
aam
dec
dec
fsubrs
mov
and
lods
aaa
mov
cmp
add
test
int
rcl
push
bound
lahf
faddl
hlt
xor
sti
jbe
data16
or
les
dec
pop
enter
mov
mov
cld
dec
or
hlt
mov
std
push
jbe
mov
adc
dec
fadds
mov
leave
mov
add
lock
xchg
jae
mov
pop
mov
xchg
stos
push
in
test
cmpsb
xlat
sbb
xchg
lahf
dec
outsb
in
loope
leave
push
jp
jnp
jl
add
jo
lahf
mov
mov
test
je
push
aaa
mov
cmp
out
cmc
lret
add
or
out
gs
mov
push
into
stc
clc
mov
ret
fcoml
sub
adc
push
pop
fidivrl
jecxz
xchg
fucomip
gs
add
lcall
mov
xchg
stc
aam
mov
mov
mov
das
pop
lcall
aas
lret
push
inc
dec
jmp
or
aas
fcompl
idivb
and
mov
sub
dec
push
and
fimull
scas
iret
xor
ret
bound
jl
xor
sub
pop
insb
mov
sbb
and
xchg
notb
xchg
push
js
mov
add
call
pop
inc
inc
in
add
cwtl
dec
mov
or
mov
mov
pop
xchg
cmpsb
mov
fs
fmuls
mov
popf
adc
pop
xor
add
loopne
mov
outsl
popa
or
imul
adcl
inc
or
push
mov
pop
aaa
stc
push
je
cmc
shl
das
lcall
shll
nop
mov
jae
aad
arpl
xchg
cs
xchg
sub
mov
cmpsb
xor
mov
bound
iret
insl
outsl
add
hlt
inc
fcomps
mov
xchg
inc
pusha
fnsave
mov
sbbl
or
mov
insb
cmpsb
add
push
pop
pop
pop
test
cld
push
lock
das
adc
int3
sbb
lret
pop
xor
nop
loop
sub
mov
adc
jecxz
sbb
jo
pop
popf
mov
mov
mov
repz
iret
sub
mov
out
push
sbb
stc
notl
std
popf
divl
jmp
iret
call
adc
jg
cmc
scas
jo
mov
lret
inc
fld1
sbb
jp
mov
cmp
int3
fwait
mov
into
cli
mov
aad
stos
mov
sbb
nop
sub
mov
test
in
pushf
fwait
cmp
lods
push
mov
add
sbbl
aaa
or
adc
lea
pop
add
pop
daa
mov
sbb
cmp
test
fnsave
inc
and
aaa
outsl
xchg
jae
sub
imul
loope
jne
fisubs
jne
xor
jb
icebp
add
ret
lods
cmpsb
addl
mov
dec
pop
into
std
add
adc
call
add
ljmp
cmc
repz
xchg
divb
inc
in
inc
lahf
out
adc
xor
inc
ficomps
out
or
adc
divl
jl
stc
pop
push
jecxz
xchg
sub
xchg
lods
mov
dec
xor
orb
fisubrs
int
lods
xchg
lds
ds
imul
xchg
cmpsl
fimull
ret
js
xor
xor
jnp
sub
stos
cmc
movsl
repnz
jecxz
jmp
fsubl
clc
jmp
aaa
or
sbb
mov
pusha
xor
je
mov
mov
in
mov
ja
sbb
aam
sahf
inc
inc
fs
lds
adc
pop
stos
add
test
add
jb
xchg
mov
aas
sub
inc
cld
cltd
clc
leave
xchg
imulb
lock
pop
mov
leave
movsb
xchg
push
stc
pop
mov
xchg
loop
jl
jmp
push
mov
and
mov
incl
sbb
jmp
mov
loope
shll
mov
xchg
sub
imul
out
lcall
cmp
mov
es
add
into
stc
nop
in
xlat
xor
insl
into
lods
lcall
mov
fstl
xor
js
xor
je
xchg
ja
pop
and
mov
jae
mov
pop
les
add
add
cli
mov
ljmp
cwtl
cld
add
test
fnop
lahf
xlat
xchg
mov
imul
or
in
push
sub
sbb
xchg
sub
in
xor
mov
cmp
adc
lret
pop
andl
xchg
pop
mov
pop
mov
push
enter
pop
mov
pop
aad
scas
push
cmp
ss
pop
rol
sar
jmp
lock
repz
pop
mov
jmp
lods
inc
insl
mov
loop
addr16
jbe
pop
sub
add
push
dec
insl
mov
pop
es
jge
leave
inc
ret
push
cmp
adc
fdivrs
mov
movsl
xor
imul
xor
scas
sub
scas
int
outsb
cld
cmp
pop
mov
pop
dec
lret
andb
mov
dec
sub
lret
jmp
in
shl
pop
clc
mov
xor
xchg
and
mov
push
xor
nop
mov
jle
mov
or
orl
sbb
xchg
jg
in
and
in
and
dec
repnz
or
jmp
mov
pusha
push
sbb
adc
cs
mov
jecxz
push
cld
pop
mov
push
cs
loop
in
sti
test
and
or
sub
shl
inc
mov
and
xchg
pusha
mov
mov
shll
lahf
call
daa
mov
dec
cmpsl
mov
orl
pop
push
dec
lret
rcrb
dec
mov
sub
int
cld
mov
test
fadd
cli
xorb
push
sub
int3
xor
or
and
adc
jo
mov
ljmp
lret
mov
call
out
lds
jecxz
dec
cli
cmp
xchg
adc
adc
jmp
add
cmp
pop
jno
cmp
pop
mov
mov
mov
pop
repnz
inc
push
add
sub
sub
movsl
outsl
fs
lock
mov
out
pusha
add
and
sbb
fisttps
orl
xchg
mov
mov
xchg
mov
mov
dec
push
aam
push
jecxz
stc
fdivrl
push
and
stos
jae
aad
xchg
xchg
jne
std
out
mov
in
add
mov
lret
jle
jbe
mov
cli
mov
adc
xlat
test
lcall
mov
ljmp
push
cmp
cmpsl
xor
es
sbb
inc
jecxz
xchg
fs
and
mov
les
mov
cmp
shlb
fcmovnbe
fdivs
lret
mov
aad
dec
imul
das
lods
or
lret
pop
sbb
mov
ret
pop
std
sarl
aad
push
std
jb
imul
cli
or
popa
pop
lret
sub
cs
fwait
je
pop
fwait
pop
mov
mov
dec
shr
jbe
testb
dec
pop
push
fnstcw
push
and
mov
mov
inc
pop
xor
out
mov
sbbb
aam
data16
sbb
xor
mov
jg
pop
test
lods
popa
rolb
cmp
push
push
dec
xor
mov
ljmp
daa
or
pop
scas
leave
or
dec
xor
dec
fists
enter
mov
mov
adc
ja
fsubl
mov
sub
adc
sub
mov
imull
cld
jns
add
push
mov
add
xchg
cmp
jmp
data16
jae
aad
jae
mov
mov
faddp
outsl
sub
jmp
repz
inc
shrl
mov
icebp
xchg
lret
jno
jne
scas
in
or
fs
adc
jnp
addl
inc
xchg
in
cmc
mov
pcmpgtw
add
mov
push
pop
pop
loopne
add
push
pop
lcall
stc
arpl
dec
fs
jo
push
mov
mov
xor
jl,pt
jecxz
in
pop
and
loopne
into
xor
sbb
stc
lods
mov
mov
inc
sti
xor
dec
adc
call
cmp
pop
pop
mov
addl
decl
fldcw
orl
inc
les
mov
outsb
add
mov
loop
jbe
popf
outsl
pushf
mov
sub
in
mov
imul
fnstsw
and
xor
shlb
pusha
sub
shr
add
loope
mov
xor
lret
xchg
jecxz
es
shrb
js
sbb
push
ss
mov
or
cmp
ficompl
push
jbe
xor
push
mov
enter
das
mov
mov
mov
divb
orl
movsb
stos
scas
add
cmp
xchg
pop
mov
fs
ja
in
or
pop
sbb
jno
xor
prefetch
xor
push
lods
jmp
cwtl
bound
inc
jb
std
test
jle
mov
xor
mov
jnp
and
and
pushf
popa
setne
jp
mov
push
pop
adc
xorl
loope
shll
sub
inc
mull
aam
notl
ja
adc
mov
stos
hlt
out
insl
dec
decb
pop
xor
dec
sbb
ja
mov
jns
adc
fmull
jno
cs
push
ss
push
hlt
sbb
sub
mov
aam
nop
pop
ret
popa
cltd
mov
adc
add
cmp
in
mov
and
popa
ret
xchg
fidivrl
add
pusha
pusha
pop
sbb
pop
icebp
mov
inc
repnz
push
push
pop
rcrl
jbe
ds
mov
xor
jmp
mov
sub
mov
shrb
imul
pop
lret
cmp
aas
jg
cmp
xlat
and
cmp
xrelease
das
js
xor
sbb
adc
xorb
mov
xor
xchg
mov
inc
pop
mov
add
andl
and
enter
imulb
jae
inc
lods
cmp
lds
sbb
cmp
scas
fidivrl
outsb
jp
lahf
ficompl
and
out
gs
sbb
cwtl
movsl
mov
mov
fidivs
je
cmp
sbb
lock
jp
test
push
insb
imul
shlb
fildll
sub
mov
sti
mov
jl
fadd
push
sub
lods
pop
pop
sub
jg
shll
pop
stc
pop
pop
jle
out
scas
cmp
jmp
out
or
pushf
push
inc
mov
jecxz
mov
notb
adc
push
sub
arpl
outsl
and
cmp
mov
test
mov
and
cld
xor
out
pop
gs
imulb
outsb
pusha
out
dec
xchg
adc
pop
push
or
mov
pop
stos
test
jle
aaa
popf
pop
in
insb
xlat
daa
out
xchg
cmp
pushf
arpl
and
ja
sbb
test
xor
sti
faddl
add
fldcw
movsl
sbb
outsl
push
jb
mov
push
fdivs
jmp
pusha
jmp
pop
ret
fdiv
fdivs
cwtl
sbb
out
sbb
ljmp
cmp
inc
adc
shll
push
cmpsl
out
jl
xor
mulb
mov
dec
ja
fs
xchg
aam
pop
jb
mov
lret
xchg
dec
in
jg
jge
std
sti
cld
lods
xchg
add
in
jg
andl
push
jno
es
stc
insl
fcmovnb
xor
mov
pop
jae
fwait
repz
adc
ret
and
fnstenv
cli
test
je
mov
cmpb
cmp
push
jp
pop
mov
cli
bswap
je
pop
inc
xchg
ficompl
sbb
int3
lfs
pushf
mov
aam
lcall
xor
dec
out
test
or
iret
int
inc
adcw
xchg
insl
jns
dec
xchg
aam
fbld
mov
xchg
fidivl
enterw
adc
mov
mov
scas
aaa
in
sbb
lret
and
push
pop
inc
movsl
cmp
std
int
sbb
aaa
mov
mov
mov
loope
mov
jecxz
lcall
jbe
inc
gs
push
or
in
insb
movsl
into
mov
data16
xchg
inc
sbb
push
inc
xor
outsl
inc
dec
outsb
lds
mov
aad
clc
stos
push
dec
pop
test
and
stos
xor
lahf
cmp
jle
insb
scas
inc
fdivr
addl
shrb
vminpd
mov
fcmovne
jp
daa
pop
aad
stc
std
pop
xchg
imul
mov
xchg
into
mov
dec
dec
push
or
jle
test
cmpsb
in
adc
inc
jne
loop
xchg
pop
daa
push
pushf
pusha
or
cmpsl
js
jp
push
pop
sbb
inc
icebp
mov
sti
rorl
add
xchg
test
xchg
push
cwtl
pusha
or
icebp
dec
repnz
mov
es
out
jecxz
aam
push
arpl
pop
or
dec
cld
xlat
into
aas
mov
loopne
aam
mov
fwait
test
sub
or
adc
cmp
dec
sbb
mov
inc
dec
stos
inc
int
aam
adc
test
jnp
dec
mov
mov
dec
neg
sbb
in
pop
shll
cs
and
add
ret
mov
xor
iret
lret
fiaddl
mov
mov
fistl
push
push
js
outsl
add
pop
in
jecxz
jp
mov
inc
sbb
jne
fsts
dec
dec
paddsb
push
in
pop
sahf
leave
push
dec
lods
pop
inc
xchg
ljmp
movsl
push
lods
add
xbegin
cld
jmp
sub
aaa
sbb
stc
in
push
imul
fisttps
lods
add
ss
xchg
pop
or
les
mov
cwtl
jecxz
mov
add
scas
inc
loop
xchg
in
insw
fistpl
mov
and
ret
jmp
xchg
jge
sub
int3
sahf
or
aam
mov
sub
jae
cmp
pusha
push
les
ljmp
es
push
shlb
dec
adc
sub
push
inc
aad
aam
push
sub
push
ret
mov
adc
push
into
aaa
mov
leave
dec
stos
bound
scas
stos
outsb
add
mov
xchg
ss
fdivl
xor
push
std
xor
lods
pop
imul
push
mov
pop
and
push
sub
fimull
xor
out
addr16
or
adc
std
cltd
mov
loopne
scas
jne
lcall
pop
mov
insl
inc
jle
fistl
cld
jecxz
jae
lods
mov
add
xchg
adc
xor
xchg
lret
inc
jge
leave
pop
pop
mov
and
fwait
mov
ficoms
test
loop
adc
mov
mov
fwait
notb
adc
lret
pop
mov
test
cltd
mov
xor
lea
mov
dec
andb
mov
ud2
mov
ficoms
push
add
sahf
push
or
cmpsb
aas
lock
push
out
jno
movsb
mov
bound
icebp
inc
mov
cmp
fs
mov
mul
lock
sub
std
jb
sbbl
add
pop
dec
add
insb
and
mov
and
dec
loop
out
adc
aad
cwtl
icebp
das
scas
add
stc
loopne
mov
je
shr
nop
cmc
pop
sub
les
call
lret
notb
sbb
push
notb
xchg
ljmp
rcr
mov
dec
xchg
rcll
stos
insb
std
jnp
in
push
sub
data16
mov
push
out
jecxz
cli
adc
fldenv
jmp
fbld
mov
mov
data16
mov
call
lods
mov
xchg
sub
mov
sbb
mov
ds
dec
push
lock
fwait
ret
and
xchg
je
cwtl
inc
repnz
notl
outsb
test
cmp
in
pushf
sub
mov
scas
fucomi
hlt
fwait
imul
cmpsl
int
jp
iret
dec
scas
fucomi
mov
inc
test
xchg
addr16
mov
jle
pushf
mov
bound
insl
movsl
pop
cwtl
inc
test
inc
test
jnp
loop
fldl
jmp
mov
fmulp
dec
daa
in
sub
pop
out
cmp
divb
cmp
fadds
xor
mov
and
xchg
mov
in
and
sub
pop
cmp
dec
cltd
add
popa
pop
shrd
dec
pop
fisubrs
xchg
mov
loop
frndint
inc
pop
hlt
sub
jns
adc
add
inc
push
rcrb
cltd
fldenv
fstps
push
into
sbb
xchg
mov
shl
adc
adc
xchg
jg
out
pop
rcl
inc
pop
dec
jl
push
or
inc
jecxz
dec
ss
loope
mov
int
mov
es
push
jle
es
lods
xchg
addl
negb
es
dec
pop
mov
lds
xor
jle
mov
mov
push
inc
mov
push
jmp
pop
lock
movsb
scas
in
lret
dec
xchg
cltd
ss
ja
mov
pop
dec
ds
dec
mov
popf
dec
shrl
mov
ja
adc
jp
xor
lds
in
stos
adc
cmpsb
and
aam
mov
push
xor
repnz
test
sub
mov
sbb
cltd
push
pop
out
pusha
pop
clc
scas
pop
js
sbb
stos
cld
jg
in
subl
rcr
sbb
cmc
xchg
jnp
iret
pop
push
mov
mov
sub
push
inc
add
dec
aad
jl
aas
mov
ja
arpl
idivl
xchg
stc
mov
dec
mov
sbb
lods
adc
pop
mov
mov
push
pop
adc
dec
mov
imul
gs
push
iret
shrl
adc
inc
adc
and
lea
jne
notl
loop
xor
pop
rol
xor
mov
push
insl
mov
loopne
inc
push
rcl
xchg
add
sub
xlat
cmp
lds
sbb
mov
imul
sahf
mov
cli
xor
scas
cmp
dec
leave
mov
sbb
dec
adc
xlat
and
jg
insl
lock
stos
leave
cmpsb
mov
out
xor
fmuls
andl
jl
inc
mov
mov
xchg
out
divl
jnp
sbb
lock
cmp
sub
ja
loop
out
je
iret
dec
test
dec
orb
faddl
push
dec
daa
loope
movsb
jp
sbb
jg
pop
ds
xchg
rorb
xor
fsubp
mov
jmp
and
leave
push
mov
pushf
mov
jb
jbe
js
leave
xchg
push
add
mov
adc
mov
cwtl
xor
mov
pop
repnz
mov
es
aaa
das
cld
leave
and
push
inc
sub
ret
dec
aad
cmp
pop
cmp
call
sub
jns
scas
mov
pop
and
ret
xor
mov
stos
pop
bnd
push
pop
pushf
or
push
xlat
std
xchg
test
sub
add
xor
insb
es
mov
mov
outsl
int
pop
sbb
lret
je
insl
fldenv
das
mulb
push
pop
xchg
jecxz
mov
scas
xchg
ljmp
xchg
js
fwait
jmp
daa
in
out
lods
iret
cld
xor
cmp
fistl
mov
add
push
push
lods
sbb
mov
je
adc
popf
lods
pop
fnstcw
inc
bound
adc
mov
and
lret
out
sbb
add
add
in
lock
jge
push
fbstp
xlat
sbb
hlt
and
and
test
jno
insb
and
movsb
adc
jle
cmp
mov
notl
das
pop
in
cld
jns
push
std
popa
in
pop
loope
sbbl
push
ja
mov
jae
mov
mov
cmp
or
fdivrs
add
icebp
adc
lcall
mov
mov
mov
jo
inc
or
inc
mov
outsb
rcrl
pushf
not
jl
stc
cmpps
fwait
into
rcrb
out
mov
out
icebp
mov
mov
mov
inc
xchg
iret
sysret
ds
bound
sub
test
les
or
fs
mov
jne
lret
cmpsl
out
bnd
mov
push
arpl
imul
aam
rcrb
jbe
mov
add
push
mov
pop
pop
xor
push
pop
jne
add
loop
push
cmp
xor
xorb
fistl
aam
popl
frstor
jns
outsl
lret
pop
lods
mov
mov
sbb
loope
sbb
push
xlat
pop
movsl
pop
push
and
dec
std
mov
lcall
inc
xchg
mov
mov
pusha
xor
mov
jbe
jo
dec
mov
inc
and
popa
sbb
pop
test
add
cmp
int3
sbb
inc
aas
shrl
imul
mov
dec
xlat
or
pop
outsb
cmp
loope
or
roll
hlt
out
mov
repnz
ds
enter
rcrb
sbb
add
push
mov
push
mov
mov
ja
jle
es
add
fstl
mov
or
ds
bound
loop
cmpsl
aam
jge
es
cld
xchg
sub
sbbb
mov
add
dec
add
mov
inc
xchg
mov
dec
sub
lds
mov
pop
xchg
and
in
lcall
or
push
inc
add
mov
mov
mov
xchg
rcrl
popa
call
and
mov
mov
shl
push
or
adc
inc
movsl
enter
arpl
mov
pop
pop
fisttps
pop
inc
out
lret
jne
add
and
adc
repz
lock
test
dec
std
loope
stos
inc
sub
cmpsl
cmpsl
mov
add
lcall
cmp
jo
das
insb
fwait
and
pop
push
lods
pop
sbb
or
sub
push
mov
lds
aaa
mov
jg
mov
pusha
int
xor
lods
dec
adc
mov
xor
test
loopne
imul
sbb
fiaddl
adc
mov
xchg
scas
fistpl
push
jbe
jp
pop
cmp
test
loopne
or
out
cmp
adc
xor
int3
dec
and
xchg
and
lds
xchg
pop
gs
enter
mov
mov
xor
iret
push
hlt
and
lret
xor
jb
xlat
adc
imul
stos
les
sbb
insb
orb
dec
xchg
repz
jmp
loope
hlt
xchg
imul
lods
shlb
xchg
cwtl
mov
je
mov
cmp
insb
ret
dec
push
fsubrl
push
mov
in
in
jp
inc
dec
addr16
or
mov
xchg
mov
fucomp
into
dec
loope
or
mov
lahf
cli
xor
fisttps
xchg
xchg
jg
lea
andl
test
push
cmp
push
cli
out
pop
sub
ja
lcall
clc
mov
pushf
enter
push
scas
xchg
jbe
repz
inc
mov
idivb
imul
lock
lcall
rcl
iret
je
push
in
aad
mov
dec
or
sbb
fucom
xor
scas
out
mov
xchg
mov
push
mov
out
push
fxch
or
jns
jnp
or
xchg
pop
ret
loopne
cmp
jp
jge
imul
iret
cli
cmpsb
ror
cmc
inc
daa
popf
ja
mov
leave
add
cmc
mov
stc
addr16
jmp
sahf
sub
xor
stos
or
out
mov
outsb
mov
fistpll
daa
mov
inc
imul
ficompl
lea
add
adc
cmp
cmp
xor
add
jns
test
mov
or
es
mov
push
test
ljmp
adc
fisubrl
aam
mov
jmp
xchg
pop
xchg
popa
mov
and
cltd
xor
adc
mov
inc
shll
sbb
push
inc
outsl
push
movsb
mov
addr16
cmc
xor
ret
mov
addb
sbbb
pop
inc
pop
pcmpgtd
adc
rorb
mov
int3
xchg
jge
sub
and
sti
pop
int
push
sbb
xchg
loope
mov
inc
pop
out
sti
loop
rorb
add
movsb
fidivrs
and
push
jp
mov
shrb
leave
fisubs
inc
or
xchg
and
mov
jle
push
stos
xor
dec
icebp
leave
dec
je
dec
movsb
xchg
ret
mov
or
shl
lock
push
ljmp
mov
jge
repnz
sbb
inc
and
push
fisubs
in
call
pusha
and
fisttpl
sbb
mov
dec
xor
mov
mov
test
mov
dec
shll
shll
imul
out
jecxz
lahf
push
add
lahf
shrl
repz
push
dec
adc
or
jl
push
mov
scas
into
scas
in
test
jne
cmp
push
popf
fwait
repnz
pusha
sbb
or
cmp
stos
pop
mov
stc
add
loop
sub
xchg
jne
arpl
stc
sbb
jmp
xchg
xor
stos
shrl
pop
or
iret
test
jl
mov
dec
call
pop
mov
and
daa
in
in
call
jg
jecxz
jp
out
xchg
mov
shrl
sub
push
js
js
ds
xchg
call
push
sbb
aas
scas
mov
dec
fiaddl
mov
pushf
xchg
jbe
decb
xchg
jmp
sbb
xor
adc
and
lahf
mov
mov
add
stos
stc
fwait
jae
stos
sti
dec
mov
xchg
rcl
add
popf
xlat
dec
jl
sub
into
jmp
pop
cmp
sahf
jne
ret
sub
out
jns
push
pop
mov
push
outsl
jne
idivl
rcrl
dec
mov
repz
mov
arpl
stc
jecxz
push
xlat
enter
pop
popl
stc
repnz
loop
into
jp
ds
push
add
mov
out
inc
sahf
cwtl
mov
pusha
scas
pop
cmp
xor
int
pusha
sbb
xchg
js
jae
je
sub
inc
cmp
sbb
mov
out
clc
xchg
pop
cmp
fcoms
out
dec
pop
mov
pop
das
aam
mov
lret
stc
stc
inc
mov
enter
loopne
and
mov
icebp
mov
mov
cltd
loope
in
sub
xor
out
xchg
xor
adc
enter
xor
rolb
rcrl
mov
push
mov
sub
js
jns
add
ljmp
icebp
and
inc
out
inc
or
fiaddl
insb
mov
test
shrl
inc
mov
movsl
cmp
in
xchg
in
icebp
push
jne
fisubrs
fucomip
add
movsl
rclb
xchg
jge
ret
out
in
call
outsb
cmpsl
fwait
aaa
xor
daa
inc
mov
push
xchg
lahf
sti
xchg
out
cmp
arpl
lahf
pop
cmpsl
bound
sbb
dec
cltd
repnz
les
outsl
inc
cwtl
fwait
mov
jno
sbb
jnp
ret
mov
andl
ret
sbb
pushf
push
arpl
pop
nop
sti
inc
jno
jo
fisubrl
inc
lock
ss
shll
add
push
loopne
pop
pop
pop
aas
sub
and
rcrb
jb
call
and
lret
push
push
or
dec
push
roll
in
push
lods
or
inc
js
pop
push
clc
stc
inc
fimull
arpl
adc
inc
push
pushf
icebp
test
push
or
mov
sahf
jne
fcoms
sub
jg
push
adc
cmp
push
inc
movsl
sub
aad
fstpt
xchg
push
cltd
out
mov
sbb
fildll
fistl
mov
ret
icebp
std
es
lret
iret
cmp
jno
pop
xchg
mov
mov
test
adc
dec
leave
jge
and
xor
loope
xor
cld
andb
jnp
jmp
and
and
int
sbb
aam
cmpb
out
cmpsl
js
push
fsubrl
hlt
out
stos
ds
js
or
adc
inc
mov
push
sbb
xchg
cli
mov
jb
repnz
pop
push
push
daa
in
jecxz
popl
or
aam
insb
sub
cltd
xchg
add
js
inc
add
lds
sub
pop
xlat
sub
add
fildll
xor
mov
inc
mov
arpl
shrl
sbb
fwait
stos
je
adc
pusha
ret
fcoms
push
jbe
out
les
negl
daa
sbb
push
adc
loope
not
mov
jnp
adc
sub
sbbb
xchg
enter
mov
ds
dec
cltd
or
jecxz
xchg
jl
push
mov
les
je
dec
dec
shlb
lret
and
adc
lock
hlt
filds
movsl
add
adc
xor
aad
and
sbb
mov
into
out
jecxz
scas
push
xchg
leave
ss
jl
stos
lods
dec
enter
cld
cmp
aad
iret
mov
jmp
inc
add
pop
push
mov
loope
bound
bound
mov
cs
cmc
inc
cmp
xor
add
adc
inc
mov
jg
and
cwtl
xchg
add
movsl
jbe
pop
in
outsb
test
push
repnz
fldenv
sub
mov
neg
int3
and
sbb
jo
cld
xchg
stos
adcl
cltd
loopne
cmp
arpl
push
mov
ret
iret
add
fisubrs
mov
and
push
fst
inc
sbb
cmp
loop
xor
scas
xchg
pusha
dec
in
jecxz
pop
das
xor
cmp
adc
adc
icebp
in
movsb
rcrb
push
push
pop
daa
pop
adc
cmc
pop
dec
push
sub
test
mov
jl
stc
aam
mov
icebp
dec
cld
jmp
dec
cs
shlb
scas
lcall
aaa
inc
call
xor
data16
xor
pop
sahf
pushf
xor
sub
sub
dec
cmp
cmp
or
or
push
dec
mov
movsl
add
dec
add
or
jg
in
xchg
popa
mov
mov
or
into
push
or
jb
int
nop
or
fldl
or
mov
leave
jb
xchg
xchg
adc
ja
in
push
dec
cmpb
xchg
pop
mov
mov
sbbb
cmp
xchg
jb
cwtl
stos
stc
cmovb
add
cmp
push
aam
mov
xchg
rorl
xchg
sbb
or
add
loopne
shrb
js
out
xchg
test
pushf
pop
jecxz
add
xchg
bound
jnp
pop
sbb
repz
xchg
repz
mov
sub
movsb
adc
in
aad
jl
pop
call
mov
call
sub
mov
es
fucomip
dec
ret
shlb
cmp
jo
rcrb
pop
cmpsb
or
inc
and
test
xchg
in
dec
int
xor
adc
fsubp
add
jle
pop
pop
pushf
or
inc
pop
lret
lock
lds
test
xchg
fsub
mov
sti
push
inc
mov
jmp
lcall
call
test
push
int3
fists
mov
mov
lret
jmp
repz
mov
lock
pop
or
test
mov
ja
pop
mov
mov
and
ljmp
mov
adc
push
jbe
out
dec
sub
push
push
xor
movsl
jbe
in
repnz
data16
jbe
scas
dec
iret
ljmp
sbb
loop
loop
pop
cmc
rcrb
mov
lahf
mov
or
inc
xor
or
jo
pop
sbb
jle
ss
int
adc
psllw
sbb
pop
push
je
adc
jl
jno
jbe
pop
adc
pop
insb
pop
leave
stos
not
add
mov
pop
mov
sbb
xor
popf
xor
pop
or
loopne
jbe
xor
xorb
loopne
jo
inc
lods
lods
jmp
add
or
push
cwtl
and
push
mov
or
dec
sti
call
push
pop
in
and
lcall
push
shll
icebp
xchg
pop
jg
add
mov
in
add
arpl
add
je
inc
sbb
orb
stos
clc
insb
shlb
inc
cmp
repnz
test
lods
pop
add
inc
test
pop
fdivrs
xchg
lds
enter
pop
mov
mov
push
iret
jne
push
push
sbb
jae
out
aad
mov
aas
jns
jl
xor
jge
adc
add
lds
fnstsw
mov
fmuls
pop
inc
inc
inc
dec
mov
fucomi
mov
ret
pop
fbld
call
test
ss
xor
and
push
sbb
cmp
xor
test
ss
add
jl
adc
mov
xchg
cmpsl
out
rclb
or
ljmp
cmp
xchg
push
loope
loopne
xchg
aaa
sub
cmp
pop
sbb
aad
inc
jno
gs
pusha
jp
je
gs
lods
add
jb
mov
lods
test
aad
and
cwtl
adc
and
in
xor
push
andl
test
dec
and
push
add
push
cmpsl
nop
xchg
xor
test
push
dec
jb
push
nop
push
int3
mov
xor
and
dec
mov
push
rcrl
cli
lret
loopne
cmpsb
xchg
inc
inc
jo
xor
cmpsb
jp
adc
mov
dec
ret
add
movsb
daa
clc
lahf
aaa
inc
aad
js
ja
divl
cmp
aam
adc
pop
mov
xchg
and
test
out
pop
decb
adc
iret
pop
cmp
sub
and
mov
and
jno
enter
rcrb
dec
in
out
cmp
cmc
int
inc
mov
inc
xchg
jp
fwait
mov
cmp
icebp
out
ret
mov
enter
push
nop
lods
sbb
sbb
faddl
and
xchg
inc
push
or
inc
repnz
mov
pusha
dec
dec
dec
xor
fcomps
jecxz
push
mov
scas
jmp
cmpsb
mov
ds
test
push
lret
adc
inc
js
jl
fnstcw
je
xchg
mov
ds
push
mov
sbb
cmpb
pop
js
jo
sub
mov
mov
jno
jne
push
lea
fsubs
in
sbb
or
ret
es
fmull
cs
push
jmp
adc
std
xor
std
rcll
jns
loop
dec
lret
jnp
mov
mov
mov
sub
xchg
jbe
jbe
notl
mov
xchg
or
jbe
sbb
adc
aad
mov
repnz
pop
pop
or
mov
jae
mov
out
dec
loopne
push
and
repz
aad
movhps
inc
cmp
sarl
pop
and
jnp
rolb
mov
popf
inc
jge
jnp
lret
ss
data16
mov
jl
repnz
rcl
call
xchg
mull
add
dec
inc
add
jo
testb
push
mov
mov
adc
adc
inc
in
mov
bound
cli
fcmovbe
xlat
filds
jp
mov
addr16
cmp
push
sbb
clc
mov
cmp
jg
nop
mov
je
outsb
xchg
aam
mov
dec
cmp
fdivrl
scas
or
call
xor
out
insb
xchg
ret
cmp
int3
gs
add
sub
add
mov
pusha
cmp
imul
rcll
shll
mov
push
jge
push
push
sahf
and
gs
aam
test
cmc
mov
mov
sub
shll
sub
xlat
adc
sahf
ljmp
ret
iret
or
test
push
add
shlb
lret
lea
mov
notb
pushf
imul
int
lds
mov
inc
scas
addr16
sti
cmpl
mov
clc
jl
push
xorl
sub
mov
mov
pop
nop
adc
addb
cmp
pop
hlt
out
inc
leave
mov
enter
mov
mov
jno
cltd
int3
fs
xor
mov
cmp
and
cwtl
sbb
add
inc
loop
testb
jp
in
test
cmp
addr16
pop
jmp
pop
add
iret
arpl
fadds
stos
test
out
push
dec
pushf
sti
xor
imul
fstpt
mov
popa
stc
mov
fdivrp
and
sub
movsl
inc
out
dec
sub
das
and
add
cld
push
jmp
push
mov
xor
xor
jg
inc
push
and
fsts
les
cmp
cmpsb
imul
movl
leave
xchg
pop
out
mov
pop
mov
loope
repnz
lods
fnstcw
nop
dec
or
into
xchg
ret
jle
loopne
or
fldt
xlat
or
mov
jo
iret
pop
pop
loope
orb
sahf
loopne
mov
mov
leave
ljmp
rolb
mov
fidivl
jae
jmp
pop
loop
das
inc
push
sub
push
mov
jg
int3
xor
and
mov
test
test
dec
lock
jno
xor
fcomps
sahf
cwtl
pop
lret
bound
ret
xchg
and
lock
or
or
repz
add
mov
jbe
dec
cmp
rclb
and
mov
rcll
mov
cs
jg
sbb
scas
mov
mov
insl
out
shr
pop
icebp
and
lock
pop
mov
inc
dec
leave
das
sti
test
jae
jp
mov
or
test
push
mov
in
scas
jl
pusha
int
arpl
aad
js
rcrl
ja
mov
cmp
and
cmp
test
dec
es
rcll
popf
xor
lods
or
mov
imul
lds
jbe
je
and
adc
int3
push
push
ret
inc
stos
and
mov
lock
cmpsb
sahf
xchg
sbb
call
stos
bound
pop
xor
negl
cmp
mov
cld
scas
cmpsb
and
lea
push
popa
roll
xchg
or
jecxz
jl
jbe
adcl
mov
inc
in
mov
jg
mov
adc
in
mov
sbb
mov
stos
sub
and
out
xorl
stos
jns
lock
mov
mov
call
pop
cmp
xchg
cmpsb
jecxz
jno
sbb
movsb
dec
or
and
popa
nop
insl
imul
fs
pop
std
std
jno
mov
xchg
scas
jae,pt
mov
arpl
jl
imul
filds
in
xchg
add
into
inc
idivb
pusha
ljmp
cmp
pop
or
adc
or
outsb
add
loopne
push
push
lods
loop
xchg
in
fsubl
mov
mov
fisttpl
sub
adc
aaa
fldenv
xor
iret
xor
aad
inc
das
mov
into
popa
scas
mov
fucom
push
dec
into
jns
test
and
js
js
xor
push
add
dec
sub
std
and
stos
shl
cmp
push
push
nop
hlt
lahf
mov
jecxz
es
outsl
stos
fildll
adc
jmp
sub
sbb
push
mov
sub
cmp
ljmp
scas
jno
jnp
lahf
mov
in
je
fwait
xchg
mov
in
icebp
and
mov
scas
mov
lret
icebp
pop
pop
cli
inc
rclb
sbb
dec
sbb
pop
dec
shlb
adc
lock
sti
std
lds
adc
sub
xor
ret
insb
mov
jb
inc
aaa
jecxz
frstor
pop
dec
mov
mov
fidivrl
dec
rcl
xchg
jbe
imul
in
sub
mov
es
rol
loop
cmp
lret
jae
xchg
clc
xchg
or
movsl
and
sti
stos
movsb
adc
push
out
incl
add
mov
rcll
inc
push
dec
pop
and
loopne
push
jl
lret
or
push
sbb
gs
xchg
adc
cs
mov
dec
pop
mov
js
in
sbb
stc
pop
lods
cmp
testl
cmp
sbb
jg
add
jb
cmp
push
jb
adc
dec
aaa
pop
imul
sbb
sbb
push
xor
xor
cmp
jae
or
cmp
add
push
xor
popf
out
enter
inc
xchg
sub
jbe
inc
test
and
pop
add
sub
bound
repnz
leave
mov
out
mov
and
jge
pop
ds
repz
xor
dec
aas
and
stc
cmp
lods
or
jae
iret
mov
jo
mov
push
push
stc
sub
gs
jae
rcl
jae
sbb
xor
cmp
je
or
push
sti
imul
call
push
push
push
mov
dec
sub
pop
inc
arpl
sbb
lods
add
test
cmp
gs
mov
xlat
cmp
dec
mov
sbb
out
pop
jg
test
jge
and
ss
inc
enter
xchg
dec
ja
jecxz
jne
repz
mov
cmpsl
mov
insb
dec
cwtl
cmove
inc
mov
add
test
rolb
and
inc
sahf
push
repz
test
fsubl
outsl
mov
repnz
fstl
lea
add
int3
adc
mov
cmp
popf
xchg
lds
sahf
lret
dec
mov
rolb
andb
in
testb
and
bound
data16
xor
popf
rolb
jns
and
jb
int3
es
or
add
incl
and
gs
xor
sti
mov
or
dec
test
sbb
jmp
js
sbb
jg
pop
imul
xchg
inc
les
sti
and
pushf
leave
js
xor
imul
shll
dec
cmpsb
add
sbb
or
pcmpeqb
cld
gs
fldl
push
mov
inc
fmuls
add
jle
sub
int
scas
ds
cmpsb
pop
push
sahf
jae
cs
push
clc
xchg
aam
adc
or
jge
xchg
xchg
cmpsl
sub
hlt
or
cmp
movsl
or
dec
and
pop
lahf
adc
std
fsts
jne
cltd
aaa
mov
xlat
pop
pop
pop
jbe
gs
jne
cmp
sbb
arpl
aaa
setp
ret
out
mov
fimull
sbb
jp
js
pop
lcall
or
rorl
leave
aad
cmpl
xchg
dec
psllw
es
xchg
pop
rcrl
dec
cs
mov
imul
adc
cmp
aaa
adc
push
sub
xor
test
pop
ds
cmp
dec
loopne
jle
sub
jecxz
cmp
push
jns
mov
cmpsb
xchg
out
in
sub
cmp
rclb
mov
mov
or
aad
dec
inc
leave
jmp
test
inc
cs
sub
lret
push
inc
push
xor
mov
into
push
xorb
jle
mov
push
addr16
add
rorb
mov
test
sbb
fsubl
out
movntq
xlat
xchg
jns
lahf
fcmovne
icebp
xchg
test
decl
enter
stc
into
out
xchg
or
jnp
mov
je
ret
jle
in
lods
neg
das
fbstp
and
fs
push
or
call
outsb
gs
jge
push
sbb
cli
pop
sbb
inc
daa
lods
cmpsb
shlb
mov
xchg
call
inc
imul
sub
mov
or
pop
je
add
gs
adc
xor
rcrl
cmp
in
add
sbb
cwtl
jnp
ss
insl
inc
xor
dec
shl
into
push
sub
add
mov
jmp
dec
cmp
inc
add
test
fcomps
or
rcll
xchg
jb
call
add
jns
sub
std
jge
ljmp
std
jno
jg
mov
sbb
pop
push
adc
shr
adc
push
aam
pop
mov
sbb
test
cmp
cmpsl
lahf
sbbl
sbbl
or
andb
icebp
jo
adc
xchg
fldt
mov
push
push
xor
sub
and
imul
rolb
and
inc
imul
leave
mov
push
lret
xor
cmp
hlt
aaa
mov
lcall
mov
xchg
test
push
sbb
pop
fwait
aaa
popf
jle
pop
andl
mov
sub
and
adc
pop
outsb
sub
jge
pusha
pop
mov
pop
xchg
push
push
jo
sub
mov
and
sarb
and
push
or
xchg
xor
push
push
sub
pop
ljmp
js
sub
mov
pop
into
sbb
scas
inc
btl
int
sbb
pushf
adc
mov
xor
stos
loopne
stc
add
cwtl
arpl
ret
fadds
icebp
mov
sbb
xchg
jl
loopne
sbb
xchg
mov
js
in
or
cmpsl
shrl
lea
popf
lods
push
xor
mov
ret
das
xor
loopne
jg
adc
lods
cmp
fwait
jo
adc
dec
sbbb
fs
mov
dec
lahf
add
hlt
fisttpl
jno
jae
cltd
cmpsl
dec
shlb
or
inc
fdivrl
pop
mov
movsl
ror
ja
testb
mov
cwtl
mov
sub
gs
mov
out
mov
dec
fidivrl
gs
mov
std
add
jp
fcoms
add
dec
sub
std
jle
push
sbb
ja
les
mov
mov
push
sbb
push
cmp
mov
shr
fwait
imul
mov
adc
pop
adc
jno
inc
ret
into
fcompl
shll
adc
or
jbe
mov
sbb
sub
cmpsb
mov
mov
ljmp
sub
mov
cmpsl
jmp
scas
inc
ljmp
cltd
xor
jmp
jl
pop
arpl
mov
inc
sub
inc
mov
sbb
dec
bswap
sti
das
xor
pop
push
shl
mov
or
dec
mov
andl
lret
cltd
adc
xchg
shlb
test
imul
sub
xchg
out
jp
push
inc
out
sbb
and
outsb
lods
movsb
sti
cmp
inc
cli
test
cmp
clc
subl
scas
call
lret
inc
cld
or
in
or
rcr
int3
push
or
push
adc
jmp
push
adc
icebp
sub
push
xchg
mov
dec
inc
imul
call
push
mov
xchg
imul
sub
sub
std
jns
paddsb
mov
adc
jns
adc
xor
in
leave
insb
mov
dec
gs
jne
sub
jno
xor
pusha
mov
or
push
mov
enter
add
cltd
aad
std
aaa
sbb
cwtl
inc
push
or
js
daa
jle
xchg
lods
xchg
ret
jbe
nop
out
cmpl
fnstenv
cmc
jl
into
mov
insl
leave
lcall
adc
xchg
push
enter
test
icebp
sub
shl
lret
inc
test
divl
jge
and
imul
arpl
cmp
clc
xchg
mov
stos
inc
or
pop
push
push
popf
mov
repz
mov
xor
push
cmp
cli
pop
cltd
hlt
lds
or
pushf
cmp
jl
cmp
xchg
les
fcoml
int3
outsb
inc
inc
popl
bound
pop
loope
jnp
std
xchg
stos
add
or
jo
mov
sbbl
cmpsb
repnz
aas
std
sub
mov
jecxz
jge
sti
mov
aaa
xchg
ljmp
outsl
ljmp
aaa
sbb
add
out
outsl
inc
xor
je
mov
jbe
adc
mov
dec
or
loopne
lock
sahf
int3
cmp
adc
movsb
mov
je
and
int3
sbb
inc
adc
push
dec
jnp
adc
and
ds
mov
ret
outsb
mov
sti
xchg
sub
mov
test
sub
out
jg
call
add
js
cmc
push
imul
mov
repz
mov
popa
jl
sahf
stos
bound
mov
arpl
dec
cwtl
xchg
add
dec
pop
leave
fimull
mov
sbb
push
dec
add
dec
jmp
mov
repnz
mov
fwait
mov
pop
mov
adc
mov
arpl
fcmovnb
push
xchg
dec
imul
rcl
loopne
jb
in
mov
outsl
mov
icebp
popa
sahf
test
fdivs
dec
insl
push
mov
mov
inc
subl
rolb
mov
xchg
ja
repnz
sbb
pop
inc
xor
aaa
loop
jo
fcmovnu
inc
mov
pop
xorl
push
data16
pop
fcoms
mov
add
sub
std
bound
in
lds
repnz
fs
inc
popf
pop
push
sbb
xor
adc
ja
xor
test
ja
repnz
lock
rcll
bound
movsb
out
in
dec
in
outsl
imul
into
sub
jns
push
lcall
fst
mov
push
pop
dec
and
fsts
mov
mov
sub
mov
mov
push
inc
jo
popa
xchg
out
mov
add
scas
mov
mov
adcb
mov
lret
popf
cmp
pop
dec
ja
pop
cmp
test
cli
ds
mov
data16
cld
shrl
push
ficomps
pop
push
filds
mov
adc
jecxz
mov
clc
pop
mov
jmp
sbb
pushf
push
idivl
sbb
sbb
loopne
ret
mov
cltd
rorb
cltd
adc
bnd
aas
inc
pop
imul
bnd
aas
mov
das
cmc
dec
js
lret
xchg
in
pop
mov
sbb
mov
xor
sbbl
out
mov
push
or
cmpsb
mov
test
jns
arpl
and
or
xchg
mov
shll
sbb
xchg
andl
cmpsb
push
nop
sub
sahf
sbb
jge
add
sahf
cmp
pop
fnstcw
mov
add
dec
jecxz
ja
enter
lahf
jo
mov
cmp
push
adc
cmp
mov
cmp
inc
add
aam
inc
mov
jns
call
sbb
jne
in
xchg
mov
push
xchg
adc
mov
cs
cmpsl
cmp
inc
inc
int3
ret
mov
loope
jno
hlt
dec
push
lea
jbe
sarb
popa
pusha
loope
push
jmp
dec
sub
dec
aam
mov
out
inc
outsl
mov
push
or
leave
dec
or
cmp
dec
mov
imul
xor
mov
xchg
cmp
stc
sbb
call
jle
mov
outsb
pop
pop
cmp
cltd
jbe,pt
adc
out
gs
std
xchg
ror
shll
movswl
test
mov
sbb
int
lods
hlt
int
popf
fsts
or
and
clc
mul
dec
or
adc
jp
ds
sub
cs
popa
lret
or
insb
pop
hlt
jge
xchg
subl
ss
je
jno
popa
nop
jno
jne
pop
mull
scas
mov
loope
mov
push
in
sbb
leave
push
pop
insb
inc
mov
mov
cmp
jae
dec
inc
mov
iret
jne
sti
inc
popa
pop
mov
repnz
inc
add
mov
adcb
dec
add
ja
addr16
in
dec
sbb
cmp
xlat
sbb
rcrb
or
mov
outsl
cmpsb
push
add
cmp
mov
arpl
cli
jo
stos
cmp
test
stos
nop
ret
addl
mov
sub
scas
xchg
mov
mov
push
inc
xor
insl
push
dec
and
in
cmp
call
dec
int3
clc
sub
insl
lret
adc
sarb
fisubs
test
out
aam
pop
adc
or
sti
jne
cmp
pop
fptan
pop
mov
aas
sbb
or
nop
cltd
sbbb
add
jmp
adc
pop
xor
or
leave
mov
cli
fists
jl
ror
cld
add
test
push
stc
jecxz
add
mov
dec
iret
mov
lret
or
subb
ljmp
xlat
sbb
jecxz
jb
ljmp
and
xor
stos
or
movsb
xchg
daa
inc
addl
sub
or
add
xor
cmpsl
shrb
dec
push
aad
xor
jmp
mov
push
push
cmpl
and
mov
mov
sahf
dec
jp
fs
mov
pop
mov
fsin
pop
xlat
fsubp
mov
pop
ss
bound
mov
and
xor
pop
jno
mov
xchg
addl
test
fstl
cmp
add
lods
cmpsl
mov
mov
sub
mov
test
mov
scas
push
sbb
lock
popa
sub
es
jmp
icebp
cld
cs
lret
xlat
pop
out
ss
adc
or
sahf
daa
mov
fisttpl
push
cmpxchg
mov
call
mov
fs
pushf
test
es
sarl
fistpl
xorb
fnstsw
cwtl
cmp
adc
jno
dec
jbe
test
ret
xor
fistps
xlat
add
pop
scas
push
jmp
inc
fwait
mov
inc
or
pop
out
fsubrl
pop
push
cmpsb
stc
insb
mulb
mov
push
add
mov
cmp
add
inc
icebp
jl
aad
pusha
in
or
mov
inc
sub
jo
xor
xchg
pusha
loop
andb
inc
lahf
jge
std
hlt
out
sbb
test
jne
fdivs
dec
inc
xor
mov
icebp
pop
mov
out
test
arpl
or
mov
sub
stos
mov
subl
movsl
cmp
or
std
mov
jl
sbb
adc
and
and
lods
sub
cmp
cmp
insl
rolb
push
jl
add
les
xchg
push
sbb
in
js
nop
arpl
dec
adc
icebp
adc
imulb
xchg
push
lcall
lock
mov
mov
mov
in
push
xchg
pop
pop
lcall
iret
xchg
lods
loopne
aad
push
or
lret
add
inc
mov
clc
iret
loope
popf
repz
mov
divb
test
pop
enter
and
je
daa
cmp
orb
mov
jns
jbe
xchg
xchg
pop
and
mov
jno
loope
add
pusha
mov
fwait
cmpsb
push
cmp
pop
mov
bound
add
xchg
jle
rcrb
mov
or
mov
push
orb
movsl
vandnps
pop
xchg
inc
test
fwait
movsb
jo
xor
adc
test
cmp
je
sahf
mov
les
pop
jb
inc
pop
sbb
xchg
fdiv
mov
out
mov
loop
adc
lahf
or
enter
pop
mov
inc
inc
xchg
int
jae
sub
jp
sti
xlat
mov
push
inc
mov
xchg
mov
adc
mov
or
ret
push
cs
icebp
sub
mov
mov
or
fsubl
into
mov
fldcw
scas
cwtl
bound
movsb
sub
lret
mov
jnp
fmull
dec
aas
outsl
add
mov
mov
scas
cmp
mov
sbb
test
ja
push
dec
int3
push
mov
inc
int
cld
xlat
lods
sub
push
cmpsl
lret
imul
pop
cltd
mov
push
push
stos
jle
adc
and
outsl
test
roll
push
and
insb
lahf
insb
cltd
neg
or
dec
inc
pop
dec
mov
xor
push
lret
push
push
shlb
or
xchg
adc
xchg
out
shl
clc
mov
insl
aaa
stos
fwait
jecxz
push
or
fdivrl
jb
aam
clc
xor
bound
pop
in
add
test
fmul
mov
les
shll
jno
mov
mov
daa
xor
shl
ljmp
setno
push
or
push
sub
pop
das
sub
cmp
rorb
std
iret
iret
cmp
pop
lds
xor
adc
lret
push
pop
daa
dec
push
cmpsb
lahf
loope
int3
mov
hlt
fisubrs
jg
push
push
add
dec
push
mov
inc
sbb
or
add
push
cmpb
sub
aad
push
cmpsb
flds
push
xor
cs
mov
pop
mov
jle
xor
in
and
ljmp
shrb
mov
fdivl
addr16
push
scas
push
sbb
mov
dec
test
and
xchg
mov
jns
cmp
sub
adc
xor
dec
xchg
sbb
jae
mov
xchg
push
fs
loope
mov
add
cmpl
adc
inc
sub
mov
push
jge
sbb
mov
popf
or
inc
fisubrl
mov
sbbb
sub
hlt
cmp
aad
cld
mov
mov
dec
push
push
icebp
inc
shlb
cmp
mov
push
mov
imul
xor
mov
inc
cmp
daa
repnz
xor
test
bound
ror
out
xchg
mov
lcall
sub
sub
pop
aad
or
add
in
mov
lcall
lahf
mov
in
sbb
xor
bound
dec
cmp
push
lret
mov
mov
repnz
loop
adc
cmp
xchg
out
sysret
aad
test
aaa
test
lock
pop
ja
dec
dec
mov
lahf
aas
pop
xor
dec
push
shrb
cltd
xlat
add
fwait
sbb
es
in
xchg
nop
xor
add
cmp
inc
ljmp
mov
and
imul
rclb
mov
loope
cmpsl
sub
aas
cmp
mov
inc
mov
mov
out
fldcw
mov
push
push
popf
js
setno
mov
mov
enter
dec
out
adc
or
rorb
call
and
rcr
mov
iret
dec
or
mov
or
lret
daa
push
add
push
and
adc
mov
dec
sbb
test
xchg
ret
mov
adc
into
cwtl
fld1
out
cmp
subl
cs
leave
jae
frstor
or
xor
mov
cmp
sbb
outsl
fbstp
cmpsb
mov
mov
cmc
push
dec
das
mov
mov
sarl
in
sub
pop
call
jge
sti
idivl
mov
sub
inc
mov
cmc
sub
nop
or
pop
jge
jns
je
aaa
inc
xor
sbb
adc
or
movsl
aam
lods
ret
pop
mov
push
sbb
push
ficoms
inc
or
sbb
stos
push
sbb
push
mov
movsl
loop
sbb
add
dec
sub
xchg
or
mov
dec
jnp
int
aad
addl
sti
data16
mov
les
enter
adc
jnp
mov
clc
lea
sub
mov
mov
pop
push
xchg
or
mov
imul
mov
push
and
nop
xor
xor
sar
adc
ljmp
mov
push
ficoms
cmp
xorb
sub
out
push
pop
and
adc
stc
int3
icebp
dec
insl
je
jb
dec
loopne
mov
jae
pop
filds
in
xchg
lea
mov
icebp
add
sub
jno
rorl
lock
fisttps
out
pop
fs
gs
rolb
shll
das
ljmp
sbb
pop
mov
es
shll
cmp
icebp
mov
add
adc
adc
fldenv
sub
repnz
ret
adc
scas
jecxz
mov
and
shrb
and
sub
in
jl
loop
xor
mov
sahf
adc
fs
push
dec
cmpsl
sbb
xor
out
or
adc
jecxz
and
stc
out
addr16
xchg
js
dec
cmp
dec
pop
aam
lret
dec
xchg
or
ds
sahf
aam
pop
pop
sbb
fistpll
aas
notl
add
fisubrl
push
xchg
sbb
jo
rolb
cli
not
mov
jg
enter
mov
sbb
stos
xor
inc
mov
scas
pop
popf
test
mov
call
orl
xchg
jle
push
add
pop
shl
stc
jg
aam
xchg
aam
pop
mov
mov
mov
cmpsb
int3
or
test
or
mov
xor
mov
jecxz
bound
into
movsl
cmp
sub
shll
ds
ss
clc
push
sbb
or
xor
inc
xchg
into
lock
loop
insl
jg
add
or
les
inc
mov
and
dec
mov
jl
lcall
pop
nopl
pop
aad
mov
jle
ret
cli
out
loopne
stos
xor
adc
xor
stc
sbb
aam
push
adc
jnp
ljmp
jle
push
mov
cltd
jne
add
pop
inc
push
sahf
pushf
or
inc
xor
push
in
pop
out
or
and
xchg
movsb
xor
mov
push
xchg
flds
or
dec
mov
inc
mov
push
sbb
mov
xchg
ss
mov
clc
into
mov
jns
add
dec
cmp
sub
icebp
fildl
or
sbb
cli
jo
pop
pusha
xchg
imul
call
xor
dec
aad
loopne
scas
aam
repz
sub
mov
jo
dec
push
add
lock
cmp
pusha
jae
mov
xor
jo
and
cmp
cli
mov
xor
pop
into
pop
call
mov
add
pop
bound
mov
scas
mov
shll
and
add
cmp
popa
sbb
push
scas
mov
cmp
jp
and
fnstcw
lods
pop
add
sbb
out
in
out
cmp
stc
mov
aaa
ss
pop
lcall
data16
lock
outsl
xor
mov
mov
mov
movsl
mov
nop
das
hlt
mov
rcll
sub
add
and
clc
add
dec
cs
iret
les
lret
sub
sub
int3
push
les
mov
sub
out
xchg
mov
enter
cmp
lock
adc
repnz
push
arpl
inc
xchg
aad
outsl
in
fsubrl
mov
addr16
mov
push
ss
leave
sbb
or
dec
mov
insb
mov
pusha
pop
mov
xchg
int3
jg
icebp
testb
ret
xor
sbb
pop
xchg
mov
in
mov
dec
xchg
xchg
mov
cmp
arpl
mov
das
aaa
xchg
and
inc
scas
ret
inc
sbb
dec
xchg
dec
sub
jg
je
adc
and
sbb
mov
xor
je
test
int
sbb
sbb
mov
xchg
sbbb
popa
fs
sbb
sarb
mov
xor
mov
mov
aaa
mov
outsb
jne
cmp
cmp
mov
fidivrs
popl
mov
test
mov
inc
jge
mov
push
mov
sbbb
shll
or
insb
aas
jo
cltd
lods
dec
pop
sarl
or
pop
cmp
movsb
daa
ja
and
out
mov
cmp
decl
out
inc
leave
push
rcrl
push
fcoml
lret
inc
push
subb
mov
dec
in
mov
inc
cmpsb
pmaxub
inc
insb
and
or
inc
sbb
pop
nop
arpl
iret
jne
mov
sti
mov
ret
js
jecxz
adc
loopne
mov
repnz
cmp
xor
dec
aam
int3
sbb
out
call
mov
sub
call
movsl
pop
adc
lock
mov
out
out
int3
sub
rcll
push
push
pushf
in
jp
pop
lds
iret
call
sahf
movsl
cmp
inc
lcall
outsl
xchg
lock
inc
lods
sbb
cmp
push
mov
sub
sub
mov
xchg
jg,pt
pop
mov
xor
cs
fdivl
mov
fcmovnbe
aaa
xchg
or
shrb
pop
cs
mov
sbb
pop
sub
sarl
xchg
in
xchg
pop
or
in
dec
stc
xor
or
adc
jae
pop
leave
rcll
sub
aas
inc
sbb
cmpsl
jl
inc
jno
negl
std
mov
and
out
fldl
jecxz
cmpl
cmpxchg
stos
sahf
adc
pop
jmp
clc
and
js
aad
push
fcmovb
fidivrl
jecxz
jb
pop
pusha
loope
sub
or
sub
jge
pusha
in
sbb
fadds
lods
faddl
mov
das
mov
in
rorl
inc
imul
roll
fwait
pop
jmp
add
rcll
repz
int
xchg
dec
inc
pop
dec
subl
jb
pop
fildll
jecxz
es
adc
and
cmp
ds
cmpsb
mov
call
ret
or
shll
inc
nop
call
out
adc
fsubrs
decb
dec
outsb
loopne
ror
insb
mov
sahf
mov
or
test
pop
dec
aam
pop
push
xor
sub
daa
iret
in
cmc
push
ljmp
cltd
aaa
int
cmpl
shl
loop
fsub
dec
mov
fwait
or
sub
mov
mov
mov
xlat
xchg
popf
imul
lea
insl
mov
pop
sbbb
sub
sub
jns
and
push
sahf
rolb
ss
pop
xor
xor
push
jne
and
lods
insl
add
lcall
loopne
aaa
dec
iret
or
push
cs
in
jl
outsl
test
mov
push
sub
shl
test
inc
xor
add
xchg
out
mov
or
dec
or
mov
xchg
sbb
jge
pop
jb
int3
cld
dec
xor
iret
jne
sti
adc
mov
imul
subl
jg
inc
xchg
and
mov
les
mov
jge
xchg
cmp
mov
add
call
sti
xchg
push
jmp
jg
sahf
sbb
pushf
mov
frstor
add
and
cld
push
iret
leave
nop
jno
xor
or
rcrb
push
sub
ds
lret
ret
push
inc
lcall
push
daa
fmul
popa
pop
int
sbb
xchg
mov
stos
iret
fistps
adc
mov
jmp
mov
inc
addb
pop
lahf
push
scas
cltd
inc
cmp
into
fwait
xor
sahf
stc
xor
xlat
sub
push
jmp
rol
inc
cld
and
jmp
or
ret
data16
cmp
test
leave
adc
pusha
fisubs
xchg
sahf
jno
aaa
xchg
test
cmc
push
push
adc
xchg
in
scas
jno
stos
push
ljmp
or
fisubs
lcall
pop
lods
hlt
enter
adc
dec
out
out
pop
add
cwtl
test
jl
test
aaa
push
inc
cli
dec
ja
xchg
cmp
leave
pop
insl
stc
mov
push
cmpsl
inc
cmp
rorl
imul
loop
jo
mov
add
frstor
sbb
inc
pop
add
sbb
mov
xchg
cmc
add
pop
sub
test
push
arpl
ja
pop
push
in
mov
jae
adc
dec
xor
aas
sar
incl
stos
inc
cmp
dec
sbb
mov
mov
fucomp
push
cmp
pop
flds
fisttpl
push
sub
and
mov
jmp
dec
sub
jp
dec
loop
dec
dec
adc
mov
std
into
outsb
pop
push
pop
jnp
out
mov
inc
pop
inc
jg
mov
inc
inc
movaps
or
pop
add
dec
fs
jp
adc
idiv
cmc
imul
rorl
dec
push
fiaddl
sbb
dec
stc
js
out
in
shlb
inc
jp
stc
dec
and
pop
lea
jo
dec
pop
and
in
cmp
les
nop
add
xchg
mov
movsl
scas
mov
sbb
movsb
outsl
mov
jne
inc
jno
sbb
lds
scas
mov
dec
int
es
test
dec
jns
bound
je
enter
stos
fmulp
sbb
jns
mov
jle
imul
mov
jne
jp
jb
dec
add
ret
fwait
sbbb
icebp
adc
fdivrs
dec
dec
movsl
jb
popf
mov
out
cmpsl
and
into
cwtl
mov
sub
ret
sub
push
pop
arpl
addr16
ret
test
xchg
push
in
mov
jae
push
add
leave
and
push
sub
stc
addr16
sbb
dec
sti
mov
ret
stos
rclb
push
and
push
sbb
jle
mov
adc
mov
int
out
or
dec
mov
aam
or
das
rclb
and
xor
lea
movsl
inc
subl
bound
nopl
mov
aam
mov
in
pop
xor
ret
clc
sbb
cmc
loop
jbe
test
xor
mov
outsl
fdivl
js
xchg
rclb
inc
xchg
inc
and
out
push
iret
pop
jl
push
repnz
ss
xor
imul
out
scas
movsb
or
xchg
mov
pusha
out
insl
addr16
xor
cmp
sbbl
js
add
in
mov
jae
jecxz
fistl
imul
pop
dec
sub
mov
jb
sub
movsl
movsb
jb
dec
add
cmp
mov
es
adc
int3
test
inc
cmc
in
mov
mov
xor
jmp
int
fs
daa
enter
aas
push
sahf
test
stc
imul
jbe
repnz
inc
mov
sbb
adc
out
fucomp
add
mov
sub
fldl
dec
in
mul
imul
add
sti
push
aam
xchg
push
inc
xchg
sbb
push
pop
jecxz
xchg
std
dec
inc
inc
filds
push
mov
and
adc
mov
lahf
push
lret
and
leave
inc
dec
arpl
or
ljmp
ljmp
test
push
mov
pusha
stc
jns
mov
push
pop
dec
sbb
push
and
xor
out
pop
les
fcomi
xor
ss
aam
adc
pop
sub
sub
icebp
xchg
or
or
jge
lea
jmp
je
inc
or
es
imul
fistpl
jecxz
ss
push
pop
and
sbb
pusha
faddl
pop
xor
mov
sbb
xchg
or
cs
adc
arpl
and
nop
mov
mov
dec
sbbl
fmull
cli
aaa
data16
cmp
cmp
out
fsts
inc
jge
imul
out
jno
ficomps
out
fidivrs
xor
aas
lahf
paddsb
inc
gs
test
inc
jmp
jmp
xor
icebp
add
fbld
pop
cs
adc
repnz
test
in
popa
jae
push
hlt
inc
pop
mov
cld
cmpsl
pop
insl
pop
adc
mov
rol
roll
pop
inc
push
and
lods
ss
cmp
adc
sahf
sbb
repnz
push
dec
push
lods
aaa
insb
push
mov
js
icebp
add
out
test
adc
or
std
clc
vandpd
cmp
inc
xchg
aam
mov
fisttps
and
out
rorl
mov
test
or
lcall
push
cmp
adc
xor
or
push
inc
mov
xchg
inc
pop
and
pop
cmpsl
bnd
std
gs
stos
or
add
shlb
mov
movsl
test
lock
add
jmp
nop
fs
shlb
mov
aaa
cld
mov
pop
xor
xchg
mov
or
aam
mov
and
mov
adc
xor
mov
add
adc
movsb
mov
mov
push
adc
sub
das
adc
mov
cmc
xor
pop
add
clc
xchg
out
add
dec
jno
xchg
bound
push
mov
rcl
cmp
sbb
push
in
and
das
movsl
cmp
idivb
call
test
icebp
mov
xor
xchg
das
push
int3
les
cmp
mov
cmpsl
in
or
ja
cmp
push
sbb
and
xchg
sbb
stos
sub
lds
rorb
fwait
jb
out
shll
aad
mov
inc
mov
stos
push
jne
dec
xlat
add
int3
xchg
inc
adc
pop
stos
cmp
mov
leave
test
das
dec
jns
iret
xor
lahf
xor
jl
mull
fstl
cmpsl
fwait
testb
lcall
idivb
pop
xchg
push
fnstcw
sub
jmp
movsl
rorl
test
adc
insl
mov
add
in
fldcw
fcmovnb
fwait
cmp
cmp
sti
out
stos
scas
pop
and
xor
icebp
shl
repnz
les
test
jbe
jno
push
xor
xor
dec
mov
dec
call
icebp
mov
dec
rorl
sti
ds
popf
sub
mov
data16
sbb
or
icebp
push
push
aas
rolb
and
mov
xor
mov
lret
bswap
push
negl
ja
or
ror
das
inc
cmp
gs
and
rcl
test
jle
js,pn
push
dec
cwtl
sub
shrb
inc
test
les
addr16
mov
dec
pop
dec
lcall
arpl
pop
das
xchg
sbb
scas
and
xchg
dec
xchg
clc
loop
in
aas
and
xchg
ret
jp
pushf
sub
test
jp
xchg
or
popf
lds
out
fcompl
and
or
pop
lret
sbb
arpl
fdivl
add
bound
shlb
test
pop
jae
mov
pop
push
mov
sbb
pushf
push
dec
mov
inc
pushf
and
stos
dec
push
cwtl
cmc
inc
sbb
lahf
into
xchg
mov
cmpb
and
pop
loope
repz
xor
stos
sub
sub
pop
add
xchg
xor
shll
lds
mov
or
or
ds
inc
mov
test
fs
repz
ss
sbb
sbb
or
subl
scas
out
pushf
outsl
subb
push
dec
gs
sbb
lock
cmpb
clc
inc
jb
out
icebp
jmp
sarb
mov
mov
mov
enter
leave
insb
out
das
ret
mov
push
sahf
data16
mov
or
loopne
jo
cmpsb
hlt
xor
dec
mov
cltd
out
dec
cs
iret
inc
dec
pop
jle
ds
aam
cmpl
pusha
lahf
fistl
dec
or
xor
sbb
lcall
out
cmp
mov
cmp
fsubr
cld
insl
aas
push
mov
mulb
divb
xchg
fdivrl
test
mov
and
pushf
aas
jns
pop
dec
dec
bound
shll
int
aam
push
adc
mov
sarl
in
cli
rorb
dec
sub
adc
ds
pop
stos
lock
cltd
sub
sti
ljmp
add
or
sbb
jle,pn
dec
jo
xchg
sahf
jb
test
mov
scas
rcrl
sahf
popl
ja
add
push
or
arpl
int
clc
push
imul
xor
mov
movsl
stos
xchg
sbb
mov
dec
pop
cmpb
dec
sbb
push
movsl
mov
mov
dec
lret
sbb
jge
jle
jo
loopne
addb
cmc
sarl
dec
mov
out
jge
popf
inc
ret
push
and
push
jge
fiaddl
sbb
mov
nop
stos
leave
push
adc
mov
add
es
repz
ljmp
aaa
and
xchg
aam
xor
jns
test
xchg
and
jmp
pop
cmp
fnstenv
negb
les
stc
mov
out
ja
js
push
push
and
mov
jp
fidivl
dec
cwtl
movsl
xor
jmp
inc
cmc
push
fs
test
cmp
pop
orb
mov
test
in
call
test
lock
lcall
dec
inc
xor
out
inc
imul
push
ss
loope
lahf
xchg
pop
lea
rcrl
or
cmp
xchg
mov
or
jecxz
std
and
pop
lods
rolb
inc
or
arpl
mov
mov
sbb
aam
stos
lret
movsl
mov
xchg
mov
lods
add
xchg
ja
mov
pop
sub
mov
pop
fsubl
xchg
mov
xlat
push
cmpsl
xor
dec
test
sbb
scas
inc
clc
adc
xchg
imul
pop
mov
mov
lods
push
icebp
shrl
pop
rcll
insl
sbb
fstl
xor
pushf
cmpsb
pop
mov
das
add
adc
pusha
jbe
and
add
pusha
addr16
xor
push
xor
jg
or
movsb
stc
mov
sar
xor
add
push
testl
mov
stc
mov
push
dec
in
jp
sub
rorl
inc
jecxz
lahf
cmp
or
cmp
mov
std
sbb
cmp
fmulp
cli
mov
rcrl
jg
insl
mov
loope
adc
test
and
in
cwtl
jle
or
in
ret
aam
sbb
dec
sti
in
out
rclb
pop
inc
out
leave
lret
lret
add
dec
add
in
add
cmp
test
cmp
jl
stos
in
pop
mov
dec
jp
sbb
mov
push
fclex
push
repnz
sbb
fsubrl
mov
and
loop
aas
fwait
inc
iret
sub
lcall
push
mov
dec
jg
or
pop
mov
cli
cmp
fnstsw
stos
pop
out
xor
nop
mov
inc
dec
cli
movsb
stos
push
icebp
pop
in
mov
sub
pop
xor
jae
lahf
lea
cltd
aam
iret
xor
pop
sub
lcall
movsl
or
push
gs
pop
cmp
xchg
xchg
mov
push
pushf
adc
and
loopne
fimuls
jmp
call
out
inc
insb
pop
mov
insb
sub
jno
ljmp
int3
fs
inc
jo
sbb
cmc
adc
jl
outsb
and
dec
or
mov
mov
inc
es
das
inc
shlb
or
mov
sub
or
push
lahf
movsb
mov
dec
xor
into
sar
imul
xor
js
sahf
dec
ljmp
scas
subb
hlt
leave
sbb
ret
nop
pop
cmpsl
dec
inc
pop
lods
sahf
movsb
sub
aas
in
xchg
sbb
xchg
pop
pop
pusha
mov
mov
mov
cmc
sarl
xchg
lcall
and
popf
stos
ud2
loopne
pushl
pop
stos
xchg
icebp
jmp
and
push
push
add
mov
add
push
sahf
add
inc
push
mov
pop
arpl
rorl
cmpxchg
enter
jns
mov
cmp
cmp
mov
xor
into
into
pmaxsw
aaa
daa
out
mov
rcrb
aas
shlb
movsl
mov
rorb
popf
or
mov
inc
sub
pop
xchg
add
sub
adc
push
shll
fidivs
cmp
scas
je
pop
mov
call
and
push
negl
popf
in
pop
lea
mov
js
outsb
enter
cmp
sti
sbb
xor
jg
sbb
cwtl
int
imul
into
jno
imul
gs
push
cmpsl
jge
sbb
movsb
ret
mov
add
fadd
and
mov
leave
xchg
and
dec
sbb
das
clc
stos
int3
mov
push
dec
adc
fs
mov
into
sbb
rcl
adc
mov
mov
sub
adc
shr
sbb
xchg
cmp
xor
dec
add
filds
xor
dec
xchg
cs
xchg
mov
xchg
pop
mov
cmpsb
cli
mov
push
fcmovnb
jl
cli
jp
or
popf
ja
std
xchg
push
ljmp
xor
xor
mov
xchg
insl
pop
sti
cwtl
xchg
jp
xor
mov
in
in
aas
pop
lods
sti
enter
and
xor
sub
add
icebp
mov
lods
or
js
loopne
imul
clc
stos
xchg
push
stc
jp
mov
sbb
ljmp
sub
in
or
push
fildl
loop
mov
cmc
sbb
fidivrs
sub
lcall
lahf
aaa
jp
sbb
lret
pop
loope
jle
icebp
lahf
cmp
mov
sbb
sbb
mov
xchg
inc
lcall
dec
fildl
jne
sub
xor
add
dec
cwtl
push
sbb
adc
scas
mov
fwait
mov
push
aas
push
lahf
xor
and
xchg
test
xchg
push
mov
mov
mov
jns
push
and
cmpsb
jmp
mov
xchg
mov
mov
push
test
repz
arpl
addb
add
mov
push
or
mov
es
fisttpll
xor
nopl
bsr
push
mov
xor
repz
xchg
push
movsb
xor
mov
adc
shr
cld
pop
mov
sbb
jp
or
mov
push
cltd
enter
insl
adc
popa
movsb
je
inc
adc
inc
enter
pop
stc
icebp
inc
mov
mov
mov
mov
or
jne
inc
pop
xor
mov
or
and
dec
xor
adc
lret
and
daa
or
and
enter
or
pusha
xchg
adc
and
mov
push
stos
sub
fsubl
inc
xor
jg
data16
flds
pop
leave
jbe
int3
hlt
cmp
shr
add
scas
xchg
and
jnp
add
int3
inc
lock
xor
add
clc
mov
lods
dec
mov
dec
cmp
cmc
cmp
xchg
and
fbstp
cmp
in
enter
push
sbb
dec
pop
mov
jae
idiv
out
cli
inc
push
enter
sbb
mov
stc
and
mov
add
test
jo
test
in
ret
mov
insb
jg
cmp
clc
lret
xchg
adc
pop
shll
jecxz
sub
cmp
cld
into
push
in
cltd
out
push
xlat
mov
pop
outsb
and
shlb
orl
popf
test
je
test
and
fists
sahf
hlt
jecxz
mov
pop
mov
test
lds
imulb
add
mov
pushf
mov
cmp
shl
mov
int
mov
dec
xor
jne
sti
mov
jmp
lcall
clc
fisubs
ficoml
cltd
dec
inc
fwait
movsl
mov
gs
cld
bound
sti
pop
mov
nop
rolb
inc
mov
mov
and
int
or
aas
mov
cld
xor
loopne
mov
sbb
ror
cs
in
je
xchg
popa
push
gs
push
popa
stos
push
sarb
inc
mov
aas
loop
cmc
cmpb
popa
pop
mov
seto
insb
std
enter
fcmovb
sub
scas
dec
xchg
mov
push
pop
pop
je
push
ret
jmp
dec
loope
push
je
out
arpl
cld
xorb
dec
push
xchg
jo
imul
mov
sub
xchg
cmp
test
xorb
lods
gs
inc
fistl
mov
out
int3
pop
divl
lcall
or
jle
imul
add
xchg
pop
dec
fabs
mov
es
cmpl
jae
sahf
ret
test
imul
sub
push
mov
pop
out
xchg
inc
or
jle
das
cs
jbe
in
mov
adc
push
adc
mov
jb
mov
xchg
fnstsw
loopne
xchg
rcrb
scas
pusha
ja
dec
sbb
add
add
xor
mov
lea
fcmovbe
mov
ss
clc
in
fwait
pusha
cltd
and
inc
xor
jp
mull
jne
and
in
je
cs
popa
or
push
push
enter
and
dec
jb
mov
xchg
bound
inc
jne
fildl
outsb
sarb
mov
mov
aad
push
xlat
pop
push
mov
movsl
add
clc
push
or
mov
sbb
stos
push
xchg
mov
mov
or
repz
lcall
into
dec
fisubl
sub
roll
popf
adc
je
mov
or
dec
cli
cwtl
push
sub
outsb
inc
push
aaa
pusha
mov
dec
push
push
adc
loope
lock
mov
icebp
jg
rcrb
dec
sub
test
sti
mov
jle
push
nop
mov
fwait
dec
jg
loop
loope
xor
mov
mov
repnz
xchg
and
jno
jmp
adc
ja
lahf
lcall
pop
xchg
lcall
pop
lods
lret
cs
outsl
mov
iret
xchg
out
sti
xor
jl
mov
enter
ret
push
or
mov
icebp
and
mov
popf
rep
jb
pop
loop
mov
sbb
aad
adc
sub
test
clc
repnz
mov
lret
repz
push
pop
add
lcall
push
cs
cld
jae
inc
pop
test
addr16
inc
add
rorb
mov
call
add
mov
imul
or
pushl
jmp
add
pop
popf
pop
xchg
insb
xchg
xchg
jbe
loop
or
ds
test
cld
cli
pop
jae
enter
jg
mov
mov
lahf
jge
imul
jg
mov
mov
fmull
pop
int
arpl
fwait
xor
testl
test
cmpsl
ret
les
xor
cmp
inc
iret
or
cmp
aas
push
xlat
fs
std
sbb
popa
hlt
sub
adc
stc
repnz
aas
lods
dec
jb
and
mov
fiaddl
arpl
jns
or
clc
mul
test
or
inc
dec
xchg
mov
xor
cmp
std
and
add
les
cmp
cmp
and
push
in
sti
mov
jns
jb
adc
add
adc
cmpsb
sub
ja
les
cmc
mov
and
jns
adc
xor
std
jae
aad
inc
mov
rolb
fdivr
mov
nop
dec
aad
pop
sbb
mov
mov
and
mov
in
mov
xor
lds
icebp
or
and
gs
cmp
int3
js
and
add
mov
jle
mov
fsubrl
popf
addr16
fcompl
repz
ds
cmc
pop
add
push
xchg
mov
inc
mov
jle
xchg
and
aaa
pop
call
lds
lock
fwait
repz
inc
out
add
inc
adc
add
add
jecxz
in
cmp
enter
scas
mov
idiv
mov
shll
out
sub
bound
fiaddl
cmp
xchg
add
test
jp
xor
xlat
sbb
negl
sahf
mov
rorl
adc
sbbb
outsb
out
std
jl
outsl
push
add
std
sahf
cmp
push
cmp
mov
pop
add
cmp
xor
jg
jp
or
mov
sbb
cmc
xor
add
repnz
jnp
loopne
jo
mov
imul
mov
mov
mov
repz
icebp
bound
cmp
mov
fiadds
push
adc
inc
cmc
jbe
and
and
xorl
mov
push
pop
cmp
push
push
mov
cmp
add
dec
add
inc
lahf
sbb
sahf
add
or
jb
aad
aam
arpl
pop
cmp
int
cmp
fs
sbb
push
adc
jno
pop
out
cmp
add
rcll
in
sub
lods
sbb
mov
imul
dec
loope
shlb
mov
je
daa
repz
sbb
stos
aad
fnstenv
cmpsb
imul
and
xchg
add
jge
sbb
in
push
or
cwtl
cmp
movsb
xchg
lea
repz
xlat
ja
cmpsl
adc
mov
dec
mov
xor
xchg
pushl
mov
ds
or
sti
cmpl
xchg
dec
shrb
scas
or
pop
xchg
out
and
pop
push
xchg
in
mov
lea
fsubl
xor
adc
add
inc
mov
xor
pop
sbb
pop
dec
xor
push
xlat
mov
rcll
xor
ret
push
in
jmp
jo
addl
mov
dec
xchg
mov
add
sub
jne
cltd
cwtl
xor
xchg
mov
neg
fmulp
mov
push
adc
xor
shrb
xchg
das
pop
mov
data16
add
jg
lds
inc
dec
mov
cmpsb
push
fwait
xlat
andl
rcll
pop
inc
mov
stos
and
out
push
mov
xchg
xor
dec
stc
push
lret
jbe
jmp
xrelease
mov
adc
or
push
fcmove
shll
jge
ret
sbb
inc
cmp
cmp
aas
ffreep
xchg
sub
repz
jecxz
dec
or
or
ret
popa
insl
cmc
sbb
inc
sub
out
into
andb
dec
popa
dec
inc
outsb
mov
outsb
mov
pushf
push
cmp
repnz
adc
aam
out
mov
mov
adc
push
xlat
adc
shl
mov
stos
in
inc
leave
imul
or
clc
mov
xchg
and
adc
push
jge
cs
xor
lds
sbb
or
jmp
sub
and
dec
mov
leave
jg
pop
out
fdivp
add
mov
inc
fwait
cmp
cmp
push
dec
popf
push
push
leave
inc
in
bound
shlb
lods
push
add
xor
sub
les
jnp
add
fisttps
mov
or
mov
addr16
cmpsb
lods
push
inc
sub
in
push
int
sub
lcall
jb
pop
arpl
mov
jno
in
std
out
xchg
dec
sub
xchg
or
shrl
scas
sbb
pop
jne
jae
gs
sbb
cli
mov
cmc
frstor
scas
xor
es
inc
sbb
pop
adc
pand
cmc
lret
mov
bswap
adc
int3
or
mov
sbb
in
jmp
pop
clc
pop
enter
test
enter
shll
bound
movsl
dec
mov
mov
pop
js
arpl
iret
push
sbb
ja
idivb
in
adc
add
sub
sbb
mov
mov
mov
jg
repnz
in
jb
and
mov
lods
push
and
cmp
mov
sub
imul
popl
addr16
addb
insl
inc
inc
xor
mov
fs
into
pushf
dec
std
push
sahf
sbb
icebp
incl
jmp
cs
fs
xchg
scas
jle
out
push
push
xor
add
rcrb
popa
sbb
pop
pop
add
cmpsb
jge
pop
mov
in
or
and
lret
and
mov
and
clc
sbb
jle
aam
roll
add
xchg
shll
std
ret
stos
js
out
xchg
sub
jecxz
shlb
adc
movsl
fiaddl
and
fisubrl
aam
cmp
lcall
out
mov
adc
push
nop
or
push
mov
pop
fisttps
inc
push
lock
xor
cmp
xchg
aad
rcrb
sti
mov
adc
and
pop
mov
cmpsl
push
sub
add
jbe
frstor
adc
add
jno
imul
stc
sbb
jns
push
or
pop
stc
stc
inc
jae
add
rclb
mov
in
sti
test
or
jg
je
enter
test
js
outsb
jge
js
and
push
insl
jns
adc
mov
dec
int
xchg
mov
inc
test
mov
sub
cwtl
adc
testb
stc
cmp
jmp
jmp
rcrb
lods
outsb
pop
stos
jg
jge
cltd
and
js
pop
sbb
cmc
mov
xchg
sbb
inc
mov
xor
mov
push
dec
sub
jae
cmc
dec
fmulp
mov
xchg
push
xchg
jp
mov
and
mov
jo
inc
sbb
or
lcall
les
arpl
insb
pusha
cli
lret
cmp
loop
popf
ud2
loop
nop
stos
sbb
add
cmp
sub
pop
adc
inc
les
inc
stos
fildll
pop
xchg
push
mov
adc
in
sahf
aam
dec
sbb
aam
adc
out
push
jle
jne
fdivrs
sahf
mov
adc
jo
cmc
dec
jns
sub
jp
in
loopne
mov
lcall
je
mov
loope
testb
flds
jecxz
scas
sbb
sub
arpl
xchg
lods
addr16
cmc
scas
push
pop
out
andl
adc
sbb
push
test
jns
adc
mov
dec
sbb
adcb
pusha
insb
add
dec
test
sqrtps
pop
dec
add
inc
mov
jae
decl
pop
jo
mov
mov
xchg
pusha
idivb
or
outsb
enter
sub
adc
adc
stos
push
cmp
jnp
test
hlt
subb
mov
mov
fstpl
imul
adc
out
iret
push
test
sbb
sarb
mov
mov
mov
adc
or
test
in
lds
cmc
popa
push
aaa
adc
pop
pusha
out
jle
cwtl
push
add
adc
das
adc
adc
das
push
stos
mov
and
arpl
cld
pop
add
xor
sub
fdivrl
loope
mov
jbe
lock
inc
jae
cmpsl
dec
int3
dec
cmp
or
imul
iretw
mov
sub
insb
flds
inc
out
fnstcw
test
subb
lock
sbb
dec
insl
add
add
loope
sub
insl
cmpsb
mov
add
push
pop
addr16
paddw
sub
mov
xchg
imul
adc
jle
mov
xchg
dec
cmp
push
sbb
xchg
inc
leave
or
orb
add
dec
pop
adc
push
inc
pop
ret
inc
or
ljmp
jecxz
mov
pop
pop
out
sbb
es
pushf
in
pop
add
repnz
pop
in
iret
adc
outsl
loop
add
sub
jae
aaa
nop
dec
jne
pop
fs
add
mov
push
cmp
mov
pop
ret
lods
loop
sbb
lods
mov
rcrl
dec
cli
sbb
lock
adc
jle
fistl
icebp
jno
idivl
mov
bound
sahf
pop
xor
addl
push
fsubl
loop
dec
stos
adc
sub
lret
shr
insb
inc
mov
jmp
ljmp
mov
mov
mov
rcrl
mov
loop
aas
jo
shll
or
int3
add
mov
ficomps
pop
jp
mov
sahf
cmc
mov
loope
movb
pop
fwait
test
mov
push
in
inc
dec
cld
sbb
xchg
jg
lret
push
mov
movsb
call
mov
cmp
enter
inc
popw
ret
out
mov
inc
lcall
sbb
push
ljmp
aaa
into
adc
pusha
inc
das
push
in
sbb
or
cs
out
out
or
enter
lds
rcrl
sarl
inc
clc
les
ja
pop
test
mov
sub
loop
aam
pop
mov
std
xor
loopne
mov
xor
dec
test
imul
push
movsl
ljmp
and
lods
push
ja
daa
inc
mov
jle
je
lret
add
pop
jge
imul
stos
shll
fstpl
inc
jl
inc
addr16
mov
ljmp
pop
ss
adc
adc
iret
xchg
pop
and
lahf
mov
imul
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
cmp
sti
ret
jmp
mov
int3
int
insb
imul
mov
mov
je
imul
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
cmp
gs
dec
ljmp
adc
add
mov
xchg
rcrl
adc
or
adcl
push
add
lock
jns
popa
out
jecxz
lock
jp
lret
stos
mov
loopne
inc
jo
xor
jle
push
iret
idivb
hlt
cmp
xchg
push
cli
push
popa
test
test
xchg
out
and
jmp
sub
mov
negb
fnsave
xchg
pop
cmp
push
leave
hlt
sbb
cli
pop
addr16
jo
popa
fwait
cltd
in
test
sahf
pop
pop
add
cmp
mov
int3
xor
ret
cld
scas
mov
cmpsl
jge
insb
imul
jecxz
lock
jp
int
jne
imul
out
lock
je
jp
cld
jecxz
loopne
jp
int3
aaa
je
imul
jp
int3
xor
push
cld
jecxz
lock
int3
xor
ret
lods
out
mov
int
jno
imul
jp
fdivl
je
imul
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
dec
pusha
imul
jno
cmpl
imul
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
mov
fwait
xlat
lock
jp
sub
je
jnp
cld
jecxz
hlt
xlat
jp
int3
xor
sub
test
mov
int3
adc
in
mov
outsl
int3
push
je
imul
jecxz
stos
xlat
jp
adc
je
imul
jecxz
lock
jp
int3
xor
and
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
int3
xor
ret
cld
jecxz
lock
jp
cmp
ret
in
jecxz
fidivl
push
stos
int
repnz
xchg
adc
dec
jecxz
out
or
je
mov
push
mov
push
pop
mov
xor
arpl
lds
and
adc
jle
test
dec
xchg
neg
pusha
cmp
test
push
adc
mov
ror
adc
mov
inc
push
sarb
and
lret
call
xchg
or
xlat
mov
out
mov
xor
xor
xor
call
sbb
jmp
mov
gs
arpl
insb
mov
mov
loopne
sahf
aam
out
push
sub
out
inc
lret
inc
pop
sahf
outsb
and
fisubs
out
rorb
and
sub
xorl
add
pop
xlat
rcrb
ja
xorl
out
loop
test
adc
aas
inc
shlb
test
and
nop
mov
xchg
shr
fnsave
pop
mov
iret
cltd
insb
pop
lods
in
fs
push
dec
cmp
ret
sub
lret
mov
ret
mov
test
repnz
imul
call
pop
repnz
cmc
insl
mov
cmp
mov
out
pop
out
push
or
int3
pop
repnz
pop
mov
cmp
sbb
xchg
cltd
xor
scas
inc
add
push
cmp
push
mov
daa
frstor
cmp
int3
negb
stc
or
xor
adc
push
mov
adc
cmpsl
or
shl
cli
mov
cmp
movsl
lea
movsbl
adc
push
push
popf
cld
out
sub
push
mov
cld
mov
ja
lods
dec
push
jmp
dec
cmc
repz
enter
add
cmpsb
lahf
jnp
xchg
out
push
popa
inc
xchg
fisubrl
outsl
jbe
movsb
mov
xor
sbbb
add
dec
movsl
jmp
decl
pop
or
insl
ja
jp
sub
fcoml
fstpl
test
out
les
mov
faddp
fwait
out
pop
cmp
scas
inc
imul
cld
jecxz
cmp
shl
mov
andb
movsl
ljmp
xor
fdivrs
and
jno
addb
sub
xlat
cwtl
adc
test
daa
arpl
sahf
add
aas
inc
mov
aad
nop
push
or
pushf
stos
and
xchg
cwtl
mov
jle
dec
aam
int
insl
lds
inc
mov
mov
sub
jl
cltd
sub
mov
js
cwtl
loope
dec
lods
sti
in
enter
push
aam
daa
mov
insl
packsswb
out
push
sar
or
jge
outsb
push
sbb
jl
pop
hlt
jb
nop
mov
xchg
pushf
test
jl
mov
jmp
xorb
sar
mov
out
out
and
mull
push
pop
push
cmpsb
or
sub
clc
sbb
in
sub
dec
std
sub
cmp
insb
and
push
xlat
mov
xchg
add
xchg
out
sbb
cli
or
sbb
pusha
jp
jp
arpl
dec
push
sbb
fistps
mov
int3
adc
loope
movsb
shrl
xchg
scas
inc
push
mov
bound
stc
sub
shrl
int
sub
mov
dec
add
arpl
gs
popf
cmp
xor
and
mov
xchg
aas
cmp
push
aam
repz
je
xchg
mov
idivb
sbb
inc
insb
jb
mov
les
jg
int
les
or
mov
or
mov
in
shlb
cld
or
icebp
insl
sti
cmpsl
into
mov
xchg
fcomps
or
sbbb
jb
mov
add
hlt
mov
sbb
aad
cltd
cmp
lds
pop
int3
jo
mov
mov
xor
jecxz
inc
stos
addr16
jp
das
xor
sub
add
jne
sbb
add
cmpsb
clc
pop
mov
clc
mov
mov
nop
call
xchg
rcrl
loope
rcrl
dec
mov
inc
xor
add
fimuls
lret
mov
fcoms
mov
out
dec
call
jnp
xchg
dec
repz
mov
call
dec
mov
popf
sbb
fistpl
inc
inc
jp
lret
mov
jno
ret
mov
call
inc
shlb
les
mov
pop
in
pop
movsl
inc
mov
push
movsl
shlb
imull
and
dec
outsl
lret
sub
jnp
out
dec
scas
adc
lcall
loopne
std
push
int
xor
mov
jmp
jb
iret
loope
xor
push
faddl
xchg
or
inc
aas
sarb
pop
xor
mov
pop
cmp
mov
push
fisttpl
inc
adc
jno
pop
mov
out
enter
or
xor
out
sbb
and
mov
or
adc
cmpsb
pop
stos
push
inc
jnp
clc
jp
adc
sub
or
adc
es
mov
cmpsb
insb
mov
into
lods
fiaddl
jg
lock
jnp
push
mov
or
cmp
lret
addr16
sbb
dec
lret
push
mov
and
or
imul
testb
test
adc
dec
pop
sbb
inc
xchg
lahf
xor
cmpsb
cmp
test
add
dec
mov
cmc
dec
rclb
pop
je
in
ss
aam
ljmp
push
xchg
loopne
dec
sbb
addr16
inc
test
jo
lret
loope
jle
outsl
mov
push
sbb
xorb
stos
ds
and
pop
movsb
jo
xor
mov
cmc
imul
stos
inc
or
stos
shl
cmp
arpl
dec
push
pop
aad
ds
imul
stos
stos
pop
push
ret
sub
lret
nop
jl
or
mov
stos
or
test
mov
jmp
fwait
dec
and
std
call
sub
cs
out
fstpl
rcrl
out
cmc
loopne
enter
imul
push
jmp
imul
lock
sbb
jge
cld
js
push
test
xchg
mov
js
fadds
jns
fisubrs
or
movsb
iret
ficompl
xchg
outsb
test
fwait
outsb
xchg
pop
lock
xchg
leave
pop
mov
shlb
shrb
adcb
cwtl
mov
sar
jle
push
cltd
jle
xor
mov
xor
fs
inc
push
test
adc
mov
xchg
outsl
aas
push
repz
or
arpl
in
shll
popf
jmp
fists
mov
xchg
outsb
jmp
cmp
adc
mov
xor
jo
cs
mov
push
ja
pop
mov
enter
or
popa
push
mov
loope
xchg
ficoms
mov
cmp
jnp
push
mov
inc
mov
adc
mov
push
push
mov
push
sbbl
push
and
js
add
inc
int3
add
es
lret
imul
ret
and
add
inc
daa
inc
sbb
cmp
adc
pop
cmc
incl
push
xchg
mov
out
sub
pop
inc
mov
lock
inc
sbb
mov
sub
jns
push
fnstenv
or
push
push
pop
std
pushf
jp
lret
xor
ret
cld
push
xchg
sbb
xor
or
mov
scas
scas
or
inc
aam
bound
dec
cmp
ss
pop
adcl
sahf
sub
movsb
addl
shrl
mov
inc
shll
fsub
adc
lods
jge
stos
out
adcl
push
jmp
pushf
into
cwtl
stos
sbb
add
xor
pusha
xor
aaa
ja
movsb
mov
mov
outsb
outsl
fwait
rep
push
sub
push
unpcklps
mov
pop
jo
popf
xlat
sub
sbb
dec
mov
mov
lea
mov
fwait
dec
xor
mov
jnp
mov
arpl
fcoml
gs
mov
lret
test
int
mov
loope
lret
push
push
addb
push
mov
push
cmp
cmc
jmp
fisubrl
or
push
enter
and
inc
mov
in
into
ficoms
in
sbb
dec
xchg
enter
out
sub
xor
or
xor
ret
aad
mov
bound
inc
adc
push
ja
cmpb
adc
call
int
inc
aaa
cmp
fs
jg
sbbb
mov
mov
xor
pushf
roll
or
test
xchg
test
cld
jno
push
mov
inc
lea
pop
add
or
push
jge
lret
jge
les
pusha
pop
outsb
jno
mov
cmp
sbb
push
scas
ljmp
js
ret
xchg
xor
mov
cld
movsb
adc
add
out
inc
clc
rcrb
das
sahf
sub
xor
cwtl
aam
cmp
jl
and
jmp
divl
cli
jne
pop
fwait
stc
arpl
insb
xorb
clc
std
lcall
std
or
xor
pop
pop
call
or
insb
fisttpll
je
insb
icebp
jmp
repz
mov
scas
dec
inc
in
test
ret
and
movzbl
or
cs
push
lods
push
sub
int
sub
add
mov
mov
test
mov
dec
outsb
stc
gs
ljmp
push
cli
lcall
and
ja
mov
clc
cmp
add
pusha
iret
in
cmc
mov
adc
adc
dec
dec
pop
add
dec
aas
jg
push
dec
xchg
ss
lret
imul
mov
ret
fwait
sbbl
loope
xchg
xchg
fistps
adc
je
outsl
loopne
push
pop
out
dec
lds
sub
or
lcall
lods
lret
outsl
inc
rorl
fsubrs
mov
xor
aaa
and
in
outsl
adc
push
mov
enter
add
inc
daa
mov
loop
add
jo
dec
xchg
aad
mov
mov
or
sbb
insl
or
int
divl
sbb
imul
fiadds
clc
and
mov
mov
mov
cmpsl
movsl
xchg
mov
cmc
mov
mov
add
ja
sti
imul
sbb
lods
icebp
cli
adcb
or
cmp
sub
mov
cwtl
subl
jmp
pusha
nop
ljmp
jns
and
dec
add
mov
xchg
adc
add
jl
pop
sub
add
mov
xchg
mov
jmp
xchg
outsb
ret
test
divb
aaa
pusha
fsubs
jl
iret
nop
cmp
stos
push
shrl
scas
lock
sti
cmp
inc
repz
xchg
adc
dec
jmp
cmpsb
cmp
inc
imul
jae
imulb
add
int
lret
repnz
outsb
pushf
lods
out
cmp
jle
adc
sub
sbb
dec
mov
mov
aaa
out
movsb
mov
or
mov
adc
insl
testl
adc
hlt
aad
cltd
pop
xchg
shrb
mov
mov
pop
scas
lods
xchg
in
cmp
push
cs
sbb
mov
adc
or
cmp
dec
ret
sbb
insl
cmp
dec
mov
push
arpl
gs
ret
mov
adc
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
