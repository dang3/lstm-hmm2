lret
fidivrl
pop
mov
cli
mov
stos
sbb
loopne
jbe
enter
cs
sub
xor
dec
xchg
movsl
jne
jl
test
loope
adc
adc
insl
push
inc
insl
and
js
cmc
mov
xor
decl
xchg
das
or
xchg
out
fsubr
movsl
sbb
and
or
inc
fwait
hlt
pop
lds
sub
outsl
or
sbb
jne
inc
popf
imul
dec
lods
sbb
repnz
mov
ss
mov
ds
pop
sub
mov
add
scas
add
inc
add
pop
cli
cwtl
sub
xlat
std
rcrl
rorb
push
adc
mov
sbb
dec
xchg
imul
adc
cmp
and
js,pt
mov
outsl
jmp
or
mov
lret
repz
scas
mov
and
pop
sbb
rcll
arpl
rorl
xor
hlt
inc
pop
xchg
sti
test
aas
sub
xchg
test
dec
pop
fdivrs
mov
adc
and
movb
mov
mov
dec
adc
out
adc
xchg
inc
pop
iret
mov
pop
shrl
xchg
sub
movsb
test
in
mov
or
pop
push
push
repnz
cwtl
leave
test
fnstenv
pop
mov
pushf
jmp
xlat
shrb
in
movsl
sbb
add
je
movsb
lret
in
dec
push
shll
imul
rorb
sub
ds
or
and
sbb
int
movsb
fwait
adc
out
cli
inc
pop
xor
jbe
cwtl
mov
cmp
mov
test
push
sar
add
repz
sahf
roll
or
outsb
lahf
aas
arpl
dec
xchg
aaa
mov
xchg
fistl
mov
or
jecxz
push
push
inc
cld
fisttps
xchg
stos
shlb
enter
jne
push
or
sub
jo
arpl
daa
inc
pushf
movsb
popf
mov
fcomps
ds
shll
fwait
dec
jg
insl
mov
pusha
inc
and
sub
mov
xor
stos
add
lret
pop
ds
mov
cli
pop
add
je
sahf
lret
in
xchg
mov
js
aad
push
jecxz
or
mov
cmp
es
lret
stos
xor
ds
inc
test
sbb
mov
xchg
fsub
pop
jmp
cwtl
mov
sub
push
adc
inc
or
out
cmc
ret
test
int3
hlt
xor
loope
ds
cwtl
sub
into
adc
jb
enter
dec
add
fnsave
ret
scas
mov
sbb
test
std
fistl
mov
rol
xor
xor
cmc
aas
and
mov
and
leave
push
xchg
rcrl
xchg
shrb
imul
mov
jb
jg
push
sar
aad
jnp
fs
push
inc
sbb
ret
push
nop
pop
sub
nopl
stos
xor
and
adc
xor
clc
fdivrl
ss
jno
mov
clc
sbb
mov
cmp
push
mov
adc
mov
xchg
pusha
sbb
arpl
or
pop
aam
inc
lea
push
les
inc
adc
lahf
pop
dec
mov
or
int3
sub
mov
aaa
push
pop
dec
lahf
add
adc
pushf
push
add
pop
mov
andl
push
lods
cmpsl
jle
sub
xchg
std
mov
lret
in
mov
adc
pop
sub
sub
pop
mov
rcll
leave
pop
fcompl
stos
cmp
fdivrl
xchg
out
out
shll
nop
and
adc
push
mov
push
add
cmpsl
xor
inc
add
stos
inc
cs
dec
push
push
inc
xor
out
fsubs
loopne
pop
or
lea
or
mov
push
mov
add
inc
fnstcw
xchg
lcall
fst
fwait
imul
push
les
ds
mov
dec
cld
add
cmp
sbb
sbb
sti
mov
and
icebp
subb
shl
popa
daa
adc
or
and
cmp
add
test
ret
push
out
out
arpl
stos
imul
es
das
sarl
xchg
lods
xor
out
sbb
push
and
or
sbb
or
ficoms
iret
fwait
jecxz
rorb
movsl
daa
inc
jae
or
or
outsl
arpl
jno
out
cmp
jmp
push
inc
lock
and
cmp
xor
mov
popf
jg
dec
out
ss
int
ss
daa
add
imul
xchg
lods
loopne
stos
mov
jnp
sub
push
and
mov
push
test
xor
das
loopew
dec
jns
adc
stc
loopne
movsl
lods
mov
in
lahf
inc
cmpsb
sbb
jbe
mov
mov
add
push
xchg
std
fdivs
and
and
jmp
pop
shrb
mov
mov
push
test
clc
add
inc
gs
add
push
inc
push
push
in
cmp
pushf
lods
dec
das
cmp
rcr
icebp
jbe
cmp
fmull
cwtl
cwtl
js
jne
jno
sub
xor
cmc
push
add
mov
jle
sub
mov
inc
pop
ror
icebp
int
jno
and
sbb
mov
or
cmpsl
pushf
or
adc
out
or
add
inc
xchg
data16
leave
shll
adc
jae
pop
jl
fmulp
mov
mov
add
ret
mov
or
or
jnp
das
ret
xor
mov
sbb
test
test
and
filds
push
push
outsl
pop
mov
jge
in
fs
repnz
gs
lock
mov
repz
xor
scas
testb
imul
das
mov
inc
sbb
cmp
fcoml
jbe
movsl
ss
push
cmp
xor
inc
outsb
mov
xchg
sub
xor
adc
jbe
add
arpl
add
xchg
sub
inc
out
movsb
push
iret
pop
popa
inc
mov
ret
sub
xchg
hlt
mov
cltd
inc
push
xchg
sbb
push
xorl
mov
jbe
aaa
fdivrs
jb
les
clc
scas
pop
xchg
mulb
ljmp
divb
je
lret
push
movswl
dec
jne
cli
adc
or
dec
cmp
sub
inc
sahf
push
fcoml
add
adc
inc
sbb
xor
aam
cltd
xchg
jmp
loopne
sbbb
test
sub
mov
add
insl
ljmp
nop
mov
push
pop
mov
test
mov
mov
aaa
adcb
cld
mov
imul
pop
xor
push
mov
fwait
and
clc
mov
arpl
int
outsb
stc
fcmovbe
cmp
mov
mov
push
lfs
enter
fdivr
jo
in
in
cmp
add
movb
mov
and
shr
mov
push
ja
or
cmc
and
mov
mov
jge
mov
cmp
scas
inc
and
cwtl
or
pop
lahf
les
scas
fdivrs
adc
imul
in
dec
int
xorl
inc
xor
inc
ficompl
push
sub
push
jno
in
add
test
mov
xchg
call
icebp
div
in
je
loop
lock
pop
out
cmp
imul
xchg
das
xor
inc
pop
jg
cmpsb
pop
push
mov
negl
in
insl
hlt
insl
cwtl
or
sub
enter
add
lock
arpl
adc
imul
je
lea
xchg
inc
pop
repnz
out
mov
insb
inc
popf
aam
shll
xchg
dec
shll
sbb
xchg
inc
mov
outsl
lods
out
scas
out
rcr
adcl
cmp
pop
ror
ds
push
clc
and
into
es
ja
in
push
hlt
and
aas
push
call
push
nop
mov
dec
pop
xor
ds
out
shlb
fbld
movsl
aam
mov
lock
mov
mov
dec
dec
pop
mov
jno
and
out
and
push
adc
into
push
jge
pusha
insl
jae
cmp
js
pop
pop
ret
in
push
scas
cmp
stc
leave
in
dec
xlat
rcrb
lcall
sbb
nop
fisubl
sub
and
cmp
mull
push
xchg
loopne
mov
mov
mov
loop
mov
mov
cmpsl
lods
push
js
mov
lea
xor
push
jnp
push
std
fcomps
scas
rcll
loop
pushf
das
sahf
xor
loopne
das
adc
push
xchg
mov
cs
xchg
jno
ror
adc
popa
inc
cltd
imul
fisttpl
test
stos
push
xchg
movsl
dec
pop
mov
je
fsubr
xchg
mul
into
sti
jecxz
loop
cmp
or
sbb
mov
aam
repz
xor
mov
mov
push
mov
mov
pop
xchg
xchg
pop
lods
and
cmp
fnsave
int3
call
ja
cmp
stos
outsl
out
adc
xor
cmp
xchg
jg
fwait
xor
repnz
insw
test
addr16
dec
jno
imul
mov
adc
lds
or
test
lock
jne
imul
or
sbb
hlt
inc
imul
movsl
arpl
pop
stos
pop
xor
jnp
lods
out
cltd
bound
sbb
mov
push
dec
lods
pop
out
inc
mov
lret
add
fsubl
loopne
sarl
imul
fcmove
push
add
push
jnp
std
add
push
cmp
cmp
das
jae
jge
mov
mov
pop
sub
xor
and
test
cmpl
sahf
mov
lcall
mov
sbb
jmp
lods
or
push
and
xchg
cmpsb
aas
xor
ret
les
inc
aad
test
jl
and
push
xchg
mull
movsb
sti
xor
xchg
pop
lret
repz
mov
ret
cmpl
add
nop
cltd
push
out
aaa
jnp
mov
adc
cwtl
inc
idivb
pop
and
aam
and
fwait
dec
jp
push
sub
adc
test
mov
lcall
mov
push
mov
in
xor
fwait
gs
xchg
mov
sub
mov
loope
dec
cmc
clc
dec
loop
push
lock
test
add
adc
xchg
jmp
icebp
arpl
rorl
add
push
sub
in
mov
ret
daa
and
push
cmp
push
inc
inc
sub
mov
in
rorb
ret
inc
pop
stc
shrl
lods
cmp
dec
xchg
inc
cmp
stos
xorl
in
and
pop
dec
js
jno
pop
mov
iret
fimuls
add
pop
aas
iret
in
mov
addb
xor
rorl
jp
mov
pop
shl
les
cmp
test
or
loop
je
jno
mov
add
es
insb
pop
pop
out
sub
sub
test
fsubp
sub
jns
xchg
sub
jmp
xchg
add
ret
lea
jmp
arpl
jb
jne
in
inc
das
fnstcw
mov
std
inc
mov
xchg
mov
loopne
enter
into
es
or
test
in
or
ss
jmp
inc
and
hlt
mov
imul
dec
sub
mull
jnp
pop
jl
stos
add
enter
xor
or
adc
pop
pop
inc
and
mov
adc
mov
call
sbb
in
xchg
fmul
les
faddl
int3
and
push
rcll
mov
cmp
add
xchg
dec
cmp
jno
lea
jl
test
mov
push
adc
lcall
in
data16
test
or
bound
aas
mov
addb
jns
outsb
lret
push
movsb
mov
bound
mov
xchg
jecxz
test
mov
mov
push
jg
lods
hlt
lods
in
call
or
mov
js
lods
pusha
or
sbb
and
push
stos
mov
xchg
out
stc
jns
mov
add
add
inc
ss
in
fnstenv
ljmp
stos
jns
sbb
lret
xchg
cmpsb
js
sarb
ljmp
pop
popf
ja
sub
adc
iret
and
xchg
jmp
xchg
sbb
xchg
or
mov
xchg
stos
loop
fistpl
add
adc
shll
jle
lret
pop
push
jge
and
pop
mov
push
push
je
push
mov
pop
adc
enter
cmp
add
fisubl
ljmp
xchg
push
fnop
icebp
es
les
jo
adc
mov
dec
imulb
dec
rcrl
ret
sarb
popf
out
add
cli
icebp
out
daa
lea
dec
fdiv
movsb
mov
push
movsb
lds
cmp
jp
jno
pop
iret
jnp
sarb
jo
or
xchg
inc
sbbl
xchg
sti
jge
and
arpl
scas
mov
cli
pop
lods
fadds
mulb
ja
jmp
pushf
sbb
jl
xor
dec
arpl
jne
push
jne
pop
aas
xor
jno
xor
cs
jg
sbb
mov
pushl
lock
ret
orl
jne
dec
scas
mov
in
lret
jmp
or
loope
push
cmp
mov
pop
cmp
arpl
icebp
movsl
fidivs
fidivs
arpl
test
and
pop
and
cli
inc
outsb
inc
add
mov
mov
pop
add
mov
pop
mov
and
cmp
iret
adc
jo
sub
xchg
fdivl
enter
ljmp
idivb
cmc
enter
dec
lds
imul
stc
and
notl
in
repnz
mov
stos
out
pop
xlat
aas
hlt
xor
cmpsb
sub
xchg
xchg
imul
mov
sti
fisttpll
mov
mov
xchg
or
into
mov
mov
daa
test
sub
insl
fsubs
outsb
push
xchg
test
cwtl
pusha
inc
cli
in
push
fildll
mov
gs
sbb
inc
ja
in
stos
out
test
mov
pop
jl
mov
pop
or
add
hlt
add
inc
cltd
or
sub
push
jmp
pop
mov
adc
jmp
sarl
push
inc
sbb
outsl
or
jg
inc
pusha
pause
lock
outsl
loope
inc
fs
into
addb
fidivs
pop
ret
xor
shrl
mov
jne
ljmp
add
stos
jbe
loope
inc
daa
ss
jl
movsb
int
push
add
aam
stos
pop
xchg
jae
mov
stos
arpl
adc
push
adc
and
ret
movsb
aam
ficoms
clc
lods
or
cmp
cwtl
cs
iret
mov
push
arpl
lods
inc
jae
add
hlt
nop
dec
xchg
std
mov
lahf
insb
sbb
pushf
fdivrs
fbstp
or
pop
int
and
and
cli
add
movb
popf
outsb
repz
in
mov
xor
add
loope
loop
jle
mov
mov
xor
dec
roll
rcrl
addr16
lds
enter
fsubp
rolb
arpl
add
add
std
adc
enter
jb
push
movl
aad
lcall
sbb
xchg
sub
add
dec
push
or
mov
pop
jecxz
lods
pop
aaa
jnp
repnz
mov
adc
les
gs
rcrl
cmp
inc
or
aam
stos
testl
mov
jb
jp
cmp
sbb
bnd
push
aaa
lods
stos
test
mov
push
test
jg
or
cmp
fsqrt
pop
lahf
push
or
xchg
daa
loopne
loop
int3
lds
push
push
loope
or
testb
jo
jle
imull
in
cmp
adc
fwait
in
add
out
adc
jns
cmp
jo
mov
adc
mov
lcall
lock
rolb
js
loope
shll
mov
imul
jb
lcall
insb
inc
clc
mov
sbb
sbb
ljmp
dec
inc
pop
xchg
loope
xchg
xchg
jno
inc
xor
pop
and
mov
cmp
mov
out
testl
mov
div
pop
lea
daa
mov
dec
outsl
mov
lea
aaa
adc
out
jae
mov
add
in
xchg
jge
adc
push
and
or
dec
push
cltd
test
in
cwtl
mov
fldt
inc
cmp
sti
lret
inc
outsl
add
fsubs
test
sarl
mov
xor
bound
cltd
xchg
aaa
lock
scas
adc
inc
mov
mov
push
test
icebp
lds
daa
cmp
mov
and
lcall
mov
cmpsb
pop
out
add
fldcw
push
das
outsl
out
enter
sbb
clc
or
lods
mov
into
add
test
xchg
xchg
xor
pop
mov
pop
test
addr16
or
jecxz
adc
inc
in
in
inc
push
adc
gs
and
movsb
sti
pop
add
lock
dec
stos
adc
pusha
rcrl
popf
mov
aas
out
daa
pop
push
jmp
ret
in
testb
data16
lea
or
sub
lret
add
cmpsl
jb
inc
negb
or
in
mov
int3
and
pop
xor
add
pop
ds
mov
bound
pop
and
movl
imul
or
mov
mov
mov
push
mov
dec
rorb
or
daa
aas
test
pop
push
outsb
sub
ja
jge
repz
icebp
imul
in
jp
jb
jb
xchg
aaa
mov
or
mov
pop
aaa
cwtl
xchg
add
or
fcmovbe
cmpsl
dec
push
xor
icebp
lea
test
outsb
movsb
lods
lods
mov
pop
cwtl
add
jne
inc
ljmp
dec
loop
cld
std
inc
addb
out
sub
fistl
lcall
mov
mov
pop
cli
lret
pop
fisttpll
cmpsb
movsl
sub
mov
mov
inc
jne
fwait
imul
fnstcw
mov
inc
adcl
sahf
adc
test
je
pop
sahf
repnz
dec
push
jno
jmp
lahf
fcmove
mov
cwtl
inc
sarb
dec
mov
adc
rcrl
in
adc
enter
or
and
push
and
in
push
std
xor
loopne
rcll
mov
sbb
adc
xor
inc
test
mov
xchg
mov
push
sbb
pop
jno
adc
popf
pop
dec
insl
cmp
movsl
loop
sti
dec
shl
add
insl
stc
push
ss
es
test
addl
jne
ljmp
leave
pop
sti
enter
shlb
pop
sahf
cmp
add
push
loopne
sbb
and
xchg
mov
xchg
cltd
push
adc
in
push
pop
sbb
mov
mov
popf
xchg
js
jo
lcall
sbb
ds
or
leave
fcom
xchg
sub
fstps
cs
push
sub
icebp
loop
xchg
repz
jle
stc
and
out
mov
pop
push
in
cmpsl
xchg
andb
xchg
icebp
sbb
mov
jg
cs
mov
fldenv
mov
ss
cmp
or
pusha
adc
orb
mov
add
jo
xchg
addr16
out
sub
cmp
mov
sbb
jbe
push
xchg
mov
insb
stc
jmp
jno
stos
in
mov
pop
push
or
jne
mov
iret
lret
bound
pop
test
ja
lea
add
gs
popa
push
enter
sti
shlb
adc
dec
aaa
dec
dec
lods
and
jg
insl
adc
rolb
jecxz
fisubrl
jne
adc
mov
inc
and
lods
js
mov
pusha
push
sbb
push
lods
jg
gs
mov
mov
das
push
push
push
out
xor
pop
lock
popa
test
pop
push
popa
pavgw
dec
clc
jp
xor
mov
xor
mov
or
xchg
cmpsl
ja
pushf
lods
push
xchg
add
loope
and
sub
mov
xor
lea
fstps
xchg
insl
pop
mov
je
pop
cli
xor
js
add
or
cmpsl
mov
and
js
lea
mov
inc
or
and
push
fnstcw
into
dec
ljmp
pop
aas
xchg
sbb
insl
aaa
dec
mov
lock
sub
jg
mov
mov
xor
cli
push
out
pop
popa
rcr
adc
push
cwtl
jmp
nop
inc
or
jecxz
add
and
dec
dec
mov
pop
mov
je
imulb
cmp
addr16
in
push
cmpsb
pop
or
mov
pop
pop
lahf
push
outsb
xchg
loop
pop
test
cmovno
std
sub
scas
sub
pop
mov
mov
mov
cs
adc
scas
lahf
add
inc
mov
add
pop
sbb
mov
mov
out
call
dec
xor
shrl
and
jbe
mov
adc
lret
bound
pop
stos
add
std
fnsave
push
mov
inc
pop
xor
push
and
imul
les
xlat
mov
inc
dec
popa
xlat
sahf
ds
dec
sbb
pop
add
out
dec
xchg
and
lret
push
pop
gs
aaa
push
mov
fldcw
lock
or
adc
xor
pop
in
xor
xor
xchg
pusha
mov
popw
movb
sub
imul
pushf
xchg
cs
addr16
dec
mov
lahf
cmp
fbstp
idiv
add
mov
sbb
mov
mov
dec
inc
icebp
pop
arpl
mov
xor
mov
dec
std
fidivrs
sub
sub
lahf
push
jg
int
push
cmp
xchg
je
cmp
jmp
mov
sub
lahf
jmp
into
shlb
sbb
dec
xor
mov
xor
jno
pop
lahf
or
lcall
insb
jbe
sub
push
inc
push
test
in
mov
pop
ficoml
cmpb
cwtl
sti
stos
lods
and
shl
loope
pop
jno
subb
adc
test
mov
dec
sub
call
shl
sbb
fnstsw
loope
mov
xchg
popl
cmpsb
out
out
inc
and
sub
in
jl
or
sbb
and
dec
cs
out
xchg
cmp
adcb
idivl
mov
mov
add
sbb
pushf
rcl
inc
xchg
cmpsl
stos
and
enter
or
outsl
and
cmp
fxam
test
pop
pushf
movb
cmpsb
mov
adc
loope
sub
xor
popa
mov
mov
mov
pop
scas
ds
mov
call
xor
dec
xor
addr16
stc
jae
mov
cs
jnp
loopne
mov
jo
jbe
fsts
push
pop
xor
stc
fs
push
dec
mov
into
popl
scas
call
xchg
sub
shll
int
pop
data16
pop
or
pop
stos
and
mov
fidivrl
sub
adc
into
jmp
pushf
push
jns
hlt
dec
test
xor
push
push
xor
outsl
aad
std
mov
mov
ja
xor
inc
stc
jle
dec
mov
cld
movsb
jno
orb
mov
into
jns
sbb
iret
add
imul
and
mov
aaa
pop
adcb
push
ret
sbb
dec
lea
rcl
jmp
fwait
lret
dec
ret
fsubrp
jle
je
jb
and
rorb
inc
pcmpeqw
lret
mov
inc
inc
stos
nop
mov
mov
mov
insb
scas
mov
pop
jle
adc
bound
push
dec
add
aad
mov
push
jecxz
pop
test
and
adc
inc
xchg
fs
inc
in
mov
leave
pop
leave
cmp
pop
jg
addr16
inc
test
fwait
xlat
ljmp
cmp
clc
repz
or
jne
fisttpl
les
aad
sbb
insl
jge
ljmp
jo
orb
test
add
cmp
mov
vpminsw
shl
daa
test
jne
rorl
clc
pop
xor
fucom
jl
jns
movsl
mov
cmp
cmp
sub
in
inc
outsl
shll
fwait
into
push
push
dec
stc
xchg
ja
js
mov
js
mov
and
clc
xchg
and
mov
lcall
inc
and
adc
cmp
stos
ljmp
bound
hlt
or
jae
and
out
xor
fnsave
test
insb
jp
cmpl
in
std
shrb
adc
les
ja
xchg
jae
loop
pop
mov
add
cld
imul
xor
pop
std
clc
jg
clc
xchg
stos
mov
popa
ret
aaa
mov
and
ss
mov
fisttpl
add
cmp
or
pop
lods
mov
inc
addr16
andl
pop
sbb
sar
adc
jo
add
insb
pop
add
add
mov
sub
mov
mov
jl
pop
scas
in
aas
stc
imul
insl
loopne
inc
mov
popf
xchg
xchg
xchg
test
inc
sar
scas
cmp
sahf
mov
pop
cmpsl
sbb
bound
inc
mov
scas
jp
cmp
test
outsb
inc
roll
sub
fidivl
es
int3
aam
pop
xor
bound
mov
aaa
sbbl
imul
je
idivb
push
out
jne
xchg
add
jae
adc
arpl
flds
stc
out
xchg
faddp
std
fsubrp
stc
mov
loopne
or
xchg
adc
jmp
jb
and
pcmpeqd
jb
cmc
in
loope
rorl
insl
fisttps
xchg
push
fdivs
jge
loopne
push
rcrl
leave
push
scas
jge
xor
vcvtdq2pd
mov
sub
jecxz
cmc
cmp
mov
dec
inc
cmovle
push
mov
sbb
lcall
outsl
loopne
test
add
inc
mov
decb
xchg
push
mov
inc
add
push
js
stos
imull
and
filds
addr16
and
lahf
rolb
jne
mov
adc
arpl
outsb
add
fmuls
call
push
or
mov
fdivrl
jbe
leave
aam
stos
adc
fimuls
fidivl
add
mov
lret
dec
enter
push
xchg
aaa
popf
lock
clc
fsub
pop
push
xchg
add
push
xor
test
sbbl
sbb
les
mov
insb
mov
sbb
cmp
mov
mov
sbb
mov
imul
mov
or
or
and
shlb
lea
xchg
push
std
xchg
int
cmpsl
xchg
lcall
push
cmpsb
push
mov
inc
outsl
dec
mov
xor
movsb
push
sbb
sbb
xor
cmp
and
cmp
jnp
insl
jle
mov
rcl
xchg
faddl
push
sub
push
out
add
and
sub
popa
or
add
js
test
mov
xor
push
jmp
lret
dec
jle
popf
inc
insl
cli
xchg
int
cli
mov
inc
insl
jp
cmp
cltd
adc
insb
test
cmp
imul
loopne
stos
pop
push
xchg
ljmp
dec
dec
imul
outsl
mov
or
pusha
jecxz
jmp
test
push
xor
les
sahf
xor
mov
cmp
cmp
out
cmp
stos
rcll
mov
inc
jne
push
mov
cmpsl
mov
or
or
jle
sub
add
and
jp
jo
mov
andb
jnp
imull
movsb
mov
call
mov
add
inc
ja
xchg
inc
clc
mov
arpl
mov
cmp
ljmp
mov
add
sub
and
cmp
mov
cld
lahf
sbb
cld
jne
pusha
jne
jns
mov
outsl
test
dec
mov
leave
pop
cmpsb
test
xchg
in
cmp
pop
sub
mov
clc
js
fidivs
or
mov
lahf
adc
mov
sahf
les
xchg
aad
push
and
xlat
pop
lods
adc
aas
push
inc
arpl
jg
dec
pusha
mov
sub
xchg
mov
jecxz
mov
mov
push
add
adc
mov
mov
stos
leave
lret
mov
pop
cmp
pop
lret
pop
fcompl
jae
insb
jecxz
out
outsl
pop
dec
xchg
jae
mov
scas
cld
or
pushl
jnp
push
in
pop
fisttpl
lret
adc
pop
xchg
pop
xor
roll
dec
jns
cltd
stos
dec
lcall
push
jle
jb
loope
cmpb
aaa
sub
fs
or
cmp
cmovle
lea
jno
int3
imul
lahf
cmp
sub
cli
xor
pop
jecxz
scas
push
shll
xor
jl
sub
jl
adcb
add
adc
sbb
adcb
stc
outsl
jp
and
pop
imul
sbb
xchg
pop
or
shrl
popa
jp
push
cli
add
in
xchg
mov
hlt
pop
push
imul
push
mov
cltd
mov
jne
fsubl
cld
inc
popf
shll
mov
xor
mov
jae
mov
and
popa
mov
xor
mov
leave
mov
mov
mov
mov
pop
and
sub
or
jnp
xchg
jbe
sarl
add
rclb
mov
pop
push
subb
mov
clc
loope
sub
push
pusha
xchg
lahf
lods
mov
das
hlt
out
scas
loop
cmp
xlat
or
xor
pop
mov
cmp
and
adc
mov
mov
adc
pop
dec
pushf
inc
fdivl
test
cmc
and
test
or
std
xchg
std
leave
mov
les
ds
xchg
pop
fidivrs
sub
mov
sahf
and
test
shll
shr
scas
push
andb
xchg
mov
hlt
sub
push
scas
or
xor
loopne
stos
clc
ss
inc
or
scas
inc
push
mov
dec
loope
incl
inc
xor
enter
add
leave
cltd
jp
dec
and
lds
mov
xchg
jbe
adcb
inc
cmp
fistps
add
jbe
cmp
sbb
scas
sti
xchg
outsb
xchg
popa
or
sbbl
xchg
or
arpl
in
dec
push
ret
movb
sub
repz
xor
std
or
out
adc
ffreep
ds
add
imul
pop
ds
mov
dec
mov
dec
scas
add
xchg
xor
stos
sub
psllw
inc
les
ret
cmc
push
nop
ds
or
out
mov
push
cmc
sub
clc
data16
icebp
cmp
mov
fs
aam
adc
xchg
adc
stos
pop
aad
stos
bound
pop
sub
cld
pushf
outsb
pop
outsl
ja
adc
mov
inc
movsl
test
dec
mov
bound
icebp
outsl
insb
je
cmp
jbe
loop
pop
out
out
inc
mov
sbb
lods
sbb
mov
pop
cli
cwtl
xchg
xor
insl
jecxz
gs
sub
and
gs
xchg
push
lea
pop
sbbl
pop
pop
adc
and
daa
aam
test
cmp
lods
add
pusha
add
loope
gs
shrb
mov
sbb
iret
xor
adc
test
pop
sbb
cmpsl
enter
pop
or
cmp
jns
mov
icebp
inc
lds
or
andl
adc
mov
dec
adc
jb
mov
pop
jmp
scas
fisubs
add
iret
test
add
jo
mov
xlat
sbb
push
ret
jo
sub
jmp
jns
lea
lods
addb
std
cli
and
fadds
xor
mov
sbb
in
mov
rcr
cmpsb
incl
rorb
lods
outsb
lock
push
fistpl
popf
adc
or
pushf
loope
out
mov
adc
dec
pop
mov
mov
adc
aam
fnstcw
iret
jecxz
mov
bound
push
adc
inc
neg
adcl
clc
leave
ljmp
jno
fnstcw
ret
clc
imul
sarb
cli
mov
lds
xchg
ss
movl
ds
pop
leave
call
fwait
test
rcrb
dec
add
push
jmp
push
mov
mov
pop
pop
dec
popf
xorb
push
inc
mov
jo
dec
jno
andl
sbb
enter
push
jmp
pop
sub
lahf
mov
rcl
rorl
ljmp
adc
push
pop
fcom
scas
cltd
popa
movl
and
add
fisubl
out
adc
sbb
push
out
inc
pop
ror
push
cmp
icebp
fs
add
sub
and
jb
and
lahf
inc
cli
cld
dec
lahf
popa
je
adc
lcall
jg,pn
and
int
inc
xchg
sbb
jl
push
aas
cmp
stc
mov
push
and
or
dec
mov
mov
ljmp
sbb
enter
loop
and
in
pop
pop
jnp
int3
push
lret
movsl
js
mov
jle
fisttps
push
fbld
cmp
clc
imul
sbb
lcall
xchg
sub
out
jl
inc
cli
jmp
and
cmp
inc
cld
and
loope
push
ret
mov
cmp
outsl
repnz
mov
pop
jecxz
dec
enter
push
adc
int
nop
lea
stos
jae
xchg
rcl
push
mov
lods
cltd
pop
fcmovb
test
fcmovnb
sub
inc
lret
outsl
lods
fs
stc
pop
jno,pn
ficompl
xchg
flds
incb
jae
sub
shrb
cmp
cs
testl
daa
bound
out
pop
out
mov
add
test
push
pushf
jg
ret
dec
je
add
xchg
daa
movb
add
pop
leave
adc
mov
push
in
push
inc
enter
into
jge
je
push
daa
push
xor
out
addr16
xchg
push
mov
enter
inc
movsb
shlb
xorb
testb
out
in
xchg
or
ds
pop
repz
mov
dec
dec
xlat
in
mov
popa
mov
imulb
sub
ds
sbb
mov
xchg
cmp
popf
mov
inc
stos
xchg
or
test
out
push
fimuls
inc
jbe
sub
adcb
mov
int3
jge
aam
in
rorl
dec
enter
clc
pushf
lea
mov
in
in
mov
cmp
lock
sub
test
in
or
iret
sub
dec
cltd
loope
jmp
mov
sub
int
add
sbbb
and
adc
cmpsb
jbe
sti
cmp
lcall
cmovns
loop
xchg
ret
mov
imull
lds
sti
mov
xor
add
jb
push
adc
xor
dec
movb
arpl
sub
clc
insl
addr16
out
iret
push
push
mov
bound
pop
ret
out
mov
into
add
push
fidivs
jmp
testb
xchg
push
push
sbb
sub
lock
dec
fcoml
lret
imul
insb
push
ljmp
push
mov
cmp
sub
xor
pop
hlt
lret
aam
daa
out
fcmovnu
test
mov
push
jmp
jge
loope
cld
lcall
out
icebp
cmpl
xlat
ljmp
int
imul
lcall
jl
sbb
fidivs
adc
fdivs
mov
lcall
roll
pop
pop
repnz
fisubrs
call
and
push
xchg
and
add
sbb
in
or
adc
mov
stos
mov
push
pop
andl
add
callw
xchg
or
aam
mov
stos
ret
ja
adc
or
subl
mov
and
mov
lds
cmp
lods
imul
jecxz
jno
fimuls
mov
lret
loope
cwtl
xor
lret
push
stos
and
adc
imul
das
pop
sub
fcoms
es
jl
mov
addb
in
mov
dec
test
adc
movsl
daa
negl
mov
jns
std
adc
sub
fucomp
scas
out
int
std
push
enter
xor
push
rorb
jae
push
arpl
cmp
cltd
iret
cmpsl
xchg
cmp
popa
lahf
cmc
add
movsl
stos
mov
and
push
cmp
dec
lds
jae
pop
sbb
mov
dec
ret
cmp
xchg
test
push
xchg
shrb
dec
dec
inc
sbb
xor
inc
sbb
jne
sbb
or
adc
inc
into
mov
jge
fldt
push
dec
mov
pop
je
mov
xchg
stc
aad
pushf
xor
pop
lock
xchg
addr16
mov
sti
cmp
jae
daa
push
scas
mov
sub
loope
mov
sub
notl
loop
inc
dec
push
lds
ds
add
stos
jge
pop
rcll
pop
sbb
xor
cmp
outsb
pop
repnz
test
dec
xor
dec
add
ret
repz
mov
cli
adc
dec
sarl
sbb
outsl
pop
arpl
fs
aas
add
enter
jl
sbb
and
sti
in
cmp
inc
mov
sbb
es
sbb
hlt
mov
inc
in
pop
lret
pop
pop
mov
lret
and
pop
roll
mov
inc
push
cmp
dec
jge
cmp
int3
ljmp
aaa
fsubs
rorl
sbb
je
insb
xchg
repnz
mov
fsubrs
int3
xor
adc
and
push
into
pop
add
mov
imul
mov
ret
daa
roll
pop
xlat
and
xor
and
sub
dec
push
fwait
ds
fisttps
sub
push
sub
psubq
inc
jne
cmp
xor
mov
repnz
call
popa
loop
lret
das
ds
sbb
aas
xchg
or
fwait
or
clc
inc
out
enter
enter
pop
sbb
lahf
mov
cmp
pop
mov
dec
sub
aad
pop
push
lcall
pop
sbb
pop
js
movb
int3
outsb
pusha
sub
add
xchg
ljmp
nop
sbb
leave
jl
setle
mov
inc
mov
push
jl
lds
out
orl
lret
bound
shlb
int
leave
arpl
add
pop
mov
and
lahf
adc
inc
ret
outsb
mov
movsb
and
sub
pop
pop
mov
adc
pop
push
cltd
dec
sub
mov
xor
or
mov
out
jno
int3
ret
pop
or
out
repz
cli
adc
cli
xlat
je
dec
pop
lock
ret
inc
test
lret
sub
sbb
inc
jne
bnd
inc
adc
sub
push
rol
mov
pop
jb
outsb
aaa
repz
fstp
fcompl
js
repz
pop
out
xlat
daa
fbld
inc
adc
push
or
mov
aad
jecxz
mov
js
jns
mov
mov
pop
push
scas
adc
add
es
mov
cmc
push
nop
lret
pop
js
enter
push
cld
aad
cwtl
inc
fimull
and
shlb
sbb
sbb
arpl
or
adc
daa
and
outsb
fs
and
push
mov
pop
jo
inc
and
imul
popf
push
inc
jbe
arpl
jns
stc
clc
arpl
jb
push
or
xor
loopne
jae
or
je
ljmp
mov
es
out
mov
or
xor
in
loop
test
push
clc
mov
adc
cmc
loopne
sbb
stos
dec
aaa
es
push
jl
mov
test
bound
push
mov
int
mov
jns
arpl
sti
sbb
das
pop
mov
mov
mov
es
imul
xor
in
push
test
insl
cmpsb
test
sahf
xor
add
cmpsl
sub
aas
cmp
stc
jae
sahf
movsl
shlb
mov
jle
lcall
dec
sbb
dec
jge
test
movsl
pop
ljmp
xor
dec
jl
cwtl
ret
mov
aad
stc
add
scas
int3
mov
gs
push
gs
out
popf
and
inc
ljmp
andb
inc
ss
test
jecxz
mov
jbe
jns
call
xchg
in
mov
pop
xor
int3
jg
adc
sbb
pop
mov
aam
clc
xchg
lret
jne
bound
mov
cmp
and
fcmovnb
xchg
cmpsl
hlt
push
rorl
add
push
adc
pop
hlt
out
mov
sbb
xor
iret
jne
insl
push
cmpsl
nopl
cmpsl
push
nop
fwait
xor
jl
mov
test
mov
push
js
adc
or
insb
pop
inc
pop
xchg
test
mov
outsb
lcall
add
ret
movsb
mov
cmp
dec
test
jg
jbe
pop
mov
out
add
aad
inc
data16
nop
adc
dec
adc
js
sub
jnp
mov
push
sbb
mov
test
iret
mov
mov
lahf
adc
in
cmp
out
ljmp
lret
addr16
mov
jns
sti
push
bound
in
fcompl
iret
jecxz
jle
fucom
cmp
mov
pop
inc
rcrl
pushf
cli
jbe
call
icebp
int
mov
inc
push
push
in
cld
into
out
inc
mov
mov
dec
lret
inc
xchg
mov
pop
inc
fsubrl
xor
push
shr
fisubrl
xor
jnp
jne
lock
xlat
inc
xor
push
das
into
test
cld
int3
mov
test
in
mov
pushf
movsb
test
lret
ja
sub
pop
cs
pop
mov
es
adcl
xor
push
je
jo
dec
or
mov
aaa
inc
out
sbbb
dec
inc
mov
js
ljmp
aaa
adc
push
call
dec
jb
imul
inc
pop
and
lahf
mov
push
into
aaa
pop
lods
cs
lret
stc
adc
adc
movsb
sub
xor
and
shll
mov
iret
in
jb
imul
xchg
loopne
or
fsubl
std
frstor
shrl
fwait
push
js
scas
adc
out
ljmp
xchg
nop
filds
and
lcall
ds
xor
scas
cmp
mov
adc
scas
mov
pop
xor
xchg
mov
xor
negl
mov
ds
lea
jmp
mov
xor
jbe
pop
mov
jmp
xor
int
push
jg
jne
insb
sti
xlat
dec
dec
idiv
fidivl
clc
mov
fistps
dec
pop
pop
mov
push
pop
pop
mov
stos
mov
lods
out
inc
mov
loopne
stos
fists
lods
mov
fwait
push
cmp
inc
mov
les
out
push
ret
in
jns
and
clc
enter
aas
jb
mov
xchg
mov
cltd
xchg
nop
inc
cmp
and
imul
push
adc
mov
sbb
dec
inc
sbb
dec
in
adc
pop
cmc
dec
push
mov
shrb
je
lret
xor
gs
call
push
stos
cmp
xchg
push
jns
out
leave
stos
pop
mov
jb
aam
data16
fsubs
adc
icebp
das
mov
pop
mov
imul
mov
in
xchg
dec
adc
and
cld
pusha
cmp
sub
mov
jmp
sahf
jno
adc
and
in
rcll
inc
loopne
sub
jnp
cvtps2pd
dec
pushf
push
in
jmp
in
jmp
rolb
lea
jb
ss
rclb
jle
add
jae
and
loopne
imul
loope
xchg
icebp
js
or
out
rep
sub
inc
aas
adc
xchg
sti
aad
adc
les
int
or
xorl
adc
jne
mov
and
out
and
ret
icebp
ljmp
repz
add
and
mov
mov
repnz
pop
fsubl
loope
push
dec
loop
clc
out
movsl
aad
int3
stos
aas
ret
shlb
push
stos
hlt
out
inc
xor
fucomi
pop
orb
adc
pop
sti
inc
cwtl
rclb
inc
in
mov
and
xor
jnp
aad
nop
cltd
sbb
mov
aad
mov
cmovl
cmp
nop
mov
mov
and
jae
pusha
push
aas
xchg
and
leave
cmpb
mov
cld
mov
repnz
mov
or
pushf
mov
loopne
enter
adc
cli
dec
cmp
inc
push
ret
sbb
out
sub
mov
and
frstor
cmc
push
into
adc
xchg
adc
add
sub
mov
pop
pop
cmp
cmp
and
movsb
mov
in
dec
fists
xchg
push
adc
hlt
insb
inc
pop
cli
rcrl
nop
push
push
jno
jnp
mov
mov
pop
pop
adc
out
into
inc
repnz
scas
mov
mov
test
sub
dec
cld
jle
jl
int
lock
cmp
pop
xchg
mov
push
add
adc
lcall
or
xchg
jo
or
pop
mov
int3
popa
sub
add
stos
das
cmpsl
js
mov
cltd
adc
push
cmp
pop
ds
cmpl
xor
xor
sbb
push
subb
xor
push
into
test
mov
iret
sub
jmp
daa
inc
rolb
mov
sarb
jae
dec
cld
es
dec
jmp
fldt
js
xchg
inc
outsb
cld
xchg
sarb
je
pop
mov
test
leave
mov
fnstcw
gs
test
dec
dec
dec
stos
jbe
xor
gs
lret
sbb
xchg
and
jne
lret
loopne
out
or
loope
pop
xchg
sub
mov
push
lahf
pushf
xchg
mov
call
push
mov
cmp
pop
add
pop
pop
aad
add
jmp
push
mov
xor
inc
ss
adc
push
scas
mov
xchg
data16
addr16
inc
add
push
push
paddsb
dec
cmpsl
dec
add
sbb
pop
in
test
add
push
xchg
push
enter
iret
push
pop
mov
cwtl
push
pop
popf
loope
or
outsl
xor
bound
sbb
and
jbe
cli
xor
mov
jmp
lret
mov
js
cmpsb
jnp
lds
push
cmp
mov
push
lea
adcl
movl
lahf
in
cmpb
cli
dec
test
jb
dec
jb
sbbb
jnp
imul
mov
mov
inc
pop
dec
sbb
and
and
dec
mov
mov
mov
cltd
mov
test
mov
lea
xlat
adc
mov
int3
mov
push
push
add
es
mov
adc
sbb
pushf
adc
inc
push
pop
es
mov
fisubrs
fcmovbe
mov
xor
cli
or
xchg
int3
adc
push
pusha
push
xlat
inc
dec
leave
dec
inc
cmp
adc
sbb
in
xor
mov
adc
bound
fimuls
addr16
xchg
dec
pop
mov
imulb
mov
jp
lahf
pop
ljmp
cli
inc
test
out
jecxz
fldenv
adc
shrb
sub
sbb
cmp
iret
mov
fucomip
mov
add
addr16
iret
mov
leave
aaa
sahf
pop
lock
movl
inc
push
sbb
js
add
dec
mov
stc
pop
sbb
in
sub
rclb
movsl
scas
pushf
aad
ljmp
jb
adc
pop
loope
aam
test
and
in
data16
push
push
mov
xor
sahf
mov
mov
sub
sbb
imul
jge
test
mov
fmull
jbe
and
bndstx
jno
ss
ljmp
mov
adc
out
adc
ret
ds
out
test
jl
sti
mulb
cmpsl
push
iret
addr16
roll
dec
or
cmpsb
jo
inc
push
movl
push
scas
pop
fimuls
jl
test
jmp
xor
add
aaa
icebp
fnstcw
push
push
out
outsl
gs
imul
xchg
stos
mov
cld
ds
cmpsl
adc
mov
pop
arpl
ja
repnz
jo
stos
or
jmp
add
or
jne
cmp
icebp
push
xchg
cmpps
jbe
add
notb
mov
ss
push
sbb
xchg
outsb
mov
addb
clc
ljmp
push
add
mov
pushf
mov
adc
add
shl
inc
adcb
or
xor
jno
aas
cmpsb
addr16
sbb
mov
hlt
fwait
scas
cmp
lea
loop
stos
ret
add
inc
push
sub
or
sbb
pushf
push
cld
and
je
lahf
sub
out
dec
in
shl
cmp
gs
jo
sbb
xor
mull
and
adcl
nop
popf
xor
and
xchg
mov
xchg
xor
dec
sub
or
pop
loope
pop
imul
loopne
push
cmc
mov
pop
sbb
sub
cltd
mov
cmpsl
fsubs
out
je
sbb
lock
jnp
cmp
xchg
in
es
repz
scas
jl
sbb
push
mov
lock
xor
push
ds
dec
mov
filds
or
jg
mov
dec
pop
cmc
dec
daa
dec
xchg
pop
xchg
iret
push
cmp
andb
lret
fmuls
add
dec
pop
or
loopne
jo
cmp
lods
lret
dec
xor
pop
pushf
jge
mov
loope
add
outsl
icebp
mov
mov
leave
xorb
mov
mov
subb
or
mov
test
lahf
shlb
pop
xchg
loopne
or
jg
call
inc
es
daa
stc
or
decl
ret
roll
inc
subl
xchg
mov
pop
and
outsl
orb
inc
sub
out
jecxz
adc
fiaddl
pop
cwtl
out
add
fiadds
pop
popa
or
push
fstp
add
push
and
imul
or
xchg
adc
lret
nop
inc
sbb
jge
ss
pop
cltd
cvtps2pi
cmpl
mov
or
push
mov
out
pop
dec
addr16
cmp
add
xor
lods
in
cwtl
hlt
cli
push
inc
jl
pop
in
xor
es
mov
sub
fisubrl
xchg
je
jle
inc
subb
pop
std
loop
aaa
aad
or
aas
aam
xor
adc
iret
das
cmp
add
pop
movsl
pop
lahf
jl
ja
sbb
jae
testb
in
call
push
ljmp
sub
adc
arpl
stc
loop
lock
cmp
inc
adc
inc
pop
mov
mov
adc
jmp
nop
roll
mov
pop
vmovmskpd
test
pop
mov
mov
ds
fsubrl
adc
adc
mov
aad
dec
shrb
sub
add
pusha
shrl
jmp
push
popf
repnz
push
adc
xchg
pop
ret
es
and
adc
cmc
sbb
popa
pop
js
xchg
jge
mov
adc
cmp
push
movsl
jecxz
cli
jge
mov
fchs
jne
test
fnstcw
ret
mov
cltd
fldl
rcrb
andb
inc
push
insb
cmp
xor
mov
insl
add
js
add
dec
stos
loope
and
lret
dec
daa
xchg
ss
mov
cld
loop
push
mov
push
int3
out
bound
lods
dec
and
mov
enter
int
fistpll
clc
pop
adc
add
xchg
or
fstps
inc
lea
imul
ds
inc
cmp
ret
in
jno
push
add
stos
sbb
adc
push
out
inc
xor
outsb
jecxz
jb,pn
jmp
nop
nopl
sahf
scas
out
adc
add
cs
inc
test
rcrb
push
je
pop
mov
adc
sub
cmp
pop
repnz
shlb
or
leave
mov
inc
movsb
mov
test
xchg
out
test
mov
stos
js
fs
fcompl
xor
push
cltd
jp
dec
push
mov
sbb
bound
cld
push
nop
or
movsl
mov
mov
and
and
xchg
movl
add
fbstp
xchg
xorb
fld
loope
stos
cld
leave
jp
inc
xchg
xlat
pop
or
jp
mov
shll
jns
and
push
mov
inc
ret
shrl
sbb
mov
jbe
movsl
lret
jns
or
mov
bound
push
inc
add
orl
test
sbb
mov
mov
inc
mov
xchg
sbb
stc
cli
roll
std
sub
jns,pt
pop
jne
add
cmp
mov
testb
dec
xor
idiv
decb
insl
mov
imul
push
nop
sub
lret
aas
bts
pop
stc
fadds
xchg
push
arpl
adc
mov
mov
sub
jne
bound
sub
mov
xchg
mov
push
adc
lock
hlt
adc
rcl
or
mov
inc
ljmp
adc
xchg
bound
int3
cltd
aam
pop
push
in
test
mov
and
add
fistpl
push
inc
movsl
repnz
pop
pusha
lea
mov
mov
adc
aaa
out
lgdtl
cmc
sahf
mov
jecxz
xor
jno
cltd
mov
mov
fsubs
ja
hlt
jge
cmpsl
sbb
adc
ljmp
push
jl
vpsllw
in
pop
loop
bound
ja
push
popa
aam
dec
mov
int
cltd
and
fwait
xchg
and
dec
ret
pop
lret
cmp
xor
sbb
cmc
inc
mov
cmp
push
push
lods
outsb
roll
xchg
test
cmc
cmp
lahf
jge
jae
int
test
rol
movsl
pop
pop
lds
lods
test
fdivs
test
lods
pushf
lahf
ds
jbe
sbb
add
fs
jl
lahf
mov
mov
xor
or
sarb
and
loope
mov
add
mov
sti
xchg
xorb
sub
loop
lock
into
lock
mov
adc
dec
xchg
mov
or
mov
xchg
popf
arpl
fidivrs
fcoms
popf
xor
dec
in
cmp
fbld
cmpsl
insb
jns
fstpl
push
xchg
fwait
xchg
mov
sahf
rcl
pop
loopne
sub
lret
stc
cli
jns
movsb
idivl
pop
pop
sti
mov
cmp
cmp
in
mov
or
loope
jl
or
adc
jle
pop
mov
sarb
les
es
lods
xor
aas
daa
inc
push
and
shlb
dec
test
dec
mov
in
aaa
pop
jbe
xor
sar
arpl
aad
xor
sub
dec
push
lock
mov
cmp
cmc
xor
add
dec
or
sub
hlt
xchg
xchg
jae
aaa
sbb
and
push
jbe
xchg
ss
add
adc
inc
out
xlat
xchg
jo
inc
xlat
adc
rorb
sbb
shl
xchg
sbb
fcmovnu
inc
pop
jae,pt
mov
and
mov
mov
lock
push
in
mov
inc
stc
sbb
ja
dec
jmp
sub
push
mov
mov
test
lcall
dec
pusha
or
sbb
xor
std
xchg
mov
add
inc
mov
subl
and
pop
jl
pop
fdivrp
sub
pop
fs
and
scas
push
shl
ss
sbb
insl
mov
sbb
jg
test
decb
mov
in
outsl
leave
pop
jne
ljmp
xchg
or
push
cmp
data16
mov
sbb
sbb
outsl
cmp
fidivrs
into
pushf
int
stos
iret
dec
mov
subb
je
mov
lock
xchg
rcl
push
shll
les
daa
and
mov
or
out
test
cmp
addb
sti
in
mov
mov
into
negl
adc
cmp
pop
jmp
or
les
sub
stc
cmp
cmp
add
cmpsb
popa
or
push
and
imul
pushf
cmp
or
mov
xchg
iret
lods
inc
fcoml
pop
inc
mov
pusha
pop
push
test
test
and
fsts
mov
mov
fdivl
ljmp
sub
lret
idivl
dec
pop
mov
pop
lock
jmp
and
mov
sbb
in
popf
sti
and
xor
mov
dec
arpl
push
ret
bound
addr16
pop
cmp
das
data16
lds
jbe
je
js
mov
insb
xchg
les
and
xor
pop
xor
test
popa
je
xor
movsl
and
pop
das
out
add
or
jecxz
cmp
shll
out
adc
sub
or
lret
int
das
xchg
es
stos
add
pop
or
mov
mov
pop
jns
clc
mov
mov
sub
mov
cltd
mov
insl
jo
pop
addr16
push
pop
mov
fnsave
mov
imul
xlat
cltd
cmp
mov
cmp
lods
shr
dec
dec
repz
jne
ss
pop
pop
sub
add
outsl
sub
push
js
jno
dec
jo
cmp
sub
les
or
jmp
repnz
xor
scas
pop
push
xchg
iret
sti
stc
dec
iret
xchg
jle
mov
pop
push
ss
jb
mov
mov
xchg
test
pop
xchg
insb
jo
mov
mov
xor
in
cmpsb
or
jns
cmp
adc
push
aaa
fstps
or
or
test
inc
pop
insl
xor
aam
out
push
scas
inc
jb
imull
xchg
and
out
and
xor
std
pop
add
mov
or
cmp
ficoml
dec
mov
adc
adc
faddp
inc
push
gs
in
outsl
cmc
sbb
movsl
xchg
sub
fisttpl
sbb
mov
xlat
push
aam
pop
pop
cmp
push
gs
stc
fs
and
pop
inc
sub
sbb
shlb
sub
pop
das
dec
push
mov
in
push
pushf
jno
in
loope
xor
rcr
jecxz
lds
jne
push
cmp
xor
shl
popa
int3
xchg
adc
loop
cmp
push
cld
add
pop
push
push
decb
addr16
scas
out
cmp
sub
xchg
dec
notb
dec
ljmp
jecxz
lret
and
hlt
jmp
ret
nop
add
pop
mov
mov
outsb
insb
mov
insl
test
gs
cmpsl
or
mov
in
out
in
stos
cmp
ror
bound
mov
sbb
outsl
enter
divb
cmp
and
add
aaa
mov
jnp
adc
fstpl
mov
jno
icebp
iret
jae
fcomps
push
bound
cmp
mov
mov
push
fs
or
fdivr
in
lea
loopne
xor
xor
xchg
pop
and
dec
fisubrs
clc
mov
cmpsl
loop
hlt
shl
les
rcrb
loop
adc
nop
sub
imul
popa
mov
pop
mov
shlb
mov
mov
in
movsb
stos
push
and
in
cmp
negb
mov
das
jo
bound
cltd
mov
ret
fstps
mov
jb
iret
mov
lods
loopne
push
xor
adc
mov
or
lods
loope
fimuls
or
and
mov
ret
cs
scas
outsl
lock
push
lahf
dec
movsb
sub
jno
ret
inc
mov
shl
ds
dec
adc
add
fimull
loope
insl
mov
shrb
xor
in
sub
dec
int3
pop
cmp
in
adc
jns
fnsave
fsubrl
and
fimull
insb
or
repz
pop
sti
loopne
mov
lret
pop
xchg
imul
movb
jle
mov
fimull
pop
sub
add
scas
jg
fwait
bound
mov
out
fcompl
data16
xor
in
fcoms
stc
cwtl
sub
je
pusha
xor
sarl
push
fdivl
mov
xlat
push
dec
jmp
clc
es
into
add
fdivrl
push
mov
cmpsb
adc
sub
inc
dec
movsb
or
fnstenv
loopne
rorl
inc
xor
xchg
push
push
cmp
pop
lcall
pop
int3
ljmp
fistpll
out
movsl
jge
fimull
pop
leave
sti
lcall
pop
stos
jns
faddl
sarb
outsb
outsb
pop
clc
cltd
lea
adc
inc
mov
gs
out
sub
test
push
fnstenv
xchg
jns
in
imul
pop
out
clc
sbb
rcrb
sbb
xor
inc
or
pusha
je
inc
cmp
push
mov
fdivrs
mov
or
dec
push
mov
test
inc
lds
dec
cmp
push
fcmovnbe
mov
inc
in
cli
lcall
ljmp
mov
stos
push
out
call
mov
addb
pop
fisttps
pcmpeqd
mov
push
mov
pop
xchg
adc
jo
stos
jae
mov
mov
mov
jle
push
ffreep
sub
leave
stc
dec
pusha
lea
lcall
scas
or
adc
or
hlt
mov
mov
xor
lret
jmp
mov
dec
add
pop
add
mov
sbb
cmp
dec
mov
out
pop
push
ret
mov
xor
jb
in
xchg
jne
sub
sbb
in
jg
mov
fsubrl
cmpl
aam
shrb
movsb
cmp
jns
cmc
xchg
int3
jno
mov
inc
inc
dec
fwait
sbb
pop
pop
sub
dec
adcl
push
loop
pop
inc
aad
mov
adc
int3
jnp
hlt
pop
aam
out
sbbl
pop
fistps
outsb
mov
xorl
mov
lcall
mov
adc
push
add
in
dec
push
mov
inc
cmp
out
jo
mov
mov
sahf
shll
repz
stos
and
arpl
push
cmp
arpl
subl
mov
fwait
mov
das
xchg
insl
outsb
in
sub
lea
pusha
sub
adc
mov
popa
dec
hlt
popf
movsl
repnz
inc
lea
mov
sti
adc
gs
mov
push
gs
xchg
mov
pushf
les
int3
jbe
popf
xor
in
fimuls
xor
inc
adc
enter
aam
orl
add
test
push
mov
mov
daa
xchg
divl
xor
lret
mov
mov
insl
notb
lahf
and
movsb
add
cltd
movsl
sbb
movsb
xchg
mov
lret
loop
cmp
test
sbb
mov
ja
loop
data16
movsl
mov
shl
les
std
adc
das
subb
cmpsl
addr16
push
fs
pmulhuw
insl
sbbb
enter
mov
cmp
xorb
mov
dec
push
mov
jne
xlat
xor
popf
movsl
xlat
leave
cli
inc
xlat
cmpl
stos
lods
mov
dec
mov
lret
and
adc
frstor
inc
mov
mov
lock
loopne
mov
sub
mov
gs
ja
sahf
test
pop
inc
loope
pushf
push
pop
or
mov
lods
stc
repz
fucom
sub
outsb
cli
loope
jmp
fiadds
lret
cmpsb
and
jle
inc
add
adc
je
jno
inc
sbbb
rorl
push
cwtl
insl
mov
push
xor
pop
mov
ret
imul
jmp
pushf
leave
xchg
daa
push
shrb
mov
jne
sbb
mov
lcall
rcll
les
std
clc
mov
fimull
inc
pop
fstl
cmpsb
sbb
cmp
outsb
jl
iret
insb
in
xor
hlt
jecxz
leave
push
inc
pop
stos
mov
inc
sbb
adc
paddb
or
cmp
pop
setle
popf
lods
les
dec
lret
xchg
and
dec
fsubrs
adc
sub
and
movsl
xor
jle
test
sub
fildl
ficoml
mov
pusha
cmpsb
push
add
cmpb
push
cld
insl
adc
std
test
mov
ljmp
pop
sti
xchg
test
pop
sti
or
jecxz,pn
push
popa
movl
inc
fstpl
orb
cli
inc
test
cmp
fwait
mov
mov
aam
leave
loopne
xor
push
jge
sub
fincstp
lea
cld
fs
dec
aad
lret
jno
and
mov
adc
xchg
mov
nop
leave
hlt
mov
mov
or
or
test
rclb
pop
xchg
test
jge
jecxz
stos
xlat
fnsave
lds
add
xchg
ja
push
jns
mov
sbb
hlt
lock
mov
mov
adc
dec
pop
lahf
jge
sbb
and
js
sub
inc
ss
sbb
mov
push
and
cmp
adc
lods
mov
adc
aas
pop
xchg
loope
enter
push
xorl
push
push
divl
jno
sbb
pop
out
dec
mov
ss
push
mov
pushf
sbb
notb
scas
mov
ret
or
pop
add
ja
mov
ret
out
pushf
xor
cmpsl
inc
adc
xor
mov
fcmovbe
incb
sub
dec
lret
and
sub
push
add
rcl
jae
mov
fnstcw
push
scas
popa
sbb
sub
jmp
pushf
call
pop
lods
cwtl
inc
shrb
lods
cmp
aam
add
outsl
sbb
jo
sar
mov
lret
pop
call
insb
cmp
adc
icebp
repnz
dec
xchg
mov
and
cmpsb
repz
les
dec
testl
push
cmc
lret
xchg
mov
xor
mov
ret
fsubrs
push
es
adc
in
das
jne
fistpl
and
insb
mov
das
xchg
loope
and
sbb
lea
lcall
xchg
xchg
mov
mov
repz
xlat
or
push
cmpsl
sub
inc
gs
popf
fistpl
mov
push
insl
cwtl
push
call
and
sbb
rol
jbe
lret
icebp
insb
out
jbe
aas
sbb
imul
aam
pushf
add
xor
test
mov
fdivrs
fcoms
dec
outsb
in
xlat
sbb
rcr
ja
mov
imul
xchg
push
fst
inc
cmp
icebp
add
sub
ss
sbb
test
mov
mov
inc
sub
xor
call
cs
jmp
ds
jle
pop
mov
imul
sbb
bnd
xor
pop
add
jnp
insb
push
adc
sahf
add
aam
dec
insb
push
adc
sbb
push
dec
cmc
outsb
inc
mov
push
jae
mov
push
dec
mov
adc
shlb
jnp
cli
shlb
imul
in
loopne
dec
lcall
add
inc
rclb
cmpb
sub
dec
sti
lock
add
sub
inc
movb
push
iret
xor
rclb
ficompl
into
ljmp
jbe
mov
leave
daa
out
faddl
dec
sub
and
pop
popa
test
lcall
mov
mov
aas
repz
sub
jnp
nop
negb
movsb
fldenv
cltd
aad
imul
jno
pop
repnz
orb
stos
pop
sbb
test
pop
xor
ffree
pop
sbb
call
movsl
dec
data16
xchg
lds
xor
arpl
xchg
and
dec
add
das
subl
push
pop
jno
icebp
adc
xchg
mov
loop
adc
nop
stos
xor
lods
add
pop
cltd
lret
push
arpl
xchg
push
aad
stos
sbb
mov
mov
mulb
cmc
shrb
push
stos
cmp
stc
mov
pop
and
stos
xchg
stc
mov
stos
push
movsl
sbb
cmp
ss
sti
pusha
addl
cmp
bound
inc
push
lcall
cmp
out
ss
repz
xchg
insl
mov
ret
fiaddl
sub
jmp
insb
imul
inc
cmp
dec
xchg
stc
cld
xchg
or
xchg
xor
mov
pop
insl
popf
sbb
jmp
int3
add
repz
push
add
insl
and
xchg
data16
test
inc
inc
jo
jnp
scas
cmp
enter
mov
in
mov
jge
mov
adc
or
sub
xrelease
loope
or
jb
sti
jbe
xor
mov
push
hlt
push
call
xlat
fs
aaa
inc
add
repz
cld
jno
ret
mov
stc
or
push
mov
jl
test
sub
sub
pop
fwait
mov
mov
mov
xor
std
scas
jb
lods
in
lea
push
dec
cmp
xorl
jmp
lods
mov
and
pushf
cmc
sbb
mov
xchg
aad
call
and
and
cmpsb
test
shlb
cmp
pop
jl
sbb
sub
jp
scas
add
sbb
jp
ja
hlt
cmp
dec
jge
icebp
fs
mov
test
iret
mov
out
push
mov
and
inc
test
push
jp
aas
mov
xorl
out
fsubrs
or
push
loopne
xlat
out
das
lea
sub
in
into
xor
ret
jp
daa
imul
dec
cmp
mov
sub
mov
lds
adc
pop
push
pop
jbe
ljmp
iret
jle
pop
in
lods
fbld
mov
fisubrs
les
add
dec
xor
mov
and
xor
dec
push
test
cmp
sbb
orb
jl
pop
jno
xchg
out
lods
in
int3
test
incb
mov
inc
dec
dec
adcb
icebp
mov
addr16
mov
sub
mov
psllq
filds
cmpl
inc
cmpsl
mov
mov
ret
jmp
xor
add
pop
adc
aas
xor
cmpsl
pop
pop
xor
je
lods
out
loop
jne
or
inc
faddp
sahf
jle
std
mov
fldl
js
rolb
icebp
fs
sahf
loope
aaa
mov
scas
jne
push
xchg
push
and
xchg
or
sahf
mov
or
mov
and
lea
outsb
dec
push
les
cmovg
pop
sbb
popf
nop
push
clc
repnz
sbbl
mov
inc
sub
xchg
xchg
stc
dec
scas
fstl
daa
cwtl
cmc
add
je
stos
mov
stc
adc
xor
aaa
movsl
add
clc
repz
out
xchg
jmp
mov
les
out
push
mov
or
mov
mov
fnstsw
inc
add
adc
or
fs
mov
or
mov
enter
pop
mov
ret
xchg
mov
xchg
adc
clc
repz
cmp
inc
dec
in
inc
dec
dec
test
add
jg
data16
xchg
mov
adc
repnz
clc
pushfw
cmp
add
mul
adc
sbb
xorb
repz
das
cmpsb
jnp
insb
aad
or
xor
adc
or
gs
gs
shll
fwait
adc
xor
mov
fsubp
lock
mov
leave
pop
dec
mov
sub
or
jge
cmp
xchg
data16
or
fistl
sub
cltd
mov
into
mov
cmp
inc
data16
xchg
sbb
jae
imul
shll
int3
sub
fistps
push
les
jl
fnsave
xor
sub
push
fcomip
xorb
xorl
lods
adc
xor
gs
lahf
xchg
aaa
inc
movsb
repnz
jne
add
cmp
fidivs
stos
popf
call
arpl
sub
inc
inc
loopne
rcrb
mov
roll
cmp
leave
arpl
lcall
scas
dec
cld
dec
leave
cltd
cmpsl
jae
xor
jge
cmp
clc
mov
or
pop
in
out
pop
pop
sbb
or
mov
sbb
push
cltd
ds
rorl
sbb
out
fistpll
mov
pop
dec
ss
jmp
stc
push
sub
mov
cltd
shufps
clc
dec
fmulp
mov
mov
shlb
add
popf
addr16
movsl
in
xchg
push
jle
xlat
int
adc
loop
rorb
not
push
fildll
scas
out
push
mov
push
push
xchg
sub
fsubs
call
inc
movsb
cs
add
repnz
enter
sub
mov
xchg
push
sbb
sar
push
push
jne
cs
movsl
lods
lock
cmpsb
mov
pop
mov
inc
popl
int3
dec
addb
mov
sub
add
pop
dec
push
nop
mov
mov
mov
sub
arpl
lcall
arpl
mov
pop
rorl
add
data16
fdivs
jge
add
pop
test
call
stos
jbe
ret
int3
rcrb
fdivl
push
dec
sbbb
test
adc
test
or
xlat
subl
mov
sub
mov
notl
aaa
cmp
xor
pop
mov
movsb
in
fcomps
and
das
incb
mov
mov
mov
fnstenv
std
shlb
repnz
or
push
out
xchg
outsb
xchg
mov
test
in
stc
in
sbb
mov
aas
jae
push
insb
mov
inc
pop
mov
repz
jo
jecxz
sub
cmc
or
sahf
xor
ds
fists
dec
out
filds
push
adc
sub
adc
mov
push
pop
jo
mov
and
stos
mov
inc
out
adc
es
jmp
test
test
mov
call
inc
sbb
xor
mov
add
inc
and
adc
hlt
xor
lahf
incl
mov
in
sub
movsl
add
mov
cli
insb
xchg
lock
sbb
je
es
test
xor
ficoms
test
imul
in
cmpsl
adc
cmp
mov
dec
ds
dec
pop
jb
jle
ds
into
dec
cli
mov
insl
int3
inc
stc
lahf
inc
adc
cmpsl
dec
das
inc
lret
pop
mov
or
xlat
outsl
andl
pushf
or
mov
sub
dec
mov
inc
fwait
lods
cmc
rorb
add
loopne
jmp
push
in
popa
add
mov
je
sbb
sbb
jns
or
add
pop
popf
cmp
loop
cmpsb
pop
pusha
out
xchg
or
addb
jnp
push
popf
imul
adc
lret
addr16
mov
movsb
push
cmp
mov
lea
subl
fmull
sbb
sbb
jmp
mov
jecxz
dec
outsb
repnz
add
fiaddl
mov
pop
roll
dec
push
add
and
shr
sbb
or
mov
sahf
xor
pushf
mov
rclb
sub
push
andl
mov
inc
jl
mov
repz
loopne
push
lahf
or
push
sub
sarb
mov
xor
je
xchg
fwait
jle
lock
push
push
stc
mov
jbe
lods
sub
pop
lcall
enter
cmp
mov
pop
mov
push
dec
push
mov
xor
int3
out
cmp
mov
push
cmp
push
lea
cmp
out
fdivr
sbb
stos
mov
mov
xchg
adc
orb
movsl
jae
mov
imul
std
add
test
jp
in
aam
mov
repnz
or
loope
xor
addb
jmp
pop
cltd
out
and
jge
pop
std
in
pop
xlat
or
clc
push
sub
gs
or
jno
pop
mov
dec
ret
neg
mov
xor
js
or
mov
inc
inc
addb
jbe
mov
arpl
mov
xchg
and
outsl
popf
arpl
aas
xchg
and
andb
dec
or
or
sbb
jge
stc
xchg
xor
sbb
ja
adc
push
stos
popa
add
sbb
filds
cmp
jl
mov
mov
mov
cmp
pop
jno
out
or
mov
out
xor
inc
cld
sub
cmp
cmp
adc
loopne
inc
xchg
es
dec
je
cmpsl
pop
call
inc
inc
test
gs
mov
jb
aaa
stos
add
mov
sub
adc
and
scas
popa
in
test
add
dec
and
and
sbb
outsl
test
adc
lods
jl
xor
fstl
imul
loop
add
ljmp
popa
pusha
sub
mov
pop
paddusw
mov
lahf
sub
rolb
divl
fcoms
pop
push
cmp
add
push
lahf
ds
xor
enter
dec
sti
stc
mov
push
mull
shlb
push
cmp
xorb
xor
test
fwait
inc
push
test
xorl
add
jp
pop
adc
xchg
cmpxchg
inc
lcall
rcrl
movsb
push
shll
dec
cld
lcall
in
in
sub
pop
loope,pt
xorb
add
out
xor
inc
pop
insl
fcompl
lahf
mov
int3
add
out
fs
in
push
pop
fucom
mov
add
dec
repz
push
jg
mov
flds
mov
movsb
mov
jno
mov
sbb
inc
xor
shl
outsl
push
mov
in
add
mov
scas
scas
inc
or
mov
aaa
jle
xchg
aam
lret
fdiv
push
aas
and
dec
dec
and
add
inc
inc
jge
mov
rclb
xchg
out
pop
dec
faddl
xchg
xchg
test
ljmp
nop
out
jl
xchg
push
push
pmuludq
add
popa
decb
jmp
hlt
pop
call
mov
adc
lahf
movsb
faddl
into
clc
push
mov
jns
sbb
insl
hlt
pop
and
cmp
jo
and
out
ficoms
jecxz
lret
dec
pop
add
mov
mov
jecxz
out
outsb
rclb
cmp
or
js
xchg
addr16
dec
and
dec
dec
cld
jle
enter
and
popfw
lea
out
data16
sbb
fistpl
pop
ret
test
cmpsb
jbe
icebp
xchg
cmpsl
xchg
xchg
lock
xlat
pop
push
xchg
cmp
scas
rcl
pop
out
xchg
rcl
shrb
sbb
ds
mov
mov
cmpsb
push
sub
scas
dec
hlt
lahf
out
adc
pop
int
mov
push
jne
dec
insb
ficompl
dec
xlat
sbb
mov
push
mov
in
sbb
rdmsr
int
add
xchg
dec
sub
and
enter
mov
mov
xchg
sti
adc
rcrb
xor
sub
rcr
int
lock
ds
out
dec
push
or
push
clc
rorb
push
outsl
pop
adc
lret
inc
xchg
sbb
jp
lea
scas
sti
lods
scas
lahf
and
add
mov
or
cmp
add
add
xor
or
xlat
out
addr16
andl
lret
pop
aas
sbb
pop
xchg
into
pushf
out
lods
xor
testb
gs
add
ljmp
jmp
cmp
pop
or
dec
adc
fadd
cmp
jmp
aas
stos
idivb
cwtl
repnz
sbb
cmp
mov
ficompl
in
mov
push
lret
add
jae
sub
std
mov
mov
popf
jl
ficomps
adc
mov
xchg
xchg
jbe
add
add
xchg
or
out
adc
sbb
xchg
mov
aad
out
mov
das
comiss
xor
outsb
push
data16
xor
cmp
jmp
fisubs
jl
outsl
movsb
ret
mov
mov
ds
sbb
cmp
jbe
cmp
inc
xchg
jae
sub
push
jno
add
cld
jbe
adc
xchg
pop
lds
xlat
push
test
mov
push
test
pop
jge
xor
add
lea
inc
jecxz
outsl
xor
icebp
mov
xchg
push
jnp
lds
rorl
xor
iret
jo,pt
out
jl
jo
fs
int3
dec
sbb
mov
jg
mov
lods
popa
add
ss
fs
push
or
pop
pop
or
add
mov
outsl
loopne
mov
int3
shlb
dec
add
ret
cwtl
sub
and
and
sbb
mov
jnp
loop
mov
and
test
dec
insb
sbb
and
lret
subl
xor
mov
inc
sbb
dec
out
cmp
int
mov
loopw
jbe
loopne
fs
out
daa
and
imull
or
outsb
dec
mov
mov
out
sub
cs
jns
shll
push
jl
add
or
fisubs
loop
fcomps
out
insb
mov
mov
es
popa
cmpsl
adc
dec
push
sahf
imul
out
push
and
jecxz
pop
lock
dec
lods
mov
or
xchg
dec
pop
pop
rorl
mov
sub
mov
std
jno
or
xchg
inc
mov
inc
add
push
sub
and
sbb
or
inc
cmp
mov
ds
push
fcmovbe
dec
push
bound
inc
lret
inc
xor
stos
xlat
push
test
mov
in
inc
aad
nop
movsb
lods
arpl
xchg
inc
lea
adc
mov
jecxz
lcall
sub
cmpsl
sbb
dec
pop
xchg
scas
xlat
daa
xor
cmp
mov
in
ror
aaa
icebp
xor
xor
lea
aaa
inc
sub
nop
adc
shlb
and
or
xchg
mov
jb
adc
nop
push
arpl
and
jp
test
aaa
mov
ret
inc
divl
fsub
in
sub
sub
addr16
js
cmpsl
dec
repnz
mov
loope
out
repz
scas
jle
stos
or
cld
icebp
xchg
int3
mov
add
sbb
std
loopne
pop
shlb
and
icebp
push
and
xchg
sar
lcall
aas
add
cltd
fcmove
sub
imul
push
shll
mov
xor
inc
roll
dec
jecxz
daa
mov
mov
inc
imul
mov
push
dec
in
add
int
js
mov
and
sbb
out
push
inc
sub
bound
lea
insb
mov
pusha
inc
sbb
cld
xor
or
not
xor
nop
adc
xchg
push
in
enter
jg
movsb
jg
cmp
add
lret
hlt
push
int3
or
sub
test
enter
dec
pcmpeqb
xor
cmp
push
jae
in
test
stc
dec
insb
cvttss2si
jo
mov
sbb
stos
or
rol
fisubrs
push
inc
aam
mov
or
mov
add
xchg
lds
xchg
cmpl
push
dec
leave
sub
ret
xlat
mulb
movsb
dec
fdivl
jae
popa
sahf
cmpsb
into
and
xchg
cmp
fcoml
inc
inc
push
roll
inc
jno
or
xor
imul
push
dec
or
out
roll
add
add
jecxz,pn
cmp
rorl
sbb
mov
pop
xchg
push
in
shll
int3
xor
pop
add
jbe
jge
and
adc
xchg
jbe
jnp
loop
adc
imul
jmp
sbb
sbb
pop
mov
add
pop
sub
jle
push
jg
or
test
ret
and
mov
in
mov
das
sub
enter
test
test
xor
les
and
setno
mov
ja
push
adc
jge
mov
cmp
jecxz
test
inc
es
jb
jo
gs
dec
sbb
out
cmp
dec
pop
xchg
push
mov
xchg
adc
addr16
push
push
xchg
imul
test
aaa
push
lods
inc
adc
insb
sbb
push
data16
jns
xchg
data16
test
out
push
faddl
leave
cld
or
sbb
dec
imulb
xor
out
jl
outsb
dec
pop
sub
sbb
pop
sbb
adc
xor
cli
or
jno
pop
cmp
xor
xlat
fsubrs
sub
pop
pop
xor
cs
imul
ss
hlt
sub
mov
sub
xor
fisubs
int
jmp
mov
push
add
and
addl
jg
mov
mov
jb
jmp
adc
out
stos
cld
push
clc
imul
push
mov
adc
icebp
rcl
addr16
call
pusha
leave
idivl
cmp
xor
jg
dec
xlat
roll
insb
data16
hlt
je
push
icebp
mov
icebp
cs
jmp
lret
imul
fstpt
mov
dec
cmp
clc
xor
xchg
xor
xchg
and
mov
pop
xchg
jle
out
inc
xchg
push
xor
mov
push
pop
inc
mov
sbb
dec
outsb
out
jg
fwait
mov
mov
mov
lods
xchg
mov
mov
push
pop
and
inc
test
in
xor
xor
test
or
and
mov
fs
and
loope
and
xor
ds
lcall
mov
mov
daa
inc
cmp
mov
xchg
cmp
or
add
les
jmp
dec
pop
jne
fdivl
pop
vmovntps
out
jae
rcll
lret
inc
sub
and
and
jp
lahf
lret
jo
mov
adc
pop
push
and
sub
xchg
aam
and
mov
sti
xor
jbe
cmp
and
int3
iret
lea
ss
fs
mov
xor
mov
xlat
imul
das
shl
xor
mov
stos
dec
movsb
mov
push
loopne
leave
js
sbb
mov
dec
or
mov
or
cmp
addr16
jmp
or
enter
add
push
push
movsl
or
sbb
fptan
push
inc
xor
aad
inc
mov
out
sbb
bound
fildl
rorb
movsb
int
pop
push
ljmp
shrl
das
shl
push
mov
mov
mov
mov
lea
outsl
daa
mov
mov
sub
fstl
movsl
mov
lock
dec
mov
sub
imul
xor
pop
cli
xor
mov
pop
popf
pop
aas
fisttpl
jno
add
icebp
mov
push
xchg
cmp
pusha
pop
mov
in
jmp
lahf
test
lcall
push
addl
xor
test
lcall
sarl
daa
mov
mov
xchg
fcomip
call
push
stos
int3
jnp
xor
dec
hlt
lods
push
pop
fistl
ret
xor
jle
ret
push
mov
mov
out
cltd
jne
sahf
fsts
cmpsb
mov
je
cli
in
lcall
xor
add
int3
sbb
cli
arpl
cmp
fimuls
das
cmp
fidivrs
decb
xor
inc
cltd
or
or
addl
adc
aad
push
icebp
adc
inc
jl
and
imul
popf
call
inc
xor
sbb
xor
lds
cmp
jo
pop
adc
fisttpll
inc
jecxz
pop
sarl
mov
add
push
in
or
push
adc
fcomps
jnp
cmp
shlb
push
mov
push
sbb
dec
cld
jno
xor
movsb
sub
mov
dec
pop
cmp
fiadds
inc
add
cmp
je
xchg
and
push
pop
rcrb
jae
les
test
adc
test
inc
sbb
add
mov
cltd
xor
and
shll
mov
movsl
xchg
lds
adc
push
sub
jb
pop
push
lcall
out
jne
jno
push
inc
loope
mov
in
popf
mov
adcl
in
enter
jb
jle
add
lock
lods
xchg
imul
stos
cli
dec
sahf
sbb
dec
lods
incb
insb
sub
shll
pop
repz
xor
mov
jnp
xor
and
fadds
xchg
das
jbe
in
je
les
sub
adc
xchg
jns
mov
add
andl
sub
add
push
cmc
push
mov
ffreep
cmp
call
fs
iret
or
lock
cli
push
mov
sarl
jp
popa
sbb
gs
push
and
test
xchg
lods
push
mov
sub
xchg
arpl
jne
cmp
sbb
push
inc
incb
sti
mov
in
mov
push
ja
sti
pop
enter
cmp
jmp
es
push
or
jmp
jno
out
push
xlat
jle
mov
add
ss
int
xchg
push
shrl
mov
shl
std
sub
push
popa
inc
clc
push
mov
lret
cli
cwtl
aas
cmp
jl
xchg
inc
lcall
fildll
incl
mov
inc
ja
xchg
jp
addr16
add
add
push
push
inc
shrb
jnp
xlat
pop
ret
pop
scas
mov
jns
push
pop
xchg
inc
xlat
dec
dec
test
loopne
into
jl
push
aas
les
iret
mov
pushf
iret
in
test
mov
mov
aas
mov
push
push
bound
int
fs
push
or
loop
push
or
lods
loop
sub
push
add
addr16
bound
iret
sub
sarl
out
lret
push
movsl
aaa
dec
xor
xchg
jnp
push
lock
or
fs
xor
cmp
popf
in
dec
push
idivl
or
cmpsl
or
sbb
add
pushf
sbb
inc
pop
outsl
lret
inc
int3
sub
sub
pop
into
repnz
cmpl
test
xchg
mov
ss
cmp
shrb
rcr
add
xor
mov
loope
add
out
repnz
fnsave
movsb
fs
repnz
mov
xchg
inc
in
les
pop
scas
cmp
xor
cmpl
lea
mov
out
ljmp
ss
pop
mov
ret
jl
lcall
mov
xlat
sub
jmp
aad
adc
jno
sub
nop
and
loope
repz
xor
mov
out
inc
sub
fdivrl
insb
mov
mov
sbb
jne
lock
sbb
cmp
shlb
pushf
mov
cmpsl
lret
adc
testb
mov
sbb
or
ret
or
dec
xchg
jns
mov
sub
push
cmp
and
inc
adc
call
pop
clc
fimuls
adc
dec
mov
pushf
mov
and
enter
dec
xchg
push
jmp
loopne
hlt
and
test
and
xor
jecxz
ret
mov
lret
mov
rclb
xor
mov
bound
test
aad
pop
mov
push
inc
cli
mov
adc
fadds
push
ja
jnp
ljmp
mov
rcll
inc
add
push
cmp
sbb
lods
nop
addb
int
es
xchg
jge
mov
xchg
mov
ss
movd
int
adc
or
push
push
mul
test
jl
in
dec
or
xchg
mov
inc
test
sbb
add
cltd
shl
stc
leave
popf
mov
lea
outsl
shll
js
dec
push
jmp
mov
test
mov
adc
or
call
jg
mov
sbb
mov
pop
clc
fs
jge
adc
faddl
rorb
jecxz
pushf
cmp
js
sub
add
xchg
loop
movsb
ret
pop
xlat
ret
sub
pop
mov
dec
jmp
or
popf
mov
fldt
sahf
movsb
pop
cmpsl
call
xchg
ds
dec
subl
mov
ret
mov
sbb
xchg
push
repnz
aaa
sub
mov
aad
mov
out
sbb
outsb
insl
repz
push
xor
push
cmp
fmuls
dec
or
inc
xcrypt-ofb
cmpsl
sub
cmp
cmp
mov
xchg
ret
leave
inc
sbb
push
dec
dec
xchg
inc
dec
xor
push
jecxz
lock
or
xor
push
adc
scas
hlt
ja
dec
mov
pop
sti
jmp
jp
pop
mov
insb
movsl
imul
loop
aaa
add
mov
push
push
mov
hlt
cmp
adc
inc
test
movsl
push
lahf
push
jmp
data16
fadd
xor
xchg
mov
lea
fidivs
into
jmp
jns
roll
xchg
xor
ss
inc
iret
jl
outsl
out
rdtsc
mov
sub
pop
mov
dec
push
jmp
cwtl
sbb
mov
push
add
mov
outsl
lahf
mov
sbb
dec
in
push
pop
inc
dec
xor
es
movsb
mov
push
outsb
mov
pop
cmp
mov
pop
int3
xchg
jnp
mov
and
mov
pop
cmpsl
mov
mov
inc
and
sub
push
testl
es
pop
subl
jb
cmp
or
jg
and
bound
pop
out
dec
ret
data16
sarl
jmp
enter
outsb
and
call
sub
aad
cmp
mov
mov
jno
and
xchg
pop
shl
mov
xchg
dec
or
out
mov
pop
das
jno
jmp
lods
outsb
jge
mov
outsb
mov
dec
repnz
dec
jae
int
pop
push
dec
mov
mov
push
dec
cs
daa
xchg
jle
stc
pop
sub
fisubrs
or
push
or
pop
sets
xchg
imul
mov
fldenv
movsl
cmp
mov
add
mov
aam
out
clc
jns
leave
mov
add
loop
push
pop
pop
inc
and
push
pop
repz
sbb
enter
lods
lahf
xor
mov
mov
les
jns
ljmp
mov
and
cld
inc
inc
dec
out
push
sub
fidivl
out
ljmp
push
and
jne
xchg
leave
mov
lcall
arpl
fstpt
cmp
xlat
js
jae
ret
push
dec
jp
test
jno
bound
call
sbb
adc
bound
out
push
movsl
in
lret
lret
scas
in
iret
mov
loope
jo
add
mov
xor
dec
sbb
jp
pop
lock
test
or
cmp
outsl
stos
and
add
out
or
insl
jns
push
jp
sub
or
mov
mov
ja
and
test
mov
icebp
call
jb
jle
mov
mov
pop
imul
cs
dec
and
sbb
aaa
pusha
or
sub
xchg
inc
imul
lods
sbb
enter
push
cmpl
adc
xchg
and
mov
movsl
aam
data16
dec
mov
frstor
dec
adc
and
les
add
icebp
rorb
add
push
addr16
or
push
movsl
cmp
inc
in
pushf
test
and
orb
lret
daa
inc
je
add
scas
lret
fwait
nop
aad
and
test
mov
add
xorb
pop
jle
adc
outsl
in
aas
popa
xlat
stos
and
popa
mov
push
mov
lret
stos
mov
imul
push
push
lret
mov
mov
inc
pop
pop
jg
jb
sub
xchg
inc
cli
incb
inc
inc
std
mov
or
lock
stc
sub
sarl
mov
pop
dec
sub
test
loop
imul
cmp
cltd
dec
inc
iret
dec
jne
or
jo
adc
outsl
stc
mov
jbe
test
dec
pop
popa
sub
xchg
jns
inc
pop
add
daa
loopne
xchg
mov
xor
mov
cltd
outsl
or
test
out
cli
mov
sub
stos
mov
icebp
xor
xor
lret
adc
cmc
pop
xlat
ret
pop
jmp
dec
js
mov
lret
rcrl
dec
xchg
int
aam
sarb
mov
fmull
mov
pop
stc
sub
sub
es
adc
xchg
test
out
mov
mov
jge
sahf
mov
push
cmpsb
push
push
adc
arpl
push
aas
mov
inc
xor
addr16
stos
stos
inc
add
push
jne
popa
adc
daa
and
das
pop
fs
fidivs
mov
xchg
les
mov
sbb
xor
gs
arpl
inc
xor
pop
pushf
adc
fs
sbb
scas
stos
push
jno
sbb
cli
fists
xchg
or
pusha
loope
notl
cmovp
jge
bound
insl
pop
cs
dec
cmp
jb
lcall
push
and
sbb
inc
cs
cltd
sub
lods
xor
fstp
roll
cmp
mov
and
mov
cmp
fisttpl
into
mov
arpl
dec
xchg
mov
cmp
mov
xor
xchg
stc
lgs
lods
clc
cmc
lods
test
lret
jne
mov
data16
movsb
insb
jne
sbb
faddl
in
inc
dec
cs
dec
xchg
mov
mov
inc
push
lea
mov
inc
cltd
lea
jge
mov
and
xchg
inc
rcrb
cmpsl
lds
in
je
or
jecxz
ror
in
xlat
loope
xchg
xchg
cwtl
ja
ja
shlb
add
loop
push
xorb
cld
int3
pop
inc
aam
hlt
jno
adc
hlt
aad
sub
out
add
push
nop
fmuls
insb
imul
jae
ja
inc
dec
nop
mov
mov
xchg
ja
lea
push
jp
jge
mov
out
insl
mov
pusha
mov
cltd
icebp
cmp
cmp
sbb
faddl
inc
inc
or
pop
outsl
mov
sarb
xor
dec
adc
jo
sub
jmp
call
movsl
movzwl
fstps
dec
and
idivl
js
hlt
sbb
inc
pop
fisttpl
mov
fs
dec
mov
cmp
int3
jg
and
int
push
jb
push
hlt
adc
dec
pop
pop
push
ret
sahf
add
icebp
movsb
mov
sub
into
xor
subl
sbb
add
push
push
stos
xor
and
push
xchg
sbb
xor
push
aad
xchg
aad
push
mov
jae
jecxz
cwtl
shl
ss
movsb
mov
ret
incl
mov
cmpsb
mov
mov
jecxz
xchg
test
jl
mov
in
sbb
lods
ds
aam
add
stc
sbb
cmp
mov
push
negb
mov
dec
neg
and
mov
mov
xor
out
dec
mov
iret
sub
add
into
jnp
mov
inc
leave
mov
pushf
and
mov
popf
xchg
or
lret
mov
scas
sub
std
xchg
test
push
jmp
adc
sub
mov
pop
jb
sbb
addb
mov
mov
loope
cltd
fstl
sub
pop
popa
imul
call
cmp
data16
pop
loopne
test
push
xchg
inc
nop
ret
add
fadds
inc
test
out
jae
jmp
sbb
add
leave
adc
push
push
test
jmp
xchg
mov
cmp
inc
and
mov
inc
jecxz
xchg
xchg
jge
icebp
or
xchg
scas
adc
out
out
ljmp
and
xchg
repnz
xchg
jae
sti
sub
test
jb
sub
mov
jecxz
dec
jne
cmovo
jge
hlt
addb
es
mov
or
add
cmc
and
in
jmp
sarl
lahf
mov
aas
fdivs
repz
adc
adc
loope
xor
adc
xchg
pop
xchg
pushf
sbb
inc
push
test
cmc
das
mov
lock
sbb
pop
or
add
xor
or
fs
ja
negl
jns
hlt
sbb
xor
mov
dec
sbb
adc
adc
jnp
xor
scas
add
iret
adc
dec
inc
iret
jb
test
cmp
mov
mov
pop
xor
popf
inc
pop
jae
jae
rcll
xlat
sub
arpl
xor
cmp
sub
loope
add
sbb
jno
inc
pop
inc
inc
lcall
test
cmpsl
mov
push
fcoms
dec
pusha
xchg
dec
sub
add
push
jmp
cmp
iret
mov
out
push
xor
and
push
fwait
sbb
int3
jp
icebp
fcoml
sbb
insb
jno
mov
jg
iret
mov
daa
mov
jne
js
jne
and
shlb
add
cld
orl
cltd
pop
fdivl
shl
xor
fstl
mov
sub
lret
iret
inc
sahf
xor
fildl
xchg
pop
mov
sub
xchg
outsl
int3
clc
fsubs
mov
jnp
jp
mov
imulb
add
cli
fiadds
pushf
stos
test
mov
and
sub
mov
out
arpl
hlt
cmp
push
icebp
sbb
xchg
in
imul
add
lahf
add
sbb
mov
inc
shl
ljmp
mov
imul
and
cli
or
xor
bound
cld
jb
dec
xor
push
jnp
xchg
imul
loop
ljmp
push
jp
push
mov
dec
rcll
shrb
enter
arpl
xlat
and
push
mov
test
popf
jle
loop,pn
inc
fs
jo
adc
mov
sub
xchg
in
outsl
sub
nop
mov
jecxz
xchg
and
jb
icebp
call
sbb
loope
and
aaa
push
cmp
mov
push
add
call
mov
pop
outsl
and
test
lcall
sahf
cmp
sbb
cwtl
xchg
add
mov
cmpsl
push
int3
leave
int3
sub
test
xchg
cmpsb
shlb
in
pop
mov
mov
repnz
or
push
jnp
pop
push
mov
jne
test
inc
ds
out
inc
sarb
lret
and
ret
lcall
jl
pop
xchg
out
pop
mov
clc
rorb
mov
out
aas
cli
fcompl
bnd
movl
fld
jl
sti
insl
adc
pop
mov
jbe
jae
stos
enter
sbb
adc
jmp
xchg
mov
repnz
call
loopne
push
sbb
popl
mov
push
xchg
popf
pop
out
stos
dec
add
push
aad
sarl
popa
xchg
pusha
cmp
stos
xchg
loopne
and
cli
xchg
arpl
and
adc
push
pop
mov
cmp
pushf
mov
mov
cld
cmp
stos
sbb
xchg
adc
and
xlat
test
add
test
push
mov
test
clc
cld
sahf
ja
imull
out
dec
mov
outsl
popa
jg
mov
daa
cmc
inc
push
test
imul
inc
sub
js
push
outsb
fbstp
push
sarb
mov
and
je
cmp
sub
int
dec
or
dec
adc
fbstp
pop
jmp
int
pushf
inc
push
jle
inc
push
lahf
std
mov
das
adc
push
pop
adc
xchg
std
leave
adc
repnz
pop
stos
mov
dec
add
stos
loope
repz
iret
sub
or
cmp
jge
dec
stc
mov
inc
mov
xchg
jne
mov
jg
sbb
std
lods
jns
aam
xor
or
andb
jg
sbb
cli
dec
jbe
sbb
jl
call
adc
and
push
fwait
xor
pop
insb
pop
push
mov
or
lock
jns
or
fwait
cmp
and
add
aad
fistpl
sbb
aas
push
sub
lret
push
insb
mov
adc
movsb
add
adc
out
sti
jecxz
out
pop
repnz
sub
xor
fs
xchg
pop
sarb
out
xchg
scas
stos
jne
testb
mov
rclb
push
fistps
imul
jge
in
daa
xor
or
ret
add
push
in
pusha
xor
fisubl
ret
pusha
lods
dec
lret
sub
gs
mov
pop
insb
cmc
movsl
leave
push
pop
clc
test
repz
fimuls
pushf
pushf
rcl
aas
pop
lret
testl
into
cmp
out
cmp
cld
ret
js
or
or
or
jl
xor
mov
fdivrs
sahf
das
add
into
in
inc
mov
pop
pop
aas
inc
out
ret
mov
loop
mov
in
jno
sbb
pusha
jb
aas
push
ffree
push
cmpl
in
js
mov
lea
mov
loop
popf
xchg
in
stos
into
push
mov
or
sti
push
in
jle
test
sbb
push
jp
mov
jmp
adc
and
ds
jbe
adc
cmpsb
mov
mov
add
in
sub
push
insl
out
rolb
and
jmp
dec
std
pop
pop
ljmp
sub
mov
cmpl
mov
jmp
cmp
pop
mov
rorb
add
xlat
push
loope
dec
jnp
lcall
mov
cmc
roll
das
subb
int
movsb
loope
sub
sbb
mov
lcall
or
ljmp
roll
jmp
cmp
or
aam
aas
leave
jae
jbe
sub
ljmp
push
sub
mov
or
std
mov
fdiv
scas
sbb
sbb
iret
add
jmp
mov
dec
in
dec
adc
dec
in
push
insl
fnstenv
or
jbe
lcall
lds
insl
out
gs
aam
jno
shrb
and
cmp
out
sahf
xorb
aaa
nop
mov
add
mov
or
cmpsb
or
adc
aam
mov
pop
subl
adc
addr16
sub
mov
out
mov
test
mov
lret
rorb
dec
into
adc
lock
shrb
nop
or
insb
mov
and
in
mov
es
scas
adc
push
dec
or
lea
dec
add
pop
mov
xchg
fwait
jns
aam
fwait
jmp
fldcw
adc
sbb
repz
fdivrl
std
neg
js
mov
imul
adcl
sbb
cmp
cmp
mov
insl
adc
push
xchg
dec
popa
cmp
adc
bnd
pop
aas
les
cmp
outsb
icebp
jle
icebp
mov
sub
mov
lret
hlt
sub
xor
sub
and
xor
mov
push
fdivr
add
cli
ljmp
in
sbb
dec
pop
cli
sub
mov
dec
fisttps
mov
in
scas
push
jle
dec
repz
ret
insb
pop
pushf
cmp
aas
mov
inc
mov
das
adc
pop
mov
lods
in
sbb
pop
out
roll
mov
dec
dec
push
lcall
pop
stc
cmpsb
shrl
je
push
fwait
inc
cmpsl
fmuls
push
test
xchg
lret
xor
jg
push
or
cli
jo
mov
pop
repnz
dec
das
xchg
lret
dec
and
fs
int3
jge
outsl
data16
dec
sbb
ds
sbb
es
scas
repnz
in
lahf
fwait
insb
xchg
dec
into
sahf
mov
or
pop
add
rcr
hlt
dec
jg
push
mov
cs
loop
cmp
lods
jo
or
cld
or
jmp
dec
lret
in
enter
pop
insl
mov
mov
fsubs
fwait
stos
mov
inc
sub
cld
push
and
jno
lret
leave
push
cmpsb
jecxz
jne
js
pop
cmp
idivb
jle
inc
int
cmp
cmp
fcompl
inc
mov
out
xchg
jecxz
je
int
lahf
jg
rolb
pop
pop
xor
pop
adc
lret
xor
jecxz
adc
dec
push
and
jp
sub
xchg
je
out
fidivrl
addr16
pop
xor
inc
ret
leave
mov
orb
pop
mov
arpl
xchg
inc
clc
cmc
dec
jb
pop
xor
mov
pop
insl
push
fisttpl
popa
mov
mov
nop
fs
int
insl
mov
aas
sbb
mov
push
mov
push
dec
mov
rclb
or
sub
inc
sub
add
jb
sahf
adc
pop
dec
mov
arpl
pop
lretw
add
mov
movsl
push
jo
mov
adc
jbe
lahf
pop
shlb
and
add
pop
mov
test
sub
sub
je
jne
sbb
or
inc
mov
loope
sbb
fcmove
jp
mov
mov
jmp
in
xchg
mov
cmp
lea
sub
fdivr
pop
push
sub
ret
cs
push
hlt
add
enter
pop
jb
icebp
sbb
xchg
out
mov
or
lods
ret
inc
test
xchg
cmp
cli
lret
gs
xchg
push
inc
lcall
loopne
xor
mov
enter
mov
add
push
fucomp
inc
cmpsl
fnsave
into
xor
adc
mov
mov
sti
push
xor
inc
xor
jb
mov
int3
or
rcr
cmpsl
push
push
cmp
inc
cmp
xchg
push
out
push
daa
jg
add
imul
repnz
pop
and
mov
inc
out
in
dec
fildll
in
mov
jecxz
cmp
push
fidivl
cmpsl
cli
mov
pop
movsb
xlat
xchg
fmulp
mov
mov
xchg
scas
mov
nop
scas
arpl
mov
ljmp
stc
andb
xor
into
clc
cld
into
mov
aad
mov
sub
test
mov
mov
xchg
sub
xor
jl
pop
into
jmp
lcall
mov
pop
lahf
or
cmpb
adc
push
rcl
movsb
mov
jle
pop
jecxz
test
xchg
cwtl
mov
jo
mov
add
dec
std
jns
scas
jmp
mov
or
loop
fsubrl
jmp
cs
sub
mov
iret
lahf
jecxz
inc
test
push
stos
mov
popf
inc
gs
adc
or
dec
mov
lock
fcmovne
sub
xchg
test
push
repz
dec
sti
mov
or
jns
pop
xorb
xor
xchg
outsb
insb
push
pop
push
data16
bound
enter
int3
call
push
cmpl
or
das
mov
std
shlb
sti
dec
dec
pop
inc
adc
loopne
xchg
movsb
cmp
or
inc
fmulp
bound
fs
cmc
add
mov
mov
icebp
in
dec
push
outsb
fdivrs
push
dec
jmp
test
icebp
inc
push
add
sbb
lds
outsl
add
popa
aaa
jo
pop
pop
xchg
outsb
dec
pop
repz
ss
or
jmp
xchg
pop
enter
fistpll
inc
sub
and
inc
push
shlb
xor
xchg
stos
hlt
cmp
iret
xchg
mov
in
lods
mov
cmp
leave
mov
nop
popf
inc
add
xchg
lcall
cli
mov
cltd
and
mov
imul
add
fnsave
push
shll
out
mov
mov
das
or
inc
inc
cmp
not
or
inc
inc
test
popf
popf
xor
jle
lret
adc
sbb
lods
cmp
loop
jle
cltd
pop
es
and
call
pushf
lret
subb
cmpsb
jp
insl
div
lock
or
fcoms
les
lret
add
enter
push
ljmp
aas
bound
and
sub
mov
cs
bswap
inc
jmp
bound
iret
cltd
testb
lea
repz
stc
cld
in
ror
pop
or
push
stc
pop
test
inc
mull
jp
pop
push
inc
jne
xchg
jg
mov
xchg
out
xlat
xor
mov
fisttps
test
cmpsb
in
or
pop
jno
cmc
or
testl
pop
sbb
adc
jl
xchg
dec
jle
push
sahf
mov
loope
add
shrb
insb
cmp
push
fldenv
pop
add
add
mov
sar
imul
add
add
pop
mov
fwait
pop
dec
fwait
push
mov
int
jge
lret
lock
or
adc
js
repnz
cmp
int3
mov
xchg
sub
dec
mov
sbb
ds
scas
jno
mov
adc
incb
mov
popf
adc
insb
mov
cli
xor
fmuls
sti
imul
dec
data16
int
and
shlb
jmp
mov
sbb
in
fcmovnbe
jb
adc
mov
mov
or
test
hlt
mov
inc
push
outsl
cmpb
pop
adc
xor
and
pop
dec
jae
and
fisttpll
sbb
mov
mov
in
xor
scas
push
out
loope
daa
icebp
sbb
imul
pop
das
aas
data16
lea
mov
movsb
imull
addr16
push
mov
loopne
cmc
add
insl
xchg
mov
xor
stc
sub
jno
add
scas
xchg
cmc
enter
mov
pushf
jg
jne
outsl
gs
adc
cli
int3
dec
or
mov
push
cmpsl
lret
outsl
fadd
stos
cmp
insl
ret
xor
adc
sbb
mov
adc
in
mov
cmovns
inc
ret
cmp
test
lea
sarl
inc
xlat
push
inc
enter
aad
in
negb
ret
out
sub
mov
add
push
lret
cmpsl
pop
dec
jp
clc
mov
subl
mov
adc
mov
mov
lods
call
jl
push
adc
and
mov
add
clc
shrb
inc
or
lcall
arpl
mov
pop
leave
inc
and
scas
fistps
bnd
lds
in
dec
sbb
lahf
mov
sub
or
jmp
nop
sbb
dec
test
pop
out
xchg
xchg
mov
jmp
jg
xlat
cwtl
stos
or
icebp
mov
rep
in
cli
sub
and
pop
das
xrelease
dec
mov
pusha
jne
jae
jg
sbb
mov
mov
mov
lcall
cltd
push
dec
mov
xlat
add
mov
jge
out
xchg
ljmp
rclb
in
jmp
flds
in
js
mov
mov
stc
pop
sub
sbb
inc
dec
jbe
outsb
push
sub
inc
out
xchg
subb
roll
pop
das
shl
loop
call
push
push
movsb
pop
push
cmp
rol
popf
bnd
addr16
out
in
jne
fisubrl
pop
pop
in
pop
push
dec
dec
jnp
push
xchg
outsl
pop
fstpl
pusha
cmp
cli
mov
push
int3
push
mov
fwait
inc
aad
inc
xor
movsl
jbe
repz
popl
pop
xor
mov
icebp
imul
bound
lock
data16
mov
dec
add
cli
cmpsb
mov
mov
jl
lret
stos
cmc
add
fiadds
push
movsl
scas
sar
outsl
push
test
loop
lret
push
xor
xchg
sub
sub
dec
aaa
test
cltd
jl
mov
arpl
sub
jg
or
inc
repz
ljmp
cli
push
jmp
pop
jg
sub
lock
mov
int3
out
inc
shrb
jge
dec
jle
pop
xor
adc
mov
cmpsb
loop
jb
cmpsl
aam
rorl
sbb
sub
cmp
insl
inc
in
dec
push
inc
inc
out
or
pop
adc
jecxz
push
clc
mov
scas
sbb
cmp
push
arpl
in
dec
pop
sbb
mov
add
out
into
clc
pop
addr16
mov
div
out
and
hlt
mov
mov
fists
pop
pop
je
scas
ficomps
insb
xor
add
or
jnp,pn
popf
loop
sub
fists
dec
sahf
push
xchg
dec
xor
int3
jmp
addr16
jbe
jp
sbb
inc
jb
xchg
shll
sahf
leave
adcl
clc
loop
sbb
push
pop
out
and
clc
mov
mov
and
adc
jo
push
outsb
adc
mov
mov
inc
hlt
bswap
loopne,pn
scas
cmpsl
insl
push
rorl
insl
jo
cmc
add
repz
bnd
cwtl
xor
cwtl
lock
mov
outsl
loope
add
or
mov
mov
aam
pop
or
test
ficompl
xchg
dec
jnp
in
mov
scas
dec
inc
push
adc
sbb
sahf
xor
ret
fadds
and
popf
in
popa
popa
lcall
pusha
wbinvd
rcrb
add
jns
add
out
push
pop
icebp
cmp
and
popf
and
gs
pushf
out
fimuls
xchg
arpl
mov
test
or
push
mov
add
inc
cmp
xor
jg
fcoms
clc
xchg
push
popf
inc
push
cmp
xchg
clc
scas
ret
test
fidivrs
add
add
rclb
mov
movsb
jb
adc
sti
inc
lret
mov
xchg
or
repz
loopne
sbb
fistpll
int3
stc
dec
jle
mov
xor
in
push
or
cmp
inc
sbb
sub
sub
push
jmp
ret
xor
jp
add
cmp
repz
mov
test
xchg
and
adc
add
mov
push
es
dec
mov
jb
pop
lahf
push
clc
inc
call
mov
into
mov
js
cmp
sbb
int
mov
mov
rorl
sub
scas
or
fdivs
push
or
aaa
push
xor
mov
inc
call
imul
in
sti
xor
je
imul
les
pushf
cmp
lret
scas
pop
cmp
insl
roll
cs
push
add
in
es
cmp
cmp
inc
jl
mov
mov
push
cmp
xchg
or
mov
inc
mov
shll
pop
aad
pop
popa
push
pusha
lds
sbb
test
clc
inc
jb
xor
and
outsl
and
and
mov
andl
inc
ret
repz
in
mov
arpl
jne
pop
adc
xlat
lods
sub
push
std
sub
mov
mov
in
and
daa
sbb
ja
mov
pop
sub
and
pop
adc
push
push
pushf
out
adc
cwtl
pop
inc
out
lods
or
lods
inc
xor
cli
popf
shlb
xchg
pop
nop
es
outsb
popf
mov
jne
adc
sbb
xor
push
or
xchg
nop
icebp
lret
mov
and
push
dec
imul
inc
inc
push
insl
xor
jo
bound
pushf
sbb
cltd
dec
xchg
in
inc
sbb
jmp
xor
mov
xchg
sahf
popf
mov
orb
mov
xchg
ja
push
mov
push
mov
dec
pop
stos
or
xor
push
ja
repnz
inc
push
xchg
cltd
testb
es
xor
movsl
jg
fmull
jecxz
fcmovbe
aas
adc
es
push
scas
mov
out
dec
mov
stos
mov
xor
stc
ret
and
inc
lock
cmc
arpl
pusha
and
icebp
push
sti
add
xchg
xchg
jno
aam
cli
fisubrs
or
imul
ljmp
dec
add
aas
push
jae
out
sarb
lods
xor
cmp
ja
outsl
mov
push
pop
andb
les
into
mov
das
sub
dec
outsb
push
fstpt
xchg
gs
fincstp
imul
std
mov
pop
cmp
popa
cli
cs
outsl
dec
or
pop
mov
add
or
fstps
repnz
test
cmc
clc
adc
xor
jge
shr
inc
lods
inc
adc
mov
or
mov
mov
pop
pusha
pop
ficoms
lret
faddl
ds
addb
jae
pusha
mov
cmp
cmp
jb
or
loop
push
in
divb
adc
arpl
lea
and
pop
mov
dec
inc
pusha
cltd
cwtl
in
dec
ljmp
push
jno
add
cmp
jg
loope
fisttpll
xchg
pushf
lods
inc
dec
sahf
movsb
test
hlt
adc
sbb
cltd
add
pop
mov
adc
xchg
es
in
movsb
xchg
sbb
sub
and
and
cmp
cmp
mov
push
adc
or
pop
mov
and
dec
pop
imul
repz
or
lods
fucomp
sbb
test
aas
subb
in
push
xor
add
mov
lcall
pushf
movsb
sub
mov
jmp
add
and
push
sub
call
hlt
sahf
hlt
repnz
cli
mov
rol
into
out
cwtl
mov
fbld
int
leave
xchg
out
imul
jb
outsl
sarb
mov
mov
out
aas
mov
movsb
jb
add
push
pop
jbe
xchg
bound
fisttpll
mov
insb
hlt
pop
subb
xor
mov
push
lods
push
mov
push
dec
into
sbb
dec
cs
scas
popf
enter
clc
push
sub
icebp
insl
jge
xor
outsb
push
ret
sub
pop
mov
enter
lods
inc
sahf
pusha
sahf
leave
nop
sub
inc
not
jne
lock
jb
sub
and
jne
stos
aad
mov
into
push
ss
cmp
cmp
push
ds
xor
lret
and
in
cld
fildll
out
mov
mov
lock
scas
jne
sub
pushf
into
sub
adc
cmp
xchg
cmp
mov
cmp
or
lahf
mov
lret
push
iret
icebp
int
call
dec
xchg
mov
shlb
sub
add
lcall
lock
and
jno
add
stos
insb
das
jne
fnsave
in
add
push
jo
les
cltd
jnp
and
and
xor
sub
adc
mov
mov
jmp
stos
iret
stos
scas
or
imul
mov
cltd
ret
in
insl
pushf
xchg
xchg
out
test
es
push
xchg
pop
xor
scas
sbb
lods
mov
dec
je
in
fwait
es
outsb
or
sbb
jp
sub
mov
push
mull
cli
push
adc
int3
xchg
inc
mov
jp
imul
or
in
lock
mov
cmp
fsubrs
xor
jge
pop
call
and
rcrl
mov
add
loope
aam
pushf
outsb
sbb
sub
and
movsb
cmp
xor
outsb
sub
xor
imul
mov
dec
add
dec
and
inc
fimuls
mov
adc
ret
adc
inc
int
pop
mov
fdivrl
mov
add
mov
add
outsl
js
icebp
mov
cmp
mov
cmp
mov
mov
ret
or
stos
pop
int3
xor
inc
jecxz
push
fwait
xor
xor
or
push
sub
xlat
out
sbb
cmpsb
fldcw
cmpsb
test
inc
inc
mov
inc
ret
das
stos
jle
fcoms
mov
shrb
out
push
gs
movsl
lods
fcoms
lds
jmp
dec
subl
andl
cmp
outsb
loope
and
movsb
in
cs
inc
sbb
cmp
mov
cmpsl
cltd
movsl
pop
in
in
fisttpl
hlt
pop
cltd
cld
rolb
dec
aaa
testl
add
sub
sub
jmp
cld
dec
jb
jae
or
add
add
and
pop
in
xchg
mov
xlat
inc
xchg
in
dec
imul
sbb
outsl
add
cld
pop
adc
jns
or
dec
enter
jge
mov
and
hlt
xor
movsl
jmp
adc
ror
inc
lahf
faddl
mov
and
popa
sbb
and
daa
enter
out
insl
das
jo,pn
push
stos
push
xchg
testb
cmp
lock
sub
push
sub
add
fisttpll
pop
xchg
cmp
add
mov
jno
stos
jl
inc
cli
mov
sbb
inc
or
mov
in
xor
mov
ja
or
mov
loop
test
pop
repz
mov
std
pop
sub
sub
cmp
fldenv
xlat
mov
ficomps
gs
pop
pop
mov
jl
xor
jno
xor
daa
iret
jg
pushf
or
popa
bound
loopne
scas
sub
fcmovnb
out
cmp
leave
jnp
test
mov
jo
imul
xor
cmp
pop
sbbb
mov
ljmp
cmpsl
stos
cmp
mulb
sub
shlb
dec
daa
or
inc
adc
scas
pop
add
btc
jnp
inc
aaa
jno
popl
cli
sub
cmpsl
push
dec
mov
fnstsw
inc
sub
or
pop
or
int
jns
sub
lahf
cmpb
inc
push
cltd
stos
loope
mov
mov
mov
in
mov
sub
sbb
pop
in
pop
insl
movsb
call
mov
bound
and
add
jg
mov
push
cwtl
out
popa
mov
dec
push
mov
push
faddl
nop
jae
rcl
test
cwtl
cmp
jnp
jb
jge
rclb
fstl
ss
ljmp
xchg
cmpsl
enter
xor
and
adc
inc
xor
add
push
add
adc
cld
dec
cwtl
insl
loopne
adc
add
and
fcomps
mov
movsl
rcll
fcom
or
test
int3
lret
imul
xor
push
aam
inc
dec
pop
sti
push
mov
adc
inc
shrb
mov
inc
dec
imul
mov
popa
stc
add
sbb
mov
je
pop
addb
pushf
xchg
daa
or
push
xor
jnp
shll
adc
adc
hlt
sbb
dec
scas
and
test
cmpsl
ret
jmp
or
lods
and
mov
sub
sbb
int3
push
lcall
inc
push
jle
jge
sub
movsb
scas
dec
fwait
cmpsb
mov
inc
in
into
mov
popf
inc
ficomps
fidivs
xchg
inc
std
scas
or
inc
xor
inc
add
bnd
in
cmp
mulb
decl
out
pop
adc
cmp
sbb
mov
pop
rol
jmp
insb
popf
std
mov
stc
mov
enter
sub
fadd
and
push
lret
imul
arpl
cmp
shl
outsl
mov
in
sbb
mov
repz
dec
imul
es
add
and
pop
out
lcall
faddp
fmuls
arpl
aad
fdivs
call
mov
jmp
lret
inc
dec
add
mov
mov
fadd
cmp
cmp
inc
hlt
in
leave
mov
mov
jp
movsl
repnz
mov
add
outsb
cmp
test
lock
popa
negl
cmp
dec
rcrb
mov
dec
xchg
push
pop
dec
cmp
xor
jmp
popf
insl
fcmovne
fistpll
xor
jg
sub
xchg
jno
sbb
aas
xchg
dec
cmp
pop
int
sti
mov
outsl
jecxz
lods
nop
jb
sub
sbb
lods
jmp
shr
movsb
mov
popa
aam
testl
stos
aas
sub
add
mov
or
cmpsb
push
rclb
mov
pcmpeqb
mov
push
test
cld
pop
or
sti
cmc
gs
shll
adc
add
xlat
jnp
xchg
out
ss
xchg
ds
sbb
shlb
cld
outsl
jns
pop
mov
jp
mov
or
or
jecxz
mov
lock
sarl
aam
ret
out
aas
inc
enter
fnstsw
add
pop
fwait
icebp
or
sub
xchg
jl
inc
das
or
xchg
mov
test
add
cmp
mov
ret
pop
lock
jg
add
out
adcb
mov
mov
cmp
and
jge
jle
ret
pop
out
movsb
mov
push
mov
dec
test
cli
pop
pop
cmpsl
loopne
stc
dec
mov
or
lods
mov
jge
aam
jnp
push
ja
add
inc
clc
outsl
sbb
push
fimuls
xor
outsb
jg
adc
pop
lods
jecxz
and
in
lods
imul
cmp
inc
int
sub
cmovne
out
add
jmp
lods
cmpsl
in
les
mov
add
int
sbb
xor
test
ror
aad
pmaddwd
pop
orb
mov
sbb
fisttpll
jle
sub
jb
inc
sub
popa
or
jg
mov
xlat
out
xor
push
mov
sbb
mov
rcrb
fistpll
loop
test
ret
push
lret
je
mov
bound
nop
mov
in
test
cmp
lds
inc
sbb
loop
xlat
mov
sbb
push
fisttpll
sbb
popf
inc
aas
dec
cld
ja
sub
fcomps
into
jecxz
and
xor
aam
lret
inc
pop
shl
clc
add
mov
adc
adcb
pop
movsb
sti
jg
loopne
xor
shlb
fcmovu
fisubl
dec
or
fcoms
stos
rcrl
sub
adc
push
jmp
lahf
leave
into
loop
mov
das
pop
dec
dec
push
mov
ret
repnz
sti
js
mov
mov
popf
mov
adc
cmpsb
jo
or
xchg
pop
and
sti
xchg
xor
aam
xchg
repz
int3
or
mul
mov
into
sbb
test
jp
mov
inc
lret
mov
sub
imul
dec
sbb
mov
out
jecxz
lock
jae,pn
jl
jmp
outsl
and
or
popw
cmpsb
icebp
add
jae
adc
mov
loope
mov
jmp
add
test
sti
xor
jmp
cmp
or
jbe
and
lock
outsb
mov
lods
jbe
dec
push
mov
sbb
xchg
cmovge
and
mov
and
jne
jge
nop
pop
dec
cltd
cld
sbb
dec
aaa
sahf
lock
shr
sbb
popa
lods
and
scas
clc
xor
inc
cmp
jle
rcrl
pop
iret
rol
lret
jno
out
frstor
fldl
mov
gs
addl
enter
daa
cltd
negb
stc
cltd
push
sbb
and
outsl
pop
or
dec
pop
mulb
mov
sti
in
add
mov
sub
jl
shlw
ljmp
lea
fistps
xchg
gs
inc
les
out
mov
adc
fcomps
cmpsb
or
loop
cmp
pop
ss
movsb
gs
jns
pop
daa
sub
adc
jp
xchg
jge
fs
cmp
mov
aam
push
loope
test
les
jnp
out
es
jb
les
mov
mov
in
sbb
insb
cmc
je
push
sub
xchg
jnp
jno
rcrb
sub
in
sbb
adc
mov
dec
out
lods
or
jp
pop
shr
inc
add
out
push
loop
das
lret
clc
xchg
cmp
mov
cmp
xor
xchg
out
outsl
xchg
aaa
cli
mov
jno
cmp
xor
adc
xor
fstpt
out
mov
inc
and
sbb
in
pop
ds
dec
lahf
mov
mov
neg
jp
jne
xor
push
push
test
in
pop
inc
cmp
xor
mov
adc
inc
fcom
xchg
testb
or
xchg
subb
adc
fldenv
push
popa
mov
cli
jge
sub
loopne
lods
push
dec
clc
xor
leave
dec
jecxz
push
idiv
lret
aad
lock
mov
pop
cmp
jns
lcall
inc
addr16
jecxz
and
test
sbb
mov
sbb
pop
shlb
mov
aaa
xchg
int3
sahf
rorl
lahf
lret
into
inc
imul
ficoms
lahf
xchg
leave
sbb
pushf
repnz
cmc
inc
repnz
insl
cmp
mov
mov
loop
mov
leave
out
ret
ss
push
pop
fsts
pop
mov
add
leave
inc
imul
add
mov
inc
jp
aas
xchg
negb
adcb
pop
jmp
push
pushf
add
push
xor
xor
and
jmp
mov
in
xor
cltd
cmpsb
gs
imul
jns
push
popa
loopne
xchg
test
orl
xchg
fmull
aam
add
or
pop
jl
sub
ffree
arpl
scas
enter
out
inc
xchg
into
jo
mov
mov
lods
push
or
in
popl
fisttps
and
dec
push
inc
jle
pop
jp,pn
mov
daa
sbb
scas
push
dec
out
scas
out
jl
jo
jge
add
cmp
sbb
leave
xchg
mov
mov
mov
adc
mov
outsl
add
cwtl
aaa
popa
mov
mov
add
push
xchg
aad
cli
sbb
pop
sbb
dec
jns
test
lea
mov
cli
popf
ljmp
out
sbb
cli
sub
fldz
adc
outsb
pop
pop
test
sbbl
push
sahf
push
jae
lods
push
xorb
dec
stos
out
xor
jns
and
mov
mov
in
in
fwait
imul
leave
push
or
push
dec
lret
push
loop
pop
pusha
sbb
cmp
lahf
aad
or
sbb
mov
pop
movsl
ja
outsb
dec
push
push
imulb
sbb
mov
sahf
adc
jge
into
xor
imul
fistpl
imul
sub
and
inc
addr16
sti
lods
nop
rcll
add
lds
inc
sub
repnz
cmp
dec
xor
int
xor
ss
data16
arpl
out
jnp
call
rcrl
ja
lahf
xlat
lea
inc
mov
test
fdivl
subb
lret
data16
xchg
ds
cmp
bound
ret
rorb
lods
hlt
xor
insb
in
shr
xchg
xor
inc
pop
push
lcall
fistpl
lods
es
jo
xor
test
pushl
stc
pop
in
mov
push
push
movsb
dec
adc
pop
push
xchg
mov
lret
mov
mov
out
sarb
inc
cwtl
sahf
sub
dec
push
popf
cmp
cld
push
jecxz
es
ret
add
jns
movsb
cmp
mov
pop
xchg
sub
insb
push
rclb
mov
inc
cmp
push
ja
xchg
rorl
push
inc
add
addr16
xor
cli
mov
out
ret
stos
int
adc
mov
xchg
dec
dec
mov
cmpb
mov
aaa
addb
into
push
test
sbb
jecxz
dec
push
cmp
inc
lcall
dec
sbbb
scas
jecxz
fsubp
jo
mov
pop
push
es
loop
loope
sarl
rol
out
xchg
adc
pop
jae
frstor
fwait
mov
dec
jne
or
dec
xor
fisttpl
test
cmpsl
mov
sbb
cwtl
xlat
mov
inc
inc
jns
xchg
add
push
sub
testl
ds
push
adc
pop
cmc
jbe
mov
cld
xor
pop
adc
imul
movsl
cmc
dec
movl
outsb
cmp
subl
lahf
cli
cwtl
divb
in
xchg
daa
lods
shlb
xchg
sub
jl
xchg
sbb
lahf
cld
mov
sbb
inc
pop
imul
test
dec
add
xchg
mov
mov
mov
popa
sbb
nop
sbb
in
into
es
sar
mov
ds
xchg
lock
mov
xchg
mov
das
lahf
pop
push
fcompl
test
mov
dec
push
jb
and
fstpt
nop
popa
push
shl
je
ss
out
es
std
add
arpl
pop
movsl
data16
aaa
mov
sub
cmp
out
shrl
je
xlat
dec
mov
xor
add
fwait
push
fstps
out
or
sbb
cwtl
jb
movsl
test
bound
mov
rolb
aad
sub
xchg
pop
jno
pop
and
add
out
subl
dec
inc
xchg
sub
xchg
stc
and
ror
mov
stos
adc
jb
inc
cmpsl
lcall
mov
push
jo
mov
orl
imul
daa
in
fmuls
pop
paddusb
fists
insb
cmpsb
add
lahf
or
inc
addb
popf
in
js
mov
add
xchg
xor
std
call
mov
repz
push
pop
sub
jge
xchg
gs
xor
test
imul
jmp
push
or
pop
dec
pop
int3
mov
pop
pop
or
push
aad
lret
cs
pop
pop
fwait
outsl
test
aas
and
aam
sub
add
cmp
sbbl
cmp
dec
lock
cmpl
push
xchg
in
add
hlt
xchg
popf
mov
xchg
adc
sub
movsl
mov
std
arpl
inc
test
and
or
inc
pop
adc
fidivrl
jno
mov
mov
sub
inc
mov
clc
mov
in
push
insb
outsl
in
jne
xchg
mov
sub
insl
stc
push
repnz
je
out
shll
cmp
loop
pop
lcall
xor
testb
imull
arpl
push
and
ja
or
loopne
inc
imul
cltd
sub
mov
repz
xor
dec
inc
push
and
dec
dec
mov
xchg
or
sahf
loope
push
daa
push
andb
jo
pop
pop
dec
or
pusha
lds
or
cs
jl
lods
test
rcrl
inc
pop
ljmp
cmp
sub
jbe
mov
cmpsb
sub
cmp
push
cmpl
hlt
inc
jne
sub
mov
int
lea
mov
xor
jg
std
jle
mov
loop
mov
jno
jbe
das
insb
inc
lock
das
adc
jo
cltd
and
leave
insb
push
jns
push
fnsave
out
add
icebp
or
shr
pop
xchg
push
imul
fildl
sbb
ficoml
dec
and
mov
push
adc
push
popf
mov
add
fistps
outsb
cwtl
jg,pn
or
pop
stos
in
mov
sbbl
aas
push
sub
pop
loope
and
dec
nop
jecxz
jmp
call
repz
sbb
jl
jmp
or
pop
shrb
xchg
sbb
xchg
mov
cmp
fmuls
cmp
mov
mov
dec
iret
enter
mov
and
bnd
sbb
mov
pop
xor
popa
inc
jns
sub
mov
ljmp
scas
or
xor
jbe
add
rcrb
leave
or
daa
pop
and
rcl
adc
lret
cltd
mov
out
pushf
add
pop
push
xchg
xlat
push
aas
pushl
cmpsb
xchg
repz
cs
stos
in
mov
lret
loop
mov
lea
inc
or
mov
testb
call
in
sub
sub
pop
or
int
dec
lcall
dec
popa
add
test
dec
jns
stos
popf
mov
push
movsl
popf
test
and
sbb
xor
adc
push
pushw
sub
sbb
xor
mov
pop
add
adc
mov
jne
pop
jns
imul
les
push
inc
push
adc
sbb
add
imull
cld
or
mov
sbb
cmp
mov
add
inc
jb
jmp
clc
lret
push
sarl
dec
hlt
outsb
pop
mov
pop
adc
sarl
jg
push
jae
fs
mov
push
push
xchg
dec
pop
ja
outsl
gs
clc
clc
cld
aas
mov
stos
insl
imul
out
or
in
popa
scas
sub
bswap
pop
cmp
sbb
das
inc
sbb
adc
out
pushf
dec
fsubl
lret
notb
mov
mov
and
shlb
pop
shll
jecxz
nop
xchg
push
mov
and
mov
sub
and
mov
jb
jecxz
xor
lock
adcl
lock
adc
fwait
xor
lahf
insb
pop
pop
xlat
out
ss
jg
mov
std
int3
or
ljmp
cmc
sti
pop
rcrl
or
add
xlat
addr16
cli
mov
fcmovnb
mov
in
xchg
mov
addl
enter
jne
xchg
mov
mov
leave
popf
mov
cltd
xchg
add
mov
xor
push
pop
add
pop
sub
sbb
and
mov
lret
sbb
lods
jns
les
lods
test
mov
jbe
dec
xor
xchg
in
adc
mov
jmp
loop
jns
dec
fstl
inc
mov
call
test
xchg
jnp
daa
mov
mov
xor
cli
pop
add
fimuls
fldl
scas
cld
push
in
jp
mov
xor
fldl
sub
js
ror
mov
adc
lcall
adc
jl
sbb
jge
pop
iret
push
fiadds
push
and
sbb
pop
je
inc
xor
scas
inc
add
pop
int3
and
add
mov
sub
and
add
inc
vprotd
adc
mov
cmpb
dec
enter
jns
inc
jmp
adc
out
pop
into
mov
cwtl
addr16
lods
stos
mov
xor
mov
pop
and
fisubs
outsb
jge
and
adc
jmp
outsl
adc
xlat
into
inc
cwtl
jmp
sbb
outsl
sub
adc
fists
js
test
pop
lcall
es
test
ror
push
shrl
popa
js
in
add
outsb
popa
pushf
rolb
cld
repz
hlt
mov
incb
inc
mov
sbb
inc
dec
adcb
imul
inc
dec
ror
push
or
scas
insl
mov
cmp
mov
aas
imul
es
ret
or
mov
aad
dec
lcall
mov
lods
push
pushf
scas
dec
imul
inc
inc
cmpsl
pusha
inc
stc
fs
adc
and
stos
push
jl
fdivs
test
push
cmp
les
es
out
or
ret
mov
sub
mov
pop
dec
and
inc
xchg
jo
int
movsb
loope,pt
and
stc
jmp
mov
loopne
mov
mov
pop
inc
pushfw
cs
fbld
enter
mov
push
xor
int3
mov
pushl
aaa
fs
pop
les
je
leave
loope
mov
subb
repnz
stc
xchg
add
sub
lods
mov
push
add
jo
cmp
sahf
push
outsb
add
ficoml
mov
mov
push
test
in
mov
push
test
fwait
xchg
cmp
and
jb
lods
fisubrl
inc
outsb
jae
loope
adc
popf
jne
xchg
pushf
mov
mov
xchg
fcomp
or
mov
dec
xchg
andl
mov
clc
add
inc
push
dec
lret
add
out
push
gs
rcll
fnsave
orl
dec
mov
ret
daa
xchg
mov
hlt
mov
xchg
movsl
and
jns
pushl
lods
icebp
mov
xor
imulb
clc
cmpsb
popa
cli
mov
inc
imull
test
sbb
adc
stc
push
jo
sbb
adc
lods
jg
push
sub
aam
sbb
mov
xor
test
int3
add
and
sahf
lods
and
lahf
insl
pusha
fdivrl
push
aaa
and
jmp
sbb
out
aas
xchg
into
es
daa
adc
sub
sbb
xchg
cmp
and
sub
sbb
inc
and
and
add
sub
inc
xor
adc
test
mov
stos
jp
push
xchg
lds
lods
mov
rorl
xchg
enter
cld
jno
rorl
data16
arpl
int3
push
dec
mov
sarb
cli
aad
sti
pop
sbb
xor
or
ror
lcall
xor
xorl
sbb
mov
push
in
mov
stos
sbb
and
ds
mov
hlt
test
lret
lods
std
sub
fisttps
dec
shll
sbb
xchg
fstpl
cmpl
imul
stos
add
pop
jbe
xor
mov
je
xchg
or
sub
nopl
jae
xchg
subl
and
shrb
or
femms
popa
data16
aam
jae
push
inc
push
ljmp
int
data16
stos
es
or
imul
mov
scas
fadds
pop
loop
jbe
out
mov
mov
not
adc
mov
hlt
or
lcall
mov
nop
xor
push
cmpsb
xchg
lret
fst
xchg
or
loopne
push
popa
out
or
aaa
xchg
aam
dec
aas
scas
fmulp
scas
lret
pushf
das
xchg
imul
xor
xor
loop
cld
add
fidivrs
cli
loopne
int3
aaa
mov
aaa
aas
jae
sbb
ja
lods
and
sbb
mov
xchg
rcrb
aas
sub
inc
xchg
cmc
push
inc
ficompl
mov
in
fwait
jns
jo
xchg
mulb
sub
loopne
adc
addr16
enter
ret
outsb
popf
inc
dec
scas
dec
pop
pop
or
lods
xchg
adc
jno
push
pop
rcll
imul
loopne
and
mov
mov
mov
push
xchg
icebp
add
popa
add
jbe
sbb
dec
jno
xor
leave
mov
mov
scas
add
cwtl
mov
sub
add
psrlw
mov
or
pop
mov
dec
pop
icebp
mov
mov
mov
lret
out
xchg
mov
lock
dec
mov
sub
outsb
orb
or
xchg
xor
in
sub
pop
nop
pop
mov
insb
mov
cmpsb
test
aam
sub
hlt
mov
dec
push
pop
jo
mov
and
mov
notb
in
jne
mov
outsl
iret
inc
std
push
add
js
push
jno
jge
movsb
add
decl
mov
jp
inc
call
inc
and
inc
pusha
out
shrb
movsb
inc
jge
idivb
ja
adc
or
xchg
dec
loope
test
leave
fninit
call
test
loope
xchg
or
dec
inc
scas
sub
cmp
cmpsl
dec
add
add
insl
mov
decl
push
add
cmc
aam
repz
dec
popa
mov
inc
push
je
push
or
or
rorl
stc
stos
aaa
lret
bound
adc
js
sub
xchg
pop
push
test
add
addb
test
dec
add
inc
adc
hlt
icebp
xor
mov
cltd
mov
ja
into
jge
notb
dec
xchg
or
lods
push
aas
dec
sbb
cmp
xlat
push
movsb
lea
cld
in
xchg
mov
adc
push
test
push
lcall
and
out
fdivp
stos
and
push
outsw
std
pushf
jno
ret
shlb
jo
jo
sub
mov
repnz
pushl
jbe
int
loope
rcr
xor
nop
cmp
fadds
sbb
das
adc
popf
int3
cmc
pushf
xor
rcl
xchg
dec
mov
inc
stc
cmp
in
ljmp
inc
fnstcw
loopne
push
into
push
loop
pop
call
out
adc
ljmp
sahf
sbb
mov
movsb
jmp
mov
imul
sub
ds
add
ret
mov
jl
pop
xor
jl
sub
enter
sbb
sbb
fimuls
test
cmc
lret
fs
imul
and
mov
mov
push
push
dec
cmp
jne
arpl
jecxz
pop
inc
sub
ss
mov
imull
push
cmp
cmp
jmp
movsl
dec
adc
xor
lret
jbe
loope
gs
cs
and
cmpsl
xor
add
pop
ja
ret
enter
mov
jae
inc
cmp
pop
cld
push
and
sub
push
rolb
out
pop
fcmovu
and
fmuls
jo
mov
out
mov
xchg
arpl
fdivs
nop
and
cmp
or
adc
xchg
jno
mov
dec
stos
mov
pop
lcall
test
psrlq
cmpsb
cltd
inc
loope
ss
fcom
lcall
test
bound
dec
inc
repnz
call
repz
pushf
fisttps
mov
pop
ret
repz
leave
jb
shrb
mov
jo
adc
xchg
push
pop
pop
fisttpl
dec
or
adc
call
aam
ja
mov
arpl
jae
hlt
shrb
in
insb
xchg
xlat
push
jae
sbb
int
ljmp
ret
addr16
xchg
cli
loop
inc
mov
aam
fs
into
mov
lock
xor
rolb
sub
adc
dec
iret
adcb
test
jmp
or
adc
xchg
cld
adc
push
cmp
cltd
mov
adc
sti
mov
loopne
and
fcomi
sbb
add
jg
mov
orb
mov
xchg
push
mov
loope
leave
test
cmpsl
mov
psrlw
popa
dec
mov
mov
xchg
cmc
sub
mov
jge
xor
push
pop
outsl
lcall
dec
jnp
or
test
and
fwait
jns
js
in
sub
fistpll
cmpsl
push
inc
add
jp
jo
loope
cld
je
cmp
mov
andl
sub
lret
loopne
sbb
dec
int
jnp
in
adc
cwtl
in
xor
insl
loop
dec
jne
pop
cmp
push
adc
cmpsb
cmpsb
aam
xor
fistpl
ss
sub
dec
test
mov
adc
insl
ret
aad
push
adc
or
stc
ret
add
mov
xor
rclb
jo
push
out
mov
xor
push
dec
adc
movsl
arpl
mov
movsl
mov
lea
push
fistl
in
adc
out
call
imul
push
xchg
in
mov
rolb
mov
inc
push
insb
jmp
push
push
nop
mov
jg
fwait
cmp
stos
mov
sbb
sahf
cmp
jle
loope
lret
lods
or
xchg
adc
jo
push
aas
int3
movsl
cltd
cld
cld
add
mov
push
xchg
xchg
int
in
cmp
xchg
dec
dec
lds
enter
jmp
bound
jmp
adc
aas
addr16
das
cmp
adc
fcmovnb
cmp
pop
push
push
mov
add
ljmp
jmp
iret
push
imul
push
push
loope
xor
xchg
add
pop
pop
fistl
inc
cld
push
mov
push
push
outsl
jb
mov
das
insl
lods
xor
test
sbb
inc
pop
lret
ja
jg
sub
push
es
and
inc
jne
mov
or
inc
push
mov
mov
fistpll
scas
orl
or
push
dec
fst
push
out
pop
insl
lcall
stos
or
and
add
insl
dec
lret
cwtl
cmp
xchg
and
mov
shlb
stos
or
pop
and
pop
fcmovu
sbb
push
jne
pop
jb
sbb
adc
xor
test
es
lret
cwtl
shll
sub
ss
in
xchg
mov
aam
daa
xorb
mov
sarb
adc
xchg
pop
sub
add
sahf
add
lods
xor
sub
xor
pop
outsb
or
cld
jno
iret
js
insb
arpl
sbb
std
jae
hlt
mov
sahf
fmuls
mull
test
int
adc
lock
aaa
sbb
std
adcl
loopne
fbld
xchg
push
outsl
sahf
and
test
push
insb
push
mov
xor
add
or
nop
daa
pop
cmp
xchg
ss
jbe,pt
mov
gs
cmp
int
or
stos
pop
shl
dec
out
std
enter
dec
pusha
pop
cli
or
pop
xor
subb
lods
sbb
dec
sub
les
mov
sub
cmp
mov
push
adcl
popf
into
mov
sbb
loop
xchg
inc
sub
adc
sub
pop
cmp
mov
add
mov
test
adc
jmp
push
and
sbb
pop
mov
jbe
and
mov
and
cli
xor
leave
mov
les
ds
sbb
xchg
sti
outsb
mov
sahf
gs
xchg
sar
sbb
aam
fnstsw
or
sbbb
ja
sbb
mov
dec
pop
faddl
sub
jns
sahf
lahf
and
jb
add
mov
dec
push
sbb
mov
in
pop
push
pop
dec
hlt
fwait
outsb
insb
fimull
jne
and
jae
cs
mov
negl
loopne
mov
fnsave
lods
fdivrp
pop
rorb
fbld
popf
mov
popa
jge
pop
jmp
add
das
lret
xor
daa
test
mov
sarl
pusha
cmp
mov
popa
mov
mov
es
repnz
pop
fildl
dec
out
cmp
or
add
pop
pushf
cltd
mov
int3
sub
cmp
test
dec
and
adc
jo
aas
push
adc
div
push
sbb
mov
mov
or
into
stc
test
pop
jnp
cmc
stos
push
mov
mov
movsl
mov
jno
fsubp
xchg
push
sbb
sub
fidivrs
fistl
add
push
xor
pop
mov
stos
pop
idivb
popl
stc
pushf
xor
bnd
shlb
icebp
test
jo
test
jae
xchg
mov
xchg
mov
cmp
test
rolb
inc
add
addl
repnz
adc
push
pusha
dec
movsl
pop
xchg
in
xchg
mov
jl
mov
dec
out
push
jo
xor
stos
add
and
mov
or
aad
push
or
adc
pop
movsl
inc
iret
xorb
dec
jnp
push
outsb
in
shll
insl
fs
icebp
mov
int3
fsts
iret
data16
inc
bound
mov
push
mov
push
leave
stc
ret
or
popa
test
add
incl
loop
pop
xor
mov
arpl
fwait
xor
pop
mov
xor
gs
cs
xchg
lds
mov
xor
pop
push
shl
pushf
daa
shrb
mov
push
mov
mov
je
fstl
cs
jge
lock
imul
addr16
imul
pop
sub
jmp
jecxz
mov
shl
out
jno
xor
and
sbb
int
adc
mov
dec
mov
stos
imul
mov
push
jle,pt
lahf
rolb
pusha
dec
mov
rorb
iret
sub
pop
out
xor
enter
aaa
in
xor
cwtl
add
xor
pop
add
inc
imul
shlb
cmp
or
xor
daa
es
int
xchg
adc
fnsave
mov
negb
push
lret
loop
out
mov
dec
clc
bound
or
fildll
pusha
fildl
jl
cld
pop
pop
orb
jbe
in
mov
cmp
xor
dec
mov
pop
inc
cmp
mov
inc
popa
xchg
or
in
inc
sub
mov
jnp
clc
mov
popa
pop
ficompl
movsb
ficoms
insb
inc
dec
call
lcall
push
fcomps
movsl
sbb
push
stc
repnz
into
ret
cltd
or
movsl
xchg
imul
fsubl
sub
in
sbb
cmp
out
dec
mov
fdivp
and
jp
sub
sbb
in
pop
xlat
jnp
mov
mov
mov
push
or
test
roll
mov
sub
pop
or
or
fildl
mov
adc
cli
mov
loopne
test
push
push
push
mov
movsl
add
jmp
xor
mov
cmp
hlt
das
push
nop
and
mov
data16
lret
dec
push
loop
repz
xor
ja
js
mov
cmp
mov
jmp
test
xchg
aas
dec
pop
mul
push
pop
je
push
addl
lret
push
in
pop
pushf
sub
or
inc
cli
xchg
add
mov
add
mov
aam
push
in
dec
xchg
push
dec
cld
mov
jne
addr16
or
lds
sub
jnp
fsts
js
mov
mov
sub
mov
fldenv
imul
test
out
scas
inc
ret
test
lret
jbe
out
mov
lods
subl
fbstp
cmpsl
adc
inc
icebp
jp
rcrb
out
cmpsb
push
insb
in
sbb
cltd
and
inc
jecxz
jmp
adc
fcomps
testl
insb
jmp
mov
xchg
js
xor
cmpsb
in
jae
popf
cmc
add
in
push
lods
rorb
push
xor
in
add
addl
mov
mov
in
add
std
pop
adc
or
imul
lea
cmc
mov
cmc
jg
push
iret
dec
add
pushf
sbb
or
push
pop
push
aas
pop
ss
cmp
mov
pop
jae
mov
ficomps
nop
or
into
mov
inc
pop
push
xor
xchg
mov
rorl
stos
ja
jp
fucomip
cmc
and
and
ds
push
inc
inc
call
xor
sbb
sbb
or
ss
movsb
jg
xor
ret
out
fdivrs
pop
cwtl
mov
jecxz
xrelease
jb
adc
sahf
mov
sbb
repnz
pop
loopne
fisubs
sub
popf
lods
cmp
xchg
mov
stos
or
mov
jbe
outsb
imul
adc
orl
loopne
lcall
jl
test
imul
add
sbb
pop
outsl
scas
repz
cmp
cmp
jmp
xchg
test
jl
cmp
pop
xchg
cmp
roll
es
or
push
aad
insb
ret
jno
outsl
in
or
fs
jbe
dec
sti
stos
inc
mov
out
adc
jecxz
mov
stc
xor
mov
mov
pusha
std
pop
pop
repnz
cmp
lcall
inc
mov
push
dec
push
pushf
mov
pop
adc
dec
cmp
xchg
es
rcll
cld
mov
dec
enter
jb
gs
insb
fsubrs
and
test
adc
int
lcall
push
mov
paddb
dec
fsubrs
and
test
loope
push
fs
stc
dec
cmp
loopne
mul
adc
imul
and
test
push
jl
loop
or
mov
adc
nop
in
jg
orl
mov
fwait
mov
and
mov
mov
push
lock
xchg
inc
jne
addr16
and
test
dec
fsubs
sbb
dec
iret
adc
inc
out
xor
cmp
sbb
dec
lods
sub
mov
xor
popa
xchg
cli
pop
inc
test
dec
or
hlt
cld
in
pop
loope
add
loop
mov
arpl
movsb
lea
adc
nop
mov
iret
inc
out
fiaddl
repnz
rcrl
cs
mov
pop
sub
sub
pop
ret
or
dec
cmpsl
out
in
cwtl
sahf
pop
mov
call
fs
cmc
xchg
das
je
rorb
pushf
inc
inc
add
data16
sub
ja
adc
mov
mov
fidivrs
pop
and
vcvtpd2dqx
dec
test
fldcw
fbld
xchg
repnz
xchg
rcrl
stos
mov
xchg
dec
push
pop
dec
cltd
mov
stos
push
scas
adc
push
icebp
inc
es
testb
scas
imul
sub
dec
jnp
inc
frstor
gs
imul
mov
mov
les
inc
fistpl
in
aam
sahf
mov
cld
cli
cmp
pop
ds
int3
stos
mov
ret
je
pop
dec
testl
push
pop
cs
add
clc
pop
mov
arpl
push
aad
jg
or
rcrb
adc
cltd
das
xchg
test
nop
push
cmp
mov
out
lods
push
add
xchg
imul
in
lcall
jbe
std
out
dec
dec
in
push
movsb
loope
mov
and
xchg
add
int3
dec
shlb
lret
repz
mov
bound
sbb
push
int
aad
dec
sti
cltd
call
aas
push
ja
daa
pushf
fnsave
in
pop
popf
sbb
mov
jle
stc
inc
jbe
out
filds
xor
mov
push
push
out
cmpb
dec
or
xor
clc
sahf
and
mov
or
addr16
mov
sub
mov
ljmp
xorl
push
sub
cltd
cmp
sbb
adc
xchg
out
mov
outsb
lret
lahf
sahf
roll
inc
jns
and
mov
dec
adc
jmp
and
add
movsb
je
jne
sbb
icebp
adc
pop
idiv
cmpsb
push
mov
mov
mov
xorb
shll
mov
addb
aam
pop
inc
ds
arpl
xor
cmp
cmpl
ret
sahf
loope
mov
xchg
xor
sub
addl
lds
dec
mov
es
pop
sbb
lds
in
fmul
mov
add
jnp
xchg
mov
pop
pop
push
dec
add
add
adc
add
jmp
xchg
cmp
add
sub
jnp
bnd
jns
sub
xchg
daa
and
pop
sbb
iret
lret
pop
adc
adc
icebp
add
pop
mov
cltd
push
shrl
sahf
fistps
or
mov
inc
dec
das
loop
insl
lahf
dec
sub
mov
test
or
sbb
inc
sahf
aad
mov
mov
inc
and
dec
bound
call
das
sbb
mov
mov
out
outsb
fwait
adc
jns
push
adc
push
xor
pop
std
popf
jne
call
xchg
decl
and
daa
imul
mov
ret
lods
mov
or
mov
sbb
scas
jl
xor
test
add
flds
imul
xlat
outsb
aam
or
pop
pop
fistl
decl
xchg
rcll
cli
jnp
cmpsl
lcall
mov
jge
test
or
imul
subl
les
mov
xlat
out
lock
adc
dec
inc
add
lret
pop
mov
repz
imul
xor
add
roll
xor
xchg
mov
mov
cs
push
scas
xchg
loop
add
lods
sbb
pop
xchg
andb
mov
sub
das
popf
movl
add
fsubl
sub
pop
std
inc
sti
outsl
ljmp
out
add
std
cmp
xlat
imull
imul
pop
jge
movsb
test
mov
call
jmp
jne
add
lock
or
jecxz
push
aam
jp
sub
jbe
or
pop
popf
jbe
sbb
lock
into
pop
ffree
mov
pop
fcoms
xchg
ja
pop
lahf
add
add
pop
jl
ret
xchg
sbb
in
ja
and
push
stos
subb
mov
lret
jmp
jne
insb
inc
dec
mov
sub
ja
subl
add
sub
mov
shr
insl
int3
dec
adc
dec
test
std
ret
scas
or
mov
adc
out
leave
xor
pushf
push
add
iret
aad
sbb
xchg
pop
or
pop
mov
jp
fwait
cmpsl
or
int3
jg
mov
repz
sub
movsb
jecxz
in
pop
sub
insl
js
imul
loopne
jge
add
addr16
rcll
jno
add
mov
push
into
fsubs
loop
mov
xor
cmc
jg
rcrb
push
imul
jae
ret
jo
sub
xchg
shll
xchg
mov
aad
testb
lods
mov
call
int3
repz
mov
and
dec
jne
mov
sub
dec
xchg
sub
pop
sti
scas
mov
mov
mov
cs
mov
faddl
fisubs
dec
mov
jns
push
mov
insl
insl
lcall
sbb
xor
lock
pop
je
adc
mov
sbb
jnp
add
pop
pop
mov
cmp
popf
jecxz
sub
into
ja
jno
cli
ss
xchg
or
testl
xor
xchg
add
mov
add
icebp
xchg
cwtl
aaa
push
cmpsl
stc
jle
inc
pop
lods
push
or
adc
es
out
mov
mov
mov
stc
mov
es
inc
sar
lea
or
cld
and
mov
loopne
ret
adc
adc
xor
xor
repz
fldt
stos
xor
out
sbb
mov
hlt
adc
jae
std
xchg
scas
testl
dec
loope
inc
push
imull
iret
int
dec
add
data16
xchg
jmp
cli
popf
call
les
insb
nop
in
and
imul
cmp
in
fisubl
adc
cmpb
dec
addr16
or
or
mov
cmpb
enter
mov
dec
stos
sub
pushf
cmp
jmp
in
lcall
test
sub
arpl
gs
jmp
in
int
cmp
sub
lds
dec
outsl
or
cmp
mov
inc
inc
cmp
sub
ds
inc
rol
andl
adc
repnz
addr16
cmp
jmp
cmp
or
jae
insl
outsl
repnz
lods
inc
ljmp
push
mov
scas
or
enter
xchg
jp
ds
jp
xor
mov
push
mov
inc
repz
gs
in
sti
jp
mov
adc
and
push
or
aad
inc
jecxz
inc
adc
xchg
pop
fisubl
jg
fbstp
inc
sbb
mov
mov
cwtl
jns
jb
je
popf
popf
adc
or
call
ds
and
lret
xchg
sbbl
add
mov
mov
stos
sarb
sub
sub
andb
popa
cltd
add
hlt
insl
push
xor
push
jecxz
aas
push
negl
push
iret
jb
adc
jle
mov
push
xchg
int3
in
ss
insb
add
cmp
jae
test
mov
sub
jmp
fdiv
dec
les
pop
fildll
jb
out
subl
ljmp
jge
jo
cltd
xchg
mov
sbb
mov
add
mov
dec
cmp
push
lds
mov
int3
push
nop
addr16
cli
mov
es
jns
notl
inc
push
or
iret
and
cmpsb
in
insb
hlt
mov
pop
outsb
push
int
mov
repz
jns
rorl
and
jg
xor
and
jecxz
inc
adc
dec
test
aam
dec
stos
xor
mov
test
push
idivb
inc
adc
cli
cli
cmp
andl
lret
inc
jg
sbb
lea
pusha
mov
inc
dec
xchg
mov
out
lds
and
lcall
aas
dec
push
ds
xlat
repz
jnp
pop
xchg
push
sarb
out
pop
gs
enter
std
and
das
pop
repnz
arpl
stc
cltd
rolb
or
inc
xchg
or
pop
pop
sbb
loope
imul
ljmp
jp
xor
test
sbb
ss
icebp
mov
jo
mov
stos
pop
xor
js
inc
jbe
clc
lods
fcomps
call
pop
lods
push
inc
js
movsb
mov
insl
push
cs
pop
jl
aas
push
inc
and
clc
inc
adc
or
sbb
fisubl
jno
fsubl
inc
ljmp
ret
rcll
xchg
jmp
cmovg
push
test
xchg
cmpsb
lcall
mov
and
cmc
data16
push
insb
loop
mov
out
and
scas
mov
clc
mov
jns
xor
mov
clc
fdivrs
loope
nop
lods
js
rol
push
dec
and
inc
test
adc
lcall
test
jns
mov
and
xor
js
call
pop
outsb
fistl
out
out
and
xchg
scas
adc
and
lds
jb
sub
add
popf
pop
in
or
cmpsl
fwait
lods
xchg
shrb
movl
stos
xor
pop
sub
call
mov
int3
clc
ds
cld
icebp
mov
movsl
lcall
lea
shll
sbb
daa
and
sub
repnz
push
xchg
ret
mov
sub
loop
and
lret
ss
mov
jnp
mov
xchg
push
scas
ficoml
jecxz
sub
jo
sub
sbb
fnstsw
call
jg
jl
testb
into
jnp
repz
pop
loop
fdivrl
inc
mov
std
xor
cmpl
movsb
xchg
cltd
xchg
cmp
dec
and
popa
cmp
outsl
pop
xor
out
mov
mov
repz
mov
aaa
mov
aad
andl
cmpsl
cmp
xchg
mov
mov
xchg
xchg
jb
rorb
mov
scas
movsl
cmp
xchg
cmp
sarb
sub
cmp
sub
mov
cld
xchg
call
push
pop
adc
stos
push
and
and
call
stc
stos
mov
jmp
sbb
pop
jecxz
xchg
push
sub
adc
fcomps
jo
push
mov
sub
inc
adc
js
cmp
addr16
mov
cmp
enter
aam
pop
lods
jecxz
dec
mov
push
and
push
data16
imul
cltd
clc
repnz
push
fsubl
arpl
sarb
scas
lds
sbb
aad
add
add
xchg
mov
imul
pop
cmc
mov
pushf
sbb
rcl
mov
insb
adc
movsl
lock
jecxz
sbb
adc
or
and
push
fdivl
std
jmp
jo
xor
mov
mov
cmp
cld
ljmp
push
sbb
lds
adc
jae
cmp
das
push
cmp
adc
push
sbb
mov
add
cmp
frstor
sti
daa
fst
fs
xor
hlt
and
sub
rcrl
adc
hlt
dec
cmp
in
xor
insl
fdivs
cmp
pop
fs
pop
mull
imul
and
out
fldt
mov
mov
add
ret
xchg
mov
inc
es
in
inc
sbb
loope
and
push
sbb
addl
push
adc
mov
mov
sbb
loop
cmp
mov
pushf
test
test
jnp
scas
xchg
xchg
add
gs
jne
loopne
loope
jle
imul
pop
adc
pop
testb
dec
mov
and
jb
sbb
dec
mov
inc
pop
mov
jp
in
push
xchg
stos
mov
mov
mov
mov
aaa
sbb
sbb
int3
clc
mov
mov
iret
jge
popf
mov
push
fimuls
js
add
mov
or
fmulp
cmp
pusha
add
cwtl
addl
pop
pop
or
sbb
testl
jp
fimull
insl
aaa
sbbl
pop
ss
cmp
in
or
outsb
outsb
data16
push
in
aad
push
jg
push
jecxz
mov
aaa
out
cmp
pop
cmp
fcmovbe
inc
cld
push
and
xchg
xchg
lds
jp
xor
loop
dec
jbe
adc
nop
das
pushf
xchg
mov
sub
in
adc
push
insb
mov
dec
aas
jl
or
push
bound
aas
test
push
mov
xor
outsb
xchg
popf
sbb
out
push
repnz
ss
inc
cmc
sub
fs
loop
sti
xor
rorb
add
lcall
cwtl
popf
test
andb
inc
sahf
imul
mov
out
movsb
test
faddp
das
sub
test
lahf
cmp
insb
call
aad
and
adc
cmp
mov
ret
adc
je
pop
push
inc
inc
xor
inc
int
mov
xorl
inc
jnp
or
sbb
roll
pusha
negb
push
jne
dec
ret
inc
dec
andb
mov
leave
xor
iret
aaa
xchg
fcompp
mov
imul
filds
je
jp
shrb
cmpsb
xor
fldl
rcll
pop
pop
jmp
std
xlat
loopne
mov
pop
pop
or
je
add
jo
rcr
or
or
inc
leave
mov
pop
adc
adc
cmpsb
out
fstpl
clc
push
dec
fdivrp
xchg
mov
imul
or
dec
je
mov
inc
bound
jmp
std
push
mov
out
sahf
ljmp
insl
decl
fnsave
repz
test
push
test
fldenv
jnp
add
loop
mov
and
mov
js
lods
adc
sbb
cmpsb
pop
out
insb
dec
dec
test
cs
push
cltd
jge
xchg
xchg
fucom
cmp
imul
adc
stc
cmp
push
test
pusha
mov
jno,pn
pop
add
pop
sbb
shl
mov
xlat
repz
mov
inc
ret
ss
cmc
cmp
js
push
mov
jmp
movsl
xchg
xor
mov
cli
mov
pop
mov
loopne
insb
fwait
cli
mov
mov
mov
loope
repz
loope
in
and
inc
mov
daa
out
dec
push
push
adc
sub
and
je
js
inc
push
enter
and
sub
mov
cmp
and
inc
xchg
push
out
jb
out
das
pop
cmp
insb
in
add
jno
lahf
mov
push
frstor
stc
push
adc
stos
pop
sbb
pop
mov
mov
pop
notb
jle
cs
insb
aam
xchg
xor
inc
xor
pop
bound
aas
sbb
stc
mov
xchg
add
ds
lahf
jns
pusha
shrl
pop
dec
adc
or
xor
mov
xor
mov
lods
es
mov
jno
adc
and
outsb
mov
ds
loope
jle
pop
test
inc
dec
inc
pop
push
push
cld
xor
ja
inc
add
test
icebp
and
mov
rorl
pop
dec
push
mov
clc
enter
mov
test
add
in
jecxz
or
push
xor
sub
filds
sbb
add
sbb
inc
push
lods
sbb
xchg
xchg
and
sub
mov
jp
add
out
in
pop
shl
sbb
push
push
fcomps
dec
fsts
xchg
cmp
adc
cmp
mov
and
rolb
add
pop
add
add
insl
out
add
ja
andl
sub
loop
or
dec
mov
jne
bound
push
push
fs
adc
je
dec
movsl
sbb
sbb
outsb
mov
xorb
aaa
sbb
and
xchg
push
hlt
mov
or
inc
das
xchg
xor
std
cmp
cmp
mov
lods
sub
jno
and
adc
pop
out
out
clc
pop
jge
gs
jle
in
sub
xchg
jp
push
jo
adc
into
lock
sbb
scas
dec
sbb
cmp
pop
push
and
mov
add
cmpsl
das
push
daa
stc
xor
ja
daa
ja
loopne
repz
scas
fs
lock
and
test
push
arpl
sub
or
lds
mov
mov
pop
fsubs
or
xchg
shll
decl
dec
outsb
lret
repz
ret
aaa
pop
inc
addr16
sub
out
mov
test
pop
add
add
les
dec
xchg
icebp
stc
add
adc
insl
pop
jp
sti
call
leave
test
push
cmp
jl
js
out
mov
data16
pop
subl
add
adc
mov
data16
fstps
cmpsl
or
push
or
pop
xlat
stc
enter
fldcw
sbb
push
outsb
adc
mov
fisttpl
ds
in
incl
test
adcb
and
jg
jge
add
lods
or
bound
or
mov
fimuls
stos
xor
sub
ja
cmp
push
mov
add
dec
movsb
scas
mov
xchg
adc
iret
fidivl
and
push
jne
jg
pop
adc
sti
mov
into
aas
add
mov
lods
pop
je
pop
xor
fbstp
ror
sub
mov
test
insl
mov
jmp
add
pop
xor
outsl
hlt
je
mov
stc
dec
ret
dec
stos
push
push
push
inc
mov
mov
sbb
aas
jb
cld
popf
repnz
mov
in
dec
in
sti
xchg
lock
jae
sub
fadds
cmp
mov
jmp
xor
stos
insb
push
mov
add
and
dec
test
inc
mov
inc
out
cmp
je
xor
push
jnp
xlat
popa
sbb
les
fucompp
mov
xchg
jbe
and
or
xchg
lds
js
cmp
enter
jle
sbb
divl
je
xchg
dec
scas
cmpb
or
and
push
adc
jbe
jmp
fildl
sbb
outsb
gs
stc
gs
dec
stc
sub
inc
jns
and
sbbl
outsl
cmpsl
lea
or
imul
add
cmp
int
mov
sbb
scas
xor
jns
fmul
adcl
sub
dec
jbe
out
and
insl
add
rcr
and
push
dec
ljmp
pop
bound
or
shrl
lods
ficoms
insl
cmpsb
hlt
dec
mov
jecxz
and
int3
mov
loopne
push
aaa
xchg
cmpb
and
mov
push
mov
loope
mov
daa
test
pop
repnz
jae
ss
or
or
sbb
jns
push
fdivl
ret
mov
push
mov
mov
cltd
arpl
btr
mov
inc
jo
addb
and
and
out
mov
mov
hlt
ljmp
das
ljmp
inc
inc
outsl
js
ret
push
xor
and
mov
cmpsb
or
cmp
or
cli
xor
push
mov
lea
mov
fs
pop
sub
xchg
pop
ljmp
xchg
add
das
sub
and
inc
xchg
sub
and
inc
cmp
stos
lcall
mov
push
cmp
xor
pop
loop
iret
fisubl
jp
mov
push
sbb
cmp
inc
or
out
inc
clc
stc
add
mov
xor
xchg
cmpsl
xchg
mov
loopne
xchg
enter
push
pop
clc
mov
mov
cmp
mov
jae
or
mov
xor
mov
cmp
pop
push
sarl
aad
push
leave
sbb
cmpl
and
mov
push
loopne
aaa
lahf
inc
push
into
aaa
cmp
and
insl
subl
and
add
push
xchg
mov
in
loope
movsb
stos
mov
and
cmc
loop
xchg
cmp
adc
int3
mov
popf
fldcw
loopne
insb
push
divl
inc
cltd
and
sarb
adc
cmpsl
and
loope
jne
push
cmp
xchg
push
mov
xchg
je
fwait
add
pop
scas
test
or
pop
pop
cltd
lret
inc
out
mov
repz
aas
lret
cwtl
mov
in
sub
cltd
das
lock
lods
cmp
xor
loop
sbb
int3
popa
imulb
pop
mov
jmp
push
push
pushf
or
enter
cld
scas
das
mov
mov
icebp
mov
xchg
push
jg
pop
dec
je
arpl
and
inc
mov
sub
pop
xor
sub
dec
xlat
push
cmc
mov
xchg
fsubr
jb
add
sti
push
xor
clc
or
mov
int3
add
out
into
mov
cmp
out
xchg
insb
shlb
and
inc
mov
sbb
add
adc
mov
mov
jge
fs
negl
pop
add
push
ds
jo
lods
xchg
scas
in
icebp
mov
cmpsl
push
dec
pop
mov
pop
jo
sbb
sbb
ja
jb
in
into
cmp
mov
adc
jg
or
dec
cmp
ret
outsl
jp
sbb
jbe
push
inc
mov
lret
mov
dec
lahf
dec
mov
dec
xor
inc
inc
lcall
popa
push
xor
push
sub
sbb
fwait
or
sub
in
cmp
movsb
mov
sub
loop
pop
test
cmovg
pop
or
push
mov
cwtl
xchg
iret
or
dec
push
push
xor
jecxz
adc
add
test
xlat
arpl
jp
pushf
lea
enter
or
sbb
sbb
add
scas
push
adc
addr16
aad
movsb
loop
in
ficomps
aaa
test
push
cmp
shl
mov
shll
stos
cmp
pop
xchg
inc
pushf
mov
int
and
pop
sbb
mov
sub
mov
decb
mov
sbb
lcallw
push
push
in
dec
or
inc
btr
inc
sub
movsl
add
fs
sbb
in
ret
mov
sub
jnp
mov
clc
dec
cmp
mov
jp
xchg
mov
popf
push
adc
rcrl
rol
cltd
or
insb
push
sbb
movsl
fcmovb
xchg
pop
fiaddl
pusha
pop
hlt
add
punpcklbw
movsb
jmp
pusha
adc
sbbb
nop
jl
scas
pop
sbb
fdiv
jo
dec
xor
sub
adc
cmpl
push
jnp
mov
jbe
cmp
jb
out
mov
enterw
xor
jbe
xchg
xor
rorb
or
or
inc
add
test
sub
mov
add
mov
push
sahf
adc
ds
push
pushf
insl
xchg
xor
or
mov
mul
enter
arpl
jg
jp
push
arpl
or
aaa
addr16
mov
adcl
push
sub
and
lcall
pop
mov
popa
sbb
cmp
pop
ret
and
mov
out
push
sub
or
mov
inc
leave
mov
pop
push
ja
insl
mov
cld
xchg
xchg
mov
insl
push
or
xor
in
fdivs
push
dec
inc
imul
push
mov
xor
repnz
jbe
std
push
add
mov
sbbb
bound
clc
xchg
pxor
andl
mov
sub
add
fcoml
lret
in
leave
jecxz
add
lds
dec
inc
insl
fisubrs
out
cmp
push
sbb
andl
lahf
and
mov
pop
into
jae
and
nop
mov
xbegin
jge
in
stc
loope
lods
into
pop
lret
or
push
in
in
and
aaa
pop
fucom
mov
addb
test
xchg
sub
xchg
aaa
pop
into
das
and
cmp
push
loope
negl
mov
test
sbb
loop
mov
inc
rorl
movl
subb
movsl
push
or
in
aas
loop
clc
pop
mov
xor
pop
xlat
mov
xor
xor
test
xchg
vpaddq
inc
lods
lods
jecxz
mov
dec
lea
add
adc
aaa
mov
fidivrl
sbb
add
or
cmp
mov
sbb
mov
test
jge
int
cmp
rol
aas
movsl
es
sti
cli
sti
pop
xor
cmp
fs
add
leave
mov
fpatan
clc
mov
adc
push
or
mov
sub
cmc
inc
sbb
push
and
xlat
lret
cmp
and
and
shlb
cmpsb
mov
das
push
xchg
jp
push
incl
adc
mov
pop
movsb
enter
es
lcall
push
push
add
jle
push
aad
dec
mov
pop
add
movsl
dec
rep
movsl
inc
add
addr16
or
ret
nop
test
mov
and
jbe
mov
xchg
or
push
das
jl
pop
in
cli
int
in
mov
aaa
ja
xor
mov
jp
xchg
mov
cmp
popf
loope
push
sbb
int3
or
pushf
cli
das
rcr
jp
mov
imul
leave
ret
push
dec
out
sbb
pushf
lcall
jmp
ds
push
cmp
nop
adc
mov
frstor
add
out
xchg
inc
or
loop
fidivs
loopne
adcl
cli
test
jo
mov
movsl
aas
fsts
xor
push
stos
rorl
aad
iret
mov
xchg
aam
cmpsb
mov
inc
stc
adc
loop
daa
sbb
call
mov
pop
xor
cmc
jo
sbb
sbbl
push
fistpl
imul
sub
decl
call
push
sbb
or
cmp
cmp
ret
ds
sbb
arpl
mov
inc
into
jo
jmp
psrlw
pushf
mov
mov
stc
outsb
pop
inc
fimuls
loope
inc
and
push
mov
test
mov
pusha
mov
outsb
stos
adcb
push
loopne
stos
xchg
push
pop
push
jge
dec
test
mov
pop
hlt
fildl
sbb
frstor
mov
out
lods
xchg
gs
rcll
dec
into
cld
pop
ljmp
jecxz
insl
pop
adc
clc
pop
syscall
push
sub
repz
mov
sub
rcll
int
dec
sti
mov
rcrl
iret
test
cli
xlat
jg
int3
dec
stos
add
dec
cmp
pop
xchg
pop
hlt
xchg
sub
mov
push
sbb
cltd
adc
inc
loop
sub
fildll
pop
fstpt
leave
scas
adc
xor
pop
subl
shll
adc
xchg
jmp
lret
clc
sub
dec
enter
mov
ljmp
int3
ds
sub
sub
dec
pop
jo
adc
inc
xchg
jecxz
sbb
fs
cmp
rcll
loope
and
mul
mov
mov
jecxz
and
xchg
inc
fdivrp
sub
lret
in
rcrb
cmpsl
push
cs
nop
cltd
aas
and
cmp
adc
xchg
mov
loopne
mov
fwait
mov
ret
sbb
cmpsl
jns
shrl
lea
insl
ficoms
jecxz
and
mov
inc
outsl
mov
ds
inc
or
mov
movsl
mov
xlat
or
hlt
mov
pusha
aas
test
int
icebp
mov
ja
jbe
lret
je
rcl
psubsb
aaa
je
fcomip
int
cmp
fwait
aaa
testl
jno
push
lret
jae
mov
das
fists
aaa
or
js
daa
push
xchg
cltd
add
mov
ret
pop
mov
insl
cltd
roll
repz
cld
lret
jne
cs
xchg
inc
inc
push
shll
pushf
inc
and
cmp
aad
mov
xor
mov
and
adc
faddp
rorb
mov
lret
cmp
ljmp
jns
bound
out
cmp
adc
sub
arpl
xor
adc
nop
lret
icebp
sbb
fidivrl
push
jle
push
mov
fbstp
rcll
imul
fucomp
xor
aaa
inc
mov
push
xor
and
ret
jae
outsb
xchg
test
lock
push
mov
add
push
cmp
std
cmp
testb
xchg
hlt
repz
aad
mov
insb
mov
cmp
xor
dec
enter
pop
cmp
adc
lods
in
push
push
inc
subb
leave
inc
sbb
xchg
arpl
outsb
pop
in
xchg
stc
movsb
xor
in
jmp
adc
xchg
add
orl
mov
call
mov
xor
or
sub
and
outsl
or
nop
pop
call
mov
cmp
push
addr16
pop
xchg
insb
bound
in
orl
sbbl
jae
notb
mov
cmp
loopne
enter
fists
ds
mov
repz
push
aam
lret
pop
fwait
int
arpl
mov
mov
rol
dec
inc
jnp
pusha
inc
pop
ja
add
cmp
fucom
imul
scas
mov
cltd
lret
push
dec
jp
imul
or
out
mov
movsl
loop
hlt
xor
out
or
mov
inc
repnz
dec
or
nop
jle
jae
sahf
adc
xchg
das
mov
adc
pop
dec
scas
sub
scas
int3
test
movsl
ja
xlat
jle
jg
jbe
and
test
cmp
cmc
lcall
mov
popf
jge
add
out
rcll
loope
outsl
scas
in
imul
gs
ffree
iret
inc
jne
or
enter
xbegin
xor
movsb
pop
ss
fsubr
dec
cs
ss
fdivs
repnz
dec
dec
pop
and
movsl
jae
rcll
insb
sti
mov
outsl
jecxz
mov
popf
mov
lods
adc
cmp
lods
mov
add
mov
mov
sbb
arpl
mov
insb
das
lock
sbb
and
jg
pop
jns
xor
roll
xor
data16
sub
jg
adc
jns
inc
mov
pop
add
and
ficoml
cli
scas
fidivrs
and
mul
stos
ds
xchg
or
test
mov
cwtl
pop
sub
add
imulb
icebp
rolb
adc
out
mov
inc
aas
xor
dec
test
data16
stos
iret
pusha
stos
pop
cltd
mov
sub
lds
lret
sbb
mov
jns
into
int
push
and
jecxz
hlt
or
les
std
lcall
mov
enter
dec
lret
mov
pop
xchg
sub
shll
andl
dec
xor
scas
mov
fimuls
ret
jo
dec
jmp
jnp
idivb
ljmp
xor
push
pop
push
or
pushf
inc
xlat
adc
mov
dec
jge
xor
sbb
mov
dec
fsubs
loop
stos
sub
xor
cltd
mov
and
rcl
pop
popa
pop
into
in
aad
leave
test
pop
add
into
cmpsl
out
sbb
stos
call
cmc
push
jge
movsl
es
push
sbb
mov
jnp
inc
jp
repnz
out
lahf
rorl
push
lret
jle
enter
sub
stos
gs
test
push
adc
movaps
push
cwtl
pop
pop
addr16
xlat
cmp
xchg
outsb
push
xor
lods
out
ja
lock
mov
xchg
jne
andl
push
push
mov
xchg
push
dec
arpl
scas
jns
jle
jle
cld
lea
sbb
adc
dec
mov
or
scas
xchg
jmp
mov
stc
xchg
rcr
enter
outsb
sbb
fdivs
and
lds
lret
push
sbb
ret
mov
pushf
or
push
jnp
fdivl
mov
lds
roll
mov
push
cmc
popf
cwtl
insb
aaa
jl
std
mov
dec
idiv
mov
stc
jmp
rcrl
js
rcrl
dec
stos
or
mov
and
gs
sub
cmp
push
test
mov
inc
sub
or
sub
xchg
pop
dec
push
aad
pop
mov
jo
aaa
sahf
dec
icebp
shlb
mov
mov
inc
mov
out
stos
cli
sbb
pop
mov
sub
cmp
xlat
mov
push
pop
sbb
outsb
sub
and
push
leave
je
mov
xor
sahf
bound
push
mov
inc
inc
jnp
mov
insl
imul
inc
movsb
jg
inc
call
std
cmc
pop
jne
cmpb
jg
jp
mov
and
mov
out
repnz
cmc
push
jle
sbb
daa
lcall
mov
dec
push
inc
add
leave
pop
out
ja
rclb
mov
pop
in
xor
lock
pushf
test
dec
mov
fistl
roll
lods
adc
sbb
sbb
jns
xor
mov
mov
cmc
push
pop
sahf
inc
mov
lds
mov
adc
das
addr16
sbb
dec
xor
push
dec
xchg
fimull
leave
aad
mov
mov
xchg
bound
dec
test
xchg
pop
repz
jae
inc
int
xlat
jne
xchg
cli
xor
scas
les
push
xchg
cwtl
sub
jp
xchg
mov
outsl
adc
jmp
fimuls
movsl
in
mov
ljmp
daa
cmp
or
xchg
push
push
pop
jno
mov
popl
fidivs
jmp
and
mov
or
sub
cmp
push
jnp
adc
enter
sub
shll
hlt
cmc
add
out
dec
test
loope
inc
push
cmp
out
xchg
lds
decl
pusha
gs
aad
xchg
xchg
push
xchg
or
adc
lret
push
iret
je
pop
jo
jb
gs
cmp
bound
shlb
in
jge
push
push
fsubrl
ss
fidivs
leave
and
adc
lret
repz
lea
bound
pop
fprem
dec
mov
mov
push
std
popf
ret
mov
xchg
or
and
nop
ja
jle
or
in
pop
jne
adc
loop
shlb
jo
movsl
aaa
data16
ss
jno
mov
pop
sub
cld
dec
inc
sarl
pop
rcll
mov
out
pop
push
pop
dec
xchg
iret
pop
loop
sub
inc
pusha
gs
lret
insb
sbb
pop
frstor
sbb
scas
add
mov
pop
mov
pop
mov
ljmp
cmp
push
imul
imulb
fstpt
cmp
dec
leave
xor
loope
cltd
xor
pop
xchg
sub
pop
cmpsb
stos
das
inc
inc
pop
inc
cmpsl
push
push
fdivs
test
mov
cmp
jno
xor
outsb
popa
loop
sbb
xor
adc
pop
test
or
and
enter
in
inc
adc
add
movsl
and
jmp
mov
shll
mov
dec
out
add
sbb
popf
cmp
dec
and
or
or
test
mull
les
push
shl
or
insl
push
jns
fs
int3
inc
imul
mov
inc
ficoms
cmp
mov
push
stos
jge
das
xlat
jb
sarl
shll
jmp
outsl
popf
mov
pop
xchg
mov
icebp
cmp
aaa
popa
sti
and
sbb
xlat
neg
sub
jmp
mov
push
sti
in
sub
test
xchg
das
inc
fdivrs
aaa
je
mov
push
sbb
mov
iret
pop
outsl
es
pop
and
popf
mov
ljmp
gs
ds
shlb
push
cmp
fcoml
and
pop
shll
pop
ds
adc
mov
repnz
aam
js
dec
adc
xchg
popf
sub
add
sar
clc
pop
pusha
fucomi
cmpsb
mov
out
in
mov
mov
sbbl
jno
dec
pop
repz
int
in
push
sbb
mov
int
sub
rcrb
imul
pop
sub
outsb
xor
mov
inc
aas
push
addr16
repnz
daa
frstor
mov
int3
hlt
jl
jb
cmp
jb
das
cli
mov
push
mov
bound
sbb
mov
and
inc
leave
sub
dec
into
dec
sbb
les
add
rcrl
mul
push
jge
dec
mov
inc
call
cltd
push
cmp
ja
mov
jmp
adc
sahf
pop
mov
inc
add
jg
inc
sti
mov
or
leave
mov
aas
daa
cmpsl
rcl
push
add
ljmp
in
sub
add
jl
lcall
lea
and
cmp
ret
mov
adc
nop
jne
push
rcr
popa
iret
test
outsb
jge
mov
jle
push
out
test
in
or
sarb
nop
cmpsb
jae
gs
fcoml
sbbb
popf
repz
stos
mov
adc
cmp
adc
xor
insl
inc
fsub
jge
mov
aad
mov
mov
bound
mov
icebp
int
lock
lea
idiv
stc
lcall
mov
fistpll
arpl
adc
push
adc
inc
sub
xor
add
mov
test
sbb
lea
jle
andb
xcrypt-cfb
cmpsl
les
dec
sbbl
lods
test
pop
jg
inc
shl
dec
jmp
jp
sub
or
push
mov
adc
imul
mov
cmp
inc
es
adc
repz
xor
xor
or
movsb
adc
lret
mov
insb
pop
cmpsb
iret
jne
neg
push
lahf
cmp
bnd
jae
xchg
ljmp
or
mov
iret
pop
sbb
mov
cmp
fsubrs
adc
adc
loop
xlat
lcall
outsl
or
xor
sar
popa
ds
and
adc
icebp
dec
jecxz
sub
sahf
or
jne
mov
jle
cwtl
jp
daa
inc
or
jmp
hlt
aaa
jns
lret
aam
sub
dec
je
rclb
mov
push
jg
push
movsl
push
adcb
mov
and
or
push
pop
mov
movsb
jecxz
cli
iret
outsb
outsl
add
xor
cmp
add
xchg
fcomi
mov
or
push
inc
pop
sub
scas
mov
xor
andb
xorb
pop
push
pop
cmp
and
movsb
pop
sbb
mov
cmp
jno
inc
inc
sub
in
jb
mov
and
mov
fnsave
dec
out
cmp
sarb
movsl
not
nop
es
fcom
aam
pop
push
inc
ss
rcrb
inc
push
gs
sahf
cmpsb
add
add
loop
movsb
test
push
daa
pop
js
mov
ret
xchg
xchg
jnp
pop
mov
jae
dec
jbe
jb
icebp
and
je
jmp
cmp
dec
xchg
pop
cmp
scas
jmp
out
push
push
cs
mov
int3
cmpsb
notb
sub
inc
ret
out
jge
lret
jns
xor
mov
and
push
jp
mov
addr16
pop
cltd
ds
xor
and
add
or
out
ja
loopne
jb
sbbb
in
push
inc
sbb
xor
dec
stos
je
mov
insb
inc
pop
fstpl
ljmp
xor
cmp
mov
imul
push
or
xorl
jg
mov
gs
or
data16
jb
int3
outsl
fsubl
push
jmp
jge
jp
and
popl
or
xlat
add
jnp
and
inc
sbb
out
stc
fwait
adc
adc
push
js
test
lods
cmp
in
and
addr16
cmpsl
les
inc
mov
stos
jns
ljmp
cs
push
rcll
insl
int3
mov
xchg
rcr
icebp
or
pop
push
sbb
shlb
xor
inc
outsl
push
mov
sarb
xor
jb
lds
gs
das
out
mov
inc
adc
sub
stos
xlat
insl
popa
and
out
fsubr
sub
and
fcompl
or
add
pop
mov
xchg
neg
aad
mov
mov
stos
call
shlb
push
adc
adc
push
ret
xchg
gs
push
xor
stos
cld
popf
arpl
mov
int
inc
push
push
das
rcl
lods
and
mov
mov
mov
xor
ja
loop
jb
pusha
ret
cmpsb
adc
jb
jb
ja
inc
mov
shr
outsl
lods
push
adc
mov
adc
into
jbe
int3
imul
repnz
inc
gs
push
cltd
aas
movsb
mov
cmp
movsb
outsb
aas
int
add
cli
cmpsl
imul
mov
aad
scas
pop
mov
inc
cmp
push
sbb
movsb
or
adc
push
std
or
and
and
cltd
dec
add
movsl
in
test
into
sub
adc
ficompl
das
mov
pop
jg
push
clc
js
or
push
mov
stos
mov
icebp
dec
fs
fistps
cmp
fidivl
aam
jmp
and
pusha
push
sbb
jmp
mov
bound
jne
fcompl
and
cmc
mov
shrb
xor
jge
mov
jp
push
out
insb
aas
xor
outsb
mov
xchg
iret
adc
dec
mov
cli
cltd
inc
cmc
fstpl
mul
push
cld
pop
jmp
mov
je
xor
sub
imul
cmp
test
int
imul
in
xchg
xchg
xchg
fs
jae
mov
lret
sub
stos
mov
xor
pop
push
loop
rol
lcall
dec
inc
cmpsb
push
cmp
mov
sbb
and
sub
cmpsb
int
mov
rorb
sbb
lcall
out
cmp
sahf
adc
or
mov
es
xchg
push
cwtl
enter
pop
insb
push
xchg
insl
dec
dec
scas
faddl
mov
popf
push
sub
out
sarb
inc
xor
cmp
in
bound
cmp
adc
xor
orl
add
das
sbb
lret
lea
inc
jo
nop
das
jmp
test
out
mov
rorw
add
es
aad
push
sub
addr16
leave
cld
aaa
daa
popa
jnp
mov
inc
and
and
mov
stc
clc
loope
orl
outsb
movsb
fsts
ja
or
mov
and
pop
sub
lret
cmp
and
fldl
xor
fnstenv
ret
add
dec
mov
stos
jl
mov
outsb
int3
inc
push
fcomps
lahf
sub
cmp
xchg
icebp
push
mov
outsb
mov
popaw
and
ret
sar
jg
mov
mov
mov
sub
jb
mov
shr
push
nop
into
in
jns
xchg
aam
data16
roll
jmp
push
jp
arpl
pop
jb
popf
dec
push
cld
pop
popa
mov
jo
cmp
fcomps
push
insl
jge
adc
in
inc
push
movsb
mov
je
cmp
add
push
ret
daa
test
adc
outsl
sub
sub
cli
testb
xchg
xchg
enter
sub
addr16
nop
cmpsl
cmp
mov
and
cmp
mov
subl
jg
xor
or
mov
pop
xor
dec
cmc
hlt
cmp
xchg
add
fistl
pushf
lret
push
in
fists
idivl
pop
jecxz
mov
cmp
dec
xchg
loope
push
or
inc
mov
or
xor
and
js
push
cli
inc
and
movsl
dec
idivb
push
jne
les
mov
xor
jo
ja
jg
pop
lds
incb
int3
lods
sbb
pop
jecxz
arpl
mov
rolb
lock
mov
cmp
and
xchg
pop
scas
stos
clc
hlt
mov
mov
mov
sub
xor
aad
cmp
add
add
mov
mov
mov
push
lea
cld
out
inc
in
fbstp
adc
ss
jecxz
sub
jp
aad
loop
jg
mov
pop
movsl
mov
pushf
mov
jns
cli
mov
mov
jo
inc
xchg
inc
cltd
mov
mov
xor
xchg
inc
loope
sub
scas
aaa
lods
mov
sub
push
loope
xorl
and
cmp
in
mov
or
call
inc
sahf
cs
je
jb
xchg
jae
sbb
rorb
adc
sub
mov
lret
aas
jne
out
and
stos
jle
dec
xchg
push
addl
cmpsb
das
enter
cwtl
jmp
and
mov
adc
fsubrp
or
pop
jge
sbb
and
jge
adcb
mov
pop
lods
push
cmp
push
decl
dec
into
std
sbb
in
pop
cwtl
cmp
lock
fimuls
and
xchg
fdivl
mov
leave
aad
inc
clc
aas
loopne
mov
sub
inc
sub
addr16
cwtl
cmp
lods
pop
repnz
pop
pop
sbbl
andb
dec
lret
adc
sub
rcrl
add
xchg
leave
lret
lock
and
fs
cmp
out
int
xchg
pushf
pop
test
push
or
imul
fldt
add
sub
lock
hlt
sbb
shll
data16
or
mov
int
out
inc
mov
cmp
scas
or
test
cmc
outsb
fldl
inc
fadd
bound
std
inc
into
sub
test
mov
cmp
mov
roll
jp
sti
into
js
std
and
out
out
paddd
pop
clc
insl
push
jne
pop
mov
xchg
mov
adc
mov
xchg
xor
xor
cmp
xor
sub
cmp
sbb
dec
cwtl
cmp
xchg
xchg
sbbl
in
jl
mov
jns
pop
lea
push
std
stos
add
sub
cld
jns
or
shrl
xor
push
stos
repnz
leave
in
or
add
mov
mov
mov
mov
xchg
push
mov
mov
lods
inc
jg
adc
xchg
aas
mov
inc
push
push
ljmp
out
pusha
stc
mov
arpl
movsl
imul
call
xor
mov
pop
fcomps
or
in
jb
add
out
hlt
cmp
mov
out
and
cmp
mov
jbe
setno
sbb
mov
mov
sbb
nop
mov
call
xchg
lock
test
inc
repz
add
mov
cmp
scas
roll
cs
pop
add
arpl
xchg
adc
sub
xor
fimuls
repnz
mov
mov
cmp
and
xor
nop
and
shll
mov
sub
sti
jns
clc
imul
lock
or
fwait
jno
xchg
add
dec
pop
imul
out
add
mulb
sub
sub
arpl
dec
jns
aam
pop
fmul
inc
in
in
iret
icebp
xlat
lock
jp
fs
xorl
xlat
dec
jo,pt
shll
int
sahf
jns
xchg
movsb
cli
into
jp
jb
pop
sbb
pop
push
xchg
pop
repnz
adc
fcoms
push
mov
add
inc
das
popa
rcrl
pop
fistps
mov
or
out
push
mov
loopne
sbb
or
ror
mov
jno
dec
inc
xchg
iret
mov
addb
xchg
mov
cmp
add
test
push
mov
sub
inc
jl
adc
add
sbbl
addr16
pushf
and
pop
dec
std
icebp
xlat
jle
rcl
adc
jmp
jne
int3
shrl
roll
cmp
sbb
mov
and
jo
sbb
xchg
cmp
loop
repnz
sub
scas
cli
inc
lcall
out
xchg
lret
mov
cwtl
mov
out
test
cwtl
and
test
push
and
repnz
into
cmc
jbe
fsubs
dec
mov
cmp
pusha
out
mov
jae
pop
lret
add
pop
imul
mov
sbb
ss
xlat
adc
arpl
pop
orl
pop
loopne
scas
inc
testl
fbstp
xchg
mov
frstor
es
add
or
rcl
xlat
outsl
sahf
sub
sbb
out
mov
cmp
push
or
outsb
fwait
jecxz
mov
jge,pn
ret
int
sbb
jl
popa
out
sub
out
jae
push
mov
add
push
jle
jns
fildl
sbb
add
inc
push
and
dec
sbb
sub
mov
pop
inc
shll
mov
jae
jno
xchg
dec
pushf
nop
dec
ret
mov
mov
scas
dec
das
jg
add
jo
scas
sub
push
cmp
je
adc
dec
lret
or
mov
mov
cs
xor
add
mov
lods
sub
add
pop
lock
push
stos
jle
jle
jl
mov
add
inc
insb
dec
add
js
jb
fdivl
and
xor
inc
inc
cli
popa
addl
xor
subl
adc
clc
pop
jmp
imul
push
das
xchg
bound
dec
mov
insl
ja
lds
nop
push
pop
loopne
sbbl
cltd
push
aad
or
mov
lods
sub
std
pushf
cmp
andl
ret
addr16
ljmp
cld
in
mov
cmpsb
mov
mulb
xchg
out
jp
pop
pop
mov
sbb
sbb
bound
sub
lcall
pop
and
ret
mov
sbb
cmpsl
mov
jmp
push
popf
add
pop
je
test
mov
ja
cmp
fmuls
xchg
xchg
add
ret
nop
roll
mov
mov
push
clc
repz
jb
cmp
pop
push
mov
int3
dec
imulb
sti
int
push
jg
sub
imul
cwtl
lods
iret
cmpsl
out
movsl
push
mov
mov
das
dec
and
mov
xor
fs
xchg
imul
cmpsl
in
mov
repnz
fbld
nop
add
push
inc
mov
adc
out
ret
dec
jmp
or
sub
fs
jns
sbb
ret
js
mov
adc
mov
arpl
test
enter
pop
idivb
inc
jle
daa
xchg
fstps
push
pusha
mov
add
popa
cmc
lds
xor
hlt
cmp
sbb
dec
faddl
sahf
and
pop
push
stos
or
decb
mov
sub
int3
ss
ficomps
jnp
lahf
fldl
daa
repnz
dec
mov
dec
xchg
and
aaa
mov
popa
mov
xchg
xor
jno
push
pop
jle
dec
dec
push
ret
mov
inc
mov
sahf
ret
cmp
pop
mov
inc
jmp
inc
xchg
push
popf
and
mov
imul
mov
adc
pop
lret
shlb
scas
sbb
fcoml
pop
cmpsl
sbb
fsubrs
mov
inc
fisubrl
ret
inc
inc
imul
ja
cmpsb
xchg
and
add
xchg
repnz
or
pop
mov
xor
mov
mov
addb
in
insl
sarl
imul
or
adc
inc
in
push
pop
testl
cmp
mov
jns
lods
dec
out
sub
daa
iret
lods
das
sub
sbbb
mov
fmuls
mov
lcall
lahf
inc
xchg
jb
or
outsb
mov
fpatan
shrl
sbb
aad
and
jnp
sub
mov
jbe
mov
scas
add
push
cmp
iret
dec
sub
stc
xor
xchg
xor
sti
push
loope
cmp
mov
imul
push
lahf
sbb
sbb
or
and
and
sbb
mov
mov
dec
adc
add
cmp
popa
daa
lds
mov
add
adc
mov
xor
cmc
push
mov
fcmovne
xor
icebp
hlt
dec
dec
mov
push
push
xor
leave
cld
lods
pop
sub
inc
sbb
and
shrl
fwait
call
or
sahf
hlt
mov
out
mov
shlb
ret
sbb
jg
adc
sub
add
ljmp
outsl
cmpsb
fdivrs
xor
xlat
mov
int3
stc
movsl
addr16
aaa
cmp
push
or
cli
cmp
out
aad
cmp
mov
jp
jle
inc
lds
sub
inc
dec
and
xchg
mov
insb
jno
mov
stos
xor
dec
enter
mov
popf
push
movsl
mov
xlat
andl
push
js
daa
arpl
les
pop
mov
sub
or
stos
rcr
sbb
mov
pop
aaa
rol
rcl
test
jle
mov
popf
inc
push
loope
or
dec
cwtl
xchg
mov
ret
pop
popl
mov
outsl
pop
fdivs
cmp
lea
orl
or
cmp
mov
mov
enter
insb
je
mov
adc
lcall
mov
mov
std
xlat
xchg
into
jecxz
call
cmpsl
add
out
stc
imul
mov
or
cmp
inc
jno
test
ss
adc
test
dec
and
or
cli
fcompl
mov
jmp
shl
outsb
ret
fsubs
jns
stos
mov
es
dec
and
jb
or
add
lea
stos
aas
sub
add
sbb
scas
lahf
lret
cmp
jo
sub
fwait
sbb
stos
test
or
and
xchg
fucomip
call
cs
ret
imul
shlb
xchg
test
cmc
cmc
pushf
ss
cmp
in
enter
in
test
and
jmp
or
jecxz
or
out
arpl
faddl
add
ja
adc
sbbb
adc
jp
rol
shl
flds
cwtl
jle
sbb
popa
leave
add
and
pop
cmp
dec
push
stc
sub
inc
popf
xor
pop
fistpl
dec
dec
xchg
movsb
sub
dec
mov
mov
push
jl
aad
xlat
fcomps
push
inc
cmc
inc
and
test
ljmp
jns
and
int3
scas
int3
xchg
roll
sub
fisttpll
gs
popf
adc
push
and
sbb
inc
pop
das
and
xchg
pop
data16
scas
lds
loop
aam
pop
adc
dec
cmpsl
cmp
icebp
or
mov
pop
inc
gs
pop
jnp
jbe
clc
cmp
xchg
or
incb
mov
pop
mov
xchg
xor
dec
adc
jecxz
push
lret
inc
iret
nop
into
fnstenv
add
push
mov
mov
dec
mov
jle
lock
inc
xlat
lock
int3
inc
outsb
repz
dec
test
in
sti
out
in
cmc
push
and
sub
push
addr16
adc
cltd
pop
jns,pt
aas
push
cmc
aas
imul
out
xor
mov
xchg
mov
jle
test
mov
aaa
fdivs
xchg
push
push
or
xchg
roll
jns
hlt
mov
jl
negl
xor
scas
pop
hlt
add
fisubs
test
sarb
cs
mov
jno
movsb
push
adc
lcall
pop
push
test
add
mov
push
imul
adc
ljmp
repnz
mov
outsb
mov
sarl
cmp
sbb
jne
aad
lahf
imul
mov
adc
jb
push
dec
push
addr16
and
sbb
fsubl
dec
loop,pn
push
and
push
movl
stos
sbb
and
js
scas
shll
cmc
inc
lret
sbb
or
jno
adc
push
int
cltd
mov
xor
lods
push
jge
rclb
ret
fs
dec
movsb
nop
and
jo
cmc
js
sti
xchg
fidivrl
sub
push
jb
sub
mov
mov
mov
push
push
in
rcr
sbb
add
in
xor
dec
pusha
clc
sub
popa
mov
ja
jb
lcall
sti
push
test
cltd
pop
insl
jnp
shl
je
into
rolb
lahf
xchg
inc
push
cmc
add
push
jbe
pushf
mov
rol
and
sbb
subb
adcb
xchg
lock
les
iret
adc
out
in
lods
pop
and
lret
push
pop
xor
jmp
xchg
repnz
loop
jle
cwtl
sub
push
sub
cmp
gs
push
enter
pop
call
sub
repnz
mov
lock
push
aad
xor
mov
mov
inc
and
inc
filds
inc
mov
test
js
jbe
jno
jne
mov
fstl
mov
leave
icebp
leave
jg
push
pushl
enter
rep
lahf
dec
pop
fs
mov
pop
fs
dec
lret
sbb
pushf
imul
mov
xchg
outsl
stos
aaa
and
push
pop
or
cld
imulb
orb
xor
js
pusha
sbb
mov
arpl
aad
mov
out
adc
jg,pn
ss
shrb
xor
mov
jg
shl
mov
pop
cmp
inc
cmp
jmp
dec
dec
call
icebp
pop
mov
and
jl
ret
lds
add
sub
ss
dec
cwtl
xor
push
and
xchg
xchg
add
sub
lret
cmp
dec
jl
sbb
mov
mov
xchg
in
cmp
mov
or
in
and
push
jnp
shll
jo
sbb
pop
unpckhps
xor
stc
add
je
mov
sbb
shrb
adc
jle
cltd
jo
jo
pop
js
scas
mov
scas
cmp
jge
mov
dec
and
int3
sub
cmp
inc
xor
jbe
push
inc
outsl
lcall
inc
sub
outsl
andb
test
pop
jno
mov
mov
or
push
pop
fisubl
add
ror
jbe
subl
iret
rcll
inc
cmp
pop
mov
push
inc
sub
repz
test
enter
mov
rcll
xlat
pop
xabort
adc
xchg
arpl
enter
daa
push
xor
jmp
subl
js
int
dec
mov
inc
aad
adc
dec
pushl
ret
les
stos
dec
sbb
sbb
stos
dec
mov
jns
mov
rcrl
mov
sbb
and
sbb
sahf
cmp
add
cmp
mov
shlb
sbb
and
mov
lock
fcmovnu
push
cld
lods
std
jb
popa
lret
ja
sub
mov
xor
cmp
mov
inc
andb
mov
pop
or
int3
jecxz
jnp
adc
mov
or
pop
sub
fwait
ficomps
inc
test
push
xor
mov
adc
scas
push
or
mov
shrb
cmp
sbb
pop
inc
into
lock
mov
jge
fsubrl
out
shrb
or
push
lods
or
sub
xchg
mov
dec
sti
movl
test
bound
dec
sbb
rcrb
mov
cltd
xchg
push
or
cs
sbb
mov
jmp
adc
pop
aam
idivb
mov
inc
dec
imul
sarb
and
in
cmp
dec
insl
jns
or
rcrb
cmpsl
fcoml
sub
in
clc
pusha
lock
imul
adc
pop
adcl
jnp
ja
call
mov
mov
fidivs
dec
ss
xor
xor
or
pushf
popf
rcrb
stc
movsl
push
outsl
mov
sarl
aad
and
or
cmpsl
adc
or
pop
jmp
or
xor
xchg
lret
icebp
hlt
jnp
inc
cmc
ja
lret
xor
xor
dec
fptan
outsl
outsb
adc
sub
push
push
fbstp
sub
pop
jp
pop
and
mov
je
rclb
pop
mov
mov
shll
mov
enter
in
xchg
push
filds
dec
cmpl
sub
sbb
or
adc
idiv
and
aas
push
pop
int3
or
jl
mov
ds
call
dec
push
cmp
fsts
out
cltd
cmp
addr16
jp
and
fs
mov
cmp
mov
push
and
out
sub
out
push
in
and
and
jb
jg
jae
ret
out
insl
enter
pop
jmp
pop
les
fmull
pop
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
jg
fisttps
pop
aaa
cmp
jg
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fbstp
lock
testl
adc
repz
jl
jmp
aas
popf
fimull
or
mov
xchg
enter
inc
xor
loope
cmp
movsb
add
fisttps
outsb
daa
js
jne
daa
push
xchg
sbb
add
lds
enter
testb
gs
cli
pushw
outsb
stc
in
add
or
push
mov
add
jne
daa
push
xchg
sbb
popf
adc
rcl
xchg
cmpsb
lock
pop
mov
xchg
mov
fs
popf
je
push
mov
js
jne
fisttps
and
paddusw
aaa
addb
push
fildll
icebp
icebp
jmp
jnp
fbstp
fwait
pop
lock
call
jg
iret
mov
aaa
roll
push
fisttps
aaa
addb
push
fisttps
call
jae
fisttps
in
aaa
data16
push
fistps
aaa
fs
add
fisttps
aaa
addb
push
fisttps
cmp
jg
fistpll
mov
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
dec
hlt
fs
jp
mov
aaa
je
add
fisttpl
jb
mov
xor
fisttps
aaa
test
mov
aaa
fs
jg
test
aaa
addb
push
fisttps
aaa
fs
add
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
aaa
addb
push
fisttps
sbb
jg
cmc
cs
das
xchg
add
in
dec
out
cmp
cmp
aaa
pop
adc
push
or
xlat
push
push
iret
mov
sub
stos
cmp
movsl
stos
test
mov
dec
mov
repnz
js
jne
mov
push
lds
push
cmp
outsb
lret
insl
jnp
aad
xor
dec
cmp
dec
and
stos
push
inc
cmp
push
jno
sti
sub
xchg
inc
cmc
xchg
dec
sbb
aam
ret
sahf
sti
inc
jecxz
inc
and
jl
lock
dec
adc
int3
rolb
dec
add
xorl
mov
test
adc
das
fisubrs
andb
xchg
mov
scas
int3
pop
xor
addr16
push
ja
insl
inc
int
arpl
xchg
cmc
mov
inc
aam
mov
inc
cmp
pop
pop
pop
mov
sahf
dec
mov
sahf
dec
mov
dec
rcr
addl
aas
sahf
bound
movsl
add
adc
test
leave
jg
rep
mov
cmc
enter
mov
aad
mov
imul
xor
mov
mov
dec
ret
sbb
push
ja,pt
inc
inc
in
movsb
adc
dec
lret
test
dec
inc
insb
or
jbe
movsl
jl
mulb
lret
hlt
popa
xchg
stc
fsubrl
out
loope
mov
sub
mov
lret
mov
arpl
dec
xchg
push
and
jo
pushf
and
cmp
sbb
lret
adc
dec
shll
imulb
ljmp
pop
dec
dec
jg
and
repnz
mov
pop
inc
xor
hlt
xchg
orb
test
push
into
aad
dec
repz
lcall
fcomps
in
stc
or
scas
jne
add
cmp
sar
in
add
insl
ss
icebp
popf
js
xchg
dec
loope
cmpsb
jb
scas
push
mov
mov
js
and
roll
loopne
mov
mov
push
int3
sahf
fisttpl
lea
inc
inc
or
divl
push
mov
outsl
fwait
inc
jle
add
lea
pop
ret
stc
addl
sbb
adc
push
pop
and
pop
sbb
lahf
or
xchg
sti
add
dec
adc
inc
insb
les
pop
ret
cmpb
cmp
xchg
adc
sbb
mov
fdivs
outsb
pop
loope
shlb
fs
mov
rclb
ja
gs
negl
aad
add
pop
incb
cmpsl
mov
stc
jnp
add
push
lcall
aas
pop
fwait
pop
pop
adc
test
pop
add
jp
andl
xlat
push
jmp
dec
std
movsl
inc
ljmp
adc
pop
sahf
lds
mov
icebp
add
enter
mov
cwtl
adc
sbb
daa
movsb
jno
pusha
xchg
mov
out
jecxz
call
test
daa
push
cwtl
sub
sub
out
insb
pop
mov
mov
cmp
dec
mov
or
loope
dec
xchg
std
cmpsb
mov
xor
jl
jp
addr16
mov
adc
aas
lods
sbb
add
popf
pop
rcrl
xchg
ficompl
dec
cli
js
and
stc
inc
xchg
js
lods
test
aam
push
clc
inc
iret
xor
rclb
fs
call
push
or
jo
adc
sub
mov
lock
inc
and
lret
or
jmp
sbbl
sahf
mov
jns
xor
pop
pop
push
mov
pop
lret
sbb
cmp
out
lods
mov
lret
lds
pop
adc
sti
mov
hlt
stos
ja
sahf
pop
pop
xor
mov
inc
out
sub
in
test
xor
and
ljmp
leave
inc
stos
aad
in
clc
and
leave
cli
xchg
aas
pop
lcall
mov
pushf
aam
cli
das
rcll
jae
and
inc
pop
imul
test
scas
and
add
cmp
push
out
dec
xorl
sbb
rclb
lods
mov
loop
pusha
mov
mov
loope
jbe
addr16
ficoml
cwtl
fsubr
xor
lahf
cmp
jge
fisubl
mov
sbb
sub
repz
subl
xchg
clc
dec
fdivrl
adc
inc
sub
mov
xchg
into
or
push
fsubrs
sub
sub
mov
cmp
jb
orb
cmpsb
and
lcall
dec
sub
or
dec
ja
pop
pop
sub
inc
sti
jmp
sbb
jnp
mov
push
ljmp
icebp
inc
mov
push
jbe
sbb
add
mov
xchg
lock
jbe
sbb
mov
mov
dec
cmp
xor
cmpsb
lea
cmp
int3
add
in
pushf
or
mov
inc
and
and
xorl
lret
push
adcb
rol
mov
aaa
mov
das
and
shl
adc
test
mov
pop
idiv
xchg
cmp
pop
addr16
adcl
dec
ret
sbb
pop
xchg
mov
mov
out
std
pushl
insl
ss
stos
loopne
pop
and
mov
mov
inc
mov
iret
nop
mov
popa
ret
repz
ds
cld
sbb
adc
pop
stos
data16
aaa
add
daa
dec
or
pop
adc
jae
jl
mov
lea
jmp
xchg
xchg
push
mov
daa
shrl
push
movsb
inc
pop
and
push
sbb
or
lds
cmp
rcrb
repnz
push
into
lea
or
out
and
ss
fstl
pushf
aas
mov
out
scas
mov
arpl
mov
jns
stos
dec
jo
and
cltd
jp
pop
sbb
dec
shll
hlt
rcll
in
stos
push
push
push
scas
jecxz
adc
test
dec
aas
popa
adc
lcall
mov
out
shlb
mov
and
lcall
pop
test
dec
inc
mov
stos
xchg
imul
cmp
xchg
push
xchg
xchg
inc
pop
pusha
and
sub
jp
ljmp
jbe
and
xor
add
popa
mov
jns
inc
faddl
ja
icebp
sti
sbb
add
popa
ja
mov
cmp
adc
andl
mov
jecxz
dec
cmpl
out
aas
scas
jbe
mov
out
mov
add
fildl
sub
pusha
ja
lock
mov
sbb
daa
sub
imul
or
frstpm(287
xchg
lds
jns
adcb
mov
pop
add
mov
mov
sarl
int3
lea
cwtl
popf
insl
fdivrs
hlt
push
adc
xor
lock
sbb
xchg
cs
xchg
jp
cwtl
dec
aas
out
or
and
sub
jge
or
lahf
mov
inc
push
imul
js
sahf
jo
lea
cmc
or
mov
push
sbb
sbbl
sbb
fstpt
sbb
repnz
cli
mov
jb
lahf
cli
das
loope
out
sbb
inc
adc
daa
sbb
lods
inc
mov
push
xchg
std
inc
mov
dec
mov
push
imul
notb
jl
push
sbb
adc
sbb
mov
xor
dec
roll
sti
xchg
test
xadd
js
stos
rol
add
mov
add
jl
mov
push
sbb
loopne
sbb
cmp
jmp
in
lret
xchg
pop
negl
fcomps
xchg
loop
mov
jecxz
add
jl
nop
out
loope
sub
cld
popf
or
jmp
stos
idivb
cmp
rclb
negl
jbe
mov
leave
push
mov
add
jb
and
add
sti
mov
jge
or
and
push
insl
lods
cld
orl
mov
jmp
push
push
mov
push
negl
test
mov
jbe
mov
jbe
dec
push
and
fwait
leave
fisttpl
push
int
push
fdiv
or
aad
mull
stos
and
xchg
daa
hlt
decl
and
mov
lret
out
adc
xchg
pushl
pop
cmp
lds
add
movsl
pop
xor
push
test
mov
ja
icebp
and
icebp
inc
arpl
push
push
das
fcmove
cmpl
ljmp
xchg
dec
ja
dec
rorl
gs
lahf
push
push
sub
xor
pusha
xor
pop
in
jmp
push
add
push
jp
xor
popl
dec
test
mov
lods
call
sub
lahf
mov
dec
add
stc
push
sub
mov
insb
data16
popf
jns
pushf
push
adc
push
xchg
stos
cli
ljmp
cwtl
lock
pop
movsl
inc
fcoms
add
push
mov
enter
mov
in
repnz
rcr
ret
roll
jp
int3
aad
aaa
xor
dec
testb
sbb
mov
jmp
mov
mov
xor
jl
xor
sbbb
sbb
arpl
repnz
clc
dec
pop
call
xor
dec
out
addr16
jo
jo
mov
sub
jecxz
jle
push
xchg
jno
mov
add
popf
push
repnz
mov
add
out
int
mov
jb
pushf
sbb
fdivp
xchg
aaa
sahf
inc
adc
repz
hlt
add
psubusw
mov
jmp
mov
jno
addr16
imulb
jle
aam
lcall
lods
arpl
imul
push
loop
mov
jns
xchg
outsb
mov
js
outsl
dec
push
pushf
inc
imul
inc
jecxz
lea
hlt
test
cmpsb
repz
cs
out
les
cmp
push
mov
xor
lock
rolb
push
call
rcrl
stos
shrd
xor
and
test
jecxz
mov
mov
rcll
lret
jne
mov
ja
add
sbb
sbbl
mov
mov
hlt
cmp
cwtl
push
push
mov
or
daa
popf
pop
clc
or
mov
cmp
pop
xchg
in
sbbb
dec
notb
lret
mov
and
mov
push
sub
jns
push
sbb
popfw
push
decb
adc
push
iret
fidivrl
or
xor
stos
loope
xlat
and
fwait
mov
mov
scas
xchg
mov
inc
repnz
je
aad
jmp
cmpl
pop
mov
ret
in
repz
or
dec
sbb
fwait
outsb
or
xor
push
push
daa
or
add
fsubrs
in
repnz
sub
cmpsb
les
fcom
jmp
sbb
add
xor
leave
loop
aam
lods
xchg
leave
mov
lods
mov
xor
cmpsb
sti
pop
dec
mov
lret
dec
loope
repnz
xlat
or
mov
sbb
xchg
daa
mov
lea
movsl
dec
cmp
mov
mov
imul
outsl
mov
hlt
fcoml
cmp
lock
mov
adc
pop
int
adc
xor
sbbl
out
fwait
fs
pushw
test
imul
scas
pop
and
xchg
sbb
and
push
aas
cmpsl
push
popf
lods
idivb
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
