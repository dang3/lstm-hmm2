aam
inc
mov
cmp
addr16
push
sub
mov
out
sub
push
inc
push
iret
jl
pop
inc
lahf
add
loope
sbb
sbb
insb
adc
fldt
pop
fsubr
aas
jo
stc
inc
sbbb
or
mov
mov
jmp
push
xchg
add
lea
aaa
push
scas
pop
push
mov
das
fnsave
aaa
or
int3
dec
loop
cs
arpl
xchg
adc
clc
in
xor
ret
out
jns
loope
pusha
rcll
aas
mov
int
pop
cmp
cld
insb
and
push
xchg
loope
inc
mov
and
jb
int3
loop
dec
leave
or
iret
inc
fwait
stos
outsl
mov
sbb
mov
push
movsl
es
jno
cmpl
xor
add
add
push
fistpl
push
rorb
test
lods
dec
xchg
push
adc
es
jl
test
dec
ror
and
mov
mov
lock
fbstp
jp
in
iret
add
lahf
rorl
das
push
shll
mov
sub
loop
out
dec
jl
stc
cmp
push
inc
or
jecxz
call
scas
decl
mov
pushf
outsl
or
dec
cmp
and
and
sub
mov
sbbb
test
das
pop
mov
dec
sti
ss
xchg
and
xchg
ljmp
int3
nop
divb
cmp
cli
rsqrtps
loopne
xchg
jno
jo
addb
outsb
and
push
pop
lret
enter
mov
cmp
sub
stos
or
sarl
and
ficomps
and
int3
push
int3
xchg
xchg
rclb
into
dec
icebp
negb
mov
dec
xchg
pop
fwait
stos
lock
xor
out
sbb
cmp
pop
pop
frstor
rolb
int
adc
add
std
mov
push
and
push
or
shll
outsb
mov
push
xchg
mov
sub
push
push
cmc
pop
jg
leave
test
or
mov
repnz
int3
hlt
cmpsl
js
sub
lret
dec
inc
push
incb
lret
fwait
jne
dec
pusha
scas
fsts
push
test
pop
cwtl
std
ffreep
hlt
mov
outsl
pop
jg
sbb
ljmp
repz
rorl
mov
rorb
adc
add
xchg
lcall
idivb
and
adc
dec
jge
aad
outsb
hlt
mov
aad
jecxz
loop
fnstsw
dec
inc
sbb
call
jno
adc
sbb
pop
or
out
xor
add
add
push
aad
push
jo
jbe
mov
jo
mov
mov
dec
lds
cmpsl
icebp
sti
in
push
sub
sub
xchg
push
xchg
and
loop
bound
test
sub
or
stos
jnp
pop
cli
dec
dec
add
add
pusha
adc
mov
pop
cmpsl
mov
repnz
xor
add
adc
jbe
faddl
je
cwtl
lods
inc
aas
sbb
or
adc
shll
cld
jae
shr
mov
sub
fs
add
pop
jecxz
sbbb
pusha
mov
hlt
pop
lods
and
dec
xchg
lea
jmp
cwtl
rcll
push
inc
mov
jno
test
cld
mov
dec
mov
les
and
inc
insl
sbb
mov
lea
js
stc
lcall
jae
dec
mov
or
lods
xchg
xor
mov
jno
lea
int3
push
push
test
icebp
mov
std
push
mov
push
shll
insb
mul
mov
mov
mov
std
xor
aam
repnz
pop
lret
stos
sahf
js
jnp
inc
stos
movsb
push
mov
cmpsb
subb
mov
jp
add
push
adc
cmc
imul
adc
fsubrs
insl
jl
lea
rcrl
cmp
mov
filds
push
scas
test
mov
push
aam
mov
jp
push
mov
sub
mov
stos
dec
ficoms
in
mov
scas
insl
sub
sub
inc
nop
scas
sbb
lock
mov
adc
ret
push
pop
or
mov
inc
adc
pusha
cmp
mov
add
popa
push
jo
hlt
inc
push
call
cmc
inc
jecxz
adc
jne
lods
aas
addr16
xorb
in
fs
outsb
xchg
lahf
dec
pop
out
stos
dec
mov
pop
rorl
dec
mov
xchg
rol
std
mov
sbb
cmp
scas
aas
stc
sbb
mov
test
pusha
mov
adc
jno
or
add
lret
pop
lahf
mov
scas
push
out
arpl
outsl
pushf
mull
fpatan
xchg
enter
aam
icebp
adc
jle
or
in
test
call
jg
cltd
xlat
lret
stos
test
popa
daa
mov
mov
or
out
adc
xor
pop
mov
hlt
rorl
test
mov
fstpl
fidivs
imul
dec
jp
test
push
in
adc
sarb
mov
fsubrl
xor
adc
pop
xchg
xchg
push
nop
jge
push
mov
leave
mov
cmp
mov
jo
subb
shrl
push
sbb
adc
repz
imul
and
xchg
lcall
dec
and
cmp
or
jge
xchg
test
std
mov
jp
jo,pt
push
mov
adc
or
or
filds
lea
sbb
cmp
iret
pop
out
lret
arpl
jb
push
iret
sub
in
int
js
pushl
imul
sbb
push
aaa
add
fstpt
push
clc
fsubr
in
push
inc
sub
out
push
push
jge
das
cmp
mov
dec
lret
pop
push
mov
pop
ret
aad
dec
jnp
std
incb
fcmovnb
mov
stc
or
jecxz
cltd
shlb
lcall
inc
cmp
or
push
movsl
into
pop
cld
lods
dec
in
xlat
jns
pop
xor
xchg
and
mov
lods
movsb
imul
mov
xchg
xchg
pushf
pop
push
push
sti
loopne
xchg
and
or
mov
sahf
out
inc
mov
cmp
js
jns
push
jbe
dec
jmp
and
sub
push
repz
pop
int3
rolb
sti
cmpsl
xor
dec
push
push
sub
adc
xor
xorl
dec
loop
shll
std
push
int
movb
sbb
popa
cmc
std
pop
or
iret
out
jp
sbb
add
cmc
aad
mov
mov
sbb
adc
and
in
dec
xlat
fildll
pusha
pop
adc
les
jmp
mov
inc
arpl
sbb
mov
sub
mov
std
movsb
sbb
xor
jns
into
dec
jmp
iret
jl
add
iret
addr16
pop
lods
movsb
pop
mov
xchg
popf
sub
and
inc
add
pop
jmp
xor
sub
cld
out
fisubrs
pushf
mov
add
dec
test
call
out
cmc
loop
sbb
push
mov
push
pop
xor
mov
cs
cld
gs
pushf
inc
bnd
cs
xchg
jns
jmp
stos
cli
mov
dec
sub
or
jns
jno
cmp
cmp
xor
xchg
cmp
sbb
cmpsb
push
pop
push
jg
add
loopne
int3
flds
aaa
or
add
or
out
stos
loope
sub
sbb
dec
clc
decb
rclb
popa
add
daa
fwait
push
mov
lret
mov
push
idiv
add
rorl
enter
fidivrl
in
stos
mov
mov
pushf
dec
outsb
inc
lds
scas
enter
mov
xchg
sbb
rcrl
mov
stos
push
cmp
cmp
xchg
mov
test
jbe
out
pop
mov
pop
pushf
pop
subb
in
cmpsl
aaa
shll
or
fstps
xchg
jge
pop
and
mov
push
rcrb
xor
cmp
sahf
dec
inc
in
mov
out
add
sbb
cmp
jg
sti
sub
mov
fcmovne
xchg
loop
mov
adc
push
ja
sbb
mov
ficomps
call
loope
sub
xchg
fwait
mov
inc
cmp
in
mov
add
mov
dec
xchg
or
xchg
jmp
aaa
mov
mov
jo
mov
std
shl
sti
stos
fisubrs
fdivl
and
or
and
pmulhuw
popf
popl
out
fsts
inc
add
jne
push
xorl
mov
movntq
or
mov
or
mov
jecxz
jp
mov
das
inc
aaa
pushf
test
aas
push
bnd
cmc
cmp
xor
fst
cld
xchg
sbb
repnz
outsl
push
sub
cmpsb
mov
inc
cmp
mov
jecxz
insl
in
mov
push
scas
sub
sub
js
orb
out
fs
mov
cmp
sbb
jle
daa
pushf
jle
and
sub
arpl
dec
fisubl
iret
push
push
sub
in
inc
mov
imul
cwtl
leave
mov
fisttpll
dec
call
imul
fadds
sti
xchg
add
iret
data16
dec
fwait
dec
push
sub
arpl
ja
and
and
out
enter
xor
lock
popa
scas
cltd
out
in
push
jl
stos
cmc
mov
aaa
push
lea
mov
lods
out
adc
add
jne
sbb
aas
pop
inc
push
mov
xor
adc
pop
xchg
repnz
xchg
rcrb
xchg
shlb
out
sbbb
push
mov
lea
lret
test
xchg
pop
arpl
add
sub
or
adc
lret
fdivrs
jmp
rcl
popa
fstps
push
jae
nop
push
fs
std
adc
popl
and
roll
nop
arpl
inc
cltd
lcall
add
cltd
xorl
jmp
xchg
cmp
or
xchg
pop
jle
mov
popa
fldl
push
rol
cmp
mov
or
push
sub
movsb
cmp
andb
mov
aas
lods
cmp
mov
cltd
in
aam
sti
outsb
scas
sub
jle
pushf
test
mov
aad
out
rcrl
test
outsb
mov
mov
idivl
mov
jne
leave
fstl
mov
imul
adc
jbe
cs
pop
daa
jmp
shlb
repz
cmc
pusha
mov
cmp
dec
inc
fcomp
mov
ds
push
inc
pushf
jo
nop
inc
inc
cltd
pop
das
clc
add
stos
cwtl
pop
sub
push
pusha
or
pusha
into
shl
push
pop
xchg
outsb
outsl
pop
push
imul
xor
push
or
shrl
stc
mov
cli
fs
cmp
jns
loop
jno
loope
inc
sbb
out
dec
sbb
mov
mov
aam
jb
rclb
lcall
mov
lea
jae
in
fidivs
jecxz
cmpsb
and
add
push
enter
lret
mov
fbstp
sub
sbb
lahf
in
push
aad
pusha
les
add
je
stc
test
pop
in
lret
adc
inc
outsl
xchg
or
in
cld
sub
sub
xchg
mov
out
sub
jecxz
lods
int
stc
out
add
xlat
add
iret
mov
imul
pop
insb
or
and
stos
xlat
push
lds
cltd
mov
pop
add
push
cmpl
mov
mov
and
cmp
xchg
mov
sub
push
xor
and
mov
inc
adc
popa
cwtl
cmp
push
test
fwait
clc
sub
mov
out
pop
add
pop
push
mov
pop
lods
mov
iret
data16
adc
inc
mov
outsb
in
arpl
outsb
das
or
push
jae
mov
popf
int
fnstcw
and
addr16
mov
lea
roll
dec
add
xor
sti
sub
rcrb
pushf
xchg
mov
jne
xor
dec
sub
or
pop
mov
cmc
inc
call
test
dec
arpl
subl
stc
jo
mov
inc
mov
xlat
cmpsb
sub
mov
dec
dec
xor
out
lods
shl
xchg
or
lods
iret
das
pop
shrb
jp
cmp
mov
leave
push
add
nop
xchg
or
push
loope
mov
add
leave
lahf
and
push
fldcw
shrb
fiadds
sub
xor
mov
aas
sarb
in
pop
ss
inc
sub
lods
push
sub
fldl2t
pop
enter
cmpsb
xor
pushf
fists
dec
pushf
loope
in
fsubrs
shrb
push
lock
dec
jb
in
xchg
dec
leave
test
sbb
aam
cmpsb
rclb
scas
cs
movsb
nop
sub
test
cmp
shr
pop
cmp
or
stos
popf
popa
std
fisubrl
adc
loope
xor
fidivl
stos
hlt
jns
jbe
fldenv
jb
mov
or
lahf
aam
jns
inc
out
adcl
scas
cmpsb
test
stos
movsb
addb
sub
push
inc
push
cs
rcll
push
cmp
repnz
stc
dec
cmp
fiadds
adc
sbb
and
aaa
lret
lock
paddd
icebp
dec
cli
inc
mov
jbe
cli
stos
sub
stc
test
popf
aam
sub
jl
and
add
ds
push
jl
add
sbb
jge
and
cmp
lock
movsl
xor
mov
jg
mov
pusha
addr16
clc
cmp
push
push
insb
mov
add
or
outsl
pop
push
mov
mov
and
lods
jle
xchg
pushf
sbb
pop
lcall
hlt
cs
jl
mov
pop
and
jno
lods
adc
cltd
or
orl
inc
jl
rcrl
push
jecxz
pop
ja
or
ljmp
in
cld
lds
sub
sbb
adc
daa
scas
sarb
mov
xchg
outsl
loopne
dec
in
scas
push
pop
dec
test
adc
shr
out
mov
mov
shl
pop
mov
inc
add
dec
push
shrl
or
aad
jo
aas
popa
mov
add
loopne
or
cmp
jne
dec
icebp
dec
hlt
out
sbb
inc
cli
shll
subb
sub
negl
ret
xorl
jne
fnstsw
std
mov
jbe
bound
mov
imul
popa
push
pop
inc
outsb
out
fld
xchg
pop
cmp
fdivs
xchg
jne
test
std
js
outsl
add
xlat
sbb
cmpsb
imul
fiaddl
call
pop
ret
or
aad
xchg
add
inc
or
pushf
loope
ja
adc
fsubrs
push
sub
popf
and
scas
jge
orb
rolb
rclb
lcall
xchg
rorl
mov
sbbb
lods
jae
pop
inc
pop
mov
shrb
cld
mov
cmp
mov
mov
mov
outsb
mov
push
out
pushf
cmc
cwtl
jno
xor
adc
mov
bound
inc
adc
mov
out
mov
mov
jp
js
mov
pop
mov
pop
jmp
xor
sbb
or
lret
cwtl
pushf
jae
iret
and
jmp
imul
or
pop
test
xchg
mov
or
mov
push
mov
shrl
outsb
fs
arpl
test
sub
loop
ret
add
fldl
dec
test
ret
in
and
rclb
xchg
fstpl
xchg
mov
push
popf
and
popa
test
jno
add
imul
adc
cmpsl
sub
sub
inc
xchg
mov
pop
stos
inc
movsb
imul
lret
cwtl
mov
add
xchg
int3
sub
add
cltd
call
mov
dec
push
popf
popa
out
mov
imul
fimull
push
in
push
add
sar
imul
jns
mov
in
pop
shll
addl
repz
jg
int
pop
lea
int
popf
xchg
insb
mov
movsb
fs
adc
clc
lcall
cmp
in
sbb
notl
mov
fisttps
jne
dec
jb
add
repnz
push
daa
pop
lcall
mov
pop
mov
xor
push
dec
pop
mov
jge
movl
lods
or
xor
push
dec
lods
data16
aam
push
popa
mov
pushfw
inc
arpl
xchg
decb
int3
mov
add
and
jae
orl
cmp
popf
jb
cmp
sbb
inc
aaa
es
cs
dec
out
scas
sub
lods
pop
dec
je
inc
divb
sbb
jno
xor
int3
sub
dec
push
mov
dec
popf
ret
sub
mov
xchg
sti
pop
mov
sbb
xchg
scas
psrld
inc
jb
in
push
cwtl
mov
fists
mov
sahf
outsl
adc
hlt
adc
aad
ret
sub
or
or
ljmp
fistpl
sahf
rorb
jno
movsl
test
clc
icebp
lods
fsubrp
mov
stos
mov
push
sbb
sbb
add
cmpsl
lock
mov
mov
imul
xchg
js
sub
cmpsl
sub
xchg
cmpsb
cmpsb
push
jle
adcl
movsb
scas
xor
cmp
shl
add
enter
and
out
inc
outsb
arpl
ja
movsl
std
stos
pushf
and
cs
jbe
xchg
inc
aaa
mov
insl
rcll
int3
push
xchg
inc
dec
imul
adc
int
aad
sub
jmp
push
dec
repz
sub
ret
mov
daa
push
jecxz
pop
ss
jns
cmp
jae
push
xlat
insl
dec
jmp
sub
fistl
jno
adc
adc
jb
lods
inc
das
fcmovu
jb
test
cld
testb
inc
or
test
pop
or
jnp
mov
data16
pop
mov
dec
dec
ret
and
add
mov
mov
add
aas
mov
mov
cs
jb
mov
in
ss
pop
and
xchg
jae
mov
shl
mov
push
test
push
stc
into
jg
in
mov
scas
xor
fisttpll
xchg
ret
jl
fsubr
std
into
fdivl
inc
stos
loopne
stos
outsb
push
fnstenv
rcrb
cs
lods
cld
repz
leave
cmc
jno
sub
dec
pop
mov
loop
fisttpl
mov
and
insl
rorb
mov
mov
push
mov
dec
sbb
adc
xchg
ja
cli
outsb
notl
lea
mov
pop
adc
jl
bt
xchg
xchg
inc
or
mov
dec
push
stc
clc
rorb
xor
inc
xchg
out
jg
push
xorl
jge
adc
fdiv
addr16
test
lock
mov
jae
out
mov
inc
stos
out
sti
mov
cltd
mov
xlat
out
xchg
dec
mov
and
jl
adc
ja
xlat
roll
lods
pop
inc
or
jns
cwtl
xor
adc
add
sub
std
std
or
sbb
lock
ljmp
mov
movsb
push
mov
pop
je
xchg
in
rolb
cmpsb
mov
mov
lods
pop
mov
ror
ss
arpl
popf
inc
add
mov
cmc
in
hlt
jge
and
outsl
and
out
add
sbb
and
mov
imul
lret
adc
or
out
dec
cmpsb
adc
push
xor
movsb
add
and
pop
jnp
mov
pushl
push
insl
or
add
inc
out
mov
jae
push
popf
jbe
sbb
push
push
inc
push
and
enter
jne
jnp
pop
cli
push
in
rolb
shll
push
clc
push
fnsetpm(287
imul
lods
cmpb
sub
rolb
icebp
push
mov
in
pop
nop
loope
xor
es
jae
clc
xor
xchg
rcrl
dec
or
pop
push
imul
pushf
pop
jns
out
loope
sbbb
lcall
cmp
je
mov
popf
jo
cli
and
enter
gs
outsl
dec
bts
xor
fistpll
mov
shll
ljmp
and
push
sub
push
lret
outsl
inc
stos
jae
das
sub
add
addl
pop
push
repnz
sub
shlb
ret
xchg
das
aaa
mov
cltd
pop
lea
dec
inc
push
mov
push
sbb
aam
rorl
enter
sbb
addl
das
mov
scas
imul
and
ret
xor
xor
push
fwait
pcmpgtb
ret
sbbb
insb
mov
pop
push
insb
cli
jae
push
popfw
xchg
mov
lods
pop
jl
push
pop
mov
fwait
cld
fwait
cmc
inc
mov
fwait
cmp
push
scas
add
fsubl
pushf
mov
sub
mov
lods
rcr
sub
ss
scas
jecxz
test
xor
jge
mov
lods
js
cmpsl
pop
sti
fnstsw
loope
mov
lock
lret
rclb
push
push
pop
mov
rorb
ljmp
test
lcall
mov
mov
out
cli
cmp
ret
fildl
mov
xchg
mov
push
jbe
roll
inc
lea
jle
scas
das
add
ficoms
mov
int
in
pop
lcall
and
jo
leave
mov
cmp
jns
cs
loopne
cmpsb
cli
jg
out
sub
or
or
loope
arpl
add
sarb
shll
mov
mov
push
add
mov
sbb
xor
cltd
mov
xchg
icebp
mov
adc
dec
popa
or
outsl
xchg
fs
lods
cmp
xchg
aas
out
test
inc
loop
inc
iret
mov
jle
mov
outsl
xchg
inc
aas
repnz
pop
cltd
js
or
sub
add
pop
loop
jne
movsb
rorl
and
cltd
stos
filds
inc
andb
xchg
out
jae
adc
inc
fimull
sti
sub
mov
xchg
insb
push
shlb
mov
mov
stc
or
xchg
loopne
into
and
cwtl
xchg
stc
movsl
push
outsb
lahf
cli
mov
add
sub
in
out
das
arpl
outsb
dec
cmp
je
sarb
dec
mov
jns
xor
and
lea
cmp
lea
sub
push
imul
lea
inc
add
jecxz
clc
mov
jecxz
xchg
outsl
divl
xchg
insb
mov
and
repnz
loope
test
sbb
lods
scas
lret
std
nop
fs
or
pop
sbb
cmc
xor
hlt
out
sub
sub
jmp
mov
jo
inc
push
mov
fdiv
lret
and
out
mov
push
mov
lcall
mov
scas
mov
cmpsb
nop
lods
outsb
int
cmc
insb
inc
ret
cmp
adc
test
or
test
dec
lahf
pop
inc
mov
outsb
pop
and
push
xor
les
add
mov
ret
jge
xchg
enter
sarb
and
std
dec
es
mov
xlat
insb
cmp
test
xor
sub
loop
mov
stos
loope
fstps
sbb
mov
mov
ljmp
inc
cmp
jns
ss
xchg
adc
cmpsl
cs
pop
in
js
and
xor
push
outsl
cmp
ja
inc
mov
pushf
cmp
xchg
push
xchg
cmp
rcrl
xchg
dec
dec
popa
int
add
pusha
nop
inc
repz
repz
jnp
add
add
leave
and
dec
jl
jmp
adc
dec
imul
scas
cmp
pop
cld
jmp
mov
int3
xorb
icebp
add
mov
das
inc
pop
icebp
cli
xor
cs
ret
or
inc
cmp
sbb
and
int3
lret
add
in
cmp
imul
test
mov
lods
mov
sti
ds
push
dec
fwait
push
jecxz
ja
cmpsl
mov
test
xchg
ss
scas
addb
pop
nop
mov
pop
inc
shll
in
fistpl
sahf
adc
xchg
inc
push
popa
incb
das
adc
jo
int
mov
mov
subb
lods
fdivrl
cmp
cmp
adc
ret
mov
fnstenv
xchg
in
ret
and
inc
xchg
add
push
mov
loope
jae
repnz
pop
and
fs
out
add
xorl
popa
pop
pop
aam
xor
lds
sahf
sub
movsl
add
enter
aam
cmp
add
scas
cmpl
push
test
ret
sbb
jge
push
cmc
lret
and
insb
pop
pop
mov
xchg
push
dec
jo
lds
mov
pop
mov
bound
in
in
mov
cmpsb
mov
cltd
cmp
jae
cmp
mov
aas
mov
jns
xchg
xor
push
and
shld
nop
xorb
mov
pop
jns
aam
mov
push
js
test
push
outsl
in
mov
or
lret
push
and
inc
sbb
rcll
dec
js
daa
add
test
loopne
sbbb
icebp
inc
std
out
sub
and
sti
testl
push
int
and
dec
push
mov
movsb
and
mov
fs
orb
dec
or
movb
movsb
inc
jbe
ss
and
adc
and
adc
mov
adc
push
jne
and
mov
push
es
ror
fs
loope
das
dec
lret
fs
or
mov
jnp
das
into
ror
addr16
jle
imul
mov
enter
xchg
xchg
pop
xor
je
xchg
pop
jnp
push
ret
jo
sub
stos
jo
imul
aad
test
xlat
xlat
repz
cltd
mov
cmp
in
xchg
sub
jne
jecxz
add
xchg
adc
sbbl
inc
call
test
or
inc
imul
add
xchg
xchg
add
out
inc
sub
inc
fstl
mov
in
mov
cld
and
pop
inc
scas
clc
sub
dec
pop
outsl
fmull
dec
add
hlt
repz
cwtl
outsb
jns
fsubp
cwtl
hlt
int3
or
jnp
or
gs
and
test
lret
xchg
cmp
inc
xor
inc
sti
jbe
pop
out
mov
hlt
cmp
xchg
iret
or
push
lret
or
scas
pop
sbb
mov
cltd
inc
dec
sub
sti
outsb
insl
pop
sbbb
das
shl
jo
push
mov
sbb
mov
fwait
pushf
sbb
xor
repz
lahf
dec
mov
adc
ret
icebp
sbb
jno
mov
lods
hlt
jg
jle
icebp
arpl
in
stos
loopne
pop
mov
addr16
lret
and
cmp
mov
shlb
rcrb
fidivl
ljmp
push
mov
lcall
loop
lods
insb
inc
scas
mov
mov
mov
and
sahf
pop
out
pop
adc
imul
pop
bound
push
inc
add
and
push
int3
aas
rcll
cmp
jp
sbb
pop
xor
sub
xlat
mov
adcb
shl
jmp
stos
mov
mov
fistl
add
jae
cmovne
sbb
ja
mov
sub
fs
int
je
loope
call
gs
fs
inc
pop
sub
aaa
xor
into
sarl
out
and
mov
test
sti
add
data16
adc
sbb
aam
fmull
lea
sbb
mov
das
xchg
mulb
inc
jo
push
pop
xchg
scas
xor
mov
or
fidivrs
ljmp
and
adc
outsb
movsl
leave
clc
inc
movsb
ja
cmc
cmp
add
adc
mov
repz
adc
pop
pop
test
fmuls
aad
push
call
cmpsl
mov
and
mov
sbb
push
dec
jb
fprem
fbstp
xor
push
xlat
sub
sub
ret
add
mov
movsb
push
push
jb
push
fstl
test
cltd
lret
cmp
scas
out
arpl
lds
rcrb
mov
sbb
inc
pop
stos
mov
js
pop
jno
pop
jo
int
mov
dec
addr16
pop
insb
mov
xchg
fcompl
ja
addr16
mov
inc
rcl
testl
aam
sbb
lock
and
lahf
rcrb
dec
pop
mov
pusha
scas
add
cmp
mov
sub
pushf
inc
loope
cs
aam
movsb
clc
dec
sub
je
in
out
scas
repz
pop
pop
xor
jne
add
daa
test
pop
jb
ficompl
hlt
jle
xchg
or
inc
std
cmp
mov
dec
mov
call
mov
add
loopne
xor
idivl
sub
or
push
movsb
loop
add
mov
inc
dec
dec
in
add
inc
cltd
or
js
mov
arpl
stos
cli
mov
std
and
pop
or
lahf
mov
pop
ret
fnstcw
xchg
add
aaa
and
outsl
rcrl
or
jl
insb
aaa
fs
pop
mov
out
add
cmc
cmp
sub
repnz
arpl
cli
push
mov
push
enter
inc
cmp
pop
inc
mov
mov
push
aaa
jmp
mov
cmpsb
dec
aas
cld
fcoms
cmp
cmp
movsb
xchg
in
cmp
bound
loop
fisubrl
hlt
lock
xchg
push
sbb
movsl
dec
fwait
or
mov
ret
cs
fiaddl
push
xchg
divl
mov
dec
cmp
sbb
jg
push
mov
test
iret
push
push
dec
sub
jg
adc
sub
popf
xor
das
pop
inc
fisubs
lcall
movsl
pop
repnz
sub
sub
ds
mov
and
pop
xorl
mov
mov
jp
aad
rorl
xor
pop
xchg
pop
movsl
arpl
mov
cmp
addr16
dec
jmp
add
test
inc
push
jb
dec
imul
mov
mov
mov
adc
add
lcall
lret
fisubrl
sbb
adc
push
in
xchg
pop
mov
mov
push
lea
popa
pop
test
and
in
addr16
rorb
out
push
lock
adc
ret
mov
call
push
jmp
jns
pushf
pop
negb
mov
fcompl
xor
cmp
pop
shl
nop
jnp
xor
sbb
out
cltd
or
adc
outsb
dec
ret
push
push
test
xor
inc
xchg
jmp
clc
je
in
aam
lods
pushf
inc
xor
add
imul
fwait
dec
and
out
out
hlt
out
dec
inc
adc
mov
push
test
cmpsb
sbb
ja
addr16
mov
fisttpl
shlb
dec
lock
stc
addr16
divb
movsb
bound
adc
sti
ret
lret
popa
imul
jae
lock
out
pop
push
imul
jnp
aaa
je
mov
loop
sti
push
mov
rol
sub
fidivrs
lahf
and
mov
stc
mov
fs
ret
lcall
outsl
shr
mov
aad
xchg
into
add
push
inc
fistl
imul
in
movsl
fisttps
push
iret
js
mov
and
call
push
sbb
or
pop
in
inc
pop
loopne
sarb
enter
and
adc
push
jg
mov
fucomi
scas
jno
mov
rcrb
stos
mov
add
cmp
fidivrs
fstl
adc
add
pop
dec
dec
and
lods
and
cmp
mov
cmp
fisubrl
lret
outsl
or
out
sti
popf
sti
test
cmp
insb
and
or
imul
shrb
xchg
pop
fimull
outsl
ret
mov
int3
push
mov
test
mov
pop
fs
and
xchg
adc
sbb
call
push
push
pop
mov
test
in
or
xchg
ret
jg
sbbb
test
xchg
stc
aam
fadds
divl
test
nop
mov
xchg
sbb
test
cmp
xor
xor
repnz
xor
dec
mov
outsb
ja
sub
jnp
sbb
pushf
enter
xchg
sbb
repz
daa
adc
xor
push
sub
dec
das
inc
mov
test
dec
arpl
sar
dec
imul
mov
xchg
inc
push
popf
lcall
xchg
call
aad
cmp
fs
inc
sbb
sarl
cmp
test
repnz
ss
imul
jl
orb
pop
xor
pop
divl
aam
push
mov
adc
sbb
arpl
jmp
mov
lods
mov
int
gs
xchg
mov
rorb
mov
enter
cmc
jne
in
add
pop
pop
stc
fdivl
stos
fs
push
lds
sbb
scas
dec
inc
loope
adc
inc
ret
or
and
aaa
std
rorl
inc
pop
pusha
mov
cmp
cltd
ret
jae
xor
push
fidivrl
add
ret
into
cmp
ljmp
cmp
aaa
cmp
hlt
inc
mov
mov
pop
cld
mov
mov
dec
stos
lods
call
or
sub
div
lcall
pop
andb
data16
push
repnz
lret
inc
xlat
add
xor
or
lock
add
into
sahf
add
sbb
in
daa
outsb
push
add
dec
cmp
imul
enter
sub
lea
add
out
sub
rclb
clc
and
fldcw
inc
mov
pop
pop
enter
stos
pop
int3
aaa
jge
fwait
repnz
xor
pop
sbb
aad
mov
sbb
and
mov
pop
inc
xchg
cli
leave
xor
xchg
scas
mov
jl
cmc
inc
cmpsb
or
rcl
pop
es
pusha
fisubl
push
or
fcmovnu
movsl
loopne
and
jmp
adc
xor
icebp
xchg
mov
dec
mov
or
stos
mov
repz
mov
insl
add
jmp
movsb
pop
iret
fsubp
lcall
leave
and
jecxz
lret
sarb
sub
mov
mov
adc
jbe
lods
test
je
push
mov
andl
jp
mov
mov
sbb
pop
sub
mov
lcall
add
aaa
jnp
adc
notb
and
lods
lret
call
movsb
out
jg
dec
cmp
rorb
jle
adc
push
mov
cmp
pop
movsb
pop
shrl
mov
shrb
jg
fistps
lock
cli
repz
cmp
insl
cmp
int3
xor
fiadds
dec
nop
icebp
test
mov
pop
hlt
jp
sbb
cmp
cmpsl
aaa
or
out
adc
add
cmp
fsubr
aad
add
cmp
outsl
je
ss
xchg
or
mov
cmc
adc
dec
xlat
sbb
and
xchg
pop
call
pop
mov
into
jmp
int3
dec
adc
scas
or
addr16
ja
int3
out
push
dec
pushf
mov
mov
sbb
in
jp
dec
and
xchg
stos
cmp
dec
add
popa
sbb
call
shr
and
pinsrw
dec
mov
sbb
jne
and
addr16
xchg
je
and
sub
repnz
fs
pop
ss
sbb
and
push
std
push
out
sti
mov
std
cli
fmuls
push
inc
mov
and
fs
mov
in
lret
aam
lret
rolb
lea
arpl
inc
fdivp
xchg
mov
jge
leave
test
xchg
mov
imul
mov
stos
shrb
popf
push
loop
fisubrs
aas
cwtl
aam
jbe
and
int3
enter
jg
jg
add
cmpb
es
and
cwtl
cmp
or
out
xchg
mov
add
xor
iret
dec
dec
test
xchg
cwtl
scas
pop
inc
or
outsl
mov
rorl
cwtl
in
xchg
inc
bound
cwtl
or
add
lcall
nop
mov
sub
lret
lock
pop
sbb
rcl
add
mov
push
mov
or
pop
xchg
sub
filds
cltd
sbb
lret
loope
in
insb
and
and
cmp
jge
arpl
jo
xor
and
mov
lahf
inc
sti
mov
push
call
or
ffree
xchg
xlat
and
jne
jne
dec
lcall
into
mov
jl
jnp
repz
sbb
imul
in
jae
inc
lods
adc
sbb
mov
or
ror
push
add
mov
jbe
fbstp
out
mov
icebp
pop
inc
stos
or
inc
inc
inc
push
enter
out
ret
xchg
dec
dec
add
ss
pop
filds
or
and
stos
iret
loope
and
pop
ds
sub
push
stos
aaa
inc
cld
lea
dec
jle
test
movsb
mov
or
fwait
ds
mov
out
or
or
repnz
jg
scas
adc
xor
ljmp
test
jle
jge
stc
xchg
call
ljmp
mov
pop
cli
mov
xchg
sub
jecxz
push
mov
fisubrs
jne
dec
pop
sub
std
jmp
push
scas
xor
lock
rclb
or
popa
nop
pop
push
pop
mov
jle
jnp
pop
fildl
and
pop
sub
div
mov
movsb
in
mov
and
lock
sub
aad
push
mov
clc
into
rorb
ss
adc
push
mov
sub
nop
mov
mov
sahf
pop
js
out
imul
xchg
add
xchg
cmp
jae
arpl
int3
push
in
cmp
adc
aam
inc
lret
les
nop
lret
push
mov
sbb
add
pop
dec
sbb
std
aas
or
pushf
mov
mov
aam
adc
xchg
push
sbb
mov
subl
xchg
sbb
adc
sbb
mov
lcall
adc
ret
sub
inc
xchg
rcll
xlat
pushf
push
cmp
xchg
pop
es
jge
lods
or
sti
hlt
mov
ja
iret
and
push
add
loop
push
daa
push
je
popf
shl
sbb
jmp
sbb
cmp
fnstsw
jo
xchg
push
mov
cltd
add
lds
ja
cmp
outsl
testl
ret
test
dec
xor
pop
cmp
dec
addb
test
ret
int
out
and
push
sarb
jg
cwtl
in
lret
in
out
xchg
jns
cmp
ds
and
imul
lret
xor
lods
jp
sub
adc
les
icebp
hlt
ja
test
mov
movsl
nop
jo
lahf
push
arpl
pop
cli
adc
repz
cmp
jp
scas
mov
mov
mov
or
dec
mov
mov
xorl
negl
jne
push
jbe
loop
jnp
pushf
nop
cwtl
daa
gs
scas
and
lahf
aad
mov
jecxz
in
leave
stos
and
je
adc
mov
or
fistl
sti
jne
xchg
ret
clc
lahf
dec
bnd
addr16
push
stc
pop
scas
ret
add
insb
pop
xor
sbb
aam
hlt
lret
mov
cmp
xchg
and
ja
xor
jb
cwtl
loope
cmp
imul
sbb
rol
inc
pop
repnz
testl
sti
xchg
xchg
inc
cmp
nop
pop
inc
xchg
cmp
icebp
sbb
mov
mov
sub
xor
andl
dec
cmpl
outsb
test
fisttps
call
test
add
inc
cmpsl
lds
adc
jg
push
push
dec
cltd
test
lahf
mov
jecxz
mov
inc
inc
inc
push
push
and
shll
shrb
popf
fs
pop
loopne
cld
xor
js
out
shll
notl
andl
mov
sub
out
movl
out
dec
stos
mov
leave
xchg
test
dec
add
jl
cmp
sarl
es
lcall
cmp
das
imul
int
mov
mov
dec
push
loopne
pop
sbb
fisubl
addr16
xchg
out
movsb
dec
jge
mov
nop
test
fildll
push
and
in
add
faddp
add
ss
pop
and
test
inc
xlat
adc
mov
xchg
std
lret
loope
and
ret
mov
lcall
dec
fimuls
mov
pop
add
sub
in
jmp
mov
pop
aas
testl
xlat
cltd
jo
leave
idivl
fs
dec
lock
mov
xor
or
push
pop
lods
addr16
test
mov
push
sbb
out
adc
cmpsl
mov
sub
dec
shlb
push
scas
in
das
fstl
mov
sti
cmp
pop
pop
aad
pop
cmp
std
cwtl
sarl
cmp
inc
push
jmp
inc
cltd
adcl
hlt
mov
or
test
sbb
imul
mov
or
jmp
and
mov
add
jg
outsl
test
inc
sbb
daa
sahf
out
dec
adc
xor
imul
aad
sub
xor
add
xorl
push
xor
addr16
or
and
jecxz
adc
lods
rolb
inc
mov
bound
data16
popf
xor
mov
outsb
rorb
adc
mov
inc
fs
or
pop
jo
fdivp
dec
ljmp
jl
ret
and
sub
lock
xchg
cltd
movsl
xchg
xchg
in
call
push
add
push
lcall
inc
inc
shll
xchg
inc
and
mov
inc
fwait
aam
dec
pop
xchg
aas
int
movsb
dec
cmp
pop
stos
push
mov
clc
jbe
jle
xor
jp
cmpsl
mov
stos
xor
mov
test
gs
mov
sti
outsl
cmp
push
pop
push
mov
jle
cmpsl
das
stos
outsb
xchg
pop
std
clc
in
dec
lods
mov
push
pop
xor
mov
xor
iret
xor
or
ja
je
bound
hlt
xchg
testb
sbb
jo
sahf
dec
sub
aas
adc
into
sti
ja
lahf
xchg
mov
mov
rcr
mov
fwait
int
mov
aaa
cmpsb
sbb
mov
xchg
orb
clc
into
ljmp
pusha
add
xchg
arpl
lahf
clc
cwtl
add
xchg
pop
pushf
lods
sar
sarb
cmp
fldt
dec
xchg
push
pop
loop
or
std
add
lcall
pop
cli
fistl
aad
pop
mov
adc
jge
test
push
stos
or
push
jmp
inc
add
sub
ljmp
adc
inc
mov
idiv
mov
inc
mov
jg
or
lcall
clc
arpl
aad
mov
sub
scas
scas
sub
jnp
mov
call
lret
mov
dec
daa
push
jle
cmpsb
sub
pop
adcl
cwtl
jg
push
ss
rcll
inc
mov
outsl
out
cmp
or
lds
jmp
loopne
mov
shr
fs
out
das
inc
repz
add
popf
inc
and
xchg
push
xchg
pop
je
or
fcomps
ljmp
sbb
add
jecxz
ljmp
xchg
jo
loope
dec
add
ss
cwtl
mov
aam
or
xor
mov
add
stos
nop
sbb
xor
sahf
dec
icebp
pop
add
inc
inc
dec
or
xlat
imul
mov
dec
pop
cmc
mov
stc
sub
cmp
push
je
loopne
outsb
mov
cwtl
sub
fldcw
add
enter
jmp
xorl
or
inc
or
sub
je
fmull
arpl
push
push
scas
adc
mov
and
js
inc
xchg
and
mov
sub
fstpl
mov
rcrb
mov
les
and
jnp
hlt
xchg
pop
adc
pop
fcmovu
xchg
push
test
inc
call
adc
inc
loopne
cmpsl
mov
dec
daa
jo
cmp
jo
jno
pop
lcall
lcall
push
inc
lea
hlt
call
push
pop
cmpsl
in
js
aaa
lods
jo
es
mov
stos
cmc
mov
repz
and
aas
cmp
push
outsl
sbb
jge
in
pop
sahf
xor
sahf
jne
add
stc
aam
xor
mov
repnz
mov
dec
push
sbb
negl
mov
inc
push
addb
xlat
mov
xchg
lahf
and
xchg
mov
pop
fimull
movsb
add
and
xchg
mov
ja
fwait
mov
xor
xchg
jae
cmp
dec
roll
add
xor
aaa
xor
jge
cmp
aad
out
icebp
jecxz
hlt
xor
ret
roll
fimuls
lods
pop
rcrl
lret
clc
mov
test
imull
cmp
push
push
pop
adc
mov
std
mov
mov
fs
add
dec
jb
sub
add
mov
inc
jb
ja
cltd
ficoml
dec
inc
fcmovnu
inc
cmp
jmp
cld
fcmovbe
mov
xlat
insb
adc
push
loop
adc
outsl
ret
lret
outsb
clc
lods
or
push
xor
jno
stos
cmp
in
cmp
sub
testl
bound
xchg
mov
icebp
es
jle
xor
adc
jg
sahf
loopne
sbb
or
jmp
ret
push
cmp
jb
jno
loope
ret
mov
iret
cltd
push
es
fs
repnz
xorb
imul
ja
lds
rolb
mov
xor
push
or
jo
and
into
inc
in
loope
arpl
cld
cmp
call
push
cmc
lret
sbbb
fs
xor
cmc
mov
or
test
loope
mov
bound
inc
push
and
cmpsb
push
mov
cmove
aad
daa
stc
aad
or
movsl
ljmp
fsubrs
cwtl
inc
cmp
in
add
or
push
dec
ja
mov
mov
or
sub
movsl
fcmovnb
jmp
iret
xchg
or
cwtl
cltd
in
and
popf
sahf
fisubrs
sub
stc
cmp
sub
pop
dec
rolb
jg
dec
pop
fstpl
sti
aaa
addb
mov
imul
push
shlb
in
inc
xchg
movd
scas
test
cwtl
shr
sub
fsubl
push
cmp
clc
sub
out
cmp
test
dec
call
adc
adc
loop
adc
push
mov
xor
out
mov
push
ja
or
shll
cmc
lahf
test
call
pop
fwait
jae
sti
dec
jnp
popf
out
lods
mov
and
shrl
push
mov
setle
jmp
xchg
shrl
ficomps
add
mov
adc
sub
inc
scas
stos
int
jmp
cmpsb
fdivl
mov
add
lock
push
fisttpl
xchg
cmpsl
insl
loopne
or
mov
inc
les
push
inc
imul
jge
lahf
popa
js
push
repnz
scas
xchg
imul
fdivrs
dec
lea
in
lds
rorl
jg
scas
mov
shl
xor
xchg
icebp
xchg
popa
sub
cmp
xorb
mov
jg
mov
enter
ret
cmp
mov
lahf
roll
shll
adc
int
int3
inc
mov
sub
pushf
push
aaa
dec
cmpsb
mov
call
push
push
add
cmp
sbb
imul
pop
push
xchg
shrd
and
orl
addr16
add
jecxz
rorl
loope
adc
push
xchg
into
mov
lods
mov
fldenv
bound
mov
daa
or
or
xor
leave
jb
loope
inc
outsb
mov
dec
jge
bound
mov
icebp
fwait
mov
add
adc
data16
mov
push
mov
rolb
push
repnz
sub
ja
fisubrl
push
out
adc
mov
cmpsl
insl
sbb
push
out
mov
add
sahf
jnp
xchg
pop
xlat
inc
lret
pushf
stos
movsb
sub
loope
push
movsb
movsl
xchg
outsb
and
pop
cmpsb
mov
rol
cltd
sub
sub
dec
int
fistl
jb
jno
clc
popw
adcb
xchg
mov
je
and
sahf
push
cmc
push
push
mov
mov
mov
outsl
mov
push
dec
std
pop
or
int3
stos
imulb
mov
push
insl
outsl
ss
jo
dec
ffreep
aaa
icebp
sbb
cli
mov
push
lea
mov
stos
jmp
dec
sub
push
sbb
mov
fwait
sub
adc
aas
xchg
sub
daa
stos
loop
loopne
xchg
jl
cld
ja
rcrl
xor
dec
dec
cli
jns
enter
or
push
incb
sub
jge
mov
xorb
js
mov
push
xor
xchg
push
inc
cwtl
mov
mov
shlb
mov
dec
or
test
cmp
insl
jnp
cmc
loopne
nop
or
adc
sub
out
clc
push
or
and
outsl
gs
pop
dec
inc
xchg
add
out
adcb
dec
test
in
mov
push
ljmp
repnz
mov
or
adc
lret
mov
cmp
sub
jle
add
in
popa
and
xchg
cmp
out
fisttpll
nop
mov
fistpll
xor
out
into
add
sbb
imul
lea
inc
out
jne
cmp
or
pop
fildl
sub
inc
inc
jbe
stos
push
push
rorb
cs
inc
mov
push
cwtl
les
stos
fwait
rcrb
test
jecxz
aad
push
fidivl
xchg
and
dec
jmp
jmp
lret
iret
dec
scas
rcr
gs
jl
bound
ret
sbbb
inc
les
push
je
out
cmp
pop
imul
stos
push
push
imul
and
lret
push
or
rorb
shlb
and
iret
mov
mov
mov
pusha
loop
mov
lret
data16
loopne
push
es
lods
and
mov
and
ljmp
out
lods
mov
stos
mov
adc
jmp
imul
xchg
dec
ss
and
xchg
test
loope
push
imul
mov
jg
adc
divl
mov
pop
mov
mov
add
mov
cli
rsm
hlt
cmp
daa
xor
adc
add
cmp
push
add
jns
cmp
and
sbb
push
mov
dec
push
mov
fscale
loop
dec
arpl
add
cmc
sbb
ds
andl
sti
and
lret
pop
xor
mov
push
pop
or
sahf
daa
cmc
sub
xchg
insb
mov
push
fistps
imul
dec
fwait
dec
pop
outsb
push
jmp
nopl
xor
dec
test
dec
bound
push
jne
xchg
xchg
inc
adc
xor
js
cmc
std
les
mov
test
lret
sub
mov
test
and
push
pushf
les
cltd
leave
mov
push
fcmovnbe
sub
out
popf
xchg
ret
cmp
push
jg
les
sbb
cwtl
mov
jl
ret
pop
fsubrl
stos
mov
insb
mov
sarb
gs
cmpsl
dec
xor
roll
sbb
add
clc
mov
dec
test
push
pusha
push
fwait
lret
cmpsb
jo
dec
fisttpl
mov
pop
push
jnp
push
sub
shrb
stos
jno
lock
or
push
fdivrs
sbb
pop
sahf
daa
fiaddl
xchg
ljmp
popa
int3
add
push
mov
inc
stos
sbb
pop
inc
mov
shlb
add
jp
inc
gs
xchg
xor
shrl
xchg
dec
mov
add
push
add
inc
and
sub
adcl
mov
negl
inc
popl
test
gs
sbb
push
pop
pop
aaa
and
dec
sahf
je
idivl
cmp
fxch
in
xor
adc
js
adc
or
add
int
xorb
int3
outsl
jnp
enter
pop
jne
nop
stos
sbb
mov
lret
icebp
int
out
inc
leave
test
mov
shr
pop
mov
mov
sbb
cs
into
in
adc
and
push
in
jne
inc
xor
jp
dec
xchg
roll
sbb
sub
pop
mov
sbb
or
mov
pop
std
mov
mov
xor
xor
stos
popf
inc
les
repnz
sbb
add
sbbl
pop
popl
lds
movsb
jle
xor
jbe
int
inc
jnp
push
cs
mov
jle
add
xor
scas
mov
mov
push
jle
lcall
add
adc
in
pop
mov
inc
andl
sub
rolb
cli
add
inc
pop
fbstp
enter
cltd
adcb
inc
add
insb
stos
pop
sbb
add
push
lret
pop
mov
mov
movsl
or
inc
imul
xchg
fstps
mov
adc
add
icebp
jne
dec
les
subl
xchg
stos
mov
adc
call
pop
push
mov
sbb
add
lret
push
cmpsl
shll
jne
outsb
aam
ja
mov
cltd
popl
aaa
out
jbe
push
mov
xor
xor
or
pop
outsb
das
mov
or
rolb
pop
sahf
jecxz
xor
idivl
fwait
add
mov
loopne
loop
cwtl
inc
sti
pop
bound
or
push
push
mov
or
jo
insb
outsl
mov
push
jne
pushf
int3
fwait
incb
mov
xchg
stos
scas
in
push
mov
inc
dec
mov
sbb
adc
iret
cld
or
dec
or
jnp
loopne
ja
xchg
mov
outsb
stos
xchg
adc
or
mov
push
in
scas
jno
das
pusha
test
stos
jae
push
dec
filds
mov
in
stos
jg
jecxz
shlb
pop
jns
lods
push
sub
movsl
fsubrs
loope
cwtl
cmp
aaa
es
les
xor
dec
mov
aas
fs
stc
pop
aas
rcr
jp
repnz
jnp
pop
call
repz
ret
mov
cmp
xor
pop
add
and
gs
sub
clc
dec
popf
das
mov
inc
iret
mov
cmp
je
adc
addb
inc
cmc
arpl
and
loope
inc
cli
out
fisttps
sub
jne
mov
mov
jae
add
jnp
ret
mov
or
call
cmovl
mov
loop
aad
jmp
vpaddsb
bound
mov
clc
out
jp
stos
mov
pushl
mov
inc
std
or
mov
loop
push
sub
push
mov
jle
push
cmp
xchg
fildl
pop
aaa
mov
push
fdivs
iret
cmp
repnz
jbe
sarl
and
call
aaa
int3
in
pop
call
add
adc
les
jb
scas
push
or
fidivrs
xlat
sub
sahf
lahf
and
jb
cs
jb
lcall
jns
push
cmp
pop
pop
sbb
ds
push
sbb
aaa
sub
adc
cmp
and
iret
mov
cmpsb
mov
daa
ss
aad
push
in
jo
add
or
loop
adc
scas
jp
ret
ds
sub
xchg
sti
daa
xor
sub
rorl
stos
mov
jno
iret
xor
ret
mov
push
mov
add
movsl
movsb
cmp
cmp
sbbb
sbb
stos
pop
cld
mov
mov
out
out
stos
pop
xor
cs
incl
or
fs
out
rorl
cmp
setno
fdiv
mov
inc
or
or
inc
cmp
cwtl
mov
icebp
xor
or
and
aaa
cmp
out
pop
leave
ret
cmp
nop
sarl
cld
popa
int3
sti
and
mov
inc
in
aas
mov
inc
xchg
jno
or
in
lret
mov
shlb
jp
in
outsl
jecxz
bound
sub
test
adc
arpl
xchg
cmp
adc
xor
test
lgs
test
add
arpl
pop
imul
lahf
adc
int
test
inc
data16
mov
js
pop
insb
sti
inc
dec
jmp
cmp
sbb
dec
pushl
and
lea
or
scas
cmpsl
lock
mov
andl
cmpsl
fmull
es
jno
test
mov
jno
or
fildll
arpl
call
cltd
add
int3
in
xlat
lea
sahf
and
pop
out
out
imul
rorb
xchg
mov
fists
dec
mov
or
loopne
movsl
adc
mov
es
cmp
pusha
cmp
stos
mov
mov
jl
or
hlt
fcompl
in
outsl
out
xor
push
loope
jae
addr16
and
data16
jg
test
adc
inc
stos
pop
fildl
into
and
in
push
mov
ss
je
loope
xchg
cmp
dec
fnstenv
push
mov
cli
cld
xlat
dec
xor
inc
or
sub
ffree
mov
ret
dec
inc
or
fucomip
fsubrs
mov
jg
xor
ss
mov
adcl
scas
dec
and
mov
dec
xchg
test
cmp
add
or
xchg
push
sbb
xor
lahf
pop
fisttps
sbb
sbb
pop
mov
jns
imul
sbb
hlt
cmpsl
and
test
xor
mov
ja
mov
adc
mov
sbb
pop
adc
and
pop
and
insl
mov
and
je
cmpsb
aad
ja
jl
push
cmp
or
sbb
mov
test
sbb
dec
lret
lret
sarb
clc
cmpl
fisubrs
inc
imul
cmpsb
sbb
sahf
cmp
xchg
pop
stc
lods
sbb
dec
call
push
pop
test
icebp
ret
xor
fcmovnb
add
push
mov
out
mov
loopne
cmp
fnstenv
stos
js
add
jnp
clc
test
ljmp
insl
and
xchg
outsb
jb
lret
ljmp
outsl
xadd
or
xchg
adc
xor
and
lods
adc
xor
mov
mov
xor
rclb
loopne
insb
jge
loop
sub
adc
decb
cmc
fadds
gs
out
mov
pop
outsb
xor
movsl
lods
sbb
jp
and
imul
daa
jp
fs
cmp
jge
test
outsl
sbb
lret
push
in
imul
in
xor
push
jno
pop
jno
rorl
in
xchg
sub
xor
cmpsb
sub
mov
jae
mov
mov
adc
filds
dec
es
sub
icebp
mov
adc
add
xchg
sbb
sub
das
adc
mov
insl
dec
jl
xchg
jecxz
stos
hlt
fmull
dec
sbbb
int3
pop
jno
fwait
rclb
and
loopne
loope
jmp
lock
mov
fnstcw
or
repz
push
insl
xchg
ror
popf
fst
outsb
stc
outsb
jle
mov
adc
pop
inc
cwtl
sbb
enter
mov
les
or
out
cmpl
adc
sbb
jl
dec
ljmp
adc
lods
inc
pop
jnp
je
mov
test
cwtl
jne
sbb
fcomps
cmpsb
int3
popf
cmp
mov
fcmovne
gs
jge
mov
test
xchg
outsl
jne
mov
jno
rorb
das
or
cmp
mov
js
pop
ret
cltd
int
stos
sahf
aad
cmp
mov
ljmp
aad
jcxz
movsb
out
shll
hlt
xchg
jne
xchg
imul
inc
sahf
stc
mov
fmull
sti
movsb
mov
rcrb
in
adc
or
cli
test
in
push
test
leave
ds
leave
lret
or
cmpsl
fisttps
add
cli
ret
into
js
jecxz
adc
into
das
mov
shl
or
das
and
lds
cwtl
das
jmp
test
pop
adc
cwtl
mov
std
jg
dec
mov
pop
xchg
add
or
dec
cmp
xchg
gs
sub
popf
test
imulb
sbb
jae
push
in
sarl
sbb
loope
push
and
mov
lods
notl
lock
sti
or
inc
mov
and
fcompp
xchg
jp
lods
and
jmp
out
cmp
mov
or
mov
out
push
out
adc
mov
ljmp
mov
test
xchg
jl
or
pop
addr16
and
push
dec
cmp
push
pop
pop
add
xchg
add
xchg
add
sub
cmp
cmp
dec
or
addb
aas
cmc
lea
das
mov
sub
jnp
into
jnp
xchg
lock
popf
jae
leave
dec
inc
in
out
aam
jl
pop
xor
mov
jnp
je
jb
pop
cmp
xlat
rcrl
loop
clc
mov
stos
mov
jne
sub
into
call
push
cmpl
or
and
mov
add
jno
in
inc
shrl
sbb
stos
cmp
dec
pop
repz
flds
pop
push
mov
and
mov
sbb
fistl
sarl
jns
jmp
das
cmp
addl
xchg
xchg
clc
aad
nop
xor
imul
std
aam
fnsave
jo
pop
fsubp
in
cmp
stos
sub
pop
into
fistl
dec
mov
and
out
xchg
xor
lods
push
outsb
nop
jl
stos
inc
pop
jecxz
das
mov
mov
inc
cli
lret
mov
scas
or
mov
lods
movsl
scas
mov
inc
pushf
push
mov
sbb
adc
dec
ror
lock
inc
andl
add
pop
mov
orb
in
lahf
xchg
ss
mov
pop
xchg
je
mov
or
mov
test
mov
mov
daa
iret
stos
mov
cli
pop
test
xor
sbb
add
test
push
ljmp
adc
push
push
sub
adc
in
mov
jmp
adc
dec
pop
sub
dec
push
adc
jmp
push
pop
or
push
jle
sub
std
cmp
mov
cmp
shl
sti
adc
pop
sub
ret
js
inc
inc
push
pop
inc
inc
stc
xchg
cmp
stos
cmp
mov
jmp
xchg
adc
mov
sub
insl
mov
jae
test
jp
lret
push
outsl
dec
add
ret
jno
xchg
xchg
ficoml
rcrb
mov
adc
scas
lea
mov
cmp
mov
fs
mov
dec
in
rorl
pop
push
cmpsb
test
insl
ret
push
aad
mov
fistpll
sahf
int
adc
fidivl
sbb
xor
cmp
ljmp
cli
xchg
lret
fildl
dec
idiv
lret
dec
xchg
sub
add
les
adc
cmpsb
xchg
mov
repz
bound
inc
sub
je
iret
xchg
cmpsb
xor
inc
xor
mov
scas
or
inc
pop
mov
shrl
out
sbb
add
rorl
test
push
sub
insb
or
mov
mov
push
push
ds
xlat
ret
sahf
sbbb
ret
cwtl
call
test
push
pop
daa
ljmp
adc
push
stos
fcompl
dec
cmpsl
clc
into
mov
insl
scas
add
sti
adc
andl
mov
lret
push
add
icebp
sbb
cmp
dec
pop
sub
and
inc
outsw
push
aad
xchg
cmp
xchg
mov
pop
outsl
lcall
pop
add
sub
adc
roll
rorb
push
add
sti
mov
cmp
jp
jge
stos
mov
sbb
push
xchg
push
fwait
iret
fbld
aam
add
adc
addr16
and
or
jno
cltd
stos
mov
roll
aas
cmpsb
push
add
sub
fwait
jge
push
negl
jbe
and
data16
push
js
gs
mov
and
dec
cmp
xor
popa
cld
or
dec
jo
mov
sahf
into
cmp
mov
out
push
adc
shlb
cwtl
mov
arpl
int
leave
mov
rcll
popa
push
ret
clc
fcomps
pop
pusha
shl
popf
jno
mov
cmp
cld
shll
adc
pop
rolb
jnp
dec
cmc
js
add
and
xchg
pop
mov
loop,pn
enter
rorb
mov
fcmovb
fs
mov
fwait
push
or
lea
inc
andb
lret
sarl
pop
sbb
cltd
popl
push
sub
arpl
mov
and
mov
mov
pop
jg
movsb
mov
out
sub
xchg
test
int3
stos
mov
ret
gs
insb
in
clc
jo
mov
pop
das
push
and
jb
add
jbe
dec
mov
idivb
and
call
xchg
in
pop
jmp
adcb
jne
mov
or
mov
mov
cmp
mov
mov
inc
sbb
cmp
andb
leave
jno
pop
rcr
loop
or
sbb
call
xor
movsl
sub
arpl
xor
aaa
ss
pop
xor
xchg
dec
mov
sbb
cld
outsb
ror
fdivl
loopne
pushf
push
lds
jp
dec
mull
int3
pusha
push
es
dec
scas
jl
fs
adc
jecxz
xor
cmc
sbb
sti
out
scas
mov
or
and
rep
in
sub
je
sub
mov
sub
imul
fstl
adc
mov
jns
stos
insb
xchg
add
cli
mov
ss
aas
dec
inc
adc
or
lret
movsb
or
cli
pop
adc
jne
fistps
mov
ficoml
andl
xor
push
lods
scas
adc
addb
xor
lds
ss
mov
aad
das
dec
add
decl
mov
adc
pop
test
push
cmpsb
in
xchg
pop
icebp
data16
and
sub
or
pop
std
jecxz
lret
pop
adc
lods
push
mov
lea
sbb
adc
mov
out
aad
cld
sbb
ret
jle
rolb
push
dec
fdiv
mov
ljmp
push
mov
data16
jno
ds
aam
mov
inc
inc
dec
pushl
xlat
add
std
stos
inc
mov
pop
lods
jg
leave
cwtl
adc
pop
push
push
xchg
repz
and
cwtl
inc
rorb
adc
cmp
aad
sub
cmpsb
add
fstl
lret
jae
leave
xor
loop
fxch
push
leave
mov
movsb
pop
xor
pop
pop
pop
mov
int
mov
xor
xor
jle
loop
inc
and
gs
movsb
int
jmp
insl
pop
test
aam
push
push
jbe
pushf
enter
add
push
or
mov
cmc
pusha
add
adc
mov
ss
out
lea
lret
dec
rcr
js
cmp
outsl
rcll
repnz
mov
xor
sub
movsl
sbb
ss
in
cwtl
out
jle
test
stos
mov
data16
xchg
xor
xchg
adc
mov
sbb
pop
mov
cmc
push
cltd
jb
notb
js
mov
jle
inc
cli
loope
sbb
add
in
and
outsl
dec
sti
adc
sar
push
inc
inc
test
fnstenv
inc
xchg
lret
jb
fcmovnu
loope,pt
pusha
dec
ds
lret
push
jle
call
insb
enter
push
sbb
pop
dec
imul
out
sahf
jnp
dec
out
rcrl
iret
push
subps
mov
cmp
pop
inc
dec
cmp
lds
les
jb
and
mov
rcrl
rorb
dec
rcrb
rol
fs
xchg
jmp
xlat
cmp
roll
pusha
push
xor
jmp
std
xor
jnp
add
jae
adc
xchg
xor
mov
iret
aam
inc
lds
inc
adc
loopne
mov
mov
je
pop
lods
mov
dec
shll
cs
jp
dec
fwait
mull
push
and
xor
aad
jge
fldenv
push
imul
pop
cmp
dec
mov
or
or
mov
mov
loope
into
popa
mov
hlt
xor
lock
sbbl
cmpsl
jmp
mov
lea
mov
jg
int
jmp
loope
jo
mov
lret
mov
mov
ljmp
js
dec
call
mov
ret
push
movsl
sbb
mov
loop
and
sub
dec
mov
shrb
int3
cli
lods
or
cmp
jl
jg
jecxz
dec
mov
xchg
rorl
or
subb
test
stc
ljmp
push
js
aad
cmp
xchg
add
repz
jnp
test
test
mov
in
int3
arpl
mov
xor
into
sub
or
mov
sbb
cmp
scas
mov
pushf
mov
mov
or
sti
stos
xchg
icebp
inc
mov
inc
add
mov
add
loope
fnclex
inc
push
dec
fwait
paddsb
fstpl
add
int
sbb
icebp
mov
mov
xchg
dec
pushf
arpl
roll
xchg
push
mov
std
sub
imul
or
ret
fldenv
lret
clc
push
out
jnp
hlt
mov
sub
fwait
ljmp
hlt
ss
aam
sbb
mov
ljmp
je
loope
or
ljmp
neg
cmp
jno
fucom
adc
and
cmpsl
inc
mov
mov
lods
bsr
out
inc
or
fcompl
sbb
and
arpl
fcomip
aas
cmp
test
pop
mov
push
sub
in
or
es
int
mov
fistpll
inc
add
xchg
sub
clc
insb
inc
sub
in
icebp
or
xchg
sub
scas
adc
push
or
orb
adc
nop
and
fwait
aaa
and
jnp
xor
push
mov
push
popa
dec
ja
cmp
xor
aas
fnsave
rcrl
push
and
inc
push
movl
mov
adc
insb
sub
jmp
sarl
xchg
out
popa
mov
rclb
in
lahf
dec
inc
mov
cli
ljmp
iret
repnz
xchg
sub
call
and
int
jl
adc
scas
fwait
inc
cmp
aad
pop
enter
mov
ljmp
test
ja
mov
or
stos
xchg
xor
push
subb
cmp
loopne
mov
arpl
push
cmp
aam
xchg
xchg
insb
imul
test
pop
mov
and
xchg
adc
xor
out
ja
pop
gs
jl
jo
dec
test
stc
xor
push
test
pop
push
mov
mov
subb
jnp
repz
das
inc
push
in
lods
jle
ret
cli
std
pop
filds
mov
xchg
imul
dec
xor
je
push
pushf
sahf
es
imul
adc
dec
ljmp
popf
cltd
xor
pop
ds
insl
sbb
shl
stc
popf
pushf
push
cmp
rorb
pop
idivl
js
cli
iret
outsl
cmpsb
lods
inc
xchg
pop
scas
xchg
pop
jp
mov
sbb
scas
cmp
test
push
and
lcall
add
fisttpl
movsl
out
mov
jg
stos
inc
aam
mov
enter
les
adc
lock
dec
push
insb
movsb
das
ret
inc
mov
push
push
lret
sub
cmc
sbb
push
push
adc
fnsave
mov
jge
fucomi
jbe
movsb
sbb
inc
cmc
sub
cmp
popa
jle
push
repnz
jle
dec
jno
mov
call
and
jge
jecxz
sbb
fmul
mov
mov
cmpsb
add
inc
call
mov
daa
push
lea
push
add
jge
cltd
cltd
and
mov
mov
pop
xlat
ljmp
add
lods
mov
out
out
mov
jecxz
or
pop
cmp
into
scas
mov
lea
int
int
fs
push
enter
and
mov
xchg
sahf
lcall
sti
xchg
adc
in
inc
test
into
sbb
loop
sti
test
lods
inc
jbe
jo
jg
addr16
fnsave
clc
ret
xor
dec
pop
push
pop
pusha
inc
test
sbb
lods
out
cmp
into
xor
sub
mov
jecxz
stos
ljmp
imul
xchg
es
mov
in
adc
jle
jge
pusha
in
aaa
adc
js
fcoms
popa
pusha
cmp
loope
js
lcall
shlb
fcomps
imul
faddp
loopne
ret
cmpsb
sub
test
mov
add
push
aad
inc
fsubrl
lods
test
sbb
cmp
lahf
loop
lcall
pop
mov
sub
mov
mov
data16
and
leave
or
dec
sahf
ss
cmp
mov
add
sub
fstps
lret
inc
jmp
call
sub
ds
or
lds
mov
xor
dec
lcall
jbe
pop
stc
push
mov
hlt
jge
repz
out
das
pop
ja
ss
sbb
push
cld
or
xchg
sarb
enter
add
leave
jl
loop
outsl
cmp
mov
hlt
or
pop
bound
push
and
add
into
aad
scas
adc
lock
dec
mov
js
fwait
lret
test
repz
dec
pusha
mov
cmpsb
mov
jp
pop
cwtl
push
push
or
int3
popf
call
xor
or
or
in
xchg
sub
jo
or
pop
enter
rcrb
fsubp
inc
push
lods
in
sti
call
mov
outsb
negl
mov
popf
sbb
aad
or
inc
adc
outsl
jne
stos
dec
pop
incl
sub
mov
xchg
sbb
fs
loop
repnz
jg
fsts
sub
mov
push
cli
daa
push
push
cld
dec
push
jge
and
or
xchg
inc
push
ja
jns
in
mov
jg
je
out
sbb
jno
test
add
add
sbb
pop
push
ljmp
pop
ret
cmp
jb
cmc
mov
lret
data16
xchg
pop
xchg
jo
jne
xchg
sub
jno
pop
adc
pop
pop
test
xor
addb
mov
sbb
inc
and
jmp
and
insb
pop
or
sbb
cmp
sbb
add
testl
jbe
lcall
movsb
cmc
xchg
inc
mov
push
jno
rcrb
loope
mov
fwait
shll
push
or
gs
jb
fildll
pushf
push
mov
jo
aad
je
xchg
cwtd
inc
mov
stc
push
and
int
xor
xor
out
rorb
dec
orl
sbb
and
bnd
mov
xchg
jge
cmp
add
xchg
mov
sbb
adc
xor
scas
inc
inc
enter
push
out
pop
jge
jb
das
xchg
jbe
jge
jno
ret
sbb
cmp
imul
xchg
mov
rolb
aad
adcb
into
xor
jg
add
xchg
xor
into
mov
pop
lods
jns
push
push
clc
cmp
add
or
cmpsl
hlt
inc
lds
xchg
ret
cmp
mov
mov
dec
aam
jp
cmp
test
inc
and
xor
fstp
stos
jns
mov
jnp
add
ret
and
mov
test
dec
shl
cmc
sub
ds
rcrb
jge
inc
rcl
enter
push
add
or
adc
in
repnz
lcall
jg
sarl
fdiv
or
lock
repnz
xor
xchg
in
sbb
mov
ljmp
push
and
test
in
imul
imul
sbb
mov
sbb
cltd
dec
mov
dec
jo
and
push
inc
mov
repnz
mov
sti
pop
pop
push
inc
lcall
and
icebp
inc
ffree
mulb
jl
fmul
xor
inc
repz
xlat
test
cmp
cmpsb
mov
jp
jb
adc
mov
scas
pop
ret
pop
inc
fdivrl
push
adc
dec
pop
xor
lahf
push
movsb
loop
mov
lock
bound
jno
aas
subl
test
and
int3
fsubl
push
jo
insl
xchg
hlt
shll
js
std
imul
in
pop
or
jle
add
or
pop
out
lea
arpl
out
sbb
stos
or
pop
fcoms
es
stc
xchg
enter
cmp
sub
cmp
mov
fstl
in
test
lods
xor
push
insl
js
das
mov
scas
sti
dec
pop
mov
dec
icebp
rcll
sub
push
xchg
sbb
cmpb
sahf
stos
bnd
mov
jmp
out
pop
lock
pop
inc
cmp
sbb
push
leave
loopne
xlat
sbb
sub
out
jb
hlt
icebp
mov
movsb
fs
lods
push
imul
out
repnz
test
loope
sub
lea
mov
iret
push
xchg
stos
dec
cs
je
rcrl
ss
jae
mov
loop
jp
lcall
inc
in
icebp
movsb
gs
sbb
mov
push
popa
insb
xchg
aas
je
mov
mov
dec
jno
ds
ret
lods
xchg
hlt
push
sbb
pop
cmp
push
enter
out
push
idivb
or
dec
hlt
nop
mov
lds
add
imul
pop
and
clc
sti
dec
mov
lret
popf
xchg
fstl
es
out
jo
ret
add
and
insb
decl
faddl
mov
das
and
jo
pushf
sub
gs
pop
jle
add
pop
mov
mov
cld
lods
jb
push
push
lret
and
sub
add
sbb
jmp
inc
lds
outsl
dec
scas
or
iret
xchg
jbe
movb
int
out
add
sbb
mov
jno
fs
jecxz
cmp
jecxz
sbbb
gs
aas
std
or
es
add
repz
jl
or
loopne
std
push
movsl
or
out
mov
pop
mov
add
jg
test
leave
pop
jne
or
xchg
inc
xchg
std
pop
cmpb
imul
das
mov
lcall
outsb
gs
das
fisttpl
xor
andl
mov
das
sub
adc
mov
lds
js
es
test
inc
lret
insb
ds
aas
ljmp
fwait
cmc
lock
adc
sbb
sarl
mov
pop
repz
shlb
dec
inc
addr16
test
jno
leave
xor
test
pop
fs
out
cmpsb
dec
add
movsl
andl
pop
inc
out
mov
incl
test
add
mov
popa
or
or
cmp
xchg
mov
stc
data16
pop
mov
aad
and
cld
ret
jge
push
sub
loopne
clc
out
scas
dec
pop
in
aam
push
dec
test
mov
pop
xor
nop
pusha
xor
add
pop
cmp
push
mov
mov
es
pop
lock
sub
call
arpl
fnstcw
int
rolb
inc
sbb
push
push
and
icebp
testb
mov
adc
fisubrs
mov
push
shr
xchg
adc
ret
aaa
and
imul
xor
xchg
adc
fcomi
out
les
jp
leave
and
push
in
mov
ds
fistpll
mov
nop
clc
cmp
aad
call
sbb
leave
or
cld
dec
sbb
call
repz
pop
inc
add
out
mov
push
cs
insl
test
add
xchg
xor
shll
or
lret
sahf
lock
fadd
nop
je
arpl
ja
idivb
insl
scas
pop
inc
mov
iret
shll
cmp
addr16
pop
cwtl
aaa
xor
cli
test
xchg
arpl
cmpsb
jge
repz
add
lods
adc
inc
mov
xor
xchg
iret
push
mov
mov
hlt
jae
ds
jge
lods
repnz
add
stc
jno
push
jmp
adc
cmp
push
rclb
jg
jne
dec
test
cmp
push
lods
mov
mov
jge
mov
jnp
push
lcall
pop
sbb
add
rorb
out
fnstsw
cltd
cmc
sub
push
fldl
fisttpl
andb
jle
cmp
sbb
add
inc
aas
or
lods
mov
outsb
in
into
jne
jmp
jb
arpl
adc
lea
into
les
push
push
push
and
jo
clc
jns
pop
dec
imull
adc
sahf
adc
sbb
es
mov
or
pop
jmp
push
in
outsl
jbe
mov
stc
sub
or
movb
cmp
ss
inc
sbb
je
xchg
sub
adc
or
cmc
mov
mov
mul
inc
mov
lahf
test
loope
dec
aas
or
inc
je
ja
incl
and
in
xor
mov
push
dec
inc
lock
pop
cmp
sub
mov
es
push
test
sbb
stos
and
xchg
jecxz
test
scas
pop
sub
jno
clc
dec
jne
out
orl
hlt
test
xor
data16
call
xchg
xlat
cmp
dec
adc
int
mov
pop
and
sbb
xor
xchg
out
sub
scas
sbb
xchg
pop
iret
xchg
mov
and
daa
cmp
mov
mov
xchg
shlb
mov
pop
xor
fwait
pop
cmp
mov
out
cmpsb
mov
mov
js
pop
xchg
fisubl
xor
add
inc
dec
inc
aaa
pop
inc
add
imul
fimuls
jl
mov
inc
scas
sar
movsb
cli
pop
hlt
orb
je
scas
lock
les
clc
pushf
shlb
xchg
pop
out
inc
jno
outsl
sar
stos
aam
adc
shr
popa
insl
jmp
out
fidivrs
adc
mov
movsb
inc
fsubr
clc
sub
or
pop
inc
jbe
or
push
fnclex
push
inc
pusha
sbb
mov
jecxz
push
push
pop
insl
or
leave
out
lea
or
cltd
dec
inc
add
pushf
imul
jne
lahf
call
sub
pop
mov
nop
cs
shrb
cmp
adc
ja
mov
cmp
pop
sbb
les
dec
in
or
bound
and
movsb
push
clc
daa
push
add
mov
aam
sub
gs
loope
xchg
push
movsb
pusha
xor
in
xor
stos
xchg
push
jns
add
xchg
pop
mov
dec
adc
mov
ss
push
hlt
lret
ss
pop
fisubl
arpl
out
mov
xor
mov
add
xchg
and
sbb
dec
pop
ss
cmp
enter
or
test
inc
mov
in
lock
aas
int
xchg
mov
push
test
jae
fnstenv
mov
or
cmp
shrl
lcall
fldcw
pushf
push
sub
cmp
lods
jge
lods
rcrl
lcall
in
aas
rclb
sbb
mov
adc
fcoms
or
outsl
mov
cmpsl
dec
xor
sti
pop
add
inc
je
add
test
cmc
test
adc
lret
into
dec
cmpsb
mov
repnz
jno
fadds
gs
cmp
xchg
cmpsl
xor
je
inc
pop
push
inc
push
mov
xchg
test
stc
dec
xchg
pop
in
jb
ret
and
daa
xchg
push
fisubs
pop
push
push
out
test
xor
adc
cmp
or
or
pop
jl
jb
inc
popf
inc
jo
movsb
int
sbb
sbb
xor
fbstp
cmp
and
sub
xchg
test
roll
inc
fstl
or
xor
cwtl
subl
mov
mov
push
pop
mov
fidivrl
movsl
out
loop
sub
cmpsl
fnsave
out
inc
stc
clc
pop
repz
sbb
fists
sub
lcall
sbb
sub
add
aam
cmpsl
imul
lcall
mov
and
push
mov
sbb
cmp
addl
test
ret
mov
fwait
xchg
mov
daa
and
fwait
dec
int3
dec
fisttpl
ljmp
movsb
mov
xor
jp
add
mov
xchg
sti
or
pop
xor
add
inc
sub
and
bound
mov
inc
movsb
aad
aaa
fstpt
cmp
iret
xlat
sbb
jp
daa
jbe
pop
mov
insb
dec
loopne
mov
popa
imul
push
cmp
pop
inc
adc
cli
jae
loop
mov
clc
out
or
jno
and
mov
inc
cmc
popa
sbb
pop
repz
outsb
push
fdivp
hlt
lods
cli
fmuls
and
les
inc
mov
ret
pusha
push
stc
sub
mov
nop
jns
and
pop
hlt
adcb
dec
call
ljmp
xchg
mov
xchg
cltd
adc
stos
mov
mov
mov
dec
xchg
scas
mov
data16
add
lcall
mov
dec
leave
fcmovnb
mov
loop
clc
sub
inc
aam
xor
fnstcw
in
test
add
ret
dec
sub
pop
cmc
sub
jecxz
xchg
je
mov
ret
mov
cmp
inc
fs
fstpl
mov
jnp
fcmovu
mov
shlb
lods
pop
data16
sbb
cli
movsl
cmpsl
lock
or
sbb
rclb
aaa
xchg
add
popa
adcl
xchg
pop
cmp
lcall
push
pop
push
xor
fidivl
aaa
fisubrl
push
movsl
or
pop
cmp
push
pop
movsl
push
add
xchg
mov
int
lods
mov
stc
roll
out
sahf
jnp
pop
popa
sub
jmp
mov
stc
adc
cmp
hlt
mov
push
push
or
and
bnd
and
dec
shlb
lods
push
mov
inc
jae
inc
popl
test
hlt
les
ss
fwait
mov
mov
lahf
dec
xchg
sbb
mov
pop
mov
xlat
cmc
or
addb
adc
xchg
xor
add
pop
jg
lods
stos
outsl
imul
int
leave
jmp
jecxz
leave
imul
fildll
test
dec
cmc
or
pop
and
xor
enter
scas
inc
xor
xor
ljmp
cwtl
call
pop
jnp
cmp
fadds
out
stos
jne
and
adc
addr16
shlb
scas
or
stc
test
mov
cmc
or
fldl
cwtl
sti
dec
addr16
mov
xchg
and
cmp
add
xor
jp
fsts
sbb
lret
mov
inc
jae
cmc
jo
out
and
xor
push
mov
pop
pusha
cmc
dec
xchg
pusha
and
hlt
pop
cs
fadds
push
repz
pop
pop
rorl
sub
cld
push
cli
xchg
and
mov
mov
ja
dec
or
adc
mov
incl
dec
outsl
lods
jnp
sub
les
sbb
ds
mov
jl
sbb
add
xchg
lods
mov
sbb
mov
push
stos
fcomps
mov
rcl
addb
insl
cmp
pop
ret
pop
rolb
mov
ja
js
mov
les
xor
in
push
leave
sub
push
jl
dec
xor
aaa
testb
jb
dec
jle
call
sbb
add
push
out
ss
loopne
out
mov
loopne
aad
popa
sbb
push
and
xchg
mov
test
jl
xlat
push
sbb
and
sti
xor
mov
fs
or
pop
fnstcw
addr16
adc
je
out
out
adc
or
sbb
fimull
push
jge
insb
sahf
pop
hlt
push
data16
movsb
cld
pop
int3
or
test
or
add
push
cmp
sub
mov
sbb
lcall
outsb
mov
fiadds
ljmp
inc
stos
push
jg
js
sub
mov
cltd
adc
mov
and
leave
push
jo
stc
mov
lret
xor
into
cmc
imul
inc
loope
jb
repnz
ss
mov
scas
incb
mov
push
imul
sub
sub
rol
int
mov
jnp
sub
pop
in
sbb
xchg
aas
cld
add
xchg
sub
test
loopne
lods
in
sbb
mov
push
ret
loop
in
adc
xor
jo
clc
outsb
sahf
das
movsb
test
dec
loop
and
int3
xchg
scas
mov
add
push
pusha
push
inc
popa
xchg
jns
mov
xchg
mov
cmp
sub
mulb
movsl
out
cwtl
in
hlt
mov
jb
jmp
outsl
cs
mov
nop
cltd
mov
mov
lret
add
inc
int
andb
pushf
out
ret
sarb
mov
ja
sbb
inc
xchg
in
fdivs
or
or
sbb
pop
ljmp
jle
xor
leave
adc
mov
sbb
adc
mov
pusha
inc
inc
pop
add
push
test
fidivs
imulb
pop
jb
sub
dec
cmp
push
push
mov
loope
mov
mov
xchg
mov
mov
mov
iret
inc
xor
test
pop
xchg
push
jbe
imul
loopne
pop
sub
xchg
std
test
sahf
adc
outsb
loop
jmp
repz
sub
stos
and
mov
jnp
push
fdivs
into
xorl
or
inc
sarb
rcrl
loop
xor
cltd
add
repnz
jbe
movsb
cmp
mov
int
arpl
lock
cltd
cltd
dec
add
add
adc
je
or
and
ljmp
aad
mov
fucom
fistps
adc
ljmp
sahf
outsl
pop
in
jmp
psrlq
mov
and
ss
inc
xor
fimuls
insl
xchg
inc
icebp
xorb
jle
pop
cld
fisubrl
dec
jno
push
iret
mov
xchg
test
and
mov
ljmp
ret
jle
sbbl
test
push
mov
mov
sub
push
cmpsl
aad
dec
push
fsub
push
aas
sti
and
pop
jmp
mov
nop
mov
jb
xchg
add
dec
jns
pop
das
ss
insl
push
in
mov
mov
xchg
and
mov
mov
cmc
mov
push
jo
sbb
mov
push
in
dec
imul
in
mov
jg
fs
mov
sub
sub
dec
cld
adc
fldl
push
push
stc
xchg
mov
stos
in
popa
and
cmp
shll
sbbl
jno
ljmp
scas
les
mov
loop
icebp
sti
popa
xor
push
pop
push
adc
cmp
lret
lcall
cmp
clc
mov
fldcw
push
cmpsb
mov
adc
and
enter
push
int
es
or
mov
shll
scas
clc
push
push
mov
lcall
mov
leave
mov
lcall
scas
sarb
cmpsb
jo
sbb
arpl
test
pop
repz
jo
or
ret
rol
lods
cmp
xor
jns
insl
cli
addb
dec
mov
rcl
arpl
mov
insl
lahf
mov
mov
movsb
gs
add
cmp
cltd
add
dec
sbbb
sbb
addb
xor
mov
mov
addr16
pop
jmp
xchg
pop
fildll
sbb
pushf
sbb
outsb
mov
pop
lods
pushf
xchg
repz
xchg
call
in
cli
or
insl
jecxz
or
outsl
in
cmp
fimull
dec
sbb
insb
loope
cmc
adc
and
xchg
insb
iret
das
xor
fwait
dec
jle
ss
mov
add
mov
inc
pushf
pop
inc
sub
sub
add
lret
jae
int3
in
outsl
push
pop
andnps
pop
popf
adc
dec
mov
adc
insb
and
jne
mov
sarl
or
jno
insb
pop
testb
pop
xchg
aaa
jg
movsb
mov
lds
jno
loope
push
test
dec
jp
rcrl
push
xor
mov
pop
and
jle
movsb
loope
pop
arpl
cmpsl
xorl
fldcw
test
jge
inc
sbb
pop
in
pop
test
lcall
or
stc
sub
clc
add
lcall
gs
pop
fs
out
sub
roll
push
ror
mov
pop
stos
jbe
not
sub
add
mov
jbe
incl
das
push
es
enter
pop
pop
scas
adc
push
mov
xchg
lea
fistpl
pop
jns
ror
outsb
add
dec
icebp
xchg
mov
jmp
imul
test
scas
ljmp
js
sbb
xchg
dec
aaa
cmp
jo
sbb
popa
cmp
jns
in
movsbl
insl
lahf
dec
notl
mov
jbe
jecxz
es
add
sti
xlat
pop
sbb
movsb
int3
sub
add
inc
and
dec
dec
sub
imul
push
inc
pop
std
cmp
and
mov
pop
cmp
push
xor
movl
andb
adc
iret
rorb
icebp
dec
push
sub
and
push
loope
popf
dec
jae
cs
cmp
add
xchg
cmp
and
addl
dec
push
adc
sub
push
ret
xor
push
fstpl
lods
das
bound
rorl
xchg
movsl
pop
in
lcall
or
fwait
push
jl
sbbb
fs
rcrl
shlb
adc
int
ds
push
sahf
cmpsl
sub
jns
fwait
sub
push
cmc
es
mov
and
xor
ret
dec
mov
into
fsubs
enter
or
fisttpll
jl
xor
fsubrl
mov
pop
xor
add
repnz
inc
pop
pushf
push
sbbl
pop
dec
loop
cld
push
inc
jp
popf
add
mov
add
sti
scas
mov
xchg
xchg
filds
mov
mov
xchg
sub
jae
ret
popf
pop
and
push
jle
xchg
mov
pusha
sbb
sub
sub
or
pop
dec
pop
dec
sub
call
ret
daa
sub
pop
mov
add
popf
lods
cmpsl
mov
loope
shlb
dec
mov
jl
pop
test
fcmovne
enter
push
in
cmpsl
pusha
push
mov
aaa
push
call
int3
bound
clc
mov
aas
addr16
aaa
mov
xchg
sbb
mov
je
or
or
cmp
out
test
xor
iret
sbb
fxch
dec
xor
mov
mov
ds
jmp
nop
inc
push
add
cld
les
cmp
pop
pop
insb
aas
mov
stc
push
sahf
jge
and
sub
andb
pop
lcall
movsb
or
or
jns
and
sub
call
pop
mov
ret
sub
or
mov
jne
fiaddl
mov
aaa
out
fs
out
inc
sub
inc
decb
dec
gs
mov
jle
add
mov
test
insl
xchg
push
inc
fucom
fisubrl
js
xlat
mov
std
sub
out
or
add
dec
enter
pop
jecxz
out
enter
mov
bound
imul
lahf
lahf
cmp
hlt
xchg
xchg
sub
addr16
aad
mov
push
movsl
sub
and
inc
cbtw
mov
mov
jmp
sub
adc
sub
xchg
popf
lret
sub
dec
test
mov
pop
push
in
mov
sarl
sbb
rcl
int3
test
lods
xchg
inc
mov
adc
out
addps
jge
xor
inc
negb
cmc
sahf
loop
jecxz
push
mov
enter
cmp
mov
rolb
cmp
lock
into
pop
xor
or
pop
clc
pop
jp
mov
outsb
das
ret
push
stc
xor
cmp
dec
and
clc
repnz
sbb
mov
sub
lods
push
je
xchg
push
cmpsb
inc
lret
or
jno
mov
pop
cmp
sti
or
mov
fsubr
out
mov
adc
mov
dec
jne
or
outsl
dec
imul
jp
jg
lret
aam
sbb
mov
pop
mov
mov
xor
lret
push
mov
arpl
aam
sbb
adc
out
cwtl
gs
stos
into
sarb
dec
mov
loop
ret
sbb
jns
xchg
sub
inc
add
loop
into
xchg
mov
jne
imul
pop
mov
push
fs
dec
sub
pushf
movsb
decb
sub
mov
or
xchg
clc
into
cwtl
insb
adc
mov
adc
int
aad
push
and
ja
mov
leave
fisttps
lods
ljmp
lret
and
mov
xor
jns
mov
loopne
inc
test
inc
jnp
xchg
mov
int
adc
js
pop
shll
sub
imul
xchg
mov
sbb
inc
jb
xchg
inc
dec
into
fcomps
sbb
cli
lret
out
les
xchg
sti
dec
divb
xor
xlat
and
jne
and
roll
jmp
adc
jno
insb
fmul
mov
pop
psubusb
fidivrs
lods
in
cmp
lea
cwtl
ret
sbb
pop
mov
dec
gs
add
mov
cwtl
imull
mov
mov
push
push
cmc
adc
sbb
add
ret
xchg
cmp
xor
jnp
mov
fnsave
adc
stc
dec
imul
pop
mov
push
jp
ss
push
fsubr
or
dec
adc
dec
jle
cmpl
call
and
ds
shrl
fisttpll
repz
out
testb
insb
ljmp
ret
icebp
sbb
out
jle
rep
mov
sbb
hlt
or
xchg
jnp
je
mov
xor
or
mov
cmc
dec
cmpsb
mull
stc
or
mov
mov
pop
insb
and
jl
popf
jmp
and
lock
add
aas
jbe
cmc
movsb
push
out
addl
insb
xchg
mov
shlb
lahf
ret
mov
cmpsl
insl
push
out
repz
inc
dec
mov
push
ret
xlat
push
sbb
fxch
je
or
dec
add
inc
test
mov
push
ja
cmp
push
outsb
sbb
dec
inc
cli
add
push
jp
std
xor
sbb
shl
fs
andb
pop
divl
mov
and
mov
xchg
loopne
cmp
lret
push
jo
add
or
dec
ja
mov
mov
and
dec
mov
into
adc
mov
sub
test
sbb
xchg
out
dec
mov
jl
mov
loop
push
lret
xor
mov
push
rcl
or
stos
in
loopne
lods
je
pop
jns
pusha
dec
mov
xor
fbstp
jl
popf
sti
mov
xchg
sbb
daa
mov
inc
bound
mov
ja
push
sub
cmp
jecxz
dec
or
or
pop
test
sahf
push
xor
call
aad
test
das
jae
mov
in
sbb
loopne
mov
movsb
sbb
and
jge
or
push
lea
xor
and
fiaddl
adc
and
andb
ficoml
movsl
repnz
rolb
and
dec
in
cmp
xchg
jg
or
push
ljmp
jns
inc
lahf
pop
mov
sbb
int3
push
enter
jp
mov
push
adc
cmp
add
add
mov
mov
cmpl
sbb
cwtl
imul
stos
adc
jle
inc
push
dec
sbb
ret
test
arpl
add
mov
divl
leave
testl
xor
mov
lock
dec
xchg
movsl
aam
push
pop
fdivl
jl
popa
xchg
mov
ds
add
imul
lock
add
insb
insl
mov
and
out
pop
inc
jp
sarl
mov
xchg
sbb
cmpsl
adc
cmp
xor
mov
test
jmp
fstpt
jne
popa
mov
pop
clc
inc
sub
mov
add
inc
out
mov
es
movsl
jle
popa
repz
add
lock
cmp
flds
jp
aam
xchg
into
cmc
jb
jle
loopne
in
test
or
lahf
inc
push
inc
push
ret
cmovp
cmpsl
stos
in
and
mov
inc
repnz
popa
cmp
jb
addr16
xchg
popa
dec
cld
sbb
sub
mov
xchg
in
aaa
fwait
cltd
frstor
xchg
mov
jge
lret
and
jns
pop
jo
into
das
leave
lret
jnp
mov
mov
push
aas
data16
dec
jae
in
mov
dec
data16
mov
aas
xchg
mov
jge
stos
add
jae
pop
pop
mov
jbe
or
mov
push
fst
mov
movsl
push
scas
cmp
xlat
cmpl
cmp
in
cmpl
push
les
into
outsl
dec
cmp
jo
or
inc
cmpsl
pop
stos
iret
arpl
jo
sbbb
jb
movsl
jbe
imul
fwait
jo
cmpb
fwait
bound
mov
and
fsubrl
dec
sbb
call
call
mov
test
testl
sub
lcall
pop
inc
insl
xchg
sbb
daa
cwtl
sti
push
in
shll
or
add
out
dec
repz
pop
pop
jmp
sub
mov
cmpsl
arpl
jb
mov
cmp
mov
jmp
cmp
mov
cmp
jo
xchg
xchg
xor
repnz
idivb
or
fidivs
mov
xor
cmp
sbb
aas
or
mov
mov
sbbb
sbb
jl
aad
jb
pushf
cmp
mov
cmc
fisttpl
or
sti
pop
cwtl
ds
sahf
lods
mov
leave
cwtl
into
add
ja
push
test
dec
mov
pop
sub
iret
adc
sbb
aas
popa
mov
into
cmp
dec
jb
adc
jns
pop
sub
mov
stos
xchg
loopne
data16
mov
jmp
adcb
inc
mov
dec
jl
mov
scas
enter
stos
movb
xchg
push
rol
cld
int
mov
push
mov
outsb
cmpsl
mov
fwait
xor
cmp
add
lock
test
rorl
xchg
add
sub
jae
test
pop
fidivrl
jb
sbb
and
je
jo
and
mov
mov
psllw
adc
enter
lret
pop
inc
xlat
cmp
xor
dec
sbb
lahf
hlt
pop
mov
mov
mov
loope
cmpsl
cld
int
mov
sbb
fmuls
jbe
xchg
mov
mov
lcall
in
stos
pop
fmul
loopne
dec
adc
in
jp
jl
pop
jnp
mov
mov
arpl
fs
rolb
ret
ja
testl
lcall
insl
stc
cmp
outsb
lock
jl
mulb
mov
enter
inc
pushf
pop
arpl
cs
xchg
cmp
sti
cli
cmp
idiv
movb
adc
sarb
xchg
dec
mov
jge
mov
sbb
adc
adc
addr16
pop
pop
int
pop
push
sub
or
xor
sub
push
or
jmp
sbb
aad
cmp
mov
mov
nop
pop
flds
ljmp
aaa
xor
dec
shrl
jecxz
sbb
sbb
iret
cmp
jae
cmpsl
mov
add
call
jg
sbb
test
dec
dec
mov
jmp
adc
test
and
jne
pushf
pop
jb
jb
sub
lods
push
sbbl
mov
mov
subb
jne
leave
and
dec
icebp
clc
scas
dec
xlat
xor
pop
lret
dec
adc
and
int
pop
xchg
dec
push
pop
cld
rorl
imul
inc
dec
mov
cmpsb
inc
popa
rcrl
fiadds
push
jb
sbb
jl
dec
shl
inc
mov
push
rcr
ret
xor
pop
jae
jp
leave
mov
lahf
in
mov
shl
lret
imul
das
pop
mov
icebp
aam
pop
outsb
shrl
mov
push
in
mov
out
mov
add
movsb
xchg
ficomps
in
lret
mov
cmp
movsb
push
xchg
push
pusha
mov
sbb
sub
xchg
xchg
movsl
adc
adc
andl
sbb
xor
or
shll
push
ljmp
dec
scas
push
pop
gs
test
dec
popl
enter
pop
adc
ss
arpl
mov
xchg
hlt
cmpb
lea
add
repnz
je
scas
xchg
cmc
xor
cmpsl
add
sub
shll
ds
jl
ret
andl
sub
jge
push
xchg
mov
ss
mov
xor
push
mov
shrl
or
jge
mov
mov
jb
rcr
fisubs
lea
pop
jle
push
pop
mov
std
and
leave
test
das
or
jb
sbb
shrb
push
xchg
cwtl
dec
xor
rcrb
mov
mov
lea
pop
cltd
dec
mov
test
jo
ljmp
adc
xchg
cmp
push
sub
jb
jae
xor
icebp
leave
push
dec
mov
xchg
xlat
arpl
sbbb
repz
pushf
mov
jge
in
jecxz
lea
mov
cld
lret
pusha
pop
xor
push
test
and
pop
inc
jb
leave
lods
pop
adc
inc
cmp
fdivrl
nop
dec
mov
in
cmp
jbe
add
pop
aas
pop
pop
fisubrl
add
ja
cmp
xor
faddp
movsb
clc
dec
jg
mov
and
mov
fnstcw
jg
mov
aaa
icebp
insl
pushl
leave
xor
sbb
in
shll
xchg
push
dec
xor
fiaddl
int3
test
jge
sbb
decl
fdivl
xor
aas
fiaddl
rclb
push
xchg
shrl
mov
pop
dec
push
sbb
mov
imul
inc
mov
xchg
mov
jge
repnz
sbb
jae
dec
pop
mov
test
outsb
mov
dec
push
push
adc
dec
in
or
or
cld
popa
pop
test
cmp
add
dec
xchg
test
filds
mov
movsb
sub
lock
out
test
outsb
xchg
sbb
in
andb
lcall
ja
mov
je
push
jge
js
rcr
pop
mov
xchg
push
xchg
push
cmc
inc
jae
push
sahf
pushf
jl
inc
fcoms
scas
xor
sbb
imull
jns
and
sti
xor
jp
xchg
cmp
xor
fwait
sarb
pop
push
push
mov
pop
insb
mov
sarl
rcrb
sub
mov
sub
xor
mov
out
jge
cmp
adc
inc
or
sbb
int3
mov
les
xchg
stos
sub
pop
and
adc
mov
inc
movsl
pop
lcall
sarl
sbb
adc
adcl
out
out
pop
xor
lods
stos
mov
test
mov
pop
dec
or
out
cmp
fs
sbb
notl
out
cmpsb
pop
xor
ss
adc
pop
xor
ret
xor
addl
in
add
and
or
pushf
push
mov
hlt
mov
sub
aaa
cwtl
sbb
scas
jge
dec
xchg
jnp
jle
ss
or
int
adc
mov
jns
push
fcoml
int3
test
mov
rcll
aas
lret
mov
mov
mov
pop
mov
push
fisubl
roll
mov
dec
xchg
std
pop
popf
es
cmpsl
xchg
jmp
jb
enter
push
shlb
test
addr16
push
scas
stc
pop
insb
push
xchg
scas
fcompl
es
outsl
ret
out
loope
das
jmp
cmp
xor
mov
xchg
and
aaa
mov
sub
inc
pop
xor
xchg
imul
shlb
cmpsb
aas
sbb
leave
push
sub
cmpsb
mov
xor
aaa
scas
cmpsl
divl
nop
inc
mov
ror
iret
adc
sub
or
xor
stc
adc
jmp
add
dec
mov
dec
xchg
or
jns
jmp
sbb
mov
ret
ss
aad
popf
inc
jnp
xchg
adc
jns
jp
pop
and
add
jo
mov
and
lahf
ds
cltd
push
popf
aam
adc
sub
pop
xor
or
push
aam
push
mov
xorb
xchg
pop
jecxz
mov
add
jp
xchg
les
cmc
push
sub
das
lahf
imul
fstl
mov
push
arpl
ss
mov
mov
jnp
rclb
std
sbb
int
ljmp
lret
sub
lcall
sbb
dec
adc
push
out
sarl
xor
fdivl
mov
inc
mov
scas
aam
enter
pop
out
fistpll
aam
pusha
ljmp
mov
pop
xchg
test
popa
push
sbb
int3
mov
out
lds
push
fcmovb
xchg
mov
fdivrl
in
dec
and
fwait
dec
outsb
repnz
popa
stos
xchg
and
imul
push
pop
in
inc
in
hlt
jg
jecxz
sub
dec
test
cmpl
mov
repz
pop
movsbl
dec
je
lahf
xchg
mov
pop
mov
out
mov
jg
mov
es
mov
and
mov
adc
jnp
dec
inc
mull
sub
dec
lea
pushf
pop
mov
xchg
mov
cltd
inc
pop
int3
xchg
aaa
test
and
or
or
stos
lods
fstpt
or
enter
aad
mov
add
push
je
insb
fbld
or
sub
icebp
hlt
data16
inc
imul
xchg
mov
or
fidivrs
movsl
cmp
loop
lods
dec
mov
mov
ret
shlb
dec
popl
and
cmp
sub
outsb
aaa
jecxz
gs
xlat
sbb
pop
jno
and
loop
push
jae
jae
jecxz
int
or
fnstcw
dec
sti
cmc
jp
and
in
pusha
je
pop
js
inc
jecxz
aam
fs
paddusb
add
and
and
inc
jae
in
add
cltd
pop
push
aas
lea
adc
outsb
mov
jae
test
lret
mov
and
push
and
and
jl
stc
pop
loop
push
or
push
das
xor
mov
xchg
sbb
adc
xchg
in
pop
pop
stc
fnsave
jo
mov
shlb
jnp
mov
xor
dec
mov
dec
push
jecxz
pop
jae
inc
popa
xor
mov
cmp
pushf
lods
ja
mov
loopne
pop
cmp
mov
mov
cld
stos
pop
push
ja
pop
scas
add
adc
or
test
jge
lea
lock
jae
jge
cmp
aaa
mov
push
fptan
mov
pop
sahf
dec
ror
vorps
sub
or
add
movsb
pushf
insb
pop
mov
sub
aam
rclb
xor
sbb
xchg
jle
jecxz
lret
inc
or
ffree
cwtl
cmp
rorl
data16
mov
call
popa
out
test
jecxz
jle
lcall
rolb
xchg
mov
out
ss
sub
sbb
sub
daa
icebp
ljmp
mov
test
jp
ffree
out
sub
mov
test
fdivl
or
mov
cmp
fdivrs
sbb
mov
dec
lds
jbe
repz
test
lret
lret
dec
or
cmp
out
add
jle
scas
popf
mov
inc
mov
jne
jge
jge
into
xchg
andl
and
inc
mov
pop
pop
mov
push
fisttpll
mov
sbb
push
inc
in
insl
mov
or
sbbb
ljmp
and
mov
mov
and
sbb
pop
aas
mov
jae
xchg
xor
dec
mov
xchg
mov
dec
fwait
cmpsb
sbb
pop
adc
inc
inc
bound
mov
divb
rorl
cmp
sbb
or
int3
xchg
push
and
inc
push
mov
test
push
jae
or
adc
sub
push
test
push
rcrl
adc
cmp
push
or
jge
sub
xor
xchg
les
cmp
ds
dec
test
sbbl
jns
add
jne
pop
gs
lock
push
jmp
movsl
out
pop
les
xchg
inc
xor
jbe
jo
and
sbb
inc
adc
lret
xchg
add
cs
mov
fidivrl
jns
cmc
fcoms
inc
mov
out
dec
pop
js
in
mov
dec
lods
shr
pop
jge
repnz
cmp
xchg
xor
mov
pop
pop
insl
pushf
imul
dec
jecxz
out
mov
shl
lcall
dec
xor
lahf
inc
mov
daa
stos
aam
movsb
and
mov
loope
iret
dec
dec
into
neg
dec
push
jo
or
or
idivl
in
inc
icebp
in
or
ljmp
pop
loop
mov
nop
aas
sbb
pop
sub
cmp
fmul
int3
repnz
xchg
repnz
hlt
mov
jle
mov
and
fmuls
inc
push
inc
mov
cmpsb
mov
jne
pop
and
icebp
xchg
or
xor
mov
movsb
insb
mov
lret
adc
adc
movsb
out
jp
or
mov
cld
repnz
aad
cmc
lret
in
imul
ljmp
rorl
cmp
lods
enter
lret
scas
dec
mov
mov
int3
inc
lcall
stos
xor
movb
test
or
outsl
out
dec
push
cltd
add
loopne
sti
inc
dec
sahf
lea
or
fnstcw
add
rorl
inc
push
sub
mov
pop
shl
push
outsb
cli
jle
adcl
hlt
jl
xchg
js
add
hlt
jle
adc
int3
imulb
in
stos
les
stc
push
xchg
icebp
adc
imul
movsb
xchg
mov
pop
mov
jge
sahf
sbb
pop
iret
pop
and
xor
stos
add
pop
fldl
push
cmpsl
jb
jns
mov
pushf
rol
mov
mov
and
jecxz
cs
and
sbb
and
xchg
jb
and
int
xchg
sahf
pop
cmp
jns
sub
jnp
jmp
xchg
and
mov
lret
mov
sub
adc
js
xchg
add
clc
xor
lcall
mov
dec
aad
loope
dec
or
pop
bound
adcb
and
iret
pop
andl
enter
sti
pusha
push
clc
jnp
enter
xchg
xchg
in
jbe
sbbb
ret
dec
stc
jbe
loopne
movsb
rep
addr16
jns
out
shr
fdivl
inc
mov
xor
add
ds
cs
mov
and
lcall
cmp
mov
mov
cmp
pushf
sbb
movsb
std
fisubs
add
in
fxch
mov
push
sbb
pop
hlt
pop
and
daa
addr16
cmp
js
insb
jmp
leave
mov
je
rcrb
sbb
and
pop
ja
scas
push
xchg
sbb
adc
fwait
lock
xchg
stos
xor
add
and
mov
lret
xor
scas
test
add
mov
ret
hlt
imul
pop
fsub
cli
jno
mov
fcomi
inc
and
int
push
mov
incl
cmp
in
jecxz
jle
push
inc
jg
outsb
daa
cmpsb
cli
or
or
ja
adc
fnstsw
inc
xchg
lcall
subl
lcall
push
jg
pop
push
add
push
push
loop
test
mov
xchg
test
mov
icebp
cli
clc
adc
or
push
testl
movl
or
dec
test
mov
dec
sbb
es
popa
sbbb
in
clc
adc
add
adc
xchg
inc
xlat
xchg
cmp
xlat
xor
dec
adc
dec
adc
ja
in
sbb
sbb
xor
fiaddl
jle
data16
in
mov
lret
shll
push
bound
ret
xchg
add
leave
mov
pop
mov
std
dec
mov
mov
sarb
loop
je
and
imul
cmpsl
and
or
into
add
mov
test
jge
push
notb
cmp
xchg
sti
leave
sub
fwait
lock
mov
push
mov
and
iret
aad
jo
adc
push
testl
mov
or
faddl
jecxz
movsl
out
shl
loope
mov
jo
enter
ret
xor
lods
cltd
in
push
xor
xchg
or
push
and
dec
add
and
add
mov
stos
fs
repz
scas
sbb
adc
add
stos
aad
and
xor
rclb
cs
push
dec
and
cmp
in
divl
mov
test
add
daa
pop
pop
enter
mov
or
mov
das
cmp
sbb
lret
nop
and
bound
cmpsb
jp
test
andb
dec
adc
mov
aad
pop
setb
sub
scas
mov
out
cltd
mov
loopne
lock
jnp
push
jbe
sub
mov
int3
add
test
dec
mov
sub
imul
daa
out
dec
in
js
rorl
das
incb
mov
out
cmp
xchg
cli
and
xor
arpl
pop
xor
mov
push
std
mov
jbe
adc
enter
mov
jmp
pop
imul
addr16
loope
xor
add
aas
enter
frstor
outsb
sub
stos
cltd
adc
mov
sub
int
push
push
addl
scas
das
jnp
cmp
sar
sbb
or
dec
cwtl
test
mov
fwait
insb
adcl
mov
cs
jnp
cmp
mov
push
push
cltd
icebp
push
test
mov
adc
mov
push
jg
clc
jg
jmp
pop
aad
mov
mov
cmp
inc
bound
pusha
sub
out
stc
xor
add
sbb
inc
push
bound
dec
mov
jo
cmp
cmp
rcrl
mov
arpl
in
push
push
leave
outsb
inc
xor
jg
xor
sub
add
dec
add
out
mov
push
mov
les
je
or
lea
aad
roll
test
xchg
push
aaa
mov
leave
sbb
imul
nop
out
addr16
fs
or
push
xor
ds
les
push
in
push
aas
sahf
push
pop
in
push
test
pop
adc
lret
jae
mov
jg
movsb
jns
rol
icebp
jge
lock
data16
dec
inc
jae
repz
push
in
inc
or
pop
adc
jbe
cli
inc
and
pop
mov
bound
leave
out
adc
mov
push
xor
pop
pop
dec
mov
and
jnp
out
mov
repz
push
and
dec
sbb
stos
sub
nop
add
into
fbld
ss
xor
xchg
mov
mov
dec
push
mov
mov
xchg
mov
mov
adc
ret
inc
adc
inc
sub
mov
lods
outsl
movsl
mov
mov
jnp
loopne
adc
jno
xlat
and
xchg
jmp
dec
fstps
xor
dec
or
hlt
scas
cmp
mov
adc
mov
lods
inc
push
in
mov
insb
movsb
xchg
inc
fimull
dec
je
in
jmp
scas
outsl
pop
pop
out
es
ja
mov
fmull
push
mov
jmp
pop
les
sub
arpl
gs
inc
and
ret
test
fcoms
pxor
sub
loop
push
sub
mov
jne
in
xchg
xor
jmp
and
push
clc
push
bound
and
fmuls
jb
or
int
movsb
sub
lret
ljmp
push
inc
rcrl
daa
aam
xchg
adc
inc
add
jge
rorl
pushf
inc
fcomps
inc
dec
test
out
pop
sahf
lea
push
das
mov
mov
mov
mov
lea
add
je
pop
insl
std
push
scas
iret
jecxz
loopne
mov
fistpl
xor
test
in
mov
jp
xor
aaa
jle
testb
cmpl
mov
outsb
or
add
in
shlb
mov
mov
xchg
dec
in
out
int3
mov
mov
sub
pop
dec
xchg
fisubl
ss
pop
inc
push
je
sbb
cld
inc
jne
ja
jp
adcb
xor
or
hlt
adc
mov
fisubl
fbstp
sub
int3
ljmp
out
sbb
jp
dec
xchg
std
jb
mov
xchg
jecxz
arpl
mov
shl
js
mov
leave
into
mov
lods
sbb
add
test
int3
aam
push
and
das
scas
lcall
cmpsb
mov
xchg
jmp
enter
push
dec
and
es
lock
into
mov
pop
mov
movsb
dec
jns
mov
or
xor
pop
xlat
cmc
adc
mov
lods
jne
cmp
or
insb
es
sub
sbb
cwtl
xor
mov
ficompl
movsl
xchg
addr16
shlb
adc
push
cld
cli
movsl
push
je
jns
push
or
mov
adc
jno
clc
gs
into
and
xchg
jl
je
addr16
mov
stos
es
test
dec
jae
cli
lods
mov
mov
fstpl
scas
xorl
adc
sbbb
inc
inc
ds
jle,pt
push
mov
lods
in
testl
out
imul
and
in
imul
push
fbld
mov
loopne
dec
mov
adc
cli
push
mov
mov
ljmp
push
push
mov
enter
push
outsl
cmpsl
adcb
add
cmp
or
scas
bound
test
loop
sub
test
ja
pop
sahf
push
add
dec
xchg
fwait
js
or
sub
js
scas
xor
jge
popa
lods
cmp
popa
rclb
pop
das
mov
dec
aad
push
xchg
cld
pop
mov
xor
fildll
aas
xchg
push
and
je
jo
aaa
sbb
in
xchg
sbb
pop
popf
xor
jp
test
xor
dec
ss
or
nop
push
iret
adc
aas
sti
xchg
mov
xor
into
dec
sub
xchg
leave
lea
in
mov
xor
mov
xchg
out
cli
cmp
mov
or
dec
scas
pop
dec
fsubl
jle
xorl
int
imul
fimuls
aaa
leave
xchg
rclb
mov
mov
jns
push
out
mov
jge
jbe
adc
pusha
ret
adc
sbb
mov
sub
sbb
cld
push
xlat
push
pop
mov
aad
cmp
inc
sub
mov
cmp
nop
lods
leave
andb
mov
sbb
or
sbb
sbb
iret
mov
in
xchg
xchg
enter
pop
ret
test
push
push
aad
fsubp
jp
popa
mov
or
inc
sub
movb
bound
out
and
mov
sub
pop
or
int
cmp
or
gs
cmp
sub
jns
pop
aas
jmp
mov
pushf
xor
fdivrs
inc
jecxz
lahf
push
js
call
arpl
adc
sub
in
out
pop
outsb
xor
pop
adc
hlt
popf
jno
xchg
mov
xor
cmp
shll
xchg
adc
test
cmc
cli
in
mov
push
ss
and
test
jne
enter
repnz
insl
lods
repnz
es
mov
sbb
adcl
les
pop
jnp
pop
sbb
arpl
xor
inc
xchg
cmp
add
insl
jge
sbbb
stos
or
out
and
xlat
frstor
stos
lods
idivb
and
stos
or
in
in
xor
clc
and
and
daa
gs
movsb
std
sbb
jp
pop
out
ja
mov
cmpsb
dec
or
out
sbbb
pop
dec
mov
mov
in
cmp
jle
ret
mov
jae
pop
cmp
xchg
xlat
add
imul
shlb
push
in
xchg
mov
nop
xor
nop
pop
movsl
imul
push
adc
jecxz
loop
loope
xchg
cwtl
cwtl
fbld
js
shr
cmpsl
xor
mov
add
test
imul
push
ret
and
aam
or
inc
add
je
es
std
stos
sbb
nop
xor
adc
adc
imul
sbb
mov
push
xor
lods
adc
mov
leave
xor
cld
inc
inc
jae
sbb
pop
arpl
data16
xchg
jno
dec
cld
pop
xor
pop
inc
incb
pop
daa
push
push
int
push
loop
adc
xchg
lea
or
xchg
in
xchg
jb
outsl
lock
xor
in
mov
pusha
and
leave
je
pop
jae
pop
cmc
iret
les
test
jecxz
es
push
push
jo
dec
cmc
out
and
xor
scas
or
cmp
int3
adc
addr16
je
push
mov
add
rcll
inc
cmpsb
ret
mov
in
inc
test
mov
pop
cltd
pop
jne
pop
lret
int
mov
cmc
xchg
mov
jnp
xor
add
and
shlb
ret
jmp
push
dec
sub
pop
xchg
xchg
aad
loop
jg
push
cmp
pop
jnp
dec
icebp
and
xor
sbb
push
adc
xor
cmp
out
mov
in
mov
sub
mov
cltd
arpl
loopne
fwait
mov
jnp
xchg
cld
push
dec
jns
out
inc
add
add
and
mov
insl
sbb
cmp
xchg
fisubs
and
mov
dec
xchg
loop
push
pusha
daa
rclb
test
leave
push
push
cmpb
and
ret
and
int
cmp
push
pop
imul
mov
dec
or
testb
clc
pusha
into
pop
cmpsl
inc
xor
dec
mov
xlat
daa
add
pop
sub
mov
push
ss
push
pop
cmp
cltd
cmp
inc
sbbb
push
pop
fsubl
pop
lods
das
shrl
scas
out
inc
xor
mov
fnsave
jae
dec
jmp
subb
imul
xchg
insl
sbb
in
cwtl
das
xor
inc
aaa
jle
popa
xchg
xchg
lea
sahf
jae
pop
es
mov
jmp
movsb
jno
mov
imul
arpl
sub
scas
sbb
xlat
push
inc
aad
push
cmp
icebp
jbe
or
add
cld
jns
lea
lahf
adc
and
inc
or
push
notl
aaa
inc
xor
je
push
adc
mov
jo
lods
stos
push
insl
lret
and
daa
cmp
daa
or
xchg
dec
pop
es
mov
sub
fimull
fstpt
mov
fildll
mov
lods
jnp
mov
add
cmp
testl
call
out
pop
pop
js
sbb
xchg
xchg
dec
jae
mov
out
sarl
insl
sub
mov
and
scas
addb
sub
scas
fwait
arpl
adc
inc
fisubl
xor
dec
add
and
les
lods
pop
jb
inc
es
mov
es
cmp
inc
dec
out
inc
in
icebp
mov
xor
cmp
mov
shll
and
outsl
adc
xor
mov
stc
sbb
popa
cmp
jb
dec
cmp
jp
dec
add
movsl
gs
push
js
jmp
subl
sbb
sub
push
xor
adc
jl
and
cmpl
pop
mov
stc
iret
xchg
and
ja
pop
inc
mov
and
xchg
out
add
out
jp
xchg
sbb
adc
outsl
test
xor
mov
xor
cmp
adc
pop
and
cmc
and
sarb
punpcklwd
xchg
rcr
xchg
test
mov
cmp
sahf
cmpsb
pushf
add
push
int
jmp
jbe
xchg
jmp
es
push
out
lds
rcr
mov
gs
inc
icebp
fadds
lret
fdiv
mov
shlb
xchg
and
cli
dec
inc
or
rcrl
xchg
shr
sub
scas
data16
rol
cwtl
inc
adc
jge
leave
bound
iret
cmp
inc
and
adc
add
sarb
or
xor
pop
adc
or
sub
dec
stos
outsb
fiadds
gs
lods
and
leave
ljmp
jne
mov
or
jbe
mov
fcompl
sbb
lock
push
mov
lods
push
rorl
cmpsb
int3
push
flds
fdivrs
pop
or
and
pop
movsb
adc
imull
addb
test
xor
xchg
dec
mov
xchg
push
pop
cmp
jno
clc
add
pushf
push
daa
sbb
shr
sub
push
mov
push
cmp
push
push
fdivs
inc
in
mov
or
cld
cmp
sub
push
push
or
xor
fcomip
test
xor
mov
fists
xchg
jo
push
in
in
pop
enter
lret
push
cmp
add
cli
ret
jl
dec
cmp
notb
or
iret
fiaddl
jo
in
jb
xchg
pop
and
out
mov
in
push
lock
stos
lods
aam
adc
xchg
xor
leave
sub
mov
and
mov
in
mov
cs
cwtl
inc
imul
clc
fadds
cmp
sub
adc
or
sbb
popa
add
outsb
or
stc
xor
xchg
push
mov
pushf
or
std
test
add
sbb
scas
loope
cmp
adc
add
sahf
es
es
xchg
popf
xchg
or
pop
lock
popa
call
xor
cmp
aas
pop
xchg
mov
ss
sub
iret
imul
imul
adc
test
into
xchg
cltd
adc
mov
test
std
enter
rclb
xchg
mov
data16
and
dec
ss
mov
ficoml
pop
or
into
insl
in
jmp
pop
pop
icebp
mov
inc
or
pop
js
das
testb
insl
ret
out
push
cld
loop
sbb
insl
js
out
mov
in
push
pop
jne
push
pop
adc
xor
imul
leave
lock
sbb
stos
add
add
jae
jg
hlt
int3
js
jbe
cmp
mov
bound
fidivs
pop
scas
iret
fidivl
dec
add
jecxz
jo
cmpsl
pop
decb
mov
or
std
sub
arpl
sub
and
push
sti
mov
or
mov
mov
bound
sti
roll
push
movsl
into
repnz
push
xchg
sbb
cmp
mov
adc
leave
clc
jp
mulb
inc
mov
sbb
aaa
lcall
cmp
mov
xchg
push
mov
int
fildll
aad
lcall
pop
loop
jecxz
dec
push
clc
dec
jg
out
cmp
fsts
dec
cmpsb
mov
push
jge
mov
in
icebp
push
pop
jbe
jne
xorb
lea
inc
mov
push
int
cs
cwtl
in
push
loopne
pop
decb
mov
stc
pop
jp
mov
push
fiaddl
mov
xchg
stc
std
shl
lods
imul
aad
lahf
ret
in
mov
loope
scas
hlt
inc
enter
add
push
fwait
jmp
std
test
test
pushf
xlat
aam
adc
jecxz
mov
sub
lods
and
mov
sbb
push
jmp
cld
sub
pop
repz
jmp
fwait
and
fistpl
mov
call
cwtl
pop
setp
pop
test
push
arpl
push
lret
xchg
sub
insb
ret
fdivs
bound
xchg
mov
and
cmpsb
sbbl
ds
sub
inc
add
fwait
int3
aam
fistpl
test
scas
pusha
push
je
les
push
into
mov
adc
cmpsb
hlt
shll
iret
lcall
xchg
sbb
bound
call
cmc
xor
jo
aas
inc
std
mov
push
pop
mov
in
or
sub
dec
cmpsl
lret
lods
xchg
lahf
xchg
clc
pop
pop
cmpsl
fistps
icebp
and
add
outsb
js
and
clc
lds
lahf
adc
mov
out
or
push
add
sbb
or
orl
fmull
ror
fisubrs
adc
push
mov
stos
mov
inc
sbb
mov
fcoms
lods
mov
mov
sub
mov
xchg
dec
ffreep
aam
enter
mov
sbb
or
adcb
cmpsb
add
cmp
faddl
mov
adc
lcall
cmp
push
mov
stc
inc
push
xchg
pop
inc
sarl
mov
xchg
loope
popf
aam
popf
pusha
negl
std
in
call
jne
jp
pusha
and
adc
xor
sub
sub
sbb
bnd
lds
int3
loope
sub
sbb
pop
jmp
adc
mov
lea
jno
pop
mov
aam
fnsave
dec
rcrb
xchg
cltd
dec
mov
clc
movsl
or
aad
mov
in
lret
lcall
mov
rcl
inc
imul
addb
loope
mov
fldt
sahf
jb
pop
sbb
outsb
test
inc
cs
enter
mov
pop
ret
cwtl
mov
imul
repz
cmp
and
xor
clc
mov
pop
adc
inc
pop
fcoml
xlat
sub
mov
dec
xchg
call
xchg
in
data16
xor
movsb
ljmp
cmp
outsl
mov
orl
sub
or
dec
addr16
mov
sarl
inc
mov
xor
inc
fiadds
gs
push
pusha
cmp
popf
imul
jnp
jns
stos
fldt
pop
mov
imul
inc
dec
aad
xchg
inc
loop
mov
mov
ret
insl
or
xlat
imul
outsb
push
ret
cwtl
fs
lea
mov
pusha
sti
xor
sub
adc
xor
add
cmc
fisttps
and
lahf
pop
sub
or
sub
je
cmc
daa
pop
addr16
sbb
test
and
dec
jle
push
pop
mov
cmpsb
pop
sbb
mov
dec
lahf
lea
mov
cltd
les
lock
sbb
fnstcw
inc
nop
shrl
inc
adc
cltd
mov
ja
and
outsb
pop
jmp
cmpb
fimuls
cs
cmp
in
int3
mov
outsl
xor
mov
aas
jp
and
dec
hlt
and
arpl
ss
xchg
insl
movsb
cs
in
cmc
push
rcll
scas
in
pushf
add
loopne
xchg
mov
out
sbb
scas
cld
sahf
lret
cmpsl
out
ss
mov
jl
add
punpckldq
cmp
or
jnp
add
test
pop
sbb
je
cmp
jmp
scas
or
cwtl
or
adc
or
inc
scas
jge
inc
dec
cmp
mov
and
push
jbe
repnz
inc
adc
jg
je
pop
sbb
adc
ljmp
jecxz
mov
and
cli
roll
mov
inc
scas
pop
mov
mov
mov
roll
pop
loop
push
xchg
mov
or
and
cs
jle
dec
mov
mov
cli
add
adc
lods
push
das
aaa
std
and
or
sub
lds
add
pop
std
adc
pop
or
push
les
push
sub
or
call
cmp
cmpb
xchg
fldcw
stos
mov
pop
dec
lea
inc
cs
jp
imul
repz
sbb
mov
mov
lods
fcoml
mov
inc
xlat
enter
lods
roll
mov
das
rcll
push
add
push
push
shll
lcall
hlt
cmp
cmpsb
lret
xorl
fisubl
mov
lods
sbb
and
and
imul
outsl
mov
cld
inc
or
or
cwtl
cld
dec
push
mov
push
fists
jns
cmp
adc
js
dec
xchg
dec
das
inc
hlt
jnp
dec
fwait
dec
pop
fdivs
xchg
rorl
cli
test
jno
inc
inc
lcall
jo
mov
cld
roll
push
push
and
pop
popf
xlat
dec
adc
lds
xor
pop
ret
sbb
xchg
dec
cmc
dec
jp
xchg
xor
cmpb
clc
push
loopne
pop
fmuls
es
sub
mov
mov
sub
addr16
pop
add
mov
xor
mov
aam
cli
and
repz
sbb
inc
inc
push
ret
jns
dec
jb
sub
xor
or
stos
test
inc
call
jns
js
push
subb
add
mov
add
dec
movsl
cmp
idivl
aas
js
stos
lock
ss
xchg
inc
sbb
cltd
xlat
push
idivl
fmulp
cmp
mov
mov
js
push
add
jge
nop
pop
call
and
test
cmp
cld
pop
movsl
mov
outsb
decb
xchg
dec
loope
push
add
pop
orl
mov
pop
leave
dec
push
dec
ja
push
out
add
mov
and
cld
aad
jae
push
les
mov
inc
cmp
mov
clc
pop
pop
sub
pop
or
sub
xchg
jmp
xchg
stos
mov
ficoms
mov
ret
fwait
cmp
and
xor
inc
lea
enter
cmp
outsb
sub
loope
add
jnp
stc
and
les
add
outsl
and
xchg
test
xchg
mov
jmp
arpl
push
jns
shrb
cltd
lods
jns
mov
pop
inc
xlat
jmp
pusha
inc
mov
sub
sti
out
adc
add
shrl
mov
std
jle
add
dec
stc
das
test
cs
pop
mov
outsb
cmp
xlat
pop
sub
jmp
fdivl
in
call
sarl
sbb
jl
adc
inc
adcb
mov
ja
mov
sahf
mov
adc
mov
cltd
scas
or
pop
ljmp
lcall
test
popw
aaa
inc
mov
dec
lock
int
movsb
mov
in
lods
push
adc
add
lahf
je
pusha
rcll
pop
mov
es
add
add
add
pop
push
jo
xchg
pop
loop
push
pushf
mov
add
shll
push
sbb
int
pop
xchg
jbe
clc
mov
imul
iret
or
push
cltd
xchg
addr16
dec
fwait
xchg
out
dec
pop
js
mov
adc
mov
xor
fcomps
pop
push
mov
ss
push
enter
dec
mov
mov
lds
cmpsl
mov
gs
dec
push
inc
jnp
shrl
push
jp
fucomp
pop
subb
adc
jle
and
fcmovnb
and
lock
mov
xor
imulb
rolb
shlb
ds
lea
xor
push
mov
data16
imul
cmpsl
js
and
adc
mov
subb
iret
mov
fidivrs
shlb
lods
movsl
ljmp
insb
bound
xchg
xor
jle,pt
cwtl
ljmp
jmp
sbb
pop
cmpsl
imul
ja
and
xchg
inc
pop
sahf
xchg
push
popa
xchg
pop
loope
lea
push
or
ficoml
pusha
in
push
int
xchg
outsb
outsl
jmp
cmpsb
add
mov
push
mov
sbb
orb
shlb
pop
xchg
nop
ljmp
js
rclb
adc
lcall
fistl
mov
imul
iret
dec
mov
mov
mov
adc
push
add
imul
xor
mov
xchg
out
lahf
sbb
add
out
cmp
or
mov
outsl
mov
out
ret
ljmp
cmp
add
cmp
add
in
mov
jg
or
gs
test
jnp
or
cmp
xor
jno
lock
cmpsb
push
cmp
les
and
jbe
push
cmp
inc
out
pop
rorl
mov
cmp
dec
jmp
xor
inc
in
sub
in
cmp
xor
mov
mov
in
enter
lret
mul
sbb
pop
mov
call
push
inc
shll
hlt
repnz
cld
or
stc
sbb
sub
stc
mov
popf
mov
enter
push
xchg
jno
jle
out
fidivl
divb
and
shll
jne
or
lret
xchg
pop
int
cwtl
test
mov
mov
dec
ss
popf
dec
or
inc
adcl
test
je
xor
mov
and
xchg
imul
pop
sbb
or
mov
pop
lds
pop
insb
mov
sbb
pop
fstps
mov
pusha
pop
push
shl
push
jmp
xor
subb
adc
adc
add
fisubrs
push
sub
sub
ficoms
sahf
ja
mov
sbb
call
lds
cmpb
push
rorb
insb
pop
jno
sbb
adc
test
xor
mov
push
ja
cltd
mov
jl
int
push
cmp
jl
sbb
rolb
sub
adc
out
das
out
ret
jns
bound
jp
inc
scas
fdivs
mov
bound
pop
mov
jnp
push
inc
pop
insb
pop
test
mov
inc
pop
push
xchg
stos
pop
cmp
xlat
cmp
and
shl
sahf
pushf
xor
xchg
push
lds
rcl
add
cli
test
insb
adc
cli
fisttpl
test
pop
shrl
pushf
push
outsb
fs
inc
push
mov
xchg
fldlg2
pop
xor
loopne
push
addb
es
ret
xchg
or
sti
inc
xchg
mov
pop
lret
pop
sub
dec
pop
aas
mov
xchg
mov
andb
hlt
cmp
add
test
pusha
in
or
inc
js
lret
cltd
std
idivl
mov
cwtl
fsts
fiadds
scas
mov
sbb
sub
mov
pop
xchg
jecxz
in
mov
jecxz
cld
jg
or
adc
pop
outsb
in
insb
mov
loope
xchg
cmp
inc
test
out
inc
inc
mov
cs
mov
or
sbb
dec
mov
mov
lcall
xchg
fcoml
int
js
out
sbb
push
xor
lret
jno
xchg
add
leave
push
xchg
mov
je
dec
dec
cmp
pop
pop
or
out
xchg
xchg
xchg
mov
in
or
pop
lods
mov
fbld
sbb
pop
fcmovu
sub
mov
mov
xor
addb
lea
sub
push
xchg
cmp
notl
lret
mov
adc
loop
mov
fcmovnu
push
out
sarb
xchg
mov
add
inc
jns
imul
outsb
fs
cli
adc
mov
pop
subb
aad
dec
pop
mov
mov
xchg
shlb
mov
test
in
inc
jmp
mov
movsl
jmp
mov
xor
xor
and
mov
das
cmp
sub
push
jnp
mov
cs
popa
mov
xor
push
lds
and
inc
int
mulb
xchg
int
out
or
mov
lcall
dec
mov
add
cltd
ret
sahf
mov
test
cmpsl
sbb
scas
repz
mov
pop
test
subb
fsts
xchg
inc
sbb
stos
jg
in
mov
pushf
cmp
inc
lods
sti
or
add
adc
push
movl
daa
add
ja
mov
ret
push
push
push
sub
mov
xchg
push
xlat
and
jg
into
mov
lahf
mov
je
out
cmp
cltd
jns
imul
add
decb
fisubs
fwait
push
aam
cmpsl
mov
aad
and
clc
jecxz
mov
in
mov
push
sbb
lahf
mov
mov
sahf
pop
fwait
adc
es
lock
cmp
jb
jl
push
dec
mov
cwtl
daa
test
jp
push
xor
inc
and
repnz
cmp
adc
or
jae
and
or
iret
int3
ss
mov
mov
mov
jns
mov
jnp
ja
cs
or
push
mov
sahf
inc
or
lods
ljmp
and
lock
addl
es
in
xor
mov
mov
fwait
loopne
sub
jb
mov
fistpll
xchg
xor
sub
adc
inc
cmp
and
flds
iret
push
mull
mov
ficoml
int
outsb
dec
mov
fdiv
gs
call
daa
adc
add
sbb
add
xchg
inc
or
aad
stos
mov
add
outsl
lea
xchg
mov
in
or
out
mov
push
mov
leave
mov
add
addr16
pushl
and
scas
pop
mov
ret
cmpsb
cmp
adc
xchg
pop
ss
movsl
repnz
and
leave
popf
pop
adc
dec
cmp
push
dec
ret
loopne
test
inc
js
pop
or
add
lock
inc
sbb
iret
mov
int3
xor
fsubl
push
cmc
pushf
cmp
decb
adc
stc
sbb
lcall
jo
and
push
cld
push
or
mov
aas
and
add
mov
movsb
xchg
sub
repz
test
jbe
adc
aam
xadd
xchg
sbb
adc
mov
shl
daa
fwait
cwtl
push
adc
sbb
orl
lods
lock
dec
scas
sbb
and
or
and
dec
ja
subl
aas
jecxz
or
or
loope
movsl
mov
jnp
pusha
inc
adc
xlat
pusha
push
xchg
sub
mov
push
cmpsl
cmpl
sbb
inc
add
sbb
ret
mov
push
test
xor
sub
xor
test
imul
pop
mov
sub
test
cmp
icebp
push
mov
cmp
push
jmp
inc
arpl
adc
or
inc
into
cmp
dec
add
test
mov
ror
imul
sahf
adc
adc
in
lods
xchg
test
in
mov
mov
mov
pop
sub
stc
cmpl
jb
inc
lods
decl
mov
adc
and
inc
add
mov
push
es
add
cli
dec
xor
push
popa
dec
mov
push
sub
fnstcw
mov
or
xchg
pop
fldl2t
dec
mov
stos
cmp
stos
lcall
cmp
testb
lock
mov
pop
aaa
push
repnz
arpl
das
or
movsb
mov
sub
sbbb
xchg
mov
jne
ljmp
cli
daa
movsl
fxch
fmull
idivl
sub
cltd
xchg
aaa
or
bound
inc
adc
pop
mov
cmp
hlt
test
inc
dec
daa
pop
add
inc
dec
mov
in
push
outsl
dec
into
mov
pop
fwait
inc
xor
sbb
inc
dec
test
inc
imul
sub
imul
aam
xor
push
mov
sub
out
mov
mov
repz
pop
cmc
out
push
stc
cmp
jp
gs
cli
xorb
mov
inc
insl
adc
jmp
arpl
shl
loopne
adc
lea
fbstp
sub
mov
pop
loop
mov
mov
inc
or
mov
lea
addr16
mov
nop
rol
pop
paddw
jmp
lds
test
out
mov
mov
inc
shlb
mov
push
cmp
or
mov
push
mov
pop
iret
xchg
fstl
fcompl
andl
mov
xor
mov
dec
pop
mov
outsb
lahf
loop
imul
stc
loop
imulb
test
mov
xchg
dec
and
out
push
fsubs
mov
movsb
xchg
mov
xor
insl
xchg
mov
cmc
or
fs
jmp
test
sbb
je
testb
adc
xchg
les
mov
push
into
testb
push
xchg
leave
lcall
repz
xchg
fsubrs
scas
ja
cwtl
in
mov
shrl
pop
sbb
and
cmp
in
or
jo
jo
or
lret
jbe
pop
or
sub
cmp
jmp
add
test
jmp
mov
inc
fcmovnu
or
push
pop
dec
lret
cltd
dec
sbb
jbe
clc
fildl
jno
sbb
mov
add
out
out
dec
cmp
push
pop
push
jne
add
sbb
push
in
pusha
mov
jbe
or
xchg
repz
add
mov
inc
mov
add
pushf
fldl
out
mov
cltd
shl
or
dec
cmp
push
insl
mov
xor
and
fcompl
mov
add
pop
mov
scas
mov
jno
loopne
mov
sti
dec
fldt
iret
jmp
bound
xor
cmc
in
clc
pop
dec
arpl
jo
dec
push
insb
imul
inc
jnp
test
add
popf
dec
push
rorb
les
fdivrl
mov
pop
inc
dec
dec
jmp
or
repz
xchg
mov
push
sbb
scas
mov
imul
jae
les
fwait
popa
or
fcoms
inc
ret
mov
sbbb
xorl
lea
scas
out
lock
stos
dec
push
sarb
mov
lcall
push
xor
arpl
mov
dec
shrb
sbbl
cltd
mov
es
aaa
sbb
cmovae
pop
pop
mov
jl
sbb
fisubrs
stos
mov
enter
call
movsb
push
inc
jp
mov
call
jno
push
xchg
jno
jb
fistl
xchg
xchg
cmp
jmp
mov
test
jb
daa
mov
inc
inc
jo
adc
test
jecxz,pn
or
lods
jmp
dec
cmp
lods
mov
mov
es
stos
mov
sbb
cli
or
out
pushf
cmpsb
xor
cmpsb
push
mov
push
outsl
push
mov
jnp
jp
mov
mov
fabs
jmp
in
sub
xlat
mov
aam
into
inc
push
imul
push
push
mov
insb
sahf
enter
push
push
mov
mov
or
push
push
add
lock
cmc
sub
or
stc
pop
jno,pn
icebp
xchg
fcomps
rcll
mov
insl
out
sbb
out
int
adc
adc
icebp
mov
add
test
push
cmpb
mov
sbb
mov
out
in
fdivs
add
test
incb
mov
ljmp
adc
das
cwtl
int3
roll
pop
out
pushf
daa
pop
jae
icebp
imul
inc
jb
and
outsb
icebp
mov
sbb
mov
jae
rcrb
stos
imul
test
ret
add
outsb
scas
sbb
imul
int
mov
lret
mov
incb
movb
fildl
adc
lcall
dec
cmpsb
mov
mov
add
sub
inc
push
push
inc
shrl
frstor
movsl
xchg
pop
push
jl
push
dec
xor
push
sbb
rol
int
sbb
mov
mov
jmp
cmp
inc
popf
fcmove
dec
pop
scas
lds
call
cmpsb
test
jnp
pop
sarb
addl
pop
je
mov
mov
movsb
nop
stos
xchg
aaa
pop
cmp
push
sbb
jbe
sub
xchg
pop
test
faddl
push
cld
xor
inc
sub
jno
jb
leave
addr16
jnp
xchg
push
push
sahf
mov
movl
adc
fldl
push
or
loopne
fnstcw
mov
push
outsb
ds
mov
sti
xchg
mov
adc
int
and
pop
jg
cmpsb
rorl
sub
lret
add
sub
push
pusha
inc
ds
jp
shll
das
or
or
add
leave
sbb
inc
dec
inc
dec
jb
push
data16
repnz
mov
in
popa
icebp
js
inc
sti
div
mov
in
gs
std
jle
jbe
fisttps
add
inc
clc
clc
inc
lods
sbb
inc
mov
sahf
rolb
jmp
cmp
pushf
push
cmp
sub
pop
fdivr
stc
fidivl
sub
pop
add
fadds
xor
or
mov
and
push
arpl
mov
aas
adcb
xchg
subl
bound
jmp
mov
xchg
daa
push
in
cmpsb
fdivrl
pop
push
adc
dec
cmp
shrl
rcrl
bswap
out
dec
pop
lret
out
mov
mov
add
or
je
test
mov
sbb
sarl
xor
into
xchg
mov
dec
mov
mov
sbb
jmp
sbb
mov
mov
in
lahf
pop
test
sbb
push
sti
mov
callw
fimuls
sub
inc
mov
loop
stos
inc
outsl
xchg
test
push
out
ljmp
push
sub
jmp
pop
out
mov
lods
push
sbb
lock
stc
jl
adc
jmp
or
aad
cmpsl
insl
push
inc
mov
adc
mov
addr16
lret
pop
push
sbb
pop
add
cli
sbb
scas
repnz
loope
mov
fidivrl
mov
and
lcall
andnps
ljmp
pop
int3
js
ret
pop
aad
mov
or
jnp
mov
mov
leave
fwait
jne
jg
gs
aaa
lea
shlb
aam
and
lret
aad
stc
mov
add
sub
cmc
add
add
mov
jno
pop
stos
or
lret
dec
and
or
ja
mov
push
repnz
loope
es
imul
mov
mov
mov
cmp
mov
fldl
out
int
cld
mov
sub
sub
out
stos
mov
lea
inc
je
ja
xor
and
xlat
jb
xor
xchg
mov
and
adcl
xchg
mov
sbb
adc
fsubrs
popa
repz
add
mov
jmp
jnp
nop
popf
add
arpl
and
mov
leave
push
pop
out
cli
call
cwtl
push
pop
add
fsub
in
test
dec
sub
mov
push
shrl
adc
out
sbb
stc
push
mov
je
mov
int
xlat
ret
jb
pop
sub
mov
les
int3
push
push
and
loop
cmp
clc
fmuls
push
and
xchg
xor
jp
xchg
stc
hlt
push
stos
fnstcw
int3
jle
leave
xchg
enter
xchg
ds
mov
lahf
jnp
jnp
inc
stc
jo
mov
pop
adc
fwait
xlat
subb
and
jp
pop
or
addr16
sub
jmp
lret
ss
int3
les
xchg
mov
jmp
jle
inc
rolb
ret
push
popf
mov
xor
push
sbb
and
addr16
sub
mov
xchg
mov
mov
jmp
sbb
cld
xor
adc
sti
in
inc
ljmp
pop
stc
or
repnz
cmp
mov
dec
scas
xor
in
fdivp
sar
loopne
lea
xor
mov
mov
xor
popf
mov
push
push
pusha
adc
cmp
clc
enter
call
lahf
xchg
lret
and
jp
shlw
aaa
or
gs
cmp
std
roll
stos
push
cmp
fdivrs
mov
fdivrp
or
sbb
mov
dec
arpl
mov
scas
or
pop
es
movsl
iret
dec
inc
shr
popf
mov
jg
ss
ljmp
jae
je
sbb
lahf
mov
or
lea
out
add
mov
cmp
pop
sub
cmc
in
fcom
insl
daa
mov
data16
imul
outsb
sub
add
push
iret
fucomp
pop
out
mov
push
add
push
rorl
and
lahf
rol
ds
adc
cltd
and
dec
inc
das
aas
pop
shr
pop
sub
push
nop
inc
inc
mov
repnz
cmp
xchg
fs
cmp
push
ds
dec
pop
leave
es
js
lret
test
aam
adc
andl
loop
xor
dec
cmp
pusha
jmp
xchg
inc
dec
fsts
call
cltd
cmp
in
mov
xor
cmp
mov
sbb
aad
pop
xor
sbb
rcl
jmp
dec
iret
outsb
fisubs
pop
flds
jmp
pop
ja
inc
jnp
cwtl
decl
pop
mov
push
mov
or
inc
je
jmp
cmp
loopne
aad
lss
mov
fucomp
pop
sub
loopne
lds
dec
or
push
mov
sbbl
outsb
movsb
lret
lds
or
je
loopne
lock
cmp
jge
out
call
mov
push
jae
mov
push
stc
sti
lahf
mov
imul
sbb
jge
hlt
mov
testl
inc
adc
or
repnz
outsl
pop
cmpl
mov
mov
inc
pop
sub
das
scas
das
psubsw
hlt
dec
sub
pop
add
notl
jp
je
movsl
xchg
mov
sbb
cmp
outsb
xorb
jl
inc
outsl
pop
pop
jg
jno
dec
frstor
nop
push
fucompp
cltd
daa
cmp
inc
and
insb
pop
scas
and
push
mov
add
ss
jle
inc
xor
or
add
scas
outsl
adc
jbe
test
mov
pusha
scas
fs
sti
stc
int3
mov
mov
test
xor
dec
mov
inc
mov
cltd
leave
es
cmp
sbb
or
inc
rolb
cld
fisubrs
inc
stc
mov
popf
jl
fsub
push
leave
pop
enter
enter
fsubl
pop
fisubrl
mov
push
cmpsb
add
sub
or
push
stc
out
sbb
push
pop
out
cmp
pop
incl
xlat
call
pop
lds
lock
out
xor
xor
testl
xor
sub
push
mov
add
imul
nop
fnsave
hlt
add
sbb
mov
ret
dec
pop
mov
mov
push
mov
into
push
push
mov
and
mov
push
aad
mov
pop
push
adc
inc
mov
sbb
lods
inc
rclb
mov
sub
cmp
push
pop
inc
imul
pop
pop
jmp
mov
adc
or
xor
xor
into
add
scas
adc
out
and
stos
mov
cli
test
inc
cmc
test
jno
lcall
mov
sub
cmp
bound
xchg
add
fidivrl
popa
std
sub
push
aam
sbb
mov
add
iret
loopne
addb
sbb
ds
adc
and
cmp
into
mov
sbb
xchg
jl
in
xor
mov
imul
in
pop
sbb
cmp
insl
in
sarb
sbb
fs
xor
or
fsubr
rol
add
fimuls
icebp
test
add
testl
cwtl
dec
push
daa
push
pop
mov
push
outsl
jle
addb
mov
dec
push
rolb
ret
jne
add
dec
jno
dec
ljmp
mov
out
jecxz
mov
in
lret
int3
jg
xchg
pop
loope
leave
push
add
pcmpgtb
aas
shrl
int
sbb
mov
inc
inc
adc
dec
sbb
mov
lea
sti
aas
push
mov
push
mov
xchg
mov
das
mov
jbe
movsl
in
xor
xchg
shlb
xor
loope
lcall
jp
pop
test
add
hlt
imul
ljmp
pop
or
stos
and
lcall
xchg
jl
dec
outsl
xlat
dec
add
sub
das
mov
sub
lret
mov
push
rcrb
pop
sbb
inc
test
icebp
jns
jg
fnstenv
outsl
popf
pop
loop
mov
cmpb
xor
sahf
mov
jb
mov
sbb
xlat
xchg
popa
scas
add
inc
stos
rcl
cwtl
test
or
inc
lea
shll
cmp
repnz
les
bound
jmp
add
sar
or
and
sbb
lahf
dec
sarl
or
push
or
sbb
push
mov
test
xchg
dec
pop
adc
push
jne
jmp
aam
pop
cmp
mov
push
or
push
int
loopne
out
mov
in
xchg
ret
stos
ficoms
ss
dec
aas
xor
out
pop
aaa
cmp
std
xchg
je
inc
or
or
push
jle
loop
xor
lret
in
rcrl
adc
mov
dec
incl
pop
sbb
sub
dec
cs
jns
and
movups
into
push
rcl
pop
mov
cmp
repnz
dec
and
fwait
mov
sbb
dec
sub
jns
loopne
mov
loope
pop
cli
jp
jg
mov
mov
fldcw
lahf
divb
adc
loopne
lock
mov
adc
divl
out
push
mov
in
adc
bound
cmp
call
std
not
pop
sbb
push
inc
pop
and
xor
arpl
insb
lds
jnp
cs
in
pop
or
cmpsb
mov
xchg
jle
adc
sbb
sub
mov
pop
sbb
pop
sbb
sub
cmc
out
lahf
cli
xchg
or
dec
sarb
in
and
cs
scas
outsb
xchg
fbld
sub
lret
xor
rclb
test
jns
lock
mov
fmul
mov
je
flds
mov
jg
sbb
mov
push
dec
jge,pn
stos
notb
enter
notl
xor
outsb
ljmp
nop
movsb
fnsave
rcl
movsl
and
in
push
ret
shlb
adc
mov
inc
aad
out
cmp
pop
dec
imul
mov
jo
sub
push
mov
pop
xchg
daa
dec
xchg
jge
push
push
cmp
lea
decl
jecxz
mov
ja
scas
fs
sbb
cmp
fs
xchg
mov
jmp
xchg
cld
imul
cmp
es
cmp
shl
arpl
sbb
jecxz
icebp
or
xchg
pusha
push
shlb
lcall
jo
test
mov
cmp
rclb
dec
je
jecxz
test
xchg
es
int3
jg
add
cmp
and
out
shlb
fcoms
ret
dec
sbb
in
scas
cmp
cmp
push
fs
clc
jb
rorl
jmp
bound
add
aas
mov
fbstp
cmp
sti
sub
jae
push
mov
add
nop
sbbb
insl
mov
ret
rorb
jge
les
cs
add
fsubr
mov
stos
jmp
out
mov
lret
xor
jno
call
pop
dec
cmp
sbb
cmp
rcrb
inc
pop
inc
aad
or
sbb
sbb
andl
or
jns
mov
sbb
sbb
xor
xchg
rorl
xor
fmul
inc
or
negl
lock
in
addr16
ss
iret
imulb
adc
in
mov
jp
out
jb
jmp
mov
pop
lea
data16
xor
cmc
popa
sti
cmp
push
mov
add
in
addr16
addb
std
lcall
out
cmp
jno
repz
scas
jo
test
pop
fwait
mov
adc
mov
push
pop
sub
aam
clc
push
dec
cli
pop
cli
movsl
pusha
sub
push
into
mov
xchg
into
pop
push
testb
sbb
jne
dec
xchg
jl
mov
jle
dec
inc
and
or
inc
mov
lahf
adc
pop
pop
mov
popf
stc
inc
pop
xchg
xor
rcrl
and
sbb
cmp
inc
inc
out
enter
ss
nop
cli
fimull
lret
mov
push
adc
ror
dec
adc
adc
push
pushf
lret
adc
and
mov
lds
or
jbe
mov
pop
in
daa
xor
aam
xchg
cmpsb
aas
sarl
sbb
orl
popf
pop
popa
xor
movsb
mov
jno
mov
xchg
hlt
pop
jg
movb
sub
xchg
int
pop
mov
fildl
push
sbb
mov
jmp
mov
mov
jnp
mov
lret
mov
popa
mov
add
sub
adc
cmc
fidivl
xor
inc
ret
out
fildll
ljmp
mov
scas
inc
ret
mov
arpl
ss
mov
filds
jp
dec
add
xchg
push
sbb
mov
push
std
hlt
or
loop
jbe
xchg
or
lcall
sti
stc
pop
stc
push
inc
jns
sbb
sub
imulb
jecxz
or
cmp
mov
push
in
sub
and
aaa
and
mov
xlat
sbb
mov
inc
adc
lock
push
fcomps
adc
imul
xchg
std
rorl
ret
sbb
lock
cmp
push
mov
cmp
inc
bound
sub
jns
cmc
inc
inc
mov
call
mov
cmp
sub
xlat
mov
xchg
idivl
pop
in
mov
pop
rorb
pop
lahf
add
pop
push
jnp
push
icebp
dec
adc
test
inc
ret
sub
inc
cmp
push
cli
or
push
mov
out
sub
xor
jmp
imul
inc
leave
insl
pop
jg
pop
cmp
movsb
into
imul
fwait
sbb
xchg
sub
sahf
dec
xchg
push
push
out
sub
push
out
xchg
rcrl
les
jo
mov
sbb
fsubl
mul
dec
inc
cmp
lret
test
pop
pushf
push
dec
stc
pop
popa
mov
mov
xchg
outsb
int
jo
lds
popa
out
mov
mov
dec
std
or
pop
fisubrl
fcmovnbe
mov
cli
fistps
inc
sbb
add
mov
cmp
add
dec
dec
mov
ss
sbb
sti
mov
jnp
sti
out
stos
cmpsb
incb
inc
pop
push
jp
push
cld
cmp
push
add
cltd
scas
push
pop
ljmp
mov
loopne
jbe
leave
inc
push
je
rclb
xor
jo
adc
aam
mov
flds
push
js
inc
pop
mov
enter
cmc
shr
jmp
push
popa
mov
cmpsb
lods
stos
arpl
cmpsb
dec
dec
mov
daa
jae
cmp
andb
loopne
addr16
test
xor
xor
inc
hlt
pop
bound
fiadds
in
sbb
scas
push
xchg
cld
dec
cmp
adc
xor
jmp
cmp
in
outsl
fnstsw
leave
mov
cmp
jbe
sbb
shl
icebp
cmc
shrl
xor
cltd
mov
aad
lea
jne
and
inc
cmp
ds
pop
jns
push
jmp
sbb
xchg
dec
xchg
cmp
cmp
das
add
out
jbe
sahf
jbe
out
pop
mov
test
fildll
mov
cli
lcall
and
fidivrl
clc
lcall
js
adc
arpl
movsl
sub
in
dec
shl
jno
andl
repz
rcll
sbb
shl
xor
xchg
add
add
add
cmc
imul
xchg
insb
xchg
cmp
shl
xchg
cmpsl
scas
or
xor
mov
cld
hlt
loopne
pop
pop
loop
mov
sub
lcall
cs
lods
das
add
adc
imul
das
mov
movsl
fimull
jbe
pop
mov
stos
testb
push
loope
bound
pop
mov
push
icebp
sub
stc
fisubrs
pop
scas
xchg
jo
xchg
lea
or
jp
ja
cmp
mov
sbb
inc
cli
scas
movsb
mov
push
stc
mov
pushf
scas
sub
mov
ss
lcall
push
jmp
and
iret
or
ljmp
popf
pop
xchg
mov
xchg
cltd
jge
sti
mov
push
mov
in
outsb
push
mov
aad
mov
mov
or
inc
mov
push
cmp
arpl
fs
pushf
dec
push
add
imul
push
in
sarb
fcompl
jnp
xor
jl
cmp
mov
test
cld
jl
imul
inc
adc
cmp
or
out
cmp
ret
ljmp
mov
sahf
jg
ss
dec
mov
insl
add
lods
xchg
call
sbb
or
xlat
sbb
sahf
js
nop
sahf
push
mov
aaa
add
jo
sub
scas
jne
dec
push
mov
mov
out
subb
out
ret
aas
cmp
movsb
iret
adc
jns
adc
xor
dec
push
sarb
popf
jecxz
repnz
rcll
mov
lods
push
mov
pushf
xchg
shlb
jge
lods
sub
jmp
jno
repnz
scas
xchg
cmpsb
sti
dec
roll
stos
sbb
xor
lahf
sub
mov
int3
and
mov
test
push
or
inc
pop
aaa
popa
and
rclb
fwait
add
lds
inc
test
or
into
rorl
cmp
ljmp
inc
inc
mov
and
mov
sub
push
cltd
adc
scas
xchg
movsl
mov
adc
ljmp
ja
mov
imul
mov
mov
cmp
add
mov
push
cmp
adc
dec
arpl
dec
mov
pop
mov
xor
data16
daa
push
cwtl
sbb
imul
insb
cmp
jmp
in
sbb
fsts
test
sahf
std
arpl
inc
xlat
inc
fsubrs
inc
insl
add
mov
aas
dec
cmp
mov
push
lods
pop
jbe
insb
out
cmc
roll
aad
mov
lret
insb
fmull
rclb
sbb
lcall
gs
xchg
mov
out
jg
push
pusha
inc
or
mov
js
outsb
arpl
stc
in
jmp
rcrl
adc
adc
sahf
outsb
jnp
xor
sti
push
jb
stc
mov
in
inc
pop
push
daa
ret
push
or
inc
lds
jbe
push
test
leave
addr16
jge
loopne
test
bsr
pop
sub
jecxz
pop
outsl
fiadds
pop
cmp
fwait
mov
lahf
mov
aaa
ret
cmp
cmp
and
xorl
and
test
enter
jmp
push
push
xor
or
sbbb
addr16
loop
pop
movsb
lahf
je
rorl
sti
loope
and
xchg
add
cmpsl
data16
add
aad
enter
and
jge
sub
test
pusha
mov
ja
inc
sub
js
mov
dec
xchg
jns
in
fcmovnu
push
aas
jae
out
in
test
sbb
fwait
xchg
out
xor
lock
in
mov
fsubp
xor
sub
daa
add
enter
add
dec
aaa
and
adc
sub
inc
cmp
sahf
popa
test
cmp
lcall
call
pop
insl
xlat
inc
fnstsw
sbb
mov
lock
inc
dec
stos
push
inc
rclb
daa
mov
push
pushf
rolb
cwtl
xchg
add
mov
xor
mov
adc
ret
lock
insl
cs
push
inc
lret
pop
cwtl
cmpsb
out
cmp
push
xor
inc
jge
sbb
addr16
subb
mov
arpl
loope
cmp
dec
gs
test
sub
sahf
mov
jge
pop
fstps
push
xorb
xchg
mov
imul
ret
xor
jp
jno
fadds
inc
pop
xchg
out
lret
xor
test
jns
sarb
and
cmp
insb
lahf
icebp
and
add
cs
bound
jl
fwait
mov
sbb
ljmp
pop
adc
inc
jp
or
or
xchg
mov
push
push
jne
jne
sub
frstor
aad
data16
inc
in
lcall
fistpll
inc
aam
jnp
lret
mov
sbb
mov
cmpsl
jp
sub
sbb
fucomi
lods
push
test
cmovge
cmp
into
arpl
xchg
dec
jle
mov
inc
mov
push
gs
fdivp
xchg
push
add
cmp
fdiv
add
pop
clc
outsl
enter
cmp
add
cmc
jo
loopne
inc
or
inc
sbb
cmpsb
fbld
addr16
nop
add
imul
adc
mov
mov
in
das
jae
mov
cmp
jbe
hlt
ds
int
add
push
push
icebp
mov
pop
jae
jmp
dec
outsl
xor
sbb
sbb
sbb
add
repz
test
inc
sbb
lock
push
add
lds
adc
ljmp
dec
sub
leave
mov
ss
dec
idivl
das
mov
fistps
mov
dec
sbb
mov
in
imul
or
push
pushl
mov
pusha
push
pop
sub
shrl
xchg
stos
mov
push
lock
or
push
fs
jmp
iret
jno
mov
mov
pop
fisttps
push
leave
and
adc
repz
sbb
je
hlt
out
pop
mov
test
lds
or
cmp
stos
adc
imul
jl
mov
stos
loope
in
mov
mov
cmp
dec
add
push
jno
sbbl
lahf
imul
dec
jle
cli
xor
pop
dec
sbb
imul
movsl
or
icebp
ljmp
jno
cmp
push
xor
mov
jae
add
adc
aad
leave
jecxz
jne
loope
sub
mov
jnp
jne
js
or
xchg
inc
cmp
mov
jae
pop
mov
popf
data16
sub
outsb
aam
imul
or
gs
add
mov
jge
imul
dec
sub
mov
std
mov
jecxz
sti
pop
mov
mov
adc
cltd
push
jmp
add
and
shll
lahf
stc
out
sbb
popf
cmpsl
fs
mov
mov
pop
sbb
pop
inc
fdecstp
divb
mov
and
jae
mov
cmp
call
pop
lret
mov
lret
pop
push
adc
or
inc
orb
push
and
stos
adc
push
jnp
push
inc
lds
mov
pop
shl
xchg
hlt
adc
inc
daa
dec
popa
mov
jb
pushf
sti
lods
or
aam
ret
jecxz
xor
shlb
push
mov
xchg
pop
sub
inc
fistl
push
pop
out
add
inc
xchg
or
mov
mov
stc
inc
cmp
imul
fistps
idivb
movsb
sbb
adc
and
lahf
addr16
push
pusha
clc
fucomi
movsl
jmp
jmp
xor
out
xor
les
fcomip
outsl
sub
push
sahf
and
adc
xchg
enter
iret
aas
out
pop
hlt
xor
mov
jp
cmp
out
mov
xchg
jnp
decb
xor
add
rol
fsubrp
pushf
fimuls
adc
popa
mov
insb
mov
sub
pop
mov
leave
and
inc
stos
jp
iret
enter
insb
aaa
nop
push
icebp
ss
test
dec
push
xor
or
in
ficomps
mov
adc
mov
mov
iret
add
sub
clc
fidivrs
push
or
mull
inc
shll
jmp
xor
mov
scas
insl
in
xlat
or
adc
xchg
call
arpl
or
and
aad
mov
pop
mov
jno
es
popa
mov
outsl
iret
fcmovnbe
outsl
sbb
push
jle
je
pop
ljmp
dec
loope
andl
adc
test
jg
mov
cmpl
inc
jns
setno
jmp
sar
mov
xor
jmp
add
push
or
mov
push
dec
negb
sub
cmc
xchg
cs
call
cld
mov
pusha
in
hlt
insb
sti
in
jbe
pop
adc
int3
popf
lock
mov
push
mov
mov
les
popa
fwait
or
cltd
imul
lret
dec
imul
adc
stc
stos
repz
sub
push
je
push
psadbw
pop
shl
push
out
mov
cmp
in
xor
cmp
fiadds
outsb
sub
mov
orl
cmc
jno
cmp
dec
mov
cmp
cmpsb
mov
es
shll
sti
out
pop
neg
or
or
add
inc
outsl
testb
xor
push
inc
push
or
mov
push
test
mov
adc
xchg
int3
insb
es
or
push
into
divl
dec
lea
adc
jne
clc
push
cmp
push
scas
scas
xchg
dec
lea
out
fisubl
push
and
aad
mov
fwait
pop
sub
mov
and
xor
scas
xchg
mov
sub
push
or
xor
adc
cltd
lods
and
fnstcw
or
inc
sub
cmpsb
addl
out
in
out
adc
jb
inc
imul
mov
out
xlat
movsl
jl
and
stos
fisubrs
mov
lret
cmp
fisubl
adc
push
cmp
pop
pop
bound
movsl
xlat
cmpsl
dec
ret
loop
test
dec
or
hlt
sub
mov
jle
in
mov
lcall
mov
rdmsr
xor
out
add
pop
shl
daa
roll
pushf
xor
lods
int3
aam
jmp
addb
adc
inc
ret
cmp
pop
push
data16
or
add
inc
test
test
sub
movsl
popf
je
shll
mov
inc
int3
mov
fmuls
imul
jecxz
repz
mov
icebp
mov
les
shll
push
loope
sub
xchg
negb
rcr
out
mov
loope
je
jo
arpl
xor
and
jns
pop
fwait
mov
jecxz
jg
inc
jns
cwtl
push
push
adc
jle
fcoms
movsl
or
and
mov
mov
mov
cltd
mov
imul
repz
push
and
icebp
ret
inc
push
pop
or
nop
hlt
or
outsl
jae
xchg
cmpxchg
cmp
jns
stos
repnz
nop
jo
in
sbb
push
lret
or
aad
xchg
sbb
or
add
dec
sbb
std
outsb
iret
xchg
inc
jmp
xchg
inc
cs
ss
push
fwait
cmc
or
adc
jge
fiadds
cmp
mov
insl
and
mov
aas
push
adc
and
jb
das
pop
addl
push
mov
loope
aas
cli
mov
sahf
dec
pop
movsl
inc
ret
or
add
imul
pop
xor
and
in
mov
cs
push
movsl
add
cmp
xor
pop
adc
int
adc
aaa
ds
jne
cmp
sbb
cmp
pop
xchg
sub
popf
jecxz
call
pmulhuw
jge
in
stos
cmp
pop
js
pop
sahf
push
sbb
mov
lock
lds
and
pop
int
out
mov
jg
push
rclb
aad
ja
push
mov
ret
lods
pop
adc
xor
add
adc
add
inc
movsl
sbb
sbb
fbstp
pop
fistl
xchg
aaa
fnsave
adc
leave
leave
stos
scas
fs
mov
int3
push
pop
outsb
pop
ret
frstor
outsl
bound
dec
pop
ja
popl
fmull
fsts
loop
pop
xor
into
cmp
xor
loopne
loop
inc
shlb
add
xlat
push
out
and
jmp
xchg
sbb
call
adc
icebp
mov
clc
mov
popa
xchg
xchg
push
cltd
loopne
add
mov
fs
sbb
shll
andl
xchg
aam
push
lods
loope
orb
rcll
fcmove
loopne
outsb
jecxz
aas
mov
push
notb
mov
insb
jmp
adc
enter
mov
imul
lret
dec
in
mov
mov
arpl
fst
lock
push
je
aaa
cmp
jbe
popf
rcr
inc
ret
add
inc
jmp
fldl
jnp
out
mov
fmull
xchg
push
sub
push
cld
rorb
inc
fadds
xchg
pop
sahf
cmpl
mov
sahf
shll
lcall
adc
imul
add
mov
arpl
add
jae
pusha
inc
pop
addr16
shl
rcr
mov
lds
mov
insb
je
fmull
ljmp
pop
hlt
xchg
dec
jp
jns
jns
outsl
aas
or
js
cmp
xchg
add
add
test
mov
push
lea
iret
scas
mov
rcr
repnz
mov
inc
mov
adc
movsl
add
subb
adc
out
jns
into
mov
and
sub
test
jecxz
sbbl
jne
in
daa
sbb
std
test
mov
cld
mov
cmp
xchg
dec
sub
fs
test
notl
into
dec
clc
push
fisubs
je
and
int
ss
jae
cli
cmpsl
cmp
subl
addr16
add
subl
xchg
push
inc
mov
push
mov
ss
push
jno
xor
jmp
add
inc
pusha
int3
aam
push
stos
and
scas
rcll
cmp
jp
sub
adcb
inc
xchg
mov
xlat
xor
adc
test
inc
push
popf
or
scas
scas
jnp
mov
pop
int3
add
les
stc
cli
and
or
jl
sar
jo
dec
into
in
add
out
push
jbe
sub
mov
ja
out
fstp
movsb
sahf
in
and
fisubrs
pop
out
mov
push
xor
outsb
std
pop
xchg
mov
or
jge
mov
popa
gs
bnd
pusha
enter
pop
repnz
jecxz
mov
das
ds
cmp
and
and
xor
mov
cmp
repz
ss
and
push
arpl
hlt
stc
pop
loopne
xchg
dec
stc
push
clc
pop
cmovge
jo
mov
inc
insb
pop
dec
hlt
dec
hlt
push
sbb
popf
out
scas
js
dec
or
mov
sub
cmp
repnz
xor
cmp
mov
sbb
sbb
mov
jnp
pop
lock
sbb
pop
aad
mov
pop
and
iret
in
mov
pop
xor
pushf
rorb
jnp
enter
scas
sbbb
jbe
xchg
lock
ss
pop
push
aaa
adc
cmpsl
shufps
mov
push
dec
sub
cmpsl
push
je
sbb
dec
scas
pop
adc
and
sbb
imul
sbb
mov
xchg
insb
insb
xchg
in
js
pop
sahf
aam
aas
loopne
jl
ficoms
movsb
push
pop
cmp
sbb
idivb
fldl
imul
push
mov
pop
add
pop
ja
jle
bound
mov
movsl
or
aad
jl
rol
or
dec
sbb
imul
inc
daa
sbb
jl
loop
cmpl
stos
sub
mov
jb
xor
mov
sarl
shl
xchg
ss
dec
andl
cmp
sbb
or
hlt
lock
lcall
call
aaa
loopne
cwtl
repnz
fadds
sub
lret
or
movntq
nop
test
and
push
sbb
xchg
add
jl
fsubs
jae
mov
push
dec
push
mov
jns
and
dec
cmp
std
xor
mov
or
int
movsl
out
or
shlb
jae
into
add
movsl
fnstsw
inc
mov
rdmsr
ret
sub
clc
xor
sahf
jo
jno
movl
sub
cltd
jmp
xor
in
push
jp
dec
sti
cld
or
aaa
mov
xor
push
cld
popf
dec
pop
dec
loope
ljmp
fsts
dec
xor
jp
cs
aaa
or
adc
jbe
dec
push
or
xchg
add
rcll
fcmovnb
mov
push
imulb
jecxz
mov
xchg
dec
or
shrb
jo
popf
adc
fdivrl
mov
lret
dec
out
and
sub
jmp
incl
cmp
push
movsb
adc
hlt
scas
test
jns
movsb
mov
cwtl
mov
and
mov
mov
xor
push
cmp
dec
lock
jle
ret
xchg
push
mov
ljmp
sbb
dec
pop
sbb
and
jnp
dec
pop
dec
fucom
inc
jae
lcall
lods
insb
or
or
xchg
jp
int3
fs
jno
iret
fbstp
inc
xor
adc
sbb
mov
daa
push
ja
cmpsl
inc
mov
add
roll
imul
and
es
stos
js
cld
jb
inc
mov
and
std
cmp
loopne
mov
dec
pop
mov
xchg
mov
movsb
mov
int
adc
jg
loop
jae
lds
iret
jmp
xchg
push
jnp
rcrl
inc
adc
fildl
and
sbbb
cwtl
or
outsb
in
fsub
add
test
cltd
mov
inc
or
push
cmc
sbb
and
insl
push
push
or
sti
or
out
xor
add
shlb
int3
movsl
xchg
int3
inc
lds
pop
fs
sahf
or
mov
sub
fstps
insb
les
les
clc
lock
or
push
ret
das
fistl
dec
nopl
ss
hlt
roll
adc
jg
jmp
aas
cld
add
mov
add
jbe
aas
clc
rorb
sbb
inc
adc
cmpsb
sbb
out
push
dec
scas
imul
fisubs
outsb
mov
add
mov
pop
xor
cld
pop
sub
je
in
cltd
cli
shll
cmpl
popa
xchg
jnp
adc
xor
push
xchg
xor
fs
arpl
mov
int3
cld
xchg
or
lret
fiaddl
jg
je
cmp
mov
xor
lods
inc
std
cmp
insl
je
dec
shll
rcr
pop
jne
jge
xor
pop
ret
aad
subl
xor
int3
pop
sbb
push
cmp
hlt
cmc
cmp
stc
sbb
out
xchg
mov
xor
data16
mov
push
daa
cli
imul
mov
jae
mov
aas
push
in
mov
repnz
sub
lds
push
jbe
mov
ret
adc
xor
aaa
fs
inc
jmp
mov
scas
or
mov
push
jne
mov
inc
xchg
daa
or
inc
out
sti
daa
fmull
out
jno
lahf
in
test
mov
inc
add
out
or
je
xchg
aad
shl
loopne
insb
jle
lea
dec
jmp
lock
push
movsb
cmp
xchg
in
lds
push
mov
sub
in
int3
jg
pop
dec
push
jo
dec
dec
sbb
pop
or
dec
jle
pop
inc
dec
outsb
add
jecxz
dec
je
lret
orl
mov
cmpsl
mov
xor
paddsb
xor
push
and
aas
add
adc
sbb
out
ja
out
xchg
pop
lods
xchg
mov
imul
push
pop
dec
xor
cmp
xor
int3
cmp
mov
adc
add
jbe
sub
lahf
inc
outsl
fiadds
add
jne
in
xchg
sbb
xchg
mov
push
add
add
movsw
push
mov
push
mov
jp
bound
mov
out
and
add
xchg
mov
mov
or
fistps
mov
int3
in
push
mov
nop
sbb
es
rorb
xlat
fsubrl
faddl
nop
movl
sbb
add
aam
push
mov
jae
mov
inc
inc
out
pop
push
in
xchg
loopne
xchg
in
pop
ja
lds
in
jmp
data16
ljmp
and
mov
xchg
pop
fwait
mov
or
bound
xchg
scas
mov
xchg
add
pop
push
ss
repnz
push
popa
idivl
lock
inc
mov
into
pop
nop
roll
and
jns
sub
movl
sbb
test
inc
push
sbb
cltd
mov
lahf
lahf
xor
jo
jmp
xchg
jp
repz
xchg
cmp
mov
dec
dec
cli
jno
mov
jecxz
movsl
add
data16
and
sub
movsb
lret
shrb
add
jae
shl
aaa
xchg
pop
and
pop
shrl
mov
xor
in
sub
mov
sti
adc
mov
imul
les
sub
rolb
les
add
daa
add
sub
out
push
pushf
or
mov
xlat
push
mov
outsl
in
mov
clc
cmp
mov
xchg
inc
mov
cld
inc
mov
ja
imul
pop
imul
mov
mov
jle
in
test
inc
rolb
jae
iret
cmp
faddl
orb
adc
xchg
mov
mov
repz
hlt
hlt
fcmovbe
or
mov
scas
adc
mov
clc
dec
pop
sahf
sbb
cmp
ret
push
ljmp
loop
in
cmp
mov
mov
bound
int
xchg
jp
add
je
popa
sub
outsb
dec
hlt
aam
sti
loopne
in
push
pusha
popf
mov
mov
and
jbe
inc
pop
int3
mov
and
gs
jno
dec
jg
push
es
in
out
cld
fists
jne
pop
or
orl
inc
gs
mov
xchg
out
icebp
sub
push
cld
repz
fbld
add
insb
shrb
mov
out
add
sbb
dec
xor
bound
mov
pop
xor
cmp
leave
popa
lods
mov
pop
fdiv
pusha
xorb
jo
mulb
mov
dec
mov
pop
ljmp
pop
enter
sti
in
lahf
sbb
mov
or
iret
loopne,pt
add
pop
mov
push
mov
mov
inc
xor
inc
out
mov
inc
xchg
lods
cmc
subl
rclb
jae
adc
fstpt
or
adcl
cmp
cmpsl
lods
sbb
aad
or
push
and
adc
and
inc
jg
sarl
sti
ret
ror
push
dec
lahf
pusha
fnstcw
les
mov
xchg
divl
mov
andb
scas
or
orb
and
popl
ret
insb
or
je
pop
mov
test
loop
and
ds
sub
xorl
adc
sahf
std
int3
push
xchg
pop
data16
pop
cli
fiaddl
repnz
mov
dec
iret
jp
lods
rorb
cmp
and
jbe
xchg
cmp
mov
cmpsb
cmp
mov
stc
and
or
les
popa
inc
aam
pusha
shll
imul
adc
lods
fcomi
cwtl
hlt
xchg
cmp
push
das
leave
inc
clc
imul
mov
inc
mov
xchg
sub
fiadds
outsl
ljmp
inc
add
test
addr16
call
xchg
lods
js
enter
popf
movb
or
jle
mov
rclb
insl
lods
insb
or
insl
stc
sahf
in
sti
dec
mov
lcall
mov
inc
divl
int3
xchg
xchg
add
cmpsb
push
movsb
add
in
scas
sbbb
outsb
testl
rol
sbb
sbbl
pop
pop
push
jle
jl
xchg
das
xchg
shll
divl
or
cmp
js
stos
mov
imul
outsb
xor
fwait
lods
sub
scas
push
push
jmp
jns
arpl
and
adc
out
dec
dec
mov
lret
add
test
ja
jo
call
scas
hlt
loopne
pop
sub
mov
add
pop
xor
mov
inc
aad
jecxz
mov
movsl
and
sbb
in
aad
xchg
lods
shl
pcmpgtw
mov
mov
sahf
test
push
mov
test
test
addr16
mov
es
and
mov
jge
outsb
lods
es
loop
mov
aaa
dec
push
cmp
pushf
push
scas
or
jl
xor
push
pop
pop
test
fisubl
xor
and
dec
mov
test
push
aaa
call
aas
sbb
pop
pop
push
int3
sbb
imul
iret
repz
outsb
hlt
mov
loop
push
cmpsb
test
aaa
and
mov
and
inc
cmp
push
push
lds
cld
and
inc
mov
adc
rcrb
sbb
scas
int
add
dec
adc
fdivrs
arpl
xor
jge
push
inc
dec
popa
mov
call
aam
iret
aas
mov
ljmp
sub
iret
pop
inc
mov
lds
pop
mov
shrb
xchg
xor
out
cltd
jne
or
addr16
mov
sahf
adc
insb
out
push
sbb
test
pop
cmpsl
dec
fbld
stos
xchg
cmc
ss
lea
leave
push
je
xchg
rclb
xlat
mov
pop
jae
xchg
sahf
inc
aas
in
cmp
jae
jnp
sub
add
xorl
mov
xlat
and
sub
rcll
je
or
lods
add
push
xor
fwait
ss
aaa
and
mov
test
outsl
mov
jbe
jecxz
insb
add
sbb
xor
lods
hlt
std
icebp
push
xchg
mov
adcb
hlt
or
lret
xor
lret
xor
cmp
lret
push
xor
and
sub
loop
jecxz
sub
xchg
cmpsl
shlb
mov
push
arpl
bound
xor
scas
mov
jne
sub
add
int3
aas
mov
cmp
mov
jg
test
xchg
xchg
mov
scas
movsl
test
xor
or
mov
adc
imul
xchg
or
jae
xchg
mov
jmp
sbb
scas
jmp
cli
jmp
les
xchg
push
fsub
dec
cmp
cmp
jno
addr16
scas
cmp
std
mov
je
in
xchg
xor
test
int
in
xor
pushf
test
cs
add
pop
jmp
aaa
fildl
push
enter
cs
lret
mov
cmc
add
jno
das
pop
repz
es
insb
ret
movsb
and
cld
adc
mov
loopne
inc
adc
xchg
ds
fcomps
sahf
mov
sub
rorl
push
repz
dec
xor
jmp
inc
cmp
xchg
insl
and
xchg
sbb
jae
inc
rorb
and
int3
leave
cmp
loopne
push
inc
into
stos
xor
fsts
int
mov
pop
push
test
movl
and
sub
xchg
daa
pop
sub
jecxz
xor
movsb
shl
aas
mov
xor
dec
addr16
mov
and
lea
fprem1
xor
dec
stos
fdiv
sub
and
mov
lock
mov
mov
popf
and
xchg
sbb
dec
mov
cmpsb
xchg
mov
ret
mov
pusha
lret
push
mov
movsl
das
jl
push
ljmp
adc
cmc
dec
push
shlb
mov
orb
cmpsb
je
xor
and
test
mov
and
cmp
or
je
mov
jmp
mov
stc
js
rcr
xchg
dec
inc
mov
sub
sub
adc
mov
jle
pop
loope
dec
sbb
jb
sbb
cmp
jmp
mov
xchg
mov
test
js
pop
mov
mov
in
adc
testl
decb
mov
sub
aam
inc
jo
and
and
xor
pop
popa
xchg
dec
xchg
sbbl
loopne
mov
jp
rorb
push
cmp
cs
in
jle
jl
cs
rcrl
ja
in
mov
js
xlat
jnp
icebp
mov
jb
adc
xor
into
out
inc
push
mov
dec
ljmp
int3
inc
and
or
mov
mov
jmp
test
mov
xchg
stos
lock
sti
sub
push
cmp
out
sub
mov
hlt
adc
mov
pop
sbb
in
out
mov
pop
push
push
inc
and
dec
fisubl
dec
sti
iret
maskmovq
sub
lahf
sub
pushf
mov
xchg
and
mov
jg
or
xor
fwait
xchg
push
inc
push
mov
mov
popa
dec
xor
mov
imul
xchg
mov
jae
mov
cmp
mov
movsb
dec
jp
mov
fstl
mov
lret
fxch
adc
inc
xchg
shl
dec
jo
in
pop
mov
std
pop
sahf
sbb
sub
and
data16
push
push
in
xor
sub
pop
stc
push
roll
fs
and
incb
hlt
std
cmp
mov
test
jmp
ret
and
jge
mov
out
mov
dec
test
or
mov
mov
xorl
pushf
test
cmp
mov
fadd
pop
push
xor
mov
mov
call
sub
xor
outsl
xor
fs
xor
push
and
dec
add
dec
adc
int
pop
dec
dec
inc
push
jecxz
xchg
dec
pop
jmp
mov
pop
cmp
lcall
imul
js
xor
jne
sub
sub
and
jmp
adc
sarl
cmp
mull
xor
testb
int3
icebp
adc
outsb
out
push
idivl
ret
mov
mov
inc
and
jg
push
xchg
iret
dec
mov
je
jne
bound
neg
mov
repnz
iret
icebp
jecxz
jbe
cwtl
clc
adc
inc
das
jbe
outsl
pop
pop
out
imul
lds
jp
into
or
and
jne
push
cmpsl
xchg
sbb
mov
or
daa
mov
es
and
and
jecxz
fs
gs
cmp
leave
ja
les
fldt
sbb
inc
mov
jp
je
mov
pusha
push
arpl
sub
adcb
dec
ljmp
call
je
xchg
cmp
call
fimull
fcoms
mov
leave
out
add
stos
xlat
xchg
insb
fcom
and
pusha
ret
mov
or
popa
arpl
pop
mov
or
and
das
sbb
arpl
xor
out
jp
inc
adc
orb
loopne
cmp
sub
add
push
and
sbb
sbbb
mov
arpl
mov
inc
push
pop
pop
pop
dec
cmp
jl
adc
cmp
jge
dec
test
outsb
xchg
sbb
adc
or
nop
in
pop
shll
and
xchg
arpl
aam
xor
dec
popf
add
test
inc
pusha
insb
inc
inc
ljmp
iret
cmp
and
lcall
cs
rorl
imul
xchg
xchg
das
ljmp
sub
adc
fwait
xor
call
mov
push
inc
adc
in
roll
push
inc
jae
jae
jae
inc
rorl
add
leave
inc
inc
mov
or
jbe
in
mov
xorl
xchg
lret
sbb
inc
lret
test
and
jbe
lea
fdivrs
xchg
push
mov
mov
or
call
or
push
jecxz
inc
test
ror
in
mov
jg
shlb
mov
mov
mov
add
call
ja
scas
dec
sbb
mov
nop
mov
frstor
inc
ljmp
adc
push
jg
mov
mov
scas
fwait
sbb
sti
cltd
mov
and
xchg
xchg
xchg
mov
fcmovnb
sub
mov
adc
in
orb
movsl
setge
nop
ljmp
ds
push
cmp
mov
inc
push
jns
xor
lods
test
dec
pop
cmc
or
push
clc
push
dec
imul
lret
fists
mov
xchg
pop
dec
add
daa
fcoms
and
gs
and
dec
jge
iret
andb
xchg
pushw
sbb
add
inc
cmpsl
into
test
adc
jno
add
push
popa
jge
popf
lret
test
sub
mov
cli
sbb
xchg
lock
scas
lods
sub
xchg
sub
cld
dec
fidivrl
jg,pn
or
xor
and
jns
jne
nop
sub
mov
filds
xchg
jae
ficompl
das
mov
push
aas
xor
cs
sub
loope
movsb
add
xor
sbb
andl
in
push
jmp
add
into
or
fdivrl
sahf
outsl
cli
mov
lahf
mov
icebp
aam
adc
popa
mov
lock
xchg
dec
mov
jecxz
push
aaa
repz
sbb
subl
fs
sbb
mov
je
xor
out
in
or
in
sbb
loope
call
pop
mov
pop
fsubrl
scas
and
jo
movsl
nop
test
pop
insl
out
lea
addb
aam
outsb
les
sub
xor
cmp
fldl
xor
add
dec
mov
dec
add
mov
mov
and
in
loope
push
jle
pop
neg
mov
cmp
sti
sbb
aam
sti
xorb
mov
popa
arpl
incb
sub
cmp
mov
mov
xchg
cld
pop
repz
add
mov
pop
test
jg
xchg
mov
push
xchg
add
mov
out
sbb
add
insb
ficomps
in
mov
adc
out
cs
or
mov
jmp
in
xchg
xchg
stos
pusha
fdivs
mov
daa
in
push
fs
jmp
pushf
adc
cmp
cli
sub
jmp
daa
imul
add
jbe
fucomp
lret
adc
nop
and
shl
jbe
ss
pop
push
mov
dec
sbb
or
jne
xchg
test
pop
notb
xchg
or
and
stos
cmp
sbb
repnz
or
cmp
push
das
mov
test
dec
or
je
adc
cli
ror
test
aam
aaa
fsubs
xor
or
pop
jbe
rclb
popf
movsl
stc
sahf
pop
xor
clc
xor
int
xchg
aam
out
mov
dec
sbb
adc
inc
xchg
push
into
adc
mov
insl
bound
add
push
out
gs
pop
and
adcl
mov
mov
in
pop
and
dec
ja
test
inc
adc
inc
adc
mov
test
or
xor
xor
in
mov
and
push
in
cmp
popf
add
xlat
inc
iret
xchg
jns
sbb
inc
xor
popf
xchg
mov
adc
mov
jle
sarb
out
pop
pop
mov
jg
fidivrs
pusha
mov
cltd
test
js
sbb
repnz
sbb
das
out
mov
adcl
dec
and
push
shll
mov
pushf
jns
test
jge
ds
add
and
pop
test
inc
gs
mov
decl
repnz
das
aam
ret
dec
loope
mov
outsl
insl
sbb
movsb
out
inc
push
cmp
test
idivb
sysexit
jle
xlat
pop
outsl
cmp
outsl
xorl
enter
dec
add
insl
clc
sbb
mov
ret
fwait
cmp
inc
adc
cmpsb
out
xlat
in
lcall
push
fistps
into
popf
and
xor
loopne
and
ss
addb
or
or
in
sahf
mov
add
add
and
dec
out
iret
je
popa
jmp
fadds
adcb
mov
pop
hlt
lods
pusha
out
inc
outsl
movsl
ret
fistps
aad
push
pop
mov
shlb
sbb
pop
mov
dec
inc
mov
je
push
xchg
cwtl
leave
lea
mov
cmp
pusha
and
pop
mov
cmc
xchg
outsb
push
test
mov
icebp
xor
cmp
fildl
cltd
adc
jae
je
inc
add
fldenv
xchg
rolb
cmp
xchg
faddl
xlat
lcall
mov
mov
jo
nop
add
addb
shrb
and
nop
add
in
dec
xor
das
in
mov
push
push
sbb
outsl
aas
sbb
xchg
or
bound
sub
rclb
jg
add
mov
aas
fdivrl
cmp
cmpsb
push
pop
cmp
loopne
imul
xchg
insl
cmp
shll
ljmp
stos
imull
aas
into
push
mov
in
out
mov
xchg
mov
popa
cmp
inc
xlat
movsb
das
and
clc
iret
shrl
popa
bnd
add
outsl
xlat
arpl
iret
outsb
xor
test
imul
subb
adc
imul
and
cld
add
sbb
add
loopne
aas
pop
sub
es
adc
mov
push
out
in
jecxz
cmp
or
pop
mov
js
test
in
ds
fsubl
cmpsl
lock
gs
mov
orb
call
sub
pop
and
jecxz
sbb
jp
and
cwtl
mov
test
sub
rclb
cmpsl
in
test
jo
pop
cmp
push
push
jne
xor
fstpt
jo
cmp
or
mov
subb
cmc
arpl
movsl
adc
sarl
xchg
and
es
and
pop
and
cmc
and
xor
mov
adc
divb
pop
push
into
dec
mov
cmp
or
clc
in
pop
subl
sti
ret
jns
neg
insl
mov
subb
push
xor
inc
jns
mov
mov
int
pop
cmp
pop
in
lods
outsl
ret
pop
pop
enter
repnz
jns
mov
into
sbb
pop
adc
lcall
das
jno,pt
out
popa
xor
sub
mov
les
xor
pop
adc
push
jle
jnp
sti
cmpsb
lcall
dec
test
divl
lret
daa
mov
add
popa
imul
xchg
fcmovbe
jl
xor
add
sub
add
rorb
cmp
inc
add
shrl
mov
fsubl
aas
and
jb
shrb
xchg
stc
push
bound
jo
or
sbb
js
mov
push
or
xor
jecxz
mov
out
xor
mov
inc
dec
jge
ret
lcall
aaa
mov
ret
jle
stc
mov
cld
and
jle
into
repz
xchg
jne
stos
sbb
dec
cmp
in
sub
shrb
test
enter
pop
pusha
idivb
aas
rcrb
xor
repnz
push
negl
pushf
jno
addr16
xorl
imul
xchg
or
rol
add
push
sub
jne
fiadds
inc
in
and
fcoml
mov
cmp
iret
js
dec
jbe
xor
out
jmp
or
push
gs
cmp
mov
movswl
loopne
pop
out
sar
aam
and
sub
aad
cmpsb
add
scas
imul
sub
cmp
xchg
sbb
test
mov
dec
cmovno
xchg
int
fistpll
xchg
cmpsl
mov
in
aam
pop
out
mov
or
add
hlt
mov
and
fidivs
xlat
adc
mov
icebp
and
mov
push
mov
cmp
mov
or
mov
pusha
aaa
push
notb
bound
movsl
outsl
xor
or
pusha
mov
pop
push
pop
dec
dec
loope
cmp
jns
aaa
imulb
cli
xor
cmc
xchg
push
cmp
cmp
xor
lods
mov
sub
ret
jnp
add
pop
inc
testl
test
insb
test
jo
inc
jnp
pushf
loop
lea
and
stos
add
cli
pusha
mov
jle
sbb
dec
inc
lods
pop
mov
push
cmp
jns
leave
xchg
cmp
imul
mov
enter
dec
dec
pop
push
std
dec
out
adc
jmp
jmp
sti
filds
mov
mov
jo
lds
and
inc
cs
imulb
das
addb
cs
sbb
divb
and
cmpb
jo
adc
ss
xor
sbb
sub
fbstp
sar
test
pop
fwait
addr16
cmpsb
inc
testb
mov
rcrl
jp
adc
mov
mov
cmp
add
jbe
leave
mov
loopne
fsubs
cmp
or
jae
jno
js
movsb
adc
cmp
jmp
mov
add
mov
mov
push
loop
mov
push
mov
sbb
int3
jg
popa
inc
gs
sbb
insb
adc
clc
in
mov
test
fdivrs
pop
ja
pop
sub
sub
add
cmpsb
jle
push
dec
mov
ret
mov
push
movsl
in
fmul
mov
push
aaa
stc
out
addb
orb
adc
sar
add
push
pop
mov
cli
leave
mov
aad
jne
les
mov
fsub
add
dec
sbb
sahf
sahf
mov
mov
jp
dec
int
lret
fimull
xor
sub
leave
xorb
cmp
adc
mov
mov
mov
vmread
loop
lret
inc
aas
xchg
add
add
xchg
out
cmpsl
sub
add
and
out
in
fs
mov
or
add
cld
jns
aas
inc
sub
xor
push
lret
sub
mov
xchg
in
jbe
sub
mov
xor
push
cmovb
dec
dec
and
pop
xchg
shl
push
aaa
stos
cmp
cmp
mov
xor
dec
jb
clc
movzbl
icebp
xor
jns
cmp
cmpl
out
xor
imul
andb
adc
imul
sarl
iret
sbb
mov
sub
and
insl
mov
inc
hlt
push
and
mov
inc
ja
addr16
adc
xor
loopne
imul
jmp
mov
xor
fdivs
mov
iret
inc
mov
outsl
xchg
arpl
stc
cmp
sub
cmp
scas
xor
lods
scas
or
test
mov
popa
sbbl
lret
mov
je
dec
lahf
scas
or
add
mov
xorb
cmpsb
lcall
push
mov
enter
movsl
cmc
stc
call
test
push
pop
add
mov
inc
xor
test
dec
test
aam
clc
xchg
fcmovne
mov
push
mov
ss
mov
ret
nop
xchg
pop
jno
push
inc
jmp
stos
xchg
inc
enter
dec
dec
xchg
sbb
dec
je
imul
sbb
and
scas
inc
inc
jbe
dec
add
pop
inc
jo
lret
test
xor
mov
mov
cwtl
insl
les
and
jmp
adc
shlb
cld
mov
inc
aad
lret
bound
into
mov
pop
inc
and
xchg
ret
aas
xchg
es
adc
and
outsl
or
mov
int
ljmp
dec
test
jecxz
pusha
cmpsl
inc
fisubl
adcl
clc
ljmp
fnstcw
mov
xchg
jge
jns
incb
fwait
fs
and
inc
adc
adc
and
xchg
or
mov
jge
outsl
outsl
xchg
jmp
in
jle
xor
or
adc
mov
adc
fimuls
aaa
xchg
push
ljmp
jle
jl
inc
mov
and
inc
dec
jno
cmc
es
iret
xor
fbstp
mov
cmp
sbb
out
pop
adc
mov
inc
fdecstp
pop
mov
push
add
test
sbb
xlat
or
mov
push
les
jne
test
in
dec
shrb
mov
sysexit
xlat
cmpsl
cmp
bswap
fcompl
xchg
imul
jle
es
dec
and
cmp
movsb
cmp
inc
lcall
mov
notl
pop
cmp
push
arpl
sbb
adc
out
fnstcw
xchg
pop
cmpsl
aam
pop
insl
push
imul
mov
mov
or
xchg
jge
ja
clc
lods
out
sub
scas
sub
arpl
imul
mov
mov
call
pop
out
cmpsb
sub
and
pop
stc
or
les
sbb
mov
icebp
test
mov
stc
and
mov
sbb
adc
data16
add
out
pop
inc
dec
mov
sub
jno
add
test
xchg
adc
push
pushf
ret
scas
setbe
or
xchg
dec
lret
lahf
jno
push
pop
std
sbb
shrl
or
sbb
mov
cld
iret
add
dec
sahf
sti
bound
out
mov
or
das
lds
and
repz
and
sahf
cmovo
mov
xchg
in
mov
mov
ljmp
je
jge
fmul
adc
jmp
adc
push
cmp
repz
imul
or
repnz
xor
push
stc
movsb
sub
sbb
lret
pop
ss
aam
inc
mov
je
daa
stos
lds
adc
xchg
fwait
xchg
xor
adc
sarl
push
jnp
idivb
enter
mov
xchg
mov
mov
inc
mov
xchg
sarb
mov
pop
icebp
mov
mov
sahf
mov
andl
jo
aad
jo
dec
in
or
add
dec
xor
stc
repz
movsb
sarl
jmp
sahf
xchg
fisttpl
daa
cli
mov
add
dec
ja
pop
mov
inc
xchg
mov
ljmp
fdivs
mov
dec
pop
lods
fdivl
mov
push
lahf
fildl
ret
jg
cmpsb
xlat
xor
icebp
insb
in
dec
ds
outsl
add
sub
sarb
xchg
xchg
mov
shl
mov
sub
call
mov
adc
notl
rcll
jb
les
sbb
sti
mov
fnstcw
cmp
pushf
pushf
js
lods
push
pop
iret
into
std
popa
aaa
pop
decb
je
sub
fwait
jno
push
movd
add
pop
aam
scas
mov
inc
out
test
jl
fimuls
xlat
and
xchg
sub
push
insl
jnp
mov
jmp
adc
or
mov
mov
fidivl
dec
xchg
pop
pop
dec
push
test
clc
jne
clc
stos
push
fnsave
and
mov
imul
out
mov
add
pop
repnz
pusha
mov
mov
and
xchg
xchg
jno
imul
xor
shll
icebp
into
xlat
mov
in
insl
jo
sub
sub
xlat
and
std
or
sbbb
enter
fnsetpm(287
inc
testb
movsb
xor
adc
xchg
xor
repnz
dec
mov
dec
jge
pushf
or
ds
arpl
pop
xor
in
lods
sbb
movsb
adc
ss
rcrb
cmp
xchg
stos
nop
jns
push
int
mov
ljmp
xor
out
sbb
loope
movsl
pop
fwait
enter
test
adc
std
sub
fstl
xlat
mov
out
aad
cmp
lods
cmpsl
inc
aas
rclb
dec
ss
popa
adc
les
fadds
les
inc
icebp
fcompl
cmp
pop
loop
les
mov
push
outsb
ret
jmp
fidivs
push
pop
iret
and
inc
mov
jo
jg
mov
icebp
dec
leave
xor
dec
insl
sbb
mov
mov
jmp
addl
or
adc
jae
sub
xchg
push
fcompp
mov
or
and
test
aas
jb
and
mov
or
pop
sbb
es
cmp
xor
xchg
imul
test
inc
push
mov
pop
cmp
lods
mov
mov
push
out
mov
mov
sub
jnp
sbb
sub
aaa
fdivrs
xchg
push
insl
imul
loope
mov
jbe
push
mulb
add
push
fstpl
or
loope
pcmpeqw
push
cli
push
cli
pop
adc
mov
push
xor
outsb
add
push
mov
mov
dec
ja
cltd
lret
adc
jnp
sbb
pop
cmpsb
and
ja
popa
lret
fcmove
mov
movsl
loope
aam
jne
mov
imul
sub
pop
shll
xor
cmpl
cmpl
xchg
inc
or
fisttps
add
pop
pop
test
mov
pop
sub
mov
movsl
or
fcoms
pop
xlat
lret
and
adc
add
and
loope
cmpsl
push
test
and
neg
not
clc
je
xchg
push
int3
mov
and
push
and
je
sarb
mov
leave
add
out
dec
lret
sbb
fiadds
sub
jge
addr16
daa
aaa
xchg
popf
fwait
popf
in
sbb
sub
sti
xor
xchg
stc
mov
inc
data16
sbb
bound
divl
imul
push
push
shrb
jmp
nop
push
xchg
sub
jae
mov
xchg
fdivrs
dec
jp
dec
leave
scas
sub
mov
push
mov
aad
flds
mov
xchg
repnz
or
cmp
repz
test
aad
sbb
rorb
pop
jge
aas
scas
mov
pop
adc
push
push
mov
push
dec
push
iret
add
xchg
jae
pusha
push
fstl
aas
shll
pop
lret
fdivs
dec
or
popf
push
cltd
dec
pop
dec
je
add
push
inc
bound
in
in
je
popf
or
fs
ret
insl
sahf
xor
adc
and
xlat
mov
pop
sahf
les
sarl
leave
pop
lods
scas
lods
inc
sub
test
sub
mov
add
pop
push
mov
sbb
add
inc
popa
cltd
lret
in
ret
out
and
adc
xor
imul
scas
pop
jecxz
popa
push
lret
cmp
add
and
push
xchg
imul
mov
call
stos
cli
inc
in
ficoml
mov
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
incl
imul
pop
stc
sbb
jns
imul
pop
mov
or
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
in
xorl
fdivrs
push
adc
ljmp
ret
adc
xor
jmp
aad
jb
push
jnp
int3
les
jno
jns
imul
pop
jnp
bound
lock
sub
jo
arpl
add
lds
shr
ret
jmp
pop
or
repz
inc
add
orl
adc
xor
repnz
add
adc
shrb
out
call
jno
stc
pop
cmp
repz
sbb
popa
adc
stos
push
cmp
jmp
imul
pop
stc
loop
imul
jns
push
pusha
pushf
iret
xchg
lods
leave
cmp
jns
imul
sbb
jmp
xchg
sahf
imul
pop
stc
loop
cmp
jns
imul
pop
stc
out
cmp
jns
jnp
pusha
cmp
stc
loop
cmp
jns
imul
push
stc
loop
cmp
sub
pop
clc
push
int3
cmp
jns
imul
pop
jmp
sbb
jnp
pusha
cmp
stc
loop
cmp
jns
imul
pop
stc
push
lock
jnp
jp
imul
pop
mov
leave
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
sbb
pop
push
pusha
cmp
sbb
leave
cmp
jns
mov
stc
loop
jle
cmp
cmp
stc
ret
fwait
es
sbb
pusha
cmp
stc
or
jnp
jb
imul
cmp
and
leave
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
pop
stc
loop
cmp
jns
imul
jo
jmp
imul
movsl
cld
pop
xchg
lods
addl
jns
xchg
sub
mov
loope
xor
inc
enter
inc
fwait
xchg
lods
mov
xchg
dec
xor
outsl
loop
inc
scas
sbb
push
lock
test
inc
lahf
adc
dec
in
add
fldenv
arpl
test
jle
subb
out
shlb
add
push
jae
jae
fadds
push
or
cltd
and
xchg
cmc
jne
lret
dec
cld
and
in
out
dec
into
adc
jge
xor
jae
aad
and
in
push
sub
lret
ss
mov
cmp
jge
xchg
cmpsl
cmpsb
dec
in
ss
insl
cmc
mov
lea
outsb
lret
inc
jmp
mov
xchg
incl
mov
inc
xchg
lock
sbb
loopne
fstpl
mov
push
enter
mov
cmc
adc
push
fists
fs
sarl
and
test
loop
lods
fwait
add
mov
mov
addr16
mov
xlat
and
xlat
cmp
mov
mov
std
out
sub
pop
outsb
daa
clc
push
mov
or
out
fcoml
or
add
test
sahf
rcll
xchg
xor
daa
and
clc
push
into
adc
fidivl
fbld
jo
jle
pop
adc
aam
inc
fwait
out
rorl
push
dec
dec
mov
int
aaa
into
fcompl
dec
fdivrs
sub
addl
fisubl
mov
outsb
or
lods
or
jo
lcall
mov
push
jns
add
movsb
ljmp
ror
mov
leave
fucomip
cmp
mov
out
or
cli
ret
xor
rolw
out
mov
adc
call
lock
in
jp
lahf
push
lods
and
fcmovnbe
xchg
addr16
call
out
imul
call
es
and
mov
mov
out
jge
lcall
inc
xor
jb
leave
in
or
mov
pop
fists
cmp
mov
dec
lods
es
dec
andl
sbb
add
add
clc
repz
push
cmp
push
pop
hlt
xchg
movsl
in
inc
mov
sbb
sub
pop
dec
enter
sbb
clc
test
shrl
fdivrs
sbb
mov
cmp
rolb
xor
das
push
stc
mov
push
out
jbe
sarl
sbb
pop
sbb
mov
sbb
int
inc
out
sub
pop
imul
jle
xchg
mov
cmp
test
dec
movzwl
jle
sar
iret
inc
and
gs
stc
xchg
aam
fidivs
in
addb
stos
not
shll
out
jp
xacquire
xchg
cmp
jecxz
xor
push
cmpsl
ja,pn
mov
std
mov
jge
call
fnsave
cmpsl
mov
mov
mov
and
mov
pop
xchg
shll
adc
inc
jae
iret
adc
mov
test
inc
xchg
jg
mov
insb
push
in
aam
mov
ret
icebp
or
xchg
outsb
outsl
stos
mov
xor
add
out
pop
push
scas
xchg
xchg
inc
repnz
nop
push
mov
fld
sub
fmuls
lock
loope
cmp
ret
das
bnd
jbe
mov
insl
aam
cmpl
mov
stos
jge
pop
or
and
push
cmp
jo
aam
call
dec
adc
in
out
sub
ja
cmp
push
je
xor
xor
enter
nop
adc
push
iret
mov
mov
inc
pop
test
shrb
cmp
fs
inc
xchg
dec
or
sbb
stos
or
or
xor
in
cwtl
shrb
push
int
enter
xor
repz
xrelease
push
test
subl
int3
jno
xor
sbb
mov
imul
inc
sbb
mov
sbb
addr16
cwtl
sti
sub
jbe
add
outsl
shl
xchg
fmull
and
xchg
xchg
adc
mov
mulb
ljmp
out
js
movsb
or
jae
sub
sub
jle
nop
mov
fdivl
stos
clc
repnz
data16
gs
xchg
icebp
push
std
xor
jge
int3
pushf
stos
pusha
sbb
push
cltd
movsb
xor
insl
jo
mov
mov
stc
xor
jle
stc
sub
fdivs
cmpsl
sub
scas
cmp
xchg
ljmp
mov
ss
xchg
shlb
lret
pop
push
das
fs
loope
loope,pn
sbb
dec
ds
push
dec
inc
call
mov
test
mov
sub
jmp
mov
bound
jnp
aas
jae
lahf
inc
call
mov
jno
sbb
jns
lcall
xor
inc
sub
push
pushf
enter
scas
pop
popf
sbb
fcmovnbe
jecxz
addl
enter
fwait
xor
int
pop
sbb
loopne
xor
pop
cmp
push
decb
es
in
pop
iret
test
xor
loopne
adc
stos
sbb
add
lret
es
add
xor
lea
popf
es
ss
sti
mov
push
test
mov
add
push
mov
mov
arpl
or
sub
mov
fs
fdivr
mov
dec
test
test
sti
jns
in
mov
pop
dec
data16
push
leave
inc
or
rol
xchg
mov
int3
lret
inc
aas
jp
pop
dec
adc
push
bound
add
mov
outsl
pop
aad
lods
outsl
pushf
fcomps
mov
lods
das
rclb
push
add
push
pop
pop
adc
arpl
aas
pop
mov
stc
icebp
mov
ss
xchg
sarl
mov
lahf
cmp
andb
orb
xchg
xchg
ds
jbe
popa
mov
dec
mov
or
add
add
and
mov
or
and
out
mov
ret
scas
daa
orb
das
int3
mov
push
data16
or
sbb
pop
adc
fisubl
les
inc
pushf
push
int3
xor
imul
jnp
jns
ds
and
outsl
int
and
lods
stc
lcall
and
xor
mov
leave
inc
inc
inc
fwait
sbb
fcmovne
loope
lcall
adc
aam
xchg
imul
or
loope,pt
dec
and
test
sbb
or
push
test
push
int3
pop
ja
xor
les
dec
dec
ss
sbb
pop
out
popf
fidivs
dec
xor
push
sbb
lods
test
sub
lds
adc
hlt
push
or
ds
jae
in
xor
std
pushf
push
repnz
jge
mov
test
stos
add
les
call
rcrl
fiaddl
mov
adc
pop
jl
adc
stc
jmp
jge
jo
shll
repz
add
and
in
xchg
push
and
lock
aaa
sarb
rcr
sbb
mov
cmp
mov
mov
test
sub
out
mov
test
pop
or
sbb
gs
sahf
mov
loop
jbe
and
loopne
loopne
pop
lock
dec
mov
jmp
xchg
and
outsl
add
lahf
and
mov
add
in
cltd
xchg
repnz
inc
gs
gs
aas
mov
cmp
lahf
ss
inc
int
pop
cltd
dec
sub
mov
mov
xor
and
loopne
or
clc
xchg
or
out
bound
stc
int
pop
dec
dec
sti
inc
out
sub
mov
int
rcrb
adc
push
jne
xor
sbb
notl
or
jno
mov
sti
insb
push
cmp
and
pop
lret
sahf
ret
fmuls
lret
lods
incb
roll
bound
add
mov
dec
push
mov
sub
call
sub
xor
push
and
pop
into
scas
push
ss
out
xchg
xor
mov
add
push
ljmp
xor
pop
repz
ds
jbe
pop
inc
dec
leave
and
inc
int3
adc
cmp
sub
fsubl
push
push
xchg
test
push
add
cmpsl
mov
scas
call
mov
fwait
cmpsb
bswap
push
and
push
mov
imul
adc
fcoml
dec
sti
call
dec
test
fisubrl
rorb
jns
xor
or
ficoml
sti
mov
in
adc
lock
lcall
mov
mov
arpl
cmc
dec
movsb
mov
inc
lret
push
ret
orb
stc
test
pop
mov
loopne
push
mov
mov
cmp
pop
stos
std
jecxz
jno
mov
mov
pop
fisubs
pop
movsb
es
xchg
push
fcoml
push
cmp
cmp
adc
lods
push
mov
scas
jae
adc
mov
rcrl
xor
ss
jno
shrl
mov
sub
movsb
pop
outsl
mov
jg
cwtl
mov
jl
outsb
sarl
ret
fidivrs
push
xchg
test
or
gs
lcall
pop
ljmp
xor
aad
mov
jl
xor
xchg
pop
movsl
jl
xchg
dec
clc
push
mov
push
cs
xor
push
call
adc
mov
daa
cld
pop
je
mov
mov
daa
jo
shlb
subb
leave
out
mov
sub
cs
imul
inc
dec
in
sub
leave
jno
cmp
flds
pop
jecxz
cwtl
jns
xor
add
lret
jmp
mov
ret
out
into
in
cld
adcb
mov
loope
or
in
pop
sub
cltd
gs
repz
ret
add
lea
sub
mov
xor
and
lret
shld
ds
jo
popa
addr16
jmp
inc
push
scas
les
sub
cmp
outsl
hlt
mov
xchg
inc
pop
sub
ds
pop
add
xchg
adc
xor
daa
adc
je
adc
and
fisttpll
dec
loopne
inc
inc
js
aad
mov
adc
sbb
or
stos
int
lds
dec
or
out
icebp
lods
mov
shrb
fcompl
out
dec
imul
imulb
xor
ja
add
pop
into
cs
repz
mov
in
inc
sub
mov
mov
ret
stc
lcall
test
popf
mov
lods
shll
dec
in
cmpsb
popa
pop
sahf
xchg
fisttpll
pop
xor
outsb
cmp
fmul
test
or
pop
xchg
out
orl
xchg
pop
cmp
inc
loopne
ds
and
mov
aam
lret
xchg
or
repnz
mov
cmpsb
inc
pop
sti
lret
enter
imul
xor
js
mov
out
add
call
push
inc
std
les
jle
jo
xlat
mov
inc
pop
notb
fldpi
mov
pop
incb
mov
dec
pop
inc
adc
pop
in
fwait
cwtl
jg
mov
pop
adc
xchg
incb
jle
addb
adc
stc
pushf
push
dec
movsl
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
