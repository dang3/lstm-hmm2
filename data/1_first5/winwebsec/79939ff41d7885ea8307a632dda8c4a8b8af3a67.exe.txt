sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
xor
xor
cmp
dec
lret
stos
xchg
pop
out
cmpsb
stos
pushf
rcrl
sub
ja
jns
mov
sahf
fidivs
test
pushf
sub
xor
inc
scas
add
insb
mov
cs
jecxz
shll
jbe
sbb
cmpsb
out
daa
mov
insb
push
fldenv
jmp
je
pop
sbb
adc
dec
adc
shlb
cmp
pushf
stos
lds
jne
into
mov
rcrl
cmp
cmp
inc
ljmp
je
movsb
hlt
fldt
add
xchg
pushf
loope
leave
dec
inc
mov
cwtl
mov
out
fwait
cmp
lret
push
lahf
push
into
xchg
mov
ja
popl
jae
sub
jns
adc
stos
test
mov
push
std
outsl
inc
inc
popf
imul
xchg
pushf
roll
pop
xchg
fisttpl
cmp
js
add
in
cmp
pusha
mov
and
ds
lcall
pop
ficomps
push
aas
roll
mov
addps
mov
lahf
or
mov
fistpl
sub
push
mov
mov
aam
daa
scas
cmp
out
push
aaa
std
mov
mov
mov
mov
dec
adc
push
push
in
leave
loop
daa
lea
jmp
stos
call
jl
loop
inc
adc
loope
add
mull
sar
arpl
fcmovnu
dec
adc
cmp
or
jbe
xchg
or
push
cli
inc
mov
paddusb
arpl
enter
push
lods
rcll
lods
fisubrs
outsb
push
sub
sub
jmp
mov
ret
xchg
test
xorb
mov
push
sbb
mov
lods
iret
fs
ljmp
shlb
jnp
add
sbb
pop
mov
dec
push
aam
repnz
aam
je
mov
into
aas
in
pushf
or
push
sbb
jle
shll
aas
sbb
mov
es
in
ja
xchg
test
popa
inc
shlb
or
adc
pushf
xor
xlat
sub
stos
push
repnz
out
push
jb
mov
add
inc
in
mov
std
roll
mov
dec
dec
data16
fnstenv
pop
shrl
fbstp
cmp
adc
xlat
or
rolb
mov
cmp
aas
cmp
arpl
xchg
data16
xor
and
div
cld
sbb
int3
mov
xor
push
std
jnp
out
insl
lods
loopne
xor
add
scas
sbb
and
jbe
addr16
mov
dec
pop
call
jno
sbb
cmp
cmpl
pop
jp
enter
dec
xor
inc
call
std
icebp
sub
cmp
fdivrp
dec
jne
dec
shlb
mov
pop
mov
cmp
sub
movsb
subl
aam
adc
inc
aam
fcoms
es
sbb
mov
inc
fbstp
nop
mov
decl
mov
shlb
dec
loop
fdivs
mov
jae
iret
fsts
iret
int3
inc
cmp
leave
xchg
fisttpl
inc
sahf
xor
inc
or
inc
lahf
mov
inc
in
sub
dec
cli
cmp
cmp
fisttpl
fwait
mov
add
sti
faddp
push
jmp
pop
push
mov
and
mov
mov
mov
mov
popf
xlat
mov
popf
mov
sub
gs
rcl
jns
outsb
pop
loop
decl
fwait
dec
int
aad
pop
bound
mov
not
xchg
add
push
addl
fcompl
sbb
sub
call
jns
xor
xor
fsubrl
push
mov
in
xlat
cmpsb
inc
insl
scas
cmpsl
push
fwait
mov
imul
add
push
es
into
sub
dec
cmp
mov
mov
ja
setg
sbb
jp
outsb
repz
cwtl
into
xlat
aam
push
inc
enter
push
mov
xchg
js
mov
aam
loop
and
mov
mov
mov
push
repz
xchg
inc
nop
mov
add
add
pop
insl
mov
mov
es
stos
inc
mov
aas
subb
adc
adc
dec
cmp
sbb
sbb
lock
test
jg
and
push
gs
push
inc
adc
add
add
rclb
dec
les
in
scas
mov
xchg
cmpsb
movsl
dec
enter
add
aad
addr16
outsb
in
pushl
repnz
out
cwtl
rcll
js
lods
xor
lods
pusha
xor
jnp
pop
dec
stos
lret
movsl
push
orl
repz
xor
sub
cli
lret
js
cmp
sahf
mov
int3
xor
clc
add
popa
mov
out
xchg
in
add
xor
cmpsl
jae
imul
in
call
into
inc
mov
fldenv
jmp
add
push
scas
out
xchg
jae
or
jecxz
cli
pop
aam
push
adc
and
shld
pop
fwait
aaa
iretw
fisttpll
daa
pop
jno
inc
repnz
push
xchg
movsl
out
jge
and
idivl
loope
pop
jmp
hlt
jb
lock
dec
ret
lahf
loop,pt
shl
or
out
add
stos
jmp
or
cmpsb
pop
push
negb
jg
mov
icebp
push
push
insb
mov
jmp
mov
dec
leave
inc
loop
jl
leave
xchg
or
mov
jne
adc
rol
imul
and
cmpsb
mov
cltd
stos
adc
fs
push
xor
sub
sub
cmp
loope
jne
lahf
mov
sub
dec
in
mov
dec
mov
loop
mov
or
or
and
sub
dec
jae
repnz
movsb
inc
scas
inc
sti
mov
hlt
sahf
stos
outsb
cmp
lods
or
adc
sti
mov
test
out
repnz
push
lods
les
jg
hlt
mov
aas
int3
sbb
push
dec
jns
insb
daa
lea
sbb
jp
push
popa
and
andl
outsb
inc
add
neg
mov
inc
sub
js
mov
daa
fsubr
jmp
add
add
xchg
int3
push
adc
xchg
mov
fimuls
and
inc
cmp
outsb
or
sub
adc
or
dec
mov
adc
add
loopne
popf
stc
inc
dec
in
pop
fisubrs
cmp
jae
cld
mov
pop
mov
push
dec
rcl
mov
mov
ss
test
ds
jge
aad
pop
mov
xor
add
or
pusha
or
leave
les
nop
or
or
or
push
xchg
push
jle
dec
push
jecxz
fwait
leave
cmp
int3
insl
outsl
xor
push
jg
jo
and
inc
shrl
mov
xchg
push
mov
ss
xor
push
pop
in
pop
adc
inc
testl
jo
daa
inc
cmc
xchg
idivl
push
sbb
pushf
pop
dec
daa
jns
mull
inc
jl
mov
shl
imul
sub
pop
movsb
mov
out
inc
and
fldl
dec
dec
fstp
mov
xchg
ds
push
inc
nop
out
and
inc
dec
xchg
mov
jl
sbb
push
mov
dec
outsb
dec
push
inc
xor
dec
das
jo
cltd
shl
lret
std
or
fsubl
ret
pop
test
dec
arpl
mov
shl
insb
rcl
sub
insb
xchg
push
add
stos
sub
lock
add
inc
shl
addr16
cld
pop
inc
js
push
jmp
pop
cmp
scas
mov
xlat
gs
mov
lock
jo
cmp
movsb
inc
and
sbb
sti
dec
inc
rorb
dec
shll
popa
mov
cmp
cld
adc
shlb
dec
je
mov
loope
daa
dec
pop
mov
incb
test
push
and
mov
sbbb
arpl
jno
or
sub
aam
imulb
xchg
lahf
loopne
mov
mov
add
push
adc
and
nop
add
or
pop
pushf
into
add
and
mov
xchg
lds
test
adc
dec
ret
mov
repz
xor
in
push
sbb
mov
or
and
and
push
xchg
ja
sub
sub
cs
adc
pop
lock
cmp
dec
repnz
lret
mov
imul
pusha
inc
pop
cmovae
sbb
pop
imul
jb
pop
sbb
cmc
stos
sub
jmp
popa
and
xor
movsb
mov
or
inc
sbb
xchg
loopne
hlt
in
xlat
leave
lods
xchg
push
cmp
test
sti
outsl
fildl
mov
jg
lret
cld
sub
dec
jg
mov
adc
push
mov
cmp
mov
jo
ss
pop
fdivrs
jbe
adc
cmp
sbb
ficomps
xor
push
repz
rcll
test
adc
mov
xorl
movsb
ss
add
sub
jbe
arpl
int
pop
sbb
cmpsl
mov
fsubl
mov
sub
pop
xchg
inc
out
lret
call
ds
data16
jb
sub
inc
test
out
fsubr
add
pusha
arpl
sbb
out
lds
push
outsb
pop
shr
jg
lods
scas
mov
das
push
outsl
inc
push
inc
test
scas
clc
or
sbb
or
movsl
push
fsub
push
push
inc
mov
ret
xlat
lods
jo
fwait
lcall
test
mov
cmp
out
and
aam
fdivl
and
movsb
loop
push
xor
je
out
push
cmpsb
adc
ret
inc
push
xorb
mov
mov
add
jg
mov
testb
push
loope
jg
mov
adc
mov
adc
add
jbe
out
xchg
lcall
arpl
arpl
das
in
jmp
pusha
daa
jecxz
sbbb
test
ret
lret
push
daa
xlat
rcl
insl
jle
filds
es
jecxz
clc
pop
jns
jge
arpl
insl
jmp
dec
mov
sub
movsl
sbb
call
push
mov
mov
sti
test
cmpsl
mov
sub
lods
xchg
push
ret
xor
pop
cmp
shrb
sbb
jg
aam
lock
jecxz
hlt
push
rcr
repnz
std
sub
cmp
rorb
sub
cmp
sbb
mov
pusha
or
and
push
mov
sahf
pop
je
adc
lea
shlb
stos
cmp
je
cmpsb
or
imul
or
xrelease
lods
pop
mov
test
mov
imul
pop
sbb
nop
cli
fidivrs
jp
cmp
jo
in
idiv
pop
jmp
xor
mov
mov
sahf
jo
pop
lcall
adc
sahf
xor
test
or
dec
and
jae
loop
and
jmp
push
adc
xlat
mov
lock
inc
fs
xor
cmp
leave
xor
repnz
iret
and
loop
xchg
cli
add
mov
movsl
sub
lea
add
jb
je
pop
sarb
mov
jns
lret
dec
sahf
faddl
mov
jne
sti
and
arpl
fcompl
mov
add
pop
xchg
bound
or
inc
xchg
jg
or
pop
pop
dec
call
orl
cmp
jg
ja
jle
mov
lock
dec
mov
int
push
ljmp
pusha
lahf
sbb
sti
subl
xchg
xor
cwtl
xchg
into
xor
roll
add
scas
into
imul
push
cwtl
cli
hlt
scas
sbb
repz
aad
inc
repnz
mov
dec
loopne
in
aaa
cmp
or
movsl
dec
leave
div
fidivs
jp
data16
negb
xorl
into
fwait
dec
pop
stc
xor
cmp
dec
fnstenv
test
add
jno
adc
inc
sbb
sub
aad
jecxz
pop
push
or
jl
and
subl
call
mov
mov
pop
sub
pop
xchg
dec
out
pop
cli
push
jb
push
mov
push
dec
mov
pop
cmp
rorl
push
sub
and
xchg
aad
adc
movsb
ret
xchg
rcrl
xchg
lahf
rorl
pop
sbb
mov
loope
mov
lahf
outsl
int3
shll
add
loope
fnstcw
js
stos
gs
sbb
and
aad
or
or
cld
pushf
cmp
cmp
sub
push
mov
and
scas
jmp
lcall
or
in
loop
jmp
arpl
loopne
or
lret
jae
testb
mov
es
jae
outsb
outsl
pushf
add
inc
pop
call
pop
or
fs
or
stos
subb
pop
pop
std
popa
cltd
sti
pop
xchg
jle
popw
lret
push
fistpl
mov
imul
cmp
into
sub
xor
jbe
xor
push
mov
ficomps
xor
loop
dec
sub
fwait
mov
mov
mov
pop
mov
mov
cmc
add
mov
out
or
push
mov
dec
xchg
cmpb
dec
adc
test
mov
inc
cmpsb
pop
mov
test
xor
cmp
sbb
jo
sahf
clc
mov
sub
loop
cmp
lret
mov
inc
lds
cwtl
ljmp
and
int
in
xchg
fnstenv
aam
fs
xor
scas
out
shrb
fnstcw
sarl
popf
in
or
fs
test
cmpsb
lea
cmp
adc
or
inc
arpl
in
cmp
addr16
lods
pop
lods
pop
push
dec
mov
es
int3
mov
fwait
in
dec
loop
adc
outsl
and
xchg
shr
mov
jmp
aad
test
inc
fwait
es
ss
lret
lcall
sub
push
mov
in
sbb
jb
out
sub
dec
mov
adc
sub
xchg
add
xchg
lods
push
xor
stos
loopne
pop
repz
sbb
jae
sbb
icebp
cmp
fcompl
test
add
dec
mov
mov
xor
ret
ss
lret
fstl
cld
testb
imul
push
cwtl
inc
xchg
cmp
loopne
cmp
inc
aaa
push
stos
lods
or
loopne
mov
add
xchg
mov
fst
lods
push
adc
in
jmp
sub
cmp
pushf
ret
cmc
in
dec
pop
inc
sub
add
shrl
sub
sub
mov
out
test
mov
es
xchg
out
or
negb
push
adcl
arpl
lods
or
sub
in
fwait
sbb
mov
outsb
mov
clc
inc
mov
sub
inc
popf
loopne
andb
xchg
pop
mov
jnp
sbb
loope
mov
cmpb
xchg
mov
test
sbb
fbstp
pop
jb
mov
push
sti
pushl
iret
dec
ret
mov
mov
and
mov
dec
adc
xor
add
incb
add
jns
mov
enter
xchg
cmp
mov
fidivl
xor
bound
sub
loopne
mov
das
xchg
rcll
ret
bound
rol
inc
inc
out
add
test
xor
stos
iret
mov
sahf
and
xor
mov
scas
cld
pop
cmp
cmp
jno
sbbl
or
mov
inc
es
outsb
dec
test
mov
jecxz
divb
pop
sbb
shll
repnz
jnp
pop
lret
push
in
imulb
mov
sub
pop
jp
enter
lds
mov
pop
arpl
and
ret
add
int
mov
cmp
cwtl
fs
cmp
mov
dec
cli
shrb
xor
hlt
jnp
ret
adc
aas
subb
mov
scas
sbb
jo
mov
jae
xchg
jp
or
mov
sarb
add
sbb
or
je
pop
cmovno
xor
cmp
sub
adcb
xor
xor
repz
push
inc
int3
fmull
jb
iret
sbb
jp
jmp
dec
in
imul
fstl
or
lock
data16
sub
lods
lret
inc
das
mov
xchg
mov
pop
push
xor
cli
add
push
push
sbb
shl
and
and
xchg
xchg
add
data16
inc
cwtl
mov
aam
pop
and
jbe
into
insl
pop
scas
xchg
imul
jmp
mov
push
cli
sub
mov
popf
movsb
shrb
xchg
push
xlat
mov
jl
cmp
and
out
sub
mov
sub
fcomip
lcall
and
test
xchg
test
fcmovnu
dec
xor
and
fdivs
popl
stc
sarb
push
mov
inc
pop
push
add
sub
mov
pop
or
popf
out
adc
aad
rcrl
sbb
outsl
int3
imul
call
sub
xor
or
xchg
push
and
pop
fisubl
xor
lahf
xor
sahf
cmp
mov
jne
into
cmpsl
mov
cld
adc
and
mov
test
push
push
or
add
mov
jbe
out
lahf
movsl
rcll
and
lret
fwait
and
sbb
je
mov
mov
ret
pop
and
and
or
cmc
pop
pop
adc
jns
les
icebp
roll
in
cmpsb
lahf
icebp
nop
fiaddl
mov
or
push
repnz
in
cmp
rorl
push
shl
je
aas
push
push
data16
mov
jg,pn
test
xlat
pop
xor
inc
movsb
cmp
iret
lret
test
ljmp
cmp
mov
fidivrl
loope
mov
cli
jns
mov
test
subl
divl
fiaddl
cmpsb
xchg
mov
lret
pop
ss
icebp
sbbb
sti
pop
into
fistpl
inc
xor
ret
lret
in
xchg
xchg
push
dec
cltd
sbb
decl
sub
xor
inc
push
adc
sbb
pop
inc
test
leave
enter
lock
dec
scas
addl
lret
rcrb
mov
lcall
and
inc
sub
xor
cmp
ljmp
push
popf
xor
xchg
jg
mov
xlat
subb
mov
push
dec
icebp
in
rcrb
xor
aas
and
stc
xchg
movsb
dec
or
fdivs
out
call
ljmp
add
insb
add
cmp
pop
adc
shl
jae
jle
in
push
sub
pushf
xor
arpl
addl
out
mov
and
in
aaa
outsb
pop
mov
push
mov
addr16
mov
arpl
pushl
aam
jmp
dec
out
mov
mov
add
test
pop
pop
je
addr16
rcll
call
jo
bnd
sahf
testb
ljmp
jecxz
adc
je
ss
test
jmp
xor
loope
xor
scas
sbb
orl
data16
or
xchg
pop
neg
lea
outsb
leave
ret
and
or
jl
jb
mov
scas
and
lahf
add
add
stos
insl
xchg
inc
inc
jo
cmp
push
dec
pop
lods
adc
imul
jg
jnp
xlat
std
dec
dec
xchg
jns
loop
dec
xchg
dec
add
lods
jbe
and
pop
sbb
dec
adc
mov
add
jae
pop
lods
es
pop
dec
and
or
aas
sub
cmp
xchg
test
insl
and
add
pop
add
aad
push
or
push
push
and
aam
dec
mov
cli
fs
xor
insl
pop
xchg
cmp
movsl
and
das
sub
or
js
retw
mov
adc
cld
loope
jecxz
pop
inc
dec
imul
xchg
dec
cmpsb
cmp
sub
ds
and
fisubrl
aaa
mov
mov
ret
js
inc
data16
movsb
push
and
in
jns
jne
movsl
inc
and
mov
mov
gs
mov
mov
and
into
mov
lret
stc
cwtl
imul
cltd
and
popa
mov
pusha
adc
aas
aaa
cmpsb
mov
push
dec
adc
repnz
push
aam
call
pop
dec
out
cmp
test
sbb
add
xor
sub
pushf
das
xor
iret
dec
outsb
stos
sub
jg
leave
cmpsb
insb
test
or
xorb
addr16
jecxz
jl
fldenv
in
sbb
js
sbb
mov
imul
bound
xor
arpl
jnp
xchg
xor
push
xchg
and
fmull
hlt
xor
adc
cmp
pusha
pop
std
dec
mov
filds
lcall
rorl
sti
xor
pop
xor
sti
or
push
or
in
scas
adc
rcrl
xchg
stc
add
xchg
pusha
mov
inc
pop
inc
daa
cmp
jle
and
pop
bound
sbb
repz
mov
jle
in
aas
add
mov
lahf
lods
rclb
push
mov
mov
pop
jmp
test
mov
jb
mov
fldenv
dec
pop
jle
mov
bound
push
mov
std
lret
push
jle
outsl
out
jmp
ja
and
jmp
xchg
xorb
lret
mov
adc
lock
sti
loopne
sbbb
inc
ljmp
xchg
je
lods
ss
mov
and
cvtpi2ps
ljmp
outsb
mov
mov
and
and
dec
xchg
out
pop
mov
in
shlb
rcl
pop
add
shrl
loopne
movsl
imul
or
xor
push
inc
btr
sub
loop
push
xchg
push
pop
call
fs
dec
test
mov
mov
adc
insb
out
popa
mov
data16
imul
xchg
xor
add
pop
or
mov
inc
fdivrs
iret
push
add
or
pop
nop
and
sbb
sub
jb
leave
mov
xlat
cmpsb
stc
sub
out
in
iret
add
sub
push
push
xchg
cmp
pop
pop
mov
mov
inc
mov
loope
out
mov
movsb
add
mov
mov
dec
bnd
into
dec
and
addr16
arpl
or
mov
ret
outsb
dec
in
push
test
mov
jbe
aas
add
inc
enter
test
pop
pop
push
xchg
idiv
push
lcall
stos
sbb
outsl
jae
adc
fnstenv
pop
sbb
inc
jns
rcrb
mov
cmpsb
rorb
sahf
adc
dec
imul
hlt
xchg
decb
mov
bound
xchg
inc
loop
jge
mov
pop
ss
ss
xchg
mov
enter
sbb
dec
jmp
test
mov
jmp
dec
es
enter
cli
mov
test
push
hlt
movl
cs
movsb
push
rolb
repnz
and
mov
dec
inc
je
jns,pn
pop
lret
cltd
in
mov
fsubs
push
jge
mov
adc
pop
cmp
inc
rcl
jnp
aad
cwtl
dec
mov
inc
mov
xchg
mov
mov
pop
cmp
dec
mov
das
out
imul
pop
pop
dec
sar
je
cld
movsl
lods
add
inc
sbb
cwtl
gs
mov
mov
ret
inc
adc
mov
xchg
dec
sub
sarl
ja
fsubs
shr
cs
popf
xchg
inc
mov
fcompl
cmc
mov
into
sbb
push
xor
lahf
repz
xchg
fwait
inc
adcl
mov
fldt
dec
xlat
cmp
mov
sahf
sbb
mov
popf
push
inc
inc
mov
imul
stc
inc
jle
sub
cld
adc
scas
shlb
pop
push
js
jmp
in
cmpsb
jmp
dec
pop
push
mov
lcall
dec
leave
mov
ss
lea
outsb
rorb
cltd
push
cmp
pop
and
cmp
test
movsb
sub
cmp
cmp
repz
fdivrs
stos
ret
fs
mov
notb
int3
movsl
sarl
jle
mov
popf
jle
mov
xor
hlt
lahf
loop
mov
call
pand
fcomip
mov
xchg
popa
push
sbbb
push
loope
xorb
mov
mov
mov
push
sbb
fists
out
inc
shll
xor
popf
out
cmp
int3
jo
adc
das
xor
mov
sahf
ljmp
sbb
ds
xchg
sahf
pop
cmp
insl
mov
mov
in
sbb
pop
mov
in
and
or
fwait
adc
notb
aas
cmpsb
roll
fisttpl
movsl
cmpsb
inc
into
and
int
cmc
shlb
fwait
outsl
cmpb
and
stos
lock
and
jne
pop
cli
xchg
mov
lcall
outsl
cmpl
xor
xor
or
repnz
adc
popa
and
call
ja
testb
sbb
fcmovb
js
test
or
or
lds
fs
pop
adc
xchg
roll
and
adcb
out
or
cmp
lock
mov
jno
cmp
sub
push
pushf
mov
inc
fisttps
jns
call
mov
fdivs
sbb
push
pop
sbb
sbb
xor
fisttps
add
inc
jne
ljmp
mov
cld
movsl
push
shlb
loop,pn
mov
pop
fcmovu
dec
repnz
push
pushf
mov
and
cmpsb
test
pop
movsl
mov
movsb
mov
pop
mov
mov
sub
sbbb
inc
rorl
cmp
pusha
fstpl
mov
push
sub
test
xor
test
adc
mov
es
jns
mov
data16
dec
lods
data16
and
push
sub
or
roll
aaa
push
fdivrl
push
cmc
dec
adc
shrb
test
cmpl
loop
dec
pop
mov
hlt
lods
pop
adc
popf
inc
ffreep
push
cmp
rcll
mov
aad
test
add
test
pop
inc
int3
popf
aas
mov
xlat
lock
jge
or
aam
insb
jmp
test
icebp
jbe
scas
mov
lahf
lcall
and
incb
test
rclb
int3
test
pop
cli
cmp
inc
cs
mov
xlat
dec
adc
stos
or
out
das
pop
ss
jno
pop
out
loopne
mov
je
minps
mov
mov
fisttpl
in
jecxz
repz
imull
loopne
call
ret
es
xchg
push
clc
adc
and
mov
mov
sub
sahf
stos
pushf
cwtl
ret
jge
add
sbb
dec
mov
xor
stos
aaa
inc
sbb
insb
js
mov
addr16
fsts
push
push
bound
outsb
shll
shl
dec
mov
mov
push
inc
cmp
into
adc
inc
pop
lods
outsl
and
sub
mov
mov
mov
rcrb
xor
push
rcrb
sbb
cwtl
call
cmpsl
and
dec
daa
mov
add
or
cmp
ds
stos
mov
lods
dec
push
out
das
mov
and
cmp
dec
rcrl
iret
popf
rorl
mov
in
in
out
cld
psubusb
sbb
addb
or
mov
and
clc
and
in
xchg
in
sub
insb
jo
outsl
mov
mov
jecxz
jg
pop
aaa
xchg
loope
and
iret
in
aam
std
push
adc
imul
xchg
lock
cltd
dec
out
inc
cwtl
mov
xchg
sub
push
pusha
arpl
int
movl
aas
jg
in
aam
pop
dec
insl
add
add
cmp
cmp
ret
popf
stc
xchg
or
mov
dec
or
xor
xor
jns
mov
push
inc
jno
negb
mov
popa
push
pop
sbb
sbb
add
add
std
jae
lea
ds
lea
dec
adc
daa
pop
scas
jae
fists
cmp
sahf
int3
push
popa
cmp
sti
popf
jmp
out
and
cmpsl
cli
dec
pop
popa
jb
cmp
popa
aaa
aam
ss
inc
dec
hlt
xor
icebp
xor
mov
push
mov
sahf
inc
sbb
push
pop
or
es
add
push
inc
mov
out
call
inc
add
xchg
push
dec
add
dec
sbb
lods
ds
inc
jmp
xorb
push
leave
repz
in
push
mov
outsb
pop
rorl
xor
in
jne
ret
decl
rolb
dec
inc
sti
xor
aaa
decl
jmp
bound
mov
repz
out
ror
and
dec
aam
aam
sbb
fsts
jle
cli
or
cmp
movsb
pop
fwait
add
cmp
jmp
pop
push
xchg
fstl
adc
lock
call
xor
mov
icebp
pop
xor
sbb
mov
jecxz
idiv
addr16
mov
mov
test
mov
ret
jo
ret
pop
pop
out
ret
xchg
inc
jae
or
rcll
and
sbb
cwtl
fcmovu
ljmp
and
hlt
push
mov
dec
lret
sub
jnp
sbb
iret
mov
outsb
xor
push
adc
orb
divl
xchg
iret
nop
pop
dec
js
test
push
cs
fsubl
mov
sbb
adc
mov
sub
and
stos
mov
lock
imul
push
push
leave
lret
insb
mov
shrl
insb
insl
push
cmp
add
xorb
lret
div
mov
std
movsb
mov
sub
jge
pop
cmp
out
rcll
hlt
dec
inc
rolb
repz
push
outsb
push
in
xor
push
insb
mov
sub
rcr
sub
or
pcmpgtd
adc
sbb
rorb
adc
xchg
les
je
insb
cmp
xor
daa
fstps
xchg
pop
xchg
je
push
lea
mov
pop
jns
mov
dec
jmp
mov
std
inc
insl
mov
ja
call
fcomp
adc
fldcw
cld
loope
push
mov
mov
and
sahf
insb
jmp
nop
ret
inc
inc
jge
popf
push
lods
fcoml
lea
dec
dec
cmp
pop
stos
pop
shll
pop
push
inc
adc
adc
xchg
xchg
sbb
and
xor
or
and
xor
sub
adc
mov
mov
jbe
xor
mov
mov
xor
add
popf
ror
icebp
pop
lea
cmpsl
out
sub
push
mov
std
enter
imul
enter
popw
ror
in
aaa
mov
popa
mov
xchg
in
in
push
out
jo
insl
pop
and
jp
cmp
inc
push
rclb
dec
xor
test
pop
addr16
xchg
jne
mov
jmp
jo
mov
pushf
notb
sbb
adc
cmp
insl
adc
dec
mov
clc
add
lahf
and
pop
mov
mov
stc
cmp
in
fwait
mov
and
scas
in
mov
shl
ss
popf
gs
into
cmpsb
push
xor
cli
jge
icebp
into
mov
lret
cmp
addl
xchg
sahf
inc
push
inc
shlb
fadd
xchg
pop
fbld
daa
jbe
xchg
add
pop
push
xlat
dec
out
aam
into
pusha
test
fst
mov
mov
xchg
xor
dec
push
outsb
mov
cmpsb
dec
loopne
or
push
dec
and
leave
jo
lea
enter
add
in
add
xchg
jo
push
jae
or
jae
test
cs
jcxz
mov
cmp
mov
sti
cli
fucomip
push
inc
pop
data16
dec
inc
mov
mov
call
test
sub
in
ja
fs
or
out
dec
scas
stos
repz
inc
jp
jmp
add
or
icebp
repz
xor
inc
cltd
push
dec
dec
shrb
ret
and
test
in
fldcw
sub
call
or
xor
adc
icebp
mov
daa
mov
js
jmp
lock
push
adc
xchg
test
scas
cmp
jb
nop
lds
repz
pushf
loop
imul
adc
adc
cmp
sbb
out
imul
int
stos
jg
dec
hlt
outsl
jge
mov
sub
and
pop
test
push
adc
js
adc
jne
xlat
jge
out
jl
aad
xacquire
adc
cmpsb
cld
movswl
mov
adc
pop
push
lcall
xchg
and
adc
jg
xchg
gs
xchg
das
add
sub
aam
das
push
adc
jno
xor
icebp
or
mov
sbb
sub
mov
les
mov
popa
enter
xchg
test
aad
dec
loope
ds
sbb
mov
loop
lcall
pusha
arpl
cmpsb
push
cmp
pusha
scas
cmp
pop
and
out
imul
bound
dec
adc
es
dec
mov
push
hlt
sbb
mov
sub
jle
or
cmpsl
xchg
iret
in
mov
mov
in
dec
test
sbb
push
gs
xor
rorb
add
cwtl
int
insb
inc
pop
pop
addr16
popf
mov
push
xchg
loope
mov
push
push
cli
inc
adc
jmp
mov
dec
and
cmp
sub
in
push
insl
inc
shlb
inc
push
repz
push
sub
add
cmc
arpl
push
add
notb
movsl
xor
push
pop
pop
loopne
mov
and
mov
scas
stc
add
or
repz
push
dec
adc
inc
mov
repz
cmp
pop
mov
and
pop
mov
and
xor
outsb
sti
outsb
xor
add
push
cld
or
adc
enter
ret
rcll
ficomps
and
stos
test
push
test
push
inc
adc
mov
rcl
ja
xchg
pop
or
xchg
sbb
xor
ret
test
outsl
push
scas
dec
ja
idivl
sbb
push
inc
xchg
push
leave
dec
or
xchg
mov
repz
imul
pop
int3
icebp
and
cltd
adc
xchg
cld
xchg
filds
jl
popa
jne
pop
rorb
and
sbb
loopne
test
shl
inc
mov
jne
jmp
adc
push
sub
xchg
inc
movb
cmpb
aad
jecxz
dec
xchg
mov
mov
in
ss
pop
push
mov
jmp
fisttps
inc
rorb
add
arpl
add
lods
push
insl
push
rcrl
xchg
or
ja
push
popl
les
dec
int3
jo
ss
cmp
mov
mov
mov
movsb
mov
sub
and
and
js
sbb
add
jns
loop
inc
jo
and
fistpl
es
fildl
sbb
int
cmp
mov
rcrb
and
jg
je
mov
in
ret
fisubs
int3
jns
push
fcompl
add
jmp
cmp
nop
push
mov
inc
cltd
mov
push
aas
test
cmp
adc
push
ss
mov
icebp
and
pop
ret
fcomp
mov
fisubrl
cmp
ja
jo
pop
adc
pop
or
pop
and
jmp
fs
mov
jb
es
pop
fcomip
inc
int
sbb
jmp
mov
xor
rorb
roll
pusha
pushf
jno
pop
pop
xchg
mov
sub
pop
push
or
cmp
push
and
or
nop
out
addr16
push
iret
inc
xchg
pushf
mov
imul
fstps
adc
push
cwtl
repnz
pop
fs
das
mov
push
inc
push
aas
xor
mov
aad
mov
cmp
xor
shlb
pop
mov
jno
jp
xchg
xor
cld
dec
pop
lret
jge
cmp
insb
mov
xchg
leave
cli
popa
dec
sub
rcl
cs
repnz
je
movsb
ss
adc
fisubs
mov
inc
les
push
push
daa
int3
sbb
cmp
cmp
fidivrs
push
jecxz
mov
adc
add
sti
add
in
mov
inc
aam
in
cmp
aas
shll
mov
scas
xchg
and
push
sbb
fstpl
shr
lret
adc
sub
imul
dec
jge
jb
cmp
xor
or
inc
inc
mov
call
in
cs
rclb
dec
inc
shll
xorb
in
aaa
sub
mov
mov
pop
pop
push
popf
std
dec
scas
mov
stos
cmp
lds
cmovp
add
xor
push
out
ret
cmpsb
shr
insb
call
cmp
iret
in
int3
andb
xchg
add
or
les
xchg
sub
lret
mov
dec
in
pop
cmp
fisubrl
sub
jle
push
xchg
lods
adc
jne
adc
push
pusha
dec
loopne
sbb
sti
inc
xor
out
test
jb
dec
dec
addr16
shl
sbb
int
mov
inc
mov
loopne
jne
popa
popl
call
mov
aas
icebp
lods
push
fidivrl
jp
push
cmp
xor
pop
push
push
and
jg
sarb
call
sti
js
cli
shrl
daa
and
les
inc
xor
repz
jmp
jp
cmp
outsl
gs
xchg
mov
push
and
add
je
fcmovnbe
mov
sub
push
fsubrs
dec
push
jge
in
in
aad
leave
dec
lret
pop
mov
jns
movsl
pop
bound
mov
sbb
insl
jmp
jp
pop
mov
xorl
mov
fdivr
dec
mov
addb
test
mov
nop
xchg
pusha
adc
dec
adc
inc
fsubs
outsb
mov
and
lods
insb
stc
arpl
or
xor
mov
mov
mov
dec
data16
scas
jmp
inc
lods
and
pop
or
insl
and
pop
pop
mov
lock
xchg
inc
push
sub
leave
or
cmpsb
dec
mov
mov
orb
daa
xchg
push
loop
or
xor
push
in
pop
ja
jb
mov
rorb
cs
movsl
repz
bound
ret
mov
cltd
mov
sub
jmp
pusha
cmp
in
into
fnstsw
lahf
push
or
hlt
cmp
xchg
push
es
cmc
jmp
mov
les
cmp
add
clc
repnz
xchg
mov
lret
mov
in
and
clc
jns
mov
sbb
movsb
iret
push
lods
js
stos
mov
mov
jae
iret
test
fucom
cmpsb
aad
dec
push
loopne
nop
add
mov
cli
sbb
iret
jb
dec
push
hlt
shr
xor
mov
insl
or
jo
or
jge
out
mov
andl
cmpsl
xchg
jp
loope
lcall
xor
jl
cmpsb
les
daa
xchg
inc
mov
stos
push
push
jle
jge
cltd
pop
cmp
jg
cmp
dec
and
out
mulb
fcoms
jae
xor
cltd
jg
repz
mov
xchg
add
inc
mov
pop
and
cld
jg
sub
jmp
outsb
in
mov
testb
push
daa
cli
cmp
in
sbbl
ljmp
adc
int
mov
lea
push
ds
pop
jp
imul
push
xor
insb
sub
fsubs
inc
dec
push
insb
cmp
pop
sarb
sub
mov
adc
and
ret
sarb
lods
pop
cmp
or
cmc
loopne
iret
movsb
jle
test
xchg
daa
xchg
adc
and
in
scas
mov
jns
stos
rorl
mov
push
aas
push
sti
icebp
mov
lock
adc
hlt
pop
outsb
push
add
clc
jmp
mov
fidivs
cmc
rcll
int
ror
and
jbe
inc
jle
shlb
repz
or
mov
fisubl
jns
mov
inc
ret
scas
pusha
movsl
xchg
add
sub
repz
fs
inc
sti
mov
shrb
sub
sub
out
push
pushf
add
sbb
push
cwtl
xchg
loope
fdivl
adc
fs
cmp
inc
cwtl
rcr
add
fcomp
inc
flds
andb
jmp
push
dec
push
in
movsb
adc
aam
aaa
iret
cmp
aad
mov
jae
mov
jge
sti
sub
shlb
movl
movsb
fildl
cld
sub
jmp
std
ja
cltd
fucom
or
lds
divb
pop
or
or
je
xchg
mov
sar
lret
mov
icebp
movsb
jno
and
fcmovnb
in
cmp
push
outsb
dec
dec
xchg
jnp
rorb
sbb
push
lods
jl
cmp
mov
sbb
les
xchg
mov
pushf
push
repz
sbb
add
cltd
in
in
mov
hlt
mov
cmp
inc
and
repz
rcr
fsts
xorl
scas
mov
push
into
xchg
adc
push
jmp
lods
push
std
aam
icebp
push
mov
xor
add
or
inc
test
aaa
es
xchg
fdiv
sbb
and
xchg
pop
and
xchg
outsb
inc
repnz
sbb
push
and
data16
aad
nop
sub
ljmp
icebp
or
sti
push
push
imul
xchg
xor
mov
adc
pushf
data16
jle
jo
ljmp
imul
pop
in
stos
push
add
push
push
mov
ds
cmp
xorl
xlat
sub
out
popa
sbbl
call
cmp
lea
dec
xchg
inc
loope
adc
lock
rclb
js
push
lods
xchg
jle
xor
and
fwait
sub
adc
adc
and
push
gs
fcmovne
push
pop
xchg
movb
sahf
sub
push
clc
and
lret
std
xlat
ss
rolb
loope
or
mov
pop
cwtl
cmp
pop
push
ja
ss
push
or
sbb
clc
cmp
shl
jge
notl
cmp
or
sub
aam
adc
mov
test
lods
std
pop
push
adc
or
arpl
pop
xor
jecxz
gs
xchg
add
sub
dec
xor
jae
xchg
fs
jge
jo
inc
jp
mov
es
xor
lcall
rcll
dec
das
and
imul
sbb
test
mov
pop
mov
repnz
adc
inc
mov
arpl
inc
xchg
mov
lods
aaa
xor
movsl
sarb
lods
jp
mov
dec
lret
stos
xchg
or
rolb
add
mov
push
enter
subps
pop
pop
push
push
insb
push
xlat
add
inc
xchg
adc
stc
adc
int
imul
loopne
fidivrl
cltd
popf
sub
pop
shrb
and
repnz
pop
iret
push
gs
sbb
sahf
movsl
adc
stos
mov
adc
mov
push
cmp
xchg
in
fcomip
add
rcrl
jle
pop
aad
fmull
loopne
push
ror
dec
pusha
mov
sahf
andb
mov
andb
cmp
fs
xchg
cmp
roll
push
popf
push
mov
repz
insb
inc
out
repnz
in
cmp
mov
out
and
cwtl
jmp
popf
ds
loopne
jl
mov
fiaddl
mov
inc
xchg
inc
adc
movsl
mov
daa
add
dec
xchg
ret
ret
dec
aad
cmpsl
lds
dec
mov
out
enter
adc
push
push
leave
roll
xor
cmp
add
mov
push
shl
push
leave
mov
add
dec
iret
fwait
inc
cmp
push
clc
ljmp
dec
int3
push
add
sub
jno
and
scas
mov
pop
pop
mov
imul
addr16
ret
lret
xorl
pop
sub
call
jo
cmp
and
push
into
in
addr16
inc
ds
rcll
push
int3
dec
sub
test
sarl
rclb
inc
popl
test
jle
push
nop
ja
rcrl
adc
outsl
add
subl
jnp
out
fstpt
ret
mov
aas
idivl
push
cltd
cmp
push
in
cmpsb
popa
repnz
push
and
jp
adc
mov
ljmp
pusha
add
repz
clc
cmp
pusha
in
jp
mov
push
orl
adc
mov
push
test
inc
pop
stos
test
outsl
test
jo
xorl
add
aad
add
sbb
or
stos
popa
pop
xlat
xchg
xor
mov
cmp
mov
xor
sbb
dec
insl
insb
jb
ljmp
arpl
add
sbb
jmp
pop
call
mov
lret
pop
mov
cld
dec
push
notrack
adc
sarl
dec
bndstx
jb
inc
dec
popa
jno
rorb
jb
xor
xlat
out
pop
rcrl
aaa
scas
int3
movsb
mov
xor
or
in
test
rol
dec
push
pop
cmp
test
leave
or
jae
shll
pushf
adc
mov
jns
sbb
push
xacquire
arpl
int3
ficoms
adc
push
inc
mov
xchg
adc
jb
or
push
mov
insb
cmpsb
les
dec
jmp
dec
ret
sbb
dec
mov
aam
pop
xchg
or
test
add
sub
cmc
add
fmull
call
lret
stos
shrb
std
fadds
pop
mov
int
lock
mov
andb
ja
adc
pop
pop
sbb
insb
inc
xchg
loope
mov
or
sbb
imul
jmp
out
insb
mov
je
cmp
push
orb
add
jnp
jo
push
sub
jns
mov
outsb
js
mov
sti
mov
mov
mov
test
scas
mov
cmp
adc
mov
jle
cwtl
jnp
insb
aad
call
data16
pusha
jge
shl
push
inc
xor
mov
nop
out
enter
in
psadbw
popf
or
mov
scas
inc
cmp
fwait
add
aad
ljmp
xor
pop
dec
push
notb
xor
movsb
sahf
rorb
pop
lods
xchg
push
lds
out
dec
cmc
pop
cmpsl
mov
jb
push
daa
leave
cli
xchg
dec
or
pushf
jp
xchg
dec
stc
mov
pushf
lcall
out
shll
stos
adc
test
fnstcw
xorb
lahf
call
mov
and
shl
movsl
add
lea
sub
ja
sbb
mov
shlb
ss
insl
stos
inc
sbb
dec
xchg
in
and
movsb
imul
inc
and
test
jne
lds
push
enter
xchg
aaa
adc
addr16
inc
pop
pop
test
pop
inc
mov
mov
or
adc
ret
mov
sub
sub
push
movsb
or
xchg
movsl
jmp
pop
arpl
fcomp
clc
cwtl
test
idivb
lcall
or
pop
sahf
mov
mov
jl
imul
push
dec
dec
cmp
das
lcall
sti
dec
data16
mov
xchg
push
pushf
pshufw
and
insb
dec
lds
cmc
bnd
loop
daa
xchg
test
mov
into
mov
xor
sbb
mov
jle
sahf
push
cmp
adc
push
lods
icebp
mov
push
repnz
sub
fildll
sbb
test
dec
paddusw
test
xor
nop
sub
cmp
repz
roll
mov
jge
not
movsb
cmp
jns
sahf
lods
test
in
sub
pop
ljmp
push
inc
adc
mov
add
hlt
mov
les
xchg
int
in
cmpsl
sbb
mov
ficoml
inc
xlat
scas
or
push
dec
xchg
xchg
shll
and
inc
adcb
and
inc
sbb
mov
mov
cmp
cmp
lods
xchg
inc
sahf
int3
sarb
xchg
test
pop
adc
outsl
addl
sti
sbb
sbb
pusha
loop
test
inc
xchg
push
adc
sbb
into
orl
in
inc
add
xor
inc
jle
mov
or
cmp
add
xor
xchg
fwait
jmp
jo
in
mov
push
out
pop
popa
loopne
fildl
fcoms
imul
rcrl
sahf
clc
nop
xchg
cmp
enter
inc
pop
dec
jp
ret
add
sbbb
in
jae
push
fsubl
jo
lea
loop
lcall
orl
xchg
fcomi
stc
nop
adc
shrl
dec
jnp
sub
adc
shll
jmp
inc
mov
jnp
sbb
clc
ss
push
jecxz
mov
cmp
lcall
test
inc
sub
mov
xor
insl
call
lret
scas
cvtps2pi
ret
hlt
in
jle
loopne
pop
setnp
sbb
arpl
fdivrs
add
adc
frstpm(287
cmp
lods
jnp
xchg
lods
push
ja
test
dec
cmpsb
std
xchg
lret
inc
outsl
push
sbb
popf
dec
xlat
shrb
loope
out
adc
xlat
push
dec
imul
pop
out
lea
pop
cmp
push
mov
lahf
mov
push
ficomps
popf
sbb
jmp
faddp
test
jb
adcl
jle
pop
or
push
xchg
in
iret
test
adc
push
mov
push
stc
mov
shrb
jo
or
xor
test
out
mov
adc
shll
ror
dec
iret
pop
jno
xchg
sub
xor
mov
mov
enter
xchg
inc
test
popaw
insl
shll
je
sbb
out
ljmp
ret
arpl
ljmp
adc
test
aas
mov
jnp
lods
cmp
aam
lds
cmpsl
inc
call
loope
cmpb
xor
pop
std
xchg
out
es
push
and
movsb
rolb
shl
adc
push
inc
sbb
xchg
mov
sbb
sbb
hlt
push
cld
cmpsl
mov
jbe
lahf
ljmp
add
int
mov
pusha
popl
cld
fs
and
pop
mov
les
in
ret
mov
mov
pop
dec
jns
sahf
ds
das
lret
jae
mov
cmp
iret
nop
dec
and
or
cmp
pop
subb
je
xchg
jmp
icebp
inc
mov
xchg
in
adc
fimull
movsl
sub
rorl
and
daa
mov
adc
push
das
xor
addr16
sub
pusha
call
stos
push
fwait
imul
and
mov
inc
mov
inc
call
mov
ret
mov
jb
leave
mov
arpl
push
fildl
push
nop
enter
mov
and
adcl
stos
std
mov
adc
scas
stos
sarb
adc
fsubrl
lock
mov
add
test
fwait
jl
fistps
xchg
jbe
iret
dec
stos
iret
shr
mov
nop
inc
lds
mov
push
add
cmc
shlb
add
xchg
jae
mov
and
push
dec
push
rorb
jmp
andl
mov
add
sbb
pop
xor
dec
add
iret
sbb
out
pop
arpl
movsb
push
imul
mov
test
dec
lret
sub
lds
sub
sbb
mov
mov
imul
mov
xchg
pop
adc
lret
cmp
xchg
xchg
xchg
cs
and
in
jecxz
cltd
mov
addr16
test
js
mov
adcl
or
xchg
mov
stc
incb
push
pushl
mov
mov
mov
and
das
decl
xchg
and
stc
mov
xchg
cltd
xor
shll
xchg
mov
inc
ljmp
lock
fdivrp
ret
aad
nop
imul
cmp
dec
mov
xchg
xchg
xchg
dec
lret
push
lret
cli
das
fxch
bound
push
sbb
out
jo
mov
xor
lock
cmp
pop
mov
xchg
inc
or
lcall
pop
or
cmp
mov
jbe
test
mov
shrb
push
ffree
dec
fwait
mov
int
int3
push
cs
or
push
nop
sub
xchg
add
cmpsl
dec
or
scas
fs
mov
das
fwait
cltd
or
mov
lds
fcoml
and
fstpt
outsl
in
fimuls
movsb
add
mov
test
outsb
out
subl
adc
cmpb
xor
add
jbe
and
cmp
mov
sbb
in
dec
pop
in
adc
dec
cmp
inc
cmp
stos
out
inc
lea
adc
sub
mov
cmpsl
into
mov
mov
mov
inc
bnd
imul
pushf
pop
in
aam
mov
orl
xchg
mov
into
lea
repnz
in
out
aas
mov
in
les
loopne
inc
dec
push
inc
jbe
xchg
and
sti
cltd
outsl
and
cmp
add
fwait
cmpl
xor
enter
js
cmpb
clc
mov
fistpl
testb
test
cs
xchg
xor
push
aaa
pop
xchg
shlb
js
repz
mov
lock
xchg
fimull
add
inc
aad
lret
leave
shrb
pop
es
xchg
fidivrl
xchg
inc
repnz
lret
jp
dec
dec
add
sbb
fstpl
std
mov
cmp
dec
mov
outsb
add
sub
lea
test
daa
incl
and
andb
or
in
mov
mov
xchg
sbb
iret
jg
or
push
pop
pop
jecxz
js
fiadds
or
and
loope
fidivs
inc
xchg
xchg
cmp
and
iret
adc
mov
cmp
xchg
mov
jb
pop
jl
out
rcrl
xchg
mov
push
addr16
test
jae
test
pop
aas
vmulps
stos
rcll
jbe
stc
pop
cmp
mov
mov
mov
add
xor
adcl
pushf
jns
pop
pop
in
push
lret
insb
xchg
or
lcall
addr16
xchg
scas
roll
and
mov
add
and
sub
or
shll
xor
mov
add
dec
popf
inc
adc
sbb
sbb
enter
dec
xor
ljmp
inc
sbb
or
cmpsb
cld
inc
outsb
aam
mov
jne
sbb
jp,pt
cs
dec
clc
dec
arpl
jl
pop
push
fmuls
cmpsl
add
mov
popf
mov
movsb
in
jg
lods
sbb
xor
pop
repz
push
movsb
adc
outsb
test
sub
lods
adc
divb
cltd
in
sbb
inc
adc
inc
dec
popa
mov
shlb
inc
aas
jnp
cltd
sub
xchg
fdivs
fdivl
out
cmp
loopne
shlb
mov
sub
stos
sti
lds
sbb
push
in
fsubl
lods
or
fbstp
in
mov
test
fisttpl
mov
imul
jmp
call
dec
add
or
aam
mov
mov
sub
jg
sti
outsb
scas
mov
jne
lret
jmp
xchg
cmp
and
mov
mov
dec
cmp
mov
out
sub
lahf
ja
mov
mov
add
scas
mov
jns
addl
push
lahf
dec
fnsave
cmp
xor
daa
mov
call
push
pop
add
push
push
js
rorl
push
adc
mov
jg
fwait
sub
out
xchg
and
and
movsb
repnz
in
jae
xchg
mov
xor
jmp
lds
dec
lcall
cmpsb
lods
and
fs
out
clc
pusha
dec
lods
jo
lcall
mov
lcall
mov
cmp
sbb
ja
iret
fnstsw
sbb
jle
mov
pop
lods
mov
push
sub
mov
adc
mov
in
adc
scas
cmp
xlat
and
push
push
mov
lock
aam
push
or
mov
test
in
movsb
or
ja
xchg
pop
jbe,pn
jo
fisubrl
inc
inc
sbb
dec
lahf
in
mov
lcall
and
les
call
movsl
jnp
push
push
sbb
adc
or
dec
movsl
xchg
gs
cld
mov
inc
sub
mov
push
jb
inc
jg
adc
jae
mov
mov
adc
scas
xchg
or
adc
imul
inc
fmuls
aaa
push
addb
lcall
mov
dec
jb
jne
inc
lds
cltd
sbb
jl
lods
adc
adc
xchg
mov
int3
loopne
jnp,pn
xchg
aad
jg
lret
imul
xchg
cmp
std
in
dec
sbb
cld
ror
dec
scas
inc
aaa
mov
pop
fsts
jnp
push
div
jbe
push
sarl
ret
push
fadds
sub
cmp
jnp
jmp
hlt
negl
fnstenv
imul
inc
test
pusha
imul
into
sbb
int
cmpsl
xorb
jnp
mov
adc
add
inc
es
fimuls
imul
movsb
movsl
dec
sahf
leave
dec
mov
inc
ljmp
dec
dec
or
jno
movsl
rcrb
dec
pop
pop
dec
mov
test
daa
jmp
lods
sub
std
pop
cmp
imul
mov
lods
inc
lret
out
loope
mov
push
inc
pop
cmp
dec
lock
mov
lds
or
mov
cs
test
mov
stos
mov
fcomps
movb
mov
add
mov
dec
jmp
push
pop
pop
mov
push
clc
dec
push
fstpl
pop
jl
fsubs
bound
inc
push
adc
imul
mov
movsb
inc
out
add
std
mov
rcll
aas
adc
mov
repz
ret
das
jns
pop
mov
pop
push
and
lods
in
sti
rcrb
and
xchg
daa
push
add
dec
xchg
and
cmpsb
xchg
nop
and
adc
popa
push
in
ja
sbb
in
vmovntps
mov
push
dec
jns
cmp
popf
cmpsb
or
and
jnp
les
lret
or
mov
stc
mov
jne
aad
cmc
add
inc
pop
sbb
lock
xor
inc
jbe
jle
pusha
int3
jmp
inc
dec
xchg
leave
icebp
imulb
fs
cli
fldenv
sbbl
jp
cmp
jno
fidivs
add
pop
nop
jle
add
sub
pop
fwait
dec
repnz
mov
stos
popa
or
pop
adc
sbb
cmp
cs
lcall
sub
jge
lcall
in
add
int3
or
dec
mov
repnz
inc
rcll
bound
int
outsl
jne
int3
rcrb
jl
or
push
mov
cli
jl
loope
inc
xchg
aam
stc
out
lods
lret
or
repz
mov
cmpl
cli
add
cmp
gs
es
stc
int
icebp
fucomip
xchg
cli
cmc
mov
scas
ret
or
inc
adc
and
repnz
jp
jno
sub
add
aaa
hlt
and
mov
mov
negl
cs
jo
mov
add
jl
pushf
mov
push
mov
ret
add
xchg
mov
push
add
mov
inc
fldenv
xchg
add
xor
sub
jle
and
addr16
imul
add
mov
xchg
and
or
subl
or
pop
mov
add
add
jne
lret
push
into
push
xor
out
pop
pop
push
test
insl
cmpl
mov
or
paddusb
lods
add
adc
add
mov
dec
syscall
mov
or
and
sbb
dec
mov
xor
sbb
pushf
loop
adc
jno
fwait
xchg
mov
mov
loope
sub
sti
cmp
inc
jmp
push
xchg
les
inc
stos
inc
mov
add
lods
mov
mov
fnstsw
jb
leave
mov
cmc
push
testl
add
je
in
mov
arpl
jge
fucom
dec
dec
mov
push
fbstp
out
jne
xchg
adc
dec
inc
in
jno
adc
jbe
jp
imul
push
and
rcll
fsubr
iret
xchg
je
int3
mov
insb
scas
mov
mov
ja
sbb
nop
in
push
cmpsb
xor
pop
jno
jno
push
push
mov
pushf
fsub
jns
and
mov
fisttpl
andl
jns
jle
jno
test
add
xor
add
lcall
movsb
rcll
xchg
stos
repnz
aaa
pop
push
mov
out
les
mov
add
outsl
stos
js
jo
andb
sarb
cs
mov
test
inc
lock
dec
jae
jb
pop
js
push
lret
stos
mov
fwait
push
ror
js
xor
data16
cmp
push
mov
fstp
lcall
ficompl
mov
sti
or
push
icebp
and
stos
inc
int3
mov
sbbl
mov
ja
and
mov
test
cmp
stc
aad
pop
lock
lret
pop
sub
push
or
orl
adc
xor
xor
inc
or
or
movsl
nop
cltd
insb
imul
dec
imul
sub
les
out
jl
sub
ljmp
push
push
mov
subl
mov
pop
lea
pusha
or
orb
pop
inc
xor
dec
inc
push
loopne
add
outsb
imul
cmpsl
sbb
jg
cmp
pop
cmp
mov
lods
lret
call
dec
or
adc
scas
adc
daa
cmp
cmp
or
dec
adc
push
daa
ljmp
sub
lea
mov
out
pop
push
cld
rorb
inc
std
imul
xchg
mov
subb
stos
sub
fidivrl
sub
xchg
js
mov
push
push
jg
pop
lock
sub
jge
movl
xlat
mov
sbb
outsl
sub
inc
pop
insl
idivb
fisubs
sqrtps
adc
inc
fnstcw
outsb
dec
fdivrl
outsl
test
xchg
cltd
mov
xor
cmpsl
sbb
sbb
loopne
pop
sub
jo
sub
addr16
adc
cwtl
cmp
std
mov
orl
loopne
jbe
xorl
adc
das
cmp
or
dec
xor
insl
jae
pusha
dec
aam
outsb
outsl
cltd
jecxz
cmc
mov
push
add
sbb
movsl
push
or
rol
push
sbb
insl
pop
push
adc
sub
std
sub
push
adc
iret
ja
test
dec
adc
cmp
fldt
sbb
dec
push
inc
std
or
insl
sbb
jno
orb
mov
jne
mov
push
sahf
in
lock
inc
adc
jl
adc
inc
dec
call
popa
imul
jp
lret
loope
add
das
add
sarb
pop
movsl
and
cmpsb
jno
ret
inc
push
mov
pop
mov
insb
inc
ljmp
roll
and
out
lods
jp
cli
or
icebp
out
insb
or
mov
insb
adc
pop
js
push
fnstcw
pushf
sbb
inc
inc
fdivr
insl
xchg
add
out
and
out
cmp
out
adc
push
ja
test
loopne
in
dec
mov
imul
push
lret
pusha
dec
mov
daa
out
inc
or
mov
sub
xor
aam
fs
push
inc
mov
jbe
gs
stos
mov
mov
push
bound
push
sub
push
mov
push
xchg
mov
aad
cmp
lcall
incl
ja
adc
or
in
jecxz
fsub
loop
decl
outsb
addl
sbb
or
cmpsb
loopne
dec
ret
sbb
add
lds
rorb
or
ja
pop
cld
outsb
clc
inc
pop
push
faddl
lret
popa
cwtl
adc
pop
adc
push
sbb
dec
test
je
push
mov
xor
ret
mov
mov
in
sbb
cmp
lahf
jecxz
ret
dec
sbb
dec
sbb
inc
repz
jg
xor
jne
xor
stos
mov
lea
mov
test
je
or
lahf
xlat
add
and
push
sbb
stos
scas
mov
sti
sbbb
xor
dec
test
jle
push
jbe
and
lods
add
push
mov
iret
mov
push
or
mov
enter
rcr
insb
fidivrl
add
adc
xchg
adc
fwait
out
pop
or
es
mov
cmp
sub
outsb
jmp
data16
jns
fs
jl
scas
jne
loop
mov
pop
mov
test
out
mov
sub
lahf
out
xchg
mov
in
aad
into
push
xchg
popf
push
lret
out
movsl
sub
lods
int3
shl
or
jno
popa
in
add
imul
mov
pop
lret
pop
cmp
adc
fprem
je
xor
imul
mov
xchg
mov
push
adc
stos
xchg
xchg
leave
addr16
mov
test
test
mov
leave
test
daa
mov
cmp
out
and
or
xchg
shl
popf
popa
mov
or
pop
aas
cmp
sbb
outsl
call
jmp
jo
mov
loopne
stc
test
mov
enter
je
dec
dec
insl
aad
imulb
push
pop
xchg
or
dec
lea
jmp
xchg
in
outsl
ret
push
push
cmp
sub
stc
mov
mov
add
or
push
mov
push
push
adc
in
mov
daa
andb
mov
xchg
mov
adc
add
jb
add
fldenv
push
mov
jg
xlat
cs
fisubl
repz
fidivrs
mov
lea
sub
hlt
and
adc
out
loop
cmp
cmp
bound
inc
fidivrs
enter
dec
jb
pop
aas
sbb
mov
or
incl
clc
add
call
ljmp
fs
xor
cltd
xor
pop
jnp
and
sbb
mov
shlb
mov
into
jmp
dec
cli
jge
mov
movsb
mov
ja
jp
adc
or
icebp
mov
xchg
into
leave
insb
adc
fs
xchg
sbb
and
enter
cli
popa
inc
outsb
je
sbb
lret
pop
add
pop
lcall
or
out
jp
sarb
fstps
xchg
mov
out
push
sub
sbb
enter
fstpl
daa
mov
ret
js
mov
jle
loop
add
insb
sub
jne
mov
push
shll
inc
dec
loop
push
es
icebp
btsl
or
adc
test
idivb
in
and
or
inc
push
xor
in
xor
out
push
in
adc
gs
xor
lcall
dec
test
jns
and
gs
push
loopne
sahf
inc
hlt
scas
fcmovu
mov
mov
loop
jge
add
cmpsb
push
push
mov
call
inc
pushf
sahf
js
insl
adc
pop
pop
cmp
test
jge
adc
in
adc
mov
fidivrl
outsb
aad
loop
and
test
dec
fwait
push
mov
addr16
icebp
cli
and
adc
lock
push
push
mov
rolb
mov
xchg
or
nop
xchg
leave
fisttpll
call
mov
mov
std
int
xchg
pop
cwtl
pop
daa
jle
jbe
xor
push
in
cmp
jge
movsb
in
adc
jmp
ljmp
ret
movsl
sti
out
sbb
jne
outsb
cmc
std
push
xor
inc
ret
adc
mov
pop
in
push
push
pop
imul
rorl
pop
sub
pop
je
pop
xchg
sbb
push
fistpl
cld
jno
mov
mov
mov
sub
sbb
pop
jbe
jmp
sub
mov
scas
scas
insb
push
or
mov
or
xor
pop
push
push
adc
sbb
movl
stos
popf
lahf
pop
push
xchg
xchg
push
mov
mov
pusha
add
lods
gs
ljmp
sbb
fsts
pop
test
shll
cmp
mov
push
addr16
xor
inc
int
lahf
xchg
inc
into
push
push
sahf
xchg
fwait
jge
or
lods
cld
mov
cld
les
jmp
scas
out
stc
insl
or
jns
sarl
jno
imul
into
cli
iret
mov
out
mov
fs
int3
stos
jl
push
aam
mov
clc
cwtl
outsl
cmpsl
jg
movsb
fsubr
jecxz
inc
cmpsb
sbb
xchg
mov
xchg
lcall
inc
adc
xchg
in
fsubrs
inc
jecxz
add
enter
mov
mov
movsb
jg
add
pushf
and
adc
cli
push
das
int3
mov
jle
stos
incl
mov
xchg
cmp
adc
cli
lret
and
bound
popa
lock
lea
enter
shlb
or
or
cmp
or
sub
jo
out
sbb
rcll
int3
and
inc
pop
xor
push
insb
mov
fwait
jecxz
or
push
cmp
dec
mov
dec
sbb
ret
add
aam
ret
dec
push
shll
insl
ss
push
insl
xchg
fadds
xchg
mov
mov
mov
pushf
xchg
dec
movsl
aam
jo
push
and
out
ss
xor
fisttpll
dec
cmp
lods
ret
aas
outsb
dec
test
cld
repz
and
fnstsw
dec
addr16
rorl
fdivrl
pop
fsubs
mov
cmp
mov
repz
aas
adc
cmp
fdivp
jle
pop
lret
lcall
pop
mov
push
jle
call
push
add
mov
repz
cmp
data16
and
mov
aam
shll
add
imul
loop
or
out
arpl
ror
gs
inc
addr16
bound
lock
sbb
das
dec
mov
mov
sub
mov
dec
decb
push
ret
lcall
and
jmp
mov
push
push
xor
andl
mov
scas
aam
sbb
pop
cmpsb
out
xchg
push
jmp
xor
pop
cmp
inc
sub
dec
pop
cmp
in
cmp
in
bound
xchg
dec
sti
push
push
xor
add
mov
adc
add
imul
jno
aaa
push
push
test
psubsb
sbb
jmp
jmp
adc
movsl
out
xchg
jae
inc
mov
sub
faddl
pop
push
dec
mov
inc
stos
xor
loop
fwait
pop
sub
sub
add
or
sbb
mov
mov
lcall
aad
sbb
in
mov
xchg
xchg
pusha
call
push
outsb
imul
out
mov
subb
mov
stos
test
cmp
pop
mov
popf
mov
jnp
aas
jg
cwtl
arpl
mov
mov
fs
mov
jns
in
orl
dec
ficoml
mov
jp
sti
adc
cltd
std
push
jecxz
sub
pop
pop
xlat
test
imul
lahf
mov
mov
scas
jno
subl
das
mov
sbb
gs
jnp
push
ret
mov
sti
loopne
mov
popa
mov
adc
sub
fldt
mov
push
sub
xchg
roll
pop
push
xchg
push
xlat
rcll
cmp
adc
push
hlt
or
sbbb
les
scas
jns
mov
sub
push
mov
iret
xchg
mov
or
xchg
loopne
mov
pushf
cmc
adc
pop
loopne
pop
inc
mov
test
movsb
jae
popf
inc
repnz
fisubl
mov
fdivrl
test
out
clc
inc
sbb
sbb
push
gs
punpckldq
xor
or
loopne
adc
jp,pt
sarl
jl
mov
cwtl
in
fldcw
icebp
leave
cmc
negb
pop
pusha
cltd
std
adc
add
loope
and
pushf
sbb
scas
call
data16
push
jo
cmp
mov
roll
mov
pop
popf
aam
inc
pusha
js
mov
loopne
cmpsb
jae
cmp
pop
add
sub
jle
adc
popl
outsl
in
mov
xor
xor
mov
adc
mov
inc
or
dec
jne
jb
mov
mov
xchg
adc
mov
xchg
jmp
inc
adc
inc
pop
add
jle
test
sbb
jge
or
sub
jmp
xor
movsb
lds
mov
pushf
push
dec
xchg
xorb
pop
push
fwait
lret
inc
stc
pusha
subl
push
rol
mov
xchg
adcb
sub
xchg
pusha
cmp
inc
push
mov
test
cli
movsb
adc
dec
pop
iret
fstpl
fidivrs
repz
jecxz
js
pusha
fwait
jb
add
imul
push
enter
dec
jg
inc
ljmp
mov
ja
imulb
andl
outsb
mov
mov
fwait
pop
mov
pushf
imul
mov
mov
mov
sub
pop
push
mov
es
and
inc
add
mov
cmc
cmc
icebp
mov
push
pop
mov
jae
call
or
inc
in
fimull
mov
pop
pop
fwait
jecxz
cld
cmpsb
in
sbb
or
push
inc
pusha
js
mov
test
sahf
in
popa
cmpsb
das
stos
mov
imul
or
mov
xchg
insb
js
loopne
hlt
aad
xor
int3
mov
xchg
das
ror
fs
dec
xchg
cmovb
arpl
pop
mov
shlb
add
inc
sub
push
mov
or
bound
ret
xchg
pop
mov
scas
xor
stc
adc
and
dec
or
push
div
push
pop
das
fcoml
mov
mov
jbe
dec
push
ficompl
shl
les
cmp
xor
mov
dec
jecxz
cmp
sub
xor
cmp
jns
subb
pop
inc
mov
rorb
lods
or
adc
cmp
sub
push
push
gs
cmp
aaa
lcall
and
xor
push
outsl
shll
popf
outsb
push
leave
lahf
mov
punpckhdq
pop
sarb
xor
xchg
sarl
es
aam
out
sbb
das
cs
push
daa
std
cmpb
lock
arpl
xchg
ljmp
xchg
leave
inc
mov
or
xchg
mov
push
fisttpl
cmp
rcll
call
ret
xchg
jp
loopne
movsl
dec
aaa
out
pop
fldcw
adc
arpl
shll
std
xchg
mov
sbb
test
cmc
cwtl
in
pop
mov
jns
loop
cmp
inc
out
mov
jno
pop
mov
loopne
add
inc
sahf
leave
mov
inc
adc
rcrl
fisubrs
sub
loopne
jae
sub
xchg
mov
pop
imul
icebp
xchg
xor
cmp
stos
cmp
insl
jl
call
aas
dec
pop
cli
cld
xchg
mov
sbb
ret
cltd
lret
and
ja
adc
jae
fdivl
and
dec
mov
imul
sbb
pop
jnp
fmull
xchg
popf
and
mov
push
icebp
sahf
mov
lahf
sbb
into
sbb
outsl
out
sahf
stc
lcall
xchg
popa
cmc
addr16
imul
lods
pop
scas
ret
adc
sbb
mov
push
mov
data16
test
enter
je
stos
jmp
repz
ds
out
or
pop
adc
stos
test
lods
and
clc
pop
adc
das
push
cs
sbb
sub
inc
lods
mov
or
out
enter
int3
mov
movsb
cmp
mov
inc
inc
or
cld
shl
rol
mov
adc
inc
popa
sti
in
xor
mov
and
dec
mov
or
mov
cs
out
imul
jo
fbstp
pop
adc
xchg
js
mov
popa
fcompl
xchg
jae
les
aaa
or
push
pusha
sbb
cli
jge
pop
sub
js
or
mov
cli
inc
test
cli
test
incb
inc
repz
outsb
push
je
cmpsb
sbb
aas
mov
aam
or
ss
test
outsl
jbe
das
mov
fidivrl
std
je
inc
push
fs
enter
adc
mov
inc
pop
sti
push
clc
mov
cmp
pop
mov
pop
push
jno
xchg
dec
jns
arpl
gs
dec
nop
pushf
sbb
in
mov
or
mov
mov
pop
mov
cmp
push
sbb
outsb
dec
cmpsb
popf
repz
imul
shl
imul
test
clc
lret
sbb
xor
iret
sbb
stc
movsb
div
rorl
test
stos
xor
enter
push
nop
shrl
mov
loope
sarb
jb
leave
movsl
jle
or
ljmp
icebp
dec
lea
hlt
mov
ja
fsin
adcb
loop
jl
bound
aaa
gs
dec
rorb
subl
xchg
inc
pusha
inc
lods
int3
mov
ret
cli
pop
add
out
mov
inc
pop
or
inc
push
movsb
jl
pop
jl
iret
enter
cmp
mov
out
xchg
sbb
lcall
js
jmp
or
xchg
test
aas
add
ret
lods
dec
jmp
push
adc
adc
incb
mov
outsl
cli
dec
xchg
and
adc
add
mov
cmp
push
fidivs
add
test
scas
xchg
sub
jns
adc
insl
stos
and
jbe
arpl
lret
pop
mov
and
jnp
shll
fcoms
out
xlat
cmp
dec
xchg
out
inc
shlb
cmp
rcrb
dec
fst
int3
push
push
add
pop
leavew
stos
cmp
in
arpl
adc
adc
push
int
repnz
js
lock
lret
cli
ret
mov
ja
cld
and
push
icebp
xor
dec
jnp
enter
inc
sbb
inc
and
test
mov
xchg
xlat
sbb
mulb
insl
pop
jecxz
and
je
shl
je
inc
mov
rol
int3
pop
dec
mov
push
fcmovnbe
or
rcrb
hlt
int3
fiaddl
dec
push
sub
cmp
push
pop
in
scas
xor
mov
dec
movsb
imul
outsl
fwait
mov
cmp
and
scas
push
jp
pop
adc
flds
push
inc
cmp
xchg
insl
push
or
lds
sti
mov
jae
push
or
ja
dec
fwait
cmp
arpl
repz
nop
inc
in
adc
dec
das
push
pop
ljmp
nop
mov
idivb
call
shrb
fst
push
jp
xchg
mov
repnz
add
fimull
out
jmp
adc
or
or
push
popl
cmp
push
dec
mov
jl
addr16
ss
jbe
mov
lea
cmpsb
into
aaa
xchg
das
mov
jl
out
pop
xor
in
and
push
in
cld
sbb
repnz
fstpt
mov
push
cmp
mov
lret
lcall
mov
jne
aaa
sar
daa
lds
cmpl
push
ret
lods
test
sbb
out
rol
sbbb
add
lock
sub
xlat
jg
push
test
mov
sub
mov
outsl
daa
int
aaa
je
mov
and
cmp
dec
out
lods
scas
lret
int3
or
movsb
jae
sub
or
leave
push
adc
sbb
stc
inc
push
scas
lods
cmp
adc
mov
lret
rorl
sub
or
adc
and
or
insb
test
mov
jae
jbe
mov
mov
fs
mov
mov
movsl
popa
in
daa
xor
mov
sub
pusha
or
sub
inc
arpl
sub
mov
jo
sub
jo
and
test
imul
push
movsb
inc
mov
xchg
xor
xchg
insl
insb
sbb
dec
jbe
aaa
dec
int3
adc
call
cld
push
out
xor
pop
xchg
add
scas
adc
mov
notb
lahf
mov
add
stos
mov
xor
mulb
lea
add
pop
pop
push
inc
inc
cs
test
mov
arpl
mov
dec
lds
cmp
aad
int
adc
int
sarb
fildl
cld
pop
lods
pop
xchg
cmp
ds
imul
xorl
orb
xchg
clc
adc
adc
lds
xchg
cmp
les
mov
pop
ljmp
xlat
cmpb
pop
fstps
imull
arpl
cltd
repnz
rcr
enter
adc
loope
push
mov
jae
cmp
xor
mov
add
mov
adc
in
fwait
add
jne
mov
mov
or
test
enter
ljmp
sti
jecxz
stos
sbb
sub
xchg
cltd
outsl
in
pop
test
or
jmp
mov
xor
fcomp
movsl
or
ds
adc
or
and
sub
sub
lods
movsb
inc
ret
cmc
xor
aad
inc
push
sbb
out
icebp
pop
popf
fidivl
dec
or
mov
incl
cmpsl
mov
out
mov
repz
leave
scas
lods
xor
cmp
dec
or
aas
es
daa
pushf
pop
lea
std
pop
and
aam
imul
fisttpll
bswap
lods
mov
lock
push
mov
popa
cmp
mov
in
jmp
jmp
cli
mov
xor
xchg
inc
jnp
inc
mov
jae
int
mov
push
shlb
es
cmpsl
sbb
mov
rclb
pop
movsl
mov
insl
sbb
movsb
and
movsb
dec
popa
outsb
pop
or
das
push
jmp
hlt
arpl
fcom
adc
clc
or
mov
test
cmp
xchg
push
xor
std
mov
and
pop
and
jnp
sti
add
or
adc
scas
mov
xchg
popa
pusha
gs
dec
aad
ds
out
inc
fxch
mov
arpl
cli
push
sbb
rcll
in
into
arpl
loopne
dec
fldt
push
rcrl
pop
rol
mov
mov
add
dec
sbb
push
ret
xchg
lea
bound
sub
call
rolb
movsl
mov
jge
cli
adc
jecxz
loopne
jg
jecxz
push
jo
cli
fildll
test
jecxz
sbb
push
xchg
lret
mov
shlb
orl
mov
cmp
or
loop
sbb
mov
xchg
stc
push
mov
mov
loopne
sbbl
xor
mov
cmp
sbb
out
inc
js
jno
loope
repz
push
jae
repnz
ror
or
xchg
mov
lds
jmp
je
stc
xor
mov
adcb
ljmp
shr
jo
popf
mov
fidivl
cmpsb
xor
mov
jg
push
rol
push
lret
cmp
vandps
mov
cmc
je
add
push
scas
cmc
les
sbb
xchg
cmpsl
xchg
popf
out
mov
dec
xor
xchg
js
lahf
cltd
lods
mov
dec
insl
xchg
shll
push
or
shr
shrl
loop
out
orl
lods
fwait
hlt
xchg
sarb
ds
jecxz
cwtl
mov
movsb
push
sbb
jbe
int
shrl
addb
pop
dec
sub
mov
mov
outsl
jp
rcl
mov
and
aaa
outsl
movsl
dec
push
es
sub
lret
add
xor
movsl
andl
or
and
mov
mov
push
ret
add
dec
mov
dec
push
ljmp
loopne
jg
arpl
dec
sub
inc
lcall
testb
pop
inc
xchg
push
xor
xchg
sti
mov
mov
scas
mov
cmp
mov
imul
lock
xchg
testb
sbb
jbe
fs
sub
sub
loope
pop
pop
jmp
xchg
xor
nop
and
pop
mov
lahf
andb
mov
lock
ljmp
push
movsl
mov
sub
out
int3
xchg
cmp
push
mov
in
insb
test
add
outsb
or
mov
rorl
jne
movsl
push
and
xchg
jo
mov
in
jns
mov
ljmp
add
and
fiadds
sbb
push
popa
cmpl
xor
and
jno
dec
into
xchg
sub
cmp
ja
cld
add
dec
jnp
xchg
lcall
pop
mov
mov
movsb
jecxz
mov
cmp
dec
neg
out
dec
pop
popa
xor
xor
mov
in
orb
xor
addb
dec
dec
sbb
pop
psadbw
cmpsl
out
cmp
dec
xor
fs
xor
movsl
lret
push
jl
stos
mov
cmp
adc
loope
out
ljmp
pop
add
icebp
ja
cmp
add
je
inc
jno
enter
fucomi
dec
push
in
mov
mov
pop
sarb
pop
divb
sub
cmp
les
cmpl
inc
mov
xchg
add
adc
int
add
popf
jo
rorl
ja
cmpsb
fists
push
iret
push
cld
sti
mov
push
fnstsw
mov
cltd
sub
sbbl
mov
mov
cmp
out
or
sub
mov
je
add
jo
je
pop
cld
les
sti
aaa
lds
sbb
cmp
jp
scas
fdiv
or
aaa
cmp
push
jmp
dec
or
xor
or
sar
cmp
sbb
mov
add
push
mov
cld
lahf
jns
jnp
aad
mov
sub
insb
mov
mov
pop
popa
shlb
or
mov
rorb
stos
lods
setbe
hlt
mov
in
xor
loopne
call
ljmp
fadds
ljmp
inc
std
jl
cmp
jp
dec
mov
ja
adc
inc
or
dec
stos
jne
pop
sbb
addl
dec
cmp
lahf
aam
mov
dec
out
jg
inc
or
inc
sub
dec
fcoms
leave
in
inc
mov
sbb
in
sbb
das
pop
sbb
icebp
push
je
dec
cmp
sub
loope
aam
andb
enter
cmp
pop
sarb
adc
bound
xchg
mov
push
xor
xor
sub
push
into
jl
cmp
mov
pop
loop
pusha
push
in
sahf
sbb
jnp
jo
lahf
fwait
in
pop
repnz
lret
inc
dec
cmpsl
xlat
gs
inc
pop
insb
lds
adc
sarb
or
aad
jecxz
cmp
aaa
movsl
dec
sahf
dec
sub
repnz
out
mov
stos
fwait
lret
sar
mov
sub
sar
mov
jns
xchg
sti
aam
lcall
sbb
lods
dec
cmpsl
push
iret
imul
xchg
nop
push
repnz
mov
xor
sub
bound
test
cli
es
cmp
sahf
imul
leave
rorb
addr16
fwait
add
add
popa
pop
repz
ja
insb
sub
mull
sub
fistps
fs
add
stc
fsubr
das
rcrb
add
and
sub
mov
jge
mov
pop
mov
cmp
push
dec
fsubrs
data16
in
imul
leave
ret
xor
movsl
movsl
push
mov
push
jle
jns
popa
insl
jbe
test
adc
inc
mov
ja
push
repz
jle
push
sti
aad
dec
bnd
hlt
pop
popf
cmpb
dec
sub
sub
or
mov
and
and
pushf
push
ss
out
add
orb
lods
jp
mov
enter
inc
mov
outsb
xchg
fcoms
shl
and
pop
popa
and
popa
popf
lods
mov
push
sti
push
and
cli
adc
adc
push
ret
addr16
inc
jns
mov
cmpsl
sahf
int
cmp
inc
inc
ljmp
es
sbb
push
pop
dec
dec
sbb
lahf
sbb
jmp
je
loop
xchg
dec
scas
dec
je
test
test
or
sbb
mov
mov
jae
cmp
push
adc
mov
sbb
ja
jl
mov
mov
push
ja
jbe
das
lods
xchg
movsb
cltd
scas
outsl
and
jbe
test
int3
jecxz
dec
xor
or
dec
out
mov
or
gs
pop
cmp
leave
pop
jmp
sbb
inc
call
pushf
lods
jge
sbb
scas
mov
pop
std
out
les
jp
jns
jne
pop
imull
add
cmp
adc
mov
mov
mov
mov
arpl
and
loopne
lock
add
pcmpgtw
scas
call
add
rcll
movsl
repnz
push
cld
les
xor
leave
inc
pop
imulb
ficoml
mov
and
adc
enter
dec
call
xchg
arpl
xchg
cli
sub
jne
mov
hlt
fistps
push
jmp
test
cld
adc
inc
xlat
cmp
ret
cli
add
and
rep
loope
es
cmp
imul
notl
xchg
lods
nop
mov
bound
shl
cwtl
addl
shll
mov
out
rolb
bound
movsb
cltd
call
loop
popa
jns
je
movsl
shlb
jmp
into
aas
pop
jae
sbb
adc
ja
scas
pop
sbb
ss
loopne
or
in
in
adc
push
out
mov
sub
mov
jp
push
inc
mov
jno
dec
mov
out
cmp
scas
jge
or
or
sbb
pop
and
xchg
jne
bound
jecxz
cmp
stos
xchg
jge
push
sbb
jge
push
cwtl
and
mov
aaa
lcall
dec
dec
dec
adc
dec
in
xchg
xchg
xchg
jl
push
mov
test
xchg
les
popa
jns
imulb
sub
les
shlb
fs
das
inc
std
mov
dec
outsl
push
cld
cmovo
adc
pusha
es
and
aas
outsl
and
outsl
mov
sbb
or
mov
arpl
aam
cld
decl
mov
cwtl
push
arpl
or
popa
jnp
cmp
arpl
cmp
push
test
ret
fsubr
or
xor
movsl
insl
mov
or
lock
push
imul
out
jae
inc
or
inc
jge
in
pop
add
lds
xchg
jno
adc
mov
outsl
out
rorl
lret
mov
int
lock
cld
cmp
add
ret
daa
push
pop
push
or
sbb
and
sahf
stos
adc
out
inc
pop
lock
mov
xor
sub
sbb
cmp
mov
mov
dec
flds
pop
sub
mov
or
inc
inc
aam
lret
inc
pop
pop
adc
and
mov
pushf
mov
in
in
lds
lods
stc
pop
xor
sbb
cmp
jl
fistl
jp
lret
fwait
mov
sarb
pop
mov
mov
subb
and
lea
icebp
dec
jno
push
sub
shr
xor
mov
lods
ljmp
push
stos
sub
cmp
add
cli
clc
cmpsl
fisubs
mov
push
in
pop
cmp
mov
loopne
and
out
ss
std
xlat
push
and
jne
add
xchg
sbb
push
xor
or
or
imul
sbb
jl
movsb
addr16
movsb
sbb
inc
hlt
xor
pop
leave
shll
pushw
lea
std
inc
scas
sbb
inc
stos
roll
lock
mov
es
dec
mov
add
push
add
push
xchg
jle
ljmp
pop
add
addl
dec
rcl
jno
pop
call
or
push
inc
fildll
fistpll
insl
popl
mov
cmpsb
or
shl
add
sbb
mov
push
loopne
ror
sub
mov
pop
loope
mov
std
lcall
jne
in
cmp
dec
pop
inc
aaa
cld
insl
inc
push
test
fmul
jge
mov
and
sbbb
fsubs
push
or
inc
jbe
loopne
xchg
push
or
pop
cli
out
dec
jns
jl
insb
xor
shll
jmp
out
nop
mov
inc
xchg
fnsave
imul
cmpsb
popl
adc
sub
pop
es
hlt
outsl
subl
sub
nop
jmp
inc
sub
cmp
jns
or
sub
sbb
sti
push
mov
adc
mov
pop
dec
mov
int3
jae
inc
mov
nop
push
test
sub
jno,pn
sbb
cmpsl
adc
fsubrs
xor
add
aas
adc
sbb
out
cmc
fwait
push
jge
out
sbb
mov
dec
arpl
mov
imul
loope
bound
into
add
mov
fiadds
mov
push
jbe
sub
test
lods
and
dec
add
daa
bound
shrb
sbb
xchg
lock
imull
fs
jns
test
cmp
into
or
pop
lahf
hlt
push
scas
xor
lret
aam
adc
inc
testb
das
gs
or
into
test
push
bound
xlat
ljmp
and
mov
or
shlb
xor
mov
notb
adc
jl
fsubs
mov
sbb
mov
mov
xlat
lods
xlat
jecxz
mov
pop
sub
lret
push
fsubr
pop
jle
mov
je
mov
mov
xor
pop
lock
or
mov
sub
mov
filds
jecxz
dec
inc
adc
pusha
lcall
imul
add
call
push
ss
cmp
imul
movsb
int
jno
in
fs
fcmovnbe
lock
stos
adc
pop
jle
stos
mov
push
push
in
mov
insl
in
loopne
dec
pop
or
xchg
push
outsl
data16
add
push
cmp
mov
push
add
fwait
daa
sbb
pop
adc
test
inc
pop
add
or
das
inc
sub
cli
cmp
aaa
inc
xchg
ret
inc
bnd
loope
lea
movsl
repz
mov
and
mov
js
xchg
dec
and
popf
xchg
outsb
sahf
pop
jns
jg
repnz
or
mov
push
gs
xchg
mov
lcall
lret
out
divps
insb
xor
lods
std
sub
insl
push
push
enter
ljmp
fcmovbe
out
mov
mov
or
sub
cmpsl
push
add
push
jp
stos
imul
cmp
arpl
sbbl
int3
mov
ret
cwtl
lahf
cmp
or
dec
shrl
stc
dec
outsl
or
icebp
insb
mov
adc
add
fidivrs
pop
in
and
nop
popf
int3
jne
out
sub
lods
pop
add
cmp
mov
test
ss
arpl
rcll
imul
and
mov
pop
loope
cwtl
lods
test
cmc
pop
into
in
mov
sub
inc
enter
xchg
pop
and
je
or
pop
ret
mov
dec
fsubp
mov
xor
mov
pushl
popl
adc
movsb
insl
mov
mov
lods
and
arpl
leave
adc
push
int
rorl
jmp
push
mov
jne
sbb
test
push
mov
stos
mov
mov
xchg
cli
movsl
fsubrs
arpl
ret
xchg
sbb
and
mov
hlt
dec
addb
ret
out
mov
movsb
pop
notl
sub
ljmp
add
xor
push
mov
jp
push
mov
adcl
roll
adc
iret
jg
divl
mov
lahf
shlb
cmpb
push
iret
and
inc
push
test
jg
int3
push
mov
adc
or
add
or
mov
ja
jl
or
pushf
mov
je
lock
jge
or
test
cmc
loope
mov
std
in
xchg
inc
insl
push
push
mov
fmuls
rclb
ret
bound
jecxz
cmp
pop
out
mov
fisttpl
push
jns
push
dec
cmpsl
sti
daa
mov
or
loope
scas
push
add
xchg
cltd
add
lret
arpl
mov
dec
mov
pusha
cmp
pop
outsl
jle
inc
outsb
mov
mov
pop
cltd
adc
test
repnz
fwait
cmp
adcb
js
ret
sub
and
insl
sub
insl
es
cmp
ds
scas
out
out
lods
lds
stos
xor
cltd
mov
rcrl
test
sub
mov
iret
and
rcrb
mov
inc
sub
inc
scas
xchg
out
lret
pop
shlb
out
push
popa
jns
out
dec
insl
add
dec
cld
push
sar
dec
bound
in
jmp
mov
sarl
sti
sub
jns
adc
xchg
dec
ss
dec
dec
xchg
cwtl
call
sahf
mov
jl
test
sub
stos
and
pop
inc
aaa
mov
inc
int3
and
movsl
adc
inc
push
pop
nop
jo
cwtl
popf
inc
xor
gs
xchg
mov
pushf
inc
mov
push
push
xor
repnz
pop
test
push
icebp
sub
jbe
push
insl
lods
movsb
and
dec
out
dec
mov
aam
mov
mov
lret
adc
in
push
cmpsb
adc
sbb
cmp
insl
add
outsl
or
add
or
test
fimuls
clc
mov
inc
jle
and
repz
xchg
pop
sub
ja
lods
stos
movl
shlb
sub
jl
cli
push
mov
and
sbb
in
xor
push
aas
xchg
orb
gs
filds
mov
mov
jae
clc
mov
pop
cmp
out
mov
das
out
in
rclb
push
jnp
ja
movzbl
mov
cmpsb
into
fsts
jno
dec
pop
fstps
push
mov
pop
add
adc
push
jae
es
ror
test
aam
int3
subb
xchg
and
andl
incb
mov
rolb
cli
push
cmpl
jmp
addr16
push
sbb
ljmp
lods
sbb
loopne
inc
sub
sbb
xchg
pop
pop
pop
cmpb
or
dec
loope
outsl
add
xchg
lods
jae
adc
push
push
mov
jg
pop
es
fsubl
or
arpl
cs
xchg
cmp
mov
popa
push
nop
jecxz
cmpsb
adc
jle
bound
pop
pop
mov
xchg
jae
in
lds
fdivs
pop
xor
and
jg
xchg
arpl
sarl
adc
mov
lret
out
decl
push
or
outsl
add
cli
push
mov
pop
repz
popf
xchg
jb
enter
pop
push
jnp
daa
movsb
psubw
push
cmp
imulb
dec
cmp
jmp
in
dec
mov
mov
dec
adc
imul
punpckhbw
bound
mov
aas
sbb
mov
push
lret
bound
daa
jecxz
push
adcb
or
fldenv
mov
and
sub
xlat
push
popa
cld
mov
mov
sarl
in
push
pop
xor
add
push
xchg
fadd
xor
lret
sub
pop
pop
mov
mov
and
pushf
mov
loop
scas
cmpsl
addb
repz
pop
sbb
inc
scas
imul
shrb
insb
arpl
sbb
jl
xor
enter
int3
xor
sbb
cmpsl
jne
dec
mov
mov
test
ljmp
cmp
xchg
lods
sbb
mov
cltd
das
adc
inc
lcall
xchg
movsl
xchg
aas
shrb
in
sbb
push
and
pop
mov
mov
add
test
pop
enter
mov
or
or
sub
xchg
mov
and
or
jge
cmpb
push
std
push
add
ss
in
into
sub
mov
sbb
mov
bound
imul
push
int3
push
hlt
arpl
dec
sbb
mov
jmp
je
sahf
int
je
xor
test
int3
and
movsb
aam
insb
sarb
push
jle
push
and
add
jne
push
cmp
dec
in
loopne
mov
dec
pop
enter
adc
es
xor
js
sbb
push
xchg
mov
push
das
cmp
ret
and
push
cmp
idiv
dec
in
lret
sti
jbe
test
add
ljmp
xchg
dec
cld
jecxz
popa
pop
mov
sbb
push
xlat
jno
cmpsb
xor
mov
push
mov
push
stos
mov
xchg
movsb
mov
lods
into
inc
dec
inc
mov
jecxz
data16
add
mov
lods
xor
dec
enter
xorl
jmp
and
popf
sbb
xchg
enter
pusha
xchg
test
mov
stos
stc
shll
and
mov
pop
fidivs
mov
aam
sbb
pushf
stc
fldt
mov
xchg
cs
rcr
fsub
mov
adc
gs
int
imul
into
or
or
loopne
test
in
add
fs
cltd
rcrl
and
dec
or
int3
or
test
xchg
or
movsb
push
fsubp
mov
add
xchg
in
inc
rol
addr16
or
cli
cmp
xor
or
xor
jle
mov
mov
int
xchg
insb
xchg
rorl
jge
pop
rcll
push
xchg
inc
cwtl
jge
mov
sbb
mov
cmpl
insb
inc
jne
inc
xchg
or
and
scas
mov
inc
and
mov
mov
in
out
enter
mov
cmp
mov
movsb
sbb
pop
jmp
pop
jnp
dec
mov
or
sbb
mov
or
pop
fisttpll
stos
fidivl
leave
inc
rclb
pop
cmp
jbe
add
add
cli
orb
iret
and
jae
mov
mov
data16
cs
and
xor
cmp
mov
sub
or
xor
cmc
pop
xchg
lahf
mov
in
stc
mov
push
test
jno
pop
push
mov
and
mov
mov
mov
test
and
xlat
xchg
sub
cmp
insb
das
and
push
movsl
fidivs
xchg
outsb
jmp
fldcw
es
mov
in
mov
cs
jb
dec
pop
je,pt
and
or
pop
xchg
mov
xor
insb
ret
loopne
in
cmp
cmpsl
cmpsl
add
iret
insb
jo
test
adc
inc
ret
push
icebp
jmp
jge
rep
fwait
pop
mov
mov
mov
xchg
div
mov
mov
dec
jb
mov
lods
xchg
jnp
repnz
push
mov
add
and
jne
int
rclb
mov
mov
mov
and
adc
or
cmpsl
test
enter
cmp
or
loope
les
sub
mov
fsub
jnp
movb
sub
insl
push
mov
mov
fldl
push
popa
cwtl
daa
or
sbb
push
adc
outsb
fs
jae
pusha
stc
jl
fs
mov
dec
sub
insl
mov
cli
push
mov
std
inc
and
in
out
mov
nop
je
das
mov
ja
ja
push
sbb
dec
dec
sbb
ss
jb
mov
insl
dec
xor
xchg
cmp
subl
pusha
xor
loope
sbb
mov
adc
or
shlb
aad
add
xor
push
xchg
sti
push
int
jo
push
cmp
ret
jmp
fidivl
out
dec
jnp
mov
push
jl
and
inc
jle
les
sbb
push
push
nop
repz
xor
mov
inc
push
push
lds
dec
dec
shr
loopne
sub
dec
jle
jno
adc
cld
mov
push
imulb
push
rcrb
icebp
xlat
and
pop
xor
mov
inc
aad
push
jl
sti
sahf
xor
add
and
repz
ss
stos
ljmp
jp
addr16
dec
fcoms
sub
and
inc
out
adc
xor
inc
cld
int
imul
ljmp
or
pop
mov
mov
out
popa
sbb
dec
cmc
xor
pop
ret
xor
inc
dec
das
test
out
add
jecxz
arpl
int
xor
dec
add
mov
dec
outsl
out
jge
xor
nop
idiv
enter
leave
into
insb
mov
test
xchg
or
lock
movsb
mov
mov
jnp
repz
push
cld
clc
lcall
push
repz
xchg
imul
add
pop
jae
iret
cmp
dec
sbb
pop
mov
mov
sbb
pushf
ret
pop
enter
mov
jl
les
mov
jmp
xor
xchg
adc
xchg
repnz
movsb
test
inc
xchg
scas
sub
cmp
mov
insb
and
and
aam
dec
ds
push
lcall
xor
aam
adc
and
nop
inc
cli
movsl
cmp
int3
cld
cmc
mov
sbb
or
daa
daa
fldenv
inc
jno
jno
inc
mov
pop
pop
lcall
inc
or
inc
pop
jp
mov
dec
adc
adc
clc
mov
inc
mov
stos
pushf
push
push
mov
adc
mov
mov
xchg
std
sti
out
in
sub
inc
lock
inc
pop
jne
mov
ja
adc
push
cs
mov
je
mov
fldpi
and
xchg
sahf
test
mov
je
mov
inc
addr16
imul
adc
insl
xchg
lds
push
fucomip
push
fwait
subl
push
pop
ljmp
les
push
ljmp
rol
mov
lret
add
or
xor
test
adc
stc
mov
mov
std
dec
sub
mov
jge
mov
and
mov
into
cli
jb
and
jg
fcmovb
jecxz
xor
test
data16
adc
imul
sahf
es
push
test
mov
xlat
in
js
add
jmp
pop
je
rcll
popf
sub
xlat
xchg
repnz
sub
lret
dec
lea
leave
jbe
xlat
jnp
loop
int
xor
and
mov
mov
jnp
out
mov
pop
mov
test
subl
call
nop
push
out
lods
lcall
cmp
jmp
xor
test
lds
pop
adc
mov
in
daa
and
and
and
frstor
jmp
or
or
cmpsb
fimuls
mov
sub
fstps
lcall
mov
push
mov
jmp
nop
lds
repnz
pop
or
and
mov
jle
fcoml
fs
leave
push
mov
fcompl
addr16
cmc
daa
mov
insl
hlt
icebp
cld
xor
jb
mov
lcall
sbb
roll
mov
dec
push
xchg
jecxz
nop
inc
lods
mov
or
stos
mov
mov
lock
repnz
jmp
aam
xchg
sbb
xlat
aad
fs
sub
mov
and
xor
add
sti
cmp
aaa
jmp
leave
scas
rolb
daa
pop
jp
pop
cmp
pushf
fistpll
mov
ret
adc
mov
mov
jnp
mov
iret
daa
loope
int3
xchg
sbb
sub
and
rol
sbb
out
jae
pop
push
lret
bound
cltd
lret
icebp
lcall
int3
push
mov
ljmp
push
push
jae
mov
and
and
es
sbbl
mov
lds
dec
lret
repnz
push
mov
sti
mov
out
mov
lret
lcall
mov
mov
mov
xchg
or
jl
scas
add
icebp
mov
jbe
mov
pop
pop
test
cmp
ljmp
dec
repnz
movsl
outsb
xchg
jo
dec
sub
int3
jns
pop
mov
cmp
add
mov
fstpt
aad
inc
mov
lret
sbbb
cmp
inc
or
add
mov
xor
inc
xchg
in
pop
pusha
cmc
shlb
ret
add
jbe
cltd
repz
sbb
inc
cmc
std
sbb
inc
jp
lret
push
fisttpl
fnstenv
xor
mov
lods
add
sbb
enter
outsl
xor
in
cmpsl
movsb
xor
fld
test
das
hlt
mov
cmc
stc
test
aad
test
adc
dec
xor
cmp
imul
lahf
push
ss
nop
outsl
push
xor
adc
lahf
sarl
daa
ret
inc
jb
xor
or
outsb
add
push
inc
ds
ret
repnz
ror
sbb
push
mov
push
mov
loopne
xchg
jp
lret
xchg
inc
mul
inc
lods
add
xor
loope
pusha
loope
test
js
into
jb
sbbb
mov
adc
jmp
pop
in
leave
aam
add
insb
dec
adc
dec
pop
add
dec
xchg
add
call
dec
aam
cmp
iret
push
pop
addl
jmp
adc
adc
aad
std
pop
repz
or
pushf
mov
scas
pop
or
dec
lods
jbe
mov
addr16
mov
xor
aam
pop
dec
cld
inc
test
cmp
mulb
xlat
leave
add
xor
push
lods
lret
repz
sub
in
inc
and
xor
inc
hlt
lods
hlt
insb
xor
movl
jg
add
lods
sti
mov
mov
xchg
imul
test
adc
clc
fidivl
push
push
std
or
cld
int
cmp
pop
lret
inc
push
outsl
dec
dec
aam
call
loop
sahf
daa
mov
jnp
or
pop
and
cmp
or
mov
xchg
hlt
lahf
das
lahf
sbb
pop
jl
push
je
lds
push
or
mov
jae
mov
into
lahf
addr16
shrb
movsb
ficoml
fxch
and
fsts
repz
aaa
sbb
pop
mov
test
lret
lea
jmp
roll
jo
xchg
imul
notl
push
nop
sub
enter
ja
ret
xor
sarl
or
sahf
lods
mov
ret
pop
pop
jb
xor
cmpsl
sub
xlat
lcall
mov
jg
mov
jle
scas
sub
popa
fdiv
out
aaa
pop
insb
cmp
pop
sbb
and
add
push
sbb
push
cmp
mov
mov
test
cs
jmp
and
js
and
xor
sti
pop
pop
pop
jnp
lods
mov
fnstcw
jg
fs
dec
int3
testb
mov
jmp
fcomps
mov
jb
add
adc
mov
dec
xchg
push
or
sub
popa
mov
mov
push
cwtl
imul
mov
shlb
ds
testl
jns
popa
add
mov
pop
xor
gs
addb
xchg
aad
loopne
cmp
ja
shrl
adc
rcrb
rcrb
mov
inc
mov
inc
cli
xchg
stc
sar
xor
iret
push
fs
pop
inc
jmp
lods
jle
xor
lahf
cmp
aaa
fadds
fs
sbb
adc
rclb
sub
outsb
dec
sub
mov
pop
lcall
jle
sub
mov
cs
lock
xchg
xor
rcrb
cmp
jl
orl
fcomp
mov
adc
movsb
adc
rorb
cmp
pop
mov
mov
push
push
push
push
leave
jp
aam
push
sbb
push
js
dec
push
push
lret
dec
pop
adc
mov
and
inc
push
or
lods
push
data16
dec
xchg
cwtl
icebp
sahf
outsb
loopne
int3
vunpckhps
scas
cli
shll
mov
scas
addr16
enter
sti
mov
dec
arpl
inc
in
insb
sti
std
rorb
adc
or
scas
mov
sarb
imul
out
aaa
inc
insl
mov
xor
mov
lds
mov
jnp
jns
or
inc
lds
pop
xchg
adc
cmp
fiadds
xor
jno
cs
cltd
mov
subb
stos
bound
xchg
adcb
iret
cmpsl
aam
lods
aad
sbb
and
repz
and
mov
add
xor
mov
mov
das
scas
mov
cmp
adc
cli
push
xchg
movsb
sbb
jnp
xor
xchg
gs
fcoml
dec
sbb
xor
sbb
cmp
jnp
pop
outsb
lds
rcll
pop
dec
xor
or
std
jae
or
cs
in
push
out
sub
cmp
out
dec
sub
mov
mov
pop
subps
aam
mov
sti
fwait
mov
jne
mov
mov
mov
scas
add
hlt
ret
scas
dec
pop
xor
out
insb
lea
or
and
pusha
je
cmc
scas
pop
xchg
jp
jp
mov
imul
inc
adc
and
stos
mov
f2xm1
mov
and
cli
adc
rcll
mov
pop
je
aad
jo
mov
adc
pop
push
les
sbb
sub
mov
or
xlat
push
add
mov
ficoms
clc
pushf
push
jecxz
sti
xchg
jecxz
xchg
and
insl
add
pop
mov
aad
aam
out
into
jp
xchg
testl
in
mull
sbb
cld
cmc
mov
out
adc
dec
aad
lock
clc
jg
and
mov
lcall
xchg
and
push
fsubs
stos
loopne
addr16
daa
pop
dec
inc
dec
jge
adcl
fildll
mov
repz
fisttpl
sbb
sub
or
xchg
fistps
std
mov
insl
xlat
out
sub
add
xorb
fsubrs
add
nop
jge
inc
cld
sub
inc
xor
pop
gs
inc
jnp
xor
mov
loope
pushf
repz
cwtl
imul
and
pop
jnp
stos
sub
or
lcall
flds
add
push
or
push
aam
lea
lret
cmp
ds
popa
aad
add
aam
repnz
mov
bound
jno
faddl
jl
xor
in
inc
inc
lret
addr16
pop
cld
or
dec
cwtl
push
add
push
sbb
call
xor
sub
pop
pushf
adc
outsl
mov
inc
aas
int3
push
cmp
or
xor
aaa
add
push
jne
jle
jbe
sub
sahf
and
cmc
das
test
and
in
adc
std
pop
mov
mov
push
scas
cmp
xor
ss
sbb
insl
mov
and
cmp
and
popa
xchg
dec
je
leave
sbb
rcll
loopne
mov
adc
sarb
inc
loop
leave
mov
cmp
mov
push
cs
mov
je
mov
xchg
or
lods
add
lahf
mov
test
adc
cltd
sti
pop
sub
mov
imul
sbb
mov
xor
xchg
xor
cltd
femms
int3
cltd
jno
push
cmc
sub
push
dec
rcrb
dec
je,pt
mov
inc
mov
mov
sbb
add
addr16
mov
fldl
fisubs
push
cld
jle
xchg
hlt
nop
dec
pop
test
mov
ds
addr16
add
push
jmp
repnz
add
xchg
inc
mov
pop
mov
bound
jo
mov
xchg
mov
es
scas
stos
xchg
inc
cmp
out
and
cmpsb
das
es
adc
cmp
fcmovbe
enter
pop
call
hlt
pop
pusha
push
cltd
loopne
mov
inc
and
imul
and
call
rcr
sbb
outsl
add
pop
jmp
inc
out
stc
test
and
dec
jb
adc
test
stos
add
loope
das
mov
scas
pop
sbb
mov
lods
sub
ja
int
aas
and
add
out
pusha
adc
movb
rdmsr
jo
sbb
push
rcrb
fidivs
popa
dec
adc
and
push
xor
hlt
jmp
test
lock
fcmovne
icebp
add
xor
dec
inc
jae
mov
clc
aaa
sbb
cmpsl
test
xlat
movsl
jbe
or
loope
adc
movsl
mov
in
push
orl
lret
jo
mov
jge
push
roll
mov
lea
cltd
lret
sbb
fdivrl
lahf
pop
xor
pop
cmp
clc
mov
imull
push
add
in
cmc
sbb
xorl
sub
mov
cltd
mov
pop
mov
iret
ret
and
lcall
cmp
outsl
cs
cmp
cs
cld
int3
jle
cmp
out
mov
pop
out
adc
xchg
add
and
test
xchg
inc
pop
sub
pusha
mov
lds
cld
jg
xchg
pop
add
aaa
xchg
mov
ja
and
push
or
mov
adc
dec
pusha
scas
mov
jmp
fmul
aas
stos
pop
inc
test
lcall
sbb
fs
mov
dec
pop
dec
jnp
pop
jmp
mov
cmpsb
fldcw
fwait
cmp
jle
inc
sbb
pusha
pushf
push
and
lahf
xor
imul
push
imul
shrb
jnp
loope
xor
fs
jmp
push
ljmp
adc
dec
stos
mov
add
popf
jecxz
inc
or
and
push
cltd
mov
cli
shl
fcompl
jmp
ja
fsubs
mov
or
push
lock
or
lret
mov
mov
jp
loop
fbstp
aaa
xchg
pop
jp
cmpsb
push
push
cwtl
xor
pop
mov
xchg
imul
inc
pop
scas
mov
clc
inc
movsb
ljmp
xor
push
pusha
lgs
decl
jns
into
lock
inc
dec
or
add
je
nop
push
popa
xor
and
mov
std
lret
movsl
lock
outsb
mov
mov
and
les
or
mov
adc
dec
add
mov
cmp
or
das
mov
adc
sti
sti
mov
ja
into
inc
dec
stos
xlat
out
js
add
mov
jnp
fnsave
pop
xorl
jle
xor
cmp
mov
int
frstor
sbb
mov
mov
out
repnz
xor
xchg
cld
jns
imul
cs
or
mov
int3
and
cmp
mov
fadds
jae
xor
gs
push
and
insl
adc
arpl
aad
jg
xor
sub
lods
arpl
js
push
cmc
imul
pusha
xchg
xchg
lods
stos
add
cmpsb
sbb
outsb
adc
sbb
stos
pop
mov
movsb
xchg
mov
popf
pop
and
and
dec
les
pop
push
xchg
test
jns
adc
mov
inc
fcoml
sarl
stos
mov
pop
iret
incl
dec
mov
mov
imul
dec
addr16
mov
mov
test
or
cmp
and
pop
pusha
fisubrs
scas
xchg
shr
cmp
push
or
shll
adc
dec
stos
popa
mov
fnstcw
add
inc
push
xchg
or
lret
adc
push
insb
lock
push
sub
dec
movsb
push
or
dec
daa
ret
movsl
scas
lcall
cmp
cmpsl
jno
std
dec
mov
cmpsb
test
pop
lds
jl
jo
xlat
cs
sub
jmp
mov
and
int
loopne
dec
je
loopne
xchg
lret
mov
add
mov
sbb
jge
sub
sub
les
pop
xor
mov
jp
ret
lahf
aad
inc
mov
sbb
stos
addr16
mov
dec
push
cmp
in
xchg
clc
mov
arpl
and
movsl
mov
pop
pop
ret
fdivrs
aaa
loopw
sub
cmp
and
xchg
aas
fwait
outsb
lret
adc
xor
fs
cmp
dec
mov
xchg
pop
leave
pop
mov
mov
mov
mov
jg
out
dec
stos
add
ljmp
push
push
das
test
outsl
sbbb
mov
jns
lcall
iret
das
xchg
ffreep
mov
cli
mov
adc
lret
dec
mov
test
das
adc
mov
sbb
mov
add
rorb
divb
repnz
cmpsb
push
sub
cltd
das
aas
pop
inc
lcall
icebp
andb
push
cli
adc
or
aas
add
jle
fs
je
cmp
lahf
mov
or
lea
jge
das
test
cmpsb
push
jno
ljmp
jg
mov
sahf
push
xor
add
repnz
lods
jbe
sub
les
push
cmpb
push
mov
sbb
ljmp
sbb
rcrb
sbb
aaa
nop
mov
bnd
push
es
mov
xchg
pop
jne
pop
and
jp
es
mov
adc
lds
loope
fldenv
or
sub
dec
push
or
in
icebp
js
sub
jle
mov
and
xchg
fisubrl
ss
add
es
test
mov
jg
int3
adc
movsb
in
and
dec
int3
ss
cmpb
adc
loopne
xchg
xchg
cmp
loope
xchg
cli
cli
or
cmpsw
mov
cmp
sbb
in
push
fcmovne
dec
mov
mov
rcrl
cmp
sub
or
icebp
lock
unpckhps
scas
mov
rcrl
imul
dec
mov
lods
fidivrs
and
scas
incl
dec
sub
mov
in
mov
xchg
dec
lds
xchg
xchg
scas
sarb
xor
gs
pop
xor
inc
out
mov
popf
cwtl
jne
pop
sti
adc
jnp
add
sub
jbe
adc
add
js
cltd
cld
push
dec
ret
arpl
xlat
mov
cs
cmpsb
pop
adc
cmp
jl
mov
stc
mov
jecxz
mov
out
mov
cmp
adc
hlt
xchg
mov
mov
inc
jge
ljmp
sbb
add
xchg
jecxz
lods
pop
scas
mov
or
sbb
lret
lock
push
aaa
aaa
sbb
pop
sub
xchg
cmpw
cmp
faddp
inc
clc
fildl
dec
inc
lea
fistpl
jns
testb
pusha
mov
testl
and
xor
rcrb
shll
lret
mov
test
xor
sahf
mov
lahf
mov
iret
mov
push
jg
jecxz
mov
or
xchg
loope
loop
sbb
addr16
pop
xor
add
cmpb
out
arpl
or
sub
andl
lret
negb
jno
cli
stc
sahf
mov
push
push
sbb
mov
icebp
test
sbb
push
mov
dec
ret
insl
sub
push
push
xchg
fcompl
arpl
mov
xchg
push
xchg
and
bound
and
pop
shll
stos
xor
lock
bound
mov
push
adc
xchg
rolb
xor
dec
add
push
push
xchg
cltd
test
adc
jno
dec
divl
xor
ret
adc
and
subl
movsl
adc
popa
cmp
and
fcomip
into
pop
cltd
movsb
out
ret
sbb
dec
icebp
popf
push
ds
pop
pop
outsl
fstpl
shll
jmp
or
push
push
pop
into
dec
dec
cs
and
jg
lret
or
ljmp
and
sarb
insl
mov
jno
orl
repnz
adc
notb
lahf
rorb
inc
mov
lea
xor
loope
es
lds
or
add
add
out
sbb
xchg
push
adc
pop
or
add
cmp
jo
lret
rolb
or
mov
jae
in
xchg
mov
lahf
dec
outsb
push
cmp
mov
out
adc
lds
cmp
dec
sub
sbb
shll
cmpsl
push
adc
out
fimull
push
mov
iret
xchg
fwait
jae
movsb
mov
cwtl
xchg
pop
call
push
imulb
cmp
movsb
cmp
mov
inc
cwtl
hlt
xchg
or
mov
mov
lock
test
dec
push
fdivs
pop
mov
mov
cmp
lret
out
lea
dec
scas
dec
fs
lahf
pop
js
les
dec
clc
jne
sub
loope
int
and
in
orb
mov
xlat
sti
xchg
sbb
sub
add
insb
nop
jb
fwait
lcall
mov
mov
mov
movsb
sti
inc
cmp
pop
ljmp
cmp
adc
pop
orb
push
pop
mov
cld
dec
loopne
in
lret
jns
lds
or
add
iret
sbb
push
or
outsl
xor
loope
frstor
mov
out
and
dec
ret
xlat
idivb
inc
pushf
fnstenv
or
subl
mov
jbe
sub
lock
dec
roll
and
fistpl
push
out
nop
push
cmpsl
mov
addr16
stc
inc
fldt
movl
insl
shlb
dec
out
add
es
les
mov
loop
jbe
xchg
inc
rol
jbe
cltd
lds
je
jo
mov
or
cmp
inc
call
loop
and
inc
lods
ficompl
dec
fists
iret
xchg
and
mov
scas
push
fmuls
cwtl
jne
mov
punpckldq
cmpl
jnp
adc
push
dec
pop
add
adc
push
rcrb
add
ja
iret
jmp
mov
adc
or
sub
dec
xchg
jg
inc
cmpsb
push
sbb
js
pop
dec
addr16
lea
shll
and
imul
or
test
in
mov
or
mov
outsb
sbbb
aad
jb
and
sub
cmpsb
pop
fwait
in
aaa
mov
jne
sbb
lcall
inc
shrl
dec
stos
or
iret
ljmp
xlat
pop
cmp
sub
inc
add
out
cmp
fwait
mov
pop
adc
clc
arpl
jl
mov
shr
pushl
jno
ret
xchg
int
push
pop
adc
js
ds
push
sub
scas
lret
stc
imull
loop,pt
adc
cmp
dec
cli
sub
std
or
scas
sahf
je
push
pop
cmpsl
iret
iret
sub
mov
push
mov
arpl
clc
fs
mov
push
je
pop
enter
jmp
ljmp
dec
push
xchg
clc
cmpsb
sarl
mov
out
ret
sbb
or
lahf
in
movsb
fdivs
sti
cmp
adc
jg
mov
pop
xchg
sti
outsl
sbb
push
lea
push
jmp
testl
imul
inc
test
mov
rolb
testl
mov
setle
ds
push
push
mov
enter
sbb
cmp
mov
data16
adc
jle
cltd
incl
pushf
cmpl
in
shll
and
sbb
aas
rclb
lcall
aas
adc
dec
and
dec
sub
fnstenv
xchg
ja
mov
in
mov
loop
fnstenv
or
aas
mov
or
lock
push
cmp
fildl
lea
ret
xchg
pop
cmp
cmpb
cmp
mov
sti
lahf
mov
add
test
lahf
aam
sub
test
push
pop
fcmovne
arpl
jp
sbb
xchg
lcall
rcll
idiv
xchg
sbb
sbb
test
mov
xor
or
mov
push
and
loopne
imul
xor
cmp
hlt
clc
data16
inc
in
and
cmp
inc
xchg
aad
jns
addr16
lahf
or
cmpl
cmp
push
jne
cmp
xor
nop
mov
fcom
ficomps
ret
into
outsl
jge
das
fildl
gs
bound
fisubrs
scas
and
sub
adc
and
loopne
mov
mov
das
pusha
pop
push
repnz
cmc
adc
adc
inc
mov
inc
fistpll
sti
dec
adc
sub
insb
xchg
mov
mov
ficomps
in
dec
lret
pop
test
ret
inc
add
cld
sbb
and
lret
mov
xchg
int3
jb
mov
adc
mov
xchg
jge
xchg
iret
mov
jl
out
movlps
mov
xchg
or
fiadds
hlt
shr
call
adc
out
mov
or
jo
ja
packuswb
adc
xchg
pop
mov
out
and
add
push
push
xor
ret
inc
lods
call
scas
or
ret
stc
fwait
pop
stos
xor
and
lcall
cmp
std
lret
cmpsb
xchg
mov
ds
mov
xlat
push
xorb
xor
cmp
mov
or
push
mov
push
test
mov
pop
xchg
sbb
test
das
test
or
ja
in
addr16
pop
cmp
repz
lahf
jecxz
and
insb
fsubrs
jbe
rolb
lcall
adc
loop
mov
pop
and
dec
mov
jno
dec
xor
in
std
ret
jns
out
test
cli
cmpsl
addr16
in
cmp
lods
mov
adc
hlt
xchg
movl
lods
mov
add
xchg
mov
and
mov
sub
push
fmull
test
inc
pop
enter
mov
push
jecxz
push
clc
icebp
loope
mov
pop
int3
cmp
cmp
lods
pop
adc
outsl
or
das
cltd
out
subb
mov
mov
or
jae
jne
pop
xor
mov
sbb
arpl
xchg
add
pop
scas
hlt
add
sbb
pop
popa
dec
das
xchg
or
clc
add
jle
xchg
jno
fidivrl
in
leave
aad
repnz
in
pop
lods
xor
cs
pop
push
sub
std
addr16
daa
push
sub
add
lods
push
lahf
sbb
imull
add
les
or
mov
xchg
icebp
fsubrl
sub
xor
xor
and
jmp
lret
jmp
sbb
mov
rclb
pop
push
and
adc
sbb
loop
shl
ds
call
sbb
inc
std
or
pop
je
sub
loopne
lret
cld
xor
scas
shrl
mov
push
leave
dec
pop
repnz
pop
add
mov
fsubr
mov
mov
das
iret
sub
jns
leave
popa
dec
idivl
pop
ret
int
mov
mov
xor
bound
cmp
pop
addr16
cmp
add
pop
dec
xchg
outsl
lds
dec
mov
dec
das
pop
push
jns
and
mov
inc
mov
push
sahf
push
ret
cmp
and
mov
cld
fsubrl
ds
mov
mov
sbb
imul
jmp
adc
cltd
incl
mov
sahf
ja
push
dec
aad
gs
inc
dec
mov
mov
sbb
out
repz
sbb
loope
xchg
sub
andb
cmc
xor
rol
and
aas
lret
mov
repnz
in
test
dec
mov
mov
movsb
pop
xchg
out
push
dec
mov
jecxz
shlb
sbb
sbb
sbb
sub
mov
mov
ljmp
mov
mov
pop
sub
xchg
int3
cs
push
push
push
jbe
jmp
add
xchg
adc
stos
or
outsb
mov
mov
clc
subb
ret
ja
enter
mov
dec
mov
aam
fcomp
into
hlt
mov
loopne
outsl
mov
es
dec
lock
test
xor
movsl
aas
jg
push
pop
push
andl
call
sbb
sub
pop
xor
mov
cmpsb
xlat
leave
xchg
pusha
outsl
mov
pusha
cli
mov
mov
or
arpl
adc
xchg
mov
add
pop
sahf
adc
mov
scas
in
mov
sub
jb
xchg
lea
or
aas
in
xchg
inc
or
adc
rorl
or
orb
adc
std
mov
std
inc
not
mov
pop
add
push
pop
mov
out
or
popf
push
into
jne
pop
imul
rorb
sub
jge
sbb
mov
xor
and
mov
sbb
out
cmp
outsb
xchg
call
xchg
sub
out
ja
out
lret
imul
add
push
sbb
and
inc
inc
scas
fistl
fucomi
cmp
jns
cli
in
mov
xor
fistps
mov
arpl
adcb
inc
insl
mov
popa
push
mov
nop
jecxz
pushf
cmpsl
xor
jg
dec
call
mov
dec
add
pop
addr16
mov
dec
cli
sahf
dec
push
push
xchg
div
insb
cmp
out
push
mov
sub
frstor
inc
cmp
and
sbb
sbb
mov
rol
outsl
lods
push
mov
ljmp
int3
sbb
cmpsb
push
jle
cmp
insb
inc
sub
and
xchg
je
inc
fistpl
sbb
cmpsl
stc
cld
jge
es
cmp
stc
cmp
mov
and
jae
mov
adc
nop
jnp
hlt
add
add
mov
out
sti
pop
fimuls
jmp
int3
adc
mov
pop
pop
pop
popa
pop
ja
sub
dec
cli
cmp
xlat
xchg
sub
jp
jle
je
out
jne
xchg
test
scas
cld
cwtl
dec
lahf
cmp
and
call
push
fimull
add
jbe
fwait
mov
mov
ret
stos
xor
and
data16
movsl
push
sub
daa
sbb
mov
inc
mov
ss
mov
pop
in
add
or
add
ljmp
xor
jnp
enter
sub
gs
rcrl
cmpsb
pop
jno
mov
add
mov
testl
mov
push
mov
inc
sbb
les
negl
and
mov
int3
es
xchg
cs
cmpsl
inc
mov
inc
or
jb
pop
dec
xor
xorl
or
pushf
jbe
inc
mov
add
test
out
inc
mov
xor
pushf
std
and
mov
push
in
xchg
addl
sbb
sarl
dec
xor
xchg
cli
or
cmp
push
inc
or
xchg
call
jle
mov
ljmp
lds
jno
cmc
fcoms
incb
dec
mov
cmp
pop
jge
stc
fcompl
fists
jae
mov
cltd
in
stos
ret
enter
ffreep
mov
inc
cld
mov
stc
jb
pusha
inc
rcl
pop
movsb
fwait
rcrb
xor
mov
sub
jns
out
out
inc
xchg
mov
rcll
stos
and
insb
pop
inc
xorl
jbe
testl
cwtl
push
push
xchg
sub
maxps
fmull
xor
ret
pop
gs
or
sbb
fcomip
pop
xor
add
sbb
mov
mov
test
repz
daa
pushf
insb
lock
dec
or
mov
mov
cmovg
test
add
es
and
push
hlt
testb
and
shr
out
test
or
loope
mov
leave
shrb
push
or
cmp
setge
fiadds
push
xor
popa
aam
jno
punpckhwd
push
adc
inc
movsl
push
add
pop
jge
sahf
sbb
stos
add
int3
nop
sbb
lret
sub
push
cmp
sbb
jns
mov
std
in
inc
stos
sbb
addr16
or
das
inc
lods
loope
xor
push
mov
enter
ljmp
adcl
mov
xchg
lock
sbb
pushf
cmp
sarl
testl
lret
test
jnp
and
leave
aad
jnp
or
mov
xor
sar
push
pop
adc
jbe
insb
fndisi(8087
and
lahf
mov
test
out
in
sub
stos
pop
jno
out
stos
and
pushf
push
adc
lock
mov
hlt
js
cmp
mov
pop
push
dec
mov
sbb
outsb
into
movsb
push
mov
or
mov
push
and
daa
enter
jle
jb
mov
iret
inc
clc
push
push
out
cmp
cmp
js
call
loop
jb
lret
aas
push
iret
jo
test
sbb
inc
lret
and
cmp
cmp
cmp
and
and
xchg
das
test
pusha
fcmovbe
inc
pop
in
jg
cli
mov
dec
xor
out
stos
inc
sub
roll
lea
popf
dec
mov
and
or
in
mov
jge
addb
out
rclb
hlt
or
mov
fidivl
mov
loop
fs
pause
lret
push
cmp
push
jl
lret
rorl
aaa
xchg
dec
mov
mov
in
pop
adc
dec
inc
add
mov
mov
dec
lret
add
cmp
fs
lret
test
pop
out
cld
cmp
pop
pop
xorb
fidivs
mov
xor
add
sti
es
stos
push
jp
xchg
mov
insb
dec
push
xchg
push
pop
xlat
push
stos
sub
mov
inc
lret
and
xchg
push
mov
cmp
add
xchg
lahf
rcl
nop
fstl
lock
test
inc
jne
xchg
sub
sbb
clc
pushf
mov
out
in
inc
inc
fs
orb
xchg
mov
lret
insb
fisttpl
adc
add
icebp
fcoml
aam
fmul
push
xor
mov
cld
mov
lock
sarl
aas
lods
enter
orb
pushf
sahf
dec
mov
in
fs
test
clc
je
mov
pop
push
pusha
stos
lock
mov
sbb
cli
jnp
rorl
int3
es
mov
ror
mov
ret
out
push
push
jae
inc
push
rcr
test
test
fsubrs
mov
jns
aam
xchg
pop
jb
sbb
cmp
xor
inc
fmul
sbb
or
dec
shlb
xchg
das
out
scas
adc
sbb
mov
adc
sbbb
cmpsb
sahf
xchg
pushf
dec
mov
mov
xchg
test
insl
popa
mov
xchg
jge
push
inc
les
pop
push
xchg
imul
and
fimuls
mov
divl
jl
iret
les
xor
xor
jecxz
ss
in
jp
push
sbb
mov
fdivp
roll
out
push
pushf
sbb
xchg
aas
or
repz
andl
pop
imul
outsb
xchg
cmpsb
cli
lahf
cltd
mov
push
lret
pop
xchg
test
in
test
pop
std
pop
jp
lods
shll
fldln2
sbb
xchg
imul
mov
xlat
xor
rolb
mov
sub
and
into
and
cmp
mov
mov
sbb
scas
push
cwtl
addr16
push
sahf
add
fs
sbb
add
mov
loopne
sbb
pop
repz
dec
icebp
jl
mull
fsts
mov
push
mov
xchg
stos
lcall
cmp
ret
push
mov
fidivs
inc
or
icebp
test
inc
jb
cli
mov
leave
add
adc
movsb
scas
test
and
dec
in
mov
shll
mov
mov
add
mov
and
call
lret
add
jle
sub
sbb
adcl
and
sub
ja
sub
ret
pop
pop
sub
adcl
xchg
pop
test
and
or
ret
aad
or
add
rorl
lds
fbld
jne
inc
test
mov
lea
jge
insb
cltd
ret
out
xor
xchg
pop
jl
lret
repz
adc
addr16
push
mov
bound
pushf
ret
inc
adcl
addb
or
adcl
xchg
data16
shll
cmp
pop
lods
pop
add
xor
js
in
xchg
lcall
pop
imul
daa
xchg
xor
gs
pop
jl
push
mov
aas
aad
mov
pop
jge
adc
mov
and
mov
or
push
xchg
xchg
cmpsl
pushf
imul
lods
adc
inc
iret
mov
fdivl
add
sbb
mov
dec
cmpsb
jb
in
test
icebp
adc
scas
fisttpl
push
jge
mov
shll
add
fmul
js
pop
out
jle
inc
adcl
sahf
add
int
adc
scas
int
sti
or
sbb
jo
mov
sub
xchg
clc
mov
lret
insl
imull
loopne
shrl
mov
ds
fwait
push
or
dec
rorl
mov
cld
test
cmpsl
insl
push
test
pop
sbb
std
mov
mov
orb
cmp
enter
or
jae
xorb
sbb
leave
pusha
pop
add
js
sub
sbb
icebp
or
rol
mov
mov
jb
into
push
dec
sub
pushf
xor
adcb
movq
lea
fisttpl
gs
cmp
xchg
bound
xchg
je
ret
xor
test
jne
rcll
movsb
xchg
sub
mov
and
flds
pusha
hlt
push
leave
push
mov
in
sbb
out
and
stos
fistl
lret
mov
xchg
scas
fnstsw
pop
cs
repz
arpl
aas
jecxz
sbb
mov
fcoms
in
repnz
and
sub
rclb
js
mov
sub
lods
stc
shrb
pop
cmc
add
lahf
call
add
insb
jmp
dec
in
xchg
dec
daa
fnstenv
inc
and
push
clc
cmpsl
push
jnp
adc
fwait
lock
cmp
add
icebp
or
lret
xorl
xchg
jle
cmp
mov
xchg
pop
dec
rorw
out
mov
dec
push
xor
into
repnz
xchg
dec
das
jbe
out
andb
pop
mov
dec
cli
aaa
push
and
xorl
xlat
add
pusha
xor
lcall
js
add
cmpsb
shlb
out
outsl
xchg
dec
fstps
je
fdivl
push
popf
addr16
cmp
inc
sti
leave
and
mov
dec
mov
rol
mov
add
aaa
popa
or
scas
pop
xor
inc
inc
vaddss
pop
test
out
cld
dec
ret
mul
sub
dec
cltd
xor
add
push
stos
inc
cmp
add
data16
lret
movb
dec
je
sbb
mov
in
mov
fstpt
mov
shlb
insb
xlat
arpl
stos
bound
shl
repnz
cs
popf
add
push
movsb
loop
cli
jae
sbb
movsb
cs
aaa
mov
adc
sub
out
jno
rol
arpl
cmpsl
mov
inc
aas
in
mov
idivb
pop
jmp
push
mov
mov
dec
fstps
xchg
push
lods
jae
fdiv
popa
sarl
dec
dec
adc
clc
mov
fstl
cmp
enter
or
call
test
dec
cwtl
mov
jne
pushf
add
loopne
lock
pop
fs
stos
sub
adc
xor
adc
inc
out
push
jl
cmpsb
and
gs
cmpsb
and
int3
mov
movsl
fwait
ja
mov
inc
repz
shrb
icebp
sub
sbb
pop
mov
js
jmp
push
incb
test
push
sub
jmp
pop
mov
mov
lcall
sbb
jae
or
into
lcall
jno
or
dec
sub
ret
pushf
mov
psubw
adc
and
dec
shlb
stos
daa
xor
into
push
notl
lds
insl
sbb
insl
into
aad
movsb
popf
adc
mov
xor
mov
push
or
imul
ds
sub
ljmp
jl
mov
ds
jns
enter
inc
inc
mov
and
loop
insb
pop
add
cmp
lock
fsubs
rcll
adc
xlat
sub
fmull
aaa
cmp
jbe
outsb
push
push
pop
test
mov
cld
xor
dec
cwtl
imul
adc
lock
mov
inc
jle
jmp
lock
fiaddl
mull
outsb
xchg
dec
aaa
push
out
mov
lods
and
cmc
mov
mov
loop
out
fs
leave
lods
adc
add
out
fmull
push
stc
sub
dec
pushf
dec
cltd
imul
mov
sub
call
or
and
xor
sub
lods
mov
xor
leave
mov
cmp
js
in
out
cmp
push
pop
adc
ss
popf
test
mov
es
enter
lods
cmpsl
mov
xor
ja
adc
jbe
orb
insl
ss
lahf
test
jmp
loopne
cmp
shlb
sub
fs
icebp
xchg
adc
sahf
repz
add
mov
div
pop
in
sub
mov
sbb
xchg
mov
pusha
ss
gs
arpl
xlat
dec
pop
add
lret
add
stos
mov
fstp
test
test
scas
and
hlt
cs
mov
add
xchg
adc
mov
pushl
adc
test
cld
mov
idivb
sub
mov
out
mov
sub
pop
nop
mov
cmp
test
and
and
out
lds
icebp
dec
mov
out
cmp
in
decl
and
jp
push
inc
xchg
or
sbb
jae
pop
in
rcr
pop
push
cmp
push
in
dec
xchg
and
xor
adc
arpl
push
loope
clc
push
mov
test
mov
pop
into
std
add
aam
mov
mov
adcl
bound
inc
or
mov
sbb
adc
cmpsb
and
mov
jns
psllq
xchg
sarl
cmc
inc
test
gs
inc
mov
out
mov
dec
cwtl
or
jb
dec
adc
cli
cld
lds
push
jp
aam
fcom
push
jne
jp
mov
call
dec
stos
xor
fs
fcomip
add
sahf
ret
cmp
imul
stos
cmpsl
dec
in
jb
scas
xchg
mov
sar
mov
xor
movsl
sahf
inc
repnz
loope
mov
jne
sub
aas
jo
xorb
sbb
mov
aad
inc
xchg
mov
push
or
adc
neg
xchg
add
int3
mov
adc
test
add
in
sbb
push
dec
aad
ds
jecxz
not
loope
xchg
mov
push
mov
pushf
into
stos
stos
jo
and
jecxz
test
xor
dec
sub
xchg
pop
pushf
pop
push
add
cmpsb
and
fsub
into
pop
ss
scas
mov
sbb
pusha
inc
mov
add
aam
in
jle
mov
shr
or
ss
pusha
jmp
adc
scas
add
sub
ja
jb
sarl
mov
insl
psubq
test
gs
loope
ds
rorb
pusha
es
inc
or
mov
dec
xchg
pop
xor
lock
int3
fwait
mov
sub
sub
mov
out
pop
movsb
inc
push
mov
je
mulb
stos
fisttpll
cmp
mov
jo
mov
sbb
mov
add
out
and
in
mov
or
das
xabort
aaa
push
sub
mov
lahf
adcb
mov
jno
ja
mov
addl
dec
out
xchg
dec
xchg
mov
cmp
push
jno
xchg
jnp
xchg
daa
push
fwait
cltd
push
jne
out
out
sti
mov
sub
sub
out
icebp
xchg
sbb
cmp
sub
lahf
jg
and
lods
jmp
call
cmp
mov
pop
mov
pop
adc
jne
out
push
add
cli
int3
mov
sub
jmp
inc
adc
xor
sti
loop
dec
stc
lea
push
stos
mov
in
into
pop
mov
mov
mov
or
fdivrs
and
dec
fcoml
rorb
jo
cmp
pop
mov
push
jne
sub
adc
ja
outsb
push
cmp
scas
jo
mov
es
cld
sbb
jnp
scas
hlt
pop
addr16
popf
mov
ja
or
scas
rorl
leave
mov
aaa
inc
dec
fwait
or
pop
add
mov
stos
js
cmp
mov
xchg
test
and
or
jmp
mov
or
add
mov
xor
push
sbb
sar
movsl
pop
lret
lods
jge
dec
pop
push
mov
stos
jne
daa
mov
pop
cltd
hlt
xor
sub
mov
aad
xchg
xor
rol
cld
add
sbb
mov
notb
sbb
cmpsb
fld
or
adc
mov
or
xor
dec
into
shr
fisubrs
imul
imul
push
imul
xchg
cmp
mov
pop
cli
cmp
inc
enter
movsl
and
aaa
dec
stc
jp
repz
cmpsl
jbe
subb
cmpsl
cmp
imul
loop
mov
lea
mov
push
sub
popa
fs
xorl
popa
or
cmp
std
lret
xchg
add
cmp
roll
mov
stc
jmp
cs
sub
insl
ljmp
jg
xchg
push
imul
adc
mov
pop
xor
lea
rep
push
loop
fiadds
hlt
jno
int
xlat
pop
dec
lods
pushf
xadd
pushf
leave
mov
nop
mull
mov
pop
sbb
lret
mov
std
test
fwait
dec
filds
adc
pop
mov
or
xor
pop
aam
sub
adc
add
pop
sbbb
mov
xchg
lea
scas
outsb
pop
xchg
cmp
dec
les
rorl
jl
cwtl
and
sarl
sahf
test
xor
testl
in
push
cmpsl
sbb
fsubr
mov
js
lods
stos
and
rorb
es
stos
cltd
jecxz
int
sbb
js
lds
jo
repnz
mov
add
fdivrl
stc
jbe
cmpsl
pop
or
jbe
gs
ljmp
mov
xchg
jl
stos
psubusw
fdivrl
add
cli
popa
mov
loop
fsts
cli
insl
cmpsb
addb
out
insb
fisttps
mulb
mov
add
lock
mov
xchg
push
inc
mov
xor
call
repnz
mov
aaa
stos
repz
sub
inc
jl,pn
jecxz
or
iret
test
dec
jne
loopne
mov
add
mov
icebp
rcll
iret
es
add
sbb
sbb
and
dec
fsubr
lods
cmp
dec
or
dec
aad
arpl
imul
dec
or
pop
adc
nop
addr16
mov
jns
jnp
dec
sbb
push
inc
fwait
sbb
insl
aaa
inc
and
cmp
pop
das
mov
cmpsb
jbe
mov
popf
ret
or
inc
dec
out
pop
inc
ja
insl
in
imulb
inc
sbb
xor
in
leave
mov
xchg
xchg
or
into
ss
add
inc
inc
pop
or
or
clc
push
sub
fistpl
inc
mov
xchg
xor
daa
movsl
mov
popl
scas
mov
push
lods
mov
xor
push
rcl
xchg
cmp
cld
iret
dec
mov
outsb
mov
in
pop
pushf
add
mov
fimuls
push
loope
pop
shrb
lock
aad
dec
lret
jl
insb
fisttps
out
fildll
pop
inc
in
mov
mov
mov
cs
lret
adc
mov
fimull
js
lret
xor
xchg
mov
lods
or
jnp
xor
sbb
or
pop
cmc
xchg
cs
test
emms
pop
stos
inc
js
pop
out
jb,pt
addr16
pop
andb
xor
addr16
adc
seto
shl
pop
add
dec
andl
mov
dec
mov
xor
lods
fs
or
popa
push
mov
pushf
mov
cmc
mov
arpl
jnp
xchg
mov
fs
ret
cmp
xor
repz
fadd
scas
sub
into
lods
andl
pop
addr16
out
or
scas
mov
ret
sub
mov
sbb
imul
sub
lret
dec
mov
mov
sub
dec
nop
or
addl
push
pop
lcall
push
or
and
and
mov
sub
ds
in
jns
call
add
jno
movsl
sub
data16
clc
scas
mov
lret
inc
imull
cmpsb
dec
xchg
mov
nop
xor
loopne
fildl
mov
shl
call
imul
icebp
pop
aam
cmp
lock
hlt
mov
ds
cs
cwtl
mov
mov
test
imul
inc
sub
push
mov
xor
sub
sbb
mov
add
scas
jge
mov
iret
jl
xchg
fsubs
jns
lock
and
lock
and
mov
mov
push
inc
inc
and
aas
ret
xchg
inc
xchg
add
popa
adc
and
andl
lea
add
xor
paddsw
in
imul
push
mov
jbe
push
jae
mov
fistps
cmp
aam
mov
rorl
adc
dec
pop
movd
xor
push
pop
mov
lods
mov
push
push
lcall
jno
mov
or
pop
insl
insb
lods
lods
daa
cs
das
int
int3
clc
pop
xchg
sti
xor
push
in
outsl
and
inc
mov
repz
sbb
lretw
popa
insb
jbe
not
xchg
out
mov
fs
lock
mov
cmpb
inc
gs
cli
pop
lahf
cmp
ffreep
or
cwtl
lods
push
adc
hlt
pushf
insl
pop
push
cmc
sub
add
into
bnd
out
les
inc
jae
and
scas
pop
cmp
dec
insb
pop
hlt
inc
jns
jecxz
jg
mov
imul
push
popa
cmp
adc
bound
inc
or
les
sarl
aad
dec
lods
testl
push
pusha
dec
pop
push
mov
or
push
rorb
fstp
dec
scas
test
xor
push
mov
dec
xor
das
call
fcompp
ret
fcom
cmp
add
sbb
cmpsl
mov
ljmp
out
int3
push
adc
sbb
adc
push
out
mov
mov
xchg
vpaddb
enter
mov
adcl
int
jecxz
repz
jb
divb
xchg
sbb
cmp
mov
mov
mov
std
aad
add
shlb
arpl
mov
fstpt
jno
push
push
ret
sub
jg
fbld
or
mov
jae
lock
push
repz
cmp
jle
xchg
xlat
inc
mov
add
push
inc
sbb
iret
ss
leave
add
in
dec
push
out
xchg
cmpsl
push
add
into
cli
inc
jae
mov
icebp
pop
inc
dec
icebp
sbb
or
repz
lods
repz
les
insb
xlat
jg
enter
notb
and
xor
fbld
add
cmp
jo
add
or
faddl
movsb
pop
insl
ret
or
mov
ret
push
or
imul
add
sub
jg
cmp
adc
xchg
test
mov
sbb
and
mov
lret
push
or
bound
test
sub
fsubs
out
push
movsb
pop
rep
call
int3
stc
xchg
adc
jae
push
cmc
mov
inc
jp
inc
cmp
mov
lods
and
xchg
add
lret
lods
nop
das
leave
fwait
test
out
adc
xor
mov
sub
mov
mov
push
or
jecxz
dec
mov
enter
movb
out
add
sahf
insb
inc
pop
sbb
push
orl
scas
out
mov
add
dec
cli
loopne
lock
and
rep
push
bound
aam
jle
sub
insl
and
push
jne
jl
imul
or
or
aaa
push
mov
jb
lret
dec
lods
inc
or
sub
jns
adc
adc
clc
push
gs
in
out
fs
mov
sub
adc
loope
push
mov
decb
jg
and
lods
lods
das
dec
cmp
dec
dec
lods
add
dec
or
pop
insb
test
mov
cmpsb
call
mov
jmp
cmp
outsl
out
imulb
lea
mov
cwtl
xor
ljmp
out
mov
stos
into
stc
dec
xor
filds
cmpb
stc
lods
gs
popf
add
arpl
in
ljmp
flds
inc
rorl
jns
mov
scas
je
out
test
test
insb
cmp
pop
loope
sbbl
adc
adc
mov
add
or
mov
xchg
push
dec
adc
xor
ret
add
icebp
mov
jl
loop
or
adc
lahf
dec
sarb
gs
mov
ljmp
ffreep
sti
sti
pop
stc
inc
mov
pop
and
and
lock
test
mov
xchg
inc
js
in
imul
aad
adc
scas
cmpsl
mov
mov
out
repz
push
adc
test
mov
andb
and
into
test
sbb
cld
lds
add
fwait
addr16
jbe
pop
sbb
rorl
clc
clc
jno
mov
inc
sub
and
fsubp
cltd
push
xor
mov
push
xor
inc
aad
test
mov
inc
cmp
mov
adc
add
scas
inc
sbb
push
xor
sti
add
out
cmp
mov
ret
bound
add
mov
sahf
sub
fwait
popa
mov
in
dec
clc
loope
sahf
sub
mov
xchg
and
clc
rcrl
inc
push
jae
decb
cld
js
adc
out
lock
add
test
xchg
sub
stos
rcrl
cmp
aam
xchg
iret
xchg
orl
insl
icebp
aaa
nop
sub
xchg
sub
repnz
mov
scas
jae
iret
stos
sbb
aas
cltd
lea
inc
lcall
add
popa
mov
repnz
dec
adc
cmp
stos
scas
push
mov
mov
jl
mov
loope
fs
mov
xor
flds
mov
and
int
pop
or
scas
iret
fdiv
lods
mov
cmp
jecxz
int3
jae
dec
aas
out
mov
int
cmp
cmp
sbb
aam
or
fcoms
jmp
jae
fldenv
adc
repz
sub
adc
dec
mov
je
int
cltd
cmp
or
into
fidivs
pop
ret
cltd
cs
xor
imul
xchg
std
pop
add
repnz
lock
test
sbb
hlt
sbb
popa
xorb
and
out
fstl
push
xor
xor
cmpsl
push
shrl
sti
pushf
inc
dec
ret
push
sub
ret
out
out
cmp
call
xor
rcrb
movsb
ja
adc
sub
adc
out
call
mov
arpl
xor
lock
imul
mov
dec
and
add
pop
int3
cld
jne
or
les
or
push
idivb
or
cmp
pusha
cmc
mov
mov
sbb
mov
out
mov
or
xor
rcrb
loop
test
push
adc
sarl
xchg
mov
cmpsb
xor
sub
loop
outsw
rcrb
pop
and
lods
ja
aam
icebp
and
andl
inc
inc
scas
xlat
mov
outsb
dec
dec
lret
cli
popf
hlt
mov
pop
jns
inc
lcall
repnz
and
sbb
gs
fs
call
jnp
les
cmp
je
sahf
or
cmp
in
sti
test
lahf
mov
jle
xor
enter
sub
pop
push
lret
inc
mov
fs
and
adc
mov
mov
lret
jge
shrb
pop
rcl
push
mov
or
xor
sub
jle
call
adcb
mov
dec
mov
adc
je
or
sub
xchg
pop
push
movsb
rcr
iret
xchg
push
out
lcall
dec
iret
lret
mov
or
sbb
or
lea
icebp
mov
insb
pop
mov
push
lahf
xchg
cld
add
notl
sub
test
sbb
mov
outsb
mov
mov
push
jge
jmp
push
fstpt
mov
mov
movsl
mov
adc
cwtl
jns
ror
pop
neg
outsb
pop
enter
popa
inc
stos
push
stc
ljmp
out
es
xchg
cwtl
jmp
enter
repnz
inc
jns
in
nop
cmpsl
nop
mov
arpl
sub
aas
add
fldenv
mov
sbb
into
adc
sub
lods
aaa
lea
mov
add
xor
lcall
test
lods
insl
mov
cmp
loop
clc
cmp
cmc
lret
jb
les
jle
cli
stc
mov
mov
jno
enter
mov
repz
inc
xor
ret
sbb
iret
rcrl
xchg
loop
scas
and
insb
outsb
leave
jnp
insb
insl
sub
out
mov
lds
jp
mov
call
test
movsl
pextrw
arpl
xchg
movsb
mov
loop
inc
pop
cmpsb
jp
in
repz
insb
mov
ret
cmp
repz
mov
xchg
stc
pop
push
shl
aam
adc
mov
iret
add
cmp
mov
pop
push
jmp
mov
push
arpl
imul
or
sbb
inc
dec
xchg
sub
add
push
add
insl
lds
cmp
inc
out
adcl
adc
pop
loopne
xchg
mov
scas
mov
fldcw
inc
push
or
cwtl
loopne
dec
ss
xor
or
ds
adc
cmp
gs
lcall
out
push
dec
lea
push
jbe
push
fwait
xor
fdivs
cs
addr16
mov
lock
cmpb
adc
mov
ret
push
mov
jnp
movsb
notb
dec
fistpl
pop
bound
ljmp
inc
arpl
and
aam
lods
adc
push
in
push
pop
add
add
daa
jmp
lcall
and
outsl
shl
and
push
inc
push
dec
mov
pop
jne
adc
pushf
mov
addl
mov
mov
push
outsl
adc
adc
enter
hlt
pop
and
in
inc
mov
int
fadds
pop
dec
imul
or
dec
push
sahf
int
lods
fwait
and
imul
inc
lea
call
push
jnp
dec
mov
popa
hlt
jo
sbb
jge
lds
xchg
arpl
pop
test
enter
outsb
mov
shr
fsts
pop
pop
bound
jo
icebp
pop
loope
sub
xchg
fbld
stos
and
test
popa
or
xchg
push
sub
lods
cltd
dec
push
rol
mov
push
jg
popa
imul
push
js
daa
rcrb
jb
test
clc
loopne
addl
xchg
ret
pop
scas
imul
fisubs
fisubrl
jae
scas
inc
mov
notb
into
aam
xor
pop
inc
or
sbb
mov
std
scas
and
popl
xor
mov
call
decb
mov
and
mov
jg
outsl
cmp
dec
mov
fldl
adc
pop
add
mov
ja
add
outsl
xchg
xlat
or
xchg
pop
jne
cmp
movsb
hlt
shlb
xor
lods
cmp
iret
shll
pop
fstps
in
into
shlb
loop
cmp
adc
pop
in
test
cmp
neg
dec
ret
iret
fildl
fldz
fs
mov
inc
cltd
mov
notl
inc
notb
stos
adc
sub
rcr
dec
daa
jmp
xor
mov
les
fcmovne
orb
sub
mov
outsb
jb
xchg
pop
cli
xchg
push
iret
sub
push
xor
orb
or
pusha
mov
pop
inc
inc
mov
inc
xchg
dec
shll
cltd
es
pop
enter
mov
inc
int3
pop
imul
insl
clc
push
pop
xor
repz
jmp
dec
sahf
addl
negl
nop
jns
dec
or
mov
ja
stos
mov
cmpsb
cld
sahf
mov
dec
lods
inc
daa
push
push
addr16
cmc
xchg
lret
and
mov
mov
add
mov
ret
scas
push
pop
xor
cmc
ljmp
fwait
outsl
add
rcrl
push
data16
inc
fcoms
rcl
scas
mov
js
cwtl
sub
cli
xchg
jns
inc
hlt
mov
dec
push
and
mov
inc
sub
and
lret
popa
pop
not
mov
or
fisttpll
aad
pushf
mov
mov
fsubl
xor
add
pop
xchg
lods
stos
stc
dec
xchg
mov
mov
mov
jl
inc
stc
adcl
mov
push
mov
sbb
cmpsl
mov
mov
aaa
insb
xchg
lret
mov
dec
xorl
pop
jmp
ret
ljmp
mov
inc
add
push
push
mov
out
cmp
mov
out
outsl
or
push
and
cmpsl
mov
jmp
ret
sub
cwtl
sbbb
and
sub
ljmp
and
nop
sti
mov
cmp
push
mov
cmc
dec
outsb
loop
into
cmpb
cmp
inc
sub
push
lods
rcrl
enter
in
pop
mov
loop
bound
daa
xor
inc
push
arpl
std
mov
stos
imul
inc
sub
pop
push
lret
jmp
cwtl
repnz
mov
add
lea
fimuls
xchg
in
add
add
adc
sub
cmp
movsl
sub
cmpsl
adc
sti
and
sarl
loop
push
scas
xchg
in
cmc
mov
cmp
xchg
push
daa
pusha
dec
scas
jle
out
add
sbb
loopne
lea
mov
cltd
in
mov
loopne
filds
push
jl
adc
and
mov
cmc
fcom
leave
pop
jl
xor
ds
in
cmp
xchg
popf
cs
shlb
iret
sti
add
dec
jg
in
in
sbb
or
rcr
lods
adc
cmp
mov
add
push
and
aaa
shlb
inc
mov
cld
cmc
fs
and
mov
int
or
dec
cwtl
mov
cltd
xor
sahf
cwtl
xchg
call
lea
mov
pop
repnz
test
push
mov
and
adcl
mov
mov
jno
div
pop
bswap
jle
ss
stos
mov
repz
outsb
push
sub
pop
dec
and
mov
mov
repnz
sub
ss
adc
enter
int
lsl
getsec
pusha
mov
dec
mov
jle
adc
sbb
cmpsb
xchg
negb
insl
sbb
and
push
fs
pop
in
test
loopew
rorl
fisubl
lcall
fisubrs
xchg
and
mov
fisttpl
ja
inc
icebp
ds
in
rorb
scas
jo
push
dec
cmpl
icebp
push
std
repnz
ret
es
mov
push
xchg
loop
mov
xchg
jb
test
addr16
in
jmp
mov
cmp
nop
cmp
dec
and
addl
scas
sti
sub
cmp
push
sub
add
pop
dec
sbb
imul
and
adc
xlat
ds
jg
jnp
out
rorl
push
pop
subb
xchg
mov
scas
mov
bound
mov
mov
jge
mov
mov
fimull
insl
aad
rcrl
mov
jge
cltd
dec
jae
js
ret
add
dec
sbbb
popa
dec
mov
adc
mov
fsubrl
add
out
popa
add
dec
fcompl
xchg
test
imul
rol
jmp
and
inc
lcall
mov
xchg
mov
hlt
xor
fwait
es
xor
outsl
pop
lods
xchg
add
mov
lcall
add
push
leave
xlat
cmp
inc
pop
sbb
jnp
movsl
pop
mov
out
sub
xor
push
xor
je
and
inc
icebp
icebp
pushf
icebp
fwait
cmp
stc
aaa
mov
js
bound
cmc
inc
and
iret
cwtl
ss
js
fmull
and
inc
and
lret
sub
fstl
inc
stos
jge
xorl
iret
and
test
lret
shll
sub
sbb
pop
or
pushf
pop
je
fiadds
inc
push
dec
jecxz
and
sub
mov
inc
sub
repz
xor
add
fcomi
cli
rcl
cld
push
clc
fcomps
mov
and
cmp
lods
imul
stos
mov
shll
mov
and
orb
dec
mov
call
push
aas
ret
mov
push
push
cmp
xchg
mov
xlat
jo
pop
sbb
mov
out
push
mov
mov
mov
cmp
xchg
add
lds
xchg
mov
imul
clc
pop
sub
push
jns
fldcw
mov
inc
or
and
dec
jle
out
mulb
inc
mov
ret
jo
pop
xor
push
lds
hlt
lods
pop
int
out
pop
inc
and
xchg
loopne
clc
in
jl
test
mov
imul
inc
sub
mov
adc
mov
xlat
inc
int3
jmp
fs
fs
cmp
ret
xchg
xchg
mov
gs
enter
es
jmp
icebp
add
lret
cmp
push
js
js
add
inc
cs
add
xchg
cmp
mov
stc
imul
int
lds
adc
xchg
cmpsb
loopne
and
cltd
divl
lds
lahf
outsb
adc
rol
sub
xchg
das
test
aad
lahf
shl
pusha
jle
jbe
push
mov
xchg
sbb
xor
in
sbbl
in
int
test
mov
inc
jo
cmc
inc
fadds
and
jecxz
inc
ja
addr16
or
cmc
push
fs
mov
arpl
mov
movsb
jl
faddl
rcrl
sbb
cmp
mov
sub
out
fisubrs
mov
icebp
cwtl
leave
fisttps
pop
mov
lcall
scas
or
cmpsb
cmpsb
loopne
sub
or
subl
push
pop
adc
in
aas
cmc
outsl
mov
pop
divb
test
inc
aad
cs
inc
xchg
hlt
nop
jge
xabort
xor
mov
add
sbbl
pushf
xlat
adc
push
movsb
andb
ljmp
lret
push
fldenv
in
or
mov
mov
lahf
test
inc
pop
add
cwtl
inc
lret
mov
ja
inc
fwait
sti
pop
xor
adc
test
test
daa
repz
repz
icebp
or
mov
pop
lret
mov
shrl
cmc
shlb
ds
test
cmp
add
pop
in
cmp
cwtl
mov
in
inc
mov
imul
or
jmp
mov
rorb
pop
or
mov
pop
mov
daa
push
cmpb
fwait
xor
add
mull
dec
jmp
or
shr
aam
popf
cmp
jle
leave
push
loop
sbb
or
int
aad
fidivs
mov
push
imull
fwait
inc
data16
jecxz
scas
in
ret
repz
xor
iret
testb
mov
and
jae
hlt
or
and
add
push
test
inc
scas
or
sarb
push
fwait
test
subl
adc
adc
cmp
push
pop
rcrl
imul
addb
push
fucomi
xchg
adc
push
out
or
fsubr
pushf
lds
test
movsl
jl,pn
cwtl
push
adc
imul
xchg
addr16
mov
leave
fldcw
xor
mov
mov
mov
jb
out
lock
out
fldt
hlt
xor
flds
dec
pop
cmpsl
rorl
mov
jge
xor
ds
and
lret
or
push
aad
movsl
ror
cld
in
or
cmpsl
pop
lret
inc
jbe
in
xchg
jmp
or
rol
jle
imul
daa
std
dec
insl
je
nop
sub
outsb
push
ds
lea
ljmp
subb
mov
pop
test
push
shl
jno
and
inc
adc
pop
adc
rorl
xchg
add
comiss
sub
mov
jno
mov
push
mov
inc
cmpsb
push
mov
ljmp
lods
out
clc
jl
pop
cmc
cmp
mov
insl
jg
cmp
cld
mov
add
insb
popa
jo
jb
jns
pop
sub
sub
andb
mov
fdivl
push
test
rclb
xor
xor
sbb
jno
into
cmpsl
icebp
or
pop
repz
sahf
inc
add
adc
bound
mov
push
cmpsb
and
fucomip
sbb
mov
xchg
and
enter
pop
lahf
pop
mov
ljmp
in
fsubrl
popa
sbb
movsb
mov
mov
fdivrs
test
insb
loopne
mov
xor
xchg
nop
iret
push
sti
inc
sbb
jne
inc
mov
sbb
sbb
cmpl
shll
adcl
cmp
pop
fldl
pop
call
cmp
outsw
jb
shrb
call
jecxz
push
dec
call
sbb
add
out
inc
leave
jbe
int3
sbb
jae
out
test
push
push
js
repnz
sarl
add
notb
mov
pop
insl
setle
jo
cmp
icebp
gs
es
test
or
pop
loope
jl
pop
adc
idivb
jae
ljmp
mov
cmp
lods
push
jnp
push
movsb
lods
lock
pop
aas
and
and
push
mov
call
add
popf
mov
add
xchg
fstpl
icebp
xchg
cltd
xor
pop
les
dec
sub
xor
push
adc
fwait
mov
xchg
dec
xchg
ja
cmp
jns
push
stos
dec
lods
mov
in
mov
xchg
mov
test
idivl
xchg
sahf
mov
bound
xchg
mov
pushf
iret
dec
scas
clc
lret
enter
push
pop
xor
addr16
push
in
jo
lret
dec
add
hlt
jecxz
or
fnstsw
and
jmp
popf
test
fdivr
cmp
mov
xor
or
push
sub
sub
inc
repnz
pop
je
enter
inc
arpl
pop
leave
add
adc
stc
xor
jmp
xor
popf
jl
ljmp
mov
lret
rorb
fstps
cli
sub
test
imul
xchg
mov
mov
fdiv
dec
int
mov
xchg
addl
wbinvd
cwtl
push
mov
pop
out
adc
jp
jbe
add
sahf
lcall
insb
imul
inc
xor
adc
adc
test
jo
mov
xchg
mov
sbb
xchg
adc
cmc
inc
pop
lret
sti
xchg
jbe
and
mov
xchg
sbb
das
inc
lcall
pop
call
mov
and
cmc
repz
sub
adc
xchg
orl
and
and
lret
imul
lds
pushf
dec
push
hlt
std
hlt
mov
fiadds
cmp
dec
call
sbb
dec
addr16
cmp
jecxz
dec
push
add
fmuls
cmp
data16
arpl
iret
mov
xor
dec
test
mov
das
jecxz
insb
scas
xor
mov
bts
sbb
leave
xor
test
mov
fst
mov
pop
jne
sbbl
jb
jns
mov
out
lret
xchg
mov
lds
cmpsl
pusha
bound
mov
sub
push
lret
or
xchg
lret
sar
xor
out
mov
xchg
pop
xchg
mov
mov
inc
mov
jmp
inc
push
arpl
icebp
dec
or
adc
cwtl
xor
lods
jp
sarb
push
addr16
add
popa
mov
push
test
and
lods
lds
mov
movsb
subb
push
sar
js
cmpsb
aad
add
xor
and
repnz
or
aad
mov
ficoml
nop
loope
jecxz
jp
adc
aad
ret
xchg
jp
jae
sarb
imul
add
out
xchg
test
push
add
mov
inc
negl
mov
sub
xchg
mov
cld
mov
std
inc
clc
xor
push
sub
xchg
push
rclb
mov
rclb
test
pop
push
cmpb
outsl
lret
jae
popa
in
push
in
pop
sbb
sub
jb
popl
xchg
sbb
push
cmp
mov
aad
jmp
sub
pop
xor
pushf
lcall
or
push
in
mov
inc
ds
xchg
movsl
fcoml
add
inc
data16
pop
pusha
scas
xor
enter
rorb
adc
rcll
clc
dec
and
imul
add
add
dec
sbb
dec
and
shl
fisubl
outsl
push
jmp
or
or
repnz
add
xor
enter
shl
adc
lea
mov
inc
jno
lcall
popf
sbb
sub
xor
inc
nop
pop
or
les
dec
imul
adc
mov
jne
insl
mov
mov
repz
lods
or
xor
outsb
fdivrs
ljmp
pop
loop
out
cmp
xchg
xchg
adc
jl
sar
sti
push
add
mov
or
xor
inc
push
or
les
mov
sbb
add
fstl
push
ss
fnstenv
inc
sub
data16
mulb
mov
mov
aas
add
cmc
xor
jl
cmp
dec
das
in
mov
dec
sub
add
mov
daa
mov
out
les
gs
cmp
pusha
imul
push
hlt
cli
mov
leave
pop
nop
push
xor
xchg
cld
sbb
das
movsl
inc
mov
sub
orl
out
pop
out
xchg
and
push
sbb
jo
sbb
or
mov
mov
dec
arpl
daa
into
sbb
loopw
test
in
sbb
mov
xchg
ret
imul
xchg
out
xor
pop
popf
ficompl
loopne
and
mov
mov
daa
in
loope
add
int
roll
sub
adc
into
jge
scas
into
dec
inc
push
mov
push
pushf
loop
ljmp
fs
or
push
ljmp
jbe
mov
xchg
mov
sub
scas
xchg
mov
popl
lahf
adc
fcomps
mov
or
add
lret
std
and
ljmp
sbb
out
scas
inc
pusha
out
in
aaa
jmp
imul
mov
adc
push
pop
pop
mov
push
cltd
out
or
roll
lock
lahf
fldl
test
and
rorb
in
xchg
shrb
leave
cmp
add
xchg
sub
jecxz
lods
xchg
shlb
jg
adc
vmwrite
fwait
or
jns
pushf
stos
dec
dec
bound
in
lods
nop
dec
rorb
sub
or
ret
jecxz
push
ss
push
fcoms
add
dec
scas
mov
sbb
ss
push
test
mov
jl
in
bound
mov
adc
xchg
mov
cmp
repz
pop
jo
pop
icebp
mov
flds
xchg
and
pop
dec
lret
mov
mov
mov
aas
in
fcompl
xchg
mov
cli
cli
jg
xchg
sub
cmp
dec
insb
lea
mov
notb
stos
out
mov
gs
sarb
xor
int
sti
mov
xchg
leave
and
in
adc
mov
dec
pop
dec
roll
and
in
xor
mov
cmpsl
in
sbb
shrb
jb
lods
enter
cmp
push
ret
pop
mov
iret
jno
mov
repnz
push
pop
insl
loope
stos
mov
into
jno
jno
popa
stc
dec
in
push
test
fldenv
sbbl
dec
xchg
shll
negb
imul
outsb
or
lret
cld
sarl
xchg
pop
notl
mov
dec
mov
int3
add
es
mov
shrb
inc
mov
sub
sub
and
cwtl
pop
test
pop
xchg
ja
out
push
or
shlb
and
sbb
popf
push
cltd
jl
es
jmp
fidivl
ds
xlat
dec
lock
xor
negl
mov
inc
add
xchg
xchg
dec
fiaddl
jecxz
std
mov
incb
cli
mov
shll
aad
mov
add
mov
jae
push
xor
jb
mov
mov
sbb
shr
jge
sbb
fmull
dec
jp
lods
and
and
dec
and
fdivrl
incl
test
icebp
cs
cltd
jne
cltd
mov
push
jb
imul
push
dec
and
inc
ds
pushf
imul
fld1
push
outsl
pushf
fistl
insl
in
lea
loop
nop
xor
arpl
xor
push
mov
xchg
test
cwtl
ret
adc
inc
aaa
addr16
cmp
jg
xor
out
test
cmp
jb
xchg
or
xchg
cwtl
jnp
mov
mov
add
pop
xchg
lods
aaa
and
add
ret
jnp
jns
pop
mov
outsl
xchg
fistl
cmpsl
inc
rclb
loop
xor
mov
pop
mov
scas
lahf
push
push
push
jns
xlat
aam
sub
mov
stos
iret
test
stc
pop
cld
fiadds
xchg
sub
jnp
imul
stos
mov
aaa
adc
hlt
cli
or
int
arpl
aas
mov
lea
adc
sti
cli
adc
sbb
subb
sarl
mov
dec
lret
fs
pop
mov
mov
into
dec
mov
call
iret
lahf
stos
cmp
push
out
ljmp
xchg
fdiv
movsl
push
lret
shll
aam
mov
xchg
fs
jle
test
jbe
rcrb
mov
cld
out
imul
ret
pop
repnz
and
mov
xchg
dec
das
sbb
stc
incb
outsb
jmp
jo
aas
mov
or
std
cltd
jmp
jp
mov
sarb
sub
and
push
ljmp
shl
fldcw
roll
notb
jecxz
daa
mov
adc
jo
pop
cmpsb
sub
mov
addr16
xor
mov
mov
clc
mov
pop
in
cmc
pop
aas
cmp
inc
fwait
jecxz
or
test
int
sti
enter
mov
enter
lea
push
outsl
push
mov
or
in
notl
fsubs
cld
or
ja
test
enter
loop
lods
pop
pop
andb
leave
sub
popa
push
sbb
or
sbb
mov
cmpsl
dec
xor
sbb
xchg
mov
jnp
ficompl
aas
pop
outsl
lock
ss
pop
cmp
jmp
mov
clc
dec
xor
out
cmp
cmp
adc
popa
rcrb
aad
dec
ss
dec
jg
sbb
fcomp
cmpsb
jp
sbb
lret
scas
test
jecxz
xlat
xchg
jno
aad
xchg
adc
mov
mov
mov
sub
adc
jmp
lret
sub
ret
mov
xchg
xchg
cmp
mov
dec
mov
pop
aas
dec
int3
lret
into
xchg
pushf
outsb
xor
imul
add
xor
xchg
jns
int
rol
jae
push
sub
cs
kunpckwd
je
xlat
dec
fimull
out
lahf
fcomip
lret
and
xor
cmp
insl
popa
mov
and
ret
pop
sahf
push
add
sbb
mov
inc
in
mov
test
add
dec
int
addr16
adc
jmp
sahf
scas
andl
pop
fisubl
xor
fmulp
xorb
leave
add
jns
pop
sbb
in
jecxz
xchg
jmp
mov
or
adc
idivl
lods
add
and
mov
sar
jbe
popa
ds
popa
fisubrs
outsl
mov
ret
jae
aad
jno,pn
and
cmc
clc
scas
lock
sbb
test
jbe
dec
pop
sarb
xor
mov
mov
lret
aad
ret
scas
jne
cmp
adc
dec
dec
in
add
push
mov
or
and
sbb
or
mov
dec
or
xlat
hlt
pop
mov
scas
sub
test
push
jp
push
and
popa
jo
xchg
pop
and
loop
jg
mov
out
cld
mov
ds
shr
outsl
adc
mov
mov
in
cmp
dec
push
subl
xchg
test
jne
mov
push
sbb
imul
adc
or
inc
lea
dec
stos
outsl
leave
add
cmp
mov
or
dec
sar
clc
or
mov
scas
shrb
aaa
in
movsb
sti
xchg
and
dec
push
cmpsb
ja
enter
movsb
lods
push
mov
jbe
gs
xchg
dec
pop
jbe
push
testl
cwtl
xlat
mov
sti
pop
faddl
mov
outsl
or
pop
testb
repz
xlat
xor
jns
sub
dec
xlat
loope
sub
and
push
mul
pusha
xor
ljmp
cmc
xchg
in
adc
xchg
pop
roll
sub
mov
addr16
lret
ret
gs
or
jbe
outsb
jge
es
jns
shlb
cmp
pusha
loopne
imul
cmpsl
notb
hlt
xor
sbb
pop
call
sbb
pop
mov
push
scas
pop
in
push
shrb
jns
das
adcb
lods
sub
dec
outsl
lret
repnz
mov
jl
dec
loop
stos
or
les
mov
stos
sahf
loopne
and
cmp
xor
sti
stos
loopne
cltd
sbb
and
push
loop
insl
lret
popl
aaa
jbe
lods
pop
sub
push
pop
sub
or
push
hlt
xor
imul
divl
das
and
inc
jmp
sub
cli
or
jle
movsl
push
cmpb
xchg
decl
mov
ljmp
xchg
mov
pop
jg
mov
push
adc
fs
scas
insb
mov
ss
fcomps
xchg
push
shl
orb
push
mov
xor
jae
stos
add
pusha
pop
or
fwait
jns
cmp
arpl
out
jge
and
push
cmp
adc
insb
mov
ja
mov
xchg
lret
inc
push
jns
xor
scas
pop
pop
mov
mov
inc
push
scas
int3
sub
rolb
pop
ret
jo
cmpsl
and
out
cmp
fdivrl
xchg
push
ss
push
pop
add
adc
mov
std
stc
sbb
add
jge
mov
dec
mov
mov
das
stos
iret
sub
jb
xchg
sub
pop
loop
and
lret
cmp
aam
xchg
fidivs
pop
jbe
cmp
mov
outsl
iret
xchg
adc
add
add
loopne
mov
xor
cmp
mov
and
pop
stos
cmp
cmpsl
xchg
fdivrs
xchg
lcall
hlt
mov
int
leave
push
push
cwtl
cmpl
mov
lahf
xchg
adc
call
xor
cmp
mov
sub
push
add
scas
into
xchg
aam
push
ret
fsubrs
push
pop
nop
and
sub
lods
jnp
cld
popf
rorl
int3
mov
arpl
test
test
xchg
out
in
mov
scas
das
push
insb
mov
jg
pop
xchg
push
mov
adc
fwait
mov
push
sti
jbe
fs
fmull
scas
aas
jb
int
cmp
push
mov
mul
xor
sbb
push
cmp
mov
add
push
inc
sub
in
pushf
jnp
into
faddp
insl
ds
cmp
in
xchg
pop
sub
scas
xchg
cmpsb
dec
cmpsl
pop
nop
jmp
fists
popa
fdiv
dec
mov
or
xchg
mov
mov
push
and
jae
push
sub
fistpll
addr16
pop
jg
fcmovnbe
test
xor
imul
pop
jno
repz
pop
xchg
pop
mov
pop
dec
sbb
in
leave
mov
bound
mov
cmp
jae
and
lcall
repnz
repnz
leave
sbb
mov
jno
xchg
sbb
xor
jg
xchg
sbb
clc
dec
adc
std
fbld
adc
add
sbbb
lea
push
aaa
int3
jmp
shrl
push
sub
std
fs
outsl
add
jns
fs
dec
loopne
push
test
in
fwait
lods
jg
mov
jns
mov
lcall
jl
dec
inc
cmp
scas
push
cwtl
ss
push
sti
or
pop
push
lahf
inc
pop
rorl
pop
fstps
xchg
adcb
add
sbb
fimull
daa
and
sbb
sub
sbb
pop
std
xchg
mov
cmp
push
aad
insb
cmp
imul
fistpl
sub
lea
jo
mov
shl
pop
sbb
xor
stos
sbb
les
loope
xlat
mov
in
loopne
dec
sub
pushfw
divb
push
and
add
mov
xchg
aad
in
je
inc
loopne
jmp
lret
or
push
test
shlb
in
shrl
sahf
mov
mov
xor
cmp
movsl
inc
adcb
sub
mov
pop
sbb
js
je
cwtl
andb
arpl
ds
lea
es
rol
jnp
pop
enter
cmc
pop
push
inc
popf
and
mulb
cmp
xchg
sti
ja
xchg
cltd
hlt
xor
add
andb
mov
inc
int3
sub
test
test
or
xchg
cs
and
and
push
cmp
movsl
ret
out
mov
in
leave
ja
out
nop
pop
fidivrs
lods
sub
iret
jg
or
and
cwtl
notl
pusha
inc
xchg
loop
fwait
pop
xor
stc
ret
mov
pop
cltd
jnp
xor
push
add
sub
adc
sub
mov
scas
xchg
inc
dec
ret
out
int3
push
push
insb
jbe
dec
lret
div
imulb
jmp
out
lea
std
rcrb
stos
mov
xor
mov
jl
or
movups
sbb
mov
jb
add
pop
sbb
or
sbb
pop
aam
jbe
push
pusha
xor
movsl
test
jne
xor
xor
sub
jmp
xor
incl
stos
jecxz
loop
jbe
inc
and
enter
xor
bound
jns
outsl
mov
in
add
add
dec
es
int3
sub
sbb
jmp
mov
mov
ja
sahf
add
daa
mov
push
and
loop
and
test
insl
pop
pop
jne
js
push
sarl
xor
and
push
cld
jge
sbb
push
push
xchg
inc
cmc
fisubl
sub
les
xchg
jl
pop
stos
jp
xchg
cs
dec
jp
pop
cld
inc
xchg
movsb
xchg
inc
mov
pop
xchg
test
cmpsl
movsb
xor
aam
or
jle
sbb
out
xor
push
ljmp
xor
mov
mov
sub
push
adc
xchg
sarl
testl
or
xor
push
lahf
scas
sub
popf
add
mov
ss
xor
add
pop
fnstcw
sti
in
sub
xor
xchg
lock
out
data16
std
clc
xchg
push
mov
ljmp
add
mov
daa
xchg
insb
fdivs
push
int
dec
lret
test
and
mov
lret
mov
std
insl
movl
loop,pt
sbb
stos
faddp
push
lcall
jne
outsb
arpl
mov
test
pop
sbb
adc
cmp
outsb
pop
or
or
adc
dec
into
insl
movsl
push
scas
cmp
daa
mov
sbb
cli
add
int3
call
cmp
in
pop
inc
and
dec
adc
pop
popa
adc
mov
cmpsb
mov
dec
repz
pop
mul
cmp
pop
inc
lea
shr
xchg
push
dec
jmp
push
and
xchg
lea
sahf
test
inc
sbb
add
jns
dec
xchg
sbb
cmp
inc
aas
mov
mov
xchg
lods
adc
add
and
pop
insl
xchg
mov
ljmp
loopne
lock
nop
insl
out
jae
imul
stc
lods
mov
lods
push
mov
mov
lret
mov
mov
int3
sub
gs
and
and
in
in
sbb
xchg
mov
lods
jg
push
jo
aas
pop
inc
daa
popf
rcll
int
in
pop
add
inc
pop
xor
dec
repnz
xchg
cs
mov
or
je
inc
sti
mov
sbb
rolb
test
bound
mov
sarb
mov
out
outsl
dec
fmull
psubsw
fidivl
mov
sbb
shrl
loopne
les
xchg
sbb
dec
or
lcall
push
dec
sbb
or
or
mov
pop
pusha
leave
jmp
in
test
sub
les
mov
xor
frstor
int
cmpsl
shll
scas
fisubl
mov
and
in
pushf
outsb
bound
outsb
jnp
push
cli
sbbl
js
enter
jg
xor
stos
adc
mov
into
push
pop
or
mov
xchg
outsb
and
fsubrl
pop
inc
ret
jns
mov
push
pop
mov
enter
jb
xchg
mov
mov
or
and
mov
mov
mov
cmp
aas
push
orb
pop
push
cmp
mov
movsl
inc
sbb
ljmp
aaa
mov
int
in
rorl
sbb
lods
in
js
add
sub
sbb
adc
and
outsb
movsb
stos
add
xchg
outsb
dec
or
jle
jo
dec
loopne
dec
dec
test
adc
es
cld
sbb
push
mov
mov
sbb
cmp
jbe
adc
mov
xchg
mov
loope
cmp
push
aam
inc
cmp
sub
ret
fs
fdivp
test
in
xchg
cld
repz
stos
push
mov
negb
mov
and
inc
ror
jp
pop
add
addr16
cld
mov
sub
inc
cmp
subb
rorl
lret
cmp
pcmpgtb
jge
and
xor
out
jle
mov
fcmovnu
xchg
sub
cltd
sbb
pop
mov
into
inc
loope
xlat
and
pop
inc
and
addr16
or
dec
mov
mov
out
xchg
or
dec
insb
popa
jae
imul
inc
pop
popa
push
jl
nop
jle
je
sahf
fstpt
inc
stos
add
adc
mov
cmp
lahf
push
ficoms
mull
sbb
dec
mull
sarl
or
mov
ds
lcall
pushf
pcmpeqb
pop
insl
inc
rcll
xchg
xchg
add
mov
filds
cld
sub
add
and
loope
cmp
mov
sub
stos
push
test
mov
aam
mov
mov
lock
mov
pop
push
cld
xor
fwait
popa
jg
in
inc
testl
movsb
cs
jmp
adc
scas
hlt
jne
repnz
mov
and
bnd
test
ja
add
test
dec
shrb
sbb
stc
lcall
in
movsb
mov
sti
mov
aad
inc
sub
inc
data16
dec
aam
or
or
inc
movsl
xor
inc
rorl
xchg
lock
int
das
adc
call
aas
push
ror
sub
negl
call
stos
out
jp
stos
pop
dec
lcall
jmp
incl
xchg
inc
jg
int3
jno
shl
cli
cs
pushf
lcall
xchg
push
outsb
iret
cmp
scas
xchg
leave
arpl
in
repz
add
inc
fsubr
adc
cld
dec
in
xor
and
push
add
mov
cwtl
jns
xor
in
and
jne
into
movl
mov
loopne
hlt
nop
pop
inc
je
out
sbb
mov
mov
mov
stc
out
cld
dec
mov
mov
cmc
pop
pushf
arpl
pop
enter
cmp
jle
loop
stos
adc
in
xchg
fsub
mov
dec
mov
cs
lahf
add
mov
cmpsl
imul
pushf
inc
adc
add
pop
xchg
xchg
inc
sahf
inc
cmp
scas
ss
pushl
mov
fidivrl
repnz
dec
and
enter
mov
lds
shlb
and
shrl
xchg
nop
sbb
add
cmp
xor
fisttpl
fimuls
add
inc
stc
addr16
xchg
adc
loopne
lea
add
jo
test
or
leave
jo
and
pop
into
sbb
mov
jmp
dec
mov
sub
shlb
clc
mov
dec
inc
in
aad
rolb
adc
xchg
scas
out
and
addb
cltd
daa
loope
notb
dec
or
idivl
icebp
mov
jle
xor
scas
dec
xchg
enter
push
mov
xchg
addr16
repnz
sub
push
loope
pop
inc
sub
jecxz
fildll
inc
add
inc
sbb
jbe
xchg
or
push
movsl
sbb
andb
ret
outsb
adc
xchg
lret
push
ret
daa
outsb
test
inc
je
inc
enter
out
pusha
jae
fisttps
sub
and
dec
bound
jns
xlat
xchg
xchg
aad
pop
les
push
enter
xor
mov
mov
in
xchg
mov
push
jmp
dec
push
or
pop
xorl
lods
pop
jle
dec
loop
sbb
in
push
sbb
in
stos
push
pop
aad
mov
cmp
hlt
sub
pop
daa
cwtl
mov
mov
cmp
cmp
cmpsl
add
and
xlat
mov
mov
push
notl
stos
xchg
les
mov
push
imul
idivl
mov
sub
repnz
loopne
cmp
daa
dec
inc
loop
xchg
push
xchg
aad
sbb
pop
loope
dec
add
add
jmp
out
outsl
pop
dec
int3
aam
fstl
nop
pop
xor
jecxz
add
mov
fs
js
es
jae
das
adc
stos
scas
loope
fildl
repz
mov
in
xorb
gs
pushf
xor
push
addr16
iret
fdivrl
sarb
outsl
xchg
xchg
outsb
dec
and
mov
test
sub
inc
ja
dec
insl
push
cli
sbbl
dec
mov
xor
cltd
dec
mov
add
ds
in
cmp
ljmp
adc
std
mov
fidivrl
int
xor
shll
fisttps
dec
push
paddsw
ret
inc
test
and
movsb
pop
fstpl
jmp
add
into
ds
inc
push
push
or
fnstcw
dec
mov
mov
and
xlat
in
les
pop
ds
adc
xchg
loope
or
inc
add
cld
decb
and
add
into
pop
pop
mov
adc
mov
push
subb
test
and
cld
inc
pushf
sub
aaa
mov
inc
push
or
jecxz
in
shll
dec
int
jl
sub
push
sarb
pop
xor
pusha
jge
outsl
jns
mov
mov
sti
add
lret
stos
or
mov
sub
aas
les
jb
aad
sti
std
stc
mov
push
xlat
enter
mov
imul
pop
inc
inc
xchg
push
fistps
mov
aas
mov
jecxz
and
jno
test
cmp
hlt
loopne
push
lret
insl
inc
dec
push
daa
sarb
fisubs
cmp
mov
shrb
xor
inc
dec
repnz
in
repz
or
xor
push
mov
jo
scas
adc
sbb
jae
cmp
icebp
xor
stos
cld
push
out
enter
pop
lcall
push
cmpsb
out
clc
sub
adc
adc
jl
test
jnp
xchg
push
jns
adc
scas
inc
sbb
sub
in
mov
and
adc
arpl
insb
and
or
std
lock
cmpsb
test
mov
mov
ret
pop
fistps
push
cmp
outsb
sbb
sub
mov
or
in
add
pop
insb
lahf
sbb
xchg
push
ss
xchg
inc
add
mov
jno
rcr
sbb
adc
and
int
cld
dec
sbb
lds
rol
daa
and
cmp
inc
and
aam
fmuls
dec
and
lods
sbb
mov
loop
push
jl
adc
mov
not
inc
dec
shrb
mov
add
jnp
outsl
cli
je
arpl
cld
jp
lret
add
adc
pop
mov
push
enter
pop
sbb
jns
ds
jl
jne
mov
add
add
scas
pop
dec
out
mov
loop
fiadds
push
nopl
cltd
inc
outsl
aad
ret
or
leave
jecxz
and
and
pop
xchg
hlt
lods
add
sub
in
mov
and
mov
pop
addr16
push
mov
test
jg
fstp
cli
push
jo
and
jg
jbe
mov
fwait
push
test
or
push
cmpsl
push
adc
add
fcomps
add
cmc
pop
scas
ret
mov
jnp
fisttps
push
gs
les
aad
popa
xchg
and
push
out
les
add
pop
call
frstor
repnz
fnclex
xchg
mov
cmp
shlb
cmp
sbb
ret
loope
addr16
loopne
imul
jb
mov
popf
fimuls
int
add
outsb
xchg
pop
inc
movsb
sti
sbb
iret
sarl
xor
fs
pop
pop
das
clc
push
stos
cs
in
dec
inc
push
or
icebp
sarb
popf
fistpl
sbb
and
or
icebp
cld
sbbb
jge
in
mov
adc
bound
pmulhuw
jno
mov
push
jno
popf
sub
flds
and
sub
clc
out
testl
lret
leave
or
sub
xor
ror
xchg
pop
push
jp
xchg
shld
xchg
push
jmp
pop
leave
mov
lds
sbb
test
rolb
inc
loop
xor
inc
push
sti
xchg
jae
mov
mov
and
jmp
mov
repnz
jb
ljmp
xor
movsl
loopne
push
test
and
stc
or
out
shrb
nop
stc
sarb
aaa
lret
in
xchg
movb
adc
sbb
or
jne
rorl
lret
jp
enter
inc
test
jne
add
jnp
mov
pop
in
inc
jns
cld
jle
jmp
and
repnz
mov
fcmovne
cld
jno
aam
in
les
xchg
mov
xchg
and
mov
loope
outsb
icebp
add
dec
cmpsl
dec
sbb
mov
inc
iret
push
mov
mov
in
test
jle
cmpsl
or
push
jae
popa
imul
or
cmp
mov
and
fs
daa
jmp
sub
mov
lret
push
jg
lret
roll
jbe
or
cwtl
ja
ret
add
out
mov
fcmovnu
jge
adc
in
add
cmp
icebp
fistpl
ret
ss
cmp
dec
inc
jecxz
add
outsb
pop
popaw
adc
sub
subl
repnz
or
mov
or
xchg
add
pop
sub
in
push
push
shrb
dec
std
fdivr
mov
test
jb
or
fs
fadds
mov
pop
mov
jl
dec
dec
dec
push
sbb
in
add
mov
xchg
sub
std
pop
xchg
test
stos
movsl
pop
pusha
xchg
push
and
dec
mov
jae
lods
add
jo
xchg
cli
mov
and
dec
cmovbe
inc
pop
arpl
js
add
int
fisubrs
cmp
push
and
xor
popa
scas
clc
fwait
jl
xchg
arpl
mov
mov
lahf
sub
cmpsl
fcomp
sub
push
in
xchg
cltd
and
test
xchg
mov
mov
or
pop
sahf
popf
xlat
flds
cld
insb
push
sub
cmp
in
dec
add
mov
fldcw
rolb
testl
cwtl
pop
test
jge
sub
shlb
cwtl
jg
sbb
stos
stc
stc
les
or
repnz
iret
cmpsl
loop
into
loope
jecxz
mov
pop
xor
fwait
add
mov
js
les
mov
xlat
flds
cmp
adc
sub
xor
ret
out
popa
mov
xchg
sbb
jg
mov
push
fldl2e
mov
xchg
xor
cmpsl
xchg
fistps
pop
lods
push
jecxz
insl
loopne
std
jbe
sbb
push
push
mov
sbb
xchg
std
leave
and
sub
mov
push
stos
fisttpl
jbe
or
jle
pop
sub
push
or
movsb
dec
pushw
std
js
inc
adc
xchg
mov
sub
dec
xlat
pop
insl
fcomip
subb
xchg
fiaddl
pop
adc
cmp
and
loop
rcr
push
shlb
loop
inc
and
dec
fildll
int
aad
scas
push
int
stos
and
outsl
jb
repz
or
jne
or
stos
fsubrs
mov
aaa
jb
ret
xor
call
xchg
jl
pop
cltd
lret
push
cli
add
imul
xor
imul
dec
ds
out
hlt
sbb
xor
ja
add
inc
push
std
out
xchg
rol
pop
scas
dec
je
sarb
xchg
jb
jae
js
adcb
popf
adc
pop
jo
cmp
mov
rorb
sbb
inc
inc
movsl
pop
mov
dec
mov
or
add
push
pop
jae
leave
jge
dec
or
mull
push
adc
gs
xchg
sub
les
push
jecxz
and
cmp
jge
or
mov
and
stos
insb
jno
mov
mov
xchg
stc
xor
outsb
hlt
rorl
dec
pusha
or
cltd
clc
sub
stc
adc
dec
jp
jmp
lods
and
fadds
jae
mov
out
lret
leave
xchg
push
das
aad
testb
push
dec
sbb
movsb
arpl
ja
push
into
int
lock
imul
mov
push
out
sbb
movsb
aam
or
dec
das
int
nop
lahf
xorl
inc
mov
and
mov
int
jp
icebp
mov
or
dec
or
pop
xchg
pop
jbe
sbb
repnz
std
mov
jmp
fisttpll
adc
push
in
sub
icebp
fmulp
xchg
divb
mov
push
mov
adcb
mov
popf
sbb
js
subb
inc
inc
adc
js
xchg
arpl
enter
and
xor
push
mov
inc
push
cltd
fwait
cmp
stos
mov
jg
inc
test
xchg
jl
ret
jmp
mov
call
leave
test
and
ja
imul
inc
adc
xchg
pop
jg
inc
add
ja
cwtl
insb
repz
xor
jno
cmp
hlt
fcoms
pop
hlt
inc
fwait
lret
mov
es
add
in
pop
mov
sub
in
or
cmp
and
ja
mov
or
adc
inc
mov
cmp
push
jmp
dec
fidivrs
cs
jbe
and
push
jno
icebp
sub
cmp
jbe
out
pop
adc
pushf
mov
imul
pop
pop
imul
enter
sbb
mov
dec
jno
das
or
xchg
outsl
ljmp
xchg
les
xchg
jo
push
cs
daa
or
fnstcw
lea
outsl
sub
and
xlat
sahf
ret
out
jb
iret
ret
sti
pop
das
sub
or
lret
cmp
movsb
inc
dec
jne
out
xchg
mov
mov
jno
aam
pusha
and
mov
into
xor
push
mov
dec
call
leave
int
adc
outsl
ljmp
fbld
shl
sub
dec
or
push
sbb
xchg
mov
jne
xchg
or
adc
test
mov
inc
test
push
movl
or
stos
jb
je
push
mov
enter
sub
cmpsb
mull
xor
mov
lret
sahf
dec
imul
faddp
lahf
popf
enter
fisubl
cmpsb
scas
dec
int
addr16
mov
enter
jo
fnstcw
cmp
clc
flds
sub
jg
jp
inc
bound
mov
mov
mov
adc
sbb
in
mov
inc
sbb
sbb
pop
stc
or
popa
mov
cs
sub
subb
scas
push
pop
sub
xchg
and
mov
or
xor
sbb
inc
jne
mov
jecxz
jae
insb
cld
fs
pop
push
and
mov
xchg
jns
cmpsl
std
lret
ja
adc
adc
sub
add
enter
addl
jmp
sub
mov
cmp
inc
cmp
icebp
pop
repnz
sbb
pop
out
dec
or
leave
xchg
xchg
jb
pop
stc
cmp
adc
ds
iret
imull
stos
mov
into
jno
fs
sub
arpl
in
or
ljmp
popa
mov
rclb
ret
cmp
in
add
push
pop
orb
imul
add
out
imul
clc
test
adc
dec
inc
cltd
jno
out
mov
mov
jo
stos
mov
int
fsub
fnclex
sub
adc
out
cmp
mov
push
aad
mov
cmpsl
add
cwtl
pop
inc
loop
inc
inc
sub
lret
popf
inc
lahf
sbb
imul
cmp
mov
mov
sbb
sbb
or
pop
iret
lret
test
lcall
rcrb
jecxz
adc
jnp
mov
in
daa
ja
mov
loopne
cld
pop
stc
sbb
mov
shr
bound
mov
pop
and
cmp
jge
cmpsl
jno
mov
popa
call
pop
fistpl
or
test
ret
xchg
stos
dec
push
clc
mov
xchg
sub
jbe
test
sbb
movl
outsl
fucom
movsb
cmp
adcl
inc
jo
pop
inc
pop
sub
cmp
adc
and
shrb
sub
mov
in
adc
ljmp
sbb
dec
lahf
add
dec
int
imul
jno
fwait
xchg
xor
push
fmull
lods
loop
jne
in
ja
push
sbb
inc
insb
out
mov
dec
inc
cmpsb
aas
jecxz
ret
add
out
push
lret
or
mov
outsb
xor
jge
mov
xlat
mov
add
add
pop
fs
lods
sbb
push
shrl
int
pop
dec
jg
mov
sub
movsl
xchg
sti
cmp
fstl
jne
push
stc
jno
jae
push
and
mov
ficompl
rcrl
cld
or
das
outsb
mov
mov
repz
mov
mov
test
and
scas
pop
test
sbb
sbb
sbb
notb
pop
push
or
sub
data16
lock
out
stos
cmp
lds
xchg
sub
adc
stos
icebp
cmp
sti
cmp
fcmove
mov
adc
daa
add
aad
pushf
popa
les
mov
lret
push
xor
add
in
in
add
lds
dec
je
push
lds
sub
popa
xor
das
enter
xchg
jg
int
xor
dec
add
outsb
xor
dec
jge
lods
outsb
test
xchg
add
dec
jne
popf
push
loop
push
adc
insl
and
insb
insb
gs
sbb
pop
cltd
cmp
rorb
imul
std
mov
add
shrl
ret
es
cmp
jns
push
or
fldl2e
cmpsb
xchg
fucomi
cmpsb
mov
push
mov
out
dec
mov
sub
mov
ffreep
lret
lret
mov
mov
add
xor
imul
inc
aad
pusha
dec
mov
xchg
clc
dec
pop
les
mov
add
push
pop
xor
jne
mov
aad
push
addl
call
and
lods
push
stos
jecxz
addb
psubd
xchg
aam
daa
or
nop
imulb
mov
add
stos
mov
loope
push
subl
aam
leave
adc
push
popf
fcmovnb
jo
test
add
jmp
sti
neg
out
xor
lock
push
sbbl
add
fsts
sti
leave
insb
stos
inc
int
mov
fdivl
sub
into
jg
lret
enter
in
lret
xchg
push
mov
push
movsb
scas
jl
push
push
clc
inc
stc
rcll
sub
js
pop
ljmp
fistpll
in
inc
jp
inc
rolb
cmp
push
stc
sbb
in
pop
mov
xchg
xor
sub
cli
add
xor
fldenv
int
jbe
aas
inc
mov
pop
xchg
leave
scas
jb,pt
mov
insl
in
rcrl
push
test
mov
mov
jmp
xor
les
popa
pop
in
pop
xor
push
das
add
push
insb
dec
mov
sarl
daa
push
lods
in
lds
and
outsb
pop
or
je
pop
cmovnp
add
ja
add
adc
or
fiaddl
data16
adc
pop
loopne
leave
mov
shrl
gs
or
enter
outsl
jmp
push
jbe
popa
sbb
fs
in
scas
dec
cmpsb
into
dec
mov
and
xor
bound
movsl
xchg
xor
dec
or
cmpl
dec
cmp
insb
pop
pop
cmpsb
and
xchg
jb
mov
cmp
mov
pushf
jae
xor
movsl
aaa
and
fadd
dec
pop
mov
xchg
fs
ret
filds
stc
shll
add
leave
insl
mov
push
dec
iret
arpl
mov
shrl
jmp
jmp
adc
subl
mov
clc
std
mov
daa
clc
stos
xor
or
sub
mov
jg
pushf
xchg
sti
popf
test
pop
lret
decb
push
or
js
cmpsl
sub
mov
nop
adc
leave
das
adc
lds
cwtl
fisttps
add
sbb
jecxz
or
dec
or
test
ljmp
pushf
sub
inc
sub
decb
roll
rcrl
mov
scas
fnop
and
in
ret
inc
lahf
cmovg
in
dec
sub
rolb
shlb
stos
sub
jbe
outsl
sub
jge
inc
cmp
test
adc
mov
dec
pop
sarb
pop
imul
adc
push
inc
rcr
pop
test
cltd
int3
xchg
cmp
xchg
xchg
sarb
cmpsl
icebp
inc
fildll
add
out
loopne
xor
pshufw
lock
rol
push
inc
jl
lret
pop
cwtl
sbb
xchg
cmp
sub
ret
aas
cmc
cli
xor
mov
inc
mov
mov
sbb
arpl
mov
and
add
xor
jle
rorl
out
popf
nop
aaa
int3
xchg
push
push
xchg
stos
pop
mov
aad
cld
inc
pushf
js
pop
pop
and
cmp
cwtl
inc
scas
je
neg
cmp
xchg
mov
subb
push
inc
mov
aad
rorb
cmp
and
imul
xchg
xchg
bound
repnz
jg
lret
ret
bound
pop
mov
loopne
shl
xor
mov
push
out
les
jne
imul
nop
cmp
insb
ror
cmc
jmp
mov
leave
shr
cld
icebp
push
xor
out
add
add
ljmp
test
xor
hlt
lock
jb
xchg
in
cmp
add
mov
lcall
push
and
xchg
xchg
movsb
adc
mov
mov
or
mov
mov
stos
jecxz
in
out
jl
lahf
pop
js
mov
xlat
xchg
rcll
cwtl
shrl
fwait
aad
jecxz
push
scas
or
mov
push
mov
fistl
jg
dec
int
inc
pop
sbbl
mov
testl
loop
lret
jno
cmp
sub
dec
or
push
scas
mov
jb
fcomp
push
pop
push
fcmovb
gs
roll
push
jmp
inc
lods
add
clc
cmpsb
outsl
jecxz
add
mov
push
sub
jmp
xchg
lds
icebp
jne
test
inc
mov
inc
es
test
lret
push
bound
jmp
popa
in
pop
xchg
vpsubw
imull
lock
mov
loopne
mov
mov
adc
xlat
jb
or
mov
jo
push
test
pop
in
dec
ja
lcall
jns
jne
sub
mov
pop
dec
adc
imul
or
mov
jns
push
or
repnz
out
aaa
cmp
mov
call
add
shrb
push
rcll
ror
insl
stc
xchg
dec
stc
in
push
out
aas
push
cwtl
xor
lret
aad
test
adc
ja
mov
mov
cmp
mov
xchg
cli
pop
in
jl
arpl
shrd
in
lret
loop
push
dec
out
je
in
sbb
inc
mov
push
or
adcl
mov
in
fisubrl
jmp
and
and
insl
scas
mov
loop
mov
scas
dec
adc
cwtl
enter
fildll
iret
mov
jl
dec
sbb
pop
xchg
or
lret
jle
sub
test
or
mov
pop
push
push
xor
ja
out
out
xchg
sub
push
mov
test
jne
insl
stos
aad
or
js
dec
cwtl
into
or
repnz
stc
mov
ljmp
stos
mov
loop
lods
lds
shll
lret
gs
mov
pushf
repnz
mov
sbb
or
xor
fmuls
xchg
cs
popf
setbe
sbb
jmp
ds
sar
mov
cmp
and
call
rolb
lahf
push
test
xchg
cmp
addr16
std
pop
sahf
scas
mov
test
sbb
mov
cs
push
fucomip
pop
sbb
lret
dec
loop
inc
gs
and
mov
aas
push
add
xchg
dec
jae
insb
mov
xor
js
dec
daa
test
inc
sub
sahf
test
enter
mov
mov
and
int
jb
pop
mov
push
imul
add
pushf
add
ja
int3
mov
adc
dec
lcall
lds
push
jo
mov
cld
or
addb
int3
and
aam
movsl
movsb
int3
lahf
sbb
add
movsb
insb
int3
pop
jo
sub
fsub
int
adc
test
out
mov
add
adc
fcomps
out
dec
movsb
dec
jge
jo
scas
sbbb
loopne
loope
mov
adc
mov
cld
mov
add
or
std
mov
sahf
pop
dec
je
or
mov
mov
insl
lods
test
lock
arpl
bound
xchg
ficoms
add
add
movsl
sbb
mov
or
icebp
push
daa
daa
sbb
xchg
pop
outsl
mov
push
xchg
xor
gs
movsb
push
jns
adc
clc
xor
dec
fimuls
mov
or
popf
adc
fucomp
xor
dec
movsb
xchg
movsb
add
inc
in
lods
xchg
fsubl
or
cmpsb
or
out
mov
out
push
mov
bound
sub
aaa
xchg
xchg
inc
add
jle
inc
int3
add
dec
sbb
push
cmp
jns
gs
out
in
push
sbb
outsb
movd
in
xchg
pop
dec
test
cltd
rcll
mov
fldcw
jge
ret
aad
pop
jb
xor
and
leave
stc
pop
gs
push
fs
dec
xchg
dec
sbb
scas
inc
pop
lods
cmp
jbe
movsl
sbb
pop
jnp
std
mov
pop
or
lock
xor
pop
cmp
xchg
imul
out
mov
js
sbb
fsubr
imul
xchg
out
aam
pop
pop
out
inc
psubsw
daa
mov
mov
xchg
mov
and
xchg
mov
test
push
mov
insl
adcb
xchg
xchg
lahf
testb
jo
insb
cmp
arpl
mov
push
jb
pushl
ret
push
mov
mov
insb
fistpl
sub
dec
mov
mov
jmp
std
roll
or
outsl
and
out
into
aam
cmpsb
lock
cmp
push
sub
dec
dec
sbb
xchg
cmp
popa
cwtl
addr16
fisttpl
cld
sub
push
jns
ret
fidivs
nop
je
scas
aam
int3
sbb
icebp
mov
arpl
mov
hlt
jmp
js
pop
aad
rcll
jge
push
les
fcmovbe
inc
ss
fnsave
xchg
and
dec
xchg
cmp
mov
cmpb
cmpsb
or
pop
hlt
mov
ds
xor
outsl
test
imul
jnp
sahf
sub
mov
test
dec
mov
lret
sti
shrl
insb
fnstenv
fildll
fistl
cmp
ljmp
ja
nop
out
int3
icebp
push
enter
movsb
add
push
mov
or
xor
jl
and
jl
sub
out
gs
mov
lret
fnstcw
dec
ret
jae
sbb
add
dec
sub
shlb
cmp
inc
mov
mov
jae
or
xchg
gs
xchg
mov
jns
jns
push
lods
mov
push
mov
mov
dec
daa
test
loop
push
data16
insl
sbb
aad
mov
insl
mov
cmc
and
or
mov
nop
push
adc
add
push
add
das
add
repz
cmpsb
sub
pop
cmp
ret
jo
jns
dec
rcl
xor
out
shrl
xchg
popa
adc
mov
cmpb
inc
inc
fsin
xchg
push
testb
loop
cmpsl
rcll
fadd
jle
push
arpl
mov
mov
test
mov
out
and
loope
jne
mov
lds
xchg
mov
icebp
fisubs
fs
imul
xorl
push
loopne
adc
fst
pop
and
push
sbbl
mov
xor
imul
mov
jecxz
push
shl
sahf
sbb
pop
or
fs
xchg
call
stc
and
jno
cmpsb
cmp
mov
jo
cmp
mov
xadd
ss
les
lahf
aad
mov
pop
orb
xchg
jo
dec
lret
adc
xchg
xlat
insl
frstor
mov
imul
sti
xor
add
cmpsb
test
testb
or
popf
xor
sbb
push
aam
push
out
aad
or
loopne
push
pop
shl
xchg
and
and
pusha
popa
mov
mov
sbb
xorb
repnz
into
push
mov
xor
sub
pop
push
xchg
mov
out
jmp
nop
push
mov
call
mov
sbbl
pop
pop
mov
subps
push
cmpsb
sbb
cmp
cmc
sub
pop
dec
pusha
lea
cltd
xor
jae
inc
insl
bound
clc
jae
push
pop
shrl
and
push
jo
xchg
lock
sbb
data16
push
or
aaa
bound
rcll
dec
xchg
mov
or
mov
dec
fcoml
mov
cmp
jne
sub
int
enter
mov
cmp
sbb
pusha
adc
clc
je
outsb
push
jbe
mov
mov
jecxz
push
loope
and
mov
addr16
jnp
jmp
sbb
xchg
mov
cltd
jp
or
xchg
lret
test
sub
dec
int3
sub
xchg
add
idiv
flds
dec
clc
jb
mov
mov
add
ret
mov
pop
dec
popa
clc
mov
or
stc
mov
subb
sar
sub
sbb
jl
or
ret
mov
outsb
sbb
lods
xchg
shrl
leave
sbb
mov
xchg
jns
loope
hlt
decb
rorl
xchg
cmp
adc
lret
je
xor
sub
inc
fisubl
stos
jo
outsl
pop
xchg
enter
dec
mov
add
les
adc
adc
sbb
in
rcrl
mulb
add
sub
sub
mov
adc
rorl
adc
add
mov
int
mov
cmp
fst
dec
sbb
movsl
out
btr
xor
shl
inc
inc
scas
push
out
jmp
jbe
scas
mov
push
jno
insb
push
mov
inc
push
push
out
jmp
in
xor
add
inc
fdivrs
and
or
daa
nop
daa
ficomps
repnz
adc
cltd
mov
jnp
push
mov
adcb
ret
stc
call
lock
xor
sbb
in
adc
fdivl
lahf
jb
jno
call
rorb
outsb
mov
lahf
mov
test
fstpl
call
dec
leave
int3
pop
pushf
lret
xor
push
scas
sub
dec
fdiv
push
mov
lahf
fidivrl
or
bound
adc
out
lret
lcall
adc
and
test
cld
jg
add
push
xlat
push
sahf
insb
xchg
xor
loop
ja
push
scas
ja
xchg
pop
lahf
notb
mov
mov
push
fld
jns
mov
idiv
jbe
leave
and
push
mov
cld
shll
inc
mov
sar
sub
filds
cmp
fiaddl
mov
xchg
xor
dec
adc
ja
dec
enter
pop
adc
and
clc
mov
mov
sbb
mov
xchg
dec
js
xlat
cli
jns
rcrb
sahf
push
mov
jb
cmc
stc
jle
outsl
pop
shlb
pop
mov
mov
sti
sbb
lcall
mov
out
adc
inc
daa
dec
push
dec
out
sbb
jmp
dec
lret
or
mov
sbb
ror
cltd
icebp
rorl
and
aad
and
inc
and
dec
cmp
dec
aaa
xor
push
fdivrl
xchg
fimuls
lds
push
jo
lods
movsl
add
nop
xor
fwait
xor
fistpl
call
push
inc
or
shr
call
out
push
call
sti
push
lret
and
pop
es
inc
inc
mov
dec
shrl
dec
pop
inc
sbb
jno
and
jo
in
push
add
aad
ret
cmp
push
xchg
rorb
out
imul
pop
std
movsb
lock
daa
stos
xchg
mov
loop
cld
loopne
lds
lods
xor
adc
fstpt
imull
insl
pop
js
or
sbb
call
pop
jl
or
push
scas
add
or
push
mov
mov
fsubrl
ja
push
rorb
pslld
mov
out
or
push
vmovdqu
cli
fwait
mov
mov
cli
cltd
push
pop
incl
jns
mov
mov
lods
add
imul
mov
pop
mov
sub
bound
clc
cmp
inc
mov
xchg
pop
test
inc
inc
push
add
pop
pop
inc
std
jns
sub
cltd
sbb
iret
fstps
fadd
jle
mov
sbb
or
addr16
dec
cmp
pop
adc
push
ja
xorb
jg
nop
xchg
loop
push
clc
adc
pop
mov
push
mov
cmp
xlat
adc
xor
insb
cmpb
nop
cmp
imul
jbe
enter
loope
loop
jno
mov
stc
xor
shlb
into
leave
movsl
xor
cmp
out
out
out
testb
in
clc
cltd
lret
dec
inc
in
ret
dec
xor
jno
and
es
mov
push
sub
out
xchg
pushf
add
jb
pop
leave
sahf
jo
movsl
pop
out
lods
push
cmpsb
divl
jns
fmull
add
shll
ret
fidivrs
jae
push
pop
test
push
push
sbb
sub
and
popf
mov
imul
jo
les
inc
push
je
xchg
push
insl
dec
xchg
mov
dec
or
inc
lcall
pop
push
outsb
mov
bound
pop
movsl
add
cltd
testb
in
jb
enter
sbb
cld
ret
jge
lea
dec
jge
xchg
pop
shl
dec
bound
xor
daa
xchg
sub
xchg
lds
jmp
push
fldcw
and
pop
loope
cltd
mov
psubb
xor
add
lea
repz
pop
into
inc
cmp
or
fadds
mov
mov
movsl
sbb
nop
sub
cli
je
adc
stos
mov
push
lods
loop
push
fimuls
adc
sub
inc
sub
push
icebp
scas
out
pop
add
cwtl
add
fcompl
aaa
testb
cmc
roll
and
pop
push
in
lea
mov
shll
cmp
cs
mov
mov
orl
mov
sub
icebp
fpatan
inc
or
xor
aad
push
int3
into
sahf
lret
push
dec
xor
pop
jae
fistpll
out
add
subb
lds
in
inc
sbb
add
fs
mov
jae
jl
adc
dec
into
sti
into
cmp
lahf
pushf
push
popf
inc
jne
add
lock
data16
mov
lret
test
sub
ds
push
mov
movsl
test
cmp
push
test
mov
xchg
stos
cs
push
mov
pop
mov
xlat
lods
inc
and
std
test
inc
hlt
dec
jmp
mov
fdivrs
mov
xor
jmp
mov
inc
jnp
pop
mov
stc
add
or
push
cld
jl
xchg
hlt
test
mov
orb
adc
add
push
adc
cmpsb
and
sti
daa
sbb
pop
inc
sbb
lods
push
add
add
ds
inc
jne
push
popf
bound
aam
jbe
les
adc
imull
or
xor
xchg
popa
mov
sub
shl
ja
cmc
mov
movsb
ja
jns
popf
xchg
insl
jecxz
shll
push
iret
inc
movsl
stos
xchg
xor
into
int
mov
sbb
mov
xchg
ja
mov
sub
adc
das
pop
mov
call
outsb
not
enter
mov
dec
mov
inc
inc
sub
je
adc
push
in
xor
div
addr16
xchg
in
jg
push
or
sbb
daa
out
mov
in
loop
clc
mov
fabs
mov
int
pop
out
ds
iret
clc
stos
js
inc
in
out
push
dec
popa
test
lock
dec
cmpsl
push
ss
repnz
out
into
dec
jmp
jecxz
lods
xlat
push
sub
movsb
cmp
rolb
enter
subl
jne
adcb
pop
and
test
add
or
test
test
je
push
adc
jmp
ret
test
lahf
aam
scas
fmul
fbstp
pop
jmp
and
and
and
ud1
mov
dec
mov
push
flds
movsb
lahf
sub
fildll
aas
push
pop
xchg
push
sti
fldcw
pusha
sbbl
fnstsw
je
bound
mov
push
insl
jge
test
mov
repz
mov
adc
lret
ret
imul
and
mov
fcoms
xor
dec
push
mov
test
sbb
stos
insb
or
in
test
lahf
sub
lods
adc
push
ret
cmp
add
add
lock
int
jle
push
jle
pop
inc
mov
scas
fbstp
int3
pop
loopne,pt
int3
mov
or
push
mov
out
push
jb
mov
xchg
mov
jb
cli
rcll
pop
cmp
fdivl
das
das
mov
test
pop
ret
idivl
shll
pop
push
jne
mov
fs
cmp
outsb
jb
shr
sqrtps
mov
aad
and
je
pop
mulb
or
loopne
or
sbb
jge
cwtl
pop
mov
arpl
pusha
xor
scas
fsubl
add
mov
scas
nop
or
inc
dec
mov
je
sti
lea
pop
jg
test
dec
dec
mov
int
ret
rcrb
pop
cltd
cmp
pop
dec
idivl
or
push
ljmp
push
fdivs
mov
adc
mov
pop
dec
jns
aam
push
test
mov
push
bound
cmp
inc
jne
lea
xlat
push
ret
les
enter
lods
sub
inc
sti
aaa
cmc
les
fwait
xchg
jp
sbb
rol
nop
mov
push
icebp
xchg
dec
out
mov
lea
lods
in
insb
movsb
mul
push
mov
mov
dec
mov
pop
dec
inc
psubusb
add
repnz
bound
clc
cmp
sbb
out
xchg
mov
outsb
push
pop
cmp
dec
mov
xor
sbb
adcb
into
bound
or
push
or
popa
sbb
pop
xorl
and
xchg
inc
ficoml
out
xorl
and
je
mov
mov
jne
mov
sbb
notl
jle
push
or
imul
mov
aaa
leave
das
mov
hlt
jmp
xchg
sbb
loop
les
in
insl
arpl
mov
mov
pop
jno
nop
add
sti
pop
test
das
mov
pop
mov
sub
sbb
ss
mov
sub
push
ds
mov
das
mov
shrd
dec
dec
or
out
ds
dec
inc
int3
out
adc
dec
mov
clc
cld
dec
imul
sbb
pop
xchg
jb
jg
lods
sbb
fdivrl
jae
into
push
sub
mov
lods
out
cmp
sar
stc
mov
pop
jns
mov
jge
nop
lret
jne
popf
or
in
mov
testb
jbe
icebp
cltd
pop
inc
cmp
addr16
add
jl
mov
gs
pop
fsub
in
dec
and
mov
dec
push
pop
push
rcrb
cmpsl
cmp
inc
hlt
movsl
outsb
jecxz
jae
xlat
stos
or
xchg
mov
outsl
arpl
mov
cltd
adc
idivl
xlat
cmp
xor
popf
leave
test
ficoml
push
lds
aam
sub
rcrl
mov
arpl
sub
fisubs
mov
push
lret
repz
clc
mov
cwtl
cmpsb
pop
subl
ja
mov
out
nop
push
hlt
cmc
lea
sbb
je
out
xchg
lret
insl
jbe
call
and
jbe
jmp
negb
push
outsl
push
sbb
je
push
test
dec
cltd
cmp
rep
sbb
sub
lahf
jmp
inc
jbe
loop
pop
std
nop
or
inc
mov
in
jae
xor
xorb
cmpsl
test
dec
fnstcw
lahf
xchg
lret
cmp
adc
inc
xor
xlat
pop
in
ret
mov
shrl
xor
or
imul
mov
aas
xor
cwtl
shlb
mov
lods
sbb
pop
mov
push
inc
jecxz
fdivrl
or
xchg
mov
push
pop
add
jge
ljmp
inc
jl
daa
scas
popf
push
icebp
out
daa
outsl
sbb
rorl
mov
fdiv
jno
iret
mov
aad
pop
and
pop
dec
add
xor
jnp
pop
mov
fistpll
xchg
adc
popf
test
sub
mov
push
push
cmpsl
push
outsl
push
and
js
cmc
pop
rol
mov
sbb
in
nop
pop
pop
adc
imul
xor
mov
mov
lea
push
rcll
test
push
aad
pop
mov
jns
mov
adc
js
pop
sbb
mov
mov
repnz
push
pop
out
inc
out
push
jl
pop
xchg
mov
leave
pop
push
jp
fildll
push
in
stos
adc
fsubl
adcl
xor
mov
xor
insb
dec
sub
addb
inc
ret
xchg
insl
lods
shll
push
je
jno
jbe
scas
dec
jl
shrb
and
loopne
stos
adc
mov
xor
xchg
jle
cmpb
imul
lahf
das
jge
mov
pop
fisubrl
mov
in
mov
pop
adc
xchg
or
sub
mov
sqrtps
adc
fnstenv
adc
and
out
lahf
gs
sarb
pusha
dec
xor
pop
fwait
dec
push
push
jmp
std
test
sbb
sub
stc
xor
xorb
sub
pop
mov
imul
pslld
in
push
shrl
sahf
mov
out
pop
xor
fdivs
push
cld
shlb
push
sbb
ficoms
aas
xor
test
or
or
adc
or
out
sub
dec
mov
loop
stos
cmpsl
fld
mov
pop
mov
push
jmp
push
xchg
fistpl
or
jle
test
fiaddl
mov
int
push
scas
in
cmp
fdivl
dec
aam
in
leave
cmpsl
jne
mov
sbb
frstor
cmp
sbb
xchg
popa
addb
xor
xor
and
pop
in
xor
jae
pop
sub
ffreep
out
cmp
push
rclb
mov
xor
push
push
pop
outsb
andl
xor
sti
xchg
adc
into
pop
pop
push
shlb
pop
sbb
shlb
sahf
call
ret
test
sub
sub
mov
add
mov
adc
cmp
and
sahf
sub
outsl
in
sahf
icebp
aaa
mov
daa
nop
lret
repz
shl
jle
xchg
or
mov
mov
jne
dec
push
sahf
loopne
xchg
dec
cld
add
adc
orl
jp
xlat
repz
imul
add
jno
les
sub
stos
xor
aas
dec
jb
jg
xlat
stos
adc
adc
push
mov
data16
in
mov
negb
fsubl
and
out
jnp
popa
mov
push
jne
xor
push
pop
pop
mov
jmp
push
jb
or
std
push
push
xchg
adc
fsts
jecxz
fidivrs
inc
outsl
dec
or
mov
sbb
and
push
and
iret
xor
dec
sbb
cmp
mov
adc
loop
mov
mov
mov
dec
jg
pop
mov
cwtl
add
jae
mov
mov
cs
dec
cmp
sbb
and
into
jle
add
mov
pop
in
imul
push
dec
push
in
rcrl
adc
clc
mov
dec
test
lahf
imul
mov
adc
mov
lret
dec
inc
mov
mov
jb
sub
out
dec
cmp
loop
stos
adc
les
adc
inc
cmp
jo
inc
movsl
icebp
xchg
xor
cmpw
adcl
pop
pusha
fldenv
and
mov
rcrl
jbe
sub
mov
aam
loop
es
pop
out
jb
aad
and
or
and
in
xor
ret
adc
cltd
and
lcall
sbb
fbstp
and
lret
pop
or
test
lret
pop
dec
int
jg
xchg
jecxz
loope
enter
out
sub
xchg
mov
div
popa
mov
push
int
enter
pushw
mov
or
inc
xor
push
out
paddusb
adc
mov
fldt
ret
dec
xchg
jg
dec
in
scas
outsl
iret
inc
int
imul
jb
sub
xor
nop
mov
jecxz
dec
sbb
cmp
cld
mov
or
test
icebp
mov
inc
lcall
jmp
repnz
xchg
rcrb
inc
test
popf
pop
sub
adc
jge
dec
jne
jae
jle
shll
sub
popa
sub
push
or
shufps
adc
pop
sub
loopne
std
lds
inc
add
lea
adc
push
mov
inc
xor
testl
std
mov
and
std
push
mov
pop
xchg
scas
dec
imul
pop
popf
lods
xor
fadd
out
rcrl
outsl
pop
mov
xlat
or
sub
pop
mov
popa
add
cmp
in
les
hlt
out
test
push
mov
push
jne
pop
sub
jge
mov
mov
into
pop
sbb
adc
call
hlt
repz
jne
mov
xchg
push
mov
sti
jp
ret
and
cmp
mov
fcoms
pop
mov
cmpsl
pop
xchg
dec
dec
arpl
xchg
xor
negl
add
cld
es
sub
popa
lea
dec
mov
fldcw
push
sbb
sub
fisubl
jge
jg
mov
mov
fadd
fdivl
mov
in
inc
xchg
loop
sahf
imulb
push
add
test
xchg
frstor
das
push
push
push
sbb
mov
fwait
test
sti
mov
adc
sti
dec
add
sbb
js
push
adc
daa
sti
lods
out
push
add
add
jo
pusha
jbe
add
xchg
pop
insb
xchg
jbe
icebp
aad
xchg
cmp
test
popa
sbb
adc
mov
les
leave
gs
incl
jbe
jno
cmpsl
bound
loope
dec
gs
bound
pusha
jno
push
call
fwait
xchg
adc
pusha
add
jnp
daa
or
loop
jnp
fwait
cmp
sub
jbe
and
dec
cmp
imul
push
fs
jbe
das
sub
popa
inc
addb
add
mov
add
add
mov
insb
cmp
push
in
test
fistl
shll
jge
jmp
dec
mov
xchg
stos
es
das
pop
push
loopne
xchg
push
and
sub
inc
gs
inc
push
enter
sbb
ret
mov
adc
int3
mov
rolb
mov
js
pop
lds
jno
loopne
xor
movsb
dec
mov
andl
xor
push
sti
xor
push
test
push
add
cs
inc
and
or
pop
cmpb
jbe
push
xor
or
bswap
lods
outsl
push
outsl
fwait
movsl
cmp
inc
sub
inc
push
xchg
fidivl
or
xchg
cmp
dec
in
hlt
dec
pop
cmp
adc
xchg
lock
daa
mov
xorb
and
pusha
repz
jl
xor
sar
jno
jnp
inc
in
mov
int3
loopne
cmp
fbstp
xchg
lods
lret
andl
push
test
pop
xor
testl
cmp
add
mov
mov
push
icebp
lcall
adc
into
in
dec
movsl
sub
ss
mov
fsubrp
cld
push
cmp
xchg
ss
push
cmp
inc
inc
or
add
jo
clc
fdivl
push
push
xchg
cmp
xor
outsb
or
stc
sub
mov
push
out
adc
imul
jmp
add
sbb
imul
xchg
pop
mov
rol
imul
xor
cld
push
test
inc
popa
rcl
stos
and
mov
and
jge
shll
in
int
push
mov
jg
test
in
aam
xchg
inc
push
lock
or
jle
pusha
or
outsl
adc
fcomp
ja
push
inc
ret
fbstp
cmp
sti
jb
xlat
jle
pop
jmp
lock
bound
dec
xchg
stos
or
das
fisubs
and
lds
adc
adc
push
cmp
loope
stc
dec
inc
adc
pop
sub
push
ficompl
pop
and
mov
inc
mov
out
lea
add
inc
cmpsl
cli
jge
ret
je
xchg
mov
sbb
aam
cld
aas
xchg
scas
out
mov
and
pusha
movsl
dec
or
add
loopne
xor
lahf
cmp
mov
xchg
sub
cwtl
push
adc
inc
pop
jae
lods
ljmp
out
sbb
loope
push
jae
lret
movsb
idiv
push
cs
xor
jne
cmp
in
ljmp
xor
cmp
push
sub
loope
jb
pusha
mov
mov
cmp
outsl
das
mov
pop
das
jb
pusha
sub
fldl
jo
or
xchg
cmp
fwait
sahf
xlat
adc
xor
cmc
out
mov
jo
mov
sub
ds
and
add
arpl
mov
or
mov
movsl
fucomip
dec
add
xchg
xchg
pop
pop
push
xchg
mov
stos
out
aas
jle
lcall
or
xchg
push
pusha
inc
xchg
or
stos
adc
dec
mov
iret
inc
mov
scas
int
ljmp
mov
jecxz
cmp
mov
mov
ret
push
dec
adc
mov
in
leave
cld
addb
mov
rorl
add
cmp
xor
lret
bound
js
adc
inc
jb
sbb
xchg
sar
outsb
fbstp
lret
das
and
push
daa
divb
adc
inc
sub
loope
mov
cltd
lds
out
fucomip
mov
push
shll
les
mov
mov
rorl
dec
or
dec
out
adc
jmp
lods
mov
cs
push
dec
shufps
xor
movsl
cltd
inc
test
hlt
xchg
ja
xchg
pop
jmp
decl
mov
jb
clc
pusha
push
pop
fwait
xchg
xchg
ds
push
shlb
movl
adc
xchg
pop
clts
dec
loop
push
push
xchg
jl
mov
pop
cmp
push
mov
dec
fimuls
lcall
add
das
push
add
icebp
loope
idiv
lds
push
cmpsb
mov
push
cmp
cmp
xor
cmp
mov
sbb
push
add
clc
imul
pusha
sbb
fiadds
push
jp
dec
xor
bound
xlat
cld
shlb
cmp
mov
push
loopne
aad
cltd
lret
imul
and
push
pop
mov
pop
faddl
mov
sbb
in
push
xchg
cltd
sarb
adc
sub
enter
out
rolb
adc
sti
mov
insl
mov
or
pop
in
fldenv
inc
jb
push
fwait
ret
mov
into
icebp
or
loopne
cmp
scas
cmp
sub
int
in
je
jne
loope
mov
ret
out
mov
sbb
or
and
lcall
push
jge
mov
pop
stos
shl
shlb
xchg
dec
ds
testb
das
cmpsb
lcall
arpl
dec
shll
in
js
call
popf
push
add
stos
inc
rep
push
jno
dec
cli
or
mov
sbb
or
or
leave
jp
jl
or
jo
hlt
mov
daa
add
aas
push
lret
inc
or
xchg
inc
ss
add
cmp
fs
xchg
rorb
outsl
test
jmp
inc
or
jns
into
sti
jmp
pop
arpl
xor
xchg
dec
push
xor
adc
imul
or
lock
sub
movsl
push
mov
mov
ds
or
dec
je
ss
mov
in
push
call
sub
mov
arpl
xchg
mov
ret
pusha
cwtl
mov
loopne
pop
je
xchg
push
xor
xchg
jecxz
in
clc
jnp
push
cs
rolb
into
add
out
stc
ljmp
pop
adc
and
cmp
add
xchg
jmp
movsl
ss
cmp
repz
popf
sahf
cmp
push
lcall
and
shll
into
jp
mov
loop
sti
push
xchg
fsubrl
out
add
lock
fs
mov
jle
add
stc
adc
adc
cmc
push
iret
rolb
jbe
jo
cmp
cmc
aam
cmc
imul
pushf
hlt
add
testb
leave
icebp
pop
jecxz
or
mov
xor
mov
xor
ss
daa
push
add
adc
add
arpl
jl
mov
sbb
push
test
pop
lahf
jecxz
hlt
add
mov
sub
fisubrs
lcall
and
in
scas
cmp
ss
rcr
cld
push
fistpll
fadds
mov
ds
mov
pusha
in
pop
dec
xor
inc
cmpsb
aam
mov
ja,pt
cli
insb
fldcw
mov
push
movsl
fsubl
pusha
add
xchg
and
inc
or
negl
push
outsb
enter
inc
icebp
ds
popf
es
push
dec
in
fwait
or
clc
xor
and
push
mov
lret
pop
and
fs
cmp
sub
dec
shll
cmp
nop
mov
mov
sbbl
add
inc
sbb
inc
inc
mov
mov
dec
jo
arpl
pushf
push
dec
sbb
test
popa
in
fisttps
adc
xchg
cmp
rclb
push
xor
xor
add
sbb
jge
rcll
fwait
arpl
dec
into
out
shrl
outsb
aaa
subl
test
jo
orl
lods
xlat
mov
pusha
xor
outsl
mov
cmp
mov
mov
adc
adc
mov
out
sbb
xchg
cli
or
popa
mov
outsl
or
sbb
mov
sbb
cltd
adc
inc
push
lods
loopne
lcall
adc
mov
lock
outsb
sbb
sbb
dec
xlat
xor
sub
mov
push
sbb
pop
push
xchg
sub
and
movsb
jb
dec
or
faddl
ds
pop
xor
divl
daa
sub
xchg
dec
add
leave
out
leave
pop
lods
adc
aaa
lret
xor
mov
or
shll
inc
sti
dec
push
lret
loopne
mov
mov
xchg
sbb
ret
and
movsl
cmpsl
sar
xchg
xchg
mov
cmp
std
jnp
inc
ja
mov
cs
pop
icebp
push
sbb
loop
push
lds
sub
jmp
xchg
inc
xchg
fnsave
jne
iret
fisubs
push
mov
int3
dec
push
shl
mov
js
mov
mov
mov
push
sbb
inc
std
jle
mov
bound
mov
xchg
mov
ret
push
mov
mov
outsl
ret
lods
arpl
xor
loopne
ret
push
stc
cmp
test
imul
lds
push
lea
inc
lock
jmp
lret
cmpsl
push
sbb
jg
mov
fstl
hlt
sub
loopne
push
adc
cmpsl
stos
mov
gs
xor
mov
sbb
xchg
int3
cltd
jmp
and
repz
xor
fsts
and
aad
mov
xchg
add
cmpsb
add
push
shrb
or
jecxz
andl
sbbb
cmp
adc
pop
mov
pop
lea
idiv
mov
enter
jg
add
les
xlat
and
rcr
xchg
ret
sbb
scas
push
ret
inc
aaa
and
movsb
adc
xchg
cld
mov
popf
dec
inc
mov
adc
lcall
jle
loop
int3
xchg
dec
sbb
push
hlt
popa
repnz
incl
cs
repz
nop
mov
sbb
and
xchg
decl
mov
sub
push
data16
int3
or
ret
bound
jl
jle
jmp
lahf
loop
mov
xchg
jle
xor
adc
jmp
jp
mov
sub
xor
loopne
push
stos
sub
pop
add
cltd
adc
ljmp
xchg
das
ret
lds
mov
cmp
mov
and
leave
pop
rcl
gs
sub
sub
data16
add
push
loop
aam
stc
shlb
into
sarl
mov
xor
lods
test
ret
mov
mov
lock
fildll
jb
out
sub
or
xor
daa
out
push
mov
sbb
jbe
xor
dec
inc
mov
mov
xchg
push
pop
pushf
jge
lock
inc
into
sbb
cmp
pop
imul
mov
lea
push
mov
lea
outsb
push
rclb
shlb
sbb
sbb
xor
aam
shl
xor
ja
out
pop
movhps
and
lret
jg
lea
xchg
cmpsl
jg
push
into
jg
pushf
stc
int3
es
adc
int
mov
sahf
cltd
mov
and
imul
add
lods
mov
adc
shr
dec
decl
popf
add
loope
clc
imul
idivl
pop
mov
xor
jmp
dec
add
mov
sahf
cmpsb
test
sbb
mov
fimuls
aad
jmp
mov
pusha
mov
fcomps
dec
cmp
rol
inc
sub
addr16
in
sahf
repz
aas
pop
lods
sar
cmp
inc
sub
add
shlb
lahf
jecxz
adc
xor
push
adc
jle
cmp
sub
sbb
sub
sahf
xchg
pop
add
adc
push
add
out
loop
loopne
xchg
daa
fsubrp
push
mov
jno
sahf
lret
mov
movsb
leave
and
dec
mov
cmpsb
insb
and
in
repz
popa
int
imul
cli
mulb
jl
sbb
mov
ret
cmpsl
aam
mov
lahf
jge
sub
repz
pop
mov
adc
das
roll
or
dec
pop
sti
or
fs
imul
out
loopne
jecxz
call
loope
pop
sub
push
hlt
rcr
fidivs
popa
cmp
test
sbb
icebp
jmp
dec
inc
repz
pusha
cmpsl
sub
push
xlat
movl
dec
test
push
test
std
ret
imul
mov
pop
push
lock
lds
mov
mov
adc
mov
faddp
out
mov
push
jbe
xchg
mov
mov
into
mov
outsl
or
sbb
adc
insb
add
mov
mov
div
xchg
das
movsl
jl
xor
enter
sbb
aas
push
mov
xchg
push
stos
data16
cli
in
lret
loop
int
and
mov
push
jle
or
xchg
movsb
scas
sub
dec
int3
fisubrl
mov
test
jecxz
popf
pop
addl
xchg
lahf
xchg
dec
lret
sbb
fwait
push
xchg
mov
and
or
sbb
and
in
insl
test
cmp
jo
pop
dec
inc
rorb
in
mov
adc
jecxz
in
int3
stc
in
xor
mov
adc
lret
xchg
mov
pusha
inc
int
lods
push
popf
lods
pushf
push
push
inc
push
fcos
push
outsl
pop
fucom
gs
pop
jnp
xchg
xchg
or
lret
jne
aaa
push
in
sub
aaa
loope
mov
or
lahf
out
xchg
out
adc
and
pop
jo
sub
lret
mov
jge
in
jg
call
cmp
scas
scas
adc
or
mov
shll
lahf
call
jne
dec
or
mov
xchg
add
je
add
jne
in
mov
imul
push
jge
adc
add
out
push
and
jge
loopne
push
mov
scas
jmp
rclb
cmp
bound
movsl
cs
in
jns
movsb
scas
inc
push
inc
mov
in
xlat
subl
inc
cmp
int3
mov
xchg
scas
sti
mov
scas
loopne
push
fisttps
mov
and
xchg
mov
cwtl
inc
movsl
shl
dec
jle
push
rorl
mov
pushf
xlat
mov
xchg
addr16
int3
mov
in
push
pop
roll
mov
xchg
jnp
mov
daa
in
xorb
fisttpll
xchg
pop
cwtl
dec
sbb
and
mov
ret
xchg
mov
pop
xchg
movsl
call
jo
fwait
mov
mov
orb
jge
stos
pop
dec
fimull
xchg
jne
mov
pop
es
test
nop
scas
lcall
insl
fadd
jmp
inc
daa
in
or
cmpb
fstpt
xchg
lahf
jbe
js
lcall
mov
stos
aaa
lock
clc
jmp
sub
cmp
inc
popf
adc
fs
pop
mov
aas
fsubs
das
jmp
mov
outsl
fistpl
xor
mov
mov
icebp
sub
xchg
mov
js
dec
cmp
cmpsb
sbb
mov
ret
and
adcb
add
add
mov
pop
ret
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
jmp
repnz
jne
pop
or
sahf
bound
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
notl
and
xor
sarb
nop
sbb
inc
out
add
sti
mov
pop
mov
mov
movsl
fs
cmp
mov
and
sbb
xlat
xchg
rol
and
pop
jg
movsb
popf
fldcw
cwtl
daa
movb
les
in
add
out
lock
imul
push
push
popl
xchg
sub
popf
fldcw
cltd
daa
mov
mov
add
jne
pop
cmp
lea
fimull
or
imul
nop
andb
and
pop
jg
pop
setno
daa
xor
cmp
jns
inc
sub
jne
pop
out
xchg
cltd
roll
sub
bound
and
pop
or
sahf
arpl
setno
bound
jne
pop
setno
arpl
into
jne
pop
or
sahf
bound
dec
jle
pop
or
sahf
pusha
xor
cmc
sbb
rorb
sahf
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
jne
pop
aas
lcall
xor
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
dec
inc
stos
or
lcall
into
jne
pop
setno
and
lcall
shrb
sub
push
outsl
aas
setno
bound
lds
or
xchg
lcall
into
jne
pop
setno
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
bound
into
jne
pop
setno
add
jne
jbe
dec
jmp
cmc
add
in
and
dec
mov
ja
roll
push
mov
lcall
aas
pop
sub
adc
push
adc
cmp
lret
in
aas
push
aam
pop
fcmovbe
pop
outsl
lods
mov
cli
lret
arpl
in
popa
movsb
cli
add
push
push
arpl
adc
inc
sarl
push
les
dec
ljmp
fldl
mov
add
rcrl
pop
ds
and
icebp
outsl
ja
pop
bound
pop
mov
xchg
jb
shr
dec
adc
jmp
and
push
sbb
repnz
shll
pop
lret
sbb
and
lret
cmp
mov
test
testl
aas
mov
push
lret
pop
pop
lea
push
push
sbb
mov
sbb
cmp
or
jne
pushf
adc
adc
add
outsb
imul
cwtl
xchg
mov
jmp
int
mov
add
loope
xchg
es
dec
dec
add
insb
movsb
mov
aam
sub
enter
mov
enter
sti
cltd
and
sbb
xchg
cmpsl
ret
in
xchg
and
lahf
pop
push
movsl
and
in
push
jno
addb
movl
xchg
xchg
js
repnz
or
inc
push
or
enter
outsb
inc
repnz
rclb
cmpsb
popa
pop
lret
mov
mov
aam
xor
cmpsl
cmpsl
pop
aaa
mov
sub
pop
and
cld
or
inc
int3
pop
in
jmp
decb
outsb
jp
push
xchg
add
cmp
adc
adcb
and
adc
imul
cmp
mov
sbb
test
movsb
jg
mov
jb
dec
lds
imul
cltd
std
es
lret
jns
data16
lcall
mov
dec
int3
add
lock
dec
je
sub
imulb
test
movsl
dec
into
xchg
sbb
push
aad
push
cmp
mov
and
pushf
inc
push
or
pop
cmp
xor
sub
jg
inc
fisubl
push
lods
cmpsl
adc
or
or
icebp
fsubrs
jnp
cmp
mov
or
cltd
lods
mov
icebp
mov
add
dec
stos
test
adc
xchg
out
fmuls
fcompl
ljmp
dec
mov
insl
jnp
loop
mov
xchg
add
es
xchg
leave
jae
xlat
ljmp
aad
cs
ds
nop
test
je
adc
sbb
push
mov
sub
dec
pusha
fsubrl
or
mov
xor
arpl
fsubr
clc
ret
jae
scas
in
and
cwtl
shl
imul
dec
jns
hlt
mov
mov
lock
cli
xlat
cmp
das
xor
and
xchg
push
cli
dec
ds
pop
mov
inc
aam
lcall
rcr
inc
sbb
jg
and
mov
adc
add
jae
ds
dec
xor
adc
fidivrl
cwtl
jo
aam
and
sbb
add
jne
mov
nop
loop
xor
push
mov
je
sahf
lock
xchg
les
mov
jg
dec
insb
aas
jle
decb
loopne
scas
jle
and
popa
and
fsubs
cmp
xchg
movsl
outsb
push
inc
insb
out
rcr
lods
sbb
sbb
push
mov
int
dec
je
inc
and
push
xchg
push
mov
test
xor
cwtl
cli
enter
sbb
push
pop
mov
out
lcall
fimuls
or
adc
pushf
jo
cld
test
insl
arpl
dec
je
adc
ret
mov
add
ljmp
jo
sub
std
xchg
in
jl
int3
mov
es
push
into
setle
cmp
lret
push
movsl
mov
sbb
mov
push
mov
xchg
and
dec
in
sub
mov
in
adc
aas
mov
push
mov
xchg
int
push
sub
sbb
sub
andb
sub
push
mov
add
sbb
testl
mov
fcoml
pop
fwait
xchg
into
adc
mov
xchg
cmpsb
and
loopne
addr16
xor
inc
or
fnstenv
push
xor
aam
frstor
nop
jle
sbb
jg
jne
rcll
in
add
stos
dec
cmp
inc
sbb
add
inc
bound
rclb
xlat
mov
mov
lcall
mov
cltd
test
xor
call
inc
mov
jle
insb
push
pop
movsb
gs
gs
ficoms
and
sbb
push
je
popa
xchg
mov
je
insl
jg
xchg
dec
hlt
sub
js
xor
cmpsb
dec
shll
std
pop
jmp
mov
or
out
pop
sbb
cmpsl
rolb
mov
popf
dec
std
sarl
mov
insb
insl
lods
pop
popa
ljmp
lock
jmp
ret
sub
movl
mov
inc
movsb
fisubs
jnp
out
xor
xor
lock
subb
test
cmp
xlat
ljmp
sbb
aam
bound
pop
pop
push
insl
daa
call
ds
test
sub
or
mov
sub
adc
out
mov
movups
insb
int
cmp
jno
leave
jl
fiadds
imul
adc
into
pop
bound
lcall
ret
mov
pop
lret
or
push
fmull
mov
xchg
test
jp
push
xchg
leave
pop
cmp
or
cs
cld
inc
pop
and
mov
and
adc
jb
inc
rclb
pop
sub
out
cwtl
pop
sbb
sbb
mov
aam
pop
into
dec
jl
in
lret
mov
lahf
call
jns,pt
int
test
fistl
lcall
daa
lea
mov
cmc
xchg
cmp
push
testb
test
pop
daa
test
shrl
leave
std
lods
out
inc
aaa
ljmp
xor
jge
mov
mov
shll
inc
push
and
cmp
rolb
adc
in
sbb
repz
rcrb
jo
push
std
adc
xchg
jno
cmpsb
and
hlt
jns
les
shll
into
and
jge
stos
stos
mov
push
jnp
in
repz
cli
rcr
sbb
test
test
inc
dec
dec
testl
lock
ja
jb
add
or
push
dec
mov
mov
cmpsl
les
mov
stos
je
push
bound
sbb
push
loop
call
dec
and
adc
adc
adc
aad
cs
popf
dec
mov
mov
dec
das
repz
xor
lock
xchg
sbb
cmpsb
mov
je
dec
cwtl
jmp
dec
mov
and
mov
addr16
jecxz
inc
test
js
ss
sub
or
jmp
jp
xchg
xchg
push
leave
andl
outsl
das
nop
loopne
mov
and
cmpsb
cmc
and
push
data16
mov
mov
lds
ret
hlt
sub
adc
jle
imul
outsb
lret
out
ud2
roll
sub
lcall
aam
push
cwtl
add
int3
cmp
and
dec
ljmp
cs
push
sbb
out
add
jae
push
or
sbb
inc
rorl
lret
les
sub
lret
popa
pop
sbb
mov
jno
ss
imul
mov
cmp
sub
mov
inc
lods
mov
or
adcl
push
les
add
nop
mov
fstl
ja
or
dec
and
mov
cmp
ror
dec
xor
sub
ja
dec
fistl
add
aad
hlt
icebp
int
inc
std
mov
or
pop
push
cmc
xchg
cmp
fstl
in
xchg
and
fsubrs
in
lods
sti
add
sbb
pop
idivb
scas
ret
mov
clc
in
mov
xor
mov
jmp
leave
int
push
cmpsb
mov
lods
dec
sbb
jno
imul
mov
pop
sbb
lods
dec
scas
loopne
xor
push
idivl
add
jne
or
inc
and
movsl
sub
in
jb
mov
jne
fcomp
or
call
fildl
lds
loope
out
daa
inc
mov
inc
std
cmp
jl
sarb
fdiv
dec
xchg
mov
pop
add
or
pop
pusha
pop
push
inc
cmp
test
jecxz
dec
movsl
pusha
ret
add
sbb
ljmp
jle
jae
sbb
push
or
mov
repz
push
mov
loop
jbe
addb
jmp
mov
mov
inc
mov
sub
outsl
add
cwtl
inc
mov
push
pop
push
inc
int
imul
imul
push
stos
gs
adc
cmc
rclb
push
cmp
push
pop
sti
stos
pop
or
pop
addl
cmpsb
push
lret
mov
in
push
dec
dec
insl
push
test
out
push
and
mov
ret
fimuls
jno
mov
pusha
ret
adc
xchg
scas
icebp
dec
add
inc
and
mov
enter
pushf
mov
arpl
mov
dec
out
mov
and
jle
daa
add
test
jle
dec
or
clc
loopne
test
out
fcomip
fimull
cli
mov
sbb
xchg
mov
lret
popf
pop
out
cld
push
dec
lods
mov
imul
aas
and
xchg
in
jbe
fdivl
mov
out
cmp
fs
rorl
std
push
jb
mov
ja
insl
enter
insb
sbb
inc
jno
dec
jl
cmp
imul
ret
push
movsb
lods
in
xlat
std
lret
mov
jno
mov
mov
or
push
mov
mov
out
jns
shll
mov
aaa
loope
and
es
ret
mov
xor
xchg
xchg
stos
lods
xchg
xor
mov
push
jne
xlat
dec
cltd
jns
add
inc
add
js
out
mov
sbb
je
sub
xchg
iret
popa
push
cmp
js
and
arpl
cmp
cmp
and
pusha
sub
aas
into
cmp
aam
jg
test
xchg
rcll
ljmp
xor
sub
sahf
xor
lret
in
out
mov
out
jbe
push
adc
adc
pushf
cmp
daa
fistpl
xor
push
cmp
and
mov
sarb
adc
fldl
iret
imul
xchg
mov
arpl
bound
je
jp
fnstsw
int3
xchg
stos
jmp
iret
gs
xor
and
stos
out
insb
fincstp
adc
xchg
jne
sub
xor
hlt
ds
jno
cmp
loopne
cltd
loope
push
dec
fwait
xlat
cmp
adc
mov
push
inc
mov
xchg
mov
xchg
lret
add
cmp
xor
xchg
shll
gs
sarb
sbb
dec
sti
push
dec
daa
mov
adc
pop
xchg
sbb
push
sub
cmp
je
xchg
pop
fildl
jl
mov
push
push
mov
imul
xorl
stos
mov
xor
add
push
cwtl
rorb
push
leave
xchg
mov
sub
cwtl
sbb
imul
xor
std
or
addr16
jnp
data16
and
or
pop
arpl
fmulp
jnp
and
popf
mov
push
adc
pop
nop
pusha
cs
adc
push
inc
aad
sahf
pop
daa
fldt
xchg
mov
or
jg
xlat
adc
ret
fucomp
xor
mov
repz
outsb
push
sub
xor
leave
es
add
aad
fdivrs
outsb
dec
das
and
mov
jo
mov
xchg
ret
stc
xchg
scas
mov
rcrl
adc
shll
push
push
adc
or
movsl
out
cmp
in
inc
mov
xor
inc
arpl
or
ret
adc
inc
mov
insl
dec
push
dec
lcall
jb
sub
cmpsb
sahf
adc
xchg
mov
mov
add
jns
icebp
dec
ss
fnstsw
mov
jns
pop
ficoml
lods
es
jge
add
push
mov
arpl
mov
rorl
gs
icebp
dec
sbb
jbe
ds
shlb
inc
mov
xchg
enter
lds
add
pop
jmp
push
mov
jae
sub
and
hlt
shll
arpl
lcall
or
push
adc
add
push
lcall
fdivs
cmp
sub
cmpsb
stos
pop
fs
test
orb
loop
jne
imulb
add
ret
shrl
cmp
fnstenv
inc
adc
sub
insl
leave
lods
ljmp
or
into
xchg
lcall
add
es
mov
mov
pop
dec
inc
arpl
mov
in
pusha
pusha
int
adc
and
inc
loop
pop
lods
fadds
test
iret
jecxz
sti
mov
jnp
imul
test
enter
mov
sti
or
sbb
orb
mov
jg
dec
or
and
cmc
or
mov
xchg
fwait
inc
cmp
pop
push
pop
adc
jbe
mov
test
and
aas
push
cmp
je
pop
js
or
ret
loope
lods
stos
cs
fldcw
movsl
loopne
loope
imul
inc
dec
xchg
lea
lods
lods
or
or
xchg
test
adc
je
push
lcall
clc
lods
insb
out
mov
inc
inc
into
movsl
mov
cwtl
lret
pop
sub
pop
cmp
xor
add
ret
nop
nop
nop
nop
jmp
