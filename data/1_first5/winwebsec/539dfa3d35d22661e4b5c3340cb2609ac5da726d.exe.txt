les
cld
push
xchg
stos
cmp
dec
inc
cmp
shlb
js
or
pop
and
inc
repz
mov
mov
mov
push
add
xor
std
jnp
xchg
sub
jne
in
ficomps
jp
js
mov
inc
ss
rcll
movsl
fwait
jle
pop
mov
adc
fwait
jne
daa
push
push
sarl
mov
add
mov
aad
cmp
icebp
lds
push
sub
cmp
xchg
lret
add
jbe
inc
xor
xchg
fidivrl
outsl
sbb
js
pusha
inc
xchg
leave
mov
and
mov
addr16
aas
out
std
jp
and
aaa
lret
fldt
sbb
outsb
daa
xchg
inc
mov
inc
repz
xchg
lahf
adc
dec
out
dec
or
stos
movsl
cli
xor
outsb
push
dec
aas
call
xchg
push
popf
mov
xchg
inc
ja
or
out
dec
iret
jmp
cmp
hlt
xor
cltd
inc
mov
mov
adc
roll
dec
cmp
mov
lret
and
jle
dec
lea
sti
testb
lods
repz
and
shlb
push
fs
pusha
jl
je,pt
cld
add
inc
ret
inc
cwtl
xchg
out
jne
jmp
addr16
jo
into
xor
sub
lret
cmp
cmc
rcrb
adc
mov
sub
addr16
imul
popf
jecxz
lret
outsl
sbb
add
ret
sub
lods
jecxz
pop
cmp
push
mov
insl
push
cwtl
mov
jecxz
movsb
xlat
cli
sti
inc
ret
jl
push
jp
xchg
cmp
rorb
dec
into
das
cmp
or
sti
mov
jno
pop
xor
stos
bound
pop
mov
jbe
lea
jmp
inc
hlt
push
aas
dec
sbb
dec
add
push
xchg
xchg
rcrl
out
adc
xor
adcb
insb
scas
mov
cs
lret
scas
cmc
mov
push
out
lds
jno
sahf
xor
mov
daa
jae
fadd
xchg
adc
mov
mov
add
xchg
aam
pop
or
add
not
mov
ljmp
pusha
cmp
leave
push
mov
dec
sub
mov
adc
ja
call
push
push
pop
fiaddl
arpl
test
ret
lods
inc
mov
lret
mov
mov
stos
mov
jae
cltd
inc
push
mov
add
das
sub
push
and
push
loopne
push
sbb
std
fcom
jmp
sbb
pop
push
xor
add
outsb
dec
lcall
mov
dec
stos
pop
fldln2
stos
pop
ja
xor
ja
add
dec
xchg
sarl
lock
jp
je
mov
addr16
sub
dec
dec
je
insl
aam
mov
ljmp
and
cwtl
jle
std
push
jb
pop
adc
fs
pop
cmp
or
xchg
xlat
mov
push
cmp
inc
in
jge
sub
cli
std
int3
shl
testl
cmc
data16
leave
cmpsb
add
dec
test
jp,pt
xchg
xchg
vsubps
push
or
adc
adc
cwtl
xlat
mov
push
ret
dec
mov
aam
fwait
ret
jle
out
pop
dec
jle
js
js
dec
mov
pusha
outsb
ljmp
cmp
shrl
sahf
pop
mov
sar
lock
pop
scas
push
cmp
loope
xchg
test
mov
stc
shrb
lea
jmp
sub
or
inc
sarl
pop
mov
mov
or
lds
jne
in
xchg
push
cld
mov
mov
mov
xor
stos
inc
mov
dec
mov
in
cmp
sbb
gs
xchg
mov
fmuls
push
and
push
clc
notb
aad
popl
cmp
aaa
movsb
mov
jne
xchg
dec
inc
lcall
pop
nop
gs
retw
fimull
push
lods
test
mov
inc
cli
mov
sbb
in
jb
ja
daa
aas
jae
mov
fadd
sbb
mov
push
push
adc
fimuls
cmc
push
inc
jno
movsl
pushf
int
add
aas
int
adc
inc
sbb
lcall
mov
clc
pop
mov
ja
data16
xchg
aad
scas
pushf
dec
add
in
inc
dec
dec
xchg
cld
mov
mov
nop
nop
leave
xor
xchg
add
sbb
nop
aad
mov
lea
xlat
cmpb
clc
arpl
xchg
mov
and
adc
xchg
sub
pop
mov
jecxz
fxch
sub
cmp
ljmp
pop
and
stos
push
mov
mov
and
push
loopne
mov
sbb
and
scas
inc
ljmp
jmp
lret
xchg
in
leave
ret
imul
mov
xlat
and
int
or
mov
sub
and
xor
xor
cld
js
stos
mov
rol
cli
inc
mov
sbb
shll
and
cmpsl
pop
xchg
xor
xchg
sbb
xchg
loop
and
jbe
cs
xchg
add
lcall
inc
xchg
popa
std
popa
lret
cmp
dec
test
mov
push
pmulhuw
add
lods
push
pop
xor
lds
orl
pop
cmpsl
insl
int
lahf
cmp
sbb
lahf
into
test
mov
loope
mov
adc
jge
scas
dec
mov
pusha
cmp
jle
pop
arpl
clc
movsl
nop
loop
sahf
in
lcall
and
xchg
cmc
push
sbb
roll
fs
in
rcrb
pusha
sarb
mov
add
std
cmc
mov
shrb
sub
adc
dec
jecxz
ffree
roll
ss
or
inc
in
in
movsb
nop
lcall
and
jne
cmp
fs
xor
mov
imul
test
and
mov
dec
xchg
cmp
dec
daa
je
adc
xor
int
out
xor
scas
inc
addr16
in
mov
orl
arpl
divb
dec
dec
repz
sub
lods
mov
or
adc
sbb
dec
pop
out
lret
and
int3
mov
inc
iret
scas
jb
mov
push
lods
and
and
icebp
int3
xor
data16
cmp
sbb
dec
pop
xchg
cmp
out
cli
mov
lock
testl
sub
das
push
sbb
or
mov
push
movsl
call
std
aas
sahf
outsl
push
xchg
stos
mov
mov
popa
xor
aas
out
cmp
arpl
jbe
pop
stos
jno
cmp
out
add
and
out
out
push
je
enter
fwait
out
xchg
fbstp
cmp
and
stc
mov
hlt
fisubrs
push
push
push
push
mov
imul
sbb
add
jp
daa
mov
xchg
fsubl
lock
ja
and
adc
mov
push
push
mov
dec
imul
lea
pop
push
dec
sahf
add
out
push
lds
bound
mov
mov
mov
ss
in
aaa
loop
nop
push
iret
fisttps
jmp
push
and
sbb
add
loopne
add
insl
ret
dec
cmpb
xor
adc
adc
lock
mov
push
ja
lret
aas
mov
mov
cmp
dec
ljmp
shlb
adc
scas
js
mov
xchg
jl
jnp
and
mov
in
and
inc
sbb
push
fstl
jle
pusha
rcll
adcb
jle
ror
lds
pop
stc
pop
stc
and
mov
jl
and
xor
lret
jno
arpl
divl
aad
dec
pushf
dec
adc
iret
fistl
inc
outsb
mov
hlt
jge
jl
mov
cmp
leave
dec
mov
ljmp
mov
add
idivl
je
jbe
add
xor
lock
pop
jb
mov
xchg
adc
ds
jmp
sbb
nop
mov
sbb
dec
repz
mov
out
adc
imul
leave
in
out
jbe
jns
pop
mov
cmp
fst
inc
inc
mov
out
scas
push
pusha
lahf
sbb
rorb
outsl
icebp
add
fnstcw
popf
mov
pop
loop
pop
push
fcomps
daa
mov
pushf
and
sti
je
cmp
repnz
roll
mov
jb
sbb
les
dec
mov
test
rcr
jo
dec
mov
pop
adc
ss
jo
sbb
pop
adc
push
aas
and
and
adc
xor
and
and
movsl
loopne
sbb
lds
sub
inc
lea
repz
xor
or
lret
fwait
xchg
cmpsb
test
lea
add
and
in
iret
push
aam
jecxz
inc
out
sbb
ds
xchg
ja
lahf
js
outsb
pop
pop
shr
repnz
rolb
ret
push
movsb
cmc
cmp
sub
pop
sub
inc
cmp
lods
insb
shrl
pop
sub
adc
push
fsts
adc
xor
sub
inc
or
push
insb
inc
pusha
pop
test
fs
sti
fsubs
xchg
cmp
pop
mov
push
shlb
test
je
ficoml
inc
aas
mov
inc
or
jle
xor
aaa
xchg
test
fs
xchg
pop
inc
push
cmp
adc
inc
mov
push
stos
insl
mov
int
push
pop
aas
mov
fcom
mov
mov
or
mov
outsl
dec
pop
gs
dec
jp
push
scas
bound
test
lock
lahf
dec
cltd
in
nop
jnp
push
mov
mov
incb
aaa
in
dec
add
xchg
sub
mov
mov
inc
int3
pop
sub
lea
and
push
das
rclb
fcmovne
pop
shr
xor
and
sub
jmp
adc
sub
jmp
mov
or
leave
sahf
aad
add
sub
icebp
fcomps
xor
mov
fdivp
adc
dec
mov
dec
insb
in
sbb
popa
rorb
lds
sub
iret
cmc
mov
lods
lahf
mov
sbb
fistps
sub
mov
test
movsb
sti
xor
sbb
lea
jae
insb
imul
sti
stc
test
add
repnz
pop
loopne
bswap
in
sbb
mov
mov
jne
push
add
inc
or
add
inc
mov
cmp
add
sti
or
jl
cltd
dec
shll
mov
jge
pop
push
sub
or
stos
pop
push
cltd
test
into
sbb
fcom
add
mov
repnz
cmp
loope
pop
inc
lds
mov
adc
int3
jle
lret
mov
jecxz
rcl
dec
push
sbb
movb
std
add
xchg
pop
das
jg
push
int3
sub
fnstsw
pop
test
pop
push
pop
cmp
add
inc
or
push
in
pusha
test
push
insl
sarl
cmpsb
pop
adcb
push
pop
jo
xor
xchg
sub
xor
mov
pop
lods
jge
xor
lret
pushf
fwait
outsl
xchg
out
push
bound
push
in
mov
sub
xor
repnz
mov
negl
jg
fildll
iret
or
nop
inc
mov
nop
jbe
sbb
mov
xor
aam
cmpsl
sbb
sbb
fwait
mov
sbb
xor
out
test
mov
xchg
dec
imull
mov
cmp
jge
cs
xchg
inc
aad
cmp
or
pop
int
xchg
jp
push
loop
add
shrb
lcall
jae
js
js
pop
cltd
aam
mov
inc
cmp
pop
fcmovnb
ljmp
mov
cld
xor
aaa
pop
cld
push
xor
aas
pop
adc
xor
lock
xlat
sti
inc
repnz
out
andb
inc
xor
push
fiadds
and
cli
sti
aaa
cmp
rcrl
add
mov
mov
push
testb
clc
imul
orb
in
inc
dec
lods
call
mov
adc
aaa
enter
lea
dec
push
push
test
cmp
es
jo
rcll
and
mov
jge
sbb
outsb
dec
sarb
inc
adc
sahf
sbb
fxch
push
cwtl
addr16
inc
inc
lcall
addr16
push
sbb
jo
ret
pop
jbe
sub
das
sbb
dec
or
test
push
stc
add
dec
sbb
xchg
clc
test
scas
pop
test
insl
cmp
or
lock
iret
scas
inc
xchg
lret
adc
outsb
or
and
push
fnstsw
leave
cli
adc
mov
pop
pusha
sbb
int
nop
jns
and
mov
cld
sbb
xchg
shl
lret
mov
aam
scas
or
xchg
test
dec
adc
ds
ja
je
cmp
inc
imul
pop
xor
stos
mov
fwait
sub
mov
xor
fs
into
out
lods
sbb
sub
or
test
push
test
lret
out
sbb
js
mov
and
shrb
insb
add
adc
mov
fwait
dec
mov
insl
das
pop
arpl
loopne
mov
loopne
and
add
cs
dec
clc
inc
mov
loopne,pt
aaa
pop
dec
add
repnz
cmc
leave
mov
ljmp
push
add
mov
push
mov
fcoms
xchg
es
xor
in
or
sub
movsl
pop
cwtl
dec
inc
xor
jmp
jb
pusha
pushf
sarb
inc
fdivs
jo
movsb
inc
fisubrl
enter
mov
or
rorb
jg
dec
cmc
jmp
mov
mov
inc
inc
in
mov
mov
xchg
mov
or
add
jne
stos
jnp
lods
fcoms
rcrl
fcmovnbe
mov
ret
clc
pop
cmp
pop
or
outsb
cli
pop
xor
jb
cmp
nop
pop
sub
mov
mov
andl
sub
mov
mov
fidivrs
add
jp
cmp
dec
push
mov
repz
mov
adc
jne
fimuls
inc
scas
push
js
xor
and
xchg
cmp
js
lock
or
xchg
push
sub
leave
adc
sub
fs
mov
es
or
mov
push
add
jb
jb,pt
inc
sbb
and
mov
movsl
iret
lahf
mov
xor
push
xchg
pusha
adc
ss
or
cmpsb
push
push
and
out
jb
fwait
aaa
sbb
adc
sub
or
out
fldl
cmp
mov
out
jnp
cmpl
mov
sub
adc
push
xchg
mov
movsb
dec
fnsave
testb
mov
push
lret
mov
and
cmp
popf
les
xbegin
dec
adc
adc
mov
inc
or
popf
fisttpll
and
xchg
movb
push
mov
sub
jb
inc
cld
mov
add
movsb
fnstcw
pop
sub
cmpsl
sbb
dec
pop
push
fcompl
mov
xor
js
mov
data16
push
mov
adcl
xchg
scas
insb
int
lea
dec
lea
das
push
out
pop
cmpsl
mov
call
sub
aas
sbb
pop
nop
push
icebp
fdivs
ret
jns
xor
scas
and
xchg
mov
mov
xchg
xchg
inc
xchg
mov
push
cmpsl
lods
mov
inc
pop
aas
adc
outsb
ror
sbb
cmp
and
shlb
lret
test
int
outsl
push
popa
xchg
cltd
xorb
sbb
xlat
xchg
rcr
shrl
or
add
lds
xor
test
fsts
mov
out
jae
sbb
xchg
daa
aas
pop
inc
pop
mov
dec
dec
negb
push
and
dec
sbb
push
pop
pop
jnp
mov
lahf
adc
adc
jno
sub
push
mov
addr16
imul
pop
pop
imulb
ret
lcall
pop
mov
mov
xchg
dec
jecxz
add
xchg
push
out
adc
scas
sarl
iret
mov
popf
pop
in
ja,pt
mov
mov
je
jg
jb
lahf
push
xorl
scas
shrb
push
mov
push
inc
loopne
push
rcrl
fidivl
das
pop
adc
mov
jb
stos
xor
cmp
sub
pusha
dec
test
aad
adc
cmp
add
xchg
les
in
sbb
jbe
imul
sub
mov
dec
int
rcl
js
mov
sarb
mov
fsubrl
popa
xlat
lret
stc
lcall
cmp
dec
sbb
hlt
push
sub
mov
jb
test
stc
add
loopne
or
pop
mov
aad
mov
or
stc
les
push
mov
inc
fwait
sbb
cmp
xchg
ja
lret
xchg
popa
mov
push
mov
inc
aaa
sbb
insl
add
sub
jnp
fstpt
popf
arpl
xor
scas
add
jo
cwtl
pop
mov
cmpsl
sbb
pop
pop
pop
push
xchg
sub
int
inc
cmp
mov
fwait
adc
cmp
fistpl
test
idiv
cli
adc
fstpt
sbb
push
cli
dec
or
mov
clc
xchg
inc
pop
popa
std
loopne
sub
dec
mov
mov
xor
sahf
icebp
lret
and
ss
cld
mov
stos
popa
ret
cmp
pop
pop
jns
inc
mov
jno
lds
enter
adc
insl
inc
sahf
xchg
stc
add
imul
xor
and
icebp
inc
jns
sbb
movsl
fdivrl
outsb
and
shll
xorb
scas
fwait
or
out
mov
jmp
add
icebp
loopne
dec
popf
jb
rcll
or
inc
pop
push
enter
mov
jns
shll
andb
cmp
rep
loope
mov
repnz
test
adc
loope
pop
shll
shlb
ficoms
inc
cmp
stos
push
xor
bound
or
orl
mov
aam
sub
push
add
shl
and
sbb
hlt
sbb
dec
sbb
pop
or
mov
pop
fsubrl
lahf
test
stc
int3
push
adc
push
gs
adc
shll
push
lock
hlt
cli
int3
xor
call
push
jg
hlt
sub
xor
or
lcall
enter
jg
lcall
enter
in
and
mov
addb
cmpsl
push
and
push
in
mov
xchg
out
or
fsubrs
lds
movsl
push
dec
fbstp
cmp
movsl
popf
mov
jl
pop
fwait
in
test
leave
jnp
or
pushf
cs
sti
and
out
sub
lret
or
mov
sub
das
lods
inc
pop
sub
push
movsl
cmp
cmp
mov
imul
xlat
push
test
push
mov
and
es
adc
popf
movsb
lret
into
int
dec
or
sbb
je
cmp
ror
push
sub
jo
or
or
cmpsl
out
cmp
push
in
cmpsl
or
mov
mov
je
xchg
cmpsb
ja
pop
sbb
dec
cli
add
hlt
mov
sub
cmp
sets
jno
in
dec
test
jl
mov
add
adc
jae
sub
test
int3
out
and
jge
mov
cmp
pusha
rcr
or
aam
daa
aas
into
dec
mov
movaps
les
dec
mov
push
iret
adc
push
or
jmp
cmp
sbb
arpl
pop
movsb
pop
lcall
in
sub
rorb
jle
jbe
mov
adc
push
add
out
pop
movsl
jp
or
cmp
jecxz
xchg
and
sbb
or
mov
jbe
popa
or
out
sbb
push
sbb
aaa
clc
dec
iret
xchg
and
or
pop
pop
mov
lds
mov
pop
pop
cmc
jg
mov
por
push
roll
out
int
sar
sti
fstpt
xor
add
int3
or
fs
ret
outsb
xor
xorb
and
test
out
pop
xor
rcrb
dec
cld
and
and
lds
loop
stc
jnp
ss
mov
test
and
mov
cmp
movsl
jnp
xchg
int
push
mov
lret
jb
or
aas
out
push
mov
andl
stos
xchg
jbe
adc
adc
insb
cwtl
inc
jo
fs
imul
adc
or
psraw
adc
es
xor
lds
aas
mov
popl
or
test
sbb
outsb
punpckhdq
pop
push
pop
xchg
lock
mov
lcall
push
adc
scas
mov
sub
mov
dec
rol
test
or
lods
bound
mov
add
aas
shlb
pop
push
sub
popf
jl
mov
int3
ret
jbe
inc
out
shr
inc
mov
hlt
aaa
and
mov
sub
and
pusha
fcoms
popa
ja
jo
ljmp
mov
not
loope
nop
shr
mov
mov
inc
jp
xor
jp
xchg
dec
mov
mov
cmp
ret
sbb
popf
mov
cmp
rclb
sbb
mov
mov
and
adc
cmp
rolb
icebp
cmp
mov
lret
inc
out
push
or
mov
push
ds
jl
xchg
jb
cmpsb
repnz
test
popa
nop
dec
shrb
cmp
adc
mov
notb
out
outsl
cmp
ja
rcrl
push
imul
add
pop
jbe
mov
mov
jbe
out
push
clc
rol
test
pop
nop
mov
loope
xchg
sbb
lcall
test
mov
rcr
je
das
inc
adc
and
cmp
xlat
mul
mov
lea
repnz
out
in
lods
ret
add
iret
fwait
jg
out
test
pop
fs
testb
cmp
mov
mov
inc
pop
ljmp
push
push
fdivs
sbb
mov
stos
call
xchg
push
and
shll
xor
or
outsl
dec
jmp
sub
xchg
gs
jle
pop
lds
bound
mov
cmp
aaa
mov
divl
mov
and
push
aam
popf
adc
push
jo
ds
mov
in
jo
arpl
imul
push
in
push
push
jo
cmc
cmpb
add
bnd
add
fsubl
cmp
mov
cmp
mov
dec
add
mov
in
clc
popa
and
fs
cmpsb
call
sub
sbb
and
jecxz
dec
test
iret
adc
je
rcrb
lock
imul
mov
mov
cltd
ljmp
js
add
lods
pop
loopne
jb
xchg
rorb
xchg
add
fiadds
push
test
aaa
movsl
or
inc
and
sub
xor
shll
sbb
mov
ret
enter
add
inc
lret
jae
jle
aaa
mov
and
xor
cld
cmc
add
cld
push
jbe
sub
mov
test
jbe
cmp
fisubl
pop
sub
and
arpl
mov
mov
fdiv
push
xchg
pop
jns
inc
xchg
adc
gs
loope
repz
xchg
or
bound
addb
dec
inc
and
pop
pop
les
mov
push
jo
sub
sub
insl
rolb
es
mov
push
stos
out
and
xchg
test
xchg
cmc
sub
std
mov
call
iret
ljmp
mov
jge
outsb
sbb
jecxz
jnp
hlt
jbe
bound
or
dec
or
outsb
or
pusha
stos
pop
pop
pop
cmp
sbb
imulb
push
push
movsl
cmp
mov
jns
scas
mov
xchg
mov
pop
pop
xchg
pop
dec
push
int3
out
pop
es
add
ficoml
loopne
fcmovnbe
mov
insb
je
jecxz
or
lods
in
addl
cmp
and
cmp
fcoml
sbb
add
mov
ja
jnp
imul
hlt
and
sub
adc
out
push
imul
pop
adc
icebp
daa
shrl
pop
testl
xor
loop
mov
or
scas
pop
pop
xlat
and
dec
or
sbb
mov
and
scas
ss
mov
sbb
sbb
int3
pop
and
mov
mov
pop
or
sub
repnz
mov
jl
clc
cld
int
push
mov
sub
std
ret
ss
repnz
add
addb
sub
jl
jl
aas
cld
popa
out
pop
lcall
xchg
ljmp
add
cmp
jmp
lods
push
sbb
fwait
pop
test
fcoml
xor
inc
fsts
and
xor
push
sbb
sbb
pop
mov
dec
mov
xchg
fnstsw
dec
fisttpll
mov
add
bound
mov
scas
jne
mov
adc
pop
xchg
sub
inc
icebp
test
xor
rol
sub
rcll
mov
inc
fwait
enter
push
xorl
fs
ret
sti
call
jg
adc
mov
dec
into
add
add
out
inc
rolb
js
dec
or
icebp
sbb
ss
test
idivl
and
mov
imul
ret
test
cmpl
jp
ljmp
out
outsl
mov
inc
data16
fiaddl
in
xor
aas
mov
sarl
mov
mov
rcrl
movnti
rorb
xchg
mov
mov
cmc
js
cmp
xchg
stos
pop
dec
pop
inc
mov
ffreep
xchg
in
push
mov
mov
add
lods
mov
sub
push
popl
inc
fwait
test
leave
mov
jo
mov
ljmp
adc
jbe
shll
pop
push
xchg
jmp
in
mov
cmp
into
cmc
cmp
xchg
push
test
in
fs
scas
jle
loop
mov
lock
loop
add
movsb
loopne
rclb
loop
cmpsb
leave
fistps
sub
lods
jecxz
and
pop
or
sub
adc
mov
mov
mov
call
jge
es
lahf
fstpt
or
rcl
movsb
or
pop
popf
cmp
paddsb
pushf
js
nop
insw
pop
sbb
out
mov
loope
out
inc
pop
test
addb
push
sub
mov
in
test
inc
push
andb
hlt
mov
jne
arpl
pop
dec
outsl
fidivs
inc
jl
sbb
sysexit
call
mov
push
push
subb
data16
lea
insb
in
fdiv
xor
mov
mov
mov
bound
or
aaa
mov
pushf
dec
cmc
xchg
push
popf
lret
pop
add
les
pop
dec
jg
mov
jl
jb
inc
cltd
xor
or
pop
fcmovnu
dec
dec
jb
mov
jae
inc
xchg
mov
xchg
jge
xor
stos
mov
shl
mov
cmpsl
loop
pop
insl
fcompl
pop
xchg
pop
push
test
inc
pop
adc
pop
bound
arpl
scas
cmp
insb
flds
xchg
xlat
add
ds
in
lock
icebp
jbe
pop
pop
cmp
leave
add
scas
jns
cltd
xchg
loop
push
jl
rcll
test
mov
mov
dec
mov
and
inc
cmp
data16
push
stc
xor
lods
xor
in
add
es
lret
test
push
out
sub
mov
and
pop
jmp
outsl
stos
push
int
inc
je
shlb
xor
imul
aad
aam
jbe
loope
pop
pop
icebp
add
dec
enter
fidivs
out
test
dec
pop
jnp
push
pop
imul
sti
lahf
mov
jo
mov
sbb
xor
pop
jns
mov
push
lods
pop
test
pushf
leave
adc
xor
call
loope
xor
pop
sar
push
cmp
add
je
movsb
pop
xor
loope
in
adc
or
es
leave
xrelease
int
sbbl
out
add
addr16
push
adc
cmp
or
cld
sub
sarl
or
aaa
xor
rorb
ja
nop
add
pop
or
mov
loopne
in
sub
cmp
popa
outsb
notl
mov
cmc
cmp
sbb
xor
in
es
sbb
xor
pop
ss
andb
add
jmp
les
fwait
ret
in
mov
adc
adc
sbb
adc
mov
pop
cmp
mov
sbb
push
or
sub
stc
push
sub
adc
dec
cmp
jno
nop
mov
lods
xchg
or
mov
add
jl
add
push
lds
mov
lret
sbb
xchg
std
cmp
jbe
inc
daa
xor
mov
xor
push
fmuls
xor
int
div
cmpsl
cmp
sub
lahf
mov
mov
shr
mov
fdivp
push
nop
push
sub
iret
inc
sahf
in
imul
imul
push
and
lahf
mov
or
lret
push
cs
in
idiv
jb
mov
out
dec
ror
push
mov
pop
adcl
mov
ret
mov
sti
jg
pop
push
xchg
xchg
pop
adc
adc
imul
xchg
mov
inc
ja
imul
dec
and
push
clc
fsubrl
mov
mov
divb
mov
clc
lea
mov
mov
mov
mov
xor
sub
jb
fldt
mov
cmpl
cmpsb
cmc
pop
out
shll
push
xchg
inc
fwait
pop
jp
jp
xchg
loop
jne
fiaddl
pusha
add
dec
or
shrb
enter
jns
sbb
mov
rcll
ret
xchg
adc
and
ret
or
movsb
dec
xor
dec
icebp
loope
jp
xchg
push
jne
fidivs
lret
xchg
jge
jbe
mov
add
mov
sbb
test
movups
or
push
push
ret
out
push
cmp
jecxz
jns
mov
stos
iret
adc
jmp
pop
andb
cmpsl
mov
mov
adc
incb
mov
dec
push
jmp
cmpsb
lcall
adc
jbe
fdivl
or
and
sbb
or
mov
aad
xor
rcrb
xor
scas
mov
fld
ret
shl
loopne
xchg
mov
mov
cs
mov
fstpl
and
movsb
push
xor
pop
dec
cmp
xor
lods
out
adc
into
decb
add
movsb
adc
repz
add
add
movswl
ja
adc
push
pop
push
pop
mov
inc
jmp
loop
or
mov
pop
add
or
add
rclb
and
mov
inc
pop
or
jl
inc
shlb
push
jge
sarb
lahf
dec
aas
jne
jb
enter
cwtl
jnp
xor
push
and
gs
jne
and
jg
mov
xchg
lods
rcll
jo
iret
push
pop
xchg
inc
pop
lcall
mov
and
loop
mov
add
xchg
test
mov
cmpsl
sbb
test
cmp
sbb
std
cmpsl
sbb
mov
push
and
jae
dec
outsl
cwtl
push
dec
xorl
push
ret
shrl
gs
jnp
inc
in
xchg
lock
jne
dec
xchg
sti
mov
add
xlat
xchg
int
mov
dec
pop
out
push
or
sbb
test
out
cltd
fsub
or
dec
pushf
das
aad
jge
lahf
mov
les
cmpb
mov
hlt
cmpsl
push
cld
lret
push
mov
fisttpll
dec
pushf
push
inc
jg
icebp
movsl
aam
int3
jne
jl
int
mov
cmp
mov
jmp
lods
mov
clc
ja
xor
mov
cli
xchg
pop
mov
call
push
movsl
push
outsl
loopne
xchg
inc
mov
xchg
mov
in
mov
xor
xchg
movsb
mov
ret
dec
adc
bound
lahf
mov
ljmp
and
in
aaa
fstl
scas
loope
insb
test
dec
xor
jbe
pop
arpl
push
cmpsb
xchg
scas
ret
movsl
adc
dec
cwtl
mov
stos
xor
pop
movl
aaa
int
push
sub
pop
mov
inc
sbb
or
dec
arpl
mov
xor
rcl
pop
loope
cmp
adc
add
sbb
adc
stc
mov
idivl
dec
mov
inc
test
mov
aam
out
jbe
cltd
and
mov
push
cmp
and
in
mov
arpl
inc
mov
imul
aad
xor
xchg
mov
mov
mov
pop
cwtl
popa
pushf
daa
out
orl
popf
ret
lods
and
add
sub
int3
inc
enter
ljmp
daa
clc
adc
rorl
sub
adc
out
cli
add
movsl
aam
dec
icebp
pop
mov
rcl
and
outsb
ljmp
inc
cmpsb
fnsave
push
test
nop
jb
dec
cmp
push
psadbw
test
repz
xchg
ret
loop
es
lret
xor
outsb
or
jo
cmp
fiaddl
sti
jl
xchg
push
push
add
out
inc
adcl
out
xor
fists
dec
mov
cmp
int3
ret
rorb
aas
lcall
outsb
xchg
adcb
fs
pushf
adc
dec
mov
inc
lea
test
mov
mov
dec
or
xchg
es
aaa
loop
ss
repnz
sbb
jo
sarb
imul
mov
xor
jmp
push
addr16
jb
jmp
es
jl
pop
mov
mov
or
xchg
and
imul
gs
jb
xlat
out
and
xchg
es
adc
in
inc
rcll
xchg
mov
stc
mov
shrb
call
cmp
sbb
pushf
movsl
ja
add
dec
movsb
adc
out
negl
cmpsl
bound
loope
mov
les
daa
mov
dec
cli
sahf
push
sti
int
xlat
mov
sbb
inc
aad
dec
mov
fnstcw
nop
cmp
cmp
jmp
aaa
test
and
jge
adc
or
dec
adc
out
pop
sub
sub
push
adc
push
in
sarl
loope
xor
pop
imul
mov
adc
mov
into
xchg
into
adc
jae
mov
adc
fwait
dec
out
mov
pop
pushf
bound
jg
cmc
in
lock
push
mov
nop
cld
popa
adc
bound
lock
xchg
mov
sub
xchg
mov
or
adc
xor
bound
int3
dec
leave
add
mov
addb
pop
add
jl
or
lods
mov
cli
mov
adc
mov
fidivrs
inc
div
mov
pop
cmp
mov
mov
pop
dec
rcrl
shrb
pushf
add
pusha
rorl
sbb
inc
mov
cmpsl
xchg
imul
imul
popf
cmp
xor
and
adc
hlt
sub
inc
add
adc
xchg
popf
aad
mov
dec
in
sbb
mov
mov
mov
and
fisubl
lahf
adc
stc
rclb
or
mov
jmp
repnz
mov
cmc
add
mov
ljmp
mov
inc
or
mov
rorl
addb
cmp
mov
loop
pop
jmp
inc
adc
arpl
hlt
sbb
out
or
mov
imul
iret
xchg
xchg
adc
out
push
push
sbb
loop
mov
mov
xlat
int
and
fmull
shll
mov
pop
lahf
mov
dec
rcl
data16
cmp
cmp
mov
pop
pop
loopne
icebp
jo
rcrl
mov
mov
sub
xor
mov
pushf
pop
fs
pop
pop
jge
or
movsb
xchg
repz
scas
xorb
jns
mov
jbe
mov
and
adc
movsb
out
ficomps
jmp
fs
fwait
pop
xor
sarb
scas
push
sbb
js
enter
mov
inc
addr16
rol
ljmp
push
cs
push
push
jae
xor
cmp
xlat
push
dec
and
stc
cltd
test
and
insb
mov
xor
inc
rorl
inc
inc
sbb
sub
loopne
inc
mov
aad
pop
or
scas
lock
leave
repnz
mov
sbb
fildl
add
jno
aaa
lcall
dec
xchg
fldt
cmc
cmp
sbb
pop
sbb
jns
cmpsl
mov
out
jne
cmc
ss
daa
dec
pop
ljmp
xchg
daa
movsl
lods
lret
arpl
movsl
insb
icebp
mov
dec
loope
sub
test
lahf
inc
ret
icebp
data16
and
imul
shl
lods
test
sbb
add
iret
clc
mov
cwtl
jp
mov
pop
and
pusha
mov
out
mov
incl
add
cmp
cmp
scas
popf
mov
sub
xchg
in
push
ja
addr16
sub
mov
mov
mov
daa
rorl
je
negb
mov
add
push
pushf
outsb
shrb
inc
jae
ss
jecxz
or
mov
test
xlat
fsubl
adc
inc
aam
pop
mov
repz
gs
dec
xchg
rcr
xchg
dec
add
mov
mov
cmp
inc
mov
pop
lcall
repz
out
clc
arpl
sub
mov
fsubrl
mov
sbb
sti
jnp
je
shlb
jecxz
aaa
dec
lret
sub
rcrb
or
inc
xchg
dec
pop
mov
add
sbb
push
push
orb
pop
cmp
lock
repz
xor
push
xchg
xchg
mov
dec
xchg
sub
pop
ret
cmp
stos
icebp
scas
xor
out
add
ficompl
pop
roll
inc
mov
mov
mov
std
popa
dec
jne
aam
lret
ss
or
movsl
dec
push
and
mov
inc
push
sub
add
adc
inc
mov
fiaddl
xor
test
sbb
pushf
popa
pusha
or
mov
mov
jae
shlb
arpl
out
push
mov
adcl
lret
fisttpll
fs
sbb
sub
add
fnstenv
push
xor
cmp
xchg
jae
push
dec
pusha
or
jp
cmp
cmp
or
sbb
fmull
aaa
push
mov
jg
je
bound
push
dec
sahf
push
lea
shl
movsb
xchg
add
iret
inc
mov
cmp
or
push
pop
jecxz
sahf
das
repz
pusha
xchg
jne
cmp
xchg
in
push
pushf
test
xor
push
das
arpl
sbb
mov
neg
in
pop
add
push
xchg
mov
sbb
lods
mov
mov
sbb
into
dec
lahf
cmpsb
in
movsb
lret
cmp
in
rolb
mov
xchg
stos
mov
jno
dec
or
add
fidivrl
fwait
jp
jae
mov
mov
dec
mov
aam
fcmovbe
ds
popl
shlb
add
imul
fisubs
sbb
xchg
inc
psubw
add
test
in
std
push
sbb
push
sbb
fucom
xchg
loop
sbb
insl
jb
xlat
jnp
jp
mov
pop
arpl
dec
js
sub
mov
cmp
das
icebp
xchg
cmpps
cs
mov
mov
jns
sbb
pop
inc
loop
mov
or
imul
dec
movsb
or
sub
add
inc
jmp
dec
arpl
sub
mov
sbb
loopne
enter
cmp
mov
loop
bound
xchg
lcall
and
mov
popa
mov
xchg
xor
adc
shl
pop
mov
add
clc
or
in
das
les
sbb
std
add
insb
inc
es
sbb
add
pop
fcmovnu
sbb
cmp
inc
mov
mov
xorl
sub
xor
dec
mov
or
adc
or
or
cmp
xor
or
mov
idivl
push
imul
sbb
rcrl
mov
lods
inc
mov
pushf
dec
das
clc
and
popf
xlat
cmpsl
fiaddl
jns
cwtl
xchg
fdivl
cmpl
fdivrp
popa
std
ja
xor
pop
adc
shl
xchg
test
and
js
clc
jmp
mov
mov
outsb
out
sub
stos
jge
sub
repnz
or
andps
push
pop
inc
test
mov
jp
mov
push
popf
bound
in
mov
jg
stos
outsb
xchg
lcall
jge
pop
xchg
mov
sub
mov
inc
mov
sub
scas
and
ret
or
dec
mov
outsl
pop
push
add
in
fldenv
sbb
or
push
xchg
cld
xor
in
lock
mov
adc
lret
push
pop
iret
or
xor
adc
push
lods
sub
inc
mov
add
stos
shrb
dec
mov
push
out
sbb
adc
ja
testl
add
xchg
or
xchg
out
mov
insl
jbe
insl
dec
mov
mov
mov
inc
dec
out
je
pop
xchg
pop
fisubrl
mov
lods
pop
clc
iret
inc
jecxz
push
rcl
push
adcl
add
inc
pop
shlb
pop
lahf
aas
stos
enter
ret
mov
scas
lods
movsl
test
jns
cmpsl
stc
inc
and
inc
mov
sbbl
and
xchg
in
jecxz
and
mov
xchg
jb
pop
data16
js
icebp
jp
sub
iret
shlb
aas
pop
and
jg
mov
mov
ds
cmp
aas
lds
pop
fstps
push
inc
sub
mov
fs
jns
cmp
add
mov
xchg
mov
mov
test
je
test
xchg
jmp
and
xor
cs
jo
fldt
or
shlb
add
sub
mov
fistps
stos
add
icebp
inc
mov
fwait
ljmp
xchg
dec
ret
and
pop
jb
mov
sbb
push
enter
jmp
imul
inc
ret
fadds
test
sub
pushf
jo
in
mov
cs
jecxz
dec
mov
mov
das
sbb
add
push
sbb
fprem
dec
repnz
jmp
sub
lahf
inc
fisttpll
repz
out
xchg
sub
cmpsb
dec
repz
pop
out
push
inc
mov
jecxz
mov
cmp
dec
daa
cs
pop
inc
xor
jecxz
mov
pop
lcall
scas
ficoml
push
add
and
sub
xchg
sahf
push
pusha
imul
jo
dec
xchg
mov
adc
jmp
xor
aas
dec
mov
push
adc
mov
and
add
and
mov
std
cs
xchg
mov
mov
in
mov
loope
pop
rorl
push
jbe
inc
sarl
pop
popf
jl
mov
sub
fnsave
sbb
adc
fcoml
lock
and
insw
sub
lcall
add
mov
lods
imul
ljmp
inc
in
jle
dec
xchg
sbb
push
cmp
mov
xor
scas
pop
ret
daa
sub
pop
jecxz
dec
mov
sbb
cmpsl
lea
aas
jp
xor
mov
push
cs
mov
fnstenv
sarl
divl
pop
xchg
and
lret
push
imul
push
dec
popf
jbe
mov
add
fnstcw
cmc
lret
les
add
mov
cmc
mov
ret
shl
jb
clc
shl
dec
mov
repnz
mov
sahf
fs
aad
fnstenv
dec
sub
push
mov
bswap
jge
or
mov
adc
ss
pop
inc
lahf
mov
push
jge
dec
cltd
xchg
sub
sub
ja
movsl
mov
sbb
loopne
xchg
xchg
pop
adc
aad
cld
cmp
into
push
or
mov
fisttpll
insl
jne
orb
orps
sbb
jbe
and
push
cmc
jecxz
mov
push
int3
loopne
out
das
das
mov
xchg
xor
cmp
mov
mov
stc
mov
int
sbb
lock
ret
and
adc
inc
xlat
mov
jg
dec
add
outsb
sub
xchg
pop
daa
je
scas
xchg
cmpsl
xor
bound
lret
iret
pop
enter
faddl
mov
push
shl
shrl
rcl
mov
mov
or
adc
and
inc
adc
in
addr16
out
jg
xchg
repz
sahf
int
pop
or
cmp
jbe
mov
leave
mov
pusha
sbb
sarl
dec
popf
jns
call
loop
jg
jnp
push
inc
lcall
fwait
rorb
popa
fisubs
mov
test
adc
cmp
and
dec
ficoms
mov
scas
push
pusha
mov
inc
subl
push
cs
mov
ljmp
vmaxpd
mov
pop
fwait
add
outsl
pop
sahf
mov
push
and
xor
jp
test
xchg
fisubs
add
es
loope
bound
inc
mov
mov
sub
xor
insl
mov
push
push
pop
mov
fimull
les
lods
loopne
jle
fwait
push
mov
lcall
xor
popa
clc
inc
mov
mov
pusha
ds
push
push
fwait
xor
mov
orb
shll
outsl
popf
xor
cmp
or
mov
mov
ds
push
jb
cltd
test
fwait
mov
cmpsb
das
out
mov
sub
sub
es
push
scas
adc
mov
xchg
and
push
testl
jae
inc
lret
rcl
cmp
outsl
sub
inc
xor
dec
shl
dec
add
mov
rcll
jmp
cmp
sbb
or
add
inc
or
lret
filds
pop
sbb
add
sbb
aas
rclb
fisubrs
ret
cld
les
and
cmp
fisttpl
jmp
mov
cmp
das
cmp
bswap
mov
and
xor
insb
out
dec
sbb
add
repz
fisttpll
sbb
mov
stos
inc
jb
into
xchg
int
add
mov
jmp
mov
sbb
add
popf
mov
call
mov
shrb
cmc
movsl
inc
xor
outsl
sbb
shlb
mov
lahf
call
lret
fs
fnsave
sbb
pop
ficoms
aas
ret
test
and
cs
push
sub
push
mov
aad
xor
lock
scas
sbb
les
jo
ja
adc
push
dec
out
and
push
cli
sbb
mov
jmp
popf
cmp
and
stc
stos
out
cli
aam
or
inc
sbbl
icebp
dec
popf
clc
pop
xchg
fisubs
push
das
js
cltd
jae
mov
inc
mov
add
mov
imul
sub
jmp
out
das
scas
mov
nop
push
outsl
pushf
or
ja
std
pop
jmp
mov
push
int3
adc
cwtl
shr
setp
adc
pop
in
push
fidivl
loope
add
mov
mov
cwtl
dec
sub
pusha
sbb
adc
pop
xchg
dec
mov
jl
jle
mov
cltd
lods
jno
and
mov
adc
pop
mov
pop
xor
xchg
ret
sarb
pop
mov
loop
mulw
add
mov
adc
in
sahf
dec
adc
test
xchg
in
scas
mov
jo
mov
sbb
dec
adc
jnp
jp
shrb
add
stc
xchg
and
dec
sub
fwait
mov
clc
insl
inc
ret
imul
out
cmp
push
push
mov
push
pop
std
fiadds
dec
dec
mov
jae
fidivrs
lock
js
jns
push
jo
ret
inc
fcomip
std
mov
bound
stc
jmp
sub
cmp
jp
dec
xchg
pop
pushf
fisttpl
mov
es
pop
pop
xchg
sbb
cmpsl
shlb
cmp
addr16
pop
subb
call
js
ds
mov
lret
loop
data16
cwtl
inc
invd
jl
enter
in
pop
repnz
jmp
mov
out
cld
lea
das
sbb
and
out
lock
jp
rclb
shlb
sub
insb
loopne
mov
xor
pop
popf
mov
xlat
out
push
jg
mov
sbb
pop
sar
jae
dec
mov
test
jge
lock
ret
dec
and
addb
and
inc
adc
mov
sbb
insl
andb
movsl
jnp
jmp
scas
cmc
pop
popf
ds
arpl
inc
lret
into
sbb
xchg
andb
gs
jae
or
gs
push
mov
xor
mov
sbb
mov
enter
mov
add
inc
jmp
cmp
cmpb
or
sub
test
and
mov
push
mov
mov
xchg
sbb
lds
push
push
pop
pusha
push
add
insb
imul
repnz
jle
xchg
and
xchg
jnp
jb
jp
pop
mov
inc
je
fsubl
in
mov
out
push
push
jns
arpl
jnp
xor
outsb
inc
iret
les
lcall
pop
fnstcw
push
inc
shrb
sbb
xor
mov
icebp
inc
push
mov
mov
lock
mov
in
icebp
pop
sahf
push
lea
sbb
xlat
push
mov
addr16
js
xor
hlt
sbb
cmp
lret
add
sbb
sub
xor
mov
adc
jnp
in
sbb
sub
add
dec
imul
pushf
jge
sub
cltd
cmc
mov
fildll
out
lret
mov
push
mov
jo
and
clc
adc
cmp
push
hlt
ffree
mov
enter
cmp
mov
mov
cmc
pop
out
pop
bnd
xchg
push
cwtl
mov
jns
mov
or
aad
or
mov
or
loopne
clc
loop
mov
xchg
xor
je
mov
mov
repz
sbb
jle
cs
in
dec
sbb
lods
in
lds
push
inc
xlat
xor
xor
push
daa
and
inc
mov
popa
popl
cmpsl
inc
and
pop
adc
xchg
loope
push
sbb
adc
pop
orl
lock
rclb
push
dec
jmp
into
mov
rcl
adc
loop,pn
addr16
loope
adcb
mov
jno
or
lock
pop
or
xchg
inc
nop
ret
js
adc
imul
pop
or
mov
cmpsl
or
cmovl
mov
int
popf
dec
push
sbb
loopne,pt
in
sub
inc
add
fs
hlt
fmul
fbstp
ljmp
mov
and
dec
loope
roll
popf
cmp
fisttpl
xchg
adc
arpl
orb
mov
and
lret
mov
add
pop
sti
jg
mov
cs
mov
dec
ret
xchg
fmulp
lret
insb
shr
dec
lods
mov
sub
or
push
shll
in
sub
adc
mov
stos
jns
push
inc
test
xchg
inc
imul
out
repnz
out
ret
sbb
inc
rcll
sahf
cmp
or
aad
add
pusha
jmp
or
mov
sahf
cld
in
push
cmp
sub
adc
mov
mov
shll
cmp
push
dec
ret
sbb
or
jb
ret
jl
int3
mov
mov
inc
mov
adc
jnp
jb
mov
xchg
inc
in
sub
pop
pop
lea
lods
mov
add
jp
sbb
xchg
or
orb
movsb
cmpsl
sbb
loop
and
adc
mov
sti
je
addl
dec
and
and
loope
out
leave
sub
push
xor
mov
std
xor
jg
mov
stc
inc
pop
cwtl
fldl
push
ret
cli
jns
int3
sar
or
mov
inc
cmp
test
and
or
addr16
fsubs
xchg
sarb
icebp
cmp
loope
lods
pop
rol
push
push
inc
xchg
push
inc
movsb
aad
cmpsl
sti
out
xor
push
mov
cmpb
test
inc
inc
lock
sub
push
rcr
pop
add
add
cmpsb
pushf
stc
shlb
jp
fsubrl
sbb
subl
fwait
sub
fnstenv
mov
mov
ficoms
cld
js
sbb
xchg
adc
push
cmc
adcl
icebp
push
cmp
sub
dec
mov
mov
add
test
adc
jb
pop
push
rsm
push
movsb
mov
or
or
push
ficompl
push
adc
or
out
ret
bswap
in
adc
and
pop
test
cwtl
les
rorl
popf
pop
inc
inc
loope
cmc
push
sahf
dec
cli
add
andw
lock
mov
clc
jmp
scas
std
mov
xchg
xchg
xchg
xchg
imull
push
mov
pop
stc
ss
xor
movsl
rclb
jo
movsl
mov
fldcw
ss
push
jnp
test
mov
sar
jne
push
push
xor
mov
or
dec
push
mov
xchg
cli
lret
push
sbb
test
call
xor
pop
sti
mov
push
lret
push
mov
push
into
sbb
pop
add
mov
inc
movsl
xchg
cmp
mov
mov
in
push
outsl
pop
sti
xchg
pop
lret
ret
mov
out
out
dec
push
out
loopne
ljmp
pop
xor
push
cld
mov
insb
cmp
dec
iret
mov
xor
rcrl
stos
out
sub
inc
dec
mov
mov
int
cli
mov
sti
in
ds
clc
gs
aas
mov
inc
cmp
ret
pop
lock
sti
ret
xchg
insl
pop
or
cmp
and
pop
lahf
pop
repz
inc
pop
inc
test
mov
and
lock
insl
and
rclb
xchg
outsb
das
add
js
in
jae
mov
repz
lret
mov
repnz
sbb
lcall
adc
movsb
roll
dec
fsubrl
add
jae
inc
imul
add
arpl
jmp
pusha
jecxz
int
repz
or
jge
xor
inc
nop
cmp
cmp
out
sbb
test
in
push
pop
fstl
pop
mov
cmp
daa
icebp
pop
cmp
insb
jne
loopne
push
addr16
mov
mov
xchg
cmp
mov
dec
push
inc
jge
stos
cmp
mov
xor
mov
daa
mov
notb
lods
dec
and
or
sub
gs
pop
sub
lock
lock
lods
sbb
pop
adc
jmp
sub
or
push
shrl
push
or
aad
stc
test
jne
cwtl
rcrl
jge
sbb
ret
test
add
inc
ds
mov
aad
fstl
xchg
pop
in
mov
data16
data16
sahf
pop
mov
adc
mov
pop
mov
sub
ja
xchg
add
lret
and
pop
and
fwait
pop
sahf
pminsw
andb
pop
pop
mov
ds
adc
sbb
inc
jg
stos
testb
add
arpl
mov
fmuls
sbb
orl
lods
fsubs
ljmp
inc
mov
movsl
fdivl
xchg
inc
and
int3
pop
jbe
inc
cli
ds
cmp
jno
jge
pop
adcl
lock
rcll
push
data16
ljmp
stos
push
pusha
sub
dec
mov
jb
push
imul
mov
dec
cmp
dec
popl
jno
and
xor
xor
push
shll
sub
sahf
sbb
pushf
stos
sub
cmc
mov
dec
mov
cmpsl
cmp
sbb
push
pop
mov
jo
imul
jne
adc
cmp
xor
leave
push
mov
ret
movsl
pop
adc
xchg
pop
sub
jno
adc
add
lods
sbb
leave
or
arpl
or
out
mov
pop
push
and
jmp
sub
ret
xlat
and
sbb
pop
and
pusha
push
cmpsl
mov
loope
out
xchg
ret
fcmovu
mov
packsswb
iret
sahf
push
pop
sahf
lock
xchg
adcl
ljmp
pusha
pop
cmp
xor
xchg
int3
adc
mov
hlt
cmp
adc
xchg
pop
hlt
loop
mov
out
sbb
stc
test
dec
jnp
mov
xor
es
push
and
aam
call
push
and
into
incb
mov
and
pop
mov
push
cld
daa
fwait
adc
jmp
int
lret
orl
add
fidivs
mov
pusha
push
xor
mov
lret
fsubs
adc
xchg
orb
mov
push
rorl
pop
cmpsl
sbb
mov
enter
int
aas
adc
cmp
js
rorl
push
sahf
mov
mov
aad
push
stc
leave
jb
es
sbb
cmp
int
ljmp
xchg
dec
lock
and
test
daa
and
test
add
dec
cltd
dec
inc
mov
js
lea
loop
xor
filds
fdivl
mov
xor
jmp
xor
rcr
add
push
test
data16
aas
aaa
push
inc
jae
inc
fisttps
sub
pusha
leave
rolb
popf
shll
dec
es
pushf
incb
les
fwait
mov
jmp
sub
popf
std
cmp
adcb
cmpsl
mov
xchg
jno
xor
inc
mov
mov
mov
movsl
or
shll
mov
jg
data16
add
lret
rolb
shl
mov
cwtl
call
icebp
pop
addb
call
div
add
sub
test
nop
adc
pop
sahf
xor
jbe
jge
mov
pusha
sbb
ds
scas
test
fst
mov
popf
pop
cmp
and
pop
push
outsl
fisttpll
ja
cmp
cmp
mov
and
sar
xlat
in
loop
aas
mov
jp
push
dec
lret
jp
or
popa
xor
jmp
inc
push
test
mov
cmp
push
daa
jge
inc
rcrl
sbb
in
aaa
jle
or
sbb
jge
test
leave
iret
inc
fildll
push
scas
pop
mov
xor
pop
pop
cmpsb
jo
sbb
or
das
push
jle
mov
inc
arpl
rolb
pop
xor
dec
add
and
cli
pop
add
clc
loope
sbb
add
mov
xchg
push
out
aad
push
movsb
lock
jle
jno
jne
fsubrs
inc
aaa
xchg
and
dec
mov
push
xchg
fxam
loopne
sbb
cmp
repnz
jno
loop
push
inc
xchg
outsl
daa
and
sbb
mov
insl
cmc
pop
sbb
mov
xchg
das
mov
pop
mov
leave
inc
fiaddl
push
cmp
insb
loopne
test
lahf
loope
mov
insl
ret
mov
push
inc
dec
movsl
inc
xchg
sbb
xchg
pop
cmp
aam
xlat
ljmp
jecxz
xlat
mov
xchg
xchg
sub
lock
jb
aam
xchg
loopne
sti
mov
mov
lret
fcmovb
jle
mov
hlt
jne
xor
push
sbb
aaa
add
pop
jmp
cli
mov
pop
in
mov
dec
mov
xor
fcoms
push
jp
mov
mov
movsb
or
loop
mov
mov
rcrb
or
int3
inc
subl
scas
out
mov
into
call
dec
shll
xchg
jbe
stos
dec
movsb
icebp
mov
sub
clc
pop
cmpsl
insb
aam
push
popl
adcb
push
mov
xsha256
cmpsb
adc
and
outsb
mov
fs
mov
or
push
imul
mov
push
mov
mov
dec
mov
ret
out
jg
mov
adc
pop
dec
pop
dec
in
pop
movsb
movsl
push
jbe
jmp
or
test
lea
scas
shll
sbb
cmp
xchg
xor
lahf
inc
pop
push
cld
loop
sti
mov
inc
push
pop
mov
out
adc
sti
comiss
jns
sbb
icebp
test
divb
cmpsb
mov
push
in
cmpb
scas
inc
fldenv
adcb
or
hlt
movsb
dec
mov
imul
jecxz
loopne
cmp
aam
aaa
roll
dec
push
nop
popa
sbb
add
lods
movb
imul
push
cli
insl
loope
fbld
dec
xchg
push
adc
add
lcall
cwtl
lds
movb
out
push
fmuls
jne
pop
inc
sub
loope
add
popf
subb
icebp
sti
sbb
mov
pushf
dec
test
pusha
aam
lds
xrelease
shll
push
shlb
shl
fdivrs
cwtl
or
or
mov
or
lock
test
xor
sarb
mov
inc
call
xchg
push
push
xchg
add
dec
inc
fwait
in
pop
jnp
movb
or
jle
mov
in
outsb
pusha
mov
mov
mov
mov
push
pop
sahf
mov
jno
sub
in
pop
lahf
jae
outsb
fcomps
add
and
int3
lret
xchg
add
xchg
paddw
push
dec
push
test
sub
es
mov
jbe
cmp
push
pop
sub
div
sbb
test
sbb
movsl
pop
pop
jle
in
mov
mov
mov
jmp
inc
adc
or
lods
inc
mov
aas
pop
adc
fmulp
es
shll
mov
inc
lcall
mov
cltd
aas
sarl
sar
js
add
out
mov
jno
into
sbb
jae
shll
push
push
scas
push
repz
mov
mov
jg
push
mov
fldt
orl
cli
out
das
aas
outsl
dec
bound
push
cmpsl
add
mov
or
movsl
inc
pop
dec
lods
lock
mov
add
in
sub
mov
ret
loope
pop
arpl
leave
cmp
push
sahf
mov
jmp
mov
or
add
out
rolb
sub
fisttpl
jecxz
ret
mov
jg
out
out
sbb
lea
dec
mov
sub
ds
add
sub
icebp
dec
stos
mov
add
mov
mov
jae
test
in
jae
jb
test
and
xor
push
add
cmc
jle
xchg
lret
stos
push
and
ljmp
adc
cmp
lret
lea
and
rolb
adc
jns
popa
subb
dec
push
dec
xor
jno
pop
mov
dec
jmp
frstpm(287
xchg
mov
mov
addr16
aas
push
sbb
mov
mov
push
cwtl
sbb
in
mov
mov
add
nop
xchg
in
das
xchg
daa
aas
lods
xlat
rcr
ds
roll
gs
adc
cld
mov
lds
dec
daa
push
repz
mov
gs
mov
lea
jg
pop
test
movsl
les
push
mov
jmp
and
pop
pushl
in
popf
inc
pop
mov
test
repnz
cmp
call
sub
fdiv
mov
push
mov
sub
mov
lea
and
popf
xchg
pop
aam
xor
adc
and
or
sbb
lret
stos
dec
adc
jp
ss
mov
int
mov
cmpsb
mov
jmp
xchg
inc
mov
inc
movsb
fisubl
sbb
stos
sbb
xor
movsl
push
push
mov
aad
jp
adc
xor
mov
push
mov
leave
loop
fs
es
inc
mov
mov
ret
lea
cmp
aam
imul
aad
add
das
mov
dec
jle
jne
mov
rcll
lods
dec
sbb
cmp
decl
sbbb
xchg
or
mov
arpl
and
mov
dec
xchg
sub
test
imul
scas
lahf
in
mov
mov
in
stos
imul
cmp
fistps
and
dec
out
mov
push
and
addb
or
sbb
shl
cmp
sub
mov
jp
pop
call
add
nop
into
cs
xchg
jmp
mov
inc
adc
jg
inc
add
inc
std
sti
lret
test
gs
push
xchg
out
sbb
cmpl
lret
stos
test
jo
les
mov
xchg
pop
sti
pusha
cmc
fbld
lds
movb
pop
pop
adc
testl
addr16
in
jns
jg
mov
add
outsl
in
cmpsl
out
imul
popa
add
rcr
in
rorl
push
push
icebp
adc
add
cs
data16
shlb
fsubs
add
imul
lahf
out
inc
out
int3
mov
and
rcrl
jp
inc
sub
das
test
cld
stos
daa
jmp
inc
and
ljmp
inc
aam
mov
xchg
add
mov
xor
stos
shrb
pop
xor
in
jbe
loop
insl
cmc
push
rcrl
lods
imul
sbb
mov
jo
dec
push
dec
pop
or
xchg
cmpsb
jle
insl
pop
xchg
pushf
sbb
inc
xlat
xorb
xchg
scas
cwtl
dec
fisubl
adc
rcr
in
nop
cmp
pop
outsl
or
fwait
mov
iret
mov
iret
inc
sbb
adcl
fs
ret
cld
enter
add
das
ss
push
ret
xor
xchg
mov
in
xor
adc
add
addl
fwait
adc
call
push
or
add
and
cld
addr16
jp
cli
aam
fistpl
mov
mov
mov
push
jae
xchg
sub
out
int3
cli
jge
xor
push
pop
daa
sbb
xchg
es
out
adc
outsb
je
mov
pop
dec
cmpsb
jbe
testb
icebp
push
xor
pop
lds
aaa
loopne
fstps
jae
fwait
sbb
dec
mov
mov
outsl
mov
mov
ret
inc
int3
cmp
lcall
adc
mov
mov
mov
sub
in
int
test
jecxz
scas
das
mov
aas
xor
js
mov
mov
sbb
sub
lea
and
fadds
dec
mov
dec
inc
int3
xchg
rolb
test
push
pop
fstps
rcrb
pop
dec
dec
bound
stc
dec
popl
ds
in
pop
lods
sub
pusha
fldenv
lods
cmp
mov
push
mov
cltd
pop
orl
add
sbb
xor
push
and
imul
inc
cltd
xorb
out
xchg
fs
inc
dec
out
jg
ss
int
push
mov
mov
mov
push
into
shll
jl
or
and
icebp
fs
and
mov
jns
nop
cltd
and
xor
mov
jae
mov
cmp
inc
pop
jae
ljmp
es
xor
jo
mov
add
push
lcall
ljmp
add
xchg
das
ficoms
addr16
cli
sub
or
pop
fiadds
push
ret
daa
daa
insl
in
cmpsl
jge
pop
inc
cmpsb
clc
jo
fistpl
xor
cmp
movsb
stos
outsl
push
out
incl
sarb
dec
xchg
shlb
in
lcall
out
nop
jecxz
cmp
adc
fstpl
pop
sbb
pop
int3
xlat
mov
pop
mov
lods
decl
mov
push
shrb
dec
je
or
popa
dec
sub
jnp
les
in
je
sbb
cmp
adc
dec
mov
sti
je
cwtl
mov
add
adc
adc
and
cmpsb
jecxz
mov
mov
add
push
stc
ds
push
dec
add
cmp
in
xor
push
mov
loopne
jae
or
push
imull
nop
mov
mov
mov
ret
movlps
and
jo
daa
in
sbbb
sbb
xchg
ja
mov
lods
ds
data16
fcomi
clc
int
adc
inc
fs
mov
pop
mov
movsl
cmpl
in
jp
sub
stc
cld
jbe
jnp
cmpps
and
and
mov
push
add
jo
imul
out
jle
or
loope,pt
clc
stos
adc
dec
jl,pt
pop
adc
dec
mov
mov
daa
mov
jno
pop
cs
mov
dec
add
in
cltd
addb
sub
cltd
fstl
mov
and
sub
sub
cmpsb
push
mov
rcrl
and
cmp
xchg
test
fidivrs
push
dec
loopne
xchg
fdivs
dec
dec
or
xor
push
jb
and
insb
or
loope
mov
addr16
in
mov
cmpsb
jns
scas
out
push
stc
sub
les
rep
fsts
mov
mov
loopne
out
add
ja
iret
mov
lret
sbbb
inc
or
push
cld
adc
imul
sbb
popf
fstps
fisttps
iret
cwtl
dec
rorb
jae
je
mov
jmp
pusha
xor
and
leave
jmp
in
das
sbb
outsb
xchg
icebp
adc
jg
and
inc
mov
push
in
push
jmp
and
and
into
inc
in
xchg
ds
lret
adc
push
shrl
neg
dec
idiv
mov
test
mov
sub
test
cmp
and
inc
jg
pop
adc
xor
jne
stos
test
dec
adc
scas
add
jae
jns
mov
adc
out
mov
in
fwait
pushf
mov
movsl
sahf
test
mov
lock
cmpsl
or
out
xor
imul
pop
fistpll
sti
filds
bound
jl
jle
pusha
or
mov
and
xlat
imul
rcll
push
nop
xorb
pop
shr
out
jnp
push
int3
inc
mov
cmp
pop
das
jb
sahf
adc
fldenv
jmp
xchg
add
inc
andb
mov
ret
cmp
es
insb
imul
sub
add
xor
mov
jb
je
outsl
ja
mov
fldl
lds
leave
int
pop
movsl
sub
daa
sub
add
dec
mov
xchg
daa
dec
fbstp
out
gs
rcrl
shlb
sub
xchg
xor
ja
ficomps
rcrb
mov
es
andl
dec
push
daa
add
stos
jge
push
dec
repnz
push
or
pop
arpl
or
push
sti
loopne
xor
mov
pop
mov
rcrb
repnz
jns
int
test
and
inc
dec
sub
push
xor
pop
mov
mov
call
adc
push
xchg
xchg
ljmp
and
stos
cmp
push
push
movsb
fistpll
mov
lock
bound
or
xchg
fsts
test
sti
repz
mov
inc
pop
mov
mov
movsb
rorl
dec
test
jbe
sti
gs
add
stos
mov
cli
idivb
push
roll
or
push
out
push
insl
call
dec
fildll
outsb
negb
or
js
mov
sarl
test
sub
xchg
mov
mov
mov
sub
cld
mov
sbb
sub
dec
scas
fdivrs
data16
inc
jle
out
jne
sbb
or
mov
cmp
mov
std
and
push
fimuls
cmc
es
int
iret
rcr
xorl
sbbl
dec
push
loope
ret
mov
fists
mov
rorl
cmp
xchg
inc
mov
movsb
icebp
ljmp
inc
ret
add
xor
xchg
test
sti
aad
pop
jo
push
dec
sub
in
mov
cmp
sbb
mov
add
jne
dec
xchg
stos
push
jbe
imul
xor
test
cld
inc
sub
dec
mov
jp
fidivrs
call
and
cmp
repnz
jge
mov
shr
dec
fistpll
mov
ficoms
mov
fisttpll
sbb
sti
add
push
fdivrl
pop
int
ret
or
adc
xchg
mov
inc
adc
jp
jle
faddl
outsb
xchg
mov
dec
xor
ss
xchg
xchg
out
inc
mov
xor
push
ja
sub
sbb
icebp
out
mov
cmp
mov
test
daa
int3
ljmp
insl
test
cmpsl
insl
int3
mov
mov
aam
sbb
outsb
sbb
sbb
cld
push
hlt
pop
cltd
pop
es
and
popw
mov
mov
mov
sub
xor
cld
mov
fnstsw
movsb
addb
hlt
js
in
repz
mov
xchg
pop
psubusw
xchg
in
fiaddl
movsb
mov
test
gs
js
fidivs
icebp
mov
daa
aam
jns
out
stos
fldcw
les
les
cwtl
sub
jo
mov
sti
cmp
inc
aaa
jge
pop
test
fdivl
mov
cmc
xor
push
mov
andl
mov
inc
xor
and
sbb
in
adcb
nop
loop
push
jbe
popa
in
ja
and
mov
add
dec
into
aam
scas
push
add
ja
jbe
mov
mov
cmp
decb
mov
push
inc
xchg
adcl
mov
sbb
mov
sub
bound
mov
mov
cs
mov
jl
mov
sahf
push
inc
sbb
mov
xor
push
in
add
aas
adc
xorb
inc
pop
stos
mov
movsl
icebp
aad
jnp
xchg
clc
leave
jne
add
inc
ljmp
in
jne
sbb
sbb
mov
hlt
ss
push
add
or
pop
push
popa
or
xchg
arpl
cmp
call
mov
fidivrl
pop
and
jae
out
ljmp
pop
hlt
ss
cmc
pushf
adc
addr16
jecxz
sub
scas
in
mov
inc
ja,pn
sbb
or
pop
mov
pop
sbb
incb
or
jmp
cmpsl
ret
and
iret
mov
mov
pmaddwd
fs
mov
mov
adc
jb
sub
xchg
dec
adc
rcl
fidivrs
mov
push
icebp
lcall
pop
mov
adc
or
loopne
sarl
aas
stc
add
xlat
xor
ret
dec
push
push
ret
inc
std
adc
pop
loopne
pop
out
cmpsb
mov
dec
xorb
mov
fadd
add
mov
inc
push
cmpsb
sbbl
aas
test
lods
rorb
rcll
jmp
pop
inc
or
hlt
cwtl
xchg
out
and
jp
adc
jg
mov
std
jns
data16
aam
add
ds
icebp
jmp
jl
and
mov
mov
adc
repz
fists
mov
mov
mov
add
sti
fnstenv
andb
jnp
adc
pop
mov
inc
sbb
loopne
cmp
imul
pop
mov
fs
outsb
lret
in
fdivs
sub
or
fwait
push
mov
subb
mov
dec
imul
pop
rcr
repnz
push
fcoml
fsubrl
dec
jmp
push
push
inc
pop
jo
sarb
dec
dec
ficomps
and
insl
xor
or
jp
xchg
andl
jecxz
push
bound
push
addr16
stc
mov
pushf
jge
xchg
dec
and
jo
mov
adc
and
and
mov
imul
ret
jmp
test
push
sbb
ret
in
int
in
mov
dec
fs
sarb
inc
mov
xchg
xchg
xchg
pop
int
pop
pop
and
cli
dec
divb
addr16
and
insl
outsb
mov
test
and
mov
mov
mov
mov
mov
cmpsb
inc
sti
mov
cmp
faddl
inc
and
ret
lods
xor
xchg
sub
aam
or
adc
jecxz
fisttps
loope
aaa
es
adc
nop
push
rcrl
loopne
dec
loopne
and
cs
push
pop
pop
push
in
cmp
push
or
outsl
xor
xchg
fadds
xchg
int
push
mov
sub
lds
inc
popa
cmpb
in
push
xlat
dec
dec
adc
loope
dec
test
dec
cbtw
pusha
scas
dec
or
outsl
add
jg
pop
sub
scas
jg
js
inc
rorl
sar
and
arpl
fiaddl
cmpb
sub
stos
fmul
ficompl
aad
aaa
dec
lods
cmp
bound
mov
aaa
test
stc
pop
mov
fildl
push
push
mov
xlat
addr16
aaa
add
adc
arpl
push
mov
rorb
push
stos
push
lcall
pop
pusha
call
xchg
xor
popf
push
stc
jge
lret
rcrb
aaa
imul
int
adc
and
sbb
rolb
push
rcrl
enter
push
cwtl
dec
cmc
xor
pop
adc
fstpt
push
inc
repz
into
call
xchg
pop
mov
fdiv
data16
sub
bound
nop
sbb
jo
pop
dec
cmp
sub
dec
inc
mov
mov
push
xor
mov
repnz
dec
arpl
cwtl
pop
lea
or
adc
add
dec
xor
jo
stos
pop
mov
fcom
xlat
int
lock
insb
rorb
ret
mov
inc
cmpl
sbb
arpl
inc
inc
decb
js
je
add
xor
int
mov
push
jecxz
repz
in
pop
aaa
loope
dec
pushf
cmp
or
add
rcrb
or
das
adc
lock
faddl
push
je
sbb
lret
jp
and
mov
sub
jns
add
add
arpl
dec
adc
xor
hlt
add
sahf
mov
icebp
mov
or
jg
dec
pusha
stc
rcrb
mov
sub
rolb
pop
xor
mov
push
dec
and
xorl
sbb
push
jge
cmp
call
mull
cmc
pop
xchg
sti
cmc
push
push
jns
inc
aas
cmp
pop
mov
sti
mov
mov
sbb
jns
jns
out
push
xchg
sbbl
fsubs
mov
call
or
bndstx
lcall
lock
and
testb
mov
repnz
stos
stc
repz
mov
xchg
outsb
addb
cmpb
in
inc
lcall
out
inc
or
push
aad
xchg
dec
mov
mov
loope
xor
and
movsl
mov
gs
rcrb
jns
fstpt
cltd
mov
mov
int
cltd
push
xchg
add
sub
dec
cmp
sti
sub
mov
dec
and
sub
jg
or
loope
jne
out
out
or
inc
lret
leave
nop
lods
fisttpll
or
daa
or
cmp
rcl
xchg
mov
jge
jecxz
mov
cmp
or
mov
push
sbbl
popf
cmpb
repnz
vmread
loop
enter
repnz
jmp
mov
sbb
adcl
aas
cmpsl
inc
xchg
cmp
jg
mov
ret
cmpb
ljmp
cld
cmp
add
movsl
sbb
and
popa
enter
or
sub
js
cltd
pop
pusha
or
aam
cmpsl
mov
sbb
jne
cwtl
pusha
fstl
loope
outsb
or
jl
jle
test
cmpsl
push
sbb
xchg
xchg
dec
repz
ret
mov
in
out
push
cmpsl
insl
xor
into
jno
jmp
push
push
and
adcl
stc
shll
and
lret
call
xor
push
jmp
sbb
lret
xchg
push
movsl
mov
inc
scas
add
jae
cld
out
sbb
cmpsb
outsb
adc
das
inc
scas
hlt
into
cli
jbe
ja
inc
mov
adc
add
sbb
xchg
out
add
push
mov
inc
aaa
dec
fdivs
fldt
std
cmp
data16
or
sbb
fsts
notb
imul
lock
jnp
jmp
ret
sahf
in
imul
inc
cwtl
pop
cltd
and
repz
call
je
jae
xor
mov
into
gs
cmp
inc
xor
mov
inc
pslld
sub
imulb
inc
cmpsl
mov
es
pop
sbb
dec
adc
jecxz
clc
sbb
pushf
and
mov
call
inc
fwait
inc
sbbl
daa
dec
adc
or
mov
mov
clc
jp
mov
mov
xor
scas
fcomp
jl
xlat
cmp
cs
cltd
lret
adc
mov
or
jp
sbb
mov
fmul
add
popa
fisttps
cvtps2pd
lret
in
jg
movsb
mov
add
sbb
sbb
xor
movsl
les
xor
mov
lret
xor
stc
adc
dec
sbb
sbbl
cmp
push
loopne
mov
lods
jno
add
fisubs
push
push
mov
rorl
xchg
data16
fstl
jge
mov
sahf
arpl
cli
jbe
push
mov
push
mov
shrl
movsl
or
mov
lods
in
jl
or
dec
xor
lock
inc
sub
add
xor
cmc
dec
cmp
mov
jne
rcrb
sbb
sbb
jbe
mov
mov
xlat
add
aas
sbbb
stos
inc
mov
icebp
popf
popa
outsb
dec
bswap
jp
jle
jne
cmp
in
lret
fsubl
mov
test
test
popa
mov
out
js
xor
cli
dec
outsb
into
push
aad
and
sbb
mov
rorl
call
iret
outsl
loopne
lds
pop
hlt
mov
ja
rolb
jmp
push
or
insl
dec
push
mov
or
enter
mov
sbb
ficompl
jecxz
es
iret
and
dec
mov
sbb
loope
inc
mov
add
dec
mov
pop
mov
enter
xor
jmp
mov
test
inc
repnz
push
xor
orb
in
movsl
sub
adc
pop
aaa
out
inc
pop
addr16
js
push
aaa
rcrl
iret
push
lret
frstor
push
xor
add
mov
inc
sbb
iret
rclb
cmp
mov
push
out
mov
pop
dec
sub
test
sub
push
inc
or
adc
shlb
adc
call
inc
ficoms
in
call
pop
insl
mov
jae
ja
stos
cwtl
dec
movntps
rorb
aam
add
nop
inc
aas
xchg
pop
ss
stc
lods
xchg
dec
lcall
stos
loop
int3
outsl
xchg
inc
insb
sbb
cmc
push
xchg
in
jae
iret
lret
jne
test
int
scas
dec
leave
xchg
dec
in
pop
mov
adc
inc
and
push
mov
in
or
or
ljmp
mov
mov
sbb
xlat
ret
mov
pop
dec
xlat
adc
popf
arpl
jl
mov
add
sub
lcall
push
push
cmp
cli
je
push
test
rorl
bound
aam
jle
add
hlt
fsts
push
jge
inc
xchg
test
xlat
push
and
or
jmp
fcoml
nop
push
xor
sti
lea
insl
mov
movsl
xchg
ficomps
in
cmp
mov
pop
lahf
aam
sbbb
out
or
or
into
ljmp
cmc
cmc
pop
xchg
xor
mov
shr
out
fldl
xor
cli
cmpsl
cmp
out
xor
or
rcll
inc
cwtl
and
pop
getsec
fcompl
push
push
pop
arpl
scas
mov
test
xor
sbb
adc
pop
adc
call
sub
out
cld
xor
test
imul
xor
sti
jno
into
in
fnstenv
mov
insb
and
push
dec
jns
in
cmp
jg
pop
push
pop
lods
stc
movsb
jnp
divl
push
add
dec
mov
dec
or
pop
lret
pop
ds
icebp
imul
dec
je
jno
out
cmp
sbbb
test
in
mov
sbb
lods
popf
cmpsl
xor
xor
and
stc
xchg
add
and
enter
pop
jge
mov
xorb
js
mov
shrl
inc
jns
scas
imul
and
sub
movsl
or
mov
sbb
inc
or
fldenv
mov
sahf
jle
addb
cmp
arpl
and
pusha
xchg
popf
cwtl
cld
leave
add
sub
mov
pop
mov
mov
pushf
dec
push
popw
mov
mov
mov
stc
dec
sbb
popa
rolb
pop
jno
adc
push
sub
outsb
jno
push
sbb
js
xchg
test
pushf
scas
mov
xlat
aaa
push
ljmp
push
xor
scas
orl
fwait
out
jbe
mov
cwtl
lret
filds
dec
mov
lret
inc
out
sub
mov
xor
int
jb
push
in
rcr
dec
sbb
ljmp
mov
mov
mov
call
fcoms
mov
data16
pop
insb
nop
lahf
insb
fstpl
in
out
insb
out
rcr
setns
mov
lods
mov
inc
mov
inc
fs
aam
leave
adc
jb
je
xchg
shlb
pop
jmp
mov
imul
les
stos
cmp
xchg
cmp
add
pop
push
addr16
lret
jecxz
stos
das
sbb
xor
or
pop
addl
test
pop
mov
add
out
push
dec
lahf
adc
lock
sub
dec
dec
inc
xchg
rcr
lret
cmpsb
xchg
push
popa
xchg
and
jb
jl
leave
jmp
mov
filds
fistpl
sbb
xor
sbb
mov
fwait
sar
rcrb
in
in
lds
les
clc
sub
fwait
mov
shlb
jmp
in
cli
imul
in
mov
or
pop
arpl
jbe
aas
fsqrt
mov
adc
iret
push
stc
pop
push
fistl
jmp
fldt
pop
jle
xchg
dec
roll
in
xchg
lret
mov
sub
add
sbb
dec
adcb
cs
pop
jno
adc
pushl
je
xchg
inc
jns
testb
xor
push
xchg
jns
pop
push
mov
xchg
fnsave
jbe
dec
jmp
scas
aam
movsl
or
and
hlt
sahf
andb
daa
movsl
out
sbb
pop
jle,pn
mov
cli
jmp
mov
jne
xlat
jns
add
aam
sbb
push
pop
pop
fs
cld
mov
mov
call
adc
lods
cmp
flds
sbb
js
aaa
dec
scas
fwait
mov
or
data16
or
jp
gs
sub
mov
in
insl
and
xchg
shrl
outsl
mov
clc
movsb
jno
xor
clc
int3
popf
call
mov
pop
jmp
pop
shlb
js
dec
push
aas
inc
adc
in
out
je
or
mov
aas
pusha
into
sti
xchg
movsl
lods
rolb
and
loop
cwtl
getsec
popa
pop
or
add
xchg
outsl
inc
and
fcomi
movsl
push
pusha
call
aad
inc
ret
cmp
aam
lods
mov
sbb
icebp
xchg
jg
cltd
mov
and
lea
mov
test
push
jmp
and
repnz
je
ficompl
mov
mov
test
sub
subl
les
testl
pop
nop
adc
outsb
ss
outsb
repz
outsb
or
arpl
lahf
pop
fistpl
mov
jle
cmp
mov
inc
ja
inc
adc
or
xchg
hlt
ja
xchg
lahf
out
enter
cmp
mov
mov
stos
cmc
scas
xchg
xchg
jo
xor
xor
and
pushf
mov
sbb
fstpl
add
rcll
mov
push
push
mov
adc
shr
in
jl
mov
testl
mov
js
sub
inc
jp
cmp
insl
int3
out
mov
pop
inc
inc
jno
and
cs
aas
cmp
icebp
fisubs
mov
movsl
pop
jbe
notl
mov
sbb
andb
push
loope
ss
sub
dec
mov
xchg
bound
testl
fcmovbe
pop
cmp
enter
testl
imul
xor
ds
lcall
or
das
ljmp
sarl
jae
pop
cli
fnsave
sub
test
aas
incb
pop
rorl
pushf
mov
cmp
push
sub
ja
sub
adc
mov
add
sbb
ss
out
fdivp
pop
pop
into
ss
lret
mov
aad
xchg
jmp
adc
jno
fdivrl
fs
repz
jb
scas
fwait
and
mov
add
sub
lods
adc
ds
sbb
cs
insl
mov
mov
dec
orl
cld
ret
stc
cmpsb
jle
fidivs
inc
mov
loop
jbe
push
cmp
pop
adc
subl
stos
cmp
pop
jle
cli
into
jge
lcall
mov
sahf
popf
lret
repz
sub
push
enter
sub
mov
sahf
into
movsb
popf
aam
xor
xchg
or
xor
jbe
pop
pushf
ret
and
rorl
add
stc
sub
jbe
push
hlt
inc
cmp
loopne
inc
shlb
mov
rcll
cmpsl
out
jbe
repnz
xchg
adc
pop
cmp
mov
int3
add
jle
xor
jae
sub
pop
repnz
and
jnp
cmc
cltd
loopne
in
lret
dec
jo
adc
and
mov
movsb
clc
imul
adc
add
clc
shlb
cmp
fcoms
pop
cmpsl
dec
pop
cltd
mov
and
into
push
push
push
mov
jnp
sbb
fnsave
je
stc
fadd
push
notl
icebp
cltd
sbb
add
dec
out
call
mov
sbb
push
xlat
mov
jns
and
or
sub
cmpsb
repnz
leave
or
xor
sbb
cmpsl
jle
imul
jnp
xor
fstl
fldl
mov
pop
xor
ds
shlb
into
in
inc
flds
daa
decb
lds
test
loope
inc
pop
jbe
push
imul
inc
xchg
adc
xor
add
pop
faddl
loop
stc
addl
imul
icebp
nop
inc
xor
hlt
rclb
rcl
enter
inc
repz
lods
cmp
fisttpll
lea
rcrl
mov
inc
mov
sahf
repz
aaa
cmpsl
push
cltd
mov
out
mov
mov
test
pop
mov
jae
sbb
out
aam
sub
pop
inc
loope
or
fidivs
sub
nop
jmp
fld
pop
mov
cld
out
dec
jo
cmp
sahf
outsl
out
loope
push
cmc
inc
ja
and
into
add
inc
dec
lock
mov
inc
jle
cmpl
fistpll
sbb
mov
pop
pop
cld
addr16
push
sarb
clc
ljmp
dec
dec
cmpsb
xor
push
lcall
les
mov
adc
xchg
mov
dec
ss
stc
mov
sub
adc
mov
cli
ds
inc
dec
xchg
cmp
rclb
orb
testl
aaa
inc
jmp
test
mov
or
jno
xchg
adc
mov
push
dec
ret
mov
mov
mov
jg
das
pusha
andl
clc
dec
cli
jae
pop
lret
mov
dec
dec
imul
leave
jmp
adc
inc
or
push
adcl
adc
sub
xlat
test
scas
cmp
push
daa
inc
cmc
insl
dec
shrl
or
xchg
pop
int3
or
or
mov
inc
fldl
cmp
sub
adc
xchg
out
jne
shll
xor
out
xlat
push
adc
inc
add
insb
test
sub
adc
and
cli
and
pop
pop
sbb
jmp
dec
inc
add
push
lahf
out
std
loopne
pop
pop
push
xchg
xchg
mov
addr16
sub
adc
mov
mov
push
sub
out
xchg
sub
rorl
mov
inc
adc
dec
not
sbb
movsb
or
outsb
or
stos
pop
test
inc
lock
cmp
mov
pop
and
xor
fdivrs
sbb
push
mov
xchg
hlt
mov
scas
gs
jbe
hlt
mov
shll
mov
mov
fcmovnu
bound
hlt
cwtl
mov
lret
imul
cli
add
call
std
das
mov
jge
inc
cmp
ja
rcrl
ds
mov
push
jl
xchg
ljmp
mov
pop
imul
pop
or
fs
pop
ss
test
mov
pop
sbb
rorb
push
sub
ja
loopne
je
xor
les
push
xchg
mov
pop
pop
add
xor
xor
lret
sub
les
mov
loopne
lods
out
enter
dec
add
mov
jl
push
daa
pop
pop
inc
jmp
xor
mov
inc
or
fdivrl
push
sti
mov
mov
push
jns
pop
jmp
xchg
mov
pusha
mov
or
cmp
sti
cmpsl
out
mov
das
leave
xchg
sbb
pusha
jge
mov
out
adc
dec
mov
xchg
dec
mov
mov
xor
inc
mov
cltd
push
stos
leave
fisttpl
sub
cmp
ja
fldl
js
xor
and
jno
sbb
push
scas
cmp
mov
and
ljmp
add
push
jnp
mov
lods
shlb
sbb
push
jmp
inc
cmp
fimull
jmp
sbb
mov
stos
in
js
or
in
jnp
or
insl
add
adc
jne
ds
js
pop
jp
jne
insb
cltd
nop
shrl
xchg
in
adc
jg
lret
iret
lods
push
lock
fxch
outsl
bound
loop
and
jg
outsb
sbb
jl
ret
push
dec
cmp
fcmovnb
cli
push
fwait
test
mov
and
cld
cmpb
test
xchg
call
xchg
fldl
push
imul
xchg
dec
mov
sbb
test
xor
inc
adc
xchg
cmp
jb
cmp
dec
jmp
adc
cltd
aaa
aas
in
frstpm(287
add
es
pop
and
int3
sbb
loop
sub
pop
push
rcr
mov
cmp
lods
jnp
xorb
adc
cld
mov
sbb
stos
xchg
add
nop
test
js
xchg
out
pop
rcl
gs
std
xor
sbb
sti
mov
mov
xchg
pop
xor
pop
shl
out
mov
fnstsw
mov
stc
int
jmp
movsl
cld
mov
insb
inc
inc
add
mov
das
lret
adc
mov
pop
jl
pop
icebp
aaa
add
es
mov
addb
pop
pop
les
je
jle
inc
pop
bswap
jns
stos
pushf
mov
jae
lock
mov
inc
xchg
outsl
rolb
mov
shlb
jp
aam
lret
ja
ja
cmpsb
push
push
xchg
mov
shl
or
clc
adc
mov
cmpsb
nop
push
cmp
mov
out
divl
inc
push
cmc
add
xor
das
jge
mov
push
pop
cmpsl
adc
and
lds
jns
aad
inc
scas
push
inc
mov
cmpb
icebp
adc
mov
push
mov
mov
jnp
enter
fxch
lock
lcall
inc
add
call
mov
mov
lcall
mov
cmp
loope
cmp
aas
loopne
xor
pushf
pop
test
pop
and
repnz
mov
adc
imul
push
dec
mov
xchg
xchg
xchg
or
fstpl
addr16
fwait
push
ret
ljmp
add
aas
push
in
mov
push
jle
push
std
das
movsl
add
or
lock
pusha
sbb
lret
adc
pop
add
iret
lret
fs
fdivrs
xor
xchg
and
subl
test
sets
in
push
add
mov
mov
add
jge,pn
loop
push
and
push
enter
mov
mov
adcl
outsl
and
xchg
jmp
pop
shl
arpl
dec
cmp
int3
jmp
and
sbb
add
jle
and
push
or
out
ficomps
jno
or
gs
stc
cmp
jmp
pop
rcr
sub
icebp
movsb
fnstcw
les
jne
fs
xor
out
inc
xchg
jge
stos
cmp
jno
sbb
jno
movsb
dec
popf
fiadds
mov
sahf
pop
add
mov
shlb
jl
jo
cmp
jne
lock
enter
popf
test
imul
lret
or
lock
push
lods
or
imul
outsb
mov
divl
ja
cmp
aas
jno
mov
inc
inc
sbb
jae
jnp
mov
or
scas
mov
push
jmp
and
outsl
push
xor
adc
popa
into
dec
cmc
or
add
pop
and
xchg
add
bnd
movsb
mov
push
mov
jg
aad
pop
in
in
xchg
enter
xor
leave
cmpsl
daa
cmp
call
aas
add
dec
sbbb
arpl
sub
mov
or
inc
gs
into
pop
bound
xchg
cmp
jne
lret
cmp
ret
adc
adc
scas
push
xchg
cltd
subb
inc
sub
das
mov
lock
jp
data16
push
push
ljmp
js
dec
mov
mov
rcl
cld
jb
or
insb
inc
or
cmpsl
push
icebp
adc
adc
xor
imul
adc
mov
cs
popa
sub
sub
mov
shl
ja
fwait
push
xchg
jecxz
jae
lods
xchg
and
inc
cld
ss
loop
cmp
stos
les
mov
mov
in
sbb
adc
jle
dec
test
lret
dec
lds
ljmp
bound
push
cmp
add
jl
stos
inc
jns
and
popa
jmp
loope
stos
and
je
jle
add
mov
jb
sub
test
mov
or
lahf
in
aaa
mov
movntq
sbb
cwtl
xchg
fs
adc
dec
mov
pusha
stos
xchg
push
popa
mov
adc
sub
insl
mov
inc
movsl
pop
add
call
aad
outsl
pop
add
rorl
orl
mulb
ja
or
stos
sub
sbbl
sbb
std
pop
fdecstp
cmp
fisubrl
ss
movsb
stos
push
xchg
sbb
fsubrl
or
dec
fiadds
pop
adc
cmp
mov
lea
scas
enter
pushf
sahf
test
pusha
or
movsb
ja
fwait
loopne
mov
out
insb
test
clc
mov
or
popf
push
int
mov
mov
add
mov
push
mov
lods
test
fsubl
mov
push
push
sub
mov
xor
pop
cmp
jno
jmp
xchg
dec
test
mov
fsubs
je
sbb
sahf
mov
movsb
jmp
sub
mov
shlb
test
loopne
shrl
jl
neg
lock
add
subb
mov
outsb
mov
add
mov
or
mov
push
adc
push
js
mov
xor
mov
lock
or
adc
jp
insb
rorb
mov
push
ss
incb
cs
gs
pop
fldcw
cltd
sub
xchg
jp
repz
stos
sbb
mov
or
xor
call
dec
sbb
jl
adcl
mov
inc
inc
sahf
mov
push
pop
sbb
jb
out
aam
loope
fadd
cld
sub
popf
sub
jnp
call
lock
imul
adc
ss
mov
fadds
sub
mov
mov
mov
mov
mov
mov
dec
cwtl
popf
dec
xor
icebp
or
out
push
ds
out
push
push
or
and
mov
in
or
pop
push
lret
mov
popa
sbb
cmp
mov
imul
test
and
mov
sbb
inc
add
pop
pop
xchg
in
lock
mov
xlat
scas
outsl
push
xor
in
add
and
adc
inc
fnstsw
xchg
movsl
out
xor
mov
in
mull
aam
mov
mov
aas
add
inc
inc
mov
cmc
daa
and
test
jp
adc
xor
fidivrs
and
xchg
pop
add
icebp
je
imul
pop
daa
mov
mov
scas
dec
lds
sbbl
sub
jmp
push
in
and
lods
push
sbb
mov
test
lahf
jcxz
cmc
sub
jb
xchg
loope
stos
movb
rcrb
mov
add
out
jno
inc
or
and
push
add
cmp
pop
movsl
fsubrs
clc
inc
fstpt
xor
jg
pusha
push
and
sahf
adc
adc
dec
cld
ret
and
pop
pop
cld
fisttpll
xor
adc
cld
cld
cmpsb
push
and
int
fistps
jno
xchg
hlt
shlb
mov
xchg
sti
dec
in
fmull
inc
sub
out
inc
retw
mov
xchg
mov
mov
sub
jo
decl
sub
mov
mov
xchg
jo
scas
or
sbb
mov
cltd
fisttpl
repz
add
ret
jmp
outsl
xor
mov
clc
jge
gs
adc
rcl
fnstsw
pop
sbb
or
adc
test
adc
lds
cltd
subl
and
and
in
xchg
mov
mov
jg
iret
xlat
pushf
loope
jno
mov
cmp
jns
int3
fiaddl
mov
sbb
pop
push
cwtl
loopne
mov
ficoms
adc
push
jp
popa
pop
mov
repnz
pop
in
aad
out
lcall
fdivrs
ficompl
pop
dec
adc
pop
mov
inc
xchg
mov
nop
inc
xchg
lea
inc
cmp
out
cld
ret
insb
les
icebp
sbb
bound
movsb
sbb
rcrl
pushf
mov
or
jmp
or
push
xor
loop
mov
loope
cwtl
fcmovnbe
cld
sbb
pop
lret
loopne
or
mov
mov
inc
repnz
outsl
add
sub
add
popa
rclb
movsb
cmp
cs
ret
dec
imul
push
loope
daa
jb
pop
dec
loop
in
and
jno
add
insl
movsl
or
adc
adc
mov
mov
subb
xor
cmpl
xlat
add
or
mov
xchg
mov
add
pop
fcoms
cmp
ja
mov
sbb
cmp
pushf
pop
cmp
movsl
push
pop
push
fcomip
xchg
sahf
xchg
mov
mov
jl
test
dec
adcl
inc
pop
inc
mov
jp
xchg
mov
sub
sar
add
xor
push
inc
fdivs
out
stos
sbb
in
cmp
xlat
cmpsl
jnp
push
mov
loope
xchg
inc
and
sub
cmp
ljmp
push
xor
push
loopne
int
jno,pt
push
add
in
push
jbe
push
ds
cmp
hlt
inc
repnz
call
into
xor
pop
mov
dec
push
push
inc
orb
lret
mov
mov
mov
mov
add
jbe
xchg
in
shll
xor
cs
lock
pop
mov
fs
jb
xchg
push
test
add
pop
out
adc
aad
fisttpl
fnstsw
or
and
dec
lret
addr16
cmp
sub
pop
xchg
outsl
xor
pop
and
mov
mov
jge
adc
icebp
mov
mov
adc
sbb
sbb
xchg
pop
add
lret
stos
xor
dec
aad
dec
pop
out
jbe
iret
mov
and
and
out
jmp
mov
dec
fsts
or
xor
cmp
ret
cld
adc
ja
add
adc
mov
int
notb
repnz
fwait
xchg
testl
dec
loope
or
icebp
mov
xchg
push
xor
dec
repz
insl
pop
enter
mov
adc
add
dec
xchg
int3
jmp
loope
sbb
jl
push
jbe
cmpsl
inc
pushf
jg
jo
enter
jns
adc
cmp
ss
jne
arpl
lcall
or
call
jbe
stos
lds
sbb
xor
mov
push
inc
jge
push
add
outsb
add
and
mov
pop
in
sub
xchg
out
lcall
test
jb
mov
or
es
pop
out
outsb
dec
cwtl
jecxz
arpl
cmp
sbb
loop
pop
push
dec
mov
push
lods
jo
sahf
aad
pushf
and
mov
iret
pop
xchg
incb
insb
test
shrb
ret
and
psrad
in
xor
std
test
xor
adc
inc
dec
popa
mov
stos
sbb
xor
inc
int3
inc
push
into
adc
jge
cmpsb
daa
ret
into
and
mov
fidivrl
inc
pop
pop
mov
ja
repz
lret
mov
sub
sub
mov
arpl
pop
fsubl
lods
and
sub
mov
jno
xchg
lret
mov
stos
mov
mov
push
sub
mov
std
sub
popa
ljmp
iret
bnd
push
xor
pusha
push
xor
dec
imull
sarb
pop
divb
lock
ja
loopne
pop
cmc
cld
mov
clc
outsb
add
pop
das
dec
stc
xchg
mulb
mov
mov
sahf
push
cltd
pop
rcrb
fucomi
add
test
enter
icebp
test
faddl
shrl
mov
dec
scas
xchg
push
and
insb
jns
sbb
insl
and
repz
mov
std
pop
xchg
sub
dec
or
xchg
add
lods
icebp
cmp
inc
fucomi
lods
xchg
out
cmp
jg
and
enter
dec
mov
or
mov
cwtl
push
sbb
pop
pop
cli
arpl
jne
sub
push
jp
mulb
loope
adc
inc
int3
sub
jmp
push
js
imul
cmp
rol
cmp
xchg
or
dec
mov
xchg
mov
movsb
cmpsb
jno
or
sar
nop
or
ss
jmp
mov
mov
mov
aas
push
push
xor
or
pop
xchg
add
lret
jecxz
push
jmp
cs
scas
xor
fs
and
jmp
shl
dec
push
enter
fstl
test
mov
cmovbe
mov
dec
and
or
test
addr16
fisubl
inc
dec
insl
lret
rorb
inc
adc
and
pushf
mov
imul
repnz
std
jl
cmpsb
dec
jecxz
pop
ljmp
dec
pop
cmp
mov
loopne
push
clc
inc
add
pusha
hlt
push
lea
andl
test
mov
cmpsb
add
stos
jae
cld
imul
loopne
add
bound
and
inc
subl
lods
push
int
adc
dec
data16
cld
cmpsl
xor
dec
xchg
loopne
iret
cltd
mov
mov
cmp
les
pop
stc
mov
movsl
data16
pop
data16
in
mov
sbb
and
sbb
pop
xor
xor
push
int
inc
and
xor
inc
sbb
mov
int
push
xchg
pusha
mov
mov
rcr
and
outsl
test
pusha
insl
outsb
out
mov
dec
in
stc
dec
outsl
repz
loope
gs
add
stos
fidivl
shll
xor
scas
xchg
adc
dec
ret
mov
daa
adc
shll
sbb
or
clc
jl
mov
jmp
ficoml
ds
mov
inc
and
fcomip
jne
dec
hlt
and
xchg
jnp
and
xchg
xor
push
out
dec
inc
aam
stos
mov
mov
lods
adc
je
fstps
mov
pop
and
aas
fnstcw
pushf
add
jmp
mov
xchg
clc
clc
mov
xchg
mov
loope,pn
outsb
xor
mov
cmp
mov
aas
shrl
mov
ds
dec
sbb
addl
rcrb
cmp
es
aad
mov
jb
clc
mov
ljmp
sub
enter
xlat
and
mov
stc
pusha
xchg
ror
pmullw
push
lds
cmp
and
aas
jg
faddl
sarl
pop
xor
cld
iret
bound
bnd
jge
jp
xchg
add
les
xor
push
push
jne
lock
lods
jno
movsl
adc
adc
in
dec
les
aam
pop
leave
fsubrs
sahf
imul
jbe
inc
jb
outsb
cmp
pop
dec
sahf
pop
daa
jo
inc
sti
lcall
outsb
insl
dec
xchg
dec
in
or
push
jnp
jecxz
cld
repnz
xorb
scas
in
stos
xor
js
jmp
in
adc
pop
into
in
cmp
cmp
gs
cmp
imulb
out
dec
mov
jae
inc
cmp
dec
fistl
ret
mov
movsl
outsb
fs
adc
aaa
mov
xor
ficoms
scas
pop
ret
xchg
mov
pop
outsl
rcrl
les
jb
fldcw
mov
out
scas
cmpsl
test
fdivp
pop
or
push
xchg
orl
inc
call
lea
xor
sbb
add
fnstenv
pop
hlt
fwait
andb
stos
pop
call
xchg
cli
pop
int3
jl
sti
js
icebp
gs
inc
mov
fs
arpl
adc
popa
je
imul
ret
fwait
add
mov
xchg
push
insl
icebp
mov
ss
xchg
and
inc
nop
mov
jb
jo
out
and
xor
and
dec
xor
or
in
loop
clc
and
push
jns
pop
movsl
test
push
incb
jb
mov
adc
repnz
add
nop
add
aam
sbb
cmpl
jo,pn
mov
jae
inc
add
and
sub
or
movsb
jb
arpl
es
mov
push
mov
and
and
sbb
cs
test
pop
jbe
mov
pop
adc
push
cmp
add
xor
fisttpl
lea
scas
mov
dec
pop
jle
ja
arpl
mov
test
popa
xchg
jecxz
adc
les
jns
jp
or
cmp
mov
push
fstpl
outsb
cmp
and
xlat
loope
loopne
addb
stos
pop
jl
mov
jno
fwait
hlt
shrl
cld
cmp
jae
pop
outsl
sub
inc
sahf
hlt
xchg
repz
mov
inc
or
gs
cmp
popf
cmp
inc
in
jae
push
cltd
add
cs
xchg
test
daa
cmp
pop
cld
jbe
lcall
sahf
push
iret
lret
fnstenv
bound
xchg
mov
je
call
push
ljmp
push
fwait
aad
cmp
pusha
push
cwtl
cmpsb
stos
xchg
and
aaa
mov
scas
pop
mov
jle
insb
dec
cmp
mov
ds
inc
jno
lahf
dec
inc
enter
sub
in
jl
sti
jmp
enter
lret
mov
hlt
jb
inc
cmp
repz
iret
xchg
push
lret
out
lock
cmp
das
fxam
inc
xchg
adcl
pusha
jge
add
jmp
les
mov
lcall
hlt
push
cltd
js
fcoms
aaa
mov
and
jbe
or
daa
xor
mov
xor
shlb
fstpl
xchg
std
mov
mov
pop
mov
inc
out
lahf
jmp
jl
pop
arpl
xchg
and
inc
sbb
and
pop
lock
jo
outsl
inc
lods
xchg
push
xchg
xor
andl
fndisi(8087
aad
pushl
test
or
ja
pop
outsl
test
pop
clc
jecxz
pop
and
mov
cwtl
jecxz
jnp
ja
add
push
push
adc
mov
fwait
iret
jl
rcr
popa
and
flds
clc
mov
cmp
mov
cmp
outsb
push
test
scas
popa
arpl
fbld
xchg
add
or
xchg
test
mov
mov
test
data16
jns
dec
std
push
out
fmull
jbe
jl
aam
jg
or
outsl
push
movsb
test
lods
xor
sub
ss
wbinvd
imul
lar
iret
jbe
cmpsb
pop
push
xchg
inc
and
or
cmp
sub
push
jae
mov
mov
lods
sub
inc
add
dec
scas
jb
cmp
ljmp
xchg
sti
sub
fwait
mov
shlb
add
push
jae
mov
adc
mov
das
rcrb
inc
shll
xor
add
popa
pushl
mov
popf
xchg
negb
daa
xchg
flds
dec
imul
xchg
push
icebp
movsb
xlat
add
xchg
mov
outsl
fdivrs
clc
movsl
aad
sbb
stos
jl
pop
movl
pop
add
sahf
jmp
inc
rcll
mov
or
or
xchg
pop
push
add
mov
sbb
cmc
add
outsl
cmp
or
pop
sub
filds
mov
mov
fsqrt
dec
fistps
jbe
cld
imull
cmpsb
or
sar
sub
popf
xchg
fsub
xchg
call
mov
loop
xchg
std
xor
mov
dec
fs
sbb
add
aam
lods
or
jnp
subb
pop
push
dec
call
orb
out
jecxz
mov
int3
shr
push
movsl
bswap
cmp
les
cs
or
movsl
cli
cwtl
icebp
push
sbb
add
notb
xchg
sarl
fucomp
or
rolb
in
in
inc
sub
fiaddl
mov
mov
push
pop
popf
notb
mov
or
popl
or
mov
mov
jmp
xor
in
lock
imul
sbb
lcall
push
or
inc
in
cmp
flds
cmc
lods
sbb
jl
mov
in
jmp
dec
loopne
test
add
test
add
xor
fwait
sbb
sub
aad
in
push
push
std
cmc
sbb
add
imul
xchg
xchg
inc
int
ret
inc
inc
xor
pop
pop
xor
fndisi(8087
mov
or
and
cmp
sarl
xor
xor
mov
rcl
xchg
dec
cmpb
bound
mov
ja
enter
icebp
mov
mov
xor
or
cmp
push
and
lds
fisttpl
sbb
lock
stc
daa
dec
sbb
jg
push
inc
push
and
xor
daa
push
cmp
jns
out
lds
jne
jmp
scas
shrb
mov
sbbb
insl
fsubl
insb
sub
xlat
movsl
cmpsl
data16
fwait
lret
add
xor
mov
cmp
mov
sub
aad
ljmp
lret
lcall
aas
js
dec
aas
mov
fsubrs
mov
jge
mov
loop
std
call
movsl
xor
aas
jl
and
adc
cs
xorb
lcall
jg
fimuls
jno
mov
daa
mov
nop
jae
shll
jne
negb
lret
jl
sub
sub
daa
idiv
mov
addb
mov
jle
data16
mov
loopne
adc
mov
mov
shll
call
sbb
aas
adc
sub
dec
jge
mov
lods
xchg
daa
and
adc
mov
imul
inc
add
and
add
test
dec
dec
sub
push
imul
mov
sbbb
test
xor
dec
sub
adc
mov
lods
cltd
loope
shll
orl
mov
mov
jl
push
fnsave
inc
arpl
push
popf
cltd
xchg
movsl
mov
mov
loop
sbb
push
inc
fsubrl
pushf
mov
mov
repz
inc
sti
adc
cmp
roll
lea
mov
add
sub
in
aam
int
ret
xor
xchg
xor
mov
or
jp
bsf
fwait
mov
cmpb
sub
sbb
decl
fistpl
mov
mov
pop
add
pop
dec
jb
test
sarb
push
jg
imul
xor
lcall
jno
or
mov
jo
pop
es
rcr
outsb
xor
ror
bound
es
sub
stos
test
mov
test
in
and
lds
testl
fadd
dec
rep
cmc
in
shl
cmpsl
stos
adc
sub
add
outsb
inc
cmc
fs
pop
jne
xchg
xor
mov
adc
dec
dec
jecxz
sbb
mov
push
je
dec
in
or
push
arpl
mov
pop
jg
subl
stos
cmp
push
test
getsec
fbld
adc
stos
mov
movsl
push
or
pop
cmpsb
jae
stos
jo
push
shll
or
jo
inc
push
cmp
out
iret
sti
lock
adc
xor
fnstenv
cld
mov
cwtl
lods
xchg
pop
adc
fsubl
fs
es
mov
mov
cli
mov
int3
out
repnz
mov
pop
dec
insb
xor
scas
ja
xor
adc
arpl
arpl
mov
cmpsl
scas
sub
icebp
subb
xchg
into
dec
xor
fmuls
pop
and
mov
in
data16
mov
mov
push
hlt
pop
inc
jo
rorl
out
mov
cmc
ljmp
adc
adc
jno
movsb
sub
das
ficompl
inc
cmp
jmp
add
loopne
clc
push
imul
pop
pop
rolb
xchg
mov
push
or
push
fcomps
jecxz
jns
push
xchg
ss
fidivl
xchg
inc
scas
sbb
mov
inc
popf
and
xor
push
jne
jnp
fbstp
and
pop
dec
sbb
adc
insl
jo
inc
stc
imulb
ret
movsb
std
xchg
cmp
cmpb
xchg
and
orb
sub
sarb
jmp
insl
sbb
pop
pop
test
and
sub
int3
sub
inc
push
cli
aaa
and
imul
sbb
mov
outsl
xchg
adc
mov
mov
add
or
xor
out
aam
rcrl
dec
sub
fwait
and
and
lea
sub
test
notl
push
mov
gs
stos
in
scas
cmc
ud0
mov
adc
cwtl
test
data16
adc
sub
push
dec
sbb
xchg
imul
and
fcoms
daa
inc
negb
cmp
es
push
cltd
inc
stos
add
mov
mov
outsl
cltd
addr16
daa
enter
loope
mov
mov
in
stc
pop
add
or
push
xchg
pusha
ja
bound
and
pop
stos
fmull
dec
js
pop
mov
insl
sub
mov
shrb
mov
pop
inc
sub
dec
jns
mov
sbb
mov
fwait
xor
push
push
es
push
cmp
enter
test
loope
add
add
mov
cmpsb
jne
shlb
jle
enter
sbb
or
lret
imul
jmp
push
in
xor
xchg
mov
out
xlat
icebp
adc
lcall
xchg
adc
mov
in
or
std
cmp
mov
lods
sub
inc
cmc
test
jns
fdiv
pop
in
stc
lock
jne
and
cs
test
fistps
icebp
cmp
xchg
dec
mov
inc
sbb
addr16
scas
inc
pop
push
and
mov
mov
mov
popf
and
cli
and
push
mov
jae
xchg
mov
cli
testl
xor
pop
pop
cmp
add
cwtl
add
jle
ficoml
jp
fisubrs
adc
pop
movsl
xlat
sbb
add
fbld
mov
jge
inc
cmp
pop
inc
mov
pop
sarb
movsl
pop
sub
or
sub
push
mov
clc
dec
fmul
fdivr
repnz
lock
punpckhbw
jnp
jl
cmpl
das
les
stos
xor
ss
push
xor
cld
push
mov
and
aas
sarb
lret
mov
insl
mov
hlt
js
imul
rorb
pop
xor
sbb
pop
movsl
add
idivl
pop
rcl
xor
sub
jns
pop
fldcw
sbb
push
pop
sbb
cmp
pusha
and
xchg
pop
inc
jg
std
sahf
mov
mov
xlat
push
ss
cmpsl
out
lahf
into
cmp
sahf
icebp
lods
ja
add
rcll
bound
mov
dec
add
xor
lds
fnstsw
cli
movsl
je
cld
aas
sub
jg
out
int3
dec
jne
ret
push
sbb
hlt
mov
mov
mov
push
fwait
jecxz
shll
dec
insl
fmul
jecxz
push
xchg
jg
pop
cmp
stos
shlb
add
cltd
out
sbb
and
mov
xor
js
loopne
loopne
imul
pop
shrd
daa
int
ljmp
push
ret
jecxz
and
popa
into
cwtl
ret
pop
daa
sbb
add
inc
test
movzwl
jl
das
sub
dec
lcall
adc
inc
mov
dec
and
inc
lods
adc
sbb
add
mov
test
outsb
jnp
test
pusha
cs
inc
stos
fistpl
add
xor
mov
fndisi(8087
shlb
cmc
mov
scas
mov
xchg
in
adc
pop
mov
cmp
movsb
das
dec
pop
xchg
insb
inc
push
xor
clc
call
cmc
int3
int3
push
repz
jg
loop
out
loopne
lds
xor
test
loope
sbb
xchg
jle
pop
in
cmp
sub
inc
sub
xor
jg
adc
push
jae
popf
push
loopne
mov
xchg
and
les
sahf
pop
sub
fwait
les
fdivr
aad
fcmovu
jo
sub
or
mov
inc
pop
cmc
mov
and
and
fcoms
dec
outsb
push
and
outsb
xorl
pop
xchg
jb
test
sti
jecxz
and
pop
sub
pop
js
data16
cmp
out
inc
or
test
mov
mov
push
or
xlat
adc
out
or
inc
xchg
add
lcall
das
je
mov
pop
mov
movsl
das
mov
loopne
outsb
jl
inc
mov
in
cmp
sar
sbb
pop
adc
mov
sarb
lea
adc
push
into
dec
incb
rclb
xchg
xchg
mulb
mov
pop
loope
imul
mov
mov
fidivrs
fwait
mov
insb
pop
insb
mov
loopne
ret
stc
xor
mov
sub
cmpsb
test
jl
pop
cmp
rol
loopne
int
mov
or
cmp
dec
and
dec
hlt
popa
ss
gs
adc
lods
inc
and
lret
fcomp
dec
dec
dec
sbb
cmpsb
enter
dec
into
cmc
fbstp
xchg
inc
dec
je
jbe
aam
jbe
lahf
jle
xlat
outsl
jb
jge
xlat
aam
jns
stc
mov
test
jb
or
xchg
test
filds
jge
pop
jmp
out
mov
adc
test
cs
xor
adc
into
cmp
enter
mov
das
scas
cmp
fldt
enter
adc
out
scas
dec
add
dec
dec
pusha
push
sub
dec
sub
test
xchg
mov
jne
mov
cmp
push
mov
jo
into
ljmp
shrb
mov
lcall
addb
jnp
mov
ss
add
mov
or
xchg
inc
inc
dec
push
fidivs
cmp
dec
imul
push
imul
lret
adc
cs
insl
add
ds
sub
loope
cs
flds
dec
mov
lds
mov
or
xor
subb
jl
loope
insb
jno
mov
pop
jle
notb
test
hlt
add
test
xchg
dec
mov
xchg
clc
xor
ljmp
rclb
sub
das
mov
mov
mov
sbb
lock
mov
loopne
lods
or
rcrl
pop
call
adc
movl
jg
ljmp
lret
mov
es
test
or
lods
jmp
aam
imul
ret
imul
lret
sub
jmp
bound
xor
in
jge,pt
inc
inc
adc
xor
inc
pop
clc
mov
sti
insb
jle
pop
clts
aam
add
mov
cmpl
shlb
scas
xchg
mov
sub
pusha
iret
dec
mov
addr16
pop
mov
icebp
out
insb
or
hlt
sbb
out
rcrl
xlat
mov
cli
mov
imul
mov
lret
in
xchg
sbb
out
je
inc
lds
fcomps
sub
mov
dec
and
sub
xchg
stos
repnz
icebp
pusha
insl
sarl
or
pop
or
mov
dec
aam
push
outsl
out
push
test
in
sahf
outsb
adc
add
sbb
ljmp
cmpsl
popa
pop
ret
adcl
pop
jmp
fcoms
fnstenv
pop
dec
pop
dec
fistps
das
push
outsl
mov
adc
aam
bound
xchg
fmul
dec
pop
movsl
sub
arpl
das
inc
jne
cwtl
xchg
pop
push
mov
insb
test
or
outsb
inc
inc
push
jnp
ret
lock
mov
insl
pop
or
lock
je
dec
xchg
stc
inc
add
sbb
fwait
inc
out
loope
pop
sbb
insl
hlt
mov
push
nop
pop
sbbb
pop
insl
int
inc
mov
and
push
imul
sub
and
dec
push
loope
enter
outsl
std
push
pop
jo
push
adc
repnz
sub
dec
loop
lahf
popf
call
orb
ja
xchg
or
aam
idivl
or
gs
xchg
stc
cs
add
in
out
push
enter
adc
ficomps
mov
sbb
add
aam
lds
orb
inc
mov
inc
xchg
ficompl
add
fmuls
bt
mov
mov
cwtl
dec
or
notl
push
pushf
inc
sbb
cmc
and
jle
mov
cmp
inc
gs
lds
divl
sbb
insb
push
sub
dec
aam
icebp
mov
adc
data16
mov
mov
pop
and
pop
pop
xor
and
lods
and
and
or
sahf
scas
popa
sbb
cwtl
adc
and
inc
movsl
and
push
sbb
push
push
xchg
mov
push
into
lods
subl
jb
dec
lahf
aaa
xor
mov
mov
aaa
sub
or
les
popa
dec
xchg
pop
loop
sar
daa
or
lea
adc
sbb
popf
pop
xor
enter
hlt
les
pusha
mov
pop
in
scas
lock
stc
sbb
out
jecxz
int3
dec
adc
into
mov
jo
repz
movsb
cwtl
fistps
popf
fidivrl
sbb
mov
ss
dec
pop
push
push
test
pop
push
or
fldt
loop
subl
jp
xchg
pop
arpl
xlat
mov
icebp
inc
popa
jb
subb
imul
cmp
insl
sub
leave
adc
push
pop
dec
or
rcr
push
ds
dec
insb
bound
lods
sti
pusha
xlat
pusha
xor
imul
fbstp
mov
jnp
mov
sub
pop
pushf
test
mov
mov
shrl
xor
dec
in
cmp
out
lock
stc
xchg
cld
push
ret
into
inc
mov
hlt
enter
and
fldenv
xor
pop
test
cmpsl
xchg
fsubs
imul
insl
test
aaa
mov
cld
insl
lret
adc
shlb
cwtl
fidivrs
mov
outsb
cld
mov
xchg
repnz
xchg
lods
scas
insb
dec
jecxz
and
and
add
lods
inc
cld
cmp
or
lods
sbbl
cltd
xlat
cmp
mov
sbb
pop
mov
ret
sub
lret
sbb
divb
push
cmp
jg
roll
jecxz
jmp
pop
stc
or
jg
and
push
jecxz
dec
movsb
adc
mov
jecxz
das
lret
shlb
cmp
rcl
stos
mov
mov
push
das
aam
mov
xor
sub
mov
push
movsl
daa
pop
fcmovnb
fstl
out
xor
push
jo
adc
loope
loopne
loope
imulb
adc
mov
jecxz
dec
jge
inc
test
icebp
mov
jge
test
or
aad
sbb
fildll
imul
js
aaa
cmpsb
jns
inc
gs
mov
sub
mov
cmc
inc
add
push
jnp
or
lret
sahf
clc
lock
ss
dec
add
xorb
xor
push
xor
xor
pop
sub
mov
cmpsl
adc
cld
aam
mov
add
inc
bnd
cltd
and
push
xchg
or
mov
push
xchg
in
or
mov
movsb
jl
dec
mov
mov
fcoms
ljmp
and
loop
jbe
dec
mov
pop
popa
cmc
imul
jp
pusha
push
int
cmpl
dec
xor
subb
pop
add
mov
mov
jmp
xchg
push
fiadds
imul
pusha
cmp
cmp
in
jle
ljmp
in
dec
push
scas
xor
mov
sbb
in
scas
add
loop
xchg
psrld
xchg
or
loope
dec
shl
das
mov
and
jns
jg
dec
sbb
lods
mov
pop
dec
xor
sbbb
or
xor
sahf
mov
mov
adc
int
mov
stos
and
jmp
dec
into
mov
push
mov
lods
rorl
out
and
push
setbe
mov
dec
lds
pusha
xlat
aad
sbb
stos
push
dec
aad
int3
sbb
mov
fldt
mov
ljmpw
mov
xor
fnclex
insl
sub
dec
inc
lock
and
aad
mov
out
adc
xchg
add
in
xchg
rorb
dec
push
mov
fiadds
inc
aam
dec
in
addb
inc
shlb
out
mov
sub
addl
out
pop
sbb
xor
cmp
sbb
mov
inc
pop
fbstp
mov
mov
stos
adc
gs
adc
ss
call
test
dec
fistl
test
imull
adc
xchg
aam
ds
jecxz
mov
push
mov
jno
lock
dec
xchg
sub
aas
cmpsl
xchg
pushf
xor
in
mov
add
daa
and
push
cmp
mov
pusha
jge
je
inc
and
and
bound
mov
lods
adc
fsubl
and
and
test
cmp
fsts
xchg
loop
cwtl
xchg
mov
bswap
xorl
jo
jbe
roll
fs
jl
mov
test
xor
insb
dec
mov
pop
push
add
and
out
in
out
daa
aam
dec
movsb
clc
mov
xchg
cs
pop
mov
mov
out
sbb
jp
jno
call
mov
jbe
inc
push
mov
pop
cmp
mov
mov
subb
push
jnp
inc
daa
jae
pushf
int3
pop
mov
add
fisubrl
push
adc
push
adc
stos
adc
shl
lods
jp
in
notb
ret
add
jecxz
mov
divb
inc
jg
sbb
addr16
sahf
sbb
or
gs
sar
scas
sub
and
ficoml
test
adc
pop
mov
xchg
inc
mov
loope
rorb
lock
rol
add
out
sbb
mov
int
leave
inc
mov
and
mov
lods
xor
mov
fstpl
ss
mov
jae
testl
andb
test
outsl
fs
lods
dec
fdivp
mov
out
out
or
fwait
sbbl
add
iret
cltd
rclb
mov
mov
popf
xchg
dec
adc
lcall
mov
ds
cld
loopne
rorb
lods
not
inc
mov
mov
mov
xchg
pusha
lcall
xor
xchg
ljmp
or
nop
aam
or
lds
je
loope
add
test
pushf
fadds
ljmp
enter
add
imul
test
pop
dec
add
jg
cmpsb
sbb
xchg
cmp
out
jl
lret
add
push
aaa
sub
adc
mov
scas
xlat
xlat
cmpsl
jo
in
sbb
cmpsl
ds
jge
jne
cmp
lcall
orl
lcall
aad
cmpsl
lods
fmuls
imul
xchg
aaa
jle
sti
pop
xchg
popa
mov
rolb
push
lahf
jne
jge
inc
lods
mov
adc
mov
sbb
mov
nop
lds
cltd
pusha
dec
loope
pop
cmpsl
hlt
ss
jg
jae
mov
push
ja
push
push
insb
rolb
out
frstor
pusha
inc
enter
aam
imul
mov
dec
inc
push
or
pop
sub
orb
daa
jns
sbb
fmul
popa
sbb
lock
and
mov
in
xchg
jecxz
lcall
mov
mov
ds
in
lods
lret
lea
jo
ficompl
adc
mov
les
sub
scas
or
sahf
outsb
sbb
aam
lds
xchg
adc
sub
rcr
jb
test
aaa
sti
jle
mov
mov
cld
add
int3
inc
pushl
icebp
js
aas
pop
cld
adc
insb
int3
sbb
jo
aas
lds
inc
mov
xor
cmp
shlb
fwait
call
test
mov
jne
and
or
push
std
pop
fs
cmp
xchg
fs
xchg
movsl
push
sbb
and
shrl
mov
shll
sub
fsub
icebp
add
xchg
jb
lret
in
or
jecxz
outsb
adc
and
push
lock
fidivs
lock
mov
inc
dec
js
add
jbe
adc
xchg
int
xchg
stos
cltd
cmp
sbb
idivl
adc
gs
push
xchg
mov
arpl
fiadds
cmp
scas
mov
adc
es
cmc
paddusb
mov
xor
mov
inc
pop
ja
movsl
repz
pop
lea
fdiv
push
movsb
mov
cmpb
iret
cli
sub
out
pop
and
lret
fsubrs
xchg
les
rorb
sti
add
xchg
bound
dec
xchg
sub
enter
pushf
out
and
fxch
pop
mov
pop
inc
lcall
shlb
test
xchg
cmp
xor
test
add
test
mov
or
and
cmpsb
pop
leave
pushf
push
les
fmuls
lock
mov
mov
mov
out
push
jb
cltd
out
jge
jo
insl
jb
jb
movsb
dec
iret
imul
mov
jno
sub
mov
hlt
insl
add
add
sarl
in
movsb
jle
inc
rcl
test
repz
xchg
fs
stc
push
dec
int3
bound
fucomi
insb
sub
dec
push
pop
pusha
xor
or
je
repz
and
sub
lret
push
jmp
test
inc
sbb
mov
cmp
push
cmp
push
lcall
mov
out
movsb
out
cwtl
iret
pop
test
add
hlt
inc
mov
jnp
and
insl
fcmovnbe
xlat
call
cmp
dec
cli
inc
out
add
addb
push
repz
notb
js
lea
int3
and
mov
lahf
test
je
and
loop
jo
mov
testb
and
sbb
xchg
hlt
and
cwtl
outsb
add
jne
sbb
push
stos
fildl
aas
pop
cmp
pop
fidivrl
pop
add
inc
ret
adc
dec
mov
xlat
dec
shll
sbb
jmp
jecxz
xchg
dec
push
xchg
mov
inc
mov
arpl
mov
aas
ss
fldt
push
sbb
out
push
mov
mov
hlt
xchg
dec
mov
int
fsubs
dec
adc
push
mov
xchg
das
push
cmp
push
sbb
repnz
arpl
or
inc
mov
mov
mov
faddl
scas
inc
popa
jecxz
out
xor
adc
cmp
test
jp
dec
adc
mov
out
call
or
fisubrl
fs
ss
clc
mov
sarl
add
cwtl
mov
loope
test
ja
mov
repnz
int3
jne
fsts
loopne
cmc
shlb
mov
cld
push
out
or
daa
pop
xor
jbe
aad
and
rorl
sub
sub
pop
or
outsl
out
cmp
nop
mov
cmp
dec
popf
imul
cmpsl
sub
es
pop
adc
out
les
mov
mov
inc
and
sub
data16
test
addr16
loop
lock
out
stc
lock
icebp
dec
daa
mov
sti
mov
or
out
push
bound
and
pop
mov
jbe
jle
stos
fsts
cmp
lods
sub
dec
xchg
das
fisubs
int3
xchg
or
pop
inc
jmp
std
fidivs
sbb
add
dec
xor
fdivs
mov
dec
jg
sub
sub
dec
dec
inc
rorb
mov
mov
mov
dec
sub
mov
inc
push
int
and
movsl
ja
shlb
add
xor
and
loop
loopne
fyl2xp1
inc
fiadds
cmp
scas
mov
mov
notl
cmp
imul
lods
leave
jno
lret
and
ret
lods
int
stos
dec
or
lea
cs
mov
and
xchg
test
mov
outsb
roll
in
mov
insl
cwtl
negb
jno
pop
mov
push
cmpsl
outsb
frstor
fists
mov
adc
xor
inc
sub
imul
stc
dec
stos
mov
xor
push
mov
arpl
jns
pop
stos
and
insb
or
dec
sub
inc
pop
hlt
andl
dec
in
mov
jnp
lock
imul
mov
pushf
push
pop
lods
inc
es
push
daa
pop
out
and
inc
sbb
mov
or
dec
xor
xor
inc
add
adc
and
sti
sbb
sbb
fwait
ret
sub
add
incb
out
adc
mov
cli
ss
xlat
inc
repnz
js
scas
pop
and
pop
outsb
ss
pop
jno
lods
dec
xor
adc
jns
xchg
jne
sbb
push
mov
js
in
mov
test
pop
dec
xor
jns
xor
addl
sbb
sti
out
mov
lods
arpl
mov
shl
lret
cmp
in
or
add
and
rorl
sbb
fs
inc
jbe
ja
pop
cmp
int
mov
jb
dec
mov
adc
push
inc
or
outsl
call
mov
cmp
lods
rcl
fs
inc
xchg
fdiv
jmp
js
cmp
mov
lahf
pop
in
lahf
imul
inc
f2xm1
or
cmpb
inc
push
cld
mov
rcrb
scas
daa
cmp
jne
xchg
rcrb
mov
daa
cs
push
push
adc
lds
rol
out
stos
push
or
mov
outsb
or
rorl
dec
cmp
or
lret
fs
repnz
xlat
and
shl
jle
xor
lds
mov
mov
jne
ds
mov
aaa
std
fcmovbe
xor
push
add
jno
insl
out
cld
call
adc
lahf
sbb
aad
xchg
fs
test
gs
adc
lret
imul
add
xlat
mov
xchg
xchg
xlat
xchg
jae
inc
pop
sti
jbe
sbb
dec
stc
xor
mov
xchg
lahf
mov
imul
inc
xchg
dec
aam
out
pop
and
dec
aas
inc
inc
int3
stc
cmp
dec
inc
and
sbb
movsb
shrl
cmpsb
sbb
loopne
mov
cld
lcall
and
andl
xor
cld
shrl
ds
mov
inc
pop
xor
mov
mov
mov
icebp
movb
and
jg
iret
push
scas
scas
lods
adc
add
mov
dec
xor
data16
sub
in
mov
sbb
call
int3
mov
cmp
pop
imul
jmp
cmp
sub
sbb
jmp
and
dec
popl
xor
or
das
addr16
jg
lods
insb
mov
popa
inc
shll
shrl
push
mov
adc
fldl
enter
adc
cli
cmp
mov
flds
shl
mov
and
push
sub
or
xchg
push
int3
addb
or
mov
in
adc
cmp
sbb
movl
jbe
sub
cli
fsubr
push
daa
add
mov
cs
dec
lret
js
jo
cs
movsl
imul
rorb
inc
add
cmp
imul
loopne
repnz
mov
das
mov
call
dec
arpl
push
bound
xchg
inc
push
insl
imul
outsb
mov
or
xchg
js
ja,pn
jo
fidivrl
lock
int
jg
daa
insl
mov
mov
and
loope
sub
adc
sbb
imul
add
loopne
mov
dec
test
lahf
add
mov
in
lds
orl
mov
mov
cmp
fldcw
insb
jns
jmp
jne
pop
fsubl
lods
sbb
push
lahf
out
call
outsl
faddl
inc
xchg
hlt
jl
data16
aaa
cltd
push
xor
adc
mov
mov
mov
xor
cwtl
fistpl
push
test
inc
test
insb
mov
pop
adc
mov
fprem
pusha
ficompl
sti
cld
pop
sbb
and
mov
int
out
rorb
jge
ret
adc
adc
mov
and
in
xchg
out
mov
clc
sbb
adc
and
call
cwtl
jb
mov
jb
rclb
mov
cmc
ret
mov
pop
fildll
stos
sub
sub
push
out
add
sbb
loopne
int
lods
test
inc
loope
pop
int
clc
pop
inc
sub
shrb
aam
inc
fldcw
xchg
add
arpl
jbe
xor
inc
iret
mov
xchg
popa
iret
jo
dec
fadds
repz
mov
lcall
mov
je
stos
divl
idivl
jge
enter
out
std
outsb
dec
fstpt
addr16
sti
data16
rclb
jnp
jle
xchg
lock
or
insb
inc
inc
pushf
outsb
add
hlt
jle
inc
pop
and
gs
dec
sti
dec
sub
int3
push
fcoml
popf
mov
push
inc
mov
fistpl
xchg
inc
lds
rcrl
ret
jo
incl
pop
repz
test
cmp
cltd
lret
xor
stos
jle
sbb
sbb
leave
dec
or
mov
add
mov
and
call
pop
das
lahf
insb
jle
push
inc
sbb
ds
aad
fld
ret
sub
jecxz
add
out
xor
mov
dec
xchg
rorl
fdivrs
xchg
xor
das
push
mov
loope
in
mov
leave
inc
addr16
rolb
fcoml
dec
pop
std
or
jbe
sub
pop
mov
mov
dec
addl
in
dec
jb
ffreep
lahf
dec
fnstsw
cld
stc
xor
sbb
mov
aam
scas
lret
inc
adc
pop
fmull
arpl
xchg
xchg
jle
adc
mov
leave
mov
out
out
mov
out
mov
sbb
dec
inc
mov
test
push
xchg
mov
cli
shlb
xchg
test
call
outsl
jnp
sbb
jg
js
mov
mov
mov
add
or
popa
bound
and
mov
pop
ror
fldt
mov
gs
xlat
inc
es
outsb
mov
insb
repz
loop
insb
xchg
push
imul
sub
mov
lahf
dec
aas
sbb
mov
xor
dec
and
xchg
adc
inc
push
test
paddsb
aad
repz
int3
dec
mov
imul
je
push
xchg
jge
cmp
pop
mov
insl
push
enter
push
add
pop
add
dec
mov
sbb
aam
jg
cmp
int3
mov
mov
cmp
enterw
mov
decb
or
adcb
pop
pop
xchg
ficompl
sub
cli
mov
icebp
xchg
idiv
in
dec
mov
pop
int3
shrl
inc
es
lock
movsl
inc
pop
sbbb
lahf
in
push
cmp
push
xchg
fcomps
in
iret
cmpsb
xchg
rcrb
and
jns
xor
aam
sub
outsb
cmpsl
push
gs
test
and
cmpb
loope
xor
popf
dec
inc
ljmp
cmpsb
mov
sub
add
pop
jle
pop
cmp
ja
pop
test
jge
jge
pop
inc
jmp
fstpt
pop
dec
jmp
dec
push
setns
pop
and
cmp
int
outsl
outsb
imul
xor
pop
mov
sbb
scas
popf
mov
jg
nop
xchg
and
jns
inc
je
in
or
popf
mov
call
pop
shlb
push
push
dec
rol
ret
ja
divb
mov
push
aad
rcl
movsl
test
gs
movsl
or
test
lea
and
scas
dec
in
xchg
dec
pop
imul
arpl
add
outsl
rclb
jge
shrl
xchg
xchg
in
jg
push
jl
test
hlt
push
pushf
pop
mov
cmpsl
xor
mov
pop
xor
sub
faddl
lods
cld
pop
xor
pop
jne
loope
in
into
pop
xlat
fisubrl
and
or
daa
mov
imul
pop
sbb
ret
ds
enter
insb
sbb
push
fisubrl
sub
inc
push
int3
mov
inc
out
add
int
xor
inc
sub
loopne
cmpsb
jp
or
cmp
push
lods
inc
std
sahf
jo
fists
jnp
jg
lods
add
fmull
js
movsb
test
push
mov
sarl
imul
or
int3
push
mov
inc
pushf
lret
jb
jge
ret
lods
mov
or
data16
std
push
jmp
pop
mulb
pop
dec
popa
ss
dec
inc
out
bound
jnp
mov
pop
mov
push
xor
dec
daa
inc
mov
mov
add
jo
push
roll
outsb
subl
pop
in
mov
dec
xor
dec
add
mov
mov
sub
shl
inc
xorb
loop
sbb
and
stos
and
lock
or
inc
push
lods
sub
xchg
outsb
push
imul
inc
aas
cmp
ret
rclb
mov
adc
sub
jge
xorb
pop
sbb
pusha
cmp
pushf
ror
out
push
fs
mov
pop
add
pop
inc
int3
push
dec
arpl
push
stos
mov
pusha
xor
inc
jge
scas
push
or
outsb
mov
aad
sub
pop
mov
sub
aas
mov
je
pop
and
push
add
aas
popa
gs
push
mov
jl
mov
lods
test
stc
in
fnstcw
sub
jns
mov
rolb
mov
les
cltd
jmp
es
rcrb
cmp
ret
xchg
cmp
outsl
test
repz
mov
dec
inc
aad
cli
jbe
cmp
inc
fisubrs
push
xlat
mov
xor
lret
insl
adc
xor
lods
xor
mov
lds
adcb
jae
push
dec
rolb
mov
std
jbe
or
mov
fnsave
xchg
dec
add
cwtl
test
arpl
or
dec
pop
test
orl
std
jo
cmp
movsb
xorb
sub
jp
xor
scas
filds
sub
jnp
pop
dec
pop
push
xor
xchg
jmp
jmp
pushl
sub
nop
adc
and
xor
mov
dec
jno
out
sti
repnz
test
sarw
jmp
inc
iret
aam
shl
leave
push
mov
fdivl
sbb
iret
adc
xor
jb
xor
jecxz
mov
push
mov
mov
cli
in
push
push
xor
fs
stos
addl
iret
ds
loope
cltd
lds
push
xor
add
mov
loop
push
xchg
or
mov
outsl
ficoml
jo
jne
push
popf
lahf
push
shlb
cmp
ss
pop
push
sub
ljmp
push
mov
push
mov
xchg
inc
mov
push
dec
cmc
ds
ficoml
addb
cwtl
push
daa
pop
repnz
or
test
pop
xor
push
mov
test
iret
lret
cli
push
mov
lods
aam
mov
stc
adc
cmpsl
aad
test
in
cwtl
frstor
int3
dec
leave
sub
ljmp
and
stos
push
adc
addr16
dec
int3
cmp
insl
mov
std
ljmp
pop
sbb
sub
jns
or
subl
lods
xchg
lock
fadd
mov
les
or
into
popf
icebp
fcoms
ud2
mov
leave
dec
dec
push
out
push
lcall
push
push
mov
dec
out
fwait
andb
pop
pop
mov
dec
pop
fcmove
add
mov
dec
fnstsw
shlb
mov
xchg
data16
int3
pop
add
push
sbb
add
push
cmp
xlat
call
rol
cmp
pop
add
xlat
cmp
sbb
mov
shll
pop
out
fsubs
push
xchg
inc
pop
push
push
outsl
mov
dec
std
in
loop
fxch
aad
in
inc
and
cmp
adc
push
mov
scas
adc
pop
xchg
or
mov
xchg
jl
stos
jecxz
adc
cmp
leave
mov
into
loope
jae
mov
int3
mov
cmpsb
sbb
xchg
stos
scas
fimull
push
push
stos
lret
inc
dec
lahf
nop
cmp
out
je,pn
fisubrl
push
roll
out
negb
clc
sti
mov
lahf
iret
xlat
inc
sub
mov
mov
mov
mov
iret
mov
jl
push
lods
stc
in
mov
xor
pushf
inc
mov
push
add
and
movsb
jo
jmp
out
and
cmp
lds
jbe
popf
mov
adc
push
mov
dec
fldenv
sub
pushf
fsubs
in
dec
pushf
movsl
push
pusha
stos
or
pop
lret
shll
pop
imulb
cmp
sbbb
icebp
sub
stc
pop
out
fstps
dec
pop
pop
mov
mov
call
pop
adc
mov
ret
lcall
es
repnz
das
xor
in
in
fiaddl
mov
orl
or
mov
cltd
cmpsb
xor
cli
lods
les
cld
mov
lret
sub
stc
fisubl
arpl
mov
cld
test
sub
movsl
stc
cmp
pop
inc
sahf
lods
mov
out
push
dec
jmp
repnz
test
xchg
mov
pop
inc
jl
push
imull
pop
lcall
data16
fs
data16
loop
add
sbb
lahf
js
shrb
mov
pop
inc
push
lret
add
mov
movsl
ret
jge
lret
xor
stc
mov
lds
insb
in
xchg
jns
int
jl
pop
adc
pop
inc
or
js
cmpsl
push
pop
sbb
lods
jge
in
stc
out
mov
add
jb
enter
cld
jno
sub
cmp
mov
sbb
sbb
mov
sub
pushf
jl
push
mov
jp
mov
xlat
jne
rolb
xchg
pusha
and
inc
mov
jne
aad
sub
jno
add
adc
jmp
out
xchg
dec
and
mov
cmp
xchg
fs
adc
pop
adc
fs
push
stc
test
jno
mov
add
xchg
inc
or
sbb
or
clc
loope
add
inc
fprem
test
mov
sti
shll
outsb
jne
xchg
orl
in
push
sub
mov
xor
mov
or
or
stos
clc
stos
dec
lcall
cmpsl
out
out
mov
pop
sbb
in
cld
fidivl
popf
aad
cmp
sub
int
ret
xor
xlat
xchg
in
inc
pop
mov
iret
mov
out
aad
cltd
pushf
adc
xor
arpl
inc
pop
shll
push
inc
enter
outsb
inc
jae
cltd
or
ret
jge
jo
jmp
sbb
dec
mov
mov
fwait
dec
fstps
and
lcall
rol
repnz
jnp
adc
outsb
ret
mov
sbb
lods
int
inc
mov
mov
mov
cmp
push
repnz
sub
add
mov
fisttps
testb
push
nop
addr16
adc
mov
into
shrb
pop
mov
adc
cltd
cmp
in
shlb
push
enter
and
gs
mov
adc
cli
jno
cmpsl
cmp
inc
loopne
inc
inc
subb
adc
inc
fstps
fsubp
or
mov
xchg
and
popa
stmxcsr
pop
iret
xchg
mov
into
pop
mov
cld
pop
mov
pop
xchg
jae
jo
cmpsb
cltd
outsb
mov
out
out
ret
pop
sti
addr16
jmp
xor
lcall
sbb
shr
out
pop
cmp
dec
call
dec
ds
ds
cmpsl
mov
push
inc
push
mov
or
mov
aad
repnz
lock
shlb
or
ss
sets
ss
xor
xchg
cmp
xor
add
push
mov
jge
sub
lods
push
ret
xor
ficompl
hlt
in
shlb
aas
push
inc
nop
pop
pop
cmp
or
xchg
pop
or
leave
aaa
mov
push
in
mov
sub
xchg
adc
adc
and
mov
pop
xor
inc
push
popa
pushf
incl
xchg
mov
mov
repz
icebp
icebp
popa
jecxz
add
cmp
int3
test
out
jb
mov
sub
xchg
jnp
cmp
sub
cmp
rclb
test
imul
movsb
in
aad
int3
sub
addl
mov
mov
dec
inc
jle
push
cmc
cmpb
cmp
cmp
inc
inc
xor
adc
mov
sbb
pop
pop
jno
cmpsl
jg
and
test
cli
shl
fcomi
dec
mov
mov
push
out
cs
bound
xchg
les
je
pop
bound
insl
cli
dec
mov
imul
aaa
inc
push
ret
mov
mov
lods
inc
dec
dec
xlat
in
add
and
popf
stos
add
push
loop
xchg
mov
fidivs
inc
sub
add
jp
xchg
add
inc
in
cwtl
out
int3
rcrl
cmpsb
dec
xor
ficomps
cwtl
sbb
fwait
das
cwtl
sbb
push
jmp
xchg
in
add
dec
push
lcall
mov
cmc
or
cmp
add
jo
mov
outsb
jecxz
mov
sahf
in
fs
test
leave
mov
sbb
inc
xchg
lahf
xorb
push
jecxz
mov
scas
xor
pop
adc
or
out
jmp
push
out
jnp
xchg
iret
push
jmp
sub
stc
jns
sbb
shlb
add
pop
scas
mov
xorl
pop
jmp
ljmp
lret
mov
xlat
pop
jae
insl
aad
and
or
cmp
mov
xchg
push
lahf
in
imul
inc
pop
in
xchg
xchg
inc
cli
int3
inc
popa
cld
and
fs
jmp
jbe
enter
cmpsb
ja
and
inc
sarl
cmp
nop
adc
push
int3
xchg
cmpsb
and
sub
xchg
ljmp
or
rcrl
jnp
push
mov
iret
and
pop
jno
mov
nop
subb
pop
push
mov
jecxz
adc
dec
loope
or
lea
ja
cli
fwait
pop
dec
or
sbb
jo
lret
out
xor
fsubrs
cltd
test
lock
popl
imul
mov
mov
mov
stos
enter
aam
pop
ds
out
lret
pusha
mov
xchg
test
mov
cmp
sub
adc
movsl
test
or
push
iret
xor
out
sarl
mov
cmpb
xor
jge
inc
jnp
popa
pop
add
dec
adc
xor
and
mov
and
jne
sub
mov
fstpl
roll
cmp
aad
add
and
jg
mov
inc
cmpsl
add
add
lret
push
pop
adcl
stos
fistpll
std
stos
push
lock
adc
in
or
pop
jo
add
fsub
and
jb
ja
clc
in
and
fldcw
lahf
cmp
jl
mov
mov
jecxz
imul
sub
cmp
sbb
cmpsb
dec
scas
int
ds
mov
xchg
daa
or
adc
aas
sbb
jno
sbb
ja
xlat
push
push
sub
pusha
aaa
sbb
pop
movsb
and
dec
xchg
lea
outsl
repnz
add
cmpsb
cmc
xor
xchg
jnp
push
and
ja
mov
push
nop
jnp
mov
call
loope
imul
cmp
sub
pop
test
add
xchg
mov
adc
ficompl
push
cs
xchg
sub
icebp
sub
jmp
inc
sub
sub
div
shlb
call
test
pop
cmp
ljmp
mov
mov
inc
dec
in
adc
movsl
cltd
cmpsb
jbe
icebp
xor
pop
iret
sbb
test
jg
add
mov
push
or
inc
mov
push
dec
push
sbb
push
or
sub
mov
jp
cmc
jg
call
call
jo
or
xor
cs
nop
mov
push
pop
out
lock
aad
ss
mov
int3
sub
xchg
out
fwait
add
jbe
sti
stos
adc
xor
out
fstpt
fdivs
inc
push
push
pop
xchg
jo
mov
and
lea
xchg
mov
ficoms
int3
jnp
scas
cltd
lds
sbb
cs
imul
pop
mov
shlb
push
mov
mov
pop
sbb
ss
clc
in
imul
xchg
rclb
mov
add
fwait
das
and
xchg
jb
and
pop
mov
stos
es
imul
testl
xor
cmp
bound
repnz
xchg
lret
cld
adc
fwait
and
dec
movsb
sahf
inc
scas
push
cmp
test
xor
call
pusha
jne
cltd
mov
add
sbb
or
mov
mov
cmpsl
mov
pop
jb
dec
and
loopne
iret
es
add
iret
mov
xor
dec
jno
scas
and
ja
daa
pusha
loopne
or
and
xchg
aad
push
push
xor
mov
mov
fidivrs
xor
outsb
pop
lods
cli
add
outsl
test
loop
push
movsb
dec
bound
pop
sub
out
add
in
ja
imul
push
push
stc
out
fldenv
mov
rclb
add
iret
shll
gs
mov
jns
xor
inc
dec
and
or
mov
pop
xor
sub
scas
push
or
mov
scas
imul
in
popf
mov
rcll
mov
out
cmp
lods
push
xchg
or
and
out
popf
push
es
jo
xchg
pop
xor
xchg
test
ljmp
or
sub
wrmsr
imul
push
mov
mov
enter
lods
rcrl
mov
fcoms
and
push
inc
adc
push
sbb
out
push
lret
ss
jecxz
xchg
mov
je
inc
std
dec
adc
lds
adc
sub
mov
int
hlt
sub
mov
movsl
lahf
into
js
ljmp
loope
hlt
push
xor
data16
add
dec
pop
mov
push
clc
cmp
dec
imul
xchg
inc
jge
xchg
repz
push
aad
leave
pop
bound
lahf
imul
sarb
push
mov
or
jecxz
pop
std
sti
xchg
fldcw
ds
mov
jne
ss
jae
popf
mov
and
leave
loop
and
js
xor
lcall
inc
xlat
test
in
nop
mov
filds
push
imul
fadds
xlat
mov
inc
popa
pop
or
push
and
cmp
loop
pcmpeqb
push
popf
mov
pop
jmp
div
mov
pop
jbe
sub
movsb
outsl
pop
lds
mov
insb
mov
xchg
xchg
mov
adc
and
mov
out
iret
pop
dec
mov
mov
sub
loope
jno
push
lock
adc
push
cmp
shrb
test
outsl
xchg
out
loope
sub
sub
jno
dec
jno
fsubr
adc
sbb
fildl
xlat
rorl
mov
jne
xor
andb
aam
neg
lcall
mov
jl
pop
pop
dec
rcr
sub
jno
mov
cmp
and
push
arpl
inc
gs
popa
das
jmp
push
add
sti
leave
test
fcmovu
ljmp
inc
mov
push
insl
aas
imul
push
inc
mov
in
lcall
into
lret
lret
cs
dec
fdiv
jnp
adc
xor
fbld
in
pop
add
fisubrl
ficoms
cmp
jecxz
mov
in
mov
test
sbb
or
mov
xchg
gs
cmp
cmpsl
and
loopne
mov
lret
push
into
sbb
cmp
sub
ret
jne
xchg
adc
mov
fstl
or
fmul
jnp
push
je
sub
inc
sbbb
cmpl
test
jl
les
ljmp
mov
mov
add
test
xchg
enter
fs
iret
outsl
or
bswap
mov
ret
insl
mov
mov
sub
push
test
adc
movsl
out
push
fiadds
fimull
jne
aad
stos
pop
in
inc
fdivrs
and
rol
imul
xchg
xor
ret
insb
ret
subl
add
xor
lock
pop
dec
add
jmp
dec
ret
aam
adc
and
jle
mov
inc
negb
jne
lea
jmp
clc
sbb
jne
pop
adc
dec
xor
popl
sub
fstl
ja
cmp
popf
xchg
push
jae
in
fidivrs
stos
push
mov
cmpsb
lret
pusha
shl
ret
sub
movswl
orl
jecxz
aam
into
adc
or
jbe
shr
cmpsb
jno
repz
lods
xor
cwtl
push
or
insl
ffreep
enter
cmp
lret
sub
ds
dec
push
sahf
rclb
sbb
frstor
out
repz
push
sub
shrl
sub
rcrl
mov
sbb
jp
sbb
je
rorl
mov
and
adc
mull
xor
nop
lcall
ret
je
mov
push
sub
xchg
rorb
xchg
mov
adc
stos
jecxz
pushf
ret
imulb
cli
addr16
sahf
ror
push
pop
adc
pop
cld
xor
jl
mov
push
pop
lcall
in
cmp
sub
lock
xchg
inc
mov
adc
push
inc
or
lods
mov
push
add
lds
push
arpl
xchg
inc
dec
cmp
movsb
das
mov
mov
mov
pop
sub
in
int3
inc
test
xchg
js
mov
inc
scas
jno
popf
notb
scas
js
nop
out
adc
lcall
adc
lret
movsl
xlat
push
stos
cmpsl
or
repnz
test
xchg
and
pop
mov
dec
jg
push
dec
adc
xchg
mov
rcrl
and
enter
mov
pop
xchg
fs
xchg
lods
inc
aad
aad
or
int3
adc
cmpsb
mov
enter
push
movsb
sub
pop
adc
pop
jle
in
or
popa
vminps
jo
clc
movsb
dec
arpl
cmp
cmc
and
mov
inc
aam
adc
xchg
popf
push
lahf
mov
js
out
sbbb
popf
xchg
dec
jl
mov
ja
adc
mov
lock
mov
jecxz
push
push
in
outsb
xor
nop
mov
cli
out
repnz
data16
mov
inc
jle
cltd
jmp
inc
inc
shll
mov
mov
and
mov
nop
ljmp
add
imul
cmp
daa
imul
lds
xchg
xlat
imul
lret
xchg
scas
les
inc
loopne
add
adc
dec
jo
pop
mov
mov
pop
jg
adc
mov
out
in
fisubrl
in
add
adc
cmp
je
pop
rcr
sahf
push
mov
sub
and
adc
cmp
or
pop
in
lret
and
xor
mov
lret
imul
cli
pushf
inc
cltd
pop
sub
jmp
out
es
in
lods
outsb
iret
jecxz
sub
cs
std
lret
sbb
ret
mov
in
push
push
push
sahf
and
xor
insb
popa
lods
mov
cmp
idivb
sub
sar
jle
bound
divl
outsl
xor
or
imul
push
jp
decl
pop
add
stos
sub
dec
mov
push
lret
dec
push
sub
imull
and
mov
loop
jb
sbb
dec
inc
or
fcompl
mov
cmp
in
pop
mov
sub
stc
sarl
jo
mov
in
in
xor
in
push
lcall
adc
jbe
cmp
out
pop
das
adc
fstl
insb
push
sarb
test
sbb
ljmp
mov
lods
jmp
das
jecxz
jge
lahf
nop
nop
jb
ret
cmp
jl
xchg
in
frstor
inc
cmpsb
pop
loop
jbe
mov
add
repnz
iret
or
into
in
xor
dec
loope
aas
sub
inc
adc
cltd
lods
cmc
pop
in
mov
mov
lahf
jae
mov
mov
fists
mov
mov
adc
shl
test
sbb
cld
xchg
jb
mov
in
cltd
sbb
push
mov
shl
xor
js
call
adc
mov
or
pop
push
push
mov
cmp
paddsw
fwait
sbb
pop
and
pushf
ss
inc
in
jo
mov
push
xorb
andb
nop
mov
push
fs
gs
into
call
cs
not
test
jecxz
push
cmpb
dec
in
adc
lea
in
xlat
stos
mov
xchg
push
repnz
mov
mov
pop
adc
lock
xor
sub
and
add
notb
repnz
sbb
sbb
addb
dec
jo
fs
adc
or
push
or
push
es
ret
fmull
test
mov
leave
pushf
push
outsb
mulb
cmp
jecxz
xchg
adc
ljmp
and
mov
jge
add
xchg
add
mov
xor
mov
jnp
ds
int
test
sub
fwait
pop
pop
mov
les
sub
frstpm(287
jge
inc
cmp
and
mov
adc
mov
jns
leave
jmp
mov
inc
xchg
bound
enter
inc
push
gs
jp
test
jno
jnp
jne
lds
cmpsl
mov
and
cmp
iret
shll
ss
movsl
push
lcall
mov
repz
lret
push
and
sub
cmpl
jge
jae
or
cmpsb
sub
movsl
jno
lret
mov
sbb
xchg
add
push
cmpsb
ljmp
cmp
test
and
in
xchg
adc
cmp
insb
pusha
cmp
loope
fcomp
stos
icebp
fistps
or
js
jb
push
repnz
fbstp
pop
xchg
jb
idivb
cltd
ss
iret
popf
mov
push
cmp
arpl
lods
lods
jae
out
out
insl
in
lahf
nop
cmc
mov
jecxz
mov
arpl
lea
shrl
loope
inc
addb
xchg
xchg
pop
fbstp
fists
mov
mov
mov
xchg
popf
push
roll
adc
cmpsb
push
pop
xchg
cltd
xor
mov
push
or
cmc
jbe
ret
inc
scas
dec
sbb
pop
mov
cld
mov
adc
mov
inc
sbb
cmp
in
sarl
std
dec
xchg
nop
or
outsl
add
ljmp
dec
in
mov
shl
cmpsl
push
loopne
xchg
push
popf
test
lret
mov
xchg
and
dec
xchg
mov
pop
fs
inc
pusha
aas
sub
xchg
in
dec
cmpsb
push
sar
xor
fwait
jo
out
xlat
mov
and
cli
fcoml
jnp
inc
stos
push
popf
or
cmp
jmp
pop
xchg
jns
inc
jmp
mov
shrb
data16
xlat
cmp
mov
das
rcll
lods
movsb
fs
cmp
fidivl
inc
ja
popa
cmpsl
add
sub
dec
mov
outsl
and
and
ljmp
jecxz
fimull
cmp
xchg
lods
mov
into
ja
mov
mov
flds
cmp
cmp
dec
subl
cmp
pop
lea
mov
pop
mov
xlat
les
lea
int3
sub
or
std
add
daa
xor
mov
sub
xor
dec
xchg
sub
xchg
jb
shl
pop
xchg
stos
xchg
rcr
cmp
add
sbb
xchg
sub
sub
out
mov
inc
mov
adc
mov
pop
jne
adc
ja
daa
xlat
stc
inc
fists
dec
mov
mov
add
adc
sahf
pop
inc
xor
test
inc
jp
dec
jl
jge
fcoms
pop
sub
out
push
pushf
or
mov
mov
imul
jbe
mov
das
sti
xchg
fidivrl
pop
jb
aad
dec
mov
and
jbe
pop
pusha
leave
inc
xchg
dec
leave
add
or
dec
pop
sub
aam
sub
add
sbb
sbb
std
mov
sbb
mov
outsb
daa
xchg
push
cmp
stos
xchg
or
aas
out
jmp
shlb
pop
lret
mov
adc
aas
mov
push
push
cltd
sub
imul
jae
pop
scas
stos
xor
icebp
dec
inc
push
sub
les
sbb
repnz
fwait
dec
ror
add
lock
xor
push
cmp
xor
xor
xchg
xor
in
cmp
sarl
push
inc
in
insb
push
mov
fisttpll
jl
rcrl
or
bound
lahf
mov
cli
xchg
jbe
jle
xchg
xor
loopne
xchg
inc
mov
shl
rclb
push
and
xchg
dec
les
or
fisubrs
imul
std
fmuls
adc
add
fwait
dec
push
sub
adc
sar
or
cmp
or
jmp
repnz
cmp
xchg
push
xor
or
dec
nop
test
stos
mov
jmp
xchg
testl
push
cli
jae
push
mov
or
into
and
faddl
cmp
pop
mov
mov
dec
jl
cwtl
push
in
push
sahf
outsl
aaa
cmpsl
push
sub
sbb
xor
mov
sbb
jmp
xchg
sbb
clc
sbb
mov
dec
push
in
loope
lcall
aas
outsl
imul
xchg
pop
mov
jg
pop
mov
cltd
sbb
mov
ja
push
push
mov
repnz
cmp
jecxz
push
add
or
ret
pop
xor
mov
adc
jmp
fisttpll
lret
sub
in
sbb
dec
je
imul
mov
cs
add
cmp
nop
fisubs
push
jnp
push
rolb
ds
cmp
sub
int3
jge
pop
hlt
push
mov
outsl
xchg
cld
aas
leave
repz
mov
jp
xor
jae
mov
or
lcall
sub
mov
sahf
out
sbb
mov
pushl
mov
jp
inc
lds
add
and
not
pushf
shlb
repz
das
add
add
int
pop
jne
mov
sub
std
mov
mov
imull
dec
loopne
std
mov
repz
cltd
adc
jbe
outsb
loope
push
cmp
inc
loopne
fldcw
mov
push
adc
mov
xchg
xchg
aad
xor
sahf
pushf
adc
add
mov
rcrb
pusha
clc
push
jge
pop
xchg
add
xchg
push
cs
mov
cmpsb
frstor
mov
or
mov
inc
xor
jg
pop
out
dec
pop
mov
inc
ja
out
mov
push
movsb
jnp
popa
enter
rorl
sbb
sahf
in
js
xchg
jl
loope
xor
insl
in
inc
jecxz
mov
stos
pop
cmp
cmp
jge
fdivl
pop
jae
and
or
or
fsubl
mov
arpl
ret
fstpl
lahf
imul
mov
lea
mov
add
fldcw
outsl
sbb
mov
xor
movsl
rcll
lret
or
popf
add
sub
stos
mov
pop
push
outsb
pop
cmpsl
cld
and
out
inc
mov
out
lods
stos
jmp
mov
dec
fildll
adc
and
inc
fildl
outsl
cmp
mov
or
aas
jp
mov
cwtl
ds
sbb
lods
pusha
filds
lds
jp
adc
nop
decb
add
fnstenv
sub
leave
lods
mov
test
subl
inc
adcl
enter
lock
fldcw
jl
outsb
xchg
adc
or
sbb
adc
mov
mov
sbb
mov
xchg
ret
cli
sti
lea
lret
adc
sbb
cld
add
movsl
mov
push
xor
push
in
arpl
mov
stos
lods
or
scas
jbe
xlat
cmp
gs
push
mov
push
sub
lods
aad
cmp
cmpsb
mov
je
pushl
aaa
sub
jge
addl
mov
push
dec
mov
adc
push
jne
xchg
xor
mov
ljmp
dec
iret
or
dec
mov
push
aam
movsb
daa
jns
test
push
add
dec
and
fisubs
adc
les
xchg
test
orl
lock
xor
sbb
and
aam
aam
popf
fstl
gs
ret
and
scas
cs
add
stc
inc
push
and
dec
addr16
int
jno
jmp
ficompl
cmp
dec
outsl
and
jp
pop
xor
sbb
sahf
in
fnstenv
mov
jl
push
jge
jae
cmpsb
in
sbb
push
mov
mov
dec
or
ds
adc
mov
cmp
adc
pop
shlb
dec
inc
xor
or
std
mov
mov
jo
push
outsb
push
outsb
add
cs
sub
int
loopne
movsb
dec
pop
mov
jge
adc
cmp
out
popf
test
or
aaa
dec
add
out
or
test
fidivrl
push
or
fbstp
inc
fildll
insb
ss
lret
icebp
add
mov
mov
and
cmpsl
je
mov
cwtl
sahf
add
lahf
push
add
xor
pop
out
fistps
pop
mov
cmc
xchg
fdivs
leave
sti
fldenv
sub
repnz
jl
or
xor
push
enter
inc
push
mov
repnz
xchg
xor
cmp
and
dec
lods
mov
mov
pop
or
and
dec
test
insb
xchg
sub
add
ret
mov
sbbl
adcl
sbb
fwait
sbbb
mov
arpl
test
xchg
xor
xor
add
and
inc
pop
mov
sbb
mov
or
sbb
rol
popf
and
mov
cmp
and
mov
insb
dec
lds
sub
movb
movsb
inc
push
adc
popf
insb
loope
ss
mov
in
cmp
push
fidivl
xor
aad
test
mov
xchg
mov
mov
dec
es
pusha
fcoms
pop
int
cmp
sbb
push
addr16
gs
rclb
mov
addr16
jnp
dec
in
xlat
or
inc
cli
iret
push
pop
jmp
cmp
jns
popf
push
push
out
cld
lcall
xor
loop
jns
sbb
loop
inc
xor
lcall
jp
cld
test
pusha
cmp
in
clc
adc
or
inc
icebp
popf
cmp
aas
lret
push
mov
cmp
mov
subb
loop
std
movsb
cmp
cwtl
or
jbe,pn
inc
inc
in
addr16
aam
inc
ljmp
shr
xchg
imul
add
aad
xchg
push
jg
and
push
fcoml
adc
cmpb
xor
mov
hlt
ja
mov
stos
bound
sub
jp
mov
xor
inc
add
loop
cmpsl
flds
pushf
pop
outsb
imul
add
outsb
add
cmp
fucomip
fdiv
int3
jl
push
sbb
sub
sbb
push
fsubl
scas
mov
xlat
mov
add
cmp
mov
aaa
outsl
or
and
lods
cmp
out
adc
and
add
push
jge
fistpl
cmp
jge
pop
popa
aad
push
fistps
pop
test
lods
rcll
mov
push
hlt
sbb
adc
lahf
addr16
cwtl
in
adc
les
imul
push
and
jle
sub
mov
lea
test
ds
jnp
sbb
mov
rolb
inc
aas
add
add
lds
push
lock
push
insb
jmp
lods
mov
sbb
test
dec
into
mov
xor
data16
jo
jle
cmp
mov
mov
stos
xchg
mov
sbb
outsl
fimuls
sarl
mov
call
xor
daa
add
pushf
arpl
pop
dec
mov
sub
sbbb
lret
cmp
or
cs
mov
add
fcomi
jmp
cmp
push
xor
mov
stc
popf
out
add
idivb
xchg
mov
insb
jnp
cld
mov
push
sbb
std
mov
mov
xor
call
mov
push
dec
jmp
test
push
mov
xor
mov
insl
cld
push
lea
xchg
sarl
xchg
push
mov
fidivrl
stos
cmpsl
jle
xor
jmp
int
xchg
stc
js
rcrl
cmpsl
out
mov
dec
cmc
xchg
mov
pop
inc
jecxz
popa
push
es
inc
dec
fwait
aas
jp
sub
nop
or
icebp
dec
gs
add
testb
outsb
push
xchg
xchg
subb
mov
mov
icebp
and
outsl
mov
test
and
adc
sti
int
or
pop
cmc
out
pop
sbb
push
pushf
mov
or
inc
dec
int3
mov
popl
shl
arpl
notb
cmovs
pusha
lahf
inc
mov
mov
pop
testb
stos
repz
jmp
pop
dec
pop
inc
push
out
scas
mov
add
call
filds
or
dec
xchg
movq
jno
xchg
mov
lods
loope
stc
or
inc
shlb
jno
add
faddl
dec
pop
iret
mov
mov
aam
inc
out
test
inc
or
adcl
mov
mov
das
pop
fldt
mov
mov
xchg
and
inc
je
repnz
dec
gs
pop
test
icebp
add
mov
gs
ss
or
adc
pop
push
shlb
mov
sub
pushf
push
mov
clc
rolb
lcall
pop
mov
cs
frstor
sub
or
fs
xor
cmpsb
sbb
cmp
jge
inc
inc
xchg
dec
aad
fcoml
sarb
mov
stos
js
dec
les
or
cmp
sbb
movsb
push
in
aaa
fisubrs
xchg
mov
mov
adc
cmc
cmpsb
fcmovne
mov
mov
jl
xor
dec
xor
mov
into
mov
xor
ret
cmc
xchg
imul
mov
xchg
hlt
pop
push
rorl
cmp
cmc
mov
push
add
adcb
mov
cmp
sarb
aad
ljmp
outsl
dec
out
imul
je
call
in
push
sbb
pusha
inc
fs
lock
sbb
syscall
mov
cwtl
repz
lahf
movsl
cmp
pop
mov
ss
mov
cmpsb
aaa
lock
add
aaa
add
dec
sahf
test
sbb
xor
cmc
aam
add
adc
lcall
push
cmp
xor
loop
adc
test
mov
push
fists
insl
add
ffree
test
les
add
aas
dec
test
fdiv
dec
jg
push
stc
pop
cmp
mov
mov
testl
xor
and
andl
jecxz
xchg
lret
fwait
or
lahf
push
sub
mov
cmp
mov
and
into
xchg
mov
je
mov
adc
or
mov
insb
inc
popa
out
std
loope
jl
cmpsl
test
inc
jne
xchg
xchg
outsl
call
jmp
pushf
adc
ja
js
mov
pop
test
xor
mov
pop
sub
dec
xorb
cmp
loopne
idivl
or
or
push
dec
push
push
loop
jb
mov
or
cmp
sbb
shlb
jo
and
dec
xchg
fcomps
gs
sbb
cmp
push
nop
rol
imul
jb
mov
addr16
loopne
jne
fwait
fwait
decb
sub
idivb
scas
loop
ret
sbb
ljmp
cmc
sbb
fcomps
push
ja
cmp
loop
cmp
xchg
fwait
mov
negb
fildl
push
jbe
imulb
mov
sub
sub
orl
nop
mov
or
jg
pop
imul
inc
aad
jo
jle
inc
repnz
push
jl
out
pop
mov
sbb
data16
cli
imul
adc
pusha
je
test
fs
fsub
mov
outsb
out
and
pop
lods
bnd
push
outsb
push
add
and
mov
jp
shll
ficompl
inc
insl
lods
pop
inc
mov
push
xchg
dec
mov
inc
pop
push
mov
pop
sub
xor
test
and
ret
int3
dec
mov
inc
sub
fs
les
and
imul
sar
sbb
shlb
out
imul
push
addl
or
add
add
xchg
pop
shlb
sub
in
adc
jp
out
enter
adc
fcoms
aaa
jle
dec
pop
js
jp
inc
out
fsubrs
inc
cli
test
cmpsl
pop
sti
dec
mov
pusha
jo
add
cltd
sub
addb
pop
and
lds
inc
test
notl
and
ret
inc
hlt
int
repnz
cwtl
cld
push
outsl
pushf
out
fs
leave
popa
aaa
cli
cld
lcall
or
fnstenv
das
fs
mov
lods
or
mov
lret
or
in
mov
adc
add
jo
movsb
push
adcb
pushf
jbe
daa
icebp
inc
movsl
lret
subl
xchg
lcall
pop
stc
and
xor
cmpsl
mov
xchg
jmp
bound
outsb
and
popa
sub
mov
or
push
push
lea
jg
imul
pop
pusha
add
std
ficoms
ret
add
cmp
xchg
mov
fs
shlb
xchg
fildll
dec
arpl
mov
or
loop
cmp
inc
mov
sbb
stos
adc
push
pop
pop
mov
pop
outsb
inc
mov
add
and
pop
cmpsb
inc
pop
mov
sbb
into
shrb
add
push
or
lret
out
xor
bnd
fbld
dec
mov
scas
sahf
add
nop
adc
xchg
jl,pn
out
lcall
mov
and
rcrl
or
dec
mov
jno
xchg
ja
lods
or
jecxz
mov
add
ret
jnp
inc
shrb
mov
xor
jmp
out
push
adc
pop
in
test
or
arpl
fdivp
dec
xor
push
enter
fcmovnu
and
adc
xor
stos
xor
mov
or
sub
jecxz
iret
push
sar
out
inc
push
fisubl
bound
xor
dec
pop
pushf
jle
imul
and
push
xor
push
outsl
push
push
movsl
xlat
push
into
test
popa
xchg
mov
mov
add
outsl
add
pop
cli
lahf
sahf
and
test
inc
fiaddl
test
mov
aam
xchg
lds
inc
and
int3
aas
daa
out
addl
sbb
xor
or
mov
add
cmp
sub
les
lock
clc
xchg
daa
inc
pop
shl
mov
jbe
inc
dec
nop
push
mov
dec
sub
ljmp
rorl
mov
rdpmc
xchg
push
clc
pop
mov
jg
call
or
outsl
mov
jg
hlt
inc
and
mov
jo
jns
xchg
test
add
lret
scas
lds
dec
shll
pop
sbb
mov
rcrl
imul
das
loope
sbb
fdivl
cmp
jne
mov
sub
fdiv
xchg
and
xchg
ret
mov
out
and
mov
pusha
mov
testb
lret
add
xchg
push
loope
and
mov
xchg
imul
sbb
sub
imul
jl
pop
pop
pop
pop
imul
ret
je
bound
outsb
add
popa
neg
jg
mov
sub
int3
les
xchg
cmp
in
fcoml
lcall
int
cmp
mov
fadd
mov
xchg
pop
daa
xor
mov
frstor
and
int3
mov
sbb
mov
out
aaa
inc
mov
jo
dec
and
mov
xchg
hlt
sarl
lea
xor
xchg
jae
leave
dec
shr
daa
cli
push
das
aam
pop
mov
pop
or
dec
mov
data16
lret
insb
out
jb
mov
lock
incb
leave
int3
jne
and
mov
jmp
mov
out
pushf
jmp
inc
or
orl
sahf
cmp
lods
push
add
mov
xchg
pop
js
inc
xor
roll
pop
mov
loop
sbb
jno
push
in
into
out
icebp
test
je
push
jmp
scas
icebp
ljmp
or
addr16
roll
outsl
nopl
test
jmp
cs
push
xor
neg
iret
stc
pushf
icebp
inc
mov
hlt
ret
lods
adc
jns
mov
lock
xor
arpl
rcrb
xchg
out
in
sbb
jecxz
push
adc
mov
mov
aas
into
cmp
pop
xchg
or
sub
andl
or
adc
cmp
pop
cmp
in
cmp
push
loope
cmpl
xorl
cmpsb
lahf
dec
loop
inc
pop
dec
fisttpl
pop
movsl
sahf
push
cs
iret
jl
rcrb
sbbl
jg
cmp
sbb
xchg
push
lods
imul
lret
cmpsb
sahf
out
adc
push
cmpsb
lret
out
add
popf
cmp
sub
popa
cmpsl
adc
addr16
cmpsb
leave
sbb
jae
push
add
mov
jns
out
dec
in
punpckhbw
adc
xor
js
jecxz
lret
ds
mov
jae
rcrl
xchg
les
jne
jg
fiadds
or
mov
or
pop
pusha
xor
fwait
push
mov
cmp
mov
push
popf
fistpl
sahf
fisubl
cmpsl
mulps
xor
cmp
mov
aad
icebp
or
repnz
and
and
xlat
mov
adc
scas
pushf
push
push
cld
aas
ret
addr16
xor
push
sarl
jo
cli
add
sbb
in
xor
ficoml
or
pop
cmpl
add
adc
clc
sbb
and
inc
daa
mov
loopne
loopne
in
push
dec
insl
jmp
imul
aas
jb
jnp
aas
jns
aas
icebp
ljmp
mov
std
ja
sbb
and
jg
nop
or
push
fistpl
shl
jo
xor
orb
mov
mov
mov
mov
and
xor
lock
hlt
adc
nop
imul
pop
xchg
mov
ss
fwait
jb
out
pop
das
mov
push
clc
and
negb
lret
iret
jge
cli
sahf
mov
ds
loop
int3
test
dec
xchg
add
ljmp
icebp
jge
dec
mov
popa
and
stc
push
pop
mov
jb
sti
mov
mov
out
or
mov
jmp
gs
or
in
cmp
sbb
inc
or
pushf
nop
call
sbb
aas
sbb
in
into
fimull
rclb
in
popa
ja
popa
out
test
stos
sbb
cld
movsl
in
xchg
mov
push
sbb
sti
xchg
jb
add
inc
inc
or
test
loop
sti
leave
add
mov
hlt
dec
leave
adc
or
cmp
stc
pop
and
movsb
fnstsw
lret
ja
xor
les
jo
mov
push
cmpsb
dec
data16
popf
aaa
into
push
popf
mov
popa
lock
into
in
xor
mov
vmovapd
jnp,pt
push
scas
ficoml
test
mov
mov
pop
loope
outsb
out
into
pop
xchg
push
cmpsb
sub
add
pop
leave
mov
repz
loopne
hlt
mov
scas
xchg
push
mov
adc
add
cmpsl
sbb
mov
lods
popf
stos
cmpsl
add
aad
insb
cs
sbb
add
loope
test
cltd
mov
out
dec
pop
cli
pop
inc
ret
mov
mov
push
js
or
inc
movsl
adc
into
inc
jbe
out
lret
pop
inc
and
pop
jmp
sti
add
xchg
aam
sbb
shl
mov
cmpsb
jo
sahf
mov
inc
adc
addl
push
push
dec
faddl
inc
jmp
lea
out
ret
mov
push
xor
mov
jmp
xor
cmpsb
es
pop
loopne
push
sbb
rcl
xchg
mov
pop
lds
dec
sahf
ljmp
lods
stos
pop
inc
faddl
fdivs
aaa
div
cmp
jge
out
jnp
std
jmp
dec
jge
fs
jmp
orl
aad
sbb
or
enter
xchg
lcall
pop
dec
push
mov
pop
lahf
pop
xchg
sbb
xor
jp
or
push
mov
xchg
test
ffreep
sti
out
mov
cli
xor
sub
cmc
or
aam
adc
popf
jmp
divb
int3
loop
ss
shll
fisttpll
mov
sahf
insb
adc
inc
cmp
xchg
adc
pop
xchg
cwtl
int
inc
jo
notb
jge
mov
pop
push
inc
out
mov
cmpsb
jecxz
mov
push
test
int3
mov
and
loopne
loop
xchg
pop
xchg
lock
cmc
aas
push
imul
xchg
and
sub
add
or
mov
dec
lods
jne
pop
mul
in
mov
jne
addb
cld
int3
sti
jmp
push
inc
pextrw
call
xchg
xchg
std
sub
or
daa
insb
xor
cmp
adc
mov
cld
pop
add
outsb
xchg
call
xor
popf
or
mov
or
add
faddl
sti
outsl
fdiv
cmp
mov
out
inc
imul
mov
gs
cmp
or
push
push
jmp
mov
xor
and
and
adc
pop
or
cmp
xor
mov
es
pop
ja
stc
cmp
xor
mov
lods
int
adc
jecxz
out
inc
scas
into
mov
cmp
xchg
es
add
jg
or
popf
add
je
test
add
pop
pop
add
loope
lret
jp
js
mov
movsb
xor
jp
stc
dec
repnz
sbb
adc
push
xor
arpl
lret
cli
repz
ja
data16
push
sbb
paddusb
sti
and
test
aad
mov
mov
test
enter
or
test
push
xor
daa
ss
pushf
rcrb
sahf
flds
inc
add
in
mov
cmp
test
add
or
push
xor
mov
lret
je
push
enter
xchg
pusha
mov
cltd
cmp
inc
push
out
sub
lret
std
mov
fs
dec
test
in
cli
ret
and
dec
cmp
pop
mov
and
xlat
hlt
and
inc
sub
mov
iret
fnstsw
lods
fs
rorb
adc
gs
pop
lret
mov
clc
rclb
mov
pop
mov
aaa
push
mov
in
adc
out
dec
shll
push
data16
cmp
xchg
push
sub
call
add
add
aaa
jae
cwtl
adc
enter
vmwrite
add
xchg
aam
icebp
pop
add
and
or
xor
mov
sub
xchg
outsl
dec
popa
or
jmp
pop
les
movsb
mov
jle
inc
adc
xchg
icebp
mul
out
push
sbb
imul
popf
mov
insl
in
and
jo
jnp
outsb
sbb
mov
rclb
mov
xchg
push
xor
and
mov
rcr
jecxz
xor
leave
inc
js
xor
jo
sub
shll
iret
call
mov
mov
jg
push
fsubrl
jmp
push
adc
and
leave
push
call
out
jmp
fisubs
enter
mov
add
dec
movsb
xor
mov
stos
sub
stos
sub
dec
push
stc
xchg
push
or
notl
outsb
in
lods
pop
sahf
inc
jp
and
mov
mov
sbb
fidivrs
xor
aaa
daa
hlt
sub
pop
repnz
xor
adc
aad
arpl
js
mov
and
inc
das
xchg
orl
ret
outsb
mov
cltd
sbb
lcall
mov
cld
cmp
mov
sub
lods
clc
insb
mov
stc
mov
push
arpl
sub
push
and
dec
daa
sbb
cltd
pop
stos
sarb
mov
fnsave
fwait
inc
mov
xor
lock
data16
add
in
jae
mov
mov
pop
xlat
fdivr
loope
outsb
lret
mov
imul
xchg
mov
push
arpl
push
add
mov
mov
andl
das
xor
push
add
cld
pushf
dec
sbb
xchg
push
cwtl
mov
adc
insb
xor
push
insb
pop
icebp
xlat
dec
insb
rcrb
mov
mov
cld
cmpsl
pop
clc
out
stc
jp
mov
xor
fldenv
and
in
sar
cmc
jo
iret
mov
imul
seta
aad
bound
jae
test
xor
mov
push
add
inc
jge
mov
pop
in
notb
lock
rcrb
inc
ljmp
in
insb
clc
icebp
mov
jl
push
xchg
or
imul
lahf
push
sbb
fdivr
mov
pop
xchg
idivl
sub
pop
jnp
lahf
lcall
pop
xchg
cmc
xor
xchg
mov
adc
add
xor
test
test
adc
push
push
mov
adc
mov
mov
xor
or
bound
movsb
jbe
sub
or
push
inc
in
lcall
mov
jl
mov
icebp
ret
jp
xlat
jmp
xor
fdivs
inc
lahf
sbb
mov
xchg
fstpl
in
mov
adc
and
push
or
scas
sbb
int
das
idivb
cmc
shrl
jbe
mov
cmp
scas
inc
adc
push
sub
jnp
sbb
adc
out
cmpsl
jg
push
mov
lcall
jne
rcrl
mov
rcl
test
jbe
pusha
lods
repz
dec
push
out
imul
sub
test
pop
bound
mov
add
push
push
fsubr
push
push
stc
daa
pop
mov
xchg
mov
lcall
fsubs
mov
add
adc
fsubrl
stc
cmp
fcompl
movsb
outsl
ds
sbb
imul
add
inc
in
ljmp
and
sbb
clc
lea
mov
xor
in
pop
inc
repnz
scas
icebp
mov
push
std
mov
jl
dec
xchg
js
ljmp
push
xchg
push
xchg
pushf
cwtl
test
add
stos
cmpsl
dec
mov
insb
cmp
outsb
mov
push
scas
int
jne
jno
loop
push
aad
ucomiss
je
xchg
cli
fcoml
pop
pushf
sub
cmpsl
sub
out
ds
and
xor
add
icebp
mov
add
rorb
test
push
lcall
jb
push
xlat
repz
shrb
out
mov
mov
aam
out
cmp
mov
mov
cmp
bound
xchg
clc
fwait
push
sbb
push
sbb
sub
je
xchg
and
inc
xor
add
js
pop
sbb
push
inc
inc
push
fdiv
sbb
in
or
pop
les
jmp
inc
into
jnp
es
push
and
sub
or
scas
je
arpl
sub
lcall
enter
jnp
pop
fstp
push
sub
call
insl
mov
out
loope
hlt
adc
add
iret
push
xor
add
into
incl
or
aad
imul
jae
std
sbb
push
jns
int3
cmp
xor
pop
adc
lret
jo
scas
lods
add
inc
inc
in
mov
bound
mov
mov
push
sub
push
leave
sarl
into
insb
cs
cmc
lea
push
inc
jne
repnz
and
scas
fsubrl
iret
adc
cmp
pop
or
xor
jp
jbe
dec
mov
scas
dec
mov
xor
cmp
mov
xlat
jbe
cs
in
xor
push
cmp
push
jbe
fdivrs
sbb
cmc
push
mov
ljmp
stos
fcmovbe
hlt
movsl
jb
sub
or
jae
pop
pop
pop
out
xor
or
or
out
bound
adc
lret
out
stc
nop
adc
push
jbe
lea
popa
sbb
push
loopne
jae
sub
sahf
cli
dec
clc
je
jge
scas
add
cld
hlt
shlb
push
lea
mov
ljmp
and
jp
outsb
stos
pop
cmp
mov
cmpsb
push
clc
adc
sub
xor
call
movsb
lods
pop
test
mov
imul
add
sbb
sbb
daa
mov
push
das
iret
dec
add
mov
int3
ret
add
jp
ja
add
cmc
rolb
lret
mov
inc
cmpsb
aad
xor
mov
xor
inc
adc
mov
mov
mov
push
imul
jno
cld
hlt
xor
js
fstpt
cwtl
aad
fdivrs
or
out
xor
lret
divl
hlt
cmp
dec
inc
imul
dec
mov
sub
xchg
mov
call
mov
test
ds
insl
gs
xor
adc
cmc
cltd
sbb
scas
mov
xchg
mov
adc
cmp
add
push
cmc
das
xchg
out
fwait
jb
aas
inc
test
xchg
out
mov
iret
nop
xchg
sub
movups
push
mov
mov
imulb
or
jns
lods
roll
jl
outsb
cmpsb
stc
sahf
pushf
jecxz
imul
out
repnz
call
mov
cs
cmpsl
std
mov
mov
jae
xor
dec
sti
dec
push
push
clc
aam
cltd
cwtl
lahf
xlat
cmp
cmp
mov
and
lock
mov
aam
ror
cmpsb
cmpl
shl
mov
arpl
repnz
sub
mov
int3
hlt
out
pop
mov
or
jecxz
mov
loope
outsl
mov
pop
out
xchg
adc
loope
pusha
repnz
xchg
xor
xchg
and
adc
dec
adc
lcall
adc
into
push
fs
aam
cs
daa
add
aaa
inc
lds
pushf
dec
imul
sbb
adc
in
sbb
push
push
mov
arpl
addb
ds
out
and
dec
xchg
jp
ja
ret
cmc
je
pusha
mov
lret
ja
ja
mov
test
adc
jbe
ret
arpl
ja
push
lahf
test
iret
inc
xchg
and
rorl
cmpsb
xor
into
add
jge
lods
inc
push
aaa
das
add
popf
push
ja
add
cmpsl
pop
popf
mov
bound
fiadds
test
dec
imulb
incl
push
lahf
push
cmp
mov
mov
mov
ss
dec
stos
pop
loopne
int
nop
call
jbe
repz
mov
adc
pop
in
jg
scas
js
or
xchg
divl
dec
inc
jge
and
aam
jnp
loopne
jecxz
add
adc
int3
mov
neg
mov
pusha
mov
fcmovnu
ja
xchg
xchg
jmp
lahf
in
ficompl
sbb
popa
ds
repnz
lret
jge
lds
mov
int3
pop
adc
lret
out
cmc
inc
addl
daa
hlt
or
adc
pushf
jmp
scas
mov
inc
mov
cmpsl
jb
fwait
cld
popf
pop
jle
jno
and
cld
or
cmp
push
gs
fcmovnbe
fldenv
and
addr16
das
sub
test
int
aas
in
inc
nop
stos
sub
xor
addr16
adc
fs
jecxz
clc
in
icebp
cli
add
sub
mov
dec
inc
ss
cmp
nop
sub
mov
lret
ret
sbb
jle
out
repz
out
ror
mov
dec
cmp
xchg
sub
mov
aaa
dec
test
mov
push
fisttpll
jnp
sbb
cmp
aam
insb
xor
aas
mov
mov
roll
aas
and
std
out
xor
adc
rcrl
jle
lret
add
sbb
nop
in
xchg
out
out
enter
stos
adc
insl
hlt
into
popa
mov
into
jbe
mov
mov
out
inc
xor
sub
pop
jo
ret
outsl
into
ss
sahf
and
and
test
das
js
fnsetpm(287
mov
mov
and
inc
ret
mov
push
sub
icebp
jl
adc
inc
stos
dec
cmp
xor
xchg
int
sbb
std
xchg
insb
cltd
or
sub
mov
adcb
mov
jb
shrb
jle
bound
push
repnz
jecxz
add
dec
gs
cwtl
pop
gs
into
je
dec
inc
jecxz
jnp
mov
cli
adcb
in
inc
push
push
outsl
std
xor
and
cmp
in
idivl
pop
cmpsb
pop
mov
sub
pusha
sub
xchg
pop
xchg
xchg
mov
and
pushf
add
cmp
fldl
push
mov
and
adc
push
cltd
inc
xchg
addr16
decl
ret
sbb
es
cmp
insl
jo
cmp
repnz
nop
mov
or
mov
xchg
push
loopne
ljmp
xchg
imul
pop
sub
push
mov
jp
aad
mov
js
xchg
aad
mov
dec
loopne
adc
mov
shll
ret
push
icebp
inc
sbb
push
test
xchg
inc
or
mov
or
lret
fisubrs
sbb
dec
xchg
adc
jge
js
loop
mov
push
adc
les
and
xlat
stos
incl
xchg
mov
jbe
shl
jl
add
mov
jb
rol
mov
test
xchg
pusha
or
and
inc
xchg
jnp
xchg
lret
std
pushf
les
sbb
test
xor
dec
sbb
mov
sub
fiadds
shl
xchg
mov
xor
test
or
fldcw
mov
push
mov
addb
in
mov
fnsave
or
adc
enter
in
fbld
imul
sub
jg
in
inc
dec
repz
scas
test
jecxz
aas
sub
sti
out
cmp
xlat
outsl
push
ljmp
pushf
jle
insb
mov
push
aas
ds
dec
pop
call
pusha
add
jge
in
call
and
dec
add
and
jae
push
pop
lock
xor
cwtl
test
ret
sub
cmpsb
leave
stc
imul
cmp
mov
or
xor
enter
inc
pop
push
mov
cmpsl
adc
test
mov
and
inc
stc
aas
insb
mov
lods
xchg
out
in
inc
cmpsl
adc
cmpsb
or
mov
sub
inc
movsl
filds
ds
jmp
sub
mov
push
push
add
fidivl
add
cmp
adc
pop
push
daa
jns
push
lds
fs
push
out
out
mov
lret
sub
mov
push
jbe
adcb
cltd
ds
pusha
inc
lret
ss
push
sub
pop
or
cmp
adc
mov
stos
ss
shrl
aas
mov
add
mov
mov
ja
cmpsl
xchg
hlt
cmp
popa
and
jb
and
and
xchg
mov
xchg
enter
mov
stos
lcall
rcrb
xor
popa
sub
pop
xor
xchg
ret
xor
sub
mov
push
call
cld
mov
sub
sub
addr16
inc
add
jl
pop
sahf
pop
in
test
repz
pop
mov
mov
lods
sahf
shll
rcr
out
jns
push
inc
addr16
insb
stos
xlat
loopne
jns
lods
or
je
clc
andb
dec
jno
fiaddl
mov
popf
addl
jae
pop
mulb
into
sub
push
pop
or
push
inc
mov
lret
test
loope
sub
std
mov
unpckhps
fsts
outsb
push
push
fdivl
pop
movsb
jb
dec
movaps
mov
les
mov
xor
cmp
fisubrs
add
sub
jno
movb
mov
js
push
imull
js
sbb
enter
or
add
shlb
or
add
clts
mov
sbb
mov
sahf
sbb
das
xchg
mov
lret
sbb
pop
and
dec
adcb
dec
mov
cld
cs
jp
sbb
add
hlt
jg
inc
loopne
scas
scas
xchg
lcall
pop
call
repnz
sub
and
pop
loopne
add
jp
xor
fldenv
push
sub
inc
mov
test
and
lods
divb
and
ss
call
lods
fcoml
inc
xchg
lcall
xor
fldt
sub
and
pop
cwtl
ret
enter
sub
mov
mov
xchg
pusha
pop
data16
lods
outsb
sbb
cmp
mov
jne
loop
cmc
mov
out
aaa
std
cmp
insl
mov
jae
jge
das
fstpl
sarl
lock
jp
das
popa
xorb
xor
into
nop
cli
adc
lods
popf
lret
pop
mov
shlb
push
sbb
push
xchg
push
push
das
aad
and
daa
loop
ficoml
adc
dec
jmp
loopne
cmc
and
pop
inc
daa
test
hlt
icebp
cwtl
movsl
or
fmul
fsubs
cmp
mov
cld
fnstsw
push
sub
test
int3
add
hlt
pop
cmp
js
lock
out
sbb
sbb
fists
dec
fsts
and
xchg
lcall
loop
fmul
mov
lods
adc
das
mov
in
add
negb
lret
jmp
xchg
fcmovb
xlat
sub
sub
xchg
shlb
scas
push
jp
mov
pop
cmp
add
jno
jb
cmp
mov
fnsave
jge,pt
xor
jbe
decb
or
jp
and
and
push
fstl
in
jbe
adc
jnp
mov
je
call
jnp
js
adc
add
das
fsubl
in
mov
test
mov
push
popf
xchg
sub
jo
cwtl
shrb
test
testl
rolb
dec
stos
aas
xchg
xchg
subl
dec
or
xchg
jmp
mov
and
xor
adc
fldl
dec
fbstp
sahf
pop
scas
cs
xorb
adc
inc
sub
xor
push
jecxz
jo
andb
imul
iret
mov
and
loopne
or
ds
xchg
cmpsl
push
clc
inc
stos
stos
enter
xchg
push
cmp
and
mov
fadds
les
adc
sbb
cmp
rolb
inc
jns
into
decl
sbb
xchg
pop
scas
loop
pop
and
leave
adc
inc
or
xchg
push
sbb
leave
cmp
je
pop
sbb
in
sub
push
out
dec
js
enter
mov
dec
inc
jnp
inc
clc
push
in
movsb
nop
xchg
cmc
test
in
pop
sub
loopne
sub
xor
daa
add
test
mov
push
or
out
rcrb
stos
out
xchg
ret
cltd
subb
rorb
add
out
out
insb
das
and
jle
push
js
enter
mov
out
mov
mov
inc
xchg
mov
pop
sbb
or
add
adc
rcll
mov
loopne
fldcw
mov
mov
mov
mov
pusha
aad
jns
decl
lock
and
ljmp
cmp
sbb
test
sub
mov
outsb
sbb
js
lret
repz
xor
test
arpl
add
adc
dec
xchg
dec
mov
inc
inc
xor
aas
lods
and
aam
sbb
lret
mov
add
jns
jno
daa
dec
pusha
xchg
icebp
or
mov
imul
mov
adc
in
popa
jp
sub
inc
adc
daa
push
in
sbb
iret
out
add
mov
daa
mov
xchg
stos
mov
shlb
sub
mov
and
mov
xor
addr16
dec
frstpm(287
inc
mov
inc
mov
stos
sbb
sahf
aad
pop
pop
aas
sahf
cmc
add
mov
pusha
fs
cmp
movsl
cmpsl
lock
dec
sub
xor
add
pushl
jp
addr16
cs
hlt
xlat
in
imul
xchg
add
pop
leave
shl
mov
xlat
arpl
jnp
data16
xchg
cs
push
data16
in
dec
out
lret
pop
aas
push
call
jne
sbb
sti
jg
pop
aam
and
hlt
and
jne
idivb
mov
push
sbbb
or
jmp
sub
pop
mov
fst
dec
xor
es
cwtl
loopne
pop
cld
inc
cmp
lret
xlat
scas
lea
cmpsl
xchg
jecxz
test
in
pop
mov
lods
cmp
pop
pop
les
lock
fstps
imulb
imul
scas
shrb
test
or
loop
repnz
in
popa
xor
sti
push
mov
cmp
xchg
icebp
sub
popa
pop
aad
mov
jne,pn
xor
cmpsb
cmpsl
inc
xor
jb
sbb
sbbl
fcoms
add
cld
jb
in
imul
test
outsl
xor
sbb
jns
mov
ss
lods
aad
or
sub
frstor
repnz
xchg
repnz
push
loop
xor
xchg
fstl
jg
div
ljmp
cmpsb
mov
jp
sbb
mov
jo
ffree
dec
aas
xchg
ljmp
cs
jge
incb
es
dec
negl
mov
dec
mov
fdivs
sbb
aad
addr16
push
imul
jge
int
mov
jae
in
inc
pop
addr16
mov
sbb
into
pop
xchg
mov
pop
inc
fnstsw
pop
sbb
movsl
bound
fs
sbb
jl
test
sbb
xlat
int
loopne
adc
das
cmp
dec
push
dec
shl
in
and
out
add
test
inc
lds
sarb
sub
das
or
xchg
cltd
nop
ror
mov
and
xor
hlt
or
jb
xchg
in
fs
lcall
pop
jae
test
std
lds
ja
mov
mov
addr16
and
in
test
xchg
daa
cmp
mov
pop
std
sub
pop
cld
sub
sub
xlat
jns
clc
cmc
call
nop
mov
push
ja
mov
cmp
addr16
out
repnz
push
add
and
call
into
imul
dec
hlt
cs
jno
jl
xchg
lock
add
out
popf
dec
cmp
mov
ficoml
lods
rep
mov
shll
loope
add
adc
mov
xor
in
cmp
mov
mov
hlt
xlat
cwtl
mov
es
clc
sub
lds
pop
and
jne
in
call
jo
mov
and
clc
cmp
cli
adc
mov
sahf
cwtl
dec
mov
repz
out
str
mov
inc
sbb
out
mov
lods
aad
xchg
adc
xlat
cs
outsl
jmp
xchg
lret
or
inc
lds
jne
xlat
mov
repz
rolb
stos
cmp
inc
jmp
lea
push
hlt
cmp
pop
xor
mov
pop
inc
push
push
jg
cs
xor
jg
cmp
js
mov
rorl
cmp
xchg
jmp
or
inc
mov
inc
cltd
les
rcrl
cltd
push
mov
int
xchg
mov
test
pop
movl
mov
and
pop
out
sub
fwait
ss
adc
sbb
dec
jne
pop
mov
mov
xor
add
imul
outsl
repz
es
xchg
xchg
pop
inc
dec
xchg
fcmovb
fidivrl
outsl
or
inc
cli
lahf
ja
jbe
fbld
xor
pop
clc
out
stos
icebp
inc
rcrl
leave
mov
cwtl
push
mov
jo
loope
dec
add
xchg
sub
cmp
mov
std
xchg
push
jl
mov
xrelease
inc
inc
mov
mov
mov
mov
lock
or
xlat
pop
movsb
adc
outsl
xchg
pop
sub
pop
shll
pop
outsb
mov
and
ffree
push
pop
xchg
add
sbb
je
data16
mov
aas
push
push
jle
test
test
pop
sub
push
out
out
notb
jecxz
movsb
jl
mov
xor
repnz
lock
ss
and
popf
mov
add
aad
loope
bound
orl
std
lods
pop
test
scas
or
push
mov
pop
loopne
or
jns,pt
mov
push
xchg
xor
das
xchg
mov
xchg
jne
call
dec
mov
sub
pusha
sub
dec
out
inc
das
xor
test
cmp
cmp
dec
stos
push
mov
jp
mov
jo
jae
push
shll
sbb
and
xchg
out
in
push
fldenv
push
inc
inc
add
push
iret
in
mov
or
sahf
or
jle
and
jg
jae
arpl
jmp
xchg
mov
xor
lret
in
filds
jae
add
push
mov
adc
or
cmp
negb
add
jne
mov
and
cmpsb
and
es
clc
scas
jl
mov
mov
ret
pop
out
mov
dec
add
test
ds
sahf
pop
repnz
add
mov
dec
rcrl
dec
notb
lcall
or
test
popf
lea
andnps
mov
push
mov
or
or
dec
cli
jnp
jb
cmp
test
call
push
loope
pop
dec
cmp
add
dec
int
outsl
jge
lods
jns
addr16
sub
push
lret
cwtl
lcall
sbb
js
mov
ja
shlb
lcall
ret
push
mov
cmp
adc
leave
sbb
mov
lods
jl
sub
mov
cwtl
sub
pop
lahf
jo
and
or
inc
ljmp
mov
dec
push
push
das
loop
loopne
inc
cmpsb
push
iret
jne,pt
dec
dec
lock
insl
pop
add
adc
pop
ds
sbb
sbb
fstpl
push
aaa
clc
arpl
xor
imul
push
pusha
sarl
outsb
pop
xchg
mov
cli
aad
dec
mov
subl
cmp
dec
fucomp
mov
mov
rclb
or
xchg
push
add
dec
jbe
and
stos
jb
push
fcoml
pop
pop
jp
jl
jp
into
pop
inc
test
inc
cmp
lahf
pusha
leave
or
pop
lea
add
je
jmp
pop
lds
adc
scas
jb
outsb
jp
adc
sbb
jge
pop
imul
aaa
rorl
pop
sub
cmp
mov
bound
or
push
mov
in
mov
mov
mov
icebp
push
xor
mov
data16
sbb
jo
outsl
nop
clc
xorl
xlat
mull
and
test
repnz
daa
test
rol
xor
mov
pop
clc
pop
fwait
aas
push
xor
and
repnz
dec
and
xor
lahf
push
xchg
adc
jnp
dec
loope
inc
jl
jge
imul
cmp
or
cmc
sbbb
push
and
xchg
mov
mov
cmp
nop
mov
bound
iret
shlb
cmpsb
in
pop
and
mov
call
ret
mov
dec
outsl
stos
je
gs
push
jge
inc
das
rcll
jno
in
push
pop
pop
inc
push
je
sub
inc
and
dec
das
iret
int3
adc
sti
pop
aaa
sbb
sbb
sbb
xchg
add
lds
popf
cmp
repnz
lea
lahf
das
leave
sbb
sbb
push
int3
jp
andl
aam
daa
mov
push
pop
movsl
adc
jecxz
cmp
adc
movsl
cmpsb
mov
mov
out
inc
loopne
pop
mov
nop
mov
data16
mov
push
mov
mov
and
leave
pop
xchg
rcrb
cmp
push
mov
dec
pop
dec
test
aad
jnp
mov
test
sti
cmp
int3
loop
and
movsb
das
lret
mov
rdpmc
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
inc
cmp
sbb
shll
mov
ja
imul
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
stos
xchg
push
sarb
fmull
add
mov
push
addb
adc
pop
loope
lcall
sahf
bound
mov
shll
mov
shll
cmp
dec
stos
lret
je
cmpb
push
mov
sbb
cltd
push
xlat
scas
dec
cltd
stc
adc
movsl
in
push
pop
popa
pop
and
cmp
mov
sbb
lcall
je
aaa
orb
outsb
jmp
jge
rolb
adc
sub
in
jo
popa
inc
mov
push
cmp
sub
dec
mov
shll
movsb
mov
cs
popf
xor
jmp
popa
imul
shll
mov
shll
mov
sbb
aad
mov
mov
cmpsl
xor
mov
and
movsb
lea
sbb
shll
mov
ss
movsb
mov
sbb
aaa
out
inc
lea
sbb
push
xor
movsb
mov
or
shll
mov
shll
movsb
cwtl
popa
imul
shll
mov
shll
push
mov
imul
xor
in
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
outsb
mov
shll
scas
mov
sbb
shl
mov
shll
movsb
fsubs
sub
shll
test
mov
aaa
out
les
shll
sarb
shll
mov
xor
movsb
test
imul
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
shll
movsb
mov
sbb
shll
mov
rcrl
mov
sbb
shll
mov
pop
movsl
in
dec
xor
fstps
and
jb
lods
lret
add
mov
pop
push
insl
adc
cmc
in
pop
daa
add
sub
pop
adc
movsb
inc
loop
fcmovnu
out
sbb
push
push
movsl
and
pop
lea
dec
jb
rolb
pop
outsb
sbb
push
les
jne
std
ja
jp
push
popa
sub
push
xor
xlat
popa
cmc
xchg
pop
jne
lock
pop
stos
out
xor
dec
lods
mov
in
xor
xor
insl
mov
and
add
das
ret
adc
adc
dec
and
call
and
adc
jbe
fbstp
test
outsl
por
repnz
popf
adc
and
mov
mov
in
movsb
ret
jge
fistpll
fdivrs
or
or
cs
fld
mov
add
add
mov
cmp
roll
scas
lret
stc
out
dec
adc
dec
sub
or
lds
or
pop
shr
xor
stos
sub
pop
testl
jle
nop
jge
decl
push
mov
dec
pop
sbb
adc
sbb
sti
pusha
les
shll
mov
fdivl
pop
popf
imul
adc
arpl
stos
add
testb
cmp
rcrb
mov
mov
test
cmp
daa
dec
push
int
push
jl
push
mov
add
sub
mov
int3
lahf
jno
mov
faddl
jno
add
popa
adc
loopne
add
xchg
mov
idivl
pop
in
dec
add
inc
test
clc
mov
mov
jmp
fistpll
add
popf
xchg
lret
ja
pop
sbb
decb
and
xor
or
mov
test
xorl
mov
mov
dec
push
outsb
cltd
sub
xor
test
ja
rclb
enter
addr16
xor
in
jl
pop
and
cmp
sub
popa
lea
bound
mov
sti
push
rep
or
cmc
jb
jge
sbb
xchg
xchg
push
jge
jbe
sarb
cmpsl
inc
jnp
add
dec
xor
mov
fldcw
pop
inc
mov
mov
mov
push
dec
mov
inc
mov
icebp
fcomip
or
inc
cmpsl
sbb
push
or
cmp
outsb
jecxz
dec
dec
ret
pop
movsl
xorb
flds
pop
int3
cs
pop
sub
enter
ficoml
adc
and
xchg
jmp
bswap
pop
mov
cli
imul
shlb
mov
xlat
outsb
out
mov
rcrb
in
int
inc
jne
jns
daa
cmp
dec
adc
jge
iret
stos
mov
adc
xchg
clc
jns
pop
cmp
and
mull
leave
cmp
xchg
arpl
push
mov
movb
insl
xlat
incb
loop
fsub
xchg
addr16
aad
push
es
mov
push
aas
xchg
push
mov
xlat
sar
xor
push
mov
orb
fstpl
dec
and
ja,pt
adc
pop
popa
dec
outsl
out
out
cltd
aas
loopne
imul
addr16
inc
jnp
mov
sub
jmp
repnz
dec
das
jg
push
loop
or
call
xor
les
out
mov
sahf
inc
push
dec
hlt
add
jbe
fcoms
mov
notb
inc
rcrl
frstor
add
jb
pushf
fadds
outsb
out
dec
push
mov
mov
and
subl
leave
out
jecxz
mov
enter
inc
mov
xor
fistpl
jnp
push
ret
jns
rorb
xorl
mov
xchg
sub
ljmp
sbb
or
fisubrs
xor
leave
subb
ds
mov
push
repz
and
hlt
in
dec
aad
jae
fdivrs
sarl
mov
mov
sbb
sub
xchg
ss
fcmovu
cld
aad
and
jnp
fcomp
xor
btr
add
inc
packsswb
pusha
add
mov
mov
lcall
or
mov
sbb
xchg
jae
loopne
jle
pop
dec
mov
fisttpll
mov
pop
mov
jl
aam
outsb
enter
fcmovnbe
aad
mov
push
lahf
rcrb
clc
jbe
push
inc
sbb
push
call
mov
push
add
into
cmp
push
push
dec
add
test
pop
in
popa
mov
push
pop
xor
push
dec
jmp
bound
lods
clc
dec
std
out
push
mov
ficomps
fstl
push
jae
into
arpl
cmp
mov
sub
cmpsb
mov
lcall
inc
in
sbb
add
test
pop
pop
mov
lds
add
or
pop
popa
mov
out
sahf
dec
jp
insl
test
fnsave
mov
das
adc
or
push
les
jno
ffree
inc
dec
lea
xchg
jno
rcr
jp
jno
lock
mov
call
xor
adc
idiv
xchg
sbb
mov
pop
daa
lahf
lcall
fidivrs
and
dec
adc
insb
xchg
insb
stc
lret
pop
xor
leave
pop
dec
leave
in
lret
mov
cmpb
sub
sbb
ffreep
adc
rorl
or
sti
mov
sarl
push
pop
ret
addr16
sahf
xor
sbb
nop
cwtl
subb
ss
sub
sbb
mov
cmc
clc
xor
xor
mov
out
es
mov
mov
inc
dec
std
pop
in
push
jge
ret
jne
jle
mov
shl
iret
and
jae
shrl
sub
stos
mov
add
xchg
outsl
test
mov
iret
out
mov
js
in
push
push
call
adc
mov
xor
mov
sbb
std
xor
cld
mov
pop
pop
add
mov
lcall
dec
mov
pop
or
sbbl
dec
out
outsb
das
loop
or
fstps
inc
and
es
mov
add
fbstp
or
mov
push
dec
ret
mov
pushf
jecxz
mov
fs
fiaddl
mov
jecxz
push
lret
xor
mov
sbb
cmova
roll
fdivs
jae
mov
out
and
xor
outsl
adc
movsl
push
adc
mov
test
jmp
jle
xchg
mov
int3
xchg
add
in
inc
pop
nop
idivl
repz
rcl
sbb
jbe
xor
or
addl
add
loopne
ss
pop
push
xor
cwtl
inc
lock
enter
scas
in
pushf
mov
adc
fidivrs
es
jmp
xor
cmpl
ret
cld
pop
mov
xchg
jmp
jo
cmp
push
test
push
pop
gs
and
cld
or
and
andb
inc
mov
dec
sbb
pushf
sbb
pop
jecxz
aam
pop
xchg
or
jo
aad
jbe
cmpsl
lock
mov
fisttpll
jo
xchg
mov
mov
mov
loopne
scas
rcrb
shrl
push
mov
add
xchg
mov
dec
pop
or
jle
jge
xor
cltd
dec
inc
cwtl
mov
adcb
test
add
adc
cmp
adc
fisttps
ret
xchg
jo
mov
push
cmp
mov
push
movsb
nop
in
push
mov
or
jecxz
push
xchg
mov
pop
push
cmc
stos
bound
pop
fmull
test
int3
dec
aas
pop
mov
orl
bound
mov
loope
fsubrl
push
mov
jmp
call
add
cmp
jmp
pop
idiv
dec
lock
pop
dec
call
mov
imul
mov
mov
arpl
mov
dec
stos
mov
cmp
fucomi
mov
sub
adc
and
push
aad
sbbb
in
or
dec
into
jno
lods
das
jl
inc
add
pop
bound
and
lahf
pop
or
ficoms
bound
push
adc
in
pop
lcall
into
push
test
pushf
imul
les
imul
mov
mov
rcll
rolb
jno
dec
jmp
leave
mov
imul
sbb
inc
scas
pop
mov
and
loop
cmp
cltd
xchg
pop
movsb
mull
adc
lret
jno
stos
outsb
fdivrp
les
push
aas
lcall
mov
dec
adc
and
dec
add
push
iret
sti
movsl
lret
data16
xchg
pop
jne
or
mov
in
mov
inc
cmpb
mov
and
test
icebp
test
outsl
mov
scas
loop
lret
loop
xor
cmpsl
gs
push
add
lcall
adc
mov
cwtl
mov
and
push
popf
jmp
sbb
push
clc
mov
shlb
ret
sbb
test
test
inc
dec
mov
push
int3
nop
mov
outsl
pop
and
call
xorb
add
pop
stc
divb
sar
xor
lret
sarl
dec
xchg
jg
xchg
ss
add
outsl
cmp
ljmp
cmpsl
add
mov
jecxz
cmp
outsl
and
jo
xor
dec
icebp
push
shll
jmp
fisubrl
mov
jle
push
das
or
push
fwait
aam
clc
mov
lock
or
movsb
dec
cmp
cltd
stos
mov
push
cltd
fidivl
mov
int3
lret
jb
ja
addl
andl
js
sub
xor
push
ds
sahf
std
hlt
shrl
out
pusha
or
mov
dec
ljmp
dec
pop
pop
jno
jle
std
rclb
and
pop
add
stos
cmp
pop
xchg
call
decb
mov
pushf
or
mov
dec
or
pop
inc
dec
mov
pop
mov
xchg
xlat
add
or
jmp
or
and
jbe
hlt
or
pushf
mov
mov
imulb
gs
into
adcb
int
jmp
jne
mov
icebp
mul
mov
and
mov
sbb
push
inc
in
into
popf
push
jg
shll
cmpsb
cld
mov
mov
pop
je
ljmp
arpl
add
mov
movsl
fistl
xor
xchg
dec
sub
mov
frstor
push
popf
adc
lret
jae
rol
rolb
mov
andb
les
push
in
sahf
mov
rcr
xchg
cltd
sbb
dec
hlt
add
cmp
cmp
aaa
aas
xchg
xchg
and
out
out
mov
dec
insb
jmp
hlt
stc
aad
mov
cmp
scas
cli
je
push
push
cli
mov
mov
cmpl
movsb
fcmovbe
cmp
push
dec
mov
sub
test
fidivrs
insl
mov
dec
cmpsl
jge
ljmp
or
sbb
pushl
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
