leave
add
mov
rorb
pop
lds
mov
repz
mov
sub
bound
cli
insl
sbb
jae
xchg
les
add
or
andb
add
push
adc
lock
mov
mov
std
shrb
cmp
add
push
orb
lahf
in
push
xlat
mov
ja
pop
and
push
xor
pop
movsb
sbb
cmp
test
mov
stos
ja
xchg
cld
jbe
add
addr16
push
lahf
mov
jle
dec
or
mov
adc
inc
repz
das
sbb
sbb
leave
ret
mov
pop
jo
pop
lock
gs
push
mul
cmp
mov
pop
ja
pop
dec
gs
sbb
sbb
das
ss
cmpb
push
xlat
pusha
in
mov
fwait
mov
cmpsb
outsb
jne
ss
cltd
int
dec
das
repnz
mov
das
inc
xchg
push
cwtl
pop
mov
ja
xchg
lds
dec
stc
jae
rolb
repz
decb
leave
or
inc
daa
sub
sbb
push
mov
sub
lods
xor
mov
std
cmp
ja
mov
pop
push
adc
idivl
mov
or
lcall
outsl
int
xor
scas
and
jae
inc
stos
push
addr16
push
cmp
lods
inc
jmp
icebp
clc
mov
outsb
iret
call
cmpsl
rcrb
xor
sub
push
out
nop
pop
hlt
add
or
cmpsl
sub
das
mov
outsl
push
sub
pusha
in
cmp
test
fcmovne
into
cmp
iret
pusha
or
pop
cmp
movsl
orl
nop
daa
add
loop
mov
push
pop
jg
jle
bnd
pusha
add
mov
test
push
adc
aas
pop
negb
add
fst
sbbb
jmp
repz
scas
fsubs
mov
pop
xor
popa
out
inc
add
in
adc
and
inc
mov
cmpsl
cwtl
insl
cltd
push
in
push
test
scas
imul
or
into
loopne
clc
push
cwtl
or
or
push
jne
xchg
daa
sahf
and
push
test
mov
jmp
and
stos
insb
aad
jb
push
mov
push
adcl
lret
mov
outsl
leave
add
dec
ljmp
imul
or
inc
lahf
push
enter
pop
movsl
sub
iret
xor
sbb
enter
stc
adc
subb
jb
call
push
andl
cmp
jae
xor
int
sub
dec
sbb
push
fildll
adc
bound
lahf
pop
cmpsl
lret
negl
in
in
xor
adc
jecxz
jne
cld
xchg
and
or
jbe
enter
mov
mov
jae
cmp
push
out
fwait
dec
inc
dec
mov
push
sbb
adc
fcmovb
aaa
aaa
out
rolb
shlb
mov
out
mov
xor
pop
inc
test
adc
adc
int3
xchg
and
pop
aad
int
jns
je
cli
push
sub
addr16
rolb
mov
imul
pop
push
inc
push
add
jne
repz
outsb
pushf
aad
addr16
or
cmp
fcomip
in
adc
mov
dec
inc
lret
into
jnp
stc
inc
sub
lret
inc
ds
jmp
xchg
cmp
popa
jl
and
inc
fisttpl
test
shl
lahf
loope
aas
sub
stc
mov
test
adc
push
out
sahf
mov
mov
pop
lock
cmp
lods
mov
inc
sub
pushf
andl
add
loopne
xchg
int3
fwait
push
stos
xchg
adc
loopne
cltd
addr16
xchg
xchg
jp
sub
stos
test
popf
xchg
jbe
hlt
jmp
sahf
push
lds
push
lahf
xchg
inc
xchg
int3
insb
or
add
js
cli
sub
es
sti
les
cmpsb
mov
addr16
mov
ss
add
cli
mov
out
xchg
inc
icebp
lcall
jmp
jns
dec
stc
pop
clc
inc
clc
daa
push
aam
sar
mov
std
add
push
or
incb
popf
std
sub
push
dec
jecxz
push
sub
fs
leave
push
add
fnstcw
jo
fiaddl
into
xchg
cmpsl
sub
xchg
mov
mov
dec
or
inc
inc
rcrb
das
mov
inc
cmp
call
xchg
divl
scas
insl
rcrb
cltd
roll
add
negb
mov
jg
cmp
movd
shrl
stos
cli
test
cli
push
jns
lods
in
in
adc
sbb
or
xchg
mov
pop
jmp
jnp
cmp
and
rorb
or
std
cmp
mov
fimull
mov
daa
ds
pop
int
cmp
fiaddl
xchg
aas
ds
adc
rcrl
shlb
call
jmp
inc
dec
jb
and
imul
paddusw
mul
mov
jecxz
or
push
mov
add
bound
mov
sbb
jno
cmc
sub
xchg
mov
out
or
pop
jmp
jns
cmp
lcall
dec
mov
dec
mov
aam
cmp
or
mov
icebp
mov
xchg
test
mov
mov
addr16
push
add
fistpll
std
in
lcall
jmp
enter
xlat
lea
out
push
mov
dec
stos
in
adc
call
scas
jbe
adc
mov
push
subb
fcmovnbe
xchg
cwtl
push
pop
fistpll
cltd
jge
js
mov
xor
mov
sub
xor
push
push
addr16
jne
cli
sbb
fidivrs
xchg
insl
xorb
incl
mov
ficoms
cmpsl
shr
xchg
xchg
or
and
xchg
fwait
rcll
or
push
sbb
cmp
sbb
loopne
push
mov
pop
popa
add
out
arpl
or
ret
jae
jl
jo
je
add
push
jecxz
pop
int3
push
sbb
decl
mov
movswl
dec
jp
sub
les
inc
mov
aaa
addb
push
xchg
mov
fldenv
loope
inc
leave
or
jbe
popa
call
mov
aam
xchg
aas
aam
mov
pop
js
inc
lcall
mov
and
divb
push
add
adc
jne
sub
sub
cmpsl
addb
test
xor
scas
ss
fisttpll
pop
push
mov
icebp
ja
pop
fmull
and
inc
in
xor
scas
sub
jo
insl
sahf
jbe
lea
fidivl
mov
inc
inc
xor
aad
and
lea
or
pop
fs
movsl
scas
cli
fidivs
pop
aam
mov
repz
dec
mov
pop
xor
push
mov
pop
pusha
not
xor
push
imul
idivb
int3
in
mov
inc
mov
stos
icebp
bound
into
ret
cld
lcall
cmp
add
add
xor
xlat
pop
dec
pushf
push
cmp
xchg
fmull
cmpsl
and
xchg
fistpl
ret
xchg
inc
xchg
mov
sbb
test
adcb
jmp
shlb
ja
push
xchg
jmp
add
loop
jl
mov
test
pop
push
and
sbb
push
fistpll
xor
dec
sub
dec
or
push
imul
push
mov
sahf
adc
insl
clc
rolb
jecxz
lock
xor
int
add
pop
mov
adc
xchg
inc
sahf
data16
inc
dec
add
and
scas
in
test
es
test
pushf
jae
lods
pop
mov
pop
jne
xchg
mov
mov
mov
jle
push
and
inc
inc
data16
sahf
call
shll
pop
add
out
cmc
aas
inc
faddl
push
cmp
into
out
mov
in
js
push
jo
shll
mov
xchg
or
or
arpl
mov
negl
inc
push
cs
jg
jno
push
and
stos
sub
xchg
push
out
xlat
sub
test
ret
mov
decl
xchg
mov
xor
dec
lret
push
jle
dec
jo
inc
jns
cmc
jge
lcall
pop
xchg
dec
loop
lahf
sti
test
adc
mov
lods
mov
lahf
rcr
xor
jo
mov
xchg
push
sti
ss
pop
add
fsubr
in
cmp
jg
add
sub
lea
mov
jo
push
or
dec
push
cmc
mov
outsb
xor
mov
iret
dec
xchg
scas
add
repnz
inc
adc
or
xchg
cmc
pop
fcomps
sbb
xor
fisubs
std
mov
jnp
stos
loopne
sub
add
into
outsl
dec
push
lock
push
mov
test
and
inc
and
cmp
outsb
inc
lcall
fs
test
jne
movsl
inc
mov
mov
lods
ds
fiaddl
or
fldcw
xchg
fsubrs
aad
mov
movsl
xor
mov
pop
fs
mov
cli
sbb
stc
imul
aad
jb
stc
sbb
pop
iret
pop
andl
xor
push
shlb
adc
aam
lcall
xor
push
fcomps
jae
push
mov
sbb
cltd
dec
and
sub
aas
addr16
xor
fcomip
mov
push
jns
mov
sbb
mov
mov
repnz
xchg
xor
pop
in
pop
test
and
sbb
mov
dec
test
fisubs
movsl
pop
jecxz
test
lcall
cmp
pop
sub
rclb
or
xor
inc
dec
popf
in
aam
xor
das
shrb
sbb
mov
pop
notl
dec
add
inc
jae
xor
shll
inc
pushf
rcll
push
repz
push
xor
adc
push
icebp
dec
test
arpl
ret
cs
mov
out
jmp
push
addr16
lock
cmp
push
stos
aad
sbb
sub
xchg
jae
sbb
cmpsl
xlat
cmp
adcb
inc
rolb
xor
pop
push
xchg
cli
in
movsl
and
imul
in
add
clc
mov
int3
pop
xchg
dec
movsb
aam
scas
jmp
cs
dec
stc
repnz
stos
sub
xchg
mov
fisubrl
movsl
adc
xor
out
sub
xor
inc
movsb
sub
inc
rcr
mov
inc
movsb
nop
cmp
xchg
je
dec
insl
mov
out
sbb
nop
daa
fdivrs
xor
bound
inc
inc
sub
stc
pop
add
push
push
or
push
pushf
push
out
int3
cmp
je
mov
jb
pushf
mov
pop
adc
or
and
pop
xchg
mov
sahf
popa
push
notb
push
jae
xchg
xor
add
arpl
sbbb
repnz
jae
sbb
jge
pop
dec
dec
add
push
pop
push
and
lods
cmpsb
sti
sub
jp
push
dec
pop
dec
bound
outsb
pop
test
aaa
inc
mov
mov
adc
pushf
mov
add
stos
inc
xchg
movsb
mov
es
lock
pusha
and
shrb
xor
fwait
adc
push
sarb
mov
lds
cmc
xor
mov
into
out
test
xor
clc
push
into
mov
push
adc
push
xchg
or
nop
ja
cmpsb
jne
insl
dec
push
dec
scas
jo
mov
aaa
or
inc
ss
xor
gs
push
negl
movsb
pop
out
dec
int
loope
es
fstpl
and
out
cmp
inc
js
inc
pop
cmpsb
inc
rclb
xor
and
out
dec
fs
subl
in
lods
jns
fdivrl
test
jg
ds
lds
adc
out
mov
cmpsb
imulw
fadd
jl
mov
dec
cmp
out
cmp
sub
iret
movsb
mov
movsb
dec
in
xor
add
ja
sbb
fs
xchg
sti
jecxz
out
mov
mov
jb
fwait
lcall
inc
lds
xchg
jns
insl
mov
int3
int
inc
in
and
add
cmpsl
sub
xor
cwtl
jle
sti
push
imul
adc
push
mov
inc
cmp
data16
call
pop
pop
xchg
dec
jg
and
push
dec
int
les
das
push
rcl
xchg
pop
mov
push
sbb
mov
mov
repnz
fcomi
mov
ret
jb
stc
sub
pop
mov
addr16
xor
push
jecxz
loope
and
fmuls
jns
xor
push
inc
sbb
aaa
cmp
sub
mov
sbb
push
mov
je
into
sbb
sar
xor
mov
push
lock
xchg
inc
push
and
cmp
xchg
fwait
inc
sbbl
sbb
inc
or
jb
std
mov
shl
sbb
imul
adc
ret
dec
and
mov
sbbb
stos
aad
mov
and
stc
popf
test
xor
daa
out
mov
push
adc
inc
fmuls
sub
mov
sbb
jnp
shr
repnz
orps
mov
mov
orl
jg
adc
mov
xchg
jge
jns
or
cli
dec
andl
jp
les
test
lcall
test
cmp
enter
lahf
dec
xchg
push
js
loop
pop
sub
testl
pop
xor
popa
mov
dec
or
xor
push
pop
bound
jge
or
push
xor
in
popa
repnz
stos
sub
and
adcl
scas
xchg
and
jb
cmp
les
fwait
sub
loope
scas
call
fst
inc
dec
fisttps
dec
xchg
sub
aaa
push
and
xchg
shrb
or
mov
inc
mov
fdivrl
aad
xchg
sbb
rcll
shlb
fs
xor
adc
jns
leave
fcmovnu
inc
mov
jg
insl
xor
test
push
xlat
test
mov
ss
les
mov
mov
xchg
sbbb
mov
decl
sub
sahf
ret
or
adc
xlat
dec
sbb
sub
push
test
fsubs
outsl
add
mov
aaa
sub
xchg
mov
das
fsub
stc
mov
sbb
xchg
pop
fsts
sub
test
icebp
dec
loope
adc
mov
mov
sbb
pop
hlt
mov
shlb
xchg
mov
xchg
mov
inc
push
hlt
scas
adc
das
fidivl
cmpsb
xchg
mov
stos
lock
jo
inc
shll
fcoml
inc
fs
xchg
inc
test
fldcw
xor
insb
and
into
mov
aaa
and
add
add
and
outsl
nop/reserved
int
test
js
repz
sbb
ja
inc
xchg
push
mov
daa
pop
daa
mov
dec
pop
jmp
lods
jbe
or
lahf
faddl
sub
js
sahf
cmpsb
movsl
pop
xchg
and
enter
inc
data16
inc
inc
outsb
lahf
sbb
jae
cld
cmc
insl
stc
mov
jb
mov
mov
das
test
mov
mov
adc
mov
mov
xor
int
movsl
jl
sbb
fwait
inc
push
icebp
add
or
add
fdivr
cwtl
mov
inc
fisttpll
mov
adc
nop
mov
xchg
cwtl
movl
lods
cmc
stos
stos
in
inc
xor
sbb
imul
xor
arpl
ss
inc
push
sti
add
cltd
outsl
pop
and
sarb
lock
xchg
mov
in
popa
and
inc
mov
sahf
rcrb
inc
sub
xchg
sbb
pop
ss
in
insb
sub
sub
int3
cli
mov
jp
je
add
loope
iret
or
sub
inc
jno
mov
aad
mov
stos
test
cmp
cmp
leave
lea
jl
out
dec
mov
pop
hlt
push
inc
or
add
jecxz
int3
push
gs
aad
push
adc
addb
andb
js
jb
test
nop
fcomps
jg
mov
cltd
rcrb
lahf
adc
mov
cmpsl
popa
mov
jp
mov
or
push
int
mov
sti
in
push
fwait
push
xchg
out
or
mov
cltd
sar
xchg
push
and
repz
aas
sahf
sbb
xchg
push
dec
dec
dec
aam
js
xor
or
pop
xor
loopne
fistl
mov
int
pushf
push
pop
pop
add
sub
das
jge
cmpsl
add
mov
jp
push
xchg
mov
adc
rcl
and
ljmp
insb
fnsave
xchg
mov
or
and
push
enter
lret
adc
push
mov
cmp
adc
out
cmp
iret
sti
xor
xor
adcl
insl
mov
lret
sub
and
inc
or
push
loopne
cltd
pop
test
sti
adc
and
iret
fmulp
sub
mov
jecxz
mov
ds
lret
lahf
outsb
pop
jge
out
lret
daa
mov
jmp
gs
jecxz
clc
mov
lahf
push
aam
pop
gs
lock
or
jmp
popl
and
xor
iret
into
ret
jns
es
sbb
rolb
je
add
pop
test
test
in
dec
loope
loope
adc
xchg
push
pop
add
sarl
pop
addr16
cli
pop
mov
jbe
mov
nop
pop
mov
cmp
jb
jle
aaa
push
dec
enter
jnp
sbb
hlt
adc
sbb
in
dec
testb
push
int3
sub
and
pop
xorl
pop
aaa
jmp
mov
das
dec
sahf
xchg
xchg
in
loop
mov
adc
cmp
cld
mov
jns
sti
outsb
or
jb
sbb
mov
stos
cmpsl
jg
outsl
or
ja
xchg
cwtl
and
std
shrl
in
sub
call
sbb
push
jo
addb
xchg
pop
mov
adc
in
mov
repnz
adc
outsl
add
xchg
outsl
add
ret
sbb
es
repz
out
shl
fcomps
adc
and
and
stc
pop
pop
xlat
stc
stos
inc
and
and
jae
int3
inc
fisubs
movsl
xlat
flds
push
xor
jg
push
data16
jno
repz
fisubrl
pop
inc
testb
cmpsl
stos
jns
lea
call
push
sti
jmp
jno
cmpsl
mov
jecxz
in
adc
in
cwtl
push
shlb
nop
push
push
inc
lock
jg
es
lea
lcall
popa
popa
daa
mov
mov
sub
or
hlt
or
mov
add
xor
mov
lret
hlt
inc
sbb
pop
or
xor
lock
add
sub
xchg
outsb
mov
mov
pop
pop
je
iret
inc
add
xchg
xchg
lds
es
sbb
mov
add
insl
fidivrs
dec
adc
pop
jle
sti
pop
add
and
mov
pop
cmp
push
sbb
out
push
lahf
scas
icebp
hlt
mov
push
xor
inc
int3
dec
inc
and
rcr
fwait
mov
jb
aaa
es
push
incb
mov
xor
dec
pushl
cmp
dec
xchg
mov
mov
loop
hlt
clc
or
cmpsl
xchg
or
xor
mov
das
fsubrs
test
cmpsl
fildl
rorl
sub
adc
movsl
sub
pop
test
in
sbb
mov
xor
aaa
mov
daa
pop
pusha
xor
mov
ret
das
mov
push
sbb
les
cmpsb
out
mov
xor
add
out
cmpsb
inc
pushl
xchg
aas
inc
cwtl
pop
fistpll
mov
and
dec
sub
mov
jns
ret
jae
mov
popa
pop
imul
sub
lods
xor
jecxz
pop
out
lods
pop
mov
jg
push
and
inc
inc
aas
xchg
std
enter
ja
dec
ja
fs
lcall
add
xchg
movsl
lock
adc
incb
int
das
pusha
nop
jle
add
fidivrl
cwtl
sahf
in
mov
mov
dec
xchg
mov
popa
and
or
pop
popa
sbb
frstor
dec
mov
mov
mov
ds
xchg
jmp
xchg
and
into
int3
insl
test
in
adc
xchg
shll
push
mov
pushl
push
ret
cmp
sub
cwtl
push
clc
ret
mov
rorl
dec
iret
adc
pop
push
cs
xlat
xchg
push
xchg
xchg
ss
in
imul
xchg
jmp
aad
mov
add
xor
pushl
sahf
pop
dec
pop
adc
cmp
sbb
mov
mulb
or
jecxz
pop
out
mov
cmp
mov
push
jo
mov
insb
ljmp
fbld
xchg
inc
dec
sub
or
mov
xor
outsb
pop
cmp
fisttpll
std
mov
or
scas
ds
loop
cmp
insb
dec
repz
jp
push
imul
xor
jns
mov
dec
test
or
push
pop
cld
mov
or
mov
enter
dec
xor
or
into
mov
mov
and
lahf
and
pusha
inc
dec
cmp
scas
push
fisttpll
inc
test
xor
push
xor
stc
adc
lds
aas
cwtl
dec
js
or
lcall
mov
call
rol
mov
test
mov
cmp
orl
inc
push
mov
ss
inc
ja
xchg
cmp
sbb
mov
rorb
xor
jo
push
test
xor
ja
inc
or
lea
int
sub
mov
test
popa
xchg
popa
mov
cmpsl
add
inc
mov
lret
push
dec
iret
cmc
scas
dec
add
mov
call
rcrl
arpl
xchg
test
sub
addr16
dec
mov
std
decl
mov
sbb
inc
or
push
sub
incl
pop
jle
stc
cmp
out
adc
sub
mov
or
push
xchg
sbb
imul
and
jne
sbb
repz
lret
insl
int
mov
push
cmp
rolb
and
sbb
mov
add
js
mov
adc
in
mov
rcr
rcrl
into
mov
lcall
jae
xchg
pop
mov
sbb
mov
jmp
sbb
sub
sbb
adc
adc
aaa
andl
pop
dec
adc
in
scas
add
mov
mov
sbb
mov
outsl
sub
cmpb
sahf
cmpsl
sbb
jne
xchg
mov
fwait
lea
lret
pop
inc
sbb
aad
xchg
or
dec
mov
pop
adc
addr16
mov
cli
cmp
pop
aaa
add
cltd
cmp
push
and
xchg
mov
and
ret
ss
call
add
fldcw
ret
imul
mov
mov
mov
jno
stos
aaa
inc
loop
dec
pop
sbb
mov
insl
popa
pop
push
or
mov
pop
jmp
cmp
aaa
jecxz
adc
dec
pusha
hlt
mov
out
jo
dec
pushf
pop
pop
lods
xor
dec
andb
dec
push
sbbl
jmp
lret
lods
scas
bound
inc
xchg
dec
pop
sub
push
stos
jmp
mov
in
mov
sti
iret
push
lret
aaa
in
pop
cwtl
xor
cwtl
xchg
stc
xchg
es
mov
imull
mov
cmc
pcmpeqb
inc
and
outsb
out
lcall
dec
pop
mov
dec
test
rcrb
sti
xlat
clc
jl
cmc
mov
out
stc
jns
mov
shll
add
sbb
sbb
subb
loope
leave
xchg
shr
leave
sub
adc
adc
fs
ret
shll
adc
arpl
or
mov
and
lock
sub
jmp
mov
test
add
xchg
loopne
idivb
pop
inc
shll
xchg
jge
dec
inc
push
jne
inc
and
cwtl
xchg
ret
inc
aas
mov
movsb
out
mov
fsubrs
outsl
dec
cmp
jg
xchg
mov
iret
lods
mov
jge
cltd
push
or
in
push
sbb
jg
iret
push
push
mov
aaa
lcall
dec
test
cmp
fbstp
mov
lods
out
sbb
pop
cmp
push
sbb
out
xchg
loop
push
call
jecxz
icebp
cmp
sbb
and
lcall
cwtl
fidivl
fistpll
sbb
lret
pop
jl
inc
inc
cmc
add
adc
mov
sbb
mov
ret
cld
bound
test
cwtl
push
dec
add
inc
pop
aaa
std
aaa
mov
mov
cld
inc
test
mov
cld
push
xor
push
pop
jnp
pusha
jb
and
fwait
test
data16
xor
xlat
dec
add
jae
dec
xor
pop
pop
mov
jge
or
lcall
pop
dec
jno
repz
lods
data16
out
pop
jno
stc
add
sbb
jge
jmp
add
loope
add
xchg
cltd
push
mov
mov
pop
fistpl
pop
mov
jecxz
jge
or
fisubs
mov
jns
shlb
jmp
sbb
rorb
jmp
pop
daa
mov
cmp
inc
int3
add
lods
mov
ret
xchg
sub
sub
pop
cmp
movsl
jne
and
fyl2xp1
es
or
repnz
or
pop
push
jne
and
out
stc
xchg
adc
xchg
hlt
pushf
push
mov
jno
jl
and
add
out
inc
xor
arpl
cmp
and
mov
cmp
sub
cs
inc
pop
scas
adc
inc
push
push
fwait
stos
pop
mov
popa
xchg
and
adc
in
cmpb
mov
and
mov
adc
xor
ret
mov
sti
inc
mov
xlat
rcll
lds
xor
xchg
fldcw
cli
mov
mov
aad
es
push
mov
mov
rclb
adcb
xchg
push
lret
push
dec
mov
xchg
xor
mov
in
insb
das
lds
bswap
repz
pop
cltd
push
xchg
mov
push
outsb
xor
in
movsl
daa
flds
lods
mov
je
jmp
and
and
cld
icebp
negb
pop
ret
mov
and
rorb
add
outsb
and
xor
fadd
fs
inc
fstpt
pop
ljmp
sub
xor
cli
push
fldcw
popf
movsb
xchg
pop
loope
push
test
into
mov
enter
cmp
test
jns
and
cs
inc
pop
div
adc
jge
xor
js
mov
fcmove
push
daa
enter
jo
clc
pop
jne
pop
std
ja
adc
jmp
mov
sahf
xchg
dec
rcrl
dec
adc
ds
andps
divb
out
mov
test
mov
jge
jecxz
mov
push
sub
scas
clc
fldt
bound
test
mov
cmp
lahf
into
lcall
outsb
sub
gs
push
add
mov
mov
adc
jg
hlt
mov
xor
dec
push
pop
inc
mov
lea
jl
in
sbb
or
adc
test
or
jmp
add
sub
rorl
test
mov
jbe
aad
fwait
sti
inc
rcll
dec
xchg
mov
inc
es
clc
jne
loopne
cmp
ja
push
add
xchg
and
add
clc
xor
sbb
pushf
outsl
and
xchg
adc
cltd
mov
xchg
fdivrl
and
xor
sub
cmp
das
push
in
inc
icebp
mov
mov
fstps
dec
push
ja
jmp
or
jno
xchg
mov
enter
aad
mov
dec
mov
daa
cmp
sub
mov
adc
jo
add
fistl
push
arpl
in
pop
loopne
push
aad
in
add
cmovnp
jg
aas
push
int
inc
and
sub
push
rolb
shr
or
std
or
or
rol
xchg
add
adc
jecxz
imul
add
and
mov
outsl
inc
mov
inc
cltd
push
sub
adcl
movsb
push
mov
test
pop
xchg
pusha
xlat
lret
mov
inc
lds
lret
or
mov
xchg
sub
push
test
dec
hlt
xchg
sbb
dec
push
xchg
add
and
sti
arpl
push
ret
lods
jnp
add
not
incb
inc
cmp
in
inc
cmp
push
inc
jo
push
std
mov
adc
fcomp
mov
adc
dec
in
pop
dec
fisttpll
lcall
and
inc
mov
push
add
xchg
push
adc
dec
mov
ret
sub
dec
dec
test
sub
divl
loop
stos
in
mov
jle
and
fsubs
imul
leave
sarb
jne
cmp
test
sbb
push
mov
cmp
pushf
scas
xchg
imul
xchg
andl
notb
mov
ljmp
out
xchg
sub
push
pop
sub
adc
jne
inc
push
sub
pop
add
rcrb
rorl
mov
insl
sub
imul
scas
fbld
test
mov
mov
inc
mov
xor
loope
cmp
sub
pop
xchg
ret
xor
sbb
enter
pop
lock
shr
sti
mov
cmpsl
push
das
push
xchg
lds
mov
push
push
pop
pushf
out
pushf
push
push
insb
arpl
gs
roll
ret
ds
loope
sti
insl
jb
ss
fists
lds
mov
jmp
into
mov
out
fisttpll
cmp
dec
test
cwtl
cmp
xchg
leave
int
fisttpll
mov
xchg
inc
fildl
push
in
fimuls
lcall
fcomi
push
cmp
call
setge
movsl
jno
push
mov
mov
es
jecxz
cmc
ret
and
cmc
or
pop
lods
enter
sub
ret
push
cmp
repnz
sub
aam
outsl
sub
jo
xlat
shrl
pop
ja
mov
outsb
inc
in
lret
sub
adc
cmp
fdivs
pushf
and
add
icebp
cli
push
mov
sti
mov
push
pop
mov
jecxz
pop
sub
fcomps
icebp
test
cmp
subb
jno
scas
jno
pop
push
mov
leave
sahf
inc
or
xchg
stos
or
add
inc
and
and
aas
jmp
add
cmpb
push
adc
cwtl
push
jbe
inc
das
fwait
arpl
int3
mov
jb
and
scas
std
and
lret
inc
imul
mov
sub
sbbl
enter
xchg
or
mov
sub
push
aas
dec
test
and
das
mov
aas
and
mov
or
mov
sub
xchg
mov
pop
in
int
cld
jnp
xchg
int
xchg
bound
ss
sub
insb
push
xor
xchg
sub
clc
push
jbe
ja
lahf
sbb
cld
cmp
xor
adc
fiadds
sbb
or
in
or
test
cltd
fwait
fcmovnbe
shlb
repz
es
aam
fucom
xor
cmpsb
dec
fiaddl
testb
sbb
push
pushf
pop
xchg
pop
and
xor
dec
sysret
cmp
ret
test
les
mov
sbb
sub
lea
cmp
cmp
loop
sbb
jg
adc
ret
mov
dec
cmp
loopne
dec
and
pop
outsb
or
repz
mov
dec
lea
or
loop
fnstcw
cmc
mov
pop
adcl
ja
popf
mov
dec
stos
pop
aam
test
mov
sbb
adc
xor
xorl
repnz
lcall
mov
fcomp
aam
xor
mov
fidivs
mov
addr16
inc
das
lcall
jp
lahf
rcrl
cmpsl
sbb
test
popa
sub
pop
and
cs
out
push
les
movsl
iret
and
ret
jno
xor
cmp
iret
cmp
mov
je
daa
mov
into
popf
popa
and
fldl
mov
jge
xor
int3
jb
cmp
dec
fiadds
mov
data16
inc
fimull
inc
ss
xchg
cmpl
mov
shrb
mov
push
lahf
pop
push
or
lret
mov
outsl
mov
popa
mov
lds
daa
testl
jne
les
sbb
ds
data16
dec
arpl
pop
in
lods
mov
cmp
dec
mov
std
adc
cld
iret
movsb
mov
mov
inc
mov
sbb
xor
scas
incl
fs
test
mov
aad
sbb
test
inc
ja
stos
mov
pop
loope
ret
cld
int3
cld
addr16
add
in
mov
dec
push
xor
fsts
sub
pusha
sahf
fstpl
mov
or
and
jle
mov
dec
or
gs
ja
dec
std
jg
lods
inc
test
mov
mov
daa
inc
cmp
pop
jbe
cwtl
or
daa
jno
or
gs
sti
and
and
adcb
mov
aaa
js
inc
pop
sub
pop
cwtl
jb
sbb
push
iret
fstps
and
daa
push
lcall
call
mov
fadd
pusha
roll
pop
sub
cmpsb
sub
imul
fsts
lds
push
shlb
icebp
daa
mov
lods
out
fmuls
xlat
es
xor
sbb
push
jmp
jne
loop
cmpsl
mov
rorb
insb
daa
adc
arpl
jmp
jge,pt
jl
and
lcall
cld
mov
ljmp
lea
xor
dec
pop
loope
adc
sub
scas
inc
inc
mov
repz
mov
imul
adc
jno
ret
out
imul
dec
pushf
add
xchg
mov
pop
imul
sub
sbb
lahf
out
repnz
fs
dec
cmp
in
and
hlt
pusha
jns
out
ret
inc
and
and
dec
inc
arpl
sub
lods
push
pop
jne
sub
js
stc
scas
mov
rcll
mov
fsub
pop
inc
fnsave
pop
cmp
mov
lds
dec
xchg
lcall
mov
je
mov
adc
pop
xlat
loope
sahf
scas
dec
jmp
sbb
pop
jne
pop
adc
xor
push
std
jns
sar
push
add
fildll
andl
lock
inc
jle
pop
xchg
push
jge
repz
push
sub
sti
rol
mov
dec
sbb
or
lahf
inc
and
icebp
mov
lea
in
ret
push
jg
sub
rcrl
fstp
orl
ret
arpl
rcl
sub
push
cmp
cmp
and
in
ds
and
out
stos
cs
push
push
xor
add
sbbb
push
shl
mov
cmpb
jge
iret
mov
xor
push
imul
cs
mov
xchg
rol
sti
lret
and
or
mov
xlat
lds
mov
pop
out
mov
push
test
movsl
shlb
mov
and
daa
clc
stos
mov
movsl
jle
xchg
rolb
push
sbb
in
imul
mov
stos
lret
xchg
jno
push
jmp
and
stc
push
mov
push
in
jae
and
int
push
xor
mov
xchg
mov
jge
fisubrs
pop
lock
jb
icebp
cmpsl
push
mov
push
imul
or
pop
push
xchg
addr16
mulb
fdivrl
mov
cmp
cmpsl
stos
gs
or
mov
js
sbb
lods
dec
sub
mov
std
push
cmp
mov
adc
mov
mov
mov
push
bound
das
fstpl
call
sub
or
clc
inc
mov
mov
xchg
pushf
lret
add
inc
push
and
insb
inc
mov
xchg
andb
std
pop
imul
and
push
xor
dec
icebp
mov
xlat
inc
std
dec
pop
addb
push
dec
push
xchg
push
inc
int
add
lea
xor
mov
mov
lds
movsl
and
xchg
pop
aam
idivl
aam
aam
pop
loope
movsl
icebp
retw
jnp
mov
loop
xchg
mov
adc
dec
add
mov
int3
xor
cmp
xor
inc
add
xchg
stos
das
sahf
mov
xor
mov
repnz
pusha
ss
repnz
imulb
mov
sub
outsl
inc
sti
pushf
mov
lret
jecxz
xchg
out
test
addl
fidivl
xorb
movsb
dec
daa
add
jnp
pop
scas
jb
pop
loop
dec
push
js
or
jae
or
sbb
push
sub
jnp
dec
fsts
movsl
dec
out
or
push
lds
lods
out
pop
roll
int3
adc
pop
jle
sbb
adc
insb
fcoms
lea
jns
cld
push
insl
sbb
or
adc
fwait
std
xrelease
jbe
movsl
iret
add
leave
mov
and
cmp
idivl
lret
scas
in
pop
xchg
sub
xchg
mov
fsubr
mov
frstor
cmpsl
addr16
mov
rcrl
fs
test
lret
in
mov
jns
jno
jle
jmp
sub
or
inc
cmc
int3
repz
mov
inc
cmp
aam
lds
pop
sbb
fstpt
out
cmpsl
enter
push
push
insb
movsb
mov
mov
jmp
stos
mov
stc
icebp
ja
jle
inc
sbb
sub
fisubrl
push
jge
inc
call
je
addr16
mov
sub
out
xchg
dec
out
lcall
aas
outsb
jg
inc
scas
ljmp
dec
out
in
and
pop
sub
or
iret
inc
push
mov
add
cld
test
pop
dec
adc
mov
rcr
es
cs
cwtl
mov
push
and
inc
test
jnp
jmp
mov
push
add
push
xchg
ja
addr16
sbb
push
je
cmp
into
fistl
add
mov
cmp
jmp
sub
jae
pushf
sti
fisttpl
adc
stc
test
mov
cmp
out
fcoms
jg
push
nop
mov
imul
sbb
into
add
dec
jle
out
fists
mov
ss
xchg
fwait
cmpsl
inc
push
dec
arpl
int3
aaa
mov
jecxz
jg
cli
sahf
enter
pop
mov
loopne
mov
lcall
xchg
sub
mov
cmp
mov
pushf
adc
mov
stos
jns
dec
ffree
adc
push
xor
xor
pop
push
cmp
and
js
ret
outsl
or
mov
cmc
push
bound
stos
inc
test
pop
icebp
xor
adc
stc
push
push
jmp
aad
inc
dec
rolb
xorl
push
pop
int
and
ret
sahf
in
fiaddl
dec
idiv
mov
lret
jle
jne
out
rclb
fldcw
pop
mov
stos
xor
out
cmpsb
xlat
sbb
iret
xor
mov
sbb
and
and
ret
dec
enter
ds
mov
test
mov
mov
sbb
hlt
aaa
inc
xchg
in
inc
dec
cmp
les
push
int
fists
jae
and
adc
repnz
mov
mov
dec
mov
in
test
xlat
nop
repnz
add
inc
push
or
inc
lcall
add
adc
stos
fidivrl
and
movsl
call
mov
clc
ret
jmp
loope
push
dec
sub
mov
cld
fs
js
pop
cli
es
and
adc
insb
imull
sub
cli
inc
int
addr16
jo
mov
mov
xor
push
ja
jbe
ja
xchg
pop
arpl
xor
push
and
ja
mov
fidivl
xchg
add
add
inc
dec
ds
in
test
xlat
mov
cmp
jmp
mov
js
sub
xor
mov
pop
add
and
xor
or
dec
mov
mov
pop
inc
jb
push
sbb
test
aas
jbe
cmp
mov
das
int3
cmp
sti
push
adc
jecxz
call
dec
out
sbb
dec
mov
mov
adc
sbb
jb
jo
test
repz
and
add
dec
cmp
lods
xchg
sub
scas
int
int
inc
jb
mov
outsl
lock
insl
mov
dec
inc
pushl
lea
repz
sbb
inc
imull
shr
mov
ljmp
or
add
adc
xchg
mov
mov
mov
lret
mov
loop
jmp
jmp
je
pusha
adc
cmpsl
cmp
ljmp
inc
adc
mov
add
in
mov
js
push
ja
jae
scas
leave
adc
mov
mov
cmp
xchg
and
je
or
fidivrl
inc
xor
cmp
mov
push
push
setb
dec
mov
jne
mov
loope
jae
out
jecxz
data16
repz
clc
mov
sahf
adc
aaa
sti
loop
fstp
and
push
jg
xchg
mov
icebp
les
sub
push
xor
aad
pop
jb
pop
dec
rep
cltd
push
pop
ljmp
push
push
push
cmc
pop
jg
inc
dec
iret
push
out
xor
ficompl
add
fst
lds
aam
and
out
frstor
mov
test
mov
dec
sbb
dec
daa
mov
in
pop
fstpl
sbb
es
mov
pop
call
fstpt
aad
inc
or
or
inc
pop
and
inc
jmp
fnstcw
jno
cs
push
fs
jb
popf
xchg
sbb
cltd
popf
stos
and
dec
add
dec
jbe
std
sub
aaa
push
or
out
lea
arpl
cmp
scas
loope
repnz
pop
mov
jge
mov
lods
bswap
in
in
jae
xor
movsl
add
cld
and
mov
jae
inc
inc
jg
cmp
push
xchg
sbb
mov
inc
and
pop
inc
pop
daa
stos
sub
daa
cmpsl
push
mov
pusha
stc
mov
cli
cs
in
popf
pop
jb
inc
sti
int
mov
xor
inc
mov
movsb
shlb
mov
and
int3
mov
ret
dec
pop
insl
scas
into
adc
mov
negb
call
jmp
loopne
jge
dec
mov
int3
sti
pop
lcall
cmpsb
lock
adc
mov
push
outsl
jae
cmpsl
das
ljmp
jecxz
or
sahf
jnp
fcomip
pusha
stc
shl
aam
sar
ss
fwait
mov
dec
popf
add
outsl
rcrb
pop
sti
mov
xor
inc
enter
or
add
or
cmpsb
inc
repnz
add
xor
mov
nop
fisubrs
cmp
cmpl
and
mov
test
push
mov
xchg
lods
out
push
mov
enter
fsubr
or
xor
jb
jae
add
mov
pushf
outsb
and
jg
mov
test
xor
cli
enter
dec
leave
pop
ret
cwtl
mov
mov
sbb
stc
scas
inc
pop
pop
lahf
xchg
mov
sbbb
push
lods
lret
in
lods
imulb
outsb
mov
icebp
add
shlb
sbb
mov
mov
pop
repnz
push
cmp
clc
xor
pop
inc
lret
add
mov
outsl
and
mov
imul
in
mov
adc
push
mov
or
sbb
popf
lret
mov
lea
pop
inc
xchg
mov
adc
mul
dec
lret
push
cwtl
and
lret
icebp
popf
movsb
pusha
stc
pop
divb
push
mov
adc
xchg
jbe
repz
xor
shl
cmpsl
cwtl
std
adc
into
xor
mov
jl
cltd
stc
cli
xorl
mov
imul
std
sti
es
dec
add
stc
ss
cmp
mov
movsb
movsl
ret
loope
hlt
xor
aam
dec
jns
push
outsl
push
xor
aam
fisttpll
ds
leave
mov
inc
inc
ja
push
adc
xor
xor
mov
adc
xchg
jecxz
add
popf
mov
mov
jae
imulb
push
or
cld
and
dec
repz
mov
imul
stos
and
mov
fsubs
cs
xor
xchg
ja
and
cmp
mov
xchg
mov
out
mov
jae
sub
ds
cli
xchg
cltd
dec
test
mov
int3
pop
xlat
fisubrs
dec
jmp
shrb
clc
xchg
outsb
add
jge
lret
aad
lea
imul
aaa
fdivrp
addl
pop
dec
out
pop
cmp
lds
mov
rolb
and
xchg
cmp
mov
fldt
mul
mov
hlt
and
push
pop
adc
sub
pop
outsl
nop
mov
or
ss
inc
insb
push
xchg
or
pop
repz
mov
call
jge
sbb
add
xor
sbb
jmp
cmp
fsub
add
pop
decl
pop
xor
cmp
add
pop
mov
pop
pop
arpl
jns
xor
test
leave
pop
push
arpl
les
sbbb
pop
shll
cmp
xchg
aas
and
mov
cmp
lods
sbb
fcompl
and
adc
jne
movl
jb
loope
stos
shrb
dec
sub
sbb
roll
dec
iret
outsb
push
jle
and
test
cs
mov
mov
popa
lea
xchg
fidivrs
cmpsb
ficompl
mov
aaa
cmp
std
xchg
shrl
and
nop
insb
mov
test
mov
push
pop
jns
fwait
add
adc
ja
fnstsw
adc
dec
fcom
insl
inc
push
loop
dec
adc
add
sti
mov
scas
test
push
test
fimuls
inc
mov
sub
sbb
jl
xor
out
mov
sub
sub
clc
mov
pop
xchg
test
mov
scas
pushf
insb
nop
jl
or
test
sbb
jle
inc
mov
xchg
dec
jo
jbe
xor
lcall
sub
xchg
cmc
daa
pop
lds
xchg
ret
and
aam
fists
and
jbe
cmp
push
adc
insl
adc
cmp
sub
gs
stc
dec
icebp
test
fstl
sbb
fcoml
ds
jmp
add
aaa
lcall
out
pushf
add
push
sbb
cmp
mov
ds
add
push
push
pop
pop
cmpsl
dec
je
call
stc
int
dec
cmpl
pusha
dec
subb
ljmp
fs
inc
jmp
xchg
mov
shrb
shrl
xor
inc
mov
lret
add
sbb
test
push
gs
xchg
insl
adc
call
in
in
cmp
xor
adc
fnstsw
mov
dec
iret
insl
jp
jp
repnz
pop
pop
lock
imul
pop
fidivs
pop
lcall
notb
sbb
sbb
inc
aam
inc
mov
xchg
mov
movsb
cmp
inc
sbb
add
in
icebp
out
cmp
or
es
popf
dec
cmc
stos
repnz
adc
add
or
inc
cs
pop
insb
xchg
xor
lods
mov
aas
push
pop
cld
std
mov
mov
leave
and
lods
mov
les
jo
sahf
mulb
xchg
mov
mov
inc
loope
orl
outsl
jns
pusha
lea
daa
pop
lcall
das
jle
nop
sub
fists
cmp
popf
sub
fists
push
gs
or
cmp
or
jmp
dec
mov
xor
sub
addl
sub
pushf
clc
lcall
movsl
repnz
mov
mov
mov
push
mov
jecxz
jns
ret
std
push
loopne
out
xchg
lds
fmull
cmp
aam
fmull
mov
xor
adc
shlb
and
fs
pop
gs
das
push
jo
xor
jg
out
and
jp
dec
ret
loop
ljmp
divb
jmp
test
lock
and
or
mov
xor
aaa
push
mov
ljmp
push
imul
adc
mov
pop
adc
and
mov
fisubs
dec
daa
pop
into
ret
push
mov
adc
cmp
pop
repnz
out
push
popa
lods
push
out
sbb
imul
xor
in
add
pop
fwait
lea
xchg
mov
and
mov
xor
push
push
jp
add
lret
imul
aas
push
loope
xor
jmp
neg
push
je
jecxz
or
push
int3
pop
adc
lods
jnp
cmp
ljmp
sub
sub
cmpl
int
jmp
leave
jo
lret
cmp
ret
shr
daa
repz
pop
push
xorb
imul
mov
divb
dec
cs
mov
xchg
lods
cmp
cmp
pop
inc
cmpl
shl
mov
icebp
sbb
loopne
data16
add
ror
adc
in
mov
test
xor
imul
or
mov
inc
adc
xor
push
inc
and
mov
aas
in
pop
fxam
mov
in
or
or
sbb
addr16
shrb
in
push
xchg
repz
cmp
repnz
movsl
mov
in
ret
mov
rcrb
cmp
test
jge
imul
sti
add
mov
xchg
in
lea
add
sbb
xor
sbb
and
jg
mov
inc
mov
fwait
push
add
pushf
push
sbb
fidivrs
insl
insw
push
sub
mov
std
sbb
pop
mov
aad
mov
je
mov
into
ja
pop
rolb
fisttps
in
add
cmp
mov
das
test
inc
sbbb
aas
mov
add
and
pop
inc
sub
sbb
lods
andb
cwtl
out
sbb
sbb
push
pop
fstpt
leave
adc
mov
cmc
mov
lcall
and
cmp
fdivl
iret
cltd
mov
out
lods
pop
jae
in
mov
mov
data16
cwtl
js
cltd
mov
daa
std
cmp
hlt
push
jmp
cld
leave
loope
sbbb
testb
push
sub
in
mov
jl
pop
stc
dec
ja
mov
and
xchg
fs
push
or
sbbl
fcompl
mov
clc
mov
adc
inc
jecxz
pop
int
test
jg
fcmovnbe
lahf
out
ret
and
pop
jne
adc
xor
pushf
pop
insb
clc
adc
enter
cmp
push
out
imul
loop
adc
mov
jns
pop
aad
fwait
jne
pop
jp
push
adc
lahf
jle
dec
rcrl
bound
gs
pushf
testb
stos
pop
jbe
mov
lcall
adc
iret
dec
jmp
push
imul
pop
mov
idivl
add
pop
add
orl
add
xchg
leave
mov
pop
xor
hlt
pop
jo
jae
xchg
mov
push
xor
into
lods
insb
lods
ss
xchg
inc
xchg
push
lahf
inc
cmp
mov
xchg
loope
mov
mov
add
loope
xchg
fnsave
dec
jg
inc
xchg
lea
push
shll
cmpsl
add
nop
fisttpll
insl
lret
pop
push
mov
adc
lea
roll
addl
or
lea
aaa
sbb
add
ret
loop
jne
fs
push
in
lock
inc
xor
clc
ja
jg
mov
sbb
pop
loopne
mov
xchg
cltd
cmp
cld
in
stc
mov
cltd
inc
loop
mov
fxch
nop
daa
mov
mov
pop
xor
add
pop
rcll
cmp
xor
push
xor
adc
jne
sbb
adc
push
scas
mov
or
into
cmp
push
cmpsl
xchg
jmp
cmp
xchg
xchg
popa
mov
in
fwait
loope
jae
pushf
add
lea
repnz
test
into
adc
in
outsb
mov
dec
loope
mov
pop
mov
inc
daa
jle
jl
fiaddl
push
mov
add
push
shr
lahf
and
cmp
jge
jg
add
ret
sub
inc
int
data16
or
adc
mov
cmp
push
mov
mov
fsubs
dec
jl
push
lods
iret
mov
dec
xor
adc
loop
clc
dec
loopne
fstl
push
loope
xor
fildl
aas
pop
int
pushf
fisttpl
jns
insl
add
loope
out
ja
and
xchg
in
mov
xor
shll
pop
or
mov
movsb
xchg
ret
call
mov
ss
lahf
out
adc
outsl
decl
gs
adc
push
or
idivl
xor
add
aam
cld
inc
scas
sub
int
xchg
cli
mov
inc
stc
or
push
inc
mov
mov
daa
pop
lcall
test
jno
fbstp
push
pop
lcall
jo
fstpl
pop
scas
mov
andl
mov
scas
lret
pushf
and
pusha
lret
cmp
insl
sbb
push
ja
adc
outsl
xchg
ret
mov
cmp
int3
dec
lahf
lods
call
mov
cltd
dec
mov
pusha
ret
dec
in
iret
mov
enter
mov
add
push
mov
xor
push
add
shl
dec
pushf
adc
lock
xchg
outsb
dec
pop
mov
call
or
dec
mov
shl
leave
imul
xchg
sub
push
fisttpl
adc
or
mov
lahf
stc
push
mov
push
inc
lods
xchg
inc
out
mov
xor
mov
xor
and
jno
push
or
fstl
xchg
fisubrl
push
sub
repnz
mov
mov
mov
push
add
icebp
imul
and
and
je
mov
clc
inc
inc
mov
repz
pop
loopne
dec
push
test
push
aas
mov
cli
adc
dec
jnp
mov
jns
lret
fisttpl
test
inc
push
je
and
js
push
mov
data16
ss
cmp
cmp
inc
insl
mov
lret
add
stos
sbb
xchg
mov
fwait
add
inc
mov
insb
test
jae
xlat
or
pushf
xadd
push
popl
jmp
in
nop
xchg
inc
add
in
in
inc
popf
in
popf
push
fisubs
and
jle
mov
scas
cmp
ljmp
jmp
and
sbb
ret
clc
ror
pop
jmp
enter
inc
shlb
lods
sub
rcl
out
insb
push
pop
repnz
mov
cmp
lds
inc
bound
fcoms
xor
adc
stos
movsb
mov
fsubl
data16
add
inc
and
gs
cmpsl
add
mov
aas
sbb
popf
orb
scas
mov
imul
mov
mov
insl
or
ja
adc
lods
or
push
std
push
shlb
mov
or
or
push
inc
add
repz
mov
dec
xchg
add
sub
mov
sbb
aaa
dec
mov
inc
rcll
xchg
or
mov
xchg
xchg
pop
mov
ss
push
fbstp
int
gs
loopne
movsb
outsb
cltd
xor
pop
xor
out
xchg
mov
xor
in
inc
mov
insl
lcall
sub
cld
inc
xlat
enter
jne
gs
mov
adc
faddp
jno
subb
daa
push
push
pop
xor
mov
sbb
jg
mov
rcrl
int3
je
imul
xchg
push
add
inc
pop
sbb
mov
mov
and
fs
xchg
inc
cmpb
cli
inc
push
ss
fsub
cmp
push
pop
push
jb
cmpsl
adc
pop
add
lret
icebp
sbb
daa
push
xchg
dec
fs
rorb
clc
in
xchg
jp
lret
cwtl
lods
stos
fisubl
dec
adc
inc
add
xor
jmp
ret
or
dec
pop
test
test
adc
xchg
mov
fmuls
mov
rol
mov
sbb
push
gs
imul
xchg
jmp
lret
pop
mov
scas
sbb
fisubrs
push
inc
adc
lods
mov
sub
cmc
xchg
and
pop
jo
rorb
enter
xlat
out
mov
and
mov
daa
mov
mov
rolb
pop
mov
ffreep
ds
imul
push
pop
pop
jl
shl
cltd
into
inc
push
push
test
mov
popa
cmpl
and
or
loopne
push
lock
xchg
xor
div
dec
in
sahf
fmulp
dec
je
incl
or
mov
out
loopne
test
mov
mov
xor
aaa
je
sub
arpl
xchg
outsb
dec
xchg
es
movsb
inc
cmp
jg
lahf
and
mov
push
test
pop
push
enter
jbe
and
jno
xor
int3
in
and
out
movsl
mov
inc
jnp
sbb
mov
cmc
xor
fadd
adc
in
lcall
mov
leave
setno
ds
fs
xchg
push
and
mov
je
pop
lods
arpl
sar
repz
cmp
sbb
aam
lods
stos
or
add
mov
mov
ss
imul
clc
jp
mov
adc
mov
jnp
dec
mov
outsl
mov
js
adc
pop
push
lcall
sub
loop
pop
dec
xchg
jne
cmp
xor
fsubrl
dec
in
add
orb
push
hlt
adc
movsl
inc
push
gs
loopne
mov
adc
int3
aad
jb
out
mov
lock
sbb
fwait
jns
push
data16
imul
lahf
lret
xor
int3
std
jmp
mov
xchg
dec
sarb
in
add
call
leave
icebp
mov
sub
add
add
add
mov
lock
hlt
cmp
push
cmc
inc
or
adc
sub
std
iret
cmp
push
pop
fs
fisubs
jmp
mov
arpl
lret
cmpsb
inc
mov
jnp
fildl
pop
and
add
jle
sarb
lods
dec
ljmp
cs
and
rcr
pop
pop
or
out
push
int3
xor
dec
int3
inc
mov
add
fadds
mulb
or
dec
outsl
lcall
sbb
pop
and
add
movsl
mov
jno
pop
xchg
arpl
rcll
int3
sbb
cmp
es
xchg
mov
popf
mov
jl
cmpb
lret
imul
scas
pusha
in
cmp
or
out
mov
xor
mov
jae
out
lds
imul
jecxz
sti
int3
mov
subl
fisubrs
cmp
clc
popf
or
nop
rcr
fisubl
cmpb
pusha
lock
repz
push
out
cmp
fmuls
arpl
xchg
xchg
mov
movaps
and
or
test
pusha
push
or
icebp
int
push
cs
fidivl
ja
xchg
mov
dec
lret
sbb
aas
sahf
sub
test
push
push
mov
lcall
adc
stc
lods
faddl
push
pushf
push
movsl
push
pop
mov
icebp
lahf
mov
sbb
loop
shll
lcall
outsl
subb
push
cmp
push
movsl
or
and
and
push
fildl
inc
jmp
fxch
ds
or
mov
and
mov
dec
js
test
inc
jb
xor
mov
ret
mov
fstpt
ds
cmc
popa
pop
inc
aad
xor
roll
xor
sahf
int3
ds
sarb
in
cmp
mov
mov
icebp
sarl
lret
mov
pop
enter
xchg
cmp
jae
out
fstpt
cmpsb
out
shlb
xchg
inc
das
sub
mov
adc
dec
or
cmpsl
push
mov
xor
jno
inc
sub
push
icebp
ljmp
rcr
mov
fsubs
aam
es
icebp
push
xchg
dec
push
jbe
and
fidivrl
daa
call
ja
pop
dec
push
cmp
pop
sub
movsb
jmp
push
sbb
or
lods
or
jmp
pop
fisttps
sbb
frstor
cltd
mov
nop
iret
daa
jo
outsl
fldenv
adc
lret
sti
loop
jge
out
mov
js
fimuls
out
mov
sbbb
mov
inc
cmp
push
mov
push
cltd
imul
jg
sub
stc
out
cmp
in
xor
or
clc
lods
dec
sahf
jne
dec
inc
xchg
scas
add
jmp
dec
push
out
pop
frstor
adc
and
push
lahf
scas
in
push
nop
pop
sub
or
push
push
mov
sub
xchg
cmp
inc
aam
cmpsl
push
sbb
mov
and
fimuls
xchg
and
sbb
cld
xchg
or
mov
mov
mov
pop
insb
add
pop
jns
daa
jmp
cmpsl
xor
adc
push
xchg
pop
test
sub
movsb
outsl
push
gs
adc
xchg
mov
jmp
test
test
or
xor
dec
popa
pop
int
xor
pop
loope
mov
mov
jmp
jg
andl
jbe
xchg
add
xchg
push
cmp
in
lods
xchg
add
pop
gs
out
mov
pop
adc
or
add
mov
mov
jo
aaa
add
popa
sub
loop
das
mov
insb
sbb
pop
adc
sbb
daa
cld
int3
and
push
int3
je
jmp
adc
fcmovb
jge
or
or
mov
push
inc
js
imul
into
mov
pop
push
add
out
je
inc
sub
add
cwtl
mov
mulb
and
inc
xchg
and
push
xchg
jg
mov
inc
mov
inc
push
mov
and
push
jae
hlt
es
lods
fistpl
adc
inc
push
pop
xchg
sub
xor
cmp
ret
cmp
rcrl
adc
xchg
into
test
mov
stc
push
pop
sbb
pop
pushf
dec
inc
sub
cmp
xchg
mov
aam
pusha
aas
mov
addr16
push
pop
mov
mov
xchg
sarl
mov
js
sbb
pop
adc
mov
stos
inc
rclb
lret
call
mov
cltd
jno
lret
cmovo
addr16
push
cmp
aas
fnstcw
in
and
push
cmpsb
xorb
rcll
xchg
or
mov
shrl
fcmovnu
pop
push
add
outsl
jp
jmp
test
ror
adc
cltd
fidivrs
or
cld
pushf
push
lea
dec
iret
es
aas
add
inc
cmpsl
sub
es
push
lret
fs
pop
fildl
sub
mov
push
xchg
or
fucomip
std
push
cmpsb
inc
push
and
mov
std
mov
out
xor
fwait
shrb
mov
jne
mov
cmp
scas
loope
dec
xchg
mov
xchg
stos
shlb
sbb
rcrb
test
pushf
cmpsl
shrl
mov
pop
xchg
pop
bound
outsb
out
dec
int3
movsb
lahf
addr16
rcll
inc
push
push
scas
and
movl
icebp
in
lods
mov
mov
push
mov
sbb
inc
or
stc
cs
sti
in
in
sbbl
in
add
in
ljmp
push
cmc
xchg
push
cld
lock
push
add
xor
js
imul
sbb
imul
xchg
push
out
int3
dec
fidivs
mov
test
cli
inc
cmpsl
or
cmp
in
arpl
jmp
andl
popa
add
pop
push
and
aad
test
stos
add
or
push
inc
int3
leave
or
leave
xchg
jno
xchg
xchg
pop
lret
jmp
push
mull
sti
inc
xchg
cmpsl
mov
and
jnp
fs
and
dec
and
hlt
outsl
shll
ja
adc
xor
inc
pop
mov
xchg
insb
popf
pop
lods
lea
and
jb
mov
xor
dec
subl
pop
mov
sub
xchg
fcoms
and
movq
cmpsl
jmp
popa
movsb
movsl
fcomip
jle
mov
imull
das
fidivs
stos
inc
aad
mov
int3
mov
cwtl
inc
test
cmp
int
hlt
mov
jmp
mov
fsubs
or
mov
popf
lock
rolb
mov
test
lds
test
xchg
gs
dec
cmp
fnsave
call
lcall
push
out
cmp
jbe
adc
shlb
roll
aas
pop
ror
pusha
jp
aam
fnstcw
pop
xchg
mov
inc
fldl
jbe
sub
mov
add
inc
gs
fbstp
pop
imul
lds
imul
cmp
mov
cmp
xchg
inc
push
loop
imulb
movsl
xor
lahf
filds
mov
je
sub
sbb
pop
scas
fildl
les
mov
xchg
xchg
out
in
push
inc
adc
add
das
popf
sti
daa
std
lods
icebp
lahf
add
mov
push
mov
mov
inc
sub
pop
fucomp
shll
inc
pusha
mov
sahf
dec
out
sub
xor
mov
aam
idivl
xorb
or
sub
loop
bound
push
inc
int
xor
or
jno
loope
and
xlat
cmp
mov
dec
sbb
mov
jae
mov
cmpsb
daa
jne
add
xchg
dec
stos
pop
xchg
movsl
mov
test
xchg
test
inc
jnp
in
imul
rorl
leave
adc
dec
lret
mov
mov
cmp
pusha
adc
addr16
in
ds
push
roll
jns
dec
adc
je
dec
push
sahf
lcallw
cld
cwtl
pop
sub
xchg
adc
mov
cltd
int
xchg
push
xlat
mov
outsb
fsubr
push
outsl
loope
mov
je
mov
lea
adc
es
icebp
inc
xchg
dec
test
fists
shl
mov
frstor
adc
jns
inc
fwait
inc
dec
lods
dec
mov
cld
inc
stc
mov
or
popa
clc
les
jl
sbb
mov
bound
jle
mov
adc
nop
and
pop
fisubrl
rorl
or
xor
out
inc
aam
js
fisubs
and
jb
andl
sub
mov
test
not
push
pop
shll
arpl
loope
xchg
add
cmc
xor
sbb
mov
daa
stc
subb
call
cmp
inc
inc
jp
in
push
mov
das
mov
pop
icebp
xor
leave
stc
xchg
fstpl
imul
push
jle
jbe
scas
and
jmp
addr16
cmpsl
popa
mov
mov
adc
jle
repnz
gs
inc
or
inc
and
jmp
scas
jae
xlat
xorl
js
adc
mov
pop
add
dec
mov
mov
cmc
push
pushf
stos
cli
push
dec
orb
lods
insw
add
sbb
cmp
sbbl
xchg
xchg
sbb
in
pop
pop
xchg
xor
popa
add
push
imul
outsl
xor
lret
sbb
insb
mov
mov
xor
je
cmpsb
cmp
xchg
jg
jecxz
or
mov
pusha
ret
fisubl
adc
gs
lret
xor
sub
push
xchg
jns
enter
arpl
shlb
in
test
jnp
and
scas
nop
push
sub
inc
xchg
mov
add
call
mov
or
push
in
stos
fnstcw
out
cmp
stos
pop
scas
sub
jnp
out
cmpb
inc
sbb
dec
movsl
sub
cmpl
or
repnz
adc
push
xor
cwtl
xchg
cmpsb
xchg
int
mov
jb
rcrl
fadds
xor
jo
shl
fdivrs
pop
sbb
cmpsb
lcall
fcoml
sbb
out
pop
mov
test
aam
mov
pusha
fstps
dec
pop
jae
sub
stc
push
mov
cmpsl
ret
push
dec
mov
jecxz
nop
push
and
xchg
push
cmpsb
push
cmpsb
adc
std
mov
mov
jbe
cmpsl
xchg
ja
mov
xorl
popa
jecxz
stos
ja
leave
xor
int
or
out
mov
adc
orl
fsts
popa
movsl
mov
loope
es
fstpl
mov
mov
xchg
mov
rcr
repnz
mov
sbb
clc
pop
adc
call
mov
cmc
jns
mov
dec
xor
hlt
repz
push
ficomps
ljmp
inc
int3
test
jae
int3
mov
add
xchg
mov
xor
loop
xchg
mov
or
les
push
aam
cmpsb
xchg
mov
outsl
push
insb
movsl
add
adc
sbb
mov
and
mov
add
ds
cltd
mov
and
adc
mov
xchg
aam
scas
das
sbb
xlat
mov
bound
push
sbb
addr16
out
adc
pop
jecxz
mov
sbb
into
outsb
mov
jnp
xchg
aad
daa
mov
stos
fisubs
clc
push
jecxz
es
mov
fisubrl
hlt
add
dec
lahf
adc
push
mov
cmp
cli
fdivp
ret
jno
lcall
lahf
inc
int3
sub
in
mov
jle
mov
dec
lds
dec
scas
scas
shlb
shll
out
sub
cmp
mov
sti
scas
aas
insl
mov
imul
int3
dec
xlat
test
lock
test
popa
mov
mov
imul
dec
stos
mov
xchg
or
mov
jns
sub
lods
call
data16
cwtl
adc
insw
shrl
sub
mov
fdivrs
mov
lods
leave
push
stos
cld
je
adc
mov
jnp
and
outsl
jp
xchg
sub
aad
fs
addr16
dec
mov
or
imul
sti
adc
mov
dec
cmpsl
pop
std
js
pop
rcrl
jo
lea
rcr
jb
imul
hlt
andb
and
push
inc
xchg
push
fildl
pop
loop
jne
mov
dec
cli
pop
stos
test
loop
sub
mov
xchg
lret
idivl
or
push
imul
call
aam
push
std
or
sahf
leave
dec
int3
mov
repz
sub
sub
cmp
adcb
and
and
mov
aam
fistpl
lds
xchg
pop
test
push
loopne
mov
push
jp
bound
and
imul
mov
outsb
dec
or
jg
mov
or
orb
push
xchg
cmpsl
hlt
or
cmp
inc
xchg
pop
jg
lea
push
call
xchg
popa
jge
mov
aaa
pusha
or
dec
push
sti
xor
xchg
rep
hlt
pop
rolb
mov
push
lea
xor
adc
fisubl
test
into
adc
sbb
rorb
cmpsb
dec
cmp
dec
xchg
sahf
sub
test
scas
lock
mov
inc
adc
std
mov
cmpsl
nop
mov
test
lret
call
cmp
rorb
add
test
popa
cld
dec
or
icebp
nop
rorl
xor
xchg
xchg
pop
das
in
imul
jle
clc
insb
std
addr16
pusha
into
in
xchg
mov
scas
clc
fiaddl
xchg
pop
repz
packsswb
pop
cmp
fdivrp
sbb
mov
xchg
xchg
xchg
clc
add
sub
adc
rolb
loop
mov
mov
mov
mov
xchg
cmp
xchg
int3
lock
sahf
fistl
inc
add
pop
and
adc
fwait
aaa
and
mov
cmp
push
movsl
gs
xchg
jae
mov
and
mov
arpl
adc
sbb
aad
lods
cmp
or
nop
mov
inc
mov
sahf
mov
or
dec
or
aad
add
push
sub
test
cltd
pusha
iret
std
push
dec
jle
xchg
or
mov
rcrl
mov
mov
fisubrs
incb
testb
dec
mov
jnp
cmpsl
aam
fnstcw
adc
inc
mov
mov
push
or
pop
rcl
std
fstpl
int
jecxz
add
mov
push
jmp
xchg
lret
lock
aam
mov
push
xchg
inc
push
lods
adc
test
in
pop
pushf
je
mov
xchg
sbb
loope
sub
stos
sbb
or
inc
stc
mov
push
dec
test
lahf
inc
cmp
push
in
jg
dec
inc
pusha
test
test
shll
insl
sahf
daa
shll
mov
mov
stos
scas
ss
mov
xchg
cmp
into
loope
jge
pop
push
pusha
call
cmpb
or
or
mov
pop
sti
in
popa
jmp
ds
push
push
mov
mov
mov
lret
mov
sti
lods
jae
xor
xchg
jecxz
jp
sbb
mov
int3
js
dec
ja
pop
ret
imul
or
fmuls
sahf
mov
ja
mov
fwait
test
in
test
sbb
in
push
xchg
cmpsb
jbe
dec
sub
push
jae
push
pushf
add
pusha
and
dec
or
jbe
je
das
xchg
idivl
fisubrl
cmpsb
jg
push
ret
lods
push
loop
cmpsb
scas
lcall
nop
mov
and
outsb
cs
mov
out
add
fnstsw
push
jge
les
xor
das
pop
jno
push
push
lods
cmp
xor
hlt
adc
in
dec
loope
cwtl
popf
sbb
mov
das
out
test
add
outsb
roll
xor
push
inc
adc
add
and
pop
arpl
sbb
mov
call
push
pop
lret
out
mov
pop
jp
sti
mov
and
inc
xor
or
in
pop
repz
out
cmpb
je
cmpb
imul
aas
sbb
mov
and
xor
jns
mov
loope
jl
ret
arpl
iret
jne
xchg
insb
aaa
into
or
mov
add
pop
in
in
movsl
push
insb
pop
jbe
out
mov
pop
clc
loop
sub
mov
sub
int3
sarb
jg
pushf
mov
imul
push
cmp
cmpsb
insb
add
in
jns
das
xorl
sub
not
cmp
cmp
push
arpl
cmpsb
adc
mov
mov
outsb
fsubr
cmp
ljmp
loope
clc
aad
add
ret
adc
add
or
scas
fcomip
cmp
adc
mov
inc
rcrl
xor
mov
inc
jns
sbb
cli
mov
push
push
pop
jle
or
int3
lahf
xor
nop
and
dec
mov
add
sub
scas
push
mov
scas
push
adc
pop
pop
sub
cwtl
dec
cmp
int
out
pop
out
xorl
mov
rcll
imul
mov
nop
dec
fwait
jmp
iret
outsl
fnstenv
aas
mov
pop
or
sbb
smsw
jno
sarl
adc
pop
loope
add
pop
pop
mov
leave
daa
sbb
sub
xlat
xor
ret
mov
imul
out
mov
in
adcl
adc
mov
stc
lea
sub
and
bound
in
dec
sbb
mov
inc
imul
jae
jno
sub
gs
lcall
loop
bound
sbb
xchg
mov
pushf
pop
leave
aas
mov
out
pop
mul
loope
pop
pop
xlat
xchg
and
adc
add
xchg
jmp
shlb
insl
ret
in
xorb
xor
movsb
popf
or
ret
stos
aad
leave
insb
pop
jmp
inc
stos
pop
jecxz
jl
inc
es
insl
stos
lods
imul
xor
lahf
or
out
jp
clc
sbb
ret
popa
fisubrl
and
stc
shrl
mov
movsl
clc
add
xor
inc
pusha
and
adc
pop
sti
out
dec
xor
pop
mov
dec
mov
push
call
lret
lds
mov
and
pop
add
mov
xor
or
xchg
jb
mov
add
mov
loopne
addr16
mov
out
sub
outsb
add
lea
in
cmp
lcall
stos
xchg
sbb
push
ja
fmuls
stos
mov
es
adc
sub
adc
sarb
lods
lock
imul
lods
ret
div
sub
mov
jnp
mov
stos
jle
pop
data16
sbb
push
adc
fstpt
shrl
push
fs
pop
xchg
xor
cmp
or
mulb
and
in
bound
and
mov
and
loopne
std
jecxz
loop
sti
xorl
movsl
inc
inc
cs
xchg
sbb
sbb
sub
ret
and
aaa
lea
lods
pop
lahf
inc
push
pop
cwtl
dec
xor
pop
push
or
sbb
lret
repnz
adc
fisttpll
mov
rorb
mov
sbb
jecxz
loope,pn
mov
jns
cmp
add
jne
int3
or
inc
jge
imul
and
and
call
add
mov
push
and
test
rclb
movsl
sbb
clc
xor
arpl
pop
mov
cmp
and
int3
pop
lea
pop
sti
insl
pop
xchg
jge
cld
sub
pop
add
add
xchg
jns
mov
clc
inc
aaa
xchg
fs
adc
jl
sub
pop
insl
mov
and
xchg
data16
clc
pop
fimull
scas
mov
stos
sbb
add
stc
and
les
jne
mov
push
sub
xchg
insb
popf
stc
int3
clc
jo
and
shr
nop
xchg
daa
jbe
xor
ds
push
dec
push
test
adc
cmp
idivb
roll
out
dec
pop
sbb
adc
pushl
mov
gs
mov
out
repz
test
in
cli
inc
repnz
stc
inc
movsl
imul
push
xchg
mov
mov
sbb
scas
aam
sti
fldenv
fisttpll
pop
popf
cmc
ja
loopne
test
push
push
and
dec
xchg
inc
out
shl
sarb
shlb
outsl
cmp
mov
push
push
and
in
es
outsl
rcll
mov
test
adc
loopne
ror
fcomps
adc
out
ror
xchg
repnz
mov
push
xchg
dec
xlat
pushf
cmpb
shlb
jle
test
cmp
int3
ja
cmpsl
pushf
fcoms
dec
imul
xlat
pop
lret
cs
fisttpll
mov
repnz
xchg
stc
adc
test
xor
subb
cli
lods
sub
daa
or
xchg
lea
cmp
gs
push
sti
xor
jg
addb
sarl
dec
roll
sti
dec
sti
inc
ljmp
inc
sbb
cli
ja
test
je
xor
outsl
sbb
mov
mov
leave
testl
icebp
pop
mov
mov
andb
mov
or
insb
lret
rcrb
rol
jo
das
js
xorl
cmc
or
sub
cmp
ljmp
jmp
into
cwtl
testb
jne
jae
fsub
push
ja
lock
jmp
pop
pop
xchg
aad
fcoms
add
ds
xor
shll
xor
stos
xchg
xorb
push
imul
iret
jp
dec
lahf
es
add
xchg
and
xor
push
adc
mov
hlt
lea
mov
in
xchg
inc
cmp
and
jp
or
jmp
xlat
mov
or
or
adc
mov
fs
mov
cmp
mov
adc
cmp
ss
stos
mov
ljmp
mov
in
mov
fwait
in
cmp
jb
adc
sbb
mov
outsb
mov
jbe
xchg
test
push
pop
mov
mov
jo,pt
lret
in
xor
pushf
push
insb
into
bswap
mov
mov
shrb
xchg
push
cs
shr
fstpl
gs
lea
or
or
mov
mov
in
add
lea
mov
dec
inc
in
jno
cmp
fsubr
bound
jle
iret
lods
ljmp
jo
xchg
lods
movsl
xor
pop
in
iret
xchg
pop
push
mov
vcvtsd2si
lods
cmpsb
jbe
dec
pop
dec
cltd
jo
insb
mov
aam
adc
add
jp
push
push
clc
or
sbb
das
jns
push
sub
aad
jmp
ja
jo
sbb
mov
aad
adc
pop
ret
mov
sti
bnd
repz
inc
arpl
push
add
mov
fldt
das
lea
jne
xchg
jecxz
subb
cmp
sub
sub
push
jno
sbb
lock
jp
push
mov
and
inc
mov
sbb
mov
xchg
dec
shr
je
sahf
leave
sub
fstpl
pop
daa
sbbl
xchg
push
jmp
and
insl
cmp
xchg
pop
scas
outsl
xchg
pop
rcll
test
jb
in
mov
dec
pop
cmpsl
dec
inc
jge
call
pop
aam
mov
mov
jecxz
pop
cmp
xor
das
in
pop
cmpsb
lods
lods
out
adc
pushf
push
jecxz
sub
lods
les
pop
dec
and
imul
not
dec
jbe
sub
sti
xchg
iret
cmpsb
lret
dec
xor
cmp
outsb
xor
or
jns
mov
push
stos
loop
push
lock
sbb
lahf
cld
adc
cmp
or
mov
fs
aam
xchg
pop
cld
inc
or
daa
push
xchg
mov
xlat
cwtl
mov
les
pop
arpl
into
repz
push
ret
icebp
jno
mov
cmc
adc
push
negb
dec
inc
push
jae
aaa
out
dec
cmc
adc
rorl
or
pop
mov
lock
popf
shl
jecxz
mov
out
adc
mov
stc
mov
jmp
xchg
out
sbb
xchg
push
xchg
sbb
cwtl
inc
loope
sbb
cltd
adc
sarb
gs
inc
inc
mov
xchg
cmp
dec
out
mov
xorb
mov
je
aas
cmp
jb
loop
mov
sub
sub
sub
jo
mov
adc
xor
ja
mov
pop
insb
rclb
cmp
cmp
iret
sub
sub
ds
dec
xor
and
jmp
add
push
scas
les
push
bound
jbe
jl
in
mov
mov
push
sub
push
hlt
es
pop
or
mov
stc
test
aam
mov
repnz
jne
aad
pop
lcallw
clc
loop
repnz
or
push
into
ja
daa
stos
loope,pt
sarb
les
mov
and
fmul
fs
jp
jmp
jnp
cwtl
mov
sbb
addr16
add
and
xchg
loope
jmp
pushl
mov
push
jecxz
fiaddl
out
jb
mov
xlat
aaa
or
es
jbe
push
fcmovb
sbb
fidivl
mov
test
adc
test
test
in
int3
push
sbb
inc
in
in
push
outsb
mov
imul
jp
mov
add
sub
cwtl
movsb
mov
test
in
loopne
das
push
sarl
dec
push
insl
imul
jae
push
jnp
jecxz
test
pop
or
gs
fs
in
outsb
pop
aas
sub
or
jbe
int
xlat
sub
sub
mov
cs
popa
pusha
xchg
dec
cmpsl
inc
push
lret
mov
pop
cmp
and
loop
pushf
outsb
mov
movsl
add
and
ds
hlt
rcrb
adc
outsb
inc
xchg
cmp
test
stos
and
ss
popf
inc
test
adc
testb
ret
pop
dec
xchg
cmp
popf
push
or
and
daa
call
dec
mov
mov
xchg
adcb
fists
xorb
sub
push
pslld
pop
sub
or
xor
ret
mov
xchg
or
push
xchg
ret
lods
scas
dec
ret
jbe
jae
sbb
addr16
int
ja
xor
sub
inc
push
push
xchg
mov
jp
clc
cli
cmc
mov
aas
xor
imul
add
push
sbb
add
das
dec
testb
jl
lret
inc
jns
mov
push
dec
add
jge
scas
cli
xlat
jmp
pop
xchg
and
xchg
loop
adc
sub
sub
ret
ljmp
bound
ret
jl
aaa
test
idivb
std
repnz
mov
cmpsb
aas
cmp
popa
jecxz
or
jp
push
addr16
loopne
push
ja
imul
arpl
test
out
daa
mov
pop
cmp
sahf
adc
fldt
sahf
pop
cmc
adc
add
and
ret
cmpsb
pop
pop
fsubrs
js
pop
pop
cmp
xchg
mov
fadds
mov
sahf
inc
insb
pop
js
or
outsb
dec
mov
mov
xchg
dec
sbb
aad
mov
int
adc
mov
hlt
jae
dec
push
mov
cmp
or
ja
jno
add
adc
pop
out
dec
xchg
sbb
nop
aam
or
cwtl
std
push
fistl
add
mov
insb
jecxz
dec
xchg
sbb
nop
mov
sahf
cld
iret
ret
xlat
jnp
fisubl
or
ret
add
xlat
adc
in
das
push
mov
outsb
imul
mov
negb
test
fidivrs
shrl
lret
jl
and
test
and
pop
xlat
dec
push
xchg
xchg
inc
popa
xchg
xorl
sahf
dec
pop
outsb
stos
or
sahf
ss
jg
mov
out
out
shl
push
mov
jns
aas
or
test
jnp
or
sub
xchg
lret
frstor
lock
pop
mov
iret
and
jl
pushl
aas
or
xchg
jl
andl
mov
sti
fmul
push
xorl
add
ret
rcrl
sahf
gs
jae
jns
inc
int3
pop
lret
in
pop
pop
imul
dec
std
loope
mov
roll
mov
xchg
in
fmull
lret
loop
out
jmp
fwait
mov
adc
nop
xchg
jae
pop
cs
jl
loopne
out
jecxz
cmp
xor
xlat
jg
je
mov
fwait
movsb
ret
clc
mov
ret
xor
adc
bound
movsb
int
ss
mov
addr16
movsl
dec
imul
sub
mov
mov
inc
repz
xor
inc
int
sbb
sbbb
out
xchg
sbb
jbe
test
push
fs
or
movsb
mov
or
jnp
sbb
leave
mov
in
add
std
movsl
or
pop
mov
into
lahf
aaa
iret
ss
cmp
outsl
test
jnp
xchg
sub
mov
and
jmp
in
das
mov
pop
imul
sbb
fnstsw
ja
mov
pop
arpl
dec
ss
in
fdivr
fwait
scas
xor
pop
pop
data16
lea
mov
loope
inc
pusha
ljmp
addr16
pusha
inc
in
and
fstpt
lret
jae
mov
sahf
push
fsts
mov
inc
cli
cmpsl
std
xchg
mov
rol
add
cmpsl
out
push
add
mov
pushf
movsb
pop
pop
cmpsb
fwait
cmp
cmp
aaa
xor
xchg
testl
jg
push
loope
scas
xchg
call
dec
pusha
fsubrs
push
test
fsubrs
inc
iret
or
inc
sub
scas
add
and
in
mov
sbb
pusha
adc
sbb
das
mov
xchg
jecxz
out
and
push
or
iret
lods
xor
push
pop
sub
incb
pop
ja
dec
and
pop
dec
push
adc
and
lcall
stos
into
xchg
or
imul
aaa
sub
iret
sub
adc
sub
cs
cwtl
je
xor
mov
mov
test
jne
add
gs
ja
in
jbe
sbb
aaa
adc
mov
imul
dec
gs
mov
test
mov
push
mov
mov
repnz
dec
shlb
frstor
mov
mov
mov
inc
or
sbb
aad
popa
fcoms
pop
lock
xchg
inc
adc
or
push
es
aaa
push
insl
add
in
jae
adc
pop
iret
xor
fsubl
repz
into
dec
xor
mov
adc
loope
push
mov
fsubrl
inc
cs
sbb
stos
jg
jl
cmp
out
cmc
test
fstpt
call
mov
sub
jmp
mov
lods
leave
sbb
mov
add
pop
mov
cmp
popa
loope
loopne
xchg
dec
push
mov
ss
inc
and
imul
movsb
cmpsb
jmp
es
js
dec
test
aad
into
push
test
arpl
xchg
rolb
popf
inc
daa
cmpsb
lds
test
cs
dec
das
push
sub
adc
mov
and
int3
inc
je
repnz
hlt
dec
jno
inc
mov
xchg
fs
push
scas
sarl
xor
pushw
cmp
sub
mov
mov
dec
lock
leave
pop
or
insl
adc
jae
mov
sub
push
mov
rolb
outsb
push
adc
jecxz
stos
cmp
inc
mov
sarl
fstpl
out
push
jne
cmpsb
xchg
pop
jno
mov
in
pop
mov
mov
mov
ret
das
ficoms
cltd
idiv
jne
scas
call
out
sahf
adc
adc
push
movsb
scas
ss
xchg
std
mov
push
pop
cmp
fidivl
inc
ja
in
mov
vmovsldup
stc
add
push
cli
and
cli
filds
inc
jae
adc
movsl
jns
or
mov
jl
std
cli
aaa
stc
cmp
mov
jae
cmp
sub
dec
gs
lret
cmc
cmpsb
in
addr16
call
mov
mov
push
mulb
loope
and
nop
mov
jp
loop
lret
insl
fdivs
push
iret
jae
icebp
out
mov
repnz
dec
test
imul
fwait
mov
out
fcompl
inc
popaw
test
sub
jb
xchg
insb
mov
push
sub
ja
xchg
iret
dec
div
cmp
dec
aad
mov
repnz
cld
xchg
jb
and
pushf
lea
sbb
movsl
mov
nop
fsubs
pop
gs
mov
rorb
fsubl
in
outsb
je
out
icebp
imul
out
add
scas
stos
sub
ret
movsb
pop
fcmovnb
inc
je
les
inc
in
dec
jmp
ljmp
popw
into
add
into
mov
pop
sub
iret
dec
out
cmc
pop
push
sub
rol
out
rol
xor
ret
cld
fwait
push
cltd
cmpl
mov
in
imul
aam
out
in
shrl
in
test
lods
je
outsb
pmaxub
sub
pop
sbb
mov
cmp
fidivrs
shrl
sarb
std
add
jne
xlat
mov
fs
sub
mov
in
nop
or
mov
movsb
push
xor
or
mov
cltd
adc
push
mov
xorl
sti
xor
lock
insl
in
pop
pop
and
mov
mov
xor
aas
fstpt
cmp
fmull
or
inc
gs
inc
movsb
pusha
sar
les
xchg
out
add
into
xor
lcall
in
aaa
push
repz
and
xchg
mov
das
mov
sar
mov
cs
mov
in
repz
add
fnstenv
adc
jbe
xchg
dec
and
xchg
xor
out
cld
sbb
xchg
icebp
add
scas
and
call
pop
mov
pushf
imul
xchg
adc
jb
mov
jmp
mov
inc
mov
jae
scas
das
and
nop
test
aam
popf
jmp
pusha
cmp
xor
push
inc
xchg
push
mov
xor
loopne
je
icebp
fldl
mov
or
mov
mov
icebp
inc
dec
xor
int3
or
mov
inc
ret
xor
lcall
xor
jg
mov
pop
arpl
imul
or
out
out
sub
adc
stos
fldl
mov
scas
mov
jnp
aam
mov
shrb
loope
inc
push
xchg
pop
decl
int3
out
mov
test
push
xlat
or
mov
xchg
shrl
sub
repz
scas
daa
mov
cltd
dec
push
inc
rorl
mov
sbb
or
mov
in
sub
movsb
bound
dec
mov
inc
in
imulb
dec
push
faddl
xchg
cli
xchg
ror
lods
jle
sahf
aaa
or
dec
int
inc
xchg
jl
cli
daa
mov
mov
dec
push
push
mov
cltd
mov
pop
fwait
mull
enter
fdivp
dec
push
mov
push
imul
mov
iret
sti
push
outsl
inc
mov
cmpb
jle
data16
cmp
dec
lods
arpl
push
ret
sub
pushf
sbb
inc
pop
mov
iret
mov
mull
mov
fdivrs
push
sub
sub
sti
cli
call
xor
mov
aam
cwtl
push
xchg
or
lds
lahf
mov
add
in
jl
push
test
int3
pop
jg
dec
std
sub
xor
add
sub
rorl
add
leave
sub
jmp
add
or
inc
sub
imul
xchg
pop
sbb
mov
cmpsl
inc
sub
je
push
jne
jg
pusha
mov
lret
xor
repnz
scas
test
enter
cltd
push
cmp
jge
inc
dec
aaa
push
aaa
cmp
popa
mov
cmp
insl
cmp
add
insb
add
push
mov
imul
bound
add
ds
je
push
cmp
or
sarb
xchg
imul
jne
xor
add
dec
into
xor
mov
std
imul
int3
xchg
push
add
mov
in
push
test
lret
jmp
mov
adc
int3
jnp
rclb
nop
fistpll
cmc
inc
push
imul
dec
cmpsl
dec
dec
addr16
add
pop
jle,pn
pop
xor
fcoms
fdivl
aaa
jne
rolb
mov
lea
jne
test
mov
and
outsl
movsb
jne
fcoms
mov
cmc
add
icebp
imul
scas
cmp
add
scas
mov
sbbb
jmp
lock
inc
lahf
lcall
bound
movl
je
cmp
cmpb
dec
call
add
add
icebp
outsl
sub
jle
aam
jmp
and
das
mov
mov
sub
out
or
sub
sub
lds
scas
es
test
adc
scas
or
daa
rcrb
ss
ljmp
xor
or
fwait
pop
lret
mov
jmp
jae
mov
mov
push
dec
jg
lahf
rol
pop
and
insl
adc
cli
leave
fs
adcb
adc
test
adc
faddl
popf
jno
xchg
add
mov
insb
fwait
xchg
mov
ds
and
jle
adc
sub
push
cmp
jno
shrl
add
sbb
enter
pusha
lahf
dec
fisttpll
js
inc
js
xor
in
inc
push
xor
pop
mov
in
xchg
inc
int3
mov
and
sbb
cmp
or
mov
cld
xorl
popf
mov
lods
das
sub
arpl
in
mov
jbe
lea
xchg
mov
xchg
sub
dec
push
scas
outsb
sbb
cmp
movsb
jo
outsl
xchg
popf
cmp
test
inc
pop
jb
out
inc
lcall
aas
pop
mov
pop
mov
mov
aas
mov
scas
mov
inc
adc
hlt
lahf
and
mulb
popf
inc
shl
push
xor
mov
fdivrl
dec
mov
inc
out
mov
mov
add
add
loopne
mov
add
std
xchg
and
std
mov
in
popa
call
inc
ret
data16
imul
dec
les
gs
in
in
jecxz
popl
or
mov
movsb
jno
fidivrs
pop
and
add
jbe
in
sbb
scas
loopne
xor
out
push
jle
fmull
pop
ljmp
icebp
or
in
xor
push
pop
outsl
popl
incl
pop
add
mov
insl
cmp
mov
dec
xor
iret
fcmovnbe
out
aas
jbe
pop
and
aam
sbb
inc
insl
mov
out
loopne
cmp
dec
mov
leave
loopne
js
lods
inc
pop
jo
sbb
les
jb
add
cmp
sbb
test
sbb
out
sub
add
scas
stos
xchg
mov
add
cwtl
push
push
das
mov
rcrl
fnstenv
add
mov
mov
inc
ret
push
andb
adc
mov
adc
fs
lods
inc
clc
jne
or
xchg
push
imul
dec
aad
imul
mov
jmp
jns
mov
mov
inc
shl
cmp
and
fdivrl
dec
xor
push
clc
xorb
lret
jecxz
push
mov
add
jnp
mov
xchg
xchg
lock
xchg
xor
lcall
xor
int
xchg
mov
mov
and
loope
pusha
mov
jae
dec
or
sahf
stos
rcl
cs
lods
mov
movsb
xlat
jb
icebp
fldz
jmp
xchg
xor
rorl
mov
out
lds
jae
and
push
ret
sub
dec
mov
lahf
int3
test
xchg
mov
add
sub
push
jg
xchg
ret
adc
jnp
sbb
push
mov
jns
enter
sbb
pop
les
adc
mov
push
cmc
popf
add
adc
pop
shll
js
mov
xor
xchg
aaa
fisttpl
adc
in
add
jmp
sbb
dec
mov
imul
and
outsl
insb
insl
mov
dec
clc
shll
stos
inc
jl
popa
add
and
rolb
dec
stos
mov
inc
pushf
pop
stos
add
leave
adc
dec
call
dec
dec
mov
dec
repz
sub
inc
mov
mov
inc
mov
jmp
movl
aas
mov
das
dec
jle
call
lock
pop
out
xchg
mov
out
in
bound
stos
cld
addl
mov
in
das
orb
pop
iret
outsl
inc
sub
leave
mov
aas
or
enter
data16
lds
sbb
and
fimuls
sbb
int
cmpsb
mov
jge
mov
pop
stos
xorb
fiaddl
ja
aam
sub
insb
lcall
xchg
or
xchg
mov
and
fildl
mov
cmpsl
aad
pusha
jnp
and
or
push
sub
dec
jle
and
fwait
shll
fsubrl
fucomi
pop
mov
or
movsl
or
pusha
and
shll
jge
jl
aaa
incb
sub
push
dec
lods
daa
popf
push
mov
cmp
push
js
push
sbb
sbb
out
cmpsb
xlat
aad
roll
mov
cmp
mov
repnz
dec
ret
mov
bound
shll
movsb
cli
jle
cwtl
cmpsb
pusha
lods
xchg
cmp
xor
movsb
push
mov
lds
jo
ds
iret
out
cwtl
das
jl
lea
sbb
sbb
cmpsl
pop
rcll
mov
xor
lahf
scas
mov
cld
sub
dec
dec
jnp
sub
out
push
mov
out
not
ss
ljmp
dec
push
add
fisttps
jmp
mov
in
add
popa
test
mov
lock
lcall
xor
lahf
in
out
pop
cmp
out
cld
out
mov
xor
sbb
mov
nop
leave
xor
int3
and
or
cmp
or
xor
sbb
inc
add
nop
addb
add
pop
push
test
push
add
leave
xor
push
cmp
adc
into
pop
mov
cmp
mov
popa
les
jl
push
jecxz
out
stos
add
clc
inc
push
ret
dec
dec
xchg
cmpsb
mov
ror
enter
pop
rolb
mov
mov
add
cld
mov
fimull
div
outsl
sub
stos
sti
and
lods
aad
fldenv
notl
dec
outsl
sarb
aad
jo
cld
xchg
cmpsb
dec
lock
sub
out
mov
shlb
loop
mov
or
stos
xchg
sbb
jae
enter
xchg
xor
inc
xchg
push
imul
fldl
aaa
sti
inc
jne
insl
sub
movsl
cmpsb
mov
fmuls
pop
pop
loop
sub
adc
and
mov
cld
adc
mov
xchg
sub
push
cltd
mov
mov
add
xor
repnz
jl
push
xor
mov
push
cmp
xor
adc
pop
ja
and
mov
cmp
or
fstpl
and
mov
sub
pop
aaa
fs
pusha
cld
pop
repnz
or
and
lret
lods
cs
dec
jb
int
es
adc
jge
sbb
sub
scas
and
push
mov
es
outsl
lods
xor
push
or
pop
out
mov
cli
stc
pop
xor
lcall
mulb
and
sub
loop
insb
std
scas
sub
adc
daa
mov
std
push
pusha
jl
push
cmpsl
xchg
mov
jg
xor
clc
inc
add
scas
jge
into
xlat
ljmp
clc
movsl
cmc
add
cmpsb
xor
divl
dec
insl
push
jmp
movsb
sub
cli
cld
jl
push
push
sbb
and
lret
in
fisttps
js
ja
dec
in
insl
shl
mov
inc
iret
xor
test
mov
testb
or
add
cmp
fcoml
cmp
adc
sub
hlt
xor
mov
xchg
push
mov
push
scas
dec
jle
sub
inc
inc
in
fwait
cmc
loope
sub
sbb
gs
push
jl
pop
dec
jmp
mov
sub
sbbb
jle
mov
loop
mov
hlt
das
xorb
punpckhbw
ljmp
sbb
bound
int3
stos
jmp
test
inc
nop
test
in
add
and
dec
xchg
cmp
rep
mov
lret
mov
jle
and
inc
inc
int3
push
lahf
adc
or
mov
movsb
mov
push
loope
mov
push
test
pop
ljmp
jno
cmpsl
mov
lods
pushf
xor
leave
and
jns
or
mov
add
in
stc
adc
xor
push
fdivr
or
push
jne
push
icebp
xchg
xchg
clc
scas
shl
dec
add
rclb
dec
jecxz
jge,pn
sbb
push
in
popf
push
inc
int3
push
xchg
add
rorl
icebp
or
jns
push
mov
mov
in
repz
mov
das
insl
mov
or
loop
movsl
dec
and
cmc
test
xor
into
fsubrp
in
jmp
ficoml
pop
mov
cmpsl
das
adc
int
int
mov
push
into
mov
lret
xor
jge
or
mov
jecxz
int
fdivl
mov
ss
add
lret
add
data16
ljmp
mov
push
andl
sub
outsb
jecxz
sbb
dec
lret
lret
sahf
movsb
test
jns
inc
adc
and
xchg
inc
pop
pop
aam
push
sahf
fadd
inc
sbb
lcall
pop
mov
arpl
mov
nop
xor
test
aad
and
add
movsb
xlat
inc
xlat
imul
stos
cmp
leave
mov
sahf
cmpsw
push
dec
fs
pop
sub
or
popa
and
rcrl
or
je
or
ja
push
pop
jbe
shlb
pop
add
cmp
lock
call
mov
js
adc
pop
jns
xor
inc
inc
mov
arpl
and
aaa
push
addl
mov
jl
mov
out
sub
jmp
jbe
out
loop
ljmp
push
push
jg
pop
int3
lahf
pop
jno
fldenv
cmp
inc
push
hlt
add
push
push
daa
mov
jmp
jge
shl
mov
sub
das
push
mov
jmp
push
jg
sub
das
test
jl
and
mov
test
in
sbb
and
mov
sub
lcall
lock
icebp
inc
hlt
xorb
mov
aam
les
inc
mov
mov
cltd
iret
mov
or
enter
outsb
push
adc
mov
pop
mull
jbe
lcall
dec
dec
mov
jnp
in
xchg
cs
mov
mov
mov
cmc
outsl
push
repnz
lret
cmc
stos
jecxz
push
sub
in
mov
notb
pop
ljmp
adc
adc
ret
push
mov
cmpsl
jae
xchg
ror
mulb
push
and
adc
push
push
pushl
xchg
movsl
xor
enter
mov
cld
xchg
dec
or
in
push
fucomp
pushf
add
push
pop
mov
out
push
or
push
arpl
pop
cmp
addr16
loope
sarl
das
outsw
mov
pop
dec
cs
cmpsb
jecxz
data16
mov
stc
pushf
cmc
adc
fmul
mov
adc
popf
scas
lods
and
lds
jns
add
ss
add
adc
cmp
pop
ljmp
in
push
push
mov
popl
add
mov
sbb
fbld
inc
fisttpll
xchg
insl
test
iret
inc
and
pop
test
mov
imul
inc
sbb
shrb
aam
jg
fucomp
in
jnp
lcall
mov
jl
xor
test
or
in
out
fistl
daa
sub
mov
xchg
pop
fldt
out
lret
or
mov
jne
xchg
sbb
pop
adc
jge
xor
fbstp
mov
fsub
mov
push
add
call
dec
shrb
pop
and
int
push
or
sti
xor
fiaddl
popa
push
or
and
xor
adc
jae
jle
test
arpl
and
sti
pusha
or
imul
inc
ljmp
sub
movsl
test
sub
jecxz
pop
push
sbb
xor
enter
sahf
adc
xchg
sub
lods
xlat
or
add
xchg
mov
hlt
int
lods
pusha
or
cmp
inc
jne
cltd
scas
inc
subb
nop
int3
add
ret
pop
push
aas
fcomp
xchg
test
and
sahf
loope
hlt
lods
jno
mov
shl
mov
stos
outsl
pop
push
add
sbb
or
out
push
adc
mov
xchg
add
shll
mov
sbb
or
fwait
jge
cmp
push
cmp
movsl
verr
aaa
cmp
and
sub
jae
negl
stos
jg
ljmp
leave
and
mov
test
aaa
cmp
mov
cmp
movsl
or
mov
xchg
out
jmp
xlat
or
ret
add
mov
mov
jl
sub
sub
pop
arpl
add
fs
jge
jp
pop
pop
pushf
insb
out
mov
dec
xchg
cmpsb
add
dec
ds
shll
ds
mov
mov
mov
into
out
ja,pt
jle
pushf
jb
mov
popa
sbb
xchg
jae
inc
add
btrl
das
add
cli
mov
fistl
xchg
push
repz
lcall
pmulhw
sub
sbb
imul
xor
push
push
rorb
in
sub
dec
insl
and
and
jnp
int
mov
sti
jl
pop
mov
js
daa
daa
cwtl
push
pop
add
jl
ss
in
hlt
pushf
and
and
scas
inc
dec
jb
xchg
cmc
cwtl
sub
mov
cmp
sub
or
add
insb
filds
dec
pop
sti
mov
in
cwtl
lcall
xchg
pop
pop
mov
insl
shl
jge
ljmp
jne
adc
in
cmp
enter
mov
fstps
or
or
rcrb
cwtl
mov
leave
xchg
adc
xchg
enter
lahf
cs
scas
cwtl
test
scas
xor
data16
jle
sub
xorb
incb
push
stc
xor
or
iret
or
adc
je
stos
mov
ds
enter
add
xchg
sub
cmp
scas
std
repz
lea
pop
push
xor
push
imulb
out
sbb
or
test
mov
ret
cmpsl
push
rclb
mov
pop
mov
or
loope
out
cmc
sahf
movsl
inc
dec
adc
outsb
pop
movsl
adc
mov
ret
test
and
sbb
adc
jnp
iret
into
test
in
push
push
aam
icebp
xor
push
iret
pushw
sub
ja
dec
aas
mov
xor
int3
outsb
mov
lds
xor
enter
cmp
push
jb
pop
stos
roll
out
lretw
pusha
leave
adc
loope
les
lea
inc
or
and
adc
jns
dec
push
inc
addr16
out
xor
pop
xchg
dec
sarb
add
shr
inc
stos
cmpsb
or
or
into
lds
loop
mov
pushf
subb
pop
jns
pop
mov
cmpsl
jo
inc
movsb
fs
scas
add
neg
inc
pop
in
jnp
sbb
mov
loopne
xchg
popa
std
call
sbbl
test
pop
xchg
lcall
ja
dec
sbb
inc
jg
mov
xor
inc
inc
push
popa
push
lods
test
adc
mov
mov
xor
outsb
sub
data16
push
in
jnp
out
mov
jg
mov
lea
sub
xchg
adc
sub
in
mov
out
mov
push
sub
jmp
cmp
pop
and
jecxz
add
addl
cmp
or
imul
jae
mov
pop
sub
out
pusha
add
jns
repnz
adc
subl
jp
cli
xchg
lret
outsl
addl
je
gs
clc
push
idiv
add
test
mov
mov
xchg
adc
push
pop
pop
dec
lret
mov
xchg
fadd
fstps
xor
rorb
lret
fwait
ret
xor
imul
cmp
dec
fs
sbb
dec
test
scas
cld
inc
sub
imul
sbb
xchg
jno
or
inc
cmc
mul
cwtl
ret
jae
pop
cmp
pushf
mov
clc
cmp
cmp
push
xorl
into
xchg
or
stos
bound
add
mov
ljmp
mov
or
arpl
push
andl
push
subl
lahf
leave
pop
rcrl
pop
les
jns
mov
cmpsl
mov
stos
pop
test
nop
sub
add
jle
mov
mov
and
xor
loope
repnz
cmpsb
dec
or
fwait
push
or
jp
scas
lds
mov
mov
js
adc
in
cmp
sbb
arpl
in
sub
mov
xchg
xchg
lods
mov
fisubl
dec
sti
gs
mov
xchg
mov
aam
pusha
dec
xor
fs
sbb
xchg
mov
push
pop
jecxz
sub
cmp
cmp
and
push
sbb
ja
imul
adc
sub
ljmp
lds
movsb
pop
scas
push
ficoms
jbe
rcl
lock
nop
sbb
and
or
mov
and
mov
out
xor
popf
cmpsb
pop
or
or
pushf
xchg
adc
scas
dec
adc
cltd
sub
rolb
push
lds
fnsave
jo
lret
aas
mov
ds
enter
jo
jl
and
add
push
out
xor
cltd
sub
mov
add
jmp
fldcw
or
outsb
or
sub
out
scas
mov
les
lods
sub
dec
out
push
xchg
inc
cmpsl
dec
and
mov
sti
adc
pop
loop
std
push
dec
cmp
imul
addr16
loop
or
mov
lock
in
fstps
fdiv
popf
loop
rcr
rcrb
and
or
rorb
movsb
xlat
movsb
mov
and
and
pop
sti
adc
jge
mov
mov
insl
les
mov
pop
xchg
or
lods
or
sbb
rcrb
fnstcw
sbb
lcall
mov
push
fidivs
es
fildl
out
rcl
pop
sbb
popf
stc
mov
mov
xor
aaa
ret
fsub
jecxz
jl
cmc
fstl
xchg
sub
inc
call
stos
jg
sub
stos
add
std
icebp
pop
jmp
mov
cmpsl
cmp
lock
out
lahf
test
negl
xchg
lahf
in
or
push
insl
cmp
je
test
push
push
jle
mov
adc
outsb
into
jo
add
outsb
jns
fs
inc
pushf
arpl
dec
outsl
fildl
in
into
dec
or
add
mov
test
mov
pop
dec
xchg
je
push
aaa
lret
mov
movsb
inc
arpl
aaa
ds
rcrb
and
aaa
mov
mov
in
dec
fwait
push
sub
inc
xorb
jle
int
jo
icebp
repnz
sub
pop
sub
out
rorb
test
jo
insb
mov
push
xchg
inc
jno
push
lcall
sbb
loop
sbb
cs
lea
gs
mov
cmp
xor
adc
adc
jg
ret
push
xchg
into
jmp
testl
dec
jnp
lcall
aaa
or
orl
push
dec
lcall
insb
mov
movb
mov
hlt
insl
xor
or
ljmp
fs
sbb
push
add
and
jecxz
nop
call
jge
imul
xchg
fcmovnb
and
dec
stc
out
pop
roll
ret
mov
jae
dec
std
scas
sbbb
dec
pop
out
or
shrl
flds
lea
gs
movsl
sbbb
scas
add
lock
shlb
negb
fs
enter
test
push
mov
aam
int
test
pop
pop
add
push
scas
xor
and
outsb
or
adc
inc
sub
adc
clc
xchg
lret
outsl
cmp
sahf
jmp
adc
sub
inc
sub
dec
adc
movsl
fcompl
sub
sbb
cmpsl
int3
in
mov
cmp
ds
das
cmp
cwtl
in
mov
inc
test
lret
cltd
ds
clc
fsts
out
sbb
mov
ljmp
add
and
adc
xchg
out
push
or
fildll
mov
shll
outsb
and
sbb
ficomps
ret
test
xchg
ds
imul
sub
or
loopne
cmp
das
lea
out
pop
push
mov
scas
lea
add
in
imul
into
rcl
fstps
add
dec
loope
push
es
fmull
xchg
dec
dec
rclb
add
cmp
in
jmp
sub
cltd
mov
sarl
testl
cld
push
mov
push
orl
sbb
pop
adc
movsl
pop
std
jb
sbb
shlb
mov
ds
repnz
add
mov
pushf
dec
inc
arpl
into
dec
xchg
mov
add
add
js
and
xchg
ljmp
out
arpl
push
push
scas
or
push
sbb
out
xor
adc
dec
mov
jecxz
repz
clc
xchg
adcl
inc
push
cmp
sahf
cmp
sub
repz
repz
fmull
or
push
push
shl
and
jmp
ljmp
xor
test
and
insl
js
inc
les
dec
jbe
dec
mov
dec
cmpsl
jge
in
push
test
in
aam
mov
dec
mov
imul
inc
or
mov
aaa
and
push
into
sbb
jl
pop
loop
lods
scas
stos
outsl
fwait
std
jnp
adc
adc
push
add
cmp
and
popf
rorl
insl
cmp
insb
or
sbb
mov
mov
rorl
or
adc
xor
or
movsl
xchg
addr16
and
cmpsl
lods
cmp
push
test
dec
mov
outsb
cmpsb
push
inc
repz
mov
dec
dec
call
shrl
and
sti
and
and
mov
mov
xlat
sbb
mov
out
add
cmp
sahf
cmp
cltd
shlb
pop
dec
fistpll
gs
xchg
mov
push
sti
jne
lahf
inc
jmp
cs
testb
jge
sub
stc
sbb
add
push
inc
mov
xchg
fidivl
dec
or
out
mov
cvtpi2ps
mov
das
cli
mov
imul
or
push
mov
mov
sbb
lds
dec
fwait
cmp
adc
fsubrp
loopne
leave
mov
dec
cmp
or
mov
jae
cmp
vpshaq
repz
push
test
push
arpl
pop
sub
bound
push
sti
ja
in
test
inc
jmp
pop
sub
adc
inc
cli
rol
pop
pop
cmp
push
cmp
ljmp
mov
sub
stos
je
or
mov
les
xchg
mov
les
fsubl
or
bound
push
xchg
sbb
pop
notl
leave
push
push
pop
stc
into
bound
inc
jno
sub
lods
add
lahf
mov
outsb
sub
mov
outsb
call
mov
inc
ret
hlt
inc
shl
je
xchg
nop
add
sbb
adc
popa
jne
out
pop
sarb
mov
xor
xchg
pop
jnp
jns
out
insl
mov
aaa
imul
adc
out
inc
ffreep
cli
cltd
stc
repnz
xchg
adc
das
cmp
jp
subl
and
enter
dec
divl
clc
mov
mov
lcall
aam
mov
fs
mov
andb
push
pop
xchg
adc
scas
cli
mov
push
in
test
jno
mov
push
dec
out
ret
inc
pop
outsl
and
mov
sub
dec
inc
aaa
sub
push
inc
fistl
sahf
insl
xchg
xchg
mov
mov
rorb
xchg
pop
nop
lods
cli
aad
mov
icebp
rep
lock
xor
mov
adc
cmp
lcall
jl
inc
lret
dec
push
lret
mov
movsb
bnd
ret
dec
aad
lahf
rol
adc
push
ljmp
leave
mov
or
jb
aad
icebp
js
jnp
push
mov
mov
cltd
mov
outsl
or
cmp
nop
xchg
lret
push
je
add
push
lahf
in
mov
push
or
xor
subl
mov
mov
arpl
sbb
adc
mov
aam
jb
dec
int3
push
addr16
adc
push
call
and
inc
and
adc
icebp
or
pushf
push
mov
adcl
andl
out
in
rcrl
imul
xorb
out
cmpsl
pop
sbb
add
dec
cld
adc
jp
rorl
sti
in
in
sub
xchg
out
fisubrs
outsb
xor
pop
pop
insb
mov
xchg
popa
push
lods
xor
cmp
cld
bound
jmp
pop
lret
icebp
imul
lea
inc
ss
push
and
jnp
mov
and
adc
imul
mov
mov
clc
xor
jae
mov
aam
lds
push
sti
js
test
or
outsl
arpl
repnz
pop
aam
jecxz
or
mov
xchg
out
mov
movsl
push
repz
mov
outsl
repz
push
jno
jmp
in
push
iret
push
mov
pop
jbe
add
xlat
mov
push
jnp
fwait
in
push
or
xchg
pop
jecxz
rolb
cmp
mov
and
xchg
insb
shl
mov
sar
xor
inc
jecxz
xchg
js
ret
int
and
fs
orl
or
pop
bound
lahf
data16
popf
jle
aaa
loopne
add
dec
pushf
popf
sbb
ja
add
cli
sub
in
loop
mov
insl
sbb
addr16
xchg
push
cmp
testl
cmp
test
cmpsb
jmp
or
dec
test
sbb
push
lret
or
xchg
daa
imul
mov
arpl
xor
pop
pop
pop
pop
mov
andnps
hlt
pop
push
mov
les
aaa
sub
fisttpll
mov
lret
fidivl
jno
stos
mov
and
rcrl
pop
mov
cmc
sub
xor
add
repz
loopne
or
ficoml
jns
mov
mov
sbb
into
sbb
add
fisubrs
push
test
movsb
mov
dec
notl
mov
mov
mov
xor
xchg
pop
xor
xor
ret
or
add
cmpsb
xor
mov
fdivrl
lock
std
data16
mov
sti
je
add
xor
mov
sub
add
nop
sbb
cmp
lods
scas
mov
push
pop
and
iret
fsubs
adc
sbb
mov
out
mov
adc
add
or
fisttpll
pop
addl
jmp
scas
negb
loop
pop
rclb
in
adc
popf
rolb
in
lret
in
mov
lea
cmp
fstl
dec
rcll
push
outsl
cmpsl
faddl
cmp
movsb
lret
shrl
lahf
test
pusha
dec
negl
inc
inc
jno
in
xchg
loop
mov
std
xor
inc
loopne
jg
movb
hlt
test
je
insb
es
xchg
push
mov
cltd
call
push
int3
adc
je
fs
mov
idivl
xchg
xor
or
sti
mulb
test
add
pop
adc
rorb
outsb
sbb
jnp
pop
stc
fnstcw
or
cli
aam
leave
mov
addb
test
push
jae
xor
dec
imul
idiv
mov
stos
and
je
mov
repnz
fists
adc
test
js
in
outsl
test
pop
pusha
mov
push
into
aaa
and
inc
and
adc
stos
int3
aas
ja
mov
lock
adc
jnp
movsb
inc
adc
add
or
jmp
sub
jecxz
or
notb
scas
jne
cld
ljmp
jl
in
popw
shlb
subb
pop
mov
in
jge
sub
test
iret
sub
dec
ret
mov
add
jmp
mov
add
pop
pop
stos
cmp
cmp
out
loope
sti
fstl
jg
add
outsb
loop
cmp
mov
jne
stc
js
mov
inc
subb
addl
pop
fiaddl
sbb
call
and
loopne
cwtl
xor
dec
int
adc
pminub
mov
fcomip
loopne
jle
xchg
adc
and
sub
mov
add
imul
cmpl
orb
sub
cmp
pop
es
sub
dec
xor
sti
test
add
jb
xor
jb
jbe
aaa
xchg
stos
mov
in
push
iret
inc
bound
addr16
or
sub
popa
adc
add
rcrl
mov
lahf
push
jge
imul
sub
je
out
test
jl
pop
jecxz
push
iret
adc
ss
shl
dec
and
cmpsb
cmc
mov
shl
add
lods
test
push
sbb
mov
leave
shl
sub
fisubs
out
mov
add
jnp
jp
mov
lock
ret
or
in
mov
xor
xchg
pop
fistl
gs
inc
xchg
ret
sarb
add
imul
js
int
pop
dec
addb
push
cs
pop
daa
popf
ja
mov
rclb
xlat
pushf
repnz
mov
scas
and
test
jnp
sbb
sbb
add
in
cmp
or
cmp
xchg
dec
addb
nop
mov
lret
lahf
mov
rorb
shll
loope
insl
dec
stc
xchg
fadds
xor
pop
or
hlt
pop
lret
mov
adc
sub
xchg
mov
push
jo
lock
jnp
bound
xchg
loop
xor
xor
test
ret
inc
and
jb
pop
rorb
outsb
pop
adc
ja
mov
push
je
jne
sbb
call
bound
into
mov
dec
movsb
push
push
add
dec
sbb
pop
lahf
xor
inc
cmp
enter
dec
fiadds
add
rorl
cmp
mov
fstps
inc
sub
mov
xor
adc
sar
imul
mov
test
add
dec
testb
in
sub
jecxz
ret
xchg
sahf
pop
stc
stos
lea
push
stos
out
push
inc
sub
xor
mov
jle
fldt
sbb
movsb
arpl
int3
outsl
push
jbe
dec
stc
inc
sbb
cmp
std
test
add
sub
shlb
and
mov
lds
adc
cwtl
push
adcb
div
push
cmp
movsl
mov
jle
dec
arpl
xchg
rcl
mov
dec
test
mov
xor
es
incl
stc
push
cmp
lret
jge
lds
xor
jmp
sbb
mov
xor
sbb
sub
push
pop
mov
push
adc
pop
xor
gs
lret
stc
loopne
into
enter
xchg
popa
leave
sbb
es
pop
out
cmp
aas
xchg
cmp
pop
add
out
sub
adc
add
jecxz
xorl
adc
loope
dec
cmpsl
and
xchg
popf
mov
or
in
in
and
jp
cmpsb
xor
pop
mov
jno
and
and
xchg
sub
inc
pop
test
lock
int
jl
inc
outsl
cmp
and
or
icebp
jmp
add
repnz
adc
adc
mov
outsl
dec
mov
mov
test
add
bound
xchg
ss
xchg
dec
into
jne
pop
mov
ds
push
push
daa
fidivrs
push
nop
imul
pop
mov
add
xchg
into
rcr
mov
adc
loope
jo
aam
lea
bound
or
je
pushf
or
jmp
rorl
lahf
push
xchg
mov
mov
sub
cmp
dec
push
scas
clc
das
mov
or
push
jnp
pop
add
mov
scas
cmpsb
mov
dec
adc
sub
aas
dec
pop
dec
ljmp
in
dec
inc
jae
and
and
out
mov
push
mov
dec
test
push
enter
daa
popa
repnz
pop
push
lahf
adc
xlat
es
mov
jbe
sar
push
cltd
repnz
insl
pop
stos
pshufw
lahf
dec
pop
fisttpl
enter
out
push
dec
jno
iret
sub
jp
mov
or
jmp
inc
enter
and
adc
jbe
bound
data16
add
sbb
outsb
jle
sbb
cmp
insl
lret
push
add
or
pop
xchg
in
leave
sub
jge
xor
ljmp
pop
in
dec
roll
shrb
add
add
inc
subb
push
and
xor
pusha
lds
into
int3
push
test
call
pop
xor
push
add
or
jbe
dec
iret
pop
jmp
pushf
idivb
jmp
add
mov
das
cmp
mov
mov
sub
mov
dec
fists
lea
inc
fsubr
stos
divb
stos
mov
pop
cmpsl
jecxz
push
pusha
or
mov
out
cltd
cmp
sbb
cs
jecxz
insl
adc
pusha
mov
sub
pop
pop
jb
cmp
xchg
dec
push
enter
out
sbb
in
adc
and
ja
mov
outsb
movsb
mov
les
xor
jne
iret
jne
push
lret
mov
out
test
pop
sbb
xor
es
lods
add
inc
push
lcall
cmp
add
in
inc
mov
push
outsl
fisubs
mov
push
ljmp
jbe
ljmp
mov
lret
cld
push
std
mov
add
pop
cmpsl
loopne
mov
gs
pop
sbb
dec
mov
cld
repnz
lret
push
mov
mov
pusha
cmp
xchg
push
pop
adc
cld
pop
lods
jmp
push
dec
xchg
sub
jl
divb
jl
repz
lret
pop
sbb
jge
movsb
orl
js
out
rcrl
inc
mov
jno
insl
stos
in
and
sub
inc
nop
int
cmpb
sbb
cmp
push
aaa
mov
sbb
xor
lcall
jp
xchg
imull
mov
arpl
xchg
ret
lods
xchg
mov
cmp
jle
xchg
in
add
call
stos
or
xchg
dec
xor
dec
cwtl
lods
popf
rclb
jp
cmp
jp
out
shrb
lods
jg
stos
jle
push
inc
and
xor
stc
push
xchg
shlb
dec
pop
inc
adc
pop
out
xchg
inc
cmp
pop
xor
xor
aad
add
xor
xchg
in
call
mov
or
shlb
sub
fimuls
je
jmp
jg
or
xchg
and
xchg
add
popf
add
pop
mov
cmp
into
pushf
adc
inc
frstor
sarl
jno
scas
inc
mov
push
adc
xchg
inc
fsubrl
lock
mov
addb
sub
or
adc
outsb
jb
sbb
imul
jmp
dec
push
pop
xor
stc
pop
sbb
xor
dec
cltd
jmp
mov
mov
mov
ss
xlat
sub
or
jb
and
xor
pop
add
add
xchg
fcoml
xchg
stos
clc
add
out
inc
hlt
push
mov
inc
mov
add
xchg
ret
jge
ficoml
jbe
mov
into
wrmsr
mov
popf
adc
xlat
vpunpcklwd
sub
sbb
ret
pop
popf
sub
aaa
cmp
mov
and
jg
inc
enter
std
andl
push
out
mov
es
ljmp
push
xlat
stos
or
fwait
mov
sahf
add
imul
imul
mov
pusha
dec
movzbl
lods
fcomps
push
cltd
pop
gs
push
push
mov
pop
inc
insl
adc
sbb
xchg
mov
sbb
ret
adc
xlat
or
ja
andl
xor
cmpsb
or
inc
xor
dec
jne
adc
and
push
daa
xor
loop
fwait
mov
ss
push
cmp
sub
xlat
jno
jo
mov
mov
xlat
xchg
jge
ret
dec
push
js
or
fildl
insb
and
fs
addr16
jb
addb
incl
es
cwtl
pop
xchg
xor
mov
jmp
mov
fistpll
insb
xlat
ret
test
mov
aam
fdivl
fs
les
in
mov
fmul
je
jo
jns
lret
std
mov
jl
inc
incl
jl
fs
test
dec
data16
nop
xor
or
inc
pop
mov
mov
push
dec
daa
clc
imul
insl
rolb
or
pop
sub
loope
adc
or
pop
jp
push
push
inc
sti
mov
push
fmul
jnp
std
dec
sbb
in
fdivrl
loopne
sub
lret
push
test
in
add
dec
adc
in
add
out
push
xchg
int3
or
xor
pop
shrb
sbb
add
jns
mov
orl
mov
sub
pop
pop
aad
das
dec
or
sub
dec
jo
aad
cmpsl
cmp
cmp
cmp
hlt
mov
rorb
cmp
push
stos
cmp
adc
rcll
mov
loope
push
pop
rcl
cli
cmp
out
sbb
push
psubsw
imul
scas
mov
and
popf
mov
push
push
and
mov
jle
insl
mov
in
jmp
adc
pop
pop
push
push
push
sub
int
dec
mov
mov
mov
pop
cs
clc
in
mov
mov
xlat
pop
movsb
mov
jmp
xor
add
mov
pop
out
adcl
jo
mov
in
repz
dec
loopne
sbb
test
in
sarb
adc
enter
paddusw
sub
das
stos
push
sbb
xchg
aam
jnp
cmpsl
mov
stos
stos
and
or
sub
pop
inc
mov
xchg
xor
mov
mov
daa
out
ds
mov
jne
cmp
cmpsb
mulb
aaa
mov
sbb
shrb
or
popf
adc
ja
pop
enter
je
xor
pop
sti
sahf
cmpsb
inc
iret
xchg
sub
pop
sbb
cmp
cltd
in
mov
movsl
gs
sahf
pop
add
int
jb
je,pt
movsb
test
cld
popf
xchg
mov
enter
test
dec
hlt
andb
daa
cli
popa
mov
push
inc
adc
jno
sbb
fdivl
mov
mov
clc
mov
or
cmp
jmp
cmp
mov
leave
jecxz
mov
jmp
mov
pop
cmpsb
or
test
int
iret
adc
sub
xchg
cmpb
sbb
xchg
fstl
pop
hlt
mov
stos
dec
mov
mov
adc
sti
in
outsb
and
xchg
push
sbb
or
fimuls
push
dec
mov
nop
sbb
rol
lods
jl
or
cld
aaa
int3
scas
jae
sub
add
ret
in
iret
insb
mov
pop
fimull
scas
shrl
hlt
lret
mov
add
in
mov
ficoml
mov
xchg
into
cmp
mov
ds
ds
sbb
in
les
dec
lods
aas
dec
xor
mov
popf
xchg
push
pushf
mov
out
stos
lods
jmp
mov
cli
sub
sbb
or
pop
lret
adc
pop
mov
adc
mov
adc
out
jmp
mov
sbb
adc
jp
cmp
fdivl
add
jno
sbb
and
ja
pop
cld
sarb
xlat
int
fidivrs
ds
inc
out
adc
mov
mov
imul
rorl
insb
xchg
jns
fiaddl
cmc
xor
or
push
dec
in
jge
or
stos
xchg
push
cmp
pop
mov
out
sbb
pop
fisttpll
xchg
pop
jb
shll
stc
jbe
in
jno
mov
adc
icebp
ja
jns
jo
jl
push
mov
into
pop
scas
adc
jl
dec
repnz
hlt
and
push
sub
push
dec
cltd
iret
or
adc
call
mov
arpl
dec
sarb
inc
insb
pop
jle
ss
fmul
pop
pop
mov
inc
fsts
cmp
mov
pushf
aas
lea
dec
xor
push
insl
xor
out
mov
mov
mov
pop
cmp
dec
xchg
orb
mov
fisubrs
test
add
daa
xchg
outsb
inc
lcall
enter
addl
in
movsb
sbb
push
dec
and
pop
and
sbb
push
roll
out
xchg
repz
add
mov
and
cmovo
dec
add
in
insb
repnz
cmp
add
xchg
fnstsw
sbb
mov
incb
test
test
aad
mul
cmp
sbb
inc
loope
data16
mov
sti
or
pop
adc
add
stos
dec
rcll
fs
insb
push
ss
and
inc
pop
mov
pop
and
sbb
mov
xchg
mov
js
pop
mov
mov
inc
dec
test
xchg
lret
mov
xor
sti
pop
daa
jo
jp
and
notb
adc
test
out
sbb
pushf
or
sbb
decb
insb
adc
mov
dec
movb
clc
dec
adc
pop
dec
mov
add
sbb
jne
shr
push
int
inc
out
fildl
jbe
test
rcrb
mov
or
rcrb
jns
push
jl
stos
mov
lret
rcrl
outsb
lret
mov
dec
pop
bswap
testb
stos
mov
sub
test
sub
mov
jno
mov
insb
inc
pushf
dec
fiaddl
mov
xchg
or
pop
ja
mov
inc
cmpsl
xchg
ret
jl
movsl
cmc
int3
cld
mov
add
push
loop
jle
xchg
sub
pop
scas
ret
mov
imul
loop
outsb
leave
pushf
iret
fidivrs
push
jl
jg
dec
hlt
adc
push
jae
dec
adc
movsb
mov
xlat
fcom
jp
adc
and
inc
sub
xchg
test
mov
push
test
add
sbb
mov
imul
sub
dec
pop
popa
pop
dec
jp
cmp
dec
fdiv
adc
xor
xchg
mov
shll
cmp
adc
add
xor
fs
xor
in
cmp
popf
xchg
repnz
mov
cwtl
rcrb
push
xchg
les
jg
ljmp
ja
jo
sbb
add
fsts
push
cmp
std
adc
pushw
or
fdivr
push
sub
sbb
or
int3
imul
test
push
cmp
sub
push
fisttps
outsb
test
push
jnp
jg
jg
mov
inc
adc
lods
lock
sbb
add
aad
gs
in
sbb
shrl
add
mov
loopne
push
sbb
leave
dec
mov
xchg
call
ret
lods
loop
enter
das
cwtl
sets
stos
jbe
mov
dec
mov
out
es
add
je,pn
mov
fs
scas
test
sub
loopne
adc
sub
icebp
push
dec
sbb
push
popf
jecxz
cwtl
xchg
xor
xor
sub
fwait
jns
and
xchg
add
int3
xor
int
pusha
sub
fimuls
xchg
jp
cmp
mov
fucom
test
test
pusha
test
jp
cvtps2pi
mov
bound
cs
shll
ljmp
sbb
ljmp
jp
jbe
pop
adc
stos
adc
rcrb
dec
inc
xchg
int
dec
and
sbb
fsts
subl
lea
fistl
xor
xchg
out
inc
xchg
xor
jae
mov
shrl
imul
in
jmp
in
mov
push
push
arpl
sub
adc
and
or
mov
jge
test
loope
inc
push
std
aam
ljmp
insb
lods
mov
lcall
jmp
pop
or
es
push
sbb
addr16
or
call
push
inc
shl
inc
cmp
or
cmp
push
pop
and
in
sar
sub
jae
jg
xchg
ss
test
pop
adc
clc
mov
mov
pop
cmp
xchg
pop
inc
in
test
dec
mov
lahf
inc
mov
rcr
dec
iret
nop
sbb
test
stos
dec
jp
or
ja
scas
cs
cli
xchg
rol
jnp
fldenv
jns
mov
lea
mov
push
sub
xchg
lea
sub
or
cmp
xchg
jp
mov
ljmp
imul
cmp
lret
scas
jl
lods
fcmovbe
dec
sub
out
mov
jmp
xchg
jg
roll
mov
popa
data16
adc
arpl
jge
in
jg
decl
out
adc
mov
das
hlt
or
and
mov
mov
adc
dec
adc
adc
mov
addr16
aam
push
fnstenv
push
movsl
in
jnp
sub
dec
out
nop
lcall
repz
sbb
popl
jecxz
setno
adc
dec
and
xchg
jle
orb
imul
pop
add
shll
std
xor
mov
cld
dec
inc
aam
sarl
jecxz
iret
je
mov
sbb
test
fdivrl
xchg
addr16
cwtl
rorl
cli
add
loope
ds
adcb
ud0
sub
jmp
xor
loope
out
and
sbb
out
jecxz
out
mov
gs
aam
xchg
xchg
inc
xlat
sub
test
cwtl
inc
out
xchg
mov
imul
push
mov
lock
jl
cmp
push
xchg
test
cmc
enter
mov
xchg
pushw
test
pop
inc
jge
dec
repz
sbb
push
fistpll
pop
push
dec
aaa
or
mov
in
sti
sahf
cmp
into
lods
mov
mov
push
dec
mov
popf
mov
das
pushf
jo,pt
jp
pop
je
sbb
add
popf
adc
movsl
jo
loop
test
fwait
popf
jnp
mov
dec
out
stos
dec
push
subl
adc
bound
call
mov
sub
mov
sub
cmp
rol
cmpsl
sub
push
adc
sub
pop
or
rcl
sub
sbb
lods
dec
jne
xchg
test
cmp
test
testl
ljmp
jecxz
data16
insl
rorb
or
mov
jae
push
aam
ss
sbb
sbb
out
psubw
inc
les
add
arpl
or
pop
repnz
dec
sub
imull
call
call
dec
in
js
jnp
aad
push
sti
cmp
mov
mov
test
bound
test
mov
sbb
and
into
repnz
imul
jecxz
sbb
test
dec
push
add
add
pop
icebp
lret
jl
lahf
mov
cmpsl
std
je
addr16
sub
xchg
mov
stos
jne
mov
js
cs
pop
mov
xlat
imul
icebp
pop
lods
movsb
xchg
cs
movups
dec
cmp
sbb
sbb
es
and
sub
clc
and
mov
loop
pop
ljmp
xor
sbb
add
sub
sahf
dec
pop
cli
loopne
leave
xchg
dec
adc
and
in
dec
sti
fwait
and
jno
clc
out
dec
scas
jo
aas
adc
inc
adc
sti
add
loopne
outsb
test
inc
iret
fdivl
adc
ss
mov
daa
sbb
sbb
lcall
mov
add
and
and
adc
sti
mov
scas
gs
leave
push
and
xor
push
pop
or
add
orb
je
jg
xor
push
notl
or
dec
pop
or
pop
sbb
dec
dec
cmp
ret
or
into
mov
cmp
pop
fistl
xor
inc
lock
cmpsb
mov
jno,pt
insl
ljmp
inc
mull
fiaddl
xchg
js
jl
mov
out
inc
and
xor
hlt
movsl
mov
pop
push
push
inc
push
pop
clc
pop
das
outsl
sbb
outsb
rolb
mov
inc
ds
jb
jmp
scas
cmc
mov
rcll
test
addr16
jg
in
out
jo
shrb
sbb
imul
mov
popf
setno
loope
push
push
mov
sub
dec
andl
push
inc
lods
aaa
es
scas
mov
cmp
adc
test
fcoml
fs
hlt
lahf
mov
jno
stos
pop
fadd
cmp
insb
dec
fnstenv
jno
out
jo
xlat
add
dec
mov
ret
addr16
pop
adc
mov
sub
pop
pop
xchg
add
add
es
pop
pop
out
scas
mov
jo
mov
xchg
pop
outsl
cmpsb
push
pop
push
cwtl
pop
movb
xor
mov
mov
in
sub
add
test
popf
fsubrl
test
rcrb
push
fidivs
jmp
gs
xor
mov
push
mov
sub
aam
sbb
lcall
pop
je
outsb
jp
ss
fadd
std
cmc
sub
and
mov
xchg
xor
jmp
dec
fistl
sbb
sbb
test
dec
cltd
out
mov
xchg
and
inc
dec
mov
push
addr16
scas
movsl
sbb
cmc
dec
xor
sub
cmpsl
mov
push
and
mov
fwait
jp
pop
sbb
int
and
jmp
stc
mov
sti
push
loope
data16
rolb
sbb
loop
adc
std
cmp
cld
mov
cmp
mov
jno
xor
mov
xchg
into
add
test
je
inc
sub
rcll
mov
rcll
lds
lods
xchg
lahf
pop
popa
mov
clc
push
mov
in
xchg
lock
enter
sarb
xor
jbe
int3
test
loopne
stc
jne
or
sbbl
popa
sub
xcrypt-cfb
cmpsl
and
rcll
fnstcw
push
movsb
jae
xor
pop
jl
lods
insl
push
jo
and
pop
xorb
ljmp
mov
fidivl
scas
dec
psubusb
out
mov
ffreep
xchg
dec
cmc
not
outsb
xchg
in
xchg
jge
add
and
je
adc
adc
rolb
mov
jle
loope
or
jo
in
loopne
std
mull
xchg
pop
push
cli
js
sub
add
pushf
inc
fbld
jle
sbb
push
out
adc
mov
cmp
mov
test
push
in
xchg
dec
dec
mov
in
pop
xor
cwtl
popf
pop
fldenv
ficompl
push
or
mov
or
das
mov
add
je
inc
mov
xchg
hlt
sub
adc
pop
fcompl
shrl
pop
das
sahf
pop
lods
adc
fcmovne
xchg
loope
or
out
and
sbb
cmp
pop
mov
adc
icebp
imul
pusha
add
ja
jno
or
pusha
mov
adc
int3
movsb
mov
or
dec
mov
in
push
fs
xlat
out
addr16
xchg
leave
push
test
icebp
aad
cmp
sbb
inc
aad
adc
adc
sub
dec
lret
std
sub
pop
aam
jbe
and
pop
call
dec
in
ds
fwait
and
cli
hlt
mov
insb
xor
bnd
lock
push
in
shll
bound
pop
pop
push
inc
push
and
xchg
and
xorb
sub
inc
popf
cmp
and
pop
jo
mov
dec
or
data16
subl
cltd
std
scas
cs
sbb
les
imul
cwtl
cmpps
sub
int
das
or
or
mov
dec
addr16
loopne
push
jg
bound
cmp
cmp
loopne
fnclex
xchg
pusha
popa
fnstsw
daa
adc
iret
mov
jl
sub
push
push
lds
out
jg
data16
adc
hlt
mov
push
std
jae
lret
das
adc
sbb
bound
int3
icebp
push
adc
ror
fists
arpl
push
push
adc
inc
popf
adc
addr16
sub
mov
pop
jbe
fidivrs
inc
in
stos
call
and
inc
lds
adc
fcmovb
add
dec
cmpsb
sub
cmp
dec
sbb
push
and
imul
push
inc
push
xchg
mov
inc
out
mov
scas
xor
xchg
filds
jnp
and
xchg
cltd
pop
addr16
lret
insl
sarl
cltd
shll
in
push
ja
mov
push
cld
jae
push
xor
insl
xor
pop
cmp
push
jnp
fldl
pop
adc
mov
push
rcll
xor
rcl
push
in
loopne
dec
add
fwait
push
inc
nop
cltd
ret
jne
jb
push
outsb
dec
sub
dec
push
push
int
jg
sbb
fstl
mov
in
popa
pop
out
leave
shrb
in
in
pop
divb
dec
adc
dec
cmpsb
add
shrl
cmp
mov
iret
jbe
xchg
andl
daa
pushf
inc
adc
mov
inc
pusha
pushf
jnp
in
push
pop
jo
andl
out
fistpl
sbb
scas
lret
inc
jmp
jl
mov
imulb
dec
out
push
mov
test
inc
sub
lds
cmp
sub
sahf
pushf
sti
loop
ret
push
jno
dec
mov
inc
inc
add
aad
add
mov
xchg
sarl
fcom
cwtl
sahf
loopne
or
jmp
cmpsb
and
push
xlat
lea
xchg
adc
rcrb
add
addb
dec
ljmp
cmp
sub
jnp
popl
xor
dec
dec
frstor
loop
add
les
inc
mov
jb
xchg
dec
in
sub
cmc
adc
loop
xlat
sub
mov
into
es
aaa
inc
push
dec
aad
pop
pop
inc
out
mov
inc
fsubrl
ret
push
jns
das
xchg
inc
jmp
out
fildl
mulb
insb
mov
sub
adc
fnstenv
and
jnp
pop
sbb
and
cmp
jle
les
jg
add
mov
lock
pop
popf
and
and
and
push
ja
out
mov
push
xor
push
into
cwtl
ljmp
mov
fstl
stos
das
mov
stc
rorl
mov
orb
in
dec
push
stos
scas
pop
mov
mov
add
loope
jge
pop
in
and
dec
sahf
jecxz
int
testb
xchg
sub
mov
mov
jae
adc
pop
rcrl
gs
mov
or
lret
pop
pop
jne
aas
mov
sub
addl
mov
fbld
clc
add
dec
mov
xor
pusha
push
pop
mov
mov
push
jb
add
mov
loope
xor
mov
loope
push
dec
mov
es
jp
push
add
test
je
aam
push
int3
pop
and
stos
imul
loopne
je
inc
cld
mov
xchg
push
mov
mov
xlat
push
lret
aas
es
sarb
cmp
inc
fldcw
pop
test
call
adc
or
cmp
mov
aas
push
lods
cld
push
in
ss
fildll
lea
xchg
mov
dec
dec
int
loopne
repz
insb
scas
adc
popa
mov
lret
popa
add
lods
jle
sbb
inc
dec
imul
sarb
pusha
and
mov
dec
hlt
sub
pusha
icebp
je
sbbb
mov
xorl
and
out
data16
push
inc
aas
cmpsl
sbb
mov
fwait
xchg
outsb
or
cmp
cltd
std
push
or
mov
or
mov
mov
jmp
lret
pop
loope
shll
pop
cmc
mov
jae
flds
push
or
stos
xchg
pop
xor
xchg
out
rclb
add
lcall
and
xor
sbb
jmp
aaa
popf
adcb
jle
hlt
divb
jbe
push
mov
aad
into
jno
nop
inc
xchg
pop
mov
jle
in
pop
imul
mov
xchg
movsl
adcl
xchg
push
rorb
test
mov
xchg
inc
lret
enter
jo
add
das
outsb
xor
bound
lds
adc
xor
out
dec
sub
cmpsb
in
aad
cld
xchg
cld
mov
sarb
cmpsl
inc
in
leave
es
shlb
outsb
adc
dec
iret
stc
hlt
mov
sub
mov
fst
std
xchg
sbb
ret
loopne
jmp
adc
inc
jecxz
xor
scas
jns
adc
lret
lods
in
cmp
and
dec
out
rcll
sbb
cmpb
ljmp
mov
fdiv
je
cltd
sub
ja
fwait
dec
cmc
pop
fisttpll
stos
mov
adc
aam
icebp
dec
ds
mov
cmp
out
push
lea
nop
push
cltd
pop
adc
pop
dec
xchg
stos
add
push
lcall
sti
clc
inc
and
push
push
repz
andb
cld
mov
popf
or
xlat
sub
mov
mov
lods
pop
ja
in
xor
outsb
popa
mov
repnz
sbb
scas
call
jmp
and
sbb
add
lahf
mov
std
cmpsl
fidivs
mov
pop
addr16
jecxz
inc
hlt
call
aad
mov
adc
mov
dec
adc
int3
push
lock
sete
and
hlt
and
jecxz
inc
jge
faddl
push
mov
test
push
xchg
lahf
aaa
lea
inc
pusha
cmp
or
scas
mov
jp
insl
dec
in
inc
fstps
adc
lods
ljmp
adc
outsb
mov
and
jb
xchg
and
aam
ss
and
bound
add
in
or
fcom
call
lahf
incb
cmp
inc
or
outsb
int3
cwtl
mov
pusha
push
dec
inc
ja
mov
jmp
jnp
xchg
in
ja
sbb
and
shlb
lret
mov
pushf
pop
filds
dec
cmp
enter
pop
sbb
fnstcw
sbb
iret
sbb
mov
inc
mov
inc
cmpsb
lods
mov
xor
push
jnp
inc
inc
sbb
push
pop
cltd
fnstenv
lock
adc
bound
mov
xchg
or
inc
adc
sub
addb
jg
pop
push
loopne
jbe
std
andb
jb
imul
dec
pop
push
cmp
subb
xor
scas
mov
push
push
pushf
out
sub
icebp
xchg
insb
sbbl
jo
inc
lods
shr
dec
stos
push
and
sub
pop
pop
pop
sbb
inc
out
xor
and
fisttpl
mov
stos
sbb
cmp
aad
xchg
add
cs
push
sbb
repnz
fnsave
mov
or
std
sub
js
pxor
repnz
enter
push
insl
pop
ficompl
xor
dec
cmp
push
scas
repz
jnp
fs
cmc
icebp
stc
popf
aam
test
and
cmc
outsl
pop
sahf
mov
test
mov
sbb
or
subb
or
add
in
fwait
cmp
in
mov
jae
loopne
xchg
out
cwtl
shlb
xchg
out
cmpsl
and
jecxz
jl
cmp
in
stc
dec
ds
in
sub
int
push
adc
faddl
and
fwait
xchg
or
call
stos
inc
push
sti
push
inc
jecxz
into
lds
js
mov
test
mov
push
loopne
and
adc
iret
aad
push
cltd
inc
jecxz
ds
sbb
test
push
push
aad
sbb
sub
andb
xchg
jo,pn
sbb
or
jp
jno
cli
iret
or
pop
mov
je
pop
imul
jl
sub
sbb
inc
and
mov
imul
aam
shlb
enterw
xchg
jns
xchg
xchg
sub
ljmp
out
sub
cmp
pop
loopne
rcrl
movsl
xor
js
jae
int
jmp
dec
jl
fisubrs
idivb
cmp
dec
mov
mov
out
decb
cli
adc
clc
mov
xor
sub
cld
addl
subl
rorl
pop
rcl
cmp
in
add
dec
xor
lds
pop
cmc
add
adc
loop
in
aas
mov
add
jns
sbb
pop
jo
pop
push
test
xorb
fwait
je
xor
bswap
push
and
mov
fisubl
mov
test
xor
lods
add
mov
sub
adc
rol
loop
sub
orb
outsb
dec
jg
loope
dec
inc
fwait
pop
addr16
pop
mov
jbe
pop
inc
or
repz
stos
mov
xchg
pop
cmp
bound
push
pop
fsubl
xor
or
imul
push
inc
fisttps
add
mov
xor
icebp
lcall
mov
pop
fwait
inc
das
shr
out
jmp
popl
adc
std
mov
dec
dec
jb
jecxz
aas
ljmp
or
mov
xor
sub
mov
mov
test
xchg
jmp
mov
pop
lcall
jns
loopne
aad
xor
xor
mov
sahf
popa
mov
xchg
bound
cld
rcll
cmp
sub
xlat
pop
ficompl
fwait
cmp
scas
and
stc
or
push
js
and
cmc
lea
add
jge
outsb
ficoml
inc
test
fcmovb
subl
push
rcl
cwtl
cmpsl
sbb
dec
jae
movsb
imul
sbb
sub
sbb
adc
mov
pop
jmp
jb
aas
lret
xor
push
pop
fnstcw
add
out
xor
rorb
mov
push
lea
bound
xlat
pop
stos
sbb
push
or
aaa
lea
pop
ret
iret
xor
mov
test
mov
stos
cmp
test
insl
pop
outsb
xlat
psubsw
div
pop
movsl
push
or
fnstsw
inc
mov
js
mov
xchg
or
aaa
lahf
jp
mov
cld
push
hlt
pop
push
jns
inc
lock
xbegin
jecxz
idivl
jns
test
cmp
jnp
sub
mov
cld
test
lock
mov
insl
data16
sub
and
or
aaa
adc
fisubrs
test
mov
jecxz
adcl
arpl
rcrl
loopne
dec
pop
pop
lods
inc
cmpsb
ljmp
fiaddl
mov
icebp
sub
in
test
lcall
jne
testb
jge
cmp
dec
xchg
lock
rorb
and
stc
xchg
sub
xor
movsl
inc
lret
add
push
xor
and
and
fnsave
mov
cmp
test
arpl
shlb
fcmovnbe
rclb
add
mov
sbb
mov
test
fisubl
mov
pop
addb
aam
mov
pop
insb
lods
test
test
mov
test
lds
push
add
push
shlb
ficompl
aas
aaa
aam
fidivrs
lds
jp
push
adc
mov
pop
shl
mov
mov
pop
in
fiaddl
lea
jae
out
inc
jo
pop
fisttpl
inc
addl
jmp
xchg
mov
popf
fidivrl
cld
xorl
lds
add
pop
xchg
adc
jl
pop
fcom
leave
add
out
sbb
mov
imul
or
inc
pop
sbb
push
xor
pop
add
jmp
imul
pusha
add
dec
cmp
xchg
inc
mov
fcompl
hlt
cmp
cmp
out
sub
pop
cmpsb
idivb
shrl
xor
ret
xchg
dec
icebp
mov
aad
jnp
inc
or
stos
or
push
dec
cmp
mov
sbb
imul
psrlw
mov
adc
or
daa
mov
mov
sbb
or
inc
mov
in
xchg
movsl
jne
push
dec
movsl
bound
imul
ret
stc
lods
stos
mov
cmp
cmpsl
popa
lods
add
ss
dec
and
stos
inc
nop
arpl
imul
sub
xor
xchg
pusha
xor
stos
mov
and
cwtl
jecxz
xor
rcrl
and
mov
test
in
xchg
adc
inc
mov
cmc
std
call
and
inc
ljmp
je
loopne
enter
fwait
jl
sub
lods
mov
push
das
adc
dec
inc
sub
mov
scas
hlt
mov
dec
push
and
loope
aad
mov
ja
stc
cltd
sub
xchg
jb
pop
test
jb
and
ss
lds
jge
mov
cltd
test
fistpl
mov
ja
push
out
js
add
mov
xchg
in
xchg
mov
xorl
lret
push
xor
mov
stc
lret
mov
ss
das
pop
and
xchg
xchg
push
push
stos
dec
daa
add
add
subb
or
mov
out
push
pop
pushf
jnp
popa
icebp
push
mov
mov
imul
orl
stos
dec
mov
popa
xchg
push
cmp
fisubrs
mov
mov
aad
enter
das
pop
scas
les
mov
jge
xor
das
test
daa
dec
jnp
cmp
dec
in
rolb
sar
int
cmp
cmp
loope
add
sbb
dec
ds
sti
test
dec
lock
outsl
fcompl
push
cmpsb
xchg
jg
pop
adcb
jp
sub
add
arpl
cmp
jp
xchg
pop
pavgw
test
jo
jl
cmpb
mov
aam
jno
stc
orb
js
loop
cmc
sbb
fimuls
inc
mov
mov
ja
jle
add
shlb
out
jp
inc
xor
lods
pop
dec
pop
adc
mov
mov
push
push
mov
xor
dec
xor
gs
push
pushf
hlt
fwait
or
inc
pop
lret
imul
out
movsl
daa
cmp
sbb
std
loope
adc
or
or
aas
int3
and
cmpsb
js
push
push
jae
inc
repnz
sub
mov
dec
ret
cmc
jg
dec
jne
stos
push
fptan
xchg
jae
lret
pop
dec
cs
pop
fsubrl
cmp
mov
pop
aaa
adcb
pop
add
dec
or
or
mov
mov
sti
push
xor
shlb
sbb
insb
and
xor
popf
xor
pop
dec
or
mov
and
dec
and
xchg
dec
fimuls
mov
jl
mov
sub
imul
pop
adc
lret
arpl
pop
mov
cmp
lret
insl
rorb
ds
fwait
addr16
xchg
popa
out
data16
xchg
out
int3
js
into
pop
adc
es
or
and
cmp
in
push
mov
cmp
insb
jne
xchg
jo
sub
cmp
push
testl
lock
call
addr16
push
mov
stos
mov
sbb
mov
dec
push
mov
jge
lds
mov
lret
inc
dec
fs
mov
jo
dec
ret
inc
pusha
rorb
mov
loopne,pt
aad
ss
pop
cmpsl
aam
pop
sbb
fcoms
inc
push
test
dec
out
dec
outsl
jae
pop
dec
mov
cmp
rclb
les
push
cmp
test
mov
andb
sbb
fcmovb
or
xchg
addb
mov
xor
popa
push
and
mov
add
pusha
out
enter
push
xchg
and
add
sarb
outsb
stos
push
push
dec
or
das
jp
push
add
popa
std
xor
jge
popf
test
int3
push
out
loopne
adc
scas
mov
xor
mov
push
dec
dec
mov
push
jo
js
lret
lret
push
jnp
movsb
xchg
mov
jns
pop
inc
fildll
jp
lret
aam
aaa
or
ss
scas
pop
push
loopne
sbb
cmp
lods
xchg
push
cmp
xor
push
mov
mov
add
aad
xlat
testl
mov
dec
jae
jb
imul
jmp
xor
sbb
inc
pop
adc
outsb
jl
push
aaa
std
lds
stc
ret
mov
cli
popa
sbb
xor
cmovns
mov
out
sar
imul
sub
push
outsl
inc
xchg
xchg
inc
sarb
dec
ret
mov
fildll
ror
les
std
cmp
pop
in
mov
roll
insb
aad
add
jne
pop
jg
pop
mov
xlat
jo
pushf
mov
xchg
daa
xchg
test
inc
sub
inc
subl
lock
jmp
repz
or
sub
jge
jmp
fwait
sbb
push
and
les
aaa
lahf
out
push
shlb
dec
je
mov
jmp
movsl
and
lock
jbe
inc
or
sub
testb
incl
iret
inc
imul
and
and
stos
shl
cmc
test
jno
cmp
imul
enter
or
cmpsb
mov
jne
ret
xor
cmc
int
inc
lret
cltd
inc
or
cmc
or
movsl
int
lahf
outsb
cmpsl
in
in
imul
mov
stos
testb
dec
negb
mov
int3
test
lock
add
push
pop
jae
mov
push
mov
xor
dec
push
xchg
cmp
lret
js
or
aaa
leave
jno
mov
push
fdivrl
xchg
or
imul
dec
add
test
dec
loop
lods
dec
sbb
movsl
xor
lock
shrl
add
or
and
shlb
je
cmp
cmp
in
xchg
outsb
mov
cmpsl
inc
inc
xor
cld
call
pop
jmp
mov
mov
or
xor
bound
int3
sbb
jb
xor
dec
rep
jp
leave
dec
call
cld
xor
jnp
movsl
mov
xchg
mov
test
ret
loope
movsl
out
rol
push
aaa
pop
jae
inc
repnz
adc
leave
adc
popa
pop
fsubrl
mov
in
pop
imul
xchg
jbe
pusha
adc
and
movsl
and
pop
pop
sub
mov
add
jg
jmp
ret
lcall
adc
out
pop
mov
shrb
push
fstpl
adc
das
cmc
dec
jle
nop
or
jnp
sub
dec
xor
into
mov
popa
cmc
rcrb
mov
or
push
or
ror
inc
cwtl
xchg
outsb
add
ljmp
cmp
test
out
inc
ja
push
dec
aaa
or
push
in
mov
aam
pushf
sub
movsl
je
mov
jns
loop
mov
mov
daa
jnp
test
fcomi
scas
daa
xor
xchg
out
jg
in
outsl
push
xchg
mov
arpl
rcll
in
int3
mov
dec
repnz
push
sahf
out
jl
push
insl
mov
mov
shlb
fildl
jmp
push
stos
sub
in
das
je
xchg
sbb
mov
cld
mov
in
cmp
xchg
or
pop
push
loop
decb
fst
sub
loope
or
mov
and
repnz
xchg
ret
fwait
je
jnp
mov
stos
xchg
cmp
scas
pop
fimuls
or
js
scas
xor
xchg
outsb
or
ret
jae
sbb
outsb
adc
cli
push
int
xor
test
outsb
dec
hlt
sub
aad
iret
pop
sbb
pop
movsb
xor
ret
inc
sub
inc
or
add
cltd
pop
out
ret
or
fdivrl
mov
ror
jg
stos
popf
out
inc
cltd
repz
mov
push
xlat
adc
insb
cmp
int3
insb
mov
inc
in
xchg
jl
mov
enter
pop
sub
xchg
les
loope
not
or
test
mov
jecxz
and
fs
cli
and
movsl
sbb
adc
adc
fstp
push
dec
xlat
sbb
shll
dec
cmp
jnp
xor
xor
pushf
test
shl
out
aad
out
fsts
mov
xor
cmpsl
xlat
jmp
gs
mov
fisubl
icebp
jns
out
push
pop
fnsetpm(287
movsb
imul
nop
andb
int
fildll
dec
or
cld
test
and
pop
mov
push
shlb
add
inc
fnsave
and
addr16
js
cs
adc
adc
fldl
in
sub
bswap
mov
xchg
mov
jecxz
stos
xor
dec
pushf
sub
or
inc
daa
mov
mov
cmp
mov
fs
xlat
fcmovnb
les
sbb
divb
jno
or
out
mov
insl
cmc
push
jno
lds
and
cmpsb
insl
out
mov
inc
mov
push
xor
nop
fdivr
imul
jne
js
hlt
aad
xchg
enter
test
jmp
jno
pop
jmp
xchg
push
inc
add
call
xchg
pop
lock
xchg
xchg
jmp
idivb
mov
orl
jle
aaa
ljmp
push
dec
jbe
pop
enter
mov
and
xor
sub
dec
clc
pop
xchg
shlb
xchg
call
pop
mov
clc
stos
out
testl
push
push
sbb
jmp
fdivrl
lods
fiadds
push
cs
insb
ror
lea
xor
ds
or
dec
call
out
pop
adc
mov
in
cmpsb
jo
lods
fld
aas
dec
sbb
mov
dec
xor
cmp
pop
mov
jae
inc
ret
in
adc
lret
cli
subb
adc
xor
push
xchg
inc
cmp
pop
dec
jns
leave
out
dec
xchg
fistl
push
repnz
ljmp
int
mov
add
xchg
cmp
and
xor
sti
inc
ret
jbe
pop
in
testb
xchg
inc
pop
adc
inc
es
int
cmp
lock
cmpb
or
dec
fwait
cmpb
jbe
imul
lods
mov
jge
mov
out
or
subl
lods
fmul
mov
jne
cmp
dec
or
push
stc
push
mov
xor
mov
hlt
scas
pushf
pcmpgtd
das
mov
jmp
ds
mov
sub
fcomip
and
and
mov
push
xchg
mov
dec
clc
jecxz
or
imul
les
cld
shlb
notl
lcall
adc
repz
cmpsl
mov
pop
fwait
xchg
lods
inc
fcmovbe
lcall
add
out
sahf
mov
pop
mov
nop
cmp
add
lods
xchg
mov
cmp
sbb
sbbb
shlb
fcoms
xchg
movl
in
dec
jge
imul
cmp
fwait
dec
imul
mov
mov
inc
loopne
xor
mov
imul
cmc
pop
mov
cmc
mov
pushf
pushf
pop
test
popa
jg
mov
and
pop
insb
pop
call
cmc
loope
mov
subl
sbb
ss
in
leave
aam
mov
dec
in
sbb
pushf
mov
adcb
xor
into
jg
inc
cltd
inc
inc
bound
jecxz
mov
xor
subl
sbb
lock
cmp
mov
es
push
xchg
outsl
sub
mov
daa
pop
dec
fiaddl
stos
sbb
jecxz
or
adc
loop
push
cwtl
push
xor
sub
mov
cmp
or
pop
push
stc
in
pop
and
push
push
out
jge
nop
loope
dec
insl
jne
pop
push
repz
popa
call
push
xchg
inc
mov
mov
pusha
add
xchg
sbb
fldt
loope
aas
sahf
int
add
in
jl
fsub
rcl
movsl
ss
test
or
stc
xchg
xchg
imul
add
out
loopne
int
pop
fs
out
xorb
ja
in
push
dec
add
push
push
push
sbbl
mov
mov
scas
pop
pop
cmp
in
jne
out
inc
test
lds
push
push
sarb
push
cld
jp
sub
xor
or
sub
mov
popl
mov
inc
jo
cs
mov
add
pop
pop
imul
ljmp
fidivrs
xchg
fst
test
ljmp
loopne
pop
out
add
and
ffree
push
and
jge
adc
lret
push
arpl
loopne
inc
addl
dec
ja
insl
mov
inc
xor
fldt
js
xor
sbb
sarl
jp,pn
insb
mov
push
repnz
inc
lea
sub
xchg
pushf
push
add
lock
into
and
xchg
lret
scas
out
cld
ror
scas
inc
nop
outsl
jecxz
xor
js
aaa
mov
mov
loop
mov
xchg
push
es
addl
sbbl
fidivs
mov
divb
in
mov
movsl
fbstp
dec
and
push
sub
insl
mov
push
mov
pop
mov
cmp
push
or
aam
push
fcmovnu
jl
addr16
mov
enter
dec
test
cmp
add
cltd
rclb
sbbb
fcmovu
imull
sub
ret
cmp
jae
inc
cld
clc
jne
cli
int
adc
mov
insl
cmp
pop
dec
lods
out
jle
loope
fs
pop
js
jae
jmp
inc
push
sbb
inc
loopne
aad
jecxz
add
push
loope
mov
imul
leave
mov
call
xor
icebp
adcb
scas
sbb
push
mov
sbb
or
les
dec
es
int3
cmp
fnsave
xchg
and
repnz
insl
daa
call
adc
xor
xchg
sbb
lret
mov
pushf
xlat
sbb
ja
add
repz
fucom
insb
shrl
scas
std
aas
inc
mov
cmp
clc
fsts
pusha
lods
push
jle
nop
xor
or
rol
dec
push
out
fidivs
lcall
cltd
inc
cli
mulb
xchg
cmp
cs
adc
cs
mov
int3
push
jne
in
xor
sti
pop
dec
arpl
mov
xor
or
outsb
es
xor
das
dec
mov
hlt
scas
mov
and
xchg
cli
shr
xchg
jnp
std
and
mov
fcmovu
dec
cmp
dec
dec
mov
pop
ret
mov
daa
push
cmp
movsl
andl
mov
push
pop
cmpsl
inc
sbb
mov
sub
mov
cmp
fld
aaa
std
bound
xor
sarl
int3
ror
mov
push
jns
jns
test
push
ds
stos
and
sub
fs
test
sahf
mov
push
xchg
mov
rcrb
or
hlt
pop
and
sub
push
xchg
rorb
pop
outsb
push
les
push
lods
sbb
pop
in
cld
lret
movsb
testl
push
push
roll
and
popa
lcall
sub
imul
pop
stc
and
out
pop
sbb
inc
mov
cmc
mov
shrb
lret
ds
jl
pop
xchg
in
inc
adc
jp
cwtl
mov
lea
sub
jmp
outsl
add
roll
jp
mulb
shlb
lods
mov
jbe
cmp
stos
je
or
pop
fldenv
imul
push
xor
pop
ds
and
sub
lret
jmp
adc
adc
jns
mov
jae
jae
xlat
mov
leave
adc
test
and
mov
cmpsl
xchg
xchg
aad
mov
mov
jbe
fwait
dec
pop
dec
std
add
lret
loop
mov
add
push
stos
in
mov
inc
outsl
mov
movsb
mov
or
ss
cltd
jns
adc
mov
xor
cld
push
icebp
fwait
fs
das
mov
in
add
xchg
cmp
sub
pop
fbld
test
out
push
sti
shl
out
clc
mov
adc
lock
inc
adc
and
or
add
mov
sub
jno
fmul
xchg
dec
jge
aas
sbb
ss
sub
or
jbe
or
pushl
pop
aad
xor
mov
xchg
daa
scas
shrb
test
mov
ret
rcll
jmp
pop
mov
inc
xchg
or
pop
outsb
rcl
nop
cmp
andl
xor
sbb
jp
stc
aam
mov
inc
nop
es
lds
lock
in
jae
sbb
add
add
je
and
pop
adc
lea
fstpt
cmc
dec
addr16
mov
push
add
inc
push
push
dec
push
cmp
push
dec
or
sub
add
pusha
test
fisubrs
mov
fldenv
das
push
and
dec
adcb
clc
aas
cwtl
std
adc
subl
inc
sub
test
nop
mov
mov
mov
call
and
outsl
sbb
xor
or
pop
push
xor
in
stos
pop
out
cmpsl
cmp
xchg
addr16
repnz
pop
push
fsubs
add
inc
jp
ficoms
ret
cmp
cmpsb
stos
cmp
nop
jbe
jae
push
insb
outsl
repz
sbb
fwait
dec
pop
cltd
push
inc
push
add
notl
movsb
pusha
cs
cmp
lahf
in
lods
inc
sbb
mov
jge
test
jo
scas
jnp
imul
stos
mov
daa
insl
repz
adc
gs
lds
mov
fildll
push
ficoml
pop
or
test
xor
push
movsb
add
cwtl
add
push
inc
mov
mov
sbb
punpcklwd
and
sub
jge
add
pop
pop
sbb
lahf
fwait
inc
jmp
rcrb
jge
xchg
mov
and
sbb
sbbb
push
lock
dec
popa
or
push
dec
mov
push
push
push
testl
pushf
mov
push
dec
dec
xorb
push
cmp
sub
lock
push
lods
ficomps
or
xor
outsl
ds
or
shrb
jb
add
xor
sub
xchg
or
popf
inc
pop
sub
push
pop
repnz
call
hlt
hlt
sbb
sub
dec
push
cltd
push
jne
pusha
jbe
ja
imul
dec
ror
mov
sahf
push
sbb
movsb
sbb
into
nop
xchg
out
sbb
fmull
in
pop
call
movsl
scas
jo
pand
sbb
bnd
pop
mov
add
xchg
jae
shrl
pop
jge
bnd
inc
push
mov
inc
stos
and
ja
xchg
add
fwait
xor
movsl
rol
xor
add
aad
call
arpl
fidivrl
push
data16
insl
test
rclb
in
inc
scas
lods
insl
jle
scas
xchg
jg
lret
dec
dec
in
or
inc
ja
inc
mov
pop
adcb
pop
mov
ds
push
orl
lea
jnp
cmpsb
inc
bound
popf
mov
dec
daa
lods
push
fnstenv
inc
mov
adcb
cld
jle
in
cmpsb
notb
loopne
mov
addb
aam
outsb
mov
insl
push
push
cs
or
xchg
jp
icebp
inc
cmp
lahf
fwait
mov
ret
cmp
lods
dec
out
divl
loope
push
push
test
addb
test
jae
pop
add
jo
inc
push
aas
insb
jg
adc
mov
push
ret
push
aad
lock
jecxz
pop
enter
mov
pop
jmp
scas
pusha
cld
sub
lds
test
mov
js
jns
insb
shlb
pop
je
popl
xor
jl
jbe
xchg
sbb
xchg
outsl
es
cltd
andl
mov
xchg
push
mov
lret
lahf
test
xchg
mov
mov
xor
jl
dec
add
cmp
jecxz
push
cmp
and
insl
cld
out
or
or
mov
fstps
shr
lods
jl
jg
sub
mov
stos
fistl
dec
jecxz
lret
dec
aaa
ljmp
lods
sbb
scas
mov
and
cmpsb
pop
sarl
test
pop
clc
adc
mov
addr16
hlt
fdivrl
popa
das
dec
pop
fbstp
outsb
ljmp
xor
pushf
inc
outsb
arpl
push
fisubrs
or
andl
mov
xchg
push
and
pop
loop
fldln2
pop
ss
sbbl
mov
or
dec
test
jecxz
xchg
inc
dec
jbe
cmpb
pop
mov
adc
in
lcall
sbb
inc
xor
mov
mov
and
jns
jnp
and
popf
inc
bound
nop
js
xchg
and
pushf
mov
ret
sub
mov
sbb
push
xor
xor
mov
and
scas
andb
adc
cmp
add
dec
lods
stos
mov
rolb
sub
jo
xchg
pusha
adc
push
int
add
sti
sbb
push
je
pop
cmp
pushf
sahf
out
push
adc
sub
out
jne
mov
adc
xchg
inc
dec
mov
adc
mov
xor
cli
stos
cltd
dec
jae
std
push
cmpsb
push
ret
je
bound
add
mov
in
and
sbb
fisttps
aas
sbb
add
push
mov
pop
fisttpl
push
mov
jno
sbb
mov
adc
add
jmp
jmp
out
movsb
xchg
xchg
sub
pusha
pop
stos
jp
push
push
push
xchg
push
dec
pop
cmpsb
jmp
fsubrs
mov
xchg
pop
jno
xor
jb
bound
and
inc
fldt
int
push
adc
test
fs
in
push
xchg
cli
sbb
mov
cmp
mov
in
int
xor
aas
pop
or
mov
push
and
xchg
call
and
dec
cmp
jne
scas
mov
and
out
mov
repz
cmc
or
std
cld
fnstcw
inc
cwtl
and
fnstsw
lods
notb
jmp
jnp
mov
in
dec
adc
mov
push
es
add
loopne
add
mov
mov
scas
adc
mov
shl
out
nop
fs
xchg
enter
push
mov
cmp
js
jle
bound
stos
mov
mov
mov
mov
xchg
les
cmc
and
push
les
test
icebp
mov
xor
sbbl
fldl
mov
jl
add
fwait
sti
inc
xchg
imull
pop
ja
push
icebp
les
fidivl
sub
out
dec
inc
test
sti
xorl
adc
mov
or
popf
call
mov
ficomps
mov
repnz
insb
jle
cmc
jae
pop
loope
pop
outsl
pop
inc
in
inc
fcomi
loope
cs
stos
xor
inc
insl
xchg
mov
int
lea
in
scas
iret
scas
xchg
push
cld
popa
push
sub
fisttpl
push
not
aas
je
xchg
roll
cmp
cld
cmp
popa
fldcw
adcb
xor
imul
fisttpl
fcoms
mov
push
out
xor
sbb
jns
paddusb
push
sub
add
sti
test
and
pop
popa
scas
pop
adc
ss
ljmp
pop
frstor
mov
sub
add
sbb
imul
mov
jb
mov
xchg
fistpl
subb
and
insb
rclb
int3
xorl
lahf
outsb
iret
jnp
pusha
aas
or
ret
pop
or
jl
movsb
push
fwait
mov
out
call
dec
inc
pop
mov
jge
out
popf
inc
and
mov
lret
jle
je
das
jmp
cmp
mov
mov
cmp
xchg
ja
dec
xor
cmp
xchg
fidivl
jo
pop
das
or
mov
mov
push
shrb
pop
mov
ss
cwtl
mov
sbb
or
xlat
test
lea
mov
add
imul
sub
adc
cmp
or
pop
jnp
out
cmpsb
cmp
rcr
mov
addr16
cmpsb
pop
xlat
or
test
adc
and
flds
or
popf
or
mov
cmp
imul
sbb
mov
das
add
and
iret
jmp
sub
xchg
push
adc
into
daa
repz
cmp
push
or
or
jbe
shll
or
repnz
call
js
in
scas
cmpsl
xchg
pop
jbe
rclb
std
aad
outsl
fstl
shl
jp
outsl
movsb
lret
add
xchg
pop
mov
inc
roll
mov
pusha
insl
dec
mov
stos
aaa
lods
or
mov
dec
xchg
mov
out
push
add
test
jecxz
out
inc
jp
cmp
mov
pushf
and
lds
mov
stos
adc
icebp
into
int
int3
or
out
mov
mov
push
pop
sub
leave
mov
push
or
push
aaa
stos
cmp
sub
ljmp
shlb
shll
mov
xchg
push
cld
in
test
sub
data16
lret
js
xchg
roll
and
shlb
lods
mov
xchg
mov
int3
pushf
mov
or
mov
sahf
sti
fnsave
js
iret
out
and
sub
jecxz
inc
jns
pop
push
rorb
inc
sbb
pop
daa
les
ljmp
jo
sahf
push
mov
mov
jl
inc
stos
sub
in
in
sub
or
icebp
rorb
fldt
clc
lods
add
fs
push
inc
jbe
sub
shrb
cmc
clc
push
pop
inc
xor
and
jecxz
iret
and
and
jl
sbb
mov
ret
sti
xchg
xlat
mov
xchg
add
nop
bound
pop
popf
jmp
mov
popf
xchg
or
cmc
xchg
pushf
sub
or
and
cld
push
insl
jmp
dec
xchg
jne
mov
daa
push
int3
inc
vfrczsd
sti
push
call
or
jle
mov
cld
shrl
sbb
out
and
mov
cltd
test
adc
lahf
pop
xor
add
jb
mov
add
imul
loop
out
mov
sub
pshufw
mov
cmp
les
jns
pusha
scas
lock
xchg
or
hlt
pop
inc
out
roll
mov
sbb
shlb
inc
xchg
sub
sbb
pop
or
cmp
not
out
popa
imul
sub
mov
mov
jno
add
scas
ja
mov
sbb
in
lret
fldt
aaa
push
outsl
sbb
cmp
pop
int
dec
mov
or
addr16
pop
cmp
inc
inc
into
mov
pop
imul
lods
loopne
loop
stc
icebp
out
mov
inc
scas
ljmp
jmp
push
inc
xlat
dec
push
sbb
xchg
push
jl
iret
and
repnz
imul
cltd
je
addl
aas
xchg
cmpsl
and
inc
arpl
movsb
jg
ljmp
iret
sarb
mov
stos
sbb
sarb
pop
scas
add
lcall
nop
int3
enter
sbbb
int
and
xchg
mov
pop
sub
cmpsb
loop
push
pop
cmp
xlat
and
out
mov
xchg
cmpsb
sbb
jo
ret
test
mov
jmp
and
mov
push
mov
sub
xor
adc
mov
aaa
dec
repz
inc
add
leave
add
lcall
mov
add
cmp
mov
testl
pushf
test
dec
dec
repnz
inc
jg
pop
mov
cmove
je,pn
or
adc
mov
mov
lods
rcl
mov
inc
cmc
ret
xlat
sub
push
bound
cmpsb
add
mov
movsb
push
les
jb
movsl
jp
push
ficoml
jbe
push
push
sub
pop
imul
pop
pop
adc
data16
ljmp
add
or
ret
loop
cmpsb
xchg
inc
mov
xor
dec
add
fbstp
sub
cmp
mov
mov
mov
jge
lds
cmpsl
adc
in
out
mov
in
xchg
add
daa
jb
test
mov
xor
jmp
insb
xor
adc
cld
cmp
test
push
filds
pop
xorb
cld
rolb
sub
stos
rcl
and
hlt
jg
cmpsl
shll
scas
mov
cmp
icebp
push
in
cs
cmpsb
push
jns
arpl
ds
push
clc
repnz
xor
imul
mov
incb
les
cmpl
lret
lods
int
pop
mov
mov
cwtl
sbb
jmp
dec
sub
stos
sbb
lds
cli
mov
push
mov
sahf
es
jle
jge
xchg
fsubrp
outsb
mov
dec
loopne
dec
pop
lret
adc
xchg
into
dec
lahf
incl
popf
add
push
and
aas
pop
cmp
lret
je
xchg
jmp
sbb
pusha
sbb
mov
imul
test
cld
fcmove
or
repz
sbb
call
inc
inc
stos
insl
enter
test
lret
cld
int
lods
int3
into
imul
mov
add
and
ds
ret
mov
inc
dec
xchg
pusha
stc
ficoml
mov
lret
add
aas
push
jmp
jnp
lods
mov
lds
daa
pop
jno
mov
test
jmp
cltd
push
lret
idivb
mov
cmp
idiv
sbb
pop
xor
dec
pop
jne
mov
push
in
sbb
fsubrl
sub
mov
pop
fildll
fistpl
fnop
push
dec
or
sbb
xchg
pop
xchg
pop
pop
add
scas
xchg
pop
sbb
adc
push
mov
lret
and
push
data16
lahf
sub
pop
sub
mov
jp
lret
cmp
stos
lods
and
ss
fisttpll
ret
rol
rcll
sub
testl
and
scas
mov
sub
lcall
popa
mov
and
sub
shrl
mov
xcrypt-ofb
cmpsl
imul
outsb
mov
mov
mov
xchg
push
jl
aas
mov
and
or
cmp
stos
jle
add
roll
add
ljmp
push
inc
push
adc
cmp
pushf
jmp
mov
sahf
rclb
repz
aad
lcall
insl
mov
dec
add
xchg
test
pop
mov
fsubl
jns
sbbb
dec
mov
jo
cmp
jecxz
pop
inc
jmp
xchg
push
inc
and
out
rcrl
outsl
stos
lds
inc
scas
add
cmp
stos
xchg
sub
imul
cmp
sbb
ficomps
mov
and
into
mov
lret
inc
and
adc
jecxz
cli
jle
out
and
xor
push
fnstenv
pop
xchg
xor
cmp
in
orb
sbb
in
stos
push
imull
xor
mov
jns
sbb
sbb
inc
nop
add
mov
cmp
sbb
mov
adc
dec
mov
push
loopne
pop
cmp
cmpsl
iret
push
xchg
movsl
ja
fmull
mov
sub
lds
pop
push
cmpl
xchg
jae
push
cltd
jg
dec
fstpt
test
repnz
mov
shl
xchg
sbb
stos
mov
xchg
arpl
loopne
je
push
mov
sti
jmp
lahf
cmp
cmp
bound
xchg
das
add
adc
cltd
lock
pop
cmp
and
push
push
popa
pop
inc
insl
and
xor
inc
fbstp
outsl
data16
pop
mov
stos
loop
cld
dec
dec
out
adc
add
sub
notb
int3
pop
cmp
fisubs
stos
jbe
mov
mov
push
and
shrl
cmc
add
sbb
rcll
scas
shl
xchg
adc
push
in
add
adc
push
mov
xchg
pop
mov
sub
adc
or
aaa
lods
xchg
outsb
cmp
loope
cmp
scas
xor
lret
loope
cmp
mov
adc
ret
mov
inc
dec
incl
mov
mov
rcll
call
jo
inc
sbb
xor
jbe
mov
xchg
call
notb
inc
cmp
pop
or
add
jbe
repz
cmp
subl
insl
lods
adc
pop
mov
mov
push
in
imul
lcall
arpl
std
aad
sub
out
jecxz
les
jo
add
test
repnz
pop
popa
mov
lds
fs
cli
inc
std
mov
mov
sub
outsb
lock
int3
mov
movsb
adcl
pop
mov
je
jge
scas
mov
mov
add
adc
clc
test
and
xchg
push
push
xchg
negb
jbe
cmpsb
xor
daa
je
mov
mov
popa
lret
push
jl
pusha
dec
stos
push
jge
or
andb
and
out
cmp
insl
or
add
or
inc
in
adc
xor
and
dec
loope
lods
sub
xchg
loopne
mov
les
mov
xor
testl
pop
shrl
lods
jo
mov
test
inc
dec
xor
pop
pop
xor
out
jg
push
sbb
mov
jmp
mov
xchg
addr16
bound
sbb
das
sar
stos
neg
roll
or
fstps
sahf
cmp
out
scas
lcall
push
lods
jne
dec
inc
pop
inc
pop
fnsave
clc
jns
pop
lret
add
insb
mov
scas
xchg
mov
mov
lahf
sub
popa
sbbl
call
mov
xchg
xlat
lret
jg
jecxz
push
cld
cwtl
mov
rorb
sub
sbb
sbb
add
lea
cs
mov
int3
mov
popa
lret
pop
dec
mov
leave
add
cmpsb
inc
popf
and
dec
sbb
cs
add
nop
fidivl
inc
sbb
jbe
idivb
push
call
faddl
bound
insl
mov
inc
mov
sub
fimull
xchg
stc
push
test
push
lret
test
add
hlt
int3
dec
dec
inc
cltd
int3
jmp
dec
arpl
pop
stos
add
and
push
into
inc
push
inc
out
lds
jle
repnz
ret
adc
bswap
cwtl
iret
push
fimuls
popa
bound
jge
mov
jo
sbb
or
scas
dec
sbb
jmp
push
int
or
cmp
mov
inc
mov
sbb
out
mov
test
mov
jmp
cmp
ffree
roll
ljmp
mov
ljmp
dec
inc
push
xlat
xchg
sub
pop
cmpsb
cmpsl
inc
jnp
loop
imul
xor
daa
sahf
xchg
test
rol
sbb
xchg
or
test
insl
jne
aam
push
popf
adc
in
or
and
push
pop
pop
mov
pop
loope
jecxz
mov
or
cmp
loope
mov
xchg
cmc
fcmovu
dec
fnstenv
rcr
add
jns
xor
sti
dec
movsl
add
lds
cs
push
das
add
std
dec
jge
xchg
mov
outsb
fcomp
pushf
mov
push
add
int3
call
cmp
nop
add
mov
mov
push
jle
scas
ja
add
pop
cmp
dec
fcmovnbe
xchg
or
fcomi
iret
add
add
mov
stos
sbb
out
xchg
lcall
sbb
js
xchg
insb
cli
out
test
push
sahf
out
push
sbb
out
test
test
loope
inc
cmp
fists
stos
cmpsl
jnp
sahf
shll
mov
mov
xor
popa
data16
call
sbb
out
sahf
sub
jge
push
jno,pt
pop
lret
cmp
xlat
cs
xchg
xor
adc
std
call
mov
xor
imulb
adc
mov
popa
mov
pop
imul
rcr
jl
mull
add
xor
popa
ret
mov
mov
bswap
and
fucom
dec
je
mov
xchg
lds
mov
aaa
insb
push
jecxz
push
dec
mov
ljmp
or
cmp
add
aas
xchg
xchg
in
dec
push
imul
scas
lock
push
xor
or
mov
jmp
xor
mov
inc
rcrl
pop
outsl
movsb
mov
jne
outsl
pop
sub
pop
sahf
unpckhps
push
adc
mov
xlat
call
insb
and
mov
and
mov
insl
fcoml
ret
rorl
mov
out
push
xchg
scas
movsb
cmp
insb
dec
lret
lock
jns
gs
or
insb
dec
in
mov
add
sarb
cmp
loope
add
sub
aas
adc
lcall
shll
or
stos
dec
iret
std
movsb
mov
sarl
hlt
lock
mov
inc
sbb
dec
adc
mov
leave
negb
out
fadds
out
clc
dec
lds
test
inc
pop
insb
or
fnsave
fucomp
test
xchg
cmp
jp
pop
adcb
jg
cmp
pop
scas
xchg
jbe
sbb
shrl
lea
ss
mov
and
sbbl
lahf
mov
aaa
lcall
inc
jmp
sbb
or
lret
sbb
adc
fidivl
push
xchg
cmpsl
test
inc
sbb
mov
outsl
mov
inc
or
dec
hlt
jp
pop
iret
movsb
aas
xlat
dec
imull
xor
insb
mov
and
cli
out
enter
arpl
lea
lret
mov
int3
cmpsb
test
add
mov
sbb
pop
jge
scas
cwtl
xchg
imul
xchg
pusha
xor
fstps
push
ljmp
cmpl
mov
xor
and
inc
std
addr16
mov
mov
cmpsb
add
jae
ficompl
insl
mov
out
shrb
or
xchg
and
jae
fcmovbe
insl
fidivrs
insl
outsl
xor
and
es
inc
rcll
xchg
pushl
imul
test
ltr
jnp
and
and
aad
ret
rcrb
enter
sub
xchg
jae
adc
call
rcrb
xchg
imul
les
mov
push
jmp
xchg
imul
jge
das
mov
lcall
lods
popa
sub
cltd
mov
push
into
cs
jg
xor
mov
data16
out
movb
push
lea
repz
ret
inc
jae
mov
xor
mov
decl
icebp
mov
inc
jae
arpl
jne
jp
dec
test
sbb
mov
lods
js
and
xor
ljmp
aas
sub
call
imul
sub
ficoms
fisubrs
add
outsb
mov
pop
cli
xorl
cltd
inc
jb
je
out
sbb
xor
testb
mov
push
or
jecxz
cmp
cwtl
pop
push
pop
inc
in
jmp
dec
sub
and
fdivl
movl
arpl
cwtl
cmpsl
xlat
inc
in
ss
pop
push
std
enter
cltd
gs
decb
mov
dec
loopne
push
ret
or
icebp
int
ss
repnz
add
xlat
mov
adc
push
jbe
xorl
and
cmp
mov
bound
inc
xor
fstpl
cmp
stos
inc
nop
lea
sahf
adc
bound
popf
jns
push
xchg
adc
hlt
mov
pop
jecxz
repz
cmp
loop
stos
adcl
xchg
adc
addr16
in
sub
or
outsl
daa
and
test
sbb
and
or
jg
xor
imul
ja
sbb
outsl
add
test
adc
das
jnp
loope
pushf
ljmp
pop
gs
aaa
push
mov
ljmp
ret
data16
jno
push
jno
in
xchg
pop
adc
je
inc
push
or
mov
pop
popa
loop
mov
fisubrs
or
sub
fld
test
icebp
in
xor
inc
mov
mov
xor
stos
lds
pushf
mov
inc
es
mov
add
out
push
cmp
cs
push
and
fcoml
dec
dec
pop
jae
js
pop
or
imul
loop
movsl
or
movsl
lods
xchg
stc
cmpsb
add
mov
int
into
cld
dec
push
or
jae
sub
insb
into
push
rcrl
xchg
add
mov
adc
pop
push
addr16
popf
ss
mov
enter
add
jnp
dec
cmc
inc
out
sbb
movsb
mov
ficomps
add
test
inc
jmp
add
xchg
mov
adc
rcll
cli
cmpsb
test
popa
ds
jmp
out
cmp
mov
cmp
jp
mov
lock
cwtl
js
mov
jno
pop
aam
add
jle
mov
int3
je
lret
in
push
es
dec
mov
mov
xchg
mul
stos
pop
cli
pop
mov
add
xchg
xor
mov
xlat
sub
jecxz
xchg
sub
fcomps
pop
and
add
stos
jae
adc
into
dec
js
sbb
test
rcrl
rorl
adc
xchg
daa
xchg
fimull
mov
into
add
shl
add
xchg
jecxz
mov
push
lods
inc
dec
mov
subb
push
mov
push
cmp
cmp
popf
adc
or
and
inc
fbld
lds
pop
pop
mov
dec
andb
jl
or
cmp
add
loopne
and
ret
ss
add
sbb
insb
lods
jg
pop
mov
push
aaa
cmp
into
ret
push
sub
jmp
mov
ljmp
fsub
mov
mov
scas
mov
in
mov
sub
xor
pushw
lcall
ja
out
mov
xlat
adc
in
ljmp
add
jg
lcall
and
xchg
mov
sbbl
and
cmc
and
xlat
mov
push
popl
inc
mov
enter
stos
xor
cs
in
jl
js
dec
test
std
dec
and
jb
xchg
cld
imul
xor
ss
push
sub
gs
cmp
je
loop
test
jle
lock
popa
mov
aam
lock
xor
xchg
lock
inc
pop
je
push
lret
xchg
jl
xor
aaa
sbbw
mov
in
imul
in
sti
fwait
sub
sub
mov
bound
push
pop
pop
clc
mov
call
shlb
push
aad
arpl
or
mov
dec
or
mov
sarl
push
nop
es
xor
push
xchg
or
pop
repz
roll
jge
idivl
mov
sbbl
xor
daa
outsb
xchg
mov
adc
mov
outsl
adc
sbb
pop
push
fcomps
cmp
movsb
jo
clc
inc
pop
aaa
sub
stc
jge
mov
testb
iret
jecxz
jl
or
mov
jb
or
fwait
xor
or
xchg
and
das
mov
imul
pop
cmpsb
lcall
rolw
add
pop
and
shl
mov
aam
aaa
or
rcll
cmp
mov
mov
rolb
rolb
rcll
adc
outsb
and
add
mov
fldt
adc
jecxz
mov
lods
mov
test
sahf
and
addl
fsubrl
icebp
adc
in
adc
dec
lds
or
cwtl
xchg
shrb
mov
imul
cmp
xchg
repnz
xchg
jno
mov
push
cmp
and
aam
jo
jo
addl
xorl
fidivrs
dec
lock
aaa
mov
sbb
cmp
mov
shl
mov
pop
outsb
js
xchg
push
mov
stos
push
repnz
stos
ret
mov
insb
ret
fwait
aad
add
push
dec
pop
test
cmp
mov
aam
ret
jae
sub
push
xor
nop
jge
xchg
sbb
push
and
sub
xchg
cmp
in
decb
cwtl
jb
sbbl
in
and
push
idiv
mov
fildl
inc
clc
and
les
loop
pushf
in
pusha
mov
push
je
leave
les
jbe
jge
outsb
insl
rolb
aam
aam
mov
mov
jle
addr16
and
jne
movsb
xchg
cld
loop
cmp
out
jbe
pop
addb
fwait
jmp
in
push
aam
mov
cmp
lcall
cld
insb
push
push
xor
int
scas
sbb
out
mov
cmp
and
jo
jl
ds
aas
push
mov
fmull
xchg
dec
movsl
arpl
inc
mov
test
insl
push
scas
fistl
push
sub
sbb
out
and
sub
pop
push
inc
xchg
jecxz
icebp
std
int
and
xchg
mov
jns
jbe
pop
jp
jb
push
outsb
cli
jb
fldenv
mov
shlb
sub
stc
jae
gs
push
lods
es
std
mov
out
test
test
lods
test
test
sub
pop
sub
add
loop
xchg
mov
rorb
outsl
jae
add
mulb
sbb
mov
imul
sub
sub
mov
push
push
cmpsl
ljmp
arpl
arpl
push
lock
repnz
cmpsb
stc
add
jecxz
inc
cmp
and
adc
sbb
cmp
dec
ljmp
les
cmpsl
xchg
out
sub
mov
push
mov
data16
bound
out
push
add
adc
dec
in
addr16
pop
xor
faddl
push
mov
leave
mov
pop
mov
pop
sub
mov
in
stc
cwtl
je
inc
mov
mov
mov
aaa
dec
lods
push
cmpsb
xchg
adc
mov
mov
std
shrb
and
mov
xchg
imull
stos
pop
lods
pop
test
lahf
lods
imul
cmp
jmp
hlt
lods
mov
mov
and
cmp
mov
daa
or
fsubrp
mov
iret
out
int
adc
loopne
popa
lret
clc
fnsave
call
mov
pop
jp
adc
out
ljmp
jge
mov
sti
and
sub
es
pop
inc
pop
jnp
out
mov
adc
sub
gs
add
pop
push
cmpsl
orb
pop
and
mov
pushf
adcl
sahf
ret
push
negl
add
sbb
sub
iret
push
and
and
mov
mov
mov
jg
or
push
cli
inc
inc
inc
sbb
pop
ret
loope
ds
xor
pop
push
outsb
cltd
inc
jnp
mov
sub
loopne
lahf
xchg
imul
add
lea
cmp
pop
adc
div
ja
and
js
cmp
movsb
in
mov
dec
dec
daa
push
lcall
jns
jecxz
push
mov
movl
push
ret
sub
xchg
jp
test
or
xor
out
loope
dec
call
xchg
dec
xchg
xchg
push
popa
inc
aas
loop
sbb
or
out
lret
cli
mov
es
inc
loope
fsubl
repnz
mov
xchg
into
jae
mov
mov
sub
std
imul
pushf
mov
mov
xchg
cmp
cld
push
xlat
push
add
ljmp
ss
insl
cli
icebp
in
fists
scas
pop
or
jge
xchg
dec
cmp
mov
fidivrl
and
and
in
aad
es
rol
inc
stos
fnsave
mov
rorl
push
andl
lret
sub
mov
popa
stos
sahf
icebp
jecxz
insl
adc
fldcw
fildl
jbe
and
mov
fcmovbe
mov
pop
ljmp
or
stc
mov
pop
aad
pop
xchg
rclb
fnsave
xor
mov
cmp
movsb
addb
loopne
push
ds
pop
mov
inc
mov
inc
shlb
outsl
scas
lahf
outsb
mov
add
mov
push
mov
add
mov
sub
addr16
fsub
sub
iret
mov
cmp
pop
rcrb
fdivl
cmp
out
arpl
mov
lods
rcll
lds
cmp
mov
addl
das
pop
jo
dec
sti
popl
jmp
dec
mov
insl
or
and
shrb
movsb
ret
mov
sub
enter
mov
test
mov
rcl
jbe
jg
mov
add
movsl
sbb
xchg
iret
jge
outsb
mov
in
jns
inc
mov
jmp
aad
or
jl
popf
sub
sub
pop
cmpsl
aam
pop
add
adc
cltd
stos
mov
xor
fldt
jp
cmp
out
mov
push
imul
fstpl
sarb
add
or
int
gs
push
mov
jl
sbb
or
push
pavgw
rolb
xchg
push
cmp
jle
sti
pop
enter
jns
or
pop
subb
lret
cmp
sub
dec
jmp
dec
loope
rorl
mov
mov
stc
jp
sbb
pop
pop
dec
out
pop
test
movsl
xor
pop
inc
les
jae
pop
ja
cwtl
aaa
jb
loop
loope
adc
pop
xor
pop
pop
push
mov
jb
xor
mov
mov
les
jle
sarb
sub
push
xlat
shll
dec
push
fmuls
test
loopne
pop
add
push
test
jmp
out
add
lahf
cmpsl
movsb
jmp
and
jb
xor
mov
sub
arpl
stos
mov
and
push
jae
loopne
in
outsb
rcll
mov
mov
mov
sub
inc
daa
jmp
pop
bound
jns
fs
push
ljmp
sahf
inc
or
lock
push
ret
das
je
pop
xor
pop
adc
sub
or
iret
fldt
mov
mov
iret
mov
mov
fisttpll
push
mov
adc
in
jp
pop
adc
les
dec
mov
adc
cli
sub
jecxz
sbb
lret
mov
fdivp
add
pushf
adc
push
push
call
mov
cmc
jg
mov
cmpsb
sbb
sahf
call
mov
pop
imul
mov
movl
dec
lds
push
lret
adc
movsb
push
xchg
pop
inc
mov
jns
cmc
jo
or
nop
test
adc
scas
mov
and
sbb
push
fwait
outsb
js
rsqrtps
lock
sbb
push
nop
mov
mov
fidivrl
jo
or
in
shrl
push
pop
sub
and
push
xchg
xor
jno
in
adc
dec
nop
sub
sub
mov
sub
lret
sbb
push
ret
and
inc
repnz
xor
movsl
lods
int3
or
les
daa
arpl
adc
fs
add
enter
out
or
mov
fnsave
ja
out
dec
roll
orps
mov
loopne
mov
shrb
mov
cmpb
fistpl
adc
ret
shlb
mov
jb
inc
cmp
nop
adc
shrb
push
gs
and
js
and
and
mov
lahf
rclb
shll
mov
sbb
cmp
adc
sbb
inc
mov
add
cmpsl
sbb
sub
jl
out
ja
stc
adc
js
cwtl
sub
std
cmpb
cmp
imul
cwtl
pop
data16
fbstp
lea
sbb
push
js
hlt
mov
push
cld
mov
in
xor
cmp
cmp
icebp
xchg
ret
mov
into
xchg
out
xor
jae
test
push
bound
js
ljmp
jnp
or
cmp
or
push
jnp
xlat
orl
pop
scas
inc
rcrl
fiadds
adc
lea
int3
and
out
adc
push
cmp
mov
sbb
push
dec
in
sarb
lock
in
push
push
inc
push
xor
mov
add
test
add
fists
adc
adc
jge
push
dec
jbe
sub
push
hlt
shll
jl
ljmp
jno
loope
sbb
add
aaa
loop
mul
jle
idivl
mov
pushf
cltd
rcrb
jo
imul
sbb
call
dec
imul
mov
mov
mov
loop
sbb
inc
push
xchg
ret
lahf
sub
lods
xor
repz
aad
add
test
jl
pop
pop
repz
mov
ja
int3
imull
mov
cmc
outsb
or
mov
lret
cli
mov
hlt
sub
enter
inc
cmp
filds
sbb
mov
bound
bound
pop
add
fistps
pop
in
mov
daa
dec
mov
sbb
insb
push
out
dec
pop
push
movsl
adc
sub
je
jp
bnd
movsb
popf
cmp
loop
rcrb
cmp
popa
cmp
xor
and
dec
imul
mov
rcll
mov
and
mov
mov
jne
pop
loopne
aam
sbb
push
xchg
pop
icebp
inc
sub
nop
xor
ja
shlb
and
adc
jne
or
cmp
roll
pop
sub
bound
sub
mov
imul
jns
call
rclb
clc
enter
test
jge
stos
push
dec
lods
dec
fidivrs
lds
fsubrl
mov
sbb
push
adc
mov
push
pop
jae
andl
adc
cltd
ljmp
mov
fstpl
pop
sbb
mov
mov
stos
popa
enter
aaa
cmp
ss
stos
dec
or
adc
insl
cmp
cmpsl
and
addr16
repz
mov
cmp
push
pusha
push
jne
insl
xor
fldl
mov
sbb
lea
add
subl
push
sub
addr16
xchg
orb
sub
and
cmp
cmp
outsb
push
xchg
sarl
and
fs
enter
and
sbb
sbb
jl
out
mov
bound
sub
loope
or
imul
repnz
push
mov
aaa
fs
xchg
xchg
cmpl
or
out
sbb
push
pusha
push
sbb
cmp
je
repz
outsb
stos
mov
jl
lods
mov
loop
test
cwtl
out
dec
fidivrs
push
jg
xchg
bnd
inc
xor
fnstcw
sub
jge
popa
out
sar
fnstcw
lock
mov
int3
cmpl
rolb
repnz
xchg
pop
cmpsl
dec
mov
ljmp
popf
pop
aam
popa
mov
xchg
sbb
pusha
xchg
mov
xor
sbb
insb
lcall
lods
nop
cmp
adc
xchg
inc
mov
leave
loop
xchg
je
sti
jp
out
das
js
mov
xchg
xchg
in
stos
push
leave
cmpsb
sub
mov
in
add
popf
push
rclb
loope
stc
inc
inc
stos
push
mov
xchg
mov
and
pop
or
stos
repnz
xor
cmp
gs
js
leave
jb,pt
jle
fwait
and
pop
insb
pop
mov
mov
mov
shrl
jg
clc
sub
pop
icebp
cmc
movsl
movsb
bound
cmp
iret
hlt
inc
sub
dec
push
scas
loope
sbb
adc
adc
mov
push
pop
imul
and
dec
stos
mov
jne
scas
loop
xchg
pop
jb
cmp
cmpsb
lret
fcomip
jb
ja
int3
ja
or
inc
jno
adc
xchg
lcall
insb
mov
stos
cmpl
mov
jne
das
in
adc
pop
jbe
inc
inc
mov
push
mov
loop
inc
xor
clc
jmp
inc
fisubrs
orl
push
adc
inc
push
mov
pop
les
mov
and
mov
mov
sbb
aam
mov
sahf
mov
add
lahf
pop
addr16
cmp
daa
cmp
sbb
fdivrs
les
dec
jmp
jecxz
lret
dec
push
xchg
push
ret
call
and
jmp
leave
outsb
in
cli
xchg
adc
mov
popf
xor
fsubr
inc
lods
test
cmp
xchg
xchg
stos
cld
lods
adc
call
into
je
adc
ja
js
mov
mov
mov
jo
das
sbbb
sbb
and
mov
sub
je
jge
xlat
xchg
xchg
ja
call
int
pop
sahf
sbb
or
dec
or
push
lds
fidivrl
fs
ljmp
stos
out
flds
insl
aas
mov
sbb
sbb
push
xchg
jge
lock
push
sub
repnz
fdiv
cli
mov
xor
inc
mov
jbe
shll
test
fs
mov
pop
pop
push
and
mov
imul
sub
arpl
pop
pop
clc
push
dec
ss
fstl
mov
xor
fdivrs
roll
dec
andb
cmp
cmc
ret
and
fildll
addb
fdivr
mov
into
ret
jno
jmp
test
es
ret
xchg
sahf
subl
jecxz
loope
insl
aaa
lret
jge
mov
cmp
sub
and
neg
add
in
and
mov
std
pop
popf
xor
jge
mov
mull
mov
mov
jns
xor
pop
sub
in
mov
sub
arpl
and
mov
mov
dec
stos
int
imul
adc
inc
fs
jle
sub
ret
adc
jl
dec
sub
add
add
icebp
in
pop
mov
push
push
mov
not
js
daa
pop
les
adc
addr16
andb
stc
fildl
push
lock
int3
jns
test
dec
push
mov
in
and
in
mov
rorl
into
adcb
out
out
sub
movsl
or
mov
cmpsl
xlat
push
adc
push
leave
imul
mov
fisubrl
inc
fstp
jo
push
call
add
neg
mov
pop
and
rcrl
xor
pushf
test
jp
loop
movb
cmpsl
sub
push
fucomi
test
pop
testl
fbstp
orb
lcall
js
fidivrs
add
loopne
stc
test
mov
adc
std
dec
jl
push
sub
daa
das
sbb
sbb
insl
lcall
negl
mov
sub
std
dec
gs
jae
ret
lahf
faddl
aas
xor
jns
mov
loope
fidivs
fs
sahf
adc
ror
gs
adc
ja
fwait
data16
mov
jb
imul
add
mov
mov
stos
adc
outsl
lret
lea
mov
and
adc
xor
imul
jnp
jg
pop
cmc
mov
xor
dec
ret
push
dec
xchg
pop
mov
repnz
inc
xor
mov
leave
dec
in
mov
push
in
inc
sbb
aam
mov
in
jo
sbb
shlb
add
aas
sbb
sbb
imul
mov
inc
test
or
test
and
xchg
jbe
dec
inc
and
aad
mov
jbe
fwait
sub
dec
adc
or
pushf
pop
xchg
jle
or
xchg
push
or
les
stc
test
fisubrs
cwtl
int3
call
adcb
xor
in
cmp
or
sbb
push
cmp
bound
push
sub
mov
cmp
mov
mov
stc
xchg
fnsave
xchg
and
xchg
jae
mov
insl
inc
test
or
jle
nop
or
sbb
mov
nop
mov
sub
call
dec
out
add
xchg
mov
push
int3
ret
testb
ret
adc
outsb
iret
sub
mov
popa
jp
lods
add
jae
push
sbb
or
fwait
daa
jl
push
sbb
cmp
pop
xchg
insl
jbe
xchg
test
xor
mov
enter
in
cmp
iret
je
xchg
adc
insl
int3
cld
cmp
and
xchg
sbb
or
ljmp
les
jae
dec
mov
scas
cmpsl
insb
adcb
and
or
xor
jp
imul
mov
dec
dec
pop
stos
jns
cmc
cmpb
sbb
fcoms
mov
repnz
sti
dec
inc
lret
leave
and
cld
imul
add
les
adc
adc
les
add
test
hlt
in
pop
lods
arpl
les
mov
hlt
dec
sbb
jge
or
movsb
pop
fndisi(8087
inc
xchg
adc
sbb
ficomps
ret
add
mov
out
push
fcomp
nop
push
repz
dec
imul
pop
or
js
inc
cs
les
frstpm(287
cmp
movsl
pop
mov
in
rolb
lds
inc
inc
or
pusha
push
test
imul
je
pusha
mov
inc
imul
cmp
pop
daa
repnz
xchg
rep
mov
add
shrb
xchg
and
sub
sub
xor
cltd
cmp
mov
ret
mov
and
pop
sbb
pop
jge
iret
xchg
lahf
cmp
push
lock
imulb
kunpckwd
aaa
dec
xchg
cmp
lds
insl
push
sbb
aaa
jns
xchg
outsb
call
cmp
push
inc
mov
jno
jnp
xchg
clc
sbb
inc
fmull
fisttpl
cmp
adc
mov
jb
push
xchg
add
movsb
fisttps
or
jnp
imul
push
xchg
jp
jbe
negl
cli
test
sbb
in
push
add
lcall
out
out
outsb
fmuls
jno
dec
add
pop
dec
inc
lcall
push
add
and
ds
mov
xchg
stc
or
daa
cmovo
adc
xchg
or
mov
lahf
xor
decb
pop
push
mov
sbb
pop
and
push
jmp
jne
ds
fldcw
out
popa
lahf
insb
push
cmp
mov
das
clc
and
int3
dec
in
out
ret
call
jns
les
les
lahf
fstpt
arpl
sbb
cmp
dec
mov
add
aaa
xor
dec
push
jo
inc
or
inc
sub
mov
cmp
flds
jecxz
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
jmp
mov
pop
adc
mov
sti
or
data16
dec
sub
jp
ljmp
xor
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
push
test
pop
cld
orb
xor
pop
out
mov
lret
mov
xor
ds
push
fstpt
adc
orl
push
add
imul
jle
dec
sub
jecxz
mov
mov
mov
mov
adc
push
hlt
push
dec
das
adc
push
shrl
fsubs
ret
pop
fiaddl
adc
jo
icebp
dec
push
enter
or
mov
add
pop
push
sbb
add
insb
add
and
lret
ret
andb
xor
or
and
push
sub
xor
adc
mov
sti
push
xchg
jno
loopne
pop
decb
mov
test
ja
adc
cwtl
xor
or
sbb
dec
cmp
jp
ljmp
aaa
sti
or
jp
ljmp
ss
or
fs
adc
sub
jp
ljmp
xor
or
pop
adc
mov
sti
or
xor
dec
sub
xor
dec
sub
jp
ljmp
xor
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
dec
jne,pn
pop
mov
sti
or
jbe
adc
mov
sti
or
push
xor
or
xchg
pop
jmp
sti
or
data16
sbb
shlb
sti
or
pop
adc
mov
sti
or
mov
sub
jp
ljmp
xor
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
or
pop
adc
mov
sti
bound
jno
lds
add
mov
test
jl
fwait
xchg
loope
repnz
xlat
in
push
daa
iret
add
xchg
rcll
mov
pop
test
sub
inc
push
addr16
lcall
jnp
dec
mov
adc
popa
rolb
or
cmp
or
out
xchg
jns
insb
adc
insb
sbb
push
decb
mov
pop
push
iret
enter
and
or
daa
jne
dec
cmp
cmp
mov
mov
jb
push
lods
xor
sub
mov
adc
sbb
xchg
daa
xchg
movnti
orb
push
cmpsl
sbb
mov
iret
fwait
movsb
mov
insl
rcl
nop
push
push
mov
mov
repnz
mov
lods
push
add
fwait
lea
xchg
lret
daa
adc
pop
loop
pop
fxch
jno
insb
int3
inc
pop
xorl
lret
or
xchg
cmp
pop
les
shl
or
cmpsl
imul
in
or
mov
mov
in
mov
js
mov
aas
xor
add
bound
xchg
rol
sbb
pop
adc
js
je
jne
cmc
lds
dec
pushf
jge
lcall
in
pop
sub
mov
push
lods
pop
mov
push
mov
mov
ror
pop
push
pushf
addb
jle
xchg
int
jae
add
adc
loope
cmp
int3
mov
jl
mov
outsb
xchg
mulb
mulb
adc
inc
psadbw
in
lock
nop
xchg
adc
push
or
dec
repz
mov
sub
incb
cmp
movsl
pop
sti
ficomps
test
and
mov
jmp
ds
inc
mov
jp
xchg
andb
out
je
xchg
mov
in
shll
or
xor
xchg
mov
mov
push
mov
mov
mov
sub
mov
jno
lds
dec
jge
movsb
pushf
mov
sbb
mov
mov
orl
sbb
mov
aas
mov
lods
or
test
shll
add
mov
inc
call
xor
int
push
jge
ljmp
mov
pop
add
jae
cltd
cmp
scas
scas
push
add
cmp
and
cmpsb
in
mov
pop
xchg
jnp
jne
je
cmp
dec
jp
xor
mov
xchg
scas
repnz
aas
jns
mov
aam
call
mov
scas
jl
stos
adc
cmpsb
fildl
js
nop
push
xor
push
adc
xlat
shrb
stos
sbb
mov
jo
add
jg
test
mov
loopne
mov
test
mov
jl
xor
scas
jl
dec
cmpsl
in
xor
cmc
mov
arpl
cli
loope
addr16
jb
and
lcall
repz
mov
ret
xchg
popa
test
mov
mov
add
popf
es
push
iret
sub
xchg
idivl
add
xor
insb
int
testl
lds
std
ficoml
sub
sbb
inc
test
add
push
cwtl
ror
xor
insb
jb
add
test
sahf
sub
pop
icebp
pop
stc
mov
hlt
xchg
adc
insl
adc
jecxz
push
and
andl
ret
stc
inc
lea
loop
iret
mov
ficompl
les
sub
loopw
inc
pop
aad
or
imul
fwait
out
pop
icebp
popf
pop
lahf
xchg
idivl
jl
loope
cwtl
cmpsl
lret
testl
insl
xchg
movsb
ret
cmp
rolb
mov
jp
mov
scas
pop
lret
sbb
pushf
jmp
daa
lcall
mov
call
daa
sub
lret
mov
lcall
icebp
into
xlat
aaa
or
clc
stc
cwtl
jne
daa
add
addr16
lcall
cmp
or
mov
xlat
sbb
ficoms
inc
les
or
xchg
ds
int
adc
sbb
push
inc
daa
ds
xchg
push
mov
in
les
sbbl
jno
fiaddl
test
pop
sti
sub
fnstsw
das
or
test
cli
mul
vcvtdq2pd
xlat
cmc
out
mov
push
dec
push
test
dec
movsb
imul
jecxz
andl
stos
mov
and
lds
repz
mov
das
add
xchg
mov
push
lods
lods
das
nop
push
push
push
cmp
leave
pop
xchg
sub
ret
cmp
fnstcw
loopne
sub
pop
out
out
outsb
ja
xchg
test
and
fldcw
adc
push
std
test
and
movsb
and
movsl
mov
nopl
dec
or
fwait
or
jp
mov
js
push
xchg
test
push
std
xchg
add
loope
test
int
lods
dec
sbb
int
mov
add
ljmp
cmovae
pop
inc
pop
mov
test
jmp
adc
movsl
mov
sbb
out
and
je
pushf
fsubr
mov
rorb
or
or
out
add
xlat
lock
decb
fmulp
roll
push
cmp
decl
or
cmp
adc
ret
mov
test
inc
sbb
cld
xlat
fcoml
mov
vprotb
sahf
or
push
loop
mov
andb
adc
pop
jge
fdivrs
das
inc
xor
or
int
lods
mov
jbe
sbb
ja
push
jno
or
shl
jbe
stc
or
mov
shr
cmc
sbb
loope
inc
fsubrl
dec
mov
addr16
mov
data16
in
xchg
ror
shrl
test
lock
and
je
mov
jae
cmpsb
sub
pop
and
loope
mov
adc
mov
sbbb
ret
ljmp
or
loopne
and
and
shl
jp
pop
out
push
mov
leave
je
xor
push
jno
fs
xchg
xchg
adc
adc
pusha
stos
inc
sub
jle,pn
mov
lods
push
aas
dec
les
fisubrl
sbb
cli
xchg
jecxz
frstor
push
xchg
fwait
test
add
lcall
and
leave
mov
mov
or
lret
out
mov
test
jno
inc
cmpsl
jne
sbb
lock
dec
push
push
mov
pop
pop
movsl
pop
test
sbb
inc
jb
cmp
orb
cmp
repz
sbb
lods
or
jl
pop
ss
xor
pop
cmpsl
out
pop
and
xor
jmp
cmp
xchg
mov
push
outsb
or
bound
mov
or
ret
add
jo
addr16
repz
test
sub
shrb
or
scas
into
mov
loopne
dec
pmulhw
into
mov
imul
pop
dec
aaa
int3
lcall
or
dec
cwtl
xchg
je
addr16
adc
push
sbbl
mov
jb
out
push
or
jnp
jecxz
arpl
sub
xor
pop
jl
icebp
into
jge
decb
mov
idiv
shrb
nop
shlb
lret
lods
sub
push
mov
sub
jo
div
add
jb
mov
test
fwait
push
lret
pop
in
fldl
sbb
imul
add
fsts
mov
dec
xchg
xor
in
pop
xorb
js
fsubrl
pop
sbb
push
je
stos
mov
sub
or
stos
or
shrl
sub
addr16
xchg
jmp
int3
divb
adcl
pop
mov
xor
mov
es
mov
push
shrb
repz
mov
mov
mov
mov
imul
pusha
sbb
mull
xchg
sbb
clc
push
add
pop
jg
aaa
mov
mov
adc
xchg
jg
inc
sub
scas
adc
xchg
xchg
mov
call
out
sub
icebp
cmpsl
pop
push
sub
push
movsl
mov
fdivrs
pop
out
mov
jg
cmp
mov
aam
jle
adc
push
cmc
lret
stc
movsb
insb
mov
push
dec
cmpsl
xchg
mov
leave
popa
sbb
addr16
stos
sub
arpl
inc
jne
push
test
in
mov
push
or
fdivs
pop
push
pop
mov
or
and
in
test
pop
sbb
xchg
cltd
cltd
fiaddl
xor
cmpsl
addr16
sbb
and
not
mov
fmuls
adc
add
daa
call
fdiv
mov
pop
jg
in
jo
mov
cmpb
add
dec
mov
hlt
push
mov
jge
pop
ret
outsl
jbe
jnp
dec
inc
jg
movsb
js
int3
inc
mov
xlat
ret
inc
mov
xor
mov
test
and
mov
mov
mov
lcall
sub
test
popa
push
push
add
adc
xor
mov
inc
sbb
or
lea
push
repz
xor
jbe
mov
push
leave
ds
dec
js
lea
pusha
xchg
ret
push
enter
int3
xchg
stos
xchg
cmpsl
popa
mov
fisubrs
jl
stos
or
or
data16
adc
jne
and
aaa
sbb
xchg
inc
xlat
mov
mov
cmp
add
es
adc
sub
mov
fs
xchg
bswap
adc
mov
dec
cmp
arpl
push
adcl
negb
xchg
or
out
addb
cmp
leave
imul
das
inc
jnp
dec
and
aad
xchg
faddl
xor
sbb
jle
lret
in
inc
cmp
mov
loope
jae
sbb
mov
arpl
pop
cmpsb
pushf
mov
mov
outsl
icebp
cmc
pop
fisttps
pop
mov
lcall
pop
mov
jmp
push
jle
leave
mov
jbe
cld
fnstcw
sti
adc
jae
inc
mov
je
rcrl
es
aad
dec
push
and
ljmp
xor
lsl
imulb
rolb
neg
int3
sbb
ficomps
fmuls
stc
movsb
mov
cmp
imul
or
into
jbe
dec
cwtl
jbe
push
es
pop
sub
and
pushf
jmp
inc
mov
idivl
mov
das
xlat
imul
mov
inc
mov
scas
adc
out
sbb
loop
pop
jl
jb
cmp
xchg
insl
jg
pop
outsl
xchg
nop
out
inc
call
mov
call
jbe
cltd
outsl
cltd
arpl
rcll
out
inc
push
in
adc
jge
push
push
lahf
push
jle
ja
pop
mov
in
dec
lret
push
push
cltd
xchg
decb
out
adc
pushf
hlt
xchg
push
add
push
subl
inc
xor
cmp
or
fadd
jge
repnz
sbbl
xchg
pop
aam
fadds
jne
sbb
dec
add
shll
cld
pop
pop
ss
dec
adc
and
test
fcomp
add
pop
es
xchg
sti
and
add
out
xorl
mov
xchg
jo
adc
je
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
