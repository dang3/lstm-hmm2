js
dec
or
test
and
inc
sbb
sbbl
ret
add
test
add
sbb
dec
pusha
add
inc
add
mov
push
add
sarl
dec
or
inc
push
push
add
or
push
andb
add
add
pusha
and
mov
dec
add
adc
mov
add
cmp
inc
add
add
add
or
addb
jl
or
mov
or
daa
addb
xchg
add
push
add
and
add
xchg
add
or
add
adc
inc
movsb
adc
add
adc
push
add
pop
mov
push
clc
mov
addl
imul
add
addb
and
test
xchg
adc
and
add
addb
mov
and
xor
inc
and
outsb
push
add
fdivrs
or
add
add
and
adc
dec
add
xchg
xor
rol
mov
rcll
pop
mov
into
xchg
and
inc
and
inc
push
inc
inc
push
insb
add
add
orb
invd
and
inc
add
mov
or
add
or
and
add
add
add
rolb
push
add
add
int3
inc
adc
sub
add
add
dec
adcl
inc
or
cs
leave
popa
add
xor
xchg
adc
ret
andb
adc
sbb
addl
inc
dec
and
sub
add
add
push
sub
add
add
adc
pop
mov
add
adc
cmp
mov
popa
roll
cmpsb
and
sahf
mov
add
add
inc
and
push
and
inc
and
jbe
push
sbb
rorl
sbb
or
add
inc
mov
clc
sbb
bound
bound
inc
and
dec
addl
adc
lods
adc
dec
add
dec
add
mov
mov
inc
lcall
inc
add
add
adc
add
or
inc
or
add
pusha
or
add
add
loopne
into
add
inc
add
mov
mov
or
adc
mov
inc
add
or
and
xor
add
xorb
add
push
adc
add
add
inc
and
inc
xchg
and
adcb
add
push
add
mov
add
lock
dec
mov
dec
pusha
rorb
add
add
add
add
dec
addl
or
sbb
add
test
xor
rclb
add
or
lds
or
sbbb
inc
addl
push
inc
or
adc
inc
dec
sub
add
adc
and
push
xchg
mov
and
add
add
enter
addb
or
mov
adc
add
movsb
adc
and
adc
mov
sub
inc
or
or
sub
test
and
add
add
adc
or
xchg
daa
and
or
xchg
add
and
mov
je
addb
or
adc
mov
add
cltd
add
orb
rcrl
sbb
adc
inc
aam
jb
or
inc
addb
or
ret
inc
mov
test
mov
imul
dec
dec
add
andb
and
inc
dec
adcb
subb
and
and
add
add
cmp
mov
add
scas
add
add
inc
and
pop
shll
adc
mov
nop
xor
add
mov
adc
adcb
inc
add
dec
adc
mov
xorb
add
add
add
push
adc
pushf
pusha
enter
dec
add
sub
addl
test
add
add
and
add
cmp
sbb
adc
test
add
andb
inc
dec
popa
adc
add
inc
or
add
and
add
pop
adc
inc
pusha
add
orb
inc
adc
xor
movsb
add
add
xchg
push
inc
lcall
sbb
adc
add
add
add
push
add
dec
inc
and
jge
test
or
or
pop
or
rolb
push
or
adc
add
push
aam
andl
add
inc
and
mov
add
dec
add
add
push
js
loopne
addb
sub
adc
addb
in
add
add
or
add
add
sub
test
add
push
add
dec
enter
push
add
dec
jns
inc
inc
sub
add
add
pusha
adc
inc
test
loopne
addb
inc
and
add
add
adc
add
adc
add
add
mov
rorl
add
adc
inc
inc
add
xchg
dec
add
or
adc
or
add
and
and
sub
movsb
add
inc
adc
or
inc
orb
xchg
inc
xor
adc
add
sbb
push
adc
mov
jb,pn
add
ret
or
pop
addl
adc
adc
mov
or
push
add
and
mov
addb
push
ret
dec
fs
ror
inc
mov
xchg
add
adc
mov
andl
pop
jo
add
nop
add
or
pop
add
dec
pusha
and
add
rorl
rolb
dec
and
add
dec
add
push
inc
loopne
cmp
push
nop
cltd
add
xchg
jmp
add
test
mov
rorl
add
mov
insb
pusha
and
dec
adc
gs
add
or
lock
mov
cmovs
or
inc
add
pusha
addb
add
add
xor
xor
test
or
sbb
inc
add
push
add
and
add
mov
dec
add
or
add
push
inc
add
les
orl
add
imul
push
and
add
add
dec
sbb
lock
adc
jo
data16
add
lea
pop
mov
and
or
add
add
sbb
or
mov
jecxz
call
addl
or
leave
and
adc
or
sub
rolb
add
imul
and
cmpl
xchg
add
xor
add
add
add
add
inc
rolb
andb
add
arpl
add
and
sub
add
push
enter
or
jb
or
add
test
call
inc
and
dec
inc
or
adcb
nop
add
adc
nop
add
inc
inc
mov
and
add
sbb
inc
add
and
push
addl
add
test
xor
push
and
add
add
add
or
pusha
add
add
add
add
add
add
or
add
and
inc
add
dec
dec
sub
mov
sbb
and
adc
inc
and
sbbl
add
add
add
sub
add
xchg
das
or
inc
xchg
ss
add
add
xchg
add
aam
add
movsb
and
adc
jo
inc
or
add
aam
orl
or
sbb
pusha
ret
and
or
or
sbbl
add
sbb
inc
roll
mov
mov
add
loopne
dec
adc
and
add
add
add
sbb
addb
xor
addb
add
adc
adc
les
push
adc
add
and
inc
or
add
mov
or
and
add
addl
and
adcl
adc
or
push
lret
add
inc
add
xor
pop
push
add
adc
inc
add
addb
addb
add
adc
dec
add
or
dec
adc
and
adc
add
add
xor
inc
add
add
loopne
push
inc
or
mov
xor
add
sub
inc
add
or
cmpsl
loopne
add
or
inc
or
or
add
pop
addb
add
add
sub
mov
adc
cmp
roll
push
adc
sbb
inc
push
rolb
test
and
mov
or
push
addb
push
adc
mov
fs
and
mov
add
sbbl
add
add
shr
test
adc
adc
pop
and
mov
push
shll
push
and
adc
or
sbb
adc
rolb
mov
inc
inc
inc
add
pop
inc
sbb
add
or
addb
cwtl
add
sub
add
add
add
add
and
in
or
and
cmpl
add
mov
mov
addb
sub
inc
nop
sbb
inc
cmpsb
adc
and
and
mov
adc
nop
enter
inc
test
adc
rorb
adcb
adc
inc
orb
sbbb
xor
add
cmp
pusha
adc
sbb
int3
or
addb
or
mov
pop
add
and
cmp
or
or
mov
xor
push
or
add
sbb
add
nop
add
inc
addb
or
sub
add
or
and
add
and
add
popa
rolb
pusha
add
les
push
add
mov
or
sbb
add
sub
xchg
cwtl
inc
inc
addl
adc
add
and
and
jnp
xchg
addb
mov
add
mov
sbb
xor
adc
or
adc
bound
add
pop
sbb
pop
add
add
repnz
inc
pop
arpl
mov
or
and
add
adc
pop
rorb
rolb
rolb
mov
cwtl
dec
jp
inc
lcall
lcall
adcl
add
cmp
orb
inc
add
dec
je
add
mov
sub
or
add
add
rcrl
sbb
add
and
add
bound
and
mov
test
cmpb
push
adc
sbb
and
add
es
add
or
and
sbb
or
add
add
add
sbb
imul
add
push
add
add
or
mov
add
adc
add
add
inc
push
ret
dec
mov
inc
adc
add
adc
adc
and
cmp
mov
inc
loopne
cmp
inc
and
and
or
and
xor
cltd
sub
fcoms
jo
or
and
add
cmp
add
orl
add
pop
add
adc
cs
add
inc
or
adc
add
dec
mov
in
cmp
orl
add
enter
adc
addb
sub
and
add
leave
lea
adcb
xor
sbb
enter
mov
add
and
fadds
andb
add
inc
inc
push
test
test
mov
test
inc
inc
dec
push
inc
xchg
add
pop
add
sub
or
and
add
add
hlt
xor
dec
mov
sbb
sub
leave
test
inc
push
push
or
add
nop
adc
and
add
add
test
add
andl
add
inc
xchg
and
xchg
inc
xor
mov
inc
xor
adc
add
sbb
adc
inc
and
loopne
and
dec
and
xchg
int3
push
push
inc
and
inc
adc
push
push
addb
inc
add
aam
adc
into
add
add
movsb
movb
add
add
add
or
or
fsub
rcll
addb
xchg
mov
mov
push
cmp
adc
cmp
add
loope
sub
xor
addb
add
adc
and
inc
sbb
add
add
add
mov
or
and
and
adc
loop
add
movsl
inc
inc
add
dec
add
add
or
addb
loopne
xchg
dec
or
ret
and
and
add
add
mov
andb
xor
or
inc
inc
popa
and
addb
inc
dec
sub
cwtl
add
leave
add
pop
push
or
rorb
mov
add
movsb
mov
orb
add
add
test
pusha
rorb
add
add
adc
adc
or
mov
jo
pop
add
add
or
mov
pusha
inc
add
inc
sbb
add
pusha
mov
adc
or
add
add
sbb
mov
or
add
xor
add
add
push
mov
adc
adc
or
adc
push
add
jnp
or
dec
xchg
mov
imul
xchg
and
or
adc
or
movl
jo
ret
sub
inc
sbb
and
add
adc
cmp
dec
cmp
js
add
add
sbb
or
call
add
andl
sub
or
xor
inc
or
addb
inc
pusha
xchg
add
xor
shll
and
add
lar
orl
mov
add
sbb
inc
adc
inc
add
adcb
andb
add
orb
subb
shrb
shlb
nop
cmpb
mov
dec
jp
add
push
add
pop
inc
add
and
orb
mov
add
or
and
adc
or
push
inc
add
sub
sbb
les
addb
rolb
xchg
adcb
push
or
push
add
add
add
sub
xchg
inc
add
dec
add
sbb
int3
add
push
push
addl
adc
mov
and
or
inc
inc
and
stos
sub
or
inc
xor
or
mov
popa
lret
or
addb
adc
add
add
adc
mov
push
add
add
or
test
je
lock
add
add
or
stos
inc
mov
sbb
inc
loopne
push
adc
add
adc
add
and
push
add
or
or
addl
add
pop
pop
add
adc
add
mov
add
popa
xor
push
adc
add
subb
adc
and
add
sub
and
orl
adcb
add
add
enter
adcb
adc
add
inc
push
lock
push
add
popa
and
add
or
adc
lods
or
add
adc
lds
and
and
and
or
and
add
add
adc
inc
pop
add
lds
adc
push
sub
adc
add
push
xor
bound
add
or
adc
cwtl
inc
or
sbb
rolb
and
test
push
rolb
and
add
sub
adcb
add
test
adc
and
add
dec
fs
push
rolb
and
sub
mov
or
bound
adc
or
mov
adc
pop
add
or
add
loop
add
adc
inc
and
inc
add
adcb
push
inc
and
adc
test
addb
inc
or
or
add
cwtl
push
orb
and
adcl
inc
addb
mov
add
fiadds
inc
addb
and
and
xor
add
mov
add
adc
dec
sbb
add
add
add
push
xorb
or
stos
xor
inc
rolb
adc
adc
movsb
jb
or
orb
or
and
sbb
and
bound
sbb
sbb
add
inc
adc
les
add
xor
mov
add
add
add
or
inc
or
mov
add
and
adc
nop
push
xor
dec
xchg
and
xchg
add
adc
add
inc
add
jo
mov
add
sbb
sub
add
xorb
push
adc
adc
inc
push
mov
leave
orb
add
add
bound
or
mov
adc
and
jmp
sub
mov
add
pop
rclb
xchg
add
adc
add
adc
inc
push
addb
mov
adcb
andl
leave
sbb
inc
movsb
and
sub
add
add
xchg
dec
add
mov
or
push
add
and
add
push
and
push
inc
or
andb
ltr
add
bound
and
add
or
dec
mov
and
mov
inc
test
and
add
adc
add
sub
xor
add
add
mov
add
push
adcb
inc
or
adc
daa
addb
xor
add
add
ds
and
lret
pusha
and
sbb
adc
adc
and
andl
push
dec
dec
xor
add
add
sub
add
dec
js
push
add
or
push
inc
add
add
or
add
and
cmp
add
pusha
shll
add
pop
adc
adc
adc
addb
adc
and
fcoml
and
inc
jo
or
mov
and
or
addr16
adc
and
add
add
sbb
mov
outsb
addb
or
push
and
add
and
pusha
and
add
adc
and
rclb
nop
test
addb
ret
or
sub
and
add
add
or
or
dec
orb
push
or
add
or
andl
add
orb
add
bound
addl
and
addb
add
enter
fs
inc
mov
call
cwtl
loopne
inc
pop
add
sub
or
jo
cmp
or
xorb
pop
inc
mov
or
add
add
aam
or
movsb
add
add
dec
add
nop
or
adc
pusha
orb
add
inc
adc
inc
adc
pusha
add
inc
xor
adc
add
and
or
and
addb
adc
push
sbb
adc
adc
jo
and
inc
mov
or
add
inc
adc
add
inc
push
and
addb
and
addl
inc
fsts
sbb
cmpsb
xor
add
mov
push
add
and
in
and
or
and
and
roll
adc
popl
or
loopne
and
inc
enter
add
mov
adcb
add
add
rclb
xor
sbb
test
add
inc
or
mov
dec
and
adc
or
push
adc
pushf
add
inc
adc
and
adc
inc
test
adc
add
mov
add
rolb
xor
or
add
add
add
add
mov
or
cmp
inc
sub
adc
lcall
add
and
jns
dec
inc
add
les
nop
xor
sub
mov
add
xchg
xor
adc
and
and
les
and
adc
pop
sbb
addb
ret
lods
xchg
add
adc
addb
inc
or
aam
add
addb
add
inc
andb
or
addb
mov
adcb
cwtl
mov
add
roll
nop
rol
xor
or
add
call
add
push
addb
add
add
adc
and
adcb
add
add
adc
mov
add
test
loopne
inc
or
popa
push
movsb
les
inc
add
mov
or
lret
sbb
add
inc
dec
inc
subb
inc
or
add
inc
sub
imul
sub
and
dec
or
dec
and
addl
add
and
add
add
xchg
add
add
or
add
add
add
and
and
inc
rorb
add
mov
push
sub
sub
addl
pop
les
or
add
and
xchg
dec
adc
sub
inc
add
mov
or
or
mov
inc
test
add
and
sub
mov
sbb
sbb
nop
or
xchg
inc
sub
add
loopne
inc
es
jb
add
loop
inc
mov
push
adc
add
rcr
mov
call
sub
test
inc
adc
push
xchg
inc
inc
roll
and
ret
orb
or
mov
add
and
add
and
add
inc
sub
cmp
leave
or
mov
inc
add
xor
and
adc
rolb
add
and
adc
add
add
fldcw
xchg
or
andb
test
adc
adc
mov
or
sbb
adc
xor
pop
add
ret
or
mov
cmp
inc
add
sub
or
rolb
add
sub
adc
addb
lock
bound
inc
or
inc
or
add
orl
push
jo
call
mov
push
adc
push
inc
adc
add
or
test
push
or
inc
sub
mov
dec
ret
push
nop
bound
lods
int3
adc
ror
or
add
adc
add
add
shlb
dec
or
mov
or
adc
pop
add
mov
and
rolb
pop
mov
inc
push
leave
or
or
and
sub
les
adc
add
add
adcb
or
mov
or
add
fs
shlb
mov
mov
sub
and
adc
add
aam
cltd
xchg
inc
add
xchg
xor
inc
and
and
add
rolb
adc
add
xchg
or
or
test
leave
mov
add
push
or
addl
add
add
test
loope
roll
or
mov
inc
and
enter
xchg
add
add
add
adcl
jo
enter
and
je
inc
jne
xorl
add
and
sub
adcb
add
sub
inc
inc
add
or
add
sub
dec
add
add
push
nop
xchg
inc
or
xchg
and
adc
data16
dec
push
adc
andb
inc
adc
add
xchg
rolb
push
icebp
add
lret
pusha
dec
and
inc
sbb
xor
push
and
and
inc
push
and
addb
and
and
push
add
data16
add
add
sub
inc
andb
dec
add
add
test
and
sbb
dec
add
add
aad
add
andb
add
pop
add
add
and
or
add
rolb
arpl
add
add
sbbl
xchg
add
mov
add
add
jb
add
int3
add
add
inc
orb
adc
add
add
test
add
add
add
rorb
add
inc
dec
orb
add
add
sbb
rcll
add
sub
xorb
nop
mov
adc
or
or
lods
movsb
add
adc
add
addl
movsb
sbb
es
mov
adc
subb
mov
inc
push
xor
inc
add
movsl
arpl
addl
adc
rorb
inc
sub
rcrb
add
adcb
add
les
and
cmp
rolb
or
inc
addl
or
or
mov
mov
addb
add
ret
adc
add
add
xor
adcb
cltd
or
push
test
andb
sub
and
test
mov
add
dec
inc
orb
and
add
add
mov
ret
push
sbb
sub
add
in
add
and
adc
inc
inc
add
dec
jbe
and
or
or
rolb
add
add
inc
or
xchg
add
xchg
mov
add
push
or
push
add
adc
adc
push
sbb
inc
xor
push
cmp
jge
mov
sbb
add
inc
inc
cmpl
and
stos
mov
add
add
add
xor
int
adc
nop
xchg
and
push
inc
loop
push
or
or
add
adc
cwtl
add
add
dec
ss
or
add
imul
or
inc
xor
xor
sbb
xor
mov
sub
addb
sbb
mov
addl
loopne
add
andb
add
xchg
test
out
add
inc
and
and
adc
dec
xchg
sbbb
and
add
add
add
adc
add
add
add
inc
add
add
and
and
push
insb
andb
xchg
addb
addb
adc
push
subb
inc
or
and
dec
sbb
test
add
loope
add
adc
aaa
or
test
mov
cmp
test
add
or
adc
add
and
and
or
test
popa
orl
inc
push
push
add
add
sub
sub
movsb
or
xor
add
add
and
mov
cmpsl
mov
and
add
addb
add
and
and
test
inc
inc
sub
andb
dec
adc
xor
sub
inc
push
pop
inc
push
subb
inc
add
adc
add
orb
add
or
or
add
add
adc
add
inc
dec
and
ret
add
mov
or
pop
xchg
add
nop
mov
sub
inc
mov
test
adc
inc
mov
mov
and
adc
orl
pop
roll
add
ret
addb
mov
add
inc
or
xchg
pusha
sub
mov
push
movsb
enter
and
sub
orb
add
sbb
shlb
dec
add
add
push
inc
mov
add
inc
add
adc
mov
test
sbb
xor
or
mov
adc
addb
add
add
mov
test
or
rcrb
mov
sub
and
and
adc
add
addl
add
push
adc
push
xor
mov
movsb
inc
or
cwtl
dec
adc
and
adc
sub
fs
mov
add
nop
sbb
add
addl
sbb
orl
xor
push
add
cmpb
cwtl
mov
movsb
cmp
add
mov
add
xor
sbb
sbb
add
sbb
sub
cmp
and
or
and
add
and
js
add
lds
xchg
push
and
and
popa
add
cmpl
lods
inc
pop
sbb
flds
inc
push
cmpb
popa
adc
xchg
and
popa
adc
pop
inc
sbb
mov
and
inc
add
and
adc
add
inc
mov
ret
add
add
test
dec
mov
adc
fildl
xor
popf
mov
inc
andb
mov
add
add
add
push
push
test
pop
add
xorb
inc
and
mov
add
adc
add
add
xor
mov
add
addb
add
add
addb
push
add
rorb
iret
inc
pop
inc
push
pusha
and
inc
inc
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
mov
test
push
or
add
add
inc
push
or
add
jb
add
or
enter
add
add
adc
or
loopne
orl
add
cltd
rolb
inc
or
push
xor
roll
add
bound
sub
pushf
adc
push
add
adc
adc
sub
shll
bound
add
and
dec
adc
les
push
mov
test
add
pusha
sbb
inc
or
add
or
jo
xchg
adc
add
add
movsb
sub
nop
mov
test
cmp
add
dec
or
shlb
nop
test
inc
and
roll
or
adc
sbbb
inc
sbb
add
inc
add
nop
adc
sub
or
add
jno
and
sub
jb
rolb
add
addb
adc
addb
or
add
mov
inc
adc
or
shlb
or
or
pop
inc
and
xor
adc
or
add
mov
mov
inc
add
adc
pusha
sbb
adc
popa
dec
shlb
add
add
bound
inc
sbb
addl
adc
add
add
push
sarb
adc
pusha
sbb
mov
dec
fst
in
add
and
sub
stos
inc
test
push
add
add
sub
and
les
bound
add
or
and
rorl
cmp
mov
add
adc
or
add
mov
orb
mov
inc
pusha
cwtl
andb
andb
mov
add
adc
pusha
adc
xor
add
pop
add
add
rolb
and
push
addl
inc
inc
add
add
add
add
sub
ret
add
sbb
add
add
test
addb
addl
inc
sbb
adc
and
adc
rolb
or
andl
pusha
fadds
inc
rorb
orb
adc
adc
push
or
and
icebp
add
je
xchg
in
push
add
or
add
pushaw
bound
and
fiadds
push
adc
movsb
nop
add
sub
or
add
and
add
or
orb
add
and
cmp
add
add
sbb
add
cld
cwtl
add
add
add
add
pusha
add
sub
cmp
add
mov
loopne
and
adc
shlb
sbb
mov
inc
and
dec
pop
push
add
adc
adc
add
add
popa
push
push
loopne
add
and
add
push
adc
adc
add
inc
pop
add
and
sbbl
add
add
inc
sbb
faddl
and
adcb
add
inc
inc
movsb
add
loopne
add
adc
nop
push
adcb
push
and
dec
and
test
sbb
xor
addl
add
and
or
enter
movsb
sbb
inc
adc
add
add
xor
or
add
xchg
sbb
les
or
push
and
data16
adcl
push
adc
mov
push
add
adc
add
cmpb
mov
inc
add
add
adc
mov
aam
add
movb
push
add
sub
mov
or
adc
add
add
xor
jmp
add
and
or
add
sbb
inc
add
dec
addb
or
mov
add
les
inc
addl
push
mov
roll
and
test
orb
push
sub
add
sbb
adc
les
xchg
add
add
add
add
inc
add
jl
or
dec
add
mov
xor
add
sbb
and
pshufb
andb
add
push
xchg
sbb
ret
addb
and
or
add
adcb
mov
add
addb
repz
adc
sub
add
add
sbb
les
imul
add
addb
add
subl
add
adc
rolb
dec
adc
les
adc
adc
add
and
and
and
jb
jo
andb
adc
add
add
push
addl
dec
add
adcb
add
add
mov
and
xchg
test
je
add
adc
add
inc
push
add
dec
inc
xor
rorb
add
orl
and
adcb
inc
adc
add
add
dec
ret
pop
add
shrl
add
inc
push
add
push
lea
adcb
sub
adcl
jo
adc
add
nop
sbbb
ret
jbe
sbb
sub
add
add
add
popa
sbb
add
dec
adcb
inc
pusha
push
inc
and
inc
andb
inc
adc
add
push
adc
or
or
add
inc
inc
jo
jae
xor
inc
sbb
int3
add
push
add
fmull
push
inc
rolb
stos
andb
add
adc
adc
adc
addb
sbb
test
daa
adc
ret
dec
test
xchg
adc
or
adc
add
add
addb
mov
push
add
xor
add
add
rolb
add
add
push
adc
and
subb
sarl
add
or
cmpb
add
adc
or
js
sub
inc
add
loope
and
mov
andb
test
movsb
or
das
les
sub
fcoms
and
adc
and
add
mov
sbb
add
adc
push
or
add
inc
add
add
inc
add
test
mov
and
sbb
nop
cmpb
pop
mov
imul
xor
or
add
rolb
inc
sbbb
movb
and
or
mov
cmpb
xor
adc
xor
add
andb
popa
add
stos
addb
add
dec
add
adc
addl
add
add
add
test
or
or
test
adc
mov
and
sbb
roll
test
adcl
sub
sbb
inc
adc
dec
push
xor
dec
or
add
mov
mov
and
add
adc
ret
inc
arpl
add
adc
or
add
or
or
add
and
adc
adc
adc
xchg
adc
add
sbb
add
and
and
adc
mov
add
addb
or
data16
and
add
add
push
add
add
inc
add
add
pusha
addl
test
andb
inc
mov
adc
add
inc
sbb
add
inc
adc
inc
loope
add
and
inc
push
inc
push
adc
add
add
inc
push
mov
push
add
add
xor
inc
add
cmpsb
adc
and
adc
add
mov
add
and
test
sbb
or
sbb
add
and
add
adc
nop
test
shlb
cmp
adc
adc
addb
orb
add
add
xchg
movb
adc
or
movsb
and
adc
and
push
mov
adc
push
orb
mov
adcb
add
or
inc
and
xor
test
add
addb
add
sub
add
and
adc
mov
add
shrl
loopne
shlb
add
add
add
or
push
mov
and
or
or
loopne
add
add
mov
in
movsb
and
mov
mov
sbb
xchg
adc
add
jo
adcb
and
inc
dec
rolb
or
rolb
sbb
add
add
add
add
fldenv
adc
add
add
add
enter
and
mov
pusha
nop
add
add
add
add
push
add
adc
adc
add
adc
jecxz
test
mov
push
or
add
or
adc
or
addb
dec
sbb
addb
jae
or
mov
movsl
xchg
and
push
rorl
ss
sbb
and
and
mov
lret
push
add
push
and
sub
xchg
addb
or
push
mov
and
add
or
and
and
add
insb
adc
inc
and
add
and
adc
adc
addb
dec
and
enter
addb
sbb
loop
loop
or
push
and
push
xor
inc
addl
int3
gs
adc
mov
loopne
int3
and
mov
nop
add
xchg
sub
add
inc
mov
les
mov
sbb
int3
add
test
or
xchg
add
add
adc
inc
or
or
or
and
push
mov
test
inc
xor
rcll
sbb
xor
orl
or
adc
xchg
push
loopne
dec
add
dec
shrb
inc
lcall
and
int3
mov
movb
or
add
or
adc
addb
inc
add
xor
dec
sbb
pop
add
add
add
add
sbb
add
add
and
adc
addb
add
mov
or
popa
add
or
inc
add
pop
and
xchg
lods
add
and
xor
push
sbb
sub
or
addl
mov
add
lods
adc
dec
add
add
addl
cwtl
push
sbb
xor
add
add
inc
addb
adc
add
sbb
add
mov
pusha
test
test
inc
add
add
add
or
inc
mov
and
or
push
cwtl
inc
pop
and
addb
add
sub
sub
adc
and
add
xor
add
sub
add
sbb
arpl
mov
or
adc
adc
or
inc
and
aam
mov
sub
and
and
and
add
adc
inc
enter
push
and
adc
lret
inc
adc
add
or
add
or
or
or
sub
push
adcb
add
add
adc
inc
add
xchg
or
sub
cltd
xor
addb
or
inc
add
xchg
or
add
addb
adcb
inc
add
sub
sub
pop
pushf
add
sbb
dec
xor
sub
or
adc
adc
adc
inc
mov
test
js
add
andb
adc
push
or
add
inc
push
xorb
nop
add
mov
or
pop
mov
add
sbb
add
add
push
or
xor
inc
xchg
adc
movsl
add
and
dec
addr16
inc
add
add
push
or
adc
or
push
adc
add
iret
sub
xchg
add
or
or
add
or
or
add
adc
and
sub
test
adc
add
mov
call
les
mov
test
and
add
adc
inc
pusha
add
test
fiaddl
mov
add
and
add
mov
mov
les
add
add
push
add
nop
xchg
add
cmp
adc
sbb
xor
movsb
dec
add
lea
add
jo
movl
adc
or
or
orb
lcall
add
adc
lods
rclb
mov
inc
add
add
add
xchg
inc
bound
add
add
jmp
pusha
mov
inc
and
cmp
add
and
add
outsb
cwtl
dec
inc
add
roll
adc
jmp
or
pusha
sbb
lock
adc
or
push
adc
add
test
orb
es
mov
add
xor
dec
repnz
and
add
mov
xchg
adc
or
add
in
add
or
add
dec
add
and
add
push
andb
mov
add
nop
jne
or
shlb
and
mov
xor
inc
adcb
andb
or
cmovno
cmpb
push
dec
addb
inc
fadds
add
add
inc
sbb
or
flds
add
or
and
cmp
pusha
pusha
inc
or
xchg
or
andb
inc
push
inc
push
mov
inc
mov
and
or
dec
scas
test
loopne
mov
add
or
add
jne
add
adc
andb
add
sbb
and
or
jl
dec
sub
add
add
adc
adc
add
and
or
pusha
or
nop
push
or
or
movsb
push
push
add
cmp
push
add
add
mov
add
adc
or
add
adc
ret
push
and
or
add
sbb
add
sub
add
add
cmp
or
addb
nop
add
adc
or
add
and
add
add
adc
and
sub
or
mov
or
mov
mov
and
add
and
pop
add
add
add
inc
and
or
push
int3
adc
inc
addl
mov
test
add
adc
and
or
add
sbb
xorb
xor
loopne
and
add
inc
dec
and
sbb
add
add
sbbb
add
and
pusha
addb
add
add
add
adc
pushf
add
addb
adcb
sbb
add
adc
rorb
add
and
push
add
addb
and
add
sbb
add
and
addl
or
add
add
add
add
inc
and
add
enter
enter
orb
or
or
rolb
or
inc
adc
adc
add
adc
inc
push
dec
sub
mov
sbb
inc
add
and
adcb
adcl
or
sub
bound
ss
inc
sbb
or
cmp
inc
push
push
push
pop
add
inc
roll
or
adc
andl
orb
add
cltd
pop
add
test
clc
add
mov
or
and
xor
sbb
mov
and
and
adcb
and
pusha
add
inc
sbb
nop
mov
inc
pusha
sub
add
push
mov
and
or
ret
pop
movsb
adc
sbbb
add
add
adc
add
adc
add
shll
or
call
add
mov
add
push
ja
adc
and
or
or
addb
shlb
movsl
dec
rcrl
or
add
adc
add
pusha
add
or
xchg
dec
add
add
andl
add
add
test
add
push
adc
pusha
adcl
add
test
add
ljmp
sbb
daa
add
xchg
add
mov
sbb
or
add
add
inc
add
xchg
rorb
add
add
xor
nop
pusha
push
add
inc
or
add
fadds
and
test
and
subb
adc
pusha
mov
nop
or
sub
sbb
add
add
add
xchg
mov
and
or
or
mov
push
mov
add
add
cwtl
adc
movsb
ss
enter
and
nop
nop
and
add
adc
fidivl
and
add
add
ret
mov
js
sbb
add
shlb
or
add
add
or
add
xor
inc
fs
and
push
adc
and
add
push
or
lds
mov
add
or
add
nop
or
or
or
push
addb
mov
xor
sub
add
mov
inc
nop
add
mov
inc
add
push
cs
inc
nop
add
adc
xchg
push
sbb
add
add
adc
cmpsb
add
loopne
or
or
add
mov
add
and
or
add
add
mov
nop
sbb
add
sub
xor
sub
inc
jo
add
add
xor
cmpsb
cmpsb
sbb
push
and
add
mov
add
dec
sub
and
and
add
mov
cltd
add
sbb
add
add
adc
lock
adc
and
dec
and
dec
add
adc
cmp
add
inc
and
xchg
xorb
adc
inc
pusha
call
sub
add
or
mov
xor
push
add
addl
and
add
push
add
and
or
or
add
lods
fs
sub
xorl
rcrb
add
add
sbb
inc
test
adc
xor
adc
adc
gs
rolb
sbb
add
add
or
add
cwtl
add
add
popa
or
add
add
inc
adc
push
add
jno
xor
add
inc
jb
xchg
pop
xor
or
add
add
or
inc
jp
inc
adc
and
and
or
lods
and
or
push
inc
add
mov
ret
mov
les
lret
adc
and
add
loopne
add
push
adcb
xchg
addb
dec
or
xchg
sub
add
dec
or
and
test
repnz
adc
mov
sbb
and
cmpl
inc
and
dec
rorl
call
dec
sbb
add
push
scas
add
inc
or
add
or
nop
adc
adc
shll
or
inc
rorb
add
xor
add
add
push
movsb
push
and
add
add
or
adcl
rclb
adc
add
les
andb
cmpsb
inc
add
xor
aam
inc
add
outsb
sub
adc
sbb
xorl
add
or
mov
test
and
sbb
adc
xor
xor
add
add
adc
cmp
sbb
pusha
sub
or
test
loope
and
xor
inc
test
inc
add
xchg
rolb
cmpsb
add
test
mov
add
add
test
adc
or
add
and
andb
or
add
add
mov
test
test
sbb
xor
add
add
or
add
adc
orl
add
adc
add
addb
and
push
add
add
pop
dec
mov
addb
add
mov
add
inc
add
dec
inc
and
mov
inc
inc
adcb
add
or
fwait
add
adc
add
pop
add
add
add
js
sbb
dec
andb
add
nop
xlat
pusha
dec
nop
mov
add
sub
or
inc
xor
test
add
add
test
add
movl
mov
or
enter
sub
sbb
and
bound
add
adc
and
adc
jb
lods
ret
add
pusha
fs
adc
add
add
inc
add
adc
and
and
push
sub
xchg
push
and
cmp
and
sbb
push
inc
sbbb
test
and
pusha
and
or
push
addb
push
add
add
add
inc
mov
pusha
sbb
push
xchg
addb
nop
or
and
nop
test
sub
inc
sbb
loopne
inc
push
mov
push
cltd
pop
add
mov
add
or
add
or
push
orl
cwtl
mov
inc
push
add
or
mov
add
add
or
enter
add
xchg
nop
add
or
and
and
sbb
pop
inc
and
push
enter
push
push
or
addl
and
mov
add
add
and
cmp
dec
mov
add
adc
xor
add
or
adc
sub
ret
or
add
cmp
and
les
xor
rolb
pushf
dec
and
and
nop
mov
add
inc
or
or
or
dec
add
inc
add
add
and
xchg
push
nop
rclb
loopne
or
xchg
sub
mov
or
mov
inc
xor
add
and
addb
test
je
or
inc
adc
adc
or
inc
movsb
nop
adc
add
inc
inc
dec
add
cmp
or
or
and
or
mov
or
test
xchg
shlb
push
push
inc
sub
push
and
adc
add
inc
inc
inc
and
lock
add
sub
add
add
add
add
test
or
andl
test
or
mov
inc
add
orb
or
or
cwtl
dec
add
add
adc
add
and
add
inc
adc
adc
test
or
add
and
adc
and
add
add
orl
add
inc
inc
or
les
and
adcb
and
push
xchg
sub
or
adc
and
add
and
adc
or
xor
add
and
sub
add
and
addb
add
cmp
les
inc
add
mov
lods
addb
add
and
or
inc
cmpsl
add
dec
addb
and
mov
and
inc
popa
sbb
xor
aaa
adc
add
add
and
push
and
add
add
inc
add
adc
les
adc
pop
add
inc
adc
add
stc
enter
test
add
or
add
or
add
addb
and
enter
dec
add
jecxz
test
cmp
test
and
ret
add
add
add
mov
mov
loopne
adc
and
sbb
push
int3
add
or
push
add
add
add
xchg
or
and
inc
add
or
adc
add
sbb
movsb
lods
sbb
add
or
add
sub
add
adcb
push
scas
addb
test
add
or
jno
or
es
add
sbbb
or
push
pusha
inc
xor
add
inc
push
pusha
daa
sub
add
mov
push
inc
add
xor
inc
or
or
and
add
adc
inc
and
les
into
sbb
dec
mov
add
add
test
add
mov
and
mov
fsubs
and
add
push
adc
adc
inc
push
inc
fs
and
andb
cmpsb
nop
add
add
add
or
add
inc
add
sub
addb
xor
and
adc
add
mov
bound
dec
adc
and
adc
nop
sub
nop
and
dec
leave
movsb
adcb
inc
mov
xchg
sub
bound
add
add
inc
ret
pop
add
dec
push
test
add
inc
add
or
jbe
ret
xchg
movsl
es
inc
xorb
and
adc
adc
add
cmp
mov
sub
add
sahf
inc
or
mov
pusha
push
adc
lret
jo
adc
adc
inc
or
adc
add
loope
xchg
add
mov
push
lds
add
movsb
ret
test
or
adc
add
roll
andl
enter
add
sub
add
add
orb
pop
inc
test
add
or
and
add
xchg
sbb
add
push
or
and
adc
push
sbb
and
adc
addb
add
inc
addl
adcb
or
add
add
sbb
addl
imul
push
add
addl
adc
or
add
addb
addb
add
xor
adc
adc
inc
add
addb
addb
xchg
xor
add
inc
mov
push
addl
add
add
inc
add
push
add
sbb
loop
inc
cmp
add
inc
inc
adc
add
inc
add
and
sbb
orb
add
adc
rolb
and
and
inc
and
or
add
add
adc
mov
add
test
add
inc
add
add
push
rolb
push
xor
add
inc
or
adc
jge
je
adc
add
es
add
add
add
stos
add
enter
add
xorb
addb
add
or
and
addb
xchg
add
inc
and
xor
inc
add
test
addb
adc
dec
add
add
xorl
add
add
movups
add
xor
or
inc
or
inc
cmp
adc
imul
mov
add
add
add
mov
add
or
sub
addr16
or
add
and
xor
add
add
add
sub
add
adc
and
addb
add
addb
and
add
inc
insl
movsb
push
addb
or
add
adc
movsb
addl
cmpb
inc
push
and
add
sbb
or
add
inc
add
push
or
and
or
add
roll
test
and
adc
or
push
fadds
inc
add
adc
add
add
add
add
orb
sbbb
add
add
add
add
add
sub
push
sbb
inc
inc
add
add
mov
add
or
add
add
add
movb
addb
add
mov
lcall
add
inc
add
leave
add
adc
add
adc
mov
daa
andb
dec
addb
add
add
movsb
and
mov
add
or
and
add
add
inc
add
add
sbb
adcb
add
inc
add
dec
or
push
adc
inc
orb
inc
cmpsb
sbb
or
and
inc
add
andb
add
dec
mov
inc
add
mov
inc
xchg
push
jo
add
add
add
or
and
mov
add
add
dec
inc
inc
rolb
xchg
movsb
add
add
add
add
and
add
sub
add
adc
add
add
add
adc
add
and
add
dec
adc
inc
subb
inc
adc
inc
add
add
inc
push
addb
add
add
adc
mov
inc
add
xchg
sbbb
pop
roll
xchg
or
adc
adc
add
adc
add
add
sub
in
add
movsb
nop
sub
sub
addb
add
andb
les
add
add
add
add
jno
or
add
xor
add
inc
add
xor
add
stos
adc
add
add
add
inc
adc
inc
rolb
add
or
push
push
and
add
add
add
add
inc
add
mov
add
and
add
add
push
adc
and
and
add
add
push
adc
add
dec
adc
or
daa
add
or
add
add
adc
inc
inc
add
xor
add
and
add
add
adc
add
and
push
add
dec
adcb
mov
add
add
lock
add
or
add
add
sbb
adc
add
add
adc
add
popa
inc
add
inc
add
add
dec
add
nop
adc
add
push
addb
add
add
add
and
add
adc
add
inc
add
or
addb
adc
inc
dec
mov
adc
add
inc
add
and
and
add
or
add
mov
or
jo
popa
add
add
add
inc
mov
add
inc
nop
adc
add
adc
add
add
or
add
add
sbb
add
add
add
add
daa
add
inc
adc
inc
and
push
add
add
add
inc
sbb
pop
add
add
inc
add
inc
inc
adc
add
or
dec
inc
add
dec
inc
inc
add
adc
xor
mov
adc
test
adc
fs
or
and
add
add
inc
adc
sub
dec
add
push
adcb
sbb
sbb
add
dec
dec
or
sub
add
xchg
add
loopne
addl
or
addb
or
add
dec
add
add
inc
push
test
and
inc
sbb
adc
inc
adc
add
or
lcall
or
add
adc
inc
orb
inc
add
add
add
inc
add
add
add
add
add
or
add
dec
or
orb
add
pusha
inc
addb
pop
and
add
push
or
and
add
push
inc
sub
mov
or
add
rolb
add
add
adc
add
and
add
xorl
mov
sub
add
test
add
and
add
add
movsl
or
adc
xor
test
andb
add
arpl
aam
inc
sbb
sbb
inc
add
add
pop
mov
adc
adc
and
add
inc
inc
push
add
sub
adc
and
xor
add
add
jo
dec
add
mov
inc
add
cmp
loop
xor
or
mov
add
test
add
mov
adcb
or
rolb
nop
add
addl
push
mov
add
test
or
add
push
popa
add
test
add
inc
arpl
push
test
add
add
or
add
mov
add
push
addb
add
or
xchg
adc
add
and
adc
inc
sub
test
popa
add
sub
rcrb
movsl
xchg
add
adc
and
inc
adc
adcb
mov
sub
add
dec
or
adc
add
adcl
add
xor
add
push
add
add
or
add
add
add
pusha
add
popa
sub
orb
or
loopne
add
add
add
or
add
sbb
imul
or
or
add
sbb
or
dec
mov
inc
and
addb
inc
push
inc
add
add
push
adc
add
push
sub
pop
xor
or
add
sub
add
inc
inc
add
sub
add
push
adc
add
add
inc
add
inc
inc
xchg
inc
adc
add
add
movsl
and
addb
add
add
inc
add
and
adcb
or
xorb
roll
rolb
add
add
dec
and
xor
and
or
dec
add
xchg
mov
adc
inc
add
roll
or
add
lret
and
loop
add
add
and
add
push
add
call
add
inc
and
orb
add
adc
and
add
or
add
xor
rolb
add
inc
or
pusha
add
and
add
add
add
mov
test
inc
add
and
push
add
add
addb
add
add
nop
push
pusha
add
or
add
add
inc
addl
mov
add
add
add
add
inc
addb
add
add
mov
or
push
or
pop
add
add
dec
inc
addb
inc
orb
orl
xor
sbb
adc
inc
sbb
or
add
add
add
add
and
sub
add
add
adc
jmp
add
icebp
loopne
add
add
add
or
dec
adc
xor
add
xorb
inc
add
inc
add
and
dec
add
add
or
add
add
addl
adc
dec
sub
inc
add
add
adc
adc
push
add
mov
inc
add
inc
add
sbb
inc
add
or
and
add
cmp
add
add
or
jno
add
inc
test
bound
and
and
add
addl
add
mov
mov
add
adcl
and
add
bound
or
add
and
add
inc
inc
rolb
fsts
add
nop
inc
dec
mov
add
add
adc
or
xchg
add
add
add
mov
add
add
add
inc
xor
inc
orb
sahf
or
or
add
inc
or
inc
add
add
add
add
add
or
add
add
and
add
or
mov
or
add
adc
inc
adc
arpl
add
add
dec
and
add
andb
add
and
push
adc
add
inc
add
inc
add
addb
mov
adc
add
adc
add
add
add
add
add
loopne
add
pusha
push
xor
add
inc
adc
cmp
add
add
inc
inc
mov
dec
inc
or
add
or
push
inc
add
fimull
inc
add
inc
sbb
lret
rorb
and
add
les
mov
rolb
inc
addb
inc
or
or
adc
add
popa
mov
add
add
or
or
sub
inc
and
and
add
add
push
inc
pusha
inc
and
and
and
inc
inc
or
add
add
adc
and
add
add
adc
add
add
or
inc
sub
aad
repz
adc
add
add
add
adc
or
add
orl
adc
adc
sub
push
lea
popa
dec
add
int
add
add
adc
addb
xor
add
xlat
inc
add
inc
add
adc
and
add
add
inc
adc
and
add
inc
and
sbb
fadds
add
adc
add
or
add
and
add
nop
and
add
sbb
mov
sub
or
inc
inc
add
addb
adc
push
inc
or
or
xchg
addb
add
orb
add
inc
and
add
and
add
mov
push
mov
inc
inc
mov
addb
xor
add
add
add
sbbb
stos
shlb
inc
add
inc
cs
push
inc
and
mov
add
add
mov
adc
dec
sub
dec
push
andb
addl
inc
adc
adc
add
test
add
add
adc
pop
adcb
inc
add
adc
ret
or
add
and
dec
push
mov
add
add
add
addb
add
add
andb
add
add
add
inc
add
add
add
roll
or
add
and
inc
add
inc
or
sub
add
add
test
add
jo
add
add
aad
add
sbb
xor
and
and
addb
or
add
addb
add
push
rolb
and
inc
inc
sub
add
add
adc
add
sub
sub
add
and
popa
adc
adc
inc
orb
cltd
or
addb
and
add
add
add
and
adc
push
add
mov
and
add
or
addl
add
add
add
add
inc
add
add
add
and
xor
and
andb
or
or
pop
adcb
add
add
add
add
add
pop
sub
add
sbb
and
add
xchg
sbb
or
add
add
add
adc
add
sub
and
test
inc
add
push
shll
test
add
add
and
inc
inc
add
or
dec
rorb
add
sbb
add
or
add
orl
add
loope
inc
or
mov
add
or
popa
inc
or
rclb
or
add
addb
add
add
and
or
xorb
or
enter
and
dec
xor
and
add
rorb
push
add
addb
and
or
or
mov
xor
push
inc
add
or
xor
add
add
pusha
add
add
add
add
loop
mov
inc
adc
mov
mov
adc
add
add
push
add
and
xchg
or
sbbb
add
add
les
out
add
icebp
inc
add
loope
add
mov
mov
inc
xchg
or
and
add
bound
sbb
inc
and
add
add
cmpb
add
jecxz
add
and
and
dec
or
inc
or
test
inc
add
inc
add
xor
addb
nop
adc
add
add
add
xor
add
and
push
enter
add
pop
bound
add
add
or
add
adc
addl
sub
pusha
rorl
mov
and
addb
add
push
inc
add
add
rclb
xor
add
add
adc
add
in
add
add
add
add
ret
xchg
and
call
inc
add
add
add
addb
rol
add
add
dec
add
push
add
and
mov
inc
and
and
add
add
adc
add
inc
add
mov
inc
add
add
add
and
inc
addb
and
add
add
addl
add
andb
add
add
adc
rol
inc
inc
and
add
in
add
imul
or
add
test
dec
xor
sbb
add
add
mov
add
add
sbb
add
xchg
add
stos
add
nop
or
add
add
add
add
adc
and
inc
add
roll
add
adcb
add
and
inc
rolb
dec
inc
inc
add
or
inc
and
andb
andl
dec
add
add
push
xor
test
addb
mov
or
add
adcb
add
inc
adc
add
or
adc
add
dec
inc
add
test
inc
add
test
mov
add
add
or
enter
adc
add
add
and
popa
adc
or
or
inc
or
adc
add
or
add
add
int3
add
add
inc
addl
add
add
adc
or
xor
mulb
xor
mov
mov
rcl
iret
loopne
push
pusha
mov
repz
or
cmp
mov
cmp
mov
mov
pop
lea
ret
icebp
mov
inc
jno
push
jecxz
jb
mov
lods
daa
push
mov
sub
daa
ljmp
sti
out
call
mov
cmp
stc
cmp
mov
bndldx
jmp
dec
mov
stos
repnz
and
or
test
mov
test
mov
jnp
cmpsl
cmpl
adc
or
or
cmc
mov
jp
cli
lods
popa
sub
cs
js
cmp
dec
cmp
adc
push
add
imul
dec
loopne
js
cmp
dec
lret
jmp
jg
ljmp
cmpsb
xor
mov
test
sbb
andnps
test
dec
sahf
pop
adc
scas
rorb
xchg
push
roll
aas
sub
pop
or
cwtl
enter
mov
sub
or
lcall
mov
xor
or
cwtl
cmpsl
repnz
bound
or
test
sbb
leave
pop
out
ja
mov
inc
inc
add
mov
xchg
ret
out
addr16
or
fdivs
push
loope
mov
clc
xchg
sub
test
pop
push
test
adc
pop
clc
xchg
push
ljmp
stos
aam
mov
mov
insb
clc
fdivrs
xor
int3
or
idiv
dec
inc
inc
add
cmp
clc
lcall
sbb
testl
ss
sbb
jge
and
adc
sub
test
pop
cmp
jno
sub
cmp
cmp
or
icebp
cmp
cmp
dec
into
jp
sar
stos
mov
fnsave
cmp
jae
push
decl
lea
dec
adc
repnz
pop
lock
pop
mov
lods
test
lea
push
lret
mov
cmp
shr
adc
and
inc
dec
dec
pop
sbb
xlat
mov
add
dec
js
xchg
mov
mov
sbb
or
pop
pop
and
jae
sbb
dec
mov
push
push
jg
mov
aam
data16
push
fsubs
repnz
adc
mov
cli
adc
cmp
fnstenv
cmp
or
aas
test
mov
ds
cli
aas
test
stos
cmp
inc
pop
and
mov
jge
cmp
pop
xor
js
cmp
lahf
inc
add
xchg
or
or
or
jno
cmp
incl
push
sbb
push
mov
xchg
cmp
imul
loopne
outsl
movsl
xchg
out
imul
test
or
test
scas
push
jmp
push
shlb
sbb
leave
push
out
ja
inc
ss
mov
nop
mov
pop
push
popa
pop
sbb
dec
push
clc
cmpl
push
push
lcall
jge
lods
or
xorb
mov
test
sahf
repnz
js
cmp
mov
test
mov
test
push
xorb
mov
cmp
cmp
imul
mov
stos
sbb
movsbl
xchg
cmp
xor
sti
clc
lea
pop
cmp
jp
lods
movsbl
xor
cmp
rorb
movsbl
mov
xchg
jge
cltd
clc
lcall
sbb
es
js
cmp
or
adc
filds
pop
test
lea
test
mov
sub
js
cmp
or
fnstenv
cmp
clc
sbb
nop
dec
in
leave
cmp
lock
repnz
outsb
fwait
inc
shrl
xchg
jae
mov
add
pop
mov
pop
mov
aas
cli
xchg
scas
dec
pop
xor
cwtl
sarl
test
xor
jno
jl
sbb
adc
jecxz
cmp
xor
aaa
sahf
lahf
xlat
mov
jg
loope
push
cmp
xor
loope
pop
mov
ljmp
xchg
or
mov
gs
jmp
cmp
jmp
fwait
in
pusha
adc
dec
leave
subl
cmc
cmp
dec
xor
or
or
scas
mov
loope
imul
cmp
in
add
or
pop
ja
repz
scas
dec
jne
mov
aas
xor
cmp
call
aam
in
adc
sub
cli
pop
add
mov
shll
cmp
clc
lcall
sub
gs
hlt
xchg
ljmp
std
xor
pop
mov
jge
mov
fnsetpm(287
ret
sbbb
cmp
add
xorb
mov
ljmp
dec
push
mov
adc
ds
mov
sbb
cmp
cmp
mov
test
js
cmp
or
jb
aas
mov
pop
pop
mov
fdivs
cmp
dec
ljmp
add
lods
pop
dec
rcrl
mov
test
push
or
aaa
mov
mov
mov
or
pop
or
stos
sti
or
cmp
sti
xchg
adc
dec
push
or
sub
or
cwtl
insb
lock
test
mov
pop
mov
pop
xor
xchg
inc
test
pop
fwait
cmp
sbb
gs
inc
cs
sarl
adc
loope
jecxz
shll
jae
shll
bound
cmp
andb
bound
add
adcb
inc
scas
mov
shrb
pop
cld
dec
and
xor
insl
int3
adc
mul
sub
or
std
add
enter
sub
pop
push
mov
in
ds
loopne
xchg
sub
xchg
adc
adc
jo,pt
mov
rorl
mov
sbb
ds
lahf
insl
test
setge
fs
lcall
shrl
scas
sbb
repnz
mov
std
or
lahf
add
cs
sti
fsub
adc
mov
jp
iret
ret
dec
pushf
cli
cwtl
pusha
dec
xorl
fcomps
clc
decl
push
test
lods
jge
das
sbb
pop
loope
mov
ljmp
hlt
enter
sbb
stc
mov
add
cmp
inc
adc
mov
sbb
lock
out
mov
inc
and
in
nop
xchg
fwait
cld
and
std
and
mov
add
iret
sbb
mov
sub
xor
xor
aas
push
in
les
cmp
scas
cmp
loop
inc
jnp
outsb
jmp
xor
clc
push
scas
mov
add
inc
sub
jno
mov
xor
pop
push
data16
in
mov
inc
pop
call
cmp
push
sbb
ret
pushf
imul
pop
pop
push
mov
push
push
loopne
sub
mov
dec
in
add
ds
lcall
sarl
cmp
rclb
cli
lock
inc
call
push
inc
xor
mov
mov
es
add
mov
mov
fsubrl
pop
xor
sub
mov
sub
cs
cmp
subb
add
sbb
mov
hlt
sub
mov
insl
lret
sub
mov
mov
mov
sub
xor
js
xor
or
dec
or
add
js
test
mov
push
dec
jo
inc
sahf
mov
add
dec
pcmpeqw
xchg
push
jnp
inc
fmul
cld
mov
mov
mov
aaa
jae
sub
lds
stos
sub
enter
cmp
mov
inc
mov
icebp
cld
ja
jb
add
test
mov
add
jl
dec
or
call
sbb
xor
dec
dec
repz
jne
data16
xchg
jne
ljmp
int3
clc
dec
jbe
andl
push
inc
scas
repnz
shll
mov
ss
pop
adc
fwait
ss
cmp
add
or
or
cmp
mov
retw
cmp
jnp
jl
cmp
mov
out
int3
push
ss
jae
js
mov
push
iret
mov
push
cmpsl
sub
or
pop
mov
ds
clc
and
jl
mov
sbb
stos
mov
lea
sbb
notb
xor
int3
mov
scas
mov
sbb
mov
cmp
push
jno
jne
cmp
dec
sbb
sub
jmp
ret
js
movsb
flds
cmpsb
rdpmc
js
cmp
mov
out
dec
fisttpll
loop
cld
fidivrl
mov
push
addr16
in
orb
inc
push
sti
fcompl
arpl
xchg
fildl
stos
mov
mov
xor
push
sbb
je
sub
aas
push
rorw
jle
xor
into
adc
and
xchg
out
sbb
xchg
add
push
inc
adc
cwtl
mov
daa
add
dec
and
ret
xchg
mov
fnstenv
cwtl
sti
movaps
xchg
call
cltd
adc
mov
lret
and
out
cmp
loope
int3
stc
mov
fimull
lea
adc
mov
inc
push
inc
pop
lret
mov
pusha
cmpsl
inc
or
xor
sub
inc
jle
adc
jmp
and
jno
outsb
mov
pushf
shlb
mov
sub
xchg
into
ss
out
dec
test
les
aas
jb
movsb
dec
inc
rolb
stos
aas
inc
and
filds
and
dec
add
or
cld
mov
ss
mov
jl
mov
mov
add
mov
mov
sbb
cli
xor
jle
push
std
inc
fisttps
enter
sbb
pop
mov
movsl
dec
xchg
adc
insb
mov
cmp
mov
and
dec
xchg
pushf
sbb
fldl
xchg
daa
pop
inc
xor
int3
mov
lock
js
push
inc
fwait
sbb
xchg
cmp
inc
mov
icebp
lcall
mov
jae
jp
jl
mov
mov
pop
lcall
xchg
in
lods
push
dec
aad
lock
mov
aas
xor
push
inc
ret
in
outsl
pop
jno
psubsb
cmp
jne
cmp
cmp
negb
and
inc
cmp
mov
loop
test
jl
jbe
xchg
mov
addps
push
push
aam
clc
adc
sahf
add
cmp
mov
neg
sti
mov
mov
mov
fstpl
pop
dec
out
and
aaa
push
sbb
cmp
rcrl
notb
shl
or
js
aad
insl
sti
imul
or
push
outsl
mov
mov
lods
cli
lret
das
outsb
xor
pop
fidivrs
sbb
mov
repnz
mov
adc
jbe
jmp
sbb
ret
xchg
lods
mov
ds
clc
xchg
inc
dec
scas
push
out
xchg
jg
sbb
xchg
adc
aaa
xchg
lods
scas
inc
pushf
cmp
filds
dec
sarb
jo
push
mov
add
sbb
les
test
out
xor
int
je
sbb
jg,pn
cmp
dec
ds
pop
jno
cltd
fcoml
sub
stos
xchg
idivl
mov
fimull
push
aam
mov
jle
mov
in
jns
mov
shll
mov
popl
pop
jg
push
clc
ret
std
dec
sbb
push
ljmp
stos
push
add
js
and
pushf
mov
xchg
hlt
cli
mov
jmp
aas
jbe
outsl
adc
jp
andl
inc
fsts
ss
inc
test
mov
pop
aad
pop
adc
sub
aad
mov
inc
test
jp
pop
mov
xor
in
pop
mov
daa
aas
cmp
mov
fdivs
clc
faddl
lock
pop
sub
enter
dec
fcomps
push
add
loopne
sahf
out
adc
shrb
dec
pop
scas
and
in
stos
mov
setp
icebp
les
out
and
mov
ljmp
lea
sbb
stos
lahf
ljmp
lea
aaa
dec
xchg
enter
or
ds
movsl
xor
aas
insl
jo
cmp
and
mov
xor
shll
enter
dec
scas
add
cmpsl
sub
repz
ret
arpl
or
shrb
imul
lds
dec
dec
fcompp
sbb
inc
mov
aam
mov
stos
nop
insb
xchg
inc
xchg
leave
fs
sub
test
xor
cmp
cli
sbb
adc
xor
cmp
pop
mov
cld
movsl
hlt
mov
adc
mov
pop
dec
mov
mov
mov
inc
aas
sub
outsb
push
test
push
push
ds
sbb
jmp
xchg
mov
xor
into
fcompl
xchg
jnp
jb
add
mov
popa
mov
mov
cltd
pop
sbb
dec
sub
aas
cmpsb
scas
cmp
sub
cmpsb
out
into
repnz
arpl
add
cmp
add
xchg
adc
movb
dec
in
inc
sub
xor
push
out
pop
mov
sub
cmp
icebp
ljmp
cmp
pop
int3
and
add
popa
mov
push
pop
in
xchg
pop
jle
into
sahf
insl
pop
ficoms
and
push
cmc
pop
or
fadds
int
outsl
mov
xchg
pop
jmp
lea
pushl
sub
adc
mov
ret
stc
jo
jp
ret
mov
add
add
mov
jne
pop
xor
cmp
rep
in
xor
in
mov
fiaddl
push
sbb
jmp
cmp
cld
mov
es
xchg
jo
or
mov
sbb
push
int
popl
cmp
hlt
orb
lods
xchg
das
mov
ds
xor
outsb
pushf
js
inc
mov
std
cmp
pop
repz
cmp
clc
sbb
adc
push
cwtl
xchg
mov
pop
mov
cltd
inc
mov
inc
mov
nop
adc
lods
imul
mov
jg
scas
adc
inc
fisubrs
add
repz
sti
ret
inc
je
cmp
repnz
scas
ret
repz
sbb
jns
mov
fwait
mov
xchg
pop
fcomip
popf
in
shlb
push
mov
aas
lea
sbb
cmp
fcompl
cmpsb
mov
lock
push
sbb
dec
les
jae
clc
push
sub
push
cmpb
jbe
nop
mov
and
pop
in
sub
hlt
sbb
sbb
push
xlat
adc
lahf
mov
adc
add
jmp
mov
sbb
cmpxchg
ret
ja
dec
mov
test
fmuls
jecxz
push
mov
sub
xchg
in
jno
scas
xchg
out
jno
fdivs
mulb
xor
scas
jo
mov
pop
outsl
sub
dec
je
test
repnz
fcoml
mov
into
xchg
cmp
adc
or
cmp
dec
sub
adc
jo
or
lcall
rcrb
push
xchg
sti
jns
enter
fimuls
add
adc
push
stos
dec
jl
in
dec
mov
mov
mov
inc
jnp
mov
mov
sbb
ss
clc
sbb
xchg
iret
or
test
mov
or
ret
fs
mov
andb
add
push
sub
pop
cmc
cmpsb
push
mov
mov
fcoml
lret
mov
or
or
fistpl
lods
fisubs
sbb
sbb
mov
mov
cmc
scas
aas
test
add
sbb
out
or
lcall
dec
mov
pushf
push
sub
repnz
and
repz
sbb
sbb
xchg
pop
mov
or
int
lahf
xorb
jne
dec
test
jns
mov
in
adc
push
gs
repz
dec
popf
icebp
sbbb
lea
dec
sub
push
jbe
test
xchg
xor
dec
mov
out
mov
jmp
sbb
jne
popf
mov
es
loopne
test
push
cmp
jmp
adc
cmp
and
mov
push
imul
rcrb
sub
inc
push
cmp
mov
mov
dec
or
arpl
clc
mov
push
cmp
icebp
xor
or
xor
mov
out
dec
sahf
cld
xor
jmp
cli
jle
cmp
rcrb
pop
idiv
or
add
repz
jl
cmp
ret
xor
mov
add
leave
or
out
mov
and
xchg
ljmp
fs
pop
mov
shrb
idivb
xor
int3
fwait
xchg
cmp
mov
hlt
stc
mov
push
outsb
or
enter
test
lea
push
inc
and
or
sbb
scas
vpsllq
jecxz
rcrl
pop
mov
lahf
cmp
xor
adc
cmp
mov
mov
push
stos
mov
loopne
int
std
mov
or
jbe
push
nop
popa
popa
cmp
sub
sti
xor
mov
mov
add
mov
cmp
arpl
aaa
cwtl
cmc
stc
adc
fcomp
mov
and
cs
jecxz
inc
dec
and
push
movsb
das
mov
rcl
outsb
dec
sbb
push
outsl
cwtl
imul
xor
stos
out
ss
mov
add
sub
add
mov
sub
popf
sbb
mov
add
outsl
cmp
sar
push
mov
cmp
or
mov
xor
pop
push
or
mov
cli
pop
out
xlat
je
mov
imul
test
mov
or
mov
call
jns
or
mov
mov
into
ds
mov
jecxz
scas
and
fldenv
mov
add
push
lcall
or
pop
adc
inc
fwait
shlb
sar
cmp
addr16
jno
lret
or
test
mov
clc
fs
mov
icebp
mov
std
xchg
mov
adc
add
pop
stos
pop
lock
cmpsb
xchg
mov
xchg
mov
pop
in
popa
fcomi
or
shrb
cmp
scas
sub
mov
mov
nop
mov
int
out
cmpsl
jl
aas
cwtl
inc
inc
out
mulb
push
ss
inc
xor
lret
lods
sub
push
pop
into
cmp
fdivr
stc
repz
lret
das
adc
jmp
mov
dec
sti
lret
dec
mov
ja
pop
sbb
push
and
or
jmp
push
ret
lock
sbb
xchg
mov
popf
fbstp
mov
popa
shr
push
mov
xor
call
dec
enter
sbb
inc
cmp
push
inc
call
inc
dec
aas
test
aas
lret
and
fcoml
and
dec
mov
jge
xor
test
dec
mov
dec
pop
cmp
dec
js
test
push
shlb
inc
mov
lods
rclb
cltd
xor
cwtl
orl
cmp
iret
lods
xchg
sbb
xor
aad
cmpsb
or
sub
xchg
orl
mov
rorl
mov
mov
lahf
adc
fmuls
push
cmp
push
into
pop
mov
cmp
lahf
jmp
stos
subl
mov
dec
sbb
dec
lods
mov
lret
scas
addb
in
adc
mov
mov
ss
and
or
and
insl
arpl
in
mov
push
ret
outsl
and
cmp
scas
sahf
movsl
lea
or
xchg
inc
ds
jp
and
pop
sbb
shr
pop
ja
xor
adc
xor
jae
out
mov
iret
aad
mov
push
push
mov
push
inc
out
sub
mov
push
sbb
and
rolb
push
sbb
mov
add
push
gs
sbb
mov
jp
cwtl
movsl
sarb
std
fwait
cmpsb
outsl
adc
mov
mov
jno
inc
xor
jle
imul
iret
loop
dec
add
or
mov
js
and
sbbb
adc
inc
sbb
mov
xor
jg
jg
cli
xchg
mov
dec
lahf
cmp
inc
push
xor
fwait
dec
sbb
jmp
xchg
cmp
ret
mov
mov
scas
sbb
lret
pop
adc
mov
movsb
subb
enter
mov
and
lods
div
outsb
cmpb
clc
pop
jecxz
js
ret
jae
pop
cmp
mov
sbb
xchg
sub
ret
xchg
push
out
sub
xor
sbb
arpl
mov
testb
insb
aas
lods
rorb
daa
aam
dec
mov
sahf
pop
lods
adc
cmpsb
fiadds
in
in
pop
test
clc
iret
stos
data16
jno
iret
mov
jns
loopne
xor
sub
push
xchg
cmp
pop
out
xchg
lods
orl
nop
iret
adc
ret
or
pop
mov
mov
popa
repz
dec
mov
dec
out
adc
sub
jno
jp
adc
cmp
xchg
push
push
push
adc
xchg
fs
inc
je
popf
cmp
mov
mov
adc
mov
jno
and
loopne
push
pop
cmp
in
orb
mov
or
stos
push
dec
scas
xchg
data16
jp
cli
lahf
inc
test
mov
repz
outsl
sbb
lret
sbb
clc
inc
je
pushf
mov
xor
cmpsb
mov
push
pop
int
arpl
dec
lret
and
cmp
pop
mov
mov
mov
or
leave
or
mov
mov
sbb
shr
in
mov
mov
lahf
or
mov
imul
rcrb
dec
push
decl
cmp
xor
sbb
icebp
imul
inc
or
das
lret
push
adc
repnz
sahf
iret
dec
sbb
fwait
or
rclb
and
mov
xor
fisttpll
call
pop
jp
cmp
jno
lret
inc
cmpsb
mov
mov
aas
cmpl
mov
cmp
push
lcall
lahf
xor
mov
rdmsr
cmp
and
mov
pop
xlat
and
icebp
jne
xchg
sbb
inc
add
sbb
insb
xor
sbb
fwait
and
adc
add
pop
stos
inc
inc
jne
mov
iret
in
mov
cmp
test
jge
sbb
mov
and
jo
mov
std
aaa
lea
pop
shlb
sbb
xchg
cmc
ret
dec
sub
or
outsl
xor
and
clc
jl
scas
fiaddl
sbb
sub
lret
mov
inc
inc
ljmp
imul
mov
pop
out
mov
rcrl
adc
and
xor
outsb
loop
push
sbb
mov
or
int
jge
test
pop
aam
xchg
adc
out
inc
jp
stos
mov
inc
imul
fstpl
mov
push
xor
gs
rorb
rorl
scas
jp
test
gs
or
sbbb
adc
pop
fnstsw
push
out
and
icebp
sahf
cltd
ret
test
mov
xor
pushf
aam
sbb
dec
sbbl
xchg
mov
fists
pop
mov
xchg
or
jnp
lds
xor
imul
sbb
xlat
mov
jbe
pop
sub
fxch
or
mov
sub
sbb
cltd
push
clc
cs
mov
ja
addr16
mov
fcmovbe
lock
jne
mov
in
sbb
test
cmpsb
ret
rolb
cmp
sbb
dec
mov
cmc
push
pop
sbb
adc
stos
add
sarl
je
lret
clc
andl
test
pop
pushf
xchg
xor
mov
lea
dec
xor
popf
mov
fisttpl
lea
ret
mov
std
outsb
cld
add
insb
shrl
mov
repnz
and
adc
or
jo
arpl
add
nop
in
stos
xchg
fcomi
lahf
adc
ljmp
fldl
jae
pusha
bound
mov
mov
dec
inc
cli
dec
adc
call
enter
pop
push
mov
sbb
fimull
sbb
sahf
mov
push
in
movsl
or
xchg
push
sub
loop
mov
xor
and
ficompl
xchg
hlt
dec
cld
mov
xchg
push
dec
cmp
insl
jae
sbb
fwait
add
or
mov
push
jg
mov
add
cli
stos
inc
andl
ss
ljmp
jb
pop
ss
pop
iret
dec
outsl
addl
adc
test
and
push
in
push
inc
repz
jnp
mov
pop
pop
bound
sarb
pop
sub
js
mov
mov
mov
sub
cli
cltd
cwtl
cmp
mov
adc
or
xchg
and
pop
stos
mov
xchg
fists
xchg
call
or
pop
add
ret
adc
dec
push
xchg
mov
shrl
ja
jle
sub
lods
jnp
stc
sub
cltd
negl
push
add
add
inc
hlt
faddl
xlat
ss
push
lret
push
sub
mov
lcall
ror
mov
push
mov
into
inc
push
push
xor
adc
push
or
mov
test
cmp
jne
cmp
sbb
fiadds
nop
fcomi
in
popf
and
adc
outsb
pushf
cmc
scas
lret
mov
inc
lods
clc
sahf
mov
orl
mov
arpl
xor
xchg
imul
inc
jne
xor
rorb
push
cli
mov
add
xor
mov
nop
daa
dec
dec
cmpsb
cwtl
stc
pop
jmp
in
adc
adc
mov
sarb
sbb
iret
rcll
adc
imul
std
and
xor
clc
fldcw
popa
addl
xlat
nop
lret
mov
cmp
inc
out
je
rolb
cwtl
fldcw
xor
adc
add
mov
int
adc
out
xor
in
sbb
icebp
mov
cmp
test
inc
sub
push
adc
shrb
jge
cmpsb
pop
adc
mov
fisubs
shll
icebp
mov
stc
mov
out
clc
fadd
dec
jnp
pop
pop
fildll
enter
call
lcall
adc
add
sub
mov
push
dec
js
adc
mov
pop
pop
dec
pop
fsub
in
sbb
xchg
mov
ret
xchg
jbe,pt
hlt
lret
mov
lret
test
clc
and
mov
andb
and
add
je
pushf
insb
lret
les
test
fs
incl
in
lcall
jl
push
or
mov
punpckhdq
push
shrl
mov
mov
xchg
out
and
movsb
sbb
lock
lock
mov
push
std
jmp
fimuls
xlat
out
int3
mov
sbb
jge
outsb
daa
data16
call
je
loope
dec
sub
nop
sbb
call
sbb
jns
ljmp
lret
int
lret
lcall
subl
mov
std
orl
pop
nop
mov
mov
call
sub
mov
pop
sub
int
or
cld
cs
rcrl
lret
rclb
out
push
sub
xor
insb
inc
and
sbb
negb
test
push
mov
fistpl
inc
out
adc
dec
mov
jne
push
sbb
xlat
fisttpl
push
ret
mov
ficomps
xchg
xor
dec
lods
xor
stos
push
dec
xchg
cmp
dec
sub
push
mov
jmp
dec
mov
xchg
inc
sbb
mov
cli
nop
mov
out
cmpsb
mov
mov
divl
adc
and
push
xchg
push
xlat
xor
out
mov
dec
loop
loope
xchg
pusha
xor
xor
cmpsb
out
fsubrs
mov
mov
js
mov
out
shll
jle
mov
or
jmp
mov
scas
sub
fwait
sbb
jmp
and
mov
or
and
jb
lods
stos
mov
in
push
or
int
aam
cmp
xchg
mov
cwtl
scas
xchg
decl
ficoml
das
ror
jle
jl
nop
jbe
cmp
pop
mov
xor
mov
cmpsb
or
lock
push
xor
push
loop
add
dec
sahf
adc
mov
cld
ljmp
mov
inc
cmp
insl
clc
mov
cld
inc
push
or
mov
fistpll
xchg
sti
cli
aam
cmpl
sahf
sbb
es
jmp
jns
and
sub
xor
movsb
push
mov
out
loop
and
je
mov
mov
aaa
push
das
movsb
call
iret
sub
aaa
or
leave
jae
mov
shlb
sub
scas
lods
jbe
jbe
cmpsb
cmp
pushf
in
sub
mov
mov
call
xchg
mov
int
cmc
push
testl
aam
sub
push
cmpsl
or
in
cli
or
push
dec
mov
imul
push
mov
dec
fisttpll
pusha
or
cli
mov
xchg
or
xchg
pop
jo
and
xor
inc
adc
in
pop
sub
arpl
xchg
aas
sub
ljmp
loopne
sar
mov
push
xor
jne
test
lea
add
test
scas
jp
sbb
shll
push
fwait
adc
sahf
das
or
inc
push
mov
scas
aaa
test
notb
cmp
pop
mov
stos
sub
cmpsl
pusha
dec
call
cmp
mov
into
fisubrs
clc
cmp
jmp
das
mov
scas
invd
fcoml
lcall
std
sub
fisubl
add
xor
adc
rorl
or
sarb
adc
mov
stc
mov
or
lcall
pop
cmp
inc
or
rcll
aaa
cwtl
mov
std
mov
pop
pushf
leave
movsb
pop
mov
mov
out
test
pop
mov
imul
and
mov
or
fwait
mov
sub
xor
pop
sbb
lods
cmc
xor
xchg
outsb
repz
fmuls
dec
push
and
jmp
sub
cmpsb
mov
loopne
xchg
daa
dec
test
in
lcall
popa
fsts
push
mov
es
paddw
aam
mov
lods
sub
mov
cmp
jbe
xor
jg
cmp
xchg
or
mov
push
mov
daa
int3
insb
call
or
outsb
xlat
and
sub
jno
outsl
push
push
add
pushf
mov
lods
repnz
or
insl
inc
lahf
call
aaa
mov
mov
ljmp
push
icebp
mov
mov
hlt
cmp
cmp
jmp
sub
lods
in
adc
or
int3
inc
xchg
add
xchg
roll
enter
dec
jo
lahf
adc
push
push
inc
cmpb
scas
ret
jb
enter
sub
xchg
pop
imul
push
jge
enter
gs
fmul
adc
and
iret
sub
stos
cmc
and
insb
cmp
movsb
cwtl
icebp
xchg
movsl
xchg
jg
pusha
aaa
cwtl
jno
gs
sbb
push
lods
loopne
jmp
loopne
mov
mov
outsl
call
scas
jno
lea
je
loopne
push
fisttpll
cwtl
int
mov
or
jecxz
inc
test
mov
ds
lahf
dec
shlb
pop
cli
loopne
les
mov
sub
or
adc
in
mov
lret
cmc
rcl
push
dec
clc
call
mov
mov
pop
dec
sbb
testb
cmp
andb
enter
cmp
or
push
inc
inc
mov
call
xor
mov
inc
mov
in
dec
dec
test
or
inc
ss
inc
cmc
cld
mov
cld
dec
icebp
test
arpl
cmp
sub
fnstenv
push
and
or
dec
addl
mov
cmp
inc
sbb
clc
into
arpl
fsubs
dec
jne
add
fdivs
mov
iret
or
jge
stos
popa
ret
adc
mulb
jne
cmp
dec
push
in
mov
popa
not
inc
lds
lea
xchg
sbb
repnz
mov
mov
xchg
cmpsl
js
or
mov
mov
les
jg
cmp
mov
jmp
mov
ljmp
and
mov
jmp
cmp
xchg
outsb
sbb
mov
fsubr
and
lahf
lock
call
jl
xorb
fmuls
mov
and
mov
idivb
lods
push
fsubrl
lcall
mov
push
dec
arpl
or
popf
test
pop
or
scas
out
sti
xor
lock
stos
jmp
sbb
outsb
cmp
xor
cltd
push
mov
adc
mov
jne
clc
call
pop
outsl
adc
push
cmc
mov
push
cmp
sbb
movsb
ja
pop
in
jno,pt
test
nop
jmp
lcall
daa
stos
orb
pusha
xor
push
iret
and
jp
enter
les
xor
std
adc
stos
dec
jmp
mov
dec
sub
jp
cmovs
loope
add
std
and
xor
cwtl
in
pop
xor
pop
aas
icebp
mov
xlat
idivb
fidivrs
shlb
mov
mov
pop
jg
jmp
and
dec
outsl
inc
imul
cwtl
call
lcall
cmp
rcrb
and
fsubr
xchg
sub
adc
adc
addr16
enter
push
jle
dec
pushf
lods
push
sbb
testl
mov
or
pop
cs
mov
push
jns
gs
mov
and
jo
xchg
fbld
jno
or
or
sub
into
dec
cmp
inc
lret
and
cmp
pop
cli
cld
add
popa
push
pushf
fisubl
xchg
sarb
pop
cmpsb
insl
imul
xor
cmp
inc
enter
ficompl
xchg
push
cmp
push
jle
push
adc
into
call
dec
xor
mov
push
sarb
pop
roll
loop
fidivs
adc
mov
jmp
add
inc
jbe
imul
cmp
add
adc
enter
filds
sbb
pushl
test
mov
hlt
and
xor
xchg
in
fsubrs
sub
push
push
jne
lods
add
add
nop
sbb
inc
push
push
cmp
inc
add
cmp
rorl
dec
es
push
pop
ret
lds
dec
cmpl
ja
dec
mov
or
pop
adc
sub
insb
sub
fistpl
aaa
jmp
ljmp
pop
aas
fadds
sub
iret
lcall
shll
cvtpi2ps
jo
shlb
sti
mov
jp
xchg
idivl
dec
insl
lea
sub
ds
adc
sahf
xchg
data16
jp
push
jae
clc
mov
mov
out
xchg
push
adc
mov
cltd
in
xor
or
pop
nop
and
lods
js
outsb
cmp
leave
sub
out
mov
dec
mov
shl
mov
aas
cld
jne
cmp
jno
mov
sbb
and
sahf
xchg
sbb
push
jl
xchg
cmp
lods
leave
sub
adc
push
cmp
cmp
imul
js
testl
inc
or
lcall
punpckhdq
bound
in
mov
insb
push
sahf
cmpsl
xchg
scas
xorb
push
arpl
cmp
push
mov
or
adc
jecxz
mov
fucompp
mov
sub
or
inc
sahf
scas
pusha
jns
leave
cli
sub
test
scas
sub
scas
push
xchg
or
sbb
movb
imulb
int3
mov
ret
cmp
jmp
scas
push
mov
loop
lcall
fsubs
adc
loopne
mov
or
xchg
xchg
xchg
xchg
xor
add
sub
xchg
sbb
mov
scas
pop
pop
or
mov
cli
test
inc
mov
xchg
mov
xorl
adc
push
rcl
push
dec
fwait
imul
or
imul
repnz
mov
cmpsb
icebp
or
hlt
xor
dec
sbb
or
mov
sbb
popa
out
mov
ss
xlat
or
fldenv
xchg
loope
mov
fldt
mov
xor
scas
out
sar
data16
lret
outsl
sbb
rorb
dec
sbb
dec
out
push
xchg
lock
ja
out
andb
out
dec
adc
mov
dec
outsb
fcoms
adcb
ds
clc
imul
cli
pop
mov
pop
jp
sub
mov
lods
xchg
pop
inc
or
pop
enter
pminub
push
fistps
test
int
and
cmp
insl
or
or
sbb
cmp
xchg
inc
sarb
or
fnclex
push
hlt
mov
dec
adc
movsl
das
adc
cmpsl
sub
ja
adc
popl
xchg
shll
call
outsb
andl
or
cld
adc
lahf
mov
into
int
xchg
mov
lret
aaa
add
sub
add
mov
jg
lods
and
sbb
lods
jmp
mov
lret
push
cmp
dec
adc
sub
sub
sub
in
jo
lcall
pop
xchg
dec
cltd
out
pop
mov
cmp
int3
in
and
loop
dec
aas
sub
mov
scas
mov
hlt
mov
add
lock
je
add
jl
mov
cmp
xchg
mov
pop
and
cld
xor
push
fwait
inc
jo
sbb
mov
mov
mov
adc
inc
or
mov
sub
mov
mov
mov
out
adc
shll
jl
cmp
ss
sbb
int3
rolb
fldenv
fcmovnbe
gs
ds
or
mov
dec
push
dec
hlt
pop
hlt
test
sbb
test
xchg
xchg
xor
sbb
loopne
movsb
mov
push
sub
orb
js
sbb
scas
cmp
pop
shrb
outsb
xchg
in
add
scas
in
ss
test
cli
sub
sub
jl
and
aam
xor
dec
out
push
out
xor
xor
enter
lret
or
adc
xor
xchg
imul
lods
int3
mov
mov
cmp
mull
pop
cmp
pop
enter
bsf
sbb
mov
mov
lret
mov
ss
cmp
fucomi
js
repz
jnp
pushf
ret
loopne
ret
lret
movsl
inc
test
xor
pop
mov
test
or
sbb
mov
adc
addr16
into
fisttpll
insl
pop
inc
push
mov
fbld
jmp
or
repnz
outsl
aam
adc
decl
je
lret
stos
rcl
outsb
cmp
xchg
addr16
int3
or
mov
inc
bnd
in
popf
xchg
xchg
or
or
adc
and
cmp
icebp
sbbl
cli
xor
mov
lock
sub
lret
or
popl
mov
int
mov
and
or
mov
mov
loopne
mov
and
daa
test
int
outsl
fbstp
mov
adc
fidivrs
inc
add
inc
ljmp
in
dec
push
inc
or
popf
jns
jecxz
jle
in
inc
adc
lret
and
insl
int
xchg
lods
cmp
xchg
mov
xchg
and
xchg
or
sbb
aaa
lods
out
and
add
lds
aas
test
enter
mov
mov
inc
jecxz
test
fs
dec
push
cmp
icebp
scas
ret
std
xor
or
mov
cmp
sub
ror
das
and
dec
cmp
xor
movsb
shll
js
mov
fprem
push
mov
sbb
test
call
sbb
shll
shr
mov
in
out
push
cmp
fdivs
pop
loope
mov
test
xchg
addr16
js
jmp
rcrb
mov
xor
xor
cli
inc
mov
sarb
mov
mov
ss
jecxz
push
jmp
cltd
pcmpeqb
sbb
ret
push
daa
out
cmp
cmp
jae
mov
icebp
dec
mov
inc
pop
movsb
cld
fdivs
aas
mov
jbe
js
push
popa
fadds
mov
clc
jb
pop
stos
inc
sub
sub
inc
pushf
fcoms
ljmp
out
test
sbb
and
sub
jecxz
pop
cmp
in
or
test
dec
mov
sub
pop
sbb
inc
or
cmp
dec
lods
jae
stos
fiaddl
popl
outsl
cmpsl
inc
dec
call
or
icebp
mov
push
clc
bound
pop
pop
daa
dec
jb
ds
adc
stos
shl
jmp
fnstenv
mov
out
or
sbb
sbb
and
xchg
imul
push
jae
mov
adc
mov
outsb
mov
data16
popa
stos
outsl
sbb
mov
push
xor
scas
mov
int3
arpl
mov
cmp
clc
xchg
fstpt
mov
dec
sbb
mov
mov
popa
fwait
outsl
mov
aaa
fstp
sub
les
repz
enter
mov
cmpsl
xchg
pop
mov
add
fldt
push
cli
xlat
fs
xchg
dec
pop
cmp
iret
mov
int
sub
pop
adc
insb
cmp
ret
and
mov
in
ja
or
lods
xor
dec
xchg
sub
out
mov
subb
ret
cmp
lret
std
rorl
push
orb
sub
mov
pop
gs
dec
outsb
mov
test
cmpsb
scas
inc
cmp
sbb
mov
popa
adc
lods
outsb
data16
cmp
adc
cli
bound
lahf
jp
and
dec
ljmp
push
nop
sub
inc
mov
mov
shlb
sub
sub
jmp
adc
mov
inc
jnp
inc
jl
mov
jecxz
or
hlt
out
lods
push
jne
or
dec
inc
outsl
dec
sbb
mov
mov
and
movsl
add
ja
add
cld
or
sbb
stc
push
xchg
in
cmp
enter
insl
push
adc
pop
sti
xchg
lods
cli
cltd
inc
adc
arpl
ss
and
sub
sbb
pop
out
je
lcall
mov
dec
insl
cmp
dec
inc
sbb
scas
out
pusha
lret
ret
sbb
shrl
inc
clc
scas
sub
or
loopne
iret
imul
dec
test
dec
clc
mov
dec
sbb
aas
lods
lret
dec
dec
jb
addl
push
dec
fdivrs
scas
enter
and
mov
jne
cmp
pop
fs
adc
mov
sbb
lret
leave
lods
lock
icebp
sahf
stos
add
pop
mov
mov
sub
stos
addb
xchg
loopne
adc
sbb
sbbl
adc
xor
fadds
and
test
repnz
ret
adc
gs
icebp
bound
xchg
lods
push
or
cmp
mov
ja
or
daa
ret
sub
inc
outsb
out
mov
pusha
cs
xor
enter
push
dec
push
pop
pop
jp
inc
loopne
xchg
out
ljmp
and
gs
xor
imul
inc
aas
sbb
icebp
xchg
mov
arpl
and
mov
dec
les
test
cmp
sub
inc
jo
jg
pop
add
adcl
icebp
popf
inc
icebp
popf
ja
xchg
pushf
fisubrs
push
leave
aas
loope
clc
mov
sub
outsl
lahf
pop
and
cltd
mov
or
fistpll
xchg
adc
les
mov
insl
arpl
push
ljmp
pop
mov
adc
jp
adc
pop
std
xor
jge
movsb
lods
sbb
fsubl
pushf
icebp
subb
scas
cmc
xchg
adc
mov
jmp
xor
or
mov
aas
js
dec
shll
adc
repnz
stc
aaa
mov
xor
rorb
in
pop
push
les
add
aas
fcomps
data16
scas
dec
int
pusha
add
sub
sub
fisubs
dec
rsm
jnp
aas
dec
int
in
cmc
jmp
cld
lods
lahf
mov
xchg
push
push
push
test
mov
les
mov
jg
pusha
mov
sbb
fstl
rcl
lods
fdivrs
enter
jae
aaa
xor
les
pushf
lea
or
add
mov
xor
cmp
movsl
outsb
or
mov
inc
add
push
outsl
inc
push
xchg
adc
cmp
push
jae
mov
mov
mov
inc
call
sbb
rolb
mov
fadds
mov
mov
loopne
push
jl
sbb
scas
or
xor
pop
cwtl
aaa
dec
lods
xchg
jno
mov
mov
inc
ret
mov
xor
pushf
or
dec
scas
pop
sub
xor
cwtl
lahf
xor
pop
add
sub
imul
xchg
rolb
pop
and
shrd
repnz
dec
pop
xchg
dec
cmp
inc
dec
shll
std
xor
sub
rcll
sub
dec
ret
sub
repnz
mov
adc
test
jnp
aam
mov
je
ficompl
notb
orb
sbb
pop
sti
outsl
es
repnz
shl
daa
loopne
or
mov
mov
adc
sub
xor
push
scas
pop
xchg
fwait
jb
sub
xor
or
or
lret
sbb
js
movsb
ret
mov
dec
add
stos
das
or
mov
dec
cli
sub
push
mov
push
iret
andl
call
dec
pop
cmc
cmovae
mov
xor
cmc
mov
aad
add
call
loope
call
push
push
dec
movsl
or
std
dec
outsb
fucomp
fwait
sub
mov
push
sub
test
in
lahf
lcall
scas
fldl
lret
cli
fmul
or
jae
fwait
add
xor
dec
leave
mov
je
pop
pop
lahf
adc
push
mov
das
pop
stos
in
dec
adc
negb
lcall
mov
adc
insl
push
or
cmp
inc
mulb
sbb
sahf
add
dec
dec
mov
daa
jno
inc
les
or
dec
mov
jecxz
inc
call
mov
mov
or
push
test
lcall
mov
or
and
idivb
int
and
movsl
cmp
pusha
rorl
sbb
scas
mov
mull
out
inc
clc
out
mov
rorb
xor
mov
test
enter
outsl
fimuls
sbb
adc
mov
pusha
test
lock
ds
mov
mov
loope
cmp
divb
pop
xchg
imul
cmpsb
scas
jns
add
daa
mov
mov
push
orb
ja
lea
pop
mov
shrb
dec
insl
or
xlat
mov
xlat
inc
push
mov
dec
test
fldcw
xchg
mov
sti
jnp
adc
movsl
xor
adc
negl
pop
scas
insb
test
lcall
outsl
add
test
loope
in
jbe
mov
mov
pop
stos
dec
sub
or
push
mov
test
sbb
push
test
mov
push
lock
ljmp
mov
test
fmull
mov
movsl
lret
mov
cmp
add
dec
fwait
dec
andb
test
cmp
xchg
clc
dec
pop
and
inc
pop
pop
add
loope
mov
fwait
mov
mov
cmp
sbb
daa
insb
add
xor
inc
sub
mov
movsb
and
out
and
or
in
cs
jge
cmp
cli
dec
jne
mov
repnz
cmp
in
mov
push
pushf
xor
mov
iret
test
mov
sbb
mov
dec
mov
cmpsl
sub
sub
call
aaa
jns
adc
sub
jmp
int3
add
dec
mov
push
mov
cmp
mov
test
inc
daa
mov
and
sbb
mov
inc
adc
enter
call
pop
lock
sarl
sub
shll
and
test
nop
pop
dec
in
sti
xchg
test
adc
sub
out
cmp
or
lods
add
movsb
iret
adc
pop
sub
shll
ficoml
lcall
mov
out
cltd
repnz
pusha
fnsave
sbb
lock
and
into
lods
fisubrl
jg
adc
ljmp
lcall
mov
pop
jnp
sti
jb
pop
inc
adc
pop
sbb
aaa
adc
aaa
mov
dec
push
xor
pusha
or
mov
cmc
out
xchg
dec
dec
xchg
mov
adc
inc
pop
and
dec
lcall
mov
mov
xchg
adc
in
mov
dec
rcr
ret
mov
xor
mov
fsts
std
daa
jecxz
sahf
xchg
mov
call
ret
and
pop
cli
outsb
sbbb
sbb
lahf
aad
lds
push
pop
xor
hlt
psubd
addb
sbb
xchg
pop
shr
sbb
aaa
sub
jmp
pop
mov
popf
xor
xor
pop
jg
mov
xor
fmul
dec
or
mov
sub
loope
mov
adc
lahf
rcrl
je
imul
xor
mov
mov
test
mov
ljmp
addb
test
cmpsl
mov
mov
xchg
push
call
jb
mov
out
pop
cmpb
loop
mov
mov
das
push
pop
aas
lret
push
or
sbb
or
push
cmp
cs
lea
mov
or
in
adc
mov
rolb
xor
mov
adc
jae
mov
hlt
mov
or
imull
lods
out
scas
xor
enter
stos
jcxz
push
jge
xor
jg
cltd
push
sub
jp
add
ret
pop
mov
sbb
adcl
repnz
int3
cmpsl
xchg
decl
pop
mov
lahf
je
dec
mov
scas
mov
cld
cmp
imul
ss
add
rolb
shrb
lret
gs
mov
mov
ja
fidivrl
and
test
jae
sbb
lods
mov
in
xchg
in
dec
ret
cmp
inc
inc
scas
dec
in
mov
cmp
scas
mov
mov
insl
xor
push
repnz
inc
cwtl
sub
imulb
out
mov
loop
xorb
xor
mov
scas
xchg
leave
xor
xor
ret
or
cld
sbb
and
mov
rclb
jno
fwait
lcall
xchg
add
and
insb
sbb
adcl
hlt
dec
push
cwtl
xor
into
add
pop
imul
test
test
dec
cmp
mov
test
in
ret
xlat
push
jno
in
repz
dec
xorl
cwtl
cwtl
pop
pop
mov
lea
cmpsw
pop
scas
movsl
adc
ret
daa
test
nop
sbb
jp
popf
movsl
push
jp
pop
shlb
jne
push
push
push
inc
lods
cmc
or
mov
xorb
js
sub
incb
ss
mov
sbb
incb
xor
mov
jnp
loop
and
mov
test
sbb
ds
push
es
push
cmp
clc
lods
ret
popa
call
cli
cltd
mov
mov
pop
jge
add
bound
adc
mov
xorb
popa
out
sub
enter
push
mov
sbb
mov
scas
jmp
hlt
jno
mov
xor
sub
push
scas
xor
es
mov
mov
xchg
je
out
bound
lods
cwtl
cltd
mov
in
dec
es
decb
movsl
or
adc
fisubrs
jmp
pop
out
cmp
out
push
pop
pop
jbe
xor
js
hlt
mov
and
pop
inc
push
xor
imul
mov
cwtl
add
fsubrl
push
cmp
cld
adc
xchg
cltd
popf
das
cmpsl
imul
mov
ljmp
ja
lods
subb
or
push
mov
sbb
mov
jge
lods
adc
sbb
xor
dec
add
cmp
fdivrs
mov
jl
mov
add
ljmp
ss
cli
dec
sahf
ret
xchg
sbbb
sbb
lea
mov
inc
xchg
inc
mov
sbb
cmp
scas
inc
fsubrl
sub
repz
pop
rclb
ljmp
cmpsb
dec
std
insl
mov
jg
mov
repz
fdivs
popf
arpl
xchg
push
push
or
pusha
dec
adc
std
stc
ja
cmp
push
push
sbb
mov
dec
fsubs
out
or
in
movsl
adc
adc
pop
testb
ret
xchg
xchg
subb
insb
cmpsl
ss
sarb
jecxz
test
jmp
mov
xchg
dec
mov
and
cs
sbb
or
and
aam
dec
sbb
cmpsl
rolb
sbb
call
xor
and
push
mov
ss
or
js
mov
bound
xor
imul
cmp
jp
sub
out
xor
push
enter
scas
mov
aad
sbb
pop
xchg
data16
push
fstpl
jecxz
cmp
test
test
xchg
sbb
lock
push
mov
sarb
push
rcl
cmp
mov
sub
mov
out
movsl
testb
add
js
cmpl
jp
pop
gs
add
pop
and
jne
test
scas
cmpsl
pop
or
test
sub
inc
inc
xor
in
cmp
sub
data16
mov
js
stos
aam
stos
fucomip
jl
xor
decl
mov
xor
sub
lea
xchg
adc
xor
mov
mov
push
cmpl
dec
std
dec
inc
js
cmc
adc
imul
pop
fildll
sahf
mov
cmp
mov
cld
jb
xorb
adc
jl
jg
cmpl
sti
cmp
jmp
jecxz
xor
mov
dec
add
addb
cwtl
cmp
lods
push
mov
ret
xor
cli
imulb
test
pop
or
push
mov
push
inc
repz
sub
cmp
out
les
or
cld
pop
std
leave
push
cmp
clc
jge
pop
adc
cltd
mov
lods
idiv
daa
orl
cltd
jmp
out
adc
int
lods
push
pop
fadds
nop
fwait
gs
leave
mov
addb
cli
add
dec
rcl
inc
xchg
jnp
sbb
pop
jle
sbb
aaa
shll
movsl
in
mov
jmp
pop
in
out
pop
arpl
dec
fwait
rol
pop
adc
lods
or
shrb
or
and
mov
adc
lods
movsb
mov
fcompl
fiaddl
and
or
lret
repz
scas
mov
add
mov
and
ja
aas
sbb
shll
push
rcrl
out
jl
aaa
insb
inc
int3
add
cld
js
and
mov
dec
pop
sbb
subb
int3
scas
xchg
push
xlat
dec
dec
jne
cmp
cwtl
fwait
gs
xor
mov
add
das
jp
push
outsl
xchg
or
ja
pop
lret
mov
cmpsl
cmp
rorl
movsb
stos
mov
xor
dec
push
push
push
or
inc
dec
rcrl
ljmp
sub
jo
mov
outsl
xchg
mov
and
pop
sahf
cmpsl
or
mov
mov
adc
mov
dec
push
mov
stc
stos
sbb
mov
ds
insl
mov
mov
cwtl
push
gs
inc
dec
je
or
adc
or
jmp
fldcw
loopne
jp
out
mov
jmp
mov
xchg
mov
outsb
mov
dec
push
repz
mov
mov
cld
jp
push
sbb
pop
jg
lods
cs
icebp
adc
addl
mov
sbb
lods
clc
fwait
cmc
insl
adc
lods
pusha
xor
lods
jg
add
bound
adc
pop
negb
fists
mov
scas
push
mov
mov
push
push
mov
imul
xor
lret
pop
xchg
and
jecxz
insl
daa
insb
in
mov
mov
test
notb
dec
cmpsl
mov
or
sahf
xchg
push
dec
shl
inc
in
nop
mov
test
sahf
js
xorl
call
mov
gs
xor
mov
adc
jl
mov
repz
data16
mov
sub
mov
dec
loopne
jecxz
pop
movsb
xchg
clc
mov
mov
jb
sub
push
ds
jp
cs
adc
cmp
stc
ret
inc
aas
xchg
shl
mov
pushf
cmpb
and
cmp
or
mov
mov
dec
push
subb
ss
enter
push
adc
inc
xchg
js
mov
adc
push
outsl
clc
adc
stc
icebp
les
push
scas
or
adc
les
jns
or
cmpsl
sub
out
xor
dec
xor
xor
out
adc
and
mov
mov
sub
or
add
push
je
or
xor
pusha
lods
mov
loop
dec
pop
inc
xchg
stc
adc
cwtl
dec
add
fisubs
or
std
jae
mov
adc
mov
aam
sbb
nop
cmp
sahf
fisttpll
inc
jbe
mov
rolb
mov
cs
mov
stc
mov
ret
lds
or
rcll
and
pop
shll
adc
lahf
xchg
in
xor
sbb
and
xchg
push
aas
adc
pop
sbb
push
loope
mov
mov
adc
into
fisubrl
call
mov
push
xchg
inc
daa
cld
pop
mov
push
jmp
adc
cmp
lcall
stos
push
nop
rol
mov
inc
test
add
mov
mov
xor
mov
inc
cmp
lret
pop
mov
mov
and
xor
in
btsl
lds
cmp
fistl
fisttpl
cmp
jmp
fmulp
into
sub
pop
aad
add
in
cmp
or
or
sar
xlat
sub
xchg
jmp
ds
cmpsb
ljmp
pop
mov
rclb
mov
orl
push
lea
sub
mov
xor
push
ucomiss
cmpsl
mov
outsl
add
fadds
cmpsb
mov
pop
repnz
push
inc
mov
mov
mov
mov
clc
daa
scas
cmp
mov
arpl
rorb
mov
out
arpl
loopne
fwait
aad
in
cmc
jo
jl
jns
xor
in
lea
pop
adc
aas
pusha
aaa
mov
xor
into
push
int
jecxz
insb
jne
idivl
sub
xchg
push
popa
rorb
fisttps
jae
xor
jmp
arpl
aas
inc
js
cwtl
mov
jmp
repnz
xchg
test
pop
jmp
ss
sti
xor
jge
imul
sbb
inc
ret
cmp
xchg
je
add
cwtl
and
adc
outsl
sub
leave
xor
pop
mov
adc
jp
ljmp
popa
js
inc
test
enter
fisubrl
in
aad
jo
popf
aas
cmp
clc
xchg
sbb
mov
lds
iret
int
jb
stos
dec
movsb
jno
test
lcall
mov
fsubr
lret
imul
inc
cmp
sub
xchg
cltd
mov
sub
dec
and
fdivl
jnp,pt
dec
and
cwtl
push
cmp
sbb
ss
int
les
ss
or
add
mov
pcmpgtd
les
daa
scas
dec
mov
xchg
cmp
xor
shrb
aam
call
ret
cli
addr16
das
fcom
rclb
dec
push
cmp
cltd
mov
lock
rorb
push
xor
dec
fisttps
imul
outsl
mov
mov
pop
or
push
xchg
ret
push
setb
sbb
dec
cltd
movsb
in
push
lahf
aaa
xor
sub
pushf
stos
xchg
or
jnp
cwtl
inc
mov
or
int
jo
mov
lods
jl
leave
dec
fwait
sbb
lcall
icebp
xor
int
subps
dec
stos
out
lret
addr16
or
mov
int3
dec
mov
xchg
push
int
sbb
pop
lcall
adc
mov
xchg
cmp
mov
cmp
jle
icebp
cli
lea
push
add
inc
jp
test
scas
js
adc
lods
addl
roll
adc
xor
push
in
jp
jb
mov
lcall
loop
xchg
dec
lcall
xor
xlat
js
iret
scas
lods
mov
fs
add
lods
jge
push
mov
xor
stos
mov
aam
fcoml
aaa
fcomps
mov
jbe
iret
inc
cmc
rcr
shll
sbb
xchg
xchg
or
xchg
xchg
arpl
test
xchg
xchg
out
jg
push
stos
addl
mov
inc
inc
jne
dec
pop
cld
dec
sbb
shlb
cmpl
arpl
add
and
aaa
lret
sti
fwait
xchg
ljmp
in
fwait
mov
push
jg
xor
xor
adc
mov
push
loopne
push
inc
popa
xchg
mov
push
fsubrl
sub
std
mov
repz
pop
add
lahf
gs
dec
mov
imul
pop
jo
cmp
and
lods
mov
xchg
and
js
fdivrl
lods
movsb
addl
adc
leave
imul
cmp
rcr
pop
into
out
stc
icebp
cltd
push
xor
aam
push
sbb
push
sub
aaa
and
and
or
loop
aam
fildl
sbb
sub
adc
mov
jns
mov
sub
pop
test
sub
setp
stos
les
sarl
inc
add
in
or
clc
add
sbb
dec
or
icebp
andb
pusha
loopne
in
jne
mov
xchg
loopne
ror
jmp
out
and
mov
mov
movsb
xor
mov
pop
jns
int3
fbstp
sbb
pop
inc
test
loopew
sahf
lcall
mov
into
mov
das
dec
adc
insl
bound
orb
js
sub
stos
mov
adc
roll
leave
in
sbb
repnz
lret
cmc
cmp
xchg
mov
daa
and
dec
pop
call
daa
jno
xor
int3
mov
inc
push
sub
xchg
addl
jb
loope
in
imul
cmp
xor
popa
std
in
jnp
stos
enter
rolb
push
subl
xchg
xchg
jns
mov
cmp
lds
push
cmp
fs
xchg
mov
cli
rcrb
mov
shrb
mov
mov
mov
mov
sbb
fidivrl
inc
pop
daa
pop
push
sbb
xchg
mov
pop
sbb
mov
stos
fiadds
lahf
sti
push
out
cmp
inc
push
mov
call
dec
mov
xor
ret
dec
cmp
pop
popa
push
repz
or
je
push
pop
and
repnz
out
or
repz
dec
imul
movsl
stc
pop
xchg
std
test
ljmp
ss
xchg
or
xlat
mov
dec
mov
iret
daa
mov
push
fdivrs
cld
clc
rorl
jp
sahf
nop
cld
jns
mov
adc
jnp
shrl
ja
xchg
test
push
sub
or
mov
add
mov
dec
in
inc
push
pop
mov
outsb
dec
push
imul
sbb
loop
dec
shrl
js
stos
mov
and
ficomps
sub
fbstp
jnp
or
mov
je
and
in
out
sub
xor
cmpsb
ds
mov
lcall
cmp
in
adc
les
gs
pop
or
in
sbb
mov
cmp
in
mov
sbb
ret
in
add
mov
adc
punpckhdq
aam
add
fbstp
pop
push
mov
inc
mov
jo
xchg
adc
shrl
hlt
arpl
push
cmp
jle
mov
push
sti
dec
nop
push
or
test
sbb
rorl
sarb
in
inc
mov
js,pt
xchg
iret
jp
aaa
xor
cmp
pop
xor
cli
enter
jl
cmp
inc
cmp
xchg
dec
sub
ret
sbb
rcrb
shr
jb
ljmp
aad
lock
pushf
dec
call
push
mov
mov
sbb
dec
cmp
js
ret
push
cld
bound
ficompl
fldt
or
lods
jno
add
or
push
cmpsl
outsb
cmpsb
in
mov
hlt
aaa
mov
lea
and
ret
mov
push
sarb
ljmp
int3
adc
sub
stos
mov
adc
sbb
inc
outsl
push
inc
fs
sbb
je
hlt
int3
push
adc
outsb
loope
dec
or
outsl
rorb
mov
xchg
test
push
push
js
mov
add
jo
in
pop
icebp
mov
outsl
pushf
sub
and
mov
outsb
subb
lcall
shll
cld
adc
cmp
scas
push
idivl
in
mov
dec
icebp
add
rcrb
addr16
mov
xchg
push
or
lods
dec
pop
outsb
out
mov
or
dec
lods
jecxz
les
jp
xor
pop
inc
sub
ss
adc
outsl
fwait
jg
add
adc
or
test
inc
out
xchg
jae
inc
sub
fidivrs
enter
dec
imulb
jne
popa
adc
xor
mov
lods
subb
add
out
sar
xchg
int
rorl
mov
jns
xor
test
dec
lret
cmp
sbb
loopne
mov
adc
mov
sbb
aas
add
and
sub
jne
dec
cld
scas
clc
jl
sbb
das
mov
push
lods
aas
js
push
or
les
cld
ljmp
mov
clc
imul
mov
cli
in
aam
mov
mov
xor
xchg
dec
xor
arpl
shll
fidivs
imul
dec
sub
shlb
xor
xchg
mov
jg
add
sub
test
dec
mov
test
lahf
sbb
ds
sbb
fcomps
andl
orl
xor
rcl
push
dec
ror
mov
and
ret
jne
ss
outsb
int3
add
rcrb
adc
enter
pusha
cmpl
mov
ret
iret
stos
fidivrl
sbb
loopne
cld
les
ss
lods
xchg
cmp
fmulp
dec
insl
or
fwait
push
mov
in
enter
test
mov
sub
pop
in
cmp
movsb
push
push
xchg
or
lcall
daa
orl
or
scas
xor
mov
test
aaa
cltd
fidivrl
push
mov
cmc
push
jbe
insb
push
jmp
cltd
and
in
subl
out
pop
js
sub
loope
int3
sbb
and
jns
mov
das
sbb
push
ret
scas
mov
mov
xor
mov
mov
inc
divb
xor
out
fisubrl
mov
mov
int3
ja
cmp
jo
hlt
adc
mov
mov
jmp
enter
mov
test
xchg
push
aaa
cmp
or
into
mov
pop
adc
in
cli
lret
in
cmp
adc
xor
jp
jl,pn
ljmp
pop
cmp
mov
add
dec
mov
cs
cld
fldenv
shlb
lret
adc
xor
mov
fsubrl
adc
sbbb
xlat
hlt
dec
add
fildll
mov
ds
cmp
push
sbb
enter
daa
fsubr
dec
and
sub
xor
adcb
sahf
sti
mov
or
icebp
cmp
out
mov
lret
jno
pushl
cmp
inc
cli
or
add
pop
scas
adc
aas
fs
popf
mov
sub
adc
and
loope
sahf
clc
les
mov
mov
push
jp
aad
test
test
push
mov
imul
int3
int3
hlt
and
jns
mov
mov
jno
push
scas
sub
cmp
mov
rcrb
mov
call
ret
sub
enter
nop
aaa
mov
pop
mov
mov
pop
mov
or
lds
mov
lahf
xor
xor
or
aam
es
insb
and
mov
in
add
test
mov
jo
inc
test
out
push
push
pushf
mov
test
xor
mov
dec
inc
sub
push
lea
mov
addr16
mov
dec
lret
icebp
push
mov
out
orl
data16
fcmovu
mov
sbb
test
push
mov
mov
inc
enter
xor
imul
mov
out
mov
add
cmp
cmpl
imul
cmc
xor
popf
test
lock
sub
lock
cmp
or
adc
jp
movsl
je
sub
sbb
add
nop
pop
pop
ja
mov
xor
scas
out
scas
or
xchg
lcall
and
insl
dec
cmp
cli
test
add
jb
jp
nop
sar
cmp
and
or
dec
cmpb
sti
sub
ljmp
dec
or
mov
push
sti
mov
adc
pop
cmp
lcallw
scas
sbb
mov
add
jne
push
lds
inc
mov
xchg
rorl
jmp
lret
xchg
jmp
sbb
div
bound
push
pop
stos
inc
sub
in
mov
adcb
lea
addb
jbe
sub
dec
clc
and
pop
pusha
xchg
mov
stos
clc
andl
push
mov
movsl
fbstp
dec
mov
test
mov
add
xlat
jl
test
cmpsb
imul
loop
cmpl
js
pop
add
and
nop
xor
jmp
mov
filds
mov
or
rclb
or
andl
mov
cmp
pop
push
and
bound
cmpb
jbe
stos
movd
cmp
fimuls
jge
test
xchg
xor
in
mov
cvtps2pi
push
cli
inc
call
sub
jmp
push
test
enter
repnz
xor
decb
pop
push
insb
jns
adc
push
pop
inc
and
enter
cmp
js
or
std
scas
clc
insb
cli
and
push
mov
jmp
adc
sbb
xor
xchg
sbb
and
test
push
or
or
outsb
mov
xor
mov
mov
dec
pop
inc
cmp
mov
es
jno
cmp
stos
mov
loope
into
inc
jle
sub
lea
test
cmp
or
xchg
mov
pop
mov
cmpsb
mov
and
shrb
out
cwtl
or
ficoml
jl
cmp
test
das
call
testb
xchg
fistl
sbb
call
pop
pop
out
mov
sbb
inc
in
xor
dec
add
jb
cmpsl
push
mov
nop
stos
ss
mov
cmp
xor
xchg
adc
or
sub
xchg
jno
cmc
xchg
mov
cli
xchg
or
lods
lock
mov
rcrb
cli
or
repnz
mov
imul
hlt
mov
cli
pop
cld
or
cltd
loop
and
mov
jnp
hlt
lods
pop
sarl
cltd
jg
or
mov
in
mov
ds
xor
out
jmp
mov
inc
add
lret
xor
mov
rorb
adc
aas
push
mov
lret
dec
jnp
sub
xor
fs
mov
adc
jnp
jbe
cmp
xchg
mov
dec
hlt
addb
jge
sbb
mov
jns
fldt
and
nop
pushf
int3
pop
jp
dec
js
icebp
xchg
orl
pushf
mov
stos
mov
cmp
push
lcall
outsb
add
div
mov
push
push
or
push
or
xchg
mov
jecxz
scas
mov
xchg
ja
and
push
lds
sub
jmp
sbb
pop
jns
sub
xchg
mov
mov
sub
movb
lahf
mov
jnp
out
cltd
decl
scas
pop
ds
mov
or
xchg
idivb
mov
cli
dec
or
movsl
mov
test
add
lcall
sbb
mov
enter
rcrb
jne
push
adc
inc
mov
sub
data16
mov
mov
add
sbb
inc
cmp
rclb
out
jecxz
ret
call
sbbb
pop
pushl
add
pop
rdtsc
mov
imul
mov
jns
adc
stos
je
out
gs
pop
popf
mov
sar
dec
mov
mov
adc
adc
dec
dec
dec
mov
or
aad
lret
jle
push
fstpl
jae
add
loopne
mov
aad
int3
push
outsl
add
mov
call
mov
push
pop
adc
in
add
lcall
adc
popf
repnz
xchg
repnz
xchg
jns
dec
int
mov
pop
ret
cmp
incl
jo
ljmp
test
push
jp
lahf
adc
test
movsb
sub
push
ds
sub
popa
dec
cwtl
xchg
jae
jg
mov
lods
js
stos
dec
adc
add
pop
lret
lds
add
and
or
pop
push
or
fldenv
sub
or
dec
repz
jbe
push
arpl
out
js
pop
lods
js
push
movsl
dec
xor
mov
stos
test
jecxz
pop
inc
mov
sbb
mov
jg
popa
sbb
addb
jnp
ss
sbb
adc
aaa
enter
out
pop
pop
jno
or
mov
loope
aad
ja
add
fmul
sub
push
pop
pop
in
sub
inc
and
lret
xchg
idivb
icebp
aam
mov
fisttps
pop
js
xlat
test
sbb
loopne
push
mov
sub
adc
pop
pop
dec
fdivrs
jge
sbb
jp
xor
xor
adc
or
std
add
outsb
mov
jne
cltd
and
sti
lds
push
mov
dec
xchg
sbb
push
in
pop
aad
imul
fldenv
or
cmp
test
jo
sbb
push
shll
cmp
pop
mov
dec
sti
jbe
mov
into
dec
sbbl
fwait
dec
int3
xchg
adc
pushf
mov
aas
dec
jo
pop
push
fnstcw
imul
mov
ja
insl
jg
sub
mov
sub
mov
xchg
fnstcw
sub
sub
sub
dec
rcrl
adc
push
push
xchg
xchg
sbb
int3
bound
out
xor
mov
xchg
xor
fsts
orl
pop
mov
xchg
call
mov
loope
enter
repz
fisubrs
pop
jno
fdivrs
mov
push
mov
das
jl
addb
sbb
dec
js
aaa
mov
push
xor
mov
ja
out
aam
xor
adc
push
in
in
std
adc
lds
mov
mov
inc
dec
mov
adc
xchg
jp
jo
sarl
dec
or
cwtl
pop
sub
cwtl
push
cmp
jnp
cmp
fcomip
repnz
call
fisubs
test
xor
loop
sbb
push
mov
jbe
add
inc
cld
mov
rorb
dec
push
lcall
jae
test
popf
mov
add
js
xchg
iret
stos
dec
jmp
bound
or
dec
mov
sub
dec
lret
cmpb
gs
jle
mov
repnz
add
mov
mov
mov
push
aaa
aad
idiv
fnstsw
daa
mov
stos
jnp
or
mov
xchg
daa
icebp
loop
or
push
jne
sub
or
mov
jge
int3
inc
dec
pop
dec
andb
enter
lret
push
adc
orb
mov
sahf
lret
mov
mov
mov
jns
fisubl
movsl
jg
xchg
push
sub
mov
xchg
fldt
std
jmp
dec
sti
add
mov
aam
cmp
imull
fisttps
int
xor
sub
repnz
jae
mov
js
mov
inc
push
sbb
js
push
cmp
xor
mov
cmc
mov
jl
jg
enter
ret
add
mov
arpl
nop
or
adc
js
add
rorl
repnz
orb
push
xchg
sub
addb
push
lods
or
push
fs
mov
jnp
inc
addb
jp
sub
ret
repnz
les
sub
pop
mov
lock
adc
xchg
sbb
dec
fimull
arpl
jp
adc
push
sbb
clc
adc
pop
jl
pusha
repz
repz
sbb
pop
int3
out
nop
outsl
cmpsb
inc
popa
cmc
inc
and
inc
stos
mov
into
pop
jg
mov
mov
inc
repnz
jl
mov
push
inc
xchg
pop
das
adc
xorb
notb
adc
xchg
adc
fwait
mov
test
jge
fcomps
in
push
test
insl
aam
mov
std
lods
stos
xchg
std
aad
or
xchg
divb
sub
push
add
sbb
sub
dec
xchg
lods
xor
mov
sahf
bound
sub
adc
lret
jnp
cmp
cmp
call
aas
fdivrs
shll
paddd
gs
ret
or
pop
mov
sub
cmp
andb
es
push
sub
outsb
inc
cmpl
negl
pushf
pop
xor
mov
dec
mov
enter
iret
shlb
pop
mov
rolb
dec
or
not
xor
dec
sbb
fisubrl
popa
mov
pop
and
mov
push
lret
sbb
inc
add
js
pushf
push
or
lea
push
fisubl
adc
jns
and
loope
mov
jg
mov
add
cwtl
dec
dec
or
dec
pop
jno
nop
push
dec
push
cwtl
add
gs
mov
mov
push
imul
mov
xor
jle
or
lret
test
lret
fwait
jecxz
test
mov
jnp
push
pushf
jmp
enter
cmp
lar
push
outsl
lret
adc
sbb
loope
icebp
movsl
and
sub
add
inc
aam
sbb
popa
imul
ljmp
xchg
adc
sub
insb
call
ja
jp
leave
in
or
test
fnstenv
cmc
mov
test
in
mov
mov
mov
pushf
jb
pop
scas
shll
stos
mov
sbb
ljmp
pop
cmp
add
stc
add
imul
mov
lret
test
or
or
push
lret
xchg
push
jb
push
imul
xor
dec
sub
xor
xchg
cmp
jg
pop
dec
aam
dec
fwait
sub
aaa
movl
pop
mov
enter
mov
or
stos
sub
in
sub
pop
pushf
ss
iret
push
and
lods
in
test
rol
push
cmp
mov
dec
shrd
aaa
pop
sti
fcomi
imul
test
jp
ret
mov
das
or
adc
test
ds
js
subl
dec
push
mov
jge
cmp
mov
stc
jae
or
xchg
and
mov
popf
sbb
scas
sbb
xchg
inc
xor
rorb
xchg
mov
adcl
imul
rorb
xchg
mov
in
mov
mov
and
bound
sub
faddp
push
mov
dec
outsb
xchg
add
push
mov
pop
test
lret
aam
lret
popf
mov
or
xor
fsubr
mov
mov
test
hlt
dec
lea
or
cmp
clc
pop
imul
cmc
push
mov
mov
adc
mov
jmp
std
cmpsl
xchg
lock
into
mov
xchg
mov
sub
enter
lret
out
je
aas
or
cmp
mov
movsb
fdivs
test
adc
pop
dec
mov
fidivs
xchg
fsub
add
in
sti
xorb
jae
xchg
inc
mov
cmpb
mov
sbb
clc
mov
nop
mov
xchg
adc
dec
inc
orl
out
xor
test
mov
add
fisubrl
sbb
mov
movsb
mov
dec
or
and
xchg
mov
maxps
push
push
scas
scas
rcl
stos
or
or
adc
scas
jb
jle
bswap
and
jge
push
scas
xor
jnp
fidivl
push
dec
push
mov
dec
lds
test
lea
inc
mov
movsb
out
clc
fisttpl
mov
cmpsl
cmp
and
test
sbb
push
fs
lret
lret
mov
sahf
xchg
lret
xor
iret
pushf
inc
sbb
lahf
mov
dec
xchg
in
mov
stos
jmp
xor
test
add
dec
mov
nop
inc
cli
je
jge
jge
pop
xor
incl
jno
enter
xchg
sbb
cmp
jge
test
inc
sub
ret
lcall
aaa
fimuls
mov
pop
mov
test
fcomp
jp
loope
cmp
pop
pop
mov
pop
jmp
and
mov
adc
mov
sbbl
loope
and
xor
mov
push
xchg
es
mov
push
and
jg
fdivl
jns
out
or
mov
xchg
mov
rcll
leave
adc
sbb
sub
xchg
imul
out
mov
and
test
dec
clc
lret
inc
movsl
in
lret
inc
mov
dec
pop
loop
loopne
and
sub
pop
mov
inc
push
xor
add
sbb
adc
mov
orl
push
test
pop
sub
iret
lret
push
sbb
in
out
dec
inc
xchg
orb
push
and
xchg
jp
enter
jp
in
ja
lcall
daa
adc
push
and
leave
mov
mov
xchg
outsl
xchg
popa
pushf
sbb
nop
inc
out
outsl
arpl
pusha
ss
aaa
adc
mov
call
fidivl
fidivrl
pop
sub
mov
adc
imul
jbe
stos
dec
xor
cmpsb
leave
test
call
mov
outsb
dec
xchg
mov
mov
lea
sbb
pushf
or
push
cmp
jge
cld
scas
sbb
test
ret
clc
or
sbb
add
add
fisttpl
or
lret
sub
mov
rcrb
push
lds
pop
or
in
add
and
cmc
push
pusha
lahf
xchg
sub
movsb
repnz
and
sbb
sbb
add
inc
dec
test
arpl
jb
into
movsb
push
mov
fldenv
lahf
push
and
lcall
cmp
stos
inc
mov
cli
jle
pop
into
dec
cmp
orl
add
dec
ret
adcl
cmpsb
clc
shrb
out
aad
lret
jae
lea
jge
lea
mov
mov
cmp
in
xchg
cmc
mov
jg
mov
insl
out
sbb
insl
and
mov
sbb
xchg
fwait
sub
cmp
mov
sbbb
jp
in
xor
aas
push
mov
dec
mov
or
nop
stos
pop
fstpl
jmp
test
in
lds
cmp
cmp
mov
mov
rcrl
jb
filds
jg
icebp
adc
fidivs
enter
fmuls
mov
xor
or
xor
scas
aad
dec
or
pop
scas
mov
push
lret
xchg
daa
xchg
dec
dec
cld
and
enter
call
sbb
lea
ja
insl
test
fldl
orl
jmp
mov
push
fldt
sub
fsub
test
fidivrl
lea
jl
xor
sub
sbb
pop
or
pop
and
dec
inc
fadds
pop
inc
add
imul
das
test
les
adc
sbb
pop
lcall
clc
jns
xchg
orb
aaa
scas
arpl
jo
cmc
les
mov
call
jg
inc
sbb
or
pop
jns
daa
xchg
sub
mov
dec
call
das
jb
negb
cli
imul
ror
push
pop
mov
sbb
cmp
ljmp
mov
sbb
jecxz
repz
xor
xor
push
or
and
aam
les
insb
icebp
cmpsb
sbb
pop
fistpl
scas
scas
dec
arpl
loope
mov
jecxz
push
ds
push
adc
jmp
icebp
outsb
cs
enter
sbb
xchg
shll
dec
lret
xor
fstl
cmp
add
mov
cmp
jbe
sbbb
dec
rcrl
push
mov
cmp
stc
push
pop
movsl
or
mov
hlt
add
rcrb
add
push
ss
cmc
add
sbb
ret
jl
pusha
lds
inc
scas
js
imul
xor
out
das
push
ljmp
fbld
fisubl
testl
test
call
daa
push
xchg
sbb
pop
jno
add
into
arpl
pop
xchg
sbb
sub
sbb
sbb
test
sub
mov
inc
ret
shll
xchg
in
mov
lods
lds
dec
test
push
sbb
test
int
outsb
push
push
pop
cmp
cmpsl
aam
inc
mov
scas
pop
push
icebp
out
push
out
inc
pusha
mov
jmp
sub
shlb
cmc
sbb
push
ret
mov
mov
enter
int
xor
mov
mov
adc
mov
jge
jecxz
lret
cmp
imul
cmp
push
adc
jnp
push
lods
adc
scas
fwait
rcrl
fisubrs
sub
jne
or
cli
xchg
popa
mov
and
aas
js
int
fistpl
mov
add
add
insb
in
pop
outsl
or
sub
or
xor
mov
shll
mov
push
imul
mov
fisubrl
dec
leave
outsl
and
xchg
jne
in
movsb
cmp
sbb
hlt
adc
imul
push
mov
sub
xchg
jecxz
push
nop
mov
fisubs
sbb
push
adc
mov
sarb
in
mov
mov
das
ret
or
pusha
mov
adc
aad
xor
cmp
shlb
dec
xchg
shll
cmpsl
cli
xchg
cmp
ljmp
test
pop
mov
in
sti
loopne
jge
clc
or
call
add
adc
mov
sbbb
out
ja
lret
pop
sbb
xchg
rorl
into
jae
xchg
mov
sti
jmp
pop
cli
cmpb
xor
cmp
mov
adc
outsb
inc
lahf
fidivrs
adc
sub
sub
daa
test
dec
test
cld
sti
cli
and
inc
sahf
dec
mov
nop
xchg
testl
xor
mov
dec
in
in
add
push
aad
adc
jge
stos
popa
das
mov
lock
mov
insb
xor
setne
cmpsl
cmp
leave
out
ss
cmp
aad
push
mov
daa
sti
add
mov
xchg
mov
inc
adc
lahf
lods
je
aad
je
rorl
aam
inc
xor
jmp
shl
cmp
cmp
cmp
mov
fiaddl
lahf
ss
adc
dec
xchg
lods
mov
clc
andl
fcomps
sbb
push
xchg
adcl
jne
mov
mov
lcall
push
mov
adc
sub
dec
leave
sbb
insl
jp
sub
sbb
inc
sub
and
enter
in
aas
pushf
mov
cmp
add
cmp
in
stos
cltd
mov
cwtl
imul
les
test
cmp
testl
arpl
inc
sahf
stc
adc
or
inc
sub
xchg
mov
pop
in
xor
mov
fidivrs
push
and
or
sbb
orb
push
pop
push
mov
sti
aas
xor
lahf
jne
movsb
leave
pop
xchg
shr
es
pop
and
jae
pop
ljmp
mov
popf
lods
inc
lcall
sbb
and
mov
sub
adc
mov
scas
in
fucomi
mov
jb
movsb
fcoms
xchg
mov
adc
ret
mov
ds
jmp
lds
fsubrp
push
lock
push
push
or
sbb
mov
into
insb
flds
mov
cmp
imul
std
jecxz
fsubs
mov
lahf
mov
test
mov
aad
jecxz
xchg
mov
push
mov
and
mov
push
sub
test
out
mov
xchg
mov
mov
aas
jmp
xor
dec
and
lods
mov
ds
cmp
cmpsb
mov
and
cmp
sbb
call
fisttps
push
sbb
jbe
int3
outsl
mov
dec
scas
sub
cmp
jae
clc
and
xchg
fsubrs
out
mov
cli
or
cmp
insb
repz
dec
cmp
out
stos
lock
aaa
sub
mov
out
test
lret
mov
mov
mov
push
xlat
adc
push
xchg
pushf
lahf
iret
in
xor
enter
aad
add
fwait
mov
mov
repnz
sbb
in
dec
mov
adc
out
dec
cmp
movsl
push
call
outsl
test
pop
jo
mov
adc
mov
mov
stos
inc
fistpl
loop
pusha
jnp
mov
mov
call
push
add
sbb
mov
arpl
or
xor
ss
sbb
xor
rorb
sub
mov
int
clc
lret
cmp
je
enter
sbb
iret
popf
adc
cmp
xor
stos
inc
test
lret
inc
dec
out
lret
rcr
loopne
xor
out
js
ficompl
push
popl
sub
and
jae
loope
sub
imul
cmp
dec
iret
xchg
aaa
mov
fdivrl
sub
lea
movzbl
lea
out
int3
test
dec
enter
sub
aaa
xor
adc
cwtl
push
and
xchg
daa
scas
push
add
mov
jg
fisttpll
add
push
jb
ss
call
mov
sbb
inc
push
mov
push
frstor
and
dec
xor
push
cltd
or
insl
loopne
jmp
push
xor
loop
mov
cvtps2pd
iret
fwait
mov
cltd
mov
xchg
pop
test
hlt
jmp
and
xlat
mov
lea
data16
and
outsl
cmp
cmc
mov
or
pop
or
xchg
jl
sbb
lea
lds
push
mov
pop
cmp
mov
cmpsl
pop
mov
ss
ja
stos
mov
movsl
cmovns
insl
leave
fstpt
je
xchg
pop
subl
mov
test
incb
scas
mov
cmp
shll
cmpsl
daa
mov
fsub
movsl
xchg
stos
xor
int3
jnp
add
xchg
out
add
xor
insb
fmuls
jmp
xor
lods
mov
pop
into
fsubl
mov
pop
pop
mov
into
xlat
push
out
nop
xchg
cltd
cmp
clc
jnp
leave
inc
fidivrl
mov
imul
loopne
pop
mov
icebp
inc
fisttpll
js
add
aas
clc
test
mov
or
insl
imul
subb
pop
int3
ja
fcomi
add
dec
cmp
test
mov
fcompl
pop
push
imul
push
arpl
ljmp
les
jo
arpl
dec
dec
xor
lahf
mov
ret
idiv
mov
cs
jnp
cmp
cwtl
jp
lods
lea
fwait
sarb
std
push
jg
testl
lods
pop
push
push
sbb
std
push
pop
fiadds
mov
xchg
shll
lods
outsl
sbb
or
or
lcall
lcall
pop
lret
push
nop
stos
adc
jp
cmpsb
push
mov
xchg
adc
mov
insb
adc
sbb
aaa
out
rol
hlt
add
mov
lods
cs
fstps
or
call
mov
loopne
fwait
insb
xchg
lahf
out
inc
testl
sbb
lret
cs
cmp
jnp
mov
test
insl
sub
imul
xchg
clc
adc
scas
sub
xor
pusha
ror
cld
push
sub
test
mov
das
push
adc
idivb
add
stc
cmp
call
mov
popf
adc
rclb
jge
cmc
mov
scas
add
xor
clc
or
mov
mov
ja
fimull
in
gs
leave
cld
cltd
add
fdivs
jns
fidivrl
lock
or
je
mov
clc
mov
sbb
inc
lea
inc
clc
shll
xchg
cmp
inc
mov
pusha
adc
or
pop
push
iret
pop
idivb
xor
into
pop
push
adc
sbb
push
xor
add
jb
mov
mov
aas
push
ds
negl
aad
fsubs
add
mov
in
jmp
inc
ret
testb
mov
adc
aaa
xchg
scas
mov
sub
lcall
jp
jb
js
outsb
mov
adc
pusha
add
lcall
cmpl
push
pop
cwtl
adc
and
xchg
mov
pop
daa
imul
ja
pop
cltd
lea
insb
cmpb
push
enter
dec
push
push
sbb
jnp
pop
decl
mov
pop
fs
push
cmp
jl
push
mov
mov
cmp
inc
pop
dec
push
lds
std
push
dec
cmp
bound
ljmp
fcomps
lods
lds
xchg
adc
sbb
mov
cmp
pop
jl
or
sub
mov
dec
lea
pop
dec
inc
mov
fidivrs
mov
pop
ljmp
jp
or
loop
and
jbe
dec
xor
or
sbb
stos
mov
inc
jg
sbb
pusha
push
out
ret
dec
rclb
fmuls
scas
jge
and
cli
in
sub
mov
test
or
mov
dec
pop
enter
xchg
test
call
pop
mov
bound
xlat
add
add
aad
fsubrs
mov
shrb
mov
sbb
mov
mov
xchg
pop
xor
sbb
rorb
cmp
arpl
sub
or
or
pop
incl
mov
outsb
adc
insl
inc
adc
lea
dec
mov
js
insb
aas
out
sub
jl
outsl
out
andb
adc
insb
sbb
sbb
xchg
inc
test
pusha
push
xorb
mov
cmpsl
or
call
sbb
inc
mov
shlb
test
and
mov
or
xchg
dec
insl
mov
pushf
mov
pop
lods
add
jmp
sub
and
pop
fisttpl
fwait
sbb
lea
mov
sub
fcomps
push
test
xor
inc
mov
aad
mov
sbb
inc
or
rcrb
aas
inc
js
hlt
jb
ljmp
stos
rorl
push
mov
mov
in
mov
pop
or
loop
lea
mov
push
ljmp
or
idiv
push
fs
inc
shll
sbb
mov
imul
cmpsb
insb
mov
test
movsb
es
fdivrl
jns
fldt
mov
int
idivb
data16
ss
lret
cmp
clc
pop
jecxz
pop
sbb
mov
xchg
repnz
push
adc
sbb
lret
loopne
and
dec
push
fsubrl
and
enter
mov
inc
out
xchg
sub
addr16
call
or
mov
push
inc
push
sub
pop
sbb
out
or
and
pop
lods
pop
iret
nop
sub
cmpsl
dec
or
std
inc
repnz
cli
popa
jno,pt
push
jl
icebp
sub
jne
push
lock
shrl
call
fidivl
enter
sarl
adc
dec
je
pop
ret
mov
mov
push
adc
sti
xchg
es
fstpt
xchg
mov
jne
xchg
and
icebp
mov
push
pop
repz
or
fistpl
pushf
lret
xor
inc
dec
div
inc
jl
pop
dec
lret
lcall
xchg
bound
add
or
add
push
lds
leave
icebp
int3
mov
lahf
sti
les
sbb
dec
push
loopne
pop
jne
or
in
push
mov
pop
dec
add
and
ljmp
mov
andl
lods
xchg
mov
fsubrs
push
movsl
mov
adc
sub
std
inc
out
mov
or
inc
or
sub
punpckhdq
daa
pop
adc
jp
in
mov
inc
mov
mov
add
and
mov
mov
stos
lods
pop
sbb
mov
xlat
mov
push
ljmp
outsl
test
dec
fs
xor
pop
pop
mov
jae
xchg
hlt
pop
xor
addb
dec
pop
dec
clc
cmc
push
enter
mov
pop
mov
popa
mov
cmp
jae
and
or
sbb
loop
cld
push
adc
inc
in
pop
mov
out
sub
dec
adcl
mov
push
test
fildll
lret
aas
and
shlb
push
js
lret
jmp
mov
jecxz
fadds
jecxz
jmp
nop
jno
call
popa
ljmp
call
jle
mov
cmp
jns
repnz
sbb
push
cmp
push
push
je
outsb
pop
xchg
dec
and
cmp
ja
mov
dec
xor
push
lret
inc
push
mov
adc
xor
adc
aam
repnz
mov
dec
xchg
fdivl
inc
test
push
ljmp
push
sahf
shll
dec
jp
aaa
dec
jae
mov
pop
hlt
add
xchg
jle
sbb
int
cmp
sbb
fldl
mov
dec
jg,pt
push
cmc
movsl
ret
cltd
es
pop
addr16
iret
inc
push
stos
leave
in
lret
insl
xor
mov
push
je
pusha
cmp
mov
arpl
cs
sub
dec
outsb
js
mov
sbb
cmpb
loopne
ds
ja
fistps
mov
dec
pop
push
cmc
ficoml
stos
lcall
stos
lods
fidivrs
or
incl
dec
lret
mov
mov
movsl
lret
cmp
cmpsl
push
stos
mov
cmpsb
sub
sub
sub
push
push
dec
in
inc
mov
inc
lock
xor
pop
ret
sub
push
mov
sbb
or
push
cmp
loopne
push
xlat
mov
mov
adc
push
xor
mov
mov
outsb
pop
jge
jno
push
fidivs
sub
lret
aad
adc
shr
in
ss
push
nop
lcall
or
inc
dec
aaa
jnp
aas
lcall
sbb
data16
cmp
mov
push
fidivl
mov
sbb
flds
pop
xchg
cmp
call
xchg
mov
pop
daa
cmp
or
mov
imul
or
jp
ljmp
lcall
mov
pop
add
or
dec
mov
push
fidivrl
cmp
loop
enter
pop
stos
pushf
mov
imul
mov
add
in
call
mov
and
mov
test
subl
pop
ss
dec
jl
xor
les
dec
lcall
jp
mov
jl
fs
out
pop
fists
in
push
js
pop
mov
sub
fadds
mov
sub
loope
pop
pop
mov
xchg
and
insl
ret
nop
inc
pop
mov
add
mov
xor
in
and
dec
decb
sub
ret
mov
cmovns
push
sti
and
xchg
mov
mov
lcall
lret
les
scas
xlat
mov
jmp
jp
sub
xor
jl
fstps
call
push
imul
jge
pop
lret
sub
sbbl
aaa
ljmp
mov
shll
mov
and
fs
dec
sbb
cmp
cmp
xchg
add
repnz
cmp
dec
mov
cli
inc
pop
pop
out
clc
and
pop
cwtl
or
dec
mov
push
pinsrw
cwtl
out
inc
dec
sub
xchg
and
push
repnz
mov
test
adc
mov
lea
mov
xor
mov
or
sahf
add
sti
rorb
adc
div
inc
sbb
jbe
in
add
loope
xchg
and
inc
adc
cmp
push
shrb
pusha
mov
lcall
push
mov
sub
jo
mov
ret
push
jae
sub
mov
addb
mov
js
mov
mov
dec
orb
mov
or
xchg
imul
jecxz
subl
push
xchg
lahf
cs
push
jbe
or
shrb
arpl
data16
xor
fwait
sbb
xor
mov
sti
inc
inc
fcomps
clc
into
pop
arpl
out
xlat
jecxz
data16
shrb
cmpsb
adc
pop
jg
lahf
xchg
mov
lock
mov
mov
les
daa
and
mov
mov
loopne
adc
pop
mov
cmpsl
push
repz
lret
add
lock
dec
or
in
rcll
cmp
in
mov
sub
mov
push
cli
xchg
add
xor
push
or
xor
mov
movsb
sbb
jle
adc
xorb
cmpsl
lock
aad
or
notb
cmp
mov
mov
xor
in
jne
cli
scas
sub
xor
stos
daa
mov
pop
sbb
adc
sub
out
shlb
icebp
mov
pop
cmp
add
pop
xchg
inc
dec
mov
or
lods
cmpsb
xor
addr16
lods
or
sbb
push
stos
pop
mov
mov
mov
push
push
rolb
inc
and
je
inc
out
dec
lea
test
xor
repz
mov
xchg
mov
cwtl
fldt
mov
movb
add
repnz
dec
push
movsl
movsl
sbb
out
xor
push
mov
mov
loop
loope
inc
mov
lcall
iret
sar
fnstenv
push
pop
sub
pop
inc
xchg
aaa
iret
xchg
pop
lods
lods
loop
dec
pop
icebp
mov
pop
mov
xchg
xchg
out
mov
cmp
mov
pop
pop
xchg
insl
xor
cmpsb
and
sub
add
lods
and
test
xor
mov
fcmovb
jo
dec
scas
sbb
aaa
test
jle
out
mov
xchg
test
fsubrs
std
xchg
mov
pop
jns
shlb
jae
cmp
imul
and
scas
jmp
mov
rorl
xchg
fcomps
dec
mov
adc
inc
lret
leave
pop
jne
mov
insl
adc
enter
sub
jmp
out
mov
xchg
push
dec
sbb
push
jo
xchg
not
leave
pop
movsl
dec
adc
push
into
mov
dec
test
pop
sub
push
jo
push
push
cmp
and
sbb
in
arpl
or
subl
rorl
xchg
push
add
pop
xor
mov
or
inc
adc
dec
test
cmpsb
push
out
dec
sbb
lods
add
mov
pop
jne
adc
mov
out
je
stos
mov
test
in
inc
stos
inc
arpl
sub
das
pop
nop
scas
jb
cmp
aas
cmpsl
push
jne
sub
inc
and
pop
sbb
cli
rorl
ds
pop
movsl
es
loop
or
mov
out
sbbl
add
or
clc
push
iret
dec
dec
insb
mov
int3
jle
cmp
inc
push
xor
xchg
push
popa
jb
cmp
rclb
insb
push
rcrl
test
sbb
pop
lods
sahf
dec
call
mov
pop
loopne
or
aam
mov
clc
loope
imul
cmp
or
push
mov
test
sub
mov
cli
xchg
fwait
mov
jge
mov
sbb
out
push
jecxz
hlt
adc
movsb
xor
outsb
pop
rolb
mov
lret
dec
mov
imul
push
mov
xorb
pop
xor
cld
dec
lods
cmp
loope
cmp
js,pn
lea
fiadds
mov
aas
scas
es
lods
movsb
mov
xorl
fcmovb
dec
aas
jae
mov
loope
aam
cli
pop
lods
test
jo
sbb
and
insb
ror
mov
xor
stos
xor
sub
push
mov
push
fmull
fwait
xchg
xchg
add
mov
cmp
xor
or
pop
lea
push
lds
popa
ret
ds
cmp
fnstsw
pop
add
mov
inc
mov
inc
fs
les
int3
sti
mov
pop
insl
test
iret
cmp
aam
cmp
pop
sbb
imul
lcall
fidivs
cmp
xchg
jmp
mov
ljmp
and
mov
jg
jnp
cs
ss
cmp
das
sbb
icebp
testb
cs
or
xor
pusha
out
ds
dec
icebp
bound
pop
sbb
pop
jno
jmp
mov
mov
ljmp
sub
addb
add
std
cmp
ret
jae
dec
aam
xchg
addl
jbe
mov
test
push
jp
rep
mov
aaa
aad
mov
pushf
push
push
mov
clc
push
adc
pop
repnz
or
pop
and
dec
std
xchg
xchg
ror
mov
hlt
loop
js
push
cltd
xor
stc
dec
cmp
pop
lea
fiadds
dec
clc
sbb
cmc
orb
jp
adc
mov
hlt
stos
inc
fnstcw
cmpsl
in
inc
jo
mov
xorl
test
jp
pop
fcomps
in
ret
pop
or
push
adc
cli
xchg
and
and
xchg
pop
xchg
jno
dec
mov
add
or
mov
movsb
pusha
scas
pop
push
loopne
sbb
data16
adc
xchg
jo
fcmove
xchg
icebp
sahf
repnz
cmp
fistps
movsb
in
adc
or
mov
xor
int
jle
lahf
sarl
sub
cmpsb
sub
adc
pop
jp
icebp
into
shll
js
outsb
or
mov
pop
cmovnp
cmp
imul
xchg
and
rcrl
inc
ljmp
pminsw
inc
pop
mov
cld
cli
insb
mov
imul
pop
cmp
mov
mov
xchg
test
push
push
mov
and
push
xchg
in
xlat
mov
sbb
lret
dec
stc
cltd
mov
pop
repnz
adc
aas
out
push
sbb
ljmp
nop
popf
push
mov
dec
movsl
sub
sbb
test
fsubrs
mov
popf
loope
cmp
pusha
pop
mov
mov
daa
sub
jb
insl
ret
push
pop
mov
adc
mov
call
mov
lahf
sbbb
sbb
out
xor
and
add
xor
inc
lods
mov
mov
push
mov
and
imul
jns
les
pop
sub
fs
js
sbb
pop
cld
pop
pop
push
mov
enter
jae
adc
push
jg
push
sbb
pushf
and
mov
cmpsb
push
sbb
sar
jnp
mov
sbbb
test
out
loope
push
cld
xor
adc
xlat
cmpsl
sbb
add
adc
mov
xor
test
or
mov
inc
mov
jmp
jnp
xor
fdivs
push
scas
lock
sbb
repz
rolb
addr16
jae
xchg
mov
pop
mov
jns
mov
sbb
mov
ror
lret
js
pop
xor
inc
int
push
cltd
js
pop
ficompl
hlt
rcrl
pop
adc
out
orb
add
call
push
test
jp
pop
ret
add
push
sbb
dec
call
fdivs
or
mov
add
mov
pop
xchg
stc
jmp
xlat
push
lock
mov
mov
cwtl
xor
fwait
iret
rorl
lcall
daa
mov
xchg
xor
inc
and
jno
mov
in
pop
xor
mov
sbb
lods
dec
dec
xchg
xchg
stos
adc
jp
mov
clc
stos
dec
sbb
ljmp
sbb
mov
push
ror
mov
jmp
inc
xchg
pop
push
sub
xchg
inc
cmp
sub
addr16
mov
jle
sub
sbb
enter
scas
pop
rcll
pop
or
jmp
enter
cmp
xchg
xchg
ja
xchg
sbb
xchg
ljmp
loop
gs
scas
bound
push
mov
or
lods
mov
inc
inc
inc
dec
pop
pop
adc
add
or
arpl
mov
mov
sbb
lods
into
mov
dec
lret
jle
subb
adc
xor
sub
inc
leave
inc
sbb
clc
repz
push
imul
fsubs
scas
mov
test
or
shrb
and
sbb
outsb
mov
jp
jo
rcrb
stos
call
or
aad
jp
and
xchg
jmp
jp
das
mov
xchg
cld
cld
lea
mov
push
jo
or
jbe
pop
jle
out
or
sarl
or
jp
sbb
mov
xorl
pop
scas
dec
cmp
in
inc
lds
loope
mov
pop
fdivrs
cmp
cmpb
mov
sti
movsb
mov
jno
push
pushl
mull
mov
mov
mov
xlat
xor
xor
pop
sub
sub
sarb
adc
sbb
add
enter
push
dec
js
pop
adc
fiaddl
jmp
mov
mov
jle,pn
js
test
sub
cli
daa
loope
inc
addl
sub
mov
cmpsl
pop
mov
in
sbb
add
push
cmpb
mov
add
pop
data16
mov
xchg
rep
jge
jo
xor
lods
cmp
loop
or
or
sub
jmp
mov
and
and
xor
stc
xchg
cmp
scas
pop
pushf
mov
and
jp
fcoms
dec
call
xchg
dec
ror
or
dec
mov
inc
lcall
push
xchg
rorl
mov
lret
or
push
out
jmp
xor
dec
imul
dec
mov
mov
pop
and
push
mov
xor
movsb
stc
or
sub
adc
js
cwtl
repnz
insb
in
das
stos
scas
mov
sub
jle
stos
jecxz
xor
jns
sub
cs
imul
lods
sub
push
and
popf
shll
xor
xchg
fnstenv
fisttpl
lcall
imul
icebp
imul
sbb
loop
lock
adc
je
ja
jae
cmp
dec
mov
call
cmp
xor
sub
clc
xor
lea
push
jmp
or
divb
adc
xor
or
push
pop
jnp
lock
test
mov
aam
pop
lds
les
sbb
popa
lahf
jnp
mov
jle
dec
mov
mov
and
ss
or
xor
bound
cs
cmp
dec
scas
and
test
adc
loope
mov
dec
mov
lret
inc
inc
or
divl
js
adc
adc
mov
js
cmp
jmp
adc
std
js
loop
arpl
mov
jb
or
mov
pop
push
call
ss
scas
adc
icebp
mov
inc
adc
mov
ja
sub
dec
add
rolb
loope
inc
movsb
cwtl
xlat
xor
lret
enter
mov
int
fmulp
xlat
jo
icebp
test
push
test
xor
imul
sub
in
loop
test
mov
test
daa
test
xor
xchg
push
ficomps
lret
sub
fcomp
pop
xchg
push
sbb
fisubrl
xor
hlt
pushf
push
sarb
pop
sti
and
std
jb
shlb
sub
xlat
sub
or
movsb
mov
ds
mov
psubd
outsb
cwtl
mov
push
mov
stos
add
inc
add
loope
test
push
shrl
aaa
push
dec
lods
aaa
pop
popa
fidivl
lock
mov
ret
add
loop
sbb
adc
jecxz
in
jae
dec
lds
sbb
cmp
mov
movsb
mov
cli
ret
jl
jmp
mov
sbb
mov
cmpsl
jg
insl
in
lea
add
lret
mov
and
cwtl
or
iret
sbb
cwtl
push
add
sbb
or
scas
pusha
out
imul
js
mov
pushf
mov
adc
test
stos
clc
imul
push
cmp
and
outsb
mov
cmp
push
pushf
test
mov
dec
faddl
ficoms
xchg
adc
lcall
cmp
jmp
int
mov
mov
sub
jbe
test
add
pop
pop
cli
iret
inc
push
xchg
xchg
das
neg
push
dec
mov
icebp
ljmp
mov
sbb
jmp
push
or
shl
push
or
and
push
cmpb
scas
out
sahf
shrl
imul
push
lret
jnp
aad
cmpsl
push
iret
mov
mov
pop
or
cmc
sbb
jmp
dec
lods
push
mov
push
cmp
pop
xchg
or
popf
pop
mov
mov
jmp
daa
add
mov
xchg
mov
mov
outsb
sub
and
dec
js
or
or
mov
jns
int3
into
js
mov
shlb
sbb
orb
js
adc
adcb
cli
add
pop
pop
xchg
int3
fwait
xor
inc
sbb
mov
adc
insl
dec
jb
adc
mov
and
xor
pop
int
xchg
lods
pop
hlt
imul
fwait
xor
insl
dec
mov
fildl
out
lods
xor
cltd
mov
adc
ret
cmp
test
mov
push
mov
mov
adc
add
xor
dec
fimuls
lahf
dec
insl
and
clc
mov
cld
cwtl
mov
and
cmp
aam
mov
push
pusha
sbbb
or
sub
xchg
pop
dec
pop
cmc
fndisi(8087
loopne
lret
insl
adc
cmp
into
mov
jg
fstps
add
dec
js
cmp
mov
jbe
daa
and
ljmp
lods
repnz
loopne
xlat
push
in
stc
lods
sub
sbb
lock
xchg
aaa
cmp
mov
fsqrt
lahf
dec
jno
mov
subb
pop
mov
push
or
scas
decl
xor
ret
std
xchg
pop
aas
mov
daa
movsb
ret
lret
sbb
sahf
or
push
jo
cwtl
xor
jns
and
jecxz
sbb
aas
pop
add
or
scas
adcb
out
mov
mov
out
xchg
dec
push
out
clc
jl
lock
sbb
xor
cmp
cmp
in
ds
pop
ffree
lahf
ret
clc
mov
jnp
jmp
ss
push
mov
mov
push
test
pop
je
ljmp
add
jae
mov
add
xor
outsl
int3
mov
lods
mov
add
inc
shl
sbb
popa
stos
incb
push
xchg
jp
je
and
and
arpl
dec
test
in
dec
pop
jb
orb
mov
movsb
dec
dec
cwtl
jne
cmc
mov
or
and
jnp
pop
mov
enter
stos
sbb
ljmp
jbe
dec
mov
dec
or
lret
test
push
push
outsl
adc
or
cs
mov
pop
dec
dec
cld
push
mov
mov
aam
mov
test
inc
push
sbb
pop
mov
scas
pop
fstl
mov
arpl
imul
mov
push
dec
jg
lret
aas
mov
dec
movsl
sbb
pusha
jl
pusha
push
xor
push
cli
sub
loop
push
in
hlt
and
enter
mov
shll
fisttpll
push
or
adc
mov
push
dec
inc
jnp
cld
cwtl
jns
mov
sbb
mov
leave
jb
dec
push
xchg
out
mov
pop
mov
xor
mov
loop
dec
xor
or
nop
xor
shl
btc
jo
popf
stc
fisubrl
out
loopne
inc
lea
sbb
imul
es
add
rorb
cmp
pusha
sub
enter
push
test
and
repnz
xor
mov
mov
sbb
shrb
mov
and
xchg
xchg
stos
push
pop
xchg
repnz
jne
pop
xor
mov
xchg
mov
pop
cmp
or
cmp
jecxz
adc
push
dec
stos
or
mov
mov
outsl
cmp
push
and
jg
js
or
movsb
sbb
cmp
xlat
call
inc
fwait
test
hlt
aad
test
sbb
frstor
stc
mov
lock
loopne
lret
add
sarb
mov
pop
sub
jl,pt
sub
subl
in
xchg
inc
in
test
adc
rcr
ljmp
loope
mov
ficompl
testb
stos
out
into
call
sub
iret
sub
rorl
inc
mov
int3
dec
jecxz
loope
loop
pop
adc
ljmp
and
lret
xor
loope
mov
mov
inc
cmp
das
fisubrs
in
xor
mov
es
sbb
aas
mov
xchg
fcoms
loopne
lahf
push
mov
push
add
test
arpl
ss
and
ds
fprem
lock
idivb
sbb
aaa
mov
je
std
cmp
push
mov
jle
mov
sar
iret
mov
xor
lds
dec
mov
fsub
lret
mov
mov
ret
mov
pop
arpl
js
pushl
cs
test
in
dec
jb
incl
push
dec
cmp
cmp
dec
aas
lea
in
and
push
mov
push
lret
push
mov
xchg
xor
mov
pushf
xchg
or
xchg
repnz
sbb
ds
adc
iret
inc
or
dec
jae
cmp
cld
sbb
subb
dec
inc
xor
ja
fwait
or
clc
and
dec
lahf
xchg
decl
iret
dec
or
mov
fidivrl
push
sbbl
and
xor
mov
jne
xchg
adc
pop
mov
mov
sub
inc
mov
pushf
imul
ljmp
sbb
jb
mov
lret
test
hlt
lea
lods
adc
leave
xchg
insb
cwtl
mov
idivl
mov
into
xchg
mov
popl
cmpsb
jae
idivl
jne
gs
mov
out
incb
mov
fucomip
xor
movsl
xor
mov
cli
adc
fldcw
test
pop
xor
xchg
jg
jecxz
fimull
sub
repnz
xchg
lds
dec
call
scas
enter
ret
daa
out
enter
and
mov
pop
sub
dec
sbb
lahf
sbbl
lods
mov
ljmp
in
sbb
xor
pop
hlt
les
mov
and
mov
enter
mov
mov
mov
sub
ret
mov
gs
mov
pop
jbe
cwtl
jp
push
add
mov
or
and
sbb
imul
imul
gs
iret
jbe
out
xor
mov
inc
inc
fdivs
jg
pop
ljmp
mov
incb
dec
fsubrl
pop
inc
cmc
inc
mov
repnz
mov
mov
jp
insl
ss
xor
jb
mov
clc
mov
mov
sub
insb
enter
xchg
out
xor
js
addb
ds
adc
sub
mov
movb
cmp
sarb
movsl
cmp
adc
sub
sti
mov
sbb
or
lahf
sbb
inc
pop
cmp
adc
mov
mov
js
push
push
cwtl
mov
popa
sbb
icebp
sbb
lret
ss
adc
dec
sbb
dec
pop
cltd
pop
push
hlt
add
cmpsb
test
fcmovu
pusha
stc
xor
into
push
push
jg
and
jae
cmpl
mulb
dec
lds
cmp
and
jle
out
call
sbb
dec
std
inc
cmpsl
mov
inc
out
xchg
orb
clc
test
lods
mov
out
adc
mov
aad
lods
sub
push
push
xor
mov
mov
jmp
sub
roll
out
mov
lea
jl
outsl
sahf
mov
mov
mov
xor
cmp
ss
adc
sbb
scas
pop
push
xchg
mov
test
movsb
sbb
sub
popf
packsswb
int
lret
data16
aas
mov
inc
hlt
and
int3
jge
inc
repz
mov
lret
cmp
push
dec
mov
nop
pop
push
mov
insl
or
sahf
into
and
and
mov
push
jle
das
fimuls
les
sbb
xor
clc
or
sbb
cli
pushf
add
push
out
pop
jb
ret
jo
cmpsb
push
push
orb
nop
std
jo
out
int3
pop
movb
sti
jp
sar
arpl
adc
inc
daa
pop
jl
clc
mov
add
push
mov
inc
lods
popf
arpl
scas
cmp
loope
addr16
arpl
andl
xchg
test
insl
pop
jle
jns
mov
cli
int
add
mov
or
jae
sbb
jno
mov
mov
mov
outsb
call
cmp
lds
dec
stos
or
aad
or
jp
icebp
cmp
imul
ja
push
cmp
push
pop
mov
pop
lret
mov
shlb
cli
adc
jp
jle
mov
push
std
ss
push
shld
sub
test
pop
inc
and
sti
push
cmp
mov
xchg
dec
clc
jl
adc
mov
pop
jb
adc
jg
xchg
xor
rcll
sbb
and
jp
dec
ljmp
mov
fstpl
xchg
movl
dec
push
loope
lret
ja
xchg
mov
sti
mov
mov
xor
or
or
jne
pop
xor
pop
xchg
lcall
push
or
nop
xlat
mov
mov
pop
lret
xchg
outsb
sti
test
pusha
stc
lods
jnp
dec
mov
in
dec
sahf
sub
xor
xchg
hlt
xchg
sbb
les
test
xor
das
fwait
sbb
mov
mov
mov
fdivrl
rcl
xchg
lds
dec
mov
mov
mov
dec
jb
adc
mov
adc
insl
jo
ljmp
outsl
and
subl
jns
dec
sub
addr16
pop
xchg
out
mov
or
ret
inc
mov
or
adc
mov
stos
ret
icebp
lcall
movsl
pop
pop
or
xor
dec
mov
aaa
or
lcall
xor
cmp
and
es
add
nop
stos
ds
ret
inc
call
cmp
adc
pop
mov
cli
xor
outsl
add
fimull
repnz
mov
loop
sbb
js
push
adc
outsb
adc
lods
fsubl
clc
fsubr
mov
or
nop
es
add
dec
and
into
dec
jle
mov
jp
out
mov
movsb
in
call
pop
cmp
mov
aas
pop
mov
xchg
mov
pop
add
add
sbb
cmp
iret
inc
push
cmp
mov
or
cmp
or
lahf
mov
lods
push
push
inc
push
cmp
pop
xchg
mov
in
xor
dec
and
cmpsb
notb
xchg
sub
fs
js
sbb
and
xchg
add
repnz
sbb
ftst
insl
ret
adc
xor
js
mov
sbb
into
sbb
popa
or
mov
push
cmp
out
lret
popf
std
shlb
fbstp
cwtl
cwtl
stos
es
mov
enter
notl
jb
inc
stc
jns
popa
xchg
cld
jb
mov
or
lcall
int3
pop
mov
pop
mov
stos
cmp
push
dec
sbb
and
aad
cwtl
aas
cs
enter
bound
scas
mov
aad
cmc
dec
push
sbb
push
outsb
dec
aaa
mov
mov
push
mov
mov
push
pop
outsb
fwait
lea
cs
xor
call
adc
jp
adc
aaa
push
mov
les
das
andl
in
subb
repnz
fisubrl
sub
add
mov
sub
push
xor
dec
xor
sbb
xchg
pop
js
shll
cltd
mov
sbb
lds
clc
jo
mov
add
mov
push
mov
jbe
cmpsl
pop
and
ljmp
ret
mov
mov
inc
push
push
xchg
js
fsubl
mov
mov
ja
jo
nop
adc
mov
dec
adc
cmp
push
aam
loopne
inc
cmc
popa
cmp
mov
js
arpl
test
pop
iret
das
or
pop
outsb
mov
lret
adc
pop
nop
sub
aaa
shr
sub
xor
test
fiaddl
or
out
popf
mov
push
or
scas
test
add
js
cmp
lods
aaa
inc
lcall
mov
fistps
inc
xor
pop
sub
inc
ficomps
or
mov
mov
sub
add
aaa
adc
shll
push
rcll
out
aad
dec
dec
xor
test
fs
xor
jge
shl
sbb
pop
and
xchg
sub
decb
xchg
hlt
push
jl
orb
popf
add
stos
cmp
and
sbb
xlat
push
mov
in
ljmp
mov
pop
adc
lcall
into
push
mov
enter
adc
pop
cmp
mov
pop
pop
fld
daa
ret
push
outsb
cmp
pop
mov
mov
int
and
out
dec
out
lods
int
xchg
mov
fnstenv
cmp
push
loop
cmc
and
add
adc
adc
gs
mov
loop
aad
sub
adc
pop
shlb
and
pop
add
cli
or
push
orl
lea
out
sbb
and
lock
adc
add
push
xchg
ljmp
mov
lods
stc
push
jo
lds
jnp
pop
dec
dec
das
clc
jl
mov
xchg
lea
test
ljmp
pop
or
es
or
push
sbb
jae
xchg
cmp
or
jp
test
mov
fisttps
pop
cmpsb
lea
cmpsl
aad
mov
dec
pop
dec
enter
mov
test
lret
scas
imul
or
scas
movsb
aam
jl
in
pop
pusha
mov
mov
mov
or
aad
lret
insb
sti
out
push
lcall
dec
movsb
xchg
test
and
in
xor
lea
aad
ds
js
jle
ss
add
dec
mov
lods
jns
pop
push
push
stc
inc
bound
inc
dec
or
stos
outsb
sub
rclb
sub
mov
call
lret
push
out
cmpsl
ja
jo
test
setns
cmp
insl
push
lods
dec
push
sbb
ds
adc
sbb
sbb
jno
lret
mov
les
sahf
mov
jo
sti
rclb
cli
add
call
mov
movsb
enter
sti
mov
xor
jne
xchg
jg
test
and
and
scas
scas
in
inc
xchg
mov
fsubr
xor
cmp
out
imul
fcomp
inc
jp
test
nop
or
add
or
in
jb
mov
mov
mov
test
xor
xor
lret
cli
mov
or
xchg
jl
mov
xchg
lret
mov
outsl
sub
in
dec
push
repnz
leave
mov
iret
mov
ud1
xor
rol
xor
xchg
or
push
sub
pop
int3
pop
js
mov
xlat
sti
cmp
mov
ss
sub
push
cmpb
cmpsb
mov
in
aam
add
mov
sbb
push
inc
sub
dec
mov
mov
lcall
cmp
push
les
fwait
les
jmp
rorl
sub
dec
cwtl
xchg
dec
mov
jecxz
stc
orb
lahf
cld
stc
out
test
fildll
xchg
jmp
dec
xor
xchg
mov
cmpsb
mov
fmuls
scas
mov
push
int3
and
sub
subb
sub
rorb
daa
mov
cmp
sub
popf
cs
or
sbb
pop
dec
push
sbb
std
xor
iret
jo
cmpsl
cwtl
das
popa
mov
sbb
in
xor
mov
test
xchg
mov
pop
jae
enter
xchg
push
xchg
xor
cld
loop
cmpps
enter
aam
loopne
or
divps
add
push
or
add
ja
outsb
test
or
fstl
pop
adc
mov
mov
mov
jbe
arpl
xor
inc
lret
lret
cli
pop
out
addr16
lods
sbb
test
adc
ljmp
push
cmp
xchg
sbb
stos
sbb
sbb
cli
ret
fsub
cmp
bndldx
inc
movsb
or
movsb
xor
mov
adc
dec
sbb
inc
iret
jno
push
scas
dec
adc
mov
cmp
mov
iret
shlb
mov
mov
jo
jae
sub
imul
nop
je
mov
push
out
in
rorl
xor
icebp
in
jo
test
sub
xor
mov
inc
lcall
insb
mov
dec
sarl
add
or
adc
jbe
mov
lods
mov
cli
hlt
jae
fs
loop
imull
push
subl
xchg
test
adc
dec
lahf
push
mov
fnstcw
dec
or
jb
sbb
pusha
icebp
add
inc
adc
repz
or
pop
push
cli
lods
inc
mov
ljmp
and
xor
push
jle
adcl
pop
jo
int3
mov
inc
les
push
jo
in
jnp
cmp
mov
adc
dec
addl
leave
pop
adc
dec
gs
rorb
jp
test
mov
mov
mov
adc
adc
ss
adc
push
stc
xchg
sub
cmp
mov
inc
xor
addr16
xor
dec
in
push
or
pushf
mov
cmpsb
stc
outsl
daa
jno
pop
mov
cmp
pop
mov
sahf
xor
sub
in
xor
sbb
xchg
sub
cmp
enter
sub
xchg
jae
idivb
xchg
or
pop
fisttpll
mov
add
or
cwtl
testb
in
lock
test
cmp
adc
xor
test
and
add
mov
adc
sbb
in
or
test
jne
iret
dec
sbb
lahf
xor
push
pop
movsb
cmp
out
mov
sbb
cwtl
mov
mov
pop
push
insl
scas
mov
xchg
jb
stos
dec
movsl
insb
jo
test
stos
jbe
js
popa
mov
int
mov
sbb
mov
dec
mov
and
mov
pop
pop
xor
imul
subl
mov
dec
cmc
jle
lea
mov
bound
int3
movsl
rclb
sub
in
addr16
xchg
xor
mov
dec
jge
mov
or
outsl
mov
pop
ljmp
push
mov
push
mov
out
js
cvtpi2ps
and
mov
inc
pop
pop
xor
rcll
xor
sub
or
xchg
dec
push
add
xchg
nop
in
mov
mov
xor
add
nop
inc
adc
inc
mov
repz
or
xor
rcrb
cmp
ljmp
xchg
cmp
jae
mov
cwtl
add
and
inc
or
cmp
cld
jge
add
adc
ret
or
sub
push
cmp
and
adc
cmc
pmuludq
adc
fnstcw
or
adc
stos
es
mov
adc
sbb
jnp
mov
bound
mov
call
xchg
jo
call
idivl
push
xor
int3
sbb
fcoml
pusha
enter
pusha
int3
mov
adc
scas
xchg
mov
mov
cmp
xor
mov
cmp
mov
jo
rcrl
stos
fildll
cmp
push
push
testb
insl
push
mov
xchg
push
cmpsb
pop
inc
loope
mov
insl
jl
jg
cmp
mov
push
subl
sbb
mov
aam
mov
push
pop
leave
mov
loopne
sbbb
xchg
lock
xor
int3
mov
sub
idivl
sbb
lret
lods
mov
xor
push
mov
pop
test
dec
mov
aaa
test
add
mov
xchg
dec
push
outsl
mov
fisubrs
adc
out
mov
jne
dec
mov
ret
enter
stos
push
push
scas
pop
into
lret
cmpsl
sbb
add
mov
jo
fs
mov
mov
cwtl
ret
repz
test
int
or
imul
aaa
sbb
pop
mov
inc
dec
sbb
aas
xor
test
bswap
xchg
scas
mov
data16
inc
mov
push
into
dec
push
ret
sbb
add
lock
xchg
sarl
cli
imul
incb
mov
xchg
pop
outsl
addr16
jg
jbe
ret
nop
fnstsw
adc
negb
insl
pop
aaa
roll
mov
or
ds
sbb
or
aas
bswap
fucomip
xor
imul
gs
xchg
inc
mov
mov
pop
cmp
cmp
adc
imul
and
ficoms
inc
cmpsl
lret
or
test
pop
inc
push
and
xchg
xor
push
dec
sbb
adc
mov
mov
mov
roll
push
sub
aad
and
std
inc
les
and
hlt
ja
or
mov
call
movsb
mov
shl
aas
jb
add
xchg
cld
sbb
inc
cmp
sbb
pop
mov
js
mov
push
int
rclb
mov
mov
test
mov
shlb
mov
dec
dec
mov
xor
jp
push
subb
sub
leave
mov
repz
cmp
mov
push
ss
xchg
in
mov
ds
gs
sbb
cld
pop
xor
jnp
lods
loopne
cmp
push
push
dec
or
push
push
or
data16
inc
xor
call
or
enter
call
lea
jecxz
icebp
addr16
sbb
xchg
mov
cli
mov
arpl
stc
cmp
insl
call
lock
mov
pop
jbe
ljmp
cli
sub
fnstcw
sbb
sub
insb
mov
fcmove
rcrl
in
jmp
cli
jecxz
dec
and
jne
call
das
fmulp
sbb
rorb
dec
cmp
addr16
mov
sbb
ja
and
fisubl
clc
adc
fwait
mov
or
and
push
mov
or
cmp
out
and
mov
insl
dec
popa
cmpsl
scas
mov
xchg
xor
inc
pop
inc
aad
stos
mov
inc
sbb
cmc
stos
xlat
ret
cwtl
movsb
mov
cmp
scas
repz
cmc
lods
iret
push
mov
negl
pop
pop
adc
dec
imul
enter
pop
mov
adc
add
fdivs
sbb
jnp
push
add
pop
out
jne
jecxz
test
cmc
xor
cwtl
ror
and
pop
jns
test
cmp
inc
loopne
xchg
pop
paddq
add
or
sahf
xchg
stos
lods
test
xchg
mov
push
or
adc
stos
jo
subb
xor
test
filds
lods
jb
push
mov
jge
inc
fwait
inc
cwtl
stos
cli
mov
es
lods
fadds
fidivl
adc
das
sub
xor
shlb
pop
cmpl
dec
cmp
frstor
dec
movsl
sahf
mov
fstps
iret
or
shll
loopne
sub
mov
scas
clc
sbb
cmpsl
mov
lahf
dec
leave
mov
mov
mov
sbb
cmpsl
pop
dec
mov
test
icebp
call
jae
ja
arpl
add
ja
pop
inc
lcall
sub
mov
call
and
movsl
push
push
cmp
mov
or
push
push
mov
pmuludq
insl
dec
test
pusha
fsubl
xchg
sub
orl
mov
lock
enter
mov
xor
mov
lods
out
or
mov
pop
dec
xor
sbb
add
stos
mov
push
xchg
mov
call
jecxz
dec
jge
aam
mov
cmp
inc
out
xor
std
mov
sbb
cmp
sbb
cmp
xor
call
das
ss
adc
aaa
dec
dec
pop
pop
mov
mov
ljmp
enter
gs
cmp
lods
dec
out
adc
aad
mov
cmp
mov
xchg
fwait
leave
test
fcmovbe
pop
push
lock
stc
out
xchg
add
cli
scas
lea
add
aaa
inc
subb
test
out
popf
push
or
sub
inc
add
inc
push
ret
fildll
out
sti
enter
mov
xor
stc
xor
cmp
xor
push
mov
jl
sbb
negb
push
cmp
mov
cmp
sub
clc
mov
loop
std
push
mov
call
lcall
addl
incl
out
jo
mov
dec
dec
sub
dec
lods
andl
sarl
inc
inc
lret
cmp
sbb
bnd
xchg
outsl
dec
cmc
test
es
and
or
push
mov
inc
inc
mov
frstor
sbb
cwtl
das
or
lods
scas
rcll
jne
adc
sarb
sbb
cmp
mov
gs
in
add
sar
scas
add
sbb
test
push
imul
jae
xor
fsub
aam
push
aad
lret
lcall
popf
inc
inc
dec
xor
mov
popf
test
dec
xlat
sub
int3
fs
outsb
std
pop
imul
nop
pushf
add
dec
inc
addr16
imul
rcrl
lds
stc
sti
in
dec
xor
sbb
leave
shrl
inc
je
push
push
rclb
fnstsw
sbb
and
dec
out
mov
test
subl
in
scas
cmp
call
adcl
fdivs
out
push
loopne
dec
xor
mov
pop
cmpsb
adc
pop
daa
scas
addr16
and
cwtl
pop
iret
dec
cmp
mov
xor
les
sub
adc
sbb
dec
aam
jo
frstor
nop
into
ds
mov
loope
out
loop
imul
jmp
cmp
in
mov
inc
mov
add
dec
inc
out
dec
test
pop
adc
sarb
test
xchg
int
mov
gs
sbb
cli
aad
cmp
jge
push
mov
rcll
cmp
xor
cmp
inc
pop
lea
pushf
cmp
ficoml
cmpsl
int
ds
adc
adc
fcomps
dec
pop
mov
xor
pop
les
or
mov
out
mov
test
and
xchg
jl
mov
stos
jp
in
iret
pusha
insb
mov
pop
and
lds
inc
cmp
aam
mov
imul
jns
cwtd
sarl
dec
jb
mov
scas
inc
jns
mov
sbb
out
mov
cmpsl
sub
iret
mov
jl
inc
popa
mov
out
incb
fs
mov
xchg
jnp
call
mov
xchg
dec
pop
int
jle
pop
lret
addb
rol
stos
sbb
cmp
mov
mov
adc
jnp
addl
cmp
and
jae
xor
cmpsl
and
mov
jbe
xor
cltd
sbbl
ret
test
mov
jo
out
mov
test
cs
loopne
clc
xlat
cmp
insb
mov
repz
mov
push
xor
insl
cmp
push
push
cltd
jno
lods
or
fdivl
fildl
pop
mov
insl
in
xlat
ds
inc
sub
dec
addps
xchg
call
int3
cmp
sbb
inc
pop
adc
inc
mov
dec
sbb
xor
sub
adc
or
jp
adc
adc
cmpsl
aaa
clc
pop
scas
jae
or
mov
push
mov
outsl
sub
ror
aaa
loop
push
mov
aas
ret
sub
pop
mov
xchg
dec
rorl
jbe
hlt
and
ficoml
inc
test
stc
imul
dec
sbb
scas
mov
insb
mov
sbb
mov
cmp
mov
sbb
xor
mov
imul
xchg
jne
jl
mov
sbb
pop
mov
lcall
sbb
imul
imul
insb
adc
sub
adc
mov
cmp
aad
mov
jo
or
outsb
dec
out
pushf
mov
push
cmp
mov
outsl
add
fidivl
rcrb
movsl
sbb
sub
fldt
push
dec
js
hlt
sbb
mull
mov
or
mov
push
push
or
push
lret
in
mov
jmp
jo
pusha
mov
adc
mov
scas
int3
adc
fnsave
lods
icebp
xchg
popa
daa
jbe
es
fcom
test
xor
subb
or
cmp
push
mulb
xchg
scas
sub
inc
mov
push
std
std
mov
mov
xor
mov
push
or
push
adc
sbb
pop
sub
out
ds
dec
mov
adc
ficomps
dec
aad
pop
or
dec
jl
hlt
cli
and
dec
sbb
fs
pushl
daa
mov
jle
sahf
pminsw
rcrl
inc
enter
or
cmp
sbb
ret
shr
scas
xchg
scas
stos
mov
mov
xchg
push
sbb
add
leave
xor
lcall
out
push
sbbb
test
or
cmp
mov
inc
cmp
dec
mov
mov
mov
cmp
cli
cmp
mov
pop
jnp
xchg
jecxz
or
inc
inc
jbe
std
nop
inc
or
mov
add
scas
jg
enter
jo
mov
xchg
mov
mov
fsubl
mov
mov
aad
dec
clc
cwtl
push
cltd
enter
rcl
push
pop
pminub
cli
mov
popf
lcall
and
sbb
sbb
jl
or
mov
adc
adc
mov
clc
adc
or
push
add
jecxz
sbbb
mov
inc
push
push
push
adc
mov
xchg
adc
aas
jnp
insl
ss
hlt
add
imul
xchg
nop
iret
addr16
inc
das
sub
push
xorl
jl
mov
sbb
leave
mov
xor
stos
fistps
dec
scas
out
fiaddl
adc
scas
fwait
xchg
pop
xchg
cld
mov
mov
pop
lret
dec
cmp
jo
gs
cwtl
add
lods
add
and
loope
mov
jl
xchg
lods
fwait
sbb
lahf
or
fs
push
sbb
adc
cmpsb
push
push
mov
mov
loopne
negb
sub
jl
mov
js
leave
mov
sbb
fcomps
cmp
call
add
mov
cmp
mov
and
scas
and
adc
outsb
mov
add
aad
sub
xor
xor
pop
add
xchg
popf
mov
inc
cld
sub
mov
add
cmp
dec
mov
xor
mov
and
pushf
dec
scas
jne
icebp
scas
adc
cmpsl
mov
clc
add
inc
std
rcrb
adc
or
subl
jnp
mov
loop
enter
leave
push
popf
push
stc
adc
cmp
pop
lss
pop
stos
cmp
fidivrs
sbb
lods
scas
inc
adc
xchg
sbb
subl
ja
xchg
fidivl
mov
sub
xor
fwait
rcl
xor
popa
jge
cmpsl
rorb
mov
mov
leave
popf
orl
push
pusha
int3
jnp
cmp
jp
xor
add
xchg
pop
insl
inc
cmpl
push
imul
pusha
add
mov
call
cli
xchg
imul
loopne
mov
add
sarl
rcrb
mov
incl
bound
arpl
rorl
sub
cmc
stos
mov
fwait
mov
push
icebp
sbb
js
mov
pop
cmpsl
mov
add
xor
mov
mov
and
orb
cmp
mov
inc
sbb
sarl
cmp
dec
xchg
in
mov
xor
push
pop
scas
sub
in
stc
xor
orl
push
ret
and
sarl
cmp
or
adc
loope
mov
mov
popf
jo
mov
shlb
mov
jne
pop
leave
movsb
gs
xor
sti
aas
and
push
push
sbb
sbb
sbb
push
mov
push
arpl
jbe
jl
pop
fadds
push
jp
mov
adc
test
loope
lcall
fiaddl
pop
fcomp
int
mov
fcmovnu
mov
mov
test
movsb
dec
lods
mov
xor
lret
push
dec
jl
lret
push
cli
fnstcw
adc
cli
out
and
divb
adc
sbbb
or
push
add
aaa
and
and
sbb
sahf
fnstcw
push
mov
push
mov
mulb
mov
in
cmp
xchg
in
push
push
cmp
dec
adc
mov
adc
cmpsb
pusha
fwait
movsb
and
aam
inc
std
cwtl
mov
out
loop
repnz
inc
cmp
jae
jl
ret
iret
mov
cmp
ja
call
test
mov
cmp
iret
inc
inc
adc
pop
mov
or
mov
inc
ljmp
ds
adc
push
stc
or
les
repz
sti
cmp
sub
cmc
mov
adc
ss
pop
xchg
stos
fsts
sub
mov
mov
mov
mov
pushf
lock
fsubs
push
mov
push
pop
mov
popf
imul
cs
rclb
inc
and
cli
inc
scas
and
inc
or
lahf
pop
daa
or
daa
inc
or
or
mov
xchg
cld
pop
mov
cmp
push
xchg
xchg
and
cmc
xchg
sub
jne
sahf
push
mov
cmpsl
mov
add
mov
lds
mov
ret
ds
rolb
and
cmp
mov
inc
or
cmp
js
cmpsb
clc
loopne
leave
jge
ret
lahf
mov
inc
hlt
or
bound
pop
icebp
pushf
sarb
dec
insb
mov
fcomps
iret
sbb
nop
sbb
sti
fnstsw
loope
dec
pop
or
cs
push
cmp
mov
xchg
cs
xlat
inc
outsl
adc
sbb
lcall
lcall
out
cmp
add
or
adc
mov
pop
cwtl
cmc
jmp
cmpsb
mov
loop
dec
sbb
popa
mov
dec
add
in
mov
or
inc
orl
mov
push
outsb
jbe
gs
sub
push
fldenv
int3
sub
stos
push
out
xor
out
cmp
jp
dec
shlb
ret
cmp
sub
jo
and
mov
je
push
inc
out
dec
hlt
test
popa
mov
cmp
data16
push
scas
add
test
dec
jae
insl
sbb
movsl
out
cltd
fwait
ss
push
and
or
gs
outsl
imul
lcall
fwait
mov
adc
nop
or
push
cmp
dec
mov
fs
xchg
and
or
cld
cltd
fdivrs
ss
jp
test
xor
aam
dec
jle
jle
in
cmp
push
pop
sbb
out
fisubrl
mov
out
mov
lods
pop
outsb
mov
sub
lea
divl
cltd
lret
mov
mov
dec
cmp
std
inc
lods
fwait
xchg
and
adc
adc
inc
sti
movsb
and
push
and
cmp
sub
aad
test
mov
pop
cli
sub
jb
ss
int
fwait
jno
cli
cmp
sbb
mov
sub
inc
enter
int3
mov
sbb
data16
xor
lods
fildll
mov
mov
repnz
mov
mov
cmp
into
cwtl
push
test
lock
std
pop
ret
call
aad
bound
jmp
fidivrl
int
cli
mov
cmp
push
inc
mov
xor
mov
and
xor
in
sarl
fldl
fnstsw
xorb
mov
out
push
push
push
aad
cli
add
sbb
push
test
shrl
mov
mov
mov
out
push
push
scas
or
bound
jmp
pop
pop
sub
mov
out
mov
aad
scas
xor
das
mov
lahf
fcmovnbe
sbb
test
and
scas
mov
movsl
sbb
cmpsl
cli
cwtl
xor
inc
add
js
ljmp
jp
js
pop
mov
iret
fildl
add
xor
adc
xor
cmpsl
int
cmp
fsubrl
sub
mov
stos
push
and
mov
icebp
xchg
clc
cmp
shlb
sahf
push
mov
lcall
or
gs
cmc
dec
adc
mov
repz
mov
pcmpgtd
jp,pn
imul
lock
adc
fnstenv
mov
mov
nop
push
pop
sbb
xchg
dec
and
stc
mov
push
mov
pop
mov
hlt
sub
sbb
call
sub
aad
test
insl
push
sbb
sahf
lds
mov
mov
fsubs
cltd
sub
dec
xchg
dec
mov
iret
adc
clc
jne
pushf
cmp
jae
mov
das
sbb
loop
cmp
sub
es
aaa
add
jp
xor
mov
sbb
add
jae
mov
cwtl
rcl
out
shll
mulb
add
sbb
mov
pop
xor
divl
mov
test
dec
mov
cmp
hlt
push
aaa
xor
icebp
push
lahf
rorl
jge
xor
addb
cmpl
push
or
xor
mov
mov
cmp
ljmp
jns
fidivl
mov
insl
sub
or
and
add
xor
push
cmp
imul
or
push
sub
push
mov
inc
dec
fsubs
pusha
lds
dec
mov
xchg
push
lret
je,pn
push
push
lss
cmp
fsub
enter
stos
push
aam
pop
mov
pop
ljmp
scas
shrb
xor
imul
lahf
push
xor
cmpsl
nop
sub
mov
daa
cltd
mov
jg
or
dec
xchg
add
outsb
dec
sbb
cs
fistl
add
mov
or
mov
xor
jnp
cli
fwait
jns
pop
and
cmc
xchg
loope
lahf
dec
xchg
xchg
stos
sbb
jns
out
lcall
das
or
mov
test
inc
mov
test
mov
scas
push
hlt
repnz
adc
mov
jp
stos
fiadds
mov
or
sub
jb
cmp
es
lcall
or
rorb
or
push
dec
mov
je
push
mov
xor
xchg
int
mov
dec
cwtl
xor
insb
in
mov
xor
call
sub
dec
out
inc
int3
enter
mov
dec
pop
push
loop
cwtl
stos
fstp
pop
ret
ret
rorb
mov
es
mov
test
test
insl
ss
inc
ja
pop
pop
in
lods
push
fsts
hlt
pop
xchg
mov
call
push
das
push
ret
stos
aam
xor
pop
xor
push
jecxz
aam
fs
jmp
subb
clc
fimull
loopne
xor
mov
add
adc
and
arpl
jb
add
sub
jecxz
pop
xor
push
insl
pop
mov
push
xor
pop
and
imul
ret
addr16
mov
enter
or
mov
cltd
jp
push
jmp
pusha
mov
roll
ss
dec
aad
or
cmp
and
popa
sbb
unpckhps
mov
lods
mov
xlat
xorl
sub
sbb
mov
sbb
push
rcrb
rolb
dec
aad
dec
addr16
outsb
dec
cmp
and
insl
cmpxchg
jae
add
pusha
scas
sbb
xchg
adc
adc
iret
dec
flds
jbe
bndldx
ds
jmp
in
bound
lahf
repz
jmp
jp
fbld
out
mov
shlb
lret
cmpb
pusha
or
sbb
jnp
cmpsb
das
cmp
push
pop
mov
jb
out
lea
xor
push
jne
stos
js
test
push
push
push
push
sub
or
cli
dec
xchg
jno
scas
adc
fcmovb
push
clc
xor
push
adc
repnz
and
xchg
pop
cmpl
mov
xlat
xor
and
push
ja
inc
in
mov
testl
jne
pop
out
or
cmp
add
cmp
dec
jg
call
cltd
faddl
xchg
mov
das
int
test
mov
js
and
addl
nop
scas
or
popf
movl
sahf
mov
and
clc
aam
sbb
jle
out
iret
imul
push
imul
mov
roll
movsb
mov
xor
stos
xor
fbstp
aam
icebp
ss
ja
adc
pop
sbb
cmpsb
jmp
inc
enter
bnd
inc
call
fcoms
stc
push
xor
dec
lahf
push
xor
xchg
and
or
sbb
aam
sub
xchg
push
xor
lret
mov
and
ds
shrl
push
adc
incb
ss
jno
push
clc
les
lods
loopne
test
dec
jno
mov
repz
cmp
lds
jge
cld
adc
mov
sbb
xchg
pop
rolb
sub
aad
xchg
cmc
mov
jl
xor
sub
inc
adc
jb
xor
pop
pop
mov
fiadds
xlat
mov
lcall
lret
iret
push
xchg
out
cmp
cmp
fdivl
aad
cmp
scas
push
mov
jecxz
sub
popa
pop
adc
insl
stc
mov
sahf
dec
and
inc
jns
cmpsb
inc
push
ja
icebp
push
mov
pop
test
sbb
jecxz
je
sub
sbb
ss
add
push
int
mov
pop
sbbl
jne
mov
int
lods
adc
lock
or
jle
lods
sbb
jb
sub
inc
fwait
sub
push
dec
adc
cmp
outsb
sbb
pop
push
loop
mov
filds
in
sbb
jb
xchg
push
pop
push
mov
jle
pop
leave
shll
pop
insl
punpckhdq
cltd
mov
pop
cmp
cmpsb
adc
repnz
jle
aas
ds
out
mov
test
addr16
cwtl
out
ja
pop
inc
jbe
cmp
cmpsl
dec
cmc
pop
lods
out
bound
cmp
out
ss
sbb
test
nop
mov
ret
pop
xchg
stos
aas
sbb
inc
imul
push
adc
comiss
push
sbb
or
test
mov
adc
cmp
dec
pop
sbb
out
test
ficompl
push
xor
dec
jg
sbb
inc
stos
fsts
ljmp
inc
test
dec
sbbl
leave
push
sahf
mov
dec
call
sbb
mov
add
mov
pop
add
xor
push
cmp
sub
xlat
jne
push
dec
jnp
stos
cmp
sahf
jmp
lea
movsb
dec
mov
sbbb
push
loope
cwtl
pop
jb
shrb
mov
mov
mov
call
mulb
test
lret
fcmovnu
push
loope
sub
pop
mov
shr
sbb
mov
sbb
dec
flds
add
iret
sub
cmpsl
cmp
jg
lahf
aas
aaa
test
push
sqrtps
mulb
mov
std
lret
pop
outsl
sub
nop
pop
enter
push
mov
or
sbb
adc
sbb
ds
jmp
cmp
mov
xor
outsl
iret
fmuls
xchg
mov
inc
mov
mov
jbe
aaa
cmp
pop
das
js
mov
xchg
push
dec
cmp
faddl
mov
mov
cmp
xor
xor
or
repz
inc
inc
fcom
mov
cmp
int
jbe
push
push
lds
pop
jno
icebp
jp
adc
es
out
mov
test
mov
jnp
icebp
repnz
cmp
icebp
inc
mov
sbb
out
lods
popa
out
int
sbb
push
pop
loop
movd
dec
out
test
mov
in
pop
pop
sbb
aad
add
in
sub
push
push
call
add
push
push
push
push
push
call
add
push
mov
call
push
mov
push
call
add
call
call
xor
cmp
jne
push
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
push
call
add
add
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
mov
cmp
je
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
sub
push
push
push
push
call
add
mov
push
call
add
mov
cmp
je
push
push
push
call
add
call
push
push
push
push
call
add
sub
push
push
call
add
push
push
push
push
push
call
add
or
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
call
add
call
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
call
cmp
je
push
push
call
add
call
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
call
add
cmp
jne
and
add
and
mov
and
cmp
je
push
call
add
push
push
call
add
push
push
push
push
call
add
mov
mov
mov
sub
test
je
xor
sub
sub
add
and
mov
cmp
je
add
mov
mov
sub
mov
and
cmp
je
sub
mov
add
mov
xor
call
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
call
or
mov
mov
sub
push
push
push
push
call
add
cmp
jne
mov
push
push
push
push
push
call
add
call
call
sub
mov
add
call
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
and
push
push
push
push
push
call
add
and
cmp
je
push
push
push
push
call
add
mov
push
push
call
add
add
mov
push
push
push
push
call
add
cmp
je
call
cmp
je
push
call
add
push
push
call
add
push
call
add
push
call
add
call
mov
push
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
add
call
push
push
push
push
call
add
push
push
call
add
push
call
add
or
push
push
push
push
call
add
add
call
push
call
add
push
call
add
push
push
push
push
call
add
and
push
push
push
call
add
push
push
call
mov
mov
sub
cmp
jne
mov
and
add
mov
add
add
cmp
je
push
push
push
call
add
mov
sub
push
push
push
push
push
call
add
push
push
call
add
mov
mov
sub
call
and
sub
call
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
add
mov
mov
call
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
add
push
push
push
push
call
add
or
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
push
push
call
add
mov
mov
push
push
push
call
add
mov
push
push
push
call
add
add
mov
call
push
push
push
push
call
add
mov
call
push
push
push
push
call
add
mov
push
push
call
add
mov
push
call
add
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
call
add
cmp
jne
sub
mov
sub
cmp
je
and
sub
push
push
call
add
mov
sub
mov
push
call
add
call
push
call
add
push
push
push
call
add
push
call
add
sub
mov
push
push
push
call
add
and
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
sub
cmp
je
push
call
add
mov
push
push
push
call
add
push
push
call
add
push
call
add
add
and
push
push
push
call
add
push
call
add
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
and
call
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
mov
push
push
push
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
call
add
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
add
call
mov
push
push
push
call
add
mov
push
call
add
call
sub
add
mov
mov
call
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
call
add
mov
call
push
push
push
push
call
add
xor
push
push
call
add
push
call
add
cmp
je
sub
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
and
test
je
mov
xor
push
push
push
push
call
add
push
call
add
add
sub
push
push
push
call
add
sub
sub
call
call
push
push
push
push
call
add
push
push
push
call
add
add
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
push
push
call
add
add
mov
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
call
add
call
sub
push
call
add
push
call
add
lea
mov
push
push
push
push
push
call
add
mov
push
call
add
call
push
push
push
push
call
add
sub
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
call
push
call
add
mov
mov
cmp
jne
cmp
jne
add
xor
mov
cmp
je
and
add
mov
cmp
jne
mov
sub
sub
and
sub
add
add
mov
or
cmp
jne
and
cmp
jne
cmp
jne
xor
mov
add
sub
and
sub
cmp
je
mov
mov
add
add
cmp
je
cmp
je
sub
mov
mov
add
sub
and
shr
add
cmp
jne
mov
sub
or
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
sub
sub
push
push
push
call
add
call
call
mov
cmp
jne
add
add
mov
mov
add
cmp
jne
add
sub
and
mov
mov
cmp
je
mov
mov
cmp
jne
mov
add
mov
add
and
sub
sub
add
xor
mov
and
push
push
push
call
add
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
add
add
sub
or
cmp
je
mov
mov
sub
xor
sub
test
je
cmp
je
cmp
je
mov
cmp
je
add
add
xor
add
xor
mov
add
add
cmp
jne
add
pushl
push
pushl
call
add
addl
push
push
push
push
call
add
mov
and
mov
cmp
je
sub
test
je
xor
sub
xor
sub
add
test
je
add
or
call
call
mov
push
call
add
and
push
push
push
push
call
add
add
call
mov
sub
push
push
push
call
add
push
push
push
call
add
add
push
push
push
push
push
call
add
or
push
push
call
add
push
push
push
push
push
call
add
push
call
add
pop
mov
mov
push
push
push
call
add
pop
cmp
je
call
pop
sub
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
mov
push
call
add
mov
push
push
call
add
push
mov
call
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
xor
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
movl
push
push
push
push
call
add
call
sub
add
mov
test
jne
mov
sub
mov
sub
cmp
jne
mov
cmp
jne
mov
and
cmp
je
sub
test
je
mov
sub
cmp
je
sub
mov
xor
sub
cmp
jne
mov
sub
mov
sub
test
je
cmp
jne
mov
sub
add
add
or
sub
cmp
je
mov
sub
cmp
je
add
or
mov
mov
push
push
call
add
call
cmp
je
mov
add
or
add
sub
sub
mov
mov
call
push
push
push
push
push
call
add
call
mov
sub
mov
call
mov
add
sub
sub
xor
mov
sub
or
xor
sub
cmp
jne
mov
mov
sub
cmp
je
cmp
jne
cmp
je
sub
and
sub
add
sub
sub
xor
add
mov
sub
sub
xor
mov
sub
sub
sub
mov
add
and
cmp
jne
mov
mov
add
or
mov
cmp
jne
cmp
je
sub
mov
mov
cmp
je
sub
and
cmp
jne
mov
and
sub
mov
or
sub
sub
cmp
je
cmp
jne
xor
sub
cmp
je
mov
xor
cmp
je
mov
cmp
jne
mov
xor
mov
sub
sub
cmp
je
sub
sub
mov
cmp
jne
mov
add
xor
add
add
add
or
sub
add
cmp
jne
mov
and
mov
mov
or
xor
mov
mov
add
sub
cmp
je
mov
xor
add
mov
or
cmp
jne
mov
cmp
jne
add
sub
test
je
mov
cmp
jne
add
mov
sub
cmp
je
sub
mov
sub
cmp
je
mov
mov
cmp
jne
add
mov
cmp
jne
add
mov
sub
add
sub
add
add
add
sub
add
sub
or
cmp
jne
mov
test
jne
cmp
jne
and
xor
mov
mov
add
add
cmp
jne
mov
add
or
sub
cmp
je
mov
sub
push
call
cmp
jne
mov
add
mov
sub
xor
or
je
or
addl
mov
add
lea
push
push
push
call
add
call
inc
push
call
add
mov
add
sub
mov
mov
add
sub
xor
and
add
cmp
je
mov
and
or
xor
add
cmp
jne
test
jne
cmp
je
xor
mov
mov
and
sub
sub
cmp
jne
cmp
je
add
call
push
push
push
call
add
push
push
push
call
add
mov
mov
push
push
push
push
push
call
add
push
push
call
add
push
call
add
cmp
je
push
push
call
add
add
add
cmp
je
mov
sub
or
sub
mov
cmp
jne
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
call
cmp
je
and
mov
push
call
add
push
push
push
push
call
add
add
mov
push
push
push
push
push
call
add
add
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
call
add
sub
cmp
je
sub
push
push
push
push
call
add
xor
mov
call
push
push
push
call
add
and
push
push
push
push
push
call
add
call
push
push
push
push
call
add
call
and
call
push
call
add
or
push
push
call
add
add
mov
mov
xor
mov
cmp
jne
sub
add
and
mov
mov
add
add
sub
add
sub
cmp
jne
sub
sub
mov
push
push
call
add
push
push
push
push
push
call
add
call
push
push
push
call
add
mov
mov
mov
sub
sub
mov
mov
add
push
push
push
call
add
push
push
call
add
push
push
call
add
pop
mov
add
push
push
push
call
add
cmp
jne
or
call
add
push
push
call
add
pop
call
push
push
push
push
push
call
add
pop
push
push
push
call
add
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
call
add
call
push
push
push
push
push
push
call
add
push
test
je
push
call
add
call
push
cmp
jne
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
push
call
add
rdtsc
mov
sub
mov
mov
add
add
sub
sub
sub
sub
or
sub
sub
sub
mov
mov
add
cmp
je
xor
sub
and
xor
mov
add
add
and
mov
sub
add
sub
and
mov
pop
add
mov
sub
mov
sub
sub
test
je
cmp
je
cmp
je
xor
mov
sub
add
sub
pop
test
je
test
jne
sub
pop
mov
mov
test
je
and
mov
cmp
jne
cmp
je
add
add
test
je
sub
cmp
je
mov
sub
and
sub
sub
add
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
push
push
call
add
push
xor
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
call
mov
sub
cmp
je
cmp
jne
add
and
xor
cmp
je
add
mov
mov
mov
sub
sub
sub
mov
or
mov
mov
cmp
je
add
cmp
je
mov
cmp
jne
test
je
and
xor
mov
cmp
je
sub
add
cmp
je
mov
sub
cmp
je
cmp
je
cmp
je
mov
and
cmp
jne
sub
sub
mov
mov
cmp
je
add
mov
or
cmp
jne
sub
mov
mov
sub
add
add
sub
add
cmp
jne
or
mov
sub
add
cmp
je
mov
mov
mov
cmp
jne
and
mov
sub
mov
add
test
jne
mov
mov
mov
add
add
add
add
add
add
sub
test
jne
sub
mov
sub
mov
sub
add
decl
mov
add
rorl
mov
mov
sub
cmp
jne
mov
or
sub
add
cmp
jne
sub
and
or
xor
cmp
jne
mov
mov
and
cmp
jne
mov
sub
sub
sub
addl
sub
mov
xor
mov
add
sub
add
test
je
mov
sub
xor
sub
or
jmp
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
sub
push
push
push
push
call
add
pop
mov
push
push
push
call
add
sub
add
cmp
jne
push
call
add
cmp
je
push
call
add
push
push
call
add
sub
test
je
push
push
call
add
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
xor
mov
push
push
push
push
push
call
add
push
push
push
call
add
and
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
push
push
call
add
add
push
push
call
add
pop
push
push
push
push
call
add
pop
xor
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
mov
push
xor
push
push
call
add
push
push
push
push
push
push
call
add
push
call
add
push
push
push
call
add
mov
mov
add
and
sub
mov
and
sub
cmp
je
mov
add
mov
add
and
add
cmp
jne
sub
sub
mov
mov
sub
sub
sub
push
push
push
call
add
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jne
or
and
test
jne
mov
mov
add
add
sub
cmp
jne
sub
cmp
je
mov
mov
add
sub
add
sub
add
add
mov
add
push
push
push
push
call
add
push
call
add
push
test
jne
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
mov
add
sub
mov
mov
sub
cmp
je
add
add
mov
xor
sub
sub
add
cmp
jne
cmp
je
mov
mov
add
test
je
mov
mov
sub
cmp
jne
mov
add
or
xor
add
add
cmp
jne
cmp
je
mov
mov
sub
sub
add
add
add
add
cmp
je
and
call
mov
mov
sub
cmp
jne
cmp
jne
sub
mov
mov
add
push
call
add
sub
mov
sub
push
push
push
push
call
add
add
push
push
push
push
call
add
mov
push
push
call
add
push
push
call
add
mov
add
push
push
push
push
push
call
add
mov
sub
mov
add
and
sub
mov
mov
cmp
je
add
mov
xor
mov
sub
and
cmp
jne
sub
add
mov
add
mov
mov
cmp
jne
and
and
add
or
je
mov
add
cmp
jne
add
repnz
add
sub
mov
xor
addl
xor
add
jmp
push
push
push
call
add
call
call
mov
mov
add
add
add
pop
mov
mov
sub
xor
pop
mov
xor
mov
sub
and
sub
add
test
jne
add
pop
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
call
add
push
xor
mov
push
push
call
add
push
mov
push
push
call
add
push
push
push
call
add
push
call
add
xor
push
add
push
push
push
push
call
add
push
push
push
push
call
add
test
je
push
push
call
add
add
push
call
add
pop
mov
add
add
pop
test
jne
mov
push
push
call
add
push
call
add
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
push
push
push
push
call
add
push
cmp
je
push
push
push
push
push
call
add
push
call
add
push
call
push
push
push
call
add
xor
push
push
push
call
add
xor
call
mov
push
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
call
push
push
push
push
call
add
push
push
push
call
add
add
push
push
push
push
call
add
and
sub
and
push
push
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
sub
push
call
add
cmp
je
push
call
add
push
push
call
add
push
push
push
push
push
call
add
mov
or
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
and
mov
push
push
push
call
add
cmp
je
cmp
je
push
call
add
push
push
push
push
push
call
add
add
push
push
push
call
add
add
push
push
push
push
call
add
add
push
push
call
add
push
push
push
push
push
call
add
add
sub
push
push
push
call
add
push
push
call
add
cmp
je
call
mov
mov
push
push
push
call
add
or
push
push
push
push
push
call
add
sub
sub
push
call
add
pop
push
push
push
push
call
add
pop
push
push
push
call
add
push
push
call
add
pop
and
mov
add
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
call
push
push
push
push
push
call
add
push
mov
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
call
push
call
add
push
call
add
push
call
add
pop
cmp
je
mov
mov
add
cmp
jne
push
push
push
push
call
add
push
push
push
call
add
mov
call
sub
cmp
je
push
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
call
add
push
push
call
add
mov
push
push
push
push
call
add
cmp
jne
push
push
push
push
push
call
add
mov
push
call
add
sub
add
pop
mov
cmp
je
call
push
push
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
mov
add
cmp
je
call
push
push
push
call
add
call
add
push
push
push
push
call
add
pop
cmp
je
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
cmp
je
xor
xor
call
push
push
call
add
or
push
push
call
add
call
push
call
add
cmp
je
mov
push
sub
push
call
add
push
push
call
add
cmp
je
mov
call
cmp
jne
push
push
push
push
call
add
push
call
add
push
push
call
add
xor
cmp
je
push
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
call
add
add
push
push
push
push
push
call
add
call
push
call
add
mov
call
mov
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
and
call
add
mov
push
push
push
push
call
add
push
push
call
add
call
sub
pop
mov
cmp
je
mov
call
push
push
push
push
call
add
push
push
call
add
mov
cmp
je
sub
call
push
push
call
add
or
sub
or
pop
mov
push
push
call
add
pop
mov
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
add
push
push
push
push
call
add
push
push
push
call
add
push
call
call
push
cmp
jne
push
push
push
call
add
cmp
jne
push
call
add
push
push
push
call
add
push
push
push
push
call
add
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
push
call
add
pop
push
call
add
pop
push
push
push
push
call
add
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
cmp
je
push
push
call
add
push
push
call
add
push
push
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
push
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
call
add
xor
sub
push
push
call
add
push
push
push
call
add
push
push
push
call
add
pop
push
push
push
push
push
call
add
pop
mov
sub
call
push
push
push
call
add
sub
xor
cmp
je
call
mov
push
call
add
or
cmp
jne
call
push
call
add
push
call
add
push
push
push
push
call
add
push
push
call
add
mov
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
call
mov
push
call
add
pop
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
call
xor
push
push
call
add
mov
push
push
push
push
push
call
add
mov
call
push
push
push
call
add
push
call
add
pop
mov
sub
pop
call
pop
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
call
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
cmp
je
cmp
je
mov
call
push
push
push
push
call
add
push
push
push
call
add
add
push
push
call
add
push
push
push
call
add
push
push
push
call
add
and
call
call
mov
push
push
push
push
call
add
push
call
add
cmp
jne
push
push
push
push
call
add
call
pop
mov
sub
mov
push
push
push
push
push
call
add
pop
sub
push
call
add
pop
or
xor
cmp
jne
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
push
mov
mov
push
sub
sub
add
push
xor
sub
xor
add
and
xor
sub
and
add
and
add
xor
and
mov
add
mov
sub
mov
sub
or
mov
sub
and
sub
and
mov
sub
sub
or
and
mov
mov
cmp
je
or
cmp
je
mov
add
mov
sub
sub
sub
sub
add
cmp
je
sub
or
mov
mov
sub
sub
and
cmp
jne
sub
or
pop
mov
mov
sub
cmp
je
mov
add
xor
xor
sub
cmp
je
test
jne
sub
mov
mov
sub
sub
add
or
or
cmp
je
test
je
cmp
je
sub
sub
sub
mov
sub
xor
cmp
jne
mov
mov
sub
cmp
jne
cmp
je
sub
cmp
jne
mov
mov
and
add
sub
xor
cmp
je
or
sub
pop
mov
sub
cmp
je
test
je
cmp
je
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
add
cmp
je
add
cmp
jne
add
cmp
je
xor
sub
sub
and
or
add
sub
add
pop
mov
mov
add
add
leave
ret
