sbb
and
or
popf
fwait
jge,pt
sbb
pop
in
scas
in
jle
aam
or
out
frstor
jge
mov
sub
stos
imul
sbb
ficompl
xchg
sub
inc
test
mov
push
xchg
jae
ret
mov
xchg
jno
push
adc
push
sbb
adc
dec
jns
or
out
test
lods
ljmp
and
int3
push
xchg
dec
cltd
aaa
jmp
push
and
int3
xor
inc
or
cmp
or
cmpsl
xor
stos
test
clc
mov
mov
sbbl
mov
dec
sub
scas
xchg
aaa
fcmovu
xchg
jmp
int
and
xor
and
dec
xor
push
or
and
lcall
lret
fnsave
js
xor
mov
xlat
push
les
in
mov
xor
and
mov
ficoms
pop
fiadds
cs
sub
mov
dec
inc
mov
int3
sbb
sub
test
pop
pop
inc
sahf
out
in
mov
jne
test
mov
pop
sbb
jae
adc
cld
mov
adc
xor
cli
stc
enter
or
ljmp
cmp
lods
push
inc
test
xchg
inc
xchg
and
jecxz
int
sahf
sbb
xor
movsl
lcall
mov
cmp
loopne
jne
push
jno
xor
rcrb
or
cmp
mov
and
pushf
lods
mov
fiadds
outsb
test
adc
int3
fs
sbb
and
test
jmp
stos
push
push
pop
les
shrl
mov
jecxz
dec
cld
aas
insb
js
mov
mov
insl
pop
ret
sub
jp
out
lahf
sub
push
add
sub
fndisi(8087
mov
dec
lea
jmp
aas
xlat
cmpsb
pop
mov
xchg
lods
daa
nop
cwtl
mov
repz
pop
int
gs
loope
mov
in
jmp
xor
push
or
dec
aad
shlb
mov
sub
cld
insl
dec
test
data16
in
stc
cltd
or
inc
hlt
test
mov
aam
fs
push
xchg
jo
loopne
mov
or
jne
shlb
das
pop
jnp
test
push
or
sti
inc
mov
fdivrl
sub
cld
add
testl
sbb
or
or
cmp
popf
cmp
lods
orl
fs
in
xchg
repnz
push
and
xchg
add
push
es
data16
pop
rolb
out
es
and
mov
movsb
pusha
mov
pop
sub
mov
int
shlb
ror
adc
cmpsl
and
testb
imul
push
mov
push
sbbb
sbbl
sub
pop
out
mov
mov
cmpb
arpl
dec
cmp
int
cmpsb
jecxz
push
xlat
jno
sbb
or
sbb
imul
sub
inc
mov
dec
aaa
sub
hlt
mov
push
stc
or
fnsave
push
lods
or
xor
pop
and
bound
mov
popa
xchg
xlat
int
xchg
mov
enter
mov
in
adc
mov
push
jecxz
mov
jnp
adc
fsubs
xorb
insb
push
loope
sbb
cwtl
push
lods
test
add
pushf
jl
mov
jmp
mov
add
out
inc
into
jecxz
xor
out
fs
fdivl
mov
rcll
xchg
xor
cmpsb
pushf
xlat
adc
pop
test
enter
xor
bound
daa
push
insb
leave
out
pop
xchg
mov
mov
sub
daa
jecxz
fisttps
outsb
add
add
push
xchg
rclb
inc
xor
dec
pop
fidivrs
mov
fwait
ret
jns
inc
cltd
cltd
pushf
test
arpl
subl
mov
sbb
call
dec
fcoml
push
movsb
lret
leave
scas
pop
and
mov
dec
or
adc
aaa
popf
push
loope
mov
iret
mov
pop
dec
mov
mov
outsb
push
sarl
adc
and
rcll
addb
push
jbe
nop
jns
adc
cwtl
out
loop
pop
push
sbb
mov
push
xor
and
cmp
xchg
lea
dec
mov
pop
cmc
adcl
sbb
mov
sub
das
lsl
jbe
xchg
mov
xor
xchg
stos
stc
xor
mov
dec
jle
jecxz
cld
jl
mov
sbb
sbb
imul
sti
test
imul
push
pop
inc
jnp
sbb
push
adc
push
pop
cwtl
in
jp
fadds
jecxz
or
push
mov
popa
mov
sub
and
fistl
mov
cmp
xchg
push
push
outsl
rolb
sbb
push
cmp
push
movsl
xor
add
pop
xchg
call
cwtl
cmpsb
and
loopne
jo
fwait
mov
jo
inc
nop
push
loope
push
mulb
fisttpll
pop
mov
sbbl
in
add
cmp
push
pushf
xor
dec
sti
add
divl
notrack
jbe
cmp
dec
addr16
imul
push
and
stos
xchg
xor
fldt
mov
incl
mov
dec
cmc
iret
dec
pop
pop
insl
cmp
lahf
iret
shll
hlt
or
cmc
arpl
insl
cmpsl
push
dec
mov
cld
pop
inc
xlat
lret
lea
jns
push
int
jb
std
cmpl
cmp
clc
jmp
rolb
inc
test
loop
pop
push
out
mov
lea
icebp
loopne
jmp
ljmp
jbe
cmpsl
and
jp
into
mov
loop
daa
imulb
mov
inc
fildl
pop
rolb
imul
movsl
xchg
xor
dec
pop
jns
pop
mov
mov
stos
mov
adc
jle
and
fisttpll
flds
lds
cmp
cmpsl
loope
and
xchg
mov
arpl
xchg
neg
lods
sarl
cmp
lcall
andl
cmp
test
pushf
cmp
sub
gs
call
in
xchg
adc
add
mov
dec
mov
aam
hlt
or
adc
inc
or
pop
sahf
daa
test
jp
loop
movsb
aaa
sti
cld
rcl
nop
push
les
push
push
cmp
cmp
jnp
daa
push
sarb
movsb
and
sbb
aaa
inc
add
sbb
add
lcall
mov
mov
adc
fimuls
in
xchg
pop
aas
loope
xchg
cmpsb
std
daa
mov
add
add
leave
mov
mov
rorb
jmp
mov
push
rcrb
push
push
mov
push
dec
mov
stos
add
out
cmp
mov
jne
mov
push
add
push
xor
std
mov
xchg
mov
mov
frstor
arpl
ja
inc
pop
lods
mov
lret
adc
call
or
in
sub
xchg
lods
sbb
sbb
sahf
inc
add
lock
push
insb
pop
mov
cmp
std
stos
popf
mov
mov
jns
mov
lcall
dec
push
or
and
mov
cltd
cmc
xor
pop
xchg
jmp
adc
rcrb
and
aam
adc
jge
movsb
mov
and
add
cmp
mov
push
lock
adc
jmp
push
outsl
sub
popa
mov
and
into
rorl
inc
xchg
or
arpl
in
dec
mov
sub
xor
shll
das
sbb
mov
add
lods
or
filds
sub
shrl
fs
aaa
xchg
test
lret
and
or
xlat
push
dec
bound
aad
mov
mov
dec
movsl
mov
icebp
and
or
mov
call
pushl
xlat
dec
mov
fsubrs
sub
mov
cmp
jp
jne
mov
outsb
push
jbe
mov
testb
pop
and
inc
ds
mov
mov
lds
and
popf
cld
pop
scas
pop
daa
cmp
ds
imull
pop
xor
shrl
aas
lea
pusha
outsb
imul
jbe
cmp
sub
xchg
ret
ja
adc
test
loope
mov
lret
sbbl
dec
mov
push
mov
and
adc
shrl
iret
addb
lock
je
cwtl
or
faddl
daa
sbb
fistl
and
lea
out
cwtl
imul
call
sbb
xor
or
ret
fstpl
cmc
xchg
in
mov
lods
jecxz
jmp
or
pop
or
incl
mov
js
xchg
leave
xchg
or
stc
subl
enter
push
insl
loop
into
cwtl
pop
ret
rorl
fwait
or
loop
loopne
test
stc
icebp
in
mov
sti
pop
punpcklbw
cld
inc
jecxz
jmp
in
push
pop
mov
lcall
stc
and
js
dec
loope
cmc
sub
push
scas
lcall
int
jo
jge
add
inc
aaa
mov
mov
test
adc
aas
inc
popf
push
cmp
pushf
cmp
in
test
or
in
mov
sub
inc
jbe
addl
std
insl
or
jae
mov
je
xchg
sbb
jmp
sub
sbb
stos
test
mov
aam
xor
dec
fisubs
mov
mov
cmc
sbb
dec
jle
negb
or
push
por
ret
mov
jp
adc
xchg
jle
push
addr16
sbb
lcall
mov
push
mov
testb
xchg
pusha
int
jne
mov
jae
push
xchg
jle
adc
int
add
fstpl
sub
mov
jno
out
jo
add
xor
call
xchg
or
jne
jno
inc
xlat
mov
ret
scas
icebp
scas
mov
jl
fcoml
sbb
xchg
push
sub
sahf
test
jmp
mov
add
dec
stos
insb
into
lea
sbb
mov
xor
imul
sbb
sub
push
xchg
fs
sbb
jle
pop
pushl
cld
push
or
loope
inc
daa
jb
or
and
mov
xor
mov
idivb
push
cmp
jecxz
out
movsb
and
pop
push
pop
pop
icebp
stos
testb
imull
pop
fstpl
scas
sbb
call
or
adc
xchg
cmc
pop
adc
push
push
jl
pop
jo
aam
mov
clc
loopne
int
add
pushf
and
mov
addl
mov
pop
xlat
imul
sbb
stos
mov
adc
out
popf
rcrl
sbb
inc
js
iret
lret
lahf
aaa
pop
sbb
mov
or
mov
imul
jno
cmpsb
push
and
add
inc
cmpsl
cmc
pop
xor
push
mov
int3
cmc
fcomi
dec
inc
jo
xchg
fwait
fwait
adc
mov
pop
jae
cmp
cmp
fldcw
fdivp
fwait
addr16
inc
popf
lods
dec
sub
jne
push
in
cmpl
jl
mov
shrl
rcrb
je
sub
mov
insl
and
pusha
mov
and
lret
cmpsb
fldenv
xchg
mov
fisubrs
mov
je
fdiv
push
adc
xchg
or
negl
xor
push
fisttpl
cmpsl
ret
arpl
push
dec
mov
xlat
pop
int3
push
dec
or
mov
or
xchg
es
mov
jecxz
cmp
leave
jo
mov
dec
repz
loopne
sub
add
push
dec
decb
mov
mov
cltd
and
mov
push
arpl
jbe
inc
jp
sub
sarb
add
and
divb
sahf
je
stc
mov
rclb
and
and
js
lods
mov
xchg
cmp
mov
pop
mov
pop
adc
ja
mov
in
cltd
inc
jne
incb
jae
movsb
ret
into
mov
xor
stos
dec
fcomps
stc
mulb
ja
mov
jl
stc
cmp
jb
xchg
stos
sub
popa
out
push
lds
imul
xchg
push
fcompl
in
sarl
into
xchg
add
fsubrl
roll
mov
inc
les
lock
icebp
fwait
pop
mov
ljmp
inc
push
scas
rcrl
push
push
bound
xchg
xchg
mov
test
imul
inc
push
sub
mov
fstpt
cmp
imul
rorl
or
fdivs
lahf
cmpsb
adc
sbb
xchg
push
mov
jmp
push
out
cltd
flds
mov
leave
into
xor
inc
insl
and
mov
and
and
fidivrs
lea
or
rorl
mov
cmp
xchg
sbb
jp
out
jl
and
cmp
pop
mov
cmpsl
jae
int
dec
jge
dec
stos
in
or
aas
dec
mov
pushf
inc
fcompl
lods
clc
std
add
add
clc
iret
mov
jae
and
outsl
cwtl
jne
pop
sbb
dec
and
fsubl
hlt
out
imul
xchg
movsl
iret
dec
add
xchg
shlb
cli
dec
enter
adc
mov
mov
cld
jmp
cmc
orl
push
aad
ljmp
ja
jmp
push
mov
xchg
lock
cli
and
adc
mov
jmp
pop
push
fdivr
insl
frstor
push
mov
push
aad
pop
jnp
sbb
std
ss
push
pop
adc
lret
scas
and
lock
test
xchg
fsubl
pop
push
mov
mov
les
pop
popa
mov
in
add
test
xchg
fdivs
shl
outsl
test
rcrl
lahf
rcrb
fdivs
mov
test
and
js
in
je
out
rcrb
popf
fimull
mov
lds
stc
and
sub
sbb
inc
jns
cmp
cmp
sbb
data16
dec
into
out
mov
xlat
sbb
and
psllw
iret
cmp
je
xor
cmpsl
movsl
repnz
adc
lds
cmpsl
sub
cs
loop
js
aas
nop
or
mov
cmp
push
or
shll
and
movsb
jno
mov
addb
mov
stc
jp
pop
push
and
and
ror
stos
pop
dec
mov
fs
lods
lds
mov
shl
xchg
mov
out
add
pop
lcall
imul
xchg
dec
in
xor
daa
cmp
aad
pushf
push
sub
cmp
sub
rorl
mov
adc
cmp
pop
push
loopne
dec
pusha
add
je
jecxz
lock
pop
pop
cmpsl
add
shrb
add
xor
dec
dec
jno
stos
add
or
popf
sbb
lea
jecxz
les
arpl
scas
rolb
mov
mov
jns
inc
xchg
xor
jno
bnd
or
test
ljmp
add
xchg
jnp
inc
xor
push
je
xor
test
xor
push
movsb
stc
mov
mov
sbb
cwtl
jl
xor
aam
arpl
test
fidivs
xchg
push
adc
insl
cld
decl
jl
mov
dec
fdivp
sti
push
stos
and
stos
dec
je
add
mov
cmp
cmpsb
lods
hlt
sbb
or
mov
popa
jl
mov
push
int
mov
icebp
xlat
mov
sbb
fisttpl
add
cmp
pop
adc
pop
xor
adc
mov
js
sbb
mov
mov
aad
daa
pop
or
xor
xchg
xchg
inc
push
mov
dec
jnp
cli
pop
push
mov
aad
pop
sub
cmp
adc
stos
mov
xor
inc
andl
mov
out
dec
aaa
les
pop
mov
sub
imul
mov
rclb
cvtdq2ps
adc
fstps
jbe
out
jp
test
je
fs
push
loopne
lods
lock
mov
xchg
sub
and
inc
test
fwait
pop
in
jae
jg
mov
pop
outsb
scas
ret
xor
lods
sbb
push
dec
dec
mov
shl
jmp
inc
insl
rcrb
shll
xor
jle
sub
xor
dec
push
push
sbb
imul
repz
nop
and
xchg
icebp
stos
and
jp
ljmp
sbb
into
cmp
bound
sbb
ss
adc
push
xor
inc
mov
sub
out
clc
pop
insb
mov
sub
mov
mov
js
jo
or
aad
out
mov
std
or
dec
pop
mov
dec
cmp
out
sub
pop
push
lock
sbb
sbb
cmp
pop
mov
loopne
xorb
mov
fsubrl
sbb
mov
dec
pop
or
pop
xchg
js
popa
mov
pop
or
stos
pop
inc
sub
fstp
pushf
or
pop
in
out
ds
inc
adc
fdivr
xchg
push
addl
arpl
popa
nop
testl
fsubs
insl
sub
or
inc
cmp
pop
mov
repz
pop
jmp
jmp
cmpsl
mov
hlt
xor
stos
pop
inc
xlat
jecxz
adc
roll
dec
repnz
fucomip
adc
adc
fcmovnbe
js
jb
inc
es
adc
fists
push
mov
push
lods
test
push
jecxz
inc
cmc
cmp
add
pop
loope
test
repz
pop
inc
sbb
push
sub
cmp
pop
ljmp
out
nop
dec
xchg
xchg
das
fwait
pop
xchg
push
inc
lock
rolb
and
test
adc
jbe
xor
cmpsl
jmp
inc
xchg
lea
pop
mov
lahf
into
cmp
in
in
or
xlat
aas
cmpsb
jle
bound
xlat
mov
dec
fs
jge
xchg
pop
fwait
arpl
sahf
sbb
sbb
and
push
jp
sti
sub
push
xchg
and
jp
sbb
cli
xor
cmpsl
mov
sbb
fdivl
mov
and
cmp
ja
jns
push
enter
ret
add
sub
loope
leave
pop
es
lcall
mov
stos
iret
mov
sub
test
dec
pop
movsb
mov
popa
mov
lret
fidivrl
xchg
fs
dec
sub
inc
pop
int
mov
inc
mov
incl
fldcw
pop
fisttps
xchg
xchg
jecxz
rcrb
clc
jg
mov
andb
sub
jo
xlat
shll
in
mov
jmp
lcall
dec
mov
or
subl
or
push
aad
iret
inc
add
subb
cmp
inc
add
mov
das
add
pmovmskb
dec
movsb
fdivl
pop
push
lahf
leave
fisttps
xchg
repnz
push
out
sbb
inc
fisttpll
mov
bound
fnsave
ja
and
call
mov
mov
lret
xor
adc
loop
adc
fcmovbe
push
arpl
popf
lock
mov
or
inc
test
xchg
aam
mov
sbb
sbb
leave
out
dec
push
data16
cmp
cmp
iret
imul
or
adc
mov
nop
call
mov
fisubl
vshufps
fidivs
frstor
popa
cld
punpcklbw
imul
cld
mov
sahf
sbbb
xor
push
jmp
adc
mov
sub
ss
fldenv
and
cwtl
mov
or
std
pop
int3
push
inc
repz
iret
add
jno
mov
iret
rolb
mov
into
cmp
enter
cmp
or
pop
enter
out
not
dec
popf
cmpl
push
outsl
in
mov
cmp
inc
cmp
and
cmp
inc
cltd
dec
sbb
psubw
add
in
outsb
lods
shll
daa
cs
or
mov
xorb
jnp
add
lock
shl
or
fiadds
lods
es
push
add
test
enter
pushf
rcl
sub
nop
cli
in
cmp
jge
es
lock
jo
movsl
adc
and
dec
push
ss
jae
mov
int
add
fdivl
repnz
or
pop
push
fxch
pop
test
je
lds
fistl
fdivrl
out
repz
fwait
jbe
mov
rolb
loop
adcl
or
loop
clts
iret
mov
andps
out
pop
xchg
repz
xor
mov
sub
lods
xlat
xchg
mov
fdivrl
push
xchg
ret
je
mov
mov
fdivr
lds
sbb
jbe
pop
xor
add
sub
outsl
or
fstp
stos
mov
ljmp
paddw
cmpsb
lret
sahf
js
add
add
mov
dec
cmp
out
cmp
adc
lds
jecxz
addb
sbb
mov
sub
leave
addr16
outsb
xor
in
and
inc
cmp
or
mov
pop
lahf
jl
jmp
int3
fisubl
loop
jbe
repz
pop
addr16
std
and
pop
pushf
hlt
mov
into
mov
shll
or
ds
adc
enter
xor
or
test
jecxz
dec
inc
push
add
xor
dec
jb
mov
inc
jp
pop
pop
es
add
inc
push
jo
xchg
inc
xchg
in
jnp
mov
insb
loope
sti
push
aad
dec
pop
and
cmpb
popf
sbb
cli
cmc
dec
test
xchg
popf
inc
stos
inc
hlt
pop
mov
mov
sub
cmp
jns
mov
sbb
es
inc
and
sti
es
and
push
popa
popf
aas
repz
mov
aam
fidivs
jp
mov
or
jbe
mov
sub
data16
mov
cmp
out
jnp
movsb
in
bound
jbe
dec
jl
add
sub
inc
je
cwtl
push
jmp
fiadds
jp
jecxz
mov
inc
and
fwait
cmp
scas
add
iret
adc
daa
xchg
test
mov
mov
mov
outsl
pop
jbe
pop
and
repz
mov
movsb
xlat
add
pop
icebp
pop
jmp
in
mov
dec
push
inc
adc
pop
mov
leave
pop
loopne
inc
aaa
decb
sbb
hlt
lret
lret
test
jecxz
inc
cmp
loop
push
cld
movsb
inc
enter
xlat
add
bound
mov
hlt
adcb
or
and
ds
cmp
mov
jns
das
fldt
push
loopne
fsubs
pop
into
insl
sbb
xor
xchg
scas
cmp
inc
lret
xchg
push
test
int3
cs
jno
or
cli
js
push
int
xchg
pop
mov
movsl
jb
cli
mov
pop
ljmp
mov
inc
aad
scas
orb
mov
es
hlt
arpl
mov
pop
adc
jle
xor
or
or
mov
sub
push
pop
inc
pop
jmp
adc
movsl
sbb
jmp
sbb
mov
jne
cs
and
sbb
adc
pop
arpl
jge
dec
lea
in
fistpl
or
xchg
inc
leave
hlt
mov
jmp
lret
mov
gs
xor
dec
or
sub
cld
mov
lahf
je
dec
aam
je
daa
iret
cmp
mov
movsl
sbb
jno
sbb
ret
push
je
pop
sbb
rcr
scas
adc
dec
neg
mov
jnp
mov
rorb
xor
dec
inc
test
loopne
and
aas
imul
add
cmp
in
add
xor
pop
pop
ja
iret
shl
popf
movsl
and
mov
sbb
xlat
sbb
xchg
fsubrs
out
jge
ficomps
das
xchg
sbb
xor
in
mov
push
inc
test
and
dec
pop
mov
sbb
popa
jo
int3
out
add
inc
cmp
sub
movzbl
ljmp
mov
inc
inc
jns
popf
cmpsl
fimuls
jmp
mov
sbb
cmp
fsubrs
mulb
lods
cli
dec
xor
mov
addb
xor
pop
and
sahf
in
sahf
insb
xlat
clc
lods
sarl
clc
add
xor
mov
add
push
push
sub
push
cmp
repz
repnz
xor
sub
lahf
aas
ds
and
jae
imul
or
xor
dec
mov
pop
testl
pop
out
or
aas
sbb
mov
xchg
cmp
sub
and
stos
jae
inc
pop
jecxz
mov
std
outsb
mov
ret
add
xor
push
xor
loope
push
xchg
xchg
xor
js
test
in
repnz
ror
cmp
ret
xchg
outsb
sahf
ljmp
add
insb
xchg
cld
fwait
sti
fucomip
movsl
adc
in
and
xchg
jp
push
testb
dec
in
fstpt
ja
mov
xor
xchg
sarb
addr16
sub
adc
mov
shlb
sbb
out
gs
add
push
mov
insb
mov
cwtl
pop
shr
and
mov
sub
loope
add
dec
adc
bound
add
inc
adc
mov
cmp
test
jmp
in
jno
mov
mov
and
jae
insl
out
sbb
add
mov
push
cmp
or
into
test
inc
xchg
jmp
pusha
cs
mov
cs
data16
int3
in
test
or
pop
push
xchg
fstl
mov
cmp
lods
add
jne
roll
sahf
imul
xchg
arpl
push
xchg
imul
or
xchg
es
xchg
nop
repz
notl
push
push
mov
jb
xchg
and
fiadds
mov
xor
mov
jns
sbb
push
pop
lock
pop
lret
push
mov
adcb
xchg
loop
arpl
push
adc
jmp
enter
ds
mov
jo
fcoms
push
lahf
mov
xchg
popf
xor
fcomi
adc
ja
icebp
cmp
es
sbb
pop
add
out
into
out
or
cmp
jno
rorl
jg
pop
jbe
pop
movsb
stos
jnp
outsb
repnz
into
xchg
add
push
dec
dec
add
mov
in
push
shrl
rcrl
lea
das
fiaddl
cmpsl
and
stos
inc
shl
pop
test
stos
addb
mov
xchg
jg
out
and
push
stos
loopne
repz
popa
jne
es
nop
gs
jae
aas
out
jp
ret
push
push
jmp
add
sbb
cmp
mov
ficomps
aad
push
push
xchg
mov
xlat
lcall
xchg
push
push
lcall
outsl
jecxz
or
lea
cmp
fstps
mov
and
addb
repz
enter
jg
and
pop
ror
dec
add
xchg
cli
push
xor
dec
in
scas
lock
xor
fisubl
add
lods
jl
pop
or
nop
dec
mov
pop
xchg
into
adc
gs
adc
cli
fstpt
movsb
or
in
shrl
jg
mov
xor
addl
mov
lahf
push
adc
mov
je
push
out
test
loope
daa
fidivl
aaa
rorb
pop
jmp
out
adc
and
adc
dec
mov
gs
mov
xchg
dec
xchg
dec
pop
xchg
mov
jae
imul
pop
dec
jp
insb
daa
in
int3
lret
push
jns
push
ret
xor
fwait
or
jecxz
mov
mov
pop
fwait
jb
push
repnz
out
fcoml
insl
gs
arpl
out
xchg
jmp
dec
aaa
mov
popf
inc
clc
les
sahf
dec
or
ja
mov
dec
insb
pushf
xchg
imul
pop
in
push
test
xchg
les
jle
mov
mov
les
mov
inc
in
mov
add
lret
add
cmpsb
out
xor
jns
and
imulb
add
lds
lahf
out
outsl
scas
pop
fsubs
daa
jnp
mov
lock
addr16
pop
mov
jnp
loop
movsl
cs
mov
mov
repz
adc
popf
pop
xor
sbb
jg
leave
xor
mov
cmovs
push
pusha
pop
or
pop
popf
xchg
mov
idivl
xor
mov
ret
insl
aam
cmc
xor
repz
outsl
cmp
or
jmp
mov
int3
lds
test
jg
test
pop
xor
popa
xchg
imul
js
cmpsb
jnp
push
lret
dec
adc
jne
testb
sbb
frstor
sbb
ror
data16
popf
aaa
iret
lret
adc
adc
jno
shr
mov
pop
pusha
scas
mov
aas
data16
jmp
and
sub
jp
jns
in
sbb
jle
fiadds
push
out
xchg
clc
ss
add
insl
add
pop
mov
loopne
cld
and
jl
push
jae
repz
aaa
stos
out
mov
test
adc
data16
mov
inc
mov
dec
fisttpll
test
leave
and
jl
pop
adc
sub
int3
cmc
sub
push
addr16
or
aas
lods
lahf
mov
fstps
bswap
xchg
gs
stc
pop
in
mov
xchg
sbb
and
mov
lcall
testl
jle
jl
rcr
cmp
jbe
pop
inc
hlt
push
cmp
clc
mov
cmp
inc
mov
add
leave
push
inc
xchg
outsl
loope
jg
pop
mov
xor
adc
xor
dec
push
jb
sbb
je
ss
sbb
sub
sbb
jecxz
dec
sub
jne
fmull
jl
movsb
mov
push
incb
dec
data16
xor
lcall
mov
pop
ja
gs
inc
int
loop
add
fs
out
add
das
daa
icebp
mov
and
inc
out
outsl
lds
xchg
pop
push
ljmp
push
sbb
xchg
scas
mov
scas
xchg
test
dec
sti
or
hlt
xor
leave
dec
pushf
mov
in
xchg
nop
and
mov
out
and
shrl
xorb
cmp
jg
jle
sti
xor
add
jp
pop
fidivs
mov
inc
mov
pop
stos
outsl
sub
jns
pop
dec
adcb
mov
in
or
icebp
scas
mov
or
out
add
cltd
jb
push
scas
inc
push
pop
out
pop
adc
lods
lea
push
sbb
outsl
pushf
insl
call
paddusb
sti
data16
cmc
loopne
cmpsl
mov
jmp
inc
out
insb
mov
and
loop
fidivrs
pushf
lahf
out
mov
lret
nop
push
shll
or
loop
movsl
xlat
pushf
or
cltd
es
adc
faddl
sarb
or
stos
add
mul
sub
xor
js
mov
add
int
fwait
iret
add
or
rcrl
cli
dec
lret
cs
jp
lret
sub
movsl
stos
clc
pusha
sbbl
and
in
lret
mov
cmp
push
fwait
scas
in
out
pop
out
pop
xchg
cmp
mov
push
jbe
out
xlat
std
mov
jge
mov
mov
or
insb
outsb
xor
subl
hlt
into
mov
cld
lcall
nop
pop
outsb
mov
js
fisubl
imul
and
faddp
sahf
aas
jns
fwait
jo
dec
mov
inc
jecxz
add
push
nop
pop
lcall
ds
sbbl
ss
jo
jo
jp
dec
not
stos
cmpsb
push
pop
adc
sub
adc
pop
or
cmp
jno
pop
sub
repnz
cmp
mov
ja
sub
push
inc
mov
add
insl
inc
jae
or
dec
pop
jg
jp
sti
scas
mov
adc
lret
push
jg
add
stos
lods
stos
xchg
xchg
mov
sahf
add
push
add
pop
roll
dec
and
xchg
jo
mov
xchg
test
and
lods
out
cmp
mov
sbb
mov
mov
push
dec
lea
mov
outsb
pop
adc
bound
xchg
cmpsb
sti
xchg
cmpl
push
add
xor
and
addr16
out
sbb
mov
cltd
dec
popa
out
mov
stos
mov
out
adc
mov
out
mov
or
icebp
fsubs
fnstsw
and
lods
jb
inc
data16
cmp
jno
and
add
pop
daa
jecxz
test
daa
push
out
ljmp
adc
lret
cmpsb
test
ss
and
push
cmc
into
sbb
iret
dec
push
das
iret
scas
or
loope
loop
mov
push
cmp
or
push
jbe
popf
push
leavew
and
outsl
daa
popf
push
mov
add
gs
fs
js
push
cmpsb
aad
ja
push
jg
jle
sti
imul
sti
orb
lock
push
mov
xor
aas
dec
fmulp
and
xchg
popf
inc
mov
clc
jmp
aad
mov
add
add
stos
xor
into
sbb
clc
dec
stos
icebp
or
rolb
cmpsb
in
inc
in
fnstsw
and
dec
bound
mov
sbb
xchg
pop
jne
divb
bound
outsl
ss
imul
loope
cli
outsb
in
jg
sbb
ret
fs
xor
sub
addr16
mov
add
add
iret
stos
pop
mov
and
lock
int
call
movsb
sahf
cs
mov
arpl
or
or
push
adc
cmpsl
add
out
icebp
and
lods
push
fistpll
lea
fs
repz
bound
pop
or
mov
mov
mov
movsb
and
dec
nop
or
inc
push
cmp
and
call
xor
xchg
jne
and
cld
fabs
mov
jl
cltd
mov
or
jns
mov
cmp
xchg
and
dec
out
clc
jle
je
xor
lret
and
adc
jns
and
mov
pop
mov
popa
subb
aas
jle
push
arpl
or
outsb
lea
clc
lahf
or
in
jp
add
orl
lea
xchg
dec
mov
adc
insb
pop
jno
mov
dec
jecxz
fldenv
and
xlat
jb
jo
xor
inc
xlat
daa
adc
mov
cmpb
test
or
dec
xor
inc
notl
push
pop
int
lods
arpl
cmc
xchg
pop
mov
cmpsb
movsl
jae
gs
add
pop
xor
rcr
adc
pop
cld
jecxz
shlb
stc
loope
cmp
test
popf
lret
jne
add
daa
push
mov
dec
sub
adc
movsb
aaa
addr16
push
jnp
and
test
aas
js
cmp
sub
add
into
mov
mov
jb
into
sub
sub
push
out
add
cmpsl
push
pop
rclb
fs
xchg
ds
inc
fisubs
js
call
aas
cmpl
mov
roll
rcll
mov
pop
ret
pop
jne
mov
lret
lret
pop
sub
sti
loopne
popa
fdivrp
xchg
fiaddl
add
aam
sub
js
pop
mov
popf
or
mov
xchg
cmp
je
test
jbe
xchg
dec
ja
in
incl
push
shlb
lods
roll
mov
mov
dec
dec
mov
ja
mov
adc
mov
scas
lret
in
mulb
push
lret
movb
push
sub
lea
inc
mov
aad
or
xchg
jno
jg
and
lods
cmpsb
std
stos
mov
add
or
adc
testb
push
mov
jo
call
imul
fsts
sub
sbbb
lret
pop
addr16
cmc
outsl
imul
daa
xor
cwtl
out
mov
add
sub
mov
sbbb
cmp
xor
scas
dec
cld
xorb
pop
and
push
push
xor
in
xchg
mov
inc
adc
fcoml
rorb
lods
sbb
idiv
hlt
hlt
pop
fcmove
or
test
jl
mov
aaa
xchg
push
int3
rorl
cmp
cmp
lock
outsl
ret
ss
mov
dec
leave
xchg
mov
sbbb
pop
lahf
mov
notb
sub
xchg
loop
aad
pushf
sbb
jg
jb
cmc
xorl
mov
dec
aas
fdivrp
scas
mov
out
mov
cld
shll
push
add
xor
fadds
xor
cmpsb
xchg
pop
sbb
stos
xor
ret
pushf
mov
or
sub
popa
paddusw
fsubr
add
out
adc
aas
push
in
lea
and
int3
jg
pop
adc
aam
add
loopne
ljmp
jecxz
ficompl
aaa
mov
jae
mov
mov
loopne
push
cmp
or
fst
ljmp
push
and
mov
sarb
lahf
faddl
xchg
jnp
inc
imul
push
add
repnz
mov
mov
jmp
popf
mov
js
push
out
pushl
outsl
and
mov
ljmp
ljmp
cwtl
mov
jg
pop
idiv
push
pop
pop
or
imul
mov
mov
ss
shlb
repnz
pop
daa
sbb
mov
inc
mov
add
jmp
js
sub
push
mov
inc
loop
dec
dec
pop
and
mov
mov
dec
scas
jne
lret
fwait
adc
popa
and
gs
inc
add
fwait
movsl
jb
sub
cmp
xchg
adc
pop
mov
xor
mov
xor
popa
jne
cld
push
fnstcw
es
xor
lea
xchg
sbb
xchg
clc
mov
inc
mov
mov
lds
mov
shlb
cmc
fidivl
and
xor
mov
in
mov
pop
push
sub
fistpl
fcmove
fisttpl
mov
aaa
push
jl
push
repnz
sbb
inc
jmp
dec
ficoml
fadds
pop
jp
cs
into
jmp
cmp
lret
mov
push
sub
inc
cld
mov
xor
and
int3
lods
dec
mov
xchg
dec
jecxz
adc
push
mov
inc
xchg
rorl
xorb
push
mov
and
jl
mov
push
or
and
cmpsl
push
mov
dec
jmp
mov
mov
xor
lods
pop
xor
and
ret
sbb
aad
subl
bnd
ja
mov
mov
or
daa
cmpsl
js
push
scas
jo
dec
lods
lock
movsl
jl
or
dec
pop
sub
pop
adc
adc
rolb
sbbl
jbe
push
ret
mov
inc
lods
repz
mov
jp
testb
mov
sbb
inc
jecxz
cmp
push
push
movsl
mov
sub
mov
mov
popa
aad
mov
xor
mov
stc
sbb
pop
les
and
pop
icebp
xor
xchg
add
outsb
loop
mov
sub
outsl
nop
mov
jns
pusha
stos
aam
movsl
jo
test
mov
mov
xor
xor
les
push
jl
stos
rcrb
xchg
add
cmp
pop
mov
dec
inc
loop
add
ret
insl
add
fwait
rcr
ss
push
es
add
xchg
dec
mov
pusha
fisubl
das
dec
cltd
add
cmpsb
clc
in
push
fimuls
mov
aas
and
in
les
mov
xchg
jecxz
and
cmpsl
sub
call
les
in
movsl
in
shll
daa
jl
cmpsl
hlt
and
ljmp
les
cmp
and
lods
cmp
jmp
scas
loope
lahf
dec
lahf
pushf
sub
xor
dec
mov
flds
or
loop
cmpsb
aad
sbb
push
inc
cmp
fiadds
fstps
ss
cmpsb
in
cmpsl
inc
mov
mov
jo
lea
push
dec
or
nop
pop
jo
dec
int
in
mov
push
sub
fistpll
das
jecxz
push
shl
out
push
repnz
push
fwait
push
adcb
ret
xor
fists
mov
cmpsl
xchg
mov
in
imul
xor
clc
sti
jl
push
cmp
sbbb
adc
xchg
cmovp
out
dec
dec
fmul
and
cltd
pop
sub
or
add
js
aam
icebp
push
mov
bswap
inc
lcall
mov
das
xchg
filds
int3
xor
fwait
out
adc
aad
xor
sbb
xor
shll
xchg
je
loopne
aad
mov
in
out
stc
test
xlat
sbb
ret
push
gs
mov
aaa
xchg
cld
sbb
sub
in
push
cltd
or
adc
roll
add
jnp
jnp
notl
sub
ror
xchg
jl
lahf
inc
cmpsb
leave
adc
jns
or
movsl
xor
or
scas
jge
jae
in
mov
movsl
mov
leave
cwtl
pushf
icebp
push
fcomps
mov
outsl
outsl
or
sub
push
pop
inc
stos
in
mov
add
notb
adc
scas
repz
loopne
or
sub
xchg
cmp
xchg
xchg
test
push
mov
loopne
je
faddl
ret
sbb
xor
xor
cmp
jno
dec
lods
cmp
dec
jne
push
fistpll
sub
add
push
lcall
pop
arpl
cltd
outsl
xchg
mov
sub
mov
out
mov
and
cmc
mov
xchg
lret
push
cld
aas
push
pop
lock
test
pop
mov
and
or
lcall
mov
push
cwtl
inc
lret
roll
jnp
decb
cmp
cmpsl
sbb
scas
ss
pop
into
cmp
pop
add
push
add
pop
cltd
xor
cmpsb
pop
and
jb
ds
mov
inc
test
fdivl
mov
xor
je
or
dec
repnz
push
push
dec
test
movsl
call
dec
and
inc
or
out
dec
xor
repz
mov
out
sti
addr16
mov
xor
sub
push
bound
call
mov
and
loopne
or
aas
push
sbb
xchg
popa
into
lods
js
pop
pop
movsl
jmp
pop
fistl
inc
pop
cmp
loop
inc
clc
xor
add
call
cmp
imul
push
pop
mov
cwtl
add
mov
mov
popa
sti
test
pop
imul
and
icebp
nop
mov
stos
mov
inc
pop
movsl
jne
les
adc
xchg
adc
fucomip
xor
stos
js
push
jne
push
filds
mov
inc
lea
xchg
in
xchg
and
fwait
mov
mov
cmp
movsb
xchg
pop
into
outsb
pop
loop
sbb
inc
inc
pop
push
or
fmuls
sti
xchg
mov
inc
pusha
jl
sbb
aaa
fmul
xchg
fs
rcll
xchg
scas
stc
call
daa
enter
andb
je
xchg
jno
lret
les
jg
sbb
xchg
sbb
into
addb
push
inc
scas
popa
mov
lea
mov
mov
mov
inc
ss
shlb
pop
rcll
and
int3
sbb
cmp
push
fimull
rcll
jge
mov
in
lcall
popa
repz
adc
sub
mov
sbb
xchg
jnp
mov
fists
cmpsb
xlat
mov
add
sbb
lret
pushf
xchg
inc
stos
clc
mov
xor
sub
mov
test
sub
and
mov
test
fs
add
lods
mov
notl
insb
int3
push
xchg
push
pop
sub
enter
int
adc
mov
adc
jo
cmpsb
in
mov
data16
pop
push
enter
cmp
push
cmp
cmp
data16
movsb
sub
fcoml
imul
and
lock
cmpsl
mov
mov
ficoms
dec
and
adc
dec
je
add
xchg
sbb
out
fiadds
sub
xor
int3
sti
dec
jge
dec
cmpsl
repnz
mov
cmp
adc
lahf
adc
mov
xor
inc
imul
adc
ja
sti
sub
adc
out
mov
dec
in
insb
arpl
add
imul
push
xor
ret
lea
cmp
pop
dec
in
in
ret
xchg
sub
lds
push
mov
test
rcl
and
ss
out
pop
mov
stos
outsl
loopne
mov
mov
mov
fst
mov
lret
cld
in
jg
dec
mov
mov
lock
dec
orl
push
xchg
add
movsb
push
mov
pushf
ljmp
mov
adc
pushf
mov
sub
add
mov
ds
int3
mov
mov
jns
jge
mov
enter
cmp
int
or
jmp
cmp
jbe
daa
imul
mov
sarb
xlat
flds
cli
fcmovb
cli
loop
mov
jecxz
dec
dec
inc
sub
add
and
out
sbb
in
dec
inc
pushf
and
jmp
push
xchg
mov
add
rcrl
aaa
lods
xor
cmp
imul
cmp
movsb
dec
inc
call
imul
dec
and
cli
mov
ja
out
push
inc
roll
mov
mov
push
xchg
jbe
outsb
js
dec
loop
pop
dec
inc
mov
aaa
add
jle
outsl
int3
dec
mov
jno
mov
or
sub
shlb
lods
sbbb
mov
les
xor
movsb
mov
add
and
out
aas
cmpsb
sarl
aad
mov
mov
mov
xor
dec
scas
ds
outsl
out
rolb
and
pop
inc
add
pusha
std
cmp
in
adc
mov
dec
inc
flds
sub
add
or
cmpsb
out
orb
andl
mov
inc
sbb
pop
lock
inc
orps
cld
fwait
xchg
push
jg
jo
mov
outsl
les
xchg
fldcw
ja
stos
push
aaa
jmp
ss
pusha
pop
pushf
shrb
dec
dec
call
inc
cld
call
stc
fstl
pop
xchg
pop
sbb
leave
pushf
imul
lds
inc
sbb
pushf
xor
dec
pop
cmp
jno
repz
cmp
add
aaa
fsubrp
cmp
cmpsl
outsl
bound
pusha
sbb
adc
cwtl
mov
ror
mov
aad
dec
es
and
push
or
test
and
inc
movsl
add
enter
dec
lret
pop
inc
loop
imul
aas
test
cmp
dec
inc
out
shll
leave
jg
stos
inc
nop
enter
mov
jmp
scas
xor
shr
cltd
or
sbb
loop
insb
adc
fbld
xlat
call
fistpll
inc
popa
pop
pop
fisubrs
fldt
cmpsb
pop
in
dec
stos
jae
cmpsb
mov
mov
sarl
ret
cmp
dec
jne
aas
adc
jecxz
je
or
shrb
lods
into
xor
sbb
add
push
sub
mov
jno
inc
add
sub
xor
shl
popa
sub
icebp
sbb
ror
add
call
push
fmull
add
lret
popa
mov
ss
icebp
dec
pop
jns
arpl
insb
hlt
xor
mov
in
push
ret
mov
push
aaa
jnp
sarl
adcb
loop
jno
out
inc
jne
call
sub
mov
cld
sahf
add
mov
xor
sub
jmp
repz
xchg
xchg
pop
lds
xchg
adc
mov
scas
pop
cmp
or
mov
push
mov
xor
cwtl
cmp
add
or
jnp
clc
repnz
push
movsl
popf
adc
dec
dec
loopne
add
aam
xor
jnp
movsb
sub
push
ss
jae
push
nop
xchg
cmp
mov
rcrb
or
movsl
jo
mov
sub
ror
loope
or
dec
stc
outsl
lds
repz
cmp
sub
arpl
jbe
add
popa
movsl
lods
adc
test
jge
movsb
cmp
incl
sahf
insl
mov
or
aas
mov
cmp
fstps
xchg
mov
dec
lahf
dec
dec
jne
inc
cmp
push
and
jmp
clc
inc
rcll
scas
cmp
rclb
call
dec
xchg
mov
or
push
fdivrs
movsb
iret
fldenv
ss
sbb
mov
sbb
sub
js
cmpsl
cwtl
dec
add
int3
xor
aad
lock
or
and
mov
gs
out
pop
jne
pop
ret
mov
mov
ficoms
dec
inc
push
inc
leave
scas
ljmp
pop
aad
xchg
sti
push
xor
pusha
and
lret
pop
and
aad
lcall
arpl
jo
xchg
sbb
cmp
sbb
sbb
aam
sbb
dec
in
lea
test
inc
add
sub
addr16
pop
dec
push
stos
lods
addr16
test
cmp
mov
test
movsl
pop
cmp
divb
add
inc
aam
aam
and
mov
out
mov
dec
les
push
sti
mov
pop
pop
icebp
add
addr16
mov
mov
aam
mov
jp
cmpsl
mov
js
loopne
jnp
aam
mov
adc
insl
push
ret
nop
cmp
pusha
cmp
popf
jle
pop
fisubs
add
cmp
or
add
rorl
pop
popf
cli
pop
loop
pop
xor
mov
mov
loopne
jnp
xchg
xorl
and
enter
je
int
add
sarl
mov
adc
nop
mov
mov
pop
jnp
scas
lret
nop
cmpsb
lret
in
lods
bound
out
ljmp
leave
les
maskmovq
imull
and
xchg
dec
mov
jno
shl
out
leave
lods
sahf
or
dec
ljmp
shlb
inc
adc
repz
lahf
ljmp
je
fcmovnu
push
shlb
ss
inc
dec
pop
lahf
dec
adc
in
not
inc
xchg
xchg
cmc
int3
lods
movsb
mov
jne
rcll
and
dec
jecxz
fildll
cmpsl
sti
xlat
dec
mov
adc
pop
cmp
das
mov
cmc
in
je
push
mov
mov
loope
mov
js
fadd
lcall
adc
add
daa
and
leave
arpl
imul
loopne
or
clc
pusha
cmpsb
jp
nop
xor
sub
jo
or
leave
xor
or
fdivr
xlat
lahf
test
mov
das
inc
cmp
mov
or
jecxz
fmull
aas
je
xchg
sti
fnstsw
out
es
jns
and
xchg
movsl
lcall
xor
insb
ret
int
cmpsb
movzwl
cwtl
es
int
sbb
iret
mov
rclb
and
add
hlt
in
mov
push
mov
xchg
push
test
test
pop
cmp
push
aas
int
rcrl
lret
xchg
jmp
xchg
jp
psubusw
dec
ficoml
dec
mov
int
mov
cmpsl
pop
sar
and
push
adc
cld
push
ret
mov
mov
popa
std
aas
into
lcall
cmpsl
in
or
ss
push
lea
xlat
cmp
test
mov
sbb
scas
push
pop
aaa
imul
mov
outsb
out
das
jp
enter
adc
sub
in
jg
xor
out
dec
push
mov
push
mov
add
sbbb
insb
cmp
cmp
pop
push
pop
ljmp
adc
inc
pop
mov
rcr
pop
ror
movsl
cmpsl
push
inc
loope
mov
nop
sti
mov
cld
imul
and
sbb
dec
pop
sub
mov
mov
mul
aaa
pop
scas
push
int3
or
je
mov
insl
sub
fcoms
pop
lods
lds
adc
or
jg
mov
pop
es
movsl
loopne
stc
and
cmp
stos
pop
adc
push
pushf
adc
fs
out
aad
cmp
mov
or
dec
mov
or
dec
icebp
ficompl
lea
sbb
cwtl
sbb
mov
loope
mov
and
jnp
sub
fs
pop
pushf
sarl
mov
inc
es
pop
dec
mov
lods
or
sub
rcrl
jmp
popa
add
or
add
push
pusha
dec
bound
fildl
push
ficomps
call
jmp
pop
out
and
push
pop
fadds
xchg
inc
nop
mov
fcomps
clc
stc
fdivr
cmc
gs
lret
lea
jnp
sub
ret
sub
jo
jp
out
add
fsubl
popa
iret
shrb
cmpsl
mov
fs
cmp
pop
fwait
addb
dec
mov
test
movsb
popf
divb
in
out
popf
test
inc
inc
add
dec
mov
inc
xchg
mov
mov
popa
mov
ljmp
shlb
jge,pt
jo
or
in
push
pusha
popf
xchg
push
sub
lea
cmpsl
inc
fists
movsl
fldt
push
lea
cmp
adc
int
cmpl
push
cli
subl
cltd
js
repnz
jne
data16
imul
mov
int
adc
add
das
cli
jnp
int3
push
mov
add
jns
pop
adc
add
ljmp
imul
fcomps
xor
loope
mov
shld
sbb
ss
pop
dec
leave
es
rcrl
aam
dec
and
icebp
lods
fcoml
push
add
adc
adc
and
pop
mov
sbb
stos
sub
mov
pop
sub
lret
adc
leave
loop
mov
shlb
mov
push
test
dec
stc
jbe
repnz
or
push
and
gs
sub
call
pop
sahf
rcl
rolb
test
in
scas
ljmp
fistpll
pop
outsb
push
roll
mov
and
or
std
mov
enter
jge
cmp
xlat
sub
jle
pop
or
jb
mov
xchg
xchg
mov
sub
sub
jge
pop
adc
xchg
popf
add
lret
arpl
cmp
lea
bound
cmpsl
xor
adc
shlb
or
and
popa
mov
inc
sbb
fs
ret
lahf
push
mov
scas
add
dec
test
sub
fdivr
hlt
stos
mov
mov
jne
sub
mov
in
repnz
lret
sub
dec
or
mov
and
cmp
shrb
add
les
add
shll
dec
mov
pusha
xchg
ficoms
fwait
jns
je
mov
and
fldcw
push
mov
fldl
jl
adc
lds
lret
testb
jae
xchg
mov
rcrl
push
mov
sbbl
pop
push
lods
cmp
pop
fst
jae
jle
inc
adc
sbb
mov
aaa
inc
repnz
dec
inc
inc
ss
movsl
loope
sub
ret
xor
mov
cmp
cli
inc
and
test
jae
aad
jne
mov
adc
cltd
lcall
paddsw
pop
clc
mov
sub
mov
into
sub
das
addr16
in
push
fwait
fs
and
stos
push
jne
sbb
push
bound
lahf
sbb
sbb
inc
fwait
leave
rcll
pop
inc
inc
or
or
jecxz
fs
sub
sbbl
push
into
push
test
mov
hlt
cmp
or
mov
mov
sub
loope
rcrb
add
mov
cwtl
xchg
jge
nop
aaa
mov
mov
les
je
mov
or
add
dec
rcrb
out
js
out
add
pop
aaa
into
sub
and
pushf
lret
inc
ret
jno
push
push
rorb
daa
mov
xchg
mov
jae
out
sub
jg
xor
inc
fldt
rorb
arpl
mov
inc
sbb
xor
push
lcall
arpl
cli
dec
inc
shlb
rcll
jns
movsl
ss
shlb
movl
stos
incb
sbb
scas
sarl
icebp
fisubl
mov
into
lret
pcmpeqb
shl
or
ret
add
dec
push
push
popf
xchg
xchg
jp
mov
gs
add
cltd
jecxz
and
fcmovb
daa
daa
jae
jmp
lock
inc
rcrl
cmpl
cmp
push
xorl
movsb
ja
lret
aaa
inc
lods
lods
out
iret
push
add
into
add
clc
sbb
pop
cmp
fisttpll
ja
push
je
repnz
leave
lock
fadds
in
add
roll
adc
mov
mov
xchg
lods
xlat
stos
shlb
adc
scas
addr16
imul
mov
inc
mov
imul
xchg
adc
xchg
cmc
mov
fidivrl
cmpsl
push
ret
or
inc
xor
cmp
xor
push
and
xor
cld
push
mov
imul
daa
inc
xchg
dec
pop
sub
jnp
insb
addr16
mov
das
mov
cmpsb
enter
mov
and
adc
hlt
cmp
cmp
js
push
outsb
add
shrb
cmp
enter
cmpsb
xor
jbe
jp
push
adc
pop
push
xor
add
popa
jno
aam
mov
adc
cmp
iret
das
mov
xchg
adc
mov
enter
scas
out
xchg
stos
jbe
ret
das
mov
jnp
or
push
adc
aas
popa
add
mov
sbb
loope
in
jge
clc
fiaddl
mov
mov
mov
pop
adc
ljmp
adc
iret
pop
aaa
adc
fnstsw
lds
imul
mull
dec
aam
out
cwtl
jne
cmpsl
lds
xor
jbe
int3
repz
adcb
pop
pop
pop
pop
add
cwtl
popf
push
sub
cwtl
loopne
int3
cltd
mov
xor
pop
sbb
inc
pop
call
icebp
pop
shl
ja
pop
and
dec
mov
dec
stc
mov
aaa
scas
inc
and
add
and
sub
push
adc
lfs
sti
mov
push
mov
and
add
sub
mov
xchg
or
cmp
lahf
push
adc
mov
sbb
push
rclw
cmp
jmp
ljmp
aaa
sbb
push
movsl
xchg
nop
hlt
mov
cmp
mov
sbb
adc
cld
sub
dec
insb
mov
add
cmp
out
xlat
icebp
mov
lock
popf
scas
jne
xchg
test
mov
dec
xchg
mov
jno
xor
jo
jecxz
outsb
fwait
data16
push
cmp
and
stc
xchg
jbe
adc
dec
or
xchg
ffree
xchg
mov
inc
mov
and
inc
add
jecxz
hlt
test
mov
sbb
repnz
pop
or
addl
mov
sub
js
lret
mov
cmp
enter
xor
push
mov
jae
test
lahf
fmulp
loope
cmp
lret
pushf
pop
lods
cs
push
fcompl
shl
mov
sub
enter
mov
icebp
mov
mov
mov
adc
push
cli
sub
xor
mov
push
cltd
out
mov
push
jne
iret
mov
mov
fwait
ret
icebp
push
inc
fadds
jmp
mov
mov
mov
fisttps
push
decl
push
sub
and
mov
mov
lahf
mov
mov
inc
cmp
xchg
jae
aas
mov
fcompl
ret
push
push
dec
mov
rolb
sub
loopne
inc
dec
int
scas
ja
movsb
push
rol
pop
add
mov
cmp
adc
add
jecxz
ret
out
test
loopne
jp
repz
add
sahf
cwtl
icebp
test
jae
mov
js
inc
or
rcrb
mov
push
mov
lcall
bound
jno
test
cmp
mov
push
fwait
int
loop
inc
icebp
dec
in
inc
inc
jno
xchg
out
adc
enter
sub
xchg
and
insl
sbb
int3
mov
insb
daa
mov
aas
push
es
scas
pop
xchg
or
orl
int3
push
fcomps
pop
test
jecxz
cs
cld
ja
adc
mov
mov
xor
in
dec
jae
add
lock
lods
test
shrl
rcll
pop
jl
cmp
iret
xchg
push
xor
mov
mov
data16
iret
addr16
jo
in
jl
lods
add
add
cltd
xchg
xchg
out
leave
dec
orb
cwtl
inc
xchg
leave
addr16
iret
daa
cwtl
sub
mov
movsb
or
out
mov
mov
out
sub
cwtl
jmp
out
jo
sub
jp
scas
sbb
adc
lods
mov
and
sub
mov
shl
jmp
stc
jo
dec
jge
sub
pop
dec
ret
xor
fwait
stos
cmpsl
ret
out
pushf
jno
repnz
repz
sti
push
mov
mov
imul
sub
ljmp
add
addps
mov
cwtl
pop
jecxz
push
jge
xor
rcl
pop
cwtl
mov
cmp
inc
adc
xchg
test
ret
mov
xor
aam
es
mov
mov
cmp
vpmacsww
mov
sti
mov
mov
das
outsb
ljmp
stos
push
adc
sub
pop
repz
xchg
aaa
mov
iret
in
out
xor
cmpl
clc
mov
test
sbb
fstp
icebp
mov
cmp
jp
xchg
sti
fstps
lahf
inc
fs
movsl
negl
push
aam
mov
mov
cmpsl
data16
mov
push
pop
pop
into
mov
in
pop
adc
scas
lret
sbbl
lret
cmp
fcoms
clc
xor
push
dec
lock
mov
mov
pop
sub
ds
sub
mov
inc
fst
mov
test
ret
loop
jle
mov
push
and
mov
jno
sbb
push
stc
inc
je
pushf
inc
pop
stc
mov
pop
jge
into
adc
sub
cltd
pushf
pop
cltd
decb
xchg
or
cmp
out
cmp
inc
mov
nop
and
pop
ljmp
inc
mov
jns
xor
or
arpl
in
outsb
fistps
jmp
add
roll
stc
loopne
mov
aam
mov
imul
outsl
add
sub
mov
out
mov
in
pop
fcom
xor
inc
ss
lds
xlat
dec
out
je
out
test
daa
jmp
lret
fadds
je
imul
cltd
dec
xchg
ret
das
add
imul
popa
jne
xlat
cmp
cld
adc
in
mov
lods
xchg
dec
add
fs
int3
in
call
fadd
pop
movb
lods
jne
ret
pop
pop
nop
std
in
xor
pushf
cwtl
dec
push
push
sbb
mov
push
cltd
add
out
xor
pop
leave
std
aam
pop
and
sbb
lahf
sbb
mov
mov
movsl
cmpsb
push
or
dec
adc
mov
adc
bound
mov
xlat
mov
dec
xchg
xchg
notl
inc
lret
xchg
mov
jmp
lds
movsl
xchg
stc
dec
aam
mov
add
sbb
xchg
inc
and
insb
ja
sbb
rol
jp
loop
mov
std
jae
fistl
inc
mov
sbb
dec
insl
hlt
dec
xchg
icebp
pop
lcall
das
jl
or
jne
inc
pop
hlt
dec
add
xchg
test
mov
jae
mov
sahf
dec
mov
aaa
and
test
lods
sub
fiaddl
xchg
xchg
sbb
mov
fisttpll
sub
adc
inc
adcb
pop
push
mov
inc
lcall
out
pop
mov
mov
das
push
add
int
or
or
cs
sbb
mov
xchg
scas
push
outsl
dec
fs
out
repz
data16
xchg
pop
lock
push
das
insb
sub
lahf
mov
lods
xlat
push
imul
inc
xchg
jg
pop
inc
rcrb
shrl
test
and
mov
iret
data16
inc
sub
mov
pop
mov
jl
icebp
shl
mov
popa
xchg
mov
dec
out
jnp
push
and
loopne
popa
push
xor
lock
sbb
sbb
xlat
adc
and
movsl
inc
repz
lods
jbe
jne
popf
push
scas
dec
lods
push
mov
jns
je
scas
xchg
cmp
sbb
jno
sub
popa
out
hlt
pop
and
popa
mov
insl
inc
pop
imul
pop
lock
in
jl
push
cmp
je
es
jl
dec
aam
xchg
or
stos
popf
jmp
rol
or
mov
inc
xlat
mov
mov
scas
push
mov
sbb
xchg
cmp
test
dec
xlat
cli
loopne
addr16
jne
aas
push
int3
lret
inc
fwait
cmp
insl
add
xchg
lds
push
in
pop
xlat
rcrb
lret
jecxz
pop
xchg
inc
sub
mulb
sbb
dec
push
xor
and
jp
dec
mov
jle
mov
mov
xor
dec
adc
or
loop
fldt
or
insb
cld
cli
inc
xchg
mov
leave
mov
inc
xor
iret
xor
jecxz
mov
push
xor
adc
in
dec
ja
adc
call
and
ss
jmp
aam
add
outsl
add
repz
xchg
ret
cmc
fs
andl
inc
xchg
les
test
jmp
cmpsl
and
movsb
push
out
lods
jb
out
add
lods
mov
and
push
in
scas
cmpsl
push
fbld
jo
aad
test
ja,pt
sub
inc
out
test
adc
cmp
mov
push
sbb
sub
dec
in
jns
fists
ret
mov
je
mov
mov
and
es
out
sbb
cmp
push
xlat
fistpll
fwait
adc
mov
jbe
adc
shll
leave
xchg
ffreep
popf
pop
cmp
push
ds
xchg
mov
into
lods
xor
imul
js
lods
dec
cltd
jae
mov
cmp
xor
addb
push
or
xor
icebp
pop
stos
ret
cwtl
push
outsl
popf
sub
ja
cmp
sbb
mov
cmpsl
sub
ljmp
mov
xchg
jg
pop
dec
mov
das
jns
inc
aam
adc
mov
mov
mov
mov
mov
das
repz
jo
sbb
mov
cltd
pop
mov
inc
adc
cltd
test
neg
out
std
dec
pop
mov
mov
xor
sbb
xchg
aas
cmp
adc
fldenv
mov
subb
leave
inc
loopne
outsl
fcmovu
and
cvtdq2ps
orl
iret
rcrb
cmp
xor
mov
outsb
loop
mov
popw
add
dec
xchg
and
xchg
dec
filds
incl
push
mov
scas
and
push
push
stos
add
xor
jnp
repz
inc
xchg
stos
shlb
stos
mov
inc
nop
aam
pop
and
test
pop
and
cmp
add
cltd
xor
jmp
push
enter
repnz
jg
pop
cmp
daa
das
push
mov
out
mov
imul
mov
push
mov
xchg
pop
and
jne
insb
pop
ja
and
nop
in
add
jge
test
sub
aas
lock
pop
loop
push
add
push
sbb
pop
out
int3
fcmovne
xchg
loop
addl
mulb
push
sbb
iret
call
insl
inc
fnstenv
pusha
xchg
xchg
aam
mov
movl
cmc
sar
idivb
pusha
push
sbb
push
ljmp
push
xchg
xchg
pop
push
or
rclb
xorl
dec
sbb
outsb
rcl
pop
test
lods
mov
inc
or
mov
pop
jb
packuswb
ljmp
push
sbb
rclb
add
cli
sahf
xor
mov
mov
pop
cmpsb
inc
sub
in
shll
fcomps
add
fs
push
cltd
mov
lret
and
subl
push
push
fs
pop
adc
lret
out
lods
cmp
inc
cmp
and
jns
imul
int
mov
cwtl
out
stos
mov
loope
das
and
mov
loope
dec
jne
fs
jno
jge
int3
movsl
mov
pusha
sbb
shrb
push
jl
push
insl
into
push
or
xchg
shrl
cld
lret
adc
jle
xor
mov
cmp
in
add
out
jecxz
pop
pop
jne
xchg
inc
cld
jbe
xchg
sub
mov
scas
cmp
and
push
les
jle
daa
lods
add
aad
xchg
insb
mov
xchg
mov
inc
xor
test
cmpsl
out
in
orl
fisubl
lahf
jg
inc
pop
xchg
and
add
xor
or
lock
jmp
cmp
cmp
testl
out
hlt
test
mov
push
sbb
sbb
aam
inc
xchg
sbb
repz
std
insb
cmp
out
dec
mov
mov
inc
push
mov
xchg
or
jno
outsl
mov
js
arpl
inc
pop
jne
push
cmp
inc
insl
out
add
cmp
imul
daa
mov
ret
jge
dec
hlt
fisubl
inc
andl
adc
pop
dec
dec
scas
xor
dec
mov
xor
and
outsl
in
adc
popf
dec
lret
pop
jmp
cld
daa
inc
jmp
lret
pop
out
rclb
insl
int3
and
insl
jmp
jge
arpl
lds
cld
in
jmp
cmp
dec
aam
push
and
sbb
sbb
test
mov
aam
and
xchg
add
mov
arpl
jg
or
pop
andl
movsb
inc
jo
cmp
ja
sti
mov
lods
xlat
mov
jnp
sub
jns
push
mov
xchg
add
sub
xor
cmp
dec
mov
jg
sahf
das
pop
xchg
stos
fcomp
cld
and
pushf
adc
imulb
int3
out
out
std
loope
cli
mov
pop
xchg
xchg
push
add
dec
test
cmc
mov
in
inc
lret
cmpsl
cli
std
mov
shll
adc
pop
mov
aad
or
mov
hlt
xchg
mov
mov
aas
fprem
test
pushf
sbb
fs
jae
jns
addr16
fisubrl
push
shll
xchg
pushf
mov
and
out
xchg
leave
jp
popf
jg
xor
ljmp
xorb
push
mov
cmp
xchg
push
push
in
inc
out
ret
scas
inc
insl
pop
inc
in
cmpb
cmpl
xor
cmp
mov
xchg
xchg
cmp
or
xchg
hlt
sbb
std
push
inc
add
sbb
sbb
sub
dec
inc
mov
xorl
mov
ds
push
in
fldl
jae
dec
scas
adc
dec
jmp
and
out
fldl
xchg
iret
into
dec
dec
movsl
xlat
mov
das
dec
push
adc
shlb
arpl
push
testb
jmp
jmp
fs
jp
stc
adc
fldenv
mov
outsb
mov
sbb
test
clc
dec
sarb
ret
sahf
xchg
xlat
cmp
mov
or
cli
popf
fimull
mov
mov
pop
dec
mov
fldcw
cmp
dec
leave
enter
jnp
and
cld
ss
and
sbb
mov
sub
mov
rcrl
add
inc
push
mov
push
jl
ds
aam
fldt
jmp
push
dec
popf
ret
sbb
sbb
in
enter
sbb
rcrl
aam
fstpt
jl
pushf
dec
and
inc
push
jp
xchg
and
nop
sahf
enter
inc
push
int
push
adc
sbb
cmp
rcrl
adc
cmp
pop
sarb
out
sbb
mov
stc
inc
inc
mov
cmp
cmpsb
test
pop
dec
fistl
ror
mov
pushf
or
insb
fidivl
fstps
in
fwait
bnd
sbb
repz
scas
push
and
loope
shrb
push
xor
pop
insl
cmpsl
xor
test
sar
xor
cli
xor
xchg
push
sub
popl
mov
and
mov
add
in
adc
ret
mov
or
add
call
pushf
add
pop
mov
fidivrl
data16
jnp
hlt
mov
mov
imul
add
out
fs
fadd
xchg
jl
mov
fdivs
es
xor
sub
pop
add
push
mov
mov
ljmp
mov
mov
fs
jb
das
loope
and
jae
mov
jns
inc
outsb
sub
gs
fidivs
idivl
dec
mov
mov
loop
xor
push
sar
jbe
ss
dec
inc
xor
sarl
outsb
lret
add
pop
adcb
push
inc
pop
fidivs
cmp
fldt
cmp
push
aam
dec
sub
leave
dec
cmp
loop
cmpsl
lds
bound
adc
test
fisubrs
fistps
stc
out
test
ficoms
cmpsb
je
lods
and
lret
and
aaa
sub
xor
push
out
sti
or
xchg
movsl
ja
lds
cmc
cld
mov
aad
mov
leave
pop
xor
bound
gs
sub
cwtl
mov
sub
push
dec
mov
call
outsb
mov
ljmp
push
outsb
daa
std
pop
pushf
insl
push
jo
inc
mov
test
jmp
pop
enter
int
cltd
mov
mov
mov
shrb
cmp
cs
xor
fistl
outsl
int
pop
xchg
push
mov
sbb
int3
mov
mov
add
sahf
sbb
popa
push
pop
repnz
sbb
lret
lcall
idivl
pop
sub
shlb
cmp
inc
daa
iret
mov
ret
mov
fdivrl
and
cld
sub
outsl
and
lock
cmc
pop
xorb
pop
mov
mov
pop
push
arpl
mov
pop
mov
xrelease
sarb
shl
int
les
int3
push
fdivs
pop
ss
sub
call
and
jmp
jmp
mov
mov
insl
push
lock
sub
addr16
dec
mov
sub
scas
fcmovne
fdivl
popa
fbld
lret
je
add
adc
mov
inc
je
add
into
or
cltd
aaa
or
pop
inc
xchg
xchg
inc
jmp
decb
inc
std
roll
ja
rcr
jno
add
pop
paddusb
test
jl
loope
shrb
cmp
iret
aad
jecxz
and
push
pop
insb
mov
fwait
enter
imul
test
cli
push
sbb
orb
xchg
mov
inc
or
out
outsl
push
dec
jno
cmp
and
aad
cmpl
xchg
mov
or
out
add
lret
out
mov
into
in
or
cltd
sub
xchg
xor
pusha
add
adc
push
cld
jb
fcomp
inc
js
push
jne
nop
fnstenv
fidivrl
aas
fiaddl
sbb
inc
mov
inc
in
lret
or
shlb
xchg
movl
mov
lahf
inc
aas
or
sarl
imul
jmp
ljmp
les
scas
pop
sbb
jg
mov
lods
sahf
sbb
pop
inc
push
pop
jecxz
pop
popf
mov
push
mov
xchg
xchg
cmp
mov
mov
or
frstor
scas
cmp
ja
jmp
test
lahf
add
jecxz
stos
sub
loop
repz
and
test
mov
mov
add
ja
jns
shl
jle
cmp
js
mov
lcall
mov
or
cmp
outsl
sub
pop
hlt
mov
test
and
sub
mov
das
push
js
cmp
pushf
stc
jmp
mov
mov
out
cwtl
cmp
cmc
sub
addr16
xchg
sub
pop
imul
imul
jnp
clc
xor
dec
pusha
mov
cmc
mov
and
inc
loopne
divb
xor
xor
dec
es
mov
push
cs
push
add
movsl
ret
push
les
jmp
in
xlat
mov
xor
add
es
call
rorl
adc
lahf
push
or
inc
jmp
jp
xor
in
ret
loop
cmpsl
cwtl
jo
daa
and
cmp
or
or
imul
les
xchg
add
xor
sahf
mov
test
test
fwait
mov
mov
imul
sbb
mov
mov
inc
aaa
jl
lods
pushl
rclb
inc
icebp
push
xlat
cs
stos
push
adc
or
sub
xchg
mov
ljmp
ret
insl
xchg
and
mov
sub
stc
xchg
jne
outsl
mov
push
insl
lds
loop
popa
add
xchg
push
inc
test
ret
xor
aas
addr16
xor
call
and
stc
inc
and
hlt
xchg
cmp
cs
sbb
mov
mov
pop
xchg
inc
mov
dec
sbb
xchg
std
xchg
sbb
rcrb
inc
imul
std
cli
lcall
push
or
pop
mov
notb
push
cmpsb
mov
ss
movsl
icebp
xchg
adc
mov
inc
or
sbb
je
aam
mov
cmp
inc
cwtl
lock
jb
notb
not
in
pop
dec
mov
push
inc
ljmp
shrl
stos
jbe
fisttpll
loopne
pop
dec
rcll
push
imul
xor
pop
mov
inc
cmpsl
scas
mov
ret
andl
imul
pop
jg
jle
rcl
mov
outsb
push
loop
sub
mov
or
ror
out
mov
push
rorb
xchg
stos
xchg
pop
fsub
push
mov
inc
ljmp
xchg
fwait
jle
and
sub
scas
mov
lods
lods
sub
jnp
out
and
movsl
lods
dec
sbb
add
pop
mov
or
jecxz
mov
xchg
xor
pusha
push
inc
in
mov
insb
out
scas
xor
mov
iret
push
iret
xchg
test
mov
cmp
imul
mov
loope
mov
jmp
mov
xchg
arpl
and
and
add
xchg
insb
pop
cmp
dec
xchg
mov
lock
inc
mov
lea
imul
xor
inc
or
fstps
and
outsl
outsl
lods
sub
sbb
test
xor
lcall
inc
cwtl
xchg
enter
lds
adc
or
jns
imul
xrelease
jecxz
cmp
add
daa
adc
enter
xchg
and
fdivrs
mov
jno
sub
outsl
sub
or
pop
lods
cmc
pop
mov
cmp
mov
ljmp
fs
cltd
mov
or
divl
jns
je
mov
mov
enter
fs
jp
xchg
gs
jbe
push
loope
and
btr
dec
cmp
cwtl
arpl
dec
pop
cmp
jmp
dec
into
sub
enter
incl
cltd
mov
fwait
hlt
inc
jns
xchg
out
mov
mov
cltd
sar
sub
mov
sub
adc
dec
push
and
push
cwtl
adc
or
push
mov
into
pop
xchg
shlb
inc
movsb
mov
jns
imul
pop
xor
mov
aam
jne
dec
sbb
xchg
or
cmc
mov
push
loopne
mov
jmp
or
shlb
sub
xchg
mov
das
jp
xchg
mov
rorb
cmp
stos
icebp
push
mov
mov
rol
fcomp
sub
mov
loopne
jno
test
mov
push
mov
inc
addr16
les
pop
push
hlt
pusha
cmp
dec
repz
in
cmp
sti
mov
xor
gs
fwait
das
int3
push
cmp
loopne
cld
xor
sub
cmpsl
test
insl
push
aaa
inc
sbb
pop
andb
xchg
jne,pt
and
push
inc
dec
fdivs
es
jo
or
mov
mov
xor
push
and
psllw
dec
scas
cld
lock
shl
enter
push
out
cs
sbb
mov
insl
inc
inc
sbb
mov
jns
enter
push
mov
mov
xor
add
mov
insl
sbb
xor
iret
adc
fisttpl
and
mov
adc
rclb
mov
pushl
sub
rclb
jno
jne
enter
jg
and
test
dec
dec
xchg
imul
adc
lods
imul
jle
xchg
or
loop
sub
dec
xchg
or
or
dec
cmp
add
push
lea
and
lods
fcoml
inc
out
sbb
shlb
bound
sti
pop
push
mov
push
jl
push
jmp
cltd
inc
or
adc
jb
insl
std
lea
lret
mov
sub
push
adc
mov
xchg
and
inc
lahf
das
or
ja
xchg
les
mov
imul
mov
adc
xchg
jge
addr16
xlat
sbb
jl
ret
pop
subl
aad
sahf
lahf
aaa
mov
pushf
or
loopne
ss
mov
gs
push
stos
inc
or
push
cmp
push
mov
scas
pop
imul
sti
jle
loope
adc
stos
xor
fiaddl
test
pop
and
fists
cli
sub
pop
testb
lods
adc
js
idivb
cmp
pop
daa
sbb
push
and
mov
and
cmp
arpl
rolb
push
test
cmp
rclb
test
pop
iret
adc
loope
sbb
and
cwtl
xchg
fistl
sub
cs
mov
xchg
test
ljmp
rcll
test
cmpb
sbb
inc
enter
scas
fnsave
pop
xchg
fdivs
mov
dec
std
fistps
scas
pop
popa
xor
nop
sub
ss
das
sub
jns
jle
lock
add
mul
push
sub
out
daa
xchg
xchg
das
sti
push
or
popf
mov
mov
call
cwtl
test
xor
insl
adc
int3
das
sub
pop
mov
int
stc
mov
xchg
fs
inc
cmpsb
push
xchg
cli
and
subl
pop
cwtl
gs
mov
icebp
add
dec
lret
or
jg
aaa
xchg
cli
imul
test
je
insl
ficompl
shll
pop
push
clc
xor
dec
hlt
testb
adc
xor
add
lcall
fistpll
std
inc
repz
sub
push
cmp
or
fidivl
adc
daa
stos
push
mov
cmp
xchg
rolb
test
adcl
push
inc
ret
outsb
xchg
or
sbb
aaa
xor
push
inc
movsb
dec
cs
movsb
inc
movsl
xor
je
push
mov
push
inc
add
int
adc
mulb
popa
or
daa
imul
and
push
lods
and
cmpsb
jp
sti
add
es
scas
ret
stos
mov
int3
cmp
xor
cmp
mov
push
jns
iret
push
xchg
and
pop
test
inc
loope
xchg
test
push
mov
aad
sub
stos
subb
xchg
mov
shrl
pusha
aas
mov
sahf
push
push
dec
mov
mov
loopne
js
xlat
cwtl
and
cs
dec
sub
pop
push
adc
aas
xchg
test
xor
in
cmp
scas
cmpl
loope
frstor
cmp
loop
lcall
cmp
add
xchg
mov
adc
adc
or
cld
mov
gs
fistl
rcrl
and
leave
sbb
inc
test
clc
rcrb
adc
adc
and
pushf
push
aaa
sub
leave
dec
pop
lret
sub
adc
sbb
jns
jmp
inc
adc
gs
mov
or
adc
cwtl
mov
loopne
pusha
nop
xchg
lret
push
icebp
add
int3
push
push
pop
sahf
cmp
cmpsl
push
fildll
push
add
pushf
cmc
outsl
aam
pushf
in
imul
out
fists
movsl
fdecstp
insb
adc
ljmp
cmp
out
enter
or
or
dec
pop
mov
imul
insb
rcll
cs
in
sub
xlat
out
pushw
test
shlb
mov
inc
hlt
stos
push
xor
mov
dec
xlat
cmp
inc
inc
gs
jg
mov
jp
push
dec
sub
sbb
negl
pop
jmp
jno
neg
ljmp
dec
jmp
daa
call
push
mov
dec
fwait
cmp
andb
outsl
cmpsb
pushf
adc
negb
xor
mov
ljmp
jp
loope
addr16
jg
scas
pop
rcr
fmull
sbb
push
and
daa
push
ret
inc
mov
jp
in
mov
test
test
dec
inc
cli
or
jl
sbb
push
sbb
insl
movb
mov
mov
test
js
fdivrs
out
mov
mov
push
lret
cmp
incl
test
outsl
ss
inc
mov
xor
xchg
lahf
es
lods
xchg
lea
push
add
mov
or
push
xor
outsl
test
shlb
push
mov
mov
or
or
sarb
sbbl
bound
sub
mov
fwait
mov
xchg
xchg
stc
js
pop
scas
dec
pop
jbe
hlt
pop
into
pop
jno
add
pop
mov
cmp
mov
mov
ret
in
pusha
pusha
mov
mov
cltd
add
loope
das
cmp
jnp
stos
insl
xor
cmpsb
jge
or
outsl
les
jne
jmp
test
jge
and
aad
jl
sbb
ret
mov
xchg
icebp
outsb
daa
into
pop
sbb
pop
cmp
rorl
int
pop
cmp
lcall
add
mov
mov
add
xchg
pushl
sbb
cs
sub
cmp
jnp
cwtl
movsb
fistl
mov
mov
packuswb
jae
adc
push
push
ret
sbb
jb
cmp
and
test
push
or
mov
xchg
xchg
jo
loope
loopne
pop
dec
add
push
adc
cwtl
icebp
sti
and
or
enter
pop
fldt
daa
push
pop
nop
mulps
mov
adc
fcompl
inc
jecxz
sbb
push
cld
mov
outsb
out
xchg
int3
cmp
jns
pop
mov
mov
push
into
inc
cmpsb
jecxz
mov
jnp
mov
lods
mov
imul
fimuls
mov
and
stos
ficomps
lcall
lret
cmpsl
cmc
mov
mov
lret
jge
aaa
jp
ret
dec
loope
ss
push
cs
lds
jmp
push
imul
bound
dec
adc
nop
sarb
imul
mov
jo
int
mov
add
repnz
and
or
dec
test
sbb
insb
fucomp
out
xchg
adc
jge
push
jl
adc
push
xor
jb
loop
jbe
enter
xor
enter
out
scas
pop
dec
xchg
loope
pcmpgtb
sbb
iret
xor
jb
aam
xchg
arpl
pop
sarb
adc
cmpsl
push
and
and
push
in
inc
insb
xchg
test
push
rorl
jmp
ljmp
sub
xor
cmc
mov
push
std
add
loopne
inc
movsl
mov
xlat
xchg
push
push
imul
repnz
fimull
sub
out
int3
cmp
lds
aad
pusha
sbb
bound
mov
dec
movsl
lret
inc
nop
jle
xlat
mov
pop
sub
call
mov
hlt
pop
jnp
lcall
movsl
popf
push
cmpsl
loopne
cld
pop
cld
incb
sbb
je
mov
lea
mov
sbb
pop
fiaddl
insb
dec
repnz
push
test
test
movsl
paddsw
or
and
xchg
mov
or
or
je
insl
dec
push
push
push
loope
lds
sbb
mov
pop
jle
sbb
loop
das
sarl
adc
jp
jg
push
xor
xchg
into
sub
inc
lret
mov
xchg
loopne
push
cli
es
mov
push
pop
sbbb
pcmpeqd
xchg
loop
cli
mov
ja
or
xchg
cwtl
ja
sti
adc
fmull
movsb
push
push
out
push
out
pop
sti
jae
jo
sub
and
pop
mov
mov
daa
jne
shrb
push
ret
sbb
fnstcw
xor
je
repnz
je
xchg
ds
mov
lea
enter
or
sub
cmp
pop
sti
dec
push
or
adc
lret
gs
sub
xchg
pop
enter
aad
inc
pop
test
cmp
mov
cs
mov
mov
test
jno
lret
flds
mov
dec
xor
ljmp
sbb
pop
iret
xchg
jg
arpl
leave
scas
sbbl
daa
jle
in
das
mov
sub
jo
xchg
xchg
jle
and
sbb
scas
shr
fwait
mov
loope
mov
pop
mov
xor
pop
jbe
ret
fdivr
lret
jns
ss
pop
jbe
pop
in
jge
test
inc
dec
fisubs
sbb
repz
enter
pop
iret
push
sahf
std
cwtl
pop
adc
out
cmp
xchg
sub
cld
xchg
dec
pushf
lds
dec
adc
data16
insl
add
arpl
sbb
lret
sub
push
xlat
pop
dec
pop
jge
xor
xchg
push
out
popa
subl
cli
adc
cmp
jg
lret
gs
ss
or
push
ja
sbb
dec
add
leave
mov
jg
inc
mov
cmp
out
lret
div
jle
xor
je
je
imul
int
ret
push
ss
test
fwait
mov
and
dec
mov
xchg
addr16
outsb
or
out
cmp
jo,pn
movzwl
cmc
push
ljmp
adc
sahf
cmpl
inc
sub
orl
adc
das
pop
rcr
push
icebp
nop
cld
inc
shrl
lea
add
push
les
push
arpl
mov
and
aam
arpl
cmp
shrb
stos
clc
sbb
shl
sbb
dec
movsl
mov
fwait
ds
jp
pop
aas
scas
lea
cs
lods
mov
sub
xchg
dec
adc
sbb
dec
outsb
scas
pop
mov
scas
jmp
xorb
testb
mov
inc
shll
inc
stos
sub
std
sbb
test
jo
cmp
fs
mov
lds
stos
mov
add
roll
cwtl
mov
stos
stc
mov
mov
rcll
pushf
daa
mov
add
pop
fisubl
cwtl
xor
add
cmp
or
mov
inc
inc
mov
fstpt
xor
iret
loop
cld
and
xchg
js
icebp
xor
aas
dec
push
loope
pop
ficoml
aad
out
cmp
daa
or
dec
int
inc
lods
repz
mov
push
fcmovnu
fwait
dec
xor
inc
bound
push
cmpsb
mov
add
sti
mov
push
jge
cmpl
das
inc
push
dec
lods
fdivl
es
inc
fldt
fwait
jns
mov
xor
lds
pop
ljmp
and
int
pop
ljmp
lea
cwtl
mov
fdivl
in
mov
mov
xchg
lea
aad
lock
jb
lahf
dec
push
jecxz
mov
je
addb
repz
xor
fwait
out
icebp
pop
and
jb
aaa
sbb
jno
nop
test
jg
jg
cmp
push
adc
sub
test
fbld
push
xchg
xchg
sbb
adc
mov
jge
stos
mov
mov
pop
mov
xor
fsubrl
mov
ret
xor
in
xchg
mov
jo
cmp
roll
js
stos
jl
in
cmp
dec
dec
bound
jp
repnz
sbb
pop
lods
jmp
jmp
hlt
mov
call
movsb
fistps
push
mov
pop
repz
xchg
jecxz
push
ficoml
xor
aad
or
and
sti
mov
gs
mov
dec
test
inc
lock
cmp
sbb
or
out
cld
cmp
mov
shr
push
jno
lret
mov
pop
lds
les
divb
inc
cmp
jo
and
push
adc
ret
je
lahf
rep
inc
movsl
iret
sbb
dec
movsb
mov
repnz
xchg
iret
xor
dec
cli
sbb
sahf
dec
jnp
ja
inc
sub
xor
or
shll
add
mov
add
xchg
cmpb
call
mov
push
adc
or
jecxz
xor
je
pop
test
adc
pusha
nop
pop
enter
scas
inc
sub
int3
or
and
insl
jno
or
imul
dec
shrl
out
mov
ficoms
xlat
shlb
pop
pushf
add
push
jmp
ljmp
lret
fdivp
das
out
dec
mov
jle
aas
cld
in
and
scas
arpl
insb
jle
test
rcl
push
lods
push
mov
loopne
cmp
xchg
and
lea
call
in
loope
outsb
dec
cltd
mov
sub
cmp
jmp
xchg
ficompl
dec
insl
out
movsb
jg
fsub
push
xchg
mov
adcl
cmp
jns
bound
mov
icebp
or
pop
adcb
xchg
outsb
adcl
inc
jg
in
xchg
call
cmp
test
mov
in
popf
out
aad
shll
jge
lret
fstpt
lods
jmp
lret
rclb
leave
sub
adc
xor
stos
mov
cwtl
add
push
scas
les
cltd
out
fisttps
jne
push
dec
adc
bound
fists
dec
sub
out
jmp
aad
loope
btc
aad
pop
mov
mov
mov
mov
push
out
adc
xlat
sahf
test
jmp
xor
das
or
adc
ljmp
lret
sbb
adc
sbb
movsb
addr16
outsb
pop
call
or
mov
repnz
movl
ficoms
xchg
push
add
cmp
hlt
aas
ljmp
dec
clc
stos
push
xchg
sub
xor
inc
push
sub
xor
xchg
ljmp
not
mov
icebp
xchg
dec
sub
aad
inc
incb
popf
push
dec
dec
call
dec
mov
push
rcll
xor
mov
negl
not
sbb
mov
jmp
dec
sbb
cmp
nop
mov
dec
fists
mov
fisubs
mov
and
and
sub
scas
mov
pushl
xor
adc
mov
add
lods
xor
mov
xor
outsl
inc
stos
fs
shl
sub
fcoms
hlt
dec
sbb
stos
fsincos
ss
fisubrl
xchg
shll
jg
fisubl
pushf
push
data16
mov
mov
sbb
int
xchg
mov
cwtl
push
cmc
inc
cmp
and
fwait
pop
xchg
in
pop
test
imul
pushf
ss
aaa
push
loopne
pop
cld
xchg
pop
xchg
sub
mov
cmpsb
int
gs
aas
push
dec
xor
jbe
out
pop
push
mov
xchg
dec
pop
pop
pop
repz
xchg
stc
lret
es
ja
cli
andl
shll
or
into
shr
pushf
adc
inc
aaa
jnp
stc
mov
and
out
xchg
imul
pushf
cmpxchg
xchg
inc
dec
xlat
sar
inc
and
push
push
dec
jg
test
lods
add
and
incb
test
jmp
test
mov
pop
inc
ret
pop
push
imul
pop
dec
sar
pop
and
sub
sub
sbb
rorb
mov
in
hlt
xor
pop
jecxz
xor
je
adc
sub
inc
movsl
mov
inc
dec
or
add
jge
punpcklbw
shll
sub
enter
cld
ljmp
and
cltd
sub
mov
and
mov
lods
not
leave
cmpsb
add
adc
add
push
jge
jmp
or
mov
addr16
call
pop
sub
xor
rcll
jle
or
pop
int3
and
mov
cs
insb
or
ss
push
scas
rcl
mov
clc
mov
push
xchg
xor
dec
clc
jo
sarl
incl
or
rolb
shr
mov
and
xor
imul
add
inc
stc
sbbl
testl
rcll
std
and
adc
inc
out
ffree
sub
push
rcll
int
pop
mov
fildll
push
sub
lret
cmpsl
popf
cmpsl
push
adc
loopne
mov
aad
mov
fdivrs
insb
subb
fcompl
aam
add
hlt
xchg
push
xchg
cmp
mov
pop
add
fwait
mov
push
testb
dec
pop
sbb
or
pop
in
test
pop
daa
xchg
pop
lods
es
stos
rorl
outsb
inc
mov
jae
pop
cmpsl
call
leave
pop
adc
sub
mov
std
lods
mov
out
cmp
fisubrs
cwtl
test
and
add
ja
dec
sti
aas
int
and
testb
leave
in
call
cmp
mov
incb
sbb
and
or
pop
pop
mov
and
cmp
and
mov
pop
popa
cmp
cli
ja
hlt
hlt
push
loope
sbb
ret
add
push
ret
cli
xchg
mov
pop
adc
jle
mov
lahf
cmp
or
xor
mov
out
push
sbb
std
mov
jno
push
inc
inc
jae
add
or
sub
push
mov
sbb
mov
movsb
add
lret
push
mov
push
imul
jns
cmp
adc
sub
or
nop
jmp
push
cmpsl
jp
lods
or
sahf
jb
fcomps
lds
es
xor
cwtl
lods
xchg
inc
cmp
mov
push
in
sahf
repnz
sub
cmp
fsubp
shlb
sub
ds
sub
imull
pusha
shrl
fwait
test
jmp
pop
pop
std
movb
xlat
nop
xchg
jne
or
sti
xchg
and
ja
mov
add
adc
fucom
cmp
insb
cmp
loope
add
mov
xchg
mov
pop
scas
xchg
ret
adc
jbe
insl
jg
nop
xor
addr16
add
xchg
inc
mov
ret
adcl
dec
mov
and
cmpsl
jle
mov
fsubrl
sti
sbbl
and
popa
cmpsl
jnp
mov
ljmp
sbb
add
adc
nop
xchg
jecxz
sub
mov
cs
ficoml
notb
or
sub
shlb
daa
ds
push
push
add
push
add
cwtl
iret
int
sub
negl
sbb
in
sub
mov
stos
sub
jbe
lods
movsb
sub
adc
mov
mov
xchg
xlat
sub
xor
adc
mov
mov
ds
inc
mov
sub
lods
mov
ja
dec
enter
mov
or
shr
stos
fisubl
pop
dec
mov
data16
scas
mov
jae
sarb
aad
sarb
lret
cs
loop
gs
cmp
test
cmp
movl
dec
gs
ret
lea
fucom
rorb
sbb
in
xor
repnz
xchg
popa
adc
adc
call
push
rorb
shl
pop
js
fidivs
mov
jmp
outsl
inc
rorb
clc
xchg
xor
xchg
aad
sbb
sub
and
ss
mov
ja
mov
mov
sub
cmp
arpl
mov
js
es
sbb
xchg
mov
ret
sub
fstl
sub
or
and
sbb
xor
add
pop
push
mov
jo
dec
repnz
iret
testb
xor
xor
mov
insl
imul
imul
and
dec
add
fcoms
call
or
in
lahf
inc
fwait
mov
loop
cmp
ja
popf
shlb
adc
and
jp
and
into
xor
xlat
aad
roll
inc
jmp
fwait
bound
xchg
shll
je
pop
xchg
int3
cmpsl
pop
dec
push
rorb
subb
jle
xchg
test
loop
out
dec
into
rorb
dec
rcrb
ss
pop
cmc
arpl
push
xchg
xor
dec
call
lds
mov
adc
je
sbb
and
js
jle
loop
clc
decb
push
add
icebp
cld
filds
mov
mov
scas
add
cmp
or
jnp
mov
inc
shlb
stos
cli
jno
pop
in
pop
xchg
xor
jg
dec
inc
aad
pop
stos
sbb
loop
pop
lcall
lret
popf
jb
mov
sub
out
mov
mov
mov
ret
aad
and
enter
popf
dec
sub
aas
xchg
jle
jne
test
inc
and
scas
and
rclb
or
repnz
push
rclb
test
inc
clc
daa
inc
sbb
out
in
xor
loopne
mov
gs
lods
adc
adc
and
out
lret
push
mov
ljmp
xor
arpl
jns
jecxz
sbb
add
imul
out
or
and
daa
clc
sbb
ret
jno
adc
jl
or
mov
cmp
das
lea
ss
out
mov
push
out
or
and
dec
mov
std
mov
adc
jge
aad
or
mov
movsb
xor
pop
fistpl
xchg
jb
cmp
iret
sbb
decb
imul
loop
and
jecxz
lock
push
lock
push
cwtl
sub
std
xor
push
cmc
jge
dec
pop
mov
sti
sti
lcall
sbb
pusha
daa
insb
and
inc
add
sar
adc
pop
add
xchg
jne,pt
xor
pop
out
cmp
mov
jae
cmp
pop
hlt
cmp
mull
or
adc
incl
mov
dec
dec
fldenv
pop
rcl
xchg
cli
adc
repnz
push
mov
dec
cltd
mov
mov
pop
lret
cmp
repnz
or
cmp
fistpl
adc
aam
sbb
sub
sbb
dec
dec
jo
adc
fistpl
fbstp
mov
stc
rcll
ficompl
inc
clc
fwait
xor
sub
cmpl
in
in
orb
int
sbb
push
mov
ret
jbe
dec
xchg
xchg
nop
or
xchg
into
and
sbbb
sub
popa
inc
je
gs
fstpt
jg
out
sbb
out
test
or
repz
mov
cmp
dec
stc
inc
push
add
mov
add
mov
ljmp
jp
lds
and
stos
imul
lret
imul
fisubrs
mov
gs
ds
or
cmp
loopne
data16
pop
xor
jne
pop
lret
sbb
dec
mov
jge
mov
test
mov
mov
sets
mov
mov
jcxz
cmp
imul
fiadds
fidivl
test
lods
add
mov
leave
add
pusha
shlb
push
mov
cltd
xor
ss
into
rol
scas
lea
test
outsl
movsl
rcrl
int
jg
pop
jecxz
outsl
rolb
push
lds
jg
mov
xchg
cmp
js
xchg
add
lahf
ss
xchg
addr16
ficoms
or
inc
mov
push
jg
das
ret
mov
mov
adc
mov
cli
fwait
loop
in
mov
push
and
cltd
cs
nop
or
in
addr16
jmp
pop
scas
scas
mov
fadd
stos
fisubrl
inc
addb
adc
into
arpl
xchg
xchg
lcall
into
sbb
sbb
fldcw
imull
cwtl
push
adc
dec
fwait
xchg
loop
test
or
les
test
movb
sarb
jl
jnp
ror
sub
in
pushf
cmp
xchg
sbb
ds
repnz
pop
repz
push
in
inc
mov
jo
sbb
and
cmp
jp
mov
sbb
nop
push
stc
cmp
mov
add
lds
lds
sbb
lahf
mov
pushf
add
sub
mov
sbb
push
roll
push
popf
pop
dec
sbbb
fisubrs
push
add
add
jmp
enter
mov
int
out
xchg
jns
cli
sub
cmp
cmp
aaa
movsb
mov
jae
loopne
inc
mov
jb
mov
dec
mov
aad
cmp
in
push
xchg
pop
rorl
mov
xor
lods
sbb
fdivrp
pop
xor
outsb
scas
loope
sbb
sub
add
pop
adc
sahf
dec
cmp
xchg
inc
std
dec
mov
loop
or
xor
shll
inc
pop
pop
fistps
xor
xchg
xchg
addr16
popf
xchg
fsubrl
fwait
or
and
jo
std
dec
or
mov
push
es
fdivrl
mov
roll
and
in
popf
jp
ret
cs
jns
fcmovnbe
loope
movsl
adc
lods
jp
movsb
scas
icebp
jp
pop
inc
rolb
rorl
movsl
and
lret
push
popf
add
ret
nop
inc
xchg
outsl
add
aas
repz
and
lret
sar
push
xor
xor
fcoms
adc
xchg
pop
xor
sbbb
in
mov
jbe
cs
insl
push
or
jnp
arpl
cs
je,pt
pusha
dec
xor
dec
cmp
cmp
shll
jb
sti
mov
sbb
mov
jle
inc
cmp
push
pop
cmpl
aad
imul
fiadds
xorl
xchg
icebp
movb
shl
jle
mov
cmp
xchg
ficompl
rorl
outsb
dec
sub
lret
add
push
push
sub
orb
aad
in
sahf
aam
inc
inc
xchg
adc
popa
insb
ljmp
in
outsb
mov
test
lret
in
in
jp
pop
xor
shll
adc
rol
sub
pop
out
push
mov
jle
push
push
pushf
gs
aad
cmp
jne
xchg
icebp
js
jo
dec
iret
fisubs
xor
mov
and
cmp
mov
gs
adc
mov
scas
loop
or
xor
push
dec
in
mov
popl
ss
mov
imul
ret
pop
jmp
jecxz
lea
xchg
add
imul
mov
sbb
xor
ret
pushf
gs
notl
std
mov
shrb
add
pop
je
mov
dec
mov
and
sarb
int3
pop
scas
sbb
stos
sbb
xor
cmp
dec
inc
pop
les
aas
xor
scas
xchg
xchg
push
imul
adc
and
data16
dec
push
xor
mov
jg
popa
ds
int
sbb
xor
and
fcoml
out
pop
call
lea
fs
outsl
pop
push
scas
repz
dec
push
ds
aad
pop
xor
into
sbb
cmp
inc
js
daa
mov
shl
dec
cmc
adc
mov
jecxz
jle
xchg
dec
scas
pop
lret
jl
inc
subb
dec
in
push
iret
xchg
sub
std
jnp
jno
imul
add
lods
or
sub
mov
cmc
or
imul
popf
cmpsb
inc
xchg
inc
pop
icebp
xor
mov
xchg
and
movsb
cmp
push
jecxz
daa
shrb
mov
jo
pop
mov
fisubl
mov
lds
ror
push
or
xchg
fistpll
and
mov
cmp
inc
jmp
inc
mov
leave
adc
clc
loopne
int3
inc
movsb
add
mov
xchg
xor
iret
jp
mov
aad
das
int
movsl
icebp
hlt
pop
xor
jl
sbb
inc
movsl
add
cmovne
repz
xchg
inc
shr
add
mov
mov
xchg
daa
pop
mov
outsl
push
jl
add
mov
xchg
std
sbb
or
lds
pop
lods
pop
imul
or
popa
mov
loopne
push
shlb
dec
add
test
push
inc
cmp
jle
cmpsb
xchg
and
adc
push
push
daa
mov
xor
dec
or
xchg
push
ret
or
mov
fsubl
pop
and
pop
out
mov
sbb
push
pop
add
jle
xchg
sarb
scas
fidivl
sbb
mov
push
jl
dec
cmp
negl
and
stos
out
ljmp
pop
mov
or
fcoml
push
xchg
ret
adc
xchg
and
push
dec
dec
mov
xchg
mov
mov
add
xchg
xchg
pop
inc
mov
sbb
arpl
push
pushf
xor
lock
fadd
cmp
push
ss
mov
lds
xor
fildl
into
and
lds
pop
sbb
sbb
fdivrl
ret
jle
push
dec
pop
lock
sti
cmpsb
lret
mov
pusha
mov
repz
icebp
mov
jne
lea
dec
fdivrl
rcrl
hlt
pusha
or
jo
add
push
out
sub
pop
xchg
sbb
push
mov
js
mov
mov
and
mov
mov
xchg
cmp
or
in
aas
stos
clc
push
add
negb
add
cwtl
xchg
inc
mov
pop
cwtl
in
imul
inc
xor
jo
std
fs
stos
mull
pop
fcmovb
push
hlt
or
gs
push
aam
lcall
or
int
or
fdivs
test
faddl
pop
xchg
jl
lret
andb
lods
in
ljmp
sti
call
adc
fcmovnu
mov
pop
adc
push
int3
jle
jg
fldenv
icebp
mov
mov
inc
mov
imul
sub
mov
mov
pop
jnp
cmc
inc
movsb
ficompl
sbb
mov
pop
push
cwtl
jp
mov
lea
xchg
in
fdivrl
pop
sbb
push
insb
ja
push
cmp
adc
pop
mov
call
jbe
jne
fdivs
mov
xor
xchg
in
mov
sub
mov
fists
js
xchg
fadds
push
loope
test
mov
xchg
lock
add
addr16
cmp
aas
cmp
jle
pushf
adc
mov
push
or
jne
imul
ret
xchg
push
jl
shll
icebp
out
or
or
jge
sti
movsl
push
mov
push
dec
iret
lods
imul
push
ds
dec
mov
movsl
xchg
inc
repnz
sub
xlat
mov
arpl
out
icebp
daa
dec
loopne
mulb
add
mov
ljmp
xchg
je
push
je
rcrb
imul
insb
ficomps
inc
jge
rclb
pop
scas
cmc
mov
pop
sbb
in
sub
ljmp
pop
imul
cmp
insb
ja
jno
xchg
dec
in
mov
push
mov
stc
not
jle
inc
repz
xchg
fbld
push
sahf
jo
sahf
jle
jp
mov
rorb
mov
or
cmpsl
shlb
movsl
lods
mov
sbb
or
add
outsl
lock
cwtl
push
cltd
pop
dec
inc
hlt
call
cmpsb
fcompl
neg
sub
cwtl
cld
xor
sub
jae
inc
sub
pop
lods
jnp
jg
testl
call
pop
lcall
movb
out
mov
inc
jmp
mov
in
lods
adc
test
or
or
mov
xor
jae
gs
sub
cmp
mov
out
mov
sub
bound
out
cmp
cs
jp
pushf
push
lcall
in
andb
xchg
cwtl
in
jle
push
stc
jae
adc
lret
sub
adc
push
inc
xor
xor
iret
ss
insl
dec
subb
int
inc
adc
shll
xchg
jb
psubb
cltd
popa
mov
lret
adc
or
ja
sti
divb
mov
add
push
jae
mov
inc
jnp
push
lds
xchg
decl
push
jmp
sbb
adc
out
loope
mov
dec
xchg
xchg
and
adc
rclb
test
test
outsb
in
jno
push
cmpsb
fisttpl
xor
mov
fstpt
orb
mov
xor
inc
jecxz
xchg
adc
rorb
bnd
pop
mov
pop
cwtl
pushf
mov
mov
sbb
or
lods
jmp
scas
add
lahf
adc
cmc
lret
adc
mov
xor
out
movsl
xchg
punpcklwd
xchg
sbb
sti
inc
adc
mov
test
xor
idiv
push
push
xchg
push
mov
cltd
loop
dec
lock
xor
int3
and
aaa
sarb
inc
xchg
dec
push
sub
push
cmp
jmp
cmp
jle
or
fsubrs
addr16
mov
out
iret
sbb
mov
dec
rep
sbb
pushf
cmp
jbe
pop
mov
movl
in
push
dec
pop
xchg
fildl
xorl
add
repz
mov
jne
testl
in
pop
popf
mov
and
pop
inc
rcrb
push
outsl
fidivrl
dec
scas
dec
addr16
out
xor
cmp
jns
imull
dec
or
push
ss
aas
jg
les
cmp
sub
push
adc
outsb
mov
mov
and
push
or
mov
dec
mov
xchg
scas
out
fdivl
sub
lods
push
add
testb
insb
in
sbb
push
jo
test
test
data16
fsts
mov
push
sbb
cmp
pushf
ret
cmp
das
xor
pop
cmp
clts
daa
and
fimuls
and
xor
push
insl
incb
jbe
mov
xor
mov
aad
and
jo
fldt
cmp
jl
imul
std
je
in
mov
sub
inc
call
insl
cmpsb
fstl
fcmovne
add
push
insl
dec
shr
int3
push
js
fidivrl
jl
mov
fs
movsb
or
popa
loop
adcb
int
mov
pop
lahf
ret
out
mov
pop
ret
pop
lret
mov
imul
adc
in
inc
ret
mov
xor
mov
xchg
adc
shll
jl
jg
add
push
sahf
cli
mov
push
pop
and
cmp
adc
les
fcomip
out
loopne
je
loope
fwait
inc
xchg
xchg
iret
movsb
pusha
mov
pop
mov
out
jnp
movlps
sbb
adc
inc
mov
lock
jns
movsl
push
in
inc
fld
js
testl
cmc
pop
fsts
outsl
mov
sar
mov
push
xor
mov
fstpl
inc
dec
sbb
cmp
sbb
xchg
mov
mov
push
cltd
insb
pop
mov
cmp
or
mov
pusha
or
test
je,pt
imul
push
lcall
mov
shll
xor
int3
mov
cmp
mov
push
or
insl
enter
cmp
push
fucomp
ja
xchg
mov
sarb
dec
inc
gs
xor
mov
insb
mov
ja
pop
cwtl
xor
xchg
or
xchg
push
jmp
pusha
aaa
mov
adc
sub
fldcw
fs
lea
inc
adc
mov
or
push
pop
aaa
lock
inc
inc
arpl
fidivs
lret
fcmovnu
dec
mov
out
cmpsb
inc
test
ja
mov
mov
mov
out
sahf
bswap
add
into
fisubl
jo
gs
hlt
mov
jge
mov
xor
sti
faddl
std
jne
jae
push
push
lcall
jnp
jg
jge
mov
cmc
fs
cmp
mov
sbb
xchg
jle
cmp
sbb
xchg
push
addr16
cmpsl
add
mov
popf
mov
mov
fs
cmp
or
adc
mov
sub
adc
xchg
xchg
mov
mov
xchg
mov
nop
and
fimull
sub
add
jg
stos
int3
xor
or
xlat
mov
imul
add
fidivl
mov
adc
adc
mov
add
adc
aas
fistpl
das
cwtl
fstp
jle
or
aas
sbb
pop
lock
push
stc
mov
push
cmc
sbb
std
test
call
pop
notb
inc
shlb
cmp
adc
mov
les
sti
enter
cmp
icebp
scas
mov
out
aam
lcall
subb
es
add
mov
je
or
fs
jecxz
jmp
fildll
dec
push
nop
push
dec
sbb
test
sbb
push
in
je
dec
leave
shr
or
ror
pop
cmp
jnp
and
aaa
pop
sbb
mov
xor
sti
sub
outsl
mov
and
cld
gs
mov
sub
lret
mov
scas
aam
and
jno
enter
test
test
push
inc
mov
pop
cli
addr16
pop
inc
ss
sub
popf
sub
popf
mov
push
iret
add
dec
pop
mov
movsl
xor
cmp
mov
fcmovnb
test
fcomip
mov
mov
ja
dec
jae
aaa
sti
aam
ljmp
dec
cmp
sbb
cmp
stos
popa
mov
fsts
loopne
test
mov
xor
mov
pop
scas
fnsave
ljmp
jb
push
mov
stos
es
sbb
testl
out
mov
dec
push
mov
adc
jb
pusha
sar
or
cmc
sti
nop
xchg
push
int3
push
in
jg
arpl
dec
mov
arpl
lahf
jbe
pop
dec
mov
add
fldenv
sub
jnp
rcrl
fmul
out
push
jge
movsb
dec
fwait
dec
mov
pop
pop
fcompl
repz
lock
je
fmull
sub
mov
faddl
xor
or
dec
popl
or
pop
cmp
test
pop
cmp
and
cmpsb
inc
loopne
inc
insb
ret
pop
icebp
pop
sbb
idivl
adc
xchg
int
jmp
loop
out
xchg
movsl
lods
pop
lock
jl
jecxz
xchg
out
lea
imul
out
dec
and
mov
out
jnp
xchg
xlat
aaa
pop
into
mov
mov
and
jnp
scas
cltd
xor
push
test
fcoml
test
sub
mov
push
scas
sub
popf
mov
mov
xchg
push
jns,pt
imulb
test
ret
adc
dec
or
test
mov
aad
fwait
jne
call
jecxz
pop
inc
push
sub
insb
test
sub
cli
push
in
cmpsb
sahf
mov
inc
int
or
xchg
jo
scas
mov
imul
fbld
sub
xor
sbb
xor
mov
out
cmp
cmc
das
popa
popf
pushf
xchg
mov
in
fnstcw
dec
mov
pusha
jne
mov
pop
add
pushf
divl
mov
add
mov
push
jp
inc
imul
mov
inc
das
inc
arpl
cli
jge
shrb
aaa
out
daa
xchg
stc
dec
push
push
stos
xchg
pop
or
addl
mov
dec
pusha
push
loope
lret
jns
cwtl
mov
ds
sub
jg
xor
jle
sub
xorb
lret
sahf
pop
gs
mov
xlat
sub
push
mov
not
cmp
outsl
xchg
cmp
mov
jns
cmp
dec
mov
andb
jne
bound
ficompl
leave
cli
mov
or
jmp
sbb
out
imul
pushl
into
pop
cmp
jo
cmp
push
inc
rcrb
cmp
inc
cmpsl
test
bound
cmp
popa
cmp
inc
popf
into
add
sbb
gs
sti
inc
fwait
rorb
out
loopne
arpl
add
arpl
pop
jp
pop
int3
push
push
push
cs
cld
mov
scas
add
inc
jmp
ret
loopne
xchg
test
mov
or
mov
ss
or
jl
dec
mov
std
loop
popf
cmp
std
push
xchg
xchg
stos
cmp
ret
mov
xchg
loopne
js
mov
sarl
xor
and
mov
mov
movsb
pushf
sbb
shrb
movsl
mull
push
je
push
mov
inc
push
jp
call
addb
int
sbb
and
pop
jp
xchg
nop
inc
insb
out
cmpsb
push
jno
ds
imul
pop
lock
aas
lds
cmp
ljmp
test
push
and
mov
inc
adc
mov
and
sbb
orl
mov
icebp
pop
bound
repz
xchg
cmp
push
cmp
mov
and
jne
mov
sarb
js
es
and
jg
xor
push
xor
jne
insl
xchg
imul
cmp
mov
cld
test
mov
or
or
jo
xchg
subl
xlat
mov
enter
call
movzwl
jp
sub
fsubrs
iret
cs
cmc
sub
pop
in
sarb
sbb
out
adc
sti
inc
cmp
mov
popf
sub
adc
stos
test
dec
mov
fldl
mov
push
scas
sbb
lods
pop
shld
push
shlb
out
clc
mov
fwait
and
rcll
ds
hlt
xchg
add
cmc
and
dec
or
scas
pop
lods
lcall
mov
out
sti
sahf
pop
adc
call
sti
stos
scas
xor
ja
in
mov
jbe
scas
xchg
inc
test
mov
dec
push
jo
adcl
xchg
cmp
cmp
push
mov
fldenv
adc
outsb
push
mov
push
mov
pop
mov
or
lret
xor
jmp
out
sbb
jno
sub
arpl
daa
and
mov
xor
cmp
ret
in
xor
movsl
cmpsl
shrd
xchg
push
xor
xchg
lods
std
xchg
jo
leave
xchg
out
add
push
hlt
lcall
cmp
int
adc
push
push
insb
add
push
scas
or
dec
std
outsb
lods
stc
decb
mov
arpl
jg
in
fstpl
cmp
leave
mov
loope
scas
aad
in
in
cmc
mov
jb
insl
sbbb
jo
scas
mov
fmul
mov
aad
les
lret
cmp
sbb
xlat
mov
cmovb
jmp
inc
dec
fists
setne
sub
and
or
mov
int
cmp
push
aas
jmp
faddp
ret
mov
xchg
out
sbb
add
or
cmp
jl
xchg
mov
inc
pop
les
daa
cmpsb
scas
push
dec
mov
jle
sbb
fwait
jp
sbb
jecxz
push
push
pushf
repnz
dec
cltd
and
lds
add
in
xchg
mov
sub
lods
xor
dec
push
leave
out
popf
push
pop
mov
xchg
jnp
cli
sbb
lret
pop
sbb
cs
mov
dec
jecxz
mov
nop
push
push
and
aas
pop
cmpsb
xchg
cld
dec
pop
pop
fisttps
dec
jle
jle
cwtl
adc
sbb
push
and
jmp
test
clc
push
xchg
nop
imul
inc
mov
adc
stc
xchg
jg
push
daa
push
and
inc
lds
pop
mov
sbb
subb
or
xor
fsubrl
outsb
dec
aaa
icebp
push
lock
mov
sahf
sarl
cmovbe
sets
add
sbb
inc
movsb
sub
mov
js
insb
ret
nop
xchg
or
push
add
xchg
pop
sub
outsl
pop
pop
jmp
out
pusha
cmpsl
jbe
adc
lock
xor
add
mov
in
adc
dec
in
or
popa
inc
pop
fistpl
pop
in
pop
jmp
xchg
mov
or
inc
adcb
fdivl
mov
iret
test
repz
test
sub
sub
mov
pushf
aad
push
push
mov
adc
aas
xor
xor
pushf
jl
add
in
sbbl
push
push
xchg
pop
jmp
inc
lock
dec
inc
xchg
arpl
sbb
adc
add
fsubs
lret
cmp
fsubs
repz
ljmp
lret
movsb
aam
rcrl
sarb
sbb
testb
dec
push
mov
add
mov
or
sbb
pop
inc
shlb
and
jno
call
les
movsl
adc
insb
icebp
push
popa
into
and
in
leave
sbb
or
roll
adc
adc
mov
lea
cmp
movsl
jnp
or
mov
ficoms
idiv
mov
addr16
std
scas
mov
bound
lods
pop
rorb
cmpsb
cmp
push
lods
jns
cmpsl
or
jnp
loope
out
jle
aam
loopne
mov
pusha
mov
push
sbb
ds
xchg
pop
cmpsl
into
aam
into
cmp
cwtl
sub
clc
inc
adc
cmpsl
sbb
fnstsw
addr16
xor
sbb
negb
fstl
dec
mov
cmp
xlat
roll
stos
cli
or
inc
aaa
pop
jno
xor
mov
and
or
sub
sub
rolb
test
cltd
jge
arpl
ret
roll
fdiv
push
and
int
mov
lahf
fs
pop
xchg
dec
sbb
rol
push
cmp
mov
mov
mov
in
inc
xchg
mov
stc
mov
lods
insl
add
mov
imul
fimuls
int
mov
lock
mov
pop
mov
repz
jge
and
sbb
pop
test
pusha
addr16
sbb
mov
mov
in
orps
xor
pop
das
lcall
lock
leave
jl
xor
adc
imul
ja
lea
dec
imul
lods
rcll
or
mov
add
xchg
mov
jne
jnp
das
insb
jnp
cmc
adc
lcall
sbb
inc
mov
dec
xchg
fwait
std
es
xchg
sbb
mov
mov
push
das
pop
leave
xchg
mov
ffree
mov
jle
aam
xor
inc
sub
lds
sarb
lcall
and
xor
repnz
push
rorl
ret
inc
xchg
pop
aad
imul
adc
lcall
popf
push
push
je
leave
mov
xchg
mov
lret
mov
fiadds
arpl
inc
inc
fisttpl
outsb
and
shll
mov
testl
repz
xchg
jge
mov
in
int3
clc
push
hlt
or
inc
inc
test
add
jmp
jl
adcl
loop
xchg
xchg
mov
jbe
mov
fsub
cmpsb
ds
jno
xchg
pop
sbb
inc
push
inc
rorb
subl
adc
out
int
call
jo
jp
out
push
jnp
test
pop
sbb
shll
lods
inc
inc
lea
jbe
data16
xor
xor
das
adcb
shrl
fimuls
mov
dec
dec
push
inc
sbb
mov
outsl
call
stc
jnp
data16
push
arpl
sub
mov
push
sub
shl
jno
cwtl
pop
jmp
hlt
cmp
and
xchg
adc
mov
mov
pop
pop
test
push
inc
fistpll
in
mov
mov
fsubrp
aam
push
mov
push
pop
mov
mov
lods
xor
outsl
fs
cmp
in
fs
rorb
js
popa
lods
ja
imul
mov
pop
and
jmp
push
jnp
repnz
scas
jnp
push
leave
xorl
into
inc
imul
adc
pop
ja
mov
mov
add
sti
lds
cmpsb
daa
xor
out
aas
mov
push
xchg
jl
fcmovb
loopne
add
adc
sahf
cmpsl
adc
jl
mov
scas
or
stc
pop
fsubrs
imul
outsl
jecxz
fstpl
mov
add
mov
je
cmp
clc
lahf
repnz
aam
lods
xchg
pop
add
mov
pop
arpl
add
cwtl
jns
pop
shll
cltd
or
adc
jb
mov
push
xor
out
jecxz
push
xor
xchg
ljmp
out
dec
or
mov
push
mov
xor
mov
sti
loop
pop
or
xor
divl
std
adc
fidivl
mov
addr16
jl
shrl
mov
xor
outsl
pop
jne
jne
in
xchg
bound
addr16
ret
clc
mov
mov
pop
sbb
lock
xor
adcb
dec
pop
push
mov
gs
enter
inc
xlat
push
jne
cmp
enter
sbb
xchg
cmpsb
lret
push
cmpsl
cs
mov
shl
int
push
push
ret
sarb
mov
out
inc
fdivl
lods
dec
xchg
ljmp
lret
mov
iret
ljmp
aam
lods
mov
jmp
pop
xchg
pop
ljmp
xchg
pop
push
or
sub
stos
sahf
fdivl
mov
sub
add
adc
xchg
test
cmp
int
ss
xchg
or
dec
push
rcll
test
scas
or
pop
jmp
dec
cmpsl
xchg
filds
jle
ret
loopne
add
stc
xchg
sub
aas
jne
int3
mov
mov
jle
push
aas
adc
jl
in
arpl
xorl
pop
sbb
ja
sub
lds
add
and
inc
dec
push
cmp
inc
dec
cltd
jge
xchg
sbb
jmp
push
divps
cmp
inc
and
pop
mov
add
xor
pop
fisttpl
pop
mov
xchg
sbb
shrb
scas
imul
sub
xor
les
imul
or
std
ss
scas
out
gs
sub
sbb
ret
dec
or
cmp
push
sbb
xor
movsl
push
test
out
xchg
cmpsb
xchg
out
mov
js
inc
or
orb
inc
inc
and
in
out
gs
aas
insl
test
adc
imul
pop
xor
xchg
or
fwait
dec
cltd
mov
jecxz
jns
or
mov
mov
test
mov
daa
ret
mov
insb
jecxz
sbb
in
add
inc
ljmp
sub
call
pop
testl
mov
mov
adc
xchg
or
or
lea
and
mov
int3
xor
es
push
adc
sbb
push
aam
stos
bound
jae
fwait
jmp
in
lret
xchg
jae
arpl
cmpsb
lret
fwait
int
xlat
rcr
mov
fcmovnbe
repz
into
outsb
movsb
sbb
fcomi
jnp
ljmp
push
cli
clc
in
jle
pop
push
popf
mov
mov
mov
movsb
enter
add
pusha
outsl
icebp
sub
push
xchg
or
js
inc
lock
cmp
cmp
lods
mov
xor
dec
xor
stos
scas
mov
jg
loopne
cmp
mov
out
inc
stos
in
iret
ds
fimuls
jmp
loop
les
cwtl
sbb
and
cmp
mov
outsl
rep
iret
adc
in
ret
cmc
sub
repz
cmp
jg
add
das
lcall
xorl
das
fisttpl
pop
stos
fisttpll
fbld
jge
out
adcl
out
int
sbb
adc
std
nop
jp
daa
push
icebp
rcrl
sbb
int3
jo
add
mov
and
test
adc
inc
data16
data16
mov
dec
inc
adc
popa
sub
jge
fwait
loope
and
aas
orl
and
mov
push
shll
xchg
cmp
scas
pushf
mov
cltd
pop
daa
xchg
int
push
jne
outsb
pop
sbb
lahf
adc
jne
aad
mov
jmp
ret
mov
mov
imulb
or
mov
or
pop
es
insl
repnz
aas
cmp
pop
xchg
sbb
jge
out
sbbl
bound
jo
push
sub
shlb
scas
push
xor
mov
flds
xor
ret
or
push
in
outsb
push
xchg
insb
nop
loop
je
fsts
scas
rcll
ret
cmp
cmpsb
push
pusha
sub
lods
aaa
xor
xorl
push
arpl
nop
mov
push
dec
add
sbb
jcxz
mov
pmullw
pop
pop
pop
nop
jno
in
push
xor
sbbl
push
int
lahf
cs
icebp
scas
mov
push
jp
push
push
inc
mov
add
nop
test
call
push
push
jl
dec
mov
dec
xchg
popw
pminsw
lret
loop
out
inc
mov
js
jae
dec
stc
insl
ds
aad
out
jnp
jns
or
outsb
out
ret
add
cltd
in
fcomps
int3
dec
xor
or
cmp
rolb
dec
push
sub
pop
outsb
xchg
xchg
movsl
mov
push
loopne
jns
push
dec
dec
es
ljmp
inc
push
sbb
ret
and
test
or
push
idivb
sarl
call
add
sarl
insl
test
pushf
push
mov
shll
imulb
lods
imul
outsl
push
push
nop
jecxz
cmp
pop
out
insb
mov
fmul
and
mov
shlb
push
sbb
in
push
mov
or
shrl
lret
or
test
sbb
cmpsl
dec
mov
mov
or
xchg
add
push
mov
shrl
jno
xor
arpl
dec
mov
ja
lods
je
mov
jb
dec
xchg
mov
pop
mov
mov
pop
dec
jle
nop
mov
or
xlat
mov
orb
mov
stc
mov
lea
jo
ljmp
add
add
mov
es
imul
mov
mov
pop
sub
aad
bound
ljmp
push
sbb
or
ljmp
mov
dec
xchg
push
ja
subb
mov
pop
jne
cmp
dec
or
cmp
int3
pop
pop
sub
inc
in
jg
add
int
stos
push
jp
data16
dec
mov
inc
cmp
lods
mov
repnz
pop
cld
data16
push
push
test
adc
inc
jae
cmp
scas
and
sbb
ss
dec
pop
cmp
mov
push
enter
lds
sbbl
fldl
xor
xlat
and
jp
stc
and
cli
mov
jp
ret
sub
mov
push
cmp
sbb
jp
mov
jp
aad
push
divl
fistpll
mov
push
stc
cmp
xor
addr16
jns
orl
test
adc
jo
lret
mov
in
stos
sbb
mov
in
lods
movsb
mov
sub
mov
ret
inc
mov
lret
inc
xchg
dec
jge
fnstenv
mov
out
insb
imul
cs
fistpll
adc
mov
mov
mov
sub
ljmp
or
rolb
sub
adc
mov
int3
mov
xor
aad
add
adc
lds
or
adc
add
call
dec
sbb
aas
mov
lods
mov
xor
and
call
xchg
xor
mov
test
rcrl
leave
mov
loope
cmp
popf
cs
dec
and
sbb
add
rorl
nop
rcrl
insb
hlt
sbb
enter
out
adc
mov
xchg
and
xchg
je
subl
xor
pushf
mov
ljmp
insl
xchg
add
mov
pushf
and
ljmp
test
inc
adc
mov
mov
mov
lret
pop
mov
aam
test
push
fwait
mov
adc
cmpsb
aad
push
push
and
popa
adc
jb
lcall
pop
in
cmp
faddl
mov
outsl
push
xor
sti
cld
lahf
in
fstpt
push
mov
inc
mov
in
insb
dec
gs
cmc
push
xchg
cmp
data16
inc
dec
and
and
aas
mov
xchg
push
jmp
or
pushf
es
jmp
mov
dec
cmp
sbb
mov
push
pop
inc
dec
dec
xchg
jmp
inc
out
push
fwait
in
je
add
mov
test
ljmp
popa
out
mov
in
xchg
push
add
orb
cmp
lcall
add
add
mov
cwtl
jmp
icebp
scas
xchg
xor
lahf
adc
insb
out
mov
mov
pop
pop
mov
test
push
in
jl
dec
dec
xchg
dec
jbe
mov
adc
cld
out
mov
ljmp
jo
pop
and
xchg
movsl
jp
dec
scas
mov
mov
sti
in
push
sti
es
mov
push
fnstcw
faddp
or
lds
dec
jmp
jne
and
adc
ficomps
sbb
cld
pop
mov
lret
inc
aad
cmp
dec
mov
pop
mov
sbb
movsl
es
pop
nop
or
xchg
jns
outsb
dec
add
mov
mov
fsubrs
add
imul
mov
xor
rolb
pop
lcall
repnz
pop
sbb
in
inc
stos
cmovns
inc
push
fs
sub
rcr
aam
outsl
xchg
jg
andl
leave
inc
mov
xlat
test
aas
dec
push
dec
fsubs
stos
cltd
mov
cmp
mov
jbe
negl
cmp
mov
mov
push
cmp
call
shll
or
lret
ror
mov
mov
mov
xchg
sub
inc
lahf
dec
shl
insb
test
jge
cmpb
mov
jecxz
lea
jns
jmp
pop
and
ja
nop
xchg
in
add
pop
jecxz
push
data16
inc
sub
push
int3
jg
push
fnsave
xchg
ljmp
sbb
imul
lods
pop
in
loopne
cmc
sbb
mull
cmp
nop
mov
jns
stc
or
and
gs
fcompl
or
jp
movsb
push
cmpsb
test
sbb
rcrl
call
adc
idiv
xor
sub
ret
and
lods
mov
fsubr
out
outsl
pop
insb
mov
xor
cmp
mov
aas
sti
enter
xor
jge
mov
call
mov
data16
mov
push
les
aaa
sbb
scas
cmc
fdivl
mov
xchg
out
pushf
aam
scas
inc
xor
mov
int
mov
dec
sarb
mov
push
mov
repnz
push
jb
dec
imul
rcrl
inc
push
loope
stos
or
dec
outsl
xor
push
push
loopne
sub
mov
jo
push
cmp
dec
push
es
outsl
or
xor
push
dec
je
fldcw
pop
inc
or
addr16
aam
or
gs
dec
repz
loope
xor
xorl
push
rorb
imul
add
inc
aad
add
xchg
pop
xor
mov
jle
dec
adc
sub
bound
adc
stc
xchg
out
fisubs
out
inc
jb
icebp
jecxz
cmp
call
cmp
cmp
outsl
sub
mov
jp
add
sti
and
movsl
lahf
xchg
mov
mov
dec
mov
out
in
cmpsb
pop
inc
pop
and
sbb
sub
sub
stos
mov
jl
shlb
cmp
mov
mov
clc
jecxz
add
mov
mov
cmpsb
cmp
lods
and
mov
test
adcb
ss
push
dec
mov
cmpb
nop
jl
stos
aaa
sbb
adc
add
jne
or
in
outsb
clc
shl
mov
jne
pop
xchg
mov
das
or
mov
mov
rclb
push
mov
inc
mov
cmp
test
aas
insb
stc
popa
pop
sahf
popa
mov
add
push
mov
fsubl
jb
lret
jle
fistps
jns
jne
lods
shr
stos
out
mov
mov
add
mov
std
sti
sahf
sub
leave
sub
fildl
ret
enter
or
xor
aaa
mov
mov
movsl
cmc
and
cld
mov
aad
mov
or
inc
fs
in
pop
add
andl
cmpsl
inc
push
sbb
jl
and
mov
push
stc
lcall
pop
mov
jge
mov
pop
fisttpl
mov
clc
mov
xchg
je
mov
adc
test
xchg
lret
or
cmpl
popf
adc
push
xor
ss
inc
loope
jae
jp
inc
add
fdivrp
inc
adc
add
pushf
in
mov
ds
cli
das
xor
and
lcall
out
test
inc
cs
imul
inc
push
mov
dec
mov
mov
inc
mov
push
popf
add
sti
cwtl
cmovbe
mov
jl
loope
mov
and
stc
push
scas
clc
out
daa
insl
sbb
test
testl
xchg
xchg
test
sub
lahf
jbe,pn
adc
mov
push
ss
test
mov
cmp
ss
jp
push
rclb
sub
movsl
push
imul
dec
dec
xchg
push
ja
pop
jmp
js
adc
int3
xorl
pop
adc
push
lret
mov
push
andl
or
lret
xor
shlb
rclb
lret
cmp
icebp
lea
adcb
mov
or
or
mov
dec
adc
or
rol
add
mov
les
lahf
mov
sub
push
loopne
add
pop
xor
push
loopne
jbe
call
je
add
lods
jmp
cmp
sahf
push
stc
loop
jno
or
les
adc
pop
jnp
pop
loopne
gs
jmp
stos
dec
sbb
and
inc
mov
add
push
stos
loop
lea
scas
adc
mov
mov
adc
test
jb
ja
pop
dec
inc
mov
cmp
stc
cld
pop
sub
lock
xor
xchg
and
cmpl
adc
inc
or
ret
pop
push
gs
mov
je
sub
push
es
pushf
pop
je
xchg
repz
inc
popf
scas
in
sbb
sbb
dec
xor
mov
aaa
mov
ja
and
fdivr
jb
adc
mov
test
or
sbb
xchg
out
hlt
sbb
mov
pop
sbb
fstl
stos
jl
sub
fistpll
mov
dec
jns
loope
mov
loope
push
mov
ds
outsl
push
pop
mov
sbbb
imul
into
xchg
test
or
test
inc
pop
or
iret
push
int
repz
adc
filds
pusha
pop
and
testb
cmp
fstpt
out
je
aad
and
cld
sbb
lock
pushf
mov
test
cmp
jge
add
jbe
lahf
je
in
aad
jg
xor
jae
roll
jecxz
lea
sbb
sti
or
enter
push
mov
and
popf
fucomip
pop
push
mov
outsb
in
xchg
add
dec
add
mov
adc
rorl
jns
sub
and
orl
xor
shrl
inc
xchg
dec
lcall
sbb
jne
ret
cmp
adc
mov
loope
cwtl
nop
int
dec
mov
bound
mov
mov
mov
test
inc
pop
jns
mov
cli
cmpsl
scas
ss
xor
in
adc
iret
pop
stos
fdivrs
loop
fstpl
mov
repz
cmpsb
pop
sarl
sbb
lds
pop
adc
and
addl
mov
sub
cmpsl
mov
and
lret
lar
sti
cmp
lretw
pop
gs
mov
test
test
out
sbb
add
filds
sbb
pop
and
adc
xorl
data16
inc
loopne
mov
adc
adc
mov
and
into
mov
push
inc
adc
pop
sub
jno
adc
sub
adc
ret
sub
arpl
and
pop
std
sarb
xchg
repnz
or
push
filds
out
xor
mov
stos
ds
repz
aad
gs
mov
sbb
mov
sbb
mov
loope
int3
mov
jne
mov
xchg
push
je
inc
mov
and
push
jne
xor
fldcw
int3
mov
ficoms
jge
push
das
gs
jnp
add
enter
das
imul
jns
sbb
xor
jae
dec
jbe
data16
rcrb
fldcw
and
push
stc
addb
push
xor
push
sub
repz
sahf
pop
and
pushw
inc
dec
mov
add
mov
xchg
dec
add
dec
stos
call
shl
xchg
or
sbb
cmpsb
stos
test
push
nop
cmp
rol
sub
or
push
mov
adc
pop
pushf
jns
mov
stos
dec
rorb
cld
jno
xor
gs
pop
loopne
add
rolb
jmp
shll
pop
jge
inc
test
jle
pop
dec
fs
dec
out
dec
das
add
push
xchg
mov
addb
and
loopne
jb
mov
bound
xchg
clc
ret
pushf
mov
push
cltd
and
cmp
jae
pop
inc
xorl
or
dec
push
test
push
jo
fdivr
adc
fabs
mov
push
les
push
or
inc
loopne
sti
and
push
mov
cmp
arpl
adc
jo
jge
movsl
dec
pushf
lods
cld
lea
call
mov
test
jp
aam
cli
leave
mov
fsubrl
dec
and
daa
std
aam
and
dec
pop
addb
xchg
int
jge
stc
int
test
pop
mov
pop
cmovo
dec
mov
psadbw
test
pop
jge
cmp
xchg
dec
jb
movb
les
sar
scas
popa
ljmp
inc
xchg
jge
mov
cmc
xlat
mov
dec
mov
push
mov
loopne
ds
push
and
divb
shr
pop
sbb
sahf
cmp
pop
or
cmp
lds
mov
xor
ret
cmpb
fidivrs
out
aam
loop
inc
clc
lcall
push
push
sahf
jge
xor
ljmp
jl
cmp
dec
cmpsl
mov
pop
dec
addl
jns
mov
pusha
or
fisttpl
ror
push
imul
or
sbb
sti
cmp
or
sbb
adc
jp
dec
adc
sbb
dec
lods
xchg
ds
jmp
fdivr
in
int3
fnstsw
cltd
out
sub
test
in
mov
mov
arpl
mov
cmp
xor
xor
out
mov
pop
adc
pushf
mov
xor
test
scas
fs
jae
and
sub
mov
sbb
sbb
pop
add
xor
xchg
loope
push
scas
xchg
daa
ret
xor
push
fbld
push
mov
push
je
cmp
jle
push
add
stos
pop
pop
xchg
xor
sbb
cmp
fs
or
pop
dec
fstl
loop
mov
dec
shrb
clc
inc
xchg
jae
mov
mov
in
sbb
ss
test
push
leave
adc
push
das
cli
jecxz
sbb
fldcw
addr16
flds
sub
mov
add
or
popf
or
nop
lcall
jp
jp
mov
push
imul
adc
stos
ja
xchg
aad
je
repnz
pop
xchg
inc
shlb
push
lods
dec
das
les
fadds
lahf
loopne
test
std
inc
insb
std
mov
add
lcall
lock
fxch
jae
movsl
jle
push
sub
jecxz
pop
es
mov
mov
jno
push
int3
repnz
mov
ficoml
sahf
loopne
out
cmp
and
dec
mov
mov
in
mov
pop
or
cmp
mov
fsubr
mov
xchg
xor
stc
int3
rcrb
psrld
jmp
cld
fwait
scas
dec
mov
jge
jb
clc
cli
scas
push
mov
les
inc
sahf
movsb
pushaw
dec
and
mov
mov
pushf
movsl
rcr
lock
mov
mov
push
fidivrl
and
adc
pop
cmp
cmp
shl
test
sub
rcrb
test
push
dec
nop
or
shll
js
outsb
imul
daa
es
mov
add
mov
jnp
call
ret
push
adc
inc
xchg
in
pusha
add
stc
xchg
mov
adc
sbb
imul
cld
rcrl
sub
call
or
fsubrs
sti
stos
xor
jge
mov
inc
cwtl
xlat
in
lock
adc
out
gs
and
cltd
mov
scas
fs
ljmp
pusha
scas
xchg
mov
mov
dec
xchg
inc
test
xor
push
push
aam
lret
fsqrt
mov
mov
mov
push
sahf
js
stos
add
iret
lcall
cli
dec
in
mov
or
sahf
wbinvd
cmp
jp
into
fldt
mov
cs
dec
aaa
loopne
rcrb
sbbb
leave
clc
pop
ss
iret
int3
call
cmp
cwtl
icebp
mov
sub
mov
mov
dec
adc
int3
int3
push
imul
pop
movsb
fldenv
push
jbe
notb
adc
dec
or
in
and
xor
fdivl
jg
iret
gs
mov
adc
cltd
mov
sub
sbb
mov
cmp
leave
aad
mov
push
dec
mov
push
cs
ret
mov
jle
fadd
enter
xchg
add
push
iret
mov
or
sbb
lea
pop
lods
sbb
lods
mov
push
jns
or
pop
daa
push
push
out
and
and
imull
dec
push
mov
mov
mov
rorb
mov
cmp
add
sbb
sbb
and
lea
sbb
add
sarl
sbb
jle
pop
and
xchg
rclb
jnp
das
call
adc
fsubs
add
pop
aas
leave
iret
ss
inc
fsubrp
repnz
ss
lcall
and
daa
inc
rorl
mov
or
inc
lods
ljmp
xor
addr16
mov
xor
pop
js
les
push
push
jnp
sbb
mov
sub
push
jbe
dec
mov
lds
add
adc
inc
test
mov
in
mov
push
jp
outsl
xchg
aad
xor
nop
inc
jecxz
fldcw
clc
mov
dec
popf
mov
pop
sbb
inc
push
aas
arpl
dec
scas
sub
dec
divl
xchg
cmpsb
mov
in
jb
jno
ss
out
mov
xorb
sbb
dec
pop
cmpsl
xchg
sub
mov
je
aam
and
out
mov
shr
xlat
outsl
mov
add
das
jmp
ljmp
inc
flds
mov
xchg
pop
and
fildll
popa
mov
or
addb
pop
stc
pop
lock
push
sub
jnp
les
faddl
mov
mov
jo
popa
xor
outsb
push
das
xchg
add
stos
push
jb
int3
sub
inc
and
lods
and
xchg
sbb
mov
push
in
inc
cmpsb
ljmp
jbe
inc
sub
dec
sbb
les
cmp
or
in
mov
sbb
sbb
lea
mov
mov
inc
cmp
pop
jl
popl
mov
mov
fiadds
push
xchg
sub
pop
inc
outsb
adc
jne
fwait
pop
fbld
rcrb
xlat
imul
stos
cmpsb
cli
sbb
daa
fs
jecxz
xor
add
lret
mov
std
imul
adcb
rclb
insb
out
js
lcall
jae
cmp
dec
rolb
sbb
ret
in
fs
les
sarl
jo
fsubr
aam
ljmp
mov
mov
jnp
xor
fwait
mov
cmp
hlt
negb
imul
jbe
mov
in
iret
loop
push
push
fs
test
add
jle
jbe
es
rcrb
fistps
sbb
and
movsl
dec
mov
daa
and
mov
ret
bnd
adc
inc
inc
push
add
or
xor
stos
mov
sbb
xor
mov
mov
mov
mov
push
data16
sti
cmp
std
bound
cmpsb
fcomp
test
push
sub
aad
xor
mov
cmp
jns
hlt
je
inc
or
int3
xor
xchg
and
cmc
jbe
leave
push
pushf
cli
test
sbb
xchg
clc
adc
movsb
or
xchg
fisttpl
arpl
imul
or
push
incl
dec
push
aam
jbe
xchg
sub
pop
in
sahf
dec
test
mov
inc
adc
test
adc
pop
jge
mov
fldt
test
out
popa
adc
adc
movsl
mul
pop
and
les
aad
popa
push
cld
dec
cmc
and
int3
add
xor
fwait
aaa
data16
mov
jp
lea
lret
and
sub
inc
cmp
jmp
cs
clc
sub
mov
lret
ljmp
jge
pop
add
push
add
lea
insb
mov
mov
cld
mov
add
fistl
mov
arpl
xchg
cmp
mov
lret
mov
ss
outsl
mov
jns
pusha
jns
mov
and
inc
jo
push
mov
mov
outsl
jb
lcall
cmp
fistl
daa
ss
or
mov
xor
mov
inc
into
sbbb
pop
jnp
push
cltd
aaa
and
sti
sub
scas
mov
xchg
cmp
fadds
fadds
mov
mov
sbb
inc
push
enter
rolb
push
jge
push
flds
inc
call
lea
push
movsl
add
sub
ret
lea
pop
ds
xor
pop
xchg
jmp
rcll
lods
dec
out
loope
pop
pop
jmp
pavgb
shll
push
sbb
pop
adc
xor
test
sub
test
inc
int3
sbb
iret
mov
loope
aaa
je
aaa
clc
lea
push
sar
push
shrl
test
stc
in
sub
pop
pop
outsb
mov
scas
shr
orb
cmp
sbb
fnstenv
and
mov
repz
jnp
nop
stc
sbb
mov
pop
push
adc
jmp
mov
rorl
repz
std
lods
test
cmp
ljmp
push
add
jmp
test
mov
mov
cmc
in
add
out
scas
sarb
dec
jp
mul
fchs
inc
mov
cs
cmp
ss
jb
js
in
scas
inc
lcall
loop
jns
cmpsl
pop
pop
cmpl
xchg
mov
negl
popf
push
imul
je
cmp
lcall
mov
dec
adc
jmp
sub
in
pop
into
stos
pop
xor
outsb
cltd
das
push
scas
or
inc
out
inc
jns
mov
cwtl
pop
out
push
fildl
xor
mov
sub
lret
pop
sub
sub
add
movsl
mov
dec
lret
push
test
int
mov
testb
mov
jns
fadd
mov
pop
pop
pop
ljmp
push
ja
mov
loopne
adc
or
mov
sbb
cmp
test
mov
test
mov
mov
dec
xor
xor
test
mov
es
les
fidivrl
stos
and
xchg
rcr
pushf
jno
test
xchg
in
outsb
xor
fdivrl
aaa
cld
sarb
arpl
into
cwtl
mov
test
enter
ja
outsl
out
ds
push
mov
mov
cwtl
xor
push
cltd
cmp
mov
sti
cmp
or
std
cli
or
cli
cs
out
push
cwtl
fiaddl
push
or
cmp
stos
jb
imull
cmpsl
sbb
fwait
mov
jmp
cmp
icebp
test
jae
jae
outsb
xchg
mov
stc
mov
rclb
fwait
or
xchg
cmpsb
xchg
dec
mov
mov
mov
daa
jnp
adc
dec
sbb
sbb
int3
sbb
gs
inc
sub
cmpsb
push
int
in
ds
xor
outsl
add
stos
inc
or
aam
xor
sub
dec
mov
test
jge
ret
or
or
push
insl
jmp
dec
ret
push
jmp
subb
sarb
mov
xchg
lods
fxch
mov
cli
mov
popa
push
out
dec
inc
add
in
loopne
fidivl
mov
xlat
jns
icebp
mov
mov
mov
cli
jns
ja
push
testl
pop
or
mov
or
stos
and
jns
pop
stos
mov
inc
push
ret
or
rorb
xchg
movl
or
cmp
cld
inc
fisubs
push
fwait
js
mov
dec
mov
insb
jp
mov
out
and
mov
insl
fcmovbe
add
or
xchg
lods
les
ljmp
dec
mov
in
imul
lret
mov
push
arpl
loopne
fidivrs
insl
adc
inc
push
sbb
sub
adc
sub
es
enter
mov
sbb
test
adc
mov
xchg
into
data16
cmp
push
je
mov
hlt
clc
mov
dec
gs
loop
mov
icebp
jns
repz
jnp
mov
pop
cltd
mov
lahf
addr16
jo
fwait
jnp
iret
mov
scas
sub
test
out
out
sbb
sbb
lahf
dec
movsl
std
ja
lret
fxtract
insb
ds
dec
cs
jmp
aaa
xor
decl
in
aas
cmp
xchg
add
jo
daa
sub
cltd
fcmovnu
lods
dec
lock
sub
arpl
scas
cmp
mov
incl
adc
aam
push
mov
mov
jns
cmpsl
ret
nop
push
mov
lahf
pop
movsb
dec
push
shrb
xor
jle
mov
int3
cmp
jge
sbb
scas
ror
icebp
testb
fs
insb
test
shll
cmp
mov
aaa
mov
inc
sub
push
jo
and
mov
arpl
testl
sbb
rcrb
lcall
push
ffreep
daa
push
lods
pop
test
xchg
mov
push
cs
push
test
xchg
mov
adc
xchg
mov
mov
test
jle
mov
jo
out
shll
xchg
add
shl
sub
aad
popf
in
cli
or
in
xchg
out
cltd
bound
cwtl
testb
mov
das
inc
gs
gs
testl
inc
test
and
popf
cmc
cwtl
jl
xchg
xchg
popf
loope
lea
push
pop
insl
mov
adc
jecxz
jo
cmpsb
outsl
inc
jb
fnstenv
add
movsl
outsl
push
pop
xchg
shlb
and
mov
cltd
cwtl
movsb
push
dec
inc
cmp
nop
insl
ss
bound
mov
push
sub
cmpsb
and
jmp
jecxz
nop
add
test
jmp
or
xor
in
mov
ja
mov
inc
mov
cmpsl
in
sbb
xor
xchg
dec
test
in
add
test
stos
outsw
mov
pop
adc
dec
and
leave
rcrb
hlt
push
fwait
shlb
stc
dec
lahf
adc
nop
movsb
or
xor
test
push
mov
movsl
movsb
movsb
cmc
mov
mov
jae
xor
insb
push
adc
dec
test
push
push
cmc
sbb
jno
adc
faddl
xlat
cwtl
jo
jo
jecxz
cmp
dec
fiaddl
pushw
aad
xchg
lods
sbb
push
outsl
mov
fidivs
xrelease
sub
pop
loopne
add
inc
xchg
cmp
inc
movb
in
mov
subb
sbb
mov
pop
lahf
push
cmp
push
aas
shll
cmp
push
loope
out
insl
sub
imul
mov
ds
mov
mov
jl
popl
sar
push
inc
xchg
push
xor
addr16
ret
lahf
cltd
lretw
shrl
lret
xor
mov
sbb
cli
xchg
in
adc
jp
or
jg
xor
aaa
sahf
repnz
addr16
cmp
aad
repz
popa
cmc
push
xchg
arpl
sar
aam
jae
xchg
cmp
push
nop
mov
jmp
fs
lock
pop
mov
cmp
in
lods
push
jnp
inc
mov
xlat
frstor
cmp
out
js
dec
pop
mov
or
imul
popa
popa
sub
fcoml
and
call
scas
pop
push
sahf
mov
mov
mov
fstps
addl
popf
mov
xor
pop
daa
mov
andb
xchg
xchg
aas
push
loop
cmp
dec
push
pop
pop
jg
mov
sub
xchg
popf
test
adc
jb
pop
data16
fbstp
xchg
pop
mov
cmp
mov
sub
xchg
int3
test
jb
jg
jg
popa
fcoms
sbb
nop
in
jne
movsb
cmc
shll
sub
xor
mov
and
in
inc
stos
aam
mov
shrl
es
mov
aas
inc
shlb
mov
lock
adc
cmpsl
mov
loop
xor
adc
popa
repz
popa
jae,pn
jmp
and
stos
add
sbb
subl
stos
xchg
pop
cwtl
nop
push
rorb
sub
int
mov
mov
popa
cld
inc
rol
into
and
xlat
pandn
pop
in
fcmovbe
loope
outsl
in
in
in
inc
cmp
or
jno
pop
mov
out
bnd
shrl
fnstenv
test
sub
fists
int3
lea
or
add
adc
sub
push
das
jge
int3
push
sub
jp
fadds
filds
je
sti
mov
jl
pusha
xor
sbb
mov
lcall
ja
cli
fdivrp
cmp
xor
lods
mov
dec
xlat
outsl
fnstsw
xchg
and
push
pop
dec
pop
sub
cld
rclb
lds
fldl2t
xchg
mov
repnz
sub
push
je
mov
mov
sti
xor
aad
jmp
jp
push
leave
mov
scas
xlat
test
and
sub
std
add
inc
insl
stos
daa
ret
add
sbbl
xlat
sbbb
mov
les
lahf
xchg
jg
loopne
adc
xchg
push
pop
test
imul
cmpsb
pop
xchg
xchg
mov
fidivl
mov
fmull
xor
stos
cmc
push
xor
cmp
xor
das
aad
les
pop
cs
data16
pmullw
and
mov
mov
jb
or
mov
ss
mov
push
pop
aaa
sbb
loop
push
add
push
mov
or
mov
sahf
lock
pushl
lods
pop
jbe
jns
aas
or
push
outsl
sahf
xchg
aas
and
outsl
cld
mov
xchg
negb
out
xor
mov
imull
pop
enter
movsl
shll
lcall
or
jne
dec
jne
in
inc
adc
pop
loop
psadbw
divb
aaa
inc
outsl
lcall
mov
dec
scas
jo
comiss
xor
ja
arpl
xchg
clc
inc
notl
mov
fadds
xor
cli
psrld
scas
and
ds
mov
push
sbb
or
mov
das
ljmp
cli
mov
sbb
loope
sti
dec
mov
outsl
sub
std
std
or
cmp
push
adc
sub
mov
dec
bndstx
push
outsb
outsb
in
arpl
sbb
enter
fdivr
dec
pop
mov
mov
ss
push
lret
xchg
adc
xchg
pop
xchg
dec
and
rcl
addb
mov
xchg
cmp
adc
and
in
lret
xor
dec
mov
test
jmp
jb
or
dec
int3
mov
lcall
adc
xlat
mov
adcb
test
adc
add
js
mov
xchg
cmp
jle
int3
add
les
push
xchg
pop
out
cmpsb
cli
mov
jbe
jns
out
pop
sub
ja
lret
dec
lret
pop
imul
mov
into
shrl
sub
dec
popa
jo
cmp
div
push
mov
ds
mov
test
pop
adcb
dec
rcll
int
pop
pop
lret
fstps
cli
and
int3
sub
scas
cmp
fidivrs
data16
add
xchg
adc
mov
nop
adc
out
mov
push
pop
push
adc
test
mov
ficompl
xchg
xorb
xor
pmuludq
outsb
into
cmp
fcomps
hlt
adc
pop
pop
sbb
mov
dec
xchg
pop
mov
test
push
stos
jno
mov
roll
xchg
mov
rcl
inc
add
in
adc
cmp
xchg
mov
xchg
and
pop
dec
pop
shll
xchg
jp
adc
pop
shlb
dec
adc
or
in
cmc
add
push
sub
mov
sub
ds
int
int3
mov
hlt
popa
sarl
scas
leave
sbb
pop
ret
xorb
push
sbb
lret
sub
jne
inc
dec
mov
test
jmp
ds
jnp
add
mov
xor
ret
sbb
xor
cli
jl
push
aad
jp
clc
inc
sbb
xchg
adc
sub
ds
pop
jl
fs
rcll
cmpsb
adc
bound
sub
push
leave
jge
jae
or
lds
bound
pop
pop
or
int
mov
xor
aas
insb
xchg
test
xor
sbb
jp
cmpl
sbb
and
pop
icebp
std
test
icebp
ja
fstps
cmp
call
lds
insb
fwait
je
jmp
pop
jmp
inc
int3
cmp
lea
or
sbb
fdivrl
xor
sbb
out
sti
lods
or
mov
push
aam
sub
add
mov
add
push
sub
js
push
dec
in
pop
pusha
xlat
popf
scas
xchg
mov
mov
pop
jecxz
cmp
das
sub
dec
orb
add
fstpl
shlb
out
in
xchg
or
imul
sbbb
sbb
sbb
adc
cmp
mov
or
add
in
mov
les
xorb
pop
jge
fsubr
mov
add
and
cmp
jecxz
xor
adc
and
aaa
cmpb
or
ljmp
test
push
adcb
cltd
mov
gs
sahf
mov
mov
pop
icebp
push
call
lods
jge
inc
mov
das
cmp
push
jno
fs
mov
inc
mov
test
cld
cltd
pop
test
icebp
sub
inc
pusha
dec
shr
cltd
fdivrs
or
xor
daa
xor
sbb
sbb
ja
data16
cmpsb
call
lcall
push
jns
xchg
ljmp
leave
test
repnz
retw
or
or
dec
push
loope
or
mov
packssdw
popf
pop
addr16
or
sub
dec
cmp
cmp
mov
jle
out
mov
repz
ss
mov
insb
pop
xchg
sbb
lahf
js
jbe
mov
sbb
and
mulb
nop
mov
inc
fidivl
mov
sub
mov
and
lret
mov
lock
cli
inc
mov
dec
jb
pushf
jecxz
fimuls
test
pop
lds
inc
repz
lea
jns
add
pop
std
sar
into
repz
fld
mov
bnd
lea
lea
fbstp
adc
jb
gs
and
mov
test
fnsave
adc
sarl
sbb
pop
test
into
sbb
mov
ret
je
hlt
ja
mov
mov
jge
cmp
inc
out
popa
lahf
and
xchg
pop
dec
fdivr
notl
add
or
sub
jp
inc
ss
divl
jle
add
or
sarb
pop
pop
xchg
lret
cmp
aad
jnp
ss
imul
xor
xor
sbb
pop
jmp
jnp
cmp
ja
dec
nop
aam
jg
pop
adc
sbb
adc
dec
adc
or
je
xor
jo
adc
jle
lods
orl
imul
lcall
sbb
pop
or
enter
and
mov
int3
test
and
gs
mov
push
mov
mov
and
push
mov
arpl
push
ljmp
push
push
cmp
mov
mov
adc
aas
push
xchg
pop
and
cmpsb
mov
inc
insb
xchg
fimull
push
nop
or
pop
add
fsubs
jae
js
jg
in
fs
bound
test
dec
cs
mov
loopne
lods
pop
mov
out
dec
rolb
xchg
clc
sub
notl
push
mov
jecxz
mov
and
jl
rorb
lock
push
or
idivl
das
fistpll
popf
aaa
outsl
pop
jne
jl
fwait
lret
movsb
js
pop
das
ffreep
jmp
mov
test
mov
inc
rorb
stos
scas
popaw
sbb
mov
jmp
inc
mov
mov
jp
outsl
in
stos
shll
cmp
or
pop
mov
or
adc
pop
loopne
ret
xor
jge
addb
mov
mov
push
cmp
push
mov
dec
ja
xor
insl
or
mov
bound
and
push
cli
mov
dec
scas
imul
xchg
or
push
pop
mov
adc
jmp
push
out
push
mov
clc
ss
sub
and
or
loop
dec
push
hlt
sbb
push
mov
xor
mov
or
nop
popf
pop
rorb
jo
cmp
cmpsl
inc
lret
adc
pushf
mov
push
out
cmp
addr16
divb
and
cvtps2pd
mov
mov
scas
loopne
insl
mov
inc
daa
test
mov
push
lret
and
negb
mov
cmpsl
cmp
sub
lcall
xor
or
loope
xor
scas
push
pop
nop
mov
pushf
lds
pop
fisttpl
jmp
jmp
cmp
cld
mov
jnp
aaa
sbb
rolb
int3
cmpsl
sahf
fldl
sbb
xchg
ret
dec
xchg
enter
arpl
aaa
mov
std
mov
mov
insl
out
rcrl
xchg
bound
cltd
test
daa
jnp
arpl
jmp
lods
add
jo
sub
xchg
outsb
cltd
cltd
adc
xor
lods
jmp
scas
inc
das
and
sub
addl
xor
jle
xchg
out
xchg
cmc
lods
imul
sub
adc
mov
imul
dec
sbb
dec
notb
inc
pop
and
arpl
ljmp
pop
fs
mov
cmp
xchg
and
movsl
aam
or
nop
movsb
mov
loop
dec
adc
sti
jo
hlt
bound
aam
clc
mov
cs
and
xor
lret
aaa
shl
xor
rcrl
ljmp
mov
mov
cmp
dec
push
add
fildll
in
push
dec
cld
xchg
es
xchg
mov
xchg
scas
gs
pushf
pop
sub
ficomps
fidivs
lea
inc
je
dec
pop
test
lret
pop
mov
dec
outsb
enter
inc
xchg
mov
mov
mov
sub
push
loope
pop
test
mov
cmp
lds
pop
sbb
jmp
lret
adc
ds
nop
lock
das
aas
addb
jmp
xor
xor
push
mov
gs
sub
daa
test
or
scas
mov
adc
sub
cli
lcall
call
cld
mov
xchg
or
ss
aam
mov
lock
mov
xchg
ret
sub
add
mov
pop
aad
inc
in
dec
mov
into
cmp
movsb
mov
aad
xchg
or
fldz
xlat
dec
or
notb
pop
xor
dec
dec
or
in
dec
mov
xchg
scas
movntq
stos
fstps
lea
aam
xchg
and
push
jno
mov
push
mov
out
cltd
fistl
or
sbb
lret
lret
adc
inc
ret
or
mov
and
rcrb
mov
jns
dec
and
mov
lds
roll
push
popf
icebp
dec
xlat
movsb
and
sahf
mov
cmp
lods
push
and
fucom
mov
dec
shrl
jmp
jbe
push
sub
xchg
adc
out
mov
sbb
dec
pop
mov
ficoms
imul
cmp
sub
leave
mov
notl
sbb
rcrl
mov
sahf
mov
mov
lods
loopne
or
fldl
movsl
cmpsl
jnp
test
cmp
mov
or
adc
repnz
mov
shll
mov
push
add
add
xchg
insl
shlb
in
data16
lods
in
sahf
xor
gs
cwtl
shrb
je
jo
dec
cmpsl
mov
cs
jae
stc
mov
and
aam
pop
mov
and
push
scas
lods
not
push
repz
jl
mov
dec
add
or
aad
inc
out
cmp
jbe
ficompl
clc
lret
imul
xchg
mov
fwait
dec
test
xchg
je
shlb
je
xor
lret
dec
inc
cli
lcall
xlat
dec
das
scas
into
leave
adc
in
rcrb
addb
insb
fwait
loope
ss
cs
flds
add
fisttps
push
cmp
in
into
ret
dec
push
orl
out
stos
adc
lea
sbb
data16
push
cmpb
sub
fsubr
mov
push
push
shr
insb
sub
push
pushf
test
jg
lretw
xchg
add
stos
xchg
mov
sbb
lds
dec
pop
push
add
lea
lods
pop
cmc
pop
inc
into
aas
out
cld
jne
push
xor
loope,pt
xor
xchg
test
sbb
ja
inc
cmpsl
pop
mov
dec
cmp
push
jb
and
pop
sbb
xabort
adc
fbld
and
mov
pop
fnop
sbb
jg
push
mov
jae
outsl
stc
xchg
cmpsb
inc
dec
arpl
xor
scas
aam
les
ss
jne
or
shrb
mov
mov
xor
ret
xchg
adc
cmp
inc
sub
xchg
adc
adc
stos
stos
sbb
sub
cwtl
mov
fstpl
xor
lahf
mov
imul
cmp
pushf
or
cmp
mov
push
lods
fdiv
idivb
repnz
rcl
sub
cwtl
inc
addr16
fnstsw
push
jns
add
cltd
stos
test
js
mov
add
jne
mov
movsb
aad
xor
insb
insb
or
push
sti
cmc
test
xor
roll
aad
mov
xchg
ficoml
pop
fwait
push
sbb
sbb
fisttpl
imul
push
test
ret
dec
icebp
inc
or
mov
or
into
stos
sub
mov
lods
ja
mov
mov
pop
lahf
mov
insb
pop
pop
lret
fists
arpl
mov
pop
loop
imul
push
mov
movsl
sub
ret
daa
stos
dec
pop
loopne
popa
pop
incb
lahf
bound
adc
inc
rolb
in
add
jns
mov
xor
inc
jb
ficompl
mov
js
cmc
add
outsl
add
mov
jle
mov
jmp
dec
test
add
and
sub
divb
pop
fstps
loop
jb
stos
cmp
mov
push
addl
addr16
mov
lea
sbb
cmc
ficompl
inc
pop
xor
pop
cld
inc
pop
cmpsl
repz
cmp
popf
inc
inc
shll
mov
outsl
xor
push
mov
in
fnsave
push
decb
jecxz
fstpt
and
adc
repnz
pusha
addb
xchg
and
neg
mov
hlt
add
addr16
test
inc
adc
sbb
cmc
addr16
push
jne
add
in
into
and
inc
sub
jns
jo
data16
sbb
aaa
pop
jbe
loopne
jl
ret
mov
fists
cmpsb
ss
mov
mov
jae
sbb
imul
pop
mov
xor
in
fcmovb
inc
jnp
mov
jne
out
mov
push
push
outsl
lea
adc
push
int
pop
cmc
int
ss
mov
mov
outsl
xchg
jg
mov
push
lcall
arpl
icebp
cmpsb
ret
loop
stc
sahf
in
dec
pusha
push
pop
pop
jg
mov
mov
stc
sub
xchg
pop
pushf
negl
cmp
and
mov
lcall
xor
sti
data16
cmp
cltd
push
inc
mov
call
into
lahf
lods
pop
sbb
xchg
andb
xor
cli
and
shl
pop
lock
mov
xchg
bound
movsb
jp
ficoml
imul
xor
pop
adc
stos
mov
inc
pusha
add
push
dec
or
jb
sbb
cmpsb
pop
int3
cmp
cmpsl
js
inc
subb
pop
hlt
ffree
test
rorb
lret
xchg
adc
icebp
pushf
sbb
inc
es
fcomip
scas
es
fisubrl
movsl
xor
push
hlt
enter
lods
dec
jb
push
cmp
shrl
cmpsb
lods
jmp
sahf
xchg
arpl
outsl
sub
sub
cmc
addr16
mov
cmc
xchg
lret
or
inc
fs
xchg
fldcw
std
mov
cmpsb
inc
lcall
std
xchg
mov
push
push
mov
lahf
stos
inc
push
push
xor
inc
mov
call
lea
outsl
out
clc
aaa
sbb
push
adcl
or
int3
bound
shlb
cmp
jecxz
sub
aas
adc
daa
xor
mov
lds
scas
mov
and
loopne
outsl
xor
mov
enter
subb
mov
sbb
mov
push
sub
jno
mov
imull
lods
inc
enter
mov
cmp
mov
adc
nop
mov
inc
into
sarb
jecxz
or
mov
int3
xor
in
and
or
dec
fldt
outsb
jg
inc
and
ret
repnz
push
scas
push
pop
mov
pop
add
mov
jle
mull
scas
mov
lods
rorl
aam
xor
jnp
ja
xchg
push
push
cs
pop
dec
loopne
mov
push
leave
je
call
jle
xor
int
jo
xchg
xor
shlb
sub
out
or
and
into
lods
test
and
jge
cmp
mov
push
scas
fnstenv
loop
adc
mov
roll
sub
xchg
aaa
addl
jae
out
inc
and
daa
pop
outsl
and
test
subb
xlat
imul
rcr
setne
xlat
sub
push
xor
pop
aaa
xor
andl
mov
jl
cmp
jmp
sub
inc
or
iret
dec
rorb
mov
jbe
mov
push
shl
push
fcmovnbe
hlt
imul
dec
pop
and
mov
rcr
inc
xor
rcl
enter
xchg
flds
dec
jmp
loope
jle
fldenv
stos
outsb
inc
push
aam
movsb
cmp
cld
je
popf
or
xchg
mov
push
push
cmp
lds
pop
inc
and
inc
jbe
push
imull
test
sub
mov
test
scas
xor
xchg
sbb
add
ret
add
icebp
push
push
insl
rclb
dec
sbb
aam
lods
add
loope
pop
sub
call
negb
dec
mov
cmpsl
lea
sbbl
shlb
ret
sti
jle
inc
jge
add
mov
lea
cmp
xorb
loop
mov
in
xchg
sbb
shlb
adc
inc
ror
cmpsb
ss
stos
aam
mov
ja
pop
shlb
rcll
pushf
or
push
dec
push
sbb
xchg
sub
add
cmp
mov
cmp
sbb
arpl
or
jg
fptan
inc
xchg
push
lock
push
add
inc
adc
push
fs
sub
fbld
stos
mov
or
fisubrs
out
inc
mov
stc
xchg
xor
push
jnp
dec
jp
js
dec
fdivs
imul
fwait
push
into
test
sbb
pushf
sbb
or
outsl
or
nop
jmp
in
add
sqrtps
mov
inc
ss
cmp
or
jp
scas
insb
fmull
cltd
addr16
in
mov
loopne
pop
mov
faddl
xor
roll
cmc
push
push
outsl
cs
divb
in
xchg
sti
cmp
int
jmp
jb
pushl
adc
cli
pop
pop
test
decl
xor
cli
xlat
push
fnstcw
outsb
test
int
ret
or
cmp
notb
pop
jb
and
rcl
cmp
cmp
mov
dec
out
xor
push
pop
mov
or
push
fwait
insl
mov
addr16
out
cmp
movsl
mov
xchg
pop
jo
hlt
mov
das
sar
xchg
xor
aam
pop
inc
push
es
out
sbb
inc
jecxz
or
daa
mov
and
cmp
push
jmp
pop
roll
adc
or
inc
and
mov
or
aad
pop
jb
cltd
mov
and
add
jmp
sbb
dec
pop
push
jne
adc
jle
ds
sub
xchg
mov
outsb
sti
mov
fisubs
sub
jmp
sub
cmp
lds
enter
dec
idivb
and
xchg
push
ret
mov
lds
lock
testb
mov
mov
lcall
stc
mov
ret
fldcw
inc
cmp
sbb
xor
mov
pop
js
outsb
loop
and
sti
sbb
mov
adc
push
adc
cmc
push
subl
dec
aad
push
jbe
sbb
loopne
aaa
das
aam
mov
mov
sbb
into
pop
mov
incb
movsb
xor
test
aas
inc
dec
test
inc
add
adc
sahf
xchg
push
sub
pop
pop
sahf
lds
pop
scas
inc
sub
sub
out
shl
cltd
push
test
dec
out
jle
mov
rcrl
hlt
xor
repz
jmp
ja
divl
outsb
mov
mov
sti
jo
cmp
mov
lds
fs
add
fwait
pop
mov
xchg
sub
lods
pop
js
and
pop
sbb
ss
in
mov
out
add
dec
mov
stos
dec
test
push
mov
out
aas
mov
aas
notl
inc
adc
fs
inc
lcall
inc
mov
fisubrs
ret
sub
scas
call
decl
pop
int3
insl
leave
daa
inc
outsb
cs
or
lock
lods
jmp
into
xor
cmp
sbb
ret
dec
addr16
aaa
xchg
js
cmp
loopne
inc
mov
push
inc
sbb
das
xchg
sbb
sbb
jnp
sub
sub
in
push
jl
dec
pop
xor
inc
ss
or
cmp
xor
loopne
mov
sbb
jno
lods
adc
test
pop
xchg
punpckhdq
lods
jno
sbb
daa
inc
fs
fs
lods
cmpsl
pop
jns
sarl
rol
mov
pop
push
out
iret
lcall
fwait
mov
bound
mov
xchg
cmp
or
hlt
mov
lods
sarb
jecxz
movsl
inc
push
stos
lods
jnp
jno
imul
jl
mov
test
iret
jmp
and
jp
lcall
mov
jo
movsl
in
inc
xor
outsb
cmp
test
mov
rcrl
push
sub
pop
cmpsl
inc
cld
xchg
gs
push
sbb
pop
stos
je
adc
mov
test
leave
pop
pushf
imul
pop
xor
aam
adc
insl
enter
sbb
mov
mov
out
mov
aas
cltd
mov
jl
pop
pop
arpl
jl
popl
inc
lods
rolb
shrl
cmp
push
aaa
mov
pop
pop
scas
outsl
lock
inc
cmp
mov
inc
push
out
pushf
lea
lahf
xor
jnp
mov
icebp
lock
lods
pusha
xor
cwtl
adc
cmp
jp
pop
loopne
adc
jecxz
imul
ljmp
mov
and
pop
push
sub
mov
sub
cmc
shll
rclb
mov
imul
ffree
cmp
add
stc
in
mov
fdivrs
xchg
jb
dec
xchg
sbbl
out
lds
push
rcrb
sbb
inc
cwtl
loopne
outsb
pop
mov
notb
mov
jne
push
rcl
push
pop
cs
pusha
jne
bound
cmp
mov
scas
sbb
or
ljmp
das
jl
into
push
insl
das
or
add
mov
lds
jg
bound
add
push
pop
test
xchg
xchg
sar
push
roll
jne
or
push
mov
jg
jno
mov
stos
fldlg2
nop
int3
es
scas
call
inc
xchg
leave
test
aam
mov
scas
add
in
shll
pop
int3
xor
std
repz
fisttpl
lcall
xor
loopne
arpl
cmp
iret
xchg
add
icebp
in
push
xchg
and
lds
out
std
sbb
pop
iret
xorb
mov
das
push
repnz
es
sbb
sub
pop
xor
pop
jmp
test
in
sub
insl
mov
rclb
xchg
lock
xchg
mov
dec
dec
and
and
bound
xor
and
addr16
jl
jl
mov
bswap
push
inc
bnd
adc
sbb
jns
add
push
outsl
pusha
dec
push
cmp
pop
mov
outsl
dec
loopne
cs
mov
outsl
mov
dec
adc
daa
test
or
sub
pushf
or
fs
dec
aam
call
jbe
and
stos
bound
push
mov
jp
in
pop
push
dec
adc
loope
mov
ret
xchg
or
mov
test
mov
cld
xlat
gs
xchg
lods
int
imul
dec
and
add
ret
and
shr
jg
or
jg
loopne
adc
lcall
mov
lcall
shrl
jp
pop
in
sbb
push
insb
add
jne
sub
scas
push
inc
mov
jl
mov
lahf
sub
push
and
insl
das
sub
int
xorl
pop
ret
test
and
inc
dec
pop
pop
out
cmp
scas
rclb
adc
xchg
scas
cmp
repnz
pop
mov
insb
das
jle
jmp
dec
pushf
xor
test
in
les
stc
imul
push
imul
clc
cmpsb
push
fwait
mov
sbb
loopne
lcall
aam
xor
jge
and
pop
add
jb
inc
sub
xlat
arpl
mov
xchg
fidivl
outsl
ret
push
mov
sahf
add
aad
pop
adc
jp
pop
mov
arpl
cmp
pusha
pop
das
mov
mov
mov
xor
pusha
test
cld
movsl
movsb
add
lcall
out
mov
mov
shl
sbb
push
lahf
add
les
popa
push
js
filds
enter
in
cmp
add
pushf
leave
divb
cmp
outsb
push
imul
mov
sti
jo
movsl
push
dec
js
mov
aad
xchg
push
in
mov
add
inc
leave
test
iret
dec
loop
push
sub
mov
cmpsb
inc
lret
or
pop
add
dec
mov
or
jns
inc
adcb
or
pop
aas
shll
das
iret
aas
int3
outsl
in
int
mov
cli
ds
cmpsl
jg
mov
xchg
pop
lock
jmp
push
mov
pusha
and
add
jb
xor
lret
pop
test
cmp
stos
rcr
sub
pop
aaa
sti
add
out
pop
cs
mov
adc
adc
cmp
stos
insb
enter
sub
sub
xchg
pop
std
gs
dec
pop
pop
aad
rcrl
or
cmp
cmp
fldt
imul
mov
rorb
sbb
jns
dec
int
ljmp
dec
xor
mov
sti
mov
mov
inc
out
mov
mov
push
mov
in
jmp
aam
jp
mov
mov
cltd
in
arpl
push
insl
clc
andb
test
jo
out
sar
push
rorb
insb
xor
cmp
pushf
repnz
mov
mov
dec
outsl
mov
cltd
and
add
sahf
inc
icebp
rcl
hlt
sub
adc
dec
outsl
outsb
stos
into
dec
js
jp
ret
mov
imul
hlt
mov
pop
xchg
cmp
cmp
adc
push
sub
jo
lret
jmp
xchg
roll
pop
dec
cs
cs
frstor
adc
and
and
cwtl
lret
xor
pop
cmpsl
cmc
dec
adc
sbb
jnp
popf
arpl
xchg
test
push
sbb
fildll
clc
mov
adc
and
je
fadd
pop
mov
mov
cmp
or
jae
dec
imul
jp
int3
dec
jg
scas
jb
mov
add
adc
stos
dec
scas
cmp
sbb
pop
push
inc
and
cmc
add
movsb
rclb
stos
test
fwait
js
and
stos
mov
xchg
ljmp
pop
and
add
mov
mov
mov
mov
pop
aas
jne
inc
lcall
jo
pop
push
pop
add
leave
cmp
lret
pop
or
sarl
rol
imul
mov
mov
imul
lret
add
xor
xchg
dec
testl
sbb
xchg
das
xchg
add
mov
imul
mov
dec
mov
nop
or
fcom
shll
xor
dec
push
adc
clc
mov
jb
sbb
stc
dec
ds
inc
addr16
sub
mov
mov
repz
imul
int3
dec
adc
xchg
arpl
mov
js
mov
dec
arpl
mov
into
mov
cli
scas
dec
gs
jl
mov
in
lds
loope
lock
ljmp
mov
pop
dec
out
push
pop
std
mov
xchg
add
mov
scas
push
push
int
insb
jne
aam
sub
cld
fistl
in
nop
xor
pop
jns
in
mov
xor
divb
sub
imul
mov
xchg
cmp
pop
jno
inc
int3
sbb
add
pop
inc
or
outsl
popf
enter
fidivs
mov
lret
xchg
sbb
sub
pop
sub
push
cmp
loope
sub
push
out
mov
out
push
mov
or
xlat
hlt
fcoms
lret
jbe
xchg
lcall
sub
sub
cli
call
mov
xchg
popf
cmp
mov
xor
popa
rcrl
adc
pop
mov
jp
sub
lea
pusha
push
shrb
insl
mov
movsl
sub
dec
in
ss
xchg
adc
jb
call
popf
adc
xchg
fwait
dec
ss
xor
mov
bound
xlat
outsl
clc
inc
mov
sbb
pushf
fistpll
lods
lock
stos
daa
cwtl
sub
imull
fadd
pop
ljmp
xchg
xor
jp
fistps
nop
jp
lcall
dec
stc
dec
xchg
aas
divl
mov
mov
mov
mov
fs
xchg
out
std
dec
mov
jns,pt
notl
lock
lret
mov
xor
mov
push
das
jmp
mov
movl
mov
push
in
sub
in
fildll
insb
inc
or
hlt
jns
push
sub
xor
add
pop
or
lods
orb
idivb
lcall
push
aas
daa
xchg
pushf
cmp
pop
stc
stos
btr
xchg
push
xchg
push
pop
aad
cmp
daa
adc
pop
mov
mov
ljmp
loopne
xchg
imul
fdivr
aad
add
sti
cmp
shll
dec
or
cmpsl
cmp
lock
cltd
dec
orl
dec
movsl
icebp
cmp
scas
xor
enter
xchg
aad
inc
dec
scas
rcr
push
fdivrp
cld
xor
jo
sbb
or
cmp
xchg
mov
xchg
sub
sub
js
push
and
subb
adc
pop
push
fadds
pop
mov
mov
mov
outsl
aaa
fstp
adc
mov
push
sbb
jne
imul
es
dec
cmpsb
mov
scas
mov
hlt
cmp
xor
add
dec
data16
rorb
je
sub
dec
sbb
imul
fs
testb
or
sbb
jmp
jge
leave
arpl
cmc
cmp
add
cs
push
or
stos
jge
into
std
imul
jmp
adc
rorl
push
imul
and
add
dec
rolb
xchg
sbb
xchg
aam
jbe
add
pop
hlt
add
sub
push
xchg
bsr
data16
popf
adc
mov
shl
iret
es
fstp
push
fidivs
std
es
pusha
lods
or
push
mov
jnp
pop
fcoms
je
test
mov
adc
xchg
fneni(8087
int
lods
push
rcrl
outsb
and
jmp
inc
xchg
les
pop
mov
add
out
mov
sahf
lods
scas
push
inc
scas
xlat
inc
push
pop
shlb
cmp
test
adc
adc
and
popa
dec
mov
imulb
out
ficoms
mov
mov
push
add
and
add
sar
mov
xor
mov
pop
cmovle
inc
jae
xchg
jo
cmp
addr16
pop
inc
and
push
and
mov
pop
mov
es
popf
inc
mov
xchg
scas
mov
jl
mov
push
lret
std
fmul
fwait
rorl
icebp
std
xor
mov
in
inc
sub
mov
push
add
sub
arpl
jb
and
lea
adc
add
in
nopl
cmp
pop
inc
add
and
stos
sub
mov
mov
and
das
jb
adc
scas
lods
int3
std
pusha
cmp
mov
pop
mov
sahf
add
push
andb
jne
jnp
cmpsb
and
mov
test
pop
cwtl
jo
sti
cmc
inc
imul
fstpt
pop
mov
inc
sbb
bound
and
test
jnp
fisttps
ss
rclb
iret
in
aad
imul
filds
mov
clc
cwtl
addr16
inc
push
sub
out
xchg
xlat
fdivs
outsb
int
pop
rorb
dec
mov
push
pop
push
popf
std
fnstcw
ficoml
ret
icebp
lock
jmp
movsl
das
cmp
push
out
mov
dec
data16
cs
aam
adc
xchg
and
out
fwait
mov
fcomps
dec
imul
sbb
pop
inc
cltd
or
mov
pusha
stc
cmp
outsb
cs
add
or
push
pop
sub
mov
les
pop
fcompl
int3
xor
mov
dec
test
jp
iret
gs
pop
rcll
mov
ret
push
inc
push
fsubrs
add
nop
xor
push
sahf
push
insb
in
inc
pushf
lock
or
movsl
scas
out
mov
stos
jb
icebp
popa
dec
jnp
pop
out
xor
lcall
add
clc
movsb
cmp
cmpxchg
mov
int
sub
jno
xlat
sub
lods
xor
mov
fidivs
stc
test
test
repnz
loop
add
cmp
sub
pushf
lret
lahf
dec
inc
or
adc
push
mov
sbb
xor
jmp
mov
pop
jmp
inc
push
mov
mov
adc
fistps
inc
adc
pop
xchg
fs
shrb
in
iret
out
sub
xchg
jns
sbb
pushf
sbb
sbb
loope
adc
mov
mov
cmp
in
mov
sti
cmp
inc
jp
mov
mov
repnz
nop
stos
cmp
cmp
aas
fstpt
roll
jg
outsl
in
cmp
hlt
mov
imul
negl
and
sub
mov
or
pushf
mov
cmpsb
fwait
mov
jp
repnz
enter
clc
pop
bound
or
jmp
xchg
inc
inc
jmp
xor
pop
icebp
rclb
pop
sbb
pop
mov
or
pop
push
aaa
scas
test
mov
movsl
adc
mov
ss
pop
inc
daa
shrl
jae
dec
pop
mov
es
stos
or
negl
mov
and
in
popa
les
imul
pop
rcl
push
test
mov
test
inc
xchg
pop
inc
outsl
loopne
jb
clc
xor
sbb
jp
cmp
adc
cli
push
inc
loope
mov
test
adc
mov
push
outsb
adc
in
cmp
adc
sub
sahf
push
rolb
fwait
mov
cmp
jecxz
push
push
rol
xchg
inc
pop
sub
rcrb
push
leave
rolb
negb
lods
test
popa
dec
jbe
aad
pop
icebp
mov
or
dec
rol
arpl
sub
movsb
jg
insl
and
mov
nop
lds
rcrl
out
pusha
stos
out
push
lock
cwtl
aaa
mov
stos
cmp
xchg
sub
push
jl
xchg
mov
rcrb
out
rcrl
fisttps
aad
sbb
mov
leave
in
jmp
movsl
jp
call
mov
shlb
les
loopne
sti
dec
mov
add
movsl
or
popl
ficoms
enter
sub
xor
popa
call
loop
pop
movups
pop
ja
cmpsl
cmc
shl
ljmp
xchg
sti
in
movswl
ja
imul
fcompl
stos
jbe
jo
sbb
scas
icebp
lds
xchg
mov
aaa
out
push
into
bound
fs
out
pop
out
pop
mov
xchg
repz
cld
xchg
pop
mov
cli
mul
fisubrl
mov
mov
stos
mov
mov
cmp
jge
sub
dec
in
fidivrl
or
lock
loopne
jmp
mov
outsb
jns
insb
in
mov
insl
movsl
and
mov
and
bound
mov
dec
and
jno
dec
call
pop
in
xchg
sbbb
ljmp
adcb
cmc
stos
pop
cmpsb
leave
movsl
add
int3
xor
sahf
je
je
pop
js
inc
mov
dec
adc
lods
xchg
xor
jne
outsl
into
jmp
mov
out
cmp
jge
or
inc
lock
mulb
je
or
jns
inc
insb
out
in
jle
jo
cmp
clc
in
pop
xchg
ss
mov
mov
jp
cmc
jae
sub
pop
pushf
fmulp
dec
cmp
mov
enter
movb
mov
mov
add
lock
mov
icebp
ljmp
rcrl
mov
adc
jecxz
loop
shlb
mov
fcmovnbe
stos
jae
xor
add
cld
scas
xlat
push
je
push
enter
scas
addr16
mov
add
testb
adc
js
hlt
icebp
push
or
pop
or
in
icebp
test
inc
outsb
lcall
rolb
or
adc
bound
int
adc
inc
and
inc
xchg
xchg
fsts
aaa
push
ret
into
loop
jb
and
dec
addr16
or
ret
xor
imul
out
pop
mov
cmpl
and
mov
rcrb
nop
mov
aam
xchg
push
xor
int3
and
fwait
leave
mov
test
push
dec
aad
sub
sub
mov
sbb
sub
xor
popf
cltd
cmp
subl
in
pop
push
xor
lods
push
jmp
mov
jmp
xchg
ljmp
xchg
and
adc
daa
mov
sbb
mov
das
pop
mov
mov
pop
xchg
pop
xor
dec
dec
lret
fwait
mov
cmp
lahf
cmp
jge
hlt
je
or
dec
xchg
jmp
loopne
sahf
cmp
fimull
cmp
data16
mov
cwtl
adc
push
mov
mov
orl
pop
xorl
nop
mov
not
lret
cmp
je
ret
test
mov
pop
out
xchg
push
adc
xor
gs
mov
popf
cmp
xchg
mov
stos
mov
and
cmp
mov
xor
mov
lods
push
test
or
outsb
push
int
cmpb
mov
and
mov
jmp
mov
lret
xchg
mov
je
loope
add
lods
lret
mov
xchg
orb
mov
add
adc
fsubrl
lock
shll
adc
xor
sti
jne
push
call
push
inc
push
mov
sbbb
sarb
push
adc
mov
sarl
inc
mov
lds
mov
pop
jge
mov
mov
xor
xor
pushf
mov
sti
int3
dec
insl
movsb
cld
and
or
adc
ds
mov
cmpsl
mov
insl
push
jl
leave
cs
push
cltd
daa
sub
jmp
aad
mov
mov
xchg
insb
jmp
outsl
adc
in
in
daa
test
enter
xchg
in
or
cmpsl
in
lret
cld
sub
push
xor
pop
mov
out
dec
dec
xchg
scas
stos
cmp
pop
ds
imul
xor
pusha
stc
adc
jge
pop
out
popf
repz
inc
out
scas
inc
scas
fisttpll
sub
inc
jne
jmp
or
push
mov
adc
sbb
or
add
rcrl
jl
daa
jecxz
das
cmp
mov
lahf
popf
movsb
push
lcall
jle
lea
cmpsb
mov
aam
out
outsb
pop
rorl
popa
es
das
xor
insb
frstor
sbb
pushf
dec
sbb
push
cmc
sahf
and
sub
clc
or
les
jp
test
inc
clc
out
fs
shrb
divl
or
icebp
mov
shrl
xorl
int3
std
decb
out
test
rolb
test
adc
packuswb
dec
stos
sbb
nop
shrl
cmpsb
enter
subb
fnstcw
cs
das
fdivrs
pop
mov
adc
testl
popf
sbb
aam
popf
add
jmp
popf
hlt
or
mov
sbb
lds
ret
test
push
inc
imul
mov
into
and
jnp
push
dec
push
push
jnp
lea
outsb
inc
stos
cld
sbb
jl
adc
fildl
mov
push
icebp
rcll
repnz
ds
or
imull
xchg
mov
ss
das
fisubrs
loop
xchg
int3
inc
xchg
jg
pop
sbb
sub
stc
mov
jb
push
test
test
adc
rorl
insb
popl
nop
cmp
pop
inc
in
iret
aam
xor
enter
xchg
xchg
cmp
xlat
sub
mov
test
nop
shlb
push
pop
js
dec
mov
dec
movsl
out
fsubr
mov
ss
push
cmp
std
adc
sti
out
mov
dec
mulb
cmp
sti
call
cmpsl
clc
or
movsl
call
sub
aam
dec
jp
fisubrs
xorl
loop
jl
out
imul
mov
sbb
out
adc
mov
mov
xor
dec
fwait
addr16
and
notb
lock
fisubl
shll
or
mov
insb
sbb
adc
mov
jns
sub
jno
into
jne
and
aaa
sub
pop
sbb
adcl
fmul
lahf
jnp
cmpsb
pop
clc
jae
push
in
cmp
iret
fs
icebp
cmp
cltd
inc
push
mov
pop
call
adc
enter
jns
ljmp
mov
mov
xlat
xchg
mov
and
repnz
ret
dec
push
test
repnz
test
and
sbb
cmpsl
ret
rol
std
add
aam
pop
fldl2e
ret
adc
mov
sbb
or
pop
aas
sahf
jp
aas
popa
xor
aad
push
rol
stos
lds
and
dec
test
dec
or
movups
sarb
jle
cmp
int
jb
addb
std
sarb
sub
cmc
mov
outsl
pop
jp
adc
stc
out
aam
lock
jmp
jnp
cmpsb
adc
add
pmulhw
adc
pop
and
notl
insl
loope
adcb
pushf
xchg
icebp
push
sbb
ljmp
out
lea
inc
inc
in
cld
and
out
in
popa
cwtl
xor
outsl
outsl
or
dec
negl
sti
shl
push
mov
insl
jo
push
mov
mov
rcr
xchg
mov
push
sahf
jle
cwtl
sub
lock
mov
repz
bound
cmp
dec
cwtl
mov
xchg
sub
repz
std
dec
test
pop
pop
sub
jb
and
dec
cmpsb
cmp
ljmp
pop
dec
stos
call
fwait
sub
mov
xor
push
test
mov
sbb
rcrl
arpl
aam
jae
out
ret
ret
mov
adc
mov
adc
sar
mov
into
mov
dec
jge
int
xchg
inc
cmp
mov
andb
mov
xchg
imul
xchg
ficoms
aaa
jne
std
cmp
pop
rol
jne
jo
xor
cmp
cmp
pop
cmpsl
cmp
hlt
sbb
scas
jge
add
xor
mov
push
ret
pop
test
adc
ljmp
fimuls
insb
rcll
pop
mov
jne
and
sub
mov
loopne
or
popa
out
cmpsl
xchg
scas
lretw
add
cmp
push
xor
mov
mov
gs
xchg
popa
stos
jp
sbb
and
xor
je
and
mov
pop
pop
ljmp
xchg
inc
xchg
into
or
cwtl
cmp
mov
inc
sbb
cltd
mov
es
je
dec
in
or
push
outsl
mov
and
clc
ja
mov
and
test
shrb
mov
jns
cmp
leave
rolb
mov
pop
test
dec
push
or
xor
dec
jg
std
scas
enter
add
dec
scas
test
outsb
push
cmpsb
cmc
add
popa
test
adcl
inc
aad
mov
jmp
mov
xor
xor
addr16
mov
inc
sbb
adc
xor
adc
adc
xor
cmc
cwtl
pop
adc
xchg
dec
dec
or
cwtl
insl
dec
in
lret
mov
xor
test
stos
cwtl
xor
rcrb
mov
les
jge
xor
in
xor
cli
add
daa
xchg
std
insl
jg
fisubrl
fidivs
std
sbb
mov
pop
test
aad
jl
fs
jnp
lahf
lret
lret
popa
mov
in
inc
push
das
call
fisubl
into
xchg
imul
xor
leave
or
jne
rcrb
sbb
dec
add
cmpsl
sbb
xor
stos
jmp
jmp
sub
jp
pop
pop
push
add
pop
xchg
sbb
sub
add
stos
add
jp
add
xchg
sub
mov
ret
enter
les
pop
outsl
jl
icebp
cmpsl
cwtl
mov
stos
push
adc
notb
push
lcall
sub
test
in
out
cltd
inc
mov
cs
xchg
add
and
ficompl
fiaddl
sti
leave
dec
jns
ds
sub
scas
xchg
mov
loop
repnz
push
mov
movsl
movsl
inc
jb
cmp
mov
jne
fbstp
out
xchg
sub
or
jle
cs
hlt
aad
sarb
xor
data16
mov
push
jne
outsl
push
mov
sbb
jo
push
mov
sub
jb
repnz
jp
dec
loop
int3
xor
ret
nop
sbb
loope
lret
sub
or
shr
xor
loope
cltd
mov
push
xchg
pusha
push
das
jae
iret
adc
ds
jmp
push
inc
mov
int3
cmp
dec
and
push
fwait
sub
jnp
jmp
leave
fbld
pop
int
out
leave
into
pushf
fistpl
push
dec
xor
and
xchg
mov
imul
xor
movsl
stos
lret
aaa
and
cmp
popa
xor
dec
mov
in
aad
loope
cld
adc
addr16
or
pop
mov
push
in
in
cmp
inc
andl
ss
pop
push
stos
push
cmp
and
enter
mov
or
sub
lret
sbb
fistps
and
jo
loop
sti
pop
shlb
and
les
fildl
mov
mov
scas
pop
jo
es
xchg
mov
inc
inc
cs
push
sbb
cmp
push
and
cmpsb
pop
pop
int
mov
jmp
xchg
icebp
loope
inc
push
popa
add
test
in
xchg
nop
in
sarl
cmpsl
xchg
pop
movsl
jns
adc
lods
xor
jp
push
inc
imul
jmp
mov
arpl
imulb
fcompl
clc
fists
shrl
cwtl
jge
enter
fistpl
mov
xchg
adc
out
xlat
movsb
pop
in
pop
stos
xchg
inc
aam
lahf
jp
jb
out
insb
and
mov
and
dec
and
movsb
fstl
dec
rorb
dec
xchg
aaa
ja
jp
and
sbb
ss
sub
xchg
out
adc
inc
movsl
mov
pop
bound
xor
and
mov
push
push
testl
sti
mov
cli
xor
outsb
fs
in
jge
fmuls
mov
xor
dec
fsts
movl
test
add
out
lds
jecxz
and
scas
jno
lods
adc
int3
mov
adc
xchg
mov
xchg
or
arpl
adc
imul
divb
stos
pop
push
dec
and
roll
inc
lods
aaa
in
push
pop
sbb
dec
cwtl
dec
or
dec
xchg
bound
pop
pop
jno
xor
cmc
sub
mov
xor
or
cmp
inc
ficoms
in
hlt
fbld
adc
fmul
ret
int
jne
push
scas
ljmp
and
fdivrl
pop
std
loop
mov
into
in
test
in
or
inc
roll
xchg
lea
je
test
pop
leave
sub
mov
notb
imul
movzbl
lock
loop
cmp
popf
pusha
ds
in
lods
test
add
andl
xchg
xor
lock
pop
lcall
pop
pop
pop
insl
jg
outsl
dec
jp
aas
movsl
sbb
mov
sbb
decb
push
push
insb
pop
cmp
icebp
pusha
xchg
in
sub
sub
cmp
mov
xor
test
shlb
push
int
mov
inc
testl
test
cs
call
jne
decl
cmp
mov
data16
mov
jge
outsl
aas
sbb
and
faddp
es
ja
lods
mov
lods
xor
ljmp
adc
or
push
xchg
pop
repz
jl
mov
dec
dec
inc
je
cltd
adc
jmp
jge
push
rcrl
sbb
rorl
cmp
and
dec
hlt
push
rcr
aam
xchg
inc
hlt
shrl
xor
add
filds
icebp
rclb
rcl
jecxz
imul
sbb
mov
faddl
mov
in
add
in
or
xorb
inc
xor
outsl
jno
and
movsb
pop
fwait
scas
sbb
stos
jle
xlat
ss
cmpsb
nop
mov
pop
jne
push
xlat
ret
pop
std
push
mov
sub
jo
or
adc
addb
shlb
cs
mov
aam
sbb
lcall
xlat
inc
and
outsl
mov
rcl
mov
hlt
shr
dec
in
std
sbb
dec
imul
iret
cmp
cli
xlat
stos
std
cmp
stos
out
add
movsb
imulb
rcr
popa
hlt
icebp
pop
jnp
adc
xchg
jnp
jae
lods
in
sarl
sbb
andl
adc
mov
mov
mov
sbb
aam
push
push
lret
xchg
pusha
mov
gs
fisttpll
lret
ds
fcomps
xchg
lcall
add
adc
push
cmp
sub
push
cmp
push
hlt
push
xchg
icebp
ret
outsl
fsubr
movsl
sbb
enter
stc
sarb
jnp
repz
sub
cli
ret
shrb
sub
movsb
aaa
orb
pusha
pop
jno
dec
loope
out
pop
mov
outsl
stc
mov
mov
mov
inc
jo
aaa
xchg
mov
jp
mov
sub
push
idivb
mov
pop
int3
mov
xchg
mov
and
push
enter
sub
push
xor
test
adc
lahf
dec
enter
popf
xchg
sub
mov
cmp
push
mov
jo
imul
jbe
pop
lea
in
xor
rorb
sti
and
mov
sbb
jae
out
faddp
xor
out
test
or
and
adc
jae
vmaxpd
xor
out
cs
sarb
scas
mov
or
fnstsw
test
test
pop
add
push
orb
mov
sub
sbbb
cs
push
add
popa
shll
pop
adc
push
out
add
xor
mov
cmp
in
sub
stc
lcall
lcall
inc
sub
lods
repnz
rorb
dec
imul
std
mov
add
outsl
inc
cmp
das
lds
push
pop
sbb
incl
shrb
sahf
in
ret
push
mov
sahf
pop
mov
insb
lods
inc
xchg
and
scas
test
dec
sub
sub
int3
push
or
mov
mov
dec
divl
xchg
or
pop
push
mov
data16
fidivl
shl
mov
cwtl
lahf
push
mov
pusha
sbb
xchg
fwait
clc
fimull
movsl
imul
and
mov
xchg
inc
push
test
fcmovu
repnz
push
jecxz
sahf
cmc
loopne
dec
mov
sbb
xchg
push
mov
test
pop
jns
xor
daa
adc
add
std
test
test
cmp
and
xchg
test
sti
leave
dec
out
add
shlb
xchg
and
pop
push
into
test
add
cmp
cmp
fstl
pusha
push
imul
out
xchg
js
frstor
test
jmp
lcall
mov
or
testb
arpl
inc
shrl
sbb
xor
mov
loope
jb
stos
adc
mov
iret
push
lods
outsb
sub
dec
sub
adc
or
sub
adcl
inc
or
push
inc
or
cmp
sub
cmp
pop
cmp
add
ljmp
xor
jg
out
xchg
cmc
cld
jle
mov
mov
movsl
mov
lret
xor
pop
or
into
imul
mov
jbe
arpl
mov
test
lods
xchg
dec
mov
bt
dec
pop
xor
jnp
sub
sar
scas
stos
mov
gs
cld
inc
pop
xchg
pusha
in
stos
jecxz
pusha
das
mov
xchg
insl
or
stos
and
xchg
sarl
and
in
push
repz
ds
jae
pop
insb
mov
cmp
push
lods
test
leave
xchg
lcall
in
xorb
inc
or
mov
lods
scas
add
and
inc
imul
in
icebp
inc
ljmp
repnz
lods
sbb
mov
inc
lret
jg
adc
xor
std
sub
mov
lods
mov
popa
xchg
mov
or
jo
mov
xchg
mov
lock
mov
jmp
sbb
loope
arpl
pop
inc
cmp
inc
and
push
xchg
pop
pop
shll
sar
in
pand
outsl
jbe
out
call
fildl
fmuls
adc
jl
rclb
rorl
movsl
push
nop
rclb
mov
mov
scas
push
std
sahf
lret
and
js
lret
aaa
sub
out
jmp
ljmp
sbb
mov
mov
ja
icebp
xchg
rcrb
xchg
jmp
test
jae
call
loop
sbb
push
into
leave
mov
jecxz
add
cmpsb
fwait
lret
pushf
iret
fsubrp
jnp
inc
inc
jo
dec
jecxz
lock
inc
in
aaa
mov
add
xchg
push
lds
fistps
add
rclb
ror
cld
stos
daa
push
sbbb
dec
and
loopne
or
in
mov
sub
ljmp
adc
dec
mov
shrl
daa
mov
sti
ret
lea
stos
loop
dec
mov
gs
fldl
fs
jge
inc
loope
xchg
lret
popa
add
test
xchg
push
shrb
xchg
pop
and
loop
bound
push
iret
fcmovbe
adc
leave
xchg
mov
lahf
andb
cmp
je,pn
jmp
movsl
cmp
rcr
leave
xchg
lret
push
cld
je
add
lret
mov
mov
les
mov
lods
and
divb
dec
inc
in
mov
cs
mov
sarl
shl
mov
cld
or
mov
xor
addr16
mov
scas
sub
adc
sub
adc
icebp
xor
cmp
jg
stos
shr
dec
imul
shrb
das
mov
repnz
icebp
sbb
idivb
cmp
mov
jmp
mov
rcrb
mov
iret
pop
mov
lret
mov
cmp
out
inc
mov
popf
inc
fsub
mov
fbstp
sbb
cmpl
andb
ja
arpl
sub
lds
in
sub
add
nop
pop
inc
xor
into
pushf
test
xchg
imul
push
push
addr16
stos
lcall
lcall
inc
test
mov
jecxz
popa
adc
lahf
lock
push
lret
into
fsubrl
sub
ret
enter
push
ficoms
jb
xchg
sub
xchg
or
cld
stos
pop
push
push
pop
icebp
std
mov
jbe
data16
adc
push
adcl
daa
jo
mov
xor
and
mov
and
mov
ret
xchg
sub
shl
xor
inc
and
sahf
mov
cmpsb
adc
or
movsb
push
jae
mov
sub
insb
repnz
nopl
lods
sbb
subl
push
xchg
mov
lods
lahf
mov
pusha
std
cld
mov
lret
out
xor
xor
xor
stc
adc
adc
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
and
sbb
sub
mov
push
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
pushf
or
cmp
mov
outsl
jg,pt
call
je
fidivl
jnp
repnz
or
mov
cmp
inc
movsb
mov
inc
in
mov
push
maskmovq
notl
or
out
mul
mov
ret
sbb
push
lar
jb
negl
inc
push
lcall
mov
fidivl
mov
pushf
pop
add
ret
sbb
mov
adc
addr16
cwtl
dec
rorb
lcall
and
std
rorb
mov
fcomip
in
add
or
sbb
inc
notb
fstl
mov
sbb
maskmovq
notl
cltd
push
mov
notl
xchg
pop
mov
mov
lock
mov
push
movntq
xchg
adc
notl
xchg
pop
mov
sbb
add
nop
hlt
sub
mov
push
notl
xchg
pop
mov
or
movntq
xchg
pop
mov
sbb
maskmovq
notl
cs
sbb
and
mov
push
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
push
lock
movsb
sbb
mov
lock
imull
dec
inc
notl
mov
mov
xor
repz
mov
adc
sub
mov
push
maskmovq
notl
xchg
aaa
mov
cld
push
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
xchg
pop
mov
sbb
maskmovq
notl
cltd
pop
cwtl
mov
push
maskmovq
idivl
insl
cmp
xor
pop
addl
push
dec
movsb
add
sbb
scas
lods
add
mov
nop
xlat
lea
lcall
sbb
push
movsl
je
les
in
add
mov
cmp
repnz
pop
dec
dec
cmp
mov
cld
push
adc
mov
pushf
cmp
je
inc
repnz
cwtl
sti
mov
mov
nop
and
dec
fldcw
sbb
popf
jns
ljmp
arpl
cld
testb
xor
push
jno
fstp
mov
mov
push
in
sbb
std
bswap
xor
aas
stos
enter
add
mov
cmp
stc
xor
or
mov
fidivrs
cmpsb
in
pop
test
inc
adc
push
cmpl
pop
sbb
pop
jmp
sbb
outsb
lahf
bound
rcll
mov
negb
mov
jbe
push
cmp
mov
imul
and
clc
mov
mov
sub
lret
daa
fistl
rclb
jae
sub
mov
data16
push
inc
add
xchg
dec
fdivp
sbbl
sti
mov
cmp
xchg
and
cmp
pop
xchg
push
jbe
test
mov
jns
xchg
fwait
je
fidivl
inc
repz
mov
dec
push
pop
cld
mov
lret
mov
aam
aad
pushf
sahf
pop
sub
fdivrp
xchg
ficomps
xor
pop
enter
pop
inc
cwtl
sbbb
xchg
xor
push
sti
xchg
mov
outsl
cltd
mov
and
leave
mov
mov
or
sub
adc
pop
sahf
pop
xor
mov
and
test
cld
sbb
cld
jg
fdivp
inc
jae
lret
add
and
add
pop
sub
out
sbb
nop
rcr
mov
js
or
imul
gs
cmp
push
sbb
js
sti
push
xchg
fidivrs
dec
sarb
mov
cmp
iret
mov
aas
lods
out
ds
shrb
rolb
out
mov
mov
out
pop
pop
pop
push
mov
cmp
mov
icebp
cld
cmpsb
jmp
mov
lret
or
cmpsl
xchg
push
std
fcmovne
loopne
dec
inc
lret
insb
jnp
test
in
out
mov
xchg
inc
pop
jbe
mov
sahf
aas
pop
and
ljmp
jl
pop
inc
dec
ret
movsb
xchg
mov
std
out
dec
dec
jns
out
cmpsl
dec
jp
out
mov
xchg
fnstenv
xlat
jae
pop
cmp
out
nop
or
ljmp
add
jmp
adc
pop
stc
xor
pop
stos
je
adc
out
ret
add
imul
shll
jb
xor
sbb
idivb
mov
jns
jo
dec
mov
jns
push
xlat
insl
lods
ret
adc
icebp
jecxz
mov
ss
and
mov
shll
push
loop
mov
sbb
loope
xor
and
mov
jns
sub
enter
and
sti
dec
ret
xor
adc
pushf
int
pop
pop
add
pushf
or
js
xchg
jno
push
and
divl
fldl
sub
pop
or
insb
sbb
xchg
pop
push
inc
push
les
or
mov
dec
loopne
movsl
mov
mov
mov
stos
dec
outsb
jmp
imul
push
and
int
and
jl
scas
and
or
mov
add
enter
xor
mov
subl
pop
xchg
in
xlat
cmpsl
or
imul
pop
sub
mov
les
cmp
stc
sbb
mov
pushf
jne
stc
mov
lods
out
sbb
cmpsl
adc
fucomi
push
mov
js
daa
jle
xchg
mov
out
fnstcw
arpl
push
fisttpll
mov
hlt
les
frstor
dec
or
das
push
sbb
cmc
add
xchg
xor
pop
push
fidivrs
sti
sbb
in
adc
dec
xchg
xlat
add
jnp
je
push
shll
add
out
push
xchg
xorb
sub
bound
sbb
iret
in
test
add
lahf
leave
jns
mov
pop
adc
push
xchg
out
repz
and
and
mov
add
or
pop
sti
lcall
adc
inc
adcb
loop
imul
mov
sbb
cltd
dec
sub
and
popf
xor
mov
adc
lahf
movq
popa
mov
jg
pop
aas
jb
jbe
fsubl
jg
cmpsl
fiaddl
dec
xchg
fbstp
inc
insb
adc
fst
jno
imul
adc
in
call
mov
add
mov
xchg
in
repnz
dec
fwait
mov
dec
int3
or
xchg
cmc
jb
push
or
jae
pop
mov
lds
mov
xchg
fucomi
in
mov
test
imul
xchg
ret
adc
outsb
lcall
mov
cmp
mov
jge
lods
jb
mov
sbb
out
int
lods
mov
in
pop
and
add
xchg
sbb
data16
sbb
fdivrs
sbb
out
xchg
scas
daa
or
dec
mov
xor
rorl
mov
push
jl
iret
sub
pop
mov
rol
cmp
inc
adc
das
add
loop
jmp
scas
cmp
mov
je
and
xchg
pop
add
fnstsw
sbb
dec
pop
scas
pop
test
inc
pop
fstp
or
and
test
and
mov
ret
jcxz
sarl
test
dec
inc
or
int
sub
sub
dec
aas
test
sbb
pop
jne
mov
sahf
fs
nop
add
in
sbb
insl
inc
cmc
arpl
scas
pop
mov
rcll
cmp
xor
out
incl
sub
lahf
adcl
fs
add
mov
in
dec
mov
jle
aas
xor
jle
lahf
mov
xor
jo
xlat
js
xchg
cmpsb
mov
lret
mov
int3
jp
dec
mov
and
iret
push
mov
fcomip
xchg
insl
in
mov
rcrl
or
bswap
insb
push
jb
enter
pop
imul
pushf
push
pop
stc
pop
push
fdivl
ret
faddl
sbb
sbb
lock
jg
pop
movb
aad
stos
jge
fnsave
sbb
or
lods
movsl
jg
cwtl
mov
pop
fsubrs
xchg
push
int3
popa
aam
mov
pop
push
fst
aaa
dec
mov
and
sub
lret
inc
pop
mov
mov
aad
lea
scas
enter
xorb
cs
int
mov
mov
addr16
jno
repz
pop
stc
ror
inc
out
call
test
scas
frstor
int
int
aad
add
aam
cwtl
pusha
cmp
mov
mov
inc
insb
popa
lock
adc
test
push
lret
and
cli
sahf
push
mov
sbb
push
or
add
arpl
outsb
cli
fsubrl
and
xchg
out
out
lds
idivl
xchg
dec
push
sub
fcomps
inc
pop
sti
jl
jp
xor
insb
pop
push
rcrb
arpl
fsts
cmp
inc
movsl
jmp
loope
cmp
jae
and
pop
lea
fidivs
mov
xor
addr16
sub
ds
test
jnp
jmp
pop
mov
das
imul
push
xchg
mov
xor
aam
mov
test
cmp
pop
call
test
push
mov
jnp
das
mov
outsl
xchg
sub
and
imul
ja
repz
xchg
push
daa
pop
imul
cmc
inc
pop
mov
jge
pushf
stc
leave
sti
push
fisttps
mov
fnsave
enter
popa
add
popa
push
xor
sarl
ljmp
pop
cwtl
mov
mov
mov
add
insb
xchg
clc
lret
xchg
repnz
mov
aaa
add
jle
cmp
sbb
mov
adc
ret
mov
cmp
cmp
shr
fcompl
imul
xorb
mov
push
jne
aad
insb
add
mov
and
leave
mov
xlat
out
negl
pop
out
mov
out
adc
mov
pop
ss
stos
negb
dec
push
popf
lods
xor
pop
es
pop
fsts
jge
and
mov
faddl
sbb
fstl
insb
mov
jle
lahf
push
push
fistpll
mov
sti
dec
test
push
push
push
push
mov
pop
sub
outsb
xchg
jnp
sti
push
jp
ja
jne
les
das
das
mov
cmp
lods
mov
sbb
popf
lea
xor
sbb
enter
mul
or
mov
dec
push
adc
ljmp
xchg
cltd
cmpsl
clc
and
dec
rcrb
test
xchg
xchg
daa
pop
jbe
jmp
addr16
imul
or
mov
aam
jecxz
xchg
and
mov
aaa
pop
scas
mov
or
xchg
rolb
loopne
jb
nop
dec
pop
xchg
lods
enter
push
pop
rolb
std
cld
dec
xor
imul
and
movsl
xor
imul
insb
mov
mov
mov
mov
sub
data16
fwait
je
rolb
and
sbb
mov
fld
lods
add
xor
fs
jno
cmp
push
xchg
mov
das
mov
in
lock
cmpsb
xchg
sub
jge
aaa
xchg
popa
out
scas
in
sti
cmpsb
iret
sbb
lods
sbb
notl
xor
and
in
or
aas
push
fdivrs
xor
ss
mul
cmp
cmp
cmp
dec
adc
mov
cmp
pop
sarb
sbb
cld
mov
mov
dec
outsb
cld
xchg
mov
loop
lahf
mov
add
cld
push
sub
mov
push
out
int
dec
pop
jo
rclb
jo
adc
mov
sub
xchg
add
cld
xor
ret
jge
in
mov
repz
testl
xchg
inc
jg
xchg
insb
insb
push
es
pop
pop
shrl
shrb
cwtl
adc
mov
out
push
pop
cmp
cmp
mov
in
and
adc
repnz
sub
add
repz
arpl
cmp
sbb
gs
out
mov
push
nop
pop
cmp
bound
int3
pushw
sbb
enter
js
loopnew
push
xor
js
mov
xchg
add
mov
lock
mov
outsl
jo
dec
stos
sbb
adc
lahf
dec
idivb
mov
pop
inc
nop
sub
mov
jle
stos
imul
mov
jmp
push
push
sbb
fmull
dec
int3
inc
in
pop
jnp
rclb
push
int
mov
cmc
push
cmp
mov
dec
in
cs
pushf
xchg
cmp
pop
imul
fcmove
mov
das
or
jmp
mov
rorb
int3
jmp
push
cmp
into
mov
or
fwait
jl
icebp
test
andb
rcl
mov
fsubrp
sbb
cmp
imull
cmp
lret
repnz
rcl
inc
stos
and
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
