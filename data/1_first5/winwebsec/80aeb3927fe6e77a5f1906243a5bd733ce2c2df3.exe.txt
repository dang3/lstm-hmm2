aam
repz
out
lret
sbb
in
push
mov
aas
rcll
dec
ja
and
jecxz
add
adc
inc
push
push
mov
mov
jb
jne
cmc
xor
fxch
sub
mov
jmp
nop
adc
cmp
mov
daa
into
and
xchg
jnp
insl
addr16
pop
jae
scas
test
aam
pop
mov
jp
pop
or
shr
clc
arpl
adc
sbb
mov
dec
lods
nop
dec
les
cmpsl
psrlw
xchg
sub
test
int
mov
sub
std
fimuls
in
push
jnp
push
and
test
add
dec
adc
in
neg
add
popa
int3
cmpsl
shll
arpl
sub
lods
inc
mov
sbb
in
dec
shlb
pop
jo
or
and
pop
sbb
jp
xchg
cwtl
repnz
scas
add
mov
pop
sub
rclb
out
aad
enter
jnp
lret
gs
or
in
js
xchg
je
or
push
dec
pop
outsb
mov
pop
fsubs
lods
rcll
xchg
mov
or
xchg
cmc
cmc
jle
int
cmp
mov
sub
xor
adc
dec
jmp
fisubl
mov
sahf
repnz
lds
les
out
sbb
sub
push
add
mov
pop
push
out
and
stos
das
lahf
movsb
mov
mov
jns
jp
mov
sbb
add
or
sarl
pop
fsts
dec
mov
and
in
push
andps
aaa
dec
outsl
scas
mov
mov
xor
mov
loope
lock
cmp
xlat
sub
jnp
cwtl
jge
push
stc
mov
es
scas
mov
sub
arpl
sub
movsb
push
aas
and
push
imull
or
stc
pop
dec
mov
cmp
faddp
pop
pop
stc
loope
jbe
xchg
hlt
mov
std
arpl
add
movb
mov
lcall
jecxz
mov
jl
mov
scas
shlb
fs
dec
push
rcrl
and
add
sbb
jne
push
dec
fwait
jmp
stc
xor
mov
push
mov
pop
lods
test
mov
jl
mov
lock
outsl
ror
dec
std
push
repz
pushf
call
xor
repnz
lea
iret
jno
jbe
or
sub
xlat
pop
in
push
lcall
popl
mov
xchg
fmulp
decb
roll
aad
flds
and
add
mov
jno
lods
sahf
fcomps
pop
mov
shll
insb
dec
adc
pop
sub
clc
jle
gs
add
sub
je
pop
sub
push
fwait
pop
xor
fstl
in
iret
aad
jb
jnp
sbb
mov
xor
jl
aad
inc
inc
jl
rorl
and
cmp
inc
or
xlat
xor
jno
lock
insb
mov
cmp
push
incl
mov
add
pop
jmp
cmp
retw
push
lahf
out
mull
sbb
inc
out
insl
mov
or
arpl
sahf
fistpl
hlt
mov
push
pop
jg
sbbl
xor
and
sub
dec
and
in
aam
push
gs
push
fs
dec
stos
mov
sti
pop
repnz
les
push
pop
and
in
mov
push
imul
fistps
add
out
dec
into
enter
fadds
aaa
inc
gs
icebp
popf
jno
inc
cmp
add
mov
stc
leave
push
rcll
jo
and
mov
push
mov
xchg
movsb
inc
les
cmc
fdiv
mov
jo
std
sbb
fwait
and
push
sahf
out
int3
nop
scas
ret
lret
bound
bound
sbb
stos
leave
cmp
jne
shll
and
jle
dec
inc
fisubrs
test
hlt
sub
mov
popf
cmp
cmpsb
fsubrp
push
push
js
stos
sarb
lahf
lock
mov
lcall
fbld
xorb
test
inc
ds
ljmp
cmp
pop
xor
imul
mov
xor
pushf
ret
sub
pop
cmc
fldt
xorb
daa
sti
fs
sbb
mov
add
clc
push
seto
sbb
and
cmp
rcl
outsb
fwait
popa
mov
dec
clc
lret
imul
pop
packsswb
fistps
dec
mov
jae
mov
mov
cmpsb
int3
hlt
vaddss
xorl
xor
push
adc
sub
or
lret
pop
jns
xchg
jae
add
jno
pop
dec
adc
mov
mov
iret
dec
lret
push
outsb
inc
dec
sahf
pop
cmp
xor
and
push
jne
lea
dec
inc
pushf
xchg
and
clc
into
mov
in
aaa
inc
mov
fmuls
and
xor
test
push
outsl
cmpsb
inc
sub
iret
sbb
hlt
sub
lock
and
arpl
push
scas
xor
cmpsl
xor
cmpsl
int3
int3
gs
in
and
inc
xor
sbb
mov
sbbb
out
push
cmpsl
sub
in
leave
addr16
out
adc
xchg
dec
adc
jbe
fwait
int3
nop
mov
cmp
in
push
pop
push
pop
xchg
xchg
sub
lods
or
mov
push
sub
cmp
dec
dec
mov
cmpsl
leave
push
jecxz
adc
dec
xor
clc
aaa
imul
mov
cwtl
daa
gs
cmp
mul
gs
xchg
add
outsl
cmp
push
jp
lret
fstpl
push
out
loop
mov
ja
fisubs
xor
or
jp
enter
inc
mov
add
iret
outsb
mov
pushf
xor
in
adc
jae
ljmp
add
dec
xor
push
movsb
mov
imul
mov
test
dec
insb
enter
pop
pop
lcall
mov
imul
cld
and
cmpb
inc
push
sarl
aas
mov
pusha
mov
xchg
push
test
inc
sahf
and
sub
or
sbb
push
mov
scas
clc
ljmp
inc
lock
adc
pop
iret
movntps
data16
sbb
test
add
inc
push
adc
cmc
lahf
cmp
xchg
add
in
adc
sbb
adc
jge
lock
cmpsl
jl
mov
or
scas
mov
lret
push
mov
int3
pop
hlt
lds
into
mov
push
mov
fstl
inc
xchg
nop
ljmp
ss
incl
imul
dec
in
or
ret
jnp
popf
cmc
arpl
jb
push
popa
mov
nop
cs
sbb
mov
push
jo
adc
inc
dec
pop
jns
enter
hlt
insl
jp
stc
bound
cs
kmovb
mov
sahf
push
cltd
imul
cmp
mov
fidivrs
dec
sub
popf
lret
movsb
lret
push
lods
popf
xor
lods
out
jne
inc
inc
movl
out
or
jg
aas
adc
cld
add
leave
mull
lea
inc
test
rcrb
sarl
roll
pop
mov
mov
mov
and
jb
xor
add
mov
pushf
arpl
mov
in
gs
loopne
dec
pop
jp
out
mov
cmc
ret
sbb
mov
mov
popf
out
jge
test
dec
xchg
mov
out
sbb
and
mov
lock
add
dec
outsb
and
rcll
push
loope
mov
or
xor
dec
mov
lahf
pop
out
inc
pusha
test
out
xor
sti
inc
dec
outsb
sahf
or
aam
ja
test
mov
and
sarb
nop
mov
mov
stc
pop
pop
sbb
pop
leave
cmp
jmp
fbstp
popf
adc
inc
mov
bnd
ret
repnz
jmp
mov
add
lds
and
lds
pop
cld
xchg
adc
adc
pop
in
enter
jecxz
dec
mov
in
adc
and
sbb
fld
scas
loopne
xchg
mov
leave
cmc
dec
jb
adc
fnstsw
xor
shl
cli
sub
adc
sarb
mov
bound
scas
aas
inc
adc
js
xor
mov
dec
lahf
pop
jmp
push
mov
das
daa
int
push
jl
jle
rorl
iret
adc
ljmp
pop
sub
mov
std
in
test
jmp
inc
pushf
xchg
sub
mov
adc
ljmp
pop
dec
outsb
movsl
jecxz
jmp
adc
sub
sub
sub
inc
xor
mov
scas
inc
mov
dec
outsl
push
ja
ja
xchg
jl
mull
dec
sbb
hlt
push
push
pushl
out
inc
movsb
hlt
push
and
hlt
notl
mov
pop
or
test
pusha
fists
dec
and
mov
xlat
dec
mov
xchg
pop
fdiv
sub
add
into
jg
push
je
stos
mov
lahf
inc
bound
aad
testb
inc
pop
inc
inc
sub
sarb
sub
pop
repz
or
mov
ret
sahf
into
mov
lods
xchg
push
test
shll
jecxz
sub
mov
leave
add
cmc
cmp
imul
lret
and
mov
mov
sbb
xor
outsb
outsb
mov
cmpsb
sahf
fcmovu
add
in
daa
cltd
or
pushf
sar
jle
js
fcoml
aam
adc
fbstp
es
aas
iret
dec
daa
jg
outsb
mov
mov
in
xor
sub
and
add
arpl
scas
pop
cltd
lods
js
mov
dec
movsl
mov
cmc
sbb
push
mulb
sbb
out
jnp
pop
xchg
ja
inc
dec
mulb
add
rorl
mov
jns
cwtl
lahf
lock
jle
inc
dec
xorl
sti
es
push
cmp
mov
dec
es
out
aam
test
push
leave
stc
cmp
sahf
jno
push
adc
xchg
dec
icebp
push
xor
inc
or
push
cmpsb
mov
and
daa
pop
stc
xchg
mov
mov
aaa
out
jle
enter
cmp
xorl
pop
xor
fisubs
jmp
and
ja
mov
mov
pop
outsl
lea
loopne
or
mov
lods
mov
inc
out
xchg
addr16
sti
mov
in
xchg
enter
int
sbb
and
xor
xchg
rcll
mov
jmp
xor
jns
ror
leave
aad
xor
test
pop
and
mov
leave
dec
or
enter
and
bound
ja
insl
mov
or
neg
pop
pop
mov
daa
ja
pop
jb
test
xchg
fcomi
inc
xlat
fistpll
push
push
mov
mov
std
sub
mov
push
or
sbb
pop
aam
les
mov
pop
and
sbb
in
inc
orb
mov
xchg
into
cmp
faddl
shll
pop
adc
dec
push
mov
outsb
out
push
dec
lcall
and
shrb
cmp
add
mov
bound
dec
or
outsb
popa
push
out
push
popf
push
jb
xchg
pop
imul
push
in
cmpsl
dec
adc
mov
mov
insl
mov
jge
loope
push
loop
pop
repnz
hlt
cmp
cmp
adc
push
jne
aas
dec
sub
jae
cmp
into
stos
notl
ljmp
leave
mov
fs
push
test
mov
lcall
jno
mov
test
jo
das
scas
dec
stc
push
gs
mov
rcr
ss
add
dec
int3
xchg
loop
mov
add
in
insl
mov
cmc
pop
jns
repnz
pop
add
mov
xor
inc
xchg
mov
mov
dec
inc
ja
sbb
cmp
ret
test
in
jo
stos
push
data16
stc
xchg
mov
add
subb
mov
add
mov
scas
out
mov
stos
out
test
scas
nop
pop
movsb
test
push
es
dec
ljmp
mov
pop
jmp
sub
push
pop
roll
cld
mov
inc
and
push
imul
or
gs
dec
pushf
mov
lods
cmpsl
clc
jns
test
lea
loop
and
lods
adc
pushf
les
arpl
and
icebp
fs
jne
pop
fmull
mov
aad
dec
pop
fstps
mov
loopne
lret
cmpsb
mov
and
mov
shlb
adc
xlat
loopne
idiv
mov
push
loopne
inc
iret
adc
add
and
inc
test
lea
mov
inc
inc
inc
mov
adc
stos
outsb
sub
add
fisttpl
std
and
push
push
mov
xchg
pushf
xor
jb,pn
mov
fistpl
cmc
pop
mov
jmp
outsl
sbb
leave
and
mov
dec
in
push
pop
ret
movsb
mov
clc
pop
sbb
arpl
inc
pop
repnz
sub
lods
push
jmp
into
sub
pop
in
outsl
pop
push
pop
adc
push
aas
outsb
sbb
sub
mov
int3
rcrl
sahf
into
xor
add
add
lret
dec
mov
aas
sub
in
xor
ret
hlt
and
inc
shl
jge
movsb
sbb
xchg
into
sbb
shll
cltd
daa
xchg
jns
adc
or
insb
sbb
shll
pop
scas
adc
jne
fnstsw
and
mov
fiadds
sub
jle
in
movsl
es
sub
jno
or
jl
sub
jecxz
je
jne
mov
mov
xchg
jge
dec
mov
in
mov
data16
cmp
pop
ret
mov
enter
iret
daa
or
add
out
xchg
mov
fldcw
out
pop
cmc
pop
adc
adc
sbb
ja
cltd
mov
mov
add
jp
adc
or
pop
mov
jl
mov
movsl
pop
dec
repnz
mov
cmp
rol
cmpsb
add
pop
xchg
and
pop
les
mov
adcl
out
into
arpl
mov
mov
mov
cli
rorb
icebp
cmpsl
pop
push
sahf
jne
pop
cli
mov
in
push
xchg
jno
daa
sarb
cmc
inc
fsubs
mov
das
and
xlat
cmp
push
out
mov
mov
or
lret
cmp
xchg
cmc
cmp
sbb
cmpsb
xchg
sbb
scas
cmp
cs
xor
aam
mov
inc
dec
sub
inc
es
mov
lea
add
sub
xor
nop
in
xchg
lock
sahf
jae
xchg
divl
mov
scas
mov
mov
mov
scas
adc
jmp
jmp
loopne
mov
adc
mov
cmp
mov
negl
stos
mov
insb
mov
pop
and
push
mov
rclb
push
dec
and
jp
sti
mov
enter
lret
lea
xchg
adc
dec
mov
popf
ja
xchg
ds
jo
mov
mov
pusha
push
nop
xor
dec
mov
pusha
stc
sub
adc
push
inc
jge
mov
repnz
pop
adc
and
mov
shll
lahf
add
xchg
fmull
popfw
adcb
std
cld
mov
nop
decl
or
xor
lret
icebp
in
sub
ret
daa
lods
aam
clc
les
inc
sbb
inc
fisubs
jl
cmc
loope
bound
and
or
mov
push
jnp
imul
cmp
cmp
ljmp
push
shrl
adc
pop
fucom
outsb
test
and
inc
inc
loope
imul
movsl
lods
and
pop
push
lock
pop
mov
and
sub
adc
lcall
sbb
bound
shlb
in
jge
push
sub
into
cmpsl
mov
adc
sub
push
inc
push
sbb
pop
xor
adc
jns
and
cwtl
sub
mov
test
test
dec
imull
pop
pop
cld
repnz
pop
jo
adc
cmp
or
mov
push
test
lret
cmp
dec
fdivl
xchg
pop
and
push
cmp
outsl
xorl
and
and
xchg
insl
js
loopne
mov
push
int
roll
loopne
or
adc
mov
cli
bound
stos
popl
jmp
rclb
xor
rolb
lea
xchg
cmpsb
mov
push
sbb
andb
mov
adc
sub
cmp
push
xlat
lds
cld
push
xchg
pop
mov
cmc
sbbl
or
cli
jns
out
mov
insl
loop
pushf
fst
mov
adc
xchg
mov
stos
mov
and
cwtl
mov
inc
add
jl
jae
cli
in
xor
lds
sub
pop
shl
fdivrl
xorb
scas
mov
mov
xor
clc
and
sub
lcall
cwtl
jnp
xchg
mov
leave
cmp
bound
out
dec
sahf
jbe
sbb
cmp
sti
ds
dec
mov
sbb
aaa
into
enter
dec
ficompl
ljmp
mov
jge
inc
loopne
fildll
adc
or
lods
gs
xor
push
and
clc
inc
lahf
icebp
cmp
addr16
and
cmp
fcoml
push
adc
adc
rolb
sbb
aad
imul
sbb
mov
push
daa
jp
pop
lock
xor
lods
js
mov
ret
ds
cwtl
jecxz
inc
inc
and
repnz
jge
icebp
dec
mov
outsb
dec
fiadds
aad
ficoml
xchg
and
or
ret
xchg
pop
mov
mov
adc
pushl
add
lods
cs
ror
or
lods
inc
aam
xchg
rorl
movsl
xor
jns
xlat
insb
sti
sub
dec
mov
and
jge
cld
mov
insb
jp
subl
inc
xor
flds
mov
jb
nop
frstor
scas
push
add
add
out
mov
and
inc
add
aad
gs
mov
lods
mov
inc
and
xor
xor
lret
jne
and
sbb
jnp
mov
pop
repnz
out
pop
rorb
pop
ret
push
fimuls
pop
cmc
inc
mov
das
in
adc
fs
adc
mov
xchg
xorl
cmp
std
stos
push
out
pop
xor
push
pushf
in
lods
imul
arpl
rolb
or
push
xchg
push
push
in
mov
out
push
scas
in
fwait
pop
imul
xchg
or
cld
imul
cmpl
xchg
fisttps
sub
sbb
mov
shl
movsl
lods
dec
jl
outsl
pop
test
aaa
int
in
lock
loopne
mov
fisttpll
pop
inc
xchg
jb
mov
push
das
sti
loopne
fstps
test
push
jno
lret
outsl
or
mov
test
mov
ficoms
imul
insl
sbb
outsl
and
mov
sub
push
xlat
cmp
xor
fprem
dec
sbb
mov
jp
mov
push
or
test
aaa
inc
ret
and
add
scas
xchg
mov
lods
sbb
subl
testl
in
ret
shrb
pop
jmp
std
les
xor
mov
cs
cmpb
mov
rcll
leave
xor
decb
test
lods
shl
cmp
xor
sbb
inc
push
ljmp
pop
lods
ret
pop
fwait
xchg
jns
jmp
iret
call
fdiv
jb
stos
in
ret
sarb
cmp
mov
lahf
cmp
inc
mull
xor
jo
mov
dec
js
pop
mov
lcall
mov
popf
cld
pop
mov
shrb
dec
pop
push
test
inc
cmp
or
adc
outsb
mov
add
daa
pushl
mov
adc
dec
jmp
cs
je
popa
test
xchg
in
aam
jnp
add
in
pop
daa
push
push
mov
and
aad
pop
loop
popf
dec
lcall
mov
mov
jne
sbb
dec
mov
sbb
inc
push
fcoml
add
or
mov
gs
pusha
loope
scas
xchg
pop
jae
daa
mov
pop
xchg
xchg
push
jns
mov
ret
xor
jle
xchg
out
add
push
push
loope
aaa
sub
in
xor
inc
cltd
mov
mov
lods
xchg
xor
adc
pop
cs
scas
rcl
sbb
enter
jo
fbld
fisttps
mov
and
add
xchg
test
ret
std
sbb
lret
pop
fdiv
xchg
inc
sbb
pop
into
push
cs
movzwl
imul
sbb
frstor
sbb
imul
arpl
sbb
aas
push
sub
popf
je
mov
jbe
cmp
aam
xor
in
into
das
das
xor
jp
scas
movsb
ja
or
jl
fs
insb
sub
adc
sub
xor
stos
add
inc
cltd
or
or
pop
or
push
jae
loop
leave
jl
mov
lods
pop
and
push
shl
jge
andl
jno
sub
das
ljmp
ss
leave
inc
or
into
aam
push
xor
mov
into
push
mov
xor
leave
sbb
mov
in
lret
push
inc
daa
mov
lret
fwait
and
mov
mov
inc
xchg
repnz
sbbb
adc
inc
outsl
push
idiv
leave
inc
in
aaa
or
jge
xor
jg
jnp
cwtl
sub
sub
mov
push
mov
daa
fldl
adc
jl
dec
adc
aas
fistpl
leave
inc
jl
inc
xlat
je
pavgw
cs
xor
inc
inc
jle
sbb
into
pop
mov
cmp
cmovg
jo
push
lret
add
sbb
mov
push
mov
cmp
and
dec
mov
test
xor
push
jg
push
sbb
mov
daa
insl
jle
dec
mov
jg
aam
cli
push
aaa
ljmp
test
cmp
outsb
adc
subb
adc
push
rcl
push
jp
xor
cs
jle
or
repz
adc
daa
loopne
cmp
shrl
stc
xlat
adc
cltd
iret
mov
ljmp
lret
or
mov
xchg
insb
aas
aam
cmpsl
mov
jno
sbb
or
clc
xchg
sub
lock
and
push
and
lret
cwtl
jecxz
cmc
insl
pop
adc
dec
sub
xor
fildl
cmp
sub
cs
test
js
sahf
loope
outsb
add
test
add
mov
sub
int3
rclb
cmp
and
iret
sahf
pop
shll
lea
arpl
pop
faddp
nop
mov
out
adc
or
add
outsb
mov
lods
aam
xchg
xor
push
xchg
icebp
inc
rorb
inc
push
cmpsb
sbb
in
sbb
ficompl
dec
out
xor
jl
jnp
adc
and
push
mov
jle
inc
stc
hlt
jns
popf
sub
sbb
mov
stc
out
sbb
lods
and
nop
outsl
inc
sahf
adc
out
pop
and
xor
push
cli
dec
lcall
jnp
outsl
fwait
sbb
stos
iret
adc
stos
add
insb
push
roll
incl
test
inc
cmp
inc
cmpsb
das
scas
scas
pop
fxch
cld
mov
push
lods
sub
stos
fisttps
cs
arpl
jne
jecxz
les
adc
js
sbb
xchg
xor
imul
into
aad
repnz
mov
push
movsl
sbb
sti
xor
stc
mulb
cmp
in
jae
sub
or
mov
ljmp
cmp
in
adc
adc
fsubr
lock
lds
mov
jp
inc
fmull
push
pop
out
loop
xchg
ja
ja
rcr
arpl
sbb
movsb
imul
out
cmp
cmp
sahf
insl
xor
jle
sub
push
jle
mov
jp
xchg
les
pop
or
fstpl
ficoml
loope
rcr
popf
xor
mov
dec
pusha
movsb
or
stc
imul
notl
dec
mov
notb
lret
outsl
mov
sbb
imul
movl
rcrb
pop
icebp
imul
clc
gs
push
push
test
ret
test
push
push
clc
pop
jno
aam
sbb
fwait
iret
push
test
pushf
andb
xlat
scas
pop
mov
rcrb
pusha
jbe
jl
insb
call
fsubrl
fildl
popf
cwtl
ret
adc
bound
jnp
es
scas
incb
pop
fnstenv
mov
dec
test
sarl
sbb
je
aam
les
lods
popf
inc
pop
cmp
inc
filds
insl
cmp
icebp
mov
dec
sub
xchg
xor
test
and
or
xchg
out
aaa
mov
push
mov
xchg
sbb
in
decb
lds
std
xlat
and
cmp
inc
jb
popf
push
ret
stc
imul
push
cs
iret
mov
outsl
lea
push
movl
enter
dec
int
ja
dec
movsb
pop
sarl
loopne
sahf
data16
arpl
ret
ret
jg
into
lcall
out
ds
mov
sbb
xchg
andb
mov
in
add
hlt
sub
and
adc
test
or
push
add
aas
mov
shlb
cwtl
or
aaa
fclex
inc
mov
push
cmpsl
sub
test
stc
mov
std
pop
xchg
in
and
dec
ljmp
scas
and
cmp
ss
mov
inc
lods
popa
cld
hlt
cld
cmp
inc
adc
mov
adc
jb
stos
adc
ret
lahf
shlb
movsb
and
out
cmpsb
cmp
enter
adc
cld
mov
sub
mov
push
or
xlat
insb
stos
flds
sbbl
ret
fidivrs
idivb
scas
es
les
and
scas
pop
stos
cli
lcall
shlb
fwait
fs
std
sbb
out
fidivrl
out
adc
push
or
or
cmp
sub
xor
sbb
sub
lahf
arpl
xadd
ss
inc
mov
sbb
fildll
fsts
sbb
les
xlat
sbb
xor
mov
into
repnz
and
push
js
gs
out
fistps
pop
outsb
test
cmp
loop
mov
mov
inc
xchg
lods
in
jo
and
sti
mov
pop
lcall
fidivrs
inc
cwtl
loope
cli
cmp
and
call
in
push
and
fwait
rol
pop
pop
loop
adc
jmp
roll
jnp
pop
out
fs
sbb
xchg
aas
in
inc
lock
jp
jmp
sbb
cmp
pop
or
aam
icebp
cli
dec
cmp
or
cmp
mov
inc
and
cmp
lock
push
adc
sbb
int
cmp
sbbb
jmp
and
mov
mov
lret
daa
fs
sbb
adc
enter
cwtl
loop
mov
mov
cld
mov
inc
jae
pop
sarl
leave
loopne
stos
jge
jns
or
jbe
sahf
mov
ret
movsl
and
mov
or
add
push
jno
push
push
adc
std
cmc
xchg
adc
fsubr
call
cmp
insb
pusha
and
push
xchg
fidivrl
pop
jns
ljmp
das
shll
cmpl
aas
and
cmp
movsl
repz
ret
pop
mov
push
lock
aaa
fwait
mov
cmpsb
add
stos
ja
and
bnd
xor
sbb
jecxz
out
imul
or
push
dec
outsb
and
loope
popa
clc
mov
in
pop
lahf
aam
or
jmp
add
push
inc
mov
adc
rcrl
push
sub
ret
jae
dec
mov
les
mov
adc
dec
dec
adc
and
adc
scas
mov
mov
add
or
push
movaps
push
dec
rorb
and
test
inc
inc
outsb
into
and
xor
pushf
mov
xorl
push
lods
lret
cs
clc
shrl
dec
mov
popa
or
mov
inc
loope
xchg
into
cmc
out
pop
insl
and
inc
jle
shr
rorl
xor
addl
cmpsb
jne
and
movsb
add
arpl
mov
inc
out
push
movsb
inc
mov
shrb
mov
enter
add
push
lock
shlb
pop
repz
cmp
mov
ret
jne
subb
or
les
sub
out
mov
out
push
aam
fisttpl
mov
mov
loope
fstl
in
xlat
add
daa
test
pop
push
sahf
and
adc
mov
stc
aam
scas
ljmp
adc
rol
mov
mov
sub
scas
popf
shrl
scas
mov
mov
pop
xlat
sbb
sbb
test
adc
dec
sbb
or
fdivs
jns
sbb
jmp
mov
mov
mov
xchg
cmp
xchg
xchg
sti
pop
add
xchg
mov
testl
cmp
iret
mov
sbb
mov
inc
adc
repnz
dec
mov
fcoms
pop
fwait
cmc
clc
pop
bswap
test
or
iret
jg
mov
or
mov
pop
push
jl
pusha
pusha
dec
pop
insb
mov
iret
out
xchg
movsl
js
adc
into
or
out
push
sbb
aaa
mov
stc
out
sub
add
mov
outsb
add
enter
mov
adc
push
js
and
ret
cmc
fisubrl
mov
inc
cmpsb
lds
dec
lods
aam
test
push
test
in
test
rorl
inc
and
mov
outsl
jnp
mov
jns
lods
into
ret
in
rolb
jns
add
cltd
jecxz
pop
addr16
or
repnz
ret
sarb
insl
repz
ljmp
xor
xlat
xchg
dec
cmc
aaa
addl
cmpsb
rolb
insb
insl
enter
inc
push
dec
jle
fxch
mov
les
shlb
jnp
mov
xchg
mov
jno
popf
adc
lcall
lret
or
add
mov
pushf
mull
sub
lahf
or
icebp
pop
nop
xor
divb
ja
sti
sahf
dec
adc
in
push
gs
cmp
mov
fwait
ljmp
int
jno
xor
dec
xor
int3
scas
aas
repz
cmp
mov
or
push
outsb
push
jl
mov
clc
movsl
add
push
std
mov
adc
and
xor
lds
and
aas
insb
js
shrl
sbb
dec
mov
data16
xchg
icebp
cld
ja
test
push
loopne
push
adc
add
mov
hlt
test
mov
xchg
sbb
repz
sub
js
mov
dec
mov
push
adc
xorl
fndisi(8087
rcrb
pop
int
pop
xchg
je
hlt
xchg
dec
pop
dec
push
cmp
push
shlb
clc
shlb
and
movsb
test
jge
out
dec
dec
and
lret
fdivrs
cmp
push
out
push
call
sahf
das
push
out
and
add
std
sub
jge
mov
add
mov
cmpsl
data16
xchg
loop
stc
or
pop
push
and
aad
or
lea
fsubrl
sbb
add
mov
mov
sbb
add
xlat
xorl
push
cmp
or
jp
std
icebp
cmp
pop
mov
ja
out
clc
std
leave
fstpt
ds
xchg
adc
pop
sub
or
mov
jne
bound
and
es
push
loope
or
add
push
stc
into
shrl
push
mov
pusha
jl
scas
or
out
pop
push
mov
movsl
cmp
fwait
push
fbld
push
inc
fisttpll
lret
inc
adc
add
popl
lock
call
inc
out
xor
outsb
test
outsb
jl
xchg
mov
lds
pop
jmp
jl
sub
sar
xchg
cmp
lds
sahf
mov
cmp
sub
mov
jp
fstps
mov
stos
pop
xor
lock
cmc
mov
cmp
mov
jecxz
fidivl
inc
enter
mov
fstl
and
sti
xchg
mov
lahf
pop
aaa
call
mov
lods
ljmp
xchg
pop
pop
lods
andb
dec
jae
sub
sahf
nop
push
fcomps
pop
insb
repnz
dec
push
or
fdivs
jecxz
adc
add
iret
pop
mov
ja
popf
inc
das
and
sub
scas
add
fistl
cld
adc
insl
xlat
nop
mov
inc
shrb
jno
adc
iret
loop
mov
clc
pop
fs
mov
adc
fnstcw
jno
enter
xor
fstpt
enter
mov
mov
lods
jge
jno
push
xchg
test
test
ja
out
stos
cwtl
andl
in
data16
jbe
mov
mov
movb
popf
mov
popa
lods
in
cltd
in
sbb
fiaddl
or
stc
add
mov
ja
andb
js
jae
dec
cmc
jmp
pop
push
jge
xor
mov
scas
xchg
xor
dec
sbbb
repnz
and
jge
jbe
cmp
movsl
cmp
inc
bnd
mov
mov
xchg
jbe
adc
fimuls
testb
inc
fbstp
mov
mov
fldcw
xor
je
cmp
lods
push
jg
adc
push
push
pop
push
fsts
push
jo
xor
loopne
out
dec
out
mov
cld
das
inc
mov
sub
lods
mov
xor
jae
aas
in
xorb
dec
mov
std
push
or
push
xor
out
sti
dec
je
fdivs
das
jle
repz
cmovbe
cwtl
test
xlat
mov
jecxz
dec
and
jmp
jg
xchg
pop
into
leave
fs
sub
adc
pop
mov
dec
xchg
pusha
movsb
mov
adc
call
add
jb
pusha
mov
jge
sub
jge
pop
mov
sub
cmp
lcall
xor
push
push
jmp
sub
mov
repz
xchg
sti
push
mov
aaa
or
mov
pop
cmp
insl
pop
adc
inc
or
fistpll
push
dec
jne
andb
xor
cmpsb
mov
lahf
cwtl
pop
pop
hlt
sub
jg
jmp
out
sbb
clc
push
inc
icebp
test
push
and
loopne
iret
inc
push
sub
loope
scas
fs
cmpsb
pusha
ret
inc
mov
imul
xchg
or
adc
add
cli
rcll
outsl
cs
add
inc
dec
xor
adc
inc
cwtl
dec
xchg
ret
push
nop
gs
mov
mov
pop
daa
pop
mov
jo
in
cmp
in
push
push
push
andl
aas
add
inc
and
cs
xchg
lret
xchg
jbe
movsb
sbb
outsb
xchg
int3
sub
hlt
rclb
jmp
sub
inc
sub
andb
push
ja
loopne
shl
outsl
pop
out
sub
data16
push
fwait
in
repnz
inc
repz
shr
inc
stos
je
ficomps
fsubr
js
inc
int
xchg
call
mov
mov
jne
fstpt
les
dec
pop
mov
nop
inc
push
adc
sbb
popf
sbb
push
push
sahf
mov
cld
xor
pop
in
jle
xchg
in
sbb
adc
push
lock
push
inc
adc
stc
xchg
xchg
mov
mov
xchg
cld
fwait
xor
xchg
imulb
dec
add
popa
or
inc
and
jo
loopne
jnp
int
mov
stos
pop
jnp
xor
push
mov
and
push
mov
movsb
mov
cltd
pop
arpl
pop
das
mov
cmpsl
rcll
jne
adcl
cmp
cmp
xlat
mov
xchg
dec
mov
sbb
andb
mov
data16
add
jp
mov
mov
mov
mov
sub
mov
hlt
cmp
cmp
adc
ljmp
pusha
cltd
loope
jno
leave
push
out
test
aad
cmp
add
sbb
lock
fsub
mov
lods
push
rorb
arpl
cs
and
arpl
test
mov
das
xorb
dec
int3
push
sti
or
xchg
fdivr
ret
jne
movb
fmull
and
lock
and
jp
jo
loope
sahf
nop
xor
in
ljmp
test
enter
outsb
test
push
sbb
mov
out
imul
cmp
mov
in
sbb
lock
aam
fidivs
or
mov
jge
jbe
loopne
and
cs
outsl
aam
add
rcrl
cwtl
push
xor
add
push
push
push
mov
leave
filds
mov
pop
add
mov
scas
pop
xchg
fisubrs
iret
fstpt
xor
insl
add
stos
mov
cmp
pushf
jp
sti
ret
mov
into
icebp
push
xchg
andl
cmp
pop
addr16
call
movups
lds
addl
aas
mov
pop
sbb
scas
fidivl
and
mov
mov
inc
loope
sub
push
and
mov
pop
or
imull
int3
push
dec
xor
sub
mov
push
aad
add
stos
adc
out
inc
xchg
bound
sahf
mov
mov
fwait
cli
or
dec
and
mov
das
ss
lret
inc
bound
pop
fldcw
ret
stc
lds
xchg
pop
lea
push
mov
lea
test
cmpsl
push
gs
inc
adc
pop
fs
lcall
imul
das
and
inc
aaa
gs
imul
cmp
sub
or
rcrb
mov
ljmp
mov
inc
mov
lods
push
aam
push
mov
fcoml
fimuls
cmp
repz
adc
mov
or
jl
mov
lcall
imul
call
cmpsb
ds
xchg
xorl
inc
shrb
lea
xlat
sahf
movsb
out
push
sub
mov
pop
mov
or
dec
adc
lret
lahf
xchg
out
xor
pop
inc
shrb
aas
test
and
leave
cmp
xor
subl
shrb
jl
jnp
push
lock
add
imul
inc
and
push
or
stos
std
out
push
xor
add
out
call
sub
cwtl
rcl
xchg
adc
cli
jmp
sbbl
pop
push
pop
jg
mov
mov
ds
xlat
add
add
inc
mov
cmpsb
es
xchg
lock
xchg
jge
loopne
pushf
mov
inc
inc
push
stos
and
fbstp
dec
addl
popa
sarl
jns
mov
adc
jo
and
sarb
addr16
int3
insl
push
ja
cmp
or
ss
sub
jb
inc
lods
sbb
cmp
cmpsb
cld
ljmp
xor
js
inc
push
cmp
mov
jg
das
push
test
mov
fdivrl
and
out
mov
xchg
sbb
adcl
jbe
cmp
inc
inc
and
shll
cmp
pop
je
loop
popa
popf
push
stc
repz
sar
call
push
hlt
jo
stc
mov
sub
push
popa
in
test
push
jg
fists
das
nop
xor
and
arpl
dec
adc
sub
ficoms
sbb
push
and
jp
or
mov
fsubs
pop
or
loope
ret
dec
lret
mov
mov
stc
mov
jne
ret
ljmp
cmpsl
sbb
popf
dec
js
or
mov
or
pop
sub
xorl
add
pusha
cwtl
inc
jmp
out
mov
and
add
jns
test
cmp
lock
push
adc
push
lods
icebp
outsb
pop
and
cmp
fcoms
imulb
movl
test
add
cltd
insl
xchg
push
push
inc
xchg
ja
or
push
lock
push
jl
enter
mov
ror
divb
mov
mov
jmp
push
stos
cmp
push
roll
dec
jbe
ret
mov
pop
les
mov
xchg
add
xchg
sub
ljmp
je
adc
js
jo
inc
xor
dec
aas
dec
jle
cld
das
es
jl
xor
mov
push
fidivrs
dec
sub
mov
scas
scas
add
mov
xor
movsb
pop
es
sahf
cmpsb
or
xchg
sti
rcrl
das
insl
loope
inc
cwtl
xchg
xor
ret
push
sbbl
fidivrl
mov
stos
push
insb
dec
cmc
jb
lcall
into
mov
pop
aad
repz
inc
sbb
pop
cmpsl
out
rolb
lret
push
mov
dec
inc
pop
cmc
std
ja
ss
outsb
pop
xor
inc
clc
shrl
and
adc
xchg
push
test
in
dec
nop
int3
push
sub
aad
push
jae
push
lea
mov
shl
pushf
xchg
fmull
or
adc
fs
aam
outsb
sub
pop
into
xchg
jmp
jg
xchg
cmp
lods
pop
mov
std
inc
mov
iret
das
pop
fwait
ljmp
imul
push
bound
jp
mov
pop
cmpsb
out
test
dec
test
test
shl
js,pt
xchg
scas
push
xlat
aad
jecxz
iret
or
addr16
ficoms
pushf
adc
mov
xchg
pop
xor
push
shlb
sahf
mov
mov
xor
das
and
aam
lea
jne
aas
mov
inc
ds
lret
xor
cs
mov
push
xor
clc
in
dec
iret
xor
std
sbb
push
rcrb
in
aad
ret
sub
frstor
lret
adc
scas
jbe
int3
xchg
push
mov
mov
loop
mov
cwtl
lret
mov
mov
lods
lcall
cld
gs
adc
popa
mov
aaa
lods
icebp
ds
xor
adc
test
xchg
sub
add
fsubl
and
add
cltd
lea
and
xchg
ficoms
fimuls
cld
nop
sbb
and
movsb
dec
pop
push
push
push
aas
and
mov
orl
enter
mov
rcrb
int
aad
adc
jp
dec
insl
cmp
lods
iret
jmp
mov
pop
das
xor
xchg
insl
cmpsb
fcmovnu
andb
sbb
into
sub
shll
xchg
push
test
loopne
adc
mov
cld
loopne
mov
insl
arpl
dec
and
test
bound
jo
fisubl
loopne
mov
call
lea
out
jp
out
insb
mov
pop
aam
cmp
loopne
cmp
enter
data16
incb
jle
or
loopne
jmp
sbb
in
pop
jle
jbe
mov
sub
mov
mov
movsb
in
sbb
dec
xlat
lret
jp
std
mov
data16
shlb
xchg
mov
icebp
fs
jp
xchg
ja
push
loop
xchg
dec
mov
jg
push
imull
pop
push
cli
test
xchg
jae
icebp
bsf
out
mov
jmp
mov
enter
repz
hlt
shlb
and
std
andl
add
mov
in
sbb
jle
jp
sbb
push
lods
sbb
cltd
inc
jge
stc
fcmovne
cmpsl
push
ss
cmpsb
mov
out
aad
jle
loope
and
sbbl
clc
xchg
fsubrl
sbb
movsb
das
aas
fwait
mov
or
or
mov
and
rol
mov
xor
jne
imul
cmc
jo
or
es
xor
out
and
pop
push
outsb
mov
adc
fbstp
jp
and
ret
pop
pusha
in
out
pop
mov
jae
push
mov
or
icebp
pop
pusha
dec
addr16
and
lods
in
lahf
add
push
bound
jmp
mov
jle,pn
jl
mov
xchg
add
mov
test
test
data16
jns
outsb
fsubp
out
dec
jecxz
push
scas
mov
pop
pop
popa
sarl
imul
pop
xor
fcompl
in
jecxz
sti
clc
hlt
repnz
subb
sarb
hlt
fs
enter
fwait
icebp
sbb
fisttpll
mov
lret
int3
inc
pop
mov
jnp
je
gs
inc
outsl
and
ffree
inc
adc
lods
mov
mov
mov
cld
mov
mov
int
push
mov
test
sub
fnsave
add
pop
push
add
pop
xorl
cmc
arpl
dec
in
cs
pop
jp
pusha
unpckhps
inc
roll
out
push
push
repz
pop
cli
addr16
add
dec
aas
mov
ja
lock
add
test
mov
iret
frstor
xchg
push
ret
and
mov
adc
push
mov
mov
pop
mov
xchg
and
mov
rcl
and
push
leave
stos
cmc
cmc
imul
out
xor
jle
in
jp
rcrb
pop
pusha
mov
mov
cmp
lock
and
inc
in
inc
mov
push
pop
sbb
pop
aad
jecxz
shll
or
xchg
je
push
pop
fs
test
mov
stos
mov
xor
inc
jmp
mov
loop
out
rcrl
push
lret
in
cmpsl
das
test
xor
add
cmpsb
add
fisttpll
dec
pop
sahf
cmpsl
stc
es
mov
inc
mov
jb
shlb
hlt
or
pushf
shrb
mov
cmp
lahf
and
pop
pop
aas
pop
xchg
pop
cmp
inc
dec
pop
bound
jge
nop
test
stc
mov
mov
sti
sub
fnstenv
xor
cmp
test
subl
jno
mov
sarb
lea
mov
pop
jle
mov
insl
enter
popf
pushf
addr16
push
sahf
lock
ja
pop
lret
int3
stos
xchg
pop
fbstp
mov
xchg
pusha
mov
cmp
fldl
cmp
rcrb
icebp
imul
push
push
lods
std
adc
sub
cmp
arpl
movsb
sub
pop
inc
jp
imul
add
mov
inc
sbb
popf
push
adc
cs
lods
ja
rorl
and
fdivrl
mov
bound
test
dec
loopne
into
push
sub
push
aaa
fsub
or
jae
dec
sub
adc
push
or
xor
sub
dec
and
or
cmp
mov
icebp
adc
sub
and
shll
sbb
sub
insb
lea
sub
gs
jmp
and
sarb
dec
xchg
xchg
negl
movsl
popa
sarl
sub
cli
or
std
test
rorb
bound
arpl
pop
popa
xor
sub
adc
vmread
sti
add
xchg
leave
rcrb
scas
jb
mov
rolb
out
fwait
jg
sahf
lahf
outsb
scas
ja
sti
lea
cwtl
enter
inc
pop
imul
xchg
mov
aad
outsb
out
push
pop
inc
or
ja
mov
test
push
xchg
fstpt
clc
xchg
xor
cmc
leave
cmpsb
sub
ror
jmp
or
mov
jp
scas
xchg
test
into
inc
push
xorb
fdivs
cmp
sub
out
mov
pop
mov
sub
adc
aam
adc
js
loop
jae
mov
mov
pop
out
cs
mov
movsb
test
insb
repnz
daa
or
jp
in
or
sbb
pop
pop
das
xor
xor
jge
mov
xlat
lret
or
pop
and
and
push
sub
jno
fsubrl
xchg
sti
add
call
idivb
sbb
jns
int
sub
or
or
dec
sahf
orl
jne
sbb
dec
inc
push
movsb
inc
movsl
sub
popf
xlat
popa
dec
mov
mov
sub
xchg
test
jmp
orb
lret
daa
sub
mov
sbbb
rol
mov
inc
lods
aas
mov
mov
jl
xchg
jne
add
cmp
cmpsl
mov
add
xor
jne
rolb
movsb
xchg
inc
and
test
sbb
lret
and
cmpsb
aam
insb
fcmovbe
stc
and
enter
fsts
adc
xchg
jecxz
add
sbb
mull
into
rclb
mov
dec
mov
cmp
in
cmp
addb
mov
int3
inc
popa
mov
loop
mov
incl
inc
xorl
insl
lcall
ja
inc
ror
int
xrelease
in
cltd
fsubp
mov
mov
bswap
nop
mov
add
lret
add
jl
mov
cmpb
xchg
xor
outsb
daa
push
jns
lret
pop
mov
jle
or
add
pop
rcrl
mov
jb
fidivs
aaa
inc
dec
out
inc
mov
in
into
inc
lahf
ljmp
mov
sub
push
push
fadd
into
pop
xchg
stc
sub
cmp
mov
div
push
lods
mov
lock
movsb
mov
fldl
in
push
out
aad
push
xor
out
pop
xchg
sahf
dec
pop
bnd
fucomip
jo
je
dec
jmp
lret
dec
cmpsb
fldt
jge
push
push
add
test
mov
scas
mov
pop
xchg
lahf
out
imul
or
sub
mov
std
pop
mov
jae
cmpl
repnz
xchg
mov
ja
xor
popf
ja
cmp
dec
xchg
js
mov
addl
inc
inc
je
or
mov
mov
sbb
push
sbb
outsl
icebp
shl
or
mov
in
xor
pop
enter
imul
ds
lods
push
fwait
add
arpl
fs
xor
push
std
lret
cmp
push
jp
jmp
and
mov
xor
aad
xchg
shll
mov
push
pop
in
fdivrl
call
bound
stos
fs
out
push
mov
or
jo
sub
inc
inc
add
hlt
fstpl
dec
ret
add
and
mov
mov
mov
adc
jmp
out
repnz
dec
cmp
push
sub
scas
jno
rolb
cwtl
pop
mov
fsubrl
fistps
inc
and
bound
or
ftst
mov
mov
or
pop
adc
cli
sub
cmp
je
or
inc
shrl
xor
cmp
std
int
repnz
in
xlat
sbb
lods
or
outsl
lret
test
pusha
outsl
iret
and
addr16
mov
mov
pusha
jl
add
and
cmp
loopne
in
loopne
les
lods
push
mov
and
ds
jns
sbb
push
or
pop
inc
cmc
push
inc
shll
in
lods
xchg
out
push
and
mov
inc
add
mov
inc
aaa
rcrb
dec
cmp
pop
xchg
xchg
divb
outsb
es
mov
data16
mov
pop
lahf
fnstsw
jno
dec
and
inc
lods
sub
out
jae,pn
dec
adcl
xchg
xor
rcll
cwtl
lods
nop
pop
inc
cmpw
mov
xchg
out
mov
sub
and
sub
sub
mulb
sub
adc
mov
sbb
test
mov
int
mov
mov
scas
lea
scas
int3
inc
sub
cmp
test
subb
mov
xchg
pop
in
std
pop
aas
imul
in
fisubs
jle
outsb
ret
xor
ja
lret
mov
scas
in
rorl
add
ds
loope
cltd
cli
dec
lods
xchg
pop
add
insl
mov
rclb
xor
cmp
mov
stos
leave
mov
aas
or
pop
cmp
jg,pn
popa
sarb
int3
into
lret
fisubrl
loop
js
inc
fstpl
int3
fwait
inc
or
cmp
aad
add
bound
adc
and
inc
pop
out
cmpsb
mov
mov
cli
ret
and
adc
addr16
fadd
lock
mov
scas
and
cmp
sbb
jmp
rcll
jb
out
sub
arpl
dec
ljmp
stos
jbe
lods
jecxz
loop
jmp
call
mov
imul
icebp
xor
shll
dec
icebp
jne
inc
stos
arpl
pop
push
cmp
es
and
pushf
cmpsl
push
iret
je
sub
jmp
sub
xchg
cmpl
test
inc
inc
or
push
inc
pop
and
adc
adc
clc
inc
insl
jae
icebp
push
cld
xor
test
push
out
ret
ret
rcrb
iret
jl
add
mov
inc
roll
pop
mov
mov
jns
incb
insl
lods
in
jmp
repnz
and
movsb
cmpsl
out
lds
cmc
ret
and
sbb
addb
bound
pop
les
mov
push
fisttps
aaa
mov
dec
mov
add
fcom
and
movsb
cltd
cmpsb
push
addr16
adc
sbb
leave
xchg
sbbl
test
cmp
xchg
daa
sbb
push
pop
out
dec
clc
jbe
scas
pop
inc
jo
lea
lcall
push
int
jmp
daa
inc
pop
adc
xchg
rol
repz
sub
ja
fwait
out
xchg
and
cmp
out
in
test
cmp
cltd
leave
ja
and
lret
out
out
lret
xchg
add
loope
add
jo
fisubrs
xchg
jnp
hlt
popf
bound
loopne
fidivrl
jle
out
jmp
cli
nop
jle
js
push
mov
int3
and
pop
mov
test
std
std
jb
push
mull
jge
pop
xorl
shr
inc
fstp
jae
dec
jg
xchg
mov
cs
test
je
popf
jecxz
or
push
xchg
das
cmp
lock
gs
fcmovne
cmc
or
sub
jne
sbb
jmp
mov
loopne
mov
lahf
incl
pop
pop
cld
mov
lds
lods
loopne
push
cmp
scas
jne
sub
jo
shll
xor
push
xlat
mov
ficoml
fistpll
xor
dec
lock
clc
mov
or
adc
scas
repnz
adc
adc
dec
imul
mov
lea
ja
lret
adc
scas
dec
inc
mov
hlt
mov
int3
cmp
jecxz
ja
cmpsl
cmp
push
inc
sub
mov
in
int3
dec
dec
and
pop
xchg
cmp
xchg
push
aas
dec
inc
fildl
cmp
cli
add
or
push
add
cs
fwait
mov
mov
dec
mov
pop
pop
pop
nop
enter
loop
lea
das
adc
pmuludq
xchg
int3
ja
ror
mov
test
cmpsb
enter
ret
cli
inc
out
cltd
add
arpl
push
xchg
mov
cltd
mov
lahf
icebp
fisubrl
out
fldl
loope
rcr
cmp
mov
mov
popf
adc
sbb
inc
dec
xchg
sub
lcall
xchg
repz
push
add
add
dec
loope
pop
pop
outsl
or
cmc
or
fiaddl
fbstp
lods
add
popf
mov
jmpw
adc
dec
int3
mov
or
mov
leave
movsl
in
push
mov
cmpsb
aaa
aas
add
pop
pop
fisttpl
pop
inc
imul
add
stos
mov
cmc
sahf
mov
xor
push
xor
xchg
push
mov
loop
mov
sbb
pop
cmpsb
cmp
mov
xchg
sub
lret
xchg
pop
ds
mov
clc
lret
int
lcall
lods
inc
dec
and
loopne
test
push
jnp
mov
cs
add
sub
rorb
lret
jbe
cmp
mov
lods
dec
mov
aas
jno
mov
adc
dec
arpl
lods
lds
dec
mov
inc
dec
addr16
fidivs
test
jo
xchg
out
loope
fstpt
mov
add
adc
insl
pop
test
sbbb
sbb
sub
inc
sub
enter
ss
in
xchg
jno
inc
push
rcrl
out
out
inc
mov
add
push
cli
cmpl
mov
jae
and
sub
xor
pop
push
inc
fsubrl
push
outsb
rcl
ds
aaa
jne
push
idivl
xchg
ja
xlat
jl
add
fmuls
jbe
sbb
or
push
mov
inc
sub
jle
aam
mov
pop
scas
lcall
mov
sub
nop
cmp
aad
jge
lahf
dec
mov
xor
lahf
and
and
mov
test
mov
add
mov
jp
jmp
imul
call
fsubr
clc
push
and
inc
push
daa
insl
mov
sub
dec
mov
adc
out
les
icebp
jle
adc
stos
xchg
add
rcll
test
push
sarl
cmc
xor
jle
fwait
push
jle
xchg
stos
aaa
inc
fimull
jge
stc
int
fwait
cs
mov
mov
mov
add
inc
repz
stos
xchg
lcall
ret
insl
rolb
nop
das
add
pop
mov
jle
test
cmpsb
test
push
dec
cmpsb
rorb
scas
ja
fcmovb
fcom
xchg
push
outsb
add
jno
data16
sbb
add
pop
out
je
in
jns
mov
mov
pop
into
mov
fistps
push
sbb
and
adc
pop
pop
icebp
mov
in
ljmp
cmp
incl
wrmsr
push
adc
ds
into
test
jbe
adc
xor
add
cmpsl
in
xchg
cltd
call
or
push
dec
add
mov
dec
ja
xor
xchg
lcall
dec
loopne
or
mov
and
mov
jne
mov
push
jmp
movnti
mov
movsl
cmp
jne
push
roll
inc
test
fisubl
bound
lds
notl
push
sbb
das
mov
jbe
mov
or
and
push
pop
mov
dec
cmpb
hlt
in
shld
add
adc
inc
mov
pop
in
mov
jl
cmp
mov
test
subb
add
aad
sarl
pop
sub
mov
add
stos
cmp
lods
mov
inc
mov
xor
iret
vdivss
ffree
mov
cmp
popf
dec
or
pushl
stc
mov
inc
aas
idiv
sbb
inc
vmovd
dec
or
xchg
lock
imull
push
pop
not
shl
mov
push
push
jnp
cmp
mov
fcomps
adc
ja
enter
rcll
cmp
leave
int
addb
inc
popa
sbb
jmp
sti
mov
cmpsl
sub
xchg
or
mov
inc
lock
fisubs
jg
inc
rcr
fdivrl
fcompl
out
cmpsl
xchg
stos
push
add
mov
and
jp
shll
xchg
test
xor
outsl
xchg
gs
flds
and
rcrb
rcl
adc
or
xchg
sub
roll
dec
inc
movb
jecxz
or
mov
pop
loopne
push
jg
sbb
adc
fcomip
imul
ss
icebp
sub
mov
call
pop
and
in
mov
adc
cmp
les
cld
xor
imul
cltd
and
dec
in
je
mov
lret
inc
mov
aam
jns
cmp
cmp
dec
ja
mov
add
sbb
call
das
stos
lods
addr16
push
inc
insl
icebp
inc
nop
mov
in
adc
xchg
je
fmuls
je
movsb
aaa
pop
mov
add
loopne
pushf
out
ds
dec
xor
push
pusha
fwait
aam
pop
adc
shll
dec
inc
mov
subb
aad
jns
psubusb
sbb
ds
test
pop
cwtl
mov
dec
dec
es
jne
out
lock
mov
stc
xchg
jecxz
sti
imul
dec
xchg
ret
pop
lea
movsb
stos
ds
out
sarl
mov
jne
add
xchg
fmul
xchg
push
xchg
leave
adc
cli
pop
scas
dec
shlb
rcrb
in
pop
shlb
mov
dec
pop
add
test
data16
add
push
or
jg
mov
cltd
push
scas
cmpsl
adc
cwtl
jecxz
mov
popw
lds
fs
fbld
pop
xchg
cmp
mov
xchg
mov
dec
pop
add
or
xor
cmp
mov
popl
mov
movsl
push
ds
lahf
scas
icebp
jnp
dec
cmp
in
das
loope
cmp
lock
adc
jno
adc
pop
iret
rcrb
ret
or
inc
jmp
loope
aas
xchg
mov
sub
in
rclb
sub
push
nop
mov
push
and
push
cmpsl
sub
push
out
out
inc
xchg
adc
xor
repnz
in
xlat
sarb
into
in
dec
pop
es
enter
lea
mov
mov
push
ss
add
jnp
or
js
xor
push
mov
gs
push
insl
adc
fisttpll
mov
clc
in
shlb
jb
xchg
xchg
mov
outsb
addr16
pop
and
dec
add
xchg
mov
pop
dec
xchg
ficompl
mov
ret
dec
es
jle
push
inc
shl
dec
fs
mov
cmpsl
mov
cmp
sahf
sbb
xor
push
pop
mov
dec
cltd
lret
insb
into
mov
mov
stc
sahf
pop
push
xor
mov
xor
psrld
sub
in
out
xor
dec
mov
scas
and
push
pop
mov
lret
or
and
sbb
cmpsb
xchg
int
mov
push
insb
lods
fcompl
dec
bound
ret
das
enter
arpl
pop
icebp
sbb
cmp
cmp
inc
pop
repz
faddl
call
push
outsl
fsubl
push
adc
outsl
inc
jo
aam
pushl
inc
xor
data16
dec
jl
push
mov
test
jcxz
hlt
sub
fcoms
mov
xor
jge
pushf
andl
add
mov
imul
outsl
ss
fcmove
push
rcrl
xchg
cmp
mov
jg
fildll
jge
mov
les
xchg
and
xor
inc
imul
dec
push
popa
popa
rcl
xchg
into
mov
pop
dec
out
sbb
lret
in
jge
ret
ss
sahf
inc
es
xchg
cltd
and
mov
and
jo
jl
pop
jp
pop
es
lods
dec
inc
movsl
std
movsb
xchg
adc
sub
add
insl
dec
cmpsb
insl
mov
iret
sub
cmp
inc
fsubs
pop
sub
out
lds
push
bound
xchg
shll
inc
loope
and
or
pop
sbb
aad
gs
sub
mov
sub
repz
mov
aad
fimull
out
negb
dec
push
pop
daa
movsl
into
or
enter
jbe
mov
xlat
gs
adc
bndldx
test
jne
dec
jne
pop
adcb
xchg
loopne
inc
aaa
push
aaa
xchg
insl
mov
xor
pusha
es
test
test
jle
rolb
xchg
stos
je
aaa
cmpl
cltd
adc
lods
subl
inc
test
loop
bnd
sub
mov
push
push
cli
cmpsb
sbb
and
int
sbb
pop
jne
xor
test
add
mov
push
inc
fs
sbbl
scas
xchg
test
or
push
xchg
lock
mov
bnd
inc
push
jmp
xchg
arpl
shl
shr
mov
fistpl
jmp
dec
inc
int3
add
subl
add
movsb
faddl
aam
cmp
int
xor
dec
clc
scas
fbld
and
cwtl
in
cmp
call
sbb
inc
sti
mov
push
in
call
roll
cwtl
jge
mov
xchg
pop
ret
popf
movsb
mov
push
and
pop
loopne
rcr
add
dec
cmp
insl
mov
mov
sbb
les
lcall
mov
push
mov
mov
cmpsl
xchg
int
xchg
data16
hlt
sbb
pushf
mov
dec
xor
mov
mov
cli
sarb
cmpsb
arpl
and
mov
lret
pop
mov
in
cs
push
pop
data16
mov
pop
push
aas
cmp
xor
lock
pop
xchg
push
shll
bound
adcb
call
lods
out
das
xchg
out
movsl
push
dec
adc
jno
push
inc
decl
inc
mov
pop
aaa
and
jns
inc
push
lahf
jecxz
out
andl
mov
out
sar
lahf
cmp
jle
fwait
jge
dec
movsl
jbe
stos
ret
dec
mov
sbb
pushf
sarb
notl
les
js
cmp
dec
push
add
cmp
xchg
jb
aad
rcrb
shlb
adc
stc
xor
push
cmc
jno
jne
movsb
loope
clc
pop
cltd
mov
mov
or
and
shlb
in
inc
mov
and
mov
cwtl
adc
adc
pop
and
rorl
sub
push
xor
sub
data16
xor
mov
ret
cmp
sub
or
xor
sbb
fdivrp
pop
popf
xor
and
sub
ret
shl
inc
add
and
lcall
and
mov
fldl
sbb
stos
gs
leave
cld
xor
cmp
mov
or
fbld
lcall
cmp
ja
push
mov
mov
scas
jno
rcr
iret
mov
add
adc
lods
in
mov
mov
dec
insb
push
movsb
jecxz
arpl
lret
aad
xchg
cld
popa
fs
push
pop
mov
sub
fidivl
int
cmp
xor
insb
sbb
jg
mov
loopne
push
es
push
pop
nop
int
cmpsb
sahf
in
mov
push
stc
sbb
mov
test
sbb
mov
or
or
xchg
lods
cmpsl
xchg
xor
adc
add
xlat
fucomip
scas
push
xor
push
dec
and
mov
dec
dec
dec
lds
push
cltd
inc
add
jecxz
jle
mov
sub
sbb
mov
dec
mov
inc
push
cmpsl
pop
lods
xor
jge
repz
fs
push
fsubrp
xor
xor
jmp
lret
push
push
xor
dec
stos
push
sbbb
out
imul
dec
cwtl
cld
push
jl
or
pusha
or
in
sarl
cmp
sbb
sub
jp
fldenv
mov
fdivrp
movntq
push
f2xm1
jae
call
inc
push
sub
xchg
inc
outsb
aas
rcrl
add
add
pop
push
shrb
jecxz
adc
out
hlt
inc
push
and
dec
fwait
mov
sub
xchg
aaa
inc
push
or
ds
push
ret
push
stc
inc
adc
pop
popf
jae
cmp
repnz
cmpsl
push
int3
xor
repz
leave
xor
fdivrl
inc
jg
sub
fmuls
adc
sbb
aaa
lods
aaa
leave
stos
mov
dec
xor
aam
jae
dec
outsb
mov
bound
aaa
lods
je
dec
std
or
iret
push
lods
push
leave
addr16
iret
cmpsl
fs
and
mov
adc
sub
jp
es
fistps
pop
subl
mov
scas
mov
in
std
jecxz
push
jns
and
add
rcrl
inc
add
lahf
mov
adc
fwait
inc
popa
fadds
aas
push
test
pushl
mov
and
sub
sbb
pop
leave
cmovae
sub
add
out
stos
clc
push
cli
inc
out
loopne
gs
mov
sbb
push
mov
icebp
jg
decl
add
loope
adc
lret
out
ds
jne
pop
scas
mov
mov
jle
jmp
adc
inc
xchg
aaa
cmp
jecxz
pop
outsb
adcb
scas
mov
int
and
jg
xlat
sbb
paddsb
and
adcl
and
pop
js
sbb
sub
cmp
sub
insl
sbb
jns
mov
mov
push
xor
xor
mov
or
push
iret
sbb
adc
pusha
data16
adc
and
mov
rolb
sti
sub
ret
ja
ret
xchg
mov
push
pushf
push
lods
pop
cli
push
mov
push
add
nop
pushf
test
test
sbb
fisubrl
and
rcrl
and
loopne
ds
cmc
cmp
push
push
mov
mov
ficoms
jl
dec
int
mov
xor
xor
mov
mov
or
mov
outsl
cli
imul
push
sbb
sbb
dec
push
cwtl
lcall
mov
mov
sub
movsb
cmpsb
call
sub
cmpsl
icebp
dec
daa
jae
inc
ljmp
sub
movsb
iret
add
xchg
mov
add
rcr
imull
pop
pop
mov
pop
in
call
pop
js
mov
pop
add
mov
dec
aam
inc
xchg
adc
sarb
xchg
push
paddusb
mov
inc
xchg
adc
inc
dec
mov
mov
sub
out
xor
inc
adc
sahf
jbe
out
bound
rorl
xchg
fcmove
icebp
rorb
jne
inc
mov
lret
sub
xchg
xor
and
cwtl
lret
fisubs
int
pop
add
inc
mov
dec
xor
test
into
mov
adc
xor
mov
loopne
inc
aam
sub
stc
add
ss
mov
scas
daa
sub
repz
push
ret
jb
jae
fdivr
jle
fwait
stos
cmp
fbstp
pusha
arpl
or
xor
pop
mov
scas
lds
mov
sub
or
rclb
mov
mov
or
test
push
dec
hlt
test
fadds
pop
maxps
add
or
pop
cmc
push
xchg
clc
dec
push
out
ss
sub
setns
jne
cli
mov
cmp
lcall
fnsave
dec
sub
rolb
addr16
dec
xor
insb
xchg
mov
cmc
arpl
stos
mov
imul
aas
cmpsl
mov
shrl
aas
mov
shlb
and
bound
pop
sbb
sub
shll
call
clc
repnz
mov
xor
add
inc
adc
nop
mov
dec
lcall
sub
push
inc
sarb
ja
mov
fsts
xchg
inc
xchg
movsb
ret
popf
dec
lcall
ret
or
dec
pop
pop
or
or
adc
aas
jg
add
mov
mov
inc
xchg
add
push
add
or
cmp
mov
sub
out
ficompl
call
jnp
lock
jmp
push
mov
data16
loopne,pt
add
sbb
jle
dec
mov
mov
aam
add
xchg
mov
adc
push
pop
jle
or
nop
push
mov
or
stos
enter
aas
xchg
adc
mov
hlt
and
subb
jne
loope
inc
loop
insl
ja
std
xchg
imul
xchg
xor
mov
push
xor
add
jmp
ljmp
fistpll
lahf
adc
mov
mov
pushf
cwtl
in
das
jmp
inc
lds
jno
jns
loopne
jne
sub
cmc
movsb
fucomi
cmp
xorl
into
pop
xor
lahf
lret
jbe
cltd
bound
rdtsc
push
cmpsl
mov
adcl
mov
inc
imul
mov
fisubl
adc
cwtl
test
cmp
movsl
in
xchg
test
xor
cwtl
insb
xor
js
dec
js
aad
sub
push
xchg
int
in
pop
and
fwait
sbb
mov
inc
or
and
test
out
pop
arpl
cmp
movsb
ret
ds
xchg
nop
mov
loope
rcrl
pop
inc
data16
repnz
adc
sub
or
xchg
mov
mov
in
lods
inc
mov
aaa
inc
fcmove
and
dec
lret
push
pop
xlat
dec
push
add
sub
xor
or
push
mov
xchg
iret
fwait
repnz
fidivl
inc
push
or
testb
into
call
pop
push
inc
dec
jae
dec
xchg
fisubrs
int
dec
adc
scas
xor
sahf
inc
pop
fcmovne
outsl
or
jbe
sub
hlt
jns
mov
xchg
adc
jae
inc
mov
dec
ljmp
scas
repnz
jns
call
aad
negl
push
aad
jp
push
out
jg,pt
into
xor
js
mov
push
and
cmp
adc
push
cmp
inc
je
call
loop
fimull
pushf
sub
rolb
lret
mov
jge
xor
rol
and
sbb
mov
daa
les
dec
xchg
inc
out
push
push
inc
mov
notb
das
out
jbe
lods
repnz
lods
pop
enter
mov
sub
mov
sbb
fmul
dec
ss
bound
sbb
mov
xchg
clc
xchg
or
pop
bound
jp
and
pop
arpl
mov
sub
xlat
insb
out
pusha
dec
push
mov
xor
push
out
xchg
ss
mov
push
aaa
fidivs
jo
test
pop
adc
fnsave
jl
ds
ss
jmp
add
push
in
lcall
sub
fmuls
mov
out
dec
ja
hlt
mov
mov
ja
dec
imul
imull
pop
dec
arpl
mov
xor
mov
int3
mov
add
dec
aaa
notb
popa
aaa
test
cmp
popf
xchg
and
ret
inc
xor
nop
jmp
in
lock
mov
cmpsl
insl
add
mov
inc
sahf
cmp
int3
jb
xor
xchg
jge
cs
sarl
fistl
dec
out
aam
or
push
addr16
inc
cmp
popf
ret
fisttps
sahf
inc
inc
mov
nop
loopne
addr16
repnz
push
push
sub
xor
xchg
sub
sbb
mov
fwait
push
pop
lods
cmpsl
in
leave
mov
or
xor
cmp
subb
xor
fwait
mov
cwtl
jbe
imul
adc
push
mov
lods
dec
out
jg
shl
jp
sbb
inc
or
scas
daa
lret
mov
or
inc
fisubl
cmpl
filds
xor
sub
xor
mov
lods
faddl
xchg
jae
cmp
test
stos
aam
pushf
inc
or
xchg
pop
addl
fists
test
shl
lret
orl
fs
in
mov
lds
push
je
enter
scas
and
xor
imul
jnp
filds
sbb
test
lret
pop
filds
ljmp
add
mov
mov
sub
push
inc
dec
xlat
ret
xor
or
ljmp
push
mov
out
inc
insb
jg
shll
jbe
cmpb
repz
divl
lret
adc
outsl
jae
test
lock
sarl
bound
call
lcall
jle
rclb
xchg
out
sub
in
or
test
lods
and
xor
push
negl
in
xchg
es
adc
dec
jns
push
jmp
sbb
add
jecxz
lods
in
push
adc
push
mov
lret
sbb
sub
dec
xor
in
add
cmp
lcall
lret
ffreep
jns
push
jle
add
insl
lea
add
mov
xor
pop
ret
daa
add
jecxz
and
hlt
add
imul
lret
sbb
js
inc
mov
std
je
test
jb
shrl
in
jns
test
push
xchg
movsb
ror
cld
push
cmpl
sub
cmp
mov
loope
cltd
lahf
jae
dec
out
into
xchg
xor
arpl
into
jne
mov
mov
call
mov
aas
mov
testl
cmpsl
jmp
mov
pop
ror
push
add
outsb
xchg
ret
pop
fstpl
movsb
dec
in
mov
popa
aam
sub
movq
inc
sahf
mov
imul
ja
dec
pushf
lods
fildll
faddp
push
dec
sub
dec
mov
cmp
mov
xor
inc
ss
adc
call
xchg
scas
mov
ss
xchg
loope
jbe
in
mov
loopne
divl
xor
dec
filds
rclb
sbb
push
pop
mov
gs
mov
test
pop
movsl
add
push
test
xchg
push
bound
lret
jb
xorl
and
decb
inc
repnz
xchg
jne
insb
lea
in
lea
pop
cli
inc
popa
lea
cmp
lods
push
xchg
add
lret
xor
insb
lea
dec
xor
push
popa
push
jns
jp
lds
inc
sub
out
push
test
insl
sub
sbb
fmul
in
int
ljmp
insl
mov
jb
enter
lcall
ljmp
mov
pop
aad
cwtl
mov
gs
pop
arpl
js
inc
pop
add
fimull
add
cwtl
cmp
adcl
or
clc
push
addr16
fidivs
ja
aam
or
out
repz
mull
in
mov
xchg
lret
jbe
fiaddl
xor
rclb
mov
adc
pop
jmp
in
pop
rorl
lds
test
or
xor
das
adc
aad
fs
mov
test
xor
in
push
leave
ret
ret
jae
add
mov
sub
sbb
lea
adc
jle
jo
pop
lds
pop
cwtl
xor
lods
lret
fdivrl
out
xor
test
xchg
out
push
sbb
lahf
push
push
test
dec
sbb
fsubr
aas
test
outsl
and
stos
rcrb
xlat
sahf
shlb
add
pop
loopne
test
mov
xor
mov
arpl
inc
mov
xor
orb
sub
push
mov
enter
mov
in
std
ret
ss
aas
push
in
pop
pop
pop
pusha
xor
jne
push
sbb
adc
pop
insb
les
mov
pop
and
into
jmp
lcall
jg
out
ds
ja
ds
incb
inc
and
dec
ja
mov
jnp
std
fs
into
iret
xchg
xchg
xor
ret
mov
lret
out
shll
sub
or
cmp
les
cmpsb
jnp
inc
pushf
mov
rolb
pushl
pop
and
aam
aam
dec
xchg
jl
push
jb
out
lahf
enter
sbb
inc
cltd
sub
clc
sub
loopne
hlt
inc
mov
pop
sub
add
jb
sub
add
cmc
test
clc
testl
int
pop
mov
cmp
jmp
or
xchg
mov
push
adc
pop
arpl
jno
and
cmc
dec
stos
xchg
push
push
cwtl
leave
out
xchg
xchg
repnz
loop
mov
or
bound
in
and
fbld
inc
sub
shr
sub
xchg
idivl
or
xor
cwtl
test
cltd
jnp
loop
add
in
xchg
test
lds
pop
adc
and
jg
mov
cmp
mov
pushf
cwtl
jg
jns
fs
leave
inc
cmp
test
gs
add
pop
insl
fisttpl
out
mov
inc
hlt
inc
or
out
call
cltd
sbb
mov
jne
inc
sub
or
loope
lock
push
cmc
jmp
mov
pop
rorl
and
xor
mov
sub
loopne
add
push
popa
cmp
test
jmp
mov
loope
movsl
jle
enter
lods
lea
lcall
push
cld
jge
dec
test
sbb
sbb
mov
jns
ficoms
test
fdivl
ficoms
mull
and
cmp
mov
in
lret
lea
mov
inc
psubq
pop
pushf
pop
mov
adc
sbb
or
rorl
push
sub
or
negl
pop
or
and
jnp
xor
in
fistl
scas
dec
int
test
nop
and
and
fmull
cwtl
jge
push
daa
icebp
jno
cwtl
cs
mov
pop
add
jmp
push
lahf
pop
xchg
and
stos
insb
clc
mov
popa
xor
mov
inc
nop
jle
lcall
add
icebp
incl
das
mov
sub
mov
mov
xchg
test
mov
fcomp
mov
inc
inc
repz
jno
mov
mov
aam
jae
and
or
aaa
add
rcrb
ljmp
mov
shrb
int3
fcompl
ret
imull
mov
jg
mov
mov
push
adc
mov
repnz
mov
xlat
ss
clc
mov
fwait
shld
add
rclb
cli
push
pop
pop
xchg
dec
lret
xchg
or
inc
out
pop
xlat
cmp
lret
subl
repz
xchg
jg
lcall
and
push
cmp
xchg
pop
inc
pushf
out
jae
and
mov
aaa
xlat
aad
pop
xor
xchg
mov
pop
sbb
js
shlb
pop
lahf
test
jb
test
ss
jl
dec
sbb
ljmp
add
cltd
addr16
data16
bt
loopne
dec
sub
data16
roll
add
xchg
jb
leave
jns
bound
nop
mov
fisttpll
jo
daa
loope
stos
push
test
inc
push
dec
mov
jmp
notl
clc
xor
pop
ss
or
js
fstpt
rcrb
mov
lahf
bound
cmpsl
push
mov
xor
js
mov
xor
lods
push
mov
hlt
sahf
daa
mov
mov
mov
add
cmp
vpminub
subb
hlt
sbb
and
xor
push
or
sub
jo
das
push
pop
mov
xchg
adc
hlt
lods
nop
push
jbe
cmp
jl
pop
shl
addb
mov
lods
pop
gs
xchg
xor
data16
loope
jae
inc
cmp
push
icebp
push
fdivs
xchg
jno
sbb
clc
in
fiadds
pop
push
js
out
js
push
xchg
sarb
mov
lret
scas
ja
cmp
movsb
rcl
fstp
sbb
addr16
cmpsb
inc
adc
push
aad
or
aas
rcl
or
pop
aas
aad
and
xchg
cli
jle
sub
lret
pop
fdivl
jbe
test
int3
subb
xchg
xchg
cmp
call
sbb
and
pop
mov
sbb
pushf
hlt
push
jo
dec
test
ret
dec
pop
cmp
mov
test
push
jl
cmc
aas
adc
dec
xor
out
mov
mov
adc
xchg
test
adc
or
pop
pusha
btc
xlat
dec
insl
push
xchg
out
ret
aad
hlt
aas
test
loopne
dec
or
insl
hlt
loopne
pop
add
push
std
testb
mov
add
or
bound
sub
iret
cmpsl
fcoms
sbb
clc
dec
xchg
push
jne
cmp
and
mov
fbstp
rorb
loopne
clc
mov
pop
fcompl
mov
aad
sti
sub
xchg
jg
push
dec
push
push
cwtl
adc
sbb
popa
push
and
xchg
jmp
or
add
xor
cmp
push
enter
cmpb
jle
bound
daa
xchg
dec
arpl
fnsave
add
inc
pushw
in
int3
or
test
lock
lret
xor
iret
adc
outsb
clc
call
and
in
imull
aaa
outsl
push
mov
mov
lea
lock
imul
lods
push
push
inc
in
outsl
cltd
lds
cmp
sbb
dec
mov
mov
mov
inc
adc
inc
mov
cmpsb
in
pusha
or
inc
pop
push
and
mov
adc
lods
mov
dec
les
and
sbb
stos
xchg
inc
rorb
in
push
xor
aaa
mov
add
aam
mov
cmp
or
arpl
fiadds
test
pop
jecxz
sbb
cmp
mov
add
or
add
mov
or
sbb
aas
and
nop
xor
repnz
mov
dec
mov
fisubrl
add
inc
push
inc
pop
mov
adc
mov
stos
imul
push
mov
cmpsb
mov
pop
dec
fs
insb
sbb
jb
fs
stos
mov
bnd
je
fisubs
das
xlat
inc
pop
xor
ja
test
xor
or
jbe
insl
or
arpl
cltd
test
out
push
sub
js
sub
jnp
xor
and
add
outsb
fistpl
inc
inc
fwait
xor
aam
repz
add
adc
sub
sub
movq
xchg
sub
adc
test
clc
cmp
sub
sub
cwtl
cmpsl
mov
dec
cmp
dec
mov
cmp
sbb
test
dec
out
fists
inc
sti
mov
xor
out
fcomp
sbb
inc
lods
sbb
cmp
mov
ja
fcoml
bound
mov
push
cmp
jbe
jae
js
dec
jmp
cmpsl
sbb
mov
clc
mov
jecxz
cmp
or
mov
push
scas
jns
movsb
stos
sub
jae
imul
cltd
outsl
sbb
mov
and
cmc
adc
stos
and
adc
outsb
hlt
xchg
imul
mov
lods
add
out
and
xchg
add
xor
rorb
int
les
xchg
insl
push
dec
hlt
jg
mov
fwait
mov
fcmovb
dec
inc
pushf
fmull
xor
ja
mov
jge
jp
xor
aam
sti
rorl
add
sub
cs
aam
arpl
jbe
jle
xchg
pop
in
arpl
mov
je
orl
jns
sbb
mov
scas
jb
xchg
mov
int3
mov
jo
inc
jl
inc
bound
add
pop
xor
pop
rclb
mov
lret
or
lock
fwait
int3
in
insl
mov
popf
ss
call
lods
leave
push
jge
sub
jl
cmp
cmp
addr16
sbb
aaa
into
insb
arpl
dec
push
les
lcall
iret
test
pop
cli
mov
movl
shr
out
enter
or
in
jbe
sbb
loope
push
or
insb
sti
lock
data16
lds
inc
fstpl
bound
ljmp
pop
mov
xor
adc
pop
fdivrl
pop
movsl
sahf
add
inc
sub
cli
inc
ret
xlat
leave
mov
cmp
adc
add
test
pop
fsubs
bound
mov
ja
mov
test
outsb
mov
sub
ret
aad
xor
pop
xor
fiadds
daa
fsubrp
lock
testl
inc
ret
sbb
jp
popf
add
push
xor
lods
inc
mov
fs
sarb
out
fxch
ror
xchg
shlb
add
nop
mov
dec
imul
cmp
add
fucomi
les
push
cmpl
adc
or
in
xchg
lahf
ds
icebp
pop
lods
je
movsb
push
mov
cmp
dec
psubw
add
sbb
or
cmp
out
lea
sbb
je
push
mov
dec
nop
jns
jge
lcall
scas
lock
lahf
push
test
cmc
out
mov
push
lret
cld
loope
mov
std
cmp
mov
pop
cmp
and
xchg
movb
es
ffree
pop
lds
sub
outsl
mul
mov
cmp
cmc
mov
inc
mov
lret
in
fs
cmc
add
cmc
xor
and
inc
in
cli
fdivr
nop
sti
test
iret
les
je
sub
xchg
mov
mov
je
adc
mov
jb
orb
mov
jns
adc
in
pop
mov
in
adc
inc
aam
fwait
mov
shlb
mov
das
pop
xchg
cmpsl
xor
and
adc
pop
xchg
mov
push
mov
das
in
sarb
loop
jmp
pop
ja
mov
aad
loop
fmuls
stc
push
inc
imul
and
sbb
js
push
cwtl
lods
xlat
adc
adc
xchg
add
mov
sbb
imul
mov
lahf
imull
aam
pop
fwait
pop
fildl
push
xchg
xchg
mov
lea
mov
imul
xchg
in
mov
aad
mov
pop
push
jno
rdmsr
and
sub
dec
sub
dec
popa
jg
sub
pop
cld
lcall
std
adc
fnsave
push
and
in
push
rcll
cli
or
xchg
cmp
push
push
fs
sub
xchg
xchg
jne
das
and
pop
mov
shlb
xchg
imul
xchg
les
mov
hlt
mov
sbb
sbb
and
push
dec
mov
push
cli
int
or
inc
mov
fistps
push
jecxz
rcll
pop
int3
jp
mov
inc
das
jecxz
arpl
and
mov
jge
filds
dec
pop
push
popa
nop
lods
jnp
pop
mov
or
pop
xlat
or
dec
rcll
ds
inc
push
out
sti
xor
outsb
add
arpl
mov
add
and
pop
mov
out
push
sub
negb
jl
lahf
out
roll
pop
sbb
mov
xchg
cs
pop
out
sbb
fwait
in
pop
mov
push
pop
mov
out
aas
ja
cmpsb
sub
inc
rol
mov
stos
loope
pushf
mov
mov
jnp
ljmp
ljmp
out
xor
ss
mov
jmp
pop
or
xorl
imul
sub
lahf
jmp
shrb
loope
mov
xchg
je
jns
hlt
leave
push
in
stc
sti
repz
sub
out
adc
add
jp
testb
adc
and
adcb
and
rolb
mov
pushf
loopne
jmp
jl
mov
jl
pop
out
inc
test
jp
out
fdivrs
push
dec
mov
imulb
ss
js
xlat
jno
and
or
dec
inc
hlt
mov
pop
mov
cmpsb
and
jns
dec
cmp
pop
sarb
imul
cmp
gs
shll
xchg
jecxz
cmp
icebp
inc
fcompl
imul
push
push
pop
enter
sahf
fsubrs
aaa
xchg
mov
pop
adc
sub
mov
jmp
in
in
sbb
test
mulb
sbb
scas
sarb
jo
pop
aas
iret
lods
push
leave
add
mov
mov
push
push
add
shll
popf
lret
fdivl
add
add
inc
xchg
mov
push
fisubrs
mov
cmp
mov
das
dec
fwait
rcl
cmpl
lret
adc
movsl
mov
jnp
and
xchg
mov
outsb
xor
ret
push
or
adc
repz
fs
jns
mov
in
addb
add
in
cli
popa
testb
sub
push
imul
xchg
add
popf
mov
mov
xchg
fs
iret
fsubrs
dec
mov
sahf
ret
mov
aam
cmp
popa
push
push
add
mov
mov
mov
or
dec
test
xor
rep
lock
sbb
or
pop
xor
push
mov
les
scas
push
shl
lret
shl
leave
xor
imul
add
mov
testl
sub
push
out
in
mov
dec
jmp
mov
cmp
pop
inc
std
mov
jl
mov
cmpb
cs
js
sbb
mov
push
jl
jae
mov
and
movsb
lret
mov
call
rorl
in
adc
arpl
sub
xor
xchg
insl
test
sbb
aaa
mov
je
clc
push
xor
lods
insb
movsb
sti
sbb
xlat
aas
xchg
mov
lods
ror
push
xchg
loop
jb
into
push
imul
ljmp
ret
xchg
cli
les
sbb
mov
lret
lods
fisubrs
jne
cli
dec
jmp
jmp
jmp
inc
std
pop
push
aaa
adc
xchg
outsl
pop
fdivs
lods
sub
mov
in
push
xchg
mov
shlb
cli
in
and
bound
leave
mov
mov
jb
jno
add
ret
imul
mov
sbb
add
cli
pop
xchg
loop
sbb
cmp
mov
xchg
xor
mov
inc
mov
cmpsl
mov
sub
rcr
imul
orl
js
lcall
jecxz
sub
xorb
in
out
pop
mov
adc
clc
loope
test
push
push
mov
cmp
in
xchg
cs
cmp
pop
inc
push
sbb
push
test
push
repnz
mov
add
push
imul
or
xchg
sahf
outsb
jnp
xchg
ror
call
popf
fidivrs
mov
xchg
mov
cmp
cmp
jle
test
shll
mov
ret
repz
test
ja
mov
mov
adc
dec
push
fidivrl
jg
in
xor
mov
ret
ds
loope
cmc
jl
insb
or
test
shl
sbb
or
inc
jno
and
testl
les
jge
imul
out
lods
cmp
cli
leave
fisttpll
xor
sbb
lahf
xchg
repnz
in
sarl
adc
sub
sbb
jg
lret
push
jbe
push
loopne
inc
addr16
pushf
jg
out
pushf
and
dec
xorl
and
mov
pop
scas
jo
push
ffreep
sar
push
pop
call
out
add
mov
test
jl
bound
jmp
cmc
in
test
icebp
repnz
add
ds
push
xchg
jmp
lea
or
jbe
xlat
or
jg
pusha
out
xor
jge
and
icebp
jg
sub
push
or
test
pop
mov
lret
imul
cmp
pop
sarl
data16
jg
adc
popa
xchg
jno
sbb
jl
and
or
inc
cmp
add
daa
and
scas
sahf
cmp
xchg
imul
movsl
push
imul
sahf
sbb
pop
faddl
xchg
and
add
mov
and
or
popa
push
mov
out
xor
dec
jecxz
fidivl
mov
inc
les
out
repnz
in
nopl
dec
hlt
addb
adc
mov
mov
mov
leave
into
mov
mov
imull
and
sub
sbb
leave
mov
incb
sbb
inc
push
sub
push
imul
sti
out
sbb
fldl
aas
daa
mov
sub
icebp
inc
les
xor
sbb
ficomps
ret
orl
pusha
jecxz
dec
cmp
pop
push
jne
mov
and
xlat
scas
in
cmp
in
cwtl
mov
lods
pop
andb
addl
shrb
mov
inc
or
lret
lods
das
push
xor
out
mov
into
cmp
xorl
in
lods
dec
adc
iret
xchg
scas
and
jbe
mov
jae
sbb
sbb
dec
test
sti
insb
mov
into
pop
into
xlat
sahf
adc
jge
xchg
mov
popf
addr16
push
or
fiadds
push
sbb
popa
mov
xchg
cmovge
xchg
push
sti
in
jle
pop
adc
mov
popl
xchg
mov
into
rcrl
cmpsb
iret
sub
inc
mov
sbb
shll
inc
mov
rep
mov
ja
push
lcall
inc
cmp
mov
mov
mov
lcall
or
push
es
push
pop
pop
gs
notb
mov
sub
cmpsl
mov
jge
pop
pushf
jp
call
jae
cmp
xchg
or
pop
pop
outsb
arpl
vsqrtsd
int
pop
lret
leave
adc
jne
sub
rcrb
imul
mov
mov
xor
mov
lcall
lods
arpl
cli
shrb
in
pop
pusha
pop
cmp
jg
insl
testb
shll
sbb
adc
jmp
dec
xchg
dec
icebp
push
loopne
xor
or
jmp
cltd
inc
push
pusha
bound
sub
jg
sahf
fstpt
jnp
jl
jmp
sub
iret
dec
into
cltd
test
shlb
adc
sbb
fstps
adc
xor
sbb
mov
test
in
sub
imul
ret
dec
shl
les
xchg
cmp
or
pop
jp
push
jne
in
and
outsl
add
loopne
xor
lock
outsl
aad
adc
loop
jp
xchg
xlat
mov
mov
insl
bound
pop
dec
xchg
fstpt
xor
cmp
lahf
adc
lods
adc
jmp
fcompl
xchg
xchg
aaa
add
jl
jne
push
je
mov
fmull
jno
push
sub
mov
test
or
sbb
mov
inc
xchg
add
aad
lds
jge
or
dec
xchg
or
pop
xor
lahf
jl
rcrl
sbb
cmp
clc
cmp
push
rorb
push
adc
icebp
add
gs
mov
and
mov
xor
jns
je
cmpsb
dec
push
mov
lock
xchg
sbb
lock
push
dec
in
adc
pand
push
dec
push
xchg
dec
jne
lods
repnz
aaa
aaa
insb
mov
mov
cld
lcall
mov
repnz
and
rolb
dec
push
clc
push
leave
adc
fdivp
pop
divb
sahf
in
in
dec
cmp
ret
cmp
cmpsb
or
or
xor
or
lock
ja
sbb
outsb
out
pop
les
cmpsl
or
mov
jmp
enter
notrack
and
out
nop
das
fs
pop
stos
xchg
orb
or
mov
jo
add
je
push
mov
or
lcall
int3
add
iret
ljmp
push
subb
ret
sarl
sbb
jge
mov
in
push
pop
orl
or
lock
mov
popa
pop
mov
pushf
pop
mov
repnz
movsl
negl
mov
mov
lods
sbb
shlb
xchg
ljmp
fisubrl
dec
push
cmpsb
in
lods
je
rclb
pop
fstps
cmp
adc
in
movsl
insb
mov
adc
fs
add
repz
movsb
adc
adc
jnp
lret
out
mov
xorb
and
mov
movsb
arpl
pop
lea
cmp
imul
and
inc
xchg
mov
add
mov
popf
xor
sbb
pop
cmp
mov
mov
imull
adc
mov
dec
jb
cmp
and
adc
in
adc
shrl
jbe
stos
jmp
xchg
loopne
imul
xchg
add
jns
popa
gs
pop
out
dec
push
in
sub
sub
aaa
mov
adc
lahf
sub
mov
in
into
mov
add
in
stos
insl
out
test
lock
push
mov
lods
jb
das
xchg
inc
cmp
push
mov
pop
cltd
sbbl
andb
aam
xlat
arpl
test
add
ret
decl
xchg
inc
loope
into
stos
in
lock
lods
out
outsl
mov
mov
sbb
mov
jae
stos
xor
pop
cmp
fs
adc
cli
sub
sub
movsb
jl
dec
and
add
add
call
lods
push
lods
mov
insb
scas
cltd
fisubs
aad
mov
cmp
adc
cmpsl
into
and
inc
sbbb
lret
out
jb
mov
out
add
xchg
shlb
mov
push
fimull
sub
adc
or
mov
inc
xchg
sbb
scas
pushl
adc
lods
jmp
add
push
loop
add
inc
or
mov
sbb
dec
fsubs
mov
in
or
movsl
out
stc
adc
imul
xchg
lret
adc
pop
das
cmp
shrl
push
adc
mov
adcl
mov
ss
outsb
jmp
cmp
dec
or
push
inc
sti
pop
test
lock
les
cli
shl
int3
push
mov
aas
cwtl
lea
dec
jle
mov
fldl
jl
xchg
negl
lods
stc
sbb
lret
nop
insl
adc
nop
movsb
cmpl
sub
clc
mov
movsb
or
repnz
rorl
out
mov
pop
into
sub
dec
inc
hlt
ret
fsubr
mov
daa
outsl
cmpsl
sbb
adc
sbb
adc
int
and
stos
push
mov
add
inc
out
outsl
cs
cmpsb
int
out
sub
jns
es
test
in
push
jns
mov
lds
and
adc
paddq
movsl
adc
and
xlat
ss
jnp
clc
mov
gs
and
push
dec
push
add
xchg
jmp
sbb
in
mov
push
aaa
clc
cmp
xorl
cld
and
xor
into
mov
jge
mov
and
nop
mov
mov
pop
ror
cltd
inc
subl
sbb
sub
js
xchg
adc
dec
add
cld
mov
jae
ljmp
jge
stos
inc
jg
jno
ds
mov
pop
pop
ret
cmp
xor
mov
mov
jge
dec
push
daa
and
cmc
xor
pop
mov
icebp
std
in
ja
shr
sbb
adc
lcall
leave
shll
int3
div
sbb
fidivl
mov
loop
in
add
mov
iret
repz
ret
stc
ret
cmp
mov
xchg
pop
mov
xor
aam
std
sti
sbb
sar
mov
sbb
xchg
push
xor
sarb
je
cli
mov
fs
mulb
dec
loopne
fcoms
movsl
pop
dec
jle
iret
jbe
scas
fwait
mov
das
mov
popa
mov
or
fwait
and
into
cmpsl
mov
shlb
adc
lds
in
pop
inc
repnz
adcl
push
and
xorb
jmp
xor
dec
stc
rorl
in
jp
ror
adc
mov
sub
and
pop
pop
gs
mov
daa
aas
xchg
les
out
push
int3
std
push
test
ret
sbb
sub
xchg
rolb
or
ja
xchg
sub
sbb
pop
fs
nop
and
imull
sub
fs
popf
aad
and
cmp
dec
sub
ret
sbb
jae
bound
aaa
les
fwait
jb
es
jl
xor
lahf
cmp
push
and
inc
lock
les
cmp
addb
in
push
or
push
sahf
sbb
scas
aam
mov
mov
jns
push
sub
cmpb
jg
sub
mov
fmul
sub
pop
insl
lock
pop
jmp
popa
out
repz
push
adc
jge
jge
sbb
xor
or
mov
outsl
repz
push
out
loope
mov
sub
jmp
icebp
sub
sahf
and
or
pop
loope
or
add
in
daa
cmc
int
rorb
sub
dec
lds
out
dec
lahf
leave
xor
or
xor
and
hlt
adc
sub
sub
sub
dec
shl
jp
adc
cld
ds
js
adcb
push
in
sbb
stos
fs
ja
adc
movsl
icebp
in
ja
inc
mov
in
gs
int
adc
fisubrl
dec
xchg
sub
pop
in
clc
sub
lahf
cmpsl
push
insl
jbe
sub
mov
xor
das
pop
sub
shll
push
xlat
movl
ljmp
cmp
sbb
aaa
loop
dec
lock
mov
into
adc
test
xor
adc
mov
js
arpl
and
fildll
out
cld
adc
sub
mov
inc
bound
inc
das
mov
insb
pop
inc
mov
ja
sbb
sbb
dec
fsubrl
les
andb
loope
in
or
out
adc
pop
and
mov
subl
mov
pop
pop
daa
inc
kxnorb
dec
add
jmp
xor
dec
test
sbb
xlat
pop
popa
fisttpll
js
add
popf
outsl
lahf
add
fisubs
std
inc
lods
inc
and
lcall
ss
lcall
pop
bound
xorb
movhps
in
iret
les
leave
fwait
sbb
mov
sbb
jg
add
js
xor
pushf
int
popf
pop
test
movq
push
sub
pushf
les
dec
stos
test
mov
xchg
dec
into
xchg
cmp
pop
psraw
mov
aam
mov
jmp
jge
lcall
dec
leave
lea
push
out
mov
jne
cmp
pop
push
mov
sbb
push
dec
negb
push
shlb
add
scas
jae
repz
cmpsl
xlat
mov
mov
cmp
aaa
sti
push
insb
jno
pop
inc
inc
lcall
pop
or
repz
jle
sbb
out
xchg
mov
ljmp
dec
jne
imul
jb
xchg
xor
into
divl
adc
dec
dec
ds
jno
xor
clc
aaa
hlt
inc
cmp
push
fs
ss
leave
addr16
sti
fnstsw
push
pop
inc
adc
dec
imul
pop
ljmp
sub
aas
sahf
dec
and
adc
mov
dec
outsb
jb
add
pop
in
cwtl
mov
sub
cmpsl
mov
ret
mov
inc
pop
cmc
add
dec
sub
xor
push
lods
push
outsb
out
daa
and
push
and
inc
mov
add
sbb
xor
push
add
aaa
or
sbb
ret
adc
std
add
mov
add
pop
aad
pop
fs
in
cmp
lret
adc
shl
in
fxch
mov
xor
rcll
in
inc
jle
cld
jns
stos
dec
repz
out
imul
test
stc
sbb
lahf
negb
idivl
jne
cmpsb
sti
aas
ret
clc
adc
gs
mov
mov
and
dec
adc
xchg
or
jbe
lods
xor
iret
fldenv
out
jg
out
stos
inc
xchg
sub
xor
jle
imull
popa
adc
imul
sbb
rep
movsl
push
xchg
in
push
iret
mov
xlat
xor
xor
outsl
xchg
sbb
loopne
popa
mov
add
lahf
mov
cmp
cmp
mov
add
lea
xchg
cmp
inc
xchg
test
in
add
xor
fucomi
xchg
sbb
les
in
aam
in
cmpsl
repz
mov
test
in
stos
add
mov
loope
outsl
mov
cld
imul
mov
jp
ss
adc
pop
enter
cmp
mov
ss
xchg
xchg
xchg
and
iret
iret
data16
lods
in
push
leave
dec
iret
adc
fstl
fists
push
sub
imul
pop
xor
add
movsl
adc
aas
cmp
lods
pop
in
stos
cmc
mov
push
inc
pushf
je
pop
in
and
inc
cmpsb
mov
fidivrl
sub
xchg
cmp
and
sbb
repnz
xchg
xchg
pop
outsb
test
and
adc
dec
test
pop
dec
push
mov
cmc
addr16
lock
sbb
jecxz
mov
nop
pusha
test
or
out
andl
jmp
mov
mov
js
xor
push
adc
repnz
push
ficoms
test
cmp
test
push
jge
sub
test
enter
xor
jge
fs
frstor
sbb
cld
test
hlt
scas
out
push
cmp
adc
mov
pop
push
mov
pop
rol
loopne
mov
iret
fcmovu
sbb
jb
mov
xchg
mov
pusha
xor
fidivl
push
xor
in
aad
pop
test
pop
repnz
cli
imul
pushf
scas
fdiv
cltd
sbb
xchg
adc
mov
aam
add
int
mov
xor
rclb
pop
out
stc
push
sub
ret
lret
cmp
adc
scas
mov
repnz
jp
shlb
aam
and
adc
ret
adc
cmp
pop
mov
push
add
or
and
and
mov
adc
in
mov
pop
pop
xchg
or
test
cwtl
pop
js
movsb
rcl
inc
push
sbb
xchg
fistpll
cmp
int
xchg
mov
icebp
in
and
cmpsl
out
cmp
ljmp
les
dec
ss
and
leave
int
call
aam
scas
cmp
push
jnp
and
mov
js
push
jp
lods
sahf
sub
or
xchg
push
stc
call
hlt
and
or
xchg
fildll
fcmove
cmp
jae
jb
call
mov
mov
imull
push
call
xchg
mov
mov
ss
mov
iret
lcall
aam
push
lahf
fistpl
adc
push
lock
sub
sbb
mov
test
sub
fldenv
loope
pop
dec
push
adc
hlt
push
xlat
cmp
inc
in
add
subl
jl
fs
push
and
jmp
pushf
cmp
dec
pop
pop
lods
or
test
bnd
rorl
shll
jl
mov
sbb
mov
lcall
pusha
mov
mov
arpl
jne
adc
cmp
cmc
push
and
pop
jno
popl
mov
aas
roll
in
adc
test
daa
mov
dec
or
pop
int3
sahf
cmp
icebp
mov
mov
aaa
pop
mov
addr16
lock
cmp
sbb
jae
pop
mov
pop
movsb
fistl
aad
adc
xchg
pusha
sub
rep
fstpt
xchg
in
sub
mov
xor
out
adc
fs
ds
ret
je
fwait
leave
insb
mov
sbb
fisubs
movsb
dec
nop
gs
inc
outsb
jns
out
dec
jbe
data16
mov
int
xor
jle
iret
scas
flds
iret
pop
lea
lret
lahf
inc
es
pop
hlt
and
mov
call
jbe
xor
and
pop
mov
push
stos
adc
shll
push
push
inc
cmc
das
sti
stos
mov
sub
mov
cmp
xchg
mov
sbb
loop
sbb
fisubl
popf
push
sub
loope
xlat
lea
push
jmp
adc
bound
adc
pusha
stos
inc
mov
data16
mov
rol
fidivl
fsubp
call
dec
lahf
adc
xchg
xchg
pop
xlat
and
jbe
push
pop
cli
mov
push
mov
lcall
xchg
cmp
add
cmpsl
leave
in
mov
les
stos
insl
dec
jae
ss
addr16
jno
adc
mov
test
aaa
cwtl
and
in
sbbl
dec
ret
in
rorl
push
les
leave
push
sbb
add
pop
out
test
imul
push
shrb
jge
clc
lcall
fidivs
jge
out
pop
bound
pushf
prefetch
out
js
cmpps
push
stos
jecxz
in
les
scas
or
aad
fimull
das
push
enter
loopne
out
mov
int3
outsb
dec
pop
xor
iret
add
pop
lret
dec
hlt
mulb
mov
add
or
xchg
sub
loop
icebp
cli
nop
dec
jp
loop
mov
lcall
movsl
cld
and
mov
mov
pop
jnp
jl
sub
test
inc
or
push
imul
mov
cmpsb
ljmp
jmp
sahf
stos
sbb
sbb
add
loop
inc
pop
cmp
rcrb
test
fisttpll
xor
sbb
aas
push
idivl
aaa
mov
lret
insl
adc
cmovge
inc
clc
mov
aad
jae
mov
daa
sub
pushf
mov
adc
data16
sbb
jecxz
pop
add
mov
cwtl
jae
in
in
sahf
sbb
lcall
repnz
mov
sub
das
jns
dec
out
shrb
jb
pop
fldt
sbbl
pop
clc
imul
mov
dec
fistps
and
jo
push
test
cli
in
fwait
jae
hlt
fsubrl
aam
imul
les
push
lahf
inc
cmp
mov
dec
subb
sbb
pop
pop
sbb
adc
fldl
loop
fsubl
xor
mov
fsubl
into
mov
gs
scas
push
lds
in
push
aas
push
pusha
repz
test
or
xor
enter
aam
hlt
or
ret
cmp
sbb
sbb
aad
mov
push
repnz
cmp
adc
sbb
out
xor
xchg
push
sub
outsl
and
stos
jae
mov
ficompl
iret
xor
jmp
dec
lahf
sahf
in
packssdw
mov
jg
push
jmp
gs
subl
xorps
jno
sbb
stos
andb
insl
mov
pop
mov
jle
lahf
dec
je
dec
cmp
push
div
mov
push
xlat
mov
and
dec
xchg
lock
fcomps
pop
mov
xchg
cmp
inc
jne
push
mov
rolb
mov
mov
js
push
fucomp
ret
sarl
xchg
adc
jecxz
inc
push
inc
dec
cmp
hlt
jne
shll
outsb
nop
adc
xor
scas
lock
mov
std
mov
aad
dec
jl,pn
dec
push
sub
into
or
jbe
xchg
inc
stc
lret
stos
lret
sub
arpl
jns
xchg
fwait
pop
or
mov
inc
cld
mov
sbb
sbb
aam
rcrb
outsl
fidivrl
pusha
lds
mov
cmp
mov
jle
cmp
cwtl
xor
insb
test
js
call
dec
repnz
repz
addr16
into
push
in
je
outsl
mov
inc
popa
mov
pop
mov
sahf
cmp
iret
mov
or
sub
and
in
pop
insb
sub
inc
test
xchg
and
orb
loope
xchg
jae
pop
mov
or
mov
je
in
xchg
ret
stos
stos
leave
test
xchg
js
push
mov
cmpsb
mov
clc
and
or
rorb
fnstcw
xor
insl
loope
repz
inc
es
idivl
or
lret
mov
cmpsl
lret
jmp
cmpsb
call
xor
mov
xor
out
lcall
sub
lahf
fadds
ljmp
mov
loop
adc
popf
std
sbb
pop
adc
insb
gs
sub
jnp
es
push
add
pop
sbb
mov
js
in
push
push
sub
adc
aas
xor
dec
cmp
push
sub
sub
xchg
cmp
mov
gs
push
int
cmc
cmpsb
out
fstpl
cmp
cwtl
push
push
fiadds
ljmp
mov
in
and
and
or
scas
jge
in
push
and
lds
mov
or
in
insb
dec
inc
sarb
ret
add
ret
jnp
mov
lret
jl
cmp
jmp
lea
xor
add
mov
adc
movsl
adc
test
aas
sub
pop
mov
or
xchg
jg
sti
pop
jno
mov
nop
and
dec
jb
jno
and
xchg
adc
rcll
or
xchg
cmp
out
mov
mov
aaa
or
or
adc
sbb
cmp
and
fimull
mov
mov
imull
jno
rcll
aaa
xchg
enter
jno
cmp
adc
sub
dec
sbb
hlt
fstpt
cmp
push
push
into
fdivrs
xchg
pushf
xchg
leave
jb
mov
push
fstpt
dec
lahf
mov
mov
aaa
mov
ror
fstpt
mov
and
je
addr16
clc
sub
add
dec
inc
jno
scas
mov
movb
nop
mov
dec
in
outsb
sbb
inc
push
mov
popa
and
das
ja
addl
fldl
leave
in
pop
add
movd
push
inc
rolb
xchg
das
testl
lcall
daa
icebp
fdivs
push
push
xor
sarl
loop
dec
mov
and
adc
push
lcall
adc
mov
mov
push
and
inc
aam
ljmp
js
and
push
dec
or
cli
add
test
push
outsl
stc
shlb
and
push
xor
popf
mov
cmp
xor
lds
stos
xchg
stos
mov
addr16
xchg
stos
icebp
mov
aam
push
jns
in
push
jnp
xchg
mov
fsubrl
adc
loope
dec
enter
lods
repnz
sub
xchg
xchg
mov
sub
jne
sbb
sbb
repz
mov
in
or
leave
xchg
cmp
pop
lods
test
adc
sub
orl
sbbb
or
cwtl
sahf
dec
pop
movsb
sti
sar
pop
rolb
loop
jle,pn
push
sub
loope
les
jo
and
bound
mov
inc
out
add
test
jle
push
inc
adc
add
cld
push
cmpsb
fsubs
pop
or
mov
push
ljmp
nop
xor
adcb
shl
jge
imul
arpl
inc
lcall
adc
pusha
jbe
sbb
or
xchg
daa
test
cmp
and
pop
mov
pop
mov
jge
daa
push
sbb
mov
stos
jp
jns
inc
insb
jge
ret
add
jmp
fnsave
cmp
mov
dec
pusha
pop
push
aam
adc
add
pop
sarl
mov
mov
push
fistl
inc
subl
push
jne
sub
xor
test
jmp
push
lock
daa
xchg
xchg
mov
orb
ds
push
add
mov
scas
add
xor
fisubrl
leave
mov
jae
gs
inc
pusha
jle
inc
rclb
xor
mov
daa
insl
pop
outsb
or
push
jbe
add
mov
insb
dec
sbb
test
nop
push
mov
mov
out
and
adc
pop
cli
mov
cmp
mov
int3
mov
mov
xchg
je
std
push
cld
dec
cmp
clc
mov
cmp
addb
mov
shlb
pop
fsubr
or
push
mov
test
adc
outsb
shll
and
or
add
lods
inc
pop
sbb
les
cmp
hlt
enter
pushf
dec
xchg
cs
push
mov
nop
or
loopne
mov
cwtl
xchg
nop
or
cmp
mov
test
xor
das
cli
push
fcomps
cmp
dec
lret
cmc
mov
add
mov
sbb
jl
mov
or
sahf
jne
add
pop
adc
scas
js
ss
dec
and
fimuls
sbb
shr
mov
jbe
xor
stos
daa
mov
jnp
in
and
sbb
leave
orl
les
gs
sbb
in
or
add
aas
les
sbb
sub
mov
int
mov
lcall
mov
jne
mov
jae
out
and
xor
aam
mov
mov
mov
sub
movsl
bound
or
sbbb
jbe
cmp
adc
sbb
out
aam
les
adc
mov
idivb
out
mov
lods
stc
inc
icebp
sbb
dec
mov
into
adc
lea
nop
mov
and
inc
sub
into
lock
aam
cltd
inc
and
mov
push
iret
dec
shrb
adc
shrb
xchg
mov
in
repnz
dec
iret
cmp
inc
dec
mov
adc
test
inc
das
test
dec
les
jne
or
mov
or
xchg
adc
push
or
mov
cld
pusha
jo
clc
push
mov
push
aad
xchg
clc
pop
pusha
mov
xchg
in
sbb
clc
int3
mov
mov
sub
insl
cmp
or
nop
movsb
or
insl
push
pop
and
dec
lcall
fadds
mov
popf
sbb
adc
dec
mov
mov
cld
jne
in
nop
lcall
and
fists
inc
xor
xchg
sub
fwait
xchg
pop
inc
jge
mov
jge
pop
dec
push
jmp
push
dec
insl
fs
jbe
lock
jmp
lret
xor
push
adc
fbld
leave
adc
xor
repz
movsb
in
dec
pop
fcomi
in
inc
aas
sbb
pop
into
imul
ljmp
or
dec
push
sbb
notl
testl
test
lods
jne
cmp
xlat
mov
adc
mov
cmp
and
jns
push
lods
mov
call
mov
fistps
jbe
je
sub
daa
outsb
push
sub
push
xor
stos
or
xor
lods
stc
stc
push
xor
lcall
mov
xchg
dec
pop
jle
imul
loop
cmp
pushf
ds
shl
mov
test
inc
fstl
shrb
sti
int3
push
or
insb
out
sahf
pop
mov
dec
jl
je
shlb
insl
imul
ja
flds
mov
ret
push
repnz
icebp
mov
mov
test
imul
and
or
xlat
mov
repnz
test
pop
sar
cmp
lock
add
add
or
loop
int3
push
and
add
mov
arpl
scas
int3
clc
imulb
fcomps
hlt
xchg
inc
dec
ds
or
fidivs
fdivp
aad
jp
sub
push
add
dec
lret
enter
add
inc
mov
cmp
xor
cmp
test
cmp
into
decl
jae
subb
jnp
lret
lds
cmp
xchg
jbe
in
fmuls
ret
cmp
bound
sub
fstpl
stos
repnz
and
xor
cmp
mov
es
cmp
shlb
pop
push
mov
je
jmp
xchg
add
pop
xchg
and
aad
dec
test
lret
mov
jno
sbb
insl
mov
ficompl
dec
mov
cs
pushf
and
mov
fdivr
dec
sub
repnz
adc
push
lods
and
xchg
aad
loop
aaa
jmp
xor
mov
arpl
pop
jg
das
aam
pop
cmp
mov
sub
cmp
loopne
test
aaa
jb
sub
inc
inc
jl
inc
fisubrs
mov
cld
insb
cmpb
or
push
psubd
aas
sub
in
sub
push
push
cltd
pop
inc
pushl
sbb
inc
lea
daa
pop
movl
inc
xor
ljmp
cmp
ror
push
jmp
add
dec
ljmp
push
mov
daa
out
pop
and
xor
outsl
xor
push
ja
cs
mov
xor
aas
mov
lods
xchg
in
pop
in
fists
pop
lds
adc
sbb
cmp
jne
in
sbb
jo
mov
ds
insl
iret
push
leave
sub
out
sbb
jge
inc
xor
mov
cs
addr16
push
and
leave
ds
mov
addr16
subb
adc
push
pusha
dec
fnstsw
jl
popf
jle
std
mov
cmp
shrb
mov
cmp
ss
pop
shl
int
fdivl
push
shll
in
out
push
lds
out
mov
xchg
fcoms
test
cmp
mov
pop
lret
repnz
int3
rcrl
push
sarb
test
push
movsl
aas
sub
loope
cmp
mov
lcall
aam
xlat
inc
cli
lret
xchg
enter
xor
inc
div
mov
call
push
cmpsb
xor
xchg
jmp
outsl
enter
inc
sub
fimull
and
call
xor
outsl
jno
data16
bnd
scas
add
mov
fmul
lock
outsb
add
es
xchg
out
popl
leave
sub
push
push
mov
aaa
xchg
popl
xor
and
lods
std
aas
push
dec
cmc
mov
aam
jecxz
fsub
dec
icebp
mov
not
xchg
dec
cmp
mov
dec
clc
and
mov
cs
push
inc
add
aad
out
pop
in
inc
sub
inc
aas
insb
loope
mov
mov
push
adc
les
leave
fnstcw
mov
je
cmp
fidivrl
pop
jbe
sbb
xchg
jg
movsb
jae
sbb
mov
fcoml
lock
sub
or
add
pushf
cmp
in
in
dec
sub
adc
push
outsl
push
int
jge
test
test
cmp
xchg
jge
aaa
test
add
or
sub
clc
repz
sbb
mov
cmp
xchg
mov
outsl
and
nop
shrb
xchg
popf
push
or
sbb
add
jp
push
dec
and
in
jns
mov
xor
rolb
mov
adc
sub
in
shr
std
push
jmp
popf
pop
insl
jo
pushf
scas
push
call
jl
sbb
int3
sub
das
nop
orb
scas
adc
add
scas
pusha
add
daa
out
addr16
sub
into
adc
stos
arpl
cmpsb
cmpb
outsl
mov
aad
cmp
jmp
fwait
lret
ss
sbb
out
out
mov
xchg
sbb
adc
sub
jmp
jns
pop
mov
cmpb
jp
and
sub
xchg
adc
add
or
adc
pop
mov
subl
lds
fcomip
push
xlat
push
nop
add
cmp
cli
jecxz
insl
in
rcl
pop
xchg
gs
push
call
pop
xor
jb
fadds
fbld
aam
cld
into
xlat
xchg
lock
push
xor
scas
xor
or
cmpsb
out
jo
scas
push
inc
jge
xchg
fisttps
das
mov
pop
pop
xchg
test
jne
push
adc
dec
mov
bound
and
nop
shlb
out
push
xchg
or
sub
sub
stc
push
or
cmp
push
outsl
outsb
ss
jge
leave
es
xor
jnp
xchg
lea
pop
aas
iret
xchg
push
sub
mov
icebp
in
sarl
out
adc
sarl
mov
push
push
mov
ds
sub
sbb
or
sub
rcrl
lods
test
mov
out
cli
pop
push
adc
cmp
dec
icebp
popa
cltd
std
mov
cltd
in
push
jbe
push
int3
xchg
ret
pop
ja
xchg
inc
mov
xchg
mov
in
imull
loope
cmp
arpl
dec
aad
xchg
xchg
rep
or
data16
insl
loop
in
jae
jl
pop
mov
jle
mov
mov
mov
mov
movl
jmp
orb
pop
mov
and
lcall
sbb
ss
pusha
push
out
adc
movsl
iret
jl
jb
dec
nop
mov
cld
inc
decb
fmul
andl
jae
roll
lahf
decb
fbstp
shrl
cwtl
xchg
outsb
stos
inc
into
stc
inc
mov
or
inc
fmuls
inc
adc
mov
repnz
fwait
test
or
add
pop
and
dec
les
mov
sarl
xor
adc
mov
mov
les
xchg
mov
inc
daa
into
sub
xor
sub
cwtl
inc
xor
or
xlat
leave
lock
add
ds
pop
adc
addr16
clc
push
mov
pop
pop
fsubr
jo
aaa
lret
or
fsubrl
mov
add
in
mov
lahf
icebp
inc
fcmovne
adc
mov
dec
mov
mov
imul
int3
mov
les
pop
xlat
jo
sbb
mov
xor
in
push
sbb
lods
in
or
xchg
loopne
jmp
punpckhwd
cmp
testl
add
jecxz
mov
imul
dec
pop
dec
cmpsl
mov
es
jle
pushf
sbb
sub
cmp
cmpsl
stos
lods
ret
xchg
and
nop
movsl
push
in
mov
cmp
lret
jae
clc
mov
rep
push
js
add
mov
xchg
and
aad
dec
sti
inc
pop
icebp
mov
cwtl
cmp
mov
mov
cmp
mulb
fyl2x
mov
in
sbb
leave
mov
jne
mov
dec
mov
aam
push
mov
cmpb
adc
dec
sub
jb
test
push
jl
sbb
add
scas
or
sub
clc
jmp
inc
add
out
push
sahf
ljmp
pop
and
pop
pushf
jmp
dec
aam
push
pop
inc
imul
or
repnz
sti
outsl
jmp
orb
sbb
lcall
daa
setl
popa
out
outsl
iret
dec
dec
inc
cli
lods
xchg
cmp
inc
gs
mov
push
dec
iret
or
lods
test
gs
mov
cmpsb
mov
sbb
jbe
loop
sbb
mov
adc
gs
xor
xchg
ja
and
sbb
adc
and
stc
pop
cli
stos
xchg
jne
pop
bound
add
stos
and
lock
insl
shrb
aaa
add
fnstsw
sub
out
cmc
xchg
adc
jle
mov
mov
fwait
shll
lcall
pushf
ja
out
mov
std
and
insl
jge
stc
test
sti
ret
orl
fldt
into
xchg
incl
in
loop
das
cli
sbb
hlt
mov
inc
jl
and
fmul
loop
std
xor
mov
imul
dec
xchg
mov
in
pop
mov
iret
sub
cmpsl
sub
pop
int3
mov
adc
scas
test
or
cmpsb
out
lock
inc
adc
mov
call
aaa
xor
movsl
ret
andl
dec
jo,pn
pop
lods
ljmp
in
dec
pop
lcall
aaa
xchg
lods
cmp
ds
and
cmpl
data16
dec
pop
cld
cmpsl
push
pushf
mov
cmp
jbe
xor
mov
inc
shr
adcb
mov
inc
cmp
push
mov
jo
fistpll
js
push
cltd
call
and
stc
dec
inc
or
inc
cli
adc
test
leave
rorl
push
js
shlb
adc
sbb
in
sub
xor
dec
jnp
cli
sub
repz
mov
xor
and
das
rclb
mov
cltd
cmp
and
xlat
inc
aas
das
mov
js
out
jl
outsl
cmp
out
push
sbb
jns
incl
xchg
dec
es
mov
lret
and
sub
cli
lock
pop
repnz
lahf
push
or
repnz
out
imul
xorl
jnp
jmp
mov
hlt
xor
xor
push
arpl
inc
push
jo
lds
jb
fcmovnbe
int3
sub
fldcw
outsl
in
inc
lret
inc
sbb
push
jo
cmp
xchg
jge
inc
jb
adc
inc
js
imul
sub
aaa
inc
jb
in
xchg
sbb
movsl
pop
jmp
repnz
mov
fidivrs
jnp
push
fistpl
xchg
sbb
aas
cmp
es
arpl
dec
dec
loope
pop
and
sbbb
cmp
xchg
inc
inc
inc
xchg
or
cmp
rcrb
inc
pusha
insl
pop
or
mov
cmp
ficoml
sub
xchg
adc
loop
inc
fwait
push
mov
mov
xor
or
mov
and
repnz
stos
lahf
test
push
add
push
iret
pop
and
push
scas
push
out
pop
imul
mov
jne
fstps
rorb
cltd
dec
lahf
mov
xor
sbb
sub
mov
js
fs
fcomps
out
loopne
enter
in
fstl
sbb
pop
test
and
or
mov
dec
mov
push
bound
xchg
dec
cld
mov
dec
add
ret
ficoml
add
clc
icebp
pop
dec
adc
mov
dec
ficoml
je
pop
xor
insl
test
jecxz
aaa
pop
sub
imul
sbb
sbb
xchg
mov
push
mov
ljmp
fcomps
mov
data16
cmp
sbb
adc
xor
js
mov
sar
push
idivl
sub
loopne
jg
adc
aam
mov
loopew
das
out
fldl
adc
repz
jne
mov
sbb
mov
out
scas
popf
push
aaa
xlat
xchg
add
or
ret
ret
std
pop
inc
cwtl
clc
or
popf
cmp
sub
jne
push
dec
and
xchg
sbb
pushf
int
aas
call
jmp
push
shll
inc
sti
xchg
sub
lret
push
and
ret
dec
lcall
push
dec
adc
test
loopne
shlb
das
push
mov
repnz
jp
jns
loope
sbb
sarl
jo
cbtw
adc
pop
ja
lods
arpl
out
movb
mov
mov
pop
mov
mov
cmovne
jb
ror
scas
lret
fildl
pop
mov
mov
and
push
inc
mov
aas
stos
pop
cmc
fistpll
roll
pop
lods
in
add
xor
inc
idiv
mov
cwtl
dec
jo
js
jp
jmp
out
xchg
cltd
mov
xlat
adc
jo
mov
test
mov
push
dec
xorl
xor
add
jecxz
les
sbb
mov
rcrb
xchg
jmp
fiaddl
pop
out
data16
lret
sti
jp
inc
gs
daa
out
xor
xor
push
adc
mov
into
push
out
add
addl
push
clc
xor
lds
test
js
mov
mov
dec
sub
push
sahf
xor
das
fwait
cmp
jl
mov
cmp
cmp
int
scas
out
sub
cmc
dec
jbe
jl
xor
push
mov
dec
mov
jno
cmpsl
lods
into
xor
jb
adc
and
sarl
and
xchg
sub
leave
aas
test
add
in
pop
andl
hlt
outsb
or
and
push
cmpsl
mov
pop
inc
sbb
inc
arpl
lahf
push
jb
rorl
jns
jb
ds
fwait
es
test
push
scas
add
loopne
call
sub
xchg
mov
mov
inc
mov
lods
and
movsb
enter
ret
or
bound
xchg
lods
cs
daa
cld
aad
outsb
stos
push
xchg
sub
bound
cmc
outsb
sahf
push
insl
movsl
and
cltd
mov
repz
idivb
mov
sarl
test
xchg
jae
xor
dec
cwtl
xorl
jl
mov
ficompl
pop
mov
inc
cmp
int
mov
jg
stc
mov
jbe
adcb
mov
mov
mov
add
icebp
mov
out
fildll
sub
stos
cwtl
inc
popf
adc
in
inc
test
repz
or
inc
push
repz
mov
mov
or
add
mov
stos
rorb
mov
or
jnp
into
push
pushl
add
mov
ljmp
aas
pop
and
and
jl
cmp
adc
mov
pop
shl
mov
lea
jno
fs
cli
push
jmp
push
lods
mov
jne
movsb
stos
or
in
add
mov
inc
inc
jp
push
in
jae
sub
add
inc
insl
mov
and
sub
dec
js
sbb
and
mov
in
sar
push
inc
xchg
mov
xor
jbe
mov
test
dec
add
and
ljmp
add
or
pop
ret
cs
shlb
test
arpl
or
imulb
push
mov
xor
int3
aas
pop
shlb
jnp
sbb
mov
test
cltd
inc
sbb
insb
movsl
or
push
push
fst
popa
mov
mov
xchg
movsb
mov
rclb
aam
arpl
sbb
xor
enter
out
xchg
mov
and
mov
mov
mov
cmp
bound
arpl
repz
int3
or
or
sub
addr16
push
sahf
dec
pop
xchg
xchg
xor
xchg
jmp
xchg
push
push
jge
idiv
insl
ret
jecxz
jg
int3
mov
das
cmpsb
pop
ret
ret
cltd
cmp
je
jmp
inc
call
sbb
dec
push
dec
call
push
test
xchg
mov
out
in
adc
idivb
mov
or
sahf
jmp
sub
adc
sti
cmpb
pop
sahf
mov
data16
jle
sub
enter
pusha
int
into
loope
fs
xchg
cld
das
aam
arpl
push
push
xor
stos
jecxz
cld
push
push
sysexit
jl
loop
sub
sbb
call
jle
jo
cmp
nop
leave
sahf
push
rolb
mov
adc
pop
rcr
adc
jp
adc
addl
mov
push
bound
sbb
mov
xchg
jp
stos
les
clc
dec
add
enter
stc
sub
xchg
lret
cltd
dec
mov
mov
cld
ja
jle
push
dec
add
fnstsw
sub
sub
mov
aad
aad
xlat
pushf
fnstcw
xor
cli
out
test
inc
insl
mov
push
inc
xchg
mov
cmp
sbb
sub
inc
xchg
lock
addl
fwait
push
repnz
out
inc
xchg
pop
mov
jle
lods
iret
xchg
sbb
scas
stos
sbbb
fwait
shr
outsl
and
inc
cmpsl
xor
out
lock
push
jno
mov
dec
fstpt
dec
xchg
xor
addb
daa
dec
and
push
int3
clc
adc
addl
sbbb
cltd
mov
xchg
push
popf
mov
dec
mov
dec
adc
cmc
and
cmp
roll
imul
push
mov
and
mov
xor
cmp
mov
mov
in
cmp
pop
std
stos
clc
in
adc
xchg
pop
loopne
sub
sahf
sub
idivl
iret
cmp
push
sbb
mov
or
cld
xor
mov
rclb
ror
add
loop
subl
jg
xchg
rep
sbb
lock
mov
adc
mov
addr16
sbb
add
jmp
rorb
mov
stos
inc
lods
into
adc
push
les
pop
xor
cmp
jae
outsb
pusha
mov
shr
push
outsb
in
and
cmp
je
adc
xor
in
sbbl
mov
imul
adc
test
in
mov
imul
nop
add
lods
shrl
inc
je
sub
push
lea
mov
mov
jns
cmp
scas
mov
je
outsb
fbstp
mov
das
xor
cmp
mov
test
dec
repz
mov
xchg
jbe
popf
and
lea
sbb
test
xchg
sbb
add
gs
imul
nop
aad
outsb
cmpsl
sub
and
jno
sub
xor
jg
adc
push
lods
rorl
jg
clc
sub
sahf
out
in
push
add
mov
sbb
inc
sub
xchg
mov
cld
cmp
jb
mov
dec
enter
mov
repnz
xor
pushf
mov
xor
sbb
pop
and
icebp
daa
ja
pop
adc
pop
jp
dec
sbbl
mov
fsubrl
sti
out
faddl
xchg
into
xor
js
sub
cmp
bnd
sti
test
jae
mov
xchg
ljmp
sub
divl
test
push
mov
xor
mov
jle
mov
xor
cld
out
loop
fbld
add
jbe
sub
cs
add
jmp
push
shl
loop
test
rcrb
dec
loop
data16
push
stos
and
xor
adc
jg
rcll
dec
mov
inc
aad
std
mov
pop
xor
in
or
js
adc
add
enter
and
mov
pop
mulb
push
jmp
mov
cmp
sbb
or
subl
jmp
push
fisubrl
mov
in
mov
fidivl
dec
jno
ss
ss
jno
aaa
jl
jge
xchg
rolb
sarb
hlt
clc
jae
leave
clc
aaa
inc
pop
mov
rcll
cmpb
pop
or
int3
bound
pop
sub
nop
jecxz
sub
cmp
mov
lods
das
nop
pop
outsl
sbb
int
loop
fdivs
cmpsb
cmp
and
addl
or
movsb
or
xor
aad
push
jb
jbe
mov
out
pop
mov
pusha
stos
add
out
lock
loopne
scas
inc
shrl
pop
mov
xchg
or
ljmp
repnz
add
sahf
stos
into
dec
xlat
pop
add
jl
or
adc
cld
clc
fwait
pop
mov
add
out
sub
adc
push
movsl
xchg
pop
mov
inc
lock
leave
jmp
stos
imul
xchg
sub
test
jmp
into
xor
and
test
das
jnp
or
add
popf
jo
fwait
cmpsb
out
mov
arpl
data16
sub
and
imul
dec
push
clc
insb
mov
xchg
pusha
pop
sub
pop
jle
xchg
mov
mov
cmp
pop
int3
xor
test
mov
in
sarl
jne
in
push
xor
jecxz
mov
xor
fstpl
cwtl
xchg
fisubrl
ror
dec
int
and
or
cmpsb
mul
cmp
adc
fstl
aas
and
jbe
jg
push
test
push
lcall
enter
and
lea
into
mov
ret
lret
hlt
xor
or
cli
mov
in
or
incl
in
mov
pop
fwait
gs
mov
movsl
stc
test
aaa
dec
out
adc
mov
jg
add
pop
or
aam
enter
pop
xchg
dec
or
std
int3
cmp
gs
mov
or
jns
mov
jle
sbb
lret
in
pop
jg
call
shl
mov
xor
xor
bound
dec
lret
loop
push
or
scas
ret
cltd
loop
stos
pop
push
sahf
cmp
xor
cmp
jo
push
outsl
cmp
push
cmp
and
jl
pop
lcall
mov
das
sub
mov
xor
lcall
ret
iret
into
lods
mov
push
mov
shlb
rcrb
insb
mov
cmpsb
aaa
push
cmp
ret
out
stos
stos
and
mov
mov
cmpsl
or
dec
arpl
mov
xor
mov
lea
jp
mov
ljmp
outsl
in
xor
stos
sub
push
es
fsubrl
push
cmp
cmpb
testb
xor
xchg
push
shrl
jg
cld
dec
xor
dec
jno
into
xor
mov
pushf
lods
cs
mov
loopne
addr16
out
push
jnp
jns
push
cmp
fs
mov
jmp
xchg
push
insb
xor
cmc
pop
in
push
es
pop
mov
xor
imul
int3
aaa
movsl
ss
xchg
jle
adc
and
dec
ljmp
pushf
aam
aas
xchg
cmp
jne
sub
leave
mov
or
push
cmp
test
loop
sbb
orb
aaa
cltd
arpl
ljmp
std
mov
adc
jmp
int3
or
ljmp
mov
loope
pop
dec
jae
stc
mov
pop
jecxz
xchg
loop
xorl
inc
mov
mov
mov
inc
addr16
aam
jmp
into
add
notl
push
cld
cmpsb
leave
orb
mov
out
popf
push
pop
leave
ds
into
sahf
and
shll
push
push
cmp
xchg
ljmp
lret
out
pushf
and
or
mov
ret
add
cmpsl
push
mov
outsb
frstor
mov
sti
adc
cli
mov
or
inc
fst
xor
cmpb
or
mov
add
sub
jmp
push
pop
cltd
ret
fsubr
lcall
pop
and
dec
imul
cmp
dec
sbb
in
jp
push
mov
ss
outsb
inc
xor
mov
jg
xor
pop
inc
pushf
into
in
xchg
andb
sbb
nop
xchg
fs
dec
mov
pop
mov
rorb
clc
dec
push
fwait
mov
addr16
jp
cwtl
inc
jl
insb
test
in
or
add
pop
pop
add
xor
rcrl
inc
sahf
popa
sub
cwtl
jnp
xor
dec
xor
sbb
ds
lds
imul
das
push
aas
cld
dec
pop
push
jae
push
aas
das
arpl
xlat
inc
adc
cmc
lock
out
xchg
cmp
fsubr
dec
lea
fldcw
cmc
lcall
enter
bound
cmovl
loope
in
sub
imul
cmpsl
jb
in
lcall
getsec
push
es
popl
xchg
push
dec
and
inc
inc
push
mov
fidivrl
and
add
adc
mov
inc
cmpsb
lea
push
arpl
imul
mov
in
mov
xchg
add
fs
orl
xchg
jmp
or
mov
add
mov
sti
mov
fists
int
mov
dec
adc
pushl
ret
test
out
push
daa
loopne
imul
mov
xlat
dec
in
cmp
mov
dec
or
push
in
add
push
lock
push
in
sarb
mov
stos
adc
ja
cmp
lds
push
jge
mov
nop
std
push
ds
xor
shl
je
les
rcrl
in
das
xchg
lcall
push
inc
dec
sbbl
cmp
enter
call
std
cld
xor
push
lock
jnp
sarb
gs
mov
repnz
pop
sti
les
aaa
and
pop
inc
mov
inc
pop
outsl
imul
sub
fldenv
pop
bndldx
dec
aad
test
sahf
xchg
lret
fwait
xchg
pop
jns
lahf
ds
mov
cmpsb
leave
xchg
xor
xlat
clc
dec
pop
push
in
xor
gs
lods
lock
push
stos
jp
cmp
add
mov
sbb
sbb
jp
jbe
push
aas
lock
add
dec
adc
xchg
std
cmc
decl
pop
push
cmp
orl
rcr
dec
and
imul
xor
xchg
hlt
scas
push
or
jne
push
dec
push
imul
jp
or
adcl
sbb
jmp
fsubs
or
loopne
xor
lods
push
dec
sbb
mov
out
outsb
pop
fwait
cmp
and
and
pop
cwtl
xchg
xor
imul
inc
jae
subb
xchg
add
add
daa
fists
into
icebp
cmp
adc
in
aad
cmp
jg
cmc
jl
mov
jnp
lods
mov
test
popf
jle
push
sub
add
xchg
xor
popf
mov
jg
inc
jo
jo
sar
jb
pop
mov
pop
incb
inc
xchg
push
cmp
lods
push
adc
dec
lret
pop
jo
pop
and
shrb
or
lock
sahf
int3
and
dec
jo,pt
icebp
mulb
sbb
cmpsb
popf
and
pop
insl
xor
jge
stos
mov
cmp
jb
stos
shrb
pop
mov
test
mov
sarl
xor
adc
or
push
fstp
sub
and
or
aaa
into
decb
outsb
sahf
pop
aaa
in
enter
rcrl
mov
loop
mov
repnz
outsl
dec
mov
add
les
lods
xorb
cli
or
test
decb
pop
mov
fnstenv
sub
loop
add
add
push
repz
xor
mov
movsl
aam
outsl
aaa
mov
pop
iret
cmc
mov
xor
dec
xchg
js
jae
mov
xchg
lret
sub
mov
mov
std
out
inc
jno
adc
dec
imul
push
outsb
xchg
jne
outsb
xor
fcomps
in
rdmsr
or
lds
imul
or
shlb
adc
jmp
enter
mov
movsl
inc
mov
cmp
adc
ds
pop
pop
pushw
cltd
lods
in
js
insl
xchg
decl
xor
jae
mov
cmp
mov
rcr
sbb
pop
adc
movsl
or
xor
les
inc
rcr
loopne
mov
mov
pop
test
js
or
phsubsw
dec
jo
ret
cmp
inc
shlb
inc
adc
mov
sub
jp
mov
cmp
js
adc
fsubrp
jg
hlt
cmp
add
xor
sub
xchg
mov
and
mov
fiaddl
lods
push
lahf
repnz
push
push
or
push
mov
jo
test
sbb
dec
leave
dec
jns
mov
inc
lods
cli
mov
notb
cmp
dec
lea
jg
fisttpl
mov
jge
push
cmc
in
mov
dec
adc
jge
xor
and
mull
cmp
dec
lret
aad
push
and
aaa
jno
imul
and
jae
sbb
inc
push
xchg
test
repz
mov
xchg
call
orb
jns
xor
mov
mov
jns
inc
dec
cli
push
mov
into
out
sub
lret
movsb
sbb
xor
insb
sbb
int
mov
xchg
cmpsl
mov
pushl
or
cs
out
out
ljmp
lahf
add
xor
popa
ret
in
mov
xchg
inc
out
and
dec
sbb
repz
push
xor
shlb
xor
or
lret
xor
call
jo
xor
stos
imul
xor
jo
mov
fsubp
add
insb
inc
ret
fiaddl
dec
lods
mov
outsl
pop
sub
testl
icebp
shrb
jae
jle
mov
lcall
dec
mov
out
mov
inc
push
vcmpsd
movsl
lcall
jb
adc
stos
ss
pushf
xchg
outsl
xchg
and
imul
xor
sti
mov
ja
xchg
les
mov
cltd
xor
jne
pop
adcb
mov
popf
fadd
fildl
and
fcmovu
fs
jmp
xor
or
pop
push
and
pop
pushf
or
sub
xor
mov
mov
jmp
data16
sbb
sub
jecxz
cmc
sbb
push
mov
test
push
mov
test
jmp
int
movsb
imul
xchg
cmc
ss
adc
pop
aam
push
jns
divb
scas
pop
mov
mov
jae
mulb
and
pop
outsb
sbb
divl
fdivrl
push
subl
movsb
ljmp
xor
call
pop
cmp
xor
into
jno
add
xor
cmp
rcrb
xchg
adc
mov
ret
pop
int3
out
pop
jecxz
fstl
mov
jg
sub
or
fdivrl
jecxz
jg
push
xchg
mov
in
pusha
mov
lods
or
adc
adc
push
lret
add
lcall
lcall
lret
rorl
pop
call
cltd
sahf
cmpsb
dec
sbb
mov
fnstsw
in
stc
pop
iret
sub
jecxz
mov
sub
mov
movsb
cmc
out
clc
sub
mov
pop
inc
xchg
int
sub
xor
dec
pop
cld
cmpsb
jbe
push
jns
push
and
adc
cmpsl
adc
cmp
push
lods
or
les
dec
lods
mov
mov
add
rcrb
dec
adc
push
add
push
fstpl
add
movsl
mov
enter
add
lds
or
jb
pop
std
push
mov
cmp
sbb
loop
pop
cmpsb
rorl
daa
xchg
push
push
push
cltd
and
mov
adc
lahf
cwtl
aaa
lds
pop
js
xorl
int
std
add
sbb
movb
push
js
lock
dec
inc
mov
adc
fstl
stc
sbb
dec
inc
cld
push
xchg
rcrl
cwtl
sub
and
push
int3
in
xchg
xor
push
ss
add
cltd
sti
arpl
pop
aaa
je
cwtl
add
nop
rcr
cmp
pop
loop
and
lcall
sub
ret
mov
sbb
jecxz
es
std
mov
nop/reserved
push
lods
out
ja
bound
sub
fistps
fistpl
es
sbb
dec
mov
cs
call
xor
xor
test
shrl
std
or
ja
std
fdivrs
xor
push
mov
daa
pusha
jnp
inc
mov
dec
in
lahf
dec
xor
mulb
mov
ja
fmuls
insb
repnz
inc
push
enter
cmpsl
shlb
sahf
lock
inc
cmpsl
insl
xchg
xchg
dec
stc
sub
cmp
push
scas
lds
jmp
mov
loope
mov
mov
sbb
stos
popa
mov
mov
adc
xchg
or
sub
xor
pop
stos
pop
or
jne
push
insb
stc
xor
ret
and
cmp
adc
std
inc
sbb
mov
adc
cmp
lahf
enter
lods
inc
jg
or
sahf
mov
or
aam
or
pop
shr
xchg
jnp
movsl
decl
cmp
push
imul
or
xor
cld
lock
cli
jmp
stc
mov
pop
loopne
lea
pop
pop
mov
aam
or
pop
mov
push
mov
inc
cmp
test
clc
data16
dec
insl
neg
scas
or
stc
imul
inc
loop
sbbl
push
jecxz
dec
insl
pusha
je
pop
imul
xor
fildl
cli
mov
or
test
movsl
fwait
and
add
sarl
jmp
push
and
dec
stos
push
adc
jecxz
std
cmpsb
sbb
cld
pop
in
adc
andl
sub
cmpsl
sar
nop
mov
dec
ss
ljmp
mov
jbe
mov
shl
push
sahf
xlat
jecxz
mov
xchg
sub
xchg
adc
int
fists
dec
jb
add
mov
jbe
scas
enter
addb
popf
sub
js
push
js
test
scas
push
in
mov
add
add
ja
push
jp
cmc
fadd
outsb
adc
pushf
jg
pop
dec
sbb
jle
xchg
in
fidivrl
stos
jo
push
sbb
out
inc
lds
loop
movsl
pop
add
sbbl
test
popa
push
test
sbb
loope
jecxz
push
cmp
mov
cmpsb
aaa
pop
lret
scas
cli
dec
fs
pop
scas
sub
inc
adc
dec
fcomip
xchg
fistps
fmulp
push
aad
into
or
dec
test
xchg
add
ljmp
out
jne
dec
xor
aas
dec
ss
adc
xchg
xchg
lds
lds
ret
pop
jo
sbb
sbb
cmpb
cmp
or
mov
loop
push
rorb
add
ss
ret
lods
dec
xchg
dec
mov
je
xchg
add
and
cmpsb
mov
int3
mov
outsb
mov
inc
arpl
hlt
repz
mov
hlt
jp
sbbl
jmp
pop
mov
pop
cmp
and
push
movsl
pop
lea
sub
fcmovnb
and
xchg
enter
jle
loopne
fbld
jno
dec
aas
cwtl
mov
xor
push
inc
stos
pop
mov
ja
sarl
mov
sub
mov
cli
inc
popa
inc
xchg
push
and
andb
neg
decb
aam
jno
adc
scas
enter
repz
out
mov
xchg
cmp
insb
mov
mov
cs
mov
push
jp
insl
push
mov
sahf
loope
or
add
sub
int3
sub
xlat
dec
arpl
xchg
xchg
fmull
adc
lret
mov
aas
jnp
cmp
jno
inc
pushw
push
movsl
orb
add
xchg
push
es
popf
inc
repnz
ret
cmpsl
cwtl
xchg
jge
js
ds
mov
xchg
sbb
addr16
popf
aas
cli
inc
addr16
imul
xor
jnp
and
xchg
leave
test
shl
jle
xorb
subl
jnp
push
sbb
jmp
leave
ret
out
fwait
xchg
mov
add
test
shl
dec
inc
adc
call
data16
fldl
and
inc
sub
out
repz
fs
push
mov
popa
dec
push
lods
lods
or
jecxz
sub
push
lret
cmc
test
dec
lods
and
aaa
bswap
or
pop
sbb
sbb
add
pop
fwait
or
inc
mov
pushl
ds
push
popa
mov
iret
fldcw
out
add
xor
adc
inc
jne
xchg
and
lods
mov
xchg
aad
mov
lea
adc
jbe
and
rcl
mov
cmp
dec
pop
mov
and
dec
std
sub
mov
mov
movsb
pop
outsb
fcmovne
mov
mov
out
push
cmp
insl
ljmp
repnz
add
pop
lahf
inc
cld
iret
imul
sbb
inc
jl
cmc
jno
lea
rorb
cmc
ret
and
dec
std
loop
mov
mov
nop
fisubl
js
add
cltd
divb
test
movsb
aad
stos
mov
sbb
inc
add
xor
jne
ss
pop
addl
lret
xchg
and
loope
jne
mov
movb
cmp
ret
pop
dec
pop
in
jge
add
jp
and
xchg
xchg
cmpsb
pushf
and
and
in
sbb
fidivl
iret
arpl
arpl
jl
lds
pop
fs
and
dec
pop
cmpsb
pop
xor
mov
imul
mov
insl
inc
aam
outsb
inc
add
jge
in
daa
adc
shrl
inc
rclb
imull
or
in
lcall
dec
gs
neg
adc
mov
ret
outsb
mov
lods
nop
jae
sub
out
jnp
das
aad
in
cmp
scas
mov
mov
lock
add
adcl
cmpsl
mov
ds
or
sbb
mov
lock
xchg
vmulss
adc
pop
inc
mov
lock
mov
fwait
inc
push
lret
push
sub
mov
jns
pop
gs
pushf
daa
push
sbb
gs
mov
pushf
fildl
out
cli
cmpl
push
popf
fisttpll
push
mov
sub
cmp
lcall
test
sub
arpl
jle
sub
and
ljmp
int
scas
in
aaa
lods
or
mov
xchg
nop
xor
mov
scas
adc
push
fldl
pusha
add
stos
stos
push
fidivl
inc
nop
daa
ds
movsb
mov
jno
mov
mov
adc
fdivrl
aam
loopne
lock
ja
pop
in
outsl
mov
dec
and
roll
pusha
pop
sbb
ds
js
int3
paddd
mov
inc
rclb
addr16
and
movsl
adc
aad
mov
cs
ja
cli
xchg
pop
movsb
and
dec
int3
xchg
or
add
push
pop
dec
imul
int3
and
popf
loop
outsl
mov
aas
dec
mov
xor
and
daa
or
sahf
xchg
cltd
and
daa
jmp
jle
clc
cmpsb
mov
int3
pop
xchg
jns
pop
js
mov
in
add
dec
jne
lcall
shrb
movsb
mov
andl
mov
sti
test
fs
inc
pop
dec
and
inc
insb
ss
sub
push
sub
xor
mov
shrb
adc
xchg
inc
mov
test
es
mov
invd
mov
stc
mov
pop
xor
or
lods
mov
and
inc
mov
outsl
outsb
inc
mov
je,pn
das
mov
xor
push
inc
dec
mov
aas
sub
mov
aam
lds
mov
sub
stos
fs
mov
mov
fldt
jl
rclb
hlt
xor
sub
pop
andl
ret
xor
lret
leave
mov
push
mov
pop
jnp
lcall
outsb
popa
lcall
jo
sub
lcall
sub
insl
jmp
pop
lcall
xor
test
xchg
jl
mov
push
lods
aam
jne
popa
fistps
xchg
imul
fisttps
adc
or
pop
addb
xor
nop
ficoml
cmp
mov
push
addr16
add
int
push
rcrl
fs
dec
inc
inc
cmp
out
or
inc
mov
and
adc
mov
xchg
jle
xor
push
sub
jg
scas
rcr
sbb
popf
sbb
jmp
cs
jne
cli
pop
xchg
mov
mov
dec
sahf
sti
push
dec
xchg
int
sbb
movsl
pop
mov
ret
shll
cs
incl
mov
leave
clc
push
les
enter
sbb
or
fmull
add
notb
imul
dec
cmp
gs
sbb
popa
addr16
mov
faddl
mov
add
scas
mov
cs
test
test
jge
hlt
out
enter
je
testb
add
insl
xor
movsl
into
shr
cwtl
iret
jae
sbb
jo
andl
lock
mov
cmp
in
push
in
daa
mov
sbb
push
push
into
lret
out
sbb
dec
cmp
sub
sbb
xchg
mov
or
in
cmc
adc
rcrl
xor
lds
jge
sub
or
sbb
mov
fdivrl
lods
jae
fwait
cmp
jle
pop
jno
jno
popf
adc
fldcw
loope
sbb
repnz
mov
lods
leave
cs
enter
sbb
or
dec
add
add
mov
sbb
dec
inc
jg
clc
or
imul
loope
and
push
add
adc
jno
iret
mov
cmpsb
in
scas
mov
mov
mov
jg
addr16
loopne
dec
xchg
data16
divb
mov
outsb
ret
sbb
sub
enter
cli
test
and
push
js
std
out
adc
mov
je
loope
mov
mov
push
sti
xor
jp
or
js
fmulp
xchg
repnz
dec
mov
jmp
pop
push
xlat
jbe
lcall
loop
jbe
xor
dec
arpl
jmp
push
cmp
nop
outsb
inc
clc
sbb
stc
clc
cwtl
lods
sti
fisttps
and
test
jb
cmpsb
aas
push
cmpsl
out
clc
push
dec
jg
jb
push
jp
enter
stos
sarb
fiadds
add
sbb
cmp
loopne
inc
out
fiadds
js
sbb
pop
mov
arpl
insb
clc
sbb
out
scas
mov
popa
testl
cmp
xorb
pusha
scas
xor
mov
push
and
cmpsb
sub
sbb
or
aad
leave
xor
insb
adc
scas
cmp
sub
mov
icebp
or
dec
hlt
mov
push
pop
xchg
push
je
jmp
mov
adc
rcrb
jge
test
mov
cld
jge
sub
xchg
in
neg
call
or
xchg
xchg
xchg
les
sbb
scas
or
mov
push
test
or
je
outsb
xor
clc
jae
xlat
sbb
fcom
loope
lods
in
mov
sub
mov
xchg
fildll
sbb
xchg
nop
and
push
lcall
mov
scas
sti
hlt
add
jb
int
pop
xchg
pop
fcmovbe
dec
adc
push
sbb
fnstsw
rcrl
add
in
adc
adc
mov
sahf
add
push
jns
leave
jg
stos
sub
push
jp
fnstsw
aad
sti
in
or
jno
jge
sub
das
xchg
or
jg
sbbb
cmp
mov
xor
repz
adc
iret
ljmp
lds
pop
push
mov
cwtl
push
int3
int
fs
dec
js
sarb
cmp
je
outsb
and
pop
push
outsl
mov
sub
cmp
cli
inc
sub
xor
scas
push
cld
and
push
sbb
jecxz
cmpsb
jbe
mov
icebp
clc
cmpsl
stos
mov
movsb
outsb
xchg
or
mov
xlat
mov
fcoms
jne
push
and
rclb
movsl
cmp
mov
xchg
pop
inc
rcll
push
jnp
xor
push
mov
das
cmp
ror
in
cmp
xor
rol
bnd
daa
aaa
or
jmp
fistpll
rclb
hlt
xor
push
sbbl
dec
and
scas
inc
out
adc
test
cmp
lods
cmp
inc
inc
mov
repnz
repnz
test
jge
inc
sbb
call
jg
add
addr16
lock
jno
mov
in
fcmovbe
scas
test
stos
cmp
jle
dec
cld
xchg
dec
push
mov
dec
imul
les
mov
sub
int3
mov
or
mov
xlat
mov
xor
leave
loope
insb
addb
popa
ret
gs
mov
mov
lcall
pop
out
mul
push
mov
into
add
fsts
cmp
lods
cmpsl
mov
add
sti
fwait
and
jmp
jbe
add
or
add
mov
push
adc
xchg
adc
mov
mov
pop
pusha
mov
mov
outsb
es
mov
addb
xchg
xchg
mov
imul
cld
cs
xchg
icebp
push
leave
movsl
sbb
pop
add
test
mov
fldenv
dec
adc
jecxz
sub
jb
mov
xchg
sbbb
xchg
pop
lods
fisubs
jmp
jge
decb
dec
insl
sbb
adcl
js
cli
mov
mov
pop
mov
adc
jl
stos
rcr
xchg
enter
xor
push
in
dec
nop
repnz
lret
xor
cmp
jmp
and
insb
in
lock
jns
and
or
xor
jp
in
out
pop
aad
repnz
pop
or
sbb
pop
pop
cld
and
mov
int
lret
clc
outsl
and
lock
loope
lret
add
inc
and
int
inc
imul
sahf
mov
push
xchg
outsl
xor
pop
popa
in
mov
insl
jnp
test
sbb
pop
xchg
mov
sti
mov
jl
fwait
popl
out
mov
pop
pusha
push
or
adc
insl
or
ret
ds
das
into
sti
addr16
dec
pop
lods
adc
or
or
mov
push
xchg
cmp
jp
pop
out
xchg
out
fsubr
jnp
pushf
adc
sub
or
pusha
dec
push
cmp
mov
stos
jnp
popf
or
in
xor
stos
sahf
add
pop
adc
mov
mov
mov
sub
mov
sub
mov
mov
icebp
and
add
ret
add
cmp
jo
sbb
cld
scas
pop
dec
mov
inc
push
dec
loop
sub
xchg
imul
outsb
gs
sbb
xchg
mov
outsl
cld
movsl
and
in
icebp
pop
xor
hlt
aam
jmp
inc
dec
inc
js
lahf
mov
mov
xchg
aas
outsl
out
cmpl
sbb
sub
dec
cmpsl
ljmp
shl
and
test
pop
sub
loopne
sarl
mov
push
pop
dec
inc
dec
mov
sub
xchg
adcl
pushf
or
shl
mov
fidivrs
sbb
adc
lods
cld
or
lret
rol
outsb
push
add
cs
mov
sub
jb
and
lods
xor
jge
add
out
insl
jl
mov
push
hlt
inc
andb
imul
jge
out
sbb
or
int3
arpl
fs
scas
adc
sbb
pop
out
sbb
mov
mov
push
pop
push
loopne
es
call
sbb
sbb
add
test
and
les
je
ja
rcr
icebp
mov
seto
and
pop
fwait
cmp
pop
sbb
stos
pushf
mov
mov
push
popf
pusha
ret
fcmovne
daa
popf
dec
cmp
sbb
js
nop
inc
aaa
mov
hlt
aaa
adc
clc
sub
and
or
mov
mov
lcall
jne
mov
in
test
test
cmp
das
in
loop
stos
jp
dec
jb
cwtl
and
enter
xor
ljmp
or
fmuls
xchg
pop
call
cld
sbbb
cltd
das
in
inc
cmp
pop
fdivs
call
test
jmp
mov
testb
mov
jp
push
xor
pop
inc
rclb
push
fsts
in
and
push
pop
out
fiadds
lret
mov
add
outsb
je
rcr
inc
int
lods
jno
sbb
mov
dec
inc
lock
cmp
lret
ss
ss
data16
aad
shrl
sub
pushf
hlt
outsb
test
cmp
sub
test
jbe
insl
roll
inc
fdivl
dec
or
pop
jbe
add
inc
pop
cmp
fnstenv
mov
shll
or
pop
adc
sti
rcrb
mov
js
push
data16
pop
lds
insl
fldenv
stos
scas
add
enter
out
out
push
aas
and
dec
arpl
sbbb
pop
dec
imul
pop
imul
mov
cmp
out
and
xchg
scas
mov
icebp
loope
push
ds
xor
inc
mov
push
sarb
popf
cmpsl
outsl
mov
into
iret
pop
jnp
sahf
ret
mov
and
movsl
add
and
mov
cmp
sti
cmp
and
adc
loope
pop
fnsave
sar
aam
rcl
int
mov
pusha
insl
jp
pop
cmpsb
xlat
aam
adc
sbb
inc
cmc
cmp
popa
dec
fdivrl
call
popa
aaa
xor
je
addr16
not
sub
repz
inc
insb
sub
add
stos
andb
loop
fdivrl
js
ret
clc
sbb
in
outsb
or
mov
mov
xchg
inc
test
sub
scas
fiaddl
hlt
out
mov
or
adc
xor
outsl
enter
les
andl
adc
sahf
int3
add
out
push
icebp
adc
jae
cmpsb
sbb
loop
shlb
pushf
in
mov
inc
adc
mov
xchg
lock
lret
inc
lsl
xor
loopne
ror
sbb
adcl
test
outsb
aam
lret
ror
add
test
movsl
test
jo
jge
cmpsb
fwait
cmp
push
xchg
cmp
mov
jl
push
sbb
pop
icebp
iret
jmp
dec
cmp
into
sahf
cltd
leave
push
faddl
jnp
mov
fcom
out
inc
rcll
aad
mov
inc
adc
mov
inc
lahf
ret
push
aad
fsubp
pop
mov
push
movsb
dec
pop
ljmp
jecxz
gs
into
gs
jns
pop
stos
cmp
push
lods
pop
xor
adc
lret
test
bound
jo
pushf
aam
xchg
jp
xchg
jge
xchg
add
mov
add
add
xchg
xchg
cld
sub
in
jmp
aaa
jne
lds
mov
cmpsb
mov
leave
arpl
mov
xchg
add
mov
fxch
xchg
inc
xchg
repnz
and
icebp
xor
das
in
ja
push
jb
mov
xor
sbb
inc
repnz
cmp
aad
sbb
movsb
jmp
es
inc
lret
cmpsl
push
call
leave
aam
xchg
xlat
mov
sbb
add
out
pop
add
mov
pop
jmp
pop
pop
gs
arpl
sahf
inc
repnz
jmp
lret
test
cli
jb
dec
push
shrb
push
test
pop
loop
cmp
cs
cmpb
or
mov
mov
mov
lret
sub
daa
sub
pop
daa
rcr
sarl
insb
addr16
icebp
sub
jmp
xchg
push
pusha
lea
imulb
mov
inc
pop
or
dec
and
mov
adc
pop
mov
cmp
cmp
pop
add
imul
xlat
scas
or
movsb
iret
adc
subb
adc
mov
sub
push
cmp
iret
loop
cmp
sub
pop
sbb
enter
mov
iret
cltd
addr16
or
jns
pop
insb
mov
mov
pop
stos
enter
test
test
mov
push
imul
jae
sbb
pusha
xchg
pop
or
adc
out
mov
nop
push
xchg
xchg
dec
sub
stos
jb
pop
push
std
xorb
xchg
xchg
decb
add
ret
rcll
jl
lcall
jle
sub
xchg
mov
imulb
add
mov
pop
sbb
jne
testl
xlat
pop
and
jo
xchg
cld
cwtl
or
jne
dec
dec
mov
rcr
daa
ret
inc
mov
and
shrl
mov
jbe
cmp
sbb
push
in
imul
fucomp
mov
cmp
mov
rclb
fbstp
in
mov
or
jo
movsl
push
enter
mov
je
mov
dec
js
inc
sbb
outsl
outsl
adc
fidivrs
loope
leave
test
xor
jbe
pop
xchg
ret
data16
pop
xchg
jo
cli
mov
push
int
inc
xchg
mov
sbb
sbb
orl
mov
andb
xor
sarl
ret
loop
xor
fnstsw
dec
mov
cmpb
mov
pop
jbe
into
xor
nop
shl
pause
adc
cli
shlb
adc
ljmp
ds
sub
xchg
dec
es
pushf
hlt
mov
xor
jb
mov
pop
stc
leave
les
ret
pop
cld
xor
mov
lea
sbb
call
mov
scas
out
aaa
inc
mov
push
ficompl
push
mov
icebp
dec
add
pop
dec
into
mov
addr16
daa
mov
xorb
push
call
xor
in
fimull
adc
cmp
xor
hlt
mov
insl
popf
adcb
push
outsl
pop
je
cwtl
imul
dec
icebp
xchg
jnp
outsl
pslld
sbb
scas
out
push
jb
fisubs
add
sbb
sahf
inc
pop
mov
mov
cmp
xchg
pop
jns
aad
jbe
push
ljmp
int
stos
ss
leave
and
aad
inc
pop
fs
shrl
fpatan
pop
out
sub
addr16
sub
loope
lcall
dec
out
adc
and
pop
mov
mov
add
in
or
loop
mov
mov
aaa
pop
fs
pop
mov
push
xchg
cmp
pop
or
ret
je
xchg
enter
and
divb
jg
add
add
bound
mov
test
or
or
or
cmp
dec
push
in
ds
jno
shll
mov
clc
sub
insl
sbb
aas
pop
mov
mov
xor
adcb
add
roll
cmc
mov
subb
or
nop
fldenv
adc
std
inc
mov
mov
movsl
mov
sub
mov
jle
aas
inc
jne
iret
pop
pop
addl
test
mov
cwtl
scas
fimull
test
movb
aam
push
rcrl
jb
xor
or
shrb
pop
fwait
in
lahf
xor
dec
jecxz
mov
das
out
or
cmpsb
mov
push
jne
and
mov
scas
or
iret
mov
inc
inc
fildl
sbb
mov
mov
mov
add
testb
add
fisubl
add
leave
std
push
push
xor
sub
adc
out
jge
leave
leave
cmp
inc
inc
mov
ja
filds
push
jp
push
jl
mov
xchg
addr16
jl
dec
or
test
inc
pop
test
out
jbe
loop
jne
sbb
add
dec
decl
pop
jmp
sub
jbe
pushf
jmp
or
aas
pop
inc
or
jns
mov
fdivrl
push
jb
pop
jbe
pop
mov
stos
repnz
push
stos
pop
jno
sub
je
les
pop
sbb
fcoml
pop
js
dec
jl
fildl
sbb
xchg
jl
dec
push
push
mov
jnp
sub
popf
insl
lahf
mov
and
pop
pop
xor
leave
addr16
lock
mov
pop
sbb
dec
push
scas
sahf
mov
out
leave
xchg
mov
mov
pop
mov
push
adc
fwait
pop
cs
push
fldenv
mov
sub
push
cltd
and
or
xlat
int3
les
mov
lcall
push
add
sbb
mov
movsb
popf
imul
xor
cmp
pop
cmp
stc
xchg
inc
mov
outsb
clc
add
aad
cwtl
jecxz
dec
lock
imul
sub
push
aam
cmc
mov
stos
sub
adc
dec
or
test
and
repz
out
mov
mov
adc
mov
clc
nop
lock
jne
xchg
jbe
lods
nop
mov
repnz
lods
popa
pop
xchg
arpl
or
sbb
loope
jne
out
adcl
pop
jmp
insb
arpl
repz
push
arpl
push
mov
sbb
xor
xor
adc
jecxz
subl
ljmp
test
es
cmp
lea
stos
cmp
in
adcb
push
xchg
add
hlt
cmp
pop
dec
sub
inc
es
in
es
lods
mov
dec
frstor
or
mov
sbb
enter
or
mov
and
xor
mov
sub
jl
xlat
sbb
push
pop
sbb
lcall
mov
mov
testb
roll
out
test
enter
rolb
jae
into
test
subb
sub
jo
inc
call
jae
push
ja
jge
jg
arpl
mov
roll
jo
cld
dec
mov
rorl
inc
or
mov
jmp
dec
push
and
fstp
out
cmp
pop
jmp
rclb
aad
pop
push
mov
call
jnp
fs
into
out
sbb
inc
sbbl
push
mov
std
enter
test
mov
les
mov
jo
stos
dec
add
out
mov
xchg
mov
pop
ja
outsb
lods
or
aad
pusha
xor
stc
mov
inc
outsb
mov
sub
repnz
data16
daa
or
xorb
inc
mov
sub
inc
or
ss
mov
sbb
stos
dec
rcll
daa
jbe
and
add
mov
cmpsb
mov
mov
dec
popf
dec
jns
push
lods
xchg
xchg
cmp
in
or
sbb
scas
sbb
aam
xchg
mov
fidivl
divb
ds
ja
cld
dec
push
jmp
push
repnz
xor
mov
ret
cwtl
dec
notl
inc
pusha
mov
xchg
ror
jmp
dec
mov
xor
lock
pusha
rolb
aas
imul
lahf
xchg
filds
mov
outsl
cli
or
or
divl
pop
ljmp
lcall
fidivrs
lock
dec
sbb
cltd
push
sbb
mov
in
mov
into
mov
pop
fsubs
add
xor
arpl
sbb
dec
cld
inc
cmp
ja
mov
sbb
loope
stc
je
dec
inc
cmp
ds
jecxz
mov
pusha
ds
popa
dec
inc
jge
addr16
lds
gs
dec
pop
lahf
aam
mov
xorb
fcmovnbe
rorb
cmp
xorl
out
inc
lret
out
inc
xchg
stos
cmp
aam
fdivr
sub
xchg
std
mov
aaa
mov
aaa
popf
mul
sbb
sub
loope
mov
pop
adc
sub
divl
in
sbbb
pushf
in
xchg
divl
jmp
out
add
and
mov
icebp
fdivrs
ret
shl
cltd
test
in
xchg
dec
push
xchg
lods
mov
xchg
inc
mov
sub
in
lret
dec
ret
push
mov
or
add
imul
iret
push
rclb
js
lods
mov
ljmp
pop
inc
pop
mov
sbb
jecxz
inc
jg
lods
pop
or
mov
movsl
enter
scas
cs
adc
push
cs
ret
mov
leave
movb
dec
test
sub
ret
mov
xor
push
cmp
les
pushf
xchg
jbe
data16
mov
jp
jne
clc
or
out
movl
jne
fwait
pop
iret
lods
mov
cld
mov
add
movsl
mov
mov
push
jge
adc
mov
xchg
test
lahf
adcl
movsb
push
dec
je
pop
inc
jns
fstpt
mov
inc
or
dec
insb
mov
jb
enter
pop
in
mov
adc
subb
ljmp
dec
push
jle
sti
or
adc
addb
or
mov
test
divl
push
push
test
xor
aam
sub
mov
sbb
jl
testb
pop
adc
add
movsb
xor
pop
mov
sub
xchg
std
jbe
sub
xlat
loop
cmc
aad
cltd
jle
mov
push
mov
inc
pushf
add
sbb
jbe
mov
push
inc
repnz
add
mov
stc
or
add
lds
insl
sahf
xor
popa
adc
test
mov
mov
sub
sub
pop
out
xchg
pusha
xchg
cmc
mov
sub
and
cli
lret
fcmovnbe
jbe
cmp
xor
cmpsl
xchg
mov
cs
mov
mov
push
add
mov
out
in
pop
andb
cmp
scas
sub
dec
xchg
gs
pusha
scas
or
test
aad
inc
inc
scas
fmull
sub
insb
ds
sub
xchg
leave
pop
arpl
dec
inc
adc
jmp
sub
rcr
subl
cmp
dec
jae
xlat
repz
imulb
int3
in
pop
jg
push
je
imul
std
and
mov
jl,pn
clc
pop
psraw
ret
or
in
pop
rol
test
gs
sbb
xchg
sahf
mov
sbbl
sub
test
inc
ret
in
daa
bnd
jne
push
mov
fst
call
adc
icebp
out
repnz
movsl
js
insb
and
or
clc
push
mov
lcall
lret
fmulp
cmpsl
movsb
addl
lods
nop
jecxz
mov
fnstsw
mov
sub
xlat
bound
pop
push
mov
sub
cmp
or
xor
sub
sbb
mov
adc
mov
jmp
lret
ljmp
rclb
jae
push
stc
lcall
cmc
dec
in
jp
int
pop
je
and
jb
push
lcall
pop
adc
cmp
and
hlt
rcrl
movl
iret
in
lahf
inc
imul
clc
repnz
push
jl
insl
into
pop
jp
mov
out
loope
das
inc
or
scas
lds
leave
popf
pusha
mov
and
pop
aad
loope
cmpsl
insl
out
adc
sub
mov
mov
xchg
sbb
sbb
xor
cmp
pushf
inc
fldenv
cmc
push
or
negb
add
push
repnz
xlat
pushf
test
ljmp
push
adcl
dec
jp
clc
movsl
add
jno
mov
xchg
jg
orb
dec
jp
jnp
in
rorb
aas
pop
jg
aad
lcall
add
movsb
call
mov
int3
fildl
cmp
pop
jns
lahf
icebp
cmp
xchg
cmpl
push
in
lahf
ja
dec
jmp
cli
sarb
jl
aaa
dec
insl
roll
cmpsb
mov
lret
and
mov
sub
mov
mov
and
cli
adc
xchg
mov
pop
mov
and
sarb
imul
mov
mov
pop
add
dec
pop
dec
sbb
mov
popf
fistl
lret
jmp
jmp
repz
in
call
mov
cmpsl
lret
dec
dec
mov
out
arpl
xchg
xchg
nop
notl
pushf
mov
and
or
jns
or
dec
fadds
jmp
push
mov
nop
mov
jle
lret
jo
jp
mov
imull
push
mov
add
loop
jmp
pop
xchg
add
cmpsb
or
push
and
ret
loope
or
sub
jl
xchg
out
hlt
nop
dec
sbb
mov
dec
pop
movl
adc
test
leave
mov
cwtl
fs
stc
sbb
cmp
mov
fcoml
lahf
dec
lcall
into
pop
testb
mull
xchg
fs
add
clc
cmp
aaa
test
sub
xor
or
les
xor
pop
scas
inc
ds
arpl
xchg
cmp
ror
idivl
xor
lret
xor
mov
xchg
mov
inc
sbb
jb
pushf
xchg
xlat
out
bound
shll
icebp
push
mov
push
jnp
xchg
pop
pop
xor
into
sahf
rorb
push
ret
sbb
mov
in
inc
xchg
inc
mov
mov
fidivs
cmp
out
sub
jb
adc
enter
push
xlat
dec
dec
pop
xor
cmp
fwait
xor
loop
test
daa
fbld
mov
xor
sub
leave
imull
and
roll
inc
outsb
movsl
jmp
nop
ss
testb
add
imul
mov
jno
mov
adc
and
xchg
aam
cmp
popl
sub
in
cwtl
mov
xlat
mov
pop
or
sub
mov
lds
mov
fisubrs
jnp
loopne
xchg
push
xor
pop
and
in
and
xor
ret
test
je
and
movsb
add
int3
jp
sbb
jecxz
xchg
sub
pushf
or
push
push
jb
insb
imul
or
or
xor
data16
inc
xchg
data16
vpavgb
test
neg
or
popf
cwtl
sbb
fwait
test
xchg
xor
loope
lods
popa
aaa
pop
pop
adc
or
push
movsl
out
add
fidivrl
mov
adc
data16
adc
incl
mov
daa
jge
popf
and
pushf
movsl
lods
xchg
push
das
xchg
mov
loopnew
add
sbb
and
jne
cmp
mov
xlat
test
cwtl
pop
xchg
js
fyl2x
xor
jecxz
aas
adc
mov
mov
mov
clc
addr16
sbb
push
xchg
add
mov
in
test
es
cwtl
repz
mov
dec
sbb
inc
lods
and
fadds
mov
mov
xlat
pop
ficoml
gs
dec
stos
enter
xchg
sub
lcall
int3
cmp
jnp
or
adc
ds
ret
div
jecxz
icebp
mov
jae
pop
fstl
mov
or
xchg
add
xchg
and
daa
adc
movsb
popfw
lret
inc
cli
mov
and
testb
and
dec
scas
out
bound
pushf
or
add
xchg
hlt
mov
gs
out
in
in
jno
nop
jmp
cmp
das
ffreep
inc
cmp
push
pop
sub
test
fs
lods
xor
jb
dec
xchg
call
mov
sub
pop
fsubl
rcll
jnp
lods
push
rol
mov
outsl
dec
aas
cmp
and
add
adc
andl
sbb
jg
fisubrl
push
add
inc
cmp
ret
leave
pop
xchg
in
mov
pop
sub
add
inc
enter
xor
lods
cvtpi2ps
jmp
adc
add
cmp
or
mov
popa
add
mov
fnsave
int3
xchg
call
adc
rcrb
aas
lret
mov
push
jp
pop
nop
or
or
jb
movsb
imul
adc
jne
mov
rcrb
repz
inc
cmc
pop
lcall
enter
in
or
dec
shll
jmp
cmp
int
xor
imul
push
mov
jno
mov
jp
xor
scas
sarl
clc
mov
sarb
aas
sbb
fcmovne
movsb
mov
xor
outsb
out
rclb
pop
mov
cmp
inc
sub
pop
out
cmp
or
push
push
mov
sub
adc
jmp
add
or
sahf
pop
lods
lds
idiv
rcr
not
pop
push
test
adc
dec
stc
in
mov
mov
xor
out
lret
addb
or
lods
or
lds
pop
cmp
xchg
movsl
pop
mov
sub
aaa
test
xlat
imul
push
push
ljmp
pop
xchg
rcr
scas
add
adc
icebp
cmp
inc
mov
pop
idiv
pop
fsubs
loope
dec
inc
mov
and
ror
dec
pop
in
aad
lcall
cmp
sahf
push
in
mov
inc
aam
or
rcll
pop
sbb
fldcw
sbb
jp
fs
jo
sub
mov
and
daa
xchg
push
call
or
xchg
pop
add
test
dec
sbb
sub
pop
loope
pop
push
xor
sub
outsl
push
adc
push
or
movsb
loop
jp
call
les
ror
mov
mov
fldenv
push
push
scas
in
filds
mov
cmp
pop
addb
xor
ss
push
pop
insb
add
ljmp
and
mov
lock
add
and
dec
addr16
xchg
cld
js
push
imul
test
rcll
cmp
adc
push
jne
pop
xor
jmp
jle
sub
sti
dec
rol
xchg
cmp
shl
sub
jno
xorb
add
pop
data16
iret
and
pop
cltd
xchg
xor
ss
gs
push
int3
cmpb
aaa
or
out
cmpsl
into
pop
mov
enter
mov
mov
xchg
scas
stc
mov
cmp
cld
clc
ss
xor
pop
add
test
add
test
mov
cmp
mov
pop
pusha
out
mov
andl
fidivrl
inc
pop
les
mov
jle
jb
sub
insb
out
xlat
push
cmpb
mov
aam
fisubrl
mov
outsl
fdivl
push
imul
mov
mov
xchg
xor
pop
stc
mov
dec
decb
inc
movsb
adc
repnz
xor
pop
stc
pop
icebp
out
fstps
pop
cmp
add
and
loop
cli
inc
popw
js
cmp
pop
cmp
mov
jae
xlat
leave
pusha
xchg
xor
adc
sbb
arpl
dec
xchg
or
ret
pusha
rcrl
imul
adc
pushf
jb
jnp
push
pop
rorb
adc
sbb
ljmp
xchg
mov
loop
sbb
add
ja
call
shl
sbb
cmpsl
pop
mov
cmpsb
insl
sahf
add
pop
data16
xchg
jg
fistpl
insl
xor
or
popf
loope
and
imull
mov
fwait
bound
and
inc
mov
mov
iret
dec
mov
push
sbb
frstor
push
xor
stos
fcomps
lea
movsb
scas
add
mov
loopne
ja
mov
push
scas
jl
adc
loop
push
sbb
add
or
sbb
fidivl
push
pop
ficoml
out
pop
jle
scas
int3
cmp
xor
and
inc
out
mov
out
lods
inc
dec
orl
or
mov
fistl
sub
repnz
notl
mov
mov
das
or
pushf
push
adc
push
mov
and
push
jle
pushl
scas
add
mov
imul
inc
pusha
sub
inc
adc
out
sub
outsb
js
je
in
adc
inc
insl
jecxz
mov
jecxz
daa
inc
out
data16
movsb
orl
pop
mov
sub
fwait
pop
xchg
lret
aad
cs
in
pop
adc
push
cltd
fwait
adcb
push
int
clc
cmp
fcoml
xor
xchg
mov
fadd
dec
dec
negb
and
mov
cltd
xor
test
aas
xor
sub
std
add
out
ficomps
stc
add
fsubr
pushf
xor
pop
scas
adc
pop
cmp
jmp
mov
rep
xorb
mov
lea
bound
inc
loopne
jecxz
pop
inc
testb
fnsave
data16
mov
mov
imul
pop
cwtl
mov
inc
and
pop
popa
sbb
ljmp
arpl
in
gs
xchg
in
jecxz
or
std
cmc
cmp
in
out
or
dec
or
ficoms
jo
xchg
or
orb
enter
lock
mov
sub
pop
out
aad
xchg
std
imul
cwtl
ret
sub
mov
cs
arpl
js
push
cmpsb
out
dec
mov
daa
mov
scas
lods
jbe
inc
xorl
lcall
lods
pop
loop
jecxz
or
lret
bound
cmc
jge
pop
push
outsb
int3
and
ljmp
push
nop
xor
mov
mov
clc
std
and
scas
mov
adc
cmc
fld
sbb
and
lods
aam
pop
mov
mov
psubq
or
adc
fists
bound
or
push
and
dec
sti
push
in
shrl
mov
inc
jg
inc
enter
pop
leave
jle
cmpsb
adc
stos
jp
mov
push
sbb
bound
es
mov
jo
xchg
pusha
push
inc
pusha
fdiv
or
jo
push
jmp
cld
cmpsb
mov
push
xchg
mov
push
mov
iret
scas
aaa
jbe
scas
jns
push
lcall
sub
cmc
fwait
scas
test
cmpb
enter
xor
push
shrl
xchg
ret
sbb
nop
jp
mov
lods
jmp
lret
pop
mov
dec
je
sub
or
movsb
xchg
in
mov
cmp
das
icebp
cmc
pop
data16
jp
push
pop
cli
movsl
adc
push
outsb
jmp
mov
cmp
hlt
clc
int
je
pop
cld
ret
pop
js
faddl
test
js
aaa
and
jmp
out
or
push
orb
repz
mov
sbb
push
jmp
cli
sub
rcr
fistl
addl
fnstenv
mov
or
les
mov
je
and
fnstsw
adc
xorb
sti
mov
loop
nopl
mov
mov
outsl
cmp
inc
icebp
pop
jne
or
inc
mov
push
cmp
shrb
push
loope
adc
sub
jbe
nop
insl
lret
adc
neg
dec
scas
jnp
adcb
adc
out
dec
dec
pop
fcomp
xchg
mov
inc
nop
add
jl
or
and
push
hlt
arpl
rcrl
stc
test
pop
jge
add
and
imul
data16
cmp
pushl
jmp
insb
or
inc
insl
cmpsl
dec
ret
mov
lahf
or
pop
daa
xchg
and
cmc
aam
pop
loope
xchg
scas
leave
lret
cltd
lcall
insb
pop
mov
fisubrl
fistpl
xchg
jo
es
or
jo
addr16
pop
stos
sub
notl
leave
jns
mov
mov
jne
jns
negl
movsb
mov
jmp
sbb
fcmove
or
in
inc
jne
scas
add
push
mov
test
ss
sub
or
lock
push
and
inc
dec
push
insl
dec
push
dec
sahf
mov
push
add
out
pop
stc
sbb
testl
leave
ds
shl
mov
inc
add
js
fstpt
add
adc
cli
mov
mov
jl
pop
pushf
test
scas
mov
inc
jbe
test
int3
add
sub
push
or
xchg
sahf
pop
jns
in
dec
pushf
sti
mov
or
cli
add
mov
xor
inc
fiaddl
repz
dec
and
stc
pusha
clc
sbbb
sbb
popf
ss
in
push
sbb
ja
lea
mov
jo
xor
mov
cs
inc
inc
or
xchg
mov
xor
imul
jo
aam
lods
scas
push
aad
cmpb
and
scas
mov
cmpsl
sub
stos
lret
iret
xchg
and
pusha
push
pushf
sub
dec
movsl
mov
shrb
lds
scas
xchg
push
pop
rcrb
or
or
jge
cltd
outsb
dec
loop
xor
cld
lret
jbe
sbb
filds
lahf
sar
or
sar
lock
xchg
pop
or
in
or
ret
sarl
pop
test
jb
stos
rcrb
stc
pop
cmp
pop
addb
lea
out
iret
cmc
je
sbb
fiadds
sbb
inc
divb
xchg
ljmp
and
shl
cmp
mov
add
add
pop
dec
iret
imul
sbb
rcll
int3
xor
mov
sbb
out
inc
sbb
adc
cwtl
push
dec
add
out
xor
data16
lcall
xchg
adc
sysret
je
push
pop
jle
push
push
notl
arpl
aam
jecxz
outsb
rorb
mov
xchg
and
dec
ja
fcoms
jmp
popa
std
shrl
pop
daa
ret
sahf
out
jle
or
insb
cmpsl
or
or
push
mov
push
jns,pn
push
mov
jle
mov
scas
lahf
xchg
and
lds
xchg
pop
js
pusha
int3
cmp
loope
fidivrs
pop
mov
mov
test
js
lahf
sbb
inc
adc
lcall
mov
or
or
sti
sub
jl
sub
popa
dec
sahf
mov
lcall
sarb
fwait
pop
gs
jae
pop
aaa
xlat
mov
or
and
mov
jmp
cmc
sub
adc
adc
and
lahf
mov
sub
jbe
mov
decb
das
ret
mov
loopne
and
xchg
enter
jbe
in
push
dec
and
add
xor
sbb
cmpsl
jg
ss
inc
jns
sbbb
and
dec
xor
sbb
dec
and
push
in
mov
push
aaa
inc
sbb
xchg
popa
out
scas
add
stos
cmp
push
jno
scas
loope
gs
out
je
inc
rorb
sti
push
jnp
inc
outsb
push
ljmp
sub
fs
xchg
in
adc
or
xchg
dec
adc
inc
inc
mov
and
and
xchg
pop
das
sub
jle
xchg
mov
cld
pop
adc
mov
aad
movsb
fdivp
dec
cmp
loopne
jmp
sub
push
andb
add
std
push
cwtl
fildl
dec
ret
ds
pushf
sub
aad
inc
mov
out
into
mov
push
pop
cli
push
pop
mov
cmc
call
shrl
fcoms
fs
das
andl
dec
adc
sti
mov
daa
cmp
or
rol
sub
mov
pop
push
dec
sbb
aaa
mov
std
add
faddl
aam
leave
sub
js
inc
inc
mov
jo
jmp
inc
rorl
int3
dec
push
inc
leave
fildl
je
mov
insl
cmpsl
jae
daa
cwtl
jg
scas
ja
xchg
out
fbstp
icebp
jbe
jbe
mov
outsb
pop
and
into
gs
xchg
mov
and
or
cld
rclb
lret
cmp
jb
js
mov
pop
lock
jne
scas
inc
inc
roll
les
clc
das
scas
dec
sub
pop
ja
fwait
xor
push
mov
push
scas
cmp
lods
nop
dec
ret
cmp
shrb
pop
inc
mov
cli
jecxz
adc
sbb
xor
clc
test
popl
movsb
std
jnp
aas
push
push
cmp
add
sti
aad
mov
mov
add
imul
out
aad
sbb
jno
sahf
cmpsl
lods
lods
mov
push
xor
fcoml
rorb
inc
loopne
loope
mov
out
sub
push
sub
or
xchg
scas
pop
sbb
loop
das
fnstenv
insl
inc
mov
scas
repz
fucomi
mov
je
lock
movsb
stos
xchg
dec
ja
push
sub
and
mov
rolb
dec
ret
data16
jg
or
mov
push
scas
pop
ret
jmp
push
jne
xchg
mov
rorl
popa
aaa
sub
push
roll
imul
mov
push
shl
popl
mov
out
sahf
mov
fstpt
daa
xchg
jmp
mov
data16
std
dec
mov
test
shl
xor
rolb
rclb
scas
iret
les
repnz
pop
mov
fistl
add
sub
idivb
and
les
icebp
nop
sub
and
add
ljmp
sub
fisttpll
push
mov
push
xchg
jae
lock
mov
and
aas
or
popf
mov
cmp
fcmovb
and
stc
andl
sbb
pop
jmp
sti
push
xor
jmp
lock
pushl
mov
dec
ja
xchg
in
add
dec
ret
outsl
in
lock
imull
ret
lods
das
std
push
loopne
fdivs
dec
outsl
scas
cmpsb
push
cmpsl
pop
shl
xchg
int
jmp
mov
jnp
xor
inc
je
lret
xchg
stos
scas
stos
cli
and
sub
insb
or
mov
pop
push
fwait
xchg
xor
mov
xlat
push
js
sarl
out
jae
pop
xor
ja
or
push
addb
push
mov
in
dec
sub
repz
popf
nop
jo
dec
sbb
mov
lock
sub
loopne
pop
movsl
add
pusha
repnz
mov
pop
jge
test
rcrb
dec
cmp
out
sbb
ds
int
jo
aad
pop
sbb
pop
adc
add
mov
inc
js
jo
jns
mov
lock
in
sahf
clc
adc
std
in
cmc
out
aaa
mov
in
cld
inc
jmp
rcrl
adc
icebp
pop
mov
decl
jns
inc
inc
sbb
pop
inc
mov
mov
inc
jl
rolb
xchg
in
out
je
inc
clc
add
js
shll
lea
jo
loopne
loopne
mov
sub
shlb
add
int
add
fs
insb
lods
xchg
cmp
jne
imul
pop
jp
jecxz
imulb
jb
mov
fsubrs
push
dec
aaa
adc
je
popf
iret
xor
push
rorb
xorb
mov
xor
jecxz
scas
fsubl
bt
outsl
mov
movb
jo
out
pop
mov
sub
jbe
cs
inc
xor
xlat
dec
push
add
in
or
mov
adc
rolb
push
mov
sub
cwtl
adc
or
outsl
adc
fcmovne
gs
sub
jae
test
add
stos
pop
cmc
arpl
lods
push
les
lret
out
inc
cld
or
mov
mov
or
pop
and
mov
add
dec
mov
mov
jns
bound
jb
ds
ret
or
cmpsl
adc
push
daa
adc
imul
outsl
xor
and
std
jge
test
inc
ss
mov
lahf
xor
inc
adc
pop
enter
fcoms
xchg
imul
fsubrp
fnsave
xchg
mov
add
mov
and
jb
dec
xchg
clc
repnz
cmp
andb
aad
stos
outsl
ret
mov
dec
pop
mov
daa
jb
jns
mov
fsubr
mov
push
in
rcrl
dec
adc
lods
jge
pop
mov
jmp
fwait
push
mov
pop
lahf
clc
xlat
push
add
pushf
aam
mov
sub
cmc
fcompl
adc
cmpsl
xor
pop
xor
adc
sbb
fisttps
lods
ja
ret
mov
inc
aaa
movsl
and
or
lahf
dec
ds
or
jae
test
cld
mov
lcall
pop
cli
dec
jge
cmp
mov
mov
push
mov
sahf
les
adc
mov
lods
mov
out
sub
dec
cltd
into
mov
cld
jl
push
xor
and
lcall
xchg
lret
fcmovbe
loope
dec
incb
cmp
inc
lret
jp
mov
xchg
xchg
sbb
inc
rorb
push
sub
xor
dec
jmp
js
and
mov
mov
mov
rclb
std
enter
into
add
repnz
in
mov
cmc
loop
dec
cmc
fdivrl
xchg
movsb
cmpb
mov
jmp
mov
xor
xchg
adc
idiv
and
popf
mov
sub
jbe
push
mov
jbe
xor
add
cmp
mov
lock
jmp
adc
push
jae
test
repnz
pusha
sub
adc
sbb
daa
mov
mov
icebp
adc
or
jmp
cmpsl
push
repz
aas
mov
xchg
lahf
sub
or
test
inc
cmp
shr
test
hlt
sarb
jl
addr16
stos
insb
data16
mov
mov
lret
adc
test
mov
mov
iret
and
leave
dec
cmp
out
shr
addb
icebp
ss
rorl
mov
cmp
adc
adc
cltd
pop
fs
iret
ljmp
cmpsb
jno
pop
into
lock
sahf
mov
jmp
cmpsl
sbb
bound
push
push
aas
cld
in
inc
or
mov
gs
fistpll
outsl
jmp
pushl
negl
lods
test
sahf
addl
sti
sbb
or
cmpsl
jmp
movsl
out
mov
out
inc
clc
mov
xchg
pop
dec
jp
xchg
hlt
ffree
cmp
pop
xlat
jnp
test
jmp
or
add
push
mov
and
pop
jb
ljmp
jno
aad
subb
push
or
push
inc
out
mov
ljmp
pop
bound
xchg
mov
mov
sub
sti
in
mov
aam
scas
ret
dec
and
arpl
xchg
xor
fs
and
imul
mov
sub
xor
jl
shll
xor
push
in
icebp
jecxz
add
xchg
stc
test
aad
pop
pop
sahf
mov
push
in
push
xchg
lret
dec
jecxz
cmp
cs
mov
outsl
push
xchg
and
inc
mov
aam
aas
cmp
mov
mov
dec
ja
sarb
or
mov
xchg
out
cld
cmpsb
sbb
cwtl
test
aam
add
push
div
enter
xor
add
scas
dec
sbb
jno
jns
dec
loopne
pushf
xor
jl
inc
dec
adc
mov
lds
push
cmp
push
mov
mov
in
jae
ljmp
mov
pushf
dec
stc
neg
hlt
data16
das
lods
dec
xchg
inc
push
je
mov
push
cmp
jbe
out
push
push
mov
xchg
dec
adc
push
mov
pop
popa
mov
jle
adc
mov
add
mov
mov
push
ljmp
leave
adcl
adc
jle
jbe
cwtl
bnd
add
sbb
hlt
pop
mov
repnz
movsl
push
dec
daa
mov
push
aas
push
rorb
inc
bound
and
and
aaa
sbb
mov
daa
sub
dec
xor
mov
hlt
push
mov
jp
jb
jl
sub
clc
rcll
adc
jbe
or
dec
lret
and
jp
cmpsb
int3
es
dec
mov
xchg
pushf
je
jl
xchg
pop
xchg
in
mov
inc
inc
arpl
cmp
and
xlat
and
and
pusha
and
data16
inc
add
ret
les
stos
clc
enter
inc
in
sub
xor
aas
imul
cmp
push
mov
pop
movsl
pop
in
mov
out
sub
push
pop
cmpsb
stc
out
icebp
cld
xor
ljmp
mull
aas
mov
sub
or
cmc
out
test
test
sti
fcomps
aaa
push
mov
sub
movsl
adc
mov
jp
in
and
mov
pusha
sahf
not
mov
xchg
mov
xor
sub
mov
dec
lret
out
sbb
movsb
cmp
nop
sahf
icebp
mov
data16
pop
ja
add
jecxz
and
dec
mov
inc
cmp
loopnew
xor
sbb
jle
cmpsb
iret
cld
jp
cli
dec
stos
mov
cmp
jnp
pop
xchg
inc
xchg
or
in
pop
add
fs
pop
adc
xor
dec
mov
repz
dec
movsl
stos
pushl
jge
xchg
lcall
out
out
xlat
mov
jns
clc
rcrl
sub
aaa
jnp
fdivrs
sbb
push
cmp
jle
mov
push
movsl
inc
sub
push
jo
repnz
int
or
ljmp
arpl
jl
jnp
jnp
ljmp
add
cmpsb
or
mov
in
jae
out
and
mov
pextrw
pop
push
lea
ja
loope
aaa
nop
jns
add
js
mov
fadds
cltd
adc
aam
and
das
icebp
insb
ret
xlat
das
cmp
leave
movsb
xchg
pop
js
fs
aas
pop
movsb
or
add
aad
dec
mov
cmp
or
das
dec
mov
outsb
mov
jl
hlt
iret
or
cmpsb
jns
test
pop
mov
and
sar
mov
inc
sahf
or
out
mov
mov
aam
jne
mov
push
and
xor
cmp
jl
pop
cmp
and
dec
dec
push
mov
jnp
push
cmp
jae
dec
scas
mov
push
dec
mov
outsb
testb
jl
push
push
sub
add
mov
pop
adc
add
icebp
xchg
push
loopne
xor
push
out
sti
sub
push
ds
mov
int
inc
pop
test
in
test
pop
inc
pop
lock
data16
loop
lahf
and
pop
shr
fnsave
clc
stos
or
fmuls
add
jne
dec
aas
jnp
mov
sub
sub
mov
aad
xor
sbb
cmpsb
repnz
mov
pop
and
and
push
pusha
and
stc
imul
cs
push
xor
ja
mov
push
nop
xor
add
lods
lods
icebp
enter
das
mov
lret
xor
mov
push
push
jo
in
xorb
jbe
fwait
sti
mov
dec
fucomip
popf
pop
push
cmp
xchg
or
in
std
stos
pop
lea
pop
mov
out
mov
test
adc
subl
sub
jmp
inc
mov
inc
or
out
das
test
movsb
inc
cmp
data16
inc
in
aam
fistps
fdivl
cmp
aam
pcmpeqd
addr16
out
pop
scas
orl
shlb
mov
pop
frstor
scas
sarb
sub
sub
call
adc
and
sbb
or
cmp
add
push
mov
das
aas
or
pop
shlb
lock
push
cltd
mov
mov
jmp
jne
mov
fsubrl
xlat
sub
loop
and
mov
insb
iret
imul
mov
mov
jecxz
mov
mov
pusha
sbb
dec
mov
jge
or
adc
and
push
adc
push
outsb
and
in
out
test
shlb
scas
iret
aad
pop
ret
mov
addb
xchg
lret
orl
sarb
sahf
ficompl
inc
push
ss
sub
test
lahf
mov
cmp
pushf
in
cltd
mov
pop
sub
sub
iretw
inc
cmp
push
int
xchg
cwtl
arpl
add
fidivl
pop
push
inc
in
mov
or
inc
mov
jb
push
jge
sub
stos
pop
pushf
cltd
ret
dec
xchg
xchg
lock
or
sub
dec
mov
inc
sub
add
mov
int
mov
jne
cmp
jge
or
aaa
xor
dec
outsb
push
movsl
xlat
jp
sbb
cmp
cld
cmp
pop
adc
lods
fdivl
push
push
adc
inc
fwait
ljmp
pop
mov
mov
or
loop
arpl
ret
sub
push
push
test
pop
test
and
sub
pop
mov
lock
mov
dec
jg
inc
cltd
and
or
les
add
out
js
push
sub
repnz
dec
fisubrl
das
dec
sbbl
sub
sbb
mov
repnz
push
push
lret
sbb
shl
dec
push
daa
push
into
add
push
xor
inc
mov
fstl
imul
out
cmp
lods
mov
mov
sbb
sahf
fldcw
fistl
push
shll
xor
repnz
mov
bnd
arpl
into
scas
or
pop
mov
mov
jecxz
dec
pop
arpl
outsb
pop
jno
cld
aam
in
pusha
inc
sarb
mov
push
les
lock
adc
stos
mov
fnstsw
cmp
ds
in
daa
and
push
xchg
jno
and
pushf
ret
mov
pop
addr16
and
dec
popf
pop
xchg
sbb
pop
shlb
ret
mov
and
pop
inc
pushf
push
lods
inc
int3
in
nop
in
sbb
out
out
or
pop
pop
dec
add
cmp
push
add
cs
sub
fwait
orb
pop
test
sarl
aas
or
mov
xor
in
in
popf
lea
jmp
add
push
mov
mov
repz
jecxz
cltd
xchg
mov
or
scas
pop
repz
xchg
jecxz
into
pop
adc
mov
movsb
pushf
inc
sbbb
je
lret
or
mov
jbe
adcl
or
push
mov
fsubrl
pop
movsl
xchg
add
cmpl
jle
lret
mov
mov
dec
out
out
jb
mov
fbld
inc
push
sbb
cmc
and
adc
sbb
test
repnz
and
lock
aad
pop
jecxz
in
dec
mov
scas
mov
sbb
mov
in
mov
xor
add
imul
clc
or
adc
movsl
out
or
bound
cmpsl
rorb
xlat
popf
in
ss
add
lea
mov
xlat
pop
inc
push
stos
call
insl
push
out
imulb
incb
es
and
xor
ds
cmp
loop
cmc
mov
popa
fs
mov
xchg
adc
mov
jecxz
hlt
cmp
ja
dec
sbb
and
daa
add
mov
out
add
js
adc
dec
int
nop
fwait
sbb
jmp
sbb
enter
mov
scas
add
fists
popf
mov
and
sahf
nop
push
dec
in
sub
push
push
and
mov
pop
jmp
scas
in
adc
out
xchg
xchg
and
in
pop
sbb
call
lcall
repnz
mov
outsb
push
int3
jo
fnstenv
test
insb
js
mov
gs
mov
shll
sbb
mov
into
fidivs
insl
xchg
paddusb
sub
jo
rcrb
xchg
sub
cmp
add
rorb
pushf
stc
mov
iret
pop
adc
lret
cmp
outsl
rclb
aaa
cs
inc
fistpll
xchg
jmp
jge
addr16
pop
jnp
aaa
pop
test
push
xorb
mov
in
sbb
les
dec
sbb
arpl
add
iret
jns
mov
mov
cld
dec
adc
nop
sub
and
nop
lds
popa
out
out
inc
aas
inc
das
mov
clc
push
jmp
fdiv
pop
outsl
aas
jns
push
leave
push
iret
push
fcompl
adc
sti
pop
pushf
mov
xchg
cltd
mov
cmpsl
pop
xor
repz
jle
cmp
inc
push
push
inc
pop
jno
ja
mov
and
adc
jp
arpl
mov
insb
ds
out
or
leave
jmp
in
es
adc
js
out
pop
jecxz
xchg
int3
shr
sbb
std
push
jecxz
lahf
inc
mov
mov
shlb
pop
ljmp
and
out
call
or
mov
sbb
xchg
jbe
roll
sahf
nop
add
xor
sbb
test
cli
cmpsl
testb
add
pop
mov
jl
in
mov
sarb
and
pusha
js
sbb
or
jl
inc
cmp
icebp
pop
cwtl
pop
and
mov
push
adc
outsb
cmpl
mov
das
jmp
out
pop
pop
clc
xchg
dec
pop
arpl
adc
ret
imul
sbb
inc
insl
adc
js
mov
in
jb
push
cmp
cltd
mov
test
clc
push
inc
sahf
jne
jbe
cltd
push
jne
dec
sbb
ds
shrl
jl
mov
add
mov
cmp
add
mov
pusha
and
fnstsw
repnz
xor
sbbb
adc
cltd
cmp
scas
dec
shlb
push
sbb
movl
xchg
mov
mov
ljmp
mov
idivb
xchg
and
out
mov
test
fisttps
cmova
xchg
dec
sbb
mov
xorb
mov
fwait
lret
movsb
mov
into
cmp
mov
mov
orb
adc
jp
add
pop
and
stos
adc
jno
cmp
into
inc
or
mov
scas
or
or
mov
test
inc
push
aaa
and
xchg
pop
mov
enter
ret
mov
sbb
mov
xorb
push
and
jnp
or
inc
mov
jg
mov
test
push
repnz
push
xchg
mov
bound
out
pop
fstps
sbb
pop
std
xchg
rcl
setno
mov
inc
ljmp
and
fdivr
arpl
adcl
xlat
pop
les
mov
pop
xor
dec
outsb
mov
shll
negl
lods
sbb
loope
and
mov
shll
pop
xor
movsb
sbb
outsl
and
into
mov
fwait
sub
mov
scas
push
inc
push
enter
aam
int
jns
aas
aas
shlb
inc
mov
es
cmp
sbbl
sub
inc
inc
add
inc
sub
out
js
mov
ss
loope
mov
jnp
mov
push
lcall
pop
test
pop
and
vmovaps
or
jl
popf
nop
ficomps
clc
pop
cmp
xor
pop
iret
adc
xlat
fdivr
je
pmaxub
rol
mov
out
shrb
ficomps
jns
add
mov
sbb
lock
mov
popf
das
in
sub
mov
dec
dec
sbb
jg
inc
and
lods
outsl
and
lret
mov
jl
xor
je
mov
jb
push
sbb
dec
cmp
mov
aas
mov
push
imul
pusha
stos
incb
cmpsb
xchg
jmp
and
ja
inc
and
jecxz
mov
mov
sub
jge
sub
pop
test
mov
mov
shll
or
sub
push
jne
shlb
dec
add
test
sub
add
adc
pop
fisubs
add
jecxz
divl
pop
cs
sbb
mov
loopne
icebp
in
sub
movsb
aaa
loop
stc
addr16
nop
cli
cs
and
pop
jmp
lahf
mov
cmpsl
aas
inc
pop
shlb
push
sbb
sub
push
or
test
jecxz
adc
jl
add
mov
icebp
dec
push
bound
jecxz
mov
push
sbb
push
fistl
cmp
or
decb
js
jp
sbb
mov
add
fsubrp
test
aaa
dec
fists
mov
sub
int
xor
sahf
insb
inc
inc
arpl
scas
or
das
popf
xchg
rol
sub
fnstcw
or
aad
inc
push
sbb
loope
jbe
pop
aam
addr16
sbb
xor
lahf
ss
stos
push
xor
mov
mov
or
out
inc
fxch
repnz
inc
mov
mov
mov
jb
jae
iret
pop
xchg
in
ret
mov
mov
xor
scas
fstps
sbb
sahf
jmp
jl
jge
ss
pop
hlt
test
push
xor
push
mov
lock
cs
mov
dec
idivl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
inc
popf
jmp
int
aas
mov
jp
jnp
into
sub
cmc
iret
test
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
mov
and
cwtl
mov
mov
adc
out
pop
dec
outsb
iret
xchg
loop
out
cmpsb
adc
fldt
cli
jmp
scas
adc
cltd
rclb
jno
into
sub
cmc
mov
sahf
cmp
daa
jl
fwait
mov
ja
xchg
sub
in
mov
dec
aas
jmp
mov
inc
test
jno
ss
inc
jge
int
push
iret
daa
addr16
fwait
mov
ja
xchg
addb
out
add
or
inc
pushf
aad
mov
fdivr
test
jne
jno
stos
and
fucomp
out
scas
cmp
daa
aas
mov
test
popa
ds
lret
jnp
into
sub
testb
and
aas
mov
test
sub
cmc
popl
into
sub
testl
mov
test
and
mov
popa
mov
jns
into
lods
aas
mov
test
sub
cmc
popl
into
sub
cmc
jno
lret
jnp
int
aas
mov
int3
jnp
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
stos
push
dec
mov
mov
sub
icebp
popl
lcall
movsl
fwait
mov
or
jnp
lds
cmc
push
orl
mov
jnp
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
cmc
popl
into
sub
lcall
fisubrs
test
jp
pop
cld
and
xlat
stos
mov
xlat
aam
and
inc
mov
in
adc
jg
sbb
fcmovbe
loopne
dec
stos
adc
mov
push
arpl
xor
pop
add
daa
rcr
sub
cli
jle
mov
outsb
icebp
or
mov
add
and
push
pop
sub
add
sub
push
jno
add
out
shlb
aaa
add
inc
cmp
and
jge
hlt
jp
loope
mov
mov
and
incl
aam
je
cmp
in
mov
mov
cmp
xor
hlt
inc
add
in
cmp
cld
mov
pop
jae
sbb
mov
lahf
stos
adcb
sbb
mov
jae
out
inc
sbb
jne
mov
xchg
icebp
ficomps
clc
cs
adc
shll
js
cmp
mov
fwait
cmp
xor
mov
xor
stc
shl
xchg
sbb
loop
dec
bound
cmpsl
xor
int3
adc
outsl
outsl
cmp
mov
dec
mov
fnstenv
cmp
pushf
jge
mov
add
adc
ljmp
cmpsb
and
dec
movsb
or
push
push
mov
and
inc
rorb
sub
add
out
fs
ss
cmc
lds
mov
subl
pop
mov
in
bswap
ds
sbb
arpl
mov
add
xor
cmc
mov
adc
popl
push
ds
aam
pop
add
in
dec
jns
outsl
and
in
adc
push
out
dec
dec
je
mov
mov
mov
sbb
cld
inc
lret
add
push
sti
jae
inc
lret
cmc
les
insl
addr16
dec
out
add
sub
and
lcall
int3
mov
daa
addr16
or
cmpsl
xchg
dec
in
icebp
nop
dec
dec
inc
pop
repnz
stos
sbb
and
aaa
mov
mov
icebp
push
lahf
fmuls
add
call
shll
adc
lret
xor
mov
outsl
mov
pop
stos
pop
push
insl
scas
insl
xor
or
movb
idivl
shrl
adc
sub
xchg
adc
in
mov
lea
pop
adc
and
std
and
jecxz
aam
lock
outsb
pop
lahf
push
add
jle
jg
out
push
out
mov
and
leave
vminps
mov
mov
sub
push
cs
decb
and
push
std
test
jnp
lret
scas
jl
and
xorl
lret
pusha
loope
rcll
pop
push
xchg
mov
jecxz
cmpsl
mov
in
xchg
cmp
sub
pop
out
decb
mov
lret
pushf
jg
out
add
cwtl
lret
dec
and
pop
test
xor
cli
cmp
mov
adcb
inc
fcmovne
aad
xchg
loope
add
sbb
inc
xchg
dec
jne
fistpl
gs
jle
or
gs
shlb
js
push
test
jg
jg
and
adc
pop
sub
lea
mov
push
aaa
lods
xchg
ljmp
popf
push
xor
sbb
cmp
in
ret
das
imul
or
cmp
xor
aam
pop
ret
push
out
in
push
ljmp
dec
repz
adc
push
bound
enter
pop
fwait
xchg
sub
pop
movsl
push
xor
lods
sub
outsb
loope
cwtl
cs
dec
fistpl
lret
ficomps
or
outsb
inc
or
mov
imul
roll
lahf
fwait
incl
mov
fsubrp
out
aad
mov
test
adc
pop
lods
test
popa
ss
fwait
scas
test
xor
fisubrl
pop
pop
push
mov
inc
jg
repnz
adc
mov
sub
lret
aad
push
stos
dec
xor
sbb
pop
cwtl
jbe
fucomi
fwait
mov
sub
push
arpl
push
mov
in
loope
and
and
add
jae
jmp
mov
mov
roll
mov
inc
sub
mov
sbb
pop
or
cmpsb
jns
aaa
mov
jnp
inc
or
cltd
cmp
xor
ret
fidivl
lds
sub
test
mov
cmp
aad
into
test
push
fisttpl
or
sbb
ss
and
jnp
test
cwtl
xor
incb
xor
add
cld
pop
push
popf
clc
pop
aas
idivb
dec
test
dec
ret
in
cmp
pushf
test
cmpsb
mov
and
insl
xchg
adc
lret
ret
jae
sub
mov
nop
xor
into
cmp
add
mov
in
dec
out
gs
cmp
pop
movsb
call
mov
jbe
fwait
push
cmp
mov
pop
dec
test
fxam
xchg
or
call
fwait
inc
int3
scas
pop
sbb
mov
sub
pop
cld
jge
add
movl
movsl
sub
in
pop
jmp
cld
or
xchg
int3
adcl
andl
xchg
jl
jle
les
pop
sub
mov
or
xor
mov
ret
jl
fisubl
movsl
shll
lret
mov
pop
out
sub
mov
ss
and
mov
rcrl
test
xchg
and
cmpsl
xlat
insl
movsl
dec
scas
dec
sbb
lock
mov
andb
dec
insl
sbb
ja
pop
icebp
aam
ljmp
inc
sbb
js
xor
out
cmpsb
loop
dec
int
adc
cmc
dec
inc
mul
mov
inc
push
jbe
shl
xlat
stos
push
fistpll
jae
cltd
fcmovnb
mov
adc
jns
aad
ds
pop
cwtl
mov
pop
or
inc
xchg
cli
mov
cs
jmp
inc
xchg
inc
mov
clc
lods
into
jnp
jmp
and
pop
add
ds
dec
fisubrs
loop
outsl
mov
movsb
add
and
mov
cmp
lock
daa
pop
movsl
popf
sbb
out
dec
push
cmpl
and
gs
cmp
push
sbb
stos
dec
jno
shlb
pop
ret
push
std
into
mov
push
repnz
and
mov
movsb
push
cmc
jl
or
xlat
pop
nop
mov
lcall
and
loope
adc
jg
xor
daa
xor
xorb
pop
adc
mov
popf
inc
test
mov
pop
popf
cs
pop
sub
pop
xor
repnz
mov
jne
jg
add
in
aas
push
pusha
ficompl
mov
jns
push
lock
mov
sbb
inc
mov
mov
fs
jne
out
ret
push
jnp
xorb
stc
cmpsl
cmp
gs
in
adc
dec
dec
lock
sbb
test
pop
jbe
pusha
lods
in
xor
test
xchg
or
outsl
add
je
push
fiadds
or
add
push
cmp
test
mov
inc
lcall
mov
cmp
sbb
jbe
jp
pop
push
ljmp
in
mov
popf
pop
movsl
scas
xchg
jo
cltd
pop
outsb
cmc
clc
jecxz
addb
rcr
push
icebp
mov
xchg
je
mov
sub
cltd
or
xor
sbb
add
add
imul
shr
push
in
sub
mov
mov
dec
gs
das
orb
enter
icebp
mov
ljmp
out
orb
adc
sub
pop
inc
jns
sahf
xchg
pop
fwait
dec
and
dec
and
divl
or
push
push
jno
int
popf
mov
dec
fildl
rclb
mov
dec
add
out
bound
mov
lcall
sub
mulb
je
pop
dec
fcmovnbe
in
inc
ret
int3
mov
xor
lahf
adc
pop
shll
lret
je
inc
jg
mov
add
xor
ja
imul
fistps
loopne
aam
inc
cltd
cmc
popf
lret
stos
mov
mov
pusha
repnz
movsl
xchg
lds
push
inc
mov
shr
sbb
inc
movsb
dec
cmp
das
add
cmp
adc
daa
in
aaa
addr16
aas
xor
mov
pop
xor
lcall
cs
ror
gs
adc
inc
dec
mov
sbb
fdivs
xor
into
xor
or
outsl
mov
sub
inc
or
or
addl
shll
add
jno
iret
or
std
popa
push
pusha
in
lret
mov
out
mov
mov
mov
jno
pop
adc
xor
pop
dec
inc
lea
mov
xchg
loopne
incl
shlb
movsb
jnp
cmp
push
jae
cmpsb
dec
fdivs
inc
das
fdivrl
iret
push
mov
repz
dec
or
stos
ret
inc
xchg
mov
xchg
push
sbb
and
outsw
sub
xor
notl
jle
test
in
dec
add
mov
xor
enter
lea
mov
fs
jnp
pop
inc
nop
fs
aad
dec
loope
in
cmp
stos
ret
aam
jle
push
scas
test
mov
arpl
repz
xor
cltd
xlat
ss
mov
sti
lods
jg
in
mov
popf
add
cli
push
imul
ret
and
sub
pop
rcrb
insl
adc
ss
pop
jge
das
sub
pushf
lods
call
hlt
ret
test
cwtl
test
in
pop
repnz
xchg
jp
mov
xor
scas
mov
sbb
ljmp
aam
leave
insb
daa
jbe
mov
mov
dec
int3
sbb
and
pop
mov
add
or
sub
cmpsl
mov
sbb
or
sbb
test
push
or
js
jno
icebp
push
push
xor
sbb
imul
cmp
jg
aaa
aas
fisttps
mov
cmp
jmp
loopne
mov
pusha
ret
and
cmc
pop
xor
movsl
stos
ret
dec
out
outsl
sbb
sub
inc
inc
imul
shr
jno
xlat
imul
mov
scas
mov
cmpsl
gs
adc
inc
decb
shl
inc
scas
push
cmp
cmc
jbe
outsb
test
jbe
pop
or
jo
push
sarl
jbe
insb
jb
cltd
jae
pop
dec
mov
in
xor
jae
lds
xor
mov
pop
aad
ja
pop
push
adc
xor
cmpsb
pop
sbb
outsl
lds
bound
popa
push
dec
ret
push
enter
sar
iret
mov
movsb
lods
ret
or
pop
inc
sub
lods
iret
shll
sbb
jge
pop
iret
cmp
mov
push
adc
and
andb
filds
xchg
scas
mov
stos
leave
or
inc
fucomi
inc
shl
push
jle
mov
lods
movaps
cmpsb
stc
mov
cmp
cmpsl
in
gs
cmp
mov
jmp
cmpsl
jg
add
mov
lock
fs
sub
adc
xor
pop
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
