or
in
aas
inc
dec
sub
inc
xor
insl
mov
mov
cli
or
out
pop
sti
test
fs
mov
mov
lods
inc
sahf
filds
push
addr16
nop
test
add
mov
cmp
test
xchg
lcall
aad
xor
pop
and
xchg
cmp
mov
add
jmp
jbe
mov
jmp
mov
iret
gs
xor
pushl
out
in
imul
xchg
fsubrs
dec
in
movsl
cmp
out
pop
call
mov
movsl
ret
pop
sbb
and
aaa
mov
push
jo
rcrb
sahf
cvtdq2ps
out
cmc
pop
lcall
mov
inc
popf
adcl
push
int
mov
ret
es
mov
inc
mov
cmp
rcrl
std
arpl
jl
shlb
fcomps
bound
xor
ret
cld
inc
inc
and
mov
and
xorl
pop
aam
or
negl
or
mov
sub
sti
pop
xchg
jp
das
test
pop
cmpsb
in
loop
mov
sahf
mov
adc
push
xchg
jo
out
lcall
aam
xchg
dec
scas
leave
or
lahf
shrb
inc
stos
fisubrs
mov
mov
sbb
mov
mov
pop
stc
out
jns
fldcw
add
push
inc
ljmp
ja
pushf
call
xchg
stos
sub
adc
divb
mov
add
push
fldcw
es
icebp
mov
mov
js,pt
xchg
pop
pop
lret
out
jge
sarl
and
imull
push
imul
popaw
or
mov
mov
cmpsl
inc
dec
sub
cmp
test
adc
int3
dec
or
outsl
stos
aam
out
addr16
pop
fs
rcrb
pop
sbb
lret
xchg
xchg
rorb
pop
sbb
pop
or
les
pop
pop
sbb
cmp
addr16
inc
cs
add
sarl
and
push
test
xchg
or
jp
push
fisttpl
enter
dec
cmp
vpcomq
pop
fld
int
dec
add
sub
sub
imulb
mov
xlat
loopne
pusha
and
data16
cmc
data16
jnp
ret
sbbl
sub
addr16
mov
insb
into
push
sbb
stc
sbb
sti
mov
out
jg
xchg
adc
or
mov
out
aas
test
jecxz
mov
aaa
add
mov
clc
in
push
xor
ja
mov
or
imulb
pushf
iret
pusha
sbb
test
dec
mov
ss
das
in
push
add
loop
sub
jmp
or
ret
loop
jns
fs
pop
pushf
sbb
and
mov
mov
movsb
jecxz
xlat
push
notl
sub
jbe
scas
fisttpll
dec
mov
lahf
fadd
jmp
sub
shrl
cs
pop
cmp
add
jns
push
rcrb
pop
pop
mov
sub
dec
aas
push
jb
push
addr16
adc
sti
clc
xchg
les
imul
out
pop
inc
enter
inc
repz
into
sti
xor
popa
mov
movsl
iret
in
pop
jnp
icebp
xlat
fisubl
into
mov
fnstcw
jae
mov
out
inc
mov
cli
fldenv
xlat
fisubrs
insb
lods
dec
jne
mov
sub
push
outsl
and
xchg
jle
cli
out
adc
push
or
jmp
cmp
pop
mov
lods
fbld
js
inc
scas
jo
xchg
and
mov
lret
push
loopne
cmp
sbb
push
lret
ror
inc
jb
call
aas
stos
sub
cli
movsl
inc
xor
xlat
inc
mov
mov
lods
xor
sub
andl
pop
mov
lods
mov
aad
fistl
push
loope
test
pop
mov
jo
adc
not
movsl
ret
ret
inc
imul
or
and
out
dec
icebp
jge
add
jbe
daa
xchg
stos
and
and
add
cmp
xchg
push
jmp
cltd
pusha
push
inc
out
push
adc
insb
lds
ret
inc
scas
pop
insb
jmp
jp
jmp
cmp
cld
sbb
cld
loope
cmpb
shrl
add
push
push
sti
rcll
adc
pop
inc
fdivs
xor
mov
daa
sub
cmp
mov
or
xor
ret
mov
aaa
ret
and
pop
or
dec
xor
cmp
and
dec
cmp
lock
and
mov
pop
enter
in
adc
or
mov
sbb
popf
push
or
dec
loop
insl
inc
mov
into
imul
scas
jmp
xor
xor
inc
sbb
stos
test
xchg
orl
cwtl
push
push
mov
push
in
jle
sbb
inc
sbb
push
enter
xlat
mov
or
dec
js
sbb
push
loop
insl
push
hlt
push
ja
adc
pop
in
adc
mov
xchg
test
or
xor
push
adc
sub
pushf
rolb
sbb
mov
pop
mov
or
adc
std
test
or
xor
xchg
hlt
mov
jns
and
decb
xor
cmp
lahf
push
cmp
mov
cmp
push
push
jnp
adc
add
jnp
cmp
mov
mov
in
xor
cli
loop
adc
pusha
fidivs
xor
dec
mov
inc
xchg
push
cmp
data16
popa
cmp
mov
xchg
xor
fwait
aad
addb
faddl
xchg
pop
sbb
jle
adc
add
loopne
adc
xor
or
cltd
xlat
loope
push
ret
in
sti
push
xchg
les
rol
push
or
add
mov
and
and
int
adc
je
jnp
mov
xchg
inc
sub
pop
mov
rcr
popf
mov
cmp
mov
movsl
adc
adc
fld
scas
loopne
test
sub
push
test
neg
jns
clc
enter
adc
dec
mov
push
loop
in
sahf
int3
sub
paddsw
mov
dec
aaa
cmp
inc
loope
xor
jnp
add
jmp
pop
scas
fnstcw
insl
push
dec
clc
popf
test
mov
mov
jge
or
push
fidivl
rcrb
nopl
iret
adc
push
cmpsb
rol
int3
stos
xchg
sahf
or
aas
xor
lock
js
orb
fidivrl
xor
je
daa
lods
dec
mov
lods
or
shl
cld
mov
xor
sahf
sbb
and
mov
outsb
mov
mov
xor
or
int3
mov
push
mov
movsl
rorl
mov
repz
lock
pop
movsb
pusha
sti
adc
inc
repnz
rol
fs
addr16
jge
push
stos
decb
xchg
pop
sub
push
sub
push
pop
lret
orb
mov
xlat
or
popf
cmpsb
push
ljmp
leave
in
mov
sub
sti
dec
mov
lret
rcll
mov
sbb
lea
pushf
in
movups
andb
adc
inc
pop
test
sbb
dec
test
xchg
or
fwait
add
gs
mov
and
xchg
add
xor
ret
imul
push
ret
and
push
push
mov
mov
dec
outsb
inc
jns
daa
stos
cltd
mov
js
jle
push
mov
cld
dec
mov
mov
aas
mov
and
mov
inc
xor
sbb
enter
bound
jmp
push
rol
fists
and
popa
and
and
out
fcomip
shr
je
xchg
orl
repz
fsubrl
das
dec
cmp
movswl
jg
aad
lahf
mov
out
or
dec
fisttpl
cs
cmpsb
inc
cli
enter
push
cmp
mov
xor
pop
mov
imul
ljmp
inc
dec
divl
inc
shl
or
cwtl
stos
mov
mov
shrb
les
and
pushf
jbe
test
out
jg
mov
pop
aaa
aaa
pop
nop
jns
cld
in
ja
jno,pt
dec
pop
fstl
jbe
lret
adc
popa
mov
mov
push
xor
outsl
cmp
ffree
negl
xor
mov
push
insb
bound
sbb
mov
lcall
jnp
insl
xchg
out
xor
cmp
into
sbb
jo
arpl
lcall
cmp
adc
or
loope
push
and
inc
test
movsb
mov
fildll
push
andl
push
fisttps
orb
dec
fnsave
aam
addr16
sbbb
pop
cmp
loopne
xorl
push
test
sub
and
cmp
mov
test
xchg
pop
je
and
in
mov
mov
rorl
hlt
imulb
push
test
sub
push
jmp
push
push
test
inc
push
mov
mov
imul
xchg
inc
repz
fs
repnz
stc
dec
jl
push
addr16
test
dec
inc
aaa
mov
mov
or
mov
out
mov
ds
sbbl
je
xchg
xchg
pop
adc
adc
jb
sbb
daa
xchg
outsb
pop
lret
sbb
pushf
leave
jbe
sub
test
leave
or
daa
add
or
push
insl
aam
mov
mov
aam
mov
or
out
cwtl
adc
mov
insl
sub
cmpsb
jo
dec
add
shlb
push
icebp
jmp
sbb
push
jns
movsb
orl
mov
iret
mov
sbb
add
aas
je
iret
pop
sarl
mov
mov
mov
and
daa
or
pop
bswap
fisubl
mov
int
mov
inc
daa
mov
daa
sbb
mov
scas
jl
popa
xchg
push
or
xor
cltd
push
xorl
and
aaa
popf
xor
xlat
ficoms
mov
popf
cli
cli
adc
shrb
loopne
adc
fwait
js
ss
lea
jmp
data16
push
mov
or
aaa
add
xchg
xlat
jge
cld
xor
lret
aad
sar
fstl
lods
push
iret
adc
mov
incl
xchg
xchg
ficomps
orl
ss
mov
sub
cmp
fsubr
add
mov
hlt
cmpsl
and
jp
inc
add
imul
ret
xchg
lahf
cmp
jg
mov
out
mov
xchg
enter
lahf
or
mov
shrb
cmp
pop
xchg
call
add
pop
jne
popf
dec
lret
pop
xor
lret
sbb
xor
sti
mov
push
push
pop
dec
mov
mov
es
pop
in
cli
aad
test
mov
dec
imul
inc
adcb
sbb
std
test
iret
repnz
iret
inc
push
or
sti
and
mov
lret
lret
pop
test
xchg
xchg
and
bound
mov
xchg
fwait
jae
popa
mov
pop
mov
imul
xor
cmp
iret
outsl
rcl
mov
jno
cmp
fistl
cmp
pusha
testb
out
inc
mov
and
xchg
jmp
in
fimuls
mov
lods
adc
lcall
les
fdivl
xor
testb
loope
sub
or
fisubrs
adcl
in
das
arpl
jmp
dec
test
cmp
jg
add
jns
pop
int3
mov
sub
jne
pushf
popa
push
popa
jecxz
addr16
out
ret
aam
ds
outsb
arpl
xor
xchg
pop
xchg
push
repz
gs
sbb
push
add
jno
lret
xor
out
cmpsb
or
jge
gs
inc
repnz
push
rcrl
sti
xor
sarl
sub
aam
jp
shr
jecxz
bound
mov
and
cmpb
aas
mov
sbb
pop
stos
push
xor
push
cmp
jbe,pn
arpl
insb
addl
mov
adc
mov
ret
cmp
jb
xchg
mov
imul
add
out
sbb
js
leave
popa
fdivrl
mov
repnz
push
xchg
pop
nop
dec
pop
int
sbb
xor
and
aam
add
cmpsb
fdivp
pusha
in
shlb
in
cmp
repz
rorl
mov
fsubrl
shlb
mov
sub
pop
mov
inc
outsl
scas
mov
pusha
push
jmp
mov
ret
dec
mov
dec
inc
popf
xor
jo
in
push
push
imul
xchg
mov
fs
mov
fnstcw
mov
push
push
mov
mov
push
ja
xor
pop
mov
adc
inc
jg
add
pminsw
push
mov
testb
push
repz
push
or
rolb
xchg
mov
ljmp
iret
in
pop
in
sbb
adc
outsl
push
sub
sub
rcrl
mov
mov
imull
inc
xlat
xor
cmpb
les
enter
insl
push
add
iret
inc
fwait
mov
sub
cmp
outsl
lea
orb
loop
rolb
pop
adc
or
jecxz
cmp
cmpsb
add
mov
mov
xlat
scas
mov
add
mov
or
cmpsl
in
scas
insb
xchg
xlat
insb
dec
mov
pop
test
mov
fldcw
sbb
lahf
pop
mov
clc
sub
sub
jno
jne
lcall
add
push
shrb
test
cmpsb
xchg
jl
ds
inc
adc
jg
out
stc
jecxz
or
inc
jno
add
jns
inc
adc
mov
cltd
sub
leave
cli
mov
sar
sti
pusha
sbb
stos
call
mov
cwtl
stos
sti
rcrb
cld
hlt
push
mov
lret
xor
mov
cmp
rorb
int3
push
lods
add
cwtl
arpl
cmpsl
sbb
ds
fldt
xor
mov
cmp
hlt
xor
movsb
or
cld
leave
xor
push
dec
xor
test
or
inc
rcrl
insl
cmp
filds
int3
test
inc
pop
push
out
jg
popa
mov
icebp
jnp
inc
sub
insl
push
xchg
jne
lahf
fwait
testl
iret
cs
xlat
add
adc
sub
mov
xor
les
jecxz
mov
insl
jle
ja
stc
xor
rolb
jnp
sbb
fidivl
fadd
fisubrl
push
repnz
sub
arpl
push
inc
push
push
jne
push
fisubrl
negb
or
pop
movsb
notl
cld
lock
adc
or
push
loope
push
xor
nop
push
lods
sti
stc
dec
int
mov
sub
mov
mov
xorl
je
aas
mov
fs
push
inc
inc
fdivr
ret
pop
mov
inc
push
adc
inc
or
dec
add
dec
subl
mov
cld
in
cmp
xchg
fwait
xlat
jle
push
jns
mov
cmpsb
or
inc
push
add
mov
cltd
push
popa
push
cmpsb
pushf
int3
fstps
or
mov
aaa
test
xor
loope
cmp
leave
imul
xchg
pop
dec
mov
inc
adc
fs
jl
imul
ret
jnp
int
add
flds
jl
scas
mov
mov
jl
jl
mov
loopne
xor
fiaddl
jne
fcmovnb
sub
xchg
std
lahf
in
in
mov
sbb
sbb
mov
pop
hlt
orl
mov
adc
pop
push
adc
int3
dec
jg
jmp
push
test
jnp
iret
imul
call
mov
jne
lea
sbb
xor
cs
xchg
stos
xor
popa
adcl
dec
loope
and
xor
push
repz
cmpsb
rclb
sbb
xor
mov
mov
cld
pop
lds
scas
je
in
xor
inc
ret
xor
lret
mov
ljmp
ljmp
js
mov
mov
gs
out
and
jp
daa
xchg
xchg
movsb
sbb
mov
mov
mov
adc
push
fwait
add
jns
push
imul
test
xor
xor
lock
out
sbb
mov
mov
add
add
xlat
xlat
xchg
imulb
dec
jb
jo
pop
rcrl
dec
mov
cmpsl
pop
les
or
inc
or
call
xor
lods
test
cmp
jg
aas
mov
fnsave
mov
lods
xchg
in
xor
and
rcrb
push
cmp
daa
mov
mov
pop
outsb
hlt
or
test
sbb
push
xadd
ret
push
fs
mov
fidivrl
jle
cmpsb
and
rol
outsb
pop
stc
add
push
mull
xchg
enter
jae
mov
hlt
or
aas
pop
std
ja
incl
hlt
xor
xchg
lahf
je
mov
mov
into
mov
sbb
mov
sub
les
aad
ds
popf
fcomps
sub
pop
repz
mov
xor
fnstenv
dec
sbb
jmp
mov
aad
mov
insl
ret
stos
cmp
pop
cld
fldt
fsubl
pop
fidivs
loopne
jns
cmp
mov
mov
sbb
fstps
rorb
mov
jl
std
dec
lods
push
mov
repz
xchg
sub
lds
or
push
testl
fsubrl
mov
scas
ljmp
lret
jecxz
divb
out
jge
mov
or
movups
aam
jle
dec
pop
leave
jp
in
fdivrs
xor
xor
stos
xor
dec
adc
mov
mov
dec
cmp
loop
xchg
fiadds
into
in
outsb
subl
mov
mov
stos
mov
inc
pop
les
inc
jb
push
xchg
lods
clc
popf
jl
stc
sbb
out
sbb
adc
lret
shrb
daa
jg
test
pop
push
add
outsl
ret
jne
rcl
adc
mov
dec
or
pushf
pop
pop
or
sahf
in
loop
xchg
jg
das
ljmp
shl
inc
ret
jno
int3
dec
push
pushf
mov
xor
divl
jne
outsb
call
mov
mov
push
ss
aam
xchg
cmpsb
cld
push
or
out
aad
sbb
jne
mov
daa
dec
mov
adc
sbb
xor
pusha
cmpb
cmp
jae
scas
push
lret
movsl
into
adc
or
fnsetpm(287
lods
cltd
inc
imull
lret
jmp
push
dec
loopne,pn
cmpsl
xlat
dec
loope
pop
jg
mov
loope
xchg
sub
cmp
and
jb
rolb
and
mov
lea
cltd
push
ljmp
fs
ljmp
inc
icebp
push
in
xchg
cmpsb
mov
xor
xor
push
sub
adc
out
xchg
scas
gs
insb
sbb
pop
out
sbb
scas
int3
mov
jbe
sti
adcl
cmp
rcrb
cmp
mov
shrl
inc
jnp
adc
add
shll
pop
mov
je
out
adcb
cmp
stos
or
rorl
test
sar
shll
sbb
jmp
jl
adc
mov
jne
scas
pop
lcall
cld
jmp
cld
pop
sub
aam
cmova
int
push
out
pusha
and
addr16
mov
jbe
sarb
in
and
mov
push
addr16
adc
xchg
mov
sbb
jecxz
outsb
mov
jnp
xchg
cltd
push
clc
in
mov
into
imul
sub
or
xor
aam
mov
loopne
js
or
cmp
xchg
int3
pop
pop
sub
mov
fucom
add
cmp
popa
rolb
pop
les
lret
pop
xor
jecxz
repz
inc
sub
int
out
rcrb
std
nop
in
jge
push
nop/reserved
negb
sahf
jo
dec
subl
loope
jmp
test
mov
sub
jnp
xchg
cmp
push
or
push
push
jno
inc
cmp
pop
mov
mov
xor
arpl
xor
ja
mull
add
push
pop
jns
loopne
and
dec
xorl
mov
mov
adc
lret
imul
and
mov
jnp
xor
or
icebp
mov
dec
cmpsb
mov
cmp
sub
pop
rorl
adc
jl
fmull
jb
pop
rcrb
shr
aam
arpl
dec
arpl
insl
aaa
lret
push
xchg
mov
push
mov
popf
les
loope
push
out
adc
std
outsb
mov
out
loop
xchg
fs
aad
pop
sub
jp
andl
test
jle
lock
ret
pop
inc
arpl
movntq
push
fisubrl
push
xchg
repnz
push
clc
shrb
not
push
imul
mov
mov
nop
test
scas
add
mov
es
insl
xchg
jl
pop
add
js
mov
mov
clc
fucomp
mov
inc
aad
pusha
rcl
cltd
movsl
stc
sub
mov
lods
jo
xor
xchg
xor
int3
aaa
sarb
cmp
jne
mov
mov
sbb
dec
hlt
mov
incb
into
fadd
cmpsb
addl
jl
cli
cmpsl
fsubl
lods
and
add
ss
cmpb
mov
adc
out
sbb
rol
adc
insb
push
jp
cmpsl
call
xchg
clc
jg
sub
test
and
sbb
and
mov
mov
or
sub
iret
mov
xchg
mov
shl
jmp
inc
push
leave
decb
aaa
or
jmp
adc
int3
adc
dec
dec
arpl
ljmp
repnz
mov
lea
or
inc
pop
ret
sbb
fmuls
mov
stos
pop
inc
xor
cld
jg
sbb
movsl
imul
xor
ljmp
rcrb
cmc
mov
cmpsb
cs
ja
push
dec
xchg
mov
rol
push
sti
jns
mov
push
push
xorb
adc
sub
cwtl
jnp
xor
ret
pop
lods
out
and
push
mov
aas
dec
cmpsb
push
les
sar
movsb
mov
clc
jecxz
dec
xchg
rcll
dec
idivb
fcoml
incl
leave
xor
rorl
pop
jmp
loop
in
and
iret
es
aad
addr16
movl
outsb
push
inc
and
lret
xchg
xchg
ja
cmp
enter
and
mov
fucom
mov
xchg
outsb
cmp
int3
mov
mov
jo
mov
sarl
pop
jle
xchg
or
jle
out
cmp
out
movl
inc
imul
arpl
cs
mov
cwtl
mov
xor
in
inc
sbb
add
xor
dec
inc
and
test
jbe
fldl
out
scas
jle
icebp
xor
jo
stos
push
stos
cmc
imul
js
inc
or
lea
mov
stos
add
xchg
hlt
xchg
into
popa
fidivrl
rolb
shrb
sub
and
sahf
rol
push
jmp
bnd
add
stos
out
cmp
imul
sub
adc
scas
das
push
dec
xor
sbb
cmp
cwtl
aam
dec
push
xor
and
mov
leave
les
in
adc
movsl
push
dec
mov
cmp
add
inc
push
jbe
ds
or
adc
testl
mov
ror
out
mov
adc
adc
je
push
jbe
int3
pop
xor
out
jno
add
push
mov
mov
dec
push
inc
ror
into
inc
push
add
mov
adc
push
fwait
jle
hlt
loopnew
pop
sbb
dec
sbb
rol
add
xor
lock
stc
inc
sub
popl
jmp
lcall
sbb
and
mov
add
ss
iret
shr
inc
rcrb
inc
mov
push
jbe
in
clc
jb
mov
jg
mov
and
pop
push
xor
imul
push
clc
fcmovu
loope
pop
loopne
je
mov
jge
iret
dec
sbb
dec
and
mov
push
jge
dec
or
scas
xor
or
dec
or
xorl
cli
insl
mov
pop
test
fildl
ja
adc
icebp
test
cld
adc
fldl
ljmp
mov
inc
push
into
cmp
xor
test
mov
push
movsl
jecxz
jge
sti
add
dec
std
fstpt
lahf
cmc
aas
call
mov
into
hlt
mov
ja
cmp
out
mov
movsl
out
and
cli
ljmp
loop
test
out
dec
jns
push
add
sub
push
imull
inc
add
mov
xchg
fwait
cmpsl
jae
aas
test
jl
fildll
and
adc
adc
std
jb
and
enter
xor
mov
imul
jmp
push
rolb
daa
adc
call
test
xorl
mov
add
push
insb
cli
cmp
cli
pop
ss
jecxz
mov
leave
out
fcomps
push
int3
dec
sti
sub
ret
insl
sbb
call
repz
ffree
pop
inc
or
das
scas
jns
sbb
jo
leave
mov
jbe
fisubl
mov
movsb
push
adc
hlt
int3
push
mov
inc
sub
fwait
xor
sbb
or
pop
lods
xchg
icebp
ds
sbb
jns
test
pushf
add
jo
pop
fiadds
sbb
xor
pop
and
rcrl
push
inc
pop
sub
outsl
cmp
sbb
cmpsb
cwtl
push
fsubrl
stc
cmovbe
or
jnp
xchg
jmp
push
pop
jl
ja
or
mov
addb
jl
cld
in
ret
inc
pusha
jge
lcall
pop
add
fcom
cmp
loopne
test
mov
xchg
add
insb
movsl
testb
xor
ret
and
ret
pushf
insl
pop
insb
pushf
mov
and
dec
std
sbb
inc
lcall
scas
es
or
cmp
pop
leave
and
insb
pop
orl
and
pop
and
xor
mul
popa
int3
cld
adc
jae
sbb
gs
in
jp
pmulhw
loop
xchg
cs
or
fs
lds
inc
mov
dec
cmc
pop
lods
aas
adc
jl,pn
popf
mov
jge
pop
ja
sbb
imul
out
add
cmp
pusha
jb
mov
and
fistps
idivb
shrl
xor
mov
jl
xchg
movsl
rcrb
mov
roll
leave
es
xor
cwtl
insl
adc
fmul
nop
popf
xchg
mov
mov
and
cmp
push
lods
lock
mov
mov
cltd
dec
pop
and
cltd
lret
push
into
fistps
js
lock
dec
xchg
pop
xchg
cli
std
adc
inc
mov
or
inc
jmp
aaa
push
mov
test
sbb
sbb
outsl
mov
outsb
add
xor
dec
jb
fwait
mov
push
cmp
repz
xor
sti
add
xor
add
stc
call
or
xchg
cmp
dec
sbb
jp
aad
pop
add
loop
jmp
xchg
xor
mov
cmpsb
push
pop
imul
and
cmp
mov
mov
add
data16
movsb
adc
test
jle
sub
mov
inc
int
mov
clc
inc
sub
cmpsb
inc
std
mov
and
jp
sub
pop
imulb
push
scas
mov
shll
mov
mov
dec
pop
add
iret
xor
add
rcrl
add
lock
clc
bnd
pusha
cmp
pop
add
mov
jl
negb
push
adc
mov
test
mulb
xor
je
xchg
rclb
push
mov
push
add
fnstsw
sbb
fwait
adcl
mov
pop
dec
sbb
xor
xlat
cmpb
lods
lods
iret
mov
inc
iret
movsl
repz
dec
mov
xor
sbb
inc
xchg
xchg
fst
cli
fst
ret
cmp
cmp
popa
add
test
lods
ja
jecxz
lahf
pop
mov
ds
std
push
les
sbb
rol
mov
das
shll
xor
xor
repnz
or
aaa
pop
jge
lret
push
cwtl
sub
mov
ja
jg
in
and
test
dec
enter
xor
addr16
jmp
loopne
leave
mov
adcl
movl
fists
sub
lea
ljmp
lret
fwait
rcrl
fwait
push
pop
lock
stc
shrl
enter
mov
dec
and
lcall
mul
into
mov
push
xchg
imul
jnp
std
add
andl
push
mov
cmp
jo
jno
pop
scas
mov
repz
pushf
pop
push
cmpl
stos
cmp
fldt
push
test
imulb
popf
sti
fimull
xor
imul
hlt
and
pop
dec
adc
xor
xor
push
es
adc
mov
insl
sbb
js
adc
mov
push
out
push
pop
pusha
fidivrl
adcl
pop
push
in
jb
jns
dec
lret
cmc
mov
lea
fdivs
dec
testb
mov
pushf
jg
mov
dec
hlt
or
xor
inc
dec
gs
pop
inc
pop
es
pop
nop
stos
xchg
xchg
pop
mov
add
jne
fwait
pushaw
adc
imul
inc
in
sub
ja
ss
addb
xlat
stos
outsl
mov
pop
out
mov
pop
mov
pop
outsb
movsb
mov
push
sbb
push
dec
cmp
pop
pop
mov
adc
sub
shrb
stc
roll
les
ret
inc
xchg
xor
clc
js
je
lock
cmp
cwtl
sub
enter
mov
je
leave
add
pop
scas
cli
js
cltd
aaa
sti
dec
mov
fwait
mov
push
mov
sti
adc
adc
lret
sbb
pop
xchg
hlt
cmp
push
sbb
cmp
dec
sub
mov
aaa
pop
stc
rorl
stos
dec
fistps
repnz
add
inc
jg
inc
stos
xor
daa
cmp
sbb
xchg
push
arpl
mov
cli
cli
fsubrl
scas
out
mov
jecxz
fidivl
dec
data16
data16
out
or
in
and
and
xchg
jg
std
jg
add
std
cmc
sub
scas
inc
cmp
sub
nop
push
push
sbb
in
xchg
cltd
and
ret
nop
push
stos
push
fs
sahf
outsl
stc
jne
fcmovnbe
mov
or
sub
je
and
leave
ljmp
adc
outsb
mov
and
add
cwtl
dec
imul
mov
and
test
lods
inc
stc
mov
dec
add
aas
adc
jb
lods
jmp
insl
push
add
or
out
mov
add
movsl
lods
pop
xchg
movsb
mov
push
jae
and
and
out
stc
lea
add
cmpsl
movb
xor
jecxz
xor
fcompl
sbb
faddl
call
lret
xchg
data16
rorb
fdivrl
int
in
int3
adc
loopne
lcall
fs
xor
xchg
pop
cli
or
and
dec
push
jmp
dec
sbb
cmp
or
push
mov
ljmp
add
pop
and
mov
loope
pop
jno
fsubl
int3
ficoml
sbbb
addl
mov
push
pusha
pop
jecxz
std
dec
dec
call
repz
movsl
push
and
dec
stos
push
sbb
push
ja
mov
mov
in
xlat
fcoms
data16
sub
push
lock
cmpsl
inc
xor
jp
inc
movsl
inc
imull
cmpsl
and
imul
arpl
fisubl
pop
inc
test
jb
jo
dec
shlb
mov
pop
pop
jle
addr16
cli
mulb
sti
or
enter
loopne
loop
int
push
mov
sti
mov
pop
pusha
mov
negl
push
mov
adc
scas
dec
cmpb
and
adc
popf
push
inc
inc
sub
lods
cltd
mov
mov
test
ficoml
mov
ds
xor
movsl
inc
pop
test
jo
xor
pop
push
out
fsub
in
cmp
stos
jmp
xchg
idiv
mov
data16
fsubrs
xchg
and
pushf
leave
cmc
sbb
jp
jne
jnp
mov
rorb
inc
test
filds
stc
outsb
adc
mov
inc
mov
cmp
xor
push
jl
push
push
mov
gs
cmpsb
out
mov
add
mov
sbb
jl
nop
mov
push
jns
loopne
test
mov
ljmp
cld
mov
jno
pop
add
cs
xchg
out
imul
mov
mov
fiaddl
add
sub
mov
push
xor
ljmp
cmp
insb
lock
push
xchg
jo
xor
mov
out
mov
pop
mov
dec
lods
lds
stos
adc
xchg
js
leave
nop
rcrb
bound
test
push
jb
nop
mov
in
mov
xchg
aaa
jns
in
loope
pop
pop
roll
push
sbb
shlb
cli
mov
stos
push
in
jo
dec
jg
popa
mov
das
scas
loopne
stos
dec
cmp
aaa
add
mov
mov
call
dec
movsl
push
xor
xor
mov
mov
test
stos
les
dec
xor
cmp
mov
jmp
cs
ror
rcl
sub
mov
and
mov
sub
mov
aad
xchg
cmpsl
pop
dec
jne
mov
ret
enter
mov
enter
jl
inc
mov
test
xchg
inc
or
lods
lcall
pop
aas
js
pop
sbb
rcrb
repz
lret
cld
fistpll
fcom
cmp
xor
repz
inc
xor
aam
sahf
mov
sbb
fisubrs
ja
es
xchg
insb
mov
int
mov
mov
mov
cmpsl
sub
dec
mov
push
btc
cld
pop
addr16
pop
mov
mov
sbb
fldt
push
adc
sub
xor
mov
loopne
sbb
xchg
aaa
mov
ds
and
mov
cwtl
mov
lea
jo
les
aaa
add
scas
push
jnp
dec
mov
in
pushf
push
inc
ret
rcll
xor
push
fsin
xchg
mov
pop
inc
stos
andb
add
and
cmp
and
xchg
fildl
mov
and
jl
sti
mov
or
xor
jge
ret
jge
jecxz
mov
jle
mov
cli
scas
sti
mov
add
pop
daa
push
mov
xchg
add
mov
jecxz
sbb
mov
nop
pop
adc
mov
cld
push
out
pusha
aas
es
hlt
cmp
iret
lahf
sti
push
push
sbb
dec
sbb
or
imul
in
std
testl
cli
in
cmp
lds
into
fisubrs
push
mov
lcall
mov
pop
insl
inc
nop
lcall
jne
xchg
movsl
dec
dec
jmp
movsb
push
insb
aaa
mov
and
loope
out
pop
push
adc
movsl
addr16
mov
test
jge
ja
cs
lock
iret
loop
sbb
xlat
sbbb
pop
cmp
lret
lds
jbe
jo
cmp
jmp
mov
roll
loope
sbb
aam
adc
in
sbb
repnz
les
push
push
jp
adc
jo
and
dec
sbb
adc
or
cmp
lcall
sbb
xchg
pop
pop
dec
mov
add
or
pop
cmp
adc
loope
push
data16
mov
js
lds
or
dec
lret
push
ljmp
or
rol
and
stos
jge
cli
pop
cmp
scas
mov
jmp
lahf
adc
test
cmc
dec
sbb
popa
nop
or
dec
insb
cmpsl
sbb
imul
scas
mov
adc
test
repz
stos
inc
cmp
arpl
mov
mov
dec
jne
in
mov
sahf
pop
or
insb
addr16
xchg
pop
adc
sub
xor
loopne
jns
xchg
imul
shll
fsubrs
push
sbb
imul
and
jo
loopne
mov
jge
cmp
ljmp
fbstp
push
adc
sbb
mov
jle
lea
insl
test
hlt
icebp
inc
inc
cwtl
aas
mov
lret
cltd
fcmovne
mov
add
sbb
push
jmp
rcrl
xchg
cwtl
cmp
enter
mov
pop
ja
not
push
ja
sahf
aas
and
push
jge
cmpsb
popa
inc
ja
pop
test
mov
jl
loopne
movsl
xor
movd
xor
pop
insb
mov
push
add
xor
in
pop
jnp
sti
pop
inc
and
pop
xor
mov
cmp
insb
ss
leave
imul
mov
test
xchg
lods
or
inc
lods
inc
loopne
push
jmp
cmp
jbe,pn
sub
or
dec
lock
arpl
movsl
mov
add
add
push
in
movsb
jb
mov
ja
sub
lret
jmp
fisttpl
cmp
decl
addr16
pop
getsec
add
shll
out
mov
in
mov
jae
mov
mov
mov
adc
shlb
fisubs
jbe
jb
iret
les
jno
pop
dec
xchg
fdivrs
test
xchg
stos
popa
aas
fsts
adc
sbb
dec
jae
in
adc
pop
jnp
movsb
fidivl
int
inc
mov
jo
pop
sbb
ror
mov
push
and
scas
mov
xchg
call
into
pop
pop
push
aam
hlt
wrmsr
cli
lock
shl
push
mov
loope
mov
xor
jo
out
out
add
push
add
cmpsb
loop
pop
ret
loop
pusha
add
mov
cmpsl
mov
movsb
or
repnz
stc
sub
sahf
sbb
or
xlat
jp
lcall
push
sbb
jns
imul
or
add
ret
cmpb
fcmovb
adc
or
mov
inc
enter
lock
sub
dec
ret
cmp
pushf
lods
mov
leave
subl
loop
js
mov
and
lods
outsl
into
dec
xor
cmpsl
lret
cmpl
sti
xchg
js
dec
inc
or
pusha
test
ret
mov
aam
adc
mov
or
jnp
or
jmp
je
dec
cmp
jns
push
xchg
in
jne
ret
push
cmp
movsb
mov
repnz
xor
pop
xchg
or
push
sub
outsb
push
cmpsl
addb
sbb
mov
cmp
inc
jle
or
loop
mov
repz
dec
sub
mov
rcrl
rcr
cmp
dec
jne
pop
jbe
ret
or
ja
jns
sbb
ljmp
and
pop
dec
lds
fwait
dec
loopne
out
hlt
jg
xchg
push
pusha
dec
mov
add
xor
inc
xchg
std
dec
pop
test
or
mov
shl
xor
fldl2e
aas
add
sysenter
sub
jo
or
mov
sub
out
cmc
ds
es
mov
mov
mov
inc
mov
mov
push
in
jecxz
mov
mov
or
pop
shll
inc
jb
sbb
leave
sbb
sbb
stc
repz
sahf
fistpl
iret
or
mov
adc
push
xchg
mov
outsb
addr16
dec
mov
and
stc
call
icebp
cmpsb
rolb
nop
mov
fildl
push
loop
sub
add
push
adc
cmp
sub
loopne
pop
cmp
cmpsl
stos
hlt
pop
sbb
inc
lret
dec
jbe
out
popa
pop
xlat
mov
pop
aad
aad
sub
gs
shrl
adc
out
dec
fbstp
cmp
and
fwait
jno
ret
pop
outsb
jle
and
sarl
inc
fidivl
sbb
cmpsb
xchg
add
call
test
and
iret
adc
sbbb
add
js
sti
pop
scas
outsl
stos
xor
or
cmpl
sub
push
cmp
pop
out
push
mov
xor
xchg
mov
arpl
jge
jge
xor
addr16
jne
fstl
sbb
mov
push
xchg
mov
mov
sub
mov
adc
mov
mov
xchg
mov
mov
or
rclb
mov
imul
gs
lods
pop
pop
sub
jb
movsb
sarl
js
and
repz
inc
pop
or
lods
aad
or
sub
loop
mov
xor
adc
adc
aaa
and
dec
dec
movsb
jp
subl
stos
adc
inc
data16
xor
int3
inc
push
rcrb
pushf
lret
mov
push
das
lods
jb
scas
loope
push
dec
mov
bound
jae
aad
decb
rcll
lods
scas
push
in
dec
mov
push
inc
mov
rcrb
inc
add
mov
mov
ds
mov
pusha
mov
sub
and
pop
lods
jp
insl
dec
mov
lcall
jle
sbb
xchg
sub
add
lock
jbe
loope
lea
jmp
jae
sbb
adc
xor
dec
push
cmp
ja
add
cmpsb
cmpsb
xor
mov
loope
orl
into
cltd
or
mov
jg
mov
cmp
xlat
mov
and
int
lds
jp
and
test
sarl
jbe
inc
jge
mov
out
popf
jle
mov
or
jns
or
cmpsb
jne
mul
mov
xor
fs
fcomi
push
loopne
mov
mov
scas
rorl
mov
cmp
mov
dec
dec
or
sub
pop
jne
or
mov
out
pop
mov
mov
jbe
mov
adc
daa
ljmp
icebp
mov
test
arpl
movsb
cmp
int3
stos
push
xchg
sub
push
int3
ds
gs
icebp
shr
adc
popa
mov
fdivl
lods
in
ret
data16
push
lock
in
pop
pop
dec
push
cmp
lret
aas
xor
xor
lcall
lods
out
adc
and
ret
jo
push
adc
sahf
imul
or
jno
mov
push
xchg
rorb
cmp
and
stos
or
andb
or
push
test
lret
xchg
dec
pop
pop
insl
fimuls
push
hlt
jns
in
leave
mov
popf
mov
out
xor
jno
jae
push
scas
addb
and
cmp
cli
das
mov
stos
mov
daa
push
or
and
cwtl
aas
les
fs
adc
stos
push
mov
sar
es
addb
or
lods
and
mov
xor
mov
out
pop
dec
insb
pop
xchg
pop
and
rclb
sub
imul
cwtl
test
sbb
cld
adc
out
add
loop
cmp
mov
xlat
or
fisubl
adc
inc
sub
push
dec
xchg
fnstenv
or
setl
stos
cli
jae
lret
std
dec
push
sub
ja
jnp
sahf
mov
orl
mov
jb
add
xchg
into
xor
stc
adc
xor
mov
xchg
stos
mov
xor
or
out
xchg
or
xchg
cmp
adc
lret
xchg
icebp
jno
aaa
cmp
icebp
or
adc
cs
push
add
mov
push
jb
fstps
out
lods
inc
fwait
cmp
cld
xchg
test
and
cmp
pop
push
dec
insb
in
dec
fbstp
push
push
mov
imul
cmp
ficompl
add
imul
sbb
das
fildll
xor
out
pushf
bound
clc
mov
push
jmp
xchg
push
imul
adc
aas
shll
iret
or
icebp
jno
sbb
sbb
lock
adcl
fldt
ficoms
dec
lret
xchg
mov
gs
push
push
jns
enter
and
cli
cmp
push
movsb
pop
enter
mov
loop
jg
xchg
test
loope
sbb
jne
push
dec
add
pop
push
lods
adc
mov
addl
repz
adc
lods
or
sbb
movd
rcr
nop
insl
jmp
jp
sbb
cmp
and
ret
cvtps2pd
loope
lahf
mov
mov
in
xor
sub
test
dec
mov
ror
call
mov
add
scas
notl
jno
fcoml
test
sub
stc
aam
in
and
arpl
jae
inc
pmulhw
push
into
xchg
repnz
add
xchg
in
sub
lcall
test
lods
rcrb
ret
mov
cltd
and
out
insl
mov
std
and
icebp
int3
lds
mov
incl
ret
movb
lahf
incl
adc
out
das
xor
jae
cltd
adc
pushf
cld
sbb
mov
mov
mov
add
cli
mov
lds
xlat
inc
xorb
push
and
addr16
jnp
jmp
inc
adc
pop
outsb
add
scas
pushf
cmp
add
test
adc
js
xlat
int
xchg
in
inc
jne
xor
jo
sub
pusha
loopne
fistpl
mov
sub
mov
xchg
and
repz
mov
jp
jno
push
inc
adc
jg
fnstcw
cmc
nop
mov
jno
xor
inc
stc
xor
jns
or
jmp
mov
leave
out
popf
mov
popa
mov
divl
push
fisttpll
inc
insw
mov
aas
pop
xor
shlb
repnz
stos
lret
test
idivl
out
mov
loope
cs
jns
add
cwtl
mov
jno
jno
jge
jge
jae
lcall
mov
mov
jb
fdivr
ret
or
dec
in
push
ret
rolb
rcrl
enter
mov
testl
stc
xchg
cmp
dec
xchg
pop
add
loope
add
jmp
addr16
ret
cli
xor
push
mov
dec
hlt
sbb
jae
push
popa
sub
pop
imul
popf
jno
dec
out
fstl
mov
inc
arpl
mov
das
scas
and
mov
repz
mov
sub
pop
sti
dec
shlb
push
sahf
or
subl
mov
bound
rcrl
test
leave
sub
xchg
test
mov
cltd
scas
and
pusha
push
pop
daa
das
cli
stc
repz
nop
lret
push
cmpsl
push
push
lahf
lahf
jl
push
arpl
data16
pop
lods
pop
pop
andb
ljmp
cld
or
movsl
push
cmp
gs
xchg
jge
orb
dec
scas
outsb
cmc
lods
cmp
xchg
xchg
fisubl
mov
imul
ficoms
mov
stos
stos
lret
imul
push
mov
jns
dec
mov
loope
mov
xlat
arpl
adc
pop
jecxz
or
cld
aaa
cs
or
sub
mov
in
cmp
pop
sysexit
push
jns
push
mov
pop
int3
inc
ficoms
stc
mov
lret
lahf
or
inc
lds
mov
fldln2
sti
stos
and
mov
loopne
pop
cld
push
or
into
pop
sti
mov
mov
mov
sbb
les
cmp
aam
je
popa
jo
test
stos
pop
adc
and
adc
or
add
xchg
cmp
fistpll
movsl
push
jle
mov
movsl
stc
mov
jmp
lea
stos
cwtl
mov
jbe
jo
popf
mov
cmp
stos
pop
rolb
xlat
sub
pop
pop
mov
mov
ja
sahf
clc
mov
cltd
fnsave
daa
mov
sbb
enter
imul
push
cmpsl
jle
lcall
cmp
test
or
sar
mov
lods
xor
or
aad
mov
push
mov
jne
sub
stos
sbb
clc
inc
or
sub
push
push
js
adc
popfw
ret
mov
ret
push
pusha
mov
mov
popf
sahf
das
mov
inc
mov
stos
mov
fimull
xor
mov
dec
jge
popa
stos
mov
and
xor
mov
ja
idiv
xchg
jae
lcall
clc
adc
jge
add
repnz
mov
jbe
dec
mov
jbe
push
adc
notb
push
mov
cs
jae
mov
mov
cmpsb
sbb
xchg
out
addl
neg
mov
sub
sbb
or
mov
push
movl
nop
pushf
test
pusha
pop
pop
or
pop
inc
insl
mov
pop
int3
in
test
rorl
inc
addr16
mov
loop
in
shll
imul
inc
sub
xchg
and
sahf
sbb
test
lods
int
and
in
pop
insl
in
mov
cmp
rclb
xchg
ljmp
fs
in
push
ror
xor
jge
pusha
push
mov
rclb
popa
mov
lea
xor
push
push
push
nop
inc
cwtl
cwtl
es
mov
ja
jge
adc
scas
aaa
or
add
push
neg
rcr
jmp
je
cmp
stc
mov
arpl
sahf
xlat
and
cmp
das
inc
repnz
sbb
cli
xorl
cmp
into
mov
sub
mov
add
and
and
pop
jne
jge
lret
push
push
fcmovb
xchg
cs
gs
adc
or
shll
aas
mov
or
ja
push
cmp
push
test
ss
jl
push
pop
cld
cld
jo
test
jb
jne
fldt
imul
rorl
cmc
push
fcoms
pop
xor
out
pop
jle
pop
dec
sahf
scas
push
mov
mov
adc
lret
clc
mov
push
sub
push
sub
pushf
add
and
and
and
divl
add
jns
aas
jns,pn
mov
jne
pop
lods
lock
cmp
mov
cmp
es
insb
inc
stos
es
push
xorl
repnz
xchg
mov
xor
int3
add
aas
outsl
pushf
test
cmp
sub
lods
data16
push
fyl2x
cld
adc
icebp
imul
pop
data16
insb
dec
data16
loopne
loop
les
mov
cwtl
and
lcall
and
jmp
mov
into
in
inc
mov
pop
addr16
xchg
pop
adc
cmp
daa
pop
push
aas
mov
idivl
mov
cwtl
mov
and
adc
les
aad
fcmovnb
out
push
sbb
repnz
xor
mov
dec
fists
push
rcrl
mov
xchg
shl
nop
xchg
or
cmp
xor
movsl
leave
pop
jp
mov
adc
out
mov
or
sbb
mov
sub
mov
jmp
daa
sub
fcoml
adc
push
sbb
movsb
mov
lahf
shrl
add
inc
adc
aad
in
pop
and
mov
cltd
popf
call
daa
xchg
add
xlat
je
sub
pop
ds
cmpsl
lcall
enter
clc
add
ret
outsl
test
lahf
ss
ftst
roll
jo
dec
push
fcmovu
frstor
out
adc
cmovnp
jb
jp
bound
dec
and
nop
mov
js
ret
inc
mov
xor
fcomps
dec
enter
cmp
and
ret
push
pop
lods
cwtl
ret
cmp
dec
icebp
adc
clc
imul
and
xchg
ret
mov
push
nop
or
sbb
jle
lods
out
sets
push
fcoms
pop
xor
add
into
mov
or
pop
pop
or
pop
bound
stc
or
dec
fisubs
xorb
mov
mov
jg
dec
xchg
popa
xor
mov
pusha
clc
ljmp
jecxz
or
pop
xchg
xchg
mul
adc
iret
push
lock
adc
sub
fs
iret
dec
rolb
mov
xchg
rcrl
repz
dec
inc
mov
pusha
mov
loope
xchg
arpl
sbb
sub
mov
int
mov
rcrl
sbb
js
xor
fistps
mov
add
add
loope
mov
gs
out
icebp
js
mov
adc
loope
ljmp
int
xchg
inc
add
test
js
insl
or
pop
add
jl
dec
dec
fiadds
jg
negl
push
dec
jp
dec
data16
mov
out
mov
enter
mov
lcall
add
ss
popa
pop
push
pop
mov
mov
lahf
test
lods
xor
inc
test
movsl
mov
orb
adc
inc
inc
fisttpl
lret
int3
cmpsl
mov
jns
fildl
call
add
div
jge
add
sub
mov
cld
mov
rcrl
aad
int
sub
sbb
pusha
add
inc
or
es
jno
stc
sub
neg
lods
push
popa
add
int3
cmpsl
xchg
dec
cwtl
outsb
icebp
stos
ds
jmp
mov
jbe
leave
lret
adc
popa
push
iret
push
out
adc
jne
pushf
imul
add
cmpxchg
jg
pop
stos
pop
lret
sub
mov
xchg
pop
or
jle
fdivs
loop
sbb
comiss
in
out
mov
fistps
dec
imul
lods
mov
add
mov
push
gs
dec
aaa
jo
int3
enter
adcb
jne
out
gs
mov
ljmp
pop
scas
ret
into
fldz
jb
push
enter
push
adc
cs
sbb
pop
fbld
add
mov
sub
jnp
rorl
aad
sti
and
adc
ds
and
ds
dec
jl
xlat
fld
xchg
add
inc
sahf
lock
fstpl
rcrl
dec
out
lods
cmp
jmp
out
mov
fbld
mov
dec
push
mov
ds
rolb
push
in
pop
jne
lds
fdivrl
mov
xchg
int3
sbb
arpl
push
sti
repz
mov
mov
add
inc
dec
push
lods
dec
jno
jg
mov
push
sbb
arpl
rcll
mov
addr16
xchg
or
popf
popf
lods
int
adc
push
inc
in
bnd
out
xor
popa
subb
cwtl
bound
lret
inc
inc
xor
int
leave
call
dec
bound
pop
aad
js
das
mov
testb
inc
sbb
xor
dec
and
inc
sub
clc
inc
jp
add
subb
xchg
cmp
xchg
mov
std
stos
out
jmp
lods
test
imul
jne
dec
add
sub
cwtl
fcomi
push
loopne
lds
mov
dec
int3
fbld
push
daa
fcomp
cmp
inc
push
sahf
aam
insb
jl
push
mov
mov
hlt
cmpl
sbbl
pop
inc
fnstenv
scas
sti
dec
scas
sti
and
testb
outsb
cltd
pushf
fldenv
cmp
inc
or
mov
dec
add
cmc
sub
in
lock
ror
mov
out
push
out
imul
sub
lds
sub
push
fs
aam
push
or
je
mov
mov
mov
fstps
xorb
inc
fbld
xchg
cmpsl
sahf
test
nop
mov
loopne
xlat
push
pushf
pop
xorb
std
and
dec
mov
mov
into
ja
xor
pop
push
and
int
xchg
pop
ja
cmp
pop
aam
pop
inc
add
mov
mov
add
jg
adc
mov
add
jne
jmp
sbb
enter
add
lods
add
fwait
adc
hlt
lret
mov
push
jno
cld
add
adc
int3
dec
xchg
jae
mov
and
add
mov
mov
int
adc
aas
sbbb
cmpsb
dec
pop
leave
jp
adc
adc
and
in
push
in
sbb
pop
mov
lret
add
lock
bnd
das
pop
lcall
sub
aad
mov
or
daa
das
testl
stos
xchg
loopne
ljmp
push
cmp
aad
xor
pop
mov
xorb
adc
rorl
pop
or
jl
xor
mov
dec
or
pushf
jo
mov
jns
jb
loope
popf
repnz
je
sub
repz
mov
mov
out
sub
cmp
mov
stc
insl
loopne
push
mov
rcrl
loop
loopne
insb
jge
scas
ret
into
stos
jl
or
and
sbb
xchg
xchg
in
fs
loop
out
cmp
adc
mov
sbb
hlt
dec
jne
mulb
adc
xchg
add
cmp
cmp
out
das
adc
fucomp
dec
stc
shl
add
pushl
mov
xchg
inc
cmp
adc
push
push
fbld
mov
mov
lahf
inc
dec
lea
fst
pusha
jno
dec
jg
aam
cmpsb
cli
pop
outsl
dec
mov
and
and
icebp
das
inc
adc
jo
jne
notl
shr
stos
fldl
aad
nop
and
test
pop
jl
loopne
push
inc
or
mov
rolb
pusha
aad
cmp
lock
rol
out
pop
adc
dec
rep
xor
pop
add
xor
cmpsb
movsl
push
jle
and
mov
xor
cs
daa
movsb
and
arpl
add
int
test
lds
and
xor
inc
lods
ficomps
fsubl
dec
sbb
pop
clc
mov
into
sarb
rcrl
test
and
jmp
aam
outsl
clc
movsb
dec
lods
fidivrl
mov
cmp
or
rcll
mov
pop
xor
sub
and
repnz
cmpsb
dec
or
jle
std
loop
ds
dec
adc
and
jg
sahf
and
mov
roll
pop
mov
out
add
and
out
and
out
pushf
pushf
mov
in
scas
les
cli
mov
lahf
inc
mov
pushf
fimull
aad
jg
stos
pop
mov
mov
scas
dec
mov
adc
push
dec
sbb
push
adc
lods
or
xor
int3
insl
dec
cmp
xchg
pop
in
sub
xor
push
mov
xchg
loope
test
outsl
leave
sbb
loopne
hlt
inc
adc
sub
popf
and
fists
es
xchg
sbbl
ss
lret
or
adc
fs
jle
mov
pop
push
je
cwtl
inc
xor
lods
sbb
pop
pop
clc
rcrb
jmp
lods
pop
xorb
sbb
mov
adc
lret
nop
gs
shlb
xor
or
in
dec
iret
xorl
xchg
fs
xor
xor
jg
cmp
cmpb
imul
xor
jb
mov
fwait
sbb
shlb
dec
scas
popf
and
movb
sbb
xchg
shlb
sub
movb
sbb
add
pop
mov
or
mov
test
call
std
aaa
into
dec
mov
scas
xchg
dec
xchg
pop
mov
jno
mov
jae
xchg
cmpsb
daa
pushf
or
cmpsb
je
jb
in
aam
call
push
cmp
cmpsb
cmp
js
out
imul
xchg
mov
xchg
nop
mov
in
test
mov
or
xor
jnp
mov
in
pop
jbe
jne
xor
fs
sub
sbb
xor
jge
insl
sub
xchg
sbb
xchg
test
aas
out
or
enter
repz
sub
xor
aam
inc
ret
adc
out
js
scas
ret
jmp
xor
cmp
loopne
ja
xchg
mov
daa
sahf
js
pop
shl
inc
push
add
push
out
jo
sub
xor
xchg
movsl
gs
pop
jno
icebp
add
fdivl
mov
jno
xchg
pop
aam
jl
loopne
jne
lcall
cmp
and
js
sar
ja
rclb
xor
push
aas
jle
sbb
pop
dec
jb
ds
outsb
sbb
mov
arpl
cmp
dec
mov
jge
xchg
add
add
lahf
lret
ds
jecxz
and
fimull
and
lahf
cmpsl
cli
lret
mov
outsb
mov
cmp
mov
or
mov
int3
adcb
xlat
add
addb
inc
int3
cmpsl
decl
js
jnp
imul
mov
sub
xchg
mov
fdivl
xor
gs
and
je
adc
adc
daa
cmc
sub
imull
add
daa
inc
std
lea
pusha
add
mov
inc
cmc
aad
mov
xchg
mov
xor
notl
orl
xchg
cmp
push
push
inc
mov
dec
loope
pop
lock
fyl2x
mov
cltd
lods
or
daa
add
repz
jp
mov
mov
es
dec
cli
mov
push
pop
xchg
sub
mov
insb
cmp
pop
push
stos
das
or
pop
add
sub
movsl
xchg
sbb
add
popa
xlat
mov
or
inc
xchg
mov
push
outsl
cmp
sub
add
push
aaa
ljmp
test
iret
mov
jno
ja
js
mov
aas
pop
rcrb
xchg
arpl
cmp
xchg
jo
push
popf
std
jnp
in
test
or
pop
mov
arpl
dec
sbb
push
popf
adc
out
inc
out
out
pop
ret
in
leave
mov
dec
or
fldt
mov
int3
sti
outsl
mov
sti
mov
jbe
jb
fistps
insl
int3
lret
idiv
xorl
imul
mov
scas
fstl
sub
mov
int
and
mov
inc
mov
aam
cld
mov
je
xchg
ret
fcomps
jecxz
push
js
stc
aad
sub
and
iret
mov
sub
insl
cmp
push
cltd
inc
das
xor
cmp
test
fdivrs
mov
jbe
jle
add
jl
dec
addr16
into
sbb
mov
pop
xchg
bound
pushf
mov
sub
lods
mov
sub
jbe
dec
sbb
push
stos
aas
ja
mov
out
rcl
cmpl
pop
cmp
out
lds
pop
xchg
call
insl
pop
xor
loopnew
in
lds
jne
and
bound
fs
outsb
ds
jb
bound
in
sarb
or
sbb
sbb
add
in
cmpb
inc
cmc
cltd
pop
mov
xor
inc
sub
xchg
mov
sub
inc
add
sbb
pop
ja
clc
jb
ljmp
lods
sbb
xchg
fwait
iret
and
adc
jno
pop
divb
outsb
repnz
cltd
or
fiadds
mov
mov
push
out
inc
in
pop
cmpsl
xor
mov
push
test
mov
fsub
popf
roll
and
shrb
push
pop
int
repz
fisubrs
push
inc
ret
pop
xchg
imul
lods
fistpll
and
into
cltd
jg
cmp
pop
popf
addl
cld
xor
roll
sub
es
or
mov
pop
inc
in
bound
les
js
stos
jne
inc
or
mov
fsubrl
inc
sarb
fistpll
mov
or
cmc
pop
dec
xchg
sbb
cmpsb
movq
xchg
daa
sub
int3
scas
push
pop
xchg
mov
mov
mov
rolb
pop
sti
aam
test
enter
dec
rcrl
mov
xor
arpl
xchg
mov
push
push
mov
mov
pop
sbb
inc
inc
xchg
mov
mov
adc
and
fwait
mov
push
scas
mov
outsl
int
cmp
adc
sarl
insl
js
mov
pop
jecxz
adc
roll
dec
pop
pop
adc
jo
ljmp
sbb
daa
xor
sbb
cmpb
test
sbb
pop
cmpsb
pop
dec
pusha
movb
and
inc
ret
in
dec
sub
mov
jp
jns
xchg
sbb
pop
rolb
sbb
fwait
cmpsb
popf
cmc
shrb
enter
sarl
in
sbb
ret
pop
mov
bound
adc
jg
rcrl
pop
add
inc
pop
sahf
xchg
pop
jp
daa
lds
xchg
fldenv
xchg
out
shrl
dec
lcall
lods
add
repz
sub
ret
test
and
orb
test
cld
in
int3
fdivs
cld
loopne
hlt
imul
push
push
inc
mov
test
lods
fisttps
test
mov
nop
xchg
gs
ret
pop
pop
xchg
daa
loopne
pop
nop
push
add
push
arpl
int3
js
mov
ja
and
or
xchg
outsb
push
inc
lea
push
jle
mov
adc
jnp
into
sub
orb
fyl2x
aam
outsl
dec
push
stos
imul
jge
and
mov
add
mov
nop
loop
loopne
push
repnz
cmp
or
jl
jmp
sar
jl
insl
shlb
aam
mov
sar
cli
test
lock
into
aas
in
dec
scas
ss
imul
mov
mov
leave
adc
inc
hlt
xchg
sbb
out
push
ret
sahf
faddl
pop
dec
les
lret
ja
or
mov
inc
hlt
popa
inc
lods
sbb
and
leave
std
jl
mov
add
leave
aaa
mov
and
bound
lods
jb
notb
mov
into
mov
xchg
jnp
out
dec
insb
add
cmp
cli
mov
pop
sub
and
mov
sub
pop
test
fwait
mov
add
cmc
subb
repnz
add
jmp
ja
push
jmp
xor
imul
jge
cmp
xchg
arpl
or
insb
insb
lds
jge
xchg
mov
lea
cmp
out
push
stos
outsl
lea
mov
stos
pushf
fistl
mov
or
sbb
test
daa
ficoms
push
push
aas
sbb
imull
mov
stc
jg,pn
imul
pop
push
cli
xchg
and
adc
dec
stos
rcrb
imul
ljmp
sbb
add
push
dec
fdivp
dec
testb
fstpl
add
mov
lret
xchg
shrb
shlb
push
pop
sub
aas
mov
jae
xchg
adc
idivl
sub
addr16
ss
mov
hlt
jbe
stos
inc
pop
jle
lods
bound
xchg
lds
sbb
or
sti
in
xor
cltd
mov
inc
mulb
push
cmc
dec
aam
mov
push
rcrl
inc
and
jecxz
pop
or
daa
into
jge
out
push
push
sbb
push
adc
data16
xchg
xchg
stos
cmp
lcall
xchg
cmp
or
addl
mov
mov
out
int
xor
xor
fidivrl
daa
cmp
add
test
dec
sbb
aaa
pop
rcll
cwtl
leave
add
sbb
and
jle
adc
lret
dec
in
sbb
xchg
cmp
nop
idivl
push
aas
jo
std
adc
mov
adc
sub
mov
pop
inc
mov
icebp
sbb
jp
jge
cmpsb
mov
push
in
pop
pusha
and
icebp
pextrw
xchg
fcoml
inc
pmaxub
iret
mov
in
sbb
cmp
and
push
clc
dec
lret
shll
mov
mov
leave
sub
mov
jb
repnz
cmp
push
std
movsl
call
inc
sarl
aad
inc
roll
ss
cmp
jmp
mov
insl
sbb
insb
mov
dec
cmpsl
mov
cmpsl
pushf
cmpsl
pop
sbb
dec
insl
push
xor
cmp
mov
xor
push
lods
adc
adc
out
cmpsb
aad
adc
jecxz
or
jnp
jo
rcrb
xor
dec
pop
das
jno
bound
lods
leave
xor
jp
xor
jnp
rorb
rorb
lods
sub
mov
test
xor
push
mov
lea
sahf
lods
sbb
add
setge
rorb
and
jbe
ret
fs
clc
mov
xorb
outsb
out
pop
pop
test
testb
jl
aam
add
in
ror
sti
push
push
fimull
adc
push
inc
aad
adc
dec
push
in
fwait
js
pop
mov
std
push
dec
lds
test
or
addr16
js
xor
xlat
inc
or
iret
mov
mov
int3
or
mov
in
mov
scas
xor
cmpsl
jp
and
or
fisttpll
jae
push
out
lds
enter
jnp
push
test
aad
xchg
loopne
leave
jns
cltd
in
aad
jno
std
adc
xchg
jle
push
push
mov
arpl
nop
das
and
push
push
lods
loopne
in
repnz
jle
lret
cmc
jge
stos
pusha
add
movsb
push
in
xor
fsubs
jge
sub
imul
xchg
call
sub
xchg
jmp
sbb
sub
rcrl
ret
scas
leave
mov
ret
or
cltd
jne
add
gs
xor
xchg
mov
mov
mov
jmp
add
test
cmp
lds
dec
loopne
and
cmp
test
xchg
hlt
pop
and
cmc
scas
repnz
xchg
hlt
or
jge
fdiv
mov
loop
cwtl
in
cmp
loope
enter
xor
fwait
ret
out
ljmp
test
lahf
outsl
es
sbb
jecxz
xchg
sub
pop
inc
in
call
sub
jge
insl
les
push
leave
je
adc
jno
adc
int3
pop
in
mov
js
daa
imul
popf
popf
xchg
cmp
push
bound
xchg
adc
mov
or
daa
mov
daa
in
and
jmp
xchg
and
mov
daa
push
or
call
bnd
andb
dec
repz
out
into
inc
xchg
shlb
jae
loope
fwait
shrb
inc
jb
int
mov
inc
outsb
mov
sub
xor
add
sti
jb
pop
orb
jmp
dec
mov
int3
inc
cmp
lock
scas
pop
loope
mov
sbb
pop
lret
shrb
or
sub
dec
add
jmp
xlat
int
cmp
je
cmovp
push
xchg
add
jno
movsl
arpl
inc
xor
xchg
inc
or
adc
cli
mov
cwtl
cmp
mov
das
movsl
cmp
inc
pop
sub
out
movsb
cmpsb
mov
clc
insl
int
lds
sub
loopne
clc
repz
lds
lods
shll
dec
mov
ret
rorb
shrb
cltd
nop
cli
jae
inc
inc
jne
nop
push
nop
fwait
js
imul
fdivs
test
mov
jge
es
cmp
push
mov
int
dec
push
jl
or
mov
scas
jle
push
mov
es
je
push
subl
xor
jo
cltd
and
pop
adc
nop
movsb
fwait
outsb
or
cwtl
mov
push
nop
setp
mov
cltd
repnz
rorb
iret
or
adc
popf
pop
adc
xchg
imul
adc
mov
arpl
les
dec
mov
push
mov
lcall
sub
push
push
rcll
and
mov
or
cltd
popa
adc
lret
pop
jae
stos
mov
ss
shlb
aam
jb
push
xor
ja
sub
sti
mov
out
pop
out
push
insb
sbb
repnz
xchg
call
and
pusha
stc
mov
push
mov
pop
push
pop
and
iret
loop
popf
data16
mov
xchg
push
pop
ljmp
or
ret
mov
dec
ret
outsl
in
jmp
jmp
cmp
or
stos
xor
xor
jb
ds
test
inc
not
cwtl
ds
or
fwait
xchg
push
xor
lret
scas
btl
and
push
inc
sub
bound
mov
fs
lret
push
pop
mov
leave
arpl
call
pop
hlt
lds
dec
lock
add
add
out
mov
inc
add
mov
sbb
aas
add
mov
in
mov
test
sbb
lods
jno
sub
mov
outsl
and
mov
add
push
enter
pop
jle
sub
cmc
or
jge
dec
mov
sbb
push
xchg
jnp
in
nop
loop
xor
mov
push
ljmp
arpl
push
scas
push
xchg
lods
cltd
inc
xor
ja
pop
jae
daa
cmp
jne
push
insl
or
cvtps2pi
inc
jg
scas
add
mov
push
enter
ret
jmp
xchg
mov
sub
jg
sbb
cwtl
std
aaa
inc
cs
test
mov
imul
mov
xchg
jae
dec
rcl
or
add
mov
pop
dec
jg
dec
in
sbb
insb
inc
sbb
sub
sbbb
inc
sub
jl
pop
and
shl
xor
xchg
mov
dec
movsb
sub
add
cwtl
das
insb
mov
pcmpgtw
add
or
and
jmp
mov
xchg
adc
lret
xlat
shrb
push
xchg
ret
fnstenv
int
or
xorb
mov
aam
sub
ss
xchg
jnp
fxch
into
pop
mov
stos
sarb
lret
adc
mov
mov
std
pop
divb
mov
popa
add
cmp
call
in
cwtl
sbb
lock
sbb
scas
jbe
lea
and
stc
cmc
out
push
repnz
dec
mov
out
fisttpl
and
jnp
xor
mov
lods
xchg
xlat
cmp
mov
jg
repz
push
je
movsb
leave
popa
mov
repnz
imul
xchg
pop
pop
cmc
dec
inc
adc
out
push
sub
imul
sub
mov
pop
mov
push
fcomps
mov
inc
jns
or
and
cmp
lret
mov
test
cwtl
sub
enter
imul
mov
les
roll
imul
stos
dec
mov
int
rol
stos
xchg
roll
xor
mov
fs
ja
mov
inc
out
insl
mov
cmp
jae
dec
push
pop
int
mov
aaa
mov
inc
jl
mov
and
xchg
mov
fsub
stos
jp
mov
fdiv
inc
cld
sub
mov
xchg
pushf
loope
mov
xchg
and
adcl
push
outsb
idivl
pusha
icebp
and
sub
cmc
movsl
stmxcsr
imul
out
fnstsw
rcll
push
in
jmp
sbb
inc
popf
mov
fcompl
mov
aad
push
xchg
ljmp
ficompl
mov
pop
adc
add
jnp
pop
daa
out
lret
pop
push
pop
insl
mov
and
dec
dec
and
sahf
add
cmp
call
scas
movsl
jno
xchg
push
mov
jl
inc
lea
into
sub
dec
lahf
mov
and
ljmp
arpl
xlat
push
fcompl
ss
lods
ret
rolb
imul
sub
fcomps
lock
mov
or
andl
cmp
pop
mov
movsl
pusha
cmp
test
push
ret
popa
call
movsl
mov
dec
fwait
in
jae
popf
inc
inc
mov
mulb
and
leave
rorl
mov
sbb
fdivrl
ficoms
xchg
inc
addr16
mov
mov
mov
les
inc
jnp
mov
sbb
dec
nop
shll
xchg
dec
jge
or
and
xchg
jno
das
jo
ret
adc
xor
pop
icebp
aaa
mov
jo
fs
repnz
fsubrl
std
imul
xor
sub
leave
fcmovbe
fwait
cmc
xor
dec
ja
ret
jp
cmp
mov
movsl
pop
jge
stos
repz
mov
std
scas
xlat
outsb
sbb
icebp
hlt
or
inc
sub
clc
inc
fwait
xor
lret
mov
mov
roll
outsl
enter
rorl
int3
test
loopne
mov
jl
pop
das
add
dec
mov
inc
mov
fcomps
cs
push
push
ljmp
fdivrp
subl
fcomps
in
lahf
dec
clc
fadds
inc
mov
jmp
mov
sarl
adc
movsl
xlat
in
icebp
scas
loope
hlt
daa
sahf
xchg
mov
stc
sbb
js
fisttps
ror
xor
pop
pop
popf
cmp
mov
push
shlb
shll
push
xchg
les
mov
mov
lahf
std
push
mov
xchg
push
xor
lods
imul
pop
push
inc
mov
pop
ret
push
mov
ljmp
lods
pushf
clc
sbb
push
lock
imul
outsl
xchg
cmp
sarl
push
test
inc
cli
adc
ds
je
ret
push
lds
lock
ret
and
jnp
fscale
pop
loopne
inc
push
adc
lcall
lods
sbb
xor
mov
ret
inc
icebp
pop
sbb
xor
xchg
sub
in
and
repnz
rcrb
cmp
pop
sub
in
add
stos
inc
mov
mov
jns
and
je
xbegin
mov
mov
cmp
movl
mov
inc
lret
outsb
mov
push
ret
rcrl
ja
push
stos
push
mov
sub
mov
push
xchg
std
jmp
xchg
mov
or
and
jg,pt
push
pop
decb
outsb
mov
fisttps
cmp
fs
stc
fists
lods
das
sbb
xchg
std
std
sub
adc
scas
add
pop
push
lods
lds
in
imul
aas
test
mov
pop
imul
clc
sahf
mov
mov
jecxz
fstps
lock
adc
sbb
lds
call
jecxz
jae
pop
push
xchg
mov
mov
inc
inc
inc
adc
mov
mov
clc
push
ficoms
les
call
incl
hlt
add
fdivrs
mov
jnp
mov
push
push
mov
ret
cltd
sbb
fcmovu
sarl
dec
leave
mov
mov
test
xor
shll
ja
push
call
fiadds
loope
and
test
cmpsb
push
cld
xchg
cld
pop
jecxz
inc
lahf
cmp
sbb
xlat
push
dec
add
lret
adc
pushf
push
pop
data16
push
cmpsl
push
mov
xorl
imul
fmuls
cmc
fwait
mov
xor
mov
dec
bnd
je
inc
ss
lret
insb
xchg
add
or
shrb
stos
sub
fwait
add
jl
das
insl
inc
xor
mov
out
and
in
movsb
xchg
jge
sub
dec
sbb
popf
arpl
ret
mov
mov
mov
repz
addl
adc
iret
xchg
int
out
cmp
scas
repz
insl
jg
outsl
mov
xor
sub
pop
sub
push
xchg
stc
scas
orl
inc
inc
add
int3
ljmp
hlt
or
sub
or
lret
and
inc
dec
shlb
sub
pop
jecxz
out
leave
add
or
jne
nop
mov
aad
jno
pop
push
test
lret
mov
jle
mov
or
cmpsl
mov
ja
rcr
scas
lcall
dec
cld
dec
ret
mov
inc
neg
mov
sub
cmpsl
add
cltd
xor
addl
das
sahf
adc
into
jae
push
push
int
or
fucomi
pushf
sub
into
add
pusha
addr16
lds
push
shr
in
inc
xchg
pop
leave
inc
orb
lret
sbb
int3
pop
jl
xchg
sahf
mov
pop
insb
sbb
push
jnp
and
les
movsl
pop
roll
incl
movsb
sti
xchg
out
sub
in
mov
test
pop
stos
fs
int
push
cmp
mov
xchg
adc
into
xchg
loop
jecxz
jmp
mov
imul
shlb
test
lret
pop
push
scas
cmp
adc
xchg
cmp
and
and
add
pop
lds
push
add
and
add
ss
in
add
or
mov
ss
fisubs
ja
out
lds
test
ret
pop
lods
inc
das
dec
aad
movl
sbb
nop
int3
jmp
cld
mov
sbb
or
sbb
pop
push
pop
mov
ror
cld
decl
cmp
or
out
xor
sahf
and
push
adc
inc
ds
je
mov
jo
lret
out
and
sbb
loop
mov
xor
and
daa
add
stos
cmp
mov
mov
push
push
adc
insb
aam
mov
outsb
ja
ja
in
shrb
xchg
jmp
cli
sbb
testl
daa
push
or
imul
jl
pusha
xor
inc
jp
aas
xchg
push
pop
out
loope
test
push
adc
in
mov
mov
adc
loope
sbb
imul
mov
test
mov
mov
push
pop
notb
xorb
or
dec
mov
dec
mov
pop
outsl
pop
cmp
xor
rorl
cmp
sub
xchg
xor
add
idivl
dec
insb
lods
insb
mov
mov
andl
push
xchg
mov
icebp
inc
stc
iret
jecxz
scas
leave
mov
pop
lret
lcall
adc
ljmp
add
loopne
xor
xchg
pop
sub
fwait
movsb
xlat
pop
cmc
movsb
jl
out
lret
repz
sub
dec
cmpsb
stc
lock
mov
dec
loop
insb
int
lahf
dec
addb
test
add
dec
int3
shll
pop
sub
push
lea
dec
insb
test
mov
mov
cmp
ljmp
fldenv
push
adc
cmp
and
jb
jecxz
pop
iret
fidivl
lock
popa
out
cmpsl
into
je
jno
fnstenv
addb
loopne
out
call
cld
cmp
lea
pop
xchg
pop
int
inc
add
popf
loope
or
dec
sahf
jge
pop
ret
xchg
add
xchg
sbb
repz
dec
out
cmc
push
pop
stos
aas
pop
dec
sbb
daa
pop
push
cmc
mov
bound
es
xor
mov
jge
mov
in
lea
adc
inc
push
daa
cmpsb
xor
loop
mov
add
icebp
fildl
inc
fstpt
jg
push
hlt
cmp
das
pop
mov
jp
outsb
jecxz
xor
sub
popa
fimuls
inc
test
inc
or
mov
lea
js
mov
sbb
adc
or
jno
add
out
xor
out
dec
and
ja
push
xor
dec
xchg
inc
jge
xchg
mov
or
mov
xchg
and
inc
xchg
daa
pop
adc
cs
call
gs
push
dec
lahf
ds
mov
shll
push
dec
out
jecxz
lret
mov
mov
xchg
loopne
lea
adc
pushf
je
mov
cmp
mov
iret
jbe
jg
push
cmp
adc
mov
mov
pop
rclb
sbb
dec
fnstcw
xchg
mov
push
add
lcall
cmp
outsb
jae
pop
cmp
cmp
push
and
xor
cld
addr16
shufps
jl
fdivrl
sahf
sub
push
lcall
and
push
dec
jo
cmp
test
sbb
das
inc
mov
jmp
sub
mov
out
out
jle
ljmp
pop
stos
hlt
pushf
push
das
and
or
cmpb
adc
fisubrl
ljmp
hlt
cmpsb
sub
push
out
test
scas
in
jb
jns
sbb
out
aas
fs
add
icebp
stos
outsb
lds
inc
pop
test
mov
pop
inc
loop
mov
fbstp
inc
and
pop
xor
xor
stos
inc
sahf
jecxz
pushl
scas
test
push
bound
cmove
cmp
cmp
in
mov
sbb
push
arpl
insb
xor
mov
ret
rcrl
adcb
cmpsb
mov
xor
lahf
mov
push
mov
jae
jnp
fsubrs
jg
jp
pop
enter
sub
addb
sub
xor
ret
loope
sarb
stos
push
addr16
fs
loope
cli
ret
push
sub
xchg
sbb
in
imul
mov
iret
mov
stos
popf
sbb
or
inc
mov
xor
sub
mov
adc
push
mov
jmp
cmpsl
pop
out
sub
adc
iret
and
fimull
in
push
and
pop
out
psubusw
negb
mov
jmp
push
cmp
adc
push
or
in
xlat
xor
ja
inc
outsb
imul
aad
add
xchg
cli
jne
scas
xor
cmp
mov
xchg
cltd
icebp
push
cs
mov
ret
cmp
adc
xchg
lret
sub
imul
cwtl
mov
mov
add
test
push
xor
sub
xor
fwait
lock
cs
int3
and
dec
cmp
mov
adc
outsl
sub
mov
or
daa
mov
leave
or
cmp
jnp
out
arpl
sbb
mov
sub
cltd
sub
leave
cltd
xchg
rorb
mov
and
sbb
push
xchg
fwait
add
lcall
inc
pop
hlt
jb
dec
adc
lea
jne
xor
jno
or
jae
mov
cli
into
jle
xchg
popa
out
pop
fiaddl
fisubrl
loop
test
jmp
movsl
mov
cmp
or
stos
lahf
jge
ret
jnp
cmc
sahf
daa
leave
popa
xchg
call
sub
sbb
cmp
lcall
sub
sbb
cmp
inc
rcl
test
and
adc
rclb
andl
stos
cmc
mov
add
add
or
ja
sbb
testl
imul
loopne
out
loope
mov
xor
xchg
xchg
xor
cltd
scas
push
pusha
cltd
out
mov
push
lods
or
repnz
aaa
mov
mov
mov
mov
adc
mov
xor
xor
movsl
notl
fnstenv
cmpsl
jno
hlt
les
imul
jge
adc
sub
inc
sbb
decl
loop
fisttpl
adc
out
cmp
dec
mov
sbb
and
cli
mov
loope
movsl
icebp
test
mov
add
hlt
pop
je
inc
scas
adc
push
lea
pop
jb
jmp
sahf
int3
lods
inc
ds
dec
fwait
pop
cld
popa
mov
mov
jo
enter
test
pop
test
fidivrs
daa
and
mov
sbb
stc
fldcw
jmp
push
push
dec
out
arpl
mov
imul
or
xchg
dec
push
mov
inc
lds
loop
push
jb
mov
loopne
push
adc
test
iret
push
xor
in
or
mov
mov
lret
jge
icebp
ljmp
push
push
icebp
sub
fcomps
icebp
movsl
mov
dec
cli
sub
or
mov
and
mov
xor
inc
sub
rorb
test
inc
sub
push
push
mov
fstl
nop
cld
fsubr
mov
dec
mov
in
push
dec
xchg
pushf
pop
and
cmpsb
int
out
xlat
or
cmp
outsl
jg
dec
jmp
mov
out
and
pop
std
ret
decl
pop
mov
xchg
aam
lret
dec
imul
jmp
cltd
jg
dec
xor
jb
iret
pop
movsb
push
lods
icebp
in
loop
aaa
cli
dec
sbb
into
shrb
fucomi
cmp
stc
mov
out
cmc
xor
inc
leave
push
inc
lcall
sub
cmp
jnp
mov
aam
addr16
sbbb
adcl
loopne
popa
cltd
ss
dec
ja
lods
mov
fnsave
test
arpl
dec
out
mov
jns
push
inc
into
out
cli
lret
sahf
popf
push
or
cmpsl
dec
dec
jl
imul
bound
push
push
push
outsb
daa
jae
mov
xor
test
enter
cmp
push
cli
sbb
fidivrs
jle
mov
sti
cli
cld
push
jmp
movsl
mov
add
xor
mov
sbb
pop
xor
sub
mov
mov
xchg
inc
inc
leave
arpl
test
pop
push
mov
in
jbe
push
cmp
jnp
aaa
cmp
bound
inc
lret
dec
sbb
jp
push
gs
cmp
sub
jl
xor
cmp
mov
testb
into
popa
add
jecxz
inc
insb
ret
mov
outsb
scas
stc
sbb
cmp
jg
mov
hlt
ret
jbe
sbb
add
push
lret
adcl
xchg
add
jecxz
xor
jo
mov
mov
dec
nop
or
dec
pop
push
movsb
adcl
xor
cli
jg
je
push
jne
pop
push
out
ss
jo
push
je
xchg
add
nop
scas
lods
xchg
mov
dec
sub
mov
in
pushf
arpl
xchg
xor
adc
pop
jge
fdivl
fiaddl
int
sbb
dec
pushf
into
sbb
add
aaa
sar
rcrl
mulb
push
inc
pushf
enter
ds
test
ja
add
pop
arpl
xlat
mull
stos
push
mov
cs
or
lds
testl
gs
lcall
orb
pop
jb
sbb
call
or
pop
mov
inc
mov
dec
icebp
clc
pop
push
jno
addl
xchg
adc
adc
imul
fcmove
push
inc
sub
mov
xor
lret
cmp
add
push
leave
dec
xlat
push
push
das
sbb
fs
jo
scas
jp
cmp
cmp
mov
dec
lods
jge
or
cmp
das
cmpsb
negl
lods
pop
sarb
xor
xchg
mov
cld
jmp
fcompl
mov
stc
popa
push
mov
hlt
jo
xchg
minps
into
or
push
jecxz
cli
pop
mov
jle
pop
pop
jl
push
pop
insl
mov
mov
out
xor
adc
xor
cmp
push
lahf
hlt
js
jg
add
ret
ss
and
cs
xchg
enter
dec
call
inc
mov
sub
xchg
jnp
decb
fs
out
mov
call
ret
mov
adc
jb
out
jne
jl
xor
dec
and
mov
or
outsb
cld
outsb
push
das
add
xlat
push
icebp
pop
xor
mov
repnz
dec
mov
lea
aad
and
das
mov
push
daa
fdivrs
push
movsl
mov
and
rcrb
les
insl
push
add
dec
addr16
push
dec
pop
sub
clc
cmp
daa
into
xchg
push
stos
lods
aad
outsb
in
stos
rorb
cwtl
adc
ljmp
mov
inc
mov
xor
mov
and
fs
xlat
rcll
cs
mov
imul
fcomps
jbe
mov
jo
mov
dec
xor
push
push
aam
xchg
ja
dec
stos
mov
or
ret
sub
inc
enter
jl
push
lea
inc
aaa
vpavgw
cmp
out
mov
fstl
or
fdivrl
and
inc
add
cmc
mov
fnstsw
clc
sbb
fdivrs
stos
xor
xor
movsb
push
scas
aaa
xor
xorl
xchg
add
jno
cltd
adc
mov
bound
mov
test
cmpsb
xor
out
and
mov
xorl
sbbl
jge
xchg
inc
out
pop
mov
xor
out
cmp
testb
sub
jg
push
sbb
push
sarb
pop
daa
mov
pusha
addr16
iret
int3
std
shlb
sub
and
rol
stos
sbb
insl
sub
movb
push
std
xorb
jmp
addr16
cmp
sbb
jb
dec
int
in
inc
lods
or
mov
jo
push
nop
mov
cmp
add
xchg
xchg
shrb
pusha
popa
cmpsb
fmuls
js
jnp
and
mov
jp
adc
sbb
xchg
pop
sub
push
add
cmp
sti
insb
inc
jb
aad
outsb
sti
idiv
scas
iret
fdivp
xchg
clc
inc
stos
aad
aaa
mov
mov
sbb
js
pop
rcr
rclb
into
sbb
add
fadds
push
cmpsb
idivl
cmc
jg
push
sub
pusha
pop
iret
or
lahf
xchg
adc
xchg
mov
loope
mov
popl
sub
cwtl
pop
daa
mov
int3
mov
rorb
xor
and
daa
std
sub
loope
push
cmpl
pop
lahf
daa
popf
loopne
mov
cltd
dec
lods
xchg
idivb
mov
iret
mov
lods
les
leave
mov
jae
loop
cs
lds
xor
xor
xchg
aad
pop
dec
fistps
push
test
sti
test
sub
sbb
fcoms
pop
cmp
cs
pop
pop
in
mov
aaa
outsl
bound
push
mov
in
shl
ret
int
sub
push
aad
inc
test
in
bound
inc
dec
inc
aas
mov
shrl
imul
sahf
icebp
aam
xchg
push
mov
dec
jbe
aaa
dec
or
mov
xchg
shufps
mov
jae
addr16
sbb
sub
push
push
pop
stos
loope
push
enter
mov
dec
pop
dec
andl
insb
push
xor
cmpsl
adc
or
mov
scas
adc
fistpll
cld
inc
js
mov
lcall
fnstsw
cli
fwait
or
inc
xorl
inc
xchg
adcl
popf
mov
mov
pop
cltd
movsb
cwtl
scas
mov
push
addr16
mov
cmpsb
sbb
xor
xor
cmp
aam
dec
int3
iret
aad
push
sub
in
xlat
dec
rcll
cs
cltd
xor
outsl
mov
xchg
sahf
dec
aas
sti
int3
add
in
mov
mov
jmp
push
cmp
ss
ljmp
xorl
ds
mulb
outsb
mov
aaa
adc
cmpsl
jae
jbe
cltd
in
ss
into
mov
daa
daa
dec
mov
decb
std
jecxz
mov
add
cmc
add
sbb
pushf
adc
jnp
ret
sub
pop
inc
ret
xchg
xor
fs
shll
fcompl
jns
sbb
fdivrp
and
je
fists
adc
dec
cs
push
mov
test
aad
or
pop
jp
bound
arpl
mov
stos
scas
rclb
int3
arpl
pop
into
adcb
mov
jno
push
dec
roll
test
cld
adc
adc
sti
mov
movsl
push
lea
popf
cmp
shll
sbb
jl
jle
aad
mov
popa
dec
inc
in
push
jecxz
test
fucomip
cmp
add
flds
inc
cmpsb
clc
gs
xlat
adc
dec
mov
or
sbb
mov
ljmp
popf
je
out
add
mov
out
lds
mov
scas
leave
mov
cmp
adc
push
jg
cmp
add
mov
and
icebp
ret
lahf
mov
xor
in
and
mov
aaa
pop
adc
scas
repz
nop
out
mov
adc
out
push
ds
sbb
pop
and
fistps
push
cmp
dec
push
call
and
loop
popl
mov
pop
jmp
js
xorl
call
mov
in
pop
adc
mov
push
jno
sub
xlat
jns
test
pop
mov
inc
imul
sub
or
aas
leave
cwtl
inc
push
add
pop
int3
dec
push
out
outsb
lret
jns
and
icebp
mov
sbb
xchg
adc
je
inc
aaa
add
or
mov
mov
dec
jae
cmp
push
les
cmpsb
push
js
lock
push
cmpsl
mov
mov
xchg
xchg
xor
mov
test
xchg
xchg
in
lods
cmc
aad
pop
mov
jno
js
sbb
jl
shlb
test
dec
sub
fs
jne
mov
mov
lahf
sub
mov
push
mov
pop
rcrb
bound
addb
mov
int3
mov
in
adc
push
xor
sub
dec
fcomps
mov
ljmp
pop
mov
mov
pop
lret
xchg
cmp
mov
loopne
sbb
add
or
sub
xor
enter
sbb
pop
das
dec
push
sbbl
xor
aam
push
push
pop
and
mov
les
rcrb
ja
jl
xor
movsl
mov
xor
shl
rcr
mov
and
push
sbb
dec
mov
adc
adc
sub
into
stos
pop
out
add
mov
push
jae
push
pop
aas
loopne
sub
sbb
stos
int3
cmpl
jle
dec
xchg
loope
and
adc
add
pop
sub
xor
das
mov
cmp
sub
sub
xchg
fxch
vpmacswd
push
xchg
push
jmp
mov
test
push
loopne
popa
inc
clc
int
mov
sti
dec
xchg
cmp
mov
or
pushf
mov
jecxz
frndint
adc
pop
shll
test
repz
outsl
and
sub
xchg
cmp
repnz
cmp
movsl
mov
lahf
add
dec
push
pushf
lds
pushf
pop
cmpsl
fimull
mov
push
xor
adc
rolb
mov
imul
jo
xchg
jg
mov
mov
xchg
cmp
and
outsb
xchg
cmc
add
mov
js
dec
mov
jo
jae
push
dec
rol
scas
std
mov
lock
sbb
cld
or
outsb
mov
cmpsl
and
xchg
mov
aas
jle
mov
gs
xchg
data16
mov
mov
mov
bnd
adc
mov
clc
dec
mov
dec
pop
cmp
or
enter
stos
ljmp
stos
mov
cmc
incl
ja
jecxz,pt
out
ja
and
pop
mov
pop
gs
cld
int
pop
in
jge
mov
jecxz
adc
or
cltd
adc
pop
cmpsl
call
js
pushf
and
enter
inc
cmp
sbb
das
adc
mov
lds
rcrl
jnp
mov
psraw
syscall
mov
adc
sbb
cmp
cmp
popf
rol
mov
lret
mov
add
jne
inc
es
jo
sub
bound
mov
xor
dec
xorb
stc
lret
sbb
pusha
xorl
sbb
sbb
andl
out
ja
cmp
xchg
or
clc
push
je
push
mov
insb
jp
dec
mov
lods
jg
inc
dec
push
shrb
xchg
movsl
sub
pop
iret
cmc
outsb
jno
mov
aas
dec
pop
in
xor
add
ss
jp
dec
sahf
popa
lds
lret
pop
xor
gs
fcomp
jns
je
movsl
add
cltd
test
fadd
and
xor
mov
into
jne
jbe
icebp
push
mov
pop
lds
gs
mov
incl
mov
adc
push
jbe
jne
jp
mov
mov
inc
sti
aad
xchg
xlat
mov
sub
andb
sub
jno
ds
dec
ljmp
pop
dec
xchg
push
push
push
lods
push
jp
pop
dec
ror
clc
add
and
outsb
faddl
cmp
scas
repz
add
or
mov
cwtl
push
stc
mov
and
cmp
repnz
scas
popa
lds
lds
leave
mov
xchg
adc
ret
jno
clc
ja
cs
push
movsb
push
mov
jp
add
lods
push
cli
push
push
pop
es
xorb
mov
adc
or
add
sub
jne
enter
cmp
adc
aaa
xlat
imul
dec
adc
mov
or
cmp
loopne
lret
adc
push
vpunpcklqdq
add
ljmp
lock
fsubs
ret
stos
faddl
ds
adc
fabs
jnp
inc
push
out
repnz
mov
daa
iret
aaa
jmp
mov
or
or
shll
inc
icebp
add
mov
adc
mov
test
mull
ret
pop
popa
xchg
loope
cltd
xchg
jnp
add
xchg
das
test
rcrb
mov
sbb
push
data16
call
out
stc
cmc
jmp
pop
sarl
mov
jp
xor
test
push
dec
inc
mov
xor
push
cmp
inc
outsb
test
iret
idivb
int3
mov
sbb
nop
cmp
sbb
cld
push
sub
push
mov
hlt
push
in
popa
inc
dec
and
inc
roll
push
add
mov
xor
push
adc
jecxz
roll
cmp
lods
daa
add
aad
mov
movb
outsb
lahf
adc
std
cmpsl
mov
loop
jg
inc
sub
fs
bound
dec
sbb
lcall
mov
ljmp
add
mov
addb
nop
decb
out
loop
test
sub
ret
inc
roll
addb
adc
and
loop
fisubrl
sub
lcall
and
add
shr
mov
add
mov
popf
call
mov
je
sti
in
stos
mov
lea
sbb
aad
inc
jno
jne
test
lcall
push
mov
aam
test
fwait
sbb
fiaddl
into
leave
cs
loopne
out
mov
js
mov
ret
xchg
mov
adc
xabort
push
cmp
sub
dec
leave
xor
pop
mov
mov
rorl
imul
test
into
fstpt
mov
mov
push
or
fs
ficompl
test
mov
push
testl
xchg
jne
call
ret
in
into
sbb
and
adc
rorb
mov
ficompl
xor
jo
aam
pop
mov
in
jecxz
jno
das
aas
xchg
jmp
inc
cmp
push
insl
les
sar
and
cli
push
jmp
or
bts
pop
dec
sti
sbb
orb
xor
pop
in
sub
lret
push
imul
cmp
fwait
int
frstor
xchg
adc
mov
inc
sub
pop
jg
pop
ret
in
sub
clc
push
jae
xchg
int3
sub
and
mov
adc
js,pt
or
xorl
mov
jae
je
mov
repz
ja
sbb
and
nop
pusha
sbb
mov
imul
add
in
pop
aas
icebp
in
test
cli
repnz
xchg
scas
pop
lods
stos
scas
pop
push
or
lods
jnp
or
jo
out
adc
pop
mov
cmc
cmc
cmpsl
push
iret
cmp
xchg
ror
fsts
bound
clc
insl
fisttps
xchg
cli
pop
aam
inc
push
jns
sub
jmp
imul
push
out
push
add
dec
mov
pushf
in
dec
mov
mov
add
movl
xchg
adc
stos
adc
jecxz
cmp
mov
stos
sub
aad
cld
sbb
cmc
jle
inc
bound
xchg
int3
loopne
push
sub
adc
dec
int
clc
cltd
lds
mov
out
jmp
lret
es
jns
popf
int
daa
mov
test
mov
lds
xlat
push
mov
loopne
aad
shr
sbbb
bound
add
push
out
lcall
add
xchg
cltd
out
popa
sub
lock
test
jle
adc
sbb
mov
and
stc
mov
repz
xor
add
sbb
pushf
cltd
fidivl
mov
adc
das
push
mov
sub
mov
out
jp
cmpsb
xorb
xchg
clc
jne
sub
insb
shr
mov
stc
mov
pop
mov
fcoms
int3
pusha
pop
push
mov
shl
or
jmp
loopne
xchg
nop
push
aas
jnp
ljmp
popl
shr
into
ljmp
push
js
push
loop
jle
xor
and
aas
aaa
sbb
mov
dec
xor
and
hlt
rcrl
or
pop
mov
pop
aam
push
loope
imul
cmpsl
mov
xchg
or
xchg
inc
xor
ret
sbb
outsl
push
dec
xor
in
fneni(8087
movb
leave
jl
aad
mov
rorb
imul
mov
popa
push
dec
jb
push
mov
cmp
or
in
xor
pop
rcrb
ss
push
cs
int3
bound
mov
cmpsb
jmp
dec
sub
cmp
mov
xlat
dec
mov
jb
xchg
sub
cmpsb
roll
add
addl
dec
sub
adc
in
subl
pop
icebp
cmpl
and
dec
scas
daa
test
shlb
mov
movsb
ss
sarl
pop
daa
mov
out
pop
sbb
add
imul
test
lods
ljmp
add
xchg
lea
cmp
fucomi
sbb
push
std
dec
dec
dec
adc
inc
pop
jns
outsl
xchg
and
call
pop
pushf
bound
pop
inc
cmp
or
push
insl
les
adc
push
jmp
xor
push
jne
jno
and
push
jmp
xor
mov
sub
fisubl
int3
add
push
jne
incb
mov
jae
in
cltd
xchg
or
ds
nop
push
push
push
out
adc
das
cmp
mov
idiv
out
lahf
adc
out
fbstp
adc
call
insb
push
push
subl
pop
inc
shll
push
mov
mov
fadds
shll
mov
sub
lahf
hlt
push
rorl
add
or
test
cli
add
jge
int
loope
xor
jmp
jae
xor
jle
mov
in
int
mov
repnz
mov
popf
xchg
or
repnz
test
or
dec
imul
xchg
jge
jg
pusha
adc
push
lret
fcompl
inc
cld
jb
scas
pusha
dec
enter
xlat
jecxz
dec
sbb
cmpsb
repnz
call
mov
cmpsl
push
inc
jl
ficompl
stos
xor
cmc
jno
lahf
lcall
pop
push
jg
and
std
aas
dec
ss
loope
insb
jb
sbb
fistpll
std
add
dec
or
cmpb
lret
bound
aam
cli
imul
stos
mov
push
mov
jle
xchg
cltd
pushf
fucomi
int3
adc
insl
enter
inc
lcall
xchg
into
outsl
push
pop
xor
cmp
outsl
add
mov
push
jmp
inc
nop
in
mov
or
inc
pop
aam
cmp
enter
test
jg
in
mov
mov
mov
xor
mov
and
dec
mov
scas
sub
enter
or
jle
das
fcom
fadds
int3
fsubrp
std
lret
push
jmp
idivb
adc
lahf
fs
mov
xchg
test
mov
sbb
push
or
jp
inc
popa
dec
lret
sub
sub
add
or
adc
fstl
jb
loopne
mov
adc
lahf
cwtl
and
fcoms
push
es
add
xor
mov
lds
je
jo
dec
lds
xor
arpl
out
ljmp
mov
insb
jb
ds
adc
xchg
mov
iret
add
cmpb
push
dec
or
jmp
fistps
inc
mov
divb
add
cs
cli
sub
rclb
mov
lea
les
push
pop
push
aaa
inc
adc
scas
xchg
pop
xor
aam
int
out
mov
lods
mov
cmp
or
pop
xchg
push
ds
adc
outsl
jae
ret
push
out
or
in
fsubs
cmp
inc
mov
popl
stos
sbb
mov
cs
scas
in
xchg
dec
sub
xchg
cmp
popa
push
test
movnti
aas
cmp
hlt
and
cwtl
mov
nop
xchg
scas
xchg
xor
cmp
subb
adc
jecxz
cmp
sbb
inc
gs
xchg
out
cmp
sub
mul
mov
jnp
dec
jbe
pop
std
jle
pop
jmp
sbb
and
les
ja
idivl
mov
pop
enter
pusha
repz
incl
xchg
out
aad
and
xsaveopt
popa
stos
sub
ret
outsb
cmpsb
fisttps
cmp
xor
dec
mov
adc
mov
cmpsb
test
sub
rcr
ficoms
rol
xor
pop
inc
stos
test
popl
cmc
stos
xor
adc
lea
incl
inc
inc
xchg
jns
test
sbb
mulb
dec
mov
push
sahf
aaa
rcll
bound
dec
cmc
push
cmp
xor
push
rcl
sub
or
and
push
mov
ds
inc
loope
inc
push
sub
jg
fidivs
adc
and
dec
test
in
sbb
popf
jmp
jp
jno
fsubrp
int3
lret
cmp
add
push
or
cwtl
xchg
mov
call
aam
ret
out
into
jge
jns
int
dec
loope
inc
jno
mov
xchg
pop
idivl
inc
test
push
shll
inc
push
pop
jg
into
push
test
and
out
lods
pop
pop
push
fmull
xchg
subl
mov
call
inc
shrl
push
adc
inc
dec
lds
xchg
sub
loopne
pop
dec
test
inc
push
or
adc
and
inc
push
aas
add
aaa
mov
xor
inc
push
in
cmp
push
out
pop
mov
or
and
stc
ss
dec
aaa
sti
adc
movsb
cs
xor
sbb
xor
stos
aaa
pop
pop
mov
sub
jno
scas
pop
fdivr
inc
jne
xlat
and
aam
push
mov
out
fs
mov
ret
lret
je
cwtl
stos
bswap
sub
insl
subb
js
into
mov
jns
cs
mov
sti
or
cmp
add
jmp
dec
clc
xchg
adc
stc
test
loope
pop
jge
test
das
mov
and
jg
outsb
sub
loopne
sub
mov
in
stc
aad
cmc
and
jo
add
in
and
scas
mov
push
cmp
inc
call
jp
loope
test
cmpsl
test
sub
lods
mov
pop
cmp
pop
sbb
enter
fwait
aaa
sbb
popa
rclb
icebp
mov
daa
std
fstl
lock
and
loopne
pop
cmp
fldt
and
jbe
fdivs
imul
adc
leave
mov
pop
js
sbb
add
movsl
fyl2x
clc
jne
xor
addr16
and
ret
push
add
sti
add
pop
mov
xchg
inc
jecxz
outsl
lock
xor
sbb
mov
mov
push
pop
xchg
dec
into
mov
cld
pop
aam
aad
dec
sub
push
pop
or
fidivrl
mov
inc
cli
jg
gs
add
pop
pop
addl
ds
jnp
gs
and
shrl
cwtl
les
fidivl
jmp
in
sub
jns
int3
js
mov
imulb
xchg
inc
aad
jg
cltd
or
push
in
les
ret
les
fistpl
mov
pop
and
mov
imul
dec
jae
inc
and
leave
outsb
adc
movsb
aaa
popa
xchg
fidivrs
push
fcomp
mov
popf
mov
lahf
jg
mov
push
xchg
fdivr
in
pop
je
gs
repz
jp
cmpsl
pop
adc
mov
orl
and
add
sub
lret
hlt
cmp
dec
loope
xchg
mov
push
add
and
pop
in
mov
jnp
cmc
mov
dec
add
sbb
mov
adc
mov
push
outsl
addr16
and
and
mov
or
xchg
ja
add
mov
mov
and
test
lock
push
jo
push
sahf
jmp
fwait
xchg
mov
ret
jg
ret
pop
inc
es
sub
std
frstor
inc
pop
dec
popa
in
lods
loop
lahf
jno
leave
ljmp
mov
daa
loopne
lcall
notb
cmp
mov
pop
adc
lds
cmp
jmp
stc
and
pop
fldl
xchg
int3
xchg
in
out
ret
icebp
xchg
mov
in
push
pop
out
int3
sub
and
and
inc
mov
cmp
fmuls
add
ret
sub
jno
inc
lcall
adc
mov
jns
out
mov
rorb
cmp
out
sbb
mov
dec
mov
pusha
lahf
icebp
or
call
jae
jbe
lods
add
mov
push
nop
inc
rolb
xchg
lcall
fidivs
dec
cmp
pusha
inc
int
test
in
push
shlb
daa
adc
faddl
inc
inc
inc
rorb
lea
cmpsl
and
pop
dec
and
xchg
jnp
rorl
ret
pop
in
rol
scas
push
nop
iret
mov
xor
in
aas
or
scas
cmp
push
xchg
adc
jo
ljmp
jno
lods
mov
cwtl
adc
mov
nop
fdiv
dec
out
out
mov
aaa
mov
sti
xlat
or
or
mov
jp
out
dec
nop
mov
sbb
sahf
pminsw
pop
mov
lret
mov
pop
or
inc
mov
push
pop
mov
ds
outsb
fdivrs
mov
jg
jb
mov
add
int
mov
push
add
mov
fcomps
stos
iret
insb
lods
mov
pop
cld
push
fwait
rclb
pusha
adc
fnsave
jle
sub
adc
push
std
mov
pcmpeqw
mov
imul
sub
adc
adc
std
in
sbb
xlat
jl
adc
leave
insl
xchg
sbb
ficoml
xchg
adcb
andb
xor
mov
lods
xchg
fistps
shr
cmp
push
mov
inc
inc
and
push
sbb
or
aam
popa
dec
adc
add
jg
mulb
lahf
in
jecxz
mov
jbe
sti
outsb
cmp
and
push
jl
mov
pop
or
popa
mov
cmc
dec
mov
dec
mov
dec
out
mov
push
pop
in
and
push
jp
jl
cmp
pop
xor
lods
add
and
pop
repz
hlt
enter
mov
cli
outsb
add
mov
adc
sub
cli
xchg
or
dec
lds
adc
ret
jg
add
lahf
dec
stc
mov
mov
pavgw
mov
sbb
test
movb
push
xor
pop
nop
cltd
mov
push
rolb
xor
scas
addr16
push
xchg
sbb
ds
repz
imul
cmpsl
xor
in
sbb
mov
mov
inc
sub
scas
out
xor
mov
xchg
test
ja
sub
stos
sbb
sub
sbb
cmpl
or
imull
int
into
daa
scas
stc
iret
test
cld
dec
xchg
cmp
daa
or
je
pushf
dec
addr16
and
mov
shlb
push
xor
jmp
or
mov
xor
jo
xchg
or
popa
repnz
xlat
test
adc
jbe
shl
sbb
loop
out
add
and
and
sub
and
mov
cwtl
roll
fucomip
xor
inc
adc
rcl
push
dec
hlt
mov
adc
mov
mov
jmp
pop
insl
xchg
lret
jae
dec
rcll
ja
rcrb
lds
mov
or
dec
mov
sbbb
fistl
xchg
lret
jge
je
fmull
push
push
xchg
outsl
pushf
sar
mov
fistps
xchg
adc
sarl
push
mov
std
fcoms
mov
in
and
flds
add
in
jb
leave
jmp
push
mov
rorl
lret
xor
mov
jmp
lea
jle
dec
fwait
xor
cwtl
jg
mov
mov
pop
repz
mov
add
add
xor
fs
and
movsb
adc
pop
jb
lock
xor
inc
mov
xchg
mov
cmp
rolb
nop
push
into
mov
scas
sbb
lods
or
cwtl
add
test
lea
push
xchg
ljmp
mov
mov
jbe
nop
shl
pop
xor
popa
punpckhbw
nop
push
adc
pop
cs
les
ret
sbb
leave
sbb
ljmp
test
pop
arpl
mov
shll
mov
in
scas
in
lcall
cmpsb
sub
or
in
hlt
mov
sar
xchg
xchg
adc
mov
dec
bound
xlat
ds
icebp
addr16
add
test
jnp
pop
sbb
jg
shll
sub
mov
push
enter
es
imul
das
out
loop
and
adcb
push
jnp
cmpb
xor
lcall
add
rorl
mov
sbb
dec
iret
cmp
mov
fcoml
loopne
clc
inc
out
and
cmpsl
sbb
push
test
inc
push
xchg
sbb
inc
stos
jns
mov
lods
stc
pop
scas
daa
xlat
pop
adcb
dec
fmuls
call
mov
sahf
test
test
sub
xchg
in
or
pop
jp
and
cmc
fdiv
inc
test
test
jo
divb
push
dec
push
loop
frstor
aas
or
stos
mov
testb
cmc
aaa
xorl
lahf
cwtl
cmp
ja
sbb
push
push
dec
negb
pusha
lret
push
jmp
popa
xor
push
sarl
cld
or
cmpsb
inc
notl
mov
add
mov
jle
jg
add
and
arpl
std
hlt
xchg
mov
bound
jmp
dec
sbb
xor
out
push
adc
adc
mov
mov
ljmp
xor
iret
xchg
repz
cmpsl
in
mov
fildll
std
not
int
out
xchg
add
stos
jnp
xchg
cmpsb
fbstp
lret
pop
jno
fwait
pop
mov
hlt
js
push
adc
push
mov
pop
dec
sbb
in
xchg
dec
iret
je
mov
and
lods
aam
adc
mov
mov
pop
test
mov
fwait
sub
cmp
lret
mov
popa
gs
mov
out
loopne
mov
pop
inc
xor
jecxz
cwtl
push
pop
repnz
mov
pop
sti
in
mov
inc
sbb
mov
andb
xchg
jns
loope
xchg
push
aaa
ljmp
mov
mov
fldt
jbe
leave
xchg
jge
dec
pop
push
fxtract
push
jge
sbb
add
fwait
push
jle
dec
es
pop
test
jnp
sbb
fcompl
push
add
test
xchg
and
push
mov
lahf
xor
lock
xor
sub
mov
das
sbb
mov
pop
cs
push
add
mov
ja
dec
pusha
stos
mov
shr
stc
loope
mov
ljmp
push
imul
mov
mov
sti
cmp
out
sahf
jbe
imul
movsb
mov
add
std
xor
out
xor
cmp
mov
mov
cltd
scas
ja
into
or
data16
pop
int3
cmc
jmp
pushf
stos
rcrb
mov
aam
scas
into
cld
sub
add
pushf
cltd
add
dec
adc
cmp
push
xchg
xchg
daa
push
push
jmp
push
cmp
add
xchg
enter
cwtl
jmp
testl
int3
movsb
or
xorl
outsb
or
mov
xor
pop
lret
sub
lret
dec
mov
stos
and
shll
xor
jne
and
add
adc
push
xor
pusha
jmp
lret
push
out
sub
xchg
fisubs
stos
xchg
push
jge
fsubl
les
pushf
imul
mov
out
add
mov
lahf
and
int3
inc
jg
dec
cli
mov
mov
adc
call
roll
and
lret
push
arpl
and
je
stos
mov
aad
pop
movsl
mov
push
dec
mov
mov
cmc
lahf
mov
pop
aas
mov
or
mov
out
mov
or
rolb
leave
inc
xchg
stc
insb
or
pusha
cmpsl
adc
pop
loopne
es
loop
hlt
adc
hlt
divl
or
sbb
add
xchg
mov
popa
aam
popa
cwtl
movsl
pop
jne
das
push
push
out
sbb
mov
das
and
mov
pop
xor
dec
icebp
aas
xor
mov
lods
movsl
cmc
xchg
and
pop
in
mov
sbb
cmc
nop
mov
sbb
in
mov
xor
mov
pop
cmp
push
lea
push
fdivl
pop
lret
mov
cmp
xchg
jb
dec
insb
and
add
pop
xor
adc
push
sbb
sbb
mov
xchg
in
pusha
mov
jb
pop
je
lods
dec
dec
subl
xor
lock
add
cltd
lret
adc
test
mov
shrl
jnp
push
pop
inc
popf
cmpl
pop
insb
aas
rorl
push
mov
cli
jle
mov
leave
adc
sbb
xchg
sub
and
mov
pusha
ss
jne
push
add
aam
shrb
mov
mov
mov
stos
outsl
fstl
xor
addb
mov
inc
lock
dec
dec
scas
js
jns
xlat
cmpsb
cmp
pop
push
outsb
mov
aaa
iret
push
dec
sub
das
jbe
add
idiv
test
insb
pop
xor
cmpsb
popf
and
adc
push
aam
or
loop
inc
fsubrs
aad
pop
mul
lds
xchg
dec
scas
decb
xchg
and
insw
sub
mov
icebp
push
lret
fiaddl
fs
pop
sbb
push
cmp
push
into
jne
and
cmp
push
sbb
mov
add
xor
fdivr
cmp
jl
and
and
popf
push
xchg
xchg
stc
adc
stos
adc
adc
jno
out
in
in
clc
ffreep
xchg
insb
lret
xlat
fmuls
in
sbb
cs
ret
push
xor
jb
fiadds
mov
movsb
fistpll
scas
or
push
je,pn
shll
mov
xchg
out
inc
mov
stc
adc
call
fisubl
mov
jle
sub
xlat
out
sub
movb
xlat
mov
mov
mov
clc
adc
push
pop
subb
or
adcb
imul
inc
dec
push
lods
xchg
xchg
jae
int
clc
jne
xor
notb
mov
test
dec
in
and
lods
loope
clc
out
and
pop
pop
push
inc
lods
ret
xor
jp
sbb
clc
cmp
jno
and
mov
test
xor
sub
jmp
dec
adc
cmpsb
les
daa
sbb
ss
jl
push
mov
xchg
dec
test
je
insb
in
ja
mov
sahf
sub
dec
js
in
adc
pop
insl
pop
loope
decb
xor
sub
lock
mov
clc
jmp
push
add
call
cmpsb
sahf
call
gs
sub
push
lods
sbb
inc
xor
out
outsl
fs
out
loopne
mov
adc
inc
mov
popf
add
push
push
or
mov
dec
testb
dec
mov
jp
ficompl
arpl
and
fdivrs
xlat
or
mov
pop
jl
dec
popf
jnp
rorb
push
daa
movsl
aam
xor
add
cs
mov
pushf
pop
xchg
xorb
lret
sbb
mov
jnp
push
icebp
ja
jae
insb
push
inc
xor
mov
outsb
xchg
mov
std
mov
lcall
adc
mov
fisttpl
mov
clc
cmp
addr16
icebp
and
ds
clc
shll
lods
xchg
loope
cs
lods
and
inc
outsb
cmp
lret
pop
xchg
dec
mov
jno
pop
inc
mov
shlb
jnp
hlt
or
dec
push
and
bound
movsl
shrl
xchg
mov
lods
insb
mov
add
andb
xchg
es
and
cmp
dec
push
dec
mov
ficoms
in
inc
shl
inc
inc
divb
cmp
push
push
test
flds
sub
cmp
cmp
inc
cmc
idivb
aad
mov
cs
mov
inc
pusha
imul
lods
add
push
sbb
test
lods
out
inc
js
dec
add
test
adc
ret
cs
xchg
sbb
mov
mov
xchg
shrl
push
xchg
fincstp
jl
lea
dec
lods
jge
push
das
sbb
dec
iret
in
pop
pop
dec
cwtl
aam
pop
or
fdivrp
jbe
stos
out
cmp
out
out
fsubl
out
sub
repnz
ficompl
mov
add
inc
scas
lods
mov
push
pop
fs
mov
push
cwtl
mov
mov
or
and
aaa
out
lock
inc
sbb
or
icebp
scas
sub
aad
test
pop
int3
enter
fcompl
lock
or
icebp
inc
or
jp
jp
enter
mov
stos
stos
js
inc
sarl
push
and
enter
pop
mov
and
test
pop
cltd
fnclex
and
aaa
aam
and
hlt
nop
dec
inc
mov
add
adc
and
ret
xchg
sub
mov
mov
cmp
mov
in
cld
cmp
push
push
add
int
adc
stc
cmp
rcrb
bound
mov
nop
imul
push
push
cld
ja
mov
out
js
mov
fmull
mov
clc
cmpsl
lahf
int
ficoml
jo
cltd
and
movsb
negl
cli
fcomps
xlat
in
rcrb
shlb
mov
lods
and
sub
mov
sub
inc
mov
ret
mov
notb
mov
adc
cmp
pop
stos
cwtl
rcll
in
push
jns
loop
test
push
cmpsl
icebp
leave
or
clc
sbb
xchg
in
cmp
cli
call
adc
testl
rcr
xor
mov
fisttpl
mov
in
dec
mov
lds
push
push
xchg
test
inc
inc
sbb
and
mov
xor
xchg
sahf
sbb
and
incb
xchg
aam
imul
in
push
cwtl
add
lods
pop
mov
mov
push
xchg
adc
stos
fisubrl
int
xor
jp
xchg
call
pop
cmp
cmp
gs
cmc
xlat
mov
mov
xchg
or
adc
and
aad
mov
enter
sub
mov
dec
stos
popf
fsubl
pop
stc
jecxz
and
roll
mov
push
lret
xchg
pop
mov
mov
mov
sti
mov
jne
popf
iret
cmp
loopne
lret
lods
xor
push
push
mov
fadds
stc
inc
pop
outsl
lret
clc
ss
insb
push
out
call
push
and
daa
sub
in
and
das
fmul
notb
ficomps
repnz
cltd
orl
mov
cltd
js
adc
test
jle
out
je
xchg
aaa
loope
xchg
xor
inc
xlat
xor
insb
aad
mov
add
fsubr
mov
out
sub
push
cmp
pop
inc
jno
ds
cs
jg
cmp
imul
icebp
js
sbb
sbb
insl
xor
test
push
cmpsb
or
mov
dec
enter
xchg
insb
mov
cs
mov
lret
scas
push
shlb
push
das
pop
sarb
mov
fwait
pop
jmp
testl
lods
cli
xchg
std
adc
lods
mov
xor
out
mov
push
xchg
pop
jp
and
adc
push
pop
outsl
movsl
int
and
int3
scas
data16
lods
popf
jg
movsb
xlat
daa
and
and
cmp
push
addr16
filds
pop
mov
mov
aam
pop
add
sti
scas
iret
jns
fs
loope
or
hlt
lahf
lcall
dec
mov
mov
ret
mov
push
mov
adc
sub
xchg
cmp
mov
adc
jge
sub
lds
lock
jp
lock
inc
push
sar
outsb
pusha
push
js
fnop
leave
xor
inc
jns
insl
insb
pop
fmull
shlb
xor
xchg
mov
xchg
inc
out
mov
stos
jae
sub
sbb
test
inc
add
in
cmpsl
and
in
lods
test
pop
mov
mov
jns
mov
sbb
les
xchg
push
call
xchg
jmp
repz
loop
out
push
or
pusha
iret
adc
add
or
movsb
clc
mov
hlt
iret
push
fadd
push
and
test
lcall
jns
pop
icebp
xchg
mov
aam
fimuls
cmpsl
add
sarb
mov
mov
sbb
or
push
lock
stos
test
gs
adc
ss
das
push
cmp
push
dec
mov
adc
jno
cmp
pop
and
out
ja
out
rcr
bound
push
call
sbbb
cli
jne
shl
enter
push
mov
lcall
lods
test
imulb
push
sti
cmp
inc
movsl
mov
add
sub
xchg
les
xor
imul
jle
aaa
std
dec
je
outsb
xchg
dec
mov
fs
push
bound
push
icebp
mov
fbstp
dec
imul
and
push
push
out
test
rolb
or
mov
cwtl
aas
inc
imul
jp
bound
push
ret
jae
mov
aam
addr16
sti
call
cld
lods
cltd
xor
xor
sbb
sub
fwait
and
fs
xchg
lods
push
jb
jl
mov
cwtl
mov
cmp
fbld
mov
sub
shl
movsl
test
lret
cmpsl
negl
in
mov
inc
fsts
push
imul
fwait
pop
xchg
fwait
cmp
icebp
int3
imul
repnz
pop
xchg
and
jb
ret
call
inc
insl
aaa
add
cmp
fs
sub
lcall
les
dec
fwait
inc
and
in
cltd
push
test
ficoml
pop
mov
or
xchg
inc
ljmp
lock
imul
ljmp
hlt
jns
xor
xorl
imul
cmp
insb
js
sti
sbb
jecxz
divb
inc
cmpl
and
lods
mov
inc
dec
loop
jecxz
jno
mov
lock
jl
xorb
out
cmpl
mov
pop
insl
mov
rcrl
inc
es
fneni(8087
mov
adc
cwtl
xchg
dec
mov
adc
xor
cwtl
cmp
out
mov
lods
sar
shrl
outsb
ret
test
adc
mov
jle
dec
jae
fwait
mov
push
jbe
add
andb
or
xor
inc
push
jbe
fsubrs
dec
pushf
inc
push
rcrb
push
jl
out
mov
mov
cmc
pop
or
clc
adc
and
sarb
test
inc
dec
js
mov
dec
pop
pusha
roll
hlt
jnp
out
inc
adc
mov
adc
dec
insb
xchg
lea
pop
xchg
mov
add
incb
pop
pop
lret
push
shrl
add
cvtpi2ps
xchg
xchg
dec
add
inc
inc
jg
addr16
out
add
repnz
mov
ret
scas
push
inc
sbb
stc
or
or
mov
ja
push
mov
imul
mov
mov
jge
xchg
loopne
arpl
and
or
arpl
fisubrs
stos
aas
sbb
repz
scas
jmp
cmp
ret
imul
mov
pop
sbbb
jno
xorb
out
mov
xor
fldenv
cmpb
test
cmp
pop
cmpsl
rcrl
add
test
inc
xchg
ds
dec
dec
pop
or
mov
and
pushl
ret
adc
clc
push
mov
xlat
aad
dec
leave
push
scas
lea
sub
push
jne
dec
popa
adc
mov
xchg
cmp
sub
pop
stos
test
popf
ja
jp
push
sbb
popa
jnp
sub
xchg
jno
adc
or
lock
pushf
inc
lods
adc
sub
cmp
pop
movsb
imul
and
gs
shll
leave
jge
jp
ret
inc
mov
in
inc
fnstenv
push
xchg
adc
and
insb
enter
fdivl
push
rclb
fisubs
mov
mov
negb
inc
in
hlt
ss
data16
shl
adc
or
pop
imul
mov
dec
xchg
iret
or
inc
in
push
xchg
pop
mov
scas
aam
dec
jnp
sbb
add
cmpsb
movsb
aam
add
mov
mov
mov
loop
ja
sub
insl
mov
or
push
lahf
mov
cmpsl
aas
mov
sbb
shr
je
outsb
leave
rcll
jp
fbstp
pop
pop
mov
mov
add
xchg
jae
ficoml
ficomps
nop
andb
pushf
jecxz
mov
sbb
cmp
add
cmpsb
xchg
in
aaa
movsb
xorw
std
and
sub
sub
jne
mov
lcall
xchg
in
mov
loopne
mov
fdivl
iret
cmpb
jg
add
sbb
out
sub
xorl
ret
cwtl
jnp
lcall
sub
mov
mov
les
fwait
shlb
ljmp
insl
push
adc
insl
int3
icebp
xor
cwtl
dec
nop
cs
pop
mov
sbb
jo
lret
in
fstps
aaa
jecxz
out
test
xor
add
adc
inc
jns
cmpsl
and
aam
jge
clc
add
out
push
movsb
sub
push
stos
lahf
test
dec
push
test
mov
loope
ret
pusha
insb
jne
rcll
push
jmp
cmp
cld
or
out
mov
sbb
push
test
jecxz
inc
lods
pushf
jnp
rcl
ljmp
repnz
pop
cmp
out
test
test
mov
jecxz
xchg
mov
imul
jg
inc
or
jnp
add
dec
mov
inc
pop
subb
jno
jbe
inc
dec
mov
push
ror
mov
inc
or
adc
leave
dec
jno
repz
pop
or
and
out
imul
and
lods
jo
mov
ret
and
push
scas
mov
cltd
and
sbb
mov
xchg
sbb
repz
loop
pop
in
cmpsl
adc
pop
repnz
sbb
aaa
js
lret
lcall
out
mov
mov
mov
fcoml
push
jnp
stc
mov
mov
sub
cmp
xor
xor
lds
clc
cmpsl
nop
loope
inc
xchg
pop
and
add
lret
addb
js
xchg
cwtl
test
push
mov
cs
jnp
cltd
ret
rcrb
pop
je
subl
arpl
aam
cmc
xchg
or
mov
inc
fwait
jp
inc
hlt
xchg
mov
rcll
inc
or
jp
xor
ds
testb
in
dec
adc
jle
in
or
cltd
jl
pop
or
mov
hlt
pop
loop
out
push
mov
inc
push
push
jo
push
lods
fs
xor
test
test
jb
mov
sarl
fsts
inc
or
sub
mov
insl
mov
dec
stc
test
sahf
shlb
pop
xchg
fildll
test
ficoms
mov
in
in
mov
xchg
outsb
bound
mov
jno
mov
ret
adc
adc
mov
loopne
xchg
pop
cmp
lahf
loop
imul
test
cmp
les
outsl
push
mov
and
cmp
jmp
lahf
inc
out
cmpsb
sbb
movsb
mov
push
arpl
stc
jecxz
ret
sub
popa
das
cmp
or
cltd
sbb
scas
cmpsl
dec
mov
jne
out
cltd
lock
sbb
repnz
jg
inc
mov
lret
ret
popf
testl
cmpsl
dec
xchg
adcl
mov
in
inc
dec
sub
xchg
pop
lea
and
push
sub
xchg
js
in
shlb
mov
mov
jb
jl
popa
lea
aaa
mov
out
add
cwtl
stos
adc
mov
mov
dec
xorl
lcall
sbb
jns
lea
sub
in
repz
xchg
sub
gs
add
jle
pop
sahf
pop
push
xchg
fiaddl
fsubrl
jbe
popf
sbb
lahf
mov
fwait
enter
adc
pushf
sub
xchg
jb
cmp
push
insb
pcmpgtd
sahf
mov
in
icebp
shrb
mov
inc
mov
push
or
mov
aam
mov
lret
cmp
mov
daa
or
jbe
je
jb
or
sti
cmpsl
mov
loop
iret
adc
jmp
icebp
inc
xlat
mov
gs
nop
mov
adc
clc
and
cmp
cmc
jbe
jge
int
cmovo
xor
daa
inc
jns
mov
lock
mov
mov
xor
mov
scas
fisubrs
pusha
xor
jecxz
cmp
test
add
loope
jge
cmc
jl
sti
mov
loopne
push
enter
add
cmc
stos
movsb
sub
jnp,pt
cltd
pop
das
icebp
jl
mov
aam
lds
mov
test
mov
mov
push
jl
ljmp
xchg
orl
inc
inc
push
into
fucomip
add
ljmp
aad
sub
stc
lock
add
mulb
ss
int
int
xchg
nop
mov
pop
ret
lods
jmp
mov
cmpsb
sbb
stos
or
xchg
sbb
jo
adc
mov
xchg
in
std
js
pop
push
cs
inc
or
sub
mov
sub
aad
and
push
loop
loop
sbb
xchg
pand
xchg
xchg
loop
mov
jb
adc
imul
imul
inc
inc
jle
int3
shrl
lds
inc
sbb
in
in
and
insl
adc
sbb
pop
xchg
adc
mov
out
mov
mov
jle
xchg
jmp
jnp
iret
sbb
loope
adcl
nop
dec
mov
imul
jb
ja
in
insb
ret
shll
mov
clc
mov
iret
andl
in
push
dec
aam
ret
adc
mov
xor
les
js
insb
mov
cmp
inc
test
jmp
loopne
decb
sbb
cmpsl
scas
jnp
sub
pop
jns
push
push
mov
fiaddl
adc
lods
mov
movsb
mov
adc
into
leave
les
repnz
fwait
cmp
add
mov
xor
mov
and
xor
sbb
inc
mov
call
adc
scas
inc
and
sub
fistpll
dec
orl
mov
popf
je
pop
out
imul
sbb
or
loopne
mov
sbb
mov
sahf
incb
cmp
enter
inc
movsb
mov
cmc
ficomps
mov
arpl
in
xchg
jnp
mov
mov
cmp
mov
dec
sti
stc
imul
inc
pop
clc
test
dec
add
xor
inc
mov
fbld
xchg
scas
pop
cmp
shlb
add
lea
pop
dec
mov
mov
in
aaa
jmp
pop
add
add
xchg
es
add
stc
add
dec
and
popa
mov
mov
or
gs
movsl
inc
sub
bound
pop
or
ljmp
sahf
sahf
push
mov
bound
pop
xor
dec
xchg
jle
dec
insb
mov
xlat
loop
push
xchg
mov
lods
push
add
pop
imulw
shr
mov
pop
or
sub
pusha
adc
aaa
gs
adc
pop
pop
jnp
bound
outsl
int
hlt
test
sbb
pop
mov
int
stc
outsb
cmp
mov
push
sub
adc
aad
outsb
loop
aaa
mov
subb
and
out
add
out
jb
ds
jp
hlt
cmp
xchg
leave
and
filds
jae
jae
sbb
mov
sbb
stc
imul
lods
cli
sbb
sub
arpl
stos
add
jno
ret
dec
test
shrb
cmp
mov
pop
inc
out
pop
mov
sahf
pop
xchg
jge
xchg
inc
add
adc
cmp
sbb
cmp
loopne
xor
das
mov
mov
test
repnz
and
in
stos
fidivrl
add
in
repnz
sub
icebp
test
mov
aas
testb
add
adc
xchg
std
mov
mov
cmpsb
jnp
or
ljmp
test
lds
sbb
dec
clc
loop
shrb
push
add
or
popa
push
push
mov
enter
push
daa
cs
mov
push
outsl
or
scas
jg
sub
fldt
mov
hlt
cmp
mov
pop
data16
cmpl
sub
push
jo
stos
and
movsb
xchg
call
loope
loope
loopw,pn
fcos
std
imul
xchg
idivl
cld
bound
mov
adc
push
leave
fistl
int
pushf
cmpsb
jo
lds
cmc
popa
adc
cmpsb
pop
icebp
lahf
dec
mov
dec
inc
jg
sub
ljmp
lahf
idiv
imul
into
push
ret
xchg
jmp
xchg
iret
ret
pusha
xchg
mov
roll
add
scas
add
in
pop
mov
or
cmpsb
popa
mov
cltd
dec
into
mov
je
into
or
or
into
cmp
push
mov
adc
pop
daa
jae
xor
sub
sbb
mov
test
or
hlt
or
rcrl
mov
xchg
or
divl
jg
jp
data16
sub
stos
sti
ret
inc
hlt
ljmp
stos
test
pop
push
pop
add
jp
push
in
push
push
pop
mov
sub
cmp
xor
daa
cmpsl
inc
lods
mov
lods
pop
outsl
add
sbb
inc
jl
jge
jp
inc
imul
inc
or
pop
out
and
nop
or
into
shrb
loop
icebp
xor
test
cmp
js
jle
movsb
jge
outsb
enter
jae
outsl
fildll
jg
adc
imul
jbe
xchg
jg
adc
leave
cmp
and
xchg
ss
dec
lret
aas
icebp
push
pop
pop
adc
jecxz
or
mov
sub
pop
jecxz
cmpsl
ja
testb
sbb
xchg
add
adc
mov
jb
cld
mov
mov
ds
mov
lock
inc
inc
andb
sbb
out
aas
mov
lods
push
mov
mov
cmp
mov
xchg
cs
cwtl
sub
outsl
xchg
add
lret
cli
add
mov
mov
je
fs
int3
stos
popf
test
inc
enter
jns
jp
push
andl
inc
jp
mov
xchg
and
inc
cmp
or
inc
mov
fwait
mov
lahf
sbb
adc
rcl
scas
lret
fucompp
imul
xor
and
or
cmp
ljmp
add
xor
jmp
dec
and
lods
or
sub
cwtl
pusha
pop
es
and
inc
jo,pn
ds
out
fimuls
test
movsl
add
fsubrs
xchg
xor
jg
mov
jg
insb
mov
rolb
in
fnstcw
sub
mov
fcompl
adc
mov
and
or
mov
call
pop
pop
push
or
repnz
pusha
int
imul
cli
dec
lds
icebp
fsubrs
cmp
mov
popf
mov
fisubrl
std
cmp
xor
pop
mov
imul
mov
fcomi
pop
adc
dec
fiadds
xchg
loopne
mov
into
repz
add
cltd
dec
adc
xchg
loope
jnp
mov
xchg
adc
leave
and
repz
push
inc
test
mov
inc
xchg
fisubl
lret
dec
push
pop
dec
push
add
in
push
push
push
lret
idivl
push
rcr
cli
insl
jns
fsubr
mov
aad
or
sahf
insb
fcoml
push
jmp
jl
add
jge
cmp
cmp
add
imul
jle
push
mov
xchg
or
xor
testl
ja
dec
jns
std
or
loope
push
test
jg
ret
sbb
leave
jg
push
mov
in
sub
pop
or
psubw
imulb
mov
pop
es
mov
cmpsl
cmp
lds
movlhps
lods
adc
add
xchg
cmp
insl
and
idivl
xorl
js
out
repnz
inc
in
fiaddl
inc
xchg
and
xlat
mov
scas
int3
dec
inc
and
ror
dec
mov
int
pop
sbb
add
leave
test
push
pusha
sub
add
mov
jl
lret
or
mull
in
outsl
cmc
imul
test
inc
push
ljmp
mov
je
mov
pop
int
mov
js
negl
imul
mov
mov
pop
inc
pop
jns
xor
sbb
cmp
fadds
push
lcall
roll
in
mov
cmp
or
pusha
lret
orl
sbb
jmp
mov
adc
test
adc
xchg
ja
inc
push
mov
cli
dec
sub
std
xor
subb
add
out
xlat
gs
xchg
nop
addr16
or
lret
dec
jns
mov
sbb
in
stos
std
add
pop
or
int3
sbb
jns
sbb
push
push
jg
and
jmp
push
cli
xchg
push
repnz
nop
jae
js
ret
or
fs
lock
xchg
mov
push
pusha
mov
hlt
das
xorb
xchg
adc
test
sarl
cmp
xlat
std
clc
in
or
sub
nop
xchg
fistl
sub
mov
enter
incl
dec
pusha
cmpsl
inc
mov
xchg
std
out
idivb
or
mov
inc
cld
and
cli
imul
cmovle
hlt
test
pop
and
mov
push
pushf
lret
cmpsl
add
pop
in
orb
dec
xor
xchg
stc
cmp
lret
insl
mov
cmp
adc
loop
inc
cmc
jo
xorl
roll
loope
pop
call
cltd
jmp
sbb
aad
bound
sbbb
xor
push
jnp
mov
outsl
add
mov
ffree
cmpsb
test
push
adc
std
movsb
lret
incl
insb
lret
add
cltd
scas
pop
pop
rcr
xchg
daa
insl
mov
or
arpl
jl
cmp
cmp
add
pop
cmp
mov
sub
fnsave
jb
fildl
mov
outsl
xchg
test
repz
shll
push
add
andl
xchg
xchg
or
sub
shrb
pop
jle
add
xchg
daa
sub
leave
scas
and
jae,pt
lcall
das
inc
jmp
xchg
ljmp
insl
sbb
clc
mov
call
dec
and
ret
add
add
sub
movsl
arpl
dec
addr16
or
mov
icebp
adc
adc
jmp
aad
rcll
in
xor
pusha
loop
push
xchg
imul
pop
outsb
unpckhps
repz
and
cmp
cmp
faddp
mov
scas
in
mov
add
test
jb
rol
xchg
and
pop
sub
xlat
xchg
adc
inc
adc
or
xchg
lcall
or
inc
mov
inc
xchg
sbb
pusha
jle
enter
mov
mov
gs
pusha
in
jle
lret
push
popf
lea
cmp
fidivrl
push
mov
dec
movsl
arpl
out
test
popa
mov
mov
pushl
cwtl
inc
stos
push
jecxz
and
adc
or
cmp
jbe
in
push
push
cmp
in
outsb
fdivl
pop
sub
dec
push
mov
rorb
adc
mov
sbbl
pop
xor
test
fwait
dec
push
ficoms
in
add
lahf
jbe
mov
repnz
in
sbb
pop
mov
mov
nop
leave
test
test
mov
push
icebp
push
in
add
cmp
jne
js
ds
das
dec
mov
inc
sahf
push
or
push
imul
fadds
cmp
call
sbb
inc
repz
cwtl
xchg
adc
pop
adc
ret
lahf
loope
pop
jp
xor
mov
insl
loop
fsubrs
and
jp
loop
sub
cmp
scas
imul
repz
imul
test
sbb
or
js
jns
in
sbb
sub
jmp
cltd
xor
int3
jle
dec
cmovnp
gs
sbb
int3
aaa
pop
adc
incb
sub
dec
pop
fldl2e
mov
mov
movsb
mov
xor
and
movsl
out
add
insl
fistpll
iret
pop
sbb
int
sub
jp
pop
jae
lods
imull
dec
pop
cmp
test
mov
add
les
xchg
xchg
mov
pop
xor
push
push
xchg
push
int3
flds
jno
icebp
xor
cs
xchg
popa
les
int
pop
cmp
sbb
and
or
arpl
test
jp
fs
or
cwtl
clc
std
out
je
inc
jae
lock
sub
inc
test
sub
in
pop
inc
sbb
adc
dec
ljmp
cwtl
sbb
xor
jp
push
ret
mov
outsl
add
imul
fnstcw
aaa
or
sbb
stos
add
push
jae
jmp
lret
push
xchg
std
stc
xchg
cmpsl
repnz
nopl
sub
mov
adc
dec
mov
mov
push
enter
and
push
jge
xor
test
out
pop
or
sub
pop
nop
xor
cmp
out
dec
xchg
xchg
inc
sbb
jbe
jmp
imul
das
in
por
nop
jae
mov
ss
pop
subb
push
sti
arpl
or
dec
mov
lods
loope
rcrb
xchg
adc
aad
mov
cmp
js
insl
inc
js
or
test
dec
ret
shrb
sbb
mov
shlb
lods
dec
imul
fisttps
lcall
adc
out
pop
and
lret
aad
jmp
sbb
orb
cwtl
add
jo
sub
or
insb
lods
in
add
add
dec
call
lret
dec
gs
sub
xor
inc
es
xchg
sbb
pop
pop
ljmp
daa
sbb
rcl
sub
push
xchg
xor
or
add
jns
loope
in
xor
andb
jmp
stos
mov
cmp
movsl
rclb
ficomps
rcl
mov
pop
data16
fistl
mov
inc
jg
push
div
pop
rcll
cmpsl
shrl
jns
sub
loope
into
jge
das
fwait
jo,pt
mov
mov
mov
xchg
es
xor
iret
je
xorl
mov
movsb
push
rclb
push
xor
mov
inc
inc
pop
fisubrs
daa
sub
or
mov
jo
mov
dec
aas
sub
out
insl
imul
xchg
sub
lret
mov
lahf
or
fcmovb
es
and
or
clc
xchg
arpl
jb
push
push
dec
outsl
mov
or
xlat
sub
es
enter
fadds
jmp
xbegin
out
mov
aad
mov
das
sub
xor
iret
or
jns
dec
mov
mov
jmp
jb
mov
cmpsl
push
jl
into
out
dec
cmp
add
out
mov
and
vmwrite
dec
xchg
push
out
sahf
sti
and
stos
add
std
fisubl
xor
xchg
bound
mov
and
imul
or
cmp
mov
adc
fistpl
js
lods
push
nop
rolb
fadd
icebp
in
pop
jge
out
testl
cld
leave
jg
scas
sarl
cmp
dec
das
inc
sahf
add
mov
imul
jne
dec
sbb
fwait
test
in
into
push
cmp
pop
loope,pn
and
rorl
ss
lcall
iret
push
fcmovu
add
fildll
clc
xchg
loop
rclb
movsb
and
out
xchg
add
push
mov
mov
stc
mov
add
push
cli
jb
mov
mov
out
cli
js
lcall
push
lcall
lock
add
dec
lret
mov
jnp
xor
push
sahf
pop
fsts
fndisi(8087
mov
and
or
icebp
test
cmpl
and
inc
aad
mov
popf
push
mov
jno
cmp
or
jmp
daa
sti
test
sbb
outsl
adc
fcmovne
xchg
or
jns
sub
mov
fcos
xor
mov
pop
insb
cmpsb
fstpl
mov
lods
push
not
and
loop
lods
outsb
inc
adc
jecxz
sbb
iret
ss
or
and
pop
fs
inc
cld
xchg
cltd
jge
lds
xor
aas
lcall
jl
or
sbb
add
jo
pop
sbb
cmpl
cmp
and
lock
mov
jl
jecxz
lods
aaa
fnsave
inc
pop
rcrl
xchg
ljmp
arpl
cmp
dec
jmp
pop
inc
in
jg
push
push
xchg
stos
pop
lret
lods
jp
pop
adc
imul
mov
or
cmpsb
push
ss
dec
xchg
pop
aam
adc
enter
mov
hlt
xchg
xchg
push
sbb
fmul
add
fdivrl
push
push
shrl
leave
aam
cli
ffreep
inc
or
fwait
shll
mov
pop
mov
sti
mov
stos
mov
jle
mov
call
pusha
dec
add
or
jno
mov
lock
repnz
or
xchg
jp
fldenv
jp
adc
xchg
mov
fstps
jb
test
xchg
andl
sbb
pop
cld
pop
sbb
imul
or
ficoms
jge
cmp
mov
aam
popa
insb
sahf
lahf
xlat
popa
and
and
sbbl
lds
xor
dec
aas
sarl
and
out
in
out
dec
jecxz
mov
xchg
mov
addr16
into
add
outsl
clc
das
rep
pop
sub
cwtl
xchg
xchg
and
mov
in
movsb
and
repz
sub
mov
mov
mov
cmpsl
es
dec
dec
enter
jmp
out
in
sbb
outsb
mov
and
jae
rol
jge
sbb
out
add
sbb
push
addr16
pop
sbb
mov
lret
push
cmpsb
inc
hlt
hlt
cmp
aam
xchg
loopne
adc
add
bound
lea
stc
int3
fiadds
daa
mov
cld
pop
rcrb
sub
cmc
push
xor
fsub
orb
je
adc
pop
imul
cmp
aad
aam
lahf
mov
xchg
clc
or
sub
dec
aad
in
mov
dec
xor
int
ret
std
add
prefetch
or
push
jp
icebp
pop
and
dec
dec
or
scas
add
push
sbb
pop
jge
call
mov
and
arpl
lret
fs
lcall
cmc
sub
stc
xchg
mov
test
iret
ret
inc
and
pop
push
out
mov
shrl
mov
add
and
jae
add
ljmp
rcr
cs
pop
arpl
cwtl
xor
inc
sub
andl
sahf
mov
popf
mov
fmulp
cmpsb
and
pusha
mov
cwtl
addl
sub
or
push
pop
add
xor
idiv
cmpsl
jp
cmp
push
sar
ljmp
jle
pop
std
sbb
fstpt
sti
and
and
fcoml
icebp
in
mov
repnz
enter
daa
movl
movsb
sahf
inc
xchg
or
pop
push
mov
sbb
dec
sbb
jecxz
and
mov
hlt
pushf
mov
cmp
ljmp
mov
xor
cmc
mov
xor
cmp
insb
xchg
repnz
sbb
mov
iret
cmp
insl
or
js
mov
jns
rcr
notl
pop
mov
or
cmp
push
pop
cltd
xchg
mov
lock
ret
popa
inc
sahf
test
bound
ret
ss
or
xchg
adc
out
in
adc
in
stc
stos
mov
mov
or
cmc
mov
aaa
sbb
push
sarl
push
mov
sub
push
cmp
js
inc
sbb
imul
ret
dec
fisubl
jae
pop
out
fisubs
mov
mov
push
inc
sbb
or
lret
jbe
pop
add
jbe
adc
iret
dec
pop
pop
repz
mov
test
sub
push
inc
sbb
lock
cmp
pop
insl
icebp
inc
shlb
xchg
call
mov
fldl
push
shlb
cmp
icebp
stc
push
popf
push
outsl
sbb
sub
mov
aaa
push
out
sbbb
imul
sub
je
loop
sbb
cmp
push
pop
dec
lcall
addr16
loop
mov
mov
inc
repz
adcb
rclb
jb
push
push
xor
inc
xchg
sbb
sbb
mov
xchg
push
call
lods
call
pop
mov
fisttpll
and
dec
push
sbbb
xchg
stos
ret
inc
arpl
pop
in
jmp
mov
sahf
in
daa
xor
or
cli
imull
popf
shrb
jge
daa
inc
popf
inc
cmc
adc
jp
fldl
mov
push
scas
sahf
jno
xchg
xor
lods
dec
shll
cmp
jns
loop
cmpsb
xchg
subl
jb
fildll
mov
xchg
push
dec
cmp
fs
jb
push
nop
sub
das
int
rcrl
daa
mov
xchg
out
mov
incl
mov
leave
testb
and
aad
pop
inc
add
cmp
dec
iret
in
clc
inc
loope
mov
mov
adc
stos
jne
inc
mov
dec
jg
iret
icebp
aaa
sub
lock
add
push
jmp
dec
mov
jb
push
jg
mov
and
ret
xor
sub
fisttpl
pushf
cwtl
sub
mull
xor
sarl
out
dec
or
and
nop
cmp
add
cmpl
mov
enter
sbb
stos
cmp
lods
mov
pop
icebp
fnsave
cmp
mov
push
out
into
sub
adc
dec
xchg
sbb
shll
js
pop
inc
mov
sbb
adc
ss
mov
jg
fadd
mov
ljmp
dec
lahf
testl
xchg
fidivrs
inc
pop
je
cmp
mov
fiadds
push
push
push
xor
ror
out
mov
push
sahf
sbb
xchg
mov
adc
push
mov
mov
push
adc
cmp
repz
push
clc
stc
sub
call
or
dec
cmp
je
test
and
lret
and
inc
int
mov
dec
pop
sbb
jmp
push
out
ja
cmp
ja
push
mov
mov
jne
mov
cltd
addr16
fbld
cmp
dec
pop
fwait
add
neg
ss
lcall
les
jge
sbb
popa
xor
or
out
repnz
sub
pop
mov
es
hlt
stos
mov
cmp
add
mov
ljmp
adc
loopne
sub
push
inc
cwtl
lea
mov
inc
insb
not
inc
mov
jne
jnp
mov
xchg
out
mov
pop
cmpsb
es
dec
or
je
cmp
push
popa
mov
adc
add
mov
js
xor
inc
sahf
push
push
das
movsb
jl
inc
sub
pop
gs
push
dec
pop
push
les
pop
cmpsb
aam
cltd
jne
mov
int
sbb
fcoms
dec
inc
mov
pop
xchg
sbb
pop
pop
ds
loop
cld
fnclex
mov
int
and
lcall
lods
inc
adc
in
ret
fs
push
loop
xchg
addr16
xchg
adc
jnp
sbb
sbb
insb
jb
fs
and
cmpsl
dec
insl
dec
push
adc
add
dec
test
push
or
sub
shl
lock
xlat
test
mov
pop
loop
jno
aas
or
cmp
mov
cmpsb
sub
inc
cmp
sarl
cmp
xchg
das
or
insl
pop
stc
mov
cmp
dec
fsubl
dec
mov
icebp
aas
xchg
push
adc
mov
and
sbbl
cmp
jg
andl
or
gs
bound
and
xchg
loop
ja
and
inc
mov
test
xlat
fdivrl
cmp
insb
imul
push
push
or
pop
insl
jae
movsl
dec
scas
insl
dec
ret
mov
ljmp
sbb
test
mov
sti
cld
pusha
fldenv
push
loopne
sub
cwtl
lods
fldcw
sub
leave
outsb
movl
mov
mov
outsl
out
cmp
jno
add
jmp
enter
inc
sub
rorb
and
mov
mov
adc
ja
mov
cmp
adc
push
xor
cli
mov
or
fldt
jle
lret
pop
roll
lock
push
ret
lahf
icebp
jnp
dec
mov
repz
sub
mov
clc
fcoml
cmp
lods
mov
ss
stc
sbb
sbb
mov
imul
insl
lock
xchg
lods
movsb
insb
repz
xor
or
popa
fstpt
outsl
das
lret
gs
arpl
stos
adc
nop
lcall
adc
sti
in
sub
push
aam
push
xlat
adc
nop
gs
lahf
push
lcall
out
sbb
cs
mov
out
fwait
wbinvd
adc
push
pop
aam
loopne
and
jnp
mov
xchg
cmp
insl
push
cld
sahf
test
adc
pop
and
repnz
orb
mov
scas
push
jp
lock
mov
adc
call
lods
inc
push
xor
daa
mov
inc
int3
fstp
cmp
add
aad
pop
lock
and
xchg
imul
stos
aaa
in
out
sbb
cmp
and
stos
pop
shl
lahf
or
lcall
lahf
mov
loopne
jle
ja
adc
inc
dec
adc
pop
xor
inc
xor
push
jg
sub
mov
cs
push
xor
xor
ret
mov
sarb
add
cwtl
movsb
push
test
mov
negb
fs
sahf
repnz
mov
jp
movsl
xchg
ret
sub
popf
imul
clc
dec
jno
out
push
cmpsb
arpl
loope
lret
push
inc
clc
addl
sbb
mov
inc
push
mov
pop
cmp
xor
xor
or
insl
repnz
sahf
ret
popa
push
nop
daa
mov
in
nop
lods
aaa
jno
dec
movsl
mov
or
fabs
cmp
mov
pusha
pop
push
push
or
or
test
insb
ss
pop
dec
sbb
mov
pop
or
pushf
jp
ret
ret
stc
insl
mov
xor
movsl
iret
adc
cmp
and
add
enter
fwait
sub
pop
adc
repnz
ret
sbb
push
insl
icebp
into
mov
mov
xchg
loop
dec
movsb
jmp
outsb
and
adc
icebp
test
lahf
jmp
outsb
mov
call
rcl
push
jle
in
mov
mov
jle
inc
dec
sbb
jo
xor
xlat
xchg
push
mov
loopne
sbb
into
jmp
mov
inc
inc
lahf
lea
mov
bnd
bound
adc
or
movsb
and
jl
push
xlat
and
pop
adc
scas
cli
insb
mov
inc
jge
jle
stc
jno
dec
nop
jge
cltd
test
dec
roll
push
inc
ret
jb
popf
clc
and
setl
scas
sbb
lret
inc
jg
mov
cmp
mov
jecxz
in
cwtl
ja
cmp
xor
daa
push
adc
out
pop
sub
or
xor
inc
mov
fisubl
cmp
outsl
repnz
pop
push
xchg
xlat
push
mov
lods
test
iret
xchg
mov
sub
mov
pop
lahf
xor
sbb
loopne
cmp
lods
test
int
xor
push
hlt
prefetchnta
add
xchg
inc
fmul
out
fnstsw
das
add
loop
mov
inc
gs
sbb
ret
cwtl
jo
xor
push
mov
xor
jl
adc
mov
xlat
sbb
into
imul
icebp
roll
lds
cmp
ret
popf
iret
inc
dec
mov
dec
xor
imul
add
mov
in
sub
mov
shlb
or
int3
and
popf
mov
pop
lret
sub
and
xchg
mov
mov
inc
or
inc
jns
aam
jmp
fdiv
repnz
fistpll
cltd
sbb
pop
cmp
daa
stos
xchg
sub
dec
dec
pop
mov
jbe
fnstcw
lret
jl
xchg
adc
sbb
pop
movntq
xchg
loop
add
mov
ret
in
mov
pop
test
mov
lcall
cmp
mov
mov
stos
sub
mov
adc
xchg
cld
out
xchg
jge
or
inc
nop
test
xor
add
dec
es
push
push
xor
shr
lods
cmp
mov
add
inc
xor
dec
and
rcrl
jae
stos
cmp
movsb
inc
mov
repz
ds
pop
test
shlb
cmp
mov
push
mov
int
or
pop
mov
push
iret
sub
cltd
cmp
aad
jl
or
sti
mov
stos
cmp
jno
lret
pop
push
add
pop
ja
push
inc
or
mov
int
out
aaa
jnp
js
jle
iret
shll
jns
adc
cmp
or
call
xchg
jge
mov
push
or
cwtl
enter
mov
mov
cmp
loop
pushf
mov
cmp
or
mov
mov
fstpl
mov
push
inc
popf
mov
mov
adc
in
shll
mov
ja
mov
and
lock
xor
loopne
sub
mov
jb
stc
xchg
ja
imul
gs
jnp
pop
cs
lcall
es
int3
jecxz
dec
push
dec
clc
sbb
xor
das
xchg
push
cltd
push
arpl
cmp
repnz
jb
sbb
or
fiaddl
mov
fmul
jmp
fsts
dec
and
lock
jmp
fcmovb
push
and
sti
out
pop
aas
adc
nop
sar
jb
xor
test
xorb
fs
add
fs
xor
lcall
mov
cmpl
push
push
cmpsb
fistpll
push
push
xor
lcall
shl
or
lret
decl
es
lahf
and
pushf
outsb
gs
xor
mov
mov
cmc
enter
rcl
xor
outsb
out
pop
push
jle
adc
lcall
ljmpw
stos
jb
xchg
out
es
inc
push
addr16
cmp
fsubrl
xor
and
dec
jle
xchg
fnstcw
cmpsl
pop
inc
mov
lahf
clc
mov
imul
stos
push
je
dec
mov
pop
sbb
push
lods
lret
jbe
xchg
mov
sarl
int
std
aaa
inc
ds
push
adc
xor
mov
cmp
xchg
rolb
cs
fists
cmp
and
out
pop
jo
lcall
daa
jno
repnz
outsb
fmuls
or
rcrl
nop
sub
lret
jne
subb
inc
out
movsb
cwtl
push
rcrl
jns
and
fdivrl
cmp
and
or
add
leave
xor
and
outsl
les
lret
lds
scas
xor
or
cmpsl
adc
aam
inc
pop
jno
and
popf
mov
sbb
jnp
sbb
xor
cmpsb
mov
testb
inc
sub
add
fmul
dec
ds
ja
mov
jo
addb
xor
mov
imul
mov
ret
test
jg
add
adc
pop
popa
cmp
mov
cmp
mov
inc
mov
xchg
les
jbe
sarl
sbb
lahf
cmp
fldl
in
test
repnz
cmp
fbstp
scas
dec
inc
shl
sbb
scas
xor
imul
sarl
pop
popf
sbb
lods
xchg
adc
mov
push
out
pusha
sarb
shll
adc
test
aad
insb
or
cs
sub
adc
dec
xorb
mov
jmp
repnz
and
pop
jecxz
jp
xor
outsl
sbb
mov
daa
ja
rcr
lods
xchg
dec
sub
clc
push
mov
js
sti
inc
clc
pop
xlat
mov
mov
stos
sub
sub
and
test
inc
testb
pop
mov
jb
push
repnz
js
xor
xlat
imul
scas
pop
mov
mov
mov
cvtps2pi
fimull
push
cs
sbb
push
jo
adc
xorb
inc
ss
mov
dec
add
fisttpl
fiadds
stc
sub
in
xor
or
nop
inc
jmp
cmp
jl
cltd
push
outsb
mov
iret
mov
adc
mov
sbb
cmp
fwait
mov
shl
or
std
inc
add
cwtl
sbb
lods
out
rolb
jmp
or
sbb
divb
mov
sarb
adc
ret
add
stc
dec
shrb
pusha
push
dec
stos
inc
dec
xchg
negl
mov
or
xchg
jge
cwtl
xor
push
xor
push
out
frstor
cwtl
jecxz
in
sbb
jecxz
loope
lods
fdivr
addb
inc
ja
cmp
sbb
aas
push
mov
dec
lret
std
cmc
loopne
fbstp
jg
loope
adc
jmp
xchg
lods
rcrb
cltd
or
mov
jp
in
inc
xchg
pop
adc
daa
cs
cmpsl
scas
divb
pop
mov
pcmpeqb
stc
data16
jnp
xor
mov
xchg
stos
fstpt
enterw
out
mov
jns
inc
scas
iret
popa
xchg
sbb
mov
jl
xor
push
push
pop
outsb
push
scas
ret
mov
xlat
jg
shl
sub
ljmp
dec
gs
dec
sbb
fildll
adc
and
rcrl
loope
sub
fstl
das
mov
add
and
mov
out
inc
fldt
add
cmc
mov
dec
adc
nop
repz
call
inc
cmpsl
push
in
ss
lea
inc
or
or
sub
mov
jb,pt
cs
mov
sbb
stos
std
cmp
in
je
fstpl
cmp
stc
cwtl
loope
imul
add
fsts
movsl
rorb
lods
push
cmp
fdiv
sbb
jns
out
dec
addb
mov
leave
sub
and
mov
push
sarb
adc
out
adc
push
in
out
movl
outsl
xchg
cmp
pop
add
popf
lea
repnz
out
xor
scas
test
popf
scas
inc
add
sub
jl
arpl
mov
xor
lret
push
xor
lds
sub
cmp
test
xchg
sti
and
fsubs
je
cld
call
xor
movsl
jp
adc
popf
out
lahf
loopne
push
insb
imul
lcall
jp
jl
xor
xor
inc
lret
sub
add
adcl
les
inc
inc
cmp
lahf
jbe
sub
test
sub
lahf
lcall
mov
out
mov
pop
or
sbb
cmp
rdmsr
cmp
inc
cmp
jne
cld
xchg
xor
xlat
fsts
jno
sub
cmc
daa
pop
lods
adc
fildl
sbb
jo
add
cmpsb
inc
or
xchg
mov
sbb
fsub
pmaxsw
xlat
sub
test
xor
fstpl
clc
mov
es
clc
xchg
push
lods
stos
aam
call
je
inc
roll
mov
arpl
pop
fdivs
adc
push
mov
xchg
push
mov
inc
hlt
sub
repnz
stos
stos
xchg
sbbb
ja
lods
call
in
cmp
into
ljmp
adc
add
stos
sbbl
sub
inc
mov
fstpt
test
sub
outsl
or
add
mov
fcoms
addb
push
pop
xchg
aam
cmpsl
mov
sub
push
mov
stos
dec
enter
iret
cmp
js
sbb
out
mov
cmp
inc
lret
mov
jns
aas
iret
insb
hlt
je
lret
cmp
xlat
hlt
inc
stc
jle
outsb
mov
in
aas
fildll
add
ss
outsl
dec
test
sub
stos
ds
xchg
adc
cmp
in
popf
int3
js,pn
or
cmp
add
test
dec
pop
sub
or
fs
ds
inc
sti
lcall
faddl
add
mov
or
lds
stos
test
pusha
pop
cmp
xor
stos
mov
pop
inc
sarl
add
into
mov
mov
or
out
push
add
pop
into
mov
jae
ds
jmp
adc
xor
rorl
fmuls
mov
xchg
push
ret
mov
jecxz
xchg
hlt
movsl
cmpsb
jno
jae
jne
sub
inc
out
in
scas
cmpsl
xor
mov
data16
lods
les
mov
add
imul
ret
dec
push
push
mov
push
outsl
adc
mov
addb
jo
jle
inc
add
mov
call
lea
cld
fnstsw
sahf
lret
xchg
into
addr16
mov
notb
cmp
ret
mov
testl
pop
divl
sub
rcrl
sub
jne
mov
sbb
nop
scas
outsl
lock
sbb
add
int3
mov
pop
push
sbb
shl
mov
mov
lock
lods
fs
fwait
add
cmpl
fiaddl
inc
mov
mov
aas
adc
jp
pusha
ficoml
aad
push
jnp
adc
ljmp
cmc
mov
push
jecxz
add
rorb
mov
arpl
shll
cli
cmp
pop
cmpsb
ja
notl
int
cmp
jmp
xchg
mov
cld
js
jg
or
sbb
sbb
jbe
sahf
xor
stos
or
jmp
insl
das
xor
mov
testb
stos
test
jge
sbb
imul
ss
out
fsts
or
xchg
cwtl
icebp
dec
outsl
xor
mov
sbb
sbb
out
lret
movsb
add
inc
add
jb
push
mov
mov
inc
mov
dec
movsb
lret
pop
xchg
jg
in
pop
orb
cmp
and
ret
adc
mov
ror
cltd
aas
es
loope
jno
jno
jge
loopne
adc
stc
mov
xor
mov
xchg
cmpsl
lds
sbb
leave
mov
pusha
call
fiadds
out
movsl
fnstcw
out
sbb
shrl
int
xchg
jb
out
insb
icebp
fidivs
xchg
push
xchg
aad
mov
jge
inc
imul
lcall
fwait
lods
cltd
mov
loopne
pop
push
jns
nop
daa
movsl
mov
inc
test
ficoms
stc
pushf
paddsw
aad
mov
in
pop
cwtl
movsl
cs
fdivrl
jmp
in
jge
mov
mov
in
dec
dec
ljmp
inc
push
mov
push
outsl
scas
sahf
sarb
orb
stos
dec
fmull
fiaddl
loope
mov
adc
pop
fwait
dec
jle
inc
xchg
push
or
dec
lcall
fwait
pop
xchg
mov
pop
sub
adc
jno
jp
mov
popf
sbb
fldl
dec
sbb
ss
mov
imulb
mov
jne
into
fxch
sub
jmp
cmp
cmp
mov
add
and
nop
cmp
xor
lea
sbb
sbb
cwtl
je
xor
xor
lret
dec
ret
jbe
rcrb
in
dec
mov
sub
orl
inc
jecxz
loop
lret
sahf
push
test
fs
cld
dec
or
sub
push
xlat
int3
pusha
test
cld
and
jno
in
arpl
add
out
add
call
stos
pop
mov
pusha
sahf
add
leave
add
movsl
leave
add
out
rcrb
mov
adc
adc
pop
or
and
movsb
mov
mov
jo
cmp
push
addr16
loop
pop
test
mov
imul
rclb
stos
cmc
push
pop
dec
mov
add
or
mov
mov
int
lret
sti
fisttpl
das
jle
addr16
outsb
sub
cmp
mov
add
sbb
mov
xchg
lea
add
cmc
or
movsb
xchg
push
in
mov
adc
jae
adc
ja
cltd
pusha
ret
mov
lahf
xchg
ja
aad
das
push
xchg
popf
cmpsb
sub
cmp
out
cltd
dec
xchg
add
loop
cltd
repnz
and
and
dec
xchg
pop
mov
lahf
pop
std
push
sbb
mulb
lret
jo
dec
push
sahf
adc
orb
mov
ror
pop
pop
sbb
xchg
xchg
xor
aam
or
leave
ds
jno
push
lahf
insb
mov
ret
or
nop
adc
inc
iret
and
mov
je
loop
or
or
inc
es
dec
adc
and
adcl
clc
pop
mov
mul
sarl
cs
and
xlat
pop
mov
adc
push
icebp
scas
aam
pop
jns
sbb
pop
stc
ret
dec
movsl
sub
and
push
mov
nop
cs
xchg
sub
xchg
aam
test
test
mov
mov
loop
jp
in
mov
scas
int
cmp
mov
add
inc
adc
ds
fdivrs
mov
or
pop
and
popf
ja
test
mov
jne
es
out
movsl
aam
sbb
gs
leave
inc
in
inc
jne
clc
stos
jg
outsl
or
leave
dec
lea
imulb
dec
lods
sub
cmp
pop
jne
sub
cmp
pushf
cwtl
mov
dec
cmp
xlat
xor
sub
stos
lock
mov
pop
mov
fdivrs
mov
mov
sbb
mov
stc
mov
loopne
stc
xchg
rclb
imul
jb
cmp
das
push
xor
cwtl
faddp
fwait
add
lea
enter
jbe
arpl
dec
mov
stc
adc
push
iret
push
int3
call
sbb
std
int
mov
pop
inc
or
jle
cmc
in
push
push
daa
mov
test
pop
icebp
iret
add
testl
rcl
mov
test
daa
xor
ret
jne
test
jo
pop
insb
scas
lods
sarb
les
cld
mov
mov
int3
push
pop
shrl
dec
xchg
test
lods
mov
add
daa
movsl
xor
and
pop
cmp
sub
mov
mov
add
fwait
sub
std
cmp
dec
cli
and
ja
dec
gs
in
test
pop
ret
pop
inc
push
and
xchg
pushf
jae
add
dec
mov
icebp
jns
aaa
dec
push
movb
cmp
ss
out
jb
scas
xor
or
xchg
out
cmp
push
arpl
cmp
xchg
lods
dec
xor
sbb
jge
mov
imul
clc
adc
fadds
ds
xchg
inc
movsl
outsb
dec
or
out
cmpsb
addb
test
not
rcrl
mov
popa
dec
pop
ret
inc
orl
xor
jae
aam
rcll
xor
out
push
repz
lea
push
scas
or
xor
xchg
jb
ja
jne
adc
fstps
cwtl
jae
lock
sbb
fisubl
lea
testb
dec
cmp
lret
dec
push
push
sahf
loope
inc
hlt
mov
xor
inc
inc
and
cltd
aas
mov
adc
daa
add
gs
jnp
pop
jbe
fistps
push
inc
dec
xor
xchg
sbb
mov
jb
cmp
push
mov
jmp
xchg
push
sub
push
out
xor
xchg
and
adc
jo
or
insl
xchg
push
lods
mov
xchg
pop
xchg
aam
repnz
xchg
jmp
mov
xchg
cli
andb
cmp
mov
xchg
or
rclb
jge
add
in
mov
aam
out
mov
jg
out
jl
xor
cmc
les
fwait
loopne
and
jp
bound
jecxz
fs
xor
pushf
and
pop
popf
mov
xchg
std
push
push
aad
lahf
cmp
mov
nop
rorl
xor
stc
in
aaa
repz
jo
xor
or
in
nop
dec
jp
and
mov
int
mov
out
mov
pop
imul
loopne
pusha
jne
dec
pop
stos
fcmovnbe
xchg
pop
fidivs
sbb
test
loope
inc
arpl
out
enter
scas
inc
or
dec
out
push
xchg
insb
jo
jp
mov
lahf
push
add
lret
dec
mov
out
test
out
cli
lea
inc
adc
add
cmp
or
sti
and
pop
xor
adc
clc
je
clc
inc
sbb
push
mov
decb
ss
mov
mov
leave
push
scas
inc
out
rcrl
ds
pusha
fisubl
stc
sbb
ret
adc
and
enter
orb
sbb
push
xchg
call
adc
out
and
inc
sbb
push
aaa
cmp
add
cmc
test
lock
mov
stos
lahf
fwait
test
sbb
ficompl
sub
push
jbe
xchg
xacquire
cmpsl
sub
es
sub
or
daa
mov
xor
int
xchg
outsl
xchg
xchg
or
rcrl
hlt
lcall
stos
aas
and
pop
sub
scas
fmull
sbb
nop
fsubp
loop
das
in
cltd
xor
aas
and
jns
mov
ret
add
into
push
out
xchg
adc
xlat
sbb
dec
ljmp
std
and
add
xlat
mov
popf
iret
jb
mov
loopne
xchg
cmp
movsb
test
insl
pop
movntss
push
nop
jmp
pop
xor
cmp
mov
imul
ja
xchg
int3
and
jmp
rcll
bound
test
test
mov
lods
xchg
lods
xchg
inc
pop
mov
or
js
std
jg
cwtl
arpl
mov
stos
lahf
cli
lock
in
fsub
jl
lock
testl
lcall
push
pop
mov
xor
push
dec
stc
pop
jae
add
stos
lret
mov
call
mov
movsb
and
mov
push
fadds
mov
cmpsb
pop
xor
into
adc
imul
rcl
sub
pop
fldl
mov
sub
mov
call
cmpsb
jle
imul
scas
adc
cwtl
insb
sub
sbb
pop
das
leave
jnp
add
cmpsl
int3
popf
jo
mov
cmp
mov
aad
loopne
test
xor
pop
push
fisttps
mov
xchg
pop
adc
cld
pop
jge
mov
sub
negb
mov
inc
pop
popf
inc
imul
add
lea
mov
inc
pushf
js
lea
sub
mov
out
aam
jb
inc
push
nop
movsl
jl
adcl
repnz
xlat
scas
inc
js
jbe
std
sub
and
cwtl
bound
and
mov
js
cmpb
sbbl
dec
bound
xchg
loopne
stos
lret
arpl
das
neg
dec
stc
or
jnp
push
mov
scas
lret
stos
orb
jg
faddl
rol
or
cltd
dec
jb
out
mov
mov
rcr
jns
xor
loopne
pop
enter
aam
xchg
int3
es
rcrb
hlt
pop
test
cli
test
ds
xor
jae
sub
mov
testb
cli
xor
rorl
adc
cmp
sub
pop
mov
rcrl
pop
aas
inc
jmp
arpl
cmp
rol
stc
dec
call
add
fisubl
out
mov
imul
jge
push
movsl
jg
and
lds
insl
call
scas
mov
outsb
mov
cmpsb
gs
lock
inc
xor
sbb
pop
rcl
adc
mov
or
jbe
aaa
loope
imul
in
pop
fmull
cld
or
sbb
fs
and
fsubrs
jbe
es
xor
xor
xorb
subl
mov
and
js
iret
cltd
test
cs
inc
int3
jns
mov
and
cli
inc
scas
fistl
ret
iret
jae
stos
and
and
int3
lcall
mov
mov
dec
clc
cmpsb
shl
adc
jg
cmc
jae
stos
out
repz
xor
lea
fimuls
das
loop
pop
inc
lret
sbb
mov
sahf
sub
add
jp
int
inc
scas
repnz
xchg
dec
das
jbe
out
pop
ss
btc
cmp
insl
mov
aam
je
push
lods
ds
and
pop
mov
mov
jo
jmp
mov
add
cld
dec
inc
insl
inc
out
jl
mov
aaa
dec
popf
lds
gs
sbb
daa
loopne
push
into
std
scas
icebp
les
aaa
push
or
dec
pop
lcall
pop
cmc
js
mov
idivl
rorb
jl
mov
sbb
nop
addr16
or
inc
hlt
icebp
xchg
mov
sbb
pop
int
adc
sbbl
jno
out
xor
dec
insb
mov
repnz
push
push
shlb
mov
add
dec
xchg
leave
mov
push
dec
das
lea
shlb
orb
icebp
jecxz
data16
pop
mov
bndldx
roll
aam
push
mov
sbb
clc
mov
sub
clc
outsl
pop
out
insl
sbb
neg
sbb
sbb
mov
or
xchg
push
mov
inc
sub
sbb
add
pop
stos
sub
fstps
cmp
pusha
fsubl
push
pop
push
fisttpl
cld
fsubl
outsb
push
mov
mov
xlat
push
rcl
add
incb
fwait
dec
and
jp
mov
es
add
or
pop
jnp
test
adc
cmp
jns
movsl
call
in
loopne
pop
aam
in
xchg
jno
scas
insb
sub
inc
arpl
dec
and
mov
push
inc
cmp
mov
cmp
inc
fnstcw
mov
fwait
mov
repz
out
stos
mov
mov
cmp
jmp
or
loop
addr16
mov
sbb
xchg
loope
lret
mov
sbb
mov
mov
les
jae
inc
insl
mov
jb
push
cltd
pushw
adc
add
mov
sti
jmp
adc
pop
xchg
xchg
adc
cmp
add
cmp
add
insl
push
test
push
dec
inc
iret
jne
push
rcl
scas
add
sub
in
test
lret
popf
fimull
hlt
jecxz
mov
adc
mov
xchg
movsb
aaa
pop
mov
js
inc
pop
movl
outsl
movsl
fwait
rcrb
push
push
loop
mov
sub
in
jae
lock
gs
adc
daa
out
mov
xlat
sub
pushf
shrb
dec
clc
cmp
fcmovne
fdivl
mov
imul
movsb
xor
ljmp
int3
lods
aam
xor
dec
test
add
add
mov
filds
push
hlt
out
outsl
push
pop
push
lods
xor
or
xor
sahf
jl
and
push
lret
ret
cmp
adc
mov
xchg
xchg
fisttpl
lret
sbb
fisubs
dec
mov
movsb
cwtl
rorb
xlat
insb
js
dec
jnp,pn
dec
les
loop
mov
add
inc
xchg
adc
cmpsl
push
pusha
das
xchg
add
mov
stos
loopne
lock
cmpsl
je
ljmp
pusha
stc
outsl
mov
ljmp
fistps
mov
xor
out
dec
jnp
push
adc
push
in
mov
cmp
sbb
mov
xor
in
or
push
jae
push
pop
gs
sbb
clc
aaa
test
dec
aaa
into
adc
and
lahf
gs
imul
int3
sahf
aad
jp
jge
sti
test
mov
test
push
test
ret
jne
sub
popf
cs
out
push
or
clc
push
loope
outsb
ret
xor
pop
je
dec
adc
push
push
test
xor
jae
iret
adcb
mov
sbb
add
cmp
sub
or
mov
mov
sub
xor
inc
daa
mov
mov
lcall
negl
xchg
cmp
dec
daa
sub
or
data16
nop
xor
mov
pop
pop
cld
mov
iret
fildll
pop
inc
ret
dec
loopne
sbb
dec
adc
pusha
loopne
dec
insl
adc
jb
inc
fcom
stos
ljmp
dec
fsubr
subb
arpl
inc
sub
in
ds
mov
sub
xchg
mov
popa
or
enter
mov
mov
in
or
push
add
addr16
scas
jp
jecxz,pn
repz
sub
inc
pop
adc
add
jae
ret
sbb
xchg
dec
mov
mov
lock
rorb
je
mov
add
out
push
scas
test
xor
ret
or
push
dec
fdivrs
lock
jae
test
pop
out
addr16
pop
lea
and
rcrb
iret
pop
dec
pop
mov
fstps
dec
ret
mov
jg
fisubs
out
int
cmp
dec
ds
fwait
int
mov
loope
mov
xlat
xchg
push
int
cmpsb
mov
mov
out
jno
int3
ret
and
inc
les
adcb
dec
dec
icebp
enterw
loope
imulb
cmpsb
push
iret
adc
push
lahf
outsb
jns
mov
add
xchg
sub
testb
mov
cmp
add
push
aas
sub
js
sub
pusha
lods
adcb
mov
mov
mov
pop
xor
pushf
insb
cs
call
mov
fldcw
inc
aad
ret
cmc
mov
imull
insl
and
pop
das
adc
or
das
movsb
inc
pop
xchg
das
pop
popf
in
ja
push
dec
push
daa
jns
fwait
int
jge
push
jg
aad
fldl
jns
popf
or
mov
dec
push
jne
adc
jp
imul
jno
ret
cmc
push
fcoml
pop
xlat
or
add
cmpsl
ds
mov
outsl
sbb
scas
in
jp,pt
inc
sub
movsb
dec
cmpb
data16
pop
test
xchg
dec
add
stos
push
cmp
repz
test
cmp
fistl
push
aad
jl
push
jns
repnz
inc
loope
cwtl
fwait
aam
add
in
pop
flds
andl
push
cmp
adc
fsts
movsl
lret
xchg
push
ret
popa
cmc
je
fmul
pop
shll
inc
sbb
aad
into
loope
jbe
and
cmp
ss
in
divl
and
add
push
sub
fcoml
fwait
add
add
lret
inc
sbb
mov
and
jnp
imul
jmp
repnz
pop
sub
adcb
sbb
mov
xchg
xchg
cmp
int
xchg
rcrl
sub
sarb
aaa
clc
mov
inc
stos
loope
aam
outsl
aam
insl
insl
fisttps
push
cmp
nop
lds
nop
or
mov
into
lods
lret
dec
rolb
dec
test
ret
fdivr
fldenv
stos
xchg
push
frstor
dec
ja
fistps
jmp
cmp
out
and
cwtl
out
bound
inc
outsb
jae
out
vminpd
mov
popa
int3
xchg
inc
arpl
dec
rclb
mov
push
cmp
cwtl
iret
enter
jp
stos
and
adc
xor
test
mov
popf
xor
inc
push
push
aad
mov
pusha
jecxz
mov
mov
icebp
push
outsl
and
ret
sbb
xlat
mov
inc
loop
mov
dec
push
test
pop
sbb
lods
pop
xchg
cmpsb
pop
cmp
or
lock
add
add
jnp
lds
sbb
inc
push
pop
cmpsl
fwait
hlt
ret
ja
outsb
test
adc
fsubrl
or
pop
add
xlat
lods
push
jg
push
leave
bound
mov
mov
xor
xchg
jbe
inc
gs
sbb
ss
rcll
dec
mov
push
faddl
and
xchg
add
and
sbb
sbb
mov
jg
frndint
sahf
mov
ficomps
ret
sub
dec
fcoml
jo
lods
out
jge
scas
xor
xchg
jo
cmpsl
xchg
leave
mov
je
xchg
pushf
or
or
mov
test
daa
xchg
out
jle
or
inc
loop
cli
and
or
mov
or
mov
scas
pop
adc
adc
in
inc
call
xlat
cmp
jg
mov
dec
out
ss
pop
enter
cs
sub
xchg
push
mov
pop
subb
fcomip
jecxz
push
fidivs
sub
das
add
pop
xor
mov
xchg
push
jp
or
mov
xor
sbb
adc
xor
pop
dec
out
loope
pop
xchg
pop
cld
sbb
rorl
cmp
pop
out
insb
gs
jg
mov
mov
dec
leave
out
xor
push
inc
adc
frstor
jmp
data16
inc
sbb
stc
lods
pop
adc
in
addb
and
aaa
roll
add
and
in
mov
sub
in
lea
lret
fidivs
negl
or
cmc
mov
aad
imul
push
mov
add
mov
jo
call
mov
sbb
cmpsl
popa
jp
xlat
inc
sbb
xchg
ret
mov
jecxz
fcmovnb
add
xor
dec
fs
ljmp
mov
rorl
cmp
pop
outsb
adcb
lods
loopne
add
sub
mov
inc
dec
mov
iret
dec
adc
ljmp
out
or
les
ficompl
dec
and
and
shrb
pop
fucomip
jmp
not
mov
pop
lahf
sub
xor
dec
arpl
dec
jecxz
out
sti
and
daa
insl
hlt
mov
jecxz
addr16
jg
fstpl
adc
sbb
cmp
adc
dec
lds
push
insl
lods
les
pop
gs
cmp
ja
cld
pop
in
and
stos
mov
sbb
cli
test
jb
das
push
notb
into
imul
and
arpl
rcrl
pop
in
rcll
jo
aas
andb
insl
jle
lahf
sub
mov
jbe
ret
mov
xlat
sbb
add
dec
out
push
cli
adc
in
jae
shl
push
push
xor
and
mov
mov
movsl
jnp
shr
fcoms
jo
lock
and
les
lods
daa
push
loope
pop
clc
ret
xchg
xor
movsb
pop
call
imul
inc
int3
in
pop
mov
ja
hlt
jnp
xor
adc
stc
gs
mov
test
testl
xchg
add
sti
mov
aam
mov
ret
int3
scas
jmp
push
pop
fdiv
shl
sub
dec
gs
mov
lds
pop
add
mov
sbb
xadd
cmp
sahf
and
xchg
es
nop
push
mov
sbb
xchg
sub
or
das
pop
xchg
jb
test
cmc
add
daa
cmp
in
mov
push
not
ja
push
out
sub
fs
inc
cmpl
jmp
jne
sbb
mov
ficoml
repnz
iret
popl
push
mov
pop
fmull
ljmp
jnp
mov
sbb
lods
fidivrl
adc
loopne
cmp
imul
loope
jae
mov
pop
or
iret
dec
add
xchg
jmp
xchg
movsb
sub
bound
jne
sbb
or
decb
jecxz
push
test
mov
jb
sub
jns
pop
filds
jle
lods
loopne
clc
lods
push
out
push
dec
aas
fucomi
jle
out
or
scas
push
cwtl
lahf
scas
inc
mov
push
lock
mov
lds
inc
pushf
mov
push
mov
repz
aaa
jb,pt
divb
sub
shll
pop
data16
mov
movsl
mov
mov
push
divb
sub
movsl
mov
out
enter
xchg
notl
pop
lods
call
stc
cld
add
cmp
out
cld
in
sbb
push
cmp
call
push
jle
clc
repnz
xchg
jae
pop
xor
cltd
inc
scas
adcb
rolb
pop
imul
and
insb
fwait
or
and
stc
adc
cli
push
add
js
mov
xchg
push
das
shrl
ja
andb
bound
dec
into
cltd
pop
sbb
jg
cmpsl
cli
jmp
inc
xchg
lret
hlt
or
cmp
mov
shlb
xor
jne
inc
pop
or
push
into
fucomip
mov
aaa
insl
push
nop
es
push
std
repz
cmpsl
or
xor
sub
lret
jg
sub
insl
fwait
pop
sub
repnz
dec
xchg
call
cmp
sub
cmp
and
aas
lcall
addr16
imul
pop
mov
mov
inc
sbb
je
mov
adc
mov
imul
popa
push
into
int3
mov
inc
xchg
pop
mov
push
aaa
addl
sbb
dec
sbb
push
or
push
pushf
xor
lock
dec
lea
dec
insb
in
xor
mov
push
push
cwtl
frstor
popf
push
dec
jmp
lea
add
addr16
mov
lcall
movsb
shll
popa
mov
fstpt
loope
jle
adc
enter
mov
jae
out
adcl
dec
rcrb
js
xor
das
and
jne
dec
pop
fcoms
pop
repz
in
nop
mov
sbb
jg
lds
test
popf
push
push
sbb
pop
xchg
ss
xchg
dec
int
pop
pop
adc
lret
ret
push
inc
loope
shlb
jmp
fistl
pusha
pop
mov
mov
fsts
xor
stc
mov
icebp
bound
push
jg
or
loop
xor
sub
xor
mov
adc
rol
or
rorl
mov
adc
popf
push
jge
adc
movsb
pop
call
cltd
jbe
or
lods
mov
cs
xchg
pushf
subl
je
mov
fwait
sbb
jns
pop
outsb
daa
cmp
andb
je
xor
and
clc
push
hlt
or
mov
cs
aam
cmpsb
or
pop
popfw
mov
lods
push
and
lahf
pop
cmpsl
cld
in
cmp
xchg
into
pusha
sub
fsubrs
out
sbbl
ljmp
xor
mov
fsubrp
xchg
jne
addr16
mov
insb
sahf
mov
mov
sub
cmp
adc
jae
push
rcrl
mov
clc
into
xor
dec
scas
jo
pop
iret
pop
lret
mov
bound
les
xchg
sub
mov
mov
jno
lock
sbb
aam
inc
add
xor
jo
mov
int
ret
jg
pushf
lock
and
les
sub
pop
sub
lcall
pusha
and
xlat
cmp
hlt
ret
add
test
jecxz
rcll
or
es
idiv
push
setge
movntq
out
js
fwait
xchg
ds
cmp
pop
adc
sbb
push
and
addr16
jns
and
mov
mov
mov
add
pop
sbb
adc
mov
cmp
push
mov
loopne
cmp
inc
adc
cmp
lret
imul
and
sbb
pop
repnz
out
imul
outsl
in
sub
jns
and
dec
imul
lods
push
jns
pop
mov
stos
mov
pop
xor
iret
inc
push
roll
add
mov
sbb
or
out
mov
inc
push
cltd
ja
movsb
test
add
test
push
ret
mov
or
mov
outsl
ficomps
lds
leave
sti
jmp
xchg
cmp
mov
arpl
xor
inc
xor
cmpsl
push
loop
lret
js
jmp
ljmp
mov
jae
mov
mov
add
sub
hlt
mov
mov
mov
xor
test
shl
cmpl
std
or
fisttpl
dec
call
push
outsb
mov
mov
or
mov
dec
xchg
pop
sbb
es
dec
lds
jne
int3
pop
shlb
xor
jmp
and
or
icebp
mov
jo
cmp
jb
fs
mov
inc
inc
repz
sbbl
fists
push
loope
add
fimull
lods
push
pop
xor
xor
enter
xchg
out
ds
testl
pop
js
and
leave
pop
push
add
or
lret
mov
push
daa
adc
inc
rcr
xor
push
and
add
mov
js
and
mov
xchg
dec
mov
aaa
daa
adc
sbb
xchg
imul
add
repnz
test
xorl
aaa
push
fwait
adc
aad
pop
dec
jle
mov
push
jecxz
mov
dec
jo
dec
jns
aas
ficomps
xchg
imul
mov
adc
test
arpl
clc
push
mov
jbe
jns
cmc
or
in
mov
mov
xor
lea
sbb
cmp
mov
mov
xor
lret
mov
mov
icebp
aam
ret
aas
jecxz
sbbl
mov
in
adc
filds
lds
insb
jns
nop
mov
outsl
dec
mov
test
or
xor
jae
mov
inc
dec
call
aaa
leave
ss
test
lods
insb
std
fstpl
or
insl
jecxz
mov
cmp
outsl
iret
cltd
push
fistps
jecxz
gs
stc
mov
xchg
js
aad
sub
sub
daa
xor
arpl
data16
jnp
popa
mov
dec
lea
xchg
stc
pop
into
repz
xor
lret
mov
mov
pusha
inc
ljmp
mov
js
mov
cmp
pop
fdivl
push
sub
ljmp
test
jle
xor
xor
lods
cmp
stc
daa
push
push
popa
lea
jmp
aam
mov
mov
mov
into
call
push
adc
dec
in
jb
jo
mov
jge
inc
mov
sub
sbb
mov
xchg
inc
insl
insl
stos
dec
fisubl
cmpsl
sbb
movsl
scas
adc
adc
scas
pop
jne
mov
cmpsb
leave
adc
stc
dec
pop
imul
outsb
sub
addr16
fs
in
cwtl
sbb
cmp
mov
sbbb
sbb
xchg
mov
push
mov
data16
xchg
stos
jp
add
or
divl
push
add
sar
jmp
jo
jecxz
pop
mov
push
and
bound
out
mov
pop
movsb
ret
data16
inc
cltd
fwait
or
mov
xchg
gs
xor
mov
imul
xor
xchg
fs
push
call
arpl
mov
dec
push
fadd
ljmp
pop
sub
mov
push
or
stos
clc
out
gs
into
add
push
cmp
mov
push
xor
aas
insl
pushf
cwtl
shr
fildll
aad
andl
aad
push
jae
loopne
mov
push
and
dec
lret
cmp
ret
stc
popf
inc
fwait
inc
ret
lods
aad
mov
jb
rorl
inc
jmp
adc
jae
mov
outsb
in
xor
mov
cs
sar
jo
lcall
popf
push
jle
dec
mov
adc
loope
aam
cmp
lock
xchg
push
out
push
jge
and
xor
pop
aaa
imul
pmaxsw
push
push
fcoms
push
sarl
in
adc
mov
jns
xchg
push
pop
or
pop
push
pop
xor
xchg
push
push
mov
xchg
nop
int3
js
jp
mov
push
lock
int3
popf
mulb
rdtsc
rcll
fidivrs
mov
add
pop
lret
fdivs
add
mov
add
in
fwait
pop
lods
dec
inc
enter
jg
in
sbb
inc
pop
mov
or
ret
fstpl
add
pop
pop
aam
sub
aam
movsl
adcl
fwait
int
jmp
cmpsl
js
push
das
inc
mov
aaa
xchg
aad
mov
xor
push
cmp
cwtl
lret
scas
cmp
cmp
jl
push
pushl
mov
push
fdivrs
aas
jp
sti
sti
fcomp
and
or
sbb
push
scas
rorb
dec
enter
ret
sti
dec
call
nop
aad
leave
mov
or
cld
dec
mov
pop
mov
jbe
xchg
test
or
jmp
cmc
mov
sbb
or
xchg
cmp
dec
cli
and
ret
cmpl
gs
lcall
sub
push
clc
jmp
insl
cld
test
cmp
sbb
js
xchg
in
js
pop
or
xchg
dec
or
sub
sar
xchg
push
xchg
adc
fcmovb
cmc
in
jp
cmp
ret
scas
dec
in
xor
jnp
push
pop
js
out
ret
jnp
sub
std
dec
loopne
movsl
sub
inc
gs
ljmp
and
pop
jp
and
and
cmp
js
cmc
test
xlat
das
test
inc
push
mov
sub
inc
in
xlat
xchg
pushf
mov
arpl
movsb
lcall
inc
jbe
int
push
mov
mov
int
dec
mov
add
push
out
shll
push
out
sub
out
push
mov
nop
fimull
cltd
add
imul
adc
jb
stos
jnp
insb
dec
push
emms
xchg
enter
in
add
mov
jmp
inc
inc
lea
mov
or
lahf
es
sahf
mov
sahf
das
xor
jmp
pop
sbb
data16
popf
ret
sub
je
jecxz
imul
sub
push
cmp
mov
push
or
insl
push
mov
mov
es
mov
add
sub
movsl
lahf
sub
mov
xbegin
sub
test
out
aam
ret
out
jns
fsubl
addr16
arpl
in
pop
or
stos
faddl
mov
imull
adc
or
outsb
mov
sub
lds
jg
stc
push
adc
fcompl
sub
fidivrl
mov
xor
pop
dec
mov
int
mov
adc
mov
adc
clc
inc
rcrl
pop
clc
lret
and
pop
dec
bound
push
push
movsl
stos
jnp
xor
mov
add
lahf
xchg
mov
mov
push
cmp
jne
mov
xor
arpl
push
pop
dec
les
dec
inc
and
stc
or
inc
rorl
xlat
std
out
sub
inc
jnp
pop
push
lret
push
sbb
mov
aam
dec
test
imull
ret
out
lods
sti
sbbl
fcmovbe
jnp
rcl
xchg
loopne
adc
xor
scas
add
mov
lods
addl
sbb
jge
int
rol
push
aam
xchg
mov
push
in
push
outsl
outsb
jle
jae
sbb
sub
pop
ss
mov
test
cmc
popf
mov
pop
mov
out
jge
shll
cmpsb
jne
imul
test
insb
stc
repz
mov
mov
lods
icebp
push
hlt
repz
pop
mov
dec
jecxz
aam
cmp
pushf
clc
jg
add
push
aaa
adc
sbb
int3
or
movsl
shrb
out
mov
aad
cmpsl
aad
jg
mov
mov
shrb
xor
test
rcrl
lods
call
push
dec
lret
call
mov
scas
loope
inc
outsb
jbe
mov
imul
mov
cmp
sub
fnsave
add
xor
cmp
xchg
sub
inc
cmpsl
push
jmp
jae
in
lock
mov
pusha
jmp
pop
gs
shlb
outsb
inc
pop
add
jns
sbb
sbb
xor
inc
push
inc
mov
jo
ret
cltd
dec
shrb
std
inc
sti
fidivs
lods
test
cld
or
es
or
repnz
mov
dec
jno
fisubs
dec
mov
mov
mov
push
fucomi
push
jle
sub
jl
fdecstp
lods
cwtl
idivb
push
jmp
in
mov
fimull
and
sub
mov
hlt
pop
movsb
repz
pushf
or
scas
xor
mov
mov
mov
adc
aad
fildl
mov
popa
pop
test
pushl
les
push
mov
jb
push
stos
call
push
mov
xchg
fsubl
in
dec
popf
ror
jnp
cmp
jl
addr16
xor
mov
cltd
lea
test
lods
pop
mov
jb
inc
add
adc
xor
or
dec
insb
jno
jmp
jnp
jmp
xchg
xlat
scas
xor
cltd
xchg
mov
popa
js
and
mov
repz
sbb
pop
cmp
scas
outsb
popa
lret
mov
add
sbb
loope
xor
clc
xchg
gs
addr16
jb
sub
pop
and
push
xor
leave
pop
xchg
xchg
pop
les
pop
inc
sbb
call
in
adc
sti
pop
and
popf
ljmp
cmp
pop
xchg
sub
fidivs
mov
repz
xchg
mov
icebp
pop
cmp
shlb
stc
mov
push
imul
adc
sub
clc
push
into
les
lds
stc
cli
or
sbb
xchg
xchg
sbb
pusha
xor
stc
loopne
nop
and
cmp
cmc
stos
or
ja
and
mov
jne
icebp
or
out
mov
mov
mov
lcall
test
xchg
lahf
jno
negb
xchg
xchg
rolb
mov
mov
punpcklbw
push
push
or
and
out
push
xchg
fldt
loope
imul
popa
push
lea
mov
stos
test
repnz
shrb
mov
into
in
inc
mov
mov
loop
push
in
dec
bnd
jmp
jecxz
fimull
negb
xor
gs
pushl
outsl
push
fwait
jl
inc
stos
nop
fidivrs
aam
lods
push
adc
testb
pop
dec
xchg
pop
jge
call
sub
roll
inc
and
mov
nop
sbb
dec
es
xchg
dec
push
jecxz
pop
bound
outsl
dec
out
cs
imul
cwtl
sbb
ret
adc
push
add
icebp
ret
dec
push
fwait
and
jnp
and
push
xor
js
or
jge
sub
dec
fadds
and
jp
push
jb
into
and
pop
mov
jecxz
xchg
test
jnp
idivb
aam
les
inc
sub
cli
dec
aaa
repnz
mov
mov
leave
addr16
cs
fcomps
push
insb
divl
int
sbb
and
dec
notl
movsl
cmpsl
inc
add
shll
addr16
aad
out
inc
test
and
add
fs
popa
frstor
inc
shll
adc
lds
enter
frstor
ret
jae
and
rcrb
fimuls
lret
subb
xor
mov
sub
jg
push
mov
or
push
pusha
dec
loope
push
jl
adc
jl
jae
iret
dec
fdivs
xchg
aad
daa
movsb
iret
stos
inc
loopne
and
ret
sub
mov
js
outsl
mov
js
and
gs
add
test
pop
imul
les
mov
jecxz
es
aaa
outsb
btr
aam
clc
std
mov
ss
adc
mov
pop
std
adc
sbb
cmpsl
loopne
arpl
mov
stos
add
pop
mov
inc
and
aam
lahf
xor
scas
add
out
mov
mov
aas
jle
pop
shrl
mov
sti
xor
pusha
in
push
xor
outsb
pop
mov
xor
test
and
movsl
adc
xchg
sbb
inc
loopne
sub
cmp
dec
mov
sbb
pushf
insl
frndint
or
insl
pop
outsb
jnp
cmpsl
scas
sub
jae
mov
out
xchg
hlt
mov
adc
add
push
sub
repz
adc
sub
into
cld
test
push
mov
addr16
fcomps
aam
aas
iret
xor
mov
and
nop
mov
jge
les
sub
push
push
jns
data16
roll
outsl
mov
cltd
movsl
cs
or
frstpm(287
mov
stc
movsb
xchg
or
xchg
jno
dec
insl
jnp
lds
fs
dec
mov
jae
adc
mov
sahf
pop
xchg
and
das
test
and
das
inc
aam
cmp
repnz
cli
push
and
cmp
lds
sub
push
pop
int
dec
cmc
dec
xchg
popf
or
xchg
popa
push
push
imul
test
mov
pop
push
pmulhuw
sub
pop
mov
pop
test
cmp
inc
and
push
sub
aad
xchg
std
aad
xchg
xchg
mov
and
rcr
fs
dec
int
xchg
imul
xchg
cmp
addb
xor
out
in
loop
lahf
fs
xlat
push
arpl
lret
scas
jge
mov
test
and
scas
hlt
iret
push
inc
fwait
lahf
fnstsw
outsb
fs
pop
inc
test
dec
cmp
xchg
loope
jo
repnz
jl
int3
pop
stc
adc
andnps
negl
bound
inc
loopne
sub
jno
mov
xchg
enter
sub
scas
mov
pop
jmp
sbb
lret
mov
lcall
scas
lods
rclb
pop
xchg
cmpsb
mov
cltd
dec
ja
add
push
mov
out
mov
les
inc
adc
dec
push
push
fcmovne
je
xchg
mov
out
into
mov
cwtl
int
cmp
mov
or
push
aad
push
in
mov
cmc
jp
stos
test
out
int3
cmp
or
add
mov
cmp
test
in
push
jmp
int
and
test
fmul
call
scas
out
aam
mov
mov
mov
adc
inc
jbe
xor
inc
iret
cmc
xchg
xchg
pusha
lods
lock
jge
sub
jge
push
add
xor
cmp
out
movsl
sub
stos
test
jle
inc
lcall
icebp
enter
insl
mov
repz
xchg
sub
mov
sbb
nop
or
cwtl
and
loop
cmp
data16
add
sahf
xchg
xor
cmc
and
add
jecxz
pop
jae
sub
mov
addr16
sub
in
jbe
scas
inc
rolb
xor
adc
jmp
repz
cmp
cltd
roll
popa
lds
lods
testl
lods
mov
jno
mov
mov
test
sbb
fidivl
mov
jne
dec
inc
xor
gs
inc
loopne
mov
fldenv
mov
pop
and
lds
or
xor
std
jnp
jae
fisubs
mov
test
rorl
cmp
mov
pavgw
xor
pop
imul
dec
mov
xchg
lret
or
lock
mov
pop
dec
add
add
in
xlat
ds
mov
stos
loope
cli
add
adc
nop
jp
pop
jp
pop
push
inc
cwtl
jno
sub
jecxz
data16
sbb
test
mov
in
sub
mov
inc
scas
stc
fistpl
imul
jbe
int
mov
cmc
pop
cltd
scas
fdivrs
push
mov
pop
sbbl
adc
adc
and
xchg
fnstcw
cmp
dec
jmp
cli
lret
adc
in
ljmp
xchg
push
mov
repz
loop
mov
stos
inc
insl
cs
scas
mov
sarl
icebp
adc
bound
dec
fwait
sbb
in
or
hlt
push
fnsave
shld
add
dec
mov
outsb
xchg
inc
sti
movsl
pop
lret
shrl
lcall
bound
fisubs
jno
cltd
push
int
les
scas
jnp
out
clc
mov
cltd
sahf
and
xor
mov
fwait
inc
sub
inc
and
or
pop
xchg
mov
push
jb
jb
or
mov
fsubrl
ja
push
jle
movl
xchg
adc
incl
pop
xor
std
fnstcw
loopne
jg
and
out
cmp
inc
sti
mov
lcall
push
jns
cmp
jl
cmp
and
jbe
adc
test
in
fimuls
mov
divl
incl
das
pop
adc
push
jge
xchg
fisubs
mov
inc
data16
into
das
mov
adc
cwtl
ror
push
aaa
cmp
or
jae
sbb
push
hlt
jo
jb
dec
xor
pusha
xchg
int3
mov
mov
inc
jp
filds
in
push
inc
notl
mov
ss
pop
into
sbb
jno
fmuls
jbe
cs
cmp
lods
fmul
pop
scas
divl
aam
arpl
pop
mov
mov
sarl
and
dec
addb
sub
lea
push
rorl
cmp
fwait
jnp
add
roll
fmuls
inc
ffreep
loopne
push
jp
push
out
sbb
cmpsb
cmp
push
dec
push
jge
jb
adc
imul
int
adc
xlat
push
add
cld
mov
shl
jo
js
mov
popa
jge
and
imul
inc
sub
stos
push
dec
and
rorl
movsl
sbbb
xor
jg
mov
lcall
test
frstor
mov
mov
rcl
push
test
adc
aas
jne
inc
sub
push
cmp
xor
das
jmp
ret
push
xor
or
dec
stc
out
add
push
push
cmp
xor
pusha
mov
das
testl
test
test
cmp
neg
cmp
fcmovne
mov
jnp
sbb
popa
out
dec
pop
add
cmpsl
mov
pop
jns
mov
cmp
dec
cwtl
dec
cmp
fbld
xor
and
fcoms
xlat
rclb
gs
outsb
mov
inc
xchg
pop
insb
mov
out
xchg
cmpb
divl
in
adc
and
je
rcl
nop
jg
mov
xchg
mov
imul
outsl
out
rcl
push
inc
xchg
int
aaa
sar
xor
adc
jecxz
add
xor
xor
adc
mov
in
in
mov
ror
push
push
pop
popa
push
test
jb
nop
and
loop
mov
movsl
clc
jne
lret
adc
sbb
hlt
push
repz
insl
ja
lcall
add
add
sbb
adc
das
imul
dec
idivb
jecxz,pn
test
lods
sbbl
loopne
jmp
pop
mov
pop
push
test
mov
nop
pusha
add
jbe
cmp
add
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
xor
rclb
adc
jl
out
pop
ljmp
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
out
or
lods
lret
gs
add
roll
mov
pop
adc
int
mov
inc
xchg
add
xchg
pop
inc
add
or
dec
test
and
out
jns
push
loopne
inc
sbb
ljmp
mov
dec
in
mov
cmp
xor
mov
adc
jle
lea
sbbb
clc
jae
aas
sbb
sbb
push
outsl
pop
pop
fldt
pop
out
dec
and
and
out
jg
in
aad
xchg
mov
push
data16
daa
mov
loopne
inc
sbb
js
out
loopne
pop
out
rcrl
es
aaa
push
scas
adc
adc
cwtl
in
jmp
dec
mov
and
fs
loopne
inc
mov
rcll
adc
js
out
in
inc
mov
and
in
loopne
inc
mov
and
out
loopne
inc
mov
and
out
add
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
adc
dec
mov
and
imul
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
lea
js
out
jmp
inc
mov
rcll
shlb
add
stc
test
and
out
rclb
inc
js
out
adcb
adc
js
out
in
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
out
loopne
inc
mov
and
bound
mov
push
fidivrl
fldenv
cmp
cld
aaa
int3
testl
lock
stc
movsb
leave
pop
jo
jle
test
ss
lds
mov
out
xchg
testb
inc
ja
ret
into
lods
movb
inc
pop
shr
dec
cmp
fisttpl
ds
lcall
push
and
pop
xchg
xchg
xorb
pop
ret
inc
ret
push
scas
add
mov
push
cmp
dec
push
sub
out
jnp
std
jbe
sbb
in
sub
test
xor
xchg
dec
xchg
cltd
push
nop
in
stc
mov
hlt
movsl
fs
loop
lods
cmp
inc
jecxz
dec
dec
ja
jb
jle
adc
inc
rcr
fdivs
gs
mov
ret
fwait
or
lods
cmp
imull
push
lds
iret
pop
loop
push
sbb
test
pushf
or
fisubl
mov
scas
lahf
dec
or
daa
ja
push
xor
aad
fisttpl
rclb
cmp
xchg
inc
out
sbb
lret
popa
fucomi
pushf
pop
jb
lret
add
xchg
jo
outsl
andl
cwtl
shlb
cmp
adc
jo
fisubl
ret
cmp
xchg
hlt
sbb
out
mov
push
fistpll
mov
mov
arpl
mov
jnp
and
cltd
test
inc
decb
and
or
mov
pop
xor
out
xchg
jnp
sbb
mov
lahf
inc
mov
xor
aaa
ds
mov
sbb
xchg
dec
out
mov
ret
popf
cltd
ss
or
pop
mov
push
sub
add
mov
inc
jge
mov
cwtl
inc
xor
mov
mov
leave
and
xchg
ljmpw
pusha
popf
sahf
shr
mov
stos
ds
pop
ret
outsl
push
lock
sbb
and
sarb
push
fwait
cwtl
jae
cmc
fs
pop
add
in
iret
pop
adc
jl
ss
dec
cmpsl
mov
cmp
and
xchg
or
xchg
sbb
push
xor
rcll
dec
push
sub
sub
leave
cmpsl
push
xchg
int3
pop
add
xchg
adc
je
jbe
dec
jo
sahf
mov
in
pop
adc
fcoms
fisubrs
lods
scas
fidivrl
ljmp
fbstp
insl
push
test
inc
imul
jg
clc
test
mov
or
mov
aaa
jge
and
sbb
mov
in
mov
xchg
pop
scas
ja
into
xlat
fdivrp
mov
cltd
dec
outsb
das
sub
or
pop
mov
mov
add
rcrl
add
push
stc
lret
jne
xchg
fcom
cli
jmp
mov
pop
xor
je
testb
mov
inc
std
scas
mov
push
sbb
cltd
adc
xchg
push
push
push
mov
int
faddp
aam
or
lods
jg
test
inc
dec
scas
and
stc
sub
orb
push
in
enter
movsl
test
sub
aad
lds
stc
out
aas
jo
aas
mov
cmp
iret
mov
data16
int3
fldcw
ret
adc
cmp
test
and
fidivrl
sub
mov
push
lock
mov
dec
ret
stc
jle
xchg
add
xor
imul
sub
or
mov
xchg
movsb
xor
push
xor
rcrl
pop
jb
divl
push
in
es
loope
adc
pop
into
repnz
leave
aad
mov
push
sub
cs
test
lods
aad
inc
inc
std
out
pop
scas
adc
add
lret
outsb
cmp
dec
aad
outsl
jnp
sub
imul
fcompl
pop
ss
mov
out
arpl
inc
adc
adc
jge
cs
into
xor
jl
insl
add
loope
xchg
add
insl
mov
adcl
clc
iret
into
mov
lea
sbb
sub
push
scas
ss
das
iret
cmp
jmp
jo
mov
sub
pop
jo
jno
sbb
lods
mov
cwtl
lds
dec
movsb
imul
and
int
mov
push
push
cmp
mov
sbb
std
out
aaa
add
ja
sbb
out
sbb
push
xchg
dec
repz
push
stos
lods
sbb
pushf
inc
lods
arpl
std
sub
mov
int
ret
sar
xchg
daa
push
add
cmpl
outsl
fsubrp
xlat
and
add
jns
jge
and
mov
js
insl
in
les
addr16
mov
and
out
pop
ljmp
ja
inc
pusha
dec
dec
add
pop
jnp
jbe
and
cs
mov
test
mov
test
push
or
sbb
lahf
sbb
sub
add
inc
roll
daa
dec
lds
insb
ja
sbb
je
push
mov
in
pop
pushf
addr16
jle
lret
dec
pushf
mov
jmp
out
lret
xchg
mov
ret
cmc
lods
mov
adc
ds
push
pusha
sbb
test
es
fcmove
push
jns
stos
movl
aam
into
js
cltd
out
push
inc
push
and
fmull
scas
jae
push
adcb
shl
inc
xchg
push
mov
mov
in
lea
jnp
pop
inc
push
adc
in
cltd
in
bound
inc
xchg
mov
add
cmp
adc
mov
int3
sarl
lds
push
push
movsb
inc
popa
cmp
mov
cmp
les
sbb
sub
dec
outsl
lret
xchg
jge
roll
clc
int3
dec
leave
push
shlb
shrb
jae
outsl
cld
sti
inc
inc
js
dec
orb
xchg
mov
dec
jns
cwtl
cld
lock
mov
xchg
xlat
out
ficompl
cwtl
mov
adc
ljmp
add
xchg
fisubrl
push
add
cltd
leave
test
adc
out
enter
test
jns
jle
insb
idivb
mov
scas
out
xor
inc
inc
push
inc
push
mov
sub
js
out
out
out
ret
outsb
inc
cltd
ds
lret
fwait
iret
in
fidivs
es
dec
cltd
loope
push
xchg
jae
andl
inc
aas
popf
mov
jns
les
push
adc
mov
cmp
insl
or
fs
repz
sub
ret
jbe
jnp
cmpsb
out
adc
mov
and
pop
xchg
lock
fdivrs
adc
cli
fadds
subb
divps
mov
iret
cltd
rolb
dec
ret
lret
push
iret
shll
aas
loope
addr16
out
xchg
mov
enter
pusha
aaa
push
clc
mov
or
dec
repz
jne
pop
cmpsl
lds
sub
inc
or
sub
xchg
ret
test
mov
fistps
or
nop
test
dec
xchg
add
mov
stos
stos
test
sbb
mov
insb
dec
inc
in
mov
cmp
cmc
push
les
mul
xchg
ficoml
mov
mov
ljmp
pop
lods
lahf
sbb
std
push
arpl
out
out
push
mov
mov
sub
stos
push
mov
mov
int
mov
sbb
sub
imull
fwait
sub
scas
es
sbb
sub
push
sub
add
mov
xchg
fldenv
shlb
iret
fsubrp
jbe
in
les
push
jb
cmp
pushf
test
call
shl
adc
adc
test
adc
add
mov
xchg
ljmp
dec
dec
pop
lods
lods
idivb
roll
add
or
pop
or
inc
mov
incb
add
adc
test
push
inc
out
xor
mov
mov
fs
fs
jno
inc
loopne
xchg
push
daa
hlt
xchg
in
push
insb
mov
loope
out
dec
xchg
xchg
shr
aaa
dec
sbb
imul
movsl
sbb
mov
lods
jecxz
not
shll
lods
sbb
sub
jg
xor
nop
xchg
pop
push
int3
scas
adc
pop
jbe
jns
xchg
mov
sub
mov
add
stc
cltd
jb
xor
outsb
fisubs
mov
daa
mov
adc
daa
dec
mov
push
push
jmp
and
jg
ja
ss
sub
inc
add
sbb
or
pusha
mov
sbb
xchg
les
add
sbb
push
jmp
push
frstor
or
adc
dec
sbb
mov
clc
testl
repnz
add
enter
inc
or
push
adc
hlt
scas
xchg
popf
roll
adc
das
and
dec
push
lcall
and
mov
shl
aaa
shrl
data16
les
fisttpll
stos
sbb
pop
xor
jl
mov
xchg
push
mov
jo
addr16
add
cwtd
out
xchg
mov
push
lock
cmpsl
daa
aas
adc
lods
inc
sbbb
adc
lret
stc
mov
push
adc
inc
mov
fimull
std
and
cli
shrb
ljmp
gs
imul
das
lds
imul
mov
cmpsb
fistl
add
fisttpl
and
inc
int
adc
pop
inc
mov
cwtl
es
xchg
lea
jne
inc
cmp
fs
and
xor
pop
cli
mov
lret
out
and
cmp
stc
andl
dec
cmp
sub
data16
jmp
test
jg
repnz
xchg
fmuls
std
cltd
leave
push
movsb
jg
aad
pop
mov
mov
scas
hlt
xor
fdivrs
lds
jne
test
repnz
nop
addr16
lahf
repnz
or
inc
xchg
xchg
icebp
xor
je
xchg
push
scas
in
andb
adc
inc
sub
enterw
iret
and
jmp
int3
cmp
and
sti
xor
movb
addb
rcrb
lret
shll
out
cs
jg
push
fwait
shlb
cmp
loop
inc
add
cli
add
mov
and
mov
jg
movsl
es
bnd
xor
in
out
cmp
inc
xchg
std
inc
aam
fisttps
frstor
xchg
enter
cltd
and
insb
lods
jmp
loopne
mov
and
jnp
jmp
jecxz
adc
jge
lds
add
jb
inc
mov
sti
mov
orb
aaa
xor
add
lock
cmp
mov
shl
jp
jmp
jo
jg
popa
jmp
cmp
and
mov
les
and
fs
mov
outsb
dec
sub
movsl
sbbb
adc
out
fsts
pop
sarb
add
stos
add
js
xchg
and
jmp
mov
js
fstl
scas
shl
jae
stc
and
data16
cmp
je
mov
sti
or
cwtl
fldcw
scas
dec
pop
pop
inc
mov
aaa
push
out
ret
ffreep
stos
push
roll
pop
pop
adc
mov
adc
fsts
loop
mov
std
out
pushf
push
pop
mov
cmp
clc
inc
push
hlt
fistps
imul
and
add
das
xor
jmp
jle
jp
mov
jle
out
aaa
lahf
xorl
outsb
inc
or
mov
mov
dec
imul
out
add
faddl
add
pop
or
adc
fnstenv
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
