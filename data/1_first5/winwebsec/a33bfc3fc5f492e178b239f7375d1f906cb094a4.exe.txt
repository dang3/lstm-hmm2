sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
cltd
fildl
test
cmp
inc
addr16
jecxz
cltd
adc
movsl
add
and
pop
sti
jo
xor
jl
mov
imul
test
ja
movsl
mov
sub
loope
pop
and
fs
out
jnp
push
mov
adc
cli
fisubl
mov
sub
pop
or
loop
xchg
sbb
dec
jnp
pop
out
das
jg
shlb
fcompl
adc
lret
cli
push
mov
xor
sub
lea
jp
xor
mov
inc
out
sub
arpl
and
jbe
je
mov
aas
pop
out
push
in
mov
mov
jae
fildl
xor
test
sarl
cltd
push
std
xchg
leave
or
mov
sahf
mov
mov
sub
pop
cs
divl
and
adc
icebp
imul
cli
mov
xchg
nop
cmp
jns
int3
adc
sbb
mov
add
insb
cmpsb
orl
push
movsl
lds
mov
mov
xor
aas
aam
push
fwait
ja
mov
and
or
inc
jae
aas
xchg
in
push
cwtl
es
pop
sub
push
outsl
std
cmp
and
clc
mov
cwtl
stos
mov
inc
xchg
cmpsb
sti
int3
out
cmpsl
push
xor
push
imul
lcall
push
sti
in
pop
test
sub
add
lods
in
cld
shlb
mov
sbbl
add
sub
push
lahf
xor
jp
mov
jle
mov
push
or
fcmovne
pop
notb
mov
xchg
and
shl
aam
out
loope
bound
int3
ret
pop
outsl
push
xchg
aam
mov
imul
dec
sbb
sahf
stos
pushf
xor
or
xor
outsb
inc
data16
lret
into
fidivl
and
gs
push
inc
int
lock
orl
add
nop
lcall
xchg
ss
insl
clc
jmp
inc
scas
dec
int
scas
mov
in
dec
or
push
pop
icebp
aaa
fpatan
rcr
and
sub
ret
mov
push
cmp
addr16
adc
shlb
or
push
push
lahf
dec
aaa
inc
adc
push
jl
fisttpl
dec
jns,pt
mov
sub
shll
push
xchg
aad
cmpl
pop
xchg
push
in
lds
outsl
pop
add
cs
add
sbb
test
xchg
das
lds
pop
jns
ret
jmp
add
push
dec
ret
xchg
out
mov
pop
popa
stos
icebp
cmp
cmp
inc
pop
push
mov
es
sub
pop
loop
scas
jbe
fldt
shll
push
xor
arpl
add
idivb
sbb
addr16
imul
mov
mov
mov
pop
mov
nop
out
cmpsl
decl
mov
sub
mov
push
rcrb
call
mov
pusha
in
pop
shlb
das
pop
shll
sbb
mov
pop
jecxz
jb
xor
push
jl
fwait
cmp
pop
ret
ret
shl
mov
xchg
pop
add
in
sub
scas
aas
or
sbb
filds
gs
cld
pusha
mov
mov
fisubrs
enter
stos
pop
bound
or
addr16
or
xorl
pop
jmp
jge
ret
mov
icebp
movsl
pop
addr16
xor
loope
mov
sbb
out
stc
jb
xor
sbb
xor
pop
in
pop
push
sub
mov
jo
sbb
pop
pop
es
orb
scas
stos
insl
scas
leave
movsb
inc
push
fwait
scas
out
mov
fldenv
andb
sar
pop
adc
scas
pop
mov
frstor
popf
fwait
dec
pusha
inc
jle
add
leave
mov
pop
leave
mov
push
mov
lods
mov
sbb
dec
xor
inc
lret
pop
daa
dec
cmpb
mov
out
inc
shlb
mov
mov
fisttpll
cmc
and
mov
jl
fs
xor
hlt
dec
sarb
stos
mov
popl
push
jae
dec
mov
push
pop
shlb
icebp
enter
test
stc
in
data16
pop
dec
xor
and
mov
mov
fcomip
add
mov
jp
movsl
sbb
aam
scas
dec
aas
pop
adc
or
test
push
xchg
sub
enter
data16
and
and
outsb
insl
adc
shll
mov
and
adc
mov
out
idivl
cmp
and
or
pop
sub
and
add
jns
mov
cmp
xchg
xchg
cld
jmp
pop
xchg
mov
fsts
out
pop
into
push
mov
fs
sbb
xor
dec
and
mov
sub
dec
mov
sub
xchg
fdivr
pop
xchg
loopne
jno
test
arpl
push
cmp
mov
ljmp
sbb
xchg
lods
pusha
sahf
cmp
sub
or
mov
pop
jg
clc
daa
mov
je
cmp
enter
nop
mov
lods
and
add
ret
stc
pop
sti
push
jb
lds
jecxz
pop
movsb
or
cmpsl
cmp
bnd
mov
stos
lods
push
sub
into
adc
cltd
push
push
out
cmp
mov
dec
lock
rorl
adc
push
mov
ficomps
cmp
xlat
xchg
loop
leave
fsubrs
sub
xor
cwtl
add
ficoms
xchg
adc
repz
out
daa
test
mov
sbb
mov
nop
outsl
lret
mov
mov
push
pushw
jl
ss
fstpl
scas
test
cmp
fs
jbe
sub
dec
test
push
push
cmpsl
inc
cmc
or
fstl
jb
daa
in
aam
dec
jnp
xchg
and
pop
push
dec
xchg
call
jp
aad
bound
gs
pop
stos
or
push
cltd
mov
fiadds
cmp
outsl
lods
sbb
pop
stc
data16
loop
dec
add
into
out
andl
dec
sub
cmp
mov
in
cmp
scas
dec
cmpsl
das
push
out
out
scas
inc
adc
mov
dec
and
xlat
xchg
mov
out
ljmp
mov
test
repnz
xchg
mov
push
xor
mov
inc
ljmp
mov
mov
mov
movsl
loop
out
push
iret
jbe
cmp
ds
and
int3
ds
sar
pop
mov
lahf
xor
push
push
lret
xchg
pop
iret
std
jge
dec
xchg
gs
jl
lea
inc
dec
inc
adc
call
cmpsl
cs
repz
aam
inc
stos
jnp
adc
imul
push
dec
scas
sti
cld
lods
dec
fisubrs
cmp
inc
rcrb
mov
test
pop
fs
lds
cmovns
lods
nop
push
out
push
pop
outsb
icebp
andl
adc
inc
fistps
lods
nop
pop
je
rcl
in
clc
jns
and
dec
jp
dec
pop
inc
adc
mov
shll
push
jo
gs
cltd
adc
lods
jnp
dec
fstpt
leave
stc
sub
fcomps
mov
lods
sbb
pop
mov
sub
mov
outsb
jns
sbb
cmp
iret
sub
push
movsb
in
inc
mov
inc
movsl
mov
icebp
or
mov
ljmp
lods
mov
pop
add
sarl
inc
cmp
out
sub
cmp
dec
jle
mov
movsb
fistpll
stos
mov
push
mov
imul
mov
jl
add
imul
mov
push
mov
aas
enter
dec
call
xchg
pop
push
mov
lret
cwtl
cli
sub
push
lock
scas
cmp
pop
lret
jo
cs
mov
mov
jp
popf
movsl
retw
aam
or
lds
sbb
xor
popa
ljmp
sbb
xchg
cmp
jo
push
sub
movsl
cmp
mulb
xchg
xchg
fs
push
or
je
adc
jno
pop
dec
sti
jo
adc
clc
adc
sahf
lret
jns
sub
rcrl
test
inc
fwait
leave
out
jmp
sbb
xchg
andl
jp
push
and
nop
jnp
mov
pop
loope
insl
andb
push
and
cld
mov
lret
jne
xor
rcrl
sahf
in
push
push
add
out
in
mov
add
das
cmp
xor
add
clc
pop
imul
or
sbb
rcrb
enter
inc
in
notb
dec
pop
adc
xor
sbb
push
sub
xchg
ja
cmp
sarb
mov
mov
int3
push
jp
mov
xor
sub
popf
sbb
stos
sub
pop
and
adc
sbb
or
jl
scas
sub
out
out
lahf
lahf
aam
jae
and
xchg
aam
andl
add
inc
pop
repnz
push
shlb
arpl
mov
shll
pushf
stc
push
sbb
test
pop
stos
mov
and
mov
imul
mov
nop
pop
jae
orl
ficoms
jo
rcrl
mull
bound
movsl
test
jl
aaa
fwait
repnz
push
fsub
rcrb
xchg
sbb
test
cs
cmp
inc
mov
aam
fisubl
ds
mov
add
mov
jl
inc
lret
inc
push
push
call
scas
in
sbb
or
sbb
add
rorb
sub
xor
mov
and
mov
mov
cmpb
movsb
subl
pop
movsb
out
cmpb
mov
loope
movsl
leave
or
insb
push
out
sub
pop
divb
sti
pop
popf
ss
push
xchg
repz
mov
sahf
adc
je
std
pop
inc
pop
enter
dec
stos
cmpsb
clc
out
enter
shrb
popl
inc
cld
into
pop
and
and
test
aas
and
adc
stc
push
pop
mov
movb
pop
shll
test
mov
adc
mov
xchg
ret
jns
mov
and
fs
repz
pop
push
or
xchg
sub
sub
inc
std
jne
cli
add
out
std
pop
mov
xor
bnd
lcall
mov
adcb
add
adc
lods
cs
int3
push
jecxz
mov
imul
xor
or
aas
ss
jmp
fisubrl
test
ss
gs
and
xlat
ja
xor
int3
cmp
shlb
xchg
or
lods
into
sbb
daa
inc
mov
dec
jo
xchg
loopne
jl
fldl
adc
jg
jmp
fdivrl
cmpsb
lods
addr16
fld
in
daa
mov
imul
loope
out
subl
into
jmp
out
jecxz
int3
aam
pop
pop
xchg
pop
call
mov
xor
push
loop,pt
pop
xor
cmp
push
fdivr
repz
mov
dec
es
cmp
adc
pop
mov
enter
mov
lods
nop
and
js
popa
daa
rcr
mov
pop
sbb
mov
inc
pop
les
cmp
mov
xor
sbb
jmp
dec
int3
out
idivb
ljmp
cmp
in
lea
push
ja
jle
movb
adcl
add
rcrb
pop
push
mov
sarl
ret
in
fsubl
test
xchg
lcall
popfw
lcall
and
jl
lret
gs
mov
loopne
std
jecxz
fdivs
aas
into
inc
sbb
fiaddl
or
int
inc
iret
into
add
loop
jmp
push
outsl
mov
add
hlt
arpl
pushf
std
mov
fdivrs
in
push
out
jns
pop
repz
cmp
mov
jo
pop
xor
push
mov
sbb
sub
push
iret
out
mov
movsl
sbb
addr16
xchg
push
ss
push
jno
test
hlt
and
jbe
cwtl
cmc
sub
mov
movsl
int
movsl
shrb
mov
lcall
gs
notb
outsl
mov
rclb
out
push
fs
dec
imul
nop
test
push
pushf
arpl
inc
cmp
xor
mov
dec
sub
mov
out
aad
xchg
addr16
fimuls
cmp
adc
sbb
in
filds
outsl
cmpsb
das
es
sbb
sub
adc
lret
rorl
lock
je
adc
mov
push
mov
mov
test
mov
sbbb
cmp
mov
in
outsl
cli
aas
call
dec
fsubl
or
push
lds
pop
repz
xchg
into
jg
sub
ret
push
mov
pop
mov
and
imul
test
iret
push
out
cmp
mov
daa
jno
outsl
ljmp
aas
pop
ljmp
lret
lock
ljmp
icebp
sub
or
xchg
sub
jae
push
mov
add
mov
cmp
jnp
out
int3
lahf
mov
adc
inc
mov
int3
or
ljmp
iret
out
dec
push
insb
inc
pop
cmpsb
mov
pushf
push
test
test
mov
jnp
jp
fsubr
rcrl
mov
mov
push
repz
lock
cmp
repz
adc
dec
hlt
xchg
lcall
xchg
mov
repz
pop
pop
push
lahf
in
cmpsl
out
sub
ficoms
xchg
mov
ds
aad
inc
pop
jg
push
arpl
adc
loop
push
fnsave
dec
xorb
jmp
fwait
iret
mov
into
pop
cmp
adc
jle
push
jmp
xchg
jnp
sub
mov
xchg
iret
push
bound
push
push
jne
mov
bound
mov
popf
fdivrl
or
in
jmp
cmp
add
in
jne
xchg
fnstcw
imul
push
pop
test
outsl
and
adc
daa
in
push
xchg
mov
pop
inc
ja
loopne
fmuls
daa
lods
xor
loop
sarb
mov
push
and
mov
xor
sbb
or
push
out
inc
sub
testl
or
es
in
push
pop
out
fcoml
mov
sbb
lock
lock
or
xor
inc
ret
sarl
js
sub
ret
push
cmpsl
stos
xor
pop
pop
xlat
push
mov
pop
nop
sbb
stos
repnz
stos
outsb
loopne
add
push
or
adc
inc
dec
push
das
add
scas
repz
mov
cmp
fistl
add
fs
pop
ficoms
inc
adc
jl
sbb
dec
sub
add
test
pop
je
das
add
pop
jae
stos
xor
andb
arpl
lahf
or
push
dec
cmp
sub
ret
dec
jb
adc
or
push
fs
mov
dec
xor
test
in
mov
jne
sub
popf
or
jne
push
lret
aas
negb
xor
jle
fwait
jne
mov
sbb
into
cld
rolb
pop
adc
push
jnp
movl
xlat
xor
mov
dec
fmuls
dec
icebp
ret
mov
popf
fistpll
int3
add
stc
and
and
in
jecxz
cmp
nop
fstl
ss
pop
jns
dec
nop
xchg
stc
inc
dec
loopne
negl
pop
std
sub
mov
scas
ret
mov
imul
jmp
mov
adc
gs
and
mov
lea
mov
pop
call
iret
adc
pop
sub
mov
mov
movsb
pop
dec
in
call
sub
push
cmp
adc
push
pop
fsub
cmpsl
or
sbb
mov
mov
mov
push
clc
mov
lds
pop
xchg
ds
cmpsb
xchg
ret
cld
xor
cmp
push
test
cmp
movl
or
cmp
incl
shlb
pop
add
mov
pushf
cmp
jb
mov
mov
mov
das
adc
jae
or
cmc
aas
mov
xor
sbb
js
xchg
jne
popf
xlat
int
rcll
or
or
jg
push
jae
addr16
push
jl
rorb
dec
ja
repnz
or
inc
aam
inc
loop
pushf
stos
push
fcmovbe
mov
xor
push
divb
xchg
sub
jl
test
out
xchg
out
pusha
fmuls
push
cmp
xor
push
and
int3
loopne
aad
int
sarb
or
lret
outsb
sub
sbb
xlat
sbbl
cld
lahf
shlb
xchg
shll
sbb
and
ja
xchg
mov
sahf
lret
xor
loop
in
addl
dec
jp
xchg
push
mov
mov
dec
jmp
loopne
je
int
shl
mov
addl
je
push
jbe
mov
jecxz
cmp
sbb
lock
outsb
mov
cmc
aam
jecxz
xchg
xor
pop
outsb
jne
xor
add
ljmp
inc
sti
nop
mov
call
xor
in
mov
jge
hlt
mov
aad
mov
adc
fistps
cmpsb
ror
rcl
les
jae
cmp
test
cmpsb
xchg
or
es
mov
mov
and
pop
add
test
call
xchg
mov
push
push
outsb
aaa
movsl
dec
fcomps
pusha
aas
cmc
sahf
fdivr
in
dec
mov
mov
lock
js
push
cmp
and
nop
cs
push
adc
mov
pop
dec
add
adc
into
sbb
rorl
jle
adc
mov
dec
pop
mov
xor
push
mov
jno
jns
daa
and
shr
jbe
mov
push
push
mov
inc
xor
push
sahf
jle
cmpsb
adc
scas
jmp
int
pop
add
cmp
pusha
inc
mov
xchg
std
jne
outsl
jbe
sub
lods
loope
std
or
sbb
dec
or
cmp
aam
dec
mov
cmp
sub
xchg
sti
xor
mov
dec
mov
out
fwait
mov
adc
adc
jp
orl
and
fcmovnu
enter
xchg
pop
dec
mov
sahf
dec
fwait
mov
xchg
lahf
fbstp
dec
adc
adc
fldenv
cs
fists
and
movsb
lock
mov
mov
test
ds
stos
lret
mov
xchg
mov
jecxz
or
xor
aad
adc
adc
xor
dec
addr16
xor
xchg
xor
pusha
aam
mov
xchg
xchg
xchg
nop
leave
sub
imull
std
loop
and
jg
pop
inc
add
xchg
popf
mov
mov
lods
ds
jecxz
stc
inc
clc
xchg
add
ds
stos
mov
mov
adc
pop
lods
or
stc
mov
and
imul
outsb
les
dec
out
jns
xor
push
sti
pop
subl
xchg
inc
xchg
xchg
or
fwait
push
fs
jge
cmp
in
or
lcall
mov
or
or
dec
mov
clc
popa
fistpl
add
inc
cmpsl
add
ljmp
inc
dec
outsl
push
pop
xor
aaa
and
imull
out
imul
mov
sbb
push
push
pop
call
add
stos
lods
pop
xor
mov
jp
jg
xchg
out
xchg
dec
iret
jns
je
dec
push
jl
jp
movsl
insl
mov
pop
outsl
mov
pop
mov
sub
cmc
sti
mov
mov
jp
jge
and
js
and
add
dec
cmp
loopne
sbb
add
cmpsl
je
dec
push
scas
je
mov
arpl
cs
lea
dec
adc
cmpsb
clc
or
mov
call
sbb
cmp
and
sbb
adc
aam
cmpsb
dec
mov
xor
test
jle
movsl
cwtl
jle
adc
sti
ss
mov
or
adc
sbb
lock
xchg
cmp
xchg
nop
mov
push
inc
test
sub
sbb
mov
iret
notb
fisubl
inc
outsl
push
cmc
shlb
sbb
iret
in
inc
jmp
scas
lret
push
jo
in
shr
push
jns
push
lea
insb
adc
jge
inc
pop
ja
into
add
and
aam
mov
inc
add
ret
arpl
mov
xchg
mov
outsb
inc
sti
add
mov
std
cltd
pop
dec
and
cld
xchg
insl
jbe
or
adc
cmp
fld1
jmp
mov
xchg
jnp
insl
and
mov
out
add
lcall
das
and
jb
pop
adc
ficompl
repz
mov
adc
scas
cmp
cwtl
lock
bound
lret
mov
das
mov
fbld
dec
and
inc
out
sub
movl
inc
lret
aad
call
data16
sub
xor
enter
and
mov
icebp
popa
inc
or
cmp
sbb
mov
pop
jmp
dec
and
lret
leave
int3
sub
nop
mov
shlb
jne
inc
stos
jo
leave
testl
pop
nop
fwait
cmp
fcmovnb
mov
push
xchg
lcallw
push
add
fs
cmp
mov
mov
pusha
ss
inc
pop
dec
pop
xchg
push
adc
xor
cmpl
imul
out
mov
das
push
xchg
mov
mov
or
and
jmp
mov
mov
je
jb
lea
leave
ljmp
push
icebp
int3
call
js
insl
push
push
sahf
mov
mov
into
add
sbb
xor
dec
xor
mov
neg
repz
or
xchg
lds
jns
pop
inc
sarl
fdiv
sbb
cmp
xor
out
and
stc
adc
mov
mov
jg
adc
icebp
pop
inc
repz
call
daa
pop
cmp
inc
sarb
lret
fistps
pushf
xor
aas
inc
in
xor
mov
pop
xchg
pop
push
out
test
jb
mov
movsl
and
lods
jbe
fs
cmp
adc
cmpsb
push
pop
mov
sahf
xor
aas
in
aad
out
jbe
push
shll
cmp
pop
jl
sbb
cmpl
pop
xor
int3
xchg
or
dec
or
shl
cmp
inc
dec
jb
mov
imul
mov
pop
jmp
jno
add
inc
mov
insl
or
lock
mov
dec
ds
push
sub
lret
inc
es
xchg
pop
hlt
mov
sti
out
aaa
sahf
pop
dec
mull
pop
lock
pusha
test
mov
xchg
or
add
nop
iret
into
lcall
repnz
sbb
cmp
das
pop
inc
push
mov
imul
lds
sub
dec
jecxz
test
imul
cwtl
mov
jle
mov
sti
xorb
fistpl
daa
pop
dec
mov
mov
enter
sub
dec
ficoml
sbb
aas
mov
ds
and
lds
les
dec
push
dec
mov
mov
dec
pop
fs
roll
hlt
xchg
sahf
add
push
pop
mov
cmp
xchg
mull
mov
mov
push
sbb
fbld
sbb
inc
scas
xchg
ljmp
daa
or
pop
sbb
mov
and
sub
jle
fisttps
inc
jle
stos
pop
out
daa
add
cmc
hlt
xchg
mov
or
pop
test
pop
aam
ficomps
lret
dec
or
sahf
adc
into
xchg
arpl
lea
pop
push
ficoms
cmp
and
ljmp
repz
out
jo
rcr
push
jne
push
loope
in
adcl
mov
or
pop
mov
les
push
adc
push
mov
lods
or
ds
loop
lea
hlt
out
ret
xchg
or
adc
stc
dec
out
push
push
cld
dec
js
fidivrs
and
jns
sbbl
pop
insb
lea
add
aam
jmp
push
repz
dec
sbb
pushf
jp
fsubl
mov
mov
lds
jns
ret
sarb
inc
movsl
pop
sbb
push
scas
push
das
xor
mov
add
in
push
andb
or
mov
jg
jmp
imul
movsl
repnz
fistpll
dec
jle
stos
xchg
dec
xchg
jmp
sub
mov
out
mov
fstpt
mov
aas
fxch
dec
inc
push
movsl
ss
in
mov
adc
push
mov
or
xchg
mov
pop
sbb
stc
cltd
loope
adc
push
int3
mov
loope
int3
push
and
outsl
dec
xchg
pop
and
push
dec
ja
rorb
ret
orb
dec
es
mov
cwtl
fs
ss
insl
inc
lock
in
loop
lock
or
arpl
nop
inc
or
add
fidivl
es
outsb
call
in
stos
inc
divl
mov
xor
arpl
cltd
loopne
call
push
in
popf
mov
adc
adc
div
js
cld
mov
aaa
sbb
cmp
insb
jbe
imul
je
adc
movsl
adc
mov
or
dec
push
pop
pusha
sbb
mov
ret
cmp
ret
xchg
loopne
or
in
cmpsl
fistl
and
je
jp
pop
adc
mov
test
js
test
mov
dec
loopne
jo
sub
ds
dec
aaa
pop
out
push
test
imul
cmp
imul
test
inc
jns
sarl
or
fs
mov
js
cmp
mov
fnsave
dec
add
xor
sbb
scas
dec
hlt
push
jge
test
arpl
lods
loopne
mov
push
repnz
mov
sub
shrl
jmp
dec
test
into
cmp
xchg
jbe
mov
push
push
push
jo
das
popa
and
mov
add
dec
jbe
pop
jg
xchg
mov
push
mov
mov
and
cmp
jne
fidivl
in
adc
pusha
push
aad
mov
push
shufps
inc
jnp
arpl
fldl2t
enter
lods
push
rol
mov
inc
rol
imul
mov
inc
out
adc
xor
mov
jo
test
cmp
xlat
mov
pop
inc
sti
jnp
cld
outsl
cmp
jnp
mov
ds
jp
xchg
jg
xchg
lods
lea
push
cmp
sbb
aad
lret
leave
sub
scas
add
enter
mov
mov
in
call
fisubs
mov
xchg
movsb
mov
testb
xchg
sbb
call
int3
fcomps
pop
and
sub
sbb
rcrl
push
adc
mov
mov
std
jno
inc
rcrl
dec
xor
jecxz
adc
sbb
dec
cwtl
xchg
adc
and
pop
cmp
inc
scas
or
sti
loopne
mov
push
out
push
daa
xchg
lock
pop
js
mov
mov
or
dec
aas
dec
mov
pop
fldcw
sub
mov
sub
and
lret
mov
push
mov
adc
add
mov
add
or
sahf
and
or
sbb
push
xor
cs
rcl
cwtl
and
enter
mov
testl
sbb
imul
int3
add
add
fcompl
mov
xchg
mov
out
and
lcall
sub
lret
mov
pop
mov
mov
mov
cli
ss
fnstenv
cmovb
sbb
mov
leave
cwtl
ljmp
xor
or
xchg
adc
add
shr
cmc
sbb
jp
cld
in
xchg
push
adc
sahf
int
mov
stos
jae
cmpsb
dec
ljmp
push
dec
add
pop
xchg
cmpsb
push
jmp
clc
add
imul
sub
cmc
pusha
mov
adc
cmp
lret
and
dec
push
scas
in
into
mov
or
xor
jg
jg
divb
sub
jmp
pop
les
mov
pop
sahf
insl
and
or
ljmp
sti
repz
xchg
inc
mov
sbb
jne
sub
mov
fwait
shrb
lret
mov
lods
sbb
add
mov
popa
jae
or
in
adc
and
xchg
xchg
hlt
aas
jle
push
xchg
andl
sbb
mov
stos
push
mov
pop
push
in
mov
sbb
ja
cltd
loopne
inc
and
sbbb
bswap
movsb
roll
cmp
test
lret
sbb
mov
lahf
lret
add
jge
jb
aad
push
int3
pop
into
push
movl
icebp
insl
jnp
inc
mov
repnz
mov
cwtl
xchg
lret
push
inc
xchg
movsl
sbb
dec
fadds
in
sbb
dec
mov
out
push
test
aad
leave
sbb
mov
add
cmp
sbb
xchg
xchg
fldt
mov
lahf
pop
iret
jmp
popf
test
cmp
fnstenv
or
and
idivl
insl
push
sub
addl
dec
icebp
push
pushf
ficomps
fsubs
in
fwait
mov
mov
push
jae
and
or
xchg
push
test
and
dec
dec
pusha
adc
push
pop
push
mov
mov
mov
pop
and
imul
adc
fdivrl
mov
lock
and
xor
outsl
jno
add
in
sahf
pop
sub
mov
insl
ret
or
call
addb
sub
push
lods
mov
xor
out
pop
mov
aas
stos
cltd
mov
push
cmp
in
and
mov
dec
das
cmpsb
les
cvtps2pd
cmp
mov
push
dec
mov
aam
mov
in
lret
dec
dec
aam
pop
popa
sbb
outsb
loopne
aaa
call
xchg
mov
xchg
in
pop
xor
shll
cmp
inc
inc
jmp
pop
fists
nop
std
shl
jge
out
fsubrs
add
dec
iret
ljmp
lcall
cmpsb
rcl
out
jle
gs
sarb
test
mov
push
lods
pop
test
xor
icebp
jb
stc
cs
sub
subb
jnp
xor
and
jge
data16
xchg
xor
into
xchg
cmpsl
mov
xchg
in
mov
lahf
das
mov
jno
xchg
enter
fucomp
popa
lods
fildl
add
jmp
mov
or
mov
lea
enter
jmp
cmp
cld
inc
sbb
cli
or
sub
add
das
jl
xchg
mov
mov
popa
add
dec
cmp
stc
inc
dec
cwtl
enter
jo
sub
out
cmp
mov
xchg
ret
pop
sahf
sbb
inc
out
and
aad
sbb
push
lods
andb
xchg
jmp
push
add
popa
and
jl
int
lods
sub
push
das
movsb
inc
addr16
imul
ljmp
loopne
mov
or
jo
cmpb
or
ss
cwtl
mov
cltd
btr
sbb
push
in
daa
jo
pop
mov
lcall
loopne
popf
std
loop
repnz
daa
sahf
dec
outsl
popf
int
popf
ja
jb
dec
in
xor
cld
inc
movsl
pop
mov
mov
cmp
cltd
into
pop
jl
jge
and
cmpsl
mov
sbb
lods
out
mov
data16
adcb
push
inc
mov
repz
mov
icebp
movsb
loopne
and
stc
outsb
pop
jno
sub
cmp
lcall
and
fbstp
mov
xchg
mov
dec
and
mov
pop
or
cmpsl
mov
test
fwait
sbbb
imull
scas
jns
mov
inc
pop
inc
push
mov
push
push
aaa
fcoms
sbb
and
mov
insl
ss
insb
adc
std
inc
cmp
imul
jmp
mov
in
xchg
imulb
imul
xchg
inc
push
add
stos
add
fisubrl
inc
adc
mov
fsubl
sbb
push
lods
test
mov
sbb
cmp
mov
mov
mov
mov
mov
out
lcall
dec
je
outsb
movsl
in
in
dec
sub
inc
fmul
es
jno
xor
cmp
xchg
push
dec
xchg
or
imul
push
stos
mov
decl
movsb
mov
push
shlb
dec
fs
repnz
xchg
xchg
jne
lock
jae
and
inc
aad
es
cltd
rcl
hlt
mov
in
adcb
xchg
lretw
sbb
lahf
popa
into
clc
nop
ror
mov
sar
pop
mov
pop
inc
scas
arpl
les
jmp
sub
jo
cmp
outsb
pop
inc
lock
in
cmc
test
repz
jno
testb
cmpsb
in
xor
stos
mov
add
fadd
push
mov
sbb
jecxz
mov
jmp
ds
xor
rclb
and
mov
pop
stos
fstpl
dec
jns
or
xorl
pop
loopne
mov
nop
cmp
mov
gs
imul
insl
popf
sub
dec
adc
dec
mov
jecxz
jno
test
inc
hlt
sahf
arpl
test
movsl
pop
insb
dec
xchg
dec
or
mov
or
push
xchg
push
lods
out
out
ss
xor
sarb
rcl
mov
mov
or
fs
or
mov
xor
and
adcb
cld
jp
jns
fiaddl
adc
pop
cmpsb
fimuls
hlt
jecxz
jl
pusha
outsw
call
cwtl
ljmp
ljmp
jbe
sbb
scas
aas
mov
pop
mov
inc
pop
mov
movsb
fidivl
fwait
mov
xchg
jno
out
mov
movb
mov
dec
jecxz
in
sbb
loop
mov
pop
testl
daa
xor
lods
shl
in
push
pop
leave
fst
inc
or
fldt
pop
xchg
add
pop
fwait
cwtl
add
je
xlat
mov
fidivl
arpl
fsubs
in
in
nop
adc
aad
outsl
ss
and
stc
es
lods
or
aam
cld
in
sarb
scas
and
jecxz
addl
mov
rcll
add
adc
into
int
je
cltd
xchg
xor
inc
sahf
insb
popa
cmp
loopne
icebp
stos
mov
pop
mov
push
repz
das
sbb
and
mov
pop
xchg
mov
add
addl
cmp
mov
cmp
push
stc
dec
pop
and
mov
push
cmp
sub
push
jg
roll
mov
sub
xchg
mov
xor
mov
ficoml
cmp
mov
ret
ds
jnp
divl
lock
fstpl
mov
fistl
inc
or
or
fmul
dec
fdivrs
call
xchg
pop
xchg
pop
inc
xchg
cmpsl
fwait
cs
and
dec
imul
je
pop
gs
pop
lock
jg
pop
ret
repz
aaa
ret
frstor
mov
xchg
enter
xor
fwait
jmp
iret
push
fstpl
enter
in
aam
inc
rcl
in
rol
fldl
mov
repnz
aas
leave
jne
aaa
sub
or
pop
in
addb
xchg
push
and
push
dec
shrl
xor
inc
stc
mov
test
cmp
outsb
out
cmp
and
push
xor
push
mov
adc
adc
and
mov
pushf
cmp
cltd
add
xlat
push
jno
test
mov
cmpsl
leave
lods
stos
cwtl
pop
add
pusha
jbe
lret
fiaddl
xor
jnp
dec
pop
pop
sub
sbb
incb
aaa
mov
fmuls
sarb
imul
xor
aas
sub
mov
lods
cmpsb
loopne
xchg
cmp
pop
xor
stc
xor
mov
mov
mov
jle
xchg
shlb
icebp
rcrb
out
in
popf
xchg
int
inc
iret
sti
mov
and
imul
aaa
lret
test
mov
and
jl
jo
pop
mov
cmp
insl
cmp
jno
jge
dec
es
sub
and
sbb
pop
pusha
mov
cmpsl
fisubs
pop
and
inc
sbb
mov
sub
shlb
mov
cmp
sbb
addr16
loop
nop
mov
push
pop
fdivrp
or
cmp
xor
push
push
stos
or
lods
int
mov
frstor
iret
or
cmp
loope
out
xchg
popa
mov
sahf
and
ljmp
neg
add
fisttpll
mov
jne
inc
aaa
xor
dec
mov
lods
push
jp
aaa
out
push
pop
notb
fistpll
aaa
push
adc
dec
dec
or
sub
out
pusha
mov
xor
sbb
xor
mov
cwtl
shll
xchg
inc
dec
stos
cmc
out
adcb
jl
push
imul
jnp
sub
jecxz
pop
test
cli
xchg
push
and
add
push
outsb
push
push
sti
add
sbb
fnstsw
inc
loop
lods
nop
push
mov
push
or
aaa
inc
cmp
icebp
mov
sbb
mov
mov
jg
or
sbb
jl
add
xor
into
dec
push
lret
sbb
or
xlat
ret
pop
jp
pop
sbb
or
loop
xor
mov
mov
push
adc
ja
dec
cmp
sti
and
push
rorb
pop
jge
sti
cmc
mov
loop
sarb
push
jecxz
pusha
sbb
aaa
aad
lods
daa
aad
test
push
push
iret
mov
loope
mov
jp
inc
sub
scas
jne
push
fdivp
test
mov
data16
adc
movsl
or
std
sbbl
xchg
sub
push
into
xlat
jno
lock
sbb
shll
sbb
mov
pop
and
and
cli
jae
and
mov
push
sub
mov
gs
lds
nop
push
jge
stos
xchg
adcl
jnp
vsubps
stos
push
or
imul
lea
sbbb
push
icebp
orb
xchg
push
loopne
cmc
mov
bound
mov
dec
out
loopne
pop
cld
jnp
fs
scas
push
rol
or
push
loope
fs
imul
xchg
aas
pop
and
cmp
adc
imul
push
outsb
rcrb
mov
repz
add
aas
pop
xchg
cld
mov
lahf
lcall
mov
pop
enter
and
xchg
push
xor
pop
sarl
or
out
mov
cli
or
add
dec
push
cmp
jmp
and
xor
outsb
xchg
and
pop
subl
lahf
outsl
in
loopne
call
fsubrs
xchg
xchg
pop
mov
imul
cmpsl
adc
int
push
icebp
lea
ja
dec
aas
add
loope
hlt
inc
mov
jae
mov
xchg
pop
negl
sub
xlat
nop
or
cs
xchg
inc
pop
dec
add
icebp
cmp
inc
push
or
mov
sti
pop
cmp
inc
cli
lods
inc
rcll
pop
das
xor
bndstx
jmp
iret
xchg
pop
xor
xlat
cmp
subl
sti
cmp
test
into
push
add
test
xchg
repnz
jp
fcomps
inc
lret
sbb
inc
mov
cli
inc
push
or
iret
leave
sub
pushf
cltd
mov
xchg
adc
fsubr
stos
stos
mov
decl
xchg
mov
sbbb
rep
xchg
sub
pop
push
les
js
jae
jo
or
push
test
orb
popf
je
mov
cs
cli
cmp
outsl
xor
into
adc
negl
pop
and
dec
pop
cld
mov
xchg
mov
dec
arpl
lahf
sbb
pop
adc
std
stc
xchg
aam
imul
or
mov
add
add
sub
add
jnp
push
add
inc
stc
push
fstpt
test
pop
sbb
xchg
repz
sub
sub
sahf
mov
and
orl
pushl
clc
jg
mov
sti
jb
cld
push
and
mov
cld
dec
out
loope
popa
and
push
jns
mov
adcl
imul
xchg
pop
cltd
mov
pop
sbb
and
jne
decl
xchg
lret
sbb
movb
and
ret
fiadds
pop
push
sbb
fidivrs
shlb
sub
mov
xchg
loope
test
les
inc
or
jae
inc
or
test
in
and
cld
sub
push
cwtl
mov
jg
mov
in
enter
pusha
sub
or
shrl
cmpsl
mov
xor
pop
or
fmuls
dec
fldcw
jg
iret
lds
pop
push
push
xor
lods
pushf
xchg
repz
inc
sbb
xchg
data16
arpl
xlat
fdivrl
xor
or
into
je
sub
push
mov
mov
push
out
fwait
sub
cltd
leave
cmp
aad
lcall
mov
pop
or
mov
dec
mov
clc
mov
into
fs
adc
and
addr16
rcll
push
mov
push
adcb
sbb
dec
push
mov
sub
js
dec
cmp
outsb
inc
dec
sub
or
jo
aam
out
add
gs
lds
lret
sub
cmpsl
loop
mov
in
imul
mov
insl
out
aaa
adc
cmp
mov
sbbl
push
daa
ret
xor
or
push
mov
scas
insl
xor
cmp
insb
add
jg
call
xor
imul
out
lods
dec
dec
cltd
inc
pop
pop
push
push
scas
xchg
pop
sbb
cmp
popf
les
cld
lock
in
movsb
dec
add
enter
fcmove
in
das
xor
andl
inc
jp
ljmp
cmpsb
mov
mov
inc
xchg
lods
inc
cmpsb
imul
xchg
cs
mov
xchg
pop
sbb
push
pop
stos
jo
xor
xor
imul
adc
daa
or
les
popf
fcompl
lcall
push
rorb
jl
ds
add
es
call
jbe
xlat
lods
xchg
ds
pop
rolb
mov
mov
imul
adc
insl
jo
mov
and
ss
adc
outsb
gs
cmc
lock
test
dec
mov
mov
adc
xor
sub
loopne
inc
mov
loopne
mov
push
inc
lods
fistpl
rcrl
jmp
pop
mov
mov
or
xchg
and
subb
xor
add
outsb
enter
das
movl
xor
mov
outsl
add
loopne
popf
xchg
pop
jo,pt
loopne
pop
push
mov
lcall
inc
sti
mov
and
aaa
cmpsl
clc
mov
xchg
test
jl
test
and
pop
adc
testl
das
push
and
add
sbb
xchg
xchg
pop
sbb
stc
ret
inc
mov
mov
stos
mov
adc
push
mov
inc
push
fildll
repnz
cmp
dec
mov
fs
inc
aas
cmc
cmpsl
and
jnp
dec
daa
fs
ds
sbb
mov
testb
lea
repz
js
jno
adc
xchg
in
in
addr16
mov
pop
mov
cwtl
in
sbb
out
push
mov
in
xchg
cld
fsubrl
fistl
in
jae
out
mov
cwtl
adc
arpl
cld
pusha
inc
xlat
pop
bound
cmp
loop
and
inc
pop
out
xchg
sbb
in
jp
jg
xor
cmpsb
aam
add
fucomip
sti
fidivl
ljmp
pop
xor
cmp
int
push
iret
movb
push
outsb
mov
movsb
pop
int
add
sub
jle
pop
not
or
lods
push
pop
rorb
or
nop
mov
mov
cmc
xor
out
iret
mov
inc
imul
pop
data16
push
jns
xchg
mov
jne
out
mov
xor
ss
in
sub
ds
rorb
and
push
add
add
xor
add
popa
cmpsb
gs
add
push
fstl
insl
jg
cwtl
repz
leave
inc
sub
jo
shlb
mov
das
xor
xor
sbb
xchg
jb
push
leave
cmp
push
js
arpl
mov
scas
adc
cmp
inc
mov
les
icebp
xor
adc
xor
cld
in
addr16
cs
dec
das
dec
orb
mov
push
aad
aaa
in
add
jmp
ror
mov
mov
lock
outsl
aam
xor
lahf
or
loopne
cmpsb
daa
push
pop
repz
xchg
daa
loope
scas
movsb
push
push
pop
push
int
cltd
sub
mov
int
rcrl
mov
ret
js
out
ss
mov
push
dec
lea
jbe
xchg
scas
loopne
es
enter
pop
pop
insb
cmp
push
xchg
mov
xor
pop
mov
or
insl
dec
in
adc
pop
rcll
popf
pop
nop
fwait
xchg
dec
adc
ret
iret
call
cli
pop
or
mov
leave
dec
and
fdivl
jecxz
inc
add
cmp
dec
insl
sub
mov
lahf
jecxz
xor
lret
dec
das
ljmp
movb
push
fimuls
pop
dec
or
cltd
sbb
sub
stos
outsb
mov
rcr
roll
adc
fcompl
cmp
lret
mov
xor
adc
fnstenv
cmpsb
push
mov
add
jl
orb
dec
into
divl
out
sbb
int3
leave
or
fdivs
bound
add
fiadds
pop
dec
xlat
add
cmp
adc
pop
imul
cmp
xor
dec
push
mov
test
jl
fsub
dec
inc
sbb
cmp
push
mov
cmpl
mov
dec
inc
mov
mov
xchg
cltd
pop
scas
cmp
sahf
push
adc
outsb
mov
movsl
rcrb
push
lea
loop
mov
mov
inc
push
popf
sbb
and
imul
out
xchg
nop
testb
test
dec
mov
jl
xchg
into
aad
xchg
add
movsb
inc
cmpsb
mov
dec
xor
jno
test
lods
testl
push
in
sub
push
lock
cmp
xchg
sti
cmc
mov
in
int
mov
outsl
in
pop
or
dec
push
mov
dec
mov
popf
imul
pop
imul
xchg
xchg
pop
ret
and
mov
and
xorl
dec
mov
lock
int
mov
sahf
xlat
and
nop
dec
xor
out
mov
fdivl
fs
mov
jbe
push
and
pop
cmpsl
mov
cmp
jnp
push
js
fcomps
call
jle
jo
mov
sub
xor
xchg
mov
icebp
std
pop
iret
imul
dec
jbe
jnp
adc
stos
push
jo
sbb
inc
pop
insl
int
mov
fwait
sub
out
pop
in
mov
xchg
shr
mov
xchg
cld
mov
shlb
inc
mov
mov
mov
jno
aas
mov
test
mov
adc
and
pop
xchg
push
addr16
mov
cli
jns
outsl
pop
scas
adc
or
or
mov
xchg
push
idivl
or
nop
nop
insb
cmp
sbb
mull
xchg
and
addr16
or
xor
sub
cld
mov
in
lea
xor
mov
push
jae
push
push
sbb
fwait
xchg
out
push
mov
stos
enter
jo
or
ret
cmp
ffree
int
cmp
mov
pop
shr
mov
dec
or
sub
jae
pusha
js
popa
cmp
cmc
sub
push
loop
sahf
aas
daa
lahf
or
jg
mov
mov
cwtl
xchg
jo
lds
mov
ljmp
iret
and
or
cs
mov
mov
jecxz
pushf
xchg
lahf
lret
stos
sbb
and
fistps
in
push
ret
sub
cmp
inc
cmc
pop
mov
dec
aas
jle
xor
sbb
popf
xchg
push
sbbb
cs
adc
jns
sub
in
push
das
stc
sahf
scas
popa
scas
mov
jmp
cmp
sar
jae
mov
push
test
dec
and
add
dec
lea
dec
mov
adc
sub
lea
pop
add
adc
jb
mov
xor
cmp
xchg
xor
inc
addr16
fisubrl
aam
push
imull
jp
loope
jo
loope
pop
in
insb
push
jecxz
xor
push
jmp
mov
add
xchg
pop
fimuls
inc
inc
iret
add
mov
jo
xchg
inc
aas
cmpsb
mov
adcb
fneni(8087
mov
movsl
and
xor
mov
xlat
pop
call
adc
sbb
lock
fcmovb
pop
gs
pusha
push
mov
outsl
ja
jo
ss
ror
inc
inc
push
xor
ret
dec
xorb
or
lret
ljmp
sahf
movsb
push
jp
cli
xor
add
xchg
aas
dec
adc
inc
fdivrs
stc
stos
repnz
add
gs
lret
addl
cs
shlb
mov
test
popf
movsl
xchg
ljmp
push
and
movsl
in
lcall
mov
push
popa
in
pop
in
push
subl
cmpsb
test
arpl
mov
xor
mov
daa
mov
lods
les
repnz
xor
mov
ds
mov
js
or
fcomp
sub
movsl
daa
pop
leave
dec
xlat
cld
mov
aam
inc
cmp
scas
imul
jb
sub
daa
push
nop
pop
imul
or
rep
int
inc
push
arpl
insb
dec
stos
cmp
cs
ss
and
imul
cmpsb
test
jmp
je
jnp
sub
jno
inc
data16
mov
jge
pop
xchg
jno
ljmp
inc
rol
pop
arpl
imulb
cmp
xorl
les
jnp
mov
sub
ret
inc
xchg
enter
cmc
mov
repz
and
or
pop
cmc
pop
fnsave
mov
pop
aas
decl
mov
pop
out
test
loopne
sbb
std
notb
push
js
xchg
adc
das
jmp
movsl
pop
fs
jecxz
jmp
sbb
int
or
push
ds
mov
push
stc
rcl
or
ffree
push
leave
inc
aaa
dec
in
add
sbb
dec
lods
loopne
adc
xchg
cmp
lret
sub
sbb
aam
sti
inc
add
js
pop
mov
ret
xchg
xchg
push
xchg
insl
movsb
scas
sub
mov
jp
loopne
or
mov
mov
js
imul
iret
mov
enter
sbb
adc
jle
int
cs
inc
ret
fcoml
cmp
stc
jnp
push
test
add
lea
test
jg
sbb
out
mov
cmc
xchg
mov
cmc
fistpl
aas
xor
push
jo
cmpl
mov
sbb
sbb
gs
sub
jnp
je
push
cmp
pop
cmp
in
in
pop
fistl
ds
pop
decl
loop
mov
mov
cld
or
mov
dec
test
adc
stos
enter
or
test
sub
mov
sti
flds
test
sbb
dec
cwtl
adc
shr
push
and
popf
push
sti
daa
jl
test
add
stc
xchg
or
in
nop
mov
xor
mov
pop
rolb
aaa
loope
loopne
scas
repnz
adcl
mov
out
sub
cld
repnz
add
addr16
lods
mov
rcll
cmp
dec
sub
sub
loope
idiv
scas
stos
cld
push
ljmp
cmpsb
xor
push
adc
cmp
push
add
test
mov
subl
fidivrs
pop
adc
xchg
jmp
mov
mov
sub
leave
pop
inc
icebp
cmp
fwait
push
popf
xchg
fcoms
sbb
lahf
out
push
mov
imul
test
pop
aam
xchg
dec
push
in
add
mov
mov
popf
and
jecxz
sub
out
cltd
mov
pop
sub
cmp
loop
add
push
jecxz
jecxz
ds
popf
loopne
xor
and
push
xor
mov
std
cmp
add
cwtl
xorl
in
pop
lods
and
adc
lcall
dec
pop
in
loop
push
pop
mov
push
aas
mov
push
adc
adc
dec
jp
sbb
dec
jmp
mov
jae
jge
dec
mov
pop
loope
clc
mov
mov
cmpsb
jmp
orl
inc
and
cmp
in
in
aad
xchg
jl
in
adc
sarl
pop
jg
mov
dec
mov
xchg
mov
dec
out
movsl
pop
lahf
pop
dec
gs
clc
sbb
loop
xor
aam
dec
or
xchg
leave
cli
adc
pop
arpl
add
xchg
out
shrb
mov
or
int3
cli
sti
inc
mov
xlat
or
jno
jo
repz
push
jns
xor
sti
fstpl
movsl
mov
cs
fildll
mov
jle
push
test
test
xchg
pop
xor
push
xor
push
out
mov
inc
mov
jle
data16
mov
dec
push
sbb
imul
inc
jns
mov
jge
ljmp
test
cmp
add
jb
fnstenv
sub
iret
int3
push
insb
push
movsb
test
cmpsl
sbb
lahf
mov
xchg
and
nop
add
dec
mov
mov
dec
popf
push
adc
add
mov
cmp
cmpl
rcr
in
shl
ljmp
adc
insl
or
in
and
mov
adc
movsb
xchg
aas
aam
aad
pusha
and
push
xor
add
pop
dec
xor
xor
andl
push
icebp
pop
cltd
in
adc
aad
adc
pop
icebp
dec
fcmovu
movsb
mov
cmp
mov
lock
mov
gs
ficomps
push
jmp
sub
cmpsb
sbb
push
sbb
xchg
in
pushf
pop
sbb
mov
cmp
xchg
xor
and
fbstp
dec
xor
fidivs
data16
fidivrs
lds
outsb
out
cmp
cwtl
mov
iret
mov
inc
pop
aas
xchg
dec
push
test
nop
adc
in
stos
cli
js
jg
cmp
dec
pop
loopne
jbe
pop
push
js
hlt
sub
lods
mov
cmp
adc
aam
sahf
or
mov
data16
popf
in
xchg
rorl
sbb
sub
jmp
scas
and
adc
mov
mov
adc
cmp
xor
sbb
or
cmp
cmpsl
shll
xor
adc
adc
sbb
lock
aas
pop
sbb
sub
fs
repz
or
stos
jp
stos
dec
adcb
jl
pop
xchg
out
add
ss
or
push
fsts
loop
hlt
xor
std
lods
jg
jne
push
out
cli
leave
push
mov
add
imull
dec
ss
iret
xor
or
and
mov
dec
xchg
sub
maskmovq
dec
aaa
push
test
mov
scas
adc
lcall
fcompl
jp
jb
jns
lock
mov
test
and
jnp
xchg
sbbb
adcb
mov
inc
call
xor
in
adc
or
das
jne
jnp
aam
test
daa
or
xlat
pop
adc
jbe
push
jmp
sbb
inc
or
cli
inc
lds
xchg
int3
push
pop
lahf
and
sbb
jnp
xchg
jns
fsubr
movsb
in
xchg
jne
pushf
mov
adc
ljmp
subl
pop
scas
jno
push
dec
int
xor
lea
add
aas
test
add
pop
mov
or
lods
mov
adc
fs
mov
sub
sti
or
negb
pop
or
inc
cmovno
out
test
adc
test
xor
adc
lods
sub
popf
push
insl
dec
xchg
jecxz
jge
das
int3
mov
aaa
iret
xor
pop
ret
inc
mov
cmp
push
dec
and
sahf
cli
scas
lods
dec
test
fucom
dec
cmpsb
and
and
inc
adc
dec
sbb
insl
dec
mov
mov
testl
push
dec
cmp
dec
push
in
mov
mov
fldl
push
or
push
mov
pushf
in
repz
add
add
push
sub
push
cli
gs
icebp
sarb
adc
push
mov
dec
nop
sbb
xchg
push
xchg
in
pushf
aam
clc
jl
xchg
shrl
cmc
xchg
add
push
or
mov
xchg
mov
pop
jl
adcl
outsl
sti
sub
sbb
out
mov
inc
or
push
addr16
mov
bound
jb
jl,pt
stos
add
xchg
shl
flds
xchg
xchg
inc
push
sub
cmc
push
adc
dec
push
int
repnz
pop
popf
jne
addr16
push
push
mov
xchg
sbb
inc
rcl
and
sbbl
shl
test
jecxz
adc
lds
fstpt
popa
les
inc
or
mov
and
lods
stc
jp
arpl
cmpb
arpl
shl
rcrb
dec
sbb
cmp
mov
mov
sbb
loop
and
sti
aam
pushl
jp
ljmp
add
mov
icebp
push
push
es
shr
mov
jnp
and
mov
scas
bound
repz
mov
sbb
and
fsts
jecxz
inc
and
pusha
xchg
mov
mov
dec
inc
test
in
outsl
lret
jno
mov
lods
std
lret
mov
andl
es
aad
flds
cld
cs
mov
leave
adc
in
mov
mov
pop
das
loope
ret
out
repz
jecxz
pop
ret
push
jne
add
mov
and
jge
xor
movsb
pusha
xor
dec
dec
insb
mov
adc
stos
mov
cltd
xor
sarl
dec
inc
call
iret
pop
cmp
pop
mov
sbb
and
in
repz
daa
out
mov
in
aam
lcall
xchg
inc
in
dec
and
jbe
add
and
call
test
adcl
mov
ret
lea
out
pop
lret
xor
push
out
sbb
mov
rcll
or
bound
inc
scas
jb
add
push
mov
int3
or
inc
call
inc
sbb
bound
add
push
test
data16
dec
xchg
and
or
lahf
pop
push
insl
xor
sbb
fdivrs
jg
lret
sub
jg
rol
test
xchg
mov
cs
or
ljmp
mov
aam
push
sbb
outsl
cld
stos
into
das
std
lods
and
jns
mov
movb
xor
shrw
pop
out
ret
mov
mov
pop
mov
les
sub
mov
push
es
xorl
aaa
call
popf
and
add
cmp
ds
movsl
push
out
jne
jge
inc
in
call
int
push
and
test
mov
and
and
aas
pop
xchg
test
xchg
xchg
jb
dec
xchg
scas
rcl
cs
inc
cmp
fadds
cmp
cmp
std
aam
outsl
aaa
xchg
sti
arpl
sysexit
dec
add
fwait
push
jbe
push
cmp
or
outsb
sub
cmp
cmp
push
sub
push
pop
test
sbb
or
pop
cmp
push
inc
push
in
mov
mov
xchg
insb
jne
mov
adc
dec
imul
scas
jge
mov
sub
jne
xlat
push
cmp
sub
add
stos
mov
ljmp
lea
mov
cmp
stc
pop
xor
rcll
adc
dec
jecxz
popa
out
je
stc
pop
loop
inc
dec
mov
push
movsl
jg
push
pop
jno
jo
sbbl
ja
dec
loop
test
and
int3
bnd
repz
cli
pop
call
cmpsb
inc
in
xchg
repnz
jecxz
add
test
push
popl
cltd
add
jo
loopne
loopne
push
jnp
and
adc
popa
fsubrs
cmp
lret
or
es
pop
lcall
fmuls
out
sahf
pop
test
cmpsb
call
and
xchg
pop
mov
sub
add
fistl
subb
aas
dec
mov
adc
pop
pop
movsl
jns
and
lcall
mov
cmp
dec
hlt
negl
xor
popf
cmp
sub
xor
fiaddl
insb
cmp
mov
jo
jae
pop
mov
or
or
push
dec
int
test
mov
add
dec
jp
push
push
int
test
mov
nop
mov
fwait
hlt
loopne
testl
ret
jmp
mov
imul
orb
cmc
xor
push
enter
cmpsb
sub
mov
ja
or
fldcw
cs
jbe
adc
popa
pusha
fidivrl
push
dec
stc
arpl
daa
cmp
inc
cmpsl
call
push
outsb
notb
jae
lcall
sti
es
mov
xchg
inc
mov
fadds
adc
mull
push
jp
nop
pop
adcl
push
jo
daa
adc
test
xor
outsb
mov
jl
in
or
fs
ss
ljmp
sahf
in
mov
jnp
mov
stos
ds
cmp
or
push
stos
pop
jae
dec
pop
into
sti
cmpsl
out
push
loopne
xchg
and
or
cmpsl
adc
mov
fs
sub
or
insl
push
outsb
stc
sbb
jge
inc
icebp
xor
popf
test
jecxz
mov
push
push
cmpsb
subl
test
aad
sbb
ret
xchg
mov
ret
push
jb
ds
ret
sbb
and
in
out
out
int3
push
scas
dec
mov
lods
pop
push
repz
ds
dec
xchg
mov
fdivl
push
mov
repz
push
enter
cltd
or
es
and
sbb
push
mov
popa
cmpl
sbb
push
clc
test
je
dec
movsl
mull
rorl
xor
add
inc
mov
bound
test
jmp
fs
test
xchg
jg
pop
add
movsb
mov
test
pop
out
or
aam
mov
inc
xchg
js
or
push
mov
ss
jo
mov
loope
daa
inc
push
lods
insl
psraw
push
pop
xchg
mov
int3
jb
js,pn
pop
dec
outsl
mov
loopne
movsl
aaa
popf
loope
xor
inc
dec
out
sub
out
mov
xor
test
mov
cmpsl
xor
jns
aam
pop
int3
inc
fnstcw
adc
insl
negb
daa
clc
neg
xchg
add
insb
mov
out
sbb
cmp
pop
and
pop
out
add
jnp
outsb
xor
lods
int
rol
movsb
shrl
xchg
fdivrl
xchg
loope
sub
dec
loop
pop
cmp
jg
jae
pop
test
movsb
and
fistl
and
aad
out
push
mov
xor
loopne
dec
test
mov
dec
push
cmc
addl
cltd
mov
daa
pop
dec
lds
lock
push
rcrb
leave
fildll
test
in
xchg
aaa
inc
dec
loope
cmp
push
sbb
aas
insl
addr16
insl
fsubp
jecxz
mov
xchg
pop
ret
test
rolb
jno
in
fs
mov
and
out
in
or
mov
xchg
pop
out
popf
repnz
xor
or
sub
and
or
or
repnz
pop
xchg
or
sahf
dec
cmp
adc
out
sbb
push
add
or
or
add
push
fwait
inc
lcall
xor
sti
pop
dec
and
mov
mov
pop
push
mov
sbb
inc
lcall
das
ret
adc
jno
xlat
sahf
pusha
in
js
jns
in
movsl
push
or
fnstenv
mov
add
je
cli
lock
sbbl
xchg
outsb
mov
sbb
inc
pushf
fwait
cmpl
pop
lret
lahf
xor
fnstenv
loopne
pop
outsb
orl
and
andl
mov
push
jae
aaa
push
arpl
das
in
in
cmp
mov
cmp
pop
xor
cmp
jle
jg
adc
mov
jo
xchg
sbb
rorl
in
out
cmp
push
rcr
scas
das
jmp
sub
mov
mov
es
loop
push
push
adc
push
fisubrs
ljmp
icebp
movsb
sub
repz
std
jl
data16
scas
ds
add
mov
fcmovnu
xchg
add
inc
in
ljmp
lcall
push
jbe
pop
loope
add
jnp
lea
cmp
imul
scas
sahf
xchg
lock
sbb
stos
dec
xor
mov
xchg
dec
adc
xchg
leave
iret
shl
fistpl
in
pop
adc
sti
push
mov
fwait
jno
mov
sbb
inc
inc
xor
pop
call
xor
imul
inc
add
out
in
in
jne
pop
mov
aaa
jecxz
iret
fbstp
fmul
sub
test
into
test
ficomps
in
mov
jno
mov
movsb
push
imul
sbb
test
mov
add
xchg
sbb
inc
push
mov
stc
cli
out
lea
out
pushf
push
or
mov
test
ror
arpl
stc
jl
sti
fldenv
adc
pop
bound
mov
sub
cmp
mov
sub
dec
scas
loop
mov
push
inc
sub
mov
mov
insb
stos
bound
mov
pop
jae
sub
andl
pushf
pop
repz
mov
cvtdq2ps
xor
mov
push
lret
pop
test
inc
in
cmp
jecxz
ljmp
cmp
movsl
adc
dec
jg
xchg
sahf
or
pop
jmp
fnstcw
jae
pushf
dec
stos
sub
jbe
mov
loope
std
shl
pop
shll
mov
and
roll
sbb
dec
add
jnp
lds
mov
mov
ret
pop
mov
andb
in
cmp
sub
repz
test
rcrb
and
jno
pop
clc
and
popa
adc
pop
lods
lock
movsb
xchg
mov
mov
cwtl
jae
fiadds
add
sub
jns
xor
inc
cld
or
stos
dec
xchg
or
adc
mov
js
mov
jne
cmc
pusha
dec
push
int
clc
cmp
adc
out
and
sbb
es
repnz
adc
jg
jmp
jnp
hlt
lahf
sbb
xchg
push
xor
inc
icebp
loope
scas
sub
push
popf
ja
shlb
pop
sub
adc
push
popa
push
lcall
jbe
hlt
pop
popf
mov
addb
mov
flds
mov
inc
insb
in
popf
fbld
push
divl
mov
mov
push
inc
ljmp
divb
dec
add
imul
xor
lds
sub
sbb
adc
and
hlt
push
push
pop
sbb
jecxz
push
ss
or
popf
xor
adc
inc
ficoml
sub
lods
mov
cmp
push
call
xlat
xchg
sti
dec
cmp
cmovns
icebp
mov
jp
insl
dec
add
push
outsb
dec
nop
xchg
aad
aaa
xor
sbb
cmpl
and
and
adc
test
sbb
cmpsl
xor
dec
test
mov
sub
dec
mov
scas
mov
imul
cltd
loopne
arpl
mov
clc
popa
sti
mov
xor
push
sub
sbb
jno
jmp
outsl
leave
bound
outsl
xchg
jg
test
lods
push
lret
push
ret
dec
cmp
in
insb
fst
iret
lret
outsb
lcall
add
and
outsl
mov
lahf
mov
sub
outsl
push
adc
ds
lret
jle
cmp
xlat
movsb
js
or
push
dec
cmp
mov
inc
mov
or
push
jp
dec
subb
dec
gs
mov
movsl
loopne
mov
andb
inc
adc
pop
add
jae
cmp
pop
mov
or
out
out
xor
mov
insl
mov
adc
stc
mov
push
dec
add
sbb
push
jl
pop
fmul
push
shl
int3
add
popf
out
jmp
pushf
aas
scas
sarl
mov
pop
and
sbb
call
repz
sti
fsubrs
xor
jnp
and
jno
daa
and
pop
fldenv
jo
cmp
push
sti
fwait
xor
and
stc
push
shlb
or
mov
ljmp
dec
dec
popa
daa
inc
push
xor
and
cmp
fdivrl
jb
leave
or
int3
jno
or
cmp
xor
inc
rcll
push
sbb
cmc
mov
popa
xchg
loope
mov
dec
fstl
cmp
jge
mov
push
sbb
cld
imul
jmp
jae
fsubl
and
add
in
jge
or
mov
addb
inc
scas
sbb
pop
xchg
sbb
sbbb
adc
scas
and
or
mov
pop
jns
jle
shrl
jge
arpl
shll
push
shrl
push
sub
repnz
sub
sbb
shrb
movsl
or
sub
orl
jg
movsl
scas
mov
jl
out
sarb
scas
sub
sarb
fsubs
scas
aad
sahf
xor
fldl
or
jge
std
and
ljmp
call
clc
jb
and
addr16
leave
loop
mov
divl
cmpl
lret
dec
fbstp
xor
sbb
inc
and
fbstp
push
outsb
add
pusha
xchg
lods
iret
mov
rcrl
and
push
dec
fucom
loopne
loop
add
inc
out
xor
aas
pop
es
arpl
ret
bound
adc
or
xor
add
sbb
adc
js
insb
cmp
jns
adc
pop
jo
sbb
sbbl
inc
add
jg
scas
enter
push
dec
jb
fs
ret
leave
cli
sub
cmp
sbb
jno
inc
and
xor
pop
jae
cmp
sub
mov
mov
in
notl
idivl
mov
mov
mov
inc
repz
test
std
xchg
loope
into
ljmp
int3
in
lods
insb
repnz
mov
inc
xchg
test
bound
add
iret
add
daa
add
and
fwait
cmp
or
or
sbb
rcll
lea
pushf
mov
and
mov
das
decb
xor
mov
shrb
cmp
inc
mov
push
rcll
jle
add
or
mov
push
xor
scas
shl
cmc
pop
mov
out
test
or
jle
push
sti
lahf
pop
loop
mov
mov
pop
dec
sarb
jae
dec
dec
imul
mov
cli
xor
pop
ja
std
lods
xor
jmp
inc
outsb
xchg
scas
out
and
xchg
insb
and
sbb
aad
sbb
adc
fnsave
sarl
pop
rorb
pop
adc
dec
out
adc
aad
sahf
ret
inc
ret
decb
jmp
lock
addr16
loope
inc
xchg
out
mov
xchg
fs
sbb
int
and
jecxz
pop
pop
xchg
lret
fs
fmuls
mov
sahf
push
int3
insl
adc
jp
into
ficomps
cmp
int3
or
add
fistl
and
xchg
add
data16
insl
insb
add
js
jne
lret
jne
xchg
xor
js
mov
push
push
sahf
mov
dec
jne
sub
adc
hlt
pop
mov
sbb
xchg
fadds
xchg
shlb
lret
nop
mov
fisubl
and
fdecstp
jb
dec
and
sbb
xchg
clc
pop
lret
pop
jg
test
pop
call
sub
das
rolb
jmp
outsl
sbb
cmp
sbb
sbbl
leave
xor
gs
or
sub
mov
shlb
jg
mov
out
sbb
inc
loopne
testb
xchg
xchg
adc
jbe
lds
cltd
add
decl
call
out
fstpt
aaa
mov
push
mov
mov
das
lret
sub
sbb
mov
lods
mov
popa
nop
mov
cmp
test
nop
pop
enter
lds
testb
mov
fs
cmp
repnz
and
mov
clc
out
sbb
lret
jae
inc
mov
push
jne
loop
sbb
dec
rcll
inc
jns
mov
sahf
jns
cmp
or
subb
pop
fldenvs
jae
fistpl
addr16
rcrl
push
and
xor
in
add
fwait
xor
call
xchg
jp
lock
mov
int
shl
aam
stos
xor
xor
lock
mov
data16
pop
xor
mov
pop
lret
mov
push
cmc
mov
hlt
jl
in
adc
mov
mov
gs
mov
lret
pop
sbb
mov
ret
stos
daa
mov
xchg
ret
push
xchg
adc
in
dec
int
adc
sbb
clc
sub
call
pop
enter
js
mov
imul
mov
packsswb
dec
sbb
stos
ljmp
in
or
mov
jmp
aam
dec
add
xchg
mov
dec
bound
lock
pop
push
sub
cmp
mov
pushl
imul
xchg
ss
shl
inc
adc
pop
movsb
cmpsb
inc
inc
in
leave
inc
lret
xor
shl
ss
push
sub
int
pop
sub
bound
ja
idiv
cmp
testl
fs
loope
add
cmp
ss
jb
adc
ljmp
sbb
fisubrl
jne
loope
outsb
dec
test
pop
lock
mov
and
lods
jbe
fistl
push
sti
pop
mov
fwait
push
add
jo
outsb
int3
or
scas
pop
mov
xchg
mov
inc
or
lock
xchg
or
cmc
adc
dec
int3
enter
test
aam
xlat
dec
dec
test
jmp
cli
mov
jp
xor
sub
outsl
lods
sub
lahf
hlt
loop
cmpsl
adc
lea
ds
xchg
aam
cmp
mov
sbb
mov
cmpsb
cs
xchg
cs
call
jne
cmpsl
pop
fcmovne
mov
adc
les
out
xchg
in
cmp
loope
and
loop
out
or
fwait
rcl
fwait
mov
ljmp
rolb
cmpsl
cmp
and
arpl
aad
xor
outsb
push
mov
loope
shrl
divl
mov
jno
in
fwait
lret
lret
das
push
popa
sti
dec
mov
test
inc
push
mov
inc
sub
push
movsb
mov
int3
xor
sbb
and
dec
sub
js
rcr
lahf
test
xor
hlt
xchg
cltd
insb
shl
dec
into
das
lahf
dec
hlt
inc
push
mov
fisubs
aam
jg
push
xor
mov
int
sbb
sbb
cwtl
jb
pop
inc
daa
xor
ja
or
push
loopne
clc
adc
dec
inc
nop
xchg
sbbb
aam
cmp
cs
jg
push
jecxz
cmp
or
xor
int
sub
pop
pusha
dec
outsl
push
les
icebp
nop
cmp
ljmp
mov
out
test
cmpsl
inc
imul
je
ret
and
loope
ss
inc
or
cltd
or
add
jo
push
push
inc
lret
cmp
scas
imul
fdiv
or
fdivp
sbb
scas
rcll
addr16
aaa
cmpsl
outsl
and
mov
scas
and
loop
push
inc
adc
xor
outsb
xchg
mov
leave
push
fsubrs
mov
jle
xchg
mov
ficoml
lcall
addl
sahf
bound
dec
jb
icebp
dec
xor
adc
xchg
push
pop
mov
shll
xchg
mov
jg
mov
inc
imul
xchg
xchg
mov
dec
mov
push
mov
push
mov
cltd
add
push
mov
push
ss
jne
pop
outsl
pop
shlb
aas
repz
sbb
adc
or
mov
andl
stc
test
das
xor
in
idivb
push
push
mov
sti
sub
jae
push
enter
mov
mov
push
daa
mov
pop
jge
enter
mov
aaa
icebp
mov
testl
in
sub
mov
xor
jge
cli
and
sbb
sti
adc
inc
xchg
mov
mov
lahf
cmpsl
mov
ret
aad
mov
es
mov
pushf
lea
add
or
test
out
repz
les
test
imul
das
and
dec
sub
aas
rcrl
out
pop
or
cmp
mov
arpl
xchg
and
xchg
cmpsl
jge
xchg
jle
push
fwait
loop
xor
jl
or
pop
mov
fsubr
lahf
pop
mov
adc
daa
out
lret
loope
push
mov
lret
sbb
mov
push
cmpsl
movsb
xor
mov
add
arpl
push
scas
imul
jo,pt
scas
movsb
push
add
xchg
and
pop
mov
data16
outsb
adc
ss
pusha
cli
jle
aad
mov
and
lea
call
sti
cmp
mov
push
das
mov
or
lods
add
jecxz
test
pop
sbb
call
sbb
pop
hlt
sbb
pop
dec
cmp
je
dec
scas
movb
punpckhwd
faddp
daa
mov
sub
inc
mov
imul
or
mov
cmc
dec
jae
pop
cmp
call
cwtl
repnz
aaa
roll
outsl
js
jmp
popf
xor
push
dec
test
data16
sbb
adc
cmc
das
sub
into
inc
adc
pop
hlt
int3
iret
dec
out
cli
hlt
mov
mov
mov
sbb
xor
int3
sbb
push
outsb
sbb
push
mov
dec
mov
imul
dec
nop
add
push
sbb
or
imul
jle
push
and
dec
xor
mov
roll
adc
and
push
ret
xchg
jmp
pop
clc
test
rcll
stos
adc
out
mov
cmp
es
jmp
pop
add
jecxz
adcl
cwtl
outsl
fsub
jmp
lahf
cs
jmp
repz
fs
xor
adc
push
fucomp
jno
pushf
sbb
push
add
adc
std
inc
mov
xor
popa
mov
stos
enter
popa
jnp
add
mov
inc
xor
mov
inc
mov
mov
mov
je
jnp
idiv
lea
arpl
ret
mov
andb
repz
test
inc
pusha
ja
addb
add
and
pmovmskb
test
js
arpl
add
mov
dec
pusha
sub
and
mov
loopne
pop
push
adc
dec
out
or
dec
sub
enter
dec
sbb
push
ret
mov
xchg
dec
dec
lods
mov
or
notb
sarb
aas
mov
xor
test
test
iret
xchg
lret
inc
push
fnstenv
scas
add
stos
xchg
mov
sarb
adc
add
mov
push
cmp
incl
ret
shll
jbe
sbb
popa
mov
and
add
or
popa
gs
push
adc
and
push
dec
adc
cld
adc
inc
lret
cwtl
jne
out
ss
into
mov
push
adcb
mov
ret
nop
cmp
stos
cwtl
repnz
sub
je
leave
pop
ds
jg
pop
lcall
pop
mov
mov
xor
and
and
dec
sub
cmc
mov
xrelease
in
pop
cwtl
add
push
or
lods
jo
lds
idivl
cwtl
mov
je
xor
cmp
test
rcr
cmp
adc
dec
lea
stc
push
stos
gs
shrb
push
cmp
je
sub
and
sub
int3
mov
in
sti
xchg
sub
insb
push
xchg
add
outsl
xchg
xor
push
fsubrs
jne
jl
dec
rcl
lcall
ror
lods
jle
jg
pushf
decb
sub
test
dec
fdivl
out
movsl
jbe
or
inc
pusha
and
fadd
cmp
js
dec
mov
jae
inc
push
dec
mov
or
ss
mov
movsl
mov
xchg
jb
sub
test
je
aad
lret
imul
mov
mov
add
inc
or
in
sbb
push
fdivl
jmp
decl
cmp
in
bound
pop
dec
imul
lahf
mov
inc
mov
testl
lock
mov
fistpll
cld
sub
xor
rolb
cmp
push
mov
int
test
push
pop
lods
cmc
je
pop
sub
roll
scas
adc
mov
and
jl
jb
jo
add
pop
and
xchg
insl
push
mov
push
lods
xchg
add
mov
add
out
int
add
fsubr
mov
lahf
xor
imul
rol
loopne
adc
stc
mov
aam
mov
lea
ljmp
sbb
mov
pop
and
test
in
lea
dec
and
pop
inc
mov
aam
insl
subb
aas
and
std
pop
mov
divb
mov
xor
adc
and
ror
shlb
clc
cmpb
aaa
nop
fwait
addr16
add
cmp
nop
sub
loope
hlt
pushf
stos
xchg
lret
lea
push
jns
call
mov
or
pop
int
adc
dec
jno
aad
dec
daa
push
add
sbb
mov
push
les
aad
in
mov
mov
fwait
loop
pop
jmp
js
xor
pop
aas
popf
and
fistps
stc
das
fisttpl
cmp
cmp
push
push
adc
pop
jmp
fmuls
nop
dec
dec
mov
fsts
jo
or
hlt
mov
jns
cmp
mov
xor
out
xchg
pop
sahf
sub
mov
xor
add
push
inc
adc
nop
andb
sbb
insl
fstps
cmpsb
jnp
or
jno
incl
fdivs
movsb
negl
aam
fsubrp
loope
push
mov
testl
mov
jno
lea
sub
das
xchg
in
or
push
shlb
dec
subb
add
xchg
push
ffreep
outsl
aas
adc
mov
sbb
test
xchg
jno
test
add
out
rol
pop
lds
add
adc
stos
fbstp
mov
dec
popa
xchg
clc
inc
ret
cld
fnstcw
aam
xlat
xchg
pop
pop
cmpsb
movsb
cmp
pop
movsb
pop
test
clc
movsb
sub
aam
jns
pop
pop
stc
rorl
push
popa
inc
sahf
cld
fisubrl
inc
imul
mov
imul
lock
test
mov
xchg
arpl
mov
loop
mov
push
fistps
addl
popa
mov
pop
and
or
xchg
loop
ss
sbb
int
mov
mov
clc
pop
repz
push
sarl
sbb
test
inc
outsl
ret
mov
inc
imul
mov
add
les
insl
cs
loop
lods
sbb
addr16
cli
dec
stos
adc
mov
cltd
dec
pop
dec
or
or
mov
pop
sbb
dec
fs
dec
mov
adc
scas
xchg
andb
ja
mov
pop
push
mov
jnp
sbb
xor
push
pushf
jl
ret
or
mov
pop
mov
sbb
insb
mov
pushl
push
sarl
jg
dec
insb
inc
fiadds
cwtl
or
mov
inc
bound
mov
les
xchg
and
movsl
repnz
cmc
xchg
cld
out
mov
gs
cmp
push
inc
int3
fwait
les
dec
push
sub
or
add
fcompl
jmp
daa
jb
loopne
dec
inc
push
cmp
jae
mov
cltd
fsubrl
into
mov
das
repz
mov
in
jge
cmc
xor
cwtl
rorb
or
leave
xchg
sbb
in
xor
clc
test
jno
or
xlat
movsb
mov
inc
lret
or
mov
es
adc
dec
ds
add
shll
hlt
lcall
jo
xor
and
ficoms
xchg
adc
lahf
mov
fwait
or
in
imul
insb
lods
stos
repz
stos
mov
and
xchg
addr16
fsubp
dec
imul
rcr
sahf
xor
xchg
ja
lods
hlt
mov
add
inc
push
sti
sahf
mov
popf
xor
cld
pushf
jg
out
stc
fadds
fwait
add
adc
sbb
lock
push
inc
xchg
pop
adc
sbb
push
lds
sbb
addr16
andl
xchg
or
xorl
out
or
cmp
jmp
xor
xchg
lods
sub
rclb
push
insl
pop
cwtl
arpl
add
test
mov
in
loopne
xor
xchg
out
ss
test
add
mov
add
in
and
ljmp
sbb
inc
imul
fidivrl
or
lcall
mov
lahf
das
xor
cld
jle
mov
jbe
mov
andl
cmpb
mov
icebp
lods
inc
mov
mov
daa
sti
ficompl
rcrb
nop
jl
xlat
test
mov
aam
mov
dec
mov
xchg
and
sbb
shrb
adc
add
bound
or
nop
das
aad
dec
fistpll
push
imul
jae
scas
fidivs
jmp
cmc
aad
std
or
add
sub
negl
in
jg
add
mov
mov
mov
adc
mov
jmp
cmp
mov
adc
clc
pusha
add
lods
dec
xchg
push
inc
mov
ja
ss
lods
mov
nop
cld
js
or
push
jg
jnp
addb
cld
xchg
xor
mov
inc
jle
out
cmp
lods
jl
mov
addr16
push
fdivrs
mov
or
jl
push
cltd
jmp
rorl
cmc
movsb
mov
movsl
enter
jl
sub
sbb
inc
xchg
cmp
jp
call
outsb
mov
sub
ret
outsl
jne
ficompl
les
push
rcll
incb
jge
clc
mov
adc
outsb
jg
pop
xor
adc
roll
mov
cmpsb
fimuls
in
cmp
mov
out
fdiv
pop
pop
decl
sbb
jae
adc
jmp
mov
mov
stc
push
xor
loope
cwtl
pop
sub
fisttpll
dec
in
or
pusha
mov
aas
and
popf
xor
inc
adc
imul
bound
fs
cmp
pushf
jmp
mov
jnp
in
push
js
push
js
mov
sub
push
test
out
mov
jnp
aaa
push
aam
dec
popf
push
jg
dec
out
in
jno
dec
movl
popa
mov
lea
or
push
add
aad
loopne
and
js
fists
and
out
inc
lahf
xchg
cmp
rcrb
fstpl
call
cmp
push
pop
and
test
gs
mov
std
push
test
daa
mov
cmp
xchg
push
mov
test
xor
fidivrl
rorl
sub
rolb
nop
sbb
mov
inc
filds
ljmp
mov
sbb
mov
into
add
xor
cmpsb
sbbl
enter
cwtl
mov
lret
aas
mov
hlt
out
cmpsl
adcb
fadds
adc
inc
mov
jnp
push
in
sub
sub
test
int
jne
mov
mov
and
jnp
incb
sbb
jo
jo
and
out
mov
loop
das
shll
push
adc
test
add
fstpt
int3
push
in
add
leave
inc
jbe
outsb
rolb
mov
rcrb
pop
icebp
jmp
movsb
bound
incb
add
repnz
mov
daa
inc
cmpsb
ds
std
shl
fimull
call
jbe
xchg
arpl
aad
adc
adc
cmp
fldt
stos
in
add
leave
insl
xor
test
xor
in
inc
out
add
mov
sbb
push
push
jb
ffree
shl
movsb
inc
fs
jp
push
arpl
add
push
data16
inc
out
out
adc
loope
rcrl
mov
mov
mov
test
sub
xchg
xchg
sti
cmp
adc
jmp
loope
int3
scas
in
iret
pop
or
ret
mov
icebp
stos
and
outsb
std
test
adc
unpckhps
pop
jg
mov
jmp
xchg
loop
shrb
inc
adc
add
jnp
pop
fs
dec
decb
cmp
jle
stos
or
inc
inc
xchg
push
mov
inc
and
mov
call
rorl
sbb
xlat
push
hlt
jge
imul
test
jmp
jae
push
sub
je
dec
xorb
dec
clc
prefetch
sbb
cltd
fbld
sarb
or
add
icebp
lea
out
pop
mov
push
rcrb
in
adc
mov
stos
xor
imul
or
lds
addr16
jns
cltd
lods
ss
adc
sbb
mov
leave
inc
cmp
fs
iret
fsubs
sbb
popf
mov
xchg
std
dec
xor
cmc
pop
mov
sbb
adc
xor
cli
jmp
pop
add
in
xchg
fidivrs
test
cmpsb
ret
imul
fsubs
lret
int3
pop
lret
fcmovu
dec
lds
cmpsl
mov
and
aas
scas
jo
test
and
es
or
add
fucom
pslld
dec
jle
jmp
cmpsb
cwtl
mov
push
ret
addr16
sub
call
lret
testl
insl
adc
add
and
mov
or
xchg
dec
je
mov
or
fsts
imul
dec
cmpsb
pop
imul
sarl
pop
mov
pop
dec
and
and
mov
add
sarb
adc
mov
in
jo
stos
sbb
push
dec
loopne
out
test
cmp
cmp
popa
pop
add
jl
push
int3
ret
cs
mov
inc
inc
shlb
adc
fiaddl
data16
add
lret
xchg
cmp
enter
call
hlt
sahf
test
and
test
sub
xchg
adc
int
jnp
insb
mov
std
dec
dec
pop
mov
pop
jbe
pop
mov
push
mov
and
mov
and
xor
mulb
lret
mov
and
addr16
or
dec
adc
mov
dec
imulb
bound
or
mov
fsubrl
pop
int
add
ljmp
in
adcb
sbb
or
dec
xor
ja
mov
mov
mov
loopne
fisttpl
cmp
data16
pop
xor
inc
or
divb
inc
cmpsb
ja
jbe
jae
js
inc
repz
and
jbe
in
fwait
jns
xor
xchg
dec
cmc
enter
cmc
push
pusha
in
sahf
lods
sub
mov
rcrl
addr16
jecxz
cmpsl
mov
and
call
adc
cmp
les
mov
cltd
loop
flds
mov
jne
scas
mov
in
sti
arpl
push
mov
inc
xchg
jecxz
add
aas
jle
xor
aas
push
nop
pop
fwait
or
sbb
mov
mov
jns
dec
add
test
mov
mov
bnd
jge
mov
pushf
add
xor
sub
out
icebp
inc
fadd
pushf
cmpsb
mov
xchg
insl
push
lea
adc
pop
sub
fcomip
pop
andl
fisubs
or
add
mov
push
cmp
leave
mov
cmp
sbb
dec
mov
mov
or
pusha
addr16
mov
in
movsl
dec
in
push
mov
sahf
cmpsl
sbb
je
sbb
jmp
outsl
jg
lods
mov
xchg
mov
arpl
mov
jl
push
mov
cmp
jle
out
inc
outsl
jle
outsl
jno
dec
lcall
pop
outsb
sub
lock
pushf
inc
std
in
js
xor
test
nop
or
mov
jae
cs
mov
sbb
ror
mov
ljmp
aad
aam
pop
ss
cltd
sbb
sub
dec
divps
and
dec
mov
shl
adc
aas
int
stos
movsl
sahf
sbb
push
push
shll
insb
outsb
xchg
or
jae
push
test
jl
mov
or
aaa
cs
int3
and
inc
mov
ljmp
cli
imul
sbb
or
insl
mov
push
mov
adc
imul
and
dec
test
jns
sub
js
test
loop
dec
mov
push
pop
leave
sar
push
adcl
daa
popa
orb
icebp
pushf
test
pop
inc
inc
lret
jb
xlat
lcall
aam
pop
call
scas
sub
push
add
addl
ss
iret
rcr
mov
dec
in
cld
jne
pop
mov
pop
jmp
aad
dec
test
fs
jo
add
test
les
adc
adc
xor
pop
fcomps
sbb
inc
cs
and
inc
outsb
jp
pop
push
mov
inc
jo
dec
ja
jmp
mov
sub
and
dec
pop
push
pop
bound
jo
repz
inc
enter
pop
jle
fisubrs
push
aam
rorl
mov
shll
jmp
jno
or
inc
leave
and
mov
pusha
xor
pop
push
les
or
fwait
in
xor
inc
sbb
mov
adc
xchg
dec
push
mov
gs
shrl
sub
push
xchg
push
cmp
lahf
mov
in
xchg
jge
stos
mov
dec
dec
movl
jg
push
xor
data16
mov
push
inc
mov
cmpsl
jne
pop
dec
mov
push
pop
rcrl
fdivrl
stos
sub
cmp
popa
jp
jp
rcll
jmp
and
es
lret
clc
repz
cmp
pop
test
idivb
out
mov
cmp
xchg
inc
adc
pop
cmpsb
sbb
and
and
sub
adc
fdivrs
xor
fsubl
repz
loop
dec
inc
cld
outsb
pop
outsl
jle
add
notl
inc
out
xchg
mov
icebp
jb
jl
popa
clc
adc
sub
sbb
shlb
mov
ficoms
pop
fucomip
mov
mov
cs
jnp
push
jge
dec
mov
in
mulb
sub
out
mov
xchg
mov
es
ljmp
outsb
and
pop
icebp
push
outsb
arpl
jecxz
sub
and
not
inc
bound
dec
xor
inc
sbb
jbe
adc
outsb
nop
ds
pop
popf
jns
int3
sbb
dec
inc
insl
fdivrs
push
sub
std
push
lds
add
xchg
xor
mov
xor
push
fstpt
jnp
xchg
test
lods
xchg
xchg
push
pushf
test
inc
sbb
and
mov
loope
xchg
xchg
jno
xchg
mov
sub
adc
ja
or
cmp
jge
xor
stos
aam
pop
enter
push
xchg
dec
pushf
out
xchg
nop
lods
pop
mov
mov
xchg
nop
sbb
and
add
mov
push
cmp
cmp
push
gs
cld
pushf
add
pushf
or
data16
in
mov
add
cmp
or
in
je
mov
sbb
divb
dec
jbe
movsb
cmp
roll
add
lods
aaa
xchg
aam
dec
adc
jl
jp
cmp
fisubs
inc
inc
notb
scas
cmp
js
fwait
fwait
sbb
inc
imul
shlb
mov
push
ja
lods
adc
dec
test
stc
xor
xchg
nop
push
sub
xchg
push
lock
cmp
sbb
adc
cmpsl
inc
or
jmp
cmp
xor
and
and
pop
xchg
inc
xchg
mov
jnp
and
sbbb
jp
jo
add
sub
mov
push
pusha
pop
and
insl
cmp
cmc
shrb
imul
nop
js
push
xchg
dec
xor
jne
and
loope
cmpsb
inc
jne
lea
aaa
stos
xor
sti
decb
adc
add
cmpsb
sub
jo
jmp
inc
xchg
xor
lret
movsl
cs
mov
hlt
cmp
xchg
xor
adc
inc
pop
inc
inc
notb
daa
inc
scas
cmp
cwtl
stos
out
pop
push
jecxz
sbb
mov
and
inc
mov
add
dec
sarl
dec
arpl
mov
xchg
push
das
out
sbbb
mov
psubusw
xchg
mov
or
sbb
push
and
in
notb
xlat
movsb
outsl
and
lods
jne
add
push
fsubs
jp
push
mov
dec
mov
sub
add
lods
in
loopne
rcll
cld
sub
sbb
repz
gs
mov
cli
sbb
or
cltd
lret
aad
push
sub
mov
dec
or
data16
push
mov
daa
testl
jp
inc
mov
mov
jp
bnd
inc
imul
rol
add
cmp
in
xor
add
mov
adc
repz
cmc
add
cmpsb
lahf
addr16
insb
add
and
xor
or
mov
in
stc
aaa
movsl
dec
pop
faddp
inc
mov
or
dec
js
push
les
xchg
pop
fwait
jne
sub
sub
mov
into
in
jns
mov
mov
test
add
dec
xor
mov
sub
out
cmp
jne
inc
lock
push
pop
xchg
in
add
aam
or
mov
into
pop
xor
cmp
sbb
add
xchg
add
add
or
mov
push
movsb
xor
int
or
addb
mov
mov
enter
test
xor
mov
insb
mov
push
add
mov
mov
cltd
lods
stc
pop
fdivrp
mov
inc
mov
jno
gs
call
jne
mov
xchg
push
xor
pop
or
adc
loopne
lret
mov
int3
das
xor
sbb
add
jge
in
test
aas
out
movsb
pop
out
outsb
movlps
aaa
fadd
xchg
xchg
push
and
out
mov
and
lret
xor
repnz
or
mov
rorl
xchg
sub
pop
orl
mov
mov
pcmpeqd
aas
outsb
and
dec
cwtl
and
out
mov
xchg
push
and
mov
and
inc
push
jl
inc
dec
push
mov
aam
cltd
mov
and
jno
mov
aad
cli
mov
mov
mov
dec
dec
mov
pop
stc
mov
and
rcrl
push
frstor
mov
xchg
sub
adc
jb
pop
test
cwtl
xchg
test
mov
scas
imul
xor
in
popa
bnd
add
scas
inc
loop
push
int
in
add
loope
sbb
adc
pop
ss
pop
sbb
pop
and
pop
mov
xor
pop
sub
xchg
popa
dec
xor
inc
sbb
ds
cmp
pop
fstl
push
xor
outsb
mov
insl
nop
incl
out
push
jb
shll
jo
mov
dec
sbb
out
mov
inc
cs
mov
lock
xorl
int3
jecxz
inc
sub
cmp
cmp
cs
or
testb
and
adc
mov
roll
fcmovnu
outsl
cmpsb
pushf
sti
and
push
add
pusha
or
ss
insb
pop
push
iret
and
int3
mov
sub
lock
pusha
adc
fists
nop
fstpt
jnp,pt
mov
mov
pop
cmpsl
mov
pusha
rclb
add
mov
ret
iret
push
mov
mov
out
dec
sti
stos
divl
mov
or
mov
movsl
pop
cmpsb
testl
cmp
mov
inc
add
mov
inc
xchg
in
mov
push
cs
arpl
mov
pop
mov
pop
mov
fstpt
jp
cmp
clc
daa
push
repnz
rclb
xchg
movsb
jmp
fucomp
mov
loope
lea
das
sub
fwait
cmp
cmpsl
cmp
xchg
gs
test
mov
mov
mov
mov
bound
push
push
jnp
mov
jno
inc
or
cmp
imul
nop
pop
cmp
movsb
incl
inc
clc
xor
pushf
mov
cwtl
mov
jo
mov
mov
aam
test
scas
dec
inc
ficoml
repnz
mov
xchg
jp
sahf
jb
dec
sahf
sti
jno
data16
movsl
inc
push
jmp
adc
mov
pusha
les
push
push
xor
mov
xchg
shll
fcmovnbe
lds
push
inc
lahf
push
cmp
iret
repz
rcr
lods
js
clc
rcll
cmpsl
ss
shr
les
ret
dec
mov
adcb
mov
jmp
into
pushf
pop
inc
pop
loope
mov
xor
jge
test
shlb
adc
xor
xor
xchg
ret
pop
xor
cmp
inc
inc
lods
mov
and
movntps
jb
push
out
xchg
fisttps
adc
cmp
lcall
jno
imul
pop
ds
bound
push
dec
ljmp
test
fdivl
pop
rcll
mov
bnd
lea
sbb
repnz
and
cmpsl
scas
jnp
repz
repnz
rorb
daa
sbb
cmp
std
push
fimull
mov
push
out
sbb
mov
test
test
fildl
fnstcw
mov
and
mov
out
cmpsl
jl
fistl
in
and
iret
popf
dec
xchg
pop
add
jne
scas
mul
xchg
test
adc
push
outsb
movsl
add
sarb
sahf
cmpsb
dec
iret
je
movsl
loope
xor
cmp
push
add
and
add
repz
push
arpl
jnp
inc
arpl
mov
outsl
das
mov
inc
mov
and
loopne
or
loop
ja
cmp
shll
popf
lea
lods
push
fsubp
enter
sbbb
inc
lahf
push
shrl
outsl
lods
push
ret
mov
cmp
sahf
push
clc
out
jge
jle
fcmovne
imul
pop
jb
fwait
es
mov
out
cmp
out
stos
mov
mov
push
push
inc
adcl
stos
out
jecxz
clc
dec
arpl
jle
rcl
jbe
lock
pop
rcll
sbb
dec
cmp
xor
mov
pop
or
lcall
es
lret
sbb
cmp
and
inc
jge
inc
adc
cs
pop
cli
xchg
mov
rcrl
and
sub
jecxz
outsb
pop
out
pop
fwait
aad
jecxz
and
mov
arpl
push
jmp
mov
sub
roll
add
push
adc
lcall
cli
sti
popa
lods
mov
dec
lret
adc
js
and
push
popa
repz
dec
xlat
xchg
sub
and
or
xchg
inc
and
sub
in
popf
add
xor
cli
sub
mov
pop
cmp
pop
push
imul
rol
jl
pop
dec
mov
movsl
mov
push
sub
inc
or
out
xchg
aaa
mov
cltd
clc
fcoml
jbe
jmp
jne
pop
mov
test
addb
int
inc
imul
push
test
sti
add
sub
in
and
pop
add
jns
shll
push
das
add
clc
or
orb
js
lods
pop
sbb
xor
insb
out
mov
in
fadds
inc
mov
mov
imul
or
or
pusha
mov
orb
imul
jo
xor
lods
std
orl
js
jmp
int3
ret
xor
mov
mov
dec
test
stc
push
gs
test
pusha
inc
nop
sub
push
into
pop
sub
jns
aas
pop
pop
push
xor
cmc
jle
in
add
lock
and
sbb
cltd
cmpsb
push
cli
push
adc
and
xor
negl
sahf
xorb
stos
xchg
mov
jge
dec
add
xchg
push
bound
fcompl
cmpsl
xchg
mov
ret
add
fdivrl
arpl
and
rcrb
mov
ret
adc
cmp
test
pop
out
push
sbbl
pop
ret
cld
push
jle
cs
in
rcr
xor
add
xor
je
lcall
push
fwait
xchg
cmp
daa
or
mov
test
xor
pop
or
fldenv
dec
pop
cwtl
mov
cmc
dec
adc
out
push
dec
pushf
pop
jge
push
dec
jge
sub
rol
ljmp
out
ret
or
sub
mov
js
lcall
cmpsb
pop
lods
fwait
movsl
sub
arpl
jbe
adc
inc
pop
push
mov
fwait
dec
fsubr
subb
loop
sub
loopne
add
not
int3
fldcw
pop
push
outsl
lock
jge
inc
cli
add
push
clc
push
pop
test
or
shll
incl
pop
push
cmc
cld
mov
dec
xor
push
scas
inc
shll
jl
jnp
das
test
ret
in
movsl
rorb
sub
inc
push
xor
hlt
insl
mov
mov
in
xorl
fwait
sub
insl
jno
xchg
add
mov
jmp
pop
add
stos
cmovg
fstl
scas
fstpl
les
fistl
sti
fcoml
inc
cli
cld
jae
add
insb
push
data16
repnz
cmp
inc
jns
push
adc
mov
rol
aad
in
xchg
and
je
fwait
mov
cmp
and
add
jp
mov
outsb
jecxz
stos
mov
or
add
adc
push
lahf
sahf
sbb
lcall
adc
aad
fs
int
adc
call
cmpsl
std
cld
xor
test
sub
fbld
lea
pusha
loop
mov
mov
lret
jo
adc
xor
insb
into
cmp
xchg
add
cli
inc
jecxz
rcll
rcrb
add
sbb
sbb
jmp
dec
xor
mov
xor
jecxz
fs
cmpsl
and
fucom
mov
xchg
mov
or
pop
push
push
push
je
shl
enter
dec
fucom
imul
xor
adc
xchg
mov
cmp
cwtl
dec
call
std
js
and
inc
xor
push
js
pop
xor
mov
das
cmp
jp
psubd
pop
jbe
stos
xchg
aaa
out
stos
icebp
sbb
jno
rcrl
loope
inc
pop
add
cmp
fwait
and
push
not
dec
notrack
xchg
adc
mov
xchg
stc
sbb
sub
add
outsb
sub
aas
jge
ret
hlt
xchg
lahf
dec
bswap
insl
dec
dec
push
pop
adc
add
xchg
cltd
std
sbb
mov
adc
test
sti
clc
push
mov
mov
repnz
loopne
xchg
inc
cli
pop
add
mov
inc
fs
rclb
add
lahf
mov
lods
sti
sbb
les
leave
xchg
mov
inc
xchg
mov
or
mov
xchg
cmp
dec
add
inc
xchg
mov
cmp
ss
dec
aam
popf
and
jge
loopne
xlat
xchg
dec
cmp
jg
cmp
cmp
jne
es
out
shr
adc
pushf
call
idivb
movsl
xor
ret
notl
add
out
lods
shlb
scas
sbb
icebp
mov
nop
repz
stos
push
adc
ljmp
in
and
arpl
adc
bnd
cmpsb
idivb
pop
pop
push
scas
jns
jno
sti
jnp
inc
and
or
fsubrp
loopne
lahf
inc
adcl
cmpl
xor
nop
cmpsb
jp
xor
jmp
push
lcall
cld
add
das
out
repz
mov
fcoms
mov
push
shlb
std
adc
xchg
popa
adc
insl
xor
test
push
add
fsubr
jle
and
outsb
adc
dec
dec
push
imul
ret
int3
inc
mov
sarl
lods
jmp
shr
sub
int3
dec
stc
cmpsb
insl
daa
dec
aam
bnd
push
mov
aas
insb
out
jno
nop
dec
fldcw
mov
ret
das
pop
in
add
out
popa
sbb
inc
pop
clc
in
bound
sub
rclb
push
inc
mov
mov
shrl
pop
fstl
or
test
repz
shlb
xchg
sbbl
rorl
hlt
sbb
frstor
dec
jmp
pop
mov
mov
dec
xchg
sub
loop
adc
add
outsb
and
mov
ret
mov
mov
add
in
lods
jp
push
mov
mov
add
jl
aaa
aam
push
lret
pushf
jae
stos
repnz
cmp
and
jbe
cmc
mov
inc
jnp
mov
jg
add
aaa
push
idivb
cltd
mov
sub
mov
mov
xor
aas
lods
xchg
lahf
je
cmpsl
ret
pop
iret
enter
stc
stc
fcmove
mov
push
or
or
shl
out
cltd
jbe
jne
dec
les
adc
dec
cmpsl
repnz
fs
cmp
lds
add
cmc
sbb
incl
xor
lods
roll
fs
lock
inc
out
sti
pushf
and
daa
sti
sub
or
cmp
adc
lea
xchg
pop
stos
xchg
mov
pop
push
enter
loopne
mov
ljmp
cmp
push
out
dec
out
test
testb
inc
or
adc
cwtl
outsl
xchg
aas
mov
ror
aas
aam
push
pop
xchg
adc
sbb
aaa
jbe
call
std
les
lret
inc
mov
es
into
mov
jmp
in
sbb
test
les
in
cmp
pop
sub
jmp
pop
call
repz
xor
das
push
jg
and
jmp
ss
stos
loope
or
adc
mov
out
scas
mov
lret
fstpt
ja
dec
cmp
imul
cmp
mov
jp
imul
popa
sti
push
dec
shl
push
and
into
popf
add
mov
shll
in
dec
hlt
mov
popf
push
xor
add
mov
rorb
pop
adc
pop
mov
cmp
push
pop
in
jb
and
shrb
xchg
scas
mov
movsl
lahf
fnsave
bound
hlt
mov
push
xchg
in
xchg
ret
loopne
mov
jnp
jmp
ja
sub
inc
testb
adc
xchg
lock
push
push
lahf
imul
aaa
push
sub
rclb
and
inc
ret
leave
jl
add
lods
xor
call
sbb
daa
cli
mov
cwtl
mov
mov
shll
adc
adc
sti
pop
cltd
stos
fmul
adc
or
dec
jl
jg
jns
xchg
xchg
and
and
sub
movsb
stos
push
xchg
mov
mov
cwtl
push
dec
clc
stos
dec
mov
movsb
sti
adcb
dec
mov
fcoms
bound
int3
pop
push
stos
mov
rorb
clc
push
notb
fisttpl
sahf
enter
nop
fistpl
dec
xor
adc
add
push
add
repz
les
in
push
test
cmpsb
push
imul
lods
lock
loop
xlat
fdiv
jmp
int
mov
cld
cld
jno
rcl
add
leave
movsb
mov
mov
lcall
sbb
wrmsr
and
inc
cs
loope
ret
xor
mov
sarl
xchg
xorl
call
add
fdivrl
stos
mov
xor
jnp
fwait
and
arpl
incl
std
push
mov
aad
sbb
push
loop
lds
inc
sbb
popa
mov
cmpsb
in
xchg
fiaddl
xchg
add
pop
xchg
popf
in
test
pushf
repnz
imul
xor
lret
pop
cwtl
jo
rorl
mov
or
jle
pop
push
xor
push
adc
pop
inc
xor
mov
pop
jo
clc
add
cmp
loope
jge
sub
push
insb
dec
loop
jle
xchg
jmp
mov
js
xchg
sub
push
jns
cmp
sub
mov
lcall
jmp
mov
fcmovne
nop
add
repnz
push
add
jl
push
push
jmp
mov
aas
daa
popf
mov
int3
mov
scas
sub
mov
popa
dec
push
aad
insl
push
or
ja
rcrb
decb
sub
and
pop
adc
mov
stc
pop
mov
in
das
cltd
xor
sbb
leave
pop
adc
aaa
mov
sub
push
push
aas
dec
sti
add
jecxz
es
dec
or
mov
dec
inc
xchg
add
jecxz
lock
mov
cmp
shl
ja
cmpsl
jb
mov
in
xchg
nop
push
fisubrl
mov
lcall
das
xor
inc
in
mov
std
insl
and
mov
rclb
popa
inc
pop
push
xchg
pop
add
mov
mov
jbe
ds
into
dec
fnstcw
leave
pop
push
xchg
or
and
mov
out
lods
lret
mov
repnz
cmp
mov
sbb
push
dec
jp
scas
mov
inc
pop
inc
aad
shrl
dec
enter
test
xchg
adc
mov
or
pop
xor
mov
lret
js
sub
or
pop
bnd
mov
fdivl
in
test
inc
inc
dec
cli
adc
xchg
mov
inc
pop
pop
dec
jge
rcrl
and
fidivs
adc
aam
shll
mov
pop
mov
pop
scas
jnp
outsl
adc
aad
mov
lcall
scas
jne
dec
push
mov
mov
test
std
gs
aaa
andl
push
ret
fmull
out
and
xor
out
sbb
fisubl
sbb
sbb
sarb
jns
ss
repnz
repnz
ret
add
bound
jb
push
loop
or
jecxz
adc
inc
mov
mov
push
aad
push
sbb
push
mov
addr16
jo
flds
xchg
ret
rclb
les
jo
fmull
sbb
outsl
lret
repz
jno
lret
mov
repz
addr16
cmp
pop
mov
mov
inc
arpl
push
inc
mov
mov
push
jno
shll
pop
iret
and
bnd
sbb
mov
inc
or
adc
push
sub
imul
mov
andl
adc
lret
mov
cmpsb
adc
cmpsb
or
lahf
lock
jo
pop
adc
or
xor
cli
pusha
lcall
xchg
and
xor
xchg
push
testb
mov
lock
mov
dec
mov
jge
or
int3
cli
cwtl
clc
ds
imul
push
pop
xchg
rolb
dec
loope
sub
test
sbb
push
scas
jle
mov
jmp
movsl
inc
aas
cs
mov
sbb
xchg
mov
push
jne
cmpsb
push
loope
xor
stc
xchg
leave
xchg
add
sub
mov
mov
dec
mov
adc
sbb
bound
jae
sub
pop
push
sbb
push
fnstsw
bound
in
cmp
arpl
push
rorl
pop
mov
inc
ret
fs
mov
dec
daa
xchg
xor
ss
pop
dec
and
ret
fimuls
push
jns
jns
outsl
cld
fld
lods
lods
sub
push
sbb
addr16
dec
mov
cltd
add
sub
test
pop
dec
xchg
ljmp
pop
dec
mov
sub
aad
ljmp
gs
iret
push
and
add
cltd
pop
add
mov
xchg
push
pop
hlt
pop
clc
or
movsl
addr16
popf
insl
rol
mov
lds
cli
out
aad
or
icebp
loop
inc
cmp
push
mov
fstpt
or
mov
jae
or
cli
shrb
cmp
mov
sub
test
dec
and
xor
insl
les
fldl
sbb
pushf
push
mov
int3
adcl
out
add
or
ret
push
or
lds
jecxz
mov
aaa
mov
mov
out
mov
add
int3
dec
bound
divb
mov
jle
jmp
xor
ss
cmp
mov
cli
cmc
mov
rcr
clc
shlb
jecxz
jns
in
jns
push
mov
sarb
ds
pop
nop
add
cld
mov
int3
addl
inc
in
push
jb
push
jne
ret
xchg
xor
and
jecxz
mov
jne
or
xchg
add
sar
pop
mov
scas
adc
std
and
jle
popf
push
inc
les
pop
mov
daa
xchg
ja
scas
lods
or
incl
popa
out
loope
inc
push
jb
mov
cmp
pop
imul
xor
push
sub
mov
stc
ljmp
add
adc
faddl
xchg
mov
add
imul
adc
dec
xchg
jge
sub
xchg
fcoml
dec
or
inc
xor
push
ret
pop
lahf
fwait
sub
test
push
xor
jle
fwait
mov
push
stos
inc
dec
mov
movsl
inc
xor
dec
adc
insl
inc
adc
xor
ret
dec
loop
roll
xor
mov
push
jl
les
push
test
cmpsl
push
lods
xchg
std
mov
daa
mov
arpl
mov
xchg
jnp
xchg
insb
inc
aad
sbb
gs
stc
cmp
fbstp
jb
mov
cmp
clc
mov
je
dec
imul
ss
inc
sbb
mov
mulb
lret
dec
test
pop
repz
xchg
repz
add
dec
scas
call
mov
test
cmp
pusha
push
xchg
dec
and
push
push
push
loopne
aaa
scas
xor
lret
dec
dec
xchg
jp
outsl
dec
test
xchg
or
das
push
xchg
aas
data16
scas
xor
xor
call
mov
call
out
mov
test
cli
sbb
cmp
push
adc
ss
jmp
xor
push
sub
enter
js
lahf
xchg
sub
into
js
sub
arpl
int3
adc
aam
pop
ja
shrl
mov
fistl
jae
out
pop
inc
sarl
pop
sbbl
xlat
stos
test
add
push
mov
pop
add
sub
jbe
add
addr16
xchg
lods
or
aaa
and
mov
xlat
xor
outsl
jnp
mov
mov
pop
mov
rcrl
xor
sarl
mov
cli
or
lea
and
cmp
shll
mov
mov
cmpsb
push
cli
loop
xor
mov
pop
insl
mov
in
mov
xor
ss
xlat
mov
lahf
in
mov
and
or
push
push
sti
clc
aad
push
and
jb
dec
mov
jne
in
mov
jge
popa
stc
dec
rcrb
ret
cld
test
test
xchg
jae
data16
aad
outsl
out
lahf
xchg
xchg
cmpsl
adc
es
in
push
or
adc
cli
xor
daa
dec
jbe
movb
adc
push
pop
pop
lods
aaa
mov
fbld
inc
jb
adc
jg
repnz
pop
insb
push
push
lods
push
push
inc
cmc
hlt
inc
test
inc
push
push
iret
adc
sti
ds
xor
or
dec
fsubr
sub
mov
mov
outsb
lds
mov
aam
fucomp
cwtl
decb
aaa
dec
and
aam
push
rclb
iret
fs
fnsave
xchg
popa
fsubs
test
xchg
push
mov
inc
jbe
or
andb
cmp
sti
adc
sbb
xchg
repnz
lcall
and
xor
ja
push
leave
shl
mov
aad
les
dec
push
jno
xchg
inc
dec
xchg
add
xorl
pushf
sti
lea
cld
enter
fnsave
mov
mov
push
loopne
mov
and
push
int
push
bound
into
inc
cmp
or
cld
jmp
mov
test
imul
ret
ja
rcrb
add
mov
xchg
cmp
jnp
sub
mov
mov
lcall
sub
cltd
sar
xor
jno
xchg
jns
inc
popf
jbe
cli
push
imul
dec
add
inc
in
fs
dec
andb
divl
push
mov
jecxz
rcrl
loope
repz
jmp
pop
in
es
dec
xor
dec
test
outsl
and
outsl
xchg
inc
fwait
test
cs
aaa
and
adc
cwtl
jmp
mov
and
idivl
leave
fadds
dec
add
jne
xor
push
adc
mov
das
scas
into
jge
outsb
nop
aad
mov
test
test
xchg
js
outsl
mov
push
mov
push
test
adc
lds
test
popf
jnp
outsl
mov
in
inc
mov
imulb
pop
mov
pop
push
sbb
cmp
fidivl
loop
in
scas
lahf
pop
xor
in
ret
push
aad
inc
xchg
inc
xor
sti
push
leave
cmp
cltd
nop
sarl
jnp
mov
adcl
cmpsl
rolb
pop
daa
push
ss
lret
jb
xor
mov
add
mov
int3
mov
dec
and
xchg
in
in
shll
sbb
lods
xor
push
addr16
dec
push
imul
xchg
xchg
movsb
insl
ficomps
in
dec
mov
jmp
cld
xor
inc
outsl
xchg
jb
sub
push
dec
cmp
cmp
scas
cltd
dec
iret
ret
jnp
push
inc
inc
les
clc
enter
lea
cltd
adc
push
icebp
push
cmp
xchg
cmc
mov
or
mov
out
mov
bound
test
in
inc
out
repnz
jns
in
ljmp
and
lret
sbb
iret
jb
rclb
fidivl
xchg
repnz
test
lahf
lahf
pop
push
inc
testl
mov
jbe
ficoml
jmp
rol
jle
jo
cmpl
xlat
pop
dec
mov
push
mov
sahf
clc
xor
into
mov
orl
sbb
mov
cmpsb
repnz
mov
and
adc
mov
pushf
dec
in
lock
inc
push
jbe
lea
push
dec
dec
pop
jmp
rorl
inc
aad
sub
sahf
lods
push
orl
test
mov
stc
sub
je
fs
pushf
imul
mov
add
pop
sub
lret
cmc
dec
mov
arpl
jmp
scas
aad
sub
mov
cmp
loopne
jecxz
aaa
test
push
clc
pop
xchg
in
xchg
mov
or
xchg
sbb
leave
fists
cmpsl
sub
or
add
fldt
iret
das
pop
cmp
pop
push
mov
mov
cwtl
cmp
mov
es
leave
inc
jae
cld
add
jnp
hlt
mov
dec
inc
icebp
adc
push
and
insl
roll
sbb
sbb
sub
shll
nop
shlb
inc
test
popa
pushf
test
cli
in
jle
ret
mov
adc
lret
out
pop
mov
or
inc
sub
mov
mov
roll
cs
cmpsb
lock
cmpl
in
jp
push
movsl
fldenv
sbb
sti
repz
js
loope
xor
les
scas
adc
popa
mov
imul
sbb
push
int
push
jns
out
adc
cs
push
or
xlat
push
push
jb
call
int
mull
imull
push
fwait
mov
lods
pop
jl
adc
fnstsw
into
push
xchg
cmp
adc
inc
xchg
std
push
jnp
xor
pop
in
not
pop
push
pop
mov
stos
or
fisubs
icebp
xchg
mov
repnz
fdivl
pop
lret
adc
lret
and
repz
cmp
xchg
testl
xor
movsb
dec
orb
jle
jo
out
imul
pop
cwtl
cmp
aad
mov
push
imul
icebp
fisttps
addr16
jnp
jne
add
push
pop
cmp
enter
push
popf
daa
cmp
mov
adc
test
pop
fcmove
cs
mov
rol
jb
aam
sub
xchg
dec
jecxz
jb
stos
shrl
push
mov
mov
inc
ljmp
aad
daa
lods
xchg
rcr
add
or
mov
mov
repz
or
es
add
xchg
cld
or
rorb
push
mov
out
xor
daa
cmp
dec
or
inc
pop
or
cli
cmp
cmp
xchg
aas
nop
cmpsl
pop
call
or
add
mov
xchg
mov
xorb
jg
mov
sbb
push
pop
std
out
xor
pop
dec
xor
lock
jbe
jno
add
jmp
or
out
xor
push
xor
sti
mov
mov
pop
out
les
jae
lahf
cld
out
fbstp
or
out
movsb
adc
sbb
xlat
fnsave
jge
jno
pop
lock
adc
loopne
xchg
jne
mov
xchg
cld
push
loopne
sbb
and
cmp
movsb
mov
loop
pop
push
ja
adc
mov
into
or
add
push
je
sub
mov
in
dec
push
test
aam
popf
test
pushl
or
push
xchg
insb
add
push
repz
outsl
jns
and
ficoml
add
xorl
adc
xor
mov
roll
ljmp
aad
dec
xchg
ret
sub
and
xor
xchg
cld
ja
and
mov
outsl
mov
jns
and
add
sub
lods
cmpsl
jp
push
push
cli
dec
fs
in
jbe
push
loopne
mov
push
jl
sub
mov
or
shll
ret
add
xchg
sub
push
aaa
es
test
push
aam
sbb
mov
push
push
adc
adc
pop
and
mov
test
jp
pop
pop
mov
dec
sub
mov
int3
cmpsb
inc
inc
addr16
int3
mov
sbb
ficomps
mov
neg
or
mov
ljmp
dec
xchg
test
push
test
mov
sbb
cmc
and
outsl
jecxz
sbb
stc
jl
cmpsl
pop
xchg
jl
out
cmp
adc
in
icebp
movb
or
cltd
fsub
wrmsr
test
test
cmp
loop
sbb
add
cmp
das
in
lock
or
xor
push
pop
push
push
fcomip
mov
cs
icebp
sahf
add
inc
add
jp
jmp
dec
movsb
mov
movsb
jbe
sub
shrb
leave
dec
sbb
push
in
jle
xchg
or
jmp
sub
lcall
loopne
aaa
loop
and
fcmovb
inc
int
mov
mov
jp
and
and
lods
mov
lods
dec
xor
sub
lods
lcall
jle
fistl
movsb
mov
jg
imul
mov
jl
inc
call
out
dec
loopne
arpl
jnp
mov
or
lods
sbb
cwtl
jle
orl
push
xor
fdivl
hlt
mov
mov
out
mov
comiss
outsl
inc
subl
jecxz
cwtl
xor
imul
enter
sub
sti
xor
pop
into
addb
leave
roll
inc
es
mov
mov
mov
push
push
aad
fstps
xchg
mov
push
dec
clc
pop
xchg
jno
ficoml
mov
inc
stos
and
or
xor
inc
push
push
popl
cmpsl
mov
jbe
icebp
icebp
jbe
cmpsb
cmp
cmp
stos
push
je
aam
out
ret
js
in
insb
in
sub
out
aas
cmc
cmpsl
cmp
sub
mov
sahf
pop
or
pop
outsl
pop
les
add
mov
ror
pop
dec
sub
lret
mov
loop
pop
and
stc
loop
mov
add
inc
sub
cs
and
inc
mov
and
imul
sub
repz
mov
push
and
jnp
xchg
inc
in
daa
mov
fsubrs
or
mov
push
adcb
add
das
rolb
popf
jecxz
push
lods
xlat
mov
or
addb
cmp
orl
outsl
mov
push
jecxz
push
mov
inc
arpl
nop
xor
sbb
dec
inc
test
xchg
dec
push
enter
aas
push
call
mov
mov
call
adc
inc
cli
cmc
popf
pusha
pop
test
mov
inc
test
sbb
xchg
add
sub
mov
push
cmp
sub
hlt
cmp
add
lret
scas
and
cmp
sar
jge
ss
pop
dec
rcrl
fisttpll
sub
mov
push
xchg
and
xchg
lcall
pop
mov
adc
jno
sbb
mov
shr
test
or
imul
fldenv
push
frstor
fisttps
jns
or
or
cmp
gs
test
movsb
mov
flds
mov
or
sti
sti
movsl
or
xchg
notb
sbb
call
adc
sti
sarb
pop
mov
dec
jg
dec
mov
stos
ret
push
inc
pusha
lahf
mov
mov
xchg
add
lods
jnp
jae
xor
push
fs
jo
xor
mov
jmp
insb
cwtl
fs
or
or
in
mov
jns
mov
cld
xor
popl
test
push
leave
imul
push
movsb
inc
cmp
repz
insb
cmpsb
jmp
scas
out
xor
das
mov
std
and
xchg
mov
mov
jge,pt
push
mov
mov
test
push
call
jp
inc
sbb
adcb
fidivrl
call
xchg
dec
add
inc
repnz
dec
xchg
push
test
mov
jne
push
and
mov
adc
je
lea
cld
push
pop
lods
xor
adc
outsl
sti
pop
push
xor
fdivrl
cs
movsl
js
push
popf
ret
shll
sbb
mov
mov
push
add
lahf
lret
pop
loopne
lcall
inc
push
mov
dec
cli
inc
xchg
inc
pusha
mov
pop
inc
mov
ret
mov
out
xorl
xchg
sbb
out
lret
mov
push
bound
inc
fs
jae
mov
push
mov
sub
fcompl
into
mov
or
pop
sbb
cmp
imulb
clc
mov
pop
jecxz
sbb
pop
test
shrl
adc
jns
imul
mov
cmp
pop
mov
sub
pop
pop
fists
sub
cmp
sti
arpl
aad
jle,pt
push
pop
cmpsb
or
xchg
mov
ficoml
lret
mov
mov
pusha
pop
xchg
jecxz
gs
jge
cwtl
add
addr16
inc
lock
ds
mov
push
xchg
sbb
mov
loope
adc
pop
sbb
mov
sbb
or
nop
jne
cmp
add
out
mov
sbb
push
xlat
mov
xchg
outsb
std
aam
xlat
stc
cmp
mov
cmc
stos
add
mov
xchg
daa
shlb
icebp
pop
aad
xchg
sub
insb
outsl
adc
dec
das
popa
inc
xor
cwtl
call
add
add
mov
in
dec
adc
sub
loop
test
fstp
cmpsl
repz
shrl
sahf
popa
mov
and
sub
lcall
push
dec
adc
add
iret
jno
cmp
mov
test
jg
jmp
xchg
jo
arpl
dec
and
ds
or
gs
inc
imul
jno
and
mov
lcall
imul
in
fwait
dec
sbbl
fwait
jno
mov
mov
push
js
addr16
pushl
push
imul
popf
loop
xchg
xchg
cmp
mov
pop
imul
dec
les
push
popf
movl
mov
je
bound
pushw
cmpl
aas
cmp
xchg
jl
push
imul
mov
arpl
adc
mov
cwtl
jnp
xor
icebp
mov
or
pop
loopne
es
adc
loopne
lods
pop
outsb
lock
mov
lds
testl
inc
inc
mov
cli
out
or
sbb
push
mov
pop
xchg
fwait
aas
add
fistpll
fisubrs
imul
inc
lahf
sub
clc
dec
jmp
sub
jle
pop
test
movhps
aad
popf
fwait
in
mov
push
fst
int
sbb
mov
pop
das
push
lods
fwait
sub
loop
inc
and
clc
mov
pop
push
mov
cmp
out
js
or
and
jp
dec
sar
cmc
hlt
pushf
mov
mov
and
pushf
push
xor
les
cwtl
jno
cld
jnp
loope
mov
loope
repz
enter
std
outsb
rorl
js
pop
adc
add
out
xor
inc
sarl
sbb
dec
lahf
sti
aad
push
lds
and
sbb
lea
pop
sbb
rorb
pop
adc
orps
incl
mov
jmp
daa
sbb
sub
icebp
xchg
pop
lea
or
jecxz
mov
out
jns
jnp
mov
in
xchg
adc
and
jmp
sti
lret
out
adc
lret
dec
jb
fdivrp
dec
idivb
mov
nop
loop
xchg
mov
and
or
jne
pushl
fninit
sbb
jb
insl
xor
cmpsb
sbb
mov
jecxz
lret
ja
cmp
dec
inc
dec
xchg
push
jecxz
jnp
or
pop
andl
add
or
sub
inc
scas
dec
sub
shlb
mov
mov
lahf
pop
ds
add
pop
ja
cld
cmp
aam
mov
jge
sub
es
fnsave
adc
call
dec
jmp
lods
ret
mov
pop
mov
mov
pushf
jp
xchg
dec
addr16
adc
xor
es
inc
ret
gs
loopne
je
pop
leave
mov
pop
xchg
adc
mov
pop
dec
jbe
fcomip
pop
pusha
dec
aas
ds
loop
icebp
in
or
and
jmp
mov
inc
jmp
push
jnp
inc
icebp
sbb
test
aam
xchg
push
jmp
insl
shlb
mov
mov
call
sbb
push
mov
ss
loope
xorl
inc
pop
xor
add
pusha
cli
sahf
xchg
mov
cs
iret
enter
push
add
inc
test
fwait
mov
stos
cld
push
xlat
stc
sub
sub
hlt
add
sti
fwait
repz
or
adc
gs
add
aam
pop
popf
outsb
outsl
cmp
push
cmpsb
mov
fmull
jl
mov
incb
and
mov
fdivs
or
out
imul
dec
fstpl
cwtl
mov
mov
pop
push
scas
or
pop
sub
or
and
or
or
call
test
or
pop
stos
jbe
and
and
mov
mov
pop
mov
push
leave
mov
in
pushf
or
call
sbb
and
jmp
pop
mov
into
xor
sbb
sbb
iret
mov
outsl
adc
mov
and
loope
xor
insl
xchg
dec
adcl
push
xor
inc
pop
fwait
sub
rolb
es
insl
rorb
shl
inc
inc
in
adc
inc
adc
inc
in
dec
data16
dec
adc
pop
jno
cmpsl
call
icebp
xchg
adc
pushf
sbb
pop
or
mov
xchg
and
dec
fidivrs
jns
mov
hlt
cmp
cmp
jle
dec
mov
lds
or
fmul
je
lods
add
or
mov
inc
test
lods
mov
lock
inc
jae
xchg
push
lret
lret
out
xchg
inc
clc
pop
icebp
mov
mov
mov
jno
movsb
out
sub
in
ss
js
fcomps
push
push
xor
add
clc
dec
push
es
test
ss
mov
jb
xor
dec
repnz
mov
jmp
xchg
cmp
mov
xchg
rcrl
mov
bound
jae
xchg
dec
and
call
add
sbb
mov
pop
out
mov
int
ret
mov
jle
repz
mov
fsubrs
imulb
movsb
repz
or
out
xor
int3
pop
adc
add
shrl
xchg
xchg
in
xchg
or
int
jnp
out
pop
mov
jmp
aad
jle
push
push
pslld
jg
and
adc
adc
stos
ljmp
jnp
insb
bnd
ffreep
aad
or
jae
pop
hlt
dec
aad
pop
es
out
sub
sbb
jae
or
push
mov
fstps
test
adc
dec
fcmovu
add
orb
xlat
xor
push
mov
roll
popa
xor
jge
sbb
call
or
and
mov
lcall
xchg
jle
pop
jge
lock
dec
mov
test
lock
into
movsl
in
in
mov
mov
dec
bound
jg
stc
loope
lods
mov
mov
fcmovnb
sbb
subl
inc
out
cmp
test
loope
mov
and
jmp
in
lret
push
push
push
mov
push
adc
pop
or
movsl
inc
ljmp
mov
xchg
nop
in
xchg
rcll
jb
insb
xchg
or
call
lds
cwtl
jae
lret
xchg
sbb
or
loopne
add
xchg
mov
int3
xorb
xlat
mov
scas
shll
sbb
xlat
addr16
mov
jae
mov
cli
mov
mov
jmp
cmp
sbb
fimull
jo
add
loop
imul
mov
popa
inc
scas
inc
push
mov
push
push
popa
push
insb
lods
leave
sti
adc
xor
sahf
xor
ljmp
and
push
stc
lahf
aad
inc
popa
sub
out
inc
sub
inc
outsl
es
fistpll
test
cmp
xchg
gs
xor
arpl
lcall
push
xlat
aas
movsb
sbb
popf
sub
pop
mov
xchg
inc
xchg
fwait
mov
sub
sahf
ficomps
dec
push
mov
and
scas
lcall
fsts
sbb
sbb
pushf
das
lock
cmp
xor
pop
int3
add
add
pop
insb
xor
mov
pop
sub
insb
mov
xchg
sub
push
or
push
in
hlt
fs
std
call
pop
xor
sahf
jmp
pop
mov
adc
bound
cltd
adc
mov
dec
mov
sub
fwait
pop
dec
push
data16
adc
dec
leave
mov
sete
push
xchg
mov
add
mov
xor
or
xchg
cmp
addr16
push
cltd
lret
stos
sarb
sarb
fucomp
jbe
xchg
cmp
jmp
inc
not
shr
cs
jmp
push
mov
and
ret
xor
push
lock
mov
pushf
or
jmp
mov
enter
xchg
xor
xchg
int3
mov
fsubrl
jg
push
sti
adc
fs
mov
cmp
ss
xchg
pop
and
sub
xor
in
lcall
sub
add
popf
mov
dec
in
ja
cmpsb
pop
data16
cld
jb
sti
lret
pop
dec
dec
loop
data16
loop
push
and
adc
dec
push
popa
sub
adc
cli
push
adc
adc
sub
push
andb
fdivrp
inc
inc
call
pop
es
mov
mov
or
sub
ljmp
iret
ljmp
mov
jae
mov
daa
subb
pusha
lahf
cli
sbb
fimull
mov
cmp
pop
rcrb
mov
loope
cmpb
rolb
push
pop
jbe
mov
mov
mov
ds
and
sub
fs
loop
push
dec
loop
pop
shlb
testb
fsubr
lea
and
mov
jb
fidivrs
mov
lret
xchg
add
mov
lods
divb
pop
xlat
xor
xor
mov
jg
xor
das
mov
pop
xor
movsl
inc
jb
adc
and
dec
inc
sarb
pop
int
mov
sarb
mov
js
pop
mov
xor
das
aam
inc
stos
mov
mov
imul
sub
xchg
add
dec
seta
adc
insl
sti
std
or
mov
and
jl
mov
insb
ret
cltd
cmp
std
sub
cwtl
outsl
pop
sbb
push
inc
outsl
sti
pusha
orb
jae
pop
test
nop
jne
mov
je
adc
pusha
xchg
and
imul
aad
sbb
inc
fcompl
pop
add
sub
testl
aad
mov
mov
repnz
add
sar
jb
push
mov
movsl
imul
enter
aas
push
mov
push
fiadds
xor
xor
add
fstpl
mov
rclb
sahf
test
sbb
adc
pop
add
pop
icebp
sbb
insb
dec
lock
add
repz
push
mov
xor
cmc
adc
mov
arpl
rorl
shlb
fiaddl
adcb
pop
fs
ljmp
push
inc
ret
sub
push
xor
and
es
xchg
out
lcall
push
out
ja
jle
adc
aas
sbb
stc
icebp
jns
jge
mov
jnp
jl
cmpsl
ret
xor
jge
in
mov
mov
ds
and
jecxz
scas
dec
test
hlt
test
cmpsl
pusha
xchg
xchg
cmp
and
inc
leave
and
push
aas
inc
popa
push
jmp
pop
dec
je
cmp
std
in
mov
ja
jp
xlat
jne
and
ss
mov
xor
or
inc
push
inc
xchg
das
mov
xchg
xchg
fwait
pop
pushf
mov
das
int
mov
sar
ss
pop
jne
aad
push
pop
xor
pop
fnstsw
lret
lcall
clc
jne
jo
mov
std
lock
jmp
xchg
and
pop
pop
dec
mov
sub
mov
pcmpeqw
mov
ret
add
ror
lret
sub
xor
cmp
sbb
outsb
mov
add
popf
push
out
push
icebp
sarb
sub
lods
js
pop
fmuls
dec
lods
adc
out
mov
mov
jo
out
scas
or
in
aad
mov
and
add
les
or
rcr
insb
adcl
inc
cmpsw
lds
sbb
push
test
and
stos
push
imul
inc
cltd
mov
lahf
int
push
pop
stos
mov
mov
add
lods
mov
insb
dec
mov
adc
cs
pop
stos
out
xchg
xor
jbe
cmp
dec
jo
and
scas
xor
push
fldt
sub
dec
jae
fildl
lods
jge
outsb
cmpsb
int3
test
and
push
mov
in
das
or
cmp
in
jle
cmp
repnz
das
outsl
cmc
adc
movsb
jecxz
sbb
pop
cmp
mov
push
xor
jg
pop
xor
dec
add
movsb
jb
mov
je
sahf
inc
sub
inc
std
sub
cltd
jo
orb
and
sbb
in
dec
push
repnz
xor
cld
push
out
bound
jnp
or
bnd
enter
push
in
mov
xor
or
cmp
mov
je
or
jbe
mov
sbbl
in
mov
mov
xor
icebp
mov
adc
mov
sahf
cwtl
lock
push
xor
push
out
repnz
push
int3
fwait
cwtl
sbb
and
push
pushl
movsl
push
pusha
jl,pn
sbb
out
fcomip
outsb
pop
fimuls
xchg
pop
fistpll
and
and
push
mov
dec
scas
add
jge
push
mov
cmp
sbb
sub
xchg
scas
es
test
cmp
xor
pop
ret
mov
push
jge
inc
jl
dec
out
xchg
push
aas
mov
fstpl
mov
push
stc
cwtl
out
cmpsl
insb
clc
dec
inc
xor
jmp
rcl
and
jae
je
or
jno
fsub
jge
xlat
jbe
pop
jmp
jle
jnp
mov
adc
pand
dec
out
sub
push
dec
xor
mov
push
int
das
je
cmc
sub
jo
lods
mov
mov
jo
jp
lea
cmpsb
adc
adc
and
pusha
int
mov
shrl
xor
enter
cwtl
and
mov
arpl
pusha
dec
dec
outsl
jne
nop
xchg
scas
fsts
insl
push
sbb
mull
jnp
push
or
std
dec
push
sbb
cmp
fimull
cltd
nop
xor
std
sub
cmp
xchg
leave
cmp
adc
fcmovne
inc
ret
popa
mov
stos
push
xchg
repnz
sbb
roll
pop
enter
cmp
push
jo
pop
pop
xor
push
pop
lret
add
inc
icebp
into
or
jmp
mov
sbb
out
pop
mov
out
jecxz
xlat
push
mov
sub
mov
add
and
jno
mov
dec
sub
aam
scas
stc
adc
or
sub
xorl
mov
test
dec
jle
add
call
sti
stos
adc
pop
shll
fbld
sub
cmp
cmp
shll
subl
addl
or
lret
pop
sbb
ret
xchg
add
jnp
leave
pushl
js
rol
movsl
gs
pushf
dec
inc
mov
push
fidivrl
xchg
sbb
jmp
xorb
push
push
inc
mov
shr
dec
inc
pusha
insl
pushf
out
lahf
aas
mov
adc
push
lcall
push
test
lock
pop
rcr
test
xchg
mov
leave
jbe
addr16
add
nopl
sub
dec
sub
xor
mov
pushf
fcmovbe
jl
or
pop
lahf
sbb
and
inc
addr16
or
icebp
pop
loope
outsb
inc
mov
mov
xor
shrl
mov
pop
jmp
aam
aaa
subb
gs
dec
sub
pop
loopne
add
ret
mov
inc
inc
jb
aas
movsl
mov
cmp
and
fisubrl
clc
xchg
popa
adc
mov
fcoms
mov
inc
mov
in
mov
addr16
xor
sbb
out
sbb
inc
inc
cmp
xor
push
mov
adc
add
ss
or
adc
pop
cmpsl
and
inc
rcrb
cltd
push
jb
or
pop
aad
cmp
fcompl
fdiv
bound
dec
cmp
xchg
lcall
shld
pop
mov
or
loope
js
int
fbld
rorb
enter
sbb
enter
inc
popf
pushf
addr16
push
adc
jmp
push
rcl
outsl
cmp
push
aad
addl
dec
sub
or
icebp
imul
rcll
inc
cmc
mov
cmpl
repz
fnstsw
jnp
mov
sbb
add
xor
fs
xchg
jne
insb
and
mov
cmp
jne
adc
lods
sub
xchg
pop
movsb
mov
xchg
popf
xor
test
mov
loop
popf
mov
push
mov
cli
mov
jge
cld
inc
mov
divb
inc
push
lock
pushf
dec
jp
mov
jmp
frstor
mov
ja
sti
sbb
mov
adc
adc
mov
pop
ja
or
sub
adc
sarb
jecxz
cmpsl
pop
lret
xor
add
pop
ja
jb
xchg
mov
sbb
fisubrs
clc
mov
cwtl
sbb
jbe
sub
lods
into
xchg
push
push
inc
leave
push
mov
out
shll
inc
sbb
movsl
xor
mov
dec
in
pusha
cld
mov
mov
push
das
lock
and
push
ret
cmp
and
repnz
bound
in
std
xchg
sbb
jb
out
mov
sub
mov
das
fistl
fstl
out
mov
out
lcall
adc
push
mov
imul
jae
fildll
ljmp
inc
lods
into
inc
jo
add
or
xor
pop
sbb
and
mov
pop
mov
faddl
jae
sbbl
push
sbb
ljmp
or
repnz
cmp
cmpsl
scas
mov
mov
in
push
add
inc
scas
rcr
jle
push
mov
mov
fldenv
sbb
adc
mov
dec
out
inc
pop
inc
pop
outsb
push
jmp
es
icebp
adc
mov
adc
pop
cwtl
and
lock
je
push
ds
iret
daa
sbb
in
lock
jns
ljmp
mov
mov
mov
mov
push
in
jmp
dec
stc
aaa
push
cmc
jo
js
in
jg
in
sbb
sahf
jbe
in
xor
stos
cmp
push
pop
out
add
test
jns
scas
int
mov
add
rorb
jmp
push
jae
mov
lahf
lock
push
cwtl
or
pop
sbb
adc
into
lahf
out
push
inc
mov
in
xchg
xchg
shrl
cmpsl
dec
lds
out
or
loopne
shlb
test
mov
pushf
pop
mov
cld
mov
addr16
or
sti
fldt
into
pop
mov
xor
add
mov
mov
mov
mov
ljmp
pop
push
ss
scas
cmc
cs
pop
je
xlat
int
mov
mov
cmp
xchg
jp
adc
sbb
std
nop
daa
shrl
dec
sti
mov
enter
mov
pop
mov
push
dec
into
sub
dec
mov
jle
jb
or
mov
scas
push
cmp
xchg
mov
outsl
jnp
xchg
add
mov
fs
mov
cmp
dec
std
cmpsl
push
cmp
fimuls
cmp
xchg
and
xchg
inc
icebp
mov
mov
xchg
repnz
data16
stos
push
dec
mov
mov
pop
inc
xchg
mov
lods
loope
pop
add
sbb
inc
lods
mov
or
cld
mov
aas
jl
lret
mov
mov
pop
mov
jge
jae
mov
inc
xor
in
cmp
add
loop
adc
adc
mov
ja
sub
pop
inc
sbbb
or
jmp
mov
jnp
or
data16
sbb
add
inc
mov
loopne
pop
sti
inc
push
outsb
mov
push
sub
fxch
ljmp
sbb
jecxz
push
fistps
jo
and
xorl
pop
mov
or
repnz
mov
mov
mov
and
pop
les
add
or
push
fs
fndisi(8087
push
je
loop
add
xchg
fwait
aam
mov
inc
gs
in
imul
adc
lea
and
loop
and
lds
mov
int3
inc
int
mov
test
mov
lods
mov
jge
push
stos
addr16
fbstp
bound
jne
pop
dec
inc
pushf
out
xchg
mov
test
icebp
mov
popa
loop
add
or
sarl
and
jno
loop
lahf
or
cwtl
xchg
daa
int
outsb
xlat
shrb
and
inc
inc
gs
or
xchg
push
xchg
mov
sbb
cmp
lods
xor
lds
mov
decb
add
std
outsb
shlb
lahf
popf
fcoml
roll
sub
subb
addl
cmp
daa
jge
ljmp
daa
adc
mov
adc
icebp
cld
scas
mov
push
pop
xchg
mov
cld
imul
loopne
push
xchg
es
das
loopne
sahf
sysret
xchg
inc
aaa
pop
push
call
mov
jecxz
pushf
popf
stos
imul
pop
insl
xchg
pop
push
stos
jns
dec
ret
ds
lcall
add
inc
cmp
jle
xor
cmp
and
jno
adc
movsl
xor
or
cmp
adc
cmp
int3
mov
call
in
sarl
ret
push
insb
jle
mulb
ljmp
cmpsb
mov
lahf
incb
pop
shr
mov
cmp
int3
lea
push
mov
sbb
mov
jge
pusha
adc
les
and
adc
shlb
xchg
push
and
jb
movsb
icebp
test
and
movsb
testl
daa
jae
adc
mov
fstl
shr
movsl
or
js
adc
fcoml
mov
dec
ss
pusha
sbbb
xchg
ret
loope
lods
orb
add
xchg
mov
adc
es
fdivrl
cli
jo
mov
add
movsb
fadds
xchg
xchg
test
pushl
xchg
xchg
pop
and
stc
mov
fldt
jb
or
outsl
pop
adc
add
sbb
aas
jle
cmp
incl
jno
dec
outsb
jns
add
cmp
das
adc
mov
icebp
mov
and
popf
mov
mov
scas
push
inc
inc
lds
icebp
imul
outsl
orb
adc
mov
and
iret
lds
mov
scas
out
gs
sub
repnz
fs
notb
aad
mov
mov
xlat
mov
and
adc
xor
push
js
mov
or
or
inc
mov
pop
jmp
sub
sub
add
push
or
call
or
jl
out
mov
jp
aas
xchg
dec
and
pop
fwait
pushf
and
and
push
cmp
jb
movsb
xchg
and
push
rcrl
lahf
lods
push
rcl
and
arpl
dec
push
pushf
pop
sub
cmp
test
xchg
or
pop
push
imul
iret
sbb
repz
push
xchg
ret
clc
arpl
xor
mov
sbb
sti
pop
lahf
sbb
bound
je
mov
xchg
pop
into
insl
push
mov
mov
loope
popf
dec
or
mov
hlt
aad
outsb
leave
dec
lds
out
mov
xchg
loop
jno
out
int
mov
loop
adc
cmp
or
dec
fldcw
enter
or
push
ficomps
outsb
mov
push
and
mov
pushf
sti
xchg
mov
inc
add
add
xor
fs
adc
pop
ja
or
jg
int
or
or
mov
jle
jnp
lods
cmp
aas
xchg
out
bound
and
mov
leave
pop
sub
mov
mov
inc
iret
jb
sub
test
and
out
fwait
ljmp
iret
xchg
mov
inc
push
and
push
ret
dec
xchg
addr16
adc
push
ss
sub
out
mov
mov
dec
lret
neg
push
js
or
mov
into
jmp
test
sbb
test
dec
mov
cmp
dec
jge
mov
push
sub
jle
iret
ret
sbb
dec
mov
cmpsl
sbb
inc
jns
adc
mov
mov
and
iret
xlat
out
fisttpl
stos
lea
mov
inc
cmpl
mov
data16
shll
dec
sbb
inc
stc
stos
sbb
int3
lcall
jne
or
push
arpl
mov
cld
and
inc
xchg
pop
aas
jne
sub
in
pop
dec
push
scas
mov
adc
add
sbb
sbb
jge
inc
addr16
push
negb
call
cmp
int
shlb
icebp
mov
cmp
mov
push
fbstp
roll
inc
add
outsb
mov
adc
pop
sub
scas
xor
pop
or
sub
add
sub
lods
out
mov
fistpl
aad
cmp
vpmovzxbw
mov
sub
insb
push
incl
test
lret
insb
repnz
xchg
lods
adc
jne
mov
and
add
adc
sbb
pop
sbb
sahf
xor
cmp
push
or
repnz
cmp
cli
mov
ret
jg
in
fdivrl
repz
into
mov
xor
xlat
mov
xchg
shll
das
ret
hlt
cmp
stc
mov
add
daa
cmc
xchg
mov
mov
dec
jecxz
push
xor
fsubrp
and
dec
xchg
nop
lcall
mov
shl
stos
test
jmp
mov
cmp
push
sarb
fsubrp
or
sub
jns
insl
repz
mov
ror
loop
insb
int3
divl
jne
outsl
cmp
and
pop
inc
mov
xchg
dec
orb
shll
cs
sub
in
sbb
sbb
pop
and
sub
adc
xchg
add
cmpsb
pop
jns
testl
ja
and
push
fldcw
jo
int
aam
dec
push
bound
in
dec
int3
xor
enter
sub
repz
adc
nop
sub
or
pop
arpl
pop
mov
ret
rcll
popf
mov
pop
into
push
or
subl
rep
pop
mov
and
add
mov
adc
fstl
mov
inc
sbb
mov
pop
or
js
cltd
push
mov
xor
inc
sar
adc
sub
lea
or
mov
stos
jg
ds
lock
jne
mov
push
and
xchg
fdivrp
lods
mov
dec
fdivrl
cmp
das
lea
dec
xor
insl
push
aaa
repz
mov
push
cmp
icebp
lret
sahf
je
ljmp
mov
cmp
loopne
insl
push
add
shrb
xchg
cmpsl
xchg
mov
sbb
pop
fbstp
lret
gs
sub
shll
add
icebp
out
lea
mov
jg
add
addr16
adc
adc
push
fistps
mov
and
mov
jnp
and
cmpsl
mov
or
dec
xor
scas
sub
call
test
shrb
inc
add
adc
lret
nop
jne
or
fwait
jo
dec
xor
jno
incb
pop
mov
cmpsb
les
cmp
nop
outsb
adc
push
in
cwtl
adc
loope
cmp
inc
fmul
xor
je
mov
push
sub
faddp
inc
dec
jle
or
lea
jmp
add
pop
inc
dec
or
enter
iret
in
lods
ljmp
lds
sarl
xchg
mulb
or
cmp
xchg
adc
lods
int3
outsb
inc
inc
arpl
rorb
rol
lods
and
inc
ret
push
push
push
pop
adc
les
jae
mov
mov
mov
inc
iret
xchg
jecxz
pop
insb
mov
test
fiaddl
out
test
and
inc
jbe
push
or
imul
and
pop
arpl
sub
jbe
dec
push
sbb
cmp
imul
sub
xchg
ss
outsb
add
jbe
xor
xchg
jae
aad
and
xchg
fistps
add
ja
pop
aas
and
pop
in
ret
enter
stos
cmp
out
test
test
xchg
rclb
mov
mov
sub
mov
mov
outsb
pop
bound
add
cmp
leave
xchg
mov
dec
add
hlt
repnz
aaa
mov
imul
aaa
inc
or
mov
inc
inc
les
mov
ret
mov
sub
mov
ja
insl
stc
xlat
push
pop
pop
push
fcompl
jo
lds
xor
lods
lock
insb
bound
xchg
inc
out
dec
mov
es
jnp
jp
jne
int3
arpl
cmc
lret
test
lds
int3
cmpsl
xlat
pop
pop
or
pop
leave
cmp
push
aad
mov
xchg
into
repz
push
mov
sub
lret
pop
push
sbb
lds
jne
dec
repz
xchg
adc
adc
rcrb
jae
sub
mov
jecxz
push
mov
stos
dec
push
jg
ret
pop
and
iret
dec
inc
xchg
and
dec
and
negb
dec
stos
push
push
add
pop
mov
pop
push
inc
pop
es
popa
xchg
out
je
in
dec
fcompl
mov
cmpl
xchg
mov
xor
xor
mov
lcall
adc
sub
popa
push
imul
sbb
mov
bound
pop
aaa
lods
leave
ret
int
loopne
xchg
pop
push
scas
jo
aad
loope
and
or
js
sbb
fcmovbe
lret
xor
frstor
mov
dec
sti
pop
push
mov
cs
hlt
hlt
leave
fisubrl
mov
int
cmp
xor
adcb
or
and
xor
repnz
std
sbb
fincstp
or
mov
test
out
pusha
mov
cli
pop
mov
xor
movsl
sbb
inc
push
std
lods
xchg
and
jp
push
and
xchg
ficomps
aad
lods
pop
sub
dec
xchg
jmp
push
test
mov
or
sarl
mov
jnp
les
daa
pop
push
lods
sub
inc
and
adc
jno
pop
xor
mov
into
jnp
ja
push
jl
jns
mov
mov
stos
pop
sbb
fildl
imul
clc
popa
rol
mov
lret
xlat
cmp
lret
mov
in
mov
rorb
outsl
mov
imul
and
iret
push
cmp
cmc
adc
in
cs
cltd
cltd
and
lods
cmp
pop
repnz
movsl
pop
pop
jns
mov
fisubrs
mov
ljmp
jl
jle
rcr
adc
push
adcl
cmpsl
into
dec
rol
mov
mov
ficoms
shll
imul
gs
cld
push
mov
cmp
push
je
xchg
push
dec
arpl
push
cs
dec
pusha
pop
fildll
pop
mov
test
es
cmp
pop
mul
insl
cld
movsb
cmpsb
sbb
iret
pushf
dec
jnp
lcall
cld
push
test
push
into
hlt
push
sub
shrb
jp
fcoms
mov
mov
push
aad
xor
add
mov
add
sbb
push
jp
add
cmp
add
push
ss
cli
out
into
mov
jecxz
iret
loop
jo
mov
rclb
xchg
ss
jae
sbb
sti
les
leave
stos
sub
sti
in
mov
in
jns
outsl
dec
fwait
repz
je
jbe
movsl
int
inc
xchg
and
pop
icebp
sbb
add
out
mov
notb
xlat
rcrb
mov
push
aas
jge
pop
jp
mov
push
lea
out
sbb
popf
stc
into
aam
test
xchg
dec
es
xchg
bound
pop
mov
mov
in
push
bound
xchg
ss
push
lock
orb
cmp
jno
inc
xor
in
dec
sub
scas
call
sbb
jbe
popf
fimull
push
push
sub
popa
cmpsl
fidivrl
les
xchg
sahf
sub
mov
xor
push
pusha
into
sub
in
imul
and
mov
movsl
push
push
mov
addr16
icebp
es
fildl
stc
mov
mov
mov
dec
cmp
out
aam
xlat
mov
test
add
call
sbb
xor
add
rorb
push
xlat
loopne
cmpsl
and
aas
cmpsl
iret
shrb
lods
mov
sub
pop
outsb
inc
das
cmp
shrl
movl
flds
fsubr
push
mov
mov
push
adc
stos
xor
stos
dec
mov
lds
ret
rol
mov
pop
push
cltd
and
or
or
sub
cmp
cmpb
pushl
add
sub
and
jne
je
cmpb
dec
addr16
dec
pop
push
or
dec
pop
negl
dec
and
and
push
les
sbb
xor
call
sub
aaa
mov
mov
sub
or
std
nop
arpl
xor
mov
adc
lods
enter
and
mov
cs
aad
jle
loopne
int3
adc
aad
push
push
addr16
daa
jae
adc
push
lret
lods
adc
jae
enter
aas
mov
aad
imul
adc
inc
adc
push
addr16
jge
lahf
or
inc
xchg
and
push
orl
inc
xor
mov
push
sbb
ss
cmp
xor
add
xor
ja
fsub
xlat
js
cmp
pushf
add
outsl
mov
dec
orl
ret
mov
jae
lret
add
lds
or
push
fnstenv
cmc
mov
inc
and
fildl
icebp
and
inc
jge
jge
pop
dec
ret
cmpsl
mov
xchg
jmp
cmp
dec
xchg
mov
mov
add
mov
push
sti
inc
divb
lock
add
push
jecxz
xlat
push
or
inc
scas
or
mov
mov
out
or
sub
sub
dec
push
xchg
xchg
mov
test
mov
clc
mov
jge
insb
cmpsl
jno
pushf
xchg
imul
aas
pop
dec
pop
cmpsb
sub
lods
pop
cmp
inc
push
stos
sub
pop
rorl
and
jp
pop
cmp
push
ds
mov
sub
dec
popf
mov
inc
shlb
imul
mov
mov
sub
xchg
outsl
jmp
adc
inc
and
jl
xor
popa
cmc
xchg
mov
mov
push
sbb
adc
add
ljmp
out
cmp
or
sti
or
in
cmp
cli
ret
out
mov
dec
sahf
das
mov
in
notb
stos
mov
in
or
push
sar
pop
and
push
sub
adc
je
jg
jge
xor
and
js
scas
stos
jnp
sarl
mov
ret
test
push
shll
xchg
mov
cmp
roll
mov
test
pop
push
mov
sbb
inc
push
dec
enter
cmpsl
fsts
adc
sbb
sbb
test
shlb
sbb
mov
mov
pushf
movsl
or
loope
out
jp
cmp
inc
jae
mov
call
and
push
pop
mov
xor
in
jle
in
mov
mov
fwait
test
call
gs
test
and
xor
inc
lea
mov
xor
movsb
inc
mov
dec
and
mov
adc
test
in
je
lock
lock
xlat
mov
leave
shlb
es
cli
enter
aad
leave
ret
pop
std
xor
mov
inc
psubsb
fnstsw
push
int3
ficoms
pop
mov
insb
movl
xchg
mov
sahf
inc
sub
test
mov
mov
sub
lcall
mov
icebp
lahf
lods
int3
insb
mov
scas
insb
push
ds
popf
pop
lahf
jmp
mov
stc
mov
repz
fld
and
mov
inc
mov
mov
mov
push
outsl
loop
mov
sub
pusha
pop
imul
jge
pop
jb
mov
mov
lahf
add
cmp
in
and
iret
ja
sbb
push
mov
out
ja
lea
mov
inc
xlat
mov
sti
inc
mov
push
lock
mov
cmp
cwtl
pusha
push
test
xchg
mov
mov
lahf
dec
fs
sbb
dec
out
dec
jg
or
adc
jne
mov
jecxz
repz
hlt
xor
and
js
sub
dec
sbb
push
shll
out
jns
mov
pop
push
in
imul
insl
xchg
out
icebp
mov
aas
lcall
bound
adcl
data16
xchg
test
xor
scas
cmp
es
sub
mov
and
sbbb
jae
dec
push
jb
popa
jnp
and
jbe
std
shlb
cli
mov
xchg
pop
stc
mov
xor
push
xchg
sub
imul
dec
leave
xchg
dec
cmp
push
push
movsb
and
xchg
fiadds
fildl
filds
int
inc
cmc
push
inc
popa
shl
repz
inc
xor
xchg
icebp
jmp
dec
mov
mov
jmp
pop
mov
sbb
xor
pop
push
sbb
aas
lahf
push
clc
inc
adc
aaa
out
pop
pop
mov
iret
imul
ret
int3
push
adc
push
cltd
lods
adc
pop
ss
xor
lret
ss
pop
push
adc
jo
xor
or
shlb
sub
inc
cmp
stos
add
adc
push
sbb
sbb
movsb
lea
adc
xlat
lcall
pop
push
dec
inc
enter
test
ljmp
test
xchg
cmc
inc
outsl
mov
int
inc
roll
cmpl
inc
inc
out
ja
and
jecxz
add
and
sbb
icebp
and
add
out
inc
dec
or
xor
sbb
cmpsb
daa
mov
xlat
sub
hlt
cmp
cmp
addb
and
popa
and
aad
sub
xor
stos
and
pop
call
pop
rorl
cmp
jmp
dec
mov
hlt
and
gs
pop
stos
push
inc
shll
enter
mov
and
push
cmp
mov
and
push
add
push
sti
mov
loopne
cmp
pop
adc
add
xor
call
or
lods
div
mov
adc
cmp
pop
out
pop
js
nop
or
push
jnp
cmp
outsl
xchg
push
data16
cmp
jnp
inc
dec
jns
scas
hlt
cmp
sub
ss
iret
aas
sub
js
sbb
xchg
in
jne
mov
and
pop
jge
inc
into
pop
mov
outsl
rorb
pop
lock
pusha
sti
addb
adcb
imul
mov
lea
fcompl
jae
aad
sahf
rorb
add
call
xchg
fbstp
ret
pop
cli
add
sbb
cmp
add
loope
loopne
mov
cmpsl
aas
lea
push
ret
pop
pop
xlat
dec
dec
sub
sub
cmp
movsb
sbb
jle
mov
xor
jnp
cmp
mov
lret
popf
rcrb
jae
data16
push
in
cmp
xchg
mov
aam
lods
sbb
xor
xlat
lods
fiaddl
push
andl
push
aaa
xor
cmp
dec
or
addl
in
lret
and
and
adc
jle
sub
inc
fsubl
dec
jno
xchg
push
dec
cmp
jno
pop
push
lret
xchg
lods
push
jae
mov
inc
mov
jl
loop
cs
sbb
mov
scas
push
add
fdivrl
call
enter
js
add
inc
movsl
pushl
inc
aas
cmp
mov
ja
sub
mov
mov
pop
sbb
sub
push
rcr
sub
enter
pop
fidivs
repnz
pop
ljmp
enter
add
lea
push
repz
aas
daa
icebp
inc
and
cwtl
push
sahf
add
jb
pop
mov
hlt
insl
mov
xor
fistpl
add
mov
arpl
mov
in
icebp
jns
or
push
in
add
xor
inc
xchg
std
lds
sub
sbb
sahf
cmc
mov
xchg
mov
jne
mov
fs
mov
fsub
mov
ret
sub
add
sub
mov
or
push
shl
sub
fldenv
in
insl
pop
cli
ficoms
fs
mov
sub
inc
push
fdiv
in
cmc
adc
adc
outsl
sbb
daa
repz
sbbl
testl
mov
lock
xor
jle
shlb
mov
xchg
mov
mov
and
add
rcrl
jne
dec
scas
sbb
pop
mov
mov
addr16
hlt
popa
cmp
cli
sti
cmc
jecxz
xor
jb
scas
mov
inc
ss
mov
xor
jmp
mov
pop
xchg
pushf
dec
test
and
arpl
insl
sub
push
or
and
lret
jne
insb
shrb
into
inc
xor
fadds
fsubp
nop
sub
inc
pop
stos
mov
xorl
xchg
cmp
stos
fldt
inc
out
push
sbb
push
sbb
test
iret
loopne
movsl
fldl
add
call
fcoml
sahf
ja
loope
add
negb
jbe
xchg
repnz
jb
cmp
nop
sbb
shrl
inc
fisubrs
ljmp
loope,pn
lret
cmp
sbb
in
dec
cmp
loop
jecxz
jle
xchg
xchg
adc
mov
jno
stos
imul
jns
cmp
aad
mov
insl
gs
mov
out
mov
into
pop
aaa
lock
scas
sub
push
mov
sub
sub
or
jl
fbstp
pop
movsb
sub
daa
pop
cltd
adc
add
daa
add
fsubrp
mov
sub
mov
fidivl
cmpsb
fucomi
inc
sti
clc
int3
xchg
dec
pop
and
popa
scas
or
jnp
stos
push
xchg
fwait
addr16
push
xchg
stos
fbld
scas
mov
mov
cwtl
aam
or
lock
mov
xchg
fistl
int
jns
pop
clc
and
mov
xchg
pop
adc
mov
mov
addb
aaa
andl
inc
fsubs
emms
mov
int
push
pop
in
dec
test
dec
push
std
je
lcall
xor
mov
scas
and
mov
loope
inc
jnp
pop
pop
xor
nop
lock
push
pop
adc
inc
sub
jmp
pop
movsb
mov
pop
xor
xorb
sbb
jmp
bnd
filds
xchg
or
mov
and
sub
popf
rcrb
push
icebp
dec
push
inc
fucomi
mov
mov
jmp
clc
subb
add
xor
arpl
inc
das
stos
push
cmp
cmp
push
call
shll
or
clc
lcall
insb
inc
xchg
lds
cmp
sub
outsb
jg
sbb
pop
lcall
and
loope
xor
addr16
out
rolb
into
pusha
xor
pop
cwtl
add
add
mov
inc
xor
popa
adc
xchg
dec
dec
xor
dec
mov
fs
lret
fldcw
jle
sahf
fisubrl
scas
orl
inc
rorl
mov
xor
jns
insl
sbb
adc
and
xor
mov
addr16
pop
cld
rcl
inc
roll
lods
sub
jne
mov
inc
xchg
sub
sbb
inc
das
rol
sub
jmp
mov
iret
mov
jg
jecxz
mov
cmp
mov
test
sbb
xchg
xacquire
iret
inc
sahf
adc
mov
outsb
mov
mov
sbb
dec
arpl
or
jno
std
push
pop
push
int3
pop
jns
mov
lret
movsl
dec
cmp
add
scas
scas
fbstp
js
fildl
mov
cmpl
push
pop
sub
stc
mov
and
cmp
negb
icebp
jb
inc
jle
movsl
loop
sbb
sbb
cmovb
lock
cmovs
lcall
add
daa
jmp
iret
mov
jne
fnstenv
orb
mov
gs
insb
rclb
mov
fisubl
popl
shlb
ljmp
jo
test
cltd
sub
xchg
push
loope
in
xchg
sbb
or
pushf
imul
movsb
jae
popf
lret
push
outsb
pop
notl
jno
loop
jl
mov
jno
push
and
xchg
xor
cwtl
xor
inc
loop
test
test
hlt
xor
fstl
lds
mov
cmpsl
or
lahf
xor
push
imul
mov
ja
xor
dec
xchg
imul
pop
sbb
push
mov
sub
ficompl
insb
shlb
cmp
jle
scas
jns
test
jne
dec
sub
ljmp
push
mov
std
fnstsw
and
jp
out
dec
outsl
cmc
daa
push
mov
ss
frstor
cld
cmc
je
je
dec
int3
sahf
push
fidivrl
xchg
lcall
cltd
mov
scas
xchg
xor
das
xchg
xor
scas
inc
cmp
or
inc
push
lock
push
fiadds
adc
jno
xor
bound
xchg
out
mov
mov
int
fdivr
mov
stc
ret
sbb
mov
jecxz
inc
fwait
push
lret
mov
scas
pusha
flds
xchg
push
fisttpll
dec
popf
fcomps
call
rolb
pop
lods
loopne
inc
leave
outsl
sub
fdivrl
cmp
push
add
aad
fadds
sub
sti
jecxz
sbb
jle
dec
add
jo
sbb
lds
in
and
adc
lock
cld
pushf
in
cmc
dec
aas
jo
in
out
mov
mov
xchg
xchg
cmc
int
pop
aaa
push
jmp
ret
jp
shrl
lret
adc
loop
ret
std
and
movsl
push
js
divb
rolb
sbb
and
sub
inc
jg
jmp
out
xor
cmp
jecxz
nop
or
jno
inc
pop
cmp
pop
lcall
subl
adc
or
in
aaa
mov
out
lret
jo
shlb
xchg
pop
das
repnz
repz
pop
or
ss
cmp
mov
inc
lods
orl
dec
movsl
sbb
add
adc
out
cmp
push
pop
cmp
pop
rcrb
lea
inc
xlat
xchg
fistps
das
dec
cmp
cs
outsb
add
mov
xor
mov
cmc
xorl
mov
rcr
outsb
lods
movsb
jne
adc
or
test
inc
cmpsl
adc
fwait
pusha
dec
jmp
jecxz
jnp
cwtl
ja
sub
push
jae
lret
aad
jmp
int
neg
icebp
sub
dec
push
int3
lcall
mov
mov
pop
test
pushl
sbb
inc
add
ljmp
jne
out
cwtl
jne
add
dec
push
push
sbb
lock
imul
loope
and
inc
mov
test
or
pop
jns
cmp
ja
pop
in
cld
std
enter
dec
in
aas
xchg
push
in
out
jp
mov
sti
jne
pop
xchg
adc
xchg
cmp
movsl
jg
cmp
cltd
enter
sarb
adc
ljmp
lret
out
sbb
popa
idivb
pop
or
dec
cmc
add
js
jecxz
loopne
int
push
cli
pop
pop
jno
rep
xchg
mov
imul
jbe
stc
xor
mov
in
jne
loopne
pop
mov
xor
das
mov
rcrb
inc
movb
xor
frstor
arpl
add
xchg
lods
ja
repz
lock
imull
push
pop
imul
adc
jl
sahf
push
or
jle
psubusb
sub
jns
shrl
xchg
aam
add
sbb
and
dec
leave
xor
and
ror
mov
push
mov
gs
ljmp
mov
lahf
jmp
mov
addr16
mov
mov
andl
daa
mov
cs
cmp
dec
inc
adc
or
popl
xor
rorl
jno
stos
jae
cmc
test
adc
lcall
push
movsl
pop
adc
pop
enter
pmaxsw
hlt
or
dec
sub
jp
cmp
mov
pop
das
mov
loop
xchg
add
lcall
test
add
pop
sub
sbb
out
rorb
into
and
sbb
lods
shll
in
pop
pushl
es
push
mov
repz
int
add
int
add
ljmp
cmc
sbb
cmp
push
push
test
xchg
push
add
jle
mov
adcl
shlb
jg
out
ficoms
incl
cmp
adc
dec
jge
xchg
sbb
cmpsl
dec
jae
fcompl
cmc
notl
out
or
adc
inc
insb
ret
xchg
ja
push
mov
hlt
pop
icebp
punpckhbw
int3
jno
jns
loop
xchg
stc
les
sub
int3
fwait
sbb
into
movsb
or
jb
or
fcom
sbb
pop
push
imul
lret
call
adc
sub
fdecstp
mov
jp
adc
test
add
js
call
jmp
mov
xlat
out
mov
pop
addl
enter
fwait
rcll
lods
pop
cmc
sti
dec
sub
mov
mov
mov
addr16
cmp
xor
mov
popf
xor
aad
add
pop
and
sahf
push
mov
pop
lods
push
pop
cld
data16
ds
je
mov
pop
out
pop
mov
call
push
cmp
insl
inc
sarl
push
mov
in
xor
push
fists
sub
shll
fucomip
pop
mov
jl
rcl
imul
clc
jmp
cmp
adc
mov
pop
cmpsb
pop
ret
dec
das
adc
repnz
dec
inc
int3
and
add
jmp
and
or
shr
aaa
jecxz
sub
pop
xchg
pop
nop
inc
stos
add
adc
repz
flds
pop
or
fwait
int
sahf
leave
pusha
pop
out
pop
lahf
inc
rorl
xor
pop
mov
movsb
ret
test
aaa
jnp
into
ljmp
leave
cmp
cwtl
adc
imul
aam
jle
mov
pusha
cld
dec
mov
mov
or
cld
ss
cmp
ret
movsb
in
xor
jo
cmp
lods
jmp
rcrb
jne
xor
jp
dec
or
es
in
insb
or
xchg
and
mov
sub
push
pop
addl
xor
aaa
repnz
cli
insb
pop
push
xor
insb
push
jecxz
or
mov
add
enter
lds
sbb
mov
jno
test
imul
pop
idivb
push
test
addr16
cmp
clc
mov
or
inc
cmp
add
int3
jge
mov
jp
xor
mov
das
mov
lcall
xchg
pop
test
cltd
cltd
xor
pop
lret
lret
xchg
xchg
ret
xor
imulb
outsl
mov
inc
fcmove
push
pop
pop
mov
or
aad
dec
ja
or
xchg
daa
mov
xchg
and
xlat
cwtl
mov
add
out
add
mov
data16
jnp
int
cmp
outsb
cmp
pop
and
in
add
rcll
xchg
adc
hlt
push
out
pop
jp
in
mov
popa
leave
sbb
sarl
mov
and
lock
hlt
popa
insb
pop
xchg
ss
cs
ret
inc
movb
imul
idivb
test
je
js
pop
xchg
add
sub
in
loop
ror
or
push
daa
cmp
shrl
jmp
pop
fisttps
ficomps
inc
mov
mov
ffreep
xchg
ds
sbbl
mov
mov
xchg
jmp
movsb
sbb
jne
popa
lret
lea
out
inc
sbb
clc
jecxz
fisubrl
push
insb
and
bound
out
shlb
mov
cmp
loope
or
mov
sbb
or
test
les
orl
ret
gs
ljmp
or
lret
rcr
jbe
lcall
in
rol
jg
rcll
lods
movsl
cmp
jecxz
js
cmp
inc
aaa
xchg
xor
pop
add
lret
movsb
pop
and
adc
orb
pop
repz
shrl
cs
xchg
sti
cmc
mov
sub
cli
sub
gs
mov
cmpsl
in
xor
xchg
push
and
ja
jecxz
aad
or
xor
je
push
popf
outsb
sub
inc
test
inc
push
movsl
add
mov
sbb
aas
pop
push
sub
cmp
jne
movb
in
rcll
daa
xchg
sti
xor
lahf
popa
pop
sub
mov
out
into
xchg
push
aaa
iret
pop
jmp
fsubrs
mov
mov
ljmp
sub
or
mov
dec
jmp
cs
les
mov
lcall
lret
pop
and
add
loopne
cmp
pusha
cmpsl
mov
sbb
push
xchg
adc
adc
js
xchg
push
xchg
or
mov
jmp
and
out
aam
or
or
sbb
and
cmpsb
lea
xchg
roll
std
es
les
mov
bound
push
cwtl
je
mov
ljmp
mov
mov
push
xchg
jo
and
pop
pop
sub
cmpb
sbb
cmpsl
add
div
lcall
cmp
fmull
into
mov
xchg
out
xchg
loopne
sub
fisubl
test
mov
rcrb
mov
decb
xchg
jl
mov
pop
jmp
xor
hlt
lods
test
push
fstpl
sub
pop
push
jns
sub
pop
insl
dec
dec
lret
and
adc
jp
loop
sub
jge
mov
leave
xor
adcb
in
mov
iret
test
jne
lds
mov
jns
add
adc
scas
cmp
mov
test
xor
sbbl
jnp
mov
sahf
loope
mov
call
pop
andb
pop
dec
xchg
sbb
push
insl
fs
jl
adc
jg
dec
inc
dec
fucom
in
dec
and
cli
xorb
sahf
movaps
arpl
cltd
pusha
mov
mov
int
sbbb
xchg
repnz
mov
cli
pushf
icebp
ljmp
xchg
pushf
and
push
aad
jp
and
lcall
jle
hlt
dec
lea
mov
aad
out
clc
hlt
or
ror
sub
xchg
xlat
bound
adc
rorl
outsb
sbb
xchg
or
imul
cmc
test
fdivs
out
mov
mov
cwtl
into
aas
pop
jo
push
mov
cmc
jne
cwtl
mov
jle
dec
testb
dec
lcall
je
xchg
push
fstl
lock
jmp
mov
shrl
and
jecxz
pop
icebp
cmpsb
dec
adc
xchg
pusha
and
push
sub
jne
ficompl
imul
inc
dec
ljmp
out
push
mov
outsb
jge
inc
popa
cmp
lods
lret
mov
hlt
dec
lds
jo
cli
push
mov
mov
push
push
andb
pop
stc
addr16
push
mov
inc
out
sub
jg
fisubrl
jnp
dec
dec
fcomps
sub
popa
psubb
push
mov
dec
fildl
pop
or
scas
xchg
out
aam
cmpsb
push
das
divb
or
imull
mov
xchg
aaa
pop
incl
movsl
or
sbbb
dec
jbe
dec
insl
imulb
aaa
add
xchg
fimull
test
lds
jne
inc
sub
mov
aad
dec
out
jne
push
aas
fstps
mov
lahf
mov
scas
aam
push
mov
dec
push
jae
push
fstpl
add
xchg
mov
adc
sti
sub
lods
fmuls
insb
mov
das
fcmovne
fs
inc
jo
insb
pop
xor
stc
or
jnp
lock
inc
sbb
push
xchg
xchg
rorl
cmp
subb
pop
add
call
mov
bound
sub
nop
pop
adc
jae
cmc
dec
outsl
into
lds
add
dec
js
and
test
jecxz
lds
insl
adc
xchg
xchg
or
in
push
xlat
fs
and
test
jecxz
pop
xchg
ss
sbb
xchg
test
je
sub
jg
mov
jno
cltd
pop
out
push
sbb
add
mov
mov
out
inc
sbb
dec
add
mov
and
xchg
nop
pop
sub
pop
jp
cmp
sub
js
mov
push
mov
sahf
data16
mov
leave
fdivrl
aaa
shlb
lahf
mov
je
into
loopne
outsl
and
xorl
xchg
mov
repnz
mull
ud0
fwait
push
adc
adc
out
scas
cmovbe
test
pusha
jg
pop
fcoms
test
std
bound
aaa
pusha
inc
pop
adc
sub
and
inc
xchg
repnz
dec
loope
cmp
sarb
fisubs
scas
ljmp
pushf
cmp
fsubl
lcall
js
ljmp
insl
in
idivb
push
fucom
push
mov
lcall
xchg
mov
std
rep
mov
pop
or
mov
push
push
pop
test
pop
mov
jnp
in
movsl
mov
es
aaa
mov
ljmp
cld
lret
in
xchg
out
out
sub
jnp
iret
dec
mov
cli
mov
mov
shlb
test
mov
sub
int3
sub
xchg
enter
bound
fucomp
jno
ficoml
dec
outsb
fsts
test
or
push
or
lods
cmpsl
lret
stos
loope
inc
arpl
pop
cwtl
test
imul
sahf
mov
pusha
lea
hlt
mov
test
mov
mov
jmp
in
lea
dec
stos
jmp
sbb
loopne
sbb
lds
mov
nop
xlat
and
inc
lock
push
cmp
decb
and
cmp
jae
mov
jp
and
xor
cmpsl
jp
psllq
movsb
shrl
sub
cwtl
xchg
mov
inc
mov
adc
xlat
je
push
popa
lods
in
cmp
mov
inc
fdivrl
int
mov
nop
popa
push
push
pop
push
enter
jo
adc
aad
je
jae
and
xchg
mov
mov
and
jne
dec
scas
push
outsl
ret
test
cmp
xor
jo
or
xor
cs
js
lcall
aad
pop
and
jmp
cmp
xchg
pop
lahf
bound
dec
call
pop
repz
not
iret
push
iret
ret
sti
ds
pop
pop
cmpsl
repz
nop
fldcw
inc
loope
fs
shll
addr16
jge
loop
lock
lods
inc
sbb
lods
sahf
pop
xor
mov
mov
int
pop
adc
adc
dec
sub
pop
inc
xchg
fimull
sbb
les
insl
idiv
cld
adc
mov
push
dec
fwait
sbb
insl
push
lret
cltd
jg
orb
hlt
pusha
pop
adc
lret
aaa
and
dec
xor
sbb
xchg
mov
les
xchg
jno
imul
test
int3
push
cmpl
push
pop
sub
insl
enter
dec
incl
add
cmp
cli
sbb
je
adc
xchg
sub
int3
mov
pop
test
sbb
scas
jae
mov
in
jl
pop
rcr
outsb
in
cmc
lds
add
incl
or
data16
flds
adc
adc
pop
mov
cwtl
int3
lret
fldpi
rclb
fsubrl
add
mov
or
icebp
sub
imul
pop
movsb
cld
cmp
es
mov
jecxz
adc
adc
inc
cmp
add
loop
and
or
pop
push
pop
mov
inc
xchg
lds
aaa
aaa
sub
lods
adc
int3
xchg
push
int3
xchg
jl
lret
mov
jae
rcll
mov
sahf
stos
fmul
push
out
loop
xor
xor
cmp
push
jecxz
popf
pop
stc
out
push
mov
and
cmpsl
fwait
or
sti
leave
add
xor
pop
stc
outsb
fwait
lret
outsb
pop
mov
mov
arpl
nop
jne
cmpsb
mov
or
repnz
dec
mov
mov
or
sub
jae
ds
inc
cmpsb
stc
cmp
stos
mov
xor
jno
xchg
mov
inc
lods
repz
dec
push
leave
jp
add
cmc
into
ja
shl
imul
aam
xchg
dec
cmpsb
cli
mov
sbb
test
xchg
in
xor
rclb
xor
jne
cli
cmp
push
cwtl
fimull
or
mov
xchg
js
sub
pop
lahf
inc
aaa
sub
push
je
pop
lds
sahf
movl
inc
jne
das
adc
push
pop
aas
mov
stos
and
in
pop
fs
cmp
xchg
cmova
clc
in
ljmp
ret
stos
int3
negl
imul
inc
mov
mov
jl
scas
test
test
pop
mov
fstl
icebp
int3
popa
icebp
xor
call
lret
icebp
mov
mov
mov
aas
les
cmpsl
jmp
inc
pop
and
nop
mov
sbb
xor
mov
pop
test
xchg
nop
lods
movsl
sub
xorb
fistpl
pop
mov
jle
sbb
sub
dec
mov
icebp
push
pop
dec
mov
jge
dec
add
adc
mov
inc
stos
loopne
xlat
add
dec
outsb
push
jle
inc
adc
rclb
cmp
movl
hlt
pop
test
out
cmp
lods
push
sub
test
mov
clc
pusha
xor
adc
pop
mov
mov
sbb
xor
inc
loope
testl
xor
in
sbb
add
pop
fisttps
jl
lock
or
imul
mov
leave
das
xchg
cwtl
pop
in
xchg
or
push
cwtl
gs
mov
mov
push
mov
jb
in
int3
inc
ret
adc
xchg
pop
or
sbb
inc
adc
cmpsb
divl
movsb
or
or
int3
inc
inc
mov
xchg
mov
test
or
divl
push
into
popa
fisubl
stos
adcl
or
fwait
sub
inc
imul
enter
jp
mov
jmp
sbb
ljmp
pop
arpl
sti
cld
adc
ja
mov
cltd
sbb
movsl
inc
mov
jno
mov
push
jae
ljmp
fs
test
std
push
xor
push
inc
lock
xchg
arpl
test
sahf
mov
xlat
or
stc
rcrb
cmp
adcb
jo
xchg
divl
sub
inc
out
ja
dec
jg
les
jnp
das
enter
outsb
mov
mov
jns
mov
dec
xor
mov
xor
ja
mov
jns
lock
das
cwtl
pop
test
mov
add
mov
andb
and
lds
nop
lret
jp
data16
es
sub
cmc
addr16
psubusw
scas
cmpsl
lock
popf
outsl
xchg
enter
or
dec
mov
stc
mov
xor
fwait
mov
enter
inc
fldt
mov
jmp
push
mov
sub
cmp
jb
xchg
mov
pusha
je
xor
push
cmpsl
hlt
lret
push
push
mov
das
loopne
jmp
sti
and
outsl
mov
xchg
sub
inc
dec
bnd
enter
pop
push
add
adc
notl
sub
jns
aad
inc
add
fs
je
movsl
push
add
sti
shlb
jge
mov
push
sbb
out
gs
out
cmp
mov
nop
mov
dec
rorb
sbb
jae
shrl
push
mov
sbbl
add
fucom
imul
dec
inc
sbb
data16
iret
jl
popa
xchg
dec
dec
add
jl
inc
jecxz
xchg
jl
pop
mov
andl
or
out
les
sub
enter
or
push
in
sbb
dec
dec
aaa
mov
pop
jno
sbb
sub
xor
out
mov
add
pop
adc
xlat
xor
jl
or
jge
dec
or
inc
outsb
and
lahf
inc
push
xchg
xorl
jle
lret
xchg
cli
xchg
dec
test
push
jg
mov
adc
xchg
add
test
clc
enter
xor
inc
pop
in
lods
loopne
leave
mov
fisubrl
loop
mov
popf
sbb
inc
pushf
sti
adc
mov
jae
push
pop
push
mov
cmp
sbb
inc
push
mov
je
iret
ds
incb
and
out
enter
jg
mov
aad
and
insl
or
sbb
adc
mov
test
cwtl
and
js
inc
lret
sub
xchg
cmp
sub
repnz
add
loop
sahf
adcl
mov
lods
sbb
fidivrs
fcmovnb
jae
jp
testl
mov
movzwl
shrb
jnp
rcr
minps
pop
out
and
sbb
jp
push
and
call
jae
cmp
es
and
rolb
call
xchg
daa
insb
sub
mov
std
sbb
rolb
xor
daa
pop
lods
aad
jo
xlat
dec
xor
dec
in
lock
movsl
repz
dec
ds
add
dec
and
push
inc
add
rcl
mov
jns
test
aaa
jb
in
mov
movb
dec
add
pop
sub
xchg
nop
lds
mov
arpl
adc
cmp
inc
in
mov
fnstcw
pop
fstl
addr16
xor
cmpsl
jl
ss
es
pop
repnz
cmpsl
pop
jns
divl
call
push
lret
in
repnz
lock
lahf
mov
cmc
inc
push
push
sbb
enter
stc
inc
mov
mov
pop
nop
mov
dec
xchg
and
iret
or
xchg
pop
cmc
jp
push
cmp
dec
test
addr16
mov
mov
lea
call
in
out
xor
and
pop
dec
sbb
imul
jnp
hlt
mov
lret
sahf
ljmp
call
or
cmp
jle
pop
lret
addr16
push
dec
inc
loopne
cmc
lahf
lcall
subl
push
int
fstp
gs
add
cmp
outsl
mov
push
mov
sahf
adc
adc
xor
xor
pop
mov
mov
pop
imul
dec
out
dec
mov
testl
cmp
mov
mov
sbb
loope
dec
mov
sbbb
sub
mov
cltd
mov
jns
cmpsb
or
fcmovb
mov
mov
mov
aam
jnp
xor
pop
int
repz
pop
repz
pop
sub
jo
mov
sbb
outsb
sbb
je
lret
fcoml
add
test
adc
sub
repnz
stc
dec
sub
fsubs
pop
mulb
mov
aaa
mov
jg
sub
enter
shlb
jmp
and
sbb
mov
std
shll
lret
sbb
mov
imul
dec
pop
lret
rcrb
push
popa
shll
sti
jp
out
aad
xor
lret
or
rorl
mov
cmp
mov
mov
neg
cmp
and
dec
lahf
bound
popa
popa
xchg
xchg
push
or
lcall
mov
and
sti
fldenv
sbb
js
aaa
sarb
cmp
mov
nop
mov
lods
rcrb
scas
push
mul
xchg
std
dec
pushf
cli
sub
mov
ljmp
sub
mov
mov
jno
out
jecxz
cmpsl
cmp
in
inc
aas
cs
clc
pop
sbb
call
pop
imul
fwait
idivl
cmp
loop
repnz
arpl
sub
dec
lcall
dec
cmp
test
and
ds
call
aas
push
mov
mov
pop
roll
nop
jae
cmp
fidivrs
pop
test
ljmp
fs
divl
dec
xor
movsb
test
lea
das
add
sbb
or
pop
ss
roll
jg
xor
repnz
int
es
clc
enter
mov
pop
addb
dec
popa
out
outsb
in
jg
in
jns
loope
jno
in
inc
mov
fcoms
shlb
in
dec
jge
inc
or
xchg
sub
lea
jl
add
faddp
ds
push
pop
pop
ret
mov
leave
gs
or
pop
stos
ss
push
lcall
in
mov
sbb
sub
shr
dec
repz
mov
mov
cmc
out
mov
sub
dec
xchg
shlb
loope
add
dec
int
mov
pop
xlat
dec
out
mov
fisubl
sbb
xchg
adc
mov
mov
add
push
adc
jnp
lcall
mov
repz
icebp
inc
cmp
out
lret
outsl
xchg
cmp
inc
adc
fstps
lods
mov
sub
mov
mov
divb
cli
call
enter
cmpsl
repnz
push
dec
test
cmc
outsl
mov
lret
addb
mov
daa
mov
or
notl
je
dec
mov
movsb
outsl
mov
dec
incb
mov
jnp
push
test
dec
fistpll
inc
sahf
imul
cmp
aam
stos
sub
es
add
jne
int3
out
add
push
mov
xchg
or
fistps
loopne
cli
repz
pop
loop
mov
adc
push
add
push
mov
out
cli
jns
subl
cmpsl
cwtl
push
std
std
sub
mov
inc
push
mov
das
sbb
cmc
leave
xor
je
inc
jae
es
data16
lret
mov
push
out
inc
lahf
insl
sahf
mov
add
adc
jecxz
sti
inc
pop
cmp
fwait
mov
sbb
mov
arpl
dec
push
sbb
cmpl
scas
push
das
sbb
sbb
insl
aam
dec
popf
cld
js
pop
cmpb
jne
sbb
or
mov
lock
cmp
sub
inc
xor
aam
and
enter
inc
popa
mov
rorb
sub
xchg
int
scas
fwait
mov
dec
pop
mov
mov
sub
adc
pop
out
adc
test
sbb
in
data16
cmp
xchg
jb
dec
jge
test
out
adc
sahf
arpl
mov
rclb
or
dec
inc
mov
hlt
add
adc
jmp
insb
gs
pop
xlat
dec
and
jb
mov
cmp
pop
dec
outsb
pop
sbb
lret
push
jg
xchg
int
test
sbb
pusha
into
sahf
fwait
mov
fst
mov
adc
test
out
enter
xchg
and
add
or
inc
or
sub
stos
pop
mov
loopne
sbb
jmp
sbb
pop
mov
pop
dec
enter
loopne
mov
inc
aad
shll
je
xlat
xor
frstor
js
stos
and
inc
pop
mov
inc
or
push
loope
arpl
out
xchg
insb
or
jle
stc
mov
push
jle
subl
ss
hlt
xlat
test
pop
nop
es
cmp
std
and
cmp
or
scas
test
mov
aad
inc
insl
std
and
jne
inc
sar
fwait
cs
and
cwtl
inc
sbb
add
pushf
repnz
xchg
inc
dec
ds
jmp
insb
jle
mov
clc
repz
call
jl
shrl
mov
add
out
arpl
ss
out
jmp
inc
mov
pop
dec
jbe
int3
add
rcrl
neg
and
loop
xchg
jle
push
and
das
in
std
ljmp
xchg
xor
test
xchg
inc
inc
inc
adc
das
jmp
mov
or
inc
adc
jecxz
pop
std
scas
xchg
pushw
int
adc
mov
sub
sbb
call
inc
lods
inc
or
sbb
test
lock
gs
xchg
test
arpl
lret
arpl
mov
and
rolb
sbbb
outsb
mov
xor
dec
mov
jl
aaa
jp
sbb
mov
call
dec
imul
shrb
jg
call
aad
fsub
jle
mov
stc
mov
decl
ja
jmp
xor
ret
cmp
clc
aam
xchg
in
jnp
or
jne
add
mov
fstl
shl
dec
mov
dec
icebp
fwait
mov
in
pop
sbb
xchg
ret
in
fisubl
xor
cmpsl
cmp
xchg
clc
mov
pusha
out
popa
ret
pop
or
and
cmp
test
push
jae
repz
cmp
sub
dec
xchg
test
and
in
xor
inc
mov
sbb
and
lret
daa
mov
imul
xor
daa
jg
hlt
lret
frstor
push
loopne
in
dec
in
idivl
insb
jno
xchg
ret
mov
xchg
cs
je
jl
mov
jbe
nop
inc
jge
insb
clc
lds
dec
mov
addr16
cwtl
test
pushf
inc
sub
add
or
push
dec
icebp
faddp
dec
stos
in
jbe
dec
xor
or
bound
lods
in
dec
rcll
data16
cmpsb
inc
add
movsb
jle
inc
mov
pop
ss
outsb
out
cmp
jns
stos
lods
aaa
lods
pushf
stos
lret
jnp
xor
idivb
mov
nop
divb
pop
pop
push
lret
dec
jns
int3
fdivs
loop
mov
imul
test
pop
imul
les
cmp
sahf
or
in
sahf
jo
scas
xchg
and
aad
mov
adc
xor
and
je
mov
mov
arpl
into
sbb
xchg
lcall
das
insb
or
jl
jbe
cmpsb
call
scas
scas
inc
mov
or
mov
ljmp
sti
inc
bound
add
popf
inc
fisubs
fwait
stc
inc
pop
sbb
fmull
das
lods
rorb
mov
jmp
cmp
jae
mov
in
sarb
pop
roll
lods
pop
adc
dec
dec
sahf
lds
loopne
lahf
pop
in
pushf
jmp
sub
out
mov
add
cwtl
mov
mov
sub
jp
mov
mov
enter
mov
testb
jle
fsub
popa
fcmovnb
adc
inc
mov
lret
jecxz
jnp
mov
add
icebp
iret
sbb
xchg
mov
jecxz
dec
push
cmpsl
fnsave
lret
xor
sub
cmp
dec
cld
mov
sar
int3
rorl
les
push
andb
jno
or
pop
popa
fxch
jne
mov
inc
adc
adc
mov
aam
aaa
icebp
xor
sbb
sub
cmp
fnstsw
je
popl
lods
sbb
les
dec
jl
iret
or
mov
cwtl
iret
hlt
shld
imulb
leave
filds
cltd
mov
mov
sti
sub
dec
pop
add
cld
cmp
push
leave
mov
outsb
and
imul
test
outsb
imul
lret
ljmp
aam
pop
xchg
mov
sbb
add
fdiv
dec
inc
ficoml
pop
in
int
mov
inc
std
dec
int
xlat
xorb
icebp
pop
repnz
ret
mov
out
or
jns
mov
xchg
and
adc
sub
lret
jbe
shlb
jbe
adc
adc
outsl
dec
cltd
inc
fmull
daa
mov
jno
mov
inc
jge
push
sarb
leave
sarb
xchg
mov
lret
rcr
dec
or
scas
inc
adc
inc
or
lods
sub
xor
orb
stc
cmp
insl
negb
cltd
bound
jno
subb
add
jecxz
mov
pop
dec
and
hlt
lock
ds
mov
jle
jmp
fisttpll
lret
test
out
xlat
hlt
loope
leave
insb
repnz
cltd
mov
popf
aam
or
xor
and
ja
dec
sub
std
lea
clc
inc
stos
leave
inc
adc
jo
out
adc
or
mov
mov
cwtl
popl
out
lahf
mov
cmp
sbb
fmul
jb
mov
cmpsl
mov
nop
fnstenv
mov
jmp
fsubrs
or
mov
jmp
jecxz
pop
je
inc
mov
cmp
mov
pop
adc
jle
je,pt
or
sub
push
fisttps
stos
ja
or
or
xlat
mov
xorl
xchg
sub
and
aas
outsb
or
mov
jno
sti
and
inc
or
arpl
repnz
sbb
int3
lahf
pop
cmc
in
test
cmc
gs
cmp
xchg
dec
scas
rcr
mov
lea
pop
xchg
test
push
dec
popf
and
jo
cmpsb
lret
push
dec
add
je
sub
xchg
xor
mov
in
pop
test
icebp
nop
aas
pop
push
rclb
hlt
xlat
add
jp
sbb
xchg
mov
or
and
fs
mov
mov
inc
aaa
cmpsb
fs
out
push
test
xlat
jmp
mov
jl
or
sbb
inc
add
inc
bound
pushf
scas
push
ljmp
sahf
aas
inc
adc
outsl
xchg
dec
in
cli
mov
dec
xchg
sbb
stos
xchg
jmp
mov
inc
das
fdivrs
stc
sub
std
push
cmp
fiaddl
imul
push
jmp
adc
pop
mov
ja
and
mov
out
in
jmp
push
ret
bound
bound
loope
inc
mov
fsubrl
mov
in
inc
outsb
enter
fisubrl
and
in
aad
jge
mov
cmp
fwait
scas
bound
xor
jno
bound
jp
or
mov
jns
mov
mov
xchg
ja
jb
movsb
and
fisubrs
notl
pop
adc
dec
or
cmpsl
mov
or
cld
rcr
int
movsb
cmp
jnp
in
jbe
icebp
popa
inc
call
bound
cmp
mov
ret
push
adc
jae
inc
inc
out
mov
sahf
std
es
mov
ret
punpckldq
pop
sbbb
pop
pop
jmp
pop
pop
or
or
xor
and
aad
movb
push
sub
jae
xchg
adc
jmp
aas
xor
pop
outsl
in
das
loop
clc
pop
mov
fisubl
inc
pop
jmp
jne
jmp
fmull
sbb
ret
mov
xor
scas
nop
ja
out
jae
mov
insb
and
cmp
repz
sbb
mov
nop
add
sub
mov
pop
lret
push
imul
inc
jnp
add
push
loope
mov
and
shrl
je
inc
in
fs
pusha
add
mov
popa
and
xchg
mov
lea
jbe
jne
fsub
add
add
lock
negb
xchg
jecxz
sub
ljmp
fmuls
into
sahf
inc
dec
in
les
jp
aad
xchg
pop
push
xor
sub
fwait
xor
cmpsl
hlt
aam
or
cmc
jb
push
ljmp
popa
or
mov
mov
and
leave
push
jp
insl
rep
shl
sbb
sbb
pop
ds
lods
or
push
out
sub
js,pn
xor
push
or
movsb
les
mov
sub
push
and
lock
or
clc
call
pop
jo
in
popa
jmp
fmuls
add
fadds
adc
xchg
ja
lret
or
adc
lods
jge
sub
mov
aam
xchg
sbb
jmp
out
inc
clc
shrl
rcrb
inc
lods
stos
ja
push
popa
scas
adcb
push
add
out
cmpsl
xor
mov
lahf
xor
mov
aas
dec
mov
dec
xchg
cs
and
push
mov
sub
les
shrb
jbe
scas
ljmp
clc
adc
imul
mov
loope
fnsave
sub
test
orb
fdivrl
out
out
into
jle
lods
push
loopne
inc
ja
outsb
cmp
adc
xchg
loop
pop
inc
stos
fistl
jnp
sub
rolb
pusha
cmpsb
jmp
inc
stos
cmp
mov
or
sbb
xor
aad
fadd
out
shll
fsubrl
js
stos
sbb
aad
stos
iret
xor
mov
insb
pop
sbb
std
fimull
adc
mov
ljmp
bound
sarl
push
push
call
adc
iret
pop
ds
imul
push
call
mov
dec
xor
xor
divl
dec
lret
stos
xchg
scas
add
test
in
pop
pusha
data16
lds
pop
fs
sbb
jno
jo
and
ja
add
insb
fwait
lahf
cmp
mov
xchg
adc
mov
mov
jb
shll
cld
test
adc
cmp
arpl
stc
fmuls
adc
cmpsl
add
mov
push
push
xchg
inc
pop
cs
push
cli
arpl
das
pop
gs
and
les
into
mov
out
dec
or
push
ror
jb
adc
pop
xchg
imul
xor
push
out
jbe
out
test
in
call
adc
push
out
sub
or
data16
into
out
mov
sub
inc
xchg
adc
ret
sub
dec
movsl
int3
mov
stc
push
out
shrl
sbb
fcompl
mov
adc
popa
test
shrb
in
xchg
xchg
scas
sub
adcl
mov
jl
mov
xchg
xor
dec
scas
imull
mov
mov
cmp
jo
mov
mov
and
mov
daa
insb
pop
inc
xchg
sub
mov
add
xchg
xor
dec
inc
scas
and
iret
cmp
xchg
cli
sub
or
ss
sbb
scas
xchg
or
adc
test
pop
jo
in
stos
sti
sub
dec
pop
movsb
das
cmp
lahf
aad
insl
insl
pop
adc
inc
std
iret
sub
xchg
add
outsb
test
pop
ret
movb
loopne
popa
cmp
das
xchg
inc
shll
lret
aaa
test
out
es
push
xchg
dec
shlb
test
scas
cmp
test
sbb
mov
lock
rolb
push
dec
mov
flds
sbb
xchg
dec
push
lcall
daa
or
jp
adc
daa
cmpsl
movsb
pop
mov
lahf
out
xchg
jg
pop
loopne
aam
sti
fisubrl
popa
adc
jmp
adc
pushf
jb
dec
sub
jl
mov
pop
stos
cmp
inc
mov
js
jmp
ljmp
sbb
lea
push
sbb
pop
jmp
push
inc
mov
imul
sub
cmpsl
test
fwait
ds
push
jp
inc
int
lahf
xor
popa
dec
std
and
cmp
jno
pop
ss
sbb
and
add
es
adc
sub
stos
sarl
add
mov
insb
aas
sahf
mov
lcall
js
adc
adc
mov
push
repz
or
idivl
mov
lahf
addr16
adc
sub
push
test
sbb
cmovns
repnz
adc
xchg
filds
jle
mov
test
das
sbb
insb
jae
insb
nop
jne
sarb
pushl
mov
imul
sar
ss
push
push
mov
int
push
and
cld
lods
es
inc
imul
or
ret
icebp
clc
sahf
out
and
xor
mov
mov
xor
xchg
mov
push
adc
arpl
std
cmpsl
xor
jge
aaa
mov
ficompl
mov
scas
mov
cmc
sbb
clc
mov
iret
and
mov
xchg
sub
and
js
fiaddl
pop
lock
jns
fstps
insb
iret
dec
fiaddl
int3
aad
in
scas
mov
jp
inc
xchg
nop
popa
lea
inc
ljmp
jmp
out
cmp
int3
inc
inc
enter
imul
subb
mov
jbe
aad
and
or
xor
pop
scas
shlb
imul
bound
mov
cs
rcrl
dec
ret
lods
inc
mov
push
xchg
fiadds
jne
cmp
xor
mov
add
and
jne
sbb
jbe
adc
sahf
jb
addb
divb
aad
mov
cmp
fwait
int
movsb
and
cmp
scas
int
xchg
filds
adcb
rcl
mov
cltd
pop
jo
dec
mov
fwait
test
loop
pushf
xor
push
cmp
cmp
push
and
shll
jnp
dec
test
or
cmp
and
cltd
xorl
xor
mov
cmp
xchg
pop
push
inc
cmp
push
mov
pop
test
ret
cmp
cmp
sahf
out
fs
imul
fcoms
mov
cmp
jne
adc
jecxz
or
insl
adc
inc
loop
icebp
into
enter
jne
bound
dec
mov
pop
mov
lcall
or
push
push
push
mov
xchg
imulb
loope
dec
push
ds
sub
mov
add
inc
les
jnp
notl
inc
imul
cmc
add
lock
popl
pop
cmp
mov
std
push
push
icebp
inc
scas
out
push
aam
nop
xchg
jge
inc
cld
pop
test
cmp
adc
aam
dec
mov
jg
mov
ret
cmpb
fildl
ljmp
mov
fimull
sbb
sub
in
out
pushw
lcall
out
out
repz
test
pop
pushf
int3
cmp
pop
xlat
jb
out
mov
inc
imul
leave
loope
cli
mov
and
inc
es
pop
filds
insb
ret
inc
pop
nopl
data16
jge
scas
loopne
mov
cmpl
mov
mov
les
shlb
cmpb
push
aas
or
cmc
add
loope
rol
inc
dec
out
in
mov
mov
imul
iret
in
sbb
es
sub
out
jne
inc
or
push
and
jno
in
pop
cmpsb
lret
adc
inc
sub
add
dec
jge
cwtl
lods
inc
repz
sub
jmp
subb
bound
fmull
pop
les
sbb
test
adcb
sti
sub
pushf
ss
push
mov
cwtl
dec
std
repnz
xor
sarl
fmuls
in
or
push
pop
add
add
ja
imul
push
ljmp
dec
cs
xchg
inc
fdivl
inc
sbb
xchg
or
mov
jg
int3
jb
mov
xchg
cmp
jno
push
stc
mov
loopne
bound
mov
dec
ret
ss
inc
or
mov
bound
sbb
lret
mov
push
xor
sub
mov
insl
cmpsb
mov
sub
jmp
pop
and
in
push
mov
cmpsb
or
mov
xchg
jo
in
and
pushf
adc
scas
adc
mov
xchg
lcall
add
fisttps
ja
cmc
sub
xchg
cmp
fs
or
imul
pusha
mov
xchg
and
mov
jae
lods
in
andb
lea
adc
jp
pop
push
lret
push
sub
aaa
jle
cltd
mov
loope
aam
mov
dec
ret
loop
jmp
lods
ficomps
jl
mov
test
xorb
push
dec
jno
in
mov
cs
repnz
loope
xor
or
inc
jmp
adc
lds
sub
mov
mov
ja
jae
mov
sti
bound
popa
dec
scas
push
daa
enter
jne
js
test
daa
fs
int
pop
dec
test
movsl
daa
jg
stc
mov
inc
or
pop
or
mov
cli
push
adc
fnstsw
int3
ds
iret
dec
add
mov
jbe
imul
sbb
popf
dec
mov
add
jle
push
popf
sub
sbb
fdiv
mov
fcomps
sub
add
push
arpl
cmpsl
and
mov
insb
lahf
add
scas
pop
fs
repz
mov
mov
mov
jl
insl
ret
inc
pop
cwtl
stos
cmpsb
mov
fildl
dec
outsl
pushl
stos
push
ficompl
cwtl
xor
out
leave
push
jbe
fsubs
data16
in
inc
sbb
dec
es
sbb
add
xor
mov
inc
jnp
test
inc
mov
adc
sub
enter
xor
or
cmp
adc
frstor
js
xor
mov
sub
add
jno
icebp
scas
stos
xor
out
imul
dec
pop
mov
jmp
into
daa
lcall
std
push
push
shlb
sbbb
or
pop
mulb
loope
popf
mov
mov
push
popf
push
mov
out
and
cmp
in
sub
push
inc
sub
stos
in
mov
popf
mov
sahf
nop
pop
and
mov
xor
testl
sbb
sbb
cmp
jne
jmp
jae
cmc
lock
mov
dec
push
xor
inc
jb
cmp
arpl
loop
and
dec
shr
sub
bound
fsubl
sub
out
xchg
cld
xor
ljmp
push
je
lds
xlat
add
mov
arpl
iret
mov
adc
jp
dec
pop
xchg
and
pushf
in
mov
mov
adc
inc
bound
mov
addr16
or
add
and
cltd
dec
and
jle
out
push
mov
lods
push
jb
xchg
cltd
xchg
lahf
outsl
adc
mov
ss
outsb
adc
gs
xlat
pop
pop
xchg
xchg
xor
or
push
push
mov
jno
out
repz
push
push
leave
nop
cltd
shll
ss
adc
popa
cmp
cld
push
mov
push
xor
and
in
fwait
pop
mov
mov
fnstenv
mov
inc
scas
add
adc
cmp
mov
xchg
fcomps
mov
lahf
add
pop
mov
insb
insb
fists
call
outsb
dec
leave
fimuls
lret
mov
loop
jmp
pop
dec
cmpsb
lods
negl
pop
jg
jecxz
fdiv
cmp
out
or
lods
and
or
ret
lods
sti
dec
mov
sbb
and
ljmp
mov
and
jl
int3
mov
loopne
pusha
cmp
jb
xchg
arpl
cs
daa
test
mov
sub
xorl
lret
cmp
std
mov
in
outsl
shrb
aas
push
enter
scas
push
or
and
ret
lods
ss
int
into
jmp
popa
repnz
loop
xchg
mov
fisubrs
and
test
inc
xchg
int3
enter
dec
das
jecxz
xlat
aas
adc
xor
inc
enter
subl
fildll
test
dec
mov
sbb
sub
aas
add
xorl
sbb
and
sub
dec
nop
jns
pop
leave
cmp
sbb
je
lahf
mov
pop
out
push
mov
sbb
leave
into
fs
mov
xor
dec
repz
popa
sbb
and
cli
jb
xchg
out
xor
push
in
aam
movsb
adc
sub
cmp
std
loopne
imul
scas
or
repz
in
mov
jge
pop
stos
cs
adc
adc
orb
fdivl
jge
sub
fwait
stos
cmpsl
scas
fs
lods
mov
adcl
cli
xchg
in
stos
ljmp
jns
imul
adc
add
mov
dec
mov
scas
mov
mov
in
loop
mov
pop
adc
jb
outsb
jne
testl
xchg
test
xor
hlt
cmp
addl
pop
xchg
sub
cs
insl
je
ljmp
in
fists
xchg
mov
cwtl
and
pop
imul
sub
jp
pop
lcall
and
or
xlat
repnz
jne
cmp
imul
inc
sti
aas
push
cmpsb
std
fdivl
shll
push
stos
test
clc
pop
adcl
push
fsubrs
mov
ss
repz
jmp
mov
cmp
jb
jp
movsl
adc
xchg
fimuls
fs
xor
ljmp
mov
lock
jne
or
adc
xchg
lret
stos
hlt
adc
adc
iret
sub
mov
sbb
inc
aas
cmp
push
movsb
push
add
fsts
ljmp
lahf
push
cld
mov
lea
or
mov
or
clc
dec
sub
popa
adc
xchg
or
mov
jnp
insb
or
ss
dec
push
mov
fildll
sbbl
out
cmc
mov
xchg
addb
repnz
xor
int
dec
insl
out
stos
cwtl
stos
lcall
jle
add
add
test
lcall
mov
in
cmp
xchg
gs
push
arpl
add
add
and
in
sub
ja
addr16
dec
sub
jne
mov
out
or
xlat
sub
xchg
or
mov
ret
cmp
mov
mov
mov
stc
mov
add
scas
cmpb
lods
js
mov
mov
loope
outsb
push
sub
fiadds
adc
js
mov
loop
mov
mov
or
jg
lret
insb
push
push
jnp
outsb
test
nop
ja
jbe
ja
push
push
or
into
push
mov
std
aas
pop
cwtl
test
mov
fwait
lods
lock
pop
jae
jae
bound
pop
clc
clc
mov
hlt
lods
sub
mov
lahf
stos
cmp
adc
in
pop
pop
lods
popa
jp
push
arpl
dec
ret
inc
mov
icebp
test
orb
sbb
and
mov
push
pop
leave
es
adc
int3
add
dec
sub
aaa
lock
adc
sub
or
rcrl
push
adc
sbb
adc
sub
pop
imul
call
and
pop
ljmp
pop
sti
pop
fiaddl
mov
mov
pop
mov
movsb
or
dec
push
push
mov
sbb
pop
mov
sbb
lds
movb
jl
and
clc
adc
fs
xor
push
mov
adc
or
call
mov
inc
movsb
out
mov
and
and
cli
and
movsl
xchg
xlat
and
ds
cmp
cwtl
aam
cld
dec
lock
add
aam
jae
pop
scas
adc
lods
test
mov
hlt
in
push
dec
mov
jl
xor
xor
or
repz
outsl
jb
dec
jne
and
add
jg
inc
xchg
or
mov
mov
dec
jnp
outsb
pop
faddl
fmul
push
sub
mov
jno
aad
inc
mov
push
jae
dec
mov
daa
pop
cmp
out
jae
inc
mov
mov
jne
jge
cli
fimull
pop
add
cltd
jo
clc
rorb
jo
divl
mov
pop
xchg
jno
out
and
dec
adc
cmp
inc
mov
cmp
mov
pushl
jmp
push
push
out
jecxz
xchg
arpl
mov
dec
arpl
orb
xchg
sub
es
sbb
add
outsl
adc
mov
pop
arpl
aaa
add
fcoml
jmp
scas
out
ja
clc
mov
lods
fcom
push
xchg
jmp
or
jp
mov
push
jp
xor
jge
jecxz
push
repz
aam
lea
fnstsw
frstor
push
jg
adc
int3
dec
xchg
xor
pusha
cmpsl
cs
dec
adc
pop
xor
les
pop
loopne
lahf
rcll
popa
xchg
mov
mov
pop
mov
stos
idivl
xchg
jmp
push
xor
outsb
scas
dec
je
mov
stc
insb
shr
lds
lds
cmpsl
lods
push
sbb
jl
dec
mov
mov
movsl
sbb
neg
rorl
fs
cli
and
out
cmp
pop
fstl
addr16
push
je
inc
cli
loop
lcall
les
push
mov
dec
int3
out
popa
stos
jbe
adc
mov
in
sub
add
or
cli
xchg
out
xchg
shr
sbb
stos
xor
ss
fsubrl
dec
int
inc
mov
adc
loopne
mov
sbb
jns
xor
add
mov
mov
sbb
lods
inc
fnstcw
popa
mov
mov
or
cs
out
jae
outsl
push
mov
fdivs
mov
bound
ds
data16
add
inc
jg
jp
cmp
add
mov
aad
xor
add
sahf
pop
fnstsw
aaa
aad
mov
xchg
rol
stc
mov
mov
fwait
push
scas
xchg
out
insl
imul
mov
aas
jg
jl
in
push
das
mov
gs
inc
scas
dec
lds
cmp
add
int
push
icebp
lods
popa
bound
je
mov
xchg
xchg
mov
aaa
nop
add
aaa
pop
pop
stc
sarb
pop
xchg
dec
mov
call
hlt
arpl
xchg
out
mov
mov
loope
jbe
je
out
aaa
rorb
mov
fdivrl
insb
stc
xchg
mov
lcall
mov
adc
inc
arpl
jl
fidivl
pusha
pop
and
mov
icebp
add
std
rolb
mov
dec
push
xchg
mov
adc
jb
sub
dec
lds
xchg
movsb
imul
bound
xor
xchg
cwtl
jecxz
push
lods
arpl
push
dec
fwait
cmpsl
xor
shrl
pushf
fcompl
stc
xchg
add
mov
mov
insl
mov
xchg
repz
movsb
or
shll
pop
or
lds
js
fistl
sar
dec
inc
test
repnz
iret
and
xor
and
mov
inc
sbb
or
xor
jns
dec
xchg
in
lahf
mov
addl
or
push
sub
inc
add
inc
push
mov
adc
jae
mov
arpl
loope
aaa
dec
shr
fnsave
fdivs
and
outsl
cmp
outsb
push
push
inc
and
push
insb
rcrl
cmp
mov
mov
leave
add
ljmp
lret
push
outsb
jmp
jecxz
jns
xor
add
sub
popf
loope
cmpsl
mov
pop
pop
adcb
jbe
jb
das
aam
loopne
out
in
pop
repz
stos
rclb
and
push
pushf
out
fwait
repnz
and
bound
cmp
mov
imul
xor
lods
sti
pop
xchg
jo
push
fwait
imul
je
test
xlat
int
sbb
mov
sub
cmp
dec
and
mov
xchg
aam
stos
cmp
int3
das
dec
subl
and
sub
add
or
mov
outsl
mov
cmc
push
in
jl
xchg
sbb
mov
repz
popf
int3
jnp
bnd
sti
dec
cmp
mov
inc
add
movsl
push
mov
shlb
sbb
inc
jge
arpl
push
push
movsb
push
xchg
and
out
xchg
mov
mov
push
nop
xlat
aas
adc
cmp
lods
cld
sti
mov
in
mov
cli
mov
xor
aas
push
xor
jne
outsl
inc
mov
fildll
and
jae
xor
jb
cmp
and
mov
jp
inc
mov
adc
lods
loop
fdivrl
faddl
xchg
mov
jmp
cwtl
pop
in
es
cmp
xlat
pop
cwtl
cmpsb
adc
adc
das
sub
push
les
xchg
xlat
dec
dec
movsb
fwait
pop
cmp
mov
cmpsl
idivl
mov
test
xchg
lock
std
pop
sbb
mov
push
or
mov
movsb
mov
leave
fcmovnbe
push
dec
xorb
mov
lods
inc
or
xchg
jl
inc
mov
ljmp
mov
insl
scas
stos
scas
jb
ret
jo
idiv
push
imul
shl
and
icebp
dec
in
stos
leave
or
aad
pushf
vpackuswb
adc
mov
mov
xchg
adc
mov
adc
ss
test
out
xor
push
mov
xor
fisubrl
fimuls
mov
and
jg
popf
lret
xchg
pop
je
ret
in
cmpsb
jle
lret
out
xor
movsb
sub
rolb
in
pop
cli
stos
inc
ss
emms
out
fdivs
pushf
adc
data16
ret
jg
mov
gs
pop
jae
jbe
push
arpl
out
addb
out
xchg
imul
mov
mov
imul
inc
sbb
and
jmp
jg
mov
jno
cli
arpl
xchg
jae
jle
mov
mov
cltd
mov
cmpsl
fcoml
dec
mov
dec
les
test
stc
sub
or
stc
stos
ret
mov
jb
popa
mov
rorb
loop
sub
adc
aaa
sbb
cwtl
add
testb
test
daa
push
imull
xchg
pop
xor
fstl
gs
pop
xor
push
adc
mov
fmuls
mov
les
or
mov
mov
pop
lret
xchg
cmp
dec
pop
add
push
and
and
inc
xchg
cld
pop
cli
and
pusha
dec
cmpsb
cmp
sbb
jnp
insl
mov
adc
add
pop
dec
pop
ja
sbb
xlat
push
mov
pop
in
xchg
aaa
fsin
cmpl
cmpsl
adc
repnz
enter
out
lock
cli
dec
enter
lds
jnp
sbb
xchg
sti
pop
fimuls
inc
jmp
mov
js
fnclex
in
ret
mov
gs
inc
mov
jp
or
dec
inc
cmp
inc
dec
cmp
inc
ds
cmp
enter
inc
pop
sarb
inc
divl
int3
xor
iret
and
pop
jge
pop
jbe
and
ljmp
mov
sahf
gs
jecxz
popa
push
mov
and
inc
aad
cli
jb
adc
ja
popf
out
push
xorl
or
xchg
mov
jmp
popa
dec
inc
or
insl
cmp
insb
push
xor
jbe
sub
pop
pop
je
jle
mov
add
mov
arpl
dec
js
mov
maxps
aam
pushf
jne
and
jae
dec
movsb
mov
mov
mov
mov
aad
gs
in
mov
fwait
add
stos
incl
adc
int
gs
push
sbb
test
insb
mov
out
cmpsl
push
jle
mov
cmc
adc
and
push
scas
iret
not
hlt
sbb
adc
sbb
jb
loop
adc
notl
ss
cmp
orl
stos
icebp
mov
mov
xor
pop
adc
jmp
push
int3
xchg
out
movsb
and
jo
mov
and
jbe
popa
sahf
pop
gs
jle
inc
pop
pop
icebp
decl
mov
daa
fimuls
pop
in
sarl
push
mov
xchg
add
in
mov
pop
movsb
movsb
loopne
dec
out
lret
les
fwait
xor
sbb
jnp
inc
pop
sub
pop
jno
push
pusha
pop
and
out
push
inc
push
out
in
pop
in
fcmovu
adc
push
sub
subl
mov
inc
mov
cmp
mov
dec
pop
hlt
push
div
call
jbe
cmpsl
popf
sub
sub
scas
lret
orb
cmp
out
mov
jl
sub
or
movsl
jl
mov
xor
insb
rcrb
pop
mov
cmp
cmp
add
adc
push
jnp
loope
fcoml
mov
mov
je
std
rcll
lcall
mov
les
mov
scas
or
repz
mov
inc
pop
mov
jp
rcll
xor
xor
and
xchg
lock
lods
movsl
sahf
adc
jecxz
or
ja
sub
xchg
lods
cld
shlb
mov
push
sbbb
into
sahf
xchg
popa
sub
or
jo
or
out
xchg
xchg
repz
popf
push
dec
cs
shlb
clc
lods
push
pop
cmp
lds
ja
jnp
movsb
ds
popa
andl
inc
test
xchg
pop
cmp
les
and
test
dec
push
dec
mov
pop
mov
imul
lock
cmc
adc
sub
dec
ds
inc
adc
scas
mov
pushl
lods
inc
or
push
test
cld
and
bnd
pop
pop
mov
jae
ljmp
std
arpl
jle
outsl
xor
fimuls
cmp
sti
aaa
xor
rcl
and
testl
and
push
pop
mov
cmp
jns
dec
lock
decb
stos
sbb
inc
sbb
dec
loope
es
movsb
sub
jae
and
subl
subl
jne
xchg
jmp
leave
and
fnstsw
cmp
test
inc
add
test
lret
in
data16
sbb
in
test
lret
fbstp
push
fcom
xchg
repz
icebp
inc
mov
add
fwait
jne
mov
addr16
xchg
loope
cli
add
pop
xchg
add
mov
das
mov
jle
mov
push
js
dec
jno
test
in
push
in
inc
and
aam
filds
jg
aaa
nop
mov
and
and
aas
and
dec
cwtl
shlb
dec
in
mov
arpl
test
jp
fwait
xchg
sarl
idiv
fbld
mov
fists
daa
in
idivb
add
xchg
mov
loope
test
movsb
sbb
iret
fisttpll
cmp
dec
push
mov
or
int3
movsb
inc
fmul
mov
outsl
xor
cs
fcomps
ficoml
and
mov
notl
fstpl
hlt
mov
mov
inc
mov
sarb
ror
adc
push
fs
xchg
shr
mov
dec
push
sub
and
adc
shl
or
aas
mov
jae
mov
sub
pop
sbb
ficomps
mov
bound
int
jnp
jae
sahf
sub
mov
popa
movsl
hlt
add
stc
add
cwtl
or
add
mov
xor
test
out
xchg
fneni(8087
sahf
sbbb
pop
dec
fsubrs
cmp
push
xorl
mov
dec
test
pop
pop
fcom
and
enter
orb
fcom
push
jae
pushf
jmp
mov
cli
jl
aaa
adc
sbb
push
jbe
sub
shrl
lods
push
ror
stos
lods
cmp
cmp
insl
jbe
jbe
inc
cmp
mov
push
ret
jmp
mov
aam
push
cli
aam
dec
mov
imul
test
es
and
pushf
int
decl
inc
les
lock
push
jmp
or
ror
int
cmp
dec
in
out
imul
add
ror
push
stos
test
pop
scas
xor
rcll
fs
adc
mov
fldt
addl
pusha
fisubrl
sbb
and
cs
adc
cmp
and
adc
or
ljmp
sub
in
mov
xor
push
addr16
pop
push
cli
fcompl
in
sub
aas
jb
adc
sbb
or
cwtl
mov
cmp
pop
test
mov
gs
test
stos
and
and
out
movsb
inc
int3
adcb
jecxz
test
mov
jns
lods
sbb
stos
push
testl
inc
stos
lods
cmc
pop
js,pt
insl
dec
add
xor
xor
gs
mov
jl
enter
test
pop
fistpl
sti
mov
imul
out
sbbl
fcoml
xor
push
ljmp
outsl
cmp
jecxz
mov
mov
mov
pop
ror
xchg
rcrb
outsb
loop
mov
in
add
xor
pop
dec
fstpt
aad
cmp
sub
push
dec
mov
mov
push
fdivrl
hlt
insl
rcr
jge
mov
arpl
mov
jg
shr
jl
push
popa
ljmp
fdivr
rcll
mov
cltd
push
fsave
or
adcl
push
ret
cltd
stos
or
pusha
and
data16
repz
jns
aas
jns
dec
lahf
lea
int3
out
subl
fdivl
in
icebp
pop
jmp
aad
not
cltd
sbb
pop
mov
testl
push
mov
or
in
fstpl
xchg
mov
out
fildll
add
sahf
das
inc
xchg
inc
jo
add
mov
loope
xchg
sbb
mov
mov
dec
mov
pop
sarl
ja
push
push
repz
jne
andb
aad
add
in
add
movsl
cmp
out
pop
popf
ret
lea
imul
loope
andb
out
daa
and
pop
flds
inc
dec
stc
jl
insb
mov
jne
lods
jp
shl
xchg
lcall
sbbl
xor
add
dec
insl
roll
outsb
sbb
or
or
push
pop
cmp
insl
dec
aas
outsl
sbb
dec
pop
in
jae
roll
push
xchg
push
les
test
js
cmp
filds
shll
inc
dec
mov
inc
jbe
sbb
push
lcall
ret
cmovg
shrl
and
sarl
je
dec
mov
dec
pop
fistpll
xchg
fwait
pop
mov
popa
add
int3
setge
push
inc
popf
outsl
mov
push
icebp
std
inc
adc
inc
mov
mov
fisubrs
or
inc
ds
mov
fmul
xchg
mov
sub
or
shl
or
or
bound
and
pop
lahf
loope
push
ljmp
daa
jl
or
das
and
mov
insb
loopne
inc
stos
pop
or
jge
in
mov
and
pshufw
mov
insl
push
sbb
adc
pop
jbe
add
idivl
es
inc
mov
dec
mov
add
arpl
movsb
test
xor
sub
dec
jnp
testb
rol
xchg
add
sbb
out
inc
sub
sub
jl
jp
dec
add
mov
inc
arpl
sbb
push
inc
mov
stos
and
pop
out
cmc
xchg
inc
insb
test
dec
jmp
aas
inc
push
cmc
add
mov
add
dec
mov
ds
rolb
imul
sbb
jo
pop
pop
inc
mov
ljmp
or
stc
sub
bound
push
cmp
insb
and
and
fnsave
inc
sub
jle
jg
call
es
sbb
mov
pop
out
scas
fisttps
xchg
ja
jg
lds
movsl
dec
push
add
mov
rol
push
xor
xor
test
jmp
aaa
dec
xchg
pop
loop
mov
mov
cmp
mov
or
xchg
stos
inc
mov
shlb
push
cs
jg
fnstsw
and
aam
lods
xor
cmp
xchg
xor
dec
sub
in
sub
enter
and
gs
movsl
in
cmpsl
sub
inc
pop
add
push
dec
dec
pop
dec
shl
int
in
pop
mov
imull
mov
hlt
xchg
xor
xor
inc
pop
and
add
mov
or
cs
loopne
push
shll
test
cmpsb
mov
pop
xor
cmp
clc
inc
das
push
jp
and
into
lock
pop
cli
sbb
out
xchg
je
stos
jg
mov
sub
int3
sub
enter
push
sarb
insb
sub
sbb
fucom
pushf
or
adc
scas
inc
and
dec
mov
xor
sahf
push
lcall
leave
cmp
mov
and
stc
push
movsl
or
push
sbb
inc
fsubrs
inc
test
nop
adcl
es
push
pusha
cmp
mov
sahf
add
dec
mov
cmp
jnp,pt
or
insb
lret
inc
xchg
xchg
scas
sub
mov
xchg
fadds
jnp
cltd
inc
inc
adc
icebp
repz
dec
sarb
mov
jns
pop
in
add
push
iret
mov
imul
in
loope
fmul
sub
sub
cmpsb
xchg
dec
inc
in
sub
inc
testl
addr16
and
in
mov
cmp
cmp
stos
es
sub
cmp
inc
rclb
imul
or
xor
aas
das
hlt
enter
dec
cli
lods
mov
pop
stc
xlat
movsl
inc
into
pop
cmp
push
push
xchg
jo
jns,pn
sub
roll
gs
in
fcom
push
ja
push
push
mov
or
push
in
out
lds
dec
aad
push
xchg
sbb
insl
sub
xlat
sbb
push
add
or
mov
imul
hlt
mov
test
out
and
das
pop
aas
xor
add
dec
std
jge
or
ja
sti
sbb
sbb
fidivs
sub
adc
lcall
xlat
xor
push
ficoml
inc
mov
dec
lret
adc
in
int3
inc
xchg
xchg
cmpsb
inc
inc
jbe
fisttps
movsb
fistl
fcom
xchg
dec
jno
sbb
subl
ret
cwtl
lahf
test
fidivrs
push
sbb
test
cmp
adc
or
pop
push
mov
mov
push
je
jg
pop
adc
pop
data16
stos
inc
and
stc
gs
lods
movsl
cld
mov
in
clc
pushf
jl
push
or
jp
mov
leave
enter
inc
mov
and
ljmp
cmp
xchg
mov
push
cli
pop
push
dec
cli
jbe
cbtw
jo
insb
dec
sbb
cwtl
cld
jmp
ret
mov
test
pushf
push
enter
fidivrl
imul
xchg
dec
cld
mov
pop
in
sbb
jnp
mov
iret
mov
jns
mov
cmpsl
shlb
daa
pusha
add
nop
push
jl
loope
fsubs
adc
jecxz
sbb
xor
adc
fisubrl
push
adc
les
xchg
in
cmp
out
mov
ror
adc
push
dec
fldcw
rcrb
mov
ja
mov
pop
jge
add
xchg
shr
push
add
repnz
sbb
inc
xor
std
insb
push
pusha
outsb
cmp
je
jmp
fildll
jo
stc
cltd
sar
pop
jns
scas
scas
insb
out
pop
mov
lahf
jp
dec
or
cmp
adc
movsb
lcall
push
addr16
fiadds
not
add
pop
es
cmpl
sub
in
adc
dec
arpl
movsl
cld
jb
pop
mov
addr16
ret
lret
sbb
cmpsb
pop
add
ret
jae
pop
pop
outsb
icebp
out
sbb
dec
rclb
in
add
fistl
shl
xchg
dec
and
or
cmp
sar
push
outsb
push
popf
xchg
iret
mov
inc
pop
and
pop
in
adc
stos
fstpt
nop
mov
pop
xor
xor
int
scas
sub
cmp
push
lret
jp
and
stos
cs
or
test
cmp
pop
dec
cmp
push
sbb
lods
leave
movsl
in
add
adc
mov
fbstp
cmc
lcall
jae
push
cmp
jmp
mov
push
pushf
out
dec
inc
in
cmp
outsl
mov
cmc
mov
push
jle
add
ds
ja
mov
pop
mov
out
push
int
cmp
jg
popa
adc
in
ds
jae
bound
ljmp
mov
jo
xor
fildl
inc
sarb
int3
fstpt
loope
sbbb
fdivrs
hlt
aaa
pop
jp
mov
push
lcall
ficomps
sub
aas
mov
out
dec
pop
pop
lock
xlat
shlb
cmp
andl
mov
fadds
fidivl
loopne
mov
not
or
mov
aaa
push
xor
mov
adc
test
pop
jae
mov
jne
ds
push
movsl
loop
pop
insl
sbb
lock
or
pushf
add
jo
mov
mov
ja
insl
fstpt
mov
cmpsl
xor
icebp
xchg
push
ficoms
push
add
and
cmc
movsl
in
sbb
dec
aaa
stos
hlt
dec
inc
lret
cwtl
rcll
add
cmpb
jne
adc
sbb
xor
ficoml
lret
es
shll
ficoml
lock
push
bound
mov
cli
or
add
jns
pop
push
aam
in
pop
jp
dec
movsl
xchg
mov
daa
push
dec
sbb
movsl
add
stc
xchg
pop
push
pop
in
popf
sbb
jo
and
add
insb
xchg
sahf
sbb
psubd
je
arpl
xchg
mov
and
popf
sbb
aaa
pop
movsl
xor
mov
sub
adc
jmp
out
lods
mov
mov
js
aad
xor
xchg
iret
inc
test
jecxz
xchg
xor
adc
dec
cmp
orl
mov
pop
add
and
jbe
xchg
lahf
sub
pop
insb
mov
jae
push
adc
fldl
mov
test
mov
out
jp
ret
sbb
cli
add
imul
sbb
outsl
mov
jg
iret
push
loope
jl
imul
inc
sbb
insw
dec
and
jl
xorl
aas
pop
jns
push
add
mov
mov
push
loope
js
pop
mov
scas
jo
insl
xor
stc
imul
lret
pop
cmpsl
xlat
push
ffreep
jno
out
es
in
push
rorl
fcompl
mulb
add
mov
lret
jmp
outsb
mov
lcall
jle
hlt
insb
cmc
mov
push
sbb
xlat
aam
jg
xor
xchg
pop
push
dec
dec
ret
pop
fisubs
push
xor
rclb
js
lods
aad
mov
pop
js
ret
stos
out
dec
decb
cmp
test
cmpsl
aam
stos
push
cmp
adc
add
cwtl
pop
roll
jmp
and
sub
xchg
jecxz
push
idivb
daa
call
push
xor
lahf
ljmp
out
xor
push
sbb
out
add
jae
inc
insl
or
mov
popf
call
ds
imul
int3
mov
aaa
int3
rolb
lret
cmp
add
jae
sbb
and
add
inc
lods
dec
lods
negb
adc
ret
add
aas
fnstenv
jmp
pop
mov
dec
pop
int
cs
pusha
mov
pushl
dec
sbb
inc
mov
scas
jg
data16
lods
mov
jb
cmp
cmp
rcrl
and
dec
add
shlb
shlb
jbe
jno
xchg
gs
or
jae
cmp
addr16
pop
xchg
adc
inc
outsb
pop
imull
push
xchg
inc
jnp
push
iret
popf
test
pop
mov
js
inc
std
mov
mov
popf
mov
lock
stc
ret
into
jae
cld
in
xor
xchg
mov
xor
and
loope
dec
jge
pusha
or
sub
jl
xchg
xchg
es
loope
loopne
add
mov
popf
out
inc
movsl
or
int3
cwtl
sbb
sub
daa
int
nop
in
fstpl
mov
sar
das
divb
imul
sub
mov
lahf
rclb
xlat
jle
std
sbb
cwtl
or
jb
jns
mov
arpl
rcr
movsl
adc
push
dec
add
adc
ret
testb
sub
cmp
icebp
fisubl
int
xchg
scas
sbb
es
add
push
mov
mov
ja
push
jae
mov
pop
jmp
mov
and
sub
sti
xlat
fnstenv
and
cmp
int
sti
sbb
in
movsb
mov
sub
lahf
pop
mov
dec
out
xor
stos
sti
or
in
ret
je
mov
adc
pop
add
pop
xchg
jns
into
lret
jne
or
pop
push
cli
pop
adc
lea
push
xor
push
lds
leave
push
add
out
inc
jns
sub
iret
xor
xchg
mov
xor
mov
faddl
bound
gs
movsl
call
imul
lods
adc
cltd
push
push
subl
sub
inc
jo
stos
sub
sar
xor
xchg
mov
and
js
data16
dec
mov
dec
or
fstl
int
xor
int
in
and
adc
es
push
stc
int3
lds
mov
lcall
idivl
clc
in
pop
xchg
out
pcmpeqw
test
mov
scas
xor
jae
or
js
dec
add
ss
cwtl
insb
mov
sub
imul
sbb
cmp
jp
cmp
pushf
cmp
js
cltd
adc
aad
add
rcrl
xchg
mov
pop
sub
outsl
xchg
movsb
inc
pop
pop
in
xor
shlb
mov
add
test
in
jns
mov
sti
cmp
jnp
dec
cmp
cltd
cmc
lret
mov
lock
lock
xchg
mov
push
subl
sub
mov
and
sahf
pushf
cwtl
nop
pusha
jmp
and
fnstsw
mov
cmpl
xor
add
sar
cmp
fsubrl
mul
pop
out
scas
scas
incl
push
cmp
mov
jmp
sbb
rcl
lock
xor
in
fwait
xchg
lock
dec
fnop
rcrb
scas
idivl
in
push
xchg
xchg
hlt
add
cmpsb
or
leave
jo
fmull
sbb
xchg
out
sahf
cmpsb
pop
mov
cmp
push
dec
push
mov
dec
cs
cltd
fisubl
add
push
xchg
sub
push
add
into
jp
adc
mov
adc
out
test
fnsave
in
cs
jne
popfw
test
mov
iret
xor
mov
adc
leave
loop
jo
out
lahf
cltd
adc
and
mov
mov
push
in
lods
out
inc
into
adc
mov
aam
and
std
push
xor
fsubp
mov
push
xor
sub
or
mov
pop
mov
incb
hlt
pop
jecxz
add
in
in
sbb
mov
jmp
sbb
iret
adc
imul
sbb
clc
insb
fisttpll
mov
test
dec
dec
cmc
xlat
xchg
or
out
lea
sbb
lcall
inc
fiadds
stos
lea
rcl
test
pop
pop
notb
xchg
push
sub
sbb
mov
fs
xor
repnz
int3
call
or
mov
pop
push
jnp
adc
lea
in
mov
test
or
int
mov
sub
and
gs
orl
test
and
repnz
ss
faddp
cmpsb
xchg
pusha
imul
test
dec
mul
enter
mov
mov
mov
dec
fdivl
scas
adc
lods
dec
sbb
inc
fnsave
or
out
mov
push
addl
shrb
cmp
repnz
push
ja
int3
mov
mov
push
rep
mov
dec
lods
sbb
fcmove
jge
out
mov
or
jnp
adc
xchg
jnp
push
or
movsb
ja
dec
ret
pop
fwait
xchg
imul
jnp
aad
cmpsb
lret
push
test
add
mov
xchg
add
lds
jge
cld
mov
fistpl
imulb
and
add
inc
or
add
cld
cs
or
nop
push
jle
stos
cmc
iret
push
mov
scas
xlat
iret
and
loope
add
add
in
loop
int
mov
fbld
rcr
mov
dec
ud1
enter
lret
sub
mov
mov
sahf
lods
loope
jbe
jnp
inc
leave
sbb
int
jmp
nop
mov
scas
mov
push
test
push
daa
add
negl
inc
ficoml
inc
loop
xchg
dec
roll
cmp
dec
pushf
rcrl
shrb
sbb
sub
push
dec
dec
cmpsl
leave
mov
rcl
mov
or
pop
jge
jmp
rcl
nop
incb
push
popa
enter
pushf
dec
and
popf
inc
xor
lods
xchg
inc
pushf
and
or
mov
nop
rorl
adc
dec
leave
clc
loope
add
sub
mov
rolb
add
test
cmp
loop
ret
out
mov
add
jecxz
xlat
divb
jae
xchg
stos
pop
mov
mov
jp
push
cs
jb
test
inc
xchg
call
mov
cmp
inc
mov
push
fxch
in
cmp
cmp
xchg
adc
and
add
fmull
je
mov
scas
and
cld
xchg
rcrl
lds
add
jp
cmp
adc
or
xor
pop
fiaddl
orb
fimuls
push
movsl
adc
push
mov
mov
jp
les
mov
sbb
push
fwait
pop
stos
inc
data16
cld
loope
mov
sbb
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
jmp
sti
idivl
lret
dec
call
mov
mov
call
lret
mov
call
mov
enter
out
lea
aas
enter
pop
mov
sbb
jl
and
inc
scas
cmp
push
dec
call
shr
out
or
cmp
xchg
addb
or
mov
mov
out
mov
enter
out
lea
pop
inc
stos
pcmpeqw
stc
add
ret
gs
cli
call
cmc
xor
pop
pop
andb
fsubp
mov
jbe
stos
sub
pcmpeqw
mov
ja
out
jne
test
les
shlb
int3
xchg
xor
lods
inc
loop
pop
xor
and
pop
inc
call
mov
enter
out
outsb
aad
outsb
mov
call
mov
and
call
mov
enter
out
lea
jle
dec
clc
mul
mov
mov
call
mov
dec
inc
call
aaa
mov
enter
mull
mov
clc
mul
mov
mov
call
mov
add
call
inc
mov
mov
call
mov
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
dec
lods
xor
mul
mov
mov
shl
out
mov
or
out
lea
adc
mov
mov
call
mov
outsb
mov
call
mov
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lea
aas
enter
out
lret
outsb
mov
fmuls
inc
js
in
jno
aas
loopne
and
aaa
jmp
or
mov
and
push
push
cwtl
push
jo
pop
lret
add
or
adc
stc
stos
fwait
popa
pop
add
fdivs
das
jp
pop
mov
test
xchg
enter
cmp
mov
inc
mov
xchg
nop
inc
nop
add
sub
ljmp
pushf
mov
mov
aas
and
pop
ds
lock
stos
jmp
jmp
stos
and
gs
inc
lods
icebp
dec
sbb
popa
xor
fdivp
ret
jns
pop
or
inc
jle
inc
xor
dec
push
int3
mov
mov
cmp
into
ss
jbe
das
lods
mov
mov
xchg
push
int
push
insl
pop
popa
js
mov
or
enter
xchg
fildll
xor
add
jae
imul
xchg
pop
or
lds
stc
cmpsl
xchg
mov
jbe
cmpsl
fcmove
push
aas
mov
pop
mov
jno
adc
jb
into
lods
push
push
sbb
out
jb
mov
popf
sbb
dec
mov
and
stc
jmp
cwtl
iret
and
mov
xor
fsubl
test
add
fadds
add
cld
rol
mov
jnp
jl
adc
inc
xchg
call
cmp
int
lods
jno
call
push
adc
xor
cmp
insl
xor
push
je
adc
insl
pop
sub
ljmp
loop
push
sbb
jnp
xor
enter
push
loop
cmp
sub
in
cli
mov
xor
cmp
rep
fidivs
fwait
jp
mov
xchg
mov
out
inc
aaa
adc
fisttpl
jno
xor
jmp
cmpsl
outsl
bound
repnz
shrl
dec
out
pop
xchg
jo
mov
cld
mov
test
jb
scas
push
mov
push
and
jne
or
sub
jno
xchg
cmp
scas
push
or
loop
or
arpl
mov
cmp
sti
xchg
jg
scas
push
fidivs
dec
daa
jl
push
or
sbb
mov
mov
hlt
aam
pop
aam
lret
bound
pushf
inc
ret
mov
lahf
movsb
jo
sti
nop
xor
in
cmp
dec
fs
shll
inc
test
jae
mov
pop
fsts
add
xchg
imul
jle
sbb
pop
cmc
sbb
inc
jl
mov
es
jg
out
pop
clc
push
xchg
int3
sub
cmp
aas
cmp
arpl
inc
push
je
adc
mov
mov
adc
in
jno
sti
add
mov
and
ja
lret
aam
shr
fimull
daa
gs
mov
je
mov
push
dec
inc
sbb
mov
incl
movl
or
leave
nop
push
in
mov
sti
dec
bound
out
cmp
jne
push
movsl
hlt
sub
pop
push
daa
jo
arpl
sub
std
sub
push
cli
sub
into
and
sub
jbe
or
mov
ds
popa
sbb
popa
shl
and
mov
push
jns
out
xor
jecxz
out
sub
je
mov
xor
aam
call
mov
pusha
sbbl
stos
jb
sbb
cs
jbe
fcompl
mov
inc
or
cwtl
es
fwait
mov
push
fwait
xchg
sbb
sbb
cmp
mov
xchg
mov
adc
push
fwait
push
out
inc
mov
movsl
mov
push
push
and
xchg
lahf
ds
push
push
mov
arpl
hlt
xor
xlat
mov
test
xchg
test
xchg
sbb
js
sub
push
inc
inc
cmpsb
out
jp
cld
push
adc
js
jns
stos
loopne
jp
cmp
mov
in
pushf
scas
dec
adc
cli
xor
or
into
fs
scas
enter
out
pop
push
xorb
cltd
lcall
sbb
pop
adcb
lret
scas
push
pop
mov
shl
lods
rorl
jmp
push
push
cmp
push
dec
or
sbb
orb
cli
movsb
cmpl
jmp
pop
loope
and
popf
cmp
push
lcall
adc
and
cmp
sbb
lahf
insl
sub
popf
scas
cmp
inc
loopne
loop
fisubrs
cmp
or
mov
outsb
xorl
in
cmpsb
jbe
out
and
rcl
adc
fisubs
inc
int3
jp
aas
mov
int
jnp
lock
mov
and
pop
jne
sbb
addr16
pop
lds
xchg
fwait
inc
ret
sub
repnz
push
jne
loope
aam
call
mov
fldl
aad
pop
inc
pop
and
push
pusha
mov
imul
jnp
pop
lds
mov
mov
jns
pusha
in
push
mov
pop
cmp
and
imul
xchg
pop
mov
rol
or
add
scas
dec
cwtl
jb
or
sub
or
insl
push
aam
insb
es
stos
aam
inc
aad
jle
mov
inc
push
cwtl
pop
notl
push
dec
adc
adc
daa
leave
cld
cld
mov
push
pop
mov
mov
mov
jmp
mov
and
mov
test
aam
mov
cmp
add
pop
jmp
sub
sub
jge
stos
mov
lods
add
cmp
xchg
mov
sbb
dec
repz
shlb
movsb
clc
inc
sbb
adc
xlat
in
in
adc
out
dec
negb
mov
cmp
ljmp
dec
hlt
leave
sti
mov
dec
into
into
out
hlt
packsswb
push
ror
sub
inc
pop
xchg
lock
xchg
sahf
cmp
fldcw
stc
dec
pop
sbb
push
test
fldcw
push
fnstenv
je
or
sahf
out
pop
cmc
adc
int
xchg
fsubs
hlt
repz
dec
js
mov
cltd
rcrl
gs
sbb
sub
mov
jbe
sahf
mov
or
addr16
jl
lock
add
xor
inc
insb
cmp
jge
jo
sub
sti
xchg
adc
add
fstpl
push
push
cwtl
bound
mov
push
dec
mov
cmp
dec
ret
inc
push
out
out
arpl
xchg
jle
test
sbbl
int3
mov
jnp
adc
call
xor
ret
sub
cmp
xor
jl
ret
push
mov
mov
mov
and
push
out
sub
adc
lret
sub
add
repnz
xchg
pop
jo
sub
and
jl
cmpsl
sub
ret
outsb
rep
dec
lods
lret
outsl
sbb
or
dec
imul
data16
ret
popa
in
xchg
sub
push
pop
fucom
in
sbb
dec
dec
push
js
sbb
test
popa
mov
cmp
and
sbb
pop
mov
mov
lea
mov
jle
add
scas
test
sub
pushf
stc
pop
ret
pusha
add
repnz
fsubr
dec
adcb
daa
mov
sub
sub
xor
in
in
outsb
int
movsl
inc
xchg
pop
and
arpl
jmp
cmp
mov
jecxz
xchg
dec
cltd
add
loopne
add
sar
push
lods
cmp
cwtl
into
mov
dec
rcl
pop
add
ljmp
idivb
push
into
inc
mov
mov
nop
out
sarb
mov
inc
jnp
or
xchg
das
sub
and
sbb
dec
dec
mov
jecxz
setnp
xorb
pusha
sub
fwait
jb
xor
lods
mov
mov
call
fsts
test
cmp
mov
xchg
sub
insl
lea
cmp
dec
cmp
in
lds
mov
and
in
dec
shlb
or
ss
adc
je
repnz
fsubrl
aas
rcl
mov
or
push
imul
pop
or
dec
pop
sbb
jmp
or
shlb
outsl
les
jecxz
stos
pop
fcomps
adc
out
in
frstor
fsubl
adc
mov
sbb
loop
rcrl
fnsave
adc
and
data16
push
rcrb
daa
shll
fwait
adc
mov
mov
sti
pop
test
aad
mov
xchg
and
imul
insb
xchg
sbb
inc
out
je
dec
sahf
add
push
sti
js
lock
ret
das
push
dec
or
int3
pushf
fsubrs
mov
mov
orl
lock
clc
iret
test
rcll
test
mov
adc
push
imul
shl
inc
icebp
cmp
pop
xlat
stos
repz
pop
mov
xchg
mov
add
mov
push
outsb
xor
std
xor
xor
xchg
push
iret
loopne
shl
fs
fidivrl
imul
sti
loop
pushf
xor
pop
cmc
mov
mov
lea
mov
lahf
pushf
packssdw
add
js
addl
jbe
push
enter
sub
flds
imul
jo
js
cmpsb
imul
faddl
mov
inc
stos
cmpsb
into
mov
jmp
movsl
push
mov
fstpl
fisubl
ret
sbb
cmp
pop
arpl
stc
add
aad
xchg
popf
xor
xchg
scas
lahf
push
aad
mov
divl
cmp
bound
mov
arpl
jecxz
pxor
fdivl
xchg
arpl
pop
mov
sbbl
cmp
push
aad
jl
or
xor
or
jecxz
fxch
das
loopne
leave
test
pop
pop
xchg
mov
pusha
jne
stc
cmpsb
orb
mov
insl
sbbl
or
add
movsl
fdivs
enter
mov
addr16
in
mov
pop
cmp
push
sbbb
dec
mov
cwtl
arpl
cmp
popf
xchg
rol
fwait
ss
movsl
dec
mov
and
adc
decl
mov
mov
je
inc
xchg
loope
lcall
data16
inc
sar
sub
stos
dec
push
dec
rorb
dec
push
adc
lret
jl
mov
fisubs
mov
movsl
xchg
test
rorl
das
xchg
jb
jne
cmp
outsl
sub
mov
adc
dec
inc
push
les
test
shl
sahf
rcl
adc
cs
xlat
je
dec
cmp
into
in
or
movsb
sbb
gs
push
mov
sbb
mov
shll
in
int3
test
push
shlb
aad
and
inc
je
enter
test
jp
or
fwait
or
and
stc
sarl
adc
or
xor
jp
out
frstor
and
lcall
jae
sub
cmovne
std
daa
pop
call
push
test
dec
test
fdivs
lods
pop
inc
add
mov
ds
adc
test
pop
mov
mov
and
jbe
jo
icebp
xor
dec
add
mov
outsb
push
ja
jl
movsl
aas
jbe
push
es
ret
fidivrs
outsl
push
mov
mov
clc
rcrl
pop
test
add
rcrb
cwtl
or
or
or
test
popf
fst
daa
cmc
pop
sub
into
into
fwait
cwtl
aas
jns
mov
gs
sarl
jb
cmpb
subl
cltd
das
insl
jnp
mov
push
repz
mov
out
pop
cmpl
divb
fistl
sbb
pop
mov
mov
push
daa
mov
popf
push
lods
enter
icebp
adc
and
sub
rcll
cmp
pop
fildl
xor
jecxz
ret
fwait
or
loop
pop
int3
fcmove
into
xor
out
loopne
fsubs
or
xorb
push
cltd
xchg
jbe
jbe
adc
lock
out
loopne
cmp
inc
sub
loop
dec
xor
in
xchg
cli
or
mov
mov
jb
scas
and
mov
push
add
mov
sarb
adc
aam
adc
inc
pop
addr16
xchg
lret
push
push
orl
dec
je
mov
repz
stc
cwtl
out
jl
aad
pop
push
mov
je
fmuls
arpl
clc
cld
sbb
stc
lcall
test
xchg
cmp
jne
enter
out
sub
data16
test
xor
mov
and
popa
sbb
ljmp
pop
mov
jmp
pop
jmp
les
fwait
cmp
inc
add
mov
push
jmp
fs
leave
insb
xchg
cltd
into
mov
ret
icebp
cmp
inc
xor
lods
sub
inc
jbe
sub
mov
out
push
sarb
mov
push
add
cmpsl
imul
cmp
stc
dec
inc
jo
mov
out
mov
fs
scas
sbbl
adc
mov
mov
cmpb
nop
adc
xor
dec
push
in
cli
hlt
cmp
lods
cmp
xchg
pop
aad
or
insl
enter
sahf
pushf
daa
mov
push
ds
xacquire
jnp
sub
dec
dec
gs
inc
int
test
jmp
mov
mov
adc
mov
lret
in
push
and
hlt
insb
ds
cmpsb
test
push
add
pop
in
push
pop
mov
mov
sarl
gs
add
sbb
jge
cmpsl
hlt
mov
imul
sub
insb
test
repz
inc
mov
and
cmp
mov
pop
cld
ret
iret
out
pop
add
repnz
int3
ja
out
adc
orl
les
mov
out
hlt
xchg
mov
jl
or
int3
add
inc
nop
cli
stos
xchg
dec
jecxz
imul
lret
lahf
mov
cmp
mov
inc
push
push
mov
es
lods
mov
mov
adc
int3
mov
dec
fidivrl
xor
add
ret
nop
nop
nop
nop
jmp
