push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
add
and
push
inc
shl
sahf
jne
mov
jl
sbb
mov
test
push
xchg
adcb
imul
fsubl
mov
push
add
cmpsb
pop
mov
fiadds
jns
stos
scas
mov
in
sbb
xchg
rcrb
imul
dec
xchg
mov
and
je
jb
aad
pop
xlat
push
mov
shll
sub
and
inc
jbe
add
or
jne
inc
lods
mov
jo
and
jno
xchg
iret
data16
mov
jbe
fimull
jno
mov
xor
movsb
xor
dec
jns
hlt
bnd
xlat
mov
xchg
push
jnp
rorb
sub
or
arpl
push
bound
dec
stc
add
dec
jb
xor
mov
push
mov
sti
jecxz
jb
hlt
mov
or
mov
lods
movsb
pop
xchg
out
lcall
data16
adc
ret
scas
dec
outsb
js
mov
jb
adc
inc
mov
lock
out
pop
inc
in
dec
ficompl
mov
mov
sub
add
repz
jo
jp
xor
pop
insb
push
xlat
xchg
mov
lds
repz
mov
arpl
pop
shlb
jb
add
or
adc
jge
iret
aam
xchg
jnp
xor
sub
hlt
push
pop
stos
hlt
bound
mov
pop
xchg
shll
lods
jg
push
rcrb
testl
mov
jbe
and
xor
lods
sbb
movsb
xor
or
js
into
or
aaa
je
adc
adc
push
sahf
mov
ficompl
decb
arpl
push
into
loop
incb
adc
mov
movsl
jno
pop
xchg
ror
psrad
sub
repnz
xchg
aaa
mov
mov
test
add
and
arpl
mov
cmp
xor
pushf
imul
push
sbb
mov
dec
sbb
xchg
es
test
dec
ficoml
inc
mov
in
cmpsb
lds
sub
hlt
push
dec
push
xor
mov
enter
push
dec
jg
hlt
mov
aaa
cmp
jl
icebp
jp
jle
outsb
xlat
sti
mov
xchg
popa
out
sbb
lret
cli
add
fimuls
or
mov
mov
dec
pop
fwait
pushf
dec
dec
jge
pop
dec
pop
and
add
inc
jns
xor
add
inc
pop
add
and
xchg
push
inc
adc
mov
repz
lea
clc
push
adc
jns
fcmovne
fs
das
jns
lret
outsl
or
jnp
mov
and
pop
sbb
arpl
mov
mov
xorl
lods
pop
dec
int
cmp
outsb
arpl
stc
jmp
shlb
out
push
es
inc
mov
scas
sub
mov
clc
add
pop
adc
inc
pop
cmp
pop
out
insl
cmp
lods
repnz
xchg
mov
xchg
bound
scas
jae
pushf
mov
jne
inc
clc
jg
lret
mov
dec
or
xlat
add
push
stos
sbb
and
push
push
mov
mov
fstpt
xchg
mov
add
mov
jo
mov
inc
push
jbe
dec
test
in
loopne
dec
xchg
test
xchg
add
sub
xor
call
xchg
adc
jns
add
mov
sub
ficoms
xchg
sbb
fisubs
inc
ss
mov
ds
in
adc
dec
mov
leave
fstl
xlat
push
stos
ljmp
jecxz
mov
out
test
icebp
fldcw
add
inc
lahf
rcr
jne
ss
aas
dec
sbb
loope
or
sub
dec
mov
xor
outsb
jnp
pop
jmp
push
push
out
inc
jne
jl
push
fimuls
aas
lea
push
inc
fcmovb
sbb
lahf
or
cmp
movsb
mov
jle
xchg
mov
dec
mov
div
test
mov
aaa
sub
sbb
or
inc
push
pop
out
push
cmpsb
lahf
xor
sub
loopne
iret
sub
sbb
dec
push
enter
leave
jbe
fsts
sbb
sub
mov
mov
cld
pop
mov
cwtl
outsl
xchg
aaa
add
cmp
fcmovu
jmp
lea
rol
xchg
insl
mul
jb
gs
shlb
shll
sarb
fdivs
je
out
mov
xlat
sahf
xchg
popf
fwait
outsl
in
ret
or
ffree
jne
fcomps
jmp
test
fldt
lods
nop
sbb
int
js
ljmp
pusha
pushf
cmp
mov
inc
test
jbe
xchg
stc
mov
into
int
fildll
stos
adc
sar
je
mov
mov
xor
jmp
adc
insl
sbb
faddl
fbld
mov
mov
inc
ljmp
das
nop
rcr
stos
mov
fs
hlt
outsl
push
jmp
xor
push
mov
push
inc
lds
stc
lds
xchg
out
pop
jne
lret
jbe
out
push
fs
js
pushf
or
rclb
add
shrb
ja
pop
add
cmc
jecxz
mov
adc
pushf
xchg
mov
pop
adc
mov
nop
call
cmc
cmp
lock
inc
sahf
push
mov
aad
mov
ret
scas
or
sahf
mov
in
mov
adc
popf
lcall
insl
mov
push
lcall
icebp
xchg
pop
sti
ret
ja
inc
clc
shlb
mov
sub
in
xor
lods
out
dec
mov
lret
xchg
loope
push
scas
mov
push
popa
pop
mov
jg
es
sub
cmp
mov
in
mov
ret
add
sahf
pop
mov
leave
movsb
mov
xor
inc
nop
xchg
mov
or
and
xchg
dec
lds
mov
push
loope
les
notl
or
adc
mov
dec
dec
sbb
xchg
jl
gs
and
lods
xor
sbb
adc
les
push
pop
ss
loop
repz
mov
push
add
ljmp
repz
jae
cmc
test
push
add
sub
push
add
and
cld
js
mov
jp
push
cltd
add
lods
js
mov
enter
in
mov
outsb
mov
lea
sub
lret
out
fsts
cmp
mov
sub
sarl
sbb
jmp
test
dec
hlt
mov
jle
mov
aaa
cltd
sbb
es
jl
pop
mov
test
adc
sbb
out
pop
push
push
ss
mov
out
outsl
push
aaa
lcall
adc
jmp
fisttpll
push
notb
jns
or
and
or
or
roll
cli
pop
mov
imulb
enter
pop
outsl
icebp
mov
mov
adc
jecxz
jecxz
popf
sub
mov
ret
cmp
loopne
aas
and
add
cmpsl
cmp
dec
ds
testl
ljmp
psubw
lcall
scas
or
jae
cli
add
jne
cmp
xchg
xor
das
sub
in
jg
inc
rol
loopne
mov
ljmp
dec
cmpsb
or
ret
or
bound
nop
fistpll
stc
fs
xchg
add
or
cmp
sub
cmp
dec
call
xchg
test
sub
jbe
fidivs
adc
nop
or
sub
sub
dec
pop
jp
inc
cmp
outsb
out
cmpsl
mov
ret
loopne
rcrb
fcmovb
and
sub
mov
xchg
ss
inc
push
pusha
xchg
or
mov
xchg
adc
popl
ljmp
dec
adc
notl
pop
shll
in
imul
jne
lods
xchg
push
outsb
sub
mov
pushl
sti
lock
lret
mov
adc
sbb
adc
dec
fsubl
jae
and
dec
in
insb
data16
mov
scas
xor
dec
push
sub
outsl
loop
lods
outsb
or
fbstp
ja
incl
jbe
jnp
jl
movsl
sbb
cmpsb
and
test
push
push
xor
xchg
aaa
mov
add
mov
outsl
mov
lcall
dec
pushf
inc
bound
jb
daa
sub
mov
dec
push
push
sub
scas
jge
sbb
mov
xor
int3
scas
jno
cmp
out
add
pop
push
popf
pop
mov
pop
rclb
jl
mov
popa
cltd
mov
add
add
push
jne
mov
push
xchg
ss
lea
xchg
add
mov
add
fnstenv
inc
mov
mov
imul
cmp
daa
jnp
dec
jecxz
add
dec
jno
fsubl
in
or
and
rorb
mov
pop
push
jmp
xchg
jecxz
add
jmp
jne
lods
mov
sub
aam
jb
mov
daa
jmp
xor
icebp
pop
lods
mov
fs
dec
out
test
mov
mov
cmp
mov
xor
arpl
stc
divb
xchg
push
insb
and
push
jle
dec
cmpsb
pop
mov
or
aam
imul
pushf
xor
test
and
mov
popa
aas
scas
mov
push
ljmp
stos
jnp
or
iret
neg
or
enter
rcrb
add
mov
jle
xor
lret
repnz
mov
xchg
inc
pop
test
je
jnp
mov
or
mov
adc
mov
xchg
adc
fcomp
lret
push
and
dec
xchg
scas
mov
mov
cmc
nop
dec
add
inc
fists
push
xchg
mov
xor
xchg
cmp
fcmovb
jge
pushf
and
bound
mov
adc
lret
dec
jne
jg
hlt
imul
int3
xor
add
push
push
and
pusha
outsb
outsb
gs
cmpsw
xchg
lock
lret
addr16
rcrb
scas
sub
mov
jp
loope
enter
fsubl
daa
sbb
adc
into
andb
inc
or
aad
add
or
rorl
cmc
mov
dec
sbb
xor
push
ret
sub
mov
add
or
movsb
js
or
push
icebp
repz
jne
jnp
shr
js
jbe
jns
rclb
divl
xor
mov
add
or
xor
dec
mov
jae
sub
mov
lods
pop
repz
sbb
push
pop
outsl
jecxz
xor
mov
popa
shr
or
out
mov
int
scas
fdivr
popa
dec
pusha
jl
xor
out
pop
orb
fmulp
cltd
pop
mov
popa
jnp
add
mov
addr16
pushf
pop
pop
pop
cmp
inc
push
mov
adcl
in
lods
mov
mov
js
mov
cmp
pop
and
fstps
sbbl
test
ss
test
stc
sub
sub
lahf
stc
in
cs
xor
dec
xchg
and
scas
lods
mov
or
pop
fwait
dec
in
xchg
and
mov
adc
cmp
ljmp
or
sub
or
shlb
imull
and
sub
jno
fnstenv
testb
rcrl
or
mov
int3
imul
cmp
add
inc
xchg
fs
js
test
add
int
es
lahf
ja
das
inc
lea
push
adc
mov
or
mov
jg,pn
loopne
scas
orb
dec
mov
aam
shlb
or
ja
fsubrl
and
repnz
lcall
or
subb
mov
or
pushf
jmp
aam
or
ja
xor
fs
cmp
mov
fnstsw
xor
or
lahf
mov
pop
mov
jge
mov
push
inc
sub
adc
rorl
divb
in
dec
sbb
inc
mov
pop
popf
aaa
adc
xchg
fcompl
jl
push
pop
rcrl
jge
push
push
cmp
or
mov
inc
fistpll
dec
push
test
das
sub
mov
scas
adc
testb
xchg
mov
or
ljmp
sbb
jb
dec
mov
adc
jg
popf
lahf
ret
out
jns
ja
dec
mov
inc
mov
or
sbb
pushf
push
mov
mov
pop
sbb
cmp
mov
sub
dec
cmp
push
xchg
xor
rcl
test
push
sub
sti
cmp
inc
lods
mov
sarb
cmp
lods
or
bound
jnp
icebp
pop
sbb
xchg
in
das
xchg
cwtl
imul
dec
loop
pop
ljmp
jbe
adc
mov
rolb
fisubrs
rcr
pop
fistpl
xchg
adc
or
push
mov
or
shl
sbb
xor
out
and
or
insb
loopne
in
outsb
jne
ret
pop
imull
push
add
xor
cmc
sbb
imulb
les
clc
xchg
mov
movsl
mov
add
mov
in
xor
lds
into
mov
ja
or
mov
out
int3
or
mov
sub
mov
mov
cmp
adc
out
test
stos
dec
and
and
nop
jae
ds
in
adc
jecxz
add
lods
cmc
xor
ret
imul
pop
mov
nop
inc
dec
nop
sahf
jg
fcmovnu
in
mulb
xchg
sbb
pop
pop
add
enter
repz
fisubrs
jg
arpl
fsts
test
jno
daa
dec
in
scas
clc
and
xchg
sub
mov
inc
mov
inc
pop
repnz
test
mov
sub
pop
add
repnz
and
or
xchg
xlat
lahf
and
loopne
cmp
ds
leave
xor
add
pop
shlb
pushf
push
sbb
andb
in
in
nop
sub
or
shrb
xlat
pop
inc
popf
fiaddl
mov
cmp
mov
das
dec
test
jmp
cmp
int3
xchg
jbe
mov
sub
sub
pavgw
cmp
scas
xor
cwtl
call
xchg
stc
movsl
cmp
jno
xor
add
mov
dec
ret
mov
adc
ret
scas
add
movsb
cmp
in
add
in
xchg
mov
sbb
xlat
sbb
fcmovnbe
or
lock
xchg
lret
insb
test
andps
mov
adc
jl
aas
loopne
inc
cmp
movb
adc
je
in
push
and
notb
cmovs
out
add
mov
inc
and
shlb
mov
mov
insb
dec
popf
lods
sbb
les
cmp
or
aad
add
fcmovnbe
inc
push
mov
lcall
xchg
jo
vaddss
aad
fbstp
ror
pusha
mov
rcll
test
pop
shlb
mov
sbb
movsb
cmc
mov
rcll
insb
inc
ffree
push
add
mov
sbb
pop
lock
stos
mov
xchg
aas
push
push
cmp
adc
ss
lret
inc
fiadds
adc
jno
das
nop
lahf
mov
xchg
icebp
stos
cmp
hlt
sbb
xor
aaa
mov
js
iret
adc
mov
mov
sahf
lods
pop
push
add
insl
or
push
add
mov
add
dec
daa
in
jo
fistpll
pop
in
pushf
pusha
call
andb
insl
les
sub
shl
jmp
stos
stos
jecxz
scas
scas
fildll
fwait
mov
sub
mov
or
nop
and
xor
test
mov
jg
enter
push
pop
inc
test
icebp
scas
cmpl
dec
cwtl
inc
or
dec
cmpsb
insl
fdivrl
incl
push
arpl
cmpsb
pop
mov
sub
adc
dec
enter
mov
repz
push
pop
sbb
fistl
hlt
and
adc
subl
push
mov
sub
sub
movsl
cmpsb
mov
bound
sub
push
inc
adc
cmpsb
xchg
subb
pop
dec
outsl
addr16
scas
loope
mov
sahf
sbb
add
ret
and
sub
sub
push
call
xchg
rcrl
sub
mov
scas
or
movaps
mov
mov
gs
outsb
cmp
mov
jecxz
testb
mov
sub
xchg
sbb
inc
das
icebp
jb
sahf
popa
aas
fnstcw
jmp
stos
jp
add
jge
adc
xor
push
adcb
push
popl
inc
or
xor
aam
mov
movsb
hlt
add
lods
mov
mov
xor
add
or
cltd
repz
xchg
adc
ud1
pop
addr16
jo
jmp
jno
add
fdivl
xlat
jg
fdivrp
mov
mov
es
mov
lahf
jg
push
jns
sub
jnp
pop
adc
lahf
cmp
sub
xchg
jl
fistps
jg
dec
adc
lcall
shrb
xor
add
push
and
or
addr16
dec
loop
rcrb
push
mov
sbb
ret
push
subl
notb
push
sub
popf
pusha
lock
popa
push
inc
inc
call
cwtl
sbb
mov
rol
mov
fstps
xor
cmc
push
jecxz
or
shlb
imulb
mov
xor
lret
ljmp
sub
sbb
mov
lods
jns
lea
xchg
mov
loopne
xor
int3
xor
cmp
xor
rcr
lds
nop
mov
bound
push
out
int
add
test
repz
inc
js
xor
ret
out
pushf
xchg
lahf
daa
movsb
inc
into
leave
xchg
sbb
or
mov
pop
push
rorl
imul
cmp
xor
divl
shl
jmp
cltd
push
test
mov
ss
xchg
adc
mov
ds
and
and
sub
shrl
imul
nop
lods
test
sbb
mov
add
xlat
pop
repnz
and
sub
cmp
dec
and
jecxz
faddl
gs
js
idivl
cmp
mov
mov
adc
incl
fisubl
and
call
mov
out
ljmp
gs
jns
lea
sub
insl
inc
sbb
pop
mov
adc
sbb
movsl
clc
push
dec
movsb
mov
sbb
bound
rorl
ljmp
fisubrs
lds
mov
popl
stos
sbb
ja
dec
xor
outsb
mov
jb
lea
popa
xor
and
insb
cmp
lcall
xchg
imulb
sti
cmp
aaa
inc
ljmp
sbb
push
test
sub
aaa
leave
shrl
and
mov
mov
and
sbb
pop
filds
js
push
sahf
insl
inc
dec
stc
inc
add
jno
xor
pushf
sub
dec
sub
sub
mov
mov
pop
push
cmp
mov
aaa
fsubs
and
or
xor
dec
inc
adc
inc
mov
xchg
test
frstor
jge
xchg
scas
xchg
popa
negl
xchg
push
inc
decb
jmp
add
pop
sti
dec
jmp
and
popa
cs
jp
sbb
mov
mov
imul
mov
shll
daa
dec
pop
sub
out
cmc
push
testb
repz
in
dec
push
inc
pop
out
test
push
ljmp
ret
mov
jb
ficompl
inc
in
fistpll
xchg
sub
gs
cwtl
and
push
out
loopne
or
fidivl
fmul
js
mov
lret
out
pusha
push
mov
push
fldt
add
mov
shrb
js
xchg
shlb
sbb
mov
push
sbb
inc
inc
leave
sub
pop
lds
sarl
jmp
jp
and
pop
insb
aas
mov
imul
pop
out
jmp
adc
lods
sbb
loope
movsb
insb
mov
push
gs
mov
arpl
in
xchg
pop
push
and
stos
pop
addr16
mov
inc
mov
cmpsb
or
jae
ja
leave
adc
mov
testb
jb
mov
int
mov
repz
dec
out
or
sub
mov
pop
pusha
rorb
pop
jno
ret
rcl
push
cmpsl
and
test
mov
je
inc
lock
add
cld
adc
sub
pop
fldcw
mov
and
mov
rorb
idivb
pop
mov
sub
or
jmp
in
inc
or
mov
push
jg
rorb
les
andb
cmpb
loop
jl
push
mov
rcl
xchg
mov
pop
addr16
xor
push
add
add
mov
sbb
pop
cmpsl
jle
jae
setg
pop
pop
insl
call
mov
mov
int
mov
sbb
shll
int3
cs
dec
xchg
ffreep
sub
pusha
mov
loopw
push
lcall
sub
fistpll
cmp
stos
loope
and
fidivrl
cltd
adc
fldcw
pop
pmullw
fmull
rcl
push
push
test
mov
stc
sbb
dec
les
push
push
xchg
stc
icebp
pop
hlt
xchg
loop
dec
xchg
push
push
popf
xor
sub
pop
mov
inc
and
sub
and
fs
mov
pop
adcl
pmulhuw
mov
sbb
fnstcw
insb
xor
cmp
jns
je
stos
inc
cwtl
jecxz
loope
aad
adc
ret
jns
sbb
pop
mov
scas
aaa
cltd
mov
xor
push
add
push
jle
push
xor
xchg
or
aam
popa
mov
cli
std
sub
test
mov
dec
imul
jp
mov
repnz
scas
addr16
push
arpl
into
fidivrl
inc
in
lcall
pop
dec
jno
dec
push
imul
push
ja
xor
stos
adc
sbbb
jnp
cmp
xchg
jne
dec
add
popf
mov
pop
aad
test
adc
sbb
rorl
sarl
mov
fdivr
stos
push
xchg
ret
mov
mov
mov
std
and
loope
mov
das
pop
jecxz
stc
loop
fnstcw
pop
add
sbbb
add
and
fwait
pop
insl
shrb
loop
daa
and
pop
jnp
sbb
xchg
mov
iret
jmp
bound
cmp
test
cli
rorl
adc
das
sti
cmp
sub
xor
daa
lea
and
cld
cli
sbb
push
adc
out
inc
dec
sub
pusha
roll
sub
lock
sub
test
jmp
push
jmp
shrb
push
xchg
repnz
ja
lahf
push
push
dec
jle
lea
and
test
fstps
jo
pop
jmp
call
ja
xor
xchg
xchg
dec
push
push
lahf
out
mov
cmpsl
mov
adc
aam
cmpl
sbb
cwtl
out
inc
or
jb
inc
sbb
cli
insb
ljmp
pushw
fildll
stos
push
movsb
mov
adc
ror
push
xor
out
cmp
mov
push
into
or
mov
ficomps
push
xor
cmp
aad
sti
ret
push
cmp
xchg
add
cmpsb
movsl
inc
jmp
mov
pop
add
pusha
or
jb
push
aam
mov
cld
es
mov
pop
in
adc
sbb
mov
add
pop
mov
rcll
in
cwtl
dec
push
adc
adc
and
add
int
xchg
pop
ljmp
adc
adc
mov
xchg
ljmp
xor
sarl
jge
pextrw
roll
xor
push
adc
pop
adc
in
stos
lcall
xor
mov
xchg
aad
add
pop
sub
das
jge
cmp
sti
pop
sub
jmp
jg
push
cmp
xchg
sbb
xchg
test
xchg
insb
fildl
and
sahf
inc
scas
icebp
cmp
addl
dec
mov
sbb
jmp
js
or
rol
aam
lcall
xchg
mov
dec
js
fstpt
inc
hlt
sub
mov
fwait
xor
mov
inc
lahf
test
fwait
int3
dec
adc
xor
mov
jp
cmp
sbb
sbb
xchg
scas
iret
jecxz
xchg
or
enter
dec
inc
pop
dec
les
sbb
aas
cmp
and
cmpsl
jmp
sahf
mov
fstl
pop
sbb
mov
mov
outsl
sbb
mov
in
mov
cltd
xchg
xchg
cmpsb
push
ret
jge,pn
xlat
lahf
sbb
xor
xor
adc
stos
lds
loopne
dec
ja
mov
loope
mov
dec
add
lods
push
xchg
ja
cltd
jb
scas
jb
imul
cmc
xchg
lahf
shrl
lods
in
popa
lods
rcrl
jecxz
mov
insl
sbb
pop
sbb
cmp
adc
push
data16
in
pop
stos
add
lods
jmp
push
and
out
adc
xlat
sub
lods
push
dec
dec
hlt
cmpsl
rolb
stc
shll
stos
pop
out
std
cmp
lods
fs
movsl
hlt
fdivrs
in
pushf
mov
mov
in
lods
fsub
lods
xchg
mov
push
pop
lock
push
sahf
fldt
call
push
test
decb
pop
ds
cmpsb
push
mov
xchg
and
jne
dec
xlat
andb
cmpsl
sub
adc
test
aad
xor
insl
mov
sub
ss
adc
jnp
cmp
xchg
pop
lahf
xor
setge
mov
ds
enter
mov
std
mov
push
cmovne
ret
or
bound
cmp
or
scas
xlat
mov
sbb
cltd
fcompl
call
cmc
push
mov
cmpsb
add
dec
test
repz
ret
mov
xlat
pop
sub
or
inc
jle
and
push
hlt
rorl
cmp
adc
ja
pushf
mov
js
mov
xor
cmp
xchg
push
pop
push
repz
mov
or
ficoml
loop
push
dec
or
xor
xor
ja
xchg
cli
xchg
out
mov
dec
lahf
mov
in
fsubrl
xchg
adc
and
inc
mov
fsubs
std
add
roll
dec
ja
je
xchg
pop
push
loope
pop
dec
out
xchg
ja
mov
outsb
lahf
out
adc
out
int
mov
add
mov
cwtl
push
push
adc
pop
test
xchg
fdivl
xchg
lods
hlt
les
dec
outsb
gs
push
xor
jb
cwtl
push
loop
push
nop
push
hlt
and
sbb
dec
xchg
adc
mov
adc
push
mov
mov
push
fidivl
aaa
push
dec
mov
rol
add
push
outsb
mov
lea
pop
pop
pop
movsl
add
out
fildll
out
lock
in
repnz
shrl
xor
inc
xor
cmpsb
fs
mov
sbb
pop
pop
fldz
es
insl
push
fs
mov
in
aad
iret
xchg
mov
push
and
adc
lods
lret
inc
scas
inc
jg
lret
or
jmp
or
ljmp
inc
pop
test
ss
das
sbb
mov
jns
pop
shrb
lret
and
mul
test
adc
mov
jmp
ret
imul
imul
ja,pt
cmpsl
mov
sbb
shlb
in
mov
arpl
jbe
xor
sti
jecxz
mov
mov
mov
xor
pop
inc
jmp
fwait
inc
fwait
mov
outsl
sbb
cli
push
out
xlat
fidivrs
pushf
aad
ljmp
cmc
in
sub
mov
repz
mov
mov
insl
enter
outsl
pop
adcb
jg
jns
mulb
rcrl
push
repz
sahf
aas
or
mov
push
aaa
and
inc
fadds
mov
daa
jecxz
loop
xchg
sbb
add
add
or
bound
cmpsl
add
lea
fidivl
int
xor
mov
outsb
sub
dec
inc
xchg
jle
push
pop
test
or
cmp
adc
inc
pop
sahf
xchg
inc
xchg
es
sub
imul
mov
aad
push
lret
aas
pop
pop
aaa
xchg
or
arpl
imul
cmpsb
dec
and
mov
scas
aaa
dec
mov
dec
and
ror
and
jle
sub
push
popf
xchg
fdivrp
out
sbb
cmpsl
push
fdiv
xchg
add
sub
repz
xor
or
mov
jbe
mov
leave
pop
gs
xchg
cmpsb
push
stc
mov
popf
cmp
or
push
cmpsb
cmp
psadbw
xchg
enter
sahf
lret
cmpb
insb
mov
adc
in
adc
lret
xor
ljmp
enter
fildl
sbb
dec
out
xchg
lods
cwtl
inc
jno
imul
pop
pop
push
pop
or
add
int
mov
outsl
nop
jecxz
adc
cltd
std
lock
out
and
daa
xchg
mov
int
sarb
shrl
push
add
out
loop
add
adc
call
iret
sbb
add
jp
add
lcall
jecxz
cmp
rorl
adc
cld
push
jnp
dec
jns
or
into
data16
hlt
push
pop
in
push
pusha
inc
js
ljmp
xchg
push
out
adc
popa
je
add
daa
cli
push
popf
mov
sub
lods
sbb
pop
jp
sbb
sbb
mov
lods
push
ja
jmp
insl
jnp
inc
pop
push
add
lds
sbb
cmp
adc
test
inc
in
dec
cmc
pop
mov
mov
cs
mov
out
sub
adc
test
cmpsl
adcl
push
rcr
repz
inc
jno
test
jbe
jae
pop
mov
cmp
mov
add
add
sub
in
sub
scas
in
xor
jle
insl
sbb
cltd
add
pushf
stos
mov
shr
imul
movsb
add
aam
in
and
mov
pop
inc
stc
mov
sub
lods
fstpt
mov
insb
les
and
jo
xchg
jnp
or
cmpsl
inc
rorl
sbb
lds
sbb
jmp
xchg
xchg
neg
lret
mov
mov
dec
je
jb
rorl
pop
inc
sbb
stos
sbb
mov
rcrb
cld
inc
in
xor
sarl
das
add
add
test
aam
lret
sbb
movsb
aam
sub
sahf
shll
ficomps
dec
mov
inc
out
xor
mov
mov
fimull
push
pushf
jne
pop
pusha
ss
scas
adc
iret
or
xor
ret
loopne
in
xchg
rorb
inc
mov
and
insl
mov
shl
adc
sbb
stc
adc
push
insb
pop
out
and
insl
lret
notl
sbb
inc
add
jp
ficoml
xchg
js
enter
les
loope
jl
pop
jo
fildll
movsl
test
roll
imul
or
dec
fiadds
test
jmp
int3
or
scas
out
xchg
mulb
pop
fisttps
xchg
daa
addr16
cmp
repnz
into
andl
cld
mov
sub
cmp
jnp
push
leave
into
push
ja
mov
cmp
mov
mov
subb
cmp
xchg
and
xlat
dec
dec
repz
jnp
xchg
scas
test
mov
int3
int
mov
sub
loope
pop
pop
xor
fcmovu
divb
pop
jns
pop
jne
lea
adc
sti
mov
cld
cld
ss
ret
in
fstl
pop
fsubr
shll
jns
into
and
adc
in
push
sub
inc
pusha
and
js
jp
test
outsl
xor
adc
adcl
into
push
pusha
sar
inc
jb
or
dec
add
adc
sbb
pop
add
fsts
sbb
xor
out
aad
shlb
xchg
popa
mul
ret
pop
inc
mov
dec
xchg
push
neg
xlat
push
xchg
cs
imul
je
sahf
mov
pop
ljmp
xor
push
mov
adc
sbb
mov
push
inc
icebp
mov
mov
stc
lock
cwtl
jnp
pcmpgtb
push
stos
inc
outsb
lea
add
in
leave
lea
dec
mov
inc
into
shlb
pop
pop
in
rorb
aas
pcmpgtb
orb
notl
mov
push
xchg
push
push
jae,pt
cmp
test
leave
pop
jmp
fldl
cmpsl
inc
inc
lods
and
push
xchg
movsb
xor
mov
inc
jns
mov
daa
cltd
icebp
adc
lahf
scas
ret
loopne
add
mov
xor
stos
cmp
and
mov
dec
and
mov
scas
std
fstps
cmp
subb
loope
enter
lds
sti
testb
mov
call
jne
adc
dec
push
jg
xchg
call
scas
jecxz
stc
clc
insl
ja
mov
jno
mov
pop
mov
mov
leave
jmp
jnp
push
stos
clc
jnp
xlat
push
jp
pop
in
jno
and
jle
xor
mov
mov
mov
cmpsl
cmpsl
lods
cli
dec
xor
inc
scas
xor
mov
repz
insb
js
pop
in
add
adc
mov
adc
inc
dec
or
lds
pushf
ljmp
mov
push
lcall
mov
xor
test
jbe
inc
adc
jmp
loope
lcall
xor
arpl
fwait
xlat
ds
dec
lods
inc
loopne
ja
add
jnp
cmp
addr16
aad
inc
jg
pop
stos
lds
fiaddl
jo
in
inc
jae
and
mov
inc
push
jae
or
cmpsl
sub
add
pop
dec
cmpsl
jae
mov
aam
bound
insb
test
pop
das
test
ss
jne
cmp
mov
je
and
inc
sbb
fwait
push
es
adc
pop
jp
roll
adc
cmp
jge
fld
and
sub
jp
or
mov
addr16
lds
int3
adc
js
lock
int
mov
push
outsl
inc
jge
gs
or
mov
jno
add
mov
pop
cmp
sub
hlt
dec
lret
iret
arpl
imul
xor
lock
xor
adc
push
push
and
jecxz
sub
add
in
lods
das
sub
cld
js
pop
pop
push
popf
clc
inc
and
fwait
outsl
ds
cmp
scas
lret
inc
fnsave
fadd
sub
ror
repnz
addr16
jmp
or
inc
xor
jmp
int3
cmc
mov
xor
mov
cmpsl
mov
sub
mov
loop
adc
xchg
inc
lcall
insb
push
mov
imul
ja
popl
add
stos
orb
lods
pusha
and
jbe
loopne
fimull
mov
rdmsr
cmp
ret
cmpsl
adc
shlb
add
cltd
dec
pop
mov
stos
mov
inc
pop
xchg
sti
imul
cmp
mov
out
pop
cmp
insb
adc
icebp
inc
lret
cli
inc
ja
mov
aas
xlat
insb
dec
xchg
sbb
adc
shrb
mov
xchg
mov
pop
in
ret
sbb
cmpsl
jo
cwtl
mov
scas
push
stos
push
sub
pop
test
sbb
mov
fbstp
inc
ret
push
data16
loope
sbb
or
fcmovne
pop
jbe
out
pop
xchg
jl
roll
in
mov
mov
lahf
mov
imul
push
outsl
sti
shll
movsb
arpl
xchg
mov
in
mov
test
or
repz
pop
xor
add
xchg
sbb
pop
test
das
stos
das
sarl
addr16
mov
inc
or
lret
std
pop
dec
cs
out
inc
jne
jnp
xchg
popf
fidivl
and
mov
in
jns
sti
xor
sti
cmp
push
push
pushf
add
xchg
push
inc
push
int
adc
call
mov
mov
cmp
vxorps
dec
aas
sub
jb
push
xchg
jp
mov
scas
bound
add
addr16
add
out
add
fadd
push
lahf
dec
cwtl
stos
fisttpll
rol
cmpb
shlb
xchg
inc
neg
shl
test
test
xchg
adc
lods
sub
adc
jmp
mov
ret
cltd
rorb
movb
pop
xor
mov
orb
jo
into
in
mov
cltd
jns
lods
fistpll
sub
lods
adc
leave
jle
xchg
leave
mov
nop
lret
das
cmp
mov
into
pop
and
adc
scas
xorb
insb
aas
das
inc
lcall
int3
push
or
push
roll
shl
mov
lcall
lds
pop
mov
hlt
dec
loopne
xchg
xor
mov
mov
adc
xor
subl
arpl
call
mul
xchg
adc
inc
xor
push
dec
dec
ficoms
adc
dec
inc
cmp
mov
les
lock
push
jo
data16
inc
mov
push
hlt
jae
inc
mov
imul
gs
push
test
push
mov
lahf
sub
into
lea
test
jb
add
lods
dec
sub
rorl
inc
test
jg
imul
fstp
mov
xorb
or
dec
mov
lcall
insb
lcall
in
mov
jno
nop
jge
mov
les
lods
test
jno
pusha
test
pop
ret
mov
jne
jns
out
xchg
je
lods
cli
aas
addr16
lods
subb
or
nop
xor
fstpl
cmp
jno
in
jecxz
idivl
push
or
mov
popf
inc
dec
lods
out
mov
push
adc
nop
mov
mov
loopew
push
sub
std
test
add
mov
adc
test
sbb
fs
xor
loope
mov
in
dec
cmpsl
dec
shll
sbb
pop
xchg
test
jns
add
flds
fmul
push
lahf
jb
test
pop
outsl
xchg
and
inc
dec
inc
mov
xor
sub
add
scas
pop
jo
fistl
inc
gs
sub
fldt
mov
or
pop
sbb
xlat
fiadds
inc
cmp
cmp
mov
cmp
xchg
mov
sub
dec
fadds
sub
lods
test
dec
lods
out
jp
and
dec
dec
adc
mov
or
in
add
cmp
push
cmp
mov
and
out
in
shrl
outsb
dec
adc
call
sbb
push
adc
sub
mov
lret
lret
mov
sub
push
dec
or
rcll
sbb
xchg
cmp
in
add
pop
add
pop
mov
or
jno
pop
sbb
push
push
popa
dec
int3
inc
sarl
sti
iret
adc
cmp
push
sub
fists
mov
shlb
jge
subl
fs
call
imul
xor
pop
and
js
out
movsb
add
cmp
data16
pop
jae
iret
es
stos
ret
and
adc
xchg
in
cs
int3
popa
sbb
pop
or
and
mov
mov
je
and
and
and
cmp
cmc
outsb
jne
popl
sahf
add
add
inc
jecxz
cltd
mov
movsb
xchg
pop
mov
xchg
pop
stc
hlt
dec
or
adc
jnp
adc
aam
leave
xchg
inc
pop
jnp
and
cld
mov
cli
int3
jne
test
movl
in
rcll
les
push
stc
mov
pop
lret
popa
xlat
in
xchg
add
inc
sahf
loop
aas
sbb
lock
test
pushf
xchg
ret
test
mov
push
nop
std
jge
ljmp
insb
hlt
aaa
imul
mov
out
sub
daa
stos
mov
jns
sub
sarl
adc
xchg
ret
mov
add
mov
jnp
lret
lds
mov
or
inc
mov
sarb
lds
dec
push
ss
cmpsb
dec
jae
push
cli
insl
dec
mov
shrb
add
mov
mov
push
and
dec
sbb
add
mov
add
and
cld
xor
add
fiadds
sbb
out
inc
mov
dec
cmp
stos
test
sbb
xor
dec
pop
xchg
test
test
mov
or
popf
arpl
or
dec
lods
pop
xchg
cmp
mov
mov
push
sub
js
mov
pusha
loope
jno
test
std
pop
test
pop
dec
jns
mov
sub
dec
push
xor
dec
push
add
lock
jl
inc
addb
mov
jne
lret
cld
scas
mov
lds
push
cmc
jo
popf
jne
insl
push
das
xor
pop
mov
push
lods
jbe
mov
je
fmuls
lret
mov
not
cli
jo
sbb
jbe
xor
fildll
divb
daa
cmp
and
gs
leave
cmp
ja
or
ljmp
lock
roll
bound
and
mov
pop
sbb
fstps
es
fcmovbe
sbb
fldl
jecxz
into
xor
add
fstp
xchg
cmp
xchg
mov
or
dec
das
test
aaa
or
out
sahf
sub
xlat
mov
and
cli
cwtl
popf
clc
xchg
and
jae
jl
dec
mov
mov
pushf
addl
pop
mov
mov
imul
push
inc
xchg
andb
data16
xlat
clc
iret
inc
cld
xor
insb
add
xor
or
mov
cmp
daa
int3
imulb
add
mov
je
mov
or
mov
das
mov
lods
insl
clc
inc
mov
xorl
sub
dec
adc
jge
jo
xchg
lahf
fistpl
cmpsb
mov
les
inc
lret
ss
sar
in
sub
cmpl
iret
sub
in
clc
xor
iret
es
lret
jp
pop
mov
cmpsb
ret
add
cmpsl
jnp
pop
cmpsl
flds
cmc
scas
imul
push
xchg
adc
push
movsl
and
pop
loope
rcrl
bound
xchg
out
add
insb
cmp
fsts
movsl
or
fbld
push
call
jbe
cmp
fs
cs
add
inc
push
mov
lret
mov
inc
std
mov
jmp
xchg
scas
push
notl
jecxz
sbb
jns
sbb
cmpsl
movsb
inc
cmp
mov
and
sub
lods
or
dec
inc
sbb
outsb
xor
pop
stos
lahf
mov
add
fs
mov
hlt
loop
stos
aas
orb
xchg
pop
xchg
push
cmp
mov
or
sub
lcall
ret
mov
xor
pop
jb
rcrl
adc
inc
pop
add
push
cli
or
xchg
pop
fucomp
adc
mov
fdivs
push
xchg
inc
mov
jno
loopne
je
mov
ret
loope
loopne
push
out
push
jmp
add
faddl
sub
dec
jo
cli
adc
movsl
sbb
and
lock
popa
mov
xlat
cltd
stos
jbe
pop
push
sub
int3
out
sub
lahf
xlat
loope
lcall
xor
scas
jne
jmp
pop
rorb
iret
mov
sub
jnp
xchg
or
cmpb
ret
mov
push
mov
aaa
les
outsb
lret
loop
sbb
sarb
ret
daa
xchg
outsl
outsl
stc
cli
or
shlb
mov
imulb
dec
xchg
in
mov
mov
sub
mov
into
call
fdivl
fsubrs
xor
pop
sbb
dec
gs
popa
jnp
or
scas
int3
cmc
insb
pop
sub
mov
arpl
xchg
fs
sti
sahf
push
or
int
into
pop
je
insl
or
mov
jns
mov
cmp
icebp
push
ds
je
sahf
aam
icebp
xchg
lret
dec
aad
outsb
or
es
lcall
xor
jnp
or
ja
adc
outsb
les
xor
xlat
cs
mov
sbb
daa
outsb
xor
test
xchg
shll
xor
es
push
pop
imul
mov
add
push
repz
xor
rol
sbb
bnd
cmp
xchg
jl
outsb
push
dec
mov
xchg
mov
jg
pushf
ret
jbe
pop
and
add
movsb
scas
mov
sbb
in
cmpsb
arpl
adc
aam
iret
insb
push
fimull
into
lock
xor
or
push
inc
out
adc
jecxz
sbb
mov
cmp
dec
int3
jnp
mov
mov
in
mov
cwtl
mov
ret
movsb
mov
adc
xor
push
xor
pushf
jge
xchg
jns
cmp
ljmp
jp
push
mov
xchg
jne
dec
daa
dec
push
sbb
mov
pop
lret
xchg
fwait
jmp
xor
js
int3
insl
int
push
sbb
pop
les
popa
cwtl
sbb
test
aad
in
and
push
cmc
cmpsb
dec
xchg
ficoms
xchg
inc
mov
mov
mov
adc
test
xchg
adc
mov
add
mov
cli
popa
lcall
outsl
in
std
add
gs
leave
ret
insl
repz
mov
fneni(8087
push
lret
sahf
ret
das
dec
ret
mov
decl
adc
pop
inc
sbb
in
mov
pusha
inc
xor
sub
movsl
xchg
mov
xchg
sub
outsl
lock
sub
jo
fs
sbb
sbb
jbe
mov
pushf
push
test
dec
mov
jl
xchg
cmpsl
push
mov
sbb
and
pop
mov
in
xchg
icebp
ss
in
xchg
jbe
clc
repz
mov
and
xor
adc
and
sbb
arpl
lock
jbe
xchg
adc
out
nop
pop
popf
stos
jmp
xor
jnp
les
es
stos
mov
jno
mov
sbb
dec
cld
inc
adc
fsub
push
nop
lds
mov
xchg
ret
lret
add
and
outsl
cwtl
adc
xchg
iret
aas
mov
test
mov
cs
lds
out
fs
lcall
call
dec
fsubrs
mov
mov
inc
pop
imul
in
hlt
cmp
sti
shlb
mov
loope
cmpsb
loop
xchg
or
add
fwait
inc
sub
test
and
adc
push
jns
shrl
add
pop
fadds
push
je
mov
int3
sbb
cmpb
mov
mov
push
cmpsl
xchg
pop
orb
loop
cltd
jl
shrb
shl
orb
fwait
sbb
xlat
cmp
daa
sarb
push
mov
insb
aam
or
mov
stc
dec
mov
test
dec
cwtl
jl
sbb
loopne
adc
xor
jg
jo
lds
and
call
xor
lods
push
jne
movb
std
xchg
push
jp
cmp
sti
call
fisttps
mov
xor
sub
in
dec
mov
or
lods
repz
ret
push
int3
add
arpl
cmpsl
pop
pop
sub
data16
adc
mov
popf
jno
loopne
xchg
sub
xlat
sti
stos
jmp
mov
jle
stc
test
fdivs
mov
cmp
repnz
jno
andl
scas
loop
adc
mov
test
movsb
push
add
ds
test
loope
ss
lock
xlat
sbb
sbb
add
dec
pop
cwtl
cmp
push
pop
aas
lret
or
cmp
mov
sbb
mov
lock
push
cltd
scas
push
mov
divl
xchg
js
push
in
jmp
jbe
ja
jecxz
loopne
das
roll
cmp
jbe
cwtl
and
jno
xlat
jne
xor
pop
pusha
outsl
insl
mov
add
cli
jbe
out
jmp
fnstsw
or
aam
pushf
xor
or
movsb
xchg
daa
shl
vphaddubq
pop
cld
jle
or
lret
es
mov
push
fnstenv
push
sbb
jmp
out
adc
psrld
adc
scas
roll
test
xchg
adc
jns
sub
pop
and
xor
clc
jae
mov
pop
jns
sahf
shlb
int3
adc
cmp
decl
test
ret
hlt
popa
dec
pop
dec
cmp
push
aam
fwait
push
scas
mov
add
dec
scas
push
inc
mov
out
jmp
jl
or
test
outsl
inc
jl
movsl
or
mov
or
dec
rcl
gs
fldt
lds
and
ror
xchg
mov
popa
and
daa
cwtl
out
ret
push
out
call
out
dec
jmp
mov
mov
push
add
and
or
orl
xchg
fidivl
mov
mov
test
push
inc
or
xor
sub
or
xchg
mov
mov
imul
xchg
sbb
cwtl
jo
add
clc
aaa
enter
or
movsl
pop
xchg
sbb
cs
sbb
adc
ljmp
inc
dec
mov
jae
pop
out
mov
push
hlt
fs
imul
cmp
stc
sbb
mov
push
aam
inc
xor
xchg
xor
cmp
sbb
ds
lret
in
lret
xor
dec
pop
sbb
mov
into
xchg
loopne
or
mov
cmp
ret
xchg
aad
sti
cli
repnz
push
dec
lea
cltd
mov
and
jnp
sub
js
das
fiaddl
add
and
and
fcmovnbe
mov
xor
es
mov
jnp
push
ja
mov
push
out
rolb
loope
mov
iret
movsb
hlt
in
pop
lods
repz
pop
mov
rcrb
je
mov
test
or
mov
mov
jnp
jp
jno
enter
sbb
xchg
aaa
loopne
add
and
sub
fisubs
notb
sub
fmull
lock
push
xor
pop
dec
or
into
mov
pushf
incl
scas
lea
jno
aad
dec
enter
mov
iret
push
mov
fcompl
rolb
xchg
clc
push
pop
aad
ljmp
or
or
jle
add
fsubl
adc
xchg
movsl
sbb
and
icebp
lods
adc
dec
imulb
sbb
mov
push
sub
and
push
mov
mov
shl
test
jns
arpl
iret
jg
mov
movsb
shll
push
pushf
jmp
incl
add
mov
clc
insb
rorl
mov
dec
push
jno
call
add
jnp
jno
cmp
xor
test
cmpsl
mov
push
mov
and
sub
jo
movsl
xor
jmp
ss
cmpsb
dec
push
ljmp
rcll
jmp
sub
rcl
mulb
leave
jb
cmp
out
adc
hlt
aam
push
add
inc
arpl
sbbl
cmp
scas
je
lret
lcall
sub
mov
notl
push
cs
lahf
adc
ss
adc
inc
cwtl
std
jo
subb
dec
inc
add
jp
fcomps
repz
mov
lret
aas
daa
push
call
in
aas
adc
jmp
sarl
sub
out
ljmp
xchg
push
adc
add
outsb
and
out
std
cmpl
call
pop
hlt
es
inc
ds
enter
push
mov
fldl
sub
xchg
dec
sub
sub
jge
ds
je
push
insb
xor
jae
pop
push
pop
jno
jge
cmp
imul
test
sub
pop
mov
and
fwait
sub
mov
mov
sbb
adc
pushf
jge
adc
push
mov
fwait
dec
push
push
fwait
cmpsb
cmp
mov
jmp
xor
sub
cmp
out
xchg
jmp
pusha
aam
mov
pop
push
cs
mov
lods
fs
and
stos
xchg
aad
inc
push
mov
xchg
xor
stos
sbb
inc
mov
lock
ret
sbb
std
repz
dec
ja
adc
push
sub
xor
push
dec
loope
sub
xor
ds
cld
dec
dec
bound
iret
push
jb
mov
mov
or
mov
cmpsl
mov
dec
mov
mov
clc
in
xchg
std
xchg
data16
mov
outsl
lds
mov
test
or
aad
dec
jne
fidivrl
mov
or
pop
xadd
cmp
mov
icebp
pop
sub
jecxz
imul
scas
aad
adc
dec
sub
ljmp
dec
xchg
data16
and
aad
in
sub
xchg
inc
adc
cmp
pop
mov
rcl
or
and
pop
insl
mov
pop
ficoms
jg
js
nop
es
scas
mov
stc
andl
out
sbbb
sbb
aas
stos
jg
out
jb
inc
sub
aas
iret
xor
mov
adc
nop
or
fdivrl
cmp
jb
push
adc
mov
xchg
xchg
in
pusha
mulb
outsl
cmpsb
inc
outsl
or
adc
inc
nop
pop
mov
lock
sub
leave
out
popf
or
adc
xchg
setnp
andl
inc
and
mov
push
push
mov
jae
js
add
mov
inc
int3
fs
jo
jo
das
aam
mull
add
mov
mov
dec
push
pop
dec
mov
xor
push
js
aaa
cmpsb
mov
shlb
div
jecxz
mov
fld
push
sbbl
outsb
jo
sbb
sbb
pop
mov
aam
enter
jae
add
arpl
mov
xchg
add
mov
mov
jno
adc
jg
cmpsl
addl
cld
pusha
mov
stos
add
xlat
cmp
mov
push
and
cwtl
sahf
jae
shll
pop
mov
dec
cmp
xor
push
mov
mov
je
sub
popa
mov
xchg
cmpsl
fistl
adc
movsl
in
hlt
sbb
or
cltd
inc
les
push
xor
xchg
xchg
pop
jg
movsl
dec
mov
hlt
mov
sar
jp
add
pusha
sbb
imul
mul
test
aam
fbld
out
shl
shl
sbb
sahf
addr16
sbb
jecxz
mov
jl
cmc
movl
pushf
pop
nop
lods
les
popa
add
xor
xlat
dec
ljmp
adc
icebp
xchg
out
imul
in
lcall
lods
inc
shl
mov
es
xchg
mov
push
dec
es
js
xor
das
pusha
out
sbb
cwtl
test
movsb
daa
cwtl
stos
lock
hlt
sbbl
pop
pop
adc
shll
mov
es
lods
mov
jl
or
stc
aas
or
adc
stos
insl
fildll
push
adc
aaa
out
push
push
xchg
pop
aam
mov
dec
fistps
sub
push
sbb
aas
shrl
cmp
cmp
jle
test
adc
sub
and
dec
push
fyl2xp1
je
mov
jle
add
scas
pop
mov
push
inc
adc
popf
lret
adc
xor
xchg
xor
push
sub
mov
movl
pop
inc
ret
inc
inc
je
pop
inc
dec
or
dec
jnp
or
sarb
scas
imul
daa
popa
out
fldcw
aas
adc
mov
insl
add
cmc
stc
inc
jbe
xlat
push
xchg
xlat
mov
jno
pushf
test
pusha
adc
inc
les
mov
xchg
sbb
ljmp
dec
mov
jg
adc
mov
dec
sbb
sahf
enter
sub
adc
jl
pop
fidivrs
xor
ljmp
pop
sub
xor
cmp
aad
das
mov
mov
dec
dec
sub
rcr
pop
push
nop
dec
or
or
push
ror
xchg
mov
sub
pop
sbb
imul
or
leave
xchg
cmp
and
loop
add
pushf
je
mull
xchg
add
arpl
in
or
ficompl
xor
mov
push
jnp
js
cmpsb
or
addr16
in
mov
lcall
jae
fwait
dec
mov
std
and
pop
xor
or
out
and
xor
mov
dec
lods
and
mov
mov
out
out
push
rcrl
cmp
popa
cmp
xor
or
leave
push
cltd
sbb
call
stc
dec
pop
or
into
push
push
xchg
sahf
pop
adc
adc
mov
push
cmp
pop
cmp
mov
ret
inc
fucomip
rclb
popa
mov
outsb
push
adc
iret
push
mov
inc
jmp
xchg
fnstcw
div
push
pop
icebp
inc
daa
in
cld
enter
pop
fiadds
pop
std
jae
pop
jmp
adc
lahf
adc
push
ficompl
adc
es
inc
cmp
outsl
fistl
sub
or
add
stc
and
sbb
jo
imul
inc
stos
or
cltd
dec
xor
inc
jo
mov
ds
ljmp
icebp
out
aaa
xchg
jg
out
mov
fists
dec
cmpsl
ret
mov
pusha
inc
push
inc
out
loopne
das
pop
adc
lods
mov
in
pop
int3
stc
shlb
mov
add
push
pop
sarl
aaa
and
and
cwtl
jo
cmp
rol
mov
xchg
pop
lds
loope
mov
loope
mov
lahf
or
sub
outsb
push
xchg
ds
out
mov
into
das
neg
push
mov
pushf
mov
cmc
lret
cmc
jl
inc
ret
xor
push
out
xor
insb
cmp
xorb
sbb
pop
add
aaa
sti
xor
lret
pop
or
sub
das
cli
lret
mov
jge
rcrb
sbb
jp
dec
mov
mov
leave
in
pop
xchg
testl
pop
push
test
push
dec
inc
testb
mov
imul
daa
push
pop
in
jecxz
movsl
inc
outsl
insb
xchg
push
inc
in
dec
loopne
in
loop,pn
and
add
pop
mov
dec
int
or
adc
pop
fldcw
test
sti
dec
inc
mov
fadds
in
push
das
pop
mov
xor
mov
fidivs
dec
mov
pop
xchg
push
popa
cmpsl
cmp
or
dec
loopne
fsubs
in
je
lds
mov
stos
adc
mov
add
adc
shrl
in
mov
in
cmpsl
icebp
jmp
shl
add
les
insb
dec
add
pop
and
fsubrl
push
push
jbe
xchg
out
push
sbb
je
jnp
jae
xchg
jbe
or
sub
lcall
int3
jns
jbe
int
fst
lock
aas
cmp
out
and
neg
sub
push
mov
adc
addr16
xchg
inc
push
mov
mov
sub
cmpsl
addr16
mov
les
sbb
inc
bound
pop
push
xchg
mov
es
sub
loop
jae
clc
cwtl
dec
jo
mov
lds
pop
push
gs
push
and
pushf
cmpsb
inc
xchg
dec
sub
jg
scas
test
add
adc
jp
xlat
shr
lea
xor
test
push
xchg
popf
dec
or
cmp
test
mov
icebp
mov
mov
cli
mov
pop
out
sbb
and
fiaddl
inc
out
sahf
int3
mov
adc
addr16
jmp
aaa
adc
aas
sub
ja
cltd
bound
adc
push
lahf
seto
jge
aam
cwtl
stos
pop
add
repz
aam
push
pop
test
out
shl
mov
mov
push
pop
mov
insb
ljmp
xlat
cltd
fstpt
or
in
push
add
mov
sbb
mov
sbb
jae
cmpsl
sub
loop
neg
rolb
js
pop
subl
call
push
nop
sbb
and
add
shr
mov
or
mov
testl
cmp
sub
jnp
lea
enter
imul
mov
ja
xchg
ror
xor
mov
dec
inc
shrl
or
mov
inc
ucomiss
je
jb
pop
mov
ficompl
mov
mov
xor
fcmovbe
mov
jae
rcll
ret
cmp
loopne
xorb
pop
mov
andl
sub
aad
loopne
rclb
pop
sahf
imul
xlat
or
movl
ficompl
xor
insb
add
add
rclb
xor
loope
push
or
leave
jb
cmc
sub
push
push
leave
scas
rcrl
pop
sbb
add
mov
push
enter
inc
adc
shll
pop
sbb
jle
mov
mov
ds
sub
inc
cmp
sti
fsts
enter
scas
aad
jo
adc
arpl
mov
inc
cmp
mov
inc
div
iret
fwait
bound
pusha
mov
cld
cmp
imul
mov
icebp
cmpl
inc
mov
cmp
scas
js
mov
repz
movsb
push
dec
jns
rclb
cwtl
jge
outsb
pushf
pop
mov
push
rcrb
dec
adc
push
dec
cmc
fldcw
push
and
xchg
popf
lret
sub
xor
cmp
cmp
cltd
jl
int
push
cmp
xor
fistpll
lds
or
stos
cltd
add
movsl
jp
rcrl
ret
pop
mov
adc
cmp
out
xchg
mov
inc
push
leave
push
xchg
je
lahf
addl
inc
arpl
loopne
shrb
cmp
xor
push
mov
lods
dec
sbb
mov
mov
jl
xor
out
mov
fnstsw
add
push
lods
out
or
xchg
lahf
ds
pop
rclb
inc
cmp
stos
orl
pop
xchg
gs
aaa
lock
jl
ss
mov
scas
in
insl
pop
add
imul
push
push
sub
scas
xor
inc
jmp
xchg
add
out
aas
jp
iret
pop
xchg
cmp
and
cmpsl
fdivl
std
sub
imul
pop
out
jp
pop
fisttps
fisubs
gs
mov
inc
movl
or
mov
test
mov
pop
inc
lret
stc
xchg
adc
push
icebp
icebp
ja
scas
movsb
test
lret
or
cltd
or
mov
xchg
out
push
or
sbb
es
mov
scas
or
push
or
inc
popf
ret
test
fadds
mov
jo
and
clc
rclb
push
movlhps
leave
dec
lock
rcr
mov
fadd
adc
xor
leave
xchg
sub
cld
rcr
pop
repz
pop
mov
movsb
fs
addb
stc
dec
aam
sarl
adc
jge
ja
cltd
dec
lea
jp
dec
daa
mov
push
std
mov
cltd
push
mov
cmpsl
sahf
or
adc
loopne
cli
int3
mov
shll
data16
push
ss
sub
shrl
imul
imul
mov
fnstsw
out
fnstenv
enter
pop
ds
ret
aam
nop
fwait
jns
pushf
js
or
sub
lret
test
cmp
sub
sarb
repz
movsb
inc
xor
xor
dec
popa
and
shll
popf
jmp
lods
dec
pop
popf
lcall
cmpsb
xchg
jge
pop
mov
lret
xlat
cmp
or
xchg
lock
mov
push
cmpsl
scas
cli
xchg
gs
lods
add
mov
adc
sbb
mov
cli
xor
xor
push
and
jno
int3
inc
enter
xorl
daa
enter
aad
xlat
popf
or
pop
mov
mov
shll
jmp
rcll
and
dec
pop
ds
addr16
jecxz
sub
pop
int
js
pop
sub
stos
xor
xor
fs
ficoms
ret
pop
xchg
mov
cmp
inc
mov
movsl
mov
mov
mov
jl
stos
cmp
in
es
jo
jb
cmp
jmp
jne
ror
fnstcw
jecxz
aad
push
inc
rclb
out
cwtl
add
xor
add
ss
pop
and
clc
popa
in
cmpsb
mov
pop
jle
mov
js
jne
sbb
out
test
sub
popf
xchg
jg
push
mov
sub
enter
sub
xchg
inc
inc
mov
and
enter
jmp
jbe
ss
addr16
movsl
cmpsl
mov
leave
push
in
cs
addr16
fnsave
and
sub
fdivr
mov
sbb
pop
das
loope
jp
push
push
call
lahf
js
xor
adc
xchg
jb
movsb
cmpsb
mov
adc
xchg
push
mov
push
sbb
js
ret
cs
lret
mov
jns
mov
dec
adc
inc
jg
mov
push
push
leave
and
cltd
lods
adc
clc
mov
and
adc
or
cmp
dec
mov
fs
loope
std
pop
sbb
rcrb
xor
sbbl
imul
and
fiadds
repz
sub
aas
int
jo
aam
fistpll
xor
inc
out
mull
dec
and
mov
ljmp
jmp
jmp
add
jl
repz
jmp
movsb
add
mov
jo
popa
jge
subl
ja
pop
lcall
jecxz
jl
jp
mov
out
insb
jl
dec
sbb
inc
fsub
pop
out
enter
mov
sahf
loope
mov
fcmovne
xor
jp
pop
and
ss
outsl
inc
push
data16
xor
ret
xchg
jmp
sahf
divl
mov
das
sub
outsb
mov
aam
jae
mov
sti
mov
xchg
outsl
test
jne
js
jecxz
pop
imul
ljmp
int3
mov
push
stos
push
jecxz
inc
adc
das
adc
fwait
and
sbb
lcall
test
xor
data16
or
sub
addl
shr
push
fldl
dec
pop
add
lret
adc
jb
mov
inc
lar
push
add
mov
mov
mov
fs
lods
xor
outsb
lea
mov
jns
ja
insb
pop
int
clc
in
push
leave
aaa
and
cmpsb
int3
inc
dec
scas
xlat
insb
into
into
lods
add
jmp
imul
cmp
sbb
js
je
mov
int
and
fldcw
xchg
loop
cmp
movsb
sti
inc
push
in
in
lret
xor
mov
testl
lcall
add
push
sbb
dec
pop
xchg
cmpsb
repnz
ljmp
sbb
inc
cmp
aaa
add
mov
leave
push
insb
insl
xchg
xor
jb
out
out
push
pop
pusha
push
popf
fisubs
cs
mov
loope
mov
push
mov
pusha
dec
xor
nop
push
adc
jb
movsb
pop
jbe
push
sub
enter
lahf
bound
lds
repnz
sub
xor
jno
inc
lcall
iret
dec
and
rolb
fmul
cmp
jae
fidivrl
das
fs
hlt
pop
bnd
mov
sbb
mov
inc
jge
shll
enter
and
adc
addr16
jle
aas
mov
push
cli
mov
aad
decl
mov
pop
fcoms
or
mov
mov
out
add
xchg
out
std
scas
lods
cwtl
mov
add
jo
or
pop
gs
add
std
mov
mov
xor
push
stc
std
mov
xlat
aam
ljmp
inc
fcom
into
test
inc
and
dec
mov
xor
pop
inc
dec
sarl
negb
mov
sub
sbbb
or
mul
mov
outsb
sbbb
jb
cmp
mov
sub
pop
cmp
mov
xchg
out
sbb
jge
mov
dec
mov
in
xor
xchg
sbb
mov
sub
inc
dec
lods
fmulp
loopne
mov
add
aad
aad
or
mov
cmp
test
test
pushl
test
inc
call
sbbl
pop
daa
repz
push
sub
push
hlt
mov
cmp
pop
repz
outsb
add
xor
pop
xor
enter
rcrb
repnz
xor
jne
fists
int
loopne
mov
jl
stos
mov
xchg
mul
lods
ds
lds
inc
dec
jne
mov
fwait
cmp
mov
sbb
xor
jl
into
std
jge
mov
cmp
pop
enter
pop
mov
cwtl
and
inc
rcll
jle
lock
mov
aaa
scas
cmp
jne
loopne
ret
cmpsl
ja
fsts
shlb
out
xchg
scas
fistpll
sarb
stos
pop
test
mov
movsl
xchg
sbb
push
ror
lret
cmpsl
and
mov
mov
jg
xlat
les
lret
inc
and
jne
movsl
test
mov
pop
jg
push
aaa
loop
sbbb
jbe
dec
shrb
and
inc
push
jmp
add
add
pusha
cltd
jmp
push
popa
je
pop
insl
jle
inc
daa
imul
xchg
enter
and
inc
sub
jb
test
inc
cmpsl
xchg
das
test
push
pop
in
mov
shl
inc
push
in
movsb
outsl
push
xchg
sti
xor
ss
repnz
jge
pop
out
mov
add
shr
fmull
roll
lods
out
pop
aad
xor
or
jecxz
clc
or
icebp
jbe
add
mov
scas
mov
pmulhuw
or
iret
inc
cmp
xorb
pop
push
daa
adc
and
cwtl
pusha
cmp
pop
cmp
add
xchg
jno
mov
push
insl
adc
cli
xlat
psubsw
mov
push
and
jae
add
hlt
mov
and
sub
cmp
and
add
pushf
inc
lds
push
and
dec
mov
lods
xchg
insl
or
mov
jmp
mov
mov
mov
scas
dec
mov
stc
mov
mov
mov
sub
pop
push
dec
mov
cmp
int3
mov
fdivl
mov
push
xchg
mov
jae
or
sbb
sub
mulps
cli
mov
and
xor
xchg
xchg
clc
cmp
call
pushf
push
xor
mov
xorb
pop
sub
jne
jmp
cli
mov
sbb
dec
out
orl
test
je
xor
push
inc
rorl
in
adc
push
and
int
lcall
xor
pop
xchg
and
popa
jno
mov
mov
push
mov
addr16
or
mov
scas
mov
repz
rol
push
pop
mov
cmp
test
aam
add
mov
cli
and
ret
mov
cmp
jp
cmpsb
into
sbb
in
hlt
mov
push
pop
aaa
inc
outsl
add
cmp
shrl
sbb
rorb
or
jns
fistpl
in
les
mov
xchg
pop
call
jnp
mov
inc
mov
push
shlb
mov
add
icebp
mov
popa
mov
push
push
add
xchg
sub
adc
inc
inc
xchg
adc
pop
mov
add
decl
jae
xchg
pop
rorb
add
sub
leave
sub
data16
loope
push
adc
cmp
addr16
or
aam
push
sbb
jmp
push
bound
out
mov
push
pop
xor
int3
loopne
pminub
aaa
nop
pop
loope
psubw
push
jp
enter
out
dec
or
xchg
adc
je
loope
addb
lret
cld
mov
and
faddp
xchg
in
sbb
test
scas
jae
jl
lret
mov
imul
push
scas
jle
dec
je
push
inc
mov
lock
sub
decl
and
leave
lea
or
popf
mov
dec
pop
mov
and
push
push
jmp
push
dec
lret
pop
mov
sub
cmp
nop
mov
das
push
lcall
mov
pusha
mov
ret
adc
insb
adc
push
cld
sbb
pop
sbb
pop
jno
repnz
int
adc
mov
daa
int3
repz
sub
pop
or
jno
addl
jmp
mov
ds
fadds
shrb
push
stos
leave
cmp
inc
loopne
dec
leave
push
mov
insb
shrl
push
fiaddl
out
cmp
jg
push
out
or
or
or
xchg
mov
push
cmpsb
movsl
jp
sbb
lea
repnz
mov
test
sbb
imul
je
xchg
lea
std
loope
jmp
das
lcall
jp
mov
sub
rol
jmp
cmc
mov
aas
pusha
mov
inc
cmpl
inc
ja
fs
ss
fwait
xlat
jge
sahf
mov
lret
mov
fildl
cmc
lds
xor
sahf
fcmove
jp
int3
test
scas
mov
in
and
fmul
inc
je
cld
xor
and
push
cwtl
test
cwtl
jmp
cmc
pop
jne
push
pop
repz
sub
pushf
mov
imul
pop
pop
xchg
mov
sub
fisttpll
or
idivl
dec
dec
sbbl
mov
es
dec
add
popf
mov
popf
cmp
or
repnz
insl
out
je
xchg
je
test
cmp
imul
xchg
xchg
mov
clc
jle
mov
int3
rclb
popl
arpl
fwait
xor
adc
test
add
sbb
sbb
hlt
repnz
jmp
scas
ja
xor
stos
push
scas
dec
dec
xor
mov
jb
divb
cmpsb
mov
jg
enter
or
xchg
outsb
cmp
mov
mov
sub
and
or
orl
push
cmp
dec
aad
and
fwait
inc
dec
in
sub
cltd
aaa
dec
sbb
mov
test
adc
mov
lea
daa
popa
mov
das
sbbb
sbb
mov
sbb
cmp
test
jmp
ret
test
es
not
bound
push
adc
aam
sub
jno
adc
pop
jge
mov
outsl
movsb
cmc
jnp
dec
gs
lcall
xor
xor
xlat
and
bound
sahf
sbb
cmpsl
xchg
mov
mov
rcrb
or
cmp
add
mov
mov
shlb
hlt
push
lret
std
cmp
icebp
jb
pop
fnstenv
ret
and
inc
stos
aaa
cmp
adc
aam
adc
dec
inc
push
adc
pop
aaa
sbb
sub
loope
testb
dec
pop
loopne
or
pop
jo
xchg
adc
out
add
jno
mov
push
pop
aaa
jge
bound
sub
cmpsb
in
cltd
gs
sub
dec
pusha
push
test
push
imul
aaa
loope,pt
sub
mov
push
cmc
or
ljmp
mov
xchg
repz
and
or
mov
lea
cmpl
and
repz
cmp
sub
pop
xchg
shrb
push
or
in
push
testb
shlb
push
clc
xchg
movsb
xchg
mov
jecxz
out
scas
sub
xchg
aaa
mov
push
out
dec
mov
push
push
push
and
xor
out
pop
aad
jb
push
xlat
lods
jp
mov
insb
mov
mov
mov
fwait
aas
cmp
shlb
stc
outsb
cli
mov
push
leave
add
mov
mull
jp
ret
inc
xchg
outsb
mov
fs
mov
fldenv
xor
repz
in
addr16
in
mov
xor
mov
mov
dec
in
fcmovnu
pop
xor
add
xchg
icebp
ret
les
push
dec
icebp
mov
adc
fisttpl
jae,pt
mov
popa
add
daa
cmp
mov
mov
aam
xchg
inc
loopne
inc
sbb
mov
out
repnz
fstpl
mov
xchg
pop
sbbl
jle
fsubs
test
dec
xor
imul
cmp
in
jbe
push
repz
ret
or
ds
insl
lret
sub
fstps
lds
xor
aad
pop
dec
mov
aaa
push
rorb
not
xor
loopne
xorl
nop
int3
jge
mov
fistpl
pop
push
xchg
inc
imul
pop
sbb
fsubr
cmp
sub
lcall
push
insl
mov
and
lret
inc
es
fwait
inc
jnp
cli
or
and
sub
cmp
push
int
and
add
sbb
sub
inc
jae
mov
dec
or
jbe
sbb
pop
adc
imulb
push
in
movsb
loope
adc
test
mov
repz
arpl
add
mov
stc
mov
jno
pop
lret
roll
xchg
and
xor
in
mov
xor
in
ljmp
mov
lods
lret
loop
or
dec
fistpl
shrl
ficomps
lock
lock
movsl
mov
xchg
out
mov
lods
fnsave
iret
cld
call
sub
ret
dec
ret
mov
pusha
test
faddl
jg
andl
jp
or
in
adc
daa
sbb
sahf
jae
adc
jmp
xor
mov
mov
aas
or
test
int3
addr16
loop
enter
into
push
cmpsb
mov
or
add
aas
add
inc
into
jle
popa
sbb
ja
mov
sub
mov
sbb
lds
mov
jne
les
push
jge
call
jmp
push
shll
mov
sub
dec
sti
jns
popf
arpl
mov
std
sbb
es
lock
jp
and
sbb
rorb
inc
mov
pop
push
add
repnz
xchg
jmp
sub
sbb
das
jne
cltd
js
sbbl
jns
xor
push
xchg
sub
test
popa
mov
rorb
xor
push
arpl
sbb
dec
mov
movsl
or
cmp
sub
sub
jmp
lret
or
dec
or
add
rol
xchg
or
sub
roll
and
adcb
lret
mov
cs
push
insb
add
rcll
pop
fmull
push
inc
loop
sbb
in
mov
xlat
adc
into
jb
xor
dec
das
xchg
iret
fisttpll
dec
mov
pop
mov
xchg
pop
xor
daa
imul
push
jl
mov
jbe
inc
lods
xor
lret
inc
bnd
mov
dec
sbb
pop
cli
and
jne
arpl
out
aas
sub
xor
and
dec
shld
shl
pop
pop
aas
pop
lcall
loope
ret
push
subb
inc
sarl
adc
dec
imul
testl
xchg
push
imul
xor
jnp
mov
sbb
xchg
xchg
inc
mov
pop
dec
sub
xchg
cmpl
adc
pop
or
leave
adc
mov
in
adc
inc
sub
bound
and
or
mov
scas
dec
cmp
addb
icebp
sub
mov
pop
movsb
fistl
or
insl
cli
icebp
dec
sahf
or
lret
stos
aas
jecxz
cs
pusha
inc
jo
dec
mov
jae
jbe
and
xchg
sub
shl
jmp
fs
cs
sbb
fisubrs
cwtl
adc
cmp
fwait
inc
dec
rorb
stc
lea
mov
jne
push
sub
cmp
push
out
adc
cmp
negb
mov
pop
in
es
cmpb
cli
sub
stos
adc
mov
push
jo
add
movntq
push
out
sti
xchg
adc
ljmp
mov
push
dec
xor
push
and
addl
movsb
adc
and
mov
adc
imul
xor
jns
mov
adc
push
int
out
pusha
or
inc
xchg
cmpsl
ss
cmp
jp
int
xor
std
dec
mov
sbb
cwtl
inc
aas
adc
cmp
xchg
dec
lea
fnsave
cmp
gs
mov
mov
push
aam
pop
xor
fwait
icebp
test
sti
es
jle
cmp
fmull
repz
inc
xchg
testl
imulb
faddl
pop
push
push
sub
popf
mov
sar
xchg
and
push
add
xchg
roll
pusha
stc
fadds
jp
test
clc
lretw
inc
pop
loopne
jne
push
dec
push
lock
out
insl
cmc
repz
mov
jno
sbb
xor
test
jge
in
dec
pop
xchg
pop
hlt
ds
test
mov
push
jle
int3
mov
cmp
pop
fs
dec
out
fists
insb
pusha
xor
add
pop
push
enter
or
or
aas
std
add
inc
sub
mov
mov
dec
out
es
popf
mov
mov
out
or
adc
add
add
and
sub
or
mov
add
and
mov
pop
out
fdivrp
xchg
loopne
mov
hlt
cmp
idivb
push
pop
xchg
pop
lret
enter
test
mov
jnp
cmpsb
mov
sub
mov
cmp
inc
daa
pop
cmp
push
cmp
stc
xchg
fwait
data16
mov
and
or
dec
jp
icebp
xchg
dec
sti
xor
cmp
sub
pop
or
test
lods
jb
sub
repz
add
ss
xor
add
or
gs
or
push
out
mov
loope
hlt
jnp
dec
cmc
stos
dec
lds
ds
pushf
fs
mov
sbb
xlat
inc
scas
ja
pop
sbb
cmp
jns
sub
sbb
mov
popf
and
fistps
adc
cmpb
inc
cmp
jecxz
ljmp
sbb
andb
xchg
les
fidivl
out
xchg
dec
lret
add
ljmp
xchg
push
imul
pop
sbb
adc
xchg
xchg
mov
jg
test
jl
jg
div
sahf
mov
mov
jnp
scas
sbbb
jno
push
js
mov
adc
inc
sub
ds
inc
mov
mov
push
loope
adc
mov
mov
lcall
push
movsl
pop
mov
jge
aaa
fdivrl
push
or
push
iret
mov
inc
lret
in
xor
cmp
or
adc
push
jb
jmp
out
mov
sbb
mov
jmpw
sbb
pop
jo
add
inc
inc
dec
add
pop
jecxz
subb
cmpsl
add
mov
shll
jp
repz
aas
mov
cs
xchg
mov
lcall
addr16
enter
adc
mov
mov
loop
out
into
jg
pushf
dec
movsl
popa
call
push
xchg
subl
push
pop
pop
popf
jno
js
cmc
pop
xchg
cmp
push
fs
or
dec
aas
fsubl
mov
ret
xchg
cmp
inc
xor
inc
xlat
sbb
jp
mov
push
and
dec
fwait
mov
outsb
pop
lods
inc
test
fucomi
andl
xor
stos
mov
pop
loop
shrl
inc
push
cmp
push
mov
sahf
popf
adc
jg
mov
jge
insb
add
fs
test
and
mov
dec
sahf
out
add
push
rclb
jmp
lds
popa
pop
nop
mov
mov
or
sbb
jmp
into
mov
ss
pushf
xchg
enter
sub
insl
pop
imul
aam
stos
scas
and
daa
jg
bnd
mov
mov
xchg
popa
jl
scas
push
lds
jo
mov
dec
adc
and
dec
push
mov
pop
dec
enter
xchg
push
daa
icebp
pusha
mov
dec
movsb
cmpsl
dec
loop
lods
push
leave
imul
sbbb
nop
adc
adc
loopne
int
sub
xor
cmc
sub
mov
adc
add
push
les
xchg
and
mov
xchg
xchg
mov
call
mov
pop
adc
mov
mov
or
push
pop
insb
or
jnp
pop
lcall
push
mov
hlt
cmpsl
xchg
mov
orl
and
and
push
cmp
stos
add
pusha
negl
sbb
sub
shr
mov
mov
mov
rcrb
mov
adc
add
push
sbb
sbb
inc
call
xchg
shrb
aad
mov
dec
jmp
mov
xor
lods
bound
cmp
add
insl
inc
icebp
cmpsl
and
inc
frstor
ljmp
inc
sub
loope
cld
hlt
cld
cmc
xor
ljmp
mov
ds
dec
shll
outsb
cmp
movsl
dec
or
divl
push
pop
ret
cmpb
arpl
stc
dec
xlat
sahf
mov
xchg
inc
xor
inc
cmp
adc
push
cmp
ja
adc
pushf
pop
dec
dec
cmp
and
sbbl
or
sbb
int
adc
adc
outsl
js
imul
rcrb
loope
or
je
xchg
lea
cmp
mov
push
sar
or
or
and
comiss
push
pusha
aas
mov
lahf
dec
cmp
sbb
ror
mov
int
sub
loopne
and
adc
out
jecxz
ljmp
mov
lahf
test
pop
pop
jecxz
mov
ljmp
lret
popf
les
call
repz
or
sti
and
add
imul
xchg
pop
addl
mov
movsb
mov
lcall
mov
out
push
dec
ss
push
cmp
int
pop
fwait
mov
jge
imul
dec
jmp
add
cmc
subb
push
pop
push
int
jp
add
fs
lcall
pop
aas
outsl
arpl
mov
std
shll
and
add
aas
cld
enter
add
add
push
loop
adc
addb
popa
and
ficomps
lcall
lcall
shr
and
cld
pop
inc
pop
mov
js
das
or
outsl
cmp
xchg
add
cwtl
sbb
loopne
lods
xchg
xor
pop
iret
loope
adc
ja
fisubrl
mov
bound
fwait
mov
dec
rcrb
adc
imul
pop
mov
pop
push
outsb
adc
out
push
div
mov
dec
negl
add
mov
jnp
lret
push
sbb
and
jmp
enter
call
xchg
mov
mov
fsts
out
cld
lods
sahf
sti
jae
xchg
cmc
aaa
xor
addr16
jb
test
dec
pop
jae
sub
inc
ret
push
sub
cltd
mov
or
dec
mov
shlb
scas
je
arpl
pop
push
xchg
jno
aam
pop
or
adc
loop
ret
xchg
or
sbb
movsb
outsb
test
push
mov
jp
pop
jg
ret
test
mov
hlt
xor
sub
and
lret
fiadds
cmp
push
cmpl
sahf
int3
scas
and
rorb
inc
inc
loop
faddl
add
mov
pop
sbbl
movsl
pop
pusha
leave
sbb
adc
or
in
sub
add
sub
in
stos
cmp
xchg
dec
jb
xchg
push
dec
inc
dec
mov
das
dec
and
pop
inc
or
data16
in
in
xor
xor
andb
jns
dec
push
and
fadds
dec
in
sbb
lock
sarb
push
pop
ss
int
idivl
jle
aam
into
test
xchg
pusha
jge
jg
mov
xor
mov
sti
add
pop
fldcw
out
cmpb
xchg
xorb
fisttpl
insl
mov
mov
sbb
xor
push
mov
rcll
stos
scas
xor
jle
xchg
xchg
xchg
sbb
mov
jbe
jp
pop
in
cmpsb
jl
or
sub
sub
pop
movsb
inc
mov
xchg
xchg
xor
ds
mov
mov
cld
xlat
push
inc
sbb
cltd
stos
sti
fcmovne
xor
xchg
jns
inc
cmp
jmp
test
cmp
jne
ret
subb
mov
cld
imull
addl
or
jecxz
dec
or
imul
cs
test
sbb
push
jecxz
and
mov
push
mov
fimuls
pop
xor
fcmovu
daa
inc
push
sub
cmpsb
inc
mov
sbbl
mov
mov
ror
es
and
push
xchg
mov
xor
push
stc
dec
adc
cmp
clc
add
popf
subb
sub
xor
mov
mov
out
adc
and
push
pop
xchg
or
jb
mov
daa
rcll
mov
fadds
lret
cmp
mov
bound
subl
lea
pop
cmp
mov
push
mov
sub
mov
in
mov
inc
inc
xor
aam
mov
mov
sub
cltd
fstps
das
fcmovnbe
mov
xchg
aad
sub
mov
xchg
push
stos
out
nop
pop
pop
mulb
pop
mov
dec
es
push
push
adc
lods
push
sub
push
lods
or
pop
jae
cmp
lds
lds
shrb
test
lahf
push
aaa
movsb
vmovss
addr16
jae
imul
dec
xchg
pop
rorb
es
scas
sbb
mov
aas
cmp
das
test
push
stos
inc
lea
test
ja
lock
pop
rcrb
sahf
es
or
cmp
fnstenv
push
jb
mov
xchg
sbb
into
dec
inc
pop
loop
push
iret
push
pop
xchg
aas
inc
inc
jmp
pusha
xchg
adc
loope
adc
dec
mov
xor
lcall
repnz
and
in
jno
xor
paddw
add
xchg
cli
pop
fcom
out
rcrl
sahf
jae
cli
push
xchg
cltd
out
shl
in
push
out
pop
adc
ss
fisttps
movsb
xor
jnp
daa
cmp
mov
or
xchg
sbb
fwait
sbb
mov
shll
sbb
daa
test
mov
sub
aad
fwait
nop
ret
in
sub
mov
enter
xchg
push
repz
jbe
mov
pop
cmpsl
insl
xor
push
pop
and
sahf
lahf
inc
fs
and
inc
in
xor
adc
jns
push
dec
inc
mov
jmp
mov
int3
int3
or
jmp
xchg
cli
adc
cmp
call
icebp
test
hlt
addr16
jb
call
mov
push
sub
sbb
mov
add
xchg
mov
mov
mov
sbb
cltd
pop
aam
mov
mov
cmp
shr
push
xchg
sub
sbbb
outsl
test
mov
push
and
nop
in
mov
adc
push
mov
lret
mov
pusha
cmp
loopne
ret
pop
push
sub
push
mov
loop
in
popw
and
movsl
cmpsb
cmpl
das
inc
dec
lods
and
dec
popf
xorl
and
xor
rcll
and
xor
imul
pop
and
cmp
adc
sahf
shlb
mov
movsb
sub
push
push
sub
aaa
and
std
and
cmp
mov
push
push
sub
dec
pop
test
or
testl
adc
jge
js
push
dec
decl
lret
cmp
gs
js
aad
mov
push
cs
push
test
sbb
jo,pt
inc
pop
mov
cmp
nop
and
inc
jnp
or
jne
push
mov
push
lcall
test
imul
rcrb
jns
mov
std
popa
xor
mov
jb
xchg
dec
mov
hlt
cmp
push
xchg
lock
into
fs
jb
loope
cmp
dec
ret
xchg
jl
jp
aad
adc
daa
lds
sbb
bound
lcall
pop
dec
test
add
int
cmp
ja
jo
mov
mov
fidivrs
xchg
lds
lcall
fwait
jl
clc
dec
shll
out
mov
push
test
clc
insb
test
mov
pop
ja,pt
movsl
out
jge
jb
mov
cmc
push
mov
pop
ficompl
inc
push
pop
push
mov
icebp
mov
inc
push
adc
mov
rcr
mov
and
push
popf
push
stos
adc
mov
rcrl
ja
movsb
shrl
xchg
inc
sti
fldenv
shlb
sbb
mov
mov
sub
sub
adc
loop
inc
adc
insb
scas
mov
subb
cmpsl
mov
hlt
mov
push
pop
cmpsl
xchg
push
lock
push
inc
stos
adc
mov
int3
mov
cmpsb
xchg
mov
enter
jnp
mov
jp
mov
mov
mov
jmp
lret
ret
pop
push
sbb
insb
pop
js
lods
jp
sbb
sbb
sarb
or
add
test
xchg
xorb
adc
jg
dec
out
adc
sarl
cmpsb
rorb
push
pop
mov
pusha
pop
lahf
adc
loopne
es
aam
daa
es
fdivrl
inc
shlb
xor
lcall
cmpl
sbb
lcall
in
lahf
adc
fsubrl
sub
lcall
bnd
cli
test
insb
add
inc
mov
test
out
movsb
sar
call
sub
sbb
imul
and
sbb
div
dec
imul
imull
push
scas
pop
mov
lret
jbe
xchg
dec
fsubrl
xchg
rcl
repz
stc
sarl
mov
insl
and
addr16
inc
sub
mov
xchg
cli
xor
and
test
dec
out
pop
movsb
faddl
xchg
mov
dec
mov
mov
js
mov
xchg
mov
jg
cmp
jg
cmpsl
out
fdivrl
lock
push
js
sbb
xor
mov
xor
ret
scas
out
sbb
stos
add
out
ds
aad
test
adc
lods
jl
loope
inc
and
mov
leavew
gs
push
inc
lds
mov
cli
cmpsb
ror
cmpsl
lret
or
sbb
jne
repnz
xor
fcomp
and
lea
pop
loope
dec
and
or
dec
lcall
das
and
cli
out
ret
xlat
mov
outsb
cmc
test
sti
in
or
icebp
sbb
or
idivb
bound
mov
fwait
rcrl
mov
sub
adc
sbb
pop
add
popa
rcll
and
cmp
xchg
pop
in
jge
mov
or
jl
inc
push
ret
lock
dec
in
or
mov
inc
mov
mov
mov
mov
inc
rolb
lds
clc
mov
adc
push
and
stos
push
fldl
fistpll
xchg
jle
stos
mov
xor
xor
sub
pop
jne
mov
sub
add
jns
imul
inc
or
mov
xchg
jo
aaa
in
push
je
dec
cld
cmp
cmp
mov
dec
mov
out
fsub
push
aad
inc
or
out
notl
mov
in
prefetcht1
incb
std
mov
push
cmp
sub
mov
ljmp
dec
lods
inc
test
pop
mov
rolb
adc
or
mov
pop
mov
test
popa
lret
jns
push
cmp
faddl
lea
scas
sub
mov
xchg
insb
loope
jae
negl
int
xor
test
addr16
or
loope
fsqrt
faddl
das
dec
imul
push
lcall
adc
inc
imul
push
adc
xor
lods
cld
jb
lock
cmp
or
sub
mov
cld
jle
sti
mov
push
cs
xlat
add
or
xchg
add
add
xchg
dec
lea
adc
std
daa
imul
lods
cmp
xchg
jle
and
out
add
sbb
dec
out
loope
loope
add
inc
adc
mov
mov
dec
inc
ds
cmc
into
popa
or
es
sbb
mov
rcl
adc
jp
mov
dec
xor
popa
lock
imul
xor
inc
push
dec
jmp
cld
mov
aaa
inc
push
cld
add
sub
pop
loope
jmp
mov
icebp
xchg
cmpb
faddl
mov
push
jmp
cmp
pop
leave
jp
jmp
dec
mov
xor
push
pop
leave
ss
hlt
adc
pop
scas
cli
sbb
inc
in
jns
add
cmp
es
out
into
vmaxpd
jns
fcmove
nop
lods
popf
seto
cmpsl
or
mov
pusha
xchg
dec
xor
inc
fwait
aaa
or
mov
int3
mov
mov
xchg
mov
out
push
std
adc
sub
sbb
iret
xor
imul
hlt
push
jno
jp
test
cmp
movsl
aaa
pop
lgs
sbb
ret
push
push
test
cmp
jmp
stos
incb
out
into
mov
imul
lahf
adc
mov
loope
loop
xchg
seto
aas
mov
sti
sub
add
shrl
cmp
nop
mov
add
jmp
negl
mov
adc
jo
cld
dec
std
lds
fcom
gs
and
scas
mov
mov
xor
ja
xchg
jb
pop
lock
in
gs
sbb
outsl
xchg
ffree
lcall
aad
mov
mov
aam
idiv
xor
adc
mov
movsl
rol
testl
or
fisttps
sahf
outsb
inc
jle
stos
gs
dec
jmp
sbb
enter
andl
das
fsubs
repnz
mov
adc
arpl
xor
arpl
push
adc
shll
enter
and
mov
cmp
sub
jo
gs
dec
push
movsw
mov
fildll
sub
leave
cmp
dec
dec
mov
push
loopne
stos
mov
inc
popa
lock
pop
mov
mov
pop
inc
pop
mov
add
and
mov
lods
lcall
jmp
stc
test
sarb
je
cmp
jmp
mov
andb
ss
push
mov
xor
lcall
in
sbb
jmp
mov
insb
push
je
movsb
mov
xor
lds
cmc
iret
ds
addr16
pop
and
arpl
sbb
mov
popa
add
pop
and
pop
mov
clc
mov
clc
stos
sbb
and
pop
xchg
push
push
add
test
lcall
out
icebp
jnp
xchg
fwait
or
sub
loopne
dec
test
jo
mov
xor
jno
fdivr
lock
cwtl
inc
lds
adc
call
mov
mov
and
negl
out
movsb
insl
adc
jae
xlat
mov
les
mov
inc
imulb
lret
pop
pop
mov
out
or
xorb
movlhps
mov
jae
adc
or
popa
outsb
adc
out
pop
push
inc
push
cmp
movsl
imul
stos
test
mov
cmp
and
jle
adc
in
inc
notb
jb
iret
adc
mov
pop
sub
out
dec
mov
aaa
sbb
mov
jecxz
loope
mov
mov
pop
arpl
adc
inc
jb
and
jecxz
adc
sbb
daa
jnp
lahf
mov
int
js
fdivrs
arpl
decb
aas
popf
pop
jae
mov
or
pop
out
outsb
test
add
fwait
addb
adc
xchg
arpl
pop
push
sub
in
xor
or
inc
dec
popa
and
in
mov
popf
mov
mov
lds
aam
ret
mov
xchg
add
cmp
and
popa
cmpsb
enter
push
ja
jb
daa
and
sub
les
shlb
or
or
pop
cli
add
pop
and
das
mov
mov
ret
mov
call
or
test
sbb
push
cld
or
push
fbstp
xor
das
ja
out
sbb
les
cltd
mov
cmp
and
mov
mov
icebp
jecxz
mov
aaa
or
xor
lock
fwait
into
cmpsl
rcll
inc
pop
js
std
in
mov
icebp
mov
mov
inc
cli
sub
pop
pop
or
push
pop
jb
pusha
xor
push
in
add
jmp
xor
adc
subb
sub
dec
scas
popf
popl
dec
lcall
mov
pop
and
loope
out
shrb
push
dec
sub
or
sbb
shll
cltd
repnz
inc
inc
add
push
or
sbb
je
add
cmpsl
out
ror
and
insl
or
pushf
shll
fiaddl
cmp
test
jbe
mov
nop
xchg
pop
pop
ljmp
jp
sbb
test
pop
fidivrs
push
nop
cmp
sub
in
data16
inc
lods
push
mov
out
addr16
jbe
imul
cmp
or
xor
insb
shr
cld
shr
push
mov
pop
ljmp
out
adc
stc
out
sub
push
lea
jg
mov
jns
push
fdivs
dec
movsl
sub
cwtl
or
int3
pop
test
jmp
in
dec
js
imul
pushf
sbb
inc
push
outsb
xor
pop
in
add
jns
add
mov
stos
lahf
xlat
sbb
and
and
ja
je
mov
dec
fdivrs
dec
enter
adc
outsb
into
in
jg,pn
cmpsl
lret
fnstenv
xor
inc
xor
sub
ds
sub
pop
mov
dec
pop
stos
pop
jge
loop
xchg
cmpsl
ret
mov
xchg
pop
stos
and
insb
or
jge
dec
fldenv
xor
out
sbb
jecxz
pop
jae
add
jo
ds
fbld
dec
icebp
adc
orl
outsb
sub
mov
adcl
push
mov
shlb
daa
out
lods
fistl
outsb
sub
xchg
movsl
scas
pop
in
loopne
mov
sbb
bound
mov
cmp
out
adcb
and
arpl
mov
aam
lods
int3
mov
rdpmc
fdiv
or
cmp
mov
ret
or
push
dec
push
inc
cmp
jno
hlt
dec
outsl
mov
push
xorb
stos
imul
xor
pop
hlt
mov
xchg
clc
sub
out
sbbl
les
mov
out
mov
mull
aaa
xchg
adc
ss
es
jecxz
add
dec
lods
aas
push
pop
mov
fucomip
les
std
cmpsb
insl
inc
andb
out
push
push
push
mov
pop
mov
stc
mov
xchg
shrb
pop
sbb
mov
mov
pop
dec
fmuls
stc
je
nop
loop
dec
xchg
jo
popa
push
pop
addl
pushf
jmp
test
xchg
mov
iret
jbe
push
xchg
xchg
shll
popa
addl
in
mov
into
shrl
fs
xchg
sbb
pop
mov
pop
ss
scas
xchg
sbb
andb
loopne
xor
lret
mov
xchg
cs
inc
ds
and
imul
jae
mov
xor
or
mov
jl
jmp
adc
add
xor
xchg
jg
cmp
dec
outsb
sbb
enter
adc
enter
cmp
xchg
cmp
pop
lea
push
rcrb
mov
jmp
jp
data16
jp
test
movsl
sbb
into
xor
xor
xchg
dec
push
lods
popa
or
cwtl
xchg
or
aam
add
rorl
push
ret
jns
jmp
mov
movb
or
inc
rclb
mov
add
sub
enter
addr16
mov
adc
cltd
dec
ljmp
ja
jmp
ds
mov
mov
faddp
getsec
jge
fcom
mov
out
cmc
ret
dec
jp
jecxz
repz
shlb
xchg
stos
add
or
dec
leave
ljmp
lods
inc
and
push
dec
leave
pop
push
lock
sub
push
or
mov
ss
lret
sub
sbb
stos
jge
stos
shlb
mov
int3
mov
mov
fisubrs
test
leave
add
andl
pusha
aas
mull
pop
bound
cmp
ret
inc
cmp
fs
mov
push
inc
aad
std
push
mov
insb
stc
fidivrs
aam
fs
sub
pop
sub
sahf
sbb
mov
icebp
pusha
xchg
push
ja,pt
adc
pop
sub
sti
scas
pop
mov
cmp
test
rcr
addb
jb
add
lahf
push
adc
and
push
clc
lret
push
ljmp
pushf
bound
iret
cmp
dec
dec
cwtl
adc
aas
mov
mov
loope
movsl
lds
fnstcw
pop
or
jg
add
jno
mov
and
mov
sti
bound
mov
aas
jne
inc
xor
out
sbb
cmp
mov
daa
stos
adc
or
sbb
xor
out
mov
daa
leave
add
add
pushf
rcl
push
push
into
jbe
xorl
xchg
mov
fucomip
mov
and
es
jae
addr16
xlat
insb
insl
push
mov
jns
jmp
xor
dec
fdivs
std
popf
inc
das
push
cmp
sti
dec
lods
mov
and
lock
fdivrs
mov
and
xlat
cmp
sub
xchg
xchg
rep
fistps
cmc
sete
out
push
mov
mov
loopne
or
scas
mov
dec
or
imull
mov
sbb
mov
lret
mov
add
mov
inc
xor
shll
inc
pop
mov
push
popf
testb
jecxz
cmp
ja
xor
mov
and
loopne
ror
int
xchg
jp
inc
pop
add
xlat
cmpsl
xchg
jno
sbb
repz
pop
mov
rcl
push
push
leave
jnp
mov
xchg
or
sbbb
mov
jg
je
sub
gs
or
sahf
cmpsl
sbb
test
mov
fs
inc
stos
sbb
les
pop
aad
jo
push
xchg
jl
fwait
push
mov
add
ret
inc
test
add
out
insl
loopne
stos
push
andl
mov
push
negl
shr
or
sar
outsb
push
pop
xchg
inc
jmp
xlat
cli
cmp
sbb
jno
sub
xor
mov
or
scas
pop
cs
push
out
or
ljmp
mov
adc
cs
shl
jge
les
add
leave
stos
jmp
pop
adc
out
jg
insl
outsl
sbb
push
ljmp
and
add
jo
imul
push
rclb
jnp
test
loopne
insb
mov
js
mov
lds
in
call
jmp
mov
lea
lcall
subps
aam
cmp
cmp
cmp
mov
ret
mov
out
addr16
xchg
mov
in
sbb
pop
mov
and
cmp
push
mov
mov
insb
incl
push
sub
inc
push
pop
or
movsb
cmpsl
in
std
test
lret
jg
lds
pop
or
ror
sub
dec
mov
call
pop
orb
and
mov
dec
xchg
push
jbe
loop
aad
lock
xor
aam
lret
pushf
xor
test
dec
lret
or
pusha
jno
fistpl
sahf
jno
dec
call
ficomps
add
sub
in
dec
sbb
pop
aad
adc
sub
adc
testl
sub
sbb
lds
cltd
mov
push
das
das
xchg
xor
lods
outsb
cmp
sub
ss
pop
jbe
loop
mov
cmp
lahf
inc
sub
lahf
pushf
jo
mov
or
js
in
imul
sbb
mov
jecxz
jno
sub
scas
mov
sbb
call
scas
call
jo
lret
pop
stos
adc
loope
pop
mov
jl
add
sub
ljmp
pusha
xchg
mov
or
or
std
mov
xchg
add
scas
popf
int3
test
and
lret
rclb
dec
outsb
sarl
lcall
sahf
xchg
std
mov
sbb
imul
insb
adc
mov
dec
iret
and
cmpl
jno
lds
in
shrl
imul
inc
lea
lret
and
sub
mov
xchg
xlat
mov
icebp
outsb
stc
std
sub
pop
addr16
adc
shl
jmp
cld
movsb
adc
xor
push
xchg
push
popf
xchg
out
fsubrl
pop
xor
test
sub
shlb
mov
sbb
xchg
cmp
pop
xor
or
pop
sub
stc
decb
out
and
inc
loope
sbb
imul
bound
sub
jp
stc
add
add
icebp
mov
cmp
bound
xor
enter
dec
ja
out
cmp
pop
lcall
fimuls
dec
fildl
shll
sar
sbb
push
je,pt
xor
dec
insl
and
gs
jp
dec
loope
dec
jle
inc
popf
inc
push
imul
out
pop
dec
loope
cld
cli
roll
mov
and
xlat
lret
pushf
bound
lcall
xchg
icebp
or
pop
ret
xchg
fisubl
je
jl
push
jnp
xchg
loope
mov
jecxz
xor
adc
hlt
pusha
fistpll
sbbb
pop
cmp
fs
and
out
add
sub
push
or
push
mov
mov
daa
pop
dec
adc
jg
stc
dec
lods
clc
andb
push
push
int3
enter
and
xchg
fisubs
sub
add
das
mov
dec
add
insl
cmpsb
ss
enter
ja
hlt
bound
and
mov
loope
out
loopne
popa
add
mov
dec
call
push
rorl
sbb
testb
xchg
adc
xchg
aad
cmp
push
mov
mov
push
rorl
in
dec
sbb
cmc
out
sub
mov
mov
mov
roll
fisttpl
aaa
adc
dec
repnz
imul
mov
js
rsm
out
sub
xor
inc
mov
imul
mov
jbe
xor
mov
in
sub
adc
jb
js
daa
pushf
mov
shll
testl
fisttps
aam
xchg
imul
or
test
adc
lahf
movsl
in
push
aas
and
lcall
or
ds
pop
pop
pop
rcl
mov
dec
cmp
bound
sub
stos
loopne
test
jmp
stc
jb
lds
xor
leave
adc
test
pop
nop
imul
inc
pop
cli
out
pushf
mov
aad
sub
daa
dec
test
add
jae
lock
subl
sbb
stos
xchg
adc
imul
add
sub
and
lds
or
hlt
jg
mov
insl
jg
in
push
insl
enter
push
aam
adc
dec
std
ficompl
lock
popa
fucomp
jge
adc
sahf
std
dec
ret
mulb
xchg
dec
sub
xor
in
mov
cmovs
add
push
insl
das
inc
cmp
inc
sbb
sbb
push
out
nop
mov
aam
mov
insl
add
addl
push
add
xchg
lahf
aaa
movsb
scas
and
mov
jno
pop
push
fistpll
sti
mov
mov
test
adc
out
fdivrl
jbe
inc
cmp
mov
jbe
out
sub
enter
cmp
lcall
insl
notl
dec
dec
push
xchg
or
inc
clc
sbb
movsl
or
sub
cmp
adc
or
dec
adc
cmp
cmp
add
insl
cmp
jmp
push
popf
les
shlb
in
imul
mov
dec
cmpsb
or
icebp
mov
mov
push
in
icebp
imul
loop
push
cmpsl
faddl
pop
movsb
xor
lods
sub
loop
repz
or
fnstsw
hlt
inc
adc
xchg
push
icebp
dec
xchg
pop
fnstcw
shlb
ljmp
sbb
jecxz
jge
push
lods
jb
mov
imul
sub
test
push
lea
adc
mov
pop
movsb
cmp
leave
loopne
lock
adc
mov
imul
les
push
inc
mov
jle
mov
dec
xchg
lahf
sub
and
stos
pop
cmp
xor
aad
scas
dec
insb
mov
mov
or
ret
cmc
push
and
fs
jle
jb
mov
or
dec
adc
and
dec
dec
stos
push
shufps
jp
es
xchg
in
cmpsb
aad
or
add
adc
push
enter
adc
cltd
cld
mov
cmpl
jb
movaps
dec
adc
and
mov
pop
cmpsl
pusha
and
push
popa
push
lahf
xchg
std
push
xchg
roll
sub
push
aam
outsl
in
mov
test
pop
cmc
out
inc
fstps
push
movsb
insb
xchg
inc
pop
mov
xor
iret
mov
cwtl
pop
mov
scas
add
mov
pusha
ss
loopne
out
inc
sbb
gs
add
sbb
dec
rcll
sbb
in
ja
mov
xchg
test
jge
divl
mov
mov
pop
pop
sub
cmp
jmp
push
inc
and
sbbb
loopne
fwait
jo
pop
push
pusha
fwait
dec
out
mov
addr16
push
and
in
or
cmp
adc
sbb
pop
xor
pop
mov
dec
jo
jno
les
pop
hlt
ljmp
and
movsl
dec
cmp
out
sbb
push
jb
mov
add
repz
iret
adc
cmc
pop
into
lcall
in
andb
adc
loope
fimull
mov
mov
adc
and
ss
xor
xchg
push
xchg
and
xor
mov
push
mov
sbb
fs
fldenv
cmpsb
test
mov
int
jmp
pop
imul
lret
lds
sbbb
cmp
out
hlt
fidivrl
xor
mov
ja
dec
xchg
and
mov
movsl
inc
xor
pushf
bound
jno
xchg
scas
sarl
ret
add
push
fidivrs
fidivrs
out
nop
xchg
sbb
ret
mov
push
adc
mov
int
adc
xchg
outsl
and
movsb
sub
out
jbe
jae
add
in
or
imul
into
sbb
scas
push
pop
dec
jp
scas
repz
mov
mov
jle
inc
mov
cmp
popa
sbb
pop
lahf
sub
out
mov
fninit
scas
or
xchg
scas
aas
inc
and
add
dec
add
cmpsb
cmp
mov
cmc
push
in
mov
outsb
mov
outsl
scas
das
scas
lahf
test
cwtl
mov
inc
or
fs
addb
xchg
pushf
imull
pushl
xchg
insl
loope
jno
sahf
push
cs
jmp
ret
outsb
jo
pop
rolb
nop
dec
xor
mov
hlt
mov
inc
cld
mov
cmp
ljmp
inc
fiaddl
clc
ficompl
mov
adc
jb
jbe
push
in
sbb
das
push
out
and
pop
pop
int
in
sbb
xchg
daa
sbb
std
lret
pop
add
lds
jbe
mov
mov
fwait
add
out
frstor
sbb
inc
or
mov
xor
leave
ljmp
xor
or
mov
cmp
dec
enter
fistpll
cmc
cmp
push
addb
aas
daa
cmp
jnp
add
sub
ret
xchg
xor
fidivrs
sub
fcmovu
mov
popa
xchg
adc
adc
cmpsb
adc
jbe
inc
or
xchg
or
addb
scas
in
sbb
jnp
rcl
push
pop
push
mov
fsts
inc
cmpsb
fdivr
call
dec
jle
cwtl
mov
adc
and
daa
addb
mov
movsb
sub
aad
rolb
dec
or
ret
gs
cltd
inc
push
mov
clc
imulb
bound
dec
xchg
lret
xchg
sub
or
nop
push
xor
in
xchg
cli
loopne
lcall
lds
mov
xor
xchg
xchg
add
sbb
jecxz
iret
dec
push
xchg
out
jo
sub
mov
push
nop
cltd
icebp
shl
jmp
sub
inc
movsb
pop
jns
push
jle
aam
dec
push
sbb
ss
xor
leave
mov
jp
cmp
arpl
cmp
xor
jg
dec
pop
arpl
addl
or
test
fisttps
push
dec
add
push
daa
ss
push
inc
and
fists
jp
adc
cmp
xchg
add
pusha
sub
jmp
outsl
dec
adc
stc
push
pop
test
inc
pop
jb
ds
pop
hlt
lret
test
sub
push
inc
rolb
inc
roll
je
pop
out
in
test
pop
in
lret
jmp
rclb
daa
and
jno
nop
xchg
pop
in
inc
dec
jl
das
mov
test
mov
cmp
xchg
fnsetpm(287
cli
sub
jle
inc
jbe
cld
sbb
mov
fiadds
inc
sub
sbb
mov
test
jge
addl
outsl
ja
addr16
jg
mov
inc
loopne
cmp
in
push
xor
push
xchg
pop
and
je
mull
inc
insb
lods
cmpsl
fsubrl
or
pushl
adc
arpl
sbb
mov
mov
subb
inc
bnd
stos
mov
cwtl
xlat
test
call
movsl
sub
lds
shll
test
adc
stos
and
aam
and
adc
rcrl
sub
and
insb
loop
pop
stos
shlb
jmp
bound
pop
pop
jae
mov
jnp
sub
loop
jmp
test
inc
orl
sub
push
popa
jns
ret
out
dec
inc
fisttps
add
push
mov
dec
ja
mov
push
mov
test
inc
add
lcall
push
push
ds
repnz
lock
push
adc
sbb
sbb
lahf
jl
xor
out
push
clc
cmc
icebp
mov
mov
add
arpl
mov
push
push
lea
cs
stos
add
lods
fst
and
popf
xchg
add
xor
mov
ret
xor
lea
cld
ficomps
mov
loop
or
in
cmp
sub
xor
in
jo
push
sti
fidivl
dec
in
dec
xor
pop
iret
es
adc
xchg
push
loope
pop
push
xchg
cmpsl
push
cmp
aam
sbb
mov
sub
scas
and
fiaddl
or
mov
in
sbb
mov
rorb
mov
enter
jp
cmp
and
jno
sub
cmpsl
les
iret
or
cli
mov
sbb
rcr
adc
daa
int
mov
mov
push
pop
mov
pop
add
insl
cli
mov
cltd
adc
mov
fidivs
mov
add
sbb
sub
lds
mov
xorb
adc
aam
jmp
pop
push
scas
clc
inc
pop
cmp
sahf
adc
inc
push
inc
imul
divb
mov
and
sbb
jmp
aas
push
xchg
call
cs
cli
jmp
ret
pop
pop
cmp
inc
add
scas
xor
scas
adc
orb
xchg
sar
jne
es
or
jnp
xor
sbb
sub
hlt
adc
shlb
jmp
dec
mov
fcoms
out
xchg
cltd
insl
push
mov
pop
sbbl
adc
mov
push
jb
xor
pop
in
jo
add
mov
lods
lock
data16
sbb
or
xor
push
fstpt
jle
hlt
cli
adc
jo
adc
adc
aaa
dec
ret
fldt
sub
scas
popa
jl
pop
or
aaa
mov
and
or
add
mov
mov
mov
ja
addl
cs
xchg
aam
mov
sub
rol
xchg
enter
push
mov
adc
jl
mov
cmovnp
ljmp
push
mov
ss
adc
pop
fidivs
pop
mov
xchg
insl
mov
insl
xor
dec
arpl
xchg
stc
jae
mov
js
lret
jle
stc
and
lret
jmp
push
jno
adc
push
pop
ljmp
push
xor
xchg
mov
in
repz
std
scas
jge
bound
lcall
orl
arpl
sbb
push
or
rorb
lods
xchg
cli
push
aam
cmp
test
pushf
jle
fwait
pop
das
jne
xchg
mov
dec
mov
adc
adc
sti
sub
mov
jo,pt
ffreep
dec
push
mov
xor
mov
test
jo
sub
std
push
stos
fs
pop
test
xor
jns
jg
xor
iret
js,pt
and
sub
mov
cs
jb
xchg
clc
dec
sub
fisubrs
outsl
pop
and
stos
adc
fs
adc
jl
add
jae
in
mov
cld
pop
daa
pop
jne
and
fidivl
insl
outsl
cmp
aad
mov
cmc
negb
ljmp
fisttps
cld
cmp
push
jns
and
filds
fistpl
and
data16
iret
mov
xor
sbb
and
adc
dec
test
inc
test
ja
or
sub
mov
mov
sti
mov
into
insb
repz
sub
lea
adc
push
mov
sbb
test
sbb
outsb
stos
movsl
xchg
fwait
mov
shrb
lds
ss
xchg
xor
pop
xlat
jl
add
ja
fiaddl
pop
daa
pop
cmp
cs
iret
clc
cmp
pop
jp
cmpsb
iret
mov
xchg
cmp
enter
sub
aam
notb
lods
dec
mov
mov
ret
arpl
into
mov
jecxz
push
out
jo
jp
or
mov
nop
jl
cs
mov
imul
mov
test
push
mov
push
mov
icebp
xor
mov
and
jecxz
mov
pop
mov
inc
mov
dec
decb
je
xlat
mov
gs
arpl
cltd
insl
add
rol
cmp
jns
stc
in
mov
loope
vunpcklps
push
shlb
je
inc
pop
stc
xorb
and
jns
lret
push
arpl
dec
int
incl
je
cmpsl
xlat
aam
cmp
fdiv
and
pop
es
adc
mov
mov
fldl
add
xor
in
pop
arpl
dec
mov
mov
xchg
scas
popa
and
push
inc
ja
cmp
cmpsl
arpl
mov
movl
or
sbb
dec
pop
mov
loope
inc
jg
sbb
pusha
xchg
imul
repnz
shlb
cmp
xchg
std
popf
push
ja
and
fmull
leave
mov
sti
sti
mov
gs
xor
scas
lds
sub
push
push
or
mov
mov
cmpsb
dec
adc
imul
cmp
lret
aaa
cld
inc
imulb
repz
or
cmp
dec
mov
test
inc
insb
pusha
inc
lea
addr16
or
pop
xchg
ss
lock
push
testl
fdivrs
out
rol
jl
std
dec
or
pop
jl
dec
push
cmpsb
mov
fsubrl
in
xor
and
adc
xor
int
enter
fidivl
shrl
iret
pushf
in
push
adc
mov
inc
jp
and
mov
mov
loop
leave
ret
mov
ja
mov
sub
xchg
lahf
xchg
push
push
push
mov
jge
jg
mov
xor
addr16
and
lock
out
mov
pushf
or
inc
sub
mov
dec
xor
adcb
repz
into
add
fistpl
notb
sub
dec
pop
orl
sarb
lret
cld
insb
popa
lret
stc
cmp
mov
cmp
test
stos
aas
push
stc
push
xlat
clc
sub
jnp
sub
shrb
out
mov
cli
stc
jo
xchg
and
fucomip
or
in
dec
mov
cli
push
lea
mov
std
jg
int
cld
dec
sbb
ret
orl
xchg
imul
les
inc
jmp
shlb
pop
call
xchg
and
jl
popf
xchg
jne,pn
outsl
jae
js
or
xchg
int3
dec
aad
adc
scas
popa
inc
in
jo
xchg
xchg
imul
scas
adc
cmpsb
cmpsl
dec
push
mov
loopne
aam
movsb
pushf
push
test
cmpsl
or
xor
jns
mov
cmpl
push
add
mov
adc
add
xchg
mov
shlb
popf
cltd
lcall
call
test
adc
jg
cmp
cmp
arpl
sbb
xchg
fs
sbb
sub
pop
subl
cmp
adc
shrb
sbb
sbb
mov
push
xor
pusha
in
and
xchg
adc
sub
fidivs
inc
lret
cwtl
jb
mov
insl
sbb
stos
cmc
dec
xorl
push
lcall
jno
mov
or
out
pop
dec
fldcw
pushf
push
int
imul
pop
bound
jne
pop
fldenv
push
cmp
popa
mov
int3
shr
sub
push
inc
jne
aad
shrd
movb
dec
inc
sub
cmc
lods
in
xchg
dec
addr16
sub
push
inc
stc
xchg
push
call
pop
pushf
aaa
shrl
or
push
xlat
cwtl
mov
sbb
inc
lock
mov
das
call
push
cmpsb
or
jbe
out
mov
bound
dec
mov
fs
subl
mov
jecxz
cmp
test
clc
mov
mov
test
popa
ja
out
test
cli
jmp
push
sub
push
imul
out
sbb
push
sbb
in
cli
scas
adc
jmp
pop
push
sti
repz
dec
xchg
cmpsb
mov
xchg
mov
inc
mov
mov
aam
xchg
and
xchg
adc
jne
lock
jbe
cmp
pop
sahf
jecxz
xchg
cmpsl
add
adc
roll
dec
jmp
xor
ljmp
ljmp
gs
or
pop
bound
dec
pop
in
sub
mov
mov
xor
pop
add
inc
adc
sbb
jo
jp
dec
inc
scas
mov
xchg
dec
ljmp
push
iret
fadd
ret
roll
rcrl
cs
orl
push
push
and
add
aam
std
outsl
xchg
lret
jl
dec
dec
adc
cmp
cs
addr16
add
mov
insb
stos
xlat
add
fisubs
xchg
rolb
ret
push
inc
sarl
inc
ja
cmp
mov
mov
in
xchg
xchg
repnz
jne
shl
add
add
xor
push
push
xchg
mov
adc
lea
inc
in
aam
test
jecxz
adc
scas
mov
mov
ja
inc
sahf
call
lea
mov
int3
data16
add
shlb
xor
andb
lea
std
adc
shrb
sbb
sti
lcall
lcall
in
clc
dec
sbb
test
xor
insb
sbb
or
popf
push
pop
mov
xchg
jl
mov
mov
lods
mov
xor
aaa
ljmp
out
mov
push
adc
insb
sbb
dec
or
xor
xchg
and
roll
nop
pusha
and
inc
orl
rep
inc
add
jne
fisubl
jo
mov
fists
notl
call
mov
orl
add
sahf
fiadds
push
bswap
popa
xor
int3
cmpsl
or
jmp
xlat
cmp
xor
sub
shll
pop
mov
cmp
stos
mov
incb
hlt
mov
push
sahf
jo
and
inc
iret
jecxz
pop
fxch
mov
cmc
and
out
mov
rorb
test
ja
xchg
push
pop
jmp
arpl
mov
pop
xor
pop
icebp
push
push
ficoml
shll
xchg
jmp
imul
or
mov
jae
mov
es
fwait
shl
sub
call
shll
das
xor
sbb
int
xchg
sbb
popa
ja
outsl
or
aad
mov
int
sub
dec
adc
add
pop
or
or
jno
into
xchg
fistl
test
jbe
mov
test
push
sub
mov
outsl
sbb
fnsave
inc
lahf
gs
sbb
insb
sbb
fcoms
jl
cwtl
fistps
pop
pusha
inc
jmp
or
mov
sub
jno
mov
clc
jns
sub
inc
mov
inc
cmp
cmpsl
mov
sbb
pop
sbb
clc
mov
lret
in
cmc
rcrb
pop
sbb
rcrb
add
fisubrs
mov
ficoml
jg
adc
les
xchg
or
jae
adc
xchg
adc
sub
dec
or
pop
sub
std
xchg
push
scas
out
ja
push
popa
mov
adc
iret
hlt
loopne
das
mov
sbb
jmp
aas
std
dec
push
in
jae
inc
add
loop
pop
sbb
or
out
lock
repz
bound
aad
in
push
lret
sbb
out
jl
push
sarb
add
stos
sbb
pushf
int3
xchg
inc
je
hlt
imulb
stc
add
pop
cmc
sbb
dec
push
sub
xchg
or
sub
aas
iret
movsl
les
mov
aas
push
cmp
pop
add
inc
push
push
roll
lahf
aad
and
fisttpll
outsb
out
jne
sti
mov
push
rorl
lods
pusha
flds
inc
in
popf
xchg
outsl
out
pop
and
in
call
and
mov
push
sbb
jno
mov
add
insl
jae
mov
xchg
scas
mov
xor
mov
cmpsl
ret
pop
call
xchg
fistl
imull
adc
cmp
cld
test
sbb
jmp
ljmp
xor
sbb
inc
ljmp
loope
mov
adc
cmp
repz
pop
mov
shrl
pop
or
push
inc
in
mov
sub
add
jnp
sbbl
fwait
mov
adc
mov
and
xchg
pop
jne
add
ljmp
pop
mov
dec
dec
outsb
pop
cli
push
test
aas
loope
add
dec
fs
shr
sbb
sub
dec
pop
dec
push
stos
xlat
or
or
cmp
jns
lsl
addr16
add
mov
cwtl
add
insb
fs
je
psubsw
add
test
std
imul
mov
hlt
stc
push
inc
loop
fisubrl
jge
jl
push
mov
cmp
lret
add
scas
mov
scas
nop
mov
repnz
loope
mov
jle
mov
jne
or
adcb
adcl
aaa
pop
pop
mov
mov
mov
mov
xchg
xchg
add
pop
pop
mov
dec
add
test
cld
mov
xor
pop
stc
ljmp
and
pusha
pop
push
mov
out
mov
push
out
scas
ror
jnp
cmp
aam
and
pop
enter
push
cs
jmp
push
mov
das
sub
js
mov
gs
push
ret
jae
inc
daa
cmp
int
adc
rolb
and
pushf
mov
or
imul
jns
sahf
movsl
or
pop
pushf
getsec
into
adc
sbb
fistl
fcoml
xor
in
xchg
xor
xor
jae
mov
imul
daa
clc
jp
test
push
mov
pop
pop
mov
jmp
jle
xchg
ja
cmpsb
push
sbb
push
call
cmc
sub
lods
and
sar
pop
inc
mov
adc
jl
mov
hlt
sbb
cmp
bswap
stos
sti
lods
loopne
icebp
pop
pop
sub
mov
or
repz
outsb
mov
dec
xchg
xor
test
pop
ret
lea
xchg
stos
pop
pop
stos
sbb
dec
scas
cmc
dec
mov
cltd
dec
ret
outsb
fisubrs
fs
add
sub
les
xchg
subb
push
cwtl
jg
pop
pop
into
insb
sub
mov
int3
xor
clc
fcomps
imull
sub
pop
insb
pop
repnz
ljmp
iret
sub
xchg
mov
sub
clc
inc
and
jge
jne
nop
int3
push
popf
pop
sub
insb
xlat
fimuls
cmp
dec
push
xor
pminsw
lea
in
push
std
mov
sarl
cmp
shll
dec
cmpsb
push
lret
lcall
pop
mov
mov
data16
jno
xchg
xchg
xchg
movl
xchg
sbb
popl
dec
mov
jecxz
andb
addr16
bndldx
sbb
comiss
and
repnz
in
or
inc
mov
sub
cmp
jnp
rolb
fbstp
lods
dec
mov
mov
sbb
sbb
and
data16
cmpl
inc
mov
mov
outsb
shlb
hlt
jbe
jecxz
dec
aad
push
mov
mov
mov
int
lds
adc
imul
and
add
aam
shl
fisubs
push
movsb
jbe
xor
xor
pop
dec
dec
dec
test
mov
dec
mov
pop
xor
pop
aaa
repz
xchg
enter
mov
and
inc
lahf
fs
fwait
stc
push
aaa
mov
push
mov
insb
loop
mov
aad
mov
std
xchg
push
scas
mov
mov
push
fs
sbb
jb
cmp
and
xchg
xor
xor
adc
lock
loopne
lds
gs
inc
inc
aas
xor
fnsave
push
mov
xchg
roll
mov
loopne
js
idivb
and
fidivs
or
jb
mov
stc
adc
pusha
add
jge
scas
adc
iret
sbb
cmpsb
xlat
in
dec
popa
cltd
jb
outsb
jmp
out
dec
repz
ljmp
pop
fisubs
and
mov
mov
les
stos
inc
fwait
stos
jl
shll
pop
dec
stos
sbb
sbb
ss
xor
arpl
imul
and
mov
not
faddl
es
mov
imul
lds
inc
imul
push
hlt
inc
jg
cmpsb
sbb
or
test
stc
bound
nop
push
sbb
cld
enter
jae
jmp
pop
iret
mov
pop
lcall
sbb
push
mov
and
arpl
bound
addr16
xchg
sahf
test
mov
cmp
dec
pop
xchg
dec
mov
lods
xchg
mov
pop
push
sbb
mov
pop
ss
pop
repz
push
mov
loopne
je
xchg
cmp
jno
out
sbb
lock
mov
daa
pop
cmp
jle
in
dec
hlt
sbb
pop
mov
sbb
mov
clc
xor
pop
mull
push
xlat
fcoml
pop
jae
mov
insl
mov
or
sub
out
mov
outsl
mull
imul
push
addr16
hlt
std
data16
test
and
shlb
lds
mov
icebp
add
sub
dec
rcll
push
or
mov
xchg
stc
sti
jo
mov
xor
icebp
dec
adc
movsb
fldenv
adcl
dec
aas
and
or
pop
push
fdivrs
movsl
mov
or
xor
and
in
mov
or
jg
lahf
loop
out
arpl
xor
out
rcl
mov
popa
aad
adc
test
or
mov
or
inc
mov
or
adc
adc
jae
ljmp
mov
xlat
mov
mov
cmpsb
xchg
xor
cmc
scas
and
sub
mov
pop
push
add
pop
fmuls
into
lgs
push
cwtl
out
or
out
xchg
cmp
add
dec
in
push
stos
mov
dec
pop
add
repnz
jno
dec
clc
stos
cltd
jb
xchg
push
xchg
cli
pop
xor
add
inc
fstpt
fucomp
bound
jbe
add
ret
inc
mov
mov
ficoms
ds
in
cmpsb
push
mov
outsb
imul
in
movsl
jecxz
pop
test
mov
sub
jp
mov
push
add
orb
dec
fisubrl
lock
stc
and
out
dec
dec
and
dec
push
movsl
out
adc
sub
sarl
fisubrl
imul
incl
pop
popa
inc
dec
out
subl
pushf
lahf
sarl
cmc
mov
mul
push
push
stos
jnp
and
mov
push
inc
jae
into
push
mov
inc
test
push
cmp
mov
push
mov
dec
ds
rorl
loop
cmp
leave
mov
adc
clc
cmp
or
js
sub
addr16
push
add
add
das
push
je
push
add
rolb
mov
pop
mov
sbb
lret
mov
stc
mov
add
jp
inc
adc
inc
ret
daa
fsts
pop
xor
test
mov
dec
sti
mov
nop
xchg
jmp
xchg
sub
push
xor
out
test
cmp
outsb
cmp
push
mov
negl
cmc
in
mov
popf
xor
imul
pop
ficompl
inc
mov
fxch
stc
push
sub
fists
add
cmp
inc
add
cmp
cwtl
repnz
test
subb
cmc
jnp
cmp
sub
or
ss
orb
lock
mov
xchg
cmpsb
sub
dec
pop
mov
in
lods
push
fnstenv
imul
sub
mov
test
ficoms
cwtl
je
fwait
jb
fnsave
fstps
cmpsl
mov
inc
ss
test
adc
add
pop
mov
xor
inc
pop
and
cwtl
sbb
in
stc
push
dec
nop
enter
scas
add
cmp
push
movsl
push
xchg
incb
es
lods
rorl
xor
fs
dec
add
fadds
ljmp
mov
outsl
aam
lret
popf
aaa
jns
push
ffreep
mov
jns
fcos
mov
test
lea
jb
push
movsb
cmp
cmp
lods
xchg
loope
das
adc
lods
sbb
mov
call
test
adc
sar
sbb
or
dec
les
add
mov
ficompl
mov
push
les
scas
cmpsb
mov
push
addr16
ret
mov
pop
shl
jge
pusha
leave
cmp
or
or
mov
sbb
rorb
ret
mov
fdivrl
cmp
mov
inc
loope
inc
je
into
lret
push
adc
xor
xchg
mov
mov
dec
aam
adc
rcr
pushf
cmp
mov
pop
add
xor
push
in
jg
lcall
or
jmp
xchg
sti
cmp
int
pop
pusha
aad
aaa
add
xchg
mov
adc
mov
xor
dec
pop
jge
sbb
cmp
add
mov
or
cli
loope
xor
icebp
jbe
in
jo
cmp
ret
cmp
ss
popf
xor
sbb
xor
enter
inc
jl
jne
jge
in
jl
cld
mov
cmp
inc
inc
add
cmp
and
sub
push
cmc
daa
jbe
add
std
call
jle
add
sub
int3
leave
mov
arpl
push
js
aad
pop
adc
loope
insl
add
cmp
scas
popf
subb
repnz
mov
leave
cmp
shrl
rol
or
lea
xchg
dec
jne
jno
sbb
cwtl
xlat
mov
add
cmc
cmp
add
and
and
jne
dec
fisttps
adc
cmp
insb
adc
push
pop
jg
js
scas
jno
xchg
and
jne
lods
pop
pop
push
dec
mov
xor
add
jnp
mov
pop
in
sub
sbb
mov
mov
jne
ret
loope
jns
andb
sub
popa
sub
cmpsb
enter
or
mov
ret
sub
out
pop
push
adc
fisttps
xchg
outsl
daa
xchg
xchg
cmp
jns
or
roll
pop
ja
loopne
in
cltd
gs
lret
and
ljmp
lods
add
pop
inc
test
adc
xchg
scas
mov
jno
mov
sub
jnp
and
jnp
scas
insb
faddl
or
mov
add
das
pop
ret
data16
push
sub
jno
mov
pop
dec
test
push
inc
lret
stc
sbb
insl
cli
pop
movsb
sbb
fst
ret
xor
shlb
mov
inc
xor
shll
xchg
dec
mov
xchg
rorl
fistps
enter
add
xchg
mov
mov
hlt
xchg
leave
aad
xor
in
xchg
mov
inc
cwtl
ret
shll
ds
jg
mov
jmp
insb
and
rolb
sub
popf
arpl
cmp
or
mov
shr
xchg
jae
pop
xchg
stos
cli
pop
mov
cmpsb
clc
fidivs
lock
mov
pop
adc
push
loope
fs
cmp
push
outsb
cld
cmp
fisubrs
ss
pop
sub
pop
push
cltd
and
out
push
lods
es
add
push
push
js
pusha
mov
pop
scas
out
mov
addr16
or
add
nop
pop
push
jnp
lret
pop
mov
enter
mov
lds
mov
addl
mov
mov
sbb
xchg
ljmp
xchg
add
add
in
cwtl
leave
dec
push
jmp
int3
pop
push
pop
lds
test
cltd
lahf
imul
sarb
leave
mov
push
jmp
shl
mov
jb
jae
leave
and
xorb
mov
in
repz
dec
cmpsl
iret
mov
into
xor
cmp
sbb
fstl
jbe
xchg
xor
dec
out
cs
mov
divb
jmp
sub
inc
leave
sbb
sub
addr16
and
mov
mov
xchg
pop
imul
not
add
cmc
jge
dec
push
pop
sbbl
arpl
lret
cmpb
ret
jb
xchg
stc
push
mov
jnp
leave
dec
movsb
mov
xchg
out
sub
out
push
xchg
cmp
pop
and
push
ja
xchg
fcomi
xor
dec
clc
cltd
or
enter
xor
sahf
cmp
mov
adc
add
addl
arpl
xchg
dec
mov
das
add
movsb
outsb
repnz
xchg
push
out
test
mov
add
pusha
int
call
addr16
outsl
sbb
inc
pop
fwait
stc
jecxz
loop
sarl
add
adc
shr
int
or
sub
clc
scas
xor
stos
sar
xchg
adc
fimull
es
adc
mov
icebp
loop
imul
cltd
push
or
sti
push
insb
repnz
adc
sub
mov
in
fidivrs
inc
fwait
inc
jo
or
gs
sub
xchg
pop
jo
popf
insl
xchg
das
daa
stc
xor
mov
das
test
ja
adc
inc
mov
jae
sbb
cltd
je
cli
mov
dec
arpl
subb
icebp
jecxz
popf
insl
jecxz
js
cmc
add
btrl
test
xor
insl
es
push
out
add
inc
movsl
cwtl
mov
addb
push
and
xor
pop
mov
pop
mov
or
and
add
mov
jo
out
mov
pop
lcall
jne
push
xchg
dec
jns
into
pop
pusha
aaa
movsb
ljmp
xlat
stos
negl
push
aaa
xlat
incl
jne
and
hlt
mov
mov
mov
jge
ljmp
and
pop
sub
adc
iret
aad
jbe
push
int3
adc
fcomp
addb
and
loope
into
or
adc
cmp
sbbl
add
out
ljmp
aaa
cwtl
test
fcoml
test
adc
sub
mov
test
pop
jo
pop
mov
sbb
mov
out
jecxz
stos
sbb
dec
mov
pop
fidivrl
into
sub
xchg
mov
fidivrl
dec
lods
test
repnz
mov
dec
lret
pusha
pop
sbbb
sbb
or
addr16
testb
not
inc
push
xlat
or
ds
sub
ljmp
and
mov
xor
mov
mov
aad
jmp
mov
xchg
test
and
loope,pt
inc
outsl
mov
xlat
stos
rorb
pushf
arpl
push
out
push
test
clc
loopne
xchg
jge
das
or
push
adc
jle
push
inc
xchg
adc
inc
mov
pop
cli
mov
adc
mov
sbb
fsincos
loopne
shrl
jnp
mov
imul
xchg
jl
in
add
ret
test
inc
cmp
mov
sub
jns
or
pop
fldenv
pop
adc
adc
or
push
ljmp
jge
in
movsl
sbb
lds
jno
cwtl
dec
rcll
loop
sbb
sbb
jns
lahf
push
mov
pop
js
stos
sub
in
femms
xor
sbb
sahf
sub
loop
sub
test
insl
std
iret
sbb
xor
sbb
and
inc
ss
outsl
imul
imul
xchg
call
iret
aam
gs
jl
je
push
mov
and
push
seta
mov
lods
js
lds
dec
iret
sbb
xor
int
inc
push
sbb
test
sbb
xchg
push
mov
mov
add
adc
cmp
sub
pop
int
mov
push
cmp
orb
lcall
dec
xor
mov
in
push
mov
in
xchg
pop
mov
jbe
fdivrs
stos
cmp
mov
lock
lods
cs
icebp
or
push
push
push
cmp
sub
and
arpl
out
and
mov
fcmove
mov
cmp
xchg
out
mov
jmp
push
das
popf
ds
repnz
pop
adc
add
fnstcw
fcoms
adc
test
dec
std
mov
scas
adc
inc
add
sbb
inc
xchg
xchg
and
cwtl
adc
sub
shll
inc
iret
mov
ficomps
pop
dec
cmp
daa
iret
xchg
lods
stos
jbe
out
jbe
mov
sub
fisttpll
fs
jo
adcl
pop
xchg
cmpl
loopne
cmp
idiv
cmp
lods
daa
xor
sbb
push
xchg
jge,pt
or
push
in
std
push
insl
adc
dec
loope
lea
cmp
jle
mov
rorl
lcall
shrl
xor
mov
adc
cmp
shlb
ret
inc
mov
in
dec
outsl
aas
lea
add
mov
sahf
mov
dec
and
es
in
lahf
in
scas
aaa
push
lock
fisttps
mov
xor
int
loope
or
adc
movsb
push
fwait
inc
fsub
push
push
ljmp
repnz
pop
rclb
divl
sbbb
xor
arpl
add
je
dec
mov
sub
fldenv
pushf
ss
mov
sbb
jns
std
cmpsb
jmp
add
dec
mov
test
add
mov
mov
lock
ret
pop
lods
rcrb
cwtl
and
es
jg
stos
imul
fwait
cs
dec
lcall
cmp
mov
addr16
inc
movsl
pushf
cli
dec
inc
dec
movsb
cli
imul
or
out
jmp
testb
push
int
clc
xchg
xorb
mov
inc
mov
into
jno
push
pop
push
data16
mov
and
call
lods
mov
sahf
xor
add
cs
mov
or
add
jp
adc
adcl
inc
pop
dec
movsl
mov
mov
and
fisubrl
test
test
ljmp
aam
mov
pop
dec
pop
faddl
ror
lods
adcl
or
sbb
xor
nop
int
inc
xor
stos
dec
dec
sub
push
out
push
xchg
fwait
lods
in
out
push
lods
jp
sub
mov
sbb
stc
sbb
test
sbb
repz
xchg
fisubs
ja
jmp
and
lea
xchg
lret
test
fsts
cmpsb
push
inc
loop
pop
xchg
and
icebp
push
fs
ljmp
out
and
mov
xor
and
lahf
push
and
and
pop
test
push
jmp
mov
andnps
lods
pop
sub
sbb
shlb
push
xor
movsb
sub
orb
ljmp
pop
idivl
or
rcrl
lcall
and
and
cs
lock
rorb
lret
cld
jae
cmp
mov
mov
aad
cmp
jnp
movsb
cld
xchg
or
das
leave
pop
add
je
adc
sahf
out
and
cmp
lods
flds
fnsave
pop
cmpl
pop
xchg
jp
push
xchg
dec
jne
pop
and
arpl
cmp
pop
icebp
adc
iret
in
fcmovbe
enter
mov
or
xchg
and
sbbl
outsl
and
pusha
in
mov
mov
add
xchg
jg
repz
stos
fcmovnbe
pushf
push
mov
and
test
push
iret
in
out
and
push
xchg
mov
mov
pop
push
es
mov
mov
nop
adc
dec
push
test
push
add
lds
inc
movsl
and
pop
inc
dec
cmpsb
mov
mov
out
lret
dec
negb
pop
shrl
or
test
std
loop
sbb
push
std
pusha
xchg
mov
xchg
sub
adc
push
bound
mov
inc
dec
or
jo
divb
mov
bswap
cwtl
hlt
mov
out
stc
inc
mov
add
sahf
adc
jne
aam
pushf
movsl
jge
sahf
mov
add
mov
xor
cmpsl
add
jae
xchg
push
adc
int
mov
push
sub
pop
popa
pop
sbb
mov
iret
sub
ljmp
loop
dec
lcall
dec
dec
cmp
cmp
lahf
or
mov
es
mov
pop
call
jb
push
sbb
cmpsb
mov
lsl
inc
aad
sub
push
mov
lret
dec
push
jle
dec
cmp
leave
test
pop
pushl
jo
jo
cwtl
lret
mov
ljmp
enter
fwait
cmpsb
pmaxub
sbb
or
mov
sti
push
mov
notb
inc
add
sub
cld
xchg
jl
xor
sub
xorb
in
or
decb
cmp
movsb
jns
dec
notb
outsl
xchg
xchg
and
push
cwtl
lahf
mov
out
in
outsb
push
sbb
bound
aas
sub
lods
xchg
in
imul
push
push
in
or
pusha
repnz
add
inc
sahf
xor
sub
pop
mov
sub
lcall
add
jl
ret
ds
pop
jp
cmp
aad
je
in
sbb
dec
jecxz
fnstenv
jl
outsb
fs
clc
dec
subl
enter
mov
rclb
pop
cmpsb
out
dec
test
jecxz
mov
pop
out
jmp
mov
pop
into
cmovne
xor
add
movsl
daa
sub
xor
fstl
aaa
jle
imul
push
int
outsl
jle
cwtl
dec
add
or
mov
lret
push
movsl
sub
xchg
jmp
ds
dec
cmp
cmpsl
xor
ret
sbb
bound
cmp
imul
sbb
mov
cmp
lods
push
sub
pop
je
dec
faddl
cmc
xchg
ret
push
fwait
movsb
sti
popf
loope
rcll
push
push
add
jge,pn
ja
stos
shll
jmp
and
jge
push
xor
and
iret
cs
js
sub
or
pusha
pop
mov
adc
scas
xor
les
ljmp
js
jbe
aad
std
sbb
and
mov
sahf
aas
out
pop
pop
stc
or
sub
in
inc
stos
out
or
pushf
les
dec
cmpb
add
mov
xchg
pop
pop
xchg
cltd
fcoml
stos
xor
sub
test
pop
and
mov
sbb
add
xchg
xor
xchg
jecxz
rcrb
dec
cmpsb
sub
inc
xchg
sub
lea
inc
push
lret
mov
lret
je
sbb
addb
outsb
xlat
dec
test
mov
push
mov
addr16
pop
and
je
jb
xchg
cwtl
js
arpl
dec
psubusw
sub
aas
scas
pop
push
pop
fists
out
dec
xor
sub
jno
push
mov
insb
mov
mov
stc
ret
push
popf
inc
testl
leave
data16
int3
push
fidivrs
xor
test
out
pop
adc
loopne
xorl
ljmp
xor
imul
mov
cmp
ficompl
adc
sbb
loop
enter
call
call
out
dec
scas
outsl
arpl
xorl
mov
jp
lea
mov
push
sbb
jle
shrb
xchg
lahf
push
push
in
mov
je
sub
ja
stos
mov
pop
mov
pop
jb
rclb
insb
sub
cmp
adc
leave
sahf
pop
cmpsb
xor
test
movsl
test
andl
jg
sub
jp
dec
jl
repz
add
jl
push
cmp
mov
xlat
and
pop
in
lea
push
jge
mov
stc
cmp
xchg
les
sub
push
in
popa
aam
mov
inc
sbb
hlt
lods
lret
test
imul
ret
mov
enter
ret
mov
lcall
cmpsl
mov
xchg
push
in
add
fstpl
lods
cmpsl
push
lcall
xchg
push
enter
jmp
cmp
shr
add
jecxz
arpl
jge
mov
and
jp
lods
lods
lods
scas
loope
push
mov
and
and
cmp
xor
dec
sub
and
in
scas
call
pusha
or
repz
jecxz
push
out
adc
rcrb
mov
inc
adc
jnp
or
xorb
pop
sti
push
outsb
cld
in
xor
mov
out
out
decb
push
cmp
mov
movsl
mov
gs
cld
outsb
dec
push
xor
outsl
sub
jno
jle
add
ficoms
mov
sbb
xchg
dec
mov
add
dec
pop
mov
popa
add
sub
sbb
in
and
adc
mov
xchg
aaa
loopne
fadd
push
notb
and
jge
lds
or
pop
testb
jle
sbb
mov
mull
outsl
adc
pop
imul
add
cmp
add
lock
adc
fsub
mov
mov
push
sub
ret
jl
add
mov
mov
mov
dec
mov
cli
jg
addr16
pop
inc
sub
mov
das
aad
or
jp
push
and
fmull
jle
sub
daa
mov
into
jns
out
das
cmp
out
in
in
mov
enter
inc
jns
adc
sub
pushf
sbb
dec
sub
in
jo
fsubrl
roll
jecxz
and
loop,pt
lods
adc
in
and
sbb
jecxz
push
addr16
inc
loop
mov
in
mov
and
push
dec
cli
dec
sahf
fwait
mov
jns
jle
sub
les
jb
imul
cmp
lods
xchg
push
pop
hlt
int
mov
jbe
adc
roll
jp
cmp
das
push
inc
or
xor
mov
xlat
inc
pusha
mov
and
cmp
les
dec
xchg
pop
cmc
jp
add
inc
pop
mov
sbb
lods
cli
push
stos
imul
fmulp
je
xor
push
cld
inc
pop
cltd
cmpsb
ficoms
push
pop
scas
test
enter
repnz
xor
int
xor
out
sbb
into
scas
icebp
xor
lods
sbb
shrl
stc
aam
jecxz
in
jp
lock
dec
xlat
lret
xor
adc
movl
pop
mov
loop
xchg
loop
je
push
cmp
xchg
cmp
movsl
xchg
sub
push
daa
cmpsl
pop
mov
sahf
pushf
mov
xor
jmp
stc
jecxz,pn
hlt
fwait
jbe
jb
ret
jae
adc
lahf
not
std
dec
clc
dec
push
pop
jbe
or
ja
push
pop
mov
xchg
ljmp
xor
fldl
ds
in
andl
popa
test
arpl
cmp
push
mov
lods
or
xchg
sbb
mov
pusha
cmp
mov
jmp
dec
frstor
fs
pop
cmp
push
xor
cmp
test
out
addr16
testl
fdivrl
cli
push
cmp
add
xor
push
loop
popa
je
mov
bound
inc
stc
jl
mov
out
dec
dec
clc
pop
ds
dec
lock
cmpb
inc
movsb
fiaddl
sbb
sub
jnp
jb
scas
mov
mov
dec
push
xchg
das
aam
arpl
pop
aas
mov
mov
loop
jne
cld
mov
imul
fldcw
aaa
mov
push
adc
pushf
mov
rcr
xor
mov
add
xchg
repnz
call
add
cmp
addr16
pop
in
and
lock
fsubrl
mov
repz
aad
fisttpl
push
fildll
rcrb
aam
mov
js
or
lcall
popa
adc
in
mov
xor
pop
imulb
imul
rcll
rcll
gs
sbb
lds
mov
aaa
icebp
adc
test
fwait
dec
cmp
push
add
mov
mov
cmp
push
sbb
out
adcb
xchg
adc
sbb
pop
hlt
xor
out
insl
inc
add
nop
roll
xchg
mov
pop
pushf
push
shrl
mov
fwait
mov
addr16
mov
inc
pop
and
outsl
call
aas
cmp
or
out
and
sbbb
orb
xchg
aam
je
mov
in
rorb
adc
stos
dec
les
popf
scas
cmp
jne
hlt
inc
out
jno
push
sbb
jb
lret
jae
shrb
adc
mov
mov
sub
insl
adc
in
aaa
pop
out
adc
xor
jg
iret
aaa
sub
and
sbb
jecxz
jae
movsl
rcl
sub
and
xchg
jmp
cld
cld
cmpsb
data16
cmp
das
and
nop
xor
out
jo
mov
push
sbb
mov
cmp
mov
mov
xor
in
xor
mov
sbb
and
fidivl
jns
adc
addl
xchg
gs
xchg
lea
pop
lds
add
cmp
pop
cli
pop
push
cmp
fcoms
add
push
movsl
dec
and
lahf
mov
adc
out
sbb
sbb
cld
dec
sub
push
mov
push
test
add
paddsw
jmp
cmp
mov
mov
ret
lret
call
cmp
or
test
int
pop
fmuls
sbb
andb
lods
and
pop
in
xlat
mov
push
jne
sub
push
lock
addr16
fsubrp
jae
ficoms
xchg
mov
lret
pop
scas
sub
mov
fidivrs
mov
cmp
outsb
ja
mov
sbb
repnz
add
add
loope
lods
mov
iret
js
cli
jnp
sub
pop
pop
jno
mov
imul
pushf
in
cmp
jb
lock
test
aad
cmp
mov
aad
cmp
mov
sbb
enter
aad
out
sahf
leave
pop
and
fidivrs
cs
xor
test
lret
jnp
inc
pop
mov
iret
lods
aam
ror
aam
push
gs
loope
into
jo
sub
mov
rorl
mov
scas
loop
sahf
push
jnp
in
or
sub
push
stc
xor
aas
dec
pop
sbbb
jns
xor
sti
or
aad
iret
xor
cmpl
push
or
mov
jb
cmc
xor
fdivs
adc
inc
push
pop
jno
loopne
idivl
mov
pop
pop
inc
jl
or
pop
or
push
push
fcomi
in
xor
push
int3
or
inc
aas
or
inc
cmc
xchg
lret
cmp
xchg
push
adc
mov
mov
addr16
aam
mov
and
bound
mov
jne
jns
call
mov
sbb
nop
xchg
jp
test
mov
bound
rcr
in
aas
pop
mov
test
stc
mov
loop
dec
jmp
or
mov
jae
pop
inc
lret
jl
xorb
fwait
stos
jbe
div
gs
lahf
xor
mov
test
minpd
cli
rclb
ss
loope
push
xchg
xchg
mov
scas
cwtl
imul
cmp
loopne
mov
push
jmp
jo
rol
in
fistpl
outsb
iret
fimuls
dec
push
jl
sbb
jl
mov
pop
sar
adc
loop
rclb
push
mov
es
dec
mov
cwtl
ljmp
cmp
mov
and
inc
lcall
mov
jecxz
stos
jo
sbb
jae
das
jle
push
mov
cmp
insl
adc
xchg
or
pop
fisubrs
orb
ss
icebp
push
sti
orb
xor
cmpsl
punpcklwd
adc
out
cmp
and
aad
mov
or
rcl
sbb
mov
inc
push
mov
adc
leave
mov
xchg
out
cmp
fwait
mov
into
in
cmp
cltd
pop
adc
pop
add
push
inc
inc
mov
xchg
leave
push
mov
out
test
lret
pop
mov
or
jo
ljmp
jae
or
lcall
dec
jg
fldenv
aas
xor
test
mov
ljmp
or
popf
fcmove
xor
push
dec
inc
push
sub
loop
rorb
inc
faddl
jne
js
sahf
fwait
xchg
lcall
das
sbb
xchg
dec
xchg
sbb
daa
in
push
out
fsubp
cmp
or
xor
shlb
and
stc
je
addr16
ret
ja
push
push
loop
cmp
out
je
dec
xchg
mov
xor
divb
pop
lods
pop
sub
add
jle
sub
iret
lret
mov
in
aam
inc
arpl
jne
xchg
and
add
gs
bswap
dec
aas
push
call
lods
mov
mov
xorl
lret
cmp
mov
xchg
inc
adc
and
inc
inc
or
mov
push
outsl
cmpsl
hlt
test
test
aam
test
sbbl
xchg
lcall
lock
mov
mov
mov
in
in
test
mov
pop
dec
add
std
pop
clc
or
add
or
out
scas
lods
pop
xchg
dec
pop
or
jno
mov
leave
icebp
push
ret
fwait
aam
jle
push
mov
add
jg
mov
push
jnp
shlb
or
clc
xchg
scas
add
lods
push
aam
scas
push
pusha
dec
fisubl
scas
push
ret
xchg
sahf
adc
icebp
or
and
mov
aam
push
jp
shlb
bound
mov
stc
pop
pop
mov
add
fnstcw
loope
sbb
jmp
xor
cli
into
push
prefetch
daa
dec
push
push
adc
arpl
fs
or
mov
mov
imul
adc
mov
subl
inc
xchg
or
mov
gs
mov
hlt
inc
hlt
in
roll
inc
imul
cmc
inc
inc
fstl
pop
loope
bound
sub
mov
jnp
cmp
lock
jae
gs
or
fstpt
lret
pop
inc
dec
dec
cwtl
mov
sahf
adc
or
cli
sub
movsl
jns
adc
insb
xchg
dec
loope
mov
sub
push
js
gs
addr16
jae
mov
rcrb
cmp
cmp
add
jge
jb
pop
xor
mov
imul
enter
xor
mov
mov
mov
stc
dec
xchg
pop
xor
test
fildl
gs
mov
cmp
call
push
orl
pop
ficompl
subl
in
push
daa
aam
pop
addr16
enter
stos
imul
mov
mov
int3
in
xor
adc
jg
fs
fsubrp
dec
add
dec
lods
jl
cwtl
inc
pop
out
insl
pop
outsb
xor
or
sub
inc
xlat
or
inc
mov
scas
and
inc
jno
out
div
dec
jp
movsb
stos
mov
jno
adcl
pop
mov
xchg
lcall
cld
je
push
std
pop
pop
enter
jne
xor
mov
test
dec
inc
adc
pop
push
lods
ficoml
pop
sbb
shlb
clc
dec
pop
adc
pop
dec
cs
inc
in
scas
icebp
pmullw
mov
popa
xchg
cmp
sbb
fwait
push
aas
sbb
sahf
xchg
outsb
ja
popa
pop
and
cmp
cs
hlt
mov
cld
sub
insb
rcll
daa
out
mov
xchg
aad
arpl
and
or
mov
nop
xor
lea
ss
mov
fimull
stos
incb
bound
lods
dec
pusha
cmp
sub
aas
lock
scas
ffree
mov
fwait
cltd
adc
sub
dec
push
negl
mov
enter
dec
sbb
sub
addr16
cmpsl
mov
and
ljmp
pop
jge
jp
cwtl
pop
cli
pop
cwtl
lea
ss
js
cmp
push
ja
mov
dec
jo
sbb
push
loop
sbb
cmc
add
jg
fnstcw
ljmp
icebp
pusha
xchg
xchg
imul
and
xchg
adc
add
imul
ret
inc
mov
cmp
xchg
xor
pop
shl
repnz
lock
test
int3
jmp
or
inc
lods
push
push
int
jp
push
mov
es
xchg
out
cmpb
sub
cmp
inc
jbe
xor
loopne
ret
in
and
jp
aam
or
testb
mov
dec
lret
push
scas
xor
sub
push
sub
adc
dec
loop
sub
jne
dec
sub
std
xorb
test
jbe
jmp
aaa
cmp
outsl
mov
add
lret
pop
arpl
cs
addr16
mov
into
dec
jb
in
icebp
pusha
sbb
insb
xor
add
aaa
std
repz
sbb
push
xchg
leave
imul
repz
flds
xchg
ljmp
push
mov
leave
sti
movsb
adc
imul
dec
adc
add
rclb
stc
inc
jmp
mov
adc
inc
dec
sub
dec
push
test
test
push
mov
pop
orl
cli
loop
cltd
xchg
sub
inc
mov
add
int
out
adc
in
cs
inc
cmpsb
or
cli
daa
jbe
cwtl
add
rcrb
sub
test
stc
aas
push
ljmp
outsl
loopne,pn
std
xor
enter
mov
pushaw
icebp
cmp
loop
popf
push
sub
jo
mov
outsl
popf
mov
pop
stos
cltd
sbb
fists
sub
inc
cmpb
mov
sahf
ljmp
or
mov
out
jge
jg
xor
lahf
scas
orl
pop
gs
nop
jp
scas
icebp
movsb
mov
or
pop
fs
sub
jp
push
shrl
popa
addr16
lock
insb
xchg
lock
mov
ja
addr16
faddl
pop
sbb
imul
out
outsb
addr16
sbb
sbb
mov
cmp
jg
dec
dec
and
ljmp
pop
into
rcl
aas
fsubl
in
and
and
push
inc
outsb
inc
inc
mov
push
adc
sbb
and
or
pop
div
ror
call
mov
xor
push
gs
jecxz
movsb
sbb
js
dec
cmpsl
push
ret
jmp
mov
xor
push
mov
nop
fnop
lds
cmp
jnp
and
iret
shrl
inc
jae
int3
jge
cmp
je
clc
and
jg
cld
jg
addr16
mov
inc
cs
push
push
and
shrb
push
pop
int
dec
sub
repz
cmp
sbb
sbb
test
imull
std
inc
int
movb
jnp
test
notl
ja
stc
add
hlt
cmc
xchg
test
mov
test
fdecstp
mov
jnp
and
iret
mov
jg
rcl
hlt
mov
cmp
mov
xchg
or
mov
pop
pushf
repnz
sbb
xor
repz
push
cwtl
pushf
mov
pop
mov
stos
in
enter
imul
test
jl
and
mov
out
mov
in
icebp
mov
sub
ds
ret
dec
xchg
into
push
and
jo
mov
ljmp
dec
cltd
jmp
sbb
xchg
in
lods
loope
push
aam
in
out
cmp
xchg
ret
cmpsl
cmpsl
inc
dec
dec
loope
pop
push
sbb
mov
jo
lret
mov
shlb
int3
inc
aas
jp
xchg
dec
cmpsb
shl
add
or
pop
adc
sub
cmpsl
mov
aam
push
data16
repnz
add
loope
dec
jmp
push
pop
adc
pop
adc
shrl
rclb
data16
mov
in
xchg
lods
xor
mov
mov
in
test
dec
push
inc
mov
imul
push
je
push
cmp
sub
xor
push
int3
mov
pusha
sar
movl
aas
popa
xor
adc
test
cwtl
push
xchg
int
fcmovnb
mov
cmp
addr16
ror
stc
adc
adc
pop
jp
pop
push
adc
cmp
addl
pop
jae
xor
mov
arpl
lds
out
scas
add
mov
jp
icebp
scas
lretw
adc
cltd
loope
jle
dec
out
mov
mov
in
add
test
mov
add
cli
mov
mov
xchg
adc
mov
jp
ret
into
or
aam
or
mov
xor
add
jl
push
scas
mov
scas
std
jns
and
jb
mov
mov
jns
je
fsubl
jecxz
cwtl
mov
sbb
push
push
daa
fidivs
das
sti
inc
jg
inc
daa
je
fistl
insb
cmp
add
xchg
or
or
mov
sarb
mov
icebp
fidivl
pop
test
mov
ficompl
enter
les
cmp
mov
lea
test
add
sbb
cmp
addb
mov
stc
sub
lret
pop
sub
adc
pop
xlat
pop
mov
aam
loopne
ss
mov
cmp
push
mov
repz
mov
add
pushf
lods
push
arpl
dec
stc
mov
test
fidivrs
ljmp
jnp
and
ds
notb
sbb
adc
push
and
flds
daa
push
sti
adc
xor
bound
fmul
dec
jmp
mov
fwait
das
pop
movsb
push
ja
mov
cwtl
cmp
enter
test
xchg
fmul
mov
or
aas
mov
inc
pop
hlt
xor
xchg
js
push
inc
xor
cld
clc
push
cld
in
adc
in
in
fildll
xchg
mov
sub
sub
pop
mov
jg
add
pop
in
inc
inc
fwait
jnp
jae
pop
pop
mov
pop
dec
dec
jmp
push
rolb
push
fiadds
gs
or
ja
test
push
enter
gs
xlat
fisttps
push
outsl
push
loopne
adc
mov
movsl
enter
push
jl
sub
idiv
subb
cmc
xor
cltd
sbb
rcll
or
mov
adc
lret
inc
xchg
sub
add
and
push
sub
jmp
mov
fisubrl
sub
xchg
stc
lods
shll
icebp
mov
xor
test
shl
test
popf
mov
and
jg
pop
pop
xchg
stc
jmp
in
pop
ljmp
test
xor
pushf
gs
loop
nop
inc
fsubrp
sub
movsl
jecxz
or
pop
push
sub
dec
loopne
idivl
mov
scas
cmpsl
arpl
sub
fists
stos
les
fcomip
jge
sbb
icebp
adc
mov
ret
push
shl
cmp
aad
mov
in
test
pop
mov
mov
out
jg
cmp
mov
pop
ret
iret
lret
aad
cmc
cli
cmpsl
insb
insb
and
pop
sbb
mov
inc
mov
movsb
mov
jbe
add
fdivp
add
pop
sarb
push
gs
cli
les
sar
sub
jg
jo
cmc
out
cmp
movsl
arpl
fadds
pop
ljmp
pop
clc
lcall
adc
mov
mov
xchg
xor
cwtl
enter
push
insb
out
and
andl
imul
iret
push
sub
xchg
mov
movsl
and
sub
sbbb
cld
aaa
cmp
xchg
stos
inc
loopne
mov
xchg
sbb
enter
nop
sub
inc
adc
lods
xor
testb
jb
mov
ljmp
xor
lahf
or
mov
or
mov
mov
dec
jae
aas
inc
xchg
popf
subl
into
lret
or
fisubrs
insl
pop
add
jl
jge
add
pop
push
mov
loopne
jbe
fwait
nop
cmp
movsb
sub
ficomps
adcb
push
std
and
xchg
fcoms
mov
mov
scas
lcall
xchg
and
and
pop
add
idiv
jno
loope
adc
inc
push
fistps
adc
mov
shrl
pop
sbb
jge
stc
dec
xchg
sets
push
lods
add
lods
and
int
shll
leave
insl
into
xor
addr16
int3
add
fisttps
js
aad
adc
shl
roll
aad
pop
out
je
ret
stc
test
push
xor
mov
cli
dec
leave
and
loope
jmp
dec
xor
inc
sarb
xchg
mov
int
xchg
adc
int
call
in
dec
lret
pop
lret
outsl
sbb
test
jmp
scas
add
pop
imul
repz
jno
inc
arpl
imul
mull
xchg
into
test
push
jb
jnp
cmp
bound
dec
adc
xchg
mov
lea
mov
shlb
mov
and
scas
clc
lods
xor
mov
daa
arpl
xchg
sub
xchg
sarb
push
fidivrl
test
sub
jle
icebp
cmp
repz
xchg
dec
iret
out
enter
or
aaa
ret
in
outsl
aaa
or
dec
insl
mov
jmp
cli
repnz
enter
leave
bnd
cltd
int3
movsl
mov
mov
ljmp
inc
jno
xor
imulb
ds
push
push
cmp
imul
test
test
sbb
add
fisubl
or
sahf
or
or
lret
sbb
loop
xor
dec
mov
fcmovnbe
popf
sub
fistps
stc
repnz
xor
add
ja
lahf
les
push
mov
fwait
or
imul
out
inc
stos
fisttpl
call
sbb
insb
adc
scas
mov
test
push
jo
ret
jo
je
mov
lds
mov
lret
insb
cwtl
lahf
sub
push
inc
into
add
xchg
jae
mov
adc
loopne
repz
idivb
and
shl
push
js
imul
push
and
jbe
fwait
fwait
lds
pop
fidivrl
sub
das
enter
sub
jbe
popa
sbb
xchg
daa
fsubrs
repnz
fwait
sub
adc
lret
ret
mov
inc
and
sub
sbb
iret
sub
int
dec
xor
cltd
jbe
std
and
mov
adc
mov
lret
ljmp
mov
call
ljmp
out
clc
pop
rorb
mov
cs
in
and
inc
call
jne
mov
js
shlb
sbb
mov
lods
xor
repz
xor
push
dec
xchg
jge
jg
xchg
sbb
mov
shll
ret
xlat
jns
mov
fildll
adc
cmp
sub
xchg
mov
stos
cmc
loopne
shrb
mov
add
cmpsl
inc
xlat
gs
aaa
mov
xlat
insb
jmp
jg
xchg
imul
insb
or
shrb
scas
dec
adc
divl
add
push
hlt
pusha
out
jle
or
fcomps
call
mov
and
mov
daa
fdivrl
pop
cmpsl
addr16
insb
jge
jb
inc
inc
mov
inc
pop
les
mov
jmp
push
daa
cmp
ret
pop
mov
sbbl
loopne
jl
push
fiadds
rcrl
and
rclb
in
inc
adc
pop
fsubl
enter
lret
mov
add
aad
sbb
jns
xor
xchg
das
inc
adc
out
shlb
rcr
pop
and
mov
sbb
sub
mov
jb
push
jmp
int3
jo
inc
push
dec
xor
cli
dec
jp
rcll
add
in
fwait
bound
dec
adc
rolb
sub
and
lret
pushl
pop
xor
fimuls
movsb
lock
or
pop
inc
ja
mov
rcll
int3
pop
fnstsw
lds
xchg
cmpl
rolb
push
imul
out
int
or
pop
xor
shl
rcr
push
mov
sub
fsubs
jp
cmp
adc
pop
test
push
and
hlt
mov
shrl
hlt
mov
adc
sub
xor
sti
insl
mov
int
adc
push
xchg
add
iret
pop
std
mov
es
xor
cmp
mov
jno
aaa
lcall
lcall
dec
movsb
or
mov
add
sub
in
in
fnstcw
add
dec
pop
aad
push
xor
mov
fs
or
arpl
adc
rol
repz
mov
xchg
or
bound
pop
int3
or
daa
push
ds
insb
icebp
adc
out
nop
cmpsb
add
push
push
pop
sbb
mov
aam
sbb
sti
push
es
cmp
pop
lahf
sbb
mov
xor
jecxz
dec
shrb
ja
xor
jecxz
fiaddl
popf
push
sbb
push
and
cs
mov
mov
ljmp
xor
pop
int
int
addr16
inc
lods
and
fdivs
cmp
mov
add
int
test
mov
xlat
out
add
sbb
sub
cs
inc
clc
popf
rorb
icebp
pop
ficoml
cs
adcb
inc
push
in
xlat
adc
dec
cltd
jb
repz
les
loope
test
mov
add
add
cltd
shr
lret
dec
dec
jle
lcall
rorb
movsb
xchg
sbb
push
and
ret
cmp
sub
movsl
or
mov
add
jae
mov
popf
insb
roll
sbb
sbb
jl
jno
outsb
hlt
push
and
in
add
leave
cmp
test
rorb
cmpsb
sbb
cmp
ret
in
add
int3
pop
std
mov
jecxz
xor
mov
cmp
jp
dec
mov
fs
jne
or
int3
xorl
xchg
movsl
lds
fidivrs
in
push
mov
lea
in
bound
add
arpl
adc
pop
sarb
loope
test
mov
fcoml
sub
mov
pop
dec
adc
sub
dec
inc
mov
hlt
pop
dec
pop
das
jno
mov
cmp
lea
jl
out
mov
pop
fisubl
in
sahf
test
push
leave
or
inc
stc
pop
or
jne
ret
cwtl
popl
int
loop
push
inc
leave
mov
sub
fsubrs
pop
pusha
lcall
or
aaa
xor
cltd
or
in
pop
cmp
pop
jne
push
xchg
fwait
xchg
mov
cmp
mov
fistpl
test
fdivrs
hlt
mov
in
fcmovu
scas
push
hlt
adc
and
or
push
push
std
mov
lods
sti
or
pop
jne
divl
out
sub
mov
cmp
dec
pop
sbb
daa
xchg
loop
ret
ljmp
aaa
dec
lods
rorl
push
push
sbb
adc
cmp
inc
lock
stos
jp
inc
lcall
xchg
je
insb
pop
jne
outsl
and
int
fcompl
shlb
loopne
xchg
mov
mov
or
mov
jbe
add
push
sti
pop
aas
add
les
mov
or
jle
dec
mov
mov
iret
cmpl
sahf
in
adc
in
or
push
pop
pop
sub
cmp
mov
ds
movsb
adc
add
inc
sahf
sbb
inc
xor
mov
push
popl
daa
cmp
xchg
mov
pop
mov
mov
mov
sbb
or
sub
and
mov
cmpb
cmp
movsb
sbb
shll
mov
sub
clc
jne
adc
sub
push
je
and
roll
pop
xor
std
push
nop
mov
xor
call
jg
dec
fsubrs
cmc
lahf
xor
sub
and
pusha
hlt
subl
je
js
mull
add
cli
dec
div
lcall
jecxz
mov
jnp
imul
cmp
pop
daa
repnz
dec
mov
shlb
push
cmp
pop
pop
jg
aad
pop
jb
addb
adc
insl
mov
mov
or
pop
mov
repnz
insl
ss
mov
xor
push
mov
fimull
std
in
sub
frstor
lods
mov
outsb
fildl
pop
mov
push
in
and
and
pop
jne
lods
cltd
xchg
loopne
and
mov
adc
mov
dec
imul
push
repz
sbb
jl
lret
int
dec
adc
inc
push
jle
fbstp
jb
push
lds
xchg
push
jnp
scas
out
das
adc
cmc
dec
mov
and
ss
push
mov
xor
dec
inc
aad
add
dec
fchs
xchg
lahf
mov
mov
mov
jp
shlb
mov
inc
inc
mov
loopne
xor
mov
lcall
aam
jbe
sub
fstpt
subb
outsb
scas
dec
in
fldcw
lods
and
pop
mov
inc
jns
jno
fcomi
push
mov
adc
aad
in
cmpsb
sub
ret
mov
jge
outsl
mov
push
lock
mov
cs
mov
jle
lea
mov
dec
or
outsl
ror
push
les
out
into
inc
mov
xor
lock
sub
roll
mov
cmp
pop
test
sbb
add
mov
rcll
test
sub
clc
inc
enter
mov
push
or
adcb
in
jge
ljmp
jns
lea
movsb
push
xchg
adc
lret
mov
cmc
div
fwait
sbb
sbb
mov
push
inc
cmc
jl
lds
cmpsl
push
xchg
or
lods
jp
and
sub
mov
lds
pop
scas
fucomi
jns
adc
call
xchg
push
mov
cwtl
or
loope
or
popf
lret
lea
pop
mov
lea
pop
xchg
movd
popa
mov
sub
jle
mov
cmp
dec
nop
cmp
sub
stos
imul
popa
xlat
daa
pushl
push
jp
insb
aas
in
jns
repz
xor
jecxz
cmc
mov
mov
sbb
lds
out
sbbl
rorl
loope
adc
imul
mov
or
mov
jo
add
mov
push
push
shr
mov
outsl
push
test
push
xchg
mov
mov
xchg
mov
sub
ret
or
popl
cmp
cmpb
jg
lcall
lock
jae
and
jns
into
fldln2
popa
fists
iret
lods
stos
mov
jge
je
push
cmp
push
pusha
xchg
and
pop
stos
add
daa
cmp
repz
lret
mov
xor
and
out
jp
pop
outsb
pop
mov
mov
les
push
aas
add
clc
add
or
aaa
mov
mov
or
pusha
leave
mov
int
inc
inc
clc
jp
sub
sbb
mov
out
xor
jne
mov
xchg
adc
or
jo
adc
frstor
enter
data16
and
int3
inc
in
or
pop
mov
divl
insb
je
xchg
or
xor
shlb
test
in
loopne
loop
mov
lock
pop
mov
outsb
pop
arpl
jne
sub
mov
hlt
inc
int
shr
push
fwait
movsl
bound
sbb
mov
int
ss
insl
aad
push
mov
rolb
shlb
loop
pop
push
in
pop
ss
push
sub
stc
sbb
dec
xchg
data16
and
dec
sbb
mov
mov
out
xchg
ljmp
ja
or
push
mov
std
dec
push
aas
push
arpl
fsts
xchg
scas
cld
fisubrs
ja
cmp
mov
or
loope
arpl
mov
movsb
das
xchg
jbe
lods
sub
sub
jns
xchg
jo
repz
out
and
loope
ret
push
incl
jmp
mov
jle
fwait
xor
scas
adc
fldenv
sbb
cmc
push
mov
pop
movsl
jb
jo
mov
sbb
aaa
out
test
fs
jmp
sub
add
dec
icebp
lock
sub
in
xor
cld
jne
mov
loope
dec
mov
fcmovnbe
mov
and
std
ret
cld
mov
cli
push
scas
xor
or
mov
icebp
pop
push
inc
cmp
inc
lea
adc
scas
fistps
int3
pop
jno
imulb
sahf
pop
pop
fbstp
test
fiaddl
lret
or
cs
mov
cltd
fstpl
cmc
add
sub
jns
mov
dec
test
inc
pavgb
xchg
sbb
dec
xor
dec
test
test
sbb
insb
les
rolb
mov
add
addr16
mov
insb
rorb
mov
jmp
pop
push
jno
jo
das
aaa
es
pop
push
sbb
js
xchg
aaa
and
into
das
xchg
repz
mov
cmc
xchg
daa
inc
lods
popa
in
adc
mov
in
mov
push
ds
addb
inc
mov
sub
mov
js
mov
mov
out
mov
ds
hlt
iret
mov
xlat
insb
mov
fs
pop
cmovno
or
dec
jle
dec
add
or
es
in
mov
inc
dec
test
mov
mov
dec
lret
addr16
hlt
repz
cmp
fisubrs
xor
rcll
mov
xchg
and
hlt
push
pop
test
ret
sbb
gs
or
sub
dec
sbb
add
popf
push
jae
sub
mov
popa
xchg
push
jno
rolb
daa
jmp
das
mov
fsubs
stc
sbb
out
ret
fbstp
fsubr
dec
enter
mov
in
pusha
jl
add
pop
pop
dec
fstpl
jge
shlb
inc
mov
mov
add
pop
pop
mov
fcompl
jne
daa
roll
add
int
push
cmp
outsl
jno
movsb
arpl
adc
daa
or
add
rcr
jecxz
test
jne
repz
cmc
es
inc
jns
xchg
mov
or
fnstenv
pop
outsl
arpl
cmp
pop
or
xchg
lcall
fistl
mov
xor
jae
inc
hlt
push
in
xchg
adc
jbe
jmp
sub
pusha
out
cmp
ljmp
pop
fsubrs
cmp
mov
das
lahf
lds
inc
mov
xor
jb
sbb
lret
jnp
mov
mov
inc
cltd
fdiv
mov
popa
xchg
and
ljmp
jnp
push
lods
int
mov
popf
pop
jmp
lock
dec
adc
into
jg
adc
jbe
addr16
je
enter
mov
sbb
je
pop
dec
or
mov
sbb
dec
insl
out
loop
jmp
push
movsb
xchg
mov
pop
aaa
gs
ljmp
sahf
xor
dec
sarb
dec
add
test
pop
hlt
jb
in
rcr
ljmp
imul
add
cltd
aam
aas
dec
xchg
mov
jb
insb
ss
mov
out
adc
cmp
sub
mov
lea
fistpll
pop
lahf
mov
test
out
mov
xchg
cld
push
jne
and
mov
cmp
mov
gs
dec
mov
out
stc
mov
das
dec
cli
daa
imul
dec
cmp
inc
xchg
ret
cmpsb
daa
leave
aaa
mov
incb
jnp
out
mov
jbe
inc
sub
test
sarb
xchg
negb
std
mov
push
push
loopne
enter
mov
aas
adc
add
pop
ret
mov
dec
inc
inc
jb
test
stos
es
cmp
movsb
mov
add
cs
adc
xchg
clc
xchg
jo
cmp
mov
inc
push
add
lods
inc
adc
xchg
push
call
add
sub
inc
jl
data16
xor
pop
dec
ficomps
add
mov
pop
mov
mov
mov
cmp
cs
jae
mov
ljmp
jo
les
decb
jnp
leave
inc
cmpsl
push
ret
out
dec
mov
ss
ss
in
mov
sbb
test
mov
push
cmp
lahf
or
fwait
enter
arpl
sub
in
ss
movl
push
push
add
shll
lock
sub
xchg
in
shr
pop
es
xchg
fs
sbb
pop
cmp
insb
lods
nop
ficoml
fadd
ja
pop
push
xorl
mov
add
pop
nop
cmc
push
lods
enter
mov
or
push
jmp
lods
in
data16
leave
xchg
cmpsl
jno
lods
sbb
ret
mov
je
adc
xchg
push
inc
data16
jp
pushf
fmuls
mov
aas
jl
pop
jns
and
adcb
into
or
jmp
or
dec
mov
scas
sbb
or
out
addl
jbe
mov
cltd
fldenv
vpavgw
sub
lret
cmc
lds
xchg
and
sti
pop
mov
push
std
cmp
inc
pop
fstpt
loopne
je
xchg
js
mov
or
adc
cmp
cli
jmp
repz
cmp
push
mov
pop
clc
add
out
sub
stos
mov
int3
xor
dec
push
sbb
andl
leave
push
mov
insl
push
push
jecxz
dec
or
mov
push
lret
pop
rcrl
in
push
int3
cmp
inc
xchg
push
test
inc
jge
loopne
mov
bound
fisubl
sbb
scas
rorl
leave
cltd
xchg
jne
mov
lods
jmp
movsl
insb
dec
sub
popf
iret
iret
add
mov
xchg
mov
adc
int
js
fldl2e
dec
sub
adc
mov
dec
movsb
or
fbld
arpl
mov
pop
inc
ret
pushl
push
push
int
jno
dec
push
cmp
xchg
jecxz
push
test
xchg
add
mov
mov
repz
out
popf
jae
outsl
cmp
dec
mov
mov
cmp
xor
push
or
sbb
adc
jno
jecxz
inc
jl
cli
dec
and
jg
pop
pushf
movsbl
fcmovnbe
adc
aaa
jo
les
lahf
loopne
push
push
icebp
adc
mov
aaa
mov
pop
jecxz
jb
push
mov
pop
or
sahf
jge
push
ret
jbe
sbb
dec
sbb
inc
xchg
mov
fildl
lcall
rcll
pop
loope
pop
xchg
jae
enter
add
xchg
mov
daa
mov
jo,pn
sub
std
pop
jne
add
sbbl
jl
sbbl
mov
fwait
int3
jb
mov
pop
mov
out
mov
jp
add
shr
mov
sub
outsb
mov
jge
adc
mov
inc
loopne
xor
ret
mov
adc
or
or
mov
mov
push
inc
push
dec
aas
out
out
rcll
xchg
fs
cmp
cmpsl
das
cmpsl
js
inc
and
in
lock
inc
icebp
push
jle
dec
jecxz
and
pop
rol
sbb
inc
pop
fwait
or
cwtl
push
push
fstpt
dec
mov
ret
addr16
pop
jno
lds
cmp
mov
add
add
jo
lods
push
outsb
adc
mov
push
movsb
js
loope
gs
push
sub
pop
pop
test
adc
insb
jmp
and
inc
xor
jecxz
out
xor
movl
jl
outsl
or
test
imulb
int3
mov
icebp
xorl
adc
or
adc
in
mov
cld
movb
push
lea
in
sub
sbb
mov
lahf
cmc
or
mov
call
stos
jecxz
popf
or
test
shll
sahf
adc
rcr
test
ja
insb
and
mov
push
mov
mov
cmp
iret
xchg
mov
inc
fsubr
fistpl
lods
dec
and
out
sbb
mov
fidivs
data16
fnstsw
test
fs
sub
test
or
mov
cmp
cld
sub
mov
lods
fsubrs
lret
mov
mov
loop
jae
sub
push
mov
mov
xor
inc
add
mov
adc
dec
je
in
pop
rcrb
pop
rorl
adc
enter
mov
pop
cmpsl
pop
sahf
shll
push
adc
xor
lahf
sbb
add
jmp
repz
ljmp
cli
or
sbb
fwait
movsb
cli
stos
rcrl
push
xor
adc
jae
jge
cmpsb
outsb
xor
outsb
dec
cmpsl
insl
jle
push
jnp
adc
mov
adc
addr16
les
faddp
add
repnz
stos
jl
sbb
sub
in
mov
testl
mov
xor
aad
inc
mov
in
in
mov
pop
cmp
mov
cmpsl
jns
jae
mov
lcall
xor
mov
ficomps
int
js
push
add
jecxz
xchg
jg
pop
rclb
idivl
enter
mov
das
ret
mov
mov
or
inc
fst
push
jo
xchg
jno
jae
in
mov
mov
fstpl
std
rorb
cmp
push
sub
xchg
and
sub
push
insl
push
dec
aas
jb
aam
lret
mov
aam
xorl
adc
je
dec
and
sbb
es
out
xor
hlt
push
jb
call
ret
mov
mov
sar
sub
jg
mov
lods
or
lods
sbb
jecxz
ljmp
cmp
aam
inc
sub
aas
je
and
ret
stos
cmc
xchg
push
scas
mov
xchg
ret
lods
fnsave
xchg
adc
add
sub
repz
stos
adc
pop
stc
push
pop
mov
xchg
andb
lods
push
xchg
stos
enter
sub
jb
dec
lret
cli
out
add
pop
and
shll
and
add
cmc
pop
daa
pop
xchg
pusha
cwtl
push
outsb
inc
mov
jle
and
jbe
rorl
jmp
aam
and
jb
outsl
mov
inc
push
sahf
dec
jnp
xchg
into
cmp
xchg
mov
sub
cmp
icebp
push
es
inc
divl
push
es
sbb
mov
repz
pop
xchg
jb
and
mov
dec
add
sbbb
adc
cwtl
pop
jmp
lea
jbe
fisttps
mov
fsub
cltd
fs
xor
dec
jo
push
push
repz
inc
dec
stos
mov
call
lock
and
insl
shrl
xor
jle
aas
insb
and
jnp
dec
sbb
popa
inc
ss
push
pop
push
sub
cli
pushl
and
scas
popa
or
jae
pop
jge
out
xchg
xchg
jl
cmpsl
and
inc
callw
out
idivl
negb
daa
jle
mov
xchg
mov
jo
pop
or
xor
push
jne
gs
jmp
cmp
imul
sub
enter
mov
push
popf
pop
push
push
inc
inc
sti
mov
out
movsl
fs
jnp
dec
pop
cmp
into
pusha
outsb
out
cli
lahf
mov
add
clc
repz
push
subl
jl
dec
sahf
pushf
sub
aam
pop
and
xchg
hlt
loop
inc
or
ds
jnp
mov
and
add
xchg
call
jne
or
sti
cmp
pusha
dec
jno
fwait
jle
inc
loope
jns
xchg
fidivrs
loope
aaa
out
shlb
sahf
mov
popa
clc
dec
aad
sub
repnz
fisubrs
push
and
jp
pop
jle
popf
leave
outsl
ss
ffree
add
dec
roll
mov
sbb
mov
daa
pop
outsb
pop
inc
addl
lock
xor
lods
mov
push
daa
mov
daa
fldcw
jg
mov
rcl
loop
push
jo
mov
inc
out
insl
jnp
xlat
adc
mov
push
push
mov
mov
decl
mov
fimuls
popa
xor
add
aad
adc
xlat
movb
mov
push
mov
adc
mov
lret
xor
es
cltd
fstpl
jae
enter
bound
mov
daa
and
adc
sub
fnsave
mov
imul
sub
add
lds
rcll
repz
popf
sub
mov
cmp
lock
bound
cmp
mov
adc
test
data16
mov
test
sub
mov
pop
iret
repz
push
jecxz
push
jne
shrl
add
adc
and
dec
stc
jge
mov
jl
jbe
or
pushf
mov
push
lds
cmpsl
repnz
pop
adc
dec
xchg
and
pusha
xchg
roll
dec
leave
jge
rorl
jnp
or
clc
sub
jge
or
mov
inc
mov
mov
test
addl
outsb
sbb
sbb
inc
pop
xchg
aad
add
and
cmpsl
xlat
xor
cmc
andl
mov
mov
sbb
std
das
jo
jle
adc
jg
bound
or
mov
dec
lahf
jbe
sub
add
sub
sub
jb
insb
in
sub
xchg
add
out
mov
dec
and
repnz
sbb
in
jg
fdivp
push
push
daa
mov
inc
dec
pop
dec
push
jmp
aas
ret
fistl
cmp
jp
adc
outsb
mov
leave
push
inc
loopne
sbb
pushl
adc
aam
out
std
mov
sbb
aas
xor
pop
fst
in
pushl
and
jae
lock
inc
ja
mov
faddl
movsl
sub
in
mov
jns
rorb
push
pop
mov
mov
xor
pop
ljmp
lea
dec
addr16
adc
xchg
je
inc
test
xor
xor
out
lahf
inc
or
scas
push
mov
sub
pop
push
in
rcrb
push
add
inc
je
test
xchg
aad
inc
aas
repnz
fldl
sub
cmp
jns
xchg
adc
sbb
mov
test
sbb
das
clc
xchg
jbe
push
dec
lock
icebp
xchg
inc
loope
jb
push
cwtl
aad
shl
lods
sbb
mov
dec
inc
ss
cmp
movsl
leave
jle
mov
mov
lret
repnz
jns
jl
dec
cmpsb
in
repz
xor
sahf
mov
pop
lahf
jle
cmp
xchg
mov
into
mov
add
in
fists
fmull
cli
icebp
repz
mov
std
faddp
pop
test
mov
mov
sahf
push
in
aaa
shr
cmpsl
movsb
aad
mov
fs
aad
or
add
setge
fs
sbb
and
movsb
cmp
stos
faddl
into
mov
fs
xor
push
lods
and
into
pop
jb
adc
test
ljmp
icebp
sbb
sbb
subb
popf
inc
xchg
out
loop
cld
xor
gs
pop
fwait
pop
push
das
cwtl
cwtl
test
jb
stc
sbb
push
pop
std
jns
in
in
and
xor
pop
aas
xchg
push
inc
test
sub
dec
rcll
xlat
arpl
nop
push
dec
ja
xchg
icebp
pop
rcr
fildll
push
fs
movsb
outsb
xchg
push
mov
cmp
inc
sar
jae
aam
movsb
jnp
sti
pop
int
push
mov
and
shl
push
jnp
push
pusha
fnstsw
inc
xchg
push
jb
jo
test
xor
sbb
bound
mov
hlt
cli
ja
sub
cmp
into
addr16
mov
sti
out
adc
sarb
pusha
fsubs
sub
pushf
add
fldt
negl
dec
mov
clc
jno
fdivl
popf
popa
out
ficoms
imul
pushf
adc
lods
push
andb
pop
push
pop
mov
insl
adc
out
lcall
xor
fwait
shlb
xchg
fisttpl
push
fcoml
add
loop
cmp
mov
push
nop
out
jae
test
push
fsts
push
push
stos
pop
mov
and
aam
push
bnd
pop
out
inc
and
or
popf
pop
mov
push
cwtl
bound
scas
jmp
icebp
mov
clc
stos
and
dec
jb
data16
lcall
inc
mov
clc
es
aam
xor
insl
aaa
addr16
sbb
pop
insl
sub
xchg
sub
jg
push
xor
pop
ja
les
sub
sahf
mov
jb
in
mov
cltd
xchg
xlat
xchg
mov
cmp
fs
xor
and
iret
xchg
and
fsubl
mov
in
mov
xchg
xchg
push
cli
sbb
ja
es
out
lcall
sub
lds
push
call
faddl
sbb
pop
xor
stos
out
repnz
out
and
inc
mov
fisubl
mov
or
mov
sti
jnp
iret
lock
dec
add
mov
or
invd
inc
mov
pop
jle
adc
xchg
test
push
pop
adc
or
outsb
xchg
rorb
and
adcb
ret
xor
mov
mov
dec
mov
in
mov
lret
fsts
jg
stc
sbb
rolb
enter
ficoms
jmp
jnp
cs
popa
inc
jle
mov
adcb
push
inc
add
lahf
dec
inc
testb
aam
jecxz
adc
xor
in
fdivl
sti
repnz
loop
iret
mov
jp
xchg
addr16
std
insb
mov
jnp
add
imul
and
mov
pop
cmpb
in
daa
out
dec
aam
insb
insb
push
std
dec
xor
fadds
mov
mov
mov
enter
mov
inc
xor
outsl
dec
aas
mov
std
insb
aaa
lea
int
fstps
and
mov
int
aad
sbb
or
inc
cmpsl
pop
mov
pop
push
int3
pop
cmpsl
mov
pop
lock
and
xlat
rolb
sbb
je
repz
and
dec
dec
addl
push
movsl
lods
pusha
push
cmp
nop
sbb
repz
pop
push
pop
jbe
jnp
hlt
adc
es
adc
fadds
imull
jp
jl
int3
xor
mov
cltd
cmpl
cwtl
xchg
dec
xor
inc
dec
or
sbb
pop
stos
mov
xorl
std
lahf
xrelease
repz
cld
lods
popf
add
adc
jle
femms
test
imul
add
mov
loope
and
xchg
dec
fs
sbb
lret
push
inc
xor
mov
lods
mov
sub
push
lret
cmp
push
xchg
pop
xor
mov
in
xchg
test
push
fs
pop
jns
dec
add
out
stos
fyl2xp1
fisttpll
stos
xor
adc
je
add
mov
sub
push
mull
daa
lds
mov
push
push
sub
nop
lea
mov
pop
dec
mov
mov
mov
and
inc
int3
cwtl
loope
xchg
negb
jbe
seto
push
icebp
insl
jmp
cmp
inc
push
and
loopne
lods
cs
popf
adc
pminsw
roll
inc
cmp
jge
push
cmp
imul
orb
xchg
nop
xchg
jb
mov
mov
xchg
pop
mul
cwtl
pop
mov
lret
cmp
sbb
daa
dec
shl
lock
xchg
lea
pop
push
mov
lods
pop
sahf
mov
push
mov
jns
mov
iret
inc
jno
xor
inc
mov
push
outsl
nop
inc
js
scas
xor
and
mov
or
sbb
mov
lock
mov
fdivrl
mov
lock
push
ja
jp
mov
mov
insl
pop
ret
test
add
pop
cli
inc
push
lods
cld
jbe
incb
jp
mov
jmp
xchg
cmpsb
push
mov
xor
into
jmp
lret
mov
pushf
out
jb
cwtl
fiadds
lods
subb
daa
out
bound
rolb
rcrb
mov
xor
les
xor
or
ja
push
fptan
jb
in
repnz
flds
xchg
inc
mov
jne
mov
mov
ljmp
lea
inc
xor
movsb
jne
push
xchg
repnz
jns
xchg
adcl
sbb
mov
insb
cmp
mov
dec
jmp
mov
insl
int3
rcrl
and
movsl
in
inc
cli
call
sub
ret
lods
jg
pusha
adc
push
in
popf
dec
mov
cmp
add
mov
test
in
cltd
mov
clc
xchg
das
mov
push
push
int
mov
sarb
and
xor
ds
testl
inc
and
sbb
jae
je
clc
xlat
mov
aam
mov
push
sub
in
dec
sub
test
pushf
lret
sti
pop
jmp
and
mov
push
loopne
or
mov
or
sbb
loope
mov
xchg
sbb
push
icebp
out
adc
pop
sbb
fs
add
aam
add
loopne
mov
mov
inc
add
ror
cmc
dec
mov
shlb
push
cmp
loop
jne
out
fisubrl
xor
xor
xor
xor
popf
sub
jae
or
xchg
loopne
inc
into
jmp
xchg
cltd
and
inc
mov
jae
mov
mov
pop
stos
adc
jbe
imul
lahf
dec
scas
push
fs
fs
add
rcr
lods
rolb
mov
fsubr
repnz
mov
jne
mov
shlb
mov
push
arpl
cli
out
cltd
test
fisttps
fucomip
mov
notl
xchg
xchg
push
jnp
and
sub
lds
ffree
cmp
outsb
jne
dec
fsubrl
cmp
test
add
adc
dec
ja,pt
pop
dec
push
dec
sbb
adc
loope
pusha
mov
or
daa
dec
pop
clc
and
dec
push
push
pop
lret
inc
jg
jo
shlb
cmc
sub
jmp
push
pushf
daa
dec
mov
imul
xchg
mov
mov
cmpsb
inc
cmpb
fs
ja
mov
cmp
mov
inc
pop
test
stos
jns
mov
mov
mov
bswap
inc
bound
lds
adc
and
jo
adc
ror
xchg
ffree
test
aam
push
je
inc
cmp
lock
movsb
cmpxchg
adc
stos
xor
leave
int3
pop
daa
push
mov
sti
fmuls
or
popa
and
push
cmpxchg
bound
pop
add
add
test
lret
stos
push
push
lock
mov
lods
sbb
lahf
lock
mov
arpl
arpl
jmp
int
cmpsb
ljmp
push
push
add
push
inc
mov
movsb
add
aaa
jmp
popf
decl
or
xchg
inc
xlat
and
pushl
or
insb
push
mov
out
or
test
fcomps
gs
adc
xchg
adc
pop
sbbb
lods
sub
jecxz
inc
inc
in
sbb
ds
lds
mov
rorb
mov
push
mov
add
dec
scas
jae
adc
sub
mov
imul
sub
sub
mov
and
dec
ror
push
sti
xor
cld
sub
aas
jns
jno
dec
add
enter
push
dec
outsb
fdiv
pushf
aaa
mov
jae
mov
ljmp
bswap
test
dec
fcomp
aaa
sbb
xchg
pop
pusha
mov
sub
mov
scas
mov
mov
mov
inc
dec
xor
pop
daa
inc
and
and
popa
mov
ficomps
cmc
aas
push
stc
push
data16
and
call
pop
sbbb
cmp
iret
stos
dec
andb
push
xchg
xchg
or
mov
adc
jp
dec
jnp
nop
lds
or
pop
adc
pop
daa
mov
cmpb
movsb
cmp
mov
test
dec
cmp
stos
jno
std
mov
pop
test
mov
iret
cmpl
xchg
mov
sub
adcb
ljmp
push
jne
sub
or
lret
push
add
or
pop
shl
mov
inc
xchg
enter
loopne
cmp
mov
and
addl
fwait
xor
push
aaa
cmc
mov
fprem1
dec
and
icebp
enter
xor
mov
int
rcrl
dec
inc
jns
jnp
cltd
sub
es
xor
ds
add
in
lret
in
daa
push
int3
xor
addb
xor
ljmp
or
push
jnp
mov
cltd
mov
jnp
sub
pop
sbb
cmp
arpl
dec
xchg
ss
xchg
pop
and
add
shl
cmp
test
les
or
out
xchg
inc
cwtl
xchg
cmp
xchg
aas
loop
outsl
pushf
lcall
mov
rcrl
pop
sbb
and
fnsave
mov
sbb
mov
mov
scas
mov
pop
movsb
cld
ret
insl
sbb
pop
adc
fimuls
nop
fildll
loopne
in
sahf
out
and
sbb
ljmp
scas
xchg
imul
scas
cmp
dec
sbb
mov
sti
mov
inc
xchg
xor
xchg
out
arpl
out
fstp
lahf
daa
in
je
sub
int
push
movsb
outsl
mov
adc
enter
jle
pop
cmp
mov
mov
cmp
leave
sbb
dec
out
jns
jge
push
mov
enter
repnz
pop
sub
add
cmpsb
jp
pop
push
push
cmpsl
je
adc
jle
mov
and
mov
pusha
out
icebp
dec
mov
push
fwait
xchg
inc
repnz
lret
clc
add
popf
rcll
mov
and
lock
dec
ds
fists
idiv
adc
addr16
add
lods
stos
xchg
dec
daa
xlat
xchg
daa
inc
cs
xchg
mov
rorl
stc
outsl
icebp
loop
xor
cmp
repz
lret
sub
inc
mov
cmovae
adc
lret
sub
and
sti
pop
lds
or
mov
cli
cltd
addr16
or
cld
adc
popf
cli
sbb
add
out
add
leave
sbb
rolb
and
cmp
pop
stos
sbb
cld
xor
cltd
and
enter
fwait
lods
and
jmp
jge
or
adcl
xchg
lea
pop
jo
fadd
lcall
mov
push
or
xor
rol
cmp
push
std
repz
arpl
xchg
lahf
icebp
pop
inc
lea
jbe
data16
sub
out
repnz
hlt
mov
mov
xchg
cmp
push
cmc
imul
ret
outsb
sahf
add
mov
or
loop
xchg
rcrl
icebp
in
sub
loope
pop
dec
mov
pop
sahf
sbb
aad
inc
icebp
xor
in
rcll
repnz
jmp
ja
mov
mov
jmp
incb
dec
dec
stos
xchg
push
addl
mov
test
icebp
xor
shll
mov
pop
aam
sub
js
push
push
loope
gs
test
mov
imul
bound
dec
dec
cmp
ret
pop
inc
sub
xchg
into
scas
ds
mov
sub
lret
and
xchg
inc
in
inc
ret
lcall
pop
movsb
jl
cmp
mov
jbe
fucomp
and
mov
sti
fs
fcmovbe
in
jg
pop
ljmp
xor
lcall
jl
dec
inc
std
and
shrb
mov
bound
or
jne
testb
inc
jne
lcall
xchg
call
popa
loopne
scas
dec
loopne
or
popf
ret
lea
and
inc
mov
push
repz
loopne
fstpl
add
lea
inc
fldenv
cmpsl
enter
jbe
push
ja
setnp
idivl
dec
push
lahf
push
or
shlb
adc
jmp
lret
mov
pop
mov
jo
push
jp
nop
stos
pop
stos
arpl
imul
xor
dec
hlt
push
dec
and
out
mov
in
jp
mov
test
add
ds
movsl
add
xchg
xlat
call
or
mov
lods
aad
sub
cld
hlt
loope
xor
mov
repnz
cmp
cmp
jecxz
cmpl
add
js
add
push
aam
lock
or
cmp
sub
icebp
fcompp
pop
inc
aam
enter
aas
xor
mov
enter
xor
sbb
divl
mov
sahf
and
sbb
or
loope
fs
pop
mov
ds
fsubrl
cmc
sbb
hlt
sbb
imul
pop
inc
in
insl
sbb
sbb
push
adc
lahf
sarl
aas
repz
mov
inc
enter
and
loop
jnp
orps
sahf
jg
add
stc
mov
mov
aam
pop
mov
jns
dec
jae
pop
shl
push
push
faddp
push
shrl
xchg
or
data16
into
xchg
jnp
imul
mov
pop
je
int
roll
or
inc
cmp
negb
cmp
rcrl
in
imul
lret
arpl
sub
fstpl
cmp
jb
pop
out
ljmp
rorb
out
loopne
aas
movsb
test
pop
or
cmp
ja
inc
fdivrs
pop
pop
add
pop
decb
mov
fwait
imulb
rcl
lcall
test
sub
pop
daa
cmp
nop
lock
in
mov
das
icebp
push
neg
in
aas
shlb
std
jnp
push
or
shrl
push
sbb
aas
scas
adc
mov
pop
adc
jge
rclb
call
int3
xor
cmpsl
lret
std
ficompl
iret
frstor
sub
inc
or
jns
dec
mov
or
test
insb
push
jbe
xchg
pop
aas
pop
daa
popa
and
jg
jge
aad
adc
cmp
les
pop
cmp
int3
cmp
lock
into
fdiv
lcall
ja
mov
or
mov
mov
mov
jmp
adc
arpl
xor
adc
add
mov
mov
out
xor
add
icebp
sahf
int
mov
fdivs
xlat
jbe
cmp
js
jno
out
int
daa
jge
arpl
movsb
pop
jae
push
mov
dec
adc
adc
pop
cmp
inc
movsb
lock
push
ljmp
hlt
mov
dec
inc
sub
jae
daa
shlb
mov
std
pop
add
roll
cmc
loop
lock
push
orl
repnz
testb
xchg
outsb
sti
sbb
xchg
ds
imul
negb
imul
pop
jmp
push
fidivrl
movsb
movsb
test
inc
aad
sub
or
pop
leave
aad
loope
mov
pusha
fsubp
mov
rcll
repz
jnp
mov
lahf
repnz
cmp
sahf
pushf
ficompl
sti
and
movsb
leave
and
cwtl
inc
addr16
and
sar
dec
sbb
jecxz
dec
sbb
pop
mov
add
popa
pusha
lcall
sub
xor
js
movsb
dec
das
adc
push
into
cmp
popf
rcl
mov
pushf
sbb
dec
mov
bts
mov
scas
mov
xchg
cmp
xchg
dec
and
xor
jmp
pop
sbbl
jl
xchg
and
dec
pop
and
out
repnz
pop
cmc
adc
jb
xchg
and
dec
push
sub
inc
pushf
and
enter
inc
or
sub
and
jle
mov
or
push
cmpsl
mov
movsb
jns
xor
int
sarl
in
arpl
sbb
out
insl
mov
push
mulb
mov
push
mov
ja
inc
lea
sbb
dec
mov
into
xchg
popf
rcrl
adc
xchg
enter
dec
push
rcrl
mov
dec
mov
scas
dec
incb
fs
mov
and
imul
adc
mov
icebp
dec
xchg
stos
bound
ret
xchg
adcb
lret
jmp
pop
notb
scas
sbb
xchg
loop
pop
push
je
and
inc
mov
adcl
ja
sbbb
movsl
dec
sti
inc
cmpsb
lcall
fsubrs
mov
ss
mov
mov
xor
push
add
ficomps
cmp
sti
ja
mov
fcomps
pop
je
xchg
test
mov
mov
pop
pushf
and
push
push
mov
cld
jae
jecxz
jbe
mov
sub
add
fxch
ss
icebp
maxps
or
mov
test
loop
int
hlt
xchg
mov
addr16
test
jg
dec
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
sti
sbb
aad
jo
xor
dec
inc
cmp
aad
jo
jno
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
test
insl
jg
inc
jno
cld
push
loop
push
add
add
pop
pop
aad
push
sbb
adc
inc
pop
xchg
sub
fldt
loope
xchg
pop
sub
dec
aaa
push
lahf
fs
pushl
ss
dec
sbb
or
jp
leave
movsl
mov
cmp
cmc
sub
or
movl
fnstsw
sbb
jns
xor
idivb
jnp
and
ja
sahf
outsb
ljmp
mov
fldt
cmc
cmp
and
and
cmpsl
adc
shlb
sub
imul
pop
aad
jle
or
jo
xor
mov
js
lahf
sub
outsb
js
inc
cmp
aad
jo
xor
dec
cmp
aad
jbe
xor
mov
cmp
lahf
fs
pushl
xor
mov
cmp
aad
jo
xor
mov
cmp
lahf
fs
cli
jo
xor
mov
cmp
aad
jo
mov
mov
aas
jb
in
aad
jo
and
mov
cmp
aad
jo
xor
cmpsb
inc
cmp
aad
jo
xor
pushf
fs
iret
jnp
decb
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
adc
cli
sbb
aad
jo
adc
inc
sub
sar
jo
xor
out
jle
lret
sub
xor
mov
fstpl
shlb
mov
cmp
test
jo
rdpmc
mov
cmp
aad
jo
xor
xchg
inc
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
xor
mov
cmp
aad
jo
fistpll
fs
pop
stos
ds
enter
and
pop
dec
in
inc
mov
push
mov
mov
push
pop
jle
popa
push
cmpsl
mov
cmp
fcom
fs
cmovg
add
fcomp
loope
xchg
and
mov
cli
das
inc
popf
mov
jecxz
push
sbbb
push
lds
dec
cmpsb
lret
add
arpl
push
loope
add
nop
jbe
stc
push
daa
pop
out
xor
nop
dec
push
xchg
rcl
mov
or
and
icebp
add
cmpsl
jmp
je
adc
mov
sub
mulps
xchg
pop
sub
xchg
mov
adc
fwait
sahf
cmp
jns
jne
sarl
adc
movsb
push
xchg
adc
stos
push
pop
mov
pop
pop
shrl
int
jmp
in
lods
out
cli
in
fwait
jp
divl
or
mov
pop
and
xor
dec
mov
push
fsts
push
xchg
sbb
inc
lret
repz
cli
cwtl
inc
outsb
pop
gs
jb
gs
mov
stos
rclb
or
push
xor
dec
ret
push
aas
push
sub
jge
ss
fcomi
dec
pop
je
pop
test
stos
pop
xor
pop
in
movl
mov
xchg
in
fsubs
mov
int3
mov
sbb
cmp
xchg
cmp
pop
ror
loop
jl
enter
or
imul
dec
pop
fidivs
push
inc
lret
mov
xor
jge
or
sbb
sbb
test
mov
aad
lret
aam
push
aad
ds
mov
jo
outsl
not
sub
mov
shrb
fucomi
mov
gs
mov
and
repz
mov
ds
jp
cmp
sub
cmpsb
aaa
xor
xchg
hlt
sub
lea
fwait
or
and
sub
jnp
inc
jne
and
or
lds
das
inc
clc
lods
mov
inc
push
cmp
jp
mov
repnz
jmp
cmp
xchg
test
adc
sahf
test
add
outsl
push
sahf
push
popf
ret
sbb
aam
jmp
xor
adc
lcall
jmp
push
lretw
int3
and
scas
mov
dec
mov
das
sbb
dec
push
sub
and
fimuls
push
push
shlb
sub
das
add
sub
sub
pop
fdivs
je
in
xchg
xor
push
enter
jno
outsl
cmp
pop
clc
mov
jbe
push
aaa
call
xchg
mov
xor
les
sub
pop
push
mov
jb
push
pop
sbb
xchg
imul
and
push
icebp
push
cmp
jge
sub
pop
int
or
rcr
aad
rorl
push
into
pop
adc
xchg
cmp
ds
stos
int
mov
jo
or
push
mov
mov
sub
sub
inc
into
les
imul
inc
xchg
jns
adcl
pop
cmp
out
out
push
pminub
jne
mov
repz
mov
cmp
int
inc
jmp
pop
subl
je
insl
in
adc
outsb
outsl
jmp
js
pop
jnp
lock
nop
xor
inc
ss
mov
gs
js
popa
push
fwait
xchg
popa
fildl
fwait
cmp
mov
lahf
mov
xor
inc
jb
insb
inc
dec
in
jmp
xchg
push
mov
fistl
and
add
pop
nop
je
jp
jmp
gs
jae
stc
inc
mov
sbb
xchg
les
cltd
mov
orl
repz
insb
cmovp
shr
mov
andb
adcb
loop
xchg
dec
dec
leave
mov
mov
pushf
aam
xor
mov
mov
add
jge
add
fbld
mov
mov
sbb
xchg
pop
ljmp
sbb
xchg
out
pop
and
and
mov
inc
push
rcll
jmp
mov
icebp
xorl
cs
mov
les
fadds
sar
mov
cltd
addl
insb
shll
mov
pop
adcb
aaa
mov
aas
and
test
lods
ffree
sub
jne
pop
cmpsl
leave
inc
mov
lret
pushf
jge
sbbb
mov
xchg
out
ljmp
pop
rcrb
push
push
cmp
mov
or
js
xchg
jbe
loope
std
jnp
pop
test
mov
std
xor
js
rorb
out
inc
pop
stc
jnp
bound
sbb
xor
into
cmpb
mov
mov
cmc
push
jb
xor
imul
test
pop
iret
cmp
rolb
sbbl
jnp
arpl
add
stos
cvttps2pi
jl
movl
cmpsb
pop
jno
or
xor
xor
push
rcrl
pop
insl
repz
push
outsl
fnstcw
pop
out
adc
imull
sub
add
clc
mov
jge
and
hlt
int
adc
mov
cs
mov
cwtl
inc
push
movsb
jno
inc
push
xchg
inc
sbb
and
mov
pop
in
pushf
imul
push
int3
jbe
cs
stos
das
addr16
movb
jns
mov
add
rcrl
jae
out
push
das
mulb
in
out
cmp
ficomps
cmpsl
in
sbb
lock
xchg
xor
mov
loopne
fisttps
xchg
js
cmc
cmc
aas
rorl
push
mov
cmc
jmp
and
jnp
mov
adc
dec
fwait
or
pop
rclb
xorl
push
movsb
aad
ret
fdiv
mov
jmp
or
xor
mov
inc
sbb
int3
push
jns
or
cmpsb
pop
mov
test
jmp
leave
dec
mov
in
ret
xchg
xchg
cmc
dec
popa
rorl
roll
sar
jmp
mov
mov
push
xchg
nop
movsb
and
dec
pop
xchg
das
mov
cmp
dec
pop
jne
mov
mov
lods
mov
aas
data16
arpl
rclb
cltd
jbe
andb
cltd
ret
inc
mov
repz
in
mov
and
sub
in
pop
imul
inc
test
rcrb
adcl
sub
aad
push
cmp
arpl
jp
pop
jns
hlt
xor
int
jge
and
loope
xor
cld
mov
push
test
ret
xor
xchg
test
sub
lods
inc
dec
je
testb
popf
dec
add
shrl
loope
rclb
dec
push
and
stos
shrl
mov
out
cli
in
test
test
mov
mov
cmpsb
cmpsl
cmp
mov
lcall
push
ss
inc
shlb
cmp
shlb
ljmp
jbe
test
popf
jns
cmp
mov
and
iret
popf
cmp
hlt
iret
xor
lods
pushf
or
cmp
je
jbe
mov
inc
aad
data16
sub
jle
aas
imul
inc
out
mov
mov
mov
aam
mov
xchg
or
ja
sub
inc
data16
negl
push
push
cmp
lahf
jg
mov
cmpsl
push
mov
jnp
mov
dec
pop
jns
push
test
mov
bound
call
ds
in
cmp
sti
adc
and
push
jg
das
popf
dec
inc
xor
pop
leave
mov
lcall
push
int3
frstor
xchg
pop
test
cltd
jb
mov
xchg
fisubrl
xchg
cltd
negl
sbb
xchg
ficoml
mov
lahf
jno
jae
inc
mov
les
lret
jno
xor
dec
and
test
rorb
insb
mov
lea
mov
dec
cmp
mov
sarb
inc
mov
adc
sub
movsb
shrb
lahf
xchg
dec
mov
ja
call
adcb
out
dec
stos
retw
pop
cmp
das
ss
cmp
icebp
inc
addl
leave
dec
pop
mov
xor
jno
cmp
add
inc
add
and
lock
enter
xchg
mov
lds
dec
or
or
push
sub
sub
std
pop
add
rclb
sbb
mov
push
stos
jmp
jbe
xchg
out
xchg
call
orb
xor
into
pop
mov
or
shlb
push
lods
pop
inc
jbe
enter
push
mov
jne
mov
mov
in
insl
loope
xchg
enter
lods
sbb
cmp
leave
aas
pop
cmp
fildll
jmp
mov
dec
icebp
push
outsb
jbe
lds
clc
bound
out
fisttps
pop
mov
mov
lahf
pop
add
gs
mov
or
mov
outsl
mov
out
xchg
sbb
mov
daa
jmp
mov
xchg
cwtl
cmp
cltd
or
ljmp
mov
and
pop
cld
es
rol
imul
jne
or
pop
iret
pcmpgtd
popf
mov
testl
jmp
clc
push
sbb
out
xchg
xor
mov
mov
cli
jmp
int3
mov
in
leave
out
mov
fwait
push
pop
jp
fsubp
cli
and
cltd
inc
cmp
cmp
aaa
stos
adcb
movsl
fwait
jp
das
scas
mov
jmp
pop
adc
adc
jl
out
and
ret
imul
inc
pop
lds
cmp
lcall
out
outsb
add
xchg
jns
addr16
test
mov
fildl
push
or
je
dec
cmpsl
ret
nop
adc
es
ret
add
lea
and
or
out
or
and
cmp
dec
add
data16
xor
aad
inc
nop
push
pop
movsb
inc
and
loop
add
test
repz
in
popa
enter
cwtl
add
sbb
es
cli
shlb
test
repz
das
test
dec
dec
hlt
in
shlb
outsb
inc
mov
xchg
cmp
movsl
lods
xchg
fistpl
push
inc
pop
fs
lock
cs
leave
in
mov
ret
out
xchg
cmp
imul
cwtl
fidivrl
aas
push
dec
gs
push
dec
int3
and
aad
sub
cmc
push
push
in
or
push
and
pop
cmp
es
and
mov
inc
outsl
call
cmp
test
adc
insb
test
adc
icebp
clc
mov
mov
loope
and
jecxz
cmpsb
xor
xlat
movsb
ror
xor
call
sahf
test
mov
cwtl
imul
popf
test
inc
repnz
insl
xchg
jae
cmp
in
iret
shl
push
push
push
cmp
stos
jg
pusha
pop
mov
pop
fstpl
inc
mov
pop
int
std
int
mov
jecxz
in
xor
insb
xchg
and
adc
loopne
cmp
or
pop
into
inc
andl
inc
testl
dec
mov
clc
cmc
shll
ret
dec
shll
shufps
lock
or
and
and
out
dec
mov
add
in
push
push
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
