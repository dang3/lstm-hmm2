jae
lock
sbb
lahf
pop
push
repz
pop
pop
scas
into
mov
and
call
jl
in
int
mov
mov
pop
jno
mov
push
cld
inc
test
cwtl
dec
les
in
add
shrb
or
cmp
sahf
mov
mov
int3
fstpt
ljmp
ds
scas
adc
and
push
pop
in
adc
push
insb
orb
inc
xor
iret
dec
in
inc
hlt
sti
and
sbb
xor
into
repz
cmp
push
scas
mov
sahf
sub
fwait
loope
push
or
rcrl
repz
jns
xlat
and
xchg
pop
lds
pusha
fabs
in
aad
jo
mov
inc
or
or
inc
and
mov
adc
vpackuswb
cvtdq2ps
int3
stc
push
fistl
pop
mov
and
push
clc
pop
aad
mov
xor
popf
mov
jg
imul
adc
mov
stc
aam
insl
pop
outsl
js
pop
enter
xchg
jbe
add
inc
cmpsl
lods
stc
pop
inc
cmp
adc
push
icebp
cltd
push
xor
or
sarb
lods
bound
cli
shll
inc
repz
pop
das
xchg
idiv
jno
pop
nop
sarl
xor
lcall
sub
scas
jge
insl
fs
mov
movsb
sbb
rcl
out
cmp
or
pop
sub
in
xchg
scas
repnz
ror
push
add
cmpsb
push
das
mov
push
pop
adc
jg
jge
divl
ljmp
xorl
xchg
mov
mov
lods
jl
mov
jns
into
es
sub
dec
das
enter
lds
sarl
xchg
stos
sub
lea
jecxz
mov
nop
pop
sub
sbb
test
ret
xor
inc
pusha
in
add
movsb
cmpsb
pusha
and
cltd
mov
dec
pop
jecxz
aam
imul
negb
cmp
mov
or
jne
sub
insl
movsb
fcmovnbe
mov
pusha
inc
sub
sub
mov
xchg
adc
cmp
inc
adcl
hlt
enter
inc
xor
pop
mov
arpl
xchg
jg
ja
stc
jg
push
leave
dec
stc
cmpsb
fcoms
xchg
ret
or
push
mov
dec
repz
daa
dec
adc
sub
xor
pushl
ficoml
cmp
imul
test
add
push
das
clc
mov
pop
iret
fdivrs
ja
icebp
cmp
add
push
cs
gs
out
push
xchg
jae
sbb
push
fcmovnbe
pusha
int
fsts
pop
cmpsl
or
push
xchg
imul
mov
cli
shlb
pushf
add
rcrl
rol
cmp
mov
in
xor
jmp
mov
mov
popf
fwait
outsl
jne
xchg
pop
xchg
dec
dec
xlat
filds
add
psubq
and
cwtl
or
out
xchg
sub
cwtl
daa
inc
inc
hlt
mov
fistpl
push
incl
outsb
pop
jne
mov
in
push
stos
sar
fmuls
push
fistpl
aam
pop
shll
or
inc
in
push
add
inc
sahf
mov
rolb
inc
daa
inc
clc
jge
push
testl
insl
sti
shll
lahf
sarl
add
pop
jae
leave
pop
sarl
add
push
popa
ljmp
rdpmc
sbb
rol
push
jge
lret
inc
cs
inc
sbb
xchg
push
adc
sbb
mov
cmp
mov
and
mov
aad
jnp
rol
sarl
cmp
sbb
cld
out
jecxz
mov
int3
push
mov
shlb
jb
and
push
idivb
stc
lds
arpl
loopne
inc
inc
jo
xchg
mov
insb
dec
xor
call
push
icebp
cltd
jnp
mov
mov
jmp
and
loope
sbb
cmpsl
cmp
dec
cmp
addr16
mov
push
movl
insl
clc
mov
insl
pop
aaa
mov
add
dec
enter
movsb
imul
daa
mov
lock
outsb
es
imul
jnp
mov
dec
xorl
push
cmpsl
out
push
fsts
pop
out
sub
and
les
or
pop
push
push
push
fs
push
adc
xlat
xchg
and
jb
and
leave
test
sub
enter
dec
mov
in
adc
and
daa
sbb
mov
jle
xchg
test
scas
xor
movsb
and
pop
xor
xchg
dec
out
outsl
push
sbb
pop
xor
mov
es
and
or
pop
lock
addr16
dec
nop
lock
xchg
and
js
in
aam
pusha
push
mov
and
jne
push
stc
out
in
or
push
and
lods
out
icebp
push
mov
outsl
cmpsl
adc
push
adc
bound
nop
test
out
ret
stos
cltd
sub
sub
jl
push
sub
xchg
addr16
repz
xor
xchg
xchg
pop
ds
movsb
push
mov
js
xor
shlb
loope
repnz
mov
pop
pop
outsb
cltd
loopne
mov
jle
test
cmp
mov
inc
rcrl
add
test
call
mov
jecxz
inc
scas
inc
jne
push
pop
shll
ss
mov
pusha
imul
mov
pop
sub
mov
xchg
xchg
jp
aam
cmp
mov
outsl
inc
add
dec
jg
in
clc
ljmp
aas
fs
jge
rcr
flds
fsubrp
mov
aas
orl
lret
out
sbb
loopne
mov
icebp
jl
xchg
std
mov
sbb
jae
in
outsl
dec
imulb
dec
pop
mov
lods
dec
sub
stos
mov
cmp
call
dec
xchg
scas
negb
mov
sahf
pushf
jae
mov
jmp
pop
jge
mov
dec
cmp
sub
fnstsw
mov
pop
adc
sbb
hlt
sub
and
sub
inc
ret
bound
ds
xor
lret
dec
inc
shll
ljmp
nop
shr
add
clc
imul
jg
test
cmp
data16
xchg
ret
cmp
loop
mov
mov
sbb
shl
add
fmull
cmp
jmp
jmp
mov
sahf
push
push
cltd
mov
out
push
cmc
xor
dec
xor
rorl
shrb
push
push
in
jmp
cmpsl
sahf
in
push
cmpsl
stos
imul
mov
sarb
jae
decb
rclb
mov
lret
sub
lock
mov
dec
pop
and
add
push
lcall
iret
and
push
xlat
jmp
test
repz
out
dec
rorb
fs
in
sub
jno
int3
lock
int
nop
insb
pop
add
and
xor
sbb
xor
icebp
ret
or
sbb
adc
fdivr
xor
mov
add
mov
sub
inc
mov
sub
std
shlb
add
mov
pop
mov
out
outsl
cmp
fwait
push
sub
dec
pop
ljmp
inc
jl
aas
pusha
jbe
pop
in
stos
ljmp
sub
out
xchg
jl,pn
push
fdivp
dec
sbb
into
lret
sbb
cwtl
mov
inc
fcomps
cmc
outsb
shlb
hlt
test
or
adc
dec
lods
add
adc
jb
dec
mov
jle
cmp
sbb
mov
dec
adc
js
into
pop
sub
jo
pop
ss
mov
mov
aaa
add
mov
out
popf
adc
fsubrp
cmp
pop
leave
call
fidivrs
jno
xchg
dec
push
imul
and
jle
enter
sbbl
call
loop
dec
xorb
repnz
iret
mov
sti
mov
lahf
pop
cmp
xor
xchg
adc
jle
inc
jle
push
lea
in
xchg
sahf
mov
xor
mov
mov
dec
or
mov
scas
mov
jne
sub
lret
int
push
bound
mov
cmpsl
add
repnz
cltd
xchg
xchg
jp
adcl
push
test
ds
dec
fdivs
fmull
push
loopne
sbbl
cs
inc
sub
test
jp
pop
lods
inc
dec
fwait
in
pop
aas
cli
dec
test
insb
loopne
int3
mov
in
loope
ss
daa
sub
ja
sub
nop
lahf
xor
add
rorl
pop
rclb
movsl
mov
int3
aas
pop
aam
cwtl
rcrb
xchg
test
add
sti
andb
push
jno
push
xchg
push
dec
enter
out
cltd
scas
add
ja
dec
sbb
sub
rclb
testb
xchg
xor
xchg
dec
ds
cmpsb
icebp
dec
sbb
jle
mov
jne
rclb
mov
push
roll
std
sbb
fistpl
push
repnz
mov
mov
nop
sbb
jecxz
les
dec
loop
jae
dec
adc
sub
imul
js
nop
xor
out
sbb
add
dec
popa
or
add
pop
movsl
mov
insb
shll
nop
sbb
mov
lea
push
jge
mov
pop
adc
fistpll
repnz
rorl
inc
flds
inc
xor
hlt
cmp
mov
add
mov
leave
xor
and
les
and
aas
mov
jae
sbb
or
imul
xchg
and
test
adc
xchg
xor
dec
mov
rcl
cmp
adc
jno
sbb
mov
sbb
repz
sub
jmp
fidivs
push
mov
in
xor
xor
shlb
faddl
adc
data16
inc
pushf
jbe
movsb
push
fwait
xchg
loopne
jne
mov
call
test
sti
xor
jae
inc
cmp
out
or
loop
push
sti
hlt
mov
dec
push
jne
jge
jl
arpl
jp
pop
lret
div
daa
test
fsubs
scas
shrb
imul
jmp
sar
outsl
cmc
fistps
jnp
dec
lcall
in
pushf
stos
pop
into
cli
cmp
dec
sbb
dec
pop
imul
sub
nop
repz
mov
xor
aaa
sub
mov
das
insb
and
outsl
jp
fiaddl
xor
add
gs
sub
push
subl
pop
xor
cltd
ss
and
mov
negl
dec
mov
cmpsb
mov
adc
cmp
sarb
sub
gs
pop
arpl
add
not
and
mov
mov
out
jae
add
pop
lds
mov
jl
inc
aam
je
and
leave
aaa
fstpt
dec
dec
int3
jnp
xchg
jne
push
test
hlt
aas
or
mov
sbb
jnp
fcomip
jp
aad
ret
leave
push
mov
cmc
cwtl
dec
pop
scas
jbe
xchg
test
cmpsb
nop
pop
arpl
xchg
test
pop
mov
lods
out
call
lret
pop
mov
cmp
outsb
repz
mov
test
mov
inc
aad
cwtl
jle
jmp
xlat
push
add
jbe
dec
push
mov
jmp
add
jo
aaa
insb
leave
cmp
stos
outsb
fistl
xor
addr16
dec
js
bound
frstor
andb
add
scas
repnz
lea
mov
xchg
test
int3
lahf
mov
cmp
inc
in
jns
pop
pop
bound
sub
push
nop
ret
sbb
adc
aas
cwtl
mov
test
mov
pushf
dec
mov
jle
hlt
icebp
daa
xor
jae
adc
and
xor
push
xor
fisubrs
hlt
xchg
repnz
sbb
mov
mov
and
bound
movsl
ret
out
call
scas
dec
ret
insl
bound
nop
repz
mov
xchg
inc
icebp
sbb
stos
rcrl
xor
stc
test
aaa
sub
or
jne
jbe
stos
lret
data16
repnz
int3
push
xor
pop
add
stc
dec
mov
pop
ljmp
sbb
popa
xchg
dec
add
loope
insl
adc
mov
lods
mov
push
aam
push
sub
shll
push
or
push
lock
andb
in
sub
push
ja
sbb
shlb
frstor
sub
jge
pop
es
xchg
iret
ret
es
push
mov
int
lds
ret
stos
outsb
pop
xor
mov
out
mov
sbb
test
add
pop
xlat
scas
jle
xor
ret
mov
fisubl
insb
addr16
mov
out
xchg
lret
or
les
jo
into
inc
stos
adc
int
mov
jge
ljmp
loope
je
xor
clc
out
xor
aam
jno
lret
jecxz
movsb
dec
movsb
stc
test
pop
cmp
mov
xchg
loope
aas
fidivl
int
stos
loopne
push
sub
dec
sbb
push
or
push
xor
loope
test
sbb
testb
rep
sbb
add
div
push
inc
sbb
addr16
add
mov
mov
mov
or
lcall
cmp
sbb
sbb
xchg
push
mov
aas
js
pop
lock
push
cmp
jbe
std
dec
push
mov
push
push
push
inc
push
iret
mov
sbb
mov
std
outsb
inc
and
cmp
xor
jmp
jg
fldl
pushf
mov
stos
cld
sbb
insb
andl
jl
inc
fildll
inc
mov
xchg
sbb
jle
test
pushf
pusha
divb
or
pop
lcall
in
push
cmp
notb
add
outsl
lret
mov
xor
jo
mov
and
mov
inc
mov
adc
ret
xor
movsb
or
add
dec
daa
fildll
aas
jg
scas
mov
repz
out
sub
test
adc
and
dec
sub
cmp
sbb
addr16
or
lods
imul
nop
fistps
das
mov
movsb
cmc
jne
addr16
and
decl
out
or
mov
test
xor
cs
ss
mov
pop
dec
popf
sub
cmp
add
mov
jns
xchg
or
pop
lret
cmpsl
sbb
jmp
jge
adc
mov
and
dec
or
mov
imul
sub
clc
out
pop
pop
addb
pushf
cmpl
sbb
in
int3
insl
xor
mov
into
jmp
ss
lcall
and
cs
lret
js
adc
pop
hlt
jo
shrl
out
int
jge
push
cltd
sub
jmp
lea
or
pop
or
jecxz
arpl
hlt
mov
aam
enter
hlt
lea
pop
pop
fdiv
pop
ss
mov
xor
xor
cltd
adc
jge
mov
movsb
cli
les
and
xchg
int
jo
push
adc
mov
push
add
dec
pop
jae
popf
lcall
les
pop
and
cltd
sbb
mov
pop
bound
mov
sbb
mov
push
cmpsl
stos
adc
pop
dec
inc
mov
push
fs
mov
pop
bnd
test
fsubs
fst
xor
or
push
leave
cmc
push
lcall
fs
mov
jg
in
mov
dec
sub
and
movsl
aam
in
nop
filds
test
int3
out
and
ds
cmc
aad
mov
or
xor
mov
add
test
daa
jo
rcrl
mov
cli
roll
lock
addr16
dec
or
iret
dec
inc
call
xor
sub
idivl
call
js
cmp
lods
inc
push
push
mov
std
mov
fbld
mov
mov
jne
mov
cmpsl
xchg
pop
xor
jnp
ljmp
pop
addr16
dec
push
add
and
test
pop
and
ret
mov
jg
dec
ljmp
sub
cs
add
sub
in
mov
fisttpl
xchg
movsl
mov
xchg
xchg
or
movsb
out
xor
sbb
cmp
mov
test
adc
mov
adc
subb
mov
call
in
fsubs
jg
sub
cmp
pusha
leave
fldenv
into
dec
adc
mov
imul
jecxz
mov
xchg
inc
int
cld
test
mov
sbb
push
cmp
lds
and
mov
test
jge
bound
fwait
scas
jae
xor
mov
xchg
mov
jo
inc
cmp
andb
or
mov
icebp
scas
scas
push
and
outsb
adc
sub
add
push
loope
pextrw
or
jecxz
aad
sar
icebp
push
xchg
es
fs
and
call
cmp
lea
push
cs
jmp
jl
daa
push
mov
mov
sub
icebp
loope
push
push
repnz
fistps
filds
ss
mov
shlb
and
lods
jecxz
push
cmp
jmp
stos
aad
sub
mov
push
and
sbb
ja
sub
leave
daa
clc
dec
es
xchg
popf
inc
lds
jle
pop
adc
dec
mov
andb
movsb
js
loope
mov
rolb
or
addr16
out
lods
sarb
adc
lods
repnz
int
mov
push
or
in
mov
xor
int3
scas
push
icebp
add
in
imul
inc
jecxz
mov
jb
inc
ja
out
pop
inc
loope
adc
fcoml
or
sub
test
xchg
mov
imul
fistpl
xchg
lret
mov
jp
dec
lcall
adc
xor
jle
icebp
clc
cwtl
aad
sbb
jno
xor
cs
dec
sti
pop
dec
xchg
push
push
lods
imul
add
cli
out
pop
xorb
push
andb
std
sbbb
dec
cmpsb
xchg
xor
jle
and
shrl
incl
shl
adc
jns
xchg
mov
pop
push
arpl
cmpsb
inc
bound
aad
xor
cmp
mov
rcll
sbb
sahf
ret
push
in
lcall
add
jb
mov
mov
xor
movsb
xlat
and
fs
mov
add
pop
or
mov
ljmp
adc
jb
xchg
dec
sbb
mov
cld
mov
mov
ljmp
mov
test
std
cmpb
mov
xor
adc
sub
pop
mov
pop
inc
and
mov
imul
jmp
repnz
cmp
mov
orl
mov
insl
aad
pop
pop
leave
mov
fistpll
cs
je
ljmp
bound
push
js
pushf
test
mov
jb
leave
test
mov
gs
add
stos
insl
insl
adc
mov
push
dec
imul
leave
add
push
xor
or
dec
add
and
pop
add
pusha
aad
test
xor
sbb
cli
xor
push
arpl
aam
ljmp
sbb
popa
mov
scas
fidivrs
call
xchg
cmp
cmp
fisubl
push
lret
addr16
les
dec
cmp
add
or
inc
dec
ss
fcoml
imul
dec
lea
jge
dec
lock
xlat
cmp
xor
and
inc
push
leave
add
mov
movsl
ret
mov
jae
mov
lock
pop
pop
iret
bsr
cwtl
lock
push
out
xchg
popf
sub
xor
dec
sub
insl
inc
adc
pop
ret
jno
xor
push
ret
push
enter
mov
add
xor
into
xor
adc
xchg
mov
je
or
rcr
mov
pop
mov
add
sub
fs
mov
add
addr16
ljmp
addr16
sbb
std
stos
enter
rorb
outsb
dec
fnstenv
xchg
cmp
dec
pop
sbb
pop
lcall
mov
mov
and
ds
pop
push
sub
inc
test
xchg
xchg
sub
pushf
pop
jae
insl
mov
lods
pop
fnop
subl
jecxz
insl
js
cli
or
jae
movsl
dec
and
mov
faddl
sbb
cwtl
lea
lahf
xchg
pop
xorb
rcl
or
sub
mov
mov
dec
imul
in
or
mov
pop
into
cmpsl
mov
clc
xchg
sbb
lea
mov
cmp
in
int3
jg
outsb
xor
into
out
ret
lfs
das
in
add
ud2
pop
dec
sbb
mov
aam
loope
ret
mov
pop
xor
lahf
or
pop
pop
ja
add
or
stc
fs
ljmp
cmp
out
xor
dec
sbb
mov
xchg
stc
aad
shrb
lahf
roll
arpl
jp
sahf
ret
dec
push
pushf
fildll
movsl
loope
sbb
in
daa
sar
xchg
sbb
sbb
dec
and
andl
jne
imul
and
es
hlt
stc
ja
imul
or
xchg
or
in
dec
movsl
or
lds
int3
cmc
and
and
aas
and
add
clc
fsts
dec
pop
test
cmp
cmp
add
xlat
add
cs
and
hlt
movsb
mov
icebp
pop
xorb
mov
jae
retw
sbb
test
mov
ss
out
inc
fst
cmpsl
xchg
fbstp
push
jmp
dec
dec
jo
ljmp
in
push
xor
xchg
and
out
aas
test
push
sub
cmp
pop
mov
icebp
sub
add
repz
mulb
inc
inc
imulb
mov
test
test
xchg
pop
lods
fidivs
imulb
mov
jnp
lahf
cmp
xor
jbe
sti
inc
es
jne
inc
add
lret
movb
lahf
into
mov
popa
and
inc
inc
idivb
cmp
cmpsb
and
or
rep
je
pushf
adcb
and
or
sbb
adc
mov
mov
xor
imulb
movsb
mov
pop
cmp
mov
sub
mov
pushf
imul
or
xor
cmpsl
add
scas
push
loopne
add
outsb
jmp
jle
adc
inc
mov
push
inc
aas
mov
in
lahf
sbbb
sbb
xchg
std
addr16
clc
or
sub
out
sbb
dec
sub
dec
daa
test
cld
mov
adc
cld
sub
repz
add
adc
push
add
fnsave
das
mov
test
mov
xor
in
adc
push
jg
jmp
mov
pcmpgtd
xor
cs
mov
push
jbe
pop
pop
ljmp
cs
or
xchg
stos
adc
movsb
arpl
incl
and
add
out
int
jno
jns
in
out
or
cltd
mov
loope
movsl
jnp
aad
in
insl
jo
mov
mov
xchg
loope
and
mov
icebp
cld
adc
adc
dec
cmp
mov
shll
ljmp
push
adc
cmp
or
cwtl
jge
pusha
mov
jo
cmp
fwait
movb
jge,pt
repnz
mov
sub
xor
fcomi
imul
xor
clc
aaa
lcall
pop
aad
je
or
shll
mulps
aam
mov
cmp
push
mov
cmp
and
mov
jne
jae
jmp
ret
in
sahf
mov
pop
mov
hlt
and
mov
cmp
cmp
pop
sub
mov
push
out
ret
adc
test
js
sbb
mul
fcomps
lods
mov
fisttpl
pop
ret
xchg
mov
add
sahf
mov
cmp
push
push
rcll
ret
sub
jg
adc
mov
les
mov
ficoml
push
sub
sbbb
mov
movsb
frstor
dec
ljmp
mov
lods
dec
push
sbb
push
lcall
js
inc
fiadds
mov
loope
cmpsl
inc
or
rorl
ja
jle
fadds
movsl
jne
jo
pusha
xchg
or
decb
push
fisubl
jb
cmp
inc
out
aam
adc
xor
mov
inc
cmpsl
cli
push
andl
mov
mov
pop
loop
pop
mov
jae
mov
and
sbb
mov
xchg
pop
jge
xchg
imul
jecxz
xchg
stos
hlt
inc
pop
sbbb
lret
dec
jmp
sub
jle
lahf
int3
hlt
jb
jmp
inc
cmp
movsl
push
push
xlat
test
mov
aad
sbb
les
nop
add
ret
or
insl
xchg
in
push
mov
xorl
sarl
inc
xor
jmp
scas
dec
ja
es
xchg
mov
test
andb
jl
xchg
mov
or
cmp
test
push
ss
sbb
or
mov
mov
jno
mov
ljmp
je
aam
mov
loopne
pusha
movsl
jmp
pop
and
mov
outsl
lahf
aaa
xchg
push
pop
add
mov
push
movl
arpl
adc
dec
dec
push
sarl
test
lret
pop
inc
shrl
adc
nop
orb
pop
cmpl
dec
mov
sub
or
xchg
cs
out
outsb
and
test
mov
push
loope
mov
fbld
stos
or
pop
testl
gs
repz
pop
mov
std
scas
mov
pop
adc
dec
jae
lret
xchg
cwtl
jno
ds
push
cmpsl
mov
xchg
aas
push
mov
jo
es
xchg
rcrb
icebp
andb
adc
adc
aas
xchg
mov
and
test
xchg
cmc
loope
jne
and
es
cmp
scas
mov
fistpl
mov
shl
jecxz
dec
push
sahf
sub
xor
sbb
mov
pop
mov
mov
mov
sbb
hlt
loop
call
rcrl
pop
pop
sub
xchg
sub
or
addb
call
cwtl
loope
sbb
outsb
lret
push
leave
mov
in
addr16
insb
mov
push
push
or
push
dec
andl
in
les
fldl
add
stc
cltd
xor
in
jno
pop
subl
fiaddl
cltd
push
mov
xor
dec
adc
iret
daa
orl
fisubrs
push
ja
jp
out
pop
mov
dec
dec
out
or
repnz
lcall
arpl
in
add
adc
push
cmp
or
sbb
es
mov
divl
dec
out
repnz
mov
mov
pop
fiadds
scas
inc
jl
xchg
stos
jmp
mov
pop
cwtl
shl
push
repz
sub
inc
or
out
push
ljmp
cmpsb
xchg
pusha
pusha
adc
cmp
xchg
cltd
xor
stos
or
mov
dec
cmp
cli
and
stos
and
add
xchg
ja
lds
pop
pop
mov
pop
cmp
mov
and
into
gs
dec
mov
clc
shl
ds
xlat
or
pusha
aam
adc
outsl
imul
in
enter
and
setne
in
or
arpl
ficoms
xor
jb
ficoml
mov
bound
and
shrb
mov
adc
xchg
mov
jge
or
test
or
lods
mov
das
xchg
int3
andl
movsl
cltd
mov
dec
data16
sbb
ret
sub
pop
fwait
stos
sub
dec
stc
push
jns
jle
jb
add
cmpsl
pop
repnz
lock
xor
xchg
test
fwait
push
mov
cs
adc
mov
aaa
dec
xor
push
jg
dec
mov
and
sahf
aas
cwtl
sub
pop
jmp
jae
push
mov
iret
pop
add
cli
cs
daa
cmp
nop
and
mov
mov
pop
push
xor
xlat
mov
lret
cmpsb
xchg
dec
bound
adc
lock
aaa
loop
enter
or
dec
or
pop
in
out
cld
cld
xchg
mov
mov
in
push
enter
ljmp
or
pop
aas
adc
clc
jle
adc
mov
sub
in
adc
adc
cmc
aas
xchg
popf
sub
lods
aas
or
cmp
mov
addr16
inc
pop
fsubrs
push
or
fidivrs
popf
loop
data16
and
fst
pop
stc
fsubs
sahf
adc
lods
adcb
int3
lods
fnstenv
inc
xorl
aaa
mov
xchg
xor
clc
mov
popa
adc
or
dec
sub
cld
pushf
call
or
push
add
adc
cmp
test
or
push
mov
xor
adc
sub
rolb
jp
and
addl
test
adc
sbb
enter
cwtl
mov
lret
adc
lahf
dec
or
xchg
cld
dec
test
xchg
add
rcrb
xor
movsl
cwtl
add
sbb
mov
and
mov
mov
sbb
pushf
mov
cmp
add
shll
cwtl
mov
sub
out
popa
push
fnstsw
cmp
mov
mov
inc
lds
leave
fildll
pop
push
jns
sub
popa
hlt
in
pop
pop
inc
cld
xchg
dec
or
into
inc
xchg
jae
test
in
aam
xchg
fistpll
addb
outsb
ja
lods
cmc
jno
push
clc
outsb
es
es
movsb
mov
pop
add
jns
ds
mov
push
mov
and
and
lret
adc
sar
dec
pop
adc
mov
xchg
ret
or
mov
pop
mov
cmp
push
test
imul
pop
jb
mov
fists
jae
mov
je
in
popl
jge
jle
cmp
insl
push
pop
arpl
pop
lcall
push
sub
testb
movsl
shll
arpl
push
fsub
adc
clc
and
mov
pop
shrb
xor
in
and
aas
mov
and
scas
into
stc
or
test
mov
cmpsl
std
mov
stos
loopne
jne
sub
repnz
add
sbb
mov
or
push
rorb
sbb
jno
daa
test
jno
mov
decb
mov
loope
jle
inc
pop
inc
adc
jbe
pop
jnp
adc
fistps
ret
je
mov
push
push
fcmovnbe
or
jo
stc
jo
sub
rorl
ss
ss
sub
ja
and
outsb
push
sbb
mov
sub
into
dec
js
adc
xchg
mov
aaa
add
js
mov
shll
push
xchg
mov
xchg
out
and
adc
or
jne
jl
insb
cmp
push
rorb
adc
pop
jbe
pop
ret
sbb
mov
jbe
aaa
mov
enter
adc
xchg
push
adc
sbb
cmc
inc
lods
mulb
gs
jmp
lret
lret
cmp
and
mov
xchg
call
loop
in
cs
shrb
push
cmp
out
cmpl
dec
popa
lcall
mov
dec
je
dec
mov
cld
dec
mov
sub
and
fstl
push
or
mov
sbb
pop
push
clc
lock
stos
fwait
in
mov
or
dec
lcall
addr16
inc
or
push
add
and
or
fwait
pop
test
inc
adc
test
fsubrl
rolb
hlt
lcall
and
push
pop
fs
arpl
pop
cmp
mov
or
lea
xor
inc
inc
mov
pop
mov
mov
sbb
jecxz
insb
jle
mov
fdivl
ss
fcomps
xchg
pop
inc
test
insb
adc
pop
dec
aas
jp
hlt
mov
fisttps
sbb
ret
shl
mov
jnp
in
push
sub
add
cmp
mov
cmp
std
jne
inc
xchg
xor
dec
je
sbb
jne
bound
dec
sub
testb
push
sub
fnstenv
mov
inc
mov
sbb
jg
ret
xchg
jmp
les
sbb
es
aam
push
je
arpl
push
add
push
int
inc
sub
pushf
sahf
xchg
and
int3
push
rcrl
jge
pusha
js
mov
loop
inc
sub
bound
dec
pop
cltd
mov
imul
insl
xchg
std
xchg
icebp
popa
sbb
leave
sub
xchg
cmp
dec
push
cmp
fdiv
rcrb
in
mov
mov
mov
xchg
bound
dec
movsb
mov
add
aaa
sub
mov
icebp
pop
and
in
mov
scas
xchg
mov
out
cmp
jns
and
fs
arpl
xlat
rorb
xchg
push
or
imul
hlt
push
fs
pop
mov
aad
pop
in
cwtl
pop
add
stos
imulb
dec
bound
notb
xorb
loope
mov
nop
in
xchg
mov
dec
popaw
cmp
jge
in
movsl
stos
inc
jmp
lret
adc
cmp
add
sub
mov
lcall
roll
sarb
enter
mov
clc
lret
or
mov
mov
xor
mov
dec
in
mov
test
xor
mov
and
add
xchg
lock
ret
ret
ret
inc
lock
and
adc
push
push
not
lock
jecxz
dec
add
loop
shll
and
dec
pop
shlb
dec
inc
push
xor
mov
jne
out
xchg
push
ljmp
nop
ja
fcoms
sbb
or
nop
fstps
pop
lahf
pop
sti
cld
xor
test
ja
xchg
fdivl
inc
icebp
cltd
daa
ljmp
mov
lret
in
jo
repz
xchg
mov
outsb
ret
ret
dec
pushl
js
push
lahf
jg
add
cltd
xchg
xchg
cmpsl
movsl
fs
sbb
sub
outsb
jbe
bound
jne
xor
pop
out
add
sub
push
push
sub
test
push
mov
push
bound
out
gs
insl
test
repz
fdivr
ljmp
testb
imul
test
pop
xchg
lahf
cld
cmp
mov
arpl
out
ljmp
inc
xchg
iret
cmp
idivb
cmp
movsl
dec
inc
sub
stc
xor
orb
sti
test
dec
addr16
pop
cmp
data16
pop
push
ret
and
sub
hlt
sub
jbe
insb
shl
out
subb
jge
xchg
stc
sbb
jbe
mov
cmp
sub
mov
and
mov
inc
mov
in
sti
push
jl
mov
fldt
cmpsl
lds
dec
adc
xlat
mov
ss
inc
xchg
sub
or
dec
adc
mov
mov
mov
mov
out
sar
lret
jge
pop
cs
adc
lea
decl
add
add
or
push
inc
hlt
stos
sbb
insb
iret
ret
cs
ret
jns
mov
imul
xchg
or
je
add
xchg
or
pusha
cmp
push
not
xchg
mov
out
fcoml
es
sbb
mov
jbe
xchg
fnsave
cmp
notb
cwtl
push
sub
in
or
xor
pushf
sub
test
and
or
sbb
test
adc
cmp
adc
gs
leave
add
les
inc
sbb
ficomps
insb
add
adc
inc
add
cmpsl
fwait
push
test
mov
pop
es
stos
mov
dec
je
sti
leave
mov
mov
fidivrl
imul
fnstsw
pop
sbb
aam
out
or
mov
scas
dec
sbb
or
jecxz
mov
mov
out
insb
mov
and
in
in
lret
cmp
sub
subb
jg
sbb
mov
stos
pop
test
out
mov
sub
insl
ficomps
adc
pop
mov
adc
sub
sarl
insb
add
into
loope
mov
sbb
rorb
clc
stos
in
pop
in
inc
mov
xchg
push
dec
dec
dec
lods
jcxz
mov
lods
inc
xchg
int3
jecxz
xorb
and
aam
addb
dec
adc
mov
arpl
insb
cmp
stos
cltd
imul
xor
fsubrl
les
es
out
push
aas
jp
stos
or
push
cwtl
lahf
mov
pop
jg
jle
cmpsl
divl
xchg
or
mov
repnz
sub
add
leave
or
int3
out
mov
dec
out
stc
push
and
xchg
xor
sbb
mov
lods
iret
xchg
mov
pop
push
enter
or
adc
push
test
fs
sub
int3
adcl
sub
lock
stos
pop
xchg
or
es
in
cmp
push
cmp
jge
imul
pop
fldcw
jg
sub
fistps
mov
bound
and
shrb
or
xchg
aad
stos
ficoml
sbb
cmp
je
dec
cs
jecxz
add
jbe
lods
lods
adc
stos
cwtl
call
push
cmpsb
mov
mov
cwtl
mov
sub
cmp
cld
aas
jae
rolb
ss
and
cmp
xchg
fwait
sbbb
pop
jl
cmp
dec
cwtl
push
jl
lea
ljmp
push
movsl
sbb
mov
sbb
mov
insb
hlt
dec
push
or
pop
pop
jb
loop
popa
or
or
xor
push
cmp
cmp
mov
xor
sarl
inc
fwait
nop
push
lock
loop
dec
sti
ret
cmp
ds
iret
and
je
xor
xor
stc
cmp
int3
lods
fimuls
outsb
cmc
repz
push
test
cmp
mov
jmp
sbb
pop
test
cwtl
mov
xor
cmpb
mov
repz
jg
scas
arpl
es
sti
or
mov
inc
xchg
clc
jne,pn
and
pop
xchg
fbstp
inc
and
xorb
aam
mov
pop
imull
push
xorl
enter
jns
loope
push
jle
dec
and
push
loopne
or
push
addb
inc
hlt
cmpsb
xchg
jbe
je
lods
lods
mov
lock
movsl
dec
pop
push
jg
push
es
inc
add
push
fsub
jo
cmc
ret
sbb
bnd
cmp
adc
jecxz
in
xchg
shlb
rclb
fsubl
or
sbbl
inc
dec
lahf
mov
sbb
xchg
dec
add
ret
in
stos
int
addr16
imul
mov
jg
lahf
mov
xchg
sub
inc
inc
adc
mov
and
push
mov
sbb
push
mull
clc
xor
sarb
adc
sub
pusha
stc
scas
push
jge
pushf
cli
adc
cmp
inc
inc
pop
or
pop
scas
and
or
xchg
push
ret
sub
call
cli
xor
aaa
aaa
loop
xchg
sub
gs
adc
cmpsl
or
mov
sub
add
or
pusha
lods
aaa
sbb
mov
cmpsb
ja
mov
cltd
sub
pop
fiadds
sahf
loope
xor
outsb
cmc
xchg
dec
andl
aam
out
adc
sarb
repz
pop
sbb
cmc
les
loopne
and
xchg
inc
aad
out
mov
pushf
and
pop
mov
shrl
cwtl
dec
dec
inc
loope
dec
sbb
and
sbb
lret
dec
dec
popf
xchg
lahf
ds
jecxz
xor
and
mov
mov
clc
sti
fildl
jae
aad
mov
sbb
mov
mov
pop
jne
leave
inc
ds
add
cmp
jp
outsb
das
cmp
add
xchg
das
pop
loopne
pop
xchg
les
xor
nop
mov
testw
mov
xchg
scas
lods
daa
repnz
jge
mul
mov
aad
fildl
popf
stos
out
outsb
mov
mov
sub
push
sub
testl
ss
ljmp
fwait
das
push
cmpsb
ljmp
or
cmp
jge
js
inc
cmp
hlt
repnz
mov
sub
mov
inc
mov
cmp
add
popa
enter
loopne
mov
mov
rorb
rcl
cmp
mov
mov
ret
daa
xchg
subb
push
or
out
cs
xor
pop
xchg
sbb
cld
add
cltd
jle
add
fs
fidivs
mov
jle
add
movsl
pop
mov
lcall
mov
mov
inc
dec
mov
les
cmp
mov
stos
xchg
cmp
js
push
outsl
ds
leave
out
cpuid
cltd
mov
popa
cltd
arpl
ret
cld
pop
scas
stc
sub
popf
mov
jnp
arpl
xor
pop
arpl
fsubs
pop
or
cmp
insl
sbb
xchg
dec
dec
rcrl
fldl
add
xchg
lock
lret
jno
cmpsl
int
or
mov
push
dec
add
add
shlb
movsb
ja
jno
out
cmc
mov
sub
pop
dec
cltd
sbb
loope
loop
push
lret
arpl
push
mov
ret
call
xchg
sbb
pop
xchg
jae
sahf
jl
movsb
mov
shlb
pusha
jg
insl
dec
sbb
xchg
or
lret
and
test
das
mov
xor
push
mov
sti
fisubrs
xor
dec
popa
cmp
xor
add
test
cmp
mov
add
dec
hlt
sbb
or
xor
int3
cmp
scas
loope
div
mov
dec
xchg
sbb
xor
out
xchg
cmp
add
mov
xchg
lea
xlat
out
int
cmp
in
out
xor
aaa
fwait
repz
orb
test
cmp
push
sbb
and
push
lock
cmp
icebp
jl
icebp
sahf
or
or
test
mov
adc
shr
pop
dec
fwait
add
inc
sub
push
mov
rolb
xchg
adc
pop
jae
repnz
mov
call
push
retw
pushf
loopne,pn
sub
loope
jae
shr
pop
adc
fisubs
sbb
mov
imul
inc
mov
in
and
jne
inc
xchg
insb
sbb
cmpsb
xor
adc
jmp
add
and
shufps
lds
ficomps
adc
out
sti
cmp
in
xor
cltd
sub
sub
shl
aam
push
sbb
push
mov
inc
int3
mov
inc
adc
xor
mov
mov
cltd
ljmp
inc
dec
pushf
pop
or
dec
insb
mov
scas
or
out
cmp
stos
pop
push
sub
pop
push
sub
test
fidivl
mov
lods
lret
cmp
mov
pushf
pop
jb
mov
test
push
lea
into
aam
sbb
je
lcall
push
inc
push
inc
test
xor
mov
push
add
inc
cmp
ja
scas
xchg
dec
cmpsb
adc
sub
adc
pop
loop
mov
sub
xchg
jne
imul
icebp
in
loope
cmp
jmp
pusha
mov
xor
mov
into
shlb
ret
leave
adc
mov
ret
xchg
and
loope
xchg
sbb
pop
ret
sahf
mov
dec
shll
pop
push
cmp
imul
or
xlat
pop
outsl
push
flds
add
andb
push
mov
dec
in
pop
add
push
cmp
jp
leave
outsb
test
sbb
jne
lea
popa
mov
dec
mov
int3
arpl
push
ljmp
je
test
add
loop
outsl
faddp
insl
or
and
xchg
mov
daa
in
loop
xchg
in
dec
add
push
push
push
std
sub
adc
insb
icebp
xor
push
int3
mov
sbb
mov
inc
and
pusha
scas
cmp
fnsave
dec
dec
inc
sbb
cmp
xlat
inc
sub
loop
adc
sbb
ss
nop
rcr
mov
mov
xor
mov
pop
jbe
pusha
or
cmp
or
arpl
dec
mov
rcr
jns
lods
sub
clc
in
daa
or
push
add
push
out
leave
fstps
cld
int3
and
pushf
sbb
fnstsw
xor
jmp
stc
aas
mov
stos
int
mov
cwtl
sub
dec
lea
test
test
push
out
popa
or
out
or
xcrypt-cbc
cmpsl
xchg
je
adc
pop
imul
das
iret
pop
adc
inc
sub
inc
and
shll
mov
cwtl
jnp
mov
mov
and
sub
fucomp
ret
lret
lds
jb
xchg
popf
mov
and
fnstenv
mov
xchg
out
dec
mov
mov
adc
mov
shr
jge
pop
mov
sbb
pushf
cmp
ss
add
je
lahf
sbb
mov
pop
test
mov
and
sub
out
jb
fs
dec
ss
mov
movsb
scas
pop
jmp
idiv
adc
inc
je
xor
cmp
aad
xchg
add
adc
mov
movsb
push
fwait
loopne
pop
mov
stc
inc
and
fdivs
dec
into
xchg
mov
dec
adc
xchg
int
xor
xor
push
jno
jle
mov
dec
sub
mov
cmpsb
mov
scas
sbb
pusha
inc
lcall
mov
inc
inc
mov
dec
testb
loop
daa
rol
js
sub
push
dec
or
ljmp
insl
pop
incl
popf
lods
cmp
lret
ret
push
inc
mov
in
insb
aad
negl
pop
clc
cs
fxch
xchg
cmpsl
orl
xchg
push
sub
insb
push
incl
pop
dec
in
or
inc
pop
inc
adc
movsl
hlt
jb
pop
xchg
rclb
gs
or
stos
in
outsb
cmp
xchg
xchg
in
inc
fimuls
orl
loop
cs
pop
insl
lret
hlt
xor
shll
in
leave
mov
xchg
fwait
mov
inc
cmp
cmp
or
dec
dec
scas
push
in
sub
push
aam
adc
adc
outsl
jae
lods
mov
orl
push
aam
imul
dec
push
adc
push
ret
test
mov
add
adc
imul
cmp
sub
js
stos
or
movsl
in
mov
dec
addl
pushf
cmp
lret
mov
push
orb
insb
ja
xchg
xor
push
fwait
inc
test
idiv
pop
pop
mov
mov
ss
dec
pshufw
add
aam
fsubs
pop
shlb
mov
dec
fs
adc
mov
jo
rcrb
js
push
pop
pop
iret
ds
shlb
lret
ret
xchg
jge
add
mov
push
mov
enter
cld
ja
imul
fs
sbb
and
lea
lods
mov
add
lods
std
jbe
push
mov
dec
mov
xchg
adc
mov
scas
adc
mov
jbe
lahf
stos
gs
xorl
push
out
xchg
iret
lea
push
mov
cmpsl
mov
adc
sbb
mov
fsubrp
add
pop
mov
out
sub
or
test
pop
dec
fcomps
dec
xchg
xor
adc
lea
jnp
or
xchg
jno
add
lret
repz
cmpsl
xchg
scas
in
jns
push
iret
jl
adc
add
popf
addr16
daa
shll
shr
xor
out
adc
ret
sbb
or
jne
dec
mov
rorb
add
ss
idivb
jg
push
out
mov
in
decl
mov
push
push
movsb
inc
and
in
push
xor
ret
lods
jmpw
scas
js
push
ljmp
push
loope
mov
fcmovbe
std
insb
xchg
lock
dec
or
std
movsb
mov
dec
cmp
push
mov
movsl
jmp
clc
xor
aas
test
adc
into
test
mov
lahf
popa
dec
dec
ss
xor
rcr
outsb
dec
hlt
imul
mov
dec
lock
cwtl
scas
pop
sub
cmp
loop
sbb
lea
jbe
or
or
fiaddl
adc
ret
and
add
je
mov
jne
leave
nop
jns
mov
sub
xor
and
mov
cmpsb
clc
loop
pop
cld
cmp
inc
pushf
mov
insl
or
fistpl
inc
sub
mov
xchg
into
jne
xor
outsb
sarb
inc
inc
out
push
js
out
test
mov
jb
push
xor
sub
xor
sbb
inc
pop
sub
scas
xor
lahf
or
fcomi
cs
in
ret
ljmp
ror
outsl
arpl
cmpsb
add
nop
mov
ss
dec
sbb
daa
xchg
adc
test
mov
out
dec
cmp
push
out
loopne
insl
mov
aam
subb
scas
std
cmp
adc
inc
ds
sbb
aas
rclb
push
push
mov
imul
dec
mov
leave
lea
sti
pop
arpl
movsl
fs
aad
enter
add
pushf
dec
or
push
xchg
pop
xor
leave
out
subl
sahf
push
loope
les
icebp
subb
rcrb
dec
arpl
sahf
mov
sub
xor
addr16
clc
xor
inc
in
pusha
cmpsl
test
nop
rcrl
push
lds
pop
pop
pop
out
stos
popf
loopne
xchg
dec
fbstp
jl
fistl
mov
movsb
push
or
int3
daa
jno
inc
mov
test
jg
lret
cmp
cltd
clc
sbb
push
add
cmp
lds
insb
daa
fnstenv
pusha
es
test
xchg
add
aas
aad
sti
hlt
mov
fldl
test
push
mov
jb
mov
mov
mov
shr
and
fidivrl
lock
aam
mov
add
add
shll
dec
sub
aaa
or
push
lret
dec
int3
cmpsl
std
xor
popf
inc
mov
jmp
adc
lahf
insb
pop
das
xor
xlat
push
iret
pop
push
aas
mov
repz
cld
in
es
mov
cmc
mov
xchg
out
ljmp
add
mov
push
mov
imull
testb
cmpsb
inc
jmp
scas
loope
push
xchg
lret
outsb
fiaddl
jns
and
and
subl
xchg
sub
add
push
mov
push
ret
mov
push
xchg
fs
add
or
gs
leave
add
sbb
sub
xchg
jne
push
pop
add
adc
xchg
das
scas
xchg
push
iret
cltd
test
xrstor
mov
arpl
sbb
fisttpll
cmp
cmpsb
imul
in
xchg
stc
in
subb
adc
cld
out
cs
adc
ffreep
js
mov
das
decb
mov
outsl
ja
das
and
scas
dec
push
lods
pop
insl
xor
sub
push
std
movl
negb
test
in
cld
sahf
scas
xchg
fwait
sub
pop
aad
mov
mov
shl
inc
fcmovnu
divb
add
cmc
enter
cmp
das
fsubrs
sub
aaa
test
lds
adc
roll
cmp
jb
loope
daa
test
mov
or
popf
dec
jbe
aaa
xlat
push
ljmp
mov
bound
xor
dec
das
scas
pop
pop
sarb
lret
pop
pop
stc
sti
pop
mov
lods
xchg
cmp
mov
les
sbb
daa
push
sbb
jnp
push
mov
into
jne
int
fs
loop
inc
adc
mov
push
fdivs
sbb
imul
cltd
sbb
adc
cmc
daa
mov
std
insb
clc
pop
jl
sbb
jmp
movsb
mov
test
add
outsl
outsl
lcall
pop
cld
es
pop
jb
inc
je
repnz
insb
push
cli
fwait
in
mov
dec
dec
pop
leave
ficompl
jg
mov
negb
cmp
adc
ljmp
or
lea
jbe
rorl
gs
lods
rcr
lahf
mov
mov
nop
mov
ret
mov
mov
loopne
cmp
pop
xor
inc
out
out
xor
test
fmull
iret
rcl
dec
testl
jnp
hlt
aas
std
lods
mov
push
es
jbe
movsb
adc
fs
push
xchg
inc
rcl
xor
addr16
mov
decl
mov
push
or
idivb
repz
clc
mov
adc
into
add
daa
mov
mov
neg
inc
xor
inc
or
cmc
cmpsb
cmpsb
mov
mov
sub
sub
in
xor
or
sub
inc
fdivrl
mov
sbb
sahf
jge
mov
movsl
jmp
fstpt
loop
inc
or
and
cld
or
lahf
in
adc
cltd
pop
inc
pop
test
and
rorb
cmp
movsl
aam
xchg
test
out
test
mov
ficoml
sbb
mov
dec
insl
sbb
in
testb
pop
imul
or
cmpsb
sbb
femms
jo
fisubl
sub
ds
cli
mov
fs
lcall
stos
int
iret
icebp
hlt
xchg
cmp
mov
sbb
lods
in
mov
xor
cmp
mov
hlt
jle
push
dec
xor
dec
popa
xchg
and
jae
ret
cmp
pop
enter
sbb
mov
lret
or
ja
xchg
das
dec
in
adc
mov
and
dec
rcrb
lods
dec
sub
imul
mov
jp
xchg
lret
jae
imul
bnd
adc
dec
sbb
shrl
pop
pop
rolb
movsl
xchg
mov
or
mov
pop
xchg
pop
pop
inc
jl
lods
or
ja
mov
sar
push
jle
xchg
pop
sbb
push
hlt
mov
mov
inc
jecxz
popf
pop
test
mov
adc
mov
nop
pop
push
in
into
mov
jae
enter
repnz
inc
sti
je
lods
testb
lcall
movb
fcompl
lret
jae
xchg
sub
sbb
xlat
mov
and
push
push
aas
mov
das
and
pop
jo
push
mov
dec
inc
int
pop
and
jo
jp
xchg
xor
push
add
pop
mov
mov
aam
cmpsl
shrb
and
fisubs
dec
enter
push
inc
mov
cmp
fs
cmp
ret
mov
lds
push
test
fnsave
loop
ficoml
mov
scas
inc
sbb
mov
pop
cld
popf
loop
jmp
das
lods
nop
dec
inc
lea
inc
pop
dec
jmp
add
std
cmp
outsb
sbb
push
cmc
mov
rclb
push
push
jbe
cmpsb
leave
xchg
mov
hlt
sbb
cmp
popf
idivb
add
xchg
insb
lds
arpl
icebp
lahf
pop
sbb
and
pop
setp
push
fists
push
cli
mov
adc
sub
push
mov
in
enter
mov
jmp
xchg
subl
clc
adc
test
sbb
push
push
mov
mov
or
cld
roll
pop
loopne
mov
shlb
mov
cmp
cmp
movsb
ficompl
es
push
dec
pop
sarb
mov
mov
add
cmp
shrl
cmp
nop
inc
sub
jae
mov
fs
fmul
push
jmp
test
push
ret
aam
xchg
mov
cvttps2pi
cmp
in
fwait
push
cmp
adc
addr16
jae
push
mov
js
mov
out
out
xor
sbb
xor
mov
mov
mov
adc
subb
dec
movsb
or
mov
push
movb
sbb
and
cltd
sarl
fs
fs
je
add
jmp
stc
mov
jle
xorl
gs
push
clc
mov
lods
orb
push
push
add
push
arpl
mov
mov
shlb
xchg
in
push
lret
es
pop
ja
sbb
daa
adc
pop
xorb
adc
adc
lret
xor
les
int3
jb
cmp
lods
fidivrl
push
sbb
and
imul
xor
test
ja
shlb
lcall
sub
ret
or
sub
lret
adc
adc
jmp
inc
outsl
inc
adc
mov
xchg
rcll
dec
clc
push
out
fsts
pop
scas
xchg
xor
adc
pusha
aaa
insb
mov
or
mov
inc
movsb
xchg
arpl
lock
jmp
sub
xorl
mov
lfs
inc
cmpsb
mov
and
or
ljmp
mov
jae
xchg
movsl
and
add
and
in
xor
cmp
fisubrl
mov
pop
xor
test
popf
jns
jge
into
icebp
fisubs
rcr
mov
aas
aad
mov
stc
mov
int3
addr16
jnp
lcall
xlat
repnz
sub
dec
repnz
stos
jg
not
sub
test
scas
insb
mov
mov
lret
mov
mov
sbbb
inc
adc
or
aaa
adc
scas
sub
push
cmp
pop
push
or
mov
das
adc
lock
ret
clc
cli
push
mov
sbb
push
loopne
push
jle
or
outsl
add
inc
cld
pop
in
push
pop
ret
rclb
xor
outsb
ja
repz
sub
ret
xchg
lods
sub
xchg
cmpl
inc
sbb
and
shrb
ss
aas
ljmp
adc
lahf
cmpl
inc
jae
cmp
jb
gs
sub
mov
mov
call
loopne
push
gs
sub
adc
jge
rcll
xlat
or
test
lods
jmp
mov
clc
aaa
sbb
dec
pop
xchg
sub
lcall
jg
xchg
xchg
out
jb
sub
push
lahf
test
jb
push
repnz
sbb
fiadds
in
repz
adc
dec
or
xchg
repz
fidivl
lea
test
pop
cmp
adc
xchg
pop
cmp
push
leave
repz
adc
mov
ficoml
hlt
pop
stc
and
xchg
pop
xchg
jle
dec
inc
mov
arpl
inc
shlb
push
scas
out
jecxz
addr16
pusha
enter
je
mov
dec
sub
push
imulb
loope
out
out
cld
pop
jbe
push
fsubrs
mov
inc
inc
push
or
aaa
cmp
adcl
xchg
xchg
fisubl
dec
xchg
aad
mov
xor
movsl
mov
mov
push
movsb
or
scas
pushf
fnstenv
jle
or
stos
aam
imul
rcrb
inc
xchg
push
insl
insb
jge
lea
out
jle
or
jg
or
push
nop
xchg
mov
test
testb
mov
stos
add
stc
ficoml
pop
gs
mov
push
sub
cmpsl
stos
nop
hlt
push
pop
and
xchg
lcall
in
stos
and
inc
push
lods
mov
sti
mov
xchg
and
mov
push
shlb
lds
mov
sub
or
push
insb
data16
adc
cmp
jl
rcll
pop
add
jecxz
push
mov
pop
push
lahf
mov
int3
xchg
in
cwtl
fwait
imul
mov
stos
mov
shr
pop
pop
lcall
daa
mov
or
xor
jno
repnz
repz
imul
sub
xchg
sysenter
bound
sub
lea
pushf
adc
inc
add
movsl
adcl
negl
addr16
scas
mov
imul
dec
mov
or
sub
jp
jge
push
in
mov
or
cmp
mov
movsb
in
call
fbstp
dec
ds
xchg
pop
int3
scas
mov
mov
loope
mov
mov
mov
jbe
push
push
repnz
xlat
add
add
add
rcll
or
lret
lds
mov
sbb
dec
or
xor
hlt
xchg
je
jle
push
ss
add
dec
cmc
fisubl
mov
inc
inc
movsl
sub
mov
in
sub
imul
mov
call
jbe
mov
daa
mov
inc
lods
push
lock
in
and
add
lea
pusha
icebp
adc
lds
push
cwtl
mov
dec
sub
in
xlat
and
cmp
pop
xor
lcall
cli
mov
or
sahf
js
add
pop
mov
pop
dec
insl
loopne
push
jmp
mov
iret
pusha
jg
adcb
inc
mov
sub
fs
push
or
pop
push
cltd
jge
mov
xor
inc
rcrb
and
sbb
addr16
divl
push
popa
mov
inc
pop
jmp
inc
sbb
subb
dec
mov
leave
xor
sbb
popf
das
loopne
loope
ret
push
and
pusha
sbb
mov
mov
xor
cwtl
std
je
mov
imul
mov
pop
addr16
stos
dec
mov
xor
jmp
sbb
int3
sbb
flds
adc
dec
mov
cli
fistl
movsl
inc
add
xor
jnp
jge
nop
cld
ljmp
and
push
test
mov
mov
inc
lea
cmp
pop
lock
fiaddl
lods
icebp
sub
fs
mov
mov
push
mov
int3
lds
clc
dec
mov
mov
pop
sbb
mov
je
movhlps
xchg
mov
pextrw
cwtl
push
mov
xor
cltd
mov
scas
or
pop
out
cs
adc
ds
dec
into
cmpsb
mov
cwtl
dec
mov
push
stos
pop
aaa
iret
adcb
pop
lods
in
mov
adc
inc
sub
adc
js
insb
imul
push
cmp
lods
inc
push
xor
ljmp
or
add
sahf
mov
mov
adc
repz
mov
int
sbb
out
in
adc
je
dec
jae
jle
sub
cmc
xchg
loop
mov
jecxz
jp
daa
jge
test
dec
mov
mov
sbb
stos
sub
repnz
sub
adc
test
sub
sbb
out
jg
mov
sahf
pop
out
mov
xorb
subb
sub
test
sbb
mov
pop
out
mov
insb
mov
and
mov
sub
mov
xchg
cwtl
sub
cmpsl
inc
sub
jne
pop
clc
nop
test
cs
inc
daa
outsb
push
inc
es
cmpsb
jno
dec
js
sti
pushf
loop
hlt
xchg
jge
aad
dec
aam
push
stc
xchg
mov
aad
cmp
dec
inc
bound
mov
xchg
pop
shrb
dec
or
mov
js
cmp
jbe
cmp
xchg
inc
rolb
xchg
inc
mov
adc
es
mov
aas
mov
add
xor
xor
ds
xor
shlb
cmp
scas
adc
push
mov
or
jg
add
add
push
and
lock
cmp
pop
and
jb
dec
push
add
out
mov
lods
loop
addr16
mov
cmp
out
lahf
insl
inc
inc
testl
fwait
test
insb
mov
nop
jnp
sub
dec
inc
movsl
fchs
inc
push
rorb
or
push
aad
dec
add
call
pop
dec
mov
jbe
std
and
test
lea
pusha
ja
andl
inc
out
sub
aas
xorl
in
xor
inc
loope
popf
xchg
sub
ss
fcmovnbe
push
dec
ljmp
push
stc
aaa
sub
arpl
adc
xor
out
cwtl
mov
popa
jp
rcl
cmp
fnsave
aas
add
out
cmp
pop
int3
in
cmp
insl
jp
pop
inc
fs
mov
scas
pusha
je
mov
dec
insb
pushf
adc
lcall
sbb
push
fadds
mov
push
push
fsts
pushf
fmull
stos
loopne
clc
ja
xchg
repnz
adc
push
xchg
xchg
shlb
cmc
sub
std
cltd
pushf
and
fptan
mov
jle
stos
jo
or
sbb
ja
filds
push
mov
inc
inc
xchg
inc
add
lcall
stos
xchg
and
sbb
lods
out
cmp
xchg
outsl
xor
sbb
cs
cmp
xchg
push
shlb
mov
pop
mov
mov
pop
rcrl
gs
dec
jl
push
push
mov
ja
pop
aas
pop
mov
int
mov
mov
or
mov
adc
rcrb
int3
loop
dec
cmp
pop
in
mov
ljmp
cmp
inc
sarl
adc
mov
in
cmp
lods
sbbl
xchg
aas
ja
xchg
and
push
fs
xchg
popf
pop
cmp
push
xor
mov
cmc
xchg
cmp
add
arpl
dec
cmpsb
in
dec
jp
mov
sub
push
xor
shrl
das
fwait
xchg
out
addr16
out
fsubrs
test
and
mov
xlat
test
pop
push
test
lods
aad
add
mov
pop
mov
adcb
out
fdiv
aam
sbb
sbb
sti
lea
cli
int3
and
daa
jno
sub
sahf
jns
dec
add
nop
jns
dec
or
pushf
rcl
int3
sbb
mov
mov
push
mov
mov
lods
cmp
repz
inc
aam
pop
mov
repnz
mov
sub
xorb
push
icebp
lcall
fnsave
xor
iret
imul
roll
fwait
mov
lds
jl
mov
jo
cmp
pushf
data16
into
icebp
xor
pop
fs
dec
in
and
push
xchg
fldcw
jg
inc
push
xchg
ret
fwait
sub
adc
sub
in
cmc
inc
add
ljmp
popa
xor
into
fucom
adc
orl
cmp
or
sarl
push
mov
fists
lret
mov
pop
xchg
out
mov
or
sbb
pop
insb
xchg
jmp
rorl
movsl
inc
sub
test
nop
shlb
adc
xor
fcoml
cltd
fiaddl
es
test
xchg
mov
gs
pop
mov
aas
mov
adc
je
mov
int3
or
adcl
inc
push
sub
jle
and
adc
inc
cmc
inc
int
pop
xchg
cmpsb
mov
push
incb
dec
or
cmp
lret
ja
and
lds
mov
ret
xchg
fwait
pop
inc
repz
dec
mov
addl
adc
jo
inc
adc
sub
dec
push
in
bound
jl
cld
jo
xchg
dec
pushf
jecxz
xchg
outsl
sub
jmp
cmp
bound
cmc
or
dec
hlt
mov
inc
xchg
rolb
mov
add
sbb
sti
xor
imul
xchg
notl
dec
mov
rclb
push
insb
imul
mov
jmp
pop
outsb
test
rorl
ljmp
flds
dec
xor
shrl
push
mov
dec
xor
lcall
mov
push
pop
popf
dec
lods
pop
jmp
lds
imul
pop
sti
pop
mov
or
in
dec
iret
mov
sbb
lods
jle
cmpl
rol
push
test
mov
jo
sub
into
jb,pn
pushf
xor
mov
cmp
out
add
outsl
sbb
xchg
aas
dec
add
cli
jmp
clc
gs
pushf
inc
cmp
xchg
mov
add
pop
js
mov
ja
lea
stos
pop
sbb
out
sub
sbb
cs
sbb
rcl
adc
repz
pop
arpl
pop
push
sbb
aaa
xor
aam
dec
test
outsl
pop
sahf
lods
ja
cld
pop
mov
popf
xchg
sbb
and
xor
cmpsb
mov
insl
ret
icebp
jmp
shrl
cltd
cltd
and
pop
add
rclb
inc
push
cmpsl
rcr
jns
adc
insl
jl
sub
jmp
sti
test
sahf
sti
mov
mull
sub
add
xor
test
es
stc
into
sbb
mov
pop
repnz
mov
sub
cmp
xchg
std
cmpsb
lret
cli
push
fistpll
push
dec
outsl
mov
je
dec
xchg
test
mov
inc
data16
sub
xor
xchg
cli
jmp
js
fld1
cmp
loope
andl
leave
cmp
fs
into
lock
pop
mov
push
iret
and
inc
ljmp
das
xchg
leave
sbb
out
test
cs
dec
fs
jl
mov
xor
jb
push
mov
sub
and
pop
lea
pop
xchg
dec
icebp
mov
mov
imull
pop
inc
and
ljmp
je
movsb
sbb
mov
adc
roll
inc
cmp
jle
pop
push
sbb
fadd
sbb
mov
mov
and
pop
cwtl
inc
shll
movsl
jg
push
rcr
jmp
adc
mov
js
cmc
push
daa
popa
or
and
mov
xor
sub
adc
jl
jmp
mov
sbb
add
jle
cwtl
lcall
mov
gs
xchg
xor
les
mov
stc
mov
shrb
mov
mov
sub
cwtl
inc
push
dec
inc
xor
push
mov
sub
push
rolb
test
scas
icebp
xchg
sahf
inc
mov
sub
fsubrl
rcr
clc
xlat
and
jge
dec
push
add
xchg
xchg
mov
xor
mov
es
jno
pushf
mov
xor
jle
sub
cltd
shl
mov
fwait
mov
shrb
adc
lock
cli
pop
mov
mov
inc
xchg
dec
inc
push
pop
and
in
push
jp
cmp
cmovbe
mov
ljmp
ljmp
lds
inc
jb
hlt
fs
push
cmp
les
adc
dec
mov
bound
mov
and
fdivr
inc
test
or
lds
inc
dec
and
inc
fiadds
int
xor
shr
ret
je
jne
inc
mov
xor
xchg
push
fdivs
lahf
js
icebp
into
fcoml
adc
xchg
jge
inc
shll
repz
lock
jnp
repnz
gs
inc
sub
jge
js
pop
dec
push
pop
sub
fcoms
sub
insl
std
fucomp
mov
adc
and
mov
inc
cmp
xor
xlat
rorl
cmp
out
and
add
push
mov
sahf
data16
jl
and
scas
xor
loope
push
dec
imul
sbb
push
jb
insl
push
mov
loop
push
xchg
popa
mov
lahf
sarb
push
mov
fnstcw
push
add
dec
mov
sub
inc
mov
xchg
mov
fbld
lods
xor
dec
leave
fstpt
dec
into
inc
out
inc
vminsd
and
xchg
imul
push
ja
pop
lcall
inc
mov
adc
cmp
dec
ljmp
cmpsb
das
sub
ret
scas
or
jge
jno
test
fcmovne
test
or
imul
js
dec
and
or
clc
mov
pushf
js
leave
jp
lret
cmp
leave
mov
orb
aas
into
xorl
pop
or
out
lds
mov
mov
mov
fistps
push
xchg
inc
mov
pop
loopne
hlt
rclb
lret
lret
mov
gs
adc
add
call
rclb
mov
add
mov
push
mov
add
pop
sbb
dec
roll
data16
and
mov
stc
push
xchg
dec
cli
call
in
mov
mov
and
add
mov
jl
xor
icebp
gs
push
xchg
arpl
ds
out
mov
cmpsb
add
push
dec
hlt
dec
push
lods
shll
lods
movsb
or
fildll
xchg
fnstenv
mov
movsb
sbb
fildll
adc
adc
adc
lcall
push
push
and
lds
fsqrt
and
repnz
lret
lds
xchg
imul
cltd
arpl
repnz
push
mov
aam
mov
xchg
fsubs
xor
jae
div
ret
aam
imul
mul
movsl
mov
aad
sub
test
cmp
jno
and
xor
cmc
dec
repnz
jae
hlt
cltd
mov
inc
inc
cmp
adc
mov
jns
push
mov
inc
repnz
inc
das
dec
and
push
push
stos
xlat
inc
xlat
or
pop
jl
cmp
jmp
mov
jp
mov
je
in
repnz
addb
lds
jge
push
lods
sbb
xchg
loop
pop
pop
cmp
shrl
jg
jmp
sarb
repnz
lret
push
mov
loopne
mov
xchg
ljmp
loop
pop
flds
mov
cmp
xchg
pop
mov
or
xchg
addr16
cmp
jbe
jne
jle
cmp
loop
lret
mov
ss
mov
cltd
dec
test
cltd
xchg
sbb
test
push
adc
in
and
insl
and
jno
fisttpl
sbb
mov
pop
adcb
outsb
arpl
sbb
xlat
mov
std
push
mov
lods
sbb
nop
or
std
fidivrs
loopne
aam
lods
cmc
adc
sbb
lods
sub
loop
loop
jo
add
jbe
std
test
push
sbb
sbb
xchg
xchg
mov
repz
sbb
cmp
testl
shl
jne
inc
adc
mov
fs
inc
xor
in
pop
stc
adc
jmp
mov
mov
mov
test
mov
repnz
xchg
enter
or
into
xlat
pop
sbb
into
or
dec
cld
les
icebp
cmpsb
and
and
inc
sbb
cmp
enter
call
fcoml
pop
pop
in
into
add
insl
sub
jns
test
xor
jne
inc
jnp
inc
jecxz
roll
shrl
mov
adcl
inc
mov
mov
scas
lods
pop
jg
jmp
or
std
xchg
call
mov
xorl
pushf
mov
mov
aaa
jl
or
xor
cwtl
adc
add
inc
add
jae
vmptrld
pop
xchg
inc
mov
sbb
and
push
mov
popa
arpl
push
movsb
enter
push
cmp
cmpsl
mov
sub
mov
das
adc
pushf
push
and
int
pop
gs
movsl
nop
xor
in
jns
mov
jmp
stc
xchg
mov
push
xchg
push
and
inc
add
mov
out
pop
aad
imul
jmp
pop
mov
shll
push
mov
cwtl
fwait
or
jp
in
xchg
loopne
cmpsl
sub
mov
je
inc
xchg
xchg
inc
orb
out
stos
inc
punpcklbw
mov
aaa
aas
add
lods
adc
pop
test
and
cmpsl
mov
mov
in
pop
scas
add
add
add
es
mov
shlb
out
sti
sbb
shr
leave
sbb
insl
pop
push
movb
stc
cmp
lret
cmp
test
ds
push
xchg
jno
dec
push
and
je
filds
inc
cltd
pop
dec
hlt
dec
mov
sub
cmp
xor
dec
xchg
faddl
jbe
lret
sbb
into
aam
sbb
jnp
add
ret
push
aaa
cmpl
mov
push
ror
or
pop
inc
mov
hlt
pusha
push
pusha
fldt
and
popa
loope
or
jecxz
sbb
les
rcr
popa
cld
mov
stos
sbb
hlt
ret
sub
add
pop
mov
into
xor
push
push
xchg
cmc
movsb
nop
fwait
bound
call
xor
jg
and
xchg
xchg
push
jae
jns
movsl
test
cmp
int3
cmp
jno
sbb
mov
mov
push
ret
jnp
push
inc
xor
je
lcall
sti
js
mov
pop
test
lret
jbe
fdivrl
movsl
mov
jp
call
aaa
push
push
add
pop
xor
mov
jle
jb
mov
out
sub
inc
fldenv
int3
cltd
arpl
xchg
push
fdivr
and
add
movsl
xor
gs
ret
daa
push
shll
fs
in
pop
jns
sbb
rolb
jnp
adc
dec
cltd
sub
aam
mov
outsb
or
sahf
lret
mov
lods
outsb
pop
jl
testl
add
pop
fisttps
cwtl
jg
das
mov
cmp
aas
lods
mov
xor
push
fidivrl
imul
jl
or
fistpl
lods
out
lret
stos
out
ret
sbb
xlat
push
push
iret
arpl
dec
pop
mov
cmpsb
scas
and
loop
repnz
call
aad
movsb
cmpsl
into
xchg
mov
adcb
inc
subb
fcmovnb
inc
push
stc
xor
or
cld
lahf
lret
or
inc
mov
or
outsb
fmull
mov
pop
xchg
xchg
lret
mov
clc
add
pop
clc
sub
mov
ret
rolb
fwait
add
sbb
test
stc
mov
xlat
sbb
adc
rcrl
outsl
jl
inc
fucomip
in
loop
fsubrl
lock
dec
pop
lret
cmp
or
mov
subl
in
adc
pusha
into
add
push
sti
pop
dec
fstl
xor
add
jno
mov
inc
pusha
inc
cmp
loopne
iret
stos
addl
xor
insb
mov
out
inc
rcrb
xchg
sub
mov
mov
enter
jns
or
aaa
or
cmpsl
lea
pop
push
loop
xchg
push
stc
outsl
adc
int
xor
fwait
or
jbe
into
mov
fiadds
fstpt
std
aam
in
pop
test
roll
js
imull
push
std
pop
gs
fs
addr16
fwait
in
loope
scas
int
jmp
insb
xchg
std
std
cmp
mov
ret
mov
push
faddp
push
jo
movsb
clc
jno
aad
in
xchg
add
enter
mov
scas
sti
stc
jno
jmp
xchg
nop
dec
repz
leave
out
loope
cs
and
orb
jle
movsb
adc
push
pop
popa
in
icebp
dec
sbb
pop
insl
shrb
or
sahf
inc
xchg
adc
and
sub
hlt
outsb
sti
adc
and
dec
imul
insl
xchg
outsl
push
sub
push
mov
lods
in
push
and
jmp
pop
outsb
cmp
xorb
push
sbb
pop
dec
pushf
test
in
fidivl
sbb
lods
addr16
jno
mov
fdivs
popf
dec
mov
mov
test
je
nop
adc
sub
mov
xor
mov
cld
mov
std
pushf
mov
lret
lds
mov
sbb
inc
xchg
adc
and
and
icebp
push
js
insb
pop
jnp
ficomps
xchg
dec
jo
int3
and
dec
sbb
adc
mov
cmp
lret
lret
mov
jns
inc
movb
aaa
inc
mov
xlat
sbb
pop
and
int
push
leave
insl
fwait
lcall
jne
xchg
and
mov
outsl
addb
mov
loop
and
mov
or
popa
movsb
mov
jge
popa
dec
insl
mov
rcl
adc
fs
cmp
jne
fstps
sub
mov
add
ljmp
movb
lahf
mov
and
push
jle
xchg
data16
and
stos
fcomps
in
stos
push
insl
xor
sbb
mov
stos
bound
imul
adc
mov
jnp
push
xor
jae
pushf
fistps
push
add
in
dec
repnz
jle
inc
js
push
enter
call
mov
aam
sub
in
test
incb
ljmp
pop
jge
nop
stos
adc
adcb
int
push
jo
aad
jecxz
fadds
pop
sbb
jb
ret
call
adc
sub
adc
cmp
mov
lock
inc
es
jge
popf
jae
jo
sub
push
inc
mov
mov
inc
push
and
mov
scas
js
jbe
jge
adc
push
mov
dec
ds
das
adc
hlt
aam
addr16
dec
pushf
out
js
sbb
je
pop
das
sbb
or
mov
rorb
push
jns
pop
das
ja
mov
loopw
mov
lret
push
mov
xchg
sub
inc
and
sbb
xor
ret
in
jnp
inc
xor
xchg
push
fildll
inc
pop
cmp
movsb
lods
sbb
dec
mov
mov
mov
dec
or
inc
dec
in
test
push
push
pop
ds
lahf
in
inc
xor
fbld
xchg
aam
movsl
xor
loopne
lds
and
cmp
lahf
js
add
lret
ret
cmp
sbb
pusha
imul
iret
cli
scas
inc
sbb
int
add
push
les
push
inc
or
clc
iret
adc
add
loope
int
movsb
sbb
xor
into
pop
xchg
aam
std
imul
xor
sbb
insl
pop
test
xlat
jns
xor
data16
jae
addl
orb
imul
imul
push
loop
rclb
push
es
cmp
shrl
xchg
mov
push
out
xor
jo
rorl
dec
cmp
mov
mov
sahf
mov
adc
inc
sbb
bts
faddl
subb
pop
lahf
mov
mov
mov
sti
cmp
adc
cmpsl
rorb
into
in
mov
test
stos
mov
stc
xor
popf
scas
mov
mov
or
add
test
cld
loop
iret
inc
sahf
jo
dec
lock
test
pop
mov
int3
sub
pop
pop
scas
filds
pop
xor
add
and
mov
cmp
repz
sbb
scas
sub
sub
aas
lret
jns
inc
sub
fnstsw
and
inc
in
push
push
push
or
scas
into
jae
push
mov
jns
xor
jne
lods
add
es
arpl
mov
pop
push
mov
lds
mov
sbb
adc
sub
or
ret
pop
add
loopne
push
jno
fcompl
rclb
add
add
gs
negb
xchg
pushf
dec
xor
aad
xchg
cmp
test
testb
mov
mov
insl
bnd
jge
sub
lods
jns
outsb
adc
lret
cmc
push
int3
adc
iret
inc
push
fildll
push
jp
jbe
add
and
into
pusha
xchg
dec
outsb
pusha
xor
jo
aam
sbb
movsl
sarl
inc
hlt
cmpsl
mov
inc
jmp
lretw
inc
loop
mov
push
pop
ss
nop
mov
aaa
adc
je
sbbl
push
test
ret
push
in
mov
pop
inc
addl
mov
repz
xor
or
mov
jge
push
mov
mov
jecxz
fadd
sbbb
push
xchg
mov
sysexit
pusha
inc
xor
push
dec
divb
and
loope
mov
addr16
push
jmp
les
mov
lods
fisttpll
inc
test
mov
lret
lds
insl
pop
cmpsl
popf
aad
cwtl
push
jmp
jge
sub
mov
rcll
cmp
cwtl
iret
inc
fsubrs
mov
outsl
push
movl
mov
mov
scas
dec
xchg
loopne
divl
lret
push
les
ljmp
add
mov
loopne
jecxz
imul
or
pushf
lds
popa
rolb
loope
fsubrs
xor
cmc
dec
push
pop
xor
push
in
pop
push
fisttpll
add
hlt
add
sahf
bound
imul
xchg
loopne,pt
sbb
cmp
dec
je
enter
pop
test
xchg
push
jae
sbb
xchg
les
ljmp
pushf
xchg
jp
mov
aam
movzbl
clc
lock
lods
adc
dec
movsl
movsb
jns
cmp
xchg
mov
cli
fisttpll
ret
mov
aad
sbb
and
aas
outsb
fstps
jmp
mov
inc
mov
adc
sbb
push
mov
clc
jle
mov
push
cmpsl
arpl
mov
jg
insb
add
mov
cmpb
jbe
nop
sub
fsubp
mov
sbb
add
nop
cmpl
pop
dec
ret
cmp
sub
xor
mov
aaa
call
scas
lret
push
pop
testl
jne
dec
stos
mov
fwait
call
or
xchg
movsl
sub
cmp
das
inc
mov
push
cltd
out
pop
adc
and
adc
jb
lahf
mov
mov
and
and
subl
fsubrs
dec
and
mov
rclb
in
aam
push
mov
scas
jmp
adc
rcll
mov
add
aad
sub
xor
mov
popa
leave
jnp
mov
inc
lret
or
pusha
xor
ret
lods
std
sub
lahf
push
repnz
pop
in
xchg
and
jo
mov
push
into
pop
sub
pmullw
das
insl
add
out
and
andl
adc
mov
jne
out
pop
int
ret
ret
mov
orl
jmp
mov
mov
pop
stos
mov
pop
jge
fwait
xchg
push
and
insl
or
and
cwtl
pushf
push
arpl
idiv
loop
ja
or
roll
pop
shll
jae
ret
xchg
sub
ret
push
add
or
je
and
pop
mov
jmp
rol
jns
cwtl
clc
push
pop
mov
sbb
xor
mov
repnz
xchg
and
lods
ret
sbb
icebp
mov
mov
clc
fwait
push
stc
inc
xchg
jg
inc
icebp
xor
int3
insl
inc
ja
in
daa
jo
sbb
fstps
and
pop
insl
dec
mov
or
cltd
push
cmc
sbb
je
fisubrs
mov
addr16
loopne
fcmovu
push
jmp
and
int3
xchg
call
pop
pop
outsl
mov
sti
cmpsl
add
fisubs
or
ror
or
cwtl
pop
stc
jne
push
fldl
dec
fdiv
js
rcrb
test
jmp
mov
fcomi
push
lea
xchg
mov
hlt
loope
jne
sub
xor
xchg
mov
add
cld
cmp
mov
push
fisttpll
dec
jge
cmp
cmpsl
leave
out
sbb
imull
pop
cmp
into
adc
add
popf
into
out
jnp
mov
or
lds
push
stos
sub
mov
andl
xlat
lods
sbb
xchg
pop
aas
push
or
iret
je
pop
and
mov
rolb
fld
cmp
mov
and
iret
jmp
sarl
or
mov
pop
inc
loopne
dec
bound
mov
xchg
add
push
les
jl
mov
into
imul
push
mov
mov
rclb
jl
mov
fisubl
cltd
pop
ds
gs
fstpl
insb
scas
push
xchg
cltd
add
mov
mov
pop
pop
jns
jno
fdivrs
je
cld
mov
imul
in
xor
push
inc
ljmp
stc
lea
and
jo
jmp
xchg
test
jno
ljmp
fs
jb
cmc
and
xchg
xorl
add
mov
ljmp
stc
or
sub
arpl
icebp
js
cmpsb
xor
sbb
mov
nop
movsb
xchg
mov
mov
movsb
add
mov
mov
clc
shrb
jp
fldlg2
mov
gs
fisubs
cli
loopne
adc
jp
jecxz
cmp
out
xor
aaa
in
sub
xchg
sbb
mov
icebp
push
pop
ss
or
insl
loop
push
fistl
sub
aaa
mov
lret
lea
mov
int
push
pop
push
cmp
push
movsb
and
data16
and
pop
and
sbb
or
idivb
sbb
mov
adcb
std
fidivrs
in
xchg
mov
sbb
inc
das
cmpsb
sub
sarb
add
dec
mov
outsb
call
lret
loope
in
movsb
cmp
mov
bound
das
adcl
lahf
js
mov
mov
sub
xchg
jns
scas
adc
jns
mov
fwait
add
daa
cmc
and
test
out
jne
ficoms
adc
pop
push
xlat
xlat
fdivl
movsl
sbb
fwait
mov
xchg
je
adc
mov
push
mov
pop
jl
cmp
sahf
pop
insb
test
flds
fwait
dec
lcall
dec
jbe
xchg
fisubrs
push
fmuls
cltd
fucomi
cmc
inc
mov
mov
add
xchg
and
lods
pushl
ret
test
dec
addr16
or
out
rcrb
test
in
insb
imul
or
push
out
mov
loopne
push
xor
scas
xchg
fnstcw
cpuid
xchg
or
or
in
or
adc
fiadds
movb
sahf
das
push
aas
and
xor
add
dec
in
jmp
push
mov
push
or
sub
sar
cmc
pop
enter
xor
dec
xchg
in
mov
mov
out
jge
divl
xchg
fisubrl
popa
rcrl
dec
push
push
xor
sbb
repz
mov
dec
int
xchg
sahf
mov
cmove
popf
mov
xchg
inc
xlat
popf
xchg
add
cld
xchg
arpl
cmpb
std
dec
lret
sbb
push
and
pop
push
pop
xor
sbb
and
dec
inc
inc
sub
in
idiv
jbe
sub
mov
in
cs
push
add
dec
in
ss
shl
or
or
xor
dec
and
mov
jl
repz
lds
daa
pusha
sbb
mov
scas
int
push
push
push
out
jecxz
pop
std
call
mov
and
lret
popl
xor
orb
popf
cmp
and
addr16
add
mov
mov
pop
data16
xor
push
fwait
aam
js
imul
out
les
ficoms
cmp
loop
les
in
in
insl
fisttps
pop
push
sub
add
sahf
cmp
daa
and
insb
xchg
pop
xor
fsubs
lods
xchg
sbb
fcomi
ja
fcmove
xlat
pop
or
sub
cld
inc
hlt
fiadds
fnstcw
int3
clc
in
add
into
rcll
int
cmpsb
out
rol
xchg
lret
mov
cmp
sub
inc
push
push
xor
psrlq
mov
imul
mov
test
mov
stc
mov
or
dec
aam
mov
dec
push
xor
add
sub
cwtl
int
aas
cli
push
scas
sub
and
sbbb
loopne
jns
sub
mov
xor
add
clc
inc
adc
leave
inc
mov
dec
nopl
mov
mov
add
enter
inc
xchg
pop
mull
push
xor
stos
dec
xchg
mov
jns
aas
pop
xchg
mov
notb
scas
fmull
mov
repz
loope
rcrl
sub
popf
into
mov
jnp
scas
in
mov
cmp
jle
dec
je
cwtl
mov
sbb
push
ftst
shr
jbe
test
addr16
test
aaa
gs
icebp
fistpll
inc
jmp
repz
loopne
cmp
subb
decb
out
xor
les
imul
std
mov
mov
dec
cmpsb
pop
xchg
jge
dec
test
pop
mov
test
movsl
xchg
mov
mov
sahf
xor
xor
jo
aam
je
addr16
mov
push
adc
data16
pusha
push
sub
test
insl
test
out
js
dec
jl
and
decb
ljmp
mov
dec
data16
push
scas
sub
mov
iret
and
repz
jb
pop
out
adc
cmp
mov
loopne
or
in
fwait
scas
rorb
mov
dec
or
imul
push
outsb
rclb
sbb
adc
test
int
inc
addl
sbb
jne
mov
bound
lods
xchg
inc
mov
loope
pop
jnp
jno
or
push
repnz
inc
cmp
push
sub
adc
jae
imul
xor
sbb
lret
cmp
adc
dec
testl
les
jne
dec
and
imul
or
mov
pop
cmp
and
or
sbbl
fiadds
pop
dec
jecxz
mov
in
mov
scas
and
leave
adc
loop
jnp
in
mov
out
popa
and
xchg
mov
sbb
pop
loopne
out
pop
aad
push
in
or
and
mov
pop
je
sub
inc
mulb
pop
adc
sarb
dec
lret
inc
out
iret
rolb
jne
movsb
mov
flds
jp
push
jne
sbb
push
adc
pop
outsl
push
repz
add
repz
xchg
sub
ret
and
jnp
add
cli
repz
mov
jl
popl
in
push
lods
cld
stos
mov
jns
int3
jg
test
mov
pop
ja
xchg
incl
mov
fscale
adc
cli
fwait
and
cmp
in
rorl
loop
call
test
cwtl
cltd
mov
cmc
pop
std
ljmp
mov
dec
lret
pop
clc
mov
or
mov
fs
cmpsb
push
sub
mov
pushf
add
cltd
sahf
xor
jns
jle
mov
adc
jle
inc
adcb
inc
and
cs
push
pushf
jl
mov
aaa
mov
and
mov
xchg
xor
nop
xchg
mov
mov
fisubrs
mov
or
out
imul
pusha
faddp
mov
in
add
aas
stos
pop
dec
jnp
mov
cltd
nop
mov
cmpsb
lret
int3
stos
outsl
xor
fstpl
fiaddl
jb
out
js
sbb
jns
push
cmpsb
ljmp
test
outsl
data16
cltd
xchg
mov
add
imul
push
pushf
push
add
enter
cmp
xor
xchg
sub
cmp
scas
inc
fnstcw
out
sub
fistpll
dec
leave
sub
xor
out
and
jno
sub
cmpb
adc
dec
pop
add
test
andl
cmpsl
testl
faddl
loope
xchg
in
bound
xor
ljmp
dec
clc
cmp
or
sbb
fistps
mov
test
lds
mov
vrsqrtps
sbb
push
into
sbb
lods
inc
cmp
clc
mov
aaa
lods
push
push
push
push
dec
mov
xor
push
daa
cwtl
pop
jbe
gs
stos
gs
cmp
int
xor
sbb
ret
popa
inc
and
jbe
clc
scas
mov
dec
and
sbb
stc
lods
stos
test
ss
inc
jbe
fisubrs
stos
scas
push
inc
and
add
cmc
ficoml
out
into
push
cmp
jle
cmpsb
jnp
aam
lret
cs
fdivs
cld
dec
mov
fcmovu
fcoml
dec
jmp
lods
ja
push
pop
mov
push
addb
bound
sbb
loopne
leave
scas
pop
xor
fidivrl
sahf
and
jmp
arpl
loop
adcl
push
scas
and
pop
test
mov
adc
mov
div
push
loope
xchg
mov
mov
adc
xchg
xor
test
into
out
lock
cmp
or
pop
ljmp
dec
idivb
aaa
movsb
rorl
repnz
fistpll
dec
lds
sbb
jno
inc
lock
paddq
mov
xor
movsb
ja
bound
pop
scas
shlb
cmp
or
pop
sahf
popf
fdivrl
stc
push
mov
and
cmp
mov
add
xchg
aam
inc
push
imulb
or
mov
cmp
out
pop
mov
or
hlt
push
cwtl
insb
jl
int3
lock
sub
and
out
xchg
rol
xchg
sub
jecxz
cmpsb
adc
mov
repz
fs
jne
daa
fiaddl
repz
mov
pusha
sbb
fimull
daa
sysenter
addr16
clc
daa
xor
fbld
dec
jne
cmp
jge
sub
mov
mov
rcrb
mov
sbbl
add
icebp
add
pop
lods
movsl
pop
mov
xor
jo
inc
sub
add
imul
enter
inc
vmovdqa
outsb
or
subl
inc
aas
sub
ljmp
mov
adc
jne
mov
xor
js
das
insb
mov
cmpsb
add
lods
sahf
pop
out
shl
dec
mov
ljmp
hlt
lahf
jnp
xor
std
add
into
scas
addr16
adc
sub
xchg
sbb
add
push
jbe
out
loop
or
fisubl
fld
adcl
mov
cmp
xchg
adc
test
cwtl
sbb
xor
sub
in
out
mov
jns
mov
loope
ja
or
outsl
xor
xor
aas
dec
xchg
stos
dec
lcall
sbb
mov
jb
push
repz
dec
mov
pop
imul
add
sahf
jnp
inc
pop
aaa
enter
imull
nop
pushl
lds
sub
daa
movsb
in
or
mov
insb
push
xchg
icebp
push
shl
loopne
fmuls
and
pushf
icebp
lds
xor
and
ret
jbe
sbbb
enter
jno
jns
sbb
pop
pop
imul
imul
jo
inc
sub
sbb
out
sbb
xchg
in
cmp
xchg
push
cmc
push
inc
int
ja
bound
mov
inc
cmp
mov
sub
idivl
jo
adc
jmp
fs
cltd
pop
jb
mov
movsb
jne
or
add
add
cwtl
shll
xor
idivl
inc
adc
out
ds
in
bound
repnz
xchg
jg
push
dec
sub
mov
aas
xchg
jle
adc
scas
leave
fstps
push
inc
push
cmp
aas
inc
gs
jp
clc
xor
xchg
ret
push
jae
add
nop
xlat
out
scas
mov
push
lret
and
mov
add
cmc
cmpsl
mov
xchg
scas
fucomp
repnz
and
xor
adc
mov
and
stos
push
jbe
push
cmp
ret
insl
lds
sub
insl
or
mov
push
in
xor
add
push
rol
mov
and
push
fptan
jle
xchg
jnp
gs
cmpsb
cmpsl
or
insb
mov
mov
inc
mov
movsl
ja
or
xchg
jns
jo
xchg
sahf
je
shlb
lods
aam
pop
pop
out
fbld
ret
stc
pop
mov
sbb
fsubrs
jecxz
adc
and
lods
cli
adc
pop
inc
fimuls
add
cmp
push
adc
push
mov
add
rolb
jno
and
mov
sbb
jmp
sbb
jmp
cmpsl
pcmpgtw
push
dec
popa
movsb
mov
pop
les
dec
or
in
mov
loop
and
mov
mov
add
mov
adc
pop
sbb
and
inc
mov
pop
jb
pmaxsw
dec
xor
fwait
mov
adc
mov
jmp
cmpsl
repz
imul
adc
pop
mov
jp
add
or
out
js
inc
inc
inc
fwait
mov
xchg
add
sbb
dec
mov
nop
adc
lods
fwait
mov
sub
in
sti
mov
push
pop
mov
xchg
mov
adc
call
cmp
pop
mov
test
mov
fildl
call
inc
xchg
sub
mov
out
mov
pop
cli
aaa
pop
or
dec
out
and
mov
lret
dec
xlat
xchg
call
and
fs
repnz
fimuls
inc
cs
cmp
arpl
lock
fdivrs
mov
dec
add
test
lcall
repz
xlat
sub
sub
lcall
cmc
mov
repz
cli
or
daa
sub
adc
sbb
dec
inc
xchg
ja
push
cmp
imul
or
pop
mov
mov
lret
add
sbb
cmpsl
add
jle
mov
loop
and
cli
cltd
daa
nop
testb
pusha
jle
pop
xlat
rorl
scas
cli
fcoml
fadds
hlt
fadds
inc
popa
clc
lret
adcb
aas
sbb
xor
aas
imul
or
mov
loopne
inc
cld
jle
jno
stos
nop
mov
fpatan
loop
cmp
xchg
ficoml
out
mov
jge
imul
and
loop
sub
xchg
push
das
in
jo
arpl
pop
ja
mov
inc
and
sbb
pusha
mov
ss
daa
dec
inc
enter
ljmp
aas
call
dec
cltd
arpl
fdivrs
xor
jmp
int
loope
js
pop
fimuls
sub
repnz
scas
adc
daa
fimuls
imul
and
cmp
push
adc
call
arpl
dec
inc
lret
or
xchg
shlb
pop
pop
orb
jnp
mov
int
jbe
mov
stc
xor
mov
mov
je
out
inc
add
loop
or
js
imul
jb
scas
add
jne
rcll
hlt
psubusb
icebp
mov
mov
jns
cld
ret
mov
xlat
sti
adc
stos
sub
je
dec
xchg
lcall
lods
cli
mov
mov
pop
cwtl
push
jmp
dec
inc
std
push
mov
ljmp
pop
fimuls
bound
outsl
lds
sub
mov
or
ja
jecxz
in
test
dec
lea
sbb
cmp
outsl
shlb
shlb
cwtl
sbb
rclb
in
add
sbb
cs
or
fdivrp
cwtl
push
xchg
sub
push
push
iret
cli
sbb
js
xchg
insb
push
sbb
negb
jb
cs
inc
fsubrl
cmp
out
loope
add
pusha
jg
mov
inc
stos
mov
and
push
in
mov
sbb
sbb
sub
mov
sbb
sbb
cmp
movsb
stos
movsl
shlb
mov
lock
fs
popa
fucomip
scas
push
add
xlat
dec
out
sub
in
mov
mov
mov
jl
adcb
dec
test
mov
rolb
test
sbb
fistps
lea
ja
in
mov
jle
ja
lahf
push
inc
les
mov
gs
out
test
cltd
adc
inc
mov
ja
sub
push
and
cmpsb
ss
mov
xchg
cli
push
arpl
std
flds
pop
mov
out
jo
test
jo
xchg
andl
adc
fdivl
ds
jmp
cmp
test
lahf
test
pop
outsb
ret
xchg
imul
ret
nop
loopne
into
rcrl
shlb
jo
xchg
movsb
loop
mov
push
js
or
push
and
ret
insb
popf
mov
lret
cmp
inc
outsb
fistpll
loope
jne
fwait
orb
push
inc
jg
jp
jecxz
adc
sbb
pop
repnz
sbb
mov
pop
outsl
lods
sbb
js
jnp
fst
xor
lock
bound
pusha
xor
mov
lahf
insb
sbb
cmp
arpl
in
in
js
mov
and
push
push
mov
jb
out
stos
adc
mov
outsb
neg
dec
leave
rcrl
les
ss
enter
cli
lahf
cmp
aam
mov
mov
push
push
gs
push
imul
sbb
xchg
dec
nop
dec
jecxz
lods
aas
push
test
outsb
cmpb
iret
lcall
pop
repnz
or
mov
jl
popa
cmp
dec
in
ret
call
pop
jl
mov
rorb
ss
sbb
data16
mov
movsb
mov
lods
mov
jmp
jl
pop
test
sbb
push
mov
addr16
dec
icebp
mov
aas
repnz
cs
mov
pop
push
outsb
adc
mov
test
mov
jne
repz
dec
std
mov
adc
sbb
adc
xchg
xchg
xchg
add
jnp
push
lcall
or
out
cmp
lds
jne
testb
iret
pop
sub
inc
pop
xchg
out
push
jo
mov
dec
adc
sub
jp
sub
pop
mov
and
pop
popa
lahf
outsb
mov
cmp
lahf
or
cmp
scas
subb
mov
iret
sub
addr16
test
inc
imul
and
or
sbb
hlt
lods
sub
les
mov
push
push
jmp
mov
add
out
and
lea
je
gs
int
rcr
int
inc
and
mov
sbb
loop
and
insb
es
and
ftst
lahf
push
loope
addb
jbe
roll
jnp
ja
outsb
clc
loop
pusha
xchg
dec
scas
xchg
pop
push
mov
mov
ja
push
mov
xor
outsb
push
jo
shrl
cmp
pop
xor
aam
mov
dec
pop
sti
bound
jge
xchg
dec
stc
xor
sub
push
mov
nop
shrl
lret
rcll
cmc
xchg
add
or
insl
cmp
movsb
shr
in
pop
enter
js
loope
pop
lea
mov
addr16
ljmp
xchg
mov
and
or
iret
inc
pop
in
rorl
add
cwtl
push
push
stos
loope
nop
xor
cmpsl
insb
pushf
in
add
and
mov
sbb
out
cmp
stos
adcl
xor
outsl
fistpll
inc
inc
jae
fsts
sub
push
or
xor
cld
xchg
mov
dec
inc
popf
outsl
inc
cwtl
dec
call
mov
fs
xor
sub
shll
pop
cmc
mov
xchg
fxch
mov
dec
adc
in
sbb
fidivs
loopne
xchg
pop
jge
std
jecxz
cmc
xchg
pop
push
jecxz
ljmp
mov
shr
ja
xchg
aam
std
in
test
pop
insb
out
mov
out
je
inc
cmp
outsb
mov
mov
xchg
test
jmp
mov
push
aaa
or
rol
lahf
mov
push
in
add
jecxz
adc
pushf
adc
push
movsb
cltd
nop
ja
add
xor
outsb
mov
add
or
push
aas
xchg
xchg
push
sub
aas
pop
dec
inc
xor
js
push
pop
pop
xchg
push
shrl
mov
xchg
mov
push
cld
sub
cmpsl
dec
les
push
dec
push
fisubs
loopne
jns
xor
sub
xchg
shr
fiadds
pop
sahf
or
sti
fs
jp
ja
xor
add
enter
mov
nop
push
or
mov
mov
mov
xchg
les
jo
xorb
cmp
mov
push
mov
movsb
mov
dec
repz
bound
sub
mov
xchg
hlt
mov
jb
les
mov
in
in
icebp
push
test
add
jmp
sbb
std
fmull
pop
xchg
mov
jb
mov
sbb
cmpsb
xor
js
ret
xlat
push
fsub
mov
push
test
out
mov
cli
lock
mov
add
pop
imul
dec
test
push
jmp
cmp
in
adc
or
inc
subps
sbb
mov
addb
mov
sub
ds
xchg
jne
in
push
adc
fists
cmp
mov
loop
xchg
push
dec
jo
sub
aam
orb
je
imul
ret
and
xor
push
mov
xlat
cmp
push
fcompl
in
ror
xor
mov
jnp
jne
call
popa
clc
and
or
or
ja
inc
jecxz
jmp
xchg
ret
sbb
or
subl
cmp
or
flds
pop
pop
sub
add
jbe
lock
and
push
pop
icebp
or
stos
inc
mov
xor
jbe
aam
sub
jo
mov
mov
inc
mov
mov
pop
popa
cmp
adc
rorl
pusha
imul
in
dec
std
aas
mov
jg
insb
dec
mov
adc
dec
add
insl
xchg
add
lcall
pop
mov
les
inc
and
test
jo
mov
dec
ljmp
cmpsb
fwait
shll
push
mov
sub
ret
adc
mov
stos
xor
and
mov
dec
repz
aam
jno
loop
jnp
mov
jb
sub
and
pop
lcall
pop
fwait
je
rorb
adc
mov
jp
mov
jns,pt
mov
test
movsb
xchg
and
pop
sub
loope
xbegin
inc
push
std
ficoms
ja
cwtl
sti
push
rcl
in
push
outsb
cmp
push
sbb
inc
xor
ret
cli
cmc
pop
daa
push
adc
mov
adc
call
dec
cltd
lahf
in
repz
mov
push
pop
or
daa
jg
push
test
stos
push
outsl
xor
test
sbb
or
lds
push
or
sti
mov
push
ja
adc
mov
out
cmp
inc
mov
mov
jno
clc
imul
mov
sti
nop
mov
xchg
js
mov
imul
xor
mov
test
fwait
or
pop
sarb
jae
shll
aas
lea
sbb
push
cld
cld
testl
jmp
pop
sbb
fstpl
iret
and
and
insb
in
js
frstpm(287
fisubrl
xor
add
fstpl
cld
mov
ja
xchg
add
outsb
aaa
retw
bnd
inc
pop
loopne
fidivl
pusha
dec
mov
ret
add
add
fs
or
popaw
and
jb
add
imul
orl
and
vpunpcklwd
mov
stc
pop
daa
xchg
fimuls
lcall
adc
sbb
test
mov
rolb
jae
jno
mov
cs
pop
add
sbb
shrb
rcl
sbbl
xchg
adc
add
gs
mov
and
popa
dec
movsb
dec
fildl
sbb
arpl
jl
cmpb
pop
bsr
bound
enter
pushf
xchg
fcompl
pop
adc
fistpll
inc
sbb
sub
repz
nop
mov
mov
pusha
sub
adc
inc
outsb
ret
arpl
inc
mov
mov
movl
leave
shlb
out
mov
lcall
adc
aas
hlt
imul
pop
jge
iret
mov
mov
push
and
movsb
mov
es
and
in
push
mov
sar
or
jbe
mov
cmp
mov
or
adc
movsl
call
sub
xchg
enter
xlat
lret
jecxz
adc
adc
lea
inc
movsl
insl
lcall
lret
and
mov
and
in
pop
or
jmp
sub
push
mov
hlt
cmp
dec
mov
mov
jo
fsubs
dec
pop
pop
dec
scas
fldt
xchg
pop
test
jo
and
arpl
push
and
push
js
outsl
jae
jb
xchg
ja
xchg
adc
fnsave
cs
jle
aam
cmp
jnp
inc
sahf
or
ljmp
popf
sahf
shlb
lock
mov
push
xchg
shll
imul
fsts
popf
mov
nop
jl
cmp
cmpl
lret
sub
mov
sub
push
or
pop
aas
sub
lock
sub
call
xor
mov
ja
mov
push
test
or
data16
test
dec
jns
push
and
dec
mov
lds
xor
pusha
pop
iret
pop
imull
ret
mov
sub
lods
dec
daa
xchg
addr16
and
inc
mov
iret
out
dec
mov
jg
imul
pop
xchg
clc
test
or
xchg
out
jle
lret
cmp
mov
xor
xchg
mov
lods
int3
cmpsb
dec
jnp
or
xchg
lcall
rcl
sbb
xchg
sahf
jl
es
test
push
cs
stc
xchg
sbb
adc
fdivrl
rorl
pcmpeqd
aas
loop
ret
test
or
xchg
push
ja
aaa
and
mov
hlt
xchg
push
ss
mov
aam
dec
push
testl
adc
sarl
bound
mulb
loope
or
scas
mov
jmp
aad
jp
cs
aad
inc
pop
cmpsl
call
lret
mov
ds
push
and
jl
divb
out
lcall
jmp
out
lea
fdivl
push
fimull
arpl
pop
sub
shlb
call
xchg
ljmp
clc
xchg
movsb
push
rcl
mov
lcall
mov
cmp
jae
cld
jecxz
push
add
sbb
jb
lods
cmpsb
pushf
icebp
cld
and
xchg
mov
and
andl
or
icebp
lock
ja
pop
inc
pushf
xchg
and
in
or
inc
filds
push
or
push
adc
or
test
insb
leave
nop
or
shrl
je
insl
inc
sbb
mov
repz
dec
sub
leave
dec
out
out
push
clc
push
filds
stos
mov
and
shll
add
mov
adc
nop
mov
push
enter
mov
bound
mov
sbb
and
lods
jmp
xchg
dec
mov
jb
dec
outsl
sbb
mov
and
inc
cs
dec
dec
jge
push
mov
xchg
in
mov
or
mov
jns
push
outsl
xchg
jmp
iret
mov
adc
sahf
push
shrl
imul
xor
loop
roll
mov
push
cmpl
call
lret
cmpsl
jne
dec
dec
push
push
in
inc
ds
jmp
adc
mov
sub
icebp
ficompl
scas
fadd
jg
add
inc
iret
or
mov
repnz
and
mov
addr16
loopne
repnz
lea
test
inc
icebp
test
xorl
jecxz
adc
inc
ljmp
fildll
or
mov
push
mov
inc
shrl
sub
test
mov
pop
push
pusha
loope
jmp
fwait
lock
cmp
insl
jb
sbb
outsl
rcrl
mov
and
push
mov
push
call
lcall
pushf
in
mov
adc
xor
enter
lahf
insb
push
cld
inc
adc
enter
inc
sbb
xchg
aam
xor
and
pop
jp
shrb
into
mov
pop
call
sub
xbegin
fadds
dec
or
xchg
mov
mov
xchg
jno
mov
subl
test
and
stos
lcall
and
gs
mov
test
mov
or
mov
and
sbb
xchg
xchg
pop
adc
loopne
mov
xchg
lock
push
mov
cld
out
sub
int3
xchg
push
inc
pusha
call
sub
cmp
cmp
pop
hlt
lcall
mov
push
pop
mov
movsb
xor
xchg
jns,pt
xor
pop
sub
dec
je
clc
mov
loop
add
cmp
inc
push
repz
cs
and
cmp
lret
or
pop
pop
mov
cmp
mov
mov
xlat
jle
aas
adc
cmc
aam
addr16
dec
xchg
clc
mov
shll
outsb
imul
xor
fs
repnz
in
jl
mov
gs
inc
arpl
pop
sub
mov
add
popf
out
sub
inc
ds
and
imul
and
arpl
movsb
inc
xchg
xchg
xlat
dec
subb
mov
rcrb
dec
mov
push
pusha
lds
xor
lahf
push
push
xor
pop
ljmp
imul
sbb
adc
repnz
adc
xor
xor
xor
int
gs
xchg
ficomps
outsl
or
or
mov
imul
ss
mov
ds
inc
mov
inc
mov
into
inc
call
mov
add
insl
in
push
and
dec
dec
adc
jge
jg
xor
cmc
lock
cmpl
fistpll
cwtl
inc
insb
cmp
rolb
mov
inc
add
test
xchg
xor
pop
add
xor
add
std
adc
lock
imul
aas
or
iret
sar
adc
push
cmp
or
bound
in
cmp
dec
out
fmuls
mov
out
sbb
xor
pop
adc
mov
dec
xchg
fprem
push
cld
sub
hlt
movsl
cwtl
and
inc
loopne
cmp
inc
jecxz
hlt
shlb
mov
outsb
adc
and
mov
lret
stc
dec
add
inc
repz
jns
rclb
pop
ljmp
call
negl
or
cmp
cmp
and
cmp
imul
loope
adcl
mov
out
jg
mov
cmp
inc
cld
jnp
mov
pushl
sbb
mov
dec
inc
mov
pop
addr16
test
and
pushf
jae
or
aam
jl
pop
stc
cwtl
jp
stos
pop
arpl
cld
or
xchg
popa
incl
sub
mov
pop
xchg
rorl
push
movsl
dec
push
jp
adc
pop
pop
addr16
rcrb
cli
dec
popf
idiv
bswap
ljmp
cmp
push
inc
fisubl
popf
inc
mov
cmp
in
xchg
xchg
push
pop
push
rolb
insl
mov
mov
mov
or
stos
cmpsl
bound
mov
roll
loope
stc
icebp
std
xchg
lret
xor
pop
leave
std
adc
xor
call
into
xlat
mov
mov
jp
and
repnz
test
or
mov
add
es
movsl
jno
insl
adc
sbb
push
in
loop
mov
fnsave
pop
shll
inc
divl
call
mov
mov
fsubr
movl
fstl
loop
mov
fwait
cmp
pushf
lods
cwtl
cmp
imul
fnsave
push
fmuls
mov
pcmpeqb
movsb
in
dec
xor
add
push
repnz
notb
js
sub
sahf
dec
outsl
pop
sub
xchg
xchg
lret
xor
mov
sbbb
push
aas
sub
loopne
adc
adc
push
xor
and
sub
or
popa
mov
cmc
adcl
xor
leave
es
inc
mov
xchg
sbb
cltd
sub
outsb
fisttpl
incl
stos
dec
or
pushf
or
cltd
sub
inc
stc
dec
scas
xchg
jp
out
or
hlt
pushl
dec
out
andb
pop
pushf
into
jno
add
jne
out
and
push
loope
mov
pop
sub
sub
push
mov
pop
pusha
int3
add
cmp
xor
xchg
mov
inc
dec
mov
xor
nop
mov
idivb
sar
mov
xchg
dec
rorl
mov
cmp
xor
sar
lret
faddp
sahf
push
cmpsb
mov
push
mov
dec
loopne
aam
mov
outsb
inc
lret
jmp
inc
pop
notl
sbb
pop
xchg
push
push
iret
dec
fdivrs
add
cmp
mov
in
or
mov
aaa
add
rcrl
dec
shlb
dec
mov
xchg
lahf
ret
scas
in
aas
sbb
js
in
movsb
pop
inc
cli
or
data16
lods
insl
cmc
or
lcall
test
push
icebp
push
cmp
dec
xchg
cmp
jb
add
mov
cs
add
cmp
int3
sbb
js
cs
sub
fisttps
mov
pusha
pushl
push
mov
and
xlat
dec
dec
jae
xor
int3
lret
mov
xor
cmpsb
cmpsl
stos
iret
sbb
int
push
sub
xchg
mov
lods
or
or
mov
sub
or
outsl
iret
clc
jge
sbb
loope
lcall
call
aaa
fnsetpm(287
inc
movsb
inc
rclb
in
cmp
pop
xchg
ja
push
mov
dec
lret
icebp
fs
mov
movsb
dec
pop
mov
cmpsl
push
inc
mov
push
fstpt
add
xchg
cmp
cmpsb
fadds
mov
or
push
mov
movsl
xchg
lret
dec
mov
movb
mov
push
lret
mov
jae
dec
out
jns
imull
sbb
ljmp
xor
dec
add
mov
mov
pop
rcr
mov
cmc
or
xchg
ja
fnstcw
cmp
xchg
int3
mov
in
xchg
ljmp
jnp
mov
lcall
dec
js
inc
adc
rorl
dec
icebp
mov
sbb
or
insl
ds
adc
lret
xchg
jl
jbe
mov
pusha
xorb
test
aam
jle
jp
add
in
xchg
xchg
xor
icebp
clc
cmp
mov
and
pusha
lods
ja
imul
pop
ds
dec
test
and
insb
xor
lret
jns
es
jb
inc
push
push
and
xchg
les
icebp
sub
cmp
scas
jg
cmp
dec
in
test
add
inc
sti
shr
sbb
ret
or
sub
cli
pop
lods
sbb
cmp
inc
inc
pushf
out
movsl
outsb
sbb
test
popa
adc
frstor
mov
stos
ret
push
jns
add
push
bnd
ret
outsl
lret
or
call
addr16
lea
mov
mov
sbb
xchg
xchg
lea
pop
enter
sbb
jo
adc
aam
sarl
loope
push
push
xchg
rclb
lret
sub
xor
jmp
aas
and
ficomps
js
xchg
js
lcall
dec
sbb
push
shl
xchg
cmpl
scas
jo
scas
sub
leave
push
and
mov
rclb
popf
sti
jmp
xchg
dec
sub
fstps
cmp
stc
mov
add
inc
mov
fistps
addr16
loopne
mov
xor
jo
adc
rep
xchg
call
and
mov
aam
mov
outsb
out
pop
sbb
dec
inc
push
outsl
push
jge
sti
mull
cld
ret
mov
inc
iret
fnstsw
xchg
sbb
sahf
inc
out
stc
pop
jecxz
in
mov
or
xlat
mov
inc
cmp
in
test
xchg
sti
pop
ds
jecxz
cwtl
icebp
xor
shlb
dec
dec
out
inc
or
cld
adc
aas
js
out
and
xor
xchg
rcr
call
call
cmp
shrb
or
in
jmp
ror
mov
cmp
in
xchg
mov
mov
rclb
ss
shl
adc
mov
adc
hlt
xchg
jb
rcll
insb
pop
mov
in
dec
lcall
adc
mov
enter
adc
in
stos
imul
lods
adc
cmpsl
incb
icebp
lret
push
pop
fimull
scas
sbb
jmp
cwtl
or
or
data16
cmp
xchg
lea
push
fbld
stc
gs
in
mov
dec
in
shll
dec
sti
mov
arpl
cmp
addr16
out
xchg
dec
push
lcall
ds
push
leave
xchg
jb
sbb
cli
or
pop
ficoms
mov
sbb
inc
add
outsl
push
out
jl
test
stos
fiadds
adc
clc
sbb
dec
cmp
xlat
popa
sti
test
test
and
xchg
pop
bound
imul
push
jns
into
sbb
xchg
daa
and
jmp
push
shl
daa
jb
sub
nop
cmpb
lds
mov
jg
ret
je
dec
stos
xchg
xor
sbb
pop
lcall
mov
sti
xor
dec
push
or
fs
cltd
push
and
adc
jo
mov
cmc
sub
or
out
or
gs
ret
imul
mov
xchg
mov
scas
sbb
push
clc
arpl
das
mov
rcrb
xor
and
cwtl
test
jae
out
adc
sbb
sbb
fcmovbe
sub
fistpll
stos
sbb
and
rolb
jno
jl
cmc
lods
mov
popa
push
and
repnz
push
cmp
lock
sub
gs
inc
inc
mov
xor
lcall
loope
jp
lock
inc
imul
out
jb
inc
jmp
adc
sub
xlat
xorl
popa
adcl
es
aad
cmpsb
data16
pop
andl
lds
testl
xchg
sbbb
push
mov
xor
popf
jg
je
cmp
outsb
movsl
mov
imul
aam
pop
repz
int3
lea
lods
push
aam
mov
cli
lcall
dec
push
mov
add
jno
jnp
fwait
subb
mov
fldenv
sbb
test
lods
dec
mov
adc
xlat
lock
filds
incb
jecxz
pop
cwtl
mov
aad
and
mov
sub
lea
sti
clc
or
test
mov
std
xor
sub
movsb
mov
xchg
mov
jl
inc
pusha
xchg
test
mov
mov
popf
mov
sbb
in
dec
ror
mov
pusha
lds
out
jo
in
inc
or
aam
mov
popf
stc
cmp
push
lods
leave
aas
fsubr
nop
sub
dec
repz
mov
jns
xchg
movsb
adc
sbb
inc
sbb
inc
cli
daa
stos
mov
in
sub
xor
or
shlb
add
aaa
data16
jecxz
jno
aad
mov
js
cli
xlat
xchg
jl
adc
sbb
stos
push
popl
jecxz
test
xchg
ljmp
push
jecxz
fwait
sub
lods
add
xor
jge
mov
mov
adc
jmp
out
sbb
dec
jle
ret
ljmp
jl
mov
cmp
out
inc
fs
pushf
imul
mov
cmp
imulb
notl
hlt
mov
je
insb
sbb
ret
les
hlt
xlat
jno
sbbl
or
repnz
xorl
pop
das
xchg
pop
cwtl
push
in
jmp
cmp
jb,pt
jp
mov
inc
into
in
fmul
inc
leave
fcomi
sub
ja
int3
inc
inc
adc
nop
out
sbbl
jae
adc
outsl
xorl
notl
call
aad
cmp
add
stc
jp
enter
mov
stos
or
out
pop
xor
std
add
rclb
pop
dec
fidivs
inc
in
clc
jno
fldcw
sub
mov
mov
sbb
clc
clc
je
pop
xchg
popa
sahf
xor
sbb
clc
adc
xor
jg
popf
pop
jge
into
cmp
jle,pt
mov
inc
aad
dec
sbb
push
inc
mov
jae
xor
sub
mov
inc
jb
pushf
or
dec
mov
mov
mov
inc
or
std
mov
jbe
add
outsl
pop
add
mov
xor
nop
push
sbb
cltd
dec
adc
loope
fstpt
xor
adcl
jbe
scas
xor
es
inc
jl
push
rclw
sub
test
hlt
addl
adc
sahf
add
xchg
pop
or
mov
mov
lods
call
lods
xor
xor
add
dec
fldcw
insb
xor
movl
xor
mov
mov
movsb
test
mov
mov
cltd
clc
test
and
lahf
cmpsb
or
ffree
pop
gs
popf
sub
out
xchg
jge
lcall
or
arpl
mov
push
js
xchg
arpl
test
lock
daa
fmull
mov
cmpsb
and
mov
lock
ficomps
jp
push
lcall
lock
sahf
pop
fbld
aaa
mov
das
adc
addl
pop
and
push
sbb
cmpsb
je
sub
inc
mov
dec
aaa
jb
sub
mov
or
pop
sarb
jg
cmp
jp
xorb
pop
lea
or
fistpl
add
inc
out
xchg
sti
mov
cmc
out
pop
repz
int
xchg
pop
add
and
xor
or
push
push
iret
adc
mov
outsl
faddl
mov
jno
xchg
daa
adc
movsl
cmpsl
in
xchg
sub
push
and
incb
shrl
xchg
jle
lahf
test
les
add
sbb
xor
xchg
or
leave
cmp
and
mov
jnp
add
test
mov
popf
out
xchg
cmp
or
cmpsb
sbb
mov
ret
add
in
xchg
out
scas
into
fmuls
test
clc
icebp
sbb
lret
adc
lahf
pop
aam
jle
clc
dec
xchg
outsl
sub
call
data16
mov
jecxz
addr16
fdiv
ffreep
loop
ja
cmp
ljmp
enter
pop
lods
mov
sbb
sarl
push
add
imul
fld1
xlat
jle
arpl
je
in
push
sbb
push
movsb
lds
aaa
inc
sti
xchg
mov
xchg
inc
xchg
sub
dec
xor
ljmp
sbb
sub
or
inc
sub
pop
sub
xchg
adc
push
sub
ds
inc
adc
pop
cmp
int
lods
loope
imul
jecxz
pop
sub
aas
push
dec
test
xor
pop
sub
push
add
and
jmp
add
pop
cmp
dec
mov
aad
mov
lds
add
stos
pop
inc
rcrl
fimull
enter
pop
adc
mov
mov
inc
pushf
adc
aas
xchg
and
sub
push
dec
mov
mov
xor
and
andps
adc
movsl
aam
fstpl
push
fsubrl
jp
insb
dec
mov
and
xor
xchg
mov
mov
cwtl
popf
pop
add
ffreep
stos
xchg
jnp
fidivrl
sbb
sub
cmp
repz
xor
mov
jbe
std
inc
or
es
jecxz
jne
push
push
add
or
lret
ficomps
stc
cwtl
mov
nop
pushf
xchg
roll
mov
enter
jo
sahf
xor
xlat
jnp
das
call
mov
mov
cmpsl
cs
push
test
mov
or
or
lea
pusha
lret
xchg
add
push
fucomp
xor
and
xor
jno
jne
pop
mov
in
xlat
mov
xor
lods
loopne
xchg
rolb
insl
cld
sarl
sti
and
shll
repnz
xor
cmp
xchg
loopne
pop
loop
mov
cltd
inc
ret
bound
cmpsb
int
lds
cmc
mov
and
sahf
dec
xchg
rcr
mov
bound
call
in
pushf
inc
sub
push
xchg
mov
or
xchg
mov
sbb
and
mov
sbb
fmul
rorl
add
adc
adc
or
sub
es
add
sbb
add
cmp
adcl
mov
push
in
fucomip
sbb
icebp
pop
lahf
cmp
xchg
pop
orb
xor
lcall
aad
cmp
lds
mov
xor
adc
mov
cmp
andl
or
jnp
mov
cli
flds
cwtl
insb
lds
or
fcompl
xchg
push
fs
pop
idivb
cld
sub
stos
push
cltd
lea
cmc
sub
cmpsb
lcall
das
jmp
lea
testb
loopne
bound
cmp
out
jnp
jmp
adc
jg
mov
sub
mov
jns
xchg
xchg
sub
push
xor
sbbb
push
imul
repnz
dec
mov
dec
push
jg
icebp
movsl
xor
pushf
xor
lods
in
jb
xor
or
js
insb
and
fistpl
sarl
shrl
aaa
push
adc
sub
pop
daa
push
add
push
ljmp
movsb
testb
call
inc
mov
imul
lahf
hlt
inc
sbb
repnz
dec
pop
jmp
stos
mov
pusha
ret
lret
cmpl
jbe
pushf
xor
xchg
fisttps
mov
ret
ss
pop
nop
out
add
cmpsl
xchg
jmp
lret
or
or
push
pop
ja
lods
inc
stos
xchg
mov
xchg
dec
aad
out
clc
sub
mov
lcall
push
mov
sbb
fidivrs
sahf
adc
sarl
lds
les
out
out
arpl
mov
dec
pushf
push
push
mov
push
inc
inc
push
adc
rcrl
dec
iret
fbld
mov
sub
mov
jne
dec
in
and
mov
xchg
repz
cmp
mov
sub
jo
mov
out
outsl
mov
dec
cmp
pop
dec
and
push
lods
les
push
sbb
sbb
sbb
popa
xchg
push
mov
and
cmpl
mov
xchg
mov
scas
sub
shll
push
pop
icebp
loopne
das
cwtl
daa
mov
xor
fwait
es
jmp
jmp
push
push
pop
lahf
inc
push
out
mov
xchg
mov
adc
int
cmp
popf
idiv
sbb
xchg
stc
xorb
or
mov
dec
inc
imul
in
insb
jbe
mov
cmp
push
aaa
and
cltd
lds
insb
leave
rcl
aam
push
test
jl
shl
pusha
fisubrs
inc
addr16
cld
movsb
mov
adc
inc
int3
mov
xchg
imul
enter
aad
jns
decl
sub
and
ret
mov
and
add
push
out
mov
pusha
loope
arpl
push
in
ret
repz
mov
lret
mov
push
cmp
in
fs
movsb
bound
ret
add
in
int3
dec
bound
int
mov
xchg
jno
xor
jnp
push
mov
dec
push
jp
por
xor
jge
test
add
add
sbb
push
jae
shrl
pop
rolb
stos
outsb
popa
jae
fwait
or
mov
sub
mov
push
adc
popf
sbbb
jp
mov
ljmp
outsl
dec
rclb
xchg
xchg
and
and
fmuls
sbb
jb
xchg
popf
mov
sbb
mov
aam
pop
inc
pusha
pop
mov
cmp
adcb
stos
movsl
mov
mov
int
mov
xor
stc
mov
lahf
xchg
jns
push
daa
cmp
fistl
rclb
xor
jle
roll
mov
fistl
aas
int
shr
rorb
lods
ljmp
fwait
inc
movsb
and
adc
call
add
test
pop
sbb
sbb
lret
cmc
cld
test
sti
outsb
sub
mov
xchg
mov
call
jmp
lds
push
dec
scas
data16
je
dec
pop
das
cmc
dec
fcompl
or
call
xchg
mov
scas
data16
in
cmp
xchg
dec
mov
mov
inc
shl
jnp
inc
inc
mov
mov
lock
adc
mov
int
mov
lds
fnstcw
repz
rcrl
jle
mov
icebp
lock
jp
lcall
insb
mov
xor
pop
xor
into
out
inc
ficoms
pop
lods
mov
in
push
xchg
jne
pop
bound
pop
dec
push
ss
mov
xor
dec
outsl
push
insb
jl
test
scas
aad
adcl
fs
clc
mov
pop
jmp
test
lock
fiadds
imul
data16
sbb
add
adcb
push
popf
dec
pusha
jbe
push
push
ret
jg
lret
xlat
sub
in
mov
mov
xor
mov
fldcw
pop
sub
loope
and
cs
push
orb
cmp
mov
pop
out
jns
mov
jle
dec
scas
ss
les
dec
adc
hlt
sub
data16
jg
push
cli
lods
xchg
inc
mov
sbb
call
insl
mov
push
cltd
loop
out
add
and
and
add
push
or
daa
jg
out
lcall
jmp
sbb
jle
testb
cmp
jecxz
fisttpl
in
sub
mov
push
adc
popw
pop
push
jmp
pushf
xor
std
ljmp
into
dec
xchg
and
lds
out
mov
mov
imul
push
jecxz
lcall
inc
popf
mov
inc
inc
xlat
mov
cmp
jns
mov
push
fcomps
jo
xchg
cmc
divl
loop
jg
or
mov
je
roll
xchg
scas
pop
inc
mov
xchg
outsl
lods
mov
jae
std
jle
and
addr16
dec
jmp
mov
mov
test
pop
enter
jns
jb
test
inc
daa
jle
mov
mov
lock
adc
rolb
mov
push
inc
push
cmpsl
dec
fstps
dec
adc
pop
xchg
pop
insb
push
push
int3
inc
adc
cwtl
mov
cmp
in
mov
roll
mov
repz
pop
jbe
ja
mov
aaa
divb
inc
out
icebp
xchg
cmp
sbb
sub
and
pushf
jne
jg
test
shll
inc
shl
out
sbb
inc
add
lret
ret
or
mov
push
in
aas
shll
inc
call
sar
and
cmp
arpl
jle
dec
or
das
sbb
or
test
or
sbb
pop
lahf
into
dec
and
cmp
adc
xchg
lcall
lret
inc
xchg
jae
add
fldenv
shlb
insl
aad
popa
pop
inc
fwait
xor
hlt
xor
adc
jne
lret
mov
stos
push
arpl
in
leave
inc
scas
xchg
inc
xchg
shl
pop
fdivl
lahf
cmp
sub
dec
mov
mov
lea
mov
lock
inc
xor
addr16
and
and
push
and
aad
ljmp
gs
mov
or
cmpl
dec
push
nop
popf
adc
leave
pushf
out
cli
filds
xchg
out
mov
popf
pop
push
add
pop
out
mov
clc
cmpsb
popf
sbb
jle
jae
or
xor
mov
pop
adc
adc
adcb
insb
insb
popa
testl
dec
lds
mov
repnz
and
jg
sub
aam
push
pusha
xlat
cmp
inc
adc
xchg
rcll
jb
xor
pop
and
scas
orl
jne
add
lods
jl
push
xchg
rorl
mov
adc
out
ret
ljmp
mov
adc
ret
int3
imul
add
xor
divl
mov
cmp
xor
andl
mov
iret
cmp
data16
mov
lds
shrb
pushl
mov
add
cs
sti
icebp
sub
cmp
std
sbb
cs
test
sbb
nop
inc
pop
shlb
in
testb
and
adc
repz
fs
sub
aaa
add
gs
cmp
jns
jne
dec
push
sbb
or
repz
inc
stos
shlb
mov
bound
inc
lret
stos
in
ret
ss
jecxz
fsubr
insl
daa
mov
sbb
pushf
ficoms
stc
mov
adc
fists
notb
jmp
orb
mov
push
cmp
pop
sub
fbld
imul
dec
call
jno
sub
xchg
mov
cwtl
and
mov
mov
into
iret
les
pop
insl
jnp
lods
mov
mov
jns
mov
fcoml
into
inc
mov
mov
aas
jp
mov
cmp
test
mov
xchg
or
aaa
jno
mov
dec
movsl
sbb
pop
cmp
ret
ret
dec
pusha
xchg
fucomp
add
out
lds
xchg
movsl
clc
cmpsl
addr16
sbb
pusha
stos
je
pop
lahf
push
jne
insl
xor
jns
and
outsl
cmpsl
ret
fildl
xchg
push
mov
enter
cmp
scas
cmp
in
popa
shlb
xchg
clc
mov
push
stos
repnz
bndldx
mov
xchg
mov
jg
sub
idivb
loop
sub
or
add
push
inc
push
or
sub
out
bound
push
adc
aam
or
mov
add
sahf
sarb
dec
mov
pop
xchg
ficomps
mov
or
daa
ja
sbb
in
jne
pop
stos
dec
and
fwait
out
dec
adc
test
xor
je
pop
sarl
adc
mov
jmp
mov
xchg
push
push
vmovntdq
dec
push
test
popa
mov
mov
int
mov
sub
test
pop
xor
pop
std
inc
adc
mov
sub
xor
inc
fsub
cli
inc
xor
in
sub
mov
push
xor
aas
bswap
sarl
bound
es
aad
rorb
push
jns
inc
dec
sbb
or
hlt
xor
addb
loopne
xchg
xlat
xor
daa
cs
lret
fiadds
push
sbb
or
shlb
rdtsc
mov
cmp
fdivrp
mov
add
scas
push
movsb
pusha
insl
pop
cld
sbbb
or
dec
cs
push
mov
or
mov
mov
pop
jbe
xchg
adc
rcrl
xorl
fisubs
cmp
pushf
fstp
adc
jl
btr
insb
inc
inc
outsb
push
test
pop
stos
mov
data16
call
adc
arpl
movsb
xchg
popf
push
mov
daa
jge
adc
dec
mov
mov
add
pop
xchg
stc
fwait
xchg
clc
mov
xlat
scas
lahf
stos
mov
mov
fistpll
jge
jge
pop
cs
mov
mov
out
out
mov
jbe
loope
lods
xchg
insb
out
pop
hlt
in
mov
mov
mov
ja
jo
js
mov
cld
push
pushf
add
push
outsb
iret
sub
rorl
stc
sub
testb
adc
push
test
aam
loop
rolb
xor
mov
test
sub
int3
aam
fimuls
add
icebp
int
and
xchg
insl
mov
xchg
xchg
loop
pop
data16
data16
loop
cmpsl
repnz
arpl
inc
mov
or
cmp
out
push
fnstsw
lock
adc
cld
pusha
mov
out
add
mov
sub
add
pusha
mov
or
mov
mov
cmpsl
test
sbb
cmp
sub
hlt
iret
test
inc
in
fs
and
lahf
sbb
cltd
sbbl
fiaddl
in
ljmp
addb
arpl
lods
dec
incb
cmp
es
leave
insb
fsubl
lds
xor
jge
push
mov
out
mov
mov
mov
mov
xor
xchg
into
out
cmp
add
dec
gs
lret
fisubl
mov
push
dec
or
ds
inc
pop
loopne
and
jecxz
xor
aas
enter
jmp
mov
mov
gs
jbe
add
les
gs
cmpsl
jmp
push
sub
jns
pop
pop
mov
sbb
fistl
sbb
das
psraw
rcrb
mov
add
mov
sbb
int
mov
and
icebp
jns
or
out
inc
cmp
movsl
and
cmc
fidivrl
scas
xchg
pop
outsl
mov
insb
pusha
lahf
negl
xor
lret
mov
adc
rcl
imul
sbb
adc
inc
ret
divb
int
pusha
dec
and
or
inc
in
leave
pop
daa
hlt
lods
pop
add
aaa
in
lahf
push
pop
call
pushf
aam
mov
in
xor
ljmp
aam
jmp
xchg
xchg
out
iret
fnstsw
outsl
cwtl
xchg
mov
inc
sub
mov
pushl
mov
fwait
insb
push
lea
push
int
cltd
dec
movsb
int
jmp
fmuls
xchg
mov
mov
out
sub
sbb
adc
xor
inc
test
pop
hlt
xchg
and
leave
mov
aam
in
imul
imul
jl
jne
test
xchg
arpl
rol
sbb
pusha
imul
and
jns
lahf
lret
mov
aad
xchg
in
pop
push
test
aam
pop
ljmp
js
sbb
add
daa
lret
imul
cmp
sbb
stos
frstor
dec
cld
jmp
imul
jecxz
sub
out
mov
mov
jnp
push
xor
mov
out
sbbl
jae
ljmp
xor
enter
jns
out
movsl
pop
xor
popa
mov
shr
fistps
sti
xchg
ss
movsb
movsl
addr16
or
mov
push
add
inc
jecxz
pop
es
cmpsb
inc
icebp
add
notb
int3
int3
or
cmpsb
js
inc
in
pop
or
ss
adc
arpl
or
sbb
lahf
inc
insb
push
pop
cld
lret
xchg
sub
enter
inc
xor
aas
cmp
sbb
jmp
cmp
cli
xchg
ja
jb
push
push
sub
ss
inc
fisubs
adc
imul
loop
and
jb
test
sub
negl
xor
and
inc
mov
in
push
push
mov
cltd
mov
test
cmpb
or
fcmovu
test
popf
ret
repnz
adc
xor
or
mov
mov
jo
loopne
lret
std
pushf
clc
subb
inc
jno
mov
pop
xchg
mov
imul
leave
xlat
xchg
push
sub
scas
push
pop
or
sub
sbb
lret
paddw
jno
dec
hlt
push
ds
jmp
xor
pop
lcall
add
push
xor
cld
fsubp
xchg
cmp
loopne
ljmp
jns
xor
dec
inc
mov
inc
mov
mov
sub
cwtl
clc
ret
inc
mov
dec
dec
add
roll
jno
ss
daa
mov
mov
dec
notl
push
pop
test
lret
hlt
addr16
adc
in
adc
and
adc
adc
mov
push
cltd
sbbb
idivb
fsubrs
ds
adc
pop
cmp
pop
xor
aas
xor
fnstcw
into
rorl
sbb
mov
add
sbb
sbb
mov
mov
jl
pop
cmp
aas
push
lea
dec
add
push
pop
les
push
std
test
xlat
sub
xor
xor
and
xor
punpckhwd
jle
push
add
or
push
sti
jne
sbb
lds
insl
sahf
jns
aad
mov
repz
inc
movsl
jns
je
lea
xchg
or
mov
leave
add
mov
fwait
sub
scas
rcrl
enter
xor
andl
in
add
imul
push
jno
jae
cltd
in
dec
insb
cmp
lock
sub
sub
fisubs
std
ss
stos
xchg
add
adc
cmpsb
sub
sbb
jnp
rolb
fwait
shl
mov
adc
pop
adc
loop
xor
test
test
inc
cmp
int3
stos
lods
lret
add
lds
imul
and
mov
pop
jae
mov
xchg
popa
jmp
mov
out
xor
fwait
push
inc
jecxz
jns
jmp
add
mov
or
rcll
dec
add
jb
inc
mov
ljmp
stc
inc
mulb
std
into
sarb
mov
mov
test
or
aad
in
hlt
int
push
lret
mov
scas
add
ljmp
add
repnz
rorl
idiv
hlt
mov
dec
sarb
out
dec
scas
push
xchg
inc
push
nop
inc
inc
test
inc
dec
inc
xor
xor
out
sbb
jp
mov
pmaxub
mov
mov
enter
pop
jp
cwtl
jns
xor
jp
lea
loope
leave
iret
sub
divb
jmp
jp
jmp
mov
and
mov
pop
lods
inc
and
xchg
add
mov
mov
mov
xor
loopne
cmp
xor
popa
dec
mov
mov
lods
sbb
cmp
pop
and
int
cmp
js
mov
jg
mov
or
mov
cmovg
sub
push
rcll
xor
dec
int3
icebp
mov
out
mov
dec
mov
pusha
dec
push
cld
incl
xor
dec
neg
jge,pt
jae
lods
stc
mov
xlat
jl
roll
cwtl
orb
sbb
mov
jo
into
jecxz
pop
mov
loop
popw
fdivs
push
stos
hlt
aam
jle
mov
std
movsb
iret
insl
mov
sti
hlt
add
and
or
rorb
sbb
adc
adc
cmp
out
fdivr
and
dec
sub
loop
adc
pop
dec
mov
jecxz
push
ret
addb
cmpsl
lea
decl
pop
sbb
loope
xchg
sub
shlb
gs
jne
aaa
fdecstp
loop
adc
mov
mov
add
mov
lret
bound
pop
test
xchg
pop
sbb
jo
test
mov
arpl
fnstsw
ss
cwtl
popl
xor
out
jbe
imul
inc
repnz
out
inc
mov
push
lret
dec
jge
add
dec
jmp
addr16
daa
scas
jl
in
inc
cwtl
fwait
push
data16
mov
or
test
std
pop
xlat
add
xchg
xor
movsl
cld
fs
test
addr16
add
mov
je
jb
js
cmp
and
or
or
pushf
xor
jmp
je
out
pushf
pop
repz
cwtl
lea
shl
sti
mov
in
iret
and
adc
std
aam
jb
mov
call
push
stos
dec
push
jns
out
test
sub
push
pushf
pop
lahf
mov
test
scas
mov
int
addl
cli
ljmp
and
adc
and
xchg
pusha
jb
xor
ret
ficomps
cmp
rclb
enter
jmp
mov
out
dec
scas
out
lret
jp
and
mov
or
sub
jno
mov
int
fcomp
push
jo
add
pop
bound
pop
repnz
jo
out
push
jbe
rclb
ds
mov
outsb
cmp
rol
jg
hlt
mov
sbb
js
push
movsl
mov
xor
mov
add
mov
scas
ljmp
jnp
fsubl
mov
jne
sub
add
mov
sbb
in
or
das
dec
sub
leave
mov
mov
aam
pop
test
pop
inc
mov
sbb
fsts
enter
pop
fists
xor
sbb
hlt
lods
lods
in
test
pcmpgtb
ja
dec
inc
add
or
mov
and
mov
jmp
in
add
xchg
push
sbb
sub
mov
loop
mov
or
inc
fnstcw
leave
ja
aas
enter
idivb
repnz
arpl
xor
add
hlt
sub
cwtl
add
into
cmp
mov
xor
inc
add
xlat
mov
mov
call
int3
in
nop
xchg
loop
cmc
mov
js
clc
xchg
loope
repz
testl
fidivs
cmc
push
daa
bound
mov
movsl
fisubrs
mov
lcall
subb
push
emms
pop
shrl
repnz
fildll
xor
push
outsb
outsl
je
push
add
popf
movsb
outsl
aad
xchg
push
pushw
cmp
sub
ret
repz
and
sub
push
test
in
ja
mov
jg
stc
push
sbb
xchg
rcl
xor
gs
mov
push
cmp
aad
setle
mov
mov
fsts
mov
xor
popa
mov
jne
xchg
negb
xchg
push
xchg
dec
scas
aad
sub
inc
test
jae
aas
frstor
outsl
lds
stos
sbb
popl
or
ss
xchg
fidivl
push
cmp
pop
sub
lahf
jle
pop
ljmp
andb
dec
inc
cmc
jg
jp
push
sub
xchg
sub
jmp
cmp
mov
inc
xor
cs
add
sbb
sub
sub
adc
push
shrb
mov
enter
jp
outsb
xchg
sbb
shlb
xchg
iret
mov
pop
test
jge
js
lret
xchg
outsb
sbb
mov
std
adc
enter
pop
and
push
sub
sub
out
es
mov
mov
sub
or
inc
jno
outsb
inc
cwtl
cmpl
mov
lods
adc
outsb
dec
ret
andl
cs
xor
xchg
pushf
in
ja
push
cwtl
pop
das
sub
iret
aas
cmpsb
and
shl
sbb
in
out
mov
movsl
xor
mov
mov
lea
jecxz
push
and
inc
es
jbe
xlat
sbb
sub
and
mov
jae
gs
or
jns
push
sub
dec
subl
mov
data16
inc
jno
and
sti
dec
data16
popf
clc
mov
popa
inc
movsb
lods
test
sti
rorl
push
dec
xor
int
test
mov
adc
test
mov
xchg
add
out
aad
lret
mov
xor
jno
pusha
popa
shll
rolb
pop
jmp
jae
fstpt
xor
add
cld
mov
mov
adc
cs
ljmp
jg
dec
mov
das
pop
out
fdivrl
lods
insb
in
ret
lods
pusha
out
outsl
inc
push
mov
fwait
dec
fs
inc
out
push
xor
adc
mov
lret
mull
or
add
and
cmp
lods
cs
xor
push
js
imul
movsb
xor
mov
lea
in
in
out
ret
sub
pop
pop
jp
mov
std
aas
xchg
cwtl
repz
sarl
fdivs
cmp
jne
je
add
js
xor
ror
adc
jnp
pop
lea
mov
mov
test
stc
bound
aad
push
or
movsl
sahf
pusha
mov
add
mov
jns
repz
lret
ss
sti
jns
in
xchg
bound
je
adc
fsubr
mov
enter
push
mov
ret
pop
insl
fnstenv
into
jne
cs
xchg
lods
mov
mov
gs
or
pop
push
pop
and
mov
mov
inc
lods
das
inc
test
cmp
mov
pusha
lods
inc
jns
cmp
js
nop
or
cwtl
push
sbb
das
pop
xchg
pop
cltd
int
push
lea
push
imul
jmp
cli
mov
mov
xor
faddp
dec
cmp
push
mov
pushf
mov
mov
neg
mov
pusha
sbb
pop
pop
les
call
jnp
mov
divl
test
in
xor
cmp
lcall
or
jbe
xchg
loope
fcmovu
dec
xor
pop
push
stos
adc
aas
gs
orb
mov
jecxz
and
insl
xor
hlt
sahf
and
stc
insl
outsb
loope
outsl
push
rclb
xchg
fnsave
xchg
fwait
outsl
xchg
or
hlt
idivb
adc
in
cmpsb
mov
ja
and
cmp
enter
pushf
mov
mov
das
hlt
stos
add
mov
jae
inc
out
jb
mov
xchg
int
jmp
ss
fsub
gs
add
in
cmp
push
mov
aas
out
jo
mov
xchg
jmp
daa
call
ss
cmp
fucomip
enter
sti
test
aam
imul
pop
xchg
mov
seta
mov
loope
scas
or
jnp
add
icebp
sub
popf
inc
push
sbb
imul
push
stc
push
iret
shlb
clc
lods
or
mov
icebp
ficompl
cmp
testb
les
iret
pop
notb
test
insl
mov
scas
repz
je
add
inc
test
daa
aam
lcall
add
pop
sbb
push
repz
cmp
leave
mov
lret
mov
test
fisttpl
rorb
dec
loop
dec
call
and
jmp
in
dec
jp
xor
aas
add
or
popa
push
sub
mov
mov
push
insb
inc
outsl
xor
cmp
mov
mov
in
xlat
sbb
ret
outsl
nop
pop
insl
add
popl
jecxz
cmp
xchg
subb
hlt
stc
dec
jae
test
push
inc
in
sbb
add
xchg
sub
ss
and
mov
iret
or
notl
xor
ret
ja
add
jns
imul
jne
sub
hlt
mov
push
inc
sbb
inc
insb
push
stos
in
jb
xchg
adc
xor
aad
pop
dec
or
xor
aas
mov
loope
pop
jmp
sahf
mov
mov
bound
stc
lods
push
push
xor
enter
daa
sahf
add
dec
mov
js
lret
pusha
mov
push
aaa
gs
add
push
inc
shrb
test
and
fimull
daa
and
push
pushf
push
shll
aas
cmp
adc
dec
xchg
pop
leave
repnz
xor
hlt
inc
adc
xchg
and
lds
into
jno
push
mov
pop
cmp
xchg
push
add
sbbl
and
xchg
fwait
psrad
imul
sub
sub
sbb
adc
fcompl
movsb
mov
scas
xchg
inc
mov
arpl
mov
cmp
or
aad
pop
xchg
mov
inc
std
jp
xchg
dec
test
cmpsb
fisubs
adc
adc
xchg
faddl
pop
vpcmpgtd
rorl
dec
insl
popa
mov
adc
das
add
or
mov
imul
adc
in
shrl
fidivl
sub
push
icebp
mov
and
jge
adc
mov
push
das
push
xchg
clc
orl
mov
cli
in
sub
stc
ret
xor
icebp
cwtl
xchg
pop
pop
aad
mov
mov
and
and
fidivrl
mull
ret
mov
out
int
sbb
inc
pusha
stc
push
xor
cmp
jns
out
out
pop
push
pop
cltd
sub
and
movsl
xchg
loop
and
sub
inc
and
popf
add
or
xchg
test
fs
cmp
jb
pop
xchg
je
xor
cmp
cmp
ret
push
jp
out
add
mov
ds
cld
lock
int3
xchg
repnz
mov
data16
sbb
push
jb
test
repz
and
lock
loop
test
or
insb
and
and
add
sub
fwait
sub
inc
and
imul
sbb
xor
pop
pushf
push
sti
mov
mov
inc
cmc
arpl
call
add
insb
push
xor
push
stos
into
iret
cmp
shrb
mov
pop
gs
and
xchg
sub
pop
and
shlb
gs
call
mov
mov
in
addb
push
sub
lods
es
rclb
cli
in
add
ret
sbb
cld
and
sbb
mov
leave
aad
push
pop
into
mov
jp
movsb
cmp
sbb
enter
icebp
cmpsl
dec
mov
xchg
push
xchg
mov
cmpsl
imul
insl
pop
inc
adc
lods
sbb
and
ljmp
mov
dec
or
repz
mov
jl
adc
or
cwtl
xor
dec
pop
sub
sbb
sti
mov
lcall
jb
mov
mov
adc
in
int3
mov
mov
rorl
loope
mov
fistpl
or
insb
cmp
lret
mov
nop
sbb
rclb
aad
push
or
outsb
push
pop
stc
nop
adc
nop
xchg
xchg
inc
jmp
lock
dec
test
inc
mov
cs
fistpl
shlb
inc
mov
inc
xchg
inc
test
out
pop
dec
nop
sbb
pop
stos
adc
in
xor
mov
pop
and
cmpsl
lahf
repz
scas
jecxz
pop
mov
test
in
aad
mov
js
bound
inc
repz
movsb
subb
jns
mov
scas
jae
cmpsl
les
mov
jb
stc
clc
ficomps
cmc
nop
scas
inc
pop
dec
jne
lock
xchg
loope
ja
dec
push
scas
data16
and
stc
fwait
sub
test
ja
loopne
or
mov
fxch
aaa
divb
fldt
fldcw
in
push
ljmp
push
sbb
lahf
jno
cld
ja
out
fisubl
xlat
cmpsb
adc
das
rclb
aaa
shrl
movsl
inc
fdivrs
inc
rorb
jnp
cmp
inc
out
push
lret
ret
lret
jns
js
xor
and
dec
add
out
lods
loopne
sbb
and
les
ret
xchg
lea
out
mov
in
or
sbb
adc
test
testl
lret
orl
adc
mov
xchg
jne
dec
sbbl
les
in
clc
negl
cmp
jae
mov
dec
mov
int3
cmp
mov
jg
js
mov
add
outsl
cmp
repnz
mov
clc
lds
daa
pavgb
cmp
xchg
cmp
stc
mov
pop
outsl
and
xor
jo
xchg
mul
rep
dec
jge
leave
add
push
dec
sbb
pop
lret
popf
mov
push
mov
pop
les
dec
out
filds
test
out
test
mov
adc
lret
mov
xchg
fstpt
and
adc
jmp
pop
movsb
lods
cmp
or
push
dec
inc
shr
dec
movsl
cmp
jle
cmpsb
sbb
lock
loop
mov
mov
sub
inc
jns
mov
push
por
outsl
sbb
xorb
or
or
inc
les
sbb
mov
pop
add
pop
sub
popa
test
mov
sbb
vorps
xor
lret
lret
idiv
pop
stos
std
adc
std
pop
dec
les
ss
pop
fistps
dec
cmc
pop
mov
dec
repnz
mov
mov
dec
adc
loope
sub
in
fwait
jg
hlt
mov
repnz
mov
mov
push
jb
xor
stos
or
or
loopne
das
xor
cli
add
fidivrs
fcmovnbe
rcl
arpl
mov
inc
cmp
into
std
mov
mov
imul
ss
popa
sbb
adc
decl
adc
xchg
mov
test
add
sub
ljmp
push
dec
xor
mov
pop
nop
and
sbb
xor
mov
cmp
mov
pop
and
push
cmp
nop
jno
sbb
xchg
xor
xchg
inc
jp
ret
cmp
xor
lret
lock
jmp
mov
test
loopne
arpl
sarb
bound
xor
rol
imul
adc
jp
call
or
mov
in
out
hlt
jge
jnp
popf
push
pusha
ja
popf
js
inc
daa
loop
icebp
mov
dec
pop
mov
sub
push
pop
fstps
in
stos
orb
icebp
js
dec
mov
bound
adc
lret
mov
cmp
adc
pop
ficoml
sar
add
inc
inc
iret
arpl
ja
std
xchg
cmc
pop
lret
add
pop
mov
sub
cmp
jne
push
in
fimull
cld
jecxz
in
xchg
dec
mov
cmpsl
xchg
mov
arpl
aaa
in
lahf
sub
aas
jae
mov
rcl
inc
push
mov
lahf
bound
or
sbb
add
adc
repz
div
or
cmpsl
repnz
std
ljmp
flds
pop
les
in
pop
scas
and
cs
repnz
repnz
jge
fimuls
sub
insb
rorl
push
scas
push
adc
fstps
and
sub
clc
insl
js
xor
lea
jmp
jbe
pop
xchg
fcmovnu
sub
scas
inc
shlb
push
sbb
sbb
cmp
aas
out
adc
cmp
inc
cmp
sti
and
push
popa
insb
or
and
andl
cmpsl
lods
mov
mov
mov
dec
pusha
dec
data16
dec
lahf
sarl
fists
xor
andb
jne
sbb
xchg
adcl
pop
cmp
sti
mov
test
cmp
sti
stos
lock
test
mov
testl
sbb
test
fwait
outsb
dec
movb
xchg
or
mov
pop
in
dec
push
push
add
js
adc
mov
mov
add
jecxz
push
cmp
push
inc
jg
or
xchg
mov
push
lret
clc
fstpl
imul
rcll
lahf
int3
jle
popa
pop
packssdw
sahf
icebp
lds
ja
adc
inc
cmp
aam
add
aas
sub
out
dec
add
imul
add
filds
ja
cmp
or
adc
lret
fs
pop
pop
adc
pop
add
mov
int3
loop
repz
loope
push
jo
gs
xchg
dec
fcmovne
sti
test
daa
dec
shll
outsl
sbb
push
aam
sub
inc
je
inc
xchg
push
shrb
cmpsl
sarb
das
and
pusha
or
push
fsub
mov
pop
orl
lret
fists
lods
adc
cmp
inc
or
inc
push
jbe
mov
cmp
adc
xchg
add
movsl
ss
jo
lds
add
adc
pop
testl
push
mov
ud1
jns
adc
lret
pop
enter
daa
xchg
add
mov
add
daa
scas
add
jae
idivb
lea
in
push
outsb
push
pop
fsub
sti
jae
cs
cmp
mov
lcall
loopne
xchg
mov
xor
xchg
xlat
mov
push
gs
jne
mov
dec
cmp
pop
dec
movsl
gs
sub
push
xor
test
pushf
lahf
adc
fnsave
int
daa
pop
or
aaa
aad
fwait
xchg
adc
fisubl
adc
inc
clc
arpl
cli
jg
jno
repnz
lret
in
jl
xchg
xor
lods
cmpsb
rcrl
mov
call
xchg
inc
xchg
lods
mov
test
fadd
subl
xlat
dec
pusha
popf
mov
push
sub
dec
sub
pusha
dec
hlt
movsb
dec
sbb
testl
jmp
iret
mov
pop
dec
ss
cmp
scas
data16
sub
aas
adc
dec
sub
out
out
xchg
jp,pn
inc
mov
mov
out
lret
fisubrl
inc
pop
loope
pop
enter
std
pop
and
sbb
sub
cmc
push
inc
subl
movsl
out
aad
mov
fisttps
rorb
inc
or
mov
aad
in
xor
iret
int3
add
push
rcrb
push
dec
rolb
and
push
adc
pushl
in
push
mov
and
fildll
dec
mov
loopne
fimull
adc
add
or
sub
jbe
and
sarl
data16
andl
push
stos
js
pop
adc
cmc
jb
jb
or
push
mov
jecxz
lret
divb
cmp
inc
out
adc
popf
xchg
inc
pop
hlt
pop
mov
jmp
pushf
bound
cmpsl
xor
or
faddl
daa
jmp
cmpsb
into
cmpsl
sub
dec
inc
sar
lds
jbe
rorb
mov
or
sub
repz
lds
and
pop
xor
xor
sbb
sahf
sub
inc
add
les
push
inc
add
pop
into
mov
add
adc
and
lea
cmp
xor
imull
mov
and
out
lcall
pop
adc
jmp
xchg
icebp
xor
aam
cli
out
add
jb
jl
orb
scas
jg
aad
xchg
lods
inc
mov
and
adc
decb
sub
pushf
jbe
imul
in
push
xchg
or
scas
jno
int3
mov
jae
dec
mov
inc
clc
jge
dec
or
lret
nop
data16
fldl
cmpsb
pop
dec
sahf
cmp
out
and
push
mov
cmc
cs
sub
out
sub
mov
push
xchg
inc
loopne
mov
sbb
cmp
cmc
insb
pop
inc
sub
pop
sbb
mov
push
fwait
jns
add
fwait
into
stos
popa
nop
inc
add
mov
js
ds
rcrl
ja
rcrl
loop
insb
sahf
dec
fsts
mov
dec
movsb
mov
mov
pusha
loop
into
inc
cmpsb
mov
out
cmp
add
jg
rclb
xor
inc
xor
push
insl
loop
sbb
ret
mov
pop
add
test
test
and
popa
inc
inc
outsb
movsb
jns
popl
mov
jge
dec
movsl
hlt
test
int
mov
sbb
jecxz
mov
sbb
outsl
stc
pop
mov
and
mov
ds
mov
pushf
jbe
or
out
push
outsb
inc
inc
movsb
mov
mov
aaa
cltd
sar
dec
fcmovne
xor
push
sub
mov
pop
inc
scas
inc
fs
aad
mov
jnp
xchg
xchg
shrl
mov
out
in
xchg
icebp
jge
scas
mov
ja
mov
mov
mov
jns
cmp
rclb
inc
jb
xor
imul
add
push
or
jmp
add
leave
ja
jp
je
mov
cmp
pop
loop
and
xchg
insb
mov
push
repnz
aad
int
mov
pusha
sbb
push
loop
pop
xlat
cmp
inc
adc
xlat
adc
shll
imul
xor
xchg
sbb
imul
jb
cmp
cmc
add
mov
out
cs
das
pushf
push
stos
in
insl
test
xor
cs
rorl
out
rcrb
sbb
in
sub
adc
andb
sub
and
inc
outsl
sub
mov
inc
add
pop
pop
dec
xchg
and
lock
addr16
fst
cmp
stc
imul
dec
cmpsl
dec
aam
movsl
int
movsl
xor
xor
aaa
push
add
sub
fadd
inc
les
fs
call
xchg
xor
jge
adc
xchg
mov
loop
cmp
jecxz
add
lea
mov
sahf
xchg
call
das
push
fldcw
femms
jmp
mov
movsb
cmp
in
fprem
jno
mov
fstl
iret
jnp
cmp
mov
nop
xor
xor
out
addl
shll
ss
xchg
mov
mov
in
jb
fnsave
push
js
mov
jnp
and
xchg
scas
and
hlt
dec
lods
add
cltd
add
dec
dec
adc
adc
mov
jae
lahf
push
add
xlat
js
movsl
push
push
push
fsub
leave
decb
rolb
push
ror
ret
fsubrs
add
sbb
lret
test
out
cmp
xchg
fsubr
inc
loope
or
xor
inc
int
sti
mov
addr16
dec
aad
jne
setbe
inc
xchg
xchg
cltd
jb,pt
std
sahf
cmpsb
pop
add
ds
stos
or
inc
mov
lret
cli
pop
adc
mov
sahf
adc
xor
jge
out
stos
out
mov
loop
aad
add
push
subb
movsb
aaa
cld
and
dec
ret
sbb
jae
xchg
add
rorb
xchg
adc
cs
mov
fimuls
in
fwait
lods
sub
add
scas
int3
sbb
icebp
adc
xchg
dec
scas
xor
fcmovne
fs
pop
jp
mov
loope
xor
mov
cmp
lods
stc
mov
mov
jecxz
push
push
leave
fwait
cmpsl
orb
fnstenv
test
sbb
movsl
fildll
repnz
mov
dec
jl
out
mov
dec
ret
pusha
rcll
push
repnz
push
jne
int
ljmp
in
cmp
inc
adc
faddp
std
add
es
aad
xor
add
aam
ret
int
xchg
sbb
loopne
add
sbb
mov
mov
int3
ds
dec
cli
in
loop
push
sbb
or
lds
push
pop
mov
mov
inc
or
test
push
dec
stos
sub
mov
dec
and
cwtl
xchg
aam
sbb
js
xchg
adc
cmp
pop
pop
adc
inc
stc
fsin
push
jg
in
loope
lret
loope
mov
aas
mov
xchg
mov
cmp
pop
pop
lcall
imul
jecxz
repnz
cld
enter
push
add
push
ljmp
jg
inc
aas
xorl
test
gs
fcoml
mov
sub
mov
out
lods
inc
movsb
lock
mov
movsl
cmp
push
insb
xchg
les
inc
cld
mov
cmp
pop
push
mov
ret
push
pop
stos
aas
sub
mov
fwait
jo
shl
sbb
mov
mov
add
mov
inc
mov
cmpsb
stos
jecxz
inc
xor
sbb
stos
cmp
cmpsl
gs
jno
ljmp
loopne
dec
add
fistps
test
pop
push
dec
jae
mov
ret
fmul
add
cmp
cmp
mov
rolb
push
jns
add
and
in
xchg
add
andb
aaa
sub
cltd
mov
outsb
jp
dec
pop
out
cmp
push
dec
mov
xchg
push
mov
lret
xorb
pop
xchg
scas
adc
push
clc
stos
adc
icebp
cmp
mov
idivl
mov
stos
out
sub
out
mov
cli
sbb
xchg
test
sub
mov
xor
inc
mov
sarl
sbb
mov
sub
loopne
or
imul
insl
repz
mov
into
dec
mov
insb
rolb
decb
out
push
inc
test
jmp
jae
push
roll
xor
push
fistps
movsb
je
cmpsl
or
sti
adcb
cmpsb
xchg
sub
mulb
mov
mov
ja
sub
test
jno
ljmp
mov
and
xchg
add
mov
popf
xchg
push
jge
pop
je
jecxz
test
mov
fstps
repnz
dec
mov
nop
inc
xor
sub
outsb
stos
jle
adc
adc
sub
adc
outsl
scas
bsr
pusha
add
add
cmpsb
loop
jmp
pop
in
dec
sti
cmp
insb
dec
lods
loop
jmp
and
sbb
loopne
stos
xor
cli
mov
mov
sub
mov
adc
xchg
or
fcoms
testl
jle
add
imul
testb
cmp
adc
notl
push
pop
adc
enter
cltd
iret
jg
pop
add
scas
stos
mov
sbb
mov
push
push
bound
insl
out
mov
lods
sbb
jp
pop
dec
adc
cmp
jl
mov
jb
push
movsl
faddl
loope
scas
pop
test
pop
mov
nop
xchg
inc
in
mov
xchg
pop
insb
or
cmpsl
das
subb
jb
std
rolb
test
fdivrl
popa
lret
pop
cmp
ds
cmp
je
xorb
scas
std
shl
mov
mov
in
movsb
jae
jns
ret
and
cmp
jmp
sbb
outsb
sub
mov
add
addr16
pop
jp
hlt
dec
push
xchg
jae
adc
adc
or
stos
jns
pusha
dec
inc
cmp
xor
out
arpl
insl
sub
xor
lret
fcmovbe
xlat
sub
cwtl
in
test
add
rolb
dec
fcoml
mov
iret
les
stc
idivl
aas
aas
mov
sahf
jns
je
jp
mov
scas
sub
in
mov
lea
fcmove
arpl
jo
loope
scas
pop
add
sbb
dec
add
repz
movsb
add
sbb
or
into
adc
mov
dec
xchg
cmp
call
mov
fcmovnbe
outsb
jnp
jg
outsb
lods
fistpl
jl
out
leave
test
stc
sarb
fcomps
std
cmp
jnp
mov
scas
pop
and
adc
aam
shlb
in
and
insb
cs
cwtl
pop
cmp
mov
dec
lcall
pop
push
rcr
pop
xorb
cwtl
mov
or
xchg
xchg
sbbl
push
je
adc
mov
dec
mov
aad
sbb
adc
push
cmp
push
fs
cltd
cmp
xor
jl
outsl
ja
and
inc
imull
or
push
or
dec
jg
pop
mov
cmp
loop
push
das
or
stos
fwait
pop
arpl
mov
sub
mov
pop
scas
push
in
fs
sarb
and
dec
jnp
hlt
xor
sbb
sub
xor
xor
nop
js
inc
push
pop
dec
jae
adc
cwtl
xchg
mov
outsl
mulb
int
pusha
addb
scas
xor
insl
pop
sub
outsl
mov
aas
outsb
dec
and
cmp
lods
out
outsl
loop
movsl
lock
add
pop
adc
test
cmp
mov
pop
mov
outsb
ret
nopl
hlt
stc
xchg
sbb
and
and
mov
and
lea
cltd
xchg
push
xchg
orb
xchg
repz
popa
lods
push
xorb
sahf
xlat
outsb
cmp
jbe
push
addr16
jne
fldenv
clc
outsb
inc
mov
or
test
ret
rolb
xor
in
stos
imul
cmc
lods
push
inc
pop
mov
rclb
push
add
mov
jno
fdivl
inc
cld
xchg
ret
andb
cld
dec
sbb
or
in
xlat
ds
adc
sbb
sbb
iret
hlt
repnz
mov
xlat
cmp
cltd
mov
sbb
stos
mov
jecxz
adcl
icebp
out
jbe
aad
jecxz
pop
outsl
insl
rorl
rol
fildll
mov
push
jne
jo
es
xor
cltd
divl
pop
stos
lods
sbb
repz
js
adc
dec
adc
test
lret
popa
fcomps
sbb
iret
and
dec
ds
ficoml
repnz
cmpsl
adc
push
fdivl
movb
pop
push
lock
dec
scas
out
iret
dec
mov
xchg
shll
push
jns
mov
mov
mov
mov
bound
or
mov
test
cmp
into
jns
cs
cmpsl
movsb
cmp
fdivs
repnz
arpl
mov
ret
add
lods
push
cmpsb
sbb
lock
repz
inc
std
or
push
leave
sub
std
iret
dec
fdivrs
mov
faddl
dec
xchg
mov
mov
lahf
fst
cmp
mov
mov
shll
arpl
and
js
xor
cmp
movsb
dec
jns
inc
call
popf
xchg
and
aam
imulb
mov
mov
lock
int
adc
dec
push
js
jae
cmpsl
pop
loop
dec
loop
lds
dec
lds
lret
rcrl
or
fidivl
clc
jbe
shrb
xchg
pop
test
les
push
and
leave
fdivrs
lret
hlt
or
mov
sub
jp
jge
pushf
dec
add
or
inc
nop
adc
repz
cltd
leave
loopne
mov
push
int
lds
push
adc
test
fldl
jp
mov
dec
mov
inc
in
push
sbb
push
dec
cmc
es
fld
or
xchg
popf
mov
dec
pop
xor
push
dec
ret
mov
mov
jecxz
pop
jp
sub
lret
xchg
and
jae
or
or
dec
push
xor
or
and
bound
leave
fisubs
and
sub
pop
mov
fs
repz
mov
ficoml
sub
mov
ja
sbb
stc
jecxz
cmp
cs
and
push
test
add
fisttps
xor
xchg
test
add
and
aam
rolb
cwtl
out
icebp
dec
test
loope
sarb
call
std
and
fidivrs
inc
mov
mov
pop
jecxz
lret
aaa
lcall
xor
test
push
add
fisubl
mov
inc
jl
pushf
test
mov
sbb
test
sbb
sbb
sbb
mov
mov
sub
sbb
sub
mov
fcoml
xchg
loope
in
pop
adc
les
xchg
dec
adc
sbb
ret
ja
push
mov
cwtl
scas
mov
xor
int3
mov
dec
les
cmp
xchg
lret
idivl
negl
rcrl
call
push
sub
xor
fdivrs
icebp
inc
mov
int
dec
mov
push
orb
xor
popf
ds
xchg
in
pop
movsb
xor
push
add
mov
mov
pop
rcrl
repz
mov
fs
inc
xor
stos
addb
cmp
pop
jno
xor
loopne
mov
cli
adc
mov
or
xchg
and
inc
ds
aas
data16
mov
sarl
andl
repz
scas
in
adc
pop
push
dec
mov
fs
add
sbb
sub
je
repz
cwtl
scas
xchg
repnz
jge
xor
pop
in
orl
in
movsl
addl
push
xlat
mov
jge
jp
lods
nop
sub
adc
fdivl
push
add
sbb
lcall
pop
push
mov
pmuludq
pop
fucom
sahf
sahf
test
mov
pushf
cmpsb
subb
mov
into
lret
mov
cld
adc
add
jno
in
jp
inc
mov
mov
push
fs
mov
aam
add
mov
xchg
cmp
mov
mov
dec
push
mov
insb
mov
adc
sbb
in
sub
sub
cmp
jnp
inc
out
push
push
inc
dec
int
jp
mov
cmp
int
ds
outsl
jb
xor
pusha
pop
lahf
push
incl
sbb
insb
sahf
shll
ja
rorl
movsl
fwait
mov
mov
jp
push
andb
call
jo
jmp
mov
je
aam
imul
clc
sbb
cmp
pop
outsb
jg
movsl
int3
lods
iret
xorl
sbb
jl
xchg
xchg
push
add
and
cmp
push
cwtl
jg
push
and
negl
cmc
lock
scas
adc
lret
jns
test
into
cmc
pop
mov
xor
imul
mov
das
push
add
ret
roll
pop
dec
lds
sub
movsl
std
xchg
pop
jb
push
das
arpl
xor
into
ret
icebp
xor
sub
gs
outsb
cmp
daa
sub
test
pop
sub
sbb
sbbl
inc
jmp
and
and
sub
nop
push
adc
scas
ds
loopne
std
xchg
iret
sub
arpl
mov
or
adc
jno
jmp
dec
mov
push
inc
arpl
and
sub
push
shlb
addb
mov
sub
add
cmp
lods
dec
fcomps
sbbl
inc
fsubl
neg
arpl
sbb
cmp
or
in
mov
pop
dec
xor
xor
pushf
and
jl
xchg
and
dec
addl
imul
pop
pop
mov
cwtl
sub
lret
movsb
jns
add
sub
outsl
fsts
xchg
pop
dec
call
or
test
xchg
inc
pop
fisubrl
mov
inc
pop
mov
repnz
in
mov
lods
mov
je
psrld
lea
ror
cld
in
sub
mov
pop
icebp
outsb
leave
sbbb
imul
push
cmp
int
lods
movsb
lcall
xor
cltd
add
call
popf
stos
cmp
xchg
leave
mov
sbb
xor
stc
inc
into
inc
fists
test
adc
pop
adc
pusha
cmpsb
xor
out
push
scas
lcall
xchg
cmc
sarl
xchg
std
sahf
loop
outsl
jp
clc
jg
inc
nop
testl
js
push
clc
mov
faddl
xor
pop
sahf
jno
in
dec
outsb
test
lods
pop
push
test
cmc
or
test
leave
mov
adc
pop
rcl
add
xchg
dec
scas
mov
sbb
xchg
adc
mov
mov
insl
xchg
aas
jecxz
cmp
repz
dec
lea
arpl
ficoml
and
nop
inc
ss
inc
sub
jbe
iret
xor
inc
and
mov
je
pushf
mov
inc
rorl
push
xchg
xchg
jnp
jo
data16
sub
mov
mov
js
sahf
xchg
in
aaa
mov
rcrl
adc
cwtl
ficompl
test
fwait
bound
xor
xor
pusha
frstor
je
xchg
mov
mov
push
fdivrl
mov
clc
fcmovnu
add
loope
mov
mov
int
add
jnp
mov
push
movsb
and
imul
scas
xchg
or
mov
sub
aam
push
test
call
cmovnp
movsb
jmp
call
sti
xor
pusha
add
cli
test
mov
and
xchg
test
xor
out
lods
pop
lret
mov
push
xor
sbb
addr16
fcmovnb
sub
pop
loope
sgdtl
jne
fdivrl
and
mov
push
pop
popf
in
inc
shll
out
jp
gs
inc
rcrl
jno
movsw
add
push
pusha
mov
or
pop
fsubs
jg
nop
adc
xchg
loope
inc
insb
cmp
add
dec
jns
into
dec
xchg
inc
cltd
fucomp
mov
push
aaa
xor
sub
xor
mov
in
popf
xor
lods
repnz
inc
mulb
es
shlb
out
stos
divb
pop
sbb
pop
and
addr16
fisubs
cmc
pop
mov
das
and
sub
pop
or
mov
dec
or
adc
mov
pop
xchg
mov
add
lods
mov
je
dec
aam
idivb
jbe
mov
mov
push
cmp
adc
xchg
out
mov
aad
xor
or
inc
mov
jl
pop
movl
leave
loop
stos
cmp
mov
pop
pop
addps
cs
int3
arpl
adc
inc
and
pop
mov
mov
aad
imul
ret
and
ss
mov
dec
push
jge
push
adc
jne
sti
sbb
fisttps
inc
outsl
mov
and
mov
and
jb
inc
out
mov
ds
pop
cwtl
in
mov
call
cmp
jae
jne
negl
popf
testl
xor
idivb
adc
out
addr16
aad
xor
test
xchg
inc
mov
cwtl
lea
addb
push
jb
lret
fnstcw
adc
xchg
and
enter
cmp
mov
imul
faddl
pop
lea
push
or
movsb
bound
xor
and
add
fcomps
enter
ret
mov
dec
scas
fisubl
inc
cmp
int3
jl
test
movaps
cmp
dec
test
pop
test
jl
ret
push
test
mov
aam
int3
jge
pop
lahf
clc
adc
mov
repnz
sti
ret
xor
mov
add
cmpsl
fldcw
loopne
adc
ja
mov
push
jnp
imul
testb
add
dec
push
fsubr
les
shl
fs
call
mov
dec
ljmp
cmp
cmc
lret
arpl
iret
cmp
shrl
push
movsb
icebp
dec
and
inc
jnp
sbb
stos
loopne
aad
jne
mov
std
xor
sbb
lock
fimuls
mov
mov
xchg
push
xchg
mov
xchg
sub
sub
mov
dec
mov
imulb
outsl
sub
out
cld
adc
sub
xor
sbb
adc
mov
sub
push
jle
xchg
push
insb
or
fwait
or
sbb
or
mov
aas
sbb
or
add
and
mov
popa
push
movsl
rcll
inc
into
dec
lcall
mov
scas
gs
je
imul
orl
pop
gs
nop
pop
sub
ror
dec
xor
imul
fs
jge
cmpsb
mov
jbe
in
rcrb
xchg
loope
lcall
scas
sahf
sub
pop
loopne
inc
xlat
aaa
sub
ss
in
xchg
jnp
mov
cltd
cmpsb
testl
pop
or
or
lahf
jecxz
push
loop
or
mov
in
or
xchg
int3
jp
jb
pop
ss
aaa
cmp
mov
lcall
mov
dec
push
popa
andl
cli
mov
sarb
sub
push
add
mov
xor
or
push
adc
or
aam
pop
jmp
mov
jge
std
icebp
aam
jmp
leave
scas
lods
fisubrs
cltd
lods
sahf
xor
mov
lock
mov
push
inc
rolb
clc
shr
mov
aam
push
scas
cli
add
std
rorl
mov
xchg
enter
sbb
ret
je
xchg
movsl
aad
lds
mov
pop
test
scas
shll
sbb
cmovb
in
mov
cmpsb
dec
pop
add
pop
arpl
pop
movsl
nop
test
add
nop
dec
xchg
xor
push
add
cmp
pop
call
movsl
xor
push
addb
das
outsb
out
jns
inc
sbb
int
cltd
aad
add
or
cmp
dec
mov
jnp
cwtl
or
aad
xor
je
ret
inc
cs
outsb
cmc
repz
jnp
sub
pop
lret
mov
lcall
add
push
mov
dec
dec
repz
hlt
std
out
mov
dec
and
and
add
lods
adc
data16
mov
shll
in
mov
js
movsl
xchg
sbb
into
arpl
push
fiadds
jno
sub
mov
and
scas
push
cmp
loopne
in
push
fdivl
fidivrl
push
jle
dec
aad
lahf
mov
mov
call
and
stc
add
add
cwtl
arpl
jbe
adc
jecxz
ret
lods
adc
shlb
sti
shl
sahf
stos
scas
out
xlat
stc
inc
bound
fcmovnbe
int
sbb
jae
mov
js
stos
pop
jg
in
insb
shrb
cmp
mov
and
sub
int
push
outsl
divb
lret
xor
out
mov
mov
int3
xor
and
das
mov
cmp
stos
imul
pop
mov
xchg
negb
aas
scas
push
movsb
mov
sbb
dec
lea
dec
sbb
cmpsl
push
lcall
stos
fs
outsl
sbbl
or
jb
push
data16
mov
rclb
movsb
inc
mov
ljmp
pop
inc
mulb
jg
sbb
addr16
daa
sub
leave
mov
sarb
or
cld
mov
je
sub
dec
adc
popf
mov
inc
jge
and
pop
xchg
mov
add
pop
mov
das
test
pop
jo
je
arpl
cmp
icebp
sbb
xorb
adc
mov
mov
std
leave
dec
push
mov
xchg
add
fsubrl
rcrb
movsl
enter
shrl
lea
jg
arpl
sub
test
jb
aaa
pop
cmp
inc
insb
xchg
repnz
sub
andb
cmp
push
fstl
dec
push
dec
adc
inc
rcr
xor
sbb
dec
mov
loope
and
add
fmulp
push
repnz
out
test
sub
mov
sub
out
lcall
pop
and
jns
xchg
in
or
cmpsl
add
sbb
or
mov
pop
lock
imul
lret
repz
sbb
lea
push
cmp
hlt
mov
cmc
jge,pt
cmpsb
dec
xor
sub
xor
xor
mov
sbb
rol
imul
mov
scas
add
inc
push
lea
hlt
gs
cli
pop
mov
cmpsb
push
jne
into
fldenv
dec
mov
mov
inc
xor
mov
dec
inc
or
inc
lods
dec
sub
imul
sbb
mov
and
in
push
and
mov
mov
insb
clc
je
fs
dec
or
insl
or
push
addr16
sbb
xor
in
add
in
cmp
and
popl
push
dec
xchg
or
mov
pushf
std
cmp
notb
jp
xor
xchg
lock
stc
xor
cld
mov
ficomps
insb
int
cmp
push
sbb
in
movsb
imulb
sbb
cmpsb
nop
lods
dec
xchg
pop
iret
mov
jns
sub
popf
adc
pushf
jge
push
pop
jecxz
sbb
bnd
lods
cmc
sahf
mov
add
lret
cmp
sbb
je
movsb
std
ret
cmp
xchg
adc
je
loopne
push
lods
fistps
pop
lds
ljmp
dec
lret
ljmp
jg
adc
sbb
das
dec
stos
sbb
sub
inc
push
roll
pop
fmul
cmp
mov
mov
cmp
cmp
hlt
call
inc
scas
inc
pop
fwait
sbb
cmp
cmpsb
dec
push
push
nop
stc
loop
jae
sarl
pop
mov
ljmp
in
jle
push
jg
ficoms
dec
push
jl
mov
in
jbe
xchg
mov
loopne
sahf
jmp
fstl
stc
sbb
adc
or
sahf
jle
scas
jle
and
push
sub
cmc
mov
test
fadds
jne
jns
pop
nop
jg
shll
lods
cwtl
dec
mov
mov
loop
cmp
shl
push
incl
xor
cmp
test
lds
popa
test
bound
in
adc
ds
in
jb
mov
push
push
cmpsb
add
or
xchg
sbb
lds
out
rcrl
jmp
out
lcall
mov
idivb
ja
fadds
mov
jo
jle
mov
add
sub
sahf
inc
fisttpl
xchg
sti
pop
icebp
stos
adc
dec
adc
xlat
lock
cmp
xchg
push
sub
xchg
pop
add
fsubrl
pushf
add
sub
inc
test
aad
mov
pop
lock
xchg
pop
adc
and
repz
in
dec
mov
in
das
adc
fmull
mov
daa
aaa
in
pop
or
call
movsl
jg
add
push
bnd
cmp
xor
lea
mov
test
into
fdivrs
jae
mov
xor
rorb
mov
xchg
add
shl
inc
test
push
fucomp
sub
insl
xchg
fs
push
rclb
cltd
mov
add
ja
imul
punpckldq
loope
dec
out
mov
gs
int
pop
ss
push
and
push
fnsave
inc
jb
adc
jns
cmp
sub
inc
out
pcmpgtd
push
push
lahf
loop
std
mov
push
loopne
xchg
fildl
fdivrs
jns
or
dec
lds
inc
movsl
test
push
dec
fiaddl
xchg
jmp
lahf
int3
dec
shrb
mov
test
inc
sti
lea
cmp
dec
and
ret
sbb
je
mov
dec
into
cmp
lods
sub
push
sarb
mov
aas
imull
fcmovu
ds
xor
jl
sub
loope
testb
rcll
sbb
mull
mov
leave
mov
test
adc
mov
cmc
lock
aas
imul
outsl
cli
lock
xor
jl
jl
xchg
xchg
mov
jnp
mov
aad
cli
lcall
mov
hlt
add
sub
je
jecxz
push
enter
test
test
lret
in
rclb
and
pop
sbb
movsb
cmp
push
fiaddl
and
popf
sbb
adc
dec
mov
xor
push
out
iret
inc
aam
xchg
addr16
xlat
aad
inc
call
jne
pop
push
mov
mov
sub
mov
push
sub
sub
mov
pop
mov
pop
std
fists
inc
sbb
movl
mov
imul
loopne
mov
or
mov
inc
sub
neg
lds
mov
ss
sub
pop
sbb
dec
adc
jb
data16
cld
adc
sahf
popa
pushl
xor
das
out
lds
mov
mov
inc
pop
leave
mov
out
clc
shrl
nop
clc
jb
shll
push
adc
sbb
jp
cli
xlat
pop
arpl
cli
mov
push
xlat
lods
jne
push
mov
adcb
xchg
aaa
jne
fmul
ljmp
dec
setns
push
lcall
lret
add
jae
loopne
fs
mov
mov
aaa
xchg
icebp
jbe
repnz
lods
and
test
fldenv
sbb
pop
or
add
daa
enter
pop
and
mov
sbb
imul
xlat
pop
ss
mov
call
mov
outsl
sub
xchg
call
mov
shrl
loop
fbld
xor
fs
dec
dec
fidivs
push
add
dec
fisttpl
push
mov
mov
xchg
dec
out
subl
data16
mov
out
shll
stos
in
scas
sbb
jmp
jle
outsb
dec
fsubp
ret
dec
dec
mov
in
sbb
ja
adc
test
negl
jl
cmp
or
movsl
js
pop
sub
cmp
mov
fsts
fsubl
push
mov
in
out
cmp
inc
scas
repz
scas
mov
fsubp
xchg
in
movsl
mov
xor
ss
mov
int3
in
or
dec
je
imul
das
outsb
arpl
pop
in
push
push
int3
jle
lods
loopne
aas
loope
sub
sub
cwtl
ror
jno
cmp
fiaddl
cwtl
das
popf
out
lea
jb
imul
lahf
hlt
dec
fcmovbe
pop
scas
fnsave
push
loop
jnp
shlb
aas
rcr
mov
cmp
xor
fldcw
test
popf
fwait
test
inc
ficomps
orb
xchg
in
lcall
xlat
pop
popa
cmp
jne
test
outsl
lahf
ds
das
test
lds
aas
jbe
inc
and
ficomps
xor
rclb
jbe
imull
fisubl
fistpl
and
push
dec
dec
cwtl
inc
xor
stos
enter
mov
pop
and
or
clc
repz
clc
ja
add
or
push
daa
fmuls
scas
cs
test
cltd
repz
mov
pop
mov
jle
inc
movsb
inc
fists
fsts
sub
jb
shll
xlat
inc
ljmp
jle
add
add
pop
sarl
pop
loop
cmpsb
lock
fwait
inc
cwtl
repz
sub
fsub
sti
mov
push
cmpsl
in
jo
aam
add
loope
fwait
pushf
in
sub
pop
mov
out
enter
xor
jae
xchg
mov
jg
aad
jnp
mov
mov
lret
jmp
cltd
leave
loop
std
negb
inc
test
cmc
insl
outsl
jp
mov
ret
jns
test
rorb
jns
sbb
imul
pusha
jne
pop
sbb
pushf
lods
jmp
fbstp
mov
inc
mov
jmp
mov
scas
pop
fists
push
cld
jg
ljmp
shl
mov
pop
call
iret
inc
xchg
ljmp
push
in
adc
sub
scas
leave
jecxz
jmp
and
daa
xchg
xor
mov
sahf
scas
lock
orl
jecxz
pop
push
xlat
lea
dec
sbb
inc
lret
sub
xchg
enter
adc
and
andnps
negb
sahf
push
movsb
mov
inc
in
out
test
roll
sti
adc
sti
dec
mov
lock
imul
dec
call
test
mov
test
and
int
cwtl
out
int3
imul
mov
imul
in
jbe
push
push
sbb
ficoml
lock
jo
sub
push
insb
push
js
aam
loopne
sti
cmovnp
es
stos
and
cli
push
pop
add
sub
movsl
add
xchg
jbe
insb
aas
and
in
sub
icebp
iret
or
mov
lea
jae
mov
cmp
ds
je
jo
addr16
adc
subl
mov
cmpsb
aam
repz
jae
stos
push
add
cmp
push
push
mov
and
push
bswap
in
mull
lea
mov
addps
xlat
clc
and
xchg
mov
jns
xor
inc
adc
jmp
mov
cld
sbb
add
int3
daa
sbb
je
add
ret
jg
std
popa
sub
ds
pop
jecxz
mov
pop
sarb
cmpsb
sub
pop
dec
adc
add
mov
ficomps
fistl
out
lds
popf
sub
adc
in
lret
subb
ja
xchg
ljmp
pop
into
mov
adc
push
pop
pop
std
mov
pop
loopne
loop
push
push
sbb
pop
inc
sar
cwtl
jl
xchg
push
push
cmpsl
scas
es
jns
cmp
sub
insb
cmpsb
cmp
je
decl
imul
pop
test
xor
out
int
int
jmp
and
adc
mov
test
sahf
xlat
sbb
push
fdivs
or
fcmove
jnp
jp
cld
repz
sub
jle
sti
les
andb
loope
jle
push
push
pusha
xor
jnp
lea
aaa
fsubrl
or
jle
adc
into
stc
fistpll
pop
shl
icebp
mov
clc
or
shll
test
pop
dec
sub
sbb
dec
push
mov
addr16
sbb
xor
sbb
and
sahf
test
movsl
and
lret
in
cli
out
sub
das
ret
fwait
add
addl
jae
insb
and
jo
arpl
mov
mov
test
inc
dec
sub
addb
adc
sbb
mov
movsb
out
xchg
mov
xorl
aad
mov
or
cmp
xchg
repz
jecxz
add
mov
and
imul
js
mov
movsl
int3
stc
icebp
sti
out
mov
mov
jnp
gs
out
inc
inc
or
mov
repnz
mov
hlt
mov
loope
nop
fistpll
pop
cld
or
fdivrs
mov
test
mov
jle
ret
ja
shrl
movsb
bound
inc
jno
aas
les
jge
pop
push
pop
sbb
testb
inc
pusha
mov
popf
mov
lcall
xchg
js
mov
aad
sti
aaa
jp
jnp
in
jl
lret
cmp
fwait
pop
jno
movsb
mov
aas
dec
out
fdivr
std
int3
cmp
fnsave
add
inc
xor
cmp
cltd
xor
adc
jno
bound
sbb
push
scas
cmp
jne
nop
or
mov
in
and
jns
cmp
lods
cmp
mov
dec
repz
js
xor
push
lds
xlat
mov
setnp
imul
popa
push
leave
or
stos
inc
shrl
sbb
movsl
jl
dec
aam
xchg
adc
shrl
mov
mov
pop
push
pop
dec
sub
mov
loop
in
loope
idivl
push
add
adc
mov
ret
out
add
mov
cwtl
ret
and
jle
xor
mov
jbe
call
sub
xchg
mov
push
jle
mov
mov
jae
mov
push
inc
jns
fldenv
mov
cmpsb
fldcw
or
sub
lret
clc
xor
xchg
push
and
nop
xor
cmp
cs
add
jae
sbb
inc
mov
roll
pop
jmp
int3
xor
sbb
fisttpl
into
pushf
jb
sar
in
and
fs
fsts
fidivrs
out
cmc
addr16
jg
xor
jmp
inc
inc
aas
imul
in
jb
jo
pop
cmp
call
lsl
stos
mov
pusha
xor
mov
mov
xchg
fildl
cmp
push
fnstcw
push
add
test
fmuls
xor
ljmp
lahf
cmp
mov
xchg
pop
xchg
and
pop
add
jle
sub
nop
cmp
ret
int
cmp
mov
int
les
int
xor
sbb
inc
testl
jno
dec
jb
or
dec
jecxz
mov
decl
inc
inc
or
sbb
or
pop
sub
mov
push
push
xor
sbbl
fiadds
popl
idivl
push
fstpl
sub
cmpsl
popa
mov
pushf
popa
std
pop
lret
shll
lds
outsl
lretw
cltd
add
arpl
ljmp
jo
sub
mov
cmp
jg
and
lret
popa
mov
stos
dec
mov
cmp
in
mov
gs
imul
mov
scas
int
xchg
scas
jl
shlb
ljmp
or
enter
push
adc
xchg
repnz
or
fwait
mov
cmp
dec
repnz
push
ret
test
ret
fwait
call
jle
test
mov
sub
outsb
xchg
idiv
sub
jnp
push
negb
push
cwtl
mov
jg
out
sbb
cmpsl
lcall
inc
push
rcll
jbe
sbb
sbb
movsb
lcall
out
xor
cwtl
inc
inc
push
out
jmp
mov
out
fcoms
sti
jmp
icebp
andb
pop
sbb
test
cld
cmp
xlat
dec
and
cmp
addr16
jp
jl
fbld
pop
ret
add
cwtl
pop
inc
sub
sub
pop
repz
xor
pop
pop
movsl
addr16
out
jle
add
xor
fcompl
xor
dec
push
xchg
idivb
cmpsb
dec
add
das
add
pop
push
shrb
clc
and
call
add
out
push
jnp
pop
nop
dec
mov
jo
sub
lods
int3
xchg
call
in
adc
inc
in
adc
jecxz
jecxz
lock
enter
jb
xor
aad
cs
jb
adcb
adc
or
mov
pop
mov
in
xor
repz
lcall
adc
xor
in
lea
push
stos
gs
sti
iret
xorl
push
jle
aas
sub
scas
gs
gs
into
stos
pop
icebp
lods
inc
iret
imul
dec
mov
ja
cmpb
pop
shll
xor
mov
fcmovb
rolb
dec
mov
pushf
loope
jp
loop
cmc
fs
adc
sbb
mov
push
iret
imul
les
movsb
sub
gs
stc
mov
ret
loop
int3
inc
mov
sbb
icebp
gs
sbb
out
arpl
inc
mov
adc
push
aas
or
cmpsb
jmp
or
rcrb
add
sarb
dec
aaa
dec
into
fsubrl
sbb
mov
loopne
dec
mov
mov
fbstp
push
int
out
imul
mov
xchg
inc
or
lcall
xor
mov
xchg
add
sub
xchg
jmp
jae
xchg
sub
pop
or
mov
add
cld
dec
inc
imul
aaa
out
pop
inc
lahf
xchg
xor
test
in
out
dec
les
adc
fcomps
cmp
cmpsb
xorb
lods
sbb
mov
sub
mov
aas
dec
insb
mov
sbb
ret
outsl
aam
mov
push
aaa
adc
mov
fistpll
push
lock
fisttpll
arpl
mov
mov
or
cmp
call
pushf
push
xchg
mov
sub
mov
int3
sub
jg
fimuls
mov
scas
imul
das
pop
or
pop
mov
mov
popa
sti
push
mov
pop
mov
mov
scas
int
inc
imul
cmp
nop
aam
mov
pop
mov
test
andl
shl
and
jmp
mov
mov
pop
loopne
mov
xchg
push
pop
sub
and
fcmovnbe
jecxz
je
jmp
sub
jecxz
stos
hlt
mov
mov
inc
test
scas
jns
push
gs
or
repz
clc
popf
jns
jmp
mov
popa
or
subl
jl
mov
jl
insl
scas
lcall
test
repz
sti
mov
jecxz
fsubl
stos
fcoml
clc
mul
mov
repz
popl
mov
fbstp
dec
out
pop
cmp
sub
or
pop
mov
sti
xchg
les
jnp
test
adc
stos
pop
lock
nop
xor
aam
xor
repz
jp
mov
dec
sbb
and
mov
mov
xchg
out
push
stc
pop
xchg
jge
mov
cmp
and
adc
cmpsb
push
test
pop
jae
pop
inc
in
in
cmp
cwtl
mull
aam
insb
movsb
cmp
xchg
leave
jl
push
imul
enter
test
sub
rorb
imul
movsl
fdivrl
sub
fbld
dec
es
dec
rcr
fbld
mov
out
pop
xchg
out
mov
mov
into
rolb
xchg
xor
sub
cvtps2pd
out
push
jg
in
jg
dec
sub
mov
inc
cmpsb
enter
mov
push
fsubrl
jg
cmp
lcall
or
xor
dec
push
mov
mov
xchg
rolb
jo
jp
push
movsl
dec
and
shlb
sbb
sbb
pop
or
lock
filds
inc
sub
dec
sub
adc
pop
sbb
pusha
mov
xchg
icebp
pop
mov
les
mov
xchg
stc
mov
std
insl
in
sub
nop
inc
adc
jb
hlt
pop
xor
stos
rcl
roll
or
sub
popa
addr16
push
and
mov
xchg
mov
imul
jae
or
pop
stos
scas
pop
outsb
push
or
mull
cld
fcoml
mul
lds
pop
add
xchg
xchg
pop
test
cltd
inc
not
mov
pop
push
mov
nop
and
dec
xchg
jno
mov
test
pop
mov
mov
mov
add
loope
or
push
push
jl
addl
rcrl
jmp
pop
xor
push
pushf
lahf
dec
ret
and
or
mov
xchg
xor
pusha
lods
adcl
loopne
mov
jmp
inc
sbbl
dec
popa
lds
add
mov
inc
jo
in
leave
stos
mov
xor
mov
aad
lahf
lcall
mov
out
or
rolb
xor
sbb
stos
xchg
test
mov
decl
push
xor
dec
jge
lahf
aam
bound
ficomps
loop
cld
fwait
lock
sbb
sbb
mov
movsl
pop
fldenv
mov
int
imul
test
lret
daa
data16
add
mov
cltd
out
fmul
outsl
jge
pop
dec
xchg
push
mov
scas
sub
or
daa
adc
loop
jp
sti
clc
mov
mov
ja
xor
aaa
int3
ljmp
xor
add
nop
mov
and
push
and
mov
xor
xor
push
into
test
and
mov
sbb
insb
out
xchg
insb
pop
fiaddl
loopne
add
insl
add
xchg
or
lahf
rorl
sub
cltd
mov
mov
ret
mov
sub
ljmp
scas
cmpsb
jns
test
inc
mov
lea
mov
push
mov
call
adc
jne
pop
movsb
ja
movb
ss
inc
rcl
out
cmp
daa
in
test
aam
lahf
cli
pushf
push
incl
test
mov
xchg
loope
jmp
in
ss
aaa
add
fisubrl
js
sbb
aam
dec
ljmp
ret
pushf
or
cmc
das
jecxz
jno
mov
sub
adc
lods
pushf
mov
adc
inc
js
inc
out
dec
mov
scas
insb
sbb
xchg
inc
jae
out
push
inc
fsubrs
xor
in
arpl
mov
icebp
inc
mov
adc
sarl
adcl
sub
xchg
and
pop
push
arpl
test
push
and
mov
popf
mov
push
jo
mov
sub
add
test
arpl
push
lcallw
push
sub
fsubr
mov
ss
xlat
gs
imul
out
fsubs
mov
fdivs
jns
sbb
out
cli
cmp
les
pop
mov
out
in
imul
jp
sbb
xchg
xor
xor
enter
out
xor
imul
mov
push
cmpsl
fidivl
test
or
jmp
dec
call
loopne
insb
cmp
or
mov
push
cmpsl
dec
dec
dec
lcall
scas
mov
pusha
iret
shrl
jle
in
jbe
shlb
mov
jbe
lahf
or
test
repnz
sbb
lret
pop
mov
fsts
jne
sahf
cmp
add
pusha
in
js
xor
adc
je
movsb
in
addr16
aam
repnz
dec
ds
jno
inc
xchg
popf
push
dec
adc
cli
mov
xor
cltd
mov
dec
enter
xor
outsb
sub
jo
imul
xor
jecxz
inc
pop
into
stc
insb
pop
test
lds
and
pop
aas
jb
cs
pop
bound
sbb
shll
mov
pop
jae
cmp
cs
adc
mov
arpl
addb
popa
cmc
jg
cmpsl
and
popf
sbb
mov
dec
jl
loopne
pusha
jp
shl
pop
aam
adc
xor
cwtl
aas
jae
or
xchg
pop
jo
mov
sub
sub
mov
test
mov
in
pop
bound
cltd
into
fiadds
cs
sub
pop
sarl
jecxz
sub
mov
cs
pop
add
lret
mov
sbb
repnz
inc
aad
mov
jmp
inc
adc
sub
mov
std
adc
push
int3
cmp
sub
pushf
pop
mov
rorb
stc
test
cmpl
insb
dec
pop
aad
enter
repz
pusha
lea
or
ljmp
sbb
cmp
jno
testl
adc
fs
mov
insl
push
ss
addb
and
or
fcomip
cltd
inc
sbb
and
xchg
xor
fcomp
jg
loop
in
aaa
mov
aas
pop
push
pop
fidivs
sbb
pop
cmp
dec
ficompl
imul
adc
insb
decb
mov
stos
fsubrl
inc
ss
cmpsl
into
in
lret
push
frstor
lds
and
leave
or
mov
lock
xchg
in
imul
sahf
pop
js
and
and
lods
out
movsb
jb
imull
or
sbb
lock
int3
xchg
push
or
sbb
aam
out
cli
mov
mov
rcll
dec
in
jb
inc
dec
adc
aam
push
shll
cmp
push
push
data16
mov
sbb
imul
adcb
addr16
adc
test
out
mov
sub
cmpsb
or
mov
ds
stos
xor
bound
mov
fimull
add
dec
lcall
clc
adc
mov
xchg
mov
scas
fcompl
mov
pop
jg
out
fidivs
adc
fbld
xor
call
mov
lea
cltd
insb
add
leave
or
movsl
sub
mov
xchg
stos
and
inc
push
pop
lret
leave
mov
sbb
rcr
enter
subb
clc
lret
ds
clc
pushf
xchg
subb
aad
push
out
sub
ss
mov
pop
pusha
or
push
mov
xchg
xchg
push
mov
xor
xor
cmpsl
pop
fwait
mov
add
leave
test
dec
js
jns
xor
fs
int3
out
add
sbb
xorb
scas
jno
xlat
mov
push
hlt
js
scas
mov
xchg
mov
cli
dec
lahf
mov
jo
ret
scas
jmp
adc
mov
je
sub
xchg
mov
aas
mov
and
mov
push
fwait
cmc
test
lods
fucomip
lcall
adc
xchg
cli
mul
ljmp
push
into
push
pop
pop
lret
stc
xchg
sub
mov
les
mov
dec
lods
dec
xchg
lea
add
xor
jp
negb
jnp
push
cmp
mov
cmc
das
mull
shl
xor
dec
mov
ret
fisubrl
lds
lods
mov
les
sbb
insl
cld
mov
cmc
dec
sub
cwtl
shl
adc
cmp
or
lcall
jl
cli
ret
add
andb
leave
sarl
mov
mov
lahf
xchg
dec
cli
ficoms
adc
mov
arpl
out
fstps
loop
push
sub
xchg
push
int3
or
cmpsb
stos
aad
pop
cs
sbb
sysret
cwtl
incl
pop
adc
push
cmp
pop
in
nop
enter
fdivr
jns
jb
push
push
xor
sub
pop
jne
xorl
rclb
imul
adc
mov
adc
in
pop
cmpsb
in
pop
lahf
pop
hlt
lret
mov
cli
fnstenv
mov
rol
pop
in
cli
push
outsb
andl
mov
insb
sub
sbb
lcall
mov
mov
push
addb
pop
pop
out
mov
lahf
and
jmp
fsubr
sub
and
pop
int3
test
push
xor
pop
pop
jge
xchg
pop
sbb
mov
stos
sub
and
int3
mov
loopne
xor
cmpsl
sbb
xchg
and
cmpsl
jl
dec
dec
addr16
and
push
ljmp
filds
ja
test
add
xchg
imul
sahf
test
out
clc
adc
mov
lret
and
cmc
ljmp
fsubrs
and
xchg
dec
filds
xchg
movsb
out
mov
mov
push
into
cmp
mov
outsl
xchg
mov
cwtl
or
das
aaa
mov
loope
mov
jmp
ror
pop
jmp
gs
inc
cmpsl
test
out
mov
lcall
sbb
out
xchg
arpl
lret
mov
sbb
rcrl
fs
xorb
fucomi
push
and
mov
xchg
xchg
int3
jnp
enter
cmc
lret
into
cmpsl
in
cmp
and
loopne
inc
inc
aad
xor
mov
xchg
das
and
movsl
lods
xor
dec
daa
push
test
mov
popf
daa
mov
xlat
leave
mov
lods
test
pop
or
hlt
mov
xchg
mov
cmp
pmovmskb
std
insb
mov
int3
push
and
popf
arpl
inc
ds
divb
inc
jnp
jo
lahf
in
push
adcl
popl
scas
stos
daa
cmp
xor
ljmp
inc
fimuls
movsl
outsl
stc
xchg
cmp
mov
int
cmp
fs
xorb
xor
rcr
arpl
mov
adc
call
cmp
push
mov
jo
jae
es
cmpsb
bound
lds
daa
fdivs
ja
mov
fnsave
jno
jnp
add
xor
int
and
outsb
dec
shlb
bound
jo
idivl
sbb
std
mov
repz
dec
sysenter
mov
inc
sbbb
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
decl
and
xor
mov
mov
mov
clc
add
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
push
xor
int
and
pop
mov
in
mov
jmp
loopne
and
push
mov
mov
jns
int
fs
mov
mov
in
das
dec
jb
cmp
mov
mov
loope
bnd
push
push
ret
dec
daa
mov
out
add
orb
xchg
xchg
popf
or
in
adc
pop
xor
dec
mov
stc
jne
cltd
int3
repnz
lea
push
ret
dec
push
and
cmc
xchg
sub
sbb
loope
lds
cmpsl
jg
cmp
mov
mov
idivl
aaa
je
mov
push
pop
repnz
mov
sbb
mov
ja
stc
push
rorl
jg
sbb
clc
xor
mov
sbb
cld
xor
mov
movsb
int
xor
mov
pop
int
and
mov
sbb
clc
xor
mov
sbb
pop
cmpl
jne
pop
subl
jne
pop
cmpl
jne
pop
cmpl
jne
push
xor
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
insl
test
inc
jne
pop
sbbl
int
loope
mov
mov
sub
pop
cmpl
push
mov
mov
jmp
mov
pusha
add
int
xor
mov
stc
int
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
mov
sbb
clc
xor
adc
inc
push
fcompl
xor
fdivrp
imul
frstor
int3
out
test
insb
insl
scas
fistl
scas
ficoml
jl
pop
jne
decb
in
push
sub
out
and
in
test
dec
xchg
mov
ficoml
lods
cli
mov
imul
sti
lret
and
lods
dec
lret
pop
xchg
lods
test
imul
data16
mov
lcall
in
sbb
push
sub
andb
push
mov
or
movsb
mov
mov
pop
int3
fidivl
int3
push
cltd
xchg
mov
cmpsb
xor
mov
das
lea
cmp
mov
lock
xor
ficoml
inc
sub
mov
das
mov
xor
mov
jns
push
outsb
call
or
and
push
out
test
loopne
adc
xor
stc
jbe
xchg
stos
xor
jg
pop
mov
add
pop
add
imul
or
sbb
stc
pop
cs
test
mov
ds
repz
xchg
fildl
mov
insb
jmp
hlt
test
stos
mov
mov
jns
mov
imul
add
add
lods
lds
pop
cmp
movsl
imull
lret
inc
jns
pop
enter
mov
lds
lds
xor
outsl
insb
cmp
and
int
inc
inc
sub
jae
sub
inc
jno
add
subl
add
scas
loope
dec
arpl
je
jg
jle
mov
clc
sti
push
xlat
data16
mov
sub
mov
dec
popa
int
pop
repnz
mov
dec
ret
jp
gs
xor
lds
das
leave
lods
add
push
ja
insl
mov
je
mov
jecxz
xchg
inc
xchg
add
dec
pop
add
or
mov
cld
into
xchg
sarl
inc
mov
cmp
rcr
xor
test
aaa
cltd
and
pusha
sti
or
out
fisttps
imul
iret
pop
daa
push
sahf
pop
push
movsl
rolb
shlb
div
rcrl
stc
arpl
stos
and
pop
xor
cmp
mov
jb
xchg
leave
pop
fisubrl
mov
cmp
mov
mov
sarb
jg
repz
inc
jmpw
jmp
inc
call
lods
push
adc
mov
mov
sbb
lret
pusha
test
mov
aas
ljmp
and
neg
or
push
pop
inc
fsub
and
pop
add
das
mov
xchg
push
pop
lcall
addr16
or
notl
pop
mov
dec
in
add
mov
lahf
xchg
mov
insl
xchg
mov
jbe
movsl
xorb
or
ds
dec
xchg
sbb
imul
test
repnz
lret
sub
aas
ret
xor
xor
faddp
fmull
cmp
xorb
cmp
sbb
aad
pop
int3
lds
and
push
mov
repz
add
mov
sbb
outsb
xlat
test
mov
pop
adc
xor
jbe
rcl
loopne
or
mov
or
fidivs
loopne
loop
fimuls
and
mov
cli
lret
mov
push
cli
mov
or
loope
sub
mov
and
les
shl
sub
inc
bound
cmp
out
mov
out
jecxz
sub
fisttps
sbb
xor
or
std
in
jae
pop
pop
iret
or
das
mov
loop
push
inc
add
jb
fwait
inc
cmpsb
out
cmp
inc
shlb
xchg
cwtl
jmp
xlat
stos
subb
adc
xor
jg
push
cmc
inc
in
fdivs
lods
out
pusha
test
push
xchg
or
fmul
rcrb
sub
mov
out
std
imul
mov
rclb
das
cmp
jmp
jnp
imul
pop
or
mov
xor
sbb
pop
test
mov
xchg
adc
and
dec
fst
das
cld
mov
dec
fnstcw
ss
mov
imul
dec
insb
pop
pop
jo
insl
inc
fldt
std
gs
sbb
addr16
popa
adc
out
cwtl
test
add
xchg
mull
mov
fcmove
mov
add
filds
adc
pushf
lahf
clc
mov
ja
imul
sub
sub
aas
mov
add
rorb
jbe
insb
mov
or
push
orb
push
je
xchg
dec
dec
pushf
and
sbbl
cmc
fildll
dec
dec
dec
out
fstpt
dec
push
mov
sbb
out
sub
aad
xchg
imul
invd
add
mov
sub
jg
int
mov
pusha
int
sbb
or
adc
out
jo
mov
ljmp
dec
into
sbb
stos
inc
and
negl
push
add
xor
and
icebp
adc
test
lock
pandn
imul
sub
xchg
and
push
cmp
roll
pop
lds
jg
pushl
and
push
lods
js
push
inc
lea
cmp
stos
pop
shrl
adc
xchg
mov
push
orl
sbb
mov
iret
subl
shll
add
and
nop
jbe
sub
jo
and
sub
lds
push
sbb
addr16
mov
fistl
movl
dec
popf
jl
jl
pop
jnp
xor
sub
mov
dec
inc
adc
cmpsb
sub
mov
sub
test
or
daa
ds
and
lcall
dec
leave
and
lods
fisttpll
pop
xchg
mov
cltd
jno
in
add
scas
fs
push
xor
inc
outsb
into
xor
mov
cmp
fwait
mov
mov
cli
in
dec
in
jae
stc
enter
sub
xchg
cld
das
push
push
nop
ja
mov
add
cld
sbb
adc
js
negl
dec
pop
sbb
cltd
xor
mov
jl
repz
repz
stc
addr16
xor
jno
xor
cmpsb
sub
mov
test
aad
in
inc
push
or
cmpsl
mov
adc
add
into
mov
jno
mov
dec
mov
sub
decb
sub
mov
stc
push
add
mov
test
sbb
dec
shr
bt
dec
movsb
cwtl
sbb
daa
faddl
js
jp
fsts
les
test
jae
and
mov
dec
addr16
pop
jo
xchg
pop
mov
lods
pop
rol
lods
lock
pop
lret
ja
push
xchg
mov
pop
xor
jb
dec
iret
fadds
mov
push
enter
stos
cmp
xchg
repnz
adc
pop
jmp
mov
mov
std
and
pop
inc
lret
hlt
xchg
int
and
jp
bound
push
sbb
add
jecxz
pop
jae
out
int3
test
mov
movsl
test
dec
pop
sbb
aam
or
repnz
imul
xor
xor
xchg
adc
jb
repz
mov
and
popf
cli
insb
pop
imul
hlt
ret
lods
aam
arpl
test
jno
add
inc
mov
dec
aas
push
xorl
cmp
cmp
pop
pop
mov
xor
xchg
and
pop
andl
and
cmp
sub
dec
and
pop
loopne
mov
sub
sbb
or
inc
loope
sub
cld
or
mov
cwtl
mov
loopne
test
addl
push
clc
imul
xchg
negl
and
gs
insb
lds
outsl
int
jno
push
inc
movsb
nop
and
xchg
cld
jnp
mov
add
adc
mov
sbbb
ret
mov
cltd
xchg
push
test
cmp
jns
inc
push
jb
push
mov
cli
add
adc
push
push
inc
mov
jbe
in
jmp
scas
xor
push
and
inc
lea
dec
cmovns
mov
mov
fdivl
sbb
cmp
clc
mov
mov
add
mov
add
mov
cmp
fstpl
sub
icebp
lods
jl
cmp
mov
shlb
repz
repz
mov
xor
sbb
mov
dec
mov
jb
repnz
loope
ret
xchg
mov
add
xor
int
cltd
popf
in
ljmp
fdivrl
movsl
xchg
jmp
shl
divl
into
jne
aaa
faddl
dec
jp
div
lea
inc
sub
clc
sub
push
sbb
add
aad
in
dec
lahf
and
or
dec
frstor
and
fiaddl
cmpsl
std
adc
jnp
push
bound
das
into
scas
xor
cmp
pop
outsb
push
add
shr
outsb
sub
dec
add
ljmp
movsb
sub
ljmp
fwait
js
sub
mov
stos
ljmp
aaa
mov
pop
std
and
subl
into
cmp
movsb
in
sbb
pushf
inc
mov
sbb
inc
xlat
cli
pop
sar
daa
add
mov
in
mov
mov
push
dec
mov
add
test
sbb
call
dec
and
fiadds
repnz
outsb
test
pushf
cmp
sti
aaa
jmp
sbb
mov
xor
gs
outsl
adc
sub
mov
insb
mov
mov
inc
pushf
add
mov
ljmp
les
or
popa
and
sti
xchg
outsb
sbb
and
and
sub
push
es
movsb
lds
push
push
fidivrl
std
repnz
cli
daa
adc
inc
lcall
ds
icebp
cs
push
scas
sub
out
hlt
xchg
ja
out
test
test
cmp
bound
std
sub
mov
and
hlt
add
cmp
insb
jae
xor
cld
lock
je
xor
and
shll
jo
add
xlat
xchg
into
rcll
aas
movsb
in
add
inc
mov
jle
push
mov
aam
aam
xlat
outsb
scas
das
pop
ds
mov
out
stos
jne
jmp
aaa
xchg
jae
cwtl
cwtl
xchg
std
pushf
mov
jg
pop
cli
imul
lds
repnz
sub
mov
loopne
rclb
movsl
repnz
mov
jns
fwait
mov
dec
mov
test
sbb
and
ret
mov
or
imull
add
mov
lretw
dec
iret
mov
xor
add
mov
sbb
rcrb
popa
push
cmp
or
ds
fidivs
add
sbb
or
hlt
mov
jbe
cli
clc
inc
repz
sbb
push
lret
aad
dec
pop
pop
adc
mul
jge
jne
mov
adc
testl
aaa
sub
mov
sub
shr
ljmp
rcrb
leave
es
pushf
add
jno
ret
sub
xchg
sub
mov
aad
call
mov
xchg
mov
aaa
mov
cltd
dec
outsl
dec
lock
fists
push
jmp
imul
pop
in
aad
outsl
jae
mov
inc
test
add
mov
imul
sub
mov
cwtl
or
adc
mov
into
es
fstpt
out
lods
sub
neg
jnp
jae
ret
lods
mov
in
mov
xchg
repz
lods
xor
mov
loope
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
