sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
push
pop
mov
mov
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
movsb
sub
leave
aad
ret
xor
ljmp
cmp
ja
mov
cmp
jo
sahf
push
out
xlat
sbb
js
inc
ja
out
js
add
popf
cltd
lds
dec
mov
jp
es
and
jne
xchg
ja
ret
test
loop
sarb
add
xor
xor
mov
xor
in
mov
cmc
aam
sub
adc
insl
fisubrs
mov
jp
xor
mov
fcomip
pushf
imul
out
js
dec
adc
inc
xor
dec
and
push
sahf
rcl
or
movsl
test
popf
and
and
popa
fisttpl
push
and
repnz
xor
cmp
out
mov
xchg
movb
fwait
sub
xor
fsubrl
mov
icebp
ret
sub
xchg
fs
mov
pusha
sub
lcall
add
jnp
jmp
in
mov
insb
or
nop
xchg
aam
sbb
mov
add
popf
and
test
scas
aad
call
insl
push
pop
pop
mov
jmp
leave
sub
iret
cmpsb
xchg
push
insl
outsb
push
lret
dec
xorb
inc
mov
cmp
out
lret
and
stos
sbb
or
xlat
out
or
inc
lds
jp
mov
fwait
mov
test
iret
sbbl
xor
sub
pop
out
iret
in
mov
in
mov
push
mov
sti
loop
ret
or
xor
xor
mov
push
mov
xchg
add
ja
cli
shll
fmul
pop
cmp
cmp
xor
mov
xchg
mov
cmp
and
loope
iret
xor
lret
mov
sub
jg
inc
in
jns
sub
mov
aad
das
popa
xchg
ret
pusha
out
rol
lcall
push
and
pop
add
lock
xchg
push
dec
push
pop
lds
xor
loopne
jmp
push
rol
lods
cli
adc
mov
in
fwait
add
xchg
xor
in
pop
call
rcr
ss
xor
jle
ds
xlat
lods
sub
jecxz
stos
jno
outsl
movsb
push
sbb
iretw
dec
mov
push
sub
cmpsl
dec
scas
lock
insl
add
dec
mov
fadd
xchg
cmc
or
ror
cmpsl
inc
mov
lods
ficoms
push
mov
pop
shrl
sbb
jmp
inc
test
jnp
mov
lahf
gs
inc
add
and
repz
sbb
push
sbb
mov
push
mov
ljmp
inc
ljmp
inc
and
ja
push
xor
mov
aas
cmp
sar
jge
pop
pop
sti
mov
adc
dec
dec
add
mov
rclb
xchg
push
mov
bound
cmc
out
mov
xor
adc
sbb
ds
inc
add
in
jbe
lock
xor
sub
jb
xchg
in
stos
mov
incl
lret
pop
xchg
rcll
out
repz
lcall
xor
data16
ret
jp
movsl
mov
add
adc
mov
push
icebp
adc
jnp
jmp
or
mov
aam
sbb
in
xor
xchg
jb
js
das
push
aaa
mov
add
imul
out
or
xchg
pop
inc
icebp
outsb
jb
sahf
pop
pop
stos
mov
jnp
daa
sbb
in
pop
cld
push
daa
xlat
cs
into
stc
sub
push
int
mov
stc
cmp
mov
inc
pop
push
mov
cmpsl
sahf
push
mov
inc
enter
leave
push
adc
lcall
pop
mov
cltd
dec
cs
xchg
inc
adc
mov
in
jecxz
inc
daa
aaa
into
pop
xchg
jns
and
lahf
inc
pushf
movsl
mov
loopne
cmp
push
cmp
aas
xor
pop
push
mov
push
xor
loop
add
mov
mov
addb
js
lahf
mov
je
fsubrl
fmull
int3
scas
mov
and
jbe
push
mov
sbb
es
les
in
sub
sbb
pop
push
movsb
mov
mov
shrl
arpl
inc
xor
add
mov
es
xchg
mov
xchg
xchg
outsl
push
dec
aad
mov
sbb
mov
mov
mov
test
ret
andl
inc
mov
mov
jl
sub
lret
cmp
inc
cmp
jg
mov
mov
enter
shlb
xor
in
mov
and
int3
cmpb
js
push
add
mov
scas
roll
jb
gs
js
jns
cmp
inc
clc
test
repz
mov
sarb
sarl
push
pop
mov
pop
sub
pop
xor
xchg
and
pop
dec
outsb
mov
dec
sbb
icebp
movsl
mov
xor
jo
dec
adc
lret
jge
xchg
mov
jle
test
lret
adc
imul
leave
xchg
fistpl
ss
mov
mov
imul
fidivrl
adc
mov
pushf
push
fs
sbb
mov
mov
ss
pop
ror
dec
imulb
mov
and
movsl
push
fsubs
jge
pushf
adc
gs
fst
rolb
fs
cli
xor
xchg
addr16
cmp
pop
test
sub
cmp
mov
mov
lds
or
cmpsb
lock
aaa
jp
fisubrl
push
dec
pop
push
test
aad
lahf
mov
adc
mov
rcrb
cld
push
test
push
xorl
jno
mov
sub
or
wrmsr
jo
sbb
push
mov
add
fistps
inc
dec
out
aaa
fisubrl
adc
inc
jnp
pop
mov
movups
add
test
jmp
je
int
test
aam
inc
jo
test
in
xchg
or
xorl
das
push
mov
inc
cmc
out
outsl
iret
mov
mov
xor
repz
push
or
xchg
adc
paddsb
loop
ret
test
add
cltd
pushf
xor
mov
xchg
inc
push
and
jp
cmp
mov
sbb
pop
inc
inc
xor
fcmovu
fnsave
clc
outsl
lods
lahf
hlt
fists
mov
sbb
lds
popa
ret
in
jmp
subl
push
sti
adc
test
aad
scas
shlb
xchg
jle
cmpsl
sar
mov
sarb
inc
mov
daa
and
sbb
arpl
push
xchg
pop
ret
fldcw
popf
dec
pop
fsubl
push
test
jle
fcoml
std
cmpsl
inc
jge
mov
mov
xchg
mov
int
jmp
pop
xor
or
test
nop
mull
ror
int3
mov
stc
dec
ror
pop
inc
pop
cmp
ja
lds
std
call
jno
in
mov
mov
lds
negb
jg
mov
movsl
xchg
idivb
xor
bound
mov
iret
and
call
or
pop
mov
fisubrs
sub
icebp
mov
inc
into
shrb
mov
popf
aaa
mov
scas
lds
lahf
inc
popa
cld
mov
lock
fwait
shll
aam
mov
outsl
xchg
cli
dec
shrb
mov
into
test
popa
adc
sbb
mov
in
push
test
mov
add
push
fistps
test
iret
jnp
cmp
dec
dec
rcrb
xor
adc
mov
dec
scas
stos
dec
jecxz
xchg
adc
icebp
sahf
arpl
dec
lret
sbb
imul
addb
adc
in
popa
and
ja
mov
js
dec
inc
inc
mov
dec
andl
pop
cmc
lock
stc
mov
mov
inc
outsb
sub
sbb
push
fldt
lods
decl
pop
psllq
lds
jno
fimuls
repnz
inc
stos
xlat
inc
and
mov
stos
test
je
or
sysret
mov
aam
aad
inc
mov
negl
popa
and
cmp
mov
in
repnz
out
test
push
add
subb
add
jb
push
movsl
icebp
lock
loop
sub
inc
push
inc
or
enter
pop
iret
int
sbb
lahf
mov
sbb
sub
xchg
mov
sub
cwtl
nop
inc
shll
push
rol
cmpsb
sub
pop
or
cmc
sbb
add
out
sbb
incb
xor
das
cmpsl
sbbl
std
js
push
imul
ja
mov
pop
cmpsb
adc
mov
xchg
outsl
jl
mov
cmp
xchg
mov
mov
xor
mov
mov
xchg
jle
nop
jle
lahf
pop
sub
push
jp
jo
int3
mov
outsb
or
ljmp
dec
cmp
push
cmpsl
pop
cmp
pop
jmp
out
xor
adcb
inc
push
pop
sub
sub
insb
imul
dec
out
or
lods
mov
or
jl
bound
cmp
aas
es
out
or
loop
pop
pop
mull
cmpsb
dec
push
roll
xchg
cmp
lods
mov
int
sub
in
xlat
cmp
popa
fsubl
das
adc
xor
jl
mov
inc
cs
sbb
pusha
pop
dec
call
mov
push
clc
imul
mov
mov
push
fdivs
icebp
xchg
xor
sbb
pushf
adcb
dec
psllw
adc
movb
cmp
fdiv
aad
sub
in
loopne
aaa
add
push
insl
movsl
lret
movsb
cmp
or
hlt
std
cmc
adc
sub
enter
int3
jae
shr
push
xchg
pop
aad
mov
pop
imul
sarb
mov
add
fwait
test
movsl
pop
pusha
incb
sbb
add
lds
leave
cld
sbb
pop
ret
sub
pusha
jp
push
cld
adc
and
shlb
ficompl
movsb
mov
cmp
add
loope
sbb
mov
ljmp
or
dec
mov
insb
in
sahf
mov
aaa
pusha
inc
cmpsl
cld
adc
loop
aad
test
jno
mov
js
test
pop
popa
push
setnp
insl
pop
and
aam
lods
ja
imul
and
push
shlb
sub
mov
fdiv
push
icebp
and
leave
sbbl
xchg
cmp
scas
pusha
sub
jg
mov
or
mov
out
mov
or
daa
sbb
jp
popa
sub
outsb
jae
test
loope
mov
popf
jne
inc
add
dec
insl
out
mov
ror
icebp
add
cwtl
mov
dec
add
shr
and
sub
insb
das
orb
sbb
dec
mov
test
sbb
lds
test
dec
mov
es
xor
movsl
xor
int
mov
jl
mov
jmp
xor
ret
lock
adc
add
push
rcrl
rclb
inc
add
repnz
and
movsb
push
mov
hlt
bound
mov
in
sbbl
pop
movsl
mov
movsb
lahf
mov
inc
cmc
mov
test
push
into
inc
push
jmp
or
rorl
fcomi
dec
or
push
xchg
test
xchg
mov
bound
je
cmp
scas
xor
gs
pop
ja
xlat
dec
rorb
addl
pop
mov
fstpl
in
leave
pop
and
mov
lcall
subl
xor
in
mov
cmp
out
inc
aam
or
jl
dec
pop
ss
cs
sar
xlat
push
mov
dec
lcall
pop
and
sbb
or
sbb
pop
mov
xchg
jmp
mov
outsl
jg
movb
add
lret
movsl
mov
je
lea
pop
mov
push
add
fistpl
jbe
cli
push
lods
dec
sets
mov
aam
pop
and
jmp
dec
cmp
fbld
push
stos
lret
mov
dec
adc
jne
xchg
push
cmp
push
and
inc
pop
push
das
push
push
movsb
mov
fistl
es
int
repnz
cmp
nop
mov
and
dec
xor
cs
jne
cld
push
dec
data16
hlt
addr16
mov
negb
adc
pop
dec
insl
and
mov
mov
sub
and
movsl
aad
sub
adc
imul
mov
adc
imul
adc
dec
in
dec
icebp
cld
adc
jge
dec
pop
push
mov
push
mov
adc
hlt
orb
xchg
cmp
xlat
test
mov
out
add
cmp
mov
aas
outsl
xor
stos
inc
mov
adc
mov
or
jg
xchg
dec
outsl
nop
sbb
cld
hlt
lret
adc
inc
push
aaa
dec
mov
sahf
dec
out
ret
jg
mov
sbb
inc
orb
cs
push
dec
stos
es
cmp
mov
ret
fisubrl
dec
stc
test
stos
fwait
pop
or
cmc
dec
clc
cmp
mov
jp
sahf
je
cltd
scas
mov
and
dec
cmpsb
adc
and
sbb
ljmp
out
xchg
push
iret
fstl
popf
jae
loope
cmpsb
cmpsb
cmpsb
aaa
inc
ss
jmp
add
sub
mov
jns
jne
mov
fcoms
dec
popa
inc
jle
mov
jle
into
insb
dec
arpl
pop
jbe
jecxz
xchg
inc
pusha
mov
mov
sbb
and
mov
jns
push
popf
test
xor
pop
dec
cmp
and
xlat
aaa
outsb
jb
cwtl
push
lods
js
mov
adc
add
mov
or
pop
cld
scas
sub
bswap
mov
inc
pop
stc
pusha
lock
pop
shlb
orb
daa
inc
aas
pop
lea
out
jo
out
lret
xchg
mov
adc
shrb
dec
sbb
dec
out
push
sahf
iret
push
sbb
jae
mov
and
sbb
pop
push
lret
push
xchg
sub
jno
mov
jg
add
inc
sub
add
xor
fnstcw
dec
lret
and
pop
push
fisubrs
push
ja
or
mov
mov
inc
lods
dec
cmpsl
add
inc
push
decb
push
cmp
pop
cmp
jecxz
mov
sbb
or
ret
filds
cmp
popf
sbb
mov
pop
push
das
jb
adc
mov
lods
pop
addr16
or
imul
test
mov
outsb
inc
outsl
gs
inc
pop
mulps
sub
adc
icebp
jnp
inc
or
ss
cli
push
add
pushf
cmp
ds
nop
fists
andb
and
mov
int
sbb
bound
adc
mov
sbb
cmp
pop
sub
lods
cld
iret
hlt
lea
decl
mov
int
add
inc
fwait
push
fbstp
aam
bound
push
loopne
sbb
into
and
mov
xchg
inc
cmp
clc
and
push
push
shll
mov
jecxz
xchg
pop
or
in
adc
bound
sub
shrl
add
cmp
mov
aad
ds
repz
push
fmulp
stos
or
xchg
and
mov
dec
dec
ljmp
or
mov
sbb
pop
lea
mov
out
movl
jge
in
cli
int
jae
mov
pop
xor
dec
not
jle
fcmovb
adc
lahf
mov
inc
add
xchg
int
adc
mov
lock
xor
test
nopl
test
pushf
add
nop
test
dec
std
jb
scas
push
sbb
xor
orl
mov
int3
cs
arpl
and
out
imul
daa
dec
insl
shl
and
pop
add
mov
stos
adc
mov
mov
movsb
adc
jle
xchg
jmp
outsb
jb
jmp
out
inc
mov
stos
clc
test
addr16
sbb
incl
mov
mov
pusha
mov
mov
mov
sbb
fdivrs
lret
in
inc
cmp
stos
adc
sub
xchg
rcl
movsl
push
fs
outsb
push
cmp
pop
jo
inc
dec
and
pusha
push
adcl
lahf
cmc
pop
addr16
scas
cli
mov
call
mov
test
pop
rcrl
mov
xchg
mov
sbb
push
lea
rorb
fdivs
inc
jae
dec
or
icebp
fmuls
incb
insb
push
lret
adc
ja
and
daa
or
push
mov
aad
int3
fldt
cmpsb
sub
push
push
push
in
jge
bound
mov
xor
loope
pop
notb
stos
inc
pop
sahf
or
add
fcompl
dec
inc
push
cmp
dec
mov
sub
adc
cmc
jle
lock
orl
pop
les
movsb
lahf
out
test
out
ljmp
sbb
inc
push
push
xchg
mov
push
sbb
inc
cli
jp
in
out
arpl
fucom
in
movsb
ror
sub
pusha
cmp
mov
dec
mov
rcl
and
mov
mov
or
adc
dec
fiaddl
push
fmull
negl
jle
pop
stos
mov
sub
inc
xchg
inc
sbb
xlat
inc
repz
je
inc
push
inc
or
jae
in
mov
adc
in
stos
pop
pop
and
adc
cmp
mov
outsb
inc
push
mov
arpl
pop
mov
popf
xor
nop
outsb
ret
std
cmp
cmpsl
pop
push
jo
mov
fwait
sahf
das
cltd
imul
inc
add
and
mov
out
loopne
pusha
out
pop
xor
fcmovnb
nop
cmp
push
add
xor
les
nop
mov
push
pop
xchg
mov
out
xchg
cmp
xor
icebp
sqrtps
lods
inc
mov
pop
push
lods
jecxz
in
call
adc
sbb
sahf
sub
or
push
sti
sahf
mov
mov
xchg
pop
shr
adc
add
dec
mov
add
ljmp
cmpsl
jge
mov
cmc
mov
icebp
dec
imul
ljmp
xor
roll
mov
sti
pop
fwait
dec
pop
out
jnp
sbbb
xchg
xor
pop
sub
xchg
dec
jnp
cltd
inc
or
lret
mov
pop
push
xchg
sub
mov
inc
sbb
fcoms
int3
xchg
cwtl
data16
cmp
dec
pushf
movsb
sbb
mov
iret
push
std
dec
sub
jne
mov
cmp
ret
lret
clc
lods
xchg
xchg
std
aad
sbb
mov
xchg
mov
movl
ret
inc
pop
in
pop
jge
mov
sbb
pusha
xchg
pop
mov
push
push
sub
int3
enter
call
dec
add
sub
test
stos
mov
mov
lods
cmp
ret
xor
jle
mov
pop
lock
push
mov
out
mov
out
repnz
inc
imul
repnz
aam
mov
popf
inc
das
lods
push
push
jbe
pop
fisttpll
in
sub
add
or
add
or
stos
je
jl
push
fsubp
daa
mov
pusha
mov
ds
mov
jo
outsb
cmp
xchg
retw
iret
add
pop
sbb
daa
sbb
test
dec
fdivs
nop
mov
mov
push
out
mov
data16
jbe
add
dec
mov
jae
push
cwtl
loop
sar
ja
out
lods
mov
sbb
or
xchg
sti
adcl
lret
adc
test
pop
pop
jg
push
into
lcall
mov
sub
sub
jns
call
sbb
sti
xchg
cmp
addr16
clc
jbe
cmc
mov
sti
pushf
out
xchg
iret
and
ljmp
out
out
idivl
xor
add
adc
shll
cmp
cmp
pop
push
pop
cmp
out
mov
inc
lds
out
jp
inc
and
aaa
mov
fdivs
cltd
push
and
inc
jb
inc
pop
push
dec
movsb
dec
sbbb
pop
data16
out
or
sub
gs
sbbl
nop
or
les
dec
dec
sub
jp
fcmovbe
les
xchg
and
cmp
repz
jns
sbb
sbb
pop
clc
clc
jecxz
mov
adc
outsl
sbb
stc
sbb
xchg
dec
repz
push
js
popa
cltd
mov
gs
dec
push
push
bound
inc
add
sub
mov
mov
inc
idivb
sub
fnstenv
stos
pop
pop
aam
sti
pop
sar
mov
pop
cli
xor
pop
xlat
js
je
mov
sub
jle
loope
es
loop
pop
and
sbbl
lea
aad
out
pop
pop
dec
sbb
aam
loopne
ret
pop
inc
rcrb
push
dec
ret
pop
push
stos
movsl
mov
test
int
xor
mov
rcr
dec
mov
sub
pop
jmp
or
leave
mov
daa
dec
and
xchg
xchg
push
pop
cmp
push
pop
sub
sbb
mov
in
notl
mov
inc
loopne
stos
sbb
sub
mov
test
fmuls
xlat
repz
les
icebp
mov
bound
out
rcrb
and
xor
loope
movsb
or
pop
sub
les
mov
jns
les
dec
adc
enter
fisttpll
pop
jmp
fadds
in
mov
xor
fbld
pop
outsb
dec
test
jbe
jl
push
and
sbb
xchg
ljmp
xchg
ret
cmp
mov
cmc
pop
mov
int3
daa
imulb
je
jmp
jnp
test
test
xchg
stc
cmp
mov
mov
mov
out
bound
mov
ja
jp
push
and
js
testb
rolb
dec
loopne
xlat
les
lods
push
bound
fcmovbe
inc
popa
jbe
aas
out
cmp
sbb
add
mov
cwtl
adc
dec
xlat
xchg
stos
xor
or
pop
xchg
inc
fidivrs
loope
insl
ja
jae
adc
cli
jb
lcall
or
and
lods
aaa
icebp
or
mov
cs
out
out
jae
das
lods
outsl
pop
inc
aas
sbb
fs
and
jmp
inc
orl
call
in
jbe
inc
fldenv
outsl
jnp
out
adc
je
lahf
and
push
push
push
subl
fsts
test
mov
and
and
jle
insb
ret
inc
push
jnp
call
jl
push
push
lret
mov
leave
int
fcoml
gs
sbbb
xchg
sub
mov
call
shll
in
cltd
scas
mov
ds
or
sti
add
pop
and
push
sbb
cwtl
dec
sub
mov
pop
dec
push
popf
sub
adc
xchg
push
cmp
int3
stos
inc
mov
push
enter
mov
popa
es
add
cmpsb
cmp
incl
mov
cmpsb
sarl
xor
rcrb
mov
inc
fdivl
insl
nop
pop
sbb
add
push
jg
clc
lods
daa
jg
and
pop
push
pusha
icebp
addb
cltd
adc
scas
ss
mov
sarb
lcall
fs
push
sbb
dec
push
mov
xlat
pop
roll
ja
mov
rcrb
sbb
pop
shl
or
pushf
lods
lock
inc
mov
inc
arpl
push
inc
cmp
xchg
dec
insb
mov
movaps
daa
dec
shl
notb
add
push
outsb
in
cmp
xchg
mov
outsb
jmp
add
mov
movsb
or
fmuls
dec
rcrb
scas
lods
es
fcoms
dec
cli
movsb
mov
dec
shlb
int
or
push
ds
icebp
cmp
insl
jo
jmp
dec
ficoml
inc
lret
enter
das
sti
ret
std
inc
push
das
ja
ljmp
sub
movsl
repz
popf
add
adc
mov
jb
insb
cwtl
test
scas
insl
dec
bnd
cmpb
and
ds
inc
pop
mov
mov
sahf
dec
and
push
sbb
mov
mov
xchg
gs
xchg
adc
js
repnz
sub
pop
dec
mov
ljmp
pop
fidivl
call
das
rclb
insb
pop
pop
out
ss
fdiv
dec
inc
xor
movsb
pop
in
gs
dec
iret
fisttps
push
mov
and
stc
aam
popa
js
fstps
pop
aad
lods
push
bsr
lahf
xor
fildll
addb
sub
das
pop
dec
fdivp
pop
jmp
jl
jbe
mov
in
fistl
or
call
mov
rol
in
scas
inc
mov
xchg
out
outsl
inc
pop
out
test
push
jns
outsl
les
icebp
cmp
sub
and
mov
pop
in
frstor
sub
cltd
outsl
mov
cmpb
rcrl
dec
xchg
cmp
cmp
push
sbb
test
les
jmp
mov
or
divb
cmp
insl
sub
add
rcrb
outsl
xor
mov
dec
stos
rcrl
push
pop
hlt
lds
xchg
push
pop
sub
imul
loop
in
aas
inc
es
xchg
xchg
sahf
jo
test
xchg
ds
jns
xchg
loop
mov
mov
inc
adc
and
add
ja
adc
sbb
sub
mov
sahf
ljmp
fsts
stc
inc
call
nop
aas
xorl
inc
or
dec
push
into
nop
mov
push
and
lock
push
and
imul
push
xor
add
int3
pop
loopne
bound
push
jbe
dec
insb
jnp
movsl
rcll
or
mov
stos
stos
sbb
or
and
push
sub
pop
fwait
xor
push
gs
cmp
dec
dec
cmp
insb
add
xor
lret
stc
or
out
cmp
mov
stos
lahf
sahf
push
pop
shrl
fistps
stos
rcrb
or
cmpsb
sub
popf
into
sahf
mov
jbe
icebp
sub
cmp
popa
mov
out
jno
xchg
pop
mov
mov
insb
out
popl
mov
mov
lcall
adc
jmp
jno
mov
daa
push
cmpsl
bound
aas
dec
pop
call
lea
out
pushf
jle
xchg
test
mov
adc
add
push
push
stc
push
or
mov
lock
jecxz
push
sti
fiaddl
jmp
fnstenv
mov
andb
sbb
mov
loopne
xchg
dec
mov
push
and
adc
adc
in
pop
inc
dec
out
cld
jb
out
mov
gs
dec
call
bound
test
mov
popf
mov
es
mov
aaa
popf
rclb
stos
mov
or
pop
or
roll
pop
int3
cmpsb
add
inc
sub
flds
cmp
popf
xchg
nop
stc
xor
push
pop
mov
add
push
cmpsb
jnp
scas
lcall
lea
xchg
dec
inc
shrb
sub
test
rcll
xchg
loopne
add
arpl
push
mov
movsl
pop
inc
aas
add
in
scas
fnstsw
cwtl
inc
inc
mov
pop
addl
mov
adc
in
pop
dec
repz
aad
jnp
inc
add
pop
mov
lcall
ljmp
inc
cmpsb
or
mov
shlb
jns
sbb
shr
add
out
outsb
repnz
lods
fdiv
xlat
dec
sti
push
lods
jo
cmp
jnp
jbe
jecxz
mov
scas
inc
fwait
aad
mov
fsubrs
insb
dec
out
pop
pushf
lds
add
cltd
hlt
xchg
push
nop
jo
jmp
or
pushf
div
pushl
subl
cmpsb
jae
pop
xchg
pop
stc
cltd
inc
mov
cmp
test
cmc
xchg
jae
mov
lods
ljmp
lods
lret
inc
fxtract
mov
inc
xor
aas
aam
inc
cltd
or
adc
cmp
pop
adc
ss
out
inc
shrl
add
loop
insl
and
popa
movsb
mov
mov
cld
mov
add
dec
mov
ds
and
icebp
shrl
loop
adc
cli
lret
pand
fldcw
jb
adcb
pop
adc
insl
stos
repz
lods
xorl
clc
sbb
sub
xchg
xor
lock
cmp
outsl
fwait
jnp
enter
lods
mov
xorb
adc
adc
xor
inc
xchg
test
fldl
fstl
jle
int3
mov
jge
shll
aaa
cld
dec
outsl
sarb
pusha
pushf
cs
pop
xor
pop
addr16
jns
push
jnp
aaa
jl
xor
pop
and
and
jb
leave
jl
into
pcmpeqb
sbbb
aas
and
adc
xor
lods
add
xchg
jmp
repnz
loopne
lock
xchg
mov
fs
decl
pop
jbe
imul
mov
cmpsb
jl
outsl
cmp
lcall
lahf
and
lret
xor
xor
push
mov
ss
jae
and
and
dec
lcall
xlat
movb
mov
mov
fimull
call
fsubs
xchg
add
cmp
out
js
push
push
das
or
sbb
inc
cli
mov
push
inc
xor
add
js
fnstcw
outsl
push
dec
jle
dec
jg
fwait
mov
sti
int
mov
lret
inc
inc
ss
cwtl
sarb
call
insl
push
pop
out
add
sahf
pop
xor
cld
fs
cmpsb
adcb
fst
push
ret
loopne
cwtl
xchg
out
sti
cmp
cmp
mov
mov
jp
mov
dec
mov
cmc
sbb
push
jnp
insb
in
cli
lds
sub
mov
outsl
or
jno
dec
sub
jbe
cmp
cmp
movsl
cmc
mov
xlat
loop
dec
mov
mov
cmc
mov
int
jno
adc
out
or
jecxz
sbb
cltd
scas
in
pop
xor
mov
popa
pop
sub
enter
cmc
pop
adc
mov
mov
add
push
pop
out
popf
cmc
jno
add
scas
jo
mov
out
lcall
mov
mov
push
adc
notb
popf
mov
ret
and
jne
out
insb
imul
roll
dec
icebp
orl
sbb
pushf
faddp
bound
lock
push
inc
mov
dec
cld
lds
rcl
sub
mov
movsb
out
xor
rcrl
testl
push
inc
xor
cli
and
test
jecxz
scas
sub
into
mov
addr16
fstl
cmp
jno
mov
scas
aas
subl
fisttps
subl
jb
test
and
xchg
sti
mov
pop
sub
popf
insl
cwtl
lahf
subl
js
aaa
into
das
sbb
mov
aas
cmpsl
jp
mov
push
lret
xchg
loop
add
xchg
stc
jae
fldcw
dec
add
mov
mov
inc
fisttpl
cltd
cmp
pop
jb
sub
loopne
mov
dec
push
jle
dec
mov
adc
inc
add
cmp
iret
mov
mov
fnstsw
add
cmp
jns
pop
jmp
add
sub
add
xchg
out
test
pop
lods
or
sti
push
mov
xchg
mov
sbb
repnz
testl
std
mov
dec
or
imul
in
cmp
aam
mov
or
add
sarl
in
imul
pusha
negl
nop
int3
addr16
xchg
pop
inc
mov
sbb
or
push
inc
jl
je
aad
loop
outsl
int3
gs
pusha
icebp
dec
lret
adc
lret
cltd
pop
add
cs
lds
cmp
lods
xchg
stos
jnp
icebp
mov
stc
fs
pop
add
and
dec
jbe
mov
or
xor
rorb
rcrb
jae
movl
cli
mov
cltd
mov
out
sub
xchg
mov
and
cs
cmpsb
push
fs
xchg
dec
sub
jp
cmpsl
cmp
xor
pop
cld
mov
dec
dec
fs
add
into
cmpsl
outsb
lds
loop
mov
add
popf
test
lods
or
pushf
ss
cmc
mov
stos
sbb
adc
ficoml
scas
repnz
pop
lods
xlat
mov
mov
pop
cmp
and
jge
pop
dec
mov
sub
mov
test
cmp
push
lock
sub
shl
out
ret
add
or
js
xor
mov
mov
pop
push
sbb
shlb
mov
pslld
push
jo
mov
repnz
jb
stos
cmp
inc
fs
lahf
jbe
into
jg
movsl
dec
in
sub
mov
cli
xchg
sub
cmpsl
sub
adc
pop
lret
jo
adc
cmp
adcb
jecxz
mov
pop
ds
push
insb
pusha
mov
push
data16
sarl
in
lods
jge
test
mov
sbb
int
push
icebp
out
pop
push
das
fs
repz
or
adc
in
out
rclb
mov
dec
aas
mov
xor
dec
pop
pop
pop
imul
jmp
mov
sub
mov
addr16
icebp
leave
test
rolb
jno
mov
xchg
notl
bound
movsb
dec
loop
push
cli
cmp
scas
fimull
lods
mov
lret
and
addr16
aas
out
mov
push
sahf
shrb
sub
push
push
mov
fsubrs
stc
sbb
das
icebp
cmp
ds
mov
jb
adc
das
push
jns
div
xor
out
or
leave
jnp
sti
xor
cli
iret
fisubrs
sar
andl
push
jnp
fisubrs
pop
out
pop
sahf
xor
stc
stc
lods
cwtl
sbb
clc
arpl
inc
mov
int3
push
out
das
mov
sarl
xchg
or
dec
cltd
lea
push
fiadds
gs
xchg
jbe
cmp
ss
jmp
shll
out
or
inc
aad
mov
nop
xchg
ljmp
dec
push
push
pop
jno
jbe
pop
lods
js
inc
ds
xor
mov
ja
jl
xor
xor
js
cmp
mov
push
sub
cmpsb
lcall
jmp
ret
testb
dec
scas
adc
mov
shl
jg
sub
and
adc
ss
pop
jmp
cmp
and
jnp
xchg
and
cmpsl
xor
cmp
xchg
scas
fistl
pop
jp
xchg
fistpll
cmp
testb
add
mov
scas
xchg
or
data16
ja
jecxz
xlat
iret
dec
outsl
mov
shll
ret
add
and
mov
dec
out
mov
ljmp
mov
jmp
std
inc
fwait
shlb
bound
sub
cmp
testl
inc
add
xchg
xor
cmc
push
out
and
out
subb
push
paddsb
idivl
jecxz
cmp
rcll
lds
sub
mov
fisttpl
xchg
loopne
or
daa
mov
push
xor
xorl
xchg
loopne
jb
ror
mov
in
mov
xlat
or
xchg
cmp
adcl
pusha
or
or
xchg
loop
into
or
cwtl
xor
nop
push
push
fs
xchg
je
out
pop
fwait
xor
pop
xchg
push
pop
jnp
add
mov
fiadds
inc
or
aaa
inc
xchg
loop
push
xchg
adc
or
sbb
ljmp
or
mov
ds
shl
xchg
dec
mov
push
xor
pop
mov
jae
enter
icebp
adc
adc
ja
mov
sbb
js
xor
outsb
inc
adc
shl
out
push
xchg
or
loope
mov
sarl
jae
mov
inc
cmpsl
jecxz
or
cli
push
lahf
ficompl
sbb
and
sbb
or
fwait
repnz
jb
mov
push
lods
pushf
dec
xchg
filds
adc
jecxz
pusha
sbb
rolb
scas
gs
lahf
into
adc
mov
add
mov
inc
pop
dec
call
pop
mov
divl
inc
sarl
and
add
fisubrs
adc
mov
adcb
in
out
inc
stos
leave
inc
or
jl
into
cld
inc
jne
jb
pop
es
cmpsl
mov
mov
inc
pushf
aad
js
repz
sbb
dec
pop
xor
push
popf
roll
xor
sbb
mov
xor
scas
dec
notb
and
pusha
mov
mov
bound
xchg
adc
test
pop
aad
sbb
sahf
inc
sarl
jle
jmp
sub
xor
in
sbb
pop
inc
loope
adc
into
jmp
mov
sbb
lret
dec
fcmovbe
outsl
icebp
hlt
adc
shll
or
fldl
int3
jp
pop
int
addr16
ret
xchg
push
lock
jo
mov
sub
pop
hlt
jbe
fildll
pop
jae
pop
dec
push
ret
jle
into
push
das
jecxz
pop
add
outsl
pop
sbb
into
repnz
nop
cld
daa
jp
sti
loopne
and
imull
push
mov
mov
shl
ds
outsb
mov
mov
xor
push
and
mov
mov
xchg
pop
lret
adc
ss
or
lods
jno
das
cmp
push
cmpl
lcall
rcrl
xor
xchg
or
stos
ds
mov
pop
push
pop
jo
leave
sub
jp
jl
pushf
inc
clc
rcl
and
push
push
ret
or
xchg
lcall
mov
iret
xor
cld
roll
ja
cltd
cmpsl
pop
ret
push
lds
dec
ret
fstpt
sub
push
cmp
adc
dec
lret
or
shrl
push
dec
inc
je
out
insb
mov
mov
scas
mov
aas
jge
stos
leave
adc
rcll
pop
xchg
shlb
jae
aad
js
in
push
std
enter
pop
inc
daa
xchg
std
gs
jecxz
inc
jns
out
ficoms
jecxz
in
push
sub
pop
fcoml
and
push
mov
jmp
in
mov
sub
xor
imul
inc
jp
mov
or
xor
int3
ja
repnz
jae
into
jg
jb
lret
clc
loopne
push
inc
popa
sbb
and
mov
orl
xlat
sub
adcl
pop
enter
pop
inc
push
jle
mov
mov
adcl
aas
arpl
or
mov
push
dec
push
sbb
push
fdivrl
pop
adc
jmp
add
nop
sbb
cs
mov
stos
cmc
jle
ficoml
mov
fiaddl
mov
test
aad
int3
cmp
aam
lret
mov
and
pop
mov
mov
sbb
adc
adc
sarb
addr16
repnz
inc
fisubrl
adc
cli
in
pop
pop
out
loopne
mov
jge
xchg
mov
pop
or
stos
and
loope
movl
loopne
mov
and
lds
and
pop
pop
jecxz
adc
push
jl
jne
cltd
data16
xchg
cmpsb
ss
xor
jne
jo
xchg
mov
inc
jae
xchg
leave
lret
jmp
divl
push
inc
aad
lret
adc
jo
cmovs
mov
dec
or
sub
iret
inc
shl
lock
sahf
in
ret
std
pop
or
mov
idivl
sbb
cs
lods
idivb
pop
pusha
inc
add
pop
jns
inc
push
aas
adc
pushf
or
out
fstpt
cmp
jge
pop
dec
mov
in
mov
xor
outsl
ret
xchg
pusha
pop
aam
xchg
mov
popl
sbb
dec
push
fidivl
gs
pop
inc
adc
cmp
cmc
sbb
mov
adc
fbstp
ffree
sub
adc
jp
rcrb
sbb
jle
xchg
insl
mov
mov
pop
xchg
push
dec
cltd
sahf
sub
sbb
push
sbb
rol
test
mov
jno
pop
dec
adc
jg
ffree
enter
xchg
dec
mov
rorl
test
mov
scas
inc
popa
mov
repnz
dec
jae
insb
jo
in
sti
jns
cmpsl
dec
inc
push
mov
icebp
popa
xchg
push
out
fdivp
nop
cmpsl
push
add
out
mov
jg
insl
mov
fcmovb
fimull
add
pop
mov
shlb
jo
add
jne
jne
std
test
lret
pop
into
pop
xor
adc
pop
in
scas
pop
nop
adc
rcrl
mov
sub
jp
cmp
mov
xor
cmp
int
cmp
jg
faddl
mov
and
fistpll
or
cmp
movsb
out
jo
stc
jp
mov
pop
sbb
out
aaa
pop
cmpsb
sub
int
mov
mov
jo
cli
cmpsb
rolb
fsubrp
stos
and
loop
ljmp
fs
loop
adc
mov
sub
cmp
pushf
xchg
xor
jnp
sub
sbb
pop
pushw
int3
pop
dec
fadd
repnz
roll
jo
dec
subb
vlddqu
adc
cmc
push
addr16
jno
push
push
mov
mov
xchg
movsb
stc
fstl
mov
ja
test
aaa
xchg
pop
lods
mov
add
popf
mov
or
or
push
jecxz
rolb
ljmp
sti
push
dec
xchg
pop
dec
mov
adc
mov
xor
mov
test
lds
cltd
mov
mov
and
xchg
jnp
push
cs
mov
addr16
xor
iret
jne
incl
sub
out
fmul
add
js
loopne
shrb
jecxz
mov
push
inc
sbb
mov
in
mov
pop
jp
lcall
mov
pop
jle
push
nop
mov
icebp
imulb
sub
lret
adc
xor
adc
out
out
fadds
jnp
sub
xor
sbb
cmp
mulb
andb
push
imul
mov
lds
adc
cwtl
das
mov
ficomps
and
adcl
rcrl
fisubrs
push
jmp
pop
data16
cmp
jne
xor
push
outsl
mov
mov
test
mov
loope
mov
je
sub
mov
mov
add
leave
xor
inc
jmp
stos
icebp
cmp
scas
rorl
mov
inc
bound
out
ljmp
sbb
push
sbb
cmp
jge
push
jl
movsl
xchg
pop
aas
add
arpl
aad
loope
jp
mov
adcl
xor
mov
shl
mov
or
rcrl
jmp
cld
mov
cmp
sbb
inc
fdivr
stos
mov
mov
pop
mov
gs
pop
dec
dec
mov
cld
stc
lret
jnp
mov
pusha
and
jl
inc
fisttps
adc
stos
aas
adc
out
out
adcb
and
mov
out
sub
push
mov
xchg
scas
xlat
and
bound
push
sti
cmp
sbb
int3
hlt
loop
out
push
rcrb
iret
in
lods
popa
lcall
xchg
inc
jns
inc
jo
and
cmp
cld
ljmp
test
or
test
fstpl
jne
mov
pop
and
mov
addr16
pop
and
pop
rcrb
ss
jb
pop
jo
outsl
xchg
aam
pop
lods
or
out
imul
inc
sbb
out
notb
or
lret
mov
sbbb
mov
popf
ljmp
xor
jnp
adc
dec
fnstsw
fildll
adc
xchg
and
rolb
mov
int
dec
sub
jmp
sahf
je
movsb
adc
testb
mov
push
fisubl
call
scas
mov
insl
inc
sbb
xlat
xchg
scas
push
xchg
into
in
ja
cmp
aaa
or
sub
adc
arpl
dec
cs
es
mov
mov
pop
cld
lret
fldpi
xchg
movsb
in
jmp
xchg
fidivl
xchg
call
repz
je
das
pusha
int3
jge
faddp
in
xor
daa
insl
add
in
sub
iret
leave
out
rol
mov
stc
add
aam
les
sub
mov
out
out
mov
arpl
stos
pop
jnp
arpl
movsb
jle
mov
xchg
mov
and
add
mov
lods
mul
and
lahf
dec
pextrw
add
inc
sarl
adc
roll
out
jl
xchg
movsl
loope
mov
es
sahf
orb
ficomps
retw
enter
push
mov
adc
jo
out
cmp
adc
iret
lret
loopne
stc
arpl
out
mov
add
jo
push
notl
inc
ficomps
sbb
jge
mov
mov
loop
adc
mov
cmpsb
add
add
pusha
mov
sbb
cmp
sahf
sahf
stos
adc
enter
sbb
push
xor
into
pop
std
add
jne
mov
sbb
jno
pop
lret
push
push
pop
sahf
push
jae
aaa
int
add
add
push
lcall
pop
and
dec
dec
push
adc
imul
pop
sbb
sahf
sbb
mov
std
fcomps
add
adc
in
push
aam
add
push
push
lret
stos
cmp
mov
push
outsb
out
test
xchg
test
sub
sub
mov
mov
ljmp
push
ja
dec
int
sub
leave
pop
mov
sahf
dec
dec
lret
ret
push
sub
adc
sbb
ljmp
js
or
jns
and
pushf
jb
hlt
popf
xchg
popf
iret
adc
ret
cs
aad
sub
dec
dec
lahf
mov
sbb
jg
cwtl
inc
mov
mov
loop
adc
inc
out
xchg
stc
data16
mov
pop
out
mov
pop
xor
push
loop
scas
adc
cmpsb
mov
mov
gs
add
pop
imul
jle
ret
not
popa
jb
leave
pop
xchg
inc
imul
add
movsl
sbb
insl
pusha
mull
les
out
nop
ss
les
xor
ret
inc
jmp
cmpsl
mov
sbb
sti
mov
jns
es
lcall
ret
std
jne
je
cs
fs
sahf
sub
dec
imul
xor
gs
in
xor
lods
sub
cmpsb
jae
aam
and
pop
mov
push
mov
fdivrs
shrl
incl
xor
leave
dec
adc
ja
loopne
jne
insb
cmp
testb
iret
adc
call
sahf
jno
sbbl
push
pushf
sub
lahf
fucomip
sub
push
add
pushf
dec
in
jp
inc
outsl
add
ret
adc
adc
xchg
lcall
repnz
xchg
sbb
testl
scas
mov
mov
mov
mov
and
xlat
cmc
jl
mov
mov
bound
pusha
jecxz
lcall
jae
cmp
aas
mov
stos
jno
mov
push
test
xlat
mov
or
popf
pop
ss
pop
int3
loop
adc
xchg
mov
fcmovbe
lds
pop
or
inc
outsb
stos
mov
hlt
cwtl
scas
pusha
pushf
xchg
pusha
leave
jns
mov
xor
mov
or
je
lret
addr16
cmc
cmp
outsl
aad
fwait
mov
lret
mov
fisubs
xor
arpl
out
sbb
sub
out
out
add
mov
mov
lods
or
in
popa
decl
adc
or
lea
test
idivl
in
int3
stc
xor
test
ja
xor
mov
or
pushf
lcall
inc
repnz
push
adc
mov
pop
mov
mov
mov
mov
xor
mov
sahf
add
mov
out
adc
pusha
mov
cs
or
lds
xor
in
sbb
pop
lods
addr16
sbb
sbb
jmp
fistpll
iret
ja
sbb
dec
data16
loopne
push
lret
stos
inc
push
adc
jp
mov
outsb
sub
mov
clc
and
jle
sub
imul
jge
cmpsb
lret
fabs
pop
iret
scas
loope
je
add
stos
xor
cmp
vpsubw
add
sub
ja
xchg
sub
call
or
mov
popf
fdivl
cmp
outsl
test
int
fldl
or
xchg
loopne
push
sahf
xchg
rclb
test
push
cmpsl
xchg
daa
mov
repz
cmp
in
scas
pop
xchg
mov
loope
insb
jg
icebp
in
cmpsb
nop
pop
loop
pop
mov
in
test
pushf
pop
cs
in
and
xchg
mov
sarb
iret
lcall
arpl
inc
pop
mov
arpl
ja
sub
jp
loop
in
dec
js
pop
stc
loop
and
or
mov
stc
insb
and
sub
push
push
or
test
pop
in
les
popf
push
fwait
mov
mov
loope
enter
xchg
imul
push
push
fldcw
out
xchg
cmpsl
fsubrs
bound
lds
push
mov
push
push
or
testb
pushf
idiv
pop
iret
aas
insb
mov
cmp
mov
pop
add
mov
and
xor
inc
jo
jne
not
ljmp
fdivrs
pop
lds
jnp
cmp
mov
sub
std
mov
lea
pop
dec
and
and
xlat
cs
mov
mov
pop
stos
pop
pop
stos
in
test
inc
jp
stos
inc
or
add
cmp
lcall
cmp
roll
imulb
push
mov
incl
pop
pop
bound
adc
test
shl
and
out
js
bound
lock
imull
imull
mov
inc
mov
call
lods
push
push
mov
dec
xor
jb
sahf
sub
xor
or
and
sbb
fldenv
arpl
ljmp
mov
inc
ljmp
adc
rolb
sbb
daa
sbb
repnz
mov
pusha
lods
pop
cwtl
mov
testl
imul
inc
xchg
repnz
orb
icebp
mov
xchg
mov
adc
xor
sub
mov
ret
jle
outsb
dec
mov
ja
cs
lcall
in
divb
rorb
sub
sub
aam
jae
dec
adc
dec
dec
push
jno
xchg
mov
and
push
xor
lahf
orl
sub
xchg
sbb
out
sbbb
rcll
nop
pusha
ds
loopne
pop
js
pop
fs
jbe
xor
sbb
test
insb
enter
das
lds
dec
pop
aam
ret
in
lds
test
xchg
xor
pop
jmp
or
lods
sub
inc
rclb
mov
jecxz
pop
insl
mov
mov
movsb
ret
xchg
inc
data16
lret
fbld
mov
mov
pop
xchg
pop
cmp
jecxz
repnz
aaa
add
cmc
hlt
or
mov
mov
and
mov
inc
stc
sbb
cmp
cld
sti
and
idivl
cld
adc
or
xchg
int
mov
into
push
jbe
pop
rorl
out
xorl
test
sub
repz
stos
xor
fildll
add
shll
stos
or
sub
mov
outsb
fwait
loopne
inc
sub
dec
inc
shr
xchg
pop
mov
inc
xorl
xor
popa
jno
pushl
cmp
sarl
aad
push
push
out
and
inc
jl
jl
loopne
xchg
imul
hlt
pusha
pop
inc
cmp
popf
shl
xchg
lods
sbbl
jmp
mov
cld
xor
dec
sbb
push
xchg
pop
rcl
pop
xor
jb
mov
xchg
into
mov
lcall
in
mov
and
leave
cs
jecxz
movsl
leave
cmp
pop
xchg
js
daa
scas
mov
mov
pop
inc
das
xchg
and
push
or
icebp
mov
jecxz
inc
int
jo
das
inc
dec
mov
or
sbb
or
pop
outsl
dec
push
jp
dec
pop
push
lock
jno
adc
fldcw
in
popa
pushl
jl
inc
loope
lods
stos
mov
and
aad
cmpsb
inc
imul
fistpll
push
cmp
mov
in
andb
pop
mov
and
popa
loopne
ffree
jg
sbb
cmp
xchg
lea
jmp
mov
mulb
inc
dec
push
or
fcmovnbe
in
adc
sahf
aas
xchg
adc
cmp
cli
fadds
bound
leave
push
push
xor
sub
jle
xchg
sbbb
leave
rcl
enter
dec
std
sub
sub
rolb
sub
movb
mov
aam
adc
inc
lcall
cmp
icebp
rorl
popa
ds
imul
xor
jae
addr16
cmp
adc
ret
shl
adc
jle
push
push
mov
adc
scas
jbe
sbb
outsb
pop
out
inc
stc
sub
lahf
pop
ret
popf
fldcw
je
fisttpl
push
pop
mov
in
orb
or
aad
add
cmp
mov
test
leave
lcall
or
cmp
test
jb
add
adc
in
push
xlat
hlt
pusha
mov
inc
sbb
testl
aaa
mov
xchg
mov
push
jo
les
jae
aam
mov
sub
aaa
lahf
add
pop
cmpsb
popf
xlat
sbb
loop
lcall
inc
dec
pop
push
dec
dec
or
int3
jl
fists
rcr
loop
daa
ljmp
dec
mov
jl
xorl
inc
inc
push
inc
push
cmp
popl
adc
ds
adc
cmp
adc
pop
fwait
adc
dec
sub
lea
notl
pushf
mov
gs
xor
pop
mov
sub
sbb
pop
lds
or
shll
lds
aaa
adc
and
stos
test
dec
mov
push
mov
mov
stos
push
sub
mov
and
inc
jnp
or
xchg
mull
mov
loopne
fwait
adc
adc
repz
das
mov
or
mov
push
cmpl
enter
in
mov
fmul
mov
shrl
xor
add
dec
mov
lods
dec
je
jo
enter
sub
xor
fnsave
dec
pop
fucom
mov
std
mov
adc
jne
jo
fwait
add
cli
cmpb
pop
adc
mov
push
sarl
dec
notl
out
mov
sbb
mov
sub
cmpsb
lods
repz
push
pop
repz
add
mov
lods
aad
movsw
dec
iret
adcl
leave
mov
sbb
xor
xor
xchg
dec
xchg
and
sar
lods
xchg
jnp
mov
pop
push
aaa
movsb
shl
mov
mov
ror
cmp
out
cmc
ret
xchg
fadd
push
jmp
cld
test
les
mov
cmp
in
xchg
dec
adc
aam
daa
cmp
mov
and
andl
sub
inc
cmp
bnd
ljmp
pusha
mov
xchg
pop
cmpsb
lahf
jno
cmp
lret
andb
mov
jmp
outsb
mov
cmc
sub
in
xchg
cmp
mov
nop
mov
xor
test
sbb
jp
cmpsb
int
mov
mov
adc
push
hlt
push
shrb
mov
inc
xchg
repz
jecxz
test
lods
sbb
mov
leave
sub
call
push
jnp
dec
pop
pop
mov
and
mov
in
sub
ljmp
inc
outsl
mov
jge
notb
dec
test
aad
cmp
pop
ficompl
jp
movsl
cs
jno
cmc
inc
jo
jl
push
test
int
dec
sub
inc
cmp
jb
repnz
mov
das
mulb
clc
fdivrs
cwtl
mov
and
pop
aas
sbb
cmp
mov
loop
addb
and
fiaddl
adc
stos
in
cmpsl
and
xorb
mov
or
sarl
jns
add
fistl
xor
aaa
out
shrb
nop
sub
fstpt
in
mov
push
cmp
and
pushf
adc
fmull
iret
add
or
inc
push
adc
dec
cli
pop
sbb
popa
pop
hlt
dec
popl
mov
and
lock
aaa
adc
and
shll
addr16
mov
xchg
cli
mov
lds
inc
xor
lret
daa
cmc
or
sbb
pand
dec
rorl
addr16
inc
adc
inc
mov
sarb
das
fstl
xchg
push
push
lret
mov
loopne
xor
cmp
in
and
xchg
mov
scas
add
sbb
sbb
jp
mov
int
add
and
sbb
inc
pop
add
pushf
outsb
xchg
or
xchg
inc
xor
sahf
loopne
mov
movsw
arpl
stos
aaa
ret
mov
aam
bound
ljmp
das
cmpl
push
push
repz
jl
jle
dec
xorl
icebp
jne
pop
cli
les
shrb
dec
or
xchg
push
cmp
mov
ror
lcall
add
pop
sahf
mov
pop
jo
sub
lret
mov
lcall
es
in
daa
sbb
cmp
mov
mov
int
ljmp
push
jne
push
cmc
sub
in
cmp
lea
sbb
sbb
das
mov
popf
enter
popf
shlb
dec
xchg
imul
adc
add
setg
insb
inc
lret
push
div
out
fidivl
mov
jo,pt
lcall
lret
lods
jecxz
xchg
jbe
push
imul
les
cmp
imul
fcmovnu
mov
sub
outsl
pop
mov
int
jbe
inc
or
insl
push
fwait
push
inc
dec
add
mov
xchg
adc
enter
imul
push
mov
or
push
in
cli
addr16
dec
rolb
add
aas
sbbl
dec
test
push
fdivrl
jne
clc
inc
inc
test
cmpsb
mov
inc
push
add
jb
ja
sub
mov
dec
jg
lds
gs
fsubr
push
inc
or
ljmp
dec
cwtl
jae
push
cli
sub
or
push
stc
rolb
insb
lcall
xorl
xor
test
cmpsb
xchg
sbb
jecxz
pop
xchg
adc
sub
cmp
cmpsb
inc
cmp
lahf
lods
mov
add
sbb
xchg
pop
or
shlb
dec
fsubr
push
repz
enter
insb
stc
sahf
cs
shll
xchg
cmp
adcb
movsl
xlat
inc
mov
pop
jno
push
pop
xchg
xchg
sbb
xchg
and
sub
lret
cld
bound
cmp
mov
cmp
std
mov
xor
and
dec
ljmp
rcrb
lret
sub
push
ss
test
sbb
in
popf
cmp
enter
or
adc
mov
les
and
xchg
jnp
pop
das
outsb
or
push
inc
mov
inc
jmp
inc
pop
dec
int3
outsl
pusha
repnz
jg
mov
movsb
test
adc
sbb
into
add
divl
mov
cmpsl
popf
int3
push
and
jo
int3
jp
sbb
mov
repnz
lods
cltd
icebp
mov
sub
jecxz,pt
popa
jmp
adc
push
sbb
lcall
js
sub
int
clc
inc
out
inc
adc
jne
out
iret
xor
xor
push
dec
dec
mov
or
or
std
movsl
loope
xor
or
xchg
dec
mov
iret
adc
insl
sbb
fld
pop
pop
and
call
pop
mov
adc
ljmp
pushf
cmp
and
or
mov
shrl
in
hlt
pop
dec
pop
xor
add
dec
cmp
jns
notb
lahf
and
mov
es
dec
das
filds
mov
inc
or
mov
das
inc
enter
iret
fiaddl
mov
jmp
iret
popf
mov
push
in
fiadds
add
xor
filds
jg
jne
push
jmp
pminub
cmpsl
xor
mov
mov
popa
es
add
leave
popa
push
adc
pop
xchg
add
bound
inc
push
imul
xorl
pushf
subb
shlb
mov
outsb
xchg
es
xchg
mull
push
shrb
jo
sub
push
rcr
enter
or
fwait
and
leave
js
scas
out
cmpb
enter
jo
xchg
jp
jo
in
lds
mov
cmp
and
out
xchg
sti
push
divl
mov
or
pop
cmp
mov
mov
scas
test
jl
adc
dec
sbb
jle
jne
xor
cmpl
movsl
sahf
test
sbb
fmuls
cmpsl
imul
cmp
dec
in
cs
call
shrb
stos
sub
out
orb
jae
sbb
loop
mov
out
aaa
cmp
mov
push
pop
fnstenv
mov
mov
push
les
clc
adc
pop
je
mov
jecxz
sbb
fistl
sti
insl
and
mov
inc
sub
jmp
cmp
pushf
jo
out
dec
jae
aas
int
or
add
jne
inc
enter
xor
daa
adc
fadd
jno
add
sbb
fwait
xor
out
jnp
sub
test
push
dec
and
fdivl
in
das
scas
loope
aaa
aam
and
pop
stos
adc
nop
addr16
imul
imul
dec
mov
push
test
jnp
cmc
test
loop
jle
into
mov
test
jnp
scas
or
cmp
or
pop
idivb
mov
pop
ja
stos
lcall
cmpsb
ljmp
iret
mov
pop
pop
cmp
cld
test
lods
ds
mov
cli
inc
mov
lods
xchg
pushf
xchg
cld
fsubr
pop
out
mov
fsts
out
sbb
jmp
imul
ljmp
pop
data16
movsb
and
pop
sbb
dec
insl
mov
stos
xor
movaps
inc
pop
enter
xor
add
and
mov
sub
std
imul
jecxz
mov
and
sub
jne
jbe
xchg
ljmp
xor
xor
bound
adcb
movsb
insl
emms
fnstenv
pop
jno
sbb
sub
xor
jbe
or
ficompl
sub
xor
loopne
and
or
push
cld
mov
add
negb
or
pop
adc
cmpsb
repnz
mov
cmp
push
pop
jge
dec
test
jg
int
cli
dec
call
filds
sub
fldcw
mov
cmpsl
jmp
or
clc
jge
sahf
pop
push
dec
cmp
sti
stos
je
mov
dec
push
rcll
mov
sbb
jbe
es
or
test
scas
fs
ss
jle
sbb
jmp
je
hlt
xchg
lcall
xlat
inc
or
cld
into
push
test
xchg
xchg
lcall
fs
mov
cld
fsts
hlt
cmp
scas
out
mov
push
sahf
std
xchg
outsb
fucomp
jg
adc
cmpb
xchg
stos
test
cmpsb
push
dec
fsts
mov
jle
sbb
adc
movsb
xchg
sub
cmp
adc
cltd
stos
mov
cmp
push
pop
mov
outsl
jo
add
xor
sub
aaa
jnp
pusha
sti
jb
cmp
sbb
mov
push
in
jl
xchg
jae
and
fbld
std
inc
in
insb
sbb
xor
lds
cli
xlat
mov
shrb
mov
jg
inc
push
fistpl
inc
sub
repnz
add
ret
ss
adc
cmp
xchg
repnz
cmc
repz
cmp
jnp
push
fwait
int
push
mov
sbb
ljmp
lods
dec
es
int
movsl
fnstcw
jae
cmp
addr16
jns
lret
ss
out
mov
stos
cmpsl
insb
dec
arpl
popf
dec
lea
mov
or
push
sbb
mov
movsl
addl
icebp
sub
mov
jp
adc
sbb
mov
out
push
insl
or
test
dec
pushf
dec
jne
incl
fsubrs
insl
push
or
adc
dec
out
inc
xor
add
mov
pusha
sub
push
or
push
xchg
dec
xchg
mov
in
or
insb
lcall
pop
push
insl
xor
std
in
rcrb
in
inc
push
mov
and
mov
stos
int
fdiv
test
popa
fsubrp
stos
iret
scas
rcrb
lods
xor
out
mov
loopne
cmpsl
or
mov
scas
sub
test
and
adc
pop
mov
mov
jl
sbb
sbb
jbe
jl
dec
mov
mov
filds
fld
je
int3
adc
xor
cmpsb
ljmp
jno
xorl
xchg
xchg
loope
jb
dec
jb
jmp
jb
xor
push
and
adc
lods
and
xchg
or
loop
inc
arpl
pop
inc
inc
imul
shlb
mov
mov
test
and
pop
inc
fxch
gs
ret
jb
js
pop
fldenvs
sbb
mov
xor
out
pop
sbb
mov
fs
aas
xlat
into
xchg
pop
or
xor
rol
sarb
xchg
iret
lahf
and
popf
cs
ljmp
call
mov
mov
imul
add
xor
movsl
into
mov
mov
es
test
mov
cmc
cli
pop
cmp
lds
testl
fsts
xor
addl
and
xor
sbb
pop
call
dec
int
lods
cs
cmpsb
or
cmp
add
nop
cmp
imul
pusha
repnz
lahf
jmp
jge
ret
inc
stos
mov
pop
lds
psubusb
subl
addr16
test
imul
dec
or
jmp
repz
pop
mov
test
sub
jecxz
cmp
leave
xchg
lods
mov
pop
jne
sarb
or
jge
jmp
push
adc
mov
jae
sbb
dec
loop
bound
and
aas
push
xchg
lods
mov
xchg
mov
add
popa
and
dec
test
sub
push
mov
dec
add
cmp
or
sub
das
subl
dec
arpl
mov
les
mov
sub
xor
dec
div
mov
ds
rclb
enter
mov
push
jecxz
pop
jl
fsub
inc
cs
popa
adc
sbb
fildl
and
popa
cltd
xor
cli
jg
and
mov
add
xor
lahf
mov
das
mov
daa
cmp
xchg
xchg
mov
outsl
aam
outsl
dec
or
mov
adc
xorb
push
lods
insb
repnz
mov
ret
mov
stc
jb
cmp
push
xor
mov
aas
cmp
xor
mov
bound
jb
dec
cld
mov
repz
adc
imul
fmull
inc
adc
mov
cmp
into
jecxz
lods
popa
dec
or
mov
and
outsl
es
mov
pop
fbld
and
aam
loopne
add
push
dec
dec
push
adc
scas
add
mov
pop
test
push
mov
jle
jae
dec
adc
fldl
sbbl
popa
roll
xchg
scas
mov
and
mov
sub
jne
lret
add
cs
lods
outsb
inc
sahf
pop
add
push
jecxz
je
cmpsb
or
std
sarb
inc
lret
xchg
mov
js
push
js
int
aad
lcall
pop
pop
fiadds
sbb
shlb
dec
cmpsl
xor
jb
repz
mov
or
jno
mov
adcl
inc
loopne
sub
or
arpl
hlt
dec
xchg
jle
mov
dec
fstps
adc
ljmp
fwait
cmpsl
inc
mov
pop
push
cltd
sbb
and
add
fsubs
adc
mov
aad
or
imul
fwait
dec
add
push
fisubl
cld
fnstcw
ds
xchg
add
adc
sbb
push
push
pop
push
cmc
lds
mov
cmp
stc
test
out
pusha
lret
adc
inc
mov
lds
js
pop
dec
adc
test
bound
push
movsb
jo
add
sbb
xor
push
in
adc
inc
lret
sti
aaa
mov
push
stos
sahf
stos
insl
inc
lret
dec
insb
mov
vunpckhpd
jae
pop
pop
adc
adcl
inc
xor
jle
cld
add
loop
roll
dec
test
cli
jae
loopne
mov
insl
xchg
scas
push
xorb
add
adc
lret
mov
mov
fucom
bound
mov
and
cmp
mov
push
adc
mov
psrad
shrl
pop
leave
divb
push
pushf
icebp
lods
mov
and
inc
sub
jne
lds
dec
jne
and
adc
push
inc
push
push
cmp
mov
sbb
outsb
cwtl
sbb
aam
inc
test
cmp
push
cmpsb
shlb
inc
out
sub
imulb
lds
mov
lret
sbb
pusha
loop
fcoms
add
xchg
and
jo
xchg
das
sub
xlat
addb
xor
test
ljmp
push
rclb
xor
adc
adc
in
nop
lods
xchg
inc
pop
sub
pop
jo
or
repnz
mov
lock
sbb
dec
jo
mov
mull
mov
fs
push
and
aam
xor
jmp
sbb
add
cmpsl
jnp
pop
loopne
and
test
cmp
jl
mov
mov
add
inc
iret
inc
je
dec
fsubs
jmp
or
jo
lock
int
pop
xchg
roll
insl
dec
dec
mov
mov
dec
pop
out
sub
mov
repz
in
push
sahf
sbb
in
out
xchg
stos
or
lret
pop
dec
cmp
mov
movsb
test
sbb
or
cmp
push
mov
loope
imull
mov
push
mov
lds
movsb
imul
or
and
sub
xchg
aaa
sub
std
lcall
inc
gs
cld
scas
aam
inc
lret
mov
sub
scas
dec
mov
or
cmp
inc
mov
ljmp
push
inc
cli
insb
es
stc
daa
xor
or
mov
jle
mov
mov
mov
adc
shlb
int3
dec
int3
adc
stc
test
cli
loopne
mov
stos
out
mov
ret
call
fisubrs
jmp
push
xor
push
daa
inc
push
psubsw
enter
mov
imul
inc
inc
mov
jl
hlt
jmp
dec
std
xchg
int3
push
imul
std
push
scas
sub
mov
jmp
repz
mov
jle
sbb
pop
outsb
call
sub
or
mov
jno
std
lcall
std
stos
push
sbb
cltd
ret
jl
pop
sahf
hlt
repz
add
dec
add
mov
jl
xchg
js
mov
test
fimull
pop
outsl
mov
or
inc
push
and
jle
call
xchg
sbb
subl
adc
icebp
jne
cmp
fiadds
jp
sahf
inc
das
jne
out
cmp
sbb
and
hlt
push
xor
add
test
cli
stos
jle
jg
movsl
dec
outsl
addr16
mov
in
jl
stc
test
xchg
inc
pusha
imulb
into
jnp
rcrl
push
xchg
inc
gs
inc
js
push
xchg
mov
loope
fcomip
adc
ret
sub
faddl
pop
aaa
cmpsl
cmpsb
arpl
jecxz
xor
scas
sbb
mov
out
outsb
inc
pop
mov
and
or
in
lods
inc
jb
or
mov
shlb
gs
fisttpl
lahf
pop
jp
das
outsl
mov
out
sub
fistl
out
mov
mov
bound
shlb
add
repz
inc
rcr
mov
aad
mov
pop
xchg
xor
test
fnstcw
jle
dec
cmp
mov
sub
or
xlat
push
aad
xchg
into
and
out
ret
xor
cmp
adc
outsb
fistps
jmp
mov
xor
std
pop
sub
test
push
loop
imulb
stos
sub
scas
popf
push
sbb
jnp
fadds
lods
subl
imul
je
fcoml
sbb
sub
mov
jl
mov
faddl
dec
nop
mov
roll
mov
std
jecxz
in
in
xor
ret
xor
dec
lcall
add
arpl
insb
jmp
repnz
hlt
fs
mov
movsb
lahf
push
dec
sti
addb
stc
ds
push
inc
mov
push
jl
scas
lock
jb
pop
push
add
ret
pop
jb
mov
pop
repnz
cmp
xor
fiaddl
loope
inc
lods
imul
ss
xchg
shr
mov
dec
adc
jbe
pop
inc
dec
ret
fucom
js
cmp
je
ss
adc
sub
mov
add
in
push
jne
or
or
xchg
jae,pn
cmp
push
out
pop
mov
mov
xchg
mov
ret
mov
push
jge
sub
arpl
inc
push
or
jno
dec
dec
out
or
subb
inc
enter
insl
dec
or
stc
stos
fnsave
add
mov
and
sahf
call
xchg
sti
or
jbe
std
sahf
loope
sbb
or
mov
sbbl
push
or
out
fists
jae
dec
cs
and
inc
fstp
into
cmc
jno
mov
jmp
mov
insl
cmpsl
pop
mov
outsl
pop
jle
sub
sub
ds
out
rcrb
lret
cmp
jae
cwtl
cld
jmp
leave
imul
cmp
add
push
mov
and
sub
inc
and
and
xor
mov
lock
xchg
adc
fwait
sbb
stc
fidivs
jp
and
cmpsl
xchg
jns
push
fidivrl
in
xchg
push
stos
out
or
fmull
bound
or
in
push
cli
xchg
mov
loop
rcrl
push
mov
rcll
pop
jb
ficoml
pop
cmp
pop
xlat
xchg
add
and
xor
add
mov
pop
inc
jnp
out
and
test
lahf
mov
inc
in
jecxz
ja
dec
dec
pop
shlb
mov
sbb
sbb
cmp
pop
out
mov
rcl
xor
dec
dec
cwtl
fdiv
dec
pop
ljmp
js
scas
and
jecxz
or
push
adc
pop
jns
or
xor
outsl
jae
mov
jp
lock
and
into
or
inc
xorb
sbb
xor
mov
dec
lock
test
mov
icebp
mov
bound
jne
fldt
sbb
sub
push
pushf
adcl
mov
adc
aam
push
movsb
pop
fnstcw
fs
adc
hlt
mov
xor
xor
lret
xor
lock
int3
cmp
ret
cli
xor
lret
cmp
add
cmp
mov
mov
mov
mov
aad
popa
pop
movsl
mov
in
cltd
or
push
popa
adc
popa
insl
mov
dec
mov
imul
shlb
jbe
xchg
mov
pushf
cmp
inc
shrl
mov
pushw
out
addb
inc
adc
stos
or
cmpsl
adc
sub
mov
xor
jl
mov
cld
and
stos
add
add
jmp
lss
mov
pop
adcl
fcmovb
aaa
push
in
jg
add
lret
clc
aas
int
mov
sbb
loope
std
jae
inc
cmpsb
adc
pop
mov
mov
xor
call
push
mov
mov
and
or
pop
mov
sub
lock
add
rorb
dec
inc
cs
orl
out
ret
popa
in
fcom
push
in
mov
push
ror
int
stc
mov
adcb
push
int3
mov
mov
aam
cmp
outsl
xchg
arpl
inc
dec
ss
mov
inc
fcmovne
repnz
push
mov
popf
xor
out
sub
cltd
lea
cmp
push
shrb
mov
aam
or
sbb
scas
sahf
pop
xor
and
lock
pop
cltd
rorb
adc
fldenv
test
in
dec
mov
test
iret
jge
jnp
test
mov
jo
sti
mov
das
sub
push
jbe
mov
and
loope
fsub
les
cmp
in
dec
inc
data16
jg
fwait
imul
movsl
arpl
inc
sub
push
jno
popa
mov
int3
mov
lods
push
mov
js
pop
push
adcl
sbb
out
and
mov
aaa
inc
push
adc
cmc
jnp
jmp
stos
repnz
xor
clc
xchg
or
cmp
jle
rcrb
jg
outsb
mov
movsb
out
mov
push
jne
mov
fwait
mov
mov
mov
dec
pop
fstps
mov
adc
push
dec
movl
rorl
in
sarl
out
inc
outsl
pop
popf
or
adc
mov
pop
jo
xchg
mov
pop
pop
cltd
fcoml
inc
cmpsl
sbb
mov
push
out
push
mov
jge
icebp
daa
xlat
loope
outsb
mov
cld
sbb
inc
sbb
es
dec
inc
test
mov
sbb
inc
fstps
test
std
add
and
fmull
pop
cli
pop
mov
pop
push
cld
cmpsb
push
hlt
or
mov
and
sub
stc
mov
rorb
sarl
pushf
xchg
orl
sbbl
inc
push
sarb
or
jge
repz
adc
js
cmp
addb
lods
cmp
inc
and
adc
or
incb
imul
lds
dec
add
or
bound
lcall
pushf
sub
inc
dec
mov
pop
ja
das
inc
pop
call
sti
ljmp
fidivrs
in
rcl
mov
mov
test
cmp
lods
push
stos
lahf
mov
das
add
mov
sub
lods
pop
xor
int3
enter
mov
push
cmp
iret
popa
inc
push
pusha
adcb
lret
nop
add
mov
push
mov
mov
pop
add
cmp
pop
mov
xchg
inc
insb
fisubrs
jg
popf
or
pop
movsl
mov
push
dec
sbb
sub
jae
mov
int3
xor
dec
or
in
dec
aam
pusha
lods
push
mov
stos
cmp
push
inc
loopne
imul
inc
mov
add
dec
ja
popf
lahf
adc
ss
icebp
push
fildll
call
jp
push
cmp
mov
scas
xor
cli
testb
les
repnz
mov
mov
add
fwait
mov
cld
mov
pop
or
in
aad
mov
xchg
dec
out
sbb
ror
and
mov
decb
ret
aad
pop
xchg
test
popa
dec
jne
dec
lea
sub
ljmp
data16
cmp
fs
and
dec
xchg
out
pop
nop
push
and
pop
cmp
sbb
pop
jnp
or
mov
sub
mov
xchg
ja
fildl
xchg
lahf
xor
cmp
pop
lock
xchg
add
ffree
int
inc
pop
mov
push
add
pusha
js
add
sarb
jno
xor
mov
or
sbb
aas
cmp
cmc
repz
ja
ds
lds
sbb
pop
fistl
and
bound
pushf
cmp
dec
add
lea
sarb
nop
mov
out
cmp
addl
pop
mov
adc
cmp
fstpt
leave
or
push
pushf
jo
jbe
repnz
mov
adc
shll
xor
loope
cltd
pusha
adc
mov
notb
into
xchg
xchg
push
cld
add
jb
mov
imul
andl
add
mov
mov
jae
ds
iret
outsl
xchg
ret
xchg
xchg
push
xchg
mov
and
test
push
imul
fs
or
mov
pop
jp
push
les
out
xor
xor
mov
adc
movsb
add
bound
lds
rcl
sub
add
mov
adcb
xchg
mov
inc
sub
add
xchg
jge
aam
add
dec
cmp
sub
sbbl
dec
lods
cmp
push
nop
decb
loope
cwtl
in
mov
mov
xor
xchg
jne
mov
add
loop
rcl
imul
xor
push
cs
daa
loop
and
in
lods
mov
movsbl
add
lahf
or
test
pushf
add
xchg
push
ds
adc
lock
inc
pop
jmp
mov
jecxz
push
or
insl
es
out
inc
loope
pop
pop
pop
in
enter
cmp
nop
ret
adc
cmp
mov
push
movzbl
aad
jle
mov
add
cwtl
cmp
std
pop
jle
sub
hlt
incb
pop
stos
movsl
sar
sub
jle
mov
clc
idivb
rcll
lahf
pop
pop
xlat
push
daa
shlb
or
sub
fbstp
push
xlat
cmpl
dec
fnstsw
stos
or
mov
iret
cmp
pop
rcll
push
jl
inc
sbb
jb
inc
push
sahf
pop
jo
das
add
dec
cmp
or
ljmp
shll
lahf
lahf
jmp
divb
arpl
filds
push
movsb
sbb
rcll
adc
fdivl
test
mov
jbe
or
movsb
sub
and
sbb
push
xlat
xor
aaa
xchg
out
call
push
push
lock
jecxz
jge
lea
dec
clc
dec
imul
mov
cmp
mov
bound
jno
fadds
cmpsb
sti
mov
test
cmpsl
mov
xlat
ds
ljmp
dec
sub
lret
pop
out
aaa
dec
fildll
sub
lods
int3
jb
adc
pop
js
jnp
or
out
ds
mov
xor
add
adc
pushf
adc
inc
xor
lods
xchg
add
adc
mov
sahf
shrl
cmp
cs
push
popa
cmp
lock
and
jge
dec
add
jbe
lahf
inc
sti
lods
mov
addl
das
jg
dec
bound
push
ljmp
xor
xor
xchg
xchg
dec
mov
pop
jmp
cwtl
push
and
cltd
fimull
xor
rcrb
mov
fnstenv
loop
inc
cmp
scas
stos
test
sti
xor
sub
add
movsl
and
add
sbb
iret
fildl
xchg
add
hlt
loop
adc
pop
outsl
push
adcb
mov
out
mov
or
pusha
mov
jae
sbb
add
lods
mov
mov
dec
xor
gs
rorb
jae
movsl
fwait
ja
mov
pop
push
fisubs
les
inc
sbb
push
mov
or
add
jmp
push
xchg
pushl
add
xchg
sub
dec
outsl
fisubl
lods
push
inc
add
cmp
std
or
jne
mov
pop
xlat
ret
inc
clc
pusha
or
fldcw
push
rcrb
loop
jb
outsb
inc
push
adc
xchg
pushl
hlt
loope
dec
cmpl
stos
and
out
xchg
push
mov
test
aaa
test
add
jae
pusha
or
fists
and
push
sbb
mov
mov
pop
inc
and
icebp
inc
jl
cs
mov
mul
out
push
and
push
xchg
xor
jge
sub
in
jl
je
push
int
sub
mov
jle
sub
xor
filds
jmp
ja
add
mov
jge
scas
out
push
add
cli
or
mov
paddsw
lods
or
in
cmpb
cmp
cmp
les
mov
add
test
mov
sti
ret
jnp
xchg
fwait
mov
inc
lock
cld
cmpsl
mov
outsb
jne
and
imul
push
loope
add
push
dec
push
das
aad
cmp
sbb
loope
pop
adc
imul
mov
aaa
cmpsb
jo
adc
cwtl
fwait
aaa
gs
push
or
imul
sbb
test
notl
push
loope
filds
dec
insl
ficoml
push
cltd
add
clc
nop
sbb
or
push
mov
cltd
pop
fwait
push
dec
movsb
sbb
or
inc
mov
add
fists
fldcw
push
movsb
imul
sbb
pop
mov
adc
fadds
pop
cs
sti
negl
pop
mov
mov
add
dec
fdivrs
push
add
pop
idivl
xor
stos
mov
repz
pop
mov
jne
pop
adc
xchg
xchg
cwtl
push
std
cmp
dec
test
sub
and
outsl
sahf
and
sbb
fcoml
out
sub
jns
cwtl
daa
push
xchg
leave
subl
das
pop
iret
lea
sbb
popf
and
xor
mov
fs
fmull
mov
test
xchg
mov
push
std
or
outsl
pusha
sbb
ror
ljmp
test
into
fsubp
mov
lret
inc
test
mov
and
sbbl
testb
cmpsl
lea
in
cld
cmp
push
mov
js
inc
movsb
outsb
stos
jb
adc
and
jmp
sub
adc
xlat
mov
lret
into
pop
data16
cmp
popf
stos
pop
inc
stos
cmp
xchg
inc
popf
dec
adc
pop
jp
mov
pop
jmp
mov
push
rorl
subl
arpl
loop
rcrl
arpl
aam
push
sub
and
iret
es
push
shrb
test
lret
leave
pop
sub
movsb
clc
in
fisubrl
mov
js
pop
test
bound
mov
cmp
mov
inc
mov
jae
mov
sbb
adc
sbb
or
andl
inc
fdivrl
ret
lds
les
in
add
sbb
icebp
sub
pcmpgtd
mov
aad
dec
das
or
add
lods
jne
xchg
test
lea
cld
or
aaa
insl
outsb
std
xchg
idivl
inc
jmp
scas
xchg
mov
jl
mov
clc
push
clc
sarl
push
lods
jns
sub
jnp
ja
adc
mov
cld
les
subl
sbb
push
mov
lcall
xor
xchg
add
leave
clc
adc
test
pop
jecxz
fcompl
test
fbstp
lods
xchg
lods
or
and
cmpsb
jnp
bound
loopne
inc
arpl
mov
outsl
push
out
adc
or
jmp
stos
cwtl
add
jmp
jns
sbb
mov
js
mov
lret
loope
xchg
sbb
xlat
fisttps
or
pop
cli
mov
fs
scas
int3
cli
aas
mov
xorb
xchg
setns
les
xor
xor
cld
pushf
fsubrs
in
or
shll
sub
jno
iret
shll
sbb
sti
scas
xlat
outsb
subb
mov
xor
push
and
add
sbb
call
sub
scas
cvtps2pi
add
mov
bswap
mov
lods
andb
mov
pop
and
sahf
pop
mov
xlat
dec
cmc
add
nop
test
cwtl
repz
mov
repnz
jnp
stos
nop
out
mov
adc
ds
cmp
inc
arpl
push
inc
jne
imul
sbb
mov
cli
cs
bndstx
stos
test
push
inc
push
call
pop
pop
mov
andb
mov
in
daa
pop
mov
icebp
inc
or
or
icebp
push
loop
jns
imul
jmp
jmp
and
jns
cli
lods
xor
pop
sub
add
push
cwtl
and
stos
aad
inc
test
or
cld
imul
pop
insl
xchg
aam
cmp
pop
cmc
pushf
cltd
daa
pop
iret
inc
insl
sub
dec
pop
out
scas
pop
mov
call
jp
mov
jge
sub
fs
sbb
repnz
js
mov
xchg
int3
ljmp
inc
ret
shll
cltd
lcall
sub
cmc
mov
sbb
lea
or
mov
out
pop
push
sbb
rorb
aaa
dec
ja
fcomps
sbb
stos
push
sarb
stos
mov
cmp
popf
mov
lret
jge
mov
out
inc
inc
sub
gs
daa
je
jg
add
in
adc
stos
into
jle
loope
gs
add
mov
imul
xchg
je
or
jnp
add
dec
call
cmp
inc
ljmp
and
cmc
lcall
mov
mov
mov
movsl
mov
xor
arpl
cmpsl
repz
push
cmp
add
push
mul
ret
and
es
and
pop
stc
adc
lock
sbb
pop
aaa
in
mov
fwait
addr16
in
mull
test
xor
stos
fcom
or
dec
pusha
pushf
les
cwtl
mov
fs
iret
lahf
mov
jg
jg
lret
aas
add
cmp
sub
fcompl
lods
cmc
daa
dec
xlat
mov
leave
hlt
or
pop
pop
loope
push
arpl
nop
jmp
insb
jmp
xor
cmp
mov
and
rorb
adc
xchg
test
pop
sub
adc
add
test
rcr
nop
sbb
fdivp
sub
xlat
fstps
in
and
lock
xor
pusha
mov
loopne
cmpsl
rcll
mov
repnz
pop
ljmp
inc
movsb
sti
aad
cmp
and
out
adc
lea
or
sbb
scas
jbe
cmp
and
mov
xchg
xchg
push
mov
push
jp
jmp
insl
cmpsl
dec
paddsb
xchg
mov
mov
cmp
mov
sbb
add
sbb
push
mov
test
add
ljmp
dec
div
and
mov
stc
pop
addb
sbb
cld
cmpl
rcr
lret
xchg
cmp
mov
sub
insl
movsb
out
sbb
pop
jmp
pop
jecxz
xchg
mov
rcrl
icebp
mov
test
sbb
mov
jne
in
xchg
mov
loope
dec
mov
push
movsb
arpl
sub
outsb
sbb
daa
out
test
js,pt
test
loope
xchg
int
xor
fsub
jl
loop
push
ja
fwait
sti
daa
xor
mov
rorl
icebp
insl
clc
lods
test
push
mov
push
mov
push
or
cli
jbe
add
movsl
sub
in
xchg
xor
jnp
pushf
jecxz
rcr
xor
pop
jbe
push
sbb
mov
xor
notb
pop
jecxz
add
test
jmp
out
imul
cs
enter
in
repz
sub
xor
xchg
add
cmp
popa
add
sbb
push
test
push
loope
or
mov
lcall
push
jl
mov
into
dec
imulb
fidivl
lock
cmpsl
or
stos
movsb
mov
push
add
test
fs
mov
stos
ficompl
mov
loop
mov
stos
sti
sub
mov
stos
mov
cmpsb
lea
push
add
jnp
add
sub
pop
mov
mov
out
testb
xchg
fcomps
mov
not
imul
and
out
mov
fdivrs
test
repz
fcomps
pop
fldt
jg
scas
pop
add
dec
mov
sub
cwtl
mov
or
dec
imul
fisubs
cmpsb
adc
xchg
dec
popf
and
dec
jp
push
mov
adc
jns
popf
or
pop
ja
lcall
xchg
adc
mov
inc
cmpsb
fadd
xorl
push
cmc
mov
mov
icebp
stc
aaa
aas
fwait
mov
jae
idivb
and
push
xchg
add
ficoml
outsl
fcmovnbe
pop
loope
dec
mov
mov
andl
or
das
dec
adcl
push
push
xor
stc
lea
inc
test
rcl
mov
xor
inc
das
ret
mov
fwait
cltd
mov
lahf
inc
je
jo
push
pop
nop
push
pmuludq
adc
mov
jns
inc
pop
scas
lret
xchg
xor
pop
push
nop
dec
movsb
hlt
add
in
daa
dec
cmp
arpl
cmp
pop
jnp
movsl
jecxz
sub
nop
inc
jg
or
cld
xchg
int3
popl
push
insl
jecxz
mov
cli
rolb
shll
andl
je
std
mov
jnp
out
or
filds
sarl
cmp
pop
mulb
jbe
mov
js
roll
or
cwtl
push
imul
daa
fdivr
cltd
inc
sub
daa
lret
xlat
pop
insl
fadd
imul
push
push
aad
stc
mov
xorb
cmpl
outsl
or
std
push
fwait
sahf
cwtl
pusha
cmp
je
mov
jns
stc
xchg
lahf
inc
lret
pop
dec
cmpsl
xchg
mov
lret
adc
pop
cld
subb
incb
inc
add
std
mov
xchg
test
ja
ret
mov
mov
sbb
mov
or
sarl
xor
xchg
lret
mov
pop
jmp
js
dec
and
and
pop
mov
xchg
pop
in
inc
inc
jnp
sub
and
mov
or
jo
mov
call
cmp
inc
xchg
add
mov
cmp
push
inc
sahf
vpunpcklbw
mov
lods
leave
fwait
inc
addr16
pop
xor
outsb
pop
ja
mov
or
scas
ret
pushf
adcb
out
sbb
and
add
mov
jae
cmpsl
push
xor
aad
jg
call
fcomps
cmp
mull
cmpsl
inc
pusha
test
pop
xchg
pop
popa
testl
jb
pop
stos
fdivr
enter
sub
out
cmc
bound
cwtl
xchg
popa
sarb
inc
pop
jns
mov
and
mov
and
jo
call
add
cmp
xor
push
push
pop
mov
mov
sbb
stc
xor
cmp
je
sbb
mov
adc
inc
mov
sub
dec
loop
pop
in
add
scas
or
push
imul
popa
or
lods
mov
jge
gs
xlat
lcall
cmp
rorb
xor
arpl
push
mov
test
ds
xchg
mov
inc
push
shll
xchg
rcrl
inc
fmuls
subb
xchg
inc
call
popa
sbb
inc
enter
movsb
sub
aas
or
add
gs
or
inc
popa
inc
lcall
test
and
lods
pushf
mov
sbb
je
test
push
sar
sub
jg
cwtl
mov
shlb
adc
sub
out
les
in
bound
leave
inc
mov
out
lods
sub
lods
mov
loopne
cwtl
jecxz
push
clc
iret
jl
jo
nop
sub
pop
daa
in
sub
outsb
loop
sbb
imul
popf
and
mov
dec
pop
std
inc
sub
xorl
testb
pop
test
mov
mov
mov
push
xor
test
push
xchg
or
cmp
lret
fistl
xchg
decb
out
sbbb
adc
sar
xchg
mov
push
pop
stc
rep
test
out
adc
mov
pushf
mov
bnd
int
fcomps
in
iret
loopne,pn
rcr
jae
xchg
pop
test
and
mov
pop
pop
or
jne
mov
add
push
test
lret
push
shlb
mov
push
jne
aas
popf
cmp
out
repnz
or
dec
add
shlb
shrb
inc
in
popf
ljmp
lods
insb
cld
cltd
mov
stc
or
adc
iret
xchg
push
and
in
in
call
mov
push
inc
cmp
push
cmc
ss
sub
and
add
ficompl
xor
call
sbb
inc
jle
or
dec
jo
jmp
ret
aaa
jb
mov
lahf
inc
fmull
cmp
daa
sub
out
pop
add
cmp
and
mov
scas
mov
mov
sbb
pushf
adc
repz
clc
fcomps
inc
les
push
mov
in
adc
push
or
in
dec
push
pop
out
mov
sbbl
pushf
mov
aad
push
xchg
or
outsl
loop
push
pushf
push
sbb
loope
outsb
inc
mov
ds
cmpsl
bound
push
test
testb
pop
lret
sahf
mov
ss
push
mov
call
sub
xchg
clc
data16
out
mov
rorl
in
pop
movsb
out
aam
daa
imul
cmp
push
xor
notl
addl
mov
mov
gs
loopne
add
mov
cmp
cmp
stos
cmp
mov
pop
clc
in
cmp
test
in
mov
mov
fildll
rcrb
mov
fwait
aas
xchg
pop
imul
or
cld
xor
jnp
mov
mov
sbb
and
mov
lret
ror
in
adc
pop
enter
loop
loop
jns
stos
jno
mov
mov
push
sub
add
sub
and
sub
mov
ja
out
mov
test
clc
adc
mov
push
jl,pn
nop
sbb
sbb
sti
int
mov
xlat
int3
xchg
xchg
xchg
mov
out
out
fwait
lds
int3
add
loopne
lods
push
mov
sti
decl
xchg
pop
sub
dec
and
mov
or
xlat
and
and
jecxz
sbb
popf
dec
rcrb
or
clc
push
jge
notb
inc
enter
test
sub
sbbl
mov
push
popa
dec
lods
mov
jmp
or
xor
scas
dec
xor
lods
xor
push
xchg
movsl
repz
inc
xchg
int3
mov
dec
sbb
repnz
and
pushf
ds
fmuls
mov
pop
cwtl
xchg
xchg
jbe
mov
and
or
pop
mov
test
fldcw
fscale
xchg
aam
xchg
push
sbb
ss
sahf
sbb
xor
jne
mov
sbb
xor
dec
mov
aad
mov
adc
mov
scas
insl
fcmove
test
mov
xchg
sbb
mov
sbb
push
push
scas
mov
jmp
xchg
mov
or
scas
lock
inc
es
jg
xor
and
shl
popf
int3
cmpb
pop
jg
or
test
jle
mov
xchg
mov
rorl
subb
jmp
mov
pop
sub
pusha
pop
scas
scas
pop
push
int3
push
jmp
jecxz
jecxz
loopne
xor
popa
adc
fs
les
sub
imul
inc
into
dec
sub
sbb
jl
jo
mov
lds
outsb
and
in
add
icebp
jge
in
or
cld
cmpsl
stos
lret
mov
xor
nopl
mov
fwait
testl
repnz
es
out
out
mov
push
ss
lcall
divl
sub
and
mov
pop
xor
mov
lock
popa
faddp
jae
push
inc
call
jns
data16
mov
lret
push
rclb
rclb
sbb
cwtl
pop
xchg
shrb
popf
out
add
sub
mov
fidivrs
orl
xlat
pop
mov
rcrb
repz
sub
jae
jo
imul
mov
sub
xor
jmp
jle
insb
xor
jno
cmp
mov
inc
lock
scas
lret
dec
popf
mov
sub
xchg
jmp
sub
push
cmp
xchg
in
sbb
xor
mov
mov
mul
sub
jg
test
sarl
dec
push
je
adc
and
mov
cmpsl
adcl
ljmp
jmp
pop
icebp
aam
rolb
aad
mov
pop
xchg
add
jno
aas
in
push
sarb
imul
pop
and
iret
add
lea
jmp
xchg
jge
jns
clc
mov
cmp
cmp
imul
lahf
push
shrb
and
es
mov
mov
lock
pop
xchg
enter
std
stc
adc
in
lods
and
xchg
imul
push
inc
ret
inc
sahf
mov
inc
subl
aad
push
cmp
clc
xor
fldenv
ret
pushf
in
cmp
jno
xor
and
outsl
pop
add
mov
hlt
fwait
in
in
push
loopne
jecxz
stos
add
cmp
mov
lret
pop
lahf
movsb
outsl
shr
lret
sarb
cmp
jns
push
add
mov
jbe
les
mov
sbb
gs
scas
movsl
shlb
pushf
repz
dec
js
jbe
sub
idivl
cld
std
pushf
jg
lea
dec
xchg
adc
jno
dec
arpl
push
jge
inc
lea
repz
mov
orb
daa
mov
jl
das
mov
out
jne
mov
mov
test
addl
pop
rolb
mov
jnp
jl
inc
cmp
in
jmp
sbb
adc
loope
xlat
dec
int
cltd
push
sbb
loopne
sbb
sbb
sbb
sub
pop
pop
or
scas
xchg
sbb
mov
leave
mov
pop
mov
ds
in
pop
daa
jbe
add
xchg
rorl
push
push
cmc
cmc
xorl
int
jbe
and
test
push
enter
je
scas
out
mov
aas
mov
push
push
jnp
cwtl
repnz
mov
adc
neg
in
mov
dec
out
dec
pop
imull
add
cmc
lea
ret
and
in
sub
lcall
aas
mov
mov
adc
mov
mov
sahf
loopne
dec
dec
jg
insl
xchg
movl
inc
lcall
in
fistl
mov
xor
add
adc
push
sub
lahf
push
xchg
clc
mov
int
test
enter
sahf
orb
jb
test
das
sbb
or
and
mov
idivb
pushf
dec
insl
xor
jmp
fs
and
out
or
orb
mov
push
mov
mov
fisubrs
add
or
test
stos
jecxz
leave
dec
insl
sbb
ljmp
push
pushl
xchg
sarl
xchg
push
xor
lds
fstpt
add
xchg
aad
lret
mov
jnp
lds
adc
and
and
jge
adc
add
bound
sbb
mov
jmp
push
icebp
pushf
popa
lea
stos
jo
mov
stc
out
sahf
shrl
push
nop
rcrl
iret
mov
mov
pop
cmc
cmc
push
pop
jp
or
mov
adc
push
xlat
dec
js
push
mov
sub
and
pop
adc
lahf
mov
in
jge
jl
xor
loopne
push
cli
cmpl
pusha
sbb
ds
add
pop
mov
add
scas
les
rorl
sbb
in
popf
jecxz
xchg
cmc
dec
cwtl
jnp
sarb
push
mov
sub
repnz
pop
sbb
pmulhuw
dec
test
cwtl
outsl
mov
dec
jl
xchg
mov
or
cwtl
pop
adc
push
sub
imul
cmpsl
into
xchg
sarb
add
cltd
data16
add
mov
sbb
ficomps
adc
or
fldl
mov
push
ds
nop
inc
pop
add
fs
jne
lods
push
sbb
addr16
into
xlat
ret
and
mov
xchg
xchg
mov
sub
adcb
mov
mov
mov
out
outsl
xchg
xor
pusha
popl
fldl
or
xor
and
das
lds
lcall
aas
inc
mov
sub
ss
les
sub
or
jne
pop
rcrl
dec
into
push
inc
lods
xor
mov
push
movsl
push
aad
mov
sub
sbb
enter
out
cltd
mov
mov
xor
loop
pop
xor
cmp
js
test
sub
cmp
pushf
dec
push
lcall
jbe
jge
pop
addr16
pop
test
add
fisttpll
stos
jne
dec
adc
iret
loopne
outsl
je
iret
dec
push
dec
and
ds
in
icebp
dec
adc
arpl
sub
or
push
jae
push
nop
shll
vpmulhw
push
insl
add
or
jmp
inc
push
fs
in
adc
mov
adc
mov
cld
dec
lcall
iret
sbb
out
xchg
pop
test
sbbb
inc
test
stos
sub
jns
lods
cs
movsl
xlat
cmp
cltd
jae
and
loope
inc
repnz
out
iret
xor
jnp
lcall
add
inc
mov
insb
scas
adc
cmpsb
inc
pop
cmp
mov
sbb
adcb
mov
sbb
lods
push
rcrl
xchg
and
fsubr
ja
mov
xorl
dec
sub
test
aaa
push
mov
insl
lcall
subb
cmp
sahf
addr16
in
add
lret
outsl
mov
loope
mov
fnstsw
arpl
adc
mov
fstpt
sahf
push
dec
cmp
jae
push
das
ret
push
int
mov
cmp
pop
push
mov
adc
into
jecxz
mov
outsl
or
and
push
mov
xor
push
imul
cmpl
div
imul
mov
sahf
inc
jno
into
mov
xor
cmp
mov
shrl
loopne
xchg
adcb
adc
adc
cmpsl
mov
push
xor
jne
xor
xchg
test
dec
sbb
mov
icebp
icebp
dec
and
iret
aam
adc
shl
add
aas
pusha
or
and
sbb
or
mov
shlb
mov
sub
mov
fadds
jecxz
movsb
lcall
add
adc
scas
loopne
stc
out
test
stos
jns
dec
dec
dec
dec
aaa
sub
frstor
insb
out
xchg
mov
into
cld
jb
mov
jmp
inc
ljmp
xchg
lahf
dec
lret
ja
add
data16
stos
cmp
sbb
imul
adc
pop
das
xchg
pop
imul
cltd
mov
mov
pop
pop
dec
daa
fidivs
lret
cs
aad
or
push
fwait
or
jbe
iret
mov
sti
mov
int3
pop
insl
punpcklbw
test
inc
pop
add
xor
jmp
pop
or
sub
jnp
shlb
pusha
cmp
dec
ss
pop
sti
add
mov
sarb
mov
adcl
and
in
daa
loope
and
dec
xchg
dec
loope
adc
out
mov
pusha
movsl
push
jecxz
cmp
sbb
out
mov
xor
sarl
pop
scas
mov
mov
fcoml
xchg
jge
test
sbb
pop
mov
xchg
hlt
dec
jle
mov
or
cld
add
add
dec
push
xlat
adc
jae
lock
rorl
cmp
out
mov
mov
lahf
adc
and
out
cld
mov
push
repnz
enter
ja
mov
inc
test
in
jmp
dec
cmp
jp
dec
sbb
adc
in
mov
push
jae
inc
jbe
aad
push
cs
pop
cmp
push
pop
push
icebp
fiadds
sbbl
pop
or
fisttpll
hlt
sbb
hlt
sub
inc
lret
inc
test
mov
pop
lcall
out
mov
inc
pop
cs
out
lret
mov
inc
out
mov
cltd
pop
out
or
add
leave
sub
cld
mov
or
dec
or
push
jmp
inc
fst
push
das
into
scas
push
mov
pushf
add
sub
fists
xor
inc
push
fucomp
jmp
jno
cmp
insb
dec
test
js
popa
test
mov
sbb
xor
or
push
test
cmp
sbb
pusha
in
enter
cld
sbb
cmp
mov
lods
out
test
mov
mov
dec
or
push
dec
sahf
sahf
push
cli
add
sbb
add
xor
fwait
dec
xor
test
ds
nop
repnz
lret
sub
jne
lahf
in
test
sahf
sahf
push
pushf
fldenv
mov
test
out
cmp
adc
sbbl
cmpsl
adc
mov
jge
cmp
mov
xchg
aas
addr16
lret
or
jo
cmp
dec
xor
xchg
mov
cwtl
adc
sbb
test
jns
ficoms
fldl
xchg
xorb
loop
popa
out
fildll
rorl
out
lret
int3
or
sub
pop
pop
mov
mov
outsl
jg
nop
gs
or
push
push
pop
pop
mov
mov
lock
adc
in
or
adc
outsl
xchg
orl
add
ret
test
mov
insb
sub
xchg
and
fmuls
dec
cmc
fldln2
cmp
lods
add
stc
pop
rorb
mov
mov
lock
vcvttss2si
insb
or
jae
and
sub
jle
lcall
sbb
mov
xchg
sub
mov
cs
cmc
test
in
inc
test
frstor
add
out
mov
inc
pop
ret
out
cltd
inc
adc
dec
nop
sub
mov
ja
loope
imul
mov
dec
in
cmp
lcall
cli
lods
and
aam
sarl
xchg
pop
in
out
inc
push
iret
xor
jecxz
lret
inc
cmp
rcrb
cmp
ljmp
push
cli
fnstenv
enter
inc
es
push
popf
cmp
call
xchg
mov
xchg
inc
cmp
cld
cmp
pop
pop
iret
sbb
or
rcl
flds
jno
mov
testb
sbb
aaa
sub
rol
mov
pop
add
jnp
mov
sti
pushf
enter
imulb
pushf
pop
data16
dec
lea
push
dec
push
dec
mov
add
jl
lock
cs
inc
aas
cmp
lahf
movsl
adc
fcoms
add
xor
lock
daa
push
in
xchg
mov
enter
cmp
push
rolb
ja
or
pop
cmp
imul
jmp
in
cmp
into
lret
inc
mov
mov
pop
dec
xchg
mov
jle
push
movsb
popf
sbb
mov
cltd
jnp
push
inc
pop
loope
fdivrs
dec
xor
lods
adc
mov
xlat
iret
pop
mov
jmp
out
jl
xor
lahf
xor
js
adc
xor
dec
outsb
or
mov
iret
shll
add
push
sbbb
pusha
movsb
sti
mov
cli
sti
xchg
jle
lret
je
jb
push
lods
imul
sahf
add
cwtl
mov
inc
repz
sarl
cltd
mov
and
jbe
sub
xlat
lcall
and
dec
sbb
jae
cmp
loopne
jne
inc
lods
and
rcrb
andb
push
mov
repnz
add
lds
and
pop
in
dec
sub
repz
add
ss
out
test
pop
pop
aaa
lret
cmc
mov
lahf
add
xchg
pop
xor
push
leave
pop
xor
add
inc
jmp
mov
ror
in
cmp
fwait
mov
test
rorb
es
insl
les
int
and
jae
xor
gs
hlt
add
sub
push
nop
fwait
outsb
adc
popf
adc
sub
icebp
lret
pandn
push
jg
sti
xor
inc
aam
fisubl
xchg
inc
and
and
cmp
divb
fsubl
cmc
add
pushf
stos
jns
negl
jbe
rol
xchg
sbb
das
fists
push
in
jle
mov
xor
lret
pop
scas
inc
sbb
adc
push
inc
stos
mov
test
inc
jp
scas
fwait
cmp
and
rclb
enter
dec
pushf
jg
out
or
cmpb
push
stos
outsb
fstps
aaa
loope
pop
dec
pmulhw
sub
testl
cmp
or
pop
sarb
mov
subb
inc
aas
mov
adcb
cmp
out
sub
mov
inc
mov
add
dec
or
fidivl
sbb
out
clc
mov
push
adc
js
lcall
jb
fcoml
mov
xor
push
data16
push
mov
jnp
lods
sbb
cltd
pop
sub
subl
nop
pushf
dec
dec
mov
outsl
lret
mov
fbld
and
test
stc
sub
xchg
mov
jmp
push
loope
test
test
rol
dec
pop
enter
rorb
add
mov
mov
xchg
pop
aas
adc
jae
in
loop
dec
and
adc
push
or
pusha
imulb
orl
add
pop
dec
push
inc
shl
mov
incb
xlat
data16
or
nop
pop
imul
icebp
push
ror
adc
mov
pushf
pop
lcall
or
ja
adc
add
inc
imul
mov
test
cmp
jecxz
gs
stos
pop
dec
movsb
imul
lahf
leave
mov
bound
add
sbb
scas
fcmove
dec
xchg
push
sub
add
loope
push
scas
inc
int3
rclb
pop
notb
or
rcr
dec
or
or
pop
push
xchg
movsl
test
mov
pop
cld
cmc
call
mov
cmpsl
and
popf
mov
shll
fsubp
pusha
pusha
mov
dec
adc
inc
bound
arpl
xor
dec
repnz
xchg
xor
sarb
dec
or
cmp
lods
das
pop
push
bound
ljmp
mov
push
lret
push
sbb
jno
movsb
xchg
push
mov
lods
test
cmp
punpcklbw
andl
dec
xor
push
and
sub
testl
scas
out
and
cmpsb
lahf
sbb
in
test
sbb
das
ret
pop
js
fimull
push
push
jl
out
jo
jge
sahf
scas
jae
mov
dec
xor
lcall
push
inc
cmpsl
inc
icebp
in
inc
jle
bound
aas
pop
cmovge
sub
or
or
xlat
imul
imul
rcl
mov
out
out
repz
push
push
add
push
xchg
iret
rolb
aas
test
pusha
cmc
xor
pop
sahf
arpl
pxor
or
pop
out
jns
sbb
les
insl
ljmp
cltd
mov
push
mov
or
inc
insl
out
mov
or
add
test
xchg
mov
int
aam
pop
negb
jns
mov
sub
dec
shll
insb
pushf
and
cmc
mov
js,pt
sub
fmull
andl
inc
jno
and
inc
mov
mov
mov
push
daa
push
cmp
dec
lock
push
repz
movsb
xor
and
ret
stc
test
mov
adcb
repz
loope
sub
jns
aad
test
mov
sub
cld
fwait
cmpl
mov
bound
popa
mov
fldt
sarl
mov
cld
mov
popa
add
lods
add
insb
mov
adc
in
jecxz
inc
ds
mov
sti
je
xor
enter
pop
imul
sbb
or
sbb
sbb
aad
fisttps
les
mov
sti
std
test
push
aas
addr16
fistps
loop
repz
adc
mov
lret
scas
inc
push
lret
arpl
adc
mov
negl
call
and
pusha
in
subb
lods
lock
mov
scas
xor
mov
movsl
cmp
pushf
inc
push
cmc
xor
pusha
push
xor
scas
sarb
repz
arpl
add
test
jnp
mov
popa
push
dec
pop
scas
sub
and
cli
and
es
test
xchg
inc
jmp
movsb
mov
jmp
out
cmp
push
push
jae
xchg
pusha
xchg
out
cld
sbb
cmc
xor
stc
sbb
lock
cmc
loope
adc
lahf
dec
rorl
adc
aad
aad
aas
testl
push
shll
xor
xlat
sysret
fwait
lds
jb
mov
sbb
in
outsb
icebp
xor
in
mov
or
leave
sbb
cmp
scas
cmp
xor
sbb
jne
mov
gs
or
mov
sub
push
add
inc
stos
xchg
xchg
sbb
in
lods
icebp
or
outsb
shll
stos
pusha
mov
sub
in
dec
gs
je
inc
imul
fdivl
daa
cmc
push
lahf
arpl
scas
inc
jl
sbb
pop
dec
adc
push
sti
adcl
jle
push
insb
rol
lods
mov
aad
test
nop
mov
outsl
outsl
push
or
out
cmp
jmp
cld
adc
shrb
lret
mov
mov
ds
xorb
xchg
scas
scas
scas
mov
stos
and
sahf
inc
add
xor
sbb
fldenv
out
imul
andl
or
int3
cmp
mov
ret
xchg
cli
and
sub
mov
int
cmp
loope
out
dec
cmpsl
mov
pop
sbb
cmp
insl
and
loop
add
and
cs
add
fidivrl
jns
loope
lods
add
cli
ds
jp
ja
repz
adc
loop
cmp
movsb
insb
dec
jns
cltd
std
ret
popf
cmpb
rcl
mov
lcall
mov
test
inc
scas
shlb
add
jae
adc
and
push
test
inc
addr16
mov
mov
inc
push
push
mov
je
jge
scas
jno
into
mov
outsl
ret
add
lahf
xchg
or
sub
dec
mov
mov
lret
add
enter
loopne
and
cmp
daa
sahf
dec
cmpsb
scas
mov
out
mov
inc
je
adc
mov
iret
adc
movsl
lods
jp
fists
jno
xor
and
xlat
int3
stc
or
push
lods
fwait
jno
sar
and
adc
insb
int3
loopew
pusha
xchg
sbb
dec
cli
mov
pop
inc
add
sahf
loop
ljmp
data16
cmp
xor
push
push
sahf
ss
pop
jae
dec
pop
int
das
jo
sbb
fildll
stos
pop
in
dec
inc
inc
inc
test
inc
lds
inc
fsubrs
fsts
pop
push
inc
mov
cmp
lods
cli
es
and
pop
aaa
mov
push
pop
and
orb
dec
xor
ficomps
xchg
push
xor
outsl
in
cli
mov
gs
cwtl
push
filds
stos
push
sub
push
leave
cmp
scas
and
js
mov
and
jecxz
inc
lods
jns
test
or
imul
jae
les
mov
movzwl
mov
adcb
push
ss
js
xor
mov
arpl
jg
pusha
pop
adc
inc
bound
cmp
push
xchg
scas
ret
mov
dec
pop
xchg
and
test
sub
insl
inc
xrelease
divl
adc
add
cmp
das
adc
xchg
lahf
pop
int3
cmpsl
pop
adc
jns
jle
adc
inc
ucomiss
mov
fs
aaa
pop
dec
lcall
in
adc
mov
mov
fmull
mov
mov
xchg
mov
cmp
rcll
subl
test
imul
scas
int
cltd
mov
popf
imul
stos
and
add
dec
mov
xchg
cmp
repz
mov
int
pop
dec
fwait
cld
pop
mov
mov
lret
cmp
inc
int3
lods
xchg
in
add
pop
in
aas
push
pusha
dec
xchg
mov
cmp
mov
ret
inc
or
jae
push
mov
cmp
jp
xchg
xor
mov
and
mov
or
stos
lock
add
cmpsb
sub
imul
mov
mov
enter
stc
int
mov
and
andl
push
cld
cmp
mull
int
stos
les
imul
mov
daa
popa
repnz
cmp
std
mov
sti
inc
xchg
mov
int3
dec
fcoms
ss
mov
insl
adc
sub
sub
push
dec
xor
mov
bound
xor
or
das
daa
xchg
pushf
add
mov
sbbb
sahf
out
and
rorl
loop
rcr
arpl
fmull
std
xor
rcll
addr16
jle
inc
or
dec
sbb
jno
pop
inc
ret
in
and
xchg
sbb
xchg
sub
inc
outsb
gs
lods
mov
mov
pop
or
repz
daa
popa
lea
subl
adc
jno
fstl
push
cmpsb
sbb
jg
stc
popa
fistpl
sbb
cmp
hlt
mov
mov
sub
mov
aad
imul
mov
mov
loope
inc
addl
pop
ficoml
sti
imull
sbb
or
ret
jp
pop
gs
push
shrb
push
outsb
mov
loop
leave
sbb
rcl
cmc
sbb
jo
out
jle
xlat
fwait
cmpsb
lea
pop
test
popa
mov
push
addr16
dec
mov
or
js
das
or
scas
aad
mov
push
rcll
add
pop
pop
pushf
in
inc
lea
cmp
push
test
imul
xorb
popa
lret
aad
xchg
ds
push
popa
repnz
pop
stc
xchg
roll
clc
mov
and
popa
out
push
ja
rorl
sbb
std
add
pop
shll
popf
mov
xor
push
fldenv
ds
mov
xor
lea
dec
or
cmp
insb
jecxz
lods
inc
int
push
ficompl
ret
subl
imul
push
xchg
inc
dec
sahf
xchg
push
pushf
lahf
mov
cwtl
jl
les
xchg
xlat
cld
stos
cmp
push
shr
push
inc
pop
fiaddl
and
add
fstpl
push
dec
out
ss
loop
mov
xor
add
jg
lds
pusha
mov
add
inc
arpl
push
insb
mov
dec
sub
push
mov
jmp
mov
inc
orb
nop
cmp
aad
hlt
imul
insl
aaa
imul
and
jl
insl
push
inc
lds
divps
aas
jge
out
call
cmp
dec
pop
call
and
mov
jne
popf
xchg
imul
lds
mov
and
rolb
xchg
cwtl
rorl
jb
lcall
mov
mov
js
mov
pusha
ljmp
addr16
and
mov
and
in
test
xchg
in
mov
lods
or
cltd
lahf
and
pushf
and
inc
xchg
pop
mov
push
xchg
pop
out
mov
jmp
sbb
mov
lods
push
xor
shrl
xor
aad
dec
sbb
jmp
push
fnstenv
nop
das
inc
mov
movsb
shl
fstp
xchg
aas
enterw
rcll
inc
or
cld
aam
arpl
push
inc
outsl
jmp
int
pop
int3
sbb
inc
pop
mov
fldl
jg
dec
lods
xor
mov
ljmp
jle
sub
jmp
clc
scas
dec
test
addr16
mov
popa
scas
fiaddl
mov
popa
or
bound
lock
xchg
jecxz
xchg
push
loope
push
leave
jno
daa
pop
rcrl
lret
ficompl
sbb
mov
push
add
push
inc
cmpsb
stos
jle
cwtl
loop
hlt
xchg
pop
lret
adc
fistps
rorb
imul
ljmp
movsl
cli
dec
lds
insb
adc
adc
jae
popf
cmpsl
lahf
sub
push
es
in
test
pop
mov
inc
sbb
sahf
sub
and
jb
aas
inc
or
into
fs
or
pop
out
mov
push
icebp
movsb
icebp
push
test
into
in
cld
dec
sub
pop
sbb
lods
fistpl
stos
sbb
add
xchg
int
iret
inc
pop
push
shrl
or
jbe
push
add
push
popl
mov
sbb
add
sub
push
lods
cmp
fucomip
cltd
jp
cmp
adc
inc
xchg
sbb
cmp
pushf
movsb
cli
in
cwtl
lahf
mov
add
inc
stos
into
xor
fldenv
icebp
xor
jecxz
cmc
mov
jle
mov
lock
shl
sbb
xor
dec
test
repz
xchg
cltd
jbe
pop
aam
dec
lea
mov
bound
lea
ljmp
shrl
sbb
cld
call
adc
lret
cli
popa
fisttpl
int
fnstenv
xlat
mov
fs
sbbl
insb
xor
push
inc
rcll
cmpsb
sub
push
ja
mov
add
xor
mov
push
loope
add
jmp
jno
dec
bound
addr16
mov
cmc
mov
add
jle
xor
jns
enter
into
push
jle
or
imul
sbb
push
mov
or
adc
hlt
add
call
data16
mov
mov
ret
imul
rolb
lret
arpl
xchg
add
les
and
pop
test
sti
and
mov
dec
pusha
xor
adc
and
dec
and
xlat
mov
dec
mov
repz
lods
sbb
sub
daa
insb
dec
jge
lret
push
mov
or
jne
xor
fldcw
push
rclb
jnp
xchg
in
sarb
movsb
lea
iret
pop
jmp
into
and
in
dec
add
movsb
jge
lods
jg
outsl
jecxz
in
stc
insl
push
sbb
stos
inc
sti
mov
in
jl
dec
arpl
mov
lods
xchg
adc
xchg
arpl
xchg
std
lret
int3
cs
ss
fs
int
out
frstor
sbb
gs
popa
cwtl
mov
xor
mov
push
test
xor
ja
mov
or
mov
mov
mov
in
pusha
outsb
gs
sbb
dec
jl
mov
jge
add
movsb
scas
jmp
adc
test
dec
fisubl
in
and
fmull
call
in
mov
jmp
lods
adc
mov
mov
test
nop
mov
repnz
popa
cmp
or
shr
adc
addr16
mov
aas
pop
insl
lret
je
in
pop
xadd
adcl
cmp
int3
repnz
jae
push
lds
into
pusha
leave
fsubl
clc
push
or
pop
scas
jns
push
and
pushl
mov
mov
test
xor
xor
lock
mov
addr16
stc
mov
imul
mov
test
xchg
aam
mov
fdivl
aam
leave
jecxz
inc
pop
sub
inc
bound
test
les
dec
mov
xlat
ret
mov
push
pop
xor
adc
add
pop
cmpsb
insl
shlb
aaa
jle
cmc
movsb
push
loope
cmpsl
es
outsl
cmpsb
out
mov
mov
sub
mov
sbb
xorl
cmc
cmc
or
push
mov
mov
shlb
rol
les
add
cltd
and
imul
pop
pop
enter
pusha
repnz
and
xchg
cmp
imull
jl
cmp
test
xchg
xor
sub
out
mov
cmp
jae
les
repz
pop
pop
aaa
cmpsl
and
lods
lds
mov
xor
fcmovne
fiadds
lea
push
mov
aas
mov
out
pop
cmc
ret
scas
jecxz
ret
lods
cmp
xor
in
cmc
aaa
xor
ja
cmpsl
push
mov
mov
outsb
mov
shl
push
mov
je
dec
es
leave
add
jnp
mov
repz
mov
xchg
jb
fnstsw
mov
nop
push
leave
or
and
fldcw
or
jo
sbb
pop
lret
adc
sti
stos
adc
adc
inc
xor
jecxz
xchg
out
outsl
sub
push
dec
outsb
stc
sti
aaa
imul
sbb
sbb
or
jle
fstpl
sub
pop
mov
fldt
mov
mov
movsl
xor
push
stos
inc
rorb
in
mov
out
dec
inc
mov
push
push
mov
dec
movsl
aas
and
cmp
int
push
xchg
add
lahf
arpl
sub
enter
int
push
adc
push
push
rol
arpl
in
sbb
imul
pop
cld
pushf
js
fwait
test
out
in
addb
cmp
jbe
mov
daa
mov
mov
shlb
xchg
in
mov
xchg
mov
adc
call
xlat
sti
inc
test
nop
gs
push
inc
xor
icebp
push
pop
test
push
int
leave
and
add
mov
cli
pusha
push
cmp
scas
icebp
inc
inc
mov
dec
xchg
cmpsl
pushf
dec
and
scas
cmp
cltd
xchg
jne
test
insb
scas
in
ret
sti
lods
push
and
lds
jae
add
push
movsl
rolb
jg
rcll
inc
or
lcall
in
js
or
icebp
mov
push
jecxz
lret
jae
fucomip
icebp
push
push
mov
int3
insb
xchg
push
push
jo
xchg
sub
call
stos
movsl
xchg
mov
add
adc
xchg
push
lahf
aas
and
mov
push
imul
xchg
les
js
mov
adc
data16
push
outsl
mov
pusha
addl
lods
mov
inc
and
and
add
mov
dec
push
sti
sbb
shll
icebp
stos
cmp
mov
pop
aad
movl
mov
jge
jge
dec
mov
xor
dec
mov
into
push
xchg
xchg
push
mov
and
jecxz
xor
arpl
cmpsb
ret
mov
pop
jge
outsb
cltd
movsl
adc
enter
cmp
add
in
add
lahf
cmpsl
sub
loop
mov
imul
test
repz
outsb
jl
push
into
shlb
add
mov
sbb
out
ret
sub
lea
js
push
adc
lods
mov
frstor
lahf
inc
movsb
add
pop
pop
and
je
xor
rclb
cmp
aas
push
nop
xchg
jae
inc
mov
iret
sub
xor
lods
sub
cmp
popa
dec
add
sub
aaa
adc
icebp
pushf
popf
pop
xor
shlb
xor
jnp
loopne
xchg
dec
and
cmp
push
cli
add
xchg
mov
pop
mov
stc
inc
push
or
cmpsb
dec
fucomi
cs
pop
xchg
nop
dec
xor
push
roll
nop
jp
sub
call
fimull
xchg
out
mov
aad
pop
mov
sbb
mov
das
cmp
jecxz
mov
in
negb
add
test
mov
mov
and
in
fs
lea
out
ret
fwait
sub
mov
psubsw
adc
fcoml
lret
push
sub
cmp
xchg
fmuls
mov
mov
cmpsl
fidivs
jno
jg
ficoms
loope
sub
dec
jb
fs
or
dec
mov
lcall
icebp
sbb
sbb
push
leave
repnz
inc
mov
mov
inc
inc
lods
sub
bound
sti
jmp
cmpl
mov
dec
aas
inc
dec
ds
enter
sbb
ret
sbb
cltd
xor
jp
imul
insl
pop
xchg
lods
push
inc
cmp
mov
nop
fmuls
inc
or
int3
xlat
xor
fdivrp
add
dec
outsb
and
mov
test
xchg
out
xchg
xor
pop
and
loope
or
cmp
dec
mov
insl
sbb
popa
stc
push
sub
test
jmp
mov
int3
les
aam
rorb
sarl
xor
loop
in
mov
pop
decb
loopne
sbb
pop
imul
push
cmp
xchg
jge
dec
loopne
stos
xchg
mov
push
rcrb
fwait
je
cmp
cmpsb
jle
dec
rcrb
ds
test
lret
xlat
daa
cwtl
jae
div
pop
and
dec
fwait
xor
outsb
shl
push
iret
push
pop
or
xchg
sbb
inc
cmp
lea
adc
mov
dec
js
add
scas
mov
add
lock
mov
inc
mov
lret
sbb
push
cld
std
dec
rorl
cli
movl
or
sbb
push
push
stc
aam
insl
pop
pushf
out
or
push
notb
int
or
inc
adc
and
pop
cmp
lret
jg
sbb
cwtl
popa
dec
je
in
adc
add
mov
rcrb
shlb
out
xchg
cli
mov
cmp
or
mov
call
cmp
push
mov
add
pusha
dec
mov
cmp
or
pop
hlt
aaa
xchg
mov
ds
sub
adc
push
ljmp
insl
mov
sbb
cmp
scas
sub
cs
lds
bound
ds
cld
adc
xchg
out
xchg
lods
imul
outsb
push
sbb
rcl
test
mov
add
push
inc
mov
shlb
cmp
leave
push
mov
ss
inc
push
pop
inc
xor
aad
push
aas
xchg
in
push
mov
and
iret
xor
push
cmp
sarb
add
adc
inc
inc
lds
adc
repnz
and
xchg
xor
and
jbe
pop
cmpsl
pop
bound
dec
pushf
add
mov
imul
icebp
clc
fcmovnu
pop
pop
mov
fbld
out
xor
insb
cmp
es
or
push
mov
sub
leave
xchg
push
out
adc
sarb
aaa
cli
sbb
and
mov
pop
xor
sbb
sub
sbb
or
cmp
jmp
dec
iret
xor
jge
and
stos
dec
cmpsb
sbb
iret
push
mov
push
mov
or
mov
or
or
mov
test
aaa
fldcw
add
popa
mov
popf
add
push
ss
mov
or
cmp
adc
js
dec
lret
aad
pop
sti
push
fildll
test
dec
mov
xchg
jg
sub
push
insl
dec
xchg
add
sub
popa
insl
mov
cli
cli
mov
jl
or
mov
mov
negl
xlat
sbb
sbb
sub
movsl
jbe,pn
mov
addr16
fwait
loope
pusha
add
xor
push
repnz
inc
mov
fistps
inc
mov
pop
jecxz
imulb
sbb
sbb
jecxz
lret
mov
dec
dec
adc
inc
inc
jno
repnz
ret
push
dec
xchg
pop
mov
mov
pushf
mov
stos
idivl
ss
out
push
mov
ja
jbe
inc
mov
lock
shrl
jecxz
sub
dec
test
frstor
pop
push
cmp
sub
lret
and
sbb
push
fiadds
push
fisttpl
jnp
fiadds
xchg
jmp
jp
dec
loop
or
inc
out
pop
pop
call
out
jmp
movsb
dec
pop
cmp
lock
scas
in
inc
lret
add
insb
cmp
cld
jae
lret
popf
insb
or
push
jo
mov
inc
daa
icebp
sub
scas
lock
aad
es
inc
andb
pop
xor
pop
dec
lcall
pop
sub
pop
cmp
rcl
repz
mov
add
push
stos
add
jl
nop
mov
lahf
dec
sub
dec
cs
xor
mov
mov
adc
jp
pop
mov
jl
push
cmpsb
aad
pop
xor
xchg
dec
adcb
pop
jmp
mov
cmp
add
aam
pop
aad
sub
dec
dec
es
mov
mov
or
pushf
movsb
cmp
or
cmp
mov
scas
xchg
hlt
or
pop
movsl
lds
mov
popf
xor
push
jbe
adc
mov
nop
shlb
cli
adc
push
sub
xchg
push
andb
mov
gs
enter
aam
js
xchg
xchg
imul
cmpsl
xor
and
testl
mov
add
xor
leave
jne
cmpb
jb
push
scas
loope
loope
mov
fnstenv
fdiv
fcmovbe
movsl
dec
mov
mov
pop
xchg
mov
aaa
mov
xchg
into
sub
lods
pop
shll
mov
dec
push
clc
pop
adc
repz
and
or
mov
in
pop
push
test
cmp
xchg
xchg
mov
push
scas
inc
or
jae
mov
cvtdq2ps
aam
inc
push
sarl
mov
push
pop
jns
ljmp
or
inc
push
xchg
mov
push
sub
lods
push
addr16
jp
pop
in
jmp
and
and
mov
dec
mov
cmp
xlat
int
cmp
fldenv
out
test
jnp
pop
and
add
add
dec
lock
dec
mov
inc
jp
add
loop
add
pushf
call
and
ljmp
adc
cmp
loop
jg
push
jg
insl
or
xchg
lea
out
cmp
aaa
push
mov
sbbl
xchg
jecxz
add
jo
add
aad
xchg
and
shlb
inc
leave
lea
rclb
popf
addl
rcrl
xor
ss
or
sbbb
sbb
mov
jl
fsubrs
mov
xchg
pushf
jnp
je
aas
mov
lods
jno
addb
sbb
inc
pop
sub
xor
pusha
mov
add
sbb
mov
scas
bound
aad
cmpb
pop
lcall
sbb
jbe
cmp
inc
sub
cmp
xor
xchg
fisttpl
insl
cmpsl
lret
xchg
ljmp
xchg
lcall
add
inc
test
jne
sbb
pusha
ja
loopne
sub
push
ds
pop
dec
shr
adc
mov
sub
push
xor
ljmp
xchg
push
jae,pt
jmp
aas
ja
lock
or
inc
daa
mov
jae
fldcw
out
lods
cmp
xchg
orb
adc
sbb
lods
xchg
and
shll
pop
push
push
jmp
testb
loop
lcall
push
sbb
pop
push
int3
cmp
lcall
sub
mov
sbb
cmc
shll
aam
scas
std
sub
repnz
or
and
lds
mov
and
mov
push
inc
and
mov
jge
pop
roll
sti
mov
cwtl
xchg
cmp
cmp
lret
jmp
pop
sbb
xor
xorl
xchg
lret
out
lret
into
dec
orb
popf
inc
push
roll
out
hlt
pushf
fs
arpl
mov
xor
mov
xor
repz
gs
insl
imul
bound
cmp
xor
mov
enter
jl
pop
xchg
lods
aaa
loop
sbb
gs
test
xchg
push
movhps
lahf
lcall
adc
mov
mov
outsb
or
shrl
sarb
jbe
pushf
cmp
sbb
icebp
addr16
bound
xchg
stos
and
fwait
ss
cmpb
popf
lret
scas
adc
pop
dec
cmp
fldenv
scas
dec
out
divb
mov
inc
imul
adc
and
aas
cmp
fisttpll
inc
sbb
fwait
stos
xchg
stos
adc
fdivl
push
push
sbb
movsb
enter
fucomp
pop
mov
les
cmp
bound
stos
push
sahf
xor
into
adc
adc
mov
mov
test
or
divl
mov
mov
addb
jno
xor
pop
jnp
out
fsub
push
inc
inc
rolb
mov
xchg
addr16
or
cld
int
js
mov
out
call
and
test
insb
fs
call
sub
les
cmpsl
jbe
clc
pushf
sbb
icebp
jne
jl
or
mov
repnz
pop
mov
jge
icebp
test
testl
mov
adc
lds
sbb
js
les
js
bound
ja
pop
xor
mov
lods
das
add
sti
or
and
insl
lret
ljmp
outsb
pop
push
jle
ret
mov
mov
mov
inc
push
or
and
jo
cs
adc
jmp
ljmp
sti
jg
inc
sahf
dec
xchg
popa
ss
mov
sub
mov
andb
push
mov
je
jmp
cmp
inc
icebp
outsb
repnz
pop
xor
loop
stc
push
scas
push
sbb
mov
mov
xchg
fsubl
pop
xlat
fcomip
push
mov
popa
movsb
and
cmp
lods
repz
cmpsl
add
mov
mov
out
push
lahf
testb
fsubrs
pop
scas
dec
sub
js
mov
push
sahf
rcrb
cmp
xchg
aam
lods
addl
xor
andb
inc
hlt
xor
negb
imul
xchg
mov
xchg
jecxz
int
pop
add
push
cmpsl
cmp
and
inc
hlt
and
dec
js
mov
out
jo
push
movsl
mov
std
push
mov
jge
xor
fyl2xp1
mov
and
cmpsl
pop
inc
js
int3
rorl
into
hlt
lahf
icebp
sbb
sti
push
fdivrl
add
xorb
enter
test
mov
jg
push
mov
adc
mov
ja
aad
mov
outsb
mov
repnz
mov
into
jg
add
sbb
pusha
mov
adc
call
xor
imul
adc
popa
insl
lods
mov
inc
fwait
inc
jge
movsb
test
rcl
inc
sub
mov
cmc
inc
stos
sbb
inc
mov
jb
in
sbb
cld
push
into
mov
call
xor
sbb
jmp
outsb
dec
sbb
popf
push
jno
push
pop
sbb
mov
mov
sub
mov
adc
hlt
inc
scas
iret
xlat
mov
add
aam
sub
jle
cmpsl
and
and
cmpsl
mov
mov
inc
repz
imul
add
push
sub
sbb
xor
imul
dec
clc
addr16
std
orl
or
mov
add
shr
dec
repnz
jmp
push
adc
mov
aaa
pop
mov
push
or
jmp
lods
jl
mov
cmp
mov
sbb
xchg
loope
mov
outsl
pop
mov
push
pusha
jecxz
push
mov
imulb
nop
dec
inc
dec
or
es
xor
cmp
es
roll
lahf
insb
dec
xor
cld
fsubr
clc
daa
jp
push
aas
sbbl
clc
das
movsl
inc
jns
pop
sub
add
xor
inc
xor
or
pop
lds
popa
notl
stos
lock
lcall
scas
pop
adc
movsb
dec
cmp
imulb
decb
mov
pushf
subb
xor
inc
ljmp
jge
xor
fldenv
push
adc
je
loopne
cmp
mov
dec
call
out
and
out
fwait
scas
ret
fstpt
repz
xor
fsubs
pop
xor
outsl
mov
mov
sub
roll
leave
aad
out
jae
pop
or
push
repnz
inc
cmp
add
jecxz
add
scas
std
rorb
xchg
shll
pop
push
xchg
mov
add
rcl
test
stos
inc
mov
iret
ret
sub
jb
xchg
fadds
sbb
imulb
adc
int3
lods
jl
cltd
aaa
sbb
jo
rorb
pusha
cmpsl
imul
je
inc
xchg
out
push
jl
rol
inc
pop
xchg
mov
in
dec
sbb
and
test
imulb
xchg
xor
es
adc
in
inc
push
and
mov
and
pop
jmp
cmpsb
outsb
punpckhbw
mov
scas
pop
lea
mov
rcrb
sbb
push
and
dec
sahf
repnz
sub
movsb
or
pop
xchg
and
aad
pop
push
nop
sub
loop
and
xor
fidivrl
mov
and
push
out
in
ja
jo
mov
mov
cmp
fsubrl
mov
jle
mov
inc
xor
std
jl
cli
xchg
outsb
fcomps
jl
mov
push
push
cmpsb
ljmp
push
push
inc
lret
rol
adc
sub
andb
in
bound
and
mov
jbe
outsl
dec
je
loope
ficomps
ret
inc
into
int
fisttps
rcl
imul
wrmsr
mov
cmpsl
les
inc
cmp
push
fstp
mov
ret
scas
jge
push
lock
push
jle
mov
and
push
bound
and
dec
adc
or
jns
pop
cmp
and
outsl
add
into
hlt
shlb
test
xor
sbb
dec
arpl
xchg
or
mov
js
lods
inc
out
addr16
das
bound
out
mov
pop
mov
mov
jecxz
push
jns
sbb
xor
aad
icebp
mov
aam
bound
cwtl
popa
mov
testb
dec
pop
sub
stc
jbe
dec
fldcw
idivl
inc
daa
sbb
and
and
lcall
aaa
jle
ret
jb
mov
insl
cmp
or
fcom
dec
mov
mov
daa
and
inc
jns
sbb
mov
mov
add
jp
dec
repz
mov
mov
cmp
jae
outsb
addr16
cmpsl
in
sub
mov
or
mov
xchg
jbe
cltd
std
daa
xor
iret
jb
xor
jl
loop
jnp
mov
xchg
xor
jnp
mov
loope
mov
inc
mov
sbb
fistl
and
or
sbb
negl
bound
imul
adc
mov
or
in
cld
mov
sbb
mov
or
test
jne
rcrb
pop
int3
in
mov
lcall
cmp
rorb
inc
dec
cmp
lds
add
or
sti
test
insb
mov
adcb
pushf
clc
cmp
scas
push
inc
adc
mov
cwtl
xor
and
out
pop
cld
ljmp
dec
pushw
sub
sub
fmul
push
dec
jmp
adc
mov
hlt
lret
jge
in
push
jp
jg
xor
test
sbb
jns
movsl
cmp
xchg
xchg
xchg
push
add
mov
push
inc
std
push
mov
sub
adc
shll
pop
aaa
cmc
mov
jb
movsl
dec
add
int3
pop
cwtl
mov
cmp
pop
arpl
mov
cld
pop
fimull
out
aad
push
mov
mov
mov
xor
roll
sub
and
dec
jmp
xor
mov
inc
int3
sar
test
insb
stc
xchg
sub
mov
into
int3
mov
in
inc
cmpb
in
sbb
xchg
js
and
mov
adc
mov
or
repz
test
adc
push
sar
in
ss
repnz
mov
adc
pop
int3
mov
sti
cmp
and
mov
insl
sub
aam
cmpsl
pop
and
add
sub
pop
mov
or
movl
xchg
push
mov
stc
pop
mov
jo
aas
fisttpl
loope
adc
dec
pop
mov
and
outsb
cld
fwait
or
in
xchg
or
out
mov
mov
daa
xor
jne
jne
mov
out
inc
icebp
cmp
cltd
push
inc
mov
adc
sub
pusha
dec
daa
das
xchg
leave
adc
fcomip
test
pop
and
in
adc
pop
js
scas
xchg
mov
insl
dec
fwait
push
push
mov
dec
int3
dec
add
push
pop
and
and
lret
pop
mov
lea
int3
inc
fists
es
xor
add
pop
dec
mov
fimull
inc
sub
mov
fucomp
xchg
or
loop
pushf
je
dec
in
ret
hlt
push
sbbl
xchg
add
sbb
cld
add
pushl
aaa
ljmp
in
movsb
lret
dec
inc
pop
scas
hlt
or
cmp
lea
lahf
icebp
sbb
mov
aaa
sub
xchg
mov
iret
pop
hlt
or
dec
add
insl
jge
test
jbe
sbb
inc
movsl
mov
jb
es
ds
das
pop
out
cli
cld
push
fidivrl
stos
sbb
mov
fisubrs
loope
gs
and
sbb
sub
fisubs
mov
cmpsl
dec
push
call
xchg
aaa
push
ja
adc
sbb
inc
push
xlat
add
ficoml
stc
pop
or
xor
sbbl
jno
inc
enter
cmp
and
cmp
pop
inc
daa
and
test
dec
and
andl
shlb
lods
outsb
les
and
enter
jbe
stos
mov
cltd
imul
mov
mov
mov
ret
mov
jecxz
cmp
add
pop
repz
and
mov
mov
pop
push
scas
bound
or
cld
xor
ljmp
adc
push
jne
mov
add
ds
xchg
or
sbb
inc
repnz
push
rcrl
or
mov
imul
dec
pop
lcall
dec
push
mov
popa
daa
sti
cmpsb
imull
jp
push
ljmp
xlat
shl
inc
mov
in
sbb
mov
dec
mov
mov
sub
enter
adc
ss
cmp
aad
jne
outsl
out
nop
in
adc
inc
insb
ljmp
je
pop
mov
push
jnp
loope
sbb
scas
aas
insl
xor
loop
push
pop
push
mov
push
pop
gs
js
sahf
cmp
push
xorb
xchg
sti
cld
out
jo
iret
mov
dec
jecxz
rcrb
pop
push
and
lcall
mov
mov
je
pop
push
xor
push
insb
rorl
push
xor
mov
push
pushf
in
in
dec
jns
sbb
rcrb
jno
mov
adcl
pop
shll
jp
jae
rcl
jl
xchg
loopne
dec
call
mov
arpl
daa
xchg
mov
cs
push
and
add
xchg
dec
sbb
arpl
ret
cmp
sbb
stos
cltd
adcl
inc
cltd
push
das
dec
ds
ret
add
aad
int3
bound
jb
push
scas
xchg
icebp
and
mov
pshufw
fiaddl
mov
lret
enter
adc
jbe,pn
push
rcl
jg
mov
cli
adc
addr16
and
mov
inc
push
ret
sub
ds
push
sbb
pop
adc
negl
sarb
jle
mov
movsl
cwtl
repz
cmp
insl
push
pop
enter
loop
push
jecxz
mov
cmp
ret
adc
enter
jae
mov
in
aaa
sub
lahf
push
jmp
mov
aas
in
test
cs
dec
xlat
and
test
push
mov
in
outsl
jbe
clc
addr16
fs
adc
push
lret
out
lods
ja
adc
leave
pop
imul
sub
jbe
mov
mov
cmp
push
adc
in
ret
pop
cmp
dec
ja
push
daa
xchg
test
les
cmp
ja
lock
inc
jnp
lds
adc
pop
push
fidivrl
loope
clc
xchg
push
pop
xor
dec
int
xchg
adc
enter
fistpll
ret
data16
mov
aam
mov
sbb
ret
pop
cmp
xchg
scas
push
xor
lock
js
sub
sar
scas
lret
data16
jb
jnp
xor
sbb
push
stos
and
mov
jne
mov
pop
stos
and
popa
arpl
mov
je
or
fs
inc
or
cld
scas
pop
push
fistpl
lods
test
cli
lret
fwait
push
out
inc
fsubp
push
xchg
std
xchg
mov
pop
lret
dec
in
scas
out
mov
shlb
in
push
cmpsb
inc
add
sbb
insb
push
mov
into
or
fcomps
nop
fsubs
cmp
or
aas
sub
sub
mov
lea
divl
call
jnp
pop
push
icebp
cmp
jge
rcrl
mov
call
adc
ret
sub
jp
push
std
push
or
xchg
aas
xchg
and
mov
push
or
cmp
cmp
adc
aaa
add
xchg
gs
push
roll
sbb
xor
fwait
inc
fs
out
cmp
cmpsl
fistl
insl
jae
orl
cmc
ss
sub
pop
or
mov
inc
std
aad
rcrb
inc
and
daa
cltd
jp
pop
enter
inc
xchg
ss
jo
pop
imul
sub
add
out
cltd
xor
stos
inc
cwtl
jp
stos
dec
mov
add
imul
and
enter
push
sarb
repz
cmpsb
pop
outsb
pop
inc
stos
fldcw
test
in
fwait
xchg
scas
or
cmpsb
popa
push
lcall
add
dec
mov
ficoms
add
daa
mov
pusha
test
inc
enter
push
xor
clc
lods
dec
stc
cld
xchg
xor
aaa
xchg
stc
and
mov
lods
xchg
dec
scas
shlb
xor
das
ret
mov
dec
dec
and
leave
outsl
lods
mov
or
pop
add
pop
sub
adc
pop
and
or
shrl
push
hlt
jecxz
inc
jb
mov
mov
and
mov
cmpsl
pop
mov
xchg
cs
mov
lea
arpl
lock
gs
int3
mov
and
xor
sub
push
addr16
hlt
mov
scas
and
mov
aam
setbe
stos
cmp
outsl
mov
pushf
dec
pop
outsb
testl
push
mov
mov
add
imul
and
pop
ret
jecxz
xchg
fxch
push
leave
cmp
mov
xor
mov
add
add
pop
cmp
sub
xor
sbb
stos
pop
mov
push
mov
in
sbb
adc
aam
pop
test
mov
test
stos
sahf
pop
pushf
pop
int3
push
cwtl
mov
push
outsb
inc
test
out
lods
sub
sarl
popa
outsl
popa
dec
popf
hlt
xor
in
fstpl
rolb
xlat
in
aaa
addr16
and
icebp
add
push
adc
xchg
inc
punpcklbw
pop
lcall
xor
dec
xor
lods
inc
mov
adc
jne
adc
inc
push
cmp
inc
inc
pop
or
hlt
shlb
dec
add
ss
mov
pop
cmpsl
dec
and
int
aaa
fs
mov
stos
lds
sbb
daa
sahf
rol
cmpsl
add
pushf
enter
cmp
std
pop
test
cmp
ds
bound
dec
push
jecxz
aas
jae
popf
pop
push
scas
sarl
test
push
mov
lcall
or
stos
inc
mov
mov
pusha
inc
out
test
ret
arpl
stc
dec
bound
rcll
mov
ficomps
inc
insb
insb
data16
inc
xorl
hlt
adc
jle
lcall
mov
mov
lods
dec
out
cld
sub
cmpsl
jge
std
adc
add
outsl
aam
jae
dec
push
stc
inc
or
popa
daa
cmp
push
add
pop
aam
dec
pop
xor
xor
js
mov
lret
sbb
jns
ss
lock
inc
sbb
cs
pushf
in
jne
pusha
mov
mov
add
filds
add
jp
add
and
and
mov
popa
test
and
call
pop
xchg
sub
adc
dec
jge
mov
xlat
cmp
inc
jmp
mov
jp
repz
pop
data16
mov
pop
lahf
out
pop
rclb
out
push
inc
cmp
cmpsb
adc
movsb
push
pop
and
ds
inc
add
mov
dec
shr
shl
jge
lds
fcoml
movsb
js
cmpsb
shlb
xor
mov
adc
fidivl
mov
out
rcl
outsb
jo
jbe
mov
push
shlb
loope
jmp
cmp
pop
mov
stos
adc
scas
xchg
bound
pop
sbb
testl
dec
cmp
sbb
loope
xor
or
loopne
cld
xchg
or
lods
cmpsb
sbb
int
add
xchg
cmp
add
xchg
jbe
imul
into
cmp
mov
inc
call
push
sbb
cmp
call
mov
popl
in
fstp
out
push
xlat
or
cmpsl
cwtl
jl
add
sti
test
adc
aad
or
add
sbb
push
xor
std
cmpsb
outsb
inc
das
xlat
mov
mov
cmp
inc
push
dec
adc
aad
push
pop
inc
push
fisubrs
fnstsw
mov
mov
pusha
pushf
dec
xor
xor
xchg
call
sahf
xchg
out
mov
jg
push
pop
push
and
push
aam
pop
mov
xor
mov
mov
adc
xor
cmp
xor
icebp
and
mov
sahf
add
cmp
ret
pop
jne
aaa
into
add
int
insl
dec
push
movsb
or
mov
fldcw
add
arpl
mov
mov
mov
xor
rorl
jo
jp
inc
rclb
ret
cs
aas
push
je
push
push
fs
arpl
insl
push
in
or
clc
cmpsl
mov
add
adc
cmpsl
xchg
xchg
lahf
xor
jle
js
and
jne
xor
sbb
sti
and
ss
xchg
jecxz
add
int
mov
mov
push
push
fstl
jl
into
pusha
add
repz
mov
fbld
or
dec
mov
mov
sub
scas
xchg
pop
xchg
sahf
cmpsl
vaddps
aam
insb
push
scas
shlb
and
dec
jg
inc
mov
sub
mov
mov
pop
pop
inc
outsb
inc
movsl
mov
insl
cli
mov
mov
sub
mov
inc
inc
ret
or
sub
mov
mov
pusha
fcomps
hlt
test
and
jl
mov
pop
arpl
sub
movsl
aas
aad
inc
xchg
pop
xchg
dec
fistpll
lret
lea
enter
mov
mov
jmp
cmp
loopne
jg
dec
lods
or
sbb
jmp
inc
in
imul
inc
mov
clc
adc
add
mov
mov
lods
sub
or
push
call
in
sbb
cwtl
jmp
mov
lock
aam
jmp
popa
jle
in
aad
xor
div
adc
fmull
clc
ds
scas
push
hlt
sti
jp
inc
and
cli
call
jp
orl
cld
inc
pop
xchg
xor
ja
sbb
jecxz
add
pop
xorl
rcrb
test
xorl
sbb
inc
into
fcmovbe
rcrb
sbb
or
adc
jne
stos
or
dec
inc
mov
dec
clc
out
in
add
sub
add
outsl
mov
mov
nop
xor
in
js
nop
xchg
movsl
out
aam
loopne
std
loope
xor
mov
xor
sbb
lods
adc
pop
scas
jp
mov
nop
div
mov
out
add
push
xchg
push
lahf
loope
lock
loope
add
ss
outsl
jmp
pushf
pavgw
push
mov
notl
int
int3
mov
mov
jmp
dec
xlat
rclb
or
mov
xor
jg
cmp
adc
push
cmp
negl
mov
pop
jp
stos
mov
mov
pop
iret
fcomp
or
rcll
xor
dec
test
outsl
shl
lcall
je
pop
call
lods
testl
xchg
cmp
sub
mov
mov
rorb
mov
popf
into
push
xor
fdivl
fldcw
rcl
xchg
inc
xchg
clc
mov
mov
sub
jp
and
out
bound
bound
cmp
xchg
mov
pop
pop
inc
leave
repz
sub
dec
sub
mov
inc
push
and
mov
inc
jbe
jge
insb
divl
jae
js
lods
mov
dec
aas
fcmovnbe
add
repz
repnz
in
pop
push
xor
mov
mov
fists
push
dec
pop
add
mull
ja
scas
ja
inc
mov
in
cld
cli
fnsave
or
imul
xchg
fildl
jp
adc
and
push
sbb
jle
divb
test
in
fdivrl
sbb
add
test
shlb
cltd
fists
subl
mov
enter
jle
jle
or
mov
icebp
dec
push
insl
add
push
mov
dec
cld
xchg
ffreep
ror
adc
jle
add
data16
sub
rorb
pop
mov
stc
pop
sub
enter
mov
xor
imul
out
or
ret
xor
rol
sub
pop
scas
pushf
mov
cmpsl
dec
sub
mov
cmc
push
out
xor
ficomps
gs
mov
repz
add
out
add
daa
mov
dec
mov
insl
sbb
jge
mov
fiaddl
das
pop
xchg
sbb
xchg
aad
and
inc
mov
ljmp
arpl
pop
cmp
inc
imul
das
aaa
incl
jno
pop
and
in
aaa
addr16
mov
movsl
shrl
jns
ja
fistpl
loopne
mov
inc
aam
mov
dec
sbb
sub
sub
jae
fdiv
int
xchg
sbb
inc
or
add
pop
mov
sbb
fsub
movsl
cmp
jbe
dec
call
push
mov
lock
dec
nop
out
cmp
sub
cmp
jo
mov
push
pushf
adc
sbb
cmp
and
fildl
xchg
roll
pop
adc
ret
push
imul
les
jb
ljmp
inc
cmp
xchg
dec
push
nop
push
cli
and
mov
and
in
cmc
cli
jne
test
xor
fwait
pop
jno
push
mov
ja
aas
lock
les
xchg
cmp
jnp
outsb
movsl
loop
mov
adc
lret
in
fsubp
and
js
aad
test
inc
mov
mov
aad
lds
add
lea
nop
xlat
outsl
push
inc
hlt
mov
loopne
or
inc
xorl
out
shlb
sub
push
jle
sti
mov
dec
hlt
xor
inc
dec
arpl
or
and
mov
fisubl
inc
jl
int
xor
mov
mov
dec
sub
mov
mov
jmp
sub
push
xor
dec
clc
sub
xor
pusha
leave
in
mov
loop
ja
insb
pop
jle
lock
cmc
pop
adc
dec
mov
rcl
enter
and
cmp
adc
pop
xchg
pusha
dec
test
push
cmp
adc
push
das
lahf
push
sbb
or
das
aad
mov
add
cmc
mov
jle
mov
or
pusha
gs
dec
sub
sbb
and
sub
fnstenv
fmul
pop
shlb
pop
xchg
mov
ja
loopne
mov
in
pop
cmp
xor
dec
pop
ja
int3
pop
push
inc
xchg
cmp
adc
shrb
dec
mov
inc
int3
mov
mov
pop
jo
add
dec
cltd
pop
dec
rcrb
sbb
mov
rcll
xor
sbb
int3
scas
cmpsl
stc
inc
inc
jno
pop
xchg
in
sbb
daa
test
into
pop
loop
sti
cmp
ds
das
fsubs
push
dec
rcrl
dec
sbb
adc
push
and
xchg
rcll
cwtl
es
mov
sti
and
mov
mov
shl
xor
lods
insl
nop
imul
dec
clc
and
lods
imul
xor
daa
daa
cmp
popf
push
push
int3
jp
ss
lret
lea
repz
sub
adc
iret
push
mull
fwait
add
in
mov
movsl
push
sbb
lods
add
outsl
xchg
idiv
fiaddl
lods
or
pop
cmpsl
sub
ud2
rclb
popf
stc
push
idivb
jecxz
mov
mov
cmp
mov
or
cld
jns
jl
mov
sbb
out
mov
fadd
push
inc
dec
ds
sub
or
mov
cs
mov
pop
cmp
dec
movsb
int
loope
inc
je
ja
in
clc
loop
inc
mov
adc
sub
imul
mov
out
lret
mov
testb
push
arpl
fiadds
adc
mov
pop
xchg
mov
dec
cmp
xor
sub
pop
adc
int
test
xchg
add
adc
mov
mov
dec
push
iret
push
rolb
mov
lock
gs
xchg
xlat
push
mov
inc
pushf
sahf
jnp
mov
das
adc
sbb
xchg
imulb
mov
ja
pop
push
inc
and
mov
jle
add
xor
sbb
xchg
sub
idiv
xor
mov
xchg
data16
sub
or
pushf
pop
testl
aam
movsl
mov
mov
sbb
ja
aas
jns
es
mov
xchg
xorb
adc
dec
mov
xchg
je
dec
cmpsl
cmp
adc
adc
int
dec
push
mov
lahf
cmpsl
cmpsl
push
incl
pushl
sub
iret
fwait
int3
add
xchg
mov
xchg
xchg
sahf
and
jg
daa
xchg
les
arpl
inc
lahf
inc
push
arpl
stos
add
icebp
pop
in
mov
cmp
test
sub
arpl
xor
xchg
inc
js
xchg
xlat
jb
pop
movsb
push
dec
inc
mov
jo
cmpl
add
jb
out
xchg
int
pop
inc
rcll
jae
cmp
dec
cmp
xchg
cltd
inc
enter
or
adc
repnz
cwtl
es
cmp
int
cwtl
push
pop
jae
scas
push
mov
inc
pop
enter
pop
test
jp
frstor
insl
cs
das
mov
mov
aas
fbld
and
lods
call
mov
out
xor
xorl
sub
jmp
inc
sub
fs
cwtl
pop
movsb
mov
ja
cs
jp
xor
mov
pop
fistps
adcl
xchg
stos
sbb
jns
roll
sbb
imul
push
push
mov
add
ret
pop
lock
jmp
dec
jno
sahf
push
sbb
mov
pop
popa
roll
push
jns
pop
leave
xor
scas
cltd
enter
addr16
ret
shr
les
xorb
or
xlat
sahf
loopne
cmp
jne
mov
stos
pop
leave
cmp
jne
movsl
hlt
rcll
pop
popa
jns
xor
in
in
sub
fdivs
mov
fdivs
mov
dec
insb
mov
mov
mov
push
push
adc
pop
nop
push
mov
xchg
fwait
sub
movsb
int
lret
inc
or
popa
repnz
or
jne
and
repnz
dec
add
fcmovnbe
cmc
lea
ret
stos
dec
pop
pop
mov
test
outsb
out
sbb
dec
jge
lods
out
push
mov
popf
pop
push
add
mov
mov
loopne
jle
jmp
mov
pop
sub
xorl
cmc
fwait
sar
mov
insb
xor
pop
lock
shrl
mov
push
cld
pop
add
cmp
adc
imul
mov
sbb
mov
test
addr16
xor
dec
ror
xor
ds
cmp
pop
out
mov
dec
xor
das
pop
lret
neg
fnstsw
sub
fs
inc
sub
push
or
inc
push
inc
fsubs
stos
ret
mov
dec
and
mov
inc
imul
cmp
mov
aad
pop
add
push
int
popf
push
mov
sbb
repnz
jle
xchg
dec
adc
or
mov
aaa
sub
fisubrl
popa
repz
scas
mov
xor
push
or
mov
xchg
pop
ds
hlt
je
pop
mov
scas
pop
fs
xor
push
add
sbb
shlb
sub
rolb
sub
inc
ret
out
xchg
and
mov
cmpsl
shl
imul
add
sub
xchg
inc
push
mov
adc
arpl
push
mov
adc
cwtl
dec
out
cmp
movsb
jmp
mov
cltd
inc
adc
push
outsl
adc
addr16
loope
lds
popf
and
fiaddl
movsl
cmp
dec
pop
rolb
shrl
loope
outsl
sti
jne
cmpl
cmp
inc
ficoml
mov
sarb
sbb
or
das
dec
sub
dec
sbb
mov
shlb
lret
jne
cld
push
dec
orb
jecxz
loope
pop
ds
xchg
popa
shlb
cmp
jl
lods
lcall
push
sub
aaa
xor
testb
leave
pop
mov
mov
sbb
adc
roll
push
adc
nop
mov
xchg
int3
xchg
sub
outsb
les
fwait
aad
inc
mov
pop
pop
and
pop
iret
gs
fisubrs
pop
sub
aaa
mov
xchg
js
dec
addl
jle
decl
mov
xchg
popa
mov
sub
lret
push
ror
adc
jl
xorl
sbb
push
les
add
imul
jl
push
ret
nop
add
mov
js
int
push
fists
sub
cmpsl
and
ss
mov
mov
sbb
jl
dec
enter
in
xor
into
jae
inc
pop
cli
sbb
aad
push
and
out
fcmove
or
arpl
ds
fadds
sub
mov
lcall
stos
das
adc
sahf
scas
mov
xor
subl
pop
andl
or
add
fldt
jp
aad
loop
fldl
or
dec
int
out
jmp
inc
pop
xchg
push
imul
loop
loop
and
mov
push
mov
loope
pop
mov
push
loope
pushf
inc
orl
int
mov
je
pop
adc
xchg
xor
fldenv
mov
testl
lods
xchg
fisttps
icebp
lods
or
and
inc
pop
sub
into
in
xorl
jne
adc
insb
jecxz
lods
sbb
inc
cs
cmp
loopne
mov
test
inc
sbb
fistpll
dec
test
xchg
inc
nop
rol
cmc
mov
repz
sti
mov
sbb
xchg
mov
sbb
pop
loope
pop
mov
sub
and
mov
pop
adc
fnstsw
cmp
xchg
movsl
inc
lret
mov
lds
xchg
popa
lods
fisttps
lcall
js
pop
cld
add
pop
addb
imul
mov
iret
jp
mov
int
pop
sub
push
popf
jge
mov
adc
fistl
add
mov
int3
cmovno
push
xor
ret
gs
mov
mov
test
sbb
lds
aam
pop
cmp
mov
xchg
sbb
shl
xchg
pop
pop
aam
jbe
inc
jle
fadd
enter
push
shlb
fwait
leave
and
aas
fsubs
shlb
orb
lcall
pusha
xchg
ja
fmull
xor
les
cmp
data16
push
subl
lret
leave
jle
sbb
cld
xchg
ss
fcos
daa
or
or
fsubs
stos
jnp
mov
xor
fisttpl
jp
inc
cmpb
sbb
je
test
lds
and
push
dec
sub
insl
sbb
repnz
movsb
fistps
sti
rorb
jne
push
inc
or
dec
lea
adc
sahf
aam
or
imul
add
int
iret
mov
and
lods
cli
iret
mov
das
pop
dec
xchg
or
or
mov
int3
or
rorl
cltd
mov
inc
jne
addr16
std
cs
inc
push
fidivl
addr16
jmp
jne
shrl
jb
jl
mov
jge
adc
pop
bound
shlb
inc
aaa
jns
inc
cmp
add
inc
mov
mov
ljmp
inc
add
ret
jl
jnp
xchg
aad
dec
pop
aam
fwait
and
mov
ds
adcl
mov
aad
cs
jmp
lods
xchg
jno
cltd
pop
ret
js
lods
ja
inc
imul
jp
mov
and
outsb
setae
cmp
int3
fiadds
jae
push
jae
lcall
xor
vcvtss2sd
scas
xor
pop
and
mov
lahf
les
xchg
add
and
dec
decb
sarl
xor
mov
test
jnp
addr16
mov
push
pop
cmp
jb
pop
push
lea
cmpsl
cmp
in
test
into
lcall
xor
loopne
xorb
mov
repz
loopne
or
rclb
daa
sbb
mov
mov
aad
xor
arpl
jg
scas
sub
je
cmp
xchg
gs
leave
stc
cmp
test
outsl
loop
pop
adc
inc
cmp
ret
inc
jo
push
hlt
std
inc
test
jae
xchg
inc
dec
or
aaa
fldcw
and
aad
lock
mov
sub
in
add
rolb
scas
ss
jp
unpckhps
outsb
and
mov
lds
aam
hlt
data16
jge
pop
mul
shlb
aas
push
rolb
inc
pop
sti
sbb
movsl
out
jge
sbb
or
adc
ficoms
jp
orl
pop
jb
mov
aad
out
mov
xor
movsl
dec
jae
repnz
iret
adc
call
sbb
cmp
ds
insb
push
xlat
lods
sbb
jp
into
sbb
adc
lcall
cmpsl
ss
push
shll
js
rcr
xor
ljmp
into
sub
sbb
lods
fucomip
mov
xchg
cli
insl
lea
leave
testl
nop
scas
push
xorb
js
cwtl
lea
test
sbb
jne
pop
shll
xchg
sbb
or
loopne
cmc
nop
stos
idivl
stos
and
sbbl
sub
xor
popa
aas
or
mov
ret
mov
sbb
xor
into
es
xor
mov
xchg
pop
mov
xor
jle
or
stos
mov
sub
ret
jae
or
lret
fisttpl
insl
push
sbb
and
gs
jae
mov
shl
ljmp
sub
std
clc
in
out
dec
xchg
inc
repnz
and
lret
jmp
adc
pop
inc
push
cmp
xchg
add
decb
aaa
cmp
add
xchg
andl
dec
push
sub
jecxz
mov
imul
inc
lea
dec
pop
mov
fisttps
inc
aas
sti
or
mov
xchg
inc
loope
lods
mov
cmp
repnz
ret
or
movsl
fisttpll
leave
out
into
inc
aad
add
jns
mov
js
mov
sbb
icebp
lret
sub
movsb
inc
lods
dec
pop
push
xlat
jbe
pop
xor
popf
lods
or
loop
dec
sbb
mov
mov
mov
add
push
inc
mov
sbb
hlt
xlat
fistpl
int3
out
xchg
xlat
bound
ljmp
arpl
std
pop
mov
fistpl
push
int3
test
enter
mov
sbb
sub
sbbl
jge
das
xorl
popa
in
fildll
loope
sbb
xchg
xor
xor
loope
jg
mov
mov
jp
cwtl
aas
jecxz
lds
and
sbb
dec
inc
sub
inc
out
stos
jo
call
enter
cld
cmp
jbe
arpl
out
sahf
arpl
fstps
es
pop
insb
jp
pop
pop
ficompl
setbe
or
sarl
es
fildl
insl
cmp
xorb
mov
lods
jmp
push
mov
les
xor
sbb
addr16
testl
xchg
mov
xchg
test
and
xor
xchg
jb
sub
sar
lods
mov
sub
xlat
and
sbb
mov
test
jne
push
and
or
daa
fadds
xlat
pop
mov
cltd
dec
les
add
pop
bound
lds
jae
sahf
push
lock
jnp
inc
pop
mov
iret
push
pmulhw
xor
push
fisubs
xor
mov
push
sbb
rcl
xchg
pop
xor
mov
xchg
pop
xchg
pop
inc
add
sahf
jge
jae
push
mov
cmp
test
adc
jne
insb
xor
pop
inc
test
pop
mov
xchg
movsb
mov
icebp
arpl
or
int
jge
lea
cltd
lds
sub
cmp
cmpsl
xchg
cmc
dec
mov
test
pop
mov
scas
push
clc
lock
inc
add
pop
mov
sub
insl
clc
test
xor
push
mov
shll
aas
cmpsl
mov
mov
jo
pushf
dec
mov
shlb
ror
mov
sub
nop
shll
loopne
or
dec
fimull
jp
push
fcomps
fisubrs
leave
jbe
cmp
cld
pop
inc
jmp
pop
cmp
dec
inc
inc
xorl
mov
out
ss
jb
or
push
fadds
inc
popf
test
or
in
fs
mov
push
cmp
xchg
insb
sti
sub
in
into
rclb
hlt
mov
jnp
ret
sub
cmp
ljmp
into
int
out
push
sub
into
mov
jp
aam
inc
subl
pop
cmp
mov
lods
and
jno
pop
push
lcall
mov
lds
cmpsb
and
lret
push
mov
jp
ror
scas
jno
lock
push
ja
shlb
ss
cmc
and
in
and
xchg
pop
xchg
in
xor
arpl
mov
mov
sti
xchg
leave
in
jnp
cmpsl
sbbl
sub
flds
sub
add
or
cmp
je
rcll
shl
jmp
ja
in
or
stos
lcall
lret
in
in
sbb
pop
inc
sbb
cvtsi2ssl
pop
rcrb
lea
pop
jp
mov
scas
add
and
pop
sbb
cmp
leave
sbb
jg
mov
shlb
mov
or
push
outsb
mov
nop
call
es
inc
test
sbb
dec
pop
daa
mov
jle
or
inc
mov
cmp
in
notb
pop
jnp
jne
repz
ret
mov
xchg
test
frstor
mov
cwtl
sbb
mov
or
push
or
movsb
sti
insb
ja
sbb
into
pop
ret
clc
cmp
pop
or
dec
xchg
xor
inc
shlb
orb
dec
or
and
rorb
icebp
stos
les
cmp
mov
cmc
push
add
mov
subl
dec
jne
lds
fsubl
sbb
sbb
stos
out
mov
mov
repnz
out
inc
out
in
pop
xchg
loope
into
gs
inc
in
or
or
jg
mov
dec
xor
inc
std
inc
mov
cmp
insb
stos
int
sub
je
mov
pop
push
mov
mov
mov
xor
push
enter
xlat
mov
inc
stos
adc
lock
pop
cmp
and
shll
and
push
popl
sub
dec
pop
xchg
test
mov
fwait
sbb
fistps
pop
cli
pop
or
enter
jno
enter
xchg
clc
mov
push
mov
leave
dec
es
pop
jge
pop
mov
int3
ret
daa
outsl
mov
pop
xor
icebp
pop
outsb
aas
push
lods
dec
sub
mov
clc
push
jnp
fwait
stc
cmp
sbb
lods
arpl
sahf
mov
sti
jo
jle
fistps
mov
cwtl
sbb
lods
cmp
lods
int3
and
repz
cs
sbb
mov
fsubl
hlt
pop
fnsave
cs
mov
mov
lods
pop
std
mov
insb
jb
mov
cli
icebp
pusha
aaa
aas
push
dec
cmp
fsubrl
lret
and
jb
push
adc
mov
xchg
fldcw
cmp
and
xor
pushf
pop
clc
shll
pushf
sub
push
fistl
outsl
inc
or
inc
loope
outsl
adc
clc
in
cmp
std
or
movsb
push
outsb
lahf
ljmp
cmpsb
addl
push
adc
fs
aas
cmpsb
icebp
popa
pop
sahf
and
mov
pop
jmp
movsl
xchg
das
fldt
jnp
lcall
jl
and
lods
outsb
andnps
rcl
lcall
loop
fnstenv
pop
out
pop
inc
jmp
dec
or
popf
ja
mov
hlt
push
inc
cmovp
sbb
sub
mov
adc
xor
call
pusha
dec
adc
mov
sbb
mov
ja
sbb
les
fsubs
test
pop
jne
sti
fisttpll
shll
cmp
dec
stc
jg
jns
repnz
mov
pop
add
mov
movl
sbb
mov
loop
pop
mov
inc
mov
push
cmp
xor
push
jp
lock
fadds
mov
ret
push
fcomps
and
add
xor
std
or
iret
push
call
imul
pop
jg
mov
lods
sub
push
or
cmc
sahf
scas
xor
cld
cwtl
int
movsl
mov
push
or
enter
cld
jle
mov
jo
adc
xchg
push
cmp
sbb
inc
xorl
pop
mov
enter
jne
xor
add
jb
xchg
xchg
push
or
lret
popa
sub
xchg
push
jnp
repz
jae
mov
enter
and
mov
fsubrs
adc
das
and
jmp
scas
inc
stos
cmp
cli
xchg
bound
push
test
lahf
dec
ss
icebp
test
mov
inc
lods
and
js
add
ljmp
adc
and
cmp
cs
adc
dec
xor
pop
dec
mov
cld
and
stos
cmp
aam
inc
fwait
imulb
sub
pop
dec
addl
sbb
xlat
pop
cmp
in
out
outsl
stc
lds
xor
test
in
lcall
adcb
and
add
popf
call
fmull
sbb
stc
mov
lret
push
push
fstpt
lahf
jae
fsubrp
inc
andl
jno
dec
push
sub
ficoml
mov
into
or
ret
aam
add
fldl
dec
fisttps
push
mov
fwait
mov
jg
add
sbb
out
enter
out
iret
ja
lcall
mov
fcmovb
int
xchg
add
sbb
xor
mov
pop
jle
sub
push
outsb
jne
divps
dec
je
add
inc
mov
add
or
sbb
adc
mov
fidivrl
mov
imul
sahf
andb
arpl
jns
push
pop
inc
jg
stos
mov
imul
jae
and
and
jno
into
cmp
adc
add
jge
test
xchg
sub
pop
ja
cmp
pop
outsb
sbb
outsl
dec
dec
mov
add
mov
push
outsl
shrl
scas
mov
xor
dec
xor
stos
and
pop
enter
xchg
mov
xorl
psubusw
inc
jl
pop
jg
out
cmp
repz
aad
and
push
and
in
adc
scas
insb
cmpsl
xor
out
cmp
repnz
ficompl
add
lods
das
mov
je
ds
cli
shlb
push
xor
popa
lret
push
lret
mov
pop
pop
arpl
mov
shl
or
std
cmpsl
pop
pop
in
rol
out
push
push
jle
inc
out
or
jns
xor
nop
mov
inc
rcrl
mov
popf
push
mov
loop
outsl
cli
lds
mov
fstpl
imul
fadd
mov
je
push
mov
sti
xchg
jbe
test
ljmp
lahf
dec
mov
push
dec
add
cmp
xor
adc
orb
aas
jmp
jecxz
aad
out
es
dec
rorl
mov
mov
sub
xchg
inc
mov
adc
dec
lods
and
test
je
cmpsl
jb
cmp
add
mov
lea
fcmove
ficoms
jl
sbb
xchg
daa
sbb
jbe
fimull
hlt
cmpsb
adc
pop
inc
mov
int3
lret
cmp
fists
outsb
mov
xchg
xchg
xorb
out
mov
sbb
nop
leave
xchg
clc
xlat
out
dec
sti
scas
xchg
hlt
out
sbbb
dec
add
frstor
inc
pop
and
sbb
mov
lods
fcoml
jmp
aaa
sub
mov
mov
xchg
popa
data16
enter
adc
inc
lret
je
or
cmp
je
cmp
cld
insb
jne
or
and
faddl
and
mov
call
dec
repnz
jge
and
arpl
outsb
cmp
imul
lret
sbb
in
sbb
mov
push
stos
pop
out
repnz
pop
push
xor
mov
push
ret
xchg
dec
xor
aad
leave
aaa
bound
ss
mov
mov
sarl
bound
in
xchg
push
clc
loop
mov
enter
dec
insl
idivb
inc
scas
ljmp
fwait
jecxz
mov
hlt
mov
loop
add
pushf
rol
lock
ja
xchg
jp
shl
pop
dec
adc
in
push
bound
test
jno
pop
push
cltd
xor
fisubrl
mov
adc
sti
adc
adc
pop
fs
out
and
es
push
jbe
mov
mov
fildl
xlat
dec
push
ja
mov
cli
and
je
in
cld
lock
sub
push
xor
in
fisubl
nop
aam
insb
mulb
out
insb
ror
mov
loopne
outsl
out
dec
add
mov
jmp
pop
xchg
aad
mov
out
cmp
sbb
jno
mov
xor
and
pop
sbb
fimuls
sbb
jmp
stos
popl
insl
jmp
lds
inc
dec
add
mov
lds
imul
test
pop
mov
mov
or
xor
pushf
movsb
fcmovnu
or
mov
jle
cmp
push
hlt
sbb
inc
dec
xchg
or
in
std
addr16
xor
icebp
and
mov
aad
push
test
adcb
dec
xorl
adc
std
sub
lret
jne
int
imul
out
or
sub
mov
cld
hlt
addr16
leave
push
orl
sub
aad
cltd
data16
out
pop
xor
adc
cmp
pop
cmpsl
test
inc
jge
xchg
aaa
mov
add
jae
sahf
jb
cld
cmpsl
push
pop
jns
je
pop
stc
cs
sbb
sbb
pop
xchg
dec
insb
fildl
xor
and
jmp
or
loopne
test
fisubrl
mov
jb
std
das
add
loope
jge
xchg
adc
push
ret
jle
fs
pushf
ds
stos
dec
ret
fld
mov
jmp
cmpsl
jmp
adc
loopne
and
clc
cmp
mov
inc
lock
and
mov
mov
stc
cltd
loop
fsts
les
rorb
movsl
ja
aad
dec
imul
scas
fwait
scas
stc
jge
and
les
or
mov
call
fbstp
jmp
or
popa
sbb
mov
jecxz
shrb
fsqrt
xor
mov
jno
mov
jecxz
jge
xor
arpl
pop
stos
pop
stos
push
insl
lcall
sarb
hlt
dec
xchg
jl
fdivl
imul
xchg
mov
xchg
outsl
test
cli
fmull
push
pop
hlt
pop
insb
inc
cmp
shrl
scas
or
cmp
xchg
lea
std
pop
sub
mov
cmp
cmp
insl
mov
arpl
arpl
mov
push
jmp
xchg
bound
ljmp
xchg
cmpsb
cmpsl
subl
cmpsl
rorb
cli
inc
xor
insl
push
jg
cmp
bound
rorb
int
in
mov
dec
enter
outsb
call
cmpsb
mov
subb
or
mov
fldenv
cwtl
cmp
outsb
popf
and
lds
test
push
adc
lock
cmc
cltd
adc
rorl
and
mov
jno
sbb
push
dec
xchg
stos
data16
or
adc
mov
lcall
test
xchg
mov
add
mov
outsb
mov
fidivl
cmp
xchg
dec
xor
jmp
pop
pop
or
test
mov
jle
shlb
mov
pop
insb
inc
adc
inc
sahf
sahf
sub
outsl
hlt
adc
sub
ljmp
fidivl
shlb
dec
dec
xor
jae
jecxz
aam
lods
les
xchg
or
cmp
sub
test
shlb
andl
inc
jnp
mov
lahf
and
test
in
in
insl
xor
cmp
outsl
test
mov
sub
roll
jnp
daa
int3
loop
xor
mov
mov
add
in
xor
imul
repz
add
shlb
int3
das
sbb
pop
sub
sbb
cltd
mov
daa
pushf
pop
test
fists
jbe
sbb
sar
mov
jbe
addl
test
sbb
xor
inc
icebp
cmpb
and
jno
pop
push
test
in
mov
repz
or
icebp
mov
jae
stos
jne
xor
pushf
inc
jb
pop
std
or
fisttps
jecxz
dec
inc
popa
imul
aad
mov
push
jb
int3
cmp
fadd
in
xchg
inc
sbb
sbb
ss
push
mov
xorb
inc
fbstp
sbb
pop
pop
inc
jl
pop
in
insl
or
cwtl
icebp
lea
push
es
jp
push
xchg
ror
out
orb
ficompl
mov
lret
les
test
push
or
data16
xchg
daa
out
in
data16
mov
out
mov
add
cmp
add
push
dec
imul
adc
jmp
lahf
ja
in
inc
mov
mov
daa
jne
cmpsb
sbb
and
iret
push
aas
mov
scas
mov
sbb
ss
das
stc
js
out
sub
cmc
ljmp
xchg
es
popa
pop
pop
jp
shlb
xor
ja
test
call
add
push
in
pop
sbb
insl
rcrb
inc
popl
outsb
ljmp
std
xchg
add
and
jg
xlat
mov
sub
push
stc
les
push
jmp
dec
inc
aad
stos
sbb
sbb
mov
pushf
mov
in
out
mov
icebp
push
std
mov
mov
getsec
popa
fnstsw
loop
js
insl
and
pop
popa
movsb
lods
jg
pop
loop
scas
pop
loope
lahf
sbb
sub
pop
scas
mov
out
sbb
jecxz
dec
xor
mov
mov
jl
lea
and
cmp
mov
or
aas
cmp
xchg
mov
xor
orl
mov
test
push
cmpsl
arpl
movsl
mov
les
push
in
js
jns
sti
push
jge
cmp
inc
or
inc
mov
sub
or
adc
daa
fldl
inc
mov
nop
cltd
mov
jne
orl
imul
xor
jmp
adc
loopne
pop
loope
mov
push
mov
in
xchg
and
jecxz
or
inc
and
aaa
or
push
gs
lods
jge
mov
clc
pop
mov
daa
sbb
jne
std
rcr
flds
jle
cltd
gs
xchg
fistl
mov
sbb
mov
adc
fwait
mov
imul
mov
adc
test
cmp
add
ret
xchg
in
fidivrl
out
fwait
pop
gs
loop
and
dec
jnp
mov
or
sbb
js
inc
jnp
shlb
fwait
adcb
sti
icebp
xchg
dec
jmp
fsubp
mov
mov
lcall
cmp
xchg
inc
jp
icebp
data16
sub
ljmp
ja
sahf
jb
movsl
out
out
outsl
mov
orl
mov
gs
mov
push
add
and
cmc
add
xchg
leave
movsl
mov
or
cli
xchg
pop
xchg
int3
or
sbb
fiadds
pop
aam
jp
sti
ds
or
push
push
mov
cmp
pop
sub
inc
lods
cmp
ds
cmp
push
xchg
add
andb
adc
scas
xchg
popa
lahf
adc
data16
jmp
and
push
cwtl
std
cmp
test
aam
jmp
stc
and
sub
and
bound
adc
xlat
pop
cmpsb
push
sti
mov
dec
mov
imul
pop
pusha
hlt
push
xchg
lret
js
xchg
push
aaa
popa
jl
cmpsb
cmc
imul
jmp
dec
out
arpl
mov
aaa
loop
sub
dec
sub
leave
idivb
roll
jns
jne
int
push
jo
sbb
xor
fsubrs
push
jmp
pop
subl
sub
dec
sbb
pop
sub
lret
test
stc
imul
movsl
call
push
ja
sub
and
cmp
push
add
sub
shll
and
adc
in
leave
daa
inc
mov
mov
push
add
push
mov
push
sbb
out
mov
cmp
add
inc
xchg
sbb
sub
jg
pusha
pop
out
mov
cmp
outsl
or
or
mov
imul
mov
out
dec
dec
filds
xchg
push
outsb
addr16
cmp
mov
mov
fistl
mov
fldenv
daa
cmc
std
xchg
lods
xchg
sub
inc
sarl
fisttpl
cmp
push
daa
dec
jns
jge
cmp
or
jmp
add
inc
pop
inc
xchg
test
or
mov
xor
sti
sub
and
inc
out
lahf
xchg
ja
mov
movsl
subl
push
stos
or
test
push
sub
mov
or
int
inc
out
pop
insl
int
popa
aas
sub
xchg
lret
inc
ss
add
jb
subb
in
push
cmc
add
pop
xchg
lock
pusha
cltd
mov
mul
arpl
adc
fisttpl
mov
out
dec
mov
pop
subb
mov
or
aad
xor
adc
imulb
xchg
subl
jmp
xor
ljmp
sbb
inc
sti
mov
insl
cltd
les
ret
data16
mov
dec
sbb
mov
insl
adcb
inc
add
cmp
adc
loopne
pusha
subl
adc
popa
push
xor
cmp
add
fidivs
push
mov
lret
add
and
mov
rolb
mov
lahf
xor
pushf
sti
or
cmp
and
add
test
fists
bound
shlb
push
test
push
xor
mov
mov
rcr
add
negb
ljmp
push
adc
jns
cli
mov
imul
sub
mov
cwtl
daa
clc
add
push
sub
and
iret
cmp
inc
mov
in
jmp
push
movsb
push
in
sub
sub
dec
dec
dec
mov
pushf
dec
mov
inc
test
addl
mov
push
loop
sbb
pop
cld
icebp
testb
cmp
dec
dec
xor
push
mov
in
cmpsl
loope
inc
nop
iret
testl
es
lcall
and
mov
pushf
cmp
xor
mov
sbb
sub
push
std
pop
mov
lahf
mov
mov
lret
mov
hlt
lret
push
loop
mov
xor
xchg
dec
cmpsb
push
cmpsb
out
inc
mov
push
dec
stc
les
ficompl
xor
cmp
je
xor
and
xchg
int3
rcrb
ja
imul
dec
nop
fcom
mov
fimuls
sahf
mov
adc
sti
inc
pop
test
cltd
jbe
mov
scas
in
es
icebp
mov
adc
cmp
lret
insb
icebp
dec
xor
loope
or
enter
push
data16
sub
aaa
hlt
sahf
push
ja
aam
cmp
rcrl
iret
aad
add
mov
or
call
pusha
inc
cltd
out
jle
jmp
and
repz
sarl
aas
sub
cli
xor
arpl
xchg
sti
inc
mov
mov
loop
mov
dec
jecxz
call
adc
mov
inc
mov
push
add
cmp
inc
xchg
and
decl
int3
and
jmp
push
cmp
dec
cmpsb
shll
jle
pusha
mov
add
cmp
mov
fmul
xchg
fbld
pop
test
fidivl
movsb
shlb
sub
jno
xor
fstp
adc
out
add
int
inc
jg
imul
inc
inc
iret
sbb
cmp
jbe
sbb
out
lds
inc
jbe
push
xchg
outsb
inc
xor
jns
push
inc
int3
test
mov
sarb
xchg
dec
adc
xor
push
xchg
sub
push
in
jnp
sbb
popf
sbb
mov
and
inc
jmp
xchg
sub
adc
sbb
ja
addb
adc
aad
out
dec
clc
mov
xor
cld
xor
pop
mov
sti
stc
lock
push
aad
mov
pop
je
dec
repnz
addb
adc
mov
out
cmpsl
mov
xor
addb
out
sbbl
insb
rcrb
xor
adc
ss
xor
sti
mov
ror
pop
inc
and
adc
fsubs
in
mov
ja
out
cwtl
bound
and
mov
mov
enter
arpl
lods
cmp
sub
adc
adc
or
enter
cmp
pop
pop
js
dec
inc
mov
pop
shll
dec
lods
es
fldt
out
popf
dec
lret
mov
jo
push
and
jmp
fstl
loope
and
repnz
mov
xor
push
rolb
dec
add
mov
or
fs
mov
and
sub
bound
mov
int
inc
ficoml
push
shll
repz
push
sbb
pop
xchg
mov
inc
mov
mul
mov
push
jp
sbb
sti
mov
cld
lret
xlat
xor
repz
lcall
or
aad
lds
emms
rolb
sahf
out
pop
pop
rcll
lahf
or
std
mov
xor
scas
lds
jmp
int3
or
shl
mov
inc
stos
in
loop
cwtl
jns
push
adc
and
call
iret
icebp
dec
jbe
and
mov
sarb
pop
insb
and
jl
inc
xor
out
adc
adc
lcall
pop
arpl
add
xchg
sbb
movsl
jp
mov
outsl
out
cmpsb
in
pushf
pop
add
lods
inc
in
rorb
cmp
cmpsb
icebp
xchg
and
fisubs
call
hlt
and
fsts
call
sbb
imul
das
push
cmpb
push
xor
invd
in
mov
fists
lcall
out
lret
sbb
push
incl
loope
xor
icebp
insl
xchg
adc
push
pop
imul
int
call
sub
pop
into
js
lds
mov
pop
inc
arpl
pop
fldcw
mov
out
sub
mov
xor
mov
lds
pop
xchg
cmp
cmp
mov
nop
mov
push
and
inc
xchg
sub
pop
pop
pop
nop
push
mov
fidivrs
nop
fmulp
pop
dec
add
fcoml
xchg
xor
xor
pushl
or
pop
jbe
outsl
stos
fiaddl
js
fistl
xchg
sbb
sub
add
dec
out
iret
int3
mov
test
add
scas
cmpsl
fdivrl
js
ds
add
js
mov
orb
xchg
das
mov
xchg
mov
iret
or
pop
clc
or
movzwl
and
xchg
cmp
cltd
jno
fsub
test
and
dec
mov
or
pop
cmp
hlt
ja
int3
or
pop
testl
jnp
js
mov
lock
xor
bound
sub
mov
sahf
test
fdiv
mov
mov
lds
lds
add
and
mov
fs
cmp
and
xorb
dec
roll
add
cltd
loop
xchg
dec
fucom
aaa
cmp
push
nop
pop
inc
test
jecxz
mov
or
and
push
mov
add
call
sarb
pop
movsl
jmp
dec
mov
das
lds
mov
vmovmskps
xlat
scas
xor
nop
pushf
ljmp
je
andb
add
cmp
idivb
pushl
push
push
jae
xchg
jmp
dec
enter
mov
mov
jb
aas
and
addr16
mov
push
iret
mov
les
jnp
pushf
pop
test
je
jp
movsb
sbb
pushf
mov
mov
pop
movsl
pop
jle
inc
out
cmp
cmp
push
loop
clc
xor
das
xchg
xchg
mov
sahf
in
add
lret
in
xor
mov
addr16
mull
rcll
call
gs
lds
daa
aas
icebp
jp
imul
jmp
sbb
inc
movsb
sbb
add
enter
sub
test
icebp
loop
push
fdivrl
das
inc
test
jl
test
iret
xor
into
lods
dec
xchg
mov
das
inc
mov
test
pop
push
sti
xchg
fidivrs
nop
pop
push
xor
les
add
mov
test
negl
pop
fs
xlat
fld
ljmp
rcll
shl
movswl
stc
arpl
jecxz
cmpsl
insb
and
fisubs
lret
sub
cmpsb
cltd
sbb
push
cmpsb
mov
in
xchg
daa
sbb
js
rcll
pop
push
mov
lea
sbb
scas
imul
lods
shl
aad
sbb
addr16
mov
loop
xchg
mov
cmp
sti
jb
pop
daa
and
pop
cmc
testl
mov
cmp
sti
jp
movsb
push
fimull
and
dec
inc
hlt
fisubs
jmp
dec
or
outsl
push
call
ss
add
fisttps
xchg
test
sbb
mov
popa
mov
dec
jp
mov
data16
push
push
dec
jae
cmpsb
in
xlat
and
ret
aaa
lahf
ret
mov
sub
push
xchg
sbb
or
cmp
adcb
push
ret
pop
add
hlt
lea
sub
xor
jbe
jbe
mov
movb
dec
insl
in
lahf
inc
sub
sahf
adc
icebp
xchg
test
jmp
pop
jge
cmp
fistpl
push
cmp
push
dec
je
hlt
mov
ja
xchg
sarb
adc
push
out
cli
repz
icebp
je
pop
mov
les
xor
xchg
out
enter
jnp
adc
pop
mov
pop
movsl
or
pop
mov
jge
push
mov
arpl
shlb
push
jbe
push
mov
pop
leave
mov
inc
and
in
jae
enter
loope
mov
sbb
cs
jb
mov
int3
jb
icebp
imull
sahf
add
cmp
fwait
das
jno
mov
sub
add
inc
out
arpl
cmp
add
adc
sub
or
insb
push
inc
mov
aad
cmp
test
dec
cmpsl
and
mov
mov
cmp
adc
icebp
ret
enter
aad
bnd
sub
dec
out
mov
xor
cli
push
mov
add
pop
jns
adc
and
dec
rcll
sti
jmp
mov
in
cmovg
lds
xor
pusha
adc
push
push
das
pop
xchg
pop
jno
xchg
mov
je
dec
in
xor
test
jb
movsb
in
xor
mov
mov
inc
xchg
std
pop
clc
or
in
bound
jo
push
ja
jnp
addw
in
mov
ljmp
movsl
jbe
cmp
or
sub
data16
and
add
and
mov
sbb
pop
mov
call
jno
js
popa
jno
push
adc
insb
subl
popa
mov
gs
or
gs
fstpl
in
ljmp
repnz
cmc
xchg
out
adc
jge
lret
mov
popf
pop
mov
int
in
movsl
mov
mov
inc
sub
fimuls
jae
data16
daa
mov
outsb
or
in
mov
shrl
cmp
pop
lods
out
mov
cmp
and
jns
dec
mov
fcmovnbe
jae
mov
popf
rcrl
dec
sub
into
mov
fsubrs
mov
mov
sbb
jbe
shrb
push
add
call
out
adc
xor
push
imul
test
push
pop
ja
test
movsl
inc
ljmp
xor
divl
xchg
repz
out
jg
iret
into
cmc
ret
scas
rol
hlt
cmc
xchg
into
pop
sub
out
bound
xor
aad
xchg
push
icebp
cmc
scas
scas
push
mov
inc
int3
sbb
fists
scas
lock
lds
inc
and
mov
das
cmp
xor
sti
sbb
jmp
push
or
dec
or
inc
adc
mov
and
hlt
rcr
fwait
sub
mov
cli
test
sar
loope
cli
pop
adc
or
or
outsl
enter
scas
aad
sbb
dec
mov
in
pop
adc
inc
daa
mov
das
aam
fildll
pop
xor
leave
in
pop
dec
int3
sub
in
mov
push
lock
push
fsts
call
bound
cld
ret
cltd
lods
inc
mov
push
hlt
push
push
aam
adc
js
out
sub
fnstsw
pushf
xor
xchg
stc
test
sarb
fsubrp
sub
mov
add
sti
loope
std
daa
insl
jmp
mov
push
incl
fisubrl
pop
jns
mov
int
pop
jle
ret
iret
call
int
add
test
jge
das
inc
pop
or
lcall
mov
jle
das
ss
filds
fistpl
lret
jnp
jecxz
popf
iret
outsb
cs
adc
movsb
push
pop
pop
mov
pop
in
or
mov
mov
or
add
rcl
or
pop
lcall
mov
pop
push
xchg
test
pop
jge
rcr
sahf
rorb
adc
rcll
mul
or
stos
jne
jl
or
ss
add
lock
test
mov
mov
sub
std
cmp
mov
push
cmpsl
cli
dec
ja
xchg
jb
mov
jmp
test
jl
push
je
adc
mov
nop
sub
or
adc
rcrb
iret
and
pop
cld
xchg
sbb
shlb
jl
mov
lods
out
and
pop
ja
lret
ret
mov
xchg
and
sub
cmp
jmp
cwtl
cmp
scas
inc
and
pop
lret
std
xchg
mov
push
sbb
or
inc
xchg
inc
mov
xor
sbb
in
movsl
mov
mov
push
sub
imul
loop
nop
or
jp
bound
movsb
addr16
pop
dec
adcb
cltd
jle
or
addr16
inc
idivl
sbb
xor
ds
xchg
cmp
dec
ret
jno
pop
call
adc
push
push
xchg
pop
xchg
cmpl
js
out
xchg
negb
inc
xchg
shll
jle
and
cld
inc
mov
dec
cmp
sub
addb
mov
mov
pushf
push
push
ss
ficomps
inc
pusha
sub
outsb
xchg
insb
fmuls
mov
insb
repz
inc
insl
ljmp
jnp
add
cs
fdivrl
ja,pn
int
icebp
cs
inc
aas
nop
xchg
sub
lret
pop
sti
or
dec
mov
and
mov
xchg
lret
insl
int3
xorl
ret
adc
inc
add
rclb
jnp
pop
outsb
nop
pop
jbe
jae
or
imul
xor
push
int
adc
adc
scas
or
loopne
or
int3
inc
aaa
fildll
fmul
push
xchg
in
cmp
jge
sahf
jno
jno
int
shr
pop
inc
mov
je
pop
jbe
sarb
dec
dec
sub
lods
iret
push
inc
xor
int
ss
pop
sbb
mov
lahf
movsl
mov
jae
loope
jb
stos
push
jae
adc
or
mov
mov
cmpsl
into
pop
addr16
mov
testl
cmp
push
dec
adc
inc
add
insb
xchg
lock
fldt
imul
mov
js
test
loopne
fldcw
inc
sbb
out
jle
add
pop
adc
jo
push
inc
and
jg
sub
mov
pop
lret
sbbb
and
add
ss
xchg
loope
fs
push
andl
icebp
flds
sbb
outsl
sti
std
std
mov
or
shrl
sbb
js
loop
mov
stc
movsl
stos
jecxz
mov
sub
xor
jle
mov
test
int3
mov
or
fdivrp
clc
popa
dec
out
subl
xor
outsb
push
add
push
mov
scas
lret
mov
movl
aad
sub
lret
mov
pop
xor
or
daa
loope
jmp
mov
dec
dec
pop
sbb
or
lock
cmp
cmpsl
lods
jg
addl
sub
and
lret
mov
jle
dec
out
stos
fstpl
jg
stos
dec
aad
pop
lret
stos
mov
mov
sbb
mov
or
fwait
push
mov
sbb
adc
lock
sbb
fisubrl
out
lea
mov
hlt
out
xor
push
dec
add
cwtl
fadds
sub
fmull
xchg
mov
ljmp
or
push
cltd
xchg
in
std
clc
cmp
and
mov
fldl
inc
push
inc
add
jbe
sub
sbb
pop
jns
mov
jb
rcrb
xchg
stos
jbe
jno
jecxz
fwait
jle
sbb
push
mov
cmp
push
pusha
cld
push
out
xor
sbb
add
jg
mov
insl
add
mov
mov
lahf
sub
in
mov
push
popf
insl
dec
mov
pop
ss
aas
lock
stos
jg
cmp
or
aaa
dec
sbb
sub
out
sar
into
mov
test
jge
pop
movsl
dec
adc
add
pop
xor
mov
ret
dec
jbe
arpl
mov
jne
ret
jg
test
fs
pop
mov
push
push
lret
inc
jno
lahf
add
pushl
push
in
fadds
iret
sub
hlt
orb
or
and
aad
mov
add
cld
xchg
mov
jne
sbb
mov
shlb
add
cld
jnp
sti
mov
les
pop
sbb
mov
xchg
mov
mov
rcl
push
pop
xchg
cld
testb
add
sti
ljmp
pop
pushf
cmp
push
and
push
aaa
xchg
loopne
and
adc
push
add
stos
sbb
iret
mov
xor
mov
adc
mov
mov
mov
std
xor
sbb
dec
cmc
add
mov
jae
sub
inc
mov
lds
mov
xlat
cmc
call
cmp
xchg
push
les
leave
push
xchg
push
mov
stos
sub
push
mov
or
popa
mov
in
sub
in
dec
mov
stc
pop
mov
xchg
in
in
sti
xor
adc
fcmovnu
in
dec
mov
xchg
pushf
adc
xchg
mov
mov
xor
jo
mov
sbb
push
push
jmp
movsb
test
xchg
cmc
andl
sbb
lcall
or
movsl
cmp
sub
test
je
and
mov
std
xor
or
insl
cs
xchg
mov
in
andl
lock
gs
jg
adc
dec
call
arpl
xor
lea
push
mov
pop
add
test
sub
dec
int
inc
mov
inc
pop
jae
or
mov
je
pop
cmpsl
std
imul
arpl
dec
les
jne
inc
mov
lret
data16
push
push
pop
push
inc
loopne
test
dec
repnz
dec
mov
or
insb
rcl
xchg
ret
fldt
sbb
push
outsb
arpl
mov
repz
sub
inc
xchg
inc
and
ret
inc
push
cmpsb
jl
or
sbb
sahf
xor
mov
imul
loope
in
jno
mov
pop
dec
fldt
inc
mov
lock
testb
jl
xor
ret
xchg
and
dec
popf
js
mov
call
push
mov
je
or
xchg
sbbl
push
jno
js
fiaddl
lods
icebp
jle
mov
inc
or
cmp
mov
xchg
xor
mov
andb
popa
push
add
fwait
sbb
loope
push
cmp
fisttpl
loopne
fwait
lret
or
mov
fists
bound
dec
adc
add
ja
or
and
push
das
or
push
bound
int
add
mov
mov
rcr
mov
out
xor
or
pop
lods
lock
outsl
addr16
inc
testl
dec
shll
cmc
aas
xor
or
push
cwtl
ss
out
cwtl
out
clc
mov
pop
in
fidivl
lcall
inc
test
push
pop
dec
push
arpl
and
jge
jl
or
cwtl
dec
stos
add
push
lods
movsl
jmp
lock
add
jle
xor
int3
mov
fidivs
fs
enter
lds
stos
pop
ret
lcall
or
push
fs
add
mov
int3
out
pop
shll
pop
and
xor
ficompl
mov
stos
push
data16
orb
or
insl
fcmovnb
fidivs
dec
or
loopne
iret
pop
fbstp
arpl
mov
cld
or
fwait
insb
adc
imul
mov
insb
sub
test
inc
stos
cld
test
ss
pop
ss
inc
enter
cmp
in
or
push
movsb
jmp
pushf
sbbb
jge
xor
jo
sahf
imul
add
dec
test
outsl
mov
mov
in
rclb
ror
lret
icebp
jg
ljmp
in
fcoml
push
xor
mov
pop
jmp
loopne
cmp
push
xchg
sbb
inc
sub
addr16
cmp
add
adc
enter
fcoms
and
popf
inc
cld
dec
inc
xchg
sub
or
stos
sbb
ljmp
imul
lret
dec
xor
cmp
test
sub
in
js
inc
fbstp
push
mov
xor
sbb
icebp
pushf
xchg
and
jl
fildl
stos
or
fstpl
inc
xchg
mov
add
mov
lock
xor
mov
divl
cwtl
js
stos
inc
jnp
xchg
cmp
adc
inc
and
cld
pop
stos
jns
mov
mov
cltd
out
je
push
dec
cmp
cmp
and
mov
jmp
xor
inc
mov
pop
lea
test
cmp
xchg
pop
and
mov
stc
addl
stos
repz
mov
and
mov
iret
fs
xor
mov
stos
mov
imul
pop
add
dec
sbb
push
out
adc
adc
loop
lret
fcomps
inc
adc
jne
mov
add
inc
cmpsb
iret
inc
subb
ss
jge
ljmp
nop
iret
loopne
arpl
outsb
dec
hlt
incl
call
jno
negl
ret
pop
sub
stc
loop
fldt
cltd
js
and
inc
repz
popf
push
popf
popf
xchg
addr16
push
roll
dec
das
rcr
addr16
jl
and
adc
cli
add
jae
dec
xor
mov
jl
shll
aas
mov
mov
lahf
dec
icebp
or
sbb
pop
xlat
dec
insb
stc
mov
test
sbb
push
inc
and
stos
pop
insl
mov
addr16
nop
iret
push
push
jne
mov
test
add
ret
lods
mov
add
pop
lds
add
and
jle
mov
cmpsb
mov
inc
adc
int3
iret
in
inc
js
pop
scas
cli
pop
shl
sub
fldenv
dec
icebp
fs
cld
bound
in
and
adc
out
sub
fcmove
xor
push
mov
cmp
mov
stc
jl
loopne
push
paddsw
imul
stc
inc
jae
dec
inc
dec
aaa
xchg
sti
sbb
icebp
outsl
lods
fdivr
or
in
dec
cmp
sbb
cmp
aas
and
divl
repnz
cwtl
stos
dec
add
or
sbb
xchg
shrl
mov
testl
movsb
inc
lea
rorl
mov
mov
adc
add
popa
pushf
je
lcall
jne
mov
mov
xchg
push
cmp
and
out
push
mov
adc
or
das
aas
inc
pavgw
xor
mov
mov
adc
pushl
jo
mov
push
jmp
jne
int3
dec
aam
je
pop
jbe
xor
add
sub
imul
cmp
ds
pop
adc
cli
dec
lcall
lods
out
fs
mov
mov
mov
push
fldenv
pop
xchg
test
cmp
outsb
fldcw
xor
push
aaa
js
js
repnz
test
data16
push
sbb
enter
addr16
push
mov
add
jg
lods
mov
mov
jle
or
sub
rcll
dec
cmp
cltd
sub
sti
lods
cmp
and
cmp
inc
jae
imul
pusha
jp
rol
stos
mov
sub
addl
sbb
add
imul
cmp
fdivl
insl
ret
dec
in
adc
fsts
dec
jp
les
mov
imul
sti
bound
jg
mov
imul
ds
sub
or
stos
lret
mov
imul
repz
xor
ret
mov
cmpsl
sub
push
sbb
mov
fstpl
push
ljmp
jp
lods
push
dec
jecxz
rcr
insl
sub
sub
or
movsw
add
push
js
mov
decb
cmp
jge
repnz
or
xchg
mov
jne
ficoms
sub
je
cmp
dec
push
jns
cld
dec
shrl
sub
lahf
inc
fistpll
out
in
cmp
cmpsb
mov
mov
add
nop
push
in
in
cmp
adc
mov
in
adc
mov
fsubrl
sarl
repz
int
cs
cmp
sub
hlt
in
mov
adc
aad
loope
mov
adc
mov
or
dec
pop
dec
pop
andb
jae
mov
test
nop
xchg
in
dec
xor
push
mov
das
mul
dec
jo
sub
lods
adc
adc
mov
lds
dec
mov
lahf
sbb
ss
fs
inc
push
dec
mov
pop
into
test
push
out
leave
cmp
cld
or
mov
repnz
imulb
xchg
ds
cli
fidivs
popf
decl
pop
jb
xchg
adc
jle
push
pop
shrb
fdivrl
lods
adc
dec
jmp
cld
adc
jg
imul
jbe
movsl
pusha
stos
lret
jecxz
arpl
lret
stc
mov
add
pop
cmp
and
sbb
popf
push
in
bound
or
repz
mov
jp
xchg
dec
cmp
je
pop
dec
mov
pop
and
or
xchg
cli
std
inc
xchg
repz
ljmp
lret
pop
mov
mov
jbe
cwtl
adc
cwtl
sahf
aas
test
fadds
push
sbb
cmpsl
outsb
mov
add
mov
push
add
xor
nop
subb
mov
mov
cmc
jge
adc
and
lock
mov
dec
lods
mov
ret
cmp
sti
clc
fsubrs
icebp
cmp
jae
dec
dec
gs
mov
divl
rcl
mov
xor
cmp
jb
jp
mov
add
sbbl
fdivrl
mov
adc
fsubs
les
hlt
mov
mov
bound
add
push
dec
inc
adc
arpl
aam
xchg
add
roll
lock
bound
add
cmp
sbb
out
lock
push
or
pop
dec
push
popa
add
insl
mov
xchg
mov
imul
add
jne
ud0
mov
fwait
push
dec
ljmp
cmpsl
xlat
push
mov
mov
and
clc
xchg
sbb
mov
add
aaa
mov
push
rcl
lahf
push
mov
jno
sub
push
insl
jmp
xor
sub
jl
adc
popa
mov
xor
cmc
mov
gs
or
std
rorb
mov
xchg
add
test
ret
or
sub
mov
inc
stos
test
sbb
std
dec
mov
jbe
ss
add
sbb
lods
sbb
scas
insl
lahf
adc
xchg
mov
mov
test
xchg
jns
cmp
push
outsl
mov
in
pop
iret
repnz
xchg
testl
inc
jle
add
sub
dec
sbb
mov
sub
jge
push
ficomps
dec
cmc
in
xor
mov
les
adc
out
cmp
jg
jecxz
stos
pop
pushf
push
inc
mov
arpl
scas
repz
fdivrl
shrb
lea
scas
mov
mov
pop
inc
xor
inc
jb
push
mov
mov
bnd
iret
inc
bound
jnp
sbb
mov
outsb
nop
push
insb
ja
fidivrl
mov
or
iret
sub
rclb
xlat
push
pusha
xchg
arpl
inc
test
cmp
cmp
lods
scas
filds
pusha
sub
dec
repnz
xor
pop
daa
pop
fs
mov
or
jg
and
mov
sub
sbb
jg
dec
add
scas
fisubrl
pop
sub
out
negb
sbb
mov
inc
dec
jp
aaa
adcb
jge
push
add
push
int
mov
sbb
jge
out
cld
mov
cmp
dec
jno
cs
lea
and
mov
stos
lea
add
push
pop
pop
inc
mov
addb
add
negl
leave
or
xchg
jl
stos
add
sti
xor
push
and
dec
in
cli
addr16
aam
adc
cwtl
add
fstl
cmp
push
mov
popf
xor
call
out
cli
clc
adc
and
popf
in
mov
pop
or
dec
jno
repz
imul
cmp
add
cmp
xor
in
loopne
out
jne
es
lahf
ror
scas
cltd
xor
pusha
out
rcl
loopne
jle
ret
inc
mov
inc
ja
sbb
push
dec
inc
scas
dec
add
orps
add
sub
dec
sbb
iret
pop
mov
sti
nop
loop
dec
pop
xor
adc
nop
cmpsb
jg
dec
push
mov
mov
xor
pop
faddl
gs
push
sarl
sbb
jbe
je
mov
lods
cs
jne
and
adc
sub
pusha
and
cmp
inc
clc
push
loopne
ljmp
mov
mov
sub
mov
mov
les
and
jne
and
dec
jg
sbb
loop
xor
int3
rcrb
outsl
jno
mov
pop
mov
jg
xchg
xchg
out
test
loopne
sub
add
inc
dec
cmp
jp
push
pop
aaa
ret
imul
arpl
mov
dec
int
jmp
repz
mov
scas
or
out
fwait
testl
add
pop
outsb
mov
xchg
hlt
out
test
rorb
mov
mov
inc
xor
fimuls
adc
js
ds
mov
out
sbbb
push
test
mov
loopne
inc
cmp
cmp
jae
mov
xor
lahf
xchg
outsb
push
adc
jae
mov
xchg
stos
arpl
or
in
sub
push
xlat
dec
mov
add
jg
insl
add
jns
dec
gs
and
mov
test
test
gs
cmpsb
dec
jno
lret
adc
mov
xchg
adc
insl
in
or
mov
pop
jns
jnp
cmp
lahf
pushf
pop
xchg
pushf
push
insl
dec
sub
adc
cmc
xchg
outsl
inc
fdivrl
aad
aad
adc
loope
jl
in
mov
cmp
xor
dec
push
xchg
and
gs
pop
rorl
push
iret
outsl
je
les
test
shlb
maskmovq
mov
xorl
mov
pop
or
test
add
mov
andb
pop
dec
in
xchg
imul
adc
lret
insb
rcrl
xchg
pop
pop
jge
test
xor
jl
mov
sub
outsl
mov
dec
add
mov
test
inc
repz
sbb
cmp
lahf
cld
pop
cli
std
imul
sbb
pop
ret
dec
mov
mov
pop
sub
in
scas
cld
leave
mov
mov
aas
xlat
lcall
call
jnp
or
hlt
loop
mov
insb
dec
stos
jae
and
adc
xchg
cltd
inc
jae
aaa
rcll
in
jmp
in
cs
pusha
cltd
pop
arpl
hlt
dec
pop
dec
lods
mov
push
dec
lret
pop
sbb
mov
dec
movsb
repnz
stos
push
cmpl
gs
jecxz
cltd
add
cld
aas
outsb
add
sbb
sar
enter
in
sbb
testl
push
push
lods
out
inc
stos
mov
mov
adc
adc
imul
cmp
inc
insl
cmp
les
mov
test
sub
mov
loope
in
loopne
or
jae
aam
out
xchg
in
gs
add
shrb
jg
lcall
shll
mov
scas
je
loope
inc
mov
andb
xor
cwtl
cli
mov
sbb
add
stc
adc
fcmovnu
roll
lcall
push
cmc
lock
push
pushf
inc
dec
or
mov
aaa
js
pop
dec
adc
aaa
int
or
mov
scas
lret
sub
and
lds
push
sub
out
and
addr16
nop
jmp
mov
adc
loop
fadds
test
bndstx
pop
mov
lret
xor
xchg
jns
ljmp
shl
sbb
jno
cmp
hlt
adc
mov
cmp
dec
jecxz
out
mov
push
sub
pop
std
sbb
adc
jbe
pop
xchg
sub
sahf
loopne
sahf
cwtl
lahf
dec
call
push
popf
outsl
in
sbb
xchg
les
bound
rep
shll
cli
add
cs
int
lods
sbb
or
jecxz
cmc
push
mov
pop
rcrl
outsl
and
push
push
iret
cltd
mov
stos
mov
xor
xor
pop
lock
xor
dec
or
add
add
pop
dec
in
inc
call
in
sbb
ja
mov
add
insl
fisttps
pop
push
cli
push
das
fs
icebp
mov
aam
stos
mov
loopne
outsl
xorl
inc
lea
je
lea
jnp
or
and
insl
loope
ficoml
mov
ds
push
shl
fwait
or
push
inc
cmp
dec
mov
out
sub
mov
xlat
loope
out
bound
push
pop
or
mov
mov
adc
outsl
arpl
ret
cmp
out
xchg
and
repz
lret
test
push
out
and
and
dec
nop
xchg
sbb
sub
nop
sahf
xor
adc
fdivrs
mov
inc
xchg
xor
pop
sti
push
add
sbb
pop
fisubs
xsha1
cmpsb
dec
ds
das
xchg
in
adc
ficompl
push
cwtl
ss
pop
clc
jno
mov
pop
jb
lret
inc
addr16
test
pop
and
pop
inc
pushf
mov
or
cmp
iret
xchg
jbe
mov
pop
mov
xchg
xchg
dec
outsb
inc
loope
add
outsl
rorl
cmp
and
cmp
test
push
rorb
jne
jbe
loope
dec
inc
fwait
cmp
cwtl
stc
mov
mov
icebp
cld
loope
sbb
xchg
stc
mov
rcr
fsubrl
aam
orb
mov
cwtl
adc
leave
loopne
in
sub
das
shrb
jne
aam
push
orb
fwait
xchg
rcl
mull
pop
lock
push
pop
jns
insl
cmp
xlat
sub
pusha
stos
dec
addr16
fidivrl
fcmovnb
push
and
data16
popf
aaa
in
jns
and
out
add
push
xlat
mov
lcall
mov
rclb
dec
flds
sbb
dec
pop
and
adc
sub
xchg
mov
outsl
das
clc
mov
loop
dec
movsl
into
imul
push
mov
lea
int
jg
xor
xchg
adc
insl
shr
cwtl
inc
mov
frstor
shr
nop
jecxz
mov
cmpsl
scas
sub
fwait
sbb
mov
pusha
xchg
sbb
jno
or
dec
cmp
nop
cmpsl
gs
aam
jb
adc
inc
dec
pop
sub
pop
push
mov
ret
xchg
sub
cltd
mov
test
cmp
das
mov
int
repz
xlat
data16
int
mov
nop
fidivrs
faddp
popf
sbb
js
lcall
jae
out
mov
shr
dec
test
cwtl
push
mov
rorb
jge
push
mov
inc
pop
out
inc
add
out
lret
cmpsb
ret
cwtl
movsl
push
dec
lods
jle
in
call
push
test
jp
mulb
mov
jnp
cmp
test
inc
mov
xchg
push
xchg
outsb
sti
jae
insl
add
ljmp
inc
or
add
call
push
push
in
fidivl
adc
arpl
mov
enter
fwait
dec
ds
mov
fwait
jns
loope
in
fwait
pop
pop
xor
sbb
jmp
mov
lret
int3
add
sbb
aad
push
lds
movsb
push
pop
or
add
jns
push
mov
jnp
cmpsb
mov
in
rep
mov
stos
clc
xchg
adc
jle
add
xchg
xchg
mov
adc
test
data16
dec
loop
jo
mov
bnd
js
and
xchg
and
push
ret
fmuls
and
add
sbbl
ljmp
xchg
inc
outsl
cmp
cmp
and
in
sub
popf
nop
lods
sti
lods
aad
mov
test
mov
mov
push
in
sbb
xchg
sbb
sub
ljmp
jb
xor
bswap
and
fadd
icebp
push
push
aad
mov
nop
xor
std
int
lods
ss
and
fisubrs
pop
jno
dec
fidivs
sbb
mov
cs
or
and
mov
movsw
fistpll
mov
cmpsb
and
jl
call
ss
sub
push
je
in
pop
jl
dec
and
xchg
xor
sar
xchg
pop
inc
cli
mov
push
mov
popf
pop
pop
cmp
out
jle
push
imul
negl
dec
imul
and
jbe
aas
pop
add
popf
in
in
shl
icebp
lret
cli
std
lds
or
std
out
push
out
lds
mov
aaa
loopne
je
push
cmc
jecxz
leave
jbe
int3
and
js
mov
sti
mov
and
call
sub
out
popf
out
xor
les
in
cs
inc
stc
out
mov
fwait
cltd
and
test
jns
adc
jne
cmp
fcomp
add
lds
inc
inc
in
cmpb
outsb
mov
mov
cmp
xchg
adc
ret
mov
add
pop
sub
scas
mov
icebp
inc
clc
outsl
sbbb
das
aas
mov
jle
lret
mov
pusha
mov
scas
and
xor
pop
testl
sbb
ja
js
out
mov
sub
sub
adc
dec
test
xor
shlb
lods
push
shrl
shl
int
lret
mov
loop
sub
in
into
adc
movsb
sub
cwtl
int3
je
and
add
loope
call
ret
fldt
sbb
xchg
xchg
push
add
xor
cmp
add
lret
lret
jl
ds
mov
dec
movsb
and
mov
sub
add
xchg
cmc
inc
push
jb
mov
lods
and
aas
and
dec
pop
inc
dec
ja
repnz
adc
imul
mov
mov
adc
call
mov
jb
adc
xor
idivl
mov
leave
mov
cmp
icebp
repz
addr16
inc
push
imul
addr16
sbb
mov
test
sbb
inc
push
testb
cmp
popa
das
or
aas
mov
add
aas
jno
mov
ret
adc
test
cwtl
test
stos
xchg
dec
mov
mov
add
mov
clc
mov
sub
mov
and
shll
dec
cmp
pop
lret
jecxz
inc
push
xlat
movsl
movsb
movsb
inc
sub
enter
or
cmp
inc
xchg
push
scas
ret
xchg
cmp
je
inc
mov
or
xchg
enter
sarb
xchg
inc
shrl
lret
sbb
adc
lret
or
in
outsl
fs
testb
clc
pop
loope
test
pop
add
jp
test
fidivrl
daa
cmc
or
mov
testl
popf
mov
xor
adc
cmp
xorb
pushf
adc
lea
mov
xchg
xchg
jbe
mov
or
negb
je
inc
cmpsb
xchg
jo
adc
xchg
lret
jle
adc
sahf
in
faddl
xchg
cmpsb
ds
test
jae
lcall
out
das
add
xchg
dec
inc
loope
rolb
cltd
mov
cmp
jg
dec
daa
inc
dec
push
stos
mov
xchg
push
xlat
sbb
xchg
push
push
in
sbb
lods
and
jb
sbb
dec
dec
pop
cmp
push
pop
pop
sbb
or
loope
pop
jg
adc
dec
pop
fsub
jl
fbld
mov
jnp
add
scas
xchg
in
int
and
mov
lds
adc
pusha
filds
cmp
fcompl
mov
lods
aam
sub
xor
mov
js
adc
fwait
dec
pop
or
in
adc
addr16
call
pop
icebp
mov
mov
pop
lods
dec
push
loope
jae
cmpsl
scas
cmpsl
repnz
clc
dec
push
shrl
aaa
or
sub
fisttpl
cmpsl
xchg
pushf
xor
shr
pushf
xchg
int3
mov
bound
xor
mov
inc
adc
jp
shll
mov
mov
push
xchg
das
in
movsl
pusha
mov
mov
push
loop
sub
mov
jg
ljmp
xchg
adc
std
fadd
outsl
mov
mov
out
call
dec
sbb
add
divl
dec
jae
mov
mov
cs
lds
lret
sbb
fisubs
ds
lahf
inc
cmp
dec
ss
jg
daa
loop
inc
ja
fstl
pusha
call
lea
nop
lcall
push
jp
andb
add
push
cmp
out
andb
rorb
gs
hlt
aad
jne
pop
and
push
aas
aad
adc
xchg
jbe
movsb
cltd
mov
cli
xchg
push
out
xor
inc
cmp
add
test
cmp
mov
fistps
in
mov
stos
and
and
pop
stos
sub
rclb
mov
stc
mov
jmp
repz
mov
sti
or
int
push
and
mov
xchg
roll
mov
int
scas
add
leave
ret
cld
jae
lret
aas
jb
mov
outsb
cmp
mov
out
add
jecxz
dec
fnstenv
cwtl
stos
pop
outsl
nop
mov
or
mov
loope
aas
xor
inc
jg
frstor
xchg
test
mov
fimuls
or
sbb
xchg
cli
sahf
mov
sub
ret
rorl
loope
mov
fildl
mov
mov
pop
clc
mov
jecxz
fstps
mov
add
xor
pushf
cmpb
mov
push
or
pushf
push
loopne
pop
jge
outsl
repnz
dec
jmp
test
std
pop
inc
nop
ljmp
jecxz
jb
scas
addb
sub
sub
test
pushf
addr16
in
xchg
xor
pop
lret
xor
out
les
int3
mov
and
sub
mov
ret
lds
cmp
cli
scas
jae
movsb
jnp
jns
mov
xorl
sar
cld
stc
pop
in
fildl
jge
movsl
cmpsl
test
or
in
fcmove
mov
testl
or
aad
lock
jns
pop
in
ss
bound
enter
jle
inc
xor
pop
sbb
cmp
es
and
xchg
sub
and
mov
mov
shl
and
mov
gs
cs
mov
adc
sar
jnp
adc
pushf
dec
lods
and
inc
shl
mov
sbb
cmp
mov
pop
xor
sbb
fdivl
insl
loopne
inc
das
xlat
sbb
mov
insb
mov
ret
pop
mov
addr16
loopne
in
dec
cmpsl
xlat
mov
fisubl
stos
add
rcrb
jne
adc
lds
mov
mov
jecxz
and
fs
mov
aas
jae
push
les
loop
jecxz
mov
dec
xchg
or
pop
je
jp
scas
es
jecxz
xorb
adc
or
jmp
mov
sub
nop
add
leave
fcmovu
xor
insb
insw
insb
mov
cmp
mov
cld
add
jle
mov
mov
aas
cltd
mov
fdivrl
cmp
mov
push
xchg
in
inc
fldl
or
jl
rol
cmp
sub
add
inc
notb
inc
dec
sub
mov
sbb
imul
movsb
pushf
or
cld
dec
cwtl
imul
dec
adc
stos
loop
inc
add
or
cmp
pop
push
mov
cld
les
inc
push
mov
mov
xchg
fimull
push
cmp
aas
adc
sbb
and
call
popf
rorb
das
adc
mov
mov
mov
xlat
jl
decl
fisubl
xor
sub
inc
dec
repz
cmp
pop
jae
in
sbb
clc
xlat
sub
or
push
sahf
mov
fcomps
adc
test
dec
cmp
addr16
sbb
sahf
pop
addr16
in
xor
sub
mov
imul
or
xor
test
sub
jecxz
xchg
push
insl
imul
sbb
pusha
push
adcb
cwtl
or
jb
push
adc
stos
inc
cmp
pop
and
addr16
xlat
jne
call
insl
sahf
push
nop
add
jmp
jnp
popa
jnp
push
push
xchg
cmp
cwtl
or
cmp
pop
test
and
xor
jns
icebp
push
adc
xor
fimuls
mov
jle
arpl
pop
inc
push
adc
mov
stos
xlat
push
fcomip
jg
mov
push
inc
pop
test
cwtl
push
pop
dec
icebp
push
push
add
outsb
cld
cli
push
lods
inc
xchg
shlb
js
push
or
stos
idiv
stos
sti
xchg
jnp
xor
inc
sbb
jb
inc
cmp
dec
push
ficoml
mov
xchg
mov
cmpsb
sarl
insb
fisttpll
push
scas
push
dec
inc
xor
cmp
push
leave
jae
test
cmp
into
mov
and
sti
jmp
outsl
in
and
jecxz
cld
movsb
and
pop
arpl
jnp
xchg
shrb
leave
dec
sbb
pop
out
adc
icebp
out
sub
add
or
in
pushl
out
or
mov
sub
icebp
in
mov
call
jp
jl
ret
cmp
pop
pop
js
mov
sbbl
add
ror
outsb
fmuls
adc
repz
inc
leave
inc
cvtps2pd
imul
movsl
icebp
ljmp
jne
fbld
push
in
sub
mov
gs
aaa
push
mov
fisttpll
cmp
scas
shlb
outsb
xchg
movsl
pop
mov
int3
inc
or
sahf
out
mov
pop
mov
pop
iret
add
fstpl
or
jnp
sbb
add
mull
cs
jo
sbbl
into
movsb
fstpl
std
xchg
sbb
mov
lock
add
pop
xchg
call
out
or
gs
and
movsl
andl
clc
cmpsb
pop
rolb
int
inc
fcompl
loopne
test
mov
add
pop
rclb
into
cmc
imul
pop
add
dec
dec
jnp
xchg
push
orb
ret
cmp
lcall
lods
aad
pusha
sbb
scas
addb
mov
lea
sbb
xor
testl
pop
dec
es
movsb
jle
sub
pusha
out
and
dec
clc
or
jne
ljmp
jp
cmpsl
adc
sbb
xor
and
dec
out
jno
mov
jmp
or
iret
std
jbe
lock
jae
jecxz
fisttps
fmul
mov
dec
mov
stos
outsl
leave
out
push
or
push
fwait
jecxz
cwtl
or
push
sub
push
mov
cmpsb
fs
das
cs
aaa
mov
leave
push
out
mov
enter
adc
push
jmp
aam
mov
push
ret
dec
movsl
es
call
cs
ds
mov
repnz
cs
pop
push
outsl
fcompl
loopne
push
imul
and
jne
mov
and
mov
gs
addr16
push
roll
in
xor
pop
adc
jae
mov
jne
sbbl
pop
adc
cli
pushf
cmp
rorl
jne
or
dec
inc
ss
inc
out
mov
insb
pushf
xchg
lret
dec
out
cmpl
scas
movsb
inc
add
dec
repz
lahf
and
xchg
add
mov
and
jno
inc
mov
ret
or
es
add
push
mov
push
imul
add
imul
jle
jl
and
insl
jecxz
and
or
cmp
and
sbb
scas
sbb
adc
xchg
inc
lea
ljmp
cmp
push
stc
cmpsl
cmp
xchg
push
cmp
sub
mov
shlb
divl
aad
xchg
and
aas
jl
push
and
xchg
dec
jp
std
add
adc
mov
inc
pop
mov
xchg
mov
jle
push
inc
mov
mov
jnp
out
push
stos
or
lret
lods
jecxz
in
push
std
mov
jo
mov
aam
mov
fcmovb
jns
and
push
hlt
push
in
mov
sbb
cmp
xchg
in
jge
xor
adc
imul
push
pop
cmc
cmpl
sbb
adc
leave
or
xchg
mov
inc
push
pop
cmc
in
imul
xchg
add
add
lret
lahf
pusha
jnp
jle
mov
or
xorl
aas
movb
adcl
inc
sti
adc
add
jecxz
pop
inc
push
push
dec
mov
add
inc
test
push
aas
pop
frstor
mov
cld
aaa
movsl
jb
add
das
jne
or
repnz
ret
in
faddl
cmp
mov
andl
add
outsb
imul
add
in
cmp
enter
int
loop
sub
jge
adc
inc
inc
pop
mov
jb
sbb
add
sarb
test
test
test
scas
aad
mov
gs
mov
lea
cmp
sahf
loope
lea
or
mov
jp
cwtl
sahf
add
repz
sub
cmpl
jno
scas
mov
xchg
int
mov
mov
loop
out
cltd
xchg
icebp
xor
push
flds
adc
cli
mov
inc
fs
pop
xor
inc
add
inc
cmp
jecxz
out
std
xor
enter
dec
into
stos
and
shll
jb
xchg
add
inc
sti
mov
push
das
sti
fmuls
rolb
cld
mov
fimull
iret
fcoms
xchg
mov
fsubrp
pusha
in
sbb
daa
mov
dec
xor
sbb
xor
stc
push
rorl
mov
fstl
cmpsl
test
into
xchg
dec
iret
jmp
fistpll
add
pop
mov
add
mov
sti
push
ret
cld
addr16
ja
out
adc
xchg
mov
mov
or
push
aaa
rol
shrl
je
inc
push
mov
push
or
ficoml
cmp
xor
sti
xlat
pop
fcompl
mov
fwait
insb
and
jge
push
mov
shrl
mov
sub
xchg
mov
aad
aad
es
aaa
scas
outsb
jbe
jmp
fldcw
mov
inc
sbb
xlat
pusha
and
shrl
shrl
ds
jl
mov
js
pop
aas
addr16
pop
push
and
or
lcall
imul
loopne
jg
out
mov
pop
push
movsb
aaa
add
cmp
add
stc
add
cmove
xor
xchg
cmp
in
popa
mov
pop
or
push
push
fs
mov
pop
pop
loope
jo
fs
lds
xchg
and
mov
clc
and
hlt
mov
lock
popf
push
je
inc
xchg
xor
mov
int
pop
pusha
cmc
dec
hlt
pavgw
fadds
xlat
dec
cmp
cwtl
or
pop
stc
rcrb
pop
jp
pop
jmp
leave
loopne
loopne
call
in
sub
sbb
fadds
xor
call
xlat
nop
enter
sbb
mov
add
cli
imul
cmp
adc
ss
ljmp
pushf
xchg
push
loop
mov
enter
gs
cmp
push
popf
lret
mov
adc
cli
ja
inc
sbb
push
push
negl
inc
xchg
outsb
cltd
mov
xchg
sbb
mov
or
pop
push
push
negb
sbb
lods
push
repz
jge
xor
jp
sbb
fwait
jo
fcomps
je
dec
mov
pusha
push
enter
cmp
test
fdivs
cmc
jcxz
aaa
inc
fistpl
sbb
sbb
mov
lock
sbb
in
sub
pop
aaa
inc
lds
add
repnz
mov
jmp
les
dec
mov
xor
sub
insb
in
ss
inc
addr16
mov
fsts
ljmp
stos
shrb
mov
and
fisttpll
jecxz
cld
sub
cmc
mul
mov
shll
andb
mov
push
imul
inc
pushf
push
lahf
mov
jb
cmp
and
cs
mov
inc
std
mov
mov
mov
mov
insl
inc
jp
mov
daa
cltd
rorl
in
shll
pop
sbb
fs
cld
fs
je
push
mov
loope
in
js
stc
xor
inc
fs
repnz
pop
adc
mov
xor
gs
xchg
or
dec
sub
cmp
das
jecxz
jle
out
jns
orl
rorb
cmpl
shrl
iret
lods
jp
in
jbe
les
xchg
bound
ljmp
dec
mov
or
mov
inc
fimull
mov
loopne
mov
inc
pop
aam
out
in
lcall
pushf
aad
es
push
in
jnp
test
push
ret
dec
sarb
fidivrl
call
lret
stc
ja
cmp
add
jae
mov
cs
push
mov
ss
mov
adc
pop
repz
hlt
mov
cmp
sti
inc
ja
lcall
xor
xchg
rorb
mov
add
jg
imul
mov
xor
loope
test
out
push
repnz
mov
push
pop
mov
or
sub
adc
push
mov
test
int
lea
decb
out
movb
stos
fsubs
stos
sub
jl
mov
cmp
mov
jg
inc
mov
iret
sub
shlb
or
test
cmpsb
aas
mov
cmpsl
adc
pusha
push
pop
mov
or
outsb
adc
cltd
or
insb
loopne
xchg
aam
adc
scas
cwtl
sub
pushf
xlat
inc
mov
outsl
jecxz
fsubrs
adcb
inc
std
std
je
push
sbb
data16
in
push
outsb
push
cmp
lds
out
fsts
call
rolb
in
dec
fidivrl
mov
or
imul
sub
icebp
rorb
xchg
xchg
lret
xchg
das
mov
fstps
pop
adcb
push
out
sahf
push
repnz
test
enter
lods
les
push
add
xchg
dec
and
push
sub
cs
pop
mov
je
test
sub
imul
and
filds
cmp
adc
pop
int
rorb
es
push
xor
and
js
mov
add
push
push
or
test
cmp
pop
add
xor
insb
pusha
push
mov
fbstp
inc
rcrl
or
cmp
icebp
dec
sti
push
je
aam
enter
out
imul
jae
mov
pop
pop
cltd
ljmp
stos
jl
sarl
les
fs
cmpsl
mov
push
sbb
xor
es
inc
cwtl
or
scas
lret
or
ret
or
icebp
lods
bnd
pop
movl
jg
lea
pop
sbb
inc
mov
call
inc
ljmp
mov
mov
ret
lea
push
xlat
loop
stc
add
or
fisttpll
mov
mov
add
and
cwtl
call
xchg
std
xchg
sbb
adc
dec
sbb
and
xor
movsl
bsr
pop
lds
fwait
xchg
sbb
pop
push
inc
jg
mov
cld
mov
loopne
js
pop
aas
lods
sbb
xor
js
and
lods
push
test
xchg
jg
adc
pop
hlt
in
pop
and
inc
xlat
rorl
out
cmp
pop
dec
adc
iret
or
jnp
pop
sub
inc
push
out
test
push
push
addr16
lods
imul
inc
mov
inc
mov
shlb
and
shlb
outsb
pop
ds
push
dec
clc
xchg
xchg
popf
cmpsl
push
jb
pop
ljmp
cmp
sub
push
pop
sti
nop
lahf
imul
cmpsl
xchg
cmp
push
daa
cmc
imul
mov
and
pop
mov
rolb
lahf
dec
lcall
lock
jno
cmc
stc
scas
or
inc
xor
stc
jle
cld
xchg
je
add
int
xchg
pop
aaa
jg
lods
loope
es
gs
out
cltd
xor
dec
call
cmp
inc
push
adcb
xchg
fwait
in
nop
jns
or
mov
jbe
mov
repnz
loope
sbb
arpl
mov
dec
lcall
aam
adc
addl
mov
pop
mov
xor
arpl
test
push
cltd
out
fsubs
mov
movsl
dec
sub
jl
test
test
mov
push
incb
jmp
into
xchg
cmp
pop
repz
xor
fisubrl
iret
xchg
xchg
pop
scas
pop
adc
sbb
rorb
imul
daa
pushf
insb
jnp
dec
or
mov
jnp
ja
and
jnp
sahf
nop
dec
add
add
fstpt
push
push
mov
scas
scas
cmc
ret
dec
xor
sub
test
shrl
shrb
add
jg
cmp
adc
inc
lret
or
mov
movsl
gs
add
mov
call
push
scas
lret
pushf
adc
das
dec
xchg
rorl
call
or
leave
fs
inc
loope
ffreep
in
pop
or
fcompl
scas
aam
mov
sub
cmc
dec
jbe
cmp
mov
mov
jmp
add
and
loop
mov
jne
push
pop
jp
dec
push
dec
pop
addb
dec
aad
add
pop
ret
sbb
vmwrite
mov
fmulp
xlat
ret
pop
inc
pop
pop
inc
xchg
xor
and
into
sub
mov
jge
neg
stc
and
pop
mov
and
das
mov
dec
push
aad
lds
pusha
arpl
or
mov
cmp
aam
std
add
xor
cmp
cmp
xor
roll
test
sbb
add
cmp
push
mov
or
dec
xor
xchg
sbb
xchg
cld
jl
nop
sbb
sbb
loope
sahf
test
or
lahf
in
movsb
mov
pop
push
or
mov
in
int3
add
cmpl
xchg
shll
fisubrs
mov
and
pop
int3
and
scas
inc
mov
pop
fisubs
iret
xchg
mov
outsl
or
test
sar
pop
jo
sub
inc
adc
mov
xor
jp
movsl
pop
sbb
stc
jno
cmpsb
popa
add
ljmp
nop
inc
mov
mov
xor
sub
iret
and
jo
pop
gs
pop
adc
xchg
pop
out
xor
sbb
js
aam
mov
xchg
lret
xchg
jns
xchg
or
pop
pop
jecxz
sbb
mov
pop
jno
adc
ja
addb
cmp
out
fwait
stos
mov
daa
cmc
jecxz
cmp
cmp
xchg
loope
cmpsb
lea
je
out
sbb
movsb
fiadds
int
lret
cmp
call
or
lods
cmpb
pop
repz
dec
xor
dec
jns
loop
adc
shrl
mov
test
int3
ja
inc
adc
or
jmp
arpl
mov
sub
add
push
xor
sub
dec
push
dec
dec
xchg
cli
xor
push
and
dec
les
cmp
in
leave
ss
mov
cwtl
adc
nop
jnp
scas
xor
jge
imul
cli
arpl
add
fiaddl
imul
rcrl
scas
imul
out
sub
pusha
addr16
out
jmp
fstpt
pop
and
xor
in
mov
jns
jecxz
mov
das
ret
cmp
andb
mov
test
outsl
iret
push
cli
int3
mov
dec
das
sbb
mov
adcl
lods
inc
aam
xchg
and
out
or
sbb
in
in
je
not
mov
cmp
cmp
out
out
test
es
xor
or
xchg
leave
pop
mov
stos
dec
movsl
mov
inc
inc
dec
cmp
push
mov
arpl
mov
aam
andb
inc
dec
mov
out
test
jo
jg
inc
mov
mov
pop
ret
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
xor
add
ret
push
pop
in
aas
popa
sbb
jmp
jle
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
mov
ss
test
dec
inc
imul
adc
insl
fisttpl
out
pushf
insb
adc
es
test
xchg
in
add
bound
sti
jmp
sbb
aas
lock
pushf
adc
inc
add
shll
out
xor
xchg
jae
outsb
lods
xor
jns
mov
mov
jns
mov
insb
adcl
and
sub
mov
pusha
inc
xor
cmpsb
out
fsubrs
inc
xchg
jbe
pop
push
icebp
stos
push
sbb
ss
lock
jmp
cmpl
xor
into
mov
sbb
jmp
mov
sbb
shlb
add
sti
stc
decb
add
jmp
decb
add
sti
jmp
cmpl
rcr
mov
add
sti
jmp
cmpl
shlb
add
sti
jmp
add
popa
sbb
jmp
mov
bound
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
rolb
add
shr
mov
fs
push
sti
jmp
mov
adc
mov
mov
sarl
sti
mov
test
sti
jmp
sbbl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
shlb
add
sti
jmp
cmpl
xchg
mov
jb
sti
ret
pop
push
mov
sti
outsl
das
adc
dec
push
mov
add
je
pop
arpl
incb
adc
push
fldl2t
fldcw
xor
shrl
mov
shl
jne
aad
adc
fdivs
out
dec
and
mov
aad
imul
in
xor
leave
inc
jecxz
add
lods
pop
cmp
testl
push
mov
fwait
cmp
mov
fsubr
rcrl
inc
in
dec
inc
outsb
loope
mov
mov
sbb
rclb
dec
adc
out
adc
pop
insb
and
dec
out
push
push
data16
scas
js
ljmp
mov
pop
dec
cs
into
shll
sub
mov
roll
repz
shrb
fidivrs
adc
mov
pop
or
bound
insb
fstps
jp
popa
adc
push
xchg
lods
pop
and
cwtl
int
ret
stos
sub
mov
outsl
cmpsl
cli
xor
xchg
call
xchg
sbb
sahf
into
push
add
pop
into
sbbb
sub
xchg
inc
push
cmp
lret
jno
out
mov
and
shr
sub
push
xchg
pop
jp
xchg
test
les
test
sbb
ss
mov
shrl
movsb
in
cwtl
and
push
pop
jecxz
incb
iret
mulb
nop
in
jne
and
testb
or
pop
ret
insl
mulb
and
ss
sbb
xchg
push
mov
mov
push
mov
lock
orl
or
sbb
iret
cwtl
lods
mov
and
fwait
xor
incb
push
out
mov
notl
and
ljmp
popa
xor
mov
in
xor
pop
aaa
mov
out
js
stos
ds
bnd
mov
and
push
shrb
mov
push
xchg
or
lahf
mov
jns
fdivs
mov
mov
jne
imul
push
int
mov
pushf
and
xchg
adc
ficoml
inc
fcmovnb
scas
decb
in
cmpsb
sub
adcb
call
out
pop
jne
aam
or
sub
popa
stos
mov
adc
stc
sahf
jp
xor
loop
push
push
mov
in
std
add
nop
in
loop
inc
xchg
jb
inc
cmp
std
leave
xchg
push
push
push
mov
in
or
push
daa
mov
push
adc
jns
or
jno
int3
popf
and
lret
sub
pop
add
and
shlb
adc
dec
mov
les
mov
inc
int3
mov
outsl
jno
pop
push
mov
jb
aaa
imul
jle,pt
push
imul
adc
adc
incb
and
in
jnp
sbb
fisubrs
dec
xchg
cmp
aas
sbb
iret
movsl
pop
xchg
pushf
mov
icebp
and
ja
xor
cmc
add
outsb
mov
ds
pop
cs
sub
xor
aaa
inc
xor
dec
cmp
pop
subb
jns
test
cmpsb
fisubl
scas
nop
adc
mov
std
mov
add
dec
lock
outsb
jne
jnp
add
jae
and
out
dec
push
pusha
xchg
adc
je
jno
mov
insl
dec
arpl
sub
sub
out
pop
aaa
and
xor
into
leave
mov
pop
dec
aaa
push
and
adc
adc
pop
cli
pop
shrl
lods
mov
les
fwait
std
mov
in
pop
dec
scas
jae
cwtl
mov
cmp
fcomi
nop
in
push
dec
push
es
ds
je
or
inc
pop
fs
inc
and
mov
push
js
jge
jbe
xor
dec
xchg
add
jp
test
and
sti
cwtl
shlb
push
sahf
cmp
cld
mov
aad
dec
pusha
mov
or
push
sbbb
push
fistl
xor
mov
fisttpll
enter
mov
push
xchg
mov
testl
and
add
popa
scas
mov
mov
and
mov
js
aad
or
incl
pop
sbb
pop
insl
orl
push
aaa
cli
sub
dec
xor
inc
xchg
cmc
cli
lcall
popf
xchg
mov
insl
mov
inc
mov
jle
iret
add
jl
or
inc
sarb
and
fwait
mov
rcrl
jo
cli
push
rorl
mov
insb
sbb
into
repz
int3
lcall
lods
int
daa
xor
jmp
or
imul
jnp
arpl
and
fmull
xchg
jbe
jmp
mov
jb
add
pop
fcomp
xchg
jp
cld
cwtl
mov
out
dec
popa
roll
jae
add
adc
inc
cmp
ja
call
scas
cmp
xchg
push
jp
sbb
sbb
repnz
xchg
mov
mov
push
cmp
mov
insb
push
lret
insb
push
mov
mov
mov
mov
out
jnp
clc
inc
movl
cmp
aad
dec
dec
mov
fnstcw
cmpsl
inc
std
or
lods
dec
mov
lea
mov
fistps
push
dec
mov
mov
push
sahf
xor
into
jge
in
fwait
jl
xchg
dec
jns
cmpsb
in
push
mov
imul
sbb
fwait
je
lock
or
loope
inc
fadds
mov
das
leave
hlt
les
loopne
arpl
sbb
lods
fbld
lock
scas
cltd
dec
dec
pusha
xchg
and
lret
arpl
cmp
and
xchg
pop
movsl
mov
adc
dec
loop
lock
out
mov
popf
adc
and
cwtl
in
mov
cld
inc
in
cmp
xchg
pop
fimull
std
nop
into
xor
int
pop
xchg
mov
ja
sbb
lods
sbb
mov
inc
gs
lods
jp
jmp
call
arpl
xchg
cpuid
dec
aaa
lds
add
sub
repz
fwait
sub
jmp
fadds
mov
xor
or
pop
xchg
popa
push
movsb
gs
cmpsl
adc
loope
fstps
push
jl
and
loope
addr16
push
cwtl
adc
cmp
push
cmp
add
enter
push
sbb
loopne
call
xor
pop
test
movsb
aas
or
xor
in
mov
jmp
aaa
add
xor
cld
jle
mov
xchg
sahf
aam
add
pop
mov
lods
sub
fmull
popa
inc
xchg
mull
jns
in
dec
mov
mov
sbb
mov
xlat
cmp
int3
out
cli
mov
cmp
add
pop
add
dec
sbb
aas
adc
aaa
les
adc
fiadds
xchg
jmp
mov
lock
sub
mov
leave
mov
push
inc
cmp
cmp
jb
in
cmp
or
aad
arpl
lods
push
xchg
fdivl
jmp
mov
in
enter
cld
js
inc
mov
insb
xchg
jbe
push
aaa
or
pop
and
jge
add
xor
adc
in
xchg
sub
jne
orb
inc
inc
cmp
xchg
inc
mov
out
push
mull
scas
cltd
int3
lods
testb
pop
movsl
stos
cli
ljmp
xchg
shl
add
inc
pushf
or
push
add
addr16
scas
push
jp
and
cli
clc
xchg
movsl
mov
fbstp
jnp
test
enter
and
fsubrs
daa
mov
call
pop
scas
dec
adc
dec
jb
loope
add
enter
push
lret
push
push
and
cmp
jnp
gs
shl
repz
out
dec
and
jl
stos
xchg
sub
or
lds
ret
xchg
and
or
add
mov
jbe
adc
shrb
clc
inc
jbe
ja
outsl
js
ret
pop
xchg
xchg
add
call
lret
mov
or
cld
int3
inc
dec
mov
mov
icebp
inc
enter
jne
pop
ss
inc
mov
add
incl
cmpl
mov
test
test
rcrb
cli
pop
lock
push
cmp
shl
sbbb
and
xchg
lret
sbb
sti
shrb
xlat
fisttpl
lods
pop
das
leavew
lret
jne
popf
scas
push
shl
xchg
andl
xchg
push
cmp
lea
mov
aaa
cmp
inc
insl
ror
and
pop
icebp
xchg
sbb
mov
jb
push
rorl
es
aad
xchg
jle
les
jecxz
pop
jae
push
jecxz
std
gs
xchg
xchg
sbb
shlb
leave
out
mov
les
xor
clc
lods
andl
fisttpl
xchg
adc
pop
fidivrs
push
xchg
out
pushf
lea
icebp
ret
mov
insl
iret
rcrl
and
data16
xor
enter
and
lahf
aad
or
sbb
pop
into
mov
idivb
inc
and
sahf
fisubrs
lods
mov
enter
outsl
xor
inc
cmp
movsl
push
pop
rclb
fdiv
lds
cmp
dec
mov
jle
sbb
es
add
jge
pop
leave
dec
ljmp
dec
xchg
outsl
mov
imul
mov
test
mov
and
mov
int3
mov
movsl
mov
mov
jge
lret
add
in
test
pop
add
cmp
mov
shll
pop
in
inc
cmpsb
outsb
and
and
int3
pop
sub
clc
addr16
cmp
jg
hlt
sbb
adc
sbb
dec
fdivl
lods
xlat
aam
cmp
cmp
cli
or
js
clc
ss
insb
movsb
icebp
add
xchg
push
ret
and
sbb
push
cmc
imul
xor
fistl
data16
xor
xor
dec
cmp
inc
and
pop
pop
insb
push
js
or
imul
adc
test
js
pushf
sbb
stc
sbb
fstps
popf
lods
das
push
pop
rorl
xchg
std
bound
mov
test
clc
xor
inc
or
rclb
pop
pop
ror
xchg
push
xor
insl
adc
pop
adc
or
jnp
ret
mov
int
cmp
push
add
xchg
cltd
and
enter
jle
xchg
push
sub
mov
sub
cmc
gs
add
cmp
add
mov
bound
popf
xor
mov
movsl
jle
pop
inc
cmp
movsb
aas
mov
in
cli
pop
mov
or
pop
test
cld
sub
loop
jne
jle
xchg
lods
pop
cmp
lcall
loope
or
mov
lret
pop
xor
cltd
mov
arpl
shrb
inc
ret
xor
clc
dec
pop
cwtl
jmp
adc
ds
inc
lds
push
data16
xor
outsl
rcrb
xor
push
mov
cld
add
outsb
std
and
int3
mov
inc
addl
sbb
sub
or
loope
movsl
aas
xchg
push
push
sbb
sub
pop
inc
repz
push
iret
outsl
push
mov
mov
pusha
adc
rorb
jae
add
js
icebp
outsb
xchg
and
aaa
rorl
cli
test
fsubr
xchg
arpl
faddl
xor
gs
pop
lea
mov
jle
xor
and
std
loopne
jae
sbb
jno
xlat
fsubp
out
adc
adc
jecxz
fidivrs
addr16
dec
scas
inc
pop
popf
movsb
jae
dec
outsl
cmp
gs
mov
test
xchg
sbb
int3
and
or
sbb
int
xlat
orb
mov
inc
aad
xchg
and
dec
xchg
in
jae
mov
adc
push
jnp
xlat
sbbb
mov
shlb
jl
into
lahf
push
push
call
out
add
dec
cmpb
in
cmp
in
inc
lds
add
lret
cld
mov
push
jge
mov
dec
xor
es
inc
sub
std
es
mov
out
pcmpeqb
mov
xchg
mov
adc
loopne
push
pop
aaa
dec
mov
and
jmp
push
sarb
into
mov
nop
aas
fisubrs
jp
movsl
adc
or
mov
lahf
fidivs
popf
test
cmp
sbb
cmp
out
pusha
jp
cmp
lret
dec
cmp
jmp
clc
xchg
adc
repnz
add
out
pop
push
les
cmp
mov
xchg
xor
std
mov
fnstcw
lret
sbb
mov
xor
lahf
xchg
jecxz
sahf
mov
mov
dec
lock
and
out
sub
and
xchg
sbb
fsubs
ja
or
or
test
or
arpl
je
push
ja
iret
jo
mov
hlt
or
or
sbb
mov
dec
insl
xchg
mov
dec
inc
mov
xor
inc
repnz
popa
adc
rorb
and
sbb
stos
or
xchg
push
popf
mov
bound
rcll
pop
ficompl
dec
hlt
outsb
push
shll
insb
int3
mov
dec
push
scas
mov
cld
and
mov
fwait
or
lret
dec
dec
sbb
shl
je
frstor
sbb
mov
adc
sub
jmp
xor
jne
rcll
dec
aad
cli
cwtl
and
es
mov
jle
imul
int
push
jp
shlb
in
inc
outsb
jecxz
inc
jo
aas
adc
outsb
mov
adc
dec
pop
fcomip
xchg
sbb
loopne
insb
test
lcall
or
faddl
cmc
cmp
mov
inc
or
sbb
insl
int
movsb
inc
jmp
movsl
ret
loopne
iret
loope
adc
dec
sti
outsl
test
mov
out
insl
shll
push
add
idivb
mov
pop
xchg
mov
push
aad
xchg
rolb
nop
nop
nop
nop
jmp
