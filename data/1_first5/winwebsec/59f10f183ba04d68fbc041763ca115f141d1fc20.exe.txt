repnz
dec
icebp
shl
mov
jb
pushf
pop
bound
stos
repz
xor
add
fadds
out
sbb
xchg
dec
pop
sbbb
popa
in
pusha
je
jmp
rcrb
mov
pop
out
iret
testb
clc
or
cmp
pop
mov
mov
adc
add
bnd
xlat
lret
mov
or
xor
adc
dec
pop
lods
cmc
popf
mov
das
fimuls
mov
jns
aam
inc
jo
pop
mov
test
push
push
jns
push
push
push
outsb
cmp
insl
and
pop
add
test
sub
pop
inc
pop
add
inc
mov
mov
cwtl
out
and
mov
push
sub
aam
es
daa
add
and
aam
cli
cmp
clc
int
xor
add
cmp
aam
je
mov
dec
aas
sbb
idivb
movsb
push
pop
sbb
lock
mov
int3
es
cmpsl
scas
jp
ret
xchg
and
test
push
adc
push
adc
sbb
loop
leave
mov
add
fldcw
insl
mov
or
imul
xchg
aad
clc
sbbb
and
fcoml
inc
lret
mov
scas
jne
or
add
arpl
lock
inc
jle
arpl
stos
rol
push
mov
adcb
ficompl
inc
adc
daa
inc
test
aad
call
pop
fisttps
dec
ror
repz
cmp
sbb
sub
pop
stos
lcall
mov
mov
movsb
or
jne
xchg
in
add
inc
imul
xchg
cmp
push
inc
scas
sbb
ss
ret
sub
enter
jne
insl
push
test
outsl
fsts
gs
add
loope
aaa
and
jnp
push
xor
stos
inc
les
adc
out
cltd
pop
scas
pop
mov
cmp
int3
in
pop
mov
mov
and
push
sub
test
adc
mov
mov
cmc
pop
imul
loop
movsl
cwtl
push
mov
dec
scas
stc
cli
add
outsb
mov
sub
cltd
addb
mov
and
sub
mov
xor
jl
cmp
loopne
pop
das
les
enter
add
jge
repz
arpl
lahf
rcr
pop
jecxz
rcrb
lods
push
bound
cmp
and
repz
push
outsb
inc
cmc
inc
ficoms
divb
xchg
mov
mov
mov
cmp
mov
imul
and
dec
push
sub
mov
mov
mov
shll
lret
nop
push
lret
mov
scas
cmc
mov
fidivl
lcall
pusha
pop
shrb
push
push
pop
in
pop
fdivrl
pop
addb
fs
push
push
cmp
inc
loope
lret
cmp
lods
jl
call
sbbl
movsb
movb
mov
add
push
push
or
push
inc
daa
mov
or
cmp
loope
and
pop
push
ds
jae
jge
mov
test
push
adc
imul
pushf
mull
cmpsb
push
loopne
push
mov
es
or
pop
je
insl
and
or
dec
pop
ret
add
xor
fwait
in
hlt
xchg
jae
imul
jg
jbe
xlat
fisttpll
xor
and
or
fbld
and
std
push
mov
stos
inc
test
loopne
loop
jge
imul
add
movsb
js
rcr
jae
and
dec
mov
daa
nop
shl
mov
push
shll
cs
lock
jg
push
cmp
repnz
cmp
scas
adc
push
mov
xchg
outsb
inc
mov
out
out
mov
fcmove
jbe
movsb
pop
popa
xchg
out
aaa
ficompl
mov
sbb
adc
js
in
imul
cld
in
adc
mov
dec
lock
mov
cltd
xor
sarl
and
cmp
popa
push
lock
jns
enter
sti
test
xchg
pop
mov
pop
jmp
jno
and
lahf
jmp
dec
cwtl
data16
cmp
lcall
lahf
mov
rorb
popf
movsb
add
fbld
dec
aaa
js
and
lcall
adc
imul
shll
push
test
inc
push
jb
adc
xchg
ds
call
mov
push
lods
shll
test
pop
pop
mov
mov
adc
jns
or
sti
xchg
dec
add
test
loopne
dec
pop
std
jns
das
jp
pushf
mov
insl
mov
pop
aam
test
popf
pushf
int
std
inc
push
into
mov
mov
shr
add
mov
loope
mov
inc
mov
imulb
xchg
mov
mov
ljmp
adc
adc
stc
mov
mov
inc
aad
jp
pmaxub
xchg
push
inc
and
test
scas
lcall
scas
adc
lea
cmp
mov
dec
mov
scas
mov
jmp
sbb
popa
out
js
loop
cs
mov
out
xchg
shll
sti
fwait
rcl
sti
mov
mov
data16
sub
mov
jg
nop
dec
jne
mov
stos
xor
jno
icebp
mov
ret
dec
mov
movsl
fdivs
jnp
out
sti
je
out
sbb
cmc
and
dec
adc
sub
daa
mov
or
dec
out
cmpsb
ss
testb
mov
sti
stc
in
jge
mov
adc
lret
push
aas
fstpt
sub
cs
cmc
or
mov
add
xor
dec
pop
repnz
iret
stos
addr16
adc
push
and
fwait
inc
orb
hlt
inc
adc
pop
fwait
cltd
mov
cli
mov
xchg
pop
dec
jns
je
ss
inc
scas
lods
push
subl
adc
jnp
fisttpl
xchg
in
outsb
outsb
or
dec
xchg
test
stos
jg
adc
push
fcomps
loopne
cmp
pop
ss
and
jmp
fcomps
js
push
fsubrl
jns
mov
mov
xor
sub
scas
mov
fadd
loope
lcall
cmpb
inc
test
pusha
les
mov
leave
dec
out
adc
rorl
jmp
add
icebp
int
rclb
sub
xor
divb
frstor
test
movsb
in
jb
mov
pop
adc
adc
pop
cmpsb
dec
add
jl
mov
and
sub
mov
rcrl
or
jb
mov
mov
test
mov
sub
loopne
std
jecxz
mov
xor
sbb
shlb
pop
jg
fsubp
and
jge
out
inc
pop
dec
mov
sbb
inc
inc
or
or
inc
mov
xor
vcvtps2dq
ljmp
mov
adc
pop
xchg
lock
xor
sbb
mov
es
pop
xor
ret
sbb
nop
add
cmp
mov
sbbb
arpl
jo
or
dec
std
test
sbb
jmp
imul
xchg
xchg
pop
decl
and
divb
rclb
xor
add
stos
sti
insb
xchg
sub
repz
fbstp
sub
shl
aam
mov
leave
add
outsb
jb
dec
icebp
or
fmul
ret
add
mov
add
sub
mov
inc
fdivr
mov
imul
push
fs
loopne
aas
mull
mov
cli
icebp
ss
repz
xchg
fwait
inc
or
dec
pop
addr16
push
fadds
dec
ret
pop
push
mulb
imul
leave
fmul
lds
lods
or
xchg
mov
movsl
inc
out
fisttps
jecxz
or
inc
fildll
cmp
jmp
sub
stos
pushf
ja
mov
sbb
aad
xor
mov
pushf
dec
push
jno
lods
in
andb
cltd
outsb
sbb
dec
inc
inc
adc
push
xchg
incl
dec
adc
and
xchg
or
xchg
aam
jle
int3
jnp
clc
cmp
or
lahf
and
mov
das
xchg
ljmp
sbbl
inc
jns
int3
and
dec
mov
xchg
sbb
mov
xor
outsl
sahf
pop
icebp
jmp
in
jg
fstp
cmp
in
xor
lcall
pop
pop
adc
fimull
push
dec
pop
call
int3
sbb
in
into
fbstp
idiv
mov
mov
and
cmp
xchg
sbb
repz
mov
xchg
ret
in
pop
mov
data16
jle
stos
fwait
xor
and
inc
mov
bound
mov
lds
out
stc
cmpsl
pop
ljmp
pmaxub
fs
cli
pushf
push
sub
sub
pop
fs
cli
jl
std
aaa
fld1
lock
mov
jl
es
jne
rcr
adc
inc
fildl
mov
es
int3
loop
arpl
das
rol
mov
scas
sarl
cmpsb
test
or
push
inc
jg
and
or
sub
ficompl
mov
push
and
xor
pop
lock
arpl
sbb
jmp
test
sbb
hlt
mov
xchg
mov
mov
test
inc
mov
dec
cwtl
fstl
dec
cltd
pop
cltd
faddl
sub
sbb
pop
or
icebp
outsl
test
mov
popf
inc
xchg
xor
sub
mov
dec
dec
aam
mov
clc
mov
and
test
push
jbe
xchg
or
xor
cmpsb
fistpl
sbb
push
repnz
loopne
mov
jne
aas
push
pusha
xchg
loope
lret
jnp
std
inc
dec
cmc
mov
jne
lods
xchg
enter
or
test
cmp
data16
push
mov
out
cld
mov
sbb
repz
loopne
gs
jnp
jg
sub
lea
sbb
stos
pop
xchg
add
fs
in
sub
dec
mov
popa
jecxz
rcll
sbbb
sub
sub
or
push
ds
pop
pop
idivb
std
lret
rol
jmp
cmc
xchg
aaa
or
dec
pop
ds
jae
rclb
test
or
cltd
inc
sub
leave
scas
jge
sub
xchg
dec
in
sub
inc
in
sub
sub
fcmovne
cld
stc
ror
fisubrs
mov
dec
into
and
push
idiv
jp
add
scas
incb
adc
xor
ret
or
gs
aaa
push
mov
adc
mov
mov
jmp
inc
jno
pop
das
aas
leave
out
mov
and
inc
cs
jecxz
cwtl
pop
adcb
into
icebp
add
sub
rcr
and
sbb
insb
movb
adc
fsub
xchg
lcall
or
test
push
insl
ja
mov
sahf
int
mov
or
jmp
mov
lea
sub
lcall
cmp
test
inc
xorl
addr16
lock
clc
sub
sbb
mov
aas
sub
sub
sub
fildl
es
lahf
int3
lcall
popf
jns
jg
or
mov
cld
imul
cltd
jmp
lea
mov
pop
adc
in
stos
stos
jns
dec
push
flds
loopne
addr16
xor
call
stos
push
out
add
pop
pop
lret
aas
mov
sub
movsb
pop
cmpsl
and
in
jb
mov
mov
sub
pop
push
imul
aad
adc
pop
imul
cltd
pusha
lcall
mov
scas
ljmp
bound
and
fstps
and
into
cmp
mov
xchg
out
ss
sbb
push
mov
sub
and
scas
ss
imul
pop
outsl
xchg
lret
mov
push
lahf
shlb
xchg
cmp
in
mov
fcomps
inc
cmpsb
test
sub
push
hlt
nop
adc
shlb
rol
mov
sahf
xchg
orl
imul
lcall
dec
xchg
shlb
xchg
loop
lahf
loop
outsb
icebp
sti
adc
sub
mov
sub
pop
ret
xchg
fmul
outsl
xchg
jmp
and
dec
lret
mov
mov
jae
mov
and
clc
xchg
xor
jg
cmp
inc
fdivl
pop
mov
les
fnsave
mov
arpl
idivl
sub
imul
mov
test
dec
ret
jecxz
ljmp
cmpsl
mov
jle
mov
shll
sarb
xchg
test
cmp
insb
xchg
xor
stos
xchg
mov
in
shlb
inc
into
leave
and
and
jb
dec
dec
xchg
aas
ja
dec
fdivrl
aas
add
loop
sbb
repnz
icebp
pop
xor
ret
out
sub
pushf
fcmovne
sbb
mov
stos
imul
adc
outsl
mov
sahf
inc
xlat
insb
aad
movsb
stos
seto
mov
repz
imul
cmpsb
sbb
ss
inc
add
xchg
mov
sub
stos
cmp
jb
fwait
jns
xchg
jg
dec
call
popa
adc
sub
mov
ret
cmp
jl
sbb
stos
jecxz
lds
aam
jbe
nop
xorb
jge
daa
pop
push
mov
test
test
push
add
add
outsb
lods
das
movsb
dec
decl
sbb
hlt
or
rorb
imul
adc
test
jge
jno
mov
lahf
xchg
jno
cmp
push
or
or
ret
push
push
mov
dec
inc
pop
rcrb
and
addr16
in
xor
std
pop
sbb
pop
sbb
pop
jge
add
aad
mov
push
xor
xchg
cmpsb
stc
jae
sub
xor
sbb
jnp
lods
jle
stc
inc
pop
dec
stos
xor
repz
clc
lcall
and
ret
icebp
xchg
mov
add
xor
and
jnp
outsl
shrb
sbb
shlb
test
jl
out
roll
jns
cmpsb
popl
insb
in
add
push
lds
fistpl
ljmp
iret
ficompl
push
nop
test
in
mov
in
out
mov
adc
xor
add
divb
mov
adc
lret
mov
sbb
out
jbe
inc
adc
les
inc
jbe
daa
js
dec
iret
out
aaa
cs
js
adc
xor
ss
mov
sub
sbb
sbb
adcb
fcoml
stc
aad
cmp
outsb
mov
dec
xchg
sub
stc
aas
shrl
shlb
mov
popa
push
rcrl
add
bound
movsl
cld
addb
cwtl
mov
push
idiv
jmp
pushf
dec
or
xor
mov
add
dec
into
fdivl
xlat
ljmp
cmc
stos
xchg
and
inc
popf
pop
cld
push
inc
ss
insb
insb
nop
in
imul
loop
cmpsb
scas
bound
sahf
cmp
cmp
pshufw
inc
add
rol
mov
aad
add
fwait
test
dec
aad
je
add
or
cmc
mov
inc
mov
push
push
xchg
iret
data16
pushf
daa
jnp
xchg
insb
aaa
inc
nop
sub
test
pop
mov
xor
xchg
addb
stc
shl
xchg
subb
sahf
sub
dec
dec
adc
adc
out
push
cmp
pop
outsl
cmp
xor
repz
nop
call
repnz
push
dec
psubsw
xor
cmp
jg
or
mov
pop
jmp
incb
hlt
cmp
cs
sub
mov
xor
rol
cmp
adc
xor
fnstsw
lcall
int
arpl
sbb
xor
out
xor
dec
jno
fisubrs
ret
xlat
outsb
rolb
mov
loopne
or
xchg
test
push
mov
popf
xchg
nop
insl
adc
sbb
aas
add
and
pop
lds
mov
and
inc
fsts
in
xchg
faddp
cmp
pop
jg
add
fmul
pop
mov
or
pushf
and
cmpsb
bound
out
xor
fisubs
in
push
daa
outsb
dec
xor
sub
inc
xor
adc
mov
and
fidivl
xchg
sbb
cmp
testb
push
movsb
pop
inc
fs
pusha
pop
call
sarb
cmp
adc
mov
jl
lea
cli
in
dec
jecxz
sub
fisttpll
pop
repz
gs
rcrb
push
xor
xchg
jbe
ret
or
xchg
jns
xor
inc
addl
repnz
loope
movsb
mov
xor
and
dec
xchg
inc
xchg
dec
inc
pop
inc
sbb
fs
cmpsb
pop
mov
jmp
add
mov
lds
mov
add
push
and
fisubl
js
xlat
sbb
sbb
sbb
scas
sbb
ret
mov
and
fcmovu
xchg
das
aas
pusha
or
jmp
test
mov
movsb
push
mov
push
mov
cmp
mov
in
mov
pop
andb
call
dec
jno
scas
xor
xchg
je
shl
iret
cmpb
push
inc
or
xor
xchg
mov
repz
sbb
out
mov
mov
xlat
push
sbb
sbb
jp
in
jl
mov
pop
in
mov
movsb
mov
push
aad
insb
sub
ja
inc
jae
sub
fwait
mov
lock
xchg
rorb
and
inc
aad
es
xor
cmp
xchg
adc
and
jmp
cmpsl
adc
adc
shll
mov
mov
stos
xchg
pop
leave
push
pop
xor
fsubrl
push
pushf
and
fcomip
iret
jecxz
mov
dec
popf
mov
jl
arpl
push
fldenv
push
mov
dec
jmp
inc
jmp
jle
pop
mov
push
mull
adc
xlat
mov
lret
push
and
mov
xchg
xor
adcl
cmp
int
mov
test
mov
mov
xlat
mov
imul
adc
in
dec
mov
and
xor
dec
data16
add
es
sub
enter
lret
mov
popa
in
cmp
xor
divps
int3
jae
cmp
xchg
dec
ret
nop
pop
imul
mov
int3
mov
adc
int
push
mov
mov
mov
cmp
adc
xorb
sahf
js
test
lret
xlat
inc
aas
enter
loopne
sub
daa
repz
jle
cld
test
push
orl
inc
leave
cmp
jmp
faddl
xor
mov
pop
jg
flds
sbb
and
les
dec
repz
mov
sbb
push
xor
cmp
jne
push
fdivrs
aaa
and
stos
int3
popa
daa
cltd
inc
int
xor
scas
stos
ds
xchg
dec
xchg
pop
scas
add
jae
or
andl
movsb
dec
push
jb
cmp
mov
lretw
mov
out
test
cmpsl
outsl
push
addr16
and
xchg
insl
cmpsl
inc
cmp
pop
sub
in
je
sbb
jl
imul
int3
in
lock
imul
xchg
push
pop
stc
xchg
push
pop
mov
cmp
repz
xchg
insb
inc
fsub
mov
sarb
in
scas
rcrb
ret
dec
loopne
bound
jp
rol
imul
leave
enter
fidivrl
dec
dec
mov
pop
jae
sahf
xchg
stos
fbld
dec
mov
or
daa
loop
in
jae
and
mov
lods
or
pop
pop
mov
bound
aad
jmp
movsb
int3
and
sarl
in
jno
pop
push
jge
push
arpl
add
test
mov
sub
push
sahf
or
xor
outsl
pop
mov
inc
xor
ret
push
cld
pop
add
mov
and
mov
inc
adc
repnz
jecxz
scas
xlat
xchg
sti
and
repz
jp
pop
lea
push
mov
ja
mov
divl
xor
test
addl
mov
push
ret
cld
out
adc
xchg
dec
mov
pushf
repnz
stos
hlt
mov
sbb
dec
addb
in
jae
faddp
iret
pop
jno
es
jbe
ss
shll
jmp
aad
ss
or
shlb
mov
mov
or
in
pop
stos
xchg
add
iret
cltd
sahf
repnz
loopne
fbstp
repnz
stc
dec
enter
leave
push
test
dec
push
mov
sbb
aaa
jmp
addr16
jae
adc
fbld
mov
stc
fcmovb
push
std
xchg
in
mov
clc
jb
adc
and
jg
jne
mov
pop
mov
sub
in
and
mov
push
dec
or
bound
inc
add
dec
jl
insl
pop
xorb
fwait
sub
jg
or
lcall
add
push
daa
sbb
cmp
fcomps
sahf
rclb
icebp
jp
icebp
lods
xlat
add
inc
jns
das
loope
loope
mov
and
sbb
fstpl
jl
jp
mov
pop
adc
push
sbb
mov
inc
dec
or
xlat
pop
jo
lret
pop
gs
imul
outsl
scas
push
xor
int
pop
int
lret
sbb
cmpsl
out
aad
addr16
xor
addr16
mov
call
jbe
iret
jmp
sub
lret
or
push
js
jmp
xchg
cltd
repnz
adc
data16
dec
in
and
pusha
and
incb
int
xchg
mov
popa
shl
popf
lcall
xchg
sub
pop
je
push
pop
lods
sahf
or
repz
lret
pop
les
xchg
xchg
scas
mov
xchg
popa
ret
or
sbb
mov
fdivrl
mov
lret
xor
push
fisttpll
dec
aas
adc
sbb
ljmp
fstpt
cmp
scas
ret
push
ljmp
dec
orb
adc
int
leave
scas
insb
xor
jb
sbb
loop
or
pushf
add
jns
cmpsb
les
mov
test
and
mov
dec
lds
add
leave
sbbl
or
cwtl
mov
mov
jecxz
movsl
sbb
inc
mov
add
or
pop
lds
push
sbb
push
lods
jno
inc
inc
adc
mov
dec
and
sbb
aaa
mov
call
dec
outsl
jl
sbb
test
xchg
cs
fiadds
aad
fildl
xchg
ljmp
dec
dec
pop
mov
xchg
loopne
idivl
sbb
dec
test
cmpsb
cld
xor
negl
xlat
das
mov
gs
sahf
adc
pop
lahf
jno
mov
movsb
xlat
adc
out
lret
decl
xchg
mov
pop
sbb
jbe
out
in
pop
fldenv
push
cmp
aas
rclb
fstpt
pop
xor
rcll
ret
or
cmp
dec
cmpb
pop
pusha
sub
mov
mov
adc
sub
xor
sarb
sub
xchg
cli
mov
std
mov
faddl
xor
inc
iret
dec
mov
jo
das
push
sbb
xor
pop
mov
mov
lds
rorb
dec
arpl
pop
rcrb
jb
jbe
sbb
sbb
pop
mov
mov
nop
rorb
xchg
mov
push
hlt
enter
xchg
in
imul
cmc
mov
icebp
pushf
mov
adc
jge
pop
ret
adc
outsb
and
cmpb
inc
lods
or
mov
or
and
cmp
aas
std
stc
leave
out
jge
cwtl
jg
pop
sub
mov
gs
xor
sub
lahf
and
mov
les
fs
inc
repz
cmp
sbb
sub
adc
fmulp
mov
arpl
int
lahf
imul
sbb
subb
in
inc
mov
stc
repz
ja
es
enter
shll
ret
xlat
xchg
sbb
fisubrs
or
dec
mov
xchg
add
xor
das
jns
add
cmp
xor
push
ds
imul
cmp
insl
and
ljmp
scas
bound
scas
lds
dec
mov
lea
jae
mov
xchg
xor
sti
cmp
mov
and
cld
dec
jecxz
mov
outsb
inc
pop
lret
ds
in
std
out
sbb
push
iret
mov
pop
inc
push
add
ficoml
outsb
sbbb
movsl
cwtl
shrb
add
mov
jo
dec
lds
inc
jne
notl
mov
or
lahf
subb
imul
add
sub
jae
aam
xchg
mov
jae
orl
cmc
ret
mov
test
out
mov
adc
sub
xor
rcrb
lods
pop
xchg
test
lods
repnz
rcl
out
lcall
pusha
mov
pop
rcl
bound
fwait
or
jo
sub
adc
clc
jne
or
mov
enter
mov
js
popf
cmp
and
sub
inc
frstor
ss
sub
jne
mov
into
inc
pusha
push
out
daa
icebp
push
and
popf
dec
jne
xor
repnz
jle
clc
push
jb
ja
sbb
cmp
cmp
jne
jbe
fsubrs
das
jmp
add
mov
aas
mov
daa
cmp
int
in
lea
int3
icebp
loope
jp
icebp
jecxz
sub
pop
dec
xor
inc
les
jle
push
xor
test
lcall
aaa
xor
jle
scas
cmpl
out
pop
cmpsl
icebp
dec
mov
pushf
dec
xchg
inc
mov
mov
imul
inc
pop
imul
cmp
fs
cli
ret
cmpsb
mov
into
cli
in
in
inc
cmp
ja
insl
xor
sub
mov
int3
add
dec
rorb
iret
push
mov
test
or
in
das
mov
cmp
add
jo
lods
lea
fmul
out
pop
sarl
push
stos
fcomi
loopne
fildll
jge
dec
mov
ja
xchg
xchg
arpl
cmp
jne
adc
inc
sbb
adc
dec
subl
cld
inc
call
enter
call
incb
push
push
stos
add
icebp
aam
cmpsb
rolb
enter
mov
out
test
cltd
jecxz
lods
mov
clc
pop
push
arpl
sbb
sbb
test
mov
ret
or
push
xchg
pop
jnp
roll
inc
scas
inc
inc
rcll
js
cwtl
icebp
cmp
jmp
cmp
mov
nop
scas
cmp
adc
or
adc
lret
insb
mov
push
out
pushf
xchg
in
fists
test
sub
popa
repnz
js
inc
addb
cltd
cld
dec
mov
rclb
mov
cmpb
add
xor
cli
pop
xlat
stos
or
cmp
mov
cltd
and
in
mov
xchg
int3
inc
cmp
aaa
and
repz
cmp
sub
inc
sub
mov
orl
cmp
pop
sbb
ret
notl
test
pop
mov
push
loopne
add
hlt
jnp
xchg
fists
and
pushf
xor
jnp
sahf
cld
jns
mov
and
mov
in
mov
lods
pop
push
ds
stc
add
adc
mov
mov
mov
pop
insl
std
lea
mov
mov
cltd
mov
sub
ror
sbb
add
shll
jge
add
rclb
jp
or
std
inc
aas
cmp
jbe
xchg
xor
jno
hlt
mov
mov
jnp
nop
int
push
cmp
cvtdq2ps
outsb
dec
aas
inc
xchg
pop
or
fmuls
cmp
push
xor
aaa
in
in
mov
rorl
jnp
ds
pop
sbb
aam
push
sahf
xchg
xor
fdivl
nop
test
imul
aas
stos
jge
xchg
int3
add
and
in
lret
push
mov
or
xchg
test
mov
cmp
jb
loopne
mov
test
mov
xchg
pusha
mov
test
push
and
inc
adcl
xchg
jp
mov
xchg
bound
inc
and
mov
sub
in
ret
jne
xor
add
lahf
mov
je
or
mov
add
cli
jecxz
inc
mov
nop
ss
rcrb
cmp
lcall
aam
mov
in
jno
xor
cmp
mov
ljmp
int
cltd
sarl
test
push
jo
adc
fwait
sub
adc
mov
xor
sahf
lret
stos
pusha
pop
jnp
cmp
popa
pop
and
pop
mov
in
dec
and
xchg
and
je
fistl
jl
loopne
or
and
outsb
bnd
outsl
scas
cmp
mov
cltd
xchg
pop
jmp
mov
xchg
jnp
mov
jle
mov
lret
push
xchg
xor
fistl
mov
hlt
sub
and
add
push
shlb
pop
dec
adc
jge
fsubrs
imul
int3
cwtl
mov
dec
loopne
dec
enter
cmp
pop
dec
cmc
or
js
fdivr
add
sub
add
xor
pop
jg
ret
adc
sub
xor
stc
mov
out
push
xchg
fwait
xchg
push
mov
vmovhps
push
or
repnz
sub
enter
push
int
bound
mov
and
or
xchg
int
push
dec
add
aad
push
scas
mov
in
test
in
push
cmpsb
sbbb
out
jb
lret
iret
mov
ja
inc
pop
loope
dec
out
pusha
ret
adc
sbb
push
sub
out
mov
mull
sub
mov
pop
mov
or
cmp
stc
in
out
push
or
push
dec
popf
or
cmp
xlat
movsb
sti
in
aas
mov
push
mov
out
xchg
fistps
or
push
cli
add
xchg
out
push
ret
push
nop
data16
pop
or
in
loop
add
daa
add
sub
call
fwait
daa
cmpsl
andb
test
stos
jle
fmull
push
mov
pop
out
mull
add
jg
sub
pop
push
fwait
in
pop
loopne
sub
movl
pop
push
push
cmp
inc
ss
push
adc
call
je
scas
lcall
cmpl
jbe
xchg
stos
cmp
pop
jge
rcr
lock
icebp
clc
andl
xor
xchg
adc
and
push
inc
js
jp
mov
in
andl
in
mulb
mov
push
mov
aaa
xchg
jno
int
fisubl
jle
or
in
popa
mov
jo
xchg
xor
mov
xlat
pop
in
std
push
or
jge
xchg
popa
lahf
cmp
jle
pop
xchg
outsl
inc
imul
jo
icebp
xor
mov
inc
sub
inc
xor
dec
shll
ret
call
out
mov
cmp
clc
jo
jns
xchg
or
shll
xchg
cmp
into
jnp
and
cmpl
xor
in
xchg
in
push
test
adc
sub
jge
clc
and
adc
jnp
adc
insl
das
shll
jg
push
push
iret
adc
ljmp
mov
lds
push
cmp
fs
dec
xor
test
jb
xor
test
outsl
jb
jp
mov
mov
scas
mov
jle
dec
push
mov
inc
or
pop
inc
mov
pop
in
cmp
cmp
movsbl
jge
sub
jnp
dec
lcall
add
jno
mov
aas
adc
xchg
cmp
aam
adc
mov
dec
stos
push
lock
movsb
test
adc
fldl
sub
push
add
clc
xchg
in
dec
mov
int
mov
mov
bound
int
sub
and
push
sub
in
lahf
mov
in
out
shl
leave
xchg
in
xchg
cmpsb
fwait
jns
jnp
lahf
cmc
push
dec
mov
mov
jnp
sub
add
dec
daa
dec
xor
jns
dec
out
push
mov
xlat
mov
stos
xchg
sbb
shll
out
jl
lret
inc
outsb
jmp
into
xchg
dec
in
inc
inc
sub
mov
push
adc
movsb
imul
jecxz
or
fdivr
hlt
icebp
pusha
push
inc
dec
jnp
fists
nop
mov
gs
outsl
jbe
aad
les
gs
dec
cltd
xor
into
int3
push
push
jge
arpl
cmp
mov
imul
out
cmp
outsb
pop
dec
jle
push
push
or
xor
in
inc
xchg
insb
inc
sbb
out
jl
cwtl
data16
lea
ret
xchg
jbe
into
mov
call
or
xchg
push
jl
jmp
stos
push
addl
fidivl
ss
mov
repnz
jns
cli
into
int
fsubl
popa
dec
mov
aam
divb
mov
cmp
jmp
and
int
mov
xchg
push
lods
xchg
out
popf
xor
out
mov
test
xor
stc
out
loope
mov
mov
xor
pop
adc
andl
aaa
das
ret
push
jb
ja
pop
dec
sub
cld
adc
aas
leave
sbb
ja
inc
shl
mov
push
dec
pop
clc
sti
lods
jbe
clc
xchg
out
mov
jne
loopne
xor
inc
add
les
mov
ljmp
jg
pop
repz
jne
xchg
push
pusha
adc
mov
data16
nop
add
movsb
adc
icebp
fs
test
repnz
inc
and
cli
iret
adc
pop
in
dec
jne
pop
jmp
push
mov
xor
pop
mov
dec
les
out
xchg
push
fildll
jbe
lea
out
add
jae
shrb
jle
rcrl
incl
add
adc
loop
cmc
int3
or
into
push
dec
movsl
jmp
jg
jns
jae
sub
lret
movsb
sti
test
mov
addr16
pop
aas
adc
sbb
repz
test
mov
pusha
push
ds
inc
into
add
mov
jmp
out
cli
loope
push
pushw
ret
les
adc
pop
inc
xchg
xchg
pop
arpl
mov
fwait
iret
mov
das
mov
cli
in
xchg
pop
and
bound
jno
cmp
cltd
orb
jno
mov
loop
stc
or
cmp
orl
lock
cmp
push
subl
out
insl
imul
and
push
sbb
jge
ds
and
es
sar
shlb
xchg
fs
cmp
insl
and
lds
xorl
pop
mov
sbb
test
loopne
cmp
out
outsb
leave
push
push
ljmp
movsb
leave
mov
inc
pop
in
popa
negl
adc
and
pushf
jl
inc
sub
sti
inc
insl
ds
clc
je
int3
lret
push
push
stos
jbe
xor
int
xchg
push
jbe
bound
imul
fldl
mov
add
mov
sahf
mov
and
jecxz
jge
mov
enter
cltd
clc
xchg
mov
cli
out
push
add
xorb
pusha
test
arpl
into
cltd
jle
aad
ret
popa
scas
mov
popa
pop
cs
mov
int
xorb
push
insb
outsb
insb
aas
inc
mov
xor
or
rcll
xor
aas
inc
mov
fistps
mov
ret
loope
cmove
and
call
in
ret
sbb
push
inc
mov
push
mov
in
std
push
push
insl
add
js
xchg
dec
enter
lea
dec
xlat
adc
push
lock
insl
iret
cltd
psubd
test
sbb
call
xchg
in
lds
xlat
jae
sub
xlat
in
test
fsubrl
shlb
mov
mov
cmp
xor
loope
pop
icebp
pop
imul
loop
fwait
push
stos
ret
pop
inc
cmpsb
imulb
insl
adc
pop
stc
xchg
mov
sub
xor
add
cmp
sub
pop
add
cld
clc
xor
mov
ret
ss
push
cmp
ljmp
mov
adc
fs
fidivrs
cmpb
fcomps
sub
or
cmp
xchg
jge
cmp
clc
fsts
out
outsb
sbb
xchg
in
sbb
push
xor
xor
out
fwait
sub
jbe
pop
hlt
imul
std
push
in
or
or
mov
jecxz
std
lret
adc
aas
jnp
mov
sbb
subl
dec
sub
ss
rcll
mov
call
push
inc
xchg
es
ja
out
jle
js
push
jne
pop
mov
inc
outsb
xchg
test
fistpll
add
into
cltd
mov
jmp
mov
leave
aaa
mov
push
adc
mov
dec
test
or
ds
lods
loop
roll
cld
sbb
repz
sbb
daa
das
inc
mov
inc
xlat
or
test
jecxz
cmp
xchg
cmpsl
movsl
loopne
mov
pop
xchg
dec
cmp
xchg
mov
jns
cmp
lods
mov
mov
pushf
sub
sahf
imul
push
cwtl
xchg
stc
pop
jo
icebp
cmp
cltd
test
jne
mov
or
stc
pop
add
incl
mov
push
lcall
pop
mov
and
shr
inc
mov
mov
sbb
mov
xor
pop
arpl
call
scas
into
outsb
sbb
rcll
and
xchg
add
cld
and
or
iret
sub
add
into
lret
inc
cmc
shlb
les
or
stos
test
xchg
nop
sub
loope
repnz
add
mov
std
mov
mov
out
sub
jb
jg
aad
sub
or
rolb
lret
pop
dec
pop
bound
and
shrb
fdivrs
insl
incl
sbb
mov
outsl
outsl
inc
imul
out
push
lret
out
lahf
adc
xor
dec
fisttpl
daa
and
or
jbe
push
pop
inc
out
stc
pop
mov
int
mov
mov
add
fwait
dec
ret
xchg
shlb
in
cmpsl
or
xor
jge
stc
inc
push
push
idivl
fwait
sub
inc
push
push
ss
xor
push
mov
jl
enter
jb
rorl
les
xor
sbb
xchg
insl
clc
js
popa
sbb
subb
rol
arpl
sbb
dec
adc
push
push
mov
int3
aad
in
fwait
mov
in
and
adcl
in
jle
pusha
add
cmp
or
xchg
mov
dec
icebp
fwait
jne
ds
cli
jge
mov
mov
push
sahf
pop
or
data16
dec
fldl
push
out
adc
pop
jb
repnz
incl
icebp
in
fisubrs
popf
divl
icebp
ficoml
movsb
aam
gs
mov
adc
test
inc
pop
dec
mov
scas
das
cli
sub
stc
push
jae
cwtl
mov
fisubrs
test
jnp
jecxz
cmp
dec
mov
push
cmp
or
outsw
ja
nop
psrld
scas
jno
push
out
mov
cmc
mov
aad
mov
or
jmp
mov
nop
xchg
loopne
pop
into
cmp
in
je
inc
mov
xchg
lods
insb
loopne
mov
pusha
push
mov
pop
aam
mov
repz
jne
mov
jb
ss
aam
sbb
inc
jmp
les
mov
movsb
and
pop
mov
inc
cmp
out
push
pop
aas
stc
push
leave
ss
xor
incl
xchg
into
in
xor
out
inc
xchg
and
nop
daa
dec
ja
imul
jb
arpl
mov
enter
and
xlat
push
cmp
test
mov
cmpsb
sub
push
and
arpl
inc
dec
add
xor
adc
mov
mov
insl
insl
bnd
adc
dec
std
arpl
hlt
jp
pusha
jnp
sbb
addr16
scas
outsl
iret
pop
cwtl
cwtl
jg
xor
xor
cmpsl
fcmovbe
movsl
push
sub
jns
pop
test
daa
inc
out
jb
cmp
daa
push
sbb
mov
pop
mov
add
stos
sub
xchg
outsl
jbe
mov
cmpsl
shll
arpl
push
sub
push
jp
loopne
and
jb
mov
dec
add
xor
pop
insb
pop
cmpsl
add
popf
push
jl
lcall
cs
int3
mov
jmp
mov
test
sbb
mov
jmp
push
dec
inc
mov
arpl
dec
movsl
imulb
adc
mov
pop
gs
lods
fdivrp
and
xor
in
sahf
repz
ret
loopne
dec
aaa
lret
sub
jbe
xor
push
fwait
dec
lods
leave
repz
mov
rcll
in
push
fldl
adc
xor
sarb
add
hlt
xchg
shrl
dec
inc
jecxz
or
pushf
lahf
cmp
sub
loop
mov
jnp
movsb
mov
ja
inc
mov
push
leave
dec
jo
inc
out
fists
mov
dec
dec
pushf
jl
add
gs
cmc
adc
inc
outsl
mov
sub
xor
insb
fisubl
xor
add
aad
js
xlat
push
add
out
inc
sbb
xchg
nop
cmp
mov
push
aam
mov
push
pop
dec
and
out
mov
xor
xchg
ljmp
pop
cli
shll
mov
js
mov
imul
xor
je
sbb
jge
add
or
repnz
cmpsl
das
js
xor
stc
xor
jne
dec
lea
out
sub
sub
aad
mov
inc
jg
xchg
sbb
cli
ret
jmp
sahf
push
cwtl
cmc
sub
pop
jb
and
in
dec
mov
cmp
cltd
shlb
insb
sbb
sahf
pop
add
test
and
and
popa
adc
jle
in
add
jb
pop
cld
xor
in
lds
jg
lret
cmc
mov
mov
cmc
mov
cmp
pusha
cmpsl
mov
mov
leave
fistps
imul
test
mov
int3
pop
xchg
dec
or
das
push
fisubs
jle
push
mov
in
xor
gs
push
mov
lea
iret
dec
mov
shll
adc
mov
push
mov
mov
std
popf
or
push
mov
testl
int3
xlat
lods
rcr
mov
mov
mov
cmp
test
adc
mul
roll
xchg
shl
fistl
sbb
movsb
pusha
iret
inc
subl
loope
lds
jns
jecxz
es
lods
enter
and
mov
imul
nop
mov
xchg
insl
push
sbb
popf
push
xchg
shlb
pop
xor
jg
inc
cmpb
cmpb
push
push
divl
lret
jbe
xchg
pop
sti
insl
lret
and
ljmp
mov
pop
fcoms
aaa
imul
push
jae
and
pop
aad
jl
rolb
cwtl
pop
pop
pop
adc
sub
xchg
out
or
mov
or
sti
xchg
test
xchg
int3
dec
dec
adcl
shrb
test
inc
scas
jl
dec
stc
iret
in
into
loopne
fs
mov
loop
xchg
mov
aad
pop
movsl
imul
sub
int
imul
faddp
divl
pop
add
mov
ja
inc
insl
pop
jno
mov
inc
jl
mov
xor
cmp
lock
fmull
inc
test
shll
jbe
jecxz
mov
fs
leave
push
rorl
dec
xor
jp
pop
loop
insb
cwtl
mov
pop
enter
adc
fwait
pop
insb
aaa
xor
xor
and
int3
mov
mov
addr16
ja
push
imull
xchg
sub
std
aam
das
hlt
sbb
lock
repnz
adc
push
mov
xchg
imul
add
imul
push
cld
ss
in
int
push
sub
rorl
jmp
cwtl
adc
pop
push
adc
pop
jae
jmp
cmpsl
fists
ljmp
fcoml
rolb
add
pop
cwtl
ffree
sub
out
sub
inc
adc
call
inc
jnp
sub
xor
mov
stos
roll
outsb
jae
jne
sbb
and
in
lock
gs
loope
mov
mov
into
xlat
cmp
insb
cmp
lcall
push
stos
mov
inc
and
sub
decl
dec
pop
cld
inc
mov
aaa
aaa
and
fcoms
sbb
or
pop
sarb
das
cmpsb
add
shrl
sbb
adc
fisttpl
xor
fs
pusha
mov
nop
jns
js
out
mov
push
cmp
nop
cmpsl
add
add
fstps
lcall
jl
cmp
sub
mov
adc
dec
mov
pop
xchg
scas
and
iret
rolb
daa
mov
lret
push
mov
jl,pt
jae
lea
iret
rolb
jmp
js
je
push
push
mov
pop
mov
repnz
jo
jp
cltd
jne
xor
xor
ss
jbe
xrelease
daa
push
incl
mov
add
cmp
fimuls
jl
adc
mov
xor
repz
sub
imul
push
in
aas
mov
xchg
fsts
outsl
cmp
dec
jg
inc
xchg
arpl
mov
subb
push
adc
outsb
jl
jmp
dec
lods
loop
scas
aaa
addr16
ljmp
dec
cmp
clc
cmp
dec
andb
cmpb
gs
cmpsb
enter
inc
cmc
daa
lahf
lret
dec
mov
lods
mov
adcl
inc
lahf
dec
xor
ja
add
add
dec
push
out
movsl
xchg
stc
sarb
mov
mov
fdivrs
xor
jb
push
sbb
and
lods
pop
jecxz
aam
mov
mov
inc
mov
cli
es
mov
pusha
push
jg
inc
adc
or
jle
repz
ret
mov
mov
std
add
pop
mov
jbe
inc
mov
push
pop
or
inc
add
jge
adc
clc
lret
scas
xchg
xchg
mov
adc
mov
pop
jo
pop
pop
out
inc
mov
sbb
jecxz
fldt
jne
mov
mov
sbb
subl
mov
mov
movsl
lahf
inc
cld
fstps
shll
fwait
jae
pop
mov
fcoml
push
mov
cld
lcall
push
iret
sti
fdivr
lds
pop
cwtl
mov
jp
in
rorb
jle
inc
cltd
jp
scas
xorl
mov
fnsave
nop
add
es
sub
jp
icebp
sbb
xor
icebp
xlat
sbb
fidivrs
clc
loopne
mov
pop
add
imulb
filds
mov
mov
sub
pop
lret
xchg
mov
mov
dec
jecxz
inc
xor
addl
lret
loopne
insl
loop
push
popf
sub
and
rorl
mov
fdivrp
add
out
add
js
mov
cmc
test
rcl
repz
lret
inc
adc
push
mov
into
std
mov
mov
adc
xor
cmp
cmp
ss
das
in
cmpsl
popf
imul
mov
jg
sbb
dec
iret
jno
xchg
call
pop
and
mov
loope
test
cmp
cli
fcompl
movsb
shll
bound
sbb
xchg
out
push
mov
out
int
add
popa
pop
adc
in
dec
pop
loope
dec
imul
int
xchg
pusha
sahf
ljmp
jle
aaa
lret
je
test
arpl
lods
ja
mov
mov
mov
xor
pop
lea
popa
cmp
mov
fdivp
rclb
mov
pop
cld
cmpsb
and
pop
js
ds
mov
clc
adc
insb
aad
stos
mov
aam
mov
call
std
mov
mov
push
push
out
xor
adc
je
sub
je
adc
and
cmpsb
jns
test
movsl
adc
pop
fdivrp
testb
pop
xchg
cmp
lds
push
xor
cltd
mov
inc
pop
mov
hlt
xchg
addb
mov
and
add
int
test
mov
pop
stos
and
xor
mov
cmpsl
sbb
push
mov
stos
inc
fdivrs
mov
repz
shll
fcoml
pop
mov
sub
cmpsl
cld
sub
or
movsl
dec
repz
adc
insb
sub
mov
inc
pop
cmp
mov
and
les
mov
aaa
test
int
sbb
xchg
jge
sbb
fsubrl
xchg
mov
jno
ficoms
std
push
sbb
jns
cmpb
sub
cs
xorb
xor
loope
rcr
enter
in
dec
xchg
or
stos
ljmp
nop
rcrb
idivb
or
mov
push
dec
stos
jmp
pusha
push
ret
add
mov
scas
push
push
clc
mov
mov
and
or
ret
outsb
fldl
fsubp
sbb
jle
push
inc
xchg
mov
lods
pop
test
cmp
xlat
jns
scas
sbb
fld
inc
jmp
pop
adc
inc
rorl
mov
jbe
cmp
rol
add
lods
mov
pop
mov
dec
lods
or
pop
in
repnz
adc
stos
das
test
testb
add
fsubp
mov
inc
insl
cmc
or
loop
lahf
jecxz
mov
push
sbb
add
sti
fcomi
out
sar
push
shrb
push
mov
adc
test
movsl
lcall
add
ret
adc
in
push
xor
push
xchg
popa
add
repnz
mov
fs
dec
je
dec
cmp
in
jno
dec
xchg
xor
lret
mov
rolb
xchg
lcall
push
add
or
fstpt
fisubl
xor
xchg
cli
aam
sub
stos
xor
and
cmp
sbb
outsb
mov
mov
int3
test
xor
in
inc
pop
dec
dec
enter
jno
hlt
fimull
dec
inc
sbb
push
add
dec
fisttps
mov
jl
inc
loope
pop
mov
push
mov
push
leave
mov
sahf
xor
rcrl
xor
inc
iret
repz
mov
nop
cli
sub
jle
ljmp
shlb
dec
inc
sbb
dec
mov
mov
inc
fnsave
js
je
mov
cltd
xlat
mov
cli
mov
or
ss
repz
pop
jl
push
xchg
rcrl
pop
pusha
fwait
pusha
data16
dec
mov
bound
push
sahf
fidivs
inc
adc
out
xor
jno
pop
inc
xchg
movsb
sarl
jge
jnp
push
xorb
pop
mov
je
ljmp
fstp
pop
cmpsl
jl
pop
or
std
cmpl
jle
add
out
icebp
sub
addl
sub
mov
mov
mov
cmp
mov
inc
mov
cmp
cmpsl
push
movsb
iret
or
daa
mov
lods
or
or
fstl
sahf
daa
fadds
sbb
mov
jb
aaa
aad
adc
dec
mov
imul
pop
loope
and
lahf
lods
aam
mov
dec
push
sbb
adc
and
push
outsb
adc
xor
push
dec
mov
push
dec
jne,pn
das
push
jne
jge
ret
add
lock
out
fnstenv
testl
ret
cmp
ret
push
imulb
outsl
punpckhdq
jb
movl
adc
push
jge
pop
sti
shlb
push
xor
call
lea
fstp
dec
add
sarl
rorl
lret
loopne
add
outsl
push
sub
adc
xchg
push
mov
xchg
sub
dec
lock
mov
dec
sub
clc
dec
add
sti
pop
and
out
stos
sub
sahf
outsb
pop
pminsw
or
js
cmp
fisttpll
ror
or
push
jl
or
sbb
mov
pop
lcall
je
pop
cs
movl
xor
cmc
sahf
rclb
pop
rorl
jmp
jge
jle
mov
sti
cmpsl
cmpsl
mov
shl
int
leave
daa
out
movl
mov
push
js
aam
mov
insl
dec
je
test
dec
mov
rclb
jnp
cld
sub
clc
aaa
cmp
cmp
jne
adc
xor
loop
xchg
adc
cld
or
xor
pop
push
ficoml
jns
xchg
ja
sbb
loop,pn
test
mov
xchg
inc
mulb
jne
iret
pop
or
nop
aad
insl
shrl
push
test
rcl
faddl
mov
lret
and
lea
sbb
imul
jae
sub
adc
cmpsb
out
pop
cmp
enter
stos
sub
sub
mov
and
pop
and
frstor
jo
adc
cmp
mov
xchg
xchg
push
mov
cmp
lods
push
adc
dec
sub
test
lock
insl
xor
mov
push
push
jno
call
pushf
dec
mov
push
inc
mov
mov
fs
or
das
shl
dec
jbe
push
iret
xor
xchg
mov
in
gs
sub
pushf
ret
jo
outsl
pushf
mov
jge
mov
mov
jne
push
fadds
and
xchg
mov
movsb
and
outsb
call
call
xlat
test
fisubl
sbb
add
dec
sbb
scas
xchg
jo
fidivrs
add
xor
mov
jge
xor
repnz
icebp
enter
into
jecxz
imul
sar
or
sub
sbb
call
cs
fistps
hlt
cmp
push
or
ror
xchg
stos
fisttpl
xor
sbb
data16
lea
enter
test
dec
lcall
jp
mov
lds
jmp
jmp
out
jnp
sub
lret
imul
test
aaa
in
das
xchg
pop
sub
inc
iret
gs
std
and
test
xor
popf
lea
test
test
fistpl
inc
jns
pop
push
mov
ja
pop
decb
stos
dec
nopl
adc
insb
fstpl
adcl
cmp
mov
jg
lds
inc
ss
rolb
add
aas
int3
jg
pop
xor
sbb
ret
pop
push
dec
push
adc
and
wrmsr
pop
ret
jg
push
dec
popf
pushf
mov
inc
and
mov
int3
jbe
aam
sbb
add
jno
mov
aas
and
in
frstor
jne
mov
js
stos
aaa
pop
outsb
push
inc
xor
hlt
adc
inc
iret
inc
nop
popa
mov
imulb
mov
inc
es
das
aam
adc
insl
rcrb
arpl
das
cltd
das
lcall
dec
test
push
mov
push
sbb
jle
mov
shll
add
jne
jecxz
push
dec
xchg
sbb
gs
sahf
sbbb
add
out
or
lea
mov
add
or
mov
cld
imul
inc
test
pusha
adc
sub
negl
outsb
fsubs
inc
add
mov
bound
sbb
xor
adcl
enter
sahf
cltd
cmpsb
dec
stos
jg
ret
in
pop
sub
fstps
or
cmpsl
in
je
jb
mov
dec
xor
pop
or
mov
popa
mov
lock
mov
es
lods
cmpsl
repz
mov
aas
xor
rol
fnstcw
pop
daa
or
enter
inc
xchg
out
pop
cmp
les
xchg
add
imul
pop
jge
daa
lea
pop
movsb
or
sub
insl
dec
add
or
int3
push
aam
cs
and
in
mov
into
cmc
mov
cld
xlat
data16
add
mov
push
in
xchg
jns
pop
movl
sahf
or
fwait
inc
icebp
ficoms
cmp
popa
mov
sbb
xor
repz
push
lret
mov
fists
rcr
out
and
stos
lret
xor
mov
push
xchg
add
ret
add
pusha
inc
lods
stos
jmp
pop
cmpl
ja
nopl
jae
gs
fistpll
repnz
sahf
mov
xor
add
in
into
rorb
add
adc
popf
jbe
xor
cmp
imul
je
xchg
inc
enter
dec
shrl
jmp
das
pop
ficomps
rcrb
mov
cmp
mov
fsts
sbb
sub
orb
xor
cltd
sbb
cmc
std
add
push
mov
std
or
add
out
push
jmp
mov
pop
bound
mov
xchg
mov
sahf
shll
xor
jecxz
push
arpl
out
push
mov
sub
clc
xchg
xchg
inc
movsb
cwtl
stc
cmp
mov
mov
pop
mov
movsb
xchg
cmp
cmp
cmp
sti
inc
inc
shrb
jno
push
sbb
mov
add
inc
pop
lea
adc
add
sub
call
add
or
hlt
dec
cld
adc
add
out
xor
fnsave
dec
mov
insb
subl
or
test
rcr
into
mov
lahf
sbb
push
dec
or
push
outsb
ret
cmp
pop
lds
xchg
pop
divb
mov
xor
adc
inc
mov
pop
adc
mov
pop
leave
mov
sahf
adc
xor
ja
add
icebp
cmp
or
lahf
rorl
xchg
gs
mov
popf
filds
daa
sub
or
in
addr16
pop
mov
out
and
push
xchg
jl
sbb
adc
mov
shlb
push
xchg
out
mov
jbe
repnz
mov
daa
jb
cli
inc
rcrb
or
sub
mov
ss
mov
jmp
cmpsb
pop
xchg
lahf
faddl
popf
test
sahf
out
and
sub
xor
xor
shlb
fmulp
pop
sub
mov
mov
int3
push
adc
inc
icebp
push
and
aad
lods
sbb
in
imul
and
ror
pop
dec
add
fmul
mov
mov
aam
popa
add
cmp
jbe
adc
dec
enter
pop
sarl
fidivs
cmc
cmp
imul
sahf
hlt
fs
jg
mov
hlt
lahf
mov
scas
or
cwtl
pushw
inc
lods
and
mov
mul
cs
pop
jg
loope
jnp
sub
in
push
por
aaa
inc
push
jbe
ss
scas
fcomp
fcoml
sbb
shrl
rcrl
repnz
mov
scas
call
or
pop
sbb
pop
leave
cmpsb
mov
jl
push
sbb
sbb
loop
inc
cmp
push
dec
jmp
das
jb
xor
bound
ja
lds
cld
stos
jno
idivl
push
pop
dec
mov
mov
push
rcl
xor
mov
push
bound
sub
push
xchg
aaa
das
add
inc
xchg
and
pop
lock
xlat
inc
aas
cmpb
movsl
xlat
data16
adc
sbb
cli
sub
vunpckhps
pop
push
xor
push
push
or
ficompl
dec
in
pop
cli
mov
mov
cmp
sbb
or
sahf
jbe
sub
in
repz
pop
pop
jp
mov
and
dec
mov
das
stos
insl
repz
outsl
fwait
jge
mov
push
fwait
push
pop
mov
xor
xchg
pop
fs
aas
mov
aam
mov
push
clc
dec
movsb
xor
sbb
mov
arpl
repnz
shrb
cmpsl
enter
xchg
movsb
dec
mov
out
and
das
xchg
fldcw
repz
cmp
mov
pop
mov
xor
pop
popa
jmp
jae
test
test
xchg
fsubs
aad
stos
cltd
push
cmp
jecxz
and
insb
aad
sbb
xchg
push
jb
neg
add
inc
test
ret
cltd
call
push
mov
sbb
push
cli
mov
in
hlt
jecxz
dec
sub
jg
mov
and
lret
repnz
addb
fcmove
insl
jp
mov
dec
mov
add
push
dec
pop
ljmp
dec
and
aad
sbb
cmp
push
js
arpl
frstor
shl
push
mov
push
repz
push
sbb
xchg
aas
jg
sbb
sbb
xor
mov
adc
in
inc
mov
scas
mov
cld
mov
shll
sub
mov
xor
std
sbbl
or
pop
cld
pusha
roll
ret
jmp
out
lret
lods
int
mov
sub
inc
fwait
cmp
je
les
dec
mov
pop
inc
pushf
int
loopne
jge
mov
dec
add
jb
les
loopne
js
jnp
add
pop
sbb
inc
push
ret
es
sub
imul
mov
jmp
sbb
iret
sbb
xchg
mov
sub
xchg
mov
sbb
cmp
jbe
cli
push
mov
adc
jno
adc
mov
sbb
mov
add
push
call
mov
mov
faddl
xor
dec
fdivrs
mov
insl
lods
cli
cmp
xchg
xor
daa
push
or
xchg
in
mov
mov
btl
jno
sar
fdivrs
xchg
add
test
dec
adc
out
push
ja
jo
scas
add
outsl
repz
aaa
jno
and
pop
push
imul
and
push
sub
xchg
in
pop
daa
jp
or
pop
xchg
pop
das
add
jge
cmp
dec
cld
jle
pop
xchg
cmp
inc
into
lret
mov
lods
ret
loop
sbb
shll
shr
sub
sub
imul
pop
lock
mov
pop
pushf
nop
inc
fstps
int
push
push
and
push
jge
sub
jl
push
ljmp
lahf
mov
ret
cmp
cmp
sub
stos
sbb
xor
mov
pop
repnz
mov
lret
cltd
imul
and
adcb
lahf
test
jl
rorb
test
dec
jo
mov
adc
lret
dec
push
scas
fucom
in
push
fidivrl
cmc
mov
insl
lock
mov
push
popf
jb
inc
mov
test
jge
sbb
or
or
cmc
push
in
mov
pop
mov
scas
andb
lea
repz
data16
jecxz
imul
mov
or
leave
sbb
push
sbb
arpl
lret
push
aad
loop
mov
add
fimuls
fdivrs
arpl
adcl
popa
xor
mov
cmpsb
stos
sbb
pop
repz
add
cmp
cmp
imul
xchg
xor
mov
arpl
data16
xchg
jg
xchg
out
mov
cld
jg
sbbl
jbe
test
test
lcall
mov
xor
and
push
cmpsl
xor
inc
jp
enter
les
stos
sub
pop
movsb
cli
push
insl
and
push
lea
scas
pop
xor
add
stos
std
test
inc
xor
fdivs
xchg
mov
in
mov
jbe
xor
mov
xor
popf
ds
lods
xorb
cmpsb
and
aad
scas
int
rorl
ja
push
fsubl
lods
dec
movsb
lds
push
sti
shrl
lods
push
xchg
je
pushl
sub
fsubrl
out
cmp
cld
fldenv
ret
je
mov
adc
dec
xor
add
pop
mov
test
inc
js
repz
or
and
jle
pop
cmp
pop
add
fucom
push
jne
scas
sti
mov
in
adc
pop
sub
in
sbb
scas
and
movsb
jg
push
sahf
mov
clc
mov
jecxz
in
arpl
mov
dec
adc
mov
iret
es
lahf
and
call
flds
jo
out
enter
cmpsb
in
cmpsb
push
cmp
sbb
repnz
out
loope
movsl
cli
std
adc
lods
and
xchg
stc
push
shrl
dec
pop
addr16
mov
outsl
iret
mov
or
push
sbbb
imul
push
adcb
gs
int
cli
popa
loope
xor
mull
mov
sbb
inc
push
jmp
mov
pop
test
jb
gs
jp
hlt
pop
or
bnd
in
outsb
dec
lods
imull
out
icebp
loop
inc
push
fs
movsl
cli
ret
pop
sbb
outsb
test
mov
popa
insl
in
pop
outsl
aas
mov
pop
pop
notb
out
test
enter
and
and
cmp
loop
notl
repnz
xchg
xor
mov
aas
adc
aaa
aad
mov
cmc
mov
mov
std
push
xor
sub
sbb
mov
or
push
lods
sbb
mov
data16
daa
fnstsw
cld
dec
mov
mov
leave
cwtl
mov
adc
jne
pop
sub
in
mov
int3
mov
mov
popa
pushf
or
jne
sbb
xor
push
xchg
pop
mov
in
shl
push
mov
adc
xchg
jns
lret
enter
aaa
mov
repz
loope
pop
into
pop
mov
ds
fldenv
pop
int3
xchg
adc
int
movsb
mov
repnz
inc
fistps
add
out
xorl
adc
mov
cmp
pop
sbb
aam
jge
idivb
pop
jne
pop
or
pop
push
fimull
push
movsl
pop
scas
dec
sahf
add
out
jo
addr16
mov
or
xorb
dec
xor
cmp
adc
jbe
mov
repz
xchg
xchg
push
sbb
ds
push
aam
jno
sbb
ds
mov
insl
popf
lcall
and
inc
mov
call
or
jge
and
int3
push
sbbb
cmp
push
adc
and
iret
repnz
lods
lock
fcomps
addl
pop
xor
and
ficoml
cs
mov
inc
mov
andb
inc
add
leave
jge
negw
add
push
sti
jg
jo
insb
lds
mov
dec
pop
jnp
out
inc
es
sbb
mov
in
int
sarl
scas
icebp
pop
loopne
ret
cmp
jecxz
push
out
pop
pop
add
mov
outsl
and
iret
mov
pusha
cmpsl
outsl
aas
xlat
push
out
lods
inc
ljmp
in
push
sbb
and
lcall
jo
pop
bound
nop
ret
pushf
mov
jo
or
std
sbb
pop
or
inc
xchg
movsb
pop
test
jl
push
in
and
and
rcl
ret
pop
xlat
jp
stc
jnp
vpmacsdd
ret
mov
aaa
mov
jns
mov
inc
aas
out
pop
dec
or
xor
arpl
in
cmpsl
dec
cmp
out
lds
pop
mov
scas
mov
jge
push
dec
cmp
test
pop
pushf
mov
and
jmpw
call
pop
mov
fsub
inc
in
xor
stos
xchg
mov
add
ds
add
cmp
daa
cmp
inc
shl
lock
push
pop
pusha
sbb
out
xchg
pop
pop
dec
rorb
xchg
insb
xchg
loopne
enter
sub
mov
cmp
mov
add
adc
mov
adc
jb
xor
les
fisttps
push
cmp
and
mov
pop
hlt
xchg
cmp
lods
test
in
push
test
loopne
mov
or
int
push
push
in
mov
dec
aas
mov
movsl
test
mov
ret
push
push
les
mov
mov
and
pop
fnsetpm(287
sbb
jecxz
test
or
or
lret
call
out
or
loope
rclb
adc
imul
test
xchg
in
pcmpgtd
dec
dec
push
cmp
inc
and
sbb
out
xchg
xchg
negb
xchg
jecxz
mov
into
mov
je
iret
ljmp
mov
xchg
sbb
and
mov
ss
dec
pop
jg
insb
sbb
adc
aas
adc
loop
cmp
dec
cmp
sub
dec
push
mov
cwtl
mov
ret
mov
mov
movb
scas
inc
les
pop
xchg
pushf
xor
stos
in
je
adc
pop
inc
jns
rcrb
sbb
and
push
sti
push
lret
mov
sub
sub
push
ljmp
loop
test
dec
mov
daa
and
sub
push
and
xchg
arpl
lcall
push
xchg
xor
nop
imul
clc
cwtl
mov
xchg
adc
fld1
std
mov
and
fists
jge
inc
into
add
into
dec
in
xchg
mov
out
push
cwtl
jnp
sub
imul
adc
mov
add
idiv
inc
leave
cli
mov
mov
dec
test
dec
inc
pusha
fsubrs
insb
mov
addl
cmp
lea
mov
mov
sub
repz
leave
sbb
adc
inc
loopne
subb
xchg
pop
sbb
mov
push
push
fsts
jae
or
xchg
cmc
cld
cs
mov
xchg
scas
test
mov
les
xor
in
rolb
sbb
js
xchg
push
iret
push
ret
and
and
jle
je
or
repz
mov
cwtl
cmp
out
movsb
lret
dec
cmpsb
inc
cli
push
roll
test
and
ret
cmpsb
jmp
mov
sub
icebp
dec
in
or
xchg
popf
cmp
mov
push
mov
push
clc
xor
popa
xchg
jb
sbb
mov
mov
pop
fs
repz
in
outsl
mul
sbb
into
push
mov
dec
mov
xchg
je
pop
clc
mov
aaa
inc
sub
jae
inc
pop
mov
jbe
outsl
jnp
mov
xor
or
sti
xchg
inc
inc
cmpsl
stc
adc
sarb
sbb
xchg
lahf
xor
shll
popl
imulb
lret
ss
sbb
sarb
sub
ficomps
addr16
arpl
dec
pop
xchg
pop
mov
mov
jbe
xchg
lock
stos
xchg
lea
aaa
ret
adc
jo
sbb
xchg
push
inc
adc
xor
fmul
lret
mov
mov
adc
add
fstpt
cli
jmp
popf
sbb
aaa
jp
pop
int3
test
mov
rorl
mov
push
jmp
jne
push
add
dec
insl
dec
jg
lret
lcall
iret
enter
mov
pusha
xchg
xlat
jl
xor
cmp
jl
inc
mov
aas
scas
enter
xadd
std
inc
mov
cmp
inc
inc
nop
mov
push
nop
addr16
mov
mov
sar
add
push
js
cld
sub
movl
jecxz
and
xchg
sahf
imul
xchg
push
je
xchg
je
xchg
enter
jecxz
test
push
pop
rclb
cmp
nop
lods
and
xchg
es
mov
ss
xor
je
mov
movsl
and
cli
mov
pop
mov
sbb
in
mov
subb
ja
std
orb
test
xchg
daa
mov
cwtl
jne
mov
fcomps
stc
sub
xchg
pop
nop
inc
jp
push
in
mov
xchg
and
xor
jmp
jno
xchg
fsubrs
xor
fnsave
inc
mov
jo
pop
cmpb
fdivrl
aas
movsb
popa
pop
xchg
mov
cld
mov
mov
or
std
or
cltd
lcall
adc
dec
repz
push
or
pop
rcl
scas
icebp
inc
ret
mov
les
ja
push
xor
aad
out
aas
rclb
js
xor
jb
cmc
daa
lret
ret
jno
mov
outsb
push
cmpsl
push
mov
stc
and
cmp
or
fiadds
inc
iret
or
adc
test
les
and
push
enter
push
push
imul
jg
or
imul
sti
cmpsb
pop
idivb
and
xchg
jb
sub
sbb
jbe
push
pop
ljmp
rclb
adcl
ret
xlat
jmp
clc
xor
ficomps
mov
inc
loope
xchg
dec
adc
inc
xlat
loop
sbb
jnp
pusha
cmc
push
xchg
cmp
call
inc
lret
pop
push
andl
dec
out
pop
add
lods
push
cld
push
in
push
and
mov
add
pusha
cmp
mov
test
addr16
ljmp
jbe
or
addr16
lea
in
in
mov
push
jle
ret
jg
arpl
cmp
adc
imul
stc
pop
lods
rcr
add
call
push
seto
inc
adc
cmp
xor
xchg
mov
dec
xchg
dec
out
mov
rolb
test
int
out
push
out
fistps
jl
frstor
xor
add
cltd
jle
mov
inc
cld
dec
test
sub
fcmovb
xor
mov
data16
or
fadds
shll
aam
cwtl
and
push
inc
cli
or
loop
mov
adc
sbb
inc
pop
mov
mov
lcall
in
or
pop
stc
xchg
sbb
movsb
adc
out
loop
jle
lret
adc
into
fs
das
dec
mov
popf
ljmp
mov
push
xor
inc
pop
inc
outsb
dec
test
adc
push
or
and
xchg
xchg
hlt
inc
addl
push
mov
std
sahf
insb
icebp
cwtl
test
add
cli
cltd
mov
insb
pop
sub
cld
repz
imul
xor
sub
dec
sbb
add
mov
in
in
cmp
mov
mov
iret
sub
jmp
cmp
lea
rcr
stc
pushf
outsl
hlt
icebp
push
xor
adc
xchg
fbld
clc
in
sub
loop
push
xor
sbb
dec
dec
adc
xchg
int3
push
out
push
iret
pop
repnz
sub
mov
or
xchg
fstpl
sub
leave
jo
lods
test
lcall
sbb
incl
mov
xor
xchg
inc
hlt
add
fsubs
jae
push
cwtl
loopne
push
inc
cmpsl
sub
subl
mov
nop
sahf
into
pop
push
pop
inc
gs
inc
add
rclb
stc
and
mov
int3
jno
mov
pop
dec
leave
adc
dec
add
cmp
or
dec
nop
out
gs
insb
fistl
sub
gs
cmc
mov
jge
jl
fcompl
shll
xchg
js
testb
in
mov
dec
cmp
xchg
lods
mov
push
mov
int
movsb
lods
jmp
push
xlat
xorb
mov
fimull
ljmp
xchg
out
mov
push
adc
xchg
sarl
imul
aam
mov
js
jge
or
mov
mov
xlat
out
push
xlat
repz
jnp
aas
lods
fstps
inc
dec
cmp
push
xchg
sti
xor
push
push
lcall
pop
inc
test
int
adc
xor
adc
mov
jmp
setne
fs
cli
ljmp
ret
cmp
and
decl
lds
cmc
daa
and
in
testb
mov
repnz
in
bnd
add
insl
jmp
sub
stos
push
psubq
xchg
out
and
pop
jmp
scas
lcall
mov
jg
mov
mov
mov
cwtl
inc
jg
mov
ds
jo
or
aaa
cmp
popf
mov
pop
sub
call
frstor
lahf
into
cld
out
popa
inc
enter
cmp
add
inc
jle
imull
adc
leave
fisubl
add
rolb
mov
cmpsb
icebp
mov
mov
mov
xchg
bound
xor
pusha
sbb
dec
pop
mov
pop
xchg
lods
pop
or
add
insl
lcall
je
jmp
pop
and
repnz
das
pop
ret
jecxz
mov
mov
and
or
imul
push
ficoms
cmpsb
popa
jo
lock
test
and
enter
xchg
aas
inc
popa
daa
cvtps2pi
mov
not
movsb
add
mov
mov
push
mov
dec
adc
inc
xchg
mov
out
inc
shll
inc
mov
imul
aad
lahf
lods
addr16
mov
or
inc
mov
add
jl
stos
pop
cmp
nopl
cmp
loop
movsb
jmp
iret
mov
sahf
sbb
sub
daa
add
ret
dec
ret
pop
cmp
xchg
repz
mov
pop
xor
cli
mov
imull
mov
pop
clc
js
fidivs
stos
ror
dec
dec
pop
stos
lds
mov
pop
addb
mov
into
mov
or
lods
mov
xchg
cs
aad
testb
mov
cs
movsb
mov
clc
mov
sub
fsub
fwait
jno
daa
add
mov
shl
jmp
push
jns
das
ljmp
push
adc
fistpl
or
xchg
das
xchg
inc
addl
sbb
add
mov
mov
xchg
cmp
mov
jp
not
cmpsb
sbb
js
cmp
adc
ja
lock
xchg
and
clc
loop
mov
fs
cs
sbb
mov
jecxz
mov
call
push
and
add
int3
je
cmp
outsb
mov
fbstp
jg
cs
xchg
das
lea
js
dec
jne
push
mov
push
rorb
xor
sub
mov
push
mov
mov
push
add
xorl
fnstcw
insl
testb
je
jbe
add
fisttpl
pop
add
and
cmp
imul
inc
rcrl
in
icebp
ret
or
push
mov
loop
test
shlb
ljmp
add
cs
insb
pop
jg
psubq
dec
push
and
mov
shrb
and
pop
out
das
xchg
lods
ret
mov
cwtl
mov
jo
in
inc
xchg
fnsave
icebp
xor
lds
sub
sbb
cmp
mov
fmull
repz
and
sub
mov
fidivrs
cwtl
subl
dec
add
or
sbb
jecxz
cltd
sbbl
push
jo
fistl
mov
arpl
loopne
pushf
mov
add
push
rcr
ds
jl
mov
daa
ja
out
ds
mov
inc
int3
push
pushf
xchg
bound
xor
mov
cwtl
jle
add
lcall
clts
lahf
sub
fdecstp
stc
ret
pop
dec
jecxz
arpl
cld
mov
xchg
xor
ljmp
xor
icebp
xor
xor
fucomp
and
pop
fsts
mov
and
xchg
sbb
push
push
enter
jo
lods
mov
hlt
fwait
aaa
lea
rdtsc
pop
jb
fiadds
ljmp
or
test
mov
mulb
pushf
ret
add
dec
dec
mov
imul
sub
out
xchg
ret
mov
dec
rol
aas
or
rcrb
push
add
js
int3
or
in
cs
pop
xchg
mov
jl
in
adc
lcall
xor
js
arpl
rcrb
jno
and
jmp
aad
add
or
jmp
pop
fsubr
fidivrl
dec
lahf
xchg
scas
jbe
dec
mov
frstor
into
dec
cmp
pusha
or
sub
and
mov
shrb
push
inc
pop
lret
push
aam
cmp
paddsw
sub
jmp
push
pop
mov
inc
add
sub
mov
sbb
dec
push
mov
pop
push
lahf
rorl
sti
in
xchg
add
lods
aaa
es
adc
push
jecxz
loope
pop
inc
mov
pushf
or
inc
cltd
and
movsl
mov
or
stos
fmulp
push
inc
mov
jb
dec
movsl
out
popl
sub
sbb
xlat
xchg
jne
push
shrl
es
push
in
es
inc
push
or
cmc
scas
repnz
and
iret
dec
nop
jb
mov
sbb
insb
lock
sub
pop
xchg
xor
in
cmpsl
sub
popf
sub
mov
xchg
and
push
dec
xchg
aad
jg
dec
in
push
mov
into
and
dec
in
xchg
sub
push
dec
jb
fwait
insl
movsb
aaa
fisubs
and
std
mov
and
fmulp
inc
ljmp
repz
push
sub
jle
stos
cmp
push
insl
movsb
pop
dec
xor
das
lock
xchg
cli
enter
movsb
les
out
mov
inc
lahf
in
mov
push
scas
fdivrp
jle
lea
stos
push
sbb
inc
imull
mov
mov
das
add
insb
mov
add
inc
mov
and
pop
mov
mov
inc
push
push
lods
cwtl
mov
jns
pop
bndldx
cltd
mov
test
push
push
push
call
inc
pop
or
or
dec
rorl
push
mov
dec
aad
sub
in
jns
jbe
pop
div
cli
inc
inc
ss
incb
in
dec
xchg
out
xorl
stos
push
cwtl
push
shll
inc
xchg
inc
push
arpl
dec
pop
push
sbb
jbe
adc
out
lret
cs
xrelease
jae
cwtl
aad
icebp
mov
mov
pop
push
jbe
pop
inc
lahf
sbb
cmp
xchg
lldt
push
inc
mov
mov
xorb
dec
mov
aad
xchg
stos
cmp
int3
jne
sub
sbb
out
cltd
nop
in
rcl
fs
movsl
and
pop
movsb
jbe
hlt
and
pop
pop
test
jp
cwtl
out
out
xor
cmp
insb
push
cmp
shl
dec
lods
xchg
je
inc
jl
jg
shlb
ret
jne
loop
and
out
cmc
mov
jg
mov
shr
popa
xor
jp
pop
scas
cmp
dec
pop
rcrb
fistps
scas
add
sbb
mov
and
loop
cli
adc
ds
jae
fmulp
dec
ss
mov
xchg
pop
popf
and
sbb
jbe
cmp
jb
push
cs
sbb
subl
mov
mov
jl
rorl
xchg
mov
loope
push
dec
aad
jnp
mov
pop
mov
mov
js
ret
js
imul
xchg
mov
outsl
testb
int
mov
ljmp
call
lcall
test
aaa
mov
sbb
sbb
mov
push
cmpsb
sub
idiv
xchg
inc
cmpl
lcall
popf
sbb
inc
dec
lcall
mov
mov
in
cwtl
mov
pop
xchg
dec
pop
push
rcrb
test
sub
out
fstpt
cltd
mov
les
jg
sahf
fwait
je
or
mov
insb
cwtl
movsb
sub
xlat
adcb
es
adc
xchg
sbb
inc
fidivrs
adc
sub
imul
data16
mov
out
shll
dec
cli
adc
cmp
rcrl
dec
fistpll
push
in
push
mov
push
jno
sarb
iret
js
mov
pop
mov
push
orb
add
pop
cmp
insb
fidivrl
leave
enter
dec
mov
jo
xor
pop
pop
pandn
cs
fwait
ja
outsb
mov
jle
fimuls
pop
loop
lods
inc
push
jl
cli
fldl
jns
or
loope
leave
int3
sbb
cmpsb
sub
je
inc
mov
outsl
loop
inc
gs
or
rcrb
inc
pushf
xchg
divl
out
loop
ja
aas
mov
push
dec
push
aaa
or
jge
sbb
mov
xor
loope
icebp
call
lock
je
test
aas
insl
jge
movsl
aas
push
inc
repz
cmp
frstor
pusha
jne
sub
pop
adc
jl
or
add
jo
cmpsl
stc
add
pop
push
jbe
decb
sub
jbe
stos
js
mov
pushl
inc
out
add
mov
inc
and
popf
sub
mov
fimull
cmp
push
loop
fwait
loope
push
dec
pop
out
xor
cmp
adc
mov
hlt
leave
pop
sub
clc
sbb
inc
out
cmpsl
ret
bound
xor
push
inc
pcmpgtb
rcll
ss
add
add
pop
push
ficomps
lahf
jg
fbstp
push
pop
loopne
clc
cmp
jbe
cmp
pop
ret
ss
sub
sub
add
ja
nop
popa
aad
mov
call
mov
aad
sbb
rcll
jae
add
lea
add
inc
mov
mov
sub
sbb
sub
sbb
adc
pop
rorb
mov
xor
lods
cwtl
push
into
roll
jg
addl
xchg
jmp
pusha
sbb
xchg
iret
dec
xor
add
mov
sbb
push
test
into
mov
inc
ret
and
xor
push
popa
dec
inc
cld
adc
xor
scas
push
ljmp
cmp
mov
cmp
rclb
inc
add
mov
pop
outsb
push
xor
ss
movsb
fdivrs
jg
mov
test
lcall
mov
loope
jb
adc
mov
jae
fs
mov
test
jns
inc
ja
mov
subb
pop
xchg
fisttpll
ds
call
hlt
pusha
pop
cli
jo
push
mov
cltd
sub
pop
cmp
inc
imul
sub
mov
fsubs
and
sbb
fimull
push
daa
into
push
mov
je
mov
in
mov
jmp
jbe
pop
xchg
loop
popa
clts
cwtl
data16
push
andl
iret
xchg
fnsave
add
lret
movsl
jge
mov
dec
jns
xchg
push
in
sti
gs
mov
shrl
jp
outsb
mov
lret
dec
mov
int
jg
inc
jae
xor
repnz
cld
dec
cmp
rorl
sub
mov
jmp
adc
movsl
pop
cmp
je
test
jge
push
mov
call
lods
mov
push
jno
cmp
cld
xlat
gs
pop
inc
mov
icebp
out
movsb
pop
mov
test
mov
adc
inc
movsb
iret
lods
mov
lock
shll
adc
adc
jecxz
xor
pop
push
mov
mov
and
adc
shlb
pop
roll
ss
and
mov
int
adc
inc
in
call
jg
repnz
cmpsl
int3
lods
arpl
cmpsl
pop
repnz
mov
repnz
xor
jl
in
xor
es
call
adc
pop
dec
incb
adc
dec
pop
jl
pop
mov
imul
adc
out
pop
cld
pop
rolb
add
xor
and
pop
stc
imul
jp
mov
pop
cmp
pop
dec
test
cltd
das
push
jg
loop
sub
and
xorb
sub
adc
pushf
mov
addl
pop
or
fbstp
cmp
sbb
lea
pop
push
mov
mov
sub
daa
inc
movsb
js
add
stos
stos
xchg
repz
cmp
lea
idivb
addb
xchg
movsb
leave
xor
adcl
pusha
sbb
fimull
adc
push
inc
mov
sub
scas
pop
jmp
fldl
inc
pop
xchg
or
ljmp
pop
cwtl
mov
dec
xor
popl
aaa
push
pushf
outsl
mov
arpl
call
jge
loop
push
xchg
mov
and
pop
mov
in
int3
fists
imul
jo
pushf
xor
lret
sbb
dec
and
push
xchg
xor
push
bound
mov
push
xchg
test
stos
adc
mov
add
call
and
adc
sarb
inc
xchg
fidivl
je
rcr
rol
dec
pusha
ss
dec
test
and
aad
inc
or
scas
dec
insb
pusha
stos
rorl
ja
fisubl
push
les
pop
cmp
adc
mov
test
pop
mov
mov
movsl
sbb
add
or
dec
mov
notl
mov
mov
mov
lods
repnz
push
xchg
test
daa
into
pop
sbb
cs
adc
aam
xor
ds
mov
mov
jnp
hlt
cmp
add
mov
mov
mov
and
outsb
dec
mov
jp
adcl
fldenv
sub
test
pop
mov
and
cmp
xchg
ss
lock
cmpl
aam
cld
or
mov
dec
jmp
cld
inc
aam
jg
mov
or
inc
adc
jb
push
mov
out
lock
pushf
pop
push
je
mov
mov
xchg
jno
cmpsl
push
in
jae
add
and
jbe
idivb
pop
aas
insl
pop
sub
jecxz
sbb
gs
push
clc
popa
sub
pop
and
ret
test
je
jp
int3
stos
mov
and
sbb
mov
inc
addr16
pop
stos
ds
lret
int
mov
push
into
push
mov
add
lock
adc
mov
stos
pop
inc
inc
or
ss
popa
loope
push
jecxz
push
mov
pop
hlt
mov
dec
sbbb
mov
pop
inc
jg
loopne
xchg
mov
fmuls
stc
sahf
popf
sbb
push
pop
jmp
pop
popa
daa
mov
leave
sub
mov
and
pushf
out
loop
addr16
mov
js
cld
test
clc
inc
mov
pop
add
mov
data16
inc
jnp
popa
mov
sub
or
inc
jne
insb
mov
adc
popa
push
xchg
in
out
mov
xor
fnstsw
les
mov
mov
inc
sub
pop
fdivrs
rclb
adc
jl
in
mov
push
popf
dec
mov
dec
xchg
add
addb
rolb
dec
push
push
imul
pop
mov
das
les
push
fs
adc
lahf
adc
arpl
imull
aas
sbb
lods
push
mov
in
xchg
xchg
scas
aaa
pusha
mov
and
dec
cmp
rcrb
and
jp
cmpsl
mov
and
ficompl
iret
mov
scas
call
rorb
adc
aad
or
imul
adc
addr16
jmp
jnp
mov
clc
and
jmp
cli
xor
mov
xor
pusha
dec
les
sbb
or
and
std
push
add
clc
pushf
mov
add
add
out
addr16
adc
sub
pop
movsl
and
pop
lods
ret
cmpsl
aas
roll
jge
loop
xchg
ljmp
in
iret
icebp
xor
and
sti
adc
xchg
je
and
subb
jl
hlt
mov
rorl
mov
inc
cmp
in
js
mov
rcrb
add
test
mov
repnz
push
pushf
call
jo
and
scas
adc
adc
dec
mov
mov
in
cmp
arpl
rorl
fs
out
mov
or
pop
cmp
mov
dec
sbb
inc
pop
fs
push
in
sbb
imul
hlt
fisubs
dec
push
add
mov
pop
inc
xchg
or
addl
out
sbb
cmp
and
inc
lods
pop
mov
sub
dec
out
das
enter
xchg
adc
out
pop
jl
jg
xchg
dec
call
cmp
mov
xor
mov
pop
testb
fsts
pushf
dec
lods
add
mov
sti
outsb
sub
sbb
or
insb
inc
mov
and
clc
in
test
jg
lods
mov
popa
jmp
xchg
mov
adc
jnp
icebp
sub
fdivrp
les
add
mov
fwait
push
xchg
xor
stc
arpl
ret
rcr
inc
mov
sub
fsubrl
push
pop
test
jb
mov
ficoms
bound
fisubrs
leave
dec
mov
gs
arpl
and
xchg
es
in
jno
pop
mov
add
clc
add
inc
cld
or
mov
dec
in
xchg
aad
lock
fsubrp
cli
mov
rcr
inc
cmovs
adc
push
ja
fdivl
cmp
xor
push
outsb
xchg
sub
xchg
push
fmull
dec
mov
xchg
outsl
cmp
call
int
dec
out
add
inc
cld
sub
ljmp
stos
and
in
pop
mov
test
jb
gs
stc
leave
jae
add
lds
xchg
test
leave
jae
lea
repnz
out
shll
mov
mov
iret
pop
ds
mov
jbe
dec
sbb
popf
movsl
inc
push
testl
mov
push
je
lahf
nop
cmc
div
ret
jae
adc
sbb
mov
pop
adc
adc
cld
or
sub
adc
pop
pop
push
pusha
ljmp
and
mov
lods
sub
mov
mov
loop
sbbb
sbb
push
sbb
gs
inc
push
imul
iret
imul
or
jg
adc
adc
mov
mov
aas
cs
aad
out
sbb
lods
shll
decb
push
dec
cmp
outsb
mov
add
dec
mov
out
mov
popa
adc
cmp
scas
sub
loope
jne
push
ds
jp
or
out
dec
xchg
push
imul
or
icebp
stos
pop
add
dec
bound
adc
addr16
ljmp
jg
clc
pop
inc
sbb
mov
dec
in
mov
and
inc
lods
mov
jge
inc
dec
cmp
mov
pop
lods
xchg
loop
test
ret
jge
and
lea
imul
repz
push
jae
add
dec
fldenv
lds
rcrb
stos
rcll
es
push
int3
cmp
pop
xor
ror
jg
arpl
mov
cwtl
push
sub
std
pop
das
pop
mov
cs
in
in
mov
mov
or
and
repz
scas
add
adc
jne,pt
stc
shll
push
lods
das
sti
and
adc
inc
imul
sarb
pop
sbb
mov
and
lock
mov
xchg
dec
repnz
clc
adc
xchg
jle
in
cli
adc
lods
lods
sbb
leave
adc
dec
enter
add
mov
pushw
fnstcw
leave
enter
mov
aad
popf
mov
xchg
shlb
cs
leave
xchg
push
add
dec
shrl
cmp
jbe
add
push
xlat
sub
bound
mov
gs
scas
xchg
aam
lret
xchg
pop
mov
aas
add
adc
pusha
sbb
jae
sub
jno
das
xor
stos
lret
cmp
xlat
xchg
stc
add
or
popa
push
dec
cmp
insl
sub
insl
out
ja
lcall
jmp
fsts
jl
jns
outsl
jno
daa
mov
xchg
push
pop
fs
rep
mov
push
pop
test
pop
xchg
aam
or
xchg
jo
subb
adc
sarl
sub
sbb
mov
pop
lret
or
aas
sahf
divb
into
mov
dec
mov
call
rcrl
xor
inc
mov
fdivrl
pop
loopne
or
pusha
cmp
cmp
mov
fisttpll
sti
or
pop
cmp
scas
mov
xchg
sub
lea
sahf
xor
cld
push
sahf
dec
sub
add
fsubs
daa
mov
lret
orb
sbb
loopne
rcr
sbb
inc
pushf
adc
cwtl
test
jp
sahf
mov
mov
and
test
and
out
pusha
fldenv
pop
mov
hlt
inc
sub
pop
push
sbb
fs
cmc
mov
mov
bound
cmp
out
pop
sbb
ja
xchg
cwtl
nop
mov
cld
mov
das
xchg
jae
inc
push
jo
and
mov
test
or
inc
icebp
pop
into
mov
cmpsl
and
mov
jmp
movsb
cmpl
enter
mov
xchg
ret
shll
fistpl
ret
inc
mov
mov
lret
push
mov
sahf
dec
lock
push
fistps
dec
inc
fimuls
adc
sbb
mov
test
popl
and
and
cltd
daa
jle
pop
gs
sahf
bound
jae
add
cmp
and
enter
mov
mov
fst
mov
call
cmp
outsb
test
mov
push
sub
cltd
movl
popf
in
inc
aaa
jle
clc
enter
mov
cmp
lret
mov
mov
sub
or
insl
jae
loopne
and
dec
xchg
repnz
js
loopne
movsb
movlhps
mov
dec
shl
lcall
mov
outsl
mov
out
pop
inc
mov
cmp
sub
into
inc
test
fdivs
ficomps
jl
std
adc
dec
inc
int3
jg
nop
aaa
das
inc
mov
lea
mov
loopne
pop
daa
insl
jno
ss
pop
jae
or
gs
push
test
pop
jns
cli
and
push
int3
loop
xchg
and
adc
std
call
push
shl
xor
sbb
loope
cmpsl
out
inc
push
adc
stc
mov
mov
sbb
cmpsl
xor
mov
cltd
mov
lcall
dec
jnp
aaa
adc
xor
lock
lcall
pushf
xlat
movsl
fcmove
push
rcl
xchg
bound
mov
mov
mov
mov
inc
jmp
rcl
pusha
popf
nop
scas
xchg
mov
add
jge
pop
push
outsl
sbb
lea
in
and
push
vmovaps
out
and
int
rcrb
xor
xchg
shrl
cmp
pop
jmp
pop
dec
xchg
xor
adc
push
dec
js
sbb
iret
mov
daa
insl
scas
psrad
loope
clc
std
leave
inc
cmp
clc
jge
shlb
jp
add
pop
pop
mov
pop
jle
push
push
mov
xor
add
mov
aas
cmpsb
mov
mov
ss
sub
bound
xchg
sub
cltd
cmp
add
push
dec
push
add
sbbb
addb
mov
mov
fistps
addb
jbe
pop
jnp
xor
mov
in
xchg
pop
jl
and
into
push
dec
paddq
and
aad
push
js
pop
pop
push
push
mov
repnz
aam
pop
push
push
or
inc
xchg
and
repz
xchg
jnp
cmp
sub
mov
push
sub
cs
dec
outsb
ret
dec
xchg
test
adc
popa
xchg
mov
and
das
call
pop
sub
xchg
pushf
aad
xchg
out
bound
mov
outsl
ret
in
jg
mov
ja
dec
in
add
sti
xchg
and
mov
cmpl
es
mov
movsl
in
mov
jl
adc
xchg
lods
arpl
fpatan
push
and
rcl
dec
enter
ja
daa
faddl
push
inc
adc
adc
mov
notl
mov
cmp
adc
mov
cmc
pop
loop
sbb
xor
mov
mov
fcmove
push
dec
pop
int
xlat
popf
lret
mov
addr16
mov
out
adc
mov
and
mov
xchg
mov
jns
mov
loop
sarl
sub
or
test
popf
ret
pushf
imul
jmp
dec
cmpsb
push
mov
sbb
inc
in
add
leave
inc
dec
pop
in
fisubl
pop
repnz
ds
dec
cmp
lods
push
shll
push
add
pusha
sub
sbb
add
add
or
hlt
dec
test
lods
lret
es
sbb
in
pop
xor
mov
sti
dec
es
lods
call
inc
push
mov
dec
in
xchg
arpl
sti
inc
lcall
xchg
push
and
shrb
sbb
and
mov
xorb
lock
icebp
clc
cli
pop
das
xlat
cld
loope
gs
cmp
dec
fisubrs
insl
push
add
fstps
in
push
into
add
cmc
cmp
jbe
fistl
adc
and
and
imul
call
mov
jg
xchg
jmp
leave
cmp
inc
rclb
add
test
aad
ljmp
test
ss
clc
xchg
mov
xor
ret
pop
adc
fstl
fs
int3
lds
jno
movsb
js
stos
dec
mov
add
fisubl
filds
pop
stos
fmull
mov
jb
pop
imul
out
out
mov
push
dec
jnp
loop
mov
cwtl
int3
fldl
test
test
push
and
mov
inc
pusha
add
sub
js
xchg
jno
push
xchg
mov
loop
jbe
and
jnp
inc
inc
xchg
add
aaa
fildl
test
test
xor
xor
xchg
repz
jbe
mov
stos
out
ja
dec
bound
leave
push
pop
mov
xor
cmp
cmp
mov
stc
sub
xchg
mov
jecxz
sub
add
and
mov
add
jg
inc
ret
fsubs
pop
lods
aam
lcall
pop
dec
or
sub
stc
or
inc
adc
add
ja
loopne
jo
call
inc
add
push
lods
shrb
or
out
test
jno
sub
add
jle
mov
das
icebp
lock
push
out
or
inc
push
mov
xchg
inc
orb
push
push
xchg
sbb
push
adc
dec
mov
mov
pop
xor
cmp
mov
call
mov
jge
mov
inc
inc
mov
nop
dec
fcomps
test
dec
into
mov
fnstsw
arpl
ret
mov
out
sbb
inc
rcll
and
dec
push
push
call
or
inc
adc
pop
adc
sub
out
in
aad
sbb
hlt
xchg
xchg
pop
mov
lret
repz
cli
popa
addr16
push
repz
mov
jnp
xchg
inc
fmul
ljmp
int
fsubl
orb
fsubrl
lahf
invd
mov
sbb
sub
stos
mov
sbb
inc
xor
push
test
push
bound
push
hlt
ja
inc
pop
jle
repnz
mov
repnz
push
sbb
adc
fdivrl
pop
mov
push
push
ss
lock
scas
pop
loope
std
cmc
and
ja
rorl
cld
mov
xchg
out
dec
sub
and
adc
int
pop
in
mov
cmpsl
mov
pop
mov
loop
in
lret
leave
mov
nop
xlat
sub
ficompl
into
in
add
cmp
and
rcrl
xor
or
testb
and
xchg
mov
xchg
xchg
outsl
jg
push
or
jnp
pusha
dec
sbb
fdiv
shr
cmp
in
ror
xchg
and
xchg
das
mov
mov
scas
cmc
cmp
xchg
push
test
inc
mov
inc
out
or
mov
mov
mov
xchg
std
mov
pop
stos
ds
xor
lcall
xor
in
fistps
and
pshufw
jb
shlb
int3
add
xor
lahf
xchg
push
mov
xchg
icebp
jnp
push
lods
mov
and
dec
es
jb
pop
fimull
cltd
mov
jbe
mov
pop
fsubr
add
mov
push
hlt
data16
gs
aaa
mov
and
movsb
and
inc
sub
xchg
cmp
lea
loop
leave
sti
add
shrb
and
bound
cmc
rol
mov
inc
lea
ret
xor
fwait
lea
repnz
or
cli
push
cs
or
outsb
lret
fstp
fwait
cli
mov
in
out
ror
ja
mov
cmc
mov
xchg
cltd
push
mov
or
mov
flds
stc
push
inc
or
mov
lea
test
jae
pusha
js
adc
xchg
out
es
cmp
pop
add
dec
push
xlat
arpl
or
fwait
dec
call
xchg
js
and
jo
rolb
daa
rsm
jle
cmpb
or
mov
in
dec
add
arpl
adc
call
sub
jbe
add
popf
dec
sbb
xor
mov
cmp
push
icebp
je
aaa
insl
pop
repz
push
pop
addr16
xchg
das
std
test
orl
rclb
dec
les
dec
dec
dec
mov
hlt
mov
js
das
inc
leave
sbb
int3
popw
mov
scas
icebp
imul
push
lds
mov
add
sub
or
fnsave
addr16
pop
lcall
push
mov
rcrl
fwait
out
shrl
out
cmc
sub
inc
or
pusha
pop
mov
jb
adc
and
cltd
ret
std
fs
repnz
movsl
xchg
or
les
in
inc
das
cmp
faddl
and
orb
fimuls
das
push
mov
lahf
lret
bnd
fadds
movsb
lea
sub
clc
lods
sbb
jnp
daa
loopne
pop
push
int
jmp
fisttps
adc
jae
mov
repz
pop
data16
inc
add
js
inc
pop
mov
ljmp
pop
aam
and
pop
test
imul
pop
enter
call
push
movsl
sbb
movsb
data16
mov
pushf
pusha
jg
add
test
jne
dec
fstpl
sub
inc
shrl
out
push
push
xor
cmpsl
push
call
sub
insb
mov
fimull
ljmp
scas
movb
enter
mov
fnsave
testb
and
std
sub
js
xlat
sub
push
mov
pushf
int3
cltd
cs
fldcw
shll
and
mov
pop
pop
out
inc
and
subl
mov
jp
sbbl
adc
sbb
jae
push
and
out
xchg
iret
mov
mov
sub
adc
inc
pushf
cmpsl
fnsave
add
mov
mov
int3
adc
repz
mov
ss
xchg
xor
jo
push
and
pop
repz
jns
movsl
call
sub
mov
icebp
inc
adc
fidivl
cmpsb
cmp
push
cli
aad
dec
or
mov
je
dec
add
cmp
jg
rclb
mov
pop
inc
mov
mov
stos
pop
mov
cmp
dec
jmp
lock
dec
dec
lret
and
mov
lcall
mov
mov
in
push
push
cmp
insl
lds
decb
inc
shll
jo
inc
outsb
fldt
daa
inc
inc
xchg
mov
pop
leave
cld
dec
or
int
pop
mov
jg
adc
outsl
repz
test
iret
pop
xchg
aaa
add
add
add
xor
xchg
xor
dec
jno
mov
test
and
and
data16
xor
sub
cmp
cmc
imul
sbbl
adc
cmp
jno
cli
in
inc
test
or
dec
mov
cmpsl
insb
enter
pop
pop
adc
push
addr16
adc
loope
push
mov
pushf
jb
xchg
fidivl
ret
dec
pop
mov
push
add
jecxz
call
jo
and
inc
mov
in
outsl
jne
out
sbb
cli
test
push
fwait
xchg
pusha
mov
xor
mov
mov
imul
or
xor
or
pushf
add
and
add
test
aad
cmc
dec
shll
inc
mov
int
scas
ficompl
mov
fcmovnbe
aad
inc
insb
aaa
imul
fcmovnu
or
jae
adc
cs
xor
fucomi
xor
int
jno
jbe
cmp
imul
mov
aaa
mov
ljmp
bound
inc
inc
data16
mov
and
insl
addl
push
leave
lods
mov
roll
mov
mov
rcr
sbb
adc
stc
cmp
fistl
xchg
sbb
loopne
sarl
fmul
dec
xor
inc
xchg
in
adc
mov
sbb
mov
int
cld
adc
sbb
arpl
and
movsb
js
cwtl
leave
fiadds
mov
mov
cmc
and
xor
sub
das
xchg
push
xchg
nop
pop
cmpsl
fisubl
xor
add
cmpsl
jmp
in
xchg
ss
test
xor
mov
shlb
clc
pop
data16
and
and
lcall
or
lods
xor
movsl
xchg
pop
dec
adc
xor
mov
push
xchg
popa
mov
dec
out
and
scas
out
xor
and
aad
push
jle
leave
mov
inc
insl
rcrb
or
mov
inc
scas
push
or
or
and
out
daa
loope
fstps
xchg
stos
jg
cmpl
faddl
or
jb
orb
jle
sti
pusha
loopne
mov
loop
xchg
aaa
out
xor
dec
test
adc
xchg
outsb
push
leave
cmp
aas
into
push
fnsave
test
out
add
cwtl
dec
test
aad
or
negb
daa
push
sbb
pop
paddsw
cltd
out
repz
sbb
pushf
ljmp
inc
ljmp
adc
mov
cld
ret
inc
xor
or
fistpl
mov
dec
loope
in
jg
sub
and
adc
mov
ss
xchg
movsw
out
es
or
mov
xlat
xchg
pop
adc
push
or
inc
dec
loopne
xchg
insb
cmc
or
les
int
lods
sbb
dec
dec
cmp
std
shrb
fucomi
adc
xor
pop
xor
shl
pop
into
dec
add
es
stos
xor
xchg
subb
sbb
and
jae
sbb
repz
xor
orl
cld
cld
fidivrs
pop
scas
xor
and
test
push
loopne
rcrl
add
add
xchg
nop
sub
movsl
pop
fsubs
lret
lcall
mov
mov
xorb
cmp
lret
add
xchg
push
shrb
mov
xchg
or
jge
lds
push
xor
xor
outsl
jae
les
ret
push
dec
jne
add
mov
and
int
add
shll
sub
dec
pop
jmp
add
inc
and
xor
jg
sbb
inc
test
insb
jbe
lods
shrb
mov
scas
lcall
jg
popa
xor
out
insl
pop
jmp
mov
xor
repz
fildl
in
test
and
pop
inc
add
pop
popl
jp
pop
pop
je
cmpsb
jne
stc
xchg
stos
push
dec
sbb
adc
pop
lods
mov
sub
xchg
adc
bound
sbb
lret
push
repz
cmp
xor
jmp
sub
imul
pop
ljmp
xor
jnp
cmpb
sbb
aas
sbb
fs
push
mov
dec
or
mov
xor
mov
mov
ja
jae
mov
mov
in
cmc
jns
push
inc
notl
sbb
stos
out
xor
loopne
pop
jg
pop
push
andb
pop
shll
mov
add
pop
jecxz
mov
inc
andb
mov
mov
fcmovnu
subb
js
enter
stos
les
pop
jp
jbe
cmp
xadd
adc
das
pop
loope
fisttps
pop
test
jnp
leave
call
mov
and
ljmp
or
cwtl
jnp
test
mov
jno
mov
dec
insb
lds
sbb
adc
mov
pop
jnp
or
pop
mov
jge
int3
sbb
ret
cli
imul
loope
add
xchg
repz
mov
ret
ja
aaa
fdivr
jg
bound
pop
lods
dec
xlat
popa
mov
jbe
sbb
mov
and
test
mov
aas
out
stos
sbb
fcomps
sub
lcall
cmp
cmpsb
dec
jg
aaa
pop
pop
mov
pop
fcomip
push
ret
dec
sub
scas
mov
movsl
call
pop
fstps
cmp
lcall
push
add
inc
fisubs
sbb
int3
movsl
sbb
sbb
out
mov
movsl
fsts
lahf
mov
inc
sti
mov
adc
pop
push
sub
insb
mov
push
imul
sti
cmp
push
cmp
jge
call
dec
icebp
mov
pusha
mov
test
in
stos
mov
fidivs
add
mov
insb
xor
jb
idivl
test
roll
aam
lock
sahf
dec
sahf
adc
in
in
bound
xchg
push
pushf
call
mov
sbb
and
mov
xor
fisttpl
imul
cmpsb
outsl
xor
mov
es
pop
lods
aaa
orb
or
xlat
dec
jns
mov
jb
negl
sub
lock
or
cltd
std
mov
add
cmpsb
lcall
dec
dec
dec
mov
enter
out
xchg
nop
cld
shlb
jecxz
jne
or
sub
mov
cmc
popa
inc
into
in
in
mov
and
jo
cltd
cmc
add
call
out
or
cld
es
popa
adc
push
mov
movsb
inc
aas
cmpsb
inc
mov
insl
push
fisttpl
int
dec
xor
loopne
add
outsl
xor
push
sbb
mov
sbb
hlt
push
jge
or
pop
fists
out
adcl
lds
nop
repz
xorl
jae
divl
jecxz
sub
xor
imul
outsb
push
push
loope
clc
fwait
xchg
jl
movsl
lock
xchg
sub
pusha
mov
adc
sub
js
push
je
cmp
mov
mov
mov
or
jae
aas
inc
movsl
xlat
iret
negl
arpl
pop
xchg
xor
push
pop
stos
jmp
dec
pop
mov
or
into
pop
fwait
ljmp
clc
pushf
ret
pop
push
and
in
out
xchg
pop
pop
daa
mov
jb
js
fdivrs
xchg
repnz
and
gs
mov
int
xchg
mov
lea
xor
adc
xchg
xlat
mov
stos
xchg
cmp
pushf
std
call
jmp
test
push
insl
mov
cmc
ljmp
call
aam
movsl
push
inc
jmp
shl
jns
adc
push
mov
movsb
inc
cmp
dec
and
or
sub
pop
movsl
out
sbb
bound
xor
sahf
dec
inc
inc
pop
idivb
test
addr16
out
push
push
pushf
xchg
daa
mov
jb
jl
sub
dec
shrb
cmp
mov
inc
jne
enter
fbstp
dec
cltd
out
and
fs
dec
xchg
mov
fstpl
outsl
test
jle
movsb
fnstsw
or
mov
fsubrl
ret
repnz
movsl
fdivrs
pop
lea
stos
jb
pop
pop
sahf
cmc
into
dec
mov
push
mov
call
mov
fistpl
pusha
or
push
push
cltd
sub
mov
fstpl
ljmp
or
xchg
mov
pop
fsts
and
outsl
insb
leave
add
xchg
or
and
mov
and
in
shrl
pop
mov
lea
jmp
jno
scas
mov
mov
inc
fcmovbe
fnstenv
mov
sahf
cli
sub
or
lcall
lds
in
cmp
mov
rolb
push
hlt
test
jge
sbb
fbstp
mov
pop
imul
xchg
pop
jmp
sub
cli
pop
push
push
hlt
outsl
into
sbb
pop
outsb
adc
mov
shrl
fimull
jl
out
mov
neg
out
lea
cmpsb
jge
bound
in
add
or
jno
jecxz
cmp
fbld
in
sbb
andb
enter
or
jle
arpl
push
push
mov
push
xor
test
mov
jne
sbb
int
icebp
and
out
lret
inc
push
fstpt
out
lods
pop
daa
xor
iret
push
pop
inc
jle
xor
es
mov
mov
push
push
fdivrl
mov
lret
scas
inc
add
push
mov
mov
dec
pop
pop
adc
test
push
jl
cmpsl
or
pop
cmp
mov
and
notb
push
cmovnp
call
xor
nop
nop
call
cmp
push
mov
iret
inc
push
cmp
cmp
sarb
and
jns
pop
dec
stos
pop
test
and
ds
lret
push
inc
sub
imul
stos
pop
jne
data16
xchg
loopne
data16
mov
jne
fisubl
or
or
dec
imul
cmpxchg
dec
xlat
and
test
xor
pop
stc
cmovge
cmpsb
cmpsl
call
mov
addr16
sti
rclb
push
adc
in
outsb
inc
fsubs
clc
cwtl
xchg
add
aad
gs
arpl
push
sbb
adc
clc
sub
pop
sbb
adc
add
jb
jmp
mov
inc
outsb
pop
lcall
js
dec
and
dec
mov
jbe
lret
fistl
pusha
ret
rclb
push
mov
xchg
add
outsl
xchg
inc
dec
mov
loopne
or
mov
in
dec
lea
pushf
cmpsl
inc
leave
fimuls
icebp
clc
cmpsb
add
cmp
sbb
mov
in
xchg
ficoms
cltd
jno
cmp
mov
push
fstpt
adc
pop
ja,pt
call
xchg
sbb
in
out
cmpsb
and
push
cs
cmp
and
pop
movsb
jecxz
shl
adc
xchg
fidivl
imul
push
out
or
or
shrl
lret
add
or
in
adc
adc
or
pop
or
mov
movsb
cmp
stc
mov
add
or
jg
xor
int3
rorl
mov
push
mov
push
push
fsubrs
mov
pop
cmpl
decb
xchg
xor
aad
call
xor
xchg
sub
daa
sbb
jle
or
inc
mov
and
ja
cmpsl
xor
clc
cld
dec
inc
push
pop
testl
imul
mov
out
fistpl
lret
adc
jnp
mov
xor
fsubrl
push
mov
jne
xchg
fsubl
cmc
idiv
lcall
wrmsr
dec
push
xor
call
mov
fldt
popf
sub
out
lea
jae
sahf
ret
fdivs
cltd
xchg
insb
call
and
dec
mov
insl
inc
mov
cld
popa
scas
inc
pop
adc
stos
add
test
out
push
mov
jo
jp,pn
mov
sarb
or
je
hlt
and
jbe
jnp
aaa
popa
rolb
adc
sub
xchg
push
and
and
loope
push
mov
and
rcrb
cmp
enter
stos
mov
add
ret
sub
stos
cmp
jp
aad
mov
pop
ljmp
adc
out
mov
test
jp
fwait
push
movsl
mov
mov
mov
push
enter
rcll
or
insb
mov
push
jns
dec
xor
je
push
jle
ss
gs
adc
adc
inc
pop
movsb
rcrl
repz
inc
pushf
mov
xor
and
ss
aas
push
nop
jb
push
hlt
or
inc
ret
sbb
lods
sbb
fs
dec
fstps
aas
arpl
adc
adc
dec
inc
lea
movsl
arpl
jmp
sbb
rcr
adc
dec
dec
push
mov
jle
cmpsl
stc
loop
repnz
xchg
stos
test
xchg
dec
out
mov
inc
add
pop
pop
cmp
sub
xchg
xchg
mov
mov
jo
lods
lret
xlat
inc
pop
lea
and
enter
stos
clc
mov
test
cs
out
xchg
inc
sub
xor
sahf
pop
xor
pop
pushf
mov
data16
mov
mov
or
pop
fiadds
cmp
lods
test
pop
cmp
leave
fdivl
and
xor
mov
subl
mov
pusha
inc
cwtl
pop
dec
inc
push
xchg
mov
sbb
mov
int
jle
cmp
sbb
scas
mov
roll
fsubr
ljmp
sbb
mov
lret
arpl
xchg
pusha
mov
addr16
jl
jne
xchg
mov
xor
xchg
daa
sub
push
add
or
jg
mov
push
dec
ja
push
pop
decb
enter
and
jbe
inc
cwtl
cmp
cltd
adcl
rorl
xor
fidivl
out
clc
lock
popf
pop
pop
mov
ja
lods
dec
or
cmp
mov
ficompl
ror
and
mov
lea
mov
ret
rclb
lret
push
push
pusha
into
sub
fistpl
mov
xchg
ja
out
gs
iret
mov
jnp
testl
call
xorb
adc
mov
gs
sub
sti
fnstsw
jg
flds
movb
inc
mov
bound
outsb
cwtl
xchg
add
pop
or
cmc
mov
mov
dec
mov
xor
test
les
cmp
ljmp
inc
jl
fsubl
jecxz
mov
inc
jle
xchg
xchg
jnp
push
adc
insl
cmp
je
neg
and
xchg
adc
mov
rcll
ror
push
cmp
dec
call
ret
or
test
sub
icebp
icebp
negl
dec
xchg
pushw
adc
hlt
aaa
jecxz
icebp
call
dec
testb
cmpsb
mov
mov
mov
fs
dec
insb
jmp
popa
fs
aam
loopne
idivl
jnp
icebp
movsl
popf
xchg
cli
ret
sub
shll
jb
cmpsb
jno
fwait
xor
aam
mov
cltd
hlt
mov
adc
mov
or
mov
push
add
shl
loopne
gs
and
mov
bound
fwait
jnp
sahf
in
dec
or
fstpt
das
pop
inc
push
pop
scas
jae
and
xchg
or
nop
enter
dec
fadds
mov
in
push
rolb
jg
or
mov
pop
mov
ja
int3
lret
sbb
std
and
mov
push
into
out
dec
mov
imul
popl
mov
repz
ja
mov
xchg
insb
sbb
mov
mov
cmp
ljmp
aam
sbb
loopne
push
pop
lock
sbb
loope
sub
mov
xorb
stc
xchg
inc
int3
movsl
out
dec
xor
inc
sub
data16
pop
repnz
sbb
data16
mov
clc
xchg
sub
and
cmp
bound
or
mov
cs
pop
cmpsl
lds
sahf
cwtl
pop
add
aad
dec
add
int3
out
cmp
inc
enter
xor
cmp
loopne
sbb
add
cmp
lret
popa
xchg
mov
ret
cs
mov
pop
jmp
xchg
add
fmul
jl
pop
leave
fsubl
aas
shlb
sbb
pop
repz
add
xchg
daa
add
dec
and
aas
je
fstl
pop
sbb
push
icebp
ja
xchg
mov
cmc
jbe
pop
and
stos
jns
mov
test
push
cmp
or
addr16
test
mov
popf
in
push
xor
dec
xchg
loop
call
rorl
mov
daa
xor
or
daa
pop
and
dec
push
arpl
cmp
or
lea
bound
enter
push
dec
xchg
or
imul
add
pop
xor
cs
das
push
bound
cmc
xor
mov
xor
arpl
popa
aad
mov
movsb
pop
mull
sub
shll
or
jnp
fisubs
sbb
cmp
sahf
jl
pop
pop
je
push
push
or
inc
add
stc
cs
xchg
aaa
jmp
in
xchg
inc
leave
repz
sahf
pushl
aaa
repz
aad
pop
jae
shrb
lock
cltd
add
icebp
xchg
hlt
test
sub
cmp
inc
es
int
dec
fcomps
or
clc
ret
movq
push
push
in
ja
or
sbb
mov
add
enter
jl
jl
ret
adc
addr16
lods
stos
pusha
sub
mov
push
push
add
lock
lahf
xor
and
into
repz
mov
bound
cmp
lock
int
push
cld
aad
clc
pop
cld
jmp
or
xor
ror
sub
push
cmove
adc
fwait
mov
stc
loopne
dec
movsl
daa
jae
fstps
cli
shl
lock
and
pop
sub
jns
mov
add
jmp
pop
lods
mov
movsl
outsl
clc
in
cli
decb
in
add
jl
xchg
in
shlb
mov
int
repnz
and
dec
add
sub
jb
xchg
xchg
and
stos
sub
mov
mov
push
mov
fs
adc
sub
xor
push
dec
out
imul
mov
mov
aaa
pop
repnz
add
pusha
in
out
mov
arpl
mov
jg
js
out
int
aad
add
cli
adc
lods
adc
movsl
movsl
push
jmp
outsl
push
pop
loop
mov
mov
pushf
insb
in
sti
xchg
ret
loope
mov
lock
pushl
aam
xorb
add
xchg
fsubl
xchg
jecxz
xor
movsb
ret
pop
popf
dec
xor
jl
xchg
in
push
jae
jmp
mov
cmp
in
inc
jns
fwait
stc
mov
xor
les
sahf
adc
mov
loopne
fildll
and
std
adc
shrl
xor
mov
cwtl
in
mov
xchg
jle
jae
xlat
daa
les
adc
movsl
lcall
data16
pop
outsl
mov
or
data16
cli
push
lahf
push
rsm
and
cmpsl
add
loopne
insb
xor
add
daa
jp
or
outsl
or
mov
mov
xchg
mov
ljmp
sbb
iret
mov
call
cld
cld
bound
cli
and
test
dec
mov
icebp
add
mov
inc
mov
sub
jl
ret
adcl
and
nop
sbb
add
push
cwtl
jmp
jae
aas
push
nop
adc
mov
cmp
je
loope
cmc
std
mov
pop
es
bound
inc
mov
icebp
sub
fnstsw
cmpsb
mov
and
in
lcall
aad
es
jbe
dec
xchg
push
inc
mov
and
jne
jg
adc
jg
arpl
les
shrb
out
push
out
xchg
jge
or
imul
test
push
and
add
mov
jbe
xor
jle
xlat
insl
cltd
sbb
jg
fisttpl
mov
ror
std
add
out
cmc
adc
add
inc
and
mov
dec
out
pop
add
test
and
xchg
jo
popf
dec
mov
xor
jmp
cmpsl
mov
xchg
mov
dec
mov
cmp
fildl
insb
sbb
cmp
icebp
jbe
add
out
movsl
or
cmp
push
sub
mov
cltd
jg
sbb
dec
stos
fcom
test
shrl
test
pop
mov
push
adc
inc
and
ja
shll
or
pop
rcrl
test
jle
sub
xchg
hlt
jmp
lods
sbb
mov
fbstp
movsb
daa
and
xor
fisubs
mov
jmp
call
loope
inc
outsb
jecxz
push
inc
mov
or
cmpsb
cmp
stos
scas
stos
sub
cmp
mov
dec
xor
adcl
mov
adc
out
les
xor
cli
std
cmp
jp
mov
shlb
out
test
gs
push
push
inc
mov
mov
inc
inc
jge
popa
sbb
arpl
or
add
lahf
jae
aad
ja
in
icebp
cmpsl
roll
inc
jbe
sub
or
and
hlt
arpl
add
imull
jge
shll
cli
loopne
mov
negb
dec
cs
push
sub
mov
pop
push
push
in
aad
xor
add
data16
aad
dec
mov
add
push
xchg
xor
pop
mov
aas
stos
scas
push
cmp
pop
sahf
pop
filds
enter
or
mov
std
jns
aam
push
sub
test
dec
in
imul
jno
aaa
in
clc
xchg
xor
lds
xchg
aas
testb
rclb
cmp
pop
jmp
pop
aas
pop
sbb
mov
adcb
pop
fwait
mov
jge
cmp
movsl
inc
scas
dec
dec
or
cmp
xor
xchg
inc
stc
stos
push
cmp
add
sub
xchg
jmp
or
int
mov
mov
test
lcall
inc
sti
lea
dec
pop
shr
jg
sbb
cmovs
mov
xor
adcl
gs
test
adc
cmp
nop
dec
and
cmp
cld
out
push
fsubrl
dec
cmc
cli
jle
stc
das
addr16
call
das
pop
sbbl
ljmp
fldenv
fbld
mov
aas
in
dec
roll
xchg
cltd
inc
mov
adc
mov
into
add
mov
das
das
cmp
fmuls
sbb
mov
dec
imulb
cmp
clc
xor
arpl
cmp
jecxz
ja
inc
fcomps
sbb
mov
test
pop
ja
ficoms
push
mov
jb
fldl
xor
mov
or
lret
mov
fisubl
xor
gs
add
sbb
adc
cmpsb
scas
jp
stos
out
ljmp
pushf
sub
shrb
outsl
ss
cmp
pusha
rcl
psrlw
icebp
int
stos
push
loop
loope
inc
and
in
pusha
fadds
cmp
and
inc
sub
jne
ljmp
xchg
mov
mov
scas
popf
or
dec
jns
push
push
mov
xchg
sub
fs
sbb
mov
sub
fidivs
push
pop
mov
stos
jbe
mov
add
inc
ret
mov
fdivrl
sub
out
push
mov
and
pop
xor
aam
into
inc
add
popa
sarb
adc
push
cmpsb
mov
nop
bound
sbb
mov
or
inc
pop
pop
mov
push
idivl
or
out
jge
and
and
ljmp
imul
sub
lret
out
or
xchg
xor
gs
out
cmpsl
mov
dec
adc
ret
xchg
icebp
jbe
ret
sahf
cmp
mov
pop
cmp
imul
jge
repnz
stos
adc
ljmp
xor
insl
and
xchg
fiadds
add
mov
arpl
or
sbbb
cmp
mov
test
aas
fstp
inc
jmp
xchg
pop
sbb
mov
and
ret
xchg
dec
inc
mov
aas
sub
dec
push
ja
xchg
xchg
inc
mov
jne
push
cmp
leave
lods
or
jmp
imul
lret
fisttpll
push
inc
push
push
aad
pusha
icebp
scas
sbb
icebp
aas
sub
cmp
inc
aas
or
gs
sbb
icebp
add
and
add
pop
addr16
inc
outsl
scas
outsl
dec
movsl
add
or
aad
rcrl
lods
sub
fsubl
jbe
push
mov
ret
sbb
test
lcall
fdivl
fdivl
mov
jae
jmp
repz
repz
mov
mov
pop
xorb
mov
mov
jp
cmp
dec
insl
lds
shl
ret
jmp
cmp
push
scas
and
xchg
or
pop
dec
mov
pop
sbb
test
daa
fidivrl
xchg
cmp
mov
add
cmpsb
dec
xor
testl
or
sahf
push
mov
sbb
lahf
jno
push
mov
push
loope
int3
hlt
addr16
je
jmp
xchg
data16
mov
icebp
mov
jb
adc
xchg
jb
in
cmp
aas
xchg
jl
fnstcw
subb
out
int3
aad
sub
outsb
icebp
iret
push
add
or
fisttpll
or
lods
dec
add
mov
jno
cmp
xor
punpcklbw
jl
aam
xchg
inc
shlb
data16
lret
or
jne
push
xchg
int
stos
decl
int3
mov
fs
xor
sbb
xchg
in
hlt
aam
mov
sub
jge
push
push
mov
mov
sub
xchg
insb
imul
adc
andb
negb
mov
push
pushf
sti
daa
mov
test
ss
sbb
nop
jle
bound
jmp
popa
push
rol
dec
scas
jecxz
mov
int3
ret
cs
scas
mov
xor
adcb
pop
push
inc
mov
mov
cltd
lcall
push
gs
fdiv
popf
addr16
mov
imul
mov
xor
mov
fidivl
js
pop
push
mov
cmpsl
mov
mov
jnp
push
xchg
ret
jbe
dec
jl
hlt
or
sub
xor
int3
lcall
aad
xor
sub
ret
iret
and
shrb
xlat
out
outsb
in
je
test
pxor
ficoms
jae
jle
jae
imul
dec
mov
sbb
lods
push
mov
leave
outsb
sbb
ss
sub
add
setbe
push
mov
dec
ss
jp
imulb
rcl
pop
pop
pop
cmc
add
sahf
ret
loop
mov
in
jmp
aad
cmc
and
xchg
mov
scas
std
sub
lds
dec
stos
mov
and
fwait
mov
xor
sub
mov
test
pop
out
xchg
cmpsb
mov
into
cwtl
fimuls
jmp
cmp
push
rcrl
ret
pop
jge
xchg
lods
loopne
xchg
and
jne
rolb
js
rcrb
lods
testl
cmp
add
push
pop
mov
sub
add
popa
jo
cmpsl
fisubl
pop
es
xor
stos
sbb
or
js
imul
loope
mov
adc
cmp
dec
test
int3
pop
xor
sub
inc
das
leave
adc
outsb
aam
mov
lea
sbb
push
out
mov
mov
pop
mov
mov
aaa
iret
mov
dec
nop
push
imulb
and
mov
inc
or
fcompl
cmp
cmp
dec
push
icebp
push
xor
mov
frstor
cmp
xchg
ret
lods
add
fnstsw
pop
jle
dec
sbb
jnp
daa
test
jno
shl
and
mov
inc
mov
mov
cmp
dec
mov
or
push
fcoms
mov
push
pop
je
adc
mov
stos
popa
mov
jge
xchg
int3
cmp
cmp
les
adc
xor
push
lock
scas
insl
xor
pushf
add
fisttpl
lahf
sub
lcall
or
sub
xchg
shr
popa
fwait
push
push
addr16
out
push
jns
loope
nop
mov
mov
test
leave
mov
xchg
mov
and
ret
gs
repz
in
scas
movsl
jnp
aas
sbb
sahf
mov
pop
mov
mov
std
cli
mov
pop
sub
push
jo
jb
sbb
jae
cmp
jle
adc
std
inc
mov
add
lahf
mov
enter
push
insb
mov
adc
jo
mov
cmp
dec
stos
push
rcr
into
cmc
xchg
mov
push
sub
movsl
jno
sub
dec
pop
test
repnz
cltd
in
add
ds
int3
adc
and
jg
jno
fwait
mov
mov
daa
lods
adc
sub
mov
sub
out
mov
sbb
fcoms
sbb
subl
inc
pop
pop
push
sbb
enter
mov
xchg
inc
jl
ret
and
xor
bound
adc
loopne
jge
addr16
ret
in
fldl
push
inc
outsl
jns
jne
pop
in
cmpsl
mov
inc
adc
add
push
test
lds
pop
les
idiv
dec
push
orl
fdivrs
mov
dec
xor
popa
sub
cmp
in
mov
xor
add
or
je
loope
gs
push
insb
out
mov
xchg
arpl
fsubrs
mov
adc
and
hlt
rcrb
subb
sbb
loopne
sti
pop
stos
dec
mov
push
negl
mov
jbe
adc
test
or
and
adcb
sub
inc
lret
cli
imulb
cmp
mov
sbb
inc
outsb
adc
dec
popa
inc
push
gs
ret
pop
mov
jnp
add
xchg
pop
loopne
aas
lock
out
fs
in
xchg
rcl
outsb
xor
notl
fimull
cmpsl
fsubrs
cmp
xorl
shlb
xor
jl
pop
mov
mov
jo,pt
dec
ret
mov
std
jmp
or
jne
or
and
push
out
mov
mov
sub
aas
push
mov
lods
push
adc
in
loope
mov
rorl
xchg
and
dec
in
jo
jae
cmpb
cmp
mov
out
imul
push
lahf
pop
roll
jl
mov
scas
dec
out
cmp
push
jbe
jg
out
movd
dec
push
lock
push
arpl
cmpsb
aad
dec
add
adc
add
inc
repnz
sbbb
mov
dec
insl
aam
inc
in
out
dec
mov
add
outsl
inc
pop
insl
fists
mov
mov
pop
mov
outsl
jbe
xor
outsb
test
hlt
add
push
in
fs
lret
cmp
mov
dec
or
js
and
inc
or
mov
insl
gs
shll
jo
push
test
xchg
or
dec
hlt
outsb
add
mov
xor
test
scas
mov
jae
mov
jmp
aaa
sbb
rcl
lea
sti
dec
testb
xor
and
adc
test
leave
jp
lods
fldt
test
inc
dec
ret
and
mov
dec
iret
outsb
mov
adc
jp
clc
outsb
in
imul
fnstenv
or
ret
and
sub
inc
sbb
std
cltd
hlt
add
mov
ds
scas
sahf
cmpb
es
shll
sbbb
aaa
mov
mov
test
imul
stc
aad
mov
pop
js
ja
test
loop
sbb
cmp
xchg
test
arpl
mov
inc
xlat
inc
mov
rorl
push
mov
ret
repnz
das
lods
dec
daa
push
xor
pop
fidivl
pop
insb
rclb
in
jbe
and
jnp
inc
or
jg
push
push
mov
add
pop
mov
xor
adc
push
mov
jg
sti
test
add
aas
in
repz
xchg
mov
mov
cmp
dec
js
scas
add
cld
sti
imul
js,pt
xor
pop
dec
and
mov
inc
scas
out
push
adcl
test
in
add
movsl
imul
mov
or
sbb
cli
xchg
adc
daa
ret
jns
fcoml
jecxz
pop
push
mov
xor
in
test
stos
ljmp
lods
xchg
dec
insl
rolb
xor
add
cmp
push
and
dec
mull
mov
repnz
inc
dec
xlat
push
xor
ret
pop
aas
xchg
out
push
aas
lea
mov
out
fmull
cmp
mov
iret
test
cmpsb
in
mov
pop
mov
mov
and
jmp
pop
loope
aam
orl
mov
push
dec
xor
imul
push
dec
sbb
jo
pop
fs
cmp
mov
je
in
cmp
pop
fisubs
and
push
test
pop
lcall
in
xchg
jb
unpcklps
xor
mov
testl
pushf
in
xchg
mov
gs
mov
and
sbb
sub
cwtl
sbb
inc
movq
mov
inc
push
sub
outsl
cmp
lods
adc
popf
out
ret
in
subl
fistpl
mov
clc
dec
mov
imul
fabs
leave
sbb
and
pop
mov
cmp
add
mov
mov
xchg
scas
push
fwait
ror
stos
rcl
bound
outsb
xchg
push
imul
jbe
int3
xchg
mov
sub
daa
cli
cwtl
dec
out
repz
lea
cmp
lea
and
sti
pop
xchg
pop
iret
bound
add
leave
loope
rclb
data16
mov
jle
jg
push
cld
std
rolb
and
mov
loopne
not
mov
sahf
mov
push
sbb
jbe
ljmp
cmp
int
mov
clc
rclb
mov
mov
cmp
mov
mov
das
fisttpl
push
test
fisttpl
adc
mov
inc
loop
jecxz
jno
mov
jl
or
xchg
mov
dec
rclb
and
push
mov
jmp
and
std
inc
sbb
adc
insl
call
cwtl
mov
in
xor
jmp
xor
xor
insb
aam
sbb
sbb
cmp
adc
stos
pop
mov
pop
scas
icebp
lea
jmp
and
inc
jge
into
xor
adc
call
sbb
iret
xchg
ret
inc
scas
sub
std
and
negb
fwait
inc
mov
adc
test
sub
inc
nopl
rcl
int3
and
jmp
jg
out
cwtl
add
push
push
lods
sbb
sti
add
ljmp
mov
nop
fbld
sbb
test
movsl
das
test
xor
sahf
mov
jae
aaa
gs
add
outsb
loopne
popl
idiv
fadds
out
movsl
jns
rcr
pushf
push
adc
inc
lock
sbbb
shlb
sub
mov
popa
mov
inc
adc
push
pusha
adcl
jmp
lcall
mov
xor
dec
mov
adc
sbb
pushf
cmpsl
mov
pop
mov
jb
fistps
ljmp
add
and
sub
xorl
jns
mov
out
jecxz
jb
cmpsb
clc
ja
fucomip
mov
and
lret
lea
xchg
rorb
mov
sub
jge
cltd
jle
shlb
pop
inc
and
and
xchg
std
sbb
cmc
adc
lret
addr16
pop
push
outsb
repnz
xor
dec
or
leave
add
xor
shl
sti
popf
pcmpeqb
adc
xchg
pop
iret
cmp
mov
bound
enter
adc
and
insl
lods
insb
mov
jo
sbb
cmp
mov
xor
mov
mov
xchg
cwtl
push
js
int3
ficoms
dec
int3
cmp
mov
in
loop
loopne
movsb
ret
mov
xchg
xor
xchg
ret
mov
jl
lcall
iret
ret
or
lahf
dec
add
sub
mov
bound
loope
rcrb
std
int3
push
xchg
int
stc
adc
jecxz
pop
dec
addb
cmp
bound
fadd
cmp
and
jns
jnp
mov
pop
mov
mov
stos
add
je
push
daa
shr
stos
cmp
mov
call
movsb
mov
mov
pop
inc
add
or
inc
insb
call
adc
fmuls
pop
fwait
idivl
cmc
rcll
or
add
mov
lcall
xchg
enter
sub
cltd
gs
clc
ss
sbb
jb
mov
dec
insb
cmpsl
nop
aaa
xlat
fcmovnb
aas
lahf
cmp
fstpt
adc
inc
add
adc
in
mov
push
add
sbb
push
ja
das
shll
mov
jl
imul
xchg
mov
ret
clc
jo
jns
sub
icebp
cmpsl
dec
cmp
pop
mov
cmp
push
xchg
and
add
push
cmp
add
hlt
mov
adc
pusha
sbb
and
insb
test
fxtract
push
adc
pop
inc
ret
imul
pop
lods
fmull
cwtl
sbb
clc
adc
cwtl
and
xor
jmp
xchg
out
cmp
pop
sub
js
dec
in
xor
in
subl
push
scas
xchg
pop
repnz
pop
inc
movsb
and
sti
cltd
pusha
lds
les
inc
call
in
aaa
mov
mov
enter
adc
mov
lcall
xchg
push
mov
or
or
pop
jb
sub
lret
push
ficomps
pop
popa
cmpsb
sub
lcall
sti
add
lods
dec
sbb
jg
inc
add
mov
int
jle
ds
clc
aam
inc
cmp
mov
xor
lahf
scas
adcb
and
mov
mov
inc
nop
mov
test
jnp
cld
ljmp
lret
mov
jmp
mov
sub
ret
push
arpl
sub
rcrl
adc
ds
jb
mov
push
out
cmpsb
fisubrl
int
enter
imul
lcall
cmpsl
hlt
cmp
enter
mov
push
cmp
aas
sti
fdivrp
sbb
cmp
inc
push
mov
and
das
push
push
or
mov
ss
mov
mov
sti
pushf
sbb
dec
fbld
adcl
xchg
lods
lea
push
lods
push
adc
or
daa
aas
push
and
jge
rclb
mov
mov
push
mov
lcall
popl
test
sub
sbb
jb
jle
fwait
std
fidivrs
lods
mov
xchg
inc
cmp
loope
lea
cmpsb
int3
pop
or
mov
and
cltd
repz
hlt
inc
rol
sti
xor
mov
inc
or
inc
cld
xchg
mov
cmpb
cmp
add
add
fwait
cli
je
push
dec
sub
sub
push
or
jecxz
jns
inc
mov
into
fisubrs
or
stos
dec
xor
in
js
or
sbb
fisttpl
in
dec
mov
aaa
es
outsl
add
and
and
icebp
pop
leave
mov
das
out
jne
sub
mov
pop
xlat
jl
sbb
imul
std
pusha
dec
imul
cmp
pop
xchg
push
sbb
dec
fistl
in
fwait
lds
inc
mov
jmp
add
adc
fwait
jns
xchg
adc
fiaddl
lea
aad
adcl
and
andb
jo
dec
mov
mov
lds
mov
mov
jne
mov
ja
gs
jno
scas
fcompl
movsb
xor
clc
push
pop
pop
add
repz
mov
addr16
mov
pop
mov
cld
add
sbb
jecxz
jle
scas
gs
mov
mov
jl
or
fsubl
adc
cmp
lret
mull
lods
sbb
mov
add
cmp
popf
js
lea
adc
daa
jnp
dec
mov
xor
notb
stos
pop
xor
mov
sub
jg
jmp
or
mov
mov
xchg
jge
sub
xlat
add
div
outsb
sbb
or
iret
sahf
cmpsb
xor
jb
repz
loope
incb
insl
xchg
push
jmp
ret
in
and
cwtl
daa
iret
out
mov
dec
cmpsl
inc
lea
jbe
rorb
jae
jno
mov
stos
inc
push
cld
imul
mov
sub
or
push
xor
loopne
xchg
adc
add
sub
cmp
lcall
gs
xor
xlat
nop
movl
and
enter
push
jmp
int
movsl
cmpsl
mov
push
popa
add
mov
mov
into
test
test
loopw
mov
mov
add
aas
nop
inc
or
popa
xchg
subl
jae
xlat
cmpsb
or
mov
mov
inc
pop
in
pushf
inc
push
push
in
push
cmp
fwait
dec
and
adc
dec
mov
push
in
xchg
fsubs
lods
add
cmpsl
add
and
push
lcall
in
ret
movsl
dec
sub
scas
pop
pop
pushl
inc
lods
test
jl
xor
pushf
lods
js
les
fnstcw
xchg
lcall
stc
jne
out
fstpl
orl
stos
jge
in
sti
je
ja
xchg
mov
jmp
enter
lea
pop
push
adc
cmpl
sub
xchg
je
mov
cmpsb
and
ss
push
or
sub
lret
andb
test
jp
rcrl
cmp
mov
pop
cmpsb
adc
in
push
jb
ja
sub
jns
les
sahf
sbb
and
inc
mov
arpl
repz
jge
add
xlat
scas
mov
popf
dec
hlt
sub
idiv
mov
adc
mov
adc
add
sub
mov
loope
enter
push
mov
jmp
dec
lods
mov
adc
arpl
pop
mov
repz
jo
adc
testb
jg
repnz
aam
fs
sub
mov
cs
pop
inc
sbb
cmp
je
in
cmp
or
push
mov
xor
or
push
ficomps
mov
ss
leave
push
nop
sbb
dec
movsl
cs
or
js
loopne
and
and
or
xor
dec
and
dec
das
inc
fsub
mov
adc
aas
adc
lret
sti
ds
pusha
fistl
sub
icebp
xchg
mov
idiv
add
push
inc
mov
adc
push
jnp
lret
incb
out
mov
cmc
andl
sub
xchg
js
iret
mov
xorb
imul
arpl
adc
jmp
pop
insl
xchg
pop
fstps
shl
mov
in
lcall
sub
adcl
add
sub
xchg
xchg
idivb
fsubp
pop
lea
jns
adc
pushf
mov
mov
lds
mov
add
out
xchg
arpl
arpl
movsl
orl
call
xchg
push
loop
and
mov
popa
push
leave
jo
sub
and
mov
ficomps
xchg
pop
cmp
mov
jg
push
pushf
sbb
fidivs
out
push
xor
jmp
dec
mov
data16
add
xlat
lea
sbb
lods
fstp
icebp
lock
stos
loop
adc
add
loope
sbb
xor
push
and
ret
dec
jns
shlb
flds
push
push
arpl
xchg
rorl
dec
adc
loop
pop
inc
adc
jnp
inc
mov
insl
mov
aaa
mov
mov
mov
sub
lods
ljmp
pop
imulb
ja
stos
xor
sub
dec
loope
aas
insl
adc
vpsllq
lret
or
add
push
mov
sub
loope
aaa
ljmp
dec
mov
out
out
insb
mov
les
sub
sub
sbb
imul
arpl
stos
icebp
fcom
jmp
aad
mov
das
ret
les
inc
and
or
loope
sti
pop
mov
sub
iret
sub
push
imul
or
jnp
std
xor
int3
lea
xor
insl
dec
ds
icebp
mov
add
pop
pop
js
mov
mov
sbb
xchg
pop
fs
mov
stos
xor
sti
jl
mov
or
sbb
add
push
cmpsl
aam
cli
pop
push
aam
ficoms
dec
pushf
test
or
jle
xor
inc
mov
movsl
into
movsl
xor
data16
pop
fldcw
xchg
add
fstps
push
fmuls
adc
lea
jb
mov
pop
std
cmpl
fisttps
lret
cs
jae
lret
dec
rcr
nop
in
sub
pusha
and
xchg
cmp
loope
sahf
cmp
add
pushf
xor
xor
pop
adc
or
push
lea
call
shrl
ja
pop
pop
js
ds
and
sahf
push
cwtl
inc
xchg
xchg
mov
push
and
cmp
jne
sahf
cld
out
inc
mov
into
jmp
push
inc
jbe
add
mov
push
push
clc
outsb
mov
into
sub
out
or
pop
mov
scas
mov
sub
push
cli
sbb
dec
dec
xor
arpl
sbb
jle
out
push
push
xor
inc
rcrl
out
mov
imul
or
or
mov
push
aas
cmp
jp
dec
scas
test
lret
ljmp
jo
sbb
andl
cmp
push
cmc
or
push
outsb
ja
mov
rorl
sub
sbb
into
stos
je
sbb
dec
cwtl
ss
inc
sti
stos
push
les
cmp
sub
je,pt
sub
jae
mov
cmp
test
cmp
imul
std
icebp
xchg
loope
lea
or
inc
xchg
ds
sbbl
std
and
ds
cmp
dec
les
out
push
jo
das
cmp
dec
out
cmp
inc
arpl
xchg
mov
lods
cltd
ror
test
fsubs
cmc
aaa
xor
and
inc
mov
mov
popa
out
xchg
adc
cmp
int
faddl
xor
pop
mov
mov
cmp
int
aam
in
popa
clc
mov
jns
test
aas
or
hlt
cld
or
stos
test
mov
out
inc
daa
arpl
les
enter
cld
rclb
mov
cmp
or
or
mov
jnp
dec
cmpsb
outsb
add
daa
adc
rcr
mov
push
stc
xor
sub
es
inc
repnz
push
sbb
dec
cmp
mov
inc
mov
mov
xchg
mov
pop
push
ja
outsb
sbb
xorl
xor
std
ljmp
scas
gs
sbb
push
data16
je
push
and
sbb
pop
ja
addr16
pop
testb
das
or
fildl
xchg
test
es
jg
or
cmp
xchg
in
aas
daa
mov
scas
cmp
or
jge
cmpsb
add
mov
jae
adc
rorl
negl
adc
repnz
jmp
cmp
insl
cmp
push
outsl
mov
or
adc
incb
adcw
mov
call
scas
sub
push
out
mov
divl
and
lret
imul
leave
icebp
fcomp
insb
test
shl
lret
gs
sub
pop
test
push
sti
jbe
mov
and
add
cmp
add
fwait
adc
je
sbb
jnp
sbb
es
lods
or
test
jg
pop
mov
sbb
testb
xchg
call
mov
popf
lret
loop
fcomps
clc
jae
xchg
lds
jne
int
test
cmp
stos
out
mov
add
cmp
or
shl
xchg
fisttps
xchg
lret
in
out
sub
jmp
mov
lock
sar
push
test
loop
xor
lods
enter
sbb
pop
je
push
stc
negb
bound
push
stc
mov
call
outsl
scas
mov
iret
std
imul
bound
mov
inc
imul
orl
inc
add
add
stos
push
jecxz
mov
ds
cmp
mov
out
dec
inc
fwait
jnp
lret
and
jns
push
pusha
pop
add
and
and
or
rcll
sub
cmp
mov
adc
xchg
fwait
sti
stc
adc
xchg
das
fs
push
repz
mov
aad
and
xchg
adc
vpsrlw
push
xlat
jmp
push
inc
adc
scas
mov
sbb
out
mov
out
mov
and
cmpsl
call
push
bound
test
aaa
push
adc
xchg
or
das
push
sub
out
loop
pop
faddl
jbe
gs
hlt
add
dec
xor
scas
xchg
jbe
mov
popf
cmp
in
ret
ds
mov
nop
or
xchg
dec
add
icebp
or
dec
popf
mov
fcoml
or
fstcw
sub
cmp
stc
sub
mov
and
xchg
add
clc
cli
loope
xor
out
xor
add
pop
mov
in
mov
push
shll
fdivs
mov
ja
test
mov
and
dec
in
outsl
mov
pop
flds
sub
pop
call
mov
ret
das
es
jo
and
jnp
arpl
testb
and
sub
fstpt
gs
sahf
pop
test
daa
gs
adc
ret
int
xchg
and
or
out
and
inc
clts
in
mov
int
clc
loop
pop
ret
push
dec
insl
xor
les
rcll
inc
ljmp
jbe
push
and
movsb
gs
jb,pn
lret
aad
outsl
iret
fwait
xchg
push
seta
dec
orb
jae
push
nop
fisubl
ret
xor
ss
xchg
movsl
mov
or
mov
lods
sbbl
sbb
popa
mov
cmpsb
and
popf
dec
mov
outsb
mov
and
dec
adc
es
inc
test
add
scas
push
mov
adc
sbb
lret
and
mov
or
sbb
dec
call
push
mov
andb
inc
inc
xchg
inc
cmc
push
dec
dec
lcall
or
rol
inc
popf
sub
xchg
xchg
pop
insb
out
jbe
push
mov
insb
xchg
sbb
inc
or
ret
ss
pop
test
jae
int3
pop
mov
and
pop
scas
sub
stos
int3
jns
xchg
mov
cmp
mov
scas
sbb
mov
pop
or
xlat
push
test
mov
jecxz
inc
jae
mov
xchg
ja
into
push
mov
in
daa
jmp
imul
sbb
mov
mov
pop
pop
fsubr
sub
aas
xchg
or
push
pop
adc
outsl
daa
inc
cmpsb
std
mov
adc
mov
mov
movsb
add
and
push
in
xor
cmpsb
xor
mull
xor
and
into
loopne
stc
ljmp
mov
insb
outsl
mov
adc
xchg
loopne
sbb
shrb
push
scas
leave
sbb
int3
incb
xchg
mov
cmp
jno
inc
sub
dec
pop
pusha
lret
loop
adc
add
in
cmp
cmpsb
stos
pusha
mov
xchg
movsl
out
cmp
lret
dec
and
push
inc
jle
mov
cmp
push
dec
mov
push
out
and
jle
and
push
xchg
pushf
ficomps
lods
pop
xchg
push
push
andl
mov
cmc
sbb
gs
jo
pop
push
ljmp
shll
mov
cltd
enter
pop
das
inc
sub
dec
push
out
mov
push
out
or
jns
mov
inc
fdivrl
sub
adc
aas
push
xchg
test
adc
scas
xor
aaa
sbb
jbe
push
or
sti
sub
or
mov
hlt
mov
pop
nop
mov
je
inc
sub
push
xor
in
movsl
lret
nop
dec
fnsave
dec
bound
aad
jne
mov
mov
out
lea
lahf
mov
js
mov
fadds
and
push
xor
sbb
int
and
sub
mov
insb
bound
jnp
cmp
xor
iret
jno
and
dec
push
sbb
cmp
aad
pop
into
mov
outsb
xchg
sbb
xchg
lds
jp
pop
inc
aaa
sub
lea
mov
lcall
pop
mov
andb
jg
cmc
dec
pop
dec
mov
mov
pop
pop
stos
lret
lcall
sbb
sub
lods
and
dec
int
sbbl
xor
fnstcw
jge
pop
and
dec
mov
xor
mov
cmpsb
insb
xor
jmp
ds
in
ljmp
out
cmp
stc
inc
xchg
mov
fbstp
fnstenv
cmp
arpl
jns
clc
jno
mov
adc
adc
js
out
mov
push
push
sub
jb
pop
xchg
out
sti
scas
movsl
or
rcrl
sub
push
subb
add
ljmp
cwtl
cwtl
add
add
imul
imul
ret
into
jg
decl
fnstsw
cmc
push
xor
mov
inc
cmp
insl
inc
sbb
xchg
pusha
and
sub
stos
mov
movsb
je
mov
scas
mov
push
and
and
popa
adc
xchg
or
outsl
arpl
cld
orl
or
mov
loope
push
cli
pop
xchg
out
negb
and
mov
fimuls
mov
cmc
mov
shlb
or
mov
mov
inc
insb
mov
dec
or
imul
pop
sub
inc
mov
jb
rorb
mov
and
into
inc
mov
cmpsl
stc
xor
fdivs
and
cltd
cmp
sbb
xchg
pop
xchg
push
ljmp
xchg
add
jne
sbb
jmp
ljmp
clc
popa
jno
fs
ss
xchg
and
xor
mov
fadds
xchg
fisubrs
adc
es
in
push
pop
les
in
and
pop
int
adc
pop
mov
mov
hlt
mov
push
into
popa
pandn
mov
call
test
mov
and
sub
loope
pop
fcmovnb
cmp
mov
push
xchg
testl
aad
rolb
xor
adc
lea
sbb
sub
jge
dec
or
aaa
hlt
or
jle
rcrb
bound
cmp
push
icebp
dec
push
xchg
call
add
imul
or
xor
cmp
nop
add
arpl
dec
pop
add
mulb
nop
shlb
dec
pop
movsl
test
pop
or
out
inc
mov
jp
push
rcr
mov
or
sbb
cmc
pusha
ds
loope,pt
fdivr
mov
fdivrs
incl
push
enter
and
cmp
push
push
xor
jno
mov
test
xor
call
out
out
test
rorl
ret
inc
ja
ja
inc
push
insb
inc
mov
pop
mov
lret
push
mov
aam
sub
jge
mov
bound
or
jg
pusha
addr16
rol
sti
xchg
out
es
dec
jmp
pop
fstpl
lock
cli
and
and
stos
pop
jmp
or
test
punpckhwd
fmul
ret
mov
fwait
push
int3
mov
dec
pop
addr16
push
int3
dec
push
data16
mov
cmp
mov
sbb
sahf
xchg
add
cmp
iret
cmpsb
sbb
imul
xchg
nop
jmp
shrb
outsb
je
in
adc
inc
mov
out
mov
jl
jns
jge
mov
adc
push
pop
into
mov
jb
jecxz
hlt
sub
push
int3
pop
mov
xor
pushf
cs
je
stos
xor
out
or
call
popa
fsts
stos
sub
pop
inc
xchg
inc
pop
out
mov
popa
stc
sub
mov
das
mov
js
push
nop
mov
cltd
jbe
insl
imul
movsb
fdivl
out
push
shlb
pushf
mov
sbb
sub
fucom
sbb
pusha
xor
jbe
sbb
pop
mov
mov
xor
mov
mov
cs
jbe
push
mov
mov
add
scas
sbb
or
or
daa
inc
xor
mov
fdivs
arpl
adc
in
scas
movl
pop
adc
lret
scas
pop
aam
outsb
cmp
sub
int
xchg
dec
nop
mov
into
add
jns
imul
mov
test
pop
adc
jmp
lahf
sti
mov
lea
mov
arpl
lahf
push
fmul
push
cmp
int
aam
fidivrl
stos
cmpsb
sbb
cltd
pushf
ljmp
xchg
dec
lret
mov
daa
and
clc
or
mov
cmp
mov
cmc
fcmovne
test
aaa
out
pop
cmp
adc
sub
mov
xor
sbb
lock
loopne
pop
fsubrp
daa
ds
std
int3
cs
push
imul
test
nop
adc
or
test
jae
cmpsb
fsts
int
in
ds
lret
push
and
hlt
pop
jle
jle
sub
jmp
pushf
in
ja
xor
shl
fidivrs
out
loopne
dec
rcrb
jae
lea
push
add
cmp
inc
xchg
push
cli
inc
xchg
jb
push
imul
xchg
fimull
jne
mov
hlt
lret
dec
dec
scas
adc
mov
or
lea
std
lret
aad
pop
inc
sbb
xchg
jo
mov
push
pusha
lods
aaa
lea
add
or
push
xchg
or
idiv
outsl
pusha
jmp
sarl
adc
push
cmpsb
addl
sti
push
in
orl
xchg
test
fdivr
push
mov
and
push
pop
mov
in
fwait
std
out
loope
adc
sbb
cs
movsl
xor
dec
or
jnp
jmp
leave
jle
mov
sub
out
jbe
lods
sub
xchg
bound
bound
shl
push
scas
into
jbe
call
add
pop
les
cmp
scas
xor
data16
daa
jns
push
fwait
inc
call
int
cmpb
fwait
pop
fwait
sbb
lds
mov
or
mov
arpl
dec
call
loopne
jp
insl
fbld
push
push
icebp
jns
add
test
lea
mov
mov
subl
xchg
inc
or
in
jecxz
adc
fpatan
mov
fidivl
gs
testl
test
out
pop
adc
mov
aam
ret
ficoms
lret
mov
and
sbbl
pop
sub
inc
fildl
inc
and
mov
fnstenv
cli
decb
popa
into
mov
out
jo
scas
outsb
test
inc
jne
mov
insb
xlat
xlat
ds
test
push
lret
sub
adc
pushf
and
dec
in
push
call
std
in
outsl
jbe
in
lahf
and
mov
mov
fldt
push
movsb
jne
mov
push
pushf
leave
mov
repz
pusha
jl
stos
push
mov
cs
adc
cs
aaa
push
pop
test
dec
outsb
lret
loop
mov
inc
leave
inc
mov
pop
jb
loope
mov
daa
daa
push
mov
mov
repnz
jbe
add
add
or
push
cmp
out
rorb
jp
out
arpl
imul
jg
cltd
adc
add
std
jae
sbb
cmc
mov
jp
adc
push
pushf
scas
lret
mov
rcrb
add
insl
pop
movsl
dec
in
dec
mov
xchg
mov
add
cld
test
xchg
repz
pop
pop
fimull
mov
and
ja
dec
mov
push
std
aam
mov
pop
jp
hlt
test
dec
xchg
into
push
sub
lret
subb
dec
mov
aas
sbb
jae
cwtl
daa
test
es
jle
fisubrs
fisttpll
fisubrs
push
add
gs
dec
popa
hlt
adc
ret
push
sbb
dec
and
sbb
xchg
lods
xor
push
int
xchg
mov
popa
jg
ret
sub
sub
pop
inc
lods
inc
out
inc
dec
popf
iret
or
push
push
push
dec
xor
sub
adc
cmpsl
mov
mov
jb
mov
enter
sbb
sbb
rolb
jne
pop
push
das
cmpb
mov
push
push
in
dec
repnz
mov
cld
cmp
fcmove
jmp
fdivl
cli
ret
dec
pop
pop
cli
imul
aaa
cltd
and
mov
push
lods
add
test
pop
xor
aam
out
cli
ret
adcb
mov
call
cmpsb
out
sbb
mov
and
sti
push
and
mov
imul
lret
pop
in
out
dec
mov
sarl
and
subl
xchg
ret
mov
or
mov
lods
pop
cmpsb
and
fistps
add
push
pop
in
push
xchg
dec
cmp
sbb
sbb
inc
cld
push
cmp
lds
sub
test
in
mov
in
xchg
xchg
outsb
sub
sbb
call
jne
sub
add
fcomi
mov
or
mov
adc
sub
sbb
das
into
jge
cld
jg
jmp
mull
lods
adc
insb
pop
cmp
dec
nop
enter
adc
nop
jmp
add
std
lret
push
mov
test
test
es
lcall
sub
mov
pop
jl
push
xor
fwait
pop
leave
sar
out
out
cs
rorl
negl
pop
push
inc
fldt
mov
lcall
xchg
mov
je
outsb
fs
mull
into
jle
stos
mov
stc
pop
jmp
pop
movsb
mov
fdivl
insb
pop
data16
add
test
adc
rol
adc
mov
mov
mov
das
adc
clc
cmp
iret
mov
pop
mov
xor
mov
ret
add
mov
dec
iret
jecxz
jge
cmp
aaa
out
cld
sti
xchg
push
daa
js
cwtl
mov
push
cmp
adc
pop
out
push
mov
filds
repnz
or
into
insl
jl
adc
xchg
insl
xor
pop
cwtl
test
arpl
cld
mov
lea
ss
idivb
inc
sahf
jecxz
hlt
mov
out
adc
out
push
movsl
pop
mov
mov
movsb
mov
ficoms
push
sbb
sub
push
cli
roll
jae
nop
xchg
mov
and
cld
add
data16
rcr
and
out
mov
xchg
insl
bound
or
sbb
lcall
xchg
pop
pusha
cmp
fsubl
int
filds
leave
imul
sti
bound
jne
mov
push
lret
icebp
and
fcomps
mov
or
loope
lock
imul
in
clc
lahf
rcll
lret
or
dec
aad
lahf
aad
sbb
stos
inc
mov
push
add
mov
aas
mov
inc
rol
lods
sub
hlt
idivb
mov
push
jmp
mov
outsl
hlt
cs
jl
loope
cwtl
mov
jno
aas
lods
jl
data16
insl
faddl
pop
pop
mov
jge
fstl
iret
push
je
aad
loope
in
shlb
ret
inc
inc
aaa
adc
mov
popa
out
fcomps
jae
or
or
pop
into
arpl
iret
stos
sub
jb
add
lret
adcl
inc
stos
lock
insb
inc
ficomps
mov
dec
stos
push
cmpsl
adc
xchg
fimull
aam
xor
jmp
lahf
ret
mov
sbb
adc
mov
cmp
fldl
ja
mov
testl
and
sub
arpl
mov
adc
test
sub
push
insl
xchg
cmp
sub
mov
js
mov
aad
arpl
iret
mov
and
leave
shlb
fimuls
cltd
scas
add
mov
les
add
mov
sbb
xchg
pop
mov
mov
adcl
pop
stos
pop
lods
ret
xchg
aas
imul
mov
fildll
cli
and
lea
mov
add
rcll
mulb
movsb
cmp
xor
dec
jl
push
push
pmaxsw
out
mov
xor
into
scas
rcl
mov
cmp
cmc
out
pop
and
js
mov
test
stos
or
push
pop
pop
xor
in
jnp
adc
das
push
cltd
xor
pusha
das
add
out
add
and
cs
and
and
xor
loope
lea
insl
inc
push
cmpsb
dec
sbb
inc
rclb
mov
ret
push
out
or
inc
dec
xchg
cmp
sbb
jmp
in
sbb
fnsave
sti
pop
pop
cwtl
dec
mov
iret
enter
es
jp
pop
pop
dec
arpl
inc
scas
stc
dec
pop
push
addb
push
shl
xor
cmp
mov
inc
pushf
xchg
pop
stos
test
xor
jbe
xchg
inc
xor
mov
cld
add
and
jg
pop
cld
lea
mov
jo
or
jns
add
cmp
dec
jg
jae
imul
add
rcrl
adc
test
mov
dec
in
sbb
in
pop
lock
mov
fcoms
flds
scas
jmp
ja
add
sub
sbb
jbe
mov
stos
test
ret
inc
jne
in
lock
pop
mov
daa
add
push
jmp
icebp
lods
jno
movsb
lods
cmc
sbb
inc
push
lahf
dec
pop
and
negl
fidivs
stos
and
and
adc
jns
leave
add
pop
out
add
or
pop
into
or
or
cmp
sbbl
out
sub
je
cmp
out
dec
cmp
outsb
mov
test
stos
or
or
aad
nop
popa
dec
and
daa
cmp
aas
add
jae
pushf
test
outsl
xchg
mov
outsl
xchg
daa
ds
int3
mov
add
pusha
leave
mov
jno
std
test
idivb
lret
add
fisttpl
adc
xor
push
jl
into
cmp
in
bound
pop
pop
mov
xor
pop
outsb
sarb
mov
mov
cmpsl
dec
in
dec
adc
in
aas
or
daa
cmp
mov
lahf
les
jo
dec
pop
mov
aas
aas
or
jae
xchg
push
or
faddl
in
inc
jne
enter
mov
mov
fcmovne
repnz
mov
and
ficomps
sub
inc
or
fldenv
cmpsb
add
xor
dec
fnstcw
cmp
push
push
stc
test
push
dec
clc
mov
dec
les
pop
dec
mov
mov
push
sbb
dec
imull
out
into
rolb
jnp
addr16
repz
adc
cmp
scas
or
pop
cmp
loop
fwait
sub
test
cmp
push
aam
jl
pop
jb
inc
xchg
cld
in
rol
xchg
int
dec
push
aad
xor
sti
push
jns
pop
jle
inc
in
cmp
insl
js
push
pusha
call
out
bswap
mov
ret
inc
inc
insb
add
inc
jne
scas
lock
sarl
mov
jp
or
dec
popa
mov
jb
lret
adc
sbb
gs
xchg
cmp
hlt
mov
mov
movsb
gs
xor
ja
divl
xchg
test
into
cld
pop
fs
and
xorb
aas
xchg
aaa
testb
lea
mov
dec
sbb
adc
push
xchg
inc
jle
adc
adc
push
fstps
sub
in
or
loop
inc
pop
scas
jbe
ror
pop
push
sub
lahf
sub
je
ss
mov
jno
movsb
insl
lahf
mov
enter
bound
dec
fstpt
orl
out
mov
les
dec
cmp
sti
dec
push
insb
sub
cmpsb
push
inc
jmp
outsl
or
add
cmpsl
pop
out
dec
dec
cmc
test
dec
jae
adc
loop
jnp
loopne
jle
jle
jno
inc
mov
notb
cltd
es
xor
push
por
xor
fmul
cltd
ss
adc
popf
or
adc
push
xchg
sbb
cmc
push
int
dec
push
jnp
dec
hlt
push
outsb
sbb
cmp
imul
mov
jecxz
mov
jb
pop
push
movsb
dec
inc
add
sub
xchg
daa
es
xor
add
test
jns
cmp
loope
mov
dec
mov
bound
lock
pop
loop
jge
ret
mov
imul
imul
pop
jae
fmull
out
xchg
fists
icebp
shlb
jbe
es
inc
or
out
das
mov
mov
jb
sbb
rcll
jne
das
dec
loope
cmovbe
lds
arpl
push
pusha
jp
jge
add
pusha
popf
in
mov
int
ret
mov
int
adc
inc
xor
jecxz
or
xor
imul
xor
push
mov
push
mov
jnp
adc
das
jge
pop
adc
lods
dec
xor
movsl
jo
aad
ret
enter
test
fstps
mov
iret
data16
jecxz
push
notl
inc
sub
clc
scas
dec
ljmp
sub
jns
pop
fdivl
ror
sub
out
cmpsb
xor
jnp
mov
aam
outsl
add
and
push
inc
pop
cwtl
cwtl
orl
stos
cmp
push
add
out
bound
lret
inc
sbb
pop
pop
cmp
out
or
sub
ret
dec
push
cltd
pop
ret
cmp
push
andb
inc
pop
lods
pop
mov
xor
mov
insb
jnp
orl
mov
std
jmp
cld
dec
and
popf
dec
outsl
aas
jmp
fnstsw
imul
inc
leave
adc
cmpsb
adc
jle
sbb
dec
insl
aam
mov
adc
cmovno
shlb
dec
pop
dec
mov
rolb
fiadds
xchg
jmp
and
iret
pusha
adc
jecxz
lods
fs
in
mov
popf
popf
inc
into
repz
test
pushf
hlt
test
xchg
sbb
inc
and
test
movsb
mov
fidivs
xor
lods
push
and
jae
pop
xchg
test
xchg
cwtl
xchg
ds
mov
mov
ljmp
les
pop
fdivs
iret
inc
or
decb
push
lcall
adc
xchg
into
aas
hlt
or
mov
jg
jb
in
or
inc
shr
mov
push
int
mov
test
mov
sub
dec
lret
mov
adc
and
xchg
xlat
mov
pop
mov
mov
in
push
bound
inc
test
bound
in
je
mov
xorl
xlat
push
loop
pop
inc
mov
clc
mov
inc
pop
test
or
stc
mov
add
test
lahf
jbe
inc
mov
stos
add
roll
mov
pop
push
push
jle
pop
sbb
daa
lds
inc
push
adc
add
jo
xor
adc
lea
push
push
leave
scas
negl
cltd
and
dec
push
scas
lahf
imul
notb
popl
mov
mov
mov
cmp
sbb
cmp
push
in
or
addb
mov
sub
mov
adc
pop
jne
mov
push
arpl
sub
shl
filds
inc
xchg
das
push
imul
jno
scas
sub
push
cmpsl
sbb
hlt
xchg
sti
adc
push
out
sub
out
stos
pop
pushf
dec
mov
adc
mov
sti
push
fxch
insb
or
dec
ja
fisttps
sub
xchg
pop
push
adc
popa
and
inc
std
insb
sbb
mov
mov
inc
push
dec
lods
push
aas
aaa
adc
mov
mov
xor
jno
scas
lcall
ret
cmp
mul
shrl
lock
jp
aad
fwait
adc
fisttpll
mov
adc
aad
into
pop
fisubrl
imul
dec
inc
imul
sarb
dec
cld
jae
xor
lret
mov
jno
dec
push
hlt
push
mov
call
mov
mov
push
dec
sarb
cli
fcomi
cmp
fnstsw
bound
nop
ret
xchg
enter
mov
xor
cltd
adc
pop
jmp
mov
xor
sbb
das
scas
stc
mov
push
push
repnz
mov
jno
pop
jl
xor
push
fists
add
jnp
ret
mov
xor
push
dec
fldt
xchg
cltd
addr16
negb
ret
pop
mulb
sbb
ja
movsb
shlb
xchg
rorb
rcll
adc
xor
xchg
inc
dec
jmp
inc
notb
jl
mov
add
pop
adc
popa
sub
dec
jp
inc
imul
mov
or
fimull
ds
adc
rolb
and
cwtl
xor
or
mov
out
mov
pop
sub
rcl
jns
jnp
inc
push
xchg
inc
in
xchg
cltd
xlat
ret
jnp
sub
shll
sarl
sbb
rcrb
add
faddl
mov
mov
mov
jae
xchg
daa
movsb
testl
sub
arpl
mov
roll
data16
das
into
inc
push
dec
mov
arpl
jp
pop
insl
movsb
popf
jae
mov
out
es
sahf
pop
je
jge
add
mov
lret
ret
sub
sahf
inc
or
jmp
sar
mov
lcall
dec
aas
adc
push
and
cmpsb
enter
nop
in
sarl
roll
xchg
mov
sub
or
push
pop
push
jg
sbb
cltd
jecxz
sti
pop
movsl
inc
or
xor
mov
sub
mov
rol
mov
addr16
lahf
pusha
xor
or
iret
push
add
sub
mov
push
imul
roll
into
out
es
pavgb
and
fisttpll
aaa
add
xor
fidivs
lea
cmp
cltd
jno
imul
cs
mov
mov
stos
and
mov
jecxz
cld
adc
out
push
xor
jle
movsl
jno
sahf
add
fwait
cld
shrb
and
test
mov
dec
dec
bound
inc
cmp
mov
idivb
cmc
hlt
in
filds
sbb
mov
or
xor
pop
stc
dec
out
cmp
dec
cmp
jae
mov
divb
mov
mov
cmp
sbb
xchg
cmpsb
popf
mov
adc
in
lcall
aad
add
mov
xchg
pop
pop
and
jp
jge
pop
lret
xor
pusha
sbb
jg
rcrl
mov
outsl
pop
push
sahf
shlb
xchg
cmp
adc
inc
aam
xchg
xor
cmp
xor
jb
push
fsts
test
dec
idivb
push
aaa
or
shrl
jecxz
decl
enter
xor
hlt
add
jns
mov
mov
push
pushf
outsl
movb
xchg
lcall
add
xor
ljmp
push
cmp
mov
cltd
xor
rclb
leave
mov
loopne
and
jnp
lock
push
cmpsl
fcmovu
daa
and
mov
cmpsb
adc
xchg
imul
and
lock
or
push
push
ds
push
or
and
adc
jns
dec
clc
mov
mov
aas
mov
mov
push
sub
sarl
mov
push
jge
in
xor
and
push
pop
cs
push
sti
pop
cltd
or
shll
adc
popf
cmpb
add
call
dec
imul
lock
fildl
faddl
push
in
aad
jno
loope
push
ss
mov
cld
jge
mov
inc
adc
out
xor
xor
jo
lock
out
sahf
xchg
inc
nop
hlt
fiaddl
pop
repnz
jecxz
cmpsl
imul
xchg
xchg
add
lret
std
mov
ds
or
shl
or
aas
loope
jmp
inc
pushl
leave
adc
mov
adc
cmc
adc
mov
mov
cld
or
leave
cmp
push
mov
aas
scas
or
add
inc
adcb
jmp
aaa
cmp
stos
pop
test
setne
fldt
aaa
push
ss
mov
add
lea
cmc
or
mov
xchg
int3
out
or
icebp
aam
cs
pop
dec
add
mov
mov
cmp
dec
ds
push
movsb
add
or
inc
mov
jp
xchg
cmp
and
mov
pop
mov
and
sub
jb
xchg
push
sbb
lcall
mov
pop
mov
jle
adc
sbb
daa
mov
ficompl
fcompl
movsb
jo
out
xorb
cmp
add
xchg
cs
sti
inc
inc
aam
add
xchg
jge
aam
pop
imull
push
cmp
clc
cmp
mov
data16
jb
sbb
lret
xor
mov
aad
ret
sbb
mov
mov
pop
sbb
out
lret
scas
cmp
aam
arpl
xchg
push
mov
cmp
mov
mov
jne
dec
sub
scas
rorl
cmp
lcall
out
fisubrl
cs
movsb
imul
fisubrl
pop
in
fsts
inc
pop
add
fdivrl
and
and
or
sub
into
daa
and
sbbb
adc
jg
scas
sub
pop
add
outsl
push
subb
pop
sidtl
pop
push
mov
enter
xchg
nop
or
sbb
rcl
outsl
incb
loopne
push
enter
add
push
mov
repnz
pushl
mov
cmpsb
mov
or
or
rcrb
sub
jmp
sub
lret
aam
sbb
dec
jmp
leave
imul
and
push
sti
jo
pop
adc
and
mov
or
bound
jnp
or
iret
inc
xor
shl
repz
or
shlb
sahf
pop
jmp
lds
cwtl
arpl
addl
in
sarl
rsm
add
mov
gs
sub
lahf
add
dec
mov
out
inc
icebp
test
pop
sbb
cs
movb
mov
shlb
jg
add
cmp
mov
iret
cmp
push
call
cmp
mov
push
push
sub
mul
stos
mov
push
cs
or
add
ss
and
int
xchg
mov
sbb
cld
mov
push
mov
jne
pusha
or
or
dec
push
rolb
leave
jo
rcll
dec
cmp
or
jae
call
lret
hlt
jmp
pushl
subb
dec
jle
out
push
pusha
mov
nop
fwait
xchg
mov
loope
mov
push
inc
and
dec
sub
mov
pop
pop
mov
xor
xor
sub
neg
into
in
cmp
jle
psrlw
clc
popf
cmp
sti
loope
pop
test
loopne
adc
xor
andl
xchg
inc
inc
cs
push
xchg
or
adc
cltd
mov
call
daa
jnp
jo
sub
push
idivl
lret
add
ret
inc
sub
nop
fadds
or
rclb
jns
push
pushf
int
inc
push
mov
sub
fisubrs
xor
add
aas
xchg
mov
outsb
dec
push
add
adc
pop
lcall
fucomi
inc
mov
lds
adc
pop
jnp
cmp
sub
inc
mov
xchg
xchg
pop
xor
jmp
push
xor
mov
fwait
pop
sbbl
cli
jo
adc
mov
or
mov
flds
dec
mov
add
adc
jnp
stos
ret
push
mov
imul
push
push
adc
or
pop
sbb
in
aad
outsl
xor
or
lret
popf
mov
roll
scas
adc
pushl
in
xchg
mov
push
xor
add
mov
and
cmpsl
jnp
imull
add
fwait
aam
dec
sub
add
jnp
adc
movsb
or
sarb
adc
mov
popf
mov
cld
xlat
xorl
or
lahf
rolb
cli
loope
jbe
adcl
and
fwait
xor
pop
xchg
ljmp
fs
ds
movsb
sub
ud0
mov
data16
aaa
xchg
pushf
inc
xor
and
scas
loop
aam
lret
xor
xor
xor
loope
mov
jne
pop
insb
outsl
hlt
sti
movsl
mov
call
stc
inc
mov
fsubr
and
or
mov
or
int
ret
lds
cmp
adc
add
lock
adc
out
out
mov
mov
mov
sbb
popf
gs
sti
sbb
insl
xor
sti
scas
ljmp
inc
xchg
push
inc
push
mov
jno
adc
adc
adc
push
fsubl
or
test
lods
xor
mov
sbbb
jnp
fldt
and
call
lcall
sbb
mov
clc
jl
pop
flds
testb
das
cltd
je
or
rcrl
jae
mov
orl
enter
cmp
dec
xchg
or
xchg
ljmp
xor
lret
fs
sub
aaa
into
add
and
cmpsl
inc
mov
fiaddl
push
pusha
pop
js
dec
or
orb
rorl
fldt
jle
scas
pop
int
pop
or
push
hlt
cs
fsubr
lock
loopne
fs
pop
push
movsb
jmp
dec
insb
mov
jno
mov
push
shrb
sub
cmp
push
loope
adc
add
lcall
xor
add
movb
add
and
push
adc
push
cmp
jae
js
sub
stc
jae
pop
sub
stc
adc
sahf
popf
sbb
mov
push
and
fisttps
je
xorl
int
push
mov
mov
jne
xor
mov
ret
and
in
in
xor
and
or
xchg
cmp
and
dec
test
lods
jl
cwtl
cli
cmp
mov
bound
pop
sbb
jl
enter
es
jp
jl
test
or
ret
sbb
mov
cmp
jb
test
dec
dec
or
xor
out
sbb
sub
pop
push
lea
mov
jnp
jg
mov
xchg
lock
add
inc
clc
pushf
xor
jns
or
ja
rcll
mov
lfs
icebp
sarb
sbb
jae
dec
shrb
popa
jmp
mov
pop
and
outsb
out
push
jnp
xchg
push
outsb
out
aaa
shrb
or
push
fsubrl
arpl
and
adc
enter
aas
push
mov
adc
test
out
or
fstps
pop
add
inc
inc
ds
test
test
xor
fmul
scas
nop
cmp
mov
ds
and
sbb
and
mov
setae
add
sbb
and
insl
push
mov
pop
iret
stos
pop
daa
add
clc
sub
xor
sti
lock
xchg
sbb
and
pusha
cmp
in
enter
popf
push
dec
mov
add
mov
fcoml
sbb
inc
into
mov
push
add
fists
roll
movsl
out
xchg
aas
aam
or
inc
push
mov
xchg
out
rcr
adc
mov
lock
mov
dec
xlat
mov
push
sub
test
pop
mov
add
pop
mov
fwait
pop
cmp
out
cmpsb
add
inc
negl
xor
notb
sub
mov
daa
stos
cltd
mov
jbe
dec
adc
movl
push
jecxz
jb
mov
ror
call
xchg
imul
in
dec
push
pop
inc
adc
jle
inc
adc
leave
mov
jge
adcl
cmpsb
xchg
clc
push
mov
fistpll
dec
mov
popf
push
hlt
loopne
cld
sub
dec
sahf
push
aas
xchg
nop
jle
mov
insl
xor
aam
fcoms
xchg
aad
mov
push
jl
mov
sbb
nop
jo
jmp
adc
push
push
jmp
je
inc
fnsave
sbb
push
adc
mov
sbb
test
jnp
jbe
data16
pop
pop
mov
or
push
sub
call
xchg
mov
in
loop
dec
jae
mov
jle
xor
repnz
xlat
pop
xor
cmp
loope
stc
add
cmp
in
dec
fldcw
mov
rcr
xor
cmp
repz
xor
pop
and
inc
dec
imul
into
sub
inc
pop
xor
mov
jmp
icebp
xor
idivb
lea
mov
sbbl
push
pop
or
int3
in
push
mov
in
mov
cmpsl
out
ret
mov
lret
lcall
mov
fs
aas
ja
dec
cltd
mov
aaa
dec
inc
push
sub
adc
jge
fidivrs
pop
mov
jae
xor
ja
repnz
add
xor
ds
xor
add
mov
js
out
enter
call
cltd
and
outsb
push
out
pushf
hlt
mov
fmul
xor
fs
mov
rcll
mov
sbb
aad
imul
add
xor
loope
xchg
mov
push
dec
fdivl
roll
mov
les
scas
jno
inc
xor
dec
jg
jmp
movsb
mov
mov
dec
das
lret
cmc
insl
mov
ljmp
sub
jge
dec
movsl
mov
jge
aas
cld
cmpsb
dec
lds
dec
jp
jbe
mov
cld
sbb
lret
rcr
bound
lcall
ss
pop
mov
xchg
xor
in
mulb
jmp
inc
adc
dec
stc
mov
cs
jecxz
pop
inc
xor
dec
rcrl
jl
xor
ja
jecxz
adc
movsb
pop
lds
mov
cmpsb
roll
ret
mov
call
adc
mov
push
inc
cmpsl
loopne
jp
dec
push
ficomps
movsl
mov
inc
icebp
jp
cli
jae
lahf
stc
movsb
ret
dec
jge
inc
jg
push
jb
int3
inc
ret
jns
pop
and
xor
mov
xchg
sahf
mov
andb
sahf
jno
mov
les
movsl
jno
cmc
or
inc
hlt
jle
pop
les
mov
inc
lods
inc
or
jge
sbb
xor
nop
mov
popa
adc
adc
dec
adc
mov
aad
cmp
int
ljmp
pop
dec
or
jno
inc
les
cmpsb
jns
loopne
sbb
out
ljmp
inc
add
pop
hlt
fisubrl
lods
jmp
mov
bnd
push
sub
push
mov
out
cs
add
scas
dec
jmp
xor
bound
xchg
adcl
jge
fidivrs
sbbb
lods
inc
in
bnd
dec
je
in
imul
sti
fisubs
sbbb
call
pop
icebp
bound
daa
cmpb
leave
and
jmp
xor
es
in
fcoms
pop
into
cmpsb
dec
fldl
iret
addr16
decl
nop
dec
pop
mov
push
push
fwait
aam
icebp
scas
lods
scas
iret
dec
mov
sbb
mov
fldl
cmp
pop
outsl
ljmp
mov
inc
lahf
sahf
jb
ljmp
cmpsb
xchg
test
adc
push
pop
mov
or
push
cli
cs
aaa
orb
repnz
int3
xor
sub
lds
lret
mov
out
jmp
adc
dec
fnsave
push
popf
sub
int
inc
add
enter
mov
pop
fcomps
scas
pusha
outsl
jns
scas
sbb
inc
and
mov
mov
inc
int
xlat
stc
mov
pusha
jne
mov
pusha
icebp
mov
setl
pop
jo
xchg
testl
out
cwtl
divb
xchg
jae
xchg
jmp
xchg
lcall
jmp
jae
fincstp
test
jno
sbb
mov
repz
sub
xchg
cmpsb
cmp
or
movsb
int
test
pushf
clc
push
out
pop
xchg
dec
mov
out
pop
jne
inc
and
jecxz
sbb
add
add
lcall
mov
fwait
or
push
mov
scas
fdivrl
ja
dec
insl
es
imul
or
adc
push
mov
imul
jb
scas
adc
test
or
pop
decb
mov
xor
dec
jp
stos
das
xor
pop
fidivrl
popa
jae
push
stos
andl
adc
push
add
hlt
aam
repnz
add
push
imull
xchg
out
lret
cli
xor
iret
xor
fildl
add
sub
lds
sarl
jmp
cmpsb
jns
pushl
xchg
push
or
dec
push
xor
iret
nop
mov
or
dec
out
mov
mov
aam
cmp
sbb
je
adc
dec
jns
lret
mov
cmp
arpl
andl
sub
inc
pop
push
sahf
pop
push
les
sbb
or
sub
ss
ret
and
mov
pop
adc
mov
lock
scas
repnz
aaa
cmp
jg
xchg
push
cmp
push
xchg
faddp
pop
push
cmpsl
xchg
ds
dec
mov
fisubl
mov
insb
clc
ja
and
jne
cmp
popa
aad
cs
lcall
rcrb
add
fimull
add
add
cmp
or
ja
cli
ret
insl
xor
jmp
dec
ds
fnstsw
mov
sbb
in
imul
int3
test
xchg
inc
cmp
outsb
push
xchg
adc
cwtl
and
sar
pop
imul
jle
sub
adc
mov
ds
and
out
lock
mov
stos
int
cmpsb
dec
jne
mov
xor
push
jbe
insb
xor
sbb
pop
or
mov
in
pop
cltd
cwtl
and
stos
jge
ror
sbb
jno
xchg
cmp
psubsw
push
xor
not
jmp
fcoml
cmp
pop
sub
ja
adc
aaa
jge
cli
mov
aaa
jae
mov
dec
ss
adc
lods
mov
imul
adc
jp
cmp
test
pop
dec
cs
inc
je
xchg
mov
lds
repnz
jg
fcom
cmpsl
or
fwait
mov
fstl
pop
sbb
inc
test
test
fwait
or
inc
jb
test
push
xor
lock
les
push
mov
shrl
push
mov
cmp
movl
sarl
inc
jno
jo
cs
lcall
pop
inc
test
movsb
add
mov
hlt
dec
jl,pt
and
pusha
xchg
decl
out
or
sub
inc
xor
clc
out
sahf
pusha
fs
lods
rorb
pop
bnd
imul
push
pop
and
in
pusha
addr16
stos
shlb
out
adc
pop
push
dec
shl
test
aas
push
push
fcmovnu
orb
or
mov
push
lea
daa
xchg
das
clc
insl
mov
call
insl
mov
add
mov
int3
notb
and
mov
orl
mov
mov
cmp
jbe
xchg
and
in
mov
lea
dec
call
inc
repz
jbe
adc
mov
mov
push
mov
repz
and
popa
je
clc
or
jg
inc
adc
jecxz,pt
loop
dec
out
repz
xchg
or
dec
shrb
rcr
fadds
xor
out
sub
push
or
adc
data16
inc
adc
or
jg
fwait
sbb
bound
mov
cmpl
add
out
sub
stc
push
mov
movsl
lds
jge
rcrb
mov
cld
out
int
rcrb
insb
mov
imul
fidivl
and
sbb
fs
lahf
mov
jbe
out
ret
cmpsl
inc
dec
xor
int3
xchg
addr16
scas
out
sbb
or
mov
testl
fildll
and
xor
jns
leave
cmp
popf
xor
inc
or
push
aaa
jbe
or
loop
mov
scas
dec
jo
movsl
shlb
cmp
and
dec
std
dec
fildl
outsl
aaa
cmp
jmp
pop
insl
push
cmp
push
xor
fdivrs
jmp
inc
gs
mov
jmp
jno
jp
push
dec
cli
pop
fdecstp
aaa
fadds
xchg
push
dec
fisttpl
into
push
shl
adc
popf
popa
inc
cltd
inc
sub
mov
orb
inc
jo
ss
dec
xchg
jb
int3
fsubrs
adc
push
mov
data16
or
loop
loopne
push
push
cmp
mov
jl
scas
in
mov
mov
or
lea
aam
in
jg
jbe
sbb
mov
mov
lods
and
sti
hlt
sbb
xor
inc
pop
pop
jo
repz
xchg
shl
mov
sbb
mov
jnp
mov
out
jnp
xor
and
insl
dec
loop
out
xchg
xchg
xchg
nop
nop
hlt
xor
inc
test
and
jns
hlt
call
pushw
mov
call
adc
movsl
daa
fidivl
sub
mov
jp
ret
mov
pop
inc
lds
xchg
ret
orb
scas
in
out
cmc
test
dec
xor
fdiv
xor
mov
pop
xchg
sub
lret
cmp
xor
inc
mov
add
fimull
enter
movsl
xor
dec
add
jo
sti
ds
or
loopne
int3
sahf
adc
cwtl
push
out
fldl
and
data16
movsb
out
pop
das
gs
pop
lcall
inc
adc
jg
sbb
inc
into
adc
ret
loope
jo
aas
jae
xchg
lret
notl
push
ljmp
mov
xor
icebp
push
test
jnp
xlat
nop
loope
sarb
lret
dec
lods
sbb
xlat
or
imul
pop
inc
push
xor
adc
cmp
mov
or
adc
xchg
jo
mov
xchg
or
sub
jmp
sti
and
nop
aas
sub
roll
jns
mov
mov
stc
sub
int3
cltd
popa
cwtl
jnp
lret
jmp
andl
popa
shrb
mov
fisttps
cmp
mov
jbe
fisttps
push
scas
jl
fsubl
push
xchg
in
xor
ja
or
jmp
or
mov
pop
aam
shll
dec
and
inc
push
mov
rcrb
push
sbb
and
inc
cmp
lods
daa
leave
outsb
repnz
push
mov
sub
insb
xchg
and
sbb
imul
and
mov
push
call
add
xchg
mov
mov
cmp
scas
nop
popa
pop
push
lret
xadd
sub
imul
adc
xlat
xor
je
or
sbb
aad
pushf
rorl
and
jg
dec
pop
xor
push
gs
outsl
mov
adc
lock
pop
imul
jno
call
test
sub
and
repnz
test
dec
adc
sbb
gs
and
lock
xor
rep
mov
xchg
ret
jmp
cmp
and
cmp
into
lock
fldenv
pop
dec
mov
sar
jo
dec
out
repz
push
inc
add
iret
push
push
out
xchg
das
in
nop
pop
push
mov
je
add
jo
jne
jo
inc
adc
jae
and
push
loope
inc
push
sbb
mov
jnp
adcb
std
xorb
aad
cmp
iret
add
jp
mov
push
or
xchg
push
pop
cmp
xor
lret
add
in
or
xor
or
sub
mov
loopne
lret
inc
cltd
into
cmpsl
aaa
leave
lds
push
js
and
sbb
pop
ret
push
xor
shl
mov
dec
sbb
push
pop
mov
movl
pop
icebp
aam
in
lcall
pop
arpl
lods
insl
fnstsw
xchg
add
dec
loopne
or
pop
sahf
inc
loop
cmp
leave
mov
pop
int
dec
mov
pop
imul
xor
pop
data16
mov
mov
xor
xlat
out
ret
cltd
mov
add
and
pushf
dec
lods
shr
popa
dec
scas
inc
or
imul
fdiv
scas
jg
mov
jns
jno
testl
pop
out
push
test
xor
push
mov
mov
std
aaa
stc
int3
jo
lret
orb
lcall
inc
int
leave
jnp
lea
push
mov
lea
and
in
sbb
insb
and
loope
push
out
adc
std
mov
xchg
stos
push
xchg
stos
mov
pop
push
les
hlt
stc
add
pop
xorl
popa
push
loop
sub
sub
in
jmp
mov
data16
jg
mov
inc
push
imul
add
add
xchg
sub
ss
loop
mov
pop
push
lcall
popl
mov
and
mov
dec
dec
lock
les
scas
mov
pop
cmpsb
add
push
je
push
fdivl
adc
inc
popl
xchg
icebp
jl
xor
push
sbb
mov
pop
int
fimuls
xor
xor
adc
and
jbe
inc
insl
insl
sub
pop
and
popa
add
sub
movsl
ret
mov
dec
addr16
push
movsb
dec
pusha
push
test
mov
frndint
frstor
nop
push
mov
ret
sub
jge
sbb
rorl
jmp
cmc
push
inc
pop
jmp
push
lock
imul
cs
outsl
xchg
add
jbe
insl
xchg
sub
data16
xchg
inc
dec
mov
add
dec
or
xor
push
bound
std
inc
arpl
push
cmp
dec
adc
push
loope
mov
add
mov
inc
cmc
mov
push
mov
push
mov
mov
xor
adc
xor
lods
lcall
pop
cmpsl
xor
fs
test
sbb
dec
jo
stos
arpl
test
stos
gs
mov
fbstp
aaa
xchg
cld
cmp
in
xchg
jnp
mov
call
dec
cmc
testb
pop
dec
xchg
sub
lea
pop
pushl
add
movq
push
mov
ret
jbe
movsb
cmp
mov
inc
cmp
fldl
shlb
mov
pushl
stc
inc
lds
add
lahf
pop
movsb
fs
cmp
jbe
adcb
test
dec
inc
idivb
sub
xchg
cs
mov
jle
pop
push
jnp
or
aam
xchg
test
in
xchg
xchg
mov
or
mov
dec
data16
scas
shlb
xchg
stos
mov
push
les
lcall
std
call
mov
jbe
mov
scas
xchg
jmp
dec
mov
out
fndisi(8087
sub
ja
aas
xor
and
into
test
mov
leave
mov
jne
inc
test
cmpsl
sub
loop
jg
mov
popa
test
add
iret
mov
mov
jnp
add
scas
pop
push
lahf
ja
push
jno
hlt
arpl
push
cltd
jle
pop
roll
jecxz
mov
mov
adcl
add
or
push
bound
leave
sahf
test
insb
add
xchg
pop
push
sbb
lcall
cltd
mov
rcrb
push
sbb
fnsave
sbb
ljmp
repz
sub
inc
out
dec
push
sbb
out
ljmp
fidivrs
jecxz
xor
test
icebp
sub
repnz
mov
int3
inc
push
adc
test
jmp
aaa
iret
jne
mov
std
xchg
popa
push
sbb
dec
xchg
rcrl
and
xchg
je
or
iret
pop
xor
mov
push
or
xchg
cmp
fs
and
hlt
mov
add
push
in
adc
outsb
or
das
lret
mov
pop
test
add
mov
mov
push
xchg
stc
and
hlt
ja
sub
jle
mov
sub
test
hlt
out
ret
pop
fsubr
jbe
and
nop
cmp
jne
sbb
incb
outsl
movsl
fmuls
mov
pop
push
pop
and
sub
ret
pop
decl
jg
fnstenv
xor
inc
je
or
in
xor
in
push
push
jne
or
pop
sub
and
outsl
outsl
je
shld
int3
inc
out
arpl
fbld
add
orb
xor
aam
fs
pusha
test
cmc
cmp
and
add
pop
mov
or
mov
nop
les
arpl
rcl
mov
mov
mov
fiadds
std
mov
lretw
xor
fcoml
inc
scas
sbb
push
inc
popa
xor
pop
dec
mov
add
out
pop
lods
sub
ficoms
cmp
sbb
insl
push
push
gs
outsb
pop
sar
or
int
cmp
push
add
pop
fs
insl
data16
add
cmpsb
jns
test
push
lret
popa
mov
dec
bound
xchg
lret
sbb
mov
and
out
int3
jno
rorl
in
test
jae
pop
lret
jns
and
lahf
arpl
push
nop
jmp
fadd
mov
dec
popf
mov
loope
nop
mov
sbb
xchg
aam
push
iret
test
and
in
dec
push
mov
nop
xor
add
xor
push
sti
dec
mov
sub
inc
and
mov
gs
inc
xlat
adc
mov
shl
adc
out
mov
fmul
mov
pop
cmp
push
mov
cmpsl
xchg
sarb
xor
and
loopne
xor
pop
mov
ljmp
pop
jns
adc
int3
std
pop
mov
mov
push
adc
mov
in
dec
out
das
add
push
lret
jb
jo
out
ljmp
mov
cvtpi2ps
mov
push
mov
aam
pusha
jle
xchg
fidivs
xchg
cmp
push
rolb
test
sub
cwtl
inc
mov
cs
mov
fmull
cli
jecxz
jae
jecxz
jb
into
add
sbb
stos
add
push
push
sbb
insl
inc
cmc
pop
popf
iret
cwtl
fistps
adc
rcr
fbstp
sbbb
enter
add
sub
in
loopne
jns
rolb
dec
mov
xchg
xchg
jnp
pop
and
pop
sub
es
imul
cmp
push
mov
and
leave
ss
mov
xor
dec
push
sub
push
mov
jb
ret
push
mov
icebp
adc
add
mov
push
xchg
add
shr
iret
popa
cltd
cmpsl
test
or
xchg
out
pop
rcrb
lea
mov
scas
xchg
pushf
dec
iret
xchg
insl
adc
lds
and
dec
mov
inc
lahf
or
xor
mov
lret
mov
xor
fwait
push
in
inc
lret
jo
imul
push
fdivrl
notb
shrl
inc
dec
xor
cmp
fcoms
test
or
pop
loope
out
add
popa
jge
xchg
movsb
mov
and
aad
xor
xor
gs
call
pop
mov
rolb
or
mov
mov
dec
sbbl
aam
mov
mov
mov
cmpsl
mov
int3
int
xchg
pop
cltd
cmp
fnsave
aas
pusha
push
hlt
adc
fistpll
or
adcb
cmpsb
movsb
sub
sbb
ljmp
hlt
fnstsw
adc
fldl
adc
lsl
mov
or
movsb
or
rcr
sub
out
pusha
push
fwait
jno
out
add
mov
and
cmp
push
sub
out
pop
mov
lods
fwait
pop
mov
popa
outsl
mov
push
sbb
push
mov
dec
sbb
sub
in
testl
movsl
into
jbe
adcb
or
nop
ds
jnp
subl
push
mov
inc
cmp
std
mov
sub
cmpsb
jo
jne
scas
cmpsb
mov
addb
lock
add
lahf
mov
sub
jo
idivl
loopne
sub
bound
outsl
xchg
enter
ja
loop
test
outsl
jnp
mov
aad
xchg
adc
adc
xchg
push
shlb
add
mov
pop
sub
mov
ds
push
jo
push
loope
iret
sbb
pop
popa
or
pop
jns
loop
cmp
push
inc
push
and
xchg
add
outsl
call
or
lcall
dec
xor
or
mov
arpl
data16
stos
mov
mov
repz
call
xchg
mov
test
xchg
and
cli
push
pop
ret
jge
add
xorl
inc
push
add
inc
adc
lds
sub
fbld
push
push
inc
adc
popa
pop
jbe
or
addr16
jne
pop
pop
fs
int
movb
leave
in
lcall
imul
mov
ljmp
mov
mov
ret
adcb
xlat
ret
sahf
cli
inc
add
loopne
fildll
imul
or
negb
cmpsl
dec
test
insl
ss
inc
mov
out
inc
test
sbb
push
test
fsubs
mov
mov
push
push
xlat
dec
cmp
push
xor
mov
pop
imul
xchg
bound
or
daa
mov
aas
and
rolb
fisttpll
push
mov
adc
mov
ret
push
sbb
xor
adc
jg
mov
lock
xchg
mov
mov
cmc
mov
out
dec
aaa
pop
in
mov
xchg
movsb
aas
lock
lods
popf
dec
out
sbb
add
je
loop
dec
push
dec
scas
dec
cmp
push
cmc
in
movq
cmpb
jo
pop
cmp
inc
aad
sarl
and
loop
mov
xor
addb
xchg
inc
pop
insl
cltd
xor
cmp
sub
sub
adcl
loopne
inc
nop
cmp
pop
adc
das
or
adc
or
pop
or
add
push
or
xor
fistl
out
out
frstor
add
mov
call
mov
in
xchg
jg
lahf
les
rorl
movsb
add
adc
and
fimull
ja
xchg
bound
sub
repnz
stc
sbb
sub
shll
lock
dec
cld
aad
push
add
pushf
pushf
nop
outsb
cwtl
cmp
jnp
fstps
and
cmp
xchg
jbe
pop
mov
dec
fistpl
jl
leave
mov
mov
or
mov
jns
push
mov
mov
mov
in
pop
pop
scas
cs
pop
lods
pop
idivb
mov
jmp
xor
sar
bound
dec
inc
jecxz
arpl
mov
nop
scas
inc
push
imul
andb
rcl
jge
adc
pop
dec
or
mov
cmp
or
push
andl
and
push
xorb
scas
sub
rol
jnp
jbe
and
daa
mov
xchg
jo
mov
dec
cmp
jnp
pop
mov
repnz
pushl
cmpsb
inc
fbstp
fs
xor
mov
icebp
mov
fistpll
xor
jno
lock
lods
lret
lock
xchg
shll
enter
std
inc
xchg
mov
add
adc
outsb
adc
jecxz
imul
and
scas
scas
insl
and
fwait
mov
daa
inc
jbe
ret
and
inc
aad
stos
lret
lahf
sbb
notl
jle
or
xchg
arpl
dec
lea
mov
cli
js
or
fcmovb
mov
pop
daa
stc
pop
push
mov
inc
and
cmpsb
test
ljmp
scas
xor
data16
lock
ffreep
jle
xchg
jle
mov
nop
aas
faddp
cmp
or
int3
xchg
pop
xor
popa
lret
pop
js
dec
cwtl
cmpsl
call
push
mov
push
mov
dec
jmp
xchg
imul
in
add
ret
shrb
fdiv
filds
dec
xor
fs
inc
add
sbb
cwtl
cmpsl
push
les
mov
xchg
fbstp
std
ss
adcb
mov
add
leave
push
add
add
mov
inc
mov
test
mov
push
lret
shrb
ja
and
mov
lahf
outsb
ja
jae
js
push
jo
leave
cmp
dec
sbb
cmc
dec
ret
push
ja
pop
movd
sub
dec
jbe
call
imul
or
insb
cmp
push
cmp
jno
out
jbe
bnd
idivl
stc
inc
mov
daa
outsl
out
out
rol
cwtl
xor
push
pop
push
xchg
in
adc
ljmp
scas
xlat
sbb
lret
clc
test
sub
dec
daa
daa
std
call
ret
pop
add
ficoms
jle
sbb
cmc
fucom
add
push
add
shrb
jg
pop
lret
dec
and
pop
in
int3
jns
and
jge
push
lret
mov
dec
dec
jecxz
xchg
push
ljmp
sub
mov
push
repz
cld
and
imul
mov
and
imul
mov
pop
sbb
push
jmp
xor
in
adc
mov
repz
insb
jmp
push
test
mov
les
dec
hlt
sub
mov
ljmp
push
out
mov
pushf
cmpsb
pop
test
mov
insl
test
push
js
test
mov
dec
in
mov
fdivrs
and
mov
aas
dec
imul
push
adc
jecxz
jno
or
mov
xchg
lcall
cltd
jle
sub
xchg
mov
in
ja
out
xchg
fdivs
pop
or
rclb
cmp
ret
inc
inc
mov
push
test
dec
adc
stos
arpl
hlt
cld
mov
push
jns
cld
js
sub
add
dec
inc
dec
inc
cmc
outsb
test
in
arpl
and
test
jl
mov
jecxz
push
fldcw
xchg
cmp
push
filds
sub
lret
mov
inc
inc
sub
jl
jp
pop
stos
push
xorb
std
pop
and
lret
mov
cwtl
fs
in
icebp
dec
subl
xor
jl,pt
dec
in
xor
and
repz
out
mov
imul
sbb
and
ljmp
mov
add
pop
ret
jns
sarb
div
daa
xor
sarl
inc
sub
ljmp
cwtl
cltd
and
scas
push
inc
out
pop
cmpsl
jns
and
mov
sbb
les
sub
pop
mov
jnp
mov
push
sbb
xor
push
mov
orb
aas
cmpsb
test
sahf
mov
mov
data16
dec
ljmp
int3
insl
es
mov
std
imul
dec
out
in
lret
jmp
adc
adc
in
ds
in
dec
sub
mov
std
push
cmp
lcall
repz
add
cmp
hlt
mov
nop
fadds
sub
pop
lods
pop
add
add
pop
or
decl
jbe
js
push
loop
sub
and
imul
stos
ret
xchg
loope
cmp
inc
xchg
loop
test
adc
pop
out
ljmp
loope
sahf
movsl
loop
mov
lods
rolb
cmp
push
and
mov
scas
fisubrs
insb
insb
mov
inc
inc
xlat
fsts
lods
das
int
push
sahf
les
aas
xor
imul
dec
mov
jp,pt
movsl
pop
nop
mov
pop
mov
jl
xor
aam
popa
psubq
mov
popa
out
nop
sub
cmp
mov
in
enter
cltd
and
cmp
subb
ss
cmp
rcrw
mov
fisttpll
das
cmp
mov
sub
int3
popa
push
xor
ss
lahf
sub
movsb
fldcw
push
adc
mov
sbb
cmp
push
stos
enter
pop
pusha
xor
push
jl
dec
ds
mov
pushl
enter
data16
cs
lods
push
mov
ror
mov
inc
int3
pop
mov
sti
dec
adc
movsb
fwait
subb
cmp
sbb
jp
retw
push
sahf
or
inc
lock
mov
sub
push
hlt
push
outsl
cmp
das
int
sub
pop
rorb
cmpsl
into
sub
ficompl
jno
pop
xchg
sbb
in
daa
add
cmpsb
pop
pop
jne
mov
cmp
fs
sub
cltd
jp
xchg
pop
stos
in
imul
pop
inc
repnz
lea
aas
mov
in
sbb
in
mov
push
cmp
dec
xchg
leave
orb
sbb
sub
and
dec
cmp
xor
into
sbb
jle
and
push
inc
aam
movsl
fwait
aaa
jne
mov
sbb
jmp
je
pop
or
out
sbb
rol
inc
aam
movsb
loop
add
pop
movsl
xor
pop
cmp
mov
test
mov
setae
mov
mov
cmpsl
ret
xor
jbe
aam
ret
and
je
sbb
push
or
dec
xchg
mulb
je
mov
dec
jne
pop
fnstcw
cmpl
sbb
mov
mov
mov
or
pop
icebp
sarl
fdivrp
shlb
movsb
mov
inc
shlb
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
incl
mov
stos
mov
inc
decl
gs
leave
add
decl
mov
clc
decl
mov
clc
decl
mov
clc
dec
add
mov
popf
imul
jge
add
xor
jns
daa
jg
pop
jle
push
fbld
lds
les
fdivr
or
movsb
mov
pop
iret
mov
add
cmp
cmc
push
je
adc
add
repnz
push
imull
mov
lcall
pop
js
pop
aam
mov
sub
adc
popf
xor
xchg
fs
repnz
push
dec
inc
iret
insl
test
mov
loop
outsl
icebp
jns
imul
inc
sbb
push
sbb
incl
inc
sbb
mov
pop
leave
add
decl
data16
clc
adc
mov
lods
mov
inc
decl
mov
mov
sbb
add
or
mov
clc
scas
add
hlt
int3
add
decl
gs
leave
add
decl
mov
clc
decl
mov
xchg
cld
or
gs
pop
leave
add
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
mov
stos
gs
sbb
add
decl
popa
mov
lret
mov
stos
mov
lea
sbb
add
hlt
or
gs
leave
add
decl
mov
sbb
or
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
mov
clc
decl
or
sbb
cs
clc
out
or
adc
out
in
fisubrl
scas
aas
add
xchg
xchg
adc
dec
jmp
insb
dec
roll
sbb
testb
outsl
lds
sbb
sbb
jb
popa
pop
arpl
cmp
push
mov
scas
dec
inc
hlt
pop
sbbl
xchg
xchg
jecxz
dec
jge
out
cmp
sub
adc
mov
mov
dec
mov
adc
cmpsl
mov
leave
orl
mov
pop
outsl
das
inc
shll
xchg
int3
pop
in
cmpsb
and
add
sub
repz
insl
into
inc
mov
int
and
insl
dec
fs
stos
idivb
pop
fdivs
lret
ja
push
mov
loopne
jo
jmp
js
jl
insl
sub
jnp
ss
push
mov
xchg
out
les
add
mov
stc
mov
test
test
clc
sub
lods
xchg
mov
pushf
leave
add
dec
rcrb
lret
in
add
inc
inc
mov
std
aam
sub
es
sub
jl
arpl
and
aam
and
rcl
pop
mov
notb
inc
ret
xchg
jp
movsl
ss
and
mov
repnz
std
xor
movsb
push
faddl
pop
pusha
cmpl
dec
push
mov
neg
pushf
adc
js
dec
sbb
jns
or
sahf
mov
pop
dec
jmp
and
adc
dec
out
int
lcall
in
fidivrs
lret
inc
push
lret
and
movsl
jl
cmpsl
jle
mov
push
pop
pop
pop
in
inc
cli
clc
in
push
mov
pop
mov
sbb
repnz
in
shlb
aaa
xchg
shr
outsl
jmp
enter
addr16
xlat
mov
gs
stos
inc
cmp
add
adc
inc
rol
jno
mov
loopne
xchg
loope
dec
mov
xchg
jmp
shlb
cs
in
mov
rorl
mov
add
jecxz
or
cltd
push
cmc
hlt
xchg
mov
pop
xrelease
leave
pop
inc
jmp
xchg
faddl
gs
and
dec
sbb
mov
mov
cmp
sbb
push
jp
fldt
loopne
rol
mov
repnz
cmpsw
sti
iret
add
stos
push
and
xchg
or
inc
aaa
push
dec
push
push
or
mov
ret
add
or
stos
and
sbb
scas
fwait
setge
popa
sub
pop
ljmp
or
in
mov
push
cmp
clc
in
mov
jbe
je
inc
mov
inc
mov
inc
nop
jg
xchg
xor
insl
test
orl
lods
rorl
or
fs
dec
je
pop
mov
add
dec
add
fisubl
les
xchg
inc
or
outsl
iret
dec
mov
movsb
fucom
or
faddp
inc
xor
sub
pop
ss
je
inc
mov
lods
mov
jnp
and
xor
xchg
jle
hlt
and
scas
dec
cltd
xorl
jbe
out
xor
fcomip
lea
inc
cwtl
sbb
add
repz
mov
aaa
or
into
mov
outsl
mov
and
pusha
insb
dec
mov
stos
add
fiadds
nop
inc
and
or
inc
mov
popa
inc
and
aaa
es
sbb
mov
sbb
shr
dec
add
outsb
pop
test
sub
jbe
leave
jo
bnd
loop
cmp
fsubrl
repz
sub
loopne
lret
or
mov
addr16
aam
add
rol
es
out
arpl
out
add
add
cmp
pop
push
push
aas
into
dec
popf
fsubr
lea
ljmp
clc
popf
fs
addr16
sahf
push
or
cmp
xchg
test
sbb
cld
loopne
outsb
pop
stos
std
movzwl
pop
rcll
cmp
jg
aas
in
fdivrl
push
movsb
mov
test
nop
push
push
adc
jno
push
stos
jmp
jns
mov
lock
adc
sar
out
fstps
adc
cmp
push
xorl
stos
xchg
lods
adc
pop
out
aam
push
pusha
xor
xchg
mov
sahf
stos
cltd
addl
and
lock
loopne
popf
mov
or
push
cs
pop
icebp
scas
pusha
cltd
addr16
xor
out
lock
mov
stos
mov
mov
mov
xor
sub
push
mov
mov
daa
mov
adc
jnp
cltd
mov
mov
push
incb
add
fnstsw
lods
int3
mov
push
mov
pop
negl
adc
lret
pop
jmp
adc
dec
and
cmpb
sbb
loope
aas
xchg
imul
lret
jns
insb
push
inc
push
push
push
sti
test
stos
mov
mov
push
mov
scas
xor
sub
jge
add
psrlw
or
cmp
call
into
inc
pop
sahf
jns,pn
xor
out
ja
lock
pusha
mov
lds
sbb
addb
push
cli
mov
xor
mov
mov
adc
stos
push
test
jb
jbe
add
into
sub
or
lret
dec
xchg
inc
fnstenv
jbe
addr16
cmp
xor
push
cmp
test
aam
lret
std
mov
inc
scas
mov
push
pop
jne
and
bound
imul
icebp
lods
ljmp
mov
in
push
push
push
sahf
cmpsl
daa
lret
loop
push
aaa
mov
test
pop
fsubrs
sahf
xor
xchg
mov
mov
cmp
sar
mov
testb
gs
pusha
insl
in
lds
dec
inc
mov
cmp
clc
cmpsl
scas
inc
test
inc
jb
cmovge
inc
lock
jno
fiadds
xchg
cmp
aas
gs
fwait
jg
inc
pop
lds
out
mov
jecxz,pn
or
push
lods
jo
xchg
mov
add
push
push
xchg
test
xor
sbb
int3
dec
lea
lret
xchg
inc
shlb
ret
packuswb
insl
sbb
sbb
mov
popf
add
push
mov
adc
xchg
inc
clc
and
mov
push
mov
cmpsl
pop
int
or
rolb
inc
js
add
outsb
pop
lods
popf
int
add
sub
cmpsl
jbe
stos
leave
incl
push
and
aam
sbb
add
cmp
jge
test
adc
repnz
incb
mov
gs
jbe
daa
icebp
xor
mov
mov
sarb
jecxz
pop
test
test
sbb
add
loope
imul
ss
sub
xor
mov
ret
mov
xor
xor
pop
andl
bound
push
xor
push
jae
es
imul
jnp
jle
add
lret
aas
pusha
inc
sub
nop
and
sub
scas
sub
push
xor
push
push
iret
int
aam
sub
mov
xchg
dec
jnp
inc
cmc
push
jg
inc
pop
enter
cli
dec
jne
jecxz
adc
inc
lds
ret
les
test
test
bound
mov
addr16
cli
inc
dec
push
sub
aam
cmp
adc
push
push
in
mov
mov
mov
nop
stos
inc
or
out
popa
and
sbb
repnz
test
fisubrl
xchg
mov
jne
popa
add
aas
mov
add
fcoms
xchg
push
sbb
mov
sub
mov
lret
pop
icebp
mov
pushw
mov
xchg
xor
lods
inc
out
bound
push
fdivs
mov
xchg
push
rcrl
adc
xchg
jb
mov
nop
xor
jbe
adc
rorb
sbbl
mov
mov
mov
in
popf
das
outsb
dec
dec
jae
in
sbb
test
mov
pop
jno
xchg
test
mov
xorb
outsl
outsb
inc
leave
push
iret
jno
movsb
jno
sbb
out
sbb
mov
pushf
pop
mov
mov
fbstp
sbb
lock
ss
xlat
push
gs
adc
push
sub
adc
inc
push
mov
mov
insl
pop
mov
and
nop
dec
test
inc
cmp
frstor
mov
rcll
push
sub
jge
mov
and
add
add
pushf
jge
pop
shl
xor
mov
ss
mov
mov
adc
insl
or
mov
int
rol
sub
call
loopne
add
insl
loopne
cmp
iret
mov
repz
jbe
jge
mov
mov
pop
aad
mov
iret
imul
jge
xlat
mov
mov
movsb
mov
test
lahf
pop
jns
int3
rcll
fsubrs
and
mov
pushf
and
push
scas
xor
and
sub
test
in
nop
testl
mov
and
xchg
outsl
imul
shll
ret
je
cmpsl
out
fbstp
sub
xchg
push
lcall
push
ret
sbb
call
push
movsb
and
les
jns
repz
xchg
andl
sbb
xchg
sbb
mov
xlat
cwtl
loope
fstl
sbb
fwait
mov
je
and
cli
mov
add
push
in
cmp
rcrl
jg
cmp
loop
jl
rol
jmp
push
push
mov
jb
iret
xlat
mulb
movsb
call
test
in
cs
repnz
push
cmp
pop
dec
jb
xchg
nop
faddl
dec
xlat
sidtl
in
cs
dec
std
cmp
jb
jl
jno
sahf
and
mov
mov
lods
push
int
or
jno
mov
in
fidivl
sub
loope
add
in
js
mov
cmpb
lret
out
repz
aas
nop
fcmovnb
and
push
das
in
in
stos
add
push
cltd
lret
out
sbb
fsubl
or
rcll
cltd
jge
xor
adcl
mov
cld
sbb
xlat
dec
andl
xchg
lahf
outsb
js
daa
mov
cs
push
adc
xchg
adc
test
gs
sub
mov
adc
fiaddl
ret
popa
lds
mov
lcall
mov
xor
pop
dec
in
xorb
add
add
es
lds
cmpsb
inc
adc
jae
mov
clc
loope
inc
sub
xchg
jae
mov
sub
or
fnstcw
mov
mov
or
and
loopne
out
dec
mov
push
mov
dec
pushf
shl
ds
not
enter
gs
pop
adc
jg
loopne
imul
mov
xchg
ds
push
or
sahf
jbe
pop
jns
pop
fs
into
jg
xchg
jns
mov
lcall
jo
pop
aad
xchg
mov
xor
mov
xchg
cs
or
and
je
mov
pop
jge
add
mov
lahf
out
les
sbb
lret
outsb
sbb
cmpb
ss
jecxz
lcall
loop
xor
popa
jb
pusha
inc
out
sbbl
imul
sbb
ss
inc
sub
shll
shrl
xchg
and
adcl
push
xchg
jb
aad
pop
cmp
add
dec
lahf
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
