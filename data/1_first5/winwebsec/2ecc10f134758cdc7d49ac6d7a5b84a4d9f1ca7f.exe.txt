sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
push
call
lea
push
lea
push
call
test
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
push
push
push
call
movl
jmp
movb
movb
movb
push
call
pushl
pop
mov
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
mov
push
call
in
mov
insb
gs
lock
cmpsl
imulb
jo
cmp
cli
mov
jae
add
jno
insl
cmpb
das
jne
rol
cmp
mov
fldt
enter
ds
into
sub
shr
cltd
movsl
xor
mov
mov
inc
int3
and
mov
jg
inc
adc
adcl
pushf
and
and
adc
test
push
inc
inc
out
jmp
test
mov
arpl
xchg
jecxz
mov
imul
inc
push
mov
push
mov
test
dec
mov
out
mov
rclb
adc
sbb
dec
subl
jmp
mov
mov
inc
test
cld
xlat
arpl
push
imul
xor
and
mov
push
sbb
pushf
xlat
dec
das
mov
cmc
popa
jecxz
adc
push
pop
in
jns
js
inc
xchg
mov
mov
sub
cmp
dec
ds
adc
pop
mov
sub
ss
xchg
dec
sub
jae
mov
xchg
aas
mov
or
xor
add
mull
nop
sub
adc
jb
cmp
out
cmp
fnstenv
aas
xchg
push
jl
sbb
out
mov
mov
sbb
jbe
add
sub
push
sbb
lret
or
les
and
xchg
xchg
cmc
xchg
mov
jno
imulb
xlat
adc
aaa
sbb
gs
mov
popl
push
scas
xor
pop
and
lcall
push
xchg
inc
icebp
scas
test
push
arpl
or
and
cmp
in
jae
data16
adc
mov
pop
mov
jns
pop
std
cmp
pop
pop
hlt
std
cmp
and
icebp
mov
movsl
cmp
mov
nop
mov
mulb
push
cltd
sar
sbb
push
cli
sub
popf
call
mov
xchg
mov
in
loop
sub
jmp
jecxz
int3
test
xor
and
test
jae
popa
inc
inc
jecxz
dec
sub
adc
cmpsl
xchg
je
pop
mov
cmp
es
pop
js
adc
out
pop
in
xchg
sbb
in
repnz
sbb
dec
rorl
mov
ljmp
xchg
or
xchg
js
hlt
test
hlt
dec
jnp
js
ss
pop
dec
int3
cmp
imul
imul
pop
sub
sahf
je
sarl
int3
fnstsw
stos
sbb
push
sarl
xchg
or
pop
push
insb
pusha
jnp
dec
jo
inc
mov
neg
int
add
out
jnp
adcb
push
inc
lock
jmp
fldenv
icebp
xor
sbb
fsubrp
and
cmc
aaa
jmp
cld
aam
inc
add
ja
pop
pop
inc
fdivl
push
inc
sub
xchg
out
fstpl
pmuludq
cmpsl
cld
xor
dec
dec
sbb
jo
jmp
inc
movntps
sub
incb
and
repnz
loope
cmc
mov
push
in
mov
loope
jg
or
stc
inc
push
insb
xchg
das
add
fcmovb
cmpsb
push
cmp
mov
notl
sub
out
xchg
aaa
and
out
nop
popa
loopne
sbb
sub
xchg
pop
je
outsb
xor
fldlg2
xor
lods
adc
mov
dec
jecxz
add
xchg
cs
mov
sti
xor
daa
outsb
call
push
push
gs
mov
fdivr
fstpt
mov
xor
test
mov
leave
jmp
jg
sbb
popa
adc
and
jbe
and
push
xchg
pop
fxch
cmp
pushf
xor
jmp
push
jnp
subb
fldenv
loopne
jge
pop
pop
fisttpl
xchg
mov
dec
mov
mov
xchg
mov
fisubs
dec
sarl
das
push
cli
data16
jo
dec
xor
push
cwtl
js
ss
dec
sbb
cltd
cs
push
lcall
push
and
pop
add
mov
data16
es
mov
xor
adc
adc
mov
outsl
aas
insl
fistpll
jg
jecxz
clc
sbb
xlat
js
adc
aaa
cld
push
mov
call
divl
xorb
push
push
lods
and
lods
rcrl
mov
flds
mov
fcoml
mov
add
inc
pop
dec
scas
outsb
iret
push
xchg
lods
imul
fwait
push
dec
scas
adc
cmovae
cmp
add
mov
lcall
sub
fimull
ds
push
cli
scas
sahf
aaa
lds
adc
addl
sbb
cwtl
out
and
xchg
js
add
rcll
adc
cld
fs
lahf
fists
lcall
or
xor
repz
sub
shll
pop
jnp
cwtl
out
adc
mov
sub
mov
pop
jo
jmp
dec
leave
xchg
call
mov
orb
jns
add
call
sti
movsl
adc
cltd
push
outsl
subb
or
lods
pop
shll
loopne
xchg
daa
sbb
push
lret
ja
push
adc
stos
xchg
jl
add
xor
jge
jecxz
aas
popa
push
jb
add
out
xlat
pop
cmc
mov
pop
sahf
or
sub
addl
loop
lret
jbe
in
mov
cli
sbb
sbb
add
out
jge
sbb
jg
push
mov
adc
out
fisubl
and
ja
aas
xchg
ljmp
test
jecxz
mov
loope
lret
dec
aam
clc
shrb
enter
and
outsl
ret
clc
mov
test
adc
pop
das
jle
arpl
das
jb
push
xchg
and
inc
xchg
loop
fidivl
sbb
push
je
cwtl
xorl
cwtl
loopne
pop
sbb
out
xchg
xchg
or
arpl
xor
test
testb
fistpll
fmull
fcomps
dec
int3
xor
fistpl
push
push
push
cmpb
icebp
push
dec
mov
xchg
cmp
xor
xor
and
leave
enter
out
sbb
inc
jb
lods
xchg
aad
nop
mov
loopne
inc
cmp
inc
pop
xchg
jp
imul
test
inc
aam
jae
out
adc
addb
jns
add
pop
sti
stos
mov
mov
xlat
pop
xchg
inc
xlat
mov
loop
incb
sahf
lahf
mov
in
outsb
adc
mov
add
sarl
add
push
jno
ret
movsb
aaa
sbbl
rorb
sub
std
jmp
icebp
pusha
jp
loopne
inc
ss
cmp
pop
push
jns
xor
and
jg
call
cmpb
add
or
jo
push
gs
lods
out
int3
out
xchg
jle
fsubl
sbb
pusha
mov
adc
dec
mov
push
adc
lcall
loop
ror
ret
adc
ja
mov
sbb
push
xor
js
outsb
add
xlat
adc
add
adc
and
jmp
jle
movsl
or
jmp
pop
stos
sbb
cs
inc
data16
mov
or
test
jl
outsl
std
cld
mov
inc
dec
and
sub
jbe
or
add
push
lret
push
stos
jns
push
in
sub
cmp
je
leave
pushf
add
lods
mov
adc
and
pushl
daa
pop
pop
and
push
mov
and
movl
pop
inc
mov
test
mov
push
je
dec
mov
cltd
mov
push
xor
dec
add
insl
nop
test
inc
fwait
sbb
dec
cmp
push
xchg
sahf
cwtl
cmp
mov
fs
out
cmp
in
push
sti
jmp
dec
pop
loopne
int3
pop
sub
nop
xorb
ret
je
outsb
cmp
xchg
inc
sub
push
xchg
mov
cwtl
and
loope
stos
mov
xchg
fisttps
pop
mov
push
xchg
sahf
jge
mov
or
out
mov
cmpsb
xor
ret
jecxz
xchg
fistpll
popa
dec
repz
loope
add
push
ds
hlt
mov
scas
push
jge
in
cltd
mov
jb
arpl
mov
bnd
push
xchg
add
into
push
push
ret
fldz
and
pusha
fs
bound
dec
test
add
aad
cmc
mov
jp
dec
sub
mov
lds
push
mov
jecxz
xchg
fbstp
or
dec
dec
xchg
ret
or
mov
sub
js
nop
inc
out
cld
int3
test
mov
push
inc
stos
or
cmp
js
je
xor
push
paddsw
dec
imul
dec
jae
sbb
pushf
add
and
sbb
loopne
fldt
int3
xchg
mov
les
clc
addr16
mov
mov
mov
cmc
mov
jp
mov
inc
xchg
inc
arpl
cmpsl
pop
ljmp
pop
pop
or
fcoms
and
scas
push
jle
int
mov
test
aaa
in
sub
xor
push
orl
daa
imul
cmpsb
mov
test
add
inc
lcall
xor
or
xor
nop
jmp
cmp
and
imul
cmp
jecxz
or
ret
clc
sbb
test
lods
fistl
mov
inc
in
mov
jo
cmp
sahf
sbb
xchg
inc
fdivp
insb
fcoms
stos
xchg
inc
add
in
fs
adc
jbe
sbb
mov
ficompl
dec
or
and
jg
mov
leave
icebp
xor
lahf
mov
shll
fistl
add
call
and
mov
ds
pop
cmp
stc
int
lods
xchg
aam
shld
cmpsl
insl
hlt
into
xchg
lods
mov
inc
fs
mov
out
cmp
dec
mov
cli
xchg
sbbb
mov
push
cli
jns
pop
mov
xchg
lods
xchg
retw
scas
mov
popf
aam
push
popf
call
ja
xor
stos
out
imul
out
mov
pop
xchg
pop
das
in
sti
cli
xor
mov
add
cltd
add
cmpsb
lods
js
stc
pusha
and
pop
fisubl
mov
xchg
fwait
in
popa
orb
cli
xchg
adc
jne
xorb
sbb
test
adc
or
cmp
test
jo
push
mov
jge
les
or
imulb
fwait
iret
das
lods
or
pop
cltd
jo
mov
cs
pop
dec
leave
loop
lds
test
xchg
mov
popa
aam
ficomps
sub
in
inc
pushf
aaa
mov
sub
pop
int3
inc
sti
repz
pop
xchg
icebp
ret
ljmp
jno
push
push
sub
scas
xchg
dec
cli
fists
ljmp
loop
lahf
or
pop
push
sbb
and
test
jecxz
scas
adc
jg
inc
cmpl
rol
clc
inc
cmpsb
imul
subl
jae
push
fwait
testl
add
shr
ds
fcompl
push
push
nop
les
adc
mov
stos
pop
ret
adc
jnp
out
out
in
xchg
ja
je
adc
ja
sarb
cld
fimull
pop
dec
xor
xchg
fldenv
call
or
or
xchg
xchg
aaa
rclb
pop
scas
cmpsb
push
adc
stos
jecxz
jg
jmp
or
sub
push
dec
sbb
dec
daa
cli
xlat
pop
add
cmp
push
xor
sbb
test
xor
scas
lahf
loop
push
jno
test
dec
rolb
cmp
lret
mov
push
sti
push
mov
mov
in
or
lret
and
call
ficoml
push
or
lds
xchg
add
push
aaa
xchg
mov
popa
jmp
jno
inc
mov
test
mov
mov
mov
cmp
lock
mov
mov
insl
std
stos
dec
out
cli
jecxz
and
imul
jns
xlat
mov
push
sahf
ds
addb
in
popa
cmp
push
negl
mov
je
test
fs
add
add
pop
pop
sub
int
sub
andb
cwtl
scas
pop
outsl
jl
sbb
out
xchg
push
ja
outsb
mov
xchg
mov
mov
jg
sub
mov
jns
scas
sti
insb
jne
clc
jns
popf
pop
shll
loop
jle
ja
xor
insl
iret
rcrl
jne
mov
nop
dec
mov
adc
bound
roll
lcall
lods
fcomps
push
xor
test
cmc
icebp
jae
stc
mov
out
push
inc
add
test
mov
sub
pop
mov
cld
loopne
inc
pop
out
shrb
aad
outsb
push
nop
rcl
bound
adc
test
lock
push
in
cmp
cmp
xchg
stos
repz
inc
pop
xor
mov
cmc
xor
rcll
push
push
jne
and
cs
inc
sub
xchg
or
pop
leave
les
out
sub
rclb
stc
dec
movsl
mov
or
rorb
movb
pop
imulb
push
iret
hlt
inc
movsl
insl
ja
shlb
push
nop
cmp
test
sbb
rorl
add
inc
imul
fs
out
xchg
in
fbld
fs
xchg
movsb
add
add
cs
and
ljmp
outsb
mov
mov
push
push
icebp
faddl
inc
jae
mov
sbbb
or
loope
sti
stc
rsqrtps
dec
push
xor
add
scas
xchg
pop
cli
test
test
data16
mov
mov
aam
mov
icebp
aam
fsubrl
fcomi
xor
mov
dec
fstpl
xor
inc
in
ja
call
fwait
xor
xor
lods
xor
fcmovb
insb
push
and
push
xor
or
cli
jb
jg
test
cmp
sub
adc
lock
in
call
mov
inc
and
lods
inc
shrb
outsl
dec
inc
cmpsl
daa
xor
pushf
cld
aam
jmp
adc
insb
idiv
call
popf
dec
xor
and
repz
add
ss
ja
xor
shlb
jb
sbb
into
fbld
and
adc
jle
ss
adc
mov
mov
outsb
inc
out
push
push
jmp
hlt
fwait
sub
bound
mov
mov
xor
lea
xor
xchg
sbb
push
shlb
in
scas
int
outsl
stos
dec
inc
sbb
push
sbb
pushf
jnp
add
mov
cs
inc
cld
mov
inc
dec
xlat
out
jge
testl
shll
rorl
loopne
sub
cmp
inc
hlt
test
xchg
fstp
mov
push
push
lret
push
popa
lock
stos
data16
lds
idivl
mov
cli
fwait
push
fisttps
in
inc
push
jg
mov
xchg
jecxz
cmp
sub
stos
xchg
int
xor
and
into
loop
fbld
lea
clc
jmp
call
nop
mov
arpl
xchg
push
fdivs
fcoms
xor
sti
test
loope
fnstenv
cmp
fsubrl
fbstp
adc
pop
insb
int3
dec
in
loope,pn
roll
lahf
stc
out
mov
push
cs
cmc
test
inc
dec
scas
and
lock
int
jp
push
mov
sbb
push
xchg
addr16
test
xchg
sub
incl
jns
adc
pop
xor
jg
pop
pushf
xchg
lahf
pop
clc
fwait
mov
jmp
sarb
jp
popa
xchg
aaa
inc
sbb
push
and
clc
sub
dec
adc
je
fbld
mov
out
stc
stos
cld
lock
jo
xchg
sbb
scas
inc
jae
in
pop
mov
outsl
sbb
add
xchg
pop
pop
pushf
testb
mov
int
add
push
test
sti
and
movsl
sub
movsl
movzbl
aas
cmpsl
cmc
mov
inc
mov
cltd
mov
mov
adcl
push
popa
jg
cwtl
cmp
lahf
pop
pop
in
call
cld
cmc
mov
fcomi
xor
sub
ret
scas
pop
mull
outsb
mov
ss
xchg
lods
or
adc
es
dec
lds
jo
cmp
js
sahf
dec
data16
cmp
andl
lcall
mov
cmpsl
loope
shr
ss
cmp
mov
test
xchg
ffree
cltd
jne
cli
gs
in
test
jne
dec
mov
push
add
lods
aam
dec
mov
shrb
in
jae
aaa
xchg
jnp
test
stos
dec
popa
and
cld
mov
into
and
sbb
int3
push
push
mov
sbb
dec
lahf
mov
ja
add
pop
lcallw
sub
mov
popa
imul
sahf
mov
mov
in
fdivp
pushf
push
mov
lods
push
js
add
pop
sti
sbb
mov
sub
insl
int
enter
leave
cld
cmp
pop
data16
xchg
nop
sbb
mov
addr16
push
push
in
dec
inc
cmp
stos
pop
inc
push
stc
pop
in
sbb
cs
xor
dec
jle
rcrl
push
mov
sbb
lcall
cwtl
mov
test
xor
pop
and
jg
xchg
add
nop
insb
sbbb
xor
fsub
jg
push
xchg
inc
loope
jge
cld
add
repz
push
push
dec
push
sbb
test
add
push
in
test
pushf
lret
and
aas
cli
and
daa
shrl
push
jg
lret
js
aad
ds
mov
inc
push
stos
push
insb
pop
dec
xor
pop
jbe
dec
call
and
in
jecxz
js
push
popf
mov
jg
push
push
or
ljmp
cmc
mov
dec
cmp
push
push
mov
push
jno
icebp
jno
cmp
mov
icebp
cmp
jns
pop
scas
bound
lock
jo
mov
xor
jmp
das
pop
sbb
jb
out
xlat
push
neg
pop
xchg
fisttpll
ss
jnp
sub
or
and
add
jle
repz
xchg
pop
outsl
and
jp
jmp
push
xor
repz
add
mov
test
mov
add
fcmovb
std
jge
inc
xchg
jns
xchg
xchg
sarb
shll
movsb
pusha
jnp
popa
cmp
cmpsl
sbb
jl
sub
nop
imulb
mov
cmpsl
xchg
lret
sub
xlat
xor
mov
enter
xchg
lods
outsb
sbb
xchg
in
mov
dec
jl
popa
dec
xchg
int
ja
das
sbb
xor
stos
lret
outsb
lods
inc
std
mov
xchg
or
add
sbb
pop
shl
std
cmp
push
xor
cmpsl
add
out
sahf
or
shlb
jb
mov
push
mov
pop
add
mov
adc
mov
arpl
andb
xor
fwait
aad
adc
adc
scas
add
sahf
sub
sbb
dec
aas
mov
loope
xchg
or
mov
adc
push
in
or
sub
jns
mov
xor
inc
push
jmp
fucomip
push
cmp
leave
inc
rorl
push
or
bound
add
andb
out
pop
shll
push
pusha
push
sahf
lods
mov
bound
adc
filds
clc
mov
and
and
mov
cli
xor
adc
imul
addr16
lock
rorl
inc
inc
adc
dec
ret
fcmove
rcll
xor
mov
push
sub
or
sbb
pop
popa
mov
enter
sahf
popa
or
test
sbb
scas
sar
pop
add
outsb
mov
mov
in
dec
add
dec
xchg
cmp
dec
es
test
stos
cmp
scas
mov
lahf
ja
insl
push
gs
fsubl
outsb
arpl
mov
xchg
out
adc
and
jmp
mov
sar
add
rcrb
push
push
sub
sub
cmovle
pop
sub
mov
fwait
jecxz
mov
xchg
cmc
pop
sti
inc
add
cwtl
and
adc
rcll
adc
pop
into
pop
popf
loope
in
jne
dec
sbb
popa
daa
je
in
loope
cwtl
xchg
cmp
xchg
shrl
js
shlb
jno
out
aas
add
sbb
mov
mov
fsubrs
sarb
jb
mov
jge
jle
sub
ss
out
cmc
inc
iret
hlt
adc
sbb
and
popf
iret
inc
dec
flds
inc
test
insl
movsb
out
and
xchg
sub
jp
add
mov
in
and
xchg
fmul
adc
inc
sahf
xchg
sbbl
pushf
mov
dec
es
hlt
cmpsb
inc
cmp
call
and
push
xchg
cmp
inc
scas
jge
movsl
dec
hlt
inc
or
pusha
and
in
mov
pusha
into
mov
jp
cltd
nop
push
loope
lahf
aaa
inc
les
xchg
cs
cs
jmp
inc
jns
dec
push
mov
or
mov
jge
adc
lds
inc
cltd
rorb
sbbl
pusha
lcall
mov
test
add
mov
popa
mov
sub
shlb
add
dec
xchg
mov
scas
insl
mov
mov
nop
xchg
jle
cs
mov
movsb
pop
push
rolb
lods
aam
push
pop
cmpsl
push
pop
sub
inc
lcall
sti
mov
loop
call
xchg
gs
fsubrs
rcll
push
test
shrb
repnz
jno
mov
inc
lahf
lcall
sub
mov
cmp
in
test
imul
mov
mov
inc
pop
pop
mov
jb
pop
cmp
inc
mov
popw
xchg
jg
inc
cli
cwtl
stos
push
xor
mov
pusha
sub
inc
pop
mov
sahf
jp
xchg
fwait
adc
shll
push
sub
mov
mov
mov
cld
es
or
or
push
and
xor
sub
inc
mov
scas
sbb
in
lock
shll
fwait
dec
mov
fsub
pop
rcrb
add
lods
push
xor
pushf
out
fisubrl
dec
dec
out
in
inc
mov
sbb
add
or
fadd
mov
stc
repz
pushf
sahf
fbld
das
cmp
fcompl
cmp
mov
clc
in
and
mov
scas
pop
popf
test
repnz
cltd
mov
test
shrl
pop
mov
js
push
dec
je
cmp
mov
pop
scas
pusha
cltd
call
loope
and
test
in
mov
pop
dec
push
outsb
aam
cltd
inc
int
jg
iret
push
out
sahf
aas
or
adc
xchg
cmp
lock
repz
or
and
lods
push
int3
jle
push
sub
xor
inc
push
xor
fisttpll
xor
testl
mov
cmp
adc
mov
mov
mov
push
mov
jne
cs
movsb
out
insl
sub
rcrb
or
jmp
addr16
jo
cltd
inc
push
or
inc
cmp
add
insl
or
pop
popl
mov
add
pop
and
push
notl
pushf
cmp
cmp
push
adc
imul
lret
repnz
xor
std
loop
test
hlt
data16
imul
int
pop
nop
lahf
sti
mov
mov
aaa
std
aaa
ficoml
mov
shlb
dec
xchg
xchg
mov
test
inc
jae
xchg
jge
fucomi
xor
mov
pop
cmp
popa
mov
cmp
xor
mov
mov
jg
aam
sbb
js
push
jo
push
popf
ss
push
into
inc
sub
push
pop
rorl
pop
jae
push
xor
push
sbb
xor
mov
shl
dec
jno
lret
inc
mov
dec
in
push
jb
cmp
sbb
mov
add
ror
es
inc
xlat
adc
les
scas
lds
fwait
insl
clc
rcrb
daa
shll
outsb
outsb
lret
std
popf
nop
xor
out
pop
out
xor
jge
jmp
cli
je
stos
fcoml
mov
jbe
imul
push
js
lods
push
adc
adc
pop
fcomps
lcall
aas
cwtl
jo
dec
mov
jno
pop
pop
imul
cli
mov
sbb
inc
jle
xchg
xchg
push
push
cmp
cmp
mov
push
bnd
mov
lcall
iret
out
stos
cltd
aad
int3
in
dec
es
push
inc
int
cmc
mov
and
mov
cmp
inc
lea
in
inc
shl
lea
push
push
mov
or
addr16
mov
sbb
mov
add
movsb
into
jns
lcall
movsl
mov
adc
iret
out
xchg
outsb
jmp
mov
sbb
pusha
lret
je
cmpl
xor
adc
dec
adc
or
or
dec
in
rol
mov
loopne
push
jnp
mov
or
cltd
movl
pusha
int
mov
rol
stos
jle
xchg
loope
scas
mov
iret
dec
jno
insb
scas
jge
insl
int3
cwtl
and
scas
mov
adc
fs
out
f2xm1
inc
push
inc
sbb
cmp
sbb
jno
enter
fdivrp
push
inc
push
pop
push
loopne
repnz
xchg
and
mov
cmp
cmp
cmp
mov
cmp
lret
ret
ja
into
add
test
adc
cli
in
xchg
jno
xlat
pop
xchg
scas
repz
dec
add
pushf
jo
test
lret
jecxz
mov
cmpsb
pusha
xor
pushl
adc
sbb
add
and
cmp
stos
loop
jmp
adc
pop
insl
mov
clc
out
pop
aaa
loopne
ficoms
je
out
lods
add
sub
or
mov
shr
push
fmull
cli
jo
pop
mov
cmp
sbb
stos
xchg
popf
sbb
aas
cmp
jp
inc
hlt
daa
add
sbb
shll
sub
loop
test
xchg
sub
push
rorl
rcrl
enter
dec
xor
add
pop
xchg
and
pop
mov
bound
xchg
cli
cli
mov
iret
dec
arpl
popf
jno
sahf
rcrb
push
push
outsb
and
inc
rcll
jno
repnz
or
mov
bound
faddl
mov
out
mov
jl,pt
loope
jns
pop
addb
dec
dec
push
and
into
dec
cmpsl
fsubrs
push
aad
sub
mov
add
lret
and
fcomp
push
xor
into
lea
xchg
dec
das
lret
xor
or
pushf
push
xor
in
adc
dec
jo
pusha
inc
subl
es
aam
jmp
jae
xchg
jg
lock
cmp
cltd
pmullw
mov
pop
sbb
xor
inc
push
jmp
sbb
andl
fdivrl
sbb
dec
mov
pushf
cltd
not
in
int3
fstpl
dec
dec
movsl
jp
ds
out
jg
xchg
inc
jge
dec
sahf
pop
fadds
sti
sbb
xchg
add
mov
aas
mov
bound
mov
fsubs
je
int3
clc
mov
repnz
shlb
or
int3
jne
push
ret
jge
sbb
jecxz
pop
loop
sarb
cmpsb
arpl
xor
mov
enter
pushf
jmp
out
push
ds
pop
inc
lock
and
shll
loop
lds
jl
push
popa
jle
cmp
fucomp
fisttpll
cli
mov
outsl
jmp
jl
xchg
dec
and
jl
or
pop
xor
push
ror
idivl
cmp
jb
fistpll
stc
outsb
movsb
icebp
pop
enter
cmp
mov
js
movsl
loope
push
test
xorl
sub
test
imul
mov
xor
add
mov
orb
aad
dec
in
pop
icebp
in
addr16
pushw
andl
cmp
out
pand
and
daa
enter
and
jp
stc
adc
push
sbb
cmp
cmpsl
imul
sub
js
sarl
or
pop
inc
pushf
add
pop
dec
inc
aad
dec
nop
es
mov
pop
roll
aaa
mov
push
push
stos
sahf
push
and
push
inc
cs
lret
push
pop
loope
lcall
lock
cwtl
loop
aam
bound
fidivs
sahf
adc
outsl
adc
aaa
cmpsl
rorl
sub
inc
add
cmp
lahf
out
popf
dec
jo
enter
and
rclb
mov
cli
pop
jno
mov
adc
incl
iret
fwait
icebp
sbb
nop
cmc
pop
jg
movsb
or
aad
sbb
cmp
cmp
jp
outsl
sti
jmp
xor
mov
jle
cmp
cmp
push
or
js
imul
data16
dec
sub
ds
repnz
jge
mov
push
inc
adc
aaa
jmp
mov
icebp
ljmp
js
mov
imul
ss
cld
repnz
cmp
hlt
xchg
les
das
cld
aad
call
mov
adc
sbb
notl
hlt
ficoml
in
push
mov
cmc
ds
mov
dec
data16
xchg
jecxz
sahf
jp
xchg
js
mov
push
mov
mov
daa
lock
repz
mov
mov
stos
jbe
xchg
mov
cld
cltd
sub
sub
fstpl
mov
sub
es
ret
push
lds
sbb
mov
out
pop
das
xchg
sbb
popa
mov
pop
out
mov
in
sub
in
and
mov
sbb
mov
nop
je
popf
mov
or
js
stos
jl
shl
iret
ljmp
cmp
ljmp
mov
sbb
test
sbb
pop
sub
fstps
sub
rdmsr
xor
mov
cs
mov
mov
pop
repnz
xchg
pop
mov
dec
xchg
mov
or
cmpsl
xor
movsb
mov
in
repnz
push
add
and
mov
pop
jno
mov
inc
jo
loope
xchg
jle
add
aaa
xchg
aam
pop
fs
mov
mov
out
mov
repnz
mov
jno
mov
adc
jno
insb
pop
xchg
dec
into
cmp
sub
pop
inc
std
mov
push
lds
das
lret
jl
mov
loopne
int
adc
andb
leave
mov
cmp
iret
xchg
arpl
ffree
int
lret
push
push
mov
mov
sbb
insb
mov
or
inc
xchg
pop
fcmovnu
cmp
adc
fwait
mov
adc
push
test
cmpl
and
test
push
test
clc
fbld
lods
lret
int3
push
mov
cmpsl
ret
and
loope
xchg
enter
loope
inc
xchg
dec
cmp
jge
push
add
add
mov
sarb
cmpsb
pushf
mov
call
arpl
dec
xchg
fs
dec
push
lods
wrmsr
add
faddl
mov
subb
adc
dec
loope
fcoml
lret
xor
pop
jge
push
jne
cmp
testl
mov
xchg
pop
pop
push
sub
pop
fs
adc
sbb
xchg
push
je
div
sahf
fucomp
icebp
push
shlb
push
cmpsb
sbb
adc
push
and
push
movsl
stos
mov
lods
push
push
rcrb
dec
xchg
cmp
aas
notl
leave
dec
xchg
mov
mov
cwtl
push
xchg
push
loopne
sub
adc
push
jecxz
mov
xchg
xor
xlat
movsl
xchg
xchg
sub
incl
jle
enter
sti
pop
xor
xchg
xorb
sarb
inc
inc
mov
sahf
push
add
pop
mov
lods
in
lret
shll
cmp
and
xchg
adc
xchg
scas
rclb
mov
data16
inc
lahf
mov
aaa
ror
sbb
adc
dec
je
lods
xor
divb
sti
sub
out
das
push
subl
push
gs
xor
sub
xchg
pusha
mov
inc
push
pop
mov
lcall
lock
adc
sbb
cmpsb
jbe
scas
pop
adc
rcrl
sbb
out
int
jb
pop
and
pop
mov
ret
jb
adc
popf
jno
dec
adc
bound
xchg
sbb
xchg
fdivs
imul
repnz
ret
jl
fwait
fs
jecxz
ljmp
add
mov
shrb
cmp
rorl
std
add
add
outsb
cmp
or
in
and
xchg
idiv
addb
mov
or
or
adc
mov
int
dec
mov
sub
es
leave
or
scas
stc
in
cs
mov
pop
cmp
lret
mov
popa
cmp
xchg
imul
add
adc
xchg
or
xchg
xchg
pop
push
mov
sub
pop
lret
add
loopne
xchg
cli
mov
ffreep
xchg
imul
push
clc
test
aaa
ja
jle
repz
sar
int3
pop
mov
sub
jge
sbb
in
pusha
loop
mov
jp
cmp
inc
push
jbe
sbb
dec
lahf
lock
jecxz
cmp
or
and
aas
push
mov
hlt
out
and
sbb
pop
pop
xchg
imul
les
leave
sub
jecxz
divb
mov
pop
sahf
fiadds
arpl
popf
xacquire
pmaxsw
cmpsb
imulb
xchg
add
int3
sbb
or
jg
adc
stos
xchg
inc
adc
mov
cmpsl
stc
int3
jecxz
arpl
lret
sub
jl
and
jne
xchg
dec
push
data16
lea
repz
xchg
xor
out
enter
mov
ss
adc
mov
cmp
cs
iret
divb
or
lods
insb
and
mov
push
shrb
out
add
add
jne
icebp
out
shl
adc
sub
cmp
push
mov
jne
imul
in
iret
ja
cmp
mov
push
ror
xor
mov
mov
mov
push
inc
fwait
sub
xorl
call
leave
ret
push
xchg
das
out
xchg
cmp
add
xor
sbb
pop
add
jns
pop
jae
dec
pushf
dec
sub
loop
mov
sbb
cmp
clc
xchg
test
arpl
fldz
clc
fsubr
popf
bound
xchg
xchg
in
pop
andb
and
jns
fimull
enter
add
lcall
sub
imul
adc
addb
push
jmp
shll
in
cli
popa
mov
scas
push
scas
int3
fdivrs
jbe
and
sub
gs
je
xchg
mov
or
mov
cmc
cli
mov
jg
loope
adc
dec
ja
dec
das
pop
jl
std
pop
cmovo
and
jg
test
inc
sahf
inc
clc
ss
test
and
fwait
imul
lcall
aaa
dec
hlt
inc
add
repz
inc
and
lea
orb
dec
inc
mov
push
imul
stos
xor
jo
icebp
scas
out
push
addr16
outsb
or
lcall
aam
fwait
cld
dec
test
inc
mov
mov
xor
lcall
cmpl
imul
cs
fsubrp
movl
out
mov
ljmp
and
testl
arpl
dec
data16
out
pop
cmpsl
hlt
xor
mov
repnz
pop
test
inc
ret
das
mov
les
lds
stc
faddl
jne
addr16
scas
sub
and
mov
mov
adc
jmp
pop
xchg
xchg
fwait
loope
cmp
pop
fcmove
pop
xor
test
ss
andl
inc
loop
adc
xchg
js
adc
push
inc
push
sub
rcl
pop
es
out
sub
dec
iret
or
cwtl
movsl
mov
jg
push
pop
in
clc
leave
fwait
in
xchg
into
xor
shr
inc
inc
shrb
pop
mov
es
xchg
sub
sarl
aad
arpl
mov
cmpsl
xorps
repnz
dec
push
sub
or
aad
loope
daa
lods
mov
js
cs
jle
xchg
cltd
xchg
out
les
jb
stc
inc
ret
push
es
cmp
jle
mov
rcr
or
jo
sbb
mov
inc
xlat
icebp
test
sub
leave
mov
inc
pusha
shll
inc
add
nop
clc
lret
mov
dec
loop
mov
adc
inc
int3
fdivs
and
xchg
call
bswap
adc
movsb
insb
sti
xchg
push
addr16
push
test
fdivs
fsts
inc
add
je
xchg
add
test
ffree
wbinvd
loop
ficoms
ficomps
cmp
ja
out
notl
add
or
adc
leave
xlat
mov
add
jle
dec
cmp
xor
loope
jae
imul
add
stc
and
mov
jo
xchg
cwtl
jp
adc
sbb
push
cmp
sti
std
push
jmp
mov
pop
mov
lock
movsl
cmp
out
pop
pop
fucomip
inc
mov
enter
xchg
ficoms
dec
cltd
mov
dec
aas
stos
mov
ljmp
dec
sub
pop
mov
in
inc
xor
ret
dec
aad
test
xchg
cli
popf
daa
cmp
inc
mov
ss
or
nop
add
sbb
adc
aas
dec
mov
push
divl
jecxz
xor
or
cmp
jp
mov
push
push
bound
cmp
jb
cmp
rcll
sar
movsb
movsl
push
xchg
mov
shr
incb
dec
leave
aaa
xor
mov
jmp
adc
sbb
push
pop
jb
in
add
adc
or
xchg
into
jmp
mov
jge
cmpb
out
mov
les
push
adc
jo
lret
outsl
dec
push
bnd
roll
iret
jno
les
cmp
pop
push
mov
movsb
sbb
push
imul
int3
cmpsb
xchg
xor
push
inc
std
fmuls
imul
aaa
jp
aas
clc
icebp
push
enter
scas
test
pop
push
std
adc
xor
ja
xor
aas
mov
push
pop
dec
lret
ds
mov
stc
scas
jecxz
js
outsb
add
mov
mov
pop
out
add
mov
and
lea
insl
adc
call
lods
cmp
fwait
fidivl
add
cmp
mov
shlb
pop
xchg
imul
adc
gs
lahf
scas
mov
and
stos
loop
fstl
into
push
cli
jne
popf
push
insb
mov
inc
sti
rorb
sub
sti
sub
jns
lret
lcall
aam
je
xor
lock
in
push
inc
hlt
mov
push
cmp
dec
imul
pop
andl
cmpsb
stos
and
pop
ret
fldt
adcl
clc
fdivs
je
rcll
dec
cmp
lock
outsl
sub
xor
mov
dec
mov
and
adcb
mov
sub
fisttps
fdivrs
pop
jg
imul
cwtl
cmp
sub
push
cmp
mov
cmpsb
lock
aas
test
xchg
add
fldl
shrl
sarl
or
pop
adc
cmp
lcall
mov
ljmp
mov
mov
das
lret
cmpsb
int
cmp
push
lahf
pop
rcrl
sub
add
roll
sub
fwait
mov
ret
cwtl
cmp
xchg
mov
nop
repz
int3
xchg
ds
loope
xchg
push
clc
push
into
inc
nop
iret
push
pop
inc
xchg
insb
and
fdivrp
mov
fdiv
adc
movsb
insl
mov
push
or
into
ret
out
leave
ret
rol
insb
push
xchg
outsb
cmp
xchg
inc
sub
lock
out
sub
mov
rcrl
shrl
inc
cmp
andb
push
rol
add
arpl
mov
mov
lcall
scas
and
or
mov
pop
inc
jne
xor
xchg
sbb
popl
xchg
inc
lods
or
push
push
inc
shrb
loope
fs
leave
loope
cmp
daa
push
out
jmp
push
mov
xchg
cld
shl
jmp
xchg
cmp
pop
dec
inc
mov
mov
imul
xor
xor
int
sub
js
out
xchg
sub
mov
fsubs
and
daa
jne
or
lret
nop
cmp
adc
push
fistl
imul
xor
mov
iret
mov
sbb
lods
add
sub
pop
out
jmp
and
sbb
movsb
lods
mov
mov
push
or
push
cmpsl
jno
lock
aaa
jne
inc
adc
or
cmpsl
sbb
imulb
dec
cwtl
fldenv
add
dec
jnp
daa
push
scas
lret
shlb
inc
aam
jmp
lea
imul
push
js
xor
stos
imul
sub
jmp
jo
push
jae
cmp
mov
mov
pop
test
gs
lahf
sub
dec
add
and
sbb
jnp
xchg
xlat
sti
sarb
push
dec
cmp
cmp
fisubl
fisttpl
sub
insb
jne
cmp
push
inc
divl
fs
clc
mov
sbb
cmp
xor
js
inc
hlt
push
adc
test
fs
mov
jmp
mov
mov
loope
mov
pop
test
in
pop
pop
fwait
lret
ficomps
inc
jae
and
push
add
jg
je
pop
sbb
pop
inc
popf
add
loope
int
into
pop
movsl
aad
lods
pop
out
jle
pop
jge
leave
xlat
sbb
fnstsw
lret
aam
inc
cmpsl
and
pop
mov
mov
and
cmpsb
inc
xchg
sub
add
stos
fdivrs
loop
inc
mov
fsubrs
cli
jl
movsb
sub
push
outsl
jb
popa
lds
aas
cwtl
shrl
xor
bnd
int
loope
cli
fstps
mov
scas
std
pop
mov
bound
movsl
test
jmp
aaa
sbb
outsb
das
mov
loop
pop
xchg
jne
or
loopne
push
adc
into
popf
decl
pop
xor
clc
loopne
and
fisttpll
xchg
and
mov
iret
push
cli
push
insb
cmpsb
dec
jns
pop
jo
pop
iret
popa
jp
push
ficomps
arpl
arpl
and
and
pop
loop
mov
scas
mov
lock
cmc
pop
fldl
xchg
and
enter
add
and
je
fildll
popa
dec
sub
or
push
mov
addr16
ret
xchg
not
push
inc
aaa
pop
or
cmp
adcb
repnz
jne
aad
jo
or
out
test
idivl
pop
out
push
adc
daa
out
shl
outsl
mov
xchg
push
mov
jae
xor
mov
add
mov
std
pushf
mov
mov
sbb
mov
lcall
dec
insl
pop
mov
out
sbb
lock
mov
sub
mov
fmull
repz
pop
and
out
in
push
aad
fidivrs
aaa
into
xchg
cmp
jnp
jl
stos
mov
cmpsb
movsb
daa
add
adc
or
popf
push
push
outsl
sbb
shll
inc
cmp
out
xchg
xchg
xchg
sub
xor
insl
imul
scas
ret
lods
sub
bound
leave
or
jno
add
decl
lret
lret
pop
jne
inc
cmp
xlat
mov
sbb
sarb
mov
clc
and
mov
sahf
dec
xor
iret
aas
push
repnz
test
pushf
nop
dec
loope
mov
xchg
mov
adc
cli
xor
push
shrl
sahf
cmpsl
test
adc
fstpt
aad
push
cmpsl
add
iret
dec
movsb
loope
imul
fistpll
sub
push
jne
subb
fsubrl
stc
ja
mov
cmp
or
mov
xchg
pinsrw
pop
jg
adc
xchg
mov
cwtl
inc
lock
loopne
loopne
jae
ja
xchg
sub
add
lahf
cmc
mov
jg
and
push
rcr
lret
and
loope
xor
push
xlat
cmpl
arpl
imul
loopne
aaa
or
shl
mov
adc
mov
scas
enter
sbb
sbb
mov
dec
jae
dec
test
popa
ss
sete
xor
mov
jne
inc
adc
jae
xor
test
jne
mov
adc
push
arpl
negb
jae
jle
sbb
sbb
mov
xor
and
fiadds
push
sti
cld
mov
mov
or
jbe
add
imul
int3
sub
scas
inc
xor
jo
mov
clc
add
push
jbe
mov
and
sub
mov
cli
cmp
dec
cmc
xchg
jmp
push
inc
jle
push
sbb
adc
pop
lcall
stos
inc
inc
xchg
sub
pop
nop
and
dec
xchg
mov
faddp
add
jg
iret
jbe
mov
idivl
jmp
lret
mov
in
outsl
push
std
mov
xor
xor
push
rcr
dec
pop
cli
jbe
testb
xor
ja
inc
movb
xchg
or
scas
and
push
imul
sbb
inc
push
dec
mov
js
jp
std
enter
jno
imul
xlat
mov
push
pop
jge
xchg
dec
xchg
repnz
lods
or
adc
out
cmc
faddl
sbb
int3
ss
pop
mov
sarb
aad
push
js
inc
sub
lss
ja
cmp
lcall
sbb
fidivs
push
repnz
inc
loopne
mov
nop
sbb
inc
jle
xor
es
mov
add
inc
repz
not
cmp
in
add
cmpsb
mov
fisubl
jns
in
add
add
mov
shrb
and
cmp
test
aam
mov
jg
sub
das
mov
add
xchg
dec
xchg
rcrb
sahf
jmp
sub
test
ret
jae
mov
out
ret
mov
push
setb
sbb
js
pop
inc
imul
aad
shll
mov
mov
pop
sbb
fsubs
and
out
and
pop
imul
cmpsl
xor
js
add
add
sbbb
cmp
cmc
rorl
sub
out
movsb
and
and
sbb
dec
popa
fldenv
decl
add
sub
scas
xchg
jb
jb
pop
jp
loop
or
and
mov
repnz
mov
jecxz
mov
icebp
emms
jno
xor
aas
cmp
push
sahf
call
inc
jge
add
out
mov
movsl
push
lea
flds
mov
or
lret
dec
out
lcall
repz
pop
mov
cmp
call
and
mov
xchg
sbb
or
pop
adc
adc
repz
ret
inc
jle
xor
pop
mov
movsb
pushf
cmp
push
fildll
mov
out
je
test
sbb
pop
adc
mov
cmp
xchg
mov
mov
js
jns
and
xchg
and
add
aas
mov
jmp
cwtl
outsb
out
jns
lods
jge
lds
call
outsb
and
or
mov
pusha
xchg
jbe
push
lret
test
ja
jae
fisubrs
mov
mov
xchg
xchg
inc
js
ds
fstps
push
or
mov
and
push
cs
pop
int
push
fsubs
daa
or
or
or
pop
faddl
xor
sub
sub
das
arpl
pop
lods
sbb
movl
inc
dec
push
dec
push
and
adc
pop
jns
and
cmp
cmpsb
out
into
jne
movsl
adc
or
cmp
aam
hlt
sti
xor
pop
js
jbe
std
iret
mov
sbb
out
add
imul
cmp
clc
add
es
cmpsb
int
fld1
sbb
pop
fcmovb
aad
jnp
push
fwait
sti
je
push
or
mov
std
shl
add
test
fmull
mov
xor
adc
insl
adc
jmp
rolb
dec
test
jg
cmpsb
orb
jbe
mov
xorb
xchg
mov
in
lret
aas
mov
add
test
mov
add
sarb
mov
sub
pushf
push
sub
imul
insl
xor
sbb
push
scas
ret
and
xchg
pop
pop
hlt
sbb
gs
mov
int
div
movsb
or
outsb
xor
aas
jecxz
lea
and
jnp
andb
pop
rolb
mov
mov
add
imul
add
push
dec
hlt
pop
or
in
int
es
mov
popa
loop
add
jnp
aad
stc
ds
jp
dec
mov
lcall
dec
dec
mov
outsl
mov
jmp
and
test
insb
lds
std
int3
pop
cli
cld
inc
fcmovbe
sbb
loopne
andl
arpl
into
mov
mov
sub
cmp
aaa
std
mov
sbb
dec
lret
and
mov
out
out
stos
not
push
loope
pushf
pop
sbb
fldl
stc
aad
add
adc
fmuls
rorb
mov
cmpsl
aas
icebp
inc
xchg
punpckhbw
cs
out
in
jne
clc
inc
std
into
int3
std
leave
mov
pop
xchg
and
xchg
cltd
mov
ss
xchg
mov
mov
xchg
jbe
leave
mov
lea
lahf
fimull
mov
jg
into
mov
jo
es
es
and
js
fstpt
sbbb
je
loop
fxch
xchg
or
push
or
insb
adc
and
subb
lahf
cld
mov
push
pop
int
jae
dec
leave
sbb
xchg
dec
in
sub
insb
pop
cld
dec
inc
inc
inc
cmc
push
scas
mov
cmp
loopne
push
sub
and
jnp
das
fstl
push
arpl
clc
scas
fnstsw
mov
lret
mov
hlt
sbb
pop
mov
stc
mulb
adc
repz
dec
cmp
call
add
adc
in
xor
in
aam
jbe
mov
fidivs
stos
bound
insb
cmp
andl
add
ret
repnz
shl
je
ss
out
xor
gs
sub
jmp
in
shrl
pushf
ljmp
loope
xchg
aaa
fisubl
ljmp
push
xchg
sub
push
sbb
sahf
mov
inc
leave
mov
jle
movsb
cmc
sbb
mov
test
dec
xchg
imul
pusha
leave
xlat
jge
dec
mov
pop
in
inc
testl
pop
xchg
and
ss
mov
inc
xor
xor
mov
jle
mov
jb
daa
mov
xchg
add
fisttpl
sub
shrl
gs
and
or
dec
ja
xor
inc
cmc
pop
std
scas
scas
or
test
cmpsl
dec
rcrl
xchg
sbb
cmpl
repz
push
fadd
or
bound
outsb
adc
nop
jbe
push
out
scas
xchg
cmp
fbld
push
push
push
mov
test
inc
inc
fs
incb
sbb
sbb
out
cmpsb
in
pop
call
imul
sub
dec
sti
fwait
iret
int
push
or
dec
in
xchg
inc
dec
lds
mov
nop
dec
orw
inc
push
sbb
sub
iret
jbe
jns
jp
adc
sub
insl
mov
scas
or
gs
movsl
shrb
out
rcl
arpl
mov
std
dec
jmp
incl
test
scas
xchg
scas
insb
daa
dec
mov
shlb
loope
mov
pop
imul
mov
ja
ret
addb
and
pushf
stos
add
sub
jns
mov
adc
xchg
sti
std
roll
xor
dec
jecxz
shll
jle
je
outsl
sbb
inc
pusha
sbb
dec
cltd
dec
xchg
push
xchg
shlb
imul
xchg
clc
sbb
enter
mov
xor
clc
lods
pop
add
repnz
lods
jns
jg
fld
int3
cmp
fs
imul
out
pop
xchg
lock
xchg
insl
and
dec
dec
cmc
inc
hlt
sbb
adc
and
xchg
cmp
cmc
icebp
clc
movsb
mov
ss
repnz
incb
pop
fcoms
test
push
push
mov
add
xor
inc
mov
cmpsl
pop
cmovae
popa
adc
loope
cwtl
mov
push
jbe
add
loop
inc
cmp
add
jle
ret
push
sbb
push
or
ret
or
and
jno
inc
push
int
sbb
inc
jl
and
ds
xchg
ret
cmc
cmp
dec
dec
icebp
imul
shlb
aas
mov
adc
movsb
jge
lock
out
xor
dec
jno
add
mov
sub
repnz
repnz
or
push
outsb
push
outsb
pop
scas
jns
mov
jge
sbb
fldenv
mov
cmpsl
flds
fsubr
dec
pop
lods
out
bound
std
aad
ret
xor
mov
addr16
sbb
test
das
in
mov
pop
pop
rcll
sub
sub
cmpsb
test
xlat
or
dec
cld
cmp
ja
lcall
int3
jle
into
pop
mov
sahf
lock
jno
mov
outsb
lods
fcmovbe
mov
lods
insb
call
sbb
mov
mov
ret
sbb
int
aaa
pop
lods
repnz
sub
test
movsl
mov
and
lock
movsl
movl
jne
cmp
pop
sahf
xchg
pop
movsl
pop
in
je
cmp
cmpsl
push
mov
cmpsl
mov
in
lret
mov
sbb
loopne
mov
add
cmp
les
mov
fidivs
nop
lahf
inc
cmp
stos
cmpsb
mov
xor
aas
mov
cs
jbe
pop
or
add
mov
jo
xchg
or
fcmovne
subl
jbe
jmp
cmp
jne
mov
mov
adcl
sti
jp
jb
pop
test
punpckldq
sub
jp
aad
lahf
mov
sub
dec
nop
xchg
jg
in
or
xlat
xchg
adc
ss
in
cs
dec
cs
js
popf
xchg
out
lret
xor
sbb
and
cmp
ret
sahf
xchg
push
nop
std
pop
pop
jbe
xor
inc
xor
imul
add
fwait
adc
jmp
filds
add
sub
and
lds
sbb
mov
xchg
mov
jne
push
push
jmp
outsb
sbb
mov
stos
repz
fildl
jge
ja
rcll
xchg
fs
xor
arpl
icebp
xlat
sbbl
dec
dec
mov
sti
frstor
or
orb
mov
dec
push
inc
mov
jnp
dec
in
sbb
mov
iret
ds
testl
sub
adc
xchg
jp
scas
push
dec
add
hlt
in
add
aad
arpl
icebp
sarl
pop
xor
adc
pushf
nop
test
jmp
adc
ror
nop
sub
jae
je
decb
dec
repnz
cmp
imul
dec
add
inc
in
std
movsl
sub
inc
push
shrl
in
daa
push
leave
loop
xchg
arpl
jae
jne
insl
repz
mov
add
dec
fwait
pop
mov
xor
repz
sbb
mov
dec
fimull
bound
inc
mov
push
xchg
fnsave
pushf
push
mul
cmpsl
es
push
mov
addr16
andl
imul
lods
cmp
mov
cmp
int3
or
jae
das
add
out
std
leave
sbb
push
fsubl
sbb
sub
test
dec
sbb
pusha
stos
cmp
cmpsl
testb
out
dec
add
push
mov
fcmovbe
push
sub
inc
bound
jnp
sbb
cwtl
push
cli
cmp
inc
in
or
mov
and
arpl
ret
es
loop
mov
aaa
cmc
nopl
xor
xlat
jmp
sub
pop
movb
repnz
add
push
aaa
and
std
mov
cmpsl
ficomps
or
add
sbb
adcl
fs
cmp
cmp
jmp
xchg
loop
cmp
lret
aam
cmpsl
inc
sbb
arpl
loope
in
shll
sub
cmp
pop
cltd
xor
push
jae
dec
loopne
stos
out
jp
hlt
in
gs
cmpb
scas
mov
pop
cmpsw
mov
push
xor
punpcklwd
lods
mov
push
fwait
out
enter
cmpsl
fwait
sbb
mov
fwait
scas
jns
sbb
out
scas
lods
cld
xor
pop
rcl
mov
scas
in
das
push
xchg
shrb
and
call
dec
xchg
mov
dec
pop
sar
cmp
ret
or
das
pop
das
popf
aas
pop
inc
ds
dec
lcall
fs
lret
loopne
lods
cld
and
ss
subb
push
inc
sti
inc
push
dec
cmp
push
lcall
insl
mov
jl
mov
lahf
cs
add
add
mov
mov
ret
xor
adcb
ficomps
outsb
arpl
iret
out
add
adc
popf
popf
or
rcrl
in
push
repz
mov
xchg
mov
sbb
lock
fs
mov
in
pop
int
sub
jbe
data16
les
out
xor
std
ficomps
pop
aas
add
gs
cmp
test
sti
jo
into
in
or
dec
rorb
add
dec
not
adc
cmp
inc
cmp
or
out
insb
xchg
xchg
rcrl
adcb
add
inc
mov
test
mov
xor
pop
mov
gs
push
das
sbb
xchg
scas
mov
jnp
ja
adc
jl
xchg
jb
daa
ret
and
ficoms
mov
repz
je
dec
imul
lret
xlat
dec
pushf
dec
jns
ficomps
pop
jmp
ja
dec
xlat
fwait
jle
xchg
jecxz
inc
pop
fisubl
push
push
jns
scas
sub
sahf
nop
inc
and
jecxz
stos
in
xchg
lods
insb
xchg
fidivrs
xor
mov
cmpb
push
inc
cmp
in
les
insl
test
js
pop
pushf
rclb
push
loope
push
arpl
rcrb
mov
mov
scas
repz
add
stos
fldenv
cmc
test
xlat
xchg
mov
filds
jbe
aad
inc
pop
dec
push
mov
loope
aad
xchg
cwtl
lahf
cltd
imulb
in
cmp
dec
fwait
lcall
aad
inc
cmp
ret
mov
test
and
test
adc
mov
addr16
mov
dec
dec
call
sub
lcall
test
in
xchg
cmp
loope
call
and
lods
stos
pop
lcall
dec
mov
imul
pop
inc
loop
data16
clc
insb
pop
addr16
sub
lds
jg
js
push
les
sahf
mov
cmp
cmp
je
mov
fnstenv
add
push
or
and
xchg
push
mov
repnz
add
or
scas
das
dec
out
jae
or
pop
push
daa
jp
xor
xchg
xchg
enter
sub
dec
xchg
dec
sbb
out
or
mov
sub
pop
mov
loope
bnd
add
hlt
jo
mov
jnp
pop
jb
pop
movl
in
xchg
dec
fcmovnb
pop
cmp
sarb
cli
in
stc
mov
scas
sub
jecxz
sbbb
fcompl
fisubrl
pop
xor
out
or
sub
inc
dec
lods
inc
clc
mov
mov
mov
pushl
popf
ds
sahf
aas
decb
call
mov
dec
sub
or
cmp
jg
fs
ret
push
test
je
stc
cmpsl
test
lret
je
addr16
jl
test
xlat
mov
scas
test
lret
mov
mov
dec
adc
jbe
mov
nop
mov
and
mov
mov
out
jns
dec
inc
loope
aam
or
or
mov
jl
cld
inc
sbb
mov
mov
out
xor
sbb
sarb
pop
test
aam
lcall
mulb
into
dec
lahf
les
fisttps
mov
xchg
add
in
ss
je
cmp
cs
in
rcrl
lock
inc
xchg
push
xchg
je
cwtl
and
stc
stos
js
popf
pop
cmc
cld
mull
dec
int
cwtl
addb
sub
ret
sub
xor
sbb
mov
xchg
in
loopne
inc
lods
cmp
lods
mov
push
dec
fwait
pop
arpl
sahf
jle
sub
adc
jmp
lcall
rcrl
xchg
out
mov
jmp
es
ret
arpl
test
adc
out
push
ret
mov
jo
stc
scas
mov
xchg
sub
and
int
std
daa
sub
sysexit
cwtl
lods
out
rolb
jo
sti
leave
cmp
sti
into
mov
inc
cmp
and
std
xchg
fsts
lods
decb
xchg
loopne
lcall
leave
xchg
push
lret
rclb
cmp
ds
sub
in
popa
or
dec
js
jnp
mov
xlat
outsl
push
lods
pop
pop
sbb
ret
push
xchg
stos
imul
push
ret
pop
cmpsl
inc
sarb
cmp
aad
ret
rolb
jne
dec
cmp
mov
les
fmull
adc
and
cli
jecxz
and
jns
jne
mov
jge
sbb
cmpsb
xlat
movsl
lahf
shlb
add
movsl
call
push
pop
cli
sahf
lods
int
pop
inc
ret
sub
int3
cli
mov
mov
xchg
sbb
pop
shll
inc
or
sbb
jno
cmp
jecxz
mov
popf
outsl
out
jp
jge
imul
pusha
mov
push
sub
cmp
sbb
push
add
int
pop
sub
mov
sbbb
stc
inc
lods
inc
mull
mov
lcall
hlt
faddl
and
cmp
insl
cwtl
add
hlt
out
push
lahf
mov
rclb
subl
les
ja
fisubl
shll
sbb
in
scas
add
xchg
push
push
dec
lods
out
shlb
jnp
push
out
enter
jbe
sbb
imul
es
fsubrp
inc
cs
fmuls
sub
inc
mov
loop
sub
adc
fsubr
dec
inc
cmpl
je
mov
dec
adc
cld
xor
push
call
arpl
pop
push
in
or
mov
jno
pop
repz
pop
scas
mov
or
lea
mov
sbb
les
out
into
lock
sub
daa
or
sbb
inc
sbb
call
roll
pop
or
pop
and
and
xchg
or
iret
adc
push
mov
test
jge
iret
pop
outsl
icebp
sahf
cltd
push
adc
out
sbb
jns
mov
das
adc
out
outsl
dec
add
mov
sub
sub
inc
pushf
xor
cmp
std
pop
mov
jae
es
aam
pop
push
leave
cmpsl
cmp
push
push
int3
dec
out
or
in
mov
out
cmp
mov
push
jae
jmp
mov
lock
nop
icebp
sub
push
stos
cld
mov
jns
jnp
inc
movsb
fwait
inc
and
xchg
and
rcll
jno
add
out
std
dec
test
pop
fcoml
out
cmp
sub
push
stc
inc
xchg
dec
cmp
pminub
mov
in
je
pop
test
mov
mov
pop
jle
inc
lock
shlb
push
xchg
dec
test
movaps
stos
or
jno
xchg
mov
sarl
nop
stos
jl
push
inc
adc
pop
fsubrl
mov
jb
scas
cld
xchg
and
decb
inc
mov
add
aad
jl
test
inc
sar
adc
stos
rol
xchg
mov
push
cmp
xor
dec
and
out
leave
and
divb
fistpll
fiadds
cmp
mov
xchg
enter
pop
js
sbb
push
mov
mov
jg
and
frstor
int
sti
mov
pop
cld
jp
scas
pop
enter
push
lds
mov
mov
insb
imull
add
jmp
cmp
pop
js
pop
inc
cmp
flds
sub
xor
xchg
sub
mov
in
push
rcll
int
imul
pusha
lea
xchg
mov
mov
sub
out
fcoml
sub
outsl
cmp
inc
loop
jnp
mov
jnp
push
ja
out
mov
es
mov
and
sbb
dec
pusha
add
push
mov
addb
aam
adcl
xor
js
xor
loope
fs
inc
fildll
jb
or
xorb
jbe
into
adc
jl
call
cli
xor
fstp
add
pop
cld
cmp
imul
addr16
cmp
push
mov
add
inc
mov
mov
sub
fisttps
shrb
and
cmp
mov
and
nop
iret
mov
cmc
insb
sub
or
or
into
xchg
sbb
insl
inc
lret
filds
fnstcw
movsl
jecxz
mov
pop
test
das
xchg
int3
les
nop
inc
data16
nop
or
mov
push
cmpl
aaa
xchg
push
adc
call
xor
jle
dec
or
inc
push
add
push
mov
inc
pop
js
add
icebp
shl
inc
and
out
mov
adc
lcall
push
aaa
addr16
mov
pop
dec
mov
repz
or
jo
js
sub
popf
mov
add
arpl
jmp
out
dec
push
push
jl
inc
mov
mov
aaa
or
dec
and
enter
add
call
test
mov
cli
add
sub
stc
mov
or
call
inc
push
std
mov
cmpsl
mov
lock
cltd
push
loope
movsl
push
lods
xchg
or
adc
js
iret
fwait
jns
cvtdq2ps
scas
cwtl
push
xchg
jp
mov
adc
jns
and
out
movsl
cltd
push
pop
mov
arpl
xlat
lods
sahf
sbb
fnstsw
mov
pop
scas
pop
push
cld
or
push
or
lahf
xor
and
int3
and
mov
adc
and
mov
sub
add
push
aam
stos
adc
dec
cmpsl
adc
pop
paddsb
clc
mov
filds
cmp
sahf
adc
je
push
sbb
imul
mov
mov
add
out
adc
call
xchg
xor
and
mov
outsl
xchg
popa
xchg
dec
inc
imul
pop
cmpsl
fimull
push
ret
cmp
fs
pop
sbb
mov
xor
adc
xchg
jg
bound
pop
lret
lret
and
mov
push
sbb
negb
movsl
or
push
mov
add
ss
mov
pop
insl
popf
aaa
insb
or
pusha
adc
or
or
scas
shrb
xchg
mov
or
mov
push
and
mov
cwtl
shl
cwtl
push
mov
in
mov
adc
add
adc
mov
mov
jae
mov
fs
movsl
add
fstpl
cmpsb
xor
rorb
mov
call
repnz
and
outsl
out
insb
cmp
ret
sub
fidivs
cltd
mov
push
mov
xchg
jecxz
mov
pop
orl
sub
mov
inc
jecxz
pop
in
popf
jge
les
stos
fisubrs
loopne
mov
bound
adc
sahf
insb
or
cwtl
xor
inc
sub
jb
sbb
mov
ljmp
loopne
dec
aas
lds
test
incb
or
xchg
loop
cltd
rdpmc
mov
mov
inc
mov
repnz
fsqrt
insl
pop
loop
jnp
sub
fldt
push
mov
mov
add
shll
shr
pop
push
test
dec
loope
out
cmc
ja
jno
xchg
insb
push
xchg
std
into
add
cmp
sub
push
mov
int3
push
inc
cmp
out
jne
sbb
sub
cmp
inc
outsb
fs
icebp
movsb
mov
sti
or
inc
movsl
mov
movsl
rcr
mov
pop
mov
xor
jl
push
push
xchg
popf
test
jmp
xor
mov
jp
sub
or
mov
cld
leave
mov
fsqrt
inc
cmp
cmp
mov
mov
add
cmp
mov
aam
scas
lcall
data16
cmc
out
xor
roll
test
mov
daa
rorl
xchg
xor
std
push
mov
ss
test
adc
mov
and
bnd
sub
mov
inc
out
jge
xor
push
cmp
dec
fcmovbe
xchg
inc
ss
adc
lcall
xchg
mov
and
push
rorb
test
pushf
rol
scas
sub
sbb
jbe
add
cmc
movsl
jg
add
cs
sbb
jno
push
mov
cld
ret
movsb
js
movsl
and
pop
cli
mov
jl
sahf
insl
dec
repz
sbb
add
mov
cmp
pop
fildl
shlb
ret
xchg
ret
bnd
xor
mov
loopne
andb
xor
les
push
aaa
mov
mov
push
cmpsl
xor
mov
add
aam
insl
enter
insl
hlt
sub
pop
lods
sahf
aam
loope
cmp
enter
sub
lods
mov
inc
sbb
mov
and
dec
inc
pavgb
imul
jne
mov
loopne
test
pop
fisttpl
insl
loope
jl
sbb
aam
sub
sahf
aaa
or
ret
ret
pop
add
sub
push
dec
std
push
in
cmp
div
xlat
mov
cmp
call
add
movsl
aam
iret
outsb
das
cmc
fistps
cmp
pop
sbb
dec
das
cmp
pop
inc
rcr
adc
dec
icebp
xor
in
xchg
scas
inc
mov
dec
or
fcompl
std
push
loop
sub
ror
mov
lret
mov
rolb
push
xor
popa
aas
pop
pop
inc
mov
sbb
push
push
std
dec
inc
xchg
xor
inc
es
jo
addr16
fwait
inc
push
cmp
popa
mov
mov
mov
ficompl
scas
test
pop
std
scas
clc
out
pushf
pop
fstp
fwait
push
and
cli
add
inc
xorl
rorb
loop
arpl
inc
js
adc
int
fucom
inc
ud0
repnz
mov
test
or
push
sub
and
icebp
loopne
cmpsb
pop
lds
pop
lahf
xchg
dec
insb
fiaddl
stc
and
mov
push
dec
mov
push
sub
xor
push
cld
sub
fwait
ret
and
dec
or
push
stos
sbb
xlat
mov
xor
addr16
insl
jne
pushf
sub
inc
push
out
and
or
cmpsb
iret
sbb
cmc
insb
dec
std
ss
push
lock
jne
sub
push
lock
into
outsl
add
and
mov
dec
xor
jg
jmp
inc
lret
loope
ljmp
bound
loope
or
adc
loope
test
jmp
fwait
ret
es
push
pop
sbb
and
int
sahf
fs
pop
mov
outsl
dec
sbb
mov
mov
xchg
xlat
pusha
pop
leave
mov
mov
jle
xchg
fimull
lock
mov
inc
push
pop
jp
maxps
andl
test
ret
rcll
adc
pop
loop
mov
pop
orb
mov
xchg
add
in
jno
inc
jno
mov
cmp
loope
sub
inc
mov
mov
aaa
cmp
pop
mov
rolb
lcall
mov
sete
sub
and
cmpl
jge
les
in
jmp
inc
lret
clc
cmp
sub
out
ds
mov
push
imul
mov
push
xor
out
sbb
es
mov
nop
rcl
fcoms
icebp
negb
dec
mov
mov
hlt
shrb
adc
sbb
xchg
cmpsb
add
iret
lret
xchg
cmp
jg
loope
test
lock
cmp
lods
sub
pusha
add
loop
movsb
mov
hlt
out
mov
mov
aam
mov
test
sub
xchg
sub
ret
xchg
jb
adc
pop
and
mov
call
and
xchg
xor
jp
test
pop
gs
js
lahf
gs
fwait
pop
rorl
cld
lods
imul
xchg
sub
hlt
inc
sbb
and
adc
or
test
mov
shll
or
mov
popa
and
mov
xchg
rorb
jl
nop
cmp
adc
or
mov
fcomps
test
cmpsl
movsl
mov
pop
jg
pushf
pop
xchg
shlb
out
dec
adc
push
and
repnz
sbb
xchg
sub
xor
bound
jno
cld
repz
sbb
mov
loop
push
or
popf
aas
or
lcall
daa
adc
pop
cmpsb
jecxz
mov
mov
loope
jle
adc
mov
jle
mov
clc
xchg
sub
ss
mov
out
inc
xchg
adc
ss
fsts
dec
adc
in
test
mov
cmp
xlat
pop
out
inc
mov
aad
scas
dec
je
xchg
jno
cmpsl
sub
mov
and
xchg
inc
shr
or
add
es
dec
jle
mov
std
cmp
inc
mov
jno
addb
mov
sub
nop
mov
dec
movsl
sbb
dec
sbb
inc
loopne
sbb
out
fsin
dec
in
xor
push
imul
test
xchg
push
adc
stc
mov
mov
xor
add
cmp
icebp
or
mov
mov
lea
cmpsl
or
sbb
xchg
push
pop
push
adc
aad
jecxz
push
arpl
jp
ret
and
data16
xchg
jno
into
adc
mov
pushf
iret
fsub
adc
inc
mov
loop
int3
popf
sbbb
cltd
lods
jecxz
mov
fdivrl
inc
lcall
jnp
lret
mov
test
xor
inc
es
fldl
mov
movsb
push
and
inc
jno
xchg
xchg
mov
jecxz,pn
stos
int3
scas
fnstcw
iret
sbb
mov
shll
pop
xchg
stos
ret
imul
inc
jg
xchg
jl
bound
mov
mov
popf
cmpsb
jecxz
setb
dec
sarb
rolb
pop
rorb
mov
decb
lahf
movd
and
sub
lock
and
leave
push
in
fadds
jo
inc
inc
xorl
sahf
add
jmp
cmc
xchg
push
arpl
dec
sub
xchg
xchg
js
cmp
mov
repz
orl
xchg
mov
in
fnstenv
add
pop
test
movsb
and
lods
sub
add
clc
bound
iret
pop
mov
stc
mov
adc
loop
sub
mov
adc
sbb
ljmp
dec
fildl
push
gs
int
pop
lea
not
push
shr
lret
cld
sub
lahf
xchg
test
insl
test
xchg
orb
test
adcl
insl
mov
cwtl
mov
cmp
pop
jmp
xor
lahf
add
inc
cmp
or
pop
scas
jns
repnz
push
pop
rol
stos
push
outsl
out
sti
jecxz
jle
xchg
cmp
adc
pop
sbb
loopne
dec
lret
jmp
pop
adc
cli
sbb
lods
mov
xchg
sbb
push
dec
loope
pop
fdiv
xchg
sub
mov
ds
mov
jno
les
mov
push
dec
in
inc
je
out
shrb
add
mov
pop
addb
lds
xchg
dec
sti
xor
clc
fldl
mov
pop
test
mov
add
jns
sbb
idivl
cld
mov
lea
arpl
insl
cmp
and
push
shlb
add
push
aas
mov
or
fadds
scas
xlat
dec
pop
sbb
imul
lcall
stc
orb
and
repnz
sahf
mov
gs
mov
imul
pop
repnz
rorl
mov
sbb
test
xor
fwait
incb
xor
mov
sbb
js
daa
lods
pop
adc
mulb
sbb
aam
cmpsl
in
shll
out
clc
jo
xchg
and
test
jp
dec
in
cs
cmp
adcb
sbb
out
mov
jb
dec
adc
je
ficompl
cmp
inc
lret
or
movsl
pop
push
rclb
fcompl
scas
cld
sbb
stc
push
and
and
iret
mov
and
pop
int
push
jmp
shll
mov
shrb
sbb
stc
fmul
and
adc
dec
hlt
mov
icebp
testl
pop
ja
dec
fnstenv
cli
out
xor
test
rclb
lock
std
inc
cmpsl
mov
push
rclb
ja
dec
call
fisttpll
pop
and
popf
xchg
push
jns
sahf
sbb
inc
pop
push
dec
inc
test
arpl
jb
imull
push
sbb
mov
sub
inc
adc
cltd
jbe
push
mov
inc
cmp
sbb
push
sbb
lods
loop
cmpb
pop
push
mov
cld
idivl
sbb
imul
pop
mov
cmp
loopne
push
sbb
pop
mov
cs
cmp
popf
adc
addr16
cltd
cmp
mov
xchg
int3
iret
mov
mov
bound
cwtl
xorb
imul
xor
inc
cmp
xor
movsl
es
mov
fwait
xlat
mov
adc
mov
or
and
mov
pusha
in
sbb
or
pop
pop
adc
xor
adc
insb
in
idiv
fdivrl
fstpl
xor
sub
cmp
adc
nop
call
cltd
lcall
and
scas
cmp
test
pushf
and
mov
dec
popa
insb
movsl
les
add
sbb
fstl
cmp
push
sbb
lds
shrl
les
call
outsl
dec
jns
lock
dec
pop
scas
das
clc
or
cltd
cmpsl
ja
test
inc
sub
sub
outsb
sub
inc
dec
sub
dec
sub
sub
ret
out
fdivp
lods
jmp
jb
popf
test
mov
push
ss
sbb
sbb
mov
xchg
out
push
mov
adc
mov
jae
mull
lret
in
jge
lock
lahf
std
psubd
add
pop
dec
hlt
jecxz
inc
stos
mov
mov
imul
cmp
sbb
dec
loop
lret
stos
mov
imul
add
push
xchg
mov
gs
roll
int
fistps
dec
bound
test
clc
shll
push
pushl
insb
and
mov
shll
push
loope
xchg
sub
push
sbb
jge
pop
loopne
mov
pusha
ljmp
scas
cld
cld
xor
push
mov
subl
xchg
push
ret
mov
sbb
inc
dec
enter
outsb
icebp
or
dec
and
aam
push
add
mov
notb
adc
jecxz
pop
mov
fnsave
cli
inc
add
jle
sbb
xchg
rcl
or
ret
mov
pop
cmp
dec
xchg
mov
cli
popa
rorl
jmp
xchg
jns
or
pop
or
psrlw
push
pushf
addr16
or
sub
dec
mov
mov
mov
mov
mov
fistpll
dec
enter
push
adc
insl
dec
mov
jle
lds
adc
movsl
mov
lds
inc
popa
movsl
pop
and
fmul
pushf
aas
insb
popf
sub
lret
sub
dec
rcll
cli
fadd
sahf
add
xor
push
jge
lcall
mov
ret
sti
imul
pop
add
in
fsubrl
int
adc
ret
pusha
aad
xchg
sbb
pop
in
cld
pop
in
in
sub
dec
rolb
sar
subl
adc
test
mov
or
xchg
sbbb
xchg
movsb
or
arpl
xor
jo
cmpl
ja
and
fldcw
insb
lret
push
and
xor
lds
addb
into
pop
popf
mov
jb
xor
push
mov
repnz
lcall
mov
mov
xor
test
std
mov
inc
in
pop
mov
dec
push
jbe
iret
pop
jge
subb
cli
addr16
lods
mov
xchg
out
pop
inc
out
xchg
adc
xchg
fwait
push
rcrb
push
lret
dec
and
dec
shll
aas
pop
fists
fcoml
popf
insb
or
xor
cld
mov
mov
cmp
repz
stos
mov
mov
add
jae
adc
lahf
movsb
jbe
xor
sub
fdivp
or
inc
fsubrl
mov
lret
pop
std
imul
jns
xor
mov
icebp
sbb
sbb
ret
out
push
bound
out
mov
mov
jge
inc
in
push
sarl
sahf
addr16
or
mov
pop
stc
sbb
idiv
rolb
or
int3
fwait
push
sbb
pop
rep
mul
jb
cmp
pushf
rorb
inc
int3
pop
inc
sbb
fists
push
jg,pt
cmp
sub
cmp
pop
dec
pop
imul
mov
lret
dec
mov
pop
ret
push
insb
jbe
xchg
jb
push
rclb
sub
fcmove
jp
int
ret
dec
shll
jae
jo
out
xor
add
ret
cmp
lds
lcall
jnp
pop
out
lock
jecxz
mov
lcall
stos
and
sbb
mov
mov
pop
xor
mov
push
lods
xor
test
mov
jb
pop
fsub
xchg
fildll
daa
xor
das
inc
inc
sbb
test
aas
faddl
pop
test
scas
add
stos
lcall
jne
icebp
lods
jecxz
sub
sbb
popa
loope
or
push
lcall
mov
loopne
cmc
sub
xor
pop
mov
mov
rorb
jecxz
inc
in
hlt
lret
and
cmp
inc
add
stos
mov
push
jmp
pop
jmp
mov
jnp
in
ss
inc
sbb
addl
int3
push
outsb
xchg
mov
mov
cwtl
pop
mov
mov
out
popa
mov
xor
aas
fs
xchg
push
rcr
mov
xchg
xchg
xchg
or
cmp
mov
pop
test
mov
add
push
pop
cmp
int3
test
xchg
cmpsl
adc
and
sbb
rcrl
add
lahf
into
es
mov
mov
or
add
xchg
xchg
in
jecxz
or
loopne
jge
notb
les
shlb
imul
mov
sub
test
std
cwtl
sub
es
ja
mov
insb
jle
clc
bound
sbb
sbb
leave
dec
pop
std
mov
cmpsl
popa
out
mov
repnz
pop
xchg
or
push
sbb
xchg
outsl
lods
je
loop
popa
push
gs
pop
out
sbb
pushf
sub
push
xor
mov
sbb
clc
dec
or
sbb
aam
lods
fistl
pop
lea
jmp
mov
movsl
out
bound
push
aas
mov
push
jne,pn
pushf
imul
or
roll
pop
mov
sbb
xlat
jg
sbb
add
xor
adc
ljmp
jge
cmp
pop
inc
cmpsb
inc
imul
hlt
jmp
nop
rcrl
jmp
xchg
jo
sub
orl
mov
mov
push
cmp
cmp
push
adc
mov
repnz
fnstsw
dec
iret
dec
mov
out
push
leave
push
push
lcall
nop
shll
loop
push
sub
fs
pop
xchg
and
jo
sti
xorb
mov
push
pop
rcr
jp
adc
stos
divb
out
fcmove
inc
add
outsl
jge
out
xchg
std
jo
and
test
fmulp
dec
xor
cli
jb
inc
hlt
cmpl
xchg
sti
in
xor
mov
or
outsb
and
add
add
roll
pop
or
dec
jnp
mov
jl
sti
jb
mov
stc
prefetcht1
sub
cli
xchg
xchg
fucom
les
sbb
xchg
xchg
xchg
cld
jecxz
jge
and
rclb
add
sub
cmp
mov
pop
pop
xchg
xchg
out
rclb
jbe
push
pushf
jg
cmp
fs
cmp
gs
mov
xlat
fbld
push
insb
jl
pop
test
js
inc
mov
mov
dec
test
hlt
mov
mov
lea
mov
out
mov
in
arpl
sub
data16
clc
sbb
lret
lret
cmc
sarb
lods
test
mov
or
stos
push
cmp
xor
fwait
add
adcl
in
mov
dec
dec
popa
bound
popl
adc
daa
imul
in
mov
ret
imul
inc
mov
and
adc
cwtl
inc
popf
inc
mov
inc
fidivrs
loopne
movsb
and
jle
pushf
in
sub
mov
xchg
imul
in
xchg
mov
add
test
lds
sub
cltd
js
in
and
mov
popa
xchg
dec
out
lcall
jecxz
sub
jmp
push
cmp
repnz
push
mov
xlat
push
fldt
pop
jns
in
jl
aam
aam
jl
bnd
sbb
iret
test
pop
fsub
fdivl
scas
mov
out
xchg
mov
enter
pop
jo
mov
dec
mov
mov
repnz
jns
hlt
xchg
sub
cltd
add
fcomi
mov
pop
ja
fcmovu
insl
or
mov
fbstp
cltd
pop
xchg
xchg
fwait
in
xchg
clc
inc
scas
in
xchg
outsl
jmp
cmp
dec
cmp
xor
dec
cmpsb
loope
mov
movsb
leave
mov
sub
inc
xor
jo
int3
shlw
sbb
mov
add
cmpsl
push
lcall
test
adc
es
lea
mov
movsl
mov
dec
mov
mov
xchg
mov
push
pusha
aad
scas
stc
xchg
inc
dec
imul
int3
loope
inc
xorl
gs
jnp
outsl
pop
imul
popf
in
cmc
pop
sub
mov
jl
add
iret
cli
mov
dec
add
mov
bound
push
xchg
sub
ljmp
pop
arpl
lods
add
jge
sbb
stc
cmc
int
test
jmp
popa
pop
in
xchg
xchg
cmpsl
and
gs
mov
push
pop
rcrl
test
jle
repz
push
ja
xor
ds
scas
inc
cmp
inc
lods
mov
add
stc
sub
sub
cmp
mov
xor
jg
sbbb
and
inc
sbb
cmp
xchg
insb
js
in
pop
test
sbb
stos
ret
adc
add
mov
mov
jno
mov
mov
xchg
addb
push
mov
add
pushf
cwtl
test
or
icebp
dec
push
aam
mov
data16
es
mov
inc
cmpb
fincstp
scas
lods
fwait
subb
sbb
fistpll
hlt
and
pop
out
adc
cmpsl
pop
leave
mov
cmpb
push
mov
push
pusha
ficompl
inc
cmp
adcl
out
int3
and
js
mov
xor
fisttps
fidivrs
leave
pop
sub
iret
push
aaa
dec
pop
into
push
mov
mov
lods
rcll
add
pop
pop
pop
inc
lods
lods
cmp
aam
mov
or
jno
xchg
jp
push
lret
dec
test
cmpsb
ret
mov
jo
cmp
jecxz
mov
repnz
jo
inc
out
rorl
lahf
shll
aad
test
mov
pop
pop
mov
mov
lcall
jne
push
insb
in
popf
hlt
and
arpl
stc
add
outsb
push
push
into
xor
dec
ss
mov
insb
ss
jnp
es
fnstenv
sub
jne
and
inc
fcmove
lcall
cmp
idivb
pusha
outsl
pop
mov
mov
punpckldq
lahf
repnz
sbb
dec
add
add
inc
test
dec
sub
push
fld
fwait
pop
cmp
es
mov
test
dec
pop
push
mov
or
xchg
cmc
sub
pop
cmc
jecxz
ljmp
iret
enter
jno
mov
ja
mov
stos
hlt
int3
cmp
daa
mov
ds
pop
mov
push
data16
clc
inc
push
pushf
fimull
push
push
and
add
les
cmp
insb
decb
dec
xor
sbb
cmpsb
sbb
sub
in
mov
jp
or
xchg
nop
push
hlt
pop
adc
push
call
pop
mov
nop
cmpsl
pop
jne
icebp
mov
xchg
mov
push
and
enter
pop
bnd
negl
push
add
xorb
bound
push
mov
xchg
js
mov
dec
shll
sbb
sbb
jl
jl
jb
ret
sbb
loop
aad
xor
add
inc
movsl
sahf
push
int3
jne
sti
jge
stos
in
adc
aam
inc
xchg
mov
xor
xchg
xchg
fistl
cmpsl
imul
jno
sub
fcmovbe
lods
cmpsl
fmuls
out
daa
outsb
xor
dec
std
mov
call
pop
cmp
jl
inc
daa
push
jns
fbstp
test
loop
lods
cmp
inc
cld
add
jb
insl
das
jp
mov
jecxz
cltd
test
pop
dec
push
movsl
xchg
std
inc
lea
pop
and
shlb
add
or
add
int
push
jle
pop
inc
or
out
xor
in
jb
cmpsl
jns
pop
inc
inc
out
fsts
mov
lock
jno
movsl
stos
pop
jge
js
outsb
sbb
movsb
add
jecxz
mov
lahf
pop
add
pop
ljmp
sub
decl
in
sub
lods
stos
icebp
movsl
mov
test
mov
pop
das
mov
pop
mov
in
mov
inc
aad
jo
xchg
jg
cmpsb
sub
out
push
ret
mov
arpl
mov
imul
inc
xor
orl
orb
mov
inc
test
orb
inc
ja
test
sub
push
xchg
or
xlat
arpl
shr
adcl
mov
pop
cmp
jns
xchg
dec
sbb
lods
jbe
pushf
ret
add
push
cmp
adc
mov
pusha
data16
out
adc
pop
jmp
ds
mov
aas
push
dec
xor
lods
js
pop
test
dec
mov
outsl
xchg
or
aam
pop
dec
xchg
or
subb
out
out
cli
xor
lret
sbb
adc
sub
out
push
pop
imul
push
jne
and
movsl
in
outsb
xchg
es
imul
lds
add
adcl
push
pop
jnp
div
jg
xor
sub
call
mov
nop
cli
cmp
pop
pop
lock
sbb
sub
dec
lods
add
sbb
mov
stos
dec
jp
push
xchg
dec
inc
push
cmc
adc
loopne
lret
ja
les
aad
dec
pop
in
sbb
jl
mov
inc
int
sub
adc
ret
ja
aad
bound
xchg
cmpb
push
pop
std
mov
jmp
imul
cltd
dec
cmpsb
lret
pop
sbb
cld
ja
or
add
movsb
push
mov
pop
int3
repz
inc
neg
loope
into
mov
and
ss
aad
jb
mov
aad
jl
xlat
mov
pop
adc
in
sbb
dec
and
jmp
xchg
sbb
scas
or
insl
mov
push
daa
jmp
test
subl
popa
lret
inc
jmp
or
xchg
ret
out
xor
inc
and
dec
les
adc
cltd
lret
mov
jno
mov
dec
add
cltd
mov
call
cmp
out
insb
sub
inc
jbe
fcoms
inc
add
sbb
xchg
ret
test
jae
mov
xchg
cmp
inc
cltd
dec
stos
nop
ds
and
test
push
daa
f2xm1
pop
repz
js
jp
mov
cmp
xor
inc
iret
lgs
or
cs
clc
iret
inc
into
cs
incb
ret
pop
cmc
insl
cmpsl
mov
jecxz
cltd
lret
push
mov
cmp
pusha
and
jns
iret
adc
inc
sub
or
fucomip
scas
in
lahf
dec
fadds
iret
ja
add
mov
call
adc
and
push
lea
sub
sub
or
out
test
fmull
lods
mov
sbb
aam
movsl
sbb
loope
xchg
mov
cmp
push
mov
mov
adc
and
out
js,pt
xor
sub
xor
mov
sub
lret
or
push
pop
cs
adc
mov
dec
xor
stos
mov
jp
test
cmpl
mov
ret
das
int
lcall
cld
dec
jmp
idivl
lods
cmp
in
shl
in
leave
pop
daa
inc
outsb
adc
mov
fdivrs
hlt
aas
sbb
inc
ret
push
push
rcrl
dec
xlat
pop
sbb
inc
stos
mov
mov
addl
arpl
adc
sbb
inc
int
inc
shll
outsl
push
imul
sti
jmp
push
sbb
cmp
pop
jnp
out
test
test
xor
xchg
lret
adc
sbb
cwtl
addr16
and
aas
scas
subl
inc
scas
fisubrs
jno
cmp
sbbb
hlt
divb
jl
or
ja
dec
xlat
add
xor
cli
or
add
cmpsb
lret
xor
mov
dec
jb
stos
sbb
subb
jne
shrl
mov
dec
sbbb
sbb
sbb
stc
xchg
push
popa
pop
mov
insl
repz
pop
jno
xchg
add
cli
jg
cli
pop
fmul
xchg
stc
fwait
loope
push
bound
mov
cmp
and
clc
fwait
and
outsl
jge
pop
in
or
fmull
or
rclb
out
xchg
adc
sbb
popf
and
cmp
stos
lret
push
clc
std
pop
scas
cmp
out
pop
pusha
jns
out
sbb
xchg
mov
xchg
mov
and
in
data16
fdivs
mov
div
test
out
imulb
dec
outsl
dec
sbb
xchg
loopne
lret
scas
cltd
lahf
jns
mov
inc
mul
scas
adc
push
nop
adc
cltd
int3
pop
das
cmpb
cmp
fadds
ret
dec
icebp
sarb
outsl
mov
push
loop
pusha
orb
jne
sbb
mov
adc
out
push
pop
ret
cld
xchg
add
je
dec
jnp
fs
mov
sahf
into
or
insb
mov
in
cmp
dec
cli
stc
sbb
or
mov
lret
or
test
pop
push
bnd
xchg
mov
mov
inc
push
mov
xchg
inc
mov
mov
leave
loopne
test
or
aaa
jmp
sahf
pusha
loopne
adc
xchg
xor
mov
ret
mov
or
cmp
cmc
mov
testl
mov
sbb
ret
fldenv
loop
test
add
loopne
pop
shll
dec
incb
stos
std
addl
stc
fbstp
jecxz
lcall
rcl
aas
push
or
dec
xor
je
or
pop
sbb
push
push
popf
push
mov
inc
mov
mov
pop
cwtl
xchg
add
lret
inc
cmp
jo
push
test
add
and
sbb
sbb
pop
mov
and
repz
inc
or
mov
shr
test
lcall
adc
lea
jecxz
outsb
gs
popa
sub
dec
shlb
dec
mov
fidivs
xchg
sub
push
in
jo
or
fbstp
jne
sub
mov
pop
ret
push
fwait
push
and
xorl
rorb
jne,pn
loopne
fists
sbb
icebp
es
push
out
xlat
outsb
push
mov
call
test
jp
jns
jp
popf
push
cmp
push
or
adc
push
or
lcall
ds
adc
lcall
lock
sbb
packssdw
cwtl
mov
movsb
arpl
cltd
daa
imul
shlb
cmp
dec
mov
clc
pop
lods
mov
cltd
sub
mov
add
pop
dec
push
dec
inc
inc
andb
mov
jb
mov
inc
inc
mov
sbb
movsb
xchg
rcrl
sbb
fimull
mov
std
lea
ret
push
movsb
sahf
cmp
jno
jp
aad
xor
clc
cltd
or
repz
rcrb
jle
adc
xlat
mov
addr16
test
cmp
add
scas
pop
sbb
inc
xor
sti
jno
andb
je
inc
dec
fisubrl
pop
push
xchg
ja
jmp
sub
das
push
adc
push
xor
push
mov
xchg
stos
adc
mov
adcb
pop
xlat
push
pop
stos
test
mov
ja
sar
jle
aaa
push
push
sub
xchg
jae
sub
and
lock
inc
mov
dec
pushf
leave
out
decb
xor
outsl
cmp
add
mov
or
cmc
inc
sub
shlb
adc
pop
iret
push
fisubl
sbb
and
adc
sbb
push
inc
outsb
mov
cwtl
ja
into
cmpb
pop
adc
lock
in
sbbl
or
cld
add
and
popf
or
jo
xchg
rcll
lret
cmpsl
addl
mov
pop
ss
or
sub
repz
fidivrs
xorb
xor
sbb
lret
andb
mov
adc
scas
arpl
cmp
mov
scas
jb
enter
cmp
lods
lahf
jbe
int
xor
or
cmp
xchg
loop
popa
and
add
test
inc
sti
jo
sub
loopne
das
stc
pushl
lret
jbe
fdivp
rcrl
xchg
jp
adc
pop
sbb
sahf
lea
sub
dec
or
dec
lds
fcoms
push
lock
push
sbb
or
daa
fstpl
lcall
cmp
push
fwait
pop
subb
popa
popl
fs
dec
inc
loope
imul
movsl
std
dec
mov
sbb
mov
sbb
sbb
lods
mulb
test
scas
inc
fs
sub
push
cld
push
fsubp
xchg
or
sldt
mov
cmp
mov
add
and
jae
add
pop
push
sbb
lret
cmp
inc
ds
test
andl
cld
mov
es
pushf
mov
push
loop
push
paddsw
ficoms
std
pushf
mov
and
fdiv
rcl
repz
lahf
in
xchg
ja
test
jmp
lods
jns
sub
adc
int
mov
movsl
in
int3
mov
repz
enter
pop
ss
push
jl
xor
mov
xchg
push
in
jmp
call
pop
push
notl
mov
fwait
lret
sub
loopne
in
xor
das
mov
and
xor
cli
xchg
push
cli
shll
mov
and
jns
pop
push
inc
push
mov
push
enter
call
inc
pop
divb
popa
incl
mov
movsl
int3
es
or
repnz
cmpsl
push
cmp
and
out
ret
mov
dec
sahf
fimull
in
sub
loop
cmp
scas
adc
repz
notl
fwait
jl
xor
xchg
lret
lahf
or
inc
mov
xor
add
orb
cld
test
imul
sbb
lcall
jg
sbb
call
mov
mov
mov
jge
sbb
add
in
outsb
or
aas
xchg
cmp
mov
call
out
pop
inc
mov
xchg
xchg
add
leave
sub
test
lcall
les
aas
mov
outsb
into
xlat
and
cmp
mov
repnz
pop
movsb
xor
lret
xchg
rcr
mov
adc
lods
orl
cmpsl
push
test
inc
jp
lods
mov
and
clc
mov
popf
or
and
push
imull
loop
or
jp
mov
xchg
jmp
jmp
mov
pop
test
cmc
pop
add
fnstsw
lds
pop
fwait
outsb
pop
test
subl
scas
in
cmp
mov
scas
test
fldenv
outsb
jne
insb
xchg
sahf
sub
lret
mov
es
sahf
out
mov
jbe
or
popa
jl
outsl
dec
fsubrs
out
jg
pop
mov
decb
xor
pop
xorb
cmp
push
xorl
sub
pop
cmpsl
fwait
xchg
mov
jo
fnstenv
mov
mov
cltd
and
xchg
out
jecxz
push
jo
insb
inc
sti
lret
mov
push
mov
push
pop
push
jmp
pushf
push
fwait
xchg
out
aas
fnstenv
pop
ret
movsl
or
cli
mov
inc
shr
sub
cltd
into
xor
jbe
pushf
mov
or
pop
faddl
dec
xchg
out
dec
scas
imul
clc
sub
pop
addl
rorl
sahf
jne
mov
lret
push
push
jne
and
cmp
mov
jbe
sahf
cmp
insl
pop
cmp
dec
add
or
jecxz
in
push
pusha
insl
orb
sbb
pop
testl
add
jmp
sti
incb
sbb
xchg
popf
ds
int3
ss
mov
xor
pop
aaa
cwtl
loopne
inc
pop
mov
stos
hlt
xor
pop
or
in
dec
aaa
jle
dec
fsubp
test
mov
xchg
jg
out
adc
out
roll
pop
sub
xor
jae
leave
loopne
int3
jno
je
push
insl
sbb
lret
and
loop
das
ret
mov
mov
jge
xchg
inc
iret
sbb
pushf
scas
push
out
fstpl
cmp
push
mov
out
sar
dec
sahf
pop
push
mov
dec
popa
sub
mov
outsl
subl
cltd
incb
clc
or
int3
jo
jbe
push
stos
fstp
and
mov
adc
mov
int
cmpsl
into
ds
cmp
pop
inc
push
outsb
sbb
mov
shll
add
out
gs
aad
mov
xchg
dec
adc
icebp
jb
das
sub
and
sbbl
incb
dec
in
lods
inc
int
inc
sub
cmp
shll
cwtl
inc
push
xchg
repnz
sub
lcall
shl
loope
aad
push
pop
mov
test
push
or
or
lea
and
aad
pop
xchg
mov
popf
xor
add
insb
jl
lahf
jnp
cmp
faddp
shrb
test
add
jnp
or
pop
lods
mov
jb
and
and
test
jecxz
push
jg
or
movswl
push
aaa
push
xchg
dec
add
scas
xchg
ret
fstps
inc
inc
pop
fsubrs
and
mov
xor
fisubs
add
fld
xchg
enter
int3
lods
orl
jl
ljmp
xchg
xchg
cwtl
lods
fdivl
sub
test
push
addr16
adc
xchg
inc
jb
push
stos
mov
cmpb
jno
les
popf
rcl
jne
dec
cmp
fdiv
int
push
cwtl
push
test
jns
fistps
fnstcw
aad
mov
mov
sub
roll
sub
out
pop
jge
scas
fs
pop
pop
sbb
add
jae
cwtl
mov
add
add
cwtl
das
mul
xor
int
xor
xchg
mov
sub
jae
mov
outsb
sbb
adc
sbb
jp
mov
adcb
xlat
mov
rclb
jecxz
pop
cmp
pop
pop
sbb
ret
lcall
in
dec
lock
ja
mov
mov
adc
ljmp
add
lods
xor
das
in
inc
cmp
pop
sbb
add
icebp
pop
pop
jecxz
xor
gs
jnp
out
sahf
test
xchg
insb
add
xchg
pop
es
push
dec
cli
push
aad
adc
dec
aam
ror
or
push
or
pusha
mov
jbe
pop
xlat
iret
cmpsl
int
push
sub
test
mov
inc
push
lahf
pop
fstps
stos
jns
mov
add
stos
stos
test
out
cmp
sbb
loop
mov
fs
sbb
mov
pusha
pop
pop
fwait
aas
push
outsb
pop
inc
cmp
inc
fistl
or
scas
ljmp
inc
repz
push
pop
out
sub
out
or
js
adc
lds
add
mov
out
cwtl
test
sub
xchg
xchg
repz
fimuls
rcrw
adc
sbb
pop
cmp
mov
ret
out
adc
mov
jnp
cmp
int
sbb
xchg
test
loop
test
pushf
pop
pop
cld
cmp
gs
loop
adc
lret
in
jnp
adc
cmp
and
ja,pt
cli
fdivrp
mov
mov
pop
lea
xor
enter
xlat
inc
jecxz
roll
xchg
xor
ja
icebp
scas
iret
lock
sub
loope
add
mov
addr16
jmp
sub
xchg
mov
cmp
push
lds
lock
push
inc
int3
sbb
mov
lock
mov
dec
lret
enter
iret
mov
ret
jb
ret
mov
mov
dec
mov
insb
xchg
add
stos
adc
pop
sbb
xlat
mull
negb
xchg
les
test
sub
pop
sbb
push
jg
inc
jnp
mov
fs
repz
jmp
add
xchg
mov
pusha
pop
adc
jecxz
mov
sar
dec
lret
sbb
pop
mulb
insb
mov
fwait
mov
cmp
lcall
mov
scas
sbb
mov
or
in
dec
push
loopne
ret
push
inc
mov
dec
cmpsl
pusha
mov
outsl
leave
mov
lret
sbb
enter
inc
dec
cmp
push
sbb
enter
fistl
push
sub
mov
mov
dec
and
push
cmp
icebp
mov
int
jns
push
scas
sbb
sbb
mov
xchg
icebp
add
inc
lahf
inc
jnp
sar
xor
sbb
adc
lahf
js
pop
lret
mov
inc
cmp
jge
hlt
inc
jno
push
push
sbb
dec
cmp
ljmp
and
insl
mov
notb
pop
shll
repnz
cli
add
sahf
mov
test
xor
rsqrtps
dec
add
pop
int3
lods
inc
inc
mov
dec
data16
aas
mov
js
push
lock
or
repz
adc
movsb
mov
test
das
jne
dec
inc
cmpsb
xor
sub
xchg
int3
outsl
enter
stos
jbe
mov
and
in
xchg
mov
cmp
push
jle
add
push
pop
jge
sub
test
inc
adc
psraw
fstpt
xor
in
clc
xchg
adc
adc
ja
aad
add
fbld
int3
push
incb
fucom
lock
fwait
adc
enter
fsubrl
mov
lret
shlb
aas
mov
lret
in
adc
or
rorb
mov
pop
movsl
stos
inc
imul
mov
dec
fidivs
lock
pop
outsl
cmp
pop
insl
cld
push
out
cs
jno
cwtl
xchg
push
mov
shll
push
das
push
insb
popa
outsl
js
sbbb
fimuls
aam
ret
bound
add
cmp
mov
xor
jb
mov
sbb
xchg
xor
and
jne
pushf
in
push
lods
cli
hlt
out
out
stc
hlt
lahf
pushf
fidivrl
mov
ja
jle
sbb
imul
push
repz
sti
add
sub
inc
call
lahf
fucomp
jnp
lods
scas
dec
jne
aad
or
test
cmp
jg
jae
push
scas
sub
loop
pop
jmp
shl
sbb
outsb
leave
in
stc
pusha
add
stos
inc
pop
pop
popa
cmpsl
imul
and
pushl
push
jno
mov
outsl
scas
fwait
add
fsubp
sbb
jmp
fstl
je
dec
lcall
push
repz
hlt
loope
cmpsb
adc
outsl
xchg
ljmp
and
outsb
rorl
iret
pop
mov
pop
cltd
les
mov
popa
jge
mov
lea
movsl
xor
mov
sarl
fnstsw
hlt
fstps
out
add
adcb
add
lret
loop
push
pushf
xchg
imul
les
sar
gs
fldl2t
xor
inc
repnz
sarb
mov
fildl
sti
aad
jae
pop
add
push
aam
xchg
and
fsubl
xchg
dec
jnp
or
inc
mov
fidivrs
xchg
movl
jb
cmp
rorb
xor
cli
clc
loope
outsb
aad
sub
pop
push
cmpsl
roll
ds
leave
pop
movsb
std
mov
push
out
test
pushf
jo
cld
dec
ret
es
loope
adc
inc
inc
mov
daa
fisttpll
mov
rcl
stos
xorb
lods
insb
into
xlat
fldt
cs
ds
shrb
in
insl
xor
or
lret
inc
jmp
add
xor
jg
jno
or
dec
sti
inc
adc
je
mov
es
pop
mov
inc
mov
dec
push
icebp
adc
sub
mov
repnz
inc
lcall
push
jp
jle
in
test
or
xchg
aas
push
or
cmp
xchg
sti
add
sti
mov
cmp
cmp
lahf
shll
inc
cmp
out
and
jnp
inc
dec
dec
cmpsb
psrld
insb
sbb
cli
and
mov
rcl
fsts
stc
ljmp
cmpl
out
add
cwtl
dec
orl
xor
or
inc
adc
stos
js
and
inc
push
mov
addl
fcompl
aaa
test
lret
icebp
adc
jecxz
dec
aam
xlat
aad
aaa
imul
fwait
pop
mov
xchg
push
stos
jnp
dec
outsl
pop
insl
push
test
faddl
les
pop
repnz
cmp
pusha
testb
adc
pop
mov
xchg
les
cs
movsl
lcall
mov
add
and
js
xor
cmp
cmp
xchg
mov
in
fnstsw
cmpsl
and
aam
fs
jno
cs
fstpl
jmp
ret
sub
mov
push
dec
xor
cltd
or
movsb
push
add
fdivrl
loop
or
stos
lcall
cli
roll
xorb
mov
xor
lea
jbe
and
daa
mov
rcl
ret
call
and
inc
pop
sarl
fsubs
ss
in
xor
in
or
out
push
push
out
or
das
ret
fwait
add
repnz
shrb
mov
mov
adc
add
rcrb
stos
or
mov
and
xor
fistps
pop
cltd
mov
or
adc
loop
jnp
ficomps
loopne
sub
mov
into
xor
push
cmp
add
jg
mov
mov
push
xchg
scas
inc
fldcw
add
pop
scas
sti
loopne
push
mov
cmpsb
aaa
stos
loopne
dec
add
cli
push
pminsw
ret
jne
xchg
out
xchg
std
jle
cmp
mov
and
pop
mov
push
aas
jg
cltd
adc
sbb
or
pop
lret
push
adc
mov
mov
sarl
xor
inc
stos
push
mov
sub
sub
push
push
je
inc
sub
mov
cmpsb
mov
inc
sbb
incl
push
xchg
es
xlat
ret
inc
int
sbb
mov
and
cmpsb
inc
mov
test
pushf
push
mov
add
pusha
push
push
test
insb
cmpsl
out
xor
hlt
out
jle
cmp
mov
cmp
adc
loop
in
add
icebp
aas
stos
das
xor
test
jecxz
cmpsb
mov
sti
dec
xor
cmp
fwait
push
mov
pop
adc
inc
stos
xor
scas
cmp
pusha
rclb
stc
fisubrs
sbb
dec
jnp
adcb
ss
pop
lods
enter
sbb
or
pusha
stc
cmc
add
es
lcall
call
stos
jmp
ljmp
divb
in
lock
aad
and
and
ret
iret
sbb
popf
dec
mov
sub
pop
cmpsb
ret
inc
movsl
aas
sarb
and
jg
movsl
mov
popa
xchg
and
cli
mov
faddl
or
loopne
enter
sbb
sub
xchg
add
ja
pop
xlat
add
jmp
popa
out
pop
mov
call
into
lcall
sbb
sub
leave
fstl
ja
pop
stos
mov
insl
into
mov
fcmove
movb
push
push
fldlg2
jb
pop
or
and
push
lret
adc
cmp
shll
add
ret
xor
mov
or
ret
dec
clc
lcall
neg
xor
pop
std
mov
aas
mov
mov
lret
and
dec
test
cli
out
and
in
cli
leave
push
daa
xor
idivl
inc
adc
hlt
pop
inc
push
sub
xor
test
das
loopne
pop
lea
push
add
lret
cmp
cmp
and
mov
adc
insl
push
fst
xchg
shr
leave
popf
loop
int3
dec
stc
xor
cmp
ja
fildl
cld
or
pusha
mov
ret
add
pop
sarl
ja
scas
sbb
push
mov
mov
enter
cld
mov
mov
or
mov
jns
or
or
push
jno
sbb
push
jecxz
push
lret
xchg
xchg
push
pop
mov
lock
out
aad
add
dec
in
push
mov
ret
push
ss
sub
jnp
adc
outsl
dec
cmpsb
push
jno
test
xchg
dec
xchg
and
and
jae
inc
adc
dec
sub
out
es
mov
lret
jle
lods
dec
cmp
dec
repz
lret
cmpsb
arpl
cltd
cmpsl
dec
sub
jmp
inc
insb
mov
out
lds
push
addb
mov
out
or
out
xor
sahf
ja
dec
dec
sbb
pop
loopne
or
jnp
in
ret
inc
daa
je
mov
int3
sbbb
ficoml
and
sbb
xlat
scas
mov
aad
leave
adc
out
push
xchg
push
mov
dec
imul
ss
inc
divl
adc
xor
insb
pop
push
js
push
mov
cmpsl
add
add
pop
adc
movsl
xchg
icebp
jle
adc
sbb
and
pop
mov
pusha
sub
in
fstpt
mov
push
mov
mov
inc
xor
xor
push
jb
or
imul
fcoml
lea
call
xchg
or
sub
imul
out
cli
in
ret
shr
mov
fadds
and
testb
push
stos
push
ss
adc
cmp
and
sub
jnp
out
aam
xchg
pop
loop
pop
aam
push
out
sarb
sub
inc
loop,pt
mov
dec
fisubrl
dec
arpl
or
xor
clc
rcl
mov
aas
mov
filds
inc
xchg
pop
cmc
mov
daa
pop
stos
jns
mov
arpl
aad
aad
jp
xchg
in
cmp
scas
xchg
jge
jo
add
movsl
out
cmp
out
dec
pushf
mov
inc
out
and
pop
mov
sub
lock
dec
lahf
leave
push
push
std
pop
sub
jecxz
stos
inc
xchg
repnz
dec
sbb
leave
dec
sub
sbb
sahf
out
les
cmp
push
xor
mov
pop
lods
mov
mov
mov
cmp
xor
sub
jb
div
inc
js
mull
testl
add
or
pop
or
xchg
in
pop
scas
outsb
xor
dec
fsubrl
and
aam
adc
mov
in
or
les
sbb
push
fwait
sbb
aam
mov
out
movsb
xor
xchg
cmp
mov
imulb
adc
orb
enter
das
xor
lret
adc
jmp
push
jnp
inc
clc
sbb
sbb
lds
out
sbb
add
ss
pop
out
mov
mov
pusha
inc
lock
xchg
cmp
std
enter
fstps
mov
lcall
sbb
jne
or
xchg
ds
lods
adc
jnp
fwait
testb
ljmp
and
jmp
mov
rclb
jmp
addr16
lods
stos
cld
cmp
pushf
imul
hlt
fcoms
notb
imul
push
andl
test
popf
std
sti
data16
scas
popa
addb
sbb
mov
add
xor
arpl
test
ds
icebp
sbb
push
cwtl
cs
lds
xor
cmp
fistpl
arpl
cmp
fimuls
or
sti
lret
dec
outsl
ds
std
dec
inc
nop
and
outsl
dec
dec
sbb
rorl
out
loopne
or
mov
sub
cmpsb
mov
adc
jmp
cmp
fadds
jmp
adc
stc
cmp
inc
fnstenv
sbb
mov
sbb
xor
jae
mov
and
ljmp
jl
inc
dec
pop
jecxz
or
in
and
lcall
inc
xchg
stc
cmp
es
adc
mov
in
inc
pop
sub
imul
push
mov
mov
dec
ret
mov
pop
fimull
rcrl
dec
inc
mov
cli
repz
or
xor
jp
xlat
mov
out
xlat
scas
inc
jmp
mov
in
and
mov
rorl
mov
popa
nop
or
mov
push
mov
pushl
in
xlat
lock
int
inc
push
push
std
adc
pop
ljmp
mov
scas
inc
jno
mov
add
jmp
sub
sbb
mov
mov
or
lcall
pop
or
ret
cmc
push
call
cmpsb
jb
cmp
enter
leave
mov
movsb
adc
jae
fcoms
adc
push
cli
sbb
cmp
jg
inc
inc
out
roll
pop
outsl
mov
pop
in
aaa
xor
lods
dec
mov
jge
adc
xor
cmp
loop
and
push
movsb
pop
jmp
cmp
or
xor
pop
hlt
les
sub
ss
cwtl
lcall
in
in
sbb
or
rclb
stc
xchg
lret
insb
or
mov
inc
jb
lods
adc
lret
cmc
bound
sub
xchg
insb
data16
int3
and
and
xor
mov
mov
cmc
popf
gs
jecxz
and
out
pop
arpl
or
cmp
fcompp
sti
add
ja
loop
or
dec
movd
cmpsb
mov
ret
ss
pop
lret
mov
push
xor
cmp
out
push
and
add
sahf
sahf
mov
pop
cmp
movb
xchg
pop
ja
sahf
xchg
sahf
fsubrs
pop
lds
jp
pushf
imul
push
cld
sbb
shlb
add
pop
sbb
popa
jmp
adc
push
stos
ret
inc
xchg
xchg
push
fistpll
or
lret
push
jmp
mov
out
dec
push
stos
and
add
pop
push
inc
sub
fnsave
imul
es
xchg
fldt
pusha
fidivrl
daa
mov
and
add
les
and
js
out
loop
xor
in
test
stc
in
cmp
mov
mov
mov
pop
rcr
xor
fadd
jnp
jge
inc
push
cmp
movsl
and
lods
jno
inc
popa
mov
push
pop
sti
dec
jge
pop
lahf
cld
loop
cmc
mov
popf
std
xor
xchg
clc
mov
jnp
mov
add
out
xor
and
cltd
jp
mov
and
xchg
testb
xchg
stos
add
push
mov
into
adc
xchg
repnz
sub
incb
outsb
imull
dec
fldt
popf
iret
fcomp
jmp
fldt
pop
push
dec
inc
push
ljmp
jg
and
shlb
leave
mov
repnz
sub
repnz
std
push
push
int
sbb
cld
lods
stc
dec
dec
div
inc
lds
and
fcmovnu
cmp
add
sbb
push
sub
pop
jno
pop
jns
mov
or
inc
cmp
jecxz
cmp
testl
mov
addr16
cmpsb
dec
dec
dec
outsb
cmp
sbb
popa
push
sub
lret
imul
push
fldl
std
stos
inc
cmp
xor
xchg
jns
ds
push
test
outsb
xabort
aaa
cmpsl
jns
sbb
daa
sbb
pop
add
dec
lahf
jmp
enter
arpl
pusha
call
sub
out
roll
add
fildll
add
mov
bound
lret
push
sbb
and
push
push
pop
out
add
out
xchg
xchg
push
test
repz
testl
imulb
jmp
push
mov
mov
mov
adc
xchg
cmp
sbb
and
or
jns
mov
cmpsl
mov
cmp
int
fcmovnb
je
mov
enter
stos
jmp
adc
dec
mov
loope
andb
inc
pushf
jnp
adc
loopne
mov
xchg
rol
push
mov
dec
jae
dec
jo
sbb
mov
mov
shr
xor
addr16
stos
jecxz
js
pop
pop
sahf
nop
repz
out
aad
aam
popa
pop
mov
push
nop
jmp
pop
inc
jne
nop
jecxz
sbb
lds
add
jb
lea
call
imul
dec
test
jae
sbb
lods
push
sbb
xchg
shrl
dec
jae
adc
ficompl
addr16
cmp
pop
adc
or
xchg
out
or
xor
call
add
cmp
or
mov
daa
lods
sub
adc
test
mov
addr16
out
nop
decl
dec
call
xchg
sbb
and
sahf
ret
subl
or
mov
test
adc
cmpl
jl
movsl
sub
sbb
cmp
imul
push
aaa
aas
mov
int
dec
adc
stc
mov
push
lods
fs
push
scas
stos
push
loop
outsl
sbb
int3
mov
fsubs
movb
test
aas
adc
aas
scas
push
lcall
push
jno
nop
cmp
ss
dec
push
pop
fdivrl
test
xchg
ret
sub
in
ss
push
inc
fucom
xchg
adc
mov
pop
aam
inc
xor
sbb
test
mov
mov
sahf
cmp
or
fldenv
addb
mov
dec
leave
sahf
mov
and
inc
mov
icebp
mov
add
cltd
xor
xchg
push
sub
fiadds
jnp
mov
bound
jl
into
fsub
popf
inc
mov
xor
cmpsl
outsb
sbbl
bound
enter
sbb
cmc
mov
xchg
add
es
std
movsb
jl
fdivs
call
xorb
test
jp
outsl
push
pushf
arpl
dec
dec
inc
dec
inc
mov
sub
nop
sti
inc
pop
inc
cmp
movsl
jge
jbe
mov
dec
add
xor
adc
clc
or
mov
call
mov
cmp
mov
jp
xchg
into
cmpsb
stos
sbb
inc
xor
and
and
fistl
mov
movsb
dec
dec
or
int3
dec
fld
and
int3
rcrl
xchg
orb
nop
cmpsb
inc
ss
aam
loope
popf
into
cmp
push
shll
mov
jo
movsb
push
xor
sarl
adc
mov
inc
adc
pop
dec
mov
nop
pop
sub
pop
dec
and
mov
pop
fs
cmp
pop
cwtl
ljmp
es
std
jo
out
sbb
in
addr16
cmp
dec
mov
pusha
adc
inc
adc
mov
dec
push
jns
sub
das
sbb
push
aas
cmp
icebp
mov
push
sub
jle
les
cmp
sub
gs
test
xchg
xchg
sbb
push
pop
mov
dec
adc
push
ds
sti
fisttpll
jnp
filds
or
pop
movsl
stos
jno
lock
xlat
sbb
inc
pop
cmpsl
mov
dec
insb
add
xchg
pusha
aad
dec
rcll
cs
outsb
adc
dec
pop
mov
ljmp
xor
sbb
rcr
fisubrs
arpl
and
mov
loope
loope
fcom
push
int3
xchg
les
rorb
int3
js
incb
push
and
inc
orb
repnz
xor
popf
pop
loop
insl
cmp
sbb
dec
into
pop
adc
sahf
mov
decb
mov
mov
fldt
das
das
push
xor
push
push
sub
jmp
mov
mov
sbb
ror
dec
xor
cwtl
dec
fs
addr16
cmp
push
jnp
pop
or
fisubs
imul
roll
xorl
loope
cmp
adc
mov
dec
sbb
int3
cwtl
outsl
fnstcw
outsb
mov
cmpsb
repz
pop
inc
add
sbb
jge
pop
sbb
xchg
jg
and
push
inc
es
lods
je
aaa
daa
pushf
arpl
mov
hlt
aam
add
mov
mov
lcall
nop
leave
movsl
out
int
lods
bound
ja
ss
pop
cmp
scas
daa
mov
in
ds
pop
clc
jp
xchg
ret
xor
and
shl
roll
outsl
xchg
fidivrl
lahf
je
sub
in
pop
jbe
es
cli
jno
push
es
and
jecxz
bound
jb
sub
dec
fs
outsl
jecxz
test
sti
jmp
aaa
out
mov
inc
cltd
inc
adcl
sub
push
jmp
sub
rcrl
ljmp
and
cld
lds
add
outsl
dec
hlt
add
loope
fs
mov
jg
daa
cmpsb
jg
jecxz
leave
or
scas
popa
into
stos
adc
into
fnstsw
nop
shrl
and
adc
imul
pushf
mov
jg
gs
adcb
pushf
pop
js
repz
popa
fsubr
enter
lock
push
pop
push
out
cmp
dec
mov
push
cmp
mov
or
xchg
in
mov
movsb
inc
mov
xchg
repz
mov
aam
in
jl
cwtl
imul
mov
inc
pop
cs
inc
jmpw
cmpb
pop
push
cmp
jg
jmp
mov
or
stc
outsl
jb
outsb
sub
ficomps
repz
scas
mov
pop
pushf
cli
insb
loopne
sub
add
pop
ljmp
xor
mov
popf
push
mov
push
jmp
inc
test
bound
outsl
into
shlb
ljmp
pop
mov
sarl
or
inc
cs
xor
jp
mov
sti
push
mov
push
insb
sub
enter
push
shlb
and
ret
or
in
fistpll
pusha
jmp
sub
and
mov
adc
mov
sub
jo
repnz
pop
dec
popf
mov
or
shll
fs
adc
jecxz
mov
adc
push
xchg
out
lds
adc
cli
fdivl
push
adc
bound
mov
mov
sti
testl
ja
loopne
jae
dec
cmp
dec
decb
xchg
or
pushf
jne
in
mov
insb
xor
das
lock
jne
mov
fisubs
mov
or
add
mov
jmp
ret
dec
lock
pop
in
push
out
outsb
xor
lret
stos
mov
mov
test
add
mov
pop
inc
leave
sbb
ljmp
fs
out
je
scas
pop
mov
pop
into
cmp
bound
cwtl
enter
xorb
ljmp
push
and
lods
push
gs
aas
movsb
js
xchg
push
lds
xor
lcall
jno
xchg
aad
xchg
pusha
leave
ret
mov
loop
add
xchg
sbb
adc
push
inc
xchg
fcomp
iret
xor
jp
and
jns
lea
lods
mov
or
jg
mov
sbb
inc
int3
mov
movsl
lods
push
mov
xchg
xchg
sbb
jle
mov
dec
pop
notl
hlt
lock
pop
leave
cld
notl
out
and
push
jl
inc
flds
rclb
xchg
loope
dec
jp
sub
fisttpll
cltd
pop
xorl
cmp
hlt
adc
inc
jl
mov
shll
movsb
movsb
repnz
stos
dec
inc
fs
push
jl
shrb
cmp
jne
push
mov
or
adc
pop
bound
repz
pop
shr
out
jb
jle
lock
fs
push
les
adc
inc
fmuls
push
inc
or
adc
aaa
mov
test
lret
int
rorb
pop
add
daa
int
shrb
jo
ja
adc
inc
cs
dec
andl
fsts
mov
lcall
pop
shl
jecxz
cmp
add
inc
lock
xchg
jno
xor
and
fisttpl
push
lret
dec
jns
sub
repz
and
pop
lods
sbb
ss
testb
and
ss
push
mov
or
inc
xchg
imul
xor
cld
jg
push
pop
fiadds
lret
bound
inc
das
aam
icebp
rcrl
clc
subl
or
add
repnz
cltd
pushf
popa
fnstcw
repz
or
jns
cli
fidivrs
in
out
push
xor
nop
int
rcll
insl
lock
fidivl
lods
adc
pop
mov
out
xchg
mov
mov
dec
xchg
roll
or
sti
sti
push
rcr
dec
pop
mov
adc
in
hlt
adc
aad
cs
ja
xor
pop
push
add
and
jg
fdivl
pushf
dec
aaa
stc
stc
cmpsb
pop
jae
push
lock
lock
out
jb
nop
shl
push
jmp
jb
lret
or
sbb
shrl
xor
fstpt
fdivp
adc
dec
add
sbb
orl
negb
dec
jne
mov
outsl
mov
mov
fwait
xchg
fdivrs
cli
sarb
lds
mov
clc
bound
mov
test
sub
sub
dec
repz
outsl
add
mov
xchg
xchg
dec
imul
subl
jp
adc
mov
in
and
xchg
js
shll
repz
sub
stos
dec
pop
push
lret
popa
adc
cmp
pop
jle
gs
loop
sbb
shrb
mov
xor
cmc
cmc
insl
adc
fiaddl
clc
mov
int3
mov
out
adc
mov
int
out
test
cmp
mov
adc
jmp
xor
mov
adc
cmp
mov
or
push
sub
test
fistl
xchg
movb
addr16
aam
push
loopne
ljmp
push
or
hlt
inc
inc
xchg
cld
inc
xor
jle
cli
adc
xchg
push
xor
loope
jne
dec
in
sub
and
movsl
aas
cmp
sub
jns
push
ljmp
jmp
clc
jl
outsb
inc
lds
dec
push
shll
push
inc
filds
push
js
int3
out
jle
imul
mov
add
pop
movsb
repnz
test
sub
inc
dec
inc
push
jno
push
cmc
xlat
loopne
push
insl
fwait
cmp
pop
cmp
scas
pushf
jle
cmc
leave
xchg
lea
rcrl
xor
cltd
ja
fisubs
scas
repnz
dec
int
xchg
mov
mov
cmpb
cmc
pop
ljmp
adc
andb
sahf
into
repnz
push
adc
call
push
pop
fbld
mov
inc
and
mov
orb
xchg
adc
mov
fsubrs
daa
xchg
insb
xchg
popf
out
jbe
dec
sahf
mov
jmp
shll
jae
fcompl
cmp
std
mov
js
out
nop
ja
bound
sub
mov
in
lea
movsb
inc
cld
insl
aas
rclb
push
inc
xor
fdivl
adc
out
xchg
and
mov
dec
shlb
add
fsub
fs
xor
mov
add
movsb
arpl
loopne
cmp
mov
mov
pop
inc
inc
push
sbbl
mov
out
or
jns
jecxz
mov
jmp
test
aad
mov
out
rolb
pop
jno
adc
sbb
pop
aad
add
push
popf
flds
xchg
jg
les
jo
add
lock
int
jnp
pop
mov
push
xlat
es
aas
cld
and
add
aam
push
mov
daa
mov
and
mov
in
dec
lods
cmpsb
lods
sahf
jmp
aam
repz
cs
jmp
adc
inc
inc
mov
pop
mov
mov
in
jmp
and
push
mov
mov
adc
add
pop
stc
mov
push
test
push
mov
and
sbb
test
adc
pop
push
mov
rorl
and
imull
fisubrl
mulb
mov
sub
in
and
fmull
xchg
jg
test
nop
jb
dec
int
push
push
lcall
and
xchg
test
bound
adc
dec
test
loope
pop
dec
ja
jl
dec
iret
cltd
or
in
mov
int
outsb
rorl
adcl
into
pop
mov
insb
push
popl
lret
cmpl
xor
mov
add
clc
lcall
inc
lock
inc
test
mov
mov
push
or
stos
and
add
and
xchg
test
scas
xchg
or
inc
push
fcomps
rcrb
je
shrl
pushf
dec
xor
xchg
adcb
inc
xor
xor
xlat
xor
ljmp
sbb
mov
insb
loope
out
loope
lret
frstor
mov
adc
movsl
nop
pop
xor
test
push
pushf
and
jecxz
shrb
mov
out
es
fimuls
xchg
data16
rcr
pop
sbb
jecxz
ret
inc
or
dec
cmp
psllq
call
xchg
jp
test
add
jle
rcrb
pop
in
mov
cs
insb
lcall
repz
or
mov
jmp
cli
loopne
icebp
nop
cld
lock
push
adc
repz
or
pop
insl
stos
scas
imul
ss
push
out
or
xor
cmpsl
push
xor
stos
pop
jle
sub
push
mov
jo
xor
or
push
mov
int3
push
lahf
aam
mov
and
out
sub
decb
adc
popf
cmp
add
and
push
push
test
imul
sub
push
cmp
lods
push
xor
in
out
jecxz
or
mov
dec
push
jmp
pop
addl
and
imul
jae
mov
and
mov
sti
mov
sahf
xchg
push
dec
or
add
or
das
lcall
pop
sbb
push
mov
into
roll
inc
movsb
cmp
add
jp
loopne
jnp
ja
pop
into
jg
rcl
dec
dec
sub
clc
jp
outsl
mov
test
movl
pop
ja
xchg
inc
pop
js
mov
dec
xor
pop
push
or
dec
test
xlat
jmp
xchg
or
dec
stos
pop
jp
mov
outsl
sub
cmp
loop
push
pop
enter
jo
rcr
lahf
repz
sbb
shl
or
inc
aas
lods
mov
mov
adc
lods
or
jge
pop
mov
mov
add
movb
cs
pop
mov
sbb
jmp
shlb
sbb
xchg
testb
ds
stc
in
daa
lds
aad
mov
dec
addr16
mov
cmc
stc
dec
adc
xchg
mov
mov
repnz
push
mov
loop
adc
pop
loope
xor
mov
fcoml
fs
xchg
push
cs
ret
fucomp
sub
xor
and
fnstenv
fildl
xchg
in
out
dec
mov
in
loopne
cli
ljmp
dec
lcall
insb
cld
add
jmp
jnp
test
add
je
mov
jne
stos
hlt
dec
push
call
sub
and
arpl
push
xchg
shll
mov
jne
mov
adc
mov
push
sar
dec
add
and
mov
arpl
push
rcr
mov
sbb
mov
fwait
pop
test
mov
add
jbe
ss
sub
dec
mov
dec
testl
jbe
imul
jmp
sbb
and
jbe
ret
jecxz
sbb
loop
test
mov
fidivs
xchg
sbb
mov
push
cld
cmpsl
in
in
hlt
imul
xlat
add
test
xchg
sbb
mov
mov
ficoml
cmc
push
repnz
add
mov
jp
pop
sub
adc
stc
pop
cmpsb
imul
nop
push
xchg
ss
inc
mov
adc
sub
and
jge
xchg
out
push
lret
cs
inc
out
rdpmc
adc
pop
jg
add
push
test
test
dec
jmp
int
jmp
xor
negl
xor
inc
mov
cld
sbbb
nop
movsb
pushf
or
add
pop
gs
xor
loop
push
cld
test
jae
push
fsubrs
shlb
pop
sbbb
fcomi
es
lea
jg
imul
sbb
cmpsl
js
sahf
push
iret
add
push
xor
ret
jecxz
cmp
mov
cld
mov
cmp
cmpsl
jne
in
repnz
mov
lods
lret
clc
pop
movaps
cmp
xchg
sub
mov
cmc
bound
push
je
cmp
scas
call
scas
nop
xor
lahf
in
movsb
sub
adc
into
popf
push
push
pop
mov
loop
aad
jae
int3
lcall
stos
cmp
xchg
mov
pop
and
cmp
cmp
xor
out
xlat
adc
dec
es
repz
dec
out
xor
leave
fsubl
stc
mov
cwtl
addl
idivb
sbb
negl
lret
adc
dec
cmc
loope
stos
js
aam
xor
div
xlat
ljmp
pop
aad
stc
rcr
stos
xchg
jp
js
ret
dec
mov
in
rorb
jmp
cmp
mov
clc
or
mov
ss
dec
mov
fs
cmpsl
adc
imul
mov
sub
fst
loopne
int
xchg
and
pop
jle
dec
fcmovb
mov
adc
pop
aaa
popf
xlat
mov
mov
adc
adc
loope
jl
lret
es
iret
jns
dec
loope
das
shr
lds
testb
and
adc
fldenv
lock
outsl
in
addr16
sbb
or
in
mov
out
sub
cli
xor
lds
push
sti
jne
dec
call
cmp
popf
in
jb
mov
shlb
out
outsb
jge
push
jmp
add
test
cld
sahf
jp
in
mov
inc
enter
stos
sbb
xchg
jo
dec
divl
lods
nop
mov
jmp
js
and
mov
stc
enter
xlat
or
ffreep
jmp
xor
mov
xor
xchg
outsl
pop
pushf
mov
lds
pop
add
mov
mov
lret
adc
cwtl
dec
sub
jnp
in
outsl
sub
je
out
mov
rcrl
sub
out
pop
insl
orl
push
hlt
push
or
aad
cs
scas
hlt
xor
imul
adc
add
push
fs
cli
mov
push
or
rcrb
into
pop
mov
sbb
js
lret
or
sub
adc
stos
leave
or
xchg
scas
sbb
dec
clc
lock
xor
ret
mov
lea
or
les
inc
xchg
mov
in
lock
xor
jo
cmp
dec
cs
test
add
pcmpgtw
mov
xor
jne
dec
sti
out
push
movb
dec
ss
fcmovnbe
fisttpll
mov
adc
testl
or
xchg
ljmp
inc
pusha
xor
pusha
hlt
das
xchg
stos
pop
ret
xor
rcrl
inc
mov
inc
lret
push
pop
out
mov
stc
adc
cmp
xlat
test
jecxz
js
mov
inc
iret
int
jmp
push
scas
cmc
outsl
jp
jge
aaa
jmp
aaa
arpl
cmp
fadds
sti
mov
mov
pop
xorl
sub
cmc
pop
mov
pop
pop
inc
ds
pop
repnz
mov
xchg
adc
jge
fidivrl
scas
and
imul
mov
data16
and
mov
sar
xchg
sub
fisubrs
daa
sbb
fimull
testl
div
sti
repnz
pushf
jns
cs
int3
bound
jg
ss
xchg
ljmp
in
mov
mov
loope
xchg
repnz
mov
and
add
popa
or
adc
leave
mov
add
rcll
cmp
jnp
inc
sub
fldenv
daa
in
addl
lods
add
mov
mov
sbb
mov
dec
lea
dec
push
lcall
dec
mov
mov
dec
or
lcall
ret
lods
jns
sub
cmp
stc
das
jl
lret
movsb
in
mov
xchg
lahf
jbe
jbe
movaps
push
jmp
mov
repz
mov
mov
pop
clc
mov
js
dec
dec
ret
pop
ss
fwait
adc
fnstenv
call
testb
icebp
std
dec
adc
add
mov
mov
dec
data16
xlat
sbb
xchg
jnp
adc
adc
bound
sub
fdivr
xor
xchg
or
call
pop
push
lahf
cwtl
sub
or
sbb
insl
in
add
fcom
dec
ffreep
pushf
mov
pop
cmpsb
sti
sbb
inc
aad
cmp
jl
fmuls
aam
jp
es
push
jl
push
das
mov
stc
xor
sbb
cwtl
data16
lahf
in
xchg
pop
add
js
imul
out
int
jl
cmpsb
jne
or
push
sub
adc
mov
arpl
inc
ret
popa
iret
aas
in
inc
idiv
mov
jnp
or
dec
dec
xchg
xor
sub
lahf
fwait
push
mov
inc
dec
stc
jno
xor
aaa
sbb
mov
test
pop
push
push
adc
ss
push
cmp
mov
mov
pop
loope
hlt
mov
dec
aas
das
or
test
xchg
test
mov
nop
push
mov
jne
popa
stos
inc
movsb
daa
cmp
mov
adc
stos
movsl
pop
mov
loop
rorl
scas
mov
push
sub
lret
inc
pop
sbb
or
insb
xor
or
arpl
adc
movsl
xchg
inc
pop
aad
push
jp
xchg
std
lcall
cmpsb
push
cmpsb
lds
jns
dec
insl
dec
dec
aam
push
ret
icebp
jmp
cmpsl
dec
mov
jp
mov
sub
test
jp
ljmp
or
dec
mov
dec
push
xchg
and
mov
inc
data16
pop
in
jo
sbb
dec
sub
nop
cmp
shl
adc
in
insb
arpl
cmc
jecxz
fstpl
xlat
and
push
xchg
add
pop
sbb
movsl
insb
dec
out
or
jnp
push
cs
sbb
mov
cmp
push
xor
aad
sarl
mov
loope
lds
ret
mov
cld
insb
pop
xchg
mov
xlat
xchg
add
cmp
sub
fisubl
pop
mov
xor
test
mov
icebp
add
ljmp
outsb
xchg
inc
or
es
loop
and
xchg
repz
mov
mov
mov
jecxz
ret
aaa
testb
xchg
enter
and
icebp
xchg
xchg
cmp
or
sub
jecxz
xchg
and
dec
in
je,pt
pop
sub
xchg
cmc
in
cmc
mov
dec
and
lods
pop
jno
dec
adc
sbbb
xchg
mov
and
popf
pop
fbld
call
test
mov
lcall
sti
loop
hlt
and
ret
cs
mov
add
ficomps
inc
cmpl
xchg
mov
add
push
xchg
mov
adc
pop
push
sbb
popa
sti
fstps
pop
push
adc
rolb
sbb
xchg
pop
and
jns
mov
loop
es
pop
push
sbb
ficoml
out
rcrb
aaa
pop
jp
push
ljmp
into
sbb
mov
in
call
imul
cmpsl
fcomps
jle
addr16
fidivrs
lret
rcll
xchg
jl
ret
xor
mov
push
add
or
inc
xor
pop
or
hlt
cmp
mov
xchg
and
test
outsl
sbb
inc
aaa
xchg
mov
or
or
out
pop
data16
xchg
and
addr16
mov
int
out
popa
loop
ret
mov
into
into
cmc
add
jg
push
dec
in
or
call
pop
xchg
push
sub
inc
lds
xor
dec
sbbb
mov
jecxz
js
jle
adc
or
pushf
ljmp
shlb
loop
jno
fucompp
cmp
xchg
dec
fdivs
and
mov
fs
adcl
mov
sbb
sub
jg
inc
mov
sbb
cwtl
sbb
jl
cmpsl
test
and
je
mov
insb
dec
lcall
add
inc
mov
scas
sub
xchg
ret
mov
or
mov
ja
roll
adc
mov
aaa
shl
mov
test
jecxz
push
pushf
addr16
xor
cmp
xchg
mov
xchg
xchg
mov
ja
out
das
sarl
in
ss
in
lock
pop
pop
pop
repz
movsb
les
stos
pop
cmp
pop
jne
fldt
cwtl
xchg
into
orb
or
mov
xchg
into
and
movb
nop
test
out
cmp
mov
cmc
shlb
fwait
xor
fildl
mov
adc
test
dec
stc
imul
mov
sbb
push
cwtl
or
out
sub
sub
push
pop
push
insb
cmpb
cld
out
cmp
leave
cwtl
xchg
lret
adcb
xlat
sbb
jnp,pn
insb
pop
mov
sbb
jg
enter
sbb
mov
jp
dec
adc
xchg
jmp
outsb
xor
mov
int3
clc
sub
rcr
jge
cmp
sbb
movsb
mov
push
mov
test
cmpsb
jle
push
cmp
test
rcl
and
lock
and
test
les
dec
cmp
mov
mov
scas
or
inc
pop
jno
mov
mov
push
sub
jg
and
push
or
notl
movsl
loop
pop
inc
stos
loop
pushf
xchg
hlt
push
clc
lret
inc
mov
cli
rcl
stc
jnp
dec
push
mov
ljmp
dec
lods
jp
inc
stc
lcall
pop
pusha
test
in
pop
loop
ds
xor
push
cmp
cmpb
jg
rcl
or
adc
fwait
push
ds
and
pop
sbb
test
push
pop
roll
mov
xor
jg,pn
mov
ja
xlat
jmp
js
ror
xchg
jnp
adc
inc
push
fadds
cmpb
xor
test
dec
mov
lds
pop
dec
call
loopne
jmp
out
cmp
xchg
cmpsb
imull
inc
cli
lea
in
data16
or
push
pop
ret
inc
cmp
and
jecxz
lret
xchg
lock
mov
arpl
inc
dec
cmp
imul
cmp
mov
adc
sub
nop
flds
frstor
arpl
jp
outsl
or
outsb
mov
inc
push
dec
int
stc
sti
lret
icebp
jge
bound
fiaddl
in
repz
add
fmull
push
into
arpl
pop
sahf
inc
imul
and
xor
sbb
lods
dec
xchg
sbbb
pop
ret
repnz
mov
or
leave
in
jle
or
xchg
fisttps
lods
shrl
sbb
and
dec
add
mov
out
xor
mov
push
ja
add
out
loop
mov
and
mov
icebp
push
fcom
not
in
push
jnp
cmp
adcl
test
fsubl
icebp
je
lods
sub
inc
dec
cs
pop
pop
add
push
aas
bound
mov
repnz
fcoms
hlt
or
pop
push
mov
mov
cmpl
pop
movsl
inc
rcr
lock
jmp
jae
sub
loope
idiv
movsb
rcrb
push
and
stos
mov
dec
sbbl
and
or
xchg
push
xor
adc
les
or
mov
pushl
push
lods
das
inc
rcrl
stos
out
sub
add
stc
inc
mov
jmp
cwtl
mov
push
add
push
xor
mov
lock
xchg
loopne
adc
push
adc
cltd
js
and
add
xchg
cltd
push
sarb
jns
xor
rclb
cmp
cwtl
mov
pop
cltd
in
mov
pop
out
negl
lea
lea
loop
lahf
lock
test
daa
int3
js
stos
ficoms
imul
push
dec
ja
xlat
push
xorl
pushf
ret
jg
pop
dec
mov
pushf
xchg
rcr
push
cltd
dec
adc
add
mov
cmpsb
subl
hlt
sbb
mov
fsubrl
repnz
sbbl
lret
loop
mov
test
je
jo
jae
cmp
cmp
mov
call
int
das
divb
lods
ret
pop
mov
jo
inc
data16
or
mov
xchg
add
pop
pop
dec
and
lds
out
outsl
sub
sbb
sbb
int3
xchg
outsl
cmpb
xchg
cmp
xor
iret
adc
fmul
push
jb
cltd
mov
gs
and
jno
cld
jb
mov
cs
cmp
push
xor
add
pop
jns
imul
jo
popf
cmp
xchg
mov
push
sbb
daa
lock
xor
inc
xchg
mov
xlat
adc
mov
pop
test
ss
cld
mov
imul
ljmp
add
and
sbb
mov
bound
xor
scas
mov
mov
ljmp
xor
adc
sub
test
cmpsb
mov
popa
jg
dec
and
lret
push
test
cmp
test
mov
insl
dec
sbb
cmpsb
mov
fmuls
sahf
cmp
lods
mov
jae
dec
repz
ljmp
stos
mov
xlat
hlt
mov
mov
cwtl
in
sub
cmp
inc
rcll
jne
xchg
hlt
cltd
imul
sub
lods
adc
aas
pop
shrl
iret
cmp
fcompl
adc
adc
loopne
ret
dec
push
int
sub
int
popa
nop
rorb
bound
adc
in
std
dec
lock
loop
xor
stos
sbb
push
lahf
push
xchg
sti
or
mov
dec
mov
es
pop
or
sarl
clc
shlb
les
in
je
popa
add
mov
jb
push
inc
mov
pop
mov
test
push
jg
pop
out
loopne
int3
imul
lahf
xor
ficoml
ja
pop
pop
push
jp
sub
mov
fwait
push
xchg
ds
sub
sbb
lcall
lea
movb
dec
repz
xchg
clc
std
sbb
mov
sahf
js
pop
jne
scas
pushf
mov
or
aas
sahf
cmp
mov
test
push
jecxz
mov
pop
fidivrl
ret
popf
mov
shll
ret
jo
sbb
adcl
out
adcl
cmp
lods
cli
filds
iret
shrl
push
add
inc
je
sbb
bound
add
pop
push
scas
xor
or
pop
sbbl
jo
gs
push
leave
mov
jnp
push
fisubl
stos
pop
pop
sub
loopne
sub
dec
scas
stc
test
das
mov
jle
add
xchg
sbb
sbb
pop
sbb
cmp
fsubs
subl
lret
and
or
push
sub
test
xchg
mov
pop
pop
fwait
lods
cmp
adc
outsb
xor
test
pmulhuw
popa
repnz
mov
fisttps
fnstsw
outsb
arpl
jg
ficompl
jno
mov
out
push
gs
lcall
inc
lods
xor
push
mov
xchg
sbb
call
addr16
jne
icebp
sbb
sub
add
mov
push
mov
orl
cs
repz
cmp
xor
mov
lock
inc
pop
inc
outsl
lods
mov
jmp
inc
faddl
jl
jae
mov
test
sbb
pop
cmp
scas
sti
adc
cmp
mov
mov
ficomps
sar
mov
fs
mov
es
inc
mov
sbb
lods
je
addr16
pop
inc
inc
test
jb
imul
outsl
cmpb
jns
push
andl
aaa
sub
sub
adc
xor
stc
xchg
cmpsb
push
loop
mov
or
pop
lods
pop
or
ja
sbb
push
ljmp
shll
mov
cltd
mov
jb
data16
cmpb
jg
dec
loope
mov
mov
fwait
stos
sbb
pushf
fadds
ret
repz
push
repnz
or
jmp
jns
pop
inc
imul
jmp
jmp
ret
mov
icebp
dec
repnz
mov
sub
cmpsl
or
fistpll
add
negl
repz
jno
nop
pop
and
pop
insb
mov
test
cmp
xor
inc
loope
xor
imul
dec
scas
sbb
push
outsb
xchg
lcall
adc
cld
dec
xor
add
inc
jae
das
notl
fisubrs
mov
aam
mov
push
fwait
jg
in
push
jmp
and
fists
or
mov
movsl
in
inc
mov
stc
stos
in
push
out
inc
jne
cmp
inc
adc
adc
inc
test
stos
ss
push
sub
and
mov
inc
repz
les
cmp
in
arpl
sub
and
mov
aas
test
loope
loopne
xchg
out
nop
or
cmp
enter
outsb
adc
outsl
cmpsl
jnp
jns
mov
mov
or
mov
fistl
inc
std
jno
inc
sub
lret
mov
in
and
xchg
lret
pushf
insl
push
loopne
jo
push
in
jge
pop
xchg
mov
dec
and
mov
sub
rolb
jg,pn
insl
stos
cmp
pop
inc
arpl
push
xor
pop
pop
fcoml
push
gs
cli
hlt
mov
push
cmc
dec
pusha
fisubrs
inc
in
mov
sub
shlb
inc
loope
or
cmp
cld
hlt
cmp
int
fs
jae
outsl
add
arpl
lods
out
popa
cmpsb
push
test
leave
xchg
movsl
fidivs
jae
xchg
jns
rorl
xor
negl
cld
pop
sbb
dec
and
inc
jb
cmp
sub
icebp
mov
lods
xchg
subl
mov
fwait
add
inc
insl
movsl
mov
xchg
dec
clc
adc
roll
and
stc
push
xchg
jne
je
lods
outsb
mov
es
or
mov
sahf
pop
sbb
or
cmc
lods
repz
push
cli
dec
sbb
cmp
pop
fwait
or
inc
xchg
std
mov
jb
or
loop
test
aaa
into
fistps
lcall
mov
incl
test
lahf
icebp
inc
xchg
in
mov
or
mov
repnz
adc
test
lea
or
loop
mov
xchg
or
mov
xor
aad
in
sbb
stos
ret
imul
jns
imul
out
sub
jmp
cwtl
jp
addl
test
push
int3
out
bound
movb
adc
lock
jae
stc
push
jae
arpl
repz
xchg
out
outsl
mov
push
aad
push
cmc
icebp
add
jge
push
push
dec
sti
pop
adc
adc
push
add
pop
mov
mov
inc
mov
cmp
and
and
jl
jbe
or
rclb
lods
sti
xchg
stc
inc
push
inc
jno
outsb
fldenv
adc
inc
repz
adc
push
mov
lods
mov
test
mov
adc
stos
sub
out
lods
mov
xchg
cmpsb
cwtl
mov
fsubr
addb
out
xabort
pusha
leave
xchg
daa
fsubr
add
push
mov
mov
inc
daa
xor
xchg
cs
pop
mov
sub
or
and
inc
add
bound
sub
xchg
add
sub
pusha
iret
jmp
add
daa
or
sub
xlat
dec
mov
push
xor
ret
mov
push
in
out
sbb
sbb
push
pop
aam
and
sar
pushf
dec
adc
in
or
cmp
mov
lock
out
mov
mov
jecxz
mov
arpl
lret
cld
push
test
pop
sub
pop
push
xchg
inc
dec
inc
mov
jle
mov
ret
or
movl
mov
ljmp
sbb
mov
lods
cltd
jp
sbb
xchg
add
and
pop
icebp
mov
jnp
inc
mov
mov
sbb
xchg
outsl
mov
inc
dec
pop
popa
push
pop
sbb
loop
in
mov
jbe
rcrb
push
in
or
stos
adc
gs
push
mov
mov
jnp
push
aad
popa
hlt
aam
outsb
xor
cmp
ja
pop
insb
jno
iret
mov
mov
xor
test
sub
xchg
and
subl
mov
pop
mov
jl
xor
cwtl
out
aam
shrb
and
movsb
loopne
cmp
xchg
push
mov
mov
hlt
mov
jnp
mov
mov
test
cmpsl
scas
insl
fsubrl
fs
adc
into
inc
addr16
mov
jo
jns
shll
xchg
lea
sub
inc
sub
jb
movsb
mov
testb
ljmp
dec
popf
jae
adc
mov
lcall
scas
sbb
and
in
dec
jecxz
xor
rcll
outsb
cld
xor
aas
andb
add
dec
jge
stos
sarb
mov
shrl
pop
icebp
inc
mov
out
sti
xchg
js
add
mov
ljmp
push
ja
out
insl
call
ret
inc
jbe
stc
js
dec
lret
imul
pop
xorb
and
jo
xchg
fwait
imull
mov
cmp
ret
xor
nopl
add
pop
xchg
sub
subl
ret
stos
jbe,pt
out
lcall
lahf
mov
xchg
aaa
loopne
adc
mov
adc
adc
jbe
mov
dec
push
jecxz
mov
push
nop
dec
ja
sub
lea
mov
shlb
cmp
add
imul
pop
or
mov
push
loop
sbb
jl
xor
fst
cmp
or
in
pop
fsubl
icebp
daa
mov
xchg
loop
mov
jmp
daa
and
addb
sub
cmp
addr16
add
insl
stc
xor
push
xchg
inc
les
jmp
pop
movsl
ret
pop
test
mov
cltd
int3
inc
add
call
lods
push
mov
pop
out
jne
shlb
sub
adc
mov
insl
outsb
mov
and
cli
sub
js
xchg
xor
aaa
scas
fsubl
loope
mov
jp
lahf
es
inc
insl
dec
jp
jg
nop
inc
xchg
cmpb
out
sub
or
pushl
aas
and
dec
outsl
sub
out
jae
mov
scas
les
push
stos
push
in
movsb
or
les
pop
icebp
jmp
xor
fsubrp
cmpsb
stos
dec
scas
cmp
sub
pop
sub
sti
sti
ficompl
shrl
imul
movsl
data16
xchg
sbb
cs
lea
jecxz
push
and
sbb
shlb
and
fs
sub
je
or
sbb
pop
sub
sub
scas
push
jp
dec
iret
mov
push
imul
mov
jns
ja
sbb
movsl
addr16
adc
mov
repnz
jmp
rcll
insb
jbe
repz
push
xchg
push
sub
mov
mov
push
popa
aas
adc
dec
mov
dec
inc
cmp
rcl
xchg
lret
adc
cmp
dec
popf
repz
xorps
dec
shrl
mov
sbb
jne
popf
lods
outsl
lods
popa
rcrb
pop
aaa
jl
fld
and
ss
sahf
icebp
mov
xchg
lahf
cmp
dec
jns
test
pushf
test
or
fimull
dec
or
xor
iret
pop
stos
mov
inc
xchg
cmp
push
pop
jle
add
jecxz
xchg
lock
pop
fmuls
inc
sub
add
push
aad
enter
rcrl
pop
sbb
or
test
or
gs
cltd
and
sub
in
sbbb
sahf
out
jge
rorb
cmp
lds
adc
mov
jae
jb
pop
jbe
xor
scas
hlt
add
enter
mov
and
xchg
inc
shrl
or
ja
dec
enter
cmp
in
or
gs
lds
loope
inc
mov
repnz
or
cld
and
popf
icebp
mov
int
and
pop
pusha
adc
movsl
or
pop
inc
and
pop
incb
fnstsw
imul
xchg
loopne
in
int
loop
sub
add
shlb
inc
pop
gs
jmp
hlt
inc
or
cmp
mov
sbb
in
outsb
mov
push
orl
iret
inc
in
and
or
xchg
or
clc
inc
add
sbb
cli
out
xor
push
mov
scas
inc
out
mov
popa
movsb
dec
ret
scas
fiaddl
pop
fwait
pop
xchg
push
arpl
dec
cmp
fucomp
push
inc
fs
aaa
cmp
push
loopne
cmp
sti
mov
xchg
cld
xor
add
lea
repnz
mov
jae
push
pop
push
lahf
push
inc
xchg
call
fdivrl
sti
sub
push
dec
std
int
mov
fisttps
das
fistpll
jb
sarb
jns
dec
aaa
loopne
bound
cltd
mov
aaa
jecxz
ret
mov
out
testb
add
subl
dec
jbe
xor
loopne
add
and
daa
and
mov
test
fwait
dec
fs
fisubs
sarl
push
xorl
aas
pop
xchg
sub
mov
fistl
sub
jmp
bound
push
mov
and
lret
call
and
loope
mov
sbb
lods
pop
nop
inc
aas
lock
or
xor
clc
push
aaa
and
jne
jmp
and
xchg
xchg
sti
into
ret
jno
add
xchg
imul
sahf
sarb
stos
jne
or
stos
adcb
xor
inc
mov
lods
pop
cmp
xchg
je
adc
flds
mov
scas
in
or
pop
xor
jecxz
mov
and
inc
enter
inc
cs
out
addr16
in
jecxz
mov
cs
mov
scas
ret
clc
out
mov
jae
push
and
dec
xchg
pusha
loop
insb
in
setne
jnp
sub
mov
andb
repz
pop
dec
lcall
sbb
fdiv
push
test
xchg
push
stc
rclb
xor
mov
inc
arpl
inc
jmp
std
pop
adc
lods
data16
aaa
cmp
jge
mov
add
mov
xchg
and
adc
lock
adc
add
xlat
jns
arpl
fwait
call
leave
mov
push
test
notl
les
mov
dec
divl
outsb
and
lods
movsb
mov
jg
mov
jp
inc
test
je
xor
push
xchg
jb
loopne
inc
lock
test
push
pop
xchg
jle
push
push
push
mov
and
inc
xchg
test
in
jle
cmpsl
dec
jecxz
mov
sub
mov
push
cmp
add
fucomp
fdivrl
add
adc
adc
mov
pop
mov
shlb
in
lret
or
stc
pusha
pop
ret
sbb
xlat
xchg
sub
push
mov
insb
mov
sub
hlt
jmp
mov
iret
popf
clc
fwait
clc
push
pop
push
cmp
jle
jae
jmp
fwait
xchg
test
jnp
push
ret
add
xchg
out
int3
cmpsl
pushf
mov
call
gs
outsb
adc
or
add
mov
fmull
ljmp
cmp
stc
nop
add
and
and
xor
dec
in
jne
loopne
pusha
cmp
rcrl
cmp
adc
cmpsb
fwait
lcall
pop
fistpl
leave
cmpl
roll
andb
and
std
lret
adc
cmpsl
lret
std
stos
out
loopne
push
aas
test
popf
ffree
mov
lods
mov
lds
add
arpl
jo
movb
xlat
dec
push
stos
and
movb
lret
cs
jne
hlt
loope
jb
sub
test
pop
sub
sub
jmp
push
xor
sbb
fcmovnb
mov
in
pop
lods
sbb
cmpb
inc
and
in
jl
sub
adc
or
add
and
int3
mov
outsl
cs
xchg
in
outsb
pop
pop
push
mov
mov
aaa
sarl
pop
inc
push
cmpsb
adc
cs
test
mov
cs
adc
mov
mull
stos
push
fldl
xor
cli
outsl
insb
dec
sub
dec
cmc
jno
mov
outsl
jne
imul
lret
xor
mov
out
xor
xchg
cmp
sbb
movsb
ja
mov
sub
jp
mov
test
mov
fisttpll
and
push
mov
pop
sbb
je
cli
xchg
mov
push
xchg
ja
sub
dec
rclb
div
cmp
inc
cmovge
imul
cwtl
fimuls
imul
xor
cltd
jge
cmp
or
xchg
adc
pop
xchg
xchg
rdtsc
test
mov
and
cmp
leave
mov
cwtl
push
loope
dec
inc
rcrb
fistpl
sbb
xchg
jecxz
roll
dec
aam
pop
stc
in
or
repz
into
negl
pushf
add
in
push
mov
dec
jne
adc
add
popf
mov
mov
cmp
and
jecxz
mov
fistpll
ss
sbb
mov
fcmovu
fmull
inc
jp
fmuls
movlps
cltd
fsubrl
in
call
mov
movsb
outsl
sbbl
inc
lahf
sarb
mov
cmp
in
mov
inc
rolb
jns
xchg
inc
adc
sahf
movaps
adc
sbb
loop
aad
sub
insb
loop
dec
and
mov
ljmp
iret
clc
push
add
jmp
mov
jg
popa
xor
out
push
hlt
imul
pop
shl
out
sbb
and
outsl
pop
push
add
fwait
ja
cmpsl
nop
je
insb
shll
dec
loopne
lahf
imul
stos
add
adc
jl
es
mov
dec
rcll
jo
fcompl
int
cmp
sbb
mov
cmp
jbe
xchg
mov
sub
fistpl
test
cwtl
cwtl
dec
icebp
pop
jle
rolb
js
jno
adc
mov
xchg
dec
daa
pop
add
dec
leave
mov
test
push
push
pop
mov
cltd
sub
cmp
cltd
dec
pop
lret
bound
lret
xchg
sbb
cmp
test
pop
push
cmp
xchg
mov
mov
push
pop
out
sbb
sub
and
jecxz
mov
aas
xor
jge
sbb
push
out
adc
pop
sub
and
stos
cmc
pop
push
in
pop
sti
push
adc
adc
mov
jge
iret
dec
int3
repnz
aaa
roll
cmp
push
clc
fnstcw
mov
addb
or
add
pop
jbe
filds
scas
jno
mov
mov
mov
sbb
pop
lret
push
jmp
rcrb
daa
jo
pop
in
add
mov
imull
shlb
lret
or
mov
aad
lret
les
call
cmpsl
dec
enter
inc
pop
push
add
mov
mov
sbb
shrl
fwait
test
sbbb
outsl
or
loope
adc
mov
xchg
clc
push
cmp
mov
pop
add
out
dec
push
jmp
inc
xor
je
cli
enter
adcl
scas
mov
scas
test
ja
faddl
jne
scas
pop
jg
je
mov
in
scas
push
xchg
or
and
pop
pop
insb
cmp
insb
add
pushf
or
dec
inc
shl
jbe
mov
stos
lret
stc
imul
mov
push
fildll
sub
call
push
bound
fistl
adc
std
and
lcall
fwait
cmp
mov
cltd
add
jns
in
movsb
aad
call
jno
ret
scas
movsl
push
or
out
jb
push
sub
dec
scas
lock
lods
sahf
lods
std
dec
adc
cmp
rcl
shlb
dec
mov
repz
loopne
or
out
pop
scas
repnz
into
sbb
jmp
push
repz
stos
imul
mov
mov
add
bound
or
xor
jbe
sub
fistps
cmp
ror
das
test
push
es
mov
push
fstl
scas
out
pop
pop
pop
clc
rcll
cmpsb
daa
xor
loopne
in
xor
jmp
adc
loope
bswap
imul
outsl
pop
xchg
test
pop
dec
sub
and
jmp
lcall
jne
lock
loopne
roll
cmp
dec
push
test
cltd
out
frstor
mov
jbe
xor
into
dec
xchg
in
pop
pusha
add
notb
inc
arpl
pushf
mov
outsl
push
and
adc
test
sub
es
out
popw
cmp
int3
dec
scas
jo
inc
xor
push
repz
add
mov
xchg
das
mov
jb
ret
mov
push
add
add
dec
dec
or
add
lcall
gs
lods
rcll
sub
pop
dec
lods
adc
mov
pushf
clc
fldenv
dec
stos
fs
cmp
jns
jg
xchg
mov
outsl
cmp
addb
mov
inc
fldl
push
cltd
pop
xorb
sbb
and
imul
in
sti
jno
cmp
inc
call
add
popf
js
rcll
dec
enter
xor
xchg
mov
out
xchg
add
ja
mov
cmpsb
arpl
rcr
fstp
outsl
icebp
test
or
les
sbb
out
add
adc
inc
sbb
flds
movsl
cmp
sub
lds
push
cs
cwtl
pop
or
cmp
fadd
mov
outsl
sbb
xor
int
sahf
cmp
js
xchg
dec
pop
bound
dec
mov
insb
lret
push
inc
cmp
in
sbb
push
mov
cld
popa
ret
jl
stc
adc
mov
cwtl
dec
cli
sbb
add
mov
or
mov
dec
orb
je
jp
or
push
lds
pushf
pop
sahf
int
xchg
jle
and
cmc
popf
inc
lcall
test
xor
push
int3
push
pop
sbb
ss
or
mov
jp
in
aas
pop
sbb
pushf
dec
ja
cmp
movsb
pop
aas
cmc
inc
movb
jno
mov
cltd
lods
jle
js
and
in
das
pop
mov
or
loope
ds
push
insb
ds
cltd
popa
cmp
xor
test
ja
add
or
int
lea
mov
loop
fimuls
xchg
mov
sub
jns
jo
or
rcrb
inc
jecxz
lret
mov
ret
mov
movsb
push
ja
sti
idiv
jns
ljmp
jo
dec
xor
movsl
into
sub
mov
mov
sub
cmpsl
add
insl
cmp
je
adc
or
test
and
inc
jnp
jmp
ja
cld
cmp
pop
inc
dec
jnp
dec
jp
xor
jo
mov
jle
clc
xchg
xchg
aam
xchg
sbb
loope
mov
and
ss
cmp
xchg
sub
jp
pop
repnz
lock
pop
test
mov
and
mov
sbb
shrb
mov
rorb
ss
mov
inc
cmp
sub
mov
outsl
mov
or
jmp
jle
inc
or
aad
adc
jbe
xor
adc
mov
testb
sub
adc
stos
xchg
filds
xor
lea
xor
push
mov
sub
stc
or
call
cmp
adc
xor
enterw
fidivs
inc
sti
push
ficoml
sub
bound
loopne
jg
jae
sub
cmpsb
push
pop
adc
jne
cmp
mov
inc
outsl
and
fstpt
add
addr16
lea
repnz
std
push
jne
enter
lods
push
and
sbb
roll
gs
jp
jno
sbbb
jae
inc
repnz
insl
gs
mov
stc
cmpsb
dec
popf
popa
sub
push
push
in
pop
js
aas
xchg
frstor
sbb
mov
mov
adcb
testb
mov
movsb
stos
cmp
jecxz
insb
out
jge
adc
xchg
xchg
xchg
cmpsb
fcomps
cmp
bsr
das
clc
xor
pop
adc
mov
push
push
push
addr16
aas
adc
mov
outsb
xor
xchg
std
xchg
dec
jecxz
out
xor
call
subb
push
push
pusha
xchg
push
aas
dec
push
push
sbb
sub
loopne
jmp
aaa
subb
ror
push
mov
and
or
mov
mov
aaa
sub
int
hlt
mov
mov
imul
jp
sub
ret
stos
loop
mov
shll
and
and
lcall
sbb
loopne
xor
dec
sbb
testl
jecxz
pop
decb
je
mov
pop
sub
aam
mov
repnz
shll
stc
push
cld
mov
dec
and
push
mov
in
cltd
pushf
ret
xchg
pop
jge
les
mov
inc
sub
fxch
nop
andb
xchg
outsl
xchg
enter
push
stos
lahf
dec
out
push
fimull
push
pop
mov
sarb
stos
add
jb
push
mov
pop
daa
jmp
outsb
std
mov
sti
loop
stos
fsubl
dec
dec
push
push
cmp
in
lret
or
push
aas
js
cmovb
xor
enter
lahf
mov
mov
ret
adc
into
mov
mov
dec
push
sub
push
add
dec
jns
and
xchg
imul
or
pop
pop
loopne
pop
das
mov
scas
xchg
andb
cs
jecxz
mov
shl
insb
mov
fiaddl
in
cs
rorb
repnz
mov
ljmp
adc
and
jmp
fs
sub
lahf
rclb
cmpsb
fnstcw
fnstenv
es
jne
popa
pusha
xchg
aas
fs
sbb
das
xchg
mov
mov
inc
xlat
ret
arpl
sbb
jle
cmpsl
pop
mov
clc
popfw
xchg
or
jae
mov
jg
pop
push
jbe
inc
insb
jg
add
lret
lahf
and
in
add
iret
cmp
lret
aas
imul
push
mov
xchg
hlt
es
out
mov
add
inc
ficompl
fsts
and
imul
les
jge
add
dec
mov
cs
sub
xor
mov
xorb
adc
je
clc
test
dec
rol
imulb
lods
flds
cmp
inc
out
mov
push
add
jae
push
rclb
out
adc
dec
in
jne
sbb
mov
push
pop
xor
push
cmpsl
cwtl
clc
pusha
insb
mov
fdivrl
mov
lcall
xorl
dec
cmc
out
mov
dec
pop
xchg
add
mov
or
les
xchg
arpl
pushf
mov
jae
xchg
lea
push
mov
mov
xor
sub
push
psubusw
stc
mov
xchg
insb
pusha
jecxz
insb
lods
frstor
ds
or
dec
ja
mov
mov
jno
call
in
adc
lret
fxtract
in
mov
push
mov
xchg
adc
push
fidivl
jg
icebp
sti
divb
loop
push
mov
test
es
fwait
push
dec
or
push
mov
loope
aaa
daa
repnz
jno
jo
and
mov
or
arpl
and
mov
push
fimuls
pusha
aas
dec
pop
test
add
js
inc
mov
jl
or
lret
inc
mov
sub
add
lock
sbb
inc
mov
sbb
adc
dec
fldcw
xchg
pop
mov
adc
add
push
cwtl
sub
add
je
dec
pextrw
pop
fsubs
mov
rorl
add
sarl
jne
jg
mov
pop
test
jge
leave
dec
xor
test
sbb
lret
and
dec
out
jnp
lea
jnp
mov
xchg
pusha
das
loopne
mov
add
call
push
cmp
test
push
pusha
cmp
cli
cmpsb
hlt
xchg
and
mov
add
cld
fsubl
xchg
in
mov
fldenv
xchg
jl
inc
aaa
push
mov
data16
and
push
fldcw
ret
jl
mov
and
dec
or
dec
pop
cli
arpl
les
decl
cmp
lcall
pop
or
xchg
jns
adcb
stos
mov
pop
xlat
mov
dec
add
and
mov
jns
mov
add
sbb
iret
pop
in
loopne
jmp
inc
scas
aam
xor
jbe
or
dec
nop
sbb
test
stos
push
out
cmp
and
gs
xchg
ljmp
and
cmp
jg
xchg
xor
pop
dec
jne
test
stos
sub
fsubrl
and
in
insl
dec
test
push
in
fisubl
push
lahf
jne
jmp
ljmp
or
xchg
jle
fdivs
sub
inc
or
push
movsb
jo
stc
add
pop
mov
scas
stc
in
mov
jl
sub
rorb
popa
mov
cwtl
jle
int3
inc
xchg
push
mov
mov
dec
dec
arpl
jae
jae
xchg
jg
sar
xor
mov
or
out
arpl
adc
jl
xchg
imul
jmp
push
cmp
xchg
js
daa
les
frstpm(287
fs
movsb
sub
pop
pop
jae
sbb
jo
mov
mov
mov
jp
mov
out
pop
pop
mov
pop
xor
inc
out
push
sti
cmp
das
pop
subb
sarb
xchg
push
aaa
fsubrs
nop
cli
cmp
xchg
mov
sub
sarl
ficomps
sbb
xchg
mov
jns
or
dec
out
or
ss
sbb
xor
rcl
jmp
imul
dec
add
loope
adc
jl
pushf
pop
test
lods
pusha
daa
mov
movsb
inc
stos
push
xchg
rcl
icebp
add
push
lahf
pop
aad
dec
lahf
cmpsl
mov
xchg
ret
sub
movsb
js
sub
jp
flds
pop
mov
xchg
aam
inc
out
outsl
adc
inc
cmp
mov
imul
outsl
ret
xchg
or
fmuls
pop
pop
mov
rcrb
lods
stos
shl
sbb
jle
pop
xchg
lahf
push
fs
cli
loopne
pop
adc
nop
xor
test
aaa
xchg
push
sub
cs
js
xchg
mov
movsl
loop
adc
inc
fs
dec
or
mov
push
outsb
sbb
hlt
loop
push
cltd
cmc
cmp
xor
and
sahf
mov
outsb
mov
inc
insb
in
push
push
jecxz
orl
adc
popa
loope
and
push
enter
movsb
xor
cmp
jne
fcom
jge
pop
add
xchg
neg
out
lret
pop
gs
jb
outsb
enter
push
inc
inc
adc
fwait
xor
mov
push
or
push
xor
sbb
xor
in
and
repz
ret
inc
jo
push
jo
adcl
outsb
movsl
jmp
enter
ror
mulb
imul
out
in
push
mul
fwait
test
aam
add
or
lret
std
scas
fdivrl
scas
ds
pop
mov
mov
sahf
sbb
sbb
mov
inc
push
nop
repz
dec
inc
cmp
push
mov
and
and
push
das
dec
dec
xchg
inc
int3
test
mov
out
dec
and
cmc
inc
push
lcall
xorl
cmp
mov
or
sub
sub
test
insl
jo
je
inc
lods
jl
and
mov
addl
push
adc
jg
ret
jae
bound
aaa
inc
arpl
push
call
popw
cmp
jae
es
lahf
or
sub
cmp
xchg
inc
ret
fisubrl
pusha
inc
cmpsl
ljmp
sub
xor
cmp
es
xor
bound
adc
ret
out
pop
push
jge
sub
add
and
or
dec
mov
cmp
sbb
mov
mov
add
jg
mov
in
ja
inc
mull
pop
pop
mov
lahf
fistpl
decb
mov
add
xor
fadds
xchg
leave
in
ret
out
adc
repz
mov
ret
daa
mov
pop
or
sub
sub
xchg
lret
ret
sub
gs
xor
cmc
outsl
cld
sbb
cs
jge
jne
icebp
push
stos
push
pop
mov
mov
pusha
into
dec
fnclex
pushf
jge
fdiv
adc
push
inc
daa
pop
outsl
cmp
or
and
push
push
xchg
into
push
cmp
aad
dec
sbb
pusha
xchg
pusha
jge
in
mov
test
cld
xchg
and
fdivrl
test
aas
jae
inc
xor
out
aas
outsl
inc
in
es
inc
outsb
cs
int
cs
out
xchg
xor
pushf
shrl
jl
cmp
imul
push
fsubr
lods
xchg
and
cmpsl
lods
int3
and
lret
popf
loopne
mov
or
xlat
inc
clc
pusha
push
xor
clc
mov
inc
push
fidivl
cmc
push
imulb
xchg
pop
pop
faddl
stos
cmp
xchg
cli
jo
and
push
test
push
popa
gs
rclb
add
or
xor
stos
xor
std
sbb
xchg
add
pop
and
mov
adc
ljmp
cmpsb
stos
or
xchg
pushf
je
mov
cmpsb
pop
xchg
out
fmull
push
daa
rcrb
test
iret
pushf
push
fistl
jg
icebp
out
out
stc
xchg
xlat
push
adc
sub
jne
repz
mov
push
ds
push
cli
add
inc
icebp
dec
and
sbb
fistpl
push
ret
iret
in
add
aad
sub
shll
add
sbb
dec
cmp
orb
push
push
pop
push
out
sbb
in
lcall
mov
test
jl
xchg
in
xchg
sub
mov
rcrb
xor
fdivr
loop
in
dec
push
ja
xchg
dec
add
loope
pop
inc
pushf
std
fstps
cmp
dec
sbb
mov
push
xor
lds
fldcw
jp
loop
jge
hlt
mov
cmc
mov
pcmpgtw
les
mov
or
xchg
das
cwtl
inc
insb
sbb
adc
mov
pop
adc
sbb
enter
imul
lods
mov
arpl
addr16
into
cmp
std
xorb
test
cmp
xchg
pop
das
shll
es
test
out
enter
cld
sub
ret
test
jl
jge
jmp
movsl
mov
imul
push
sub
mov
jle
jns
jb
test
lock
cwtl
adc
xchg
hlt
mov
mov
jne
lahf
lods
inc
inc
es
or
sti
mov
dec
cmpsl
jns
arpl
mov
push
inc
xor
cmp
jne
out
xchg
pop
and
sbb
repz
push
mov
movsb
xchg
in
into
inc
pop
inc
sub
shl
xchg
cmpsb
out
mov
imul
add
fwait
push
xchg
in
idiv
xchg
push
adc
in
mov
push
idivb
scas
in
and
stc
fildl
cwtl
xor
cmp
xlat
add
mov
jle
stos
pop
cmp
aas
fcoml
out
rclb
imul
cmp
xor
pop
pop
int3
cmp
lcall
lock
lcall
dec
aam
icebp
jge
mov
mov
cmp
lds
clc
stos
cmp
push
in
jo
lret
mov
jmp
sahf
mov
hlt
jnp
sub
push
cli
in
dec
std
cltd
sub
test
push
lret
movsbl
adc
mov
dec
sub
xor
and
cmp
mov
jnp
xor
shll
cmpsl
call
arpl
mov
add
js
xchg
outsl
jecxz
mov
push
xchg
mov
push
test
sub
ds
and
cmp
add
cli
incl
adc
mov
addl
xor
dec
daa
out
mov
mov
fwait
add
xchg
lahf
jns
adc
mov
pop
dec
mov
les
sbb
add
out
int3
insl
mov
test
mov
test
sub
scas
cmp
mov
cmp
sub
cld
inc
mov
and
xchg
sbb
mov
sub
mov
mov
mov
daa
imul
jnp
dec
sub
ret
dec
cmp
push
and
leave
in
dec
pop
jp
nop
movsb
dec
pushf
jp
dec
add
data16
loope
icebp
push
in
xor
mov
add
sub
mov
inc
sub
sub
adc
xor
mov
enter
js
push
popf
inc
lcall
outsl
and
popa
js
mov
xor
or
scas
pop
rolb
movsl
enter
aad
mov
dec
jl
inc
bound
xor
sbb
pop
xlat
popa
fiadds
mov
inc
xchg
in
negl
aas
std
xchg
adc
outsl
jge
mov
mov
sbb
pop
add
mov
cmp
cmp
jp
dec
out
mov
dec
mull
cli
icebp
rcrl
out
pusha
sub
pusha
into
insb
lods
dec
mov
mov
aaa
mov
push
sub
data16
cwtl
decb
mov
out
and
adc
mov
arpl
or
push
stos
xchg
cmpsl
fisubl
mov
faddl
jecxz
mov
mov
or
dec
xlat
sub
sbb
sub
lock
lret
mov
clc
or
out
shll
sbb
mov
and
cli
pop
mov
jns
lds
xor
fucomi
or
jmp
mov
sub
jle
int3
popa
ret
test
jo
test
sbb
inc
pop
insl
push
fadds
movsb
insb
add
addr16
inc
divb
jmp
stc
cmpl
jbe
scas
sti
cmp
mov
pop
int3
cmp
push
fcompp
xor
scas
jp
and
add
movb
ficomps
push
mov
rclb
idivb
dec
movsl
mov
outsl
out
mov
clc
outsl
inc
inc
repz
jb
inc
mov
mov
push
xor
or
mov
mov
mov
add
or
test
xchg
jl
fldt
lret
adc
and
call
ret
dec
mov
es
mov
fnstsw
mov
es
dec
shr
dec
mov
mov
push
ja
pop
ds
cmpsb
movsb
xchg
pop
mov
movsl
xor
or
punpcklbw
xchg
cli
pop
out
dec
ds
adc
or
testb
ficompl
or
fstpt
je
or
sbb
movsb
jbe
sub
aaa
inc
enter
shll
inc
jg
bound
mov
mov
and
pop
mov
in
call
sub
and
cwtl
aas
dec
sbb
data16
das
dec
mov
adc
mov
fs
cmpsl
mov
cmp
jb
repnz
out
das
add
sbb
mov
roll
xor
jmp
jno
and
stc
stc
xchg
imulb
lahf
les
movhps
pusha
stos
jbe
push
out
fsts
ja
cmc
mov
test
jp
inc
lea
mov
je
pop
movsb
outsl
fs
ja
dec
dec
pop
adc
xchg
xchg
or
sub
jae
aaa
jmp
add
sub
shll
es
xor
xchg
mov
inc
sub
xchg
jecxz
inc
dec
xor
inc
xor
dec
xlat
das
push
aam
adc
lret
dec
kaddb
cwtl
gs
movsb
out
xchg
mov
or
cmp
outsb
pop
fs
out
pop
aas
dec
imulb
cli
lods
jge
and
add
cmp
rcll
xlat
sbb
add
shll
shrb
add
mov
cmp
sub
fsubr
out
lea
and
mov
jb
stos
xchg
push
mov
shl
add
mov
inc
fimull
cld
xor
jmp
stos
push
imul
sahf
inc
xor
xor
movsl
xchg
adc
or
sub
or
aaa
jge
jns
pop
movsl
jg
xchg
das
add
ret
les
daa
xchg
pop
push
xchg
addr16
in
aam
int
fnstcw
fs
clc
lea
push
jle
dec
sbb
adc
stos
test
and
jbe
shrl
lods
adc
xchg
in
jns
icebp
xlat
jp
fistpl
dec
jecxz
push
sbb
jp
jne
inc
enter
dec
enter
jmp
push
mov
hlt
bound
and
shrb
lods
jbe
insl
out
adcb
sbb
lock
std
sbb
movsb
test
andl
sti
roll
mov
sub
mov
mov
sbb
jg
mov
or
les
rcrl
dec
imul
dec
lds
stos
mov
xchg
rcrl
jecxz
cmpsl
xor
in
xchg
push
movl
ret
dec
pop
andl
inc
cli
cmpsb
movsl
xchg
gs
mov
ljmp
pop
push
sbb
les
mov
in
mov
sahf
movsl
and
shrb
jo
mov
nop
pop
scas
insb
bound
iret
incb
mov
outsl
lea
push
and
cli
cld
dec
lods
inc
movsl
xchg
xchg
xchg
sar
cmp
int
adc
rcll
fistl
mov
sahf
and
mov
cmp
xchg
push
mov
shl
pop
jnp
sbb
bound
int3
ja
enter
enter
adc
outsb
outsl
sub
or
pushf
sbb
das
mov
jg
push
xor
mov
fsubl
jnp
mov
adc
mov
xor
adc
cmp
sub
faddl
mov
adc
push
out
adc
mov
xchg
arpl
iret
mov
in
call
push
jl
icebp
xchg
repnz
xor
inc
push
push
mov
daa
push
shlb
dec
mov
js
pop
and
dec
xchg
enter
and
aas
je
cmp
push
es
aas
movsl
inc
sub
xor
mov
mov
dec
sar
xchg
add
or
dec
push
das
mov
rcl
mov
or
movsb
or
sub
jno
sub
movsl
push
xor
xor
push
jle
in
fst
push
into
xor
pop
pop
js
mov
jg
mov
sbb
xlat
in
jl
addr16
sti
push
pop
cmpsl
leave
xorl
cmp
cli
pusha
or
orl
pop
into
xchg
repz
push
jo
lock
push
sub
in
aas
cmc
cmp
mov
rcr
push
shr
jne
or
mov
ja
dec
and
into
add
xchg
fbstp
popa
fildl
punpckldq
push
pop
push
pop
cs
sub
mov
out
addl
mov
cld
jecxz
cmp
xchg
std
jp
imul
fiaddl
dec
mov
sbb
pop
ficoml
and
xchg
scas
js
sub
mov
or
sub
inc
in
jb
aaa
push
adc
scas
or
jecxz
mov
inc
xor
jne
ret
mov
negl
in
cmpsl
cld
lods
lahf
inc
rcrb
inc
int3
adc
push
pusha
sbb
aas
rol
lods
add
xor
jae
dec
add
jnp
mov
cld
fldcw
outsl
ja
ja
mov
jle
sub
cmp
into
inc
loopne
cmpsb
mov
aas
movsb
dec
xor
js
sub
and
xchg
xor
or
adc
mov
sbb
pop
mov
cmpsl
mov
lahf
in
and
ds
mov
int
in
dec
dec
and
xor
std
cmpsb
ret
fstl
cld
inc
dec
or
pop
cmp
push
mov
inc
movsl
arpl
je
pop
ds
outsl
inc
ficoml
mov
push
push
jns
mov
int
jo
cmp
into
xor
loop
out
ret
mov
test
out
lods
adc
pushf
mov
mov
out
push
pop
xor
add
orb
jbe
xchg
pushf
dec
push
test
enter
rclb
pop
mov
mov
mov
stos
cmp
xchg
adc
mov
nop
shr
and
data16
sbb
es
daa
sub
cli
fldcw
out
loope
icebp
jo
mov
out
in
mov
outsl
rclb
orl
test
das
add
aaa
or
test
cmpb
movsl
icebp
pop
jo
out
mov
lods
cmp
inc
add
jae
test
call
leave
mov
xchg
bound
push
icebp
or
cmp
arpl
xchg
in
sbb
xchg
lahf
pop
adc
hlt
push
sti
xchg
std
stc
leavew
pop
mov
out
mov
mov
ss
jmp
inc
leave
xchg
mov
sti
dec
div
fdivrs
add
loopne
lcall
pop
sbb
gs
adc
adcl
dec
inc
mov
insl
jge
ss
roll
ret
mov
call
pop
orb
cltd
mov
pop
mov
push
scas
dec
in
in
mov
movsl
call
cmpsb
rcl
xor
adc
sahf
cs
scas
lods
das
out
repz
cltd
int
ljmp
or
cmp
pop
aam
dec
daa
and
sbb
bound
add
jne
fldl
rclb
stc
inc
pop
mov
xchg
add
cmpb
xchg
andl
adc
imull
inc
xchg
adc
test
lods
test
mov
mov
pop
and
mov
fisubs
pop
and
sub
aas
push
add
loop
fdivrs
popa
out
test
pusha
in
fwait
cmp
xor
fwait
sbb
adc
xchg
pop
dec
mov
jb
sub
add
test
sti
inc
xchg
push
sub
adc
mov
jmp
mov
xchg
repnz
out
ret
int3
cmp
fldenv
dec
mov
mov
movsl
fcmovne
inc
cwtl
enter
xchg
shr
inc
cmp
dec
sbb
lods
into
outsl
mov
les
daa
insb
cmpsb
mov
or
cli
in
movsb
arpl
jno
sub
insl
pop
xor
ret
push
pop
js
lods
pop
repnz
jecxz
test
sahf
push
leave
lahf
inc
push
fsubs
fstpt
jne
das
das
insb
inc
or
into
sub
lock
adc
repnz
aaa
out
add
rcrl
jg
outsl
pop
add
mov
es
xor
sbb
cmp
imul
test
add
xchg
mov
hlt
pop
mov
pop
sub
movsl
adc
mov
push
sbb
jb
add
scas
or
mov
mov
pop
mov
mov
ror
fildll
xchg
out
mov
inc
fistpl
xchg
add
mov
test
nop
fdivp
in
jbe
loop
addr16
negb
add
es
jno
mov
icebp
sub
mov
add
lock
pop
pop
aam
movsl
push
test
test
push
push
or
aam
cwtl
cmpsl
mov
mov
mov
ret
cmpsl
and
jb
mov
jbe
insb
call
out
mov
stos
jecxz
jne
dec
xchg
repnz
or
push
cmp
push
shrl
outsb
mov
mov
push
inc
pop
dec
mov
cltd
cmp
cmpb
subl
adc
adc
jnp
leave
inc
mov
and
das
js
out
jno
adc
outsl
sub
out
movsl
insb
popf
pop
fcmovnu
sarb
sub
pusha
imul
sub
push
insl
jae
cwtl
idivb
mov
arpl
in
pop
std
adc
loop
cmpsb
mov
shrb
sbb
cmp
andb
inc
nop
jo
movsl
andl
mov
repnz
fcomip
sbb
mov
cmpb
imul
pop
hlt
scas
pushf
pop
cmp
loopne
or
xchg
aaa
pusha
sub
mov
and
lock
mov
dec
mov
xchg
push
movsb
mov
pmullw
dec
push
or
pop
fbstp
mov
shll
adc
and
movsb
scas
sub
add
fisttps
mov
or
pop
subl
arpl
sti
mov
pop
fimull
stos
addr16
into
fs
xchg
cmp
cmp
or
xchg
push
pop
push
iret
cmpsl
aam
mov
pop
adc
int
testl
inc
popf
loope
cwtl
addb
shl
push
jne
pushf
es
arpl
loop
jno
mov
pop
nop
adc
ss
jg
push
jle
clc
inc
pop
cmp
ret
and
gs
pop
adc
insl
add
cmpsb
in
nop
pop
adc
sbb
fdivr
test
fnsave
clc
pop
daa
adc
jecxz
cmp
push
imul
fdivs
fidivrl
jmp
pop
test
imul
jecxz
popa
out
and
add
into
pop
not
mov
and
or
sub
icebp
shll
lods
sbb
adc
cmpb
ss
mov
hlt
repz
cmp
pop
jnp
or
aas
rcrl
enter
pop
jb
jnp
add
dec
shll
insb
push
daa
in
stc
sub
test
cmpsb
fs
mov
inc
xor
cmp
cli
cmp
jmp
adc
in
lret
aaa
rclb
xchg
inc
and
pushl
sbb
mov
adc
loope
mov
in
cmpsb
lods
repnz
sbb
andb
xchg
ds
cs
cmpsb
adc
mov
xor
mov
push
into
add
fmuls
mov
popa
and
aaa
stos
sbb
insl
adc
fisubs
stc
out
insl
xchg
in
xor
lds
or
cwtl
lahf
pop
mov
mov
sbb
jne
or
mov
ja
adc
xor
or
jg
and
cwtl
lock
or
inc
call
rcll
add
push
mov
dec
dec
sbb
and
test
test
out
out
mov
jmp
fwait
subl
out
icebp
stos
aaa
xchg
xchg
lock
mov
xor
or
js
hlt
mov
out
test
pop
inc
cmc
pop
mov
and
adcl
fwait
adc
jl
imul
fnstsw
loopne
aas
add
xor
into
adc
rcl
inc
xchg
mov
mov
rolb
push
dec
jae
outsl
mov
sbb
or
xor
adc
xor
test
push
mov
mov
jb
inc
xchg
in
dec
mov
mov
mov
sbb
incl
pop
fdivr
push
mov
jb
aam
adc
lahf
loopne
mov
mov
push
lea
or
jnp
mov
cmp
sbb
xchg
mov
jg
xchg
testb
hlt
call
repz
jl
and
xor
loopne
jecxz
gs
sbb
out
and
shl
cmpsl
mov
mov
jecxz
rcrl
fnstcw
jbe
das
idiv
shlb
inc
inc
fisubl
cmp
or
adc
or
jbe
jmp
ret
dec
cmp
fistl
js
addr16
lock
hlt
jmp
ja
pop
mov
fdivl
inc
jg
xchg
hlt
pop
addl
decb
rclb
mov
xchg
sub
jne
push
incl
push
mov
adc
dec
sbb
or
fs
push
cltd
popf
pop
rorl
clc
or
pop
xchg
push
stos
out
movsl
lock
stc
dec
in
ret
inc
loope
cli
enter
mov
jbe
data16
inc
sahf
popa
xor
xor
fisubrl
pop
mov
icebp
pop
or
pop
insl
xchg
sbb
into
mov
sub
andl
into
movsb
dec
enter
cwtl
loop
xchg
lret
cmp
movsl
imul
sub
aam
mov
xchg
jl
pushf
pop
sub
and
in
loopne
add
out
cwtl
inc
mov
out
out
adcl
inc
sub
in
xchg
pop
repnz
jmp
js
dec
mov
outsb
mov
sub
loopne
test
push
mov
mov
adc
xor
push
add
cmp
mov
push
cmp
dec
cmpsl
mov
in
push
push
repnz
lahf
jg
in
enter
jg
fiadds
sbb
daa
sahf
jmp
mov
or
mov
dec
cwtl
sub
dec
imul
push
push
inc
in
out
adc
dec
into
xchg
mov
in
dec
mov
or
push
arpl
imul
mov
aam
mov
cmp
fadds
push
test
fisttpll
frstor
dec
shlb
mov
and
mov
sbb
mov
fs
fdivrs
mov
dec
adc
sub
push
jle
and
add
jns
mov
xchg
jne
push
push
icebp
jp
sbb
stos
pop
test
clc
les
outsb
mov
cmpsl
sub
and
out
sbb
mov
and
jge
pop
nop
cli
push
pop
dec
lret
shr
push
ret
add
xlat
popa
repnz
jmp
mov
shr
mov
out
xchg
pushl
jg
lahf
cmpsl
cmpsl
lret
mov
outsl
clc
adc
dec
lea
jge
xor
sub
data16
inc
fnstcw
out
cmp
addr16
cmp
mov
je
sub
popa
mov
mov
lds
dec
nop
pop
cli
int
sub
fsubr
sub
inc
movsl
adc
shl
sbb
adc
jo
fnsave
mov
cltd
negb
cld
imul
into
fidivl
rcrb
or
rcll
insb
loop
test
mov
sub
call
flds
imul
mov
xchg
je
dec
jae
cmp
xor
cmc
sbb
mov
call
sarb
push
mov
sub
cmp
sahf
mov
shl
lret
sahf
jb
andl
dec
dec
js
push
xor
sbb
xchg
out
inc
sbb
cmp
call
add
imul
in
inc
dec
mov
push
cwtl
or
dec
ret
inc
push
add
jae
mov
pusha
adc
inc
int
fcoml
lea
push
xchg
inc
loopne
popa
adc
xor
dec
lret
lods
add
sub
enter
icebp
pop
xchg
mov
cmp
imul
mov
xchg
push
jmp
cmp
lds
into
ret
sbbl
xchg
cmc
push
mov
test
shll
enter
push
jle
mov
pop
addr16
jecxz
test
out
daa
and
push
out
pop
in
jp
xchg
icebp
and
push
pop
dec
push
out
loop
or
adc
xchg
fsubrl
insl
shlb
scas
pop
xchg
rorb
fistl
xchg
popf
add
aad
inc
ja
push
adc
es
and
cmp
ret
push
xchg
jg
mov
or
outsb
call
mov
mov
notl
dec
add
jns
pop
popa
outsb
pop
xorb
daa
in
int
pop
aaa
cmp
xchg
lret
pop
fadd
out
and
sbb
lods
xor
mov
test
test
add
xchg
xor
scas
es
pop
ja
ds
nop
push
mov
sahf
ss
out
xor
mov
xor
ret
or
repz
test
pop
jno
sbb
cmp
sub
subb
cmp
lea
pop
or
adc
movsb
nop
push
dec
nop
inc
mov
ds
or
js
mov
xchg
ficompl
xor
pop
dec
lods
lods
mov
mov
aas
pop
loope
in
jnp
addl
xchg
into
pop
out
mov
loope
aaa
pop
nop
xor
loope
jmp
dec
or
fisubs
stc
xchg
mov
push
mov
mov
jmp
mov
insb
rclb
cmp
jp
xor
outsl
push
sub
enter
incl
push
movsl
mov
cmp
lea
sahf
cmp
pop
cmc
inc
mov
lcall
repnz
mov
pushf
inc
sub
fs
int
insl
add
ds
and
adc
jmp
inc
imul
and
rcr
pop
aam
in
sub
mov
sbb
sbb
jmp
adc
leave
mov
cli
popf
adcb
inc
mov
cmp
sbb
aad
sub
lods
and
xchg
mov
mov
arpl
xorb
mov
movsl
rcrb
pop
fwait
scas
into
jns
jbe
test
inc
fdivl
push
inc
lods
jge
mov
mov
push
sub
adc
pop
nop
adc
repnz
rcr
xchg
dec
lods
mov
sahf
xor
sbb
les
add
adc
in
mov
cmp
out
clc
push
jmp
gs
sub
lahf
test
cmp
add
mov
cmp
es
xor
jg
inc
rcll
mov
loopne
dec
scas
sbb
pop
cmp
fstl
dec
rol
ja
pop
sbb
mov
inc
or
mov
push
test
dec
mov
gs
outsl
or
inc
imul
adc
call
push
movsl
stc
rolb
xchg
sub
ljmp
dec
and
leave
arpl
push
cmp
clc
insl
pop
adc
mov
dec
sub
cmp
ljmp
loop
push
jns
adc
mov
test
nop
jp
mov
adc
je
and
push
pop
mov
das
movsb
ds
pop
lds
pop
in
sub
idivl
js
pop
adc
inc
lahf
dec
je
cmpsl
or
out
jnp
or
xchg
adc
and
xchg
pop
xor
xchg
testl
sub
movsb
xlat
add
xor
aas
push
mov
jb
push
jg
adc
and
aaa
and
add
sub
and
ds
arpl
xchg
and
fbld
out
aas
nop
mov
psraw
bound
xchg
and
and
mov
push
sbb
addr16
xor
cli
lock
dec
aas
xchg
inc
jge
out
out
mov
or
jae
subl
aad
xor
mov
mov
cli
cld
push
and
pop
xor
mov
fsubp
xchg
adc
dec
cmp
dec
ret
sbb
jecxz
movsl
dec
cmp
mov
fiaddl
or
cmp
jp
xorl
bound
mov
aad
pop
inc
aaa
mov
inc
addl
mov
xlat
movl
mov
mov
sub
in
dec
sbb
cmp
in
cld
adc
push
dec
arpl
mov
push
popa
out
iret
imul
cltd
shl
cmp
push
addr16
cmp
stos
jbe
jb
enter
add
clc
jo
test
add
dec
sti
cmpsb
sbb
insb
fists
ss
or
cmc
loop
add
push
enter
out
int3
imulb
push
in
xor
sti
pop
cmp
inc
mov
mov
adc
test
nop
test
adc
mov
dec
test
xchg
and
fucomi
fcoml
xchg
push
inc
or
test
sbb
in
scas
loopne
out
movl
cmp
dec
push
outsb
stc
imul
rcrl
sbb
daa
cltd
cmc
mov
xchg
cmp
dec
in
fwait
push
push
fildl
push
xchg
dec
and
mov
ficoms
push
or
cmpsl
mov
dec
pushf
shlb
sbb
imul
test
icebp
cmpsb
dec
ljmp
push
jge
cs
adc
mov
push
mov
js
pop
sbb
lock
fnstenv
add
xor
and
add
or
xchg
mov
lcall
loope
addr16
in
mov
rolb
mov
cmp
popa
mov
and
leave
dec
sub
xchg
lods
mov
adc
imul
insb
stos
lock
sub
cmpsl
push
outsl
push
cld
and
and
fs
rcr
adc
or
push
bound
in
or
imul
dec
ffreep
ds
cmp
ret
push
fldl
call
mov
sub
or
incl
adc
xchg
fiaddl
jo
test
gs
jle
pop
xor
jp
add
movsl
and
rol
imul
sbb
scas
roll
scas
pushf
es
sbb
push
adc
pop
cltd
ja
daa
cli
pop
add
out
pop
xchg
xlat
outsb
cs
or
add
pop
dec
dec
loop
mov
dec
mov
stos
leave
pop
mov
adc
pop
fwait
and
popaw
fcmovbe
fbld
test
je
lock
insl
int3
daa
jns
adc
mov
push
pop
push
fwait
push
add
push
jb
xchg
mov
in
xchg
shl
outsl
inc
int
mov
aam
into
add
push
scas
int
push
pop
and
fucom
dec
cmp
shrb
mov
xchg
jle
insb
jnp
mov
or
ljmp
adc
add
sbb
inc
call
jl
lret
pushf
ljmp
jle
dec
sbb
popa
fwait
enter
sub
in
mov
leave
pop
fldln2
inc
movsl
dec
std
sbb
jnp
inc
out
fwait
subb
cmp
inc
inc
sbb
fstpt
push
movsl
mov
sbb
stc
sub
lret
mov
jg
inc
test
les
xchg
pop
out
dec
les
hlt
test
loope
inc
call
dec
and
dec
bound
or
inc
push
xor
or
daa
push
mov
test
sbb
dec
aad
mov
loope
mov
xchg
cmp
adc
dec
dec
in
add
bound
jae
clc
sub
cmp
dec
push
push
mov
mov
cmp
mov
xor
cmp
jg
out
lahf
mov
push
nop
push
xchg
mov
rcll
push
sub
adc
mov
fdivr
push
sar
popa
mov
loopne
repz
icebp
lahf
js
sbb
push
add
jmp
dec
mov
test
stc
int3
clc
and
inc
pop
xchg
push
bnd
push
pop
xchg
sbb
sub
and
out
mov
insb
mov
inc
in
movsl
mov
pop
jg
adc
or
lods
xchg
inc
mov
sbb
imul
inc
or
mov
insb
adc
push
dec
mov
xchg
mov
out
hlt
jno
scas
ja
adc
mov
mov
hlt
sbb
lds
add
shll
loope
daa
pushf
sbb
adc
push
lock
das
cmp
pop
in
mov
cmp
inc
repz
or
testl
dec
andl
cltd
lea
and
or
pop
cmpsl
push
out
in
int3
xchg
xchg
arpl
arpl
lret
xor
xchg
lock
sub
nop
loope
mov
fldenv
ficomps
arpl
aam
adc
inc
mov
cmp
xchg
sbb
fmull
jecxz
push
ss
jle
jnp
add
imul
fwait
popa
lock
adc
sbb
call
mov
in
jp
jns
out
add
xor
icebp
or
xor
mov
and
loop
ss
out
std
inc
lods
in
ja
mov
mov
sbb
and
adc
outsb
std
push
mov
div
shr
or
sbb
inc
lret
cmpsb
call
push
pop
mov
dec
inc
add
int
xchg
bound
add
ss
mull
outsb
loope
jmp
xorb
int
addl
mov
nop
das
aam
mov
ds
adc
stos
stc
mov
dec
cwtl
push
jbe
lret
dec
cmc
fwait
push
lret
cwtl
fsubr
ljmp
or
mov
lock
mov
shrb
or
sub
mov
test
jo
xchg
icebp
mov
repz
pop
sahf
push
inc
fcmovnb
loopne
iret
jo
xchg
test
push
clc
mov
jno
sarb
nop
xor
ss
fidivl
in
insl
xor
lret
mov
inc
repnz
pop
dec
adc
mov
loope
inc
daa
mov
loope
jo
mov
mov
sub
mov
arpl
mov
mov
and
ja
sbb
pop
jns
push
pop
adc
ficomps
cmp
pop
and
pop
fcmovb
aaa
out
jne
lods
adc
jecxz,pn
nop
dec
xor
adc
pop
sub
test
mov
cmp
mov
sub
pushf
jns
mov
ds
push
mov
jns
scas
mov
adc
cltd
hlt
sub
cmp
xor
sbb
gs
arpl
es
cs
jns
mov
or
or
lret
xor
pop
mov
mov
xor
enter
aas
xor
push
fimuls
iret
mov
es
ret
mov
loop
pushf
cmp
loopne
xchg
out
lea
out
pop
lods
addr16
pop
xor
sbb
call
popa
xor
popf
sub
cmpsb
outsb
and
add
movsb
push
fstps
das
sbb
out
push
movsl
cld
lcall
imul
add
push
test
pop
xorl
js
xor
loop
xchg
enter
sbb
repnz
cmpsb
mov
sub
sub
mov
aas
stc
inc
cmpsl
inc
test
pop
subl
jmp
std
les
xor
sbb
std
lahf
cli
stc
or
push
shll
dec
xchg
arpl
jnp
lcall
outsb
jne
bound
push
mov
popa
inc
shll
int
je
ljmp
xor
xor
ret
rorb
adc
add
xchg
adc
call
dec
cmp
shlb
fldl
je
and
stos
lds
jp
cmpsl
inc
ljmp
cmp
daa
add
aam
cmp
jmp
jae
push
push
dec
in
ljmp
cmp
add
sbb
ljmp
sub
add
jae
popa
sub
hlt
pushf
xchg
js
or
xor
repz
push
sbb
aas
pushf
stc
jmp
xor
xor
inc
hlt
adc
dec
mov
or
in
cwtl
aam
adc
jecxz
rclb
mov
jb
call
rol
insb
je
adc
sti
cli
sahf
sub
loope
out
scas
mov
mov
std
es
jae
js
or
mov
jb
xchg
push
pop
lret
pop
out
jae
inc
fs
int3
and
push
sbb
pop
xchg
mov
mov
pop
sub
sbb
adc
sub
bnd
mov
xor
mov
xchg
jbe
es
sub
loope
sbbl
sar
jno
push
lret
daa
mov
mov
test
jae
in
loopne
push
jmp
lock
mov
test
xchg
daa
div
jns
cmp
xor
dec
arpl
fildll
fwait
outsl
push
push
div
push
sarb
jb
inc
sbb
jns
aam
jns
mov
mov
cwtl
xchg
rcl
jl
movsl
repz
lds
xchg
pop
push
pushf
mov
test
mov
cmp
dec
jp
mov
rorl
pop
mov
fisubrs
pop
daa
int
hlt
lds
cld
out
push
mov
ja
sbb
mov
mov
sub
jge
mov
mov
mov
adc
repz
sub
dec
xor
jg
dec
sahf
cli
int
xchg
xlat
ret
ss
mov
bound
xchg
shl
jns
ljmp
sbb
mov
fcmovb
pushf
cmpsl
in
sub
fcomps
xchg
xor
dec
sbb
push
clc
loopne
push
sti
outsb
add
adc
xchg
push
lock
pusha
or
and
cmp
xlat
lds
dec
movsl
fdivl
pop
sub
in
push
adc
fwait
inc
pop
jbe
hlt
mov
add
sub
aas
ret
sbb
lret
imul
push
sub
pop
or
sti
dec
pop
and
cltd
jle
daa
xor
mov
ja
jp
mov
jne
add
scas
add
inc
out
pop
hlt
bound
xchg
push
bound
pop
in
dec
movsl
and
mov
loop
inc
sbb
js
pop
lret
mov
xchg
idivb
fcomip
pop
pop
mov
or
sbb
jns
sub
push
repz
repnz
pop
cmp
and
sti
sub
aaa
sub
mov
inc
push
repnz
add
jbe
add
lods
aam
and
mov
adc
xor
sbb
arpl
adc
jl
outsb
popf
loope
lds
popa
stos
xor
cld
pop
push
sub
mov
add
mov
xchg
xor
push
inc
xchg
sbbb
insb
rorl
in
inc
sbb
jne
in
pop
lods
and
je
inc
inc
call
test
dec
icebp
cmp
mov
fistps
icebp
mov
mov
lcall
mov
pop
cwtl
pushf
pmaxsw
jecxz
ret
rol
mov
shl
lcall
mov
imul
dec
mov
add
push
insb
cmp
push
push
fidivrl
aad
inc
jo
mov
add
xor
or
push
xchg
repnz
jb
xor
sti
rorl
dec
lock
stos
inc
fildll
sahf
mov
aaa
sar
mov
push
push
lods
push
lods
fisttpll
mov
inc
inc
mov
adc
cmp
pushf
mov
jno
jecxz
lret
loop
pop
xchg
rorl
cld
mov
mov
sbb
out
add
fucomp
jp
adc
mov
xchg
and
lods
shll
push
repnz
leave
leave
mov
ret
clc
gs
push
jle
mov
push
rcrb
loopne
jge
jno
push
fst
movq
repz
mov
dec
inc
mov
sub
imul
rcrl
roll
test
out
repnz
out
and
in
sbb
test
push
xchg
inc
mov
or
mov
dec
cs
dec
testb
ret
repnz
into
das
mov
push
out
ds
lods
jle
lock
xchg
sbb
cli
dec
stos
pop
and
fs
adc
fimull
repnz
popl
push
add
clc
xchg
push
jle
and
adc
push
mov
sbb
xchg
xorl
sub
std
sar
mov
cmpsb
into
out
ret
pop
mov
out
repnz
inc
notl
dec
or
gs
jle
push
insl
pusha
ficomps
inc
flds
xchg
mov
xchg
mov
ja
dec
xchg
in
mov
push
in
jle
ss
push
mov
cli
pop
adc
fbstp
cltd
cmpsl
jmp
cmc
out
inc
sub
jbe
pop
xchg
jo
adc
dec
cmp
push
das
movsl
xchg
jo
hlt
adc
jge
bound
pop
rclb
or
cltd
jne
rcrl
mov
or
mov
outsl
dec
imul
scas
repnz
testb
aaa
pushf
arpl
in
push
mov
int3
test
scas
stos
outsb
jecxz
mov
int
jnp
stc
out
lahf
mov
call
xor
fwait
and
rcll
jno,pt
dec
inc
inc
inc
sbb
lods
jb
movsb
and
cmp
shl
pop
mov
inc
jae
mov
shl
inc
dec
push
fsubs
jl
ljmp
aas
test
fcmovne
pop
popa
adc
outsb
pop
mov
test
sbb
in
lods
or
xchg
popl
adc
xchg
cwtl
sub
ret
pusha
push
popf
es
into
cmp
outsb
int3
push
lcall
js
push
enter
or
adc
out
leave
cmp
aas
jno
mov
cwtl
jp
push
scas
dec
mov
push
pop
cmc
jne
jo
mov
js
pop
aam
xchg
aaa
dec
xchg
out
cmpsl
ret
cmp
shlb
sub
dec
cmp
popf
bound
fisttpl
xchg
jp
fiaddl
mov
lcall
nop
push
lret
rcrl
pop
mov
adc
and
aad
loop
je
in
sbbl
loope
jmp
jmp
fstp
pushf
or
arpl
push
xchg
xchg
adc
jae
sub
out
ret
insl
mov
popa
jb
pop
rcll
pop
je
lahf
rorl
inc
dec
shll
in
lcall
jge
scas
in
jae
sub
push
push
jnp
fdivs
aas
cmp
dec
mov
xor
mov
lods
jge
dec
push
imul
fnstsw
rol
test
xchg
into
mov
or
add
mov
mov
push
cmp
push
call
int3
push
jb
mov
push
sbb
std
inc
loop
and
ret
insl
ja
ffreep
mov
out
imul
bound
cmp
jns
mov
lock
dec
es
push
lret
out
insl
in
sub
jge
mov
aam
inc
adcb
loopne
popf
std
xchg
jnp
aam
fildll
jp
jl
pop
push
out
int
in
push
mov
dec
sbb
inc
loope
lret
push
add
pushf
ss
or
push
sub
dec
out
cmp
xlat
in
in
xor
push
mov
scas
fnsave
mov
testb
lods
clc
lret
push
popa
arpl
mov
loop
test
or
enter
xor
ds
inc
mov
cmp
imul
mov
arpl
aad
push
insb
adc
jne
bnd
fwait
inc
push
les
lock
sub
cmp
mov
jle
adc
cmp
mov
gs
xor
hlt
fdivrp
push
cs
sbb
jge
das
xor
pushf
pusha
or
mov
test
xor
iret
cmp
mov
cmp
mov
fld
sarl
imul
mov
or
aad
pop
adc
mov
fs
adcl
mov
add
xor
push
loopne
jnp
and
insl
xor
adc
and
mov
aaa
ret
push
sbb
push
icebp
push
stos
inc
insb
shr
xor
cld
xlat
js
mov
cmp
loope
shll
cmpsl
lock
push
mov
adc
insb
pop
mov
pop
aas
test
and
jmp
mov
data16
cwtl
mov
sbb
mov
pop
bound
sbb
add
sarb
stos
add
xor
push
pushf
cmp
les
testb
adc
das
cmp
movsb
mov
int3
adc
jl
loopne
movsl
ret
mov
or
inc
aad
fnsave
ret
mov
lea
sbb
gs
cmpsb
pushf
mov
ljmp
push
pusha
stos
leave
loope
test
mov
add
cltd
gs
mov
cmpsb
mov
and
xor
mov
xor
mov
pop
fdivr
dec
in
and
inc
push
insl
std
sub
enter
lret
xchg
sarl
nop
popa
lss
push
shrb
sbbb
jns
sub
in
inc
jge
mov
js
mov
aaa
pop
inc
xchg
imul
dec
mov
mov
pop
outsl
and
data16
cli
mov
adc
mov
sbb
or
into
xor
jg
out
sbb
fcompl
xchg
insl
test
stos
aaa
sub
or
push
call
enter
inc
fnsave
clc
out
out
arpl
adc
cwtl
inc
fnstcw
repz
adc
cld
mov
mov
stc
test
cmp
test
loopne
out
or
enter
adc
movsb
cmpsb
xchg
fsubrs
and
xchg
nop
pop
in
jb
push
out
cmc
xchg
fnstsw
cltd
aaa
in
sbbb
imul
icebp
fmull
adc
jne
adc
pop
sub
into
div
dec
sub
nop
mov
mov
dec
mov
ljmp
mov
mov
or
scas
in
pusha
cs
cmpb
pop
jae
icebp
mov
cmp
insb
shlb
into
adc
movl
sbb
push
mov
mov
mov
lds
adc
push
xchg
das
bound
push
pop
add
insl
xchg
seta
cld
dec
shll
cmpsb
jne
scas
sub
insl
stos
jg
daa
in
pop
mov
incl
jnp
pop
push
iret
inc
mov
lcall
ret
ljmp
movsb
ja
push
or
imul
inc
pop
jle
xchg
sti
lret
mov
add
dec
push
cmp
mov
mull
ds
stos
adc
outsb
inc
std
insb
fisubrs
test
xchg
stc
lahf
mov
scas
fldcw
and
add
pop
xor
std
inc
pop
out
pop
test
je
xchg
icebp
pop
mov
scas
or
or
add
pushf
out
subb
xchg
cmp
push
sti
aad
add
push
pop
aad
mov
lock
pop
int
pop
jge
mov
call
push
xor
sub
mov
xchg
movsb
adc
push
jbe
rcl
jle
icebp
mov
or
xor
rcll
add
inc
outsb
adc
jb
js
mov
adc
in
scas
addr16
rcll
add
jno
cmp
idivb
xchg
sbbb
jp
jbe
stos
int3
cmp
fidivrs
push
add
lret
inc
and
js
insb
mov
push
loop
xor
rclb
int
jecxz
ret
sbb
adc
mov
mov
loopne
xlat
pop
test
inc
cmp
ret
mov
popf
inc
jp
sub
add
imul
lods
outsb
inc
push
jg
jae
popa
popf
dec
push
dec
cmp
adc
xchg
fimuls
loope
mov
in
cmp
in
pop
cmp
add
and
push
xor
nop
push
out
popf
lds
ds
sti
jno
push
jg
scas
and
shlb
sahf
test
or
sbb
xchg
in
pop
xchg
mov
add
cmp
ja
lahf
rcr
or
aad
add
cmc
and
ds
movsl
daa
dec
std
lods
in
add
sub
insb
imul
mov
mov
or
mov
fisubs
arpl
pop
pop
pusha
jecxz
jnp
mov
and
insl
cltd
into
cmp
dec
lahf
push
dec
stos
sub
or
mov
mov
insl
sbb
push
fnstcw
sahf
push
fcoms
into
incb
sbb
and
lds
and
xchg
mov
int3
jne
pop
xchg
jl
dec
cltd
push
int
and
lock
cmp
test
inc
xor
xchg
data16
adc
sti
scas
adc
ficoms
enter
cmp
mov
in
add
imul
xchg
mov
inc
adc
xor
sub
inc
dec
ss
out
mov
aam
dec
stc
fs
lcall
push
ss
xor
push
cmp
sbb
or
in
icebp
sub
mov
fadd
dec
pop
lock
sbb
jb
mov
in
fwait
xor
inc
cmp
into
sub
mov
iret
fdivrp
dec
lods
ljmp
push
sbb
xchg
lea
dec
xchg
xchg
sub
sbb
or
push
outsl
xor
jmp
inc
test
push
fisttpl
mov
inc
pop
jns
dec
add
test
adc
out
outsl
cmp
or
or
and
loop
cld
push
inc
xchg
fwait
sarb
sbb
dec
subb
adc
push
cli
test
cwtl
or
das
mov
sbb
xchg
fisttps
shl
adc
out
xor
mov
push
sub
insl
mov
jge
and
mov
cmp
mov
fmul
sbb
push
ljmp
ret
pop
sarb
inc
xchg
xor
addl
mov
ret
push
ljmp
xchg
and
hlt
mov
pop
into
xchg
push
mov
in
xchg
mov
sbb
push
sub
push
cmc
scas
rolb
ja
clc
push
mov
push
jl
das
jae
adc
mov
sub
mov
aaa
jb
iret
leave
push
jecxz
adc
mov
mov
mov
in
mov
adc
scas
in
adc
fistl
movsl
in
mov
push
cmp
xchg
fsub
cmp
imul
pusha
pop
push
mov
push
mov
pop
mov
scas
and
outsb
inc
mov
fldl
pop
es
xchg
imulb
je
rorb
add
pop
int3
mov
lret
pop
fisubrl
dec
add
fldt
aad
insl
loope
push
sbb
out
repnz
jp
cmp
mov
push
pop
sahf
jnp
jl
jns
mov
je
flds
jp
pop
jnp
cmp
jge
inc
add
les
dec
or
dec
pop
cs
mov
jne
xchg
xchg
imul
adc
jmp
inc
add
adc
dec
pop
cwtl
push
clc
fwait
loopne
into
xor
ljmp
mov
fucomp
and
loop
std
and
jecxz
pusha
mov
cld
mov
int3
nop
and
rolb
scas
test
sub
clc
jo
pop
pop
sarb
pop
mov
lcall
adc
or
sub
ret
mov
fldt
fiadds
out
push
in
dec
enter
fstl
sbbl
lret
adc
ds
push
sbb
les
sbb
jecxz
aaa
mov
aam
dec
push
cli
jge
fimuls
mov
sbb
imul
arpl
decl
add
out
in
add
xchg
testl
and
lds
add
aaa
push
gs
idivl
pop
subb
incl
pushf
jnp
xchg
add
aad
add
fildl
aas
xor
adc
cwtl
sbb
leave
mov
das
push
xchg
sarl
add
push
jl
sbb
jmp
popf
movsb
push
fs
xor
xchg
dec
sbb
fistps
dec
adc
fdivrs
fistl
outsb
jecxz
xor
push
adc
mov
movsl
std
movsl
dec
stc
inc
jg
mulb
movsb
in
lods
fcoms
push
or
xor
adc
xor
call
icebp
dec
lock
or
movsb
sbb
lahf
xor
lahf
icebp
es
xchg
cmpsb
imul
movsl
sbbb
ret
popa
mov
pop
mov
jnp
add
test
fcoms
sahf
xor
push
ret
cmp
nop
mov
pop
rcl
jecxz
jbe
add
fwait
pop
jne
jne
ret
jl
and
pop
sub
roll
ja
insl
sahf
adc
xor
jnp
mov
inc
stos
aas
aam
jne
aam
int3
and
pop
ret
add
mov
ljmp
or
pop
xor
dec
mov
xchg
pop
xchg
ss
lret
cmp
mov
loop
dec
repz
pop
jnp
maskmovq
push
lds
mov
push
jo
gs
movsb
or
out
scas
sahf
push
call
jne
divl
in
test
xor
mov
aad
sbb
lcall
mov
dec
iret
stos
mov
xchg
pop
mov
and
repnz
rclb
clc
pop
pop
outsb
out
add
nop
bound
mov
sbb
inc
jns
add
ljmp
jl
fcmovne
push
jg
adc
mov
pop
ret
jmp
inc
push
mov
shlb
mull
jb
popf
cmp
sahf
mov
xchg
mov
nop
mov
mov
inc
pop
xchg
xor
inc
sub
test
push
xchg
clc
inc
rorb
and
repz
ss
insl
xlat
lock
std
repnz
push
jmp
push
iret
in
cwtl
xchg
mov
lods
and
dec
fwait
popf
jge
cmp
sti
mov
test
jo
mov
mov
cmp
pushf
mov
outsb
pushf
and
loopne
cld
out
xchg
ljmp
pop
hlt
fcmove
inc
dec
stos
das
imul
push
xor
ret
pushf
jmp
mov
outsl
xchg
jo
xchg
imul
dec
xchg
push
inc
xchg
or
ss
push
les
xchg
adc
push
fwait
arpl
sub
push
ja
lret
mov
pusha
lds
push
mov
pop
rcr
mov
and
push
lcall
fbstp
pop
or
in
dec
inc
out
scas
out
in
enter
push
fnstenv
sarl
xchg
popf
das
mov
jo
add
xorb
lods
sbb
pop
or
imul
insb
lods
enter
jp
jns
sahf
xchg
xchg
pop
lret
jp
lods
outsl
scas
jle
and
pop
std
int3
inc
scas
in
or
fsubr
jae
add
lcall
std
lea
add
mov
mov
push
mov
imul
dec
push
jns
out
dec
xor
ja
dec
fcompl
adc
insl
ret
jl
push
lods
icebp
lahf
push
pop
lcall
out
add
clc
jae
dec
add
cmp
decl
inc
sub
add
pop
add
adc
cmc
push
fstps
push
jecxz
out
adc
andl
sti
lea
add
shrb
jno
lea
push
push
rcr
fcomip
dec
dec
sbb
nop
retw
clc
mov
pop
cld
push
push
and
or
inc
fnstsw
popa
push
das
std
xchg
cmp
or
es
and
stos
or
mov
jb
adc
sbb
jp
iret
mov
mov
ds
insl
cmp
xchg
enter
mov
ljmp
add
mov
mov
repnz
and
push
sub
repz
fwait
std
cmpsl
sbb
fs
cmpsb
and
rorl
push
subl
fs
out
mov
out
insl
lret
rcrb
adc
xor
pop
xchg
mov
andb
je
push
xchg
lock
hlt
fsubs
adc
xchg
cmc
sub
pushf
pop
jb
cli
addb
pop
int
cld
orb
jge
dec
adc
cmp
mov
jb
ja
aad
or
sub
mov
cmp
mov
sahf
rcrb
sbb
mov
mov
xchg
pop
scas
mov
pop
and
jnp
push
fadd
enter
dec
test
pusha
mov
insb
pop
iret
in
adc
mov
add
repz
dec
insb
ror
aam
imul
out
push
mov
inc
call
xchg
outsb
xor
inc
mov
inc
pop
ret
outsb
mov
loopne
adc
inc
cmc
push
mov
pop
shll
negl
xchg
shll
das
stos
je
cmp
xchg
cld
test
xchg
aad
sbbl
adc
jmp
mov
sarb
sub
xor
mov
enter
pop
or
pop
adc
ret
xor
test
mov
test
fstpl
lock
js
aam
mov
dec
pop
pop
pop
lods
sbb
sti
mov
lret
push
ret
les
xchg
mov
mov
fistps
mov
mov
jo
lahf
pop
inc
cmpsb
mov
sbb
and
adc
lret
repz
in
and
test
data16
leave
lds
push
mov
addl
fisubrs
and
lret
mov
cmpsl
sub
insl
std
jge
pop
push
dec
mov
roll
inc
sbb
mov
cmc
repz
mov
inc
clc
xor
jp
inc
lods
dec
inc
jge
mov
arpl
dec
mov
movsl
xor
dec
and
add
inc
sbb
mov
daa
sarb
push
fcmovbe
rcr
xchg
cmp
mov
push
dec
mov
sti
dec
jne
test
or
lods
ret
or
sub
jg
jnp
test
decl
xchg
je
sar
test
fsubrs
and
fwait
mov
fnstcw
ljmp
adc
in
push
or
jle
xorb
pop
mulb
bound
outsl
adc
test
div
outsl
jb
add
ds
ds
push
punpckldq
pop
cmp
lds
cmp
push
mov
mov
push
mov
insl
cmp
push
cld
mov
inc
mov
xchg
mov
jae
adc
or
clc
mov
into
push
sub
or
mov
js
adc
inc
pop
insl
add
imul
loopne
pop
fwait
movsl
sub
push
or
test
movsl
stc
or
fadds
and
jecxz
notb
fs
into
jg
jns
adc
cli
mov
subl
lock
incl
sub
idivb
lcall
rolb
push
movsl
repz
sub
xor
ret
xchg
push
mov
adc
orl
inc
bound
mov
jns
aas
jle
imul
push
jp
jle
jns
arpl
imul
es
std
add
test
iret
imul
les
enter
das
xor
jbe
jl
inc
and
push
adc
enter
sarb
pop
inc
ret
loop
testb
jno
std
push
push
xchg
aaa
in
sub
out
lret
push
mov
pusha
lods
sbb
fcomi
out
inc
jp
sbb
out
mov
jmp
xlat
flds
leave
test
sub
loope
rorb
cmp
scas
dec
addr16
iret
cmp
jns
mov
hlt
add
lret
xor
xor
js
inc
add
fsubrs
ss
mov
test
lods
scas
xor
sub
pop
mov
lret
loop
mov
fdivrl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
push
call
push
push
push
push
call
test
je
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
push
push
call
xor
pop
mov
pop
ret
nop
nop
sub
push
push
push
call
push
push
call
lea
push
call
call
push
push
push
call
cmpw
push
je
push
call
push
call
add
jmp
push
push
push
call
ljmp
mov
pop
inc
push
sbb
aad
mov
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
mov
js
cmp
loope
es
out
fsubs
or
movb
repz
mov
sbb
mov
pop
mov
xor
push
ror
fistpll
mov
pop
inc
push
jg
mov
push
add
dec
sub
insl
mov
repnz
popf
in
movsl
sub
mov
mov
jmp
fildl
inc
dec
repnz
out
push
cmc
fdivrs
stc
fistps
inc
lret
dec
sub
insl
cli
int
repnz
cmp
xchg
aaa
in
aas
mov
xchg
lock
bound
lds
pusha
testl
pop
inc
push
out
xorb
cltd
inc
mov
test
clc
aad
mov
in
data16
pop
inc
push
out
shlb
test
inc
push
jecxz
shlb
clc
aad
mov
out
shlb
mov
out
shlb
pop
inc
push
xlat
push
inc
mov
out
shlb
pop
inc
push
out
shlb
pop
inc
push
bound
fnstenv
sti
aad
mov
xor
clc
aad
mov
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
rcrb
jmp
pop
inc
push
in
shlb
popf
clc
aad
mov
out
xchg
ja
lods
lcall
addr16
mov
cmpsb
xor
pop
inc
push
mov
shlb
pop
inc
push
loop
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
push
out
shlb
pop
inc
sub
xor
call
sahf
sbb
sbb
mov
adc
rorl
bound
mov
inc
jbe
jmp
rorb
pusha
mov
mov
jnp
mov
dec
pop
dec
mov
push
jae
jp
stc
test
sub
rclb
inc
xor
dec
mov
in
fidivl
loopne
scas
cltd
xor
mov
lcall
sarb
add
lret
in
dec
jo
das
cmpsl
popa
mov
cmpl
add
cmpb
sbbb
mov
jns
mov
stc
mov
mov
and
sub
cld
das
int3
push
cmp
outsb
push
popf
xchg
sub
nop
je
les
out
fucomi
sub
sti
sbb
loopne
imul
out
outsb
xor
mov
in
fdivrs
mov
inc
rol
test
or
ss
nop
cwtl
mov
add
ret
dec
push
cmc
mov
imul
add
jnp
add
insb
pushf
int3
sti
push
mov
sbb
mov
in
push
mov
mov
je
push
mov
jg
dec
mov
mov
pushl
adc
adc
movsb
shl
outsb
or
jno
addr16
xor
xor
pop
fsubrs
push
scas
test
sahf
xlat
pushf
call
mov
cmp
sti
lock
insb
push
lea
xlat
pop
inc
inc
or
icebp
jb
inc
pop
jb
daa
repz
or
lcall
popf
dec
sbb
ss
je
iret
jbe
cld
out
movzbl
push
pop
rolb
daa
push
mov
orl
xchg
addb
sbb
out
and
jno
iret
sub
mov
dec
push
lds
and
aaa
imul
add
aaa
lahf
add
push
sbb
mov
inc
push
push
fsubrs
inc
mov
gs
jl
ret
dec
icebp
pop
mov
mov
test
adc
and
and
jmp
pop
iret
xor
arpl
fs
inc
xchg
lcall
add
dec
xchg
lret
xorb
mov
lds
je
adc
jmp
imul
sbb
frstor
dec
dec
adc
add
xor
mov
ret
sub
imul
pop
adc
cmp
outsb
shlb
jle
loopne
xor
lahf
fucom
ja
mov
sub
inc
lahf
mov
xchg
je
int3
test
sub
jg
imul
pusha
xor
push
jl
ds
sbb
push
jmp
cmp
in
sbb
pop
cld
cmc
test
adc
and
xor
jnp
mov
out
inc
sbbl
lods
and
and
push
pop
popa
jp
imul
movsl
inc
xchg
inc
adc
into
pop
loop
mov
jbe
xchg
outsl
enter
enter
cmc
xor
data16
loope
inc
mov
push
mov
and
push
jle
aam
adc
mov
cmp
addb
inc
repnz
es
data16
mov
add
dec
push
pop
mov
shl
sarl
xor
cmpsl
mov
or
sbb
fisubs
mov
stos
sub
shl
test
sub
xchg
ljmp
nop
out
mov
xchg
rcll
repnz
xchg
loopne
andl
adc
dec
fsubl
dec
arpl
hlt
jle
icebp
xchg
into
push
cmp
out
std
rolb
push
stos
add
push
sahf
int
xor
aaa
xchg
repz
lods
test
in
test
pop
push
insl
clc
ficomps
pop
fcmovu
cmp
adc
fiaddl
std
sahf
ljmp
dec
aad
fdivr
gs
pop
xchg
movsl
lahf
pop
adc
imul
stc
in
cld
jmp
outsb
push
jp
inc
xor
xlat
lods
add
enter
sbb
adc
mov
out
incb
out
hlt
push
mov
mov
jecxz
cmp
gs
loopne
jnp
les
test
shrl
lds
inc
rorb
xchg
jl
mov
outsb
loope
mov
adc
xlat
movsl
mov
popa
scas
push
push
adc
jge
or
and
mov
jnp
sbb
ss
icebp
fistl
cmpsl
or
jmp
xor
and
inc
push
dec
xor
xor
mov
fdivs
icebp
or
fildll
nop
xchg
fiadds
mov
call
cmp
lret
mov
fwait
out
sub
cld
subl
insl
repz
inc
lock
jge
lds
push
call
cmp
cwtl
hlt
inc
shll
jae
repnz
and
push
js
int
aad
mov
xchg
std
inc
adc
jb
push
inc
pop
aad
cmp
ret
dec
int
stos
mov
enter
sahf
mov
mov
loopne
mov
addr16
pop
test
mov
sti
movsb
gs
push
or
mov
or
andl
and
repz
das
data16
lods
aaa
adc
mov
lret
sub
cmp
mov
xchg
cmp
pop
mov
jecxz
ja
dec
xor
push
cwtl
orb
mov
push
sub
sahf
push
dec
inc
fcmove
test
bswap
pop
dec
mov
fs
inc
mov
mov
inc
mov
jne
push
push
or
pop
xchg
movsl
mov
or
fucomip
xchg
popa
test
push
stc
bound
pop
out
scas
sub
adc
sub
arpl
inc
iret
ss
movsb
imul
inc
mov
lcall
pop
mov
pop
arpl
mov
pusha
loop
scas
sti
inc
adc
mull
jp
cli
xchg
lods
sub
adc
es
fsubrs
mov
jbe
into
or
xchg
pushf
in
mov
stc
ss
inc
mov
insb
mulb
cmp
int
ret
mov
loop
mov
lods
push
push
lret
or
sbb
jae
and
rolb
jns
lods
push
lods
push
icebp
cmp
mov
stc
ja
cli
das
xchg
pusha
sbb
and
cltd
cmc
mov
rcrl
sarb
push
xchg
mov
daa
and
push
scas
cmp
enter
scas
mov
sti
cmp
inc
cltd
xchg
jle
jle
aaa
je
inc
push
adc
xchg
or
push
push
movsl
fisubrl
mov
mov
movsw
and
ljmp
mov
add
jnp
mov
out
icebp
adc
dec
lret
cmp
ret
fisttpll
sub
cmp
js
add
sbb
cmp
and
adc
lret
insl
aas
pop
push
sub
stos
pop
cli
add
dec
das
push
push
and
into
in
sub
push
lock
fwait
xchg
pop
mov
push
mov
adc
adc
dec
scas
mov
mov
fisubl
xor
into
mov
add
movsl
mov
add
movsl
mov
rcrl
iret
add
arpl
push
mov
es
dec
subb
jle
scas
jmp
gs
jecxz
mov
mov
imul
subl
xchg
push
jbe
xor
and
dec
lock
adc
jl
sbb
ja
and
lea
in
paddd
add
aaa
out
xlat
jg
je
rcrl
pop
and
jbe
dec
sub
das
xchg
mov
cmp
dec
popf
std
roll
lret
sbb
pusha
xor
hlt
pusha
inc
xchg
push
push
scas
inc
sbb
adc
xor
mov
or
adc
dec
inc
inc
dec
pop
or
fsubrl
aad
pop
shlb
push
add
add
in
loop
inc
flds
stos
je
dec
das
cmp
insb
out
adc
int3
mov
jo
mov
pop
sahf
sub
xor
call
jecxz
cmpsl
sbb
xor
std
pop
jo
stc
inc
adc
and
int3
or
pop
mov
sbb
push
inc
lret
inc
or
push
sub
dec
adc
xor
repnz
mov
inc
ret
std
into
xor
push
repz
daa
or
loopne
popf
fsubl
out
cmpsl
mov
dec
inc
cld
adc
lcall
fcompl
fiaddl
pop
dec
loopne
xchg
add
inc
jp
cld
add
adc
cmpsb
cmp
fisubs
cmp
nop
mov
in
jmp
das
pop
dec
cld
add
jl
sarl
scas
sub
xlat
adc
or
mov
stc
xor
pop
ja
or
loopne
pop
ss
lods
cmp
imul
add
cmpsb
cli
cmpsl
jmp
js
xchg
les
push
out
xchg
mov
arpl
push
lds
add
fisubrs
pop
aam
add
js
addr16
std
sub
mov
lahf
je
mov
push
scas
loope
insb
sub
lcall
pop
lds
cmp
les
cld
lret
insb
mov
adc
jno
cmc
leave
mov
pop
cmp
mov
loop
fiaddl
jmp
mov
btl
xchg
ljmp
test
xor
test
add
push
adcl
xor
stc
xchg
inc
daa
adc
and
jg
add
in
pop
loope
scas
xor
stos
imul
inc
imul
out
mov
and
jecxz
mov
es
push
js
xor
fisttps
cmp
xor
out
mov
pop
or
vsqrtpd
fsubrs
mov
mov
mov
pop
loopne
jne
sbb
cli
shrl
pop
mov
ss
fisttps
inc
negl
js
in
push
lcall
adc
rcrb
sbb
adcb
add
sub
xor
popf
mov
fildll
test
sahf
jae
orl
xchg
insb
xchg
dec
and
into
jne
mov
or
pop
push
mov
in
jnp
jns
add
hlt
mov
mov
push
lcall
mov
loope
repnz
cmpsl
xchg
imul
xchg
out
scas
popf
add
xlat
fldenv
add
mov
aam
sbb
arpl
arpl
jle
pushf
insl
test
aaa
fiadds
xor
stos
ds
lcall
or
les
fistps
dec
fdivs
sub
cmp
inc
dec
jg
fwait
mov
daa
js
mov
idivb
popf
jge
pushf
shlb
in
cmpsb
adc
movsl
cmp
popf
mov
aam
jo
push
pop
pushf
rclb
bnd
jne
mov
lret
xchg
pop
mov
and
sbb
js
inc
add
xor
dec
add
mov
aas
and
aam
das
lcall
out
xor
xor
popa
fildl
pop
push
jns
mov
fnstenv
and
mov
aad
int3
addr16
les
imul
and
ljmp
pop
mov
inc
sub
es
inc
and
cmc
fldl
xchg
fisttps
flds
and
jle
insb
and
mov
loop
sbb
sarb
in
mov
push
cmpsb
lcall
mov
xchg
push
mov
dec
sub
mov
js
in
andl
sub
cld
addr16
and
xchg
dec
test
inc
movsl
dec
inc
arpl
add
xchg
arpl
mov
enter
in
test
cmp
mov
push
scas
mov
or
inc
sub
shll
push
adc
lahf
shlb
sahf
aas
ds
xchg
jge
xchg
aam
dec
jl
mov
cmpsb
shlb
movb
lahf
add
test
jb
das
loope
xchg
inc
movsl
rol
ja
into
inc
scas
mov
mov
push
mov
cmp
dec
inc
fcoms
imul
xor
ss
sbb
mov
pusha
and
adc
dec
mov
xor
add
mov
inc
jbe
mov
add
in
inc
adc
out
mov
mov
xor
or
ret
int
das
and
data16
lods
mov
push
pop
div
xchg
lea
jae
xor
test
inc
mov
pop
shll
push
stos
cmp
insl
arpl
cwtl
dec
xchg
xlat
push
push
adc
fisttpl
lret
int
xor
imul
addl
fbstp
push
push
mov
test
add
mov
push
inc
jnp
addr16
sub
rcrb
cmp
and
push
test
dec
std
mov
lea
xor
rcr
and
ret
sahf
push
cmp
shl
mov
out
sbb
xchg
lds
push
loop
ds
out
adc
add
lret
insl
ljmp
shr
cmpsb
inc
fadd
into
pop
jno
mov
icebp
pop
das
cltd
arpl
out
aad
mov
les
jge
decl
inc
mov
lods
mov
xlat
jp
dec
adc
pop
lds
sbb
push
sbb
push
xchg
arpl
jae
dec
scas
imul
insl
push
icebp
int
test
outsl
or
sbb
inc
fstpl
insb
jge
mov
xchg
jb
dec
loop
or
mov
arpl
daa
in
pop
xchg
sar
adc
test
push
lcall
loopne
mov
das
loop
pop
sbb
pop
sbb
mov
and
or
insl
mov
inc
ret
insl
xlat
dec
repnz
js
sub
insb
cmp
mov
fsubrl
int3
dec
imul
nop
das
test
mov
dec
test
cmp
pop
pop
sub
sahf
inc
stc
test
sub
mov
decl
or
notb
cmpsl
cwtl
jo
pushf
jecxz
mov
sub
cmp
push
push
push
call
push
push
call
xor
add
ret
nop
jmp
jmp
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pusha
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
popa
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
popa
inc
add
popa
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
bound
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addb
addb
addb
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
addb
addb
addb
addb
addb
addb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
addl
addl
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
test
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
