push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
xchg
scas
sahf
pop
int3
mov
xor
int3
jne
and
dec
scas
xor
ficompl
push
sbbb
jno
jecxz
mov
xchg
rcrl
jbe
ss
popf
fwait
cmp
ret
and
lods
cmp
lds
mov
test
loope
jae
xchg
mov
iret
cmp
insl
pop
sbb
mov
push
divb
mov
bound
push
adc
adc
stos
push
pop
push
cmp
or
cld
aas
insb
push
mov
push
push
push
fcompl
pop
popf
xchg
cmp
and
add
testb
jle
inc
ficompl
cmp
aas
inc
ret
into
mov
cmp
jg
sahf
and
pop
push
or
mov
es
cltd
insl
out
mov
outsl
and
dec
ss
sub
mov
loope
loope
shrb
adc
mov
popf
xor
push
cwtl
ficoms
cltd
jl
inc
aaa
mov
mov
add
or
hlt
imul
jno
cmp
dec
cmp
or
out
sub
out
enter
inc
xor
ds
cmp
test
in
jl
xchg
push
push
out
mov
test
mov
or
pop
mov
incl
pop
mov
pusha
ds
loopne
loope
sub
dec
fsubl
jns
scas
inc
or
push
jo
sbb
mov
bound
fstps
out
in
and
imul
in
cmp
lea
outsl
or
lret
mov
mov
rorb
or
into
dec
int3
jo
adc
push
jbe
adc
stos
sbb
sub
loopne
and
and
fs
scas
mov
add
loop
adc
dec
cmpb
lods
push
imul
xchg
les
mov
ljmp
mov
jb
push
jno
or
test
inc
aad
pushf
in
pop
mov
dec
cld
and
repnz
insl
xor
inc
fstl
pop
mov
sbb
add
xor
cld
scas
shll
pop
mov
mov
mov
in
fimull
pop
andb
lea
aas
loopne
scas
ljmp
das
and
lcall
push
notl
stos
mov
lea
or
fidivs
lcall
xchg
out
testl
adc
test
ja
dec
es
lods
push
xchg
out
ficompl
xor
cmp
jecxz
dec
xchg
mov
push
hlt
sub
in
popfw
push
out
cmc
aaa
test
loopne
sub
or
push
mov
shrl
mov
pusha
insw
xchg
and
in
xor
cmp
cltd
mov
pop
lods
and
adc
ret
inc
stos
adc
daa
jne
test
imul
xchg
int
cli
xchg
jo
fiaddl
push
cmp
mov
mov
int
addr16
cmp
pop
std
aaa
ljmp
sahf
push
test
ret
lahf
jo
sbb
scas
adc
daa
idiv
or
in
dec
shrl
mov
xor
loope
cmp
mov
push
cmpsl
fdiv
loop
inc
jb
in
push
xchg
push
cmpb
push
int3
pop
pop
hlt
push
xchg
push
dec
push
loope
inc
popf
cli
jg
ljmp
add
mov
rclb
lods
imul
mov
cs
fidivrl
xchg
sbb
or
stc
adc
in
push
inc
popf
rolb
idiv
or
jae
pop
mov
frstor
add
mov
cmpsb
negl
jae
jae
dec
dec
xor
jle
js
popf
fadd
ret
or
test
ret
cmp
lcall
fsubrp
out
out
loopne
or
xor
loope
mov
or
push
arpl
adc
push
push
or
out
mov
push
jo
dec
inc
imul
xchg
sbb
aam
inc
pop
je
cmpsb
xchg
popf
sub
in
insb
pop
enter
xor
mov
ss
jbe
in
into
dec
mov
jnp
mov
sbb
push
test
xor
mov
mov
aaa
mov
leave
adc
xchg
inc
addb
cmp
nop
loope
mov
sub
adc
stos
push
je
mov
fwait
outsl
clc
outsb
cli
cld
sbb
sub
xchg
xchg
repnz
or
push
jnp
or
in
xlat
out
inc
loope
arpl
sahf
jmp
frstor
subl
mov
ret
das
mov
xlat
insb
or
stos
call
hlt
lock
mov
and
add
cli
cli
lea
add
ret
mov
inc
mov
fistpll
outsb
arpl
xchg
jo
cld
hlt
cwtl
jle
ljmp
add
ret
imul
pop
lock
into
pop
insl
and
mov
jne
sbb
ds
xchg
dec
dec
div
adc
add
push
in
pop
dec
inc
or
pop
ret
in
pop
sub
daa
jno
cltd
xor
xchg
movsl
ret
pusha
mov
pop
cmp
pop
mov
mov
jne
xchg
enter
mov
cmp
sbb
pop
add
and
lret
filds
shrb
daa
arpl
in
cmp
faddl
stc
fnsave
xor
xchg
mov
xorb
sbb
xlat
push
jno
mov
inc
xchg
mov
mov
and
mov
nop
xor
lcall
xchg
lea
jmp
xchg
mov
sarl
cwtl
outsl
push
loop
scas
sbb
jge
cmp
add
dec
dec
ds
sarl
shl
push
push
popf
fistpl
test
adc
adc
jmp
pop
out
sub
or
pusha
inc
aaa
sbbb
adc
mov
jge
mov
inc
pop
shlb
in
pop
pop
add
stc
mov
cmp
push
adc
fldt
mov
je
call
xchg
mov
pop
inc
xor
ret
fwait
add
xor
mov
out
mov
sahf
sub
ja
dec
ljmp
mov
add
out
sti
arpl
pop
pop
sti
pusha
mov
popf
inc
jbe
mov
cli
jbe
cmc
mov
mov
dec
cmpsl
inc
insl
mov
inc
mov
mov
pop
test
or
loopne
cmp
xor
xor
cmp
push
jno
add
sub
add
pop
pop
mov
mov
or
xchg
xchg
dec
stc
mov
cmp
push
jg
imulb
xor
inc
andl
ret
pop
call
in
rol
pop
test
and
xchg
xor
xor
outsl
je
mov
xor
sahf
mov
sbb
mov
sbb
jns
sbb
out
jmp
out
test
lea
fnstcw
pusha
filds
ljmp
xchg
mov
push
mov
xchg
inc
inc
mov
lahf
hlt
sbb
mov
pop
popf
pusha
jl
xor
xor
and
enter
sbb
mov
pop
loopne
xor
dec
test
out
sbb
inc
xor
mov
pop
repnz
jne
jmp
insl
xor
xor
fwait
aaa
cmp
or
inc
jmp
insl
jmp
sub
inc
imul
popa
out
popa
push
or
loopne
popf
sbb
movsl
inc
out
insb
hlt
lcall
jmp
or
ds
cmp
add
cmc
in
loope
sahf
jmp
lods
outsb
ss
gs
add
cmp
jns
repnz
xor
fdiv
jl
pop
lret
mov
mov
fwait
cmc
imul
pushw
fstpt
lds
dec
scas
lods
jns
out
mov
sub
ficomps
mov
mov
sbb
pushfw
ds
test
jmp
sub
push
pop
jne
cmp
add
xchg
mov
pop
js
pop
int3
inc
jmp
fnstsw
jle
mov
push
mov
pop
clc
mov
jae
sar
inc
mov
dec
mov
sbb
sbb
int
ljmp
mov
lock
mov
lcall
loope
jnp
sbb
dec
xchg
mov
stos
lods
test
pop
mov
dec
xor
scas
loopne
icebp
fidivrl
and
in
imul
das
movl
dec
outsl
imul
imul
pop
jae
test
dec
insl
mov
mov
push
scas
andb
mov
dec
xchg
mov
addl
lcall
jp
adc
and
jg
lea
jg
add
out
push
rorl
movb
insb
movl
test
movb
xchg
pop
cltd
iret
pop
push
dec
xchg
and
mov
or
in
into
in
dec
sbb
out
ret
cmp
sbb
daa
inc
mov
jl
pusha
mov
aaa
call
outsl
pop
xchg
fisttps
mov
xor
pushf
scas
aam
js
jns
mov
invd
ja
inc
mov
adc
mov
dec
test
stos
sti
sub
fbstp
xchg
xor
jle
sbb
cmp
out
dec
push
stos
popf
loope
mov
xor
daa
andl
data16
ret
xchg
cmpsb
inc
fsubrs
in
and
sub
push
jle
sbb
dec
jo
push
sbbb
enter
mov
sbb
mov
mov
mov
scas
aas
dec
cli
stos
mov
arpl
popa
jecxz
sub
scas
adc
inc
xor
outsl
push
shrl
and
mov
pushf
and
lea
pop
inc
inc
sub
xchg
jnp
stos
xchg
jl
out
adc
mov
in
xchg
xchg
xchg
pusha
lcall
jbe
imul
dec
pushf
dec
stos
mov
mov
insb
mov
jb
jp
jg
pop
into
push
jbe
sub
or
lret
gs
and
test
fidivl
xor
shl
arpl
stc
add
adc
mov
lret
dec
xor
fistps
sub
imul
jns
sti
mov
movsl
xchg
outsb
xchg
lret
out
mov
aam
sarl
or
push
xchg
adc
inc
jbe
cmp
out
stc
jge
cmp
ds
adc
mov
mov
loope
cmp
mov
pop
mov
imul
popa
int3
cmp
repnz
xchg
fld
scas
mov
ds
cld
or
fcoml
in
lods
mov
xor
dec
int
cmpsb
jmp
in
popf
dec
hlt
mov
stos
jge
mov
add
bound
adcb
cmp
sbb
aaa
dec
js
nop
jns
inc
jne
pop
xor
daa
nop
mov
mov
cmc
xchg
jae
je
jo
lahf
adc
and
sahf
fcmovbe
jb
cltd
sub
mov
mov
xchg
cmp
and
mov
in
ret
jle
and
lahf
or
xor
hlt
adc
fiaddl
mov
add
fstpt
loopne
cmp
xchg
dec
ret
lock
mov
jl
inc
sbb
sbb
fs
lds
icebp
push
xor
nop
ljmp
lcall
jns
lea
lcall
or
dec
mov
mov
jbe
popa
fbstp
loope
imul
mov
stc
push
adc
loop
xchg
and
xor
or
int3
xor
in
cli
xchg
scas
aas
imul
dec
add
outsl
dec
mov
andl
or
cmp
in
sti
cld
sti
lret
add
bound
jnp
dec
xor
outsl
mov
nop
jae
lcall
dec
je
mov
or
xchg
pop
fiadds
xchg
jno
les
cwtl
inc
push
mov
cmpsl
enter
iret
pop
fidivs
sub
xlat
subb
jp
mov
xchg
addr16
cmp
outsl
outsl
stos
les
jmp
out
mov
mov
frstor
push
pop
in
aad
call
sub
push
sub
xchg
or
cmpb
xor
es
sub
push
xchg
es
pop
mov
sti
mov
jo
insb
xorl
sar
pop
daa
outsb
js
xchg
sub
js
or
aaa
add
loope,pt
insl
jge
cmp
cmp
loop
mov
outsb
pop
sub
or
aad
sahf
mov
inc
xor
mov
std
test
inc
sbb
fisttpll
xchg
orb
and
jecxz
test
xorb
push
popf
ret
mov
sub
jmp
lock
adc
clc
and
mov
sbb
and
mov
pop
jne,pt
cmc
sub
arpl
pop
and
inc
push
popa
sbbb
or
push
and
add
mov
ret
adc
es
sbb
mov
stos
adc
mov
out
aam
std
cmpsl
or
or
xchg
and
cld
add
fwait
orl
jne
lea
mov
xor
pop
or
lods
roll
in
inc
push
push
pusha
scas
fimull
ret
bound
jbe
and
or
sub
push
push
push
cmp
sbb
js
sub
and
ljmp
push
int
xchg
popa
pop
dec
into
and
inc
jmp
aam
jge
dec
mov
add
jo
sti
push
cmp
shl
mov
mov
insl
js
cmp
stos
jg
inc
mov
fs
add
adc
push
stos
rorl
jg,pn
sbb
outsb
mov
outsl
mov
pop
jb
dec
stos
insl
in
sbb
rcrb
jne
dec
sahf
or
or
cmp
mov
cmp
sahf
mov
or
rcrl
xor
pushl
fidivs
test
clc
push
sub
xor
je,pn
cmpsl
xor
cmpl
lods
and
adc
jle
mov
popa
pop
push
xchg
or
sub
add
aad
dec
cmpsl
test
ds
pop
push
lods
cmp
pop
mov
test
xchg
jae
mov
cmp
test
mov
aam
sbb
and
xor
cltd
pop
test
or
ret
inc
mov
mov
mov
sub
stc
ja
xor
into
pushf
cmpsb
in
imul
mov
mov
aaa
cmp
or
xor
adc
inc
data16
imul
rol
add
and
das
pushf
jle
mov
add
rcrl
lds
sub
rcrl
lods
mov
sbb
push
cmp
gs
cmp
lea
dec
imul
in
push
test
mov
pop
arpl
mov
pop
dec
xchg
or
jbe
jge
xchg
cmp
lcall
lds
pushf
jecxz
sub
dec
jo
daa
jp
mov
out
sbb
fisttpll
sub
inc
cmp
xchg
mov
adc
jle
xchg
in
nop
js
dec
sub
fdivrs
mov
or
ja
fwait
movsl
push
dec
inc
add
lss
mov
inc
divps
popf
adc
adc
aas
das
js
inc
sbbb
out
pop
test
inc
inc
xchg
jno
iret
push
xchg
adc
sbb
xchg
les
sbb
aam
jmp
scas
in
sub
xor
mov
dec
jecxz
shrb
sbb
push
insl
sbb
add
fldenv
push
je
mov
insl
or
jecxz
adc
roll
sub
fmul
stos
sbb
mov
mov
fidivs
test
stc
test
or
pop
push
push
lods
das
mov
inc
mov
rolb
mov
cmpsl
popa
pop
imul
add
sarl
nop
in
cmovp
sbb
stc
popf
lcall
out
cmp
xor
mov
pushf
cwtl
mov
lea
orb
fcmovnb
test
cli
movsl
mov
stc
inc
loopne
sbb
fisubrs
out
push
or
inc
shlb
test
or
xor
dec
push
loope
repnz
stos
push
and
dec
mov
cld
sti
sti
pusha
xlat
xchg
sbb
in
and
fsubr
je
inc
sub
mov
jge
jge
and
push
hlt
sbb
loopne
sti
fisttps
sub
and
push
bound
hlt
sahf
movsl
adc
rcl
and
ret
cmp
add
pop
push
and
mov
rcl
cmp
mov
idivl
decb
push
hlt
mov
sbb
shlb
mov
jbe
stc
add
xchg
js
jno
ss
lea
dec
jp
aaa
out
hlt
repnz
je
xchg
pop
and
jnp
mov
lods
lea
sub
add
push
fidivrl
and
xchg
jle
and
sti
or
pusha
cmc
adc
mov
lcall
or
stos
std
cmp
cs
cmp
sub
dec
and
push
jecxz
gs
adc
mov
fs
push
inc
outsl
insl
in
loope
mov
icebp
rcrl
inc
ss
les
sub
jl
movsb
push
outsb
cltd
xchg
mov
fists
jl
mov
xchg
sbb
push
incb
scas
jne
in
int3
fcmovne
outsl
dec
shrb
outsb
scas
addr16
fwait
popa
mov
sbb
xchg
or
dec
mov
adc
call
je
popf
fcompl
xchg
dec
out
orl
xor
xchg
lret
cwtl
insb
scas
xchg
sti
mov
insl
cmp
add
cmp
je
mov
nop
sbb
lret
push
movsb
cmp
adcb
or
mov
adc
ret
and
int
sub
sti
cmp
clc
imul
dec
jb
les
cmp
outsl
mov
int3
pop
mov
cmp
bound
les
adc
mov
xchg
xor
xchg
mov
sub
push
and
push
cmpsb
push
mov
lret
imul
sub
ficomps
push
insl
lahf
in
bound
je
out
lea
push
std
jbe
cld
mov
adc
notb
lea
pop
mov
dec
popa
jno
popa
loop
in
jge
push
push
or
sub
scas
xchg
mov
xchg
cmpsl
xchg
add
pop
jge
cmpsl
and
call
jbe
adc
sbb
notl
add
lahf
jae
xchg
stos
mov
in
fldl
in
pop
mov
fs
rorl
jne
enter
xor
ror
leave
pop
ret
ljmp
mov
mov
fisubl
aad
xchg
mov
in
test
repnz
cmp
sbb
in
pop
mov
ss
repnz
sub
lret
add
ffreep
xor
sbb
jae
addb
lahf
dec
inc
or
sbb
mov
mov
aad
and
mov
fld
repnz
popl
fwait
xchg
icebp
xchg
aas
shr
sub
cltd
jle
mov
mov
jl
jnp
outsl
aaa
repnz
nop
sbb
scas
cmovo
icebp
jecxz
cmp
cwtl
add
rcrb
mov
jmp
xchg
push
mov
ja
pop
mov
addr16
icebp
or
test
outsb
add
sbb
sarb
in
mov
inc
fucomp
or
fwait
push
pop
ss
fdivl
nop
pop
sub
scas
jge
push
jmp
cltd
ja
mov
int
dec
adc
rcr
jg
inc
push
mov
add
and
out
in
dec
call
outsl
in
inc
push
sarb
xor
outsl
mov
xor
pusha
jne
jb
mov
aad
cmp
mov
stos
stos
xor
push
inc
leave
icebp
pop
xor
daa
ret
push
fisttpll
cwtl
mov
adcb
es
test
dec
loop
gs
imulb
in
cld
push
ret
movsb
xchg
push
into
jp
xchg
stc
ja
call
and
xor
ljmp
jo
inc
jbe
lds
in
mov
popa
mov
pushf
outsb
dec
mov
sbb
imul
sbb
aas
out
mov
leave
jg
lahf
jo
cli
rcrb
repnz
call
in
fisubrs
inc
adc
in
aam
pop
cmp
iret
clc
push
fidivrs
pushf
sub
sbb
mov
leave
daa
negb
xor
jle
push
xchg
pop
xor
cwtl
int3
sbb
sbb
xchg
into
xor
scas
add
mov
mov
and
add
das
push
sbb
aad
push
fdivrl
cli
mov
xor
ds
pop
cli
mov
into
mov
inc
in
push
sub
fbstp
imul
sub
scas
lcall
jae
push
insb
add
cmp
xchg
je
xchg
jl
jl
repnz
cmp
clc
push
sub
xchg
scas
idivl
push
addr16
sbb
out
jne
pop
mov
hlt
pop
popa
jmp
add
push
pushf
fcoml
dec
adc
xor
repnz
lods
mov
dec
adc
lods
out
outsl
lahf
insb
mov
lods
into
push
pop
jle
inc
mov
sub
psubusw
imul
xor
xchg
pop
ss
loope
push
push
out
adc
xchg
ficoml
push
mov
ljmp
dec
mov
leave
pusha
jno
dec
mov
mov
add
mov
je
adc
stos
sub
cltd
dec
push
mov
mov
aam
and
loopne
or
inc
mov
pop
jp
mov
clc
dec
dec
dec
xor
imul
sbb
lahf
daa
lret
jp
push
repnz
mov
xor
adc
loopne
xor
in
fmuls
mov
pop
rorl
xchg
outsb
cli
lahf
test
out
push
mov
stos
mov
dec
mov
push
in
push
sbb
icebp
push
add
insb
adc
clc
fdivr
pusha
repz
sbb
aam
inc
mov
xchg
pop
mov
jnp
xor
cmp
xchg
in
sub
push
lret
sub
fildll
inc
dec
fistpl
push
lods
mov
bound
or
popa
repnz
std
inc
rcll
push
xchg
rorl
pop
negb
cmc
in
and
dec
loop
loop
adc
in
mov
lods
adcb
repz
add
scas
sti
nop
ret
test
iret
in
out
xor
xor
test
mov
in
or
xchg
mov
xchg
mov
mov
cmp
data16
jb
dec
les
xchg
stos
mov
call
pop
leave
push
jnp
mov
jno
arpl
xchg
jb
addb
shr
jnp
movsl
outsl
add
pop
jnp
lret
cmp
xor
popf
enter
in
push
out
cwtl
ja
and
sbb
ja
fcmovu
push
jno
add
sti
popa
je
sbb
mov
push
push
push
cmp
mov
jns
mov
jnp
mov
dec
aam
sbb
sti
mov
xor
pop
pop
mov
mov
and
ja
stos
test
dec
test
push
push
andl
and
or
lcall
sbb
or
and
out
addr16
jle
sbbl
sub
and
addr16
sbb
jl
xchg
sbb
mov
xchg
adc
mov
aam
fimuls
adc
inc
lret
adc
insb
jmp
repnz
sbb
je
adc
adc
and
and
loop
pop
mov
jno
mov
xchg
negl
xchg
dec
in
inc
ljmp
push
xor
loope
sub
jge
into
shll
decl
push
cmpsb
mov
mov
idivl
bound
aas
mov
test
or
mov
mov
ljmp
bound
ja
pop
into
cmp
loop
cmp
aaa
pop
fneni(8087
imul
and
mov
aad
repz
loopne
cmpsb
or
jne
loop
movsl
push
mov
adc
pop
mov
jp
mov
out
dec
out
jge
mov
sbb
addr16
repnz
mov
loope
jo
cmp
cmp
fidivl
jge
jbe
loope
push
cmp
dec
mov
cmpsl
add
inc
shll
cs
add
or
mov
xchg
push
sbb
or
xchg
in
lahf
shlb
psllq
inc
enter
xchg
xor
popf
push
lahf
cmp
pusha
add
sub
pop
ret
rolb
mov
mov
mov
ds
xor
lds
cltd
cwtl
fnsave
push
sbb
orb
lods
aas
test
add
xchg
ficoms
clc
pushf
je
addb
rcrb
int3
sbb
push
sbb
aam
mov
jle
ljmp
movsb
cltd
sbb
mov
push
nop
test
inc
pop
push
mov
mov
sub
sbb
sar
push
mov
xchg
or
iret
push
pop
jle
lock
inc
scas
cltd
inc
xchg
ds
mov
sub
call
xchg
je
xchg
mov
adc
mov
mov
and
push
rcrb
jns
mov
out
mov
add
ret
jbe
pop
cs
mov
sub
xchg
xor
mov
shll
out
loop
fmuls
test
inc
mov
int3
int3
test
fcomps
outsb
push
std
iret
push
pop
add
jno
mov
fsub
fmuls
sahf
adcl
sub
mov
xor
test
sub
push
fs
outsl
insl
rclb
cmp
lret
and
hlt
inc
aad
jmp
lcall
test
add
or
pushf
mov
int
sbb
jg
xor
callw
jb
xor
mov
sbb
cmp
aam
mov
aad
sbb
push
data16
enter
pop
jb
repz
cmpsb
ljmp
into
jns
mov
inc
into
jg
in
pop
add
xor
sub
inc
pop
es
into
pushf
adc
fldt
stos
pop
mov
add
xor
cmp
xchg
insl
jp
je
nop
jle
pop
adc
push
mov
push
outsb
push
pop
pop
movl
dec
int
adc
mov
or
mov
ret
mov
mov
ljmp
out
dec
jb
xor
mov
adc
xchg
pop
jle
inc
add
inc
lcall
xchg
loop
fnsave
fs
adc
cmpsl
pop
xchg
sahf
call
push
cmp
aad
inc
sub
fwait
icebp
mov
dec
in
hlt
xchg
mov
jns
cwtl
sbb
test
or
scas
cld
adc
dec
test
xlat
in
iret
mov
jnp
pusha
ret
push
jno
and
xor
cld
out
mov
push
nop
mov
dec
mov
jmp
mov
ret
shl
mul
out
pop
mov
enter
stos
xchg
or
jo
cmpsb
sub
sbb
in
mov
xor
adc
cmpsb
mov
add
shr
cmp
push
mov
shll
xor
pop
jbe
dec
scas
mov
adc
repnz
sub
negl
mov
stos
int3
int
pop
xchg
push
xchg
outsb
push
inc
fs
and
fnstcw
xchg
pop
push
popa
cmp
stos
or
mov
pop
and
fsubrl
xor
int
stos
orl
pop
xor
dec
loopne
repz
fiadds
mov
ja
push
lahf
pop
xchg
xor
jl
dec
aam
push
out
shlb
andb
fldenv
cmp
outsl
mov
cmp
inc
inc
cwtl
dec
popa
sub
mov
addl
cmp
lods
mov
popf
mov
repz
xor
rolb
cmp
js
pop
mov
mov
adc
sub
icebp
jne
inc
push
and
test
stos
enter
lds
js
sbb
xchg
dec
or
lcall
loopne
adcl
adc
fiaddl
jb
out
in
sub
push
stos
mov
xor
pop
roll
imull
cmpsb
mov
jmp
inc
ss
push
cs
addr16
mov
insb
ret
jle
stos
in
mov
mov
fistpl
push
xchg
push
int
mov
and
push
lahf
sbb
dec
lock
gs
pop
shlb
loopne
lods
and
into
mov
dec
or
icebp
paddusb
ret
push
in
xor
mov
xor
das
inc
fistpl
outsb
jnp
sti
mov
fisttpll
sbb
divl
xchg
dec
mov
push
out
ret
test
add
xor
mov
xchg
pop
xor
xor
xor
es
push
mov
int
rorl
andb
xor
fnstenv
inc
imul
dec
xchg
imul
clc
xor
pop
pop
or
pop
sbb
icebp
pop
mov
mov
jbe
ss
cmpsl
dec
sbb
add
mov
jae
fsubrs
sub
pop
push
nop
sbb
push
iret
jle
loop
add
les
repnz
xchg
lds
lea
jp
add
fcoml
adc
pushl
shl
lret
xor
xchg
xor
cltd
out
cli
aam
add
pop
bnd
push
inc
les
ror
mov
lret
nop
mov
push
sbb
and
shll
popa
loop
mov
mov
jmp
mov
add
int3
out
cmc
imul
and
insl
xlat
in
fldl2e
push
sbbb
cmp
hlt
pop
adc
dec
push
dec
pop
inc
jg
bnd
lods
movsl
sub
jo
xchg
jnp
xchg
pop
pop
add
jb
adc
test
js
lcall
xlat
cmpsb
jg
out
icebp
movsb
fmuls
pop
rcrl
xchg
xchg
jp
test
cwtl
into
mov
xor
pop
ja
scas
sbb
frstor
mov
pop
dec
and
rorb
aam
dec
jmp
sbb
xor
cltd
mov
insb
mov
xor
outsl
out
and
icebp
xor
xor
fs
push
jl
sbb
rolb
movsl
mov
out
fs
das
ficoml
sbb
jmp
scas
push
lods
into
push
ljmp
jmp
mov
pop
in
repz
insb
add
inc
aam
mov
jle
mov
les
add
add
sub
scas
pop
mov
loop
ret
arpl
shll
cwtl
sub
movsl
sbb
mov
push
hlt
out
push
sub
xchg
sub
or
into
or
cmpsl
and
sbb
scas
mov
push
shll
dec
sarb
loop
add
adc
cmp
lahf
sub
add
mov
mov
iret
loopne
pop
sub
jnp
inc
dec
lods
daa
stc
sbb
xchg
jo
mov
leave
push
cmpsl
mov
sub
jg
push
mov
xchg
iret
push
xor
adc
and
mov
clc
test
lret
sub
rcrl
mov
aam
or
adc
arpl
push
jle
sbbb
shr
mov
inc
fisubl
mov
jp
and
and
add
mov
adc
fdiv
test
scas
mov
cmp
xchg
push
sbb
gs
push
inc
mov
sahf
test
pop
les
push
leave
dec
inc
clc
out
jnp
xor
jno
sar
pop
enter
loopne
adc
mov
xchg
add
lret
repnz
lcall
push
cmp
jmp
push
push
xor
push
scas
gs
sbb
push
xor
into
pushf
stc
movsb
fildll
adc
negl
shrl
sbb
pop
aaa
addb
hlt
je
es
fsubrl
inc
lock
fistpll
stc
ljmp
cmp
push
mov
std
xchg
mov
lret
shll
fwait
pop
pop
mov
mov
dec
mov
sbb
xor
jno
adc
mov
repz
pop
hlt
popf
fdivl
mov
fcomp
mov
in
xor
in
ss
js
lahf
cltd
sar
mov
dec
sub
dec
fcomps
ljmp
ret
dec
in
data16
dec
xor
push
test
xchg
mov
scas
loopne
data16
cltd
aam
jg
push
dec
mov
pop
or
xor
sbb
xor
dec
je
gs
adc
rorb
cmp
fsubrs
inc
mov
aaa
loope
and
dec
sub
addr16
mov
dec
rorb
out
outsl
xlat
loope
sbb
push
and
cmp
xlat
xor
adc
jge
sahf
leave
pop
sbb
mov
leave
adc
xchg
xchg
dec
and
mov
cmpsl
xchg
adc
mov
jge
mov
lods
test
pop
push
xchg
leave
fisubl
mov
or
in
fisttpl
in
xor
push
and
popf
push
pop
jbe
decl
xor
sub
add
jb
jl
sahf
adc
jl
dec
mov
std
outsl
mov
mov
pop
push
mov
sub
daa
mov
sub
jbe
mov
sbb
insl
aam
inc
cmp
sub
push
es
mov
test
xor
dec
rcrl
int3
insb
mov
fs
adc
nop
movsb
aaa
jg
icebp
hlt
or
out
jle
clc
sbb
dec
pop
dec
inc
pop
out
icebp
pusha
sbb
sbb
sub
sbb
mov
hlt
leave
mov
or
out
jmp
xchg
push
ret
mov
in
mov
xor
pop
xchg
mov
mov
shlb
ret
ds
popf
push
mov
push
and
loope
das
sbb
dec
dec
and
xor
imul
movsb
add
xor
jbe
xchg
les
out
xor
add
xchg
pop
enter
push
fsubrl
and
pop
ljmp
inc
push
sub
lret
push
fcompl
aaa
or
sub
sub
outsl
push
notb
mov
adc
aam
stc
pop
mov
dec
fwait
adc
out
cmp
sub
mov
sub
push
mov
adc
dec
sub
ret
push
add
mov
xor
jae
inc
pop
sub
imul
or
cmp
mov
cmpsb
xchg
push
out
push
add
jb
add
inc
cld
mov
fldcw
push
stos
add
loopne
jo
frstor
mov
jno
ss
xchg
stos
test
insb
cld
sub
fsts
out
daa
pop
sbb
imul
jns
push
mov
jg
cmp
rorb
out
mov
insb
xchg
insl
popf
lret
scas
lret
call
fnstsw
enter
jo
jne
push
andl
pop
mov
in
nop
jns
loopne
jp
repz
xchg
xchg
in
mov
and
lods
stos
es
jl
cmpsl
in
xor
mov
test
repz
mov
mov
aam
xchg
mov
stos
daa
dec
scas
jns
mulb
cmp
sub
push
xchg
clc
jle
cmc
xlat
jg
pop
mov
xor
jae
push
roll
pushf
dec
cmpsb
push
mov
and
adc
xor
aam
imul
push
div
imul
sbb
or
sbb
adc
testl
mov
or
jo
les
scas
sbb
cmp
pop
add
es
iret
xchg
es
ret
out
icebp
divl
xor
mov
cmpsb
push
and
pop
xchg
dec
movsl
test
mull
cmp
or
popa
fsubrp
mov
test
lods
ficomps
inc
and
fisubs
sbb
ljmp
mov
loope
inc
popl
pop
mov
insb
daa
mov
clc
sbb
mov
mov
jge
mov
mov
adc
pop
sahf
into
ljmp
mov
jae
xchg
aam
jmp
pop
xchg
cmp
pop
lock
ds
outsb
sbb
pop
add
adc
scas
aaa
test
int3
or
js
or
mov
popa
add
mov
popa
jns
lret
or
mov
lock
subl
sbbb
shl
and
aas
daa
shll
jns
xchg
fiadds
sub
cld
das
popa
imul
scas
fistpll
ror
jbe
cmpsl
inc
mov
imul
push
clc
and
cmp
push
fmuls
jno
push
loopne
mov
add
cmp
push
add
push
xchg
daa
aad
repnz
lret
push
inc
xor
jp
popf
cmp
jbe
aas
push
adc
add
sbb
ljmp
jle
fildl
fsubl
pop
jae
in
sub
fdivs
sbb
inc
lea
fisubrl
add
ror
es
or
jnp
in
sti
push
lock
inc
or
das
cmp
aad
shl
jp
mov
sub
call
sbb
pop
or
adc
aad
rcrl
lods
mov
push
sub
mov
in
mov
mov
xor
dec
cltd
in
movsl
sbb
pop
in
mov
jp
gs
cmp
insl
add
mov
and
lock
cs
sahf
shl
sbbb
addl
sbb
jle
or
jb
xor
inc
xchg
loopne
int
push
mov
xor
fsub
fistl
mov
dec
ret
ja
iret
adc
sub
adc
inc
xlat
testl
and
jnp
andl
loope
outsb
add
jmp
ret
pop
adc
mov
jae
lods
stos
pop
imul
mov
and
pop
arpl
fmull
and
push
inc
mov
pop
add
enter
in
sbb
add
pop
jg
fisubl
dec
xchg
push
mov
inc
dec
aam
fwait
cld
jno
repz
repnz
mov
lods
out
jg
fsubs
or
sbb
js
in
f2xm1
cmp
leave
pop
rcrl
lods
insl
push
xor
cmp
jg
inc
lahf
sahf
xchg
lret
cmp
js
jb
repnz
aaa
mov
cmpb
loope
jb
in
shlb
sub
and
jg
cli
mov
mov
pop
mov
cld
push
test
mov
push
mov
vpsllq
and
sub
and
orl
das
push
or
adc
fs
arpl
insl
and
mov
inc
sahf
scas
pop
std
lret
mov
jp
mov
xchg
in
jnp
dec
loopne
add
inc
dec
sbb
mov
lods
lret
outsl
nop
and
xchg
mov
call
pop
pushf
leave
or
fisttpll
fiadds
fildll
mov
adcl
mov
mov
push
clc
push
sbb
clc
fsubs
pop
out
in
lret
ds
cmc
jo
divb
pop
mov
adc
pop
cmp
repz
stos
push
xor
ret
lock
mov
mov
adcb
mov
mov
fsts
push
fists
push
lahf
pop
repnz
int
sub
insb
shr
ljmp
sub
sbb
mov
xchg
xchg
or
add
pop
jbe
add
and
popa
mov
flds
xchg
lds
ds
scas
into
das
lcall
leave
bound
dec
sbb
xor
hlt
pushf
xchg
and
xchg
mov
sti
es
test
cmp
pop
fidivl
fimull
sbb
and
lods
cwtl
jno
jle
inc
ret
pop
inc
cli
incb
adc
cmp
mov
add
push
jmp
nop
mov
push
fldl2e
pop
push
lea
or
jg
add
adc
lds
bound
fisttps
jbe
cld
add
insl
push
out
leave
push
mov
sbb
fwait
movsb
lock
add
addr16
adc
aam
popf
out
nop
dec
sbb
xlat
dec
push
gs
adc
push
xchg
jnp
pusha
in
int3
mov
xchg
jns
sub
sarb
jno
fisubrl
xor
fs
imul
xchg
pop
xor
add
mov
test
xchg
jne
xlat
mov
mov
sbb
push
jp
push
inc
mov
mov
adc
imull
mov
int
stos
push
cmp
sbb
loope
mov
xor
mov
cmc
mov
cld
mov
and
enter
out
jmp
ficoms
fwait
ss
int3
pop
push
insl
inc
adc
add
stc
sahf
jp
mov
sti
pushf
popf
sbb
ficompl
inc
push
outsb
mov
mov
out
cs
xchg
or
inc
sbb
imul
in
or
ja
and
pop
mov
and
add
in
and
xchg
test
testb
dec
fwait
inc
cld
xchg
dec
enter
clc
inc
stos
mov
mov
adc
or
inc
xor
shrl
jg
fimuls
fsubr
in
cmc
push
xchg
and
xchg
xor
nop
aad
pop
subb
pop
dec
inc
jbe
xchg
sbb
mov
pop
bound
push
add
inc
mov
ds
jmp
pop
ror
je
mov
in
dec
adc
push
les
push
lods
js
pop
jns
add
andl
mov
push
push
out
dec
leave
scas
test
in
xor
or
int3
mov
pop
sar
push
and
mov
xchg
push
stc
icebp
push
mov
aam
fwait
sbb
mov
jnp
sub
icebp
pop
cmp
lcall
inc
xor
cmp
mov
mov
repnz
xlat
dec
test
les
ds
adc
sub
loope
ds
sub
int3
adcl
es
popf
cmp
jns
mov
cmp
test
xchg
imul
orb
es
xor
cs
lcall
fldenv
pop
cs
negl
sub
cmpsl
and
or
outsl
mov
mov
mov
xchg
dec
sti
sahf
xchg
jg
popa
int
into
xor
pushl
mov
test
mov
sub
or
sbb
inc
pusha
lds
sbb
pop
mov
andb
imul
insl
inc
xor
in
cmpsb
sub
test
inc
sub
sbb
test
loop
ds
icebp
pop
pop
push
sub
pop
dec
fwait
xor
jo
in
sbb
pop
mov
rol
aas
push
mov
push
xchg
cmp
stos
jmp
lods
add
fcoms
pop
mov
xor
push
sbb
lret
leave
or
dec
push
push
aam
mov
inc
inc
std
jmp
inc
ret
test
push
cmpsl
or
cs
daa
mov
inc
adc
xchg
sbb
popa
imul
scas
xchg
fimuls
ds
mov
dec
mov
loope
xlat
std
cmp
xchg
adc
movsb
or
dec
dec
sub
cmp
sbb
xor
cmp
inc
outsl
fst
aam
fcompl
dec
pop
sub
jo
inc
sbb
es
scas
adc
stos
iret
mov
xor
xor
fst
inc
add
push
mov
or
loopne
adc
lcall
and
pop
movsb
inc
push
insb
sub
clc
stos
pop
or
out
inc
jno
dec
cmp
out
xchg
jns
repz
push
lcall
jnp
dec
mov
les
leave
cltd
dec
xor
jp
mov
rclb
pop
stos
frstor
mov
xchg
pop
inc
pop
dec
loope
pop
pop
dec
or
cmpsb
inc
cmp
mov
push
mov
or
or
pop
shlb
pop
jo
sahf
and
mov
dec
or
ret
es
sahf
adc
sarl
popl
shl
lods
push
cmpsb
loope
jnp
mov
xor
adc
xchg
daa
cli
rcrb
xor
sub
or
adc
out
xchg
cmp
gs
test
push
stos
int
mov
sub
addb
scas
pop
sahf
adcl
sbb
movsb
scas
xor
mov
lods
pop
fcompl
dec
rorb
fwait
insl
lret
fistpl
rolb
lods
rol
fstps
adcb
daa
repz
fimuls
fisubl
jne
cmp
jmp
dec
enter
xor
inc
sti
adc
mov
jne
xchg
pop
push
aaa
or
faddl
push
outsb
popa
aad
pusha
or
sbb
arpl
xor
imul
push
sbb
xchg
addl
pusha
pop
repnz
mov
rcr
fsubrl
jl
sbb
inc
or
sbb
xor
les
adc
orl
mov
xchg
or
aaa
aaa
xchg
ret
loop
lahf
icebp
les
cmp
jecxz
arpl
nop
mov
pop
jno
add
addl
std
mov
mov
sbb
dec
mov
fnstcw
lret
stc
adc
mov
sub
fsubs
cltd
sahf
xchg
jbe
ficompl
into
call
and
enter
lock
jp
out
mov
enter
push
scas
popf
cs
clc
mov
aad
jmp
imul
mov
sub
lcall
mov
shl
fnstcw
push
leave
adc
sbb
movsb
mov
icebp
sti
jne
jnp
out
loope
push
ljmp
jmp
ljmp
mov
scas
ror
push
xor
add
mov
add
scas
mov
pop
push
nop
push
adc
add
xchg
mov
aad
xor
push
sub
push
add
js
fdivrs
xor
cmpsl
leave
cwtl
pop
add
je
cmp
pop
mov
fsts
setae
sbb
popf
dec
mov
sar
push
jno
fsubrs
push
cltd
xor
xor
mov
inc
inc
sbb
and
shll
lods
out
pushf
push
pop
movsb
cmp
ljmp
mov
mov
rolb
and
call
dec
aad
repz
mov
mov
jne
fsts
push
test
or
mov
mov
clc
jg
jle
dec
xchg
je
cmc
hlt
mov
jecxz
pop
xchg
bound
or
lahf
dec
in
pop
test
rcll
or
fidivs
leave
clc
fistl
adc
xadd
sub
cmp
je
adc
inc
cmpl
popf
mov
jnp
aaa
mov
sahf
pop
scas
cmp
bound
pop
orl
in
or
and
stos
xor
xor
xlat
jmp
insb
stc
call
and
mov
shlb
inc
loopne
daa
mov
inc
pop
and
xor
or
rol
int3
mov
xchg
test
sbb
jo
fnsave
lret
jmp
inc
pop
sbb
rclb
xchg
mov
icebp
ret
xchg
dec
loope
imul
mov
xchg
gs
dec
ret
pop
rolb
fidivl
pop
jns
mov
xchg
inc
imul
push
and
push
ficoms
lea
bound
mov
into
xchg
popa
lock
call
inc
lret
lcall
add
cmc
pop
arpl
or
adc
and
xor
push
fadd
jnp
fistpl
sbb
add
pop
push
pop
mov
int
adc
adcl
fidivs
and
jle
lods
stos
xchg
push
scas
cmc
fnsave
cltd
xorl
push
xchg
pop
sub
scas
sub
lea
aam
aam
pop
push
addb
xchg
pop
mov
daa
mov
xchg
das
lahf
push
outsb
jge
xchg
push
add
xchg
add
mov
xor
dec
adc
xor
pop
pop
cmpsb
inc
fs
inc
inc
arpl
mov
nop
cmp
call
mov
push
popf
or
xchg
xchg
in
cmp
out
jmp
mov
mov
mov
pop
imul
xchg
mov
pop
cmpsl
imul
jns
stos
test
and
cwtl
cs
adc
stos
fildll
lds
push
or
inc
int3
or
std
inc
push
sbb
xor
fisubrl
add
ljmp
xor
and
lods
sub
jb
leave
lahf
push
cmp
mov
push
and
xor
enter
iret
adc
xlat
fisubs
or
sub
push
mov
jne
das
popa
push
push
insl
jmp
jle
jg
sub
sbb
mov
cmp
or
sub
fwait
subl
push
pop
pop
adcb
nop
jbe
pop
fmuls
lea
jo
ljmp
xchg
dec
int
or
push
push
dec
fldcw
dec
jae
leave
and
std
or
and
ret
cmpsl
rcrb
adc
jge
mov
mov
cmp
sar
jge
push
je
jle
sbb
mov
mov
cmp
sbb
lret
mov
xchg
stc
rclb
inc
imul
in
ja
icebp
andl
lds
stos
repnz
ljmp
push
mov
xlat
add
sub
shll
rcrl
lock
sbb
int
push
cmp
int3
cmpsb
or
mov
xlat
sbb
push
pop
mov
popf
cmp
arpl
add
movsb
mov
cld
or
pusha
sub
jae
insb
pop
or
lea
fcomip
pop
jg
ret
or
outsb
cltd
jns
pop
loopne
insb
xchg
mov
cmp
dec
mov
andl
pop
inc
add
jg
cmp
jmp
sub
xchg
jle
cmp
cmp
adc
mov
out
call
mov
outsl
es
pop
and
jle
ss
or
dec
push
out
xchg
pushf
push
sti
push
cli
cld
adc
xchg
lret
outsl
std
popa
xchg
fwait
and
fwait
outsl
inc
push
inc
pop
or
outsb
jne
cmp
dec
sbb
daa
pushf
or
imul
push
repz
and
bound
adc
jbe
insb
in
std
inc
fildll
fists
jge
adc
cli
out
int
out
or
xor
xchg
outsb
inc
insl
fsts
mov
jp
adc
test
int
imul
insb
xlat
lds
pop
in
repnz
add
movsl
jp
xchg
push
fbld
sbb
mov
sar
mov
pusha
jg
in
movsl
sbb
xchg
stc
scas
fs
jmp
mov
paddw
loopne
xor
notb
or
rorb
inc
das
add
or
adc
pop
mov
xchg
xor
test
fabs
add
notl
and
mov
mov
mov
insb
add
shll
sbb
fwait
pushf
mov
loop
ret
adc
popa
int
repnz
sbb
je
ds
pop
push
cmp
or
and
xchg
push
cmpsl
mov
xor
dec
bound
mov
and
push
sbb
or
xor
jp
sub
sti
sub
pop
pop
dec
mov
loope
popf
jns
inc
shl
lcall
scas
add
jge
and
aad
xchg
dec
aaa
mov
xor
add
ret
cmp
or
iret
pop
push
mov
adc
rcr
lods
mov
jl
dec
daa
dec
fiaddl
jg
jb
sbb
mov
insl
out
psrld
xor
mov
shrl
out
mov
pop
and
jbe
cmp
subl
xchg
mov
mov
pop
and
cmp
mov
pop
stos
sub
into
and
pushf
mov
arpl
mov
sub
add
ret
inc
out
pop
ret
stos
clc
clc
ds
leave
mov
pusha
scas
ret
lret
xchg
xor
jl
out
xchg
shrb
in
push
xchg
aad
dec
fwait
aaa
ds
in
mov
andl
aaa
fsubs
lea
mov
xchg
sarl
pop
sub
push
test
popf
xchg
or
out
test
push
cmpsl
divl
xchg
xchg
mov
xor
xchg
shlb
mov
pop
rorb
mov
call
test
sti
pusha
pusha
mov
repz
jg
in
imul
stos
sub
mov
lds
dec
jo
push
jmp
jb
xchg
out
adcl
lret
out
scas
lock
outsb
push
ret
mov
clc
sbb
fldl
stc
mov
test
dec
hlt
in
dec
aas
fisttpll
lds
mov
or
fs
pop
mov
mov
and
shrl
dec
sub
cmp
xchg
sub
repz
pusha
dec
push
loop
ljmp
aad
push
sub
xchg
adc
add
cmc
jno
add
pop
std
imul
int3
add
stos
icebp
sub
pop
sub
clc
pop
xlat
ret
test
shrb
orl
cmc
sbb
movsb
aas
aas
ret
std
sti
fnsave
test
notl
sbb
ss
mov
stc
xor
addb
sbb
sbb
or
xchg
mov
stc
cli
sbb
cmpsb
and
scas
fnstenv
adcb
inc
and
and
sti
movsb
inc
mov
cli
xorb
jb
lock
push
cmp
mov
shlb
xchg
pop
cltd
dec
xor
cmp
xchg
gs
xchg
sbb
lahf
push
daa
pop
mov
idivl
mov
test
xor
out
test
std
cs
add
lods
inc
ljmp
xchg
pop
leave
icebp
mov
add
jmp
pop
data16
addr16
mov
cs
stc
or
push
mov
add
outsl
outsl
je
mov
ds
iret
dec
or
mov
or
push
repnz
mov
inc
loopne
or
dec
pop
loope
rol
adc
inc
dec
pop
cmc
mov
rcrb
sub
repz
iret
mov
adc
dec
jge
xlat
leave
add
jbe
xor
daa
pop
dec
std
cld
ficoml
mov
fcoms
lds
cli
in
or
fmull
xchg
xor
xchg
cmpsb
dec
cmp
cmp
dec
fdivrp
movsl
jns
push
adc
pushf
dec
int
cmc
adc
xor
rolb
add
sbb
fadd
jmp
and
cld
repz
aam
pop
sub
or
outsl
lods
rcrb
xchg
fcompl
and
sti
xchg
call
mov
addr16
int3
test
xor
in
jae
xor
dec
scas
push
dec
sbb
xchg
int
add
and
jno
sahf
incb
iret
pop
movsb
or
outsb
ret
mov
adc
in
pop
jno
mov
scas
push
sub
add
jo
sub
add
fwait
sahf
cmp
mov
ds
add
and
mov
add
aam
test
cmpsl
jg
xor
outsl
les
punpckhwd
fwait
pop
push
mov
pop
sarl
neg
mov
add
xchg
sbb
sbb
jecxz
lods
ret
decb
cli
gs
lcall
call
mov
xchg
lret
add
call
sti
xor
sahf
je
mov
sbb
lret
jo
or
in
and
mov
imul
mov
inc
outsb
mull
pusha
jl
xchg
xchg
iret
mov
sbb
sbb
xor
mov
mov
test
fnstenv
sub
inc
pop
inc
or
popa
lods
cmp
or
pop
jnp
inc
mov
imul
cmp
jae
mov
xor
out
pop
jno
xchg
mov
hlt
jno
call
out
xchg
jp
dec
adc
xor
test
enter
fdivl
jge
sbb
aas
shrl
andl
xchg
sub
sbb
fldt
fcmove
pop
in
or
pop
into
sti
add
jp
adc
cmp
sti
lods
imul
sar
mull
pushf
inc
out
arpl
xchg
jmp
jmp
pop
push
or
rcrl
movb
fs
push
fs
jne
cmpsl
lock
cmp
dec
push
inc
fadds
inc
lret
sub
sub
fisttps
shrl
inc
cmp
fidivrl
fcmovb
xlat
jne
ret
mov
push
jle
lahf
jne
popa
lods
aas
out
dec
test
aad
pop
orl
or
decb
movsb
pop
mov
lods
aam
inc
out
add
jns
push
sahf
les
xchg
pop
cld
int3
fcmovne
incb
add
in
xlat
mov
inc
outsl
xchg
popa
dec
pop
and
sbb
pop
jg
dec
popa
push
cmp
stos
pop
in
mov
mov
lods
xorl
or
adc
popf
mov
dec
and
daa
fistpll
pop
mov
les
dec
jl
frstor
jne
push
aam
cltd
inc
mov
sbb
popa
iret
dec
or
rorl
fistl
ss
js
jg
xor
sub
adcl
mov
xor
pop
ja
cld
lahf
push
int3
sub
mov
int
imull
emms
call
in
pop
ds
push
and
mov
test
xor
sub
xlat
pop
add
out
cmc
dec
and
mov
or
inc
loope
test
cmp
mov
mov
pop
cmp
sub
dec
push
dec
iret
and
imul
mov
cwtl
popf
jb
sub
mov
pop
cli
jle
xchg
xchg
push
into
popf
sub
cld
dec
xor
lret
fcoml
test
adc
std
jne
inc
pop
sub
mov
xlat
mov
or
mov
push
cli
ret
or
out
lods
sbb
in
mov
in
ljmp
repnz
jmp
jbe
cmp
repnz
testl
cmpb
lahf
aad
lcall
cmc
push
loopne
es
adc
sbb
cmc
cmpsb
dec
cli
cmp
js
cmp
xor
testb
sub
lods
push
in
lret
lret
push
addr16
fisttps
sti
add
mov
inc
mov
adc
adc
in
xchg
call
aad
mov
push
fistps
pop
sbb
call
loopne
push
ljmp
cmp
jb
xchg
sbb
sarl
mov
push
add
add
xchg
adc
inc
mov
sub
dec
outsl
sub
test
xor
mov
jg
mov
xchg
clc
inc
adc
dec
data16
fbstp
in
pop
jno
mov
adc
pushf
mov
pushf
mov
xor
orl
and
out
ss
adc
lcall
mov
mov
xchg
lcall
xchg
loop
stos
dec
ss
xor
sarl
pop
xchg
jg
and
pop
or
push
sahf
jo
adc
and
mov
popa
aaa
out
xchg
stos
mov
cs
ljmp
mov
cmp
test
mov
and
sarb
cmp
lea
fwait
adc
daa
pop
call
imul
or
inc
fidivrl
int3
out
cli
inc
sub
xchg
jns
pop
mov
roll
inc
ja
mov
xchg
xchg
jl
pop
xor
push
rcrb
adcl
dec
into
rcrb
inc
push
sub
test
pop
adc
jno
aad
dec
mov
fisttps
or
nop
ficomps
mov
push
sahf
sbb
mov
add
stc
xchg
arpl
pop
arpl
outsl
and
inc
adc
dec
push
popa
int3
lock
pop
clc
cmp
jge
ret
or
push
std
movsb
or
or
ss
xchg
inc
std
jge
inc
movsl
rcrl
pushf
imul
mov
xchg
add
mov
ret
inc
mov
test
test
xor
jns
test
ja
xchg
popf
stos
dec
fnstenv
stc
dec
xorl
sub
dec
sbb
punpckhbw
test
adc
roll
lret
jmp
out
sub
in
xchg
pop
pop
push
xor
leave
bound
cmp
jge
xorl
addl
mov
jg
shlb
push
nop
std
lods
cmc
add
xchg
aam
in
mov
sarl
push
sub
jo
push
adc
out
std
arpl
or
and
int
jbe
arpl
add
sbb
push
std
fmul
lock
repz
ss
pop
es
push
testl
inc
mov
ljmp
inc
jns
adc
inc
xor
clc
jb
pop
jo
push
jl
aad
xor
aam
jmp
movsb
scas
lret
loope
loope
mov
in
push
push
fcom
jl
mov
add
xor
ret
fidivl
mov
xchg
sti
xlat
add
cmp
fmulp
cmpsb
xor
push
cmp
jne
xchg
jmp
out
lock
je
xchg
lock
dec
test
imul
aad
jnp
out
push
sbb
jne,pt
push
pop
aas
jae
shl
push
outsb
pop
mov
sbb
in
imul
out
andb
ljmp
cmp
adcl
push
dec
cltd
decl
jmp
or
mov
or
sti
or
fstl
scas
or
or
sub
or
mov
add
ror
cld
and
pop
sbb
cmp
xor
sti
mov
mov
popf
dec
das
fldcw
cmp
andl
loop
rcrb
ljmp
or
inc
mov
ret
movsb
sub
nop
pop
push
mov
pop
lock
test
ret
sub
xchg
and
test
int
into
adc
mov
mov
jecxz
pop
daa
mov
loop
sub
test
iret
loopne
dec
xor
aam
add
mov
jb
or
mov
adc
or
cmp
jns
fsubrl
std
pop
inc
cmpsb
mov
push
int3
mov
or
mov
popa
dec
out
dec
out
and
test
or
enter
xor
cwtl
lcall
xor
jae
push
inc
mov
loopne
shrl
xchg
jl
aam
xor
sub
dec
pop
mov
xor
adc
sub
lret
pop
add
pusha
outsl
in
call
movsb
cmp
jg
hlt
fdivl
shll
test
stos
lcall
jg
jp
jno
insl
test
and
loop
out
iret
push
push
mov
sbb
insl
push
rolb
xchg
sub
jno
in
lcall
inc
adc
fcomps
in
test
out
mov
shll
jns
sub
jmp
dec
sbb
sti
leave
rcl
leave
pop
push
ds
or
movsl
dec
pop
cltd
loope
movsb
insb
in
lahf
lcall
repz
repz
add
and
pop
inc
inc
addl
xchg
jno
mov
or
mov
test
inc
fstpl
data16
das
sbb
loopne
push
enter
push
mov
lret
add
push
dec
xor
mov
push
in
fcoms
cltd
cmp
sbbl
lea
shrl
jno
xor
stc
xor
les
mov
imul
jae
test
pop
mov
sbb
lret
call
insl
dec
int
cs
sti
idivb
or
mov
jg
sub
in
push
in
fisttps
int
jmp
ja
pop
fbld
stos
lods
mov
xchg
into
lahf
fiaddl
clc
ja
jp
cmp
insl
jge
mov
xchg
adc
les
test
inc
jne
adc
mov
mov
mov
add
lahf
xor
sbb
jp
sub
xchg
push
jns
scas
pop
sbb
in
loop
sbb
outsl
mov
aad
jp
push
pop
and
jnp
mov
jge
cld
pusha
push
cmp
repnz
push
dec
imul
lret
inc
test
mov
cwtl
out
lock
mov
jo
push
test
inc
push
or
stos
dec
jge
scas
repnz
aad
pop
jbe
inc
insl
or
mov
and
gs
and
inc
push
dec
push
mov
mov
out
pop
fldcw
ja
inc
pusha
push
ds
mov
jbe
arpl
and
pusha
movsb
cmc
inc
jmp
hlt
and
in
dec
daa
mov
fists
jbe
cld
aaa
fistl
repz
ficoms
pusha
int
std
xor
sbb
cmp
sbb
daa
jo
inc
hlt
and
push
out
dec
add
xor
or
sub
test
push
arpl
inc
adc
dec
outsb
add
push
scas
inc
ss
mov
out
cs
cmpsb
imul
jp
sub
lcall
xchg
shrb
jp
into
int
call
pusha
shl
adc
pop
cmp
pushf
lahf
mov
xchg
mov
dec
cmp
aaa
inc
shll
movsl
xlat
fdivs
sbb
pop
rorl
xlat
lret
int
fisttpl
nop
or
push
push
mov
dec
push
push
stos
mov
mov
sbb
ljmp
xchg
push
stc
test
cmp
iret
outsl
xor
out
jo
ret
out
mov
mov
or
add
push
popa
sbb
or
mov
pop
push
push
jae
mov
mov
imul
das
je
mov
or
ja
out
scas
loop
js
push
popa
and
jae
cmpsl
jbe
loope
pop
mov
stos
rclb
sbb
sub
outsl
mov
cs
mov
cli
and
aaa
inc
scas
icebp
push
insb
xor
leave
mov
xor
in
in
push
sub
jae
adc
mov
addl
scas
jns
jae
int
out
cmpsl
sub
inc
shrl
or
xor
lea
pushf
xor
movsl
lods
and
push
sub
test
push
xor
loopne
test
and
pusha
lea
mov
sub
cmc
mov
popa
mov
out
push
ret
pop
or
mov
out
popa
and
ret
sbb
inc
aam
leave
and
mov
mov
pop
in
imul
ret
inc
cmc
sub
xchg
lret
das
fs
mov
addr16
in
dec
pop
jmp
cmp
mov
mov
sti
and
cli
push
test
xchg
mov
ret
stos
addl
and
jae
push
adc
mov
outsl
loop
stos
aam
in
in
mov
dec
scas
repz
ljmp
sub
fs
xchg
or
jnp
hlt
hlt
pusha
mov
push
mov
push
lea
jo
mov
ss
and
in
fidivl
arpl
cmp
lock
xor
les
add
out
ss
ja
mov
insl
movsl
mov
ja
int3
xor
jmpw
movsl
arpl
or
rcll
aaa
scas
sbb
pop
call
mov
mov
orb
cmp
bound
push
test
das
dec
aad
push
mov
rclb
test
adc
or
pop
mov
call
mov
cmpsb
into
cmpsb
iret
add
mov
inc
roll
in
sub
pusha
xor
xchg
add
sti
insl
sti
ficompl
std
dec
xor
sub
dec
jae
scas
cwtl
hlt
ret
test
outsb
jg
nop
addr16
sub
mov
rolb
insb
jae
mov
inc
test
jnp
sbb
cwtl
rcrb
aad
ds
mov
jg
mov
sbb
pop
jno
inc
jbe
jns
cmp
mov
pop
sbb
xchg
inc
mov
adc
jg
cmp
push
and
rcrb
lahf
xchg
mov
clc
mov
icebp
push
pop
adc
stos
out
and
mov
in
add
mov
lret
imul
mulb
int
sbb
mov
pop
lret
out
xchg
cltd
pop
cmp
adc
cmpsw
jecxz
je
add
cmp
xorl
and
add
sbb
int
sbb
sbb
add
negb
roll
lock
fwait
pop
cmp
into
sub
mov
pop
inc
roll
enter
das
mov
cs
out
push
sub
ret
adc
mov
loope
popa
out
pop
pop
push
sbb
add
mov
hlt
jo
dec
or
daa
test
imul
out
jl
sbb
cmp
int3
out
or
add
shlb
push
pushl
inc
pop
dec
mov
popa
mov
jno
sub
shrb
out
xchg
jne
or
or
cmpsl
inc
xchg
add
jns
pushl
nop
pop
call
fists
lods
push
xchg
es
xchg
les
push
or
js
dec
add
ret
adc
test
int
daa
adc
mov
test
in
sub
sub
push
aaa
sbb
mov
push
adc
mov
xchg
add
push
in
ret
idiv
mov
jmp
or
leave
sub
out
jmp
stc
fwait
or
mov
lahf
lahf
sahf
xor
sub
jp
push
cmc
push
xor
int3
cmp
loop
or
xor
or
mov
mov
xchg
sub
cmpsl
or
mov
dec
pop
xchg
jne
adc
stc
inc
mov
sub
daa
ss
mov
cwtl
pushf
das
sub
cmpsb
sub
or
mov
xor
outsb
pop
jno
pop
stc
cmp
jo
push
lahf
data16
push
mov
lret
fsubl
mov
bound
push
mov
push
sbb
and
sbb
pop
outsl
adc
pop
imul
sub
dec
mov
xchg
inc
and
call
xor
pop
test
mov
ljmp
jb
sub
add
es
mov
inc
rcll
leave
das
jae
and
pop
mov
lock
inc
cmp
fsubs
lods
xchg
xor
loop
and
xor
jno
mov
pop
xchg
movb
repnz
sbb
aas
sbb
stc
aaa
or
lcall
in
inc
pusha
je
out
xor
inc
dec
sbb
mov
jae
sub
shll
and
test
xchg
mov
push
add
ds
pop
jno
adc
mov
mov
mov
push
jle
push
imul
push
sub
mov
dec
push
dec
cld
out
cmp
add
xchg
adc
sub
xor
rcrb
push
bound
mov
icebp
mov
outsb
insl
sub
sbb
mov
xchg
push
add
push
mov
cmp
pop
pop
mov
pop
and
mov
xor
lahf
lock
outsb
aad
pop
insl
ja
cmc
or
ds
adc
cmp
mov
mov
ret
or
jb
out
lods
rorl
mov
fs
sub
xchg
push
inc
in
icebp
repnz
mov
loop
inc
fsubp
mov
stc
lods
lahf
leave
xchg
out
and
insl
sub
aaa
movsl
call
ds
inc
jge
mov
subl
testb
lcall
movsb
adc
arpl
pop
ja
xor
sub
iret
mov
dec
call
push
out
and
movsl
mov
mov
inc
repz
mov
out
cmpb
jno
or
xor
mov
mov
sbb
mov
sub
daa
push
cs
out
lock
nop
cmp
sbb
xchg
stos
scas
lods
xchg
loopne
mov
adc
lcall
add
pop
loopne
hlt
scas
add
cmc
or
push
and
sbb
dec
pusha
call
inc
pop
inc
js
aaa
rcrl
and
jge
ret
imul
dec
out
pop
mov
push
popf
insb
daa
push
dec
pop
mov
xor
cmpsb
es
and
rcpps
inc
sub
lds
xor
xchg
dec
mov
pmulhw
push
dec
cli
jns
stc
lahf
push
jne
mov
and
sbb
adc
mov
xor
adc
icebp
jnp
push
test
ret
das
ds
nop
sub
call
es
cs
out
subl
push
sbb
xor
cmpsl
insb
je
lea
insb
inc
rclb
loop
sahf
mov
enter
push
jnp
test
fs
lods
sub
cmpsl
cmp
cmpsb
in
xor
pop
ss
pop
push
stos
pop
into
stc
mov
adc
cld
sahf
insl
not
inc
lret
dec
ret
fidivrl
inc
mov
inc
mov
lods
jmp
sbb
rolb
pop
js
pop
shrl
inc
lea
and
hlt
test
in
sbb
iret
mov
xlat
sahf
inc
js
cmp
scas
int
jno
int3
cmpb
cwtl
mov
jecxz
mov
cmp
xlat
adc
jmp
not
lds
pop
cmp
pusha
outsb
pop
xlat
into
pop
cs
mov
pusha
mov
movsl
arpl
inc
scas
inc
jb
out
cli
rcr
lea
push
fidivrs
pop
adc
sbb
lods
add
roll
and
mov
push
mov
gs
jno
cmc
mov
ret
ret
popa
pop
mov
pushf
in
mov
rcll
daa
out
mov
sub
pop
js
test
sbb
stc
mov
mov
repnz
push
mov
and
sub
lcall
addr16
pop
jnp
mov
repz
loop
lods
inc
push
mov
imul
je
jmp
fdivl
sysret
ret
sarb
insl
pushf
ret
sahf
mov
add
or
sbb
pop
pop
rcll
lods
xchg
push
fdivs
add
repz
sub
ret
insb
out
mov
jmp
pop
icebp
jle
pushf
xchg
xchg
ja
stos
cli
push
pop
mov
pop
ljmp
push
cli
or
cmp
std
movsl
call
adc
or
pop
cld
xor
lock
leave
push
jle
stc
add
and
push
xchg
imul
push
sar
lods
push
mov
movsl
or
out
ss
pop
jb
inc
jl
mov
mov
mov
ret
ljmp
aaa
pop
jbe
cmpsb
xor
pop
dec
mov
test
ss
mov
jp
jl
push
push
xchg
out
push
jge
pushf
popa
or
test
shll
jo
xor
rolb
mov
aam
push
mov
pop
mov
std
in
pop
sbb
dec
out
shlb
mov
push
pop
in
outsb
movsl
push
dec
out
push
or
sti
aaa
and
jmp
dec
fwait
sub
dec
dec
fnstenv
test
nop
popa
or
xor
or
sub
call
fmul
stos
call
outsl
sub
fsubl
mov
les
sahf
fsub
or
push
mov
clc
xchg
mov
mov
mov
inc
es
cltd
nop
sarb
cs
ljmp
aad
push
cmp
mov
fnstsw
rcl
dec
popa
orl
push
inc
add
fcompp
lods
dec
push
cmp
xchg
mov
pop
xchg
jle
and
loope
and
cltd
je
cmpsb
in
sub
scas
and
jp
lahf
jbe
push
lds
cmp
in
add
cmc
sub
insl
jmp
or
stos
sub
les
scas
cld
dec
add
mov
daa
dec
inc
or
jbe
fldt
xor
sbb
cltd
pop
xchg
or
and
sub
bound
lcall
lods
cmp
dec
cmc
add
mov
inc
mov
imul
aas
adc
push
orl
negb
cmpsb
jmp
or
out
loope
mov
cld
cmp
sbb
dec
sub
dec
lods
xor
dec
xchg
mov
add
nop
xchg
mov
cmp
mov
call
enter
outsb
test
mov
add
sbb
jg
es
mov
dec
dec
outsb
enter
js
aam
subl
ljmp
into
xor
bound
xchg
cmp
push
sti
jae
cmpsl
inc
hlt
cmp
nop
pop
outsl
dec
mov
in
or
sub
dec
shrl
mov
jg
adc
idivb
mov
loop
push
popf
xor
pop
push
cwtl
je
mov
ljmp
sti
outsb
xchg
push
jl
xchg
out
inc
jmp
inc
sbb
inc
push
sbb
lds
dec
mov
andb
inc
sbb
ss
mull
ret
jmp
inc
xchg
cmp
sub
xor
xchg
insb
mov
adc
fsubrs
out
int3
xor
mov
loope
into
xchg
out
mov
xchg
mov
or
mov
test
xor
mov
ret
xor
jp
dec
push
outsl
in
in
dec
jg
enter
cmpl
cmp
lods
fcoml
es
std
push
mov
in
lahf
inc
push
sub
jb
cmp
fiadds
leave
push
add
jne
push
and
xor
aaa
pusha
and
push
sbb
push
or
hlt
sbb
cmp
insl
add
push
xor
std
sub
pop
push
pop
imul
adc
ljmp
loop
jae
popf
dec
jae
sahf
mov
push
fldcw
pop
dec
fidivs
out
adc
arpl
or
xor
ja
or
or
cmp
adcb
enter
dec
adc
incl
js
iret
sbb
fldl
test
xor
add
scas
jns,pt
icebp
addr16
inc
lea
fcompl
insb
pushf
hlt
repnz
add
add
push
pop
mov
add
xchg
lahf
aas
popa
rorb
mov
mov
pop
or
sbb
pop
movsl
hlt
cmp
mov
call
fistpll
jne,pn
or
fldl
jo
out
mov
mov
fistpll
lahf
int
xor
mov
roll
sub
sbb
clc
adc
ret
dec
xchg
jmp
push
icebp
xchg
decl
mov
pusha
cmp
ja
dec
pusha
aad
sbb
sub
mov
mov
pop
std
out
inc
gs
or
xchg
mov
xlat
sub
mov
mov
outsb
push
pushf
add
xchg
outsb
fnsave
xor
jecxz
sbb
into
dec
dec
adc
int3
mov
ret
jmp
pop
inc
jno
test
scas
push
shll
call
ret
into
scas
and
jmp
outsl
add
xchg
subl
out
mov
inc
jg
pop
cmp
mov
cmpsl
mov
push
pop
xchg
add
or
mov
mov
sti
cmp
adc
lret
insl
xorb
sti
inc
mov
in
cmpsb
and
pop
shlb
dec
xor
sbb
inc
mov
in
inc
fs
popf
push
pop
dec
mov
popf
adcb
insb
mov
aaa
gs
addr16
aam
or
dec
cmp
imul
stc
sbb
outsl
shll
fldenv
mov
jl
push
leave
test
loopne
cli
pop
cmp
test
fs
mov
nop
aad
ss
xchg
jbe
jae
or
js
dec
mov
cmc
mov
insb
cmc
jno
push
mov
mov
mov
jae
loopne
jne
in
cltd
dec
xchg
icebp
lods
jae
xor
add
test
icebp
mov
out
xor
fwait
add
fmulp
xchg
int
adc
jnp
mov
push
dec
push
scas
out
enter
movsl
out
das
jno
xor
sbb
mov
aas
loop
test
jnp
mov
adc
out
push
sub
jne
mov
jno
subb
push
cmp
xor
insl
lods
inc
mov
xor
shll
cld
and
out
jmp
mov
xchg
adc
push
dec
dec
push
mov
ficomps
in
stos
push
inc
in
stos
cmp
and
mov
push
lea
mov
lea
xchg
xchg
mov
loopne
pop
fiadds
mov
push
sbb
push
sar
insl
gs
inc
ret
xlat
mov
jno
cmp
les
add
push
jne
and
adc
pop
xchg
xor
pop
mov
sbb
xchg
push
imul
dec
out
jmp
jno
jp
in
pop
sub
mov
test
push
mov
push
xchg
jo
mov
into
addl
jae
inc
out
std
mov
sbb
scas
ds
loope
xchg
out
lcall
sahf
in
sub
jmp
and
pushf
out
xlat
lods
add
xchg
into
daa
push
in
andl
scas
push
dec
shll
hlt
adc
in
loope
mov
cmp
lret
or
cmp
lcall
xchg
jb
iret
rcrb
sub
lret
mov
add
xchg
and
and
je
lods
fcomps
push
mov
pusha
ret
jnp
inc
bound
or
fcompl
xchg
push
insl
xor
pop
ret
imul
lock
dec
jmp
cli
fiaddl
xor
cmpsl
jne
mov
stos
loopne
fcoms
cmp
push
cmp
jno
push
dec
ljmp
popa
negl
cmpsl
scas
dec
cmp
test
and
mov
mov
cmp
jns
fsincos
mov
jnp
mov
mov
enter
xchg
ret
push
pop
lods
in
out
jg
sbb
xchg
insl
mov
fldt
sarl
sti
push
lcall
popa
out
inc
inc
lahf
incl
and
xchg
sbb
popf
mov
stos
mov
xchg
push
mov
cmpsb
mov
adc
test
adc
add
xorb
pop
iret
push
pop
sub
lcall
cmc
scas
cwtl
in
mov
sbb
lock
xchg
test
je
sbb
cmpl
xchg
out
in
cmp
xor
or
lock
in
cmp
push
jns
cli
dec
mov
sub
roll
into
push
or
mov
popa
and
inc
sub
iret
mov
push
aam
int3
xchg
jno
lods
jbe
in
pop
insl
add
adc
xchg
dec
ja
ds
sti
mov
int
dec
and
jmp
sub
jmp
mov
push
push
xchg
jae
lock
mov
outsb
mov
lret
stc
loopne
sbb
pushf
fnstcw
fs
cmp
mov
xor
jmp
mov
mov
mov
and
cmp
and
jmp
ja
sub
clc
loopne
imul
mov
sub
adc
clc
push
sti
pushl
xchg
pop
rcrl
pushf
in
xchg
jl
pop
mov
fidivl
mov
ds
cmpsb
and
loop
jns
aad
fwait
push
dec
xchg
cmp
pop
xor
or
sub
inc
hlt
bound
outsb
rorl
jo
inc
pop
pusha
imul
pop
mov
in
cmpsb
jbe
addl
insb
and
adc
and
cmc
jp
popf
xchg
push
neg
stos
add
push
xchg
movsb
inc
sub
idivl
hlt
cs
outsl
pop
lods
negb
ljmp
jecxz
stos
aad
cwtl
cmp
fnstenv
mov
shl
addr16
lret
push
loop
mov
fnsave
es
xor
xor
or
mov
dec
scas
sub
jb
and
sub
pop
outsl
pop
and
cltd
sbb
add
push
mov
int3
lcall
add
and
das
xlat
int
mov
in
sbb
lret
in
stos
es
repnz
sbb
xor
inc
or
xchg
repz
test
mov
mov
movsb
ss
pop
sbb
and
pop
pop
shlb
cmpsb
mov
push
pop
test
cmp
psrad
inc
call
scas
dec
mov
outsb
sbb
sbb
mov
mov
iret
sbb
mov
cltd
repz
mov
loopne
jg
mov
jne
stos
addr16
outsb
fs
push
daa
shrl
test
mov
mov
jecxz
adcb
cs
dec
aaa
jno
cmpb
pop
out
adc
fmull
out
mov
jl
stos
push
sub
lods
jle
ficompl
cltd
inc
pop
and
push
jno
xchg
mov
mov
pop
ret
fldcw
fimuls
cmp
enter
fbld
rcrb
dec
xchg
mov
add
mov
ss
fwait
push
sbb
cmp
repz
inc
adc
pop
jno
push
repz
xchg
add
shll
or
fisubrs
xor
cmc
sti
test
add
and
test
add
xchg
xchg
dec
lcall
adc
cmc
call
ret
orl
and
cmp
aas
std
mov
and
adc
les
pop
pop
nop
mov
divb
jg
and
jmp
mov
faddl
in
jae
cmp
data16
xor
sarl
popf
mov
xchg
mov
dec
movsb
xchg
or
je
ret
std
sbb
push
repnz
push
or
negb
and
rolb
mov
lds
push
inc
mov
inc
add
dec
cmc
mov
lock
xchg
or
push
lret
mov
es
cmp
jmp
dec
or
in
mov
aas
iret
push
stc
fidivl
sub
es
pop
xchg
xor
or
pop
lods
push
mov
and
and
es
jmp
mov
xor
dec
test
imulb
stos
mov
addr16
push
pop
cli
xchg
mov
std
mov
ffree
shlb
mov
xchg
jo
fidivrl
aaa
mov
cwtl
bound
jno,pt
add
cld
push
mov
adc
adc
dec
mov
mov
ljmp
aam
inc
addr16
mov
cwtl
popf
push
sbb
out
jle
ss
xchg
in
test
adc
xchg
scas
rclb
pop
mov
popf
pop
clc
cmpb
popa
sti
sub
xor
out
fdiv
mov
inc
xlat
xor
rorl
jno
cmpsl
jae
lea
push
fldl
adc
mov
sbb
dec
imull
test
jl
loope
daa
jae
or
jl
push
mov
sub
xor
fcomps
push
aas
scas
jmp
pop
stos
push
shll
loopne
aas
mov
add
push
cwtl
ss
jge
xchg
into
mov
pop
fildll
insl
aad
ljmp
mov
add
mov
stos
jo
subl
fwait
das
mov
lea
lods
call
inc
scas
loop
jecxz
lock
cltd
test
mov
sbb
xlat
jo
push
hlt
dec
ret
sub
cmp
inc
jnp
or
cld
mov
sbb
cmp
jmp
popa
popa
popa
dec
popa
mov
inc
cmp
mov
mov
fnstcw
push
rclb
dec
xchg
pop
dec
and
mov
xor
xor
dec
les
inc
or
scas
daa
mov
loope
call
mov
in
mov
out
cmp
mov
lock
xor
int
fld
add
xchg
fistps
pusha
mov
cwtl
sub
add
mov
xchg
xchg
push
js
mov
and
fnstenv
enter
adc
inc
fwait
cld
pop
cmp
icebp
add
push
psubsb
in
cld
sub
sub
adc
push
xchg
cmp
stos
sub
jecxz
jno
add
dec
int3
outsb
xchg
jmp
fnstenv
sarb
les
xchg
push
xor
sbb
aad
std
and
arpl
adc
js
dec
push
xor
mov
testb
orl
mov
mov
sbb
gs
mov
repz
mov
addr16
sub
add
aaa
lock
loopne
idivl
and
sbb
dec
mov
pop
out
sub
mov
fsubl
sub
in
xchg
fwait
dec
jle
cltd
cmp
ss
inc
adc
lcall
adc
mov
jne
inc
jb
mov
negb
incb
pop
mov
mov
les
test
inc
repnz
ss
frstor
fisttpl
and
dec
xor
ja
enter
in
xchg
or
out
push
xor
or
push
mov
jecxz
icebp
jmp
in
mov
dec
inc
mov
cmp
into
xchg
jmp
iret
int3
jl
testl
cmpsl
mov
lcall
scas
pop
call
int
xchg
jl
cmpsl
cmp
in
pop
xchg
jbe
sti
lds
loopne
mov
dec
pop
aam
add
leave
mov
testl
out
sbb
subb
cmp
mov
cmovnp
movsb
mov
and
fimull
adc
loopne
pop
outsb
push
sbb
adc
adc
cmp
inc
fwait
lock
loop
sarl
mov
inc
and
ficoml
daa
pop
imul
mov
push
dec
push
out
insb
lods
les
mov
mov
pop
dec
mov
lock
add
mov
mov
push
lret
mov
rorb
ja
stc
loope
or
xor
arpl
imul
rorb
sub
cmp
aas
lea
push
fisttpll
pop
and
cmpsb
lcall
and
or
pop
movsl
outsb
adc
inc
dec
pop
jle
push
pop
popa
pop
sub
mov
nop
arpl
ret
mov
inc
dec
pop
push
dec
sbb
cmpsb
cmp
sbbb
pop
scas
icebp
jae
mov
icebp
test
shlb
aas
cmp
cwtl
outsl
test
lret
outsl
das
jbe
stos
add
aas
mov
lcall
gs
str
adc
xchg
stc
cmc
fnstcw
sub
push
shlb
movsl
arpl
mov
mov
and
sbb
sarb
adc
fstpl
xchg
fcmovnb
sub
popa
and
fisttpll
cwtl
dec
xor
push
sbb
and
pushf
shll
mov
cli
jle
push
aam
cmp
sub
push
sbb
jae
in
sbb
dec
cmp
rorl
loopne
lds
or
pushf
loop
xchg
jae
lret
lods
ficomps
push
xor
fildll
loop
lods
adc
jne
dec
xchg
sub
mov
mov
inc
rolb
into
pop
in
lods
call
fbstp
adc
mov
sbb
push
jo
push
adc
sub
movsl
cmp
xchg
outsl
cwtl
jg
pop
lds
and
loope
imul
imul
jmp
jge
rol
imul
lods
aas
in
enter
xchg
clc
or
or
out
jnp
cld
arpl
cli
rorb
xchg
adc
insl
pop
ss
dec
enter
cli
arpl
outsl
and
rolb
pop
sub
dec
and
and
mov
or
bound
xchg
jo
shrb
cwtl
add
mov
push
sbb
cmp
pop
out
inc
leave
sub
push
cmpsb
stos
test
aas
adc
xlat
mov
call
cvtdq2ps
mov
ljmp
cmp
adc
sub
into
lock
mov
test
sbb
ret
neg
lods
add
les
cmpsb
inc
sbb
pop
and
das
jae
and
xchg
testb
push
test
rolb
rcrl
into
xor
jl
out
movsl
fsts
sahf
dec
jg
cmc
sbb
es
mov
mov
bound
xchg
dec
pushf
mov
inc
cli
xor
jg
scas
andl
xor
pop
call
testb
jo
repz
mov
test
dec
shlb
or
jne
fldt
push
repz
repz
jno
out
aas
xchg
push
jle
cmpsb
xchg
push
adcb
cs
dec
je
rolb
int3
jecxz
cwtl
inc
and
pop
push
cltd
xor
lock
jmp
xchg
das
mov
ljmp
test
loop
icebp
xor
jg
aaa
hlt
fcomps
jp
jbe
jmp
adc
push
xor
stos
stc
gs
ds
fldl
or
cmp
mov
jge
test
loop
ret
cmp
jmp
xchg
shlb
sub
adc
cmp
ljmp
xchg
add
shl
mov
repz
and
add
jb
push
bnd
lcall
xlat
mov
sub
test
jp
lods
lret
xor
xor
in
rcrb
xchg
popa
int3
and
inc
gs
pop
std
xor
sbb
xchg
add
jb
imul
inc
jno
or
add
rorl
mov
mov
lret
dec
test
and
lods
sbb
inc
stos
mov
ljmp
mov
inc
ljmp
icebp
xchg
call
int3
pushf
xchg
dec
mov
aam
mov
push
dec
subl
into
cmp
xor
add
cmp
inc
rcrl
mov
mov
int3
jns
jns
movsl
and
mov
loope
repz
sbb
out
jne
push
sahf
leave
stos
xchg
dec
cmp
into
mov
inc
sub
lahf
out
sub
ret
mov
mov
fldl
fdivl
and
mov
fstpl
enter
dec
call
fisubs
cld
inc
stos
push
cmp
xchg
xlat
lret
testl
add
aam
xchg
vfnmadd132pd
hlt
sete
rcrb
xchg
jbe
jnp
inc
mov
ja
out
mov
jge
popa
jnp
stc
push
jge
movsb
pop
test
fsubs
and
insb
es
dec
cmp
loop
cmp
and
jmp
jmp
negb
sbb
loopne
out
jnp
lret
dec
dec
mov
adc
jecxz
mov
popl
daa
and
jg
xchg
fsubrl
and
push
cmpsb
cmp
xchg
dec
sbb
stos
mov
xchg
dec
arpl
inc
push
mov
test
out
testl
rcrl
ja
xchg
sub
mov
push
iret
mov
gs
cs
loopne
jp
add
in
ss
js
jae
lds
int3
lret
sub
in
rcl
wrmsr
scas
aas
jle
sahf
mov
js
cmpsl
leave
inc
das
movsb
pop
mov
fs
push
aam
xor
ret
addr16
sbb
das
and
push
popa
pushf
subl
or
cmpsb
or
push
jb
mov
int
xchg
mov
dec
imulb
das
xchg
and
scas
cwtl
mov
pop
imul
pop
and
pop
out
dec
pop
xor
cmp
test
scas
adc
pusha
push
sarl
mov
xchg
stos
outsl
jl
repnz
cmp
lahf
fnsave
je
push
dec
cmp
adc
xchg
shlb
dec
fisubl
clc
dec
fiadds
add
sbb
cltd
sahf
in
jp
out
outsl
jge
pop
or
jge
mov
addr16
cmp
mov
loope
cmp
mov
inc
aam
push
out
sub
sahf
pop
aaa
sub
push
in
mov
aaa
cmp
mov
ss
scas
push
or
xor
cmp
sub
outsl
mov
es
clc
cmp
addr16
mov
mov
jmp
mov
xchg
pushf
out
mov
bound
cmp
and
mov
adc
xchg
xchg
push
and
jbe
sub
pop
xor
sti
xor
sbb
or
xor
cmp
lcall
jns
jbe
xor
push
ret
pop
ds
pusha
mov
ret
jp
in
or
decl
jp
lret
mov
push
mov
xor
pushw
pop
mov
fldl
jno
int3
clc
xchg
outsb
and
xor
and
sbb
lea
pop
into
ds
outsb
push
leave
jge
jl
andb
adc
cmp
sbb
and
mov
or
dec
pop
xchg
sti
jmp
push
mov
pusha
pushf
aam
sub
outsl
xchg
or
aam
pop
dec
pop
xchg
cmp
ret
mov
sbb
lods
loopne
sbb
sub
hlt
xor
out
jecxz
in
mov
cwtl
out
xchg
dec
xorl
mov
pop
fwait
rcr
mov
dec
adc
lret
xor
test
insl
inc
adc
iret
and
jno
push
lea
rcll
adc
fsts
dec
mov
stos
sbb
dec
popf
add
dec
or
rol
mov
mov
sub
xchg
std
repz
notl
bsr
jns
cmp
mov
dec
aad
out
inc
pushf
cmp
dec
jmp
hlt
lock
lods
in
popa
push
push
loop
dec
mov
mov
dec
push
xchg
mov
dec
aaa
jge
movsl
iret
sub
pop
sar
and
int3
push
dec
int
ret
push
cmp
stos
or
inc
and
mov
std
mov
repnz
insb
xorb
fwait
pop
js
mov
in
leave
testb
aam
int
mov
jb
dec
push
xchg
ljmp
ret
in
mov
nop
or
cmpl
scas
mov
addr16
and
dec
adc
arpl
xchg
and
xlat
aam
jb
cs
or
lock
out
jbe
lea
test
sbb
subb
push
cmp
or
mov
stos
cmp
fs
popf
sbb
and
in
arpl
outsl
loopne
sarl
xchg
sbb
mov
adc
repnz
inc
jno
shr
jge
xor
mov
add
dec
ljmp
aam
fildll
xlat
rcrl
add
leave
stos
cmp
repz
jl
test
mov
sti
icebp
cld
ja
sbb
sub
jl
lock
jmp
fs
in
push
inc
jns
mov
icebp
mov
sub
cmpsb
xchg
jo
fstpl
mov
int3
movsl
mov
cmpsl
sbb
dec
test
clc
xchg
nop
add
cmp
sbb
mov
aas
lock
fldcw
mov
sub
fsub
push
mov
mov
outsb
sbb
add
das
in
xchg
jae
in
pusha
inc
jbe
cmc
jns
in
out
pop
pop
jmp
dec
enter
or
sarb
into
pop
popa
pop
cmp
jb
jne
fisttpll
push
lea
or
mov
jae
pop
stc
xor
xor
and
and
xchg
mov
dec
outsl
jmp
rol
lret
cmp
sub
mov
inc
inc
xchg
xor
add
sahf
mov
jo,pn
add
loope
jmp
addr16
cmp
jmp
jp
fcompl
mov
jne
jno
cmp
dec
test
jne
jns
pop
cmp
fistpll
add
push
mov
repz
push
add
or
push
mov
sub
loopne
inc
outsl
inc
dec
iret
rolb
mov
movsb
sahf
test
and
xlat
aas
push
dec
pop
jge
mov
adc
mov
or
je
mov
add
and
jnp
jbe
enter
jg
pop
xor
jae
mov
jns
sti
jb
dec
scas
and
rorb
add
shll
out
or
sbb
sti
mov
sub
and
jge
imul
lret
or
fisttpl
adc
test
xchg
mov
pop
sbb
ret
dec
dec
aaa
xchg
dec
ja
mov
inc
ds
sahf
push
inc
ffreep
cmp
sti
push
xchg
push
adc
and
int3
and
fsubl
cmp
test
push
out
xor
testl
lods
pop
sti
outsb
cld
aas
insl
dec
push
xor
loopne
mov
sbb
sbb
cmp
mov
pushw
ficomps
loopne
fldcw
addb
ss
cwtl
jb
jge
inc
mov
in
sbb
adc
pop
sub
das
sarl
pop
push
jnp
cmp
out
dec
mov
clc
sbb
mov
dec
loop
data16
clc
dec
lea
in
movsb
sbb
xchg
cmc
jne
mov
cld
hlt
mov
inc
sub
and
repz
or
xchg
cltd
cmpb
cmpsb
popfw
xor
xor
sbb
mov
insl
mov
sahf
adc
bound
pusha
sbb
sbb
adc
std
pop
push
mulb
inc
push
pop
sub
and
mov
push
pop
xchg
mov
mov
jl
fs
jbe
out
jmp
push
adc
or
and
cmp
enter
out
scas
mov
xor
add
add
leave
popa
inc
jb
pusha
jg
push
sbb
inc
aaa
in
lcall
stos
loope
inc
ss
push
pop
mov
xchg
lds
pop
push
adc
lcall
scas
jp
cmpsl
push
movsl
xor
dec
rorb
js
jae
mov
das
xor
cmc
dec
pop
addr16
jnp
dec
adc
xchg
pushl
test
es
push
lock
cwtl
xchg
fsubrp
stos
clc
or
into
jecxz
lea
cmp
lahf
xchg
iret
aaa
push
ss
xchg
iret
xor
and
nop
pop
jne
or
push
fs
mov
cmp
xchg
sub
insb
outsl
pop
fnstsw
mov
or
jae
aad
cmp
push
scas
arpl
pop
pop
add
dec
dec
jle
mov
xor
jno
pop
push
xor
push
popf
stos
fwait
push
cmp
or
test
sub
fistl
jecxz
add
add
out
insl
lret
add
ss
jmp
dec
addr16
popf
popf
mov
jb
or
dec
lock
push
aad
xor
and
inc
mov
std
mov
sub
pop
cmpsl
int
mov
pop
insb
push
mov
push
cmp
and
jge
imul
in
ret
mov
dec
or
pop
xchg
dec
inc
ret
ss
jbe
mov
aam
mov
cmp
loope
dec
adc
and
cmp
add
test
icebp
dec
sbb
setle
sbb
dec
sbb
jge
fs
push
fidivl
imul
adcl
lock
jae
lahf
aam
in
cmp
test
cwtl
and
mov
xor
lods
shl
pop
xchg
jle
loop,pn
stos
cmp
pop
int3
sbb
cld
cmc
push
out
jmp
and
lea
ret
and
inc
push
push
inc
mov
stc
push
bound
into
mov
fldenv
in
inc
lds
push
xor
mov
jb
xchg
ljmp
loop
aad
jg
jae
adc
fs
mov
iret
dec
mov
xorl
cmpsl
mov
shl
adcl
push
lds
sbbb
loop
or
test
out
test
cmp
mov
pop
sbb
and
dec
mov
lock
outsl
sarl
loope
cs
bound
lcall
popf
add
rorl
inc
fbld
rcrb
out
fsubrl
nop
push
inc
test
out
mov
add
in
mov
stos
in
push
mov
dec
push
jg
scas
test
inc
push
and
add
xchg
ds
andl
pop
lock
je
mov
leave
and
push
pushf
dec
jmp
repnz
xchg
pop
adc
cmpb
mov
inc
or
mov
xor
cmp
cmp
ljmp
mov
pop
jmp
imul
jo
std
push
imul
cld
sti
jnp
fiaddl
lret
movsb
lods
xchg
andb
jg
out
mov
jns
aam
je
jno
mov
div
lcall
dec
mov
mov
cmpsb
cmpb
fsubl
jl
cmp
aaa
repz
ud0
xchg
xchg
xor
inc
subb
xchg
ret
push
xor
ja
faddl
fnsave
iret
les
fstpt
mov
mov
pop
mov
xchg
add
xor
dec
hlt
clc
fisttpll
lahf
fidivl
push
leave
mov
sbb
push
dec
dec
jne
dec
jnp
push
stc
sbb
ret
cli
ds
shlb
mov
mov
test
cltd
dec
cmp
stos
in
pop
gs
cmp
movsb
cmp
mov
jnp
and
fsubrl
out
push
ds
inc
xor
add
or
jmp
jecxz
stos
sub
pushf
pop
mov
out
xor
fiaddl
sti
adc
push
fmull
cmp
icebp
or
sarb
xchg
shrb
mov
jmp
mov
pop
jns
push
lds
adc
or
in
xor
pop
and
inc
mov
inc
push
adc
out
cld
jns
ss
inc
sbb
adc
push
adc
pop
push
scas
pusha
pop
cmp
repnz
out
jbe
sbb
inc
jne
jp
cmp
mov
add
mov
bound
fisttpll
cmp
pop
mov
in
push
stos
mov
ds
aad
inc
inc
in
and
pop
shrb
lahf
adc
jl
sub
jle
repnz
sbbb
add
jno
mov
leave
and
xchg
xor
mov
xor
int3
ja
xchg
xchg
test
lods
mov
hlt
mov
xchg
daa
repnz
push
mov
loop
lcall
push
jb
jmp
push
shll
out
lret
xlat
xchg
fnstenv
pop
pop
inc
outsb
xchg
push
add
mov
stos
jl
je
and
mov
shr
pop
push
xor
aam
mov
sub
movsb
push
dec
xchg
adc
ret
push
xor
test
jle
int3
movb
int
xor
into
xor
push
cmp
arpl
push
push
mov
popa
lock
jns
cs
mov
mov
ljmp
scas
iret
pop
jae
rorl
rclb
pop
and
push
imul
int3
cmp
inc
js
lcall
ds
dec
xor
xchg
mov
pusha
lods
in
loop
jo
outsb
test
repnz
adc
xor
rcll
aaa
and
adc
adc
stos
jecxz
movsl
mov
sub
outsb
or
cmp
cmpl
inc
xor
cld
jns
jge
xor
subl
dec
xor
test
jnp
cwtl
into
or
jecxz
xchg
xchg
dec
stc
mov
add
scas
addl
stos
loop
repz
gs
inc
fsubrl
hlt
pop
push
call
or
xchg
sub
mov
dec
or
cmp
mov
jns
cmp
add
movsl
cwtl
imul
out
xor
or
lret
xchg
mov
jbe
or
and
sub
inc
ljmp
xor
mov
mov
pop
lret
fidivrs
pop
pop
popf
dec
jb
mov
scas
push
jmp
movl
and
sbbb
shlb
adc
mov
jne
or
imul
repz
cmp
jp
iret
add
xor
mov
inc
jb
fnsave
ret
mov
push
adc
aam
xlat
mov
push
cmpsb
out
mov
pop
or
inc
ficomps
cmp
hlt
xor
out
bound
outsb
xchg
cmp
mov
mov
mov
xchg
xchg
out
sub
lock
out
sahf
rorl
dec
je
adc
dec
pop
jge
and
test
add
mov
and
jge
stos
fstps
mov
mov
or
push
fimull
adc
int3
daa
in
pop
or
adc
aas
cmc
test
push
divl
ret
fcmovnb
mov
inc
hlt
xor
jae
or
sub
ffreep
ja
addb
insb
sahf
and
or
mov
adc
sub
out
das
cld
xchg
adc
jns
insb
jo
cmp
or
les
sbbl
dec
aad
add
imul
push
adc
aaa
loopne
mov
fnop
lock
inc
mov
fnstenv
je
out
sbb
and
iret
fldenv
mov
test
shll
sub
pop
xlat
pop
pusha
pop
add
sub
mov
push
or
adc
stos
lods
push
add
xchg
xchg
adc
inc
xchg
aad
dec
push
sahf
in
pop
pushf
xor
push
outsb
push
sbb
outsb
movsl
push
xor
inc
leave
mov
scas
cli
dec
clc
mov
adc
mov
dec
xchg
dec
popa
ljmp
add
ret
push
loop
cmp
and
xchg
xchg
lea
std
jecxz
arpl
test
inc
pop
jae
les
adc
add
and
mov
jne
fsubl
xor
mov
push
mov
hlt
arpl
mov
or
cmp
stos
and
addr16
aaa
or
inc
dec
movsl
or
push
sbb
mov
fimuls
push
or
xor
cmpsb
testl
adc
popa
js
hlt
cmc
sbb
cld
fdivp
gs
cwtl
pop
sarb
imul
mov
cmp
add
lcall
sbb
stc
in
aam
cmc
fdiv
cmpsb
inc
lds
ds
outsl
sbb
adcb
xor
push
xor
mov
cltd
out
adc
out
mov
shll
pop
lock
cmp
dec
aam
lahf
lret
push
test
ljmp
inc
mov
lods
mov
sbb
mov
xor
mov
daa
and
xchg
fldcw
push
test
jne
mov
jl
enter
fildll
sbb
xchg
cmp
push
popf
in
fsubp
sbb
jmp
fwait
clc
pusha
push
popf
pop
imul
cmpsl
jns
xchg
cs
scas
jg
push
dec
insl
cmpsb
or
xchg
insb
dec
ljmp
sub
shlb
cmp
in
jmp
push
or
aas
in
push
xor
jne
daa
push
fucom
lods
rcll
push
cltd
sub
xchg
dec
rol
mov
adc
jge
dec
movsl
adc
pushf
xor
loop
sub
loop
fcomps
add
push
ljmp
outsl
aam
adc
aas
sbb
lods
jmp
push
xchg
movsb
sbbb
jge
jae
sbb
rcrb
or
push
or
orl
mov
add
pusha
mov
dec
fistps
push
sti
xor
fisubrl
jl
mov
mov
cli
mov
jmp
adc
fcoml
shlb
sub
jno
out
xor
push
adc
or
loope
sub
pop
push
out
aad
mov
scas
daa
fcoms
cmp
in
lock
sbb
std
mov
ss
fcomip
ljmp
sub
jbe
push
add
inc
outsb
xchg
jae
into
stos
push
cs
mov
mov
and
inc
push
xchg
adc
jne
jb
hlt
jg
out
adc
mov
scas
cmp
mov
add
cmpsl
add
jmp
mov
push
push
mov
mov
and
pop
mov
int
pop
pop
fiaddl
clc
mov
shr
xor
fstl
jle
push
mov
xchg
xchg
jle
in
xchg
mov
aas
out
jb
movsl
and
ficomps
dec
sub
mov
aas
cmp
out
mov
xchg
adc
imul
insl
jae
push
and
mov
icebp
pusha
mov
mov
iret
stc
dec
rolb
mov
or
xchg
push
stc
subl
mov
mov
xchg
push
push
call
push
cmp
jl
fidivrs
fistpll
ds
cmpsb
or
dec
in
mov
cmpsl
adc
lds
jne
outsb
pusha
mov
push
movsl
jno
data16
jae
aas
pop
sub
mov
cwtl
fistl
sub
ftst
cli
jecxz
sub
in
negb
das
iret
cmpsb
out
lds
pop
mov
outsl
rcl
ret
adc
hlt
test
dec
mov
sub
jp
pop
pop
push
adc
or
add
and
xchg
adc
loope
inc
fwait
movsl
xor
add
mov
dec
js,pn
add
rclb
mov
cld
int3
lods
push
hlt
sbb
mov
mov
and
lods
fcomps
xchg
push
sarb
cmp
loope
aad
lret
pop
shl
pushf
shll
or
mov
jmp
xchg
out
popf
fnsave
outsl
push
repnz
pop
pop
cmc
sarb
pop
insb
daa
std
lret
adc
out
sub
mov
scas
outsl
xchg
sub
test
xchg
arpl
push
cmp
mov
push
inc
fildll
loopne
push
or
push
rorl
inc
push
jbe
popa
pusha
sbb
and
jp
cmpsl
pmaddwd
ficompl
xor
cmpsl
mov
push
jae
and
mov
out
leave
dec
bound
cmpb
adc
cmp
scas
jae
push
rorl
icebp
dec
or
aas
nop
inc
and
fsubl
adc
inc
inc
inc
xor
pop
cmp
inc
mov
pop
push
ja
sub
xchg
pop
ss
psubd
jmp
mov
adc
rorl
fwait
sub
xor
xchg
adc
and
test
add
push
lahf
mov
mov
jge
push
hlt
xorl
mov
mov
jne
les
fldenv
cmc
into
movsl
mov
ds
xor
clc
js
out
mov
push
or
cli
mov
int3
pop
dec
and
out
push
ficoml
cld
test
aam
sbb
jns
sbb
lods
pop
xchg
sbb
sub
out
xor
pop
rclb
lret
insl
fisubs
inc
mov
pop
mov
jmp
or
mov
addb
leave
adc
lds
jle
jecxz
mov
add
push
and
mov
fstps
lods
stos
ljmp
popa
les
xchg
shlb
lret
ret
push
and
shll
dec
push
inc
popf
in
outsl
jno
imul
sub
stos
jns
xor
clc
cmp
addb
mov
nop
dec
adc
cld
dec
testb
aam
mov
xor
notl
pop
adc
inc
fwait
repnz
inc
jle
sbb
xchg
and
mov
test
shl
pop
push
in
insb
add
bound
nop
mov
dec
insl
push
and
mov
es
mov
xchg
xor
cld
adc
cmp
out
dec
cltd
pop
sti
lds
sahf
int
push
lds
lock
adc
testl
scas
mov
shr
mov
inc
pop
sub
xchg
hlt
xchg
push
daa
and
fwait
mov
ds
xlat
sbb
mov
pushf
adc
imul
pop
fs
xor
cmpl
mov
shrb
push
push
ret
sub
aam
inc
stos
aas
sbb
repz
imul
movsl
and
mov
mov
fistl
sub
push
mov
jo
mov
ficompl
or
sub
aaa
cmc
mov
insl
cs
mov
outsb
xchg
push
rsqrtps
cli
mov
imul
mov
push
cmp
arpl
dec
aas
rep
repz
imul
cmc
lds
xlat
imull
inc
jnp,pn
sbb
and
dec
jl
cmp
aaa
test
push
push
call
sbbb
push
inc
hlt
out
xchg
int3
sbb
ljmp
test
push
jmp
cltd
fistl
inc
dec
loopne
adc
ret
icebp
dec
mov
aam
bound
int3
popf
int
fmul
cltd
push
cmp
cs
and
stc
stc
fsubs
cld
stos
rorb
add
or
loopne
cmpsb
dec
jns
insl
in
shlb
mov
mov
pop
cli
sbb
mov
push
pop
cmpsb
divb
push
pop
repz
pop
pop
xchg
xchg
cwtl
mov
cmpsl
adc
add
cmpsl
pop
push
xor
jg
sbb
lret
std
dec
and
sub
adc
cmp
shlb
pop
cld
inc
scas
popa
imul
xor
call
scas
rcll
and
pop
aam
fisubs
push
pop
mov
insl
xchg
and
fistpl
xor
and
aaa
gs
push
adc
stos
int3
dec
ficoml
push
pop
adc
dec
adc
ret
and
sub
dec
cmc
push
aam
leave
fwait
ja
sub
push
xor
je
mov
xchg
je
add
stos
rolb
jbe
repz
or
mov
push
les
pop
dec
xchg
stc
addr16
call
mov
lods
fwait
mov
inc
or
and
mov
mov
jle
jg
pop
inc
xor
stos
xchg
fistps
jae
push
xor
jns
dec
and
outsl
sbb
push
stos
test
push
mov
mov
mov
add
aad
sbbl
ds
cltd
arpl
push
pop
jg
adc
fnstsw
cli
push
loop
xchg
sti
jecxz
inc
mov
push
sbb
repnz
adc
or
jne
sbb
shlb
fwait
icebp
cs
mov
cmp
pop
lret
fidivrs
xchg
lcall
mov
movsl
cwtl
inc
jp
cmp
ror
adc
fisttps
cmp
and
jne
stos
ljmp
cwtl
fsts
push
pusha
out
mov
cli
sub
stos
hlt
std
int
mov
scas
or
insb
sbb
inc
xor
jmp
cwtl
cmp
push
xchg
xchg
test
cld
unpckhps
mov
cmp
inc
fistpll
mov
mov
push
mov
jmp
lock
ja
pop
sbb
inc
das
mov
cmp
daa
jae
or
bound
fstps
test
clc
cs
inc
pusha
mov
shll
iret
jge
jo
call
xor
inc
inc
adc
pop
icebp
jbe
test
xor
and
add
popa
xorl
add
push
shll
adc
inc
insb
jge
push
mov
push
mov
stc
dec
jnp
mov
mov
ja
cmp
shrb
and
push
repnz
pop
paddd
shrl
xchg
aam
outsb
sub
fcoml
sbb
jnp
sbb
sbb
cltd
mov
add
push
inc
ss
xchg
mov
mov
pop
aad
add
or
ljmp
outsl
or
dec
jno
rcrl
inc
inc
loopne
mov
outsl
ljmp
cmp
sti
mov
lret
fistps
mov
fimull
stc
fwait
mov
xchg
lods
jnp
and
xchg
test
inc
shll
mov
aam
sub
xchg
stos
movsb
sahf
bound
mov
pop
and
push
test
mov
pushf
dec
xchg
sti
pop
call
sbb
outsb
sbb
fimull
xchg
push
adc
pop
orb
mov
fadds
xor
scas
ficomps
lea
jmp
push
loop
js
hlt
rclb
adc
mov
inc
lcall
jno
cs
inc
test
mov
mov
stos
insb
xlat
dec
inc
jae
mov
jne
lea
jns
insl
inc
stos
arpl
daa
lahf
rorb
push
mov
repnz
sub
xor
inc
inc
stos
cmp
push
xchg
mov
mov
adc
cltd
cmp
insb
test
fcomps
wrmsr
in
pop
icebp
jmp
repnz
dec
inc
lret
xor
cmp
and
fadds
xchg
sub
fisubrl
xor
fimull
lahf
cmp
sub
scas
inc
test
loop
mov
jmp
and
call
test
cltd
or
sbbl
push
ret
mov
jno
aam
je
shrb
int
pop
int3
into
rolb
pop
push
fistpll
inc
push
push
in
sub
cmp
mov
dec
jmp
xchg
mov
mov
jmp
pushl
cmp
dec
add
ljmp
add
jae
mov
pushf
sahf
sub
pop
or
pop
out
cmp
test
mov
iret
loope
mov
repnz
out
outsb
mov
xlat
idivb
inc
ja
int
loop
jg
jno
inc
jo
jl
lret
popf
jnp,pn
cmp
arpl
mov
aas
and
mov
repnz
push
or
push
movsl
dec
in
divl
xchg
jns
jle
jmp
push
mov
clc
or
push
dec
xor
xchg
addr16
mov
imul
inc
mov
mov
jle
sbb
cmp
cli
xchg
out
push
inc
out
pop
pop
sub
jmp
xchg
fidivs
cmc
aad
ljmp
xchg
xchg
lahf
ret
stos
sub
rorb
jmp
jg
out
fldenv
jecxz
inc
nop
push
and
add
mov
xor
sahf
sub
mov
and
pop
ljmp
lds
insb
cltd
dec
inc
add
cmp
outsb
or
lods
imul
push
jmp
sbb
mov
inc
insb
addr16
mov
in
push
adc
icebp
add
test
movsl
stos
pop
jmp
jnp
cmp
out
sbb
add
push
testb
cmpsl
test
addr16
cmp
xchg
imul
add
cmp
lods
adc
fistpl
fcomi
mov
popaw
xor
push
mov
js
mov
mov
inc
loopw
mov
jnp
adc
jno
movl
sbb
add
clc
push
xor
mov
or
push
loopne
hlt
push
fwait
mov
in
push
ret
cmp
in
xchg
mov
repnz
xorl
or
je
push
pop
mov
sti
cmpsb
je
sbb
or
loopew
mov
inc
mov
js
and
and
or
or
insb
adc
xlat
int3
loop
stc
sub
mov
inc
cmpsb
add
or
test
test
outsl
add
es
sbb
mov
popa
and
mov
sar
cmc
push
loop
scas
xor
cltd
push
test
jmp
rorb
aam
inc
fsubs
out
cmp
sbb
andb
jo
add
stos
lods
adc
lret
ret
mov
fnsave
mov
adc
movsl
lea
xorl
insb
cmp
xchg
xchg
lock
pop
pop
and
lea
loop
mov
push
xchg
testl
push
enter
insb
mov
adc
jecxz,pn
loope
sub
out
dec
fwait
cli
add
aam
jl
loope
imul
or
xchg
ror
pushf
xlat
jp
fidivs
jecxz
js
es
stos
leave
ret
fidivl
je
lds
ja
and
mov
cmp
test
pop
dec
mov
dec
es
cmpsb
xchg
or
jnp
das
mov
cmp
adc
jmp
xchg
fucomip
test
xor
or
adc
data16
cmp
out
scas
xchg
inc
mulb
popf
in
test
dec
jae
cmpsl
push
mov
cmp
cmp
repnz
test
js
lds
sub
mov
lahf
inc
in
jp
add
scas
fists
js
xchg
push
js
pop
in
fdivr
sti
inc
je
jnp
inc
icebp
je
jg
mov
mov
mov
push
pop
mov
dec
push
stc
sub
neg
aaa
adc
popa
sub
lret
pop
pop
fwait
jae
mov
dec
out
inc
xor
es
mov
imul
pushf
sub
jp
jecxz
inc
ret
or
add
into
push
adc
jno
jne
push
xor
and
push
mov
inc
pop
adcb
sub
sti
xchg
xor
jbe
pushf
cli
push
lret
scas
cmp
jne
push
sbb
pop
mov
das
sarb
pop
mov
xchg
add
loopne
and
pop
mov
xor
add
mov
shrl
jo
fnsave
push
pusha
push
mov
push
insb
roll
mov
lods
dec
sub
adc
xor
mov
popa
jmp
sub
mov
dec
push
and
add
add
loope
jnp
arpl
sub
addr16
mov
adc
hlt
sub
cltd
adc
sti
ss
out
scas
cli
lods
jbe,pt
cs
dec
loop
arpl
jae
cld
push
dec
lea
xchg
jmp
popa
das
and
lret
mov
mov
push
fisttpl
test
jae
pop
adc
popf
inc
add
push
dec
ja
pop
push
in
int
movsb
test
outsb
mov
xor
roll
test
in
loope
dec
in
ljmp
insl
xor
mov
add
mov
das
cmp
add
push
cmpsl
lcall
repnz
jne
push
push
dec
loopne
mov
sti
mov
test
dec
test
pop
call
imul
std
imul
dec
jno
das
fs
add
das
dec
add
sub
leave
imul
xor
mov
push
xchg
rol
sub
lcall
inc
mov
dec
add
dec
int
jecxz
in
test
pop
adc
std
repz
mulps
xlat
lcall
and
fisttpl
ret
xchg
or
lret
test
push
loopne
std
nop
in
push
mov
imul
and
rcl
mov
testl
loopne
mov
adc
cmc
aam
gs
sub
stos
movsb
and
shrl
jge
push
xchg
ja
test
xchg
cmp
leave
push
xchg
ja
jno
mov
sbb
lods
mov
jbe
sub
mov
push
cmp
mov
fs
pop
mov
mov
sbb
je
das
shll
aas
cmp
sahf
out
mov
mov
icebp
in
mov
dec
pop
insl
hlt
jl
in
repnz
test
add
popa
roll
mov
push
inc
hlt
pop
lods
lret
sub
loope
iret
sbbl
add
pop
cmpsb
and
sub
std
enter
or
inc
sbb
imulb
xlat
scas
push
pop
dec
and
sbb
sub
mov
data16
call
ds
subl
inc
lods
sbb
fwait
ret
sbb
into
pop
push
sub
push
adc
fxch
or
pop
or
or
lret
jo
clc
jae
sub
nopl
jl
lods
hlt
inc
std
ljmp
push
jne
jb
pop
into
int3
jae
repnz
lahf
cli
stc
fidivl
xor
sbb
adc
mov
daa
out
mov
scas
mov
nop
add
sub
inc
xchg
jne,pt
or
pop
divb
fstl
sti
sahf
lock
sti
gs
es
xchg
ret
inc
testl
xchg
jmp
pop
add
xchg
dec
movsb
adc
sbb
fbstp
gs
sbb
and
movsl
pop
addb
das
xchg
lods
add
mov
dec
rorl
mul
push
out
mov
out
cmc
mov
lods
ret
xor
std
mov
sbb
jnp
mov
inc
mov
xor
xchg
shll
in
adc
inc
xor
fildl
or
push
push
clc
mov
push
into
pop
xor
jle
add
popa
pop
inc
sub
loope
jg
push
aas
or
or
in
mov
xchg
or
sub
inc
aam
leave
lods
test
dec
mov
mov
stos
clc
cmpsl
stc
scas
test
cmp
mov
lds
xchg
push
mov
or
adc
mov
push
mov
mov
adc
std
inc
shl
dec
pop
push
mov
or
pop
add
test
xchg
out
inc
test
in
jne
push
cmpsl
push
les
or
jle
ret
xor
test
sub
xchg
cli
stos
divb
cmp
lea
ljmp
inc
xorl
jne
xor
stos
sub
push
clc
aam
fcmovu
and
jge
cwtl
cli
repz
inc
xchg
xchg
fisttps
pop
and
shlb
stos
xor
aaa
test
stc
jbe
sahf
mov
add
jp
push
mov
scas
xchg
stos
mov
pop
or
mov
arpl
xchg
fidivrl
lock
fadds
xor
pop
imull
repz
push
xor
scas
insb
cmp
mov
dec
jb
cwtl
ror
mov
or
jecxz
push
ret
dec
arpl
mov
push
mov
cmp
ss
and
sbb
fs
lret
fnstcw
xchg
push
pushf
ljmp
fstl
sub
loop
roll
ja
pop
pop
xor
test
outsl
pop
xchg
test
jo
outsl
mov
xchg
hlt
bnd
fisubl
jmp
dec
dec
mov
sub
daa
sbb
fstpt
jmp
push
inc
stos
fxch
jne
ret
lods
lods
mov
ret
ret
or
sahf
mov
mov
push
inc
popa
push
imul
sbb
pop
inc
insb
add
add
sub
pop
adc
xchg
inc
fsts
shl
push
mov
out
pop
dec
cmc
inc
xchg
lea
mov
xchg
movsb
sbb
mov
inc
fadds
sti
or
jns
and
outsb
sbb
rcrl
lahf
gs
dec
xchg
sahf
xor
cmp
out
dec
mov
stos
jb
scas
push
xchg
cbtw
jbe
inc
and
push
jp
sbb
das
mov
aad
mov
rorb
mov
mov
lahf
and
adc
jmp
incb
pop
xlat
push
fcompl
sahf
int3
popf
mov
adc
sti
cmpsb
push
sahf
mov
sub
popa
ja
and
mov
fldt
fcompl
jno
je
xchg
cltd
pop
les
or
xchg
inc
mov
repz
jb
jp
pop
jno
stos
sub
push
pop
je
xchg
xor
es
insl
test
stos
mov
loope
mov
cmp
xor
cltd
icebp
push
add
pop
sub
movl
aaa
mov
jno
adc
inc
aaa
ret
lcall
orb
pusha
lods
loope
pop
mov
and
push
out
jae
adc
push
inc
inc
aaa
test
rclb
xor
and
and
test
mov
dec
push
cmpsl
daa
daa
push
lcall
pushf
pop
or
lea
mov
lahf
xchg
mov
movl
sub
mov
xor
and
pop
fdivs
js
mov
ret
inc
dec
cmp
sbb
push
push
mov
jo
jnp
jo
dec
pop
cmp
sub
aad
adc
xor
add
cmp
ss
jl
shl
sti
dec
sub
cmp
mov
loopne
rcl
out
add
aas
sub
ss
popa
hlt
stos
out
repnz
lds
es
inc
push
push
xor
sbb
mov
jno
gs
popf
imul
stc
loop
lds
dec
push
iret
push
and
clc
mov
test
mov
xor
push
sahf
repnz
sbb
mov
adc
shl
add
or
frstor
lea
lods
xchg
mov
out
and
mov
scas
cmpl
outsb
pop
mov
lock
jecxz
stos
cld
je
inc
fmull
ljmp
jbe
or
lcall
mov
jg
mov
repz
lret
cmp
and
aad
dec
addr16
imul
sbb
pusha
pop
cmp
lea
imul
iret
movsl
pop
setne
adc
out
mov
mov
cwtl
add
pop
sbb
mov
sub
mov
lret
dec
lcall
jge
ljmp
jmp
stos
and
xchg
aaa
gs
dec
dec
repnz
cld
inc
nop
mov
lods
js
daa
loop
pop
aad
dec
int
add
push
dec
scas
pop
cmpsl
pop
loope
xchg
dec
sbb
rclb
fwait
shrb
outsb
incl
sbb
xor
pusha
adc
mov
adc
rcl
outsb
bound
push
inc
out
pop
out
inc
mov
faddl
dec
in
inc
rorb
inc
mov
mov
push
insb
dec
sbb
or
adc
cmc
ds
xor
xchg
stc
inc
mov
test
aas
xor
clc
push
out
dec
lahf
inc
ficoml
sahf
in
mov
dec
xor
dec
xchg
pop
outsb
inc
stc
addb
fldcw
add
inc
adc
aaa
add
fwait
add
cmp
dec
push
sub
push
fsubl
iret
cltd
popf
cwtl
nop
sbb
adc
ja
jmp
pop
xchg
mov
mov
js
stos
leave
cmc
shl
jle
cmp
loop
in
call
mov
int
cmc
bound
in
aad
cli
stos
ljmp
loopne,pn
lock
test
pusha
jo
push
lret
outsb
mov
lcall
ret
lret
scas
push
pop
sahf
cld
lret
cmp
fstpl
mov
sbb
shlb
jnp
add
mov
addr16
mov
aam
xchg
jae
out
and
inc
jp
mov
jne
mov
fsubp
add
out
push
sbb
push
and
pop
sbb
push
es
mov
insl
jp
xlat
shrb
sub
cld
stos
push
loopne
sub
mov
pop
outsb
dec
into
in
fnsave
ret
rcrb
pop
lcall
icebp
aas
xor
push
cmp
pop
push
lahf
bswap
movsl
int3
push
fisubrs
icebp
outsl
std
mov
pop
dec
mov
add
xor
rorb
mov
jge
jmp
push
pushf
and
lods
clc
insl
sbbb
sbb
insl
mov
pop
sbb
cld
inc
pop
jns
fists
fidivrs
shlb
xchg
sbb
push
mov
xlat
jb
or
jecxz
js
mov
aaa
mov
hlt
icebp
lret
dec
xor
sbb
ds
sub
ds
stos
cmpb
fcomps
mov
aaa
mov
mov
mov
les
test
aam
cwtl
fwait
cmpsl
pop
dec
test
or
std
loop
clc
push
movsb
push
xor
enter
dec
push
sbb
mov
dec
sbb
xchg
add
adc
cmp
andb
mov
xchg
xchg
lret
xor
cmp
sarl
mov
jge
dec
xchg
jae
sub
cmp
pop
rcll
jo
mov
cltd
add
or
gs
push
movsb
mov
inc
push
test
les
mov
sub
push
test
test
mov
ljmp
icebp
mov
adc
btsl
push
aam
ljmp
outsb
or
cs
daa
push
orl
dec
lds
push
xorb
iret
ret
push
test
imul
sti
imul
mov
lea
jo
fs
xchg
lret
dec
mov
aad
xchg
js
pop
lds
xchg
imul
pop
test
and
jbe
adc
jmp
sub
in
lret
mov
bound
inc
mov
pop
imul
jo
jmp
xchg
sbb
pusha
jl
jae
jnp
xchg
jnp
int
stos
mov
je
inc
ror
mov
movsb
or
mov
std
adc
fucomip
repnz
cmpsl
inc
inc
jge
testb
push
shl
ffreep
dec
andb
add
aaa
jo
pop
mov
pop
jo
push
or
dec
mov
jne
sub
aam
movsl
push
imul
movsl
lea
ret
sbb
mov
out
add
jg
xor
add
jae
pop
dec
cmp
lcall
xchg
stos
push
xchg
std
adc
cmc
ficomps
fs
ds
pop
push
ds
dec
stc
and
lret
arpl
out
or
xor
jb
lcall
inc
push
inc
push
xchg
or
xor
inc
and
push
ficoms
stos
and
xor
sbb
mov
cmp
or
dec
adc
lret
add
divb
inc
clc
test
lahf
adc
mov
push
fs
popf
pop
jae
xchg
rorb
nop
xchg
adc
mov
orl
add
out
adcl
add
aas
div
aas
les
push
imul
and
iret
jo
sar
xchg
jnp
dec
or
idivb
stc
mov
out
xor
addl
jmp
fsubs
dec
xor
inc
xor
jl
lret
xchg
sti
or
fidivrs
je
mov
test
mov
add
cmp
fwait
mov
mov
cmpsb
into
jge
out
pop
pushf
arpl
fdivr
sbb
pop
inc
sbb
mov
inc
subl
xchg
scas
sub
in
pop
lea
jno
call
and
cmpsb
add
sub
call
lods
mov
popa
lahf
mov
mov
push
add
inc
aad
jno
shll
scas
sti
jo
leave
rorb
mov
xor
sub
mov
cld
pop
pop
rcrl
mov
loop
cs
lock
in
rep
les
xor
adcl
xor
loop
jge
fs
daa
js
fildll
enter
jno
pushf
xchg
inc
filds
stos
mov
xchg
mov
mov
hlt
and
xchg
jge
iret
out
orl
adc
xchg
ljmp
fs
fisttps
jb
loop
or
mov
imul
gs
decl
xlat
clc
popf
mov
shl
test
mov
js
and
inc
clc
cmp
xor
fcmovnb
das
or
cmp
sub
inc
and
add
cwtl
int
out
mov
cmp
mov
loop
pop
cs
fld1
enter
mov
push
bound
pop
cltd
push
cmp
xor
add
pop
adc
les
jle
popf
push
mov
jae
andl
sbb
dec
fwait
xchg
mov
xchg
shll
add
dec
and
inc
cltd
repnz
cmp
mov
enter
cmp
lods
lea
pop
in
or
add
repz
push
cwtl
mov
mov
push
bound
mov
mov
in
xor
sbb
xlat
push
or
dec
stc
xchg
pop
stc
js
mov
mov
adc
aam
rorb
xorb
xchg
lcall
push
rolb
jle
push
pop
sti
popa
sub
mov
test
mov
outsl
or
int
mov
je
xchg
mov
xchg
popa
fnstcw
push
ret
inc
lcall
push
popa
adc
pop
xchg
inc
mov
jno
ja
mov
add
popf
push
lcall
rcrb
dec
addb
ret
out
jbe
dec
rclb
and
lret
fs
ja
fldcw
jo
mov
jbe
lcall
xor
mov
mov
fcom
out
ret
dec
and
cmpps
jl
iret
jge
sarl
xlat
aaa
scas
add
mov
pop
dec
gs
movsl
pushf
push
mov
fisubs
xor
iret
xor
call
insl
leave
inc
std
jg
aam
xor
xchg
in
pop
in
fcomi
add
stc
xchg
sbb
mov
shll
sbb
ljmp
pushf
xchg
mov
faddp
lret
ljmp
xchg
rcrb
out
mov
test
adc
in
test
stos
xor
ljmp
jo
xchg
fnsave
xor
cmp
js
fsubs
fnstsw
hlt
loopne
cmpsb
out
ljmp
lret
adc
mov
jns
pop
fists
jl
add
insb
push
inc
test
xor
testl
inc
negb
leave
pushf
adc
xor
sbb
mov
xchg
aas
jge
cmp
sub
mov
pusha
inc
dec
shl
pop
mov
sub
xchg
mov
rep
pop
mov
les
repz
dec
cmpsl
mov
ds
lret
xor
es
or
clc
mov
xchg
cwtl
sub
adcl
xchg
loope
je
mov
icebp
ja
insl
fmuls
jne
push
jnp
aam
inc
xchg
sub
mov
push
adc
pushf
mov
sbb
cltd
push
mov
pop
inc
test
or
push
out
in
dec
aas
inc
imul
iret
enter
mov
xchg
daa
andb
ss
pop
ficomps
stc
pop
add
pop
xchg
inc
mov
sub
les
mov
in
cltd
imul
addr16
addb
lods
ret
jae
fldcw
pop
sub
pop
neg
int
pop
out
add
jbe
test
pop
adc
sarb
aam
orb
pop
bound
and
aad
stos
movsl
jecxz
mov
in
dec
cmp
pop
sahf
or
jae
dec
mov
pop
nop
scas
ja
rorb
inc
xchg
pop
sbb
push
adc
add
sti
cmp
or
arpl
or
leave
mov
mov
sub
test
mov
mov
ret
xchg
mov
iret
cltd
cmpsb
xchg
pop
les
stc
pop
jge
dec
adc
int
test
lea
jae
popf
sbb
clc
sub
pop
lcall
rcrb
sbb
stc
js
repnz
jmp
jecxz
xor
ja
lret
mov
sub
xor
imul
add
jecxz
pop
dec
sbb
fistpll
insl
or
mov
sbb
or
daa
cld
sbb
sbb
in
inc
push
sarl
sbb
xchg
jnp
mov
cwtl
lods
jl
loop
add
mov
cltd
inc
xchg
mov
push
or
cmpsl
cmp
clc
mov
inc
or
inc
cld
or
nop
push
in
js
push
loop
sub
test
pop
push
inc
inc
popa
add
imul
adc
cwtl
ja
sbb
mov
jecxz
daa
and
dec
jmp
lcall
clc
cs
mov
xchg
xchg
pop
sub
imul
jae
inc
rorl
sbb
lods
scas
loop
test
mulb
loopne
mov
lock
cmp
mov
dec
lock
pushf
jge
push
push
pop
inc
xor
cwtl
hlt
mov
enter
insb
mov
iret
testl
loop
jno
bound
sbb
in
push
inc
cs
xchg
xor
xor
or
jne
inc
cs
or
mov
mov
mov
lods
sti
dec
nop
sbb
ret
xchg
add
hlt
ret
insl
out
mov
gs
int3
cld
xor
ret
sbb
in
int3
lcall
lds
adc
xor
pop
repnz
jl
ja
scas
insl
popa
mov
call
jbe
push
sahf
xor
mov
push
mov
adc
cmp
incl
jne
lea
ds
inc
xor
in
xchg
jg
pop
rcr
and
mov
add
push
rcl
fisttpl
push
movsl
scas
jnp
sti
int3
int
notl
loop
mov
lock
aam
fwait
es
mov
xlat
flds
daa
adc
popa
gs
pop
lcall
xor
pop
mov
out
push
cmp
sbb
mov
lcall
mov
lahf
pushf
mov
je
pop
mov
mov
cmp
mov
inc
imull
pop
outsl
sbb
sub
xor
sbb
sbb
into
stos
leave
jmp
popa
adc
dec
mov
add
jae
push
imul
ret
pop
push
push
sub
and
cmp
test
in
bnd
pop
mov
out
add
fwait
int
mov
lock
adc
jle
sub
jb,pt
inc
and
xchg
sarl
pop
mov
js
mov
dec
or
push
jnp
outsl
lret
dec
arpl
jnp
out
jmp
cmc
ds
shlb
pop
push
lea
inc
cltd
adc
popf
add
insl
mov
out
mov
pop
inc
scas
push
pop
rcrl
xor
jnp
and
sbb
xchg
jg
xchg
jae
ljmp
pop
insb
dec
fmull
mov
xchg
sub
push
cs
add
je
pop
ds
ret
push
shll
imul
loope
mov
and
mov
mov
sar
cmc
cmc
call
and
inc
jae
push
outsb
loope
lret
inc
mov
sbb
lock
sbb
pop
or
inc
jns
sub
aaa
lret
pop
adc
dec
mov
fwait
dec
into
sbb
adc
lahf
jecxz
jmp
imul
lret
lods
das
xchg
fnstcw
repz
stos
add
sub
inc
fists
lods
aam
arpl
cmp
ret
inc
mov
mov
mov
mov
gs
repz
mov
mov
dec
pop
xor
dec
mov
push
push
jae
es
pop
test
cmpsb
xor
inc
push
sub
outsl
and
pop
iret
adc
test
xor
inc
fisttpl
fmul
push
add
dec
aaa
mov
cwtl
je
jecxz
mov
mov
loope
and
in
fstp
call
sbb
out
es
inc
xchg
xchg
sub
test
xor
inc
adc
cmpsb
xor
pop
pop
push
ds
push
pop
dec
outsb
stos
lcall
int
mov
int
jbe
and
dec
test
mov
push
adc
addr16
lock
jmp
bound
pop
js
and
popf
mov
mov
movsl
mov
sub
outsl
in
loop
push
inc
out
adcb
fwait
xchg
pop
dec
xchg
fistps
negb
push
pushf
adc
xor
mov
pop
dec
add
mov
push
cli
pop
in
mov
outsl
sar
movsl
lock
rcll
sub
and
cld
dec
lock
clc
pusha
cmp
sub
inc
adc
jmp
out
enter
and
test
pop
pushf
add
mul
enter
push
xchg
bound
sub
adc
cmp
movsl
out
add
stos
mov
stos
ja
and
mov
or
jmp
push
inc
incb
ds
pop
jno
imulb
lret
sub
sbb
movsl
mov
mov
inc
add
mov
fdivs
jle
pop
test
fwait
push
adc
lcall
xchg
insl
stos
imulb
mov
jns
data16
out
dec
shlb
in
das
sub
push
xchg
dec
cwtl
stc
xchg
cmp
or
jecxz
clc
xchg
dec
xlat
iret
fimuls
lea
add
scas
loopne
inc
jge
stc
jno
mov
push
mov
int
inc
push
jns
pop
xchg
fs
ljmp
cmp
add
mov
xlat
fisttpll
pop
xorl
jb
insl
mov
and
sbb
in
rclb
and
cmp
lcall
cltd
mov
mov
scas
lods
pop
add
push
cmpsl
pushf
icebp
xor
fisubl
insb
adc
cwtl
sbb
fs
aas
adcb
cwtl
and
cld
dec
jecxz
cmpsb
dec
xchg
add
out
mov
lods
hlt
clc
mov
pop
or
sub
enter
fadds
jp
mov
cmpsb
mov
imul
jle
push
ds
out
and
xor
cmp
test
insb
mov
mov
ds
hlt
mov
fisubl
dec
cld
enter
or
cmp
mov
fwait
add
mov
jae
xchg
mov
adc
mov
jbe
dec
loop
cli
stos
in
xchg
mov
in
jg
mov
lds
call
dec
pop
jle
or
add
lods
imul
pop
push
into
sbb
xchg
scas
aam
mov
pop
push
fimull
aaa
dec
inc
not
adc
adc
cwtl
je
add
cmpsl
add
shlb
xchg
insl
dec
insb
sbb
int
jbe,pn
addr16
jae
dec
stos
xchg
fbld
jbe
jl
add
dec
sbb
pop
sbb
jns
and
cmp
xchg
cltd
insl
dec
xchg
push
and
mov
dec
cmp
mov
sti
mov
inc
add
bound
add
jg
add
fwait
shr
pop
aaa
xor
pop
mov
imul
mov
sbb
cmp
inc
das
addr16
mov
insb
push
cmc
jns
add
mov
pop
adc
jge
pop
cmp
push
inc
jge
mov
inc
stos
rcrb
arpl
in
adc
push
out
xor
jnp
jne
aaa
in
repz
fwait
jne
push
sub
scas
cwtl
adc
mov
xor
mov
std
push
cmp
jb
popl
adc
fsubrs
sbb
cwtl
arpl
aad
rcrl
aam
movl
jae
cmpb
inc
jmp
sarl
inc
mov
gs
stos
lods
cmp
or
adc
jecxz
fistpl
xor
in
sub
lds
cs
push
js
or
mov
pop
or
jbe
jnp
sub
sbb
adc
iret
loop
adc
mov
popa
sbb
arpl
push
push
cmp
sbb
frstor
fnsave
dec
aam
movsl
rcrl
xlat
shrl
aam
lret
jle
inc
out
int
test
jno
pop
rcl
and
mul
push
test
add
stos
stc
lcall
rcll
data16
inc
les
dec
push
pop
gs
or
sbb
or
sbb
pop
clc
cmp
cmp
lahf
cmp
lods
loop
ljmp
std
mov
ja
and
sti
xchg
dec
aam
fstpt
ljmp
data16
cli
xchg
cmp
sbb
sub
out
test
int3
or
xor
pushf
jno
inc
outsl
jl
leave
mov
xchg
adc
loop
test
pop
pusha
inc
jbe
test
or
aam
fdiv
out
sti
incl
mov
adcb
pop
mov
test
mov
out
aam
popf
lock
jns
in
cmp
shufps
leave
pop
add
sub
dec
iret
xchg
fbld
hlt
aas
jne
dec
fwait
inc
hlt
sbb
popf
push
jp
jb
mov
mov
jecxz
test
pop
adc
add
xor
cs
mov
add
aaa
fs
arpl
xor
cwtl
in
sub
xor
pop
and
xchg
mov
push
fidivs
push
cs
sarl
push
cmp
add
stc
xor
add
ficomps
add
scas
stc
cli
jmp
mov
in
pop
rorb
sbb
loopne
ja
aas
popa
pop
mov
jl
movsb
inc
out
popf
lds
aas
push
cmp
incb
sub
or
mov
push
push
mov
mov
pmulhw
movsb
stos
les
lea
popf
aas
std
adc
or
lock
lahf
and
add
mov
cwtl
cltd
lea
pop
inc
ret
or
aas
adc
nop
imul
or
pop
inc
fs
and
jbe
push
xchg
aam
inc
int3
mov
das
in
add
pop
xor
out
xchg
push
cs
or
je
sub
bound
mov
dec
lcall
lds
pop
insl
mov
mov
shlb
sub
clc
rorl
jnp
sarl
jns
dec
in
cmp
xorl
add
push
mov
fidivrl
aas
mov
sub
fdivl
xchg
icebp
out
ret
cmpsb
mov
inc
pop
adc
ret
test
sbb
ds
or
testb
pop
into
and
xor
xchg
cmc
sbb
sahf
xor
cmp
mov
stos
pop
xor
mov
jmp
out
or
mov
mov
mov
cmp
push
pop
scas
cmp
xchg
mov
cltd
les
pop
mov
and
mov
adc
int3
and
pop
sbb
adc
fimull
xchg
adc
ror
jns
ret
movsb
pop
xor
pop
into
in
shl
ret
mov
decb
xchg
popa
mov
cmpsl
lods
fisttpl
cmp
out
cmc
pop
lcall
or
sbb
sarl
aaa
cmp
shlb
loop
in
enter
je
mov
pop
lcall
pop
xchg
xlat
das
es
inc
int3
ds
inc
inc
jno
add
ret
push
adc
push
xor
cmpsl
cmp
push
xchg
ucomiss
jno
jmp
les
push
mov
stc
push
mov
pop
aaa
mov
scas
or
mov
sub
xchg
jne
mov
cmp
adc
mov
int3
sbbl
adc
add
dec
xchg
push
and
in
into
or
and
jle
sbb
stc
cltd
or
mov
xor
pop
xchg
cmpsb
ret
movsb
xor
dec
adc
xchg
fs
sub
imul
mov
sbb
insl
out
cmpsb
jbe
icebp
mov
sub
add
js
push
xchg
pop
sub
lock
icebp
ret
arpl
add
movsl
jns
into
pop
icebp
cmp
inc
inc
push
sub
inc
jbe
dec
xchg
mov
mov
inc
popa
xchg
das
lock
je
sbb
jl
push
xchg
cltd
scas
imul
test
push
sbb
or
adc
out
xor
std
xor
sub
sbb
xchg
xlat
jle
xchg
std
inc
dec
outsl
iret
jno
std
inc
adcl
mov
jp
mov
shr
jp
stos
enter
mov
lret
pop
enter
mov
test
orb
stc
jo
xchg
jne
roll
fstpl
mov
rolb
cmp
mov
xchg
lahf
mov
sahf
jae
pop
pushf
xor
fs
bound
movsb
daa
rcrl
ss
imul
jns
push
inc
sarb
cwtl
or
adc
and
mov
jmp
and
dec
sbb
mov
into
ret
insl
and
add
rolb
int3
inc
sbb
mov
or
jge
int3
mov
xor
arpl
int3
fwait
inc
inc
xor
idivb
pop
push
sbb
mov
aam
fiadds
push
cmp
xchg
jmp
sti
sti
cmp
push
push
test
jp
xor
and
int
sti
cmp
jmp
dec
ss
jl
inc
adc
jb
pop
pop
lock
mov
pusha
ds
inc
sbb
sub
push
sbb
push
mov
outsl
adc
sub
test
out
sti
repnz
shrb
je
cmp
add
jmp
das
xchg
and
push
es
jns
clc
sti
sbb
jb
xchg
mov
mov
mov
stos
les
nop
cltd
and
inc
push
and
pop
cmp
jl
gs
inc
pop
fincstp
movsl
rcrl
imull
pop
test
mov
mov
clc
sub
pop
add
lds
xor
out
popa
and
xchg
arpl
mov
outsb
jle
cmp
mov
outsb
cmp
cltd
xor
pop
std
pop
outsl
mov
loopne
test
test
sbb
add
cmp
jbe
xchg
shll
mov
or
cmp
or
call
cs
xchg
push
push
mov
shll
xchg
ds
test
sub
int
loopne
test
dec
addr16
mov
sbb
mov
idiv
enter
mov
mov
ret
inc
out
out
inc
repz
jo
mov
mov
and
xchg
jmp
in
sbb
sbb
adc
cmpsb
mov
mov
cmp
xor
lock
mov
movsb
enter
push
dec
testl
pop
fisubrl
xchg
sbb
pushf
sub
testl
fdivp
shrl
inc
push
lret
dec
icebp
fcoms
inc
bound
add
sbb
inc
or
mov
push
sbb
and
imul
xlat
imul
nop
mov
loop
js
mov
xchg
inc
dec
push
or
xchg
nop
pop
je
xor
rolb
sbb
xor
cmpsl
mov
mov
bound
ret
adc
jb
cmc
adc
rcrl
inc
pop
rcrb
xchg
mov
jle
gs
les
adc
in
xchg
in
push
lock
inc
sahf
ljmp
mov
aaa
lea
aas
arpl
xor
int3
scas
movsl
add
arpl
cmpsl
push
mov
mov
std
jo
dec
rorl
int3
xchg
addb
push
and
or
cwtl
cmpsl
int
xchg
mov
aad
fiadds
shll
imul
cmp
push
pop
imul
lahf
dec
cmp
movsl
xchg
or
pop
cmp
pop
mov
mov
inc
fdivl
mov
test
cmp
popa
iret
jecxz
in
dec
cmp
loop
lods
mov
mov
sbb
push
add
ljmp
aaa
mov
shl
pushf
cmp
xchg
popa
xchg
lods
int3
push
out
pop
add
mov
popa
xchg
rcll
add
mov
inc
in
mov
inc
mov
mov
pusha
push
pop
inc
cmc
es
push
incl
hlt
test
ficompl
jbe,pn
adc
xor
jo
into
mov
js
bndldx
idivl
push
imul
fs
sub
mov
mov
rcr
out
jns
xchg
push
es
lret
jb
cwtd
mul
lods
pop
imul
xlat
sub
xor
cld
mov
out
jb
mov
sub
xor
xor
mov
sub
inc
out
pop
scas
jno
jbe
aas
xchg
fcmovnb
subb
mov
sub
xchg
test
push
sub
dec
das
test
orl
mov
out
xorl
sbb
inc
mov
popf
pop
cmp
inc
push
dec
sti
xchg
jae
inc
inc
inc
xchg
inc
sahf
adc
cmp
push
pop
lret
sbb
aad
sbb
rcl
cltd
inc
insb
push
ljmp
fs
outsb
in
xor
pop
pop
leave
cmp
out
or
xlat
add
xor
leave
cmp
loop
loopne
aam
add
fmul
adc
std
pop
inc
outsl
adc
or
xor
xchg
push
testb
loop
inc
dec
mov
arpl
ss
aad
or
js
cmp
and
fmul
pop
or
mov
xchg
je
mov
icebp
sbb
jae
xor
and
jnp
cmp
scas
cmpsb
scas
cld
adc
sub
jle
cmpsl
aad
int
mov
xor
push
aas
add
out
stos
out
fisttpll
scas
rcrb
add
pop
add
ja
dec
add
fwait
sbb
cltd
mov
inc
add
add
cmp
lock
cmpl
popa
push
arpl
jbe
mov
adc
aam
pop
int
xor
cltd
enter
pop
js
fldenv
push
icebp
divb
scas
aad
dec
imul
fimull
out
fs
fdivrl
hlt
mov
pop
ds
push
pop
lahf
mov
and
adc
enter
aaa
ja
fcomp
adc
and
imul
dec
add
pusha
mov
adc
xchg
in
push
adcb
mov
pop
frstor
or
leave
pop
jb
or
add
aam
inc
xchg
inc
mov
adc
push
test
add
jmp
jnp
xor
imul
jno
add
cmp
mov
test
dec
dec
pop
mov
mov
daa
je
das
in
mov
bound
jp
sub
shl
push
js
and
cmp
int
cmpsl
mov
add
in
negl
jg
inc
adc
jmp
jbe
iret
rolb
in
or
mov
ror
in
sbb
sbb
je
mov
inc
xor
xchg
push
cltd
or
sbb
loopne
insb
and
xchg
bound
inc
f2xm1
or
sbb
jge
addr16
cmp
jae
cmp
rcrb
push
pop
push
stc
push
out
lods
push
sarl
jp
jmp
push
out
jp
mov
inc
out
out
aam
std
xchg
inc
sub
pop
jne
je
push
mov
out
fldcw
xchg
shlb
push
and
jo
xchg
xchg
shll
push
and
sub
mov
les
data16
mov
cmp
add
or
sub
enter
lret
cltd
mov
test
sbb
inc
popf
pusha
fisubs
lock
adc
pop
divb
pop
sub
adc
or
mov
xor
push
sbb
lea
arpl
xchg
scas
pop
sbb
xor
sbb
lods
cmp
out
and
push
mov
jmp
ret
cs
push
sbb
dec
mov
inc
clc
sbb
pop
fwait
pop
xchg
push
imul
xchg
fdivrl
dec
xor
mov
dec
fs
mov
imul
adcl
or
and
cmp
sbb
push
in
add
outsb
mov
xchg
jge
ljmp
jmp
daa
pop
loope
ficoms
jle
push
mov
decb
adc
sub
push
jp
pop
push
mov
fcoms
insl
sbb
movsb
insl
and
js
xchg
movsl
movsl
mov
mov
lods
adc
scas
add
mov
mov
inc
stc
push
cmp
into
sar
add
xchg
mov
push
xor
popa
jecxz
xchg
in
fs
std
pop
xchg
out
sbb
dec
mov
push
mov
insl
movsb
sahf
cli
jp
int3
outsl
cmp
out
xchg
out
pop
push
sbb
mov
jle
jo
add
lods
mov
add
div
jecxz
icebp
adc
mov
stos
jmp
ret
jae
lret
iret
outsl
adc
pop
pop
fcompl
aaa
into
push
or
sub
les
mulb
movb
in
dec
iret
mov
adc
fwait
insl
les
enter
sbb
mov
push
call
push
pusha
cs
orl
mov
mov
outsb
popa
jne
pop
fsubs
fcmovne
cmp
fdivrs
push
es
jno
mov
fstpl
test
lock
mov
sahf
or
mov
mov
pop
jl
xor
sub
inc
test
jle
nop
lahf
sbbb
sarl
mov
in
adc
leave
out
ss
repnz
rorl
push
leave
and
lahf
or
test
mov
pop
test
insl
mov
mov
xor
mov
fistpl
or
xchg
hlt
jb
inc
push
xchg
xor
xor
sbb
pop
add
pop
push
mov
add
aas
cmp
mov
dec
and
sti
add
mov
shl
and
outsl
das
cmpsb
pop
cmp
call
fs
lods
iret
ret
xchg
add
inc
or
in
hlt
mov
jnp
sub
mov
enter
xor
sbb
mov
mov
sub
popl
sub
rcrb
sub
pop
loop
in
add
sbb
sahf
aaa
loop
pop
pop
push
cwtl
testl
dec
das
xor
fldcw
fs
dec
or
inc
mov
jb
addr16
push
out
or
out
or
jne
adc
xchg
cmp
jmp
and
jae
out
cmpsl
xchg
mov
in
sti
ljmp
inc
mov
pop
inc
inc
jmp
mov
inc
mov
scas
mov
loope
xor
imul
cmp
add
sarb
inc
fisttpll
fs
in
xor
add
icebp
outsb
mov
adc
push
mov
cmp
movl
arpl
aad
je,pn
sbb
dec
sar
mov
aad
ret
mov
lds
inc
lret
mov
movsl
mov
jmp
inc
jge
mov
icebp
clc
push
adc
rolb
inc
out
mov
imul
test
sbb
lock
sub
add
std
sahf
sti
pop
jl
push
jno
or
inc
fdivs
sub
lret
ljmp
cmpsb
push
test
mov
ret
xchg
add
cld
cs
push
add
lcall
push
sbb
jle
inc
cmp
xchg
jp
mov
daa
pusha
jbe
jecxz
pop
pop
pop
cmp
add
sbb
cmpsl
mov
hlt
fdivl
incb
es
iret
and
inc
mov
loop
dec
cmp
cmp
mov
lds
mov
mov
popa
out
add
jo
loop
and
add
ja
or
js
push
pop
ss
push
dec
in
xor
and
jecxz
scas
mov
xchg
inc
adc
and
pusha
insl
notb
and
lret
popf
nop
xchg
push
aad
adc
mov
fstl
fildl
int3
mov
movl
pop
jle
mov
sbb
movsb
js
and
popa
and
pushf
gs
movsb
xor
inc
out
xchg
mov
xchg
jg
mov
xor
xchg
nop
jno
dec
cs
sub
xchg
fsubr
pushf
jne
mov
xor
pop
jo
js
out
jle
jmp
xchg
icebp
loope
cli
ljmp
mov
or
xchg
lods
std
push
add
fwait
mov
fnsave
data16
rcrb
das
and
out
js
sub
mov
inc
mov
xchg
sahf
notb
out
add
push
dec
dec
stos
pushl
and
call
scas
ficompl
xchg
or
xor
mov
popf
call
iret
sbb
imul
sarl
out
xor
jae
adc
inc
pop
lea
testb
mov
cltd
pop
aas
sahf
jne
adc
xchg
aad
int
cmp
or
or
cltd
ret
dec
out
adc
mov
xchg
cmp
lret
sbb
not
repz
out
lods
jge
pop
cmpsl
call
jns
pop
and
repnz
jns
cmc
xchg
sbb
push
repz
or
aad
enter
imul
cltd
jnp
cmpsb
add
data16
cli
pop
sbb
mov
sbb
mov
data16
mov
sbb
xchg
test
cmpsl
or
movsb
adc
mov
push
sub
out
stos
and
fnstsw
ret
push
adc
cmpsl
subl
and
xchg
enter
add
mov
aas
cmp
cli
arpl
mov
push
popa
cmp
sbbl
sbb
cli
mov
inc
sub
pop
jge
loop
lods
cmpsb
call
es
stos
push
cmpsb
imul
jmp
filds
in
fildl
cmpl
xchg
jb
add
mov
fmuls
packsswb
daa
xchg
mov
test
pop
mov
pop
std
shll
jg
ret
mov
outsb
push
jo
lock
mov
sahf
mov
pop
stos
aas
popf
or
cs
inc
adc
sub
subb
scas
sbb
xor
cltd
or
cmp
pop
ja
dec
and
iret
and
sti
add
mov
rorb
insb
insl
pop
cmp
dec
shll
jmp
pop
jp
ds
mov
enter
push
pop
pop
push
and
movsl
in
je
shrb
jbe
push
add
arpl
pop
jb
xor
or
daa
dec
loop
int
test
fnstsw
std
mov
or
xchg
scas
mov
mov
sub
or
cmpsb
lret
mov
lret
mov
pop
inc
jbe
loop
daa
clc
mov
rorb
push
or
mov
or
mov
add
pop
sahf
push
or
mov
cmpsl
pop
scas
out
cli
cmp
sbbl
add
in
xchg
fisubrs
clc
mov
inc
call
ret
fldl
test
add
mov
xchg
xchg
and
out
push
es
mov
add
xorl
push
outsl
popf
loop
mov
and
nop
mov
movsb
push
ds
popa
add
mov
push
jbe
shl
cmp
gs
push
pushf
xchg
pop
jp
add
sbb
jecxz
daa
mov
sbb
adc
in
sbb
sbb
xor
sarb
add
imul
stc
adc
mov
daa
sub
ret
outsl
fsubrs
cmpl
cmp
ljmp
stos
mov
out
cld
sbb
test
jo
mov
xchg
pushf
pop
loopne
mov
push
std
ret
ja
add
add
ficompl
lods
xor
dec
xchg
mull
loopne
mov
adc
stos
inc
mov
loop
cltd
fwait
test
aas
out
inc
mov
fldt
stos
inc
add
sbb
push
enter
adc
test
dec
leave
fs
push
cmp
scas
testl
or
cmp
neg
shl
sub
push
clts
movsl
lock
push
sub
mov
xorb
sub
int
fdivs
cmp
mov
mov
lea
xchg
pusha
adc
repz
jb
inc
insl
insl
lods
inc
adc
sub
cmpsb
les
xchg
mov
or
into
pop
cmp
outsb
imul
push
jp
repnz
or
outsb
sbb
adc
cs
movl
cmpsl
jb
jp
push
icebp
lods
pop
add
incl
pop
repz
sbb
dec
xchg
cmp
mov
insl
jb
add
sub
xchg
mov
and
inc
cld
popl
lods
push
xchg
fwait
arpl
jno
add
xor
inc
jno
arpl
shlb
inc
mov
push
aam
and
adc
clc
push
mov
movsl
jo
xor
cmp
in
out
std
sarb
lds
int
mov
outsb
inc
cmpsb
shll
cmc
sbb
fldcw
push
cmp
lods
dec
sub
cmpl
ljmp
fildll
fidivrs
out
mov
call
sub
inc
fnsave
xor
xchg
call
out
and
mov
into
pop
ss
mov
mov
out
xchg
and
push
mov
clc
loope
hlt
out
xor
cmp
mov
addb
lea
mov
or
loope
hlt
adc
inc
test
dec
lret
idivl
mov
mov
and
stos
mov
mov
int3
mov
xor
loop
jne
aam
fs
or
mov
int
mov
and
pop
movsl
pop
ljmp
imull
notl
push
sbb
mov
cmp
xor
sidtl
enter
aaa
push
shlb
dec
dec
test
shrb
adc
sbb
test
sub
cmp
adc
jns
hlt
jb
cs
insl
sbb
push
or
repz
jae
push
imul
pop
ja
jle
bound
mov
jmp
dec
inc
or
insl
jge
fidivs
xchg
mov
daa
mov
fistps
jl
mov
jbe
fdivrl
cmc
cmp
loop
push
mov
sbb
pop
out
nop
hlt
cmp
jg
push
sbb
xchg
mov
aam
es
cmp
inc
mov
cmp
jmp
sbb
in
xor
pop
dec
mulb
or
loop
cld
shll
lock
clc
mov
fsts
adc
push
jae
in
fdivrl
and
cs
xor
jno
push
pushf
fiaddl
pop
dec
lds
test
mov
in
rcrl
ret
sti
xchg
mov
and
and
ret
adc
inc
rcrb
pop
jmp
repz
inc
push
leave
mov
push
xorl
leave
adc
push
add
call
arpl
lds
movsl
cmp
mov
mov
fistps
mov
push
pop
jle
testl
stos
cmpsb
repnz
fwait
dec
push
fdivl
jmp
xlat
icebp
popa
popa
xor
into
sub
out
dec
daa
sbb
inc
mov
movsl
push
nop
jnp
sbb
mov
call
mov
sarl
or
jl
aas
movsb
add
mov
dec
sar
inc
push
ljmp
rcll
test
imul
sub
mov
arpl
popl
pop
je
dec
loop,pt
sahf
lahf
out
mov
push
and
pop
iret
sbb
push
aas
sbb
comiss
push
jl
mov
mov
enterw
mov
arpl
ss
dec
jbe
fs
or
pop
repnz
sub
mov
pop
jmp
xchg
fwait
sbb
mov
js
imul
mov
fisttpll
add
push
add
fimuls
sahf
mov
mov
or
jae
bound
fildl
cmp
clc
sbb
nop
dec
mov
xor
inc
aas
adc
call
repz
mov
lods
stc
and
loope
adc
ficoml
cltd
cltd
push
xchg
xchg
push
xor
fidivl
jp
pop
push
jno
mov
data16
inc
mov
sub
js
into
mov
add
sbb
mov
mov
fisttpll
pusha
xor
scas
push
xlat
lods
clc
shll
pop
out
sbb
push
mov
test
subb
sbb
pushf
movsb
lods
fdivrl
divb
idivb
and
pop
sahf
mov
cltd
insb
sub
hlt
xchg
idivb
imul
scas
push
xor
aam
arpl
out
orb
mov
outsl
sub
jge
out
ficoms
test
dec
mov
popa
sbb
mov
test
jp
add
mov
insl
xchg
js
push
cmc
dec
xchg
sbb
fists
xor
add
insb
jbe
iret
push
in
pop
jl
lret
or
sbb
into
inc
lret
sub
jecxz
lret
imul
cmpsl
ljmp
push
and
mov
mov
mov
mov
and
dec
or
int3
push
adcb
mull
sub
xlat
mov
int
mov
mov
sbb
jne
cld
loop
int3
mov
xorl
jle
jb
or
xor
xor
jno
mov
jns
jmp
lods
inc
mov
jb
nop
clc
insl
cmp
stos
sub
jae
xor
out
xor
or
popa
lods
andl
pop
loop
xchg
xor
stos
lahf
fs
adc
sarl
xchg
push
mov
sub
add
push
push
divl
js
movsl
movsl
popf
dec
fs
ds
movsl
ljmp
popa
push
mov
push
dec
adc
push
loope
popf
fs
lock
cmp
adc
fildll
addr16
jb
filds
cmp
sub
in
dec
ds
in
aad
push
popa
adc
jle
fadd
mov
xchg
cmpsb
aas
cwtl
mov
push
pop
subl
loopne
mov
cld
xchg
mov
bound
test
mov
xor
cmpsb
adc
jne
stos
scas
call
adc
cmp
rorb
sbb
push
leave
mov
xchg
stc
int
imul
lods
clc
fistl
inc
inc
fcompl
pop
sub
in
arpl
pop
cmp
push
out
mov
fildll
or
in
imul
sarb
fcomps
sbb
aam
and
push
mov
mov
pop
xchg
xor
test
pop
aaa
lret
arpl
xchg
fs
dec
aad
clc
mov
inc
comiss
xchg
in
push
push
xchg
xor
xchg
push
add
xor
nop
cmpsb
ficoms
dec
push
xchg
cmp
add
lock
mov
fsubrl
or
mov
add
das
cld
fistpl
scas
push
inc
gs
mov
fcompl
pop
mov
xchg
fmull
shr
jo
inc
add
fwait
mov
stc
sbb
call
inc
out
fimuls
imul
imul
mov
sub
inc
std
xchg
orl
mov
xchg
dec
fnstcw
mov
dec
hlt
into
out
testb
lods
dec
out
mov
add
or
in
les
test
xor
insl
mov
fisttpl
fsubr
mov
decl
and
sub
pop
jns
rol
aaa
les
je
jmp
loop
pop
popf
rolb
or
mov
insl
fldcw
mov
adc
sub
jmp
push
bound
push
push
fcoms
mov
or
push
push
pop
loopne
or
orl
jle
popf
fxch
fcmovb
inc
cld
cmp
std
fwait
xor
sbb
ret
or
adc
mov
xchg
sbb
js
sbb
pop
push
aad
sub
mov
cmp
inc
rcrl
push
in
icebp
iret
lods
or
xchg
xchg
inc
icebp
mov
and
push
mov
addb
out
jecxz
pop
adc
jl
inc
pop
aad
jmp
push
ss
push
int
hlt
mov
fisubl
mov
subb
add
and
xchg
push
psubsb
cmp
cmp
leave
out
fs
ja
jge
pop
and
mov
sbb
xchg
dec
xchg
cmp
and
test
iret
add
sub
addb
mov
je
or
jb
adcb
ret
xchg
add
mov
push
repz
mov
std
dec
xchg
mov
adc
sahf
add
inc
shr
or
jp
cmpsb
fists
xor
out
test
and
insb
dec
jbe
jno
pop
fstl
sub
mov
push
xchg
test
enter
jl
in
xchg
inc
int3
xor
fmuls
and
rcll
and
sahf
add
or
outsb
adc
pusha
aad
pop
lcall
mov
cmp
movsl
inc
pop
leave
lret
rorl
pop
mov
cmc
loop
xor
mov
sub
pop
fdivs
add
mov
jmp
adc
jae
cwtl
lahf
mov
add
adc
and
mov
mov
fists
adc
outsl
lret
int
push
push
sbb
mov
in
call
push
mov
cmp
testl
push
aas
cmp
xchg
pop
roll
test
mov
and
ss
pop
add
push
insb
lea
fiaddl
sahf
daa
sbb
sbb
mov
jnp
stos
xchg
mov
add
sbb
xchg
xchg
scas
cmp
dec
mov
ss
cmp
inc
pop
into
cltd
cmp
mov
mov
pop
mov
jle
dec
outsl
pusha
notb
fcoml
pop
xor
sbb
sub
ss
int
ss
mov
mov
mov
pushf
call
mov
add
arpl
sbb
xor
popf
jg
arpl
andb
repz
sbb
ljmp
adc
mov
test
jnp
xchg
inc
push
leave
sub
sub
jge
mov
test
cmp
and
pop
push
addr16
jmp
sub
dec
sub
test
jbe
mov
in
push
or
stos
stos
call
xor
cmpsl
mov
orl
imul
jnp
and
sbbb
gs
xor
scas
cld
push
fucomip
jno
repnz
je
loope
xchg
movsl
sbb
jno
sbb
addb
pop
push
xchg
cwtl
add
hlt
cmp
inc
cmp
sti
jne
xlat
cmp
gs
and
jle
push
fs
ret
scas
sbb
imul
mov
cwtl
rcll
mov
and
lret
add
push
mov
aaa
cmpsl
sub
mov
fimull
mov
sbb
aaa
sbb
xchg
mov
and
jo
mov
sbb
test
rcll
hlt
int
lods
dec
or
mov
repz
mov
dec
sub
mov
cmpsb
mov
ja
inc
sub
xor
mull
jecxz
insb
push
add
adc
xor
sbb
dec
arpl
fdiv
mov
mov
jmp
mov
mov
in
scas
pop
je
jnp
cmpsl
inc
jne
dec
rolb
and
and
push
xor
outsb
mov
jno
out
daa
dec
mov
push
ja
test
out
inc
loop
jle
jge
jg
dec
pop
xchg
es
iret
fxam
pop
fwait
out
es
insl
mov
sub
pop
sbb
stos
test
stos
les
add
lds
jl
jns
scas
gs
ds
pop
imul
sub
jno
or
js
cmpsb
lock
lods
dec
ror
cmpsb
push
lret
pop
jb
fsts
fisubrl
imul
lret
adc
hlt
inc
or
icebp
inc
push
mov
mov
jns
pop
push
icebp
cld
mov
add
or
lahf
sti
shlb
jne
and
inc
add
pop
pop
sarb
insl
push
fwait
loopne
sub
cmp
mov
sub
add
and
jae
decb
aas
hlt
out
jecxz
arpl
jne
mov
push
out
jge
in
fwait
jno
aaa
jecxz
cld
push
xchg
jl
add
call
pop
inc
sub
scas
mov
dec
pusha
sub
pop
sub
mov
push
cmp
dec
jno
cmp
xchg
lea
or
mov
maxps
test
test
add
pop
add
in
lret
push
sahf
sub
push
inc
cmp
lea
inc
out
push
jecxz
inc
stc
fsubrp
cmp
cwtl
xchg
add
aam
fdivrs
lock
sub
push
cmp
fsubs
or
push
mov
std
inc
mov
push
lds
mulb
popa
add
movsl
stos
movsl
ja
add
and
clc
loop
test
pop
mov
subl
inc
pop
ljmp
lds
pop
and
push
insl
add
jg
and
adc
sub
aaa
jnp
ficomps
shll
or
filds
and
pop
js
enter
fwait
test
adc
push
xchg
mov
sub
dec
mov
mov
lret
jl
jmp
push
mov
jg
outsb
mov
roll
xor
mov
xor
mov
outsb
mov
sbb
xor
imul
or
js
mov
adc
jecxz
or
cmp
fidivl
inc
adc
xchg
ja
fistps
cmp
inc
xlat
inc
push
mov
push
mov
lods
mov
push
sbb
out
mov
fwait
mov
sub
pusha
cmp
sbb
movsb
sbb
xor
mov
mov
xor
repnz
sahf
out
add
outsb
adc
push
gs
mov
mov
cmpsb
mov
in
sub
cli
cmpsb
inc
pop
push
into
rcll
pop
mov
jne
addr16
cs
out
pop
adc
jg
sbb
sub
and
cmp
adc
mov
and
inc
push
inc
rcrb
pop
adc
cmc
insl
movsb
mov
mov
and
rclb
add
mov
xchg
es
cltd
mov
xor
push
jge
mov
daa
insl
push
out
xchg
push
out
dec
pop
lock
jle
aas
jno
mov
xor
mov
test
jo
ficoms
cmp
testb
addb
out
adc
lea
jns
cmp
or
or
stos
jecxz
jno
notb
dec
test
inc
sbb
pop
cmp
sbb
mov
lods
cmpsl
mov
add
aaa
inc
adc
loopne
cmp
dec
movsl
xorl
imul
adc
inc
std
imul
out
ds
jno
mov
xlat
popl
pusha
mov
pushf
xchg
and
int
xchg
hlt
js
mov
cmpsb
ss
xlat
inc
rcrb
mov
rolb
jg
clc
add
jns
insl
rcrl
mov
mov
jp
xor
add
arpl
ja
xor
shl
loop
aas
lret
sbb
es
js
and
hlt
sbb
scas
les
push
mov
ss
pop
pop
and
add
adc
daa
sbb
subl
xchg
dec
push
sbb
adc
jno
cmpb
push
xor
adc
push
ds
push
mov
push
call
and
sahf
pop
iret
lret
add
and
fnstsw
fldl
mov
les
mov
cmc
pop
jecxz
pop
jmp
push
and
adc
or
add
cmp
cmp
mov
pop
cmp
test
insl
lock
aas
jmp
push
mov
out
fwait
or
outsb
xchg
add
hlt
ja
sbb
into
xor
fwait
pop
jle
loopne
mov
jae
lods
xor
jo
xor
jmp
xchg
mov
mov
push
cld
rolb
movsb
cwtl
sbbl
cmp
xchg
es
mov
mov
mov
push
and
movlhps
mov
adc
leave
int
dec
popa
cmpsb
test
jl
ss
out
lock
mov
mov
aad
pop
popa
out
or
dec
xchg
dec
pop
xlat
pop
insb
xor
shlb
into
shlb
addr16
ss
sbb
hlt
sub
rclb
push
push
andl
out
mov
push
mov
mov
in
jg
pop
int
jp
dec
stos
jno
iret
pop
mov
pop
jno
shr
pop
mov
aam
dec
mov
sbb
shl
pop
cmp
pusha
jg
fucomp
cmp
loop
xchg
out
pop
popf
adc
lods
push
sub
mov
sub
sub
xor
push
es
lds
jle
mov
sbb
mov
dec
pusha
add
pop
cld
mov
cmpsl
stos
pusha
push
std
jnp
adc
movsl
and
loope
dec
nop
push
pop
std
je
cwtl
fimuls
int
fisubl
outsb
push
es
cld
sbb
push
sub
xchg
imul
sbb
mov
cld
sbb
roll
xorb
mov
ja
pop
mov
int3
js
xchg
imul
pop
lods
push
popf
adcb
mov
and
inc
outsl
cltd
or
loopne
mov
sub
out
test
pop
imul
xchg
mov
pop
fdivrs
loopne
ljmp
pop
insl
mov
lcall
lock
pusha
das
imul
mov
pop
in
mov
and
push
xor
jg
cmp
outsl
icebp
popf
out
shll
mov
jle
popa
call
lcall
cmc
ljmp
jg
jecxz
fstpl
cmp
mov
ja
lea
pop
in
mov
xchg
adc
xchg
les
test
jecxz
ret
js
flds
push
flds
test
mov
in
in
std
fbld
dec
dec
ret
push
lea
sbb
in
cmp
mov
mov
fcoms
scas
pop
mov
sub
shrb
cmpsl
cmp
popf
movsl
jle
mov
mov
jae
jg
pop
ds
mov
and
xlat
inc
movsl
mov
mov
test
in
pop
aaa
xor
push
int
in
xor
mov
loope
shr
xorl
or
dec
inc
jmp
add
push
pushf
mov
movsl
outsl
pushw
pop
ficomps
ljmp
test
std
lcall
nop
xchg
insl
fs
mov
call
cmpsl
xor
mov
jae
lds
mov
bound
cmp
or
das
test
sbb
pushf
inc
cwtl
out
pop
lret
dec
mov
fisubrs
sub
jne
jecxz
sbb
xor
fs
popa
adc
or
add
rcl
cmpsb
inc
sub
cmp
int
xor
mov
or
jo
pop
jnp
dec
dec
lds
cmp
das
jecxz
mov
cmovl
mov
mov
dec
jne
daa
mov
push
sub
ret
sti
mov
subl
fidivs
and
test
pop
push
or
sbb
push
shlb
mov
add
xor
out
into
das
loope
andb
pop
call
imul
or
jb
test
dec
xor
xchg
mov
dec
movlps
inc
rsqrtps
movsb
pop
das
pop
mov
pop
mov
cmp
scas
cmpsl
sbb
je
push
stc
adc
mov
jp
jae
mov
jmp
add
lmsw
adc
or
and
fiaddl
roll
sub
ret
call
push
test
xchg
pop
out
clc
dec
testb
pop
add
lods
insl
cmpsl
in
ret
or
out
in
mov
mov
aaa
mov
and
decb
inc
jbe
xorl
out
mov
scas
pop
cmpsb
scas
cwtl
pop
sbb
push
lods
movsb
daa
inc
jmp
or
fcmovnu
leave
icebp
jp
iret
dec
cmp
inc
inc
pop
lods
mov
or
clc
mov
cltd
cwtl
jge
pop
fcmovu
add
xchg
mov
xchg
repz
jno
mov
sub
xchg
push
add
in
xchg
mov
push
scas
fiaddl
inc
and
rcrb
fstl
or
pop
sub
sbb
xor
cs
aaa
sub
mul
xchg
mov
bound
mov
dec
faddl
xor
xchg
ja
hlt
iret
or
pop
test
jp
pushf
sbb
pop
push
xchg
and
repnz
inc
sahf
xchg
pop
mov
out
jne
mov
mov
test
pusha
add
jle
jno
loop
xor
or
xchg
mov
mov
cltd
jno,pt
divl
sub
xchg
ss
mov
je
aad
jmp
loopne
imul
fdivrl
nop
lods
cmp
xor
mov
out
inc
je
adc
sbb
pop
jbe
subl
adc
mov
cs
cmp
inc
gs
popf
imull
jnp
arpl
shll
push
aas
mov
pop
int3
jae
mov
pop
fs
cmp
sarl
imul
or
cmp
dec
stc
sub
xchg
enter
test
arpl
dec
jbe
push
rorl
mov
pop
scas
lock
xorb
sbb
ret
lea
and
aam
mov
jbe
pop
shll
sub
mov
lods
push
push
xor
push
hlt
push
dec
mov
mov
mov
push
pop
xor
stos
jno
xor
adc
neg
xchg
ds
mov
push
outsl
cltd
repz
sbb
lret
mov
add
sub
ret
jg
dec
addr16
and
mov
inc
jle
dec
pop
loope
sub
popf
out
jo
and
into
lods
jae
pop
xchg
pop
push
ret
bound
leave
mov
das
jmp
jge
cmp
addr16
dec
pop
aaa
mov
sbb
add
pop
cmc
or
mov
test
push
paddusw
std
mov
mov
aad
cmpsl
pushf
aas
sti
loope
enter
sbb
jmp
add
dec
lock
dec
xchg
std
addr16
inc
int
pop
popf
add
lcall
ret
inc
mov
jge
pop
push
jg
leave
mov
stc
xor
fsubrl
insb
outsb
imul
gs
adc
xchg
insb
mov
loope
js
xor
fldt
ds
mov
jno
sbb
fisttpl
arpl
in
jle
push
mov
lock
lahf
dec
int
and
dec
mov
fwait
and
and
add
arpl
pop
jmp
and
mov
shrb
and
inc
inc
mov
lock
fisubrl
xchg
jg
fildll
fwait
hlt
jecxz
lret
xchg
fstl
cmp
xor
mov
add
or
lcall
push
insl
aas
inc
jle,pt
daa
fidivrl
loop
mov
rcrb
push
nop
sbb
pusha
outsb
inc
pop
stc
jae
jbe
or
or
dec
into
rorb
in
xor
add
loope
pushf
sbb
jns
sbb
into
shlb
gs
outsb
fldlg2
mull
dec
xchg
adc
pop
xor
mov
add
xchg
adc
loope
push
stc
cmp
cmpsl
outsl
fcmovne
xor
sub
mov
push
xchg
push
dec
xchg
std
dec
mov
test
fildll
and
dec
test
pushl
add
dec
and
mov
xchg
jle
out
pop
shrb
movsb
dec
call
cs
test
test
sar
lret
inc
sub
mov
shll
in
mov
mov
inc
out
dec
stc
xor
movsb
and
out
push
in
arpl
imul
xchg
sahf
loope
mov
dec
je
lock
test
mov
aaa
jp
pop
call
inc
aaa
hlt
fcoms
push
stos
or
or
xchg
jo
in
mov
jecxz
push
xchg
adc
xchg
js
pop
mov
clc
mov
std
ficomps
fidivl
sub
or
push
out
lods
mov
push
rcrb
mov
dec
incb
jle
inc
cmp
sbb
fimull
in
enter
inc
scas
sbb
xchg
or
sbb
movsb
mov
mov
repnz
pop
jbe
lret
or
or
mov
pop
ja
inc
fwait
lods
xorl
add
in
lds
movsb
dec
loope
inc
movsl
enter
cwtl
push
and
cmc
xchg
inc
mov
mov
and
push
cmpsb
xor
hlt
mov
rclb
subb
jns
dec
mov
sub
inc
out
ds
dec
mov
jno
das
inc
xchg
xor
jb
loop
xchg
stos
fsubrs
std
dec
jmp
rorb
mov
gs
pop
ds
sbb
ror
test
fsubrl
subl
cmc
add
pop
popf
add
pop
sbb
cmp
xchg
scas
fsubl
push
dec
sbb
sub
push
sub
jge
sti
sbb
decb
test
mov
aas
in
mov
mov
jl
lods
in
cmp
pop
jne
jp
int3
and
mov
mov
test
jbe
xchg
mov
inc
xchg
or
clc
jecxz
inc
pop
sbb
scas
pop
jae
loopne
dec
inc
jnp
add
mov
call
push
cmpsb
dec
cmpsl
xor
adc
jmp
frstor
mov
xchg
sarl
xchg
or
and
xchg
in
jg
push
mov
cmp
ret
hlt
adc
mov
dec
popf
ds
and
dec
inc
xchg
xor
outsb
inc
out
add
rorl
cmpsb
push
roll
sub
sbb
add
dec
and
in
loope
addr16
add
xchg
jno
jmp
and
mov
mov
mov
inc
insl
lret
mov
xor
shrb
push
dec
add
repnz
fimuls
dec
push
and
adc
ret
add
call
sbb
push
push
movsl
movsl
mov
repz
jp
sub
mov
and
add
test
jbe
lea
shll
pop
clc
inc
cmp
and
pusha
jnp
fbstp
jo
icebp
movlps
and
pop
ds
inc
movsl
push
mov
lds
ds
imul
movsb
push
aaa
or
ret
cs
and
dec
dec
mov
fdivs
or
mov
jecxz
xchg
std
sub
jge
pusha
jae
cltd
outsl
ja
out
les
push
dec
scas
jb
cmp
loope
ja
lods
stc
add
xchg
popf
fstpl
xchg
in
pusha
cmp
arpl
adc
scas
fldl
loop
sub
daa
movsb
out
cmpsl
xor
xchg
lret
lcall
jbe
adcl
andl
jae
dec
stos
dec
es
es
cmpl
mov
sbb
mov
and
sub
shll
cmpsb
cltd
les
inc
pop
ficoml
pop
jbe
call
lret
repnz
push
mov
xlat
sub
jo
popa
and
cmc
push
jno
pop
mov
pop
or
xchg
rol
push
daa
repz
mov
es
sbb
hlt
daa
xor
mov
push
fcmovnbe
icebp
shl
jp
jle
nop
sbbl
dec
mov
cmc
push
mov
jg
mov
aas
mulb
fcmovnbe
mov
je
cwtl
or
in
jg
mov
movsb
adc
cs
out
popa
into
jno
inc
sub
sbb
in
sbb
push
adcb
or
pop
cmpsl
pop
xor
imul
leave
fists
sbb
pop
adc
pusha
dec
daa
imul
push
sbb
hlt
mov
cmp
push
ljmp
mov
stc
inc
cmp
cmp
mov
in
or
cmp
shr
outsb
cmc
or
leave
lcall
sub
cmp
adc
inc
cs
stos
add
lods
sbb
fs
aam
nop
icebp
daa
and
adc
pop
insb
dec
sbb
add
cli
fdivrs
mov
lds
std
inc
cmpsb
rorl
in
or
aad
mov
ret
mov
sbb
push
and
rcl
add
mov
xchg
lds
popa
icebp
mov
push
sub
enter
mov
lock
and
add
add
pop
push
inc
mov
or
lods
jle
or
lmsw
xchg
hlt
rcrl
inc
mov
ret
dec
xchg
jg
cmp
aam
pop
lods
xor
and
dec
rclb
dec
in
loope
idivb
repz
cmc
mov
cmp
mov
scas
mov
push
icebp
xchg
imul
dec
and
mov
xchg
out
push
popl
cmp
scas
clc
outsb
ss
test
std
lahf
jg
repz
dec
cmp
dec
jl
jmp
shr
xchg
pop
push
std
call
jl
dec
out
sub
mov
sti
push
push
sub
leave
xchg
cmpsb
mov
jno
loope
out
sbb
dec
iret
test
lcall
outsb
jmp
jbe
in
mov
dec
pop
sbb
incb
cmp
ja
mov
jl
pusha
dec
addr16
adc
aam
pop
cmp
mov
or
iret
int
add
mov
jbe
cmp
mov
and
fwait
lahf
add
pop
mov
icebp
adc
divl
mov
fsincos
inc
mov
gs
mov
test
mov
mov
jno
imul
add
jb
aad
or
pop
mov
ss
push
push
outsl
imul
pop
outsb
mov
and
jg
jne
sub
dec
lock
mov
out
stc
inc
cmp
jbe
mov
fcmovnu
shlb
jge
jp
pop
push
fdivp
mov
andl
dec
jae
and
imul
push
pop
stos
pop
pop
push
enter
std
nop
jnp
cmpsl
sub
mov
xor
sbb
xchg
adc
or
and
mov
into
test
popf
cmp
fcmovne
mov
xorl
test
mov
nop
sbb
inc
fwait
push
gs
xor
add
xchg
adc
fdivl
and
pushf
clc
pop
fisttpl
jno
dec
push
sbb
test
lret
pop
sub
cs
outsb
ja
ja
punpckhbw
fdivr
data16
xchg
xchg
push
mov
jo
ds
xlat
mov
push
inc
mov
jae
clc
inc
movl
aam
ficomps
seto
inc
or
out
icebp
ljmp
pusha
add
in
fsubs
mov
scas
sbb
add
inc
lret
mull
bswap
push
rcrb
push
xchg
out
loop
dec
scas
gs
cwtl
out
cmp
xchg
loopne
lahf
inc
jb
shll
insl
insl
mov
or
or
cmp
dec
test
mov
mov
popa
pop
lods
in
pop
cmc
adc
mov
lcall
push
fidivs
aad
jmp
popa
repnz
bound
gs
ret
out
out
sbb
rclb
or
pop
scas
fmul
test
xchg
xchg
je
push
mov
sahf
shlb
dec
sub
test
mov
inc
aas
jns
lea
fldl
or
pushf
dec
test
ljmp
inc
enter
mov
dec
mov
pop
mov
sti
unpcklps
mov
mov
movsl
cmp
mov
mov
pop
mov
clc
or
mov
and
lret
gs
stc
add
nop
mov
rclb
shll
outsl
inc
ss
repnz
sub
daa
rclb
in
mov
aas
push
lahf
es
shlb
bound
popf
and
call
push
or
popa
inc
mov
lret
sub
mov
xor
jns
or
lods
pop
cmp
pusha
mov
pusha
fildl
mov
mov
xchg
xor
xchg
bound
in
fcmovne
in
mov
daa
push
scas
pushf
push
sub
cld
idivb
aas
in
add
mul
xor
scas
out
int
rcll
mov
sbb
xor
data16
cmc
popa
jo
pop
sarl
repnz
stc
jae
dec
add
inc
fistpll
sub
cwtl
andb
bound
add
sbb
rclb
mov
xchg
in
xlat
sahf
subl
or
pop
aaa
rcrl
outsb
icebp
shl
mov
push
cmp
es
inc
fimull
mov
stos
dec
scas
xor
pop
out
shl
cli
addb
pop
enter
mov
dec
inc
cmp
test
push
xchg
cs
das
call
stc
gs
outsl
movsl
or
stc
jl
ljmp
and
jns
aaa
ja
out
into
pop
xchg
sbb
jno
mov
hlt
and
pop
mov
dec
adc
cmpsb
jecxz
jp
repnz
test
sbb
leave
dec
je
mov
xchg
mov
xchg
outsb
ror
les
jb
adcb
or
mov
mov
fildll
lret
jns
pop
dec
lods
mov
push
fsubp
jl
ficomps
bound
push
roll
mov
je
sahf
push
cmp
or
pop
in
mov
mov
out
xchg
cmc
int
add
popf
movsb
cmpsb
mov
fdivrp
cwtl
sub
setbe
push
fcmovnb
mov
loope
push
outsl
jae
ror
xchg
pop
or
jl
out
fisubrl
push
mov
fistps
dec
lods
push
dec
xorb
jnp
arpl
jg
or
xorb
lret
jg
aaa
pusha
push
or
jecxz
mov
mov
inc
fistpll
inc
js
repz
jg
pop
dec
xchg
pop
daa
mov
push
xchg
out
pop
dec
cmp
nop
les
ret
and
fnstcw
lret
sarl
cmp
fstp
repnz
sbb
ds
aam
lods
mov
mov
mov
mov
out
mov
mov
mov
push
je
cld
push
jle
popa
xor
push
scas
incl
lds
sub
pop
push
or
cltd
pop
lahf
rol
test
pop
mov
mov
xchg
push
xchg
push
fstl
ffreep
pop
push
xor
in
cmp
jp
push
xor
pop
arpl
xchg
xchg
ljmp
std
test
cltd
push
mov
das
fildl
movsb
fs
insb
std
fistpll
ffreep
cld
fadd
shr
xchg
sub
sti
jae
adc
pop
cmp
xchg
mov
xor
mov
fistps
and
fsubrl
rcrb
popa
xlat
loope
add
out
xlat
and
aaa
pop
mov
jg
dec
mov
mov
pop
addr16
call
rcrl
pop
lock
setg
mov
stos
scas
cmp
dec
dec
call
das
xchg
leave
lock
sub
cs
in
inc
outsl
sti
sub
pop
rcrb
es
in
adc
sahf
or
icebp
js
dec
movsb
mov
add
xchg
js
enter
sti
or
test
cld
jno
cmp
unpcklps
sbb
int
and
sahf
pop
sub
fdivrs
loopne
repnz
aaa
inc
xchg
mov
push
les
dec
or
lcall
call
je
repz
mov
mov
out
mov
call
aam
fadd
enter
pop
jmp
xor
aas
dec
mov
in
pop
imul
arpl
inc
fcmovbe
adc
jne
pop
mov
cmovp
iret
decb
icebp
ss
aas
cmpsb
adc
sub
aas
or
outsb
cmp
xor
arpl
push
jecxz
and
mov
jo
or
lods
pop
jb
dec
mov
xor
fmuls
mov
jnp
aam
cmp
mov
inc
sbb
pop
cmpsb
dec
test
call
inc
lea
xor
stos
mov
jge
lahf
and
fnstcw
cld
mov
jbe
lods
lds
fadds
and
push
jns
enter
xor
js
add
aad
jo
fistps
lret
mov
dec
inc
inc
test
push
add
and
shrl
lea
mov
ss
mov
rcrb
mov
mov
push
jb
aaa
cld
ds
xchg
mov
jbe
sub
ficomps
cwtl
inc
std
mov
movsb
sti
orb
mov
mov
push
lods
add
sahf
ret
cmp
xchg
jmp
xor
cmp
stos
packssdw
xchg
push
scas
inc
mov
gs
xchg
fcoml
jno
xor
cmp
dec
dec
enter
ja
mov
push
mov
pop
cmp
jp
mov
push
and
enter
lea
dec
push
gs
fldcw
dec
xchg
inc
aam
mov
cmp
das
cs
pop
xchg
push
jbe
lods
stos
div
jmp
mov
out
ffreep
cmp
mov
add
add
cli
sbb
cmp
cmp
push
loope
jb
popf
out
fmull
inc
scas
int3
hlt
loope
cmpsb
inc
fidivs
adc
mov
lds
repz
mov
movsl
cwtl
data16
sub
jmp
jge
adc
sub
fbstp
pop
mov
sti
pcmpeqw
or
push
mov
out
stos
sub
dec
xchg
dec
aam
shl
inc
cmpsb
cltd
movsb
adcb
push
or
xchg
lea
fnstsw
inc
xor
jb
lods
test
xor
jbe
jb
jae
push
inc
dec
xchg
adc
xchg
pushf
mov
outsl
mov
mov
sbb
fwait
cmp
subl
mov
or
lock
mov
mov
mov
call
push
lods
cmpsb
inc
lods
and
inc
sbb
test
outsl
es
test
inc
jo
out
jecxz
add
test
popf
jnp
out
inc
loopne
cmp
mov
add
aam
mov
testl
je
jle
fcompl
xchg
adc
jp
std
jecxz
pop
hlt
imul
dec
call
adc
jae
shrb
daa
icebp
cmp
in
int
xchg
inc
ret
mov
jmp
aam
inc
pop
rep
cmpsl
enter
stos
pop
inc
repz
mov
mov
pop
int
aad
xor
iret
jae
cltd
into
push
pop
aaa
pusha
out
push
std
pop
movsb
xlat
sahf
push
fadds
pop
dec
outsl
pop
xor
testb
dec
stc
mov
and
gs
sahf
xchg
sub
xchg
cmp
dec
stos
cmp
xchg
addb
cmp
sahf
inc
pushl
out
cmp
sbb
or
cwtl
icebp
lret
cmp
movsb
xor
pop
int
stc
xor
xchg
mov
mov
jns
inc
xchg
les
pop
xchg
mov
cmc
out
dec
xchg
out
mov
les
fsubl
xchg
hlt
or
loopne
int3
rcrl
xor
lret
lcall
in
fidivrl
sarb
push
pop
frstor
and
mov
cltd
loope
out
add
imul
fs
inc
enter
sub
inc
daa
out
or
fcompl
lahf
jo
rcrb
data16
lret
loope
fdivrs
pop
adc
inc
adc
pop
mov
jmp
popf
imul
adc
dec
mov
mov
inc
jg
mov
inc
and
inc
xchg
dec
repz
incb
jnp
add
cmpsl
push
and
iret
iret
xor
lods
repz
ss
leave
pop
scas
or
scas
pop
push
dec
lds
je
xor
xchg
bound
mov
mov
into
and
int3
push
ljmp
add
mov
test
jbe
mov
and
inc
push
add
inc
mov
mov
xchg
xorb
sbb
repnz
and
push
test
and
cmp
sbb
and
mov
dec
enter
dec
shlb
in
adc
rcrb
aad
mov
enter
xchg
jns
add
movl
iret
sub
loope
jl
jo
sahf
sub
ss
add
dec
inc
popl
insb
pop
jecxz
arpl
sub
and
rorb
inc
push
nop
stos
jns
mov
paddusw
adc
in
or
adc
pop
call
mov
add
imul
sbb
rcrb
and
push
mov
jp
orb
pop
int
push
inc
shr
mov
cmp
mov
lock
sub
dec
adc
mov
sbb
push
sarl
cltd
mov
insl
mov
xchg
lods
aad
stos
std
jns
mov
int
dec
cli
mov
inc
xchg
lcall
sbb
dec
loop
leave
mov
sub
test
and
jno
push
jmp
xchg
roll
adc
inc
mov
xchg
or
repnz
xchg
addl
push
add
pop
testl
sub
ja
xor
mov
mov
push
daa
lods
mov
in
rcll
sub
rcll
xlat
rcr
push
insl
xor
xor
pop
push
test
mov
iret
mov
int
jbe
mov
dec
push
jbe
daa
fsubrl
lret
xchg
sti
sarl
fistpl
fmul
arpl
inc
jnp
cmp
dec
mov
pop
mov
dec
mov
aas
adc
lret
pop
jb
xor
fbstp
lods
mov
dec
in
xor
lods
pop
addr16
ret
lcall
jbe
in
mov
in
lret
pop
mov
out
mov
mov
fcom
incl
push
adc
jnp
std
mov
xor
cmp
mov
inc
mov
jnp
jnp
push
fnstsw
cltd
mov
or
hlt
std
inc
es
push
ss
mov
dec
or
mov
cmp
out
fwait
lods
xlat
push
xor
fisubs
xchg
fisubrl
ja
out
addr16
and
add
or
jmp
stc
xchg
rorl
inc
daa
inc
cltd
mov
push
sbb
lret
cli
fcomps
pop
fiadds
sbbb
les
push
in
and
sti
mov
cmp
test
dec
into
push
or
jns
les
dec
je
lods
inc
adc
adc
shlb
call
sahf
insb
mov
xchg
xor
cs
aaa
and
sub
inc
inc
mov
and
pusha
pusha
lret
fnop
and
xorb
ss
test
sub
sbb
lock
jbe
iret
cmc
and
pop
mov
lcall
sub
push
cs
xchg
aam
rclb
adc
leave
mov
jbe
enter
out
daa
fcomip
std
into
stc
adc
push
sbb
or
jle
adc
into
repz
scas
ljmp
jo
dec
gs
fisttpll
mov
inc
mov
popa
aaa
pop
mov
mov
aas
or
jmp
inc
mov
daa
fsubs
dec
and
and
sbb
std
in
mov
jmp
pop
jmp
daa
xchg
mov
sbb
cmpsb
adc
pop
jne
and
aaa
sub
shrl
lret
sbb
mov
repz
fwait
sub
cld
stos
in
lods
cmp
and
ret
mov
inc
test
sub
or
cmpb
pop
jno
xchg
mov
sahf
sbb
jp
cli
sbb
es
jmp
cmp
mov
test
jle
mov
fstl
hlt
dec
cltd
cwtl
repz
stos
incl
inc
pushf
xor
aad
and
daa
mov
mov
xlat
int3
cmpsb
gs
push
stos
ret
push
jmp
mov
pop
cmpxchg8b
leave
andl
sbb
dec
movsl
cs
cmc
outsb
insl
testb
and
cmp
jle
xchg
mov
test
in
fwait
jae
add
in
js
adc
dec
bound
mov
add
mov
popf
mov
add
shrb
pop
leave
adc
sbb
scas
leave
sub
ror
ret
push
shl
ds
in
and
mov
mov
dec
pop
xor
dec
aad
jl
push
mov
shll
fsubrs
fcomps
xor
lods
adc
in
xchg
jp
imul
jb
fimull
pushf
out
inc
cmpsl
or
dec
enter
fcoms
sbb
adc
fdivl
fidivs
mov
shlb
in
sbb
outsl
jnp
mov
lcall
adc
sub
stc
mov
mov
test
out
push
jns
outsl
fcomi
dec
lds
dec
loope
dec
jno
leave
dec
into
in
fists
lret
pop
sub
and
mov
adc
and
stos
push
jl
add
cmp
mov
into
dec
test
enter
xchg
jb
or
pop
jnp
test
cmp
inc
into
sub
sbb
adc
outsl
call
lahf
pop
sbb
leave
inc
mov
ss
xchg
cmpsb
xor
icebp
es
adc
pop
push
cld
and
inc
leave
push
xor
outsl
cmp
lods
call
call
fidivs
into
in
cmpb
inc
fidivs
movsl
outsb
gs
out
imul
mov
xlat
or
ja
jecxz
jmp
push
sbb
popf
add
pop
xchg
dec
jge
mov
sub
add
or
out
pop
push
jbe
sub
sub
cwtl
js
push
dec
fwait
lcall
push
loop
or
xor
pop
jbe
jnp
jbe
jns
push
fwait
xchg
pop
jg
cmp
and
sub
nop
test
rorl
jg
pop
bnd
mov
stos
mov
push
dec
pop
or
out
adc
push
scas
sbb
jge
sbb
jecxz
jae
cmp
aas
push
mov
mov
pop
mov
sub
imul
out
sbb
mov
aad
mov
leave
adc
cmpb
int
cmpsl
sub
loopne
add
orb
in
jne
jae
mov
push
inc
sub
push
rorb
or
cmc
pop
dec
pop
sarb
outsb
out
xchg
jb
push
jnp
or
pop
imul
in
xchg
rolb
mov
xchg
stc
dec
mov
push
mov
adc
sbb
fisubl
xchg
xchg
fisttps
jb
mov
xor
add
in
cmp
inc
push
pop
jae
fdivrs
mov
mov
test
fadd
adc
test
sahf
nop
nop
push
sub
xchg
aaa
push
adc
cwtl
or
mov
dec
and
dec
push
cmp
divb
push
mov
clc
test
rclb
jo
push
sub
aad
data16
sbb
cmp
mov
sbb
sbb
or
out
inc
sub
mov
orb
addr16
andl
mull
inc
jnp
shll
mov
cli
shlb
int
sub
cmp
pop
xchg
mov
dec
jmp
add
adc
sbb
into
mov
push
and
rorb
push
and
xor
jns
mov
push
test
fs
xchg
sbb
xchg
ljmp
sbb
xchg
mov
cmp
test
mov
fldenv
pop
loope
out
dec
and
inc
xchg
pop
aaa
xchg
xor
je
movsl
scas
fadd
cmp
jo
jl
mov
out
mov
sbb
push
mov
push
sub
inc
xor
xchg
inc
out
push
push
cmp
or
xchg
ret
int3
lea
fnstcw
loopne
rclb
pop
repz
add
sub
or
sub
push
in
gs
cmp
fldln2
roll
cmpsl
addr16
sbbb
std
pop
and
mov
ljmp
je
add
xchg
std
jb
fistps
mov
stos
pop
adcb
inc
push
lcall
lret
or
out
xor
push
add
jno
sbb
jae
or
mov
fldt
decb
push
cltd
cwtl
push
xor
rorb
rcrb
dec
dec
stos
insb
cmp
out
lods
addr16
rorl
scas
sbb
mulb
cmpsb
incl
ret
xchg
fs
xor
into
or
jecxz
daa
jns
bound
sbb
test
in
fnop
loope
mov
push
mov
xor
sub
xor
pop
jmp
inc
sbb
push
fdivr
pop
pop
dec
push
test
aad
cmp
loop
cmp
insb
repnz
mov
cwtl
mov
mov
stc
pop
lahf
fdivl
jecxz
aaa
dec
push
pop
mov
sub
inc
fwait
lahf
adcl
lea
inc
or
imul
pop
xchg
fnstenv
movsl
push
and
in
lcall
mov
ret
test
ljmp
sub
jg
sub
xrelease
inc
or
test
ljmp
test
push
testb
sbb
pop
mov
jns
jns
stos
dec
xor
addr16
fcmovb
fdivl
adc
xchg
sub
gs
fisttps
out
jle
pop
cmpsb
cli
aam
mov
pusha
xchg
cmp
bound
xchg
shll
dec
int
pushf
lods
ja
enter
cmp
in
popa
lods
inc
leave
inc
mov
stos
shr
mov
aas
pushf
sbb
lahf
lcall
shrb
les
push
jns
push
mov
cmpsl
roll
std
inc
subb
sbb
rclb
inc
in
mov
add
or
cltd
mov
mov
out
bound
inc
cmp
sub
cmp
mov
mov
lods
ja
fidivs
jl
lret
pop
ja
push
jo
pop
call
xor
mov
adc
sbb
adc
fcomps
jne
cwtl
jmp
xor
pusha
push
xor
sub
pop
mov
xchg
inc
or
pop
pop
pop
nop
mov
push
xor
dec
outsl
xor
cli
pop
fcmovnb
arpl
sti
dec
push
xchg
pop
push
test
lea
loope
fisttpl
mov
push
or
xchg
sub
mov
test
ficoms
mov
or
sub
push
xchg
fs
or
jecxz
shlb
inc
mov
add
pop
sub
sub
repnz
dec
push
xor
rcll
jecxz
add
rcrb
hlt
sub
adc
iret
test
sub
mov
push
insl
mov
xchg
push
repz
adc
roll
jl
ficompl
ds
es
and
jmp
sub
outsb
xchg
dec
inc
vgetexppd
bound
adc
pop
cmpsl
cmp
xchg
cmp
call
xchg
dec
dec
aam
sbb
mov
jb
add
cmp
inc
pop
or
das
adc
addb
mov
movsb
lea
fs
add
mov
pop
in
hlt
and
pop
jle
mov
or
mov
sbb
ljmp
xor
mov
push
loopne
adc
int3
into
dec
fdiv
orb
pop
pop
lods
xor
iret
and
add
nop
push
das
inc
ja
push
dec
in
pop
clc
jae
push
mov
xor
stos
lods
jnp
repz
jb
outsl
arpl
lock
cmc
jp
mov
xchg
shl
fmull
ljmp
jmp
stos
adc
xchg
call
jp
jecxz
sbb
pop
pop
out
push
mov
orb
dec
mov
mov
cmpsb
fidivrl
lahf
jae
mov
dec
ds
js
mov
inc
mov
imul
xchg
cltd
lret
xor
xchg
push
jno
cmc
push
loop
pop
rcrb
icebp
movsb
mov
pusha
in
xchg
test
enter
and
lock
jns
sbb
pop
cmpsb
jle
xchg
jne
adc
cld
insb
push
dec
es
jbe
inc
rclb
xchg
shrb
shr
push
jne
out
stos
inc
stos
out
pop
jp
pusha
xchg
adc
mov
pop
mov
or
add
mov
jle
and
push
push
pop
inc
xchg
stos
cmpl
addb
mov
sbb
mov
xor
popf
mov
repz
pushf
lods
aam
jge
jmp
cmpsl
mov
xor
aad
dec
movsl
mov
add
adc
mov
imul
xor
ds
pop
test
mov
popf
stos
aad
lret
sub
ja
cmp
mov
in
testb
sahf
outsb
push
ljmp
jl
cmp
addr16
pop
or
xlat
fidivl
add
mov
dec
mov
jbe
mov
dec
hlt
push
out
pop
addb
mov
inc
in
pushf
and
jp
aas
sub
dec
mov
cli
hlt
repnz
mov
out
jmp
or
ja
push
jns
jnp
inc
add
jge
push
outsb
inc
stos
inc
stos
out
mov
dec
adc
imul
pop
adc
out
sbb
push
mov
push
mov
push
ds
rcrb
add
jno
movsl
repz
pop
sub
inc
add
adc
movsl
clc
in
pop
out
cltd
sbb
jmp
enter
test
pop
cmpsb
das
arpl
xchg
or
mov
lcall
outsl
ret
mov
into
cld
mov
sub
pop
sub
pop
fdivrs
xor
addr16
imul
ja
adc
push
out
rclb
enter
mov
jmp
jle
jmp
sub
fs
scas
mov
nop
mov
dec
pop
dec
sbb
lcall
sahf
fwait
jnp
push
xor
and
pop
inc
adc
jecxz
aad
add
jge
ja
rcrl
movsl
inc
outsb
push
fstpl
imul
or
ret
into
pop
push
pop
dec
and
adc
imul
mov
rcrl
xchg
scas
dec
in
stos
cmp
or
jg
xchg
mov
outsl
hlt
mov
xor
or
xor
xchg
scas
lret
and
xor
add
pop
lcall
add
sbb
out
mov
hlt
add
push
push
das
into
mov
ljmp
xor
dec
pop
cltd
arpl
sub
and
aad
pop
sarl
mov
adc
in
pop
xlat
push
mov
and
sub
lds
rorb
jl
jl
dec
mov
pop
xchg
int3
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
jmp
popf
cmp
daa
stos
cmpsb
add
lret
pop
push
test
add
stos
test
add
stos
test
add
stos
test
add
lret
out
jge
push
nop
mov
inc
and
ljmp
aam
push
mov
cmpsb
jo
filds
lcall
in
and
push
mov
add
push
sahf
ljmp
rorb
mov
hlt
pop
xchg
aas
xchg
imul
adc
into
lahf
or
sahf
in
and
cmp
adc
int
sahf
and
rorb
mov
adc
cmpl
repz
xor
insl
scas
add
stos
push
push
mov
inc
int
push
mov
out
mov
or
call
and
cmpsl
add
stos
test
add
lret
jecxz
int
push
enter
xor
or
call
and
cmpsb
adc
stos
test
add
scas
test
and
cmpsb
add
lret
call
movsb
mov
or
fldcw
sub
call
and
mov
xor
mov
stos
cmpsb
add
ja
stos
cmpsb
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
movl
iret
jecxz
mov
add
call
jo
cmpsb
add
stos
dec
xor
aam
xor
stos
test
push
xor
stos
test
add
mov
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
test
add
stos
call
cmpsb
sub
xchg
dec
leave
popf
dec
adc
icebp
aam
test
mov
and
push
xchg
mov
test
and
mov
sub
pop
ret
stc
sahf
xchg
popa
xor
lahf
and
and
sub
pop
jno
outsb
cmpsl
out
or
jo
loop
push
and
cs
lock
push
int3
loopne,pt
dec
cld
int
in
sub
lods
jmp
and
cld
repz
into
icebp
xchg
dec
cmpsl
addr16
fmulp
in
and
test
push
popf
jl
or
fwait
xor
int3
sub
scas
test
sub
push
ss
mov
gs
dec
lret
jb
adc
sbb
jge
mov
cmp
mov
or
cmp
bound
lret
lods
daa
dec
stos
push
outsl
icebp
xchg
test
xorb
mov
ret
cmp
pop
lahf
repz
es
or
enter
iret
adc
out
inc
mov
in
int3
pop
pop
rorl
push
xor
shr
aam
stc
sbb
jge
jmp
negb
stos
inc
inc
add
outsl
pop
pop
jg
cmp
int
leave
or
shrb
mov
pusha
les
das
sbb
or
fscale
jp
adc
pop
filds
xor
mov
xchg
aad
enter
xor
out
insl
dec
mov
jg
mov
cld
mov
fimull
cltd
cmp
jge
cld
mov
push
mov
cld
and
call
push
sbb
les
cs
cwtl
or
add
adc
repnz
sub
push
pop
out
movsb
cmp
mov
not
xor
lods
shlb
pi2fd
in
mov
adc
jno
push
test
xor
clc
mov
mov
inc
and
aaa
flds
xchg
and
push
mov
mov
mov
sahf
loope
jae
add
jb
jb
outsb
subl
hlt
pop
out
xchg
sbb
jno
int3
and
shrl
daa
cmp
dec
in
test
or
push
sbb
mov
divb
sub
jne
push
add
push
xlat
xchg
cmc
mov
ja
in
mov
xchg
lea
mull
std
ret
add
xor
nop
repz
add
jne
stos
dec
pop
test
sarl
sti
mov
cmp
mov
cmp
or
inc
int3
adcb
and
xor
xor
jecxz
mov
enter
clc
inc
add
or
mov
push
stos
in
aam
jno
xchg
inc
loop
and
adc
xor
loopne
dec
arpl
jne
mov
rolb
shll
mov
push
dec
mov
mov
adc
mov
in
shrl
test
adc
mov
mov
adc
lods
outsl
es
add
ret
or
dec
test
cld
js
xchg
in
mov
imul
or
je
lahf
dec
jbe
call
mov
das
test
adc
imul
in
out
dec
add
testb
ror
mov
mov
jo
cld
lods
jmp
adc
dec
jg
xorb
addb
jmp
enter
push
sub
ds
cld
daa
negl
mov
out
push
xchg
jecxz
mov
dec
jns
jo
xor
roll
std
test
in
and
lahf
fisttpll
shl
push
iret
inc
js
sbb
lcall
fwait
mov
mov
pop
insb
cmpsb
sub
cmp
cmpsl
repnz
pop
jle
sti
xchg
popf
jo
pop
rorb
sbb
sbb
out
dec
or
pop
jnp
bound
daa
hlt
jge
add
sbbl
add
pop
daa
sbb
in
sub
adc
jnp
cs
outsb
outsb
mov
imull
cli
popa
push
aaa
lret
outsb
mov
shl
ds
rcl
xorb
scas
or
pop
push
sbb
gs
arpl
fwait
cld
cmpsl
and
push
xchg
xchg
push
xor
pop
or
adc
fwait
sbb
sbb
hlt
jle
insl
insb
ljmp
sahf
xchg
add
mov
cmp
iret
sbb
mov
out
pop
aaa
jb
inc
mov
arpl
pop
or
jb
dec
jne
mov
roll
inc
sub
xor
jns
mov
pop
lods
sub
and
push
pop
mov
out
inc
push
or
add
call
xchg
cmpsb
push
daa
test
sub
imul
inc
xor
xchg
adc
insl
test
lcall
mov
pop
xor
cli
sbb
movsb
in
xor
adc
pop
and
adc
jnp
dec
add
and
jae
dec
add
pop
aaa
bound
xor
popf
movsb
add
lret
mov
pushf
add
jle
insb
fcmove
mov
and
sub
cs
jbe
mov
sbb
cmp
fsubr
sub
and
shll
dec
movb
or
adc
inc
mov
cmpsl
push
imul
daa
jg
and
cmp
rolb
pop
rcrl
xchg
jge
and
imul
mov
jle
std
add
loopne
inc
inc
jbe
dec
sbbl
mov
repz
daa
or
pop
mov
adc
or
push
cmp
jae
jmp
push
lods
loop
ret
fld
lret
push
xlat
xchg
int3
jb
cs
mov
push
push
sub
push
das
and
jmp
mov
and
test
cmp
adc
aas
data16
mov
test
and
and
sbb
addr16
cld
in
push
lods
dec
add
inc
jg
pop
in
dec
push
ret
test
aaa
push
jnp
inc
sahf
sbb
incb
ret
das
in
inc
outsl
enter
ret
jb
mov
jne
or
pop
stc
dec
test
inc
pushf
jb
sub
ss
xchg
sbb
inc
jge
push
arpl
xor
inc
inc
pop
push
and
imul
data16
fs
push
cmp
mov
mov
loop
pop
jae
mov
jl
jge
xor
fmuls
xor
or
sbb
loop
idivl
push
clc
jne
dec
mov
sti
jbe
jbe
cltd
scas
stc
lea
testb
pop
into
mov
dec
stos
xor
mov
fxch
jmp
jo
out
js
mov
and
lock
jmp
cmpsl
sti
test
test
ds
sbb
push
cmp
nop
inc
jmp
fwait
xchg
imul
mov
mov
out
out
insb
pop
add
inc
pop
sub
iret
pop
outsl
cmp
sub
movsb
jmp
mov
das
xchg
push
mov
mov
in
or
movsb
rclb
mov
adc
gs
sub
shrb
inc
cmp
or
in
stc
dec
xchg
fisubs
xor
shll
adc
jo
sbb
push
out
inc
aam
dec
lods
pop
adc
gs
mov
xchg
mov
les
sarl
int
mulb
pop
sbb
sbb
mov
mov
ds
and
mov
sbb
pop
jmp
dec
std
test
lods
loop
cli
test
test
mov
sub
loope
mov
sbb
xor
ret
xchg
add
push
sub
shl
cld
jns
adc
inc
xor
jmp
push
lea
loope
push
mull
stos
mov
mov
xchg
push
pop
xchg
incb
sbb
cmc
int3
push
and
jae
adc
loope
clc
mov
enter
arpl
in
insb
cmc
mov
negb
jle
jge
xor
dec
mov
movsl
mov
jnp
cwtl
jmp
add
scas
push
cs
pop
cwtl
xlat
mov
mov
mov
loope
pop
imull
xor
imul
and
jae
dec
scas
cmp
or
pop
test
pop
xor
repz
movsl
test
lods
stos
xchg
outsl
cmp
jl
and
lods
js
push
andl
cmp
icebp
rcrl
cs
add
aad
leave
lods
stos
add
push
sbb
lcall
mov
movsb
out
xor
test
mov
sbb
ja
movsb
or
inc
inc
xchg
xchg
xchg
adc
jnp
jnp
outsl
popf
lcall
mov
inc
xchg
adc
dec
push
iret
sahf
ficoml
lods
dec
xor
jnp
popf
std
fdivl
test
jmp
je
dec
nop
dec
loope
sub
inc
lods
lret
sbb
inc
loop
jae
pop
outsl
faddl
mov
cmpsl
ss
rcl
test
scas
mov
jae
pop
lcall
or
out
gs
stos
jae
rcr
or
sbb
fldt
inc
cmpsl
jnp
sahf
cmp
shlb
mov
mov
loopne
mov
inc
mov
data16
mov
insb
in
mov
sbb
cli
lock
dec
lods
ficomps
push
mov
stc
imul
mov
arpl
aad
push
cld
jnp
mov
push
hlt
cmpl
or
dec
mov
movsl
test
bswap
adc
dec
jge
sarl
sbb
adc
movsb
in
sbb
mov
mov
dec
mov
and
and
cmpsb
xchg
xor
dec
fs
mov
mov
push
negl
mov
pop
dec
cmp
xchg
push
sbbl
mov
andl
lock
imul
pop
fcoms
push
inc
jnp
clc
xchg
pusha
pushf
pop
pop
repnz
mov
loopne
jg
fisubl
inc
xor
xor
push
mov
sub
ss
inc
xchg
cmpsl
add
in
cmc
jns
andl
mov
mov
dec
push
sub
mov
jno
inc
insb
lret
pusha
cwtl
pop
add
inc
aas
mov
mov
pop
mov
and
xchg
xor
cmpsb
or
ja
sbb
daa
cmp
cmp
mov
dec
pop
idivb
sahf
testl
out
dec
xor
orb
jl
sahf
lret
ss
mov
out
fidivs
fiaddl
in
fsubl
inc
in
les
stos
and
sbb
xor
xchg
jne
adc
arpl
mov
cmpb
mov
mov
add
pop
out
dec
add
rcl
xor
stos
or
lock
dec
loopne
add
and
cmp
adc
adc
cld
inc
ret
stos
add
loope
xchg
mov
mov
outsb
xor
int3
aas
movsb
sub
xor
xlat
loop
fwait
xor
pop
testl
mov
dec
push
jo
aaa
insl
push
sti
test
jl
test
fldt
das
js
mov
mov
jle
jge
or
inc
mov
cld
mov
sub
jb
mov
shl
lret
mov
cmc
xor
jbe
push
lahf
scas
push
mov
sub
cld
xchg
adc
push
stos
xchg
sahf
sub
mov
cwtl
pop
nop
mov
dec
inc
mov
cs
pop
mov
aas
adc
scas
dec
pusha
pop
lods
sahf
movb
shrb
mov
int
adc
xchg
inc
ja
push
cmp
cmpsb
ds
stos
push
pop
add
lods
jns
sti
adc
jae
loopne
or
ljmp
popf
inc
lock
sub
mov
imul
cmp
adc
jl
lret
cmp
dec
stos
std
pop
pop
mov
push
test
fucomi
push
add
add
add
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
