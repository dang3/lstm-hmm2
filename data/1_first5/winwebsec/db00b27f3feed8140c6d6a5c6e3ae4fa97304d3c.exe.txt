push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
movzwl
test
je
mov
push
call
add
call
jmp
call
mov
dec
imul
les
mov
loope
imul
test
pop
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
call
push
call
cs
or
cmp
aas
xorb
pop
xor
mov
jl
mov
movsb
scas
sbb
jg
mov
loopne
dec
imul
mov
add
add
pop
push
add
out
cmpsl
xor
dec
cmpsb
jbe
rcrb
sbb
dec
cltd
xchg
pop
lods
jmp
repz
and
jmp
lds
int
push
subl
int3
mov
jbe
dec
xor
fptan
cltd
add
aam
mov
loopne
cwtl
cmp
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
mov
dec
imul
popa
les
loopne
dec
imul
and
pop
loopne
stos
ljmp
inc
loopne
loope
stos
loopne
hlt
imul
out
loope
stos
loopne
or
add
out
loope
scas
loopne
dec
imul
shl
loope
stos
loopne
dec
pop
jbe
shl
jmp
scas
loopne
dec
sub
adc
out
icebp
fisubrs
jp
out
loope
mov
jp
out
loope
stos
in
loope
push
in
pop
mov
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
pop
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
cmp
out
push
aad
loopne
dec
imul
out
loope
sti
movsl
mov
out
loope
stos
loopne
sbb
bound
out
loope
stos
loopne
mov
adc
out
mov
stos
loopne
dec
imul
out
loope
mov
loope
inc
or
stos
test
test
jbe
out
loope
scas
loopne
dec
imul
out
loope
stos
mov
adc
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
out
loope
stos
loopne
dec
imul
mov
pop
into
fisubrs
fmul
push
jns
outsl
repz
nop
fisttpll
cld
stc
jl
cmp
nop
or
ret
rcrb
or
orl
outsb
fdiv
and
ss
mov
insl
pop
adc
pop
and
add
add
dec
int3
and
lret
cmp
jl
cmp
inc
mov
push
adc
ja
inc
add
sub
arpl
cmc
loopne
int3
dec
sub
xchg
xchg
in
testl
js
push
ljmp
sub
adc
add
adc
std
rolb
xor
div
sub
repnz
cmpb
fcoms
xchg
cmpb
mov
pop
or
or
cmpsl
psrad
mov
cmpsl
cmp
sub
int3
add
xchg
mov
inc
loop
in
aad
cmc
ret
jbe
int
xchg
test
shlb
pop
aas
dec
jle
loopne
loop
rcl
lods
inc
adc
pop
popf
sbb
adc
jbe
add
or
aas
cmpsb
mov
insb
or
and
rorb
cmp
inc
negl
jns
jmp
inc
lods
scas
xor
sbb
push
inc
dec
mov
xorl
stc
sbb
rorl
scas
sbb
cmpsb
mov
sbb
xor
pop
xor
cwtl
lea
test
decb
mov
sbb
lahf
lret
xchg
aas
cmp
inc
xchg
shl
subl
dec
aas
pusha
xlat
lods
adc
or
mov
xor
gs
js
cltd
cli
sub
incl
lahf
dec
imul
lods
lcall
fcmovb
pcmpeqd
cltd
cltd
mov
adc
or
iret
addr16
in
push
leave
fcmovbe
inc
shr
movsl
mov
jecxz
ss
mov
scas
inc
sbb
int
push
jmp
xor
insl
pop
negb
dec
sbb
xor
sub
xor
outsb
cld
mov
fidivl
xchg
mov
pop
sub
jmp
push
sbb
cmc
jle
sar
sbb
fwait
xchg
lods
add
iret
xchg
add
movsb
test
das
es
mov
addr16
jne
and
jae
jl
sub
push
jmp
xchg
sub
xchg
dec
aad
orb
pop
mull
insl
mov
outsl
fidivs
sarl
mov
push
mov
mov
dec
or
cs
push
or
and
arpl
pushf
sbb
lods
out
pop
out
jb
inc
mov
je
imul
mov
sbb
push
fwait
dec
lods
sub
fdivs
mov
and
or
mov
sbb
fcmovnbe
xchg
push
ret
mov
mov
push
adc
add
push
scas
mov
out
packuswb
push
pop
es
repz
mov
gs
fists
xlat
push
xor
aas
jbe
sub
mov
andb
flds
xlat
std
push
pushf
xor
ss
movsl
push
cmp
fucomi
and
sub
cmpsl
inc
sarb
pop
ficoms
leave
sbb
dec
dec
popa
sbb
jo
sahf
push
movsb
inc
or
mov
sub
jo
lret
adc
or
fadd
adc
ja
mov
mov
xor
xor
mov
test
mov
jp
mov
jmp
out
inc
lods
adc
sub
mov
jnp
mov
mov
sar
xchg
rol
push
sahf
cmp
sbb
add
xlat
add
pop
out
arpl
arpl
xchg
xlat
fwait
push
sahf
xchg
pop
imul
ds
call
fistpll
xchg
push
add
push
fwait
in
rcr
xchg
pop
pop
push
sbb
pop
cli
adc
jp
jbe
and
push
fisubrl
mov
daa
jns
popa
add
lcall
aas
and
cmc
mov
std
jg
negb
je
jno
lock
shlb
push
cs
cmp
jb
mov
dec
in
and
leave
roll
jge
pop
mov
push
jp
fmull
xor
xor
loopne
cltd
inc
mov
inc
adc
movsb
sbb
lret
aam
addr16
sbb
sub
roll
inc
sub
cmp
in
mull
and
xchg
inc
mov
cld
ret
insb
dec
dec
les
ljmp
cmp
dec
inc
icebp
dec
lods
loop
jns
outsb
sub
loop
cmp
fimull
xor
aas
add
push
dec
mov
shrb
out
daa
test
out
inc
sbb
adc
mov
xchg
jl
cmpsb
inc
jmp
ds
out
cwtl
addr16
fisttps
in
and
cmc
in
lahf
cmc
add
mov
push
insl
aaa
add
fstpl
scas
xchg
mov
imul
sahf
clc
xchg
dec
xor
jle
cmc
sbb
jb
daa
and
inc
ss
fbstp
or
add
and
aaa
imul
push
jo
outsb
lcall
fdivrl
jb
pop
lea
mov
lea
in
in
jbe
xchg
sbb
xchg
jp
test
jbe
jmp
pushf
andb
nop
xchg
pusha
adc
push
add
cmp
dec
add
fldcw
cli
pop
loope
or
jecxz
icebp
je
inc
jecxz
fwait
and
mov
in
push
aam
inc
push
add
fcompl
cmp
ret
pusha
sbb
adc
fcomps
das
sub
mov
ss
imul
xchg
add
sbb
and
cmp
je
or
xchg
pop
fisubs
orb
xchg
mov
fnsave
cmp
xor
xlat
xchg
loop
ret
jns
ljmp
pop
and
pop
fdivl
jge
jnp
inc
insb
outsl
scas
add
mov
in
xor
loopne
push
fdivs
shrb
mov
popf
ret
and
dec
call
fmul
add
test
aaa
mov
or
xor
gs
cwtl
xor
mov
push
mov
mov
xchg
mov
or
or
pushf
daa
stos
fimull
inc
loope
sub
pop
or
js
or
add
imul
inc
inc
in
in
mov
cld
stos
xor
in
out
cmp
mov
scas
xchg
push
pop
and
test
popf
icebp
sub
arpl
jmp
mov
push
nop
add
mov
xchg
mov
cmp
or
mov
jle
adc
sub
inc
pop
ret
sti
sub
sbb
adc
ljmp
jmp
push
or
add
test
lahf
xlat
jl
daa
dec
in
jecxz
fildll
sub
add
xchg
sbb
push
adc
icebp
or
and
test
and
mov
mov
xchg
stos
mov
jne
bound
pop
sbb
test
lds
cltd
bound
or
push
sub
dec
ds
push
mov
inc
and
mov
int
or
mov
inc
fidivs
xor
jnp
es
add
test
pop
fcomps
mov
push
in
xchg
push
xor
xchg
gs
pop
imul
jbe
xchg
lret
bound
imul
mov
or
loop
mov
out
les
mov
cmp
call
scas
jle
cmpsl
js
imulb
int3
mov
cmp
in
fwait
inc
btrl
enter
add
mov
shrl
pushf
jg
adc
leave
pusha
movsl
je
xor
push
ss
jge
test
ljmp
shrl
and
int3
rorl
cmp
iret
stos
pop
leave
and
push
dec
cld
sub
mov
movsl
negl
jnp
test
xchg
fs
dec
std
pop
ljmp
test
mov
add
push
xchg
or
mov
cli
clc
flds
in
ds
negb
lods
push
in
xchg
shrb
or
add
pop
lret
xor
pop
and
adc
fcomps
ja
mov
or
inc
jmp
push
push
push
or
dec
ret
push
mov
mov
pop
and
jg
dec
mov
ljmp
int3
pop
insb
cmp
or
sbb
jne
sahf
push
xorb
pop
roll
mov
subl
aas
inc
cwtl
sbb
or
mov
jmp
mov
out
add
lea
push
cmp
inc
cmp
adc
mov
mov
xor
maxps
xchg
pop
ret
cmp
movsl
cwtl
in
inc
aam
int3
mov
mov
mov
sbb
out
jns
loope
arpl
adc
xchg
dec
call
in
aaa
xchg
gs
jge
adc
push
inc
push
test
or
pop
popa
repz
inc
adc
inc
fs
jle
cmpsb
je
sub
cli
xchg
pop
cwtl
dec
mov
insl
inc
mov
jno
mov
jne
mov
mov
iret
mov
jg
push
out
repz
pop
fs
adc
les
mov
cmp
and
icebp
jne
push
mov
stos
sbb
mov
push
cmpsb
leave
rolb
fwait
lods
xor
lcall
lcall
test
lods
sub
xor
stc
cmp
mov
or
add
push
in
jnp
push
pop
pop
and
pushf
adc
pop
xchg
and
xchg
pop
jae
jg
dec
jns
enter
mov
mov
pop
aaa
xchg
and
pusha
int3
pushf
xchg
mov
mov
fbld
cwtl
push
addl
cwtl
leave
and
cwtl
xor
push
in
lret
insl
inc
js
aad
lds
out
xchg
pop
ds
imul
fnsave
adc
jge
outsb
jns
movsl
sub
fistpl
test
int
ret
jp
adc
and
sahf
ja
jmp
lcall
outsb
and
stc
push
sbb
sbb
mov
adcb
stos
ljmp
push
outsl
mov
aad
fists
mov
mov
xor
mov
sub
mov
cwtl
inc
ljmp
sbb
and
adc
inc
rorl
shll
bound
pop
xor
sbb
ds
into
jmp
outsb
sbb
mov
add
mov
sub
and
ds
dec
add
jle
ret
das
test
mov
scas
inc
jns
decb
cmp
xor
adc
push
add
test
movsb
jg
push
jp
rcr
jne
data16
dec
add
in
ror
xor
es
je
cwtl
xor
icebp
push
mov
push
push
or
repnz
mov
dec
mov
xlat
je
ja
outsl
xchg
out
dec
cmp
jge
mov
aad
pop
stos
pop
stos
je
add
push
sbb
mov
sub
pop
rorb
mov
in
pop
imul
clc
xchg
adc
leave
daa
xlat
popa
inc
cmc
xchg
jl
inc
sbb
andl
xchg
sbb
stos
bound
shlb
clc
int
stos
lea
loop
aaa
leave
push
outsl
mov
stos
in
notb
fdivrs
push
ficompl
insb
repz
jae
cmc
insl
xchg
inc
pop
xchg
sbb
lcall
mov
movsl
rcrb
sub
clc
cs
dec
daa
adc
scas
stos
fiaddl
push
jo
pop
mov
xor
push
cld
jbe
pop
filds
mov
sub
push
fstpt
and
pop
stc
and
in
lcall
aaa
mov
or
js
sbbl
cmp
out
dec
jno
inc
imul
pushf
push
or
push
nop
sbb
into
sbb
mov
out
outsl
stc
sbbl
pushf
mov
cmpsl
icebp
xchg
in
dec
cs
jle
lods
xor
and
lods
pop
inc
aad
hlt
in
in
mov
push
out
aaa
sub
pop
inc
shrb
dec
jae
xor
out
enter
insl
xchg
and
push
adc
movsb
add
sub
mov
cs
push
adc
dec
mov
or
das
inc
sbb
sbb
cmpsb
and
out
pop
repz
insb
jp
loop
repz
mov
fcmovnu
inc
subl
mov
sbb
movsb
out
mov
ret
aaa
pop
scas
mov
enter
lcall
xor
dec
lods
aad
dec
pop
cmp
jge
ja
push
ss
enterw
mov
jmp
add
ds
and
addr16
pop
jp
or
sub
cmpsb
mov
mov
icebp
pusha
loopne
jp
mov
in
in
inc
sahf
loopne
iret
insl
jnp
movsb
pushf
mov
add
xor
jge
or
mov
sub
jnp
jb
dec
mov
jmp
or
shll
and
lea
shrb
xor
push
das
lods
sub
lret
lods
push
mov
xor
xchg
pop
cmpsb
movsl
xchg
jg
call
mov
push
push
and
mov
movsb
inc
addr16
xchg
fnstcw
xlat
test
push
cmc
sbb
mov
cmp
mov
repnz
push
and
sub
mov
in
clc
mov
shl
push
xor
add
adc
call
add
mov
add
xor
jnp
or
xlat
xor
fsub
out
fisttps
push
daa
aaa
mov
sub
addr16
adc
xor
enter
scas
int
xchg
sub
mov
adc
sub
xchg
sub
fucomp
je
pushf
mov
in
and
fmull
sbb
fs
nop
and
add
and
push
aad
xlat
sub
xchg
jge
or
int3
add
cmp
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
push
push
push
call
mov
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
push
push
mov
push
call
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
dec
test
mov
jno
cmpb
movl
ret
or
into
cmpsb
stos
cmp
sub
jb
push
enter
mov
aaa
out
jmp
lret
mov
mov
pop
mov
inc
lds
mov
adc
ljmp
aam
enter
addr16
push
ds
cld
mov
mov
mov
out
push
pusha
test
lods
adc
inc
inc
shlb
clc
lahf
lock
mov
cmp
rcl
mov
daa
fstpt
outsl
fprem1
lods
outsb
inc
das
mov
sbb
arpl
sub
lret
mov
push
jge
pop
jae
cld
push
pop
lahf
adc
loop
xor
fists
fistpll
cmp
inc
repz
ljmp
add
push
dec
push
sbbb
pop
mov
hlt
mov
jge
insb
stos
cli
dec
pop
pop
mov
jg
inc
mov
cld
inc
jae
mov
xor
cmc
negl
xchg
sbb
xchg
xchg
mov
push
gs
lods
jbe
adc
nop
sti
or
mov
dec
mov
xor
push
xchg
imul
add
sbb
fstpl
mov
popl
sti
jae
cmp
nop
pop
mov
mov
popf
jae
out
cwtl
sbb
loop
cmp
xorl
insb
fdiv
xlat
repz
jb
push
insb
in
mov
shll
mov
in
dec
xchg
dec
inc
nop
mov
mov
jp
pop
repnz
or
pop
dec
jo
incl
dec
gs
sbb
aaa
fwait
fwait
call
ljmp
test
test
ja
pop
sub
insl
dec
sub
aam
sahf
jb
adc
sub
xchg
aaa
into
mov
dec
hlt
clc
inc
jp
cmp
jl
pusha
sti
rclb
ffreep
repnz
mov
add
repnz
dec
xchg
in
jns
push
and
mov
sti
sub
enter
jmp
sub
pop
movsl
mov
das
pop
mov
cltd
call
cs
sub
sbb
xchg
les
jbe
jg
data16
test
aam
push
adc
rorl
or
scas
lock
mov
cmp
xor
xlat
xchg
pop
dec
nop
push
xchg
std
xor
pop
fistl
pusha
movsl
rorl
test
movq
mov
scas
aas
nop
pop
sahf
scas
mov
pushf
rcll
divb
in
nop
in
into
mov
loop
mov
pop
nop
inc
das
mov
or
int3
fs
sbb
sbb
xchg
pop
add
test
leave
ja
cmpsb
pop
cltd
jle
and
lds
add
adc
cmp
cli
push
xor
or
cmp
and
jbe
ret
inc
mov
push
aad
iret
cmp
das
push
test
xchg
jle
test
lods
adc
mov
shrl
js
push
mov
pusha
push
out
sbb
push
jae
iret
mov
movsb
cmpb
hlt
adc
sub
std
jne
sub
fldenv
loope
pusha
sbb
and
jo
imul
push
mov
aaa
mov
pop
fs
ljmp
movsb
xchg
push
push
outsl
push
dec
mov
scas
mov
popa
addr16
inc
mov
je
lods
xlat
sar
sub
xchg
popa
sbb
adc
imul
ficomps
test
hlt
inc
jne
aad
std
add
imul
addb
mov
repnz
rcrb
mov
inc
popf
sub
out
das
ljmp
scas
cmp
pusha
pop
dec
cld
pop
les
mov
int3
ds
jmp
xlat
aas
hlt
push
mov
nop
inc
cmp
xor
or
insl
mov
out
push
xchg
cltd
cmp
outsb
loop
mov
and
sbb
in
mov
lods
and
icebp
in
js
mov
jne
adc
jmp
xchg
repz
mov
lods
sbb
adc
push
adc
ss
or
lods
push
adc
adc
cmp
or
push
jne
dec
lds
sub
cli
outsb
xor
dec
pop
movsl
lcall
test
aam
mov
gs
fidivl
outsb
sbb
nop
mov
push
ja
rorl
pop
or
mov
addr16
into
cli
shlb
loope
loopne
xor
push
push
fdivrs
ret
negb
cltd
call
or
push
icebp
insl
pop
js
jo
fcmovb
push
lahf
imul
or
cmpsl
lret
and
mov
lcall
lea
push
inc
lds
cltd
xchg
push
insb
dec
or
addr16
pop
stos
jae
jmp
int
add
es
jmp
adc
jbe
push
and
jecxz
sub
mov
aam
adc
dec
add
push
sub
push
mov
mul
lret
add
divb
loop
or
mov
xchg
xchg
sbb
shl
sub
adc
pop
imul
cmp
inc
aaa
inc
lea
mov
inc
adcl
jb
jge
insb
mov
fadds
and
loope
fistl
hlt
inc
nop
test
mov
xchg
popf
test
scas
daa
out
cmp
addr16
popa
jge
dec
pop
add
mov
xchg
fs
push
fmull
movsb
leave
sbb
test
loopne
lock
mov
arpl
pop
jne
test
lods
stc
gs
ficomps
fwait
and
test
cmpsb
or
stc
cmp
xor
int
sahf
jb,pt
outsl
mul
add
sub
or
push
icebp
movsb
rcrl
sub
mov
out
aam
xchg
stos
and
sbb
pop
cltd
push
fldenv
in
push
xchg
mov
pop
inc
inc
inc
pop
cmp
fwait
xchg
add
aas
inc
test
imul
fstp
nop
jp
lahf
push
aaa
outsb
pop
lods
push
or
push
divb
mov
or
in
lods
pop
cmc
pop
mov
inc
dec
jecxz
jnp
or
rorb
imul
sub
int3
pop
std
ja
ss
mov
ror
push
adcb
leave
pop
cmp
int3
push
movsb
pop
sbb
movsw
mul
fdivrs
pop
or
sub
and
mov
sbb
ret
das
clc
mov
push
testb
shr
call
push
dec
jge
ret
stos
sub
fdivl
shrl
adc
xor
inc
pop
int
cmp
fs
jne
dec
mov
fldlg2
or
rcr
pop
sbb
dec
ja
les
pop
clc
add
ret
fisubs
mov
push
and
inc
push
adc
fildl
stos
pop
jge
rcr
xchg
mov
subl
mov
outsb
cmp
loop
jg
adc
fbstp
dec
leave
testb
inc
ja
loope
jg
stos
lcall
sub
push
mov
xchg
mov
xor
cmp
sbb
mov
xchg
sbb
adc
das
testl
cmpsb
imul
and
cmpsb
popa
pushl
lods
xor
mov
pop
pop
push
dec
sub
xchg
xchg
hlt
jae
mov
pop
das
mov
lret
lahf
outsb
imulb
push
sbb
je
int
mov
es
nop
movsb
lea
hlt
mov
pushf
mov
nop
in
and
mov
repz
jg
imul
xchg
bound
push
xor
mov
mov
push
cmp
mov
jp
repz
mov
sub
stc
or
sbb
dec
sbb
icebp
mov
or
fnstsw
dec
xchg
pop
jl
inc
dec
cli
es
std
pop
idivl
adc
outsb
jo
mov
pop
mov
inc
mov
aam
movsl
jns
and
jno
mov
push
mov
cs
jo
insl
and
and
std
pusha
test
jmp
mov
inc
add
lcall
inc
dec
dec
xchg
cmp
inc
add
jl
dec
fistpll
in
outsb
ret
fnstsw
pop
or
xchg
jo
push
sub
pop
outsl
test
sbb
jno
les
scas
xor
gs
cmp
movsb
dec
daa
xchg
fcom
push
cmc
roll
and
fildl
lret
or
in
cmp
push
xchg
inc
push
imul
xchg
es
add
call
pop
add
adc
es
fidivrl
jns
ficoms
push
mov
in
and
outsl
sahf
sub
sub
ret
test
adc
push
imul
lds
std
andl
pop
pushf
adc
jmp
push
in
jne
jcxz
imulb
sbb
dec
popf
dec
je
pop
fisttps
inc
inc
ljmp
stos
mov
mov
insl
and
cmp
xchg
jl
xchg
jne
jno
aam
sub
repz
push
sub
rorb
jl
rcll
or
or
push
mov
clc
sub
jae
jnp
adc
cli
jne
dec
jne
mov
cli
loopne
aas
popf
js
cmp
inc
cmp
xor
dec
neg
int
dec
sub
shll
fnstenv
or
jae
fsubl
dec
test
push
std
inc
hlt
out
es
and
clc
mov
sub
repnz
rcrl
mov
push
sub
iret
adc
sub
cltd
daa
add
lret
repnz
lea
cld
sbb
mov
nop
inc
mov
inc
movb
lods
lret
sahf
xchg
mov
add
cmp
jg
adc
sahf
sbb
in
jbe
ja
aaa
push
dec
mov
fwait
sbb
stos
or
mov
loopne
insl
or
adc
addl
addr16
add
das
repz
neg
rcl
pop
xchg
shlb
mov
dec
cltd
or
push
add
jno
cmc
pop
cmpsl
in
fists
scas
pop
cltd
int
add
cmpsb
cs
nop
mov
jle
outsb
flds
inc
jbe
cmpsb
sbb
cmp
test
xor
cmp
test
mov
dec
fcompl
std
bound
fiadds
popf
leave
pop
sbb
add
cmp
sbb
inc
lret
mov
mov
in
add
xchg
sub
pop
mov
fucomi
xchg
cmpsl
es
xchg
shll
fnsave
pop
repnz
fisttps
cmp
mov
mov
mov
orl
push
test
cmp
in
ja
inc
rorb
sbb
int3
lock
inc
cwtl
jno
scas
in
xchg
stos
enter
jb
cmp
add
xor
xor
rorb
push
outsb
outsb
push
mov
aas
jp
je,pn
test
arpl
xchg
cmp
ret
cwtl
out
xor
jo
pop
mov
fucomi
shrl
push
or
mov
dec
cmp
jmp
or
cmp
sbb
test
cmpsb
in
mov
mov
push
mov
std
popf
add
aas
int3
lods
insb
cli
xchg
es
cmc
mov
jle
inc
loop
mov
lods
rcl
fdivl
int
pop
inc
fsubs
je
and
adc
fcmovbe
stos
adc
add
mov
lods
cmp
pushf
or
xchg
sub
xor
jb
sub
in
sbb
or
in
inc
inc
rcl
cmp
mov
sbb
xchg
jl
pusha
push
out
jg
xor
roll
mov
mov
arpl
mov
addr16
jo
enter
mov
adc
jnp
dec
mov
xchg
xor
adc
xchg
push
int3
jnp
shl
repz
ret
js
pop
test
cld
loopne
xor
sbb
cwtl
movsl
stos
loope
push
jmp
mov
int3
push
jmp
add
cmpsb
adc
test
movsl
div
les
sti
and
outsb
test
mov
mov
icebp
mov
in
jnp
mov
vpunpckhwd
jl
adc
mov
mov
test
dec
lds
adc
idivl
addl
in
mov
mov
out
jbe
push
or
mov
lret
dec
push
push
inc
lcall
in
nop
leave
inc
into
push
ds
push
lcall
arpl
fmull
mov
test
mov
jae
xchg
add
pop
cltd
mov
int
push
pop
into
js
popw
push
jns
insl
jl
or
stos
adc
jecxz
mov
jb
adc
mov
cmp
sbb
lahf
lock
mov
addr16
mov
icebp
cmp
sbb
rorb
sbb
jae
inc
mov
mov
mov
jbe
ja
dec
mov
and
aaa
cmp
repnz
rolb
loop
lret
fstl
fnstcw
ret
pop
mov
mov
sahf
jnp
pop
pop
mov
popf
push
pushl
push
ss
xchg
loope
stos
push
push
xor
mov
add
pushf
dec
pusha
dec
dec
xchg
adc
pop
inc
xchg
cmp
test
cmp
inc
cmp
xchg
in
imul
clc
movsl
or
repnz
pop
ss
cmp
out
insl
push
push
inc
ret
stos
mov
mov
mull
push
jae
testb
mull
jbe
dec
dec
mov
xchg
mov
insb
cwtl
xchg
add
and
dec
sbb
in
dec
sbb
lea
mov
xor
sub
fimull
aam
in
and
mov
mov
cmp
addb
xchg
xchg
out
in
push
lods
mov
iret
outsb
sub
out
scas
jg
pop
inc
outsb
mov
scas
inc
xchg
lods
or
jno
mov
ds
or
das
in
ret
pop
cltd
lret
mov
repz
out
jne
cld
mov
pushf
dec
push
jmp
icebp
in
nop
cld
cmpsl
mov
xor
popf
or
cli
xchg
les
push
or
adcb
test
cltd
jecxz
cmpsl
ja
mov
push
imul
inc
xchg
sbb
inc
imul
stc
cmp
addr16
mov
addr16
pop
inc
dec
rdtsc
sub
int3
hlt
xchg
test
movsb
int
out
lods
loope
mov
divl
pop
pop
xchg
pusha
inc
std
hlt
frstor
rcrl
das
add
cld
sbb
mov
fsubl
aam
jbe
cmp
daa
ljmp
and
mov
push
xchg
insb
push
decl
shrb
add
cmc
inc
mov
dec
stc
out
out
popa
jo
rol
or
cli
in
mov
sahf
clc
in
loope
test
mov
lods
dec
rclb
aad
decl
repnz
lahf
adc
dec
pop
cli
xchg
mov
or
jae
filds
or
jae
in
xor
mov
xchg
in
jmp
aas
scas
popf
jnp
test
out
push
das
call
imul
lahf
and
ret
sbb
cltd
mov
xchg
cmp
cmp
inc
leave
and
lahf
test
xchg
mov
cltd
push
pop
iret
pop
int3
or
lds
xchg
int3
arpl
adc
dec
clc
add
adc
mov
out
push
push
push
mov
jne
xor
lahf
cmp
pop
ret
or
xchg
mov
and
in
les
loopne
mov
sahf
iret
jecxz
daa
mov
jb
fcompl
adc
push
loope
sbb
fidivs
les
pusha
mov
aam
outsb
jbe
jp
pop
ds
out
mov
sbb
imul
inc
shrb
pop
sbb
icebp
in
nop
xor
push
loop
jmp
mov
xlat
pop
jo
int3
les
clc
repz
fwait
bound
add
and
lock
or
decl
sbbb
and
jl
lods
out
mov
pop
enter
lock
arpl
jns
push
push
or
arpl
mov
mov
jmp
push
xor
adc
test
and
mov
inc
mov
addr16
or
repnz
arpl
sbb
mov
push
das
mov
sub
shr
push
stc
je
cmp
mov
jle
orl
div
adc
repz
mov
lcall
or
in
or
mov
mov
push
dec
adc
inc
mov
push
call
daa
cld
sub
or
pop
push
cmp
lcall
mov
js
inc
orb
fwait
in
jl
push
out
sbb
pop
pop
clc
xchg
jle
aas
jg
xchg
xor
test
and
mov
inc
insl
lods
movsl
dec
cmpsl
scas
pop
dec
popf
insl
outsb
mov
pushf
mov
sub
out
outsb
xchg
repnz
and
and
and
jns
push
insl
xor
arpl
ret
jle
mov
fistpl
daa
push
jno
adc
jmp
outsl
jmp
jbe
push
xchg
sub
stos
dec
dec
mov
mov
lret
dec
push
popa
inc
stc
int
xor
ret
xor
std
lods
dec
aam
xchg
stos
ss
in
popf
jmp
add
sahf
in
mov
std
cmp
imul
xchg
out
test
push
jnp
sub
xchg
aad
mov
adc
lret
das
fsubrl
fadds
mov
outsl
mov
mov
add
aad
popf
xor
aas
outsb
jns
push
jbe
arpl
and
xor
mov
aam
inc
ds
ss
rol
sub
or
fimull
and
clc
mov
add
andps
mov
pop
inc
lahf
dec
inc
jmp
jmp
shrl
cmp
and
ret
ljmp
and
andl
lahf
out
daa
xchg
iret
fldt
test
cmc
mov
xchg
outsb
mov
js
dec
add
mov
adc
syscall
cmp
lods
fadds
xchg
fnstsw
xchg
bound
mov
adc
dec
jle
adc
movsb
sbb
fucom
leave
jb
mov
cli
aas
and
sbb
or
das
in
outsl
shlb
lret
and
cmp
xchg
mov
push
sbb
sbb
loop
int3
mov
add
mov
sub
pushf
and
outsb
inc
inc
into
roll
test
sbb
je
repnz
pop
stos
enter
mov
sub
mov
repnz
imul
test
fisubrs
sbb
outsl
or
xchg
push
pop
mov
scas
stos
ds
repz
shll
push
or
into
test
sbb
lahf
cmc
aaa
sahf
cwtl
call
addr16
les
push
sub
push
and
daa
imul
call
sbb
inc
scas
push
adc
mov
aaa
jg
or
cld
sbb
sub
mov
es
fistpll
lret
or
rolb
test
pop
jno
xchg
mov
insb
clc
insb
pushf
cli
push
repnz
aas
xlat
push
ss
jo
pop
mov
xor
rcl
scas
mov
insb
mov
mov
adc
lods
and
pop
add
orb
js
imul
mov
mov
push
jnp
iret
jecxz
fsubs
adc
cli
pop
or
lods
cwtl
xchg
fildll
add
or
ljmp
sti
inc
arpl
jnp
inc
fidivrl
icebp
xchg
sbb
jbe
hlt
push
cli
int
incb
mov
xchg
xor
arpl
add
cmp
xor
add
push
pushf
fcoms
mulb
add
jge
jge
lret
sub
test
sub
inc
xor
stc
std
push
pop
push
lods
sti
inc
jno
es
ficoms
insb
pop
cmp
imul
lock
add
shlb
adc
loopne
test
shrb
adc
aaa
push
add
sbb
add
mov
das
lods
adcb
xor
adc
out
pop
mov
jle
inc
dec
or
call
inc
into
sbb
inc
loop
sub
repz
insb
add
loope
mov
inc
mov
sti
prefetch
shrb
or
push
leave
mov
jo
in
call
push
add
cmc
xchg
pop
negl
pop
or
mov
mov
mov
cmpsl
or
fdivrs
stos
add
push
aad
xor
mov
out
lret
out
inc
in
cmovne
jo
subb
movsb
lcall
imul
call
fistl
adc
ss
mov
xchg
push
out
mov
dec
imul
lds
les
jmp
aas
fists
mov
rclb
push
loop
cmpsb
sub
pop
int3
xor
inc
jecxz
pushf
popl
aam
xchg
xchg
lahf
mov
mov
les
cmc
insb
add
xor
pusha
mov
xchg
movsl
inc
pop
pop
sub
pop
pop
fdivrl
or
outsl
aaa
and
xor
pop
push
stos
je
xchg
dec
jl
mov
xor
pop
mov
lret
lods
pop
ret
rcrb
rol
and
mov
das
cs
push
jnp
sub
leave
xchg
aas
pop
test
jne
inc
andb
ljmp
dec
and
add
xchg
sbb
int
orb
cmc
rorb
and
imul
mov
xor
test
inc
loop
pop
jnp
jns
maxps
xor
hlt
or
jge
dec
loope
mov
icebp
mov
push
cld
cmpb
cmpsb
stos
frstpm(287
lret
jae
insb
mov
outsb
loopne
outsb
fisttps
shl
inc
jae
ret
outsb
sbb
xchg
pop
pop
mov
mov
jno
int3
adcb
ffree
push
mov
cmpsb
into
dec
sub
test
add
xor
in
and
nop
cmpsb
sbb
jl
imul
es
add
mov
or
push
in
lret
daa
adc
out
ret
sbb
lods
xchg
je
inc
dec
and
mov
dec
push
test
inc
insb
pop
xchg
mov
mov
dec
jp
popf
sub
pop
add
jnp
sti
loopne
loope
lcall
adc
xchg
lcall
mov
jno
test
mov
inc
idivb
js
sbb
and
std
push
xchg
sub
in
iret
add
out
pusha
lcall
test
lds
es
mov
mov
adc
ja
lahf
and
std
cmp
mov
mov
repz
je
sbb
sbb
inc
mov
cmp
jp
shrl
int
push
dec
adc
nop
incb
add
lds
or
loop
inc
int3
push
nop
jnp
out
or
scas
xor
inc
shl
cmp
leave
and
xchg
cmp
loop
push
inc
pop
cli
xor
outsb
pop
daa
inc
popa
xor
mov
ds
aas
jl
ljmp
sar
stc
sub
call
mov
fs
or
jno
push
or
sub
mov
cmp
out
jge
xchg
pusha
stos
ljmp
and
loop
xor
sub
cmc
cmp
mov
or
xchg
call
ljmp
fcmovnbe
insb
fbld
mov
fists
ljmp
imul
test
adc
pusha
fwait
jno
inc
outsb
pop
sbb
jbe
cmp
cmp
pop
jb
enter
stc
sub
xchg
mov
std
sbb
shll
pop
scas
cmp
jno
add
pop
sub
repnz
inc
mov
push
sub
pop
push
mov
sub
pop
jl
mov
add
ljmp
aaa
jle
nop
ljmp
push
test
adc
popa
mov
xor
sbbl
mov
jb
push
inc
sbb
incb
mov
lret
test
cmp
cmp
jae
xor
mov
sarl
pusha
inc
call
inc
add
lret
loope
pop
dec
mov
mov
and
push
dec
imull
call
sbb
push
add
jbe
je
cmp
lock
cmc
out
pusha
lock
push
rep
sub
pop
aaa
dec
xchg
orl
and
shrb
inc
sbb
jl
adc
cs
insl
fs
dec
inc
or
ficoms
add
xchg
push
stos
mov
inc
aam
outsb
lret
add
sub
test
sub
and
xchg
notl
lea
enter
dec
arpl
or
adcb
sub
or
repnz
arpl
in
pop
adc
xchg
and
mov
dec
sub
arpl
imul
pusha
out
dec
fnstsw
push
lret
mov
push
out
xchg
push
movl
mov
sbb
pop
xchg
cmp
jmp
add
or
inc
pop
xor
or
xor
jnp
addb
andl
popa
xchg
lret
inc
test
jmp
jb
insl
dec
stos
and
outsb
jge
and
fcmovne
xchg
dec
stos
scas
and
imul
mov
sub
fcmovnb
pop
cmp
cld
mov
jo
xor
dec
jb
ss
insb
sub
fimuls
xor
sub
data16
cmp
xor
mov
xchg
mov
xchg
jnp
call
inc
xchg
idivl
mull
adc
xchg
push
cmpsb
cltd
hlt
sub
push
es
push
aas
and
xchg
cmc
movsl
pop
pop
movsl
dec
test
push
or
shlb
out
test
push
test
adc
cmpsl
xor
leave
pop
ds
mov
out
call
dec
or
sub
imul
mov
jo
jo
jmp
clc
test
negb
pop
push
sti
rcrl
mov
mov
scas
notb
in
mov
mov
xor
cltd
xchg
adc
fcmovb
xor
stos
push
inc
outsb
mov
sti
ds
pop
dec
jg
xor
inc
mov
pop
fsubrl
push
ds
popa
js
lcall
dec
pop
sbb
stos
mov
out
repnz
push
arpl
xchg
sahf
pop
mov
das
out
dec
scas
add
adc
rcl
js
and
jmp
add
pop
aas
push
dec
aaa
or
test
mov
push
pop
adc
or
cmp
into
push
xor
sbb
and
outsl
outsb
lock
int3
mov
fcmovb
and
cmp
test
shl
mov
mov
fldl
test
outsl
pop
stc
testl
fsub
pusha
ljmp
int
jne
fucomp
mov
mov
loopne
cmc
dec
cmp
mov
aam
mov
pop
adc
inc
inc
add
inc
pop
into
mov
push
fneni(8087
mov
test
mov
push
in
jne
cld
mov
ret
loope
ffree
or
cmp
pop
lret
sbb
cwtl
and
or
cmp
mov
xor
sbb
and
ficompl
movsl
xchg
into
lret
pop
outsl
dec
in
dec
sbb
jae
mov
mov
and
dec
jg
mov
dec
mov
push
mov
std
dec
in
mov
nop
sub
sahf
pushl
mov
dec
xchg
xchg
push
sahf
xchg
add
jge
push
mov
icebp
fiadds
shll
jns
adc
push
out
cli
rcll
js
cltd
adc
fisubrs
sbb
clc
sbb
ljmp
push
jp
cmp
and
aam
repnz
icebp
in
dec
and
sub
or
push
mov
sar
pop
xchg
mov
mov
movsb
lds
inc
aas
add
mov
iret
cmp
jp
daa
in
enter
add
pusha
sahf
fdivrs
inc
orl
mov
test
mov
hlt
ror
addr16
mov
hlt
decl
in
jle
rorb
sbb
pop
mov
jns
int
into
jnp
cmpsl
in
adc
andl
rcr
jle
cmp
lea
jnp
or
jp
jle
mov
loopne
jg
js
dec
and
shll
mov
or
adc
push
sarl
movsl
popa
xchg
fidivl
lock
xchg
jo
xchg
popf
jle
addr16
pop
or
and
cmp
fistl
push
mov
sub
popf
fldl
cli
dec
xchg
cli
mov
cwtl
push
inc
inc
pop
cmp
jl
sbb
add
incl
push
stos
into
cmp
ret
push
leave
ret
movsb
and
xor
insl
out
and
repnz
movsl
rcl
std
cwtl
sti
cmp
ss
dec
popf
stos
test
mov
or
jo
fwait
push
or
fcoms
movsl
dec
call
or
add
outsl
ret
add
jbe
jns
xor
dec
in
mov
and
mov
aas
jns
sbb
shl
mov
out
mov
es
inc
fdivs
test
dec
sbb
mov
leave
xchg
push
shll
and
dec
mov
push
mov
push
imul
cli
insl
mov
xor
sbb
xchg
into
cmp
es
xor
repnz
aas
mov
std
enter
pop
inc
sub
repz
xor
ja
pop
push
sbb
hlt
ljmp
cmc
test
and
mov
push
fisttps
lea
sbb
dec
test
loope
or
inc
add
int
movsb
rcl
xchg
mov
jo
jo
js
cs
adc
jns
enter
pop
arpl
mov
mov
dec
cmc
fs
pop
movsb
jecxz
outsl
lds
in
in
jmp
imul
cli
xchg
bnd
insb
mov
subb
or
xlat
mov
sub
inc
jl
xlat
sub
push
int3
xor
xchg
inc
mov
mov
enter
dec
mov
jecxz
sub
lcall
enter
mov
push
mov
lret
imul
mov
jbe
pop
mov
ret
test
test
xor
repnz
pop
out
pop
enter
je
lret
lock
aaa
push
sbb
ds
andl
std
mov
lock
fildl
lahf
scas
hlt
cmp
mov
and
push
addr16
mov
scas
mov
cmp
push
xor
imul
xchg
and
icebp
inc
xchg
inc
mov
xchg
ss
fstl
lcall
mov
in
shll
push
dec
outsl
xor
stos
movsb
sub
orl
and
lret
dec
fadds
mov
dec
pop
add
pop
nop
jp
imul
and
fdivrl
add
test
sbb
repz
push
add
rcrb
inc
into
hlt
xlat
faddp
pop
ret
jp
xchg
jbe
xchg
mov
fcomps
pop
or
sbb
aam
sub
lret
insb
std
int
xlat
inc
js
xchg
sbb
mov
icebp
xchg
je
jb
adc
sarb
cld
ss
pop
shrb
xchg
shlb
sbb
loopne
or
sub
cmpsb
jo
sub
mov
push
inc
outsb
lcall
out
daa
push
imulb
or
ljmp
lods
out
fiadds
out
dec
pop
lock
push
jg
lea
icebp
das
push
jae
aaa
fwait
gs
or
outsl
mov
xchg
mov
fcmove
jns
insl
rep
popa
and
cmpsb
leave
js
stos
movsb
out
push
xchg
sub
gs
mov
ret
sti
int3
or
daa
call
mov
fistpll
and
insb
inc
fwait
sarb
mov
sub
push
outsl
mov
icebp
xchg
mov
sub
add
aam
jne
cs
inc
cmpsb
sbb
sub
mov
add
and
mov
cmp
pop
sub
lahf
push
mov
enter
outsl
and
loop
and
adc
sub
mov
mov
cmpl
mov
mov
ret
mov
cltd
and
cmp
mov
rorl
sub
xchg
out
inc
or
sbbb
add
and
inc
jmp
fidivs
int3
in
or
mov
push
mov
push
movsl
in
xchg
int3
cmp
xor
sbb
out
repnz
xor
inc
sbb
adc
ljmp
divb
cli
data16
not
mov
fwait
dec
cmp
cmp
adc
rol
dec
jg
imul
sbb
sbb
cmp
test
xor
aam
jno
sub
xor
xlat
jne
bnd
dec
nop
int
and
cmp
fimull
clc
xor
cmp
pop
jns
dec
adc
cmpsb
xchg
cmp
outsb
xchg
jp
cmpsl
xchg
fcompl
outsl
loop
lods
test
lret
and
dec
pop
rorb
sub
mov
addr16
divl
push
out
cmp
outsb
cmp
jg
push
and
sti
cmpb
js
lock
or
lret
mov
scas
sbb
adc
cmp
imull
pusha
mov
in
imul
fcmovnb
aam
stos
sbbl
jbe
movsb
mov
pusha
cs
dec
mov
mov
push
jp
clc
pop
js
or
dec
stos
inc
data16
xor
sbb
loope
lock
insb
nop
xor
sbb
xor
adc
dec
push
idivl
xor
shlb
pushf
test
shll
stc
mov
fstps
dec
cmp
cmp
add
mov
xchg
mov
xor
insl
cmpl
inc
lods
and
ljmp
mov
mov
js
xlat
push
test
push
icebp
sarl
xchg
jns
inc
fnstenv
sbbl
sub
or
cmp
xor
stos
add
push
cmpsl
dec
ds
jmp
mov
pop
nop
dec
mov
inc
aas
rolb
mov
leave
dec
mov
call
lods
clc
xchg
inc
mov
mov
sbb
inc
jno
pop
ja
dec
and
daa
lret
cld
sbb
movsb
lahf
test
add
push
mulb
lahf
popa
or
sahf
mov
pop
mov
je
and
out
movsl
frstor
aam
push
loop
imul
lea
push
dec
aaa
pop
js
mov
xor
push
movsl
cmp
cltd
sbb
xchg
subl
std
pop
or
movsl
dec
fildll
mov
outsl
fadds
test
cmc
or
push
mov
filds
or
sbb
repnz
or
sbb
add
jnp
or
or
in
cmp
popa
and
xchg
in
fwait
gs
enter
xchg
add
mov
lods
jle
stos
aad
into
push
xchg
dec
fsubl
cmp
mov
cltd
push
dec
arpl
std
in
push
pop
sub
adc
xchg
xorl
fdiv
testb
es
mov
inc
int
test
and
loopne
imul
sub
lods
mov
push
ret
sti
insl
adc
outsl
mov
pop
roll
and
sub
dec
mov
push
pop
hlt
ficompl
inc
paddw
orb
in
pusha
mov
xchg
clc
out
je
inc
mov
mov
mov
out
push
stos
inc
xchg
insl
setle
out
arpl
mov
ret
lcall
sub
enter
mov
add
mov
scas
fwait
mov
pop
mov
dec
data16
add
stc
jg
in
push
fxch
and
mov
icebp
mov
arpl
xchg
push
cmovno
imul
sub
push
push
call
mov
lds
pop
ret
mov
popf
mov
and
out
mov
and
cs
inc
dec
mov
jno
pop
cmc
bound
sbb
jnp
pop
inc
cmp
xchg
hlt
in
leave
int
sar
icebp
rcll
test
insb
mov
cmpsb
leave
imul
jg
dec
outsb
xchg
pop
je
sub
cmp
sbbl
fidivrs
mov
in
xor
insl
adc
loopne
adc
inc
outsb
sbb
cltd
xchg
arpl
cmp
popf
cmpl
xchg
mov
mov
cmp
sbb
lds
fstl
mov
mov
pop
sub
data16
insl
add
jnp
loopw
dec
xlat
data16
pop
sbb
imul
mov
push
aaa
loop
addb
dec
push
sub
hlt
mov
jno
sub
pop
lahf
jp
sub
insl
mov
xor
dec
push
adcl
ljmp
xor
dec
xor
repz
rcrb
cmp
in
cmp
data16
xor
xchg
nop
call
movsb
jge
out
out
int
xchg
popa
inc
scas
and
mov
ret
push
push
mov
movl
jne
stos
shrb
mov
add
test
les
imul
cwtl
jnp
inc
inc
subb
jbe
push
add
xchg
push
hlt
cmp
cld
sbb
in
out
inc
push
and
sub
bts
pop
cmp
ljmp
lret
ret
test
pop
imul
lds
out
test
push
push
mov
mov
shlb
cmp
dec
pop
inc
repz
je
push
adc
test
inc
aas
push
jnp
daa
repnz
lret
pusha
ds
jg
mov
xor
pop
cmp
faddl
outsl
stos
push
cwtl
fsubrs
inc
in
mov
jmp
cmp
fwait
push
push
pop
jmp
fidivrl
das
adc
push
fs
xor
push
rcll
inc
iret
stos
push
xchg
or
ret
xchg
addr16
test
adc
xor
ficomps
xchg
in
nop
mov
add
out
push
dec
lret
xchg
cwtl
ja
movsl
loope
or
mov
inc
adcb
in
xchg
leave
cs
or
insl
adcl
mov
int
movsl
add
sub
mov
cs
sahf
leave
insl
dec
sub
sub
in
or
xlat
ret
gs
dec
inc
insb
rcll
jg
cltd
sarl
test
movsb
imul
mov
inc
in
sahf
in
cld
mov
xchg
mov
mov
push
ret
adc
dec
test
and
divb
mov
stos
cmpsl
dec
push
cld
dec
ss
or
add
lea
je
inc
xchg
cmc
pop
pop
sarb
dec
cmpl
shr
dec
shl
mov
add
adc
mov
push
mov
xor
cwtl
add
or
cs
and
jp
adc
or
outsl
xchg
mov
lea
inc
jae
jl
loop
jbe
push
loope
and
xchg
imull
mov
shlb
pop
dec
push
popa
push
sahf
cwtl
loop
movsb
stos
dec
fdivr
rorl
pop
sbb
lds
leave
cmpsb
out
pop
ljmp
cmpsl
mov
xchg
adc
jbe
es
add
mov
icebp
xchg
pusha
sub
in
or
scas
dec
xlat
movsl
aaa
sbb
mov
shrl
popf
das
icebp
es
or
fstl
mull
lahf
mov
cmp
enter
jae
dec
cli
pop
fwait
or
push
jne
jp
push
cmpsb
dec
and
add
inc
xor
jg
mov
sti
outsl
int
cmp
mov
add
jns
std
mov
pop
jnp
cltd
mov
xor
mov
in
adc
mov
jae
insl
adc
pusha
loope
xor
xchg
dec
add
insl
sti
mov
adc
jl
mov
addr16
movsl
in
loop
movsl
xchg
push
nop
out
in
or
js
dec
nop
scas
dec
sub
loop
mov
adc
fsubrs
jnp
push
push
xchg
rolb
cmp
mov
pop
mov
mov
dec
sbb
out
dec
jbe
or
insb
push
dec
nop
pop
and
inc
pop
push
jp
cli
mov
jbe
fistl
xor
enter
shl
sahf
enter
inc
xorl
jge
xchg
test
dec
and
pushf
das
cmp
dec
mov
jo
int
movsb
dec
sub
dec
in
inc
aaa
loopne
adc
repnz
jnp
shll
lahf
mov
xchg
add
int
dec
dec
out
loope
cli
popa
pushf
fs
out
cwtl
sbb
je
std
adc
add
and
popf
ss
fwait
nop
or
and
push
cwtl
cmpsb
add
sbb
adc
call
cmp
popf
or
or
add
ret
mov
xchg
mov
mov
jge
xchg
out
enter
js
movsb
xor
scas
mov
jno
incl
inc
adc
movsl
and
inc
loopne
lret
pop
xlat
scas
jp
popf
add
push
xchg
push
jns
pop
imul
dec
dec
mov
xor
mov
jns
hlt
add
bound
inc
xor
in
out
push
mov
and
out
js
and
pop
inc
js
xor
mov
nop
xchg
pop
and
xchg
rcl
inc
mov
pusha
mov
add
call
sub
mov
fmull
test
mov
ror
cli
pop
push
lahf
and
bound
cmp
xchg
js
dec
dec
cld
and
and
mov
lret
fnstcw
xorl
std
in
stos
xchg
inc
sbb
mov
fidivrs
fiadds
dec
sbb
cmp
dec
cli
fdivl
inc
mov
js
push
pushf
sub
scas
lret
popa
out
repnz
xor
xchg
or
lds
cmc
and
inc
pop
aad
call
xor
aaa
cltd
jae
shlb
adc
aam
ss
dec
pop
xorb
xchg
cmova
push
xchg
and
in
loopne
mov
in
sub
jmp
jmp
dec
repz
inc
mov
jmp
rol
lods
fdivl
add
es
dec
sbb
pop
fwait
jl
adc
mov
inc
pop
mov
sub
ss
loope
cltd
lcall
sub
add
mov
pop
mov
gs
stc
movsl
cmpsl
or
sbb
inc
rolb
pop
insb
int3
mov
inc
mov
push
pusha
push
cmpb
imul
dec
dec
mov
pop
in
lret
mov
cmp
loope
push
std
int3
mov
cmp
and
or
xchg
mov
int
mov
adc
jns
movsl
rorl
xor
scas
mov
adc
inc
and
xor
out
jge
data16
inc
add
test
xor
pop
xchg
leave
out
loope
fmul
int
shl
fs
loopne
aad
push
xor
loope
int
cmpsl
out
and
sub
sahf
rcl
pushf
mov
mov
pop
sub
xor
push
xor
jbe
das
std
mov
ljmp
mov
imulb
mov
inc
fimull
and
mov
jmp
lock
mov
fstps
bound
lds
lahf
mov
fiadds
mov
insb
sub
sub
scas
dec
push
sahf
fnstenv
jg
jno
pop
mov
fwait
in
push
adc
jns
cmp
insl
aas
push
call
xorb
push
sub
out
mov
cmp
mov
jne
mov
in
enter
mov
mov
daa
dec
stos
mov
sbb
add
mov
adc
sbb
pop
in
and
arpl
mov
push
cmc
insl
leave
addr16
pop
jns
sti
fwait
in
clc
push
pop
mov
or
in
je
jne
dec
xlat
push
adc
xchg
dec
dec
push
push
sbb
fwait
jg
icebp
in
mov
cmpsb
push
sub
or
sub
js
pop
xor
push
xor
mull
pop
pop
dec
sub
add
adc
faddl
xor
in
je
adc
gs
rcl
es
sub
lods
in
and
fs
inc
aam
lahf
adc
ret
add
push
push
xor
int
imul
dec
cltd
push
iret
fadds
mov
in
arpl
out
jns
and
ljmp
jae
lret
stos
sbb
sub
aam
test
dec
xor
call
loope
int3
jle
jl
jmp
mov
sbb
int
cmc
xor
jmp
cmp
fs
test
and
xor
aam
aad
cmp
loope
movsl
cmp
push
lret
cli
out
imul
sub
mov
sbb
cs
inc
sbb
add
negb
int
xchg
and
xchg
repnz
push
rorb
sbbb
in
test
rcl
int
cltd
testb
jmp
push
or
push
movsb
cld
ds
es
cmpsl
es
data16
xlat
dec
test
jnp
stc
add
pop
mov
stos
icebp
popf
in
frstor
push
push
cmc
rclb
in
shrl
pop
push
xor
and
mov
push
mov
mov
insb
movsl
mov
pop
lods
push
faddl
pop
and
cmp
out
jg
dec
push
adc
mov
out
xchg
out
mov
in
int3
repz
pop
out
jge
bound
jle
dec
inc
stos
sub
data16
add
repz
sub
jns
inc
cltd
dec
popl
jne
outsb
movsl
sub
sbb
mov
jno
scas
test
mov
out
jge
aam
jle
jg
aas
inc
cmpsb
cmp
sbb
imul
mov
cmp
dec
pop
stos
fstps
cmp
rol
and
loope
sub
loopne
sub
inc
jbe
pop
mov
push
loopne
das
mov
daa
jns
jecxz
push
xchg
xor
lods
sbb
jbe
daa
in
jl,pn
mov
dec
adc
sub
dec
xchg
lahf
or
sbb
push
xor
dec
fmulp
xchg
repz
xchg
rcrb
or
mov
rcrb
push
xor
add
add
add
dec
add
out
xchg
rorl
sbb
inc
cmp
pop
push
mov
adc
imul
cmc
push
insb
fisttpl
mov
and
lock
jge
sbb
icebp
je
sbb
push
dec
sub
les
adc
and
jmp
loope
mov
dec
cmp
popf
stos
xchg
les
sub
push
xchg
cli
and
scas
cmp
and
cmpsb
daa
out
dec
xchg
cmp
jno
in
push
cmp
testl
aas
cmp
jnp
fs
jp
sbb
sub
or
movsl
mov
mov
xchg
xor
mov
xorb
iret
xchg
inc
xlat
xor
inc
cmc
mov
or
pusha
fildll
faddl
fdivs
test
jecxz
mov
in
call
adc
push
mov
jno
push
mov
xchg
push
xor
pop
sub
jp
movsl
pusha
xchg
inc
cmc
repnz
stc
adc
push
adc
cmp
pop
cs
add
mov
add
inc
fs
jnp
enter
dec
mov
xchg
cli
jg
mov
loopne
or
dec
ror
sub
push
iret
clc
fstps
jp
lahf
imul
decb
cwtl
imul
push
loopne,pn
cmpsb
lahf
out
dec
ds
or
imul
add
sub
lret
inc
push
mov
ret
scas
lods
pushf
or
push
js
aad
add
xchg
and
xlat
sbb
mov
or
jl
jmp
test
hlt
sub
out
inc
sbb
rorl
push
dec
loopne
pop
std
je
push
lods
bound
aas
dec
cmp
stc
aam
mov
push
shlb
test
dec
fs
nop
loop
outsb
cmp
das
sub
add
mov
jbe
push
popf
and
addr16
iret
inc
add
aam
lods
sbb
push
mov
jno
xor
inc
xchg
movsl
mov
dec
mov
int
fldt
cwtl
ja
pusha
test
into
xchg
addr16
aad
loop
xor
mov
cmc
mov
out
mov
fstps
push
enter
mov
imul
sbb
mov
xor
arpl
mov
rcrl
cmpsl
xchg
sub
cmpl
fildll
fistl
adc
mov
lret
jl
mov
pop
icebp
jo
dec
aas
mov
or
inc
ss
jge
in
mov
jecxz
jno
dec
ds
les
xchg
jne
ret
pushf
sti
lret
scas
pop
and
aas
cmp
aaa
out
and
sub
ja
mov
jmp
cmpsb
cltd
xchg
je
test
repz
insb
ds
scas
and
sub
sbb
sub
pop
shlb
es
sti
sub
add
bound
jbe
repz
lods
cmp
pushf
insl
outsb
mov
stc
cmpsb
test
push
popf
jmp
testl
ds
push
aaa
clc
movsb
sbb
xchg
cs
mov
jmp
in
xor
lds
insb
sub
xor
add
clc
std
les
es
inc
and
fdivrl
mov
xchg
iret
push
dec
xchg
mov
inc
sbb
cli
push
xor
and
int
cwtl
pop
cld
push
stos
in
stos
xchg
inc
stos
jl
dec
mov
iret
dec
cmp
xchg
and
jbe
mov
dec
pop
or
fs
clc
mov
cmp
xchg
popa
in
dec
mov
iret
filds
cmc
es
jecxz
or
jnp
add
fisttpll
mov
fsts
push
dec
cmp
sub
jno
test
shr
xchg
dec
or
sub
mov
sbb
mov
sbb
shr
in
push
cmp
ret
scas
lcall
xchg
movsl
dec
jns
or
aas
push
mov
sub
lahf
pop
lcall
inc
push
shl
sbb
stos
jmp
icebp
adc
cmp
add
pop
gs
ret
ret
pusha
xchg
and
shl
or
arpl
aas
lods
outsb
fdiv
xor
mov
in
add
das
clc
aas
imul
lea
or
addl
in
push
pusha
mov
inc
and
sbb
xor
mov
mov
flds
int3
js
cmp
inc
loope
shl
sti
fmuls
adc
lds
lcall
cli
and
inc
pop
xchg
xlat
and
mov
stc
scas
ret
fisubl
pop
cmp
ret
and
aas
mov
into
sub
loop
jno
xchg
mov
pop
setle
and
inc
inc
mov
outsb
sub
xchg
dec
pop
arpl
mov
scas
aas
mov
jno
ja
ret
test
or
into
jmp
jl
nop
push
xchg
ja
adc
xor
pop
adc
int3
test
scas
enter
cmpsl
add
mov
jge
je
lahf
shl
sub
xchg
roll
or
aad
lods
icebp
mov
sbb
rcrb
cmp
dec
divb
bound
cmpl
inc
sbb
test
jno
mov
jge
ret
outsb
push
fidivl
mov
inc
out
test
push
nop
push
outsl
pop
inc
dec
xlat
xor
fstp
data16
mov
push
adc
pop
lods
jecxz
add
push
in
mov
ss
and
shl
mov
cmp
roll
lret
xor
fidivrl
inc
jmp
push
jb
inc
jg
data16
dec
inc
and
jno
inc
mov
mov
inc
add
push
or
dec
cli
pop
sti
xchg
mov
jge
xchg
and
inc
mov
aam
loope
or
data16
sbb
mov
pop
loope
aaa
popf
mov
test
dec
inc
push
xchg
push
pop
push
int3
jo
mov
or
jae
add
dec
ja
sub
pop
dec
ljmp
cmp
cs
lret
xchg
lock
enter
cmpsl
push
testb
xchg
lock
pop
lcall
loopne
add
cmp
jecxz
ljmp
pop
xchg
mov
or
sub
leave
push
push
movb
xor
cmp
xchg
and
mov
mov
xchg
scas
pop
xchg
jl
cmpsb
gs
shlb
adc
lahf
lahf
pop
in
jb
lret
movsl
aaa
cmp
lcall
push
shlb
pop
movsb
sub
into
mov
sub
test
loop
rcll
sub
jnp
out
mov
in
push
movsl
mov
cmp
cmp
jecxz
mov
rolb
in
sub
adc
call
out
xchg
mov
or
sbb
cmpsb
stos
leave
xchg
sub
inc
cmp
movsb
push
inc
pop
imul
jmp
pop
lcall
xor
and
push
or
fcompl
mov
data16
xor
add
mov
repnz
shr
test
push
out
sub
mov
or
push
mov
mov
test
inc
push
ret
dec
int3
inc
mov
lret
fildl
and
and
scas
popa
ljmp
cmp
pop
inc
push
push
loope
gs
fwait
add
xchg
inc
xor
lods
mov
dec
out
pop
sub
xchg
repnz
scas
lods
cld
cmc
push
es
pop
jl
and
testb
xchg
xchg
sbb
xor
mov
test
int
sbb
push
adc
fs
jmp
das
insb
call
or
loop
das
loop
and
sbb
es
stc
or
pop
or
loopne
mov
out
inc
pop
push
stos
sub
dec
cmp
push
or
push
push
cmpl
cmpsb
sbb
xchg
jno
jb
push
dec
or
popf
movsb
inc
or
jnp
arpl
and
xlat
mulb
inc
mov
adc
jp
sbb
mov
cmp
jle
dec
test
loop
loope
mov
xchg
or
sti
inc
adc
lods
push
cmp
inc
inc
enter
repnz
pop
xchg
mov
movlps
push
ret
int3
jle
push
into
es
icebp
fdiv
mov
mov
fwait
pop
mov
jnp
jle
push
jb
xchg
push
lcall
dec
push
jns
int
outsl
mov
scas
fdivrp
dec
lods
xor
cmp
xor
stc
int3
lea
xchg
leave
or
jl
or
jecxz
inc
cli
dec
mov
pop
add
lock
push
xchg
or
mov
mov
aaa
inc
pop
cs
fistps
xchg
mov
fimuls
push
xor
mov
xchg
fdivl
arpl
scas
mov
adc
or
push
jb
roll
imul
loop
inc
dec
and
insb
scas
sti
sub
aaa
mov
mov
test
push
fdiv
add
pop
push
dec
pop
aam
pop
aad
lods
inc
xor
scas
jae
ljmp
insb
ret
pop
jb
inc
xchg
inc
lret
mov
sbb
or
jecxz
fcomip
mov
stos
mov
lods
dec
gs
xor
sti
outsl
and
lea
push
stos
jmp
lret
je
cwtl
fs
mov
sub
xlat
stos
mov
mov
das
fldl
fs
ja
mov
mov
mov
fidivrl
or
fists
sarb
add
mov
dec
mov
or
addb
sub
jecxz
aas
mov
pop
push
mov
jl
push
mov
xchg
jo
lock
inc
mov
lock
cld
hlt
jbe
gs
xchg
inc
fnstsw
cli
loop
adc
push
xchg
outsl
out
cmc
popf
xor
idiv
or
inc
lret
jecxz
sub
jo
jle
stos
and
aad
pop
lret
pop
inc
aam
sub
cmpsb
mov
leave
aaa
cmc
hlt
addb
sbb
mov
xor
das
adc
arpl
sbb
or
pop
xchg
test
pop
mov
dec
fsubrp
inc
arpl
jbe
movsb
clc
xor
add
sti
outsl
int3
xor
movsb
test
mov
dec
imul
sub
mov
and
test
pusha
xchg
nop
das
and
int3
push
pop
dec
sbb
je
xor
jle
or
sbb
fimuls
test
in
shlb
lret
lea
in
xchg
cmpxchg
repnz
pop
arpl
mov
push
pop
sub
popf
neg
movsb
jbe
popf
repnz
bnd
mov
add
lods
pushf
in
cmpl
xor
cmp
stc
aad
or
mov
movsl
ljmp
or
adc
pop
int3
pushf
in
test
mov
xchg
cmpsl
sub
int3
nop
jp
jb
xor
aas
adc
cmp
dec
mov
cmpsl
push
pushf
lods
xchg
insb
ljmp
test
movsl
push
mov
flds
xchg
pop
insl
pop
xlat
test
lahf
or
sub
lock
repnz
and
pushf
lods
and
mov
pop
ja
daa
sbb
iret
dec
mov
or
imull
in
fdivr
leave
sub
xchg
shrb
bound
cltd
call
je
icebp
dec
dec
adc
or
ss
mov
clc
adc
jle
push
negl
stos
adc
sbb
xor
push
arpl
sbb
mov
pop
mov
inc
lret
mov
sub
outsl
xor
stos
mov
inc
out
mov
sub
jmp
cld
jmp
pop
push
outsl
das
lcall
into
movsb
das
movsb
inc
fcoms
fcompl
clc
xor
in
cld
adc
inc
cs
loop
push
sbb
push
or
add
pop
pusha
scas
push
das
sbb
and
aad
sbb
cmp
jl
dec
inc
pusha
mov
or
add
adcl
cmp
fidivs
call
or
cltd
and
neg
inc
jecxz
pop
inc
sbb
jmp
dec
dec
xchg
fists
dec
pop
xor
push
stos
iret
jecxz
aaa
and
jl
mov
movsl
add
je
inc
and
mov
test
push
push
push
xchg
ja
mov
into
leave
add
scas
std
dec
repnz
leave
scas
sahf
xchg
mov
xchg
xor
add
jno
xchg
xchg
in
das
xchg
scas
ficompl
fnsave
push
loop
aad
mov
lds
sub
adc
push
mov
cs
mov
sbb
arpl
push
cmpsl
in
or
fwait
xor
lea
inc
inc
lods
out
jp
arpl
cmp
cld
or
ljmp
inc
fisubl
dec
sahf
lds
sub
or
jp
testb
inc
int
xor
cli
dec
inc
movl
jle
xlat
divl
jmp
dec
push
push
pop
sub
sbb
or
in
data16
cmp
rcrl
cmpsb
jmp
xchg
push
fmul
jae
xchg
out
in
sub
adc
sti
ret
cmp
push
xor
push
cld
adc
lret
es
inc
or
push
pop
enter
push
jge
xchg
pushf
xchg
fidivrl
ja
popa
xor
mov
fsubp
mov
pushf
icebp
dec
cmp
fisttpll
sar
and
jl
sub
mov
jp
gs
sbb
or
mov
mov
cmp
inc
and
push
cmp
and
xchg
ret
push
pop
sub
jecxz
mov
mov
push
add
mov
pop
das
ljmp
into
sbb
adc
sub
pop
sbb
stos
in
push
xor
lahf
lea
push
push
hlt
mov
jns
vunpckhps
pop
lret
nop
mov
insl
pop
int
pop
jg
int3
loop
outsb
popf
mov
mov
cmp
pop
and
fstp
pop
sub
ds
ds
or
daa
xlat
inc
add
adcb
sub
call
xchg
out
cli
jb
pop
mov
pushf
popf
std
sbb
cmpsl
loop
decl
jmp
mov
outsb
xchg
enter
fildl
insb
push
clc
inc
or
out
leave
add
pop
mov
and
sbb
adc
add
fisubs
add
mov
scas
aas
xor
in
ja
das
clc
scas
cli
and
and
jo
push
insb
adc
das
mov
xchg
jle
scas
cmp
dec
int3
mov
out
and
mov
inc
popf
les
rorl
ljmp
loope
mov
jbe
xor
scas
in
sbb
mov
mov
xchg
ds
fdivl
cmp
aam
mov
outsb
mov
xlat
xchg
add
push
jecxz
mov
in
cwtl
dec
jg
mov
pushf
mov
pop
std
outsl
dec
lods
sub
jp
adc
mov
arpl
sub
dec
add
add
xchg
mov
xor
fidivl
lret
roll
xchg
ret
mov
imul
sarb
loop
arpl
stos
cmp
mov
les
mov
fstl
cmpsl
test
inc
push
dec
mov
adc
jo
adc
lahf
cmp
inc
aaa
and
aas
aaa
es
repz
fwait
push
test
sub
sbb
loope
mov
sub
pop
not
lods
mov
jle
pop
mov
jb
rolb
ja
std
lahf
sbb
fs
mov
fdivrl
enter
mov
imul
add
cmp
lods
mov
sub
sub
ret
aam
popf
xor
and
cmp
sub
pop
je
out
aam
jge
sub
cmp
adc
xor
mov
faddl
fisubs
bnd
mov
std
dec
inc
xchg
xor
movzbl
pop
fs
and
pop
mov
push
rorl
fs
dec
outsb
xor
and
mov
fwait
push
mov
mov
lahf
mov
push
test
inc
mov
mov
mov
test
and
cmpsl
jns
dec
xorl
das
cmp
in
les
int
sbb
inc
mov
push
outsl
andb
pop
sub
adc
cmpsl
cmpsb
push
dec
push
jmp
xor
iret
cmp
out
sbb
ss
data16
mov
xchg
xchg
mov
and
aam
cs
stos
and
ja
and
enter
repnz
mov
cld
add
mov
lods
iret
mov
pop
cs
loop
lret
lock
andb
inc
mov
insb
push
inc
pop
xchg
mov
jmp
enter
jb
pop
mov
arpl
arpl
inc
lret
sub
xor
jl
mov
add
repnz
lret
xchg
ficompl
aaa
in
mov
bound
xor
aam
aaa
jb
mov
out
rep
adc
hlt
inc
movsl
jns
mov
jecxz
insb
imul
cwtl
shrl
lods
hlt
mov
add
push
dec
mov
push
mov
inc
ss
dec
cs
pop
jmp
push
testl
adc
sbb
or
jno
enter
pop
inc
xor
out
or
and
jmp
mov
mov
movsb
xor
test
in
les
pop
dec
into
jecxz
adcl
stos
cld
mov
sbbb
push
ret
xchg
cmpsl
out
das
cmp
pop
outsb
div
mov
out
lea
outsl
enter
adc
inc
cmpsb
stos
sti
in
hlt
gs
js
mov
dec
sub
push
dec
jns
push
mov
in
xchg
fbld
push
std
insl
jmp
push
dec
xchg
fucom
xchg
pop
outsl
in
push
in
in
mov
fdivrl
jo
int
mov
mov
add
push
and
insb
fnstenv
daa
xchg
js
push
fnstenv
popa
xchg
mov
xor
pop
lock
insl
arpl
adcb
lcall
fwait
dec
add
mov
mov
imul
jg
pop
mov
add
adc
add
scas
adc
repnz
ret
into
sub
fstl
lret
jbe
cmp
iret
and
adc
sbb
stc
or
stos
div
mov
push
std
fwait
loope
lahf
add
sbb
fdivrs
popf
sub
pop
nop
stc
jecxz
sub
dec
ds
mov
sbb
mov
xor
lahf
jp
in
ror
xchg
outsb
jle
in
loopne
lret
cmc
sti
jns
aam
gs
in
call
cld
dec
inc
mov
dec
ret
dec
addr16
clc
xor
jae
inc
lods
push
int3
imul
out
je
pop
lahf
push
pop
js
in
insl
pop
stos
hlt
mov
inc
or
jle
push
and
lret
jae
push
push
xor
jns
xchg
aam
push
pushf
lods
push
mov
mov
sbb
add
ds
push
jmp
sub
add
add
outsb
sub
or
pop
sti
cmp
mov
rorb
xlat
cwtl
filds
jmp
xor
lret
cmpsb
shr
shl
in
dec
jae
add
mov
jg
aad
mov
in
xchg
fcmovb
mov
dec
push
push
sbb
lahf
inc
and
adc
hlt
xchg
jnp
aam
mov
and
bnd
push
in
mov
pop
xlat
movsl
sbb
fnstenv
adc
aaa
and
inc
mov
sub
inc
maskmovq
idivl
adc
outsb
lahf
sbb
xlat
je
jnp
add
lods
mov
xlat
negb
mov
add
push
sar
push
add
aad
mov
jo
cs
jne
and
jnp
pop
insb
sub
cmp
icebp
xchg
repz
out
sub
xchg
adc
shll
aas
lds
aaa
jge
sahf
bound
adc
jg
add
icebp
or
mov
out
xchg
jge
jp
inc
pop
pushf
inc
aad
test
xchg
stos
xchg
pusha
dec
fst
pop
mov
pop
jle
data16
xchg
cmp
testb
daa
mov
arpl
movsb
js
stc
pop
fisttpll
sbbb
add
movd
adc
or
adc
sub
sub
dec
or
mov
popf
or
cwtl
in
sub
xor
adc
iret
or
sub
es
sbb
sub
sbbl
call
scas
sarl
adc
outsb
push
test
inc
nop
loop
pusha
lcall
das
ss
repnz
add
nop
andb
mov
jo
test
popf
adc
out
jo
or
bound
fsubrs
je
rcl
insl
jns
pop
out
fwait
and
inc
stc
mov
dec
or
pop
add
pushl
xor
push
ja
test
pop
sbb
lcall
inc
mov
stc
adc
mov
xor
loope
lahf
mov
loopne
dec
xchg
sti
lret
pop
stc
out
jnp
cmp
jne
rolb
aam
ljmp
cmpsb
cmc
popf
pop
xor
test
push
xchg
das
shll
gs
test
mov
dec
sbb
icebp
lea
inc
scas
dec
pop
sbb
stos
cmp
xchg
and
lret
xchg
sbb
dec
subb
jle
fimull
stc
neg
mov
cmc
cmpsb
int3
lcall
pushf
rorb
sub
dec
push
mov
aas
mov
cmp
xchg
ljmp
add
sbb
inc
shll
icebp
shll
cmp
and
xchg
xchg
mov
pop
and
xor
fists
inc
lret
inc
in
push
jle
movsb
loop
xor
and
stc
test
sbb
movsb
cmp
int
pop
xorl
fistps
shll
fcom
xchg
dec
fidivl
xor
test
mov
dec
jb
cmp
push
mov
and
sti
sub
call
inc
enter
cmp
mov
aaa
adc
mov
add
jmp
adc
movsl
sub
je
das
js
scas
jno
mov
cmp
out
aas
or
mov
xchg
pushf
xlat
mov
dec
sub
outsl
push
js
sahf
sub
push
ret
mov
js
scas
lret
loopne
test
lods
jne
cld
add
pop
adc
inc
cmp
les
xor
mov
rorl
jo
aas
jle
xor
sbb
outsb
pusha
je
mov
cmpsl
add
addl
lods
call
pop
xchg
fdivrl
bound
jge
add
jge
push
add
inc
sbb
or
mov
imul
mov
pop
jbe
xchg
mov
adc
and
andb
xchg
inc
xchg
movsb
int
stos
jb
lahf
inc
cltd
jle
and
mov
daa
mov
jno
or
imull
nop
pop
cmp
pop
pop
xor
ja
mov
test
and
nop
mov
jp
push
xchg
rcrb
xor
orb
popa
inc
test
xor
aas
mov
inc
fistpl
sub
jne
ret
add
out
lods
cmp
dec
dec
sbb
test
in
mov
dec
jbe
sub
fdivl
xlat
pusha
std
jp
addr16
arpl
and
dec
pop
jbe
push
push
xor
mov
xchg
cwtl
push
sbb
test
js
lahf
addr16
sub
or
pop
test
inc
push
lods
xchg
insl
daa
push
xchg
inc
cmp
rorl
ljmp
fisttps
in
imul
dec
xor
insb
out
mov
test
pop
mov
mov
pop
jnp
js
sarb
push
and
dec
lock
or
bound
cmp
popf
jl
cwtl
mov
rcr
mov
pushf
jb
cmp
ret
mov
icebp
sub
dec
popf
and
aaa
imul
push
and
bound
addr16
loope
roll
sub
subl
mov
add
xchg
call
and
mov
sub
pop
pop
push
add
mov
push
int3
imul
paddusb
mov
pop
dec
mov
mov
je
fisttpll
inc
cmp
push
ret
test
aaa
cmp
inc
loop
stc
sbb
xchg
inc
das
mov
xchg
push
mov
push
fs
cmp
mov
pop
inc
push
repnz
pop
fs
std
imul
xchg
push
aad
mov
mov
lret
xor
xchg
lcall
das
roll
nop
sbbl
cmc
jo
or
std
aad
mov
ret
push
push
push
sub
mov
ret
fldcw
dec
xchg
dec
sub
aad
stos
add
in
out
shrb
mov
gs
jecxz
fisubrl
inc
sbb
cmc
fucom
fs
fcoms
imul
cmp
psrlq
outsb
inc
pushf
xlat
push
or
call
jnp
xchg
jg
dec
push
dec
mov
mov
js
and
jns
xchg
xor
shll
int
xlat
xchg
scas
pop
mov
xchg
push
mov
inc
cmp
aam
fildll
cmp
test
out
xchg
cmp
and
insl
and
pop
xor
ret
dec
ret
popa
pop
dec
icebp
je
faddp
adc
mov
ss
jb
dec
xchg
mov
cmp
push
cmp
and
xchg
dec
adc
lret
cmp
dec
xor
mov
fidivrl
stos
add
mov
pop
clc
sbb
insb
mov
mov
dec
pop
add
mov
push
and
imull
inc
and
lret
mov
jne
adc
and
mov
dec
dec
and
icebp
shll
stos
lods
lods
push
jp
out
jg
dec
adcl
jbe
jmp
sbb
mov
shlb
push
test
dec
shll
aam
and
sub
mov
ljmp
mov
inc
imul
jle
jb
xchg
mov
test
lahf
lods
jp
stc
dec
jecxz
aam
push
sbb
and
cmp
mov
mov
imul
insl
mov
es
lock
inc
mov
cmp
fbstp
cwtl
dec
fldenv
test
push
mov
mov
sub
ja
enter
mull
or
test
ss
sbb
stc
loope
inc
jge
inc
inc
imul
push
aad
mov
push
adc
adc
nop
push
in
shl
clc
push
xchg
stos
mov
out
push
adc
adc
adc
jle
in
sub
dec
xlat
loopne
jns
mov
or
mov
mov
jb
out
xchg
js
push
mov
mov
xchg
pop
out
push
fdivrs
mov
popl
mov
lret
push
xchg
rclb
jg
arpl
cs
stos
and
pop
ljmp
mov
incb
sub
and
cmp
rcl
pop
scas
xchg
adc
sbb
icebp
xchg
jns
pop
test
lock
lea
push
inc
stos
or
sbb
dec
dec
xchg
rol
lret
testb
stos
test
cmp
xchg
cmp
stc
vmovaps
cmp
movsl
lock
ss
mov
xor
pop
and
cli
pop
lret
or
xor
push
cltd
mov
xlat
mov
arpl
nop
imul
inc
xor
push
fs
adc
xchg
jge
inc
cmc
sbb
mov
push
es
inc
jecxz
sar
popf
iret
xchg
sub
fdiv
les
scas
sbb
push
test
pop
lods
cmp
cmp
adc
mov
lcall
into
outsb
and
or
pop
inc
cld
sub
sbb
inc
cmp
pop
ljmp
cmp
jbe
popf
jns
add
pop
jno
xchg
mov
jmp
push
jmp
sub
aad
add
jmp
fucom
push
cmp
inc
lea
cld
xcrypt-cfb
cmpsl
and
movsl
leave
lahf
and
mov
and
sbb
jg
mov
fwait
mov
xor
fcompl
xor
dec
jmp
aas
subb
out
mov
adc
mov
stc
lods
hlt
mov
inc
xchg
dec
mov
pop
mov
fstps
sbb
pop
mov
cmp
pop
ret
lret
cltd
push
mov
ja
sub
push
fstps
push
aas
aaa
add
icebp
add
or
jmp
mov
xor
push
lock
data16
dec
lock
mov
jecxz
out
in
jo
push
xchg
add
mov
repnz
fdivs
inc
cmp
sub
mov
pop
xlat
pop
xor
mov
mov
add
shll
sti
mov
cltd
or
jge
xor
mov
aad
or
sbb
xchg
lea
sub
mov
mov
add
xor
dec
ja
scas
test
cmp
inc
push
lea
mov
call
xorb
out
mov
mov
pop
movsb
dec
div
scas
ljmp
adc
int3
sbb
inc
xor
aas
or
and
cmp
adc
pop
insl
movsl
cmp
cltd
push
imul
xchg
push
aas
jle
push
pop
xor
cmp
shll
out
xchg
inc
fwait
push
fidivrl
xchg
or
or
sub
inc
sub
mov
clc
enter
ror
sub
enter
addr16
lock
mov
repz
mov
cmp
cli
dec
movsl
lock
inc
lods
pop
pop
sbb
mov
sub
mov
daa
cmp
jbe
mov
popa
xor
rorl
bswap
mov
cwtl
scas
cmp
and
or
test
xor
les
cltd
jne
mov
xor
dec
xor
jmp
push
in
add
clc
js
jle
rcr
inc
dec
pushf
imull
xchg
fldcw
fistl
mov
out
stos
fisubrs
ljmp
cmp
mov
pushf
mov
loopne
outsb
mov
negb
cmp
xchg
adc
sbb
inc
es
xchg
sub
dec
add
test
cmp
rclb
sub
jns
popf
xchg
test
xor
pop
mov
pop
icebp
fsubrp
iret
mov
mov
sub
fldt
xor
xchg
add
and
addb
xchg
test
sub
mov
sbb
push
jmp
loop
xchg
sbb
into
ficomps
pop
and
mov
dec
stos
mov
push
pop
jle
nop
jne
ljmp
mov
mov
xchg
adc
mov
mov
sbb
ror
pop
mov
fistl
inc
outsl
popa
push
dec
hlt
push
lock
popa
mov
sbb
decb
negl
xor
test
loopne
cld
mov
and
dec
mov
mov
popf
das
scas
sub
inc
imul
aad
fprem1
push
loop
cli
enter
cmp
aas
mov
rcrb
jle
dec
notb
inc
imul
push
mov
int
jmp
jbe
sbb
ss
push
cmc
cltd
into
sbb
cmp
add
cmp
inc
or
jge
adc
adc
icebp
fnsave
dec
push
sahf
cmpsb
imulb
push
std
mul
int
push
lea
lcall
jl
sub
jnp
inc
or
int
dec
push
mov
outsb
out
outsl
cmp
cmp
arpl
pop
mov
cs
or
call
push
jmp
or
mov
leave
sahf
andl
dec
arpl
icebp
xor
fcmovb
fildl
jb
cwtl
mov
xor
cmp
mov
js
cmpb
and
pop
psubw
std
lret
cmpsb
dec
in
mov
dec
mov
clc
sub
test
and
cmp
fmuls
mov
and
or
in
mov
add
lds
int3
mov
pusha
es
pop
push
stos
push
xor
sub
and
dec
push
mov
pop
mul
dec
jl
jo
sub
cmovl
xchg
mov
push
and
xchg
xor
insl
fsub
or
sub
cmpsb
jecxz
xchg
mov
cmp
push
xchg
sub
cmp
cmp
dec
aaa
pop
adc
xchg
dec
in
sbb
sbb
or
lahf
daa
icebp
mov
int3
test
lods
jns
inc
sbb
testb
stc
mov
inc
and
add
adc
in
stc
enter
xor
pushf
xor
pop
push
adc
in
mov
pushl
aas
fnclex
push
lret
lock
test
push
and
jg
xchg
clc
dec
cltd
insl
scas
add
push
dec
in
xchg
imul
ljmp
mov
jnp
sbb
je
cmp
popf
fcoms
cmp
repz
leave
sbb
daa
enter
add
or
cmp
hlt
inc
mov
out
pop
loope
jo
gs
gs
repnz
repz
push
cmp
mov
jge
jmp
mov
xor
pop
inc
mov
cmp
cmp
or
mov
jl
fdivrl
jl
ljmp
pop
std
lret
enter
cmp
or
out
in
push
dec
mov
cmpsb
jmp
xchg
rclb
pop
mov
dec
dec
outsb
shrl
aad
jg
cmc
cli
fsubrs
push
mov
dec
insb
mov
inc
icebp
lahf
sbb
add
push
xchg
or
fmuls
lret
mov
add
jo
out
cltd
xchg
xchg
mov
lods
pop
adc
and
jno
loopne
test
mov
push
call
pusha
cmpsb
es
xchg
inc
lods
xor
int3
inc
aas
push
aaa
sahf
jnp
inc
lds
cmp
bnd
in
dec
iret
cmpsl
mov
push
inc
push
outsb
rol
dec
les
sub
sub
fmulp
jne
mov
or
pusha
ret
ds
jge
cmpsb
loope
arpl
lods
cs
add
jno
icebp
fldt
mov
mov
lods
push
or
hlt
inc
rorb
les
inc
pop
ss
idiv
xchg
jbe
ja
xor
test
pop
adc
mov
inc
es
dec
or
xchg
movaps
push
cmp
inc
popa
rolb
int3
into
push
jmp
lret
jecxz
ss
pop
add
mov
sti
aas
rcrb
xor
xchg
or
loop
rolb
mov
sub
jns
inc
mov
jbe
leave
mov
cmp
xorb
lahf
xchg
dec
adc
incl
inc
sbb
ss
or
jns
sbb
popa
inc
jns
xchg
js
inc
push
jbe
call
push
mov
pop
ret
adc
out
add
lret
stos
sub
jae
in
mov
xchg
js
jae
mov
and
inc
icebp
lock
aad
xor
lods
roll
jmp
ret
test
xchg
sbb
mov
mov
push
sub
mov
mov
adc
adc
jb
push
mov
lock
push
mov
rorb
push
cmc
push
inc
rclb
out
xchg
jns
std
addl
jbe
mov
xchg
dec
mov
into
jge
add
sub
mov
jl
mov
cmp
and
pusha
push
rcll
in
roll
sbb
test
movb
dec
lcall
movsl
shll
pop
sbb
movsb
and
mov
mov
push
xlat
in
fsubr
adc
mov
addl
xchg
sub
and
adc
hlt
lods
cmc
jbe
and
arpl
jecxz
dec
jo
pushf
bound
push
mov
cmp
enter
js
xor
xlat
adc
enter
xchg
mov
xor
xchg
in
inc
call
push
or
fmull
in
jbe
or
cs
cli
or
dec
jg
or
push
lret
mov
cmp
or
or
mov
pop
cld
mov
xchg
ljmp
mov
out
mov
adc
dec
cli
mov
cmp
xor
js
xchg
jns
mov
in
or
jbe
cli
and
cli
mov
dec
sub
or
mov
xor
jno
push
std
inc
adc
or
fdivrp
mov
and
dec
or
stc
jg
es
adc
add
lods
loop
add
test
or
push
mov
and
mov
addr16
and
sbb
ss
aas
cltd
out
pop
inc
xor
hlt
les
cwtl
xor
loop
cmpsl
inc
shll
or
sarb
aam
insb
mov
cmc
mov
dec
or
lea
sub
sub
dec
pop
mov
mov
inc
in
jmp
or
xchg
lret
jae
test
mov
pusha
rolb
mov
ljmp
xchg
xchg
pop
push
cmpsb
test
fsubrs
mov
into
jnp
xchg
or
arpl
inc
test
dec
outsb
push
cmp
scas
test
sub
loop
cmp
mov
ret
push
push
add
cld
inc
xor
mov
aaa
cwtl
rcrl
outsl
sbb
and
push
and
out
fadd
aam
jb
jecxz
xchg
aas
adc
or
mov
insb
das
insb
data16
in
cmp
ljmp
xchg
jnp
xor
xchg
lock
adc
inc
in
xchg
dec
push
inc
mov
fsubrl
xor
cmp
mov
xchg
fisubl
rclb
mov
cmpsl
dec
xchg
mov
mov
mov
cmp
shl
mov
xor
ljmp
add
ja
push
dec
xchg
mov
push
ja
pop
xchg
mov
mov
clc
bound
dec
jb
add
dec
pop
call
insl
std
aas
xchg
mov
neg
dec
lods
in
inc
mov
orl
mov
xchg
push
jle
dec
dec
shrb
inc
and
or
test
or
pusha
mov
out
dec
xor
sub
push
pushf
mov
cmpsb
pop
adc
cltd
in
adc
idivl
sti
movsb
xchg
rorb
js
push
jmp
sbb
or
je
jb
pop
cmpsl
pop
push
data16
cltd
push
fcoms
sbb
js
int3
ljmp
cmp
xlat
stc
or
mov
mov
fsub
mov
add
add
inc
call
mov
sbb
xor
outsl
rolb
mov
hlt
pusha
push
mov
scas
std
cmp
and
jnp
push
fmul
mov
cld
sub
outsl
push
pop
sbb
fdivrs
scas
jnp
cld
jae
mov
lock
cld
and
icebp
jnp
inc
int3
je
les
imul
pop
xlat
xchg
mov
das
mov
les
and
xor
and
pusha
mov
cmpsb
pop
pop
xchg
push
jbe
jns
sarl
popa
pop
pop
jecxz
jmp
es
mov
fadd
mov
mov
in
or
xchg
inc
xchg
es
xor
out
ljmp
sub
mov
dec
sbb
ret
int
xor
lea
and
jle
jae
leave
in
mov
jb
inc
pop
je
or
fimuls
dec
mov
pusha
push
or
mov
push
dec
outsb
sahf
aas
push
jnp
cmp
ljmp
decb
vpsrad
mov
inc
cwtl
xor
iret
xor
pop
sub
xchg
dec
mov
mov
fisubl
jns
aas
fiadds
mov
fiaddl
and
decb
test
push
or
rclb
es
mov
bound
popa
push
test
push
lahf
jge
xor
push
fwait
mov
cmp
repz
pop
xor
mov
sbb
int
fcoms
push
push
mov
inc
hlt
fs
mov
sbb
xchg
imul
jno
cmp
scas
pop
xchg
jmp
addb
aaa
mov
lods
dec
mov
pop
dec
test
call
out
int3
pop
push
ja
icebp
in
subl
imul
orl
xchg
popf
fwait
dec
mov
adc
jnp
pop
test
addr16
int3
push
mov
xchg
outsb
into
in
ret
dec
xchg
pop
stos
jmp
rcll
test
jmp
push
pop
push
mov
and
xor
jb
jb
cmp
iret
xchg
std
sti
jge
fidivrl
jo
cmc
test
subb
addr16
lret
cmc
and
mov
dec
or
inc
mov
lcall
inc
in
xchg
jne
push
pop
cmp
mov
or
icebp
outsb
rcll
adc
iret
lods
mov
rcl
xchg
xorl
sub
enter
mov
xchg
movsb
sbb
sti
outsb
mov
xor
ror
mov
stos
sub
sbb
mov
jo
and
mov
mov
mov
or
inc
sub
push
mov
in
lea
mov
or
mov
push
jae
sbb
add
sub
or
and
jl
int
jae
push
fimull
xchg
notb
incl
movsb
mov
mov
out
mov
fnstsw
mov
jg
sub
pop
scas
mov
mov
iret
push
add
in
pushl
enter
jg
nop
inc
adc
cmpsb
mov
cmc
dec
push
std
jg
cs
jbe
inc
sub
lret
in
nop
stos
xchg
jno
es
mov
mov
loopne
insl
mov
nopl
xor
cmp
out
jecxz
push
ds
sahf
fisubs
xor
test
mov
pop
inc
dec
mov
mov
pop
and
addr16
push
movsb
xchg
push
stc
mov
xchg
es
shll
mov
mov
addr16
loope
sbb
lds
mov
push
lret
mov
jl
mov
jae
lock
jp
cltd
mov
xchg
or
cmpsl
or
outsl
or
je
dec
xlat
rcrb
repnz
stos
sbb
and
idivl
in
icebp
fists
xchg
sti
stos
ds
jnp
stc
mov
jmp
cmpsl
and
mov
push
std
or
xor
aam
jo
xchg
sub
mov
dec
fcoml
les
fwait
cmp
adc
mov
sub
out
jae
repz
pop
movsl
pop
jmp
jg
jp
or
lea
mov
adc
insl
leave
scas
mov
movsl
pushf
mov
sub
lods
cli
lods
xchg
das
shrb
adc
xor
pushf
stc
fbstp
dec
xchg
add
insb
fadds
or
jle
outsl
fs
mov
leave
sbb
xor
popf
je
and
sub
lock
sti
ret
out
cmp
hlt
xchg
shl
les
sbb
bound
js
pop
pop
ja
inc
cmc
xor
daa
push
lods
fidivl
cs
fs
push
cmpsb
and
imul
dec
lea
or
xchg
or
jg
das
in
imulb
sub
jnp
aas
hlt
sub
jp
inc
adc
push
in
mov
insb
in
pop
mov
xchg
inc
jae
in
sbb
lret
mov
cmp
add
push
and
iret
test
jl
sbb
mov
mov
pop
push
jno
xlat
pop
push
pop
xchg
or
mov
xorl
xchg
jge
mov
hlt
ss
adc
inc
dec
cli
or
out
les
sub
aam
xor
gs
inc
aaa
dec
test
loope
ret
push
inc
popa
cwtl
out
pop
dec
fidivrl
add
repz
or
pop
xor
adc
jecxz
es
sub
xchg
push
iret
mov
mov
adcb
sbb
sbb
in
cmpb
ret
pop
std
adc
loope
sub
cli
jg
clc
cmpsb
pop
popf
xchg
lods
jge
dec
stos
in
add
leave
pushf
sub
cmpsb
lock
sarl
pop
xor
jnp
inc
scas
sbb
xchg
push
leave
push
pop
xor
lret
scas
xor
rorb
push
mov
xor
add
adc
jecxz
sbb
ss
pop
data16
inc
aas
in
dec
jnp
sub
arpl
outsl
jo
mov
les
pop
dec
mov
pusha
out
int
xchg
xchg
outsl
ret
xchg
dec
dec
test
fildl
jg
ja
filds
das
or
out
push
inc
leave
add
push
icebp
dec
inc
dec
fwait
push
popa
sbb
cmpsb
adc
out
pop
cmp
ja
cltd
sarl
jecxz
je
int3
fwait
mov
scas
pop
sub
xchg
push
je
pop
sub
sti
mov
and
dec
adc
mov
movsl
std
jnp
shlb
outsb
fldl
jg
pop
pushf
loopne
inc
hlt
rcrb
jnp
or
mov
cli
push
and
add
in
sbb
xchg
shl
sub
repnz
ret
sbb
leave
movb
inc
xor
clc
push
icebp
jb
mov
inc
sub
bound
cltd
mov
scas
cmp
jecxz
ss
stos
xor
ret
inc
xchg
push
call
lea
jo
iret
bound
push
test
add
jbe
adc
scas
add
shr
and
pop
mov
inc
clc
testb
xor
push
xchg
jns
xchg
incl
sub
xor
lods
popf
outsb
pusha
inc
aaa
sbb
pop
hlt
jo
aas
sbb
jge
aas
add
adc
into
jae
imulb
loope
std
in
pop
cs
cmp
sub
xor
pushf
and
fimuls
adc
mov
jns
iret
in
adc
into
rclb
jnp
test
pop
adc
popf
fs
mov
cmpsl
lods
jns
roll
cli
pop
push
add
fsubrs
inc
orl
scas
cld
cmp
arpl
jmp
les
mov
incb
xchg
dec
int3
or
clc
push
pop
push
mov
pop
scas
icebp
sti
imul
add
pop
jmp
dec
sar
mov
into
lcall
jnp
adc
inc
mov
add
xchg
push
fstpl
pop
adc
cltd
outsl
jle
push
pop
shll
movsl
jmp
les
mov
mov
cli
xor
add
outsb
mov
sub
lods
pop
aaa
pop
push
sbb
iret
cmpsb
xlat
jle
mov
lock
lock
aas
add
push
loopne
leave
xchg
data16
test
sbb
in
int3
push
dec
out
mov
push
jecxz
andl
pop
into
nop
pop
nop
mov
scas
push
dec
mov
ret
pop
pop
or
mov
pop
jle
or
mov
fistpl
lods
nop
pop
adc
out
nop
daa
or
lret
iret
inc
arpl
push
and
inc
push
movsl
sub
stc
or
and
add
adc
dec
sti
push
cmpsl
mov
out
dec
jecxz
mov
test
mov
pusha
pop
xchg
mov
shlb
jo
pop
sub
leave
dec
scas
sbb
notb
enter
iret
inc
and
pop
adcl
sub
bound
cmp
cmp
sahf
repz
mov
mov
sub
adc
roll
ljmp
mov
in
data16
mov
aad
jle
hlt
dec
stc
cmpsl
jbe
pop
adc
jp
inc
sub
jl
pop
rcrl
jnp
popa
or
mov
sub
int
xchg
out
negl
stc
pusha
push
xchg
sbb
cld
pusha
test
xchg
jns
sbb
or
mov
repnz
repz
insb
add
jns
cmc
js
mov
enter
in
push
sbb
bound
cld
jl
hlt
xchg
sti
in
pusha
cmp
mov
loop
bound
sbb
fxch
mov
xchg
movsb
lret
adc
push
mov
ret
ficompl
or
cmpsl
loop
add
pop
aam
xor
enter
aas
test
mov
mov
bound
sbb
dec
stos
enter
iret
and
movsb
sbb
daa
inc
push
aad
call
and
and
outsb
out
cmp
leave
and
cld
push
add
add
cli
pop
adc
push
fiadds
dec
aam
dec
dec
add
dec
cmp
stc
xchg
cmp
and
sbb
adc
jl
add
aaa
iret
cmc
xchg
push
popa
lret
out
ljmp
stos
jmp
clc
aad
sub
fsubrs
pop
sarb
test
cmp
sbb
mov
in
sbb
mov
js
cmp
mov
xchg
loope
lds
push
or
stc
mov
jb
push
sub
jo
or
out
lods
js
fsubrs
int3
and
xlat
ds
mov
dec
push
aas
xchg
fadd
lods
push
pop
repz
cmp
fwait
out
sarb
aam
notl
loop
jbe
dec
test
mov
xchg
stc
pushf
gs
adc
xchg
or
jbe
movhps
xor
test
pop
mov
in
fwait
out
mov
insb
mov
scas
insb
leave
mov
cli
fcmovbe
xlat
mov
cmpsl
fcoml
mov
sub
push
leave
cmp
or
shl
pusha
adc
cmpl
pop
add
and
dec
sbb
xchg
jl
insb
lahf
mov
xchg
cmp
aad
push
data16
pop
bound
bound
sbb
cmp
int3
aam
lock
scas
andl
cmp
push
jecxz
je
test
movsb
sbb
dec
adc
mov
insl
test
xchg
inc
subb
inc
mov
xchg
push
adc
adc
dec
mov
xor
inc
dec
add
popf
sahf
popf
int3
cmp
xchg
stos
fnsave
xor
icebp
mov
and
dec
or
jns
xchg
call
jns
mov
sub
cmpsb
stos
mov
or
movsb
jge
jl
in
push
out
and
mov
data16
cli
inc
lock
lcall
push
leave
mov
push
in
cmpsl
arpl
ret
xchg
lock
flds
cmp
sahf
lea
pushf
fistps
in
mov
pop
and
cmp
fstpl
lds
adc
push
cmp
lods
rorl
push
dec
mov
mov
out
and
fldt
pop
mov
jne
scas
test
sub
lret
mov
fldl
int
push
int3
sbbb
xchg
orb
lds
lahf
shrb
sahf
lcall
sub
fcomip
fsubl
inc
fisttpll
cmp
sbb
dec
xchg
test
cmp
movsb
cmp
xchg
lret
lret
mov
out
stos
shlb
in
inc
ret
popf
mov
sub
push
dec
cmp
repnz
je
adc
cmc
sbb
in
popf
push
adc
push
xchg
negl
or
je
shlb
dec
rcr
dec
cwtl
jl
lods
ja
push
loopne
and
mov
fisubs
test
rcrb
inc
dec
pop
into
pop
sbb
cmpsl
push
ja
scas
xchg
sub
adc
imul
adc
cld
pop
adc
jns
imulb
push
xchg
aad
push
inc
lods
add
enter
pop
rclb
imul
xchg
jl
loope
add
dec
mov
or
mov
add
adc
mov
iret
cltd
push
xchg
cmpb
hlt
mov
xchg
std
subb
mov
into
jl
xorb
cld
and
mov
sub
fisubl
mov
sub
dec
push
inc
shl
das
out
inc
dec
stos
pusha
inc
ja
lahf
add
push
mov
add
shrl
pop
or
dec
addr16
je
cmpsl
mov
div
inc
loop
add
or
mov
push
int
jmp
lret
pop
and
addr16
mov
jnp
jbe
test
stos
push
dec
add
mov
lds
mov
enter
push
pusha
push
pop
and
aas
fisttpl
adc
int
or
mov
cmp
xchg
xchg
mov
or
fcmovnbe
and
xchg
insb
aam
xchg
adc
mov
ret
pop
pop
insl
xor
movsl
push
testb
pop
xor
add
add
js
cs
cwtl
pop
adc
cltd
jecxz
adc
pop
int
clc
xor
push
outsb
daa
pop
faddl
push
lods
mov
push
test
mov
pusha
mov
inc
mov
out
pop
popa
sub
aad
inc
decb
je
out
or
lds
fs
cmp
movsl
add
push
and
xchg
jnp
jecxz
jb
xchg
test
bound
insb
cmp
pop
adc
dec
fildll
arpl
test
loope
or
test
stos
jg
jb
into
jb
mov
int3
cmp
mov
xchg
lods
sub
xrstor
movsb
lret
cmp
sbb
pop
jg
add
cmpsl
out
adc
xor
add
and
add
fwait
add
mov
shll
aam
xchg
sub
xchg
mov
enter
inc
adc
roll
stc
xchg
cli
stos
xor
in
imul
shrl
cli
sbb
leave
sbbl
lahf
aam
push
shrb
shrd
stos
jecxz
out
sub
mov
int3
cltd
jp
cwtl
push
and
cs
lret
xchg
mov
cld
xchg
frstor
aas
jp
out
in
push
arpl
push
adc
fwait
dec
push
daa
outsl
repnz
stc
aad
fs
inc
aas
loop
sbbl
or
add
inc
or
cli
adc
cwtl
negl
push
rcrl
test
sbb
sbb
cltd
call
lods
sub
inc
xor
pop
push
loopne
sbb
xlat
dec
dec
pop
mov
pop
clc
das
cmp
pop
fbstp
add
js
xchg
lcall
out
mov
push
popa
mov
das
ljmp
add
shrb
clc
lret
adc
cld
push
mov
sarb
jmp
cmp
push
ror
sub
ret
mov
jmp
cmp
movsl
add
xchg
lea
fstpl
popf
pop
xchg
mov
popf
addr16
lds
mov
mov
loope
ja
dec
ljmp
fstl
fst
stos
aas
pop
adc
popl
je
out
cs
mov
jl
insl
mov
adc
push
ljmp
sbb
xor
pop
ljmp
stos
lahf
push
dec
pop
or
jns
pop
mov
repz
jns
mov
mov
stc
test
scas
popa
sti
push
test
dec
or
dec
cmp
add
inc
or
push
cli
loope
pop
pop
push
movsb
sub
xchg
mov
cmc
pop
imul
filds
mov
shlb
cmp
daa
cmpsl
lds
js
push
add
add
push
sub
xchg
push
shlb
clc
xor
push
sbb
aad
sbb
mov
mov
push
sub
mov
shr
lds
icebp
loope
adc
push
icebp
mov
mov
jno
rcrl
scas
sti
sbb
int
repnz
inc
scas
fidivrs
cmpsb
cmp
adc
fimull
in
mov
repz
gs
mov
popf
dec
imul
es
mov
daa
les
push
sbb
imul
push
adc
mov
fldt
int
fwait
sub
mov
adc
les
inc
lds
shlb
loope
das
fdivrs
pusha
add
dec
mov
enter
dec
adc
pop
divb
mov
cmp
repz
cmpsl
or
lret
mov
fiadds
pop
loope
lds
jp
fidivl
std
and
out
jnp
jl
mov
jnp
lea
ljmp
sbb
orl
daa
mov
mov
test
lods
adc
mov
inc
out
out
inc
aas
cs
pop
sahf
xchg
leave
mov
clc
pop
mov
in
scas
and
cli
cltd
inc
outsl
fldenv
ss
inc
sub
lock
push
fiadds
addl
xor
sbb
inc
loop
lret
pop
iret
lods
adc
jnp
sbb
adc
stos
nop
and
sahf
pop
rcll
enter
ljmp
or
rcl
mov
loopne
sub
sbb
xchg
lret
imul
and
scas
ss
mov
pop
je
test
imul
cmp
mov
fs
ss
je
fsts
mov
adc
je
data16
pop
fisttpl
mov
lea
lret
or
or
test
or
xlat
pop
and
fs
js
loopne
cmp
fcoml
sub
lock
push
cmp
popf
test
adc
xchg
out
fstps
xor
jne
mov
fistpl
add
scas
or
mov
aad
or
add
repz
xorb
mov
int3
inc
or
cmp
mov
es
jbe
jle
test
add
sub
push
sbb
popa
call
xor
fs
daa
idivb
out
xchg
jae
js
fists
lahf
and
mov
mov
jle
inc
sub
cmp
push
orb
sarl
inc
cwtl
out
or
or
mov
inc
stos
mov
sahf
or
js
dec
add
lcall
fsubl
and
xor
insl
mov
mov
push
sar
jne
mov
jne
adc
sbb
jnp
jg
push
loopne
ss
js
push
mov
lds
mov
fucomi
call
mov
inc
out
inc
push
dec
or
pop
or
push
dec
shll
subl
adc
jae
loopne
js
fsubrs
iret
hlt
xchg
and
mov
rcr
mov
and
cmc
mov
xchg
in
and
icebp
in
lcall
insl
pop
jae
popa
mov
test
sbb
inc
daa
arpl
aas
sbb
pop
push
cli
mov
stc
ret
mov
inc
sahf
std
iret
in
push
outsb
dec
sbb
test
shll
popa
lock
mov
push
popa
sub
sub
and
jno
mov
cmpsb
aam
xchg
lock
inc
pop
inc
adc
popa
aad
sti
leave
jle
jns
push
test
insl
push
outsl
mov
ja
loopne
lods
scas
in
lahf
or
dec
push
mov
test
pop
xor
adc
pcmpeqw
xchg
in
pop
ss
mov
cmp
inc
adc
arpl
jnp
int
cmp
jo
gs
add
fisttps
jno
faddl
loop
jmp
mov
mov
cmp
cmpsl
pop
outsl
mov
enter
hlt
sbb
xchg
cmp
inc
inc
stos
sbb
dec
hlt
imul
lea
fwait
cs
mov
ss
test
dec
js
pop
std
test
xchg
jecxz
jmp
loope
xchg
sub
nop
cli
and
arpl
xchg
mov
adc
add
in
mov
pop
out
adc
cltd
and
out
push
jne
cmp
jecxz
lock
cmp
and
repz
or
int3
insl
call
pop
mov
dec
and
mov
cmp
enter
ret
mov
mov
je
xchg
aam
dec
push
adc
pop
mulb
sbb
mov
jbe
in
and
mov
push
mov
into
pop
xchg
repnz
fcomi
inc
movb
je
xor
mov
xlat
sub
popf
and
sarb
add
dec
sub
ret
sub
dec
jmp
dec
jbe
orb
jno
push
iret
dec
push
jge
sarl
mov
jg
fisubl
push
add
mov
xlat
cwtl
jbe
call
push
xor
xor
mov
dec
nop
xchg
filds
stc
dec
add
push
in
and
xchg
dec
jne
scas
inc
lret
icebp
cmpb
int
loop
lret
add
dec
or
dec
cmp
sub
push
cmpsb
adc
imul
inc
cmp
inc
add
stos
pusha
dec
xor
mov
sbb
mov
dec
dec
stos
loope
out
mov
xor
add
pop
lea
mov
dec
ljmp
outsl
aad
jne
cltd
rorl
sub
call
ss
ret
scas
sbbl
lods
push
jl
ljmp
rclb
clc
cmp
test
pop
rcr
or
repz
mov
or
mov
cmp
or
cld
xchg
dec
sahf
aas
xchg
mov
xor
mov
cmpsl
dec
jns
add
add
movsb
xchg
adc
in
idivb
sbb
adc
shlb
lret
push
add
fistpll
sbb
es
pop
clc
push
jno
cwtl
mov
or
jae
orb
xorl
subb
mov
ret
int
cmp
pop
push
lret
sub
jno
call
mov
jp
pop
sub
xchg
test
push
mov
imul
xchg
outsl
test
and
pop
pop
pop
cmp
ljmp
pop
or
in
lds
out
data16
test
and
dec
popf
or
push
mov
call
cmpsb
xchg
icebp
sbb
mov
push
jecxz
mov
xchg
sub
lock
add
mov
sub
es
cmp
out
insl
test
xor
cld
rclb
sahf
mov
loope
mov
cmpsb
push
inc
in
pop
add
lods
fdivrl
cltd
outsl
mov
dec
cli
mov
orb
repnz
or
or
shll
or
mov
inc
pop
cmc
and
dec
and
rcrl
cmp
mov
ret
jmp
lds
mov
rcll
lds
lret
xor
loopne
pusha
inc
and
jmp
and
jle
call
mov
call
or
daa
std
pop
push
jne
xor
add
jno
data16
xor
imul
movsb
add
out
mov
sbb
lret
sub
out
mov
push
pop
pushl
les
cmp
test
or
cmpsl
das
cwtl
xchg
test
mov
push
lret
mov
cmp
pop
add
jnp
cltd
sbb
repz
adc
hlt
lahf
test
fcmovu
stos
jge
inc
xor
add
inc
decl
sub
xor
mov
mov
or
fsubs
mov
jg
loop
or
jge
aam
rcll
xlat
xor
lock
in
sbb
stc
or
jnp
mov
cmp
fcom
test
bound
rcl
fsubs
push
cmp
in
jnp
int
out
or
jmp
mov
data16
negl
push
push
neg
sub
sarl
ffreep
xlat
sub
push
lret
fdivl
and
ret
xchg
fs
call
subb
bound
test
sar
cmp
out
fimull
pushf
adc
aaa
push
clc
jmp
adc
test
mov
insl
or
dec
icebp
cmpsb
mov
or
jge
outsl
andl
jb
idiv
cmc
xchg
imul
dec
call
into
mov
pop
fdivrs
dec
rcrl
xor
jmp
adc
icebp
push
jno
adc
xor
sti
lods
es
fsub
test
add
mov
pop
mov
subl
or
sbb
idiv
cmpsl
push
xor
in
imul
push
lret
pop
push
jl
xor
aaa
cmp
inc
cmp
ja
lock
sbb
and
cmp
es
les
repz
xor
hlt
btr
dec
or
push
pop
dec
jae
pop
lahf
jae
inc
cltd
icebp
popa
dec
push
inc
add
dec
push
lahf
mov
loopne
test
pop
ljmp
aad
sbb
daa
and
inc
shll
cld
cmp
lret
add
inc
in
mov
mov
stc
pop
mov
lds
fildll
jbe
add
fiadds
rolb
scas
push
ret
jmp
test
in
xchg
mov
in
adc
jne
or
clc
lahf
sub
sbb
pop
aaa
in
scas
sbb
loop
inc
adc
xchg
int
js
mov
je
shlb
sti
or
fdivs
dec
mov
sub
in
cmp
xor
or
mov
cmp
mov
iret
sbb
cld
add
add
mov
inc
adc
out
mov
and
into
sub
ljmp
mov
scas
cmp
out
scas
movsl
and
addl
xor
jno
push
lcall
popf
int3
pop
popa
cmp
stc
lcall
fmuls
xorl
add
mov
xor
dec
out
push
test
jo
push
fneni(8087
jne
ss
movsb
loop
aad
sbbb
inc
jne
cmpsl
sub
aam
add
int3
push
imul
pop
icebp
dec
push
test
or
mov
bound
in
push
or
cmp
sahf
mov
outsl
popf
pop
das
xchg
jae
xchg
popf
mov
call
xchg
stos
dec
ffreep
bound
xchg
adc
loop
push
xchg
and
pop
loope
push
and
in
insb
aaa
rolb
jmp
outsb
shll
scas
pop
insl
sub
mov
push
movsb
movsl
cmp
adc
mov
sub
iret
inc
int3
lds
lret
test
mov
push
jno
mov
add
mov
nop
cltd
xlat
pop
stc
push
fbld
fucomp
mov
or
jb
fsub
xchg
add
ss
and
lret
cli
mov
lahf
mov
mov
sbb
jp
push
dec
lahf
jns
mov
inc
imul
inc
loope
outsl
push
cmpsb
orb
std
aam
test
pop
sti
push
mov
loope
adc
sbb
movsl
sbb
push
lret
sahf
jmp
dec
mov
or
pop
mov
loope
dec
call
xchg
in
jnp
jmp
out
sub
push
aas
popf
leave
mov
inc
test
movb
pop
or
jae
movsl
and
mov
pop
cmp
lret
mov
push
and
sbb
cmc
add
in
mov
jmp
roll
dec
mov
in
aaa
xchg
cmpl
lret
push
push
cltd
mov
xchg
daa
sub
jle
loope
sbb
dec
ljmp
mov
push
mov
xor
es
add
mov
scas
insl
js
insl
push
xchg
sbb
push
sbb
cld
cmp
xorl
jecxz
repz
mov
pop
mov
and
lods
push
mov
int
fcomps
cmp
scas
xchg
out
outsl
cmpsb
je
pop
add
mov
scas
or
hlt
test
dec
adc
movsb
sbb
and
mov
rcl
mov
mov
xor
std
xor
mov
aas
dec
xor
stc
js
inc
dec
fldcw
sbb
fwait
mov
inc
adc
and
sbb
xchg
mov
jge
out
or
loopne
rcrl
jae
popf
movsl
inc
adc
notl
fstl
jg
push
cmp
outsl
cmp
out
cmp
jo
daa
mov
insl
popf
fildl
pop
test
or
pop
xchg
sti
testl
jne
mov
cmpl
popa
cmp
shrb
mov
mov
add
ds
push
in
out
cmp
jl
xchg
ljmp
fucomi
adc
add
cmp
sub
rol
cmp
idivl
jmp
xchg
pop
test
jb
fs
add
adc
es
cld
lret
loop
mov
jmp
nop
dec
fcomp
out
mov
adc
mov
xor
inc
push
inc
sbb
cltd
int3
and
push
cwtl
cmpsb
icebp
lds
mov
shl
add
fimuls
popa
icebp
push
outsb
aas
jb
loop
mov
aam
xchg
cmp
loope
iret
lret
ja
pop
push
inc
inc
aaa
nop
call
stc
push
add
inc
das
test
aam
outsb
testb
scas
fs
add
adc
inc
mov
icebp
xor
div
pop
dec
mov
lds
rclb
pop
mov
aas
cli
les
mov
mov
mov
mov
push
pop
cli
das
repz
add
pushf
sti
jg
int
fmuls
xchg
xchg
call
dec
mov
sti
push
pop
in
jp
fidivs
stc
test
pop
lahf
mov
sti
or
sub
pop
ret
aaa
adc
mov
sbb
mov
or
lret
cmpsl
ret
popf
test
cs
cli
cmpsb
leave
shll
mov
or
jb
dec
push
push
rorb
cltd
inc
add
addr16
out
or
dec
adc
push
hlt
adc
cmpl
in
xchg
int
adc
inc
pop
xor
lds
mov
fcoms
jbe
dec
push
in
incb
xor
pop
scas
jecxz
jbe
das
xchg
test
cmpl
sub
push
or
pop
add
sbb
or
loopne
jp
sbb
xlat
add
jns
daa
rcrb
dec
aad
call
inc
lcall
xor
ret
xor
and
mov
fbld
into
fidivrs
stos
xchg
test
in
cmp
cmp
loopne
and
xchg
pop
cs
mov
inc
leave
pop
in
inc
jae
pop
lock
inc
xchg
and
stc
lock
xor
outsb
lahf
mov
stos
pop
mov
cmp
jno
sbb
adc
dec
mov
hlt
outsb
mov
orb
xchg
outsl
jbe
dec
adc
add
rcrb
jle
jo
xchg
or
pop
push
cmp
cmp
cltd
stos
mov
sub
cmpsl
fmuls
sub
out
loop
imul
sbb
xchg
mov
xchg
cli
idiv
or
in
pop
fisubrs
jg
cmpsl
sub
inc
jl
inc
sahf
stos
push
adc
push
aas
jae
inc
nop
je
out
cli
cmp
inc
clc
repnz
sarb
sub
or
adc
into
jle
stos
mov
adc
or
roll
jns
out
loope
imul
xor
mov
xchg
xor
cmp
pop
pop
fiadds
jno
pop
xchg
jnp
xchg
jmp
mov
mov
insb
stos
cmc
jne
jae
lea
hlt
and
lods
or
xchg
push
repz
nop
ret
jnp
mov
lds
mov
jns
inc
aas
mov
cmpb
gs
in
sub
adc
call
cmpl
in
imul
ss
ret
pop
rolb
fldl
mov
pop
pop
jge
and
jge
sbb
mov
in
ret
orb
in
pop
mov
gs
xchg
pop
sbb
or
mov
stos
xchg
les
mov
shlb
loope
ja
push
or
or
mov
inc
icebp
shrb
cli
cmp
cmp
sub
lahf
in
icebp
sbb
inc
pop
add
lcall
ret
aam
cmp
xchg
push
pop
adc
sub
xor
divl
ficoms
sbb
je
arpl
fidivrs
lods
mov
jbe
dec
aad
pop
or
or
js
insl
rcl
inc
loopne
xchg
mov
adc
hlt
mov
arpl
pop
ret
pusha
aam
adcb
pop
xchg
das
test
cmovle
xor
movsl
adc
mov
jb
mov
scas
ret
lods
rcll
cmp
lahf
in
ljmp
push
rorb
mov
into
sub
scas
xor
enter
popf
jno
or
mul
out
jne
iret
pop
mov
or
lret
mov
pop
push
or
cmp
lret
adc
push
imul
sbb
cmpsl
enter
lods
lret
cmpsb
in
inc
in
sub
inc
clc
fstpl
sub
dec
mov
repnz
inc
push
enter
adc
daa
pop
mov
in
sub
sub
and
dec
jo
gs
fmuls
or
mov
cmp
std
rcl
mov
fidivrl
and
xorb
repz
hlt
sbb
jmp
lahf
data16
data16
faddl
shl
inc
aaa
imul
xor
ljmp
ffreep
xchg
rorb
in
cwtl
sub
insb
or
in
aad
and
out
push
repz
sbb
jmp
push
push
jle
cwtl
insb
xchg
test
cmpsb
and
mov
jl
jne
inc
sbb
adc
lods
pusha
mov
inc
rcll
adc
dec
das
inc
iret
stc
xchg
into
jmp
mov
xchg
pusha
int3
bound
mov
mov
or
outsl
test
mov
cltd
hlt
icebp
loop
fbstp
jmp
dec
xchg
add
mov
ds
dec
xchg
mov
daa
inc
shrb
psrld
insl
jmp
js
nop
mov
jmp
sbb
push
mov
push
clc
lods
fwait
test
andb
test
test
stc
push
daa
jne
push
ds
int3
aas
jmp
push
ljmp
lahf
mov
add
shll
xor
out
lea
daa
or
and
incl
cmpsl
xor
add
pop
ret
and
xor
shll
mov
xchg
mov
jg
cmp
mov
jmp
ficoms
dec
sahf
adc
cwtl
loop
pushl
mov
sbb
je
dec
inc
fisubl
inc
pop
ret
pop
jbe
sahf
in
leave
stos
or
repz
push
bound
sbb
sbb
movl
mov
pop
add
or
dec
jnp
xor
dec
push
dec
push
adc
pop
cmc
cmpsl
je
or
lret
add
inc
dec
mov
mov
aad
gs
pop
ss
dec
inc
ss
imul
lock
pop
pop
addr16
or
jg
ja
ja
or
je
fucomp
loopne
jecxz
inc
or
mov
scas
pushf
popf
mov
shll
push
lock
test
cmp
mov
arpl
and
fnstenv
in
outsb
lock
xor
mov
mov
cmp
popa
cmp
icebp
hlt
insb
xchg
lret
xlat
mov
push
fsubrs
in
aam
push
into
jmp
sahf
sarl
jl
push
xor
fldcw
movsb
nop
add
popa
sub
cmpb
sub
lea
test
dec
jge
lea
pop
mov
int
or
in
ss
adcl
mov
sbb
dec
enter
dec
repz
lahf
mov
inc
xor
sbb
cmp
jmp
mov
cmp
push
jb
in
js
shl
jge
icebp
xor
and
mov
mov
call
test
xchg
in
roll
mov
jge
cmpsb
pushf
add
arpl
mov
xor
rol
mov
and
dec
gs
sbbb
clc
test
sti
shl
dec
xor
jns
sub
inc
test
cmp
test
movsb
stos
add
dec
sbbb
repz
sbb
hlt
xchg
xor
pop
sbb
call
dec
inc
mov
cli
out
jnp
xchg
sub
or
xchg
jp
push
test
es
or
jl
push
jb
and
push
dec
jno
pop
jecxz
out
or
and
inc
mov
imul
roll
es
inc
fildll
mov
fdivrs
es
xchg
inc
mov
ss
aad
xor
gs
pop
clc
cmpsb
mov
sub
clc
cli
nop
loop
fsts
mov
and
clc
xchg
insb
mov
outsb
loopne
mov
jns
or
pop
test
add
loop
adc
fists
ret
jmp
dec
xor
insl
fnsetpm(287
mov
add
sub
ljmp
and
das
mov
mov
outsl
adc
pop
popa
mov
push
mov
cmp
out
shl
or
shr
inc
adcb
sbb
into
push
mov
xchg
cmpsl
daa
push
and
or
mov
jb
scas
rcll
pop
pusha
fidivs
ja
sbb
aad
mov
pop
dec
xchg
mov
push
mov
cmp
add
xchg
andb
das
cmp
dec
pop
mov
icebp
les
push
pop
dec
sbb
mov
lret
xchg
je
mov
fadds
xlat
les
stos
inc
sahf
push
aad
push
jbe
mov
jno
pushf
jg
dec
fiadds
lahf
bound
fcmovne
adc
cli
sub
out
gs
jl
jae
push
test
popa
adc
movsl
arpl
icebp
push
clc
jmp
in
dec
mov
jmp
add
hlt
adc
jecxz
cs
shlb
clc
xor
push
outsb
movsb
or
shlb
xchg
adc
addr16
mov
stos
xchg
sahf
inc
cmp
test
rorb
stc
popf
imul
mov
stos
push
mov
mov
fimuls
jp
dec
sub
jb
into
mov
and
jmp
jbe
sti
jmp
sti
add
jl
cmp
and
in
mov
push
hlt
imul
cli
add
jns
add
aaa
and
add
mov
jle
push
add
ja
dec
mov
cmp
dec
mov
cli
ficoms
clc
in
aaa
into
push
aas
loope
push
jno
int
roll
sub
jge
test
minps
jnp
xor
mov
push
cli
ljmp
mul
jnp
in
jle
cmpsb
mov
mov
pop
inc
movsl
popa
xchg
in
add
pop
jae
test
xor
fdivl
jo
or
movsb
lcall
inc
mov
sti
add
mov
test
sub
stc
mov
or
mov
cmp
sahf
outsb
mov
xchg
pop
aas
sub
cmp
mov
adc
dec
xchg
orb
cmp
lahf
rclb
int
aam
cwtl
mov
add
dec
sub
fistps
xchg
js
adc
jnp
xor
ss
fidivrl
sbb
ret
mov
jb
jo
push
std
or
pop
rcll
movsb
ja
popf
inc
lods
and
add
outsl
xchg
mov
mov
pop
jbe
aas
inc
push
mov
mov
mov
fcmovnu
mov
ja
popa
das
lods
outsl
cmp
call
prefetchw
cmc
stos
aaa
cmpsl
push
rorb
repnz
cmp
add
mov
clc
pop
push
rcl
iret
shll
pusha
out
sbb
xlat
mov
stos
xor
jecxz
pop
pop
insb
jnp
pop
sbb
addb
sbb
xchg
pop
mov
push
test
dec
cmc
ljmp
test
outsb
fs
inc
lock
pusha
test
addl
mov
test
out
xor
fistps
out
daa
lods
std
arpl
pop
ljmp
jecxz
sbb
dec
shrb
inc
pop
lods
xchg
xchg
ds
addr16
outsl
fwait
jge
in
bnd
sbb
inc
out
subb
jecxz
and
ss
fsubs
pop
pushf
ret
push
insb
mov
ror
mov
xor
xchg
add
add
adc
adc
pop
inc
sarl
fst
sub
push
xor
jnp
cmpsl
sub
mov
mov
aaa
lds
inc
xchg
arpl
jne
mov
ds
mov
xchg
lea
jg
xchg
pushf
xchg
imul
pushf
jno
stos
cmp
jmp
or
xor
push
in
pop
sub
inc
fsubl
push
fidivrs
in
sbb
cmc
add
imul
mov
mov
ds
int3
xor
addr16
fwait
out
mov
push
lahf
pop
push
sarl
mov
pop
xlat
mov
js
out
xchg
xchg
aad
mov
and
mov
jecxz
pop
and
xchg
mov
push
push
lock
cmp
adc
incl
adc
insb
nop
dec
xor
sub
mov
aad
popl
adc
xchg
or
cli
jp
jp
mov
mov
fadds
pop
ficompl
dec
popf
mov
adc
sub
add
xor
xchg
mov
sarb
inc
and
leave
inc
mov
jp
xchg
mov
push
pop
dec
pop
cmp
dec
int3
adc
lods
in
xor
pop
cmp
out
repz
mov
fistpll
jl
lods
es
sbb
aas
enter
int
insb
addb
xchg
out
inc
xchg
pop
xchg
test
cwtl
call
call
and
pop
push
sub
data16
fs
sbb
dec
daa
pop
pusha
in
sbb
xor
out
jbe
fdivl
idiv
pop
xchg
dec
adc
fldcw
push
cwtl
testb
fs
mov
cmpl
aad
cld
daa
aas
jp
and
dec
cltd
das
mov
insb
or
ljmp
rclb
repnz
mov
push
lods
push
mov
mov
ss
push
cs
sub
or
inc
pop
cmpsb
daa
lea
dec
hlt
inc
xchg
inc
jl,pn
nop
cmpsl
dec
xor
dec
fadds
pop
jg
jno
jnp
jb
jns
adc
shll
cltd
jmp
jb
pusha
cs
sub
pop
add
je
js
xor
jb
mov
ror
incb
cmp
sbb
fwait
nopl
call
sti
fsts
stos
xor
sti
or
xor
xor
movsl
iret
cmp
add
or
xchg
call
ret
in
xchg
or
stc
in
cld
int
ss
jecxz
out
in
sahf
inc
cmp
dec
adc
and
sub
pushf
jns
pop
dec
add
out
lea
aam
ret
cwtl
je
icebp
out
inc
fcomps
push
insl
fs
fdivs
lea
jno
fwait
push
jno
lea
push
mov
dec
mov
stos
out
in
push
cmp
jnp
arpl
jmp
mov
test
hlt
lcall
or
mov
daa
add
inc
mov
loope
cvtps2pd
inc
xchg
add
daa
add
push
rcll
lret
dec
ljmp
xchg
jo
les
in
sub
mov
in
adc
adc
std
aam
cli
shll
stos
out
inc
rcrb
sbb
xchg
add
jb
addr16
scas
out
fldt
mov
in
in
ss
push
loopne
lods
rclw
add
push
push
fwait
xchg
popa
add
dec
sub
mov
lret
pop
dec
or
adc
add
mov
inc
add
push
push
xchg
inc
inc
add
gs
lret
lods
jb
fs
mov
pop
push
push
imul
and
jmp
xor
inc
jnp
add
divb
sub
jecxz
arpl
adc
scas
leave
addr16
jge
xor
jle
jbe
pop
movsl
lcall
movsb
loopne
maskmovq
xor
add
repnz
mov
xchg
int3
jmp
mov
sahf
stos
sub
jno
xchg
addr16
std
xchg
and
cld
outsb
mov
mov
into
pushf
test
add
mov
xor
leave
shll
sub
cmp
dec
cli
test
ds
fists
and
adc
inc
dec
cmc
pop
stos
xchg
out
out
in
xchg
cltd
shl
sarl
ret
jo
dec
sbb
in
ret
add
cmp
push
movsb
popa
cmp
in
mov
pop
and
push
cmp
rep
push
sub
push
ror
cmpsl
sub
cmovl
aad
xchg
inc
movsb
cmc
jg,pn
sbbl
mov
lahf
cs
mov
push
mov
xor
fninit
movsl
and
push
jp
dec
insl
xchg
ljmp
je
xchg
mov
mov
fsubr
sbb
jl
mov
inc
mov
add
stos
and
repz
mov
arpl
jp
pop
cmp
clc
lret
add
xchg
pop
pop
aas
hlt
mov
mov
push
into
mov
sbb
or
loope
stos
dec
sbb
rcll
pop
adcb
mov
sub
adc
clc
fildl
pop
sbb
in
sub
pusha
loope
call
lods
je
push
cmp
xchg
dec
movsb
cwtl
test
pop
lret
mov
cmp
mov
clc
in
jecxz
andb
les
decl
dec
and
or
jmp
mov
push
repz
out
iret
cmp
lcall
loop
sbb
scas
fbstp
shlb
lods
fxch
xchg
pop
mov
rcrl
ljmp
push
test
push
mov
fisubs
clc
mov
and
popf
mov
fnstsw
xchg
inc
push
repz
sbb
sbb
jle
test
out
call
das
out
xchg
std
sbb
in
sbb
mov
mov
mov
pop
ret
or
mov
int3
mov
adc
xchg
xor
push
inc
add
cmp
jnp
and
sub
mov
sub
inc
in
inc
repz
ja
add
mov
bnd
scas
insl
pusha
sbb
imul
mov
xor
movsl
shrb
fldcw
dec
stos
or
pop
pop
adc
xchg
jbe
fsubs
test
shll
lea
push
and
lea
jo
mov
mov
lods
xchg
cmp
lds
adc
xchg
rolb
test
mov
mov
sti
sub
mov
xchg
pop
aad
lods
xchg
es
dec
mov
cmpsl
in
or
fstpt
dec
xor
push
daa
push
adc
lods
sub
or
outsb
push
inc
mov
out
pop
jmp
and
cltd
sub
sub
jp
in
push
pop
sub
jne
popa
mov
test
scas
or
ja
repnz
pop
jl
pop
and
dec
rcrb
sub
pop
jecxz
imul
ret
jge
rcr
adc
push
inc
in
add
dec
and
mov
fwait
cwtl
fdivrl
popa
mov
inc
ret
jp
adc
jne
out
add
adcl
dec
or
add
iret
test
cmpsb
mov
das
fcmovnbe
jmp
out
xchg
dec
pop
mov
adc
cmp
mov
pop
fmul
shrl
lcall
jne
leave
outsl
ljmp
mov
inc
shlb
mov
rcrl
cmp
pop
enter
out
adc
ret
jg
and
push
into
xchg
shl
dec
mov
xlat
or
bound
test
imul
dec
dec
push
push
mov
daa
mov
out
sbb
mov
jo
pop
sbb
or
leave
pop
dec
jge
xchg
lret
dec
repnz
xor
stos
out
add
add
cld
or
inc
push
ljmp
inc
nop
testb
dec
rol
pusha
test
lret
daa
pop
push
or
jbe
insb
xlat
adc
clc
ficoms
sub
cwtl
les
aam
sub
sarl
subl
es
mov
stc
mov
inc
xchg
repnz
xchg
rcl
xchg
mov
pop
and
cmpl
out
mov
sti
int3
lods
aas
jp
push
addl
jp
pop
std
or
jg
cmp
cwtl
xlat
test
lods
pop
add
inc
inc
mov
inc
lock
stc
jl
sub
popa
outsl
mov
mov
or
dec
sbb
es
imul
sbb
sbb
mov
lods
inc
pop
ss
imulb
les
int3
fs
mov
enter
in
lahf
adc
mov
jno
out
dec
aaa
dec
ljmp
shll
ja
xchg
jae
or
lahf
enter
push
inc
xor
fstl
xor
push
cmp
xchg
aad
leave
popf
sbb
fucomp
lahf
push
cmp
imulb
xchg
stos
sub
push
cld
je
xor
je
push
jmp
subl
sub
sahf
dec
dec
enter
test
rcrl
fisubs
jle
jne
push
int
adc
arpl
push
cld
push
jns
xor
xchg
mov
pop
xor
sbb
jbe
repnz
xchg
fcoml
mov
scas
popa
lds
insl
and
sub
push
arpl
dec
stos
adc
insl
push
fdivrl
push
jbe
sbb
dec
push
mov
push
sbb
imul
sbb
fistpl
fldt
and
inc
inc
adc
sbb
cmp
adc
xchg
adc
das
loope
ret
cmp
xor
xchg
bound
sti
adc
arpl
ja
lret
inc
or
aam
jg
cmp
ja
sub
movsl
cmp
in
shr
idivb
stos
and
mov
adcb
sbb
mov
jbe
cmp
add
test
mov
sti
out
mov
test
fists
cli
push
sbb
mov
inc
ss
lea
fsubs
push
ds
inc
xchg
add
negb
aam
xchg
lret
je
jp
out
xchg
push
shll
dec
mov
ret
adc
pop
xor
cmp
ret
push
xchg
imul
repnz
push
push
xor
sub
fwait
mov
cmp
xchg
push
jno
jge
inc
mov
cmpsb
lret
in
cmove
test
push
cltd
xchg
movsb
mov
clc
movsl
jmp
sub
mov
pop
fstpl
xbeginw
mov
push
or
repz
cmovo
lret
xchg
scas
or
sbb
sbb
jnp
test
adc
push
lret
xchg
ja
add
in
and
imul
aad
inc
sahf
dec
sub
push
push
mov
lock
sub
push
rcl
mov
fidivrs
mov
xchg
lock
add
push
pop
sbbb
aas
xchg
and
jne
push
cmp
sbb
arpl
and
loop
dec
mov
das
lds
sbb
xchg
push
je
dec
mov
mov
outsl
mov
arpl
lock
insb
jmp
lods
push
cld
push
jg
fwait
cmp
sbb
leave
ss
out
hlt
and
sub
lods
mov
mov
push
jns
sbb
push
pop
scas
mov
mov
jle
cmp
gs
xchg
inc
ljmp
inc
dec
ss
pop
lcall
inc
loopne
xchg
cmpsl
and
sahf
cli
bnd
hlt
xor
mov
push
aad
dec
imul
loope
pop
loope
cwtl
and
cmp
push
or
stos
cltd
loopne
ds
sub
call
cmp
pop
dec
je
cmove
adc
nop
cld
add
jo
loop
cmp
cli
pop
rclb
ret
xchg
inc
pop
loopne
add
mov
inc
mov
out
jne
or
lods
dec
jnp
inc
jecxz
cmpsl
xchg
cltd
adc
daa
sbb
inc
xchg
sbb
imul
adc
aaa
and
jp
call
and
push
dec
mov
stc
cwtl
xor
jg
or
xchg
les
push
sbb
mov
inc
mov
pop
test
xchg
lods
mov
adc
dec
icebp
movsb
xchg
add
sarl
fsts
push
es
fucomp
xlat
or
stos
mov
adc
xchg
mov
arpl
aad
lea
popf
out
movsb
dec
sbb
pushf
dec
and
dec
pop
add
stos
aaa
dec
rorb
mov
fdivrs
leave
pop
push
outsb
xchg
pop
ret
shlb
sbb
cmp
out
adc
xchg
push
mov
and
leave
and
mov
mov
inc
jle
sarl
out
jge
xchg
pop
cmp
add
inc
mov
data16
ret
xchg
test
stos
add
enter
out
pop
inc
cmp
rcr
mov
jns
std
xor
jo
outsb
jge
dec
testb
jno
bound
test
adc
out
jns
ficompl
adc
subb
outsb
arpl
ds
fcmovbe
xchg
add
lods
add
pop
daa
mov
or
sbbb
pop
enter
xchg
push
orb
ds
lahf
sbb
in
aam
ss
dec
mov
xor
fsubl
pop
sbbb
mov
inc
and
rcrl
xor
cmpsl
xor
mov
clc
mov
dec
jns
mov
repz
push
fsubl
xchg
lock
push
and
mov
mov
mov
int
movsb
pop
jp
rorl
dec
pop
and
jae
jns
test
xor
mov
repnz
fildll
int3
and
pop
push
pushf
enter
mov
rolb
adc
mov
push
imul
inc
out
insl
fdivrl
lods
mov
jmp
arpl
fstpt
pusha
push
push
push
push
mov
jb
jae
loop
xor
fadd
or
xor
jle
fisttpl
pop
ror
ss
arpl
mov
movsl
imul
or
call
cmp
cmp
das
ljmp
push
inc
cmp
mov
test
xor
mov
cltd
sahf
xor
mov
not
pop
stos
insl
mov
lods
xor
push
fnstenv
shll
or
mov
in
loopne
mov
out
js
cwtl
mov
je
cmc
pop
dec
movsb
xor
cmp
dec
mov
lock
mov
std
insb
aaa
pusha
push
data16
add
imul
sti
call
cmp
leave
imul
and
cmp
cmpsb
sbb
mov
mul
jp
cmp
pusha
push
in
shlb
ja
rclb
ds
fcoms
in
test
mov
push
adc
mov
lret
mov
sbbb
push
xchg
or
lahf
inc
fs
and
sub
mov
js
call
shll
repz
sbb
fiadds
jnp
push
jmp
mov
jmp
inc
pop
jmp
inc
mov
dec
mov
mov
rorb
clc
and
adc
lret
cmp
and
out
pop
rcll
push
fisubrs
pop
gs
dec
mov
jmp
or
js
add
mov
jbe
fstpl
xchg
dec
lcall
movsb
xchg
and
cmp
mov
pop
push
hlt
loop
fdivs
push
and
loope
cltd
ret
jp
mov
pop
lret
into
dec
mov
jmp
arpl
cli
mov
pop
dec
pop
adc
insl
addb
int
xchg
fcoms
shrl
test
mov
aad
orl
adc
dec
jns
rolb
inc
mov
jecxz
loope
rcrl
pop
in
xor
pusha
loope
sbb
push
std
or
ds
pop
lds
ljmp
pusha
aas
xlat
xchg
bound
sldt
cli
aas
sahf
incl
cs
fidivs
fwait
adc
add
icebp
add
push
daa
je
stos
jmp
inc
insl
xlat
cmp
mov
and
pop
lods
push
jle
pop
fisubs
std
je
cld
inc
jmp
or
repz
sub
xchg
rcrb
push
dec
negb
in
xor
int3
add
inc
pop
cmp
sub
pop
lcall
repnz
sbb
cld
das
roll
lds
in
mov
dec
jmp
push
or
aaa
insb
dec
mov
xchg
jb
mov
mov
les
sbb
rorb
aaa
ss
or
xchg
test
add
xchg
fdivs
cmp
aas
es
rol
test
or
cmp
xchg
inc
mov
push
inc
push
stos
mov
mov
rcr
xchg
loope
pop
std
in
push
xor
adc
out
sub
xchg
shl
jno
icebp
sbb
scas
fcmovbe
jecxz
xchg
cld
fld
mov
int3
lret
inc
pop
pop
fstl
out
push
sbb
cmp
testl
mov
loope
std
or
dec
loope
das
and
jo
xchg
shlb
insb
movsb
xchg
mov
push
leave
orb
xchg
xchg
ljmp
inc
cs
pushf
jmp
pop
cltd
mov
and
push
dec
jo
scas
add
ss
jne
jmp
and
addr16
rclb
inc
inc
es
aas
sarb
mov
or
xor
subl
add
ja
icebp
cli
ret
jmp
and
insb
shrb
jbe
jae
cli
jl
daa
jmp
mov
xabort
dec
aaa
cmp
mov
int
pusha
ret
sahf
std
push
jnp
xchg
jmp
out
insl
mov
rorb
pusha
lods
sbb
enter
lods
push
lret
mov
shlb
arpl
cwtl
insb
jmp
cmp
lret
inc
mov
rolb
loope
es
push
mov
fs
dec
sub
jecxz
push
mov
movsb
and
push
arpl
loope
cmp
mov
and
repz
mov
mov
daa
addr16
jno
leave
adc
repnz
and
loopne
or
mov
add
pop
sub
out
das
lock
cmpsb
mov
aad
dec
dec
cwtl
stc
pop
sbb
push
cmc
cli
push
arpl
inc
rorl
int
mov
jbe
dec
ljmp
and
fwait
xor
add
repnz
mov
sbb
aas
je
lea
sub
jb
fwait
sub
lcall
dec
sub
das
jle
mov
or
lret
iret
sbb
enter
xchg
adc
xchg
sarb
mov
mov
inc
pop
test
cld
sarb
mov
stc
loope
jge
pop
setno
and
pop
pop
jg
not
aam
je
xor
scas
adc
cld
and
das
mov
sub
sub
shrb
imul
jmp
mov
icebp
adc
pop
dec
in
sbb
call
fucom
std
inc
mov
adcb
insb
imul
add
fistpll
fdivl
push
out
dec
jle
cmp
sbb
mov
int3
lahf
cwtl
adc
pop
rcrb
xchg
rorl
int3
and
and
std
ret
mov
xchg
stos
cmp
xchg
js
imulb
cmp
insl
and
sub
mov
mov
or
add
xchg
fdiv
adc
fs
xchg
sub
sub
fists
ljmp
mov
std
xor
jbe
pop
xor
je
sub
adc
loopne
mov
call
loop
mov
mov
fs
test
sbb
stc
popf
push
and
push
lret
adc
xchg
or
hlt
add
das
dec
and
lcall
sbb
iret
jns
and
insb
aas
lods
mov
pop
ds
mov
xor
and
push
dec
rcrl
push
mov
daa
dec
push
lods
push
mov
repz
pusha
sbb
push
cwtl
jg
arpl
cmp
scas
mov
cmp
mov
pop
add
xchg
pop
inc
sub
push
aad
xchg
movsl
sub
cmp
jbe
push
push
and
jb
xchg
enter
sti
ds
pop
nop
stc
mov
sbb
fst
mov
fucomi
stos
and
mov
rcr
loope
aam
ret
sub
scas
test
loop
sub
clc
fmull
lods
or
jle
ljmp
push
xchg
cmp
mov
mov
imul
xchg
in
ret
aam
jecxz
push
stos
shll
test
and
out
rclb
jg
jl
and
xchg
std
aad
jno
bound
shrl
xor
bound
mov
push
rcll
and
xchg
gs
repz
insb
xor
movsb
cli
outsl
and
test
mov
test
mov
xor
jecxz
pop
add
addr16
shl
sub
mov
in
out
xlat
into
xor
mov
push
nop
push
cmc
popa
cmpsl
fisttps
pop
cld
daa
aam
dec
sarl
dec
cmp
jnp
pop
jmp
sbb
mov
mov
dec
add
popa
or
jmp
and
mov
cmp
pusha
inc
pop
mov
xchg
and
push
jge
pop
dec
lret
out
sub
jne
lds
sbb
mov
mov
mov
add
add
sahf
xlat
jo
push
dec
mov
in
jp
int3
das
pusha
mov
and
popf
jg
dec
pop
into
adc
jns
xchg
push
xor
xor
ss
mov
fs
dec
inc
sar
call
push
or
cmp
les
and
cwtl
out
pop
push
jmp
stc
add
sbb
je
mov
jge
cwtl
dec
cli
push
mov
sub
cmpb
sbb
addr16
movsb
add
fs
sub
lahf
out
nop
lea
loopne
inc
je
dec
sub
fsubl
in
popa
cmp
cld
cmp
cmp
std
mov
pop
test
xchg
inc
stos
dec
fs
xor
pop
hlt
push
sub
mov
adc
dec
xchg
out
lcall
mov
std
or
into
or
mov
mov
xor
sub
mov
arpl
push
inc
sbb
and
mov
xor
xlat
mov
outsb
inc
imul
pushf
mov
shr
add
add
add
sub
pop
ds
add
mov
jne
lcall
jg
insb
push
idiv
mov
sbb
je
dec
and
mov
lea
push
xchg
mov
inc
aaa
mov
xlat
int
push
lods
das
leave
in
mov
mov
in
inc
push
in
in
xchg
addr16
movb
mul
repnz
clc
xchg
stos
pop
call
loopne
mov
add
ficomps
adc
sub
or
aas
xchg
add
jecxz
sbb
mov
push
fsubr
repnz
fstpt
or
iret
je
mov
push
repnz
test
loopne
xchg
adc
into
sub
mov
insb
inc
push
xchg
ds
rorl
clc
shlb
imul
push
sti
daa
xchg
movsb
out
fidivl
jmp
mov
or
push
cmp
and
jnp
lret
inc
jbe
sti
push
xor
add
sub
xchg
xorl
sbb
nop
dec
mov
scas
push
int
push
push
jle
test
pop
call
pop
fstps
xchg
call
xor
and
jb
sub
bswap
cmp
mov
push
clc
jg
in
outsl
mov
xchg
fistpl
sub
push
inc
arpl
sub
push
jo
sbb
ljmp
sbb
mov
mov
or
popf
jle
cld
push
add
jge
clc
out
and
sbb
mov
lahf
and
addr16
mov
xchg
test
or
mov
lea
movsl
lret
mov
leave
jnp
and
push
add
cmp
fdivl
mov
enter
jne
pop
add
cwtl
dec
aas
mov
push
aam
pop
sahf
daa
sub
sahf
lds
dec
push
xchg
pusha
sub
enter
scas
xchg
mov
xchg
mov
fsub
mov
xor
pop
pop
rcrl
pop
orl
fwait
pop
test
call
pop
mov
scas
lret
adc
push
add
lret
data16
xor
rolb
int3
xor
add
icebp
punpckhbw
mov
scas
mov
sub
dec
xchg
push
sbb
lds
jg
addl
add
inc
pop
adc
icebp
push
enter
and
xchg
popa
notb
cwtl
or
and
sbb
xor
lock
mov
sub
lds
ds
add
je
nop
xlat
mov
and
xor
jle
fildl
fs
repnz
inc
jmp
sbb
cmp
push
xchg
popf
int3
push
xchg
ret
sub
mov
jbe
fwait
call
mov
test
jbe
push
sahf
adc
shlb
cmp
jg
scas
push
test
mov
scas
jns
mov
add
popa
cltd
cmpsb
or
jno
mov
insb
mov
add
loopne
inc
jns
push
stos
test
sbb
jge
fstl
inc
fcoms
out
aam
cmpsl
sbb
or
or
mov
inc
xchg
push
or
filds
cltd
imul
or
xor
mov
in
mov
outsb
or
popa
popa
sub
movsl
inc
dec
jl
mov
aam
adc
pushf
stos
jb
idiv
imul
add
stos
movsb
ss
push
push
jne
xor
into
mov
bound
enter
scas
ret
pop
jmp
das
pusha
test
jl
jae
mov
mov
mov
fcmovbe
mov
cmp
pop
and
test
inc
dec
dec
mov
stc
test
in
lret
jbe
inc
cwtl
jge
call
ja
pop
sub
cmp
sub
out
or
fisttps
test
cmp
daa
cmp
push
mov
movsl
cmp
test
pop
stc
sbb
mov
pop
jmp
stos
adc
stos
sarb
std
dec
cmp
push
push
jne
aad
pushf
scas
xor
nop
lahf
aaa
movb
stos
push
ret
add
movsb
pop
push
adc
rcrb
pusha
push
ljmp
jae
add
std
into
negl
adc
mov
mov
fcoml
js
fistps
xchg
or
mov
into
push
mov
imul
pop
lock
pop
and
rdtsc
sub
fs
inc
pop
jg
dec
cmp
mov
jns
xchg
and
xor
es
pop
fwait
leave
adc
stos
decb
addr16
jno
stc
mov
cmc
push
pop
jnp
sbb
add
lret
mov
inc
xor
push
out
push
stos
mov
outsb
int
push
push
cmpl
dec
movsb
push
jno
mov
test
sub
pop
xor
cmpsl
push
ss
test
in
xchg
pop
sbbl
push
lea
jecxz
push
aaa
insb
mulb
cmp
je
mov
dec
sub
imul
testb
jns
andl
adc
in
aam
ficomps
mov
aas
pop
push
pushf
mov
fdivl
sub
or
lcall
les
dec
push
adc
sbbb
clc
inc
mov
cmp
stos
jg
stc
mov
mov
das
mov
jbe
push
mov
add
xchg
mov
inc
cli
shlb
adc
cmp
dec
out
ja
jecxz
dec
push
inc
cmp
cmp
test
movsl
mov
inc
lds
or
fsubs
pop
xchg
xor
cltd
movsb
mov
into
or
xor
pop
iret
add
cmp
sti
movsl
and
fdivs
push
mov
enter
scas
mov
pop
jge
cmp
mov
fcmovbe
fchs
mov
mov
push
cltd
lret
jne
arpl
int
loop
sbb
jg
mov
add
bound
testl
jmp
cwtl
pop
xchg
mov
cmp
jae
push
lods
dec
cltd
xchg
cli
in
nop
add
fwait
insl
popa
mov
cmp
xchg
jg
dec
int
push
push
cmp
xor
in
mov
shrl
xchg
fsts
xor
xchg
cmp
mov
sti
fnstcw
jmp
xchg
gs
scas
scas
inc
and
rcrl
jle
jno
push
xchg
jl
daa
into
ljmp
out
inc
aad
jnp
add
lock
sbb
movsb
dec
test
orl
cmp
and
ss
rolb
ret
adc
jg
mov
invd
loope
bound
xor
pop
ret
dec
push
cmpsl
add
mov
icebp
xor
lahf
or
jae
and
int
inc
sub
repz
pusha
push
or
stos
fcmovu
inc
jg
xchg
mov
lahf
pushf
cmp
dec
pop
ds
xor
jb
jae
outsl
mov
addps
xor
aaa
int
movsl
lcall
pop
rcl
mov
fdivrl
sub
js
jg
inc
push
inc
or
sbb
loope
leave
mov
test
test
into
lret
pop
pusha
adc
dec
sub
test
ja
aas
iret
mov
call
rolb
cltd
les
jb
dec
jp
insb
push
jb
out
and
xor
mov
mov
lcall
cwtl
sub
rcrb
xchg
movsb
push
scas
dec
xchg
addr16
imull
add
enter
aas
mov
idivb
jge
sub
pop
cwtl
es
imulb
mov
fcom
jp
pusha
cmp
pop
xor
stc
pop
enter
jno
mov
aad
fcomp
shll
or
pusha
std
xchg
test
loope
mov
sbb
push
and
dec
jecxz
cmp
sbb
mov
jo
test
jns
and
mov
sbb
cli
sahf
test
add
cmp
call
jl
xchg
jle
fildl
push
pop
fmul
push
pop
movsb
je
aam
je
dec
cmc
xlat
push
xchg
jp
flds
mov
div
inc
movl
scas
lods
add
fisubl
xor
pop
add
sbb
sub
lock
and
mov
fs
mov
mov
sti
cwtl
sarl
xchg
sbb
addr16
addb
rcr
aam
es
cmp
pop
pusha
adc
push
add
aaa
das
inc
jl,pt
sub
das
inc
cmc
or
mov
add
or
sub
rcll
or
jne
mov
addl
jle
mov
mov
jl
mov
cs
lea
adc
lret
std
mov
cmp
packsswb
dec
cmp
jmp
xchg
cmp
fcmovnu
into
hlt
loope
sti
ret
test
stos
insl
jnp
or
inc
inc
int
scas
push
mov
mov
and
mov
stos
or
push
mov
std
or
mov
and
add
pop
cmpsb
fildl
stos
sbb
js
sbb
shll
mov
test
rcll
cmpsb
int
mov
sbb
in
pushf
mov
pop
adc
popf
mov
mov
mov
cmp
jge
sahf
xchg
aad
cld
xor
fwait
cmpsl
jmp
pusha
pop
std
push
xor
mov
mov
push
sub
mov
xor
and
vcmppd
inc
push
outsl
add
xchg
jle
outsl
imul
mov
arpl
in
sti
repz
push
pop
jg
lods
aaa
loop
xchg
xor
lock
push
aaa
mov
in
dec
or
cld
xor
daa
inc
mov
add
lds
lods
mov
mov
nop
out
xorl
jp
scas
xlat
dec
pop
xor
out
dec
and
xchg
movl
xchg
adc
push
fsubr
mov
fidivrs
dec
aaa
imul
cmp
fdivrl
fisubl
aad
imul
push
sub
outsb
fmull
bound
adc
sarb
xor
enter
das
push
rcrl
xchg
out
sarb
fildl
cli
fdivrs
test
push
insb
lods
fstps
sbb
push
imul
xor
fiaddl
js
pushl
jmp
repnz
mov
mov
lods
dec
int3
dec
mov
mov
call
mov
push
push
test
push
test
and
push
bound
pushf
out
mov
fmull
mov
inc
push
inc
adc
inc
popf
movsb
outsb
icebp
cmp
push
fstpl
sub
test
daa
test
push
dec
cmp
jno
jae
es
and
and
les
jl
in
xchg
and
je
mov
stos
fsubrs
push
rolb
mov
daa
cmp
mov
lea
ds
stos
outsl
scas
mov
adc
push
sub
loop
push
xchg
jle
aaa
aas
sub
adc
pop
repz
outsb
jbe
pop
cs
push
sbb
sub
jnp
loop
sub
push
fstpt
call
push
in
mov
jnp
test
cmp
jo
push
or
pop
push
xorb
mov
loopne
push
mov
jl
popa
push
addl
stos
add
js
lods
fiaddl
es
jb
push
lods
leave
pop
sbb
add
jmp
push
adc
fmul
adc
popf
dec
dec
and
bnd
stos
scas
push
and
sub
ja
dec
sti
movsl
insl
cmpsl
pop
mov
sbb
and
test
jl
lret
sbbl
stos
jp
mov
inc
test
xor
ds
sti
xor
cmp
cmp
dec
addl
sbbl
call
adc
dec
pop
out
or
rorb
clc
add
ss
ret
mov
enter
sub
jle
ds
fst
fwait
ret
popf
xchg
jmp
sbb
ficomps
mov
imul
add
jmp
lea
popf
mov
jno
xorb
subb
mov
push
insl
mov
test
addr16
pop
repnz
sub
loop
mov
jno
jo
out
xchg
sti
xor
jmp
popa
push
lea
mov
cmp
in
jecxz
dec
dec
and
shr
xchg
roll
mov
and
hlt
ds
push
xchg
repnz
mov
jecxz
xchg
iret
icebp
xorl
cmp
cmp
add
dec
mov
test
push
jmp
and
rcl
popa
pop
insb
popl
push
repnz
and
ja
mov
data16
int3
push
lock
inc
jne
push
sbb
mov
arpl
sbb
mov
cmpsb
jno
dec
insb
pushf
rclb
icebp
inc
pop
cmpsl
xor
add
pop
push
repz
aam
mov
cmp
fidivs
or
dec
adc
dec
xor
lea
pop
or
push
decb
pop
pop
sbbl
cli
cmc
call
cmp
scas
pop
push
pop
and
add
in
lea
mov
fwait
std
movsl
cmp
shr
cmpsb
and
push
pop
out
mov
sub
adc
dec
jmp
push
inc
ja
je
les
aas
fdivrl
rcrb
fs
sub
mov
cli
pop
add
scas
out
stos
sbb
mov
je
fidivrs
jle
fstpt
lods
sarl
adc
int3
and
call
mov
cld
mov
lret
js
mov
push
xchg
aas
pop
mov
mov
scas
add
outsb
repz
inc
mov
mov
jge
cmp
loope
lock
rolb
mov
dec
add
in
mov
jecxz
enter
call
loop
ficompl
bound
mov
inc
lret
push
jmp
push
push
dec
insb
lock
add
push
mov
or
addr16
push
mov
mov
and
dec
sub
cmp
and
dec
jmp
mov
cwtl
cmp
mov
xchg
fbstp
mov
in
out
inc
scas
xchg
stc
movhlps
jmp
test
jbe
and
leave
icebp
dec
cmpb
add
lods
mov
push
fwait
jmp
dec
scas
aad
sbb
pop
js
adc
in
cmpsb
stos
out
repnz
call
dec
or
call
jl
xor
xchg
mov
test
nop
loop
push
cld
cmp
mov
iret
or
inc
cld
sbb
inc
dec
mov
dec
add
adc
or
lods
adc
jo
dec
testl
cmpsb
mov
sub
mov
ljmp
and
pop
sub
inc
das
outsl
add
push
notb
mov
cmp
mov
adc
hlt
push
xorb
mov
mov
adc
fidivs
xchg
add
mov
push
in
frstor
les
insl
fiaddl
jecxz
lret
jle
test
pop
xor
loope
jae
cmp
push
out
cmp
pop
push
push
rcrl
inc
or
xor
out
fdiv
push
outsl
dec
cwtl
mov
iret
ret
int3
pop
stc
cmc
loope
pop
sbb
cmc
mov
mov
lret
mov
cmp
inc
xchg
xchg
cmp
out
cwtl
xchg
sahf
mov
cmp
in
pop
add
add
add
hlt
lret
adc
mov
cmpsl
xchg
push
ja
adc
pushf
pop
lods
adc
inc
dec
mov
and
inc
sbb
outsl
xlat
leave
lcall
jae
call
jge
ljmp
or
pop
lock
push
xchg
jmp
mov
sub
xor
mul
loope
out
scas
les
cmp
dec
sbb
or
ja
add
in
mov
jae
das
xchg
data16
out
sarb
mov
mov
push
imul
pop
adc
stos
sub
cli
xor
add
lods
mov
jge
psllq
jae
jbe
lahf
pushf
aas
shll
mov
jo
out
std
pop
xor
push
push
in
outsl
stos
cld
add
xchg
add
xchg
xchg
mov
lods
add
fldt
and
mov
xchg
test
mov
pmuludq
cmc
jl
cmpsl
bound
and
sbb
stos
shrb
inc
pop
enter
jge
pop
lods
push
jo
jns
fucom
and
cmp
in
inc
subb
add
and
dec
int3
mov
and
aaa
jge
sbb
dec
shlb
mov
or
push
jmp
cmpsl
sbb
push
add
fdivl
pusha
in
add
jbe
xor
xor
cmpsb
loope
jp
cmpsl
bound
push
pop
addr16
pop
int3
jno
ljmp
mov
mov
and
movsl
out
mov
gs
xchg
leave
cmpsb
and
xchg
out
clc
add
ret
stos
dec
lock
loope
jmp
or
jge
cmp
fldl
cmp
test
daa
and
xor
mov
mov
mulb
icebp
sbb
test
pop
xchg
push
xor
lahf
cmp
out
dec
mov
xchg
sbb
incl
cld
mov
fs
in
push
cld
xchg
rcr
fisttpl
cmp
fiadds
insb
and
arpl
adc
fwait
and
xchg
fdivs
xchg
int
pop
popa
addr16
bound
fnstsw
adc
mov
push
shl
adc
popa
pop
leave
das
xchg
pop
fldenv
cld
mov
gs
lock
sbb
mov
out
cmp
mov
mov
testl
test
outsb
sbbl
mov
sbb
push
lret
push
jae
xchg
dec
push
push
mov
xchg
sar
push
das
js
arpl
push
inc
js
pop
js
fimuls
adc
in
fcoml
jmp
lahf
testl
xor
mov
test
pushl
rcr
jg
out
std
lahf
pop
cld
cmpsl
rol
push
inc
xchg
or
adc
mov
cwtl
outsb
jge
imull
div
aad
and
sar
std
addr16
out
test
dec
mov
dec
add
mov
inc
cmp
lret
lea
cmp
ss
jle
cmp
or
or
and
xor
mov
xchg
bound
jmp
imul
insl
call
fwait
inc
add
pop
cld
int3
scas
out
and
fimull
jl
aam
pop
int3
stos
jmp
inc
es
and
cld
mov
lods
xor
inc
inc
dec
ja
shl
fsub
jns
jp
push
test
in
inc
sub
imul
je
and
pop
and
lret
jae
sub
mov
xchg
xchg
sbb
ljmp
movsb
adc
pop
pop
shrb
dec
inc
iret
in
iret
into
mov
fiadds
sub
sahf
cmp
sete
jle
adc
pop
mov
aaa
mov
mov
push
xor
add
push
inc
ss
pop
loopne
mov
push
popa
imul
jg
movsb
xchg
sbb
sbb
sahf
lahf
xchg
push
pop
fidivrs
hlt
fnsetpm(287
push
movsl
jb
jne
xor
add
fidivl
rorl
rcl
jo
dec
add
adc
and
xor
mov
shll
lock
dec
out
out
int3
gs
fdivs
push
je
xchg
ret
push
jnp
push
popa
mov
xchg
out
loope
ds
xchg
mov
mov
imul
cld
jbe
lock
push
or
xchg
dec
pop
mov
pop
fadd
js
ljmp
sbb
push
js
shll
cmp
mov
mov
subb
mov
pop
repz
rol
movsb
stos
mov
movsl
jge
xlat
test
or
rcll
enter
xor
mov
popa
cmp
sysret
mov
dec
mov
dec
shr
jne
pop
xchg
ret
ja
ret
call
or
test
loop
cmp
cmpsb
dec
clc
clc
push
test
cmp
pop
xchg
fisttpl
push
xchg
divb
and
sbb
imul
fidivrs
cmp
cld
cltd
sub
jnp
les
jl
les
add
outsl
adc
loope
cmp
cwtl
and
xchg
inc
xchg
xor
xor
cs
and
stos
fisubrs
jl
mov
aaa
fucomp
test
mov
add
and
sub
nop
or
xor
adc
sub
inc
js
mov
push
xlat
mov
xor
repz
rorl
cmp
or
aas
mov
jbe
push
xor
je
mov
lds
lret
fildl
jecxz
push
cmp
mov
add
sub
push
push
ljmp
faddl
and
bound
lds
in
and
repz
dec
mov
fisubl
mov
in
pop
mov
out
ret
movsb
and
add
pop
pop
dec
lret
das
dec
jecxz
mov
sub
ficompl
fbstp
xchg
nop
or
and
adc
aad
add
mov
xchg
ljmp
aam
inc
push
xor
testb
jl
fbld
mov
rcrb
jae
bound
mov
in
mov
add
fwait
xor
sbb
pop
mov
xor
push
lea
icebp
add
dec
pushf
test
ret
lcall
jae
out
jecxz
mov
xor
mov
inc
hlt
stos
or
sub
and
sub
jmp
outsl
cmp
or
push
mov
std
inc
cmpsb
gs
mov
mov
add
adc
xchg
inc
push
mov
mov
not
pop
sbb
fwait
adc
pop
push
xchg
pop
pop
dec
icebp
inc
mov
pop
lods
mov
daa
and
movsb
or
insl
daa
test
jg
int3
mov
decl
icebp
clc
mov
and
inc
ret
push
imul
add
adcb
pmulhw
fucomp
in
vpmulhuw
ss
mov
bound
loopne
rcr
sbb
or
mov
mov
shr
xchg
pop
in
ljmp
stos
or
pop
or
int3
pop
xchg
imul
mov
mov
outsb
mov
cli
sub
cmp
mov
or
adc
enter
dec
mov
jecxz
mov
mov
sub
fcoms
push
dec
popl
mov
cmpsl
jmp
and
xor
sub
clc
jno
lds
jecxz
push
cli
pop
fcmovne
jg
mov
fmuls
add
loopne
popa
jecxz
lret
test
sti
lods
inc
mov
iret
out
stos
lcall
or
aaa
mov
jo
jp
lcall
dec
cmp
and
lods
push
xlat
push
jmp
js
lods
call
loope
ds
xor
outsb
mov
out
mov
cmp
test
loope
aaa
fidivs
enter
mov
and
inc
mov
jmp
outsl
iret
mul
out
int3
int3
testl
sub
fiaddl
xchg
jo
roll
hlt
negl
mov
js
imul
add
cs
push
mov
je
inc
ss
sbb
andl
outsl
and
adcb
js
fstps
sbb
ljmp
fidivl
out
rcl
mov
insl
sub
ds
popf
call
push
pop
inc
and
arpl
mov
and
xor
pop
out
xor
jae
xchg
fmul
int3
test
inc
outsb
pop
and
imul
outsl
icebp
fwait
lahf
mov
mov
repnz
and
sarb
loopne
or
int3
sahf
or
push
pusha
call
or
mov
xchg
rcll
push
push
insl
xor
ror
nop
adc
mov
mov
int
cmp
cmc
and
filds
bnd
mov
inc
adc
mov
pop
in
mov
inc
aaa
mov
mov
mov
int3
mov
inc
mov
jl
adc
imul
sub
outsb
add
insb
xor
push
enter
sbb
test
or
inc
subb
jbe
jecxz
xchg
mov
fldt
jnp
xor
inc
mov
push
daa
or
jbe
sbb
xchg
movsl
sub
xor
out
mov
sub
jbe
pop
push
sbb
pop
loopne
adc
ss
adc
negb
push
push
loope
xor
add
aam
dec
cld
cld
cmp
fcoms
push
nop
xorb
insb
sbb
xor
aad
jnp
cwtl
cwtl
cmpsb
fcompl
and
push
clc
ret
and
push
aaa
pop
jne
scas
push
cmp
mov
repz
push
pop
hlt
iret
mov
or
fwait
xchg
xlat
push
push
add
sahf
xchg
lds
sbb
sbb
cltd
in
sti
shlb
out
and
fs
fxch
sbb
cmpsb
jne
and
rol
jne
push
mov
add
out
pushf
xlat
fwait
cs
out
xor
sbb
jns
sub
pop
sbb
xchg
sbb
inc
xchg
mulb
adc
or
adc
ljmp
out
out
mov
dec
ret
adc
ja
xchg
dec
adc
push
roll
sub
mov
ja
aaa
and
or
cs
lcall
lcall
dec
bound
inc
sub
repz
fmuls
xchg
xchg
mov
or
mov
inc
cmpsb
add
in
xchg
stos
dec
xchg
mov
ret
sar
pop
inc
imul
sub
or
mov
fsubrs
add
enter
loope
int3
ffree
dec
add
mov
lods
jmp
jne
repz
fcmovne
addr16
ss
xor
aam
inc
loop
cmp
ret
inc
loope
and
and
ja
fwait
pusha
outsb
push
loopne
enter
or
ret
jmp
xor
add
lret
cli
notb
sti
stos
test
lcall
xchg
insb
push
jno
pop
dec
push
gs
or
add
test
add
fsts
add
pop
cli
data16
push
loop
cmp
xchg
hlt
movsb
mov
pop
popa
inc
sub
outsb
std
scas
adc
add
xchg
pop
clc
dec
gs
pop
mov
inc
mov
add
aas
pop
xor
push
fstl
sbb
loope
hlt
jb
mov
js
sub
adc
shrl
mov
cmp
jle
test
divl
adc
loop
scas
inc
das
cmp
roll
or
and
je
clc
and
or
and
and
jmp
popf
cmpl
mov
testb
pop
imull
mov
cmp
loopne
js
imul
dec
imul
lods
xchg
mov
fwait
arpl
cmpsb
and
add
mov
lcall
push
lahf
jae
mov
dec
fwait
ja
fsubrl
cld
mov
inc
xchg
aam
cmp
sahf
mov
sbb
mov
pop
enter
dec
std
dec
mov
bnd
mov
fwait
int3
icebp
inc
dec
iret
xchg
lret
push
fcoms
fwait
nop
pop
inc
mov
std
and
fs
jl
jg
pop
xchg
aam
scas
sbb
or
adc
into
push
das
daa
roll
std
sbb
and
mov
das
outsb
loopne
lahf
xchg
in
mov
cmp
aas
clc
xchg
add
pushl
mov
stc
mov
pop
dec
pop
jge
mov
iret
add
mov
fs
arpl
jp
pop
notl
mov
fucomi
pop
push
js
sti
stos
dec
fdivrl
xchg
lahf
inc
cmp
push
adc
or
xchg
outsl
mov
xor
jne
inc
xor
aas
mov
xchg
xor
movb
lret
fcmovne
add
mov
xchg
stos
sar
std
xchg
inc
xor
sbb
jae
lret
cmc
and
inc
clc
mov
inc
push
shrl
lock
out
std
jne
clc
dec
sub
jge
push
push
sbb
sbb
jmp
popf
ror
movsl
push
mov
lea
sub
dec
stos
sbb
jmp
mov
push
mov
cld
mov
jl
sub
bound
xchg
push
dec
mov
and
sub
mov
bound
pop
stos
in
insl
aad
mov
mov
mov
or
mov
ja
sub
push
fsub
push
pop
push
addb
sbb
and
es
bound
mov
cwtl
jne
orb
shrl
mov
lahf
lock
add
sbbl
cmp
cmp
std
push
fwait
lahf
and
push
add
js
sbb
add
incb
adc
xchg
xor
mov
push
dec
lods
popf
out
or
test
dec
loopne
pop
int
test
outsb
inc
dec
shlb
sbb
insb
out
jmp
fisubrs
cmp
in
mov
add
xor
shl
dec
sbb
cmp
gs
pop
adc
jle
clc
dec
push
rcll
or
sbb
lock
adc
ficompl
leave
enter
lcall
sub
push
jmp
inc
mov
stc
sbb
lcall
add
cmp
orb
sub
cmc
or
or
pop
push
pop
cmp
std
call
lds
or
sbb
xor
nop
test
and
fimuls
add
ficoml
loopne
xchg
sub
or
frstpm(287
incl
cmc
mov
adc
popfw
nop
imul
xchg
loope
outsl
add
mov
xlat
out
arpl
jbe
rorl
pop
xchg
pop
and
mov
out
fists
pusha
add
stos
shll
cmpsb
sti
je
testl
fimuls
test
dec
in
test
out
adc
fisubrl
je
inc
lea
inc
dec
in
or
pop
jp
push
pop
mov
dec
and
shll
pop
cmp
inc
loope
js
in
cwtl
ljmp
pusha
cmp
cmp
int3
icebp
insl
sub
lret
leave
add
loope
andl
stos
jb
arpl
outsl
xchg
scas
paddq
outsb
scas
push
xchg
mov
ljmp
or
jns
cmpsb
fists
cmp
in
xchg
jbe
imul
orb
dec
je
mov
cmp
repnz
and
jmp
jno
mov
fstpt
xchg
aaa
lret
jns
aas
loope
inc
aaa
add
jp
scas
xchg
repnz
xor
testl
sbb
push
inc
cmp
inc
inc
fsubp
mov
mov
ljmp
jmp
cmpsb
adc
repz
or
fadds
fcompl
pop
loope
push
or
dec
movsl
sbb
and
sbb
push
jmp
xchg
sbbb
sub
inc
mov
sub
mov
call
xor
dec
cwtl
pop
pop
int3
push
or
rorb
push
sti
ljmp
test
cli
mov
dec
faddl
add
ss
fidivs
xor
add
ror
fcompl
push
addb
movsb
and
xchg
inc
mov
enter
cmp
rorb
insl
sbb
stos
mov
xor
iret
lahf
ror
mov
cs
cmp
xchg
enter
iret
dec
fs
rorb
in
cmp
mov
sarl
sbb
or
aam
sbb
xchg
adc
fnstsw
xor
pop
mov
mov
test
jmp
int
adc
xchg
in
mov
popa
jnp
xor
dec
inc
aam
scas
ret
add
ljmp
jnp
jl
mov
or
mov
aad
stos
ror
in
or
push
test
adc
mov
fs
mov
movsb
stos
and
sar
inc
addb
insl
fs
mov
jg
arpl
es
rclb
shll
or
rorb
or
out
mov
insl
sbb
adc
dec
in
mov
xor
in
out
and
movsl
jmp
int
xchg
lret
clc
mov
mov
fists
nop
data16
dec
dec
inc
gs
addr16
rcll
icebp
in
inc
outsb
shll
test
icebp
dec
add
and
lahf
and
and
cltd
cmp
and
pusha
mov
orl
dec
mov
cmp
and
add
lock
jecxz
cmpsb
sbb
ds
outsl
loop
into
mov
scas
pop
jg
mov
cmc
mov
mulb
mov
std
lds
in
mov
jmp
out
or
or
mov
push
popf
pop
push
jl
jp
push
push
ds
lods
jp
inc
mov
mov
shll
jbe
pop
cmpb
jo
dec
popf
mov
inc
adc
fs
xor
cmp
scas
push
pop
push
adc
or
cmp
dec
dec
cltd
outsb
mov
pop
sbb
cmp
dec
mov
stc
leave
mov
aad
popf
shlb
cld
push
dec
adc
and
mov
adc
xchg
pop
push
popa
lcall
int
mov
add
shll
adc
xchg
icebp
push
mov
jne
push
push
call
mov
mov
jbe
xchg
je
leave
das
sbb
jno
not
mov
add
sbb
inc
xchg
sahf
and
dec
mov
jne
fidivrs
test
fisubrl
mov
rcll
cmc
pop
aam
sbb
dec
div
push
filds
jae
dec
xorl
adc
lret
mov
adc
adc
xor
sbb
jmp
mov
or
lock
and
jmp
mov
sbbb
sub
pop
shrb
pop
jno
pop
pop
les
pop
and
lcall
inc
and
sub
xor
out
add
loop
push
repnz
pop
cmp
ret
inc
test
dec
sbb
and
jle
jmp
xor
push
sub
adc
pop
or
inc
pop
cmp
fisubrs
xlat
xchg
xchg
out
ds
rcr
out
xor
mov
dec
shl
mov
cld
dec
imul
test
jge
dec
cmp
sbb
mov
cs
inc
cltd
push
mov
pusha
bound
pop
pop
insb
or
ret
jne
movsl
adc
sbb
inc
call
cmp
xlat
jg
mov
sarb
xor
ret
lds
stos
cmpsl
mov
and
fildll
jno
cmpsb
and
shll
add
push
push
rcl
sbb
lret
cmc
sbb
paddsb
fdiv
out
cltd
dec
rorl
jno
jle
scas
inc
dec
jl
xor
movsb
adc
aas
movsl
xchg
pop
int
aad
in
test
mov
fs
inc
xchg
imul
cmp
push
bound
sub
loopne
lock
add
push
or
and
cmp
jb
jmp
dec
pop
xchg
jnp
or
push
pop
push
and
add
out
call
mov
jne
jmp
pop
adc
jl
sbb
das
movsb
out
lods
and
or
stos
jns
inc
loopne
add
jno
movsl
mov
dec
dec
jns
add
in
fs
jae
loop
outsl
jno
nop
cmova
out
push
pop
fisttpl
lock
fldenv
mov
adcl
mov
cli
jno
lock
outsb
fcoms
sub
gs
sbb
fisubrl
nop
psubw
pop
das
bound
cmp
cld
cmpsl
and
test
jbe
jp
rol
push
xor
xor
repnz
mov
push
cld
xchg
lcall
fcom
mov
dec
lea
mov
mov
cmpsb
xchg
dec
fimuls
pop
sub
sub
shrl
push
xchg
pop
nop
pop
das
pop
xlat
dec
cli
add
cli
sarl
add
inc
cmp
adc
or
mov
icebp
add
jecxz
jnp
push
shl
xchg
and
push
clc
test
mov
push
mov
les
jecxz
sahf
sbbl
pushl
xor
fisubl
mov
cmpsb
in
scas
mov
cld
lahf
notl
push
mov
testb
mov
xchg
mov
stos
cld
loopne
inc
jg
mov
adc
mov
inc
adc
or
mull
add
sbb
int
mov
sbb
repnz
push
mov
popa
push
sti
dec
test
xlat
stos
dec
repnz
ljmp
cli
std
fdivrs
pop
lds
sub
mov
cmp
fiadds
pushf
lock
js
inc
rclb
push
rcll
and
pop
mov
cld
cmc
sbb
sarb
hlt
push
or
add
xor
repz
rcrb
sub
imul
rcll
jmp
sbb
fs
add
cli
jge
push
mov
xchg
mov
xchg
cmp
stos
dec
unpcklps
pusha
adc
mov
pop
or
pop
lods
adc
adcb
jl
mov
push
stos
adc
xchg
ss
mov
xchg
cmp
add
mov
jge
test
cmpsb
shlb
es
add
adc
xchg
mov
pop
push
decl
jne
adc
fisttpll
repz
subl
xchg
shlb
nop
cmp
jecxz
aam
lcall
adc
rorl
movsb
pop
pop
add
sbb
decb
aad
push
pop
cs
mov
idiv
mov
and
outsl
cmp
lods
cmp
test
lahf
mov
xchg
inc
lds
jnp
inc
push
push
cli
dec
or
nop
mov
push
fiadds
inc
repz
inc
xchg
sub
dec
or
int
mov
ret
xchg
jo,pn
test
stos
scas
mov
and
je
pop
scas
call
imul
sub
push
or
popa
stos
sarb
lock
mov
xchg
ret
imul
adc
das
iret
fdivrl
inc
cld
mov
mov
cld
mov
cmp
ret
push
fdivrs
and
lds
or
ljmp
mov
mov
sbb
jns
icebp
nop
jmp
nop
mov
into
cmpsl
xor
ret
loop
loope
add
xchg
inc
cld
sbb
repz
js
in
stos
mov
divb
pop
fcoml
xchg
cltd
fbstp
jns
cmp
cmpsb
sub
mov
adc
fcompl
pushf
scas
jbe
mov
fldenv
clc
in
add
dec
cmp
add
ficoml
cmp
xorl
das
repz
retw
dec
lds
adc
add
adc
out
add
imul
xorl
jecxz
js
iret
mull
cmp
imul
cmpl
push
jmp
int3
aaa
jns
jmp
movsb
pop
sub
ret
jle
dec
call
pop
shl
clc
aad
ret
sbb
jo
js
lret
pop
inc
shll
inc
adc
jge
leave
push
stos
jl
cmp
jno
ja
in
insl
pop
aam
mov
cmp
and
jmp
fstps
add
jnp
pop
xor
dec
cmp
bound
movsl
jge
or
cli
arpl
cltd
out
xchg
push
push
das
insl
icebp
dec
imul
fbld
jne
lock
jg
add
jno
pop
shlb
fildll
mov
xor
lret
mov
and
scas
mov
mov
lds
xor
roll
jns
call
pop
push
int
rcrb
inc
les
cmc
xchg
or
xor
bound
repnz
stc
sub
mov
clc
mov
dec
cli
gs
or
dec
cmp
arpl
push
dec
lahf
xchg
sbb
ror
adcb
test
xor
in
jne
loope
int
add
or
mov
cmp
cmpsl
push
pushf
lret
sahf
jnp
dec
mov
cmpsl
jle
cmp
fwait
add
outsb
xchg
inc
jle
test
jge
inc
je
mulb
sub
sbb
in
popf
in
cld
loop
stc
jb
mov
jle
rolb
in
push
sub
movsl
dec
pop
xchg
aam
xchg
xchg
dec
push
jno
imul
and
sbb
and
fistl
mov
push
xchg
enter
adc
add
push
cmp
pop
ds
arpl
rcll
xchg
jb
dec
rorl
out
cs
mov
call
dec
lods
adc
outsb
sub
cmp
fstpt
fwait
jge
ror
add
dec
lock
arpl
es
es
xor
outsb
inc
movsb
push
lods
addr16
neg
jecxz
adc
addr16
lods
test
cmp
outsl
xchg
dec
jmp
out
ds
lods
jp
je
mov
shlb
cs
sub
inc
cmp
jp
stc
mov
and
nop
daa
std
xchg
data16
xchg
ss
clc
jne
sti
ss
daa
jnp
and
sarl
add
jge
scas
das
sub
or
add
loopne
sbb
adc
adc
pop
mov
lods
adc
xor
psllw
ljmp
out
rorb
mov
inc
out
cmp
stos
out
les
outsl
in
xorl
dec
push
adc
mov
int
jmp
inc
mov
cmp
or
or
and
leave
insb
out
pop
loop
mov
and
xchg
fwait
dec
mov
rcrl
out
or
mov
sti
inc
aaa
or
dec
cli
mov
push
lahf
xchg
push
not
and
outsl
pop
jle
popaw
mov
nop
jno
inc
fcoms
call
cmp
arpl
loope
cmp
iret
inc
jecxz
add
add
adc
pop
lcall
pop
out
divl
ss
jge
inc
push
sbb
push
int3
in
idivb
outsb
xor
mov
adc
repnz
jno
test
test
push
stc
mov
je
sahf
jg
test
jb
lock
cmpsb
mov
mov
sbb
test
inc
pop
xchg
loop
mov
rcrb
fs
and
mov
stos
inc
icebp
pop
test
xor
mov
mov
xor
cmp
addr16
das
dec
movsl
adc
pop
cld
adc
pop
mov
repnz
test
repz
push
cmp
out
addr16
testl
mov
and
insl
sbb
mov
cmp
push
jle
jg
mov
adc
or
inc
sahf
fs
xchg
clc
pop
and
xchg
pop
mov
adc
mov
ljmp
bound
out
mov
jnp
loopne
pushf
and
jmp
sbb
adc
movsb
jmp
outsl
out
pop
out
movsl
rcll
xchg
shrl
popa
cmp
and
cwtl
emms
repz
xchg
xchg
addr16
mov
stos
adc
fnstenv
ljmp
sbb
filds
pop
mov
in
sub
iret
cwtl
out
loop
pop
mov
shr
fidivrs
insl
outsb
mov
out
adc
xor
xchg
dec
inc
push
sahf
xchg
cmp
mov
ss
mov
mov
gs
jae
sub
addb
stc
je
clc
hlt
mov
popa
pop
sub
xchg
int3
xlat
mov
cmp
jno
mov
push
pop
das
rolb
js
ret
xor
ss
mov
les
xor
cmp
pop
outsb
cmp
fldenv
ret
push
xchg
imul
sub
adc
push
addl
cmp
pop
ret
sbb
xor
and
mov
lret
or
rcr
add
mov
test
lahf
mov
sti
xchg
add
fwait
pop
repz
loope
push
pop
inc
jno
jg
jecxz
aad
sbb
dec
rcrl
outsl
xor
rorl
pushf
andb
push
push
sahf
ret
jecxz
lods
sbb
or
push
push
and
and
xchg
filds
push
lods
movsl
xor
sbb
ret
jl
int3
mov
mov
pusha
mov
cmc
push
xchg
jg
mov
sbbl
cld
frstor
popf
pop
cmp
hlt
int3
popa
shlb
mov
jmp
icebp
push
dec
sub
push
or
mov
std
lods
lret
cmpsl
rorl
dec
add
gs
mov
jg
pop
dec
outsl
mov
andb
outsb
movsl
idivl
inc
dec
xor
test
mov
fwait
sar
data16
xchg
or
ss
fsincos
pop
jp
jo
fisttpll
lcall
fisttpl
imul
pop
xor
dec
dec
push
insl
or
js
call
imul
shlb
imul
jl
fwait
inc
icebp
pop
movsl
mov
mov
mov
outsl
xchg
aas
pop
dec
mov
pop
out
lock
les
cltd
data16
sti
push
pop
push
fwait
ds
mov
and
lds
movsl
sbb
push
inc
repnz
repz
cmp
sbb
cmc
jno
out
pop
mov
mov
xchg
cwtl
sbb
fldenv
cmp
ja
xchg
imul
ficompl
sub
dec
mov
push
ficoms
js
mov
andb
orb
adc
mulb
mov
jno
inc
pop
fiadds
pusha
cs
xchg
sub
fdivs
int
lahf
mov
xchg
mov
push
jl
push
mov
jno
fistps
lret
dec
jp
fiadds
xchg
mov
imulb
fimuls
mov
lret
hlt
fisubrs
shll
cmp
jae
cs
out
iret
inc
jno
fistpl
icebp
mov
inc
sub
pop
sahf
dec
add
out
aaa
std
lahf
pop
sti
push
xchg
leave
stos
loop
cmp
fidivrs
mov
mov
jmp
adc
rcll
mov
cmpsl
mov
xchg
nop
xor
jp
mov
sbb
push
sub
sarb
jle
mov
add
cs
imul
nop
jg
cltd
insb
add
mov
pop
or
and
xor
pop
inc
and
mov
arpl
cmpsb
arpl
push
fidivrl
or
and
loopne
lret
addl
popf
es
loope
popf
xchg
pop
mov
ja
pushf
into
pusha
mov
inc
int3
push
push
gs
inc
dec
ds
dec
jmp
pop
push
dec
test
inc
adc
xchg
cmp
fnstenv
gs
mov
jne
loop
dec
sahf
lret
bnd
call
lds
lcall
and
je
aad
stos
and
xchg
cmp
out
and
dec
xchg
xlat
cli
dec
cli
mov
mov
stos
jmp
sarl
mov
xchg
shll
lret
xor
nop
lret
mov
jnp
push
or
in
scas
ret
nop
negl
imul
add
das
inc
jg
add
vmovapd
cwtl
xor
mov
gs
sbb
jnp,pt
orl
pop
mov
pop
insb
lcall
dec
cmp
rcll
fdivs
int
insb
push
outsl
xor
jge
inc
scas
nop
mov
rorl
add
imul
cmp
out
dec
int3
icebp
inc
insb
mov
push
mov
das
jno
jae
push
jnp
dec
xor
lods
xor
push
inc
cmc
loopne
cmc
add
test
mov
rcr
or
fistl
enter
popf
jl
das
sub
sub
lahf
cmpsb
lcall
and
mov
lods
sub
ds
adc
pop
xor
cmp
xchg
bound
sub
jne
sbb
jg
sub
lret
and
ficoml
jecxz
dec
int3
sub
cmp
mov
jbe
fisttps
leave
mov
or
inc
jne
movsb
or
bound
ljmp
push
shrl
pop
nop
jmp
cs
push
jecxz
in
addr16
xor
mov
ret
add
cs
push
sbb
mov
fsubrl
pop
jecxz
jmp
sub
das
in
data16
mov
cmp
pop
xchg
or
xor
hlt
lock
dec
jg
add
cmc
push
push
into
stc
aam
adcl
jg
mov
dec
adc
push
std
add
stc
dec
loopne
pop
ret
ds
dec
xchg
inc
arpl
xor
sbb
nop
dec
jecxz
sbb
ljmp
sahf
and
pop
enter
xchg
inc
cmc
sub
and
jne
outsb
lock
mov
and
sub
and
push
jl
in
call
adc
or
cmp
cmp
iret
sub
pusha
mov
push
pop
and
loope
cmp
xor
jle
cmp
inc
xor
in
cmp
dec
xchg
mov
sbb
pop
jge
mov
jae
stos
pop
mov
push
sti
test
sub
cmc
lret
daa
lcall
adc
xor
mov
inc
push
cmp
xor
add
sbb
cmp
sbb
std
mov
pop
rolb
and
movsl
js
orl
xchg
push
fnsave
adc
mov
mov
or
dec
inc
and
fwait
mov
mov
pinsrw
add
mov
insb
push
cpuid
lds
movsb
hlt
or
insl
add
das
pushf
stos
dec
not
add
loopne
cmp
aad
out
mov
and
jne
jp
fucomi
sbb
jno
mov
sbb
les
in
xchg
mov
movsb
nop
insl
xchg
imul
sub
adc
sti
insb
in
in
mov
out
pop
mov
push
jp
sbb
cmp
xchg
cli
mov
mov
push
push
cmp
push
fbstp
and
in
aaa
loope
push
mov
push
adc
cmp
add
dec
jne
ljmp
shlb
jl
test
sbb
lret
push
into
cld
mov
jnp
pop
adc
fcmovne
xchg
lret
and
inc
movsb
or
fwait
xchg
push
cmp
dec
lods
movsl
mov
daa
sarl
lods
mov
jmp
jo
sub
incb
scas
out
xchg
loope
lds
push
sbb
mov
xlat
outsl
mov
pop
movb
and
je
pop
pop
cmp
movsl
movsb
push
mov
cvtpi2ps
sub
mov
adc
rcl
cmc
inc
ljmp
xor
and
pop
cmp
inc
ficoml
cmpsl
or
loope
pop
leave
inc
popf
out
mov
fidivl
int3
cwtl
cmp
cwtl
pop
sub
xor
pop
ret
jge
xchg
dec
sbbl
call
imul
fwait
push
and
push
pop
add
jbe
and
mov
xchg
mov
out
lret
out
ljmp
inc
or
aad
jbe
jle
je
jnp
push
popa
pop
outsb
loope
sub
push
sti
mov
js
leave
icebp
adc
sub
pop
in
fidivs
mov
mov
lock
test
jg
shll
les
sub
es
lods
pop
movsl
jge
ss
inc
dec
sub
pop
loopne
int3
adc
mov
dec
lods
xchg
and
pusha
das
cmp
xchg
mov
scas
push
fcmovnb
adc
ror
adc
mov
mov
or
fadds
mov
int
push
das
mov
je
fwait
mov
mov
icebp
inc
push
or
mov
pop
pusha
jo
fwait
test
mov
mov
lock
pop
fstpl
adc
rorb
es
imul
or
mov
dec
data16
pop
or
jp
and
and
cmp
xor
icebp
and
popf
shll
stos
jp
js
popf
mov
rcrb
cmc
gs
int3
fisttpl
mov
mov
cmp
xchg
imul
jge
mov
outsb
pop
ljmp
hlt
add
ja
in
testl
cmpsl
xchg
jecxz
mov
xlat
in
pop
xchg
cs
mov
sub
or
int
insb
loop
vpsubusw
popf
imul
pusha
cmp
mov
inc
or
fcmovnbe
inc
clc
addr16
xor
cwtl
mov
sbb
sub
pop
xor
fs
filds
fwait
jae
nop
xor
mov
push
sub
movsb
addr16
pop
jg
mov
and
cld
stos
cmpsl
pextrw
push
push
loope
jae
lock
cmp
adc
push
sti
fdivrl
sub
sub
popa
frstor
adcb
pop
sbb
mov
cmp
lahf
aas
fldt
and
jnp
inc
cltd
nop
sarl
das
add
int
dec
push
and
adc
sub
sbb
pop
aam
ja
cmp
sbb
ret
push
lods
dec
xor
xorl
movsl
jb
inc
std
add
ds
pop
cmc
push
lret
pop
cmpl
std
sub
int
and
nop
mov
repnz
ret
out
addr16
jmp
and
or
adc
fdivr
pop
jne
adc
in
jp
inc
sub
scas
test
leave
mov
mov
dec
das
ss
fisttpll
mov
xor
sbb
push
std
pop
in
mov
loope
lret
out
icebp
jge
or
pop
les
mov
pop
inc
les
in
mov
data16
out
ret
xor
cld
and
mov
bound
pusha
test
xchg
not
add
daa
mov
filds
adc
in
mov
dec
push
loop
xchg
pusha
xchg
in
lds
movsl
dec
push
aam
jecxz
inc
mov
lret
push
call
jmp
jns
push
hlt
pop
pop
sub
inc
aad
aad
push
mov
aad
jnp
out
mov
mov
inc
loope
dec
lock
mov
push
mov
and
and
cld
fcmovnb
pusha
mov
xchg
in
dec
scas
lock
pusha
testb
xchg
mov
mov
jb
add
in
and
xchg
xor
insb
pop
or
xor
sub
movsl
pop
mov
mov
jbe
push
mov
out
ljmp
jp
scas
push
mov
bound
outsb
scas
mov
mov
push
and
cli
pop
push
imul
cltd
loope
inc
inc
ficomps
push
cmp
shll
test
xchg
push
push
xor
sarl
scas
push
mov
mov
add
es
arpl
add
mov
push
xchg
jg
sarb
pop
jle
mov
mov
clc
xchg
lret
je
mull
dec
xor
test
jo
outsl
and
dec
add
lret
and
ficoms
xchg
jecxz
cmovg
push
jnp
jno
sub
cld
mov
xchg
jge
idivl
loope,pt
or
insl
andb
fs
adc
andb
into
inc
fnstcw
jge
adc
insl
and
icebp
jle
xchg
inc
pop
stos
pop
pop
seta
cmp
inc
lea
or
xor
cmc
cmpb
test
or
aam
cmp
test
push
pop
xchg
and
mov
loopne
inc
xchg
or
addr16
ds
xor
sti
daa
add
mov
jo
fnstcw
add
cld
sbb
pop
sahf
push
mov
into
fs
into
adcb
xor
ret
mov
cs
adc
into
jg
xor
jne
lods
jb
push
test
popa
fwait
push
daa
xor
loope
add
fsubrl
rclb
cmp
out
cmpsb
dec
mov
arpl
mov
pop
pop
jns
dec
mov
int3
roll
insl
lret
pop
es
xor
js
dec
ret
xlat
insb
adc
shrb
adc
jle
mov
add
jge
loope
and
cmpsl
xor
aas
push
cmp
jb
cmp
cli
add
cmpsb
jo
jb
mov
inc
hlt
dec
push
xor
aad
dec
mov
sbbl
orb
or
pop
ljmp
push
imul
test
stos
in
dec
mov
fimuls
add
cmpsb
rorb
and
and
int3
inc
dec
jge
cmp
jecxz
mov
and
push
jns
leave
add
ret
mov
mov
mov
fdivrs
leave
mov
mov
jbe
mov
dec
jl
test
mov
add
int
add
and
sub
dec
leave
dec
popa
out
push
icebp
fiadds
lods
pop
das
adc
insb
sub
ja
add
sub
call
push
rorb
pop
out
xchg
xchg
fidivrs
gs
xchg
or
adc
jb
jp
fdivrp
mov
cld
or
fimuls
mov
sub
js
dec
jg
cld
mov
js
insl
pop
cmp
mov
sbb
jl
cmp
mov
mov
jae
das
xchg
ss
mov
and
mov
inc
cmp
mov
xor
pmulhuw
sti
push
fisttpl
gs
lods
pushf
and
sbb
jg
je
xor
lock
lret
movsl
pushf
sub
push
pop
xlat
and
addb
lahf
mov
aas
cmpb
lret
dec
dec
pop
push
push
int3
clc
jmp
int3
ds
movsb
inc
mov
fwait
js
sub
pop
cli
add
cld
jnp
test
pop
adc
popa
shrl
nop
dec
jl
in
sar
lret
mov
aaa
dec
cld
add
pop
sbb
jb
push
mov
xor
out
xchg
jle
nop
adc
mov
insl
ficompl
outsb
clc
mov
jle
sub
jns
cmp
cmp
aas
cmpsb
cmp
in
loop
aas
jg
push
mov
push
sbb
add
adc
std
pop
inc
pop
lods
mov
call
shll
xor
inc
andl
ljmp
ljmp
push
in
sub
mov
leave
add
neg
lds
jb
or
les
pop
or
adc
mov
and
data16
ds
xchg
fs
adc
pop
mov
mov
imul
xor
lock
lcall
loope
sbb
inc
sbb
fwait
pop
jmp
lahf
pop
mov
pop
dec
int
out
xchg
lret
movsl
lret
jne
add
inc
mov
int
mov
xorl
rol
mov
sti
cmpsb
fs
xor
sub
outsl
in
bound
adc
push
pop
repz
pop
sbb
movsb
jno
push
loopne
aaa
sub
jno
lds
aaa
loope
mov
push
aaa
aas
mov
lcall
sub
int3
or
xchg
xor
lds
xor
mov
and
cmp
aad
aaa
arpl
imul
xchg
repz
inc
das
xchg
fcom
in
mull
dec
out
lods
add
xor
sbb
call
loope
sub
jmp
push
outsl
jg
adc
sub
xorb
or
out
iretw
shrl
dec
rcrb
cmc
adc
imul
xchg
es
int3
ficomps
sub
pop
pop
inc
in
aaa
pusha
mov
jl
push
and
enter
pop
hlt
push
jne
dec
daa
ds
mov
gs
and
pop
inc
xor
xchg
cmp
mov
dec
add
imul
rcll
nop
xchg
cmp
mov
icebp
into
sbb
xchg
dec
inc
lcall
sub
filds
fistl
inc
mov
mov
ret
lods
adc
mov
in
movsl
movsb
lods
lds
xor
jmp
fsubrs
push
call
ret
pop
xchg
mov
adcl
imul
xchg
and
das
cltd
mov
mov
mov
ffree
ret
cmp
add
or
comiss
pop
ucomiss
push
mov
mov
add
jmp
jg
mov
out
dec
pop
and
ljmp
dec
lds
test
into
lret
call
jp
mov
push
call
adc
dec
mov
pop
scas
lds
mov
or
clc
cmpsl
xlat
je
xor
pop
pop
ljmp
fcomps
or
lret
rcll
daa
pop
int
or
jae
cmp
mov
aam
sub
inc
and
movsb
aaa
and
sub
cmp
pop
pop
bound
pop
loop
push
mov
adc
fidivl
and
jecxz
mov
int
cmp
push
mov
lret
gs
and
dec
faddl
pushf
lahf
sbb
hlt
sub
push
dec
xor
xchg
pop
jbe
out
pop
shll
leave
xchg
pop
mov
mov
les
lret
outsl
mov
xchg
inc
add
pop
pop
ret
inc
dec
add
pop
inc
or
add
je
jae
jl
xor
xor
mov
add
cmp
repnz
xchg
psubb
add
sahf
fwait
test
mov
jle
jmp
lea
jmp
and
push
in
imul
or
xor
clc
push
sbb
in
lock
push
ds
jb
dec
mov
lahf
fwait
ljmp
popa
push
adc
pop
iret
popa
movsl
sub
xchg
xchg
jnp
push
jo
ret
pop
fdivrs
sbb
fcmovnu
or
or
pop
les
addr16
dec
push
lcall
cld
cmp
cmp
dec
idivl
adc
in
mov
insb
pop
sub
fisttpll
sub
fs
add
orb
out
sarb
loope
lea
jns
mov
xchg
inc
pop
aas
loope
pop
sub
or
or
inc
add
push
stos
pop
aaa
mov
mov
daa
cli
jb
sti
sti
mov
mov
movsb
adc
nop
xorb
leave
dec
dec
sbb
test
sti
aam
clc
adc
dec
fs
adc
sub
jg
pop
pop
loop
add
sub
aas
jl
cmp
add
xchg
scas
adc
pop
ds
xchg
fcmovbe
or
out
push
sub
sbb
jns
or
jbe
and
js
sub
dec
insl
enter
imul
cltd
adc
nop
andl
mov
cs
fnstsw
lods
loope
or
leave
mov
lods
xchg
adc
ret
rcrb
pop
jge
out
xchg
cmp
fs
pop
out
outsb
xor
insb
cwtl
data16
xor
jmp
ja
loope
xchg
jecxz
sub
cltd
aaa
mov
xchg
xor
roll
adc
mov
push
push
sbb
pop
ljmp
mov
insl
mov
jle
xchg
sbb
add
jb
xchg
push
jno
inc
out
fwait
adc
movsl
test
mov
ljmp
inc
fsubs
push
sarl
aas
insb
ret
ret
clc
je
sub
mov
pop
testb
xchg
adc
mov
sbb
jg
insl
add
clc
out
and
aam
add
mov
out
dec
mov
packssdw
shlb
out
or
mov
pop
popf
push
push
mov
mov
mov
testb
pop
jo
sub
pop
pop
andl
fcmove
rcl
xchg
pop
xchg
inc
and
imul
test
cmpsl
xor
add
mov
pushl
push
out
aas
std
jns
sbbl
sahf
aam
dec
mov
clc
inc
xor
add
push
call
out
in
enter
shrb
out
mov
xchg
and
cmp
out
fstl
dec
test
cwtl
and
pop
adc
std
in
xor
pop
mov
lret
and
enter
movsl
sub
add
push
fs
push
in
inc
mov
fsubp
cli
inc
out
enter
jecxz
dec
jo
sub
cs
hlt
sbb
or
xlat
jo
sbb
in
shl
test
ss
pop
sub
jecxz
pop
incl
addr16
jno
ljmp
imul
push
fcomip
push
das
mov
dec
clc
xlat
mov
sub
xchg
mov
faddp
fwait
in
push
out
dec
in
repz
addr16
dec
fwait
leave
repnz
and
mov
push
xchg
enter
dec
std
nop
ljmp
pop
xor
or
dec
shll
cmpsl
xchg
ss
pop
push
bound
out
pop
nop
push
loopne
hlt
pop
dec
psrlq
mov
fisttpll
in
mov
js
inc
test
pusha
lock
ret
xorl
lock
out
pop
pop
dec
ja
xorb
ret
in
fbstp
mov
andl
sub
out
andb
xor
sub
mov
leave
adc
icebp
mov
push
mov
std
jmp
dec
movsb
adcl
les
and
mov
in
paddsb
scas
outsl
pop
pop
or
add
push
sub
jecxz
lret
mov
das
mov
xchg
fisubrs
xchg
aad
xor
inc
push
imul
sarl
sarl
and
and
push
gs
xor
adc
in
stos
mov
push
add
clc
mov
cmp
xor
and
dec
mov
jns
sub
imul
outsl
dec
pop
outsb
jg
cmp
lods
repnz
in
sub
inc
sub
int3
pop
mov
fs
add
mov
addb
test
daa
xchg
ret
into
out
or
sti
dec
mov
movsb
xor
inc
xchg
jmp
adc
mov
out
ds
pop
dec
mull
mov
test
inc
adc
pop
pop
xor
dec
cmp
test
je
pop
xchg
aas
add
xchg
loopne
sbb
lods
out
imul
stos
cmp
imul
int3
int3
push
sub
shll
mov
and
leave
add
add
aaa
rcrb
dec
aaa
fst
arpl
jle
sbbl
xor
incl
xchg
and
xor
leave
ldmxcsr
adc
add
imul
out
mov
add
mov
clc
or
fwait
inc
xchg
imul
lods
mov
ret
sti
cwtl
je
sbb
adc
vaddpd
sbb
inc
or
insl
fimuls
dec
add
insb
lds
mov
bound
rorb
sarb
push
add
xchg
dec
and
jmp
fisubrl
nop
sbb
pop
movsb
lret
adc
cmc
fiadds
add
sahf
pop
push
sbb
xchg
sahf
jae
mov
lret
pop
les
jno
sub
gs
mov
mov
fs
and
and
sbb
jg
mov
xor
push
in
mov
popa
popf
mov
sbb
sti
sbb
repz
add
push
das
call
fcomps
dec
jnp
std
adc
int
lahf
enter
sbb
sub
out
cmpb
jmp
cmp
fs
mov
in
sbb
jb
jle
and
push
dec
dec
test
dec
sub
inc
insb
inc
pop
ds
out
lret
lock
inc
and
push
les
and
clc
aam
mov
mov
jo
mov
dec
lahf
nop
mov
pop
aas
mov
jp
or
push
lahf
subb
xchg
mov
xchg
add
push
imul
scas
ja
inc
inc
inc
inc
jno
cs
stos
test
mov
mov
xor
js
sbb
js
xor
sub
test
ret
push
jg
jl
pop
push
enter
iret
leave
and
fwait
mov
clc
ja
push
sbb
mov
addl
cmpb
push
xchg
arpl
cmp
cltd
cmp
stc
mov
lret
and
movsb
sub
pop
xchg
sarl
test
push
bound
mul
ret
ss
incl
loop
mov
add
and
insb
mov
iret
jmp
xchg
add
data16
sbb
imul
add
mov
arpl
cmp
push
int3
mov
push
cmp
imul
jecxz
sub
push
gs
mov
push
mov
sub
pusha
push
daa
nop
cmc
jae
or
pop
sbb
jb
xor
dec
mov
xchg
js
mov
push
movsb
pusha
mov
lret
push
jo
test
xor
mov
mov
ja
mov
mov
sarl
xchg
arpl
stos
or
adc
loope
clc
pop
fisubrl
bound
jbe
mov
sti
cmp
and
lock
mov
fcoms
sub
or
cmpl
adc
push
jo
xchg
sub
or
push
mov
insl
shlb
stos
or
adc
out
sub
imul
cmpsl
in
dec
push
test
fists
addr16
lods
mov
loope
push
in
pop
inc
add
int3
lods
inc
or
addr16
aas
ret
adc
dec
repnz
iret
out
int
bound
pop
dec
sti
cltd
mov
mov
adc
adc
insl
pop
cs
dec
cmp
xchg
pop
loope
push
out
and
mov
outsb
mov
imul
mov
ja
sahf
push
into
xchg
test
ljmp
add
inc
stc
lods
pop
push
fnsave
dec
fidivs
sub
hlt
lods
mov
cmc
clc
xor
movsl
fdivl
adc
mov
shl
icebp
stc
dec
jmp
cs
inc
mov
mov
dec
ucomiss
adc
push
cmp
dec
inc
add
lock
push
lahf
cmpsb
fstpl
ss
mov
adc
jl
or
cwtl
mov
mov
dec
fisubl
cmp
lock
loope
or
xor
fs
mov
std
mull
inc
pop
xchg
jmp
jle
sbb
xchg
in
repnz
fwait
mov
mov
adc
testl
mull
das
nop
mov
out
cld
fidivrl
loope
cwtd
push
rolb
mov
fimuls
xor
ret
cmp
shrb
sub
xchg
stos
xchg
cmc
aaa
cmp
stc
arpl
jg
mov
or
xor
leave
mov
pop
sbb
insl
push
fistps
popa
add
test
test
bound
jecxz
xchg
lds
cld
and
lcall
jbe
lcall
and
ret
mov
jecxz
aas
les
je
roll
jns
adc
mov
fbld
movsl
inc
insl
daa
sbb
xor
ret
push
rcrb
in
popf
sarb
sub
jns
adc
xchg
mov
int
pushf
jg
dec
pop
cmp
in
adc
stos
aam
arpl
in
das
shlb
xchg
imul
mov
mov
popa
cli
sbb
int
xor
aad
pop
test
fdivrs
jae
xor
sbb
mov
jae
jge
mov
mov
outsb
pop
mov
pop
cmp
lods
cmp
in
idivl
or
test
add
hlt
test
int
sbb
test
xor
xchg
fwait
mov
xchg
out
push
pop
mov
aam
clc
xchg
js
or
dec
hlt
lock
cltd
cmp
arpl
fadd
jns
push
dec
pop
xchg
or
je
pop
pop
push
mov
xchg
or
inc
cs
ficomps
aam
push
or
inc
hlt
movsb
cmp
outsl
cmp
xchg
test
xor
push
sub
push
xchg
aas
stos
jp
and
adc
lahf
cmpsl
lea
and
xor
add
leave
dec
lods
push
mov
dec
test
imul
aad
sub
cmp
sti
negl
fimuls
cmpsl
push
lret
mov
add
jle
repz
adc
mov
sahf
fcomps
std
repnz
in
lods
xchg
jnp
pusha
fstl
inc
stos
fstps
pop
sahf
popf
push
push
cmp
adcb
fs
hlt
mov
and
movsb
js
mov
rcl
cmc
ret
inc
js
mov
inc
ret
mov
xor
xchg
add
lds
sub
rorl
cmpsb
out
xchg
cmpsl
xchg
xchg
cmpsl
faddp
repnz
jae
mov
mov
cmp
in
push
test
test
test
xlat
jbe
cmp
pop
scas
jmp
jg
mov
fbld
jnp
out
shll
inc
add
xor
bound
adc
sbb
fstps
pop
mov
sub
mov
bound
and
pop
xchg
or
jb
stc
iret
into
or
mov
push
out
daa
inc
jno
aaa
or
arpl
dec
sbb
data16
in
sub
dec
out
out
dec
mov
movsl
inc
jne
call
testb
mov
xchg
push
cmc
pop
dec
std
mov
xlat
mov
add
ljmp
sti
xchg
dec
mov
adc
xlat
sbb
xchg
rol
pop
lds
das
incb
cs
jae
rcll
adc
jmp
ret
or
and
hlt
adc
aaa
ljmp
xchg
outsl
mov
add
jp
addb
push
je
and
lret
lret
xor
bound
dec
mov
push
fsub
stos
stc
repnz
mul
jg
and
data16
fiadds
fxch
shl
mov
xor
inc
data16
lret
dec
sbb
cmp
divl
das
fwait
and
inc
rcrl
lret
push
or
in
gs
jbe
rorl
jge
pop
loopne
adc
int
lret
adc
mov
fsubs
mov
ss
cmp
fcomps
popf
pop
and
addr16
inc
stc
pop
shr
xlat
jle
inc
cmc
pop
mov
push
xchg
and
mov
jl
dec
jge
mov
fxch
jb
pusha
lcall
xor
popa
mov
bnd
imul
push
xor
aam
cwtl
push
jno
jb
mov
lods
enter
xor
dec
andb
mov
mov
cltd
add
inc
ror
adc
int
inc
xlat
lea
sbbb
fs
mov
adc
jecxz
or
jne
outsb
dec
aaa
push
mov
and
popa
enter
lret
movsl
pop
movsb
popf
loope
cmp
jno
out
sub
jmp
or
nop
std
rol
sub
inc
add
es
nop
test
ret
inc
fldcw
ret
data16
inc
add
aam
pop
test
jl
jmp
xlat
jbe
into
or
xor
outsl
jno
pop
rcl
dec
mov
stos
mov
jb
icebp
inc
lock
lcall
in
outsl
icebp
sar
adc
mov
xchg
inc
pop
mov
pop
lcall
pop
clts
stos
cwtl
lds
xchg
fcoms
cmp
adc
aas
lods
aaa
add
adc
sbb
fincstp
xor
jg
xchg
scas
cmc
mov
adcl
mov
or
sub
hlt
jne
out
pop
dec
jnp
sti
loop
dec
jb
outsl
lods
popf
out
xor
pop
xor
clc
scas
lcall
ljmp
mov
imul
and
insb
jmp
xchg
adc
loope
test
xchg
push
in
adc
in
or
dec
jmp
in
and
dec
inc
cmp
sbb
adc
arpl
daa
mov
lods
dec
xor
jb
rcll
mulb
mov
int3
dec
ja
mov
ret
lret
addr16
cmc
inc
daa
jecxz
and
xchg
and
sub
or
nop
jbe
inc
lds
dec
sub
push
lcall
or
mov
cmpsl
dec
inc
das
mov
cltd
sti
rcrl
movsb
nop
push
sbb
aad
jecxz
inc
pushf
adc
and
lock
fucomip
jp
dec
inc
stos
subl
jg
imul
push
insb
repnz
sub
pop
xor
jmp
andl
sbb
ret
shlb
fs
outsl
in
sbb
fimuls
into
sahf
cwtl
mov
nop
ret
es
ret
jb
inc
fildll
pop
sti
lea
fadds
testb
jg
icebp
mov
jne
pusha
bnd
jg
or
cmpb
push
xlat
dec
xor
cli
sbb
jecxz
sub
jg
xchg
popa
jecxz
mov
lods
mov
mov
cmc
outsl
push
xchg
into
daa
icebp
xchg
mov
fadd
lods
sub
sbb
push
popf
cmpb
sbb
fists
or
xchg
test
mov
int3
pop
dec
ffreep
xor
rcrl
in
icebp
test
fbstp
outsl
fsubs
nop
enter
icebp
sbb
pop
subl
mulps
add
sti
adc
mov
jp
cmpsl
stc
nop
dec
adc
roll
jbe
xchg
or
and
shlb
xlat
mov
dec
add
shlb
jae
push
or
cmp
fcomps
and
dec
dec
cmpsb
push
xchg
mov
in
cs
popa
pop
int3
mov
pop
xchg
in
aad
add
ljmp
ss
sbb
or
fldt
das
xchg
inc
cmpsb
xor
xor
mov
or
add
mov
int
pop
aad
outsl
hlt
adc
fcoms
sub
jle
loope
xchg
mov
xor
scas
push
loopne
cwtl
push
mov
xchg
rorb
aam
hlt
rcrl
out
sysexit
mov
ds
pop
out
sbb
js
and
push
mov
jne
in
adc
leave
into
jle
popa
xor
push
pop
movl
sub
les
cld
push
xor
rclb
mov
or
xchg
pop
aas
lcall
pop
jge
xchg
push
mov
and
lret
inc
cmp
adc
push
or
adc
mov
ja
pop
pop
push
add
test
fwait
popf
fs
fdivs
stos
mov
add
or
movsbl
cmp
adc
xor
sub
push
scas
dec
push
addb
mov
mov
xor
stos
sbb
pop
xchg
adc
js
cmp
mov
daa
cmpl
jae
sub
es
add
in
movsb
imul
jmp
sbb
aaa
pop
sbb
clc
pop
pop
aaa
jl
xor
sbb
aaa
xchg
mov
mov
fstl
inc
mov
jmp
lds
lret
mov
cli
in
xor
mov
fs
outsl
loop
daa
iret
push
loop
pop
sbb
xchg
movl
loope
mov
mov
cmpsb
movsb
jecxz
bound
je
je
js
mov
imul
mov
jno
xor
movsb
hlt
xchg
lcall
push
mov
in
add
mov
mov
hlt
sbb
fwait
outsb
fmul
imul
push
outsl
xchg
rcl
jl
ja
add
movd
decb
imul
push
cli
or
mov
int3
call
xor
mov
inc
das
outsb
jl
mov
in
dec
stc
enter
in
push
sub
sbb
pop
shlb
bound
sub
cmp
scas
mov
xchg
ret
sub
into
pop
jbe
sti
mov
mov
push
pop
add
hlt
lret
punpcklwd
push
into
push
scas
pusha
int
dec
mov
xchg
testl
xchg
push
sbb
fistps
fcmovne
adc
pop
divb
mov
out
mov
nop
inc
sti
mov
xchg
jg
stos
decl
int3
sub
cwtl
push
fisubs
pop
xchg
and
das
and
xchg
push
mov
and
int3
inc
movsb
push
mov
gs
dec
and
out
sarb
add
outsb
js
mov
sub
sbb
mov
cmpsb
inc
rolb
call
add
xchg
out
bound
or
loop
fwait
es
cmp
jl
jmp
add
fstl
mov
ret
out
ss
cmp
sti
pop
adcl
fldl
add
ds
dec
loope
stos
adc
bound
jp
xchg
and
popa
bound
xchg
popf
es
pushf
addr16
out
arpl
add
mov
jo
xlat
pop
or
cmpsl
fwait
outsl
cmp
push
or
fmulp
cmpl
mov
imull
jle
imul
in
lock
mov
ret
sahf
push
jno
test
xor
fdivrs
enter
imul
sar
bswap
pop
sti
mov
add
sti
mov
int
loopne
scas
in
pop
jnp
jns
and
je
icebp
stc
gs
mov
stos
mov
push
mov
mov
popf
mov
jbe
add
mov
aas
lret
inc
sti
mov
push
adc
movsb
adc
push
add
xchg
jmp
popf
pop
dec
sbb
lret
adc
dec
out
jle
dec
push
and
jo
outsb
mov
jl
repz
push
jge
sub
and
icebp
stc
jp
lret
movsb
xor
push
mov
rcr
cmpsb
sub
pop
imul
test
xlat
or
mov
or
rol
mov
aam
xchg
xor
ss
pop
adc
rorb
mov
mov
cmp
xorl
mov
jl
addr16
addl
pop
testb
jle
adc
sbb
aam
popa
sub
jno
int3
xchg
fwait
xchg
push
stos
push
pop
popf
jo
mov
int
and
aam
stos
mov
push
lods
shrl
jmp
mov
sbb
in
ljmp
movsb
mov
addr16
xor
sub
outsl
gs
push
das
jmp
push
jb
data16
push
das
adc
xlat
inc
pop
dec
cmp
test
jmp
mov
jl
ljmp
xchg
stos
roll
cli
cmp
leave
jp
sbb
mov
pop
ret
add
mov
xchg
sahf
mov
fildll
pop
iret
test
adc
addr16
or
addr16
xor
sub
xchg
pushl
add
bound
movsb
popf
or
xchg
inc
cmp
es
lret
pushf
in
cmp
aaa
sbb
mov
mov
mov
call
fisubl
mov
cmp
mov
jp
ret
imul
or
loop
lock
cltd
adc
sub
js
mov
jp
insb
dec
arpl
adc
data16
repnz
sbb
fbstp
mov
xor
xchg
or
inc
jb
dec
mov
ret
pop
lcall
call
jmp
cmp
movsb
inc
mov
ds
sub
enter
push
sti
push
out
insb
scas
xor
lods
lret
out
push
outsb
push
push
aas
cmp
inc
pop
mov
outsb
cmp
mov
jno
mov
addr16
lds
xchg
inc
stos
fisubl
lcall
lods
in
jecxz
dec
shr
out
dec
mov
aaa
xor
sub
push
cltd
jno
cmpsb
and
std
mov
int3
pop
pop
or
cs
imul
ret
inc
ret
or
shlb
mov
into
pop
sbb
cmp
sbb
sbb
cmp
xchg
sbb
cs
pop
lds
pop
jmp
popf
mov
xor
add
out
jb
repnz
pop
bound
loopne
pop
jg
lods
out
jmp
mov
jnp
loop
and
adc
jns
push
inc
jmp
popa
xorl
jo
into
es
decb
cli
and
or
nop
cmp
xor
loopne
sarb
pop
cmp
and
repz
aad
pop
rcr
mov
jno
fbstp
or
jle
adc
xchg
push
add
inc
sub
mov
lds
int
sbb
mov
sbb
jg
jbe
inc
lret
ret
cmpl
adc
adc
inc
iret
and
out
out
mov
xor
sub
pop
inc
pushf
cmp
and
mov
xchg
inc
mov
jo
ret
or
jne
dec
popf
cmpsb
inc
push
stos
gs
shll
sti
cmp
jge
sbb
lahf
jno
lock
sub
cltd
popa
xchg
push
mov
pop
subb
inc
push
jno
lds
movsb
xchg
das
jns
pop
daa
dec
ljmp
push
leave
lods
sub
xchg
iretw
push
push
cmp
add
in
dec
pop
enter
loop
jg
adc
outsb
dec
cld
aam
xor
in
lds
in
mov
out
mov
pop
outsl
rcr
icebp
add
jp,pn
mov
sbb
in
mov
mov
ficomps
cmpsl
mov
insl
jae
enter
cmp
and
cmp
icebp
mov
jo
cmpsb
sub
ret
mov
add
jae
mov
xchg
mov
mov
jno
sbb
mov
mov
mov
adcl
insb
ss
mov
mov
xchg
jg
lcall
and
and
inc
in
sbb
dec
push
fs
mov
pop
shl
mov
stos
rcl
sbb
mov
test
es
jae
sbb
push
mov
popf
adc
push
lock
and
xchg
xchg
sub
push
or
call
andl
pop
and
jo
add
xchg
add
jmp
fsubl
test
cltd
iret
jne
mov
popl
pop
xchg
adc
aad
sub
jmp
mov
test
shlb
push
js
cmp
iret
out
jno
pusha
cmpsl
mov
pop
xlat
xor
jmp
arpl
out
mov
rcrl
xchg
xor
pop
loop
aam
jg
adc
negl
adc
or
xlat
cmp
rclb
fsubl
mov
push
fstp
xor
push
testb
xor
or
or
jmp
xchg
dec
push
add
mov
or
and
cltd
cwtl
addr16
fldenv
xor
push
or
je
xchg
xor
mov
pop
and
mov
frstor
pop
hlt
hlt
gs
xchg
fsubl
push
jns
scas
imul
out
dec
mov
imul
jmp
jbe
aad
or
mov
je
mov
adc
sub
mov
mov
je
mov
mov
mov
in
and
sbb
ret
inc
outsb
dec
mov
out
jle
inc
enter
ds
pop
dec
xor
cli
or
xor
bound
in
out
push
dec
push
push
and
mov
out
and
je
xor
dec
and
push
mov
mov
ret
sub
jns
dec
push
lahf
loop
and
std
dec
fists
push
cmpsb
inc
push
mov
push
jne
pop
jmp
loop
xchg
adc
or
xchg
sbb
push
add
push
xchg
push
push
push
std
xor
mov
int
mov
dec
daa
dec
outsl
pop
dec
adcl
or
jns
sub
rcll
das
and
negl
cmp
xor
inc
loop
std
adc
dec
add
sbb
adc
inc
inc
jae
into
cmp
cmp
jnp
in
cmpsb
sbb
jno
or
inc
dec
sbb
fwait
adc
mov
ja
insb
mov
dec
pop
cltd
xlat
fucomip
jle
cli
int3
int3
lods
out
cld
mov
outsl
in
mov
xchg
scas
lcall
iret
xor
mov
cmp
and
out
xlat
test
cld
cmp
cmp
dec
dec
ret
popa
jns
mov
mov
mov
push
xchg
cltd
fsubs
ds
shrb
andl
pop
mov
in
sub
adcb
lcall
loop
cmpsl
sbb
test
inc
fstpt
push
popf
lret
pop
pop
jmp
andb
xor
cli
in
pop
test
fnstcw
mov
faddl
xor
xchg
rcrb
push
xor
movsb
pushf
push
xchg
aaa
add
sub
jmp
loopne
cltd
ljmp
into
addr16
pop
and
hlt
adc
mov
add
ljmp
ljmp
lock
stc
cmc
shrl
push
dec
leave
jnp
fistpl
pop
dec
unpckhps
movsl
jecxz
fsts
adc
out
lds
cmp
xorl
pop
dec
sbb
and
repz
jnp
mov
sbbl
rolb
jp
lret
std
push
add
mov
in
dec
cld
xor
or
dec
les
das
cmp
cmpsl
sub
jnp
stos
pop
mov
sahf
xorl
cmp
add
outsl
mov
hlt
sub
jae
mov
fs
mov
lock
lahf
into
add
cmp
in
xor
call
dec
xor
push
mov
roll
lea
push
lock
mov
adc
push
scas
cltd
jns
aas
and
jns
in
mov
push
xor
enter
mov
add
cwtl
mov
add
mov
mov
cwtl
in
adc
adc
addr16
inc
push
push
and
enter
data16
loope
jge
insb
mov
inc
iret
sarb
xor
daa
movsl
jecxz
add
arpl
cmpsb
adc
dec
pop
rorb
dec
cmp
inc
lods
out
lret
pminsw
cmp
jnp
jae
xor
fbld
cmc
xchg
lahf
jge
xchg
aaa
adc
scas
outsl
cwtl
sbb
aas
test
dec
push
scas
fistpl
and
mov
ja
inc
mov
mov
xchg
cld
mov
pusha
incl
mov
js
aad
imul
or
jae,pn
mov
inc
and
pushf
lods
clc
popf
adc
ds
pop
and
jecxz
adc
or
out
xlat
je
movsb
xor
dec
out
xor
enter
shlb
repz
adcb
lods
jmp
jo
sbb
ret
jb
add
cmp
ficoml
push
cmp
fs
xchg
mov
popa
ret
jge
sti
cltd
cmp
in
out
jne
lds
shrb
in
add
sbb
aam
hlt
lods
rorl
test
cmp
sub
mov
push
rcrb
out
mov
ljmp
pop
fadds
inc
cmpsb
adc
bound
into
out
xchg
push
in
xchg
sub
mov
xor
out
test
and
xor
orl
mov
and
sar
gs
rcrl
jmp
out
sti
sti
cld
add
ret
xchg
push
mov
out
leave
iret
js
push
xchg
or
fbstp
sub
lret
jge
stc
xor
aaa
mov
inc
rcr
popa
out
dec
test
pushf
stos
sbb
mov
or
dec
dec
ljmp
aam
push
lods
mov
jo
cmp
data16
lcall
cmp
mov
xchg
pop
js
outsl
lret
js
mov
add
mov
test
pop
mov
je
test
mov
lock
jnp
nop
mov
repz
mov
push
jo
sbbb
loopne
sub
inc
pop
jg
xor
inc
jns
xchg
pop
in
adc
imul
mov
daa
clc
int
cwtl
arpl
xchg
in
dec
loope
sarl
lahf
ret
test
mov
hlt
call
pop
xchg
stos
pop
add
outsl
mov
xor
dec
lea
insb
dec
aam
fnstenv
push
push
daa
lea
inc
dec
bound
mov
imul
mov
inc
mov
adc
or
mov
sbb
adc
bound
lds
mov
ds
adc
inc
xchg
insl
sub
sub
and
ja
sub
xlat
aam
aam
pop
std
stc
jmp
sarb
fstpt
out
sub
cli
mov
xor
xchg
cmp
movl
pop
addr16
repz
je
int
cld
insl
pop
inc
and
mov
sub
mov
lret
dec
or
inc
test
push
in
mov
loope
jno
sub
inc
lods
arpl
sbb
mov
cmp
adc
popw
xor
pushw
push
mov
xor
sahf
ret
pushf
jo
in
xor
mov
movl
pushf
cmp
sub
xchg
cmp
ss
mov
fwait
mov
les
sub
mov
sbb
mov
jnp
insl
shrb
xchg
dec
sbbb
in
in
push
cli
sub
movb
mov
ja
mov
mov
xchg
sbb
shrl
push
lods
pop
mov
add
xchg
fidivs
pop
and
imul
fldenv
jle
jl
push
aaa
sub
and
push
jmp
imull
dec
js
sar
clc
popa
insb
bound
fadd
mov
dec
jnp
outsb
out
loope
xchg
lcall
push
xor
out
imul
and
cmpsb
stos
insl
adc
dec
in
inc
testb
adc
sbb
aas
repz
jecxz
jnp
lds
test
push
add
mov
mov
daa
xchg
mov
cmp
andb
das
lock
mov
imul
pusha
push
push
mov
out
pushf
sub
sbb
je
pop
sbbl
add
mov
push
in
jecxz
inc
ss
push
pop
repz
call
mov
push
lret
andl
lds
inc
decb
dec
test
cld
add
jl
idivl
sub
test
loopne
jmp
sahf
ds
ret
leave
and
and
mov
fcomps
lret
aad
cmp
mov
ja
std
leave
jecxz
fsubp
pop
mov
xchg
fmuls
pop
enter
mov
fisubs
mov
push
popf
in
rclb
imul
gs
and
and
stos
popa
popa
jne
pop
and
inc
dec
daa
inc
popa
push
int3
sti
fmull
add
mov
insl
out
mov
jne
out
xchg
out
sub
lcall
cmc
mov
mov
lret
push
fcmovnbe
add
xchg
mov
sti
lock
mov
push
sub
xchg
loopne
subl
lcall
das
and
ret
pop
jp
leave
add
iret
ljmp
mov
mov
mov
inc
lea
mov
jns
idivl
movsb
std
add
repz
enter
mov
mov
add
in
dec
lods
inc
lcall
and
xchg
mov
dec
sub
sub
loopne
mov
adc
xor
lret
pusha
scas
add
dec
xchg
sub
aam
mov
mov
aas
sarb
fs
out
test
clc
sahf
push
mov
jne
mov
xadd
daa
mov
test
push
lds
push
sarb
in
dec
sub
or
cmp
cwtl
dec
push
or
mov
out
sar
in
sarb
mov
in
dec
repz
jecxz
adc
xchg
mov
mov
add
mov
pop
adc
jo
icebp
inc
or
out
loop
stos
or
pop
jo
aas
adc
iret
pop
xor
cpuid
pop
jo
shll
or
jo
bnd
fisubs
sbb
dec
jno
pop
rcrl
pop
outsb
or
lock
loopne
iret
adc
xchg
cmc
or
mov
inc
inc
rorb
dec
push
push
leave
jne
fiadds
ret
lret
in
loopne
push
or
ret
xchg
mov
fld
sbb
add
mov
cmp
push
movsb
sub
or
mov
push
test
shl
add
sbb
fstps
sub
movsl
pop
inc
std
loopne
loop
jb
rolb
dec
push
and
sub
and
nop
pop
mov
inc
sub
cmp
cmpsl
pop
pop
mov
ljmp
push
loop
inc
sahf
jno
cmc
lds
and
xor
or
push
jns
daa
sub
scas
push
mov
loop
aaa
test
fidivrs
xchg
xchg
jl
jmp
xchg
es
out
fwait
test
ret
lods
fs
fbld
mov
movsl
pop
mov
xchg
data16
movsb
adc
sti
mov
cmp
cmp
lods
insl
lcall
push
test
sbb
mov
icebp
add
lods
pop
xor
ds
cmpsl
dec
mov
subl
dec
repnz
loop
aaa
cmp
pushf
xchg
out
rcrl
rorb
lods
ljmp
sub
sbb
or
push
add
test
cmp
mov
pop
xchg
lret
sbb
dec
mov
mov
mov
or
push
iret
lcall
pop
and
inc
pop
pusha
mov
cli
mov
les
test
xlat
pusha
dec
xor
mov
or
cmp
popa
mov
mov
std
ficoms
add
or
cmp
repz
addr16
mov
aaa
mov
sbb
add
jge
mov
mov
sbb
mov
pop
mov
xlat
int
push
sahf
addr16
mov
je
push
es
popa
sub
and
adc
inc
mov
add
mov
xchg
cltd
dec
and
js
dec
dec
or
and
addl
xor
xchg
jecxz
cmp
es
fwait
sub
mov
int
into
pop
xor
in
cmpb
insb
ret
mov
sbbl
call
aam
mov
fcomp
call
sub
xor
out
lods
sahf
mov
push
cmp
adc
mov
cmpsl
jl
mov
addb
inc
imul
stc
div
inc
movsb
popa
hlt
into
ret
mov
sub
and
mov
sti
in
xor
xor
jl
pop
xor
xor
sbb
adc
sub
loop
xor
daa
inc
mov
push
bound
shlb
inc
xchg
mov
xor
jne
mov
mov
mov
in
or
into
mov
mov
test
hlt
outsb
xchg
scas
add
out
dec
and
mov
cmpsl
rolb
imul
sub
or
pop
cmp
popa
test
daa
mov
repz
jne
mov
xchg
jae
push
sub
and
nop
fnstenv
cmp
mov
pushf
jmp
mov
cmp
or
xchg
inc
jns
gs
fs
les
or
lret
dec
or
in
jecxz
int3
sbb
or
adc
mov
mov
in
out
outsl
mov
cmp
mov
xorb
dec
fs
sbb
enter
mov
test
out
jp
push
jnp
nop
adc
cmpsb
cmpsl
cmp
das
and
jl
push
jge
int
gs
in
adc
mov
mov
mov
dec
out
movl
inc
mov
lods
mov
sti
shlb
sbb
sub
lods
fcomip
xchg
jge
push
scas
das
mov
lret
add
rorb
add
or
mov
stc
shll
sub
cmpsb
inc
mov
repz
cmp
jge
pop
scas
mov
mov
add
movsl
pop
push
addr16
or
xchg
mov
sub
fs
mov
stc
icebp
adc
shrb
scas
out
hlt
and
mov
ret
mov
mov
jns
and
sbb
cmp
push
or
inc
push
xchg
js
add
xchg
xor
mov
or
jb
std
sub
adc
popf
clc
mov
lock
mov
les
leave
adc
dec
lcall
ret
out
push
inc
xor
cwtl
cmp
je
adc
mov
icebp
out
addb
jae
and
push
or
cmc
cmp
mov
je
arpl
jp
push
stos
aaa
imul
das
daa
aas
test
add
cmp
in
jnp
sti
dec
out
popf
in
or
sub
test
aaa
fwait
stos
pop
aaa
cmp
aad
mov
and
js
jl
cmp
jbe
sub
adc
jp
fwait
in
jmp
xor
pop
mov
sub
cltd
pop
ljmp
cs
iret
inc
ja
inc
cmp
sbb
testb
mov
mov
xchg
shll
lea
sar
je
mov
cld
pop
add
pop
outsb
mov
ljmp
push
and
sbb
and
mov
clc
jno
push
stos
pop
cld
es
adc
adc
subb
in
fstpl
adc
and
jg
jb
or
shlb
adc
dec
mov
call
mov
pop
mov
mov
fisubs
outsb
adc
ja
fstpl
sbb
adc
js
lret
or
cmp
inc
cwtl
push
fldl
rcrb
mov
hlt
std
dec
xchg
mov
jg
mull
xchg
jnp
pusha
mov
sbb
xchg
mov
inc
xchg
cmp
dec
mov
movl
jae
test
push
stos
xchg
addr16
lahf
xlat
popf
dec
icebp
imul
leave
ljmp
mov
xchg
cmc
ret
mov
mov
in
push
lds
mov
lahf
dec
in
popf
out
add
push
jo
fildl
sar
insl
ficomps
xchg
sub
fidivl
xor
call
push
repz
daa
mov
out
mov
es
in
rcl
mov
mov
jl
mov
out
mov
popa
cmp
jg
pop
lock
outsb
insl
aas
jbe
adc
jecxz
mov
dec
loope
xor
xor
lahf
shll
add
and
xchg
mov
sbb
enter
sub
dec
aad
lock
dec
pop
add
movsl
xchg
adc
push
cli
sub
and
aas
pop
fidivl
rorl
mov
push
arpl
bound
fcompl
xor
dec
cmp
mov
jno
xchg
lock
sti
adc
int
lahf
les
sbb
add
cmp
adc
mov
sub
cmp
jb
inc
ds
mov
and
popf
or
loop
clc
js
mov
cmp
cltd
aam
ja
mov
stos
pushf
pop
int
ds
inc
pusha
sbb
and
sub
nopl
or
pop
fld1
sub
cmp
mov
add
dec
jo
call
add
mov
mov
out
sbb
arpl
aad
jge
mov
and
or
lea
xchg
adc
add
pop
sub
imul
loope
ja
pop
inc
or
mov
push
xor
pusha
mov
js
adc
imul
push
fwait
mov
xor
or
jno
or
jnp
lods
inc
divb
mov
arpl
cs
mov
lret
add
lret
int
stc
mov
pop
ja
popa
mov
dec
sub
nop
sub
or
roll
rcll
dec
sbb
repz
rorl
push
into
add
jg
mov
adc
inc
inc
mov
mov
in
ret
test
add
insb
mov
cld
mov
iret
stos
popa
dec
lods
fisubl
rorb
cld
pusha
mov
cwtl
pop
push
test
adc
cwtl
cmp
daa
fiadds
mov
inc
inc
pop
into
popf
push
sbb
inc
mov
jns
dec
xchg
ds
adc
jmp
repnz
mov
hlt
mov
out
sbb
adc
popf
outsb
cmp
cmp
mov
adc
sub
pop
lock
inc
ss
js
negl
aad
or
test
push
push
inc
imul
lret
loopne
sti
cmp
or
insl
jmp
fildll
cmpsb
push
inc
push
sbb
sub
or
adc
flds
bound
lock
loopne
push
mov
add
ds
mov
push
fstp
inc
bound
jle,pt
mov
imull
pop
out
mov
xchg
push
lods
sub
movsb
pop
cmpsl
inc
subb
incl
imul
fidivs
adc
addb
jae
or
mov
leave
dec
push
jno
mov
pop
iret
mov
repnz
sbb
aad
fisttps
sbb
nop
xchg
decl
xchg
push
inc
inc
and
dec
lock
insl
ss
xchg
hlt
xor
sub
or
mov
xchg
xor
in
add
out
xor
cmp
dec
cmc
rcrb
lods
mov
iret
cwtl
jge
mov
jbe
pop
ffreep
push
sbb
push
pop
pop
adc
not
sbb
push
inc
pop
loopne
fcoml
sbb
adc
lahf
jb
jle
pop
ljmp
loopne
inc
inc
enter
and
faddl
repz
enter
movsl
xor
mov
dec
ret
les
jnp
sar
sti
mov
mov
div
inc
sbb
push
aaa
popf
adcb
out
inc
mov
out
andl
addr16
mov
push
daa
inc
push
es
out
inc
pop
gs
repz
testl
imul
fmull
mov
frstor
jb
stos
cmp
ret
bound
push
push
jnp
cld
iret
or
dec
sahf
icebp
adc
inc
fsubrl
mov
lcall
nop
mov
lret
pop
fldcw
test
sti
pop
xchg
add
test
jno
xchg
outsl
in
dec
out
or
add
popa
pop
mov
add
in
filds
jns
mov
cmp
pop
sbb
icebp
scas
fistps
dec
push
in
add
jg
dec
xor
adc
mov
sbb
es
aam
insl
inc
pop
insl
test
push
mov
mov
push
and
paddq
out
call
adc
movsb
push
xlat
cld
inc
in
sbb
xchg
sahf
jge
pop
mov
pop
push
ss
addb
mov
inc
jl
jnp
test
push
jno
into
pop
mov
mov
repnz
dec
push
cmovno
scas
add
and
xor
enter
jle
sub
subb
stos
shl
fistpll
push
mov
std
sarb
dec
outsb
pop
sbb
pusha
cmpsb
out
lret
lods
jbe
push
add
xor
xchg
cld
iret
test
cmpsb
mov
test
push
xor
mov
imul
ror
cmp
insb
dec
nop
in
adc
test
pop
xchg
mov
cmp
dec
pop
pop
xor
mov
lods
adc
rorl
xchg
cmp
popa
fcomps
jle
and
mov
movsl
imul
jae
mov
jg
cmp
mov
mov
xchg
enter
jge
jg
fcompl
lret
dec
loopne
or
mov
push
cmp
push
sti
adc
loope
jmp
sbb
ss
in
adc
push
aad
out
add
stos
out
inc
stc
cltd
repnz
push
enter
jbe
sahf
xlat
pop
ljmp
push
push
clc
mov
sahf
sub
fistpl
fiaddl
shrl
cmp
mov
out
ret
push
fidivrl
divb
sub
movsb
push
outsl
dec
adc
stc
jb
sub
jne
add
addl
mov
pop
rcrb
scas
inc
push
inc
sub
popf
in
test
mov
adc
loope
xor
stc
test
add
mov
sub
cwtl
mov
add
adc
jb
sub
jb
mov
jbe
imul
mov
sub
push
scas
mov
ds
repnz
fs
dec
add
cmc
iret
sbb
int
pop
sub
rcrl
pusha
jo
test
call
sbb
sub
iret
adc
jne
scas
imul
jnp
ret
mov
xor
sti
inc
mov
adc
dec
sub
mov
push
inc
and
fiadds
mov
lret
loopne
cli
lea
adc
test
pop
es
sub
mov
push
test
icebp
or
scas
sub
pop
xchg
ja
sub
xor
ss
and
stos
fwait
testb
pop
aad
inc
or
jecxz
xor
fcmovnb
pop
push
addr16
outsb
scas
arpl
test
not
fidivrl
and
fidivl
ds
aam
pusha
and
rcl
jmp
rorl
jo
xchg
mov
dec
sub
bound
and
fnstcw
stc
dec
jge
inc
or
mov
jle
lret
push
dec
pusha
xchg
fldt
mov
es
cmc
scas
leave
lcall
pop
mov
adc
cmp
pop
dec
scas
jle
daa
pop
mov
fsubl
orl
int
in
imul
dec
mov
and
sub
xchg
lret
inc
sub
out
and
cmc
out
xor
inc
fnstenv
loopne
push
aam
add
test
or
cwtl
dec
push
insl
pop
sbb
pop
push
out
icebp
cmpb
mov
sarl
jno
hlt
cmp
jmp
lock
int3
in
xchg
scas
inc
stc
cmp
int
or
cld
push
push
out
std
push
jne
test
pop
xchg
leave
dec
xchg
dec
lahf
ret
cmp
fnstcw
insl
mov
cli
jb
mov
mov
shlb
cmpsb
add
inc
adc
int
mov
scas
xchg
add
std
popf
loopne
test
jb
mov
jae
fdivr
js
mov
ja
sub
inc
sub
add
int3
stos
inc
add
xor
adc
clc
in
leave
pop
cmc
int3
xchg
mov
aam
mov
notb
into
fdivrs
xor
rclb
add
stos
outsb
lock
imul
cld
mov
pushf
cld
jne
add
mov
mov
ja
adc
inc
pop
sub
sbb
jns
mov
push
or
test
xchg
and
sub
mov
jl
push
jle
or
sub
pop
adc
sti
mov
in
imul
aas
dec
scas
mov
cs
daa
adc
and
mov
or
aas
out
clc
mov
lods
xchg
and
jp
mov
pop
cltd
push
roll
test
pop
test
ret
add
or
icebp
add
pushf
ja
or
cmpsl
in
aad
xchg
push
push
inc
lds
pusha
cli
in
outsb
xchg
icebp
das
lods
and
int
add
repnz
in
inc
sub
stos
inc
daa
inc
imul
mov
sub
cmp
dec
and
fidivl
lods
sahf
xchg
outsl
jg
jecxz
xchg
add
mov
lcall
movsl
scas
scas
cmp
int3
mov
and
repz
and
loopne
leave
mov
xchg
or
and
in
cld
push
sub
retw
test
out
mov
mov
syscall
in
in
jns
and
push
popa
jns
mov
sbb
adc
in
enter
pop
addb
adc
sahf
and
mov
xor
inc
jg
jbe
cmpsl
push
inc
or
cmpsl
dec
sbb
sub
sbb
and
inc
inc
dec
jnp
mov
call
pop
mov
and
mov
jl
rcrb
inc
mov
inc
adc
cld
xchg
cwtl
in
xor
or
mov
ficompl
fildl
sahf
mov
mov
mov
and
dec
adc
lods
outsl
jge
jae
cltd
add
insl
inc
pop
shlb
xchg
addr16
or
js
jge
lahf
aad
pushf
icebp
mov
cld
rclb
xor
xchg
push
ja
into
test
mov
dec
sub
push
cwtl
lahf
inc
sbbb
mov
adc
inc
out
xor
lahf
xor
sbb
jne
mov
fimuls
and
add
scas
addl
jae
jl
xor
or
jns
and
dec
inc
sub
ljmp
and
shrb
std
aam
or
mov
or
or
xor
and
out
icebp
mov
mov
jecxz
push
and
outsb
loope
mov
jae
jmp
nop
pop
xchg
fnstsw
adc
dec
arpl
mov
cmp
xchg
lods
rorb
cmp
int3
cmp
test
sbb
sbb
es
pusha
data16
mov
mov
out
xchg
pop
dec
mov
in
dec
repnz
in
xor
add
lcall
sbb
outsl
frstor
xchg
out
outsl
add
bound
mov
jno
pop
mov
icebp
lret
testl
ret
and
out
dec
andl
push
jne
add
or
clc
dec
push
lahf
les
mov
scas
pop
stos
das
pop
add
xor
stos
xchg
cmp
xchg
stos
inc
push
dec
imul
scas
inc
adc
jns
xchg
cli
sub
cmp
add
cmp
mov
pusha
add
iret
pushf
xchg
push
pop
sarl
cmp
inc
movsb
mov
insb
mov
mov
lahf
insl
fcmovbe
dec
or
jg
fcompl
fdivl
jns
movl
sub
add
jg
loop
jg
pop
cs
test
insl
mov
fidivs
movb
addr16
repz
dec
into
imul
jge
add
lods
aad
cmp
ret
outsb
fmuls
sub
or
mov
push
add
lcall
sbb
inc
cs
xchg
sbbl
mov
movsl
xor
inc
sti
push
mov
xchg
test
in
iret
pop
shlb
mov
rcrl
push
dec
test
mov
xchg
mov
movsl
in
cli
pop
sbb
test
pop
xor
cmpsl
xchg
ljmp
or
dec
or
cmp
and
pop
lahf
stc
xlat
int
pop
mov
mov
rcrl
shlb
mov
and
std
xchg
lea
lahf
pop
std
pop
loopne
adc
testl
sbb
and
mov
sub
sahf
and
in
loope
int3
loope
das
or
nop
xor
push
cmp
adc
and
lods
mov
mov
and
cmp
mov
lret
sbb
sub
adc
xchg
int
push
mov
lcall
cmpsl
popf
mov
pushf
imulb
xor
cltd
test
jnp
repz
push
jmp
or
mov
jecxz
ljmp
cli
jns
jp
jo
sbbl
jno
or
jg
call
mov
cmp
js
mov
fmull
popa
imul
cs
jle
jo
inc
dec
dec
mov
sub
orb
cli
ds
pop
xchg
daa
add
sbb
fcoml
mov
lcall
mov
ret
aad
cmp
loopne
xor
cmpb
inc
mov
clc
adc
add
mov
pop
ret
push
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
