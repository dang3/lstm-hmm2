sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
call
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
push
push
call
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
movl
mov
push
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
mov
push
call
loope
cmp
jbe
hlt
aaa
inc
daa
xorw
cmp
cli
xlat
dec
mov
in
and
sbbb
pop
and
inc
sub
sub
pop
jmp
inc
jecxz
lcall
fisubrs
fnstsw
inc
add
pop
js
inc
mov
dec
pop
mov
std
adcl
cmp
or
jno
gs
js,pn
insl
sbb
shll
xor
jno
rcrl
push
fsubrs
mov
and
adc
pop
mov
mov
jge
bound
mov
lret
jmp
in
pop
inc
je
xchg
aaa
nop
push
je
cmc
adc
add
mov
mov
int
xor
pop
and
and
mov
clc
mov
hlt
nop
ds
adc
pushf
push
mov
sub
std
cmp
orb
pusha
pop
aad
inc
stc
mov
cs
mov
nop
sbb
ljmp
icebp
mov
in
arpl
cmp
mov
xor
mov
mov
or
xlat
fs
mov
pop
fwait
cld
sbb
xor
stc
or
jle
sub
out
push
cs
sub
iret
push
insl
dec
out
pop
jne
jno
pop
sub
test
ret
xchg
ffree
mov
and
lret
ret
push
lret
push
mov
xchg
rcrl
add
loope
lock
mov
test
adc
mov
les
xchg
fistpl
mov
clc
sub
out
nop
stos
push
out
das
cwtl
push
inc
sub
bts
xor
jno
andl
addr16
adc
xor
movsb
push
in
inc
sub
add
xor
and
scas
sbb
xchg
and
and
inc
je
sbb
inc
jbe
mov
sti
mov
cmc
jmp
repnz
jl
arpl
xchg
inc
ds
pop
jge
mov
ljmp
repnz
cltd
call
cmc
out
dec
and
and
jmp
imul
mov
test
call
enter
sbb
dec
dec
dec
inc
ljmp
xor
jne
jmp
bound
jnp
ret
xchg
push
lahf
mov
mov
out
adc
cmp
dec
mov
pusha
mov
gs
in
or
shld
mov
mov
adc
dec
push
mov
lfs
ror
pop
data16
pop
mov
mov
lock
push
cmp
fisubrl
push
test
lds
int
pop
bound
add
or
es
je
pusha
and
and
push
inc
push
pop
cs
fs
or
fwait
xchg
push
into
outsb
push
jecxz
adc
add
push
icebp
push
icebp
pop
je
and
leave
in
cli
cmp
fs
js
js
mov
into
xlat
aam
add
dec
sub
xor
push
xchg
dec
pop
fs
sub
push
mov
insb
inc
mov
and
movsl
out
jo
xchg
mov
push
push
push
test
test
push
data16
add
add
ds
nop
dec
push
in
out
loop
mov
pop
orl
popf
mov
mov
js
inc
cmp
dec
xor
dec
pop
mov
jb
push
sbb
mov
push
xchg
or
dec
xchg
xchg
test
jl
xor
orl
adc
and
mov
in
out
lock
xor
cmp
ret
and
test
lds
push
stc
or
loop
xchg
pop
mov
out
lea
dec
adc
aaa
icebp
ljmp
push
add
jb
aas
repz
ret
mov
test
cwtl
push
mov
out
sub
movsl
push
jmp
iret
icebp
test
add
test
add
int
xchg
add
test
mov
rcl
lods
inc
addl
les
or
cwtl
mov
inc
mov
into
jge
push
in
cmp
cwtl
push
mov
mov
jle
mov
adc
or
mov
sbb
cmpsb
jbe
mov
dec
sbb
test
jae
or
xchg
testb
loope
xchg
addps
mov
sub
and
dec
pop
jne
mov
movsb
dec
inc
jb
dec
push
stos
ds
add
adc
jnp
mov
clc
bound
pop
inc
push
xchg
push
push
lfs
cld
push
push
testb
je
xchg
pop
icebp
stos
adc
std
fimuls
jle
and
jle
adc
jg
fiadds
mov
int3
xor
les
movsl
pop
mov
test
movsl
sub
test
push
and
rorl
add
loope
or
lock
cmpsl
jno
fcmovu
jno
inc
xchg
jp
jg
pop
in
popa
xchg
ss
mov
repz
push
das
inc
ret
popa
xchg
jo
test
out
inc
popf
push
dec
jmp
pop
outsl
daa
aad
stos
in
jns
pushf
dec
push
mov
call
cltd
or
xchg
jmp
xchg
cltd
push
lds
scas
mov
inc
ret
adc
mov
add
or
jge
loop
or
mov
fmuls
inc
mov
xor
je
int3
push
mov
sahf
rclb
lods
sub
mov
inc
insb
xchg
push
dec
mov
nop
mov
mov
fisubs
mov
adc
or
push
fcomp
jno
cmc
xchg
gs
mov
loop
mov
insb
fstpt
into
mov
add
leave
dec
sti
inc
push
inc
mov
out
jae
add
pop
mov
cli
dec
cmp
mov
dec
sar
xor
add
pop
scas
fcoms
mov
mov
xchg
push
xor
scas
enter
xchg
mov
push
je
orb
inc
or
pop
and
push
or
ljmp
fdivrl
test
mov
xor
xor
push
out
xchg
incl
mov
movsl
xchg
jl
cmp
repnz
xor
jp
sbb
or
or
test
push
aam
xor
adc
test
arpl
xor
pop
mov
outsb
adcl
daa
sbb
or
mov
inc
mov
cwtl
jnp
mov
mov
ja
sub
lret
mov
andl
mov
jno
arpl
xor
lds
sub
jl
dec
stos
mov
adcl
loope
adcb
push
popa
jmp
fstpt
and
out
and
sbb
push
movsb
rcl
mov
sub
jnp
imul
ds
repnz
test
cmp
jns
fs
lret
sbb
jecxz
and
adc
and
push
add
sub
xor
rcll
cld
fildll
call
add
sbb
mov
pop
adc
test
jmp
fwait
out
xor
or
test
jmp
icebp
add
test
stos
int
ss
repz
sub
cltd
shll
mov
jns
pusha
mov
movsb
jp
push
inc
test
loopne
ljmp
jge
mov
xorb
dec
shll
sbb
lock
clc
mov
int
aad
and
dec
outsl
es
sbb
rcl
das
inc
adc
rcr
lret
dec
adc
lods
xor
ljmp
stc
stos
lods
outsb
sahf
xchg
int3
cmp
rcrl
dec
ja
les
pop
cli
sti
and
mov
push
mov
or
insb
enter
xchg
aam
fadd
scas
sbb
dec
shr
sub
adc
sub
xchg
mov
cmpsl
mov
out
and
mov
xchg
sbb
int3
es
mov
dec
xchg
stc
mov
push
xor
cmp
mov
mov
sbb
cli
jge
adc
xchg
aas
daa
movsl
jge
sub
lock
xchg
pop
call
fst
push
jns
cmp
inc
in
dec
jno
rcrb
stos
jnp
imul
push
pop
sbb
repz
jns
push
stc
add
sub
mov
iret
sub
lret
notl
sbb
sbb
inc
xor
add
cmp
pop
dec
xchg
ljmp
popf
fdivl
fiaddl
icebp
or
aad
and
push
dec
and
bound
mov
into
sbb
insl
and
add
shrb
pop
sahf
xlat
mov
and
jp
xor
adc
fidivs
test
leave
fsubl
sub
fwait
lods
xor
sub
ret
push
xchg
push
dec
sbb
xor
iret
mov
mov
inc
punpckldq
int
pop
into
test
int3
nop
cmpsl
fstpl
fiaddl
loope
ret
xchg
jmp
jmp
stos
mov
aaa
mov
pop
xchg
js
and
mov
pop
popf
sub
sbb
inc
and
fiaddl
pop
or
mov
incl
sub
push
push
imul
orl
push
insl
inc
mov
imul
iret
xchg
lock
jmp
pop
lret
imul
mov
hlt
mov
ret
dec
mov
add
movsb
jmp
sub
sub
fnsave
add
fistpl
sahf
sub
ds
cmp
cltd
jmp
scas
mov
test
or
clc
sub
pusha
cs
insb
out
jmp
sbb
jno
push
sbb
dec
or
xlat
and
and
fstps
cltd
dec
adc
out
outsl
push
mov
movsb
lahf
mov
fsubrp
cmp
pop
mov
aaa
mov
adc
daa
cli
xor
xchg
xor
scas
fistpll
inc
pop
push
add
lock
jmp
movsl
dec
and
push
loope
and
insl
fidivs
cmp
in
push
test
fabs
dec
jl
icebp
add
push
repz
imul
adc
cmp
sbb
ljmp
xlat
jecxz
adc
fwait
push
inc
fmuls
cmp
xor
mov
sub
shr
mov
dec
pop
mov
adc
divl
imulb
or
pop
nop
cmp
scas
scas
pop
lahf
cmp
or
jge
push
aaa
pushf
cmpsl
or
pop
pop
hlt
repz
loopne
mov
push
daa
clc
mov
fstp
gs
sbb
cmp
out
cmp
arpl
lock
decb
pop
insb
inc
or
out
nop
xor
movsb
push
push
mov
mov
push
lods
add
lcall
pop
xchg
jecxz
mov
mov
mov
repnz
mov
out
sti
fcoms
jae
mov
loope
xchg
movsb
add
popf
push
push
pop
jge
add
add
arpl
push
mov
mov
jp
xchg
divb
cli
pop
lret
into
or
cmpsl
aas
ret
out
jge
mov
in
testb
lock
cmp
inc
cmp
or
push
cld
push
mov
jg
mov
xor
mov
aam
popf
bound
stos
jno
scas
out
cmpsl
cmpsb
jbe
inc
ret
nop
mov
and
mov
cli
mov
xchg
sub
xor
mov
dec
lods
sbb
and
push
scas
mov
js
mov
and
inc
or
push
add
xor
icebp
sbb
and
xor
aad
inc
inc
dec
ss
cli
leave
xor
mov
xchg
mov
inc
inc
aam
jle
jnp
addr16
jmp
push
out
dec
jb
iret
popa
cmp
adc
nop
jae
pushf
fstps
mov
cmp
xor
and
cmc
inc
bswap
jne
dec
leave
xchg
insb
and
scas
insb
iret
jmp
repz
loopne
in
dec
jmp
mov
pop
lea
dec
out
adc
adc
mov
xchg
addl
and
cwtl
jns
cwtl
push
lds
jne
movsl
outsl
es
je
sbb
sbbb
jge
dec
fldl
lock
sbb
sub
xchg
test
adc
movsl
inc
jno
rolb
push
push
pop
data16
pop
cli
xor
test
ss
xorl
adc
mov
jbe
xchg
daa
xchg
fdivp
leave
push
les
in
fmull
push
das
out
fdivl
add
clc
lds
rorl
xchg
imul
cmp
sbb
fstpl
mov
fstpt
out
cld
sbb
dec
push
add
fcmovu
jmp
ret
cld
int3
pop
daa
sbb
sub
push
pop
xor
data16
add
lock
push
mov
jl
fsubrl
out
inc
and
cmc
push
xchg
mov
imul
and
popa
inc
call
shrb
xchg
push
sub
outsb
jge
shll
es
jne
cld
fwait
daa
inc
iret
rcl
rcl
and
imul
xor
bound
push
repz
std
dec
mov
xor
sub
dec
lret
or
in
mov
cmp
hlt
call
sbb
mov
pop
hlt
mov
jnp
push
test
push
vmovlpd
pusha
inc
pop
int3
push
xor
leave
in
aam
js
jb
push
dec
call
inc
sahf
jns
fdivrs
cmpsb
loope
pop
xchg
bound
dec
sub
or
pop
adc
loop
cmp
leave
cltd
scas
cli
mov
shl
push
cwtl
ja
loop
mov
mov
mov
es
lock
inc
push
fistl
bound
push
and
pop
aas
sub
sbb
inc
add
jmp
imul
repz
inc
scas
and
frstor
inc
imul
jmp
jns
sbb
mov
dec
pushf
int3
mov
add
pop
inc
and
dec
mov
mov
ds
cwtl
je
in
lock
je
ljmp
mov
jbe
mov
xchg
xchg
lahf
xchg
cmp
shll
ljmp
ret
and
push
mov
cmpsl
push
call
adc
lcall
push
or
cltd
xor
in
or
loope
add
inc
xor
sub
or
cmp
stos
mov
inc
cltd
sub
mov
or
loope
adc
jnp
sub
push
imul
xor
mov
stos
pop
test
push
out
rcr
roll
insl
jp
mov
push
or
push
mov
or
sub
mov
and
pop
test
ss
jae
popa
xchg
test
in
xchg
cmp
lret
bound
cwtl
mov
dec
iret
js
or
fbstp
jge
mov
ds
aas
in
jl
test
rcr
lods
xor
xchg
sbb
xor
movsb
inc
push
insl
das
push
loope
push
jb
sub
xor
cli
xchg
inc
mov
mov
in
xchg
add
sbb
lahf
or
fwait
xchg
mov
repz
imul
and
leave
sub
cmpsl
cmp
push
jecxz
push
ret
notl
adc
mov
cld
sub
imul
and
fmuls
divb
test
jmp
fidivs
add
out
gs
fstl
xchg
pop
pop
sub
push
pusha
mov
push
adc
inc
gs
push
cli
sbb
and
repnz
xchg
inc
insl
lret
clc
mov
mov
rcrb
push
movsl
add
aas
sbb
jbe
and
int3
ret
repnz
lret
shrb
enter
into
mov
inc
or
pop
sbb
jle
sub
mov
mov
add
rcll
cli
pop
mov
jno
movsl
jge
in
arpl
pusha
cs
jle
popa
pop
jecxz
out
and
int
and
pop
ret
fcmovu
jmp
push
js
pop
ret
cmpsl
xchg
orl
xor
sti
mov
push
add
movsl
leave
stos
out
pop
inc
pop
and
mov
into
enter
stos
and
shrl
jnp
mov
cwtl
fistpll
std
inc
sub
push
rolb
cs
jns
int3
pop
daa
mov
scas
pop
pop
jl
mov
mov
mov
fildl
xchg
mov
pop
fists
sar
push
addr16
adc
lret
inc
or
add
je
cli
mov
lahf
xor
push
jmp
addr16
and
add
mov
mov
xchg
mov
or
inc
call
sub
es
xor
test
xor
jbe
movsb
testb
ret
cld
xchg
cld
mull
pusha
out
dec
aad
orb
leave
movl
fstpt
mov
xchg
sub
enter
inc
dec
xor
push
xor
sub
pop
movsb
test
or
or
adc
xchg
jnp,pn
out
inc
jl
push
cmp
add
ljmp
das
xchg
ljmp
cmovg
mov
push
leave
mov
outsb
adc
adc
outsl
cltd
jns
outsl
movsb
mov
loop
and
jg
fldt
adc
push
pushf
lret
clc
inc
push
pop
test
negl
pop
xchg
mov
fisubrs
and
mov
xor
movsb
in
hlt
subl
in
loope
mov
push
xor
les
movsb
idivb
adc
bound
inc
lds
push
repnz
pop
filds
xlat
mov
je
sbb
shlb
pop
jns
dec
in
daa
cmpsl
scas
out
mov
or
mov
inc
fsub
lea
enter
hlt
ret
jle
js
cmp
bnd
adcl
in
dec
mov
mov
ljmp
out
jle
xor
out
test
or
fwait
cmp
pop
clc
in
dec
lea
cmp
jge,pt
sbb
int3
mov
insb
std
cmp
pushf
loop
ds
sub
cwtl
push
and
jno
push
mov
test
test
lret
pop
jmp
sbb
addr16
push
cmp
and
fisubrl
mov
push
jmp
xor
pop
pop
jecxz
mov
xor
dec
aad
push
adc
ret
mov
sub
inc
xchg
or
or
push
enter
cmp
lds
inc
push
mov
pop
add
xchg
xor
stos
dec
movsb
scas
movsb
jecxz
inc
or
ds
addr16
mov
add
xchg
jg
mov
push
aad
xor
lods
daa
aas
or
mov
cli
xchg
leave
dec
rcrb
sahf
in
inc
loop
std
icebp
jg
mov
xor
xchg
outsl
movsb
mov
leave
cmpl
lods
sub
mov
push
cwtl
or
mov
in
xchg
mov
inc
jb
icebp
cmp
xor
push
fld
ret
fdivl
pop
and
leave
push
pushf
xchg
cmp
push
mov
jecxz
xor
enter
int3
dec
xchg
push
lea
mov
xchg
popf
adc
js
jnp
push
rcll
shl
xchg
jg
scas
icebp
jno
lea
cmp
std
jo
das
ds
lret
out
test
fwait
push
or
and
pop
sbb
test
sub
jbe
fucomip
pop
dec
lods
andl
inc
and
cmp
enter
fisttpl
add
lods
fnstsw
and
mov
mov
xlat
or
fsubs
icebp
mov
jle
or
subb
jne
dec
lcall
jno
sti
xor
and
and
popa
mov
lret
out
pop
xor
lods
gs
jmp
cwtl
cmpsb
insl
daa
xchg
lret
data16
fisubrs
jbe
aam
jne
mov
lods
sbb
sbb
mov
pop
jae
pop
or
test
mov
dec
mov
dec
lds
pop
scas
mov
jno
xor
or
cmp
test
xchg
xor
stos
dec
pop
push
push
lret
inc
push
mov
mov
mull
xor
iret
mov
jno
push
aam
les
and
or
mov
lret
lcall
add
pop
xchg
fiadds
push
repz
jecxz
pop
mov
and
addr16
jmp
adc
pop
addr16
lods
adc
ret
sbb
jns
pusha
in
or
dec
rol
jb
jge
inc
aaa
mov
dec
repz
inc
sbb
xor
std
sbb
jne
cmp
lret
call
jns
into
mov
cmp
je
or
bound
mov
jae
int3
mov
aad
imul
sub
jnp
sahf
adc
and
and
aam
push
adc
loopne
pushf
mov
inc
ss
loope
outsb
stos
push
sbb
mov
pop
lock
jmp
cmp
dec
clc
mov
sti
jne
pop
add
push
pushf
icebp
push
mov
stc
gs
push
cmp
sbb
mov
mov
push
mov
mov
dec
lods
inc
data16
shll
add
cli
rol
jnp
push
mov
sahf
jmp
inc
cmc
xchg
rcrl
jecxz
or
scas
idivb
pop
jns
inc
sbb
lcall
scas
mov
pop
jo
push
cmp
mov
and
add
rolb
outsb
cmpsl
popf
mov
xchg
jp
popa
test
jmp
pushf
ret
mov
mov
adc
pop
gs
mov
sub
push
or
sbb
cmp
mov
popf
test
sbb
jge
hlt
into
mov
and
cwtl
hlt
popf
xchg
sbb
or
push
sub
cld
ror
test
xchg
add
in
lock
loopne
mov
and
nop
mov
aam
sahf
pusha
mov
repz
jmp
jl
icebp
ficomps
ret
adc
cltd
or
pop
jg
movsl
sbbb
out
fcomp
dec
jle
xchg
mov
ret
xchg
sbb
xchg
negl
movb
pop
dec
mov
sbb
inc
push
lldt
pop
mov
dec
loope
rcrl
push
xchg
cld
and
out
cs
xor
mov
jp
dec
pop
mov
or
jge
enter
popa
xchg
adc
add
cmp
mov
mov
lock
mov
dec
cmpb
fdivs
cli
inc
jnp
rorb
sbb
jl
xchg
push
cmp
roll
scas
dec
inc
fsubr
inc
and
mov
dec
cmp
aam
mov
and
testl
out
mov
jp
inc
loope
sahf
cmpb
xor
dec
cmc
fists
sub
repz
sbb
mov
cld
lahf
push
jae
push
aam
pushf
sub
repnz
adc
stos
add
jo
sbb
jns
es
push
sbb
out
lock
jge
sarb
mov
cmp
add
insl
inc
mull
clc
pushf
js
and
call
roll
xorb
outsb
fldt
scas
lods
xchg
insb
loop
loop
adc
and
push
push
rcrb
fwait
xor
push
and
cmpsl
pop
fnstenv
push
jp
push
push
pop
or
jo
sub
call
pop
cmpsl
fcmovnbe
rcrl
lock
sti
inc
aaa
mov
mov
inc
bound
scas
dec
fidivrl
in
pusha
iret
push
fildll
mov
out
inc
movsl
pop
sti
les
sets
call
int
push
sub
or
lods
pop
ljmp
scas
xor
inc
jmp
cwtl
rep
data16
cmp
mov
aas
cli
cmp
pop
shlb
hlt
sahf
enter
inc
aas
or
adc
inc
push
shrb
ret
scas
jp
cmp
xchg
fcompl
pop
repnz
les
out
das
sbb
lret
sub
jle
adc
mov
aam
and
lea
shl
bound
push
ljmp
cmc
pop
into
out
sub
cmp
in
xor
rorl
inc
popf
stos
ret
je
mov
and
adc
shrl
or
cmp
jae
push
push
loop
pop
test
inc
mov
fs
sahf
pusha
stc
das
stos
mov
xchg
movb
shrl
push
sbb
jl
cmp
cmpsl
andb
lods
mov
pop
push
push
inc
push
daa
outsb
clc
jnp
das
sub
sbb
mov
xchg
jns
xchg
inc
hlt
into
aad
call
add
xor
cmc
imul
fists
pop
add
mov
push
pop
in
pop
mull
lods
outsb
cmpsl
scas
adcb
ss
dec
scas
iret
push
addb
push
push
sub
js
rorl
mov
dec
cmp
shll
or
ret
xlat
push
inc
nop
pop
add
fbld
inc
xchg
rcll
sbbb
ret
rorl
call
outsb
sahf
loope
xor
or
mov
js
pusha
in
imul
je
jo
adc
mov
mov
lock
fildl
ds
push
fs
pusha
dec
inc
inc
pop
push
aaa
movsb
lock
arpl
pushf
jnp
roll
scas
nop
test
inc
adc
adc
jle
lret
ljmp
xor
shll
fdivrl
mov
dec
fisubrs
out
nop
inc
dec
xor
dec
test
mov
add
inc
loopne
insb
cmp
lret
repz
pop
outsl
sbb
pop
mov
mov
in
addb
icebp
pop
mov
inc
jnp
mov
dec
outsb
inc
jnp
lret
test
pop
push
push
and
mov
ljmp
jl
mov
xchg
js
insb
enter
sub
or
dec
mov
mov
xor
xchg
mov
mov
test
add
adc
pop
or
in
sahf
xor
dec
xchg
ficompl
push
add
add
dec
adc
adc
sub
test
fistps
xchg
fxch
dec
je
add
xchg
xchg
xor
mov
popa
daa
cmp
pop
jg
inc
dec
inc
xchg
addr16
fadds
aaa
lea
sub
mov
pop
rcr
sbb
shll
leave
and
cli
sbb
gs
pop
loop
pop
pop
popa
pop
or
push
jmp
mov
in
and
testb
pop
xor
mov
push
and
or
adc
cmc
inc
mov
in
insb
aaa
int
or
mov
dec
xchg
jo
js
inc
or
jge
add
ficomps
movsb
inc
xor
lahf
pop
aam
outsb
mov
imul
pxor
xor
xchg
out
es
mov
outsb
popf
mov
sub
test
cmp
outsl
int
fcompl
shlb
shr
mov
xor
int
sbb
pop
pop
movsl
sbb
fildl
lcall
cmc
aad
fdiv
mov
in
or
add
dec
nop
aaa
xchg
sub
mov
mov
mov
cs
inc
ds
mov
add
movsl
ss
push
xlat
rcrb
sub
jnp
fiadds
sbb
push
pusha
popf
push
outsb
xchg
lahf
ret
lods
add
sahf
mov
jmp
ja
fdivrs
inc
mov
outsb
test
lods
jno
out
loopne
repz
inc
jae
mov
fstps
xor
in
pop
xchg
and
add
pop
popl
or
mov
pop
shl
sub
mov
inc
pusha
xchg
movsl
xchg
mov
subl
loope
mov
enter
lods
out
daa
or
je
pop
ss
jle
daa
dec
dec
mov
pop
repz
ficoms
sbb
jmp
js
jle
pop
mov
ret
sub
push
pop
sarl
adc
fisubl
mov
inc
adc
test
dec
push
aaa
shrb
aam
nop
sbb
inc
lds
mov
out
test
inc
pop
ret
xor
mov
xchg
lock
mov
mov
es
mov
push
jmp
in
repnz
jnp
flds
arpl
mov
sahf
push
and
sahf
aaa
jg
xor
add
repnz
inc
push
loop
mov
sbbl
mov
aas
outsw
adc
sub
cli
cmpl
cmp
xor
ja
arpl
fs
inc
sbb
dec
popf
inc
out
inc
pop
pop
mov
mov
mov
mov
andl
insb
ds
xchg
jbe
pop
iret
outsl
scas
dec
outsl
mov
in
or
cwtl
dec
lods
mov
out
outsl
pushf
or
mov
mov
sub
mov
pop
push
lock
adc
dec
mov
mov
lret
fwait
jle
add
add
lcall
add
push
mov
mov
mov
xor
xchg
xor
stos
popl
mov
aas
push
jnp
stos
pop
or
xor
push
jo
and
in
bound
sbb
cmp
xor
jnp
sbb
xor
aam
cmp
xchg
mov
sti
xor
loop
cli
mov
push
pop
fstps
jl
mov
loopne
xchg
out
push
aad
imul
xchg
or
mov
and
mov
or
inc
jbe
out
cltd
xchg
inc
xlat
or
or
xchg
push
cs
jecxz
xchg
adc
mov
adc
jb
xchg
xchg
push
lret
rcll
inc
leave
addr16
lock
or
add
jbe
inc
jg
outsb
stc
aad
icebp
lret
scas
das
xor
xchg
ljmp
push
ret
and
aam
lcall
cmp
gs
sbb
enter
jg
adc
and
and
jbe
jecxz
push
test
mov
idivb
scas
shll
leave
add
sarl
outsl
sbb
je
fbstp
in
add
push
int3
sarl
out
push
cmpsb
adc
imul
jp
sub
cld
sub
test
sub
data16
dec
jle
cli
repnz
out
icebp
arpl
imul
lods
movhps
call
movsb
sbb
inc
pop
je
popf
or
ja
jbe
dec
fdivrs
and
add
rorl
and
enter
leave
adc
mov
inc
pop
dec
add
rorb
movsl
jnp
je
mov
outsl
cltd
enter
xchg
push
push
dec
rolb
inc
dec
hlt
push
arpl
rcll
ret
mov
imul
pop
fadd
int3
mov
loop
aam
cltd
test
jae
inc
jno
adcl
jns
fs
and
loop
in
pop
addr16
xchg
add
jo
leave
dec
outsb
aad
repnz
ret
sahf
ret
sti
sub
lret
fildl
fsub
pop
adc
loop
les
out
movsb
pop
in
jae
sub
fidivrs
push
push
sub
lea
push
out
fiadds
stos
ja
cmpsl
mov
sub
mov
pop
dec
into
sub
xlat
or
cmp
inc
insb
sub
lret
scas
out
cmp
cltd
repz
and
jg
xor
lahf
rolb
inc
mov
in
sub
stos
sbb
clc
jo
xchg
cmp
jae
arpl
jg
inc
pop
dec
into
pop
dec
cmp
mov
inc
outsb
mov
cmpsb
imulb
iret
xlat
sub
data16
inc
fistps
sub
mov
dec
inc
inc
hlt
stos
in
mov
out
add
fiaddl
mov
js
xchg
sub
xchg
adc
cmp
sbb
lcall
es
push
push
int3
mov
jno
outsl
dec
ret
ret
jp
or
inc
mov
pop
scas
bound
lods
jno
xor
sbb
stc
add
and
mov
cli
lret
int3
sub
xor
fwait
and
bound
loope
test
push
adc
jmp
loop
jle
cmp
xchg
xchg
adc
shlb
xorb
mov
scas
mov
stos
clc
call
in
xor
mov
push
mov
inc
or
push
mov
pop
mov
dec
test
inc
in
mov
jno
fucomip
inc
out
cmp
push
scas
add
lcall
cli
sbb
and
mov
jo
cmp
xchg
movsl
test
jecxz
and
jecxz
pop
push
fldt
mov
loop
jmp
lods
jne
mov
jg
pop
outsb
mov
scas
jo
and
dec
add
out
push
fldl
inc
sbb
insl
push
out
repz
cmp
lds
test
push
ljmp
iret
outsl
leave
push
iret
push
icebp
pop
mov
adc
test
sbb
sbb
ds
sbb
ret
add
test
ljmp
lret
pop
mov
rcrl
xor
cmp
lret
aaa
lret
push
and
push
and
repz
sub
hlt
lahf
sbb
test
mov
fnstsw
js
pusha
jl
roll
xchg
scas
fcmovnu
outsl
jns
idiv
js
sub
lahf
add
xor
add
dec
mov
xor
add
daa
iret
stc
rcll
pop
into
fisttps
outsl
popf
sahf
jne
lds
add
hlt
adc
popl
lods
and
jmp
push
dec
adc
out
push
mov
push
pop
xchg
test
pop
mov
bound
pushf
insl
cwtl
xchg
stos
pushf
or
cmpsl
dec
jge
sbb
jns
jge
negb
sbb
aam
adc
testl
xchg
sti
adc
sub
push
wrmsr
add
adc
cmp
xchg
lods
jg
movsl
popa
jle
repnz
gs
sbb
dec
xlat
xor
data16
sub
outsl
jbe
ds
adc
pop
xchg
pop
sub
aas
xor
mov
mov
mov
cmpl
or
push
adc
hlt
jo
out
int3
fst
adc
imul
sub
xor
sub
jmp
test
lds
xor
dec
mov
fs
mov
fnstcw
iret
or
pop
jecxz
popa
sbb
inc
push
pop
sarb
jbe
or
imul
lcall
sub
int
or
adc
iret
test
xchg
mov
scas
and
imul
jae
and
insl
imull
pop
scas
cmp
sbb
cmp
jle
rorl
or
orb
lahf
sub
iret
xor
fucomp
repz
sbb
cmpl
pop
jmp
popf
jecxz
jl
out
jnp
jne
jne
pop
mov
xchg
inc
pusha
sub
popf
aad
scas
hlt
iret
xor
add
xchg
test
stc
addr16
repz
and
mov
mov
fdivrs
sbb
test
dec
jae
add
data16
in
add
movsl
shll
inc
jmp
mov
mov
ficoml
mov
inc
sub
sbb
into
jae
xchg
lea
pop
pop
push
hlt
lret
ss
jl
dec
fnsave
adc
sbb
out
test
imul
xchg
mov
shl
clc
xor
sbb
popl
outsb
loopne,pn
adc
sbb
mov
cli
icebp
mov
loopne
es
jge
sub
xchg
mov
push
stos
dec
outsl
inc
dec
add
sbb
or
mov
push
mov
data16
xor
fldt
and
and
mov
jp
lahf
test
sub
push
fcompl
and
lock
out
cmpb
jno
sbb
jnp
xor
lahf
inc
cmpsb
jl
dec
cmpsl
xor
mov
and
cltd
pushf
jp
maskmovq
idivl
ljmp
or
data16
fnstcw
loop
dec
mov
repz
xchg
inc
mov
mov
out
outsl
fildl
push
ja
inc
inc
test
stos
fsubl
or
mov
pop
popf
or
mov
fisubl
imulb
xchg
outsl
stos
mov
lds
in
xor
icebp
in
stos
call
lock
adc
cltd
iret
in
js
xchg
adc
jbe
push
adc
sti
outsl
lea
pushl
mov
push
fwait
sub
push
xor
into
fsubl
inc
loope
loope
das
fs
cmc
xchg
iret
xor
sbb
insl
inc
adc
fnsave
dec
xchg
jmp
sbb
fldt
inc
cmp
popa
and
imul
stc
cmp
les
or
add
test
lahf
xor
repz
mov
sub
outsb
xor
inc
enter
mov
jle
rcll
push
clc
andl
mov
pop
out
lea
lods
ja
ret
movsb
aaa
xlat
jmp
xchg
out
pusha
xchg
or
mov
mov
inc
xchg
data16
or
mov
xlat
dec
scas
mov
add
into
hlt
xchg
dec
scas
inc
or
cmpsb
and
jbe
mov
pop
enter
dec
mov
push
dec
popf
push
push
aam
jl
add
pushf
les
xchg
cmp
repz
xor
xchg
sub
iret
and
rcl
cmpsl
mov
out
pop
mov
push
xor
mov
push
les
add
xor
movsb
insl
insb
sub
jmp
push
mov
andb
fcoml
out
fistpl
mov
stos
aad
imul
in
mov
js
adc
or
cmp
add
jmp
mov
cmp
jae
push
sahf
mov
out
loopne
inc
in
pop
jmp
popf
mov
cmpsl
or
jnp
cwtl
movsl
pop
push
inc
dec
cwtl
test
cmc
fldenv
lcall
sbb
stc
cmpsb
pop
sub
dec
outsb
or
pushf
sahf
insl
pop
jo
inc
dec
lret
xchg
cmp
sbb
lods
xor
ret
iret
test
dec
insb
in
test
pop
imul
ret
in
orb
jp
scas
or
das
add
push
fsubl
cmpl
ja
fnstsw
dec
dec
pop
inc
loop
pop
pop
jmp
push
add
add
xchg
inc
and
pop
and
iret
daa
mov
xlat
adc
lods
je
push
inc
inc
push
mov
arpl
jl
cld
pop
popl
sbb
je
jb
scas
jmp
imul
mov
je
lock
shrb
or
fs
inc
fidivs
iret
jns
lretw
int
ret
jg
xchg
out
jnp
push
dec
sub
xchg
imul
jae
pop
and
mov
push
pop
adc
push
add
xchg
or
pop
mov
pop
pop
test
divl
loopne
mov
fstl
dec
ljmp
inc
test
arpl
xor
stos
pop
and
out
mov
mov
out
inc
repz
stos
mov
cmpsl
outsb
daa
es
shll
lock
cmp
movmskps
sub
xor
ficompl
xchg
pop
fistl
mov
sub
inc
push
out
imul
xor
add
and
push
inc
mov
es
sbb
mov
rcrb
or
outsb
add
mov
das
lock
dec
cmpsl
inc
movsl
in
pop
sbb
adc
mov
xchg
lds
ret
lock
cmp
xor
adc
int
inc
pop
popf
movhlps
int
cli
jle
mov
jle
fld
inc
adc
inc
or
jns
dec
out
popf
add
fimull
pop
pop
sub
sbb
sub
leave
scas
movl
mov
cmp
inc
je
mov
and
pop
xlat
mov
fcmovnbe
push
mov
inc
adc
inc
sbb
xchg
pop
xchg
push
pusha
inc
and
jp
dec
sti
es
jnp
scas
xchg
jge
scas
xchg
or
mov
dec
seto
fs
flds
mov
cld
fisttps
outsb
fildl
jmp
into
and
into
imul
mov
mov
cltd
sub
loope
mov
stc
jno
mov
je
stc
repz
das
cmp
dec
sbb
pop
fisttps
inc
sub
inc
and
fcoml
movsl
pop
adc
sbb
bound
or
mov
lret
shrb
push
inc
inc
push
cltd
pop
addl
cs
cmp
aad
pop
mov
mov
js
testl
sbb
inc
loop
je
mov
sub
jmp
pop
sub
out
ss
lods
aas
push
lahf
popa
push
shll
aad
out
ds
shr
lcall
fisubs
xchg
pop
cltd
xchg
outsb
pop
mov
push
lods
fwait
xor
fst
mov
sbb
clc
rcrb
fwait
cmp
dec
hlt
lret
insl
or
add
jnp
push
loope
inc
jns
mov
cmpsl
mov
pop
cmp
es
arpl
std
lcall
xlat
push
pop
and
loop
push
push
jb
xchg
cwtl
scas
addr16
scas
mov
sbb
xchg
test
sub
outsb
inc
mov
jp
mov
push
insb
push
dec
xchg
add
mov
lock
mov
repnz
mov
adc
mov
stos
lcall
cmpl
push
pop
lock
js
xchg
jl
movd
jo
xchg
mov
movq
mov
pop
lds
sarb
pop
or
out
xchg
lret
add
mov
pop
sub
lock
or
cli
or
adc
aaa
mov
pop
pop
add
test
mov
inc
jecxz
mov
test
in
mov
push
mov
popa
mov
les
jp
cmp
data16
push
push
xchg
dec
pop
js
cmc
mov
push
mov
ja
fisttpl
add
es
mov
arpl
mov
pop
jne
mov
call
mov
mov
push
pushf
sub
stos
push
mov
iret
fwait
jne
jle
mov
jp
sub
aad
fistpll
bound
stc
rcl
movsb
xchg
push
fwait
xchg
dec
mov
ds
pop
hlt
in
mov
cmp
test
cmp
shl
and
jbe
push
aas
pop
rcrl
push
mov
push
dec
add
xor
stos
mov
loopne
xor
out
das
mov
inc
mov
test
pop
cmpsb
nop
cmp
pushf
insb
test
inc
inc
mov
lret
getsec
jge
adc
pop
fidivrs
popf
shlb
and
mov
pop
insb
xchg
les
cmpsl
mov
jl
fdivrl
into
mov
pop
inc
out
arpl
cli
bswap
dec
xchg
das
mov
scas
mov
rcrl
sub
adcl
sbbl
cmpsb
pop
adc
cbtw
pop
cltd
popa
dec
pop
jge
pmulhuw
test
ja
test
adc
hlt
sahf
into
sbb
pop
ret
ret
dec
or
imul
xchg
gs
in
cmp
push
mov
inc
and
inc
push
je
sbb
test
pop
fimull
push
adc
data16
mov
mov
xchg
stos
loopne
add
and
shrl
mov
fs
xor
xchg
dec
stos
pop
push
shr
add
mov
adc
mov
pop
and
mov
mov
and
inc
xor
dec
stos
xchg
fnsave
jae
mov
mov
ljmp
es
pop
jo
mov
sub
icebp
add
jns
shll
test
inc
fbld
insb
xchg
scas
xchg
movsb
inc
add
test
test
push
addr16
out
add
sub
push
pop
leave
out
jp
sub
jg
mov
jp
repz
clc
lods
lods
insb
rep
fidivrs
push
aam
inc
pop
aaa
dec
lds
adc
clc
lahf
es
adc
aas
sub
call
adc
out
fcmovne
loope
lret
inc
and
push
cwtl
xor
stc
jbe
daa
push
scas
iret
xorb
jo
fnsave
jmp
daa
sbb
and
clc
lret
insl
mov
inc
stos
lods
dec
mov
ja
out
mov
bound
mov
mov
leave
in
cmp
adc
push
sub
jo
sbb
outsl
fadd
idivl
jo
xchg
andb
fs
jns
mov
out
gs
jle
jge
mov
psrad
fdivp
pop
fprem
jnp
xor
bound
gs
cmc
daa
inc
std
aas
adc
dec
xchg
dec
fdivp
adc
sbb
push
aam
mov
xchg
inc
adc
daa
mov
movzwl
push
movsb
cmp
out
jae
adc
cmp
shr
movsl
sarb
lahf
inc
icebp
bound
sub
mov
xlat
roll
out
dec
lcall
jle
inc
lcall
pop
rep
cmp
xor
adc
shrl
addr16
adc
addr16
xchg
mov
mov
xchg
sub
incl
outsb
add
adcl
scas
lret
rcl
and
mov
pop
jbe
and
dec
mov
pop
fmuls
jns
jmp
cli
xchg
mov
pop
sbb
push
xchg
cli
push
mov
test
xor
jg
fbld
popa
and
rcrl
test
adc
jns
lcall
xchg
dec
inc
jae
rclb
movsl
in
ss
push
jle
cltd
xchg
iret
call
cmc
leave
mov
dec
fcoml
cmpsb
dec
and
movsb
fmul
sub
and
sbb
mov
pusha
bound
sub
pop
dec
or
mov
out
repz
adc
push
inc
xchg
push
xor
sbb
dec
pop
hlt
scas
dec
inc
pusha
mov
xor
xlat
lret
adc
push
mov
in
add
loopne
ret
sbb
lods
int
push
fidivrl
xchg
dec
hlt
dec
cmp
adc
pop
lds
leave
xor
lea
xchg
adc
mov
mov
inc
or
sbb
je
inc
out
out
push
or
adc
sub
vpextrw
lds
pop
jae
sub
add
cs
lods
pop
xchg
xchg
mov
xchg
adc
sti
ja
xchg
pop
xor
into
xchg
lock
mov
lret
fwait
inc
push
mov
data16
adc
pushf
sbb
mov
jae
jns
and
pusha
mov
nop
cwtl
mov
inc
cmp
loop
es
jnp
mov
mov
insl
lahf
xor
outsl
les
mov
xchg
ss
shl
push
pop
enter
and
inc
bound
rcll
xor
mov
inc
sub
mov
xchg
lret
sub
jmp
cmp
loope
jge
imul
ds
jne
popf
adc
adc
scas
mov
xor
xchg
or
inc
roll
cld
test
dec
icebp
std
test
mov
xchg
scas
xorl
out
sub
mov
adc
out
xchg
or
cwtl
adc
enter
pop
inc
and
movsl
jne
fdivrl
jmp
and
imul
jl
or
iret
lahf
aas
dec
sahf
sbb
out
psubusb
mov
mov
fmull
sub
inc
fdivl
ds
fwait
or
xor
xchg
push
adc
push
xor
dec
stos
rcll
jno
shl
jae
aad
sub
and
imul
xchg
adc
mov
push
push
pop
jb
xchg
out
in
push
sub
xchg
lret
mov
sbb
xor
loope
adcb
fsts
das
loopne
scas
sahf
xchg
aaa
cltd
push
lock
pop
out
jne
cvtpi2ps
mulb
addb
fstpl
add
repz
les
ret
aaa
inc
xchg
movsb
inc
ljmp
lods
inc
fs
add
dec
loopne
test
aaa
das
ret
sti
cwtl
test
cld
pop
xchg
fsub
pop
jnp
and
enter
iret
fisubl
enter
sub
clc
dec
adcb
pusha
sbb
shl
push
sub
add
mov
in
outsb
pusha
fsubr
call
mov
cmpsl
cmpsl
mov
popf
xorl
sub
shll
mov
sbb
pop
repnz
add
icebp
aas
lds
loopne
jbe
jecxz
insl
and
sarl
dec
jmp
and
mov
add
out
push
pop
setbe
mov
jmp
push
and
mov
xchg
sub
lret
out
mov
outsb
add
mov
mov
pop
jmp
mov
ss
mov
push
dec
andl
aam
lret
cmpsl
sub
pop
fst
sub
jg
enter
push
sub
sbb
sbb
lahf
mov
adc
sbb
mov
mov
add
roll
cmp
test
mov
sbb
adc
xorl
push
loop
fucomip
repz
jl
jo
sbb
dec
leave
or
jne
cmp
mov
add
divl
cs
jo
jle
lods
xor
outsb
xor
mov
mov
lea
or
jnp
js
out
dec
mov
inc
push
pop
pop
dec
mov
das
aas
sbb
mulb
in
stc
bnd
xchg
dec
xor
mov
push
push
inc
mov
lret
push
or
or
mov
fsubs
iret
in
aad
xchg
fisttps
fsub
inc
pop
mov
jne
adc
mov
mov
arpl
push
mov
sub
push
iret
dec
jae
lock
mov
sarb
xor
pop
xor
mov
aaa
fcmovnu
sti
cmp
mov
data16
nop
imul
fidivl
inc
frstor
stc
clc
mov
shl
loope
xor
repz
loope
lea
fwait
std
and
and
sub
gs
cmpb
or
push
adc
ljmp
daa
insb
rcll
pusha
push
ror
out
mov
push
add
mov
xor
sub
and
mov
lahf
movsb
pop
adc
out
adc
adc
xorl
mov
mov
xchg
lcall
inc
mov
pop
jmp
ljmp
out
xor
out
sbb
push
in
outsl
xor
sub
and
sbb
pop
shll
jae
push
mov
push
jne
mov
jmp
jg
pop
pop
mov
add
fildll
and
push
add
cs
les
orb
inc
in
xchg
or
dec
xor
add
rol
cmp
repz
pusha
ret
int
aas
push
cmc
inc
pop
lods
sarb
pop
cmpsl
lret
xchg
add
xchg
ljmp
mov
movsb
imul
ret
or
add
loope
in
addr16
add
arpl
mov
pop
jl
andl
ja
nop
cmp
mov
and
xor
push
push
inc
int3
jo
xchg
xor
cmp
fldenv
fsubrl
fdivrs
scas
add
dec
xchg
pop
jecxz
into
cld
xor
push
xor
push
pushf
lret
bound
mov
ficoml
fs
mov
dec
dec
inc
cwtl
sub
nop
cmp
push
jae
hlt
les
mov
mov
ret
cmp
test
cmp
popf
mov
push
or
lret
rcll
call
dec
gs
inc
jno
loope
stos
inc
mov
scas
sbb
or
sub
sti
adc
add
xorb
add
fistpl
pop
pop
lret
dec
jp
mov
xchg
roll
mov
or
sub
jle
movups
sub
add
push
ja
mov
xchg
jmp
mov
subl
mov
fsubs
xchg
outsb
adc
arpl
jmp
jl
icebp
adc
insl
cltd
mov
sub
push
stc
sbbl
pop
les
xor
das
fsts
xchg
push
iret
inc
inc
mov
jp
push
push
lret
and
jae
int3
jg
xor
cs
xchg
es
or
sbb
sub
aaa
add
scas
movsl
rol
inc
push
dec
mov
pop
pushl
jecxz
or
scas
mov
or
sbb
and
sar
push
mov
cmp
out
enter
pop
dec
cmp
dec
lods
jae
sbbb
icebp
jne
ficoml
or
hlt
dec
xlat
aad
mov
mov
push
sub
push
mov
es
push
arpl
and
add
or
ret
call
test
jg
add
nop
test
add
or
or
mov
add
aaa
les
sub
js
jnp
loopne
add
xchg
or
shll
cli
pop
push
leave
xchg
xchg
push
seto
xchg
mov
bound
scas
jbe
add
add
mov
addr16
int
fstps
cmpsb
jmp
mov
push
dec
movsb
jne
popf
mov
mov
mov
loope
hlt
jge
jmp
dec
shll
cvtpi2ps
push
movsl
mov
in
cli
loopne
sbb
cmp
inc
movsb
cmp
cmp
mov
cmpsb
mov
sar
sub
xchg
dec
fldcw
xor
rol
int3
push
je
xchg
mull
and
adc
repz
hlt
sub
mov
stos
xchg
sub
xor
js
sti
imul
fidivrs
mul
test
xor
inc
sub
xlat
clc
addl
bound
cmp
out
in
sbb
gs
mov
xchg
loop
nop
js
or
imul
sahf
mov
push
sub
iret
arpl
aam
divl
ret
mov
jmp
cmp
or
jo
fwait
add
imul
arpl
xchg
cmp
dec
mov
icebp
mov
sti
jo
fadd
sti
xchg
rcll
jmp
dec
pop
enter
loopne
in
adc
push
jp
and
in
mov
loope
cltd
and
aaa
pop
lret
popl
inc
xor
fwait
pop
ss
push
or
pop
ljmp
pop
push
insb
ficomps
dec
adc
push
pop
les
push
stc
adc
pushf
iret
mov
cmp
mov
inc
add
inc
addb
ljmp
cs
cmc
repnz
loopne
jae
xchg
fstpt
out
inc
pushf
test
xchg
stc
mov
add
icebp
sub
cli
stc
add
sbb
pop
or
mov
loop
inc
and
mov
jnp
stos
orb
mov
mov
cmp
ljmp
pop
popf
bound
cmp
ds
sub
xor
sub
notl
in
in
dec
xchg
xchg
lret
lods
sub
cmp
pop
lret
mov
repz
cli
nop
movsb
fld
sbb
cmp
mov
cwtl
xor
iret
aas
inc
ljmp
cmp
outsl
int3
movsb
mov
insb
jb
popa
cmp
and
in
lea
xlat
repz
xlat
adc
mov
out
push
bndstx
in
bound
push
jnp
cmpsb
fidivl
fnstenv
sbb
fisubrl
cmpsb
pop
aad
das
inc
or
jne
addb
test
js
cmp
hlt
mov
xor
adc
mov
xor
pusha
icebp
sub
dec
andb
lods
jge
movsb
and
addr16
sub
hlt
mov
push
mov
or
mov
aaa
cmp
mov
clc
leave
push
jns
sahf
shlb
movsl
mov
push
xchg
push
cs
xor
arpl
shl
lahf
fldl
inc
dec
or
outsl
ficoml
dec
dec
incl
xchg
iret
and
push
sbb
test
iret
xchg
jno
fwait
push
or
ljmp
mov
xlat
inc
push
xor
shlb
adc
cmp
jb
insl
sbb
popa
call
pop
fidivs
pop
mov
mov
aad
sahf
lret
pop
jno
push
kmovb
mov
outsl
dec
repz
inc
pop
fwait
xor
dec
movsb
outsl
das
insl
cli
and
orl
mov
mov
push
shlb
repz
popa
add
jmp
mov
adc
testl
loop
or
or
repnz
adc
mov
xchg
icebp
mov
jne
mov
and
outsl
inc
pushf
mov
mov
jl
jns
cmp
sbb
sbbl
xchg
icebp
outsl
mov
dec
and
pop
fldcw
sbb
dec
inc
fidivrs
ret
jo
sub
jmp
outsb
push
popf
inc
jnp
xchg
mov
dec
imul
sbb
rcll
inc
in
fidivs
xor
xchg
fucomi
push
push
popf
scas
scas
jo
pop
int3
leave
xor
orb
dec
mov
sahf
dec
xchg
cmpsl
rol
xchg
cld
adc
adc
push
adcl
inc
in
xchg
xchg
jns
adc
xchg
cmpl
push
loope
jo
sbb
jp
outsb
cwtl
scas
mov
stc
mov
mov
inc
mov
je
adc
repz
ljmp
les
scas
dec
inc
pop
loope
jno
mov
int
out
xchg
cmp
stos
dec
push
jnp
sahf
mov
jg
cld
lea
cmp
inc
or
dec
mov
dec
pop
pushf
lods
repnz
gs
jnp
movsb
mov
jo
mov
and
pop
sbb
sti
mov
xor
pandn
pop
or
xor
call
mov
nop
jle
imul
stc
outsl
push
pop
stos
mov
das
cmova
sti
jmp
inc
fisubrl
mov
dec
rclb
rol
mov
loope
scas
dec
int3
lea
fidivs
pop
jbe
sub
and
jns
dec
sbb
jle
lret
jg
scas
xor
jmp
loop
filds
fcoms
sub
push
testb
jmp
adc
xchg
mov
icebp
xor
and
inc
movsw
daa
inc
pusha
sub
mov
pop
dec
loop
arpl
enter
rol
nop
aaa
lea
sahf
adcl
push
mov
aaa
lds
cmp
adc
cmp
jecxz
add
add
fstps
popf
cmp
cmpl
xchg
push
pop
je
sbb
fstl
in
dec
aas
ja
mov
int
or
sbb
cld
aas
fistpl
mov
push
vcvtph2ps
cmc
cltd
fdivr
cmp
shlb
push
icebp
fimuls
add
xchg
and
xchg
insb
cmp
or
test
aad
or
xor
xor
inc
fucomp
pusha
imul
sarl
dec
repnz
jbe
cltd
test
mov
dec
add
and
stc
aad
push
movsb
mov
pop
jle
leave
sbb
dec
sub
fsubr
or
dec
or
jo
dec
push
test
fldt
mov
jle
push
xchg
xor
mul
ljmp
inc
push
outsb
push
xchg
ja
mov
hlt
lahf
or
xchg
xor
loop
inc
adc
cs
push
jmp
jecxz
cmp
and
mov
mov
pop
es
jnp
cmp
mov
push
cli
scas
inc
push
cwtl
movsl
mov
mov
xchg
outsb
xor
jbe
fists
pusha
jle
scas
xor
and
into
jb
clc
loope
sub
mov
adc
int3
int
ret
mov
mov
divl
inc
leave
out
pop
sub
mull
insl
xchg
test
push
xor
mov
inc
or
lea
xchg
lods
inc
movl
mov
shrb
idivl
lock
movsl
cwtl
mov
sbb
sbb
jg
arpl
add
mov
mov
mov
lret
jmp
cs
inc
insb
adc
mov
jp
btc
adc
out
mov
mov
or
xchg
cs
cmpsl
clc
mov
repnz
pop
sbb
pop
mov
popa
nop
push
mov
xor
lods
lret
cmpsl
cmpb
fdivrp
test
mov
out
imul
sbb
imul
call
clc
mov
dec
repz
cltd
imul
jo
daa
xlat
scas
aad
jmp
xchg
repz
fidivs
fwait
pop
cwtl
xchg
outsb
cmpsl
call
push
mov
push
enter
js
mov
inc
mov
aas
lods
dec
xchg
fs
xor
adc
inc
sbb
jmp
sbb
adc
sbb
in
jo
jns
sbb
push
loope
mov
stos
sahf
and
jno
cld
in
shl
push
stc
roll
push
cs
sub
imul
push
dec
pop
das
push
push
fs
lods
xchg
jmp
pop
int
out
sbbb
pop
mov
adcb
test
mov
sub
cmp
jae
dec
jp
enter
es
aam
aam
sarl
mov
gs
pop
mov
add
enter
sub
cwtl
inc
cmp
stos
dec
lods
aas
jle
dec
outsl
in
add
inc
sahf
pushf
cmp
rorl
ret
mov
pop
lods
inc
imul
je
emms
push
imul
ds
pop
add
in
dec
pop
dec
loopne
pop
mov
mov
sbb
repz
aad
add
loop
sti
cltd
lea
imul
adc
pop
fmull
xor
xor
mov
sbb
sbb
stos
jge
cmp
jp
aas
adc
out
adc
out
fisubs
xchg
dec
movsl
lock
loope
ljmp
int
rcrb
jecxz
or
ljmp
mov
out
arpl
cwtl
fwait
mov
xchg
insb
push
les
mov
mov
mov
aas
and
call
fxch
cli
das
stc
sbb
test
pop
movsb
sti
jns
faddl
insl
pushf
dec
and
or
bound
or
mov
sub
pushf
jae
xchg
fldt
test
sub
push
dec
out
lcall
int
cmpsb
cmp
lods
dec
leave
xchg
adc
imul
bound
ss
and
test
adc
popa
fiadds
adc
insb
xor
dec
es
ss
and
lret
adc
cmp
mov
add
lahf
sarb
outsl
das
mov
sub
sbb
sbb
ret
ja
out
decb
sti
inc
enter
xlat
call
roll
push
sub
xlat
fildl
cmp
pushf
cs
fmulp
leave
imul
push
in
and
jbe
ja
and
xchg
sub
and
adc
pop
add
test
fwait
imul
push
push
and
dec
or
and
in
jecxz
pop
cmp
js
mov
fdivrs
mov
fisttpll
xchg
cmpl
xchg
jp
fsubp
icebp
mov
xor
add
xchg
into
inc
lret
jecxz
jae
or
lea
rorb
fwait
push
dec
or
jmp
cwtl
jg
or
lods
test
mov
jb
xchg
aas
add
sti
sub
mov
ja
clc
xor
icebp
xor
xchg
push
sbbb
in
js
push
loop
mov
ljmp
jae
pop
cld
and
and
loopne
mov
or
stc
mov
test
mov
jns
enter
add
cmp
dec
mov
test
rclb
mov
and
mov
push
shr
loope
xchg
jge
clc
xor
inc
mov
or
stos
dec
fnstenv
jecxz
or
and
ja
mov
scas
cmp
nop
inc
adc
mov
pop
push
jno
dec
add
imul
and
test
lock
jmp
inc
and
mov
pop
jb
call
ljmp
or
xor
xchg
repnz
push
lods
sbb
sbb
cwtl
pop
fiadds
push
mov
push
cli
jmp
or
das
mov
data16
inc
outsl
xchg
ss
fildll
ljmp
ret
push
sub
repnz
in
test
xchg
mov
jmp
out
ret
sub
dec
jl
dec
andl
inc
in
jne
and
lods
and
popf
fimuls
ds
jo
cs
jo
pop
or
int
xchg
mov
sub
outsl
cwtl
xchg
mov
xor
xchg
xchg
pop
adc
pop
imul
subb
mov
lock
xchg
ret
fisubrl
jae
add
sbb
or
push
xor
gs
lcall
aam
lock
lret
je
jbe
jle
add
lahf
and
daa
cltd
sbb
or
sbb
lock
call
vmread
mov
aaa
dec
and
sub
adc
ret
dec
roll
xor
int3
incb
mov
notl
adc
test
js
or
je
inc
adc
test
shlb
jne
ds
jae
dec
test
scas
roll
hlt
fmuls
dec
aaa
aam
or
pop
inc
push
pop
arpl
mov
cltd
jecxz
add
adc
jge
mov
sub
inc
sub
dec
ss
js
pop
sub
sahf
cmpsb
fidivs
lods
jmp
or
lret
int3
outsl
xor
ror
cmp
sub
ret
stc
pop
fistl
fnstsw
sub
mov
sahf
shrl
movsl
bound
add
dec
mov
mov
shrb
push
xchg
jno
jo
sub
inc
and
imul
push
mov
pop
ljmp
xor
mov
dec
add
push
lahf
sub
and
iret
mov
sub
xchg
fistpll
push
mov
pop
mov
and
or
stos
jbe
cmp
mov
mov
test
add
nop
mov
mov
jo
lret
jns
mov
out
sbb
ja
std
fwait
xchg
push
add
dec
lcall
sub
insl
pop
call
add
push
sbb
jmp
jns
mov
das
or
aaa
pop
fisttpll
int
inc
push
inc
sarl
ss
add
inc
mov
ret
test
sbbb
xor
jo
rcl
in
imul
pop
or
adc
or
xor
add
or
lret
test
std
and
xchg
jbe
int
loop
adc
xchg
aas
mov
mov
inc
mov
nop
mov
mov
pushf
jnp
jecxz
jo
pop
push
call
ja
pop
iret
xchg
and
xor
pop
cmpsl
xor
bound
gs
xor
adc
insb
in
lret
or
mov
xchg
push
inc
frstor
mov
jmp
mov
ds
inc
jmp
and
dec
mov
mov
dec
cli
or
mov
mov
mov
sbb
mov
rolb
or
jns
aaa
gs
imul
movl
inc
or
or
popa
out
dec
or
aaa
jge
jmp
dec
cmp
add
or
mov
mov
pop
cli
lods
or
sbb
xor
cmp
jmp
jecxz
push
roll
rcrl
sub
mov
sarl
out
scas
jno
adcb
pushf
loope
filds
sub
cwtl
jecxz
or
mov
ljmp
jl
aam
in
push
jmp
les
pop
ret
adc
mov
cwtl
or
cld
jg
insl
addr16
int3
aam
dec
pop
push
pop
fcompl
adc
pop
filds
sub
pslld
mov
pop
dec
out
push
mov
dec
cmc
outsl
dec
mov
push
mov
dec
lods
shrb
push
push
aad
out
call
js
jo
mov
or
mov
dec
pop
and
sahf
lods
adc
pop
cmp
cmp
push
fwait
jae
test
int
pop
pop
out
inc
inc
mov
pop
pop
aaa
test
mov
or
mov
hlt
mov
pop
inc
jp
adc
xchg
gs
xchg
movsb
push
push
cmc
xchg
xchg
mov
shl
mov
adc
shr
ja
mov
xchg
cmc
inc
pop
scas
ja
bound
push
insl
imul
out
xchg
stos
and
fndisi(8087
dec
je
rcrl
arpl
xchg
pop
push
xor
repz
out
ja
pop
push
and
jl
aas
lea
jno
ret
cmp
xchg
xchg
int3
fisubrs
or
sti
sub
imul
jge
mov
jns
add
sbb
xchg
lret
push
dec
imulb
jg
data16
sbb
out
jecxz
lods
push
int3
mov
mov
fiaddl
or
jb
add
jmp
mov
xor
xor
mov
or
mov
les
push
data16
aad
add
in
loope
std
jp
cmp
stos
std
imul
data16
in
lret
and
imul
ret
fwait
lea
shll
mov
insb
pop
bound
xchg
int3
pusha
cmp
push
pop
addr16
fcomps
xor
push
in
in
fisubrs
stos
xchg
and
xlat
add
or
dec
loop
mov
das
or
insb
ja
and
mov
decl
mov
bound
loopne
test
mov
or
scas
repz
andb
in
mov
cmp
test
xchg
or
push
and
fwait
mov
push
fcoms
and
es
adc
mov
test
repz
jmp
js
push
popa
sub
shll
imul
adc
inc
pop
es
scas
xor
lcall
xlat
adc
cli
das
sbb
mov
xchg
mov
mov
jno
loop
imul
repz
jecxz
incb
out
push
xlat
mov
stos
mov
or
lods
xor
and
sub
or
cli
add
movsl
test
repz
clc
pop
adc
inc
pop
stc
fldenv
mov
mov
and
movd
jb
dec
fsubrs
push
pop
cld
addr16
ljmp
es
fs
add
cmp
add
lea
push
mov
pusha
addr16
loope
xchg
lret
ss
repnz
mov
mov
push
leave
push
add
inc
mov
inc
cmp
xchg
insl
sbb
pop
adc
jecxz
fdivr
sub
arpl
push
sarb
push
pop
push
out
push
mov
jle
outsl
cmpsb
mov
clc
hlt
mov
mov
mov
sbb
adc
movsb
push
je
xchg
hlt
loopne
xchg
mov
test
cwtl
dec
mov
mov
push
jle
jge
jmp
movsl
mov
xor
js
jbe
cmp
pop
jae
fiaddl
add
push
ficoms
aam
xlat
gs
call
inc
mov
push
lds
push
jbe
das
mov
and
inc
insl
mov
pop
adc
xor
jl
fdivrs
pop
mov
adc
add
mov
xor
adc
enter
cmp
xlat
divl
std
aas
push
jge
mov
lret
movsl
enter
dec
lahf
sahf
stc
mov
add
mov
xor
jl
cmpsl
and
mov
cmpl
dec
test
daa
adc
mov
ret
orl
mov
add
outsb
mov
mov
jo
jg
pop
cs
loop
sbb
mov
sbbl
jae
icebp
clc
daa
test
lahf
das
mov
outsb
mov
dec
mov
mov
fs
lret
fcoml
test
out
loopne
loopne
imul
xchg
jnp
sub
iret
cmp
or
jp
push
cmp
aaa
xchg
push
mov
and
and
ja
ret
push
sub
cmpb
shrl
mov
int3
push
aam
cmpsb
pop
mov
lds
dec
pop
and
setno
cltd
nop
rcrl
xorl
xor
imul
mov
cmp
mov
das
cmpsw
add
push
lcall
mov
ret
sbb
cmc
outsl
inc
not
sbb
jo
push
imul
add
insb
jae
push
cli
fldl
dec
xchg
icebp
jae
ffree
pop
jne
cwtl
jb
or
xchg
or
imul
pop
ja
scas
jns
mov
pushf
ds
inc
mov
popf
jle
sbb
jo,pn
mov
cwtl
sar
inc
mov
sbb
inc
aam
repz
push
and
loop
in
mov
test
cmp
sahf
fcmovnu
dec
test
push
push
xor
cltd
jno
sahf
sub
cli
sbb
lock
adc
idiv
outsl
jb
icebp
jmp
aad
jns
sub
mov
out
shlb
adc
ret
push
jg
xchg
out
cwtl
dec
push
das
cli
or
mov
lahf
xchg
dec
or
push
adc
movsl
fistl
dec
cli
lods
sbb
cwtl
xchg
mov
sub
imul
add
movsl
shr
add
unpcklps
fcoml
cmc
fldt
jb
scas
cmc
mov
in
jp
and
inc
xchg
xchg
xchg
sub
test
shl
pop
sbb
xchg
ljmp
leave
sbbl
jp
sub
in
mov
add
pop
fldt
pop
nop
mov
pop
jp
sub
push
dec
insl
repz
fcom
notl
std
mov
fwait
cmpsl
das
xor
inc
cmp
shlb
orl
jge
es
xor
jmp
xor
mov
in
outsl
mov
jl
loopne
dec
and
rclb
mov
test
xor
fcomip
jmp
stos
popa
adc
and
lahf
shl
adcb
jg
daa
pop
lock
push
sahf
add
addr16
pop
pop
orps
call
mov
xchg
push
sti
or
ud0
jle
pop
fistl
sbb
and
lock
ss
mov
int
ja
mov
mov
push
outsl
repnz
lahf
inc
adc
push
rorl
cld
and
icebp
insl
lea
sub
fwait
gs
outsb
dec
movsl
inc
jb
into
in
push
inc
xor
rcl
pop
xor
and
mov
ret
sbb
add
loopne
adc
mov
xor
ret
xchg
xor
lods
inc
and
out
rolb
in
lods
jne
mov
out
push
cld
sbb
push
pop
cmc
push
dec
adc
push
adc
pop
add
cmp
mov
jecxz
add
jmp
mov
mov
xchg
jge
in
sub
sbb
andl
inc
mov
repz
push
add
iret
xchg
pushf
add
sub
cmp
mov
jae
das
cmpsb
mov
cmp
imul
cmpsl
push
clc
adc
cmc
jmp
or
or
and
push
add
pop
repnz
xchg
out
pop
push
imul
fbld
in
push
sub
jl
xor
dec
fidivrl
jl
ret
lds
loop
mov
cmpsl
stc
out
stos
frstor
xchg
mov
inc
adc
cmp
leave
cmp
xchg
xor
fisttpll
mov
jne
addb
es
sbb
scas
fmull
cltd
jo
loopne
mov
add
enter
jbe
jne
inc
cld
std
inc
fxch
xchg
out
loope
or
jo
int
jnp
dec
cmp
and
ds
mov
shll
pop
test
and
xchg
and
sbb
js
in
icebp
sbb
cmpsl
mov
xchg
cmp
inc
test
call
add
mov
mov
xchg
repz
jo
sbb
gs
xor
das
test
outsl
mov
push
mov
xchg
aaa
fildll
cld
iret
add
fisubrl
pop
mov
push
adc
insl
rcll
sbb
xchg
inc
fidivrs
jb
push
xchg
add
or
mov
rcrb
add
jge
and
push
faddl
dec
cmp
cmpsb
cmp
add
in
cmp
and
jbe
dec
push
mov
sbb
sub
push
adc
pop
cli
ja
push
test
push
inc
inc
imul
aad
push
imul
mov
adc
mov
push
out
mov
sbb
sub
xchg
insl
dec
out
xchg
xchg
jne
fstps
mov
pop
imul
sbb
lea
fmul
shll
cs
mov
or
dec
push
and
xchg
lock
in
loopne
movsl
mov
mov
pop
sbb
inc
pop
fcmovnbe
pop
push
es
popf
dec
cmc
and
pop
addr16
pop
adc
push
insb
lcall
push
push
out
pop
jno
add
mov
jle
out
inc
adc
out
cmp
and
adc
jne
jg
lret
lret
ret
cmpsl
jne
xchg
sub
cli
cli
shlb
xor
lahf
loopne
cmp
insl
test
or
out
inc
xor
or
or
je
mov
ds
lods
lds
outsb
mov
mov
rcll
je
pop
dec
jge
xor
add
push
add
and
fildl
adc
pop
adc
inc
out
mov
xchg
int3
xor
sub
rcrl
cmp
mov
xor
mov
pusha
push
push
into
roll
pop
fsts
adc
iret
leave
call
pop
dec
or
push
jecxz
addr16
dec
test
xor
xor
fidivrs
cmpsl
aad
xor
imul
imul
and
cmp
jp
push
jnp
bound
sbb
dec
mov
in
mov
hlt
mov
mov
inc
lea
pop
sahf
or
or
sbb
or
mov
sub
push
out
jg
add
mov
inc
test
adc
xchg
jle
xchg
sti
jmp
push
hlt
push
sbb
xor
outsl
lret
sub
dec
cld
xchg
out
test
jge
stc
repnz
gs
das
pop
xchg
cs
rcl
mov
adcb
xlat
js
sbb
push
je
or
mov
rolb
or
sub
cmp
dec
decb
addr16
dec
pop
pop
sub
sar
out
fld1
sub
push
push
mov
pusha
das
scas
xor
sbb
lcall
test
loope
mov
mov
out
sbb
add
in
sbb
xor
push
lods
adc
sbb
lret
icebp
push
inc
lods
sbb
movsl
test
mov
mov
fidivrs
cmp
jae
in
dec
pop
ret
test
xchg
adc
test
div
cmp
daa
dec
mov
inc
jecxz
jb
lds
scas
mov
out
xchg
mov
jl
out
pop
cwtl
jns
iret
push
loope
dec
adc
iret
xchg
inc
in
cwtl
andl
insl
orb
loopne
cs
add
mov
clc
sub
imul
insl
int3
mov
or
pop
pop
lods
jl
cld
mov
leave
add
mov
pop
outsl
repz
mov
loopne
iret
push
leave
in
dec
stos
aaa
lahf
or
push
push
cli
mov
fs
lcall
mov
or
lods
mov
inc
jp
or
xchg
mov
in
xchg
cwtl
push
loop
iret
mov
lcall
mov
or
std
loopne
jp
movsl
in
lock
dec
mov
enter
movsb
inc
push
inc
mulb
xlat
inc
push
fidivs
jno,pn
ja
mov
xor
inc
std
add
adc
lds
fadd
cmp
das
lahf
xlat
dec
push
inc
sbb
stos
mov
push
andl
cmp
lods
xchg
mov
push
and
cmp
mov
cmp
lods
push
push
or
add
mov
xchg
mov
scas
jns
dec
push
xor
in
icebp
cmpsl
je
test
faddl
xor
shll
mov
mov
test
jle
mov
jb
int
jecxz
rclb
push
push
imul
cmp
mov
adc
inc
xor
push
test
cli
dec
add
push
movsl
jge
xchg
xor
les
cmp
mov
mov
or
mov
mov
test
popa
data16
fistpll
jg
and
and
in
bnd
and
push
mov
and
jmp
inc
xchg
dec
mov
and
stc
xchg
nop
or
fcoml
int
into
sub
dec
shr
ret
mov
jle
call
test
cmpsb
cld
mov
ret
and
rorb
shlb
stos
mov
enter
cmp
jne
movsl
into
out
cmp
jg
pop
popf
fs
rolb
dec
ret
cld
cld
stc
test
xlat
lock
insb
sub
jl
ds
and
adc
insl
mov
pop
cs
inc
shll
stc
sub
sbb
lret
mov
cmovg
mov
pop
inc
ds
jne
sub
cmp
decl
cmpsb
into
stos
mov
imul
sub
fsubrp
mov
jo
mov
in
mov
lds
lods
fcmovbe
movsb
cmp
insl
xor
push
mulb
xchg
pop
insb
lods
or
mov
jns
sbb
adc
pop
test
movd
push
mov
dec
inc
sarl
aas
mov
mov
lret
inc
jmp
mov
push
xor
fisubrl
out
jp
std
push
or
jg
stos
jo
xchg
mov
clc
xor
push
xchg
xor
rorl
repz
lods
or
out
enter
jecxz
jge
popf
dec
jmp
js
scas
pusha
out
out
push
sahf
ret
xor
popf
mov
add
int3
jmp
mov
int
add
xchg
dec
lods
or
mov
and
mov
bound
xchg
out
pop
rcrl
test
data16
out
addb
int3
stc
fstpt
or
inc
lret
push
or
adc
call
cltd
rcll
pop
dec
sub
lea
sub
jbe
pusha
fs
test
adc
dec
push
add
pop
pop
jg
pop
int
loope
cmp
test
and
xlat
cwtl
addr16
insb
andl
out
dec
pop
push
in
xor
pop
mov
cmp
sahf
addr16
mov
xor
mov
ficomps
cmpsl
xor
and
inc
enter
xor
cmp
gs
ja
and
push
pop
in
outsb
test
loopne
xor
repnz
xor
loopne
pop
dec
mov
jns
inc
pop
sahf
xor
jg
jb
mov
dec
das
push
js
in
and
push
mov
cmp
fs
lcall
sub
sbb
jp
pop
pop
pop
repnz
je
hlt
adc
mov
mov
shl
sahf
mov
and
push
nop
scas
dec
xchg
push
add
dec
lret
icebp
je
push
aas
push
data16
popf
xchg
sub
cmpsb
pusha
sbb
je
adc
ss
loopne
push
push
nop
lahf
mov
test
pop
shll
dec
mov
sub
cld
pop
mov
or
dec
cmpsb
aaa
jmp
aaa
dec
pop
sbb
cmp
ljmp
sbbl
aas
or
jno
movsl
add
inc
testl
dec
out
sub
or
cmp
aad
imul
dec
push
rclb
pop
add
bound
xchg
pop
push
je
inc
pop
pop
iret
bswap
out
loopne
xchg
jnp
enter
pop
sbbb
xchg
mov
sub
aam
inc
sub
mov
jne
mov
mov
cmc
neg
outsb
sub
mov
xor
daa
aas
leave
push
jp
stos
push
je
sub
pop
or
mov
push
arpl
aad
iret
repz
std
push
out
out
lods
es
outsl
push
int3
in
xchg
inc
push
and
jle
mov
adc
iret
jno
cmp
xchg
xchg
inc
adc
fstpl
xchg
lea
mov
xchg
mov
and
jnp
add
mov
inc
rclb
xchg
xor
cmp
test
jnp
stos
and
xchg
xchg
mull
mov
cmp
adc
ja
imul
or
adc
sbb
mov
cwtl
fadds
cltd
loop
ret
or
sub
adc
mov
jge
lea
inc
outsb
cwtl
sbb
dec
cmp
es
in
mov
outsb
ret
xchg
popf
mov
push
cli
cwtl
adc
jne
fnstsw
push
loope
aas
aad
pop
inc
dec
ficomps
mov
rcl
inc
inc
mov
push
push
or
mov
xor
std
sub
push
iret
jecxz
in
lods
add
out
imul
pop
or
sbb
cltd
cmp
scas
pusha
cli
jb
ror
xchg
and
notl
push
fstl
leave
rorb
out
xchg
std
out
push
sbb
popf
or
cmpsb
xchg
fwait
stos
ret
jnp
stos
xchg
jo
push
repz
push
inc
or
decb
insl
push
adc
mov
mov
scas
xchg
push
rclb
add
cmp
repnz
ds
mov
fwait
mov
loop
cmp
fmuls
pop
fimull
adc
insb
jmp
cli
insl
faddp
stc
lds
xchg
adc
jecxz
into
out
lods
inc
in
mov
aam
cmp
movsl
fisubl
and
pop
ret
ljmp
inc
jae
adc
lret
mov
mov
fldlg2
jmp
pop
es
push
sbb
jmp
scas
mov
mov
lds
lret
cmp
mov
pop
into
adc
sti
loopne
enter
enter
mov
insb
dec
subl
push
xchg
cld
mov
daa
rcrl
push
leave
sahf
and
hlt
imul
sub
sbb
mov
push
test
xchg
sbb
push
cmp
sub
sub
rorb
movsb
adc
in
addr16
aam
fwait
cmp
cltd
dec
jmp
mov
push
or
push
insl
ljmp
cltd
or
inc
aas
sub
iret
cmp
iret
sahf
push
mov
dec
icebp
sbb
jo
push
dec
std
nop
insl
popa
and
negb
jg
nop
inc
cmp
xchg
loop
cltd
aam
sahf
popf
sbb
pop
inc
movsl
inc
int
out
and
loop
daa
stos
dec
or
and
push
call
or
pop
sbb
int
sub
test
xor
testb
pslld
mov
cmp
push
int3
inc
lahf
inc
test
inc
lret
sub
add
sbb
aad
jle
sub
fcmovnbe
fcoms
cmc
mov
push
aam
cltd
cmp
shrb
sub
cmp
xor
outsb
pop
sub
xor
lea
and
mov
or
push
fwait
pop
in
gs
leave
xchg
sbb
or
pop
cmp
inc
ror
cli
aas
sbb
popf
cmpsb
sbb
subl
andl
movsb
ss
cmpsb
out
and
jg
addr16
sbb
cmp
mov
or
mov
cmp
push
sub
lcall
and
out
ret
pop
mov
xor
aaa
jl
inc
in
mov
xorb
jmp
or
cli
jbe
outsb
test
xchg
push
adc
push
lcall
xor
xlat
push
stc
lahf
inc
mov
sub
mov
xor
sub
jb
cmpsb
daa
mov
xchg
xor
sbb
push
pop
add
loop
or
pcmpeqd
push
test
in
sbb
popa
push
nop
and
stc
cld
cltd
sub
inc
mov
ret
out
inc
xchg
mov
xchg
frstor
push
mov
inc
cmp
popa
and
xchg
xchg
dec
xor
out
jmp
test
shl
scas
add
add
push
add
pop
sbb
cmp
hlt
leave
stos
push
pop
mov
pop
mov
movsl
and
faddl
xor
je
xchg
roll
fldl
xchg
sub
or
lahf
in
xor
jge
neg
mov
and
cmp
push
mov
icebp
sbb
inc
fimuls
in
lret
scas
adcl
xor
xor
mov
dec
add
inc
lret
jecxz
sub
xor
pushf
iret
push
lock
mov
stc
out
mov
lds
movsl
insb
test
mov
sub
cltd
pop
jno
aam
addb
scas
mov
xchg
jns
xor
jge
popa
push
sbb
ret
lods
jge
dec
push
add
adc
mov
mov
xchg
daa
insb
lea
cmp
push
mov
fdiv
pushf
aad
add
sub
lock
xor
mov
cltd
insl
jae
dec
addr16
cmp
mov
xchg
xor
fdivrs
shrb
fsubs
sbb
ljmp
lock
jno
mov
inc
add
sbb
xchg
cmp
jo
pop
xor
xchg
push
pop
cmc
andb
or
sbb
incl
mov
adc
imull
icebp
inc
es
or
sarl
or
sahf
shll
jae
lock
adc
or
cmpsl
mov
test
jns
xchg
stos
sahf
jae
sbb
mov
and
jle
mov
cltd
mov
popa
ljmp
pop
xchg
sub
jne
test
std
xor
push
ret
ret
dec
lods
mov
push
test
jl
repz
inc
ss
xchg
cmpsb
xlat
frstor
stos
fadds
pushf
loope
fcmovu
xor
push
mov
and
mov
and
in
icebp
sub
and
sbb
cmp
and
lahf
fwait
movsb
iret
push
push
mov
in
or
and
mov
movsb
stos
out
or
sbb
cmp
in
xor
sbb
daa
lds
cpuid
add
shl
push
mov
das
sti
push
rorb
cmp
lahf
scas
push
addb
repz
jp
icebp
xchg
out
cmp
mov
ss
sub
or
bound
out
push
fcompl
pushf
lahf
test
out
aaa
frstor
mov
pop
fcoms
aas
push
dec
int
ja
jge
fwait
bound
pop
mov
arpl
xor
daa
or
inc
fisttpl
inc
adc
inc
dec
sub
ud1
cmc
fidivl
xor
mov
push
fnstcw
rorl
push
jecxz
jae
std
pop
jle
ja
out
sbb
sarb
dec
je
pop
lods
push
sub
out
push
in
test
push
int
sbbb
mov
std
aad
add
jg
add
cli
cmpsl
movsb
lahf
cmp
mov
out
sbb
cmp
mov
fwait
lock
and
xchg
scas
xchg
xor
add
mov
lret
sub
popf
sbb
sbb
rep
in
sbb
jg
and
test
mov
enter
inc
out
mov
xchg
cs
mov
cmpsb
push
dec
jecxz
mov
mov
push
sbb
push
push
cmp
insl
orl
jns
test
and
cmpb
gs
loop
jnp
sbb
push
sub
pusha
lea
dec
sbb
add
das
andl
add
rcr
mov
scas
mov
push
jecxz
push
rcll
xchg
les
pop
inc
xchg
insb
leave
ds
cmp
adc
call
mov
push
test
test
stos
mov
xchg
push
in
outsb
icebp
mov
inc
add
mov
mov
fstpl
adc
dec
mov
sbb
nop
mov
push
add
mov
or
dec
pop
rdtsc
push
fistl
sbb
jnp
jbe
stc
cmp
or
sub
imul
mov
neg
dec
mov
cmc
xor
insl
lcall
or
push
jbe
mov
pushf
xchg
xchg
sahf
dec
mov
ss
cmp
insl
xchg
fst
adc
adc
loopne
into
cld
pop
sarb
mov
sar
mov
orl
jns
cmpsb
sub
xchg
xor
jg
sub
pop
sbb
jnp
in
pusha
call
cs
test
pop
rclb
and
mov
mov
pop
mov
enter
inc
loop
bound
adc
dec
movsb
cmp
loopne
cmp
jo
cmp
dec
aam
cmp
mov
add
jns
and
loop
pop
sbb
jle
scas
lret
mov
test
jecxz
sbb
test
movsb
imul
mov
pop
sbb
pop
mov
js
push
push
dec
pusha
xchg
jmp
adc
insb
das
dec
jp
data16
out
push
mov
mov
test
jmp
mov
or
loope
ret
iret
out
push
push
sbb
addr16
jnp
dec
insl
shrl
mov
rcr
cmp
adc
push
or
adc
out
daa
popa
mov
cli
ficoms
xor
imul
xor
inc
xchg
jne
pop
push
pushf
mov
dec
adc
iret
mov
mov
cs
movd
inc
mov
jge
mov
jl
push
fiadds
add
mov
jne
pop
xchg
scas
ds
adc
and
mov
and
mov
dec
leave
hlt
test
ficomps
ja
out
fimuls
int
cmpb
outsl
sub
or
leave
in
stc
ret
sbb
dec
js
mov
mov
imul
arpl
cmp
repz
in
mov
hlt
dec
inc
fildl
jb
sar
dec
movsb
mov
adc
aas
or
cwtl
fstpt
push
fwait
gs
neg
mull
sbb
cmc
jno
sbb
push
lds
lret
test
int3
jl
or
aam
lcall
xor
pop
insb
xchg
stos
push
adcb
stos
in
and
xor
xor
inc
fwait
test
popf
call
out
xchg
jno
movsl
fbld
mov
xchg
dec
out
sbb
inc
jge
sub
sbb
cmc
lret
stos
fwait
sbb
int
stc
int
and
stos
or
ret
in
xchg
shll
or
xchg
jmp
adc
push
neg
stos
add
stos
add
stc
mov
cmp
sub
xchg
and
pop
stos
inc
repz
insl
out
push
pop
push
mov
mov
fsubrs
xchg
jno
outsl
mov
jge
or
dec
pop
mov
insb
repnz
ror
pop
arpl
lds
loope
adc
movl
mov
jne
add
dec
mov
mov
lcall
inc
mov
jle
add
out
loop
int
mov
fisubl
cwtl
and
dec
xor
rcll
sti
mov
clc
addr16
sbb
bound
push
mov
cld
scas
jp
std
sar
push
sub
pop
ljmp
sbb
pop
mov
enter
xchg
adc
fists
fcoml
lds
adc
fsubs
in
js
fsubs
lahf
sbb
pop
ds
jecxz
push
mov
add
inc
add
in
mov
or
aad
divb
fcomps
jb
push
loopne
test
pop
jmp
mov
jmp
loop
int3
jno
lock
xchg
leave
insl
sbb
or
push
push
add
pop
stos
sbb
pop
mov
mov
test
pop
sbb
sub
into
mov
jge
insb
sbb
mov
ret
mov
jbe
pop
jmp
mov
push
pusha
pop
jo
push
sahf
cltd
sbb
mov
push
jnp
sbb
pusha
xchg
push
outsb
sub
mov
mov
pop
addl
test
mov
fsubp
outsl
fdivrp
jp
clc
sub
das
sbb
test
sub
sahf
stos
inc
and
cmp
xchg
subb
xor
sarb
aam
sahf
fwait
mov
inc
cmpsl
jbe
gs
arpl
dec
mov
enter
fwait
jg
cvttps2pi
ret
roll
sub
cmc
cmp
lret
mov
push
xchg
leave
mov
sub
clc
cmp
adc
test
scas
mov
adc
arpl
lret
movsb
scas
mov
out
xor
xchg
mov
stos
cmovb
add
dec
dec
xor
mov
aad
mov
popf
add
pushf
xchg
out
bndldx
jp
and
imul
fsubr
mov
cld
movsl
dec
les
dec
in
inc
shll
xor
outsl
outsb
call
aam
int3
and
arpl
movsb
pop
add
gs
dec
pusha
xor
add
xchg
cmp
sbb
jge
pop
or
incb
add
mov
xor
xor
icebp
xchg
cmp
rcrb
xchg
clc
rorb
das
fstpt
into
in
cmp
jmp
mov
jae
in
and
data16
mov
cwtl
jae
ds
outsl
shrl
insl
ffreep
aaa
push
out
subb
std
sbb
adc
and
add
push
and
mov
and
repnz
dec
push
loop
in
lods
sbb
fcomip
dec
jge
out
cltd
and
or
jge
pop
icebp
out
mov
in
inc
cmp
sbb
aam
sub
popf
test
mov
mov
in
test
andl
sub
push
lret
and
ret
mov
inc
lret
pop
and
loope
dec
pop
lods
adcl
cmp
add
or
imul
mov
jp
in
stos
leave
cmp
or
sbb
sbb
mov
test
out
es
jae
mov
nop
rorb
mov
imul
push
and
pop
cmp
imul
xor
bound
clc
sbb
sti
dec
pop
jle
loopne
fwait
aad
pop
shl
pop
dec
or
test
les
movsl
xchg
aam
int
push
pop
into
je
aad
bound
xlat
mov
test
inc
outsb
xchg
mov
roll
and
mov
push
pop
jg
cmpsl
je
addr16
sbb
cmp
arpl
dec
dec
mov
or
stos
push
bswap
stos
ja
mov
fidivs
call
mov
push
fmulp
out
push
repz
sbb
sti
xchg
test
testb
repnz
dec
in
orb
cltd
sbb
lock
push
adc
add
jl
xor
dec
pop
test
and
dec
mov
jb
jno
or
lods
mov
push
inc
jno
mov
mov
leave
inc
ror
adcl
cmp
push
mov
cmp
sti
lss
outsl
dec
sbb
out
push
adc
jmp
mov
and
mov
adc
rolb
sbb
enter
sub
mov
mov
daa
jp
mov
arpl
pop
test
mov
rcrb
add
xchg
gs
lahf
test
leave
cmovp
lock
fndisi(8087
fdivr
cli
or
mov
hlt
sbb
dec
cmp
add
test
repz
imul
mov
cs
dec
nopl
ljmp
mov
test
icebp
xchg
ret
scas
mov
call
xchg
arpl
pop
rol
mov
pushf
loope
and
imul
into
xor
pop
and
push
cli
loope
insb
push
scas
ljmp
fldl
push
das
inc
ss
dec
xor
or
sub
or
loop
mov
jp
data16
adc
int3
mov
jg
lahf
jmp
lahf
jle
js
test
pop
adc
adc
pop
jecxz
xchg
dec
mov
xchg
lods
das
out
dec
idivb
test
in
loope
sub
lret
test
mov
sub
xlat
notb
push
xor
lds
push
pop
jae
xor
mov
sbb
pop
push
leave
xor
pop
in
test
and
stc
mov
xchg
and
push
rorw
mov
sbb
cmp
cwtl
mov
sub
outsl
sar
lahf
in
lock
sub
nop
mov
xor
icebp
adc
arpl
enter
hlt
jo
loopne
and
pop
lret
cmp
shrl
jecxz
xorb
rolb
in
cmc
ret
gs
cmp
cmp
movsb
outsb
pushf
inc
pop
data16
pop
dec
dec
lock
call
xor
pop
setb
mov
mov
arpl
and
pop
and
sbb
in
enter
popf
popa
xchg
mov
je
jb
test
test
das
push
outsb
mov
repnz
mov
lret
xchg
xor
dec
arpl
sub
sub
in
in
jns
ret
adc
add
sub
cmp
or
and
lret
push
ffree
pop
arpl
test
hlt
cmp
repnz
mov
mov
ds
xor
mov
stc
lret
mov
insl
scas
mov
dec
sbb
cmp
jb
call
sub
pop
xchg
mov
in
pop
pop
inc
pop
dec
es
repz
cmpsl
mov
xchg
idivl
sub
xchg
addb
addr16
jg
cmp
push
in
xor
sub
or
or
or
xorl
fcompl
push
mov
sbb
sbb
and
and
sbb
cmp
test
jno
xchg
gs
in
xchg
add
ret
jnp
sbb
and
or
lcall
push
or
test
lret
jnp
or
out
push
int
or
je
pop
lea
test
hlt
scas
rcl
addb
push
insb
test
cmp
in
test
bswap
lods
sub
js
sbb
aaa
add
fldt
sti
fldcw
xor
aad
ror
and
in
cmp
in
ret
push
dec
pop
xchg
push
std
dec
sbb
cmp
movsl
mov
inc
call
cs
ret
arpl
and
lods
dec
std
jo
rol
repnz
test
dec
hlt
pop
push
iret
push
jne
lret
inc
scas
and
inc
test
sub
insb
pop
popa
pop
fiaddl
push
into
leave
ret
mov
ja
mov
sub
pop
pop
mov
cli
sub
jp
out
bound
hlt
mov
in
xlat
adc
jae
insl
xor
cs
add
xor
adc
or
jecxz
adc
mov
lret
mov
hlt
sub
cmpsl
xor
push
mov
cmc
je
or
les
pop
insb
mov
int3
sub
jp
fwait
add
out
push
mov
cmp
lahf
rolb
dec
dec
pop
jl
sti
mov
loope
test
xchg
fbstp
ficoms
cmp
mov
popa
mov
push
lea
jo
ljmp
andl
push
mov
xchg
cmp
pop
inc
or
inc
hlt
sahf
stos
lock
in
push
sbb
xchg
xchg
inc
iret
cmp
cmpsb
sbb
xchg
enter
or
pop
dec
aam
leave
xor
and
fadd
cs
cmpsl
lret
sbb
adc
lcall
test
out
in
insl
mov
and
sub
decb
lcall
incb
stos
cmp
jmp
adc
or
icebp
dec
mov
roll
cli
out
insb
ret
jne
lock
loopne
or
pop
test
mov
nop
pop
ret
orl
and
and
mov
pop
gs
test
mov
xchg
testb
cmpsl
add
ret
lods
dec
call
out
lods
and
push
mov
jle
mov
arpl
into
dec
faddl
aam
into
data16
xorb
mov
pop
xchg
push
cmpsl
mov
xor
mov
pushf
xchg
mov
jp
xor
cld
push
jns
and
pop
out
cmp
adc
mov
shl
sbb
aad
loopne
fistpll
jae
pop
fdivrl
repz
cmp
mov
pop
ljmp
fidivrl
cmpsl
aam
cmp
lcall
mov
sti
jo
movsl
pop
sbbl
cltd
and
cmp
nop
sub
inc
nop
std
sub
iret
push
xor
pop
nop
mov
in
cmpsl
jl
test
push
jb
jb
pop
sub
cmpl
sub
fildll
out
inc
push
pusha
test
jg
or
or
mov
xchg
lods
jae
xchg
popf
les
adc
push
add
movsl
pusha
fabs
push
ljmp
pop
xor
xchg
rcr
mov
pop
sbb
pop
cwtl
orb
jo
jge
das
pop
jnp
ljmp
sub
pop
jle
out
icebp
cs
lea
sub
cmp
jmp
adc
lods
rclb
lret
scas
mov
stos
push
pop
rcr
int
cmp
mov
and
cmpsl
sub
nop
jmp
ja
mov
sub
xchg
testb
icebp
cwtl
lea
inc
mov
dec
popa
icebp
sub
mov
mov
test
pusha
std
daa
popa
mov
imul
pushf
mov
rorb
inc
push
cmp
cwtl
cmpl
inc
aaa
cld
lods
stc
aaa
or
jo
jns
dec
pop
pop
push
outsl
stos
roll
leave
pop
icebp
shll
mov
fwait
jnp
iret
int
cmp
mov
push
or
inc
inc
pop
cmp
jmp
jl
test
adcl
out
or
pop
int
mov
push
dec
add
jnp
lcall
addr16
pop
imul
leave
dec
xchg
clc
inc
adcl
cmp
lcall
cmp
das
adc
ror
xchg
lods
cmpsb
sub
pop
hlt
and
mov
call
mov
mov
int
aaa
add
sub
cmp
add
pop
rol
xchg
and
sti
dec
add
cmpsl
daa
les
push
int
test
sbb
add
rcrl
push
push
cmpsb
xor
jmp
sub
repnz
inc
repnz
mov
mov
jle
and
ja
popf
dec
sbb
add
inc
shlb
or
fldt
repnz
imull
pop
aas
int3
bound
lcall
dec
sbb
dec
jno
xchg
fisubrl
jnp
xor
pop
mov
jecxz
sbb
push
jge
cmp
notl
pop
das
jecxz
cmp
inc
fldenv
pop
inc
xor
hlt
es
out
sbb
pop
jo
xchg
cmp
cmc
or
repz
test
pop
jns
aam
outsl
fs
jge
jno
aaa
and
jl
ror
or
or
in
or
pop
jecxz
and
lds
mov
nop
push
xchg
sub
cmp
cmpsl
mov
sbb
dec
shrl
xchg
pop
push
adc
jg
cmpsl
push
cli
ljmp
inc
jb
ret
pop
lds
pop
pop
sbb
cmp
ffree
sub
data16
adc
pushf
add
jl
dec
mov
mov
shrl
shlw
int3
mov
addl
mov
cmc
cld
movb
nop
rorl
popl
pop
mov
mov
stos
xor
push
adc
push
add
xor
xchg
jg
sub
jns
std
popa
movsl
jp
outsl
into
mov
xor
pop
hlt
dec
aas
jp
gs
in
dec
icebp
push
pop
int
ret
cmp
sahf
jg
lret
cmpsl
push
jecxz
pop
cmp
push
outsl
lahf
loopne
clc
pusha
dec
in
jl
jecxz
xchg
int
xor
pop
insb
movsl
push
in
mov
bound
push
xchg
call
pop
imul
jmp
lock
xor
icebp
mov
cwtl
leave
mov
es
fbstp
xchg
out
adc
pop
mov
int
lret
sub
imul
adc
gs
inc
insb
cmp
repz
jmp
repz
pop
mov
adc
dec
ficoml
in
jbe
loope,pn
xchg
out
and
and
pop
mov
leave
fsubrl
loopne
jmp
pusha
mov
out
enter
iret
lock
xlat
push
mov
adc
sub
xchg
mov
stos
mov
vsubps
inc
fcomps
outsb
sub
pop
loopne
scas
jae
pusha
aad
and
clc
lods
mov
pop
cmp
roll
jmp
subb
xor
ljmp
mov
sbb
outsl
jne
jg
jl
jle
dec
adc
aas
cmpsl
push
mov
scas
cs
inc
xchg
cmp
xor
mov
mov
arpl
push
and
popf
rcll
xchg
add
popl
in
jno
xchg
jb
rcrl
stos
cmp
lret
lds
sub
ds
cmp
sub
pop
dec
mov
adc
dec
shlb
mov
mov
fwait
sbb
inc
notb
sub
jbe
movsl
aas
add
pop
mov
clc
push
nop
adc
dec
pop
push
mov
scas
movsb
add
adc
adc
fsubl
imul
push
out
shl
xchg
mov
faddl
sbb
inc
mov
fsubp
outsb
push
cmpb
mov
je
inc
gs
dec
lret
xchg
addr16
icebp
mov
mov
out
repnz
mov
push
nop
mov
sar
pushf
mov
sub
shlb
pop
push
ja
stos
out
sbb
hlt
pop
xchg
leave
ret
imulb
push
repnz
insl
loope
lock
inc
rorl
and
and
mov
mov
scas
lods
rcll
pop
mov
mov
push
mov
inc
inc
fdivl
sti
xchg
xchg
je
call
dec
xchg
jno
push
ret
lea
xor
sbb
aad
dec
push
adc
pop
push
notl
push
jno
pushf
sbb
mov
out
in
cmp
inc
loopne
mov
adc
sub
outsb
aas
inc
mov
repnz
inc
inc
mov
sbb
dec
lock
cmpsb
mov
and
adc
sub
sti
xor
outsb
cwtl
jmp
ljmp
cmp
mul
or
and
mov
fisubrl
iretw
je
mov
cmpsl
push
dec
jle
inc
int3
jne
movsb
imul
or
pop
loope
pop
js
hlt
jno
js
adc
sub
outsb
dec
imul
lods
pop
arpl
sub
jle
mov
sbb
adc
test
repz
fsubp
jp
mov
les
sub
mov
cmp
loopne
cmp
jbe
jmp
mov
repnz
mov
insb
mov
aas
and
xchg
fadds
jmp
xchg
shlb
hlt
push
add
mov
xor
arpl
pop
loope
cli
xor
leave
pop
add
cmp
adc
decb
inc
adc
pushf
lcall
lret
rcll
mov
mov
sub
aad
sbb
xchg
bound
cli
gs
push
subb
xchg
pusha
in
mov
test
iret
arpl
dec
jle
lret
or
jns
push
ljmp
add
fisubl
cs
push
cmpsl
cmp
es
and
mov
pop
imull
mov
pop
dec
xor
xchg
and
inc
cmpsb
mov
mov
out
loope
pop
gs
fbld
xor
arpl
inc
mov
jecxz
ret
cmp
inc
or
in
sbb
add
iret
insl
adc
adc
or
dec
and
mov
pop
inc
sahf
cmpsl
out
pop
or
fucom
aaa
leave
ljmp
test
xchg
call
or
inc
outsb
jecxz
adc
inc
cmp
lods
mov
aad
mov
mov
xchg
mov
mov
lds
mov
adc
inc
cwtl
jl
ljmp
xchg
dec
cmp
and
cmp
test
stos
sub
nop
mov
movsl
in
xchg
stos
stos
in
mov
xlat
jae
fwait
and
dec
or
xchg
ds
mov
outsb
pop
pushf
outsb
cld
and
adc
add
sub
popf
xchg
add
sti
or
inc
xchg
or
xor
push
xor
clc
sbb
xchg
sahf
out
sbb
inc
inc
fcmovne
neg
add
pop
pop
cmp
shll
pop
cmp
inc
pop
es
pop
fists
dec
sub
fidivrs
inc
mov
jp
mov
inc
mov
loope
fs
fnsave
cmp
sbb
rorb
daa
loop,pn
mov
inc
add
std
fwait
jb
cmp
add
out
mov
pop
cmpsl
mov
in
sub
out
aad
test
movsl
ss
scas
adc
add
sub
dec
mov
xor
stos
dec
jno
xor
sub
push
mov
test
cmp
iret
mov
xchg
or
les
or
dec
inc
and
ret
cmp
mov
sbb
aad
mov
mov
cld
lret
dec
lret
pop
pop
dec
gs
icebp
and
sti
fs
loopne
xchg
int
sub
xor
stc
sbb
mov
fsubr
stos
loopne
cmp
cmp
push
xchg
jl
xor
xor
pop
mov
dec
test
and
pop
cltd
call
xchg
je
dec
push
and
cld
inc
fst
nop
hlt
ss
rcr
mov
loope
cmc
inc
mov
lahf
pop
sub
xchg
lahf
pop
jno
pop
shrl
xchg
lea
push
arpl
fidivrl
dec
shlb
push
xlat
fidivrs
data16
fisttps
mov
fwait
gs
aad
cs
dec
jl
in
pop
jno
xor
sub
icebp
mov
push
repnz
inc
mov
mov
inc
pop
xorl
inc
pushf
pusha
inc
sbb
adc
and
cmpsl
fisubl
int3
insb
fbld
loopne
jge
into
mov
pop
dec
mov
push
aas
setbe
lods
mov
pop
cmp
adc
sbb
outsb
inc
sbb
mov
stc
mov
cmp
dec
sbb
stos
and
pop
lret
sbb
imul
push
or
and
gs
jmp
mov
mov
and
jmp
imul
add
xor
push
pusha
mov
mov
pop
cld
hlt
repz
mov
aaa
lea
mov
mov
xor
dec
lcall
shll
daa
mov
lock
add
ljmp
loop
int
mov
popa
dec
shr
dec
mov
shll
int
ficomps
addr16
mov
aaa
push
push
mov
cli
lret
int3
xor
lahf
clc
sbb
int
mov
jb
in
and
lock
push
ljmp
mov
mov
add
scas
adc
gs
and
mov
loope
push
sub
xchg
and
dec
leave
dec
mov
xchg
mov
loop
pushf
cmp
mov
cmp
icebp
adc
test
mov
add
les
insb
sub
ret
add
out
pop
stos
add
bound
add
xor
popf
ds
pushf
adc
jb
or
lret
imul
xor
cmpl
push
push
xchg
mov
in
arpl
ret
clc
aad
orb
mov
int3
adc
xchg
jmp
pop
xor
movsb
add
imul
mov
jecxz
jnp
repnz
push
add
test
rclb
inc
mov
jno
out
leave
mov
mov
scas
jno
int
or
mov
add
mov
sub
jge
mov
or
and
sub
mov
or
outsb
add
inc
cld
or
adc
aas
stos
lret
push
lret
ret
sahf
adc
push
lock
popf
xor
sbb
pop
iret
hlt
pminub
out
xchg
aaa
negb
sub
sbb
in
add
daa
loope
mov
xor
or
and
pop
stos
xchg
ss
or
xor
stos
into
arpl
cld
std
adc
jmp
daa
negl
sub
mov
incb
jmp
test
jb
push
dec
aam
out
mov
push
pop
sub
cmp
mov
pop
dec
push
leave
and
pop
sbb
shr
movsl
loope
insl
imul
mov
mov
sub
dec
ss
sbb
push
sub
shll
inc
xchg
lods
cltd
mov
daa
shll
jne
out
mov
adc
jecxz
repz
sbb
test
lods
xor
lods
mov
sbb
fisttpl
add
mov
cwtl
fisttpl
pop
seta
mov
mov
jbe
jl
push
mov
call
push
aad
lods
imul
cmp
insl
mov
xor
mov
sti
insb
or
pop
in
lret
xchg
aad
shlb
inc
mulb
sub
fdivr
mov
sbb
int
ljmp
push
aas
sub
dec
adc
imul
add
outsl
push
lahf
fisubrs
jle
loopne
sub
loop
popf
ret
add
or
mov
das
xor
jmp
cmpl
sbb
cmp
lea
pop
jne
mov
lds
movsl
aas
add
pminsw
xor
push
lcall
jge
mov
xor
or
dec
in
das
stos
fdivrs
dec
stos
test
dec
or
mov
jle
ss
jbe
cmp
inc
xchg
int
idiv
jmp
adc
cmp
or
popf
daa
stc
inc
out
js
push
mov
push
cmp
sub
leave
ret
or
imul
fstps
add
sbb
shrl
fdivrp
aas
inc
inc
movsb
jle
js
popf
pop
xchg
rorl
into
mov
ret
and
jmp
sub
fnsave
stos
xchg
mov
popa
mov
es
daa
xchg
insl
test
addr16
inc
mov
sub
ret
sub
dec
xchg
dec
call
shrb
jbe
bound
xchg
push
xchg
cmp
jae
mov
xor
dec
mov
mov
arpl
add
cmp
or
dec
imul
jmp
mov
cmp
and
mov
into
cmp
out
xchg
out
mov
popf
and
out
jns
jb
frstpm(287
sub
add
pop
xor
ds
test
jne
mov
idivl
jae
jnp
push
mov
and
test
mov
push
and
add
dec
sub
cmp
xor
push
mov
xchg
adc
fnstsw
mov
lods
into
mov
shrb
in
mov
or
iret
scas
int3
popf
cmpsl
test
leave
pop
sbb
push
push
pop
imulb
lcall
imul
pop
fadd
cmp
mov
in
add
mov
xlat
jmp
jmp
sti
fwait
mov
ret
cmp
outsl
sarl
xchg
jno
pop
mov
arpl
addr16
cld
inc
sub
shll
scas
daa
cmp
imul
roll
sbb
popf
cmpsl
mov
outsl
sti
cmp
daa
sbb
repz
push
inc
xchg
imul
dec
cltd
mov
notl
and
cmpsb
addr16
aas
xlat
pusha
xchg
mov
mov
jmp
pop
inc
pop
inc
lock
cmp
mov
push
mov
dec
jl
popa
lcall
mov
ret
or
mov
cmp
mov
lahf
jno
out
scas
out
jle
jnp
mov
inc
pop
push
stos
inc
pop
mov
mov
pop
cli
enter
cmp
mov
cmpsb
push
aam
mov
push
or
cltd
fstl
xchg
stos
jo
test
fdiv
ljmp
add
cmc
or
std
inc
mov
movb
add
pop
mov
repz
xchg
or
pop
fidivs
push
cs
ss
dec
jnp
xchg
out
fwait
popa
ficoml
cld
loope
sub
ret
push
sub
jns
mov
movsl
out
test
jae
test
sub
inc
cmp
mov
stc
sub
xchg
outsl
jbe
inc
adc
pop
ja
mov
mov
inc
dec
jmp
repnz
pop
out
stos
in
and
cwtl
dec
clc
imul
call
inc
popf
popf
stc
jl
jecxz
jg
dec
sbb
aaa
pop
and
test
push
data16
ja
cmp
je
adc
and
lret
jecxz
in
subb
out
ret
mov
ret
push
fsts
adc
dec
inc
shrb
jecxz
jbe
inc
cmp
add
mov
push
data16
jne
or
sahf
mov
mov
xchg
insl
inc
insb
daa
loop
mov
xor
insl
sub
jg
sbbl
push
or
popf
aas
jmp
mov
mov
test
jl
jno
xor
in
push
shlb
mov
xchg
js
test
xchg
pop
lds
mov
jg
mov
jp
sbb
test
outsl
sub
es
cs
sbb
jbe
jecxz
sahf
and
inc
xchg
out
std
repnz
sub
add
add
sub
subl
dec
cli
scas
xlat
cmp
mov
push
jnp
imul
lret
jns
out
xor
das
inc
popf
dec
orb
push
sbb
sbb
xor
hlt
jno
lea
mov
push
popf
sbb
insl
mov
popl
mov
cmp
lock
adc
mov
fsubs
add
pop
dec
out
mov
dec
iret
sarl
fimull
mov
inc
cmp
js
xor
push
push
addl
sbb
mov
scas
adc
mov
push
out
out
cmpsl
popl
rorb
push
add
pop
sub
shll
sbb
cltd
sub
inc
jmp
jbe
fsts
in
jne
jne
aaa
xchg
out
mov
iret
int
out
mov
outsl
sbb
push
xor
popa
xchg
scas
lcall
sbb
mov
int3
jb
jp
fimull
mov
dec
push
movsb
insl
ds
mov
clc
jl
add
inc
pop
aas
xchg
mov
fnstenv
jg
ja
xor
mov
adc
pop
sahf
scas
daa
mov
xchg
add
addr16
scas
mov
pop
push
jge
adc
push
packuswb
xchg
hlt
cmp
iret
push
shlb
outsb
push
push
iret
cmp
sub
pop
xchg
out
cmp
addr16
sbb
inc
aas
mov
pop
fstps
js
incl
jl
mov
mov
or
shl
out
push
fnstsw
or
nop
cmp
subb
fmull
adc
cld
pop
fdivl
ret
push
push
lods
pop
test
fdivrs
inc
cli
jge
and
mov
std
push
cmp
sbb
mov
sub
clc
sbb
fiaddl
mov
pop
push
in
and
xor
cmc
mov
inc
xor
sub
lret
dec
pop
inc
xchg
xchg
push
cmp
mov
mov
mov
pop
jg
stc
mov
fucomp
test
push
jbe
or
es
lret
dec
mov
sti
inc
out
mov
jnp
repz
into
daa
loopne
popa
push
loope
pop
repnz
das
pop
push
mov
push
mov
outsb
imul
mov
inc
sub
int
inc
scas
cmpsl
jnp
adc
outsb
mov
icebp
outsl
mov
xlat
pop
pop
fadd
pushw
jne
push
sti
mov
jno
cmp
divl
or
jecxz
pop
sbb
pop
roll
int3
inc
pushf
mov
in
xor
mov
push
cmpsb
nop
pop
int
enter
hlt
adc
or
ret
lods
cltd
inc
lods
jns
mov
and
js
jae
test
sub
aaa
nop
aad
mov
lret
mov
jne
jl
mov
jge
fimull
xchg
test
shll
jmp
xorl
js
or
sub
insl
insl
sub
mov
imul
mov
sbb
cmp
push
in
iret
xchg
and
cmp
inc
jae
pop
mov
and
lret
repnz
sub
and
aaa
cmp
int
lds
fisubl
xchg
inc
dec
shl
add
cmp
cmp
or
pop
fdivl
push
cwtl
test
cltd
lret
jbe
clc
js
xchg
jo
gs
and
and
pop
das
sbb
adc
sub
leave
mov
push
outsl
scas
mov
mov
es
popf
jg
add
or
mov
into
xor
push
xchg
mov
outsb
sbb
popl
sbb
jns
push
fdivrs
fs
aaa
xlat
pop
xchg
rolb
jne
repz
popf
xor
inc
dec
ror
test
dec
orl
jno
je
fidivrs
in
sub
testl
sub
mov
push
fdivrl
sbb
or
xchg
ds
push
or
sahf
add
sbb
aam
mov
sbb
sbb
jp
out
in
sti
inc
push
xchg
arpl
inc
push
enter
addr16
sub
or
call
daa
mov
jb
scas
std
sub
jle
daa
push
jmp
inc
dec
mov
push
aad
pop
mov
loopne
fnstcw
mov
stos
fimuls
xchg
xchg
movsb
and
leave
ret
jns
sbb
cmp
sbb
mov
subb
cmpsb
dec
ljmp
sbb
mov
and
addr16
repnz
shl
pop
imul
mov
loopne
cld
mov
daa
push
ret
push
xchg
mov
aas
xchg
test
xchg
mov
clts
xor
shr
cmc
fsubs
fmull
aas
mov
cmp
inc
add
int
ljmp
nop
shll
lods
aad
push
pop
pop
jp
sub
shll
in
loope
push
xor
stc
cmp
in
popf
jmp
insb
fcoms
or
push
and
and
xor
shll
cmp
int
push
cwtl
pop
xchg
jle,pn
in
fdivrs
jmp
es
push
inc
pop
inc
loopne
mov
arpl
ljmp
sub
or
clc
fwait
clc
pusha
cmp
cmp
sbb
jo
cmpsb
loopne,pt
and
test
nop
in
lds
test
lods
adc
rcr
inc
sub
sbb
xchg
sahf
mov
jge
test
les
cs
pop
imul
pop
and
push
in
pusha
cmp
cwtl
jns
pop
ja
sahf
mov
jno
push
xor
pop
push
xor
pusha
ret
ret
mov
repz
scas
in
push
mov
imul
cmpsb
ljmp
push
and
stos
aas
pop
notb
push
sub
xchg
enter
lods
shrb
jae
ret
inc
cwtl
add
pop
dec
jnp
sbb
sti
jno
add
stc
push
ja
lods
jl
stos
lock
cwtl
ss
xor
mov
pusha
mov
mov
jns
mov
push
pop
dec
dec
inc
out
mov
arpl
xchg
cmp
imul
dec
and
stc
sub
mov
icebp
cli
cmpl
int
fisubrs
daa
push
out
cmpsl
insl
roll
xor
sbb
imul
mov
imul
addr16
ror
test
adc
push
inc
jne
mov
push
lds
test
push
inc
add
xchg
daa
outsb
fbstp
std
dec
cmp
mov
stc
in
mov
loope
push
adcl
sbbl
xor
inc
sub
iret
inc
int
pop
test
popl
adc
scas
sbb
xor
and
sahf
ds
xchg
xor
mov
mov
movsb
in
test
into
pop
push
xchg
mov
loop
imul
add
enter
cs
push
divb
inc
fld
ret
stos
jl
pop
test
inc
cwtl
xchg
movsb
sbb
cli
push
sarb
inc
mov
stos
daa
mov
ja
mov
lea
push
xor
int
dec
jno
lcall
mov
pop
les
ret
in
aas
dec
cli
stos
mov
lds
push
dec
pop
fadd
inc
cmp
insl
and
aas
jmp
inc
jg
mov
mov
push
les
loopne
or
pop
movsl
sub
imul
fdivs
out
inc
push
out
xor
inc
cmp
jno
ja
fdivl
das
stos
ja
arpl
ljmp
in
mov
lds
push
scas
in
sub
ljmp
int
pop
sub
cli
insl
aaa
jno
loop
mov
popa
xor
cmp
ret
cmp
dec
inc
cmp
push
imul
inc
into
repnz
add
gs
xlat
mov
jl
sub
das
adc
lcall
nop
push
imull
outsb
addr16
xor
ss
in
out
add
and
jge
loope
repz
es
mov
int3
stos
repnz
adcl
adc
push
xchg
scas
adc
stc
push
pop
jmp
push
in
scas
aad
push
xchg
scas
cs
leave
sub
sbb
jmp
pop
mov
push
int
adcb
pop
push
les
xchg
lret
lock
cmp
lret
fbstp
push
push
std
adc
add
dec
jnp
sub
push
xchg
push
sbb
xchg
sbbb
xor
add
daa
pop
mov
pop
out
cmp
fcoml
and
adc
push
call
or
and
or
mov
xor
cltd
jmp
mov
mov
fdivl
int3
dec
imul
inc
sbbl
js
push
mov
nop
jns
sti
sub
out
std
push
int3
push
lret
push
das
ret
cld
mov
mov
sbb
and
adc
push
mov
and
cmp
jo
bound
ja
add
mov
jmp
jno
dec
addr16
ret
pop
xchg
sbb
lods
push
xchg
popf
push
sub
cmp
bound
sbb
je
dec
xor
jp
testl
loop
xchg
mov
jns
sbb
mov
and
pop
repnz
out
sbb
scas
sti
mov
pop
repz
outsb
mov
mov
push
and
imul
idivb
enter
gs
ljmp
push
ret
xchg
pop
push
xlat
pushf
adc
push
sub
aaa
bound
lods
out
sti
inc
sbb
push
pop
dec
and
push
lret
mov
jbe
cwtl
mov
push
sbb
mov
icebp
lcall
lds
stc
stc
push
data16
ret
dec
inc
sub
cmp
pop
jmp
ljmp
fldenv
xorb
loopne
push
mov
sbb
xlat
jle
push
xor
lcall
add
arpl
test
mov
and
enter
stos
mov
int
insb
add
sub
inc
popf
int3
jecxz
mov
jb
jae
cltd
add
popa
imul
pop
push
in
mov
jecxz
pop
add
repz
mov
jl
movsl
lret
jecxz
push
cltd
mov
sbb
sub
xor
stos
orb
subb
in
je
cmovns
and
dec
in
sub
fwait
movsl
clc
pop
xor
pop
dec
cmpsl
mov
cmpsb
and
xor
inc
sbb
addr16
std
cltd
inc
fisubrs
imul
mov
jb
imul
loope
push
jg
outsl
out
and
mul
cmp
bound
imul
mov
adc
pushf
shld
test
sub
mov
sbb
xor
aas
dec
dec
push
mov
add
cmp
shl
cmp
add
cs
adc
sbb
adc
jb
jge
cmp
hlt
push
push
mov
jmp
jne
movsl
test
idivb
xor
js
xor
lahf
xor
jle
push
movsb
loopne
lret
insl
stos
pusha
jns
jmp
incb
push
loopne
jp
adc
dec
pop
and
ret
lret
sbbb
notl
jecxz
xchg
jmp
cli
push
insl
movsl
imul
imul
shrb
inc
dec
sbb
loop
mov
xlat
or
data16
in
cld
add
cmp
xchg
adc
inc
jo
and
out
dec
xor
fs
daa
sbb
out
aam
and
out
jno
push
sti
loopne
dec
rolb
cmp
xor
and
pop
decb
imul
addl
adc
mov
hlt
fstp
xor
out
out
sbb
push
adc
and
arpl
in
sbb
mov
cmc
mov
push
dec
jge
mov
orb
pop
rolb
push
or
gs
jnp
mov
mov
adc
icebp
cli
imul
mov
jle
mov
dec
repnz
jmp
fldz
insl
adc
gs
mov
lock
lods
test
shlb
idivb
and
ret
mov
bound
xchg
pop
adc
fldt
in
mov
or
xchg
mov
or
fsts
ljmp
sarb
push
js
pop
nop
inc
fdivl
adc
push
sbb
pop
xchg
jb
stc
cld
and
push
mov
mov
jnp
test
mov
jno
lcall
lods
pusha
push
rcll
mov
dec
imul
push
lcall
push
ret
add
xchg
or
fidivrl
shrl
sub
push
push
xchg
and
lods
jbe
xchg
daa
jle
ds
lock
push
xor
sub
outsb
loopne
out
imul
inc
iret
fwait
or
push
xchg
adc
scas
scas
or
fidivs
lods
loopne
mov
cmp
xor
adc
sub
shlb
inc
sub
push
or
leave
loopne
add
mov
mov
ret
pop
in
ss
xor
push
testl
cli
mov
mov
inc
mov
pop
mov
rcrl
pop
xor
lret
inc
cmp
cmp
imul
stos
sub
and
imul
xor
pop
rolb
int3
imul
lods
add
cli
and
fs
fwait
in
js
push
les
xchg
push
xchg
mov
xchg
mov
lahf
loopne
lret
lods
mov
test
clc
inc
sub
mov
sub
addr16
push
pop
sahf
ljmp
int
xlat
lret
test
pop
insl
int
inc
push
pop
mov
mov
es
inc
sub
push
ror
inc
cmpsb
hlt
mov
loop
fisubl
sbb
repz
pop
pop
into
xor
pop
jmp
pop
sbb
imul
int
cld
xchg
sub
arpl
cmp
jb
scas
mov
push
not
dec
push
jne
movsl
sub
xchg
inc
in
int
stc
pop
add
xchg
mov
push
shrl
ret
fildl
sub
clc
mov
pop
into
mov
ss
lret
and
shrl
dec
dec
mov
hlt
mov
subb
in
mov
icebp
js,pn
jno
push
fdivrs
jnp
mov
cmp
rclb
xchg
pushf
push
jmp
aam
mov
ds
add
push
dec
mov
mov
pop
ret
outsb
shll
mov
push
int
push
test
shll
enter
adc
out
push
mov
int3
adc
cmp
add
call
push
push
cmpsb
popf
fs
je
jno
inc
mov
sub
cltd
dec
stos
and
nop
mov
or
out
mov
sub
adc
imul
mov
sahf
xor
mov
ja
pop
popf
pop
cmpsl
cmp
pop
sub
mov
arpl
adc
sbb
jl
or
popa
hlt
popa
test
roll
sahf
xor
pusha
push
sub
mov
cwtl
outsb
arpl
ss
xchg
mov
call
xchg
inc
movb
add
cmp
es
xchg
bswap
sbb
dec
or
aam
sbb
pop
cld
or
fidivrl
lret
jae
cs
shr
call
sub
and
dec
push
in
cmp
adc
popa
mov
sbb
lahf
xchg
sarl
pop
outsb
jg
jmp
mov
dec
lods
jle
push
add
imul
mov
jecxz
dec
pop
pop
fs
sbb
cmc
xchg
push
inc
push
cmp
jno
aam
mov
pop
inc
mov
xor
xor
lock
aad
xor
popa
les
sub
or
dec
and
mov
mov
cmpsb
mov
jge
aam
mov
das
pop
mov
xchg
repz
test
sahf
xchg
ds
xchg
mulb
dec
dec
xor
xor
xor
xchg
dec
loop
dec
pop
nop
jmp
mov
ret
dec
movsb
jle
cmp
jns
jnp
mov
jbe
inc
rorb
mov
add
popa
mov
mov
lds
fmuls
rcr
ret
jmp
lods
sbb
add
push
into
mov
inc
movsl
dec
mov
jno
enter
lret
lods
inc
push
popa
fisubs
push
jno
leave
cmp
sub
jns
loope
pop
js
inc
push
test
mov
push
inc
idivb
out
or
ss
jno
call
enter
dec
xchg
pop
sub
and
push
sbb
les
jmp
or
mov
addl
push
mov
or
or
andb
shlb
sarb
hlt
sti
ljmp
cltd
dec
cltd
fwait
sub
or
push
scas
out
push
popl
ficompl
adc
lahf
rcr
pop
adc
push
pop
or
cmp
mov
ljmp
test
int3
test
bound
sbb
cmp
sti
xchg
cltd
pop
xchg
or
fs
lea
repz
stc
mov
jecxz
fisttps
mov
mov
jno
or
push
inc
inc
xchg
lods
jmp
sub
lea
fs
jmp
jle
xor
pop
in
loope
scas
addl
mov
dec
mov
sub
in
and
xchg
cltd
in
lods
or
rcll
mov
adcl
dec
mov
xor
adc
lret
jae
cmc
push
mov
stc
pop
loope
mov
fwait
inc
jmp
cmp
adc
mov
imul
pop
xchg
dec
cmc
clc
push
mov
dec
bound
jle
scas
jmp
insb
iret
pop
in
mov
jmp
scas
add
in
in
imul
dec
loopne
sar
jne
in
adc
lods
outsl
insl
cmpsb
add
pop
push
icebp
pop
fmull
dec
pop
mov
cmp
jne
xchg
mov
cmpb
outsl
int
adc
inc
outsb
hlt
outsb
shll
jne
inc
out
push
adc
mov
push
and
ret
cmp
in
cmp
cld
int3
ret
and
leave
leave
push
adc
inc
incl
adc
out
clc
push
push
mov
mov
mov
std
imul
and
jecxz
adc
aam
rcll
cmpsb
mov
cmp
xchg
out
addb
sub
pop
aas
shrb
je
daa
xor
mov
sbb
loope
jg
iret
shl
js
cli
andl
dec
mov
loope
cmp
sbb
sub
rcl
nop
lds
mov
jmp
or
push
cmp
dec
decb
and
lock
xor
rcrb
mov
inc
lahf
push
sbb
pop
sbb
xchg
outsb
sub
js
out
sub
cmp
dec
jns
push
sub
pop
pushf
hlt
test
aaa
cmpsb
aas
jl
icebp
and
stos
pop
daa
les
adc
aas
test
gs
mov
cltd
push
dec
into
pop
mov
subb
xchg
xchg
pop
addb
xchg
sbb
outsb
dec
jae
inc
aas
out
into
dec
push
clc
popa
cmpsl
enter
or
dec
fbld
xchg
call
stos
gs
ret
push
push
mov
aas
dec
jne
jnp
dec
scas
xchg
lret
pop
cltd
scas
mov
pop
cmpsb
pop
inc
adc
sbb
push
divb
shll
cmp
sbb
sub
mov
stos
mov
lcall
imul
dec
mov
jo
add
icebp
setae
fsubrl
xchg
mov
inc
int3
pop
xchg
out
mov
mov
imul
hlt
sahf
loop
test
and
loopne
ljmp
adc
cmp
jo
push
jmp
cmp
mov
mov
nop
les
mov
pop
aam
cmp
and
inc
add
push
int3
adc
push
adc
mov
lret
mov
pop
leave
ret
pop
dec
adc
push
js
push
imul
sub
xor
pop
iret
mov
cmp
cmc
or
sarb
dec
mov
mov
rorl
mov
shll
jge
lret
mov
mov
inc
jbe
jne
in
push
pop
sbb
mov
pop
push
daa
inc
push
imull
xchg
inc
or
lret
gs
fistpll
out
clc
jo
data16
mov
aaa
mov
addr16
push
bound
mov
cmp
mov
fistpl
repz
jns
pop
fs
dec
pop
roll
and
icebp
pop
popf
push
pop
mov
in
lds
aas
lods
dec
inc
aas
and
add
xchg
mov
ret
prefetch
or
pop
sub
xor
cmpsb
ds
sub
icebp
cmpsl
mov
xor
xchg
jecxz
mov
pop
xor
lods
push
ja
repnz
test
fcmovbe
adcl
pop
inc
sub
add
xchg
sbb
gs
and
outsb
mov
rcrb
cltd
scas
and
stos
out
mov
push
repz
xor
vpmaxsw
ret
inc
push
std
mov
jp
mov
lahf
xlat
mov
add
sbb
dec
hlt
sub
cmc
mov
inc
idivl
pop
mov
fs
int3
mov
inc
aas
lea
add
or
aas
mov
jb
and
add
in
lea
es
mov
mov
gs
lret
mov
cmp
push
xor
mov
in
cwtl
int3
jno
decb
imul
dec
test
fildll
push
fucom
sub
mov
push
stc
dec
push
mov
lret
nop
xor
std
dec
arpl
jns
rcl
adc
shll
jae
lahf
aad
int3
push
outsl
fstpt
pop
test
dec
in
movsl
orb
in
jns
pop
fistl
les
xchg
cmp
cmp
out
aas
xchg
lds
sbb
jo
inc
or
es
call
rcl
rorb
add
jecxz
push
fwait
and
cmpb
fsubs
sbb
mov
add
pop
fldl
pop
aad
lahf
push
sub
mov
add
xchg
jmp
imull
cmpb
ja
and
movsb
jno
imul
loope
mov
adc
inc
adc
xchg
loope
sbb
push
lcall
mov
mov
loop
aam
lret
push
jmp
lret
orl
xor
mov
cmc
fwait
mov
and
enter
mov
xchg
pop
inc
insl
movl
cmpsl
addr16
sub
mov
add
jl
leave
cmc
outsl
mov
orb
call
jbe
es
mov
mov
xor
sahf
addb
push
les
mov
repz
insl
sti
test
ss
or
aam
fistpll
das
pop
and
jno
push
outsl
movq
dec
sahf
add
push
xchg
push
aas
pop
ror
cmp
cmpb
sti
inc
fimuls
out
rcl
add
pop
push
push
hlt
dec
iret
je
in
jl
inc
mov
xchg
mov
out
insb
sub
push
or
mov
inc
aaa
pop
test
shr
jno
enter
xor
sbb
sub
mov
jns
rcrl
jnp
js
sub
sarb
jmp
mov
add
xchg
adc
sub
add
lea
pop
mov
jne
aad
pop
cmp
xchg
dec
fldln2
inc
jl
cmp
mov
dec
add
sbbb
cmp
inc
fldt
add
xlat
shrb
mov
ret
sbb
sbb
mov
xchg
rcr
push
je
in
js
shr
push
notl
imul
cli
push
into
cli
mov
popa
pop
inc
xchg
push
insl
xchg
icebp
push
mov
xchg
outsb
cmp
stos
sarb
imul
int
sub
int3
sbbb
jg
xorb
clc
sub
dec
adc
push
inc
push
mov
ret
loope
popa
xor
mov
xor
push
in
pop
bound
jl,pt
test
loopne
scas
jnp
sub
jl
jl
les
and
aam
dec
xor
dec
nop
cli
scas
jmp
pop
fistps
cmp
cld
negb
sbb
std
cmp
sahf
mov
lods
bound
js
das
jne
dec
fs
mov
or
test
jle
push
shll
mov
loop
fmul
insl
scas
pop
in
sbb
fwait
mov
mov
sbb
cmp
bound
xchg
jecxz
cld
ds
outsb
and
adc
pusha
mov
popa
mov
stc
lock
bound
popa
xor
stos
mov
rclb
xchg
push
pusha
sbb
inc
cmp
dec
sarl
jnp
xchg
in
push
mov
hlt
mov
imul
cmp
shl
cmp
adc
jno
mov
jno
pushf
aam
mov
mov
dec
negl
std
push
cwtl
cmp
or
test
or
or
repnz
xor
into
add
push
or
mov
adc
mov
test
mov
or
xor
pushf
pop
sbb
jg
out
dec
sahf
scas
sub
dec
sub
rcrl
cmpsl
add
sub
fcoml
jb
hlt
sub
int
lea
adc
cmp
test
aad
jmp
out
std
in
in
adc
mov
popf
insl
push
mov
dec
mov
rclb
sbb
or
cmc
repnz
adc
mov
add
xor
js
fnstenv
aad
dec
addr16
outsb
cmpsl
cmpsb
mov
push
mov
cmp
mov
int
push
lret
cmp
mov
je
test
or
sbb
push
icebp
mov
fisubrs
cpuid
xor
pop
pop
cmp
fisttpl
xor
push
fdivs
scas
out
xchg
or
jae
sahf
pop
test
cmp
dec
mov
sub
ficoms
pop
xor
mov
scas
and
dec
out
xor
test
outsb
mov
daa
sbb
bound
jb
mov
add
jno
fnstcw
or
sub
leave
or
repz
sbb
pop
sti
mov
iret
mulb
xchg
jmp
jno
repz
inc
jb
fildl
and
fwait
popa
shll
pop
lods
pop
fisttpl
xchg
cwtl
cmp
mov
addl
jbe
sub
mov
insb
mov
outsl
adc
das
and
push
addr16
out
addr16
cmp
sub
add
pop
mov
inc
mov
adc
add
js
in
mov
inc
lcall
add
data16
cmc
loop
push
xor
stos
dec
pop
mov
stos
inc
packsswb
adc
xchg
ret
pop
push
fstpt
pop
nop
pop
push
jmp
dec
sub
sub
bswap
into
push
jne
sbb
mov
ret
cli
mov
mov
jecxz
mov
bound
enter
xchg
lods
pop
repz
out
inc
inc
mov
and
jecxz
test
jb
mov
add
mov
inc
in
popf
jmp
mov
inc
add
pusha
out
sbb
sbb
cltd
push
out
aam
cmp
or
push
jno
adc
cmp
popf
adc
inc
add
cwtl
scas
cs
sub
lods
ret
xchg
pop
insb
cli
cli
mov
mov
adc
cmp
hlt
adc
jne
and
rorb
pop
xor
cmp
scas
push
movsb
incb
or
mov
xor
cwtl
insl
into
lock
pusha
push
in
push
cmp
aam
sub
in
or
cmc
or
call
xchg
lock
imul
sarl
and
inc
mov
in
and
xchg
or
inc
pop
pop
push
ljmp
outsb
out
aad
in
mov
jl
cmpsl
and
xchg
pop
movsb
push
sahf
rcrb
and
fcmove
sbb
outsl
pop
lock
insl
xchg
inc
and
jl
cmp
lods
push
nop
imul
lahf
lcall
cmpsb
fs
std
xchg
int3
stc
push
and
or
cli
jge
je
push
out
xchg
mov
sub
dec
pop
pop
orl
je
mov
divb
xor
mov
push
fcmovnb
fdivrs
fcmovnu
push
fadd
push
or
movsl
lret
leave
jnp
inc
ljmp
sub
inc
clc
js
and
inc
xor
pushf
stos
dec
dec
in
movsb
loop
dec
loop
shrl
fxch
popa
ss
pop
rorl
jo
mov
and
mov
movsl
sti
js
and
icebp
push
stc
push
mov
sbb
push
in
lods
and
nop
repnz
cmc
jp
lcall
loopne
shrb
jg
push
push
add
pop
ja
fisttps
jno
aas
jg
cmp
int
in
insb
pop
push
or
in
mov
xor
ss
mov
push
enter
test
aaa
jo
dec
jge
aad
add
loope
push
xchg
sti
fildl
int3
sbb
and
fadd
adc
cmpsl
insb
test
cs
and
mov
add
mov
iret
pop
arpl
cltd
xlat
lds
out
je
dec
pushf
or
inc
xchg
dec
lahf
sub
pop
mov
cltd
mov
cs
jb
mov
jmp
mov
push
cmp
dec
std
dec
loop
xor
pop
mov
inc
xchg
jns
fidivrs
test
push
pop
cmp
or
cmpsl
jno
sbb
cmp
mov
lret
mov
inc
andl
adc
in
out
pusha
imul
jb
stos
jo
clc
and
stos
sub
das
lods
divb
sti
jle
lcall
test
aaa
mov
ja
inc
pop
in
push
and
mov
jmp
fmuls
out
xor
dec
push
push
data16
xor
mov
jmp
insl
push
jne
test
subb
lahf
mov
lock
cmp
push
xchg
jnp
dec
lea
repz
ret
push
aas
cltd
or
out
jle
push
sbb
cmp
sub
ds
sbb
into
cmpsb
mov
fimull
and
movsb
push
cmp
in
mov
adcl
cmp
icebp
mov
movsl
les
pusha
subl
fisttpll
fsubrs
in
arpl
xlat
pop
jmp
icebp
stos
adc
xchg
add
int
ljmp
in
mov
test
mov
inc
loope
test
leave
cltd
xorl
cmp
or
popa
xchg
push
xor
adc
in
push
pop
mov
repz
mov
fcmovb
sbb
sbb
add
and
push
jl
jmp
test
lret
imul
pop
mov
and
inc
jae
mov
push
push
mov
xchg
in
aam
imul
jns
sarb
xor
aaa
lea
xor
xlat
xchg
js
call
pop
or
cmp
cmc
xlat
mov
adc
adc
out
popa
inc
jl
pop
mov
jne
lret
and
lea
inc
lods
leave
lcall
sub
dec
xchg
test
mov
clc
scas
shl
adc
test
repnz
mov
cmpsb
sbb
ret
add
or
adc
mov
jbe
adc
pextrw
test
jmp
inc
and
dec
ds
clc
xor
outsl
push
pop
push
pop
cmp
jnp
js
adc
mov
std
jno
push
inc
das
sub
stos
or
fstps
mov
and
lods
popa
xchg
dec
push
loope
sub
loopne
and
das
lcall
jmp
gs
mov
sub
xor
mov
adc
lcall
pop
add
out
adc
je
nop
aam
test
movsb
adc
inc
dec
xchg
outsb
rcrb
mov
sbb
sbb
add
inc
xchg
pusha
sbb
or
cmp
sahf
cmp
jns
mov
fmull
leave
sahf
cmp
push
addps
repnz
cmp
add
pop
out
repnz
mov
mov
jl
popf
ds
adc
cld
and
into
popf
cld
outsl
adc
call
mov
je
leave
push
mov
test
push
lret
push
das
xchg
dec
ficoml
test
test
dec
pop
xchg
xorb
or
add
xchg
inc
jnp
xchg
dec
mov
gs
repz
mov
push
sub
test
ret
push
imul
dec
scas
out
push
cmc
movsb
icebp
mov
loop
ja
fldcw
in
lea
sub
or
push
jle
in
push
pop
fcoml
daa
dec
xchg
cltd
ss
xchg
pop
mov
out
lock
popa
sbb
sub
cld
data16
add
inc
bound
mov
cmpsl
popa
call
loope
cmc
push
les
cld
push
ret
test
in
insl
outsb
in
mov
lret
add
cli
sbb
iret
rcr
xor
mov
out
push
fdivrl
pushf
or
mov
pop
popa
sbb
xchg
mov
pushf
push
nop
fs
xor
dec
adc
inc
sahf
xchg
gs
mov
imul
stos
xor
out
enter
and
fadds
and
pop
mov
aam
test
scas
pop
lods
or
rol
adc
jne
pop
and
cmp
sahf
add
lret
stos
mulb
orl
dec
mov
rol
inc
cmc
mov
push
dec
adcb
outsl
addl
mov
mov
push
call
fists
push
lahf
jno
pop
push
xor
stos
in
and
scas
fidivrs
pop
add
aad
dec
lock
mov
inc
lds
test
lods
loope
popf
popw
fildl
xchg
mov
inc
mov
lock
pushf
xchg
imul
jmp
add
outsl
and
or
pop
xchg
outsl
jmp
jecxz
add
xchg
je
fwait
xor
and
int3
xor
popf
lock
cmp
sahf
jmp
insl
mov
adc
xchg
adc
mov
loope
sub
aad
mov
jmp
xchg
mov
lods
out
sub
and
sub
loop
mov
inc
dec
mov
jo
mov
fucomi
xchg
fistl
pop
cmpsb
movsl
pushf
sbb
pop
add
and
pop
sbb
repz
dec
frstor
inc
inc
mov
cmp
ljmp
xor
repz
lock
mov
in
nop
fdivrs
lods
sub
cmp
inc
push
jnp
sbb
sub
shr
jns
frstor
dec
in
cmpsl
xchg
jle
mov
ja
and
xchg
inc
push
mov
or
sti
push
or
rcrl
loop
pop
dec
and
arpl
jno
pop
sub
inc
les
aas
add
xor
lret
dec
orl
mov
add
lods
pop
pushf
repnz
inc
into
mov
addr16
mov
mov
sub
out
xor
out
scas
cmpsb
rcll
mov
dec
mov
or
pop
in
mov
dec
stos
je
and
jo
xor
mov
push
in
xchg
jno
je
mov
adc
scas
adc
rcrl
push
imul
push
mov
or
inc
dec
push
push
push
xor
les
imul
and
enter
add
daa
mov
loopne
scas
mov
ficoml
nop
jecxz
mov
sub
add
jge
das
cwtl
lock
or
js
adc
mov
int
sub
add
fnstcw
mov
xchg
stc
movsl
add
sub
and
aaa
in
push
xchg
xlat
push
xchg
push
outsb
inc
sub
fisubs
rolb
fsubrs
pop
cmc
test
aam
jmp
js
push
cmp
lcall
nop
and
in
xor
push
inc
push
aas
pop
pop
gs
aam
pusha
inc
mov
inc
sub
loopne
mov
inc
jmp
xor
push
enter
pushf
sub
das
dec
push
jo
mov
imul
mov
pop
mov
adc
jecxz
fucom
test
sub
push
mov
mov
int3
push
mov
ret
jl
ficompl
jle
dec
and
ss
xchg
xlat
sub
dec
cmp
scas
bnd
and
ss
sahf
mov
es
cld
insl
idivl
and
call
repz
daa
mov
incb
xchg
sbb
jle
push
push
out
sub
jno
call
lods
dec
add
jns
jge
mov
xor
orl
nop
rolb
sub
test
adc
jb
dec
jp
mov
iret
inc
jl
in
add
and
imul
mov
fnclex
pop
sbbl
and
out
pop
pop
aad
loope
out
xor
adc
sbbl
leave
push
jle
nop
or
push
sub
shll
sbb
lds
xlat
sbb
sbb
lcall
out
mov
pop
and
int3
ffreep
jg
cmova
lret
jecxz
test
pop
dec
inc
push
sbb
cs
mov
loopne
push
aas
or
shll
cmpsl
ss
mov
xor
scas
mov
or
dec
scas
and
les
fimuls
mov
inc
inc
loopne
or
push
jne
sub
xlat
xorl
jge
popa
mov
cmpps
in
jle
ret
scas
push
fnstsw
test
ljmp
cmp
sub
lock
mov
mov
ret
je
lock
popa
sbb
jnp
xchg
aad
fldt
arpl
adc
call
jne
adc
adc
cmp
shlb
pop
jle
clc
call
aaa
mov
mov
push
adc
xor
fwait
jo
add
mov
pop
adc
adc
xchg
enter
shlb
xchg
call
je
mov
or
out
sahf
roll
ds
mov
lcall
mov
mov
out
push
je
aas
lds
adcl
loope
pop
sbb
stos
fisttps
xchg
sti
mov
inc
scas
xor
mov
addr16
jno
cmpsb
inc
or
sbb
cwtl
jns
mov
lahf
imul
test
mov
mov
fsubl
and
mov
mov
xchg
mov
push
stos
push
lods
fstpt
inc
dec
push
push
rol
test
or
sub
jbe
ja
cs
pop
lcall
jne
cmpsb
imull
push
aam
jmp
cmp
sbb
pop
call
insb
mov
pop
lcall
hlt
mov
cmp
rorb
push
inc
xor
cmp
jno
mov
and
js
sub
scas
pop
xchg
leave
jne
shlb
xchg
lods
inc
push
push
dec
dec
add
sub
add
movsb
dec
bound
xlat
cmp
enter
mov
push
fisttpll
xor
subl
in
out
insb
rolb
lds
add
iret
enter
lea
incb
sub
mov
sub
pop
xorb
adc
add
fsubs
adc
jecxz
xor
int
or
mov
mov
mov
shrb
pop
pop
mov
dec
daa
stc
sbb
xchg
inc
fsubl
sub
pop
add
xor
sub
add
pop
cwtl
mov
subb
mov
mov
inc
jns
sbb
adc
adc
out
pop
lret
ret
xor
loop
cwtl
addl
fmull
andb
or
pop
and
sbb
xchg
push
sbb
idivb
cltd
or
xor
lods
add
bnd
and
add
popf
inc
jns
daa
xchg
gs
icebp
mov
sub
jo
and
dec
adc
test
xor
fs
jno
rclb
mov
mov
adc
xor
das
inc
popf
std
add
jbe
add
idivl
sub
in
jg
popf
fldenv
pop
mov
push
jg
push
sbb
in
roll
je
sbbl
or
loopne
inc
pop
inc
mov
iret
addb
mov
mov
loop
fstpt
mov
xor
out
ja
push
cmpsb
out
sub
push
fucom
or
jne
rorb
dec
repz
movsb
shlb
inc
sbb
sahf
sub
imul
lret
stos
mov
repz
pop
jns
fwait
outsb
xor
push
push
lret
mov
sbb
pusha
xor
into
ds
test
xor
add
adc
jg
mov
loope
mov
lods
add
sub
add
sbb
push
add
out
lods
stos
push
inc
mov
pop
push
inc
aaa
clc
mov
push
add
xchg
pop
cwtl
mov
push
mov
sahf
cmp
aas
bound
xlat
pushf
push
mov
mov
push
xchg
xor
mov
in
mov
push
sub
mov
leave
dec
cmc
adc
push
jns
and
cltd
inc
adc
and
je
popf
sbb
gs
je
jbe
pop
cmp
lret
test
and
out
cmpsb
jbe
inc
insl
sub
pusha
push
js
jecxz
jmp
xchg
mov
stos
daa
jp
sti
adc
pop
jecxz
in
or
xor
stos
pop
loop
dec
or
aad
and
mov
push
add
mov
int
jecxz
iret
xor
push
ja
sbb
vsubpd
mov
xor
fwait
out
sub
inc
aaa
hlt
cmp
in
int3
ljmp
insl
aas
push
cltd
lret
jae
test
and
enter
jae
notw
mov
jns
push
test
push
sub
cmp
aaa
es
or
iret
push
fildll
mov
jnp
xchg
sar
out
mov
pop
or
and
lods
mov
jp
std
popa
inc
call
pop
and
xchg
and
inc
and
sti
xchg
mov
cwtl
hlt
movsb
push
xor
movsl
add
cmc
mov
sub
sbb
sbb
jnp
cmpsl
xchg
shl
mov
xchg
mov
fs
mov
stc
sti
sub
in
lea
and
pop
out
or
and
dec
lods
sahf
outsl
lds
sub
ja
pop
mov
arpl
stc
inc
push
sub
sub
je
and
pusha
ret
jl
inc
inc
mov
cmp
push
pop
icebp
sub
xchg
rorl
jg
mov
mov
or
das
and
leave
mov
test
aas
test
jp
xor
loop
jns
jl
imul
sar
out
inc
and
dec
fwait
repz
push
fmuls
pop
lret
xor
mov
fsubrs
sahf
mov
mov
popf
xchg
jo
lods
in
pusha
rolb
dec
dec
or
xchg
xchg
sub
je
pop
and
out
mov
into
lods
shlb
jbe
lock
sti
arpl
push
lret
std
aas
hlt
lcall
mov
inc
xor
out
dec
test
sbb
fdivrp
js
rclb
je
mov
add
sbb
roll
jge
in
in
adc
loope
cmpsb
pop
daa
testb
mov
mov
rcrl
pusha
call
dec
pushf
imulb
das
dec
jl
bswap
add
pop
ja
mov
test
or
xchg
push
mov
xchg
fldenv
icebp
aad
cmp
int
pusha
in
jmp
movsl
and
push
or
les
mov
call
cmp
or
inc
dec
ss
cmp
mov
mov
outsb
jg
lds
insb
aad
aas
lds
sahf
pop
jecxz
add
push
mov
jns
sbb
or
mov
das
cmp
iret
scas
lret
into
push
ja
mov
push
push
mov
inc
mov
cmp
cmp
cmp
xchg
xor
or
int3
pop
adc
jns
cmpsl
jg
pop
pop
and
negb
movsl
or
fsts
insl
in
in
and
sub
lcall
jecxz
pop
call
lcall
lcall
or
push
lcall
pushl
and
ja
ret
sbb
jecxz
xchg
mov
push
inc
out
nop
movsl
xchg
mov
movsb
or
cmpsl
jae
fs
in
jne
jns
xor
cmp
je
mov
int3
aaa
push
dec
mov
leave
call
stc
ret
lcall
push
icebp
ss
lods
lahf
loope
scas
xchg
mov
xor
adc
enter
sub
xor
sbb
popa
jecxz
in
cmpsl
arpl
bound
clc
pusha
cmc
lcall
pop
dec
cmp
mov
test
and
stos
sbb
imul
fisubrs
call
push
pop
dec
dec
dec
rolb
push
jbe
inc
sti
test
movsl
push
adc
xchg
addl
in
xchg
cmpsb
fsts
pop
js
cli
repnz
test
test
fdivl
out
and
int
push
dec
das
pusha
in
pop
cli
lods
imul
nop
dec
mov
lret
push
ljmp
inc
fs
mov
mov
fwait
mov
mov
mov
xchg
andl
repnz
push
jb
ds
and
inc
cmp
shrb
rclb
lcall
or
bound
inc
mov
xor
repnz
lods
incb
or
aam
mov
sbb
xchg
aam
mov
sar
xchg
stos
xor
fwait
lcall
mov
lock
fdivrs
cmp
test
xlat
or
inc
es
fdivl
into
inc
mov
jnp
je
rolb
push
cmp
add
and
mov
cld
push
repnz
popa
es
lea
and
push
mul
dec
jl
mov
aas
jecxz
mov
imul
push
cltd
add
cwtl
lea
insb
and
test
mov
mov
sub
fbstp
xor
scas
jmp
rorb
out
inc
xor
rorb
cmp
sub
popf
test
fwait
dec
lcall
adc
or
fdivs
push
jmp
lahf
scas
add
or
jl
inc
or
fnstcw
aam
fmull
pop
repnz
cmp
push
add
shll
xor
cmp
push
xchg
xor
filds
xor
scas
and
lret
and
jno
ss
mov
xor
mov
stc
mov
add
out
movsl
lret
add
insl
stos
cmpsl
sub
mov
cli
and
xor
dec
xchg
int3
xor
andb
lock
push
pop
mov
dec
ret
imulb
test
movsl
rorb
pop
ret
js
xor
hlt
jns
imul
addr16
jmp
dec
sub
and
clc
enter
pop
inc
adc
bound
push
fs
or
sbb
imul
jae
push
addr16
jg
push
mov
sbb
dec
cmp
popf
repz
arpl
pop
mov
xlat
pop
lret
test
insb
ja
mov
sbb
push
xor
push
loope
sub
adc
xchg
out
roll
sbb
mov
mov
adc
push
bound
stos
into
mov
sub
inc
cmp
xor
sbb
add
aas
mov
pop
arpl
std
cmpl
cld
jne
lahf
cmp
clc
mov
and
pop
sub
bound
shrl
and
fs
movsl
pop
and
data16
sbb
or
sub
addl
mov
outsb
js
test
negl
push
aas
mov
popf
int3
repnz
adc
loope
out
xor
mov
aas
aam
test
jl
jbe
pusha
ds
add
cmp
cmp
aad
push
xor
lcall
cwtl
push
call
ljmp
in
xchg
xor
jp
jg
cmp
pop
mov
js
shlb
xchg
lds
add
mov
sbb
add
add
stos
pushf
cmp
cmc
pop
add
mov
stos
les
xchg
mov
idivb
add
xchg
outsb
int
cli
ja
gs
jb
ljmp
add
adc
rcrb
loop
push
sbb
roll
inc
or
loope
sub
mull
int3
xor
icebp
and
out
out
lock
mov
xor
sub
dec
mov
mov
fisttps
add
cmp
je
lahf
push
mov
xchg
icebp
dec
dec
loopne
xchg
sahf
mov
cmp
fisubrl
loope
and
mov
lret
adcl
fistl
enter
push
aam
mov
mov
fs
pop
gs
fwait
cmp
pop
cmp
xorl
idivb
mov
cs
int
lods
sub
push
xchg
popa
test
lret
nop
divb
adc
mov
shr
jmp
mov
xor
xor
repz
cltd
out
pop
push
inc
rcrb
lret
xchg
leave
jbe
in
push
add
repz
jmp
into
call
push
test
mov
inc
jb
lods
shrl
fisubs
out
ljmp
movsl
or
xlat
push
mov
out
xchg
push
hlt
xchg
dec
and
shrl
and
xchg
inc
pop
daa
cli
cli
icebp
icebp
inc
xor
xlat
xchg
dec
sbb
mov
stos
push
orb
dec
jbe
mov
lock
mov
xchg
cmp
sub
dec
pop
push
fiaddl
push
sbb
mov
jae
dec
and
mov
lahf
inc
out
inc
cmp
and
or
dec
mov
mov
mov
nop
pushf
aaa
xchg
jg
les
ret
lods
stos
push
rcrl
sub
xchg
mov
cmpsb
adc
cmp
dec
inc
mov
sub
jne
stc
je
inc
fildl
testl
pop
aad
faddl
dec
aam
fdecstp
out
push
jecxz
out
out
and
loopne
mov
popf
add
mov
enter
cmp
rclb
cmp
or
neg
test
icebp
xchg
xchg
xchg
adc
dec
cmp
xchg
scas
pop
shll
inc
inc
pop
daa
push
and
sub
bnd
lods
into
jmp
adc
jne
pop
add
outsb
jne
popf
mov
inc
notl
sbb
push
roll
stc
xchg
add
xchg
repnz
test
xchg
imul
xchg
lret
push
mov
add
mov
jle
dec
jmp
adc
adc
sti
jecxz
stc
rcll
cld
movsb
add
xchg
fisubrs
push
gs
in
es
inc
and
inc
dec
push
push
pop
adc
jle
movsb
pop
dec
jae,pn
mov
popl
dec
push
test
jmp
fisttpl
pusha
cmp
lret
push
icebp
rorb
or
stos
push
lock
fcoml
dec
push
sbb
xchg
gs
add
mov
adc
push
jnp
pop
mov
mov
andb
sbb
sbb
sbb
sbb
in
popf
mov
enter
popa
mov
or
adc
lahf
stos
ret
aad
mov
dec
sbb
sbb
cmpsl
mov
and
mull
movsb
fneni(8087
outsb
hlt
cmp
cmp
push
mov
rcll
out
insl
cld
push
rclb
loopne
mov
pop
cmc
cs
and
sub
fwait
pusha
xchg
inc
sahf
cmp
repnz
cli
idivl
orb
out
pushf
stos
fwait
fdivs
jle
inc
aaa
adc
int
jbe
sbb
ljmp
xchg
jmp
add
push
ror
xor
push
dec
add
sbb
or
xor
jg
sbb
loope
xor
sbb
push
pop
frstor
fisubrs
pop
pop
mov
sub
mov
shll
push
xchg
inc
lds
out
xor
mov
mov
gs
cli
nop
popa
add
fs
mov
out
fsubrp
sub
cmpb
lea
andl
movsl
insl
lret
jo
cmp
mov
lods
cmpl
push
mov
jns
cmpsl
pop
pop
lret
les
out
and
lds
out
xor
loop
mov
jo
repz
sub
stc
mov
xor
jge
ljmp
mov
xchg
xchg
sbb
inc
shll
jle
cltd
clc
dec
les
adc
imulb
xor
mov
push
scas
dec
dec
xor
hlt
dec
push
incl
mov
das
and
and
inc
lret
pmovmskb
in
fs
pop
pop
js
jns
cmp
dec
sub
sub
sub
orl
sub
jl
jl
fisubl
insb
loope
sub
loop
xchg
mov
sbbl
flds
jno
add
pop
sub
in
add
dec
jns
imul
adc
xchg
js
loop
in
out
adc
rcrb
aaa
mov
mov
fimuls
cs
lea
and
cwtl
or
cli
adc
push
pop
mov
stc
cmc
addr16
sub
pop
es
shlb
in
das
mov
cltd
add
cli
scas
and
movsb
loope
out
in
andb
mov
xchg
cltd
into
mov
sbb
pop
sarl
pop
mov
call
sub
mov
popf
push
ret
jae
popf
rcrb
call
cmp
cmc
mov
and
xchg
or
lea
gs
push
in
push
outsl
jl
xchg
popf
mov
mov
jp
je
pop
rcr
scas
xchg
imul
or
or
xchg
repz
outsb
add
jp
imul
icebp
adc
and
jbe
movsl
lcall
into
fsubrs
jne
aas
cmpsl
or
test
jle
sub
dec
ds
jl
stc
or
dec
pop
mov
mov
repz
add
sbb
incb
test
cmpsl
pop
sar
inc
push
cltd
sbb
add
mov
inc
sub
scas
pop
mov
negb
xlat
das
dec
mov
je
bound
add
push
jge
push
push
test
adc
test
les
dec
push
inc
jae
cmp
shlb
lea
int3
sbb
pop
push
xchg
repnz
adc
sub
or
jno
pop
sub
adc
dec
sbb
in
mov
gs
iret
repz
dec
icebp
cmc
loopne
fildl
loopne
inc
dec
nop
sbb
std
flds
testb
frstor
icebp
mov
int3
mov
push
or
test
sbb
rolb
arpl
and
outsl
lods
pop
stos
mov
pop
push
lcall
xchg
jle
xchg
and
aam
fbld
lods
out
loopne
sub
imul
data16
or
mov
stos
sbb
xor
cmc
sbb
sub
enter
idivb
movsl
lds
adc
js
ret
scas
inc
aad
sub
mov
pop
ds
sub
cmp
cmp
in
adc
xchg
xchg
mov
xchg
xlat
xor
mov
pop
lcall
xchg
insb
aad
movsb
lcall
mov
icebp
test
mov
test
lods
cmpsb
sbb
jne
cli
xor
pop
xchg
fcoml
dec
xor
insb
andb
jg
pop
mov
inc
inc
push
in
sbb
icebp
ret
inc
popa
jecxz,pn
xrelease
fwait
addb
adc
inc
add
adc
inc
or
and
and
xchg
divb
hlt
xlat
ja
adc
test
data16
jge
lods
mov
push
inc
aam
cmc
xchg
push
jne
popa
mov
lret
iret
sti
xor
lahf
pop
in
xchg
sub
shrl
into
aas
movsl
cwtl
jbe
push
mov
scas
mov
mov
jo
sbb
addr16
cmp
sbb
xchg
lods
iret
cmp
vpcmpgtw
std
sbb
inc
lcall
mov
loop
sti
pushf
push
fstpt
push
fnstenv
xchg
push
lds
lods
jnp
pusha
dec
stos
iret
mov
stos
xor
mov
ja
push
mov
xchg
hlt
mov
xchg
add
jp
fstps
lret
and
xchg
repnz
xor
ret
icebp
adc
lods
jne
pop
xor
dec
xor
mov
inc
sub
cmpsl
jmp
sbb
pop
psllq
movsb
or
movsl
ret
dec
jl
imul
ret
pop
mov
inc
xor
mov
jg
jae
adcb
lds
jb
pop
in
iret
fidivs
outsl
xlat
lods
cmp
adc
push
inc
adcl
popa
divb
fcoml
xchg
lahf
and
aam
data16
mov
inc
lods
lahf
movsb
roll
call
push
sbb
fnstcw
jge
out
dec
mov
mov
xchg
inc
lea
roll
sti
adc
push
pop
ja
lcall
xlat
push
sub
dec
cmc
les
jp
stos
xor
mov
outsb
and
adc
xchg
test
sub
pop
add
nop
xor
in
cmpsb
sti
ret
mov
adc
sbb
add
mov
xor
sahf
and
mov
cmp
sbb
or
mov
pushf
cwtl
arpl
in
xchg
lret
lret
mov
push
mov
dec
jge
cmpl
insl
cmp
xor
add
in
movsl
adc
xlat
push
xor
out
loope
fwait
mov
cmpsl
and
aam
push
and
push
push
flds
sbb
ss
push
adc
popa
push
lods
cmp
jo
in
adc
test
fisubrl
in
mov
daa
js
adc
mov
mov
mov
push
xchg
push
ret
xchg
js
dec
stos
jmp
aam
in
xlat
push
xor
and
adc
loop
lahf
lea
sub
fwait
mov
mov
adc
aad
lds
mov
push
shlb
rcrb
xchg
jmp
stc
daa
push
and
cmp
push
push
cmp
test
xchg
subb
cli
xchg
in
mov
call
lret
push
push
sarb
or
ja
in
insb
mov
lods
faddl
leave
add
xor
push
outsb
sbb
cmp
arpl
ret
cmp
or
sbb
ror
sub
loop
add
push
and
xchg
js
scas
xchg
pop
xchg
pop
push
cmpsb
push
pop
jecxz
shl
icebp
lods
aad
ret
or
add
cmc
cs
mov
out
jae
jo
push
rcl
xchg
lds
xor
mov
pop
stos
scas
test
loope
and
adc
rorb
insl
nop
es
xor
adc
mov
test
mov
jns
shll
or
xchg
out
xchg
in
mov
push
movsl
xchg
xchg
negb
addr16
lret
fs
sbb
add
scas
sub
jmp
fidivrl
arpl
insl
lods
or
inc
xchg
mov
mov
shrb
inc
int
int
in
shlb
fsubrs
test
dec
adc
or
push
jp
inc
mov
mov
or
outsl
mov
add
pusha
aaa
adc
popa
mov
outsb
dec
or
btc
sbb
or
cmp
inc
fcmovb
lcall
ret
sub
in
lds
mov
bound
test
xchg
cs
sbb
or
mov
lock
cmc
and
lock
cmpsl
mov
mov
stc
enter
mov
out
nop
pop
rcl
mov
adc
lea
push
mov
in
mov
repnz
nop
inc
sub
dec
int
jne
jns
je
fwait
jmp
jae
mov
dec
aad
mov
aam
mov
or
jns
loopne
loopne
xchg
ret
jle
xchg
add
sub
rolb
mov
cmp
and
pop
sahf
lcall
fcomps
scas
jecxz
fiadds
daa
test
negb
loope
in
mov
mov
mov
repnz
mov
sbb
out
jns
xchg
out
mov
mov
push
push
lahf
xchg
sbb
sahf
jp
out
xchg
imul
jne
or
les
in
notl
cmp
lea
nop
je
outsb
xchg
mov
lret
outsb
js
adc
jl
or
lock
movsl
shll
mov
pop
adc
push
loop
call
outsl
mov
sti
mov
stos
xor
adc
icebp
add
pop
dec
jl
fcomi
fs
scas
mov
jns
mov
cmpsb
stos
out
and
jno
dec
ljmp
arpl
sti
call
mov
clc
outsb
xchg
cmpl
imul
cmp
xor
ss
inc
lea
out
notl
mov
cmpsb
dec
orl
dec
loope
mov
or
pop
jnp
and
insl
or
jecxz
lods
lods
loopne
jne
lret
or
mov
xchg
into
and
in
call
cmpsl
push
mov
test
adc
loope,pt
testb
ds
mov
mov
mull
dec
add
out
add
aas
cwtl
mov
and
or
idivb
stc
lret
into
pop
negb
push
in
mov
mov
lahf
sbb
jae
in
cmp
cwtl
xchg
mov
fs
dec
dec
fsts
inc
aam
mov
popa
shrb
cmp
out
jno
test
mov
mov
xorl
jp
movntq
out
hlt
xor
mov
loopne
inc
lock
leave
ljmp
cmp
xchg
imul
sub
leave
jecxz
orl
xor
mov
sbb
popa
inc
scas
add
pop
cmpsl
jbe
fisubrs
bound
adc
repz
inc
xlat
cmp
sbb
push
push
inc
fsub
sbb
xor
roll
cmp
loope
and
je
ror
ja
dec
test
out
adc
or
insb
fisubs
jmp
insb
adc
scas
adc
ret
dec
sub
jmp
addr16
cmc
xor
dec
and
pushw
jp
sub
aaa
movsb
inc
sub
popf
push
jp
sti
sbb
sbb
data16
mov
adc
in
ss
or
jno
out
jns
push
pop
stos
jmp
rcl
mov
inc
int
add
pop
cmp
movsl
mov
xor
adc
inc
sub
pop
dec
mov
cs
outsb
add
sahf
mov
pushf
shll
inc
jno
test
xor
shll
stos
loopne
fnstcw
inc
pop
hlt
pushf
jno
in
lock
push
pop
out
cltd
stos
jge
jns
es
fdivs
int3
jg
xchg
pop
imul
outsb
ss
xchg
dec
stos
inc
lret
mov
mov
inc
xchg
shll
xor
or
orl
xor
fcompl
out
push
inc
fs
dec
adc
cmp
mov
int
fldcw
and
scas
dec
stos
jbe
dec
loop
jbe
xlat
pop
pushf
sub
inc
xchg
sbbb
xchg
adc
inc
mov
or
insb
cli
push
je
cmp
cmp
and
cmp
sbb
or
dec
xlat
push
dec
scas
fwait
mov
sbb
mulb
lret
or
pop
in
clc
cmpsl
jae
push
pop
repnz
repnz
xchg
dec
loope
cmp
popa
mov
loopne
dec
jbe
pushf
mov
jae
movsb
push
flds
arpl
xorb
aam
xchg
cmpsl
xor
enter
jb
sahf
inc
mov
popf
nop
fisubs
add
cmp
shlb
mov
mov
lea
mov
or
adcb
mov
add
adc
adc
shlb
mov
out
lcall
stos
adc
scas
pop
in
add
sub
enter
arpl
dec
add
xor
cwtl
mov
fadds
mov
call
xchg
mulb
scas
outsb
jge
dec
scas
in
push
faddp
or
lea
dec
call
enter
dec
cmc
sub
iret
mov
xchg
imul
cmp
scas
mov
insl
mov
ds
pop
test
lods
jnp
cmp
test
cmp
mov
dec
pop
insb
imul
add
cmp
cmc
xchg
xor
dec
adc
lret
add
mov
sbb
xor
daa
jl
daa
cwtl
adc
xor
popf
loope
pop
add
ret
lahf
icebp
sti
adc
clc
imul
cmp
pop
sbb
je
adc
call
ljmp
or
pop
mov
lods
xor
pop
jg
lea
dec
fsts
pop
mov
hlt
pop
mov
sbb
loopne
into
ss
and
cs
xlat
jg
fwait
cli
in
mov
dec
cmpsl
sub
inc
dec
add
fdivr
inc
ret
test
and
xchg
inc
mov
aad
ss
jb
sbb
ret
pop
mov
inc
jmp
xor
mull
inc
add
out
push
dec
fsubl
sti
js
cmp
sbb
jmp
fnstsw
and
pop
xchg
push
dec
lods
cld
inc
movb
in
xchg
fildl
jle
pop
sbb
les
insl
xor
test
sub
xor
or
movsl
ret
xchg
sub
mov
adc
ret
in
sub
mov
movsl
dec
sub
fsubl
shlb
sub
sbb
movsl
jb
in
nopl
cld
out
aad
xor
leave
aad
pop
mov
js
mov
mov
dec
mov
mov
inc
push
jecxz
mov
into
scas
test
imul
add
sbb
popl
aas
or
jno
rcrb
mov
sbb
punpcklwd
icebp
push
pusha
lods
cld
shll
imul
repnz
add
mov
push
leave
sbb
cwtl
jmp
aad
add
ja
xchg
js
xor
jae
sub
mov
jge
out
jg
cmpsb
test
dec
xchg
cmp
gs
data16
repz
add
inc
ds
dec
hlt
ss
pusha
ret
add
icebp
arpl
mov
jge
js
xlat
scas
pop
dec
inc
divl
and
add
popf
dec
lret
push
dec
imul
lret
pop
call
mov
adc
ret
outsb
cmp
mov
mov
sub
loopne
xor
shlb
xor
ljmp
loop
mov
imul
xor
adc
and
outsl
cmp
xchg
xchg
lahf
outsl
adc
cmpl
mov
cmp
cmp
mov
push
rcl
in
dec
cmp
inc
arpl
push
push
fsubrp
add
ret
jg
iret
stos
or
outsb
leave
inc
cld
cmc
xchg
mov
iret
pop
xor
mov
jno
jns
cltd
ss
add
fnstsw
dec
imul
test
cmp
mov
and
adc
cwtl
loop
daa
or
lahf
mov
repz
test
lcall
rcr
push
pop
loope
push
scas
out
in
xchg
push
in
mov
les
ljmp
ret
shlb
or
iret
fcmovb
stos
mulb
mov
imul
fldenv
decl
inc
push
das
jo
mov
xor
aas
cmpsb
iret
int3
and
and
push
rcrl
jb
xor
pop
mov
sbb
jb
cwtl
vmovss
adc
dec
mov
push
outsb
pop
add
sub
sub
jns
jne
inc
divb
mov
lcall
inc
push
in
xchg
imul
add
scas
sbb
dec
aas
cli
mov
dec
int3
pop
js
mov
loop
insb
push
push
xchg
cltd
adc
das
iret
push
cld
xor
mov
and
jg
in
push
rorb
shl
push
adc
testl
mov
sti
xchg
lcall
lods
pop
gs
mov
mov
pop
scas
xlat
pop
and
sub
push
push
sbb
mov
pop
pop
pop
add
test
inc
es
inc
cmp
cld
test
pop
repz
xor
movsb
enter
stos
push
enter
jg
mov
pop
cmc
xchg
xchg
cmp
pushf
pop
add
adc
fdiv
adc
or
daa
mov
lret
les
mov
hlt
sbb
adc
aas
movl
xor
pop
in
add
cld
cwtl
int3
pop
test
lcall
js
adc
clc
int3
push
aas
xchg
dec
scas
xor
imul
jo
push
inc
pop
imull
pop
and
lea
call
push
ds
pop
cmp
orb
push
mov
decb
add
ljmp
mov
loopne
mov
pop
out
fnstenv
cs
or
cli
out
xor
ja
xorl
push
push
mov
inc
aas
rclb
inc
xchg
inc
or
stos
sub
push
and
in
cmpsb
xchg
js
pop
in
xor
jge
lds
dec
fwait
add
sti
push
int3
cmpsb
shlb
punpckhbw
push
sub
fdivrs
idivl
cmp
or
mov
push
roll
inc
add
jge
hlt
imul
xor
mov
mov
aaa
xor
outsl
in
or
xorl
pop
mov
arpl
lea
jno
or
mov
cld
dec
call
scas
mov
push
mov
fdivr
sub
fwait
xchg
dec
xchg
sbb
sbb
into
popa
ss
pusha
loopne
push
dec
mov
or
xor
shll
sbb
imul
jle
push
mov
mov
lahf
pop
inc
out
cmp
xor
scas
sub
das
cmp
call
dec
ja
or
push
or
push
xor
mov
jae
push
xor
inc
adc
sbb
daa
jo
lcall
pop
test
pop
int
jp
fnstsw
scas
xchg
fstps
lods
mov
repnz
mov
lahf
mov
xor
sbb
push
pop
mov
iret
test
push
jbe
mov
push
add
push
stos
xchg
pop
test
adc
push
mov
mov
xchg
xor
jbe
lods
arpl
cli
mov
push
inc
mov
sbb
and
stos
dec
mov
mov
sub
adc
sub
or
mov
shrb
sub
fcoml
xor
or
xor
je
jecxz
cli
add
in
xchg
cmp
jmp
jge
in
ds
les
call
push
mov
sti
add
fiadds
insb
fwait
jmp
sbb
xor
lret
int3
pusha
leave
fisttpll
stos
clc
inc
and
jecxz
dec
fcomip
sbb
cltd
imul
or
xorb
outsl
cld
imul
push
es
repz
cmc
fwait
adc
lcall
gs
iret
xor
aas
cmp
push
leave
iret
push
pop
iret
mov
jmp
cmpsb
leave
cmpsb
lds
sub
pop
movsl
jge
in
andb
popf
mov
xor
mov
jl
outsb
push
cmc
push
inc
xchg
xchg
out
mov
lcall
dec
mov
in
push
into
cli
dec
loop
rorb
aam
leave
jbe
push
test
cmp
xor
xchg
and
or
shlb
mov
loop
pop
jne
popl
popa
pop
ret
cmp
scas
push
in
xchg
push
test
stos
into
pop
dec
fdivl
mov
cmp
stos
rol
ret
cmp
jno
filds
or
outsl
xchg
inc
or
gs
sbb
jbe
inc
cmc
ror
or
or
call
sub
test
jmp
push
adc
mov
lea
and
fcmovne
xchg
xlat
inc
cld
lock
into
loop
jp
push
jns
je
mov
ret
flds
es
jo
std
fnstenv
lahf
in
push
cmp
scas
sbb
inc
cmpsl
adc
sahf
out
pusha
mov
or
lret
xchg
sub
pop
shlb
and
mov
adc
movsl
movsb
icebp
xchg
cwtl
shl
shll
mov
out
inc
cmp
ljmp
and
test
jecxz
mov
mov
add
jecxz
and
push
push
arpl
cmpsl
or
sbb
inc
sbb
lea
jl
sbb
push
xlat
adc
pop
adc
mov
sbb
xlat
outsl
scas
adc
jmp
popf
dec
cmc
xchg
push
scas
mov
ds
pop
push
inc
jns
pop
jl
push
lods
push
jmp
sbb
and
orb
add
aas
aaa
jns
addl
popa
push
stc
adc
jbe
push
pop
xchg
call
xchg
daa
call
jmp
rorl
idivb
and
pop
and
test
dec
mov
and
test
push
add
dec
xor
add
outsb
jmp
or
jmp
mov
enter
dec
push
test
xchg
movsl
xlat
inc
cmp
adc
or
rcrb
sub
bound
sub
sbb
pop
mov
roll
outsb
jp
loop
gs
into
lcall
shufps
test
push
mov
adc
sbb
out
mov
and
outsb
jae
push
xchg
into
mov
das
xor
lahf
xlat
and
mov
cmp
ljmp
flds
xchg
pop
out
ds
scas
xchg
push
imul
push
mov
and
jne
push
pop
std
std
ret
or
sub
sbb
sarb
call
mov
inc
dec
in
popl
or
out
pop
and
mov
ret
ljmp
jne
aaa
imul
push
inc
in
mov
movsl
cmp
jg
pop
and
nop
call
test
cmc
add
sub
push
xchg
xor
dec
dec
cmpsl
in
stos
pop
mov
dec
mov
jns
and
mov
outsl
and
shll
frstors
jge
aaa
imul
sbb
hlt
pop
enter
ljmp
fcomps
sbb
call
pop
lds
mov
add
xchg
sub
mov
lret
mov
add
mov
es
mov
jne
movsl
xchg
xor
fs
xchg
mov
xor
pop
nop
pop
test
and
adc
push
sarb
enter
xchg
dec
xchg
imul
xchg
sti
test
popa
push
lea
and
dec
in
loop
mov
push
inc
jbe
or
je
lods
out
dec
out
mov
sub
mov
lcall
pop
stc
sbb
movsl
push
mov
mov
jmp
inc
lcall
inc
jns
inc
inc
lahf
pop
test
xchg
aam
mov
mov
clc
in
jecxz
push
int3
in
jle
add
inc
daa
push
adc
lds
outsb
arpl
or
sar
idivb
scas
and
sub
ret
les
movsl
sbb
xchg
hlt
rolb
jnp,pt
and
ljmp
pop
cmp
mov
xor
int
cmp
sub
mov
std
fstps
cmpsb
adc
push
jnp
or
not
xorb
adc
sbb
arpl
adc
testl
adc
incb
mov
fimuls
mov
push
icebp
fwait
aaa
filds
mov
xchg
and
test
cmc
inc
sti
std
xchg
xchg
jl
repz
pop
cltd
sbb
out
int
sbb
dec
add
arpl
fbstp
push
loope
adc
mov
jp
or
nop
mov
sub
mov
xor
and
mov
test
in
inc
push
mov
add
mov
inc
les
mov
imul
stos
in
lret
xchg
mov
icebp
mov
sub
adc
wbinvd
hlt
dec
fdivs
cmp
dec
shrb
xchg
and
xchg
push
and
loope
ss
xor
inc
push
xor
pop
inc
or
mov
mov
sbb
push
and
fdiv
and
and
jecxz
or
pop
mov
and
and
lods
mov
es
lret
addr16
or
dec
stos
sbb
in
std
jo
jmp
arpl
push
imul
sbbb
std
lret
or
xor
pop
push
push
sub
add
in
lds
and
test
in
jle
mov
sbb
inc
out
faddl
fstps
push
push
xor
add
stos
and
lahf
js
mov
lret
in
jae
push
push
jae
insb
sbb
and
je
es
adcl
test
repnz
stc
sbb
xor
pop
loop
mov
aaa
ret
cmc
xlat
cmp
sbb
ret
movsl
cli
pop
inc
int
clc
lods
mov
std
mov
and
mov
xor
pop
jg
loop,pt
or
add
mov
mov
aaa
push
jns
stos
mov
mov
repz
vpaddusb
jo
xchg
adc
stos
rcrl
imul
mov
jl
sbb
cmp
adc
aas
xchg
addr16
mov
or
xor
inc
inc
addr16
movsb
inc
adc
aad
inc
pop
mov
and
xchg
cmp
in
push
lret
and
out
jno
add
loop
mov
lods
test
fidivl
jb
xchg
mov
jbe
arpl
nop
ret
fistpl
outsl
fidivl
test
and
sti
gs
fbstp
ja
les
push
lea
and
call
out
sub
lods
push
pushw
mov
push
lret
out
fmuls
jmp
test
inc
pusha
and
lcall
in
gs
push
es
jbe
test
fst
outsb
cmc
xlat
cmp
jb
adc
fwait
aas
div
stc
xchg
mov
pop
cltd
mov
and
pop
lret
mov
fsubrp
cmc
pop
xor
imul
jp
lods
jo
dec
mov
push
pop
rcl
addb
js
imul
inc
clc
push
loope
dec
push
jne
test
cmp
mov
pusha
mov
and
sahf
xor
adc
mov
hlt
jge
lret
dec
and
inc
cltd
cmpsl
jo
negl
insb
mov
es
mov
popa
test
fldcw
arpl
inc
dec
xchg
mov
cmp
cmp
lret
repz
jmp
loop
xor
aam
inc
je
lcall
sbb
mov
pop
sti
adcl
xchg
mov
add
hlt
popf
stos
push
sub
fs
inc
out
jl
mov
mov
cmc
xchg
and
mov
jl
int3
jo
out
push
loope
in
addr16
fiaddl
hlt
shll
sbb
fwait
ret
xchg
or
aas
and
cld
cmp
loope
jg
test
addb
adcl
mov
inc
xor
clc
fdivrs
fcoms
jne
inc
nop
and
sarb
pop
int3
sub
call
or
jg
adc
sti
negb
loop
inc
sahf
in
push
hlt
mov
fs
xchg
jge
mov
push
int3
mov
cmp
cwtl
ja
fisubs
mov
mov
outsb
or
ss
adc
cmpl
inc
fisubrl
inc
jecxz
das
bound
or
out
fwait
sti
and
fdecstp
pop
mov
cmp
cmc
mov
dec
pop
or
lcall
inc
aas
jmp
out
testl
fistps
and
sub
mov
push
or
jg
xchg
xor
add
addl
leave
xchg
pop
xchg
pop
sahf
xchg
fs
push
decb
mov
pop
icebp
int
rcr
push
out
bound
in
mov
insb
mov
mov
outsb
push
daa
inc
or
stos
add
pop
jne
push
stos
aad
bound
pop
lods
xchg
inc
or
mov
xor
mov
cmpsl
scas
nop
mov
sbb
les
push
sub
es
mov
push
jbe
jb
and
into
movsb
adc
aas
push
mov
test
movsb
xchg
lahf
push
mov
aam
dec
inc
pop
pop
clc
or
outsb
dec
aas
repz
and
subb
mov
int
dec
and
pop
es
lahf
xchg
push
jbe
push
cmp
mov
mov
je
outsb
js
mov
lret
lods
mov
mulb
adc
sbb
xor
dec
mov
push
and
lcall
xor
not
pop
int3
ljmp
or
mov
adc
cmc
sbb
cmpb
iret
enter
mov
ljmp
arpl
pop
inc
daa
nop
jg
dec
sbb
push
xchg
mov
cli
outsl
mov
stos
jle
movsb
je
mov
xchg
test
arpl
lods
sbb
or
xchg
popf
mov
jge
dec
xchg
subl
out
or
xchg
jmp
lahf
into
jg
push
stc
jns
rcll
popf
test
mov
mov
jp
mov
insl
std
data16
and
rcll
and
aad
aaa
pop
out
call
test
pusha
hlt
mov
pop
cmpsb
or
ret
cmp
mov
dec
jmp
xlat
das
add
jo
int3
mov
daa
inc
cli
out
ljmp
pop
xchg
add
add
lret
sahf
pop
cld
jbe
dec
test
in
cmpsb
bound
cmpl
push
fistpll
popf
imull
cmp
pop
cmp
ljmp
push
rol
push
adc
push
pop
xchg
sub
ss
mov
xchg
int
mov
cmp
jl
negl
cli
mov
cmpsb
pushf
jbe
jae
push
mov
clc
inc
cmp
mov
inc
testl
sbb
cmpsl
popl
inc
jmp
ja
push
sbb
mov
sub
push
sub
adc
sbb
dec
js
ss
sub
pop
sahf
bound
dec
insb
jns
or
fcmovne
jnp
hlt
mov
mov
arpl
push
push
inc
push
dec
inc
or
push
inc
stos
push
sub
push
mov
pop
mov
cmp
test
std
out
bound
insb
mov
filds
ds
push
cmpsl
xor
pop
adc
mov
mov
sbb
xchg
in
sub
push
cmp
repz
jno
inc
sahf
adc
or
or
dec
in
add
cmp
ds
insb
or
jge,pn
pop
or
adc
mov
jle
cwtl
jl
xor
mov
dec
push
rorb
inc
popa
mov
fisubrs
cld
in
in
cmc
fistpll
lds
jbe
ljmp
mov
negl
loopne
ds
xor
loopne
mov
arpl
jae
fwait
cmp
sbb
jae
out
or
inc
inc
pop
xor
xor
jmp
cmpsl
jno
decb
push
hlt
jmp
add
mov
adc
xchg
or
cmp
jl
push
inc
nop
mov
imul
test
jge
shll
shrb
out
fistps
pop
pop
jne
cmc
iret
roll
sub
les
push
js
xor
mov
xchg
adc
and
mov
insb
jl
jp
shlb
hlt
shll
sub
and
or
mov
rcrl
outsb
mov
add
xchg
dec
ret
call
fisubl
fwait
lods
ds
daa
mov
sub
push
lods
sub
dec
or
inc
test
loopne
sahf
cmp
mov
jae
pop
dec
mov
movb
fs
inc
xchg
aad
je
and
jo
sbb
cmp
gs
mov
pop
adc
shlb
mov
fimull
or
sub
pop
or
lahf
imul
scas
jl
jb
shrb
sub
jp
arpl
test
jecxz
std
cld
mov
out
sbb
jl
push
cwtl
cmp
push
cmp
mov
fldenv
or
xor
sub
mov
add
inc
ret
lahf
inc
and
int
xlat
adc
mov
andb
dec
enter
mov
xor
test
ljmp
xchg
jnp
loope
lock
bound
insb
rcll
pushf
dec
push
push
or
js
push
daa
mov
or
or
rcrb
sub
dec
cmc
xchg
push
xor
inc
mov
in
out
stc
pop
pop
cmp
adc
faddl
mov
add
xchg
pushf
stos
xor
add
mull
jo
push
xor
hlt
pop
xor
out
pushl
insb
iret
push
lret
je
xchg
mov
mov
jb
pop
sub
frndint
mov
push
pop
cmp
cwtl
fidivrl
cmpsb
dec
cmpsl
pop
in
pop
mov
or
xchg
push
int3
or
js
daa
lock
add
or
pop
add
mov
jl
push
cmp
lahf
xor
push
repz
push
cmp
mov
push
lods
cmpsb
and
movsb
ljmp
testl
mov
mov
jns
es
mov
rcrl
and
pop
adc
jbe
mov
loope
loope
lods
jl
mov
xor
and
loope
mov
and
out
rorb
insl
and
lods
jp
imul
in
xor
fsts
fidivs
jg
or
fdiv
and
aaa
xor
push
pop
jle
mov
push
cmpsl
sar
inc
popa
test
add
mov
pop
sub
sub
and
cli
clc
adc
lds
test
adc
pop
test
aas
lea
shll
xchg
dec
pushf
outsb
push
dec
or
mov
cmp
xchg
pop
dec
mov
test
dec
adc
mov
pop
adc
nop
shlb
add
repz
add
mov
pop
lea
sub
or
leave
mov
inc
and
cmp
sahf
mov
sbb
push
mov
rcr
mov
js
and
mov
js
in
cltd
out
xchg
xchg
test
fldl
xlat
add
aaa
mov
push
imul
adc
push
xlat
push
mov
inc
test
scas
xor
cmpsb
lret
dec
push
movsl
or
lcall
popa
jne
fwait
sbb
fs
scas
jnp
push
imulb
imul
clc
jle
mov
mov
jmp
add
mov
call
ljmp
lahf
lcall
sbb
out
or
jl
mov
sbb
sub
add
icebp
sbb
xor
std
fiadds
mov
add
push
ss
xor
or
mov
xchg
sub
mov
stos
mov
push
adc
pop
enter
lds
fdivrl
jle
popf
mov
jbe
cmp
or
notl
pop
mov
ljmp
jo
aad
out
adc
mov
or
pushf
push
rcrl
pop
mov
xchg
add
jp
mov
sbb
cmp
cmc
cmp
addb
cmpsb
cli
pop
js
mov
fs
test
in
in
shlb
cmc
or
out
or
or
dec
or
add
andl
sub
inc
adc
imul
in
and
xor
mov
test
push
lods
sbb
cmp
pushf
mov
lods
mov
dec
lcall
xchg
inc
stos
stos
test
sub
dec
in
stc
inc
adc
xchg
jns
pop
pushf
sbb
adc
mov
movsb
data16
jnp
xor
sbb
sub
push
rcr
add
pop
in
pop
imul
shlb
and
dec
add
jbe
and
cmc
adc
ficomps
adcb
cmpsl
mov
xor
sbb
lds
inc
lahf
pop
arpl
sti
je
inc
xchg
je
or
push
and
popa
pop
dec
xchg
xchg
sub
rolb
xchg
ret
fimuls
into
xchg
ret
adc
mov
jo
int3
scas
and
icebp
cwtl
inc
or
das
mov
sub
inc
dec
fs
je
push
mov
out
call
pop
out
sbb
aaa
pop
mov
cmp
push
jmp
gs
cmp
test
mov
das
stos
xchg
inc
pop
and
lods
repz
sbb
push
mov
into
push
mov
out
pop
sub
into
in
mov
push
iret
test
pop
cmp
iret
xchg
loop
outsb
sahf
pop
testl
and
movsb
pushf
cli
imulb
or
out
mov
movsl
movsl
adc
push
inc
dec
flds
xchg
js
movsb
dec
test
sub
pop
mov
loope
mov
xor
xlat
pushf
leave
in
xchg
ss
aas
xor
aam
mov
in
out
mov
mov
stos
mov
cld
je
mov
add
ljmp
jg
add
mov
xchg
sub
hlt
mov
cld
sti
lods
and
clc
jae
jle
add
xor
sar
mov
std
cwtl
mov
mov
int
mov
test
test
pop
sti
fsubrs
ss
imul
adc
mov
outsb
xor
mov
sbb
imul
pop
jo
dec
pop
add
aam
stos
or
jecxz
mov
push
dec
fidivrl
xor
outsb
test
xchg
jle
jg
sub
aaa
push
fmuls
fwait
xchg
cmp
pop
mov
adcb
cs
jg
cmp
add
xchg
int3
subb
in
lds
add
or
cmp
sub
fs
jae
jge
jno
iret
add
jnp
rorb
lods
hlt
shl
mov
fsts
je
xchg
scas
mov
in
lock
je
jp
cli
ret
xor
je
std
in
aas
ds
sbb
dec
xchg
repz
lods
aaa
test
and
jecxz
std
inc
outsl
jmp
mov
dec
or
sbb
inc
jge
push
mov
push
and
cmp
mov
and
lods
dec
es
inc
push
jp
or
push
fwait
dec
dec
adc
dec
push
out
cmpsb
in
test
adc
loopne
out
or
loopne
addr16
icebp
scas
shll
adc
dec
xchg
js
xchg
inc
add
lea
clc
inc
testl
adc
loopne
and
test
push
mov
or
test
xchg
fdivs
popl
inc
imul
mov
jge
mov
sub
pop
or
and
popf
mov
je
push
xchg
adc
sbbb
std
in
sti
or
inc
loope
outsb
xchg
push
fs
cmp
out
pushf
stc
jns
addr16
cmp
cmpb
jb
cmp
jle
fwait
jnp
pusha
cli
jnp
flds
xchg
cmp
out
dec
pop
and
loop
lahf
sub
cmp
int
mov
sti
and
sub
fdivl
arpl
jge
or
and
inc
repz
jae
push
je
mov
jp
test
aaa
fwait
push
sbb
fs
mov
adc
hlt
das
dec
lea
xchg
insl
hlt
dec
add
xor
and
and
xchg
stos
stos
jae
mov
mov
adc
xor
movsl
lds
test
loope
stc
outsb
ja
jp
insl
mulb
sarb
call
ret
cmp
movsl
test
mov
mov
loope
test
xor
arpl
je
push
and
insb
xchg
pop
push
dec
imul
xor
or
loop
decb
xor
and
jmp
mov
sbb
aad
sbb
stos
stos
inc
xor
out
or
and
pop
mov
mov
std
pop
int
jle
sbb
fiaddl
xchg
popa
mov
add
mov
and
jno
xor
sahf
sbb
pop
cmp
mov
in
addr16
clc
xchg
mov
mov
repnz
fnstsw
push
pop
insb
test
or
mov
push
mov
les
stos
dec
xchg
fcmovne
mov
es
stos
setb
into
nop
push
loope
mov
pop
mov
enter
sbb
jmp
lods
pop
lret
adc
xchg
pop
sbb
jbe
mov
mov
lcall
lods
loopne
mov
lods
sbb
sti
test
jbe
xor
fcomp
imul
cmp
ja
stos
test
sub
sbb
push
outsl
scas
cmpsl
xchg
inc
sub
add
enter
lock
out
sahf
jbe
cld
adc
lods
in
in
push
inc
bound
nop
adc
adc
popa
gs
leave
xchg
xchg
test
mov
add
lret
out
sub
jge
pop
in
sub
jle
xchg
popa
jo
adc
sbb
int3
out
insb
je
push
repnz
loopne
movsl
push
inc
pop
adc
dec
inc
adc
or
lock
insb
fimull
fisttps
cmpsb
lds
pop
inc
gs
xchg
nop
sub
adc
shl
fwait
in
std
pop
sub
or
mov
stc
or
or
adc
movswl
popf
lcall
dec
cmp
cmp
xchg
xlat
je
fidivl
out
scas
xorl
push
pop
push
fidivl
sub
pop
insb
jbe
mov
xor
cmovo
sub
addl
cwtl
lea
push
and
inc
fbld
or
push
subb
fwait
js
pusha
lods
mov
xor
cmp
repnz
mov
clc
add
sahf
pushf
mov
repz
push
mov
cmp
lods
pop
jae
stos
iret
mov
xchg
adc
popa
jl
loop
stc
ret
mov
push
adc
jp
arpl
aaa
push
mov
jmp
lret
and
adc
scas
xor
mov
mov
into
xchg
push
jp
sbb
je
inc
or
inc
or
dec
fildl
loope
cli
mov
sub
xchg
leave
pop
mov
lahf
cmpsb
fisttpl
enter
ljmp
std
adc
and
orb
pushf
rcrb
xchg
or
push
cmp
mov
sbb
les
arpl
inc
movsl
es
dec
enter
xchg
jb
repnz
filds
insb
adc
int3
imul
mov
xor
sub
sbbl
or
pop
scas
aam
iret
pop
pop
xlat
je
int
das
movsl
lret
sub
xlat
and
in
outsl
addb
pop
dec
sub
fwait
test
pop
pop
push
lahf
addb
cmp
inc
xchg
scas
xor
push
xchg
iret
les
lahf
ret
mov
outsb
fs
aas
mov
inc
push
and
xchg
in
ret
pushaw
lods
pop
bsr
sti
popa
mov
sbb
adc
rclb
sbb
dec
fwait
xor
sub
es
movsb
js
jns
add
loopne
inc
adc
sub
mov
repnz
wrmsr
inc
movsl
add
or
mov
mov
test
fisubl
sub
pushf
jo
xlat
loopne
inc
fstl
push
cmp
mov
call
sbb
push
pop
dec
dec
or
test
push
repz
mov
in
pop
in
pop
clc
outsl
aam
test
out
adc
adc
jge
cli
pushf
mov
and
dec
sub
cmpsb
xchg
push
inc
imul
xchg
shll
add
cli
add
insl
sub
and
mov
push
outsl
popf
cld
in
lahf
push
mov
sbb
hlt
sub
lahf
dec
lret
or
adc
ds
dec
and
push
gs
cmpsb
pop
rorl
loopne
mov
and
aaa
pop
outsb
popf
inc
jmp
pop
ds
lea
or
in
ret
dec
adc
push
dec
in
push
push
mov
hlt
mov
xor
adc
dec
ds
aad
or
add
insb
pusha
lahf
gs
sbb
inc
gs
mov
loop
daa
pop
nop
lret
ds
inc
jnp
test
daa
pusha
pop
jae
popa
std
dec
shrb
in
jae
andb
das
adc
mov
cmp
and
mov
lods
mov
stos
test
enter
aaa
mov
sub
pop
push
cmp
push
push
push
aad
test
sarl
test
pusha
mov
fdivs
cmc
fisubrl
popf
out
ljmp
les
popa
mov
int3
dec
push
stc
rorl
mov
xchg
mov
loop
dec
rcrl
fst
dec
lret
fwait
pop
lds
adc
lods
mov
and
lock
push
sub
and
pop
cmp
push
push
pop
lds
shrl
mov
mov
and
mov
mov
cmc
jnp
add
lret
in
mov
movsb
mov
mov
scas
mov
ss
aam
hlt
adc
push
fisubl
movb
pop
lret
cmp
addr16
mov
mov
sbb
pop
shl
mov
inc
leave
faddl
mov
push
shlb
push
test
ss
add
lods
inc
xchg
iret
mov
sub
int
mov
xchg
sub
add
mov
jb
lret
adc
pop
and
jne
xor
jmp
push
rorl
fucomp
mov
ljmp
fstpl
add
rcl
pop
sub
inc
shll
sti
pop
xchg
ja
lahf
clc
inc
inc
push
cmp
test
push
sbb
cwtl
je
insb
test
mov
push
jns
dec
dec
pop
lock
xorb
dec
xlat
loopne
dec
push
pop
js
das
ja,pn
mov
mov
push
mov
call
jg
in
mov
ret
ret
push
cli
popa
mov
mov
cltd
push
adc
stc
loopne
mov
sti
mov
cwtl
sbb
outsl
cmp
xchg
repnz
cmc
and
mov
add
data16
mov
pop
push
fimuls
inc
loop
inc
sbb
xchg
in
jne
cmp
sbb
push
jo
js
push
push
lods
fnstenv
jecxz
pop
ja
jge
leave
pop
popa
int3
popa
sahf
mov
icebp
add
pop
jp
insl
aam
mov
lods
cwtl
adc
in
fstpt
daa
iret
or
jb
xchg
mov
lods
ret
test
outsb
xlat
mov
pop
iret
adc
mov
or
dec
mov
cmp
inc
mov
in
mov
popf
add
inc
sbb
xor
xchg
loope
fbstp
stc
cmp
mov
ja
mov
loopw
mov
pop
xchg
push
inc
sub
push
in
andb
push
loop
movsb
inc
fstl
pop
dec
xchg
add
pop
adc
js
push
cwtl
sbb
loop
in
mov
addb
and
jge
rcl
xor
mov
inc
mov
mov
inc
xchg
add
mov
lods
xor
inc
dec
inc
mov
mov
mov
mov
adc
int3
xchg
adc
pop
jne
xlat
push
xchg
push
pop
les
les
in
push
xchg
popa
loop
leave
sbb
mov
ret
or
cli
mov
sub
push
mov
scas
mov
jecxz
lret
je
inc
xchg
inc
out
popf
jbe
scas
dec
cmpsb
add
pop
inc
testl
out
popa
insl
mov
lds
ss
mov
inc
ds
xchg
mov
push
insb
mulb
mov
sahf
ljmp
shrb
dec
pop
lock
xchg
loopne
jge
in
aam
out
call
fwait
sbb
fsubs
leave
xor
cmc
xchg
xor
push
hlt
mov
dec
aad
fld
fmull
jns
jle
icebp
sub
cmp
push
sti
int
sub
inc
in
pop
clc
xchg
sbb
scas
lcall
dec
aas
fildll
mov
cmp
nop
ljmp
adc
mov
jbe
clc
test
scas
repz
jle
add
enter
pop
fnstenv
sub
jne
xor
mov
dec
xor
inc
sahf
xchg
out
imul
push
inc
and
mov
orb
mov
jecxz
mov
jns
nop
jle
iret
or
sbb
rclb
pop
out
sbb
hlt
adc
xor
pop
aaa
sub
cmpl
scas
inc
in
out
fistpl
pop
mov
movsl
in
ja
push
addr16
pop
sbb
icebp
mov
xchg
cwtl
mov
or
outsb
icebp
mov
std
xchg
xchg
mov
test
sbb
add
stos
mov
mov
lods
cmc
data16
mov
shll
bound
pop
pop
enter
adc
mov
inc
mov
jbe
sahf
xlat
imul
inc
lcall
ja
and
jae
cmpsl
call
leave
movsl
pop
mov
sub
stc
push
mov
pop
sub
xor
rcrb
sarl
cli
mov
lahf
cmp
jo
pop
xlat
lcall
mov
pop
jbe
sub
ret
mov
cmp
pop
cmp
cmp
sti
loopne
sti
jno
pop
cwtl
ret
inc
or
addr16
jne
mov
xlat
cmc
and
add
mov
lea
lret
cmp
sub
sbb
fcoms
xor
or
outsl
pop
test
push
sub
dec
in
adc
addb
xchg
inc
std
inc
repz
xor
pop
fwait
push
loope
mov
adc
mov
xchg
aad
cmpsb
icebp
mov
sbb
jle
jle
out
ljmp
call
call
mov
and
jge
outsl
adc
mov
fsts
outsb
sub
lret
in
cmp
aad
mov
xor
or
mov
shlb
test
and
push
xor
imul
or
pusha
dec
sbb
scas
mov
dec
cltd
in
and
mov
dec
lds
dec
repnz
push
xchg
pmaddwd
xchg
into
gs
cmp
push
add
cmc
mov
lds
lods
pop
push
sbb
or
roll
lcall
hlt
aad
movsl
dec
int3
inc
pop
sub
push
ja
ret
stc
call
or
adc
dec
sub
mov
mov
out
lds
mov
cmc
in
lcall
mov
mov
mov
repz
xchg
int3
stos
sbb
lock
repz
ds
insl
jp
pushf
cmp
jmp
out
xor
btc
xchg
std
rorl
sti
xchg
data16
cs
in
mov
xor
xchg
loop
dec
scas
mov
leave
in
cs
aam
test
divb
and
and
hlt
fnstcw
cwtl
incl
or
scas
arpl
test
add
and
xor
mov
mov
js
jo
inc
xor
hlt
mov
std
pushf
sub
rcrl
dec
sbbl
mov
aad
jge
scas
push
pop
sbb
loope
cmp
inc
push
fs
mov
jp
add
mov
mov
sbb
lds
fstl
jmp
lahf
popf
cmpl
enter
push
loop
movsb
pop
sahf
aad
hlt
inc
mov
mov
aad
sbb
cmpsl
jne
jns
call
jne
dec
sbbb
jmp
cmpb
or
xchg
xor
mov
ss
jno
roll
enter
popa
sub
mov
insl
pushf
sub
jmp
movhps
out
jno
imul
jl
push
cmp
inc
imul
iret
inc
pusha
push
xor
adc
lret
lea
fimull
dec
sub
arpl
sbb
cmc
push
dec
cmpsb
in
dec
xor
dec
pop
dec
xlat
pusha
inc
add
jb
cmp
and
xchg
mov
sub
cmp
int
movsb
inc
sbbb
sarl
incl
sub
bound
add
aad
cmp
add
xor
mov
xchg
ficoms
aad
cld
js
enter
sub
jb
imul
jne
push
dec
dec
jp
sbb
mov
pop
xchg
sub
push
and
push
cmp
sbb
imul
pop
xchg
and
std
aam
mov
xchg
stos
ljmp
mov
or
shll
ljmp
push
add
sub
stos
or
add
dec
int
inc
fwait
cmpl
inc
insl
dec
pushl
js
and
hlt
mov
mov
ljmp
fdiv
cs
test
aam
add
add
paddb
lds
adc
jo
rclb
in
adc
aas
mov
aad
je
jl
or
xor
inc
hlt
sub
loopne
sbb
jne
andl
icebp
je
fisttpll
cmp
add
push
sbb
dec
jl
mov
stc
sti
movsb
cld
repz
mov
out
mov
lds
out
sbb
and
pop
push
rorl
push
push
clc
ret
cli
sub
dec
cmpsb
lock
cmp
lahf
and
adc
call
cmp
push
ret
fnstcw
mov
sbb
fcmovu
daa
push
cli
dec
je
cmp
sub
and
inc
jne
sbb
sti
xchg
fisttps
jmp
daa
in
adc
mov
aaa
lea
or
imul
jmp
stos
lret
sbb
stos
mov
pop
je
cmp
popf
int
or
xor
lods
push
or
dec
or
and
cld
mov
enter
mov
lcall
pop
mov
jmp
jns
xchg
add
push
ret
fldenv
xchg
iret
xor
hlt
xlat
lock
repnz
lods
in
jne
inc
inc
sub
dec
xchg
inc
sub
mov
xlat
sub
lods
mov
mov
cmpsl
add
out
call
cmp
outsb
cmp
ds
insl
inc
push
xchg
in
bound
mov
dec
sahf
and
mov
fisubrl
cmpsb
stos
add
add
popf
pop
sub
mov
push
outsb
mov
cmp
xchg
outsl
fsub
cli
xchg
pop
add
scas
shlb
popl
inc
mov
cmpsb
jmp
mov
adc
add
outsb
mov
loop
mov
ljmp
or
sbb
push
inc
add
negl
jno
xor
mov
mov
and
out
sub
std
popf
lock
jns
notb
push
push
lret
pop
repnz
mov
in
inc
adc
xor
pop
ret
mov
dec
or
js
in
xor
push
popf
mov
nop
and
sahf
nop
jecxz
pop
adc
sub
mov
dec
cmp
leave
iret
roll
dec
jmp
test
enter
cmc
and
mov
orb
push
stos
xchg
pop
push
mov
push
push
cmpl
jmp
add
test
loopne
jne
jmp
pop
out
imul
adc
jp
push
jg
popf
dec
mov
mov
test
mov
cmp
xchg
xchg
mov
pop
mov
jg
jno
jns
lret
jmp
cmp
jl
scas
pop
mov
sbb
ret
xchg
ficompl
cmp
lahf
dec
adc
dec
std
xchg
mov
sarb
sti
shrb
adc
and
addps
jns
xchg
out
jns
nop
lock
inc
nop
pushw
mov
jbe
insb
enter
xchg
fldt
call
push
cmp
mov
inc
mov
or
mov
jne
lods
xchg
push
dec
xchg
out
inc
mov
fistps
or
outsb
inc
or
or
cmpl
inc
aad
outsb
mov
xor
lret
fadd
and
loopne
sbb
sub
xchg
scas
push
pushf
in
jmp
jno
sub
sbb
mov
out
in
jge
test
push
pop
mov
aas
xor
xchg
xchg
test
cmpsl
add
push
xor
loop
lahf
and
iret
dec
mov
jp
and
stc
or
stos
pop
dec
pusha
cld
or
enter
and
jmp
inc
jmp
or
sub
or
leave
jae
cmpsb
mov
or
xlat
roll
sar
fs
sbb
fadds
pop
js
mov
xor
enter
gs
jmp
mov
jge
int3
xchg
push
adc
out
out
sti
out
xchg
popa
dec
sbb
lods
cmpsb
xor
into
test
icebp
and
and
push
and
popa
inc
xchg
xchg
pop
mov
jbe
sahf
fmul
push
xorl
sub
mov
push
mov
dec
mov
ja
seta
sub
sub
push
std
pop
or
jo
ret
xchg
repnz
es
dec
and
adc
mov
sub
rclb
inc
in
add
mov
or
mov
mov
ret
jb
addr16
sbb
jbe
jbe
mov
orl
jns
xor
cmp
ret
lea
div
mov
xrelease
fwait
js
mov
pop
mov
js
push
push
push
push
mov
stos
adc
inc
jmp
insl
mov
sub
pop
mov
mov
xchg
jle
or
sbb
inc
rorb
adc
pushf
ja
or
lahf
dec
mov
sbb
push
jmp
ret
out
jle
push
frstor
clc
movsb
icebp
or
out
push
and
pop
add
dec
scas
divl
inc
and
mov
mov
push
andb
adc
jle
pop
lds
paddsw
and
mov
sahf
jg
mov
push
mov
sahf
clc
fdivs
push
push
sbb
fistl
adc
jmp
aam
mov
popa
jne
dec
popf
cmp
pop
mov
ret
pop
xchg
ss
push
das
cmp
inc
sub
ret
dec
cmp
popa
sbb
xchg
push
pushf
jnp
jnp
popf
mov
dec
push
iret
sub
aam
orb
jb
loop
insb
dec
cvtpi2ps
flds
loop
data16
sbb
das
sar
pushf
sarl
xor
dec
roll
dec
sbb
roll
mov
sub
mov
jns
push
jmp
movsb
push
mov
inc
dec
adc
sub
lods
fs
mov
imul
inc
loopne
call
adc
pop
push
inc
mov
dec
xchg
add
repnz
jbe
pushf
out
mov
adc
xor
cmc
fcmovb
xor
lock
xchg
shrl
dec
mov
adc
ss
mov
pop
loope
xchg
fnstcw
out
dec
movb
repnz
pop
mov
push
fs
daa
mov
cmp
stos
mov
in
jge
out
adc
shld
add
ficompl
and
add
cltd
pop
jno
lahf
lcall
push
clc
aaa
lret
jnp
xchg
aam
pop
or
push
push
ljmp
xchg
dec
dec
test
in
add
js
xchg
jo
push
xchg
sbb
adc
inc
push
ljmp
shr
dec
cmp
cmp
repnz
mov
out
mov
insl
pop
cmp
xchg
addl
and
out
mov
cli
jp
fisttpl
arpl
adc
mov
hlt
sarl
ds
mov
mov
push
lea
pop
jle
lcall
dec
mov
mov
aad
jge
xor
inc
ja
out
cmp
sub
aad
repz
rorb
xor
jle
jo
hlt
repz
cli
jecxz
inc
hlt
push
pop
ja
stc
aaa
push
mov
sub
cmp
fdiv
enter
sahf
mov
imul
paddq
mov
imul
int
cwtl
mov
jnp
sub
insb
push
adc
xor
push
int3
adc
clc
mov
popf
adc
adc
enter
sub
mulb
icebp
xor
dec
xor
into
push
in
inc
push
xchg
push
pop
jmp
xor
mov
lods
sub
cmp
xorl
mov
aas
mov
icebp
add
or
imulb
or
xchg
das
lret
jbe
push
into
jmp
pop
loopne
test
daa
repnz
mov
fidivl
out
gs
cwtl
movsl
gs
mov
jo
fcomps
dec
inc
imul
mov
sub
cmpsl
and
bound
into
icebp
mov
outsb
push
jp
fwait
cmp
mov
xlat
push
xorb
dec
or
gs
xor
hlt
jg
mov
out
jge
jbe
ficompl
shll
sub
pop
pop
enter
ljmp
mov
cmp
aam
icebp
lcall
fsts
test
push
test
iret
adc
mov
mov
outsl
jecxz
jbe
add
outsl
ficoms
pop
xor
lock
shll
aad
or
cmpsl
push
add
call
jbe
outsb
xchg
adc
out
in
loop
lret
cmpsl
mov
dec
xchg
cld
mov
mov
push
xchg
mov
repnz
in
cld
movq
fnstsw
add
cltd
mov
int3
mov
push
xchg
imul
dec
hlt
and
sbb
xchg
mov
enter
test
lock
push
cld
dec
bound
jle
lods
aam
fsubs
js
cmpsl
mov
push
test
ficoml
arpl
jg
and
sub
sub
filds
jg
cmp
inc
fldenv
negl
inc
je
mov
sbb
mov
dec
rcr
mov
movsb
mov
xchg
mov
loope
pfmin
dec
adc
add
call
in
pop
dec
add
in
aas
jns
jp
addr16
pop
sti
lahf
or
andl
fcoms
lcall
adc
int
sbb
lods
ret
fimull
adcl
push
in
fidivrs
fcomip
jecxz
shll
cmp
mov
daa
lods
ja
shl
or
adc
inc
cltd
lods
xchg
xchg
mov
mov
add
sbb
mov
in
inc
enter
mov
insb
sti
fsqrt
or
mov
mov
aam
xor
repz
aam
les
pop
int
popa
mov
jge
dec
cltd
notb
jns
imull
push
int
scas
jbe
xchg
fsub
jo
and
ficoms
xor
sub
rol
stos
int
insb
jb
jnp
jno
cmp
cmc
push
fsubrs
lods
shrl
inc
jb,pn
push
jmp
mov
int
hlt
jmp
lds
cmp
int3
mov
push
mov
ds
sub
add
loope
pop
push
fdivrs
or
bound
push
dec
in
adc
xchg
out
pop
xchg
cli
inc
jle
iret
mov
mov
data16
pop
adc
rolb
mov
mov
pop
ret
jle
mov
mov
add
push
ret
enter
int
repnz
je
mov
frstor
push
lahf
and
adc
or
cmp
adc
lret
mov
fwait
les
and
insb
mov
arpl
and
out
ror
movsl
cmp
xor
scas
inc
sub
mov
hlt
dec
mov
xchg
mov
jge
mov
sub
fisubrl
insb
les
or
ljmp
cli
adc
jle
aas
out
popf
xchg
sub
push
test
cmp
cmpsb
fadds
faddl
and
push
xchg
repnz
dec
loopne
pop
aas
jecxz
loop
cli
orl
cld
inc
dec
out
xchg
in
push
jmp
roll
js
rcrl
call
cmpsl
push
ficompl
scas
fcmove
loopne
push
jmp
mov
cwtl
rcrl
xchg
push
aam
fistpl
jge
and
out
cmpsb
mov
mov
fs
clc
es
out
adc
gs
mov
out
sub
jmp
mov
and
jg
cmpsb
popa
jecxz
sbb
es
xchg
sbbl
mov
xchg
xor
inc
pop
add
mov
fistpll
jmp
xchg
xchg
std
jmp
test
xor
or
ds
scas
push
cmpsl
dec
jbe
jge
mov
cmc
mov
adc
xor
jge
ds
popf
mov
ds
sbb
inc
xchg
je
and
mov
sti
test
add
add
push
mov
mov
jae,pn
pop
cmpsb
invd
dec
xchg
cld
std
adc
add
mov
sub
iret
sti
add
push
repnz
mov
push
sub
pop
inc
xchg
or
xchg
inc
dec
jl
push
fwait
push
jno
insb
mov
mov
sti
out
push
mov
int
cmp
push
xchg
outsl
insb
xor
out
xchg
es
lahf
fidivrl
loopne
imulb
cmp
fidivrs
pop
fs
imul
andl
loope
movsb
js
mov
daa
push
repz
into
loopne
in
mov
repz
push
mov
xchg
jmp
test
jmp
loope
push
xor
mov
icebp
int3
push
jns
cwtl
test
inc
movsb
ret
push
mov
inc
lea
add
nop
sbb
andb
and
insb
leave
daa
pushf
icebp
daa
mov
insb
xchg
ljmp
ds
outsl
pop
rcl
jb
ss
std
lahf
adc
addl
jnp
lods
shll
mov
dec
in
sbbb
out
fdivrs
and
push
cmp
jg
cmp
and
pop
mov
or
cmp
adc
or
shrl
jbe
jb
add
in
xor
lock
jbe
subl
sub
shl
mov
enter
addb
pop
mov
jae
mov
out
jg,pn
test
out
mov
add
xor
leave
push
pop
ficomps
stos
andl
cmp
hlt
ds
push
out
xchg
pop
cmp
mov
cmp
pushf
or
mov
fwait
mov
fbld
lds
andb
inc
jge
xchg
popf
inc
jmp
mov
mov
cwtl
or
cli
inc
loope
rcrl
out
testl
add
dec
xchg
mov
int
std
pop
and
mov
lods
cmc
adcb
jmp
push
cs
nop
cltd
clc
xor
icebp
dec
ficomps
xchg
mov
test
and
shl
push
xchg
cmp
cs
xchg
xor
xchg
imul
push
pop
jg
push
sub
push
leave
mov
pop
cwtl
cmp
int3
in
add
lcall
inc
and
je
push
aaa
cwtl
stos
pop
mov
mov
jp
sub
lock
gs
pop
mov
sar
stos
hlt
or
aas
daa
mov
push
sub
leave
pop
leave
pop
pop
movsl
js
xchg
les
mov
jg
ror
outsl
push
and
sbb
es
inc
mov
xor
lret
inc
and
out
test
add
cmp
in
aaa
lahf
fs
cmp
lods
mov
jmp
cli
iret
rsqrtps
shll
or
push
xchg
mov
and
sbb
nop
sbb
ss
pop
jg
and
loope
pop
sbb
ljmp
std
jp
test
inc
add
mov
int
mov
out
test
xchg
and
mov
or
mov
leave
cs
repz
add
and
jecxz
arpl
loopne
cmpsl
or
fcomp
mov
movsl
mov
mov
mov
and
test
dec
add
sbb
cli
pop
inc
pop
jae
cltd
adc
orb
int3
dec
inc
dec
and
mov
adc
pop
sub
rcll
std
and
dec
sub
push
dec
sub
or
loopne
int
fisubrl
inc
loopne
loop
rolb
fs
pop
cld
es
fldenv
popf
push
xlat
loop
add
mov
push
cmp
sahf
pusha
add
rcrb
sbb
shl
sahf
or
iret
push
adc
test
test
inc
outsl
ret
adc
popf
or
aad
adc
xlat
dec
pop
mov
jp
mov
xchg
insb
adc
loop
js
repz
dec
sub
call
xchg
jno
push
loopne
ds
mov
test
mov
rcl
lcall
push
aas
cmp
xchg
mov
in
mov
jl
arpl
loope
ret
sub
adc
cmp
decb
inc
xorb
and
loop
mov
loope
or
addl
imul
je
aam
rorb
inc
out
add
movsl
jb
sbb
out
jb
cmp
sub
mov
push
dec
or
nop
or
clc
lahf
jmp
dec
ss
pop
push
xchg
ljmp
movsb
and
shll
data16
cmpxchg
pop
popa
inc
sbb
loope
sub
xchg
and
daa
xchg
jg
in
mov
out
pop
mov
loopne
xor
inc
pop
into
sbbb
pop
bound
jl
sahf
ficompl
daa
mov
aad
icebp
adc
pusha
pop
fs
adc
dec
lods
push
xchg
xor
lea
gs
mov
loopne
push
push
push
movsb
ja
imul
enter
and
popf
aad
sbb
xor
mov
mov
lret
pop
pusha
test
sbb
xchg
jo
adc
jl
movsb
xchg
mov
mov
punpckldq
leave
nop
and
fs
mov
mov
imul
lods
pop
sbb
sbb
fbld
and
xchg
ja
inc
fcompl
pop
loope
sbb
ret
lods
gs
daa
add
cmp
push
mov
mov
fwait
sbb
les
mov
mov
fdivl
sbb
fwait
ret
cmp
fsubrl
adc
data16
cmpl
jnp
lods
mov
scas
pop
mov
iret
push
test
mov
dec
loopne
loopne
sbb
mov
cmp
test
dec
mov
and
dec
lret
push
pop
lcall
insb
scas
psubq
pop
jecxz
fidivrl
fld
inc
scas
in
pop
ror
xchg
inc
jbe
mov
add
sbb
jo
repnz
cmpl
jne
xor
testl
cmc
or
dec
lret
mov
popa
adc
mov
subb
sub
jae
fiadds
lods
dec
mov
loopne
mov
movsl
jno
fists
jae
and
push
cmp
fs
mov
movsb
cmc
cmp
cmp
adc
and
std
mov
inc
mov
pop
movsb
push
add
jg
sbb
fidivl
inc
nopl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
call
push
push
push
call
push
push
push
push
push
call
test
je
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
call
push
push
call
push
push
push
call
lea
push
call
call
cmpw
pop
push
je
push
push
call
push
call
add
call
jmp
push
push
call
dec
pop
test
sar
hlt
mov
out
or
hlt
loope
addl
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
or
repz
xlat
mov
push
sub
lcall
push
xor
jns
mov
testb
jle
inc
xor
nop
mov
push
xor
or
hlt
cmpsb
sbb
jp
cs
and
outsl
fdivl
pop
push
mov
lcall
inc
sti
stos
push
in
pop
fcoms
or
lahf
push
jmp
adc
jae
mov
fdivl
ror
mov
push
negl
data16
mov
lock
jnp
xor
flds
push
repz
mov
pop
mov
cmp
dec
addl
pop
mov
mull
pop
push
or
stc
shl
mov
jecxz
or
hlt
mov
pop
mov
mulb
pop
mov
cmc
mov
pop
cmp
stc
hlt
sbb
xchg
cmp
lea
in
hlt
mov
addl
dec
mov
hlt
mov
pop
mov
hlt
mov
aaa
mov
outsb
mov
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
sub
jne
sar
hlt
orl
std
lock
insb
call
hlt
mov
jo
jle
mov
hlt
mov
outsb
mov
bound
xchg
or
hlt
mov
mov
std
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
hlt
mov
pop
mov
mov
mov
or
test
jl
popf
mov
rorl
rolb
fsts
mov
stos
pusha
xchg
adc
ret
adc
inc
rcr
jno
hlt
shr
stos
or
sbb
mov
shlb
mov
test
sbb
cltd
xchg
mov
mov
cwtl
loope
testb
fists
jge
into
arpl
dec
xor
push
enter
push
push
and
or
inc
aad
add
dec
pop
shll
push
aam
jnp
inc
push
adc
repnz
dec
and
sbb
cli
lea
add
pop
das
dec
fldcw
xor
imul
xchg
jnp
into
aas
jne
test
jne
add
add
pop
fnclex
bound
mov
push
in
or
and
jmp
inc
jo
push
and
sahf
cmpsb
pusha
movd
aas
sbbb
pop
or
pushf
bound
mov
cmc
jae
mov
push
test
add
dec
inc
insb
cli
fdivp
mov
jecxz
outsl
cmp
out
fldt
add
cmpsb
pop
mov
lret
cmp
add
push
add
or
gs
fdiv
ljmp
mov
lahf
lods
pop
daa
dec
push
stos
xor
pop
enter
in
ss
repz
mov
mov
mov
add
enter
push
int
dec
enter
loop
adc
xor
int
inc
cs
pop
std
sub
or
mov
mov
pop
add
xor
push
ficompl
push
loopne
inc
cmp
pop
out
xor
fcoml
cmp
repz
mov
call
mov
ja
leave
dec
inc
popf
std
mulb
dec
test
fsubr
adc
push
les
xchg
mov
or
sbb
push
push
sub
dec
mov
mov
in
mov
pop
sbb
dec
or
push
jnp
das
fstpl
xchg
jb
ret
lret
cmp
push
pusha
and
push
xor
popa
stos
push
mov
push
mov
push
xlat
add
daa
orb
push
or
and
shlb
or
hlt
ljmp
xor
rorl
in
fs
mov
sbb
je
call
jmp
pop
js
xor
cltd
jl
ret
pop
out
xor
sub
in
xor
cwtl
push
sub
shlb
lods
pushf
flds
sbb
or
or
nop
mov
cmp
xchg
push
sbb
leave
pop
fcmovbe
dec
in
rolb
fnsave
call
jne
dec
push
mov
pop
pop
sbb
dec
mov
pop
cmp
movsb
cld
pop
add
clc
mov
and
movsb
adc
jb
jnp
mov
lods
sbb
add
add
or
aad
push
mov
jns
pop
cmp
aas
add
xchg
dec
mov
aam
jae
push
cmp
sub
inc
mulb
cmp
es
push
je
sub
lods
push
mov
sbb
dec
or
jg
es
dec
js
movsb
vfrczpd
push
sarb
sbb
popa
lret
aas
loope
repz
adc
ret
popl
icebp
mov
lock
imul
jns
add
adc
mov
mov
add
cmp
cmc
pusha
mov
dec
stc
hlt
adc
cmp
push
shll
movsb
dec
ja
inc
data16
cmp
xchg
lret
or
cwtl
mov
mov
pop
jbe
inc
inc
and
jmp
pusha
cld
inc
mov
mov
loopne
xchg
jne
or
and
shrl
ss
cmp
xor
clc
cld
adc
imul
lahf
jbe
jne
xor
push
repz
mov
jecxz
cli
mov
and
mov
sbb
imul
dec
stos
add
sbb
aaa
add
push
or
add
jb
push
pushf
add
icebp
sub
adc
lods
and
xchg
je
in
push
int
int3
pop
mov
adc
or
loopne
dec
loopne
push
or
arpl
inc
imulb
movb
ror
xchg
outsb
mov
stos
test
xor
addb
cmp
aaa
and
icebp
dec
fsubrl
mov
fcmovbe
sub
lock
jb
in
movsb
xor
and
inc
jns,pt
call
jns
mov
jp
aaa
jge
iret
jb
jmp
cmpl
dec
or
in
fldcw
and
xchg
xchg
imul
pop
fcmovne
jecxz,pt
jno
pop
jp
cmp
ja
popf
in
ficoms
push
push
loope
sub
outsl
inc
bound
sti
adc
loop
iret
cmpsl
and
cmp
cs
ss
mov
pushf
loope
repnz
aam
movsl
popa
pop
jg
inc
aaa
enter
sub
sub
lret
lock
in
sbb
and
fwait
ds
lret
jns
fcomps
sbb
or
or
push
in
clc
sub
add
arpl
repnz
mov
aaa
movsb
xchg
arpl
pop
scas
subl
addl
mov
popa
xor
and
test
fldl
mov
pushf
outsl
jae
mov
aad
jo
and
xor
pop
movaps
fcmovnb
add
push
into
rol
mov
and
test
dec
dec
adc
cwtl
and
push
dec
inc
add
test
es
out
push
lods
mov
iret
jno
pop
push
outsb
pop
pusha
movsb
jb
xchg
add
xor
or
repnz
gs
xchg
mov
in
scas
addb
test
xchg
mov
cmp
push
push
add
stos
jecxz
sub
sarl
loopne
and
aam
dec
cmpsl
sub
pop
jle
mov
mov
outsb
inc
pop
xchg
fdivr
sub
mov
out
sub
gs
gs
lret
and
movb
aad
in
nop
xchg
inc
rcrb
or
arpl
xchg
xchg
add
mov
and
in
jnp
jp
mov
and
jns
pop
ja
xor
popf
dec
jb
aad
pop
mov
test
push
mov
stos
add
dec
aas
int
ss
stos
dec
lret
cld
gs
pushf
xchg
aad
in
mov
dec
popf
nop
pop
outsb
out
add
cmp
aam
fiadds
ja
xorl
and
mov
call
movsl
ds
push
jle
jg
gs
in
clc
out
mov
mov
je
cltd
jl
add
lods
cli
shll
daa
stos
out
mov
lods
and
out
or
mov
aad
inc
out
repnz
dec
mov
pop
dec
cmp
in
jbe
hlt
mov
clc
dec
sub
jmp
or
cmpsl
and
jg
test
and
data16
sbb
lods
jbe
aas
icebp
repz
mov
pop
adc
or
mov
add
inc
in
pop
mov
cmp
pop
jnp
dec
and
inc
cmpsb
sub
or
pop
jno
lret
call
test
mov
not
and
xor
or
orl
test
int
ds
das
add
mov
add
out
outsb
daa
icebp
jo
fimuls
scas
dec
bound
loopne
lret
pop
popf
cmpsb
mov
mov
ret
push
imul
pop
sub
inc
out
jnp
bound
jl
jge
or
loop
fmull
dec
mov
jge
jge
dec
push
cmp
adc
out
pop
xor
mov
mov
scas
cmp
cmp
mov
mov
outsl
pop
jnp
or
lcall
fisttpll
inc
pop
mov
mov
js
and
push
sahf
aam
sbb
dec
xchg
adc
movsl
lret
lret
ljmp
into
sbb
mov
mov
int3
dec
and
xchg
add
jbe
aad
add
or
enter
cmp
inc
dec
sbb
jno
rcl
xlat
sub
sbb
mov
push
test
in
mov
out
sub
ret
jp
mov
push
mov
and
jne
push
enter
xchg
xchg
pop
ljmp
ljmp
jbe
test
lret
call
pop
adcl
fwait
push
inc
xlat
pop
test
sbb
cmp
fildl
cmpsl
mov
in
aad
xchg
mov
imul
ss
stos
dec
push
aam
cltd
cmc
test
xchg
xor
out
fdivrs
or
lcall
push
add
cmpsb
stos
sbb
fstl
xor
fsubrl
mov
xchg
shr
push
nop
fsubrl
aam
xor
imul
pop
jmp
sahf
mov
int3
push
ss
nop
dec
setge
mov
push
std
push
pop
xlat
int3
ficompl
fwait
icebp
mov
sbb
fsubrs
add
or
pop
mov
dec
repz
cmp
ret
mov
pusha
add
scas
cli
xchg
xchg
push
cld
in
fdivrp
icebp
in
or
or
jecxz
xchg
fmuls
pop
pop
cltd
lods
out
add
jns
cli
sbb
cmpsl
and
ljmp
xor
mov
sbb
std
cmp
or
imul
adc
pop
fcoml
mov
movsl
outsb
jb
andb
add
adc
je
shrb
cs
dec
cld
pop
outsl
shl
js
jnp
xor
out
dec
lea
and
aas
pop
pop
jae
js
lods
sub
jg
mov
mov
xor
lods
iret
into
popf
loopne
add
sub
add
xchg
inc
add
lahf
ds
mov
pop
mov
cmp
and
adc
pop
pop
idivl
lds
fmul
sub
inc
jbe
lret
outsl
push
orb
sbb
xchg
mov
cmp
sub
out
xchg
clc
jnp
fdiv
jnp
push
nop
fmulp
push
push
push
dec
sarb
jge
jae
out
sbb
aaa
xchg
rcll
add
mov
bound
mov
dec
jle
lds
ficoml
mov
cmp
push
inc
ss
lret
pusha
in
into
push
insb
movl
sbb
mov
adc
mov
mov
ds
sahf
std
rclb
leave
push
lcall
add
inc
test
stos
jae
test
or
shl
dec
imul
ret
jl
int
add
add
adc
jno
or
jo
push
std
mov
mov
leave
fs
add
cs
xchg
jl
or
inc
dec
inc
mov
dec
ret
pop
ss
notb
shll
jp
xchg
pop
les
push
and
mov
sahf
insb
add
js
imul
fiaddl
cli
mov
jmp
cmp
js
adc
adc
test
lds
xchg
xchg
pop
js
int
stc
mov
cwtl
loop
loop
movsl
cmp
cmp
or
pmaxsw
rolb
push
mov
mov
rolb
cs
pop
das
push
pop
mov
lcall
lret
and
xor
pop
aaa
popf
imul
mov
add
mov
in
iret
roll
inc
mov
pop
cld
out
lret
int
int
jmp
inc
mov
mov
cli
nop
cmp
loop
call
js
icebp
ret
push
mov
sub
push
and
adc
sarb
test
std
repnz
daa
int3
and
dec
adc
mov
scas
pop
out
push
cli
or
cmc
clc
inc
inc
stos
ss
mov
outsb
out
jle
cmp
xchg
lods
ret
mov
xchg
and
int3
xor
jnp
cs
fnstsw
scas
rorb
in
gs
dec
adc
out
and
lods
jge
xchg
cld
jp
es
dec
xor
ficompl
jo
and
push
lcall
fidivrs
sbb
sub
iret
jnp
lds
mov
mov
cmp
subl
scas
xchg
jecxz
mov
ret
dec
sbb
pop
inc
icebp
xchg
mov
xor
rorl
fwait
fs
faddp
rorl
xchg
mov
ret
sub
push
xchg
fdivs
push
ds
fisubrl
xchg
lea
or
data16
aas
test
cmp
sbb
repz
out
mov
popf
push
add
mov
aaa
mov
hlt
dec
mov
aad
add
sub
adc
sti
roll
ss
std
je
jl
fwait
adc
mov
mov
or
mov
jnp
sub
add
push
ret
inc
loopne
push
cld
cli
xlat
xchg
shlb
adc
ret
insb
movsl
movsl
push
mov
pop
je
mov
mov
jbe
and
std
cld
leave
and
lret
clc
mov
pop
mov
lock
ret
and
sub
xchg
hlt
loope
dec
pop
aaa
add
ljmp
inc
sbb
das
orl
pop
ja
in
mov
adc
sbb
dec
cmpsb
xchg
push
lcall
sbb
xor
cmp
and
push
mov
jns
cwtl
add
outsl
pop
dec
jge
addr16
stos
or
inc
aam
rclb
add
js
inc
lds
data16
cs
push
fadd
and
xor
add
dec
inc
xlat
adc
stos
or
jno
or
imul
mov
int
ret
lock
out
movsb
or
stos
xchg
pop
test
flds
or
mov
inc
das
xchg
jge
push
xchg
or
lds
mov
rol
adc
jbe
dec
jnp
lds
stos
sbb
int3
stc
movsb
jecxz
dec
jge
dec
sub
sbb
test
scas
inc
dec
imul
mov
fidivl
das
xchg
into
scas
xchg
xchg
shlb
test
outsb
sub
xchg
cld
sahf
pop
cltd
cmp
fmul
in
dec
ja
adc
add
loope
fldl
insl
inc
daa
and
jmp
mov
hlt
loop
ss
aam
jl
jecxz
mov
daa
sbb
or
cmp
cmp
aam
xchg
ret
cmpsb
insl
push
repz
cld
mov
push
push
call
push
push
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
bound
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
bound
nop
bound
mov
add
bound
jo
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
bound
aam
inc
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
arpl
nop
arpl
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fs
add
fs
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
test
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
test
nop
test
mov
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
int3
test
aam
inc
add
test
hlt
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
insb
test
nop
test
mov
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
xchg
addb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
