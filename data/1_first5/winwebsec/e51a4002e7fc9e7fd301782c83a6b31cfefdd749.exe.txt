inc
adc
cli
je
add
test
dec
push
add
mov
inc
add
in
add
jmp
inc
add
add
add
add
add
add
add
add
add
add
add
aad
fbld
out
jg
popa
and
xor
sbbb
pusha
push
mov
icebp
gs
cli
xchg
adc
pop
cmp
loope
fstpl
ds
shl
pop
push
aad
lock
push
push
call
add
jne
add
pusha
add
outsb
cs
aad
add
sub
out
popa
mov
stc
popa
fidivl
cld
aad
aaa
cld
mov
sahf
mov
xchg
out
into
pushf
das
adc
or
mov
sub
push
out
adc
in
sbb
fistpl
stc
add
cmpsb
add
pop
sbb
aaa
roll
repz
ja
in
scas
js
push
aad
add
outsl
aad
sbb
je
cwtl
sub
inc
mov
push
aad
mov
icebp
test
fisubs
test
cmpsb
sbb
rorb
sub
jge
sbb
xor
and
fidivl
jb
jo
push
aad
sub
jne
add
je
nop
das
shl
test
inc
inc
das
sti
sti
mov
mov
push
aad
add
mov
or
pop
xlat
mov
pop
cmp
outsl
jae
popa
sbb
int
in
xor
loop
sbb
ja
sbb
pop
add
in
pop
push
aad
sbb
or
sahf
dec
cmpsl
xor
aad
shll
pop
push
aad
lahf
push
dec
or
xchg
das
cltd
std
repz
icebp
das
aad
lret
outsl
mov
cltd
jg
inc
das
xor
rcrb
movsl
pop
add
in
pop
push
aad
fwait
ja
mov
xor
pop
enter
arpl
pop
fs
mov
call
das
cltd
adc
insl
mov
icebp
push
cltd
add
or
add
aad
adc
cmpsl
movsl
or
ljmp
mov
inc
mov
add
mov
mov
push
mov
push
or
sbb
push
mov
stos
xor
aad
or
cmp
push
mov
jno
sahf
pop
xchg
ja
lea
mov
jb
push
mov
jbe
imul
jbe
xchg
lcall
push
jno
aad
add
sub
std
shll
add
std
cmp
dec
mov
stos
sbb
adc
push
stos
ljmp
xchg
std
and
dec
mov
imul
dec
test
imul
jbe
and
or
ljmp
cltd
or
test
mov
cmp
mov
xor
mov
sahf
in
add
aad
pop
test
or
in
add
aad
test
lret
mov
and
cli
aad
add
cs
mov
shl
test
daa
pop
dec
inc
and
ret
jo
pop
imul
mov
add
mov
push
test
pmullw
loopne
mov
mov
push
outsl
xor
jl
sub
cltd
inc
xor
jge
push
pop
out
aad
cmp
push
aad
out
jno
scas
cmpsl
jno
push
pop
sbb
aaa
lods
add
and
imul
je
lock
xlat
test
fldenv
lea
push
mov
add
outsl
in
add
cmpsb
pop
mov
sbb
mov
add
in
or
aad
cwtl
aas
inc
fcomps
push
aad
das
fnstenv
jns
lahf
in
gs
aad
out
pop
in
sub
cmpsb
jbe
aas
out
or
aad
cwtl
pop
mov
mov
sbb
sahf
test
lods
ss
shrl
test
sub
fucomi
enter
mov
push
pop
pop
inc
push
mov
push
fucomi
fadds
mov
lahf
in
std
xchg
fidivl
aas
out
or
aad
cwtl
pop
mov
lea
int
jle
push
aad
pop
sub
push
add
aad
mov
mov
push
pop
rolb
mov
push
mov
pusha
jno
aad
add
arpl
shrb
sahf
or
lods
ja
gs
icebp
fnstenv
movsl
fnstenv
movsb
das
stc
int
xchg
xchg
loope
mov
jp,pn
push
jle
arpl
xor
add
outsl
mov
sbb
outsl
sarl
mov
push
push
jl
outsl
cmp
mov
lret
or
jne
je
cltd
das
in
sbb
lret
out
push
pop
pop
test
insl
jne
test
sbb
cli
data16
sbb
fs
stos
push
leave
pusha
rcrl
pop
fcompl
fdivl
jbe
addb
aad
in
jne
mov
push
aad
lret
outsl
mov
popa
int3
gs
cltd
mov
push
mov
pop
sub
hlt
pop
and
aad
sub
jmp
sahf
stc
or
lahf
hlt
iretw
cwtl
pop
sbb
daa
xchg
hlt
mov
imul
sub
inc
push
es
aas
out
or
aad
insb
xor
jecxz
sub
movsl
sahf
enter
mov
jmp
mov
out
sar
pop
pop
aad
add
outsl
shr
inc
pop
aad
das
fwait
shll
je
sbbb
cmpsl
sub
es
jle
push
pop
jne
adc
xlat
mov
cwtl
outsl
rorl
pop
fs
mov
repz
mov
jo
bound
fistpll
push
out
lret
aad
das
lahf
mov
sbb
je
cwtl
jae
test
je
sti
xchg
dec
iret
popa
in
mov
aas
cwtl
adc
popf
lcall
aad
add
push
xchg
arpl
cs
push
aad
xchg
call
aad
ret
icebp
push
addb
mov
pop
or
pop
sbb
add
sbb
push
stos
add
mov
js
xchg
adc
add
cli
inc
aam
incb
cmpsl
pop
ljmp
dec
out
popf
std
fldcw
sbb
cli
inc
fdivrs
cmp
jo
in
lods
cs
lods
cmp
outsl
lahf
jecxz
cli
inc
cs
shrl
out
sbb
push
mov
stos
outsl
xlat
stc
aas
xchg
test
test
outsl
movsl
decl
in
lret
daa
bound
pop
fsubrl
movsb
dec
mov
xor
push
jecxz
lea
ret
bound
push
loop
popl
xchg
pop
push
rcll
adc
call
sub
xor
xchg
lea
mov
xor
pop
nop
and
mov
xchg
cmp
orl
dec
stc
push
jle
in
mov
je
aad
add
adc
stos
or
mov
mov
jbe
divb
imul
xchg
cmp
sub
ja
pop
stos
sub
mov
mov
xchg
or
mov
je
mov
xchg
jae
movsb
mov
add
sar
and
pop
xor
ficoms
push
and
mov
scas
mov
lahf
pop
mov
nop
mov
sahf
incb
add
sbb
xor
fwait
add
cmpsl
xchg
mov
shrl
push
adc
pop
push
pop
xor
jmp
push
ret
xchg
pop
sti
cmc
xchg
push
dec
or
push
je
es
mov
nop
aaa
mov
push
int3
jnp
xor
or
das
inc
mov
mov
into
jecxz
inc
stos
mov
stos
fists
sti
dec
out
pop
push
jp
push
inc
mov
mov
mov
int3
mov
sbb
add
push
out
dec
dec
pop
xor
outsl
dec
es
cld
adc
lock
inc
mov
lahf
jg
jne
mov
xchg
mov
repnz
pop
cmp
xchg
cmpb
stc
aam
aam
sbb
test
pop
inc
xchg
daa
sbb
aad
mov
aas
stc
mov
add
enter
lcall
and
arpl
and
out
xchg
push
cmp
insb
aam
sbb
or
push
inc
fimull
mov
inc
ret
out
out
and
shl
adc
mov
fwait
js
lcall
in
push
mov
jnp
add
leave
dec
adc
js
loope
mov
imul
ret
and
or
fs
cwtl
inc
cmp
jl
push
insb
or
int3
inc
test
add
mov
mov
sub
pusha
push
stos
aam
xor
lcall
in
sub
push
pop
and
cmp
pop
add
pop
xchg
or
mov
cmp
fcoms
cltd
fldenv
fnstenv
rcl
das
dec
aad
xor
rclb
mov
in
and
add
add
adc
divl
outsl
sbb
xorb
aas
mov
cmpl
mov
insl
int
pop
arpl
xchg
mov
in
xor
mov
add
pop
xor
adc
sbb
push
loope
orb
test
inc
inc
mov
push
and
cmpsl
fxtract
int
nop
in
xchg
ss
xor
ret
and
push
mov
sub
pop
or
ret
xor
push
pop
fildll
fwait
mov
enter
add
jbe
sbbb
or
xlat
pusha
lea
addr16
stos
jg
push
mov
fcompl
xchg
outsl
test
jbe
sub
mov
inc
hlt
mov
lret
lock
int
sbb
insb
and
fistl
imul
add
or
sbb
enter
mov
popf
sbb
cld
aaa
pop
divl
dec
push
jnp
loope
loop
xchg
sbb
adc
loop
mov
fcomps
jle
and
lret
rorl
cmp
jmp
and
mov
mov
mov
mov
adc
and
add
jp
fcmovbe
sahf
scas
pop
and
sub
push
cmp
mov
in
rcrl
pop
mov
mov
push
lret
out
inc
xor
sbb
xchg
cmpsl
cmpl
dec
mov
sub
shrl
aas
inc
rcrb
mov
out
xchg
xor
ja
repnz
jmp
jl
cmpsb
cwtl
pop
xchg
into
stc
fimull
out
lahf
imul
pop
inc
and
xor
dec
fnop
mov
ret
and
mov
adc
pop
sub
out
jnp
cltd
mov
jnp
add
cs
es
sub
or
xchg
or
aad
xchg
xchg
sub
xor
andb
mov
inc
push
inc
loop
add
in
aad
add
shll
cli
mov
jg
gs
mov
arpl
in
xorb
fld
rcll
pop
bound
rcll
adc
mov
cld
cld
sub
push
mov
and
scas
loopne
or
cmp
pop
fnstenv
mov
loopne
dec
cwtl
add
aam
imul
add
jne
xor
stos
call
and
fcmove
push
xchg
lahf
call
mov
and
inc
das
jge
rorb
pushw
xor
xlat
sbbb
lcall
sbb
imul
jmp
incl
lcall
add
inc
adc
movsb
aam
jl
outsl
inc
dec
lods
xlat
scas
arpl
sti
call
sti
cmc
aad
jno
jno
popf
pop
and
xor
imul
mov
push
adc
sbb
mov
push
ds
pop
inc
cmp
mov
lods
mov
jbe
xchg
add
pusha
popa
loope
leave
or
adc
xchg
out
jo
ja
mov
dec
fimuls
loop
aad
loope
push
mov
stc
daa
div
push
je
sbb
mov
cmp
jbe
setp
xchg
out
mov
imul
sub
mov
les
pop
stc
fldenv
jecxz
jg
pop
push
shll
dec
dec
aam
lods
or
xchg
loopne
jle
pop
and
pop
mov
out
jbe
mov
mov
adc
fdivl
mov
fs
add
mov
pop
shll
lret
mov
pop
adc
orl
cli
fdivrl
je
mov
push
mov
sub
and
mov
jns
dec
inc
das
jnp
pop
addr16
push
mov
lahf
add
shr
orl
xor
sub
push
hlt
pop
test
add
mov
inc
push
mov
ret
mov
inc
jl
cmp
nop
lcall
test
iret
xor
hlt
fldt
add
sbb
mov
enter
inc
dec
insl
jae
sub
aam
add
push
scas
jle
mov
lcall
loope
not
mov
add
or
fdivs
test
leave
insl
mov
xorl
clc
sti
loope
lret
mov
jno
test
out
inc
cmp
adc
pop
fs
jbe
aad
loop
es
mov
mov
add
movl
stos
sbb
test
fsubs
dec
aad
insl
sbb
nop
jns
popf
insl
and
jae
int
or
add
and
mov
pusha
or
jne
mov
leave
xor
pop
push
add
out
xor
aaa
fmull
rol
mov
cld
push
or
ror
xchg
test
leave
fwait
sub
out
mov
mov
loop
cmp
idiv
cmpl
adc
lods
fwait
pop
xor
xchg
xchg
cld
fldt
add
mov
stos
cmpsb
lds
jb
push
hlt
sub
or
fnstsw
hlt
sub
test
jo
in
mov
pusha
lret
fwait
and
add
inc
lahf
push
fadd
cmp
iret
pop
jne
pop
inc
pop
les
xchg
dec
fs
jle
ljmp
xor
in
sub
shrl
in
int
jo
icebp
add
mov
add
push
je
sti
cs
int
or
and
dec
test
mov
out
mov
scas
inc
mov
push
push
mov
cltd
divb
jg
icebp
mov
mov
aam
cmpsl
dec
ja
xlat
out
mov
sbb
push
ljmp
fidivl
mov
jne
xchg
test
cmpsb
dec
sub
test
pushf
and
rorb
scas
sub
add
fadds
adc
out
mov
bound
xor
dec
jg
mov
repnz
mov
pushf
mov
mulb
adc
add
inc
jo
and
pop
mov
push
fs
jne
dec
ds
faddl
aad
push
aam
jns
fbstp
xchg
adc
lret
add
and
ljmp
mov
notb
mov
fnsetpm(287
shrl
jg
add
mov
loopne
mov
insb
mov
out
lds
stos
xor
cmp
ret
mov
sbb
mov
pop
aam
add
mov
sbb
jle
aas
mov
mov
aam
dec
mov
pop
pop
jne
and
aam
mov
mov
stc
insb
cmp
pop
es
scas
fildll
jns
inc
rorb
jl
xor
pop
sbb
xchg
movsl
cltd
inc
out
rcl
imul
adc
push
dec
push
mov
ja
xchg
inc
addr16
jb
fimuls
push
xchg
scas
jnp
mov
add
mov
lds
rcrl
insl
push
aaa
or
sbb
and
mov
addr16
jae
sbb
or
out
pop
shll
mov
pop
push
popf
mov
out
pop
sub
pushf
inc
mov
push
jecxz
loopne
mov
mov
xchg
in
cmp
xchg
xchg
xor
aam
or
and
mov
mov
mov
add
mov
test
mov
aad
or
cmc
and
add
dec
jg
push
lea
pusha
jmp
mov
jb
push
or
mov
call
pop
int
mov
or
xchg
pop
sub
push
pop
outsl
cmpsl
jge
add
cltd
mov
pop
adc
lahf
fdivs
xor
aad
mov
mov
negl
xor
jge
or
hlt
pop
sbb
adc
and
mov
dec
mov
loopne
or
jle
lret
inc
addl
pusha
sub
mov
xchg
in
mov
shrb
add
add
dec
insb
jns
add
mov
jge
imull
cmp
imul
int3
push
sbb
xlat
xchg
and
jo
rcrl
fdiv
mov
dec
mov
push
mov
push
cmc
adc
mov
xchg
mov
xchg
in
icebp
mov
aad
cmc
arpl
cld
sub
loop
jp
icebp
or
cmc
mov
outsb
dec
testb
sbb
bound
xor
loop
lgs
sbb
lret
lods
outsl
pop
int3
cmpsb
out
mov
xchg
add
flds
mov
xchg
cltd
stos
addr16
stc
sub
adc
xlat
push
xor
mov
leave
mov
or
adc
pop
das
frstor
inc
andps
mov
out
add
addr16
inc
push
fstpt
inc
das
ljmp
cmp
fstpl
sub
sub
mov
mov
in
xchg
pop
push
dec
aam
rol
jns
lods
rcl
es
int3
fadd
jg
mov
bound
pop
mov
mov
push
loope
mov
lods
xlat
lods
cmc
test
loope
inc
movsb
nop
pop
push
dec
push
pop
pop
rolb
pop
in
jp
cmp
lret
mov
stos
inc
sbb
jns
loopne
cmp
add
push
jbe
mov
push
xor
adc
into
adc
and
xor
fwait
das
fdiv
pop
repnz
mov
fcoml
push
out
es
fisubl
or
mov
pop
shlb
in
daa
sbb
fmull
aaa
mov
inc
outsb
notb
ss
enter
mov
enter
lcall
dec
push
jae
dec
or
jle
xacquire
mov
inc
gs
jp
jno
sbb
lea
mov
push
test
rcrb
mov
test
es
lods
aad
jmp
ret
inc
roll
rol
jg
cmpsl
sub
push
xor
dec
push
sbb
repz
rorl
sub
loope
in
dec
roll
fmull
pop
test
into
cmp
mov
push
mov
xor
mov
data16
or
jo
xchg
sub
mov
lods
and
adc
dec
aam
add
inc
cmpsb
fimuls
sarl
mov
push
pop
insb
ss
push
cmpsb
cmp
out
mov
lea
inc
pop
xchg
push
cwtl
in
mov
mov
cltd
mov
negb
fs
push
jle
sbb
jecxz
lea
mov
add
int3
mov
push
aam
lds
push
mov
cld
mov
add
loopne
ror
mov
std
jno
popa
imul
dec
repnz
je
test
jp
mov
or
jns
in
pop
xor
cs
mov
xchg
push
push
pop
ljmp
sub
or
inc
mov
jge
jmp
scas
imul
sub
push
pusha
and
mov
or
je
lahf
mov
mov
sahf
jge
sti
loop
loop
sbb
in
mov
cmpsb
adc
add
adc
mov
mov
cmp
mov
enter
stc
dec
pop
dec
js
cmpsl
mov
mov
mov
ds
mov
jne
xchg
movsb
xchg
mov
add
or
lcall
rol
mov
aam
adc
mov
out
cmpsl
jecxz
insb
add
cltd
imul
add
lea
push
add
fstpl
outsb
adc
mov
mov
mov
xlat
or
repz
add
out
and
fwait
nop
xchg
xor
xlat
cmp
cmp
push
xchg
std
push
xlat
add
in
aad
loope
mov
arpl
jg
aaa
pop
jmp
daa
dec
testw
imul
or
das
inc
mov
enter
scas
pop
scas
dec
stos
wrmsr
and
xlat
rorl
cmpsb
aas
add
mov
jle
sbb
ds
out
adc
jmp
mov
mov
call
add
push
scas
push
mov
das
mov
push
subl
aad
lock
mov
mov
sbb
aaa
push
inc
incl
in
xor
adc
jns
iret
jb
add
adcb
mov
outsl
iret
aam
dec
fstps
cltd
lods
inc
fists
push
movsl
std
push
add
xlat
mov
shlb
mov
out
jmp
in
pusha
jmp
arpl
sub
add
dec
fdivl
cmp
xchg
jp
loopne
out
pusha
lahf
test
jo
dec
cmp
aam
jbe
add
pop
arpl
xchg
xchg
jge
inc
cld
xchg
sub
mov
pushf
pop
push
mov
movsb
rol
mov
adc
jb
or
fsubp
ja
pop
divl
inc
fmuls
xchg
add
orb
cmovg
jbe
jns
pop
cmp
imulb
pop
gs
cmpsl
adc
mov
pop
push
mov
repz
mov
hlt
xor
decl
cs
inc
push
shrl
aam
cmpsl
jg
fdivs
out
mov
loopne
cmc
aad
mov
xor
mov
fdivs
aad
mov
add
inc
sbb
aad
sbb
pusha
dec
push
fisttpll
or
setns
or
adc
pop
xlat
fdivrs
test
or
faddl
imul
lret
bound
inc
and
pop
push
push
dec
mov
mov
das
xor
jecxz
inc
jl
sbb
inc
rol
bound
cmp
jmp
sbb
shr
call
sbb
in
mov
mov
cs
dec
es
mov
js
mov
leave
xchg
adc
cmp
stos
lds
dec
mov
and
test
add
fwait
xchg
add
clc
xor
stos
idivb
shrl
mov
aaa
mov
leave
inc
add
add
add
cli
adc
mov
mov
add
addb
add
mov
sub
mov
aad
inc
fucom
mov
in
sti
cmpsl
lds
stos
decb
mov
es
mov
pop
in
xor
add
adcb
mov
or
adc
std
roll
push
mov
jmp
cmpsb
mov
mov
inc
ret
mov
adcb
in
jecxz
stos
dec
adc
add
jge
add
sahf
xchg
push
les
and
mov
or
or
sbb
arpl
orb
dec
cmp
ja
lret
and
das
pop
lds
adc
dec
out
lahf
inc
aaa
push
xchg
inc
je
or
int3
ret
xor
jno
cvtpi2ps
in
js
aam
cmp
lret
sbb
ror
pop
or
aaa
fst
mov
dec
ss
mov
ja
adc
xor
jae
xor
repz
jnp
adc
mov
pop
dec
pusha
aas
dec
push
push
jbe
test
movsl
and
push
xchg
inc
mov
jle
dec
sti
jbe
fidivrs
addb
push
add
sbb
cmp
mov
push
jle
clc
test
enter
mov
sbb
push
mov
cmpsl
jo
out
imul
test
jl
imul
adc
jmp
fsubl
mov
add
mov
sub
push
xchg
jecxz
xor
dec
mov
adc
dec
jmp
ljmp
out
out
add
jae
or
sub
xor
hlt
push
push
cmpsl
aam
dec
push
dec
inc
inc
pop
cmpsb
je
pusha
mov
idivl
lret
test
addl
pop
mov
hlt
mov
lret
dec
or
push
mov
sub
popf
or
push
test
mov
dec
call
add
lea
das
stos
add
mov
mov
movsl
popa
jmp
cmp
sti
int
xchg
dec
aam
inc
cli
out
arpl
aad
and
xchg
movsb
jl
mov
xor
cmp
jmp
push
dec
popf
test
gs
lahf
adc
adc
ss
popa
sahf
ret
mov
gs
loopne
sub
jnp
movb
mov
jg
mov
sbb
aam
scas
mov
mov
pop
push
fsubrs
sub
ss
aad
push
std
sahf
push
mov
hlt
mov
dec
push
sti
ret
lea
mov
cli
aad
lcall
rcrb
mov
outsb
ja
out
loop
add
stos
sub
int
mov
mov
scas
fdivrl
xor
aas
pop
mov
imul
aam
lds
cltd
dec
pushf
mul
fmulp
push
pop
mov
aaa
sbb
add
insb
imul
cmp
pop
and
data16
adc
dec
mov
xchg
fsub
mov
into
fadd
add
loop
loope
sbb
mov
cltd
jae
pop
cwtl
test
out
in
push
cmp
addr16
xchg
cwtl
test
adc
leave
lods
sti
mov
or
mov
push
insb
or
es
cmp
pop
xor
dec
cmp
pop
pop
xlat
daa
test
push
out
sbb
pop
cmp
adcb
ss
sub
jecxz
fidivrl
mov
jp
xor
das
in
push
fcomip
lahf
or
dec
push
orl
std
cmp
cs
cmp
push
nop
push
mov
add
mov
imulb
jbe
jo
and
lock
push
sarb
repz
xlat
stos
mov
adc
pop
sbb
push
or
jo
and
aad
jns
jmp
pop
ja
stos
mov
aad
pushf
add
and
sahf
les
mov
subl
ss
ret
push
lea
pop
pop
loope
pop
out
bound
addl
adc
xchg
pusha
jmp
or
sub
es
push
mov
enter
pop
pop
in
cmp
push
add
das
push
stos
arpl
setnp
mov
sbb
out
and
jnp
rol
add
dec
pop
add
das
sbb
dec
mov
rclb
lret
leave
aam
scas
aam
outsl
out
sub
push
dec
rorb
pop
ss
add
fiadds
cmpsl
popa
jmp
shl
mov
mov
xor
out
insl
mov
push
mov
add
dec
scas
add
in
pop
loope
or
in
shll
jle,pn
subps
or
lret
aad
aam
lret
leave
xor
xorl
push
jnp
sub
mov
xorl
in
adc
mov
xorb
dec
dec
push
jl
xor
fcmovnbe
mov
sub
mov
xchg
mov
add
mov
mov
jns
rcrb
in
jle
mov
xlat
in
sbb
and
in
and
cwtl
cmpsb
mov
pusha
cmc
stc
sbb
sub
js
aad
and
xor
xchg
int
fisttpl
or
xchg
push
adc
pop
je
daa
mov
repnz
adc
mov
cmpsb
aas
das
lds
repnz
sbb
test
mov
pop
push
inc
ljmp
add
add
mov
mov
jmp
insl
xchg
and
testb
mov
cmp
pop
lret
es
pop
add
xor
pop
jo
mov
xor
aam
sbb
cmc
pop
rcrl
xchg
xchg
mov
fidivrl
aam
jo
push
mov
mov
aam
sbb
aam
adc
sbb
dec
cmp
adc
push
cmp
add
cmpsl
push
jns
add
ret
inc
in
fildl
sub
pop
aaa
leave
mov
add
cmp
lock
out
shl
scas
scas
shrl
lret
push
fdivr
jl
movsb
mov
hlt
xor
cli
lea
push
and
stos
daa
pop
lock
sbb
mov
sbb
mov
stc
xchg
inc
cmp
pop
cmp
push
fs
sbb
inc
insb
mov
and
xor
add
data16
pop
into
idivl
shlb
dec
xlat
aaa
mov
dec
or
imul
mov
xlat
or
movsb
movl
out
out
aam
pop
sbb
shlb
xlat
mov
jne
test
loop
cs
loop
lods
push
out
movsl
pop
cmp
shll
sub
stos
lock
mov
or
fistpll
add
mov
pop
or
xchg
mov
mov
shrb
pop
rcll
jl
xor
sub
ja
dec
insb
sbb
pop
int
fcomp
mov
lods
xor
clc
xchg
dec
or
sbb
movsb
les
lret
inc
neg
add
mov
insl
cmp
sub
inc
sub
in
lahf
add
aaa
mov
or
shrl
mov
pop
lock
push
xor
dec
outsl
insb
cltd
loope
and
adc
dec
dec
nop
cli
js
test
jl
xor
das
xlat
sbb
sahf
mov
lods
add
hlt
inc
push
pop
fwait
xchg
add
and
xlat
jmp
mov
pop
add
mov
jl
pusha
mov
movsb
stc
lret
flds
inc
push
shr
adc
lcall
mov
lret
cwtl
outsl
std
lods
push
je
push
add
pop
outsl
and
jb
in
adc
mov
jae
or
mov
jmp
mov
pop
inc
fwait
sahf
out
int
jo
dec
inc
jnp
push
ret
pop
lcall
cmc
jns
and
sub
out
adc
shlb
ret
aaa
push
push
iret
jecxz
mul
mov
mov
mov
mov
xor
pusha
add
lea
push
idivl
and
movsb
cltd
sbb
rclb
enter
or
dec
sbb
insl
and
mov
ds
mov
push
out
jge
dec
add
in
add
out
adcl
mov
bnd
xchg
mov
lret
cli
int
das
mov
push
mov
add
call
jo
pusha
movsl
jb
lods
add
mov
shlb
ss
adc
pop
lea
xor
aam
rcrb
pop
mov
ret
out
or
in
jbe
lret
negb
mov
jmp
pop
lahf
test
jp
xor
pop
jb
push
outsl
andb
hlt
cmpsb
pusha
push
pop
cmp
and
sub
mov
sbb
aam
mov
movsb
loope
pop
xchg
mov
pop
cmpsl
out
jbe
pop
dec
scas
pop
sub
aad
sbb
pop
or
adcb
sub
sub
pusha
ror
mov
outsl
cs
fimuls
mov
ss
cs
push
cltd
mov
aaa
cmp
imul
test
mov
rolb
or
fdivl
dec
add
js
xlat
mov
aas
ret
aad
xchg
jl,pt
sar
cmpsl
xlat
jno
popf
mov
add
lahf
mov
push
sub
pusha
xlat
and
enter
pusha
mov
arpl
cltd
jle
xor
lret
mov
aam
xchg
iret
les
sti
pop
cltd
push
es
imul
mov
imul
xchg
mov
push
and
dec
popa
in
daa
adc
sbb
stc
sahf
mov
mov
into
insl
jno
inc
test
xchg
pop
pusha
mov
mov
add
aas
push
and
pop
sub
mov
pop
aam
in
roll
adc
lods
enter
sub
test
push
fwait
out
mov
fcoms
and
cmp
mov
mov
push
adc
imul
je
pop
push
and
adc
aam
dec
cwtl
loopne
dec
dec
mov
fwait
gs
cmpsb
mov
cld
jmp
xor
sti
mov
ret
mov
mov
dec
orl
outsl
jl
pop
add
loope
sbb
loope
mov
loop
xlat
ljmp
xchg
dec
adc
pextrw
pop
xchg
jl
cmp
aam
in
gs
gs
clc
mov
fisttps
cmp
mov
je
out
shll
aad
dec
sub
pusha
lcall
dec
add
jo
add
sub
mov
pop
mov
mov
subl
xor
sub
lahf
aas
lret
pop
movsb
test
xor
leave
scas
push
cli
in
cmp
int3
adc
or
add
aaa
inc
stc
add
into
je
mov
lock
jle
insl
insb
mov
lea
movsl
mov
xor
xchg
or
call
stos
sbb
jno
data16
sti
xor
lret
cwtl
insl
or
pop
shll
add
sub
pop
push
cmp
inc
hlt
mov
xchg
imul
push
jne
mov
repnz
xchg
push
mov
data16
pop
adc
push
mov
mov
adc
cs
dec
in
or
pop
je
test
lock
dec
sbb
lahf
add
cli
jmp
std
mov
xchg
mov
in
push
data16
dec
nop
ret
icebp
sahf
leave
loope
jbe
xor
out
pop
mov
mov
repz
push
mov
and
fidivrs
jno
or
sub
into
add
mov
mov
sbb
mov
dec
push
add
add
fldcw
and
imul
xor
call
and
fisttpl
jge
mov
jg
mov
ss
or
pop
mov
add
daa
mov
lret
daa
test
loope
les
pop
loop
jo
mov
aad
and
mov
mov
in
cmp
cmp
jne
xor
jecxz
dec
jno
rcrl
lret
aas
push
shr
add
mov
and
out
pusha
test
dec
pop
nop
imul
xchg
outsb
inc
mov
sti
xor
insl
lret
aas
dec
and
cmc
inc
add
mov
lret
inc
pop
jno
in
fmul
icebp
inc
enter
sbb
add
xchg
fdivp
inc
testb
dec
pushf
stos
int
push
push
jge
call
add
mov
aaa
mov
ds
push
daa
jp
inc
out
push
jl
cs
or
add
test
icebp
pop
leave
jns
loopne
mov
add
push
push
pop
lods
loope
outsb
pop
lret
cmc
xlat
cmp
sub
jo
add
aas
fsubr
leave
mov
xchg
mov
nop
inc
mov
lahf
daa
mov
jecxz
es
sbb
mov
scas
push
dec
nop
add
mov
jbe
gs
xchg
add
shll
pop
fisttpl
xchg
jo
add
ja
out
iret
pop
or
in
jnp
dec
pop
sub
jno
fadds
aam
cmp
push
mov
add
or
mov
inc
mov
je
and
mov
jmp
lcall
cmp
movsl
scas
pop
mov
cmc
or
ds
arpl
test
jp
out
push
inc
sbb
dec
adc
add
lret
dec
push
sub
pop
iret
insb
mov
les
aam
xlat
test
enter
subl
xlat
cmp
sub
incb
inc
cmp
out
mov
mov
mov
push
add
mov
cmpsb
mov
jb
add
ljmp
jg
mov
push
hlt
push
and
dec
mov
mov
mov
stos
mov
pop
mov
cmp
inc
jl
cmpsl
stos
orb
in
data16
insl
pushf
or
rcr
mov
dec
cld
out
mov
popf
fcmovbe
xchg
sbb
sub
incb
aaa
cmc
pop
mov
les
xchg
test
aaa
hlt
mov
arpl
adc
pop
dec
ja
bnd
mov
xchg
push
fwait
aad
neg
pop
lds
add
xor
and
mov
orb
gs
loopne
cmp
push
mov
jg
inc
add
add
xchg
or
mov
mov
sahf
sbb
pop
testl
icebp
imul
adc
lret
mov
jne
fisttpll
dec
add
jne
lea
xchg
pop
push
test
add
cli
pop
cmpsb
pop
jecxz
mov
aam
test
lcall
sbb
sub
jp
ljmp
pop
in
jbe
aas
lods
sub
cmp
cmp
dec
cld
sbb
icebp
aam
or
cmpsb
stos
movsl
rolb
loope
roll
xchg
add
ss
or
adc
lahf
adc
fwait
sbb
adc
pop
xchg
aad
push
mov
aad
push
jae
jns
inc
fisttpl
and
cmpsl
dec
add
ja
xor
xchg
xor
sub
mov
rcl
pusha
xor
jnp
xchg
jge
lret
or
ret
aad
mov
mov
mov
sbb
push
mov
fnstenv
icebp
lock
dec
scas
aad
add
std
mov
lods
sub
or
xor
cmp
inc
or
add
push
mov
pop
xchg
testl
sub
pushf
pop
push
and
ror
add
je
outsb
push
adc
data16
cmc
into
jae
push
loop
in
or
inc
add
mov
and
sbb
jp
cwtl
xchg
hlt
repz
xorb
pop
repz
fistps
or
jg
cmpl
cltd
lret
and
mov
repnz
bound
out
stc
xchg
popa
sub
mov
xor
cwtl
add
xchg
sbb
cmp
cmp
pop
xchg
fmull
adc
sbb
xchg
pop
xchg
dec
adc
jne
xchg
push
je
mov
imul
test
jge
add
add
test
xchg
loopne
ret
shl
inc
pop
lea
test
cmp
add
insl
xor
jg
mov
ds
inc
xchg
fwait
inc
pop
fistps
fistpll
cs
jl
aas
xlat
cld
seta
push
xor
mov
test
fdivrp
pop
sub
mov
int
mov
in
and
out
ljmp
push
dec
int
insl
adc
lcall
xchg
xchg
out
mov
xlat
sbb
push
push
pop
jge
pop
lcall
sbbl
add
push
sbb
clc
xchg
pusha
aas
jnp
test
xchg
mov
cmp
add
fsubl
mov
push
xchg
add
sbb
ret
stos
pusha
std
adc
dec
rorl
aam
outsb
pop
movsl
jmp
stos
mov
lods
xchg
add
scas
push
xor
or
outsb
jne
mov
insl
ljmp
jnp
outsb
nop
ret
push
dec
shrb
mov
cmp
inc
clc
je
cmp
jae
in
fcmovnu
aaa
dec
sahf
fcoms
jnp
mov
pusha
push
cmp
jae
sbb
push
add
adc
push
daa
lret
fbld
cmp
inc
aad
mov
add
cmp
lahf
push
negl
aad
mov
lcall
or
aam
xchg
mov
jb
push
lcall
adc
nop
repz
shlb
movsb
scas
xchg
add
sahf
pop
mov
sahf
orb
cs
jno
push
insl
cs
mov
imul
push
aad
mov
cmp
nop
lock
inc
arpl
lcall
xchg
push
popf
loopne
stos
scas
mov
mov
lea
add
insb
dec
push
addr16
xlat
or
adc
pop
gs
mov
pop
movsb
adc
out
iret
inc
scas
enter
xchg
adc
movsb
cmp
sbb
push
jo
and
lds
ret
loope
cmc
cltd
push
imul
in
and
push
sarl
xchg
lcall
inc
mov
ficoms
stc
out
hlt
pusha
xchg
rcl
enter
sbb
jb
fldl
sahf
or
int3
push
push
mov
mov
mov
pusha
jns
mov
dec
jne
pusha
jmp
jge
jle
add
stc
jne
jae
pop
xchg
add
out
int
pushf
mov
mov
push
mov
inc
aad
bnd
mov
aad
fcmovnb
inc
in
and
lods
mov
jge
std
loopne
or
xlat
mov
xor
loop
lret
pop
fs
pusha
jecxz
pop
mov
add
lock
adc
cmpsb
and
dec
xchg
popa
lods
sub
ret
shlb
xor
scas
aaa
mov
insl
dec
push
ljmp
fdivl
pop
push
adc
xchg
or
sub
sbb
jo
jne
sbb
jl
add
push
and
jb
inc
xor
mov
lea
dec
aam
call
popa
cmp
test
jne
xlat
pop
scas
mov
jns
insb
popf
xor
xlat
hlt
dec
jle
decb
aad
or
mov
mov
sub
inc
sub
repnz
call
push
push
fbstp
push
fldl
cwtl
shlb
mov
sysexit
out
sub
lret
pop
int
sbb
mov
dec
loope
paddusw
push
cmp
fdivl
adc
lcall
mov
je
inc
aas
andb
add
fldl
gs
iret
jbe
xlat
in
popa
outsb
aam
or
mov
mov
sub
mov
aam
push
ret
movsb
adc
jl
arpl
inc
mov
dec
push
gs
nop
xchg
or
rcrb
outsb
movsb
adc
mov
js
arpl
inc
sti
and
stos
mov
jb
dec
inc
inc
jae
ret
ljmp
cmp
sub
int
pop
push
add
sbb
cmp
std
arpl
mov
movsl
out
ret
sub
mov
into
sbb
es
pop
int
xchg
aam
cwtl
lret
mov
in
jle
repnz
dec
sbb
shll
mov
lahf
dec
aad
movsl
pop
xchg
xor
mov
xchg
js
add
lcall
and
in
jo
push
xchg
int
add
adc
sbb
pop
push
lcall
pop
int3
push
mov
pushf
sbb
pop
rol
mov
dec
sub
xor
mov
sbb
pop
aam
lret
rclb
push
pop
sub
push
icebp
xchg
adc
sbb
push
aam
add
inc
in
std
mov
int
cwtl
sub
xor
jno
jno
lock
mov
jne
mov
push
mov
je
pop
jnp
xchg
rcll
ljmp
lret
sti
mov
sub
mov
cli
mov
cld
sub
jno
pusha
mov
mov
jno
mov
repnz
das
mov
sbb
sahf
add
dec
scas
shrl
int
cmc
jb
rorl
fdivrl
test
sarl
inc
pop
adc
aaa
or
mov
inc
dec
roll
cmpsb
sbb
push
mov
cwtl
pop
adc
xchg
ss
cmp
push
testl
popa
mov
dec
es
jecxz
mov
loopne
insl
rcll
and
test
jb
das
xchg
movsb
test
cwtl
pushf
xor
sub
dec
inc
adcb
mov
ljmp
shll
jl
aam
cwtl
inc
pop
popf
xor
mov
cltd
mov
data16
test
cltd
sbb
in
ret
mov
leave
push
outsl
and
daa
push
fbld
cwtl
push
mov
fiadds
push
imul
cmc
push
mulb
xchg
icebp
lds
adc
mov
adc
adc
test
lret
xchg
rolb
fidivrs
jno
bound
cmpsl
jg
and
add
xor
push
orl
je
cmp
fsts
ret
inc
pop
insl
push
push
inc
inc
in
adc
icebp
dec
mov
xor
xchg
pusha
inc
jae
mov
mov
scas
mov
fcoms
call
cli
fcmove
arpl
mov
clc
mov
push
fstpt
mov
ss
push
push
sub
fdivrl
aam
aam
rcrb
pop
dec
dec
ffreep
gs
lds
push
adc
mov
jae
inc
fimull
add
xchg
mov
pop
or
data16
lret
ss
adc
fdivs
pop
test
pop
and
iret
and
or
inc
push
adc
push
pop
xor
dec
pop
add
movb
xor
in
loope
xchg
mov
fdivr
sahf
push
or
sub
pop
fisttps
sub
aad
push
test
sbb
and
dec
push
out
jg
aaa
dec
fcoml
push
push
cmpsl
iret
xchg
or
popa
int
mov
out
mov
pop
inc
sti
lahf
lea
push
test
sahf
movsb
cld
or
hlt
fsts
shrb
aam
lahf
cmp
sub
xor
mov
add
and
ret
pop
fwait
mov
pop
rcr
data16
fmulp
test
lods
push
push
call
jp
lods
roll
adc
jp
lods
and
fsubr
pusha
into
scas
or
dec
dec
or
add
cmp
outsb
fwait
pop
sub
addr16
jb
fbld
mov
imul
dec
pop
xor
pop
stos
addr16
outsb
mov
sub
notb
std
push
rorb
xor
arpl
mov
pop
cmp
or
test
fadd
fsubs
push
mov
mov
pusha
lahf
sbb
push
jle
dec
or
xor
pop
repnz
push
pop
rcrl
scas
test
addb
push
push
or
sbb
jns
loop
stos
jb
popa
xchg
movsl
adc
cmpsb
push
adc
xchg
and
dec
aad
fst
xchg
mov
in
adc
daa
add
cld
outsl
aam
daa
test
pop
sub
add
mov
ret
push
mov
add
in
rolb
add
scas
mov
xchg
push
pop
imul
fucom
adc
pop
inc
mov
add
push
in
push
test
arpl
inc
addr16
inc
add
mov
aad
ja
sub
or
popf
aas
call
xor
cmp
ret
dec
ret
mov
mov
sbb
jg
iretw
dec
mov
mov
and
cmp
mov
push
inc
push
add
test
ret
popa
cmp
fbstp
add
xchg
pusha
jmp
sbb
aad
dec
pop
lods
or
add
cmc
jge
ret
aam
in
jo
cwtl
aam
mov
ret
fistps
jbe
add
jp
push
movsl
xchg
fsubs
mov
scas
pushf
cmp
push
data16
mov
push
in
mov
and
shr
jl
xchg
sub
sbb
in
sbb
sbb
lret
inc
xlat
inc
mov
mov
subl
or
mov
pop
mov
xchg
jg
imul
push
in
lods
jge
xlat
sbb
cmp
push
dec
enter
loope
xchg
adc
mov
pop
sbb
int
aad
scas
pop
mov
mov
jp
inc
cld
das
pushf
or
inc
push
add
or
jp
mov
gs
jecxz
cmp
lcall
mov
shlb
xor
sti
pusha
mov
inc
add
loope
imul
movsl
shll
jbe
xchg
loopne
xchg
je
add
sbb
fmuls
add
pop
jle
pusha
mov
mov
cmp
sub
sbb
jnp
push
outsl
cmpb
aad
jae
clc
cmc
cmp
mov
mov
sahf
aad
adc
jae
ror
sub
loope
jno
pusha
mov
lock
or
push
sbb
pop
scas
pop
mov
test
arpl
pop
ljmp
cmc
pop
aam
ss
inc
sub
dec
push
mov
push
xchg
dec
pop
ss
fisttpll
in
sti
pusha
int
and
pop
jecxz
aam
aad
aad
div
das
mov
cmp
aaa
sub
inc
pop
push
xchg
stos
sbbl
push
aas
dec
mov
add
out
daa
add
out
push
mov
decb
enter
and
aam
das
into
out
adc
mov
inc
mov
daa
cmp
movsb
dec
add
in
cmp
push
inc
sbb
adc
imul
sub
les
jnp
inc
or
je
je
pop
or
je
pop
gs
xchg
dec
mov
lds
mov
jge
js
add
cmp
pop
ficomps
pop
lds
ss
push
into
aam
call
mov
mov
inc
push
mov
xchg
or
das
std
andb
cmp
popf
push
add
push
add
xorb
jge
into
das
mov
mov
inc
push
mov
dec
je
ret
pop
fwait
stc
or
inc
dec
in
or
sub
xchg
jge
add
xchg
xor
cmp
test
leave
in
outsb
lret
xchg
pop
mov
fidivrl
inc
mov
fdivs
push
xor
stos
fidivs
addl
movsb
adc
int
pop
pop
push
out
push
xchg
mov
mov
sub
push
mov
cmpsb
aam
and
adcb
sbb
sbb
mov
aad
lcall
mov
add
mov
xlat
dec
jg
pusha
fwait
sbb
and
and
mov
lcall
or
into
add
and
xor
gs
rep
mov
mov
mov
mov
shrb
add
inc
out
mov
adc
imul
insl
imul
lret
jge
out
jne
cs
pushf
mov
mov
pop
adc
push
xlat
divl
sahf
cmp
push
mov
mov
dec
mov
cwtl
add
shl
pop
jp
outsl
lahf
adc
test
pop
lds
gs
add
test
pop
nop
out
dec
dec
cs
aad
and
bound
xor
mov
shr
add
xor
ljmp
fmuls
aam
addr16
movsl
fcomip
pop
mov
pop
cmc
lods
sbb
filds
or
mov
jl
or
out
in
lock
aad
out
push
jmp
test
aam
nop
jg
push
add
icebp
stc
and
mov
cltd
outsb
aam
subl
mov
mov
sbb
dec
out
cmp
loop
or
cmpsl
jge
jno
mov
xchg
add
addl
inc
push
sbbl
mov
ret
or
out
aam
lahf
sbb
dec
pop
and
outsl
mov
loope
mov
adcl
fildl
add
pop
lods
data16
out
mov
push
lret
xchg
or
and
fisubl
xlat
mov
mov
pop
mov
jp
cmpps
add
cmp
clc
push
dec
mov
adc
push
fs
lds
cmc
inc
jbe
cmp
jo
js
sar
or
aad
lods
or
mov
pop
sbb
cltd
aad
lods
dec
insb
rorl
mov
or
clc
add
shrb
mov
popf
aas
les
ljmp
sbb
lret
mov
daa
stos
ds
xor
sahf
dec
pop
mov
clc
mov
push
push
xchg
aaa
xchg
add
sbb
insb
and
mov
cmpsb
adc
jecxz
pop
enter
cmc
mov
jnp
cmp
ror
lcall
lock
xchg
inc
dec
xchg
cmp
mov
dec
jo
pop
dec
mov
lahf
test
mov
and
adc
mov
inc
inc
out
scas
push
call
fsts
jp
jge
pop
pop
ja
dec
cmp
sahf
sti
jmp
mov
push
inc
mov
sbb
andl
sub
cmc
popa
daa
or
sbb
cwtl
ljmp
cmp
add
icebp
pop
fldenv
pop
cmpsl
adc
sub
inc
sub
push
sbb
mov
push
pop
rolb
test
xor
sub
or
lahf
cmpsb
lds
loopne
sti
mov
add
pop
mov
sbb
les
pop
test
cmpsl
add
roll
sbb
and
mov
and
mov
mov
add
in
xor
js
jno
mov
out
inc
push
push
ror
idivl
pop
loope
inc
or
mov
dec
mov
cmp
mov
or
jnp
cwtl
sbb
mov
push
xchg
ds
xor
out
cmpsl
adc
mov
insl
test
inc
sub
and
xchg
cwtl
stos
push
add
lods
mov
ds
ds
cmp
sub
sbb
adc
pop
fs
rcll
cli
cmpsb
adc
aam
mov
jb
jo
pusha
and
adc
sbb
mov
pop
xlat
rcr
adc
add
jo
imul
loope
scas
and
mov
ds
aam
and
divl
setns
cwtl
xchg
in
add
fiaddl
mov
jge
or
inc
sbb
adc
xchg
and
jno
xchg
imul
add
pop
push
mov
xchg
or
mov
adc
mov
and
inc
add
and
lret
or
arpl
xorb
ds
into
arpl
cmp
cmp
xor
xchg
adc
pushf
pushf
push
cmp
in
pop
out
fwait
push
divb
aam
hlt
mov
mov
add
pop
push
mov
xor
out
idivl
xlat
xchg
push
imul
mov
mov
jns
jmp
jo
push
outsl
imul
pop
inc
iret
mov
or
push
mov
sub
push
push
pop
iret
push
push
int3
insl
lods
pusha
sarb
test
mov
dec
fdivrl
popa
mov
jle
fistpll
fidivl
xor
int3
pop
popa
mov
daa
aad
jno
add
ja
rorb
cmp
mov
xor
aam
movsl
jle
pop
mov
jno
xchg
pusha
rol
mov
aam
push
outsb
notl
jne
cmp
sub
aad
pop
pop
mov
out
arpl
xchg
fcmovnbe
mov
xchg
popa
push
dec
and
outsl
adc
hlt
mov
push
pop
enter
or
scas
dec
in
pop
or
divb
lret
ret
xchg
or
mov
in
mov
or
std
xor
add
hlt
mov
inc
inc
frstor
xor
mov
sbb
jmp
mul
sbb
sbb
cwtl
pop
sbb
inc
cmp
fwait
js
std
cmp
xor
aam
bound
and
cmp
jo
xor
icebp
in
push
mov
xchg
sbb
lods
dec
popa
inc
sub
lds
js
aaa
testl
sbb
rcrb
daa
sbb
cs
add
loope
dec
add
aas
mov
fdivrs
xchg
loopne
cmpsl
call
and
cmp
mov
jbe
push
cli
xor
arpl
inc
std
push
aas
mov
sub
pop
add
xor
bound
pop
push
sbbb
mov
fsubl
outsb
sarw
ret
push
pop
lahf
int
adc
sarl
jl
push
push
out
or
repz
xor
outsb
lret
mov
arpl
sbb
push
add
mov
push
loope
aas
mov
inc
ret
mov
in
mov
mov
int3
js
cmp
js
outsl
mov
enter
sbb
pop
ja
mov
cmpsl
bswap
mov
divb
addr16
or
inc
ret
test
arpl
dec
mov
mov
jg
xor
mov
mov
in
loop
sahf
movsl
fcmovb
pop
add
mov
iret
lods
aam
xchg
jg
out
mov
push
pop
movsl
pop
push
jl
data16
dec
xor
xor
stos
and
lock
cmpsb
inc
push
push
aad
pop
jne
adc
pop
leave
mov
mov
call
and
push
loop
add
arpl
int
sarb
int3
mov
lds
inc
aam
inc
ret
add
dec
fidivl
inc
arpl
test
aam
mov
rol
ret
bound
pop
mov
fnstsw
insb
sarl
call
mov
out
repz
es
adc
xchg
int3
sbb
into
or
aad
ret
push
jg
cmp
lock
cmp
and
pop
pop
mov
xchg
subb
adc
sbb
and
adc
lock
outsb
aam
repnz
imul
mov
fstl
adc
cmp
std
mov
mov
aam
incl
stc
mov
xchg
pushf
fdivrs
negb
in
lds
add
push
cmpsb
stos
mov
xlat
jmp
xchg
mov
xchg
jo
lods
ljmp
jge
loop
pop
fwait
sub
sbb
lds
orl
push
cmp
add
mov
data16
xchg
sbb
jl
fisttps
clc
and
and
adc
and
cmpsb
dec
hlt
sbb
mov
mov
in
shrl
lock
adc
fs
jg
shlb
aam
cmp
sbb
in
inc
jg
lcall
repz
stc
jg
gs
stos
mov
sbb
fcom
xorl
outsb
lret
cld
xchg
sbb
add
or
pop
test
and
test
sahf
sti
push
data16
aad
fs
add
mov
fcomp
xchg
dec
jle
dec
sub
fcompl
jo
dec
mov
mov
mov
sub
mov
add
mov
icebp
ret
loopne
xchg
add
pop
lock
fcomps
add
clc
mov
js
lds
or
cmp
mov
push
aam
jge
imul
inc
push
push
mov
adcl
lahf
cs
testl
movsl
lret
mov
xor
mov
push
push
mov
data16
and
repz
mov
mov
incb
stos
xchg
lret
outsl
xchg
inc
push
jb
xor
pop
repnz
and
jnp
adc
adc
js
sub
sub
push
mov
and
or
lahf
or
sti
subl
mov
cld
es
push
mov
xchg
lret
sbb
sbbb
divb
aam
xchg
mov
mov
insb
imul
dec
stc
out
inc
movsb
dec
nop
cmc
pop
decl
pop
fldt
or
push
cmpsb
pop
inc
aam
mov
enter
adc
sub
push
inc
mov
js
mov
cmp
rorl
push
or
add
movsb
sbb
inc
xchg
aad
mov
pop
into
jns
push
mov
sub
sti
fwait
cmp
sbb
mov
inc
jmp
aad
add
lea
inc
inc
bound
and
fcomip
and
cmp
adc
xchg
or
outsl
adcb
cld
add
cltd
iret
push
or
aam
adc
mov
movsl
lcall
sahf
xchg
mov
mov
pop
xor
es
dec
in
xchg
push
xlat
adc
or
mov
out
mov
sbb
aam
test
lea
and
mov
rcl
push
jo
xorl
leave
xlat
mov
xor
mov
aas
push
imul
mov
lcall
daa
sub
xchg
add
out
loop
sbb
cmp
fwait
cmp
or
mov
scas
or
push
mov
lods
adc
das
add
add
pop
scas
sahf
imul
push
mov
jo
cmp
bound
test
pop
pop
push
loop
test
mov
add
lods
stc
pop
push
rcrl
fbstp
scas
in
loopne
push
cmc
and
icebp
xchg
add
push
mov
xlat
inc
push
filds
ret
mov
mov
push
fwait
mov
adc
lsl
pop
sbb
pop
add
cwtl
sti
adc
hlt
xchg
push
push
mov
dec
push
jecxz
cmp
inc
shrl
fcomp
mov
xchg
stos
aas
add
jbe
xchg
pop
add
psubb
sub
push
add
ja
jne
sub
notb
inc
shlb
lods
mov
out
scas
imull
je
std
scas
xor
lds
inc
icebp
dec
xor
pop
jecxz
fbld
lock
push
cltd
aam
sbb
mov
movsl
fld
dec
mov
add
pop
push
sbb
movsb
rolb
cmp
mov
out
push
shlb
gs
lret
cli
ret
repz
add
lret
aad
fsubrl
in
inc
pop
pop
xor
pop
push
dec
fnstcw
pop
dec
lret
cli
mov
iret
and
xchg
inc
sbb
xchg
dec
repz
adc
adc
mov
sub
jo
dec
dec
fildl
bound
mov
push
fdivp
push
and
adc
mov
insl
cli
or
mov
leave
es
add
lahf
sbb
dec
jge
rorb
movsl
dec
add
call
sbb
sbb
cmp
adc
mov
cmp
sbb
lret
aam
mov
loopne
xor
add
mov
or
nop
sub
test
ja
xchg
sahf
lret
adc
or
add
lock
mov
push
addr16
lcall
lea
sub
add
repz
into
lods
jecxz
loope
pop
loop
sbb
mov
or
call
inc
add
stc
ss
rcl
data16
gs
fldl
push
gs
mov
dec
mov
js
mov
cmp
xchg
sub
and
push
push
cmp
mov
and
lods
testb
jg
inc
dec
dec
mov
cmp
jp
lea
movsl
into
ja
in
push
mov
cmp
pop
inc
push
les
or
mov
sub
test
jb
adc
pop
xor
adc
lods
mov
das
or
and
rolb
jl
arpl
mov
jb
pusha
mov
inc
gs
xchg
out
pop
mov
stos
faddl
sahf
ret
insl
inc
mov
xchg
insb
fcoms
mov
shl
or
jle
ss
ss
cmpsb
mov
rorl
dec
fcmovnbe
lret
ret
nop
int
sbb
das
or
in
xlat
jge
dec
loop
aad
out
cltd
dec
push
or
dec
jmp
jmp
rorb
mov
pop
and
ja
adcb
test
adc
pop
mov
pusha
inc
and
pop
adc
pusha
pop
jnp
dec
or
pop
std
jbe
fisttpl
sbb
aad
out
sahf
les
shlb
mov
jmp
push
das
add
lods
cmp
mov
sbb
mov
sub
andl
int
sbb
ja
rorl
out
ret
in
mov
mov
ds
push
test
sahf
mov
mov
xor
out
mov
je
icebp
roll
shl
add
push
enter
lea
push
stos
repz
ds
push
xor
mov
adc
xlat
inc
cli
cli
jnp
leave
inc
por
cs
cmc
in
rol
and
push
push
add
add
sar
aam
or
mov
and
mov
pop
mov
inc
xchg
lods
sbb
mov
xchg
ljmp
push
lret
repz
and
jl
call
dec
adc
jbe
daa
orb
out
sub
sub
mov
mov
and
test
lock
imul
sarb
aam
jmp
ss
outsl
scas
cmp
iret
jle
jp
loopne
jg
dec
jge
jb
cmpb
imul
cli
or
fbstp
or
out
cmpsl
insl
add
stos
push
cmp
daa
pop
or
scas
bound
fldenv
xchg
xchg
lret
int
mov
rclb
sahf
push
addr16
leave
adc
pop
xchg
pusha
daa
sbb
stc
sub
sub
icebp
dec
sub
gs
rolb
stc
dec
aad
aam
cmp
sub
repnz
fists
lret
mov
rorb
sbb
mov
les
loopne
int3
xor
ljmp
clc
mov
add
dec
and
lods
dec
mov
jo,pt
pusha
lahf
or
mov
leave
subb
mov
and
mov
push
insl
outsl
aam
test
cmpsb
dec
push
pusha
leave
pop
xor
shlb
stc
aam
cmp
in
idivl
adc
ret
pop
xchg
cltd
pushf
or
pop
push
pop
cmp
mov
pusha
neg
cmp
lds
push
pop
js
inc
and
movsb
pop
mov
scas
subb
pop
repz
hlt
xor
xor
pop
decl
xchg
dec
mov
pop
sbb
xchg
pusha
jne
add
xor
mov
xchg
push
pop
aad
or
lods
pop
mov
jne
mov
jne
pop
jg
lret
cmp
inc
pop
jge
xor
cmp
xor
push
leave
adc
test
imul
pop
inc
pop
cwtl
cmp
mov
sbb
jb
sub
pusha
lret
adc
popa
not
add
mov
imul
neg
loopne
xchg
loopne
xor
lods
mov
add
sbb
sti
fs
lcall
xchg
add
mov
cmpsl
outsl
mov
or
lods
je
mov
lcall
xchg
mov
test
add
adc
cmp
adc
xlat
xor
pop
jecxz
inc
les
cld
jl
xlat
pop
mov
add
mov
xchg
xchg
push
add
in
mov
js
xchg
inc
scas
add
cwtl
ss
loope
push
mov
mov
xchg
movsb
mov
sub
jecxz
inc
mov
rolb
dec
cli
fs
fisubl
and
push
mov
into
outsl
add
push
mov
aam
out
mov
int
sub
xor
cmc
je
je
and
mov
popf
in
shll
dec
push
test
aam
xchg
jnp
sub
outsb
into
dec
add
in
add
inc
clc
clc
mov
rclb
fcmovne
js
pop
idivl
xchg
add
mov
mov
mov
sub
fbld
iret
adc
js
ss
mov
les
nop
cmp
into
shll
aaa
adc
fiaddl
jb
mov
popa
sbbl
and
push
sbbb
mov
dec
pop
loopne
jle
mov
or
insb
test
and
int
sub
sarl
sub
or
inc
or
add
dec
jmp
add
insl
mov
mov
movsl
insl
mov
lods
nop
pop
cmpsl
pop
nop
sbb
repz
out
cwtl
cmp
popa
stos
jno
pusha
sbb
imul
aad
adc
aas
rcr
lcall
jecxz
pop
dec
push
xor
add
repnz
mov
insb
sub
mov
rorl
test
pop
push
outsb
enter
add
pop
lcall
lds
inc
std
add
pop
dec
jg
shrl
sub
mov
lods
or
in
sub
lret
add
cmpsl
jae
ficompl
jmp
xor
adc
pop
hlt
add
mov
frstor
add
mov
dec
inc
xchg
sbbl
into
lock
xlat
lret
das
loopne
insb
add
andb
push
cmc
loop
cmp
lret
mov
ret
jle
lret
jno
mov
jns
jl
cwtl
inc
cmpsb
pop
xor
faddl
xor
or
xchg
sub
imul
divl
pop
jno
push
sub
ja
aam
scas
inc
pop
ljmp
int
push
xor
sbb
movsl
pusha
xchg
sub
icebp
sbb
loop
je
inc
imul
mov
sub
mov
out
xchg
mov
std
jge
cmp
cmp
mov
inc
jmp
lods
mov
push
ret
sbb
push
pop
outsl
push
aas
or
insl
jmp
int
inc
test
add
lds
cmp
jl
cmp
mov
test
xorb
pop
dec
push
add
cmp
pop
dec
xchg
sub
js
aad
mov
pop
arpl
mov
pop
mov
out
pop
sbb
mov
pop
icebp
aam
test
jp
ljmp
into
cld
xor
xor
push
pop
fstpl
aam
or
mov
mov
fidivl
insb
jmp
add
aam
repz
flds
sbb
mov
sti
das
mov
js
cli
lock
xchg
sahf
ja
pop
lahf
xor
or
std
leave
jl
xor
rcll
xchg
cmp
cmpsl
and
sbb
inc
incb
mov
inc
and
mov
stos
fdivl
aam
addr16
sub
imul
cmp
mov
cmp
inc
popf
ljmp
mov
aam
mov
pop
aam
pop
cmp
fldcw
sbb
push
cli
fadds
cmpsb
mov
int3
pop
sbb
mov
pusha
xor
fidivl
insb
cltd
shll
ficoms
sub
push
push
add
pop
mov
ret
lds
dec
dec
xchg
faddl
or
pusha
cmp
rolb
inc
sbb
push
sbb
pop
push
jecxz
mov
lods
test
add
pop
xor
jbe
nop
rcll
fidivs
mov
test
shlb
fidivrs
pusha
lahf
je
cmpsb
into
mov
inc
mov
fs
mov
mov
add
fnsave
push
das
mov
clc
hlt
aad
aas
in
mov
arpl
or
push
loop
test
mov
mov
jg
insl
dec
xchg
inc
jle
pop
push
sbb
loop
push
lcall
jl
mov
ljmp
add
jp
adc
pop
push
mov
aad
stos
das
loopne
jnp
fildl
je
int
das
sub
addr16
adc
jg
cld
clc
in
stos
push
sbb
mov
dec
lea
push
lcall
movsl
enter
aad
jnp
test
sub
scas
push
mov
rorb
jno
push
mov
aaa
rcrb
test
cmp
loope
arpl
push
pop
inc
add
sbb
pop
adc
adc
inc
push
icebp
jp
fadds
mov
push
push
sti
aas
xor
cld
inc
jns
sar
clc
mov
mov
popf
in
adc
or
push
push
addb
inc
mov
lods
dec
lret
popf
xchg
mov
shlb
add
sbb
bound
popf
pop
inc
data16
and
xorb
test
jle
dec
jns
fisttpll
push
xor
adc
lods
clc
test
cmpsb
aam
mov
popl
inc
push
movsb
lods
jp
mov
jbe
dec
mov
outsb
jg
mov
ljmp
loop
ja
jge
adc
xchg
aad
pop
mov
mov
test
pop
data16
std
add
xlat
add
pop
popa
jl
in
loopne
sub
fs
and
aaa
mov
aam
cmc
xlat
push
mov
jo
in
and
loopne
mov
jne
push
ja
cmpsb
idivb
xlat
mov
rorb
mov
stc
mov
ljmp
repnz
fisttps
int
xchg
mov
fwait
test
push
or
ds
push
pop
ja
cmp
fwait
adc
pop
mov
loop
cmp
out
pop
mov
in
repnz
pop
rcl
mov
outsb
xlat
int3
pandn
push
jno
loopne
pusha
push
sbb
lret
pusha
data16
enter
xor
sbb
popa
inc
adc
add
adc
push
cwtl
std
out
pusha
imul
jbe
push
aad
adc
sbb
pop
pusha
mov
mov
or
cmp
mov
insb
xlat
fcmovb
cmpsb
sub
or
fdivl
es
push
sub
out
add
es
push
sbb
aad
add
sub
repnz
loope
aad
inc
clc
loopne
shrb
cmpsb
mov
sub
mov
mov
repz
lret
dec
mov
outsb
aad
leave
dec
aam
push
jbe
int
mov
fcmovne
into
pop
lods
pop
neg
ror
pop
out
or
push
push
sub
push
repz
popf
push
inc
hlt
aad
jecxz
ret
lahf
sbb
dec
aaa
std
and
push
hlt
sub
mov
hlt
mov
adc
vpsubb
pushf
mov
xchg
jge
xor
cli
add
por
inc
stos
dec
lcall
pop
clc
popa
mov
add
sbb
add
and
adc
into
pop
fsub
pop
pop
faddp
inc
rorl
repnz
js
xor
add
or
mov
test
js
jnp
pop
test
notl
mov
outsb
rcll
fs
jg
mov
sub
and
mov
into
shlb
xor
and
rcl
mov
push
loop
aad
push
ficomps
xchg
lods
inc
mov
xchg
and
loop
cltd
pop
popf
int3
fidivrs
jmp
xor
push
ljmp
je
testb
mov
lret
xchg
cmp
dec
jbe
ja
push
push
pusha
mov
cld
xrelease
push
mov
stos
jnp
ljmp
xchg
jnp
sahf
mov
mov
aas
aaa
jo
fnstenv
in
mov
addb
notl
int3
add
enter
push
or
das
mov
mov
or
xchg
mov
adc
mov
and
add
fsubl
or
cmp
mov
xor
movsl
sbb
xor
mov
cmp
lock
popf
dec
mov
mov
shll
push
std
mov
mov
rclb
mov
fs
cltd
popf
cld
add
in
arpl
in
cwtl
in
xor
jecxz
cmc
xchg
jns
out
add
push
sub
ret
out
aaa
xchg
dec
mov
inc
mov
mov
test
mov
fdivl
dec
cmpsl
rorl
repnz
push
push
loope
int3
push
repnz
mov
inc
dec
pop
mov
mov
mov
bound
xlat
aad
je
mov
ljmp
mov
cmp
fdivl
stc
aam
push
mov
jne
dec
repz
outsb
aaa
or
dec
scas
lahf
inc
aam
daa
rcr
push
sub
push
stos
js
je
pop
ja
lods
das
out
adc
fwait
add
mov
sahf
or
add
pusha
and
test
fbstp
mov
mov
cld
mov
test
jo
cmp
movsl
gs
cli
sub
in
or
inc
push
es
arpl
pop
cmp
out
pop
sub
in
xor
fucom
mov
sbb
cwtl
xchg
push
ror
call
mov
test
stc
sbbl
adc
adc
or
and
sbbb
insl
xor
pop
xchg
pop
shl
out
daa
mov
pop
sbbb
mov
enter
test
out
cld
and
mov
add
sub
hlt
jnp
mov
in
pusha
movsb
inc
movsb
push
add
int
faddl
jmp
pop
xchg
andb
in
stos
jl
je
aam
dec
add
rorl
push
xchg
sub
aam
ja
lcall
push
scas
aad
daa
push
mov
out
mov
in
mov
lods
dec
icebp
icebp
jp
or
out
cmp
or
add
clc
push
and
push
sbb
out
aad
dec
aam
pop
push
mov
mov
mov
les
push
addl
cmp
jp
dec
rcl
jo
cld
stc
xchg
mov
and
xchg
aad
rolb
imul
out
in
jg
sbb
js
and
dec
dec
jg
arpl
push
mov
and
pop
add
scas
lds
mov
add
insb
push
dec
pop
or
cmp
mov
mov
testb
pusha
js
shlb
pop
fldt
ficoms
or
ror
jmp
imul
add
leave
push
ret
add
xor
iret
outsb
mov
les
rol
aaa
xlat
xchg
xor
nop
rclb
fimull
jecxz
movsl
popf
lahf
push
divl
xlat
inc
or
sahf
or
ret
jbe
sub
or
inc
add
data16
sub
shlb
fsubl
nop
jmp
push
jns
mov
mov
push
shll
pop
push
stos
and
or
fwait
cld
mov
addr16
pop
scas
mov
mov
or
push
add
movsb
lahf
scas
in
fs
insl
pop
and
jp
insl
lahf
scas
pusha
or
call
pop
imul
addr16
cmp
sbb
sub
inc
pop
inc
pop
arpl
push
shrl
fld
inc
push
sub
push
push
popa
ss
pop
xchg
or
dec
push
mov
int3
xchg
add
into
lcall
jb
mov
lahf
loopne
stos
testb
pop
or
sbb
add
pop
bound
mov
dec
mov
mov
pop
push
or
pop
xor
add
imul
popa
movsl
dec
out
orl
or
xchg
pop
mull
dec
aam
fwait
outsl
add
mov
test
imul
sbb
or
call
call
ret
pop
ret
jecxz
mov
jge
jge
sbb
inc
jmp
lea
mov
arpl
dec
and
adc
lahf
push
mov
gs
mov
shlb
jmp
push
test
movsb
enter
add
mov
aad
pop
roll
mov
sub
pop
mov
cmp
mov
cmp
jae
out
adc
add
sbb
pushf
nop
push
mov
aam
xchg
movl
fstps
adc
lea
cld
repz
xlat
xchg
adc
or
mov
jge
xchg
ljmp
sbb
call
sub
push
cmp
push
xor
cmp
sbb
clc
dec
add
inc
ja
leave
add
pop
lods
out
lret
cmp
inc
cmp
mov
subb
test
out
das
fwait
emms
in
inc
ds
lahf
pusha
cmc
pop
cmpsl
mov
fcoms
dec
vpaddusw
popa
adcl
rcrb
xchg
in
sbb
lods
cmp
pop
xchg
add
repz
aam
repnz
je
cmp
push
sbb
or
stos
adc
ret
test
adc
andb
adc
clc
push
stos
fnsave
mov
push
sub
dec
aam
ljmp
mov
xor
push
fstpt
fistpl
insl
sub
arpl
int
data16
mov
push
fwait
push
cmpsb
add
out
mov
fs
js
sbb
enter
ja
pop
fistpll
jge
stos
mov
sbb
movsb
sub
sbb
inc
test
test
orl
jmp
lods
pop
xchg
inc
mov
inc
notb
or
popf
fcos
mov
out
push
cmpsl
sahf
frstor
fidivl
sub
std
ret
xchg
jmp
aad
insl
stos
jae
rcl
xchg
push
lahf
mulb
pop
jno
xor
ret
aam
adc
sub
or
cmp
mov
imul
xor
stos
and
aad
push
push
ss
cltd
in
nop
dec
mov
push
leave
clc
push
js,pt
xor
rcrl
push
or
lea
movsl
ljmp
aad
mov
shrl
leave
cmp
aam
inc
sbb
mov
pop
push
enter
lret
and
xchg
mov
xchg
xchg
adc
add
mov
aam
sub
push
sbb
mov
rorb
gs
jg
pusha
imul
test
xlat
test
arpl
cmpsl
into
push
mov
add
xchg
mov
sahf
addr16
dec
mov
push
mov
pusha
or
test
jns
ljmp
fisttpl
icebp
jb
pushf
icebp
into
aam
mov
push
mov
rdmsr
jo
in
cmp
mov
sub
pusha
pop
dec
fwait
cli
dec
xor
ret
pop
dec
mov
cmp
and
into
aaa
jg
cli
mov
add
fsts
pusha
mov
xchg
sbb
arpl
push
movsb
inc
in
inc
cltd
andl
bsr
rcr
aad
push
push
xchg
aas
fsub
mov
aad
js
shrl
pop
mov
cmpsb
add
inc
mov
push
add
sbb
push
lcall
repz
pop
mov
or
ss
pop
mov
aaa
cmp
sub
add
or
out
or
push
lea
shrb
mov
jo
sub
lods
jmp
pusha
data16
inc
pop
popf
cltd
es
push
in
aam
sub
xchg
and
imul
cmp
test
nop
das
add
mov
lods
es
or
nop
maxps
push
cmpsl
pusha
scas
dec
xlat
xchg
dec
pop
scas
cltd
clc
jmp
aam
iret
push
aaa
jmp
or
lahf
xchg
je
fwait
dec
add
jl
lods
push
andb
lret
aad
pop
fisubs
aad
mov
in
pop
popa
lods
les
test
jl
mov
aas
cmp
outsl
mov
add
ror
aam
addr16
ds
jns
mov
adc
call
loop
adc
cmp
data16
pop
dec
mov
or
push
xchg
loop
jb
and
cmp
mov
and
mov
add
in
mov
fwait
or
mov
shll
scas
adcl
les
lahf
ficompl
mov
ljmp
push
in
movsl
push
sub
movsb
movsl
xor
and
xchg
pop
jge
or
mov
enter
or
fadds
leave
sub
mov
adc
inc
jl
mov
cmp
hlt
pusha
enter
fisubs
popa
mov
inc
test
add
fmuls
jbe
bound
pop
and
xor
dec
stos
test
mov
and
lret
into
shr
xor
clc
icebp
sub
sub
in
test
jl
adc
iret
data16
push
loopne
inc
les
or
mov
stos
xor
xor
push
mov
cmc
mov
xor
pop
xchg
sbb
dec
xchg
mov
mov
dec
and
les
sahf
enter
sub
jae
xchg
adc
mov
outsl
rclb
mov
mov
mov
cli
jb
fldl
dec
movsl
xchg
leave
mov
femms
out
fidivrs
mov
sub
fs
dec
push
test
scas
call
ljmp
aas
mov
in
iret
jnp
cmc
add
add
pusha
out
cmpsb
pop
aas
mov
mov
mov
movsb
lea
adc
jb
fst
mov
push
inc
mov
int
roll
icebp
imul
bound
adc
std
jb
push
push
inc
add
lcall
inc
pop
mov
push
dec
or
int3
xorl
rcrl
xor
rolb
lahf
sbb
arpl
aam
pop
frstor
movsb
or
fiaddl
popf
cmpsl
inc
add
repnz
repz
cmpb
mov
test
lods
mov
lea
andl
lock
jbe
test
xchg
mov
rorl
int
mov
cli
aam
push
mov
cmpsl
pop
imul
add
fldenv
scas
and
ljmp
pop
ret
test
jg
push
stos
outsl
sbb
adc
shr
push
push
not
sar
std
mov
out
push
test
int
xor
inc
in
lret
gs
sti
outsl
daa
mov
cmp
cwtl
lcall
in
add
mov
nop
add
xchg
and
xchg
and
mov
imul
lock
inc
aad
test
pop
jecxz
push
push
aad
mov
test
jbe
add
xchg
fwait
out
cmp
pop
nop
sub
movsl
mov
bnd
repnz
sub
aad
cli
mov
sub
cmp
cmp
add
xchg
mov
jp
pusha
loope
icebp
into
arpl
shlb
add
notl
pusha
inc
test
xor
cmp
loope
lds
pop
add
push
or
sbb
pop
adc
sbbb
fwait
lcall
pop
mov
in
fdivs
pushf
dec
add
jno
push
jns
sub
scas
cmpsb
sub
mov
inc
xor
pop
inc
dec
incl
addb
push
fs
and
dec
or
cli
pusha
lods
std
das
xlat
loopne
mov
filds
and
inc
mov
jge
pop
ds
sti
enter
popa
loop
sbb
mov
mov
out
fwait
jae
cwtl
mov
jmp
loope
cmc
dec
lods
stc
add
cld
and
mov
xor
leave
aad
ljmp
jmp
lahf
add
inc
fucomp
in
add
in
pop
pop
ret
xor
sbb
movsl
mov
lods
mov
out
add
sub
push
xchg
jmp
xor
xchg
test
test
lret
iret
out
jmp
jg
stos
inc
hlt
mov
into
xor
xor
inc
clc
clc
lock
push
mov
jle
stos
add
dec
in
mov
push
mov
fidivs
lea
pop
mov
fyl2xp1
lahf
xor
sub
add
lds
clc
sub
popf
or
rorl
pop
aam
xor
fwait
or
dec
inc
xchg
mov
and
xchg
xrelease
dec
insb
and
aam
xor
idivb
aad
xor
test
inc
xchg
fs
dec
jge
push
pop
push
adc
jg
jns
mov
jmp
in
andb
mov
in
add
inc
aas
insl
movsl
outsb
ljmp
jae
insl
pop
mov
decl
out
into
mov
int3
stos
jl
xchg
add
add
add
inc
adc
push
out
adc
xchg
pop
sti
or
and
sub
mov
sbb
imul
mov
pop
loop
mov
enter
mov
js
ja
cmp
mov
push
outsl
jl
add
shlb
stc
sub
jmp
faddl
and
in
mov
ds
aad
ret
test
jl
rorb
mov
aaa
sti
loop
sbb
mov
dec
jnp
aam
cmp
xlat
out
jle
mov
pop
mov
jecxz
add
fimuls
adc
sbb
out
dec
mov
push
das
pop
daa
sbb
ret
and
in
jg
std
mov
push
sub
pusha
add
aam
cmp
loope
in
xchg
pusha
test
out
aam
push
add
rcrb
imul
cmp
into
out
and
adc
idivl
ret
adc
xor
repnz
xchg
inc
adcb
pop
shll
mov
xlat
out
in
cmp
cmp
mov
ror
in
add
dec
jb
add
lahf
in
mov
sbb
cli
test
xchg
mov
or
push
pop
cld
or
data16
inc
shl
sub
test
test
adc
xor
mov
insl
mov
inc
loope
xchg
jae
jne
jmp
fildll
mov
mov
dec
mov
sbb
mov
xchg
fildll
push
push
mov
add
dec
or
lods
fistpll
xor
pop
sbb
mov
jno
push
pusha
jmp
add
mov
int
and
shlb
inc
cmp
decl
ds
push
pop
daa
jle
sub
clc
mov
jl
subb
dec
dec
pop
pushl
rolb
xchg
xchg
test
lea
rcrb
orl
cmpb
or
in
pop
jmp
jmp
test
xor
into
jbe
sub
lods
xchg
inc
out
mov
insl
sub
jo
add
lcall
pop
adc
mov
aam
loope
push
mov
cmc
pop
je
pop
inc
sahf
add
xchg
or
jmp
jae
imul
xlat
stos
shl
jg
ja
mov
sahf
xchg
or
test
inc
add
scas
arpl
jne
mov
repnz
sbb
add
jno
cmpsb
inc
push
test
add
aam
faddl
fistpll
divl
cwtl
gs
sahf
js
add
sarb
cs
iret
pusha
xchg
inc
sar
sbb
jmp
idiv
shll
fbstp
addb
mov
cli
aad
cld
push
sbb
addr16
mov
fimuls
jbe
mov
jmp
push
pop
out
add
inc
fs
fcoml
sbb
sub
mov
sub
das
xchg
add
cld
xor
testl
rcl
mov
push
pop
and
loopne
xchg
add
repnz
loop
jle
mov
lea
xchg
bnd
mov
enter
cmp
add
mov
mov
inc
and
dec
mov
sub
mov
fimull
jmp
and
jno
mov
outsb
sub
xor
sbb
fildll
stos
mov
lea
push
rorl
mov
aad
shll
faddl
pusha
outsl
popa
xchg
ret
cltd
data16
or
fucomi
mov
jp
xchg
lcall
or
ret
clc
aas
imul
and
inc
sub
je
movsb
rcrb
gs
sbb
mov
repz
xchg
or
test
arpl
es
lock
push
aam
cmp
adc
rcl
jp
pushl
push
add
and
int
add
or
sbb
dec
adc
add
push
test
clc
addr16
aad
push
aaa
enter
imul
jmp
mov
dec
pop
jg
add
shrl
adc
sbbb
lahf
negl
aad
dec
mov
imul
mov
cmc
xlat
mov
out
daa
inc
stc
xor
rorb
xchg
jnp
mov
cmp
outsb
sbb
push
testb
daa
sbb
push
pusha
fldcw
movsl
sub
and
movsl
xchg
imul
adc
sbb
pushf
aam
ja
outsl
adc
loopne
or
stos
adc
lods
hlt
hlt
mov
pop
push
add
xor
lods
add
and
test
sub
or
les
xor
sbb
inc
cli
mov
jnp
adc
lods
aam
fbld
hlt
leave
stos
mov
mov
dec
cmpsb
pavgw
add
jbe
orb
orb
pop
add
sahf
aaa
movsl
inc
fistps
test
mov
or
push
bound
outsb
and
es
divb
pop
adc
and
mov
imul
inc
sbb
push
pop
pusha
or
mov
xor
xchg
add
jl
cmp
inc
xor
add
pop
sub
xlat
mov
sub
cwtl
mov
dec
popf
lahf
loop
jo
jne
xchg
testb
pop
repz
stc
scas
mov
pop
jl
lcall
enter
ret
xchg
out
lea
pop
dec
mov
dec
insl
enter
add
dec
inc
je
ret
lods
xor
mov
iret
daa
sahf
adc
mov
out
cs
jp
mov
repnz
add
sbb
subb
pusha
stos
pusha
icebp
js
push
xchg
js
aam
xchg
cmp
mov
mov
push
pop
test
sti
xchg
sub
mov
call
imul
add
pop
out
pusha
cmp
push
cmpsl
add
testl
push
lds
cmpsb
adc
mov
cmc
fsubl
cwtl
sbb
pop
add
pop
mov
shrb
pop
mov
push
pop
rcll
imul
sbb
add
nop
cltd
daa
add
jg
add
loopne
ret
pop
clc
pushf
shlb
mov
mov
cs
std
mov
out
out
mov
jns
jb
aam
clc
push
addr16
sbbb
add
inc
cmp
mov
call
aas
jns
sub
ret
add
insl
repz
imul
out
pop
gs
mov
xchg
mov
inc
and
push
cmp
insb
add
leave
or
bndldx
mov
xchg
pusha
or
and
mov
pop
data16
out
sbb
pop
dec
push
add
stos
mov
lods
cli
ja
fwait
push
je
ja
fstpl
daa
rdtsc
clc
cmp
jecxz
shlb
fs
lods
xchg
xchg
loope
mov
xchg
std
nop
or
push
push
pop
lret
scas
inc
push
adc
dec
adc
ja
movsl
jmp
sbb
sahf
shl
xor
aam
sub
xlat
xor
cmp
js
adc
je
js
adc
add
lds
jecxz
lock
add
int
out
cmp
push
das
jge
icebp
adc
mov
mov
aas
inc
cmp
mov
enter
add
in
jle
mov
incb
clc
jb
sbb
xchg
inc
aaa
or
imul
cmp
sbb
les
or
cmp
aam
sbbb
xchg
repz
icebp
aam
xor
test
mov
jmp
xchg
aad
add
add
or
gs
cltd
ficomps
adcb
aad
call
push
mov
xchg
jnp
xlat
add
xchg
das
cmp
push
sbb
mov
add
cmpsl
inc
movsl
pop
ds
cmp
aam
dec
je
cmpsb
mov
aad
cmp
push
mov
mov
push
sub
push
imul
push
pop
dec
jb
aam
add
mov
mov
idivl
jae
aam
mov
into
insb
cmp
mov
sahf
mov
incb
aad
bound
aas
adc
sub
xor
int3
add
cmp
int3
test
sbb
mov
sbb
js
xor
mov
xchg
aas
jb
jo
popf
mov
xor
cltd
mov
jmp
or
sub
add
xchg
add
shll
adcl
imulb
jle
pop
lcall
or
push
jnp
add
push
pusha
xor
aam
out
or
fs
mov
mov
xchg
adc
adc
jmp
andb
fs
push
pop
or
fs
add
xlat
mov
cmpsb
aad
mov
jns
xchg
pop
dec
xchg
mov
outsb
push
sbb
inc
inc
mov
insl
pop
cmpsl
adc
lock
add
ret
and
pop
cmpsl
add
adc
cmp
mov
rcr
mov
add
or
cmpsb
bound
cmpsb
popa
push
pop
iret
mov
inc
sbb
ljmp
xchg
fsub
in
lcall
xor
rcl
aad
scas
aam
lock
jae
mov
sbb
inc
cmp
aad
icebp
imul
jnp
repnz
test
inc
mov
mov
add
pop
je
push
push
sbbl
mov
cmp
pusha
xchg
out
xchg
dec
dec
lods
outsb
fwait
adc
lahf
popa
cmpsl
pop
mov
jbe
inc
imul
pop
pop
dec
mov
or
ror
mov
mov
pop
das
xor
int3
dec
lea
inc
arpl
push
in
pop
out
mov
pusha
flds
push
sbb
arpl
out
pop
rolb
lea
pop
dec
rclb
test
pop
mov
js
lock
icebp
iret
push
fmull
xchg
mov
mov
inc
pop
ds
mov
cwtl
mov
adc
and
jl
inc
icebp
aad
pop
push
cltd
mov
cld
push
xchg
scas
jp
ret
test
sbb
in
aam
mov
mov
outsl
ja
je
imul
xor
sbb
xor
sarb
xlat
pop
inc
loopne
jno
jg
mov
pop
stos
data16
xchg
pop
sbb
add
dec
pop
cmp
or
mov
and
lahf
je
adc
xlat
sub
mov
dec
inc
call
loope
push
xchg
mov
ret
lcall
aam
push
fidivs
xchg
call
fdivrs
dec
push
dec
sbb
pusha
inc
cmpb
aam
in
shld
xchg
push
inc
inc
cltd
dec
mov
xchg
mov
push
pop
adc
movsl
xchg
arpl
ljmp
jno
push
mov
pop
sbb
push
add
ss
mov
push
and
fdivrs
leave
sbb
scas
pop
sbb
and
inc
mov
mov
iret
pop
addr16
mov
push
add
filds
mov
push
outsl
jns
mov
aam
jnp
mov
mov
mov
add
fcmove
pushf
lret
xchg
xor
mov
insl
push
pop
stos
mov
cmp
or
xlat
in
inc
xchg
out
dec
rorl
and
enter
popa
add
pop
js
dec
or
negl
inc
and
test
xor
rcl
cltd
nop
insb
push
subb
leave
popa
dec
push
das
out
add
addl
cmp
mov
xor
fnop
test
add
fdiv
sub
inc
dec
xchg
xchg
testl
enter
enter
test
ja
scas
xchg
cli
fs
pop
rcll
add
mov
ds
mov
ret
out
adc
es
lods
lahf
loopne
ret
mov
jmp
test
stc
mov
aad
sbb
jno
inc
jnp
je
add
mov
mov
mov
test
push
fwait
add
inc
and
cmpb
add
mov
sti
mov
lea
mov
mov
dec
loope
xlat
cmp
out
mov
sbb
sar
and
ss
mov
repnz
shr
push
int3
jnp
mov
or
add
outsb
add
sub
xchg
rcrl
pusha
enter
push
stos
pop
sub
add
dec
and
and
add
leave
inc
push
sub
arpl
arpl
jle,pt
ret
mov
scas
add
mov
in
mov
pop
xorl
fstps
pop
adc
pusha
hlt
push
xorl
outsl
mov
mov
fcmovnbe
iret
cmp
gs
sbb
mov
jge
dec
mov
fbld
mov
dec
dec
lds
frstor
adc
and
popa
test
lahf
add
push
cmp
and
mov
cld
pop
sbb
lret
out
add
test
fnstenv
push
pop
testb
xchg
xor
ret
mov
in
xchg
mov
and
and
shrb
pusha
ss
jae
pop
xor
lahf
inc
push
test
nop
push
sbb
xchg
rcll
add
inc
or
aad
pop
aad
cmc
xchg
pop
ljmp
aas
je
fs
pusha
xchg
mov
popa
mov
jp
adc
xchg
jbe
mov
xchg
pop
mov
in
jne
inc
add
sub
inc
insl
mov
mov
out
subl
xor
sbb
in
xchg
aam
nop
std
dec
scas
mov
push
xchg
push
inc
bound
arpl
jno
ds
push
and
lods
sarb
xchg
push
add
ljmp
sahf
mov
lret
js
mov
xlat
sbbb
mov
ffree
inc
rcrb
mov
mov
inc
pushf
out
mov
adc
dec
dec
call
jg
mov
sub
pusha
push
inc
cmc
loop
xor
mov
ss
call
jl
xlat
cmp
dec
popf
mov
ret
test
xchg
fisttpll
scas
leave
mov
cmp
cmc
arpl
shl
test
sub
push
sub
aam
sbb
or
fsubl
xorb
into
ja
faddl
imul
das
jmp
movsb
stc
jne
sub
cmp
js
mov
pusha
mov
into
pusha
jmp
xor
out
mov
mov
in
pop
leave
lret
add
inc
jl
or
push
data16
ja
sbb
daa
rcrb
adc
hlt
lcall
add
imul
stc
ret
rorb
insb
rclb
ja
out
subl
or
shll
add
sbb
insl
inc
mov
aaa
mov
xchg
test
mov
xchg
mov
insb
inc
pop
pusha
es
dec
imul
and
sbb
jle
jl
cmc
fistps
aaa
pop
xor
cwtl
jl
mov
cmpsb
stos
jle
add
lods
pop
sbb
and
xchg
sbb
jnp
add
jmp
insb
push
xchg
xor
cli
inc
scas
add
cmc
mov
insb
rcll
sub
dec
mov
xor
add
push
mov
out
push
frstor
dec
imul
aad
leave
bound
mov
jb
push
faddp
add
je
mov
dec
or
sti
push
aad
imul
hlt
cmpb
test
test
aam
fbld
push
sbb
xor
mov
mov
inc
pop
xor
pop
xchg
jg
ret
mov
mov
jno
frstor
adc
nop
mov
push
test
subb
mov
imulb
adcl
into
and
addb
fidivrs
jne
sub
test
mov
dec
mov
pop
sarl
jns
pop
add
xlat
outsl
int
adc
lock
mov
adc
addl
scas
and
adc
jno
mov
stos
shlb
cld
dec
or
and
cmp
lret
adcl
lahf
adc
fldenv
lods
xor
mov
sub
std
fisttpll
cmp
jns
daa
dec
xor
cmp
xlat
mov
add
daa
add
xor
enter
ds
js
ret
testl
mov
xchg
inc
mov
jo
icebp
push
fistl
sbb
stc
pop
xor
add
lcall
loop
out
scas
adc
aam
push
out
hlt
and
orl
dec
inc
js
mov
mov
sbb
rorl
pop
movb
mov
or
loope
mov
jns
les
outsl
mov
or
pop
pop
push
cmp
les
scas
int
sub
push
mov
xchg
sahf
dec
icebp
mov
push
leave
mov
jmp
bound
clc
pop
adc
hlt
jae
pop
mov
int3
jns
aam
adc
inc
mov
dec
cmp
lret
shrl
pop
clc
lret
fldcw
or
and
ss
pop
pop
aas
fwait
loop
cmpb
addb
aam
sbb
insb
insl
test
stos
xchg
and
inc
rorb
aam
jmp
adc
inc
cmpsl
pusha
iret
sub
sbb
jb
jg
mov
test
fbld
inc
mov
out
loop
pushf
jge
stos
pop
iret
sbb
popf
test
shll
and
push
lret
iret
mov
xor
jbe
and
xchg
mov
pop
scas
sub
or
mov
inc
jo
outsl
aad
adc
push
dec
lret
xchg
sub
stc
and
add
add
xchg
push
pop
je
sbb
xchg
aaa
loope
and
add
mov
fsubr
add
fnstcw
insb
jne
test
fmuls
inc
loop
fld
lret
xchg
mov
movsb
jg
inc
xchg
movsl
xor
adc
loop
fsubl
and
inc
arpl
clc
mov
stc
sti
pushf
ljmp
push
jecxz
pop
mov
mov
mov
sub
or
mov
pop
jne
mov
leave
add
cld
faddl
dec
xchg
pop
into
repz
or
sbb
cltd
xor
insl
cmpsb
cmp
mov
popa
in
sti
int
stos
pop
adc
add
sub
bound
dec
rclb
icebp
adc
imul
dec
ja
cmc
push
dec
fwait
mov
fnstenv
std
add
adc
lahf
rclb
inc
add
hlt
push
or
xor
sub
push
add
pop
leave
sub
sub
xlat
xor
mov
popa
jns,pt
jb
mov
stc
gs
mov
out
insl
rcrb
test
adc
outsb
sbb
stos
fistpll
cmpsl
cmp
aaa
mov
sbb
jle
xchg
sub
and
inc
repnz
xchg
aad
fldt
add
out
fsubl
pusha
bound
jns
mov
add
imul
add
mov
icebp
lret
push
outsl
adc
mov
int3
xor
inc
push
leave
push
xchg
mov
dec
inc
xchg
mov
movsb
pop
mov
adc
orb
stos
and
cmp
scas
mov
in
mov
mov
sub
test
dec
or
daa
inc
jo
pop
rorl
stos
aad
inc
or
aam
out
mov
mov
out
scas
repnz
mov
mov
pop
xlat
sbb
loopne
addl
shl
call
mov
out
push
xchg
mov
outsb
out
mov
orb
jo
inc
inc
shll
sti
jg
movsb
mov
outsl
ja
div
cs
jnp
push
dec
mov
enter
cmpsl
jmp
adc
test
inc
pop
push
push
stc
xchg
icebp
pop
lar
lea
pop
adc
xchg
xchg
mov
add
movb
mov
dec
rcrl
add
jg
jnp
imul
xor
pusha
test
mov
jo
xchg
adc
inc
cli
fdivrs
mov
movl
ljmp
adc
xor
jle
icebp
lods
pop
pop
cwtl
dec
push
cli
jecxz
fldl
push
or
loopne
leave
sub
and
out
int
mov
ds
stc
push
add
xor
sarb
push
outsl
aam
imul
dec
popa
std
mov
pop
pop
repz
sbb
out
icebp
test
push
aam
push
xchg
pop
iret
incl
clc
pop
pop
stc
ffree
popf
sahf
sarb
ret
test
fimull
push
mov
push
and
add
inc
pusha
sub
repnz
mov
cs
frstor
mov
xchg
stc
sbb
jl
shl
ror
imul
lahf
fldenv
cmp
or
and
pop
adc
sbb
xor
jo
shll
mov
add
push
and
mov
mov
push
cwtl
hlt
nop
add
push
cmpsl
pop
das
sub
xlat
aam
or
loop
xor
mov
hlt
mov
lock
add
xlat
push
push
push
sbb
xor
std
jle
push
push
outsl
inc
adc
imul
loop
and
or
in
std
mov
repnz
sahf
sbb
fldcw
cld
sub
jp
fcomps
aas
mov
jno
scas
and
je
add
fmull
xchg
jno
std
add
sarb
mov
mov
popl
andb
xchg
add
imul
outsb
loop
stc
dec
xor
jle
xchg
ja
mov
pop
lods
sahf
inc
or
aad
jle
sub
xor
cs
pop
pop
aad
lea
sub
imul
add
xchg
sub
push
and
pusha
mov
popf
xorl
insb
test
loop
shr
arpl
push
rcrl
xor
pop
or
mov
add
inc
aaa
test
dec
add
testb
push
stos
pop
dec
aas
jge
jecxz
aad
dec
sbb
mov
push
cmp
add
sub
sub
jmp
sub
mov
loope,pn
aam
js
mov
leave
test
mov
add
arpl
or
inc
std
adc
hlt
das
aam
push
add
and
mov
jo
inc
fwait
lods
jbe
push
testb
xor
lahf
enter
or
mov
shl
shll
sub
push
or
cmp
aas
mov
pop
daa
push
rcrb
pop
sub
cwtl
mov
test
popa
cmp
sub
enter
outsl
xchg
add
mov
loope
mov
push
phaddw
pop
xchg
inc
sub
repnz
pop
aam
sub
fmull
iret
push
push
mov
fdivr
add
xchg
popa
xchg
jp
mov
mov
dec
rep
add
test
rcrl
test
pushf
mov
clc
lock
ja
mov
lods
inc
in
push
repz
cwtl
out
testb
sub
stc
push
dec
int3
sub
xor
nop
push
push
and
push
fs
pop
imul
aam
xchg
xorb
cmp
xchg
mov
dec
mov
xchg
sbb
adc
daa
xlat
adc
or
daa
jmp
adc
cmc
add
xor
pop
cmp
sbb
je
mov
ljmp
sub
shll
mov
icebp
fwait
mov
xchg
int
xchg
cltd
or
fisttpl
clc
mov
mov
aam
xchg
hlt
xchg
jae
jg
mov
imul
cmp
dec
leave
js
rol
fisubrl
pop
and
mov
loopne
fwait
aam
sbb
pop
push
bound
mov
lret
ja
add
pusha
lds
xor
mulb
fmuls
mov
add
ret
sti
lret
push
pop
lds
aas
jbe
xchg
imul
and
xchg
push
sub
cmp
movsb
push
cmpsl
or
pop
xchg
inc
xor
mov
out
add
repz
xor
std
xlat
repz
iret
int
inc
inc
and
or
sbb
add
mov
push
add
lret
mov
add
mov
fninit
xchg
out
bnd
rorl
test
mov
out
adc
int
std
sbbb
xor
mov
mov
add
mov
pop
or
push
xchg
mov
lods
call
add
in
jbe
adc
mov
fisubrs
insl
push
rolb
repz
pop
bound
sti
jecxz
lea
dec
in
aaa
cmp
aas
sub
lock
or
sbb
mov
pop
filds
mov
hlt
pop
xor
add
jecxz
repz
fdivl
out
shll
fsubrl
insl
jnp
push
scas
aam
scas
push
je
pop
or
mov
inc
bound
leave
sub
andl
add
jp
or
aas
gs
loop
and
add
and
sbb
adc
sub
shrl
mov
mov
das
xlat
cmp
jnp
mov
arpl
or
test
scas
mov
jnp
imul
jae
add
movsl
idivl
xchg
imul
cld
fdivrl
loop
popf
cltd
mov
sti
fstpl
pop
inc
pop
sarl
int
aam
stc
or
orl
pop
cmp
and
cld
push
and
sub
jns
and
popf
pop
das
popf
push
inc
mov
mov
scas
pusha
xor
mov
andl
dec
mov
bound
cld
rclb
push
iret
xchg
test
push
xchg
aam
add
les
jnp
popa
dec
cli
pop
xchg
add
add
xorb
rcrb
xchg
popa
imul
fst
fidivrs
out
jo
shrl
test
dec
sbb
dec
aam
imul
jnp
inc
pop
mov
fnstsw
add
dec
sbbl
cmpb
mov
mov
in
dec
and
movsl
mov
test
jmp
dec
mov
rol
and
dec
dec
push
adc
mov
or
mov
inc
sbb
sbb
add
pop
adc
mov
add
mov
incl
mov
aaa
push
mov
pop
mov
sub
sub
and
mov
push
lcall
loope
sub
out
leave
mov
sbb
and
ljmp
sub
add
mov
mov
mov
shll
fisubs
sbb
adc
mov
outsb
pop
sbb
mov
cmp
arpl
lcall
cmc
adc
add
pop
je
ret
lret
push
pop
rorb
adc
fucomp
sbb
xchg
sti
dec
fstpl
test
int
sti
mov
sbb
add
xor
mov
mov
cmp
insb
cwtl
push
ds
sub
in
dec
lcall
lods
pop
int
push
mov
fmull
mov
imul
jge
sub
scas
jle
cs
bound
xchg
lret
and
loopne
mov
adcl
xor
push
ltr
adc
or
cmp
ficoms
xchg
aam
popa
imul
lods
or
insb
and
xchg
sbbl
mov
sub
lahf
mov
push
pop
aam
xchg
cld
or
mov
pop
jnp
dec
in
inc
pop
dec
lods
cmp
jmp
loopne
into
and
pop
loope
cli
mulb
lods
rcrl
add
mov
pusha
popa
adcl
in
xor
repz
adc
jo
pop
mov
pop
jecxz
mov
ja
dec
je
mov
bound
lock
xlat
into
mov
and
bound
lret
outsb
pushl
out
pusha
pop
mov
xchg
imul
cmp
fnsave
shll
jg
outsl
push
sub
mov
subl
pop
pop
push
xorl
jle
loopne
js
insl
lret
frstor
inc
pop
dec
adc
dec
sbb
jl
adc
or
fmull
out
cld
add
sbb
fsubrs
testl
mov
test
jne
ljmp
mov
test
fldl
bound
inc
sub
sub
aas
push
jno
pop
mov
jp
dec
mov
imul
add
add
lods
sub
ret
fisubs
mov
add
lret
in
std
and
pusha
mov
xchg
fisttps
mov
mov
aam
sub
in
popa
dec
jge
xchg
cmp
sbb
stos
add
push
insl
lods
lret
cmpsl
pusha
mov
inc
mov
pushf
adc
lahf
es
aaa
ds
mov
cmpsb
dec
xchg
cmp
lock
pop
pop
inc
dec
xchg
into
lods
addr16
fwait
arpl
adc
mov
movsl
enter
jb
clc
stc
sbb
fs
adc
repnz
fistpll
ljmp
scas
xchg
sbb
pop
adc
lcall
xchg
ficompl
int
add
inc
pusha
mov
inc
or
sub
js
mov
repz
add
stc
add
cmpb
and
pop
jmp
sarb
mov
outsb
dec
adc
jnp
int
subb
lds
stos
mov
enter
push
push
xor
sbb
xchg
ds
cwtl
aad
pop
fbstp
into
mov
int
and
push
xchg
int
or
pop
add
mov
pop
shlb
add
sub
rcl
mov
lret
scas
pop
jbe
pop
add
sub
gs
out
mov
pop
popf
jg
lret
int
pop
dec
mov
dec
icebp
or
add
dec
jmp
or
and
out
sbb
and
shll
or
mov
dec
faddl
xchg
xchg
lds
inc
out
popa
jmp
jbe
outsl
out
call
ffreep
adc
jge
aam
adc
sub
mov
mov
dec
pushf
les
mov
mov
mull
pop
mov
push
lret
iret
mov
mov
xlat
adcl
xor
inc
jp
or
js
push
sub
aad
push
loope
andb
pop
ror
mov
jae
push
sbb
xchg
pop
jne
repz
mov
aad
inc
jbe
flds
inc
lcall
aam
mov
cmp
in
sbb
xor
fsubr
dec
sub
sub
xor
mov
data16
push
and
or
pop
jnp
mov
fwait
or
cmp
cmpsb
xlat
loope
ljmp
test
and
shl
cwtl
lods
jno
scas
or
jge
jno
xchg
hlt
add
rorl
cltd
hlt
shl
sub
ret
mov
test
xlat
outsb
fs
in
and
fwait
sub
xor
aam
or
mov
ret
imul
sbb
clc
push
or
cltd
pusha
mov
inc
pop
aam
cmp
sbb
in
push
rorl
xor
std
add
push
inc
adc
inc
stos
push
mov
lea
lahf
cmp
lret
add
inc
add
arpl
xchg
sub
in
aad
dec
sub
nop
stos
mov
push
cmpsb
or
hlt
pushf
push
lock
or
outsl
mov
inc
movl
xor
jbe
iret
aas
rorb
je
aaa
mov
imul
pop
pop
popa
sbb
je
xchg
xchg
scas
sbbl
adc
xor
ljmp
push
jecxz
mov
push
push
mov
nop
pop
cmp
ds
jns
sub
mov
sarb
inc
fisttps
sub
mov
arpl
mov
je
sbb
mov
imul
sub
cmc
stc
xor
cmp
inc
mov
fdivrs
in
sub
bound
pusha
pop
in
mov
mov
mov
inc
mov
repz
mov
fdivrl
dec
add
int
filds
cmp
jecxz
xchg
adc
mov
push
sti
push
jmp
jle
incl
test
mov
lcall
xchg
imul
movhps
icebp
jge
mov
lods
xor
nop
out
scas
and
inc
mov
pop
int
adcl
mov
bound
hlt
sbb
lret
mov
push
mov
arpl
daa
mov
insl
out
sbb
scas
repnz
mov
mov
aad
je
stos
mov
enter
inc
mov
pop
outsb
pop
dec
jno
mov
add
and
xor
mov
shll
and
insl
xor
push
pop
adc
call
jnp
add
inc
into
or
xor
sti
pusha
insl
cmp
push
lods
jnp
sbb
xchg
sbb
test
mov
scas
xor
sub
sbb
jo
cwtl
mov
in
sbb
in
arpl
imul
mov
in
xchg
mov
xlat
mov
outsl
push
xchg
inc
nop
lods
mov
xorl
aam
push
push
inc
sahf
nop
movsl
jle
inc
adc
push
sbb
movsb
out
add
iret
mov
mov
add
mov
and
aaa
out
jg
mov
xor
ljmp
mov
pop
roll
fnstcw
or
ljmp
fmulp
gs
scas
push
xor
fsts
mov
push
rclb
xchg
sub
aam
scas
into
pop
ficomps
aam
sbbl
xchg
pop
cmpsl
mov
das
stc
lret
inc
mov
pusha
js
pushf
ret
cltd
mov
and
mov
outsl
xchg
shlb
mov
xlat
mov
xchg
bound
and
mov
sahf
pusha
jp
daa
fldenv
add
out
in
sub
cmpb
lret
cmp
add
xchg
mov
cmpsb
in
mov
out
or
punpcklbw
dec
or
not
fwait
sub
xchg
rcr
incl
cmpsl
pusha
cmp
ret
ret
notl
mov
js
adc
pop
out
stos
repnz
sbb
repnz
cld
mov
xor
xchg
push
xchg
dec
roll
add
lea
insl
popa
in
push
adc
insl
xor
sbb
sbb
add
mov
jp
repnz
stos
aad
icebp
adc
mov
pop
notw
mov
jp
mov
inc
mov
mov
mov
ds
xor
xor
xor
sahf
mov
mov
repz
rcr
or
ds
xor
mov
xlat
test
lods
sub
pop
aad
and
xchg
adc
shrb
ret
iret
mov
or
arpl
pop
scas
sbb
push
popl
or
push
loope
push
sbb
jle
push
adc
dec
mov
sahf
mov
mov
insl
cmp
pop
movsl
punpckldq
pop
movsb
pop
xchg
out
shl
mov
adc
int
pusha
mov
inc
xor
jo
lcall
test
adc
mov
cmpl
aaa
mov
movsb
inc
loope
mov
mov
lock
add
loope
push
gs
mov
test
xor
call
inc
xor
stos
cld
scas
lods
pop
push
in
les
xchg
aam
sub
cmc
fisttps
hlt
lods
fwait
or
repnz
ds
into
aam
jg
xor
arpl
cld
icebp
in
aam
leave
ss
inc
stos
xor
mov
push
jbe
pop
call
mov
scas
js
cmpsl
xor
sahf
add
test
movsb
insl
cmp
mov
fnstsw
or
lds
and
xchg
in
pusha
scas
jl
adc
pop
aas
mov
sub
int3
lods
mov
test
push
in
enter
mov
lret
sub
mov
gs
xor
loope
mov
aas
sti
mov
scas
add
cmc
add
mov
stos
rolb
push
pop
ja
insb
add
aad
push
sbb
pushf
mov
xor
cmp
cmp
dec
sub
push
jp
jns
mov
jae
push
xlat
sub
popa
cmp
daa
and
int
mov
and
or
or
mov
jle
jne
aas
add
jae
xor
call
xchg
pop
push
cltd
push
adc
lods
add
aam
xor
xchg
xchg
loopne
outsb
add
cmpsb
nop
jo
stos
push
dec
sub
hlt
sub
data16
jo
test
dec
cmpsl
ja
mov
fisttps
mov
std
and
push
je
jge
mov
ds
cs
jge
ret
insl
aas
cmpsb
cmp
xchg
scas
push
sbb
sub
cmp
aam
lret
mov
movsb
mov
in
sbb
and
aam
mov
divb
xchg
add
jg
ja
xchg
mov
jb
mov
push
fdivp
jb
push
dec
sub
rorb
push
mov
xor
das
push
aaa
mov
xchg
pusha
push
lods
fmull
mov
inc
cmp
out
mov
adc
pusha
hlt
fwait
jns
jb
lahf
and
push
xor
mov
inc
pop
repz
fidivs
dec
jl
or
fcmovnbe
mov
inc
fisttps
ss
sbb
jns
fs
mov
ljmp
push
xor
inc
mov
xor
sub
data16
je
mov
mov
lea
aam
cmp
cmp
mov
push
mov
jno
testl
das
mov
fs
pop
aaa
stc
xchg
imul
inc
inc
stc
imul
mov
pop
xor
aas
add
xchg
jmp
cmp
jl
hlt
insb
xor
inc
out
push
sbb
call
loop
jl
mov
jmp
dec
pop
pop
pusha
imul
mov
or
shrb
push
xchg
pop
aam
fidivrl
addr16
dec
mov
adc
addr16
mov
es
mov
aaa
out
pop
fcmove
outsl
mov
sti
into
pop
push
pop
sbb
lock
aam
xor
push
mov
outsl
stos
inc
add
iret
hlt
jns
in
shlb
xchg
fcomp
pop
shl
repnz
or
mov
ffree
testl
andb
imul
lar
push
fistps
ret
dec
pop
leave
mull
mov
add
in
push
add
xchg
rcrl
pop
mov
push
sbb
mov
scas
or
ret
cmp
pusha
lret
in
inc
jns
mov
lods
pop
bound
ret
or
xor
fcmovbe
adc
pushf
sub
or
movsl
pusha
pop
dec
out
fmuls
call
sbb
mov
adc
test
xor
adc
mov
stos
xchg
cmpsb
cmpsb
cmp
adc
std
scas
pop
xor
sbb
dec
push
adcl
pusha
es
jp
pop
xchg
cmp
add
sub
daa
loope
add
loopne
sub
mov
sbb
fs
mov
dec
js
xchg
push
push
jo
lret
adc
and
cs
idivb
jne
xor
jbe
cmpsl
jmp
add
add
leave
jecxz
mov
xor
testb
outsl
scas
int
jle
and
push
xor
adc
lcall
ds
stos
fildl
enter
or
inc
push
fcomi
and
aam
not
push
adc
fwait
jnp
lcall
les
add
out
sub
mov
test
pop
mov
or
xchg
ja
adc
enter
fsts
in
in
push
mov
loop
jg
std
inc
hlt
aam
je
pop
sub
idivl
aad
stc
aas
test
jmp
or
jg
add
jp
addr16
loopne
ret
jb
add
inc
sbb
ret
adc
push
sti
adcl
movsb
dec
and
adc
adc
fstps
shrb
ficompl
test
inc
nop
add
mov
shlb
push
repz
xchg
ret
decb
or
ret
xor
in
cltd
xor
pop
insl
lds
push
push
and
out
gs
shll
pop
inc
ds
cmp
leave
mov
cmp
test
lahf
stos
inc
cmpsl
add
push
dec
addr16
or
shlb
pop
mov
push
jle
outsb
mov
mov
sti
iret
int3
sbb
fisttpll
xlat
mov
push
lcall
iret
iret
mov
jno
xor
mov
rolb
mov
or
movsb
and
test
adc
pop
or
mov
cmp
dec
and
add
push
push
mov
fcompl
rcr
arpl
jmp
adc
mov
pop
add
inc
fdivs
dec
dec
in
xchg
inc
add
cli
sahf
xor
pop
out
push
cli
shll
or
inc
pop
std
ret
sar
or
aam
xor
shrb
inc
mov
jno
dec
mov
std
add
adc
dec
jg
mov
xlat
mov
repnz
mov
push
inc
pop
in
sub
pushf
outsl
xchg
filds
loope
sub
jae
jno
shll
mov
pop
push
ret
sbb
jae
insb
jle
gs
xlat
fdiv
mov
mov
or
movsl
out
gs
ret
leave
add
lret
jg
sub
xlat
stos
nop
pushf
sub
dec
inc
stc
mov
stc
sbb
fdivrs
jecxz
mov
dec
cmp
mov
jle
xorb
inc
jmp
ss
add
pop
cmc
aad
ja
cmove
jg
mov
ss
outsb
adc
out
xor
cmp
inc
mov
sub
cmp
dec
mov
insb
icebp
out
mov
add
jge
mov
pop
mov
xchg
push
or
ja
shlb
add
xor
iret
inc
add
xorb
adc
test
add
mov
int
xor
test
mov
or
popa
movsb
ficoms
pop
xchg
dec
pop
mov
subl
insb
roll
testb
or
sarl
sub
pusha
inc
jb
push
mov
push
rcll
mov
push
je
pushf
insb
scas
int3
icebp
jge
rclb
pusha
xchg
les
je
mov
mov
push
sbb
dec
add
fldl
mov
jo
cmpsl
repnz
jbe
add
outsb
mov
enter
fsubp
dec
or
cmp
mov
test
fimull
push
jge
lahf
add
rorl
shlb
xchg
jne
mov
test
dec
xor
dec
dec
or
mov
imul
fcomi
pop
je
inc
xchg
push
dec
pop
dec
jge
xchg
push
push
pop
mov
cmpsb
cmc
cwtl
cmpsb
jp
pusha
std
sub
sub
push
es
aam
mov
das
hlt
xchg
insl
fldl
sbb
mov
daa
cmp
cmp
dec
mov
in
data16
or
cmp
or
push
popl
xorb
sbb
aam
std
jno
lret
data16
sbb
xchg
jmp
mov
je
lahf
loop
adc
inc
mov
mov
mov
add
ljmp
shrl
stc
scas
dec
pop
pop
les
add
push
lods
and
push
fisubrl
add
cwtl
pop
jg
or
add
mov
gs
imul
enter
ss
sub
test
add
sub
xchg
mov
pop
xchg
sub
xchg
je
add
push
sub
xchg
movsl
add
leave
lahf
sub
pushf
push
mov
add
cs
icebp
fistpl
pop
push
das
sbb
push
xor
popa
into
pop
mov
imul
nop
mov
cmp
std
mov
adc
cmp
test
subl
leave
adc
loop
and
js
push
fistl
imul
rcll
adc
dec
xchg
mov
fwait
mov
pop
movsl
push
adc
xchg
jnp,pn
xlat
dec
sbb
test
mov
mov
vpaddsb
aad
add
movsl
pushf
loope
adc
fistpl
fcoms
pop
cmc
cwtl
and
clc
adc
jle
notb
pslld
adc
aad
cmpl
adcl
ds
daa
push
insb
xchg
and
aad
dec
mov
in
shrb
xor
mov
pop
repnz
in
pop
mov
jno
fs
push
xor
push
cli
dec
aad
add
mov
lea
fwait
popa
mov
lahf
daa
mov
in
inc
pop
cmp
inc
inc
aam
insb
and
pop
cli
roll
sbb
dec
jo
pushf
sub
adc
nop
into
dec
mov
mov
inc
cmpsb
inc
dec
add
mov
mov
popa
mov
jmp
aaa
mov
pop
daa
inc
lret
cmpsl
xor
add
inc
inc
pop
add
dec
movsl
in
aam
mov
jp
popw
push
je
loopne
cmp
mov
out
push
push
and
das
popa
pop
sub
filds
mov
sbb
pop
popf
pop
push
bound
aam
dec
jbe
popl
sti
cmp
roll
addr16
stos
cltd
sbb
test
int
xchg
bound
pop
add
push
idivl
cs
dec
dec
movsl
pop
sarl
in
aad
cmpsl
aad
test
lahf
cmpsl
mov
lock
cmc
popa
mov
xlat
pop
jb
shll
fisttpll
jb
push
xor
xor
sub
or
loope
arpl
mov
xor
xchg
dec
push
in
sub
mov
add
fmull
xchg
or
add
sarb
cs
jmp
fstpt
mov
stos
push
leave
loop
pop
andl
decb
fiadds
pmaddwd
pop
add
pushf
fst
push
inc
pop
xchg
mov
add
popl
rcrb
inc
mov
pop
and
mov
jmp
add
in
loope
fwait
inc
in
push
xor
adc
aad
lret
scas
or
fstps
inc
pop
dec
pop
and
add
cmpl
jmp
mov
dec
add
shrb
cmp
cmp
push
dec
pop
mov
insb
or
pusha
ret
movsb
sub
das
test
std
jbe
ss
js
push
push
rcll
cmpsb
pusha
test
mov
outsl
aad
out
call
dec
nop
mov
loop
adc
out
mov
fsubrs
push
xchg
pop
dec
add
mov
icebp
add
sbb
rorb
sub
out
add
push
mov
and
lock
jbe
pop
jmp
xchg
loopne
fxam
int3
xor
mov
aam
hlt
inc
mov
dec
push
iret
stos
jmp
and
push
ja
sub
dec
push
add
loop
xlat
and
daa
sub
mov
inc
dec
imul
movsb
add
movsb
add
imulb
js
aaa
adc
dec
out
aaa
sbb
pushf
xchg
inc
add
lods
in
enter
mov
sub
scas
sub
pusha
lds
add
and
iret
dec
mov
and
das
sub
scas
xor
add
aam
cmp
in
ds
es
rol
cmp
dec
jnp
test
adc
jo
sbb
lds
jecxz
jge
jge
outsl
adc
test
adc
dec
sub
inc
xchg
stc
mov
xchg
shlb
push
das
inc
and
mov
inc
mov
pushf
push
repnz
and
shlb
lret
rep
inc
aam
xor
adc
outsl
add
sti
jb
dec
add
addr16
push
stos
push
in
sahf
xor
aad
scas
mov
sub
movb
jmp
adc
sub
cmp
iret
mov
je
sahf
cmp
scas
aam
mov
mov
pop
nop
stos
cmp
out
aas
jne
insb
or
jnp
out
cwtl
xor
les
or
test
sub
in
jge
pusha
inc
jl
cmp
xlat
test
push
mov
leave
mov
insb
push
inc
add
adc
sarl
in
adc
xor
bnd
push
sub
es
xchg
aad
enter
aaa
pushl
mov
repz
mov
lret
fiaddl
jle
clc
inc
push
stc
or
leave
mov
repnz
push
cmpsl
cmc
push
incl
mov
shl
jmp
add
jle
push
push
pop
idivl
or
rcll
lea
mov
mov
lahf
leave
sahf
jnp
add
add
xchg
gs
out
push
outsl
lds
cwtl
mov
jle
icebp
fisttpl
adc
shlb
add
lcall
sub
mov
fldt
xor
mov
inc
in
mov
inc
sub
jg
sbb
pop
ss
xlat
data16
adc
aad
push
and
or
aam
mov
or
cwtl
xadd
orb
add
imul
pop
dec
mov
add
push
adc
mov
mov
mov
test
sbb
mov
push
aam
iret
lds
xlat
push
jbe
fstl
mov
cmp
jbe
push
aam
lds
jmp
pushf
xor
dec
xchg
add
js
mov
pushf
cmp
jge
push
pop
ja
cld
addr16
mov
enter
mov
pop
in
aas
leave
int3
mov
push
aam
shr
adc
sub
mov
das
jle
jne
mov
dec
ficoms
sti
aad
cmp
xorl
sbb
xchg
mov
push
cmp
lahf
int
sbb
imul
adc
or
pusha
xor
ds
xlat
fwait
out
out
xchg
leave
iret
push
jae
cmp
sbb
add
stos
shl
jecxz
aas
jns
fidivrs
sub
mov
loop
cmp
jge
sbb
push
xchg
bound
fdivrl
insb
sub
je
fstpl
je
xchg
jne
mov
push
sub
aam
mov
lret
add
ret
mov
movsl
aaa
jo
add
jnp
mov
in
dec
lds
add
aam
dec
push
lock
es
fdivr
adc
mov
jp
lret
mov
sbb
mov
enter
sub
arpl
jmp
mov
dec
inc
pop
inc
insl
mov
xchg
sbb
fistl
stc
lret
push
into
scas
pusha
inc
cmp
aas
push
mov
mov
std
out
sahf
add
mov
push
cld
pusha
and
dec
iret
test
int
sbb
jb
stc
inc
mov
mov
aaa
add
add
lcall
or
dec
aam
call
cwtl
xchg
mov
shll
push
stos
dec
xlat
das
aad
mov
iret
mov
sub
cld
pusha
adc
aam
jno
push
push
mov
xchg
xor
bnd
or
outsl
mov
sbb
outsl
aam
fmull
mov
fldcw
jge
js
shlb
jbe
xchg
sbbb
pusha
test
dec
push
jmp
insb
pop
inc
fwait
pop
outsl
loopne
repnz
xorb
roll
fwait
cmp
daa
sub
inc
xor
and
xchg
cld
int
xchg
data16
clc
add
mov
or
fildll
aam
xor
push
fisttps
mov
inc
daa
outsb
ds
sbb
sbb
aam
mov
test
out
les
push
xchg
jnp
mov
loopne
mov
in
filds
or
cmp
aad
mov
pop
into
inc
mov
adc
rcl
fcom
int3
stc
xchg
push
push
xchg
dec
popa
push
dec
xor
cmp
or
mov
out
sti
mov
int3
jp
xor
mov
and
mov
mov
mul
push
push
add
push
ficomps
pop
in
dec
cmc
test
push
sarb
pusha
ror
stc
jae
xchg
test
add
xchg
mov
les
jp
jo
pop
aam
mov
mov
xchg
adc
fmuls
jae
lahf
andb
int
sti
movsl
sub
mov
in
repz
cwtl
jle
pop
push
mov
ficoms
or
aam
cmpb
push
ds
cld
mov
add
cltd
into
xor
mov
cmp
insl
or
dec
inc
cmpl
loope
jbe,pn
std
test
pop
push
rcrb
mov
fidivl
mov
push
jns
popw
pop
mov
jbe
sbb
fimull
add
cwtl
daa
xchg
dec
sbb
xor
xchg
in
jp
xchg
aad
or
mov
mov
pop
mov
fimuls
test
or
daa
mov
sub
push
dec
sub
pop
sub
xor
dec
mov
dec
cld
mov
add
dec
dec
mov
jae
xchg
inc
cmp
mov
mov
cwtl
aaa
push
xchg
cmp
lret
and
int
xor
jmp
pusha
adc
hlt
inc
out
inc
scas
repz
es
mov
test
inc
pop
add
fisttps
pop
in
push
sarb
adc
inc
aad
dec
test
add
sub
mov
repz
je
adc
popf
test
mov
mov
movsl
pop
mov
push
out
adc
add
dec
lods
and
popa
aad
adc
lea
push
add
mov
addr16
in
mov
sub
or
sub
cmp
aad
icebp
int
addb
mov
mov
cmp
lea
addr16
cwtl
push
mov
loope
adc
aaa
sar
daa
jno
pop
aam
xchg
xchg
xchg
jle
push
sti
jae
lahf
pop
push
mov
fsubrs
adc
gs
in
pusha
dec
mov
int3
cmp
sahf
stos
bound
rolb
clc
cmpsl
mov
xor
mov
add
add
and
mov
xchg
inc
mov
dec
rorb
pop
insl
test
xchg
test
add
push
dec
scas
dec
addb
mov
add
popa
xor
add
loope
xchg
pushaw
push
repz
movsb
outsb
push
aad
pusha
adcl
pop
cmp
sub
pop
inc
mov
adc
js
popf
pavgw
adc
dec
sbb
push
pop
pop
lods
pop
mov
rcll
or
mov
sarb
jne
test
or
sar
inc
pusha
mov
mov
sub
cmpsb
roll
mov
add
out
les
add
rorb
out
jne
mov
pop
pop
and
roll
aam
and
orl
out
mull
add
jge
push
insb
pop
cwtl
leave
or
push
add
sub
daa
pop
xchg
sub
test
test
mov
pop
movsb
sbb
mov
sub
mov
daa
push
or
xchg
cmp
or
shl
jp
pop
and
fsubs
jmp
rclb
mov
jg
aaa
fsubrs
add
mov
jge
xchg
outsl
out
icebp
xchg
out
xlat
pop
mov
adc
sub
push
daa
pop
loop
test
jae
inc
cld
cmpsb
test
lea
test
mov
xchg
and
mov
iret
xchg
sbb
fwait
inc
mov
imul
aas
mov
repnz
es
incl
xor
pop
or
mov
jg
or
test
mov
cmpsl
cmpb
mov
in
pop
daa
pop
mov
jnp
xor
xchg
pop
dec
dec
sbb
cmp
imul
mov
jae
sub
addl
inc
int
xor
push
cltd
xor
scas
pop
sub
cwtl
sub
xor
int
mov
mov
test
decl
push
cmp
adc
ljmp
les
fcompl
mov
push
mov
mov
jl
inc
arpl
jae
out
lcall
mov
jle
or
xchg
dec
or
mov
xorl
test
xchg
aam
fdivl
fstps
mov
xchg
insb
inc
mov
jbe
jl
pop
clc
pop
scas
xchg
fwait
push
shrb
in
ficoms
mov
clc
sbb
jae
aad
in
fnstcw
xor
sub
clc
pop
push
aad
jo
leave
vpaddsw
mov
cmp
test
sti
jmp
repnz
call
pop
adc
pop
mov
or
lret
push
roll
andb
lods
dec
adc
es
mov
test
lahf
fcmovnbe
pop
push
je
dec
call
cmpsb
movsb
mov
mov
dec
mov
out
int
fidivrl
xlat
mov
popf
jno
ja
add
mov
adc
mov
mov
mov
cmpsl
sub
arpl
mov
fs
test
lock
test
inc
insl
and
insl
jbe
stc
ja
push
into
mov
fwait
lods
xor
jmp
adc
dec
mov
bound
sub
mov
aam
sbb
and
adc
mov
or
mov
add
and
mov
loope
popa
sti
and
xor
push
aas
lods
jg
push
cwtl
lahf
mov
pop
sub
add
fwait
xchg
sub
push
mov
cmp
cmc
cmc
out
lock
add
xlat
jae
push
sub
cwtl
mov
push
mov
cmpsb
inc
or
aam
mov
add
imul
jmp
mov
mov
push
or
xchg
outsb
pop
aad
out
inc
into
stos
cmp
and
adc
fimuls
fucomi
aad
or
cmp
fs
jle
adc
mov
xorl
mov
imul
sahf
clc
xorb
dec
fwait
sub
xchg
inc
lock
fcoms
add
pop
rcrb
sbb
jb
ret
xlat
cltd
ret
arpl
mov
push
mov
cmp
inc
daa
mov
cmc
lahf
cld
push
pusha
lahf
orl
jnp
shlb
notb
test
mov
and
add
jecxz
pop
cltd
test
sbb
out
pop
mov
push
sahf
lods
imul
loope
mov
lret
mov
adc
std
leave
xor
mov
popa
xorl
cmp
test
pop
mov
mov
and
mov
in
mov
fwait
jb
pusha
test
xchg
call
test
mov
push
fwait
inc
fwait
pop
cmp
sbb
mov
dec
fcompl
outsl
fstpl
pop
push
jg
pusha
std
scas
movsl
pusha
push
cmp
jno
fldcw
mov
mov
mov
xchg
lock
sbb
int3
daa
cld
popf
xchg
leave
pop
je
and
aam
add
jb
stos
mov
push
frstor
jge
mov
rcl
ret
mov
dec
fnstcw
or
insl
gs
xchg
pushf
mov
add
sub
inc
adc
adc
cmp
add
and
jp
push
insb
xchg
mov
mov
add
stos
mov
fstpt
lock
jo
pop
pusha
jge
aaa
push
hlt
adc
pop
add
inc
xchg
xor
xor
lahf
xor
sbb
or
sbb
sbb
fsts
sub
es
scas
in
js
pop
arpl
sti
xchg
mov
out
push
fwait
xchg
mov
scas
push
or
mov
mov
jmp
or
add
xchg
stos
push
adc
in
pop
imull
dec
insb
outsb
push
mov
popa
pop
pop
in
dec
sub
add
push
mov
gs
out
enter
xchg
xchg
lds
cmp
aam
xchg
fisubrs
fistps
xor
xor
ds
dec
fiaddl
aas
sub
data16
ljmp
enter
push
xchg
mov
ljmp
in
fs
xchg
jl
lods
js
add
pop
pop
dec
push
jmp
lret
andl
pushf
aaa
gs
mov
mov
std
inc
or
notb
adc
cwtl
outsl
mov
popl
enter
aam
push
imul
imul
daa
test
pop
les
aad
push
sbb
dec
add
gs
and
daa
stos
fcompl
loopne
and
movsl
sub
mov
mov
insb
dec
push
inc
out
scas
or
and
mov
sub
adcw
arpl
repz
or
mov
cmp
dec
xchg
dec
sbb
dec
lods
cmp
pusha
aad
ljmp
cmpsb
pop
popa
cmp
ret
add
rorl
jle
movb
push
adcb
or
jecxz
mov
pop
sbb
adc
rcl
lret
in
adc
add
lods
cmp
ja
inc
or
icebp
mov
into
jns
xlat
xor
cmc
insb
js
lds
xchg
into
cltd
pop
in
scas
adc
bound
push
ja
push
mov
mov
hlt
push
pop
add
add
sub
dec
xchg
or
addr16
clc
out
outsl
mov
roll
cmp
aad
pop
sub
mov
add
pop
inc
aaa
mov
sub
inc
adc
pop
jge
aas
sbb
mov
lahf
mov
arpl
int3
insl
mov
scas
mov
add
cmp
ss
push
lds
sub
loop
in
xor
aaa
sbb
bound
hlt
add
sub
fsub
mov
mov
je
and
push
xchg
aam
xlat
addr16
and
add
shr
in
dec
pop
push
pop
test
movsl
mov
cmpsl
ret
fistps
pop
sub
inc
in
sub
enter
sbb
jmp
fisubl
imul
xlat
mov
sbb
push
pushf
sub
pusha
pop
mov
pop
mov
add
in
adc
cltd
cmc
ja
lea
mov
mov
pop
and
inc
pop
sub
sahf
jbe
inc
mov
rclb
shll
pop
pop
mov
cmc
mov
xchg
dec
incb
lods
ja
inc
mov
aam
div
mov
leave
aam
ret
add
pusha
movsl
jns
frstor
inc
movsl
aam
sbb
pop
or
cmp
xchg
mov
ficompl
fwait
aad
fs
stc
shll
call
or
gs
push
mov
repz
test
push
push
push
aad
pusha
test
mov
and
dec
mov
push
xchg
lods
adc
adc
sbb
lret
cmpsl
add
mov
inc
cmp
daa
push
mov
mov
cld
sbb
out
push
sub
jb
jp
out
push
shlb
ror
rolb
pushf
push
nop
jge
xchg
mov
js
mov
cmpsl
mov
mov
or
mulb
imul
aad
addr16
adcl
push
je
add
add
ret
pop
mov
aam
mov
lods
sbb
stos
or
sub
sbb
inc
mov
ret
and
sbbl
add
push
mov
insb
xor
jae
std
mov
pop
les
rorl
cmp
mov
lods
cltd
pop
pop
lret
jg
jns
lds
xor
rolb
loopne
push
jecxz
mov
push
sahf
arpl
daa
cld
in
es
xor
lcall
sub
mov
fsubr
xchg
pop
sbb
icebp
movsl
addr16
or
cltd
pop
mov
je
es
jae
mov
add
out
insl
movsl
mov
mov
fldl
jno
jns
mov
xor
mov
insl
mov
add
mov
jp
jecxz
jns
js
ficoml
adc
shrl
test
rorb
das
jp
mov
lods
xor
orl
inc
push
xchg
data16
aam
pop
fisttpll
subb
push
popa
adc
add
adc
cmp
sti
ja
mov
or
xrelease
pop
fwait
sti
mull
cmc
add
add
imul
or
and
mov
in
fistpll
subl
or
enter
cltd
xchg
jp
and
in
ljmp
lock
jbe
push
cmpsl
inc
push
xchg
fabs
add
cmp
jb
shlb
out
leave
mov
jnp
inc
pushf
jecxz
fisubs
fsubs
sbbl
loopne
mov
or
mov
test
sbb
xor
pop
sbb
stos
aad
push
or
test
scas
in
data16
or
in
adc
arpl
mov
pop
fildll
or
mov
cmpsl
test
and
gs
pop
sbb
xchg
pusha
lea
sbb
mov
fdivrl
sub
call
repz
pop
push
sub
dec
jne
in
out
sub
adc
stos
mov
sub
push
insb
jp
sub
fiadds
add
pop
jp
dec
shl
xchg
jne
and
jno
or
cmp
inc
ds
sbb
aam
mov
lds
jge
arpl
rol
and
loope
clc
rcll
fwait
xchg
pop
mov
and
mov
inc
cmpsb
mov
andb
ja
rcll
sub
jmp
add
xor
dec
jge
fcmovbe
pusha
jmp
fistpl
mov
pop
cld
int
xlat
jecxz
pop
je
shl
mov
aad
cmp
dec
pop
ja
jne
cltd
xor
jecxz
jb
hlt
aam
repz
enter
add
in
cmpl
add
jo
push
movsb
push
pop
pop
mov
pop
xor
shlb
mov
scas
adc
lods
pop
rcrl
or
ds
stc
mov
jmp
xchg
sub
sub
test
fmull
pop
mov
nop
inc
mov
add
jo
mov
pop
movsl
notb
cmc
leave
push
sub
pop
stos
testb
lods
popa
sbb
xchg
aam
in
cmp
in
mov
popa
cmpsl
or
in
sub
xlat
push
mov
mov
rol
adc
jp
fistl
jno
popf
cmp
dec
add
or
mov
jno
adc
sbb
shll
jp
lsl
popa
loope
aas
jge
push
mov
call
lcall
xchg
pop
mov
stos
rcl
inc
test
push
stos
xlat
movsb
pop
mov
es
inc
fimull
push
lret
mov
leave
mov
push
mov
lock
or
add
lock
jae
das
and
xchg
sbb
mov
movsl
add
scas
popf
loopne
mov
popf
inc
jle
cwtl
and
loop
mov
shrl
aad
out
sub
jae
jae
jbe
fildl
stc
xchg
orb
cmpsb
sub
sbb
mov
cld
cmp
cld
pop
ret
lcall
popa
jmp
divl
pop
mov
add
cltd
add
mov
and
aaa
cmpsl
jb
sbb
icebp
pop
ret
aad
hlt
push
ss
fisttpl
inc
loope
lds
aam
dec
xor
nop
mov
pop
xor
pop
lahf
sbb
sub
repnz
sti
aam
mov
fs
and
pusha
addr16
rclb
outsb
fnstsw
add
adc
push
jne
mov
faddl
mov
je
pop
call
mov
lods
fcomp
pusha
sarl
dec
add
lahf
mov
pop
mov
iret
in
shrb
gs
aaa
cwtl
gs
and
data16
fisttpl
add
bnd
mov
or
fs
inc
mov
xor
add
pop
push
jno
lds
jne
fcomps
mov
mov
pop
push
decl
lock
mov
aad
add
mov
cmpsb
add
leave
add
dec
xchg
outsl
pop
mov
loopne
pop
push
loop
xor
pop
or
movl
aad
mov
mov
add
les
shll
mov
xor
enter
xchg
mov
lahf
pusha
or
add
cmp
in
mov
das
add
imul
push
es
adc
adc
inc
cwtl
sub
dec
add
aad
nop
loope
mov
movsb
push
stc
jmp
jne
out
sub
jne
sbbl
xor
pop
sbb
movsb
imul
in
pushf
testb
fcomp
jno
nop
call
testb
and
push
mov
cli
and
push
fbstp
xchg
mov
pop
add
inc
xchg
lea
cmpsb
fisttps
add
inc
xchg
fnstenv
roll
test
mov
iret
shll
ja
push
cmp
fstp
lret
pop
leave
outsl
cld
pop
sbb
push
xchg
aad
mov
gs
mov
icebp
or
pop
mov
mov
es
push
mov
daa
inc
cmp
xor
and
addb
cmpl
add
mov
cmpsb
scas
cwtl
rolb
mov
mov
jg
out
repz
mov
jae
mov
test
fistpl
pusha
jnp
outsb
jo
jmp
sbb
and
mov
les
js
sbb
dec
aas
lahf
hlt
xor
push
pop
push
mov
les
je
mov
mov
sub
push
mov
cltd
adc
sub
jle
pusha
inc
js
push
or
clc
ret
cmc
cmp
pop
jb
jl
test
pop
inc
in
mov
add
nop
pshufw
inc
mov
sbb
cmc
mul
and
push
xor
pop
jge
imull
mov
or
cwtl
into
push
inc
imul
shll
pop
cmc
shr
adc
aad
aam
mov
or
push
mov
pop
jle
into
rorb
add
pop
fwait
sbb
loope
xor
pushw
lock
or
rcrb
cmpsb
mov
popa
pop
data16
dec
cmp
jae
pop
jae
fistpl
pusha
rcr
sarb
ret
or
sahf
dec
sub
xlat
ds
into
dec
cmpsl
iret
add
icebp
pop
add
aam
push
or
xor
pop
int3
add
jmp
add
imul
fs
xchg
jg
push
pop
sub
pop
insl
pop
xor
add
jge
iret
sahf
subb
imul
add
test
and
dec
fisubs
mov
pop
fidivrl
pop
stc
dec
adc
out
mov
adcl
in
out
ret
or
mov
sbb
add
daa
sbb
pusha
dec
popa
int
int3
outsb
in
fcmovu
into
or
aad
cmp
psubsb
fs
push
popa
imul
mov
test
pop
jmp
push
sahf
aad
xchg
fsubr
sub
dec
xchg
nop
xchg
adc
adc
add
dec
push
sbbl
cld
hlt
mov
sub
add
movsb
leave
mov
jns
cmp
mov
out
insl
shll
xor
inc
std
out
mov
add
lds
rclb
cmp
test
fldl
enter
pop
movsb
aam
jb
push
mov
test
or
jo
mov
xchg
and
outsl
mov
arpl
pop
mov
push
pushf
loope
cmpsl
sub
pop
lret
jl
pusha
jp
add
jecxz
call
dec
mov
pop
mov
sbb
cmpsl
ret
clc
or
sbbl
cmp
mov
roll
jnp
lret
jle
js
adc
sbbb
imul
lret
jnp
aas
cmp
pop
rcr
leave
nop
sbb
inc
or
push
jmp
mov
test
inc
jle
ja
push
xchg
mov
nop
aam
push
fiaddl
push
orl
xchg
mov
push
jle
iret
sub
jp
inc
lcall
jecxz
pop
mov
aad
scas
push
sti
mov
outsb
lock
out
add
test
cltd
dec
jmp
or
out
jae
addb
aad
int
lahf
xor
add
ret
jmp
adc
fmull
add
jae
or
jmp
inc
xchg
mov
daa
hlt
sahf
es
dec
mov
cmp
pop
mov
movsl
xor
push
lahf
adc
dec
in
es
roll
fnsave
add
jle
jae
testl
cltd
dec
xor
sbb
xlat
mov
inc
sub
notb
fwait
in
sbb
add
jle
stc
insl
push
pop
aas
push
mov
inc
aad
out
sub
cmpsb
adc
mov
rcrl
mov
jne
cmp
sbb
mov
enter
sahf
dec
iret
jmp
add
int
in
nop
adc
inc
and
sub
mov
pop
mov
jecxz
bound
aaa
jge
dec
xchg
aas
mov
dec
stos
aam
mov
dec
ret
arpl
mov
and
mov
in
shrb
pop
test
dec
jb
add
jg
xchg
sub
pop
pop
pop
sbb
mov
add
push
mov
add
or
push
ret
jae
jge
dec
jp
out
mov
xor
jne
icebp
insb
stos
lret
xchg
insl
mov
pop
mov
ljmp
adc
les
aas
add
gs
xchg
xchg
cmp
push
dec
sti
mov
ret
iret
cmpsb
jne
dec
gs
push
pop
lock
aad
adc
pop
pop
mov
fiadds
ret
out
insl
mov
mov
dec
ret
aam
cmpb
xchg
xor
adc
ds
ljmp
mov
xchg
out
bound
mov
push
jbe
and
sub
sub
adc
pop
scas
inc
orl
cmpsl
and
loopne
lock
inc
cld
daa
cs
fcompl
mov
adc
in
js
aas
inc
ss
in
jnp
stos
inc
leave
inc
adc
jl
dec
int3
or
pop
add
insb
and
xor
xor
lahf
mull
cmpb
mov
dec
fdecstp
int
xchg
pusha
mov
test
mov
repz
mull
or
xchg
jne
test
sbb
insb
iret
push
xchg
mov
ljmp
shll
je
push
adc
or
jecxz
cs
ret
inc
repnz
jnp
clc
sub
in
mov
insb
aad
pop
push
nop
cwtl
popf
pop
mov
pop
cltd
out
lret
fbstp
sbb
pop
mov
jno
into
data16
or
dec
jae
fiadds
add
test
xchg
push
aaa
pcmpeqd
mov
or
mov
stos
shl
frstor
repz
fistpll
xor
mov
lods
jae
cld
ret
sub
test
int3
mov
popf
and
fldcw
pushf
inc
pop
cltd
pop
xchg
fiadds
xchg
push
jp
and
pop
dec
pop
test
fcmovnbe
dec
cli
xor
and
repnz
bound
sub
and
movsl
aad
decl
ficomps
sub
gs
pop
sbb
out
aas
fs
pop
mov
jecxz
pop
mov
fwait
stos
dec
loopne
dec
int3
inc
jae
gs
scas
sti
mov
push
cmpb
add
imul
dec
clc
mov
mov
lds
cli
inc
adc
cmc
pop
les
mov
outsb
sahf
mov
sub
pinsrw
mov
pop
addr16
mov
mov
add
pushf
inc
pop
mov
jno
mov
int
aam
popf
loope
and
imul
mov
add
inc
fidivl
popa
lahf
movsb
jmp
aad
shll
inc
inc
push
mov
sbb
mov
shlb
push
imul
inc
aaa
lods
adc
adc
sbbl
mov
mov
and
dec
cmp
movsl
popa
test
mov
aam
xchg
xchg
dec
jmp
xchg
mov
adc
pop
jno
sbb
fbld
loope
int3
inc
sbb
aam
insb
mov
sbb
dec
xchg
data16
and
push
out
lods
jge
add
test
hlt
push
add
dec
test
pop
test
and
or
add
cmp
xchg
xor
dec
xor
sub
dec
in
jnp
bound
and
cmp
sahf
cmp
fisttpl
jp
mov
pop
loope
mov
mov
add
ljmp
lahf
sub
aam
dec
jbe
sbb
in
test
lods
pop
jb
pop
xorb
pushf
ljmp
push
mov
jno
shlb
xlat
push
inc
mov
daa
sbb
push
jo
pop
push
push
cmp
pop
dec
out
xchg
pusha
icebp
rcl
mov
xchg
xor
mov
dec
push
and
repz
ss
pusha
pop
fs
or
lret
add
sbb
mov
push
mov
push
adc
mov
jne
mov
adc
pop
pop
ljmp
fs
push
pop
cmp
xor
popf
lods
aad
push
adc
pop
add
es
mov
jl
aad
dec
ljmp
leave
mov
sbb
mov
dec
negl
add
mov
or
cmp
ret
or
test
jle
push
jp
dec
je
pop
xor
xor
test
mov
push
xlat
push
add
mov
mov
cs
mov
pop
aad
ss
sbb
sub
and
push
jae
movsl
fmull
mov
hlt
mov
shll
mov
dec
fnstenv
and
jmp
xorl
mov
sar
es
pop
pop
or
adc
push
fs
pop
pushl
pushf
outsb
mov
mov
mov
push
arpl
dec
push
andl
mov
or
outsl
inc
add
pop
insl
daa
in
add
jl
leave
pop
mov
xchg
jae
jmp
ret
mov
jl
je
xor
insl
frstor
sub
pop
cwtl
xchg
les
inc
add
sub
insl
mov
aam
test
and
cmc
lods
and
xchg
mov
push
ret
or
lock
fs
adc
movsb
add
addr16
outsb
push
cmp
in
rcll
inc
in
add
loope,pn
insl
bound
add
push
push
push
mov
mov
aad
pop
push
shl
mov
jne
pop
mov
ja
push
bound
aam
outsl
add
lret
stc
repnz
call
mov
in
jmp
mull
adc
mov
stos
mov
jae
xchg
xchg
cmp
push
or
or
dec
in
and
dec
in
shll
dec
inc
mov
jecxz
imul
pop
in
fdivs
or
inc
jno
sbb
arpl
push
and
jp
xchg
inc
cmp
and
push
loopne
mov
sbb
pusha
lahf
ret
mov
and
repnz
lcall
mov
mov
aam
fcomps
addl
loopne
add
ret
aad
add
sbb
jo
xchg
pop
push
or
shr
add
adc
sub
mov
or
call
aaa
or
sub
lods
pop
push
sbb
cmpsl
js
nop
nop
xchg
and
push
mov
in
imul
fcomip
add
xchg
test
sub
add
rclb
mov
movsl
fstpl
jae
mov
imul
js
xchg
cmpsl
insb
lock
rcll
aam
shlb
je
stc
push
pop
lret
movsb
jo
je
stos
lods
jne
jb
mov
pop
mov
cwtl
fists
lret
push
push
jmp
mov
sbb
dec
mov
popa
jmp
sbb
lahf
pushf
pop
mov
stos
sbb
sbb
dec
xor
mov
aam
ficompl
pop
mov
jb
jmp
mov
iret
in
sub
fistpl
dec
mov
adc
divl
pop
ds
dec
cmpsl
mov
call
xchg
dec
shl
stos
inc
jne
pop
mov
movsl
add
cmp
test
in
imul
add
lahf
xlat
test
or
pop
adc
in
add
in
lock
jnp
movsb
aam
mov
sub
mov
push
std
lahf
and
inc
aam
sbb
and
mov
mov
add
mov
xchg
iret
aaa
mov
sbb
add
roll
repz
shrl
test
xor
sbb
jl
mov
or
xchg
sqrtps
icebp
pop
fwait
test
xchg
push
sub
enter
loope
pop
in
mov
xchg
imul
rorb
add
mov
push
arpl
push
test
sbb
sub
out
out
jmp
xchg
adc
add
call
jmp
jae
stos
incl
or
mov
daa
cli
sub
insl
fscale
mov
sbb
sbb
addr16
cmp
or
jae
sbb
insb
add
and
aaa
mov
mov
shlb
mov
cmp
cmpsl
mov
rolb
adc
in
pop
arpl
mov
add
sub
push
cmp
lret
jnp
test
inc
fisttpll
jge
pop
sbb
test
outsb
and
or
aad
and
dec
arpl
jmp
adc
sbb
lods
cmpsb
xorl
push
jg
mov
or
out
imulb
xlat
rcl
aad
ljmp
scas
inc
sbb
sub
mov
dec
imul
das
gs
not
mov
mov
add
arpl
push
and
pop
jecxz
and
sbb
js
cmp
nop
mov
adc
mov
push
mov
add
or
out
stos
sub
fnsave
pop
movsb
jns
inc
addr16
cs
std
pusha
push
mov
jbe
lods
jl
in
xor
push
jle
adcb
add
data16
dec
in
inc
sahf
adc
daa
ds
cmp
imul
out
std
mov
btr
int3
dec
mov
les
aam
mov
push
dec
mov
mov
scas
adc
push
cltd
inc
xlat
pop
sbb
dec
push
jmp
lds
arpl
popf
cld
add
mov
inc
mov
aam
movsl
inc
mov
or
push
daa
dec
addr16
mov
negl
fsubs
push
mov
pusha
sub
pushf
scas
data16
sbb
cli
or
xchg
ret
dec
lock
and
cmp
push
test
push
jno
fsubs
lock
add
fsubl
and
pushf
aam
fisubs
loopne
jl
mov
cmp
inc
xlat
stc
jecxz
stos
out
sbb
xchg
int
add
std
jp
jo
mov
add
in
jmp
xor
and
aam
xlat
push
in
mov
and
or
shrb
add
hlt
std
pop
ret
jnp
pusha
test
loopne
adc
add
mov
jbe
add
movsb
push
jp
mov
orb
inc
roll
xchg
lret
inc
push
add
dec
stc
pop
je
popa
notb
inc
lea
xlat
xor
and
inc
dec
and
inc
push
ljmp
jb
lret
leave
lods
xlat
stc
adc
jge
stos
pop
sbb
mov
fstl
mov
jae
movb
jecxz
pop
add
jp
adc
or
mov
insl
data16
daa
jecxz
dec
xchg
mov
ficomps
aam
rcr
inc
xchg
cltd
sbb
adc
aam
cmp
add
jo
mov
repz
adc
mov
sarl
icebp
xlat
insl
mov
lock
mov
add
push
imul
jae
sbb
cli
sti
jbe
call
loopne
and
inc
scas
sti
daa
sbb
lahf
pop
cmp
pop
pop
pop
pop
cmp
testb
pop
dec
cwtl
popa
or
adc
mov
out
in
mov
movsl
add
adc
push
sbb
mov
in
std
push
inc
mov
cli
orb
jb
addb
lods
jg
pusha
pushf
test
pushf
int
add
xor
adc
test
jge
add
sbb
jne
mov
cmp
mov
push
cld
arpl
mov
push
insl
push
sbb
lret
dec
xchg
pop
inc
test
stos
cmpsl
xor
pop
push
loopne
fndisi(8087
and
mov
xchg
push
lcall
xchg
pop
add
xor
jb
dec
push
sbb
mov
or
outsb
xor
push
loop
adc
push
ret
pusha
inc
jo
jmp
aam
pop
add
int3
out
xor
roll
sti
aam
cld
xor
pushf
or
js
pop
stos
out
push
push
mov
push
into
or
mov
inc
and
pushf
sbb
frstor
or
push
cmp
or
mov
lods
xchg
hlt
bound
fs
xor
push
testl
testb
pop
sti
testl
mov
mov
es
mov
xchg
pusha
pusha
adc
lahf
add
pop
dec
cld
pop
testb
cmpsb
dec
add
xchg
mov
dec
mov
rolb
jle
mov
push
jecxz
add
and
inc
jno
push
aad
add
rcrl
jmp
or
and
lods
dec
test
jmp
lret
mov
lea
or
cmc
out
pop
or
cli
aad
js
js
imul
aam
enter
sub
mov
jb
lahf
dec
add
mov
fwait
ret
dec
sub
clc
shlb
inc
popf
and
jbe
loopne
fnsave
xchg
xlat
cmp
gs
xchg
es
push
xchg
shr
aad
mov
adc
out
pop
cmpsb
mov
push
mov
jmp
add
jo
adc
test
aam
fs
fs
mov
out
or
xchg
cwtl
xor
or
adc
push
bound
xchg
pop
xchg
mov
and
es
cmpsb
ljmp
fcomip
movsl
pushf
mov
inc
fimuls
or
in
fld
and
jmp
jns
xchg
cmpb
mov
aad
and
push
clc
mov
into
fs
rcll
ja
shl
js
mov
ljmp
xchg
aam
cmpsb
xchg
scas
and
xchg
and
negl
stc
inc
insl
add
sbb
xchg
inc
xor
fbstp
and
popa
hlt
cmc
aam
sub
jo
sub
ja
and
lahf
stos
test
gs
add
scas
leave
mov
sub
add
loopne
flds
cli
scas
rcrb
or
outsb
push
aam
mov
out
cmp
jbe
push
mov
fmuls
add
cmp
jl
rorl
leave
xor
movsl
rcl
xchg
mov
or
pop
sbb
ret
add
ret
ja
jae
push
pop
mov
std
dec
xchg
popa
xchg
js
xor
jp
pop
lods
test
xchg
add
test
jo
push
jge
mov
cltd
nop
inc
dec
mov
cmp
aam
xor
dec
xor
cs
aam
sbb
mov
jl
ss
add
enter
sub
push
hlt
lret
xchg
testb
xor
lcall
hlt
or
iret
adc
xchg
hlt
sub
jae
jns
push
jbe
fwait
pusha
sti
leave
lret
out
aam
es
xchg
jge
and
mov
sbb
cwtl
xchg
pop
add
andl
mov
mov
or
adc
fbstp
add
jle
clc
js
cmp
xchg
sub
std
mov
test
outsb
dec
in
jmp
jo
sbb
mov
xor
roll
dec
stc
pop
pop
adc
lods
gs
mov
mov
mov
cmp
sbb
out
sub
mov
xchg
ret
loopne
jbe
sub
push
or
stos
lods
shlb
lock
adc
in
sub
sub
cld
dec
sbb
inc
dec
aad
lret
cli
stc
stos
scas
sub
mull
leave
pusha
adc
out
inc
aad
sahf
lret
daa
mov
jne
pop
int
loop
cmp
loope
inc
imul
mov
popa
push
mov
clc
in
js
loopne
xchg
push
ss
lret
clc
sbbb
pusha
popa
lcall
pop
jnp
stos
sub
es
rorl
std
cmc
js
fidivrs
pop
pop
pop
mov
inc
push
aad
and
xchg
push
inc
fidivs
sub
xor
push
inc
je
pop
mov
test
enter
xor
add
pop
cmp
fs
push
prefetchnta
mov
aam
lods
test
sbb
mov
push
mov
mov
jle
xchg
icebp
std
add
testl
popl
inc
push
push
es
popf
pop
jle
dec
jb
iret
js
stc
in
loopne
and
pop
inc
pop
mov
mov
out
in
sbb
fs
insl
mov
into
xchg
xor
pop
ja
push
in
push
pop
pop
mov
loope
lahf
sti
xchg
add
sub
jmp
shll
popf
pop
adc
jmp
jge
ret
sub
inc
jl
notb
cmpsl
cltd
clc
popf
mov
add
mov
loope
adc
xchg
cwtl
and
xchg
std
mov
pusha
sarl
dec
jge
push
jle
pop
add
outsl
subl
testb
push
sbb
test
mov
mov
cwtl
push
mov
lret
cs
and
xor
ret
movsb
pop
out
push
xor
cli
test
dec
push
mov
in
pop
add
scas
imul
popf
data16
int
sbb
aam
mov
pusha
mov
mov
rcr
movsb
leave
mov
repnz
mov
mov
cmp
fsub
fstps
adc
pop
and
fcompl
mov
mov
sub
sbb
cmp
fst
pop
mov
sbb
and
fldl
sub
mov
dec
pop
mov
daa
pop
int
sbb
jp
rclb
movsl
inc
inc
inc
repz
mov
lahf
dec
cld
and
sbb
mov
inc
mov
xchg
xor
push
inc
add
pop
jo
push
sahf
xchg
sub
loop
adcl
jne
mov
add
add
std
lods
repz
pop
dec
bound
imul
aad
and
mov
jp
dec
out
popa
outsl
pop
daa
les
mov
outsl
pcmpgtw
bound
push
andl
bswap
imul
inc
icebp
sub
jo
adc
ss
or
aam
rcrl
or
and
and
mov
cmp
test
fidivrs
mov
insl
sub
mov
mov
pushf
jae
adc
daa
pop
popf
adc
xor
aam
and
rorl
lods
pop
or
mov
lret
add
aam
mov
cmc
loop
add
cmpsb
pop
aaa
inc
in
inc
push
add
inc
add
aam
cmpsb
imul
mov
clc
cmp
mov
dec
cld
adc
sbb
inc
or
mov
or
add
mov
fnstsw
mov
cmp
movsl
adc
popf
add
inc
lock
push
in
neg
add
and
sbb
adc
sarb
sbb
jge
jecxz
adc
and
dec
ja
mov
rcrl
xor
and
and
pusha
hlt
cmp
cwtl
stc
adc
mov
in
mov
mov
inc
xchg
cmp
xchg
xlat
ret
mov
pop
push
int
jl
test
xor
and
mov
pusha
adc
xchg
popa
adc
add
in
ret
fld1
hlt
mov
aam
sbb
sbb
mov
lret
and
mov
push
mov
lods
nop
inc
xlat
xchg
or
add
jl
test
adc
mov
das
sub
ret
jle
sub
adc
xor
rolb
int
add
lret
jge
mov
mov
xchg
cmc
sahf
xchg
fisttps
mov
sub
imul
jmp
add
movsb
pop
inc
xchg
sub
loope
adc
pop
cmp
inc
xor
mov
push
mov
je
call
cli
dec
fcmove
xchg
pop
push
and
popa
jge
dec
add
sbb
add
mov
mov
fstps
test
xlat
push
sahf
outsb
push
adc
fisttpll
scas
outsb
mov
push
add
data16
push
mov
sub
adc
loopne
call
int
lds
cmp
mov
lds
rcll
mov
cmpb
push
sbb
pop
aaa
or
ja
testl
daa
xor
and
mov
test
hlt
lcall
xchg
fdivrl
push
mov
add
xchg
je
xchg
aad
or
call
and
ret
sahf
mov
in
mov
test
push
pop
push
ret
dec
xchg
push
aam
ljmp
mov
icebp
inc
aas
xchg
cltd
dec
add
cld
jb
fldt
rcrb
lret
lea
jg
jae
or
sbb
lds
jge
dec
stos
mov
adc
pushw
push
mov
pop
cmc
aas
jne
stos
xlat
xor
stc
add
xor
cmp
push
sbb
lahf
iret
sbb
inc
ret
or
cmpsl
sti
adc
testl
pusha
mov
std
xchg
push
xlat
jae
pop
das
inc
push
cmp
lahf
add
pop
movsl
and
mov
push
or
add
add
in
enter
mov
jb
data16
cmpsl
dec
test
les
push
lds
pop
push
add
jg
movsl
imul
imul
das
int
sbb
jmp
aas
in
mov
sbb
lret
sbb
addb
cmp
sub
call
aad
push
scas
in
stos
or
sub
push
cmc
sbb
lahf
loope
push
mov
in
in
xchg
hlt
aam
jl
cltd
aad
jl
jne
cmp
pop
mov
mov
aas
sub
mov
xchg
pop
dec
cmp
add
out
and
inc
int
lahf
clc
lock
pusha
rorl
clc
aad
aad
mov
mov
mov
xor
sti
fldcw
push
push
push
mov
cmp
lcall
fs
lcall
popf
aam
fcmovb
imul
mov
test
mov
add
sbb
push
fildl
addr16
xchg
imul
in
std
push
daa
gs
inc
and
sub
sbb
sub
aam
pop
mov
ljmp
xor
popf
lds
fistpl
mov
push
jecxz
mov
jp
push
sub
push
rolb
out
mov
shlb
in
pop
sub
sub
insl
fnstcw
fimuls
xchg
rcll
fisubs
outsl
nop
cmp
clc
clc
pop
dec
mov
out
push
je
adc
mov
inc
movsb
pop
rorl
jecxz
arpl
jmp
mov
ret
stc
pop
mov
lret
lods
rorl
ret
jl
mov
xchg
dec
and
xor
mov
pop
fldl
pop
testl
push
push
rorb
mov
push
iret
push
inc
iret
adc
jge
lock
fwait
out
mov
jo
xor
pop
outsl
mov
sub
adc
inc
movsb
add
mov
mov
rcll
dec
rcrb
popf
out
adc
movsb
dec
pop
je
stos
hlt
mov
fcmovb
or
mov
mov
xchg
add
inc
push
enter
jecxz
decl
fsub
aad
mov
jle
mov
pop
mov
faddp
aam
icebp
addr16
rcrl
mov
and
lret
or
loopne
mov
mov
cmpsb
rolb
mov
pusha
jne
pusha
lret
mov
bound
xchg
pop
adc
adc
mov
fistps
loope
xor
out
xchg
mov
aam
into
aad
push
movsb
adc
xor
inc
fcmovnu
pop
or
lds
xlat
in
mov
xchg
pusha
pop
inc
pop
sbb
xlat
clc
hlt
jge
add
mov
cli
push
int3
xor
or
jo
sbbw
mov
mov
push
data16
xlat
pop
ficomps
jbe
or
cs
fnstsw
mov
cs
add
je
call
pop
test
cmpsb
pusha
testl
and
jae
mov
push
pop
pop
xor
sbb
insb
xchg
test
mov
inc
bnd
cmp
push
sti
adc
or
add
ja
fwait
loope
xor
sub
push
pop
mov
in
xchg
fimuls
jmp
mov
or
test
cmpb
bound
and
xchg
andl
and
aad
jo
pop
cmpsl
add
mov
jne
lret
jae
movsb
andl
adc
mov
cmc
stos
rsm
pop
leave
add
aas
arpl
jmp
and
fcmovnbe
pop
xchg
int
sbb
jno
mov
cmpsl
dec
mov
sub
stos
in
and
mov
mov
xchg
push
mov
cmp
mov
cli
in
iret
fdivrs
ljmp
test
lret
xchg
pushl
loop
pop
jno
adc
jo
sub
sbb
xchg
inc
insl
push
mov
mov
jmp
xor
repnz
ds
add
pop
push
xchg
icebp
mov
mov
imul
cmp
mov
dec
stos
and
and
enter
xchg
jnp
paddw
pop
out
lret
or
lds
xchg
popf
inc
imul
ficomps
and
mov
out
repz
fistpl
cmp
add
in
cmp
xchg
xchg
dec
mov
mov
aam
dec
out
xor
cld
lock
test
xor
cli
scas
add
push
pop
xchg
rorl
cli
pop
pop
aaa
out
imul
das
imul
xchg
fcompl
add
mov
push
mov
rcl
mov
aam
insb
loop
push
cmc
in
mov
jmp
add
and
loopne
sub
or
movsb
cmp
icebp
mov
movsl
hlt
orb
out
enter
fisubs
xchg
out
lods
ss
add
inc
jno
inc
in
pusha
pop
cmp
nop
cmp
ret
dec
lahf
cmc
stos
mov
fisttpll
aas
idiv
push
add
lret
or
bound
jbe
pop
shll
cmp
and
movsb
push
addr16
sub
aam
add
adc
add
xor
mull
mov
das
testb
sahf
clc
arpl
cmp
mov
and
stc
jle
push
jne
call
clc
pop
mov
cld
int
cwtl
add
aam
popf
pop
aas
sbb
push
adc
mov
popa
push
push
and
push
mov
lcall
cmp
or
inc
aam
sbb
stos
mov
jecxz
xor
subb
add
xchg
xor
idivl
jno
pop
sub
push
jns
scas
mov
test
fwait
cmp
jge
adc
int
pop
leave
incl
mov
jo
sub
repnz
mov
dec
in
sahf
add
mov
rorl
bnd
push
mov
iret
int3
mov
mov
add
les
dec
jecxz
cwtl
imul
addr16
add
pop
sbb
fbld
and
push
cmpsl
jbe
fbstp
les
and
dec
leave
add
add
inc
xor
sarb
mov
sbb
jl
mov
aad
mov
cli
jmp
push
aad
aam
mov
pop
loope
push
inc
outsb
decb
aam
stc
clc
loope
daa
mov
inc
in
lods
fstl
jl
out
cmp
stc
push
add
ss
sbb
leave
jnp
mov
pop
mov
xchg
sar
roll
outsl
pop
out
and
mov
or
ret
movsl
ret
jbe
test
sub
dec
orl
das
xchg
xor
dec
dec
mov
lock
inc
xchg
and
outsb
in
push
push
les
lods
add
cmp
mov
cmp
mov
loopne
add
fldl
push
mov
jbe
dec
jne
rcr
push
ljmp
std
xchg
push
negb
mov
mov
mov
fistps
and
int
lods
inc
int3
pusha
push
mov
sub
aam
ds
hlt
jae
test
sahf
mov
loopne
or
in
lret
int
and
int3
xor
lret
jg
aad
mov
jnp
mov
test
test
test
xor
pop
imul
mov
inc
rcrl
adc
imul
aaa
sarb
repnz
out
dec
pop
add
push
sub
nop
lods
lods
xchg
push
or
dec
push
arpl
pop
or
push
inc
fnsave
shl
push
fists
arpl
pop
mov
xor
xchg
sbb
pop
add
inc
aam
sti
mov
iret
es
cmp
pop
popa
lock
incl
imul
or
pop
pop
mov
bnd
push
adc
roll
add
cmc
repnz
add
rcrb
sub
leave
repnz
dec
mov
je
notl
add
cmp
sti
andb
ss
arpl
push
mov
push
or
mov
ja
lock
sbbb
add
fbld
ljmp
sahf
push
jbe
imul
mov
inc
jo
and
push
add
lret
jp
test
dec
inc
popa
dec
popa
btr
lret
adc
cmpb
inc
jl
fdivrs
adc
mov
jmp
movsb
and
in
loop
cmp
loop
pop
sbb
inc
ja
jns
call
daa
mov
sub
xor
jnp
adc
insl
mov
inc
jecxz
add
cld
xlat
sub
push
loopne
aaa
push
push
xor
sbb
aam
lcall
cmp
dec
mov
mov
or
add
mov
sub
pop
inc
sub
mov
shl
jmp
test
sub
pop
test
nop
imul
sahf
sbb
into
mov
test
pop
mov
xor
pop
out
add
mov
cmp
outsb
mov
fstps
in
mov
dec
dec
push
pop
adc
xchg
push
pop
loope
cmpb
aad
push
mov
inc
mov
or
mov
stos
movsl
pushf
pop
in
push
sbb
mov
jns
add
mov
dec
cmp
loop
jo
in
inc
and
pop
xor
add
inc
add
mov
loope
jg
enter
or
adc
mov
cmp
out
sub
xchg
leave
and
lret
fsubl
cmpsl
xor
gs
rcrb
jae
das
or
call
pop
outsb
in
icebp
jecxz
je
sbb
mov
paddw
pop
out
aad
jbe
cmp
call
adc
mov
or
shll
cmp
push
iret
repz
adc
adc
and
pop
sub
inc
pop
aad
push
push
int
add
hlt
sbb
das
xchg
test
ss
daa
xchg
idivl
das
inc
adc
test
mov
ljmp
loop
mov
loope
cmpsb
leave
or
mov
jnp
xchg
aad
push
sahf
lea
add
lods
js
imul
jg
scas
loop
hlt
test
adc
mov
jnp
mov
dec
into
ret
mov
loop
push
aam
pop
in
decb
sbb
stos
xor
sbb
outsb
or
push
inc
gs
cld
pop
imull
inc
fisttpl
out
pop
sti
inc
shlb
mov
es
dec
test
sub
add
fucomp
cs
sbb
in
push
mov
push
mov
insb
push
aaa
and
and
jg
cmpsl
add
dec
mov
push
in
xchg
fsubrs
cmp
xchg
testl
or
cli
xchg
addl
sbb
pop
push
inc
mov
jne
or
mov
mov
or
push
pusha
dec
and
and
sub
xchg
sbb
sbbb
in
push
ds
lret
scas
dec
aad
out
testb
sti
mov
cmpsb
loopne
add
aam
xchg
mov
pop
mov
cmp
imulb
xchg
daa
inc
xor
sub
sysret
and
sbb
cmc
sub
das
mov
lcall
xor
out
into
ficoms
add
or
pop
cmp
bound
ja
dec
push
pop
dec
or
jge
jecxz
imul
addl
pop
pop
xchg
fcmove
add
xor
jmp
mov
mov
roll
inc
sti
push
add
or
test
sbb
push
movsb
call
jne
sbb
pusha
insb
cmp
clc
push
push
add
or
pop
push
and
adc
xlat
adc
rorb
sbb
jmp
mov
scas
xor
cld
cvtpi2ps
jmp
outsl
mov
fsts
lahf
sub
rclb
loope
aad
pop
movsl
xchg
pusha
cmpsb
mov
and
dec
mov
stc
dec
stos
mov
push
pop
xor
mov
ss
pop
sub
xor
fs
enter
push
adc
int3
stos
jne
aam
into
decl
pop
pop
enter
xchg
cltd
xchg
mov
add
int3
subl
inc
cmpsl
cmp
sahf
lods
push
push
xor
in
xchg
ret
movsl
push
out
daa
mov
dec
sub
inc
mov
rorl
cmc
sbb
cld
adc
dec
inc
jns
add
jae
jmp
arpl
divb
add
pop
aad
loope
lea
into
jge
andl
roll
pushf
jo
aam
or
dec
jnp
adc
pushf
mov
pusha
bound
mov
hlt
icebp
add
dec
stos
clc
lea
aaa
push
mov
inc
pop
fstl
and
clc
ljmp
das
test
mov
or
mov
imul
mov
sub
xchg
pop
mov
mov
sbb
movsb
out
aad
or
adc
test
int3
ljmp
mov
insl
pop
rcrl
xor
and
xlat
or
fiaddl
in
xchg
mov
movsb
insl
add
add
mov
mov
mov
rorl
xchg
pop
hlt
ret
mov
ret
loope
mov
jbe
cmp
movsb
xor
xor
mov
sbb
sbb
addl
shl
jae
inc
imul
std
lea
push
ret
pop
enter
gs
pop
jnp
testb
aam
js
or
xlat
in
mov
jmp
push
mov
lds
pushf
das
out
dec
popa
outsl
pushl
or
mov
add
inc
jns
mov
push
jne
jae
cltd
xlat
mov
daa
scas
aad
push
arpl
mov
repnz
cmc
fildll
stc
sti
inc
xchg
iret
xlat
enter
inc
ret
in
out
aam
adc
and
test
in
into
adc
adc
jmp
inc
sbb
stos
or
inc
imul
cmp
clc
mov
cld
and
cmp
int3
test
repnz
mov
sti
xor
movsb
adc
mov
and
xor
stos
and
mov
push
cltd
scas
dec
stc
cmpsb
aas
das
dec
push
pop
cld
adc
aad
xchg
mov
aam
aad
add
or
hlt
and
mov
cs
nop
outsl
sbb
and
lock
dec
xor
mov
sbb
add
rclb
xchg
inc
add
mov
sbb
cs
test
sbb
aam
ljmp
mov
fisubrl
daa
jp
jnp
jecxz
aad
scas
inc
jae
addr16
ja
pusha
pop
std
jmp
xchg
xchg
fisubl
xchg
fwait
test
pop
add
push
jae
aam
int3
jne
jg
mov
orb
cwtl
add
lcall
or
adc
push
aad
jbe
pop
vmread
iret
mov
je
addl
out
out
cmp
dec
lahf
adc
icebp
lds
push
mov
xor
mov
pop
mov
dec
lcall
lahf
ret
push
mov
xor
mov
mov
xchg
xchg
mov
enter
dec
repnz
icebp
cmpb
clc
sbb
pop
arpl
aad
pop
lahf
dec
cwtl
xor
mov
cmp
mov
fst
and
xchg
mov
sub
adc
add
xchg
clc
int3
adc
pusha
popa
cltd
loop
add
pop
mov
inc
mov
jmp
and
sbb
add
outsl
ljmp
sbb
add
xor
push
mov
lods
repz
fdivrp
aad
mov
mov
sarb
inc
iret
shlb
mov
jmp
dec
mov
dec
xchg
push
sbb
pusha
adc
scas
or
fldcw
push
dec
pusha
stos
cwtl
dec
fstpt
ss
mov
arpl
imul
xchg
add
or
or
and
lahf
xor
mov
xchg
add
xlat
jb
sub
aam
mov
ds
fdivl
pop
dec
add
jmp
lods
mov
in
inc
sarb
push
loop
stc
fimull
aad
push
push
or
pop
popa
ret
bnd
xlat
aad
out
clc
ja
pop
mov
add
add
mov
dec
rolb
fadd
mov
hlt
iret
add
movsl
push
pop
mov
jbe
test
out
lcall
adc
mov
jg
or
jb
cmp
data16
adc
jmp
daa
add
xchg
adc
js
rcrl
or
into
std
mov
cmpsb
movsb
or
mov
call
movsl
aad
in
sub
dec
or
cmc
imul
jle
sub
mov
add
subb
dec
pushf
jl
lahf
dec
arpl
xor
add
adc
add
insl
inc
xor
adcb
pop
mov
mov
shr
out
dec
sub
enter
sbb
enter
pushf
add
into
insl
sbb
sbb
sub
and
xor
popf
imul
sub
cmp
out
xchg
push
repnz
adcb
mov
lahf
movsb
push
dec
movsl
dec
sbb
push
jne
pop
fisttpl
mov
stos
sub
ret
addr16
add
cs
jge
xlat
outsb
stos
push
dec
mov
nop
add
cltd
sbb
cmc
stos
pop
imul
out
dec
fwait
xor
mov
xor
mov
and
sbb
add
faddl
pop
mov
nop
dec
stos
push
and
in
push
addr16
cltd
cmp
stos
inc
mov
jl
dec
dec
repz
pusha
adc
les
jnp
aam
xor
pop
idivl
enter
and
movsb
adc
sbb
lods
ds
mov
bound
stos
ret
xor
mov
fidivrs
les
dec
jns
mov
fdivrl
or
cmp
dec
push
mov
mov
mov
mov
movsb
pusha
imul
cmpsl
sbb
sbb
andb
mov
sub
cmp
cltd
js
sbb
jmp
xchg
sub
ret
mov
dec
add
mov
clc
js
testl
jl
xor
dec
push
insl
push
jl
scas
lret
in
mov
lods
mov
dec
jbe
lock
mov
inc
dec
xor
push
shr
cmc
rcrb
pop
scas
sub
lds
adc
mov
xchg
jp
imul
sbb
push
adc
sub
jg
pusha
dec
pop
sbb
fidivs
dec
aad
adc
popf
cld
inc
add
sbb
push
dec
and
adc
jb
pop
mov
and
pop
lret
mov
fcompl
add
sbb
mov
sbb
cs
cld
mov
pop
pop
lock
pop
inc
dec
ja
jle
in
adc
xchg
call
jle
jg
adc
iret
stc
aam
pop
xchg
push
cmpsl
bound
jno
pusha
ja
in
push
iret
aam
jns
ret
mov
or
inc
jne
pusha
sub
mov
mov
mov
adc
adc
lock
test
enter
outsl
and
mov
je
mov
pop
cmpl
sbb
cld
fucomi
aam
mov
lods
aam
mov
sub
pusha
jae
mov
outsl
dec
ficomps
or
jge
inc
jno
jl
add
out
add
aad
jmp
and
lods
cmpsb
add
aam
std
dec
xchg
movsl
jmp
cs
mov
sti
inc
aam
rorb
test
ljmp
mov
or
sbb
lea
adc
xchg
cmp
arpl
cs
bound
movb
nop
push
and
aam
inc
test
insl
mov
int3
rcr
lret
scas
sub
mov
daa
negl
pop
addr16
jp
push
jbe
aam
std
pop
cmp
cmpsl
cmp
adcb
addr16
ljmp
and
xchg
fcmovbe
mov
cmp
lcall
mov
fdivrp
cmp
insl
jb
lret
sub
or
inc
js
inc
rcrl
jo
dec
call
cmc
add
or
xchg
mov
add
inc
neg
lods
adc
jle
aam
push
xchg
cmp
jno
adc
mov
test
xor
repz
or
mov
in
in
add
daa
rcl
pusha
insl
xlat
lahf
mov
scas
xchg
jo
cwtl
adc
insb
fisubrl
inc
pop
jl
xor
push
movsl
add
jp
and
mov
or
add
xchg
lret
mov
mov
ja
fwait
xchg
lods
jg
push
jl
fisttpl
mov
jle
mov
fisubl
cmp
xchg
mov
je
mov
sbb
insb
or
xchg
fxch
xchg
lahf
sub
push
fisttpl
xor
and
xchg
mov
stos
mov
aaa
pop
pop
aam
es
lock
mov
cmp
push
lea
clc
pop
aaa
fbld
xchg
filds
jl
or
inc
xor
int
call
loope
push
cmp
les
add
mov
and
js
fisubs
pushf
in
inc
jnp
mov
gs
pop
mov
fs
mov
loope
and
lret
mov
mov
aad
mov
lock
mov
or
push
sbb
movl
pop
adc
jge
mov
out
add
xor
stc
hlt
cwtl
test
in
loop
into
ljmp
mov
add
test
aas
out
rcll
push
xlat
out
mov
add
mov
mov
adc
movsl
aad
mov
fs
roll
cmp
add
js
les
cmp
mov
mov
fadd
insl
test
pop
inc
push
add
aad
aaa
lods
loope
popf
icebp
addb
jg
jbe
xor
or
std
xchg
mov
sbb
jns
pop
xchg
or
dec
add
clc
in
sub
and
mov
inc
cwtl
pop
add
dec
rorb
call
sub
data16
fildll
sbb
enter
mov
lds
in
aad
push
push
push
test
pop
mov
push
xor
rcrb
and
clc
or
push
xchg
daa
aad
sbb
add
cmp
dec
push
sbb
icebp
popf
ret
in
cmpsb
fdiv
mov
add
bound
into
inc
push
movsl
push
pop
movsb
xchg
and
out
insl
test
into
jae
mov
push
call
sbb
push
cwtl
cwtl
mov
arpl
mov
fldcw
xor
sub
test
fimuls
testb
pop
shl
pop
imul
testl
mov
fsubrs
push
cli
mov
xor
xchg
aas
loop
jmp
mov
pop
jne
add
arpl
cwtl
lock
or
test
fistps
les
out
mov
xor
xor
pushf
outsb
cmp
enter
fldl
or
mov
sbb
jb
jno
sbb
repz
and
gs
push
arpl
add
ret
xchg
and
mov
mov
add
mov
int3
pusha
jae
imulb
nop
or
stos
aad
jecxz
sub
leave
aaa
or
mov
jle
sbb
out
mov
xor
adc
add
in
add
stos
jns
cmp
mov
out
mov
in
mov
neg
jb
fs
inc
jge
adc
dec
jp
mov
aad
or
lret
das
xlat
pop
js
pusha
add
push
add
inc
fstpt
inc
adc
adc
xor
aam
sbb
ficomps
test
push
idiv
out
jl
jg
scas
add
xchg
lods
pop
xor
mov
insl
adc
call
jge
mov
call
inc
mov
add
push
or
scas
js
pop
pop
mov
mov
lds
fs
lret
imul
in
cmp
mov
dec
rol
jae
movsl
add
adc
inc
mov
shrd
inc
and
sbb
xor
cmc
pop
repz
stos
aas
xchg
aad
ficompl
xchg
mov
mov
jge
sbb
test
xor
imul
or
pusha
sbb
inc
sbb
sub
jns
ss
daa
les
lods
push
ds
mov
mov
lahf
outsb
shlb
test
daa
mov
dec
testl
jmp
lret
or
mov
pop
mov
mov
test
xchg
push
es
or
xchg
jp
mov
pop
mov
mov
sbbl
mov
int3
rcl
push
pop
push
cmpsl
mov
leave
lock
pop
push
adc
into
xor
push
mov
dec
and
dec
pop
mov
into
js
lods
rclb
pop
cmpsl
mov
push
mov
fs
das
add
rorb
jae
ss
jo
cmp
out
add
sub
imul
dec
mov
sbb
adc
pop
aad
or
ret
pop
add
rcll
xchg
xchg
test
mov
rcrl
mov
xorb
jno
mov
lods
fisttpl
pop
xor
dec
cli
dec
cltd
mov
into
cmp
xlat
test
aam
adc
lahf
frstor
pop
rolb
dec
jge
xchg
mov
mov
xchg
cld
xor
cli
leave
add
pop
in
leave
nop
push
stc
inc
sbb
add
pop
sbb
jl
pop
inc
repz
cmp
jle
inc
adc
add
inc
outsl
xor
and
lcall
sarb
add
sub
leave
and
fisttps
mov
hlt
dec
aam
negb
and
push
lea
in
mov
mov
sub
dec
lea
mov
push
or
cli
into
lcall
mov
jmp
stos
cmpb
push
sbb
loop
pop
mov
ret
popf
xor
sbb
notb
mov
iret
push
cmp
insl
jns
sub
jmp
sub
fistpl
jne
jo
inc
shrb
js
or
mov
or
insb
ja
dec
js
sub
ljmp
xchg
mov
fs
sbb
push
nop
lock
incb
pop
stos
dec
clc
inc
fildll
aad
jg
jge
xchg
dec
aad
fwait
out
repz
data16
add
mov
and
jae
cmp
add
hlt
jmp
inc
daa
fnsave
push
push
pop
out
ja
dec
xor
rcrl
jg
or
mov
mov
or
jecxz
mov
or
pop
jne
jo
mov
es
addb
jb
pop
gs
hlt
test
mov
mov
faddl
cmpsl
or
dec
pop
stc
test
pop
jo
aad
outsl
lahf
push
jo
mov
adc
das
add
add
sbb
cmp
mov
mov
push
mov
jno
mov
mov
and
push
je
pusha
icebp
repz
not
push
adc
aad
jg
mov
xorb
in
push
dec
sub
push
cmp
insl
jecxz
or
dec
ja
sbb
and
xchg
pusha
xchg
stos
dec
jp
sub
dec
mov
aam
pop
nop
pop
sub
push
pop
mov
into
mov
cmp
inc
sub
in
cwtl
xchg
jle
ss
pop
jns
xor
add
mov
roll
inc
add
mov
ret
ret
leave
mov
lret
mov
push
out
adc
mov
jecxz
popf
add
sbb
jno
fidivs
je
cltd
pushf
jg
pop
push
push
sbbl
insb
adc
mov
mov
push
lods
jg
cwtl
jcxz
lahf
inc
ret
inc
pop
cltd
mov
mov
mov
xor
lret
js
mov
mov
xor
jge
lahf
addb
lcall
dec
insl
push
rol
pop
mov
mov
add
fisubs
mov
loop
js
dec
test
rcrb
gs
jg
pushf
lods
in
lret
dec
pop
ljmp
inc
sub
insb
fdiv
push
add
adc
ljmp
jecxz
mov
xlat
pop
addr16
and
mov
jo
push
call
out
pop
mov
pop
aam
mov
cld
aad
or
xor
sbb
sub
aad
push
xor
lcall
sbb
rcll
mov
mov
push
int3
pop
and
test
jle
xorl
sub
test
sahf
mov
call
mov
pop
dec
and
cmp
pusha
pop
dec
imul
outsb
pop
and
add
dec
mov
mov
lcall
dec
fs
mov
push
leave
pop
xchg
sbb
in
mov
mov
cld
xor
jecxz
pusha
cltd
movb
data16
add
jecxz
mov
pop
fimuls
jge
lcall
stos
pop
mov
out
and
popa
jg
mov
sahf
sbb
cmpb
mov
inc
push
sbb
cmp
sbb
arpl
pop
ffreep
push
test
aad
jae
xorb
les
imul
pop
mov
add
mov
pop
and
jb
ja
fldl
dec
out
adc
push
and
xchg
js
and
fcompl
adc
pop
mov
add
push
sbbl
aad
push
nop
and
xor
jmp
add
out
lock
stos
push
pop
lcall
imul
mov
push
push
add
repz
xchg
addr16
jmp
stos
xlat
push
lock
xchg
mov
lahf
loope
xor
test
inc
push
aaa
mov
pop
leave
adc
stos
aam
ja
push
xchg
or
lahf
andb
mov
insl
pop
nop
fwait
xlat
arpl
cmp
fcmovbe
inc
clc
dec
mov
jbe
lods
lds
and
fs
adc
aam
and
pop
or
cmpsl
pop
js
mov
rcr
mov
jo
sub
or
push
pop
test
test
sbb
push
daa
rorl
rcll
cmp
xor
movsb
daa
cmp
fs
push
mov
mov
xchg
cld
adc
insl
add
xchg
sti
inc
sub
pop
rorl
inc
js
dec
repz
xchg
lock
push
xchg
pushl
add
stos
pop
inc
into
mov
nop
xlat
lock
push
jno
dec
add
mov
cld
insl
xor
out
pusha
or
jl
mov
insl
pop
enter
pop
add
mov
add
int
xchg
out
push
stos
lret
aam
lcall
rclb
ret
or
dec
pop
dec
mov
jecxz
pop
test
jecxz
jnp
cmp
fcoml
add
test
repnz
ret
jecxz
sbb
sbb
sti
xchg
test
mov
aas
ds
push
add
add
mov
icebp
pusha
xchg
jmp
popf
fsubrl
jmp
xchg
push
push
jns
sbb
mov
popa
out
test
push
pop
pcmpgtd
cwtl
cld
sbb
sbbl
test
dec
sbb
pop
sbb
lea
int
ret
mov
or
lret
aam
cmp
sub
add
and
jg
mov
mov
push
test
sub
imul
push
add
sbb
push
cli
mov
std
mov
xor
cmc
aam
shrb
adc
cmovnp
inc
sub
push
and
aam
aaa
fdivr
mov
hlt
int3
jns
test
pusha
inc
pop
push
sti
lret
icebp
aad
rcrl
ds
add
out
pop
adc
mov
dec
and
xchg
fcmove
mov
repnz
test
xor
cmpsb
sbb
dec
sub
jbe
addr16
sub
bound
scas
mov
lret
adc
aas
push
mov
pushf
fadds
push
stos
mov
lea
adc
jbe
insb
sarb
out
ja
fstpt
cmp
aam
scas
xchg
pop
fsubrs
or
rcl
sbb
cli
lock
push
push
jl
cltd
sub
lcall
sti
inc
stc
or
shll
rolb
jo
push
or
mov
cmp
dec
out
aad
or
pusha
repnz
movsl
mov
outsl
fcomps
jne
test
dec
movsb
pop
push
sbb
test
lods
adc
mov
adc
xor
jle
jo
cli
sbb
cli
rcr
jno
aas
xchg
das
adcb
sbb
nop
inc
pop
gs
stos
cmp
jo
pop
aam
aaa
lret
sbb
cmpsl
aam
xchg
movsl
mov
jecxz
out
pop
or
dec
dec
push
ret
xor
scas
mov
inc
int3
into
insl
test
mov
loop
shr
mov
fistps
gs
mov
test
mov
fs
clc
mov
ds
pop
push
inc
push
out
data16
out
dec
push
dec
or
adcb
push
dec
mov
adc
cmpsl
test
fsts
mov
test
vandps
push
xchg
ret
arpl
insb
cmp
out
popa
adc
add
sub
push
jmp
adc
lods
mov
jno
popa
adc
pop
loope
push
std
mov
adc
shrb
mov
or
cmc
cmc
stos
pop
xchg
sbb
ret
std
inc
aam
push
adc
imul
cmp
and
fcomp
dec
hlt
sbb
bound
mov
enter
mov
inc
mov
or
out
fbstp
sbb
leave
mov
mov
movl
fstpl
inc
mov
aad
fidivrs
dec
sub
out
stos
add
or
or
lock
in
add
ds
pop
pop
scas
or
sub
fiaddl
xchg
int3
push
xor
adc
xchg
push
gs
xor
add
xor
inc
sub
in
jg
sub
xchg
aam
repz
clc
pushl
pop
in
sbb
xchg
mov
addb
add
pop
sbb
mov
xor
jns
imul
and
sub
mov
push
call
xlat
ret
fdivs
dec
loopne
pop
push
sbb
imul
mov
loope
xlat
adc
icebp
les
clc
jle
mov
pop
inc
cld
ret
js
jno
insb
fnsave
mov
pop
lcall
add
cmp
movsl
fimull
xchg
mov
std
out
mov
xchg
int3
lahf
imul
shrl
ss
sbb
inc
cmp
mov
cltd
jns
je
cmp
fs
mov
mov
dec
mov
jo
add
mov
les
mov
add
stos
xchg
xchg
dec
xchg
lds
mov
push
enter
mov
xor
cmp
mov
dec
lcall
call
inc
loop
in
sti
rcrb
sbb
dec
mov
dec
add
mov
fstpl
mov
pop
mov
nop
sbb
mov
out
pusha
jmp
cs
insb
mov
xor
sub
int
mov
pop
mov
xlat
push
and
mov
rorl
stos
call
aad
mov
mov
stos
jge
rcrl
adc
int
adc
sbb
jns
inc
pop
pop
test
inc
in
mov
inc
sahf
testl
push
push
mov
inc
jb
pop
xlat
mov
in
fsts
mov
sbb
add
mov
outsl
pop
stos
adc
and
cli
jne
repnz
mov
dec
jb
sub
mov
adc
bound
cmp
mov
sbb
sub
dec
mov
loop
ret
add
daa
shl
inc
jne
inc
xchg
xor
test
pop
push
xchg
ret
popa
xor
out
sahf
movsl
cmp
xchg
stos
mov
cs
addr16
pop
jmp
jnp
lahf
mov
in
sti
lods
xor
sub
cmp
test
or
in
xchg
in
dec
xchg
xor
pop
dec
lods
cmp
out
cwtl
aam
ficoms
sub
popw
pop
out
or
inc
rolb
jns
arpl
or
lahf
sub
repz
es
mov
cwtl
mov
imul
cmpb
and
outsb
test
xor
pop
pop
pop
mov
mov
xchg
and
shrl
push
adc
add
jp
cs
cmp
cmp
addr16
add
sub
jmp
xchg
add
popf
jne
or
pop
gs
movsb
mov
dec
lods
xor
jb
add
inc
movsl
push
sub
stos
and
jecxz
push
insl
int3
aad
jl
mov
push
loopne
mov
mov
pop
in
mov
or
aaa
nop
cmc
pop
lds
sub
dec
xlat
and
sub
sbb
add
jle
adc
ds
jbe
and
and
repz
ds
rcrl
loope
xchg
dec
sub
icebp
pop
mov
pop
jno
mov
inc
mov
jecxz
sbb
jae
pop
pop
pop
lcall
test
sub
popa
out
jns
shr
pop
cmp
pop
insl
sti
hlt
ss
je
in
mov
jmp
cmpsl
xchg
cmp
and
mov
sahf
mov
repnz
xor
sbb
push
adc
decl
pop
mov
adcb
push
inc
mov
fwait
sti
test
add
mov
dec
outsl
rclb
pop
ss
bound
xor
in
mov
or
aad
cmp
jmp
mov
imul
in
ret
jp
pusha
cltd
mul
and
xor
fnstcw
add
out
scas
xchg
imulb
jnp
sbb
xor
add
lret
lcall
inc
mov
ja
jae
fistpll
sbb
mov
xchg
out
cmpsb
xor
mov
jbe
popa
ret
xor
add
test
dec
jge
ret
inc
and
lods
sbb
mov
ljmp
adc
or
mov
cmpb
jo
fsubrs
add
push
push
mov
xor
fsts
sbb
pop
inc
loope
dec
jl
push
je
or
jmp
mov
aas
xchg
xchg
cmpsl
mov
cmp
inc
fcoms
loop
cmp
jge
sarb
pop
loop
mov
movsb
mov
jnp
sbb
outsl
push
test
in
sbb
lock
ficompl
sbb
xor
lcall
lahf
btc
cmp
divl
dec
xchg
jae
or
mov
add
fstl
push
aas
gs
xchg
jl
scas
loop,pn
test
dec
mov
adc
mov
xorb
mov
faddl
ret
iret
pop
and
pusha
das
dec
rcrl
mov
mov
or
xchg
cmpsb
mov
mov
stc
or
popa
pushl
push
fcmovbe
ja
adcl
fs
cltd
push
mov
pop
add
xchg
jge
inc
jmp
adc
dec
sahf
xchg
mov
pop
lret
je
idivl
lock
loop
decb
jns
mov
int3
out
dec
add
pop
scas
pop
shrl
pop
xor
and
pop
lret
scas
pusha
std
and
add
stos
sbb
loopne
xorl
repnz
mov
adc
cld
movsl
stc
push
arpl
mov
loope
xlat
push
xchg
inc
divb
dec
push
mov
jb
add
dec
mov
mov
int3
pop
call
jae
xlat
cmp
or
ljmp
adc
pop
jmp
pop
mov
lock
jmp
vpmullw
mov
and
xor
stos
add
add
ljmp
test
adc
jbe
dec
xor
cmp
mov
adc
xchg
add
mov
jnp
add
sub
xchg
jns
add
in
and
rorb
push
rcr
jns
xchg
icebp
jne
jo
push
lock
test
push
add
or
aad
push
pop
jle
inc
dec
adcl
mov
testb
fdivrl
mov
mov
mov
and
xchg
pop
arpl
or
mov
testb
pushf
mov
jle
imul
xchg
inc
pop
jae
push
pusha
test
lea
into
inc
mov
aaa
punpcklbw
int
sbb
add
roll
inc
pop
xor
sbb
mov
inc
inc
out
gs
pop
das
pop
mov
cmc
stc
jo
and
xor
out
lock
aas
call
pop
repz
jns
or
lods
pop
cltd
test
or
and
add
addr16
sbb
fwait
mov
sbb
pushf
nop
stos
mov
cmp
imul
sbb
mov
out
dec
imul
jle
mov
jg
aad
mov
sbb
lock
shll
or
mov
push
fs
jno
cmp
popa
fdivs
movl
sbb
xchg
lret
sbb
push
cmp
test
mov
outsl
sbb
cli
cmpw
dec
push
out
lret
iret
xchg
add
adc
sub
out
sub
and
bound
jle
and
lods
mov
fdiv
inc
inc
cmp
loopne
mov
out
cmpsl
xchg
pop
in
mov
sarl
int
xchg
mov
adc
push
inc
enter
pop
iret
sbb
sahf
sbb
jp
sub
pop
lea
xlat
repz
jae
pop
sbb
jp
dec
lds
aad
pop
add
mov
jns
or
fiadds
rcl
dec
jno
add
ja
mov
sbb
pop
push
push
popa
add
mov
sub
mov
repnz
leave
lcall
sar
enter
outsl
cltd
hlt
jbe
adc
xchg
iret
push
inc
push
fcomi
lcall
inc
les
mov
push
mov
mov
jne
dec
xor
push
and
aam
sti
fsubrs
mov
lods
cmc
jl
testl
fisubl
add
mov
test
xlat
inc
stc
mov
ljmp
test
mov
shrb
mov
dec
cmpsl
mov
lds
push
loop
leave
adcb
pop
leave
sub
cwtl
xchg
fwait
lret
xlat
js
xchg
inc
insb
pop
lods
fwait
mov
dec
aam
dec
scas
js
or
test
loope
lock
cmp
pop
inc
jns
sub
outsb
xchg
and
rolb
mov
xlat
inc
lds
sbb
cwtl
jo
out
pusha
lds
outsl
inc
mov
test
stc
lock
pusha
popa
cmc
sarb
shl
mov
mov
pop
repz
pop
test
je
jne
faddp
pop
scas
xchg
pusha
xor
stc
xor
in
lods
rcll
or
jmp
xchg
pusha
cmp
ds
lcall
les
ss
pop
stc
sub
test
and
jb
or
orl
add
insl
dec
fstps
mov
mov
scas
aam
cld
sub
jb
jns
mov
stos
and
imul
mov
jo
sti
loop
push
cld
jl
icebp
add
mov
pop
es
xorb
shrb
popa
mov
sub
push
int
xlat
test
sub
xchg
pop
mov
xchg
sti
lock
fdivp
inc
ror
push
add
pop
pop
popf
jbe
pop
xchg
add
xor
call
das
sti
mov
aam
cmp
mov
xchg
imul
mov
and
sbb
mov
cwtl
jnp
mov
sbb
rcrb
add
sub
cmpsb
pusha
aas
insl
cmp
sahf
pop
in
adc
mov
cmp
pop
jecxz
aas
jbe
and
jl
daa
mov
lods
lret
or
movsb
mov
add
mov
jno
adc
or
mov
push
aam
and
xchg
add
icebp
faddl
pop
daa
dec
imul
inc
pusha
aam
pop
iretw
mov
jmp
inc
cmp
adc
sbb
mov
lea
sub
mov
rclb
repnz
inc
and
mov
ds
mov
inc
mov
imul
sub
dec
fwait
aam
xchg
cmp
jge
pop
popf
fcmovnu
inc
rcll
imul
std
orb
add
ficomps
nop
dec
pop
add
enter
xchg
ret
inc
mov
mov
pop
insl
arpl
jo
jge
mov
mov
stos
add
popa
push
add
mov
mov
loop
mov
add
fucomi
insb
jne,pn
inc
or
xor
aaa
nop
aam
xchg
sbb
xchg
mov
scas
cltd
jle
es
shrb
pop
stos
mov
rorl
pop
xchg
mov
dec
or
scas
jne
fcomps
ss
jb
pusha
jmp
aaa
sub
shrl
sub
push
ret
ds
fsubs
in
test
fbld
aad
mov
lcall
jno
loop
addl
inc
out
mov
pop
mov
clc
mov
rolb
test
into
push
cmpsl
xor
push
pop
dec
lahf
pop
push
dec
cmp
sub
test
mov
stc
fcmove
mov
pop
je
rorl
test
add
ja
adc
insl
call
scas
xlat
mov
mov
icebp
pusha
div
out
fidivs
jo
cli
mov
pop
aas
nop
pusha
jae
xchg
mov
mov
add
lea
xchg
mov
loope
pushf
jno
inc
add
dec
negb
add
sbb
xor
sub
mov
pushf
jle
dec
stos
pop
mov
outsl
call
lods
insl
xor
sti
lea
pop
mov
test
js
fs
mov
mov
sub
jp
cwtl
aam
movsb
loop
enter
mov
pusha
daa
lret
in
adc
cmpsb
mov
adc
subl
and
dec
and
ss
into
insb
adc
rorb
or
sbb
xchg
jp
or
lahf
cltd
popf
int3
in
pop
mov
mov
mov
or
pop
add
icebp
and
loope
out
test
lock
aaa
adc
push
aam
cmp
inc
jge
addl
inc
add
lea
shll
and
cmp
xchg
test
ja
mov
and
iret
push
mov
ja
sbb
sbb
mov
adc
clc
mov
lcall
and
stos
outsb
or
mov
pop
add
test
nop
ret
push
jnp
pop
sub
push
jb
and
inc
es
jle
jb
fs
mov
std
leave
pushf
aam
xlat
fstpt
icebp
imul
jmp
jo
sbb
cli
ljmp
enter
int3
ret
sbb
push
cmc
mov
loope
push
not
cmpsb
hlt
mov
cmp
mov
mov
jl
sub
pusha
in
add
test
in
aam
mov
ljmp
xlat
cmp
mov
jns
das
adc
and
ret
xchg
iret
add
sahf
cmp
in
lods
pop
inc
push
je
cli
sbb
aam
or
mov
mov
add
pop
add
iret
sub
pop
pop
loope
cmp
jb
fldl
roll
nop
std
repnz
jbe
maxps
lods
aam
cs
leave
push
push
fisttps
xchg
pop
lods
lods
adc
fmulp
aam
cmpsl
pop
and
lds
jbe
bound
sti
out
cmp
aad
out
add
daa
mov
push
dec
mov
pop
jae
jle
ret
adc
dec
loop
push
ss
adc
cltd
mov
pop
cmp
cmovo
std
jmp
pushf
xor
and
hlt
rcrl
mov
lahf
and
and
xor
jns
insl
fnstsw
push
sub
jae
inc
sahf
insl
mov
pop
mov
inc
call
mov
pop
add
mov
mov
mov
in
rorb
repnz
xchg
mov
sub
sbb
aas
sub
add
test
jp
push
mov
std
mov
rcrb
push
aad
sbb
mov
jle
jne
sbb
push
mov
add
into
mov
mov
out
out
sub
fisttpl
and
pop
dec
add
mov
or
cmp
popl
or
es
sub
cmp
cld
ja
les
fldl
mov
popl
popa
cmp
clc
mov
test
rorl
and
inc
add
and
and
int
or
add
rcrb
xchg
gs
jns
xor
or
movsl
sti
aam
inc
je
xchg
or
mov
loop
subl
inc
filds
mov
jns
xlat
incl
or
rcrb
and
pop
bound
cmova
addr16
bound
je
mov
jmp
cltd
xor
dec
xchg
dec
xor
movsb
sbb
mov
mov
jno
or
movsl
aad
sahf
icebp
cmc
xor
pop
test
dec
cmp
insb
jg
rorl
pop
push
mov
xor
inc
repnz
or
mov
xor
add
notl
or
adc
push
sub
sbb
aam
xorb
mov
into
mov
aaa
dec
and
xchg
movsb
sub
mov
jnp
das
lods
test
sti
sbb
cmpsb
or
xor
mov
or
arpl
and
sbb
js
aad
cmp
sub
mov
scas
subb
pop
adc
mov
cltd
pop
imul
dec
xor
xlat
pop
lods
in
mov
cli
fmuls
add
outsl
jg
push
cmpsl
call
test
mov
jp
stos
jbe
aad
cmp
pop
xchg
xchg
aam
fwait
or
or
sub
mov
sub
sbb
pop
aaa
inc
pop
test
lods
jp
rcrl
push
jne
in
insl
sbb
push
pop
pop
test
rolb
testl
jno
ret
and
loop
jb
add
or
pop
jl
ss
mov
shll
lods
sbb
sub
stos
icebp
xchg
pop
xlat
inc
mov
mov
add
ret
mov
push
xchg
cwtl
sbb
prefetch
or
xor
sbb
adc
test
fisttpll
sbb
xor
fildl
jno
xlat
jnp
cmp
mov
outsl
pop
cmp
dec
jo
push
mov
leave
aas
lret
pop
adc
dec
push
repnz
popa
lock
call
add
aad
test
dec
in
mov
lret
fnstcw
das
stos
mov
cmpsb
sarl
mov
jmp
cli
les
jns
xchg
xchg
jl
loop
mov
cmp
mov
inc
mov
int
inc
aaa
adc
pop
arpl
bound
in
sbb
mov
jns
or
jge
add
nop
push
sbb
fmuls
mov
xchg
lcall
push
cmovl
stc
jno
xor
jecxz
pop
sbb
imull
fnsave
daa
sbb
les
outsl
je
cli
push
mov
sub
and
out
clc
mov
add
pop
jecxz
mov
les
push
xchg
out
cmpl
xchg
mov
mov
jno
pusha
xchg
lahf
dec
mov
pop
sub
scas
cmp
mov
or
jmp
and
push
jle
mov
sbb
jecxz
sarl
stos
push
sub
dec
dec
stos
sarb
andps
movnti
jbe
pop
dec
dec
add
mov
stos
jp
cmp
push
cmp
mov
sub
mov
push
pop
add
mov
pusha
jmp
fs
cltd
ja
pusha
mov
pop
ret
mov
pusha
or
repz
mov
out
ret
mov
in
adc
rep
add
clc
aaa
rcrb
push
mov
cmp
push
setg
enter
std
sbb
jb
dec
roll
hlt
push
adc
std
push
xchg
mov
xor
cmc
fwait
leave
add
popf
xchg
pop
pop
mov
inc
dec
je
out
add
dec
xor
in
aas
push
pop
push
add
outsb
mov
aad
iret
scas
mov
dec
xchg
std
push
add
dec
pop
testl
mov
cli
arpl
push
fidivl
lods
add
mov
imul
test
xchg
cli
insl
xlat
xor
add
jp
add
jb
sub
push
cmp
xchg
xor
jecxz
rorb
and
in
les
imul
dec
clc
xchg
inc
add
adc
jns
insl
jge
les
xlat
pop
add
outsb
and
jmp
insb
ljmp
jecxz
leave
add
dec
movsb
jmp
jl
push
pop
stc
sbb
daa
mov
hlt
add
or
cmp
push
in
loopne
pop
pop
ds
cli
add
and
int
cltd
pop
jnp
fwait
adc
and
aam
outsb
jmp
ret
pop
loop
mov
leave
or
stos
sbb
pop
jne
xor
movb
aam
sti
jg
mov
mov
inc
mov
in
jl
lods
std
enter
cmp
dec
jge
ss
loope
inc
aad
es
leave
je
rep
and
push
fwait
xchg
pop
jnp
lret
iret
or
pop
sbb
sub
jmp
jmp
inc
dec
or
sbb
stos
or
test
jecxz
push
xchg
int
or
dec
dec
cmp
push
cli
gs
cmp
outsb
data16
xlat
cmc
fldlg2
fsubs
cmp
cmpsb
sahf
cltd
pop
dec
xchg
pop
mov
pushf
out
aam
pop
imul
inc
fidivrs
xchg
icebp
iret
and
mov
and
dec
aad
and
js
out
cmp
movsl
shll
push
mov
push
in
mov
aam
adc
hlt
repnz
mov
icebp
mov
mov
out
or
rcrl
out
lahf
cmp
mov
cmp
mov
jg
int
or
push
lods
mov
stc
call
sub
sbb
popl
dec
xor
or
push
in
jbe
aad
repnz
orl
pop
inc
sbb
jl
testl
nop
sub
sti
daa
cwtl
lds
pop
xor
and
iret
adc
mov
scas
or
cmpsl
mov
pop
push
mov
subl
xor
and
sbb
in
cmp
sub
add
outsl
add
jmp
ret
bound
gs
cltd
push
add
movsl
imul
enter
aam
jbe
pop
mov
loope
rorb
leave
xlat
pop
clc
into
ss
aad
clc
dec
push
inc
decl
adc
cmp
mov
pop
daa
inc
testl
data16
outsl
mov
repz
andb
mov
popf
fiadds
fldcw
dec
aad
ja
jp
xchg
lea
int3
test
sbb
xchg
jge
xorl
sub
sub
inc
mov
pusha
out
lcall
arpl
and
aad
pop
xchg
mov
xchg
das
xor
nop
xorb
add
push
aam
sbb
fsts
fsubrp
dec
sbb
sub
sti
add
xchg
pop
sub
fistl
push
imul
xchg
aam
cltd
or
les
or
sbb
mov
in
add
imul
xchg
lret
jle
test
jle
dec
psrad
ret
mov
pusha
jecxz
negl
sub
adc
cmp
and
mov
clc
lahf
push
push
out
sub
and
add
jae
lods
sbb
adc
mov
add
xchg
dec
mov
adc
adc
mov
sbb
icebp
pusha
popf
or
push
xor
cmpsb
clc
mov
mov
cltd
dec
fs
and
or
icebp
lds
lods
push
xchg
xchg
mov
call
mov
pop
add
test
mov
add
xor
mov
test
test
pushw
mov
xor
aam
in
loop
adc
push
adc
das
inc
lcall
jne
int3
movsb
pop
xlat
add
pop
test
xor
movsl
jg
cld
sbb
add
shl
add
lret
cmp
add
xchg
push
adc
sub
lea
lea
xchg
stos
data16
push
xchg
lods
dec
movsl
pop
cmp
fsubs
je
xlat
ret
sti
add
xchg
inc
xor
inc
andb
mov
call
outsl
inc
cmp
dec
dec
add
cld
jge
dec
test
cs
test
inc
jbe
rcll
fidivrs
mov
imul
push
jae
stc
incl
fwait
rcl
fldenv
jnp
cwtl
cmovne
daa
mov
es
pop
enter
or
rcll
stos
ret
sub
xchg
push
sbb
out
jecxz
and
cmpsl
sub
xchg
inc
pop
sti
xchg
add
es
inc
andb
cmc
fdivrl
aam
xchg
mov
inc
or
rcll
push
sbb
std
in
adc
cmpsl
out
ljmp
inc
pop
dec
mov
pop
adc
jne
mov
test
movb
push
iret
cmp
xlat
mov
orb
pop
xchg
xor
out
imul
mov
mov
mov
or
dec
rorb
and
xor
inc
inc
fdivs
in
xor
cmp
or
fmuls
push
shr
xor
rcrl
leave
mov
sub
in
hlt
out
jp
cmpsl
pop
xchg
fsubrl
les
iret
jo
pushf
mov
and
insb
xchg
add
addr16
push
dec
je
ljmp
mov
hlt
add
and
pop
out
dec
fistps
dec
in
int3
or
into
fsubr
sub
push
insb
lret
popa
sti
into
dec
lods
jne
adc
mov
mov
cmp
test
ds
cwtl
dec
mov
push
out
aad
dec
push
or
dec
inc
xor
lea
push
shrb
push
xlat
add
mov
adc
mov
add
aad
pop
aad
or
adc
outsl
dec
aad
pop
clc
imul
arpl
mov
into
mov
sbb
test
cltd
jb
add
mov
mov
push
pop
lret
lret
rcll
aaa
filds
dec
les
pushf
dec
rclb
addr16
mov
add
rcrl
nop
push
test
outsb
jnp
sahf
sbb
ret
pop
add
mov
daa
mov
scas
mov
jbe
imul
gs
xor
fwait
in
out
push
mov
mov
test
es
and
insb
scas
cltd
rcll
movsb
aaa
jle
mov
cmp
adc
sub
jmp
mov
add
imul
or
mov
lfs
inc
js
add
daa
mov
jno
movsb
mov
adc
popf
bound
sahf
les
data16
dec
dec
mov
jg
lods
mov
adc
sub
lcall
loopne
inc
jg
or
insl
imul
mov
out
mov
ss
inc
mov
arpl
lds
push
xor
jbe
mov
dec
xchg
inc
mov
push
std
add
dec
xchg
ds
push
and
mov
aam
mov
add
inc
adc
inc
dec
jbe
dec
out
xchg
push
repnz
repnz
es
cmp
hlt
iret
dec
mov
sbb
sbb
flds
add
pusha
mov
sub
aad
inc
xor
mov
cltd
mov
cld
gs
xor
mov
dec
pushf
inc
xchg
js
add
or
xorb
ds
data16
in
mov
mov
sub
cmpsb
inc
push
aad
aas
add
adc
adc
pop
aam
mov
sbb
xchg
jge
mov
sarb
imul
pop
or
scas
pusha
test
add
sbb
sbb
pop
test
gs
jp
cli
lock
stos
mov
jmp
test
mov
shl
fldl
push
xorl
in
xchg
push
add
sbb
mov
or
insb
mov
xor
or
add
xchg
out
xor
jmp
sbb
add
pop
popa
or
aas
or
or
clc
inc
cwtl
mov
insb
jle
enter
add
sub
les
loopne
push
cmp
andl
xlat
adc
xchg
mov
sbbl
mov
push
or
sbb
nop
adcb
mov
jae
jo
jae
xchg
cli
aam
sub
movsl
jge
mov
mov
pop
divb
out
pop
pushf
shlb
int
mov
incb
adc
pop
sub
adc
pop
in
gs
dec
lea
mov
push
push
aam
int3
decl
popf
sahf
adc
mov
pop
pop
add
fsubr
aam
std
inc
lret
inc
add
mov
cld
mov
mov
push
lahf
xchg
cmp
sub
add
nop
jp
cmp
push
out
dec
jnp
lods
mov
jle
aas
jnp
fwait
jmp
xor
pop
lds
fnstcw
xor
aad
loop
pushf
loopne
aam
stos
inc
or
outsl
and
fstl
push
pop
fwait
sti
stc
daa
and
adcl
cld
add
mov
push
fwait
cld
mov
push
jnp
imul
pop
inc
test
addr16
lahf
cmp
or
sbbl
inc
nop
mov
xchg
out
out
lret
pushf
cli
xchg
add
mov
sbb
insb
pop
mov
dec
ljmp
pop
dec
add
lods
push
fs
pop
xor
sti
cmpsl
call
fs
adc
push
add
xor
add
and
pop
add
xchg
sub
mov
les
dec
lahf
xor
stc
add
adc
jg
push
and
cmpsb
js
or
test
andl
outsb
pop
mov
dec
jl
das
cmp
arpl
fmul
pop
int3
xchg
cli
mov
cmp
sti
mov
jae
fwait
push
rcl
or
repz
rcr
test
xlat
xchg
fisttps
jo
repz
int3
fdivrs
push
insb
orl
add
in
imul
add
out
xchg
fwait
cmp
cltd
popa
stos
sahf
aas
mov
rcll
sahf
aam
mov
add
cli
test
rcll
mov
lods
pop
cltd
or
sub
imul
push
inc
xor
push
icebp
pop
add
leave
mov
ret
pusha
lea
out
xchg
ss
jnp
inc
fbstp
leave
and
push
and
stos
add
pushf
pop
daa
mov
enter
sbb
push
in
add
xor
aaa
insb
push
stos
inc
push
xor
jp
sti
aad
pop
sub
xchg
andb
push
mov
pop
xor
mov
ds
add
pop
cmp
lss
adcl
rol
shr
jmp
mov
jb
rcrl
or
mov
std
repnz
out
mov
pop
mov
xchg
cmc
adc
outsl
jp
cmp
push
in
lods
mov
inc
push
adc
leave
or
dec
into
aad
jbe
mov
inc
aam
loope
pop
testb
aam
aaa
jae
loop
and
pop
jae
sub
lcall
adc
xor
ja
loopne
les
lods
add
cmp
cmp
jmp
push
into
cmp
sbb
je
leave
mov
jmp
jmp
fcom
sub
jo
mov
in
rcrl
and
fdivrs
ret
sti
mov
xor
mov
testb
mov
mov
or
jge
stos
hlt
jnp
sub
insb
adc
pop
aad
dec
cltd
push
iret
subb
xchg
dec
cli
xchg
rolb
aad
aad
loopne
mov
xor
and
aam
push
jnp
sub
add
mov
outsb
subb
or
push
push
mov
lret
inc
dec
cmpsl
std
negb
xchg
and
ficomps
std
xchg
mov
cmp
mov
cwtl
lret
inc
mov
add
je
add
dec
sub
adc
or
xchg
and
lock
faddl
push
mov
fwait
test
vfrczsd
push
aam
or
je
xchg
dec
cld
loop
push
dec
cmp
cld
mov
repz
dec
sub
xchg
test
inc
pop
aam
dec
mov
inc
aam
pop
mov
pop
xchg
addr16
push
hlt
cmp
call
sub
xchg
add
inc
inc
insb
dec
and
not
fs
std
pop
das
cmp
mov
pop
sbb
cmpsb
leave
mov
ds
pop
mov
push
mov
aam
out
xor
mov
fsubl
mov
outsl
mov
pop
sub
sbb
or
es
rorb
bound
je
aad
lds
xchg
insl
aam
fisttpll
popa
xor
and
sbb
in
sbb
add
push
dec
jle
sub
xor
cli
adc
js
or
pop
fildl
arpl
not
aad
jns
and
popf
mov
jge
outsb
aas
lret
test
push
add
insl
fstpt
movsb
jnp
mov
call
or
dec
push
mov
xor
or
repnz
loope
add
xlat
jnp
into
pop
cwtl
sahf
mov
pop
lods
repz
aad
inc
loope
lret
or
popa
inc
mov
ret
in
sbb
xchg
movb
or
out
inc
push
xchg
popa
push
in
and
incb
ljmp
fs
mov
sbb
mov
dec
jb
lret
dec
inc
rorl
aam
test
add
loope
pop
sbb
aaa
bound
mov
pop
jae
jle
xchg
cmp
stc
xchg
lds
mov
cmp
cwtl
outsl
add
cmp
xor
jns
lret
lods
addr16
fwait
loope
aad
dec
fstpl
je
outsb
scas
adc
jge
mov
adc
rclb
pop
mov
mov
sbb
mov
stos
mov
imul
xor
mov
les
inc
jl
outsb
test
inc
jl
inc
jns
adc
les
push
sbb
ss
fdivrl
pushf
aad
jle
mov
cmp
mov
inc
xlat
mov
dec
aad
test
mov
mov
loopne
repnz
add
sbb
xlat
popf
mov
sbbl
mov
repnz
add
popa
test
mov
clc
mov
and
pop
xchg
lahf
or
aad
rcl
sti
int
xor
iret
outsb
or
jno
stos
mov
sbb
mov
push
std
fwait
imulb
repz
cltd
and
pop
add
pop
lock
aam
xchg
jp
mov
mov
add
test
or
cmp
and
mov
sub
rcl
adc
test
test
testb
and
mov
jo
shrb
adc
test
gs
mov
mov
pop
stos
lods
lds
lods
or
mov
je
aad
into
test
incl
adc
cmpl
shll
and
mov
sub
push
mov
sbb
ljmp
sub
add
add
xorb
inc
gs
push
inc
dec
mov
sub
xor
xchg
arpl
mov
mov
or
insb
mov
adc
cwtl
loope
inc
push
imul
out
adc
lods
iret
mov
lea
fs
push
jg
add
loop
das
pop
fwait
mov
and
addr16
pop
mov
dec
mov
xchg
adc
and
jo
test
nop
neg
mov
mov
pusha
add
xchg
mov
shl
pop
cltd
int3
mov
loopne
movsl
jg
repnz
push
fs
push
push
ret
outsb
mov
ds
push
sub
add
shr
pop
cltd
push
adc
push
rclb
pop
or
outsb
arpl
pushf
xchg
sbb
xlat
or
dec
or
jl
xlat
dec
jae
sub
fwait
sbb
pop
push
pop
scas
or
enter
xorb
pop
adc
sub
out
gs
sti
xor
int
enter
clc
dec
dec
leave
hlt
or
add
mov
mov
mov
insl
orl
sbb
aad
loopne
mov
mov
mov
mov
adc
aam
sahf
inc
mov
jnp
lcall
in
insb
jae
xchg
push
add
in
mov
mov
or
sub
mov
lcall
push
outsb
pop
cmp
js
and
les
popa
repnz
flds
insl
inc
fucomi
dec
repz
add
cltd
mov
rcrb
adc
daa
or
shrl
adc
test
pop
xchg
dec
push
insl
icebp
adc
pop
test
aam
dec
mov
and
ss
shlb
inc
mov
dec
mov
mov
push
push
fadds
lret
pop
pop
pop
xor
decl
inc
popf
stos
int3
push
xchg
cmp
rorl
mov
aad
push
sbb
mov
das
aam
pop
inc
out
nop
aaa
xchg
aam
adc
xchg
jo
aam
dec
out
sbb
mov
or
xor
sub
add
mov
mov
adc
jge
jo
lahf
aad
scas
xor
vpcmpeqd
mov
fimuls
lock
aad
mov
xor
es
mov
movl
sbb
mov
cmc
and
adcl
ret
mov
cmp
je
mov
jp
mov
in
or
mov
mov
aam
pop
outsb
ftst
mov
aad
testl
int
pop
pop
stos
or
loop
jg
dec
inc
shld
clc
cmp
and
ja
mov
test
add
sahf
jb
jae
xchg
int3
mov
pop
push
pop
jne
jns
cmp
stos
cmp
shlb
or
mov
std
adc
adc
iret
add
stos
aas
lcall
sub
fcomi
outsl
scas
iret
push
jbe
or
lcall
leave
outsl
or
sbb
push
jne
enter
lahf
add
stos
pop
std
xor
pop
push
aad
scas
mov
cli
mov
or
movsb
mov
add
cmp
pop
test
mov
cmc
loopne
ss
or
add
insl
lahf
xchg
push
jmp
push
add
cmpsl
call
or
jmp
mov
aad
leave
fisubs
mov
or
adc
fs
inc
or
stc
adc
rcll
cmp
jge
stos
sub
mov
push
mov
iret
test
push
sub
fldenv
shl
jl
mov
and
mov
out
and
inc
or
shlb
es
pushf
mov
test
jbe
mov
shrb
jecxz
ljmp
loop
or
mov
cld
push
int
xchg
mov
xchg
mov
ret
insb
in
push
xchg
icebp
lret
arpl
mov
mov
cld
mov
outsb
jbe
xchg
pop
sarl
in
add
mov
scas
stos
pop
cmpsl
mov
shl
push
adc
add
orb
test
dec
sbb
loopne
sbb
mov
mov
or
inc
and
jge
nop
movsl
loop
addb
push
test
or
mov
pop
jecxz
mov
loope
test
pop
mov
pop
fstps
xchg
add
xchg
leave
add
fisubrs
xchg
pusha
jnp
or
data16
out
or
jl
rorl
lods
inc
ror
add
sbb
push
add
cli
aad
xchg
add
ret
adc
mov
out
fldenv
xchg
xor
jbe
sbb
sub
stos
add
jecxz
inc
fisubs
int
loope
fstps
sbb
dec
in
imul
test
pop
xchg
ds
imul
stc
sbb
pop
pop
pop
andl
adc
mov
rep
divl
fisubrs
adc
in
ret
fisubrl
arpl
xchg
push
jb
mov
jns
pop
add
scas
aas
fidivrs
es
call
mov
jg
mov
push
out
int3
aaa
jmp
imul
roll
stos
scas
and
pop
or
aad
sbb
sbb
lret
mov
ficompl
sbb
cmpsb
or
in
stos
cmp
loopne
test
aam
xchg
std
aam
fnstcw
mov
adc
outsl
mov
mov
sbb
dec
lcall
cli
es
into
add
add
mov
or
adc
jecxz
enter
and
pop
mov
mov
or
mov
imul
add
out
jae
pop
stos
mov
mov
es
and
mov
loopne
and
mov
scas
cmpl
mov
out
iret
cmc
pusha
aad
lahf
andb
cmpsb
fiaddl
mov
jae
push
aad
lahf
dec
lods
inc
ret
mov
rolb
inc
mov
hlt
imul
push
dec
jmp
aad
stc
add
mov
pop
aas
xchg
mov
pusha
int
jno
in
daa
inc
addb
xor
cmpsb
adc
add
mov
movsl
pop
xor
hlt
lahf
arpl
ljmp
dec
dec
cmp
push
enter
insb
addb
pop
push
xlat
out
fwait
mov
mov
insl
ret
push
out
stc
and
fistps
rol
dec
add
mov
fimuls
xchg
mov
lcall
push
test
dec
xchg
sbb
mov
or
mov
cld
dec
aam
jne
mov
test
dec
push
inc
stos
es
es
add
jae
flds
cld
hlt
xor
add
mov
pushf
ss
adc
scas
push
aas
lret
pop
leave
insb
jnp
and
aam
xchg
fstpt
jnp
push
lods
cmp
lods
mov
bound
rol
movb
pop
dec
adc
xchg
out
lods
call
ret
adc
mov
out
dec
enter
adc
frstor
sbb
adc
sbb
xor
es
mov
inc
jle
add
stos
out
jp
push
adc
or
sub
xor
jecxz
push
in
loope
ljmp
or
sahf
pusha
jmp
sub
or
fstl
or
pusha
jo
in
jnp
jbe
into
call
adc
or
test
or
adc
add
add
and
in
lds
sbb
cmp
ret
xorb
xor
jmp
negb
mov
insl
mov
sub
jg
ret
or
cld
mov
mov
movsb
js
inc
push
add
fcoms
push
adc
icebp
fldl
sbb
iret
ss
shrb
rcll
jle
mov
arpl
call
dec
lcall
pop
cltd
mov
add
sub
pop
jmp
mov
or
in
pop
mov
int3
inc
je
mov
outsb
sub
add
dec
sbb
and
xor
and
xor
xor
lock
in
adc
jb
repz
adc
aas
mov
in
xchg
or
test
popa
imul
mov
sbb
mov
imulb
sub
inc
add
push
sub
dec
xor
loope
stc
andl
xor
jbe
movsl
or
mov
mov
and
sub
repz
dec
sti
mov
clc
outsl
xchg
divb
fisubl
push
int3
ret
cwtl
cmp
fnop
loope
xchg
dec
or
aam
fs
test
into
lods
shll
push
pop
adc
test
mov
mov
ret
aad
repz
pop
xchg
mov
mov
mov
out
fstps
mov
aad
aad
int3
dec
mov
pushf
out
pop
repnz
sub
pop
leave
in
into
jo
sub
cmp
stos
push
test
and
out
xchg
outsl
insb
out
or
out
test
xchg
mov
dec
insb
xchg
gs
mov
ret
stos
xchg
aas
dec
sbb
inc
adc
pop
inc
cli
or
aam
ljmp
mov
mov
push
leave
les
arpl
mov
adc
dec
movsb
inc
roll
outsl
dec
jg
jmp
or
imulb
dec
inc
and
mov
call
outsl
mov
stos
into
jno
mov
mov
dec
add
sti
jl
dec
leave
push
pop
insb
gs
add
push
insl
push
xlat
sbb
lods
add
push
cmp
dec
pop
mov
movsl
push
lock
popf
adc
fld
xchg
inc
jo
add
daa
insb
xchg
ss
xchg
mov
mov
mov
test
dec
aas
aas
mov
push
mov
dec
push
inc
lahf
in
fisttpl
ljmp
push
push
xlat
jge
sub
mov
loop
lea
stc
mov
std
dec
leave
sahf
cmpsb
mov
rclb
cwtl
mov
shrb
out
outsl
int3
in
add
repz
ljmp
mov
pusha
fimuls
xchg
add
repz
mov
cmp
push
cs
inc
inc
pop
mov
xor
jge
lcall
pusha
xor
sbbb
lock
add
add
ds
jb
jns
sub
add
fwait
test
and
fld
push
mov
int3
leave
xor
jmp
sarb
push
lahf
mov
mov
inc
jge
pop
mov
sbb
add
iret
sahf
xor
mov
int
mov
lea
cmpsl
pusha
jnp
push
lea
inc
mov
lcall
dec
mov
push
dec
lds
cmc
stos
sbb
lret
and
pop
sub
jg
xlat
or
dec
xchg
cmp
stos
mov
loope
push
ficomps
pop
std
test
cwtl
mov
jns
addb
dec
pop
lret
repz
testl
idivb
fsubr
jb
cmp
test
stos
nop
icebp
sbb
loop
pusha
dec
push
jmp
popf
faddl
imul
push
xchg
shrl
push
push
or
mov
jl
repz
or
imul
es
aad
dec
std
pop
inc
out
add
addl
popf
jne
jge
ret
aam
arpl
and
push
stc
adc
cltd
js
adc
push
mov
jne
ficoml
movsl
push
movd
add
out
xor
push
in
shrd
xor
negl
loop
arpl
aad
xor
pop
mov
and
movsl
aad
jns
and
xchg
lds
popf
add
add
out
mov
add
mov
xor
fs
add
mov
fisubrl
jne
and
mov
out
dec
jmp
fbstp
jo
fwait
push
jno
adc
in
mov
jo
fcmovbe
int
cld
lret
sbb
cld
fbld
jb
lock
xor
aad
push
loopne
sbb
pusha
popa
cltd
xchg
ret
ret
fcom
xlat
xor
or
xor
movsl
arpl
add
sbb
shrl
jl
cmc
lods
push
mov
lahf
or
mov
mov
xor
aam
mov
inc
add
stos
add
push
pop
negl
jge
addr16
push
outsl
repz
aad
mov
cmp
lods
insl
cmp
aad
xchg
jmp
mov
into
xor
gs
jns
sbb
rorl
cmp
jne
add
mov
lahf
stos
dec
push
pop
dec
cmc
jb
clc
mov
sbb
or
sbb
data16
rolb
dec
and
fsubr
add
add
insb
ss
jns
movb
fisubs
in
or
sahf
mov
js
stos
xchg
xlat
aaa
mov
mov
inc
inc
hlt
adc
lcall
jns
pop
add
xchg
mov
rcrl
mov
imul
lret
mov
inc
jecxz
ret
mov
popa
stc
and
rcrb
int
xor
cmovb
jo
lahf
push
repz
mov
mov
stos
jno
dec
pop
jb
test
xor
mov
movsb
sub
add
mov
and
ss
out
pushf
jne
loop
add
fs
sub
and
ljmp
jnp
and
mov
icebp
into
or
ret
sbb
cmpsl
int
dec
outsb
pop
sbb
aam
sbb
mov
or
sahf
inc
xchg
and
or
cmp
test
inc
mov
jmp
out
repnz
pop
mov
or
stos
cmpsb
pop
lock
pop
jl
jmp
and
daa
pop
in
pop
je
add
cmp
inc
xchg
sahf
or
fst
xchg
stos
rol
cmpl
push
pop
mov
pop
icebp
sub
cmp
cmp
mov
push
rcll
xchg
roll
ret
sbb
int3
inc
arpl
ss
iret
imul
xchg
aam
push
jbe
inc
inc
adcl
cs
pop
aaa
dec
pop
mov
sub
ja
adc
dec
inc
js
mov
mov
xlat
pop
xchg
adc
xchg
pop
mov
mov
or
fstps
push
cwtl
jno
mov
call
jle
cmc
fiadds
movsl
sahf
dec
arpl
js
xchg
xchg
adc
push
aad
adc
push
inc
cmpsb
icebp
jp
jnp
cmp
outsb
data16
cmp
jp
fildll
jg
insl
sub
mov
sbb
fwait
mov
je
xchg
sbb
stc
loope
aad
addb
enter
repnz
cmpsl
lock
cmp
or
push
std
mov
stos
sub
mov
cwtl
pop
mov
dec
lahf
mov
jl
and
and
pushf
repz
call
int3
fimull
aad
nop
adc
lret
out
and
mov
and
stos
mov
das
es
loopne
xchg
pop
jb
sub
xor
out
dec
mov
or
lahf
pop
negb
inc
inc
pop
idivl
insl
ljmp
insl
push
addr16
lods
add
jnp
inc
ja
ljmp
rorb
push
jbe
pop
fisttps
mov
pop
push
mov
inc
test
add
iret
testl
inc
xchg
cmpsl
xor
iret
nop
add
and
pop
sub
push
lret
adcb
mov
or
arpl
inc
adcl
out
cld
xchg
orb
shlb
inc
int
nop
jle
adc
and
out
outsl
insl
shlb
mov
out
ljmp
sarl
sub
add
sarl
je
imul
decl
mov
sbb
xchg
test
nop
jns
fstps
bswap
jl
lret
paddq
inc
popl
and
cli
mov
mov
inc
mov
daa
sbb
xchg
movsl
mov
ret
and
inc
mov
pop
add
add
ljmp
adc
nop
popf
add
mov
out
bound
scas
int
add
into
psrlq
jo
push
xor
mov
loop
in
inc
fldcw
push
pushf
sbb
mov
and
and
push
fdivp
or
pop
adc
sub
jge
adc
int
mov
dec
in
addl
inc
aam
mov
fcomip
push
popf
aam
outsb
ss
mov
out
mov
lret
imul
mov
lods
repz
test
mov
je
fstpt
stos
aaa
lret
rcrl
shrl
add
mov
nop
repz
and
pop
fdivl
xor
pop
cltd
les
add
dec
shrl
dec
add
popa
iret
jae
add
inc
psubusb
add
mov
push
pop
sti
test
push
push
cmp
push
cwtl
lret
in
mov
cmpsl
mov
sub
mov
das
push
sub
or
pusha
mov
inc
add
mov
arpl
test
inc
ret
xlat
mull
imul
jns
push
add
sub
xchg
insb
lahf
xchg
and
repnz
or
ret
rcl
fistps
aam
xchg
movsb
cmp
popa
out
pusha
fbld
or
push
xor
hlt
pop
enter
mov
xadd
loopne
pop
dec
loopne
pop
jecxz
push
lcall
loope
mov
mov
xchg
mov
push
insl
cs
adc
iret
mov
ss
shlb
call
pop
sub
loope
jb
fdivl
into
iret
clc
xchg
push
mov
push
pop
mov
sub
mov
out
xor
lcall
mov
lock
lret
clc
jge
addl
lret
lret
stos
inc
shl
mov
aam
popf
push
repz
adc
lea
mov
stos
in
push
ljmp
xchg
imul
std
cwtl
repz
or
push
xor
jmp
aad
out
cltd
addr16
inc
out
mov
out
test
inc
mov
mov
mov
icebp
xlat
insb
pop
jns
sbb
xchg
lods
push
aad
dec
lahf
imulb
iret
ljmp
and
shll
rep
into
inc
or
and
pusha
mov
int3
ret
xor
out
push
xchg
mov
sub
xor
sub
add
mov
mov
movsl
mov
xchg
xchg
int
mov
jns
lcall
lock
in
or
aam
loopne
jb
cmp
pusha
pop
xchg
out
adc
ret
nop
mov
mov
mov
lods
pop
jge
add
mov
pusha
ja
cmp
jne
fistpll
xlat
xchg
xchg
in
dec
imul
icebp
jecxz
jp
adc
adc
mov
pushf
aas
mov
xor
ljmp
push
lret
sbb
dec
imul
lods
xchg
adc
sbb
sbb
sub
andl
pushf
xchg
pop
add
dec
mov
xor
jge
mov
mov
push
inc
mov
mov
es
mov
adcb
sbb
popf
sbb
push
xchg
add
and
insb
dec
test
cmp
sub
je
mov
xchg
jmp
mov
push
aaa
ss
xchg
xchg
int
aad
jmp
or
nop
daa
cmc
ret
jo
cli
rorl
and
dec
sbb
or
or
mov
mov
decl
mov
xchg
test
adc
pop
shlb
bound
jb
sbb
cs
in
push
xor
pop
jb
arpl
adc
xlat
sbb
mov
fs
sbb
das
mov
int3
ds
jge
add
mov
jbe
mov
and
mov
pop
mov
call
mov
pop
sub
repnz
incb
fistps
pop
inc
clc
aam
test
fcmovbe
xchg
mov
pop
insl
cmp
mov
xchg
lock
aad
iret
mov
loop
jmp
aam
inc
mov
psubd
push
scas
mov
mov
sbb
sub
pusha
sahf
adc
cmp
popa
or
jnp
daa
lgdtl
push
lcall
mov
and
xor
push
xlat
mov
jmp
xchg
xchg
push
out
mov
inc
or
jae
and
push
into
sub
aam
cwtl
dec
cmp
add
enter
pushf
test
cmpb
aas
movsb
jge
jge
jb
push
es
pop
inc
in
js
mov
in
fisttpll
sub
dec
sbb
fnsave
pop
jne
arpl
jo
int
xchg
xchg
mov
loope
or
mov
inc
mov
push
inc
jne
mov
push
stos
aam
push
mov
push
pop
or
mov
mov
sub
imul
inc
push
dec
dec
mov
ret
test
scas
jno
mov
mov
repnz
adc
or
pop
out
pusha
sbb
sub
shl
popf
fcompl
lret
push
push
lods
rcrb
stc
fst
nop
mov
fdivrl
mov
and
or
stc
fimull
lcall
pusha
pop
dec
xor
clc
adc
js
sbb
jae
sar
pop
sbb
cmp
or
scas
lcall
mov
inc
xchg
lcall
jnp
fsubr
imul
inc
mov
cmp
insl
test
adc
push
mov
or
fsubl
adc
movsb
sub
jle
cli
pop
inc
rcrb
xchg
aad
aam
pop
icebp
add
mov
dec
je
fwait
out
test
lahf
loopne
dec
sti
and
xchg
shl
xor
dec
bound
aas
enter
add
mov
add
sbb
insl
cltd
lds
dec
cli
xchg
pop
add
test
jbe
ss
ret
sbb
jge
xor
shlb
dec
mov
test
fldenv
inc
aad
cld
inc
push
lcall
mov
loope
or
or
scas
or
pop
xor
or
cmp
fbstp
add
inc
or
push
sysexit
and
add
inc
roll
stos
in
in
mov
arpl
mov
lret
int3
sub
fistpll
fpatan
sub
add
inc
sub
push
jge
sub
add
std
lock
aam
pop
or
adc
jmp
mov
mov
and
nop
push
mov
out
mov
pop
fwait
lahf
jle
out
inc
js
sub
push
inc
mov
xchg
push
dec
fbld
cs
lret
aam
sbb
pop
dec
push
cmp
aam
movsb
xor
stos
mov
stos
push
cmpsb
inc
movsb
mov
mov
mov
push
test
mov
dec
cmpl
cmc
push
cltd
adc
and
push
aam
nop
or
shrb
cltd
mov
hlt
lock
or
xchg
mov
ret
pop
add
adc
int
icebp
in
xlat
pusha
fdivrl
sub
pop
cli
sbb
dec
mov
xlat
hlt
loopne
push
mov
mov
jno
add
pop
ljmp
xor
enter
add
adc
insl
and
xchg
cmp
test
orb
xchg
mov
adc
scas
dec
out
mov
push
aad
add
hlt
ss
movsl
and
mov
cli
sbb
pop
inc
or
hlt
mov
cmp
jae
jg
or
cltd
icebp
mov
inc
aam
add
mov
mull
push
dec
mov
and
stos
jns
fnstsw
es
aaa
repz
lods
or
cltd
add
popa
mov
mov
popf
imul
xchg
lods
mov
imul
push
push
dec
pop
sub
sahf
mov
fs
xchg
sub
stos
mov
ret
lods
jo
mov
mov
aam
push
aad
mov
sbb
imul
data16
push
lods
xor
sbb
call
imul
lock
jno
sub
push
dec
int
jle
jb
lods
aam
fs
lods
idivl
fwait
jae
xor
add
cmp
lret
mov
jno
sub
mov
jo
loopne
push
lcall
mov
call
stos
ret
add
ljmp
xor
rcrl
in
mov
dec
add
int3
bound
pop
scas
jnp
cs
lea
inc
pop
xlat
pop
or
out
fs
fstp
jnp
jno
add
repnz
bound
add
scas
daa
jl
mov
push
inc
out
pop
push
mov
dec
xor
mov
jns
sbb
push
xchg
and
lock
fbstp
adc
pushf
cmp
push
cmpsl
pop
mov
test
or
outsl
jo
pusha
push
lahf
and
das
jo
stos
enter
addb
std
out
pop
clc
outsb
daa
iret
pop
fiadds
cmp
imul
test
pop
aaa
aam
mov
mov
cmpsb
ds
mov
xchg
add
inc
andl
xchg
xchg
f2xm1
mov
mov
sti
and
mov
mov
add
jle
mov
cmpsl
pop
jne
cmpb
lds
jge
aas
lds
out
mov
mov
stos
push
add
mov
in
cs
pushf
movb
pop
jl
movsl
lods
in
orb
lds
add
mov
lret
js
pushf
scas
and
out
pop
ljmp
xor
dec
jg
pop
mov
sub
ljmp
xchg
mov
dec
push
idivb
aam
push
ss
cmp
adc
xor
add
mov
sub
pop
imul
push
loope
inc
into
aad
xchg
das
inc
stos
mov
mov
daa
jmp
cli
sub
add
aam
mov
sub
movsl
add
push
mov
aas
lock
and
loop
mov
dec
jbe
mov
mov
sbb
inc
cmc
sub
or
xorl
rcll
adc
mov
lock
dec
pushf
fwait
lret
sub
adc
and
nop
jbe
into
pusha
sar
inc
dec
push
sub
aam
mov
hlt
incb
or
aam
stos
xlat
mov
add
dec
sub
or
sub
mov
sti
orb
sahf
je
orb
pop
nop
pop
mov
and
pop
mov
adc
stos
aam
push
lret
jecxz
les
in
loop
xchg
arpl
xchg
pop
enter
lods
cmp
mov
call
push
dec
lahf
dec
xchg
sbb
mov
add
push
jle
xchg
insb
sub
mov
nop
push
xchg
cs
ljmp
jb
je
cmp
shlb
xchg
ljmp
or
cltd
shll
data16
mov
inc
cmp
les
inc
pop
add
push
pop
and
jae
gs
pusha
mov
mov
sub
or
push
add
cld
mov
push
lds
icebp
or
or
stc
add
mov
mov
cwtl
leave
ss
xchg
jmp
in
dec
mov
add
mov
subl
adcl
int3
stos
jbe
fnsave
ret
mov
cmpsl
leave
mov
push
or
dec
push
fwait
dec
sbbl
xchg
pushl
loop
inc
lcall
clc
fcoms
cs
pop
mov
out
jmp
loope
sbb
mov
test
das
pop
xchg
pop
dec
lret
sahf
mov
icebp
mov
push
ficomps
xor
popa
jp
mov
cmpsl
daa
or
insb
aam
js
lret
adc
ret
enter
jle
scas
jbe
popa
cmp
mov
aaa
ret
inc
cmpsb
sbb
sahf
out
aaa
jmp
mov
pop
mov
mov
cld
mov
xchg
adc
mov
in
xor
inc
adc
insb
fmull
adc
orb
outsl
pop
mov
pop
inc
pop
pusha
mov
sti
pop
aad
dec
bound
sbb
adc
jo
mov
stc
mov
mov
inc
pop
xor
xor
fistps
sti
lock
lar
out
shll
les
pop
mov
arpl
fldenv
xchg
add
mov
xchg
test
imull
pop
lods
movsb
aad
jmp
pop
mov
leave
sub
cmp
je
lea
cmc
xchg
popa
inc
pop
lcall
and
lret
jne
pop
mov
cs
mov
cmpsb
push
lds
jg
xchg
mov
dec
jl
or
es
pop
test
pop
inc
icebp
sbb
jo
adc
jl
dec
es
or
add
out
cltd
add
adcl
mov
pop
add
aad
cmp
aas
aas
cs
add
aaa
adc
jae
pop
dec
mov
out
in
jg
mov
pusha
insl
dec
push
fs
jo
sbb
xchg
sub
mov
aaa
push
ret
inc
add
imul
dec
std
sub
lea
push
pop
jecxz
bound
lret
rorl
mov
shlb
add
or
sar
ljmp
and
or
pop
stos
in
loopne
mov
enter
popf
pop
xchg
or
arpl
repnz
inc
pop
push
cmp
mov
rcl
out
dec
dec
jne
push
pushl
jne
loopne
jge
sbb
adc
scas
addr16
hlt
dec
pop
or
and
mov
daa
and
xchg
dec
mov
outsl
sub
add
cmp
dec
or
lcall
js
xor
mov
leave
cltd
pushf
dec
je
insl
lds
aad
jecxz
fstpt
aam
ret
lcall
mov
and
xorl
lcall
dec
cwtl
mov
jno
lods
add
in
pop
cmp
xlat
mov
in
inc
and
inc
test
mov
nop
mov
test
leave
adc
inc
push
cmp
push
mov
sarl
jae
add
or
ret
loope
std
pop
xor
test
xchg
mulb
outsb
jae
movsl
inc
in
stos
xchg
xlat
fimull
xorb
call
mov
or
mov
jl
imul
int
jecxz
lods
lret
outsb
push
mov
add
imul
jmp
test
xorl
out
mov
sbb
adc
pop
pop
push
test
xlat
and
lods
dec
add
rclb
rcrb
mov
mov
adc
lahf
dec
push
clc
push
popa
enter
push
mov
add
push
in
aaa
cmp
jecxz
sahf
shl
fiaddl
cmpsb
inc
push
dec
jp
leave
int
add
jmp
adc
push
repz
mov
mov
stos
or
pusha
ss
std
pop
sbb
or
fidivrl
xchg
mov
jp
mov
movsl
scas
push
xchg
dec
mov
mov
push
aam
jns
call
fsubrs
sbb
mov
decl
adc
js
dec
mov
pop
icebp
jb
jg
lds
fwait
sbb
cli
cmp
inc
pop
mov
jne
adc
lock
rolb
inc
inc
mov
cld
iret
enter
lds
enter
xchg
xlat
ljmp
std
test
push
gs
xor
or
aam
inc
dec
dec
xor
in
mov
adc
addb
movsl
loopne
adc
mov
loope
mov
rcrl
rol
aam
fsubr
mov
gs
sub
sbb
inc
call
dec
ja
incb
ds
cmp
adc
xchg
mov
jnp
prefetcht1
out
icebp
int
lahf
adc
xchg
dec
jae
lea
add
ficoms
sub
dec
lods
sbb
lcall
ret
int
xchg
sbb
push
or
imul
add
aaa
pop
shl
mov
xor
add
xchg
mov
std
nop
test
xor
movsb
mov
imul
shll
pop
ja
push
sbb
rorl
mov
inc
jp
lds
xor
sbbl
xchg
sub
push
out
jp
lret
imul
add
sbb
jnp
aam
pushw
fwait
mov
out
mov
add
push
push
ljmp
aad
xchg
push
stos
xchg
inc
inc
mov
push
repz
mov
sub
pushf
add
incb
das
pop
pop
xor
shlb
dec
addr16
mov
mov
pop
push
cmp
add
and
adc
frstor
push
inc
adc
aam
mov
mov
jne
cmp
jnp
pop
lahf
loopne
sbbl
xor
lahf
icebp
pop
in
xor
adc
add
sbb
cmp
xor
mov
sub
add
push
mov
lret
mov
js
popf
xchg
shll
roll
lock
push
add
mov
xchg
dec
add
pop
xchg
and
sub
mov
popf
loopne
aad
lock
mov
out
lods
xlat
les
adc
test
lds
push
xchg
mov
push
dec
dec
cwtl
mov
cmc
jo
lds
imul
lcall
lret
xchg
inc
in
lea
pop
jle
push
jp
sbb
add
xor
xor
pop
pop
push
jns
sarl
sbb
xchg
xchg
jg
jp
lods
xchg
mov
mov
nop
dec
mov
jo
mov
icebp
in
mov
lods
add
jecxz
mov
or
notb
incb
movzwl
mov
inc
mov
dec
and
dec
jmp
sub
ss
jge
pushf
roll
lea
add
mov
popf
pusha
inc
fiadds
add
fwait
jae
cmc
aam
ljmp
push
mov
push
in
daa
test
fistl
ret
bound
ret
dec
dec
icebp
fadds
xchg
adc
inc
sahf
imul
mov
repnz
imul
fstpl
and
mov
adc
adc
add
scas
ljmp
add
cli
movsl
fs
xchg
into
addr16
add
sbb
mov
lock
add
test
fwait
shrl
mov
cld
and
data16
push
push
mov
cmp
sbb
lea
xchg
fistps
add
xor
loop
imul
mov
push
mov
gs
and
popa
cmpsl
ja
mov
jbe
loop
cltd
pop
pop
inc
aam
dec
lret
pop
push
pop
movsl
arpl
mov
push
or
xor
add
shr
mov
fistl
jmp
jmp
mov
cmp
call
xor
pusha
ja
jmp
push
sbb
sbb
jge
cmpsb
mov
cld
xchg
das
xchg
mov
aad
sbb
dec
mov
or
call
ret
rcrl
mov
jl
clc
insl
cltd
xor
fldenv
mov
not
xchg
lret
or
mov
mov
dec
test
push
movnti
out
cmp
push
inc
mov
aad
push
loopne
sti
mov
mov
mov
xlat
js
fsubl
ss
and
daa
mov
mov
cmp
arpl
push
pop
cmc
pop
cli
xchg
or
in
cltd
jne
clc
fistl
insb
aam
popa
sbb
and
out
or
push
dec
add
cmpsb
fsub
pop
push
pusha
pop
push
rorl
cmp
push
jbe
int3
rolb
sub
push
iret
mov
bound
ret
inc
jne
in
push
test
xchg
icebp
das
jns
lea
pop
pop
or
pop
jb
pop
pop
jl
push
or
popa
in
aad
mov
cmp
mov
dec
cs
in
loop
add
jp
cmpsl
cli
ffreep
mov
lea
adc
into
outsb
cmpsl
aam
xor
cmc
and
push
jo
dec
pop
popa
cmp
add
fistl
sub
mov
fisttpl
lcall
js
mov
dec
mov
das
mov
ret
adc
mov
pop
xlat
lods
mov
adc
imull
cmpsl
out
lds
push
sub
jl
cmpsl
pop
bt
pusha
ja
mov
mov
push
aam
int
in
dec
pusha
test
ds
adc
sahf
test
call
dec
js
push
or
bound
xlat
dec
xor
stc
push
pop
sub
push
pop
dec
xchg
outsl
mov
adc
mov
addb
push
inc
cmpsb
mov
aam
les
lods
fwait
cli
xchg
mov
sbb
add
xor
jmp
sahf
fdivl
mov
cmp
cli
pop
out
mov
or
add
mov
lret
add
push
dec
inc
fdivs
cmp
push
arpl
push
push
xchg
dec
daa
add
dec
and
push
ja
push
xor
shll
or
pop
dec
cld
xchg
mov
or
stos
mov
pop
inc
dec
or
sub
xlat
sbb
scas
in
mov
lcall
iret
ret
adc
push
js
jl
mov
adc
insb
push
leave
aam
scas
data16
mov
loopne
mov
loop
add
pusha
cltd
pop
icebp
adc
loopne
into
xor
test
or
sub
push
lods
sti
mov
mov
repnz
adc
dec
in
mov
push
sahf
int
cmp
and
push
sub
ds
sbb
cmp
jb
aad
jnp
fldlg2
push
mov
aam
push
lcall
jne
insb
jp
cmp
jo
xchg
dec
add
add
stos
jg
aaa
push
pop
test
adc
add
lods
adc
mov
jmp
pusha
and
lods
mov
aam
rorb
daa
insl
bnd
jecxz
push
pop
pushf
jle
adc
shl
cli
enter
sti
mov
jecxz
xlat
mov
shll
xlat
je
leave
adc
mov
popf
imul
mull
aam
ret
jb
rclb
scas
rcrb
xor
mov
cltd
icebp
lds
leave
adc
or
mov
inc
xchg
aam
nop
xlat
jge
es
mov
pop
sub
adc
fbld
dec
pop
pop
fsts
xor
cmpsl
xor
aaa
xlat
and
into
inc
push
sub
mov
push
mov
xchg
in
mov
lock
mov
pusha
jno
inc
out
mov
jbe
xlat
or
dec
sbb
mov
jmp
test
cld
add
rolb
scas
clc
out
push
xchg
cmpsl
shrb
sbb
and
fisttps
jmp
adc
leave
mov
add
popa
mov
in
icebp
or
paddq
jnp
push
sbb
loope
mov
add
jge
pop
add
xchg
cmc
sub
shr
mov
test
xor
dec
jmp
insl
pusha
sub
mov
enter
jne
aas
loope
repnz
xorl
sub
xchg
pushf
aad
pusha
mov
sub
inc
pop
cmp
out
es
mov
sbb
stos
dec
in
movsb
push
push
dec
pop
int3
pop
outsl
mov
arpl
pop
jns
push
addr16
pop
add
std
pop
xlat
adc
test
push
add
mov
or
xor
mov
stc
or
stos
rolb
out
jo
bound
fisttpl
mov
ss
jb
test
jg
xchg
pop
jge
pop
adc
lods
mov
aam
cmc
mov
mov
add
cwtl
or
fs
push
or
insb
leave
sub
out
fs
add
dec
jge
mov
out
gs
inc
ljmp
add
sub
jnp
aad
mov
push
rcrl
addl
pop
imul
in
mov
add
sbb
bound
aas
sahf
pop
xlat
fsub
lods
pop
add
and
dec
xchg
cmpb
push
jp
pop
sbb
cmc
jno
fs
hlt
mov
push
das
adc
xor
push
into
fcmovnbe
int3
mov
adc
or
mov
aaa
cmp
aam
jnp
jne
or
in
mov
xor
sbb
aad
fiadds
pop
sbb
jb
sub
jns
into
add
cmp
pop
gs
mov
jne
pop
add
adc
in
cld
jl
cld
pop
int
pop
and
sti
es
pop
inc
js
cmp
mov
mov
insl
push
and
stc
movsl
popa
mov
push
pop
clc
popa
pop
pop
lret
sbb
sub
sub
adc
jle
sti
or
out
fcmovbe
mov
or
mov
inc
mov
pop
clc
stc
stos
fldenv
lds
test
mov
pushf
mov
xorb
dec
inc
leave
test
push
push
push
lea
push
pop
mov
movl
pushf
pop
xor
cmpsb
pushf
aad
sub
mov
mov
ficoms
sbb
enter
scas
inc
xor
in
sbb
xchg
or
sbbl
or
lret
add
adc
pop
jne,pn
xchg
mov
out
stc
dec
xchg
mov
jle
xchg
jb
and
pop
aam
and
push
mov
and
pop
and
xor
andb
xchg
add
scas
inc
arpl
ja
sub
divl
into
pop
inc
insb
test
mov
or
imull
xlat
mov
cmp
in
mov
fsub
sbbb
mov
jecxz
stos
cmp
push
cmpsl
mov
ret
cmpsl
xchg
mov
insb
popa
cltd
lcall
mov
scas
sbb
lods
pusha
test
cmc
add
icebp
adc
lds
into
rcl
adc
xor
je
mov
mov
shl
sub
push
into
std
cmc
push
cmp
imul
test
cmp
in
xor
sbb
and
fldcw
mov
cmp
add
sbb
pop
fldt
pop
popf
jbe
mov
fisubs
fdivs
rolb
leave
pusha
sbb
aas
pop
cmp
jb
inc
or
jbe
pop
hlt
adc
and
icebp
mov
jne
adc
fwait
jae
mov
mov
daa
rclb
mov
add
jg
pusha
idivl
inc
and
int
aad
outsl
push
or
jmp
jnp
sub
fst
movsb
bound
stos
cld
inc
fists
push
mov
sbb
lds
movsb
xchg
mov
push
cmp
push
aad
repnz
sub
jg
shld
mov
push
or
out
mov
sub
push
sti
add
inc
push
lret
movsl
pop
outsl
mov
dec
aam
mov
stc
icebp
lea
mov
jg
or
sbb
push
aaa
push
add
int
jecxz
and
rcr
ret
xchg
out
call
push
pop
cltd
iret
int3
cltd
jmp
xchg
bound
pop
cmp
popf
stos
loop
push
data16
aam
imul
aaa
movsb
xchg
pop
push
aas
add
add
aam
dec
mov
clc
push
push
aaa
xchg
repz
inc
fidivrl
mov
fwait
xchg
push
sbb
xchg
xchg
mov
stos
jmp
add
jp
dec
jl
lret
pop
mov
fwait
leave
nop
adc
xchg
inc
movsl
mov
insb
adc
pop
sbb
outsb
jne
jl
mov
adc
add
nop
pop
ja
movsl
cmpsb
in
and
lods
aaa
sub
cmp
es
fsqrt
add
arpl
xlat
xor
pop
popf
and
push
dec
out
mov
jl
or
push
jns
icebp
insb
add
fistpll
lods
pop
push
popa
cmp
jnp
mov
jbe
jbe
pop
adc
mov
int3
pop
in
test
and
add
adc
movsl
stos
lahf
cmp
add
sti
inc
fildll
scas
arpl
xor
into
jmp
imul
mov
aad
inc
mov
cwtl
sbb
loop
xlat
fistl
fisttpl
int
pop
movsl
dec
into
pushf
jg
pop
dec
xchg
das
inc
gs
dec
jmp
enter
or
lock
shrl
cmpsb
insb
mov
sbb
mov
lds
add
mov
dec
jno
popa
insl
xchg
aam
clc
mov
iret
xor
rep
rcrl
xor
cmp
aad
faddl
mov
lret
jae
fisttps
pop
das
inc
insl
fwait
mov
ret
jle
ja
js
femms
jb
sbb
arpl
mov
sub
jo
leave
sahf
stos
add
test
pushl
clc
xchg
dec
cmc
dec
push
lock
xlat
repz
xchg
jge
or
jmp
cmp
nop
sub
push
jnp
push
rcrb
mov
sbb
hlt
aam
aam
cmpsl
sti
fwait
movsl
jns
fs
stc
and
cmp
imul
or
adc
rcrb
jg
gs
add
addr16
sbbl
lds
arpl
mov
xor
push
addl
push
adc
mov
aam
add
jmp
adc
js
inc
hlt
pushf
add
or
test
shlb
xlat
cld
push
stos
ret
add
in
ret
pop
cld
jge
jbe
xchg
adc
std
jle
or
daa
inc
jnp
sub
pop
xor
add
aad
add
in
movsl
es
xchg
call
test
xchg
cmc
imulb
or
xor
pop
mov
sbb
jae
add
add
adc
pop
sbb
call
push
inc
mov
or
js
stos
gs
pop
incb
mov
cmp
ljmp
enter
fmull
mov
adc
cs
adc
add
jbe
push
pusha
aam
outsb
test
dec
add
out
xor
jne
mov
push
push
fs
lcall
lock
loop
push
sti
inc
in
dec
lahf
fistps
pop
cmp
jmp
push
rolb
pop
cmpsl
popf
push
jp
dec
mov
cmp
punpckhwd
push
aaa
sbb
jo
sub
xchg
in
push
fidivs
stos
mov
inc
or
aaa
dec
pop
jp
sti
mov
pop
inc
mov
std
add
pushf
ja
out
or
xchg
lods
cld
add
mov
jmp
jns
push
or
xchg
xchg
xchg
push
lret
sbb
aam
lock
cmpsl
loope
aas
cmp
inc
into
and
push
jge
fwait
push
pusha
pop
jp
hlt
cmpsl
out
imul
loopne
adc
out
btc
lea
push
xchg
inc
sub
orb
and
notb
push
leave
push
adc
lds
add
rolb
xor
loopne
rorb
ljmp
data16
mov
push
mov
loope
mov
sti
inc
xchg
push
mov
js
aad
cli
lods
fidivl
inc
sub
mov
xchg
dec
mov
inc
push
testb
pop
outsl
icebp
adc
orb
add
mov
lret
add
lock
ljmp
or
cld
sbb
xor
rolb
xor
sahf
outsb
iret
vpsrlw
pop
sub
fimull
jl
push
mov
push
popf
rol
xchg
mov
loope
stos
cmp
dec
ret
mov
mov
dec
adc
gs
loope
adc
pop
adc
mov
les
mov
mov
or
bound
xor
jns
sub
or
call
push
mull
popf
imul
and
sahf
in
add
sti
cltd
mov
dec
repnz
push
mov
clc
adc
outsl
cli
aam
jae
repnz
add
insb
mov
sub
jle
jp
push
jecxz
aam
mov
fldt
test
in
inc
es
jnp
mov
add
insl
filds
scas
xchg
pusha
sub
mov
mov
adc
xchg
mov
cmc
or
sbb
sub
dec
mov
in
cs
jbe
mov
outsb
xor
dec
repnz
std
cmpsb
out
cmpsl
pop
jo
cltd
aad
cmc
leave
dec
xor
arpl
or
xlat
cmp
and
xchg
jno
cmp
cmpsb
push
int3
add
mov
xchg
cwtl
xchg
lods
xchg
inc
mov
cld
bound
cmp
add
hlt
add
add
enter
pop
stc
loope
dec
fstl
sub
push
sahf
out
mov
inc
scas
pop
aad
xchg
nop
ja
dec
lds
add
imul
sbb
inc
popf
daa
pop
mov
sarl
xor
push
mov
jl
sub
pop
rcll
std
xchg
fdivrs
mov
aam
jecxz
ret
jae
dec
mov
scas
add
sub
fimull
sbb
mov
addr16
pop
sbb
sbb
add
aad
add
xor
test
aam
mov
mov
and
jmp
ret
jbe
iret
xor
das
inc
test
js
fldt
lds
mov
pusha
repz
push
mov
or
aam
mov
andb
loop
xchg
xchg
lock
out
push
dec
inc
cmpsb
xchg
pop
pushf
sub
das
bnd
inc
mov
xchg
sbb
in
jno
fwait
sub
in
or
xchg
and
leave
ret
mov
push
and
pop
push
xchg
push
das
add
cmp
add
and
movl
test
xchg
mov
pop
inc
loope
jno
pusha
mulb
inc
pop
idiv
add
sti
cmp
inc
js
pop
or
jb
mov
shr
in
leave
jp
in
xchg
jmp
mov
jns
cmp
je
and
stc
and
or
gs
std
push
mov
jge
mov
shlb
mov
and
out
insb
das
fsubl
icebp
int
nop
and
dec
cmp
pop
push
jnp
enter
lahf
jns
imul
xlat
and
cmpsb
orl
ss
xchg
jg
sarl
in
iret
adcl
mov
jecxz
aad
push
xchg
insb
add
xadd
cli
xchg
stos
insb
aad
sbb
test
cs
dec
sahf
das
xchg
sbb
mov
mov
inc
data16
xor
mov
sbb
fbstp
jo
icebp
xchg
fildll
jns
outsb
rolb
stc
cmc
jae
rcrb
test
mov
or
sub
cmp
fwait
mov
cmp
fcoms
add
mov
fdivr
loope
dec
pop
pop
imull
std
imul
in
xchg
mov
push
int
int3
jno
popf
arpl
les
and
int3
icebp
pusha
shl
jo
iret
pushf
jg
scas
and
int
add
mov
xor
cltd
in
std
scas
fnstcw
loop
push
int
dec
imul
iret
les
push
dec
movb
mov
mov
add
mov
pop
inc
push
cmp
push
pop
sti
or
idiv
andb
cmpl
jmp
or
adc
in
aam
add
test
xchg
mov
push
push
fldenv
push
std
jne
data16
and
jno
popf
pusha
or
pop
hlt
lret
adc
or
add
popf
cmc
add
fildl
ret
xchg
outsb
xchg
aad
in
imul
jnp
cs
or
adc
lods
imul
inc
mov
push
ljmp
pop
andb
add
je
sub
daa
lea
mov
xchg
or
add
push
cmpsb
add
push
pop
into
add
or
stos
mov
xchg
push
dec
jge
icebp
sbb
xor
xchg
inc
jo
dec
movl
sub
inc
lds
pop
add
ljmp
pop
push
dec
test
mov
xchg
cmpsl
jno
push
push
sub
inc
rol
and
loop
or
mov
popf
ja
mov
lea
or
add
fidivs
shll
cmp
dec
xchg
aam
loope
and
cmpsb
stos
mov
mov
daa
cmc
jmp
xor
sbb
cmc
adc
test
sahf
mov
sar
mov
and
xchg
add
xlat
js
or
in
mov
adc
dec
pop
sar
push
subl
add
jmp
stc
in
push
xchg
adcl
aad
andb
xchg
mov
xchg
cmc
arpl
and
cs
pop
jns
jl
inc
push
push
sbb
xchg
jge
mov
dec
rcrb
adc
xchg
push
pop
add
in
cli
aam
fsubr
out
test
daa
xchg
ret
nop
hlt
cmp
or
fcoms
push
es
cmp
lea
insl
mov
push
mull
sahf
sub
cmp
gs
loopne
aad
testl
mov
push
mov
jo
fs
sub
int
add
stos
mov
cmpsb
mov
add
sbb
div
cmp
mov
or
std
std
jl
push
adc
out
jbe
sbb
mov
cmp
scas
cmp
les
adc
imul
pop
jne
mov
add
loopne
js
add
gs
mov
ds
data16
sbb
out
mov
cmp
test
sub
daa
fsubrl
fcmovnu
push
movsb
jnp
sbb
cmpsl
add
push
je
sar
fs
mov
xchg
xchg
pushf
cmp
loop
out
fistpl
pop
xchg
lret
cmp
ret
xor
sbb
fbld
cmp
cmp
sahf
aam
mov
popf
fcmovnbe
pop
aad
and
inc
arpl
jb
add
adc
inc
test
adc
test
in
movsl
add
mov
pop
cmp
mov
jne
dec
fwait
sbb
mov
test
pop
daa
jne
punpckldq
bound
aam
lods
mov
test
inc
incb
icebp
mov
add
fs
pop
or
scas
repnz
adc
outsl
mov
mov
jb
scas
inc
cmp
fnsave
jp
insb
mov
mov
adc
jecxz
sbb
stc
xchg
xor
sub
mov
push
inc
add
adc
pusha
jge
imul
jle
inc
mov
mov
pusha
ds
popf
mov
sti
repz
cmpb
data16
into
add
stos
insb
inc
mov
lret
sbb
mov
aad
mov
arpl
frstor
aaa
sbb
inc
mov
lock
add
cmpsb
push
gs
xchg
add
xchg
outsl
dec
add
sarb
vpaddsb
stos
inc
test
pusha
sahf
and
jnp
add
test
sub
insb
js
jo
add
push
outsb
fs
xchg
xchg
add
loope
gs
jg
mov
xchg
outsb
mov
sbb
jae
xor
call
pop
scas
inc
add
cmp
jmp
pusha
je
jo
insb
aam
jo
lret
icebp
push
sub
enter
mov
inc
lods
gs
jmp
js
outsl
jnp
jb
stc
mov
cmp
mov
pusha
mov
inc
loope
fbld
and
sbbl
inc
xchg
rcl
sbb
nop
rcrl
testb
ss
sub
loopne
pop
sahf
jne
adc
popa
mov
sbb
push
cltd
sti
cwtl
in
int3
ret
orl
sbb
imul
xchg
push
push
add
dec
add
mov
nop
fcmovnb
xor
inc
jno
movsb
int
aad
add
jno
cli
sub
sarb
sbb
sub
adc
shr
int3
or
in
mov
ss
jbe
dec
loope
add
jl
repnz
jle
pop
mov
xor
ret
lahf
loop
call
lea
dec
fistl
xor
inc
mov
jno
in
movsb
in
dec
add
push
jge
cmc
mov
mov
jg
icebp
xlat
sbb
arpl
js
cmp
jo
dec
fistl
mov
out
bound
push
push
dec
xlat
popa
jo
adcb
sbb
xchg
mov
popf
mov
insl
mov
shr
mov
xchg
adc
cwtl
stos
mov
movsb
dec
das
mov
mov
push
stos
inc
jmp
push
sti
adc
mov
mov
inc
pop
hlt
add
jb
enter
sub
jp
arpl
push
adc
mov
xlat
outsl
stos
cmp
cmpsl
in
mov
mov
inc
outsl
xor
fimull
popf
loopne
push
sub
inc
cs
and
sub
mov
push
push
push
mov
roll
inc
inc
jbe
loopne
or
xlat
and
push
mov
inc
stc
out
cli
sub
jl
add
xchg
arpl
sbb
inc
mov
add
or
push
pushf
and
aam
cli
shll
roll
push
shrb
ret
sbb
adc
repnz
clc
xor
add
aaa
jno
inc
in
and
pusha
sbb
fcoms
add
ds
in
and
out
pop
arpl
xchg
add
movhps
mull
movsb
cmpb
out
aad
out
mov
lods
test
fistps
enter
jbe
lds
movsb
mov
lock
movsb
xchg
adc
mov
das
mov
shrb
stc
mov
adc
xchg
cmpsl
cmc
jae
dec
lcall
push
fldl
push
xchg
push
xchg
ja
jl
ja
add
mov
xchg
jb
jae
fstl
adc
add
je
adc
mov
orl
dec
inc
add
js
subb
xchg
adc
push
xchg
dec
push
and
cmp
leave
push
es
push
sub
adc
mov
jp
add
xchg
cmp
inc
ja
das
jmp
mov
ss
add
add
push
mov
mov
sti
pop
inc
mov
stos
xchg
ret
aam
jl
jns
push
je
hlt
mov
mov
push
std
add
das
xchg
pusha
rcll
jg
roll
aas
jp
sahf
fs
lahf
pop
cmp
das
jno
inc
js
loop
inc
dec
mov
icebp
dec
inc
inc
add
cmpsb
dec
dec
cwtl
paddq
aaa
sub
adc
cld
or
lret
aam
cmp
or
sti
imul
fmuls
adc
aam
xchg
fisttps
pop
lea
lret
inc
addb
lret
rcll
test
mov
shll
js
sub
bound
aam
push
mov
jb
mull
fnstcw
mov
popa
mov
mov
jl
push
mov
int3
loop
xchg
int
arpl
movsl
pop
aad
cli
iret
or
mov
ljmp
aam
lcall
mov
aas
andb
xchg
stos
shll
xchg
push
push
or
out
mov
xchg
fwait
mov
add
and
sarb
std
xchg
mov
sahf
notl
mov
imul
fistl
pop
inc
and
repnz
dec
sar
adc
push
add
cli
and
jge
imul
add
xchg
test
into
cli
ficompl
push
mov
or
shll
mov
pusha
popa
fs
pop
inc
test
out
pusha
sbb
cmp
aas
and
iret
imul
sti
pusha
test
jae
sbbb
out
jge
add
loop
mov
stos
mull
mov
lret
inc
add
pop
stc
shll
sahf
xor
int3
push
xchg
add
sbb
in
bound
mov
js
in
pop
push
push
cmpsb
pop
repz
je
and
xor
daa
xor
pop
mov
mov
les
pop
sbb
int3
xchg
xchg
stc
mov
fsubrl
fcomps
inc
or
popa
or
inc
add
bound
insb
add
repz
mov
fldt
mov
xlat
add
jg
push
push
sub
xchg
jns
aam
mov
enter
mov
add
mov
aad
dec
dec
ss
sbb
or
cltd
stos
sub
clc
aam
out
das
test
adc
in
xchg
lahf
shlb
add
sahf
stos
arpl
xchg
loop
mov
fwait
jb
mov
jbe
and
push
rcrl
mov
aam
add
incb
outsl
xchg
int3
sub
cmpsb
and
sbb
call
aad
jg
mov
mov
dec
pop
fwait
pop
aad
mov
pop
push
pop
or
sub
bound
jmp
arpl
mov
mov
repnz
inc
mov
adc
cwtl
inc
repz
adc
test
or
clc
stc
frndint
jnp
pop
mov
xlat
mov
and
xchg
aad
sahf
and
inc
in
ret
mov
popf
aam
lods
inc
lcall
dec
and
jmp
add
add
xor
cmp
stos
lcall
and
lahf
int
das
jmp
orb
aad
mov
pop
sub
mov
adc
add
push
loope
outsb
or
xchg
ret
ficomps
push
bswap
inc
aam
cltd
ja
outsb
sub
jmp
xor
fsubl
aam
lea
cmp
int
and
add
sub
xchg
stos
mov
mov
dec
xchg
add
jno
jno
jne
sbbl
cld
sub
xchg
adc
add
cmp
add
add
xchg
aas
cmp
mov
mov
cmpsl
dec
dec
scas
or
insl
jns
cmp
adc
sahf
nop/reserved
push
and
out
dec
push
push
push
ror
fcompl
bound
dec
and
daa
daa
mov
push
es
and
shr
cmp
xchg
push
cltd
or
add
jl
imul
mov
xchg
dec
pusha
aad
movsb
mov
jmp
or
setg
push
fildll
xchg
outsl
std
pop
arpl
xchg
xchg
into
cmpb
or
xchg
xchg
add
mov
add
inc
and
push
ja
scas
adc
aam
inc
inc
push
movsb
rcl
inc
flds
mov
jmp
push
dec
shlb
inc
loopne
add
push
pop
jle
dec
cmp
mov
adc
dec
push
mov
lea
mov
mov
cmp
daa
aam
mov
cld
pop
rorb
or
dec
pusha
mov
mov
and
and
pop
loope
sbb
aaa
jl
shlb
ror
stos
mov
cmp
jo
mov
sbb
repz
mov
jns
sub
push
cli
cmp
cmp
daa
cli
aaa
leave
punpcklbw
pop
jle
mov
sub
lret
js
in
mov
int3
xor
ss
jne
bound
pop
push
les
int3
add
stc
cli
cmp
ja
or
cmp
mov
stc
roll
mov
in
test
fcomps
dec
cmpb
xor
xlat
xlat
mov
xor
mov
fadd
neg
jl
fs
xchg
loopne
call
xchg
stos
mov
pop
mov
adc
mov
xor
mov
and
mov
mov
push
clc
cmp
cmp
pop
test
cmpsl
mov
mov
add
pop
adc
mov
mov
dec
xlat
call
inc
movb
sub
std
jo
hlt
or
and
add
dec
pop
cli
cs
push
sbb
add
pop
scas
pop
into
jo
mov
sarl
jmp
xchg
lcall
stos
cltd
adc
and
pop
rorb
out
add
sub
daa
les
pop
call
addr16
pop
fs
hlt
aas
and
xorb
sub
aad
sbb
cmp
mov
sub
lahf
dec
jmp
or
or
cs
out
xor
cmp
cmpsl
mov
jecxz
mov
loope
and
add
js
ljmp
das
mov
daa
pop
in
sub
repnz
jmp
mov
dec
test
jnp
mov
sbb
cmpsl
mov
mov
lea
jb
sub
loopne
cltd
sbb
loopne
int3
jg
ljmp
inc
lods
nop
add
sbb
and
pop
cmp
movsl
stos
je
stos
pop
jecxz
mov
arpl
push
adc
aas
jge
inc
sub
mov
adc
shll
pop
adc
insb
test
int
data16
adc
xchg
nop
je,pt
sbb
adc
jle
cmp
scas
lret
out
cmp
mov
incb
ss
arpl
push
jns
jnp
mov
pop
add
mov
stos
pop
mov
push
fsts
mov
rorb
cwtl
scas
jge
cld
and
sub
pusha
rolb
lock
add
cs
add
lods
movsb
bound
fmull
test
leave
push
aam
pop
ss
mov
sub
pushf
mov
xor
and
sahf
xor
add
fs
cli
xchg
lods
sti
mov
out
and
fdivrl
clc
mov
pusha
arpl
xchg
inc
aad
hlt
shrl
cmpsl
cltd
mov
cmpl
mov
das
mov
gs
ljmp
push
xchg
roll
and
lret
pop
addr16
and
inc
adcl
and
mov
jnp
dec
jbe
mov
sub
mov
js
jle
xchg
mov
jmp
pop
test
push
mov
cwtl
mov
lahf
and
push
jmp
fnsave
nop
and
pop
push
aam
xor
cmp
pusha
inc
mov
adc
pop
sub
shlb
adc
jns
mov
xchg
aam
lcall
mov
lods
adc
jl
unpckhps
in
mov
iret
lcall
aas
mov
add
icebp
mov
push
inc
xlat
sub
outsb
mov
push
cmp
lods
xlat
pop
and
xor
aad
out
shlb
mov
mov
cmp
add
sti
icebp
adcl
mov
dec
outsl
push
aam
mov
sti
xchg
cld
cmc
and
movsb
outsl
out
push
mov
inc
or
outsl
xor
adc
add
mov
add
and
xchg
jge
pusha
pop
xor
pusha
in
cmc
repz
sahf
or
pop
and
lcall
mov
mov
out
int3
xchg
jg
out
push
mov
pop
test
and
pop
xchg
dec
ret
dec
lahf
xor
aam
inc
or
cmp
inc
scas
push
jg
rcrl
ret
mov
lock
lock
out
sub
inc
cwtl
imul
aam
das
pusha
and
sbb
out
ret
pop
gs
mov
stos
sub
nop
mov
mov
testl
sbb
xlat
loope
sub
push
imul
xor
dec
jnp
lods
sbb
inc
inc
roll
jg
mov
push
fisubs
pushf
stos
rclb
pusha
mov
fbld
mov
dec
mov
add
mov
rorb
push
add
aas
xchg
xlat
and
mov
pop
jns
add
push
negb
add
and
outsb
mov
inc
aam
mov
xchg
xor
mov
cli
jno
xor
jp
aad
jg
sub
leave
imull
xchg
inc
adc
mov
or
test
dec
mov
outsb
lret
and
dec
aam
jae
pusha
pushf
add
lcall
push
sbb
adcl
fmulp
xchg
cmc
repz
fwait
adc
add
cwtl
icebp
push
loope
add
je
mov
mov
and
jle
inc
add
popf
pop
add
inc
shr
add
hlt
scas
push
enter
push
mov
mov
mov
add
fcmovnbe
pusha
adc
lods
xchg
cltd
aam
adc
jecxz
mov
bound
pop
aad
addl
lahf
mov
pop
imull
lds
aaa
es
xor
shrb
lds
cmc
clc
mov
pusha
mov
jbe
rcrb
push
cmpsb
push
dec
mov
xor
adc
shr
mov
add
outsb
add
fisubl
pop
fmuls
cmp
in
adc
dec
xchg
loope
pop
test
in
insb
mov
adc
pop
out
adc
push
adc
xor
mov
lcall
pop
pusha
stos
push
xchg
dec
in
mov
stos
rorl
into
add
jb
cmp
add
pusha
pop
pop
mov
lcall
cwtl
jae
into
fs
pusha
lahf
loop
mov
aad
inc
push
pop
cmp
pusha
aad
imul
aaa
into
xchg
lret
iret
enter
xchg
cli
adc
mov
mov
push
or
inc
pusha
ud2
mov
daa
cmp
pop
call
add
adc
sbb
in
adcl
jmp
xchg
pop
cwtl
adc
int
xorl
pop
mov
outsb
loop
aaa
mov
inc
shrb
rcr
adc
and
mov
jnp
jno
fs
add
cmp
add
fnstenv
mov
sbb
xchg
aam
test
pop
add
inc
dec
cmpsl
lcall
cs
mov
jno
xchg
xchg
test
pop
icebp
jecxz
sub
sbb
lods
sbb
add
mov
ljmp
out
adc
incb
cmc
push
ret
xor
clc
mov
sbb
pop
aad
cwtl
dec
jbe
and
mov
xor
addl
lcall
test
add
loopne
out
scas
mov
mov
jecxz
or
movsb
mov
outsb
inc
aad
and
testl
add
loopne
fcomip
jle
xchg
sti
mov
shrl
rclb
cmpsl
and
mov
sbb
cmp
and
xchg
in
jae
push
push
shll
push
mov
mov
push
xor
sbb
jecxz
loopne
xchg
pop
or
nop
int
mov
lahf
aad
repnz
adc
sbb
fwait
jnp
je
add
fnsetpm(287
push
enter
mov
mov
fildl
add
mov
push
add
sbb
mov
pop
scas
xlat
pop
or
mov
pop
dec
cmp
dec
xor
pop
jp
subl
push
lods
sti
mov
inc
mov
adc
orb
jl
stos
add
dec
add
fdivs
jmp
nop
jge
xlat
pop
mov
jns
mov
cmp
in
mov
in
mov
push
and
mov
xchg
mov
call
cmp
test
pop
pop
movsl
mov
push
bound
loop
pop
inc
in
push
mov
setae
loop,pn
sbb
cmpb
inc
dec
inc
mov
jno
jmp
enter
jl
scas
cmp
scas
or
mov
movb
sti
and
ret
xchg
add
xchg
mov
loope
insb
mov
into
adc
shrb
xrelease
fists
push
xor
jae
enter
frstor
push
in
add
mov
and
aas
mov
mov
gs
fildl
out
ret
aam
lret
cwtl
sbb
pop
in
test
inc
mov
mov
rolb
and
popa
repnz
sub
inc
push
push
jle
mov
stos
testb
fdivs
jp
cmp
adcb
testl
xlat
pop
jne
adc
outsb
sarb
repnz
lods
mov
jmp
xor
pop
xchg
lock
mov
xchg
adc
out
add
shl
sub
nop
sbb
imul
addb
into
ss
dec
jnp
jb
pop
dec
push
add
lods
dec
fs
test
mov
fmull
outsb
mov
cltd
push
pop
imul
or
fnsave
test
aad
fwait
call
jo
roll
je
add
enter
jne
repz
movsb
mov
decl
add
repnz
add
cld
out
icebp
push
rcll
icebp
out
and
aam
inc
cmp
cmp
and
aaa
daa
sbb
xchg
add
cmp
sbb
mov
push
mov
loop
xchg
add
data16
imul
add
jo
push
ss
sub
sbb
inc
pop
fwait
scas
sub
cmc
ficomps
jno
repz
push
push
mov
mov
mov
jge
inc
sbb
jle
cmp
xchg
push
outsb
jp
lea
xor
add
mov
push
or
push
add
jno
aam
jne
mov
repnz
mov
jmp
insl
xor
xchg
mov
pop
xchg
ret
mov
aas
ret
add
pusha
imul
sub
and
and
mov
aas
shlb
sti
pop
ss
subb
mov
mov
push
sbb
adc
mov
out
and
dec
adc
sub
mov
jnp
cmpsl
data16
sbb
adc
data16
mov
loop
arpl
loop
add
cmp
adc
pop
dec
mov
stos
mov
dec
cmc
xor
xor
in
mov
and
nop
lods
cwtl
sti
pop
int
decb
call
int3
pusha
and
adc
dec
fs
scas
movsl
arpl
adc
mov
push
test
add
xor
shll
incl
or
cmp
mov
sti
pop
call
and
in
fwait
shrb
xchg
sub
cli
int
gs
mov
into
dec
add
sbb
std
mov
push
fsubrp
mov
cmp
pop
mov
stos
test
jl
pusha
jno
test
mov
dec
nop
imulb
sahf
ljmp
shlb
pop
outsb
sub
push
xchg
mov
test
stos
add
adc
test
mov
cmp
subl
mov
or
cmp
mov
repz
xchg
push
fiaddl
inc
jmp
mov
mul
pop
leave
daa
sahf
in
rorb
addr16
rcrb
scas
pop
fstl
in
into
cltd
add
data16
push
lahf
jo
xlat
add
push
es
or
lods
fdivrs
imul
scas
cltd
mov
mov
adc
mov
sbb
sub
sbb
addr16
xchg
lret
cltd
mov
out
movsl
int
lcall
inc
cmp
xor
ss
add
xor
loope
lods
cwtl
andl
xlat
inc
mov
mov
lahf
test
dec
push
cmp
fisttpl
jns
and
sbb
inc
jnp
das
pop
cli
sub
fsubrs
cld
jnp
cli
addr16
lods
out
jge
mov
dec
loopne
jb
aaa
filds
mov
pop
mov
add
mov
icebp
cmc
xor
xchg
inc
mov
sub
lret
sbb
adc
into
ja
popf
les
pop
jne
xor
ljmp
adc
gs
cwtl
fwait
inc
out
sbb
int3
sbb
inc
or
adc
cli
mov
dec
outsb
outsl
mov
lahf
cmp
mov
dec
mov
jno
sbb
lahf
das
mov
pop
add
and
sbb
jl
dec
out
shlb
sbb
dec
mov
lahf
loop
ret
scas
int
pop
jns
imulb
xchg
cmpsb
mov
jmp
call
lcall
les
xchg
repz
movsb
mov
insb
jmp
add
add
mov
mov
mov
pop
and
arpl
loop
cwtl
fstl
push
loopne
cmp
pop
jl
bound
cmp
scas
mov
cwtl
icebp
pop
outsl
add
jle
sub
mov
or
pop
imul
out
dec
pushf
sub
sbb
cmp
in
cltd
cltd
sarl
mov
xlat
mov
mov
mov
repz
jnp
cmp
call
mov
mov
push
popa
and
popa
ss
test
out
adc
cmp
adc
add
pusha
xchg
mov
inc
in
aad
ss
test
insl
cmp
inc
fidivl
mov
int3
add
pop
pusha
fildll
pop
aad
lcall
inc
mov
clc
push
sub
push
outsl
je
ljmp
sub
adc
sbb
call
and
fs
lock
inc
cmp
daa
or
pushf
sub
sbb
adc
cmpsl
aad
xor
sub
imul
xchg
icebp
push
ret
push
xchg
cltd
inc
mov
pushf
cmp
outsl
aam
pushf
stos
push
push
mov
cmp
subb
mov
rolb
adc
mov
imull
xchg
sbb
cltd
sub
pusha
push
imul
mov
jl,pt
push
mov
push
ficompl
sub
cmp
sbb
cltd
pusha
mov
mov
fldl
cld
xor
or
and
cltd
jg
push
mov
inc
xchg
and
xchg
imul
fiadds
add
outsb
cmpsl
pop
sub
fbstp
mov
push
loop
out
pop
test
popa
fincstp
inc
xor
push
les
pop
pop
xchg
jmp
adc
mov
jne
lret
cs
daa
sbb
sub
dec
pusha
js
lock
pop
aad
ficoml
clc
mov
sbb
mov
mov
lcall
jbe
cmp
lea
insb
insb
test
insl
jg
or
mov
push
sbb
ficomps
imul
test
xchg
add
push
gs
ret
movsb
ljmp
xchg
int3
inc
add
add
addr16
cmc
outsb
gs
dec
pop
loopne
jno
jbe
jnp
push
cmc
ss
bound
pushf
pop
fsubrs
add
lahf
outsl
stos
jbe
orb
fimuls
sbb
aad
in
sbb
lea
out
push
xorb
xor
repnz
ret
in
pop
add
jne
divb
jl
dec
aad
cwtl
mov
pop
lahf
mov
test
in
push
dec
mov
getsec
mov
xchg
pushf
insl
sub
add
pop
dec
xchg
popa
nop
in
push
jmp
addr16
rcll
adc
test
or
xor
cmp
or
les
inc
ljmp
outsl
shll
insb
adc
jo
subb
and
xor
pop
and
pop
insl
jbe
jb
lcall
gs
sbb
shrl
inc
lahf
test
or
shlb
add
repnz
inc
inc
lods
push
push
enter
and
fucom
cmp
pop
dec
dec
mov
jnp
mov
in
mov
dec
jne
gs
dec
test
aam
insl
movsb
loope
lock
cmpsb
outsb
lds
mov
mov
mov
pusha
pop
cmc
xchg
mov
jo
add
xor
xor
lcall
jae
jmp
push
pop
mov
xor
push
xchg
cmp
lea
es
add
inc
mov
inc
cmp
and
pop
mov
cmp
and
aam
mov
mov
push
out
jno
jecxz
sti
mov
dec
aad
clc
enter
add
cwtl
std
hlt
mov
jle
pop
xor
and
mov
mov
shlb
jp
and
push
mov
mov
shrb
jnp
sub
or
daa
movsb
add
hlt
xor
inc
insb
add
out
jp
push
mov
cltd
ljmp
out
fsubl
push
mov
sub
mov
enter
or
mov
dec
loope
add
mov
fwait
testl
xor
xchg
add
xchg
jns
or
jge
pop
aas
out
ss
test
cltd
mov
aam
jg
in
in
pop
out
loop
jbe
xchg
aam
add
outsl
cmpsb
data16
lahf
and
push
inc
daa
ds
xor
add
xor
in
sbb
aad
call
push
jle
inc
jecxz
mov
adc
mov
pop
fs
popa
lcall
adc
adc
bound
sub
cmc
imul
mov
and
mov
inc
add
int
mov
mov
lock
and
sbb
shlb
or
or
jb
mov
cmp
hlt
mov
dec
push
xor
sbb
orl
jg
js
pop
std
mov
xchg
andb
pop
lea
push
inc
pop
and
and
add
adc
ss
popf
sbb
lret
aam
enter
and
ss
repnz
lock
lods
sbb
jnp
ljmp
ljmp
push
bnd
push
dec
hlt
cmp
lock
add
es
faddl
adc
cmp
dec
ja
inc
xchg
lret
dec
inc
out
loope
inc
leave
jmp
push
pop
std
xor
mov
sbb
aad
and
mov
push
xor
clc
mov
xchg
sub
jb
dec
jne
in
ret
xor
enter
mov
inc
mov
pop
adc
enter
iret
in
adcb
and
jmp
sbb
in
fmul
mov
loope
andb
adc
bound
jg
dec
pop
mov
sbb
in
fisttps
out
fwait
pusha
loope
std
sbb
push
and
and
subl
xchg
addb
add
push
xlat
mov
jns
pusha
mov
add
sub
dec
das
jl
jl
add
xchg
sbb
sub
imull
call
jle
sbb
cmc
pop
clc
mov
push
push
inc
fdivp
fdivl
or
std
mov
inc
mov
aad
fidivl
xchg
scas
cltd
xchg
cmpsl
je
leave
pop
imul
aas
add
pop
dec
or
loopne
fidivrs
and
aad
repz
xor
bound
mov
cmc
mov
add
movsb
sub
stc
mov
mov
pop
sahf
rcr
add
push
iret
je
cs
push
insl
and
cmp
rolb
enter
cwtl
and
popa
jge
sbb
bound
aad
dec
test
jmp
out
adc
mov
pop
ss
pop
imul
pop
add
mov
shll
cmp
pop
mov
out
pusha
ja
test
insb
shll
cmpsb
xchg
and
push
dec
test
loope
sub
test
fwait
pop
ja
push
adc
mov
jne
and
arpl
mov
mov
cmp
mov
aad
or
cli
lea
clc
xor
aas
ret
dec
jbe
repz
aam
bound
fists
jns,pt
lcall
sbb
in
ror
jmp
mov
ss
inc
call
xor
adc
push
push
jne
push
jmp
cltd
shl
xor
cwtl
mov
or
daa
push
push
icebp
push
mov
inc
or
lret
mov
xchg
xchg
test
jo
cwtl
icebp
imul
addr16
fisubs
mov
jae
mov
cwtl
pop
test
repnz
and
add
jns
push
cli
leave
adc
mov
ds
dec
cmp
push
pop
xor
pushl
inc
lahf
cld
push
lret
iret
out
lock
sub
xchg
mov
or
push
fsubrs
cmp
sub
inc
add
or
jl
loop
aam
mov
and
out
rorb
movsl
fwait
mov
jbe
jge
pop
add
or
je
push
lods
leave
lods
pop
add
cmpsb
dec
pop
and
lret
and
mov
jnp
paddw
mov
cmovns
enter
or
loopne
or
dec
pop
jge
push
imul
loop
pusha
cmpsl
das
mov
popf
outsl
inc
pop
loope
inc
out
mov
mov
sbb
push
pop
dec
and
add
sbb
insl
cmp
inc
andl
das
sub
mov
lock
out
mov
mov
out
cmp
aam
lahf
orl
mov
sub
xorl
lcall
cmp
inc
push
mov
cld
imul
sbb
ljmp
adc
cmc
adc
jl
dec
test
aam
lods
add
test
rolb
testb
sbb
add
jecxz
pop
pop
lahf
aas
aas
and
push
pop
mov
popa
inc
stc
jl
inc
in
in
mov
jno
test
or
push
ljmp
fs
into
sbb
test
aad
in
scas
xchg
insl
mov
sbb
daa
push
mov
push
add
sbb
lcall
int3
inc
ja
or
aad
jae
cmp
test
xor
mov
insb
add
and
dec
inc
add
and
mov
pop
xchg
pop
mov
adc
push
xchg
and
shrb
or
xchg
mov
cmp
xorl
mov
imul
jb
xchg
xor
test
leave
sub
stos
pop
ficomps
mov
fadds
xor
push
pop
pop
paddusw
cmp
push
aas
mov
bound
jns
aas
sbb
add
pop
mov
cmp
cmpsl
enter
push
or
addr16
cmp
or
or
xchg
mov
scas
pusha
dec
and
add
mov
mov
popf
adc
fbstp
jle
cli
mov
sub
xchg
add
mov
adc
notl
mov
xchg
inc
popa
das
stos
xchg
xchg
jl
sbb
imul
sub
fisttps
ficoms
mov
inc
lods
sub
das
cs
mov
or
mov
orb
test
cmp
or
mov
insl
in
rcl
mov
cmp
fwait
dec
in
scas
pop
mov
das
mov
sbb
mov
jge
jb
fnsave
jb
lahf
jl
subl
jbe
sub
clc
inc
pop
add
xchg
divb
mov
dec
nop
cmp
stos
loop
mov
inc
push
add
xlat
popa
xor
sbb
xor
xchg
xor
add
in
mov
push
add
cmp
fadd
mov
in
arpl
pop
aam
cwtl
xor
xor
ret
loop
fsubs
add
mov
iret
xchg
mov
movsl
loope
push
jnp
aaa
ss
jl
add
push
cld
xlat
mov
pop
cmp
pop
inc
mov
xchg
out
jge
call
push
out
in
mov
stc
cmp
xchg
iret
hlt
push
pop
pop
sti
shlb
arpl
inc
pop
add
mov
cli
mov
jl
insb
fisubl
movsb
loopne
add
jmp
imul
mov
mov
icebp
pop
aam
mov
test
pop
clc
or
ss
mov
jne
or
xlat
mov
dec
mov
sbbb
xor
xchg
jb
gs
xchg
lcall
scas
rcrl
push
jecxz
and
loop
xor
mov
or
stos
sarl
jnp
adc
and
sbb
adc
or
ja
pop
idivl
je
jmp
insl
mov
jl
outsb
cmp
xchg
xchg
int3
sbb
aam
mov
and
mov
xchg
ljmp
aad
xchg
mov
mov
scas
adc
push
push
cmpsl
jns
ja
add
int
mov
popf
loopne
cmpsb
and
push
xchg
pop
pop
mov
pop
das
subb
adc
test
sub
xor
sub
push
sub
dec
sbb
mov
inc
in
mov
add
push
jecxz
push
mov
hlt
and
repnz
addr16
inc
cmp
mov
add
pop
aaa
outsl
jge
jp
push
aad
pop
lret
pop
aas
mov
inc
sub
jle
aam
sbb
xchg
mov
shrl
loope
pop
mov
pop
push
into
test
stos
addb
adc
fsubr
pop
sahf
push
mov
cli
sbb
sarl
mov
inc
push
mov
xchg
les
mov
mov
pop
into
jns
push
std
xchg
pop
loope
jb
lods
aam
rclb
mov
ret
jge
adc
arpl
aad
pop
cmp
or
lret
xchg
lock
mov
mov
lcall
mov
pop
pop
xor
test
push
pop
shrl
pop
cmp
and
push
movsb
lret
mov
mov
push
mov
fidivrl
xchg
test
sub
cmpsb
inc
inc
negl
sub
xor
push
inc
push
mov
push
pop
mov
pusha
pop
not
cmp
cmp
mov
testl
and
sbb
mov
cmpsb
jge
xchg
inc
dec
mov
mov
stos
jl
ret
out
push
insl
insl
cmp
pop
shrb
rorb
das
add
insl
ds
xchg
inc
push
mov
mov
out
popf
sbb
jmp
and
mov
fcompl
cmp
mov
adc
ds
push
incb
mov
mov
lock
add
adc
push
arpl
push
jnp
leave
inc
aad
lret
cli
xor
mov
xchg
testl
pushf
movsl
lods
sbb
add
cmpl
jo
push
push
ret
mov
or
mov
push
jp
mov
out
adc
sub
dec
or
mov
ljmp
mov
rcrb
pop
push
sahf
mov
inc
xor
xchg
inc
leave
cld
out
pusha
push
pop
das
sahf
push
ss
jp
and
insb
add
fdivrl
and
or
jl
sub
dec
adc
int
cltd
xor
mov
dec
gs
add
mov
adc
add
cwtl
push
sub
push
popa
filds
dec
inc
or
es
pop
sbb
add
filds
cs
mov
orb
mov
fs
push
jg
sbb
arpl
pop
push
adc
push
adc
sbb
fdivrp
or
iret
cmp
inc
out
xchg
sub
lds
fistpll
loopne
aad
jnp
adc
sub
mov
leave
das
cmp
xor
xor
pusha
shl
cmp
cmp
das
dec
mov
cmpsl
bound
fildl
imul
test
adc
fsubrs
and
inc
push
pop
stc
jl
or
xlat
lret
xchg
mov
mov
xchg
je
push
rorb
lods
repnz
pop
scas
test
rcl
sbb
jecxz
popa
ljmp
repz
aad
mov
inc
data16
xchg
jmp
js
jmp
jl
pop
imul
gs
dec
in
insb
cmc
nop
fwait
or
movsb
jne
jae
out
stc
or
js
pusha
dec
pop
xchg
jg
data16
pushl
loope
push
pusha
xchg
jbe
ja
fisubs
adc
push
jb
xor
inc
je
add
fmulp
push
rcl
jns
jge
push
fstpl
aam
divl
in
add
sub
das
orl
sub
add
inc
aam
sbb
mov
mov
int
aam
jnp
add
xchg
popl
and
je
fwait
mov
ds
xchg
push
aaa
ss
add
inc
and
jecxz
lock
cmpsl
iret
lret
mov
jae
lret
fbstp
push
xor
pop
outsb
iret
stos
data16
mov
fldenv
mov
fwait
and
call
dec
pop
in
cmp
xorb
fdivl
mov
repz
mov
cmpb
mov
es
add
dec
popf
jae
xchg
jne
jne
ror
add
scas
sub
mov
dec
push
or
dec
insl
push
cmpb
jne
insb
popa
add
jae
popf
cmp
add
sar
inc
or
gs
fsubs
adc
lahf
add
push
dec
mov
outsb
hlt
push
sub
notl
add
addb
add
cmpsl
mov
ret
call
in
pop
xchg
int3
pusha
sub
mov
mov
sub
cmp
mov
sbb
fcoml
jo
cmp
pop
int
pop
cmp
add
pop
lret
add
add
push
pop
rcrl
jecxz
in
bound
jnp
pop
pop
dec
add
or
inc
mov
fwait
mov
repz
mov
push
stos
dec
sub
pop
mov
sbb
mov
roll
add
clc
sbb
rcl
imulb
aad
xor
std
outsb
mov
mov
or
andb
ds
add
cli
mov
sbb
sbb
or
in
cmp
push
rol
cmpsl
mov
sub
push
aam
icebp
add
mov
and
or
cmp
aam
xchg
test
or
inc
sbb
xor
dec
dec
pop
aam
push
mov
push
cmp
cld
shrb
push
and
mov
hlt
lea
push
add
aas
mov
push
dec
pop
sbb
dec
mov
sti
xchg
fs
out
stos
test
stc
aad
and
leave
clc
jo
cli
mov
das
xor
mov
fistl
fwait
pusha
gs
jl
ljmp
notb
scas
push
out
cmp
stc
push
pop
shrl
push
pop
cmc
and
mov
mov
andb
add
cmp
xchg
cld
leave
mov
les
add
dec
fidivrs
cmp
stos
in
fwait
stos
jmp
xchg
add
mov
lea
sbb
out
pop
aad
ljmp
das
loopne
int
adc
inc
inc
insl
lret
lcall
add
and
int
add
shll
xor
stos
jo
pop
aad
xchg
and
rorl
repz
pop
jmp
out
mov
xchg
out
inc
jno
into
fnstsw
call
es
test
adc
in
push
mov
jb
test
xor
test
push
xorl
mov
ljmp
imul
cltd
jns
push
rcrb
rorl
dec
adc
xor
hlt
imul
hlt
dec
sbb
mov
paddusw
inc
sub
add
aam
test
dec
xor
jnp
mov
jo
jmp
loopne
xlat
xor
mov
mov
cmp
jmp
loope
aam
pop
adc
xor
movsl
aad
enter
fldl
pushf
cmpsl
test
in
lods
ja
pop
ret
xlat
mov
dec
sahf
sbb
add
in
and
dec
iret
jge
insb
cmpsl
mov
aas
mov
mov
xchg
pop
mov
pop
mov
in
sub
movsl
lods
add
loop
ret
sbb
in
rclb
imul
shll
les
xor
jne
insb
cmpsb
mov
or
lcall
or
clc
inc
inc
xlat
mov
leave
xor
and
sarl
xor
out
add
das
mov
dec
aad
mov
and
xchg
data16
pop
push
ds
lods
pushf
xchg
pusha
fnstenv
aam
pop
inc
or
mov
xor
cltd
arpl
test
out
loop
xchg
sub
or
pop
lock
sub
sub
insl
inc
mov
sub
clc
mov
sub
imul
mov
or
movhpd
dec
scas
mov
jmp
in
lock
aad
rclb
inc
loop
shll
in
jmp
inc
iret
xchg
imul
outsl
inc
test
mov
push
lods
or
inc
xchg
xchg
out
into
push
mov
ret
adc
xor
std
dec
cmpsb
mov
jnp
mov
cmp
xlat
mov
test
test
nop
inc
push
add
inc
imul
es
pusha
icebp
adc
int3
roll
out
dec
aad
lcall
cmpl
aam
adc
or
dec
jo
jmp
and
out
mov
add
mov
adc
out
sbb
mov
mov
aam
mov
sti
adc
mov
std
loopne
push
xchg
jb
sbb
repnz
mov
dec
add
imul
xchg
pop
imul
xchg
adc
cltd
pop
push
pop
aaa
aam
addr16
mov
pop
arpl
movsb
sbb
scas
ret
push
xchg
push
pop
inc
scas
in
outsb
bound
mov
jbe
jge
sub
lock
pop
and
ficoms
js
aam
cs
inc
mov
xchg
jne
xorl
push
dec
push
out
fsubrs
jno
sbb
inc
aam
jecxz
push
mov
das
ret
jmp
lea
xlat
adc
xor
cmp
push
mov
jl
out
test
aam
pop
jg
movsl
inc
cmp
jb
dec
sub
jno
out
imul
fstpl
push
fsubrs
adc
lret
loope
ficoms
and
mov
and
add
leave
jnp
pop
in
inc
orb
mov
js
subl
scas
insl
mov
ljmp
jo
pop
mov
loop
arpl
ret
addr16
rcll
shrl
movb
arpl
lods
jne
fadd
xor
inc
sbb
mov
imul
aad
push
push
cmp
sbb
and
mov
nop
push
cmpb
dec
das
popa
mov
lea
cmp
add
push
xchg
repz
mov
insl
leave
or
pushf
fsubrs
sbb
push
mov
neg
dec
push
sub
and
dec
ret
mov
jno
lcall
dec
xchg
xor
mov
cmp
mov
cli
pop
push
das
cmc
jb
in
sbb
push
mov
inc
and
fbld
push
push
xchg
or
xchg
cmp
pop
mov
jne
repz
add
mov
cld
mov
sti
movsb
and
out
sbb
int
fistps
sahf
dec
dec
sbb
add
sbb
rcll
imul
push
mulb
xchg
cltd
arpl
mov
jns
pop
xchg
mov
pushl
in
subb
xchg
xchg
sbb
icebp
mov
shl
dec
pop
out
pushf
sbb
out
pcmpgtd
or
lcall
in
insl
mov
push
add
daa
jo
xchg
adc
dec
sub
mov
mov
mov
mov
add
mov
mov
adc
call
subl
mov
inc
mov
test
add
push
inc
dec
sbb
cmp
xchg
add
xchg
inc
adc
stos
icebp
and
mov
sbb
push
xlat
mov
rorl
lock
ja
fdiv
fdivl
outsl
dec
popf
or
mov
out
daa
add
sub
in
cmp
aaa
mov
popf
xor
xchg
fidivl
mov
arpl
jnp
das
mov
add
inc
sahf
pop
call
lcall
fiaddl
pusha
xchg
insb
cmpsl
add
aam
xor
dec
mov
gs
push
pop
insl
filds
mov
fwait
mov
xchg
test
xchg
into
lods
rcl
lea
imul
push
leave
mov
inc
push
cltd
pop
or
adc
iret
pop
or
or
jg
pusha
cmp
push
pop
in
add
aaa
adc
jge
pop
xchg
sub
dec
mov
aas
scas
fucom
mov
mov
sub
mov
pop
sbb
test
add
cwtl
outsb
xchg
scas
ljmp
and
jle
mov
mov
into
aam
inc
sbb
fistl
sahf
popf
inc
shll
cmp
daa
or
lahf
mov
adc
xlat
jmp
pop
leave
lret
pop
push
dec
stos
call
sub
aad
push
mov
pop
xlat
push
test
pop
aam
pop
push
adc
cld
lock
mov
lret
mov
mov
sub
insl
ljmp
mov
gs
jecxz
push
jge
movsl
adc
and
sub
push
addr16
jbe
sub
jg
mov
jbe
adc
or
xor
sbb
repnz
adc
mov
cmp
in
jmp
mov
mov
popf
xor
js
iret
or
add
idivl
rcrl
and
fildl
rcr
lods
dec
loopne
and
xlat
mov
or
mov
dec
xor
imul
cmp
cltd
jne
sub
jg
lahf
rorb
sbb
or
sub
mov
daa
clc
xchg
inc
dec
fcmovbe
mov
and
out
jle
mov
loope
icebp
sbb
shl
bound
dec
xlat
out
add
push
mov
js
pop
aad
add
and
pop
mov
cmp
test
push
outsl
add
xchg
out
lahf
test
jo
xchg
scas
std
mov
sub
pop
ss
mov
insl
push
movsl
mov
sbb
sub
ljmp
push
jmp
fmull
lock
idivb
xchg
push
dec
lds
pop
out
pop
push
dec
cmpl
add
pop
cmp
push
gs
cmpl
loopne
cwtl
cmp
sub
mov
arpl
or
pop
cmp
adc
mov
or
lock
data16
jno
mov
dec
add
jge
cltd
lahf
ljmp
mov
add
pop
add
push
fwait
xchg
or
xor
mov
insb
inc
mov
test
aam
cmc
fstpt
lret
mov
add
sub
into
scas
add
scas
fwait
ret
dec
cmpsl
testl
xor
mov
or
pusha
fists
add
mov
or
xchg
xchg
dec
and
out
into
push
inc
dec
and
ljmp
mov
mov
fiaddl
push
mov
aam
inc
inc
and
cltd
sub
mov
out
jmp
dec
jo
push
push
add
add
pushf
jb
adc
dec
repnz
insb
and
gs
and
add
addr16
insb
nop
jns
push
jae
stos
mov
aam
cmp
aaa
pop
jg
add
fisubs
mov
mov
scas
adcb
aad
lds
xchg
inc
mov
add
push
xor
mov
inc
lret
daa
daa
add
cld
lds
scas
aad
or
bound
inc
xchg
jno
lret
jno
xchg
push
and
out
mov
sbb
dec
lfs
inc
xchg
push
xchg
mov
xor
xchg
add
fisubrl
push
lret
jmp
dec
pop
xchg
aad
push
pop
cmc
or
fadd
xchg
lea
sub
mov
pusha
les
jbe
jnp
cmc
pop
add
xor
test
pop
mov
mov
sbb
cld
cltd
stos
nop
inc
aam
cs
icebp
xor
xchg
test
pusha
mov
lcall
pop
pushf
dec
and
jle
and
mov
sub
idivb
int3
aad
dec
xchg
scas
nop
mov
xchg
gs
xlat
jmp
cmp
leave
add
aad
js
lods
in
jno
mov
cmp
enter
mov
sbb
jl
lea
mov
testl
jmp
mov
lods
add
mov
pop
mov
bound
addr16
push
push
mov
lea
orb
xor
out
cli
out
jae
and
pop
and
pop
jge
mov
mov
xchg
mov
pop
push
mov
stos
ja
sub
ja
adcl
or
dec
mov
scas
push
loope
sub
in
dec
sub
dec
inc
add
js
adc
test
enter
adc
or
jae
aam
dec
in
adc
mov
scas
dec
or
popf
xchg
push
jl
pop
mov
jno
sub
lods
sub
je
inc
sbb
or
jnp
push
aas
sti
bound
dec
push
pop
inc
add
xchg
popf
hlt
jmp
pop
aad
jmp
xlat
aam
shrl
fwait
dec
lea
fildl
ret
aad
sub
test
pop
mov
dec
xor
inc
enter
lods
dec
inc
pop
icebp
push
push
cltd
mov
movsb
sbb
pushf
jmp
inc
sbb
std
outsb
cs
cli
xchg
inc
mov
push
and
xchg
mov
lods
add
notw
jp
mov
cmp
xor
add
jb
cltd
sub
popa
xchg
loop
call
or
push
int3
flds
fwait
jns
add
add
add
inc
test
jge
in
idivb
mov
ds
jne
mov
push
dec
leave
push
pop
mov
ficoms
imul
outsl
test
lret
bound
inc
add
xlat
rolb
add
dec
xchg
jg
pop
loope
adc
orb
xchg
xchg
das
jbe
mov
jo
aam
adc
mov
iret
inc
mov
jno
enter
aam
mov
xchg
negl
lods
dec
loope
lods
loopne
pop
rolb
xor
fstpl
push
jmp
lret
mov
dec
jne
fdivr
movsb
mov
inc
jecxz
jge
cmp
test
inc
bound
jmp
pop
xchg
rcl
dec
shrb
adcb
cmp
pop
cmp
popf
add
adc
xchg
movsb
popa
std
pusha
cltd
mov
jns
aam
xchg
in
pusha
jno
clc
xor
mov
pop
mov
leave
shlb
mov
xorl
push
adc
xchg
nop
sbb
xchg
in
aad
pushf
gs
pop
leave
jb
cwtl
push
jle
setno
out
pop
lods
fs
add
xor
xchg
aad
adc
inc
xchg
inc
rolb
mov
mov
mov
dec
cli
fiaddl
mov
add
dec
mov
xchg
xchg
lea
add
xchg
lcall
sub
popf
push
and
pop
xchg
shlb
add
pop
out
add
xchg
aad
test
and
int
inc
cs
lret
or
add
push
xor
pop
add
sub
cmp
scas
jnp
test
pusha
xchg
enter
mov
jae,pn
add
lds
test
ljmp
pushf
adc
lahf
push
outsb
add
leave
sub
fmuls
leave
nop
mov
rorb
add
mov
add
xchg
push
in
inc
ss
orl
sub
lods
xor
pop
or
aad
fdivrl
addr16
lcall
adc
rcrb
mov
outsl
mov
movl
shrl
int3
dec
test
inc
pop
add
es
inc
pop
outsb
nop
sub
pop
outsl
stos
cmp
fsubl
fnsave
mov
pop
and
in
sub
cwtl
clc
aad
or
lds
cmp
aad
cmpsb
fdivrl
mov
push
jecxz
add
adc
adc
mov
pusha
outsl
in
insb
adc
add
jg
pop
jle
dec
bound
xchg
int
xchg
and
roll
cmp
cs
mov
ljmp
ss
mov
mov
leave
mov
cmp
aam
ss
in
push
pop
mov
inc
add
add
negb
mov
je
lods
sub
jg
pusha
roll
mov
cwtl
das
mov
add
roll
sbb
imul
fnstsw
stos
orl
inc
xor
push
addl
cmp
pop
shlb
aad
mov
jmp
add
enter
sub
dec
fs
mov
popa
pushf
nop
push
inc
add
aaa
dec
xchg
repz
add
es
mov
mov
push
mov
incl
fnstcw
subb
push
sbb
outsb
jns
dec
pop
mov
or
mov
jb
out
add
mov
sub
stos
xor
xor
and
jl
iret
xchg
xlat
js
addb
sub
cmc
xchg
mov
push
and
inc
xlat
out
cmp
jae
or
or
das
or
mov
addr16
jno
jnp
pop
mov
push
add
jle
pusha
push
sbb
lea
xchg
sub
push
or
mov
lods
ret
repnz
mov
aaa
add
subl
test
aad
faddp
pop
dec
pushf
pop
imul
aam
imul
imul
mov
cld
call
adc
cmpsl
ljmp
pusha
ret
fsubrl
mov
call
aam
or
dec
lock
pop
shll
outsl
sbb
jle
mov
shlb
pop
push
mov
adc
xchg
dec
inc
sbb
nop
stos
jp
pop
dec
outsl
mov
push
scas
sbb
jle
push
inc
inc
out
sbb
inc
cmp
mov
cmp
jno
xchg
xor
inc
shr
pop
rorl
adc
mov
pop
int
in
out
cltd
dec
lcall
pop
xlat
push
jle
jnp
lret
pop
xchg
ss
jns
cmpsb
add
cmp
sub
movsb
push
lahf
cmp
std
add
stos
out
jnp
and
jbe
pop
dec
jo
jns
adc
pop
aam
mov
inc
or
lret
out
sub
int3
mov
adc
push
out
pop
mov
mov
inc
repz
xlat
stos
add
sbb
ds
inc
in
enter
rcl
inc
add
sbb
cmc
mov
or
lods
inc
add
fistpl
pushf
mov
jge
subb
mov
imul
xchg
jmp
sbb
pop
shrl
sbb
les
dec
push
and
mov
cmpl
xlat
lcall
adc
sub
mov
add
aam
or
xchg
dec
repz
mov
cli
push
and
fs
push
aaa
jae
cmp
add
mov
sub
gs
xchg
bound
fwait
adc
push
sbb
fucomip
les
in
adc
adc
pop
notb
call
inc
ret
das
push
push
pop
bound
into
push
shl
je
mov
adc
bound
mov
pop
cmp
add
adc
cltd
leave
fwait
mov
out
sub
popa
jl
or
add
xchg
stos
fsub
or
jnp
ror
xchg
jecxz
mov
adc
mov
dec
mov
push
movsl
arpl
push
push
dec
push
imul
inc
adc
cmp
mov
test
rorl
push
aam
arpl
ljmp
push
mov
cmp
movsb
cmpsl
mov
sub
mov
adc
mov
inc
xor
xchg
xchg
stos
lret
cmp
insb
and
sbb
mov
out
rcll
aad
and
in
fldenv
cld
pop
push
or
nop
je
inc
insl
cmp
mov
sbb
add
test
mov
xchg
fstps
fsubrl
xchg
dec
int
adc
or
and
in
cmp
pop
or
dec
inc
pop
lea
jp
out
add
cltd
pop
xlat
imul
js
mov
jle
xor
jo
es
lods
hlt
sbb
inc
and
fidivs
aas
out
adc
mov
add
adc
shr
xchg
mov
stos
xchg
jbe
sbb
test
pop
in
and
aad
sub
pop
pop
add
add
inc
push
add
add
xor
inc
cmp
aam
test
insl
push
or
sahf
sbbb
add
xchg
xchg
mov
and
stos
fstps
adc
in
fst
inc
xchg
fmulp
fsubs
pop
pop
sbb
pop
in
icebp
test
aad
ljmp
mov
test
loope
shlb
or
fiadds
jb
pop
hlt
fisubs
adc
call
jg
xchg
fstpt
xchg
push
imul
dec
push
xor
xchg
daa
data16
pop
add
outsb
mov
aam
mov
mov
mov
and
js
rcrw
orl
push
repz
aam
into
sbbl
cmp
push
mov
xor
and
hlt
lods
sahf
cltd
pop
es
imul
sub
mov
xlat
mov
jp
mov
or
mov
add
ret
xchg
std
inc
adcb
pop
sbb
aad
sbb
mov
fs
pusha
mov
shll
and
pop
dec
pusha
xchg
int3
jmp
xchg
pop
adc
and
xlat
push
rcrl
js
xchg
loop
daa
add
or
mov
pusha
pop
inc
sub
movb
les
arpl
xchg
in
push
mov
adc
repnz
push
ret
or
sub
add
dec
repz
mov
outsb
push
jbe
loop
es
leave
aam
lods
and
xor
in
in
jle
sub
jg
lods
add
mov
fcmovnbe
dec
out
and
aam
test
push
outsl
mov
jns
hlt
and
fiadds
lahf
bound
pusha
push
inc
lods
jo
pusha
ret
pop
add
mov
ret
std
cmp
pavgw
test
insb
push
mov
aam
jbe
popf
mov
xor
xchg
orb
dec
dec
push
add
es
inc
arpl
and
aam
inc
sub
mov
lds
add
xchg
jb
mov
ljmp
movsb
push
sbb
push
out
aam
mov
add
ljmp
leave
mov
lcall
mov
shlb
mov
and
sub
mov
fcom
mov
out
fisttps
je
cmp
pusha
ret
std
notl
insl
and
insb
inc
iret
cmpsl
testl
push
call
fcmovne
fcompl
xchg
sub
xchg
jns
adc
std
arpl
xchg
cmp
aad
dec
push
test
mov
adc
cmp
rcl
pop
ss
or
test
lods
loope
pushf
mov
adc
mov
or
or
dec
mov
mov
xchg
mov
dec
repz
mov
pop
icebp
ja
xorb
and
mov
cmpsl
adc
adc
push
xor
hlt
fistl
mov
inc
clc
inc
and
out
jo
push
dec
adc
andl
push
lock
test
mov
and
pop
sbb
jle
lea
fsts
mov
andl
out
hlt
push
adc
aam
dec
cvttps2pi
xorl
int3
rcr
ljmp
xor
in
into
mov
xor
jne
sbb
add
dec
mov
push
xchg
inc
rclb
jno
xlat
dec
rolb
adc
test
pop
jle
or
lcall
add
rclb
lds
cmpb
and
sub
sbb
call
push
data16
xor
std
xchg
mov
stc
or
or
push
dec
out
pushf
inc
sbbb
cmp
in
movsb
mov
popa
clc
cwtl
cmpsl
inc
push
or
lock
mov
testl
pop
jae
test
call
cmp
dec
pop
jmp
xchg
mov
addr16
add
mov
xor
insb
push
insb
and
sahf
jno
sbbb
adc
push
fmuls
dec
insb
movsb
aam
fs
adc
jle
push
inc
mov
add
shr
jo
pop
shll
fucomip
adc
sub
push
rcll
push
call
cmp
mov
popl
xchg
pop
ja
inc
cltd
repz
fsubrp
pusha
ret
mov
es
aam
xchg
das
shll
mov
adc
jl
fsubrl
adcb
mov
dec
nop
and
mov
xor
mov
fbstp
xchg
lods
aam
mov
mov
adc
mov
popa
js
hlt
mov
xchg
popf
pop
adc
inc
jp
ret
add
in
mov
mov
nop
sub
out
out
jle
and
ffreep
dec
mov
cmp
mov
imul
pusha
scas
or
inc
xchg
adc
push
pop
rcl
mov
jb
pop
aad
adc
dec
lcall
sub
nop
mov
jno
or
xchg
inc
hlt
inc
call
popa
add
mov
insl
or
rcrb
adc
jmp
popa
xor
push
outsl
movsb
mov
pop
sub
imul
jmp
mov
inc
xchg
stos
add
fsts
mov
and
sbb
xor
int3
jbe
inc
out
ror
mov
push
adc
add
pop
mov
and
jmp
mov
pop
int
sub
sbb
xor
mov
imul
out
dec
cmp
mov
repnz
test
insl
std
pusha
pop
sub
xor
push
dec
xlat
mov
jo
mov
cmc
or
inc
outsl
cwtl
mov
ret
cmp
mov
mov
lcall
lock
xchg
test
fs
and
lods
mov
pop
push
fidivrl
insl
std
jecxz
sub
gs
jp
add
out
adc
fsubl
in
loopne
xchg
sahf
int3
aam
pop
popf
jae
jo
push
loop
sub
std
jmp
fdivrs
adc
mov
out
cltd
fldcw
stos
ret
js
cli
xchg
mov
mov
bound
mov
jb
lds
adc
mov
stos
aaa
and
data16
adc
insb
hlt
cld
mov
mov
inc
icebp
out
stos
and
pop
shll
data16
inc
movsb
add
cmp
or
inc
and
ret
aam
xchg
insb
jnp
loope
ja
mov
mov
mov
fisttps
popa
and
inc
rorb
aas
jnp
test
cli
mov
add
inc
push
cld
sbb
jns
push
push
sahf
mov
cwtl
fldl
xor
dec
mov
mov
push
mov
adc
rclb
push
insb
sub
push
dec
sarb
rclb
fwait
in
pusha
packssdw
mull
inc
imul
hlt
ret
mov
aam
insb
in
ss
mov
cmc
add
inc
fdivrs
je
cmp
loopne
and
dec
xchg
das
mov
sub
mov
pop
dec
jne
popa
mov
and
adc
pop
lcall
in
mov
scas
lds
add
cwtl
xor
adc
mov
push
loop
xchg
test
add
ljmp
aam
push
push
dec
bound
js
inc
or
sbb
cltd
inc
add
cmc
inc
popf
leave
fbstp
insl
jnp
pop
push
xchg
adc
stc
add
int3
sbb
cmp
xlat
les
inc
enter
sbb
pop
mov
cmpxchg
rclb
cmpsl
stos
add
lahf
sub
aas
push
xchg
fadd
imul
clc
xor
dec
add
dec
fcompl
pop
data16
mov
imul
addr16
adc
sub
push
bound
cmp
test
or
pop
and
xor
mov
lret
mov
repz
inc
insb
or
pop
mov
fs
sub
inc
clc
xchg
movsb
call
hlt
push
push
sub
mov
push
jbe
stos
or
jnp
pop
shll
pop
xchg
lahf
into
mov
imull
mov
pop
popf
cmpb
pop
shrb
mov
jns
inc
cld
pushf
test
aam
fstpt
nop
or
lcall
ret
or
scas
add
pop
adc
out
dec
orb
aam
adc
test
dec
fstpl
imul
adc
inc
pop
mov
push
and
cs
fists
jo
adc
enter
lock
mov
jmp
pop
pop
pop
pop
push
in
insl
push
adc
cmc
dec
call
add
sbb
arpl
push
mov
aad
mov
loopne
mov
nop
jns
lea
adc
dec
push
sbb
stos
mov
xchg
push
nop
aas
push
inc
sub
ficomps
mov
idivl
push
leave
popf
mov
cltd
add
mov
cltd
jmp
lret
mov
jmp
sub
mov
ds
dec
and
sub
mov
popa
fisubs
shrb
dec
outsl
or
jge
xchg
movsb
xor
mov
cwtl
dec
add
xor
mov
lret
adc
sahf
bound
std
lahf
jmp
enter
stc
jne
inc
inc
pop
adc
sbb
sti
cmp
lods
mov
and
or
xchg
pushf
dec
sub
adc
lahf
mov
add
lock
pop
jne
test
das
xor
add
or
data16
stos
ret
scas
xor
cmp
sub
add
nop
mov
repz
outsl
cmp
cmpsb
jle
aam
push
das
mov
mov
mov
mov
xchg
rcl
dec
cmpsb
fs
xchg
cmp
and
xchg
push
es
cmp
aam
sub
xor
mov
stos
add
imul
xor
cs
ss
pop
lret
inc
pop
push
es
addr16
pop
jae
mov
outsl
scas
or
adcl
mov
push
xor
dec
ds
push
inc
stos
aam
add
mov
pusha
daa
aas
in
dec
sahf
inc
pop
inc
xlat
and
mov
in
mov
pop
aad
sarb
sbb
leave
mov
mov
pop
add
pop
stos
dec
mov
xor
push
mull
push
push
xlat
jl
push
mov
lods
xchg
imul
sub
mov
sub
mov
adc
dec
pop
and
das
cmpb
pop
adc
mov
push
pushf
fs
xchg
mov
aas
insb
adc
das
sbb
aad
push
push
add
mov
xchg
cld
xchg
add
test
movsb
adc
dec
push
icebp
push
outsl
pop
gs
mov
shrb
andb
mov
rcrl
xlat
mov
add
les
jno
sub
mov
jae
mov
xchg
lea
outsb
mov
cs
push
sbb
push
pop
add
cmpsl
lcall
popa
dec
adc
or
lods
pop
or
xchg
movsl
mov
cld
movsl
movsl
mov
mov
lcall
int
xchg
jle
cmp
imul
xlat
xor
mov
addr16
jnp
xchg
mov
pop
hlt
aam
cmpsl
aam
aad
dec
sbb
fisubrs
jg
jbe
ja
ret
mov
or
mov
dec
or
imull
in
cmp
and
pusha
popf
cmp
dec
mov
mov
stos
jecxz
push
fnsave
inc
adc
xchg
pop
mov
ret
faddl
call
fsubrl
mov
cld
sarb
xchg
or
jbe
push
xchg
pop
jno
push
dec
aam
inc
mov
clc
out
shlb
mov
add
std
adc
jle
mov
cltd
fldcw
xchg
xlat
pop
lods
add
mull
lds
bound
jae
es
aad
mov
dec
dec
pop
fmull
test
fidivs
xchg
test
mov
or
pop
or
test
notl
mov
daa
pop
sub
push
aad
lcall
mov
push
xor
ss
popf
jmp
sbb
push
imul
cmp
sbb
or
call
xchg
outsb
outsb
sub
add
mov
jnp
pop
jbe
insb
ss
in
aad
xchg
xor
add
pop
mov
sbb
js
mov
adc
inc
adc
sbb
nop
iret
cmpsl
dec
push
push
pop
pop
daa
xchg
repnz
or
aam
push
js
inc
loopne
enter
int3
mov
sbb
pop
fwait
push
inc
mulb
mov
loop
adc
mov
sbb
add
cmpsb
aad
dec
mov
jmp
mov
cmpsb
mov
add
mov
push
loopne
adc
int3
mov
dec
testb
pop
lock
popa
test
fcmovbe
jno
mov
jl
add
int
out
sub
add
and
outsb
adc
push
xchg
add
mov
ds
pop
and
and
sub
addr16
push
pop
repz
out
insb
fucomip
lds
or
jbe
das
mov
xchg
andl
or
jmp
or
shl
popf
cs
sahf
bound
dec
mov
sarb
mov
push
jecxz
pop
fwait
or
shll
push
into
and
repz
mov
arpl
sbb
test
mov
pop
or
adc
mov
inc
shr
in
mov
dec
and
xchg
cltd
xchg
loop
sbb
jne
inc
and
cmpl
das
jb
mov
mov
xlat
pop
sbb
loop
jecxz
insb
cmpsl
adc
iret
rorl
add
fadds
pop
out
mov
les
jmp
aam
scas
xchg
sbb
insl
lcall
mov
add
xchg
pop
pop
nop
fdivl
sbb
mov
jl
pop
inc
fistps
xor
xor
bound
lds
movsl
dec
pop
jns
add
cmp
imul
cmp
xor
jp
ret
mov
daa
cld
inc
clc
arpl
xor
jecxz
and
mov
scas
adc
add
cmpsb
sub
pop
mov
jae
dec
sarl
lea
subl
mov
push
cmp
lods
add
or
pop
pop
movsl
leave
adc
or
arpl
mov
jg
mov
js,pt
sti
xor
jno
ljmp
or
sti
mov
and
movsb
dec
pop
inc
push
mov
and
mov
pop
loopne
mov
in
pop
or
xor
mov
in
push
sti
adc
hlt
sbb
mov
xor
mov
add
out
mov
mov
call
sbb
inc
adc
rorl
sti
cmp
lods
int
loope
pop
stos
pop
add
xor
outsl
jno
repz
shrl
or
jbe
sub
dec
adc
inc
insb
popf
iret
push
push
imul
roll
mov
add
cmpl
in
roll
lahf
dec
sarl
sub
pop
sarl
ljmp
pop
mov
imul
test
aam
dec
xchg
xor
ja
mov
scas
jl
dec
inc
lock
incl
push
pop
xchg
jg
xchg
add
mov
xor
sti
pop
cmp
pusha
cs
enter
mov
inc
jno
add
dec
jge
sbb
inc
mov
out
mov
pop
fs
int
or
jnp
adc
ret
pusha
outsl
pop
mov
not
lock
subl
cmp
aam
add
outsb
lea
mov
xor
jmp
lock
lods
xor
push
dec
xchg
iret
mov
sub
aam
xor
pop
fisttps
stos
in
daa
sbb
lret
hlt
pop
add
loop
add
xlat
popa
shll
les
fs
leave
jmp
data16
push
jne
and
push
stos
or
xor
loopne
pop
stos
mov
xor
and
js
dec
out
pop
xor
push
test
cwtl
pop
insl
mov
mov
push
test
cmpsl
jne
loop
push
bound
inc
sarb
ja
add
dec
je
sub
rcrl
mov
int
fwait
xlat
xor
add
pop
sbb
sahf
pop
das
or
adc
push
xchg
xchg
stc
insb
out
push
mov
sub
outsl
mov
lods
ds
nop
push
aam
aas
std
pop
arpl
std
jno
sub
jge
sbb
mov
loope
out
jle
xor
cmc
rcrb
vcvtpd2psx
and
mov
mov
adc
lret
and
and
push
xor
daa
shlb
sbb
or
mov
enter
lods
aad
ficoml
push
mov
insb
add
orb
mov
inc
dec
jne
jno
or
xchg
jg
jb
and
mov
cmp
dec
pusha
sub
sub
sbb
in
xchg
jge
mov
idivl
push
out
add
ja
add
add
jno
daa
aaa
popf
adc
cmpsb
bound
mov
xlat
cwtl
punpcklwd
pop
push
xchg
sbb
adc
add
roll
xchg
jae
mov
mov
popl
jb
dec
xchg
pusha
out
push
lcall
out
arpl
cmpsb
jae
pop
xchg
mov
dec
repz
into
cld
inc
push
sahf
lahf
pop
jnp
shl
in
shll
xlat
lret
and
mov
aad
lahf
pop
push
sbb
add
scas
int
xchg
gs
pop
cmpsl
push
stc
and
test
rorb
mov
mov
dec
and
fst
int3
cld
cld
dec
les
mov
cmp
and
lcall
xchg
sub
stos
push
data16
dec
aad
cmp
and
repz
xchg
cmpsb
and
ds
adc
and
int
fisttpl
aam
mov
xchg
cmp
leave
mov
or
mov
xor
lock
shl
sti
inc
mov
sbb
mov
outsb
lret
mov
inc
cs
enter
scas
movsl
push
out
push
adc
insb
sbb
nop
fisubrs
push
add
mov
pop
cmp
and
lahf
add
gs
inc
xor
mov
ss
add
mov
cwtl
add
dec
or
jg
lods
and
subb
repnz
add
addb
lcall
rcrl
stos
outsb
inc
mov
mov
aam
xlat
rclb
mov
add
stos
pop
cmp
add
loope
scas
push
pop
xchg
std
data16
pop
mov
jecxz
push
lea
add
iret
cmp
jmp
out
or
inc
stc
aad
popf
dec
fs
sti
popf
mov
sahf
orl
call
out
lock
push
insb
and
mov
mov
and
dec
ljmp
insb
sub
int3
aam
jmp
and
sti
stos
inc
inc
bound
cmc
into
and
lea
lods
repnz
mov
sbb
loope
cmp
pop
mov
xor
inc
xchg
mov
mov
in
imul
lret
test
sub
pushf
fmulp
in
and
sti
in
pop
sbb
mov
pop
inc
and
pop
sahf
cmpsl
aaa
popf
sub
mov
jl
in
pusha
pop
mov
push
data16
push
jg
stc
clc
in
add
rorb
ss
cmp
dec
nop
movl
ljmp
mov
or
pop
mov
popf
jecxz
outsb
adc
aam
mov
adc
mov
mov
xchg
and
xlat
xorb
ficomps
std
aaa
pop
add
add
mov
inc
fsubrl
xor
mov
jl
mov
orl
push
inc
imul
inc
insl
xor
xor
test
es
into
add
and
lahf
fisttpl
adc
into
mov
add
les
decl
popa
scas
scas
fcom
mov
xchg
lods
jnp
mov
pop
dec
stos
add
bound
mov
inc
incl
sub
push
mov
mov
into
pop
xchg
pushf
rclb
mov
data16
mov
mov
xchg
xor
push
in
pop
or
out
not
xchg
das
add
fcompl
out
movsl
adc
mov
dec
cltd
jnp
enter
xchg
fidivs
hlt
fimuls
enter
fdivrp
outsb
sbb
cmpsl
mov
cmp
mov
xor
cmpsl
dec
sub
or
pop
cli
cmp
mov
lcall
shrl
scas
push
rcrl
sahf
add
pusha
jmp
cmp
cmc
fadds
pop
mov
push
bound
or
stos
or
add
mov
pusha
sub
getsec
xchg
stos
sub
mov
pop
mov
inc
and
xor
lcall
mull
add
mov
push
call
imul
pop
mov
cwtl
scas
add
adc
jmp
aad
mov
cmp
mov
popf
aas
inc
mov
sub
sub
sub
xor
mov
leave
lahf
inc
mov
mov
or
mov
fbld
pop
lods
pop
ss
xor
cmp
loope
decb
cmp
mov
dec
enter
repnz
pop
jb
fwait
clc
sahf
stos
jns
push
jbe
iret
xchg
dec
clc
jecxz
lods
mov
cmpsl
int
rcll
push
inc
sbb
jo
fwait
pop
insl
and
in
movsl
mov
mov
aaa
add
rorb
pop
or
pop
outsb
xchg
stos
aad
adc
jle
jge
out
cltd
cmc
dec
and
std
fs
clc
lea
subl
sti
xchg
sbb
jmp
or
sahf
clc
data16
lcall
aam
rclb
mov
repnz
mov
bound
mov
add
mov
or
pop
icebp
add
cwtl
test
sub
xchg
mov
shll
mov
cmp
pushf
aam
mov
push
dec
mov
fisttpl
lea
mov
jnp
add
ret
data16
adc
fcmovnu
mov
add
add
call
pop
mov
gs
aad
fdivrl
mov
mov
stos
cmp
icebp
out
mov
mov
xchg
add
add
fwait
outsb
mov
xchg
sub
sub
dec
inc
fstpt
push
cmp
jl
aam
mov
add
dec
lahf
mov
in
mov
and
aam
fcmovne
divb
or
inc
inc
mov
inc
movsl
sub
out
loopne
jb
cmp
je
xor
cmp
cmp
in
ret
rorb
les
mov
addb
add
jne
or
aas
out
pop
cmc
daa
inc
push
mov
aam
repnz
aad
push
jmp
adc
and
jmp
add
dec
pusha
pop
mov
mov
mov
arpl
inc
inc
push
in
ret
adc
jns
mov
imul
fnstsw
mov
mov
adcl
jge
pop
mov
jecxz
mov
add
cmp
dec
sub
cmp
cmp
xchg
shlb
mov
dec
int3
jo
pop
jae
push
aad
not
mov
popl
rcll
sbb
inc
cld
and
or
inc
popf
xchg
repz
popa
cmp
das
add
in
mov
dec
sbb
pop
jg
cmc
test
sar
ret
arpl
or
fiadds
adc
push
aas
sbb
out
aad
adc
sub
mov
sti
lcall
dec
into
scas
add
rorb
push
push
pop
push
loopne
leave
imul
in
and
mov
sub
cs
push
xchg
mov
push
add
jg
aaa
mov
cmp
jb
add
pop
shrl
xchg
xorl
dec
addr16
cmp
into
stos
dec
jp
scas
mov
aam
xor
mov
mov
mov
mov
xchg
mov
add
mov
pop
push
aaa
imul
xlat
xchg
hlt
idiv
pop
loop
jge
jl
mov
mov
push
push
or
mov
fidivrl
mov
lret
leave
insb
cmp
imul
and
stos
push
int
movsb
adc
add
gs
xchg
loopne
xchg
repnz
adc
out
xor
xchg
pop
mov
and
xlat
int3
jl
dec
mov
fs
xchg
repz
pusha
mov
push
ljmp
add
or
andb
adc
add
andl
dec
ret
test
outsb
add
mov
aad
sbb
scas
cmp
aam
mov
add
or
in
inc
mov
mov
daa
data16
lahf
jne
or
pop
jo
push
push
pop
leave
inc
insb
in
jmp
pop
dec
sub
add
pusha
ret
outsl
dec
out
add
jge
movsl
sub
dec
aam
adcl
mov
movsb
outsl
sub
add
les
arpl
or
mov
repz
jae
aas
je
sub
stc
arpl
pusha
add
and
pop
fwait
add
jno
loopne
sub
pop
inc
rcrl
cmp
push
lret
js
leave
pop
xor
pop
cmp
fwait
push
fsts
mov
stc
dec
scas
push
mov
shll
dec
jb
xchg
test
loope
inc
dec
mov
repz
add
sbb
xchg
lods
pop
xor
pop
pop
ss
jle
insl
movsb
adc
pop
scas
lods
cmpb
add
dec
add
aad
popf
mov
push
and
movsl
ds
jg
out
add
and
outsl
lods
jnp
ret
sarb
sbb
push
out
das
and
imul
mov
test
xlat
add
xchg
pop
out
arpl
test
mov
nop
jmp
sub
pop
out
stos
sbb
call
fsts
and
pop
aas
aad
adc
push
stos
roll
cmpl
pop
add
out
cmp
es
sub
cli
in
outsb
loop
fldln2
add
aaa
fdivl
sbb
loope
add
aad
cli
bound
ret
lock
repnz
addl
pop
mov
push
cmp
add
mov
jnp
push
or
movsl
mov
cmpsb
add
mov
ret
mov
aaa
icebp
adc
add
jge
pushf
inc
movsb
ret
fisubs
lahf
icebp
arpl
mov
mov
add
sbb
mov
push
frstor
out
add
or
mov
test
mov
in
add
dec
or
pop
mov
jle
cmc
mov
inc
push
leave
out
nop
enter
sbb
inc
aam
mov
xchg
aad
test
push
out
mov
sbb
pusha
xchg
cmpsb
cltd
add
mov
mov
pusha
mov
cmpsb
add
dec
loopne
sub
push
pop
pop
push
mov
and
js
outsl
xor
hlt
push
push
mov
inc
repz
test
push
jbe
cmp
mov
insb
mov
pop
arpl
pop
in
inc
add
movsl
pop
aad
push
jge
testl
outsb
xchg
scas
out
adc
sbb
mov
mov
ljmp
mov
xchg
push
xor
push
ja
push
sti
jnp
pusha
sub
push
push
sub
jle
sti
xor
mov
fwait
fwait
nop
sbb
aaa
push
push
sbb
sarb
push
and
push
xchg
jecxz
cltd
and
stos
pop
ljmp
data16
jbe
xchg
pop
pop
pushf
popf
ret
scas
jo
in
add
mov
jnp
mov
jb
push
and
test
sub
or
mov
xor
xchg
mov
jl
jmp
inc
dec
cmc
pop
xor
push
xchg
popa
lcall
aad
int3
pop
and
pop
loope
arpl
lods
add
xlat
mov
loop
cld
stc
les
es
mov
insl
mov
out
orb
movsb
sti
inc
fstpl
sbb
xor
cli
xor
stos
test
adc
mov
add
add
pusha
sbb
add
icebp
aam
rorb
pop
mov
aam
mov
out
mov
pop
mov
inc
dec
das
cmp
fldenv
cli
push
xchg
mov
out
pop
adcb
leave
movsb
insb
xor
fs
add
fs
adc
xor
and
xchg
jp
aam
mov
loopne
sti
lahf
pop
jl
add
jg
scas
jmp
cmp
jmp
sahf
dec
or
imul
cwtl
nop
push
fadds
js
loope
jl
jbe
pushf
xchg
ret
sbb
push
out
sbb
xchg
sbb
mov
dec
mov
pmuludq
and
xor
cld
fadd
mov
js
cmovo
loope
mov
rolb
ja
mov
ret
imul
xor
popa
popf
jmp
leave
pusha
mov
sbb
xlat
pop
mov
sahf
in
mov
push
fldcw
mov
jmp
pop
incl
cs
fwait
aad
push
scas
lret
xor
fstpt
mov
mov
pop
add
loopne
xchg
outsb
sti
push
push
push
sub
call
jle
cmp
add
cli
push
jbe
add
mov
push
dec
sub
arpl
mov
or
or
xchg
loopne
mov
add
rol
mov
add
jns
pop
fucom
shrb
pop
mov
imul
xchg
or
lods
pop
pop
jmp
sub
data16
add
xchg
add
xchg
mov
pop
scas
cmpb
test
or
rcl
sahf
mov
sub
and
add
xchg
lds
xlat
pop
xor
ret
call
xchg
push
add
icebp
dec
ss
std
mov
lea
sbb
bound
xchg
mov
imul
pop
ja
push
fsubrl
and
cmp
inc
add
rol
adc
pusha
das
dec
outsb
mov
and
jl
push
sbb
movsl
or
adc
imul
or
push
sbb
mov
sbb
pop
xor
lret
aam
push
dec
mov
xchg
fisttps
stos
or
cmp
stos
test
bound
add
adc
scas
aam
mov
jns
jecxz
lfs
in
push
mov
inc
cwtl
insl
rcrl
xchg
mov
rorl
pusha
xchg
add
mov
inc
pop
insl
adc
std
mov
jp
and
and
xor
pusha
and
daa
mov
fldl2e
mov
dec
jmp
pushf
mov
lds
shl
leave
cmp
js
dec
mov
pop
inc
std
xchg
shll
inc
push
fldenv
dec
sbb
mov
inc
movsb
pop
jp
xchg
inc
and
or
inc
pushf
leave
push
adc
loope
icebp
movsl
add
insb
mov
or
inc
jmp
add
and
xchg
jno
mov
shr
jle
and
adc
fwait
repz
mov
sbb
addb
push
nop
mov
lretw
lret
push
cmpsl
pop
push
add
jb
lds
xchg
sbb
sahf
pop
pop
fwait
ret
add
mov
mov
fwait
gs
jp
cmp
mov
and
jno
push
xor
and
stos
aad
or
mov
ja
lods
add
or
jns
jge
pop
pop
out
aad
call
loopne
mov
jnp
icebp
mov
pop
aas
mov
and
mov
addr16
dec
pop
sub
popa
pop
xchg
lahf
dec
popf
stos
bound
lea
imul
cs
mov
nop
gs
or
popa
loope
xchg
xchg
xor
out
jle
cmp
insl
add
scas
mov
daa
arpl
popa
xchg
loope
add
sahf
jns
lds
loopne
mov
clc
jbe
mov
or
push
and
mov
mov
adc
add
std
sub
ss
aaa
cmpsb
test
scas
push
mov
bound
mov
add
sub
adc
mov
xchg
add
mov
fists
mov
dec
jecxz
ljmp
ret
and
mov
cs
xlat
les
lret
mov
dec
sahf
pop
sti
mov
into
rolb
fs
sbb
outsb
mov
mov
pusha
adc
xlat
sarl
push
repz
je
dec
jp
sbb
dec
mov
ljmp
jb
jp
xchg
mov
int
pop
push
mov
ret
dec
pop
incl
cmpsb
sbb
out
int3
lods
mov
mov
js
mov
pop
movsl
cmp
sbb
fwait
dec
jbe
add
mov
pop
das
lods
adc
mov
insb
cltd
sub
loopne
add
pusha
popa
ljmp
aam
cmp
orb
or
push
add
lods
cld
mov
in
dec
stos
mov
sbb
popf
sbb
jle
dec
daa
ja
int3
dec
sub
push
push
push
inc
sub
cmpsl
adc
adc
lahf
stos
sub
lret
sub
lret
mov
mov
xchg
cmc
ds
rol
mov
and
aad
pop
sub
rolb
mov
inc
mov
pusha
sub
add
cltd
push
pop
or
or
icebp
cmp
mov
neg
cmp
shrl
loope
aaa
movsb
pusha
push
sahf
lods
imul
add
aam
xor
out
cmp
xor
sbb
sub
stos
push
jnp
aas
arpl
rorl
in
rorl
test
stos
xchg
stos
aas
xor
adc
pop
lret
pop
mov
cwtl
adc
mov
pushl
ret
leave
sub
std
out
mov
inc
jno
xchg
jp
loopne
xchg
adc
or
aas
xchg
in
inc
and
es
fistl
pop
inc
mov
adc
in
pop
jne
mov
cmpsb
xchg
xchg
sub
scas
jnp
mov
cmp
pop
pop
divl
pop
js
and
mov
adc
lea
mov
popf
dec
aad
pusha
pop
lret
shl
add
ret
inc
cmp
pop
jo
movsb
xlat
icebp
inc
les
in
lret
or
inc
and
sti
push
mov
loope
ficomps
in
into
stos
push
ds
push
jge
jecxz
mov
gs
sub
cwtl
addr16
shr
mov
lret
lods
pusha
rolb
sti
adc
or
push
fs
sub
xchg
cltd
mov
sahf
and
call
mov
or
sti
cmp
push
sbb
popf
mov
incb
ret
repz
mov
jl
push
jnp
jl
xorb
mov
bound
and
mov
sbb
mov
in
mov
fidivl
push
xor
loopne
lds
cld
out
jge
pop
push
mov
rorb
add
pop
mov
sbbl
cwtl
mov
jae
mov
adc
inc
mov
push
pop
mov
sub
aad
inc
lods
aaa
sbb
jae
mov
add
loop
xchg
outsl
adc
cli
andl
jp
xlat
pop
jp
cmp
and
and
mov
sub
sub
and
ret
xchg
imul
pop
jne
je
dec
push
ljmp
xchg
xor
xchg
aad
out
nop
push
insb
mov
jns
inc
lahf
and
rcrl
cmpl
pop
inc
pusha
lods
mov
xlat
ret
fsubrs
or
or
mov
aad
ja
pop
jbe
pop
sub
sub
xor
test
aam
dec
leave
push
mov
xchg
jno
mov
leave
inc
ret
xor
pop
add
push
adc
je
xor
hlt
in
jle
push
inc
mov
popf
mov
adc
push
lods
aad
inc
add
sbb
mov
orb
call
add
pop
mov
jno
mov
aam
adc
repz
lods
add
aam
enter
pop
or
mov
fidivs
add
lahf
aad
sahf
ja
pop
mov
frstor
sbb
adc
gs
scas
pop
mov
adc
test
test
add
push
jbe
int3
lods
cld
andb
stc
jb
shlb
cmp
sub
icebp
lahf
andb
es
xchg
xchg
dec
shll
mov
mov
orl
insl
loopne
into
add
inc
fisttpll
mov
jge
into
dec
sub
jle
inc
mov
mov
dec
push
push
daa
ss
pop
in
pop
push
push
xor
int
inc
push
out
pop
pushf
shrl
lret
pop
inc
mov
daa
xadd
cmp
clc
jb
or
mov
add
pop
pop
in
scas
stc
aaa
imul
mov
cli
shrl
loopne
mov
pop
xor
aam
xchg
dec
mov
pop
adc
lods
inc
pop
fwait
bound
push
bnd
outsl
mov
daa
jns
pop
xchg
push
push
add
add
push
push
and
jne
push
adc
add
or
mov
inc
sbb
std
aam
cmpsl
aad
loop
add
es
lahf
pop
outsl
pop
jle
mov
mov
loop
pusha
xor
cmp
fcos
pop
cltd
push
dec
dec
repz
push
or
push
cltd
or
lret
mov
js
dec
and
call
mov
and
sbb
jne
add
fwait
mov
lock
sub
lods
dec
cwtl
ss
testl
leave
mov
sti
push
push
fstpl
inc
cmp
xchg
xor
jmp
pop
jl
cmp
jp
add
pop
sbb
stc
adc
sbb
mov
mov
mov
cltd
sub
xlat
pop
leave
sub
and
aam
push
test
mov
rcrl
in
pop
das
or
pusha
mov
int
mov
rol
sbb
in
or
cmp
cmpsl
frstor
xor
and
notl
ficoms
mov
sub
mov
lret
mov
and
repz
push
mov
xor
out
mov
cltd
add
insb
cmp
leave
test
jb
rcll
inc
xchg
jge
enter
and
ret
in
lahf
pusha
xchg
pop
fidivrs
not
jnp
mov
popf
sub
pop
dec
icebp
adc
cld
lock
add
lds
test
orb
inc
stc
jp
les
push
or
out
das
push
xchg
jge
gs
mov
scas
into
dec
dec
arpl
aas
inc
mov
sbbl
add
jmp
mov
shlb
mov
pusha
or
out
jecxz
pusha
cmc
test
mov
sahf
adc
pop
imul
fwait
jp
ss
aam
inc
pop
movsl
jp
push
mov
int
movsb
fmulp
popf
sub
pop
out
mov
mov
fldt
add
test
xchg
cmp
ljmp
and
mov
aad
aam
push
jne
mov
pop
xor
xlat
pop
mov
inc
cmpsb
xor
jl
jb
pop
ret
js
mov
mov
add
jle
rcll
fiaddl
mull
popf
inc
je
adc
imul
jecxz
in
push
add
lods
pop
or
or
xor
jns
push
pop
mov
popf
popf
ret
add
lar
cmpl
push
in
push
popa
jl
mov
leave
xchg
lods
outsb
cli
mov
mov
dec
jmp
cmc
pop
inc
arpl
dec
pop
cmp
lahf
dec
sbb
sbb
push
adc
add
pop
scas
pop
sub
pusha
dec
test
mov
mov
lods
cld
xchg
inc
cmpsb
fisttpll
dec
xor
sti
add
xchg
lret
add
je
and
xchg
jl
aad
into
arpl
or
sbb
jno
rcrl
add
ja
jmp
sti
movsb
fnstsw
add
sbb
movsb
jo
cli
push
es
or
add
orl
mov
loop
jo
dec
mov
lock
test
jle
pop
cmp
roll
stos
dec
add
jae
inc
sbb
inc
sbb
xchg
outsb
fs
and
cli
addr16
cmp
dec
and
lret
fdivrp
mov
jecxz
jb
lods
jge
or
adc
int
icebp
out
cmp
jbe
mov
addl
add
les
movsl
mov
mov
aam
ret
add
cld
mov
and
xor
int3
mov
and
pop
daa
mov
dec
pop
aad
bound
adc
in
jl
mov
cs
addr16
insb
add
test
lahf
mov
pop
mov
push
rcrl
push
sbb
neg
stos
dec
sub
ret
lock
sbb
mov
gs
ds
sub
pop
fadds
inc
mov
mov
mov
cmc
leave
add
mov
movsb
mov
cmp
pop
xchg
pop
xchg
and
pop
outsb
sub
or
adc
rcrl
push
in
inc
rcll
pop
push
fsubrs
add
hlt
fldt
add
cmp
jbe
mov
jg
dec
xchg
pop
xchg
add
sbb
jnp
cli
fwait
dec
out
repz
inc
push
aas
xlat
cmp
inc
dec
fldcw
pop
xchg
jmp
jge
aam
shrb
mov
punpckldq
add
fabs
sub
scas
ss
cltd
out
xchg
mov
xlat
cmp
call
xchg
cmp
repnz
je
add
pop
sub
jmp
push
pushf
inc
adc
scas
aam
adc
mov
mov
add
xchg
repz
jecxz
cltd
adc
shr
es
sub
dec
out
mov
int
rol
xchg
aad
or
cmpl
inc
repz
inc
add
mov
nop
add
inc
inc
bound
test
addr16
cmp
mov
inc
mov
loop
lret
cmpsb
mov
std
add
outsb
jl
cwtl
pusha
add
std
xchg
adc
mov
pushf
push
or
loope
sar
jp
movsl
xchg
outsb
cmpsb
insl
pop
das
or
jp
int3
insb
push
arpl
es
sahf
pop
xor
arpl
pop
lods
popf
jb
cld
pop
jne
rorl
into
mov
lcall
jmp
cmc
outsb
test
int
xor
movsb
lock
scas
addr16
pand
insl
mov
arpl
fisubl
out
mov
gs
mov
or
xchg
bound
pop
cmp
out
popl
leave
add
sbb
arpl
pop
stos
mov
mov
sbb
or
jae
cld
lods
add
xchg
out
inc
adc
mov
sub
or
das
jge
add
repz
push
popf
clc
clc
rcll
hlt
sbb
outsl
cmc
insl
inc
and
xor
es
in
jb
sbb
in
push
mov
sti
xor
mov
rorb
mov
dec
out
jecxz
mov
in
call
xchg
cmpsl
mov
lods
adc
idivl
std
aas
sub
adc
pop
out
dec
cmpsl
mov
stc
rclb
test
xlat
add
sarb
push
ret
mov
sub
sbb
pop
fs
cwtl
mov
cmpsl
jo
pop
inc
lock
shl
sbb
outsb
cmp
lock
push
ljmp
lods
lret
cmpsl
out
pop
and
jl
test
mov
jne
sarb
lds
mov
jg
pushf
ja
cmpsb
add
sub
mov
and
jae
add
jge
outsl
in
popa
pop
cmpsl
out
mov
mov
xor
insl
ret
call
and
aam
out
idivl
xor
outsl
add
mov
jne
push
xchg
sbb
sbb
push
xlat
inc
mov
add
pop
into
push
push
add
mov
mov
xor
std
add
push
mov
jg
jmp
adc
and
xchg
fs
mov
aam
cmp
test
cmp
xchg
bnd
sbb
loop
fst
int
loope
test
xchg
mov
data16
addl
mov
dec
push
and
dec
pop
mov
cwtl
adc
sub
push
jne
into
add
mov
and
cltd
scas
lods
add
adc
fs
test
push
shll
test
fcoms
aam
je
jmp
mov
add
lock
cli
loop
add
pop
mov
sti
dec
arpl
xchg
and
jnp
jmp
cmpsl
incb
loop
cmp
fisttpl
mov
out
in
fadds
add
cld
aad
adc
dec
shr
mov
iret
out
ret
add
add
add
pop
iret
sahf
push
imul
in
cmc
push
test
push
and
pop
cmp
pop
movb
mov
push
scas
nop
test
aam
mov
push
aad
pop
push
inc
popa
pop
dec
psadbw
pop
inc
mov
sub
or
les
lcall
add
and
daa
mov
mov
lret
mov
pushl
insl
pop
popf
lods
movsb
test
js
call
inc
cmp
movntps
mov
pusha
sub
add
mov
and
or
jp
cmp
mov
push
mov
and
sub
xchg
aad
dec
fnstcw
mov
jns
jle
mov
aam
xchg
or
mov
mov
xchg
les
aad
mov
ss
mov
mov
adc
test
push
popa
scas
lret
push
hlt
arpl
xchg
xchg
das
addb
shl
pop
add
add
pusha
ja
rcrb
adcl
pusha
xor
cs
popa
jg
jbe
addb
cmp
popa
adc
cmpb
iret
mov
cmpl
add
stos
notl
popa
sub
xor
push
insl
popa
pop
mov
xor
add
cwtl
testb
bound
clc
mov
xchg
jge
or
mov
incb
es
xchg
mov
repnz
das
sbb
nop
std
push
sub
insb
pop
and
pop
sub
xor
notl
pusha
mov
jmp
cld
inc
sbb
pop
lds
jge
xor
dec
aad
mov
sub
inc
push
shl
push
or
add
push
cmp
mov
icebp
sub
mov
in
aad
repnz
xchg
outsl
jecxz
movsl
je
lods
jae
pop
push
adc
sbb
movsl
xchg
addr16
pusha
lods
leave
js
mov
shlb
dec
add
fs
ret
ret
movsl
mov
pop
xchg
push
push
xchg
mov
pop
mov
rcrb
add
test
lahf
jne
arpl
fs
sti
sub
pop
outsb
push
call
xchg
fisttpl
aad
aam
pop
push
or
xchg
sbbl
les
or
mov
jns
sbb
lock
add
cmp
add
addr16
mov
adc
int3
out
inc
mov
pushw
mov
push
leave
movl
nop
mov
outsl
pop
dec
fs
and
aaa
jbe
or
shll
lea
aad
cs
mov
mov
call
mov
mov
and
adc
enter
call
sbb
or
jecxz
cli
pop
enter
push
test
stos
cld
fiaddl
unpcklps
repnz
cmp
xor
popf
fstps
rol
adc
aam
xchg
or
push
shlb
mov
xor
lds
rorb
int
sti
jo
dec
dec
add
jmp
jecxz
insb
push
ret
outsb
and
pusha
xor
add
sub
jb
stos
cmc
push
aam
add
dec
jmp
xchg
xor
xor
aad
add
in
jnp
lock
sti
inc
adc
sub
imul
nop
aad
pop
push
stos
push
ja
pop
jp
adc
aaa
xchg
sub
lahf
cmpl
mov
add
orb
pop
mov
xlat
ds
aaa
nop
insb
inc
std
mov
js
movsb
jb
les
add
jbe
mov
popa
inc
xchg
jl
sbb
add
out
pop
push
push
imul
test
dec
xchg
push
aad
adc
out
dec
xor
inc
xchg
mov
std
push
aad
dec
jle
and
cmp
idivl
arpl
or
fcmovb
leave
push
stc
insb
mov
push
mov
popf
pop
or
cmp
test
push
sub
loop
inc
testl
pop
aaa
fucomip
pusha
mov
dec
push
cmpsb
aam
jge
adc
xchg
sbb
fnsave
je
push
push
add
gs
pusha
cmp
clc
push
adc
cmpsl
cmp
mov
out
pop
fisttps
repz
inc
sbb
imul
cli
stos
pusha
mov
ljmp
out
stos
push
decl
aaa
fwait
rcrb
or
adcb
imul
and
nop
mov
out
ja
jae
pop
rorl
lahf
daa
jl
cmp
out
ret
imul
xor
test
push
int
les
bound
ss
add
xor
xor
xor
dec
or
rcr
pop
pop
mov
xchg
call
out
in
ret
shrl
out
aas
sbb
mov
adc
pop
call
jae
test
lock
lods
cmp
sub
mov
pop
jge
fisubrl
adcl
add
sarl
add
mov
dec
xchg
imul
or
or
xor
fisubrl
mov
ret
in
ret
arpl
and
sub
cmp
add
ja
pop
jno
icebp
sbb
xchg
pop
and
inc
adc
pusha
inc
adc
xor
adc
push
lds
loopne
cmp
dec
pushl
add
add
shlb
out
push
jge
pop
fistl
pop
pop
dec
testb
mov
jb
mov
adc
fwait
ljmp
je
outsl
insl
sbb
jmp
pop
mov
enter
mov
xchg
mov
dec
sbb
test
add
pop
xchg
call
mov
mov
pop
movsb
cmp
std
mov
movsb
lcall
in
out
jg
xor
push
jecxz
aam
dec
lret
icebp
jecxz
loopne
mov
inc
mov
mov
fildl
loop
push
or
add
fld
cmpsb
cltd
adc
xchg
std
out
pop
dec
or
xchg
push
in
movsl
out
std
das
dec
mov
lds
mov
jmp
add
loopne
in
add
pushf
jl
gs
inc
leave
pop
and
xlat
outsb
aam
loopne
cli
les
fld
xchg
aaa
lods
cmpsl
icebp
aad
pop
test
mov
mov
rclb
xchg
imul
add
fcoml
rorl
sti
sub
sbb
insb
inc
inc
push
adc
pop
lret
ret
pusha
iret
cltd
jae
loope
jg
pop
add
sbb
mov
adc
add
adc
xchg
dec
jge
stos
mov
adc
add
dec
and
fs
and
add
adcb
mov
pop
insb
lcall
adc
insl
pop
jmp
xor
fiadds
inc
fiaddl
daa
xchg
lahf
sbb
loopne
jl
inc
std
aad
imull
jmp
push
movl
addr16
mov
dec
mov
sahf
aaa
arpl
mov
in
jp
ret
mov
adc
cmp
ds
stos
add
clc
add
mov
shll
jbe
fs
test
lcall
insl
popf
mov
iret
jg
pusha
mov
push
xor
dec
int
sbb
icebp
adc
adc
adc
jae
lcall
sti
enter
jbe
insl
jne
mov
mov
lret
cmp
test
adc
bound
cwtl
fmuls
lret
sbb
into
cmc
popa
stos
lahf
outsl
leave
shlb
pop
jge
lcall
pop
add
aaa
adc
jnp
aam
or
sbb
push
int
add
rcl
adc
mov
mov
call
lahf
sbb
pop
mov
jmp
mov
movsb
nop
cmpsl
je
fldenv
xor
scas
jle
outsb
jmp
imul
pop
insl
pop
nop
pop
pop
adc
inc
push
push
dec
jp
fnsave
sbb
jecxz
push
into
imul
jne
pusha
cmpsl
dec
cmp
push
fbstp
jns
shll
hlt
std
sub
lret
aaa
jo
mov
sahf
inc
aaa
xchg
mov
mov
mov
mov
fbld
mov
push
cmp
das
divl
jno
popf
mov
push
inc
dec
add
test
pop
sbb
pop
pushf
pop
push
mov
sbb
movsl
movsl
pop
lcall
cli
and
rorb
sarl
insl
pop
loope
stos
lahf
pop
lds
lock
xchg
push
inc
test
and
nop
push
or
nop
aam
or
jno
mov
idivb
add
sbb
shl
add
pop
sbb
or
inc
aad
movsb
inc
ds
lods
and
push
lea
inc
xor
cmpsb
aam
aas
pop
out
push
add
push
mov
js
or
out
jns
arpl
xlat
mov
cltd
cld
adc
out
adc
arpl
sbb
push
xchg
cwtl
add
add
enter
fildl
mov
js
jp
pushf
aam
xor
xchg
and
clc
mov
mov
outsl
sbb
and
lret
xchg
aad
lret
jb
xchg
loope
cmc
faddl
enter
adc
mov
dec
sub
popa
lahf
fs
sbb
mov
shr
fs
jnp
mov
push
cmp
out
sbb
and
pop
push
cmp
aam
das
in
or
inc
dec
or
andl
push
sti
movsb
in
jb
mov
aam
shll
cmpsb
mov
xchg
xor
xchg
repnz
movsb
outsl
hlt
inc
flds
push
out
test
or
inc
movsb
pop
sub
mov
jecxz
nop
ljmp
pop
aam
jge
aad
lret
aas
not
scas
jbe
cmp
data16
sbb
pop
xchg
xlat
push
jmp
nop
cltd
imul
rolb
pop
mov
test
popf
push
sahf
xor
add
jnp
popa
mov
adc
adc
lods
pop
add
xchg
cli
icebp
add
loope
xchg
aaa
insb
or
shlb
push
push
push
dec
mov
mov
push
iret
in
out
jne
aam
push
inc
mov
jno
rorb
in
adc
cmpsb
xlat
mov
xlat
pusha
push
pushl
pusha
and
jp
pop
add
aam
faddl
dec
mov
lea
rcrl
shrl
jl
and
xchg
sahf
cmpb
jno
xchg
fwait
jo
pop
das
mov
inc
jg
cmp
gs
lret
sub
xchg
ja
test
mov
enter
adc
pusha
cmp
xchg
sbb
jo
std
add
loope
sahf
xor
pop
xor
shlb
dec
scas
loop
cmc
pop
xchg
mov
or
hlt
not
test
mov
cmc
add
jmp
inc
ja
mov
cli
mov
pop
aas
cltd
stos
ret
insl
icebp
or
push
pop
test
and
and
in
and
xchg
rcl
mov
push
inc
outsb
loope
aad
adc
imul
dec
repnz
movsl
jne
jb
aad
test
addl
sahf
orl
jp
mov
movsb
pop
stos
inc
outsb
mov
hlt
mov
adc
jg
mov
aam
sbb
dec
test
stos
scas
aad
cmp
shl
or
add
or
fwait
cs
jns
icebp
fs
inc
mov
or
push
sub
notl
inc
jecxz
sub
mov
add
data16
mov
popa
outsl
mov
lret
enter
inc
mov
loop
aas
out
dec
orb
xor
push
xorb
mov
pop
das
fistps
cmp
xor
lock
or
adc
shlb
pop
dec
aad
hlt
out
inc
sbbl
sbb
enter
pop
push
outsb
sti
jmp
or
mov
call
insb
push
ss
jno
mov
and
and
sbb
inc
and
daa
or
cld
jmp
mov
pop
and
cmp
sub
add
mov
mov
adc
push
mov
xchg
xorb
int
pop
or
inc
fidivrs
hlt
lock
sub
inc
lds
addl
add
jnp
xor
mov
lcall
shlb
sub
and
push
mov
or
shl
cmc
outsb
push
adc
fisubrl
aam
sub
xchg
jae
inc
mov
adc
adcb
xchg
insl
addb
stos
mov
imul
ja
add
std
leave
xchg
lds
dec
fiadds
push
cltd
enter
fnstsw
xchg
mov
sub
cli
ret
loopne
loope
mov
jle
rolb
and
xchg
cmpsl
pop
mov
mov
jmp
sub
dec
sbb
aas
bound
cmp
sub
fcmove
jmp
decl
mov
xor
mov
mov
loope
call
xchg
adcl
pop
mov
mov
xchg
arpl
insl
pop
cmp
das
inc
ja
mov
add
xchg
in
pop
aam
push
dec
jne
cmp
push
out
xor
inc
movsb
clc
faddp
add
out
cmpl
dec
addr16
and
xchg
inc
movsl
hlt
outsl
scas
add
push
in
inc
pop
subl
aad
in
cld
or
hlt
fwait
inc
stos
mov
dec
ret
enter
mov
aad
sub
enter
daa
lahf
pop
sbb
arpl
cmp
out
fwait
pop
gs
arpl
cmp
inc
push
jns
aad
adc
add
pop
cmp
xor
aam
iret
jb
pop
xor
xchg
mov
pop
sarl
inc
inc
repz
dec
sub
pusha
or
clc
out
push
shll
jmp
outsb
nop
sub
outsl
mov
test
add
mov
jp
and
pop
imul
jecxz
jb
jge
test
cwtl
add
inc
mov
ljmp
mov
in
fwait
add
pusha
pop
adc
add
mov
out
or
enter
pop
push
sub
mov
jmp
stos
mov
mov
jecxz
pop
sbb
cmpsb
push
outsb
mov
into
gs
into
dec
adc
je
pop
mov
mov
test
pusha
test
push
popa
lea
ret
xchg
std
outsl
ja
jns
jo
sbb
and
in
and
xor
nop
mov
iret
mov
or
or
add
mov
pop
or
sbb
aam
lahf
inc
sbb
or
push
push
repz
cld
incb
adc
leave
sbb
idiv
dec
mov
pop
mov
pusha
push
mov
cmp
repz
add
pop
arpl
arpl
sbb
enter
pop
rep
fwait
jl
mov
push
and
cmpsl
xchg
pop
cmp
sbb
xchg
dec
xlat
adc
pop
dec
movsl
data16
mov
adc
or
fwait
add
fiadds
aad
out
dec
cmp
lea
mov
and
ljmp
or
cli
push
mov
pop
dec
cltd
mov
stos
fmuls
dec
sub
mov
or
aam
cltd
cs
cmpsb
cmpsl
dec
mov
cmp
fcmovnb
xlat
xchg
xchg
outsb
fistpl
jns
cmc
cmp
pusha
sub
or
mov
push
dec
sbb
adcb
pop
mov
or
mov
push
icebp
add
fs
test
hlt
add
xlat
loop
sbb
mov
xchg
jl
xchg
add
insb
inc
adc
inc
cmp
adc
jae
add
mov
mov
out
mov
sbb
pop
dec
lret
mov
test
pop
push
and
or
adc
sbb
mov
cmpsl
sbb
leave
hlt
add
and
lahf
mov
ret
cmpsb
pop
ljmp
sub
pop
sbb
das
jns
nop
nop
stos
icebp
inc
cmpb
clc
aam
pop
cmpb
out
jg
add
inc
lret
mov
adc
add
insl
add
aam
dec
in
les
xchg
mov
xor
cs
arpl
push
pop
sbb
ret
clc
add
jp
rcr
ja
aam
inc
cs
ja
outsb
mov
mov
mov
shlb
loope
test
insb
mov
cld
adc
movsl
jb
sahf
aaa
ret
mov
outsw
mov
add
iret
or
fisttpl
int
jnp
adc
xor
add
call
cwtl
cltd
lea
mov
mov
stc
movsl
add
mov
cmp
insb
pop
adc
lods
loop,pn
inc
lods
fsubl
add
cmp
sbbl
pop
mov
aaa
jmp
lret
in
sbb
or
mov
loop
add
push
adc
int
aam
sarb
rcrb
push
and
pushf
jp
pusha
or
xchg
mov
add
mov
hlt
cmc
inc
and
add
mov
cmp
mov
movsl
jae
push
das
mov
fcomp
pop
test
adc
lods
je
cld
fwait
pop
subl
arpl
sub
adc
mov
dec
or
les
add
imul
popf
mov
fwait
imul
cmp
ficoms
push
or
in
aam
out
daa
or
ret
insl
mov
dec
out
sub
add
add
push
mov
xor
scas
sar
loopne
jns
add
jecxz
fwait
out
mov
mov
or
jecxz
mov
aam
enter
rclb
sub
inc
daa
iret
mov
cld
mov
mov
push
in
push
adc
xlat
aaa
stos
and
xchg
enter
xchg
movb
out
jecxz
repnz
mov
scas
sarb
pop
dec
lea
dec
movsb
or
and
xchg
add
pop
inc
cmp
or
pop
cld
add
and
mov
dec
fidivrl
mov
mov
xchg
cltd
push
ss
cmp
test
movsl
mov
dec
adc
loop
dec
sub
pop
xor
sub
stc
mov
xor
xchg
das
fimuls
jecxz
fdivp
add
js
mov
push
addr16
jl
sub
pop
insl
add
xor
dec
or
popf
sbb
xor
mov
fcomp
pop
lock
shrl
test
call
mov
or
int3
or
dec
mov
aas
mov
lret
dec
and
xchg
enter
aad
cmpl
rorl
jb
add
fimuls
das
pop
and
fisubs
hlt
mov
das
sbb
push
ds
addr16
mov
jbe
sbb
sbb
daa
push
jg
scas
pop
popf
adc
cld
lcall
pop
icebp
push
andb
mov
adc
shlb
sub
pop
out
std
jge
shlb
test
inc
loopne
add
fstpt
inc
pop
hlt
std
loop
iret
and
add
enter
aam
pusha
out
ljmp
iret
mov
imul
mov
add
adc
test
jns
xchg
das
jo
pusha
add
push
ret
les
fincstp
imul
or
in
adc
pop
fdivrs
push
test
pop
outsb
and
ds
add
mov
adc
mov
repz
aad
xchg
push
push
inc
jl
fwait
aad
or
mov
mov
scas
fldl
cld
sbb
repz
lock
ja
push
test
lock
dec
scas
mov
add
pop
std
popa
fimull
fst
idivb
cmpl
loop
mov
push
sub
repnz
mov
cltd
xor
adc
int3
std
out
stos
out
xchg
jecxz
aam
and
xor
mov
inc
lahf
cmp
das
push
pusha
push
xlat
xor
in
cli
mov
cmpsb
pop
adc
in
sub
jl
mov
out
push
mov
in
dec
mov
adc
mov
movsl
cmp
mov
mov
in
sbb
lahf
fistl
gs
fwait
decl
movsb
dec
test
vdivsd
push
and
notb
lret
mov
cmp
sbb
sahf
xlat
mov
xchg
movsb
xor
inc
pop
cld
mov
xchg
das
push
adc
arpl
arpl
out
popa
mov
push
dec
or
mov
rclb
cwtl
repnz
lods
add
mov
cmp
test
mov
push
inc
out
inc
sahf
nop
mull
lahf
dec
jae
pop
daa
jecxz
js
cs
paddq
fadds
andb
and
int
add
loop
lds
push
addl
pop
shl
aad
xchg
pusha
loopne
mov
dec
mov
mov
dec
jne
ljmp
and
mov
js
mov
xor
push
in
shlb
jne
ss
mov
add
sbb
push
pop
pop
inc
add
stos
lret
mov
mov
xor
or
mov
fs
stos
jo
mov
mov
insb
mov
mov
sahf
popf
lea
fadds
jns
das
sbb
jbe
pop
aam
inc
cmp
daa
dec
add
decl
into
movsb
clc
push
sbb
inc
cmc
gs
pop
push
fwait
movsb
popa
dec
das
add
ja
pusha
mov
daa
fcomip
cs
or
dec
shl
aam
mov
mov
mov
xlat
insl
sbb
test
inc
sahf
les
loope
ljmp
data16
jnp
aas
in
mov
fldl
adc
ret
fwait
pop
enter
lcall
dec
mov
mov
xchg
cs
divb
push
mov
lahf
mov
xor
pop
jno
push
mov
std
push
lcall
gs
std
xor
jp
xchg
add
test
adc
sbb
dec
inc
ret
mov
mov
mov
dec
inc
inc
mov
out
add
xchg
and
stc
bound
push
inc
arpl
xor
or
loopne
aaa
sbb
icebp
inc
push
clc
cmp
test
pushf
sub
adc
push
repz
dec
mov
pop
rorb
mov
or
fstpt
iret
outsb
iret
ret
fnsave
cs
cs
cltd
inc
cmpl
mov
shr
xor
cli
mov
push
push
jp
adc
cmpsl
pop
xchg
out
hlt
popa
out
mov
xchg
inc
mov
fidivl
pop
push
pop
cli
cmp
int
repz
sbb
pop
sbb
push
xor
imul
jecxz
xchg
pop
xchg
add
jo
gs
cmpsl
or
mov
xor
popf
sub
lahf
and
xlat
pusha
and
popf
imul
xlat
or
mov
fwait
sbb
fldt
in
arpl
jne
repz
push
out
out
aas
mov
adc
mov
pop
mov
int3
rolb
int
xchg
pusha
cmc
pop
sbb
mov
lcall
out
inc
or
test
mov
adc
cltd
xor
lcall
daa
mov
ud0
insl
and
imul
jecxz
stos
sbb
nop
mov
push
mov
popf
cmp
notl
mov
xchg
scas
fisttps
sbb
cs
mov
dec
inc
mov
dec
pop
xchg
sbbb
or
enter
in
clc
cltd
pop
repnz
les
dec
mov
decb
cmp
push
in
fidivrl
push
and
mov
jmp
loop
gs
xor
inc
dec
subb
test
or
lods
push
add
cmp
ljmp
jo
jmp
adc
xor
ror
loopne
subb
or
sahf
stos
mov
fwait
rolb
or
pop
pop
sti
unpcklps
in
dec
shl
push
jecxz
aam
mov
push
insb
clc
or
fisttpl
test
mov
mov
lahf
xchg
jno
xchg
lcall
adc
sub
pushf
test
adc
scas
daa
lcall
adc
pop
mov
call
mov
andb
lock
js
pop
push
pop
aam
and
adc
mov
jnp
ret
fwait
adc
cmp
jle
jle
ljmp
sbb
add
mov
leave
and
int
out
adc
fisubrs
aam
mov
push
cwtl
ret
and
and
dec
lret
sbb
les
push
mov
movsb
movsl
fwait
push
add
arpl
fisubrs
push
out
imul
mov
mov
inc
scas
pop
out
ret
push
pop
mov
repnz
mov
pop
pop
xor
aam
pushf
imul
lahf
inc
mov
shlb
stos
mov
jecxz
sbb
inc
cmpsb
jae
push
pop
out
jecxz
adc
pushf
fldcw
jne
push
popf
pop
mov
xor
stos
add
and
adc
popl
cld
push
outsb
mov
fs
ds
bound
fcompl
add
inc
stos
cmp
enter
xor
in
lods
push
stos
dec
ret
repz
inc
pop
push
dec
add
aad
mov
ja
inc
stos
mov
js
jge
push
push
xchg
dec
lods
xchg
mov
scas
mov
jp
jne
cmp
mov
or
cld
insl
xlat
pop
jno
dec
pop
aaa
mov
adc
push
lret
test
arpl
add
addr16
dec
loopne
cmpsl
ljmp
jge
jno
mov
je
xchg
push
cmp
mov
adc
pop
cmpsl
out
pop
aad
jmp
jle
pop
jne
ja
lahf
mov
jecxz
aad
arpl
std
nop
int3
xchg
xchg
jmp
push
incl
mov
leave
mov
jns
inc
push
mov
lret
testb
and
mov
std
js
pop
aad
arpl
rorl
cmpsb
test
dec
push
mov
pop
cmpsl
xchg
es
xor
xor
aad
pusha
or
outsb
mov
pop
stos
lcall
pop
inc
sbb
sbb
mov
sub
out
pop
add
test
add
imul
sbb
xchg
pop
pop
fwait
insl
lcall
ret
push
je
mov
pop
sahf
adc
cmc
mov
jg
push
pop
test
mov
loopne
add
cmp
outsb
shlb
xchg
insl
je
xchg
xchg
ret
dec
rcl
inc
push
in
daa
stc
in
push
xchg
mov
sbb
mov
xchg
pop
or
lahf
cmpl
xchg
repnz
adc
js
into
fcomip
sbb
jle
movsl
jle
cwtl
stos
push
add
icebp
in
or
fistps
loope
mov
add
notb
insl
loope
sub
fisubs
enter
ljmp
test
add
push
mov
jno
dec
or
movb
adc
shlb
mov
cmpsb
dec
dec
test
push
sbb
enter
adc
or
mov
push
jno
mov
test
mov
mov
adc
mov
xor
loopne
or
ret
add
cld
test
inc
lret
inc
lcall
push
mov
loope
mov
add
out
shlb
ss
jnp
jo
aad
xor
xor
ds
push
mov
push
aad
stc
sbb
js
xor
mov
orl
add
xorl
stc
imul
inc
pop
aam
lahf
xchg
bound
rclb
in
or
cmp
addr16
pop
jnp
xchg
stos
sub
and
icebp
aam
or
sbb
testl
mov
insb
es
adc
lea
sub
pop
rolb
shll
shrl
mov
insl
mov
add
pop
mov
lea
sub
lret
aam
dec
inc
and
sahf
enter
sbb
xor
add
add
add
jecxz
pop
imull
pop
add
inc
push
pop
cwtl
xor
xorb
cmp
mov
push
jg
pop
inc
ret
movsb
aad
cmp
aaa
cmp
aad
icebp
ljmp
rclb
sub
and
das
aaa
pusha
add
out
push
insl
xchg
sub
jle
and
into
lods
push
or
cmpsl
pusha
loope
pop
test
adc
in
mov
testl
push
or
fcomps
lret
movsl
and
push
and
jae
loope
inc
ja
cmp
shrl
and
sub
mov
hlt
arpl
adc
ss
sahf
mov
lahf
les
lret
icebp
mov
rolb
add
xchg
inc
or
adc
push
mov
xchg
inc
pop
pushf
or
dec
add
jl
testl
add
stc
addb
pslld
outsl
pop
sub
icebp
pusha
xor
add
das
mov
xchg
ret
scas
mov
aad
ds
dec
pop
mov
mov
push
stos
and
bound
scas
jns
pop
cs
cmp
push
pushf
imul
push
int
outsl
pop
pop
lret
mov
mov
mov
and
rclb
mov
test
cmp
imul
clc
shll
mov
into
pop
adc
or
test
push
pusha
mov
leave
sti
inc
out
nop
add
testb
jb
xchg
mov
inc
jecxz
pop
xchg
aam
dec
add
xor
in
sbb
jno
adc
inc
gs
stos
pop
mov
dec
insl
icebp
push
xchg
inc
jmp
pop
adc
add
adc
or
xchg
lret
loop
sahf
iret
lds
push
adc
pop
fsubp
mov
rdmsr
test
push
inc
mov
test
fsts
arpl
iret
pop
dec
adc
movsb
sbb
out
pop
subl
roll
pop
or
add
inc
adc
scas
mov
add
outsl
test
ret
mov
mov
out
fwait
loopne
dec
call
cmp
jns
cmp
mov
lahf
xchg
aas
xchg
xor
out
mov
xchg
out
and
sub
inc
xor
into
mov
sbb
mov
insl
lret
add
add
in
fstp
into
dec
pop
pop
ror
or
adc
dec
lea
push
jae
pop
mov
jnp
sbb
insb
pop
dec
in
xchg
int3
pop
shrl
dec
pop
adc
mov
ret
push
inc
sub
out
jg
pop
in
sarl
fisubrs
pop
inc
icebp
push
fsubrs
in
add
adc
xchg
mov
mov
int
data16
lahf
addr16
enter
push
mov
cmpsb
pop
xchg
jge
add
in
add
add
lcall
fstl
mov
lret
jl
mov
in
sahf
push
int3
lods
popa
lret
stos
mov
mov
mov
leave
xorl
sahf
jne
cmc
imul
in
cli
mov
pop
push
jb
dec
mov
add
into
add
dec
push
cltd
mov
lods
cmp
aam
mov
and
pop
into
push
aam
lahf
sbb
je
or
add
lahf
ljmp
es
push
adc
lret
fs
pop
xor
repnz
jmp
mov
sarl
jg
xor
rorl
dec
fs
in
push
adc
pop
je
push
stc
repnz
jmp
ret
add
or
pop
adcl
js
movb
subb
dec
es
ja
push
xor
aam
notb
sahf
mov
jge
mov
cmp
cmp
scas
add
cltd
dec
loope
mov
or
mov
gs
xor
and
cld
imul
add
inc
jno
imulb
cmc
lahf
xchg
push
inc
repz
push
push
mov
lret
xor
aad
imul
scas
dec
jns
push
cli
inc
sub
inc
les
loop
mov
add
mov
ss
loope
inc
mov
push
xchg
call
aad
add
and
push
pop
jns
xor
ficompl
sub
sbb
jl
subb
out
mov
mov
inc
sub
inc
fldl
cmp
add
mov
or
xor
jnp
hlt
mov
movsb
aad
mov
incl
xchg
out
es
test
test
das
out
or
mov
mov
or
fstpl
mov
stc
popa
fimuls
mov
adc
pop
cmp
xchg
or
jae
ds
pop
imul
and
loopne,pn
pop
lret
leave
daa
mov
mov
adcb
shll
push
dec
aam
fwait
dec
mov
icebp
mov
into
push
sub
icebp
or
pop
pop
or
stc
xchg
lret
cs
movsl
mov
lret
or
push
cltd
arpl
enter
es
cld
xchg
sbb
dec
push
rcl
stos
cmp
add
dec
jl
insb
xor
add
in
lret
imull
sbb
push
mov
cld
xchg
aad
js
out
jb
das
mov
adc
or
aas
pop
insb
std
fadds
call
stos
ja
insb
out
les
push
add
xchg
ljmp
push
fndisi(8087
mov
inc
cs
inc
std
push
add
imul
lds
call
cmpb
cmc
popa
fldl
and
or
pop
cltd
and
shl
es
stos
xchg
dec
repnz
call
dec
mov
stc
paddw
sbb
mov
stos
xchg
inc
push
adc
mov
cwtl
pop
push
jb
addr16
ds
rorl
add
add
and
mov
fisttps
push
aad
call
mov
mov
push
sbb
cmp
mov
cmp
pop
adc
lock
lock
and
jo
aad
out
push
xchg
outsb
mov
sbb
movsl
cli
pop
jmp
mov
test
adc
shll
ja
popa
fldenv
lea
ret
mov
or
xor
popa
movsb
aad
fildll
pop
xor
mov
push
mov
push
lods
add
iret
shr
imul
shll
or
adc
movsl
call
sbb
lock
repnz
rclb
dec
pop
pop
lahf
add
dec
repnz
push
pop
sub
mov
push
je
aam
xchg
push
sbbl
test
push
pusha
repz
inc
jae
pusha
jno
leave
dec
xchg
add
cld
fbld
ret
xchg
es
aad
mov
sub
clc
das
inc
stos
lcall
push
mov
xor
or
inc
mov
testb
icebp
aad
jmp
pop
mov
hlt
jl
sahf
lods
inc
push
sbb
add
cmp
adc
mov
mov
jmp
hlt
inc
adc
dec
addr16
add
ds
dec
cmpb
mov
cmpsl
xchg
gs
pushf
pop
icebp
mov
pop
mov
push
sub
cmpsb
cmpsb
pusha
mov
dec
push
jo
test
fisubl
push
cld
les
insb
testl
mov
data16
lods
loop
mov
adc
fistps
mov
es
xchg
js
insl
mov
pop
dec
aas
cwtl
lds
fcoml
push
outsb
aad
push
cmpsb
repz
adc
stos
faddl
xchg
stos
add
sti
fisttpll
push
rclb
gs
outsl
fxch
jbe
pop
mov
enter
ja
jle
mov
ret
out
addb
pusha
test
mov
or
adc
xchg
pusha
pop
ficomps
push
xlat
xor
shll
adc
bound
int3
mov
imul
imul
push
push
jmp
xor
mov
das
sti
stos
xor
push
pop
push
cmpsb
mov
or
mov
int3
cwtl
mov
fists
pushw
aam
cmp
mov
xchg
push
and
pushf
mov
nop
fsubrl
divl
push
pop
jo
lcall
movups
mov
fimuls
jp
ror
jmp
fsts
iret
loopne
cli
cmp
jl
gs
pushf
pop
paddw
out
push
aaa
aam
pop
pop
jl
sbb
mov
add
dec
loopne
loop
jl
test
mov
inc
ss
and
jecxz
add
inc
mov
sbb
imul
divb
or
cmpsb
in
dec
or
push
aas
fs
xor
cmp
sbb
push
cmc
movsl
data16
cmp
push
mov
les
es
in
dec
jno
and
dec
pushf
xchg
out
aad
ja
jecxz
jo
mov
pusha
pop
adc
aam
jns
push
test
mov
shll
data16
adc
bound
inc
cmp
mov
push
mov
in
mov
pmaxub
fisubl
xor
pop
dec
inc
repz
adc
xchg
data16
mov
lock
scas
xchg
mov
pop
pop
add
inc
aad
lret
mov
ds
cwtl
sub
cmp
stc
mov
in
pop
mov
add
mov
negb
fsqrt
addb
or
int3
fdivrp
xchg
xor
mov
cmpsl
cmp
dec
sub
adc
jnp
popa
pop
pop
push
fimuls
out
push
add
cmpsb
push
pop
mov
inc
sbb
mov
decl
inc
push
push
lcall
pop
pop
jbe
clc
cld
inc
aaa
add
jmp
jno
scas
adc
jge
inc
adc
notl
test
mov
inc
int
es
cmp
mov
sub
mov
aas
mov
lea
jae
ds
out
aas
sub
sbb
into
sub
mov
and
sti
fmuls
mov
jnp
pop
pop
insb
aaa
ret
add
sub
movsb
shlb
out
shl
add
add
mov
jne
loopne
sbb
mov
push
push
sbb
or
nop
call
xor
mov
pusha
mov
mov
xchg
aad
insl
or
or
mov
cmp
adc
cmp
lock
xchg
test
pop
cld
lahf
push
outsb
mov
sub
insl
pop
mov
fnstsw
lds
push
jge
mov
add
pop
div
inc
orb
cmpsl
nop
jae
pop
lahf
fidivs
cmp
dec
pop
jae
jmp
stmxcsr
add
in
hlt
testb
jg
push
jae
movsl
xchg
addr16
mov
mov
and
inc
add
ret
insl
mov
jbe
pop
pop
sub
jo
mov
sub
ret
lods
std
cwtl
add
ficomps
jmp
mov
out
aad
sub
hlt
subl
fcompl
leave
aam
daa
adc
xchg
cmp
add
sbb
or
xchg
adc
leave
sub
stos
insb
iret
int3
inc
cli
push
jg
jbe
push
inc
sbb
adc
add
aas
jbe
das
out
or
mov
or
jnp
fxch
les
inc
outsb
adc
loopne
nop
or
in
add
int
hlt
dec
xorb
and
or
sub
mull
invd
add
add
jns
dec
add
mov
push
pop
jg
push
in
scas
xor
icebp
incb
loopne
pop
fidivs
es
mov
jno
pusha
clc
jecxz
add
push
ret
js
push
mov
sbb
hlt
lods
adc
orb
mull
add
and
sub
push
xchg
mov
js
setb
push
lret
fildll
mov
fs
ret
aam
dec
add
ret
pusha
ja
mov
mov
mov
dec
jne
out
out
pop
cmpsb
sub
or
sbb
not
lock
fdivrl
aam
ret
xchg
pop
lret
sbb
loopne
out
cmpsb
in
loopne
iret
hlt
xor
call
in
mov
jne
fs
lcall
clc
jle
enter
pushf
dec
cmc
fcoml
add
je
nop
mov
test
das
fstl
fwait
pop
mov
lahf
pop
clc
loopne
add
pusha
repz
push
ds
sbbb
and
mov
jg
mov
dec
inc
js
push
jae
in
mov
cmp
jl
stos
mov
jp
ret
push
sub
jb
xor
add
in
mov
je
jns
test
andb
add
pop
imul
jno
testb
lcall
pushf
mov
and
mov
mov
jp
fisubrl
and
push
push
jne
icebp
imul
shll
fstp
cmp
add
jns
xor
int
cltd
xchg
fiaddl
mov
sub
add
popa
fwait
sub
mov
and
roll
adc
test
lods
lods
fisubrl
xor
loopne
or
xlat
xchg
ljmp
sbb
mov
test
or
enter
js
mov
std
pushf
lods
das
push
inc
popf
fwait
insb
pop
push
xor
scas
shlb
and
or
outsl
jne
imull
inc
xchg
jg
cmp
mov
xorb
pop
pushf
inc
mov
insb
push
and
cmp
scas
cld
sbb
xor
loopne
cmovo
add
mov
mov
pop
gs
aam
lret
and
mov
out
fldenv
fs
xchg
mov
adc
add
xchg
fsubrs
sub
mov
mov
push
sbb
out
add
fwait
andb
orb
es
addb
inc
aam
sbb
xchg
jmp
add
outsl
fldcw
adc
mov
mov
push
jge
out
xchg
mov
subb
push
rorl
adc
clc
insl
aad
int3
dec
sub
xor
cmpsb
lahf
aas
xor
aad
test
mov
repz
add
jg
inc
roll
push
push
cmp
ja
rol
pop
imul
mov
insl
pop
imul
inc
movsb
cs
test
rcr
mov
leave
mov
lods
sub
mov
xor
aam
sub
dec
sti
int
mov
mov
mov
je
popf
fs
sbb
jno
clc
test
jmp
push
ljmp
xchg
jno
pop
dec
stos
std
cmp
popa
cmp
jle
pop
lahf
sub
imul
mov
mov
mov
or
dec
int
jns
cmp
filds
mov
inc
or
sbb
call
dec
rcl
dec
addr16
adc
js
out
xor
pop
sbb
scas
shrb
sarb
pop
pop
inc
or
inc
xor
mov
dec
test
sbb
adc
pop
mov
out
add
hlt
imul
decb
mov
dec
adc
jl
pusha
gs
mov
mov
loope
cmc
in
mov
out
jmp
mov
mov
es
stc
cmp
xor
testl
add
jae
mov
pusha
mov
fwait
gs
adc
ss
push
bnd
enter
popf
xchg
nop
jg
push
cmp
pusha
lret
sbb
loopne
mov
cmp
push
pop
push
push
xor
sbb
adc
mov
rcrl
dec
test
ret
push
push
jmp
inc
mov
popl
push
mov
pusha
push
jl
fadds
or
aam
lea
rcrl
hlt
aas
mov
push
mov
xchg
inc
add
push
and
fcomp
mov
mov
iret
pushf
fildl
inc
jle
adc
imul
into
cmp
addl
pop
dec
jl
popf
jb
aam
adc
mov
mov
and
xor
call
sbb
int
fldenv
cmp
jp
addr16
adc
cwtl
sub
jne
xor
jle
rcrb
pop
jg
fs
or
dec
outsb
rcll
xchg
hlt
mov
pushf
ljmp
xchg
loope
fcom
or
mov
orl
insl
lahf
movsl
add
daa
inc
inc
and
or
out
push
cltd
sub
stc
adc
dec
push
and
hlt
clc
sub
sub
inc
enter
push
xor
roll
push
or
add
movsb
sbb
cmpsb
outsl
dec
or
cmc
mov
aad
jp
xor
mov
ja
std
pop
imul
out
sbb
pop
pand
lcall
pusha
icebp
and
cmp
inc
adc
pop
cs
jne
jb
sti
fldl
lcall
lret
inc
mov
out
test
push
imul
mov
push
mov
lock
scas
jbe
jge
xchg
add
aam
lock
fcomi
movsb
cld
stos
stos
movsb
aad
in
data16
fcmovbe
addr16
je
cmpsl
ret
inc
std
outsb
mov
sbb
mov
dec
add
pop
xlat
xchg
mov
imul
aas
cld
aas
push
popa
pop
lds
add
sub
enter
out
hlt
mov
in
mov
sbb
mov
pop
shll
sbb
scas
pusha
jg
lcall
movb
int3
adc
gs
add
cltd
enter
mov
pop
insb
cmpsb
sub
mov
and
fistps
pushf
push
mov
mov
test
cmp
outsb
andb
ljmp
mulb
fiaddl
stos
inc
cmp
rolb
push
xorb
fldcw
adc
sbb
mov
std
push
mov
loope
mov
xchg
add
add
mov
cmp
jno
insl
dec
movsb
movsb
out
lods
stos
daa
mov
icebp
mov
dec
arpl
cmp
cld
xchg
sahf
mov
repz
dec
iret
pusha
mov
ds
lret
shlb
pop
loop
aad
insl
jo
jp
cmc
and
pop
mov
cld
movsb
into
mov
aam
enter
out
std
mov
orb
inc
ja
sub
lds
cmp
mov
pushf
pop
sbbb
sub
push
sti
inc
mov
sub
outsb
enter
sar
aad
lods
movsl
pop
out
iret
sti
je
jae
mov
popl
mov
adc
pop
aas
dec
lret
es
lds
les
dec
pop
pop
push
mov
ret
sahf
out
jge
add
add
mov
push
insb
stos
std
divb
and
fmull
enter
cmp
inc
sar
cmp
jmp
and
insb
aam
mov
mov
movsl
jecxz
clc
ja
ret
fwait
jnp
jp
cmpb
popf
ss
aas
xchg
call
mov
notl
xchg
add
and
xchg
repz
movsb
and
dec
rorl
aaa
sub
adc
idivl
jge
scas
dec
push
pop
mov
pusha
and
loope
or
imul
inc
push
aam
adc
dec
sub
rclb
dec
push
std
push
jmp
adc
arpl
sbb
pop
and
das
push
add
and
cmp
aaa
jle
shl
ja
or
loop
xchg
stc
mov
mov
add
inc
stc
mov
lock
outsb
add
cmp
ljmp
pusha
mov
stc
jo
outsb
out
cmc
repz
lahf
aam
les
sbb
daa
or
pop
add
or
inc
push
pop
jg
data16
sub
mov
dec
lret
into
or
cwtl
pop
out
push
xchg
cmp
in
ret
int
lret
mov
add
hlt
adc
add
insb
nop
fiaddl
jne
mov
and
test
or
inc
or
push
mov
jo
sysexit
jl
sbb
jno
mov
es
fidivs
jns
push
mov
fisttps
and
adc
jmp
aas
gs
adc
mov
outsl
ret
fldenv
sub
adc
mov
and
add
push
xchg
xchg
add
mov
pop
mov
scas
cmp
fcmovbe
jge
and
test
jno
inc
push
fistps
ret
shll
push
mov
push
xchg
add
dec
add
push
ficompl
cmpsl
jg
test
adc
fwait
fwait
xor
mov
dec
fsub
mov
sbb
fcmovu
or
add
clc
andl
push
add
rcr
call
xchg
in
xchg
push
push
mov
mov
pusha
mov
mov
or
push
dec
pop
push
mov
nop
add
sarb
leave
cmp
push
mov
aam
pop
push
mov
int
aam
inc
hlt
mov
pop
out
jge
mov
addl
popa
jno
cld
arpl
hlt
pop
sti
pop
inc
data16
dec
lahf
ds
leave
aam
xor
xor
sarb
mov
aad
in
dec
notb
test
movsl
inc
add
mov
jnp
sbb
sub
insb
and
mov
js
and
push
inc
adc
and
add
jno
jg
push
push
test
jae
in
push
sbb
pop
popa
sub
sub
out
mov
cmp
pop
mov
sbb
cmpsl
add
xor
push
test
pushf
or
jae
test
stos
jns
xor
lds
push
icebp
jl
jmp
mov
pop
fdivl
sub
pop
add
cltd
mov
add
and
shll
aam
daa
test
mov
das
jo
mov
sbb
sbb
shll
in
push
aas
mov
psadbw
mov
ja
cmp
cmpb
dec
and
add
or
gs
aam
pop
sti
test
dec
insl
fsts
xor
jae
hlt
cmp
pop
fdivrl
jbe
out
cmpsb
cmp
mov
outsb
inc
or
sahf
sub
int
pop
mov
ds
std
test
lods
mov
stos
fsts
decl
shl
push
xor
aam
leave
add
mull
cmp
scas
data16
scas
pop
add
xor
daa
and
sub
stos
scas
in
loop
jbe
push
mov
aam
lret
cmp
je
int3
iret
add
out
mov
scas
aaa
push
addl
jb
sbb
outsl
xchg
lahf
push
mov
mov
cmp
out
icebp
mov
or
ja
negb
vpminsw
mov
lret
mov
adc
sbb
dec
and
hlt
fcomp
pop
jnp
out
lret
add
xchg
mov
or
adc
mov
outsb
loope
fisttps
addr16
and
inc
movsl
lahf
sbb
daa
jbe
inc
stos
mov
cmpsb
inc
push
mov
sbb
rorl
push
jae
pop
adc
inc
enter
mov
mov
test
out
push
mov
jo
into
sbbb
xchg
mov
xor
jne
mov
cmpsl
imul
jo
sbb
shl
add
mov
insl
scas
add
mov
popf
add
and
dec
test
xchg
pop
outsl
lret
aas
out
fidivrl
cmp
lahf
push
jge
jge
aad
adc
lret
gs
aad
pop
jb
sub
rorb
pusha
cs
jne
mov
jns
aad
pop
fsubr
mov
xor
sbb
and
jno
fcompl
xchg
mov
mov
shll
faddl
stos
inc
xchg
add
and
dec
pop
or
xchg
mov
add
sbb
push
cmpsl
aas
xchg
rcrl
jmp
xchg
pop
jae
mov
in
add
popf
xorb
mov
test
lods
add
rcl
add
or
loop
push
mov
and
test
ret
pop
pop
push
add
pop
mov
shlb
sbb
xlat
loopne
aad
jnp
stos
loopne
cmc
sub
mov
je
sti
sbb
xchg
lcall
xchg
adc
inc
aas
js
sahf
loope
cmpsb
rorl
fists
mov
push
xchg
mov
add
mov
and
xlat
push
pop
sahf
sbb
lds
push
test
pop
inc
add
mov
xor
std
and
mov
aad
and
xchg
mov
lret
test
add
and
or
pop
iret
cmpsb
lods
add
subb
xchg
ret
sbb
pop
mov
add
ja
mov
pop
movsl
pop
test
jns
fdivs
shl
out
pop
scas
inc
pop
mov
loop
lea
xlat
sbb
aam
sti
xchg
mov
pop
pop
pop
ljmp
icebp
mov
mov
push
into
ret
xchg
in
push
aam
mov
flds
mov
xor
loopne
xchg
push
add
add
mov
ret
xor
pop
push
sbbb
xchg
sbb
mov
xor
aam
adc
xchg
jne
add
and
dec
popa
push
std
cs
fwait
fs
int
jecxz
xor
lea
imul
push
mov
scas
jo
jmp
fiaddl
push
aaa
add
dec
ret
lods
add
imul
fmuls
add
mov
leave
shrb
ljmp
inc
inc
add
mov
lcall
loope
aam
or
jmp
sbb
sbb
jb
cmp
push
pop
xor
in
nop
pop
aad
sub
adc
data16
mov
jnp
sbb
jl
add
movsb
push
mov
sbb
mov
sbb
mov
fisubl
add
sbb
mov
sbbb
out
cltd
dec
dec
lret
movsb
outsb
sub
mov
or
dec
add
andb
xlat
pusha
push
div
jae
in
nop
jl
lret
out
aam
mov
orb
aas
cs
add
mov
adc
lcall
fcomi
movsb
shlb
xor
loop
fnstenv
mov
pop
mov
mov
mov
or
mov
aam
adc
add
xchg
mov
push
adc
add
xlat
int
or
mov
jns
cmp
xchg
mov
sti
pop
pop
in
jnp
push
loop
stos
fsubrl
xchg
mov
out
jne
ja
add
sub
hlt
cmp
mov
subb
xor
jne
lods
pop
js
pop
iret
pop
push
dec
frstor
ret
gs
pop
pop
and
add
add
popf
mov
lea
pop
ja
outsb
cs
adcb
add
imul
xor
mov
enter
mov
in
aad
mov
addr16
out
or
cmp
in
rol
popa
leave
pop
data16
push
out
nop
roll
and
daa
dec
gs
rcr
out
sbb
cmp
aam
in
mov
inc
cli
iret
testl
cmpsb
addb
aas
movsl
mov
cmp
add
sbbb
mov
into
aad
out
imul
aas
mov
jae
fsts
jnp
push
push
push
fisttpll
inc
lea
stc
aad
stc
fsubr
in
insl
pop
push
or
mov
xchg
out
push
ljmp
out
dec
mov
sub
pop
mov
push
loope
push
out
add
daa
outsb
repz
lods
je
ret
daa
inc
es
dec
or
stos
lahf
jo
pusha
inc
ret
cmp
stos
push
pop
pop
xchg
es
jmp
push
std
mov
mov
test
sbb
mov
mov
arpl
inc
into
inc
mov
ljmp
mov
rorl
and
fldl
repnz
inc
sbb
add
xor
sub
lods
cmpsb
mov
in
and
pop
or
cmp
aam
arpl
dec
add
jns
xchg
add
out
push
sbb
adc
add
push
lcall
sub
add
andb
push
in
lcall
aad
jo
jmp
les
stos
sub
jmp
aad
icebp
dec
push
dec
fstpt
mov
pop
out
sbb
or
xor
cmpsl
addl
cmp
xlat
in
push
enter
mov
movsb
cli
mov
add
jecxz
xchg
add
rcl
les
data16
insl
jle
std
add
mov
mov
xchg
pop
ficoml
fwait
jb
add
pop
xchg
xchg
adc
mov
jmp
cmp
push
or
movsb
cmp
stos
inc
cmp
shll
jecxz
pop
add
aas
mov
call
repz
sbb
cmp
mov
add
loop
out
add
mov
push
shlb
pop
pop
lret
movsb
xor
inc
mov
sbb
mov
shr
add
cwtl
out
add
test
icebp
enter
call
imull
sbbl
stc
in
lock
xchg
inc
jl,pn
jl
es
dec
xor
arpl
inc
dec
jnp
cs
mov
test
pop
repnz
aad
cwtl
nop
scas
dec
inc
cmc
aad
and
add
jmp
aaa
mov
lahf
add
lock
jl
mov
outsb
add
adc
xlat
imul
xchg
mov
jns
or
lock
xor
daa
push
fldcw
xchg
lds
repz
add
fidivs
mov
movsb
mov
push
xchg
mov
xchg
mov
push
inc
pop
shll
adc
pop
fs
or
jne
sub
mov
jg
subb
dec
insb
and
add
pop
sbb
and
aad
lret
std
jbe
sarl
xchg
aaa
ret
addr16
mov
test
test
sbb
and
sub
and
jmp
hlt
repz
or
and
xor
jnp
sub
xchg
cmp
and
mov
xchg
pop
push
or
and
pop
out
pop
mov
hlt
mov
aaa
sub
xchg
daa
and
adc
sbb
dec
push
sti
int
mov
lock
inc
mov
mov
xchg
and
mov
pop
int
out
xchg
pop
xchg
mov
stos
stos
pop
add
fisubl
enter
mov
pop
adc
addb
jns
jecxz
icebp
jo
jbe
insb
push
mov
movb
sub
clc
push
mov
movsb
xor
iret
mov
imul
jo
xchg
iret
xchg
mov
and
pushf
ja
sub
push
cmp
pusha
add
sbb
xor
aas
mov
adc
dec
subb
stc
fisubrl
jmp
cmp
mov
pop
pop
add
js
adc
popa
cs
push
sub
cli
jo
imul
or
sbb
mov
mov
mov
adc
pop
shll
jl
mov
pop
vpunpckhbw
lods
adc
loop
mov
sub
push
mov
xor
daa
mov
test
dec
mov
pop
adc
cmp
mov
add
out
jno
cmp
xor
test
add
dec
loopne
and
xchg
sub
xlat
int
inc
pusha
cltd
rcll
das
xchg
mul
pop
push
lods
repz
test
dec
sub
jle
movsl
andl
stos
mov
sub
mov
jnp
rcr
les
mov
add
orb
gs
dec
jno
test
and
pop
mov
fistl
std
dec
in
mov
or
sbb
add
mov
loope
add
imul
pop
sbb
xchg
push
mov
out
fst
add
or
cmp
movsl
movsb
pop
jl
mov
jle
mov
pop
sbb
sbb
dec
gs
pop
dec
or
loopne
jbe
inc
test
mov
ret
xor
andb
int3
iret
int
push
test
pop
stos
nop
sarl
aad
adc
shll
test
std
daa
js
cmp
imul
add
pop
xchg
sub
add
pop
cmp
xor
stos
out
inc
sbb
nop
movl
cmp
or
js
push
mov
sti
ficomps
cltd
popa
push
cld
cli
mov
hlt
lock
mov
push
ss
pop
jne
cli
jae
lds
sbb
test
xchg
andb
xchg
pop
jecxz
test
add
mov
dec
jne
jns
movsl
ss
scas
pop
aam
xchg
lods
in
mov
aam
xchg
sub
add
fstl
adc
movsl
je
jbe
movsl
xchg
daa
xchg
test
add
js
aas
mov
mov
addl
xor
testb
outsb
loop
aam
xlat
pop
sbb
cs
rorb
dec
and
add
mov
scas
cmpb
pop
xchg
add
sti
inc
stc
cmp
lcall
pushf
push
mov
mov
fs
loope
cmp
add
jns
es
ss
pusha
jmp
or
aad
clc
push
add
adc
mov
xor
aad
pop
outsb
xchg
sub
lods
mov
iret
xor
cs
lret
addr16
mov
mov
inc
cs
divl
pop
push
mov
jl
mov
mov
enter
push
insb
aaa
add
scas
gs
cli
mov
and
dec
lret
inc
int3
jnp
jo
add
add
incl
xor
add
pop
lods
addr16
push
jmp
mov
inc
aad
stos
ds
jge
lahf
icebp
dec
xor
pop
mov
insb
lret
sbb
aas
push
cltd
pop
push
daa
cmpsb
inc
xchg
aam
or
test
rcrb
js
pop
jmp
das
dec
and
outsl
add
test
div
push
push
sahf
outsb
rcl
sti
and
inc
scas
jno
divb
adc
pushl
xchg
int
mov
jge
lds
mov
mov
xorl
arpl
jg
mov
shl
enter
test
mov
add
lods
scas
xadd
loop
add
pop
push
addr16
xlat
ret
movsb
add
lock
sbb
ret
mov
mov
imul
mov
jbe
cmpsb
lcall
mov
or
pusha
pop
mov
push
cmp
in
xchg
xor
pop
cltd
sub
adc
cli
out
sahf
xor
pop
repnz
jge
movsl
insb
push
idiv
jae
aam
sarb
xchg
jne
sahf
push
push
mov
icebp
pushf
hlt
jo,pt
nopl
or
lock
pushf
mov
inc
ret
loopne
cmpsl
enter
stos
pusha
fldl
pop
out
xchg
aad
or
cmpsb
sbb
lea
inc
or
jg
dec
in
xor
outsb
idivl
push
or
jae
lea
or
lahf
pop
add
push
jae
fstpl
stos
xchg
xchg
xchg
rcl
cmc
stc
and
loop
inc
mov
dec
fwait
js
xchg
fs
out
jmp
mov
add
mov
repz
aas
in
cld
div
aad
jp
lods
or
sbbb
je
mov
fnstsw
lods
aas
mov
mov
in
out
mov
push
out
ja
pop
jecxz
adc
int
adc
rep
aam
jl
mov
and
aam
xor
xchg
pusha
sahf
inc
lcall
std
cmc
aam
fisubrl
jmp
mov
sbb
and
add
jns
inc
ret
push
jp
or
jns
adc
pop
pop
xchg
xchg
int
js
and
dec
mov
divl
inc
add
js
lods
jb
and
xlat
dec
mov
push
scas
mov
xchg
in
fs
jl
fiaddl
jecxz
mov
cmp
mov
out
and
add
fisubs
fcoml
adc
mov
jo
jae
sarb
incl
jne
std
mov
add
sbb
pop
icebp
mov
shlb
push
ficoml
aad
inc
mov
jg
sbb
rol
aad
addr16
sarb
add
icebp
out
cmpb
ret
sub
jo
jp
xlat
pop
mov
push
popa
push
push
outsb
sarl
cmp
mov
mov
cmp
lret
into
sbb
inc
sarb
pop
ret
lods
je
test
mov
imul
in
sub
popf
dec
mov
push
inc
xchg
adc
ror
fs
arpl
popf
adc
sbb
xchg
inc
xor
sbb
lock
repz
repnz
jge
daa
cwtl
aas
cmc
pop
pop
dec
adc
sbb
jg
push
adc
push
aam
mov
aam
daa
sbb
add
adc
mov
adc
jne
cwtl
xor
mov
popf
mov
loopne
out
out
fsts
js
mov
imul
sti
mov
leave
movl
adc
out
push
xorb
xchg
mov
hlt
add
popa
mov
pop
and
popa
fdivrl
mov
sub
push
int
xchg
mov
aad
or
scas
test
adc
addb
pop
dec
push
mov
cmp
aad
mov
into
add
ret
sahf
pop
movsb
xor
ret
les
mov
out
test
mov
cmpb
cwtl
aam
jg
pop
push
sbb
lods
xchg
xchg
jbe
inc
sub
lods
aam
movsl
dec
push
pop
jbe
mov
pop
adc
ret
out
aad
inc
xchg
mov
and
mov
sub
pusha
sub
xchg
sub
or
adc
test
dec
mov
mov
push
lahf
or
fwait
sbb
sbb
js
adc
out
insb
sub
cmp
or
int
mov
inc
std
jl
cmpsb
push
jns
jne
push
scas
xor
lods
add
mov
inc
imul
call
jbe
in
jnp
cwtl
popl
pop
xchg
aaa
push
ljmp
jo
mov
mov
fsubs
mov
add
mov
loope
psrlw
cmp
cmp
or
push
xorb
inc
popf
aaa
jno
sbb
sub
mov
cwtl
lea
stos
mov
aas
mov
shl
mov
cmp
cmp
ja
movsl
pusha
jg
hlt
xchg
jae
sahf
ss
aad
addr16
notl
loopne
aad
data16
aam
cmp
adc
jmp
pop
push
roll
xor
mov
mov
mov
push
lods
cmpsl
cmp
xor
out
cmpsl
aaa
xor
inc
lcall
mov
inc
inc
lret
inc
adc
add
mov
inc
mov
jnp
mov
mov
aad
fs
out
push
repz
call
daa
xlat
jb
dec
mov
ret
into
aam
bound
icebp
roll
fisubs
repnz
js
xchg
add
fdivs
mov
pop
push
dec
lea
ja
and
dec
push
loopne
int
mov
sbbl
in
or
stos
pusha
popf
mov
leave
pop
mov
dec
aaa
sub
ds
mov
dec
lds
hlt
sub
dec
aam
iret
inc
dec
dec
and
daa
mov
shrb
ret
sbbl
ds
enter
jae
and
cwtl
mov
add
cmp
pop
add
pop
cs
aam
test
pushf
pop
ss
cmp
test
outsl
in
das
mov
int3
xor
cs
pop
cmp
ss
xchg
add
mov
jmp
add
mov
lcall
adc
shlb
stos
add
sbb
pusha
jno
rcrb
hlt
ja
xlat
enter
dec
pop
js
mov
pop
or
mov
mov
cwtl
mov
lret
aam
jge
pop
inc
clc
lret
leave
incb
mov
jp
add
mov
or
icebp
jns
int
pop
int
dec
sti
xchg
mov
dec
arpl
nop
bnd
inc
js
lahf
add
mov
mov
int
fimuls
jb
and
int3
mov
lods
add
pop
scas
fldcw
fsts
ja
lahf
adc
push
mov
or
pop
sti
ret
xchg
pop
pop
jp
cmp
sbb
test
out
jns
add
jae
mov
inc
or
sti
adc
push
add
or
mov
cmp
cmpsl
cld
mov
iret
lahf
ret
loop
jns
ja
inc
pop
leave
sub
add
addr16
shlb
sbb
out
mov
adc
jne
dec
dec
gs
cmp
xchg
push
push
pop
decl
cmp
pop
or
scas
test
dec
les
push
xlat
inc
or
mov
pusha
adcl
dec
lcall
adc
das
push
push
xchg
stos
in
adc
pusha
sbb
shlb
mov
ljmp
out
outsb
mov
inc
lods
mov
pop
frstor
pop
outsl
adcb
or
cmp
das
daa
fsts
das
push
scas
lock
dec
dec
cmp
cld
cmpsl
aad
lret
cmp
mov
lods
mov
fs
xchg
xchg
jmp
sbb
mov
sbbb
std
and
pop
popf
enter
fidivl
mov
imul
mov
popa
mov
mov
and
xor
inc
xchg
cmp
dec
inc
jno
test
cmp
xchg
gs
add
mov
aad
pop
gs
pop
aam
add
rcll
icebp
push
fstpl
daa
repnz
pushf
out
cmpsb
test
sub
mov
sbb
in
pusha
lds
andb
insb
sahf
dec
and
xlat
in
or
jecxz
cmpsb
inc
xchg
dec
push
jnp
sbb
out
push
add
sub
pop
pop
clc
aas
cli
jmp
push
paddq
xor
mov
or
ss
inc
push
lods
lods
insb
sub
jle
xchg
dec
push
arpl
hlt
pusha
sbb
add
test
aam
cli
adc
sbb
jae
push
es
ds
lret
add
mov
mov
rcl
dec
inc
add
sbb
in
in
inc
push
popf
mov
ljmp
cmpsb
lods
mov
and
mov
lret
out
push
lock
add
mov
mov
outsl
cmpsb
lods
mov
mov
adc
cmp
cmp
je
jl
mov
pushf
dec
sub
add
call
lret
gs
mov
and
add
dec
add
or
mov
sti
into
fmull
inc
pop
ret
aas
ljmp
dec
mov
mov
adcb
ds
scas
lret
mov
mov
mov
xor
hlt
push
ljmp
sti
inc
cmpsl
jle
push
add
sbb
sbb
and
xchg
mov
sub
and
or
xor
jne
mov
fimull
jbe
push
sbb
imulb
sbb
xchg
or
or
pop
imul
mov
xor
rolb
enter
data16
adc
ret
mov
mov
testb
xchg
insl
and
add
int3
adc
push
dec
bound
mov
jo
test
inc
add
pop
dec
xor
cmp
ds
jo
push
push
dec
adc
cs
dec
aam
xlat
stc
mov
and
fisttpl
bound
xchg
mov
push
aam
lcall
mov
xchg
push
hlt
cmp
cltd
xchg
add
adc
sbb
stc
adc
aam
mov
pop
movsb
sbb
xchg
aam
dec
xchg
fsubl
xor
je
mov
popf
adc
cmpsl
mov
and
or
lret
adc
mov
int3
xor
add
or
fidivrl
pop
add
xchg
js
push
mov
sub
jl
sub
lret
adc
rolb
clc
adc
fsubs
push
xlat
adc
dec
mov
jge
and
cwtl
inc
imul
daa
or
mov
mov
dec
movsb
sub
pop
adc
jno
outsl
xchg
add
mov
pusha
out
iret
mov
aam
ljmp
movsb
movsb
inc
fildl
test
and
jl
cmc
addr16
pop
iret
add
xchg
test
pop
add
jmp
out
inc
push
movsl
mov
inc
cmp
jge
xlat
mov
jno
sub
lock
lret
jb
mov
ret
ss
ret
push
iret
pop
aam
fisttpl
loop
mov
push
pop
mov
test
dec
mov
mov
lcall
jnp
add
stc
cli
xchg
xor
dec
je
ret
in
mov
xchg
movsb
ss
add
inc
stc
sub
fwait
in
xchg
sub
xchg
gs
loope
sub
add
or
loop
pop
in
cmp
mov
cmpsl
pop
inc
mov
xchg
insb
mulb
jl
pop
mov
scas
sahf
mov
scas
mov
jns
in
lea
nopl
and
enter
in
mov
js
mov
dec
cs
js
imulb
xchg
enter
push
scas
add
gs
aaa
shll
popf
mov
jnp
fists
xor
mov
fdivl
cmpsl
popa
adc
outsl
fdivr
sbb
and
and
mov
xchg
je
push
xchg
lcall
add
mov
sbb
add
mov
dec
sub
cwtl
mov
adc
into
stos
cltd
aad
in
or
push
dec
ss
cmc
aad
aam
mov
pop
aad
mul
aas
pop
sbb
scas
jns
push
test
lahf
or
add
hlt
adc
xchg
jnp
in
frstor
mov
xor
sub
mov
dec
in
pop
inc
imul
xor
or
inc
daa
outsb
inc
jecxz
jl
pop
mov
outsb
push
lods
and
xchg
pop
mov
jb
or
es
scas
pop
outsb
sub
roll
mov
inc
mov
fcmovne
or
dec
aam
push
dec
fiadds
jg
aas
pop
sub
adc
roll
mov
arpl
lds
mov
sub
sbb
xlat
lret
in
adc
lahf
cltd
cmp
fdivl
gs
leave
movsl
mov
std
dec
mov
mov
loop
lahf
and
shl
or
mov
aaa
dec
insl
xchg
adc
adc
mov
fcompl
and
sbb
adc
xor
add
cmovae
test
fsubrl
push
jmp
sbb
fbld
push
addr16
or
xor
mul
add
lret
cmp
lock
popf
xor
lret
adc
add
popa
mov
pop
test
lock
pop
lcall
out
pop
xchg
mov
imul
jl
adc
mov
add
pusha
out
lock
gs
movsl
les
rorb
cld
orl
aam
add
xor
shrb
add
push
in
jnp
sbb
xchg
mov
add
dec
add
pushf
inc
in
pusha
mov
js
loopne
push
in
cmp
in
dec
sti
popa
jbe
out
je
out
iret
jmp
xor
add
xchg
stos
sbb
and
pusha
inc
xor
filds
cli
aad
mov
imul
mov
mov
adc
xor
call
and
icebp
and
daa
rclb
add
xlat
mov
adc
hlt
mov
scas
enter
scas
imul
cmp
cs
outsb
movsl
negl
addb
jg
movsl
imul
movsl
sahf
rcrl
test
lahf
cwtl
je
arpl
xor
mov
mov
push
add
sbb
cltd
pop
loope
cld
push
mov
shlb
push
jne
and
xor
push
mov
sbb
xlat
jmp
add
arpl
mov
test
add
aam
cmp
xchg
arpl
mov
stos
adc
loopne
in
jnp
inc
lock
sbb
test
icebp
dec
testl
cmp
out
xchg
lds
les
ss
imulb
push
insl
pop
pop
movsl
sub
adc
cld
aam
push
push
fcmovnb
lea
mov
mov
push
dec
test
hlt
lds
xchg
inc
popf
stos
sbb
aaa
cmpsl
mov
mov
test
pop
pop
out
lea
mov
and
mov
bound
pop
xor
pop
jne
sbb
or
lcall
mov
adc
mov
jne
outsl
and
cwtl
ret
mov
imul
int
pop
vmovd
xchg
nop
ja
push
jns
pop
add
fistps
lcall
push
xor
or
lret
mov
and
jb
lret
or
jns
jp
shl
mov
xlat
mov
mov
cmp
mov
cmc
cmp
cli
xchg
idivb
fcomps
dec
push
out
les
or
add
jmp
xchg
adc
out
stos
add
sti
insl
inc
test
pusha
and
movsl
and
popa
dec
mov
lds
mov
or
or
fstpt
push
jg
jmp
aas
adc
mov
jle
or
fmuls
sbbl
sub
scas
mov
or
sbb
mov
xchg
or
jg
add
dec
sbbl
add
mov
add
mov
xorl
xor
ss
das
xchg
add
mov
data16
push
pop
sahf
mov
mov
dec
pop
test
jne
loope
sahf
pop
aam
leave
or
mov
test
repnz
fs
xchg
int3
fimuls
ljmp
inc
fldpi
sub
call
ja
push
lcall
andb
mov
loop
mov
xor
xchg
aam
push
dec
inc
outsb
movsl
aam
jmp
fists
mov
dec
sub
sbb
and
fwait
add
call
sbb
daa
sahf
pop
mov
pop
cld
push
adc
cmp
lods
mov
call
hlt
lods
add
addr16
pop
rorb
pop
es
xor
xor
mov
sub
movsl
mov
jg
inc
xor
test
pusha
sbb
insb
testb
fcmovbe
inc
pop
sub
push
mov
arpl
xchg
fists
adc
movsb
jno
lahf
jecxz
stc
and
push
jmp
xchg
movsb
into
aad
stc
mov
aam
test
push
mov
adc
add
aam
add
jb
inc
mov
fucomip
and
xor
in
add
bound
inc
mov
mov
out
or
inc
stos
fisubrl
mov
mov
repnz
inc
pop
sbb
outsb
xchg
lea
in
inc
repz
lret
aam
fdivl
fsubrl
outsb
pop
pushf
pop
scas
ret
xlat
movsl
jl
add
aad
ret
cltd
mov
xor
or
rorl
sub
jl
lock
push
add
jae
xchg
xor
popf
xchg
jne
sbb
cmpsb
or
mov
xlat
pop
outsl
pop
addl
or
lods
mov
test
jmp
cmpsl
xchg
cli
orl
gs
stos
jae
inc
loop
jmp
dec
cld
mov
insl
cmc
add
and
push
ret
rcll
push
daa
lcall
jne
add
test
push
fcmovnb
and
add
sub
test
cmp
and
and
or
or
xchg
nop
jns
dec
pop
sti
mov
inc
jp
or
inc
mov
cmpsb
fcomps
mov
push
loope
mov
push
aam
fsubrl
or
mov
or
sub
adc
mov
mov
insl
test
idivb
xor
cmp
scas
js
addb
jno
push
fmulp
dec
mov
or
call
or
dec
insb
xor
hlt
mov
iret
insb
fucomi
cmp
adc
lcall
aam
lret
add
test
adc
insl
into
aad
sbb
pop
popa
and
fmuls
pop
cmc
and
dec
xchg
dec
and
out
push
mov
dec
into
stc
dec
int
pusha
aaa
push
xchg
dec
lea
mov
test
add
mov
pop
jp
call
lcall
iret
push
rolb
inc
and
pop
fistl
negb
dec
mov
push
xor
xchg
ret
repnz
lret
pop
adc
dec
xor
jge,pt
into
adcb
ret
add
fstps
stc
cmp
mov
loope
pushf
sbb
out
add
ss
pop
cltd
mov
inc
xchg
inc
cltd
inc
stos
negb
push
mov
stos
insl
int3
mov
inc
sub
pop
dec
lahf
sbb
pop
insb
pop
xchg
daa
inc
pop
sub
dec
sbb
pop
mov
bnd
aas
sub
or
cmp
comiss
adc
inc
mov
dec
push
test
test
out
cmp
repnz
shrb
insl
sub
mov
push
bound
dec
insl
adc
ljmp
add
pusha
push
jle
leave
jnp
shl
xchg
mov
mov
sti
jno
fwait
mov
sti
addb
lcall
daa
add
add
cmp
fidivs
outsb
shr
cmp
fldl
cmp
dec
jo
mov
dec
adc
mov
or
leave
or
imul
test
out
sub
in
mov
mov
inc
sahf
nop
rcrl
fmull
repz
lods
outsl
fistpl
std
sub
les
notl
xlat
mov
xor
aaa
aad
loope
mov
add
xchg
rolb
and
mov
aam
mov
sbb
into
adc
pop
push
xchg
push
add
pop
and
xchg
stos
pusha
xchg
cmp
pop
xchg
in
inc
add
lahf
cli
xchg
push
push
inc
ret
mov
arpl
cld
loope
cli
leave
pop
sub
cli
or
mov
push
hlt
pop
mov
clc
pop
and
fcmovnu
dec
xchg
jne
mov
fnsave
mov
sbb
add
sbb
popa
xor
push
lock
mov
std
add
jo
cmc
cld
lods
fistpll
xor
dec
enter
sahf
pop
xchg
mov
mov
cld
xchg
pop
cld
pop
aam
mov
mov
ja
int3
loope
into
pop
hlt
stos
fwait
outsl
xchg
xor
std
add
push
inc
movsb
mov
jb
mov
jae
xchg
dec
call
push
icebp
popf
jg
cmc
mov
aad
or
pop
and
daa
push
push
or
ja
add
push
fldenv
adc
add
add
and
stos
cmpsl
cmp
sarl
pop
inc
dec
cltd
sahf
mov
je
imul
and
jg
xor
mov
xlat
mov
call
adc
out
mov
push
pop
add
imul
cmpsl
fimull
icebp
out
sbb
test
lods
mov
mov
gs
cmp
push
movsb
lahf
mov
imul
fsubp
test
xor
mov
fwait
cmp
sbb
aad
or
add
or
mov
inc
or
in
pop
xchg
cmpsl
pusha
hlt
outsb
mov
stc
and
sbb
push
or
fcomip
repnz
mov
lret
pop
jmp
mov
aam
addb
mov
outsb
adc
add
mov
fwait
jl
xchg
pop
fbld
jp
aam
loope
sbb
xchg
xchg
sbb
add
inc
xchg
cmp
les
and
jno
jae
cmc
int
or
flds
sarl
popf
movsl
push
mov
loope
scas
adc
pop
jl
enter
mov
lds
dec
pop
adc
push
add
pop
scas
push
fildll
into
ds
jns
adc
fldcw
ficoms
pop
pop
fiaddl
jno
negb
repz
pop
icebp
int3
mov
mov
add
xchg
mov
mov
jbe
xor
or
int
stos
cmp
in
cmp
add
loopne
into
enter
add
inc
push
shl
out
mov
and
inc
xchg
pop
pop
mov
cmp
shrb
jnp
add
mov
int
adc
mov
inc
clc
ret
aam
cmp
pop
sbb
les
mov
sysenter
xchg
mov
xchg
adc
or
adc
mov
stos
jb
aad
loop
add
xchg
dec
jne
out
mov
push
add
cmpsb
lea
bound
pop
sarl
pop
push
pop
mov
mov
cmp
adc
pop
outsl
scas
pop
jb
xchg
loop
jecxz
sbb
add
push
xor
mov
xor
push
jb
aam
cli
dec
mov
hlt
mov
movsl
pop
jne
sbb
stos
mov
dec
mov
mov
dec
aam
mov
in
rolb
stos
cmp
lahf
mov
sub
dec
sbb
sbb
add
dec
jmp
arpl
xchg
adc
stos
pop
lea
lret
andb
lahf
mov
cs
mov
mov
pusha
cmp
push
nop
mov
xchg
enter
xor
shl
pop
xor
lahf
mov
dec
push
mov
xchg
stos
jge
lods
and
xchg
je
fdivs
cmc
fidivrl
jae
sbb
mov
mov
in
add
mov
mov
mov
push
or
jnp
lahf
mov
notl
bound
cltd
or
jmp
add
ljmp
pusha
xlat
aam
sarb
sub
outsb
aad
sbb
and
leave
sbb
sbb
push
roll
and
ljmp
fisttpll
inc
cmp
js
push
fcmovbe
imul
fwait
sbb
inc
adc
lret
iret
pop
mov
mov
aam
leave
sbb
outsl
movsl
ds
jmp
lret
jge
cli
jbe
jmp
fidivrs
and
in
xor
cmp
mov
in
test
add
icebp
and
cmp
popa
rcr
mov
sub
dec
jb
aam
jmp
sbb
adc
push
je
in
fldenv
mov
pop
and
scas
fisttpl
jnp
push
sbb
loope
out
add
movsl
out
in
lock
and
push
sub
aam
cmp
mov
ror
cmpsb
data16
mov
xchg
les
popf
mov
mov
add
xor
cltd
cmp
dec
lea
test
rclb
push
push
out
dec
adc
stos
loope
mov
es
add
insb
fwait
adc
jns
mov
ja
cmp
adc
push
dec
std
leave
push
bound
adc
cli
int3
icebp
jecxz
xchg
into
push
adc
dec
fstpl
fistps
outsb
cli
mov
cmc
mov
sbb
xor
hlt
aas
dec
sub
ss
mov
push
xor
push
push
pop
ss
jno
sbb
addl
sub
add
shl
cmpsb
sub
dec
xchg
xor
inc
mov
cmp
pusha
pop
jmp
hlt
sub
add
je
int3
fistpll
xchg
fcompl
add
push
neg
aad
inc
jge
fmul
mov
and
add
and
push
ljmpw
loop
test
addb
add
sub
xchg
dec
xchg
sub
repnz
cmc
jmp
repnz
jmp
imul
inc
push
loopne
sbb
test
mov
xchg
cs
inc
jmp
sahf
inc
testl
mov
stc
into
sbb
test
aaa
pushw
and
mov
jmp
xchg
jne
pop
sub
adc
aam
jl
dec
push
outsl
xor
aas
sub
test
ja
and
loop
in
adcl
sbb
lods
mov
aas
jg
pop
cmpsl
and
cmpsl
aad
and
lea
pop
lock
leave
xor
ljmp
jae
pop
inc
aad
stos
call
sub
adc
div
mov
cmp
enter
loope
jmp
add
and
xchg
or
xorl
inc
add
pop
cltd
jbe
mov
inc
imul
xor
mov
add
push
in
repnz
icebp
addl
out
jns
insl
test
rep
aam
pusha
mov
stos
loope
in
out
rcl
push
repnz
lods
pushf
cmc
ljmp
lcall
push
mov
pop
sbb
adc
mov
jb
outsb
aam
popa
jg
add
das
mov
roll
fdivr
sbb
jb
pop
or
addl
lahf
test
mov
inc
adc
adc
lcall
mov
mov
mov
pushf
in
mov
add
pusha
insb
mov
sbb
add
sbb
sbb
and
xchg
pop
push
repz
adc
add
rcrl
cmc
adc
outsl
jbe,pn
jl
or
aad
mov
out
imul
mov
lock
or
cmpsb
inc
out
or
jle
js
push
or
insl
ds
cs
rcrl
mov
sarl
lahf
mov
mov
jo
jae
push
xor
mov
aad
call
icebp
fdivs
imul
lods
dec
dec
out
add
xor
incl
or
mov
lods
aad
test
jg
fcompl
jne
sarw
jg
and
or
xor
push
rorl
mov
cmp
iret
add
add
pop
shr
add
or
hlt
pop
into
je
and
dec
inc
pop
mov
xor
xor
dec
das
add
cmpl
mov
pop
mov
mov
dec
jae
mov
inc
rclb
xlat
push
loope
ljmp
mov
xchg
dec
mov
rolb
mov
xchg
xchg
push
lds
jp
pop
stos
jne
popf
sbb
sub
faddl
int3
test
cmp
push
push
cmp
sbb
pop
and
in
mov
sbb
popa
add
repz
sti
ss
mov
es
dec
js
hlt
cltd
mov
int
inc
pop
test
rolb
cmp
pop
out
lods
fwait
adc
mov
and
mov
jle
jg
add
fstpl
movsl
cmpsl
mov
push
int
idivl
inc
jbe
mov
jmp
fmull
sub
adc
das
lret
js
pusha
push
cmc
scas
insb
loope
mov
and
je
jp
xchg
std
scas
xchg
hlt
jae
aam
out
shl
sub
sbb
out
mov
xchg
das
inc
push
pop
jb
in
adc
fdivrs
aam
ret
fnstsw
add
push
lock
daa
pop
dec
aam
push
lret
pop
adc
sbb
mov
insl
mov
add
pop
loopne
push
xchg
jne
jecxz
inc
pop
mov
cmp
jg
push
adc
mov
pusha
negl
sub
pusha
mov
insb
pop
push
xchg
icebp
jo
pop
test
pop
call
nop
sbb
or
pop
dec
push
pop
mov
aam
jle
mov
mov
outsb
adc
movsl
pop
insb
add
cmp
dec
adc
push
pop
gs
jle
mov
lret
jns
imul
sub
mov
test
mov
arpl
movsb
rclb
mov
xorl
adc
mov
ret
icebp
out
iret
scas
add
insb
inc
cmp
inc
cld
stos
test
pop
clc
add
or
add
fcomps
add
mov
and
push
cmp
das
mov
sahf
or
cmp
cmp
pop
mov
clc
adc
shlb
aam
cli
lahf
push
jns
inc
jg
jnp
jg
mov
mov
aad
je
das
mov
push
fiaddl
inc
dec
iret
mov
push
mov
int
cli
adc
nop
adc
mov
or
fnsave
iret
iret
stc
fsubrl
in
and
outsb
mov
push
mov
in
insl
cmp
dec
push
mov
or
ja
mov
inc
mov
out
scas
inc
mov
es
mov
and
subb
push
sub
sub
and
js
pop
movsl
imul
ja
mov
adc
pop
mov
pop
add
iret
sbb
push
inc
inc
jmp
andb
add
rcl
dec
mov
outsb
aas
stos
mov
mov
out
inc
sbb
mov
jb
inc
or
into
xchg
xchg
xor
fdivs
xor
mov
shll
push
lea
int
ficoml
bound
lcall
or
mov
adc
add
aaa
xchg
cmp
jno
movsl
loop
mov
wbinvd
lea
test
insl
sub
vmovq
push
lods
add
movb
push
adc
rorb
dec
test
testb
or
shrb
add
dec
and
leave
push
xchg
jne
add
xor
jns
adc
cmc
andb
das
in
outsb
adc
xlat
adc
adc
iret
pop
fbstp
fbstp
outsb
es
sub
loop
dec
nop
data16
pop
mov
lret
fiaddl
inc
pop
push
fwait
loop
ss
jp
pusha
sub
xchg
notb
les
clc
jmp
dec
add
aad
sbb
popa
sbb
cmpl
add
cmpsb
aas
movsb
pop
pop
xlat
insl
ljmp
adc
decl
xchg
xor
pushl
stos
out
stos
incl
add
divb
pop
js
xchg
xor
es
jle
add
movsb
ret
aam
mov
or
mov
mov
outsb
sbb
push
inc
or
imul
add
xchg
enter
and
and
scas
and
and
xchg
xchg
push
xchg
push
aad
rolb
movsb
cs
ds
pusha
push
call
inc
pop
dec
cmp
dec
pop
adc
jno
insl
push
mov
add
xor
dec
pop
lock
inc
aam
push
popa
adc
xor
imul
loopne
insb
dec
ss
sub
pusha
adc
sub
cld
repz
pop
dec
push
rcl
testl
inc
mov
mov
push
fcoml
sbb
sbb
sub
dec
jbe
in
xor
int3
mov
cmp
mov
add
jbe
mov
pop
push
push
jp
jmp
cld
mov
inc
mov
jmp
push
xchg
or
aad
loopne
in
sub
popa
sub
shlb
push
in
jle
push
sub
pusha
jg
out
cwtl
xor
cltd
aad
scas
fwait
jmp
mov
shll
in
add
adcl
nop
or
mov
cld
aaa
icebp
push
movsl
stos
inc
and
mov
add
jcxz
push
pop
add
cmp
push
das
fcoml
or
and
aam
jmp
push
in
push
cwtl
mov
mov
dec
push
sarl
jmp
pop
push
add
rorb
add
adc
dec
jge
or
movsb
aam
mov
sahf
push
fmull
test
add
mov
faddl
add
adcb
pop
jno
jnp
rolb
cmp
inc
andb
fbstp
inc
sti
push
xchg
decl
rorb
imul
push
add
push
inc
inc
push
pop
fcomi
pop
pop
ljmp
jecxz
lcall
arpl
enter
aam
shll
mov
fwait
inc
clc
outsb
sbbb
sbb
rorb
adc
mov
sub
orl
dec
into
push
lods
lock
push
push
mov
cmp
js
push
push
add
loopne
and
mov
pushf
nop
mov
push
not
inc
movsb
adc
in
pop
repz
dec
add
outsl
stos
daa
or
fists
push
push
icebp
or
enter
hlt
aam
add
jns
add
push
xchg
push
jbe
inc
leave
sti
push
rcrl
push
addr16
mov
sbb
rorb
mov
addr16
cmp
popf
test
out
aam
or
push
aad
outsb
mov
cmp
fwait
push
inc
daa
push
xor
adc
notl
jo
scas
sub
gs
fistpll
mov
sub
in
sbb
cmp
adcl
popa
rorl
fcmove
add
inc
and
into
popa
in
jecxz
cs
push
jmp
or
add
push
mov
xchg
cmp
pop
mov
sub
insl
mov
loop
mov
mov
cmp
add
mov
lret
lahf
jne
sbb
or
sub
lods
movsb
mov
das
lods
dec
in
pusha
cmp
stos
push
sbb
jno
xor
popa
jbe
pop
pop
lcall
scas
jnp
or
into
cmp
sbb
loopne
loopne
push
aam
aam
repz
in
imul
js
pop
fimull
mov
sti
dec
dec
loope
pop
ja
jge
jecxz
pop
aas
and
xor
mov
inc
bound
xor
cmp
aad
xlat
pop
incl
das
push
cli
mov
jg
cwtl
scas
xchg
add
lds
add
daa
jmp
sub
aad
sti
notb
shrb
std
push
mov
cmc
push
add
mov
jno
in
dec
test
xor
push
fadd
jmp
inc
mull
sub
push
fnstenv
imul
inc
cmp
shrb
lret
ficoml
mov
mov
push
cmp
scas
xchg
mov
movsb
adc
add
lcall
pusha
inc
xor
mov
mov
shrb
jo
jae
dec
lods
pop
xchg
fdivrl
add
inc
or
cmc
negb
jno
xchg
ds
jmp
lret
pop
lahf
mov
mov
mov
mov
outsl
dec
jg
jb
jns
and
cmpsb
out
inc
pusha
pop
mov
into
loope
push
hlt
sbb
mov
mov
mov
push
aas
nop
add
lods
test
lcall
inc
jle
into
aam
insl
fdivrs
sbb
pusha
dec
mov
inc
insb
shl
ss
sbb
sub
stos
in
dec
ljmp
pop
mov
lea
push
es
xchg
mov
cwtl
popa
jbe
gs
stc
dec
lods
out
mov
inc
sbb
enter
aam
pop
and
movsl
sub
aam
and
sbbl
shrl
dec
and
adc
lea
stos
hlt
xor
mov
adc
leave
cmp
cmc
pop
xor
fwait
pop
xchg
arpl
pop
aam
inc
ss
xchg
adc
int3
push
jb
shr
and
insb
push
xchg
lahf
mov
or
arpl
and
dec
mov
test
pop
add
pushf
popa
mov
mov
or
in
adc
adc
rolb
cmp
cmp
mov
mov
rorl
loopne
jne
addl
test
std
out
fsubrp
sarb
jmp
push
nop
push
dec
fisubrl
out
jmp
icebp
xor
out
scas
popa
fwait
pop
fs
aad
aas
sub
mov
sub
push
fistl
push
cmp
and
pop
fldl
clc
xor
dec
inc
pop
lahf
sub
inc
and
push
inc
sub
jne
mov
imul
mov
cmp
jo
adc
or
pop
outsl
lret
push
clc
cld
notl
lret
pop
mov
mov
sbb
ja
decl
push
test
xor
insb
cmp
ret
adcb
xchg
push
or
out
sbb
mov
pop
mov
adc
outsb
jnp
mov
jp
xchg
mov
test
push
push
and
mov
orl
xchg
hlt
subl
adc
add
cmp
cli
mov
lahf
jns
clc
sbb
xrelease
xchg
jb
adc
repz
sbb
lods
push
fstps
xor
bound
repnz
fcompl
gs
xchg
or
leave
mov
mov
mov
sarb
lds
pop
push
mov
add
mov
push
or
jb
adc
outsl
mov
push
jmp
or
sub
pop
out
orb
add
and
clc
lret
ret
shlb
add
fcmovnb
push
pusha
rorl
push
popf
sub
dec
arpl
ret
rcrl
scas
insb
adcb
push
stos
cmp
lea
fcmovnu
jns
dec
add
leave
mov
enter
cmc
jo
lock
jae
add
mov
fs
addr16
loopne
ror
addr16
mov
in
aad
or
daa
shrl
mov
mov
mov
mov
stos
push
inc
int
jo
stos
mov
jp
xchg
jo
mov
movsl
pop
pop
out
fiaddl
jo
mov
dec
repnz
push
aam
das
sbb
out
xor
ds
fwait
clc
aam
cs
and
mulps
inc
in
orb
xor
cmpsb
add
insb
inc
jecxz
push
push
push
xor
shlb
data16
sbbl
mov
cmpb
xlat
mov
mov
aam
fdivp
ret
test
fwait
xor
orb
mov
mov
fisubrs
or
add
mov
jecxz
sahf
inc
mull
add
add
add
loop
mov
int
inc
lahf
cmpsl
push
cmp
xlat
pusha
ljmp
inc
cltd
xchg
addr16
add
nop
xchg
inc
ja
repz
and
sbb
and
mov
outsl
fisubl
inc
cmp
outsl
or
push
inc
mov
repz
add
adc
lea
ds
sbb
es
pop
inc
pusha
mov
jmp
repz
mov
sahf
loope
add
or
cli
fsts
mov
ds
int3
push
rcrb
mov
pop
inc
push
or
shll
pop
mov
add
outsw
inc
mov
cmp
sbb
xchg
mov
adc
xlat
dec
mov
mov
mov
xorl
xchg
subb
jl
mov
adc
shlb
pop
dec
or
pop
call
jl
aad
mov
lcall
xor
add
popf
push
mov
xchg
fldt
pushf
test
push
mov
into
test
add
inc
test
fcmovne
arpl
jns
std
iret
push
inc
stos
cmpsl
lret
aam
leave
bound
mov
add
shrl
and
aam
jo
pushf
push
jp
les
outsl
push
ljmp
sub
movsb
test
pop
ljmp
adc
lods
xchg
mov
popa
nop
or
inc
popa
sahf
add
jp
hlt
daa
nop
mov
arpl
daa
sbb
cld
das
mov
in
shl
loope
xor
xlat
stos
gs
mov
jp
dec
ret
dec
add
push
nop
cltd
sahf
jg
inc
jb
pop
in
dec
das
add
pop
imul
fidivrs
xchg
lods
xor
dec
mov
cmp
iret
jge
pop
jo
ror
xor
push
repz
sub
add
sbb
xor
mov
nop
sub
jns
das
sub
inc
add
mov
or
pushf
orl
dec
dec
cltd
push
lahf
adc
push
fs
jg
pushl
stos
add
fbld
add
int3
lahf
mov
mov
mov
xchg
aad
mov
adc
movsl
cmpsl
popfw
add
sub
loopne
sarb
xchg
sbb
rolb
gs
fs
movsb
or
nop
cmp
popa
ret
lcall
fstps
add
int
test
jge
jne
add
lock
jbe
adc
add
fiadds
je
das
and
mov
mov
cltd
cmp
lahf
enter
pop
mov
mov
ljmp
and
adc
lea
xchg
xchg
xchg
je
ss
add
or
mov
inc
cld
nop
dec
push
and
add
pop
jmp
loop
loopne
movsb
adc
mov
pop
xchg
mov
aad
lods
xchg
push
lcall
daa
rcrl
enter
push
ret
ja
clc
cmp
push
sub
lea
push
jbe
sbb
stc
pop
dec
cwtl
xchg
xor
out
outsl
sbb
lods
mov
pop
mov
in
frstor
outsb
insl
add
jl
cmc
lods
dec
mov
jae
mov
hlt
add
or
dec
sarl
xchg
mov
add
add
lods
sbb
pop
pop
or
shl
and
push
cmc
or
aaa
pop
push
or
push
xor
hlt
xchg
xchg
push
pop
push
xchg
cmp
mov
xchg
repnz
sbb
imul
bound
loopne
cltd
dec
lods
mov
aad
and
and
mov
and
subl
sub
pusha
insb
xor
testl
sub
lret
xlat
aam
mov
call
cltd
jle
movsb
cmc
daa
or
add
pusha
fdivr
push
cs
sub
or
std
adcb
mov
dec
aaa
mov
mov
and
xor
dec
pusha
push
imul
adc
jo
aam
clc
inc
push
lods
mov
mov
jl
mov
sub
adc
or
mull
xor
jb
into
adc
out
sbb
push
or
pop
jmp
sub
sahf
xchg
or
or
inc
lock
paddq
mov
imul
pop
adc
mov
jb
pop
loopne
xchg
inc
pop
shl
add
in
push
shll
iret
xchg
jmp
mov
xor
mov
sub
dec
and
pusha
fwait
push
sub
fsubr
lret
pop
xchg
add
divb
aam
pop
mov
loop
mov
or
inc
mov
cmpsl
lock
dec
lret
bound
or
add
pslld
dec
push
mov
test
cld
jb
xlat
and
pop
imul
int3
test
mov
jp
sarb
pusha
daa
or
inc
inc
jo
out
dec
dec
sub
sahf
and
jo
add
aad
je
jle
dec
xchg
cmp
inc
cmp
test
xor
je
inc
inc
or
xlat
cli
inc
clc
and
stos
xor
sbb
sbb
jl
dec
sbb
xchg
cmpsl
push
xchg
stc
fdivl
fwait
rcrl
jecxz
lret
add
sub
jg
popa
sub
or
pop
add
jns
inc
pop
inc
xchg
xor
jb
jmp
push
mov
ds
adc
insb
push
js
mov
test
aaa
mov
mov
lahf
xor
add
add
insl
arpl
insl
enter
mov
or
cmp
xchg
pusha
mov
mov
mov
jecxz
das
lret
mov
outsb
decb
ds
mov
xchg
nop
jge
add
add
adc
or
pop
dec
adc
mov
mov
and
fcomip
rcrl
insl
jge
mov
lods
or
add
loop
arpl
lds
xchg
pop
adc
cli
repnz
popf
mov
mov
and
mov
xchg
loop
addr16
loop
aad
sub
in
add
mov
iret
cmpsl
push
inc
es
in
sub
enter
sbb
je
push
inc
push
cltd
les
mov
push
or
and
dec
pop
aam
aas
cli
mov
mov
push
xchg
cmpb
and
aaa
ja
daa
hlt
movl
inc
hlt
pusha
stc
data16
ret
jg
pop
add
add
push
jge
popf
lds
shlb
std
aam
jnp
out
rcr
lea
leave
jle
popf
pop
xchg
mov
daa
mov
push
out
mov
inc
insl
inc
adc
pop
add
xchg
xchg
imul
dec
ror
in
sub
cmpl
jmp
loop
push
jge
stos
in
jne
sarl
test
lahf
and
and
pop
sub
adc
push
mov
cmp
outsb
repnz
jne
mov
es
xchg
adc
aad
ds
xchg
enter
cmpsl
pop
jb
jle
xchg
int
inc
or
mov
cwtl
mov
xor
ja
xlat
or
pop
fidivl
shll
pop
lea
xchg
mov
pushf
jns
aam
push
push
test
mov
ret
aas
pop
add
inc
out
sub
jne
fistpll
jmp
add
cltd
aaa
mov
mov
loop
pop
aas
lcall
insl
and
push
push
add
ljmp
sbb
xchg
mov
test
outsb
addr16
addr16
shll
shlb
popf
loopne
movsb
aad
gs
pusha
xchg
add
xchg
xor
imul
jg
das
sbbl
or
pop
push
xchg
mov
pop
out
add
loop
fcoms
pushf
mov
dec
mov
test
sub
stos
or
and
jmp
aad
shr
outsl
insl
pop
popf
or
cli
js
aas
jg
inc
adc
jno
pop
push
cmp
cmpsb
push
jns
ret
mov
lcall
add
dec
jmp
and
xchg
xchg
mov
jmp
mov
and
jbe
loopne
sbb
mov
add
jge
cmp
aas
push
pop
push
push
divb
pop
iret
jg
or
test
push
cmpb
out
cwtl
xchg
dec
cmp
or
mov
rclb
lock
add
mov
dec
arpl
dec
lar
pop
jp
shlb
add
aaa
jnp
test
inc
test
sub
or
xchg
jbe
pop
push
pop
mov
jg
and
jbe
into
adc
mov
xchg
inc
mov
add
test
cli
push
mov
inc
ret
dec
mov
insb
mov
pop
lds
dec
mov
pop
sub
test
mov
pop
xor
mov
jne
pop
or
cld
shlb
bound
aas
outsl
lods
push
or
sbb
sub
push
movaps
pop
add
push
inc
cmp
in
push
mov
in
pop
inc
lcall
xchg
sub
dec
shll
xor
mov
xor
dec
or
adc
and
jge
inc
dec
out
hlt
add
xlat
adc
mov
and
hlt
and
sbbl
cmp
pop
cmp
push
outsb
mov
add
push
mov
int3
or
pusha
movsl
cmp
push
insl
ljmp
das
dec
jns
cli
mov
mov
sub
xlat
dec
cmp
lods
ret
insl
lcall
add
hlt
or
test
jge
test
push
and
repnz
mov
push
lods
int
mov
lcall
inc
jp
negb
shll
movl
pop
test
jb
inc
aam
negb
stos
pop
add
loope
adc
add
sbb
xchg
xchg
aam
jle
jne
mov
add
cmp
dec
leave
cmpsl
js
or
pop
add
inc
loopne
lret
push
jno
pop
xchg
dec
dec
outsl
sub
gs
push
mov
scas
mov
fisubl
divb
add
or
or
ret
xchg
jne
push
sahf
pusha
sub
mov
testl
sub
ret
fildl
pop
add
cmp
jg
push
pushf
inc
xchg
mov
xlat
daa
cmc
aaa
mov
push
jg
jg
pusha
lock
insl
movsb
add
or
insl
aam
std
je
inc
push
sbb
lea
dec
fdivl
push
cmp
lock
mov
lods
mov
inc
mov
stc
add
inc
test
sub
aad
sbb
xchg
orb
sti
dec
jbe
and
lods
mov
inc
add
mov
dec
xor
sub
xchg
repnz
pop
aaa
sub
stc
add
fwait
daa
ljmp
dec
enter
in
jge
sahf
cmp
inc
xor
stos
jae
and
add
cmp
mov
aad
call
and
jo
inc
sar
pop
xor
sbb
adcl
pushf
and
pop
xchg
sarl
lahf
leave
mov
sar
jb
aam
mov
les
cmpsl
inc
movsb
dec
pop
or
mov
push
inc
mov
popf
test
inc
lea
mov
in
or
sbb
or
mov
fsubrl
test
nop
test
inc
mov
data16
loopne
push
mov
and
mov
es
cmp
pop
sub
les
adc
pop
sbb
pop
sbb
mov
or
pop
insb
daa
inc
mov
jecxz
xor
addb
cs
and
ret
enter
sti
outsb
add
aaa
je
cwtl
lods
sbb
mov
add
add
pop
loopne
je
lods
ss
mov
and
xchg
ljmp
xlat
iret
sti
int
out
xchg
in
pop
mov
mov
test
pop
jbe
sahf
pushf
in
dec
mov
sbb
jecxz
aas
adc
push
fisubs
jmp
das
cmp
and
stc
ds
jecxz
sbb
dec
call
xchg
xor
push
xor
sub
jmp
adc
xchg
nopl
mov
jecxz
jge
xor
and
repnz
movsl
add
out
aad
shlb
or
xchg
lods
mov
and
push
sbb
push
incb
enter
ljmp
insb
fwait
sub
fmuls
cwtl
jl
pusha
push
jae
fdivr
pop
ret
imul
cmp
pop
add
pop
rolb
mov
enter
sub
iret
mov
lods
in
add
jp
xchg
jp
push
negl
out
cmp
std
vrsqrtps
fdivrp
aam
xor
push
into
or
out
cltd
inc
sbb
loop
cmp
cmpsl
rclb
push
or
out
push
add
or
pop
jg
dec
sbb
pop
mov
mov
and
inc
inc
ficomps
pop
popa
fldcw
cld
rcrl
dec
int3
pop
add
push
cmpsb
pusha
scas
adc
xchg
stos
bound
jle
cmp
fldl
loope
xchg
aad
jns
in
or
insl
mov
jmp
push
out
pusha
ja
rcrb
pushf
jo
lcall
sbb
or
mov
cmpsb
lds
loope
push
inc
icebp
push
dec
add
scas
sahf
mov
lahf
xchg
aam
loopne
cmp
xchg
mov
gs
and
cmpsb
jg
xchg
stc
dec
pop
mov
inc
enter
pushf
pop
pop
lcall
dec
outsb
out
mov
xchg
inc
sub
xor
dec
sbb
test
hlt
push
add
add
mov
mov
dec
sbb
addl
sub
jg
arpl
shrl
add
push
sub
mov
xchg
push
hlt
loopne
xlat
fcomi
jmp
mov
out
mov
pop
xchg
inc
lret
or
mov
push
mov
addl
jno
fs
out
cmp
push
js
pop
aas
xlat
lcall
sbb
pop
xor
stos
pusha
add
add
xlat
out
cs
dec
int
mov
adc
or
ljmp
cmp
arpl
jmp
fdivr
mov
xchg
jge
jne
testb
imul
cmp
movsb
inc
fs
add
sub
mov
inc
int
dec
sbb
xor
push
lea
sub
add
loopne
sbb
pop
lret
clc
fisubs
mov
jge
pop
add
mov
add
xchg
mov
iret
int3
sbb
pop
inc
dec
sbb
xor
xchg
xchg
xchg
jmp
faddp
inc
cwtl
push
mov
push
push
enter
and
dec
test
in
clc
or
in
aam
mov
xchg
mov
xchg
and
pop
xchg
cmp
outsb
mov
shrb
cmp
inc
xor
fs
lahf
negb
cmp
call
push
mov
sbb
push
push
les
pop
aad
roll
mov
and
cmp
push
cmp
xchg
cmp
mov
enter
mov
aam
or
mov
outsb
xchg
lcall
out
cltd
roll
push
jp
insb
out
insl
jns
jne
lahf
sbb
inc
add
movsb
adc
push
push
iret
mov
mul
imulb
jge
andnps
xor
mov
aam
mov
xchg
xor
dec
jnp
dec
lock
add
jne
xor
rol
aad
sbb
add
lds
jle
fwait
xchg
fnstenv
and
pusha
mov
xor
fwait
aad
xchg
loop
call
aaa
in
adc
cmpsl
int3
and
mov
test
rorl
xor
loope
xor
jge
mov
lret
out
gs
ss
pop
jmp
fld
jnp
mov
jg
add
fdivrs
testl
sub
lret
sarb
or
adc
dec
loopne
mov
add
fisttps
sbb
push
push
out
sub
adc
fwait
mov
mov
lret
dec
sbb
mov
xchg
sub
popa
stc
rclb
pop
fwait
pop
loope
adc
fcomp
data16
sub
lahf
mov
inc
gs
ret
mov
imul
lods
xchg
mov
mov
pop
not
ljmp
js
mov
icebp
clc
push
cmp
repz
out
popa
jle
ja
or
cmc
sbb
and
imul
or
sub
cmp
sbb
mov
incb
xor
xor
in
int
pop
add
mov
mov
pop
jns
ret
dec
xor
cmp
rcrb
stc
iret
scas
aad
xchg
xor
aam
decl
mov
sbb
mov
dec
outsl
or
fcmovnbe
xchg
negb
aas
add
cli
xchg
or
add
push
ss
mov
add
cmc
outsb
test
test
add
sbb
sbb
enter
pop
sub
dec
xor
jae
jne
mov
sub
xor
mov
es
fadds
ds
cmp
int3
mov
rorl
push
jne
shl
xchg
xchg
lds
sbb
xchg
faddl
push
cmp
pop
cs
add
mov
scas
lods
inc
xchg
dec
enter
test
xor
dec
sbb
sbb
push
js
sub
mov
push
sub
dec
mov
pop
aad
mov
or
mov
roll
je
shll
lods
push
xchg
test
push
lock
cwtl
adc
cmp
pusha
add
in
aaa
aam
inc
out
cmp
jl
xchg
push
shrl
add
jl
jmp
add
loope
pop
dec
es
outsb
pop
mov
mov
dec
stc
pop
add
test
mov
lds
push
cmp
in
lea
dec
lcall
das
fadd
jae
cmp
adc
add
fistl
sub
adc
pop
gs
aam
inc
lret
mov
stc
mov
add
lods
cli
inc
pushf
sbb
mov
push
xchg
not
mov
sub
repnz
movsb
ror
iret
pop
pusha
pop
cltd
mov
enter
push
pop
imul
movsl
mov
mov
xchg
push
jg
mov
add
js
push
mov
repz
stc
add
or
dec
mov
aad
shlb
clc
adc
xchg
cmp
xchg
jp
mov
xor
xor
ja
test
inc
ret
clc
push
mov
popa
xchg
adc
push
aam
aam
mov
pushl
bound
xlat
adc
imul
mov
aam
scas
pop
jge
jecxz
test
pop
pop
pushf
jmp
xchg
xchg
ljmp
jo
sarb
sbb
lea
out
mov
push
sbb
mov
push
mov
enter
popa
in
jb
shrl
mov
sbbb
pusha
jge
lahf
pop
in
loop
aam
into
repz
enter
mov
test
cmp
jae
leave
mov
stos
pop
leave
fldenv
and
add
pop
pop
push
cmpsb
jnp
mov
ljmp
rcrb
jno
mov
int3
add
adc
push
shll
push
fdivrl
xchg
enter
pop
xchg
push
int3
pop
jae
stos
jl
and
push
mov
mov
mov
insb
sub
into
push
mov
mov
fnop
pusha
aas
loope
jge
rcll
shlb
xchg
xlat
jg
popf
inc
lahf
xchg
jge
pop
jno
pusha
out
and
cmp
xor
aam
imul
pop
or
arpl
jle
fcoml
bound
adc
add
mul
dec
shll
jae
add
or
in
shll
cmpsb
lahf
lret
in
pop
sbb
hlt
and
fsubrs
or
mov
mov
mov
add
cmp
xchg
mov
fisubrs
repnz
imul
adc
test
lock
inc
outsb
mov
push
push
mov
int3
adc
sahf
and
pop
pop
xor
test
or
test
stos
jge
add
or
pop
dec
mov
pop
adc
jg
bound
aam
data16
jp
pop
xchg
add
mov
cmp
mov
fsubrs
or
sbb
ljmp
add
sbb
xchg
enter
cwtl
insb
sbb
pop
inc
or
push
in
faddp
pop
std
in
fdiv
mov
mov
xlat
xchg
mov
into
adc
fmull
xor
int3
xchg
xchg
pusha
xchg
xchg
in
jg
jle
xlat
or
les
push
in
add
dec
xchg
xor
cwtl
mov
or
mov
pop
ja
mov
mov
pop
sbb
pop
arpl
mov
jmp
jle
mov
dec
cwtl
or
push
xchg
inc
fs
test
fisttps
pop
or
loop
xchg
incb
mov
adcb
aad
das
loopne
sub
pop
pop
mov
popa
test
ret
inc
adcl
xor
popa
sbb
xor
mov
cmp
stos
cmpsl
jmp
xchg
sbb
mov
test
pop
icebp
dec
hlt
incb
sbb
xchg
or
pop
out
in
xchg
fadds
push
cmpsb
cmp
push
or
jg
mov
notb
aam
adc
jge
sbb
mov
jne
int
sbb
add
mov
ss
pop
ret
hlt
jbe
jl
aaa
inc
stos
fcmovnu
mov
movsl
pop
mov
dec
cmp
into
sbb
add
mov
mov
sbb
xchg
mov
push
popa
mov
add
iret
lods
xor
jge
mov
push
out
mov
push
mov
sbb
aam
clc
aam
int
movsl
pop
mov
pop
pop
push
cmp
inc
lcall
push
arpl
jp
rorl
xlat
outsb
inc
push
fimull
gs
testb
ret
mov
mov
out
in
and
lcall
push
mov
jb
cmp
mov
sahf
cmp
mov
ficoml
mov
clc
jns
cmpb
mov
push
pushf
xor
jl
add
mov
fldl
gs
lcall
shl
out
pop
adc
and
lret
push
xchg
xchg
dec
mov
inc
ds
pushf
inc
mov
inc
ret
pop
jnp
or
imul
and
call
cmpsb
testl
cli
int3
imul
lods
mov
push
mov
ja
or
mov
mov
test
xor
push
inc
add
or
push
cmp
sbb
into
inc
shll
inc
aaa
hlt
imul
inc
mov
cmovg
add
jge
ja
inc
fcomp
fisubrs
in
leave
stos
cmpsl
pop
mov
mov
fwait
pop
pop
mov
add
outsl
mov
adc
popa
xchg
leave
sbb
mov
xor
mov
xor
fistl
in
adc
mov
fwait
pop
pop
lret
popa
dec
sbb
pop
call
xor
push
stc
mov
adc
aad
daa
xor
daa
inc
pop
mov
scas
js
repnz
neg
mov
or
xor
and
je
mov
ret
repz
aam
insb
icebp
cmpsb
aas
pop
bound
push
cmpsb
mov
repz
or
sub
sbb
pusha
add
ret
inc
aad
repnz
dec
jle
movsb
cmp
cmp
sub
lds
mov
or
sbb
lods
push
push
cltd
cmc
sub
insl
dec
cmpsb
cmp
pop
enter
mov
sbb
xchg
add
roll
xor
cld
stc
push
pop
jns
arpl
mov
jp
add
pop
mov
sub
loope
mov
lret
testb
push
adc
pop
add
mov
mov
cld
xor
or
loopne
and
mov
pop
xchg
arpl
js
cmp
pushf
jge
add
mov
jg
xlat
mov
imul
bound
push
scas
cmp
shlb
out
mov
int3
jp
insl
leave
fimull
outsb
sbb
add
testb
insl
mov
jl
gs
lret
fsubl
add
pusha
xchg
and
das
call
pop
pop
or
xlat
outsl
mov
gs
negb
sub
jae
fistpl
imul
ljmp
cmp
pop
test
stos
mov
mov
mov
hlt
wbinvd
adc
sub
mov
mov
add
inc
lcall
add
fwait
inc
or
rcrl
dec
pop
sbb
aaa
inc
leave
xor
call
inc
and
scas
mov
add
xchg
sub
loope
insb
xor
cmp
jge
bound
fists
rorl
jns
sbb
repnz
in
fnstenv
mov
rolb
inc
cld
sub
lret
jecxz
sahf
xor
pop
mov
mov
hlt
ds
mov
shl
adc
popw
xchg
add
lret
mov
sbb
cmp
je
xchg
fs
fadds
mov
fsubs
or
lds
clc
rolb
xlat
and
adc
pop
sbb
mov
rolb
and
xor
aam
bound
sahf
pusha
pop
into
jmp
test
mov
pop
ret
add
mov
sub
jmp
repz
stos
xchg
daa
xor
aas
arpl
push
and
and
xchg
push
rcrb
stos
addr16
sbb
inc
pop
js
bound
lock
xchg
sbb
sub
mov
sub
add
mov
jne
int
das
push
outsb
fldl
cmpb
js
add
jmp
sub
scas
add
add
sbb
out
lahf
sub
add
pusha
cmp
cmp
mov
sbb
cmpsb
cmpsl
xor
inc
adc
inc
enter
sti
xchg
aaa
xlat
inc
popf
int3
loope
pop
jb
push
pop
add
ja
dec
js
andl
sbb
jl
out
lahf
mov
cmp
loope
pop
and
aam
cltd
out
outsl
jg
mov
or
adc
dec
add
loop
arpl
inc
ljmp
lret
add
inc
fists
pop
test
push
out
into
mov
rcll
mov
icebp
dec
fsubs
xchg
pop
sub
xchg
push
test
rclb
loop
xchg
xor
push
lea
push
xchg
repnz
push
fwait
jge
test
jg
rcr
xor
test
xchg
rorb
loope
add
jmp
int
xor
jl
dec
or
mov
mov
jae
dec
aas
pop
negl
dec
rcl
pop
mov
add
dec
adc
test
je
push
mov
push
sbb
or
flds
pushfw
push
cld
add
jle
mov
cmp
adc
adc
dec
or
fidivl
cmpsl
xlat
fs
add
cwtl
into
lahf
xchg
inc
call
inc
dec
cmpsb
jb
xchg
inc
and
test
sbb
jl
repz
dec
mov
xor
aad
inc
inc
outsl
lea
mov
add
scas
cmova
inc
xchg
push
outsb
les
loopne
jecxz
sub
rclb
imul
repz
mov
jge
pop
enter
call
lea
cmp
jle
jmp
inc
rclb
xor
lods
cld
shrb
int
mov
xchg
pop
xor
cmc
jnp
mov
pop
adc
mov
xchg
mov
mov
adc
jne
incl
adc
sub
and
xor
and
xor
cmc
push
adc
out
cmp
pop
jae
gs
orb
lcall
loop
cmp
aad
cld
cmp
loope
cld
in
in
xchg
add
pop
push
mov
jmp
xchg
cmp
pusha
rorl
cmpsb
and
push
or
mov
cmc
mov
jae
jl
sub
loop
pushf
in
mov
push
mov
xor
ja
lahf
cmp
dec
pop
mov
mov
sbb
add
cmp
mov
outsl
pop
push
add
dec
leave
jecxz
dec
adc
pop
dec
push
inc
mov
mov
pop
out
fcomi
sbb
sbb
jle
xor
dec
cwtl
sub
in
or
arpl
cli
mov
sbb
roll
inc
addr16
jns
push
cmp
lods
xchg
dec
loopne
jne
pusha
cmpsl
es
push
sbb
push
imul
cmp
jo
aam
mov
rclb
frstor
add
loop
popf
xor
pop
pop
mov
mov
or
in
jmp
iret
dec
shl
mov
mov
popf
adc
push
hlt
leave
mov
scas
and
pusha
fistpl
push
or
sub
or
add
in
lret
jns
movsb
cltd
icebp
mov
sahf
enter
aas
cmp
mov
and
icebp
add
imul
cmp
lcall
daa
or
inc
mov
or
in
fisubrl
adc
sbb
roll
push
xor
loopne
or
cmp
pop
in
jle
jnp
iret
cmp
lods
testb
inc
aam
pushf
fwait
cmp
push
sub
mov
sub
push
xchg
xor
pop
mov
adc
aad
push
pop
test
mov
lret
dec
in
mov
cs
push
mov
or
push
cs
insl
mov
shll
aam
dec
aad
fwait
loope
pop
mov
mov
cwtl
dec
jne
mov
aam
cs
iret
sbb
aas
push
mov
sub
sub
fwait
aam
cltd
xlat
fildl
scas
add
sbb
jmp
lret
dec
pop
cmp
or
pop
pop
mov
adc
jne
add
xor
fidivrs
mov
ret
inc
into
or
lret
add
ss
add
xor
pop
dec
cmp
pop
icebp
push
cld
in
sub
int3
and
or
mov
pop
inc
mov
divl
imul
inc
or
push
and
lea
loop
aad
lret
fdivrl
fistpl
inc
cmp
pop
sbb
pop
test
inc
xorb
lcall
pushf
lds
daa
inc
pushf
pop
push
sbbl
shl
in
xchg
frstor
lods
cmp
inc
cmc
in
lods
xor
xchg
mov
dec
push
add
sahf
pop
lahf
mov
fdivrl
mov
adcb
iret
testb
mov
int3
ljmp
dec
pop
or
ds
sub
leave
aam
pop
add
jb
inc
xor
pop
ja
or
cmpsl
aad
sub
in
sbb
popf
xchg
mov
add
fistpl
sub
jo
and
inc
mov
and
and
addl
out
mov
add
lret
mov
inc
pop
dec
mov
and
adc
xchg
pop
ja
aam
lock
cmpsb
fbstp
jmp
pop
xor
mov
mov
add
subl
xchg
cli
lock
mov
sbb
out
aad
pop
pushf
mov
or
lods
mov
sub
add
push
push
xchg
test
shll
mov
fucomi
mov
dec
dec
jbe
cmp
sti
out
push
out
mov
mov
aam
add
adc
dec
jo
sub
cltd
lock
push
xchg
sub
jecxz
cmp
add
cmp
mov
xchg
push
gs
dec
add
xlat
loopne
mov
ret
mov
mov
xchg
les
xchg
adc
sub
daa
outsl
jge
mov
inc
sbb
push
jmp
mov
xlat
xchg
test
add
leave
out
addr16
xchg
dec
roll
mov
popf
cmpsl
lock
jnp
cmpsb
and
jbe
push
mov
in
into
pop
fsubs
push
jns
movsl
push
in
push
lcall
inc
sub
pusha
mov
and
jg
adc
or
rcrl
push
test
xchg
mov
inc
cwtl
aas
add
test
scas
fstl
jbe
or
pop
push
mull
push
shl
jmp
adc
out
iret
cld
mov
sbb
sti
cmp
in
arpl
je,pn
or
cmp
cs
add
xchg
pop
cmp
jp
push
lahf
into
fwait
pop
je
es
inc
dec
outsl
hlt
aas
insb
jnp
shll
xor
add
cli
subl
pop
pop
sub
icebp
mov
std
mov
xlat
loop
ss
stos
dec
jmp
xchg
jmp
xor
and
shrl
add
pop
arpl
adc
sbb
fwait
test
xor
or
push
inc
cmc
push
sub
mov
les
outsb
xor
dec
mov
sbb
or
pop
xor
add
push
decl
js
jecxz
mov
adc
sti
cmc
in
jne
ret
int3
into
inc
out
pusha
sbb
pop
sbbl
push
push
pop
pop
cmp
sub
aas
or
jnp
adc
cmp
cbtw
lods
inc
fwait
mov
pop
adc
inc
aam
pop
sub
cmc
stc
mov
ss
sub
jmp
aad
inc
repz
mov
scas
push
dec
mov
xchg
mov
cli
mov
dec
adcl
mov
dec
std
xchg
push
andb
jecxz
lods
repz
pop
mov
in
repnz
adc
mov
pop
push
test
xor
jmp
mov
pop
stos
shll
roll
pusha
ret
jae
int3
rcl
adc
ljmp
or
leave
sbb
sub
aam
jmp
xchg
mov
add
push
shlb
out
jmp
mov
cmp
dec
mov
pop
pop
xor
imul
js
dec
add
pop
push
dec
insl
mov
leave
mov
add
add
dec
push
jge
leave
enter
or
push
push
icebp
jp
arpl
pop
pop
and
sbb
ljmp
and
sbb
mov
jb
adc
aad
mov
pop
dec
mov
push
cli
aas
add
sbb
add
push
mov
add
or
lret
popf
stos
cmc
xchg
adc
xor
fisttps
cmc
xlat
lock
and
jge
loop
and
in
add
xlat
sahf
rolb
push
fists
ss
mov
jns
jnp
dec
jp
push
dec
sbb
ja
aad
mov
mov
pusha
call
pop
dec
test
mov
xchg
stc
jl
rcrb
dec
lcall
dec
es
aam
push
xor
jg
fs
dec
lods
rcrl
jnp
adcl
add
mov
jne
inc
jno
aad
push
stc
out
adc
pop
ss
cmp
out
push
rorb
push
outsl
in
xchg
fbstp
nop
mov
test
mov
xor
xlat
pop
sbb
int3
xchg
out
pop
push
out
jne
pop
lods
sbb
aad
gs
lock
dec
xchg
sub
inc
in
test
aad
cld
push
jno
jae
mov
pop
push
xchg
dec
jge
and
sub
shlb
ljmp
fsubs
jmp
aaa
add
dec
and
es
push
aaa
mov
cs
aas
ljmp
repnz
and
js
dec
cmp
inc
imul
jp
push
jmp
sub
mov
cwtl
push
sub
dec
or
push
stos
cs
rcl
out
imul
in
jl
push
mov
stos
gs
dec
jbe
pop
test
gs
or
std
cltd
sbb
outsl
dec
js
lret
sbb
add
xchg
test
call
sbb
xchg
xchg
jge
aas
leave
fiaddl
mov
in
test
pop
rcl
pop
sbb
outsl
lahf
nop
add
out
das
mov
test
lret
movsl
pop
popf
push
fisttpll
in
adc
subb
sub
pop
adc
iret
push
jns
mov
pop
mov
sbb
aam
pop
cli
imul
mov
pop
add
mov
xor
gs
pop
out
stc
sub
iret
stos
ljmp
mov
mov
or
jg
test
icebp
sub
pusha
push
add
imull
adc
jl
fcmovb
cltd
mov
or
fs
ror
addr16
notl
repz
dec
mov
push
je
mov
mov
xor
xchg
cmpsb
or
xlat
inc
popf
inc
mov
das
sar
out
aam
mov
addr16
add
or
pop
aad
lods
push
jl
out
ljmp
fsubrs
aad
mov
cmc
ret
inc
mov
out
repnz
aam
mov
movsl
rorl
arpl
cmp
stos
sbbl
aas
sbb
cmc
test
cs
or
and
pop
push
mov
pushf
lds
mov
aam
push
popf
cli
or
int3
sbb
add
pop
mov
jl
mov
xchg
xchg
adc
sbb
dec
decb
imul
in
pop
mov
imul
outsl
and
inc
pop
xor
adc
or
rclb
cmpsb
sbb
cmp
jbe
add
cld
das
mov
and
aad
mov
sub
nop
pop
mov
xlat
addb
ss
mov
mov
setl
jno
fwait
mov
jmp
insl
clc
mov
int
mov
push
rolb
xlat
and
push
jge
cs
rcrl
enter
add
add
push
negl
jg
aam
fcoml
and
jo
push
xchg
add
les
push
adc
fmulp
push
ds
mov
or
mov
xor
jns
pop
mov
pop
imul
subl
icebp
cmp
mov
scas
mov
int3
cltd
lahf
pop
cs
test
test
mov
cmp
lret
pusha
repz
leave
aam
adc
mov
push
clc
aas
call
stc
xchg
gs
pop
insb
add
pop
sarb
cmpsb
dec
test
pop
mov
push
out
ret
aam
xlat
push
jo
jg
mov
fisttpll
std
mov
aad
rcrb
pop
fsts
insb
scas
xor
pop
xchg
aam
xchg
xlat
jl
enter
mov
test
pop
sbb
out
mov
mov
jp
xchg
shrb
mov
popa
scas
xor
dec
sbb
cmp
pushf
adc
sbb
dec
mov
fldl
jo
orl
into
dec
sti
jl
cwtl
jo
push
dec
and
negb
neg
add
jb
and
fwait
ret
mov
dec
aad
loope
fdiv
mov
sbb
push
xchg
sub
add
testb
xchg
aaa
sub
aam
loope
add
aam
out
sub
adc
push
arpl
add
gs
es
cs
loope
sahf
add
aam
mov
sbb
test
pop
loope
bound
xor
popa
jns
inc
lret
inc
cmp
push
outsl
incl
outsb
jp
mov
xchg
mov
add
fmuls
adc
or
cmp
cmp
mov
push
sub
pop
nop
push
cli
add
das
scas
ljmp
mov
push
push
or
insl
dec
popa
lahf
or
lcall
pop
push
fisubs
loope
xchg
inc
sahf
sarb
xchg
jmp
xchg
push
sbb
pushf
bound
xchg
test
into
ds
cmp
dec
sub
cwtl
mov
cmpl
xlat
cltd
push
cli
push
pop
hlt
or
cmc
sbb
jne
mov
outsl
or
loopne
pop
andb
jb
add
push
bound
cmp
or
fwait
pushf
jbe
mov
jne
out
enter
inc
scas
inc
push
int
cli
jmp
mov
stos
fstpl
mov
testl
jle
mov
aas
adc
jb
cld
bound
xor
xor
mov
xlat
dec
add
test
push
add
lcall
popa
popa
sar
insl
mov
jecxz
cmp
xlat
lahf
add
hlt
mov
nop
mov
cmp
cmp
mov
add
das
sbb
add
push
clc
cmp
shll
pop
dec
add
add
push
ret
sub
jle
pop
jp
loop
xchg
mov
out
fcompl
mov
outsl
decb
cmpsl
shlb
pop
pushl
pop
lods
pop
lahf
inc
pop
mov
sti
out
cmpl
adc
cltd
inc
xchg
mov
cli
inc
je
push
mov
in
sar
hlt
adc
pusha
adc
mov
clc
in
mov
vmovsd
adc
add
jge
and
dec
loope
mov
loope
pop
mov
mov
dec
int
lcall
mov
out
or
inc
divb
mov
push
cmc
dec
mov
pushf
fs
cmp
mov
or
insl
xchg
cld
sub
sub
pop
push
js
jle
adc
mov
mov
adc
scas
mov
not
arpl
es
mov
mov
dec
add
add
xchg
cmpsb
lods
add
pushf
jmp
mov
leave
cwtl
and
dec
in
and
mov
sbb
xor
leave
xchg
add
icebp
dec
pop
dec
cli
and
cmpb
and
je
mov
lods
pusha
mov
sub
frstor
stos
testb
lcall
js
jp
popf
cmpsl
fld
mov
or
cli
pusha
psubusw
mov
rcrb
out
inc
pop
inc
lahf
sub
sti
pop
sbb
lahf
das
aad
mov
pop
sbb
pop
xchg
push
push
cmc
cmp
cmpsb
mov
add
sub
sbb
pop
push
in
adc
movsb
fildll
jbe
mov
sbb
mov
push
cwtl
fsubl
mov
inc
es
test
add
imull
orl
fs
mov
aad
dec
xchg
mov
dec
push
into
mov
mov
pusha
loope
inc
sarb
in
and
insb
adc
pop
mov
sub
insb
addl
int3
test
iret
push
inc
imul
dec
cwtl
addb
adc
leave
pusha
bound
lock
out
push
aas
mov
add
inc
add
jno
inc
rcrl
jge
and
pop
push
jmp
xchg
inc
nop
push
test
pop
push
stos
add
divb
sbb
rcl
mov
push
rcrl
push
mov
inc
bound
insb
into
xor
add
pop
stc
nop
ss
cmp
loop
sbb
add
call
dec
pop
sbb
dec
repz
add
fs
mov
inc
sbb
sahf
push
lahf
inc
add
loope
or
movsl
mov
jg
stos
les
jns
aad
ds
sar
mov
iret
fadd
popa
dec
pop
add
sub
cmpsl
add
cmp
push
add
aas
adc
pop
aas
pop
out
adc
xor
out
or
vpmullw
xor
add
jmp
push
sub
pop
mov
lock
inc
mov
frstor
xor
stos
lods
in
add
dec
cmp
mov
or
cmp
inc
mov
jle
and
in
or
or
jmp
pop
mov
fsubs
push
clc
es
xor
mov
sbb
mov
ds
aad
imul
push
insl
aad
push
dec
lods
cli
sti
mov
pop
lret
xlat
test
fists
test
std
cmp
jecxz
push
xchg
mov
movsl
aad
icebp
sub
jo
sub
out
dec
mov
xor
add
jmp
xor
jmp
test
add
add
fisubl
dec
aas
xor
or
lods
fs
or
sbb
popa
cmc
and
fistl
lea
mov
pop
push
mov
pop
hlt
mov
loop
jo
movsl
inc
out
aas
push
pop
outsl
pop
xchg
and
xchg
aad
jne
inc
jo
dec
xor
fld
add
inc
pop
and
fistpl
and
sbb
fists
gs
xor
push
test
mov
into
cmp
test
push
sbbb
aad
or
repz
stc
adc
bound
stos
xor
fldcw
lods
pop
mov
movsb
mov
lret
add
mov
mov
dec
push
mov
rcr
mov
and
inc
lret
sub
mov
jp
dec
rolb
aas
stos
decl
fidivl
mov
xchg
and
and
data16
xlat
imul
xchg
inc
popa
repz
jg
mov
xchg
add
int3
imul
mov
aad
decb
js
xlat
cmpsb
xchg
std
xchg
je
cltd
aad
jb
xlat
cmp
add
fs
popa
test
lea
mov
xchg
aaa
cld
iret
sub
loopne
stos
inc
pop
mov
xlat
mov
jne
xor
mov
fnstsw
xchg
daa
mov
leave
iret
mov
dec
out
negb
out
sbb
lahf
and
loop
stos
out
lret
mov
push
pop
and
or
aad
mov
je
mov
sbb
or
xor
decl
xchg
adc
mov
add
icebp
or
ja
mov
and
adc
stc
adc
cmpsb
rorb
jmp
cmp
push
pop
push
ja
add
pop
daa
sub
es
mov
in
mov
les
shrl
or
mov
or
and
xchg
insl
mov
dec
add
cmp
xchg
add
pop
inc
pop
scas
imul
pushf
push
clc
leave
and
ss
mov
push
xchg
aam
xchg
cmp
ljmp
pop
or
mov
movsb
repnz
sbb
mov
int
push
or
pop
jnp
clc
frndint
mov
fwait
xor
not
mov
mov
and
xor
nop
movsb
sbb
or
sub
int3
mov
mov
addl
lret
pop
pop
pop
jp
adc
mov
pusha
jae
icebp
leave
test
lcall
ficoml
mov
fdivr
mov
jmp
lea
sbb
test
mov
jne
mov
daa
pop
push
and
int3
lahf
popf
imul
lock
hlt
mov
int3
dec
into
das
mov
pop
pop
or
inc
push
das
xor
mov
add
mov
xlat
mov
scas
andb
add
inc
xchg
sarb
fwait
xchg
cltd
mov
mov
pop
test
cmp
subb
pop
and
pop
jle
stos
xor
cmpsl
xchg
and
nop
arpl
dec
xchg
push
or
insb
nop
and
repnz
jns
pop
mov
cli
sub
scas
movsl
mov
mov
mov
aam
or
movsl
cmp
pop
std
mov
mov
popf
jno
inc
in
int3
sahf
pop
xorl
add
sub
cmp
dec
cld
nop
jo
push
add
das
in
and
add
mov
outsb
call
mov
push
xchg
loope
pop
bound
icebp
popf
lods
push
jmp
sti
mov
mov
ljmp
pop
loop
xor
add
insl
mov
mov
sti
add
cmp
lods
shl
jg
mov
sahf
xchg
pusha
cmpsl
outsl
loop
ds
js
cmc
jmp
jo
mov
mov
add
sub
fstpt
dec
add
adc
mov
idivl
adc
aam
out
pop
aad
out
js
pop
ja
mov
es
rolb
xlat
das
idivb
jl
filds
lret
and
add
xor
inc
cmpsb
adc
cmpsb
cmp
push
mov
pop
cmp
cmp
inc
jmp
mov
mov
subb
iret
arpl
mov
pop
scas
movsb
popf
aad
dec
push
xor
mov
sarb
fcoml
imulb
mov
sbb
iret
xchg
cli
inc
add
in
and
or
mov
js
sbb
aad
adc
rcl
or
inc
scas
xor
mov
cmp
cmp
popa
sbb
inc
call
aas
mov
or
adc
faddl
fs
xchg
dec
xor
pop
sub
test
push
xor
out
add
inc
sub
jmp
cmp
test
push
insb
push
or
lret
pusha
aas
jns
cmpsb
repz
sbb
stos
stc
fiaddl
mov
sub
push
andl
fadd
jb
daa
sub
icebp
loopne
je
adc
out
insl
ficoml
and
int3
push
fs
jle
data16
mov
mov
pop
shl
pop
aam
xor
xlat
add
shll
cs
pop
int3
push
loope
jne
adcb
popa
leave
mov
mov
mov
pop
insl
pop
rolb
lahf
pop
add
mov
sbbl
mov
ljmp
jae
test
fstl
movsl
or
mov
paddq
add
lds
jns
add
pop
push
fsubs
push
and
andb
push
add
inc
or
mov
pop
jge
les
sbb
pop
insl
scas
jp
inc
call
jbe
dec
or
or
jg
cmp
sub
pop
mov
mov
gs
adc
ror
fs
and
les
ja
jno
pop
mov
pusha
and
add
fdivrl
test
fisttpll
lods
arpl
in
cmp
sub
mov
xchg
or
xor
mov
mov
jne
sub
push
mov
inc
jno
inc
dec
mov
add
push
cltd
loopne
mov
test
and
mov
mov
mov
in
in
cs
outsb
sbb
icebp
fdiv
mov
pusha
stc
pop
sub
loope
jmp
push
jne
push
popf
pop
mov
xor
mov
mov
stc
push
adc
sbb
clc
xchg
pop
push
cmp
fs
aam
hlt
movsl
rclb
dec
leave
stos
es
fidivl
sub
aad
test
mov
mov
push
lretw
or
dec
mov
cmc
aad
push
aad
cmpsl
test
sbb
test
cli
dec
mov
mov
ds
jle
push
mov
sbb
stos
icebp
and
daa
push
mov
int3
cld
lea
dec
cld
xchg
add
push
stos
ret
sbb
lods
xchg
in
jns
mov
pop
sbb
xchg
and
insb
push
call
sahf
outsl
push
shll
and
and
inc
xor
ss
pop
lahf
cmp
pop
adc
rol
add
cmp
xlat
pop
lahf
xchg
jno
leave
lods
ret
rcl
popf
jg
shrb
fnsave
lcall
aad
les
scas
mov
sub
add
inc
jne
pop
add
adc
push
xchg
pop
pop
adc
or
or
imull
mov
fwait
test
adc
popa
add
popa
and
inc
jmp
sbb
aad
pop
out
pop
stc
sbb
ljmp
add
dec
xchg
cmpsb
xchg
cmc
add
popf
mov
je
pop
and
or
adc
jmp
cwtl
test
xor
mov
leave
iret
adc
push
sub
cltd
mov
dec
dec
add
xor
pop
rcll
call
push
data16
mov
add
push
cmp
lea
in
aam
movsl
mov
dec
stc
popa
loope
int
insl
mov
bound
xchg
xor
and
sub
push
int
addr16
aad
mov
sub
iret
orb
outsb
add
adc
inc
int
cmp
add
ljmp
xor
add
inc
sub
nop
mov
pusha
pop
fnstenv
repnz
adc
test
push
mov
xor
and
mov
adc
inc
mov
lret
or
movsb
stc
push
add
rcrl
cltd
inc
push
repnz
mov
test
jle
push
add
cmp
xchg
mov
sub
addr16
roll
addl
pop
xchg
ljmp
xlat
sarb
jp
pop
mov
scas
add
mov
lcall
repnz
lahf
cmp
in
inc
mov
xchg
push
push
pop
or
cltd
adc
shl
pushf
mov
sbbl
jp
or
mov
das
stos
pop
lar
cmp
clc
sahf
sbbl
push
add
enter
and
cmp
and
push
lret
ret
in
orb
mov
in
sarl
testb
aam
xor
mov
lahf
outsb
fdiv
pop
sti
or
inc
stos
cmp
mov
mov
add
add
jg
pop
clc
popaw
pop
lahf
testb
xchg
jmp
xchg
insb
jae
sub
mov
rolb
rclb
stos
and
adc
cmp
or
xor
xchg
pusha
sub
loopne
inc
aam
adc
mov
les
pop
jb
lahf
pop
pop
test
push
outsl
cmpsb
gs
add
in
lret
add
mov
mov
mov
xchg
cwtl
add
insl
or
pop
jb
sbb
dec
lock
pop
mov
add
push
pop
mov
pop
mov
repnz
arpl
mov
fcom
lret
sbb
pop
mov
pop
and
push
aaa
mov
and
scas
lahf
or
inc
xchg
js
imul
cmp
fldenv
lock
lahf
aad
inc
cs
sub
pmulhw
jne
cmp
xlat
add
out
add
leave
jno
js
sub
aad
lahf
andb
das
enter
scas
fisttps
add
pop
pop
jmp
cld
push
pushw
repz
or
mov
mov
test
orb
jns
call
cmpsl
cltd
sbb
jae
pushf
mov
jg
pop
xor
aad
imul
push
imul
adc
xchg
imulb
xchg
stc
cmp
cmc
popf
add
add
xor
mov
or
xchg
outsb
lret
in
sub
add
add
rorl
xchg
push
mov
add
cwtl
dec
hlt
ret
push
pop
mov
pushf
push
add
insb
cmpsb
sti
push
ss
sbb
xor
shrl
sbb
das
pop
pop
cltd
push
fidivrl
dec
push
aam
mov
cwtl
push
xchg
cmp
pop
xchg
out
and
addr16
fcompl
add
lahf
adc
lds
xor
mov
pop
fucomi
les
pop
adc
call
mov
sub
les
leave
sbb
cmpl
lds
mov
pop
ret
fbld
clc
lods
aas
sbb
icebp
fildll
std
out
cwtl
ret
jae
sbb
lds
dec
nop
inc
ja
xor
push
test
add
xchg
mov
push
lds
imul
mov
sbb
jbe
push
repz
xchg
out
mov
pop
aas
pop
cmp
lret
and
fiaddl
cmp
das
arpl
mov
arpl
ficomps
roll
inc
lahf
or
mov
aaa
inc
insl
sub
dec
jbe
cmpsl
push
or
in
mov
icebp
cmp
mov
lret
scas
into
test
imul
push
xchg
aad
lcall
mov
sbb
jne
pusha
scas
mov
jmp
and
leave
jg
aam
mov
hlt
mov
adc
dec
dec
dec
pop
add
xor
in
add
mov
jmp
pushf
and
sub
mov
add
stos
or
in
mov
pop
mov
push
cltd
mov
orl
push
mov
out
push
aad
mov
adc
mov
cmp
adc
ret
sub
cltd
insl
fadd
mov
xchg
mov
je
lahf
xchg
mov
and
mov
int
push
or
mov
mov
lods
test
test
push
xchg
outsl
mov
mov
add
mov
pop
dec
mov
lock
repz
lahf
xchg
stos
negl
inc
sbbb
lods
fdivp
fldenv
xchg
mov
popf
cmp
in
mov
pushf
pop
jle
add
push
mov
test
ljmp
fcomi
mov
iret
jno
pop
aam
ret
and
sbb
xchg
aaa
shrl
jmp
movsb
icebp
inc
sbb
mov
jle
jo
lahf
mov
icebp
clc
gs
jg
add
xchg
cmpsb
aam
mov
je
clc
jle
xchg
mov
je
mov
enter
xchg
popw
add
jl
sub
or
xlat
sub
pop
lods
fcoms
jecxz
mov
add
arpl
sub
imul
cltd
sahf
sbb
clc
push
lock
cmp
mov
jae
out
pop
das
insb
mov
aaa
and
push
aam
xchg
and
orb
mov
stos
pop
in
loopew
dec
pushl
mov
pushf
imull
jbe
imul
inc
inc
xchg
jge
aam
jge
and
icebp
in
pop
jl
test
subl
jp
adc
inc
push
adc
pop
aad
scas
iret
mov
test
in
dec
sub
pushf
push
pop
daa
in
pusha
in
mov
popf
pusha
loope
jp
inc
push
les
xchg
adc
sbb
push
cwtl
shll
loopne
push
and
add
and
mov
repz
inc
enter
push
mov
or
jnp
lret
adc
mov
inc
jecxz
push
mov
mov
test
in
adc
nop
mov
repnz
mov
xchg
insl
cmp
pop
in
xor
je
rcl
mov
int
call
mov
sbb
jno
xor
out
rorb
sbb
les
and
mov
js,pt
jb
repz
addb
fcomp
pop
mov
test
add
rcll
pusha
pop
ja
sahf
push
clc
aad
sahf
nop
cs
fmuls
sbbl
mov
add
sub
xor
sbb
iret
xchg
imul
jae
testl
call
out
jecxz
xchg
mov
mov
js
fisttpl
mov
cwtl
pusha
jle
adc
mull
pop
or
add
jmp
cmpsl
icebp
cmp
gs
iret
add
shrb
pop
in
ret
adc
jno
ror
jnp
xorl
scas
mov
imul
imul
mov
cmpsl
ret
and
stos
add
xchg
add
enter
lgs
hlt
add
call
pop
lea
or
push
scas
xchg
hlt
pop
add
sbb
aas
xlat
dec
xor
cmc
or
mul
mov
std
lret
dec
fsubl
lods
and
dec
jl
push
jae
int3
bound
inc
sbb
cmpsl
push
es
loop
daa
xlat
cmp
adc
clc
jno
pop
fwait
call
ljmp
negb
mov
lret
iret
iret
push
push
cmp
sub
pop
push
jns
xor
cmp
movsb
push
not
xchg
adc
popf
shlb
sbb
xor
push
stc
mov
push
mov
push
sub
mov
jne
cmp
cmp
call
jp
popa
ret
sahf
lods
dec
jp
bound
or
pop
jg
mov
mov
cmp
sbb
mov
aaa
cmp
hlt
aad
xchg
aas
dec
test
inc
push
mov
sub
sub
adc
xlat
scas
dec
mov
inc
jmp
inc
push
pop
scas
and
dec
es
aad
xor
push
mov
pop
and
or
add
fidivrs
ljmp
std
mov
push
popf
inc
les
xchg
xlat
sahf
xchg
lahf
xor
jge
sub
negl
arpl
sbb
outsb
inc
mov
jno
mov
xor
test
jecxz
add
dec
cmp
dec
movb
xchg
mov
mov
outsl
inc
rcrb
cmp
mov
cli
clc
sbbb
dec
mov
fcompl
add
adc
sti
ret
mov
inc
dec
mov
aam
jl
out
add
lcall
andb
sub
adc
js
xor
test
jle
adc
ss
adc
mov
xor
adc
lcall
das
mov
mov
fildl
cltd
adc
mov
push
nop
inc
add
lods
xchg
add
sbb
xchg
in
add
sub
xchg
add
push
and
lret
jle
stos
fdivrl
fisubrs
not
add
jg
mov
inc
pop
push
hlt
jo
gs
mov
push
mov
add
jnp
data16
jecxz
aam
faddp
jle
outsl
insl
sub
jnp
repnz
movsb
mov
adc
pop
sub
in
lahf
sub
xchg
sbb
mov
ret
roll
and
pop
test
lock
add
xchg
inc
jecxz
pop
mov
dec
out
add
sti
inc
add
mov
push
lahf
sbb
sub
add
mov
push
cmp
pop
mov
int3
ret
sahf
inc
push
jbe
imul
and
adc
xor
push
daa
ret
mov
cmp
loope
add
repz
mov
inc
les
stc
xchg
jbe
adc
idivl
mov
mov
mov
fbstp
jnp
mov
pop
rcrl
nop
xchg
xchg
stos
lret
scas
add
push
aad
xchg
fdivrs
pop
push
mov
js
sbb
daa
mov
leave
mov
aad
inc
xchg
in
icebp
lea
cmp
pop
cld
sub
dec
hlt
cmpsl
inc
mov
inc
repz
std
mov
and
dec
fwait
repz
aad
push
adc
mov
mov
xor
pop
pop
stos
xchg
xchg
lea
and
nop
dec
mov
push
dec
push
pop
out
mov
divl
cmc
aam
inc
sbb
insb
sub
adc
int3
push
sahf
out
dec
add
call
stos
ds
aam
in
stos
pusha
xchg
lret
cltd
sub
xor
mov
lea
push
rol
in
mov
pop
movl
call
dec
mov
and
or
mov
cmp
jge
push
xor
cmp
clc
dec
add
xor
mov
inc
movl
cmovno
add
xchg
and
shll
or
pop
ljmp
lcall
jbe
sbb
mov
jae
and
jp
jns
popf
mov
loopne
js
cmp
pushf
dec
pop
rcrl
mov
mov
fisubrl
les
dec
mov
lret
out
stos
xchg
lret
mov
jecxz
xor
in
rol
stc
cmp
out
jg
cmp
pop
xchg
andl
push
idivl
sbb
jge
pushl
push
aam
cld
mov
cmp
dec
aam
or
test
mov
and
cmp
notb
stc
shlb
cmp
xor
mov
jp
addl
ss
inc
test
dec
ror
js
dec
or
jle
movsl
les
xchg
cmpsb
pop
pop
sbb
mov
call
popa
stos
ja
mov
popf
stos
jne
xchg
arpl
cmp
enter
bound
or
in
rol
test
aam
pop
iret
pop
lods
mov
sbb
sub
add
sahf
mov
and
jle
lods
jle
cmp
pop
outsl
cmp
add
es
rcll
mov
xchg
test
jno
jle
cmpsb
mov
sbb
jnp
xchg
bswap
mov
xchg
or
mov
lock
insb
or
lret
scas
daa
pop
xchg
push
mov
imul
pop
push
fisttpl
or
and
into
pop
mov
in
inc
mov
cmc
sbb
and
paddq
in
xor
imul
enter
enter
xchg
mov
out
mov
xor
daa
cs
and
ret
rorb
cmp
xor
out
pop
push
rcll
mov
pop
cmp
roll
outsb
mov
mov
pop
inc
mov
add
popa
lock
push
mov
ds
mov
add
sub
xchg
pusha
adc
cltd
enter
ss
stos
lret
and
pusha
mov
jne
pop
aas
pop
cs
not
lret
jnp
xor
pop
imul
mov
cmp
adc
out
xchg
mov
inc
rorb
push
jns
inc
inc
adc
jle
add
leave
loope
aas
ja
jno
sti
cmc
jbe
dec
jne
mov
jo
xor
xchg
cmp
adc
lret
imul
pop
ret
aam
xor
lds
sub
lock
and
mov
lods
or
ss
mov
add
popf
ljmp
lahf
sub
mov
cmp
add
insb
adc
je
imul
cmp
out
loopne
add
push
sub
das
push
enter
insb
and
mov
inc
pop
sbb
mov
lret
sbb
aad
movsb
and
leave
sbb
dec
sub
and
iret
push
mov
repnz
pop
jmp
sub
mov
inc
jmp
push
mov
dec
loope
lea
stos
push
scas
fwait
jo
shrb
mov
pop
mov
add
loop
lret
loopne
jnp
aad
mov
mov
aad
std
ja
or
jl
mov
js
out
pop
ljmp
jb
jg
push
leave
mov
pop
adc
push
adc
pusha
fbld
xchg
movsl
addb
sbb
mov
ffreep
xor
xor
jge
les
pushf
mov
hlt
mov
cltd
icebp
pop
xchg
push
aam
adc
dec
lods
mov
mov
pop
ss
fwait
div
scas
insb
adc
pop
or
push
mov
es
fstl
mov
mov
int
les
repz
test
pop
fldcw
dec
div
addb
push
push
icebp
cmpsb
mov
inc
mov
mov
add
test
movsb
dec
movsl
insb
push
iret
jmp
clc
pop
add
pop
mov
sti
push
add
test
lret
jns
pop
pop
mov
ret
icebp
push
add
popf
loope
or
mov
movsb
mov
add
jl
in
rcll
mov
xor
inc
add
js
orl
sarb
mov
add
dec
mov
pop
out
sub
dec
orl
or
lret
mov
es
mov
or
fistps
sub
inc
add
xchg
dec
sbb
addb
mov
lret
xor
push
jecxz
sahf
push
cmp
inc
lret
imul
jge
add
in
pusha
iret
jg
insb
xor
jmp
mov
mov
sti
movb
rcll
jns
mov
call
jp
mov
lahf
pusha
lret
sbb
rorb
aam
outsl
movsb
cmp
movsb
lds
sbbl
imul
loope
mov
into
movsl
lock
imul
sub
sbb
nop
mov
outsl
call
test
mov
xor
and
aas
std
push
sub
std
aam
lock
dec
rorl
iret
push
gs
ds
mov
cltd
int
orl
or
rorb
mov
ret
pusha
jno
add
paddq
lahf
ror
pop
cmp
sti
pop
cmp
stos
loope
mov
xchg
lods
cs
and
mov
aad
ss
shrb
xchg
push
aam
sub
pop
jo
jl
aad
icebp
cld
inc
jg
cld
mov
lahf
jge
push
int3
dec
and
pop
xor
lods
test
addr16
out
xchg
adc
ds
sbb
inc
sar
mov
bound
sub
push
fmul
roll
adc
nop
test
data16
std
xchg
mov
xchg
aaa
pop
cltd
lret
mov
icebp
pop
pop
inc
pop
out
enter
iret
mov
mov
inc
and
add
ficomps
ds
cs
xor
jecxz
mov
test
sub
and
or
adc
xor
push
mov
nop
cld
pop
mov
pop
push
mov
call
fwait
lds
fiaddl
mov
jne
andl
loop
fmulp
xor
lods
jae
cs
xor
test
aad
lret
or
in
mov
or
xchg
cwtl
std
mov
pop
pop
nop
negb
test
mov
pop
sbb
or
adc
pop
xchg
or
in
mov
add
lret
outsb
adc
int3
imul
xchg
mov
fsubr
adc
dec
push
cmc
mov
mov
shll
fmulp
shll
xor
mov
pop
xor
addb
in
push
cmp
inc
push
mov
add
test
xor
aad
outsl
pusha
cltd
sbb
and
mov
push
add
jb
out
pop
pop
mov
sub
adc
jp
cmp
or
icebp
xlat
inc
jecxz
test
adc
je
push
or
jl
bound
mov
or
pop
sbb
xchg
pop
movsl
dec
repnz
stc
pop
add
sahf
add
mov
pop
fucomi
popf
lret
sar
aaa
fs
cmp
in
lods
pusha
hlt
and
jp
lcall
cmp
sbb
vhsubps
pop
mov
ret
mov
fs
add
shlb
in
pop
add
rorl
pop
mov
aas
add
es
ss
aaa
mov
imul
mov
mov
data16
add
lds
sub
das
adc
and
out
fisubl
mov
test
pushf
mov
out
xchg
in
pop
dec
push
rcr
es
cs
sub
pop
inc
and
fsubrs
rcpps
xor
pop
movsb
ret
cmp
xchg
push
imul
push
or
jne
les
mov
xchg
and
fwait
mov
sbb
pop
pop
pop
loope
aas
xor
test
addr16
arpl
fists
loope
and
inc
add
test
fwait
hlt
cmpsl
mov
ret
mov
fisttpll
xlat
mov
sbb
lret
mov
popf
xlat
cmp
sbb
sub
add
push
sbb
mov
sbb
push
cmpsl
or
push
xlat
cmpsb
test
out
mov
addr16
dec
mov
pop
test
add
lock
popa
movsl
mov
lahf
insb
sahf
gs
pushf
push
add
add
mov
sub
and
xor
jno
xchg
or
inc
imul
fcoms
lcall
cmpsb
lods
stos
sbb
inc
repnz
aad
xchg
pop
adcb
lcall
imul
pop
es
add
adc
outsb
icebp
xchg
ds
cs
xor
aaa
mov
stos
int3
dec
pop
pop
aas
clc
pop
pop
lods
inc
push
loopne
addr16
or
pusha
cmp
nop
sbb
xchg
push
aad
jo
not
sahf
ljmp
mov
popa
aam
mov
sub
mov
xor
mov
sahf
cltd
fadd
ja
ds
add
pop
and
leave
movsb
sbb
mov
enter
mov
xor
jb
jns
iret
loop
and
add
setae
push
loope
mov
jecxz
stos
lret
add
xchg
pop
lret
loope
mov
pusha
xchg
xchg
cwtl
jmp
out
or
inc
dec
cmp
jae
das
add
pop
imul
add
lea
adc
cmpsl
inc
outsb
xor
in
pusha
xchg
icebp
push
and
test
stos
sub
pop
das
mov
aam
inc
mov
or
inc
into
je
lock
mov
cs
fwait
cld
test
rolb
adc
and
out
daa
xchg
add
or
sbb
pop
cmp
jp
dec
in
leave
aas
sbb
data16
jo
cmpsl
stc
int
in
stos
roll
mov
jb
mov
out
mov
push
or
out
dec
pushf
cmpsb
aad
cli
mov
cmp
sbb
aad
mov
xchg
sub
adc
mov
push
pop
shll
clc
cmc
mov
pop
cmc
fidivrl
dec
xchg
xor
mov
sbb
cmp
mov
push
jg
dec
push
mov
out
add
fs
test
pop
mov
aad
pushl
sbb
dec
mov
mov
mov
pop
arpl
xor
xchg
push
inc
std
pop
and
dec
nop
andb
pop
stos
add
or
jmp
mov
push
int
ret
loopne
mov
cmovs
jg
mov
int3
sub
mov
inc
inc
add
mov
mov
xor
clc
decl
leave
sub
dec
mov
pop
or
gs
jbe
ljmp
sub
out
loopne
pop
push
inc
in
es
jecxz
push
sub
sti
mull
loopne
sbb
add
adc
mov
sbbl
push
and
add
xor
xor
pop
and
push
cmp
fs
xchg
rclb
or
push
xchg
add
push
and
xlat
imul
lahf
scas
sub
cmpsl
lcall
xchg
mov
jo
orb
lds
push
mov
call
xchg
ja
dec
add
or
push
shlb
sub
shl
push
lods
mov
into
fistps
add
cmp
test
addr16
mov
mov
sub
pop
movsb
cmpsb
adc
movsl
pop
out
pusha
mov
fnsave
xlat
mov
jecxz
add
and
dec
aam
rcrb
loopne
cmp
xchg
jne
daa
loope
cwtl
sub
xor
pop
and
loop
test
push
mov
xchg
adc
mov
adc
pmuludq
call
mov
xor
rcll
adc
xchg
xchg
aas
lcall
or
fwait
mov
push
add
test
jno,pt
scas
mov
loopne
ljmp
sbb
repz
cltd
adc
out
cli
in
ficoms
in
test
jge
mov
mov
jo
nop
std
pushf
xor
imul
adc
sbb
out
push
ds
aam
or
data16
jbe
loop
pop
and
flds
mov
mov
sbb
pop
jae
push
jge
jb
aaa
aas
jl
dec
jbe
jns
jl
sahf
push
jecxz
pusha
mov
mov
cmpsb
add
stc
ja
push
in
adcb
adc
or
leave
push
mov
lods
jo
rcrb
clc
push
xchg
add
pop
jle
popl
push
dec
out
mov
mov
ficomps
sbb
testb
sahf
xchg
push
ds
xor
pop
adc
inc
pop
and
xlat
pop
pushf
xor
pushf
jmp
aam
jo
sarl
aas
aam
gs
das
in
mov
out
mov
fs
mov
push
jecxz
cmp
adc
roll
inc
pop
mov
sub
mov
inc
cmp
fisttps
add
or
test
mov
xchg
imul
add
pusha
aam
loope
cld
mov
js
cltd
aaa
add
dec
push
dec
xor
test
ss
icebp
inc
push
lahf
mov
ljmp
dec
fcomi
movsb
fcmovbe
leave
xchg
inc
xchg
mov
mov
dec
shrl
imul
aam
xorb
pop
popa
mov
pop
add
xchg
jl
adc
dec
sti
aad
push
jns
mov
jmp
mov
push
xlat
add
ljmp
addb
js
negb
jb
push
loope
shrb
scas
lods
pusha
xor
movsb
scas
lahf
cmp
and
imul
jns
stc
or
pop
dec
mov
shll
insb
cmpsb
sub
aaa
jl
enter
xchg
ja
rclb
push
insb
mov
test
inc
cltd
and
inc
insl
add
mov
and
xor
jo
fmuls
test
and
add
add
xchg
daa
lea
imul
mov
faddp
sti
fidivs
aaa
sbb
pop
jg
hlt
aaa
pop
add
inc
shlb
push
popa
data16
and
cmpsl
push
sbb
in
mov
mov
imul
jnp
mov
imul
in
dec
aam
stos
jne
jb
pop
and
outsl
test
mov
inc
inc
sbb
push
subl
out
mov
adc
popa
fs
xlat
sti
jnp
in
fldl2e
cmp
inc
xchg
lret
aad
pop
pop
mov
mov
and
sub
clc
mov
mov
in
xchg
fnstsw
xchg
pop
aas
push
aam
xor
pop
mov
and
out
cmp
mov
jo
sub
fadds
jne
ficomps
jecxz
push
loope
mov
xchg
cmp
add
aaa
mov
and
jns
test
pop
lods
sub
add
call
or
xchg
pop
xchg
push
fadds
mov
sub
jge
andl
fists
outsl
insb
inc
orb
cmp
test
or
cmp
xchg
or
xchg
jg
adc
fsubp
outsb
mov
stos
sub
xlat
out
mov
push
xor
aam
out
push
mov
inc
decl
cmp
lret
cmp
lods
jp
jecxz
aam
or
push
xchg
dec
pop
mov
adc
shrl
imul
pop
addr16
cmpsl
mov
mov
aam
inc
push
int
arpl
mov
adc
sub
sbb
fstpl
inc
adc
int
pop
push
jecxz
xchg
xor
mov
push
mov
inc
in
out
rcl
pusha
push
add
jo
sbb
dec
out
aam
fildll
sub
stc
mov
inc
add
cmp
mov
popa
mov
inc
inc
imul
cmp
mov
xlat
ljmp
scas
adcl
sub
xchg
sbb
inc
andb
pop
sbb
ja
movsb
jb
cmp
pop
mov
pusha
lea
cmpsb
push
fidivl
push
shl
aaa
scas
adc
dec
loop
push
cli
add
push
lahf
xor
ret
clc
gs
outsb
adc
stc
std
fucomip
pop
mov
movsb
or
js
lret
negl
xor
pusha
add
inc
mov
add
xchg
xchg
add
push
xor
mov
inc
mov
aad
mov
dec
lret
test
jo,pt
sub
movnti
test
pop
sbb
dec
js
aam
loopne
decl
jl
aad
jp
pop
inc
es
fsubrl
cltd
lcall
add
jb
aam
mov
aad
mov
cmc
xor
int
pusha
mov
dec
dec
aaa
ret
mov
jns
xor
push
or
lods
lods
shlb
sbb
repz
dec
mov
into
pop
push
push
fs
movsl
lea
xlat
out
out
or
call
movsb
sbb
add
mov
into
aad
repz
pop
rol
xchg
adc
out
faddp
sbb
adc
aad
imul
cmp
imul
xor
outsb
mov
fisttpll
pop
inc
out
pop
shll
mov
adc
or
in
add
add
outsb
lods
and
bound
data16
arpl
shll
iret
ljmp
and
dec
ljmp
mov
dec
add
pop
xor
mov
cmp
std
mov
shrb
rcl
xchg
enter
or
rorl
sbb
addr16
dec
pop
pop
pop
mov
mov
push
into
pop
sbb
lahf
sbbb
es
sub
test
mov
push
enter
mov
lcall
nop
rcl
add
push
xor
push
xor
clc
pusha
jg
xlat
rolb
cli
sbb
mov
jecxz
lret
inc
mov
fisttpll
in
fbld
out
addb
sbb
lock
lds
rep
xchg
push
or
aad
and
push
add
push
mov
dec
ds
dec
xchg
add
scas
pop
xlat
mov
adcb
imul
std
ja
add
adcl
sbb
ret
push
cmp
add
aam
int
arpl
in
test
aaa
in
hlt
and
testl
xor
sbb
decl
mov
jge
add
lods
out
rorb
add
jl
sbb
push
mov
adc
inc
loop
or
in
lds
mov
sub
inc
test
push
mov
roll
out
push
mov
dec
pop
aaa
scas
out
xchg
mov
push
push
int3
sti
inc
stos
jle
mov
adc
or
js
pushf
xchg
add
dec
xchg
enter
roll
fwait
jl
dec
rcl
out
lcall
mov
xchg
sub
out
testb
or
leave
dec
aam
inc
and
inc
fcmovbe
cmc
cmp
addl
aaa
xchg
loop
xchg
jmp
shrb
popf
mov
in
test
inc
jns
push
xlat
andb
in
push
sbb
addr16
xlat
jp
int
cmp
push
mov
cmpsb
in
rcrl
dec
ret
adc
pusha
mov
xchg
mov
outsb
mov
rorl
jnp
loopne
jecxz
mov
jmp
insl
add
jl
mov
cmp
out
icebp
hlt
aam
into
mov
cmp
popa
mov
out
mov
add
or
inc
call
mov
ss
or
adc
mov
xchg
fidivrl
and
pop
push
inc
cltd
jne
mov
sub
sub
inc
add
and
xchg
mov
pop
push
movsl
and
push
rclb
adc
xlat
push
cmp
xchg
lods
out
in
xchg
hlt
sub
test
pop
pop
sub
xor
or
jo
daa
and
lahf
sti
jmp
dec
out
lcall
xor
test
push
aad
push
aaa
scas
lahf
jb
mov
xlat
dec
or
pop
xchg
sbb
inc
lcall
dec
sub
aaa
bound
aad
addr16
mov
loope
aam
sub
fwait
push
sar
mov
push
xor
cmc
rorl
sub
push
out
aam
andb
movsb
fs
sub
aad
and
out
and
ds
mov
hlt
gs
fisubs
xchg
ja
pop
adc
or
movsb
adc
roll
add
fwait
dec
test
pop
repnz
add
jae
movsl
iret
xchg
aas
out
push
inc
sbb
and
mov
xchg
mov
scas
loop
sub
divb
fdivrs
aaa
mov
cli
sbb
add
lock
test
push
lahf
mov
xchg
test
pusha
ret
mov
loope
mov
stos
shrb
jne
jno
insb
mov
adc
mov
jno
pop
je
add
mov
ret
pusha
div
adc
sub
leave
stos
and
mov
test
xor
jp
imul
dec
test
push
loope
out
into
aas
loopne
add
sbb
xor
push
xchg
loopne
jg
iret
push
xchg
outsb
aad
jmp
stc
sub
sbb
mul
into
mov
fcomp
pop
add
jecxz
mov
fmuls
pop
imul
xor
loope
clc
int3
adc
or
in
jno
fwait
or
fsts
dec
push
movsl
cmp
mov
in
lahf
call
jae
push
dec
test
popa
dec
or
pop
xchg
sub
jge
jo
rclb
call
mov
decl
push
shr
stos
push
mov
xchg
xor
repnz
scas
xchg
jg
add
int
sub
adc
rorb
inc
clc
sub
mov
imul
icebp
xadd
jno
mov
bound
xchg
mov
es
cld
pusha
adc
and
fimull
cmp
loopne
std
rcll
loopne
aam
loope
cmp
pop
dec
imul
push
inc
cmp
adc
pusha
in
gs
xchg
inc
push
push
shl
and
ja
sub
push
cmp
sahf
pop
adc
insl
jae
mov
inc
cwtl
mov
dec
adc
aaa
iret
call
roll
in
cmp
and
fwait
inc
imul
cltd
jmp
popaw
loopne
call
add
mov
xor
imul
ja
sahf
xor
in
sahf
xchg
dec
test
mov
out
mov
inc
mov
push
mov
pop
clc
outsl
outsl
jo
leave
mov
lea
mov
lods
rolb
push
into
xchg
repnz
pop
adc
ficoms
mov
dec
gs
arpl
pop
inc
inc
mov
in
aad
pop
sarb
lods
icebp
jecxz
xor
xchg
add
fiaddl
insl
out
dec
jo
lcall
ja
dec
add
hlt
jp
out
sbb
pusha
pop
mov
js
aad
push
sub
scas
jl
pusha
test
arpl
aam
adc
and
mov
repz
inc
mov
insl
dec
add
daa
mov
xor
xchg
fsubr
sbb
clc
aad
aas
sahf
sbb
pop
std
dec
sbb
lods
fisubrl
adcb
int
mov
cld
xor
inc
pusha
cmc
insl
stos
and
in
shrb
pusha
sub
jmp
mov
push
loopne
fstps
add
add
adc
mov
dec
gs
add
xor
mov
xchg
stos
rep
mov
push
lock
xlat
repnz
mov
and
inc
push
loope
repnz
add
dec
sbb
jbe
mov
sub
dec
loopne
xlat
pop
lock
cmc
sub
out
pop
sbb
mov
push
loopne
push
jo
add
adc
cli
jne
lret
testl
cmpsb
clc
mov
or
adc
mov
jno
subl
xlat
add
cmc
cmp
scas
mov
xchg
mov
sarb
aam
in
pushf
xor
mov
jnp
and
xlat
xchg
xchg
and
push
sbb
lret
or
pusha
repz
jb
in
into
add
decl
pop
inc
daa
push
icebp
cmpps
add
jo
cmc
jge
flds
out
jnp
adc
lret
rcrl
fcoms
pop
cmp
mov
in
jo
pop
outsl
and
enter
ret
inc
fimuls
mov
fcoms
ds
sbb
mov
jo
cmp
and
and
gs
aaa
repz
adcb
cmc
inc
sub
lcall
sbb
jmp
repz
lret
inc
add
sahf
mov
jl
pop
jmp
xchg
cmp
push
rorl
push
jecxz
and
xchg
stos
iret
pop
inc
mov
ret
jnp
adc
dec
movq
sbb
mov
mov
mov
pop
aam
ljmp
xchg
test
xor
mov
out
dec
adc
out
test
inc
push
pop
lods
xchg
push
add
jecxz
mov
or
mov
iret
dec
adc
mov
or
xor
aam
pop
daa
sbb
dec
imul
sbbl
sub
lods
cmp
mov
mov
lahf
stos
pop
jb
push
push
mov
pushf
dec
xchg
jno
mov
lods
icebp
mov
inc
aas
push
mov
je
and
push
ret
daa
pop
lock
adc
cli
out
pop
fs
daa
ret
jne
push
inc
in
stos
xchg
pushf
mov
mov
rorb
sub
mov
add
or
call
xchg
popl
lock
push
and
cmc
test
call
jbe
add
aad
ljmp
inc
sbb
mov
aad
push
or
dec
or
cwtl
mov
aad
in
mov
cmp
jae
xchg
sbb
and
cltd
neg
push
cmp
mov
cmp
fdivs
mov
mov
xchg
jg
in
jle
mov
test
push
mov
jno
push
adc
push
repnz
mov
or
loopne
mov
fsubs
jne
sbb
push
add
push
test
into
sub
sbb
cli
aad
mov
mov
pusha
popf
arpl
jg
mov
mov
cmp
jmp
jl
in
pop
aam
jp
xor
mov
outsb
jecxz
xor
aam
insl
jg
xchg
add
stc
loope
aam
inc
sti
popf
pop
xor
cmp
pop
inc
stc
popa
call
push
roll
xchg
mov
lret
and
stos
aaa
sub
std
adc
or
addr16
mov
fildl
mov
cmp
sbb
inc
inc
mov
bound
mov
mov
loope
and
pusha
and
inc
xor
int
add
mov
pop
ja
out
xor
inc
push
or
sbb
mov
pop
mov
pop
stos
adc
loopne
aad
aaa
mov
out
lock
fsub
inc
jmp
popa
jge
lods
test
flds
push
cmpsb
cli
inc
dec
ret
adc
ds
mov
adc
sbb
mov
sub
pop
leave
fldenv
lods
dec
jmp
arpl
pusha
lcall
js
iret
aam
iret
std
inc
sbb
xchg
hlt
xchg
arpl
in
push
add
cmp
lea
sbb
push
loop
mov
aad
aam
scas
popa
mov
mov
clc
out
inc
add
out
test
mov
mov
adc
cwtl
das
or
stos
insb
mov
mov
or
shll
push
test
cli
pop
sub
lea
lods
add
dec
leave
mov
push
out
ret
fdivl
call
adc
mov
sbb
mov
cmp
xchg
ja
hlt
or
push
pop
mov
jle
and
stos
jmp
jp
insb
into
adc
and
add
in
mov
jp
adc
adc
shl
jo
and
shl
in
mov
push
jno
adc
ret
insl
insl
jl
pop
cmp
dec
push
shrl
jmp
inc
aad
xor
inc
inc
sarl
shl
ljmp
scas
lcall
pop
xorb
pusha
adc
mov
loop
aam
iret
xchg
xchg
inc
jo
jae
sbb
sahf
jno
mov
test
dec
cmc
mov
xchg
jge
or
pushw
les
ljmp
ficoml
test
mov
jle
roll
hlt
pop
mov
adcl
mov
adc
pop
xor
adc
pop
inc
mov
les
andl
add
or
outsb
and
cwtl
cmc
scas
cld
pop
ss
xchg
push
je
outsb
xchg
mov
sub
lock
add
jle
in
pop
xchg
repz
loopne
mov
cmp
mov
shrb
push
jns
sbb
mov
mov
inc
shl
jmp
push
sarl
ud2
pusha
or
push
add
sub
popa
xchg
push
jge
pop
lods
pcmpgtw
lea
xor
and
mov
jle
or
mov
call
pushf
sub
add
shlb
insb
imul
xchg
leave
push
cwtl
scas
and
add
hlt
push
pop
pop
sub
or
lods
add
push
adc
mov
and
or
mov
les
mov
loope
dec
jns
xchg
push
add
cli
aad
outsb
xor
daa
adc
adc
or
mov
add
cmp
add
nop
cmpsl
shlb
mov
pop
adc
gs
shr
aad
and
or
or
add
addl
and
inc
mov
enter
jbe
push
sahf
cltd
or
xchg
or
sbb
push
and
cs
out
jge
out
lock
inc
add
pop
rorb
scas
inc
movsl
pop
xlat
mov
movsl
out
inc
ror
mov
sbb
pop
cmovs
imul
loop
xlat
sbb
add
stos
jp
daa
xor
push
add
js
pusha
cmp
mov
cmp
int
loope
push
stos
xor
sbbl
and
push
jecxz
lea
mov
insl
add
mov
cs
ret
cltd
fwait
inc
mov
scas
or
or
add
or
mov
repz
or
in
scas
xchg
inc
xchg
mov
insb
adc
jge
test
out
xlat
sbb
aad
je
aad
jno
inc
or
lret
out
popa
vpavgb
mov
out
testl
pop
lea
shrb
mov
clc
push
mov
sbb
rolb
push
aas
into
into
mov
xchg
hlt
in
fdivl
nop
xlat
cld
inc
sahf
out
or
ret
orb
not
mov
or
es
aas
push
out
das
dec
movsl
mov
repnz
mov
clc
in
jo
pop
or
rorb
movsl
and
negb
out
les
fistpll
addr16
sahf
fs
jmp
gs
call
push
push
mov
mov
xchg
or
mov
mov
in
cmp
insl
push
leave
xchg
incl
das
or
fs
clc
mov
in
mov
pop
cmp
cmp
or
mov
and
outsb
dec
clc
test
push
test
jno
mov
push
mov
xabort
inc
sbb
imulb
push
adc
push
lret
cmpsl
push
inc
scas
adcl
pop
ds
shll
pop
add
sbb
dec
and
sbb
xor
sub
rcll
cmc
inc
repz
adc
pusha
pusha
dec
call
outsl
push
and
sbb
push
push
jp
cmp
int
loopne
push
scas
pop
aam
adc
sbb
sub
xchg
dec
jnp
sahf
xchg
sub
aam
mov
jnp
sub
push
mov
sete
aam
int
clc
cmp
pop
int
or
cmp
test
fwait
sbb
cwtl
inc
dec
or
xchg
add
inc
xor
cmc
and
ds
sub
xor
cwtl
or
fsubl
je
pop
sbbl
xchg
repz
fsubrs
imul
out
pusha
jecxz
jmp
loope
inc
pop
repz
mov
pop
cmp
imul
sbb
xchg
hlt
aam
jge
cmp
lret
push
loop
push
or
jnp
pusha
xchg
add
addb
pushf
dec
mov
push
pop
mov
dec
inc
sbb
add
lret
inc
mov
adc
xlat
mov
jmp
ret
jo
inc
add
faddp
cmc
xor
and
mov
aaa
arpl
or
xchg
mov
outsl
bound
pop
inc
mov
add
add
ret
fsubrs
xor
or
pop
mov
data16
adc
mov
fidivrs
xchg
mov
jmp
push
mov
cwtl
push
sbb
xor
shlb
pop
mov
adc
xchg
xchg
inc
push
dec
dec
shr
sbbb
xor
xor
mov
jecxz
test
ljmp
jl
jmp
cld
int3
imul
call
popa
or
adc
clc
aam
dec
divb
imull
and
filds
dec
loope
push
push
aas
mov
scas
mov
sub
jbe
xchg
or
mov
and
cwtl
push
pushf
fimull
xchg
push
and
ficomps
mov
lea
into
stc
xor
mov
filds
mov
adc
sub
cmp
or
jg
pop
arpl
jo
mov
js
and
pop
js
scas
pop
or
xchg
mov
sbb
ja
jnp
inc
mov
out
out
cmp
sbb
sarb
fwait
mov
pop
jne
sub
sbb
lahf
push
mov
xor
bound
add
mov
xchg
pop
dec
imul
mov
cltd
pop
sti
inc
in
cmp
enter
cmp
add
mov
and
int
iret
adc
data16
rorl
mov
je
mov
pop
insl
lcall
cwtl
jbe
iret
dec
dec
jecxz
mov
or
inc
test
sahf
adc
sub
stc
out
jno
fdivrs
sub
movl
mov
adc
pop
mov
inc
idivl
or
scas
ljmp
mov
mov
jg
aam
jle
test
jno
pop
ss
ror
ret
push
cli
add
dec
add
ficompl
das
and
inc
scas
xchg
movsl
test
lcall
orl
add
jmp
mov
shlb
push
aam
dec
loopne
and
adc
xor
sbb
cmpsb
sahf
sbb
adc
sub
fwait
test
push
jbe
lahf
and
js
std
cmp
insl
xchg
mov
jl
test
sahf
leave
pusha
addr16
aad
ljmp
pop
push
sub
sar
mov
push
xchg
shll
add
mov
repz
je
popf
je
add
jo
int3
mov
mov
add
and
aad
loop
push
dec
and
scas
mov
popf
push
outsb
test
jae
inc
inc
dec
out
add
filds
mov
mov
mov
pop
mov
sub
adcb
mov
adc
or
scas
jmp
mov
xchg
mov
cwtl
fimull
mov
lret
inc
dec
add
js
adcb
mov
mov
loopne
xchg
aam
xor
addb
ret
xchg
push
pop
lcall
add
dec
push
xor
add
or
xchg
pop
fmulp
movsl
jbe
fsubl
cmpsb
pusha
arpl
inc
push
cmpsl
inc
sbb
cmp
dec
adc
dec
sahf
insb
pop
or
out
cmp
rorl
adc
pushf
mov
movzbl
push
mov
xchg
int
jle
je
cmc
push
xchg
scas
shlb
push
push
jge
cmpb
sar
out
adc
cmpl
in
aam
jle
mov
lock
mov
not
out
in
add
imul
xor
pop
sbb
jp
aaa
lahf
mov
jle
and
push
mov
loop
sbb
popf
adc
cli
add
xchg
rolb
mov
mov
fiaddl
cmovg
ret
adc
repz
aam
lret
in
fwait
popf
lock
out
loope
aad
mov
ja
cld
sub
push
int3
aam
xchg
or
pop
loopne
insb
jl
dec
sbb
push
std
jg
lods
cltd
mov
scas
and
mov
adc
and
aas
call
aam
xchg
mov
dec
xchg
pop
imul
pop
ss
aam
mov
ret
cmp
scas
in
and
add
into
add
cmpsb
jne
out
mov
add
or
sbb
aad
out
or
gs
mov
loopne
add
into
inc
iret
movq
xor
fildll
inc
dec
aam
imul
bound
mov
push
in
popf
leave
push
push
cmp
cwtl
cmpsl
sub
cmpsb
aad
xor
cli
arpl
bound
add
leave
jnp
or
cld
out
sbb
jecxz
pop
shr
popf
cmp
and
cmpsl
aad
fists
test
mov
aas
mov
inc
mov
test
repz
aam
mov
pusha
popa
push
jnp
sub
cmpsl
loope
push
out
insl
sub
fmuls
mov
sbb
push
push
test
xchg
in
inc
cli
xchg
add
cmc
sarl
mov
xchg
add
fs
roll
xor
loopne
into
shlb
cmc
jle
mov
rclb
cmp
test
dec
jmp
push
fistpll
push
pop
int
sub
mov
loop
mov
mov
dec
rcll
pusha
cld
sti
rolb
push
jns
nop
pop
and
lock
stc
into
push
pop
aas
mov
outsl
gs
push
jmp
lods
push
xor
jne
add
push
sub
negb
cmp
shll
xchg
adcb
inc
outsb
or
sbb
dec
iret
or
aam
lods
jns
cs
add
inc
call
mov
mov
pusha
or
lahf
sahf
js
dec
mov
sti
call
add
outsl
xor
jp
insl
pop
xchg
sahf
loopne
call
sbb
test
loope
jns
movsb
sub
jbe
sub
sbb
ret
sub
adc
pop
push
repnz
daa
outsb
and
aad
sbb
mov
add
fmuls
mov
adc
pusha
cmp
fistps
and
enter
ret
mov
mov
inc
pushf
pop
push
push
aam
jmp
sub
pop
rcrb
xor
test
jo
sbb
pusha
test
ret
out
out
xor
pop
xchg
inc
push
or
dec
in
mov
push
xchg
mov
hlt
mov
push
mov
dec
inc
mov
pop
ss
pop
and
in
pop
pop
push
pop
add
aas
pop
movsb
mov
in
fstpl
mov
mov
dec
or
mov
cmp
xlat
sahf
ljmp
test
add
sbb
lock
cmc
pop
iret
and
pusha
ret
mov
test
clc
out
mov
mov
daa
rcrb
push
jo
mov
fs
add
jg
mov
pop
jge
arpl
cmp
test
mov
in
bound
outsl
loop
inc
mov
and
mov
dec
jp
stc
lds
cwtl
mov
mov
push
sbbl
enter
jl
adc
sti
lahf
xor
stos
push
fisubl
je
lret
daa
dec
fstpl
inc
aas
repz
add
adc
push
jne
xorl
ljmp
jno,pn
test
aam
pop
test
cltd
and
and
mov
xor
dec
cmp
mov
or
push
ret
inc
cmp
pop
mov
hlt
mov
test
cltd
mov
sbb
inc
xlat
xchg
or
xchg
jle
leave
inc
lcall
mov
sbb
mov
std
sbb
xor
adcl
aaa
xchg
inc
mov
cmp
sub
aaa
popa
sbb
jae
dec
jb
pmovmskb
daa
pop
addb
push
lcall
push
xor
add
addr16
bound
xchg
aaa
mov
cmp
xchg
add
add
sahf
push
int
fsubs
scas
and
mov
outsl
rcr
pusha
dec
imul
jge
and
pop
pop
pop
xor
xchg
mov
mov
adc
cmp
outsb
mov
pop
xor
cmp
ret
faddl
push
push
sbb
test
ret
in
lods
add
cmp
xchg
mov
pop
adc
int
mov
cvtpi2ps
je
insl
aam
hlt
stc
mov
repz
retw
fcom
push
mov
mov
push
jbe
lds
loopne
loopne
jno
xor
jge
mov
xchg
xor
testb
pusha
xor
add
hlt
gs
pop
iret
pop
mov
jl
not
mov
bound
mov
cs
repz
mov
push
xor
dec
fadds
out
add
nop
xchg
jmp
das
jnp
stc
xchg
movsl
gs
jge
ja
lret
fwait
mov
xchg
sbb
cmp
push
cld
mov
cltd
jbe
jne
clts
imul
hlt
insb
and
movsb
je
jp
jle
nop
cmpsl
add
sub
xlat
test
imul
cmovns
push
mov
xor
xor
add
shll
or
out
mov
adcb
pop
pusha
ja
inc
daa
dec
into
add
add
addl
outsl
insl
fidivl
arpl
and
lds
push
sbb
xor
adc
lahf
add
sbbb
outsl
sub
jb
es
test
test
xor
mov
ret
and
mov
lods
sti
sub
stos
in
inc
xchg
jmp
scas
pop
xchg
sub
mov
cltd
adc
mov
add
pop
jg
adc
rol
stos
cmpsl
movsb
add
jno
js
or
jg
pop
push
orl
add
cmovno
movsb
adc
cmp
fisubrs
ret
pop
test
js
mov
push
jecxz
push
add
jge
int
pop
sbb
test
xchg
ret
and
sbb
flds
add
pushl
ret
and
aas
inc
js
sarb
cmpsb
push
mov
nop
mov
inc
ds
cs
pusha
adc
xchg
xchg
sbb
fildll
stos
inc
lret
nop
js
mov
aam
cltd
mov
mov
mov
and
lock
sti
ja
cli
aam
pop
pop
aam
cmc
fstpt
lcall
fisttpl
jg
xlat
add
lock
pop
in
pop
mov
gs
sarb
das
push
sti
ret
pop
out
fsubrs
cmp
jbe
outsb
leave
hlt
dec
cmp
pop
add
push
fiadds
pusha
sbb
inc
imul
push
and
scas
mov
inc
push
pusha
xchg
mov
mov
ret
sbb
cmp
mov
push
movsb
lret
sti
int
ja
jnp
cmp
adc
xor
mov
push
mov
les
data16
adc
add
fcomi
rorb
es
dec
pop
xchg
bound
xchg
outsb
iret
lcall
lods
lods
xchg
stos
es
add
xchg
js
scas
stos
cmpsl
adc
mov
pop
mov
mov
mov
and
mov
cmc
test
pusha
ja
xor
cmp
jnp
lahf
ret
push
add
mov
fstl
insb
or
mov
xor
popa
in
int
xlat
mov
testl
or
pop
shrl
enter
xlat
jb
sub
dec
adc
mov
in
jge
scas
and
xor
rorl
adc
loopne
push
or
stos
add
dec
loopne
jg
adc
xchg
movsl
xchg
sbb
dec
xchg
in
test
xchg
xchg
xchg
lret
shl
loopne
cmc
lods
aam
roll
aaa
xor
int
sarb
adc
repnz
hlt
mov
ret
xor
mov
fistpll
ljmp
or
jno
daa
int3
adc
cli
add
push
cmp
pop
mov
or
mov
outsl
adc
les
xchg
jge
icebp
test
ret
mov
mov
test
je
pop
sub
lret
push
divl
iret
inc
pop
jge
in
push
dec
pop
enter
dec
scas
aam
jo
adc
arpl
mov
pop
push
and
push
sbb
add
in
pop
test
cmp
xchg
xchg
push
pop
or
pop
out
xor
dec
sub
pop
in
lret
mov
mov
cmp
test
loopne
cmpsb
ljmp
push
dec
mov
cmpsl
mov
clc
pushf
hlt
adc
xchg
fldcw
sarb
push
xchg
and
push
dec
jne
or
xor
push
cmc
int
imul
add
jle
stc
pop
fsts
pfmul
ret
pop
arpl
mov
mov
inc
notb
sbb
and
out
and
pop
std
aad
mov
xchg
in
pop
insb
push
sbb
add
cld
inc
pop
cmp
or
mov
cwtl
pusha
lds
dec
aas
mov
rclb
in
xchg
fwait
and
jg
or
inc
popa
cmpsl
mov
or
sbb
pop
ds
mov
mov
out
lock
mov
pop
push
cmp
xlat
dec
enter
ss
cmpl
movb
push
cld
dec
fwait
pop
mov
mov
adc
sti
ret
test
std
lcall
lret
aad
test
popa
loope
push
std
inc
dec
gs
push
push
lahf
xor
lret
cld
or
cmp
mov
insl
or
adc
add
addr16
jb
sti
mov
stc
insb
call
ror
and
jle
pusha
xor
cmp
inc
dec
bound
je
xchg
jne
ljmp
rorl
pop
and
movsl
in
repnz
pop
add
xchg
mov
lods
inc
xchg
dec
or
nop
and
mov
fcmove
adc
ja
xor
dec
inc
les
pushw
ret
cmp
add
xchg
pop
cmp
inc
fcmovnu
ret
cmp
and
mov
add
inc
sub
das
pushf
sub
fwait
cmp
xlat
jb
xchg
xor
or
adc
add
jmp
and
sarl
xor
mov
push
xchg
xchg
pusha
push
test
inc
jo
dec
lds
dec
addr16
in
cmpsl
add
in
mov
or
sbb
mulb
cmp
int3
inc
mov
fistps
lds
cmc
lds
pop
push
cmpsl
enter
arpl
sbb
loopne
and
xchg
cmp
xchg
dec
mov
inc
jge
mov
lods
push
push
push
pop
sbb
or
xor
dec
adc
in
fstpt
aad
insl
in
call
mov
sub
xchg
cmp
popf
jl
inc
adc
repnz
popa
mov
in
jo
adc
sbb
mov
sti
daa
push
inc
pop
pop
lock
xlat
rcrl
jae
ficomps
nop
mov
iret
test
sbb
loop
pop
lcall
sub
xchg
mov
mov
jne
sub
mov
jp
jne
mov
loopne
out
bound
out
mov
stc
popa
adc
mov
lahf
in
test
fnstenv
sub
and
test
jge
insb
mov
add
pushf
sub
adc
or
adc
adc
mov
push
jae
lock
sahf
repnz
aam
xor
jmp
mov
pop
cmp
sahf
stc
cmp
adc
fidivrs
mov
mov
push
mov
sbb
test
pop
xchg
xchg
aaa
mov
push
push
out
in
not
jp
lret
outsb
data16
popa
dec
add
jmp
incl
add
aad
xor
repnz
xchg
sub
xchg
popa
sbb
xor
fisttpll
in
fisubrs
in
push
mulb
xchg
push
adc
push
outsl
adc
mov
add
jl
out
out
inc
cmp
pop
mov
cmp
aam
push
pop
adc
dec
sbb
lds
inc
jecxz
ret
ljmp
and
jae
pop
insl
mov
dec
popa
fldenv
les
inc
pop
xchg
inc
adc
and
cld
fcmovne
sbbb
jbe
lea
insl
cmp
aam
std
call
mov
cmpsl
add
inc
fisubrs
aad
lret
test
dec
lret
shll
lcall
push
lahf
das
jge
add
jne
imul
fimull
outsb
clc
mov
lret
xchg
adc
aas
pop
add
add
stos
addb
std
loop
adc
pop
jnp
cmp
pop
jg
shr
mov
sbb
loopne
jl
push
shll
xchg
inc
and
iret
mov
mov
xchg
insl
or
aam
pushf
pop
dec
inc
mov
mov
pop
pusha
outsl
push
imul
adc
lret
aas
mov
ljmp
jle
mov
out
outsb
cmp
inc
sub
or
dec
push
push
adc
stos
call
jns
inc
scas
xchg
shlb
jb
jb
pop
movsb
mov
repz
xchg
mov
cli
xor
mov
pop
insb
mov
fistpll
mov
add
xorb
or
and
pop
inc
icebp
aam
jnp
jo
adc
mov
scas
mov
daa
cltd
xor
pop
pop
or
mov
sbb
and
jno
pop
imul
xchg
xchg
mov
insb
int3
hlt
jnp
mov
add
ret
pop
xchg
sbb
xchg
push
lods
pop
mov
jne
jp
sbb
sbb
jne
pop
fsubrs
cmpsb
fsubs
arpl
pop
mov
in
add
lret
repnz
adc
dec
pop
ss
adc
out
push
lods
xchg
cmp
mov
outsb
out
aam
inc
adc
fcomp
subb
mov
push
jb
das
test
sbb
push
adc
adc
iret
xchg
mov
ja
or
lods
push
push
adc
push
lret
push
mov
dec
and
lods
add
jne
mov
xchg
adc
insb
add
test
dec
arpl
lods
sbb
push
dec
sub
push
cmpsl
adc
xor
sbb
sahf
sbb
mov
xchg
lcall
in
ljmp
mov
add
ds
mov
pop
test
add
lahf
frstor
leave
push
push
push
cmp
jae
outsb
sti
aam
pushf
inc
in
iret
adc
pusha
cmpsl
sbb
les
rcr
loopne
ja
mov
sbb
mov
dec
and
cmpsl
and
xor
xchg
cmpsl
into
push
int
call
call
push
std
sbb
sbb
or
mov
into
push
add
rcll
mov
mov
add
ja
sbbb
pop
dec
jl
fcompl
add
imul
pop
hlt
or
test
stc
filds
iret
loopne
ficomps
mov
cmp
and
scas
sbb
sub
cwtl
loope
imul
outsl
pop
pusha
imul
or
mov
rcl
add
xor
sbb
push
pop
test
cmp
mov
fildll
lret
push
jbe
mov
xchg
movsl
mov
dec
hlt
rcll
into
pusha
lret
iret
push
test
aam
popf
sub
xchg
imulb
adc
cmp
jo
ret
push
mov
push
mov
cmpsl
mov
sub
movsb
cmc
xor
jg
lret
sahf
xorb
xchg
xlat
jb
rcl
xor
test
mov
push
fisttps
mov
adc
inc
adc
incl
add
bound
xor
sbb
mov
sbbb
jle
adcb
pop
cmp
shll
sahf
cmp
mov
aad
sbb
jle
sahf
mov
fildll
and
add
mov
outsb
or
push
push
or
lcall
cs
aad
aas
jns
mov
cli
mov
movsl
push
clc
int
sub
out
jnp
js
pop
mov
in
and
pusha
mov
roll
sbb
test
mov
aam
push
push
outsl
or
jbe
clc
popl
mov
andl
sub
fnstsw
add
lcall
std
dec
dec
in
inc
adc
mov
adc
sbb
push
in
mov
int3
xor
int
adc
jp
mov
push
sbb
dec
mov
dec
adc
xor
sub
xor
pop
sbb
in
mov
and
push
int
xchg
sub
push
and
icebp
push
dec
mulb
mov
fildll
jmp
inc
insb
shlb
pusha
fwait
xlat
sbb
xlat
sbb
addl
inc
xorl
xchg
mov
cld
test
adc
dec
lret
aam
enter
ja
adc
pop
cmp
push
pop
das
and
xlat
das
insb
xchg
xchg
daa
je
bound
gs
jg
les
ficomps
mov
xchg
jne
pop
fst
mov
cli
testl
mov
lcall
mov
mov
pusha
xchg
and
and
xchg
xchg
mov
adc
add
or
sarl
cmp
push
mov
fbstp
adc
ret
add
cmp
xor
pusha
jmp
mov
repnz
sarb
mov
mov
sahf
or
push
mov
mov
cmp
bound
imulb
mov
test
sub
push
aad
dec
inc
mov
sbb
mov
scas
inc
inc
xchg
lds
mov
ret
adc
mov
loopne
sbb
add
lock
mov
xor
imul
imul
push
aad
sub
and
pop
mov
inc
mov
rcrl
jge
mov
mov
movb
push
aad
push
call
jb
flds
lock
inc
push
cmpsl
loop
mov
ret
xchg
add
rep
mov
sub
pop
leave
daa
lods
pusha
lods
add
aaa
stos
jb
cmp
and
dec
cmp
sub
imul
mov
mov
add
sar
jp
mov
fwait
insb
fidivs
and
aad
cmc
idivb
xchg
test
mov
adc
inc
cmp
hlt
mov
pop
lret
ret
arpl
sbb
adc
in
pushw
mov
xchg
dec
sahf
pushf
lret
mov
pop
and
out
repz
rolb
pop
test
push
pusha
outsl
into
ret
addr16
insl
hlt
sub
out
out
es
push
test
loopne
xor
adc
mov
mov
fwait
jo
ds
jmp
or
test
mov
mov
add
pop
into
push
jecxz
gs
xchg
inc
dec
adc
jnp
aad
sar
jp
cld
push
xchg
mov
pop
sahf
jl
pop
mov
dec
inc
cmp
negl
cmpb
sbb
notl
add
fldcw
outsb
mov
mov
rclb
sub
adc
test
enter
rol
adc
jnp
cmp
cli
fs
aam
aaa
adc
movsl
out
stos
mov
push
cli
push
adc
outsl
push
add
jecxz
xor
add
ss
decb
pop
xchg
pop
cmc
add
sti
std
mov
ljmp
pop
cwtl
and
lea
xor
inc
mov
pop
sub
xchg
loop
mov
ss
pushf
leave
mov
jbe
subb
in
dec
mov
mov
mov
mov
divb
xor
shrl
push
sbb
fnsave
in
lcall
mov
mov
sub
outsl
orb
aad
shr
mov
mov
fwait
mov
dec
mov
pop
jmp
add
adc
add
xchg
lds
cs
hlt
xchg
stos
mov
sbb
into
ret
sahf
scas
push
adc
push
add
cmp
pop
push
insl
fcmovnu
inc
scas
call
adc
pop
in
mov
and
mov
sub
icebp
xchg
aad
aaa
mov
mov
xchg
jp
mov
inc
xchg
aad
nop
into
in
mov
cld
or
mov
adc
call
xchg
sub
stc
outsl
add
pusha
fs
mov
fwait
or
fnstsw
out
push
test
ret
push
les
fcompl
cmp
xor
xchg
cmpsb
imul
inc
out
adc
mov
int
pop
push
fld
iret
mov
xor
loopne
shlb
mov
das
fwait
scas
inc
stc
into
add
mov
add
neg
mov
ja
icebp
mov
and
pop
add
test
pop
arpl
push
icebp
aad
cmc
loopne
daa
lock
mov
adc
inc
xchg
es
xchg
sub
add
cmp
inc
outsl
sarb
fldt
pusha
xchg
mov
jb
add
add
and
add
idivl
and
je
icebp
xchg
sahf
add
inc
add
lock
aam
stos
or
xorl
lock
jne
and
gs
cld
xor
mov
and
mov
fsubs
addr16
jecxz
aam
and
mov
fs
cmpsb
adc
jns
aam
lcall
out
mov
pop
adc
add
lds
lret
lcall
int3
repz
enter
repz
add
gs
xlat
jg
inc
and
jl
lea
je
jne
addr16
jo
mov
inc
jns
jl
xor
jo
inc
arpl
adc
es
mov
fdivrs
aaa
out
adc
mov
add
pop
clc
or
pop
ss
sbb
mov
pop
data16
fs
push
icebp
lcall
push
mov
dec
sub
mov
dec
into
iret
mov
jl
es
xchg
or
movsb
popf
push
add
dec
mov
pusha
xor
sub
inc
push
sbb
sub
aad
adc
jge
mov
jl
shll
fbstp
fstl
repnz
ret
mov
aad
sbb
mov
ss
mov
push
std
mov
fwait
mov
fwait
iret
or
enter
rorb
out
pop
or
pop
cmp
fldcw
scas
cmp
mov
ss
xor
mov
jp
bound
jge
sub
adc
mov
jbe
jecxz
hlt
cs
arpl
pop
pop
ljmp
xor
xor
pushf
mov
repnz
icebp
or
mov
mov
and
jno
and
adc
dec
idiv
lret
mov
je
out
and
pop
mov
and
jmp
shll
jne
shll
pop
clc
int3
les
and
es
mov
push
mov
push
ss
les
dec
and
jbe
sub
aad
outsl
mov
stc
add
mov
add
lret
xchg
and
add
addr16
pop
jle
shr
mov
mov
xchg
ret
jno
pop
lret
cmp
in
and
loope
or
mov
into
push
jne
dec
sbb
dec
add
xchg
push
dec
gs
outsl
inc
mov
fmulp
loope
int3
mov
and
movsl
adc
add
dec
push
cld
lds
pop
inc
sarb
aad
out
adc
aam
int3
repz
inc
jle
inc
aad
subl
mov
test
adc
fwait
rcll
aam
inc
mov
test
lds
jae
imul
or
cmp
mov
mov
inc
in
les
hlt
std
sarb
xchg
add
xchg
mov
ja
and
int3
in
xor
push
sahf
movsl
aam
call
pop
push
lret
xor
pop
pop
and
lcall
inc
enter
lret
adc
loope
lods
or
cmp
inc
mov
mov
push
in
popa
lahf
pop
sbb
int3
pop
fstl
pop
rcrl
adc
stc
mov
js
sahf
rorl
ljmp
mov
cmpsb
push
add
test
push
dec
repz
push
mov
or
push
jle
push
cmp
lea
push
out
lds
xchg
out
sub
lock
push
scas
dec
jl
cli
jp
popa
das
and
repz
fnstcw
int
add
cld
hlt
test
dec
adc
rorl
test
cmp
or
mov
in
lds
sti
mov
imul
mov
sub
mov
mov
xlat
loope
xchg
and
jg
inc
jno
fistl
adc
sub
mov
mov
lods
mov
mov
add
jp
push
in
mov
mov
and
jl
xor
es
sbb
jmp
pop
push
or
push
mov
mov
ror
idivb
decl
lcall
xorps
jb
mov
mov
pop
les
cwtl
cltd
fwait
addl
mov
push
cmp
lods
mov
pop
cmp
jge
outsb
scas
sbb
sub
sbbl
dec
out
pop
add
mov
loop
ret
cmp
pusha
cmp
fs
rcl
pushf
stc
lcall
jge
aam
ja
dec
es
adc
aad
pop
dec
pop
insb
inc
pop
xchg
dec
ds
sub
enter
xchg
sbb
mov
loope
dec
xlat
icebp
ret
dec
inc
es
daa
imul
bound
jp
pop
add
pusha
mov
mov
sarb
shlb
aas
sbb
fldlg2
aam
and
negl
mov
add
dec
cwtl
aad
xlat
mov
or
push
mov
mov
sarb
and
stos
jnp
xchg
sub
xor
jne
add
movsl
fcomps
pusha
outsl
ret
add
dec
add
inc
ret
adc
push
add
cmpsb
negl
testl
daa
sbb
mov
mov
add
mov
fsub
pop
ja
push
and
lods
sbb
fildll
push
and
repnz
and
out
pop
push
inc
fsubl
mov
push
cmp
movsl
pop
adc
adc
push
and
or
mov
xchg
xchg
jbe
adc
pop
imul
push
pop
mov
lods
pushf
mov
inc
and
xchg
sbb
and
add
mov
dec
inc
dec
add
iret
sub
cmovp
js
pusha
fnstsw
jge
fldenv
sub
mov
jecxz
jle
imul
add
shll
jge
mov
jo
cmp
mov
out
and
push
popl
insl
hlt
sub
stc
mov
jp
push
sarb
dec
jp
xor
inc
jae
pop
or
mov
cmp
sbb
sbb
jno
jno
pusha
lods
aam
je
push
mov
repnz
mov
jg
repz
iret
mov
dec
or
push
or
mov
aam
into
sub
insl
push
repz
repz
xlat
pop
frstor
push
push
add
xchg
add
mov
testb
in
rcrb
mov
add
sub
aam
push
sbb
stc
mov
test
sahf
mov
add
adc
or
lds
sbb
mov
push
jae
pusha
popf
jno
pop
cs
out
es
in
mov
mov
add
jb
mov
orb
pop
out
repnz
fs
mov
shll
xlat
add
pop
je
test
dec
test
aad
add
sub
jne
push
filds
lock
jne
and
cmpl
movsb
push
addr16
jge
xchg
sub
popa
cld
inc
imul
push
insb
pop
cmp
adc
aam
loop
jge
xor
cmovae
lds
push
out
jnp
inc
and
lret
dec
outsl
insb
sbb
or
addr16
pop
jae
cmc
call
lods
jge
and
out
jo
pop
jmp
ss
cmp
lcall
sub
jmp
pop
lahf
mov
aad
shlb
xor
mov
sub
push
adc
add
mov
push
imul
mov
mov
inc
xchg
aad
fimull
js
or
fwait
jnp
dec
pushf
daa
push
xor
add
xor
jl
sub
adc
das
or
clc
mov
data16
push
sub
jo
pop
dec
lret
jns
xchg
inc
and
cmpsl
xchg
xchg
push
xor
pop
inc
xor
ror
mov
jbe
jno
es
inc
add
ret
adcb
mov
movsb
xchg
jo
call
push
popf
mov
cs
lahf
shrb
jnp
fucomip
sbb
iret
sbb
lds
clc
pop
andl
dec
test
fdivs
fidivrl
inc
inc
push
imul
loop
xchg
push
adc
pop
popf
xchg
mov
push
sub
adc
cltd
cs
roll
dec
in
shrl
rcll
nop
arpl
or
in
insb
cmpl
rcrb
in
mov
hlt
aam
aad
mov
inc
push
sahf
mov
ret
sub
lcall
enter
addr16
pop
and
inc
scas
xchg
xchg
add
or
inc
inc
lret
repnz
mov
frstor
je
jecxz
roll
adc
int
aas
decl
outsl
mov
add
and
dec
dec
jmp
pop
or
jmp
xchg
sbb
mov
test
es
repnz
add
je
pusha
ja
inc
es
inc
xlat
bsr
pop
inc
pop
lods
std
pusha
and
push
mov
aad
inc
in
cmp
pop
cmp
mov
mov
repnz
popa
insl
lcall
mov
je
push
sbb
outsb
fdivr
adc
inc
xchg
stos
push
mov
add
aad
movsl
fistpl
loop
xchg
jge
xor
sbb
dec
add
push
pushf
aam
leave
push
stos
xchg
lds
movb
aam
fnstenv
pop
xchg
xchg
dec
mov
jbe
popa
fimuls
cwtl
sub
loopne
sbb
shrl
push
and
aam
sub
push
mov
outsb
loopne,pn
movsb
and
xorl
xor
int
dec
add
movsb
in
ss
pop
xor
insl
shlb
push
testl
cltd
and
imul
gs
pushw
out
test
inc
ret
and
xor
pop
mov
aam
subl
daa
jecxz
mov
scas
push
enter
push
and
mov
sbb
pop
push
lock
movsb
jbe
xlat
test
scas
rolb
push
push
inc
ret
cltd
popa
mov
loope
mov
push
push
iret
dec
push
lret
dec
hlt
adc
inc
mov
loope
lahf
and
je
push
icebp
lcall
into
push
sahf
adc
push
sbb
xchg
mov
aam
or
subb
cmp
push
lahf
adc
mov
dec
push
inc
loopne
push
dec
hlt
jb
cmp
mov
xor
ja
pop
mov
out
iret
pop
sbb
fs
cld
xchg
mov
inc
pop
sti
or
push
aad
les
clc
movb
push
sbb
pop
mov
sarl
mov
and
inc
and
dec
in
ljmp
xchg
xor
cmc
icebp
add
inc
mov
insl
repz
inc
and
cld
add
mov
or
and
fld
scas
clc
xlat
dec
mov
cmp
mov
in
sbb
mov
aam
add
outsb
adc
popf
push
mov
cs
pop
mov
sub
push
dec
imul
lcall
addr16
or
sti
mov
add
daa
stos
xor
out
sub
mov
scas
adcb
je
loop
test
in
inc
loope
push
mov
inc
dec
lret
call
std
ljmp
jae
ja
jecxz
sub
mov
cmp
mov
mov
mov
loop
inc
sbb
mov
cld
stc
jne
jg
push
ds
fldenv
pop
mov
push
aaa
add
mov
repnz
add
call
outsb
dec
shrb
adc
mov
stc
pop
pop
mov
test
xchg
stos
jne
movsl
pop
dec
aas
pop
and
and
pusha
mov
into
insb
lock
xor
mov
mov
pop
add
rcll
pusha
test
sub
scas
aad
daa
je
mov
push
xchg
cmp
insb
mov
add
test
cmc
dec
sarb
test
dec
jecxz
mov
add
xchg
stc
mov
out
or
addb
hlt
cmp
dec
mov
or
js
dec
inc
add
mov
mov
fisttps
push
mov
add
clc
inc
imul
fsubrl
inc
and
mov
or
adc
mov
xor
xchg
mov
ja
dec
cmp
gs
fucom
push
xchg
push
in
jmp
inc
into
int
cmpsb
scas
out
mov
or
test
push
sbb
add
push
pop
in
scas
xchg
mov
aad
jnp
jmp
xchg
mov
xchg
sub
push
pusha
inc
cmp
aam
cmp
ds
push
bnd
out
mov
test
mov
insb
mov
scas
aam
call
xchg
sti
adc
inc
stc
pop
or
jge
adc
jo
jb
and
add
add
cmpsb
or
fmulp
xor
mov
cmp
fstpl
add
cmp
or
inc
orl
aam
pop
stos
dec
cmc
push
sahf
cli
data16
aam
lret
loope
adcl
xor
test
mov
sarb
and
int3
add
inc
jg
xchg
in
arpl
and
andl
loop
pop
sbb
in
das
xchg
sub
dec
aam
fwait
cmp
push
xchg
mov
sbb
inc
movd
outsl
cmp
and
xchg
aas
jns
push
das
cltd
or
lods
cmp
sti
add
and
fsubrl
xor
loopne
in
negl
ret
adc
inc
sbb
inc
cmpsb
lea
negb
rcrb
out
push
dec
add
mov
mov
lgs
or
mov
add
int3
lods
outsl
mov
imul
add
cmp
adc
inc
xor
es
data16
test
xor
out
insb
dec
push
popf
icebp
aaa
add
mov
add
stos
ret
push
nop
aad
mov
push
add
in
sbbb
dec
cmpsl
outsl
push
call
mov
out
ds
mov
add
lods
js
adcb
ljmp
and
cmpsb
dec
dec
pop
cltd
pop
push
and
jbe
adc
hlt
push
add
sbb
mov
dec
xor
cmpsl
enter
pop
lea
repnz
mov
sub
mov
outsb
clc
scas
insl
hlt
arpl
jge
gs
mov
in
loope
aad
movsb
dec
xchg
pop
cmpsl
sbb
mov
mov
inc
add
daa
in
test
add
xchg
enter
scas
pop
in
jno
inc
ret
clc
lret
mov
out
mov
int3
loope
jge
xchg
fwait
push
mov
xlat
push
inc
test
cmp
icebp
sahf
mov
xor
aas
mov
push
mov
adc
sub
and
jge
mov
sbb
or
inc
subl
xchg
fdivrl
and
enter
and
pop
push
mov
lret
loop
iret
shll
stos
nop
inc
pop
sbbb
fcmovne
aaa
adc
test
rorb
push
fildl
xor
pop
gs
xor
mov
mov
push
mov
arpl
mov
push
leave
mov
jmp
icebp
dec
ret
dec
movsb
push
test
or
cmpsb
subl
mov
xchg
mov
cmp
jl
dec
lds
shll
or
mov
or
mov
mov
rcll
stos
test
ja
aam
jnp
adc
aam
aad
mov
push
std
flds
xchg
data16
xlat
mov
fs
aam
insb
jg
in
ret
imul
mov
fbld
fucomi
jecxz
loope
sbb
mov
mov
mov
xchg
fidivs
shrl
rcll
sbb
or
sti
jno
dec
mov
push
push
in
jmp
fstpt
jl
pop
sbb
pop
pusha
jle
enter
mov
enter
jle
mov
pop
or
pusha
push
lea
repnz
dec
mov
fwait
shr
mov
xor
inc
mov
push
pop
xchg
pusha
rorl
in
daa
fcmovne
movsb
pop
xlat
daa
fmuls
fwait
xchg
out
mov
test
std
pop
repz
dec
mov
fst
push
mov
jmp
test
xor
lock
mov
jmp
lds
adc
xor
dec
pusha
jne
in
sbb
mov
mov
adc
pop
les
or
test
jmp
adc
xchg
push
pop
pop
mov
stos
shll
subb
pusha
xor
xor
pop
fnstcw
inc
enter
rorl
subl
jne
ljmp
pop
dec
stos
sbb
pop
test
jno
test
data16
pop
jp
sub
push
shll
jno
sbb
hlt
mov
aam
sti
inc
sbb
les
ja
xchg
sbb
inc
aad
test
js
std
rcrl
sbb
and
pop
pusha
cmp
jg
fisubrs
gs
sub
out
and
add
add
mov
dec
sub
adc
mov
mov
inc
adc
mov
iret
add
loopne
cs
jnp
jbe
in
add
sub
iret
xor
adc
sbb
xor
push
jmp
nop
lret
bound
lret
cmpsl
insl
xchg
icebp
lods
aas
fwait
addb
xchg
shll
xor
dec
cmpsb
sbb
stos
xchg
in
sbb
cwtl
fldcw
movsb
fnstenv
scas
insb
cld
and
xor
xchg
pusha
fwait
push
cmpsl
sbb
jmp
inc
gs
fstl
mov
sub
icebp
mov
repnz
jl
mov
xlat
loop
xchg
mov
inc
popa
popa
stc
cli
mov
movl
mov
push
inc
aad
cwtl
add
sub
stos
mov
rcrl
sub
mov
outsb
jecxz
stos
xchg
cmp
popa
pop
fdivrl
pop
cmp
fcomps
sti
je
add
xchg
gs
adc
mov
push
cmc
in
out
iret
shlb
adc
xlat
and
add
sub
push
cltd
loope
mov
and
outsl
jmp
add
xor
mov
cltd
jg
clc
inc
cmpsb
xlat
insb
aad
dec
pop
lea
out
xchg
sub
and
je
in
xlat
cli
repnz
call
sbb
add
mov
add
dec
and
pop
pop
cltd
or
cwtl
std
fcom
cli
inc
xor
xchg
je
stc
xor
pop
out
mov
dec
push
into
mov
mov
dec
xor
ficoms
push
hlt
fldt
imul
lret
push
aam
lea
sub
adc
jge
in
shrb
or
xchg
stos
sub
push
fmuls
xchg
xor
and
and
sub
mov
xchg
mov
add
mov
mov
nop
mov
xor
fimuls
xchg
lcall
test
fimuls
adc
sbb
in
testb
in
jae
mov
push
push
rorl
add
fcoml
pusha
and
inc
inc
bswap
xlat
mov
xchg
movsb
cmpsb
xchg
push
sub
jmp
or
out
sbb
add
mov
outsl
movsb
pop
pop
int3
adcb
shll
fwait
pusha
cmp
and
lea
mov
outsb
xor
stos
lods
dec
pop
push
pop
add
inc
rcrl
pop
adc
dec
mov
sarl
mov
xchg
jle
push
outsb
mov
rolb
push
push
roll
or
xchg
mov
mov
and
pop
pop
xchg
jge
fistps
frstor
testb
jb
imul
jnp
pushf
adc
inc
sahf
mov
add
sbb
xlat
xor
dec
scas
mov
int3
aad
popl
nop
push
repz
sbbb
jo
push
in
sahf
mov
mov
scas
bound
shll
outsb
sbb
repz
pop
mov
mov
and
mov
mov
mov
add
pop
pop
pop
lock
mov
xchg
dec
mov
push
sub
cltd
sub
mov
xchg
scas
cltd
and
or
xchg
push
jp
jne
pusha
cmp
rorb
mov
ljmp
mov
mov
push
push
insb
adc
adc
loopne
fs
and
mov
mov
xchg
aad
lret
les
cli
mov
mov
pop
jg
jns
ja
imul
mov
test
push
mov
jbe
cmp
jmp
jle
mov
lahf
pop
lock
and
xlat
dec
mov
mov
xchg
pop
push
out
cs
xor
dec
out
popf
test
insb
mov
pop
stos
iret
ret
loopne
iret
loop
lock
mov
pushf
pop
push
lcall
aad
sti
ja
adc
cmp
push
mov
pusha
rorl
sub
cmp
cmpsl
add
lret
sbb
push
dec
push
jns
push
pop
arpl
shr
sarb
in
dec
cs
mov
xchg
lret
sub
out
push
lret
popf
sub
test
stc
and
push
mov
add
aam
shrl
sub
test
pop
enter
sbb
dec
mov
cltd
in
nop
mov
outsl
add
divb
mov
pushf
aaa
rcr
mov
xchg
mov
jmp
aad
pop
lahf
cmc
and
lock
lea
jns
ret
test
inc
and
insl
sub
mov
cmp
or
cld
pop
lcall
insl
xor
hlt
jl
sub
xor
mov
test
xchg
nop
out
push
pop
sbb
push
movaps
xor
hlt
ljmp
popf
aam
or
inc
dec
or
sbb
xchg
aas
int
pop
dec
andl
dec
lea
test
mov
mov
sub
xchg
push
decb
aad
xlat
fimuls
les
push
mov
out
xchg
inc
mov
xchg
iret
movsb
mov
push
or
aad
dec
mov
arpl
add
les
popa
ret
out
and
bound
shll
mov
cltd
adc
clc
and
jne
sub
push
ljmp
mov
aad
push
subb
imul
or
mov
sti
testb
das
cmp
test
jmp
push
cmp
aad
mov
icebp
dec
jl
sti
jg
sahf
inc
inc
pushf
inc
mov
inc
mov
dec
dec
imul
out
out
fcompl
and
aam
mov
push
pop
inc
mov
xchg
cmp
ret
aam
enter
movsl
pop
xchg
mov
inc
xchg
loopne
scas
jae
add
mov
inc
lahf
out
mov
shrb
ss
stos
shr
pop
insl
popa
or
ret
aam
test
ljmp
bound
inc
or
lret
mov
xchg
inc
sub
fwait
repz
ficoms
or
clc
mov
mov
or
mov
mov
add
andl
lcall
inc
hlt
test
ret
pop
movsl
inc
es
out
adc
add
jne
lea
dec
scas
shll
sbbb
inc
mov
xor
or
roll
push
jecxz
fistps
pop
cmp
outsb
lods
or
fsubrs
mov
loop
dec
mov
xor
into
dec
cmp
mov
mov
arpl
test
mov
sti
dec
push
add
ds
adc
push
push
aad
mov
xchg
test
dec
imul
imul
cmp
xor
pop
je
aaa
cltd
mov
push
repz
push
push
stos
xchg
push
xor
add
jbe
inc
int3
sbb
mov
outsl
pop
mov
imul
cs
mov
pusha
xchg
bnd
mov
cmp
ret
ljmp
sub
scas
xchg
call
movsl
add
push
test
push
or
imul
aas
inc
stos
sub
adc
and
pusha
popf
mov
push
adc
xchg
ljmp
or
andl
pop
sub
pop
xchg
ret
int3
ljmp
xor
stc
push
and
fbld
cld
pop
mov
mov
sbb
dec
mov
rorb
sbb
int
fidivrs
lcall
les
jmp
imul
jbe
and
aam
jo
dec
xchg
call
cld
aas
dec
es
jno
stc
mov
sub
mov
adc
das
xchg
lods
stos
add
insl
inc
or
dec
pop
xlat
stos
inc
xchg
cmpsb
sub
cmp
inc
inc
cld
mov
xor
rolb
js
fiaddl
dec
mov
daa
cli
ljmp
push
add
rcll
push
ds
sbb
push
cmp
inc
mov
pop
imul
or
mov
xchg
xchg
cli
xor
into
xchg
xchg
lods
sahf
and
pop
test
in
aam
fs
xchg
mov
mov
shr
es
ret
jecxz
aad
inc
mov
or
scas
fwait
daa
cmp
or
mov
test
xchg
mov
jns
add
ret
dec
iret
xor
int
push
in
dec
aam
imull
int3
add
mov
sbb
cmp
push
mov
xor
jmp
adc
fcmovnbe
in
jbe
and
jb
repz
push
ficomps
enter
pop
mov
mov
xchg
xchg
pop
sarl
pop
xlat
ljmp
cltd
ljmp
inc
mov
xchg
movsb
add
fnstcw
pusha
dec
xor
push
icebp
loopne
push
mov
rep
push
pop
push
push
cmpsb
jle
jle
std
push
pop
sbb
ret
xchg
cmp
jno
dec
mov
adc
std
add
fiaddl
fldenv
dec
mov
sahf
jno
sub
xchg
push
pop
icebp
ret
cs
add
sarl
lahf
loop
xor
xor
pusha
popa
adc
in
add
lods
aad
popf
sub
mov
inc
sbb
push
cmpsb
mov
clc
mov
sarb
leave
sti
or
enter
dec
iret
push
pop
push
cmpsb
dec
mov
lea
inc
mov
movsb
jp
subl
mov
repz
add
jmp
or
mov
bound
out
push
adc
fbld
sbb
pushf
je
out
xchg
or
cli
loop
and
xchg
push
pop
pop
mov
jp
cmp
inc
sbb
jle
and
pop
mov
int
or
aam
jnp
inc
pop
xchg
movsl
inc
imul
push
loop
loope
adcl
test
aam
ja
stos
dec
rcrl
popf
cmpsb
jp
adc
cwtl
aam
aad
repz
repz
mov
insb
sub
mov
jge
lds
inc
mov
adc
cwtl
mov
ret
fcoml
sbb
mov
push
sub
scas
sub
ret
repz
add
fcomps
std
aas
shr
pop
daa
adc
and
jns
or
aaa
lods
jo
dec
imul
xchg
imul
push
aam
je
decl
pop
movsb
rorb
sahf
jge
ret
and
add
cmp
lret
inc
or
cmc
ja
add
dec
aam
cmp
pop
mov
in
pusha
aam
xchg
popa
push
pop
sbb
outsb
jp
push
adc
ljmp
add
test
repz
cld
push
loopne
mov
add
fwait
pop
xchg
mov
aad
inc
test
imulb
je
testl
xlat
inc
dec
pop
push
push
sbb
jmp
leave
cmp
adc
rorb
or
inc
xchg
or
push
mov
aam
sub
dec
mov
enter
data16
es
mov
adc
jmp
dec
push
sbb
daa
popa
imul
mov
fwait
scas
aad
cltd
adc
sbb
mov
add
call
xchg
stc
daa
sub
jecxz
mov
jae
pusha
add
loope
and
cmpb
jp
sar
arpl
dec
or
jle
mov
stc
fcomps
divl
repz
cld
pop
int
cmpsb
test
cltd
in
pusha
pop
jmp
cmp
insl
xor
push
imul
mov
push
add
sbb
add
call
inc
jb
inc
adc
xchg
sub
push
gs
cmpsb
xchg
outsl
test
pop
mov
loope
mov
mov
cmp
sar
ffreep
shll
imul
mov
mov
add
adc
loope
add
jecxz
adc
and
stos
cs
xchg
add
lret
mov
mov
fcomps
mov
mov
mov
dec
adc
and
repnz
mov
push
mov
dec
mov
xor
jle
cmp
in
stos
mov
jp
pop
call
aam
and
add
es
sub
stos
jecxz
mov
cltd
mov
mov
arpl
xchg
cmp
sbb
pop
sti
mov
fwait
pusha
xor
adc
pop
in
sbb
cwtl
sub
inc
testb
daa
insb
je
test
stos
mov
out
into
loopne
in
enter
jo
fimuls
dec
lds
mov
fwait
mov
add
orb
cmc
lods
push
cwtl
jp
push
loope
sbb
push
out
je
jne
xchg
pop
pop
jns
sub
push
clc
iret
lock
jge
jl
ss
cmp
cld
mov
mov
bound
xlat
sub
mov
inc
fisubrl
jae
outsl
mov
repz
cmp
lea
js
js
cmpsl
fcmovnb
stos
subl
rcrb
es
popa
mov
cmp
dec
add
loopne
out
mov
pop
cwtl
je
cmp
jno
add
mov
or
xor
cmp
imul
adc
pop
mov
stos
mov
dec
push
lahf
push
sub
pop
inc
add
sub
gs
cmp
hlt
mov
fstps
dec
hlt
lds
pushf
jo
cmpsl
mov
and
in
xchg
jmp
and
lret
rorb
pop
aas
xlat
and
ret
sbb
mov
dec
xchg
mov
lret
inc
sahf
cltd
xor
xchg
mov
pop
pop
out
sub
xlat
bswap
mov
mov
fimull
cli
and
add
and
rorl
popa
shrl
gs
inc
add
xchg
scas
hlt
mov
jae
push
nop
add
into
out
es
in
rorb
push
adcl
out
jge
jns
mov
pop
lcall
add
pop
adc
pop
inc
pushf
int3
lds
ds
aam
fists
jp
inc
push
mov
xchg
push
add
sub
roll
adc
lock
jecxz
cwtl
ret
adc
xor
adc
mov
repnz
mov
add
mov
push
push
jne
dec
push
add
outsl
pop
adc
dec
mov
mov
mov
pop
xor
aaa
xchg
push
xor
lret
sub
dec
pop
sarb
arpl
jle
sbb
in
scas
or
stc
cwtl
mov
push
sub
cmp
pop
mov
dec
mov
mov
sahf
cmp
cmp
mov
fcmovne
nop
xchg
sub
mov
adc
ja
mov
enter
fwait
popw
xor
mov
mov
or
lret
xchg
test
cmpsl
cmp
pop
push
out
add
and
pop
push
jne
jne
xchg
cmpsb
es
scas
int
fimull
sbb
pop
cwtl
lret
jns
mov
lea
inc
shlb
ret
sub
pop
push
aaa
hlt
mov
insb
out
adc
xor
stos
repz
lea
ss
add
mov
xchg
push
pusha
xchg
ss
pop
shll
and
add
xor
cltd
sbb
enter
pushf
cwtl
lahf
and
dec
jl
pop
fs
push
and
add
sub
inc
jmp
repz
pop
and
pop
sbb
sbb
insl
or
fadds
mov
ljmp
test
insl
aad
aas
inc
xlat
jecxz
fstl
int3
and
add
xchg
ret
cmpsl
mulb
push
movaps
push
int
into
cmp
inc
cmp
data16
mov
inc
mov
iret
add
mov
xchg
cmc
push
sub
jb
xchg
add
sub
scas
dec
inc
xchg
fsubp
mov
sbb
lds
lods
hlt
dec
jne
xor
xchg
lahf
icebp
in
in
aad
xor
fnstsw
push
movsb
stos
or
jo
movsb
sub
je
push
movsl
ret
inc
push
xor
cmp
cmp
cmp
aam
rcrl
dec
fmul
jmp
pop
imul
mov
add
leave
ret
sub
xor
jnp
cmp
movsl
mov
ret
xor
cmc
or
in
aad
mov
mov
aaa
subl
sub
or
in
in
lds
mov
aad
rorb
stos
std
sbb
decl
xchg
in
movsl
mov
adc
cld
inc
aad
push
lock
add
or
and
pop
popa
inc
addl
dec
xor
cmpsl
out
and
pop
call
out
mov
mov
dec
fists
ret
ja
sti
mov
pop
aam
mov
pop
test
push
or
sub
sbbl
sub
scas
sahf
int
add
insl
cmp
and
jbe
jns
add
cmc
mov
out
or
mov
enter
std
cli
lret
xchg
mov
fadds
mov
jb
dec
adc
mov
sar
or
idivb
add
jp
pop
push
inc
and
aad
lcall
push
fidivl
cmp
mov
shr
shll
mov
or
add
push
sbb
out
xchg
scas
outsl
lcall
mov
and
adc
sbb
pusha
aam
inc
shrb
push
jae
lds
xor
test
push
sub
nop
lcall
adc
movsb
fistps
stc
add
adc
mov
push
movsl
xchg
mov
push
pusha
mov
push
mov
inc
push
aam
or
cltd
jge
fimuls
cmp
dec
add
ficomps
leave
ficoms
mov
std
mov
jnp
test
mov
cmp
jle
jno
aam
sbb
add
loopne
mov
mov
jns
add
arpl
mov
inc
mov
mov
test
sbb
ret
lahf
dec
xchg
push
xor
push
ret
add
jb
sbb
notl
insb
js
sub
xchg
pop
sub
dec
inc
das
cmc
test
iret
stos
mov
aas
xchg
mov
mov
ja
sub
mov
fs
in
sub
dec
dec
loop
xchg
daa
dec
stos
mov
sahf
mov
loopne
nop
pop
test
data16
loopne
sbb
pop
jo
lods
imul
movsb
aaa
call
cmp
mov
dec
outsl
fcmovne
call
out
dec
clc
and
or
js
xchg
xlat
inc
hlt
mov
aas
scas
ret
jo
test
sbb
jnp
fistpl
test
sbb
xlat
push
rcll
aam
cmc
inc
mov
cmp
cmp
pop
flds
sbb
push
imul
xor
or
ret
xchg
inc
or
lret
ds
rcll
dec
add
icebp
test
sbb
insl
push
mov
faddl
out
shrl
sar
mov
adc
add
insb
iret
sbb
mov
test
add
stc
and
pushw
ja
mov
pop
inc
pop
fs
dec
in
pop
mov
xor
pop
imul
and
dec
jno
push
jecxz
push
adc
dec
jp
jmp
pop
fists
sarb
out
inc
rorb
das
pop
arpl
pop
mov
nop
mov
ret
in
xchg
xchg
push
lahf
mov
rcrb
sub
aam
loope
jo
inc
sbb
mov
lahf
fdivl
mov
pop
xor
mov
arpl
xor
aad
in
rcrl
arpl
aad
adc
sub
xchg
jg
fisubrs
mov
mov
rcl
add
scas
xor
cli
aad
scas
push
cmc
mov
jns
inc
add
lods
outsb
dec
roll
mov
adc
pusha
jns
and
lea
mov
iret
aam
dec
lret
lock
gs
sbb
ds
aam
stos
stos
repnz
mov
test
add
push
ret
push
rcr
add
pop
sub
test
dec
cmpsl
mov
inc
in
mov
pop
addl
pop
cmc
lret
xchg
mov
push
aad
add
mov
ds
sub
sbb
inc
lret
nop
pop
aam
mov
stos
and
imul
ds
push
xchg
jle
add
pop
gs
ret
pop
sbbl
fdivrs
xlat
fstp
pop
sub
and
add
into
ret
bound
pop
mov
repnz
mov
aad
lds
lock
lea
shr
xor
mov
mov
andl
inc
mov
xchg
jp
push
adc
mov
les
cmp
scas
xlat
cmp
push
aam
jg
sar
jb
push
jne
pop
mov
psrad
mov
pop
mov
adc
lds
inc
iret
add
inc
out
cs
pusha
inc
sarb
aam
aam
daa
lods
iret
mov
ja
cmp
pusha
nop
add
out
mov
mov
mov
sbb
pusha
add
jle
pop
or
enter
xlat
repnz
adc
stos
mov
andl
add
dec
je
pop
jbe
xlat
and
out
jbe
ja
inc
mov
xchg
mov
or
xchg
sbb
rorb
pop
inc
sbb
mov
out
push
cmpsl
lcall
pop
ljmp
add
lahf
daa
and
lret
iret
fisubrs
shlb
jae
aad
rcr
mov
mov
movsl
jae
adc
pushf
sub
dec
jno
xchg
sarb
test
pop
pushf
pop
dec
dec
in
mov
or
orl
imul
cmp
shl
mov
mov
xor
mov
pop
pop
popf
mov
js
push
imul
out
jo
aaa
out
push
jne
mov
add
mov
xor
mov
jecxz
dec
mov
pmuludq
repnz
int3
jno
mov
hlt
xchg
loopne
inc
mov
loopne
not
hlt
sahf
jae
push
shll
les
inc
mov
cs
mov
sub
jg
orb
add
xor
mov
clc
fldz
incb
cmpl
in
mov
mov
or
aaa
mov
add
sti
sub
sub
lds
rorb
outsl
mov
mov
lahf
add
incl
outsb
pop
int
cmp
lret
mov
dec
mov
mov
cs
dec
sbb
sbb
mov
int
push
ss
pop
add
outsb
ds
mov
aam
sub
push
mov
movsl
mov
add
cmpsb
jno
out
adc
out
pop
clc
cmp
adc
xor
mov
dec
outsl
mov
call
jmp
ss
bound
popf
loop
call
jns
adc
fisubl
lahf
ja
fadd
mov
lahf
mov
pop
dec
stos
pusha
out
lret
rorl
mov
jmp
cmp
cmp
cmp
clc
cmp
daa
lods
rcll
dec
jns
pop
xchg
movsb
hlt
cmpb
mov
sub
push
sahf
add
and
ret
idiv
xorl
lcall
dec
jno
fdivrs
add
addr16
mov
xor
sub
iret
aaa
sbb
lods
add
mov
js
xor
mov
cmpsl
pusha
mov
arpl
sbb
ret
and
push
mov
sbb
mov
lock
es
aam
jns
enter
mov
mov
aas
pop
mov
pop
or
loopne
cwtl
cwtl
or
imul
aam
add
fimull
jne
fdivrl
cmp
loope
test
jnp
inc
repz
out
movsl
add
cltd
outsl
mov
gs
pop
inc
push
or
into
addps
xor
fstpl
dec
xlat
sti
xchg
testl
iret
jae
push
add
sbb
pop
into
call
sbb
dec
inc
cmp
mov
sub
test
xchg
mov
mov
mov
push
test
icebp
cmpl
std
push
dec
fimuls
rcr
rorb
add
movsl
pop
jle
mov
call
das
sti
mov
lret
mov
xlat
sarl
add
loop
sub
icebp
mov
fldl
cmp
out
mov
outsl
fisttpll
std
imul
cwtl
xor
cmp
in
in
fyl2xp1
cld
ss
fstl
add
mov
and
dec
cmc
std
mov
and
dec
dec
ds
pop
fisubrl
in
jecxz
jne
lcall
cltd
cmpl
lock
cmp
adc
stos
push
in
fs
pop
xchg
pusha
mov
push
mov
jecxz
and
fldt
add
add
and
push
daa
cmp
shlb
and
leave
scas
test
insb
pop
testb
xor
xor
roll
jo
loop
mov
mov
dec
insb
call
push
in
aam
sub
cli
xlat
push
movl
cs
popf
aam
shll
mov
mov
lds
xchg
pop
cmp
add
ret
mov
int3
pop
pop
cmp
sarl
dec
lahf
aam
lahf
stos
adc
jae
cmpsl
adc
rorl
jo
push
imul
pop
gs
lahf
test
aam
sbb
into
mov
xchg
inc
xchg
mov
mov
rep
out
mov
push
fs
jmp
cmp
scas
jp
ret
es
stc
mov
add
sub
fisttpll
add
inc
pop
add
xor
divps
clc
fwait
and
jo
dec
mov
mov
test
adc
xchg
xor
rcl
leave
mov
out
mov
pusha
daa
rcl
mov
dec
mov
lea
out
enter
jae
sarl
mov
fwait
gs
rorb
rcrl
es
jnp
adcl
push
add
sbb
mov
xchg
mov
xchg
aas
mov
jecxz
rclb
imul
aad
xchg
ljmp
jl
lret
push
or
test
pushf
mov
hlt
loopne
add
pusha
mov
or
xchg
or
scas
sub
stos
mov
pop
xchg
pushf
mov
mov
xor
push
std
stos
dec
insl
inc
nop
imul
sub
push
outsl
or
and
es
aad
testb
jbe
or
dec
mov
out
js
pop
xor
lods
flds
stos
mov
fwait
mov
xor
mov
dec
mov
dec
xchg
lret
sbb
push
or
jne
popf
and
mov
negb
xor
sbb
add
hlt
mov
pop
mov
inc
lahf
cmc
push
cmp
data16
stos
aam
push
mov
inc
jl,pn
mov
je
fdivl
sbb
lds
add
fldl
cmp
shr
lock
cmpb
es
xchg
add
call
test
cmpsl
mov
add
std
jo
xor
and
mov
mov
out
add
sahf
sbb
push
push
push
mov
cmp
adc
cld
cmp
divb
pop
push
rorb
pusha
push
mov
mov
movsb
or
mov
or
pop
jne
adcl
xor
sarl
fimuls
leave
cmpsb
jae
std
cmpl
cmpsb
lret
into
sbb
lock
add
nop
and
je
pop
mov
mov
test
in
dec
xchg
ljmp
mov
sbb
in
add
test
out
dec
loop
cwtl
xor
dec
filds
movl
int
mov
dec
and
cmp
adc
popa
shrl
iret
fstpt
pop
jmp
add
jnp
mov
stos
outsb
mov
jns
pop
inc
xchg
jae
or
inc
fcompl
stos
sbb
lods
push
jb
xor
or
cmp
mov
roll
and
cmp
adc
sahf
loop
push
xor
sbb
push
mov
data16
adc
xchg
sbb
sub
add
add
pop
inc
mov
int
pop
out
repz
dec
xor
or
mov
jns
push
push
lret
addl
mov
push
imulb
insl
dec
and
sahf
aas
sbb
dec
sub
cwtl
int
jg
mov
cmpsb
xchg
sbb
push
icebp
sarl
xchg
mov
fimuls
mov
mov
cmp
jbe
add
lds
mov
add
pop
sub
cwtl
cmpsl
sub
mov
rsm
testl
incl
mov
add
push
add
mov
mov
jns
popf
outsb
pop
or
fsubr
filds
jno
pop
push
cmpsl
stos
aas
les
lds
pop
aad
repnz
or
cs
shl
push
mov
xor
or
or
add
xchg
leave
mov
subl
add
pop
mov
mov
mov
add
xchg
insl
and
push
jmp
lret
and
ret
adc
out
je
cmovo
andl
pop
mov
mull
js
fwait
pop
mov
sub
mov
daa
jl
fwait
pop
sbb
outsl
inc
cmc
aas
xlat
jge
mov
int3
imul
movb
cmpb
out
fildl
fs
lods
jns
scas
add
jle
or
shr
push
cmp
adc
sahf
pop
dec
and
out
sub
lcall
std
push
and
push
xor
adc
sub
sar
mov
jnp
aaa
ret
cmp
and
mov
jae
repnz
fdivr
and
jl
add
es
ds
push
cltd
fistps
jno
xlat
mov
push
in
dec
xchg
pop
cmp
pop
iret
adc
mov
cmp
scas
or
mov
movsl
fidivl
add
mov
inc
icebp
push
stc
lea
dec
mov
stos
scas
enter
add
add
lret
les
pop
clc
mov
xchg
cld
lret
mov
mov
lea
push
lds
subl
cmc
ret
rcr
or
int
or
mov
push
pop
ja
aam
enter
xchg
xor
mov
push
push
xchg
adc
testb
add
call
mov
cmp
or
leave
and
or
roll
cwtl
and
jno
icebp
pop
or
inc
stos
sar
jl
fst
xlat
add
lret
test
mov
jno
repnz
xchg
or
pop
or
mov
adc
insb
cmp
daa
mov
push
sahf
dec
mov
outsb
aas
sbb
mov
scas
push
cmc
stos
and
xchg
add
arpl
lods
inc
and
cmp
mov
pop
inc
dec
sbb
movsl
bound
mov
cmpsl
scas
daa
or
clc
pop
fwait
cli
push
cwtl
xor
inc
xor
daa
lahf
push
testb
add
xor
sub
inc
push
dec
jg
mov
ss
test
cmp
pop
sub
add
js
cltd
frstor
mov
jl,pn
push
push
push
pop
dec
sbb
or
scas
cmp
shrl
mov
sbb
or
pop
gs
xor
icebp
ljmp
adc
test
pusha
outsb
add
enter
push
hlt
outsb
dec
and
negl
cmc
sar
loope
xor
or
ja
mov
stos
inc
into
add
cltd
pop
lret
and
pop
out
cmpsl
inc
in
sbb
lds
and
inc
dec
int3
test
dec
lret
mov
test
subb
xchg
addb
sbb
pop
outsl
push
daa
cltd
xchg
pusha
jecxz
cmp
mov
sbb
aam
mov
psubb
pop
mov
and
arpl
and
inc
mov
cmp
adc
jmp
mov
adc
xchg
gs
into
aam
dec
jmp
add
cwtl
cltd
sbb
dec
scas
pop
pop
test
call
imul
adcl
dec
in
mov
aad
ljmp
mov
inc
and
fnstenv
dec
push
xor
inc
jge
ret
add
ficompl
sbb
test
gs
leave
outsl
add
or
or
and
pusha
mov
sub
imul
leave
ret
inc
mov
leave
not
in
add
push
test
add
inc
cld
pusha
lret
xor
cmp
push
pop
aad
push
fisubl
jne
decb
mov
mov
into
pop
loop
test
cmpsb
mov
pop
sub
pushf
lahf
dec
outsl
pop
andl
cli
cmp
or
adc
call
flds
pusha
ret
aam
xor
dec
xchg
aad
ret
cmp
fdivs
pop
sbb
jle
mov
cmpsb
cmc
dec
dec
push
addr16
rcll
mov
aad
mov
dec
adc
fs
mov
sahf
test
nop
pushf
in
sub
in
add
mov
mov
stc
outsb
idivl
jge
insb
or
xor
xchg
mov
faddl
fisubl
cmp
je
mov
loope
fmull
adc
addl
movsl
loop
jbe
stos
leave
cld
jle
addr16
popf
or
jb
push
jae
in
or
push
cld
js
push
xor
andb
cltd
ss
add
clc
pop
add
jl
mov
mov
in
ss
repnz
xlat
ss
cmpsl
xchg
int
adcl
pop
filds
cld
loop
push
jle
lods
pop
es
dec
push
dec
movsl
nop
pop
mov
or
xchg
scas
das
inc
inc
xor
aad
aad
push
push
jecxz
push
lret
xchg
and
imul
in
xor
add
mov
addr16
add
adc
test
inc
inc
in
add
or
outsl
sbb
sti
pop
imul
mov
sarl
adc
pusha
out
pop
fcmovb
repz
add
inc
mov
mulb
out
in
cmpb
push
push
inc
push
xchg
fistps
jns
je
icebp
mov
add
repnz
imul
lods
cli
lea
scas
aam
fdivr
out
xchg
mov
cltd
int3
mov
pop
shrl
pushf
aad
into
hlt
push
xchg
std
sbb
bound
rcl
jns
push
scas
adc
mov
jne
lret
mov
andl
lock
or
lds
add
mov
sbb
xchg
jne
fistps
pop
sub
movsl
and
mov
mov
into
and
and
mov
push
pop
std
push
or
hlt
xchg
sub
scas
inc
add
aad
lds
aam
movsl
add
cld
push
mov
mov
inc
push
imul
paddq
test
sbb
in
inc
pop
sub
ljmp
cmp
std
cmp
sbb
xchg
scas
aad
sbb
lods
xchg
inc
sbb
mov
mov
adc
insb
lods
xchg
cmp
fsubs
inc
sub
dec
xor
jp
cli
xchg
pusha
push
sbb
push
aam
dec
sbb
xchg
loope
pop
rcll
pop
jecxz
sbb
pop
je
jo
les
mov
cli
cltd
cmp
cmp
addr16
push
sti
aam
mov
in
mov
fldl
inc
imul
es
lods
daa
sbb
mov
aam
add
jbe
and
test
inc
mov
imul
into
jl
mov
sub
jns
mov
push
fidivrl
stos
cmc
repnz
pop
xchg
ret
pop
dec
add
mov
xchg
pop
das
add
sbb
aam
mov
push
mov
add
movsb
dec
sbb
les
inc
sahf
jno
aaa
push
add
add
jl
cwtl
loopne
push
mov
sbb
insb
fidivs
popa
xchg
jns
add
xchg
inc
xchg
dec
jmp
jle
xchg
mov
dec
push
add
or
fsubrl
sub
nop
es
mov
pop
push
pop
scas
mov
xchg
dec
icebp
inc
arpl
adc
dec
outsl
lcall
cmp
clc
out
jl
xchg
xchg
lahf
push
or
add
shrl
xchg
adc
jecxz
dec
imul
jb
paddq
pusha
push
pop
xor
daa
scas
mov
std
cmp
popf
mov
adc
inc
pusha
insl
fnsave
nopl
movl
movl
pop
cmpsl
pop
mov
inc
push
psrlq
sub
into
aam
pusha
fcompl
mov
jl
cmc
and
xchg
cmp
inc
lahf
shrb
cli
pushf
mov
and
fsubr
lret
sub
andb
sahf
sti
and
sbb
test
sbb
fprem
and
add
jmp
sbbl
push
cmp
aam
mov
orl
mov
icebp
lods
add
cltd
scas
inc
cmp
pop
clc
add
push
sbb
adc
daa
fidivrl
xor
test
pop
mov
inc
clc
mov
inc
add
ljmp
mov
cld
push
test
xchg
push
int3
sub
loope
mov
cmp
outsl
fildll
mov
fdivp
add
xchg
jnp
push
cli
insl
js
pop
outsl
nop
mov
or
fildll
push
imul
add
std
jge
pop
mov
shrb
loop
push
jo
push
push
jmp
pop
es
ja
xor
in
xchg
mov
and
and
or
aad
or
and
jno
outsb
add
repnz
mov
sbb
dec
and
addr16
cli
xor
ja
sbb
dec
push
and
sbb
cmp
jnp
xor
add
out
stc
cmp
push
and
loop
icebp
mov
jo
in
sbb
push
mov
pop
mov
push
cmp
ljmp
jo
jne
mov
scas
outsl
nop
das
add
jbe
mov
pop
adc
fnstcw
xchg
div
push
repz
lea
sub
aad
pop
xlat
pushf
es
cmp
sahf
mov
cmp
xchg
inc
pop
popa
inc
loop
add
xchg
or
mov
les
xor
jae
mov
sbb
loope
add
enter
cwtd
fnsave
pop
adc
mov
aad
and
dec
pop
fs
mov
loopew
mov
xchg
mov
cmp
and
sbb
pop
adc
pop
and
xchg
fldt
cltd
mov
leave
xor
jl
out
pop
fcmovnu
mov
and
ret
pop
mov
pop
cmpb
mov
movsb
lods
or
pop
popf
aam
mov
mov
bound
push
inc
dec
aam
test
pop
in
imul
mov
ss
pushf
pop
int
icebp
xor
lock
cmp
call
mov
incl
mov
cmc
add
push
sbb
es
mov
repnz
aaa
and
imul
sahf
add
enter
dec
pop
xor
push
lret
fninit
sar
in
inc
pop
shrl
xchg
or
aam
jle
adc
popa
sub
add
fsts
cmp
xchg
loope
ja
lea
lds
lods
or
mov
rcr
mov
adc
xchg
mov
mov
loope
sbb
add
decl
pop
lahf
dec
adcb
xor
fdivrp
enter
adc
mov
xchg
imul
fdiv
add
xchg
roll
jcxz
daa
pop
popa
jle
lcall
es
ret
insl
fmuls
adc
je
jmp
outsl
xchg
jmp
mov
data16
add
xor
insl
jge
cs
rolb
xchg
jg
scas
ret
sub
pop
sbb
jge
xchg
jae
jg
inc
sub
xlat
cmp
fidivrs
add
sbb
loope,pn
sbbl
mov
in
aam
les
xchg
sbb
xchg
lods
cld
leave
cmpsb
pushl
xor
xchg
std
cmpsb
push
xchg
xchg
cmpsb
and
jnp
inc
fnsave
sub
xchg
ss
xchg
sbb
jne
in
test
lret
test
cmpsb
cld
adc
cmc
out
push
add
lret
loope
call
cwtl
mov
inc
outsb
outsb
push
xor
inc
pop
call
data16
out
je
mov
aam
sbb
popf
jg
mov
or
mov
rcrb
loope
sti
sbb
push
jbe
mov
scas
mov
mov
lds
jae
sahf
into
mov
orb
lock
cwtl
adc
in
pop
xchg
xchg
sub
inc
mov
and
test
add
xor
mov
mov
xor
jp
int
mov
gs
and
daa
cli
push
and
lds
pop
bound
test
jno
mov
push
or
cmpb
sbb
mov
pop
shll
js
popa
pop
outsl
xchg
js
adc
sub
jmp
lock
add
mov
andl
mov
cmp
sub
cmp
mov
add
inc
inc
lods
add
aas
cld
pop
test
jno
add
aad
imul
adc
or
mov
stc
sub
dec
and
mov
ljmp
cmp
fucomi
mov
pusha
lods
scas
fs
mov
imulb
les
aas
jmp
xchg
or
int3
gs
fcmovnbe
xchg
mov
movsb
pcmpgtw
pusha
pop
xchg
orb
adc
xchg
or
call
mov
dec
repnz
mov
or
jmp
and
mov
jnp
call
stos
mov
push
sub
rorb
je
cli
or
xchg
subb
or
es
xchg
push
mov
sbb
mov
or
not
out
mov
jo
mov
clc
mov
mov
add
add
subb
adc
aam
lods
push
mov
repz
sub
mov
popa
es
pop
jp
aad
adcl
xchg
xchg
add
cmp
outsl
sub
icebp
rcrl
cmp
mov
push
mov
dec
lods
cmpsb
add
push
test
cmpsl
leave
xchg
lret
push
in
xchg
bound
push
push
mov
cmp
pop
mov
fs
leave
mov
mov
popf
dec
adc
adc
outsb
scas
pop
pop
sub
mov
mov
xchg
out
icebp
add
lahf
pop
in
and
fisubs
mov
sub
sbb
sbb
dec
inc
aam
mov
fisttpll
sub
sub
push
movsb
ja
cli
inc
test
lret
sbb
adc
mov
xchg
stos
sbbl
mov
xchg
push
push
adc
xor
mov
loop
pop
inc
subb
push
jge
testl
push
out
aas
adc
pop
mov
insl
imul
jle
std
aam
insl
stos
fstpl
insl
js
test
pop
mov
jle
push
jle
movsb
lock
xchg
xchg
ss
fcoml
inc
insb
add
add
mov
in
push
sbb
loopne
xchg
int3
mov
pusha
pop
pop
add
flds
and
push
into
stc
xor
add
adc
inc
icebp
js
scas
xchg
gs
adc
lret
popa
mov
pop
mov
fwait
test
pop
std
data16
insb
mov
and
lahf
movsb
mov
mov
stos
push
lcall
xchg
push
cmp
adc
les
cmc
xchg
imul
fidivrl
or
insl
cli
nop
dec
xchg
dec
dec
in
popf
jno
call
pushf
cld
mov
ret
mov
xor
sbb
nop
into
dec
xchg
jne
das
or
xchg
outsl
push
push
aam
ljmp
add
push
or
pop
or
mov
aam
negl
xor
mov
cli
rcll
adc
scas
push
xor
fs
pop
mov
ret
stos
xchg
dec
adc
lret
sbb
sbbb
or
push
lods
jnp
std
dec
adc
mov
lods
in
jbe
aam
push
push
cmc
push
int3
mov
xchg
lahf
add
pop
mov
ljmp
mov
or
fsubrl
xor
imul
orl
add
pop
lods
pop
arpl
mov
mov
inc
aam
movsb
xor
push
fnstsw
popa
leave
xlat
fidivs
sahf
xchg
jbe
push
pop
mov
sbb
sbb
fstpl
add
xor
push
xchg
xor
popf
mov
pop
leave
popa
jecxz
pop
mov
nop
clc
pop
insb
sub
mov
adcb
aam
mov
mov
adc
push
mov
inc
mov
mov
imul
sub
fdivl
ds
roll
mov
imul
gs
xor
out
fildl
mov
sub
push
rorl
lcall
mov
push
jnp
subl
and
lret
mov
pop
sbb
es
ss
cmp
mov
or
loop
add
imul
xchg
lret
mov
subl
push
aaa
cmpsl
jb
mov
outsb
es
js
add
sbb
add
mov
push
cli
aam
outsl
sbb
arpl
mov
adc
movsl
lret
stos
and
jmp
sbb
xor
xchg
ljmp
lret
inc
iret
repz
lea
add
fcmovnb
sbb
cld
add
loop
or
pop
stos
mov
cld
mov
mov
movsl
fsubs
out
mov
pop
jmp
mov
mov
lahf
adc
push
test
mov
outsl
icebp
inc
cmpsl
mov
int3
add
sub
and
mov
lods
push
dec
repnz
pop
sarl
mov
incl
push
mov
xchg
push
sarl
lahf
int3
lock
aam
addb
mov
inc
xchg
sti
lcall
add
add
inc
adc
bswap
aam
sub
fsubs
jae
mov
fnsave
mov
add
sbb
push
and
aam
loopne
mov
fistpl
fs
pusha
mov
lret
imul
inc
test
pusha
dec
push
add
in
pop
cmp
ror
cltd
fimuls
stos
sub
push
scas
in
mov
inc
or
xchg
rolb
subps
sbb
lods
xchg
pop
add
add
aam
xchg
ljmp
pop
or
cmpsb
mov
sbb
div
loopne
cmp
pop
mov
push
mov
jg
push
ljmp
or
sub
mov
enter
pop
add
rcr
add
aam
sarl
xor
fadds
cld
mov
mov
outsb
jle
mov
push
dec
cli
cwtl
add
loope
xchg
pusha
lahf
stos
bound
out
cmpsl
pop
mov
ss
sub
jle
pushf
icebp
subb
mov
push
xor
mov
jbe
xchg
out
cli
mov
out
shlb
mov
fadds
inc
jnp
jnp
repz
adc
mov
cli
jnp
mov
lret
mov
lds
mov
cmp
xor
pop
gs
ja
cmp
pop
dec
lea
sub
and
jge
inc
dec
data16
add
lcall
ds
mov
xor
xchg
in
pusha
arpl
aam
mov
mov
enter
inc
out
insl
pop
loopne
lret
and
pusha
pop
cmpsb
imul
aam
arpl
jbe
sbb
jp
repz
imul
mov
lea
or
mov
or
mov
sbb
inc
out
mov
adc
mov
daa
add
jno
ret
and
addr16
cwtl
cld
mov
and
fcoms
imul
mov
adc
xchg
add
out
mov
scas
nop
roll
or
dec
sti
inc
rcr
cmc
or
divl
jae
lcall
fbld
nop
mov
idivl
mov
mov
mov
scas
or
push
cmovo
js
les
insl
sub
push
dec
or
in
mov
or
rcrb
push
xchg
arpl
cltd
filds
push
pop
pop
sbb
testl
in
arpl
popf
out
mov
mov
sbb
push
insl
xchg
lcall
lret
mov
movb
lods
add
mov
push
addb
xchg
push
xchg
jbe
jge
xchg
ror
push
in
mov
jg
sbb
fcomip
ret
imul
fwait
imull
sub
stos
sub
iret
cli
adcb
mov
outsl
nop
sub
cmp
ret
fbld
fnstcw
mov
sub
pop
sahf
lret
popf
sbb
test
pop
out
lret
mov
inc
mov
add
dec
fwait
test
cmp
xor
cmp
mov
xlat
jns
into
jmp
mov
inc
jo
add
xchg
push
sub
inc
xor
fsubrp
scas
add
sar
sub
sbb
ds
aam
andb
fnstcw
mov
and
add
out
outsl
xchg
pop
or
adc
dec
fcom
cmpsb
jle
push
cmp
icebp
sub
fdivrl
add
sub
mov
jle
ss
mov
and
es
cmc
loopne
push
gs
stos
cmp
mov
in
push
and
xchg
std
cmpsl
fldenv
mov
add
jge
mov
enter
imul
insl
sahf
popf
mov
aad
cli
mov
decl
cmp
push
cmp
repnz
jns
int3
iret
cld
pusha
mov
xchg
movsb
fisubrl
stos
lret
insb
cmp
pop
enter
mov
cmc
imul
mov
lods
ja
xchg
cmpsl
dec
mov
mov
lods
xchg
mov
cwtl
mov
orl
cmp
addr16
aas
lret
push
inc
lods
in
test
xor
cltd
push
mov
arpl
insl
push
sbb
add
bound
ret
and
dec
adc
xchg
fistl
pusha
insl
jne
xchg
mov
lcall
lods
cs
shlb
aam
dec
cmpsb
aad
inc
lahf
dec
push
daa
out
jnp
aad
mov
push
jne
icebp
nop
and
mov
in
subb
mov
les
dec
mov
or
pop
add
hlt
push
leave
jne
pusha
push
outsl
or
into
dec
faddl
adc
jecxz
stc
pop
in
mov
gs
cmp
mov
xor
push
jecxz
lret
dec
sub
xchg
movsb
and
outsb
jge
dec
popf
cmp
mov
fs
xor
xor
and
sub
mov
push
add
push
fs
out
xchg
add
xchg
mov
lock
jo
xor
dec
sbb
xchg
pop
movsl
sbb
dec
in
cmp
pop
inc
dec
loop
aas
sti
mov
idivl
cmp
leave
lret
nop
rolb
jne
sbb
cmp
add
lds
es
push
sub
cmp
mov
dec
aad
add
out
jmp
inc
cwtl
xor
es
xchg
cmp
aad
sub
or
jnp
mov
sarb
lcall
dec
ja,pt
or
sub
xchg
or
fadds
adc
mov
sub
nop
pop
mov
fisubrs
cmpsb
jnp
mov
inc
dec
xchg
pop
mov
mov
jnp
or
gs
leave
sbb
cmp
add
int3
fldenv
or
scas
loope
imul
xorl
jno
daa
dec
das
inc
shrl
popf
add
mov
mov
inc
nop
jmp
stos
and
pop
add
jp
cs
add
cmp
pop
adc
pxor
cmp
pop
cmp
cwtl
xchg
sbbb
push
jecxz
jmp
lcall
mov
popf
push
push
ja
xor
loopne
in
sbb
loope
jne
lds
xchg
movsl
test
push
add
and
cmpsb
inc
xchg
sub
cmp
mov
andl
mov
dec
jno
mov
and
jge
mov
add
push
out
lret
cmp
mov
mov
jns
icebp
add
test
cli
push
into
mov
testl
jge
mov
test
jb
adc
or
add
push
or
mov
xor
icebp
aam
rorl
xchg
mov
lock
jne
mov
jmp
aas
jg
jb
push
push
shll
mov
icebp
push
pushf
lock
aad
lea
cli
add
and
subb
add
mov
or
xorps
rol
pushf
aam
cmp
test
dec
jnp
mov
dec
push
pop
or
sub
cmpsb
push
add
dec
pop
mov
ljmp
aam
pop
inc
dec
fadds
adc
xchg
hlt
scas
cmp
xchg
cmpsl
enter
popf
ljmp
mov
shrb
bound
ret
aas
outsl
push
pop
jge
xlat
or
add
mov
lods
ret
negb
xor
loop
in
mov
repnz
dec
movsl
xor
jp
sbbb
cld
mov
rolb
adc
jle
xorb
fisubl
scas
ljmp
pusha
data16
and
mov
xor
cmp
lret
sub
imul
cmp
lret
daa
ret
into
lea
xor
aas
pop
pusha
popa
enter
mov
add
into
push
push
push
mov
test
adc
jecxz
pop
sub
add
test
pop
incl
push
mov
jge
pop
popf
sbb
cli
jbe
dec
dec
aad
push
loope
gs
decb
das
xchg
and
mov
xchg
inc
iret
push
popa
xor
add
mov
loopew
pusha
leave
cli
inc
scas
pop
sbb
lds
shr
hlt
pop
pop
sar
popf
mov
insb
mov
add
add
push
out
jg
jle
test
ret
lock
cli
in
cmp
sbb
notb
nop
rorl
insb
mov
mov
add
loope
es
jns
inc
mov
jnp
mov
movsb
sbb
movsb
sbb
push
daa
andb
sarb
gs
jmp
mov
outsb
jmp
daa
inc
push
ret
out
xchg
jb
addb
dec
aad
aad
mov
hlt
nop
mov
pop
cmp
sub
pop
aad
pusha
jae
sbb
mov
fcoml
enter
pop
rcll
out
jmp
cmpsl
lock
dec
stos
pushf
cmp
and
xchg
decl
cmp
adc
adc
lds
or
lcall
push
mov
push
inc
mov
mov
jns
aam
push
mov
repz
std
aam
int
xchg
add
xor
movsb
xchg
sub
jecxz
jg
mov
popa
js
sub
jne
pop
fisttpl
mov
push
sbb
fiadds
fsub
pushf
shrl
ds
loope
ret
or
aam
mov
mulb
js
inc
jl
add
xchg
inc
sub
pusha
push
jno
jl
in
xchg
fwait
mov
pop
mov
shr
out
jb
xchg
ja
push
cltd
aad
and
das
mov
test
mov
sbb
add
inc
gs
pop
cmpsl
inc
fstps
jae
lock
shr
pushf
fcoms
mov
xor
xorb
pop
mov
pusha
mov
or
adc
pop
or
jl
sbbl
bound
aaa
movsl
inc
add
jge
test
enter
mov
xlat
lea
xchg
les
pop
adc
sub
repnz
add
push
imul
pop
lods
sahf
pop
iret
add
and
leave
mov
test
dec
icebp
xor
hlt
pop
popf
scas
gs
in
adc
mov
aam
sub
xor
jno
mov
mov
ret
fsubrs
push
popf
adc
subb
xchg
add
data16
add
int3
inc
pop
mov
pop
test
and
add
outsb
arpl
pop
or
pusha
leave
negl
fwait
aad
sbb
out
int
add
test
push
test
bound
pop
test
test
sahf
xchg
cmc
dec
add
mov
fsubrl
or
pusha
iret
addr16
aam
loop
fildl
mov
gs
popf
xor
push
dec
popf
or
mov
cmp
outsl
rcrb
jp
scas
jg
or
lahf
jecxz
xlat
sub
mov
test
adc
mov
pop
aad
mov
aas
jp
xchg
aam
add
dec
xor
insb
sar
pop
add
add
mov
jno
adc
xor
mov
test
mov
mov
cmpsb
adc
nop
flds
test
and
adc
cmp
ljmp
std
pusha
roll
jmp
bound
imul
scas
jecxz
xor
mov
fwait
enter
dec
nop
outsb
cmpsl
adc
les
add
dec
iret
xor
pusha
jno
xor
or
lret
cmp
push
inc
movsb
dec
or
mov
mov
jns
or
fisttpll
add
jmp
inc
ret
mov
and
jle
ret
arpl
pop
ljmp
std
mov
call
repnz
pusha
sub
arpl
mov
xchg
add
add
jp
pop
dec
mov
xchg
in
or
iret
sub
add
dec
loop
nop
loop
pushf
inc
pop
add
push
and
popfw
aam
je
adc
mov
lds
add
jns
adc
cmc
jge
or
jo
test
push
sbb
xchg
xor
adc
xchg
ds
mov
lea
idiv
rcrl
les
jle
popf
jle
dec
dec
in
sub
add
mov
adc
jp
jb
push
dec
sbb
leave
lahf
fisubl
in
push
add
pop
and
scas
mov
mov
mov
xor
pusha
or
sbb
mov
es
insl
adc
add
sbb
and
jp
aam
xchg
inc
repz
in
adc
sahf
add
sub
pop
imul
jge
test
aad
in
dec
scas
cwtl
xlat
in
inc
pop
push
fnstenv
cmp
pop
pop
add
cs
test
aad
pop
je
pop
shrl
mov
les
adc
lcall
jae,pt
hlt
inc
lret
call
mov
sahf
hlt
jp
add
sbb
stc
je
call
xlat
addr16
or
mov
xchg
mov
mov
loopne
into
xlat
push
adc
mov
sbb
pop
mov
sbb
or
mov
jle
sbb
mov
mov
fisttps
and
mov
or
addr16
inc
fsubrl
push
mov
je
es
daa
aam
in
idivl
pop
add
pop
jp
inc
je
decb
adc
lahf
es
popf
jge
out
or
dec
add
add
xlat
loop
int
jbe
out
mov
dec
mov
and
sub
mov
mov
sbb
js
aaa
pop
mov
in
and
xlat
daa
repz
loope
push
roll
jl
xor
pop
pop
jmp
push
xchg
push
aad
jbe
push
insl
mov
cmpsb
mov
mov
aad
or
cltd
jg
inc
mov
or
and
sbb
inc
cs
mov
adc
aam
fistps
pop
cwtl
sbb
mov
outsl
or
std
rorb
ss
jge
dec
clc
leave
cmp
sub
jo
std
sbb
addb
mov
or
mov
push
shr
test
cmp
push
sbb
and
rcl
ret
mov
dec
fwait
fs
addl
lock
mov
ljmp
icebp
cmc
dec
mov
jle
pop
outsb
std
add
pop
inc
pop
adc
dec
dec
push
cmp
cmp
addb
cmp
jl
mov
sbb
jl
dec
push
into
xlat
clc
push
out
inc
xchg
in
aad
push
repnz
jge
ss
mov
sbb
xchg
daa
ja
outsl
andb
ret
daa
add
xorps
int3
pop
fsubl
sub
mov
addr16
lea
fwait
sub
inc
pop
lods
loopne
aad
adc
lods
push
into
mov
mov
mov
fisubs
push
add
push
fsts
sbb
or
xor
mov
sti
inc
ja
add
pop
xor
or
pop
sti
sbb
addr16
inc
xchg
cmp
leave
pusha
jno
push
push
cmpsb
std
jle
out
mov
mov
xlat
rol
negb
dec
jmp
subl
mov
lods
add
mov
in
xor
aam
mov
aad
lret
jmp
paddq
rorl
bound
test
out
sbb
mov
popa
sbb
sub
lret
add
push
stos
pop
insb
sbb
pop
mov
test
imul
negl
lock
aam
sub
jne
ja
add
andl
cli
cwtl
xor
addr16
inc
mov
pop
je
mov
test
jns
sbb
inc
mov
in
fistpl
and
mov
mov
adc
or
sub
aad
fwait
mov
loop
cltd
jb
ffree
lods
push
fcoms
pop
lret
sub
pop
pushf
loope
into
push
mov
jg
pop
push
or
cltd
aam
sub
ret
cmc
or
subl
sahf
aad
add
cld
arpl
popa
das
aam
mov
cld
pop
jl
pop
es
lret
pop
ljmp
pushf
jb
ljmp
insb
cwtl
xchg
sub
in
loop
or
aam
mov
jmp
mov
repnz
inc
lock
push
ds
mov
dec
sahf
loopne
ret
pop
call
xor
mov
jae
dec
test
int3
aam
cmp
loop
mov
out
sbb
aaa
fldl
loopne
int3
repz
adc
je
test
sti
jnp
dec
pop
shlb
push
mov
xor
popa
dec
fsubrp
sub
mov
sbb
and
int
inc
sub
aad
xlat
push
pop
sbbb
test
inc
aad
rclb
lcall
mov
test
in
dec
aam
stos
cmp
add
jmp
arpl
sbb
dec
fucom
arpl
testb
xchg
int
sti
push
xchg
ss
aam
fcmovb
add
test
cmp
add
out
jmp
aam
pop
dec
jnp
mov
xchg
xor
add
shlb
mov
in
adc
xor
adc
cmp
and
add
jb
out
mov
xor
mov
sub
xchg
clc
mov
xchg
push
adc
jnp
fwait
push
or
js
mov
aam
sub
jne
lea
inc
jp
stos
in
aad
or
pop
pop
scas
jmp
aaa
loopne
stos
cmp
pop
or
add
xchg
lcall
pushf
cmp
cmpsl
rcl
push
loop
mov
xor
xchg
xchg
cmc
mov
sbb
inc
cli
test
icebp
outsb
shlb
push
iret
insb
cmpsb
inc
pop
push
sub
xor
in
mov
mov
dec
sub
xorl
daa
add
inc
ss
jmp
add
into
rolb
lret
cmp
mov
xchg
and
pop
aad
sub
es
scas
or
mov
inc
lods
sub
and
std
mov
into
push
add
mov
std
ret
jle
stc
fstps
or
xor
dec
fdiv
dec
sub
mov
je
sub
enter
cli
dec
aad
fwait
out
pop
jg
cmp
mov
cwtl
push
frstor
iret
je
popa
rcl
push
cli
cltd
sub
sub
aad
mov
cltd
loope
adc
sbb
mov
ficomps
cmp
xchg
sarl
xlat
fnstcw
sub
stos
lahf
imul
jmp
insb
xchg
nop
jb
les
xor
xor
popa
lret
and
mov
and
adc
mov
dec
mov
aam
cltd
xor
mov
and
addr16
sub
jmp
insl
adcl
and
xorb
rorb
sub
sub
and
popaw
add
repnz
pusha
popa
add
stc
and
mov
cmp
mov
pmulhuw
xchg
mov
daa
in
sub
push
push
xchg
mov
mov
aam
cmp
fsubrs
lret
das
andb
jp
repz
jmp
mov
hlt
fildll
mov
sbb
add
mov
mov
in
push
movb
xor
sbb
xchg
div
test
inc
mov
int
mov
and
aam
or
fcmovu
push
add
mov
cmc
pop
xlat
stos
ret
lcall
mov
insl
or
adc
lcall
lock
mov
or
add
shlb
sbb
cld
and
sub
jg
adc
pop
jmp
mov
inc
mov
jno
add
sbb
pop
sub
mov
mov
xor
movsb
lds
enter
inc
insb
fst
jmp
int3
push
xlat
add
xchg
mov
mov
jb
pop
add
iret
lahf
inc
sub
inc
pop
push
fildll
insl
cmp
bnd
mov
pop
mov
stos
cmc
inc
fbld
out
mov
ror
sub
fs
mov
dec
mov
add
add
push
adc
mov
adc
out
mov
xor
aas
cmp
cli
inc
pop
push
movsl
sti
in
shl
inc
jne
aam
push
jne
adc
fisttps
testl
add
mov
movsl
out
jmp
imul
fmuls
rcr
hlt
cmp
and
aad
adc
fmull
and
daa
dec
loop
pushf
mov
push
dec
test
add
and
push
jae
push
add
test
cmp
cmp
mov
or
push
mov
pop
push
in
mov
mov
push
in
fwait
aaa
js
and
push
and
mov
ror
rcrb
sub
scas
adc
jp
mov
and
daa
push
push
cmp
rcl
scas
stos
rcrl
cld
jl
mov
mov
in
xchg
incl
xorb
push
push
and
ss
fdivl
push
push
outsl
and
shrb
clc
add
sbb
dec
pop
push
inc
sub
push
lds
pop
push
jne
dec
jae
adc
cmpsb
and
orb
xor
push
dec
sub
das
pop
mov
or
jae
add
inc
add
pusha
scas
rol
cwtl
mov
mov
xchg
mov
lahf
push
arpl
jle
aaa
add
cmp
insl
xchg
negb
dec
sbb
ljmp
xchg
adc
mov
sbb
add
movsl
or
inc
xor
out
or
cmp
ds
aad
mov
pop
sub
inc
shll
pop
aas
lods
sub
out
add
movsl
shlb
jnp
push
addr16
call
push
aad
mov
daa
push
mov
sbbb
jmp
mov
sarb
inc
lea
push
fimuls
jmp
enter
jae
mov
out
imul
das
repnz
sub
cmpsl
push
outsl
popa
dec
cmc
je
push
daa
jnp
sbb
and
pop
sub
test
fwait
add
cmp
std
ss
data16
add
and
out
loop
imul
scas
push
or
jecxz
das
and
shll
pop
xchg
jno
fidivs
sbbl
mov
jecxz
fisttpll
dec
mov
mov
test
ret
lret
les
and
adc
sbb
push
and
dec
aad
loope
in
jmp
fcmovnbe
mov
xor
test
dec
push
and
jecxz
arpl
cmpsl
repnz
in
pop
mov
movb
mov
icebp
je
pop
hlt
aad
shll
sahf
pop
adc
fildl
mov
orl
dec
jne
cld
pop
mov
add
leave
mov
idivb
or
stos
lret
movsb
test
dec
mov
aad
out
mov
mov
cmp
and
cmp
push
xchg
lock
arpl
pop
inc
shr
pop
sbb
mov
aas
or
mov
mov
out
leave
and
sub
pop
mov
cmpsb
adc
pusha
sub
subl
add
fisttpl
dec
jo
push
cmpsb
xor
adc
xchg
pop
xchg
rclb
in
pop
jge
inc
add
dec
xor
aam
sub
leave
dec
mov
das
icebp
mov
xchg
lds
fs
aad
mov
sbb
mov
hlt
aaa
adc
add
and
iret
pop
mov
test
movsl
add
jle
movsb
dec
push
xchg
jmp
inc
sbb
adc
bound
xor
sub
rorb
movsl
cmp
pop
mov
std
clc
mov
nop
stos
add
xchg
xorl
mov
cli
pop
scas
jge
sbbb
mov
aad
mov
add
sbb
sub
sbb
ss
push
mov
dec
jmp
inc
inc
in
xchg
inc
pop
fwait
xchg
stc
ds
imul
inc
mov
les
leave
or
test
inc
mov
outsb
mov
jns
cwtl
adc
cmpsl
inc
loop
lret
mov
test
jge
aam
pop
fistps
mov
mov
xor
fdivl
jns
add
mov
cmc
push
cld
call
test
mov
xrelease
les
add
fstpt
mov
ja
push
or
cmpsl
andb
mov
add
add
xchg
pop
pusha
or
stos
xchg
sub
shr
pop
mov
pop
adc
mov
lock
sub
or
test
popa
rcrb
add
sbb
or
mov
fisubs
jecxz
subb
aam
ret
jb
mov
mov
js
imul
repz
outsb
lods
ret
rorl
test
mov
jne
out
add
ret
add
xlat
push
or
jo
push
pop
push
pop
arpl
dec
and
mov
and
imul
add
lock
xchg
lea
jae
outsb
add
roll
adcb
mov
dec
mov
pop
aam
pop
pusha
pop
jne
xchg
lods
xchg
rol
cmp
ljmp
out
dec
test
pop
ret
dec
wrmsr
js
inc
mov
cmp
xchg
jne
cmp
and
call
pop
xchg
jae
mov
nop
loopne,pt
add
xrelease
sbb
add
lret
sub
xlat
popf
xchg
xchg
push
shl
sbb
mov
ds
dec
adc
fbld
aas
je
jge
jecxz
inc
insb
lods
je
test
std
aaa
add
out
pop
xchg
out
sub
pop
pop
daa
pop
dec
push
pop
imul
test
lods
rorb
addb
pop
add
or
xor
mov
cmpsb
xor
nop
adc
cmp
cmc
jns
push
cmp
jl
and
ret
cs
ds
stos
pop
fwait
test
dec
stos
pop
cld
cmp
inc
push
pop
scas
inc
pop
lea
into
xchg
jnp
outsl
popf
iret
pop
jo
sti
inc
je
mov
aam
aad
add
adc
and
ss
inc
mov
mov
pop
pushf
xchg
in
leave
dec
imul
rclb
xlat
push
pop
mov
sbb
push
rorl
popa
sti
mulb
fistpll
cmp
pusha
outsl
cmp
adc
push
call
xor
mov
push
xchg
rcrl
addl
pusha
dec
xchg
add
xlat
mov
imul
pop
mov
jge
bound
test
jl
add
adc
sbb
xchg
or
test
jbe
pusha
test
push
imul
xchg
js
mov
mov
and
pop
nop
jb
dec
xor
add
out
fs
jl
mov
ss
sbb
in
jae
fimull
call
xchg
xlat
and
ss
adc
and
sbb
in
mov
mov
mov
pop
or
cmp
hlt
add
stos
outsl
adc
dec
mov
lock
insb
add
xchg
fadds
ss
mov
lods
mov
jp
jno
inc
call
mov
xchg
sti
mov
add
mov
adc
inc
jge
fsubp
jecxz
dec
nop
lea
add
dec
in
pop
jno
out
pop
decb
aad
mov
mov
cmpb
leave
adc
or
pop
mov
js
sub
dec
pop
add
push
ja
dec
add
in
mov
mov
sbb
pop
dec
das
inc
addb
dec
mov
mov
add
adc
js
in
aam
sti
mov
xor
or
add
loop
mov
aam
fwait
add
jmp
inc
push
mov
sbb
pushf
dec
adc
rolb
into
push
mov
lcall
scas
inc
or
jb
fs
jbe
call
ret
lds
xchg
stos
pop
mov
xchg
inc
adc
leave
int3
sbb
aam
loopne
sbb
lock
mov
and
jne
call
aas
pop
xchg
xchg
mov
repz
sub
subb
sbb
mov
pushf
in
mov
leave
iret
mov
aam
cs
xchg
popa
and
dec
iret
pop
aaa
mov
xor
shrl
mov
rclb
xchg
je
cmp
dec
push
add
push
popf
aam
lret
inc
sub
xor
movl
pusha
rcrl
les
mov
popf
ficoms
mov
mov
add
lods
outsb
mov
jno
jb
inc
and
mov
adc
ret
divb
pop
adc
sub
jo
mov
loopne
loop
or
add
mov
pop
andl
adc
aam
xchg
adc
lea
jno
loope
add
test
popf
ljmp
mov
shlb
aam
sub
or
push
xor
aam
rcl
mov
mov
pushf
cmp
lods
addl
push
rcl
hlt
scas
out
movsb
jge
fs
out
cltd
loopne
xchg
jl
dec
pop
fwait
int
int3
cltd
enter
xor
add
cmpsl
adc
orl
add
pop
into
loop
aaa
shr
pop
xor
xlat
mov
xchg
jnp
test
jmp
push
outsb
sahf
jp
lods
xor
mov
mov
rcrb
fs
cmc
inc
outsb
ljmp
jo
jmp
jmp
aaa
arpl
and
rol
xchg
cmp
lods
mov
das
mov
js
test
push
and
dec
push
popa
cs
aas
adc
xor
int3
inc
cs
xlat
lock
adc
lret
sbb
test
push
pusha
add
bound
es
dec
and
inc
aas
daa
pop
cld
cmp
outsb
ss
xchg
lds
xor
jb
mov
xor
xor
lea
inc
loop
pop
mov
mov
call
movsb
mov
push
mov
sub
mov
add
mov
int
pop
into
repnz
aam
sbb
and
sub
loopne
rcl
xor
mov
mov
or
push
fdivrl
into
mov
adc
unpckhps
scas
cmpsl
adcb
cmc
mov
sbb
xor
add
lea
or
jecxz
call
aad
jae
jne
ret
mov
jns
mov
inc
push
cli
loopne
dec
xor
xchg
aaa
xchg
outsl
xchg
push
pop
iret
aam
hlt
stos
jge
lahf
mov
test
pusha
adc
imul
sbb
into
fcmovnbe
cli
xchg
adc
or
mov
jno
jae
adc
les
cmp
pusha
gs
mov
sub
push
mov
loop
dec
fisubrl
inc
sbbb
push
jo
cmp
xchg
out
mov
out
jmp
add
stos
or
dec
add
inc
jns
jmp
je
or
adc
inc
or
aam
lahf
cmc
cmc
xor
mov
add
and
arpl
in
outsl
pop
fcomip
sub
sub
in
popf
mov
insl
push
mov
aas
insl
scas
jo
xor
pop
push
pusha
sbb
adc
or
mov
dec
sbb
add
cmp
pop
imul
jae
lds
jle
lret
push
add
rep
inc
out
add
jnp
rorb
xchg
add
mov
sub
dec
mov
in
inc
xchg
insl
notl
add
rcrb
rcpps
stc
pop
sub
aam
enter
arpl
pop
mov
loope
sub
in
and
sbb
das
cli
daa
pop
ret
js
dec
mov
push
jmp
pop
push
push
add
mov
dec
aam
vmovups
add
push
sahf
pop
xchg
clc
xor
into
add
insb
outsb
out
cs
aaa
repz
mov
insl
sahf
clc
xchg
sti
popa
add
mov
adc
pop
push
lretw
ss
pop
inc
aam
mov
jecxz
jg
in
xchg
inc
adc
faddl
pusha
mov
flds
lret
shl
fists
mov
add
fcmovne
psubd
hlt
rcll
ja
xor
xchg
pop
add
enter
lret
data16
in
sub
dec
add
fs
fwait
pusha
aaa
pop
repnz
sahf
fst
and
push
mov
icebp
sbb
inc
add
mov
sahf
cld
lds
out
mov
jae
cwtl
xor
lahf
test
sbb
push
dec
int3
jle
xor
loopne
insb
push
pop
incl
fs
in
cltd
or
mov
imul
pushf
nop
adc
mov
pusha
add
or
sbb
pop
pushf
pop
popa
insb
loop
or
sub
fsubl
pop
lock
pop
mov
icebp
test
stos
sbb
daa
xchg
adc
add
jo
push
fwait
sbb
xchg
pop
imul
jno
lahf
out
push
adc
ja
xchg
fs
mov
fstpt
push
lods
bound
mov
sub
jge
mov
push
dec
jge,pt
xor
rclb
mov
imulb
jl
pop
mov
movsl
cli
jp
sbb
push
imul
pop
movl
hlt
push
sub
insl
xchg
mov
fnsave
out
and
add
aad
jge
cmp
mov
xchg
enter
mov
mov
in
push
lods
adc
out
out
mov
jns
add
xchg
push
insb
or
add
jp
xor
gs
loopne
cmp
stc
adc
cmpsb
push
int
fiadds
sbb
mov
adc
leave
mov
sub
and
jg
add
xchg
jns
dec
mov
mov
cmp
test
jge
mov
or
subl
popw
fwait
xor
jg
testl
fbstp
adc
shr
mov
inc
xor
out
stos
fs
lock
filds
hlt
mov
push
jle
sti
mov
std
pop
xor
push
ror
pop
aas
push
pop
in
lods
jge
fucom
pop
adc
xor
les
scas
pop
pand
pusha
in
xchg
pop
decl
ja
and
hlt
mov
xchg
sub
and
aad
push
xchg
adc
lret
sti
or
jmp
out
pop
pop
outsl
mov
xchg
xchg
adc
pop
sub
jno
add
cmp
mov
pusha
inc
rorl
pop
bound
or
ret
in
xor
push
aas
jp
bnd
lea
jne
sbb
mov
test
and
stc
add
lret
or
cmpsl
sti
ds
insb
sub
xchg
add
call
std
mov
lds
add
stos
or
sub
mov
xor
add
ret
nop
lret
pushl
shll
mov
movsl
push
cmp
cld
mov
mov
ret
lret
das
sbb
ficoms
adc
mov
mov
es
idivl
pusha
xchg
sahf
cwtl
jnp
jg
shll
aad
aad
jmp
ja
stc
pop
out
jge
sti
add
add
sub
dec
and
mov
movsb
add
ja
inc
add
gs
cmpsl
lahf
xor
mov
xchg
test
inc
cmpsb
xor
jnp
rcr
packssdw
add
cmp
dec
mov
in
pop
jnp
das
dec
mov
pop
add
mov
push
adc
insl
and
jge
outsb
push
add
test
outsl
jl
loop
lcall
jg
sub
popf
add
push
push
mov
jle
and
or
jg
mov
mov
iret
mov
jbe
movsb
inc
mov
push
sbb
jge
lods
or
mov
adc
push
mov
or
xor
insb
lcall
adc
jbe,pn
ja
outsb
push
aaa
cmp
shrb
push
leave
les
mov
lret
push
pop
lds
xchg
and
loop
scas
rcrb
dec
movsb
or
iret
mov
add
mov
add
loop
sbb
add
mov
xchg
xchg
rcrb
mov
lods
les
pop
hlt
mov
scas
popa
adc
adc
cmpb
mov
sti
sub
out
adc
rolb
pop
inc
or
scas
inc
mov
testl
cld
push
push
cmp
imull
iret
jae
add
cmp
je
ret
dec
lock
sub
jp
clc
clc
test
cmp
sarb
mov
jo
rcrb
outsl
sub
shl
mov
inc
movsl
push
ljmp
jo
inc
addb
fisubs
pushf
or
outsl
and
ss
mov
mov
mov
outsl
or
aam
mov
push
popf
sarb
movsb
leave
mov
adc
mov
scas
push
repnz
xchg
insb
out
or
hlt
pop
cwtl
out
nop
sbb
or
or
mov
xchg
int3
jecxz
fldenv
popa
pop
pop
int3
hlt
add
push
xchg
cmp
arpl
add
inc
in
adc
iret
rorl
stc
icebp
xlat
add
repnz
adc
lods
mov
cld
mov
stos
cld
jmp
pop
test
sub
enter
cmc
push
and
push
adc
inc
cwtl
out
rep
add
popf
pop
loope
hlt
xorl
fwait
push
in
cmp
dec
xchg
and
shlb
mov
cmp
jecxz
insb
push
sbb
jno
addb
test
into
jno
jp
clc
sub
mov
adc
je
fbstp
test
push
add
in
in
or
arpl
pop
and
std
sub
not
and
je
jae
xor
out
mov
adc
test
movb
push
ja
orl
push
pop
jbe
jg
mov
xor
sbb
mov
int3
rcr
popa
dec
push
rcl
mov
loop
js
mov
test
push
mov
movsl
decb
push
push
push
loopne
icebp
aad
mov
dec
popf
jns
inc
mov
dec
add
xor
mov
imul
out
ljmp
add
inc
in
subl
jb
out
add
xchg
mov
sbb
ja
arpl
fdivrl
push
and
mov
iret
or
ret
mov
jle
clc
shrl
sbb
pusha
movsb
les
xor
insb
sbb
adc
out
mov
subb
adc
fdivl
mov
lret
adc
daa
nop
cmp
je
sub
imul
mov
sbb
decb
ss
repz
and
dec
jno
mov
roll
sub
push
pop
inc
dec
sbb
jno
in
pop
sub
out
xor
mov
add
stos
or
ljmp
gs
cs
or
dec
xchg
lahf
mov
loope
lods
data16
adc
add
mov
es
mov
dec
jge
jmp
cltd
xchg
lods
das
fidivl
dec
inc
insb
sub
dec
test
xorb
push
fsts
pop
out
and
mov
xlat
shrl
and
test
pop
jmp
dec
add
repnz
imul
mov
into
insl
or
sbb
loope
sbb
shr
xor
inc
xor
xor
in
stc
fmuls
lods
fsubr
sar
shl
cmp
jae
push
lret
mov
push
movsl
lret
into
mov
cld
aam
xchg
cmp
rolb
imul
jnp
call
mov
push
out
sub
mov
mov
pusha
sub
push
cli
mov
mov
rcrl
pop
cmp
test
test
jmp
shrb
jmp
leave
ss
jg
adc
lods
ljmp
inc
out
clc
pop
lahf
jb
pop
movsl
mov
add
div
mov
push
mov
sbb
jle
cmp
xchg
test
aad
jmp
fiadds
stos
and
sti
pushf
ds
push
add
dec
mov
imul
dec
add
push
add
in
mov
xor
int3
data16
std
xchg
leave
aas
mov
aaa
pop
mov
mov
je
xchg
dec
bound
fldz
sub
arpl
mov
or
mov
icebp
xchg
aad
jge
cmp
arpl
cmp
aam
out
xor
int
movsl
pop
loopne
pop
rclb
sub
addr16
out
mov
pusha
iret
lods
dec
inc
pop
mov
movsl
lahf
stos
in
shrb
xchg
aas
fsubr
loope
aad
fwait
push
jecxz
lret
nop
outsb
mov
shrl
add
test
ja
pop
in
jnp
mov
xchg
pop
rorl
mov
lods
jg
mov
fsts
stos
ficoml
mov
test
aam
jo
pop
scas
clc
mov
lods
test
jp
sbbb
inc
andl
aam
mov
ja
xchg
popa
sub
ja
js
pop
test
loop
inc
loope
push
ret
pop
jo
mov
mov
mov
pop
push
mov
pop
or
adc
mov
in
mov
add
add
mov
fs
pop
push
cmp
push
loop
or
sub
or
mov
mov
inc
sbb
movsl
cmp
lock
fst
jne
stc
test
je
ljmp
pop
ljmp
jno
cwtl
lea
mov
sbb
cmp
pop
repz
mov
daa
sub
pop
mov
stos
sub
push
pop
int
add
fsub
mov
addr16
push
adc
fwait
out
data16
test
stc
imul
in
xor
cmp
nop
add
xchg
insl
gs
sub
pop
mov
fcoms
push
loope,pn
aad
add
and
outsb
ficomps
lea
jne
dec
mov
adc
push
aad
inc
icebp
lret
aas
mov
cmp
or
int3
or
ds
and
dec
arpl
lods
ret
mov
mov
fsts
aam
repz
or
cmp
pop
jne
das
filds
repnz
sub
pop
rcrl
adc
ss
pop
insb
gs
xchg
cmpsl
pop
cs
inc
or
int3
iret
aad
pop
push
or
mov
push
sub
data16
add
push
mov
pop
leave
jb
xlat
lock
sub
push
inc
stos
loop
push
imul
enter
outsl
decb
pusha
rcrl
push
fcoms
pushf
pop
imul
xchg
fwait
aad
sbb
popa
adc
adc
xor
mov
loopne
inc
test
adc
jo
lds
dec
ret
lret
pop
fwait
add
out
fstl
and
pop
xchg
movsb
xor
mov
outsl
dec
jp
xchg
aam
xor
inc
test
jae
mov
loope
mov
das
aam
test
rol
mulb
std
pusha
cmp
lret
imul
and
ficomps
inc
mov
sbb
xor
mov
jnp
push
filds
pop
cltd
sub
outsl
mov
sti
ljmp
es
test
not
xchg
adc
xor
sub
dec
mov
push
sbbb
cli
cmp
sbbb
lahf
or
out
out
pop
inc
inc
add
sub
lea
scas
js
rol
into
sbb
loope
lods
pop
add
xor
dec
add
test
push
loopne
stos
aad
push
call
outsb
pusha
stos
pop
sbb
out
into
sub
xor
xchg
sub
sti
xchg
test
push
add
sub
andb
jg
push
jne
es
imul
mov
rcrl
add
fdivrl
push
stc
add
sbb
add
xlat
inc
popf
es
int3
or
jo
sti
mov
cmpsl
dec
jp
mov
xor
fistpl
xchg
and
or
xlat
sbb
loop
lahf
je
inc
je
jmp
aaa
push
cmpsb
jecxz
aad
jge
xor
mov
dec
nop
sahf
push
mov
leave
mov
fldcw
imul
outsl
iret
arpl
push
mov
mov
add
sbb
mov
pop
xchg
xchg
jnp
push
rcl
sti
jbe
push
jb
mov
pop
cs
divl
fisttps
or
xchg
pop
ljmp
pop
das
cli
add
pop
xchg
lahf
push
cs
imul
andb
or
shll
pusha
mov
fcoms
fisttpl
pop
pop
inc
pop
dec
prefetch
or
sbb
pusha
mov
jl
pop
mov
outsl
add
call
out
inc
cmp
fs
cmc
lods
add
mov
ss
mov
insl
jbe
addr16
xor
mov
dec
xor
mov
cld
movsb
sub
cli
out
mov
push
xor
lds
mov
movsb
idivb
jns
std
arpl
shrb
ljmp
pop
mov
pusha
mov
dec
xchg
mov
leave
in
fwait
pushf
sbb
add
test
sub
and
enter
fwait
aam
fs
adc
int
or
xchg
jecxz
aam
leave
inc
in
cld
adc
mov
lea
hlt
add
and
pop
lret
fs
mov
xor
xlat
cmp
pop
pop
rcll
and
icebp
mov
sbb
adc
jge
mov
pop
adc
loopne
iret
mov
push
sub
mov
cmc
add
sbb
mov
inc
in
adc
pushf
out
mov
sbb
sub
dec
jbe
jmp
push
lahf
adc
divb
je
sahf
ret
or
jae
jnp
scas
repz
ss
xchg
sbb
pop
cmp
lock
sub
cmpsl
sbb
add
je
mov
aam
cmc
sbb
push
inc
xor
mov
jge
out
mov
mov
mov
loope
ret
add
mov
arpl
add
jo
lcall
loopne
adc
push
movups
add
cmp
hlt
sub
aas
popa
shll
fcomps
push
imul
mov
pop
fstpt
lret
test
xchg
jnp
ret
leave
enter
insl
push
mov
pop
dec
pop
inc
or
dec
and
cmp
lret
jo
movhps
sub
push
icebp
loop
xor
pop
stc
sbb
xchg
push
mov
xor
push
inc
adc
cmpsl
stos
sbb
test
push
ja
xchg
pop
data16
pop
jge
sti
mov
adc
negl
out
and
adc
icebp
mov
cmpb
insl
or
sti
and
jno
cltd
inc
jp
pop
loope
ja
outsw
push
cld
imulb
sub
pop
pushf
pusha
sbb
push
arpl
in
add
stc
aad
pop
mov
xchg
cmp
push
movsb
xor
sub
pop
stos
repz
mov
or
xchg
sbb
add
and
pop
mov
mov
adc
mov
lcall
xchg
xchg
shl
repz
add
add
pop
sbb
xor
rcrl
mov
add
lods
stos
jg
pusha
in
dec
jp
aam
sub
mov
mov
xchg
mov
rorb
mov
jecxz
addl
ret
bound
mov
mov
mov
sbb
es
call
pop
push
mov
xor
fucomip
test
pop
mov
pop
dec
xchg
push
or
add
int3
loopne
or
sbb
sti
repz
repnz
xchg
lock
pop
in
paddq
cmp
dec
aaa
mov
mov
stos
sub
mov
clc
and
xor
scas
pushf
nop
xchg
mov
pop
mov
dec
lods
leave
repz
push
in
mov
imul
sub
in
jbe
inc
pop
loop
push
imul
dec
call
loope
stc
mov
mov
push
icebp
loop
loop
aad
xchg
mov
push
cmpsb
out
sbb
outsl
xlat
jge
aam
orl
data16
inc
and
cmp
mov
pop
mov
mov
movsl
out
jg
cmp
mov
add
fwait
cld
inc
cli
loopne
pop
jne
arpl
out
in
pop
loop
bound
mov
das
pop
inc
int3
hlt
sbb
inc
and
imul
and
loopne
lret
inc
sbb
jb
or
aad
pop
movsb
stc
inc
pop
xlat
lea
add
sbb
stos
pusha
lds
mov
aad
outsb
popf
or
sub
iret
movsb
push
inc
cmpsb
xor
push
jb
mov
rcrl
xchg
hlt
and
in
pop
inc
in
movsb
push
in
outsb
push
cmp
mov
cmpsb
xchg
cmp
sbb
je
fucomi
add
add
jnp
repz
ss
insl
sbb
cs
dec
fnstenv
xor
or
mov
adcl
cmp
xchg
pusha
mov
outsb
push
cmp
jne
bound
jecxz
xchg
ret
xlat
pop
pop
xor
dec
icebp
rcl
sbb
push
dec
cli
push
xchg
mov
jnp
pop
dec
dec
mov
xor
insl
xor
aad
imul
inc
leave
mov
inc
mov
outsb
out
loop
xor
inc
das
dec
mov
jb
pop
or
mov
pop
pop
push
cltd
lret
jnp
mov
cs
push
out
sub
jb
push
mov
xchg
add
in
and
loopne
add
push
push
int3
push
jb
outsb
sbb
sbb
and
or
pop
mov
mov
je
xor
ljmp
dec
imul
cwtl
icebp
cmp
not
cmp
nop
and
pop
pop
insb
movsl
sub
mov
pushf
inc
sbb
cmp
js
mov
lret
repnz
ja
dec
into
lods
outsb
add
ds
sub
fisubs
mov
pop
js
pop
std
pop
push
cltd
fwait
dec
add
fcompl
jg
or
jbe
in
imul
and
and
pop
add
shll
enter
pusha
mov
std
xor
inc
pop
adc
add
andl
mov
jg
mov
add
fadd
repnz
popf
xchg
mov
push
in
inc
push
sbb
push
xchg
adc
icebp
xlat
out
icebp
insb
push
arpl
sarb
adc
rclb
sub
outsb
mov
sbb
xchg
shlb
fidivl
data16
fld1
pop
dec
mov
aam
lock
xor
addb
lods
insl
aad
mov
aad
je
add
mov
testl
popa
add
mov
sub
cmc
xor
pop
mov
jae
imul
cltd
pop
sbb
fdivrs
int
aam
cmp
in
ss
inc
into
repnz
mov
or
movsb
fwait
xchg
ficoml
mov
sub
test
shrl
pop
cmpsb
jnp
xchg
dec
and
pop
sub
xchg
push
sbb
inc
ds
or
testl
add
outsb
push
iret
xchg
sbb
and
inc
mov
rorl
add
xor
mov
pop
je
xchg
xchg
mov
int3
pop
pop
and
jg
sub
pop
pop
flds
std
sub
fistl
subb
rorb
lods
jmp
test
in
adc
and
mov
xchg
and
popa
xor
sub
or
scas
dec
cmpsl
sub
sbb
jg
mov
aam
sahf
dec
add
jne
loope
jno
into
push
push
insb
int3
in
pop
mov
mov
fisubl
or
aam
mov
lds
aad
jp
stc
call
jbe
xlat
jge
add
mov
or
sbb
add
fcmovnbe
and
mov
test
loope
push
inc
push
and
fildll
pop
mov
and
push
pop
imul
add
out
repz
icebp
sbb
jne
push
xor
aam
xchg
xor
outsl
push
ja
cli
dec
sbb
mov
fs
or
shlb
test
push
addr16
pop
mov
movsl
insl
pop
push
data16
insl
cmp
jg
add
or
jmp
push
pop
mov
aam
je
cmp
faddl
je
imul
xchg
or
mov
insb
dec
or
aas
or
sbb
aam
pop
add
add
in
and
pop
scas
hlt
aas
mov
pop
mov
insb
push
out
mov
test
push
insl
addr16
lds
add
xor
mov
mov
faddp
add
test
pop
cmpsl
mov
mov
sahf
repnz
inc
mov
lahf
rol
fs
and
inc
fiadds
mov
lea
in
cmpsb
pusha
mov
xchg
icebp
jno
mov
inc
jmp
push
mov
xor
xchg
shlb
loope
lahf
xchg
je
aam
and
cmp
pop
aas
mov
xchg
xor
sahf
cmpsl
sbb
mov
outsb
sub
pop
stc
cwtl
add
popa
inc
pop
out
xor
cmc
push
inc
inc
cmp
mov
adc
int3
pop
xchg
out
repnz
push
mov
dec
or
insl
and
push
insl
fimuls
sub
pop
add
adc
xchg
jge
add
fmulp
cmp
add
mov
sahf
test
stos
and
push
xor
or
lahf
sub
jns
int3
mov
leave
push
add
add
dec
mov
jge
xchg
xchg
push
add
loopne
movsl
xor
or
fs
mov
hlt
mov
bound
dec
or
fisttpll
pop
xor
or
daa
mov
xchg
outsb
enter
mov
stos
xchg
mov
dec
cmp
mov
std
inc
je
mov
and
cltd
repz
leave
inc
mov
shrb
dec
sbb
mov
pop
push
gs
cld
add
mov
sub
sbb
xchg
inc
push
sahf
sar
pop
in
sbb
int3
cmpsb
add
notl
xor
das
dec
inc
mov
xor
dec
add
pop
inc
jns
sub
gs
fmul
cmpsl
aad
jbe
push
lock
div
mov
mov
jno
jb
cmc
mov
in
cmp
out
and
or
cli
mov
daa
add
mov
and
add
pop
jg
das
and
les
cmp
lods
vsqrtpd
add
xor
adc
xorb
inc
push
in
adc
dec
dec
dec
mov
lods
shlb
mov
dec
mov
add
dec
popf
push
aaa
xchg
fs
dec
arpl
mov
les
mov
insb
clc
test
mov
mov
xchg
mov
aam
sbb
orl
aaa
aad
push
pop
cmpsb
aad
push
lock
pop
mov
pushf
jmp
xor
pop
xchg
pop
fs
xchg
adc
cld
mov
or
neg
pop
add
push
inc
lds
or
and
lods
push
inc
or
or
in
repz
nop
lahf
sbb
and
pop
movsl
cmp
xlat
aam
dec
pop
in
jl
movsbl
lahf
xchg
rolb
outsb
inc
mov
adc
sub
in
test
pusha
jge
xorl
aam
loopne
sbb
adc
in
stc
pop
enter
dec
pop
fdivr
pop
adc
jmp
pop
push
lahf
push
pop
dec
aad
dec
pushf
cwtl
xor
dec
xor
notl
cs
push
jle
aas
xor
add
repnz
into
ss
xlat
jns
adc
xor
cmp
push
inc
adc
mov
fs
pop
sbb
lods
js
jmp
rcrb
idivl
imul
cmp
cmpsl
out
pop
imul
fisubs
dec
ror
add
fnstsw
inc
les
movsb
inc
clc
fs
sbb
insl
inc
test
shrb
jl
cmp
js
subl
push
or
xor
add
pop
cmp
stos
adc
inc
jp
cmp
sbb
test
jp
adc
push
movsb
sbb
mov
xor
rolb
jl
xchg
and
push
jge
adc
and
sbb
lret
fstp
aam
or
pusha
addr16
loopne
rorb
imul
outsl
arpl
mov
adcl
pop
pop
or
data16
push
pop
inc
aad
adc
fcoml
sbb
adc
adc
rcll
pop
jne
int
popf
mov
sub
cmp
lods
add
je
loope
push
or
test
xchg
loopne
dec
arpl
or
xorb
inc
outsl
add
push
cmc
push
daa
ret
mov
pop
and
cmp
repz
repz
aad
pop
aas
push
add
cltd
and
leave
xor
cld
and
fldl
jmp
jmp
dec
cwtl
xchg
repnz
mov
mov
out
jnp
into
add
mov
dec
jg
jmp
subl
mov
mov
push
xor
sbb
lcall
bts
in
push
aad
xchg
test
sqrtps
bound
and
push
shlb
into
add
mov
loope
cmc
sbb
add
cmp
frstor
and
outsb
js
mov
inc
enter
mov
lret
lods
inc
mov
sarb
add
sub
lds
adc
pop
adc
push
in
add
bound
pop
add
jle
and
loopne
xor
push
hlt
mov
int
imul
enter
mov
dec
dec
cltd
popf
cmpsb
adc
pop
scas
adc
dec
fsubl
xchg
insl
mov
pop
pop
push
xchg
enter
xor
mov
hlt
clc
pop
dec
mov
jl
sbb
aad
int
sbb
inc
sub
mov
data16
mov
pop
int3
jne
pop
rol
cmpsl
jp
int3
push
aam
jbe
mov
in
xor
sub
pop
call
call
pop
inc
adc
test
rcrl
bound
push
pop
pop
add
cmp
test
mov
or
in
or
add
mov
pop
inc
hlt
add
sahf
and
push
jge
fdivrl
xchg
xor
mov
jnp
ja
pushf
mov
mov
ja
cmovle
es
cmpsb
rcrl
std
dec
int3
lock
jle
ds
mov
inc
cld
jno
xchg
inc
pop
or
lods
lret
dec
fs
or
xchg
icebp
addl
out
and
add
jno
jbe
fistps
push
jo
xchg
add
les
lahf
pop
adc
testb
adc
sbb
fstps
mov
dec
pushf
push
subl
and
pop
and
xor
aam
push
jmp
sub
mov
stos
dec
test
mov
mov
xchg
sbb
fnstcw
ljmp
inc
push
cmp
and
mov
lds
movsl
fwait
out
stos
inc
and
xchg
fwait
mov
or
jge
fs
or
pop
pop
sbb
xor
aas
aas
movsb
cmp
in
aam
outsb
mov
dec
sbb
jl
add
xor
ret
inc
cmpsl
pop
out
mov
sbb
das
mov
sbbl
mov
pop
inc
xor
mov
cmp
sub
les
cwtl
lds
cs
pop
xchg
xor
cwtl
aam
jbe
sbb
mov
mov
movsb
push
xchg
aam
jae
das
js
leave
pop
mov
cmp
jne
js
in
pop
adc
das
ja
ret
push
add
xchg
pop
jmp
mov
xchg
or
fsubrs
in
pop
je
stos
in
jmp
mov
xor
mov
dec
mov
pusha
popf
ljmp
dec
mov
lahf
xchg
lret
lahf
in
jae
jno
in
mov
aad
sti
aaa
sub
xor
mov
ror
jmp
fldz
pop
sbb
testl
mov
imul
inc
les
aam
adc
mov
pop
pop
sti
dec
iret
inc
cmp
dec
shr
jbe
mov
mov
cmp
pop
jp
std
and
adc
pop
clc
fwait
add
mulb
inc
mov
jp
ja
mov
pop
mov
sub
adc
std
xchg
pop
popa
stos
xor
les
dec
pop
mov
popa
jns
mov
inc
xor
jae
and
cmp
adc
lea
sar
mov
mov
mov
inc
mov
add
jg
push
jge
fists
inc
mov
cmpsb
adc
movsl
dec
mov
mov
std
fmulp
mov
int
and
mov
mov
loope
or
gs
push
cmp
xor
sbb
stos
xlat
outsl
fcmove
xchg
mov
imul
pop
mov
out
jo
jno
outsb
mov
adc
lahf
pop
cmp
or
unpcklps
sub
int
sbb
and
mov
cli
int
xchg
imul
jecxz
mov
jl
mov
enter
inc
mov
xchg
loop
jg
call
outsl
mulb
cld
pop
jge
and
aam
push
sub
aad
aas
inc
outsb
lret
xor
dec
mov
add
cmpsl
pop
push
pusha
popa
xor
leave
loop
or
mov
jle
pop
jno
sub
fs
jbe
add
adc
and
arpl
sub
mov
fistpll
dec
fstl
xchg
cs
ds
push
pop
adc
mov
aam
mov
inc
int3
xchg
mov
insl
and
pusha
mov
imul
push
cltd
notl
xchg
add
dec
mov
aam
fs
mov
inc
mov
arpl
mov
int3
stos
mov
lods
sub
mov
push
iret
and
cld
lahf
pop
fdiv
push
add
sbb
xor
into
cmp
and
pop
pop
loope
and
cltd
jmp
adc
cli
je
push
xchg
int3
sub
repnz
jnp
dec
das
push
cmpsl
cld
sbb
cmp
mov
lcall
sti
push
ret
pop
cli
in
push
rol
push
mov
in
fstps
and
or
aam
lret
aam
sbb
pop
push
popa
int
insb
sub
xchg
imul
mov
mov
hlt
or
roll
scas
push
std
insl
mov
xchg
add
loopne
adc
mov
dec
lds
push
jle
lods
bound
or
jge
mov
cli
cwtl
sbb
lret
in
sub
xor
adc
or
in
jbe
mov
push
outsb
ret
lods
mov
pop
std
mov
pop
or
lods
or
clc
add
inc
addb
add
push
out
add
imul
aam
outsb
sti
out
lret
mov
ja
std
jmp
in
add
rorb
push
ljmp
leave
mov
add
clc
adc
insb
nop
pop
rcrl
sbb
inc
adcb
in
xchg
inc
mov
mov
jns
pusha
jmp
addl
or
jo
jecxz
pop
or
movsl
add
js
std
add
sbb
add
mov
jmp
out
popf
adc
pop
sbb
cwtl
adc
bswap
lock
pop
push
in
outsl
out
adc
push
mov
fnsave
and
mov
jnp
sarb
add
inc
sbb
or
mov
ss
jb
or
bound
mov
in
aad
add
mov
arpl
xor
jae
mov
inc
insl
ja
sbb
cmp
add
or
fldenv
test
xchg
xlat
das
dec
popa
push
cmpsb
int
mov
dec
cltd
aam
ljmp
mov
leave
js
pop
movsl
sub
inc
inc
adc
mov
jmp
jecxz
fst
inc
push
into
les
fmulp
stc
lods
cmp
mov
xchg
jg
add
xchg
pop
setg
pop
fistpll
adc
psrld
repnz
cmp
js
sahf
repz
push
sbb
xor
jp
mov
xor
sub
add
in
lcall
addr16
jb
jecxz
rcr
ror
shlb
lahf
clc
loopne
aad
mov
jns
pop
sub
imul
cltd
add
outsb
jno
or
xchg
xchg
out
outsb
mov
cmpsb
imul
mov
push
testb
cli
mov
test
add
cwtl
mov
adc
rorl
jge
fst
and
xchg
cmpl
lret
es
sub
dec
pop
or
dec
mov
or
push
add
iret
fildll
insb
sub
jnp
pushf
fidivrl
adc
popf
int3
insb
jg
inc
push
lahf
imul
out
into
xchg
pop
mov
dec
insl
adc
jnp
test
aam
cmpl
stos
add
and
and
fwait
out
inc
loopne
insl
into
shrl
push
mulb
lret
pop
icebp
inc
dec
ffree
mov
jle
test
push
in
cltd
push
test
push
sbb
sbb
mov
aaa
push
add
lret
and
fwait
shr
out
push
push
inc
stos
xchg
fstps
mov
inc
jns
add
pop
notl
jbe
daa
and
xchg
jmp
cmp
mov
push
scas
pop
jle
pop
sub
icebp
stos
xor
jecxz
jne
out
popf
jl
sahf
shrl
mov
mov
sub
mov
cwtl
and
addr16
mov
mov
pushf
push
rorb
jmp
dec
scas
ja
dec
bound
insl
add
out
jge
pop
dec
mov
ret
mov
enter
mov
lds
mov
add
leave
add
pop
rclb
pop
pop
rol
inc
pop
sahf
mov
jp
sub
mov
pop
cmpsl
out
clc
jge
add
repz
pop
sbb
inc
lret
aad
add
dec
sti
inc
mov
push
jecxz
mov
push
inc
jae
lahf
mov
inc
sub
sbb
rcr
rolb
or
add
and
cmp
mov
sub
dec
ret
adc
xor
jmp
nop
pop
adc
pop
iret
daa
cwtl
mov
pop
dec
xchg
in
js
add
xchg
arpl
sti
lods
mov
pop
mov
add
lea
mov
es
ja
sub
mov
aaa
dec
mov
push
fisttps
ja
cltd
mul
push
mov
or
sti
mov
xlat
nop
out
in
std
arpl
xchg
aas
rorl
js
aad
mov
cmp
and
or
xchg
adc
adc
inc
xchg
inc
incl
cwtl
pop
call
jmp
out
fidivrs
mov
in
in
sahf
das
and
pop
push
cmc
or
sub
movsl
fisttps
xor
jg
add
jne
ja
and
and
lods
notl
insl
inc
add
aad
aam
mov
int3
mov
fst
mov
jb
leave
aaa
inc
xchg
mov
test
aam
and
aaa
inc
iret
sbb
pop
aaa
into
repnz
mov
pop
les
sbb
or
and
clc
das
loopne
mov
stos
jns
mov
int
aam
sbbl
cmp
pop
cmp
rolb
dec
fs
add
sbb
stos
fs
repnz
pop
push
jmp
mov
iret
scas
pop
mov
es
mov
mov
add
cmpsl
jl
mov
jle
mov
shr
lods
lds
jge
xchg
pusha
xchg
mov
aad
and
rcrb
fdivp
xor
scas
dec
lods
cli
int
cmp
clc
mov
add
scas
add
call
rcr
inc
repz
xchg
and
in
dec
xchg
xor
pop
push
mov
push
push
inc
mov
push
xchg
pop
clc
sbb
repnz
mov
insb
push
fwait
lock
cld
inc
mov
jno
jge
cld
cmp
aam
xlat
jle
adc
xlat
test
outsl
inc
lock
xchg
js
rep
inc
mov
aad
jp
and
addr16
mov
movsl
inc
pop
jns
push
subb
add
in
sbb
xor
xor
ss
fucomp
add
ret
mov
scas
lret
in
cli
es
and
lods
cmp
and
aam
fistpll
dec
mov
negb
dec
sbb
mov
add
xchg
ja
xchg
pop
pop
sub
popl
xchg
or
je
add
aam
sti
outsb
cmc
loope
sub
mov
mov
xchg
pop
in
add
dec
iret
add
inc
lods
das
mov
mov
and
push
inc
fwait
int3
pop
or
pushf
es
add
or
inc
xor
icebp
add
adc
sbb
aad
fists
fmuls
outsb
test
xor
pushf
mov
lret
adc
lret
pop
push
xor
repz
add
and
jmp
adc
mov
and
sbb
or
sti
mov
lcall
mov
pushf
in
cmp
fld1
pop
out
mov
push
jmp
adc
stos
iret
xchg
add
and
jno
lods
inc
out
push
outsl
pop
cwtl
pop
leave
insb
xor
jae
int
sbb
adc
inc
shl
xchg
subl
arpl
aas
adc
xlat
adc
add
shll
shll
inc
stos
and
mov
dec
pop
add
fiaddl
sub
push
pop
aam
mov
jno
mov
xlat
test
mov
sub
push
mov
mov
mov
mov
stos
mov
jmp
scas
jge
xchg
mov
or
repz
popa
or
fildll
mov
xchg
xchg
fildll
out
xchg
lcall
push
out
lock
pop
xor
add
std
rolb
pop
mov
in
pop
xlat
jo
pop
xchg
aam
aam
filds
fstps
outsl
insb
cmpsb
push
sbbl
push
adc
gs
scas
jno
jno
or
xorl
pop
jecxz
jbe
in
lret
xor
sarl
mov
xchg
push
or
ret
movsb
or
pop
sbb
popa
mov
sub
dec
addr16
push
mov
pop
andl
mov
punpckhbw
sub
sub
cwtl
js
aad
dec
or
xor
or
fwait
mov
cwtl
loope
mov
sbb
fwait
jb
shrl
bound
adc
aam
jge
ja
inc
cmpsb
push
fisttps
sahf
insb
mov
ror
decb
enter
and
dec
fisubs
sub
sbb
mov
rcl
mov
and
clc
rcll
lods
js
sbb
mov
push
mov
mov
data16
sbb
mov
sbb
xor
inc
jne
lea
jno
int
shlb
inc
jl
pop
mov
je
or
adc
es
inc
andb
dec
fdivr
xor
add
push
inc
dec
push
xor
mov
and
test
cmp
xor
push
inc
into
add
mov
aam
pusha
pop
mov
push
bound
cmp
pop
adc
ss
sbb
push
mov
dec
push
xchg
stos
cmp
jg
aad
cli
add
cltd
les
sti
out
aad
and
lock
add
mov
or
pusha
out
inc
test
cmp
jg
pop
mov
add
push
ret
adc
mov
leave
jg
sub
inc
or
sbb
roll
ror
ret
test
cmpsl
jp
mov
cmp
mov
inc
jnp
test
popa
fcoms
icebp
pop
adc
pusha
addr16
mov
shrb
push
xor
xchg
jle
push
aaa
push
cwtl
jmp
add
test
jb
out
fstpl
cmp
push
push
mov
jecxz
ret
push
cmp
jp
inc
mov
add
arpl
dec
ret
ds
testb
jp
push
pop
lods
and
dec
stc
aad
push
popf
add
fcoms
push
fisttpl
orb
push
loopne
or
jbe
lret
nop
mov
iret
pop
mov
cs
fistl
xlat
xchg
or
iret
stos
mov
mov
and
inc
mov
lahf
add
arpl
cmpsb
call
fstps
add
js
in
or
mov
inc
fcomps
bnd
add
xchg
stos
test
loopne
adc
jo
pop
inc
cmp
stos
loop
sti
adc
cmp
mov
lcall
add
nop
push
or
and
xchg
daa
repnz
lea
adc
mov
xchg
cli
sub
add
in
adc
aam
aad
in
insb
sbb
outsl
push
push
xchg
sub
mov
fdivrs
pop
push
dec
sub
sub
shrl
fsubl
sbb
imul
aas
insb
mov
clc
sbb
xchg
add
xor
js
push
arpl
bound
mov
enter
fs
enter
ja
orb
mov
push
insb
rcrb
shlb
loop
xchg
aad
and
mov
in
ret
mov
lret
loopne
xchg
insl
xchg
adc
inc
mov
mov
or
popa
pop
adc
sub
aam
icebp
pop
pusha
das
inc
mov
aad
insl
stos
sbb
aad
insb
cmp
sub
pop
mov
sbb
bound
add
add
and
lret
imul
daa
push
adc
xor
loopne
mov
ja
or
out
pop
jno
js
pop
xlat
leave
jle
lock
and
sti
mull
xchg
daa
bound
rorl
aad
repnz
mov
push
fcmovu
sbb
or
cmp
mov
test
cltd
gs
out
cmpsl
pusha
or
pushf
sub
inc
mov
jb
or
sbbb
test
cltd
mov
cmpsl
jnp
pop
adc
enter
out
adc
or
jg
les
push
imul
or
pop
jae
cltd
cmp
xlat
into
cmpl
add
dec
mov
aam
pop
lock
mov
mov
cwtl
nop
xchg
enter
in
sti
imulb
adc
aas
pop
stc
mov
loopne
mov
push
add
add
mov
sbb
mov
daa
stos
rorl
add
out
subb
mov
fisttpll
jmp
test
xchg
dec
call
xchg
mov
xor
or
mov
mov
insb
icebp
xchg
fs
mov
adc
xchg
jmp
pop
stos
rcl
nop
xor
dec
push
fsubp
stos
jo
pusha
stc
adc
xchg
xchg
and
mov
jl,pt
lods
jno
in
aas
addb
icebp
mov
xchg
roll
or
adcl
xchg
add
lret
cwtl
shlb
adc
test
int
sub
outsl
add
push
jge
repz
cs
fwait
push
inc
push
mov
mov
fcomps
sbb
outsl
dec
or
nop
ret
std
and
xchg
je
xor
adc
xchg
add
daa
adc
imul
aaa
mov
addr16
fstpl
mov
inc
dec
fidivs
outsl
jl
fcomps
xchg
inc
lods
add
jbe
hlt
push
xchg
out
add
out
add
mov
sub
mov
aad
pop
pushf
ret
jp
mov
test
add
and
sbb
lcall
sbb
movsb
mov
jbe
sbb
mov
dec
aad
es
sbb
iret
rclb
mov
test
jl
inc
adc
popa
lret
dec
test
sbb
dec
shrl
lock
mov
dec
scas
test
mov
hlt
imul
es
mov
jl
aam
mov
out
mov
sti
pop
push
enter
xchg
pusha
pushf
mov
lcall
sbb
pop
mov
fcoms
sbb
mov
lcall
iret
cltd
xchg
cmc
incb
push
mov
dec
pop
adc
popf
push
sbb
jne
cs
or
mov
push
dec
rorb
icebp
mov
sbb
test
ret
pop
sub
dec
aaa
pop
lcall
aad
out
imul
pop
and
xchg
inc
insl
test
pop
shlb
sti
xchg
mov
add
data16
scas
jge
fwait
int
call
insb
loop
jnp
jp
xlat
es
inc
add
in
pop
add
lcall
mov
adc
dec
inc
lahf
insl
or
mov
enter
push
push
mov
nop
fisubs
emms
cmpsl
push
insl
addb
lock
add
les
movsb
repnz
jns
fiaddl
lret
mov
xor
xchg
fcomps
pop
jnp
sti
lahf
and
outsl
lock
es
adcb
or
insl
add
pop
pop
rcl
mov
jb
loopne
imul
es
mov
sbb
jo
pop
data16
jge
fstpl
fs
in
mov
push
js
loop
pop
out
lahf
xor
test
inc
addr16
sbb
xor
ret
test
scas
cmc
mov
jle
shl
loope
add
clc
shll
scas
scas
imul
cmpsb
dec
xchg
xchg
pop
orl
xlat
xor
mov
xchg
xchg
lahf
jle
push
out
int3
add
mov
lods
mov
dec
jle
test
cmc
dec
mov
mov
ret
pop
out
lret
and
push
scas
adc
lcall
and
imul
or
sbb
add
movsb
loope
das
push
and
loop
sahf
daa
push
test
mov
fisubrl
add
leave
out
inc
sbb
call
movsl
adc
movsb
aad
rorb
js
popa
xchg
leave
iret
push
adc
out
or
js
inc
mov
out
xor
mov
mov
jo
mov
inc
fstpl
je
add
xchg
jp
mov
ret
mov
not
adc
cld
add
adc
arpl
and
mov
decb
mov
or
mov
fs
shld
jne
scas
lcall
jo
pop
cltd
xchg
sbb
dec
xor
push
call
or
xchg
mov
add
lret
rolb
pop
sub
punpcklbw
sbb
and
xorb
inc
dec
push
sbbb
cmpsb
mov
aad
punpcklwd
mov
ret
dec
inc
mov
repnz
lock
pop
cmc
push
sbb
call
fbstp
cltd
add
mov
jno
cs
es
add
sub
and
pop
jmp
outsb
cmp
test
add
sbb
push
pusha
pop
mov
jg
cmp
int
lret
cmpsl
and
lret
cmp
lds
mov
roll
push
adc
inc
inc
addr16
xchg
fs
aas
scas
adc
insl
clc
cltd
inc
fdivs
or
inc
stos
insb
mov
or
mov
out
es
dec
xlat
es
push
repnz
mov
pop
lahf
dec
cltd
adcb
xlat
mov
cmp
jb
jb
pop
jmp
xlat
popf
call
les
inc
into
enter
out
imul
das
add
arpl
js
aam
dec
xchg
and
dec
movb
pop
clc
mov
psrlw
js
pusha
pop
push
loope
decb
leave
in
fisubs
dec
adc
inc
dec
cmp
push
or
shrb
mov
mov
cwtl
sbb
pusha
rolb
popf
and
pop
mov
mov
jl
add
dec
es
out
aas
lret
pusha
lods
mov
mov
lcall
adc
pop
pusha
cmc
das
xor
cmpsb
sub
aam
rolb
and
hlt
out
add
mov
scas
jb
cmc
xor
call
add
or
outsb
sbb
das
jno
test
pop
cmp
push
dec
jno
in
out
aam
xor
mov
mov
dec
mov
mov
and
aas
push
mov
and
lds
rcl
mov
mov
xchg
fsubs
nop
dec
hlt
loop
adc
daa
cmp
sbb
xor
fiadds
add
mov
add
push
hlt
mov
pop
and
add
cmp
inc
jmp
pusha
adc
dec
and
cs
push
movsb
fstpt
pop
mov
push
addl
or
andb
cltd
xchg
call
inc
mov
mov
aas
ds
add
popa
shl
pop
push
mov
pop
insb
aam
fs
out
loop
fwait
mov
jbe
and
mov
call
push
mov
or
push
insl
mov
xor
ss
add
rcrl
mov
das
cmc
and
scas
dec
lds
loop
mov
rorl
cmpsl
push
mov
fiadds
in
jnp
inc
xlat
dec
mov
jnp
jae
add
daa
fisttpl
les
sbb
rorl
inc
and
in
leave
and
mov
loop
out
xlat
imull
es
es
out
inc
cltd
or
dec
push
xor
mov
or
popf
pop
adc
sub
dec
not
push
mov
lods
mov
js
cmp
sbb
dec
in
lds
adc
fdivs
sbb
push
fcmovb
popa
and
sub
daa
add
xchg
ja
jnp
inc
repnz
inc
xlat
je
push
sbb
cmp
pusha
mov
mov
fs
mov
outsl
imul
xchg
mov
dec
into
mov
cmc
sub
xchg
test
push
xchg
mov
ja
cmp
das
pop
xor
outsl
cmp
or
mov
cwtl
fldcw
test
pop
mov
cli
aaa
add
push
xchg
mov
in
sbbb
jge
pop
sbb
in
dec
mov
mov
jge
mov
mov
cmp
dec
mov
dec
push
imul
or
lahf
or
mov
pop
roll
pop
cmpsl
sub
push
es
cmp
sub
mov
mov
in
lcall
mov
shll
cltd
add
dec
xorb
mov
out
enter
roll
cli
insl
pop
push
jecxz
add
jmp
rclb
add
pop
jmp
lds
clc
inc
ret
inc
add
xor
outsb
test
or
in
popf
popf
add
stos
sbb
gs
test
adc
sbb
xchg
pusha
cltd
push
mov
pop
pop
ret
mov
sbb
lret
push
inc
push
mov
jl
mov
mov
adc
cmc
inc
cs
inc
push
inc
cmp
jno
mov
popa
push
bound
xor
popf
pop
icebp
push
jae
aam
outsl
pop
push
inc
mulb
insl
pop
jge
xchg
mov
pop
divb
dec
adc
push
pop
popa
adc
jns
mov
data16
aam
adc
outsb
mov
add
add
sub
add
sbb
sbbb
adc
insb
aam
inc
mov
or
pop
pop
sbb
lahf
stc
sub
dec
ret
shll
sub
aam
int3
pop
inc
mov
xchg
out
icebp
test
mov
sub
dec
dec
xchg
lcall
push
mov
lret
imul
sub
mov
pusha
mov
nop
icebp
xchg
les
icebp
dec
adc
cmc
sub
adc
add
test
inc
add
aam
or
mov
popa
or
adc
not
xchg
adc
aas
jnp
cli
xchg
xchg
stos
fs
aam
enter
mov
dec
fcoms
aaa
scas
das
adc
or
insl
shl
sbb
lcall
dec
stc
lret
push
andl
push
out
imul
leave
in
ljmp
xlat
or
inc
lea
cmpsl
inc
xor
mov
inc
add
push
call
sub
pop
insb
dec
inc
stc
lahf
dec
ss
in
mov
push
push
cltd
and
fistl
jbe
inc
cmp
decl
xchg
pushl
dec
insb
jle
add
ljmp
mov
cmp
call
push
in
jle
cmp
mov
iret
jb
ss
cld
sub
push
push
in
lock
in
gs
out
fidivl
xor
jp
pushf
add
add
mov
mov
insb
push
mov
nop
stc
loop
iret
jp
mov
orb
in
adcb
xor
mov
push
ret
mov
xor
mov
sbbb
jno
sbb
pusha
push
insb
cmp
roll
pop
jl
push
sub
adc
hlt
cmp
jbe
jge
push
sub
adc
pop
aam
jno
sbb
jg
xchg
jg
out
cmp
addb
xchg
ffreep
int3
je
mov
mov
sub
cmpsl
addl
daa
ss
sahf
ficomps
add
cmp
fsubl
lods
cmpl
cs
in
push
mov
ja
stos
mov
in
nop
ficoml
inc
subb
aad
lea
das
dec
iret
test
std
ja
mov
int3
jg
sbb
mov
lcall
lea
xchg
adc
xor
add
jle
test
mov
ljmp
inc
les
add
imul
mov
rorb
insl
add
or
ret
arpl
int3
pop
or
mov
add
jne
xorl
mov
js
mov
mov
mov
cmpsb
xchg
lea
sbb
mov
sub
mov
fcomps
test
sbb
dec
mov
add
xchg
fwait
mov
enter
out
sub
sbb
adcb
aam
cld
add
mov
cwtl
pusha
mov
inc
inc
aam
call
mov
fcoml
cmpsl
add
insl
add
xor
add
jg
stos
inc
inc
pop
ret
and
or
inc
mov
push
loopne
rcrb
int3
mov
js
dec
test
mov
negl
movsl
sub
and
sub
jge
jp
pop
pop
mov
sub
xor
xchg
add
dec
repnz
mov
xchg
pusha
incb
cltd
ss
test
ffree
or
lods
sbb
add
leave
mov
rcrl
xchg
mov
jecxz
push
push
jnp
pop
adc
or
loopne
mov
pusha
pop
addr16
jge
loopne
jp
aam
mov
push
es
or
mov
cmpsb
sahf
cmp
outsb
imul
nop
in
sbb
andl
and
jge
or
arpl
ret
mov
inc
es
add
lret
sub
shl
sbb
xchg
sbb
scas
nop
lea
or
loopne
xchg
call
lret
lahf
add
push
adc
repz
push
jle
dec
andl
sarl
jb
and
cmpsl
pusha
mov
push
and
inc
jecxz
int
add
outsl
add
pop
jecxz
movsb
clc
test
jno
shl
outsl
push
fcompl
hlt
iret
mov
scas
sub
cli
jp
in
inc
add
ret
cmp
pop
xchg
inc
xor
bound
ja
mov
xchg
call
mov
lds
jecxz
pop
gs
pusha
stc
shlb
jl
xchg
mov
mov
leave
loopne
push
ja
xor
pop
push
add
scas
cmpsl
int
fnstenv
mov
cwtl
loopne
lret
xchg
add
jne
push
push
test
mov
xchg
dec
pop
outsl
mov
leave
into
pushf
ret
or
int
push
and
lea
fsubp
push
cld
jge
mov
add
jmp
or
dec
imull
setnp
sbb
inc
xor
js
mov
push
stc
mov
std
pop
and
mov
pop
and
mov
or
sub
fmull
add
xor
sbb
mov
dec
cmp
fwait
add
stc
or
les
mov
outsl
cmp
mov
out
jo
xchg
adc
icebp
sbb
not
sub
add
xor
cli
xchg
fdivs
xor
les
sbb
out
shlb
stos
jb
sti
dec
mov
aam
or
xlat
mov
sub
push
jecxz
dec
mov
fcmovnb
test
sbb
lea
sti
and
popa
xchg
cmp
jb
sbb
aad
stos
fs
push
outsb
sti
rol
movsb
gs
adc
cmp
push
pop
adc
pop
aaa
mov
pop
sarb
jbe
add
push
or
ret
mov
ret
jae
roll
inc
insl
pusha
aam
shlb
mov
push
aas
push
mov
xorl
or
pop
mov
cwtl
gs
push
repz
sub
dec
in
add
adc
ret
bound
sub
out
adc
mov
inc
jecxz
push
xchg
xor
inc
popf
adc
aad
add
sti
sub
rorl
mov
add
or
pop
jge
sbb
sbb
lock
mov
xor
xor
leave
addl
mov
jmp
call
cld
mov
imul
clc
adc
pop
mov
adc
add
cli
loop
jne
xlat
mov
hlt
adc
mov
js
inc
lods
aad
jge
fmuls
pusha
sti
loope
dec
jle
cwtl
out
cwtl
xchg
lock
jmp
mov
mov
xchg
stos
xchg
ss
xor
or
mov
gs
addr16
out
les
push
out
pop
popf
xchg
sub
inc
out
call
stc
ret
mov
movsl
or
int
sarl
popf
aad
push
jle
repz
aam
scas
xchg
fimuls
addr16
int
dec
insb
pusha
push
or
rorb
jecxz
xor
testb
inc
xchg
mov
dec
xchg
loopne
or
mov
sbbl
pop
jl
iret
add
addr16
movsl
jne
popa
imull
les
js
xlat
push
aad
hlt
jp
loope
push
pop
mov
inc
test
add
ret
bound
jae
mov
cmp
fcomi
aad
xchg
lahf
dec
dec
lret
mov
jmp
loope
into
cltd
mov
shr
mov
das
aam
leave
clc
pop
or
dec
dec
inc
clc
xchg
mov
add
adc
in
cmp
add
cmp
loopw
adc
mov
out
xor
inc
pop
roll
push
outsl
std
jg
repnz
push
rclb
pop
cli
lds
jl
pop
push
push
adc
sbb
aas
lret
push
sub
push
mov
es
int
add
mov
inc
adc
test
and
mov
add
repz
sbb
inc
dec
cmp
mov
jbe
stc
xchg
fstpt
xchg
mov
mov
pop
in
sbb
aam
or
fisttpl
push
les
push
aad
aam
mov
cli
fnstcw
xor
cmpsb
aam
mov
repz
ljmp
pop
mov
mov
roll
or
andl
jb
popa
sbb
je
add
arpl
call
push
aam
dec
ja
xchg
push
arpl
std
jg
insl
and
repz
adc
mov
and
push
push
mov
leave
mov
jbe
cld
lret
stos
orb
dec
add
add
leave
shlb
out
icebp
inc
add
jmp
pushf
ja
popf
mov
pop
sti
inc
jge
fdivs
out
inc
mov
push
data16
jo
dec
arpl
lods
lcall
out
cwtl
cmp
andl
pushf
clc
hlt
gs
add
call
imull
int3
int3
cmc
aam
or
cmp
mov
rorl
inc
stos
mov
and
aad
xchg
lods
dec
push
jae
jnp
insl
aam
dec
mov
sahf
jno
cmp
push
jl
add
es
jo
xchg
fwait
rolb
test
into
mov
dec
xor
fisttpll
mov
push
fsubrl
xchg
jle
inc
flds
push
push
cltd
xchg
xchg
push
xchg
mov
add
sub
mov
data16
or
imul
aad
push
stos
movsb
and
fsubr
inc
xlat
addb
add
pop
sahf
mov
decb
popf
lcall
fnstcw
push
push
sub
sbb
pop
and
inc
mov
sub
pusha
pusha
mov
or
aad
push
dec
aad
push
dec
jle,pn
xor
mov
test
dec
add
cmp
sub
dec
into
clc
fisubs
mov
or
push
stc
imul
and
aad
sbb
mov
shl
dec
je
sbb
xchg
cmp
inc
sub
mov
lahf
and
sarl
je
test
pop
in
mov
add
push
or
insb
fisttps
push
arpl
adc
imul
dec
push
aad
mov
repz
mov
sbb
xlat
push
push
arpl
into
pop
mov
pop
fs
inc
or
push
dec
sbb
pop
ret
loope
sbb
aaa
pop
mov
ret
std
in
mov
call
daa
or
jecxz
lock
stos
aam
or
jbe
push
pop
or
mov
clc
jns
int3
adcb
mov
sub
sub
jnp
pusha
ljmp
push
push
lahf
mov
lods
sub
mov
repnz
xor
mov
dec
mov
int3
push
xchg
jl
pop
divl
or
sbb
sbb
or
stc
push
cmp
mov
stos
scas
cmp
lret
push
rorb
pop
push
and
pop
sbb
xchg
lods
cmpb
push
or
inc
sub
inc
mov
dec
in
mov
mov
aam
scas
cli
mov
clc
mov
push
mov
push
mov
imul
jae
add
testl
loope
in
sbb
pop
sti
xor
push
pop
xor
xchg
xchg
mov
lahf
pop
icebp
dec
aad
mov
add
jle
sub
mov
add
or
pop
pop
sbb
jg
out
pusha
sbb
xchg
mov
outsb
adc
enter
push
pop
rcrl
sub
jecxz
lods
or
mov
push
mov
add
pop
adc
adc
add
cltd
mov
inc
in
ja
imul
icebp
sti
into
inc
fcmovnbe
xor
xchg
aam
popa
jle
aad
aad
dec
mov
daa
cmpsb
dec
out
inc
insl
gs
or
sub
jmp
scas
data16
cs
aam
or
repz
ror
sti
inc
xchg
aam
lret
xor
scas
adc
inc
iret
cld
sahf
popa
add
lret
inc
sbb
lods
add
fisttps
mov
cld
jge
mov
loop
add
xchg
push
outsl
dec
jle
loop
push
or
pusha
clc
xor
test
aad
xchg
jo
sbb
sbb
cli
add
jge
fcoms
mov
shl
sbb
pop
add
pop
rcll
aad
ljmp
mov
mov
cwtl
add
das
xchg
ds
pusha
inc
sub
je
pop
add
push
dec
cwtl
or
lods
mov
xlat
outsb
cmpsb
add
or
add
test
mov
push
jmp
arpl
movsb
pop
cmc
ret
lods
loopne
xchg
in
mov
popf
push
insb
lea
js
icebp
dec
jbe
aas
add
sbb
mov
xchg
inc
mov
lcall
mov
mov
movsl
add
xor
mov
add
movsl
stc
inc
inc
fists
ficoms
xchg
stc
pop
or
jle
fstl
iret
adc
loope
inc
int3
cmp
cmc
cmpsb
call
or
push
add
cmp
lock
das
mov
aas
sub
cld
push
std
pop
mov
pop
loopne
xchg
ror
mov
xchg
and
mov
push
mov
or
and
jp
pop
popa
mul
or
and
aam
pop
adc
cld
sbb
aaa
mov
add
icebp
icebp
rorb
pop
mov
aad
jge
push
test
push
xchg
cli
mov
in
sti
aad
jae
andb
mov
push
outsb
mov
adc
and
loope
mov
cld
aaa
stc
add
sub
or
jge
lahf
clc
pop
mov
mov
rcrb
pusha
push
sbb
or
int
mov
jg
mov
add
pop
sti
sahf
ljmp
cli
xor
push
aam
scas
xor
or
sbb
jecxz
xorl
pop
movsl
repz
jno
pushf
aam
ja
and
loop
in
stc
enter
xchg
aam
das
ret
cmp
jns
andb
repz
inc
and
pop
push
sbb
add
mov
and
dec
xchg
cmpsl
push
xchg
testl
mov
into
and
jbe
sti
jbe
aam
aam
pop
jne
into
sub
dec
jmp
out
mov
dec
lods
inc
dec
subb
mov
movsl
xchg
aaa
inc
jbe
cli
add
jle
insb
adc
cltd
adcl
addr16
and
adc
push
jl
mov
adcb
and
pop
add
aam
arpl
js
mov
cmpsb
mov
mov
cli
push
gs
bnd
lods
fs
lods
fisubs
add
jbe
scas
cli
or
pop
in
dec
pop
jge
push
push
popf
fs
add
in
jg
int
popl
popa
incb
jge
pop
test
fstl
and
jbe
adc
inc
pop
mov
pop
rolb
cmpsb
xchg
add
pop
outsb
outsl
shll
movsl
dec
arpl
decl
lods
mov
std
fbld
push
pop
nop
add
mov
in
cmc
mov
pop
sbbl
dec
aam
pop
aaa
setle
adc
cmp
jo
push
adc
mov
hlt
mul
mov
pop
roll
sbb
je
sub
push
js
roll
mov
icebp
bound
addb
aaa
add
mov
cmp
sub
out
fadds
leave
xor
sti
push
mov
push
push
stos
jle
stos
add
ds
push
dec
stos
add
jge
and
out
add
pop
popf
or
push
mov
es
mov
data16
sarb
dec
fwait
push
mov
push
pop
cmp
cmp
ljmp
rorl
test
je
bnd
xchg
sbb
scas
mov
rolb
cld
xor
pop
sti
rorb
jnp
imul
push
lahf
rolb
adc
jne
divb
dec
stos
iret
stos
push
sub
int
cmc
ljmp
mov
sbb
movsl
pop
fldcw
dec
int3
mov
xorb
dec
dec
and
jb
andl
pop
emms
and
cwtl
out
dec
stos
xchg
sbb
fwait
inc
and
ficomps
pop
cs
aam
aaa
inc
jge
cld
mov
loop
mov
mov
mov
jl
adc
loopne
loop
sbb
mov
adc
cmp
test
mov
mov
dec
outsl
jge
inc
push
mov
loopne
stc
pop
jne
jne
scas
push
pop
mov
lods
pusha
leave
mov
lret
out
sub
or
fldt
pop
mov
sbb
cmp
ja
push
inc
call
cmp
dec
sub
mov
pushf
xor
in
test
add
pop
jg
jbe
scas
clc
xor
adc
jmp
push
and
aam
add
cld
sbb
in
mov
jle
jb
shll
lahf
push
jmp
mov
adc
mov
sbb
pusha
fbstp
push
aad
sbb
pop
ret
dec
ja
fs
les
div
outsb
in
add
jns
imul
dec
jbe
pop
inc
inc
aad
jecxz
xchg
jecxz
popa
sbb
xchg
mov
loopne
and
push
mov
xchg
inc
pop
xchg
push
dec
sahf
add
popa
aad
xchg
out
jae
aaa
and
pop
pop
mov
sbb
cmc
jp
lcall
lock
imul
mov
jno
aam
sbb
mov
dec
cmp
xor
add
cs
push
push
sub
ja
loopne
addr16
test
add
inc
gs
mov
and
loop
xor
into
cs
mov
repz
addr16
jo
je
xor
stos
nop
out
popf
pusha
inc
xor
pop
roll
push
push
cmp
add
mov
add
add
sbb
gs
xor
shrb
inc
loope
aad
decb
das
jae
cmpsb
orb
rol
add
int
aaa
mov
and
inc
add
shl
pop
stos
call
clc
jge
je
and
stc
imul
jo
add
inc
or
lret
cld
pusha
jnp
das
push
mov
decl
jns
mov
xchg
xchg
das
sti
mov
sub
out
adc
mov
adc
sarb
cmp
lahf
aaa
lock
ja
cli
sbb
aam
ljmp
call
jne
popf
rcrl
repz
mov
add
pop
jecxz
inc
mov
adc
addr16
sbb
loopne
mov
sbb
xor
xor
aas
fs
and
outsb
test
sub
mov
jb
dec
stc
pop
ficomps
adc
gs
out
pop
jns
popf
dec
sub
leave
xor
popa
rcl
pop
orb
adc
push
lea
aam
sti
mov
ja
jns
ja
addl
add
mov
mov
pop
jge
punpcklbw
cmp
add
mov
fs
pop
mov
cmp
xor
aad
dec
fwait
add
inc
ret
mov
cmp
scas
data16
fcompl
mov
jp
dec
and
adc
mov
mov
push
loop
pop
int
iret
loope
test
daa
pop
xorl
loopne
das
stos
movsl
cmp
mov
rolb
es
aad
repnz
dec
adc
xchg
lret
xor
lods
lods
pop
imul
mov
pop
push
cmc
push
and
fs
aam
mov
pop
cmpsb
push
lcall
int
or
loopne
add
adc
sbb
mov
andl
push
pop
xchg
mov
jl
pop
cmp
insl
lock
aaa
call
add
sarl
pusha
push
mov
pop
ret
cld
lret
into
push
mov
mov
or
lea
mov
test
push
xchg
lds
nop
shrb
add
insb
push
sub
xchg
das
adc
inc
and
stc
and
aam
out
out
int
adc
pop
mov
mov
cltd
ja
xchg
mov
adc
fimuls
mov
fdiv
mov
inc
push
xchg
movsl
mov
pop
lods
xchg
dec
adc
leave
hlt
dec
adc
mov
fwait
testb
jae
mov
add
dec
add
adc
addr16
pop
cmp
sub
xchg
add
mov
ljmp
ror
inc
sbb
repz
jge
stc
leave
mov
jnp
out
mov
adc
xor
mov
dec
xorl
xchg
push
push
mov
repnz
lods
nop
lods
mov
jg
mov
push
dec
jge
push
out
sbb
mov
fldcw
add
xor
sbb
inc
or
lret
cwtl
aam
push
cmovge
xchg
push
mov
mov
pop
push
sbb
inc
and
insb
push
repz
add
add
fcmovnb
mov
sub
loope
push
push
shrl
jbe
add
test
pusha
sub
sub
push
cmc
pop
aam
aam
js
pop
fwait
movsb
mov
int3
outsl
mov
cli
cmp
dec
out
add
int3
adc
sub
lds
mov
arpl
sbb
jae
shlb
loope
mov
inc
jns
mov
jae
jg
mov
or
fldt
or
rolb
xchg
mov
cs
mov
scas
push
dec
xchg
arpl
push
pop
jne
inc
push
js
jg
pop
dec
pop
dec
stos
out
jl
cld
mov
pop
test
add
mov
in
pushf
rcl
xor
int3
mov
jne
dec
pop
mov
adc
fs
xchg
lcall
and
mov
mov
mov
test
jp
xor
xchg
cs
bound
je
cmp
aam
call
jne
mov
fisubs
add
lds
negl
add
clc
outsb
fwait
repz
add
stos
push
add
js
mov
movsb
xorl
ss
xor
sbb
pop
sbb
loop
pop
adc
adc
bound
sbb
mov
mov
clc
pop
mov
fs
cmp
cmpsl
xor
aam
adc
jne
pop
cmc
mov
sub
xchg
cs
jo
lret
jae
xchg
mov
mov
lahf
adc
xor
test
add
fldl
ret
shll
xchg
add
mov
ljmp
pop
iret
in
cmpsl
inc
insb
movsl
cmp
mov
data16
dec
pop
stc
sahf
lods
out
sbb
popf
ds
push
aad
aam
stc
shlb
mov
out
mov
incl
and
test
dec
push
push
leave
xor
mov
dec
push
lret
arpl
add
stos
lahf
sbb
dec
insb
ret
inc
mov
sub
cmp
popl
jnp
cmc
sub
xor
ret
add
clc
enter
mov
fsubl
test
adc
mov
mov
loopne
mov
cmc
pushf
pop
add
fwait
ret
and
mov
popa
jmp
add
cmp
pop
dec
push
or
sbbl
ret
rcrl
xchg
push
xor
mov
dec
nopl
or
cmp
add
cmp
adc
xor
ret
inc
pop
sub
inc
lret
shlb
push
mov
es
les
stos
mov
pop
in
inc
movsl
aam
imul
mov
stos
or
clc
dec
cmpsl
mov
xchg
adc
movsl
enter
mov
imul
inc
aad
aam
lods
pop
les
hlt
inc
mov
out
repz
jae
hlt
movsl
iret
or
sub
lods
xchg
add
xchg
shl
sbb
and
in
mov
clc
andb
adc
sbb
dec
sub
push
and
test
inc
inc
movsl
push
repz
mov
and
pop
sub
rorb
repnz
hlt
outsb
je
push
shll
mov
sub
jne
pop
pop
out
pop
lds
les
adc
stos
cmp
jl
inc
mov
pop
test
pop
pop
popa
stos
jl
sbb
pop
adc
fwait
aaa
into
jne
xlat
je
mov
inc
and
outsl
mov
daa
cmp
fdiv
sbb
pop
mov
scas
loope
aad
mov
jl
and
push
mov
add
jmp
mov
adc
iret
push
ss
clc
jge
sbb
sub
adc
aad
dec
mov
sarl
test
jg
sbb
int3
pop
mov
xlat
pop
ljmp
ret
js
int
inc
mov
or
pop
in
add
in
mov
pusha
shl
push
and
pop
movsb
aad
adc
les
imul
jb
aam
fwait
mov
cmpsb
loop
mov
dec
dec
jge
or
jle
fisubl
pushf
ljmp
hlt
bound
xor
dec
mov
mov
or
xchg
jl
pop
cld
cwtl
shlb
xchg
pop
push
cmp
stos
aad
call
pop
dec
mov
cmpsl
mov
fists
adc
and
xchg
inc
push
rcrl
stos
xor
in
movb
lock
movsl
add
fbld
rcrb
aaa
add
mov
or
push
xchg
ret
int
push
mov
arpl
stos
jge
out
add
mov
mov
test
rclb
sbb
push
jg
mov
das
leave
or
movsl
sub
sub
push
pusha
dec
dec
jbe
add
outsb
aam
add
orl
or
aam
xchg
xor
gs
sbb
push
jg
cmp
stos
mov
xlat
daa
sahf
push
pop
mov
cmp
mov
mull
nop
inc
jl
pop
jge
std
pop
sahf
mov
loopne
jb
inc
call
inc
popa
xchg
f2xm1
push
cld
add
loopne
movaps
or
sub
scas
cmc
push
xor
ss
push
lea
push
enter
aam
dec
xlat
stc
add
dec
fisttps
push
sarl
add
add
push
hlt
pusha
push
xor
ljmp
lsl
cmp
add
mov
and
sbb
aam
lea
dec
or
xchg
mov
lahf
jle
hlt
push
and
sub
test
pop
dec
push
push
aas
push
mov
aad
sub
movsb
es
xlat
inc
inc
outsb
addb
add
sbb
movsl
jo
lods
inc
mov
fimuls
push
xor
popf
pusha
in
add
loopne
inc
aam
fsqrt
xchg
dec
jmp
loopne
mov
outsb
test
add
icebp
sti
icebp
outsl
fs
cld
gs
mov
adc
rclb
jae
aad
shl
mov
paddq
xchg
in
and
push
add
cltd
adc
cli
mov
mov
aad
shl
bound
int3
push
mov
addr16
adc
call
xchg
xchg
rcr
enter
inc
movsl
sbb
cld
jmp
ja
adc
imul
push
outsl
scas
xor
inc
in
fiadds
pushl
jmp
jg
ret
cmp
add
xor
in
popf
mov
in
repnz
repz
add
adc
clc
inc
cmp
adc
inc
pusha
das
hlt
mov
and
fnstsw
xchg
pop
sti
repnz
push
aad
adc
addr16
ret
mov
xchg
jno
push
mov
add
int
xor
mov
repnz
sbbb
iret
loop
sub
sahf
rorl
rorl
mov
pop
mov
jle
jno
pop
mov
push
push
pop
jmp
testb
testl
lock
rcl
imul
mov
or
mov
cmc
mov
add
cmp
push
cltd
js
cmpsl
call
lret
aaa
mov
icebp
rcl
xor
or
dec
aad
xchg
xchg
jle
sar
mov
mov
cli
sti
aam
test
out
mov
dec
pushf
add
push
pop
add
add
or
int3
mov
dec
sub
pop
add
inc
and
and
mov
jl
popl
fisubrs
cmp
ja
inc
inc
and
pop
dec
aam
test
rcl
lods
xchg
mov
lret
jecxz
das
jno
pusha
xor
clc
xlat
fcmovbe
into
out
ret
fwait
cmpsl
outsb
pop
test
out
out
vmread
push
push
adc
dec
out
repz
pusha
test
ljmp
movl
rcrl
sbb
pop
imul
es
test
jne
jnp
in
ljmp
or
cs
inc
test
in
pop
xor
dec
cmp
pop
lods
pop
rorb
xor
imul
pop
and
and
jecxz
mov
pop
imul
int
fsubs
and
sbb
lahf
xorb
mov
adc
addl
jne
fnstcw
lahf
mov
rcrl
add
pushf
add
lods
pop
mov
xchg
int
adc
xchg
adc
add
fldt
clc
jg
xchg
or
cmc
xchg
mov
inc
push
dec
test
push
lods
lds
std
inc
pop
idivl
mov
push
rcl
rcrl
lds
adc
cmp
fcmovnu
insl
and
mov
insb
shld
mov
dec
test
mov
mov
in
jmp
int3
enter
jns
std
enter
sub
add
pop
mov
push
adc
int
iret
scas
ljmp
dec
push
push
jbe
and
mov
cmp
sub
push
push
cmp
sbb
dec
ret
addb
cmp
push
mov
mov
enter
mov
out
push
jb
rcr
adc
mov
xor
mov
clc
fists
inc
pop
mov
nop
sub
aam
mov
or
pusha
mov
lahf
enter
dec
stos
out
out
loopne
xchg
sub
ror
cmp
adc
test
sub
cs
mov
push
jno
add
xchg
pop
dec
sbb
aas
pop
and
loope
mov
stos
mov
loop
sub
adc
scas
sub
sub
enter
jg
push
push
outsl
dec
fwait
sbb
insl
add
xor
pop
cwtl
mov
jnp
sub
jmp
mov
mov
lret
pop
les
add
xlat
push
xchg
pop
aam
and
mov
ret
rorb
add
add
and
mov
lods
in
xlat
push
and
out
push
dec
fdivr
mov
and
sahf
enter
inc
popa
mov
push
mov
mov
mov
mov
push
adc
cmp
dec
jle
xor
cmp
or
scas
jg
fs
pusha
mov
out
dec
mov
xchg
adc
popf
jae
and
inc
aam
aad
and
pop
cmp
dec
and
inc
xor
aad
cmpsb
int
pop
pop
test
push
inc
es
pusha
inc
repnz
mov
mov
decb
pusha
jge
int3
ds
xchg
xlat
fucom
mov
popf
jnp
bound
push
test
aam
jp
mov
bound
imul
mov
mov
aam
std
nop
pop
pop
sub
ret
dec
fmuls
test
push
aad
cs
fidivl
fdivrp
lock
dec
adc
cld
andb
out
les
xchg
cld
inc
fsubs
xchg
shl
imul
mov
jns
jnp
jae
test
filds
push
push
add
jne
shr
js
dec
add
imul
and
add
sbb
or
xor
aam
fimull
dec
out
ja
fs
add
lea
movsl
xlat
in
push
add
les
add
filds
sbb
pop
xor
gs
mov
ret
ja
mov
ds
dec
loope
lock
imul
daa
ret
aam
jecxz
scas
out
pop
loope
add
sbb
or
cmp
and
mov
rorb
pushf
dec
jp
add
cmp
pop
into
or
pop
lcall
cld
cld
xchg
push
mov
sarl
jp
adc
inc
mov
mov
pop
scas
adcl
push
inc
xor
pop
jbe
bound
sub
and
loope
mov
addr16
cmpsl
add
pusha
inc
insl
mov
fidivrl
mov
or
cld
xlat
cmp
loopne
ret
adc
push
push
leave
js
fprem1
cmp
data16
pusha
stos
aas
lret
fs
das
cmp
fisubrl
pop
dec
notl
mov
and
xlat
mov
mov
jno
pop
popf
fsubrs
inc
shrb
pusha
decl
mov
inc
js
mov
test
fidivrl
repz
std
stos
aam
movsl
sbb
inc
enter
push
jnp
xor
aas
mov
jbe
push
push
test
test
icebp
lret
push
call
test
cs
loope
loop
jecxz
lds
pop
adc
inc
mov
ret
push
lea
push
sbb
subb
pop
out
pop
je
ds
xlat
jno
js
inc
jge
and
das
in
jns
sub
insl
xchg
pusha
sbb
or
xor
lahf
aaa
subl
mov
rcr
pop
and
cmp
movsl
adc
pusha
cmp
sti
mov
sub
inc
lods
fs
xchg
mov
add
jecxz
mov
push
ja
or
push
shll
fistpll
add
fbstp
jno
cmp
pusha
dec
lods
fsub
popa
andb
xchg
pusha
mov
mov
sub
loop
in
in
sbb
cmp
rcr
pop
adc
mov
mov
lcall
insl
in
xchg
mov
iret
daa
outsb
jecxz
aad
in
add
xchg
sbb
rol
test
imulb
mov
jmp
jmp
out
aas
lcall
add
sti
push
xchg
or
mov
sahf
dec
data16
rorb
stos
dec
mov
jnp
jp
xchg
shll
fsubs
int
sub
and
mov
sar
dec
loopne
int3
aaa
lahf
or
or
repnz
std
dec
in
adc
sub
sub
stos
movsl
dec
fists
repz
cld
outsl
fidivrs
push
ret
movsl
dec
xorl
loope
mov
mov
or
dec
aas
sbb
jno
or
jge
push
dec
aam
jecxz
data16
and
jno
sbb
rcrb
mov
hlt
les
sub
mov
add
repz
pusha
adc
mov
and
pop
in
or
aaa
clc
push
insb
das
in
xchg
push
and
add
aad
adc
or
dec
cmpsl
out
and
sbb
sti
pop
or
stc
push
ja
sbbb
mov
js
fistps
sbb
in
enter
push
fbld
sbb
ss
mov
pop
adc
aam
idivb
std
mov
mov
out
clc
pop
andl
dec
inc
mov
add
test
fisubrs
mov
inc
outsl
dec
push
popa
dec
mov
mov
fwait
xor
lahf
rorb
jp
imul
jp
jmp
iret
adc
loopne
leave
cwtl
pusha
fildl
shll
nop
imul
push
add
add
mov
lret
jns
jp,pn
sbb
lahf
pop
shll
mov
aam
shlb
or
sbb
jnp
and
adc
dec
push
jp
in
sbb
arpl
mov
cmp
ret
in
mov
and
mov
mulb
or
les
pop
popf
fldl
adc
or
mov
pushf
in
ljmp
imull
lock
fistpl
jp
lret
aad
enter
bound
clc
mov
pop
popa
lea
inc
pop
addr16
aam
sub
dec
mov
fwait
pusha
mov
loopne
push
aam
idivl
ja
lods
pop
xchg
mov
aad
mov
xchg
jg
test
adcb
aad
dec
inc
insl
clc
mov
xchg
popf
inc
mov
aad
add
lahf
popa
xor
lods
mov
sub
cmp
fwait
push
sbb
mov
popf
add
repz
pop
enter
push
mov
in
int3
jp
iret
adc
add
xchg
in
subl
or
jp
add
mov
imul
fldcw
xchg
lret
addr16
cli
add
cmp
or
cmp
inc
and
fsubrl
pop
aad
cltd
mov
push
mov
push
push
xor
adc
add
repz
adc
sbb
cmp
stos
add
les
ljmp
hlt
in
lahf
inc
mov
push
xor
pop
adc
inc
movsb
sub
mov
inc
jl
insb
cmp
push
sbb
pushl
dec
add
adc
mov
xchg
clc
inc
mov
sbb
cld
mov
fs
aaa
ret
testb
xchg
repz
lret
arpl
push
pop
pop
stos
adc
jmp
push
sub
xorb
push
test
cli
xchg
mov
adc
add
add
cmpsb
sbb
pop
add
xchg
or
mov
hlt
mov
pop
pop
adc
jns
or
aad
sub
scas
xor
movsb
cld
mov
xor
pushf
in
mov
pop
int
add
decb
icebp
andl
xor
popa
and
ja
mov
int3
pop
mov
ss
aad
dec
pop
xorb
sbb
sti
cmc
inc
push
jl
aam
scas
jle
leave
sbb
inc
mov
xor
add
cmpsb
aam
add
lret
jmp
inc
pop
and
dec
adc
sub
pusha
icebp
add
test
mov
jmp
adc
scas
pop
in
push
jno
push
insl
xor
xor
inc
dec
mov
ficoms
push
loope
aam
lahf
xchg
fiaddl
aad
adc
ja
cmp
js
aad
hlt
clc
xchg
or
sub
notb
cmp
jecxz
aad
and
sar
pop
imul
push
cmp
push
sbb
leave
sub
mov
or
cwtl
jle
loope
push
xchg
cmc
test
movsl
jge
pop
xlat
into
push
sub
add
mov
ffreep
pop
lcall
lret
jle
lret
test
push
sbb
jb
push
dec
sub
in
add
pop
fwait
icebp
hlt
push
fwait
sub
mov
in
push
mov
fmull
cmpb
inc
fstl
mov
insb
into
pop
arpl
sbb
js
hlt
cmovs
aaa
push
es
imul
sar
or
or
arpl
mov
cld
in
dec
jnp
mov
add
test
xchg
daa
lcall
sbb
cmp
cli
dec
mov
int3
mov
mov
mov
jne
jp
push
bound
inc
inc
push
add
jo
pop
iret
jns
call
jp
jecxz
test
xor
xchg
popl
insb
mov
aad
call
nop
dec
mov
cs
xorl
mov
into
adc
push
mov
movsl
and
rclb
inc
scas
call
pop
lods
dec
mov
and
xlat
sarb
jb
mov
push
dec
inc
and
stc
and
mov
enter
sti
fsubl
mov
jp
psubsb
cmp
faddl
adc
xor
and
test
jae
aad
lods
and
mov
gs
cmp
repnz
mov
filds
mov
ljmp
dec
pop
cmp
push
xchg
inc
or
sub
push
ds
in
xor
dec
mov
outsl
add
hlt
stos
sbb
ret
frstor
adc
inc
prefetch
js
push
outsl
jl
out
mov
cmp
add
xchg
add
fs
jp
cld
jg
add
outsl
push
stos
xor
dec
sub
jl
mov
enter
jg
sbb
jmp
xchg
jp
pop
roll
push
jecxz
xchg
aam
sbb
pop
loop
mov
mov
cmp
xor
ret
add
push
lcall
or
fcom
leave
lea
pop
mov
pop
xor
pop
push
icebp
lock
mov
test
push
outsb
push
mov
pop
jne
xor
lret
pop
in
sub
sti
ficomps
sbb
xchg
push
jmp
movsl
xor
jl
cltd
aad
test
lods
insb
aam
movl
cmpb
test
add
xchg
jae
xchg
pop
jle
dec
les
add
mov
mov
movsb
test
scas
dec
int3
add
add
sub
jp
mov
adc
mov
push
ret
leave
xchg
cld
mov
mov
aam
call
add
push
int
nop
and
pusha
push
mov
inc
mov
imul
xchg
cmpsl
cmc
push
aaa
loope
int
and
cmpsb
adc
push
notl
add
jg
les
xlat
xor
jns
mov
add
cli
movsb
xchg
xor
add
lahf
ficoml
fidivl
ja
into
and
subb
psubd
lock
pusha
sub
xor
xor
mov
insb
mov
add
mov
inc
imul
aam
mov
out
leave
push
sbb
sub
sub
push
sub
aaa
fisubrl
push
dec
ret
in
pop
adc
xlat
aas
mov
lock
lods
mov
inc
add
xchg
in
pusha
and
sub
add
fcompl
pusha
add
jecxz
sbb
aas
ja
adc
enter
call
inc
notl
lea
stos
add
push
pop
scas
mov
outsl
adc
mov
dec
sbb
mov
push
int3
aam
pop
and
pop
shrl
mov
add
lods
dec
add
inc
aad
mov
pop
cmp
cmp
aas
popl
sbb
dec
mov
aam
loopne
cmp
adc
pushf
loope
sbb
fisttpl
movsb
repz
aam
clc
sub
add
cmpsl
sahf
clc
and
mov
mov
add
rorl
add
testb
aam
pop
fstpl
xchg
dec
mov
add
lahf
inc
into
rolb
mov
mov
sbb
and
test
add
lods
movsl
mov
mov
ret
cmp
pop
lret
std
and
ret
sti
scas
adc
inc
mov
mov
xor
loope
sbb
fs
insb
mov
daa
stc
into
pop
add
sbb
pop
arpl
out
inc
mov
popa
mov
add
sbb
or
push
sub
lods
mov
scas
add
ljmp
push
inc
jp
loop
add
add
hlt
mov
clc
cmpsb
xchg
lahf
pop
addr16
cmp
outsb
outsb
pop
lods
pusha
mov
stos
cltd
and
or
sbb
std
inc
dec
jbe
push
add
mov
test
lret
and
fildl
mov
cmpsl
xor
imul
push
lods
or
dec
or
fdivrp
scas
dec
popa
cmc
mov
sub
nop
push
xchg
dec
push
fdivs
mov
mov
stos
fisubrl
hlt
insl
test
fs
push
jp
jbe
pusha
clc
lods
or
jg
or
dec
xor
mov
mov
pop
stc
xchg
mov
cwtl
xor
xlat
mov
fwait
add
xor
add
andb
jp
or
mov
mov
arpl
shll
xchg
pop
pusha
or
xchg
in
xor
cli
aam
cmovnp
mov
je
or
xchg
push
aam
lds
cwtl
pusha
daa
mov
add
aad
mov
push
push
mov
xchg
je
outsb
mov
push
mov
adc
pop
test
mov
pusha
fldcw
mov
xlat
popl
mov
les
mov
sarb
loope
push
dec
or
jbe
data16
add
test
movsb
jmp
imul
push
dec
lock
and
sti
inc
js
adc
or
and
sub
adc
inc
sti
jmp
mov
cld
xor
adc
cmpl
jnp
pop
sbb
mov
mov
sub
sub
imul
push
adc
std
xchg
pusha
and
mov
xchg
sbb
dec
pop
add
aaa
sbbl
mov
push
cmp
mov
pop
ds
pusha
fisttpll
test
pop
test
cmp
lock
or
movsb
mov
push
adc
add
sbb
or
cmp
mov
fwait
mov
inc
mov
in
push
ret
push
push
js
inc
pop
leave
mov
mov
shlb
out
cmp
lcall
icebp
mov
xlat
add
pop
scas
mov
std
fstps
lcall
aad
and
arpl
in
mov
pop
push
scas
and
xor
in
pop
xchg
loope
daa
scas
scas
sarb
mov
dec
mov
sbbb
jbe
fcmovnbe
aam
mov
pop
lds
jbe
aam
xchg
insl
or
jbe
ficompl
dec
inc
jge
movsl
je
mov
jge
or
jecxz
loopne
push
lock
in
in
add
push
add
mov
jge
icebp
nop
pop
nop
adc
ss
addr16
call
test
cmp
aaa
jl
xor
icebp
or
jae
fimull
xlat
push
mov
mov
cmp
add
ss
push
xor
adc
jns
xchg
pop
mov
fistpl
push
push
adc
pop
inc
add
xor
xchg
loop
add
jp
add
je
mov
pop
push
xchg
push
in
insb
sbb
ds
ljmp
xchg
icebp
cltd
rorl
xchg
insl
push
loop
iret
xchg
push
aaa
jl
and
aam
fstl
arpl
mov
sbb
negb
mov
add
mov
ret
mov
pusha
mov
add
adc
insb
sbb
cmp
push
ja
cmp
loopne
mov
mov
enter
sub
dec
mov
lock
sub
pop
sub
add
clc
je
out
jbe
insl
xor
mov
ficompl
gs
adc
outsb
xor
xchg
lahf
push
fiadds
aam
sbb
push
inc
pusha
scas
test
out
sub
arpl
fs
pushf
repz
mov
sub
fldenv
imul
ja
pop
imul
into
push
and
shll
cmpsb
xchg
repnz
push
lret
mov
icebp
xchg
or
aam
in
and
jb
dec
outsl
dec
mov
lods
adc
cmp
insb
rcl
fidivrl
int3
jl
push
dec
fdivs
imul
mov
vpor
test
scas
mov
pushf
mov
pop
pop
jecxz
jbe
ds
pusha
jns
leave
pop
aam
push
mov
ret
bound
dec
pusha
pop
lea
push
adc
ja
and
ret
mov
daa
mov
sbb
cmp
sahf
bound
pusha
ja
cmp
or
sbb
xchg
fcomi
leave
sti
xchg
inc
mov
inc
or
roll
aam
pop
adc
inc
mov
mov
xor
aad
mov
jge
mov
mov
movsl
or
mov
or
mov
dec
sti
sbb
dec
add
jmp
scas
mov
or
aad
out
aaa
shrl
fdivrs
mov
mov
mov
add
loope
stos
xchg
jne
mov
pop
lods
pusha
aad
xor
inc
aad
or
mov
in
dec
push
pop
xor
bound
shll
fs
lods
fimuls
mov
mov
rcr
pop
sbb
jecxz
addr16
add
inc
inc
mov
addr16
stos
dec
lcall
ret
lcall
mov
bound
xor
or
movsl
add
cmp
mov
bound
pop
cmc
dec
pop
mov
aad
pop
das
xchg
mov
es
data16
or
ss
aaa
jp
xor
int3
loop
sub
xchg
pop
cmp
pop
outsb
out
rorb
inc
movsl
push
and
clc
and
jp
or
mov
shrl
out
jle
pop
jecxz
ret
popf
add
mov
cmp
push
dec
in
mov
or
aam
mov
stos
push
stos
mov
int
flds
in
cmp
out
jp
clc
aad
rorl
sbb
gs
xchg
adc
mov
ss
jg
dec
sbb
fcoml
mov
and
jo
push
mov
scas
or
aad
aam
inc
xchg
fistl
enter
sarl
push
les
fistps
sti
cmpsl
adc
adc
shl
push
pop
das
xlat
cmp
pop
and
jns
xor
push
mov
inc
add
popa
xchg
and
sahf
in
in
in
sbb
cmp
jo
jl
mov
shll
sbb
shrl
loop
add
dec
adc
ljmp
xchg
ret
xchg
roll
mov
adc
jecxz
cmp
fs
adc
push
mov
cmc
or
aad
sbb
pop
idivl
flds
adc
adc
or
dec
pop
jecxz,pt
add
int
cmp
and
push
imul
fincstp
mov
mov
pop
adc
jae
mov
inc
rcrb
sahf
mov
or
shll
aam
mov
and
xor
mov
mov
jae
inc
inc
daa
popa
insl
cmp
outsl
movsl
mov
cmpsl
rcl
xchg
xor
pop
pop
mov
pushf
out
fsub
push
cli
xchg
adc
mov
mov
fstpt
inc
dec
pop
lcall
fcomp
xor
xor
sbb
lcall
adc
fdivrl
mov
pop
adc
scas
mov
and
pop
sub
sbb
fcom
cwtl
pop
or
sbb
sub
mov
adc
jecxz
push
movsl
dec
pop
dec
push
adc
icebp
arpl
mov
sbb
in
js
jp
sbb
adc
mov
jbe
xchg
cmp
sbb
add
mov
sub
outsb
lret
bound
ljmp
out
fdivl
repnz
test
dec
dec
gs
sub
negl
fcomps
lock
ret
pop
lret
mov
shlb
inc
notb
les
imul
insb
jg
insl
enter
test
daa
add
jge
mov
cmpsb
pop
inc
je
jnp
fldl
clc
sub
bound
jne
mov
inc
in
xor
xor
lret
ror
fwait
push
cmpsb
ds
dec
pop
xchg
mov
decb
in
data16
xchg
leave
pusha
xchg
add
setnp
inc
in
ljmp
jae
daa
xor
dec
mov
jg,pn
popf
int
cmc
jle
xchg
lds
mov
mov
push
inc
test
call
sub
cmpsl
or
or
sub
and
testb
aam
adc
mov
mov
cs
pop
stos
mov
ss
cmpsb
inc
popf
dec
adc
sub
fs
das
jle
mov
lods
fcoms
stos
pusha
push
ret
push
mov
push
add
test
mov
pop
or
lods
or
jae
mov
ljmp
and
add
mov
cld
pop
mov
or
stos
lds
je
xchg
cwtl
jb
jne
inc
jmp
adc
pop
sub
out
xchg
pop
and
sub
dec
cmp
fstpt
xor
out
ds
push
push
std
sub
loop
cli
nop
out
jbe
test
fwait
xchg
fisubrs
sub
mull
jne
adc
mull
lret
fisubrs
push
jmp
cmp
popl
and
jae
lahf
loope
adcl
and
lret
fistps
mov
xorl
sbb
adc
cmp
js
mov
stc
xor
int3
pop
mov
push
push
testl
mov
mov
xchg
inc
xlat
add
inc
push
rcrb
push
mov
dec
sahf
xchg
push
mov
add
push
jnp
xchg
fs
sub
dec
cwtl
fdivs
inc
orl
sbb
shll
dec
add
into
or
inc
inc
inc
inc
and
and
fcompl
cmp
xor
fwait
cltd
mov
push
arpl
adc
inc
pop
push
loope
pop
stc
lret
and
add
imul
mov
lods
push
lds
push
push
outsb
mov
jnp
lea
push
out
xor
dec
enter
cmp
rcrl
sahf
je
call
mov
lds
xchg
dec
push
cmp
rolb
test
xchg
or
out
xchg
pop
mov
mov
dec
mov
jl
ret
and
xchg
sti
push
call
mov
push
push
add
sbb
stc
dec
shlb
insb
out
dec
push
das
jb
cmp
test
pop
jmp
add
xchg
jnp
adc
out
and
into
subl
pop
out
fcmove
push
and
test
pusha
iret
pushf
and
imul
bound
outsl
xor
pop
jo
fwait
aam
in
das
fstpt
inc
xchg
repz
and
sti
scas
ljmp
iret
mov
into
mov
add
cmp
aas
pushf
mov
add
js
fisubrl
mov
fsubl
and
pop
test
pop
mov
pop
inc
sbb
aam
mov
dec
dec
jnp
stos
in
add
gs
insl
flds
test
js
cmp
adc
add
jns
addb
xchg
push
xchg
stos
pushf
jno
xlat
mov
and
lret
je
lahf
sbb
adc
roll
sarl
movsb
mull
push
aas
sbb
mov
sbb
rcl
fimuls
icebp
movsl
mov
add
and
movsl
push
ljmp
mov
xchg
sub
push
lcall
mov
popa
shrb
aas
jnp
push
f2xm1
lret
ljmp
xor
les
add
push
xchg
cs
insl
add
fldcw
test
mov
pop
mov
or
in
cmp
out
push
ss
enter
ds
les
sahf
out
add
mov
shl
add
xchg
jb
jb
sbb
add
loope
mov
push
in
stc
pop
insl
cmpsb
push
in
fcoml
aam
inc
inc
enter
adc
xor
js
fwait
add
cmc
cld
loopne
pop
inc
adc
jg
jae
xlat
ja
mov
test
test
decl
repnz
add
cmp
je
xlat
hlt
pop
call
push
mov
ret
pop
ret
cmc
cmp
jo
jne
aam
aas
mov
repz
or
mov
push
sbb
mov
lea
repnz
mov
pop
fbstp
push
add
pop
inc
jp
in
aad
pop
jae
xchg
mov
fildll
or
lds
shl
in
or
mov
inc
fidivl
mov
jle
and
lret
test
bound
dec
fbld
add
mov
mov
push
cmp
enter
mov
shrl
push
push
shrl
sahf
sub
and
sti
out
xchg
ja
popf
outsl
fimull
lds
dec
xchg
mov
xchg
ficomps
mov
cmp
lods
test
add
jno
or
cmpsl
call
aad
add
repnz
cmpsl
aad
cmp
push
movsl
fnstsw
fistpl
lds
sbb
pop
pop
fisubrl
cmpsl
or
push
pop
xor
mov
push
push
outsb
stos
lds
shr
inc
aas
test
add
cmc
or
inc
xchg
pusha
xchg
sbb
pop
test
push
inc
xlat
cs
xchg
in
inc
or
push
pusha
pop
and
aad
mov
dec
mov
cmp
insl
popl
dec
or
fisubrs
cmp
test
insb
outsb
popa
lock
mov
ljmp
mov
aas
mov
and
jns
pop
lock
dec
add
xchg
in
xchg
sub
push
pop
adc
jo
aaa
xchg
push
jns
inc
mov
add
mov
or
mov
mov
hlt
dec
lahf
sub
push
out
into
iret
pop
ds
sub
aam
into
cs
mov
jg
pop
push
mov
xchg
add
inc
push
add
add
dec
outsl
jno
jge
push
dec
iret
fs
or
push
mov
addb
hlt
push
aad
sub
jle
mov
inc
loop
lods
jbe
xchg
fsubl
neg
loopne
pop
sub
loop
mov
inc
mov
inc
out
add
jno
iret
jle
int
push
or
lods
push
pusha
dec
mov
sbb
sub
mov
cltd
mov
add
mov
arpl
and
fisubrs
mov
add
repnz
repz
and
in
leave
rolb
rcrb
icebp
xor
mov
in
mov
iret
sbb
leave
add
pusha
xchg
xor
push
out
rclb
mov
je
xchg
rcr
mov
ss
dec
mov
push
loop
mov
mov
sub
pusha
push
stos
pop
lods
xor
sbb
mov
adc
lds
cmpsl
xchg
data16
aam
stos
arpl
inc
sub
push
mov
popf
adc
dec
adc
cs
inc
jmp
sbb
pop
mov
sahf
push
xchg
imul
xchg
mov
push
pop
pop
ret
ja
fisttpll
mov
xchg
mov
sub
mov
es
fstpl
aad
push
rcl
add
and
out
orl
shlb
je
lods
jae
gs
xrelease
inc
cs
jle
das
xor
mov
sub
pop
jne
jle
jp
mov
xchg
add
mov
mov
mov
push
aad
xlat
add
xor
fcoms
add
mov
daa
inc
pop
in
mov
iret
lock
inc
add
pop
mov
aad
dec
subps
sub
mov
inc
mov
lods
cmpl
call
pop
cltd
repz
arpl
test
fidivrl
and
xor
fcoml
add
or
jbe
push
fsubl
int
rolb
lock
mov
push
jns
jne
mov
add
in
and
test
mov
int3
popf
inc
mov
aam
push
sbb
outsl
inc
pop
movnti
std
pop
iret
pop
js
add
lcall
call
mov
in
dec
adc
dec
push
add
imul
add
rolb
cmc
or
pushf
pop
cmp
adcl
xchg
movsb
pop
out
data16
bound
test
stos
in
aad
stc
add
pop
andb
inc
adc
in
jno
jle
mov
repz
pop
enter
arpl
xlat
lds
inc
add
inc
xchg
pusha
dec
lods
lock
xlat
and
shrl
test
or
aad
sbb
cmc
aaa
stos
popa
mov
fcmovnu
out
mov
data16
test
push
sub
dec
rcrb
xchg
xchg
cmp
stos
mov
lods
dec
data16
pop
dec
fnsetpm(287
jg
lret
and
loopne
repnz
lahf
inc
imul
sahf
mov
rcrl
jno
stos
push
rcrb
arpl
test
mov
lret
jne
sar
sahf
sbb
push
lcall
out
insl
stos
pop
pop
inc
das
sub
addl
aad
enter
dec
mov
mov
mov
pop
add
fs
cmp
pusha
jecxz
xchg
mov
mov
push
repz
addb
lcall
stos
cmpsb
mov
push
aad
clc
adc
mov
test
and
popf
js
cmp
fisubl
loope
dec
and
fdivp
das
sarb
push
inc
push
jb
rcll
pop
movsb
mov
add
mov
rorb
jg
fldcw
xor
int3
mov
pop
pop
push
out
jae
dec
or
sub
std
sub
jl
and
cld
bound
into
out
cld
dec
mov
add
loope
iret
jecxz
mov
cmp
repz
inc
test
pop
outsl
aad
xlat
arpl
aaa
fstpt
pusha
and
sub
popa
xchg
das
sub
mov
mov
push
add
pushf
push
pop
mov
jbe
dec
add
sbb
js
mov
je
pop
aad
sub
jno
and
xchg
add
test
iret
fcoms
out
fs
jmp
xor
xor
shlb
pop
out
fsub
call
aad
jbe
mov
dec
xchg
push
mov
push
jb
fsub
or
add
sbb
pusha
mov
dec
fdivrl
stos
in
jge
adc
nop
mov
std
lods
pop
mov
insl
add
mov
int
cmp
jno
jge
xchg
pusha
push
jle
loopne
fs
cltd
in
pusha
xchg
mov
sub
mov
xor
fdivr
and
cmp
test
mov
xchg
add
rolb
lcall
xchg
dec
into
mov
fbld
testl
xchg
sbb
mov
cwtl
dec
inc
mov
addr16
mov
out
rorl
mov
cltd
mull
push
stc
loopne
test
push
rclb
lock
sbb
cwtl
sbb
inc
cmp
xchg
mov
or
lahf
loop
lock
bound
lret
sbb
movb
xchg
cld
scas
fisttps
fwait
mov
out
rcl
cmp
arpl
ret
or
jns
fnsave
sub
sbb
and
mulb
mov
jnp
imul
pop
into
wbinvd
popa
add
inc
xchg
push
inc
stos
xchg
pusha
cltd
push
in
push
xchg
inc
xor
push
mov
shr
jnp
lods
cmp
xchg
and
outsb
repnz
imul
pusha
subl
jno
pop
mov
push
fldl
pop
mov
cmp
add
or
int3
pusha
iret
and
cmc
aam
sbb
movsl
aad
cmp
mov
iret
rorb
mov
mov
adc
leave
sub
fidivl
rol
pop
leave
mov
jecxz
insl
hlt
mov
or
rcrl
lods
add
cmpsb
xchg
popa
push
mov
add
fildl
adc
push
scas
sub
mov
popf
lahf
loopne
movsb
pop
mov
push
test
cmp
ja
add
subl
pop
fsub
enter
push
jo
call
add
xor
aam
notl
fisttps
es
sub
cs
sahf
dec
jg
inc
inc
mov
sbb
test
aam
add
pop
xchg
xlat
add
inc
in
xchg
loopne
aam
cmp
cmp
fmuls
xlat
and
mov
pop
push
pop
aad
insl
insl
push
dec
clc
cli
jmp
add
inc
inc
inc
add
xor
das
fcmovnbe
fcomps
push
daa
shlb
push
icebp
dec
adc
inc
fstpl
dec
cmc
cmp
dec
push
pop
lea
xchg
cmp
adc
cs
xlat
andl
in
mov
insl
cs
inc
stos
lahf
iret
add
add
stos
outsb
pop
repz
xchg
dec
xor
inc
jmp
rol
pusha
sti
mov
sub
adc
mov
out
lcall
xchg
or
mov
pop
jb
xor
adc
pop
jae
mov
sub
lock
ret
ret
out
xchg
sub
mov
enter
and
mov
aam
inc
adc
hlt
ret
mov
std
sub
inc
dec
fnstenv
pop
sub
adc
mov
add
rorb
jne
push
xchg
push
imul
cwtl
sbbb
jne
fs
mov
loope
jge
sub
cs
sbb
into
and
mov
mov
cmp
push
sbb
sub
xchg
xchg
push
mov
repz
sahf
loop
sub
out
lahf
push
jbe
lcall
in
dec
jb
push
test
jl
rep
cs
scas
jge
mov
lds
and
cmp
mov
imul
dec
and
shll
pop
add
jg
or
jge
lock
sbb
hlt
dec
adc
add
scas
call
int
push
cmp
xor
inc
mov
lahf
add
xchg
push
pop
aam
insl
int
mov
fnstenv
std
mov
or
or
jne
cmp
insl
mov
push
mov
ror
mov
fmuls
mov
mov
add
pop
in
and
xchg
inc
std
ret
out
aam
pop
xor
mov
push
test
sub
xor
jnp
add
mov
xchg
pop
loope
arpl
cmp
daa
push
pop
insl
jmp
loop
rcrl
pusha
ja
xor
mov
add
loop
pop
test
jo
pop
mov
or
dec
inc
lahf
jl
popf
xchg
push
je
dec
or
aam
arpl
pop
mov
mov
push
fsub
pop
aam
mov
jno
xchg
in
insl
pop
cmp
aaa
in
pop
ljmp
sti
adc
sbb
loop
xchg
and
xor
jns
repnz
insb
movsl
addr16
add
int3
add
push
and
xlat
subl
xchg
inc
inc
hlt
mov
outsl
inc
mov
das
inc
pop
jno
ror
aad
push
out
cmp
push
mov
push
pop
call
pop
ss
sub
mov
out
pop
pop
fisubrl
cwtl
aam
bound
pop
mov
daa
xor
jo
or
das
add
in
stos
xchg
dec
mov
dec
arpl
ficoml
arpl
inc
xlat
cwtl
mov
stos
int3
xchg
rorb
mov
mov
sbb
adc
stos
adc
pop
loope
sub
mov
in
xchg
mov
outsl
clc
push
negb
imul
ljmp
rcrb
mov
repnz
in
add
scas
jmp
cwtl
iret
test
jle
ds
or
jmp
shll
push
dec
repnz
add
dec
cltd
insb
pop
jne
aad
xchg
adc
je
stc
stc
jle
add
jg
daa
push
pop
sub
mov
add
repz
cmp
jne
push
dec
mov
data16
xchg
iret
aaa
pop
adc
mov
dec
popa
insl
adc
adc
stos
adc
imul
out
filds
data16
push
mov
adc
xchg
sub
mov
ss
sbb
adc
pop
push
dec
lcall
mov
cmp
cmp
in
pop
pop
aas
cmp
dec
orb
adc
pop
and
fdivl
mov
xchg
addr16
js
fsubr
pop
aaa
daa
adc
mov
nop
add
sub
sub
cmp
imul
sarl
sub
sub
mov
jno
push
mov
jns
repz
inc
push
lods
scas
jmp
pop
ds
xor
xchg
sbb
sahf
and
bound
push
hlt
pop
int
nop
pusha
mov
shl
clc
aam
xor
mov
or
cli
add
pop
and
mov
xchg
out
mov
adc
clc
lret
inc
ret
inc
pop
mov
gs
negb
mov
xchg
pop
loope
jno
stos
mov
mov
inc
leave
es
aas
adc
cmp
mov
cltd
xchg
cmp
mov
test
hlt
pop
sbb
dec
push
lock
or
call
push
or
inc
pusha
cmpsl
lods
loop
push
mov
cmc
mov
hlt
or
sbb
sub
unpcklps
dec
jecxz
cmp
out
dec
lock
scas
xor
add
sbb
js
mov
sub
pusha
iret
xchg
mov
mov
mov
lods
mov
aas
ja,pt
cmpsl
incb
sbb
push
mov
dec
add
stc
fs
mov
push
mov
mov
mov
inc
inc
repnz
aad
ficompl
push
repz
popf
cwtl
mov
add
add
jne
or
push
and
lds
clc
inc
aam
cmc
scas
dec
or
test
test
dec
jnp
push
sub
cmp
and
imul
pop
xchg
cmp
push
sub
aad
repz
dec
icebp
dec
xchg
adcl
mov
les
adc
addr16
or
push
jmp
pop
xchg
das
scas
sub
adc
mov
push
xor
xor
mov
push
mov
inc
mov
pop
adc
ret
adc
mov
in
mov
outsb
push
cmp
or
xor
lods
dec
push
andl
mov
out
dec
mov
add
outsl
jmp
xor
mov
enter
xchg
filds
test
pushf
imul
add
fwait
cmp
aas
outsl
lds
stc
outsb
adc
mov
or
bound
dec
ret
sub
mov
push
out
jae
jae
pop
stos
sti
imul
rclb
cmp
or
das
fwait
lea
sbb
sub
push
pop
int3
jmp
xchg
and
out
int3
mov
jge
jbe
pop
push
add
sbb
mov
pusha
pop
imul
mov
int3
cmp
push
cltd
shlb
pusha
subl
inc
and
cmpsb
aam
pop
ljmp
rorl
popl
js
jge
out
cmp
mov
inc
adc
lret
add
popa
lret
mov
dec
sub
sahf
pop
push
sbb
mov
aas
mov
cmpsl
pop
bound
push
outsl
popf
pop
fwait
sub
dec
and
xor
xchg
jno
push
jae
pusha
insb
repz
inc
arpl
add
jle
push
fwait
or
fisubrs
fadds
sub
xchg
and
test
ficompl
and
nop
inc
and
push
rolb
lret
out
add
sahf
div
mov
add
fwait
jno
das
and
nop
ret
popf
aad
inc
test
mov
and
mov
jle
into
jno
xor
cmp
push
dec
jg
mov
adc
cmp
addr16
lahf
idivb
add
mov
mov
push
leave
cmc
mov
rorb
pop
mov
nop
jg
aam
int3
inc
jns
outsb
js
mov
sub
push
cltd
add
jecxz
xor
out
xchg
pop
in
jno
xor
movsb
jp
push
stos
jbe
and
gs
inc
adc
cwtl
scas
dec
cld
or
addl
lcall
jb
lcall
xchg
cmp
imul
in
lret
sti
sarb
pop
sahf
cmpsb
inc
add
movsl
shrb
add
sub
jmp
push
mov
sub
andl
enter
imul
add
xchg
jle
dec
mov
and
fld
in
mov
out
adc
stos
ljmp
inc
mov
mov
push
pop
mov
or
ljmp
in
and
loop
aam
or
mov
in
fisubrs
aad
pop
les
loop
push
add
add
add
test
arpl
xor
xchg
mov
dec
push
lcall
push
mov
push
sub
fildll
pop
cmp
adc
pop
mov
pop
jge
pop
inc
pop
mov
lea
cltd
or
push
sbb
xor
sub
lock
jle
add
std
call
dec
mov
dec
aaa
ret
dec
mov
inc
insb
scas
pop
in
pop
jmp
call
adc
cmp
imul
mov
aam
inc
jnp
ljmp
mov
aam
cli
roll
pop
push
sbb
cmc
in
and
outsl
sub
add
enter
mov
call
xchg
mov
aam
ja
mov
dec
iret
adc
and
jnp
inc
out
mov
test
fdivrs
and
xchg
jge
addr16
pop
xor
push
test
add
imul
cmp
or
aam
dec
mov
neg
ljmp
inc
push
rolb
pop
push
ret
mov
or
sub
xchg
adc
test
bound
jnp
mov
cwtl
add
jl
sarb
mov
lock
push
pop
orl
data16
aad
adc
xchg
xlat
add
dec
mov
xor
pusha
jp
mov
cmp
pop
mov
mov
add
and
pop
test
lods
sbb
sub
mov
aam
fs
cmpsb
jbe
xchg
arpl
leave
push
test
cmpsl
push
pop
add
fsubs
fdivrp
and
push
pop
aam
xchg
sbb
test
sbbl
into
xchg
add
mov
popf
addr16
mov
cmp
push
shrb
loope
dec
aas
call
ficomps
xchg
xchg
mov
movsl
les
mov
aas
out
xor
jno
sub
in
mov
push
sahf
mov
cmp
jb
sbb
inc
dec
push
fdivrl
lahf
or
or
aam
lock
cmp
lock
test
ffree
adc
cs
aam
add
call
loop
jo
sub
or
mov
repnz
addr16
lock
jno
popa
stc
adc
pop
cltd
sub
jnp
mov
imul
fistpll
sbb
popa
loopne
test
lcall
jl
add
repnz
ret
mov
mov
fcoms
or
rolb
sbb
mov
inc
les
dec
cmpsb
adc
cs
nop
push
push
leave
mov
fisubrl
aaa
add
sub
sbb
out
add
mov
xchg
mov
cltd
jge
add
mov
call
popf
mov
decb
adc
in
add
xlat
stc
cmpsl
loopne
test
out
fwait
aam
or
movsl
jge
lcall
iret
mov
jae
add
mov
fmulp
cld
ret
sbb
xchg
pusha
dec
outsb
jo
aad
ret
add
les
aam
cs
aad
mov
push
mov
ror
popa
mov
or
fiaddl
lea
scas
pandn
xrelease
or
dec
cld
push
or
loop
sbb
incl
iret
and
cmp
pop
add
pop
jae
xor
cmpsl
add
loop
into
inc
cmpsb
hlt
imul
icebp
jo
dec
aad
int
es
and
xchg
dec
rclb
xchg
lock
adc
cli
rcl
sub
xchg
inc
in
jbe
sub
aam
push
push
xchg
xchg
add
popa
push
mov
fists
sarb
push
xchg
mov
inc
add
ja
xchg
push
in
pop
mov
cmp
dec
pushf
nop
jae
aam
fwait
test
mov
push
into
inc
lock
aad
leave
aam
movsb
sbb
and
inc
xchg
cld
and
lret
xchg
mov
push
dec
lret
inc
in
pop
xchg
scas
adc
std
leave
stos
sbb
add
mov
push
mov
lock
mov
insl
inc
mov
jle
and
mov
mov
add
mov
pop
arpl
jle
nop
mov
ljmp
jns
orl
mov
sub
sbb
mov
fsubs
aam
out
mov
call
mov
push
aam
push
std
jae
loope
jp
cmp
xchg
push
sub
add
cmp
shlb
je
mov
sub
dec
cwtl
cmp
repnz
mov
push
xor
sbb
aas
cld
test
inc
and
sub
jg
xor
pop
gs
jno
pop
xor
cmp
mov
je
or
mov
jno
sub
ja
push
jnp
lcall
test
pop
xor
leave
mov
hlt
and
ds
jb
xor
repz
jg
jge
cmp
add
sbb
adc
mov
push
add
mov
inc
pop
js
pop
mov
lcall
cwtl
xor
int3
mov
stos
fsubl
addr16
mov
xor
jl
popf
mov
push
lret
sbb
mov
jns
push
mov
bndldx
scas
sbb
mov
mov
leave
shlb
add
cmp
add
mov
jb
ret
sahf
mov
adc
xchg
pop
xchg
jb
fwait
orb
pop
bound
inc
push
sub
daa
add
pop
test
sbb
cs
loop
movsl
fcmovne
inc
pop
lods
mov
dec
push
movsl
movsb
fwait
pop
pusha
jge
sbb
xor
mov
mov
sbb
fcompl
into
mov
push
xorl
test
mov
aas
lahf
out
mov
fs
movsl
cwtl
pop
rol
jg
mov
rcl
ljmp
jbe
jmp
dec
sbb
stos
insb
sbb
lds
jae
xlat
pop
loop
and
xor
nop
jno
sub
movsl
xor
and
hlt
out
pop
jb
test
jo
arpl
testb
pop
jno
imul
aam
cmc
sub
mov
stos
pop
das
cmpl
cli
clc
xor
mov
stos
sbb
lods
jnp
inc
es
sub
rcr
movsl
pop
punpcklbw
xor
pop
pop
inc
jecxz
or
pop
mov
mov
jge
xor
mov
icebp
cs
je
push
stc
jnp
mov
mov
cwtl
push
inc
add
adc
pop
jg
mov
stos
mov
mov
inc
sbb
pop
out
xchg
jmp
pusha
mov
xor
inc
mov
leave
push
imul
xchg
stc
leave
mov
sbb
xor
push
push
cmc
xlat
or
dec
cli
add
in
aaa
dec
jl
inc
mov
pusha
xchg
lret
jnp
push
add
xchg
mov
ja
jg
and
add
ret
push
push
push
shlb
xchg
jne
sbb
frstor
xlat
dec
mov
pop
xchg
and
add
shll
jo
notb
push
subl
leave
ret
shlb
push
pushf
repnz
jle
ljmp
add
xlat
mov
fsubp
push
jnp
mov
jl
add
jo
dec
movsb
pusha
cmpsl
sbb
push
or
ja
testb
test
or
jns
dec
dec
mov
or
cld
in
scas
mov
int3
pushf
pop
jns
cmc
jae
insb
dec
mov
incb
xchg
das
clc
shll
mov
ljmpw
roll
cmp
dec
mov
sub
add
inc
icebp
dec
jge
dec
or
rorb
in
sbb
ljmp
out
pop
sbb
or
inc
loope
push
test
add
jp
pop
mov
lods
in
aam
jle
pushf
inc
stos
test
inc
xchg
sub
fs
sub
pop
mov
push
clc
push
nop
xchg
cmc
pusha
xchg
or
stos
fsubs
stos
xor
sub
dec
mov
and
add
sbb
xchg
cmpsl
adc
dec
scas
js
push
xchg
mov
lret
mov
or
jno
jl
cmp
inc
push
mov
adc
aad
inc
sahf
addl
sbb
lock
inc
fmull
cli
sub
jbe
sarb
mov
push
sbb
lcall
xchg
shll
sahf
push
mov
xchg
ss
inc
out
bound
sbb
sbb
fstpt
aas
in
insb
mov
add
mov
xchg
push
push
xchg
repz
sub
xchg
cmp
pop
lahf
test
pop
jns
push
shlb
inc
push
andl
popl
sbb
add
pusha
sbb
out
jp
andb
xor
hlt
push
incb
inc
callw
sub
push
push
cmpsl
lock
fidivl
xchg
mov
in
pop
pusha
mov
mov
or
sbb
pop
aad
and
loop
in
std
mov
mov
mov
or
pop
call
aaa
lods
xor
pushf
mov
loopne
dec
aas
mov
les
js
cmc
loopne
pop
dec
aad
fisttps
mov
and
inc
sub
ficompl
sti
push
sub
pop
cmpl
insb
cmp
xlat
dec
and
arpl
push
mov
jl
or
or
aaa
gs
int
lea
xchg
test
or
outsb
push
daa
dec
inc
and
sbb
sbb
push
add
stos
aas
lods
pusha
cmc
sbb
jae
add
aam
shll
ljmp
inc
mov
or
xchg
shll
repz
mov
fstpl
jmp
push
pop
pusha
push
inc
fcomi
sub
mov
rorb
and
inc
adc
aam
and
repz
hlt
aam
push
cmp
fwait
repz
push
xchg
mov
sbb
out
lret
push
jne
mov
std
testb
lret
mov
mov
or
lahf
sub
jecxz
jnp
int3
adc
or
push
js
sbb
push
pop
add
cltd
pop
mov
adc
gs
cmpsl
xor
decb
fistps
pop
int3
sbb
sub
pop
gs
imul
loop
pop
pop
icebp
test
adc
pop
adc
fs
daa
add
and
cmpl
and
outsb
adc
lret
std
fmuls
dec
pop
xchg
mov
mov
adc
repz
jle
fstl
xchg
ljmp
flds
xor
cld
fwait
inc
dec
pop
dec
or
mov
lds
and
daa
add
and
sti
mov
push
xchg
mov
aad
movsl
pop
ja
mov
sbb
gs
jle
mov
cltd
add
rorl
pusha
jecxz
cld
xor
aam
jmp
mov
ret
and
scas
add
repnz
and
icebp
add
pop
xchg
push
inc
pop
and
pop
je
enter
mov
xchg
add
xor
stos
adc
mov
sahf
mov
add
ljmp
cmpl
mov
and
inc
data16
mov
outsb
and
into
cmp
popa
cmp
lds
les
xlat
arpl
or
dec
mov
jbe
fldenv
xlat
push
int
adc
dec
mov
mov
clc
pop
je
mov
mov
mov
mov
add
add
hlt
dec
imul
popa
sub
or
push
test
xchg
shll
mov
outsb
lahf
loop
roll
ret
or
pop
inc
xor
add
out
ss
in
pop
es
and
pop
in
sub
shll
mov
cmp
adc
or
popa
mov
adc
dec
pop
pushf
adc
out
add
xor
mov
mov
push
push
cmp
adc
pushf
loope
aam
sti
and
jo
fldt
nop
es
jo
jnp
push
fdivr
cmc
icebp
cwtl
adc
pusha
roll
xor
lahf
add
ret
ds
pusha
mov
scas
adc
fadds
add
test
aad
repz
out
js
sub
inc
call
jl
stos
lahf
sub
xor
add
add
cmpl
jns
lods
out
pop
push
mov
jo
sbb
std
fsubp
jae
testl
mov
cmpsb
mov
add
pop
xchg
enter
cmp
scas
and
add
jns
aas
or
lcall
test
cs
out
inc
das
in
repz
mov
cmc
stos
mov
pop
iret
push
popl
sti
cmpsl
xor
push
jo
mov
sbb
push
shlb
xchg
sub
mov
add
into
sub
or
outsb
dec
mov
add
add
movsb
pop
jno
mov
jge
ljmp
push
imul
pusha
enter
mov
xchg
and
mov
mov
into
insb
sbb
dec
cmp
push
push
nopl
shrb
lea
scas
in
inc
in
out
in
jns
pop
xchg
push
push
pop
bound
popa
clc
add
test
repnz
js
jg
mov
or
lods
outsl
jo
je
clc
fsubs
xlat
mov
ja
inc
js
sar
add
je
fisttps
int3
mov
sahf
or
stc
testl
ja
aad
xor
imulb
jno
adc
iret
into
mov
je
aam
xchg
xchg
loop
pusha
xor
push
es
lret
jne
jmp
ror
cmp
imul
movsb
inc
add
dec
inc
lret
mov
cmp
mov
add
fmull
lret
in
sub
push
jae
mov
fdivr
sub
pop
jne
add
push
fsubs
movsl
push
xchg
outsb
stos
jecxz
stos
add
jmp
mov
xor
lods
inc
jno
aad
mov
jle
je
in
mov
cmp
dec
add
repnz
jg
pop
push
jbe
fwait
cs
loopne
xlat
daa
adc
jnp
dec
rolb
push
sahf
lods
cld
movsb
push
jle
or
adc
loopne
stos
jne
jns
in
xchg
sub
lcall
lcall
into
test
dec
icebp
xor
push
ds
or
sub
dec
dec
mov
stos
insb
imul
inc
loope
pop
rclb
sbb
loopne
popf
movsb
stc
xchg
stos
jecxz
sar
sbb
dec
cmp
cmp
aam
stc
inc
in
test
pop
push
sahf
repz
bound
lock
lea
pop
stos
outsb
dec
cmpsb
lods
cs
outsb
dec
pop
out
mov
fs
cltd
sbb
leave
bound
rorl
outsl
enter
xchg
and
popa
imul
dec
jo
cmp
test
pop
sub
out
pop
iret
dec
pusha
jmp
sub
cli
push
add
cmp
jp
dec
stos
loop
sub
cmpsl
rep
pop
data16
sbb
push
cmc
cmp
das
das
xlat
cltd
mov
sub
mov
dec
shl
ds
mov
pop
in
add
pushf
push
insl
dec
mov
add
mov
loop
aad
inc
and
pop
mov
scas
es
shl
or
stos
and
add
repnz
sbb
xor
xlat
es
fcomps
mov
xor
addr16
in
lret
stc
outsb
push
cmp
mov
inc
dec
or
lock
lea
lods
and
push
insb
jae
xor
es
repz
or
sub
pop
add
test
in
add
lds
dec
call
lods
xchg
imul
jae
jp
aas
loopne
mov
or
mov
pop
cli
xchg
outsl
push
pushl
out
aam
in
rolb
imul
xchg
aas
push
inc
ss
lods
in
jo
or
ret
les
mov
or
orb
push
jne
out
icebp
std
aam
stos
xchg
add
in
fwait
xchg
mov
leave
dec
dec
test
pop
or
xor
scas
jl
popl
aam
dec
add
cmpsb
pop
push
int
imul
stc
pop
aam
aas
aaa
sarl
and
mov
sarl
movsl
add
fs
pusha
jge
jno
stos
jbe
shrb
xchg
lret
pushf
jmp
mov
daa
and
mov
rcl
mov
xchg
push
shlb
stos
pop
push
adc
movsb
xlat
pop
and
inc
add
pop
int
hlt
inc
xchg
jns,pn
int
add
push
shlb
inc
mov
sbb
xlat
dec
dec
test
nop
arpl
roll
lahf
push
jbe
pop
push
gs
popa
lahf
xor
lret
aam
repz
mov
icebp
mov
add
sub
adc
add
push
out
or
xchg
sbb
dec
repz
cmp
or
das
es
aas
test
fwait
and
cli
ds
and
nop
push
mov
mov
loop
loopne
scas
aam
xor
cmpsb
sub
bnd
push
and
or
das
ds
inc
mov
inc
mov
add
test
lcall
adc
mov
mov
push
xchg
dec
je
xchg
dec
ljmp
mov
sub
xorl
daa
mov
dec
pop
and
iret
ficoml
shrb
push
hlt
andb
es
mov
xor
xchg
lds
cmp
aaa
lret
cld
sub
ds
xor
cld
mov
push
xchg
add
add
add
cmp
mov
fimull
les
add
mov
cltd
jmp
dec
lods
fs
mul
sbb
xor
stc
adc
pushf
lret
testb
and
repnz
stc
mov
and
or
add
aas
pop
ffree
das
cltd
cmpsl
pop
xchg
rcr
adc
negb
mov
lock
mov
repnz
in
and
sbb
ret
fcmovnb
xor
mov
test
pop
gs
mov
pop
add
sbb
dec
mov
sub
pusha
and
push
mov
dec
cmc
fwait
add
push
sbb
movsb
mov
push
mov
sbb
inc
sub
je
mov
enter
pusha
outsl
xchg
ret
lret
sub
pop
lods
mov
das
lcall
push
popf
test
hlt
lcall
hlt
nop
cmc
mov
outsl
loop
jnp
movsb
mov
xchg
sbb
test
jp
loopne
pop
or
mov
cmp
lods
mov
lcall
xor
pop
insl
and
push
inc
xor
pop
or
add
fldl
addr16
lcall
stc
mov
mov
add
xor
xchg
cwtl
mov
scas
pop
and
fdivl
xchg
push
sub
mov
or
xor
xchg
jg
mov
pop
pushf
nop
xlat
and
out
jmp
adc
xor
testl
add
xchg
ss
mov
add
xchg
sub
bound
mov
jno
cld
shl
or
leave
int
pop
imul
cmp
mov
filds
lcall
pop
sbb
mov
cld
inc
mov
cmp
jo
fbld
mov
and
test
add
cmp
enter
or
and
jg
sbb
shrb
pop
pop
cltd
outsb
pop
imull
jg
dec
pop
pusha
and
mov
jb
push
jge
mov
mov
pop
stc
dec
xor
call
data16
outsb
repz
pop
cmp
push
into
pop
sbb
pop
add
cmp
push
inc
cmpsb
lea
out
gs
pop
fwait
mov
ljmp
push
sub
cmpsb
jb
mov
push
iret
xor
out
daa
pop
add
lret
mov
inc
ds
ret
add
dec
test
pusha
jg
popa
xor
cmp
xchg
int3
lods
or
mov
adc
and
call
sub
aaa
daa
mov
iret
in
pop
sbb
cmpsb
mov
fmuls
mov
jp
xchg
data16
repz
dec
je
mov
inc
pop
pop
add
xchg
pusha
xor
aam
mov
outsl
je
push
mov
rcrb
pop
inc
add
add
andb
enter
push
fcom
sub
lock
inc
popa
push
lcall
sbb
push
jne
push
pop
in
sub
enter
aam
dec
rcll
mov
add
ret
inc
movsl
inc
add
pusha
clc
xchg
pop
push
into
or
fildl
push
mov
xor
pusha
dec
out
punpcklwd
out
lcall
int3
pushw
insl
es
and
xchg
lcall
xchg
pop
jo
xchg
jp
add
cli
stos
pop
stos
shr
xor
and
xchg
inc
xor
mov
fisubs
in
or
push
pop
in
nop
add
imul
adcb
dec
jmp
cmpsl
adc
sbb
sbb
mov
scas
cmp
pop
adc
stc
pop
adc
dec
mov
bound
in
pusha
pop
je
in
push
aas
loop
fwait
push
notb
jnp
cmpsb
enter
xchg
lahf
and
insl
loope
sbb
push
xchg
adc
inc
xor
xor
std
fmuls
cltd
pop
pop
xchg
insb
jbe
lea
sahf
fisttpll
add
ret
or
adc
into
push
ds
push
sbb
mov
push
cltd
add
popa
shlb
leave
jne
pop
push
mov
add
icebp
adc
xchg
inc
cmp
negb
jo
nop
idivb
subb
stc
vpandn
jp
mov
je
pop
sub
add
mov
and
pop
add
jp
push
loope
test
xor
mov
and
aam
mov
fs
aad
mov
sbb
cmp
ljmp
les
stc
add
rorb
and
orb
mov
addr16
sahf
add
sahf
incl
aas
lds
faddl
int
add
out
jne
fldenv
cmc
aam
orb
jns
in
sbb
xor
repz
xor
jg
xlat
xchg
add
xchg
inc
or
aad
ret
fsub
fldenv
mov
inc
push
dec
fwait
pushf
and
roll
push
mov
aam
mov
jle
push
add
jno
and
pop
subl
xchg
xor
inc
pop
repnz
stos
shlb
push
mov
pop
scas
mov
pop
adc
xor
ret
xchg
jb
int
add
dec
arpl
jecxz
loopne
mov
lahf
pusha
sub
cs
scas
dec
movsb
ja
aad
out
push
cmp
xchg
stos
loop
test
fimuls
movsl
aam
hlt
int3
int3
cmp
mov
wbinvd
mov
lcall
sub
ror
mov
cmp
cwtl
rcr
pop
lret
lods
shlb
jnp
repnz
popa
pop
pop
fdivl
adc
mov
arpl
add
dec
sahf
push
nop
dec
imul
in
sub
aam
push
stos
mov
add
and
hlt
push
movsl
xlat
jnp
cmpsb
mov
test
in
dec
lods
mov
fmuls
xchg
pop
scas
pop
pusha
xchg
inc
mov
in
jle
push
mov
lahf
mov
outsl
outsb
in
cmp
out
rolb
cwtl
cld
rorl
jo
xor
mov
mov
xchg
cs
repnz
sbb
jae
sahf
int3
pushf
call
aam
fsub
and
pop
adc
fisubrl
loope
mov
sbb
iret
pop
inc
fimuls
test
adc
add
insl
jge
gs
imul
dec
or
xchg
fildl
clc
orb
sub
sbb
cmpsl
ret
stos
sbb
push
sbb
cmp
aam
ljmp
sarl
mov
out
sub
push
aam
jle
sbb
adc
xchg
push
xor
test
hlt
test
mov
lds
mov
xchg
mov
insb
xchg
fwait
mov
cwtl
or
push
xchg
or
cmovae
dec
sti
and
mov
in
sbb
inc
out
dec
mov
mov
ret
sti
cmpsl
in
adc
call
sbb
mov
mov
mov
mov
add
adcl
mov
aad
cmp
or
cmp
sbb
cli
mov
je
push
inc
pop
es
gs
inc
cltd
or
mov
push
sbb
mov
in
jecxz
add
mov
fidivrl
dec
imul
add
mov
sub
mov
lods
shl
sbb
push
ret
clc
sbb
adc
cmp
push
movsl
popa
insl
mov
ja
test
adc
xor
leave
inc
enter
inc
sbb
bswap
pop
dec
sahf
shrb
dec
nop
jl
subb
sub
mov
mov
adc
or
push
add
aad
fimull
pop
dec
jne
mov
or
add
add
out
out
ja
sub
pop
aam
push
jo
or
adc
mov
push
fmul
mov
cld
and
lods
iret
aam
pushf
add
loop
mov
or
mov
sub
push
add
insb
cmp
aad
aad
dec
pop
add
ret
pusha
lea
test
das
jbe
jns
sbb
int
xor
sbbl
add
std
outsb
imul
std
repz
xlat
test
daa
ret
mov
sub
fiaddl
inc
loop
ljmp
mov
out
xchg
nop
stos
inc
fcomi
pusha
adc
push
shlb
pop
mov
in
repnz
cmp
adc
or
insl
lcall
cmc
cli
pop
int
cmp
xchg
stos
jge
fcomi
lock
or
sbb
call
out
addr16
cld
mov
xchg
insl
jb
adc
pop
dec
add
jge
push
std
mov
or
jnp
std
jns
lahf
gs
sub
addr16
aaa
fadds
jbe
pop
jmp
fsubrs
push
or
mov
int
aad
xchg
int3
push
inc
lcall
dec
mov
mov
push
mov
mov
xchg
int3
dec
adc
xchg
mov
mov
out
push
cltd
dec
adc
into
aam
cmp
or
test
int
cltd
dec
lcall
jp
jl
fwait
mov
shll
or
fistps
ljmp
mov
mov
add
mov
bound
mov
and
cs
mov
rcrb
jecxz
stc
add
shr
stos
sbb
jmp
cmp
cli
test
fstpl
pop
aam
cmp
cltd
adcb
imul
jecxz
add
push
xlat
fidivrl
sbb
xor
add
cmp
jge
sarb
test
sbb
mov
or
testb
or
push
add
fcomps
jmp
into
lret
mov
jg
xor
fstpl
sub
and
xchg
ja
enter
push
jb
mov
mov
fidivrl
dec
push
mov
cmpl
dec
hlt
mov
cltd
in
lret
mov
or
outsb
cltd
add
jbe
cmp
jns
or
push
lods
inc
aam
daa
adc
jbe
into
repnz
loopne
push
jge
aad
adc
cwtl
cmpl
pop
xchg
loopne
sub
aam
fstpl
and
adc
sbb
push
repz
fiaddl
int
pop
mov
mov
push
mov
aad
shrl
addr16
cmp
or
sbb
pop
jl
jmp
sub
sub
dec
inc
dec
outsb
fwait
flds
in
dec
enter
mov
cli
jo
add
les
cltd
nop
mov
fisubrl
xchg
sub
loop
adc
adc
push
pop
scas
sbb
mov
sbb
sub
mov
jp
outsb
sub
inc
xor
adc
call
or
mov
mov
sahf
xlat
pop
push
dec
in
in
mov
cmp
fucomp
int3
mov
mov
mov
xchg
shl
arpl
pop
das
pop
gs
mov
aam
xchg
pop
xor
cmpsb
icebp
push
mov
aam
xor
xchg
mov
cld
stc
imul
cmp
lret
aam
adc
add
push
mov
into
mov
sbb
rolb
outsb
std
sbb
sarb
jae
sbb
jg
xchg
mov
sub
pop
jmp
jp
push
aam
enter
cltd
xchg
mov
xor
addr16
inc
sbb
in
lea
mov
repnz
mov
push
je
xor
dec
clc
mov
mov
cmc
leave
test
inc
aaa
push
lahf
adc
mov
sbb
popa
jae
pop
les
add
les
cmp
gs
std
pusha
sub
cmp
popa
aad
sbb
or
jno
xor
add
sti
pop
lods
fcompl
jae
ljmp
ljmp
loopne
inc
mov
lock
jo
outsl
lcall
shrb
sbb
imul
fcoml
cli
xchg
pop
jmp
sub
and
andl
jns
cmc
sub
lahf
insb
and
in
cmc
mov
xchg
xchg
pushf
add
cld
and
sub
pop
sbb
loope
add
jbe
jo
and
lods
sbb
sub
sbb
addr16
and
aam
in
aam
insb
add
nop
shrl
js
mov
mov
add
xchg
inc
sbb
pop
sbb
add
je
and
popa
pop
or
aam
cmpsb
cmpsb
repz
icebp
jne
jecxz
addr16
pop
push
jmp
notb
xchg
orl
dec
int
in
out
push
ljmp
xchg
mov
xchg
push
dec
dec
adc
jb
lahf
xchg
fwait
adcl
in
xchg
mov
shl
or
aam
leave
mov
jl
sub
pop
adc
fdivrl
pop
sti
shlb
cli
inc
stos
lea
mov
push
dec
adc
lea
out
or
cmc
aam
cmp
and
das
inc
ret
orb
std
and
cmpsl
das
mov
sti
mov
push
fwait
and
movsb
xchg
pop
xchg
jnp
out
mov
jg
outsl
not
int
mov
arpl
test
lahf
outsl
or
ljmp
mov
stc
std
or
pop
scas
dec
icebp
aad
sarb
into
mov
test
sar
cmp
push
xor
inc
nop
add
lahf
mov
cld
xchg
pop
sbb
jg
add
icebp
cmpsb
hlt
leave
pusha
add
cmp
movsb
test
add
ret
in
pop
lods
sub
stos
jmp
xchg
cs
add
sub
and
sbb
dec
mov
pushf
fdivrs
add
pop
movsl
pop
pusha
lahf
mov
and
dec
imul
ret
testb
stc
jno
inc
rcrl
dec
mov
sbb
pop
fwait
repnz
insb
jecxz
push
cmc
sti
outsl
jne
push
mov
cwtl
pusha
aam
mov
cmp
adc
std
imul
push
pop
imul
daa
sbb
xor
mov
xchg
loope
aas
add
aad
popf
not
repnz
aam
mov
xchg
imul
testb
sbb
stos
cmp
arpl
movsl
push
repnz
mov
mov
mov
std
pop
int3
pusha
mov
push
and
idiv
fsts
mov
jne
mov
push
dec
or
fdiv
sbb
aad
jg
into
xchg
push
ss
std
mov
movsl
mov
pop
pop
and
xor
or
ja
std
xor
in
inc
jp
adc
xchg
dec
pop
add
stc
push
push
pop
add
das
mov
jo
pop
aad
mov
or
popf
mov
jbe
fldenv
loopne
mov
mov
mov
pop
insl
fcompl
loop
push
fildll
adc
sub
cmpsb
xchg
lcall
mov
push
ficompl
jbe
push
aas
hlt
pop
mov
repnz
xchg
out
cmpsl
arpl
repnz
cli
repz
stos
push
fstl
ret
aam
aam
fiaddl
gs
mov
jo
push
aam
mov
xlat
mov
xor
das
scas
jecxz
push
mov
dec
jb
lock
cwtl
cmp
jecxz
mov
enter
pop
sahf
popa
jmp
into
mov
mov
lods
push
imul
aaa
cmp
cmp
add
pop
dec
fs
push
pop
mov
push
aad
mov
movl
rolb
dec
mov
or
mov
and
fcomps
push
or
push
pop
insl
movsb
jbe
push
and
pop
lahf
mov
push
ds
popa
mov
fs
fnclex
xor
mov
push
leave
mov
cs
bound
aad
cld
adcl
fs
jnp
mov
jl
sub
mov
std
lret
jl
jo
pushf
fstps
mov
or
icebp
out
movb
pop
popf
xlat
push
test
add
sub
and
cvttps2pi
add
mov
pop
xchg
pop
xchg
pop
movsb
push
cli
sub
mov
loopne
sub
xor
xchg
cmc
call
sbbl
aam
dec
or
jge
mov
mov
popf
mov
adc
jb
out
aad
dec
ret
ret
shrb
push
jmp
aam
mov
mov
mov
jae
or
movsb
rolb
sti
lods
es
iret
das
test
cmovns
popa
jecxz
movsl
cs
aam
int3
xor
jmp
sbb
popa
test
insb
add
push
mov
or
mov
in
push
mov
in
add
fidivs
push
test
mov
sti
mov
jb
aam
mov
mov
xor
mov
shrb
xlat
mov
cmpl
mov
das
scas
add
hlt
rcl
jno
in
aam
jnp
add
in
push
dec
out
ficoms
pop
xlat
fsubrl
std
jmp
add
adc
push
pop
and
mov
ror
mov
lods
sahf
xor
cmpsl
mov
js
add
gs
inc
jle
push
add
lahf
cmp
adc
push
sti
in
fsubrp
in
aam
dec
cmc
bound
leave
or
iret
fcmovu
daa
xchg
cmpsl
dec
mov
gs
xor
das
xlat
ss
add
insl
popa
mov
movsl
pushf
dec
sub
lds
in
out
and
rorb
ss
add
icebp
adc
stos
notl
mov
sub
jg
mov
xor
cmpb
repz
add
push
in
movsb
mov
mov
jl
movsl
notb
mov
xchg
scas
int3
stos
push
aad
lock
add
aam
ss
int3
mov
in
fists
fmull
shll
les
jo
mov
adc
sbb
pop
movlps
adc
pusha
jg
inc
mov
sbbl
adc
aam
outsl
daa
test
pop
mov
mov
repnz
aad
scas
in
aas
mov
jbe
mov
cmp
add
test
fs
pop
arpl
test
push
lea
ss
xchg
sbb
xchg
in
adc
aam
push
mov
fisubrl
adc
sbb
fprem
adc
xchg
in
jb
push
ret
and
add
sahf
push
inc
imul
sub
out
add
add
stos
sbb
xor
test
jo
stc
aas
sbb
jne
cmpsb
mov
mov
add
sub
push
push
pushf
shrl
push
xor
lods
xchg
dec
insb
mov
stos
les
je
xchg
push
add
mov
call
test
cli
jnp
jnp
shll
lock
mov
mov
insb
xchg
xchg
inc
fs
mov
xchg
std
movb
inc
lea
popf
fwait
jmp
in
mov
lods
add
jno
push
mov
aad
scas
sahf
and
mov
aad
adcb
cmpsb
cmpsb
das
inc
mov
xchg
inc
sub
push
and
js
pop
mov
ret
push
mull
clc
add
call
daa
push
mov
adc
in
scas
mov
std
out
mov
aas
pop
inc
adc
movsb
mov
scas
jg
insl
aas
int
cmpsb
lcall
roll
lea
lods
clc
add
daa
lret
lods
icebp
pusha
out
add
ss
or
aam
mov
shll
aad
bound
xor
jno
and
lock
inc
aam
repnz
xor
mov
and
mov
mov
mov
cwtl
je
aad
sbb
xchg
mov
pushf
xor
inc
push
add
pop
fwait
lea
addr16
push
adc
pop
sub
pop
cli
push
mov
add
inc
xchg
xor
lods
cs
and
cmovno
inc
ss
push
pop
and
mov
aad
xlat
ds
adc
jno
cmpsb
jp
aad
push
sub
and
ficompl
subl
mov
or
fsubl
sub
dec
bound
outsl
cmpsl
xchg
inc
fs
aam
jp
push
push
push
aas
lcall
je
xorb
lret
jge
dec
out
pusha
test
mov
and
dec
cmpsl
mov
in
jb
lea
dec
aam
xor
mov
push
mov
data16
call
inc
jnp
inc
out
fimull
js
pcmpeqw
loopne
push
je
call
inc
inc
dec
mov
sub
add
data16
xchg
inc
pop
pop
popf
lahf
jmp
pop
cwtl
out
outsb
stos
mov
lret
adc
or
mov
les
sysexit
push
add
push
icebp
outsl
push
xchg
mov
adc
push
loopne
aas
subb
mov
dec
push
pop
xchg
jmp
mov
es
cmpl
lcall
aad
inc
add
jmp
sub
lahf
pushf
mov
xor
lea
cmp
sbb
add
sub
fistps
ss
gs
testb
bound
push
sbb
inc
fwait
mov
xchg
mov
push
mov
pop
adc
xchg
add
mov
ficomps
lret
js
aas
cmp
pop
sbb
sbbl
pop
mov
jo
or
or
mov
stc
lea
sbb
sub
cmp
in
mov
aam
sti
mov
cmp
xchg
mov
aam
cwtl
add
cld
fisttps
add
xor
arpl
insb
mov
jge
pop
movsl
sbb
sbb
mov
notb
adc
bound
inc
cmpsl
adc
ss
jbe
rolb
aam
dec
lods
loope
ljmp
pushf
mov
dec
andb
ret
scas
sub
xor
xor
aam
inc
cmp
jecxz
adc
jns
scas
or
lcall
dec
lea
pop
shll
ds
mov
ljmp
pop
push
jo
sub
pusha
jg
lcall
mov
pop
bswap
mov
inc
sbb
sbb
push
xchg
data16
cmp
cmp
sub
or
push
fiadds
mov
bound
and
rcl
cwtl
push
push
cs
jmp
pop
imul
fwait
xchg
jnp
push
lods
pop
pusha
sarb
pop
sahf
pop
lret
test
push
lcall
ficomps
in
pop
movsl
lret
jns
scas
clc
add
mov
jmp
idiv
call
xchg
lret
mov
pop
adc
jnp
xlat
add
push
fs
pop
int3
sarb
jbe
nop
es
fcmovne
jecxz
enter
inc
aam
adc
aaa
pop
test
lcall
aad
xchg
and
dec
adc
cmp
pop
cmpsl
mov
xchg
push
test
lret
iret
lcall
sub
dec
xchg
ds
add
pop
jno
jne
and
jecxz
aam
push
icebp
test
mov
les
repz
push
loope
cmp
arpl
filds
xchg
int
inc
aad
pop
push
shlb
cmpsl
lds
or
sti
xchg
enter
aad
addr16
jbe
mov
stc
jg
mov
push
stos
aam
adc
ficompl
mov
sub
pusha
cltd
sbb
out
push
pop
xchg
mov
add
insl
hlt
pop
dec
mov
aad
ss
cmp
mov
int
push
repz
aam
xchg
add
lahf
mov
mull
add
lods
stos
popa
sbb
sub
pop
adc
test
mov
imul
jg
mov
inc
lahf
lods
push
sbb
sbb
add
dec
sub
xchg
adc
xlat
xlat
lcall
loop
aad
stos
sbb
cwtl
bound
out
out
pusha
pop
sub
sar
movsb
aad
cs
rorb
xor
stc
hlt
mov
sahf
push
dec
fwait
aam
clc
aad
xor
lds
pop
or
xchg
xor
adc
fistpl
sarl
mov
dec
leave
adc
cld
pop
push
sbb
push
sahf
ljmp
sbb
lock
leave
add
lds
sub
and
movsb
xlat
leave
aam
inc
push
fiadds
and
cmpl
jg
ret
pop
fidivrl
mov
in
cmpsl
xor
cltd
xchg
jne
bound
mov
aaa
cld
mov
add
inc
les
mov
jp
test
jne
ljmp
loope
leave
mov
mov
cld
and
adc
mov
aas
icebp
xchg
xlat
mov
icebp
rol
push
addr16
mov
push
out
sbb
jle
rclb
add
sub
cmp
mov
mov
je
mov
out
xchg
aaa
lret
mov
mul
inc
lods
inc
xchg
add
insl
gs
movsl
xor
nop
add
aad
ss
inc
xchg
push
mov
pop
sub
cmpsl
push
xor
add
jl
push
icebp
rorl
push
mov
xchg
mov
mov
jae
or
dec
mov
roll
cltd
mov
fwait
cmp
adc
pop
jmp
cmp
jae
fdivs
aam
ljmp
jae
pop
add
push
std
add
lcall
mov
aam
jg
stos
mov
mov
mov
lea
mov
pop
enter
sub
and
mov
movsl
das
out
pop
lock
mov
push
insb
sub
push
add
fisttpl
scas
and
mov
adc
insl
lcall
hlt
out
xchg
lock
stc
pop
lods
test
test
mov
dec
mov
dec
loopne
aam
sbb
and
sbb
divl
in
mov
dec
adc
push
jnp
movsl
mov
addr16
test
shlb
sbb
adc
xchg
insl
frstor
jb
xchg
pop
dec
lock
xor
mov
dec
mov
lds
xchg
sbb
pop
movl
outsb
sub
jmp
add
mov
sbb
cmpsb
adc
in
lahf
and
loopne
cmp
jp
sub
sahf
fs
push
mov
push
clc
and
mov
push
mov
add
outsl
push
dec
push
jmp
push
pop
xchg
popa
jmp
scas
in
inc
les
and
xchg
sub
lcall
pop
mov
fs
sbb
in
mov
or
mov
adcb
repz
mov
sub
test
mov
jb
add
pop
movsl
push
es
clc
mov
xchg
pushf
cmc
mov
or
popl
and
addr16
fadds
dec
aaa
dec
or
xchg
add
aam
mov
daa
mov
aaa
xlat
jp
rcll
pop
xor
xor
lea
add
in
enter
jp
mov
out
xchg
mov
push
mov
sbb
mov
mov
sbb
popf
pop
in
mov
sbb
dec
jle
push
dec
sti
pusha
mov
inc
cmp
clc
test
out
popf
int
movsl
inc
pushf
pop
in
shrl
cltd
inc
insl
sti
ficompl
loopne
mov
mov
jb
dec
or
xor
lahf
mov
insb
jg
inc
stos
pop
leave
adc
cli
into
xor
dec
aam
sbb
imul
pusha
filds
into
rol
add
sbb
lea
bound
pusha
or
mov
jbe
dec
aad
test
int3
into
std
leave
sbb
les
or
jmp
outsb
xor
xchg
mov
or
aad
int
loope
pusha
sarl
dec
sahf
mov
mov
insl
movsl
stc
hlt
mov
stos
call
push
and
int3
mov
xchg
mov
roll
mov
dec
imul
dec
mov
shrl
imul
rol
cmpsb
lds
pusha
fcomps
xor
pop
mov
adc
add
lods
mov
mov
dec
in
add
divb
mov
fisttpll
lret
subl
or
loop
mov
mov
or
decb
add
aam
and
popf
ljmp
sub
test
mov
xchg
test
mov
clc
jle
lea
sahf
push
push
aam
or
call
mov
cmp
std
imul
subl
fisubrs
dec
dec
jmp
repz
outsl
ret
xchg
mov
add
dec
sahf
mov
mov
adcb
xor
push
lret
xlat
adc
std
popf
or
imul
or
lar
push
or
loopne
iret
scas
adcb
push
jns
push
fs
test
push
fadd
outsb
mov
adc
aam
pop
popa
jg
call
shll
lea
fucomp
loop
mov
std
jne
pusha
imul
out
std
out
adc
xchg
push
fucomp
adc
fstp
xor
cs
xchg
dec
test
and
or
jae
push
repz
jnp
cmp
push
fs
shufps
add
loopne
sbbb
xchg
cltd
add
jnp
push
add
out
divb
push
insb
and
and
das
and
in
mov
es
fidivrl
lods
xchg
shll
mov
aaa
test
or
or
dec
adcb
sub
test
add
dec
insb
and
popa
fs
sbb
in
pop
inc
or
fdivrs
pop
roll
adc
stos
in
push
pusha
fst
scas
jle
sub
ret
ss
pushf
aas
lgdtl
inc
sub
sbb
mov
add
pop
and
cld
inc
popa
movsl
aaa
inc
and
sbb
pusha
adc
sbb
out
pop
mov
xor
mov
jl
in
out
mov
jge
rorb
outsl
repz
pop
cmp
pop
mov
jbe
pop
xor
or
push
testl
clc
sbbb
push
movsl
icebp
les
aam
fidivs
add
aam
cmpsb
scas
aaa
xchg
ficoml
xlat
repz
jb
int
mov
jp
lret
push
dec
int3
jbe
addl
push
test
jae
call
xchg
pop
aam
inc
sbb
cwtl
frstors
enter
imul
imul
shl
stc
pop
std
fadds
cltd
pop
ret
lretw
sahf
cmc
rcl
adc
lret
int3
call
lret
sub
or
mov
inc
rcrb
div
adc
xor
pop
aam
xchg
test
xchg
mov
ret
sbb
daa
or
or
push
fists
daa
and
xlat
xchg
jmp
rolb
mov
lods
and
xchg
inc
xor
mov
mov
shll
pop
test
out
mov
scas
add
es
pop
jmp
decl
lods
adc
jmp
in
add
int
xchg
icebp
enter
lcall
jle
sbb
xlat
test
lds
add
and
scas
pop
mov
jb
jl
int
lds
ljmp
xchg
arpl
pop
mov
push
mov
mov
cmp
pop
mov
add
cmovs
push
in
and
in
adc
loop
call
sbb
dec
pop
ret
inc
jge
adc
psadbw
xchg
add
popa
sub
push
pop
and
mov
call
push
sbb
jo
loope
sbb
cmpb
mov
xchg
mov
adc
and
test
aad
sbb
xchg
pop
adc
cmc
adc
adc
jl,pn
dec
add
fcmovnb
inc
cli
sbb
leave
push
xlat
sub
push
das
push
push
inc
or
dec
lock
and
push
lret
fsubs
aad
rcrl
sub
mov
pop
cmp
adc
dec
aaa
add
popf
addr16
pop
ljmp
je
cmp
jg
mov
push
and
mov
or
mov
mov
aad
mov
sahf
lods
mov
jae
jge
pusha
repz
addr16
mov
and
lcall
xchg
and
push
or
imul
xchg
loop
pop
jae
lret
cmp
dec
pushf
xlat
mov
jle
test
mov
mov
jb
xabort
xchg
shlb
sti
jp
mov
insb
jl
aam
rcrb
push
das
add
lea
shl
adc
and
inc
into
aad
xchg
push
mov
lret
inc
jg
cmp
stc
cwtl
pushf
test
into
pop
pop
jmp
push
sahf
aam
sbb
jo
loop
rorl
add
inc
inc
andl
mov
cmp
and
sub
xor
xor
mov
orb
jbe
pusha
jb
fcompl
push
sbb
mov
mov
cmp
xchg
xchg
push
cmp
mov
pop
ja
cli
jg
lods
add
shrl
pop
mov
flds
loop
cmpl
in
jno
cmp
adc
xchg
add
cmp
fs
mov
lahf
dec
js
mov
arpl
sbb
cmp
xlat
cvtps2pd
add
xor
test
push
and
js
pop
aad
mov
pop
push
mov
push
aam
roll
lds
add
cwtl
pop
xchg
pushf
mov
sub
fcmovne
add
dec
out
shrl
sub
in
sbb
xchg
xchg
rcrl
mov
repnz
loope
jg
cmp
bound
sbb
mov
in
add
insl
popa
lea
mov
push
aad
xor
fisttpl
pop
sti
inc
in
add
mov
adc
test
je
add
lds
aaa
insl
stc
adc
or
jl
push
dec
decb
fstps
mov
aam
aaa
fwait
ja
cmpsl
mov
mov
out
std
call
mov
aad
lahf
test
mov
clc
cwtl
gs
and
pop
es
xchg
adc
jbe
gs
add
sarb
push
inc
and
insb
and
insl
and
pop
pop
mov
das
arpl
pushf
popa
sbb
mov
or
aam
nop
add
mov
xor
pop
cmp
clc
sets
add
adc
in
mov
jne
fcoml
and
icebp
jne
pop
adc
aam
xor
jmp
cmpsl
test
xor
adc
nop
pop
inc
mov
adc
js
loopne
xor
pusha
jp
mov
pop
jnp
inc
mov
push
ds
stc
stc
andl
lcall
jno
out
adc
mov
dec
les
xlat
es
pop
aas
lea
jne
mov
inc
pop
jmp
pop
loop
jnp
pop
repz
scas
inc
jae
sub
pusha
outsl
ja
outsl
or
sub
xor
pop
popa
aam
movsl
jno
add
mov
hlt
add
cli
out
call
jg
xchg
push
cmp
cld
int3
in
or
push
push
ja
into
dec
pop
pop
stos
and
xlat
ds
outsb
xchg
arpl
ret
jno
cmpsl
mov
lds
push
add
inc
test
add
mov
xchg
ja
mov
out
ja
jl
leave
lods
dec
or
leave
roll
or
dec
or
mov
or
pop
xchg
cmp
leave
fisttpll
int3
xor
mov
stos
pushf
jg
orl
mov
cmc
adc
mov
add
push
jecxz
mov
subl
sub
pop
mov
push
es
pop
mov
outsb
scas
psubd
in
aam
push
xchg
mov
movsw
xchg
int3
rcrb
fdivs
aam
xor
nop
call
in
dec
out
je
pusha
mov
aam
jnp
xchg
and
ffree
xchg
rorb
or
mov
ss
aaa
mov
jbe
jae
lods
push
dec
dec
or
ror
jne
xor
sbb
sub
jl
cs
xorps
inc
sbb
icebp
decl
aas
loop
lods
xchg
std
fsubrl
mov
jae
pop
mov
and
fildl
mov
arpl
add
dec
test
stos
add
mov
mov
lods
cltd
push
push
adc
mov
mov
ljmp
push
movsl
add
mov
add
mov
lret
fildl
xor
mov
orb
mov
xchg
or
iret
out
add
jne
jno
mov
jae
lcall
addr16
int
push
lcall
rorb
push
adc
sti
inc
into
jmp
call
jb
dec
cmp
inc
test
xchg
insl
popf
adcb
adc
stos
loope
push
movsb
icebp
int3
dec
fisubs
movsb
movsl
push
call
mov
sub
mov
xor
and
sub
add
mov
push
mov
sub
mov
add
and
add
sub
push
mov
add
push
mov
and
xor
add
mov
and
mov
mov
mov
sub
cmp
je
and
add
mov
add
sub
sub
add
sub
add
sub
or
mov
mov
test
je
cmp
je
xor
mov
and
mov
or
add
add
add
cmp
je
add
mov
mov
cmp
je
and
mov
xor
and
test
jne
add
mov
mov
or
add
sub
sub
cmp
je
cmp
je
sub
cmp
jne
mov
mov
cmp
jne
add
mov
xor
add
sub
sub
sub
and
or
xor
mov
add
or
sub
mov
mov
add
sub
sub
and
and
cmp
je
or
sub
sub
mov
add
and
mov
sub
mov
add
sub
sub
add
mov
xor
xor
mov
sub
sub
cmp
je
mov
add
and
sub
sub
mov
cmp
jne
mov
mov
and
add
add
mov
sub
sub
test
jne
add
sub
add
sub
add
mov
add
mov
cmp
je
cmp
jne
or
mov
mov
add
and
cmp
je
add
cmp
je
mov
and
mov
add
cmp
je
add
add
mov
mov
cmp
jne
sub
cmp
jne
cmp
jne
mov
mov
xor
add
add
test
je
sub
and
and
sub
sub
sub
mov
mov
cmp
jne
add
cmp
jne
mov
and
add
mov
add
add
or
mov
sub
mov
sub
mov
cmp
jne
mov
mov
or
mov
cmp
je
mov
add
add
cmp
jne
add
add
test
jne
mov
mov
sub
xor
sub
cmp
jne
mov
xor
add
mov
test
jne
or
add
sub
add
mov
sub
cmp
je
xor
xor
sub
mov
add
sub
add
add
add
sub
add
sub
sub
sub
add
cmp
je
and
cmp
je
add
test
jne
sub
mov
mov
xor
add
sub
sub
cmp
jne
mov
cmp
jne
cmp
jne
add
mov
test
jne
xor
sub
mov
sub
lea
push
call
xor
sub
and
add
push
push
push
push
call
cmp
jne
xor
mov
and
and
sub
test
je
mov
add
mov
xor
sub
cmp
je
mov
add
or
xor
and
and
cmp
jne
mov
sub
mov
sub
sub
add
add
cmp
je
cmp
je
and
mov
mov
sub
sub
sub
or
add
push
call
mov
cmp
je
mov
cmp
jne
mov
and
mov
add
sub
sub
sub
xor
test
jne
mov
mov
cmp
jne
and
test
je
xor
mov
add
add
cmp
jne
and
mov
sub
test
jne
mov
mov
add
or
and
sub
test
jne
sub
cmp
jne
mov
mov
sub
add
sub
cmp
jne
add
cmp
jne
cmp
jne
sub
push
push
call
mov
mov
add
cmp
je
add
sub
xor
mov
and
add
and
or
test
je
cmp
jne
mov
mov
cmp
jne
mov
and
add
cmp
jne
mov
and
sub
or
sub
add
sub
and
cmp
je
and
add
sub
cmp
jne
mov
sub
xor
mov
or
add
mov
add
mov
mov
sub
and
mov
sub
and
add
cmp
jne
mov
add
mov
add
sub
cmp
jne
sub
mov
mov
sub
add
cmp
je
mov
cmp
jne
cmp
jne
add
mov
sub
add
mov
sub
add
xor
add
add
add
and
sub
test
jne
add
or
mov
and
sub
mov
and
mov
add
add
mov
mov
mov
or
sub
cmp
jne
mov
cmp
je
cmp
jne
mov
sub
add
mov
add
mov
sub
add
sub
add
cmp
jne
mov
add
mov
cmp
je
mov
mov
sub
cmp
jne
and
mov
add
xor
cmp
jne
xor
mov
and
add
add
add
sub
sub
add
test
jne
mov
mov
sub
sub
add
add
or
test
jne
xor
mov
mov
cmp
jne
add
mov
add
and
mov
add
sub
add
sub
cmp
jne
add
mov
mov
sub
mov
add
and
sub
sub
sub
cmp
jne
add
mov
mov
add
cmp
je
mov
add
add
add
mov
xor
mov
cmp
je
mov
cmp
jne
mov
or
and
add
test
je
cmp
je
add
sub
add
mov
mov
test
je
mov
cmp
je
cmp
je
add
mov
sub
and
mov
cmp
je
mov
sub
add
mov
cmp
jne
cmp
je
sub
add
xor
sub
mov
cmp
jne
mov
add
xor
and
sub
cmp
jne
mov
mov
test
je
mov
add
cmp
je
sub
sub
cmp
je
mov
mov
cmp
jne
add
xor
xor
mov
or
add
and
cmp
je
cmp
je
cmp
jne
sub
mov
xor
cmp
je
mov
sub
cmp
je
sub
xor
and
mov
cmp
jne
add
test
jne
add
test
je
cmp
jne
mov
cmp
je
xor
cmp
jne
mov
and
test
je
cmp
jne
cmp
jne
mov
mov
xor
add
or
cmp
je
mov
add
mov
sub
or
add
sub
add
and
or
sub
and
test
jne
mov
call
add
test
je
mov
cmp
jne
cmp
je
and
mov
mov
mov
sub
sub
sub
add
and
sub
add
test
jne
mov
sub
mov
sub
add
cmp
jne
xor
mov
cmp
je
sub
mov
or
test
jne
cmp
jne
mov
cmp
jne
mov
and
sub
cmp
jne
mov
xor
mov
or
mov
or
mov
add
or
add
sub
and
add
mov
mov
cmp
je
and
sub
xor
mov
mov
sub
sub
and
sub
test
je
sub
or
sub
mov
sub
add
add
mov
mov
sub
add
mov
add
mov
add
sub
add
mov
add
sub
add
mov
mov
xor
sub
add
or
add
mov
mov
sub
or
cmp
jne
mov
sub
cmp
jne
cmp
jne
mov
mov
and
mov
and
cmp
jne
and
sub
mov
mov
mov
or
or
add
and
xor
add
add
add
sub
mov
mov
or
or
add
xor
or
mov
cmp
je
sub
mov
sub
mov
add
sub
sub
test
je
mov
mov
cmp
jne
mov
or
cmp
je
mov
mov
add
add
add
cmp
je
mov
xor
cmp
jne
mov
add
add
add
mov
and
sub
cmp
je
mov
cmp
je
sub
xor
cmp
je
mov
mov
add
add
and
cmp
jne
test
je
mov
sub
mov
sub
add
sub
cmp
je
mov
add
mov
or
add
and
add
add
sub
sub
add
mov
mov
sub
or
mov
mov
mov
and
cmp
je
mov
test
je
xor
mov
add
add
sub
sub
cmp
jne
add
and
sub
sub
cmp
je
cmp
je
mov
mov
sub
sub
or
and
add
add
or
mov
mov
sub
sub
cmp
je
mov
mov
add
cmp
je
mov
sub
mov
add
add
add
cmp
je
xor
xor
sub
cmp
jne
add
mov
cmp
je
xor
add
mov
add
cmp
jne
and
add
cmp
je
add
cmp
je
and
and
and
mov
mov
sub
sub
add
add
add
cmp
jne
mov
sub
add
xor
add
cmp
je
mov
cmp
je
cmp
je
sub
add
xor
mov
sub
sub
cmp
jne
mov
sub
and
mov
add
sub
cmp
jne
cmp
jne
or
test
je
mov
xor
add
mov
and
cmp
je
sub
mov
mov
add
or
cmp
je
mov
sub
mov
cmp
je
add
mov
add
cmp
jne
add
or
mov
mov
add
cmp
je
sub
mov
mov
xor
mov
mov
cmp
je
add
or
xor
sub
add
sub
sub
mov
mov
cmp
jne
add
mov
mov
sub
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
xor
cmp
jne
and
mov
sub
sub
mov
add
sub
and
cmp
jne
xor
cmp
jne
mov
mov
add
test
jne
mov
sub
add
sub
add
mov
cmp
jne
mov
mov
cmp
je
xor
cmp
jne
cmp
jne
add
or
mov
sub
and
add
cmp
jne
cmp
jne
mov
sub
cmp
jne
sub
mov
mov
sub
mov
add
add
cmp
je
mov
add
or
mov
add
mov
add
lea
sub
or
add
sub
push
mov
mov
add
or
cmp
je
test
jne
add
push
sub
add
mov
mov
sub
cmp
je
add
xor
xor
xor
mov
add
call
sub
mov
and
mov
sub
and
sub
or
mov
mov
shr
add
sub
cmp
je
mov
mov
and
cmp
jne
add
mov
xor
mov
cmp
jne
sub
cmp
je
add
sub
add
and
mov
sub
mov
cmp
je
mov
and
add
xor
cmp
je
mov
mov
cmp
jne
add
sub
mov
mov
sub
cmp
jne
add
add
mov
or
xor
sub
xor
add
add
cmp
jne
test
je
mov
mov
cmp
je
mov
add
mov
sub
cmp
je
mov
and
mov
sub
sub
cmp
jne
or
mov
sub
add
mov
sub
cmp
jne
sub
mov
or
cmp
jne
mov
mov
add
cmp
jne
cmp
je
add
cmp
je
xor
or
sub
add
cmp
jne
xor
mov
cmp
jne
mov
mov
add
add
add
add
or
test
jne
cmp
jne
add
mov
mov
add
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
add
test
jne
mov
add
or
sub
sub
sub
mov
add
add
mov
sub
sub
mov
mov
sub
or
add
cmp
jne
test
je
mov
sub
mov
and
add
sub
call
test
je
sub
mov
sub
xor
sub
add
sub
mov
mov
add
cmp
je
or
cmp
je
sub
mov
cmp
jne
and
sub
mov
or
sub
add
mov
sub
cmp
jne
add
add
pushl
push
pushl
call
mov
add
sub
mov
cmp
jne
mov
add
cmp
je
or
sub
or
and
add
addl
mov
add
mov
add
or
mov
add
call
add
sub
add
and
test
jne
sub
mov
mov
and
add
add
add
cmp
jne
mov
add
mov
add
cmp
jne
mov
add
mov
add
cmp
je
mov
and
sub
mov
sub
add
add
and
sub
add
sub
sub
and
cmp
jne
mov
cmp
je
add
add
mov
mov
cmp
jne
sub
xor
mov
add
add
sub
cmp
jne
cmp
je
mov
sub
and
xor
add
sub
sub
and
add
cmp
jne
cmp
je
cmp
jne
mov
sub
mov
add
add
or
sub
mov
cmp
jne
mov
and
mov
add
add
or
pop
cmp
je
sub
add
pop
add
pop
mov
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
push
mov
sub
push
mov
sub
mov
push
mov
and
mov
sub
and
mov
sub
sub
or
movl
add
mov
add
add
mov
add
sub
or
add
add
and
sub
call
and
sub
mov
add
mov
sub
cmp
je
sub
cmp
jne
mov
and
xor
and
cmp
je
cmp
je
mov
sub
mov
add
add
sub
add
sub
mov
mov
or
sub
cmp
jne
cmp
je
or
or
or
cmp
je
mov
add
mov
call
mov
add
mov
cmp
jne
sub
add
mov
and
mov
and
sub
cmp
jne
cmp
jne
mov
cmp
jne
add
mov
sub
sub
cmp
jne
mov
mov
cmp
je
xor
mov
mov
cmp
je
sub
test
jne
xor
sub
sub
cmp
je
or
cmp
jne
add
and
test
jne
mov
or
mov
sub
sub
add
add
sub
sub
sub
add
mov
cmp
jne
mov
mov
add
add
and
add
cmp
je
xor
add
sub
mov
add
add
add
add
call
and
sub
sub
sub
cmp
jne
mov
add
add
xor
add
add
mov
add
mov
and
or
sub
mov
mov
and
add
add
add
test
jne
xor
sub
mov
mov
or
cmp
je
sub
xor
add
xor
xor
xor
mov
cmp
jne
add
cmp
je
add
mov
test
je
sub
sub
cmp
jne
add
or
mov
add
and
mov
add
cmp
je
mov
add
mov
sub
mov
xor
mov
mov
sub
add
add
and
cmp
je
add
mov
cmp
jne
cmp
jne
and
mov
sub
or
add
push
call
test
je
mov
and
add
mov
sub
or
test
je
add
mov
cmp
jne
mov
mov
and
mov
cmp
je
add
mov
mov
cmp
je
mov
mov
add
add
add
add
mov
cmp
je
mov
mov
add
cmp
jne
add
mov
xor
add
add
sub
mov
cmp
jne
mov
cmp
jne
sub
sub
mov
xor
add
add
and
add
add
sub
add
or
or
je
sub
mov
cmp
jne
mov
sub
mov
cmp
je
mov
mov
sub
mov
sub
and
test
je
sub
addl
cmp
je
mov
mov
sub
cmp
je
xor
add
mov
mov
add
add
sub
sub
add
lea
and
mov
sub
mov
cmp
jne
cmp
jne
add
sub
test
je
mov
cmp
jne
cmp
je
mov
cmp
jne
add
xor
xor
sub
and
xor
test
jne
cmp
jne
sub
sub
add
mov
mov
cmp
je
mov
mov
sub
cmp
je
mov
add
sub
and
sub
and
add
sub
inc
cmp
jne
add
mov
sub
mov
cmp
jne
add
add
mov
sub
mov
cmp
jne
cmp
je
mov
cmp
jne
add
and
add
cmp
je
cmp
je
test
jne
or
cmp
je
add
cmp
jne
add
mov
mov
mov
sub
cmp
jne
add
mov
add
mov
add
add
add
add
cmp
je
sub
sub
and
sub
cmp
je
add
mov
mov
cmp
jne
mov
cmp
je
mov
mov
sub
sub
add
sub
mov
mov
mov
add
add
mov
mov
mov
mov
sub
cmp
jne
sub
cmp
je
mov
cmp
jne
and
and
add
mov
mov
sub
sub
sub
or
mov
sub
cmp
jne
add
add
add
mov
and
mov
sub
and
add
cmp
jne
mov
xor
mov
sub
add
sub
and
and
sub
cmp
je
sub
cmp
jne
xor
mov
add
sub
or
cmp
jne
mov
add
and
cmp
jne
sub
mov
sub
cmp
jne
add
mov
and
mov
add
sub
add
add
mov
cmp
jne
add
sub
sub
pop
mov
add
mov
sub
cmp
je
add
mov
xor
sub
add
sub
sub
cmp
je
cmp
je
add
mov
add
cmp
jne
sub
add
mov
add
add
sub
mov
add
sub
cmp
jne
sub
cmp
je
mov
or
cmp
je
mov
add
cmp
je
cmp
je
mov
mov
sub
cmp
je
add
add
mov
add
mov
and
and
cmp
jne
mov
sub
add
cmp
jne
xor
cmp
jne
mov
mov
mov
cmp
je
mov
mov
add
test
jne
and
sub
add
sub
pop
mov
mov
cmp
jne
sub
cmp
je
add
xor
and
mov
cmp
jne
mov
sub
mov
add
and
or
add
cmp
jne
mov
mov
or
add
sub
sub
add
add
cmp
jne
mov
sub
and
mov
cmp
je
add
add
add
mov
add
mov
add
sub
cmp
je
and
mov
cmp
jne
mov
mov
add
add
test
je
mov
or
add
cmp
jne
cmp
je
cmp
je
or
add
sub
mov
mov
sub
add
sub
pop
mov
add
cmp
jne
add
cmp
jne
cmp
je
mov
or
xor
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
add
mov
sub
sub
add
add
push
mov
or
mov
cmp
je
mov
mov
mov
cmp
je
mov
cmp
je
or
mov
and
add
mov
add
cmp
jne
or
mov
mov
add
add
add
push
add
push
mov
mov
cmp
je
cmp
je
mov
or
mov
sub
sub
add
mov
or
mov
add
cmp
jne
sub
cmp
je
cmp
je
or
rdtsc
mov
add
mov
sub
sub
and
cmp
jne
add
cmp
jne
cmp
je
and
add
sub
mov
cmp
je
mov
cmp
je
cmp
jne
and
and
cmp
je
and
add
cmp
jne
mov
mov
cmp
jne
add
mov
sub
sub
mov
add
sub
xor
mov
cmp
jne
xor
mov
add
cmp
jne
mov
mov
sub
test
jne
sub
cmp
jne
mov
cmp
je
cmp
jne
mov
sub
mov
add
add
cmp
je
sub
mov
cmp
jne
mov
mov
and
sub
cmp
je
sub
cmp
jne
mov
cmp
jne
or
cmp
je
add
cmp
jne
cmp
je
mov
add
sub
mov
add
sub
mov
cmp
jne
mov
or
mov
sub
mov
sub
add
sub
or
or
sub
add
sub
add
pop
and
mov
mov
cmp
jne
mov
cmp
jne
add
mov
add
sub
add
and
sub
xor
sub
cmp
jne
cmp
jne
cmp
je
add
sub
sub
pop
test
jne
cmp
jne
mov
mov
and
sub
sub
or
add
test
je
mov
sub
sub
cmp
jne
sub
cmp
je
add
sub
cmp
je
cmp
jne
xor
add
mov
add
cmp
je
xor
mov
add
mov
add
cmp
je
sub
mov
add
mov
add
add
pop
mov
mov
sub
cmp
jne
mov
add
cmp
jne
sub
mov
add
cmp
je
add
mov
or
sub
add
add
sub
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
push
sub
push
xor
mov
and
cmp
jne
mov
sub
and
mov
cmp
je
mov
mov
sub
add
mov
add
mov
add
mov
and
add
sub
sub
cmp
jne
mov
add
test
je
sub
mov
mov
add
add
or
sub
add
cmp
je
sub
mov
decl
mov
mov
sub
sub
cmp
jne
add
or
add
xor
mov
mov
sub
cmp
je
mov
add
sub
test
je
cmp
jne
cmp
jne
sub
mov
cmp
je
sub
cmp
je
cmp
jne
add
cmp
je
add
or
cmp
jne
add
add
cmp
jne
test
jne
mov
and
add
sub
roll
sub
negl
mov
mov
cmp
jne
sub
sub
add
mov
add
subl
mov
cmp
je
cmp
jne
sub
sub
mov
cmp
je
cmp
jne
or
sub
test
jne
and
mov
cmp
je
mov
add
add
cmp
je
mov
mov
sub
sub
jmp
sub
mov
mov
sub
pop
add
mov
add
mov
sub
add
test
je
and
xor
mov
add
test
je
sub
add
test
je
mov
mov
sub
add
cmp
je
xor
pop
cmp
je
add
mov
add
cmp
je
cmp
je
mov
or
mov
sub
add
add
pop
mov
test
jne
cmp
je
add
xor
xor
xor
add
cmp
je
add
mov
or
mov
add
sub
and
sub
sub
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
xor
xor
mov
sub
push
mov
mov
test
je
mov
cmp
je
add
mov
add
mov
add
add
test
je
mov
sub
mov
and
cmp
jne
mov
add
mov
cmp
jne
add
test
je
mov
and
or
and
add
add
cmp
je
mov
mov
and
add
sub
add
cmp
jne
mov
or
sub
add
cmp
je
mov
sub
sub
xor
and
test
jne
xor
add
mov
test
je
mov
mov
add
sub
mov
add
sub
sub
cmp
je
and
mov
add
mov
sub
add
cmp
je
add
mov
sub
sub
add
add
push
sub
xor
sub
xor
add
cmp
jne
sub
xor
cmp
jne
sub
mov
mov
cmp
je
cmp
je
mov
add
sub
sub
sub
xor
cmp
je
mov
mov
add
sub
cmp
je
sub
xor
mov
add
add
test
jne
xor
mov
sub
cmp
je
cmp
jne
and
and
sub
push
mov
cmp
je
mov
add
cmp
jne
sub
mov
mov
mov
cmp
jne
xor
add
cmp
jne
or
mov
add
add
and
add
mov
test
jne
xor
mov
add
sub
test
je
sub
sub
mov
mov
mov
sub
mov
add
xor
mov
sub
cmp
je
or
sub
sub
mov
mov
add
cmp
jne
add
xor
push
add
mov
mov
sub
add
sub
mov
sub
mov
mov
cmp
je
mov
cmp
jne
xor
mov
mov
or
sub
cmp
jne
xor
add
add
add
mov
mov
add
sub
add
sub
mov
push
add
mov
mov
add
add
add
test
je
sub
xor
cmp
je
and
mov
sub
mov
test
jne
add
mov
add
or
add
mov
cmp
jne
sub
mov
mov
or
cmp
je
mov
sub
mov
add
sub
and
add
add
push
mov
mov
and
and
and
sub
mov
push
xor
mov
mov
sub
mov
sub
cmp
jne
or
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
mov
test
je
cmp
jne
add
cmp
jne
add
cmp
je
or
mov
mov
sub
cmp
jne
cmp
jne
mov
or
mov
cmp
je
add
add
xor
mov
add
add
cmp
jne
mov
mov
add
or
sub
add
add
sub
sub
add
test
je
mov
mov
add
sub
mov
or
and
add
add
cmp
jne
xor
cmp
jne
mov
xor
mov
cmp
je
xor
sub
mov
add
sub
add
and
sub
cmp
je
cmp
je
add
sub
mov
sub
add
mov
add
add
add
sub
test
je
add
mov
add
sub
mov
and
add
call
and
cmp
je
sub
sub
mov
cmp
jne
cmp
je
mov
mov
add
add
xor
add
add
add
or
mov
mov
sub
add
mov
sub
xor
add
cmp
je
sub
add
mov
mov
sub
add
add
cmp
je
mov
mov
or
sub
cmp
jne
mov
mov
sub
or
cmp
je
mov
mov
and
cmp
jne
mov
and
sub
cmp
jne
sub
mov
sub
cmp
je
test
jne
mov
add
add
cmp
je
mov
cmp
jne
sub
mov
cmp
je
sub
mov
sub
sub
and
add
or
and
sub
mov
sub
test
jne
cmp
je
mov
mov
cmp
je
cmp
je
or
test
je
cmp
je
sub
sub
add
sub
cmp
je
mov
mov
add
sub
cmp
jne
xor
mov
add
add
sub
and
cmp
je
xor
test
jne
add
add
sub
mov
cmp
jne
cmp
jne
add
add
sub
mov
cmp
jne
mov
mov
add
cmp
jne
mov
cmp
je
or
sub
test
jne
add
add
sub
mov
mov
sub
mov
cmp
je
cmp
jne
cmp
je
or
cmp
jne
sub
mov
and
mov
and
add
and
cmp
jne
cmp
je
cmp
je
and
mov
mov
sub
mov
and
sub
and
add
mov
cmp
jne
mov
add
add
cmp
jne
sub
mov
xor
sub
and
and
add
and
cmp
jne
mov
mov
sub
add
and
cmp
je
cmp
jne
and
mov
sub
cmp
jne
add
mov
or
and
add
mov
or
sub
and
cmp
je
sub
cmp
je
cmp
je
mov
mov
mov
sub
add
and
cmp
jne
mov
mov
or
and
cmp
je
mov
mov
add
add
add
test
jne
mov
mov
add
test
je
mov
mov
add
cmp
je
mov
and
or
mov
and
sub
add
sub
sub
cmp
jne
add
cmp
jne
sub
cmp
je
xor
sub
xor
sub
or
and
add
add
cmp
je
mov
mov
cmp
je
sub
mov
add
sub
cmp
je
cmp
jne
mov
cmp
je
add
sub
mov
sub
cmp
je
mov
or
mov
sub
xor
add
xor
cmp
je
add
cmp
jne
xor
or
mov
cmp
je
add
and
add
test
je
and
cmp
jne
sub
sub
mov
cmp
je
sub
mov
add
mov
cmp
jne
cmp
jne
or
xor
xor
add
sub
add
sub
sub
mov
mov
mov
cmp
jne
sub
and
and
or
mov
or
mov
add
or
or
je
mov
sub
xor
repnz
mov
mov
cmp
jne
cmp
je
and
sub
addl
and
mov
and
sub
cmp
jne
add
add
cmp
jne
cmp
je
sub
mov
jmp
and
test
jne
mov
mov
cmp
je
mov
add
xor
cmp
jne
add
sub
xor
and
add
add
mov
add
add
add
sub
mov
cmp
je
cmp
jne
mov
mov
mov
add
add
cmp
je
mov
xor
and
sub
add
or
mov
mov
cmp
je
and
mov
mov
cmp
je
and
add
pop
or
add
mov
mov
cmp
je
mov
test
je
add
sub
sub
or
and
sub
mov
add
add
and
or
pop
or
mov
mov
mov
or
test
jne
mov
sub
cmp
je
add
mov
cmp
jne
add
mov
mov
and
or
sub
sub
and
cmp
jne
mov
mov
sub
cmp
je
mov
sub
and
mov
sub
add
cmp
jne
or
sub
sub
add
add
or
pop
cmp
je
mov
mov
or
add
cmp
jne
mov
mov
sub
sub
leave
ret
