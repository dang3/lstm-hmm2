and
decb
bound
add
js
mov
and
sbb
out
mov
loop
scas
icebp
sbb
iret
icebp
fldenv
fwait
mov
in
es
js
or
lret
pop
incb
shl
pop
xor
ss
fdivrp
popf
sbb
sub
sub
enter
or
lds
mov
scas
in
push
rcrb
mov
loop
mov
mov
fisttps
sub
sarb
ja
jne
push
gs
mov
add
outsl
iret
and
cmp
jmp
pop
xor
lods
ss
mov
ljmp
imul
pop
or
cwtl
jno
add
std
rorb
rcr
mov
xor
xchg
fwait
jbe
cld
mov
notb
pop
call
testl
gs
sub
dec
sbb
and
xor
test
jge
daa
pop
cwtl
add
jmp
xor
push
sub
insl
mov
in
scas
adc
sbb
daa
pop
imul
mov
fcmovnb
jg
pusha
push
mov
les
ds
std
jge
fmull
cmp
es
dec
push
add
idivb
mov
inc
frstor
xor
jg
clc
pusha
add
insb
cmc
jp
mov
and
dec
mov
add
inc
xchg
inc
mov
push
dec
pop
lret
sbb
inc
sbb
add
aam
outsl
push
and
fwait
ret
cld
movsl
cs
sbb
out
aas
mov
push
add
dec
test
push
mov
popa
icebp
jbe
loop
jmp
test
jmp
xor
push
xchg
xor
out
in
fistl
sub
es
add
sti
test
adc
je
mov
xchg
aaa
adc
mov
arpl
loopne
mov
push
rcrl
mov
sub
pop
mov
dec
jb
xor
lds
jbe
cld
outsl
xor
dec
es
xchg
popf
hlt
pop
fisubl
addr16
cli
out
insb
loopne
mov
mull
in
in
insl
cmp
add
fs
les
cwtl
lret
xor
jmp
imul
or
fnstsw
jge
inc
pusha
jmp
mov
movsb
loope
inc
outsl
icebp
xchg
out
fcomip
hlt
ss
lods
fwait
xchg
mov
sbb
rcrb
mov
aam
xchg
xchg
cltd
iret
sbb
fstl
dec
adc
sbb
imul
push
cmpsl
lret
jmp
xchg
std
dec
ss
lea
or
dec
or
mov
sub
inc
or
fdivp
cmp
ds
jp
in
cltd
insb
mov
lsl
lahf
ficoms
pusha
pusha
xchg
and
pushf
push
icebp
push
sub
inc
push
cmc
int
adc
cli
mov
cmp
sahf
pop
jmp
lahf
pop
jp
movsl
int
popa
jmp
imul
jnp
jg
cmp
into
stos
test
repnz
jecxz
test
xlat
adc
cli
sub
push
adc
pusha
rolb
adc
test
inc
lahf
sub
sbb
or
fimull
lods
and
lcall
and
xor
xchg
loope
test
stc
mov
pop
mov
stc
lret
int
clc
or
xor
adc
jmp
fwait
scas
jae
lods
inc
or
aaa
or
aas
pop
mov
sahf
xchg
sub
mov
popa
jo
pop
push
lret
mov
push
dec
mov
in
adc
rclb
adc
xor
cmpsl
pmulhuw
imul
sbb
adc
xor
inc
mov
add
pop
or
dec
dec
cli
add
cmp
pop
imul
xlat
cmp
adc
mov
insl
out
sub
std
cmpsl
or
and
dec
xchg
adc
mov
aam
and
adc
into
icebp
push
shll
and
pop
adc
imul
shll
adc
imul
cli
rcr
clc
cmpsl
adc
push
nop
cs
jmp
ds
mov
mov
dec
fnstsw
cs
aad
test
xor
stos
mov
sti
outsb
adc
adcl
dec
lods
dec
jg
pop
addr16
mov
insl
dec
mov
sub
lea
loopne
aad
sub
push
das
test
out
add
pop
clc
aas
adc
setne
xchg
jl
sbb
pop
push
in
xor
add
rorl
mov
cmp
in
pop
or
testb
arpl
xchg
inc
jbe
mov
sub
cmp
out
add
loope
and
mov
jle
jno
scas
js
xchg
cmp
adc
mov
mov
rcrb
or
cmpsl
dec
xor
fs
or
jo
pop
and
addb
jo
xor
sbb
dec
jg
scas
push
push
fwait
jp
mov
loope
and
and
dec
addr16
ret
lret
popa
pop
repnz
xor
and
and
pop
inc
nop
fnstsw
lret
mov
rclb
adc
xor
lods
ret
pop
cmp
and
sbb
add
inc
test
xchg
loop
and
in
outsb
push
movsb
sub
es
ds
out
push
roll
pop
dec
sub
and
cmp
and
insb
mov
scas
shrb
xorb
pushf
push
pop
sub
inc
adc
mov
jg
ud0
inc
push
mov
adc
sub
orb
inc
dec
shll
sub
jecxz
subl
les
ret
or
jae
cmp
imul
scas
aad
sbb
rclb
or
adc
bound
cld
jnp
ret
jne
push
mov
xchg
ret
adc
popa
adc
lds
push
or
lahf
sbb
lock
cld
mov
jnp
mov
into
sub
mov
jne
cld
or
jb
adc
outsl
push
jge
lods
or
and
scas
mov
xchg
mov
or
movsb
jmp
mov
pop
stc
mov
fwait
pop
xor
rcl
pop
fsub
mov
test
cmp
rolb
pop
dec
pop
pop
inc
inc
mov
cmc
or
in
sub
adc
mov
lret
push
mov
add
into
int3
cld
jl
hlt
aad
int
mov
push
dec
jmp
cmp
lahf
mov
mov
rcl
push
hlt
test
inc
ret
arpl
iret
test
hlt
arpl
ret
inc
lods
jecxz
mov
and
add
cmp
loope
test
addr16
sbb
lcall
jge
pop
in
std
sbb
push
xor
insb
mov
xor
mov
mov
mov
es
xchg
mov
cmovp
cmp
rcr
jne
cmove
mov
frstor
aam
notb
hlt
cmp
sbb
les
in
movsl
pusha
aad
mov
mov
mov
ret
jge
adc
repz
cmp
jb
inc
mov
testb
xor
aas
pop
cwtl
rol
mov
dec
loope
jae
add
es
jo
or
movsb
fwait
fs
in
xchg
sub
mov
add
addr16
pop
ret
push
pcmpgtd
out
jnp
cltd
push
jmp
pop
scas
sub
inc
fwait
lcall
cmp
and
sub
push
dec
mov
movsb
mov
lea
ret
jnp
push
mov
shrb
fs
lods
aam
sbb
orb
ss
aaa
xchg
cmpsl
ljmp
fs
arpl
xchg
or
adc
or
out
jp
pop
sbb
fbld
ds
push
popf
cmpsb
stos
mov
or
xchg
enter
into
negl
sbbb
or
nop
lret
push
push
cwtl
movsb
fsubl
push
push
jg
out
ret
xchg
adc
jns
jo
mov
pop
jecxz
pop
mov
or
mov
lea
icebp
xchg
pop
lods
pusha
inc
pop
scas
sbb
mov
xor
rcrl
add
std
aas
push
sbb
fstpl
mov
add
lock
inc
xchg
add
pusha
or
and
push
lds
jmp
xchg
or
cmc
add
lea
mov
ljmp
cmp
xor
sbb
lea
jl
cld
lret
out
out
ljmp
mov
mov
das
or
dec
aad
fwait
aas
movsb
sbb
add
out
mov
pop
push
stc
xor
gs
and
ficoms
rcrb
ret
push
jnp
sub
repnz
aad
mov
shrl
fwait
xor
and
dec
pop
outsb
loope
cmp
ret
movsl
sbb
sub
push
or
pop
cwtl
or
mov
mov
dec
xchg
cmp
sbb
shll
into
or
call
insl
outsl
loopne
out
pop
icebp
arpl
je
xchg
pop
in
and
mov
int
add
or
arpl
jge
test
inc
out
push
sti
ljmp
in
xlat
mov
out
stc
mov
and
pop
adc
je
mov
out
jp
loopne
push
mov
popf
push
dec
pusha
mov
adc
or
push
jg
jae
adc
mov
imul
loopne
jecxz
sbb
gs
pop
jne
cmpsb
out
int3
mov
movsb
mov
pop
daa
lahf
mov
mov
fst
mov
int3
loopne
add
dec
arpl
in
push
xlat
iret
mov
pop
pusha
or
sbb
icebp
test
rcrl
into
ljmp
jecxz
mov
pop
scas
inc
mov
jp
cmp
jecxz
cmp
outsl
gs
push
ja
arpl
lret
iret
pop
or
push
enter
das
and
dec
outsb
pop
sti
pop
jae
gs
xchg
sub
jecxz
mov
jns
jmp
int3
repnz
cmp
mov
dec
add
adc
push
loope
insl
stos
mov
clc
pop
ljmp
movsb
mov
jno
or
sbb
in
cli
inc
test
xor
cmp
sbb
mov
xchg
xchg
cmp
and
inc
mov
pop
mov
ret
ljmp
cmp
andnps
cltd
lds
dec
or
lods
push
or
andl
inc
addr16
icebp
inc
out
mov
je
stos
jnp
int
jmp
push
imul
push
adc
jb
jns
add
vpcmpuw
cwtl
hlt
std
cmp
fsubrl
inc
shll
rcrl
xchg
icebp
int
out
mov
jl
dec
or
lds
xchg
add
dec
sahf
movsl
mov
iret
jo
imul
fimuls
add
cmc
outsb
adcb
lods
lods
adcl
rcr
add
mov
dec
fs
and
xor
push
cmpsb
movsl
stc
lahf
ret
jae
mov
mov
pusha
pushf
inc
lcall
push
add
cltd
in
inc
sbb
sub
mov
fldenv
and
or
mov
cmp
push
push
ja
sarb
mov
test
lahf
out
mov
or
push
shrl
cmp
fwait
xchg
inc
cli
and
aaa
mov
dec
and
aam
jle
inc
adc
mov
sti
loope
pop
stos
call
out
pop
cmp
imul
inc
insl
int3
fmuls
sub
mov
lods
shll
xor
jbe
cmp
js
lock
lahf
inc
mov
lock
loopne
loope
repz
ret
sahf
mov
mov
js
mov
or
call
popl
inc
push
xor
sbb
mov
mov
shlb
cmp
sbb
je
mov
ret
test
fimuls
pushf
adc
mov
cwtl
cli
ljmp
dec
lret
xchg
sbb
cmpb
cmpsb
dec
mov
repnz
aam
adc
adc
ss
xchg
inc
roll
add
es
push
xchg
adc
mov
mov
or
je
aam
cmp
fidivl
dec
push
and
outsl
pop
sub
into
cmpsb
stos
mov
and
pop
stos
scas
sub
in
movsl
mov
inc
push
cwtl
jp
xchg
fildll
jge
adc
ret
movsb
scas
xlat
add
int
rorb
mov
lds
mov
adc
insb
and
idivl
sub
frstor
mov
pop
pop
inc
mov
lahf
jae
sub
push
mov
adc
jbe
pop
das
pushf
mov
cmp
adc
sti
ljmp
test
loop
or
in
mov
fidivrs
push
movsl
or
lea
loopne
imul
dec
sahf
ljmp
mov
and
cmc
jl
xchg
pop
sbb
outsb
push
sbb
bound
jp
scas
push
add
out
adc
mov
dec
push
jmp
outsb
testl
fdivp
mov
mov
cmp
jge
inc
push
movsb
adc
stc
cmp
adc
movsl
cmpsb
xor
push
fsubs
sub
sub
cmp
dec
xchg
repz
jge
dec
popf
clc
pushf
mov
cmp
jae
xor
stc
insb
outsb
cmp
test
daa
mov
push
push
pop
cmp
mov
and
xchg
push
arpl
outsb
out
lret
mov
clc
addr16
pop
gs
mov
ljmp
js
fisttpll
pop
mov
fsts
decl
xchg
xchg
mov
pop
in
shl
dec
arpl
mov
dec
xchg
mov
dec
cltd
mov
and
mov
mov
into
popa
push
fcomp
popf
pushf
shl
xorl
shll
dec
loopne
ret
inc
ret
lds
xchg
fidivrl
pop
loope
cmp
clc
scas
jns
into
mov
xchg
cwtl
into
ljmp
ret
inc
jb
inc
cmp
repz
sbb
pop
dec
and
test
add
add
mov
mov
mov
imul
mov
scas
push
scas
adcl
mov
lret
js
dec
sahf
int
cmp
push
lea
dec
mov
mov
test
imul
xchg
cltd
aad
aaa
stos
out
scas
negb
jg
dec
pop
shl
stos
cld
jmp
xchg
push
or
adcb
leave
dec
lock
fs
jo
movsb
cmc
int
sahf
ret
xor
clc
lahf
and
mov
mov
mov
lahf
stos
fildl
js
idivl
int
movsl
or
or
divb
push
push
rorl
ss
je
pushf
dec
mov
jns
cmp
dec
addb
mov
xor
mull
fcomps
lea
mov
xchg
imul
ja
adc
pop
mulb
int3
pop
mov
adc
movsb
stos
cmp
inc
shll
push
push
sbb
cmp
or
sahf
insl
and
repnz
sbb
les
mov
mov
pop
and
inc
push
push
cwtl
daa
les
add
stos
dec
jmp
insb
fadd
xchg
or
out
std
daa
xchg
jp
cld
ret
cwtl
sbb
mov
loop
subb
popf
mov
movsl
fwait
cmp
ret
push
loopne
aaa
dec
pusha
xchg
das
sbb
gs
or
sbb
push
dec
out
aad
jne
lods
call
push
sbb
push
jns
sbb
xchg
ret
and
xor
idivl
adc
in
mov
js
pop
fsubrp
mov
adc
ret
xor
inc
pop
cmp
sub
mov
mov
nopl
fstpl
cmp
mov
dec
adc
push
mov
add
and
sbb
sub
xor
add
adc
sbb
dec
jae
aam
cmp
in
repnz
push
addr16
out
dec
jle
add
leave
mov
cwtl
push
push
insl
imul
xchg
mov
xchg
push
dec
scas
loop
push
mov
cmp
add
aas
stc
pop
inc
or
das
mov
xchg
jg
and
sti
outsb
aaa
cmpsb
hlt
sub
mov
dec
out
or
xchg
jae
je
xor
pop
jmp
pop
int
dec
jge
fs
inc
sarl
out
and
xchg
icebp
insb
jmp
cwtl
mov
pop
mov
jno
je
scas
pusha
data16
lcall
pusha
xchg
cmp
arpl
push
xchg
push
rclb
cmpsl
bound
mov
jno
jecxz
xor
dec
xchg
mov
loopne
ja
enter
lcall
das
mov
sti
pushf
cmp
addr16
in
inc
jmp
jg
repnz
mov
out
or
jbe
mov
insl
add
addr16
sub
mov
frndint
mov
mov
ds
mov
push
repnz
jg
iret
fsubrl
or
lods
daa
mov
jecxz
adc
xor
mov
iret
fistps
cmp
mov
pusha
cmp
cmp
add
xor
movsb
mov
into
arpl
fucomip
testb
lds
xor
insl
lock
std
mov
sub
lret
lods
push
mov
ret
xorl
and
cmp
jo
pop
dec
in
je
sbb
inc
pop
inc
jecxz
outsl
mov
xor
adc
mov
xchg
mov
jl
scas
not
push
aaa
and
mov
ds
mov
pop
xlat
pop
outsb
sub
lea
pop
and
sti
jl
lods
cltd
mov
movsl
in
mov
pushf
add
sub
xor
lcall
addr16
movsb
cs
jno
data16
mov
push
lahf
mov
sub
xor
aas
xor
arpl
pop
and
xchg
xlat
push
adc
cli
xor
fsubl
fwait
mov
pop
cmpb
mov
into
int
fldenv
ret
mov
mov
jb
es
mov
cmp
jl
add
notb
xor
and
ja
sti
sbb
movsb
mov
jge
push
out
repz
paddsb
sbb
push
inc
dec
push
in
stos
lds
repnz
mov
sub
add
movsb
xorl
sub
dec
dec
shrl
pop
cmp
xchg
push
mov
or
fildl
and
sub
mov
xchg
mov
cmp
adc
insl
jl
int
xor
mov
loop
pop
dec
sub
and
xor
xor
out
inc
xchg
sahf
pop
mov
mov
rorl
adc
adc
pusha
adc
out
mov
ja,pt
cli
mov
lret
cmp
sbb
cmc
push
sbb
sbb
loopne
push
rcll
lcall
lcall
imul
pop
lcall
dec
lds
mov
lds
rorl
ror
outsl
clc
sbb
sbb
push
fidivs
in
loop
loopne
test
lret
dec
repz
xchg
pop
and
pop
adc
bswap
sub
fdivl
xchg
dec
ljmp
mov
mov
xchg
add
loopne
mov
xchg
xchg
jnp
aam
inc
mov
subl
push
push
push
dec
dec
cltd
shl
add
insl
in
and
sarb
fwait
adc
or
stos
addr16
mov
addr16
out
cltd
fiadds
mov
enter
mov
mov
cli
imul
testb
loopne
sbb
test
xor
push
push
mov
or
icebp
inc
lret
jno
cmp
mov
enter
popl
mov
cwtl
fwait
push
out
push
inc
sub
sub
jl
jecxz
jne
jge
stos
add
test
rorb
lret
lcall
lcall
ja
xlat
mov
or
lret
add
cmp
ret
mov
aas
scas
xorl
pop
sub
dec
cmp
push
xchg
in
push
mov
mov
adc
test
push
and
xchg
cwtl
and
adc
ljmp
out
mov
out
inc
ret
iret
jmp
inc
call
dec
push
add
xchg
cs
sbb
mov
hlt
and
jo
jle
aaa
js
outsb
iret
pop
dec
shll
repz
mov
mov
cmpsl
jns
xchg
out
fisttps
pop
push
push
cmp
in
int
sbb
or
das
ret
jle
mov
sti
adc
adc
mov
mov
mov
mov
shlb
sub
hlt
xchg
jb
iret
pop
imul
sets
jg
call
fidivs
call
test
loopne
push
add
lret
lahf
sub
std
jecxz
jecxz
pop
stos
xor
jbe
imull
rcrl
jmp
add
mov
into
sti
mov
fwait
sub
divl
jno
out
add
xchg
and
jno
xor
rcll
dec
jns
lret
inc
jmp
cmp
icebp
dec
lea
sahf
or
xor
nop
dec
test
out
cwtl
mov
mull
in
sub
sub
and
scas
xchg
jp
mov
imul
adc
xlat
cltd
bound
mov
jne
push
mov
push
cmp
std
cmp
xchg
cmp
sti
pusha
out
out
loope
aas
loop
pushf
sub
mov
adc
ja
repnz
icebp
mov
lret
cmpsl
std
repz
loop
push
mov
pop
addr16
mov
and
push
mov
movsb
loop
ljmp
dec
push
lcall
sub
adc
pop
sub
push
popa
cmp
add
mov
fbld
ret
mov
adc
pusha
sahf
scas
out
in
jl
aaa
xor
mov
add
dec
adc
loope
cs
mov
mov
insl
addr16
movsl
sar
popa
gs
dec
mov
idivb
cmp
out
je
popf
jne
jg
addr16
cmc
imul
push
adc
cmpsl
mov
and
pop
xchg
loope
iret
add
cmpsl
and
int
adc
inc
movsb
outsb
lcall
xor
mov
bound
outsb
cwtl
notl
cld
mov
jne
add
rcr
and
ret
mov
in
xrstors
inc
dec
adc
fstl
in
gs
sbb
shrl
add
mov
xor
adc
clc
and
mov
outsl
cmpl
mov
jnp
jns
mov
loopne
mov
sub
push
jecxz
or
rcrl
aad
cmc
sbb
push
jb
rorl
adc
andb
fs
fnsave
aas
push
xchg
dec
inc
lahf
imul
jbe
mov
inc
ret
ljmp
hlt
js
repz
rcrl
push
adc
gs
dec
mov
adc
pusha
jg
loope
out
orb
dec
stc
add
dec
ljmp
ror
sbb
imul
mov
hlt
mov
jb
aam
xlat
push
add
inc
outsl
repnz
mov
cld
rorb
bound
in
movsl
mov
push
test
push
cs
xor
dec
cs
jmp
subl
cmp
xchg
jg
fimull
push
out
std
mov
fwait
sarb
sub
push
scas
repz
pop
stos
mov
cmp
push
js
in
mov
pop
loop
sbb
rcrl
cmpsl
daa
lahf
shrl
jle
xor
cmp
mov
dec
dec
fisttpll
out
fs
cmpsl
aaa
js
and
xchg
cmp
repnz
dec
ret
dec
addl
enter
cld
movsl
add
frstor
push
jbe
mov
cmpsb
aad
icebp
int3
aas
adc
push
sbb
in
pop
add
pop
stc
dec
push
ss
data16
testb
loop
mov
adc
or
xlat
pop
xchg
xchg
and
pop
cltd
stc
sub
ret
jb
and
lds
cli
mov
cwtl
sub
pop
js
std
fistps
or
movsb
hlt
and
xor
jg
sbb
loop
lds
inc
jbe
inc
jl
jno
mov
sub
ljmp
into
xchg
je
jle
scas
jnp
mov
cltd
push
mov
cld
popf
scas
roll
pop
inc
in
das
mov
insl
aaa
mov
or
in
bound
les
mov
and
out
stc
jae
push
jecxz
outsb
jns
cmp
and
addr16
cmpsl
push
sbb
push
add
or
sahf
decl
mov
xor
xchg
adc
jns
sub
insb
xlat
retw
jo
sbb
jns
scas
aas
roll
pop
lret
into
and
ds
inc
jne
jo
loope
xor
lahf
xor
pop
ja
push
dec
pusha
mov
lods
fidivrl
adc
dec
clc
mov
mov
push
cmp
loopne
stos
pusha
push
movsl
dec
cmp
jo
fbld
stos
add
popf
sbb
and
orb
movsl
rcrb
add
cld
adc
add
jle
outsl
jg
repz
or
aad
mov
mov
leave
out
mov
mov
mul
ja
cmp
add
aad
push
hlt
roll
repnz
iret
sub
cmpb
je
jp
or
mov
jnp
xchg
mov
je
inc
xchg
add
negl
dec
adc
sub
cld
sbb
fisubrl
stos
mov
jmp
pop
je
mov
fcmovnbe
out
and
push
xchg
popa
or
mov
mov
mov
imul
cmp
movsb
shll
and
xchg
fucomip
jecxz
pop
inc
hlt
rolb
stos
jne
jnp
cmp
push
xor
pop
lods
jl
cmc
rclb
jecxz
enter
mov
jbe
jae
cmp
mov
pop
xchg
push
mov
or
iret
mov
insl
insl
insb
cmpsb
mov
imul
ja
mov
lret
stc
rcrl
loop
scas
idivl
cmp
cmc
sub
lods
ljmp
ss
lret
xchg
add
outsl
jno
sub
sbbb
adc
out
push
dec
push
popa
outsb
adc
cmp
sub
mov
push
in
cs
ss
cmp
sbb
and
push
jge
mov
in
mov
repz
mov
cmp
gs
imul
sti
jge
or
fcom
out
inc
in
xor
mov
dec
sub
xor
sbb
ret
outsl
ret
neg
call
dec
inc
lret
testb
mov
lods
mov
sub
or
push
cmpsl
loop
mov
xchg
or
clc
dec
jo
int3
mov
push
xorl
xchg
xlat
divl
dec
jne
adc
movsl
cmp
lea
jmp
gs
into
cmp
xor
pop
pusha
jno
mov
sub
add
sbb
into
add
cwtl
lcall
sbb
cmp
jge
jle
call
lock
hlt
xor
push
in
pusha
pop
out
jp
pop
popa
lds
xlat
xchg
hlt
pop
test
jne
movsl
lea
out
adc
jo
sarb
sti
mov
jnp
in
sub
mov
and
push
sub
out
cmp
dec
jns
lret
cmp
out
or
stos
inc
fnsetpm(287
mov
out
mov
mov
insl
dec
push
shll
insl
inc
mov
jb
mov
enter
call
jp
stos
sbb
in
divb
cs
push
test
aam
cmp
push
into
and
subb
cmp
std
stc
mov
ljmp
into
push
inc
sub
mov
repz
gs
stos
sbb
leave
adc
mov
jmp
fnsave
repz
ss
stc
test
push
scas
das
sbb
mov
sbbl
adc
popa
in
gs
sub
mov
lods
les
mov
mov
lods
adc
sbb
sub
pop
push
inc
sbb
mov
shll
push
add
out
xor
pop
inc
shr
cli
mov
mov
js
cli
scas
push
pop
ds
test
push
cmp
lret
into
push
std
cmp
repz
std
mov
clc
and
in
mov
sahf
inc
cmp
das
in
arpl
lds
mov
ja
das
fadds
dec
pop
xchg
fwait
mov
dec
outsl
push
out
cvtps2pi
cmp
stc
sub
scas
push
or
sub
in
push
enter
imul
dec
scas
stc
fistl
idiv
dec
fldenv
cld
jb
enter
daa
repnz
outsb
stos
mov
push
adcb
xlat
inc
push
inc
popf
sbb
inc
das
jne
push
mov
mov
ret
andl
xor
sub
enter
inc
repnz
pop
test
pop
test
mov
sbb
stc
xchg
mov
scas
outsb
mov
and
jnp
lods
outsl
pushf
mov
leave
dec
ret
cmp
rcl
pop
xchg
shlb
call
and
sbb
cmp
xchg
add
loopne
sbb
push
data16
mov
push
pop
jb
push
frstor
inc
pop
mov
mov
adc
cmpsl
inc
loope
les
jle
andl
add
int3
mov
repz
pop
push
data16
test
icebp
pop
mov
cld
sahf
pop
mov
lods
nop
clc
mov
mov
test
dec
xchg
cmp
mov
push
aam
add
aaa
clc
adc
loopne
test
das
xor
dec
add
jge
or
shlb
idivb
inc
adc
push
fstl
scas
fmulp
push
mov
pusha
nop
xlat
jmp
iret
pop
aam
iret
xor
dec
xchg
jle
lods
enter
rol
mov
mov
clc
pushf
or
or
inc
sbb
sbb
daa
xor
sub
pop
cltd
jne
aaa
dec
dec
push
add
jmp
push
mov
out
mov
jl
mov
dec
xor
fisttpl
scas
popa
fs
test
xchg
hlt
add
les
jp
rcrb
push
push
sbb
xor
btr
fsubs
int
inc
jb
pushf
pop
xchg
sub
xor
add
dec
movzwl
scas
out
mov
negb
and
inc
rol
lock
std
jge
or
loop
imul
mov
sbb
test
jo
cmc
inc
aas
mov
int
pop
cmpsb
test
xchg
imul
cltd
add
xor
outsw
mov
loope
add
out
das
push
in
adc
mov
sub
aad
dec
out
data16
je
xchg
xchg
or
jnp
jo
push
jo
in
lods
adc
mov
mov
fs
pop
pop
pop
pop
jp
mov
push
leave
hlt
xlat
or
test
jne
imul
push
frstor
out
jnp
das
add
inc
sbb
dec
orl
or
mov
xchg
sub
push
or
mov
enter
jmp
jbe
daa
jb
push
push
pop
jecxz
cmp
sub
cs
xor
pushf
outsb
lock
jp
out
jp
sub
in
push
sbb
imul
lods
xchg
sub
push
mov
mov
cmp
sub
sub
add
sbb
scas
lods
test
and
mov
sbb
mov
xor
ljmp
repnz
cmp
shll
test
shr
push
add
loopne
daa
iret
roll
loope
jne
mov
cmpsb
mov
mov
in
in
sub
enter
xor
ret
add
loop
xchg
ficomps
cmp
pop
out
loope
cmp
mov
shll
and
inc
call
xchg
imul
sbb
mov
sahf
ss
sub
icebp
mov
js
sub
adc
mov
xchg
aad
dec
xchg
jno
nop
mov
in
je
mov
or
cmc
mov
call
sub
jecxz
pushf
test
push
jmp
jb
or
adc
mov
xor
pusha
enter
cwtl
sub
jl
dec
stos
fdiv
fldl
sarb
dec
or
sub
gs
pushf
cmp
mov
shll
bound
cmpsl
adc
pop
nop
xor
outsl
mov
cld
xor
and
mov
adc
jmp
jle
insb
xor
lds
test
fldenv
icebp
neg
testb
sub
lock
mov
cs
add
cli
pop
push
pop
fs
mov
and
repz
or
sub
rcrb
push
das
xchg
int
cltd
or
je
add
bound
stos
cmpsl
inc
shlb
mov
pop
test
jl
xchg
lock
sbb
out
sbb
adc
shlb
mov
data16
icebp
xchg
push
hlt
cwtl
fcomp
jl
outsl
out
ret
mov
cld
xchg
repz
sub
xchg
add
stos
mov
pop
rolb
push
push
test
pop
shlb
subl
mov
xlat
into
inc
imul
out
or
inc
push
hlt
mov
jbe
mov
jne
repnz
sbb
and
mov
mov
aas
cmp
sbb
mov
push
push
in
and
jp
cli
rcrl
ljmp
loopne
adc
into
ret
sahf
aaa
or
test
push
shrb
sub
outsb
adc
jno
jo
dec
cmp
or
lahf
nop
out
shlb
push
cmp
fimull
mov
lret
and
popl
dec
ljmp
push
inc
cmp
xchg
xor
jmp
push
das
dec
sbbb
cli
out
clc
dec
je
inc
roll
inc
cmp
dec
cmc
mov
cmp
pop
sti
into
mull
or
ret
loop
jo
call
dec
hlt
sub
enter
mov
mov
push
mov
gs
push
and
popl
lds
jmp
xchg
dec
mov
add
lods
rcll
imul
nop
push
lods
cltd
jg
mov
fistpll
pop
test
xor
xorb
lock
ret
or
jecxz
jmp
and
aaa
orl
dec
stos
sub
cmp
jne
lea
loopne
int
cmp
test
mov
inc
xchg
push
cmp
loop
movsb
or
pop
cmp
and
dec
addl
bswap
punpckhdq
aam
imul
pop
outsb
cmpsb
push
adc
mov
outsl
sub
pop
add
lea
out
and
add
aaa
insb
loop
repnz
repnz
dec
push
mov
mov
loop
or
pop
fs
pop
mov
mov
stc
rclb
push
imul
int
mov
jp
and
ja
sahf
add
adc
adc
mov
int3
pop
sbb
test
cmc
adc
btcl
test
lods
mov
stc
fbstp
fisubrs
outsl
lods
mov
and
inc
sbb
sub
lods
cmp
xor
out
dec
jecxz
dec
imul
out
cltd
gs
cmp
bound
in
pusha
std
fdivs
cmp
mov
sbb
out
nop
adc
pop
loopne
cld
jb
andb
out
es
bound
cwtl
adc
sub
or
xchg
adc
movsl
add
mov
mov
lcall
das
mov
xor
decl
jle
push
loope
hlt
pop
jecxz
pusha
lods
inc
jb
imul
movsl
xchg
pop
decb
cs
push
mov
cmp
ss
mov
stos
dec
sbb
stos
sbbl
push
xor
adc
out
dec
jp
inc
pop
sahf
icebp
rorb
test
cli
dec
mov
sub
push
cmp
clc
test
jo
test
add
mov
sub
andb
inc
sub
daa
sub
sbb
adc
sarl
outsb
push
outsb
cmpsl
and
jmp
andb
ficomps
out
data16
mov
fwait
push
xchg
mov
clc
testb
or
jnp
jmp
jns
mov
or
and
es
aam
xchg
inc
mov
jno
cmp
and
pop
cmp
xchg
lods
sbb
outsb
mov
cmp
gs
jg
mov
cli
pop
ret
int
push
aaa
xchg
cmpsl
cltd
nop
adc
lds
xor
pop
fldcw
add
lds
jnp
pop
cltd
or
stos
dec
test
add
es
adc
pop
testb
leave
out
add
or
cwtl
loopne
xor
mov
mov
xchg
leave
sub
sub
xchg
popf
jp
adc
sbb
adc
loop
dec
aaa
not
sbb
fmul
das
pop
push
retw
sti
mov
cmp
mov
xor
cli
mov
cmp
bound
sub
push
dec
dec
das
out
push
inc
jbe
aas
sti
push
js
sbb
xor
jno
xchg
ss
stos
and
sbb
shrl
xchg
sbb
popf
aas
cmp
je
sbb
xor
lods
outsl
mov
mov
xor
scas
push
pinsrw
or
movsb
sahf
adc
hlt
or
jnp
out
xchg
jne
lods
jmp
lock
sbb
pop
test
lcall
mov
inc
add
pop
pop
shlb
out
aam
lock
out
enter
rcrl
loope
ja
mov
int
sub
mov
shlb
fdiv
test
mov
xor
or
push
add
cmp
mov
mov
xor
cmpsl
pop
fadd
jle
mov
outsb
push
sbb
outsb
sbb
push
mov
push
push
pop
mov
jg
sub
adc
xlat
pusha
movsl
shl
adc
mov
popa
pop
xorl
add
aas
pop
xchg
dec
lea
dec
repz
and
aas
push
aas
iret
jp
inc
jmp
out
dec
jae
sbb
pop
pop
out
push
xchg
inc
jne
sbb
ret
push
imul
cld
pop
or
pop
or
sub
int3
mov
rcrl
movsl
add
inc
cli
sub
js
pusha
xchg
daa
mov
leave
lret
out
lcall
roll
adc
out
mov
lods
mov
popf
rep
inc
sub
hlt
les
aad
inc
lea
and
cli
inc
dec
adc
inc
cmc
add
xor
xor
int
scas
and
in
inc
adc
inc
dec
loop
out
leave
and
enter
jle
mov
cltd
lds
jg
hlt
adc
pop
pop
xchg
push
fldl
out
pop
sbb
test
or
xchg
shl
scas
imul
inc
test
test
stc
and
ret
stc
inc
jnp
cmp
test
or
sahf
std
test
stos
adc
xchg
addr16
jecxz
shl
push
add
icebp
loopne
jbe
or
mov
fidivrl
jnp
loopne
aam
mov
inc
jl
jmp
xor
pop
pop
add
inc
popa
mov
and
rorb
int3
push
cmpsl
inc
aaa
mov
cltd
mov
mov
lret
push
or
ss
leave
xchg
xor
and
sbb
xor
shlb
or
and
mov
or
popl
cmp
xor
jno
jno
test
out
subl
add
jg
fwait
clc
push
mov
scas
into
fsubrs
xor
xchg
jb
fstpt
loopne
cmc
call
mov
insb
pop
xlat
push
mov
and
cmpsl
jmp
push
jno
out
hlt
push
push
xchg
jecxz
stc
jo
or
pop
inc
aam
ss
aad
mov
sub
arpl
pop
sbbl
cmp
mov
xchg
enter
mov
pop
xchg
out
dec
loope
jecxz
out
arpl
dec
imul
mov
sub
inc
sbb
push
int3
nop
jp
fidivrl
cmp
pop
pop
fwait
outsl
adc
fucomip
adc
imul
jp
push
and
adc
cld
in
adcb
or
push
xchg
aam
lret
fwait
adc
addr16
cmp
add
loopne
dec
movsb
shll
out
xchg
mov
push
test
sbb
shrl
imul
inc
and
dec
and
push
xor
adc
subl
or
lds
mov
cmp
nop
cmp
lahf
int3
mov
int
arpl
jns
or
ss
gs
out
lcall
outsl
mov
xor
imul
ljmp
jecxz
icebp
bound
jge
out
insb
sbb
dec
in
mov
inc
jnp
mov
cld
xchg
out
mov
and
loop
mov
jb
ret
maxps
jo
jp
pop
add
sub
mov
nop
fcmovbe
ss
cmp
lock
add
inc
jae
xchg
stos
loop
ret
fistpl
jno
xor
inc
and
mov
aaa
pop
ds
and
pop
push
fisttps
xchg
mov
mov
mov
movq
pop
pop
movsl
xchg
mov
outsb
stos
sub
inc
gs
in
mov
push
movsl
test
jbe
mov
sub
popf
in
bound
sub
adc
fs
cmp
jp
pop
or
stos
rcl
add
daa
gs
dec
dec
outsb
pop
dec
cltd
pop
mov
stc
sub
push
rolb
out
scas
les
fistpll
enter
dec
dec
and
inc
cmp
cli
add
mov
int
jno
test
lcall
aas
fmull
add
inc
jae
das
mov
push
or
popf
cmp
rclb
das
imul
sub
out
fsubrs
daa
pop
test
shrb
int
jo
mov
std
sbb
xor
sarb
nop
rcr
inc
jp
sti
pop
imul
lcall
push
xor
xchg
lods
cmp
ret
out
and
fnstenv
mov
cltd
cmp
cmp
fadd
rolb
fwait
popf
push
test
mov
repz
jp
xchg
dec
mov
lods
loop
rcr
jl
mov
call
lds
and
or
icebp
cmp
ficoms
mov
jecxz
sarb
push
lahf
icebp
cli
sub
mov
dec
jo
inc
std
out
mov
jno
and
das
cmpl
or
fstps
dec
bound
orb
pop
les
mov
pop
test
jecxz
sub
sahf
pop
xchg
jg
pop
ret
stos
es
mov
repnz
pop
popf
imul
stos
inc
testl
test
fucomp
pop
inc
cmpsl
pop
subb
lcall
mov
adc
jnp
and
aad
cmp
xchg
loope
push
mov
adc
ds
jno
test
sub
xor
push
adc
jnp
xchg
andb
pop
icebp
aad
mov
inc
outsb
rorb
in
outsb
fcmove
mov
jmp
pop
lahf
loop
xchg
sub
sub
mov
jge
mov
push
mov
testl
xchg
aad
loop
add
push
ja
xchg
fbstp
pushf
dec
aaa
test
jnp
in
sbb
cltd
insl
je
test
xchg
dec
inc
loope
jo
out
sub
ja
enter
adc
xchg
mov
lds
sub
push
fs
test
mov
sub
stos
push
inc
sahf
adc
lods
jl
lcall
adc
cwtl
daa
ret
lods
xor
outsl
xchg
movl
arpl
lcall
das
push
xchg
pop
out
popf
or
mov
test
cld
inc
out
decb
test
inc
sub
cmpsb
and
out
movsb
aaa
jo
insb
psadbw
test
test
adc
loop
add
push
adc
into
shl
cmpsb
popa
mov
scas
or
mov
jne
lret
lods
fwait
mov
xor
mov
jbe
or
cmp
jne
inc
xchg
cmp
xchg
mov
int3
cld
leave
xchg
dec
icebp
and
das
sahf
push
outsl
in
mov
pop
in
and
fwait
sub
bound
jb
pop
adc
push
pop
or
and
lret
push
mov
mov
xor
mov
jecxz
rorb
aas
es
xchg
and
and
mov
aas
sub
lahf
pop
mov
push
mov
in
mov
sbb
data16
pop
adc
pushf
out
iret
lcall
or
pop
jp
leave
aam
xor
mov
xchg
fwait
pop
rclb
jl
sbb
jbe
jecxz
and
je
insb
ret
cmp
cwtl
adc
mov
pushf
ret
loop
push
adc
lock
push
ljmp
rcr
sub
push
int
push
jl
mov
fmul
inc
push
aaa
into
in
outsb
cmpsl
cmp
jp
shr
adc
nop
movb
lods
sub
jle
enter
jo
cli
or
pushf
jne
or
mov
and
jle
dec
in
roll
out
std
scas
ret
fs
adc
mov
pop
push
or
lods
xchg
stos
ret
pushf
sbb
mov
pushf
sbb
pop
lea
insl
inc
outsl
dec
push
leave
adc
sbb
pop
sbb
add
test
aam
sbb
mov
stos
or
popf
js,pn
js
sub
fldt
jo
imul
xchg
mov
push
pushf
shr
lcall
fistpl
rcr
call
and
mov
inc
out
push
cltd
pop
mov
repz
adc
int
mov
jne
dec
push
mov
repz
std
mov
idiv
ret
ror
outsl
dec
add
js
arpl
xchg
fisubrs
mov
scas
push
imul
test
jae
in
mov
cvttps2pi
adc
dec
call
shl
push
sbb
sub
test
dec
jl
mov
aam
enter
lock
stos
xchg
stos
mov
mov
lock
inc
fdivl
mov
xchg
mov
cmpsb
int3
xchg
lret
ja
imul
addl
xchg
pop
mov
lods
xor
or
mov
jmp
mov
cmpsl
dec
cld
pop
mov
iret
add
out
xor
sbb
mov
jbe
shr
cmpsb
or
fsubrs
mov
fmul
adc
mov
lds
aaa
jmp
jl
push
mov
mov
xor
jg
paddsw
stos
push
and
dec
cs
xchg
cld
sub
aaa
dec
xchg
mov
inc
push
std
or
jno
mov
into
mov
xor
imul
and
mov
jb
jl
sti
orl
aam
push
movsb
divb
gs
sbb
pop
fadds
fistl
push
inc
js
imul
mov
cltd
in
xchg
fistps
cmpsb
push
push
and
lods
sbb
pop
jge
sbb
mov
and
popf
pop
sti
push
jo
pop
jle
mov
das
mov
popf
jl
cmpb
mov
mov
mov
jle
and
xchg
shl
xchg
cmp
sub
sahf
stc
mov
lds
sbb
into
mov
loop
adc
repnz
test
inc
stos
lods
mov
mov
filds
pop
cmpb
mov
inc
xor
fwait
mov
cmp
lods
mov
in
lcall
and
repz
daa
dec
cwtl
scas
push
dec
mov
imul
test
fisttpll
notl
sahf
xchg
sub
xor
cmp
test
movsb
lods
dec
pop
pop
repz
xorb
inc
movsb
lds
setg
adc
neg
stos
xor
mov
repz
pop
or
lahf
loope
jge
dec
rol
pop
outsb
cmp
mov
mov
adc
sub
std
je
inc
daa
out
repz
fnstcw
outsb
shrb
mov
and
repz
ja,pt
lds
inc
rsm
mov
inc
mov
fbstp
outsl
cli
loope
fcomi
leave
fcomi
pop
data16
push
mov
pushf
and
lret
or
fiaddl
or
mov
cs
sub
dec
adc
pop
mov
jae
das
cwtl
lock
inc
cmp
mov
add
jnp
jb
ret
repnz
push
dec
jns
cmp
jb
imul
dec
mov
mov
test
test
inc
in
and
sub
ja
cmp
cmp
cmp
pushf
loope
jmp
fndisi(8087
push
adc
ja
idivb
mov
push
adc
orb
cmpsb
xor
cmp
sbb
pusha
adc
arpl
xlat
mov
sub
xor
sub
testl
sub
cld
mov
push
mov
push
mov
aam
lea
add
push
cltd
jbe
lods
and
push
xor
stos
jne
xor
test
cmc
xchg
jp
xchg
mov
fidivs
lea
xor
out
xchg
std
cmp
cmpsb
imul
dec
nop
push
sbbb
test
pop
sub
outsb
and
push
and
rolb
pusha
push
mov
and
mov
pop
fucom
mov
cmp
adc
pushf
popf
mov
and
pop
aam
dec
insl
jnp
add
jl
ss
mov
rcll
sbb
mov
xor
leave
and
mov
jle
clc
sti
pop
fsubl
mov
cld
fucomp
sub
mov
or
imul
or
dec
arpl
movsl
jnp
idiv
nop
ds
add
gs
lock
xchg
pop
popf
addb
xchg
mov
pop
lea
cs
jnp
pop
scas
mov
cwtl
stc
pop
pop
pusha
fstl
mov
sbb
push
cmp
inc
in
pop
mov
test
sbb
xchg
pop
ja
push
mov
add
notb
lock
add
lahf
xchg
scas
rcr
mov
xor
cmp
fs
lahf
mov
add
aas
add
add
fistpll
dec
loop
outsl
loope
jle
iret
adcb
adc
xor
and
loope
or
movlps
sbb
pop
jae
repz
cwtl
cli
fistpll
mov
ret
cmp
mov
cld
or
pop
stc
xor
mov
sub
lcall
ficoml
or
ret
add
mov
ss
adc
xchg
mov
jbe
cmp
xchg
xchg
nop
testl
inc
inc
mov
mov
mov
sub
ja
pop
xor
sbb
mov
rcrl
hlt
out
stc
xchg
and
hlt
xchg
enter
jno
mov
ficoml
sub
pop
mov
cld
divl
aaa
push
insb
lcall
loopne
push
scas
addr16
lods
les
push
ds
jbe
sub
not
dec
mov
add
add
rcrb
mov
cltd
movsl
sub
pusha
or
jns
jno
push
fnstcw
popa
xchg
sbb
cwtl
cmp
or
rep
cmp
xchg
dec
cmp
in
sbb
pop
dec
mov
daa
cmp
jle
sbb
jle
add
xchg
ja
dec
mov
and
fcomps
and
in
mov
arpl
xor
sub
mov
popf
adc
pop
mov
pop
btc
dec
mov
in
sti
loop
pop
or
push
cwtl
xor
ftst
addr16
dec
xchg
or
sbbl
xlat
test
cli
or
xchg
pop
test
xchg
lcall
jge
enter
pusha
idivl
roll
xchg
gs
sub
aaa
xor
ljmp
sarl
fcomps
cmp
push
imulb
jbe
cwtl
cmpsb
ret
sub
jns
mov
lcall
add
popf
or
loopne
push
jl
je
negl
pop
pop
lahf
faddl
pop
test
mov
fwait
stc
out
mov
out
loop
mull
les
fisubrs
mov
loopne
out
subb
cmp
lock
js
sbb
dec
push
inc
or
and
cmp
and
adc
push
nop
iret
ds
mov
mov
push
les
add
stos
cmc
lea
stos
outsb
lods
std
in
push
push
movsl
pop
cmp
hlt
sti
test
or
std
pop
mov
addr16
adc
stc
adc
imul
int3
insb
fwait
inc
jg
rorl
das
dec
rclb
inc
int3
sti
fnstsw
int3
imull
adc
push
sahf
data16
lcall
jno
pop
gs
pop
out
dec
incb
loop
xlat
sbb
push
xchg
outsl
xlat
call
sub
lret
mull
shr
mov
in
popf
loope
or
jle
pop
test
jecxz
cltd
rcrb
js
mov
cmpsb
aas
jne
testb
and
and
sahf
mov
cld
jns
adc
push
mov
mov
xor
xor
or
jne
ret
pop
lds
es
imul
mov
mov
adc
fwait
cs
mov
mov
or
fs
inc
jb
add
xchg
loopne
add
test
cmp
mov
pop
icebp
jl
mov
xlat
cmp
add
xlat
sbb
into
dec
test
pop
ret
xchg
adc
clc
dec
mov
xchg
decb
dec
aas
mov
add
movsb
mov
xchg
fcmove
mov
fnsetpm(287
sbb
adc
notl
loope
shll
sarb
xorl
lods
cmp
loop
data16
dec
or
mov
iret
das
insb
pop
xor
shl
inc
fisubrs
inc
ret
addr16
fwait
cltd
mov
rcr
imul
cli
repz
out
js
push
cmp
mov
dec
andl
mov
clc
cli
outsl
cld
lcall
add
mov
pop
sbb
cmp
sbb
add
push
jle
icebp
subl
popa
jmp
lods
push
lcall
sbb
stos
imul
hlt
jb
nop
sub
pop
sbb
mov
sbbl
popf
mov
mov
mov
jge
movsb
sub
test
movsb
push
imul
scas
push
loopne
mov
int
pusha
vmaskmovdqu
aaa
popf
js
insl
test
test
xor
mov
dec
roll
lock
jo
and
mov
pop
fisubl
and
mov
and
test
mov
sbb
faddp
pop
stos
jns
out
fsts
xor
sti
in
fdivs
adc
add
jo
push
mov
std
lret
pop
push
inc
cmp
lcall
mov
stos
testl
pushl
lcall
and
add
cmp
ret
sbb
ss
jne
popa
aas
adc
push
lret
lea
mov
inc
mov
mov
cmp
cmc
hlt
inc
aam
jg
int3
inc
es
mov
xlat
or
pop
push
dec
fcoms
aam
pop
lds
fidivrl
les
fsubrl
inc
pusha
out
dec
mov
xor
insb
fwait
lea
jg
pop
fisttpll
dec
pop
sbb
sti
pop
cmp
stos
rorl
int3
inc
fsubrs
mov
jmp
mov
sbb
xchg
aam
test
scas
stos
imul
xchg
dec
lods
fmulp
repnz
jmp
or
or
or
mov
mov
push
mov
test
daa
scas
test
cmp
push
jle
ja
into
mov
pop
mov
cli
loop
mov
xchg
cmc
pop
fadd
mov
out
jns
faddl
jp
hlt
push
push
popf
sub
in
jo
imul
shll
dec
cs
pop
jns
dec
popf
or
aaa
aam
jle
xchg
and
int3
subb
test
test
push
daa
movsl
sti
add
aam
mov
mov
dec
adc
or
das
xchg
ret
or
stc
test
bound
xchg
icebp
dec
push
out
sbb
fistps
cmpsb
sub
xor
shlb
addr16
inc
cvttps2pi
push
cmp
and
addr16
pop
pop
mov
cltd
insl
movsl
imul
mov
lea
pop
push
jnp
adc
and
das
inc
test
insl
jl
in
mov
mov
sbbb
add
or
insl
add
mov
push
mov
mov
inc
cwtl
mov
cmp
pop
or
enter
aad
subl
sti
call
testl
sbb
mov
mov
shll
sbb
pop
movsb
add
dec
lret
iret
inc
cmp
sahf
ljmp
pop
fldl
repz
pop
pop
pop
jmp
fbstp
or
ss
adc
fcmovne
jle
dec
pop
cmp
sahf
mov
add
xchg
scas
rcrl
push
rclb
and
fcomps
out
into
ret
mov
rcrl
lds
bound
bound
loopne
mov
js
cmp
push
xor
in
and
mov
sbb
push
fyl2xp1
xor
arpl
pop
div
sub
push
cmp
sub
mulb
dec
pop
cli
inc
mov
inc
cwtl
pop
imul
aad
fistl
fadd
pop
nop
addr16
xlat
rcll
jo
mov
push
mov
repnz
mov
pushf
idivb
inc
sbb
mov
scas
jecxz
cmp
outsb
pop
adc
fstp
stos
jg
add
add
inc
mov
adc
lret
fwait
dec
inc
imul
mov
sarl
pushf
or
push
push
inc
aaa
xor
add
mov
xchg
call
call
sub
loop
icebp
iret
push
mov
xchg
push
push
pop
sbb
jg
xor
lcall
xchg
sbb
insl
mov
adc
test
or
and
mov
enter
stos
loope
mov
mov
divl
jb
enter
mov
add
mov
ret
dec
mov
in
push
jne
out
jp
add
addb
mov
dec
mov
adc
mov
sbb
lret
cmpsl
dec
push
shrb
aaa
inc
or
hlt
mov
mov
lret
xchg
inc
repnz
je
pop
dec
cmpsl
fistpl
addr16
cmpsl
lea
sub
dec
pop
adc
jns
outsb
mov
pop
das
inc
mov
sbb
sub
cmc
fucom
rcll
repz
pop
xchg
ret
nop
adc
push
xchg
inc
bound
sub
fsubrp
cli
test
mov
xchg
clc
sbb
xchg
clc
xchg
aam
inc
sbb
in
adc
xchg
jo
xor
test
fisttpll
adc
repnz
sahf
arpl
mov
inc
lcall
inc
inc
dec
dec
addl
mov
repnz
jne
or
pop
sbb
leave
hlt
adc
adc
mov
shrl
mov
lea
add
sub
lahf
dec
jge
loop
inc
pop
ljmp
mov
mov
mov
sub
cmp
lret
mov
jns
add
jae
jns
iret
stos
sub
std
outsl
shrl
xchg
mov
cmp
shlb
mov
sti
enter
loop
or
or
and
loopne
push
push
mov
lea
imul
sub
faddl
das
xor
and
cmpl
or
scas
in
dec
pop
push
or
lods
out
push
imul
cmp
dec
std
je
push
lcall
mov
aam
cmpsb
mov
add
scas
lea
pop
fsts
rcr
mov
adc
jb
test
add
sub
ljmp
push
cmp
lret
daa
imul
adc
pop
lds
jp
push
ficoms
in
stos
test
sbb
jecxz
cmc
es
mov
cmpsl
out
cmp
mov
es
pushf
sub
adcb
and
jmp
jmp
addr16
loop
jo
cmc
in
imul
fwait
in
ss
push
add
aad
clc
push
or
dec
and
dec
insl
adc
inc
jmp
adc
addb
add
mov
add
jb
test
int3
scas
push
daa
pop
loopne
dec
cltd
jmp
inc
arpl
cmc
add
loopne
and
xlat
aam
or
repz
js
cld
or
adc
call
xchg
pop
je
dec
hlt
cmp
lock
jg
in
dec
jmp
pushf
mov
mov
into
test
outsb
add
lods
and
bound
aaa
sub
xor
mov
add
shll
nop
and
push
xor
add
mov
sub
inc
mov
mov
imul
mov
iret
movsl
cmp
pop
in
in
scas
daa
stos
lret
mov
cli
sbb
test
ja
in
rorb
xchg
adc
xor
insl
sub
mov
les
xor
xchg
jg
lahf
dec
notl
aad
lds
aaa
dec
and
iret
adcl
adc
dec
mov
xchg
stc
xor
xor
das
es
mov
xchg
aam
xor
je
clc
adc
out
je
cltd
aaa
scas
insb
mov
pop
rorb
xchg
and
scas
jno
xchg
sub
int
push
mov
sbb
in
into
int
xchg
mov
int3
jl
jle
rclb
mov
jge
cli
mov
xor
inc
jle
mov
mov
stc
jae
out
test
mov
repz
sbb
and
imul
push
popa
daa
js
mov
call
pop
ds
arpl
dec
fs
and
jb
addr16
lret
sub
push
add
push
jnp
inc
adc
lock
jns
xor
lds
cltd
push
outsl
mov
push
fs
out
testb
je
sub
out
cmc
sbb
jo
sti
pusha
mov
lret
pop
jl
cmp
jo
cmp
cmp
sub
aad
scas
xchg
btr
lcall
imul
pusha
gs
sub
cmovbe
jbe
push
xchg
inc
or
sbb
scas
ret
into
pop
pop
sbb
mov
mov
xchg
xchg
ljmp
les
jne
sub
iret
mov
mov
sahf
dec
sti
jecxz
mov
dec
test
loope
lods
inc
subb
ja
cmpsb
mov
mov
scas
cmp
pop
and
pop
jne
mov
pmaxub
in
cld
mov
popa
out
std
and
loopne
push
fisttpll
enter
std
sub
xor
dec
js
out
cltd
addb
sub
test
dec
push
outsb
sub
adc
cmp
test
xor
dec
jae
loopne
outsl
xlat
add
mov
mov
mov
sbb
dec
ja
xchg
enter
movsb
int
push
sub
cs
roll
sahf
movsl
rclb
adc
push
icebp
inc
cmp
call
loop
adcb
jno
mov
push
shl
aad
outsl
es
sbbl
dec
stos
aas
dec
fdivs
pop
push
push
fsubrl
rorl
xchg
mov
movb
push
shlb
dec
sbb
adc
fimuls
ljmp
lock
icebp
jl
mov
add
cmpsb
add
fs
or
jmp
add
shlb
pop
fdivrl
add
jno
lea
xchg
cs
push
xlat
cmp
into
xchg
stc
mov
mov
das
cli
cmp
icebp
adc
xchg
pop
push
hlt
in
or
sub
xchg
ret
dec
and
inc
out
pop
add
js
mov
lods
mov
js
icebp
pop
lea
adc
shl
ja
data16
arpl
cmp
cmp
ret
dec
clc
or
data16
jge
xor
cld
lcall
shrb
pop
repz
cmpsb
jmp
cld
pop
scas
sub
xchg
repz
mov
dec
lock
push
ret
inc
pusha
mov
push
and
stos
mov
call
jmp
out
jnp
sub
pop
std
pop
cmpsb
adc
imul
mov
xor
stc
mov
inc
adc
xchg
testl
repz
iret
dec
incb
sbb
jp
out
push
adc
pop
mov
loopne
imul
dec
sarb
mov
cmc
inc
cmp
sub
mov
pop
popf
mov
movb
pop
shll
sbb
shll
mov
out
rolb
jbe
jmp
jae
repz
les
mov
and
insb
addl
popf
imul
shld
out
mov
cld
xchg
rcrl
inc
xor
in
sahf
icebp
mov
xorb
sahf
loopne
mov
push
mov
xchg
xor
adc
enter
out
mov
cmp
jmp
movsb
jbe
adc
fcoml
sub
outsb
imul
int3
and
jle
push
iret
mov
inc
jecxz
data16
sarb
inc
cmp
lods
lcall
inc
mov
mov
cs
out
and
loop
jge
xchg
xor
daa
notb
xchg
movsb
aam
imul
arpl
out
jle
inc
loope
push
enter
or
push
sub
cld
cmpsl
mov
mov
cmp
ret
dec
std
xchg
lcall
scas
inc
push
inc
push
inc
mov
orb
inc
idivb
sbb
subl
jecxz
sti
ja
adc
cs
sub
sbb
push
aaa
nop
sub
sbb
xchg
jecxz
or
les
scas
aam
jno
out
faddl
or
dec
push
mov
mov
lret
xor
rcrl
hlt
je
cmp
or
pusha
data16
push
aaa
dec
adc
int3
add
sub
fwait
dec
push
cmpsb
pop
ficoms
dec
mov
loop,pn
jle
stos
adc
push
sub
sbb
jne
inc
jno
dec
jne
ljmp
push
gs
aam
stos
fsubp
imul
ds
push
xor
out
leave
ret
jl
pop
push
cmp
adc
gs
xchg
or
mov
fwait
inc
cli
xor
notb
jne
icebp
rclb
mov
idivl
xchg
jae
jbe
stc
adc
sbb
shll
ret
sarl
aas
xchg
jne
xor
scas
mov
mov
leave
push
or
xor
test
mov
sub
add
sahf
push
insl
test
js
inc
popa
sbb
push
or
cmp
scas
fisttpl
push
int3
xchg
loopne
xchg
ret
pop
adc
sbb
pop
sub
scas
mov
xor
lds
fwait
dec
daa
dec
cltd
push
jb
repnz
sub
adc
push
cmpsl
xchg
daa
pop
hlt
push
push
adc
fldt
out
lods
test
fildl
bound
lahf
jl
sti
and
lock
repz
sbb
dec
mov
pop
pop
test
int3
cmp
mov
xchg
dec
dec
hlt
and
enter
mov
xchg
in
in
pop
push
imul
mov
dec
mov
push
inc
mov
xor
lret
mov
int3
loop
push
orl
mov
loop
mov
frstor
inc
xchg
mov
iret
adcl
popa
aaa
mov
movsb
stos
mov
push
adc
xor
push
in
or
int
add
insb
mov
scas
clc
mov
inc
pop
rorb
mov
in
mov
push
outsl
ss
ljmp
es
dec
aas
cmc
push
cwtl
dec
mov
dec
xchg
int
adc
or
xor
sbb
dec
push
mov
mov
push
cmpsl
pop
mov
ja
movsl
xlat
faddl
cmpsl
scas
cmc
pop
stos
cmp
adc
shrb
add
cmp
scas
cltd
ret
popa
push
aaa
ficoml
call
das
fmull
jmp
cs
jecxz
nop
sti
orl
arpl
cmp
sti
cld
jnp
xchg
xchg
int
mov
int
insl
dec
push
popa
push
sbb
pop
jp
icebp
cmpsb
pop
sbbb
xor
insb
xchg
add
mov
pusha
rol
rclb
xor
out
out
clc
bswap
adc
not
add
lds
xor
push
mov
adc
sbb
in
int3
in
mov
leave
bound
xchg
std
dec
push
imul
add
bnd
cmp
push
cld
push
cwtl
or
xor
or
push
lea
xor
clc
xchg
xchg
fwait
push
sbb
adc
imul
ljmp
jno
or
push
cmp
mov
ja
movb
jnp
into
lods
mov
and
jns
insb
adc
fstpt
mov
dec
stos
lods
push
arpl
outsb
lret
jecxz
lcall
pusha
data16
jno
dec
aaa
pop
or
addl
sub
lret
scas
sub
ror
rcrl
pusha
mov
aas
dec
cs
call
repz
inc
sub
jnp
jle
cmpl
mov
dec
dec
pop
fsubrs
cmpsl
imul
lret
cwtl
mov
je
mov
imul
push
jae
aam
cmpsl
or
in
fcomi
dec
ret
push
mov
ljmp
push
mov
ja
push
push
mov
out
pop
addr16
mov
sbb
movsb
xlat
fsts
lods
jmp
scas
mov
pop
mov
outsb
fcomps
sahf
outsl
mov
in
rcrl
dec
cli
cld
push
cmpsl
pop
adc
sbb
cmp
push
mov
loopne
or
dec
popa
mov
testb
cmp
pop
in
cs
addl
std
sbbb
fwait
adc
jnp
out
mov
xor
mov
loope
jmp
cmp
push
sbb
sub
mov
loop
sbb
popa
adc
push
enter
dec
push
sti
pop
sub
insl
pop
out
and
mov
inc
int3
xchg
push
mov
xor
xor
cld
xor
cmp
cmp
adc
mov
sub
xchg
lods
xchg
mov
mov
aas
shl
ds
aas
mov
mov
mov
bound
daa
xchg
adc
rol
mov
or
adc
addb
push
jl
faddp
int
add
push
dec
mov
iret
jl
ljmp
aad
lock
pop
or
and
mov
and
jge
xor
in
mov
mov
or
mov
aad
sbb
push
int3
in
mov
adc
jnp
sarb
sbb
mov
push
mov
loop
test
movsb
mov
mov
insl
jl
rcr
les
or
sar
jno
jle
dec
loop
jne
mov
xchg
ja
xchg
jae
jae
in
add
mov
test
add
scas
jb
dec
in
push
pusha
scas
clc
sbb
cmp
mov
and
lret
cmpsl
xlat
sub
mov
ss
cmp
xchg
cmp
je
fnstenvs
loop
dec
xor
push
pushf
adcb
mov
cs
repnz
idiv
scas
aad
mov
jge
add
xchg
nop
fmul
in
adc
in
or
stos
xchg
mov
psubw
aad
jge
push
ret
stos
xor
mov
mov
inc
jecxz
addr16
out
mov
pop
add
add
and
adc
pop
or
shll
xchg
or
int3
dec
frstor
and
xor
sub
jno
ret
xchg
ss
dec
adc
and
out
mov
mov
pop
cmp
pop
pop
inc
pop
mov
xchg
or
xchg
or
push
pop
nop
scas
mov
adc
test
mov
das
xlat
jecxz
outsb
mov
or
loop
push
mov
inc
mov
cs
xor
dec
mov
enter
int
mov
xchg
mov
pop
movsl
lahf
cli
and
ljmp
inc
and
pop
in
lea
in
mov
cltd
adc
cli
fstl
and
adc
lods
call
and
les
pop
loop
cld
push
std
mov
out
pushl
stos
repz
pop
xlat
in
dec
movsb
jl
mov
add
call
pop
xchg
shlb
xor
sbb
fs
mov
in
sub
xor
out
loop
sti
ret
jge
sub
xchg
es
into
aam
clc
cmp
leave
adc
pop
cmp
adc
mov
movsl
loop
xlat
jecxz
sub
outsl
sub
scas
loope
push
and
xchg
sbbb
in
xor
fidivl
sbb
rcr
out
sarl
fistpl
adc
sarl
cmp
add
inc
xor
add
push
jnp
or
pop
fisubrs
xorl
out
fwait
test
pop
push
push
sar
cmpsb
stc
insb
pop
add
push
mov
idiv
mov
cmp
test
jp
push
jle
sub
out
mov
iret
push
popf
xchg
mov
fildl
jns
out
lret
sbb
hlt
ja
es
mov
push
push
ret
mov
pop
dec
fwait
imul
mov
mov
ret
loope
xchg
dec
dec
mov
cmpl
add
sbb
or
adc
out
mov
test
dec
pop
cmp
pop
pushf
pushf
leave
lahf
dec
mov
imul
xor
dec
inc
xchg
les
shlb
mov
inc
pop
test
xchg
jl
xor
int3
cli
pop
and
test
stos
imul
push
push
insb
ja
mov
inc
cmpsl
jnp
jp
cmpsb
test
cmp
mov
out
pop
imul
test
cmpsb
add
cli
scas
std
pop
lret
push
pop
arpl
cld
add
cmpsl
push
addl
cmp
or
xchg
jbe
push
les
jae
pop
arpl
pushf
inc
push
dec
iret
inc
push
xchg
and
xor
dec
scas
loope
pop
and
fistpl
sbb
pusha
cmpsb
cmp
mov
shl
xchg
test
and
bound
push
sbb
ret
xchg
cmp
xchg
fsubl
sahf
pop
sbb
xor
cwtl
scas
adc
insl
push
and
cltd
pop
and
add
scas
xchg
clc
bound
rclb
inc
ret
push
cmp
mov
ret
sub
or
xor
dec
andl
adc
mov
add
jne
test
add
jle
and
pop
jb
or
out
xor
mov
mov
xlat
or
mov
pushw
push
leave
rcll
insb
negb
mov
gs
mov
sbb
dec
loope
push
jge
or
or
mov
scas
jmp
std
movsb
imul
rclb
rorl
sub
mov
daa
pusha
pop
xchg
inc
dec
test
cmp
jecxz
pop
adc
fstl
rcr
and
jp
xor
leave
push
or
add
push
push
sub
or
lds
jno
cwtl
and
in
and
ror
fnsave
pop
inc
jmp
add
lea
push
jno
mov
push
sbb
jge
inc
cltd
cmc
iret
jg
jbe
testl
sti
out
sbb
popa
cwtl
lcall
repz
iret
jne
pop
xlat
mov
mov
orl
pop
pop
cmp
in
lret
jbe
scas
scas
pop
xchg
lret
jnp
mov
cmpl
test
mov
or
pushf
pop
add
dec
pop
idivl
xorl
pop
arpl
in
outsl
loopne
roll
inc
push
cmp
or
cmp
movsl
repz
cmp
jl
sbb
adc
lret
dec
ljmp
jmp
inc
aam
fbstp
fsubrs
outsb
fs
bound
aaa
adc
inc
mov
js
loope
inc
pusha
cltd
orl
mov
fsts
or
insl
jnp
jb
sbb
inc
and
and
test
ljmp
gs
jmp
mov
inc
bound
add
es
cld
add
mov
stos
test
gs
fs
pop
popa
es
mov
outsl
and
or
out
mov
fsts
out
pop
xlat
push
pop
dec
inc
mov
aas
fs
rorb
popa
iret
mov
dec
cmp
add
inc
inc
xchg
mov
ljmp
lret
cld
add
push
repnz
ret
bound
cwtl
cmp
aaa
aad
incl
dec
ficompl
jo
jl
mov
stos
leave
xchg
imul
repz
and
pop
test
test
test
icebp
int3
gs
scas
fnstcw
jb
mov
out
push
jns
dec
gs
pop
mov
adc
mov
mov
mov
or
cmp
fldt
inc
or
imul
arpl
xor
add
dec
mov
cmpl
out
into
in
into
inc
lods
out
lret
fstps
loop
mov
adc
inc
data16
add
out
idiv
stos
rol
cmpsl
jns
xacquire
xchg
testl
repnz
mov
fldt
and
xor
mov
mov
je
mov
jmp
lods
add
mov
andb
pop
mov
add
dec
stos
pop
adc
fbld
and
bound
cmp
adc
pop
sarl
push
sub
fbstp
and
dec
xor
mov
lods
inc
xor
mov
mulb
xchg
mov
cmp
xchg
add
mov
mov
and
jp
jae
std
cmpsl
shll
lods
xorb
aas
notl
xchg
add
add
xchg
lret
test
sub
sbb
ds
add
fdivrl
and
pop
fdivrs
or
inc
sahf
sub
or
addr16
inc
mov
shrl
dec
add
inc
sub
rorl
push
lret
lret
mov
cmc
ljmp
inc
mov
subb
movsb
call
sub
ja
out
or
xorb
jbe
hlt
sub
push
xor
movsb
or
cmp
sub
out
inc
mov
aad
and
std
add
mov
out
rcll
stos
mov
fs
int3
test
orl
inc
lret
mov
jne
xchg
clc
enter
lds
imul
sub
inc
jl
icebp
jecxz
xchg
sahf
dec
adc
loop
lgs
push
sub
sahf
xchg
lea
aad
push
adc
xorl
outsl
ret
in
je
sub
mov
scas
inc
inc
or
ja
xchg
mov
fcompl
xchg
fisttpl
push
iret
into
and
dec
push
inc
sbb
cmc
ljmp
ja
test
movsb
pop
xor
in
pop
dec
ret
addr16
das
imul
cmc
sbb
insl
call
jg,pn
inc
push
mov
push
push
sub
ljmp
in
int
jge
or
pop
in
jno
xchg
popf
xor
sub
mov
ds
leave
int
pop
sahf
xor
inc
jne
pop
mov
inc
movd
dec
aas
xchg
lret
adc
popa
and
xorb
xlat
mov
and
clc
jl
adc
idivl
mov
decb
jne
ja
testb
orb
mov
pop
fcomip
stos
sub
enter
mov
sub
sbb
jnp
xor
out
mov
rcr
sub
add
in
adc
jmp
sbb
std
cmp
out
js
mov
or
in
out
pop
inc
ja
mov
or
std
pushf
mov
in
lcall
mov
cmp
call
push
xchg
test
fs
bsr
fcoml
jp
jmp
cmpsl
pop
pop
jb
hlt
adc
imul
add
mov
lret
pop
push
mov
repz
inc
daa
mov
sti
movsl
and
add
or
rolb
shl
cmp
insb
push
scas
in
ss
xchg
pop
jnp
test
adc
arpl
push
ficoms
insl
dec
les
pushf
insb
inc
xor
cmc
jg
int3
cmp
pop
jge
add
data16
rcl
xchg
mov
xchg
insb
pusha
dec
mov
pop
sbb
xchg
push
addl
jl
roll
adc
push
mov
das
dec
add
lcall
iret
pop
loopne
mov
add
ja
pop
iret
mov
jb
rolb
pop
popf
jo
mov
fcomi
mov
in
enter
or
lods
xor
daa
rcl
clc
loope
in
inc
sbb
sub
in
insl
push
push
data16
mov
loope
outsl
rorl
out
sbbb
ljmp
push
out
inc
lcall
mov
adc
mov
sti
sub
jb
les
popf
ret
lcall
inc
lea
mov
loopne
adc
fs
mov
shrb
inc
and
rcrl
rol
imul
jle
push
add
mov
hlt
xlat
out
adc
mov
sarl
sub
je
mov
jge
js
jae
loopne
adc
fdivs
dec
lcall
pushf
test
jae
dec
add
push
add
sub
push
jnp
xchg
std
mov
imul
mov
and
in
dec
mov
fdivl
dec
jle
pop
jge
loop
negb
mov
clc
adc
imul
jecxz
mov
outsl
dec
loop
jnp
inc
and
test
popf
jecxz
jns
jbe
imul
cmpsl
cmp
xchg
pusha
int
cs
aas
test
bts
enter
hlt
cmpsl
xor
dec
xchg
pop
mov
mov
shrl
cld
or
xor
sub
and
xchg
js
popf
and
inc
mov
scas
mov
dec
push
fisubrs
into
es
aad
cli
lods
je
in
lock
mov
pop
add
xchg
xchg
in
inc
mov
faddl
push
ss
push
iret
rcr
xor
inc
enter
outsb
std
pop
fidivrl
test
push
mov
insl
ret
jg
adc
insb
cmpsl
pop
mov
mov
and
lods
jae
xchg
ds
sub
push
xchg
loopne
lods
mov
and
std
sub
xorl
push
or
sub
mov
gs
test
jnp
vzeroupper
sub
sub
aas
push
adc
nop
dec
movl
cmpsb
push
inc
mov
mov
ret
inc
xor
dec
dec
imul
mov
cmp
movsl
stc
inc
mov
addr16
pop
mov
xchg
sbb
mov
add
mov
lods
aam
ja
xchg
xchg
sbb
fwait
sub
xor
jg
jo
xor
aas
push
sbb
cmp
jmp
jp
push
pop
dec
stc
adc
mov
xor
les
sub
inc
fildll
cld
pop
and
lds
fadd
mov
and
das
test
dec
pop
dec
mov
adc
xchg
push
sub
inc
leave
fisttpll
arpl
cmpsb
dec
popf
popa
xchg
sarb
xlat
mov
outsb
push
pop
jle
enter
mov
push
jnp
push
xor
sub
inc
adc
insl
push
xchg
les
and
aaa
mov
je
pop
inc
push
lahf
inc
lahf
xchg
stos
push
pop
movntq
pusha
xchg
push
ret
dec
fucomip
pop
repz
add
jecxz
gs
and
jnp
cld
insb
mov
sahf
xor
inc
mov
mov
push
jnp
pop
sarb
imul
sbb
mov
or
icebp
push
adcb
fbld
push
xor
adc
cmp
or
sbb
ret
xchg
int3
mov
aaa
jo
inc
adc
cli
adc
cli
mov
mov
push
mov
loopne
dec
les
sbb
lock
in
int3
sub
loope
cs
ret
inc
adc
cmc
and
dec
and
fsts
outsl
or
sub
sbb
dec
inc
push
add
test
adc
inc
pop
bound
add
push
jle
or
mov
xchg
repnz
mov
xor
cmp
and
mov
in
gs
mov
jb
mov
mov
nop
cmp
cmp
or
jno
add
jnp
mov
loop
pop
mov
test
xor
or
sbb
sub
mov
add
pop
inc
lods
adc
out
inc
cmp
inc
fmul
je
and
mov
insb
mov
out
mov
mov
mov
jmp
ret
mov
cmp
dec
stc
int3
mov
and
push
jg
ficompl
xchg
mov
mov
mov
push
inc
cld
lds
idivl
mov
stos
js
repz
movsb
aam
inc
sub
pop
lods
sub
push
ja
xor
lock
xor
shll
popf
jns
inc
jo
ds
xchg
clc
mov
mov
js
cltd
and
lea
or
in
inc
inc
sbb
push
lret
xchg
dec
cmp
frstor
pushf
push
sbb
lock
mov
aad
popl
push
xor
cltd
ficoml
aaa
sub
mov
sub
lods
hlt
dec
sub
aas
mov
jb
jmp
xchg
mov
inc
sub
jns
pop
outsb
ror
popf
adc
mov
cmp
ffree
test
or
xchg
xchg
insl
mov
ror
push
andl
out
add
popf
sub
lock
aas
inc
push
bound
icebp
test
lcall
pusha
sarl
lods
dec
inc
inc
push
movsl
imul
pop
int
push
dec
pop
ret
in
and
sub
xchg
sarl
and
push
lret
pop
lcall
and
out
iret
sbb
push
leave
movsb
cmp
mov
push
mov
inc
mov
aad
xchg
rorb
xchg
jae
pop
cmpl
pop
xlat
push
sub
outsl
cmpsl
es
int
rorb
pop
push
es
div
stos
jae
jnp
mov
stos
neg
imul
roll
hlt
nop
std
lcall
xor
dec
inc
outsb
cmp
ss
add
jecxz
data16
add
fninit
pop
xchg
adc
jecxz
and
and
lods
shlb
or
add
xor
mov
subl
push
loope
or
mov
fadd
jo
cmpsb
inc
stc
ss
adc
cltd
and
stc
push
test
aas
add
les
outsl
adc
sub
repz
stos
sbb
adc
std
ss
aam
inc
sbb
clc
jnp
jns
pop
cmp
mov
leave
sub
pop
push
cmpsl
cmp
addr16
inc
movsb
jp
fdivrl
or
add
adc
inc
mov
or
cmp
popf
mov
inc
push
repz
in
in
and
and
sbb
out
insl
pop
int
adc
xchg
inc
inc
in
out
scas
jns
xchg
push
inc
enter
inc
mov
xchg
lea
xor
pop
fdivrl
sbb
add
iret
andb
mov
les
ret
pusha
xor
loope
je
pusha
push
sbb
and
pop
sbbb
inc
push
outsl
push
fsubl
out
or
cmpsl
dec
jge,pn
enter
enter
xor
lahf
add
mov
loope
les
mov
leave
mov
push
push
xchg
sarb
fmul
adc
dec
mov
mov
mov
dec
imul
pop
aad
gs
push
add
outsb
sbb
out
in
dec
loopne
aas
jecxz
cli
jge
or
sub
xor
pushf
outsb
subl
jl
xlat
rcll
mov
testl
not
out
int3
inc
insb
mov
ja
out
test
jge
bound
mulb
sbbb
push
loopne
lahf
daa
sahf
and
ljmp
pop
hlt
fnsave
lret
jns
sbb
push
les
push
subb
lret
push
lret
inc
negb
xor
leave
adc
pop
jg
in
sub
jo
push
push
adc
shl
sub
scas
cmc
inc
decb
jg
lret
and
xchg
mov
push
iret
add
xor
stc
pop
cmpsl
fildll
in
nop
pushf
ss
sbb
sub
stc
push
jg
push
popf
andl
iret
cmpsb
xchg
xchg
arpl
dec
mov
xchg
mov
xchg
scas
xchg
jecxz
bound
ljmp
jg
adc
or
adcb
sub
mov
sbb
pop
cmp
inc
lods
inc
dec
mov
notl
or
mov
xchg
pop
mov
dec
cwtl
popa
test
jle
fs
pop
mov
test
lods
or
ds
adc
mov
dec
pop
push
inc
loope
mov
imul
fisttps
lahf
mov
js
mov
cld
xchg
cltd
adc
lods
cmp
mov
out
pusha
hlt
movsl
stos
ret
jne
rolb
hlt
orb
popf
movsl
jmp
dec
outsl
testb
js
les
test
popf
or
ret
lahf
cld
mov
push
jb
push
or
in
aad
lea
and
dec
jb
and
lock
push
addr16
popa
scas
mov
push
jo
pusha
pushf
andl
and
leave
into
movsb
enter
jo
jo
lods
imulb
ror
cld
xlat
sahf
sub
mov
cld
pusha
jae
pop
repz
pop
xor
fisubl
ficomps
orb
negb
nop
cmpsl
push
cmpsl
inc
mov
push
div
mov
ret
xlat
dec
mov
lret
test
and
adc
jmp
push
aaa
jae
inc
or
push
jno
sbb
je
and
mov
sti
dec
inc
popa
mov
xor
mov
test
inc
pusha
aas
or
push
sub
mov
dec
js
push
jp
aaa
mov
push
jnp
insl
sub
xor
stos
inc
sti
mov
test
lock
mov
pop
outsb
jns
sub
or
inc
jp
ret
mov
dec
pop
scas
ret
dec
test
cltd
or
jnp
mov
sub
ljmp
mov
mov
push
test
iret
stos
push
pushl
sbb
ja
adc
scas
test
outsl
or
or
push
pusha
scas
mov
xor
in
jge
cld
dec
mov
inc
stc
jmp
inc
les
push
xchg
xchg
sbb
mov
push
ret
jle
mov
pop
xlat
or
dec
bound
out
lds
out
mov
cmp
divl
sub
lods
add
enter
lds
sub
andb
mov
sahf
fiaddl
cwtl
pop
faddl
imul
arpl
xor
inc
fmull
scas
dec
mov
xchg
mov
sub
xchg
pop
mov
mov
ss
lret
jnp
lock
out
aam
cmp
jmp
out
cltd
ja
adc
loope
negl
dec
sub
jmp
add
jg
and
adc
xchg
inc
mov
pop
pop
movsb
dec
rorb
rorb
neg
xchg
or
mov
ss
jae
push
outsb
movsb
sub
sub
xchg
mov
mov
xchg
dec
sysret
aas
jae
cmpsb
add
inc
in
jl
addr16
stos
adc
inc
push
pop
pushf
lcall
pop
push
sarl
cld
push
or
xchg
daa
mov
or
xor
out
jp
aaa
mov
xchg
test
cmp
cmp
or
dec
sub
xorl
add
xor
and
jge
orl
dec
arpl
add
cmc
lods
pop
inc
insb
fldz
jbe
movsl
and
ror
add
mov
xor
stos
int
fs
aad
fwait
rcrl
outsb
je
cmp
jmp
adc
sar
inc
lods
rcrl
and
hlt
shl
inc
clc
cli
adc
jmp
mov
add
and
jb
cs
push
sbb
cltd
test
ljmp
std
inc
daa
jno
cmp
cmpsb
xlat
mov
iret
int3
out
movb
imul
mov
pop
push
lret
mov
pop
jae
cmp
lods
inc
jp
inc
imul
push
ljmp
ljmp
mov
adc
out
lret
mov
repnz
or
insl
sahf
rdmsr
push
cld
sbb
cs
inc
call
frstors
xchg
push
pop
ljmp
cmpsl
lahf
sti
mov
andl
ja
cld
nop
xor
and
shrb
and
sub
loop
push
clc
xchg
pop
pop
adc
jp
jnp
mov
insl
daa
pop
fistps
inc
mov
cmpsl
lret
mov
inc
add
mov
cli
xchg
pop
sub
pusha
cmp
or
sbb
lds
int3
loopne
lds
adc
aaa
icebp
daa
lock
rcll
cli
mov
sarl
pop
shl
pop
arpl
cmpsl
cmp
jg
cmp
movsb
out
mov
pop
aas
pop
xor
iret
push
fsubl
push
or
pop
popf
sbb
pop
aad
mov
les
aam
sbb
insl
mov
pusha
mov
mov
mov
sbb
dec
mov
sbb
cmp
lret
repz
pop
jge
ljmp
and
xchg
dec
push
dec
inc
mov
cltd
or
scas
add
xchg
push
sbb
push
js
inc
push
les
insl
les
fsts
mov
xchg
cmove
push
popf
mov
lcall
ror
push
movsl
mov
sub
loope
push
dec
nop
nop
out
and
mov
inc
lock
jmp
xchg
lds
push
xor
pop
mov
out
add
cmp
call
lods
xchg
rolb
push
add
ret
rcrb
mov
pop
sub
xor
je
push
inc
adc
jnp
mov
lds
aaa
add
adc
jmp
adc
sbbl
lret
test
jno
cmpsb
lret
rorb
mov
ds
xor
adc
out
xchg
aas
nop
xchg
jmp
inc
daa
pop
in
mov
jb
sahf
and
call
mov
push
mov
jnp
jae
arpl
repnz
pushf
mov
pop
int
bound
adc
out
sarb
xchg
addl
inc
outsl
lret
mov
lea
into
shll
xchg
jg
pop
fldln2
shl
inc
mov
rorl
jmp
fcmovnb
in
out
mov
xchg
int3
inc
add
xlat
popa
fs
push
add
orl
inc
int3
mov
pop
aam
pusha
xchg
add
rcrl
dec
dec
aam
jns
push
and
mulb
fbstp
sub
xchg
jp
jl
jnp
adcb
in
xchg
jecxz
in
mov
xchg
call
imul
jge
add
cltd
mov
mov
sarl
or
sub
pop
mov
mov
and
movsl
push
cmp
mov
fistpl
cmp
in
pushf
fst
pop
cmp
jo
jbe
dec
and
pop
cs
cmp
stc
push
rorb
outsl
cs
or
cld
mov
rorl
push
mov
aad
in
imul
loop
ret
pushf
stos
fsubrp
cmpsb
pusha
pushf
fs
sahf
pop
into
out
xchg
xchg
mov
mov
in
adc
dec
je
push
mov
cmc
sbb
sbb
mov
jns
loop
adc
pop
sbb
ret
mov
mov
iret
es
scas
inc
fbstp
push
pusha
imul
cwtl
adc
in
movsb
inc
inc
jae
lods
repnz
bound
sbb
mov
sbb
daa
test
mov
xchg
pop
fwait
mov
stos
aaa
adc
xor
out
sbbb
push
and
dec
push
push
jl
inc
fnstsw
addr16
jno
sub
sti
fs
gs
or
pop
movsb
sub
xchg
xor
andb
mov
in
cmp
sbb
push
cmc
popa
out
xor
lods
xchg
sub
sbb
imul
gs
cltd
adc
into
or
pop
fxch
bound
aas
mov
insb
mov
orb
ds
or
add
sbb
je
cwtl
cmp
sti
xorl
mov
xor
inc
cmp
mov
stos
add
fildl
and
mov
repz
test
int
mov
sbb
sub
jle
pop
out
lds
jb
cltd
insb
testl
adc
dec
inc
inc
rcr
adc
mov
jne
or
js
imul
adc
shll
mov
dec
outsl
fwait
dec
fidivs
and
cwtl
mov
fistpll
ror
xchg
jge
jbe
pop
leave
adc
fsubr
rcrl
cmpsb
xor
xor
int3
mov
add
cs
pop
push
inc
stos
xor
push
push
fbld
push
sub
out
mov
cmpl
in
mov
or
dec
insb
mov
push
or
repz
pop
cmp
repnz
outsb
adc
sub
xchg
mov
or
add
push
sbb
pop
stos
or
sub
fwait
mov
mov
cmp
xchg
inc
xor
sbb
adc
frstor
loop
js
lea
push
inc
or
jo
gs
cld
sbb
cld
mov
mov
jp
jmp
and
ss
lcall
cpuid
adc
mov
add
xchg
mov
and
popa
inc
fisttpl
cmp
pop
lahf
enter
xchg
pusha
ret
addb
movsb
dec
mull
mov
xor
pop
mov
jno
out
xchg
enter
bound
or
stos
fwait
ret
pop
movsb
ja
cmp
lea
lahf
in
div
insb
aad
pop
xor
sub
pop
xor
fs
cmpsl
jmp
fs
pop
shrl
insl
jae
mov
cs
div
xchg
in
hlt
in
push
cld
dec
jbe
shrb
and
ja
mulb
lahf
orl
out
repz
adc
mov
inc
cmp
cwtl
jecxz
sar
jae
add
in
clc
ljmp
into
or
sbb
js
pop
mov
addb
adcb
gs
popf
push
mov
pop
outsl
dec
data16
insl
je
inc
dec
das
xlat
add
jne
mov
cwtl
clc
xor
int3
pop
xchg
mov
cmp
adc
push
insl
mov
inc
pop
lock
icebp
das
pop
mov
cmp
std
mov
outsl
dec
jg
pop
sbb
cmp
ret
imul
loope
das
addr16
in
mov
and
loope
rorb
outsb
test
mov
jle
leave
dec
mov
pop
in
dec
cltd
xchg
inc
mov
shll
mov
lret
mov
mov
out
insb
std
insb
cli
test
xchg
xor
inc
xor
mov
sbb
mov
jns
mov
loopne
mov
test
cmpl
test
pop
xchg
cltd
sub
rorb
sarb
test
inc
out
gs
push
repz
mov
xor
imul
dec
pop
sarl
mov
out
int
int
aam
aaa
jmp
out
cmpsl
xchg
fsts
inc
lahf
dec
daa
andb
xor
or
xorb
call
movsl
rol
std
stos
sti
aas
xchg
call
jg
imul
imul
add
inc
or
incl
fadds
push
test
mov
popa
iret
push
loope
inc
or
push
jbe
lds
out
sahf
jl
insb
repz
rorl
lea
nop
es
inc
pop
in
fwait
mov
cmc
or
push
rolb
fisubs
mov
ret
push
scas
enter
in
aad
fsubs
pop
ljmp
jb
sub
sbbb
lcall
jo
mov
enter
sub
inc
mov
addr16
outsl
fstl
xchg
or
dec
adc
leave
mov
mov
and
int3
jbe
mov
cmpsb
pop
add
test
sbb
outsb
and
fidivrs
rcrl
cld
mov
daa
test
bound
inc
lahf
push
sub
ss
mov
pop
jmp
nop
sti
nop
jle
jg
sub
cmp
cltd
leave
mov
movsl
cmp
shr
sbb
test
or
or
in
dec
cmpsl
jg
push
and
and
push
dec
xchg
jno
fwait
in
mov
pop
testl
fwait
push
push
repz
mov
and
cmp
pop
mov
icebp
sub
mov
dec
dec
int3
adc
and
xor
push
xor
push
xchg
inc
fs
out
les
imul
or
jnp
std
inc
out
outsb
sbb
pop
mov
sub
lock
leave
xor
pop
pushf
xor
pushf
int
cmp
ss
out
jge
push
ja
jb
cld
pushf
ljmp
pop
jae
cmpsb
repz
lahf
cltd
or
popf
fstpl
test
or
mov
mov
js
xchg
imul
cmp
out
ds
test
addl
sbb
cwtl
xchg
adc
adc
movsb
cmp
mov
xchg
pop
sbb
sarl
mov
jle
add
push
or
sbb
cmp
push
inc
and
imul
inc
cld
imul
cmp
clc
cmp
bound
or
pop
cld
inc
rcrl
aaa
test
add
gs
mov
inc
xchg
lds
inc
lahf
mov
jg
ficoms
lea
or
fcomps
testl
std
test
lahf
scas
loopne
cmp
hlt
lods
push
pop
mov
flds
jg
push
xchg
aam
push
stos
or
int
loop
jo
out
in
push
push
sub
sbb
in
xlat
jle
cmp
pop
push
add
dec
cmpsl
adc
cmp
pusha
cmpsb
add
movb
pop
adc
test
fidivrl
ds
clc
aam
cmpsl
ja
fisttps
mov
pop
rcl
dec
pop
dec
and
mov
std
mov
pop
push
sub
sbb
dec
nop
loop
add
mov
and
dec
test
and
leave
les
pop
push
dec
xor
cmp
cmp
mov
pop
test
int3
jae
fdivrs
out
rorl
ror
mov
sbb
inc
repz
sub
mov
cmp
sbb
xlat
xor
xor
mov
test
cmp
js
dec
or
int
insl
jge
pop
movsb
mov
xor
stc
push
aas
in
bound
cli
lock
icebp
dec
sti
lret
sbb
cmpsb
lret
imul
mov
pop
ja
out
mov
xchg
cmp
lcall
sbbb
outsl
sbb
xchg
mov
inc
xchg
int
dec
mov
or
push
mov
push
sbb
rorb
inc
mov
inc
scas
je
jecxz
push
or
and
je
add
adc
mov
sbb
cli
xchg
test
popa
dec
stos
jns
aad
or
test
dec
sbb
sub
cli
scas
push
pop
add
fisubrl
pop
int3
adc
mov
divl
icebp
loop
fnstcw
lret
fwait
sbb
mov
pmulhw
enter
dec
pop
mov
cmpsb
cs
adc
xchg
insl
addb
lret
cld
jp
xchg
fsubs
out
adc
fidivl
fdivrl
push
arpl
dec
pop
mov
mov
outsl
enter
out
les
lds
adc
mov
addr16
cwtl
out
call
sbb
sub
stos
pushf
daa
in
stc
mov
sub
cwtl
popf
push
psrad
ja
cmp
xchg
fsubs
sbb
or
mov
je
push
scas
out
sub
test
xchg
dec
or
jge
jg
pop
fisubrs
popa
int
mov
stos
mov
xor
and
push
pop
lea
lret
cwtl
push
sti
mov
pop
rorl
xlat
bound
sub
clc
jnp
jl
pushf
lret
jp
std
mov
xchg
mov
loopne
inc
inc
das
jp
ss
pop
xchg
jl
cltd
cmp
pop
pop
adc
xor
movsb
icebp
sbb
fnstenv
pop
pop
pminsw
pop
aad
sub
inc
jbe
mov
mov
or
cmc
or
sbbl
push
jp
xor
les
dec
stc
xchg
sarl
movsl
xchg
xchg
loopne
lea
pop
push
adc
loopne
pop
push
incl
call
mov
push
add
add
sbbb
dec
add
jne,pn
and
loopne
xchg
xor
pop
std
adc
mov
mov
pop
or
xor
sbb
stos
jae
cli
add
dec
inc
loop
call
int
mov
inc
movsb
addb
xor
xor
test
popa
rolb
inc
rcll
mov
mov
mov
arpl
mov
push
insb
les
cli
jg
jg
mov
cmp
aad
inc
iret
xchg
jbe
xor
mov
dec
lcall
shlb
adc
dec
push
jne
mov
loop
ljmp
out
in
cmp
stos
add
pop
aad
xchg
xchg
jmp
xchg
inc
jmp
clc
inc
test
aas
shll
adc
in
and
dec
mov
lds
pop
rcll
shll
xchg
aad
test
loope
xchg
mov
mov
adc
sub
hlt
test
call
xor
fstpl
jno
nop
add
cmp
push
outsb
cmp
pop
cwtl
mov
loopne
bound
push
mov
add
xor
movsl
push
and
inc
xor
push
cmp
std
mov
hlt
xchg
xchg
xchg
cmp
divb
mov
jg
mov
push
push
mov
loopne
imul
mov
fcmovu
fildl
and
sub
push
out
xchg
and
xor
pusha
inc
add
ljmp
nop
push
pop
mov
shrl
out
arpl
sbb
shll
mov
inc
mov
aam
add
fmul
ret
push
inc
fwait
in
jle
push
and
xchg
xchg
pushl
pop
jl
push
js
inc
sar
cs
mov
mov
pusha
cmp
mov
or
xchg
pavgb
jle
sbb
dec
mov
add
sub
and
sbb
adc
iret
in
fnsave
mov
fbld
mov
sub
loopne
pop
enter
xor
push
mov
jns
rorl
test
loope
push
mov
xor
dec
pop
popa
xor
or
loopne
pushf
jbe
ret
mov
je
sbb
jbe
pop
jl
dec
or
das
movsb
mov
xor
sub
jb
inc
push
sahf
shll
mov
push
push
lock
push
mov
pop
gs
inc
and
lock
mov
xchg
je
inc
pop
or
repz
test
xchg
divb
push
pushf
xchg
stos
lods
mov
stos
xchg
and
xor
pop
arpl
and
sbb
pop
pop
xchg
sbb
push
jecxz
cmp
pop
mov
dec
repz
inc
ret
lcall
xorb
testb
aas
int
in
fldl
repz
and
jno
mov
aad
push
cmp
loop
mov
aad
jge
xchg
ljmp
xor
shll
dec
aaa
orb
sti
mov
mull
and
mov
dec
push
mov
and
imul
out
andb
cmp
cltd
scas
lods
int
xchg
add
mov
aas
cwtl
outsl
in
xor
insb
add
mov
lahf
dec
ret
fwait
jae
lea
pushf
push
mov
fdivl
mov
jge
cmpb
dec
addr16
push
and
mov
cmp
push
dec
sub
stc
sub
pop
or
icebp
sub
adc
inc
jbe
das
in
jb
nop
cmc
dec
pop
jns
jg
cmc
out
ret
jmp
leave
add
rcrl
movsb
ja
push
sti
xor
cmp
sarl
pop
push
or
cltd
ret
mov
cmp
dec
xchg
int
mov
inc
scas
movsl
imul
jbe
outsb
and
jnp
stos
lahf
scas
sahf
fwait
xor
mov
sbb
shll
fisubl
mov
cmp
xchg
cwtl
jns
jae
mov
lahf
dec
or
sbb
inc
sbb
outsl
rcrb
push
insb
add
jnp
fldt
out
or
enter
sbb
imul
scas
or
add
ret
out
mov
adc
push
mov
subl
sub
push
push
call
xor
pop
jecxz
xchg
and
in
pop
mov
mov
call
mov
stos
lret
cmpsl
sub
call
jne
aad
push
dec
repz
jmp
stc
xchg
fucom
repnz
adc
cmp
jne
test
cld
lcall
insl
inc
loop
and
push
xor
cltd
inc
dec
cmpsb
cmp
jle
repnz
aas
add
into
inc
jl
xor
adc
sbb
mov
dec
mov
inc
out
mov
lcall
mov
pop
sbb
mov
in
adc
mov
mov
into
inc
sbbl
call
movsb
and
push
jb
ret
into
out
imulb
loopne
or
mov
dec
cs
fdivr
jo
rcrl
dec
int3
mov
sbb
or
xor
sub
in
ds
xchg
dec
inc
xor
mov
mov
push
inc
cmp
mov
pop
sbbb
jl
out
pusha
and
ds
imul
jnp
pop
js
out
or
push
in
mov
jnp
daa
aad
xchg
xor
repnz
clc
andb
pop
push
jg
lret
inc
sbb
pop
push
setne
add
add
frstor
mov
mov
fcmovb
test
sbb
test
push
mov
imul
pushf
push
mov
test
mov
rcrl
cmpb
sub
xorb
dec
bound
das
enter
xchg
ss
jo
in
je
stos
mov
leave
jge
mov
mov
adc
shll
shl
cmp
pop
pop
mov
bound
lret
sub
jle
xor
inc
push
adc
and
mov
lcall
leave
das
in
sbb
mov
loop
shrb
add
xchg
outsb
std
xchg
daa
je
loope
mov
scas
mov
jno
jecxz
shll
popa
scas
push
pop
add
push
push
mov
sti
adc
dec
lods
push
mov
push
rcrl
xor
mov
fldt
int3
mov
xchg
scas
sbb
xchg
jo
stc
dec
inc
cld
cli
aas
and
jg
push
lock
pop
pop
add
sbb
testl
fbstp
or
xchg
sbb
mov
lods
in
ret
add
push
jb
inc
rorl
dec
ds
push
test
gs
cli
sbb
fimull
or
xor
or
push
and
dec
inc
rcr
mov
lods
out
xchg
mov
push
xlat
inc
cli
in
add
je
dec
fcmovnu
and
test
mov
das
mov
repnz
mov
out
js
adc
daa
mov
lods
rep
sbb
and
add
idivl
lock
pop
jae
rcrl
xchg
push
orb
lcall
add
xor
imul
loope
jns
push
jmp
dec
xchg
xchg
jbe
in
xor
jo
jbe
fdivs
sbb
inc
aas
data16
add
icebp
xor
jecxz
sbb
push
cs
sbb
es
xchg
xor
pushf
sub
rorl
mov
movsb
shl
cmp
xchg
outsl
adcl
ja
rclb
fisubl
cmp
pushf
dec
jne
loopne
mov
and
insb
adc
mov
lock
sub
repz
adc
lock
lret
inc
ljmp
mov
je
outsl
aam
ss
jp
in
lock
or
shl
fcmove
xchg
int
mov
mov
mov
cmp
in
stos
add
mov
andl
pop
test
cmp
rcrl
loopne
mov
out
lret
mov
jno
mov
mov
cs
leave
sbb
sbb
and
popa
int
nop
xor
jmp
or
cs
out
push
adc
mov
leave
ret
or
mov
ja
test
pop
mov
fst
xor
lds
sub
insl
dec
mov
or
nop
jecxz
in
inc
aas
mov
push
pop
int3
clc
pop
mov
mov
or
mov
lea
test
push
xchg
ficompl
mov
or
add
fs
rclb
fucom
ret
jnp
jnp
or
mov
movb
inc
sub
lock
or
mov
xchg
mov
stos
push
add
rorb
dec
sub
jne
inc
adc
jae
movsl
imul
into
and
call
pop
fbstp
pop
stc
repz
leave
push
sub
dec
movsl
xchg
and
jp
xor
and
jb
rol
test
aam
cmc
push
enter
loopne
mov
addr16
test
mov
scas
sbb
jle
rorb
test
shl
cltd
in
push
push
inc
jmp
fs
sbb
dec
loopne
jne
sbb
cmp
push
sub
loop
dec
ret
mov
xchg
cmc
jno
aaa
daa
cmpsb
rorl
or
std
mov
xor
and
sub
sub
negb
aaa
js
fwait
mov
push
addr16
sub
aaa
xlat
ret
or
or
cmp
jle
sti
jo
fcoms
jbe
sub
mov
or
add
sbb
push
cmp
mov
jp
inc
leave
loopne
leave
xor
push
or
push
clc
sbb
mov
jmp
push
mov
sbb
addr16
lcall
add
out
xor
inc
dec
lods
sbb
lahf
sub
dec
mov
sti
mov
fcom
ljmp
daa
add
add
shlb
xor
bound
add
mov
xor
sbb
bts
bswap
ljmp
push
dec
lret
repz
xor
leave
pop
in
mov
xchg
xchg
cli
sub
mov
mov
mov
cbtw
je
jecxz
mov
outsb
ret
lock
xor
loopne,pt
mov
cltd
fmulp
inc
adc
push
jno
cmp
fmull
mov
test
or
es
mov
pop
mov
push
mov
and
and
adcb
xor
sbb
popf
mov
pushf
jecxz
fsubs
pop
popa
bnd
ror
pop
gs
mov
xchg
xchg
in
jle
nop
scas
fxch
jae
jno
jb
repnz
inc
add
mov
dec
add
or
fistpll
xchg
xchg
jno
mov
leave
popf
and
call
push
push
push
mov
arpl
imul
xlat
sbb
mov
lcall
mov
pop
fs
cld
jl
jo,pn
dec
mov
sbb
xor
outsb
aad
and
out
push
js
dec
jg
jp
dec
icebp
call
dec
xchg
mov
jnp
popf
test
fldenv
fmuls
cmp
into
mov
xchg
cmp
inc
mov
shll
mov
mov
mov
lret
shl
sub
push
add
mov
fbstp
mov
out
imull
aas
cmp
loop
adc
mov
sub
and
mov
sbb
xor
int3
les
jnp
aas
aaa
cli
mov
xlat
cmp
mov
shll
roll
push
inc
cmp
xor
mov
lcall
jecxz
jp
xchg
nop
mov
add
mov
lods
dec
lahf
mov
dec
nop
inc
bound
dec
je
in
or
mov
dec
sahf
js
fs
cli
or
aaa
in
mov
call
push
shl
into
ret
negb
mov
sub
cmp
rolb
mov
mov
in
jnp
and
mov
nop
mov
out
sub
push
aaa
loop
mov
in
adc
mov
outsb
mov
lcall
add
push
ljmp
jecxz
fistpl
es
add
call
ja
outsl
bound
call
pop
jmp
aad
add
push
stos
sub
fdiv
xor
dec
push
jns
mov
xchg
push
pop
mov
mov
mov
dec
aam
sub
sti
imul
and
push
cli
push
fsubr
push
cmp
push
jno
push
sub
popf
xor
scas
adc
or
in
push
inc
push
inc
inc
lahf
faddl
mov
lret
ret
data16
das
nop
fcom
mov
stos
dec
sbbl
xchg
pop
divb
inc
cli
pop
cmp
test
int3
or
cmpl
pop
hlt
js
mov
bound
dec
push
dec
xchg
add
sbb
scas
mov
mov
jge
dec
sbb
rclb
and
sbbl
inc
xchg
iret
aaa
loopne
jl
int
xchg
lcall
dec
cld
addl
cs
xor
or
adc
into
fwait
fs
jmp
mov
mov
in
push
pop
adc
xchg
js
lods
push
sbbb
mov
pop
cmpsl
rcrl
jl
test
sahf
jnp
dec
mov
cmp
push
sbb
mov
dec
hlt
ret
cmpsl
adc
jo
pop
push
repz
add
add
les
sbb
sub
cmp
loope
outsl
push
sarl
sbb
xchg
es
or
into
jmp
mov
stos
aam
int3
cltd
mov
add
out
cmp
test
std
ret
in
and
jmp
mov
mov
popa
push
adc
stos
push
inc
out
sub
inc
mov
and
clc
int3
sbb
dec
aas
push
xchg
xchg
aas
xlat
push
adc
es
or
and
jmp
pop
testb
sbb
dec
mov
int3
mov
pop
jbe
call
add
xchg
dec
out
in
sti
xor
push
test
movsl
mov
lods
scas
imul
xchg
dec
jnp
and
mov
dec
pusha
cmpsb
dec
gs
xor
cmpb
xchg
sbb
or
xchg
iret
dec
cltd
jle
and
xor
sbbl
xor
mov
nop
lea
mov
ficomps
fwait
dec
adc
mov
pop
push
pop
jge
call
ret
sbb
inc
cmpsb
mov
cmp
mov
cli
dec
add
jg
adc
add
add
dec
sbb
outsl
xchg
push
jmp
xchg
pop
scas
cmp
icebp
xchg
test
out
shll
xchg
inc
test
insl
loop
inc
jmp
test
push
push
pop
ss
pop
lret
icebp
icebp
push
sbb
add
popa
punpcklbw
sbb
insb
test
adc
out
push
sti
xchg
into
cmp
add
pop
icebp
push
loop
stos
insb
adcb
das
or
xchg
sbbl
xchg
scas
push
xor
or
pop
cmpsb
fistps
inc
orl
es
fwait
cmp
adc
cmp
clc
test
rorl
dec
in
add
dec
mov
adc
fsubr
cmp
cwtl
sbb
aaa
add
dec
adc
pop
add
xchg
stos
adc
insb
psrlw
cmpsb
daa
xchg
sub
js
xchg
pop
fdivs
and
jne
push
mov
fistps
and
lock
addl
xor
aam
xor
ret
cmp
dec
pop
int3
jbe
sbb
adc
jge
shlb
std
jmp
jmp
inc
popa
jl
jae
adc
test
mov
sti
in
and
cmpsl
testl
test
cltd
or
sahf
mov
in
mov
cmp
mov
enter
outsb
test
aam
in
pop
sub
lret
and
std
jb
mov
pop
add
jp
jl
adc
jo
pop
outsb
and
jns
mov
out
xorb
mov
mov
nop
cmp
cs
xchg
push
sbb
shrb
aas
dec
push
dec
jg
mov
mov
cli
pminsw
xor
rorl
movsl
push
rorb
fimuls
push
inc
fcomi
movsl
faddl
jne
daa
xor
pop
push
leave
ret
inc
cmc
adc
pop
jmp
push
xorb
mov
fstps
and
scas
pop
aas
ss
push
mov
std
xchg
stc
mov
xchg
adc
mov
push
lret
addb
xor
push
jge
je
ja
adc
movsl
push
push
ja
mov
push
movsl
inc
or
mov
lock
or
lcall
loopne
orb
fwait
and
mov
mov
adc
xchg
pop
xchg
cmp
movl
cmovae
out
mov
sub
sub
sub
adc
test
sbb
push
jp
fnsave
ljmp
adc
das
leave
mov
negb
cmpb
fdivrl
mov
mov
add
loopne
int3
dec
outsb
adc
iret
dec
jb
sub
lret
xchg
sub
mov
or
ror
jne
push
sub
sub
mov
xor
lds
jnp
mov
movsb
out
sub
mov
xchg
inc
mov
inc
inc
mov
out
xchg
push
cwtl
jecxz
sbb
daa
insb
mov
cmpsb
daa
in
sub
pusha
in
jo
pusha
imul
or
dec
js
mov
dec
push
adc
jecxz
clc
mulb
movsb
push
insl
push
aam
insb
or
add
and
out
ss
sbb
ljmp
add
push
pushf
push
test
sub
ss
xchg
jmp
scas
inc
jmp
ljmp
xchg
add
aam
stos
stos
fwait
aam
bound
les
or
bound
ljmp
fidivs
es
cmpsl
push
push
fwait
test
gs
movsb
dec
stc
sbb
xchg
pop
jp
in
bound
and
repz
push
test
inc
movsb
mov
adc
in
stos
mov
cli
sub
dec
push
mov
stos
imul
nop
sub
or
sbb
mov
lds
jbe
xor
mov
cmpsl
in
mov
add
and
cmp
and
pop
fnstsw
into
iret
imul
sarl
scas
dec
sbb
aaa
mov
or
call
add
out
out
inc
cld
dec
out
ja
xchg
dec
jbe
xor
das
sub
jge
inc
add
sti
mov
rorb
pushf
cmpsb
mov
loope
and
mov
mov
int
jmp
mov
xor
inc
cmp
fldt
pushf
mov
imul
sub
mov
inc
pop
push
cmc
andb
int3
in
or
xchg
mov
mov
ret
ss
sub
add
mov
xchg
imul
mov
mov
pusha
cvtpi2ps
cmp
xchg
ljmp
fs
adc
addb
popa
pop
xor
adc
and
pop
rclb
add
out
mov
addb
push
and
push
push
movsb
adc
cmpl
cld
loop
adc
int3
lods
push
ds
aaa
ss
clc
mov
push
or
jl
adc
xacquire
ja
push
orl
mov
iret
in
mov
jno
push
sahf
xchg
nop
xchg
aam
sbb
sar
icebp
sub
sbb
mov
xor
cltd
or
or
cmp
jno
sbb
xchg
and
sbb
shl
imul
mov
sub
cmp
flds
aad
xor
and
or
not
mov
jle
xor
pop
das
pop
fsubrs
push
mov
cmp
mov
jle
cmc
pop
out
add
adc
mov
loope
ficoml
scas
adc
sub
mov
jmp
loope
test
jp
adc
xor
dec
shl
xchg
out
pop
xchg
nop
or
addr16
jo
mov
and
gs
pop
cmp
add
into
jmp
or
or
lds
aaa
fistpl
sub
xchg
dec
dec
sbb
mov
icebp
adc
ret
mov
mov
ja
sbbb
jg
adc
mov
in
fdiv
sub
popf
aam
sbb
sbb
push
es
hlt
inc
jbe
stc
and
or
add
jno
in
in
imul
inc
xchg
mov
loope
mov
insl
push
adc
lods
arpl
sbb
rcrb
jns
outsb
sub
jnp
pushf
test
aaa
mov
ficoml
push
aaa
mov
pop
call
cld
enter
lret
or
cmp
cli
sub
push
jno
cmc
push
mov
sar
mov
lock
inc
jmp
popa
push
xchg
and
xor
enter
das
inc
xor
cmp
jmp
data16
or
arpl
sub
outsl
fimull
cmp
fucomip
inc
jne
adc
sbb
int
and
push
aaa
scas
clc
ret
cmp
jle
dec
enter
inc
jecxz
repz
xchg
std
sbb
fs
push
cmp
ds
mov
dec
clc
outsb
fildl
sarl
notb
bound
outsb
adcl
outsb
adc
outsb
sbb
cltd
scas
out
cmp
cltd
fidivrl
and
pop
pop
or
fcomip
dec
lret
ds
imulb
xor
out
bndstx
fs
loopne
scas
and
push
je
jmp
mov
ret
mov
sbb
in
cmp
push
arpl
mov
cmp
subb
pop
enter
mov
fisubrl
pushf
cmc
mov
iret
scas
cmpsb
out
lahf
test
mov
cmp
xor
mov
mov
loopne
imul
xlat
sbb
sub
jg
add
pop
std
es
adc
lea
test
lcall
test
pop
int3
insb
sbb
movsl
subl
mov
jo
push
mov
repz
push
subb
or
jo
mov
daa
shl
popf
fwait
adc
addl
dec
sub
aaa
xchg
mov
test
xor
sub
aaa
push
push
repnz
push
out
push
add
scas
jl
jmp
dec
jmp
mov
push
pusha
cmp
das
mov
stos
sahf
dec
ja
push
std
enter
cmp
and
xor
ljmpw
iret
sahf
xor
in
nopl
mov
test
imul
sbb
decl
mov
mulb
sub
imul
push
fsubrl
push
sub
jg
daa
or
pushf
ror
pop
scas
test
out
lods
ljmp
fs
adc
scas
xlat
cs
pop
jge
jae
add
sub
shll
ljmp
mov
inc
jo
aad
leave
cmpsl
or
push
in
jbe
hlt
shlb
add
popa
jecxz
jns
mov
ljmp
imull
subl
in
pop
push
fimuls
gs
sahf
and
insb
mov
stc
in
bound
mov
dec
popa
sub
iret
leave
xchg
jb
mov
jle
in
sbb
jbe
fsubs
lahf
js
push
stos
push
lcall
cs
sbb
jbe
inc
xchg
cmc
andl
pop
ljmp
shl
and
or
in
aas
aas
jns
scas
jecxz
xor
insb
fdivrl
lret
test
int3
jo
mov
push
sub
mov
mov
int
sarl
les
in
push
jns
sbb
jl
imul
movsb
test
xlat
daa
enter
bound
out
imul
adc
mov
bound
push
fs
mov
dec
lods
sbb
outsb
testb
leave
sbb
rcr
movsb
aam
mov
mov
pop
xchg
dec
fmul
out
ja
cmpsl
cwtl
sub
or
cmp
icebp
enter
pop
xchg
filds
and
fimull
xchg
addr16
sahf
or
jmp
jo
aad
aaa
jnp
push
sbb
xorl
cltd
xchg
jmp
lods
ja
pop
and
xchg
xchg
or
xchg
xlat
icebp
gs
xor
dec
lret
popa
mov
pop
insl
push
sub
cmp
inc
popf
std
out
dec
push
out
cmp
mulb
lds
and
cmc
test
data16
cmp
std
jno
jbe
mov
dec
lds
and
hlt
int
addr16
jecxz
sbb
cmp
mov
pop
shl
and
dec
rclb
xchg
xor
xchg
add
shr
lahf
mov
pop
inc
cs
call
into
fs
jnp
mov
cmp
push
cmp
adcb
ret
ficoml
jns
mull
jbe
add
and
mov
loope
shlb
leave
cmc
and
jge
sub
je
outsl
cmp
mov
sahf
aam
mov
adc
fwait
cmpsb
fnstcw
xor
mov
shlb
stos
lcall
fmul
out
iret
xchg
cmp
adc
pop
stos
push
push
imul
hlt
pop
rorl
pop
out
test
and
repnz
clc
bound
insw
outsb
outsb
in
add
xor
pop
and
adc
mov
stc
dec
in
sbb
add
sub
fnsave
cmp
cmp
popf
clc
dec
pusha
mov
insl
mov
mov
ljmp
aaa
push
sarb
add
jmp
cmpsl
das
dec
dec
in
mov
lods
xchg
imul
mov
push
dec
sub
test
test
fsts
leave
enter
rcr
cs
scas
cltd
pop
std
inc
hlt
dec
jecxz
lods
dec
addl
fstpt
filds
lcall
lock
aaa
cltd
adc
fbstp
mov
or
push
lea
xor
lea
inc
movsb
pop
test
das
mov
cmpsb
lahf
nop
pop
or
dec
aad
loopne
jg
out
test
push
cmp
fwait
mov
das
mov
sarb
lock
out
ja
inc
xlat
clc
into
xchg
adc
orb
sbb
test
jb
idivb
cmp
std
or
sub
xor
mov
out
sbb
jl
insb
pop
insl
mov
push
sbb
fs
and
pusha
int3
loop
test
xorl
cmpsl
fidivrs
push
addb
stos
pop
addl
push
outsl
push
push
mul
std
xchg
insl
dec
call
fs
cli
rclb
mov
insb
scas
mov
ljmp
inc
repnz
sbb
adc
pop
and
and
leave
lock
fcom
test
mov
xchg
jp
xchg
cmp
in
mov
mov
jno
xlat
pop
mov
pop
clc
xchg
faddp
lcall
pusha
mov
push
faddl
dec
fidivl
in
dec
jno
pop
gs
mov
stos
test
inc
data16
in
shll
add
adc
sbb
sub
fidivl
push
jg
adc
andl
push
aad
mov
mov
adc
shll
or
stos
pop
dec
pop
mov
xor
xor
mov
and
jnp
adc
es
mov
push
shr
movsl
cltd
xor
punpcklbw
popf
ljmp
insb
inc
mov
or
cltd
mov
jmp
clc
dec
or
xchg
es
gs
ret
fwait
and
icebp
aam
jo
add
inc
xchg
dec
jb
fiaddl
pop
leavew
and
cmp
pop
outsb
mov
sub
push
adc
inc
divl
in
and
roll
sti
adc
sbb
push
sbb
es
mov
mov
push
or
test
mov
sbb
outsb
insl
jmp
lds
repz
int
jecxz
dec
gs
ds
or
and
fidivs
in
pusha
mov
aam
or
loop
enter
mov
mov
fildll
xchg
push
fnsave
shl
mov
xchg
xchg
add
inc
xchg
cmp
sbb
out
insb
mov
mov
mov
pusha
mov
lret
pop
loope
ret
cwtl
loopne
mov
cmp
adc
imul
pusha
or
mov
loopne
mov
xchg
pop
dec
cmp
sub
push
mov
mov
jecxz
dec
xor
sbb
fwait
addr16
push
jle
rcl
mov
dec
cmp
xor
adc
int
xor
je
hlt
or
daa
movsb
mov
add
sahf
cmp
outsb
sub
outsb
mov
push
add
in
aad
dec
push
loop
int
add
push
or
iret
and
subb
push
sahf
leave
mov
sub
xchg
xchg
push
ds
pop
jp
frstor
movsl
cmp
jg
xchg
cmp
ljmp
fwait
dec
inc
test
cld
mov
repnz
push
pop
ret
xor
sbb
sbb
xchg
in
and
sbb
adc
mov
push
enter
xlat
jl
cmp
cli
mov
or
test
mov
mov
xchg
scas
mov
mov
adcb
movsb
cmpsl
in
add
push
out
int
cs
add
lods
dec
es
jp
inc
xchg
in
cs
mov
add
inc
mov
xor
in
push
daa
addb
inc
sti
cmp
sbb
cmp
rclb
sarb
jno
mov
adc
push
test
sahf
into
add
pop
insl
cmp
gs
add
pusha
pop
add
lret
pop
jecxz
mov
dec
pop
iret
aas
jno
popf
or
xchg
dec
adc
cld
je
push
repz
clc
pop
mov
movsb
jmp
mov
cmpsl
lods
aaa
push
stc
cltd
scas
ja
or
and
fsubl
je
sbb
push
addr16
and
out
xorb
sub
xor
dec
or
xorb
sti
int
ss
popa
sti
or
adc
and
call
jle
daa
mov
push
inc
mov
sbb
lods
and
sbb
iret
xor
sub
pop
push
pop
pop
xchg
cmp
fs
movsb
cld
pop
pop
mov
jae
mov
inc
mov
pop
out
sub
jp
push
adc
lcall
daa
std
outsl
sbb
push
mov
mov
mov
xor
push
repz
mov
xor
mov
lods
xor
dec
lret
roll
ret
xor
in
push
test
in
or
idivl
loop
mov
ja
xchg
cmp
lods
pop
jmp
fs
por
mov
sarb
leave
nop
icebp
insb
cmp
rolb
inc
push
vhaddps
loop
andb
js
push
dec
dec
adc
int3
jl
jle
sub
insb
mov
andb
xchg
sub
mov
pop
and
adc
dec
pop
xchg
add
dec
outsl
pop
adc
test
adc
cmp
fmull
sub
inc
lahf
ret
and
lret
pop
and
mov
out
adc
punpckldq
pop
sub
lock
shrb
ljmp
lds
fwait
sbb
pop
notl
sub
stc
mov
cmp
mov
lods
or
in
sbb
pop
lret
in
addr16
repnz
push
in
xchg
lea
mov
fldt
loop
into
xor
dec
test
out
push
std
scas
lock
into
xor
sub
mov
pop
xor
jo
mov
dec
adc
xchg
in
ds
clc
xchg
xchg
popf
out
stos
push
out
push
add
lds
popa
stos
mov
ret
loopne
lods
test
push
addr16
mov
jg
inc
cmp
xorl
and
jo
dec
push
pop
lcall
in
add
adc
cmp
imul
popf
lods
pop
pop
push
notb
mov
pop
fldl
adc
ljmp
xchg
gs
cmp
fnstcw
test
dec
shr
pop
push
and
outsl
cmp
into
mov
les
mov
cmpsb
shll
add
mov
cld
mov
mov
dec
mov
dec
imul
shll
xchg
insb
sti
mov
test
jbe
jae
loopne
stc
jno
and
data16
leave
out
in
jmp
mov
lds
lods
stos
cmc
dec
jae
and
test
push
cs
cmp
dec
nop
pop
lcall
xchg
mov
and
pop
add
cmp
inc
rolb
sets
stos
mov
out
jb
mov
cmpsl
fwait
jo
sbb
movsl
sbb
push
mov
adc
loopne
mov
mov
inc
out
xor
enter
mov
ja
dec
mov
xchg
pop
ss
mov
stc
xor
xor
icebp
add
add
xor
jnp
js
ficomps
sbb
mov
cmc
mov
jae
call
dec
mov
repz
dec
and
xchg
insl
in
fbstp
add
outsb
xchg
rcll
ret
mov
sbb
enter
and
mov
ror
jae
arpl
in
roll
mov
pop
scas
les
outsb
push
popf
push
cwtl
mov
mov
mov
cli
xchg
lock
std
or
jno
in
in
jp
negl
les
mov
adc
test
mov
or
push
cld
pop
adc
jns
pop
enter
mov
adc
fsts
mov
imul
leave
mov
sub
in
daa
jnp
sub
inc
and
adc
xorl
inc
sbb
int3
rol
and
mov
and
fsts
cli
add
pushf
xor
push
jp
push
addr16
into
mov
cmp
mov
mov
negb
das
mov
fsubr
fisubrl
cmpl
aas
dec
inc
jae
jl
cltd
dec
in
inc
pop
add
repnz
ror
pop
jo
jnp
into
int3
repnz
mov
pop
xchg
add
push
add
adc
mov
in
imul
rorb
mov
dec
data16
decl
xor
cmpsl
ljmp
outsl
mov
int3
insb
xchg
das
sbbb
cmp
mov
stos
fidivs
cs
mov
in
xchg
pushf
add
xchg
mov
ret
daa
jae
addl
clc
push
cmp
xchg
sub
lcall
jne
ret
sbb
lods
jecxz
jbe
dec
xor
lahf
xor
sbb
inc
lods
nop/reserved
rolb
lods
mov
mov
xor
mov
loope
inc
push
xchg
cmpsl
lret
inc
fdivs
pusha
out
push
dec
jb
dec
and
hlt
pusha
in
sahf
mov
and
dec
mov
lods
lahf
dec
mov
std
pop
and
xchg
pop
imul
outsb
jmp
cmp
xchg
mov
ret
lret
cli
jne
lret
fsub
es
ljmp
sbb
in
mov
popf
mov
and
lret
shl
xchg
xchg
add
int
mov
test
inc
aaa
int
cmpsl
push
mov
shrb
mov
outsl
sbb
mov
and
or
jg
xor
sbb
call
ficoms
js
sti
xor
add
mull
xchg
inc
mov
mov
mov
mov
inc
scas
cwtl
xor
xchg
jge
scas
xor
push
leave
fwait
out
iret
dec
inc
mov
jae
cwtl
mov
cmpsb
pop
xchg
shrl
pop
mov
or
mov
cmp
or
jp
add
fcmovne
adc
shll
jno
les
movsb
push
in
mov
mov
cwtl
loop
xor
cmp
shll
adc
dec
test
dec
int3
mov
push
add
push
mov
in
jecxz
loop
and
movsb
es
into
lahf
lds
imul
cmpsl
cmp
test
xor
dec
mov
xor
es
jge
shl
lods
push
xchg
cltd
dec
and
dec
in
add
add
inc
loop
xor
push
and
int3
test
or
fistpll
xchg
xchg
int3
xchg
dec
fnstsw
push
add
and
subl
inc
lock
adc
daa
mov
addr16
imul
popf
rorl
xor
lret
push
push
rcll
xlat
out
addb
test
sbbb
xchg
mov
pop
inc
cmp
mov
and
push
mov
ret
cltd
lock
pop
rorl
push
push
cs
mov
and
jb
outsb
out
inc
mov
jp
ret
movsb
in
xchg
jb
sbbb
loope
mov
daa
bound
xlat
jns
arpl
addr16
jecxz
sbb
mov
dec
cmpsl
mov
sbb
push
adc
das
sbb
movb
or
cs
outsl
subb
mov
or
shll
push
mov
xorb
and
cmc
xchg
mov
mov
daa
xchg
mov
mov
data16
leave
rorb
int
xor
fstp
cmpsl
add
xor
adc
cwtl
mov
sub
push
cltd
jmp
imul
jns
arpl
jl
jns
xchg
or
sahf
movsb
icebp
pop
fs
adc
clc
clc
lret
xor
mov
arpl
cli
sub
jns
enter
mov
inc
fwait
add
out
cmc
sarb
mov
int
fs
and
fistpll
cli
inc
adc
sbb
test
adc
enter
insb
mov
mov
scas
dec
xchg
fwait
bound
lret
push
mov
sbb
test
mov
push
xor
push
cs
popa
mov
sub
jle
sub
adc
outsl
aaa
mov
jb
xlat
imul
xor
pop
cmp
add
int
adc
dec
adc
cmp
in
pop
push
clc
sbbb
mov
fs
xor
cld
push
pop
cmp
test
cmp
dec
adc
xchg
xor
imul
cs
mov
mov
inc
add
xchg
or
dec
and
loope
dec
in
push
adc
push
push
push
jno
pop
xor
or
mov
and
jge
out
mov
mov
enter
sbb
jecxz
inc
ficoml
jp
mov
sub
pop
sbb
xchg
nop
pop
or
push
mov
bswap
call
dec
scas
push
adc
jp
movsb
out
jo
or
xchg
icebp
in
jl
sahf
pop
jg
pusha
or
cmpsl
adc
jp
mov
enter
arpl
loope
xor
adc
fs
adc
adc
xor
adc
jns,pt
cmp
aad
xchg
sahf
dec
mov
push
dec
push
add
cmp
stos
popa
imul
outsb
jns
cs
rcll
enter
dec
fsub
insl
test
popf
push
stos
cmp
rcrl
pop
cmp
insb
pusha
scas
lcall
sbb
mov
mov
cmc
xchg
ret
ds
cmpsl
scas
sbb
mov
rolb
xchg
lcall
push
std
out
jae
push
inc
iret
popa
out
push
jbe
dec
rcr
aaa
cs
xchg
jbe
out
ss
aas
test
icebp
pop
int3
int3
pop
repnz
inc
jnp
cmp
or
les
lcall
add
leave
sbb
pop
lock
dec
pop
lods
mov
into
jae
push
or
mull
mov
jge
test
push
popf
aad
mov
dec
mov
adc
sub
mov
adc
pusha
into
fsubr
xchg
cli
or
stos
ss
pop
mov
out
xor
hlt
add
popa
xor
es
push
fistps
ret
mov
loop
or
out
cmp
xchg
jl
jmp
lcall
shl
mov
pushf
std
in
inc
imul
es
jecxz
outsl
sahf
cmp
adc
adc
ja
pop
loopne
std
mov
and
scas
mov
lahf
test
inc
mov
cmp
push
push
xchg
dec
jmp
test
test
jle
scas
nop
int3
jp
outsb
je
lods
in
loop
dec
mov
xor
aaa
rorb
jmp
xor
or
cmp
push
push
xchg
and
cwtl
out
fadd
ja
mov
clc
add
push
imulb
jbe
mov
shr
mov
add
push
push
push
xchg
push
sbb
sub
or
jge
sti
fs
ret
loopne
sub
and
lods
out
ret
or
inc
lahf
mov
pop
push
inc
arpl
mov
or
repnz
dec
mov
sbb
inc
adc
les
sub
mov
adc
fbstp
lock
sbb
cmp
pushf
jae
outsb
fbstp
fcomps
sbb
pop
out
scas
lahf
outsb
into
imul
mov
cmp
fsubr
pop
sbb
cli
das
jle
test
jne
sbb
out
sbb
pop
movsl
and
cwtl
inc
ret
dec
xchg
jg
push
mov
add
mov
imull
sub
outsb
xchg
cld
inc
sti
ss
jp
in
loope
dec
push
push
xchg
sub
push
mov
push
add
jl
mov
lret
les
in
out
fcompl
popf
iret
pop
out
mov
dec
pop
gs
mov
cltd
ja
jle
dec
cs
push
push
popa
test
enter
lock
mov
ss
add
xor
movsl
pop
xor
ja
xchg
shrl
movsb
adc
mov
into
dec
arpl
stos
loop
cmp
adc
clc
sub
or
or
or
mov
enter
or
jo
cmpsl
sbb
subb
es
dec
sbb
sbb
into
je
jp
in
push
push
je
jmp
mov
xchg
pop
and
jmp
repz
jmp
jnp
lds
xor
movsb
jmp
sub
ficoml
loopne
or
daa
inc
loopne
xor
mov
arpl
mov
pop
inc
cltd
or
adc
in
sub
sbb
dec
xlat
sbb
arpl
add
out
pop
mov
mov
mov
rcrb
push
fincstp
daa
lods
mov
pop
push
jp
or
xchg
scas
outsl
fldl
cmpsl
aas
mov
lahf
ss
mov
movsl
mov
lcall
aam
xor
je
xor
add
lods
jg
sahf
testb
adc
inc
lcall
out
sti
in
repnz
xchg
iret
sub
dec
inc
adc
imul
mov
stos
les
pop
cmp
xor
and
pop
push
pop
mov
in
fdivp
and
sub
cltd
iret
nop
in
aad
dec
pusha
ret
insl
fists
jne
add
add
sti
lret
call
sub
jno
and
dec
ds
leave
fdivrp
lea
movsl
jg
loop
pop
call
pop
add
push
clc
push
cmp
inc
call
cld
sbb
ss
adc
inc
push
mov
xchg
jmp
cli
jecxz
rorl
mov
rolb
mov
or
flds
sti
loop
xchg
rorl
and
sub
fcomps
add
mov
stos
mov
jno
xchg
dec
and
add
push
sbb
dec
jmp
inc
dec
mov
int
add
jo
out
cmp
or
fsubs
shlb
jecxz
push
push
rcr
outsl
mov
push
pushf
lret
aas
test
lret
xchg
push
pop
and
out
sbb
pop
xchg
sbb
pop
jns
mov
mov
sub
xor
insb
or
leave
loope
test
jp
std
arpl
orb
pop
jmp
cs
pop
cmpsl
fsubrl
mov
int
bound
cmp
mov
pop
mov
xchg
gs
and
lcall
mov
or
sub
daa
in
mov
pop
ret
std
popf
mov
push
jae
ds
mov
sub
movsl
pop
pop
jmp
jmp
inc
jae
rcrb
xor
std
mov
sarb
push
xchg
in
pop
daa
mov
arpl
dec
dec
call
scas
mov
inc
pop
jnp
lret
lret
cmc
out
sub
cmp
ret
iret
pop
ss
data16
jmp
adcb
cmpsb
je
insl
vpminsw
aam
clc
mov
das
cmpsl
in
addb
cmpsl
push
or
lret
mov
je
mov
sub
test
mov
fimull
inc
xor
out
sub
icebp
xchg
gs
mov
cmp
ret
in
test
jae
repz
pop
std
push
jno
in
mov
mov
push
fwait
lock
push
xlat
push
lock
fistl
mov
iret
sub
imul
out
mov
cli
out
stos
jno
nop
insb
sbb
sub
mov
psubq
js
hlt
repnz
mov
incb
pop
push
pop
es
mov
mov
mov
in
cmpsl
shll
cmpb
adc
mov
jle
dec
pop
push
imul
ss
pusha
or
call
adc
push
push
ljmp
inc
mov
addr16
sub
inc
xor
and
jge
clc
outsb
mov
incb
sbb
add
fildll
imul
jg
push
push
pop
out
shll
je
mov
popf
or
in
scas
xchg
repz
clc
sti
push
sbbb
pusha
das
cmp
jmp
movb
sti
or
xor
sbb
insl
dec
loop
xor
jnp
and
das
adc
jne
xchg
sbb
and
and
addr16
movsl
push
mov
popf
scas
mov
arpl
and
mov
pop
cmp
mov
mov
push
ljmp
icebp
xchg
mov
jne
or
fisttpl
incb
or
movsl
push
data16
push
mov
addl
and
test
clc
in
ja
jnp
pop
cmp
mov
insb
cmc
cmpsb
insb
notl
addr16
xchg
jge
pop
mov
sahf
xor
sbb
mov
outsl
call
or
les
in
and
adc
das
bound
push
or
pusha
mov
cmpsb
push
jg
outsb
mov
popf
pushl
fnsave
or
jb
popf
cld
jne
mov
fwait
jle
cld
xchg
aas
inc
mov
pushf
xlat
add
mov
and
imul
jb
jae
jnp
ds
iret
pusha
xor
pop
pusha
jp
mov
or
pop
xor
mov
jnp
xor
push
jb
mov
dec
fildl
xor
out
std
ljmp
sbb
inc
xlat
or
add
sub
cmp
pop
sub
cld
cmp
lcall
cmp
mov
ss
ret
insb
fndisi(8087
inc
mov
mov
aam
shlb
mov
jnp
ja
sbb
ret
cmp
mov
pushl
js
fcomi
jns
popf
inc
adc
es
fisttps
test
xorl
push
and
ret
jl
lahf
jno
stc
fstpt
mov
scas
aad
fimuls
sub
mov
xor
fiadds
dec
je
mov
rcrb
out
dec
in
xchg
cld
mov
push
bound
xchg
ror
cmp
lret
filds
sbb
add
gs
dec
sub
jnp
cmp
push
mov
subb
cs
mov
call
mov
std
dec
loop
inc
jae
push
arpl
loop
pop
shr
mov
jge
aaa
push
and
sub
ret
popa
cli
dec
sub
test
sub
add
adc
push
aaa
mov
or
into
ljmp
adc
jns
pop
add
and
cmp
and
inc
lcall
bound
lcall
les
loopne
xor
sub
subb
cmp
jp
mov
fcmovnbe
sub
dec
pop
pop
iret
les
in
push
daa
in
inc
inc
lock
mov
jns
add
pop
push
sbb
inc
sbb
jno
cmp
push
lret
cwtl
stos
fwait
adc
sub
xor
cli
cli
pushl
jns
mov
pop
loope
lods
push
ds
dec
addb
mov
outsb
dec
push
daa
addr16
push
sub
mov
shrl
je
in
xor
idivb
push
inc
xor
loopne
lods
xor
xchg
cmp
jne
es
stos
push
cmpsl
jbe
xchg
xor
repnz
jne
jg
in
push
push
xchg
and
mov
js
je
test
out
mov
mov
daa
movsb
jae
sub
mov
add
cld
sahf
not
push
inc
jae
add
int
pushf
adc
ljmp
cs
addr16
mov
add
inc
leave
and
pusha
mov
scas
push
leave
inc
push
sbb
sbb
pop
jg
push
cmp
lahf
jne
sub
rorb
or
mov
rorb
dec
lods
imul
pop
and
jp
sub
ret
cld
mov
mov
xor
mov
popf
lcall
mov
mov
mov
sahf
fstpl
cmp
xchg
xor
fsubl
outsl
out
sti
add
es
lcall
loope
out
lret
xor
push
inc
popf
jb
xor
pop
sbb
pop
pop
mov
lds
adc
cwtl
out
inc
sbb
push
sbb
jbe
fcomip
cmp
insb
mov
jb
es
enter
sub
das
pushl
jg
jge
jge
dec
scas
cmpsl
pop
cwtl
iret
popf
mov
jae
or
out
out
xorb
pop
cmp
aas
xlat
outsb
sub
pop
sbb
xchg
outsb
ds
and
or
mov
jmp
push
sbb
sbb
add
inc
jg
insl
dec
mov
push
pop
pop
ret
ret
cmpsb
movsb
sub
jg
movsb
mov
icebp
inc
or
xor
popa
sbb
push
mov
mov
outsl
pop
imul
push
sbb
test
dec
xchg
jge
popa
fmul
mul
rcll
dec
jle
inc
inc
test
jno
stos
jns
movsb
pop
jne
jb
fstl
ficoml
jmp
adc
subl
add
call
mov
sbb
addr16
sti
push
rolb
fwait
mov
imul
ret
imul
jbe
call
mov
mov
test
sbb
sbb
leave
push
sbb
orb
inc
and
std
sub
adc
xor
sub
or
mov
sub
mov
add
mov
out
cmc
rcrl
and
cwtl
lods
dec
cmp
aaa
scas
lods
jge
jbe
ret
cmpl
call
mov
into
inc
popf
mov
mov
cs
mov
inc
mov
idivl
aas
add
fidivrl
add
pop
ss
xchg
rcll
dec
jae
and
iret
testb
lods
mov
into
in
add
nop
dec
les
mov
sti
lods
pop
mov
adc
shll
fs
mov
das
sbb
mov
int3
pusha
out
or
xchg
and
lret
and
imul
fldl
aaa
pop
add
xlat
repz
sbb
test
mov
add
mov
fisttps
jl
sbb
cmp
push
mov
icebp
mov
fmull
mov
cwtl
push
jmp
or
dec
dec
scas
mov
stc
inc
jle
mov
into
dec
xor
push
adc
inc
adc
lods
icebp
sti
push
xor
jecxz
cld
ja
and
icebp
pusha
cld
sbb
push
lea
or
mov
dec
jecxz
das
insl
inc
and
push
into
or
sub
add
into
fwait
mov
or
pop
cmp
imul
jle
mov
icebp
addl
cmc
mov
fdivr
mov
pop
jle
fsubrs
shrb
dec
adc
cmp
xchg
cmp
mov
int
adc
scas
mov
cwtl
test
repz
or
nop
add
cmpl
dec
dec
into
and
mov
inc
mov
jnp
sub
pop
or
adc
push
cli
fnstsw
out
daa
sbb
imull
adc
lock
aam
stos
xor
pusha
test
loope
inc
jecxz
push
sbb
pop
dec
mov
jnp
cmp
pop
adc
push
push
lea
clc
xchg
mov
imul
push
mov
push
cmp
sub
popa
push
xor
pop
xchg
insb
adc
pop
push
jmp
in
or
cmp
popa
std
xor
sub
mov
dec
js
pop
in
nop
cltd
lret
sbb
lods
inc
rcll
jg
shlb
mov
fdivrl
dec
pop
iret
mov
push
pusha
mov
push
sahf
xchg
mov
shl
incb
loope
fcomps
repnz
cmp
pop
cmp
std
daa
dec
stos
cmp
push
shll
leave
shll
cs
into
xor
iret
lret
dec
int3
shr
mov
jae
mov
pop
mov
inc
jne
cwtl
xor
nop
mov
pushf
femms
pop
mov
xor
mov
bound
dec
push
jge
stos
fcoml
pop
or
gs
inc
lods
xor
popl
sbb
pop
movsb
lea
stos
add
lods
loopne
pop
iret
and
adc
mov
into
mov
dec
mov
lret
jmp
xchg
pop
pop
or
enter
rclb
jns
fldcw
out
pop
dec
or
jo
xor
aaa
pusha
insb
daa
in
or
loopne
stos
cmp
push
mov
repnz
xchg
jns
outsb
mov
fsts
or
dec
cmp
shlb
push
loopne
xor
femms
inc
pop
gs
mov
pop
add
push
out
inc
sbb
imul
popa
xor
cmp
mov
sbb
sub
jbe
test
pop
jbe
pop
push
hlt
jb
mov
xor
jl
jmp
and
scas
pop
mov
into
push
cmpsl
xchg
hlt
add
pusha
dec
rcrl
into
out
loop
push
sub
pusha
stos
incl
scas
mov
mov
nop
aam
sub
xor
sub
sub
dec
aad
ja
stos
add
xchg
sub
je
cmp
mov
inc
add
aas
cmpsl
jp
sbb
les
xlat
push
jmp
or
aaa
sbb
mov
nop
popa
aam
xlat
fiaddl
mov
xchg
rclb
mov
pop
pop
fwait
loope
stos
scas
cwtl
inc
xchg
gs
xchg
inc
mov
sbb
push
xchg
aad
adc
fwait
xchg
loopne
mov
mov
nop
stos
dec
cmpb
dec
push
and
lahf
cli
mov
adc
inc
dec
push
int3
adc
jp
mov
jmp
dec
pop
lret
std
ss
dec
push
mov
mov
outsb
mov
xlat
ret
add
aam
popf
addr16
test
scas
mov
lret
fdiv
cmp
in
push
mov
into
xchg
repz
sahf
push
dec
xchg
js
dec
mov
aaa
push
xlat
leave
addl
fs
bound
punpcklbw
pop
pushf
cmp
daa
cmp
ret
pushf
jnp
cmp
arpl
pop
les
jle
cmp
ljmp
pop
push
std
pop
mov
cmp
jbe
mov
add
stos
adc
imul
inc
das
inc
xlat
fldenv
adcb
add
aad
pop
mov
jne
dec
inc
or
xchg
adc
loope
and
add
and
int3
cwtl
push
and
loop
lret
enter
repz
jae
mov
scas
push
imulb
shlb
jle
les
push
push
adc
lret
mov
rclb
insl
cmp
in
mov
lret
adc
sub
fistpll
lds
ljmp
fistps
gs
sub
inc
stos
andb
outsl
and
stc
xorb
inc
push
testl
arpl
push
test
faddl
repz
arpl
out
lret
mov
and
inc
xor
push
push
call
sar
and
and
add
popa
jecxz
out
nop
lcall
movsl
mov
mov
sti
fldl
sti
fadd
mov
push
sub
inc
xor
inc
jb
push
pop
loope
aas
add
cmpsl
out
pop
ret
hlt
jmp
xchg
in
lret
sbb
add
sub
or
and
sbb
push
xor
popf
jmp
pop
push
fstpt
mov
xchg
popf
mov
shll
inc
mov
push
inc
or
gs
inc
out
inc
inc
addb
rcrl
adc
in
xchg
outsb
inc
sub
sahf
in
inc
jl
fdivs
ss
jg
adc
sti
out
jb
mov
add
daa
orl
cwtl
xchg
pop
pop
push
aam
add
xchg
push
adc
inc
sbb
dec
jle
sub
xchg
cmc
aad
inc
nop
inc
xchg
xchg
rcrl
xchg
jns
aas
imul
dec
ficoms
or
pop
pop
sub
loop
sbb
cli
lock
icebp
push
inc
and
test
push
push
mov
push
jecxz
addr16
aas
sub
aas
pop
mov
sub
fwait
mov
and
lcall
and
in
incl
ja
inc
pushf
jbe
sbb
lock
xor
xchg
mov
addr16
sarl
stc
xor
cmp
and
das
xor
mov
pop
dec
lds
and
cmc
icebp
sbb
pop
sbb
pop
inc
dec
cli
stos
sbb
jge
and
and
sub
in
mov
das
int3
push
movsb
adc
push
lods
es
test
cwtl
cmp
and
ds
ds
sbb
daa
cltd
daa
jl
fnstenv
loope
and
mov
jbe
and
imul
fsts
xchg
adc
imul
push
pusha
xor
and
cmp
mov
push
jle
add
arpl
insl
jne
xor
dec
daa
sbb
push
bound
cli
cmp
fs
sti
shrl
fwait
dec
arpl
and
fsubrs
inc
in
loop
shlb
jl
rorb
insl
pushf
addl
sub
push
insb
fistl
aas
arpl
addb
xchg
jnp
push
in
leave
add
mov
mov
push
cli
xor
xchg
int
xlat
sbb
mov
push
pusha
pushf
cltd
or
mov
jns
mov
lcall
push
xchg
dec
add
repnz
pop
loop
fnop
mov
jne
in
push
or
pop
lret
loop
loop
fisttpl
adc
sub
cmp
cs
mov
mov
dec
dec
mov
retw
adc
inc
pop
add
dec
inc
push
lds
cmpsl
lods
push
adc
lods
push
dec
mov
mov
mov
xchg
ss
jecxz
lock
dec
adc
popa
xor
mov
adc
repnz
sub
inc
add
xchg
or
ret
pop
js
je
add
nop
xchg
arpl
sbb
int
push
js
jg
push
cmpsb
jae
test
push
aad
mov
pop
jb
or
jns
mov
lahf
mull
aas
jmp
push
and
mov
clc
sbb
cmp
enter
xchg
stc
adc
mov
or
inc
imul
jno
leave
push
lods
push
mov
jo
out
out
pop
cld
push
sub
testl
and
loope
jmp
pop
adc
add
xchg
out
add
mov
out
aas
mov
sub
arpl
add
push
das
adc
push
arpl
jno
orb
pop
aam
mov
ss
dec
into
mov
mov
mov
nop
das
aad
jmp
adc
nop
sahf
mov
pop
das
std
scas
mov
notb
iret
mov
xor
sub
sbb
add
and
cwtl
and
or
push
mov
lods
pop
add
pop
arpl
fcoml
sub
xchg
es
dec
dec
icebp
jl
lahf
lcall
cmp
pop
into
xor
add
cmpsb
outsl
push
fs
inc
cmp
lods
sbbb
stos
adc
lods
xchg
cmp
les
jae
insl
movsl
mov
fildl
mov
cmpsb
dec
loope
or
lahf
cmpl
push
mov
jp
inc
outsb
movsl
xchg
movb
mov
gs
mov
jnp
loopne
pop
lods
imul
lea
xchg
push
push
pop
out
xchg
dec
inc
push
das
pusha
and
lds
inc
mov
sub
mov
or
ss
cld
dec
cmpsl
movsb
mov
inc
dec
cmc
adc
push
loopne
add
out
sti
je
in
pop
push
pop
mov
jae
gs
sbb
bound
inc
or
push
fs
shrb
ret
roll
sbb
sahf
jno
out
add
inc
mov
xchg
js
jno
testb
pop
insb
jmp
clc
cmp
mov
pushf
lock
add
mov
or
lret
ret
mov
push
pop
in
adc
lcall
push
xchg
mov
dec
lahf
dec
lahf
jp
add
pop
inc
aas
pop
mov
outsl
xchg
ret
pusha
shlb
aaa
adc
jbe
mov
mov
jp
mov
imul
jno
daa
ljmp
mov
dec
or
add
ret
es
pop
xchg
iret
aam
sub
mov
sbb
or
fadds
fsubr
xchg
es
pop
fsubrp
mov
pop
cmp
lock
aaa
in
mov
cmp
enter
cmc
sbb
addr16
pop
mov
movsl
out
lret
mov
das
fsts
js
test
pop
shrl
cld
cld
lcall
popa
rclb
sbb
cmp
loop
mov
ss
les
jl
inc
orb
adc
in
lods
iret
test
mov
notl
xchg
jp,pn
sbb
gs
sub
sbb
jle
into
xor
sbb
mov
ja
popf
xchg
ja
push
mov
dec
aaa
xor
je
icebp
dec
fs
es
arpl
inc
sbb
sub
sbb
stc
inc
sti
or
mov
fsubrs
dec
dec
mov
scas
arpl
sbb
sbb
mov
popa
rcrl
cmp
jecxz
addb
scas
aaa
fs
dec
enter
popf
push
or
addl
ds
into
gs
push
test
cwtl
cmp
nop
orb
and
jg
jle
push
cld
hlt
or
repnz
hlt
add
jle
pop
fcompl
je
adc
je
mov
sbb
loopne
jbe
stos
push
ss
dec
jmp
mov
stos
pop
sbb
sub
test
stos
or
mov
std
push
add
dec
int
sub
imul
call
ret
mov
dec
bound
addr16
mov
pop
clc
dec
stc
jle
mov
pop
cmp
adc
xlat
adc
test
jae
jg
arpl
int
and
arpl
outsb
addb
fwait
ljmp
xchg
mov
call
add
jns
mov
out
roll
adc
into
jne
in
or
jmp
mov
das
fisubl
mov
pushl
adc
push
sti
inc
push
test
jmp
loope
pop
sub
mov
imul
xchg
mov
xor
shll
dec
jns
and
aas
lret
fsubp
push
mov
popf
mov
sahf
pop
push
pop
in
popa
sbb
mov
or
aam
dec
js
loop
mov
mov
push
sti
jmp
mov
aas
bound
and
lods
shl
addl
cwtl
fbstp
sbb
pop
lcall
or
mov
out
xor
mov
xor
lods
lea
lods
cmp
add
dec
frstor
or
dec
jg
inc
lcall
pop
cmpsl
mov
gs
subb
jns
incb
jnp
movl
cltd
test
xchg
test
xor
and
cmp
lea
or
xor
mov
and
sub
jo
repnz
jge
push
mov
es
mov
mov
shrl
jge
cwtl
sub
mov
sbb
sub
dec
sarb
cltd
dec
mov
icebp
cli
sbb
cmc
mov
ret
mov
lods
ja
sub
sahf
mov
fstpt
cmp
mov
mov
push
aad
mov
ret
push
iret
push
fbstp
jmp
jne
pop
cld
inc
dec
and
out
out
mov
or
loop
and
add
rolb
add
test
adc
nop
int
ja
and
sahf
insb
jmp
jo
aad
add
mov
xlat
dec
xor
dec
insl
cltd
sub
dec
stos
xor
fistps
outsb
aad
inc
mov
jp
call
pop
jnp
in
call
xchg
scas
inc
adc
lods
fbld
mov
xlat
idivl
jge
cld
imul
inc
mov
add
inc
cmp
clc
movsb
dec
das
pop
push
inc
lds
adc
push
jo
les
ds
fwait
lods
je
lea
xchg
in
dec
cmc
fidivrs
icebp
in
pop
xchg
clc
jmp
mov
scas
mov
adc
add
jae
lds
test
fs
push
pop
mov
loopne
mov
mov
sahf
push
bnd
stos
xchg
lods
inc
fscale
imul
xchg
arpl
adc
cmpsl
inc
decb
mov
xchg
sbbb
adc
cli
ret
enter
jno
outsb
lods
sub
sbb
dec
sbb
jne
cltd
pop
lea
push
bound
sarb
nop
ret
mov
adc
mov
and
subl
mov
cmpsl
adc
cmp
dec
xor
cs
xor
xor
dec
jo
outsl
inc
out
and
mov
pop
rcr
lret
mov
rep
fwait
rclb
movsb
inc
clc
movsb
shll
and
add
loop
inc
mov
pop
into
mov
shlb
or
mov
mov
xchg
pop
sbb
das
xor
ffreep
rorl
repnz
imul
out
or
pop
das
mov
inc
out
xlat
inc
sbb
fwait
xchg
aad
xor
popa
in
pusha
xchg
cmp
pop
dec
cmp
popa
and
add
test
inc
scas
notl
inc
cmp
sub
jb
shlb
mov
mov
loop
add
int3
sub
mov
adcb
and
xchg
pop
mov
jbe
dec
lods
jno
xchg
repz
push
pcmpgtd
pop
out
movsb
bound
test
cld
das
adc
das
inc
gs
shlb
mov
movsb
mov
call
aad
lret
std
test
ljmp
or
pop
jmp
xrelease
jecxz
std
pop
rolb
sub
xor
dec
pop
popf
sbb
rcl
ret
sbbl
mov
rcr
ret
divb
int3
dec
xchg
paddw
push
lret
bound
sti
jae
dec
and
cmp
lcall
je
and
popf
popa
cmpl
out
cmc
sub
add
sbb
mov
xor
shrb
adc
push
cmp
xor
out
push
rolb
mov
add
or
pop
decb
xor
scas
xchg
cmp
and
and
xchg
sbb
nopl
pop
test
push
fadd
xor
xlat
cwtl
dec
and
hlt
inc
fcoml
and
add
push
pop
push
inc
out
and
xchg
divl
sarb
lea
sub
mov
jnp
and
push
and
sub
js
cmp
scas
dec
movsl
xchg
or
popf
out
jp
and
jbe
in
stos
jae
sbb
or
push
adc
popl
es
pop
push
inc
adc
sti
in
dec
and
add
and
mov
push
mov
movsb
push
addb
mov
aaa
sbb
leave
movsl
jmp
je
push
imul
and
cltd
nop
iret
sti
cltd
push
and
pushf
scas
movsb
push
dec
mov
and
bound
aad
adc
inc
lret
mov
test
cmc
iret
mov
mov
notb
or
call
out
lock
insb
lret
shlb
jno
dec
in
xor
pop
js
ds
sub
cwtl
lahf
out
sar
iret
sbb
or
pop
dec
mov
sbb
inc
stos
pushf
fdivrs
pop
push
xor
dec
movsb
push
or
add
xor
sbb
xchg
insl
rcll
clc
push
out
popa
cmc
test
pop
je
imul
into
shl
and
jge
cmp
jl
in
call
jmp
fnstsw
xor
adc
fdivl
xor
dec
adc
push
pop
out
push
dec
bound
push
sbb
ss
jge
sbbl
int3
ror
mov
adc
mov
lea
adc
lock
or
push
pop
iret
xor
jne
lods
and
mov
hlt
mov
test
fidivs
xchg
sbb
add
in
cmp
pop
xchg
js
aad
xchg
rcrl
mov
and
shll
or
lcall
add
repz
mov
pop
mov
jmp
and
xchg
mov
pusha
pop
jnp
mov
fnstsw
push
inc
inc
push
loope
jmp
or
inc
loop
fstps
and
mov
filds
stos
hlt
bound
popf
stos
ret
push
jae
cltd
jg
outsl
and
jno
repnz
xor
cmp
in
jmp
and
mov
inc
popl
push
outsb
or
jae
lahf
out
aad
mov
jle
cli
adc
stc
dec
repz
inc
sbb
mov
pop
mov
mov
ss
mov
repnz
or
mov
dec
jae
loopne
push
out
testl
inc
mov
flds
loop
fnstsw
push
push
cmp
xchg
ja
sbb
push
ror
aad
test
fisttpl
fisubrl
jl
cld
popa
shl
das
fmul
sbb
xor
inc
mov
adc
xchg
adc
mov
in
pop
scas
push
std
and
dec
xor
jne
leave
jno
ljmp
rorb
fdivrs
repz
cwtl
fsubrs
push
in
popa
rcrb
jl
jp
fwait
lahf
adc
aaa
adc
loop
popa
pop
lahf
test
mov
adc
add
mov
mov
adcb
or
scas
outsb
fdivl
pop
ret
add
inc
fiaddl
mov
xorl
and
insl
and
push
test
pop
sbb
addb
inc
outsl
scas
cmpb
push
jp
cld
les
nop/reserved
or
test
lods
andb
xlat
jle
es
lret
fadd
lods
sub
int3
pushw
and
in
cwtl
adc
aam
testb
lods
aam
push
xor
cmpsl
lods
and
mov
popf
jbe
fs
cmp
xchg
cmp
clc
pop
test
aaa
mov
outsl
xor
xor
jo
adc
pusha
jbe
mov
imul
add
xchg
adc
mov
fsubs
xchg
jno
mov
lret
aas
sbb
and
or
mov
add
sub
mov
adc
inc
sbb
cmovs
lret
rcrl
and
lds
je
sub
jae
and
outsl
xor
clc
or
mov
int3
imul
xor
push
lcall
test
stos
cltd
in
ss
dec
add
xor
call
xor
mov
andl
pop
orb
xchg
push
mov
sahf
sub
dec
sub
sbb
cmp
and
cmp
gs
lret
ljmp
mov
push
push
xor
test
mov
aad
xchg
mov
pop
add
test
cmp
xchg
xchg
jp
push
hlt
cmpb
xchg
shl
dec
js
sub
mov
cltd
bound
inc
out
clc
pop
jg
test
or
dec
icebp
out
adc
mov
cmpb
cmp
fcomps
xor
jo
clc
aaa
in
add
and
xchg
fsub
xlat
inc
outsl
fnsetpm(287
sub
add
js
shlb
or
push
stos
xchg
sub
jp
mov
ljmp
push
sub
dec
in
in
push
and
cmp
push
xlat
xor
lahf
xor
jmp
insb
jbe
xor
cltd
pop
sbb
dec
mov
push
ds
jo
popa
lock
jl
lret
fcmovu
and
and
fnstsw
test
fs
xchg
insl
pop
aam
std
push
mov
pushf
fnstenv
iret
xor
lock
cmp
push
sub
out
push
ficoml
into
fimuls
int
xchg
and
lods
call
jno
test
lock
add
in
in
inc
mov
lods
xchg
xchg
test
sub
jne
movsb
stc
je
out
leave
sbb
inc
dec
stc
repnz
popa
lods
inc
data16
or
pop
cmp
jge
das
mov
stos
cld
inc
out
leave
xor
mov
mov
les
outsb
jmp
sub
test
jge
xor
add
adc
dec
or
aad
popa
fwait
mov
roll
mov
mov
fs
ss
jle
mov
cld
fisubs
and
fmuls
mov
xor
clc
mov
mov
mov
fldt
push
lret
dec
add
adc
ljmp
js
pop
xor
cs
in
fwait
sbb
add
push
int
aas
cmc
add
fdivrs
mov
jb
adc
xchg
jl
or
jbe
fisubrl
dec
sbb
loope
fiadds
fistps
cld
cmpsb
xor
shlb
arpl
jmp
repnz
dec
sub
sub
movb
fcomps
xor
jp
and
enter
icebp
lea
xor
mov
imul
iret
into
std
movsb
call
or
fsubrs
jnp
loop
lret
push
jmp
mov
mov
adc
jmp
sbb
hlt
scas
inc
cmp
iret
push
push
mov
ds
outsl
push
in
ds
push
lods
shll
ret
jmp
loop
jp
arpl
ja
cmp
sub
dec
pusha
mov
dec
loope
fsubs
cmp
popf
or
sti
ja
lahf
popa
dec
js,pn
fidivrl
sbb
sbb
push
mov
xchg
adc
scas
adcl
out
sbb
out
mov
xchg
cmp
cli
rol
dec
sub
lods
cmp
dec
mov
pop
jecxz
xchg
adc
shll
fisttps
movb
adc
fisubl
xor
pop
fs
lods
sub
in
jecxz
cs
xchg
mov
sahf
cwtl
sub
jnp
aaa
and
inc
outsl
in
lahf
dec
mov
pop
jp
jae
mov
imul
clc
mov
rolb
popf
sbb
stos
add
mov
fidivrl
sbb
cmp
inc
push
frstor
cmp
add
push
pop
dec
cmpsb
outsb
inc
aas
add
or
pop
push
imul
sub
adc
ret
aad
jge
in
cmp
mov
lahf
sub
fs
dec
ss
cmp
add
push
pop
loopne
and
sub
mov
xchg
push
in
lret
pop
jmp
dec
and
push
mov
and
mov
lret
pop
ss
enter
and
lcall
fstl
jns
mulb
xchg
mov
repnz
mov
in
les
lret
out
add
cmovg
loope
push
jbe
out
ret
or
add
jne
or
jecxz
jmp
dec
xorb
fadd
pop
lods
hlt
loope
cmp
addb
iret
dec
cmp
aam
pushf
in
push
push
in
sub
shrl
loope
push
aas
dec
testl
jmp
mov
fisttpll
xchg
and
adc
push
mov
cmp
jne
icebp
fidivl
inc
xchg
cli
repnz
cmp
das
lcall
arpl
loope
test
aas
movsb
jbe
ss
sbb
jne
mov
mov
es
mov
outsl
mov
mov
push
jae
js
mov
fistps
adc
cmpsb
pop
sub
sub
inc
xlat
pop
mov
dec
mov
pop
dec
enter
out
nop
inc
jne
mov
imul
shlb
cmp
sub
cli
out
fsubr
mov
ja
mov
sbb
cltd
push
lahf
inc
pop
fwait
jmp
push
sbbb
in
add
dec
dec
test
push
dec
arpl
and
daa
mov
mov
sarl
xchg
inc
push
ds
daa
mov
push
jmp
sbb
cmpsl
ret
dec
mov
mov
nop
sub
sub
pop
lea
inc
dec
das
scas
jp
mov
inc
std
stos
ds
shl
xor
mov
data16
add
setp
icebp
sbb
dec
jle
cmpl
pop
dec
mov
loopne
mov
adcb
sarb
shrl
xor
xor
sbb
loopne
and
hlt
jecxz
mov
leave
push
cli
pop
mov
xchg
dec
mov
mov
mov
xor
lods
pop
sbb
push
rcll
jo
mov
std
cld
pop
add
add
mov
xchg
fsubs
or
xchg
shr
js
cmc
je
imul
adc
jge
pop
or
sahf
pop
or
xor
mov
jl
shrl
adc
lret
es
xor
jne
adc
addl
xchg
xor
fldenv
inc
lret
ljmp
adc
pushf
or
paddsw
sub
test
data16
and
pop
cmp
cltd
test
sub
pop
push
int
ds
aas
mov
pop
fnstcw
mov
xchg
stos
in
cwtl
dec
int3
adc
and
inc
mov
nop
jg
pushf
aam
aad
sbb
pop
sub
imul
or
lret
push
xor
std
rcl
outsb
cltd
sbb
sbb
lcall
jno
mov
add
mov
lods
clc
hlt
lcall
add
mov
call
cmpl
daa
pop
add
add
pop
popa
mov
pop
jnp
adc
mov
add
lods
cmpsb
or
add
mov
pop
das
pushf
inc
ss
xor
in
xor
nop
push
sbb
frstpm(287
iret
inc
pop
cmp
andb
jecxz
call
lds
cmp
cmp
dec
sbb
cmp
lock
ret
jb
push
sahf
dec
les
mov
test
pop
cmc
jg
pop
les
roll
outsl
lds
and
cwtl
inc
outsb
mov
xor
mov
push
and
insb
mov
dec
movsl
mov
mov
out
cmp
daa
icebp
in
clc
xchg
rcrl
add
and
xchg
jmp
push
cmpl
xor
mov
fwait
mov
inc
clc
scas
loop
jno
out
lds
adc
int
mov
push
shll
mov
filds
add
mov
pop
hlt
mov
lahf
push
call
cmp
dec
ds
nop
sbb
arpl
test
imul
dec
jnp
into
cmp
push
pop
and
inc
mov
sbb
shll
movsb
xor
and
xchg
push
mov
mov
mov
jg
jge
add
stc
push
scas
mov
daa
pop
inc
rorl
xor
fnstcw
repz
pop
shrb
add
sub
add
cmpsl
add
aad
or
mov
clc
sarl
cmc
iretw
daa
pusha
out
pop
ljmp
pop
pop
mov
testb
sub
ds
xor
addl
test
je
xor
add
aaa
rolb
enter
cli
bound
dec
fidivrl
pop
push
out
inc
in
sbb
das
js
sahf
lock
jae
jmp
popa
sub
clc
mov
mov
call
mov
xchg
test
scas
mov
scas
mov
jbe
stc
and
loopne
adc
push
adc
add
loop
loope
daa
mov
pop
mov
loopne
mov
imul
xchg
lds
cmp
add
lret
mov
jbe
cmp
scas
adc
push
pop
rorb
xorl
pop
and
push
sub
out
pop
orl
cmc
jl
cmp
add
das
add
ret
pushf
xlat
popa
jecxz
or
sub
jns
sbbl
out
add
popa
test
shll
repz
popa
fmull
lcall
stc
pop
push
sbb
in
xor
lods
dec
imul
fildll
ret
pusha
fdivr
int3
push
or
lahf
mov
cmp
push
mov
int
dec
or
cltd
mov
fistpll
xchg
aaa
adc
mov
sahf
insl
movsl
enter
mov
lock
add
pop
pop
sbb
push
inc
lret
jae
ja
fcomp
fwait
adc
or
shlb
outsb
in
sub
imul
or
sbb
loope
push
aad
push
testl
jp
sub
sub
push
popl
in
sahf
out
xchg
in
and
in
pop
mov
fisubl
int3
fxrstor
cltd
or
lods
mov
xchg
mov
pop
pop
fidivl
and
addr16
inc
mov
arpl
cmpsb
jbe
sbb
imul
scas
pop
jae
mov
insb
push
adc
xchg
mov
repnz
aaa
jae
call
jecxz
je
xchg
data16
or
imul
push
fcoml
dec
in
mov
pushf
xchg
mov
and
mov
sub
lods
mov
sbb
shll
cmp
lock
jmp
into
jo
lret
cmp
mov
jo
test
lods
pop
add
push
clc
adc
mov
into
or
andb
in
sbb
imul
mov
lea
jg
push
ror
ss
cmpsb
int
xchg
jp
ljmp
inc
repnz
push
adc
adc
das
xor
jo
in
pop
jne
das
dec
mov
fs
scas
es
jo
or
or
lods
add
sbb
pop
pop
xchg
push
inc
fucom
cld
dec
or
push
nop
out
push
xor
cmp
xor
add
popa
out
popf
arpl
fists
adc
fnstenv
scas
add
or
shr
mov
jp
enter
in
add
jne
lock
jne
cltd
jl
push
xchg
inc
shrl
scas
inc
push
cmp
sub
xor
imul
inc
fimull
push
testl
adc
addr16
dec
cmpb
xchg
xor
xor
pop
push
fldenv
sbb
es
xor
and
mov
sarl
mov
cmp
sub
ljmp
rorl
xor
jnp
adc
xchg
fldt
mov
and
add
push
cwtl
adc
dec
sub
divl
adc
xchg
fldl
xor
dec
movsl
jmp
lahf
in
sahf
inc
mov
insb
les
mov
push
push
fisubl
xchg
or
icebp
faddl
and
dec
and
rol
fsubr
call
lock
push
sbb
push
dec
fistps
fwait
dec
mov
das
xchg
push
jb
stos
dec
mov
adc
ljmp
mov
dec
pop
fiaddl
out
adc
sub
jl
fdivs
mov
out
xchg
pushaw
fbstp
jg
icebp
jge
movsl
outsl
mov
add
add
jp
or
leave
inc
pop
fst
inc
sbb
js
ror
xchg
adc
pop
and
andps
or
jo
mov
popl
mov
aam
pushf
dec
fwait
jbe
inc
sub
inc
imul
jecxz
ficoml
das
nop
loop
pop
mov
cmpsl
mov
pop
les
shll
sbb
shl
mov
shll
add
aam
cmp
and
jb
sub
mov
dec
hlt
push
std
xchg
pusha
out
adc
sbb
mov
dec
adc
mov
ljmp
imul
lret
xlat
repz
mov
enter
aam
scas
mov
mov
das
pop
cmp
jecxz
pop
mov
das
gs
jecxz
push
inc
outsl
push
lcall
adc
mov
or
fldt
aam
adc
xor
sbb
jg
push
jle
adc
sbb
cwtl
sbb
xor
sbb
mov
or
pop
pop
jbe
pop
das
dec
in
lock
pop
flds
mov
fcoml
sub
jo
inc
mov
sbb
jae
sbb
push
jl
dec
pop
jbe
stos
sbb
xor
xor
sbb
or
xchg
test
mov
cmpsb
add
das
mov
and
pop
mov
inc
stos
popf
or
std
pop
xor
fidivs
mov
fwait
mov
push
jne
in
jl
ss
decl
push
sbb
cwtl
fidivrl
int3
cld
dec
and
loop
mov
scas
popa
out
push
mov
sahf
cltd
xchg
aaa
dec
fldt
out
call
push
add
xchg
mov
xlat
mov
xchg
shrb
and
rcpps
out
push
mov
les
aad
cmpsb
xor
cmpsb
pop
lcall
push
pop
cmp
not
xchg
cmpsb
sbb
psubb
shl
pop
vpaddsb
jb
pop
roll
adc
adc
adc
loope
data16
pop
push
jp
mov
insb
adc
les
add
int
xchg
iret
mov
add
mov
popa
dec
jg
test
sbb
push
shl
in
test
xchg
push
rolb
sarb
jmp
push
pop
add
or
testb
push
jno
pop
ljmp
jo
mov
cmp
test
roll
cmp
pop
movl
pop
test
test
cli
cs
mov
sahf
mov
xor
je
cmpsl
cmp
popf
mov
repnz
and
addr16
jno
jp
sbb
and
out
mov
fidivs
neg
sub
or
push
pop
call
sbb
jo
icebp
push
gs
mov
or
test
mov
aas
fstpt
mov
lds
sub
sub
cmp
jle
fmul
sbb
out
icebp
inc
push
jle
data16
scas
sti
jae
mov
repnz
lahf
xchg
dec
outsl
pop
mov
lret
stos
sbb
mov
test
test
jo
xor
cmpsb
cmp
or
ljmp
popa
mov
push
add
jmp
call
lahf
add
jb
dec
ficoms
jmp
jbe
rcrb
ret
adc
mov
mov
sub
sbb
cltd
mov
sbb
lea
mov
xlat
mov
add
cmpl
jmp
cwtl
cld
add
out
mov
movsb
in
je
xchg
insb
xchg
add
pop
test
pop
rcrb
and
add
xchg
pop
pop
pop
data16
push
xlat
sub
es
inc
adc
subb
addr16
or
outsb
pushf
mov
pop
push
in
inc
jge
and
leave
jp
sahf
divb
in
xor
mov
cmp
xchg
imul
sbb
faddl
out
jle
jb
shl
outsl
mov
adc
or
outsl
and
das
xlat
or
into
mov
cmp
js
push
pop
xchg
cmpsl
fsubs
lods
sbb
mov
aam
add
dec
cwtl
xchg
imul
xchg
rcrl
stos
xchg
xor
dec
insl
pop
cmp
dec
roll
or
int3
xor
sub
dec
add
ds
and
push
clc
push
xor
or
mov
out
je
sti
pop
cmp
dec
xchg
xor
int
fstps
pop
xchg
mov
rolb
leave
arpl
jle
and
sub
mov
push
rolb
fiadds
loop
loopne
cltd
in
shrl
es
neg
inc
sbb
push
test
dec
jo
ss
xchg
jne
loopne
fchs
mov
leave
push
or
std
das
inc
xchg
test
enter
mov
out
push
push
insl
scas
or
aas
arpl
aam
add
mov
xor
mov
sbb
lods
xchg
js
shll
outsl
fwait
stos
jmp
andl
mov
repz
leave
iret
mov
shl
repz
push
lcall
sbb
adc
inc
les
outsb
and
pop
lahf
adc
pop
mov
mov
outsb
xchg
mov
sahf
and
or
cs
inc
dec
js
sbb
imul
orb
sub
pop
ss
xchg
mov
adc
dec
push
push
or
in
sahf
mov
subl
mov
sbb
add
sub
push
pop
push
pop
or
sub
jne
dec
add
xor
mov
jg
dec
jle
add
sub
or
jge
popa
sub
shrb
movsl
mov
repz
add
shl
ja
inc
push
pusha
xchg
push
loop
adc
xchg
xor
fcmovnbe
repz
das
xchg
ret
mov
cmp
add
mov
cmp
jae
mov
sbb
je
cmovns
push
clc
adc
pop
sub
sbbb
test
gs
adc
int
sub
push
adc
hlt
mov
adc
jno
js
cmpsb
movsb
jno
imul
add
lea
and
sub
xor
mov
subl
pop
cmpsl
cmpsb
mov
cli
repnz
je
daa
stc
call
sbbl
sti
pop
loope
cmp
ja
into
mov
adc
andl
inc
loope
loopne
or
daa
push
mov
pushf
sub
adc
outsl
fldcw
xor
dec
rcll
loope
push
hlt
jnp
aad
rcll
sub
cli
dec
pop
repz
jns
cmp
aad
sub
loop
adc
call
test
xor
int3
lods
jmp
jne
mov
fnsave
fsts
movsl
lock
insb
sub
inc
repz
mov
mov
test
jb
addr16
sbb
mov
xor
xlat
jl
xchg
lahf
outsb
fs
or
jnp
stos
mov
adc
mov
mov
mov
mov
outsb
mov
xor
dec
stc
pusha
xchg
jp
add
cltd
adc
push
or
xor
or
jno
push
daa
sbb
xchg
lods
jns
cmc
add
jb
xchg
mov
xor
inc
and
pop
fcoms
sub
out
and
cmc
mov
pop
or
adc
inc
mov
mov
stos
sbb
inc
inc
xchg
insl
xchg
cld
jbe
js
add
cwtl
pop
insb
lahf
jb
test
dec
icebp
jnp
ret
inc
psubsb
je
loop
les
outsb
lods
sahf
ss
mov
pop
mov
pop
push
jnp
fyl2xp1
icebp
pop
push
inc
sub
inc
sbb
outsb
aam
xchg
rorb
roll
pop
sti
mov
inc
dec
cmp
mov
mov
jmp
jne
pop
sbb
mov
dec
rol
push
push
jns
xchg
mov
in
in
fwait
xor
jmp
dec
or
jp
xor
enter
mov
inc
sub
lock
adc
jecxz
insl
shrl
fsubs
loop
xor
sub
add
add
orb
ss
setns
mov
sbb
add
in
out
pushf
aam
adc
popa
xlat
scas
testl
divl
cmpsl
std
jbe
jno
jo
stc
xchg
in
dec
mov
cwtl
jcxz
rorb
jge
out
xchg
inc
cmp
push
loope
mov
xchg
dec
and
add
dec
sti
dec
inc
and
lods
pop
lahf
arpl
mov
xchg
les
andl
cld
and
aam
jb
call
mov
repz
mov
aaa
mov
and
out
out
out
jecxz
out
push
aaa
sbb
adc
mov
and
dec
fadd
and
push
dec
mov
inc
push
xor
xlat
leave
sahf
push
cmpsl
insl
xchg
loope
mov
and
jne
jne
int
push
jmp
jo
mov
mov
les
iret
inc
cmp
fstpl
ficompl
and
sbb
xor
nopl
cmp
fcmovnbe
aaa
pop
xchg
movsb
inc
jg
insl
fldt
mov
in
xor
jmp
dec
stos
es
push
push
mov
push
or
jg
pop
daa
int3
test
mov
mov
jmp
aaa
test
dec
das
pop
jp
lahf
loope
pop
push
fcomps
push
push
arpl
outsb
out
mov
out
mov
jge
sar
out
pop
mov
and
add
jmp
or
jae
data16
mov
inc
sbb
push
test
test
insl
xor
dec
xorl
pop
jno
sbb
lods
and
notb
jae
or
out
push
mov
push
hlt
and
xchg
aas
adc
xchg
fst
idiv
popf
sbb
pop
sahf
jl
adcb
cltd
daa
fwait
or
mov
adc
into
push
lds
loope
insb
mov
pop
aad
adc
pop
mov
lods
data16
xor
insb
shlb
loop
div
sub
push
mov
jle
out
movsb
shlb
jnp
in
jo
std
sub
xchg
push
lds
jp
repz
add
stos
cld
addr16
sbb
dec
inc
inc
pop
stc
inc
push
into
inc
aad
dec
bound
aad
test
sbb
mov
cltd
leave
movsb
fdivl
and
mov
std
mov
pop
sub
in
shlb
dec
bound
rcrb
inc
mov
mov
pop
mov
mov
sahf
jbe
add
movsb
insb
sub
mov
push
cmpsb
enter
fisubrl
nop
dec
test
ret
jp
fcoml
insb
or
clc
sti
insb
pop
push
xchg
sbb
ret
out
cmp
jle
mov
dec
xchg
cmp
jbe
cld
ljmp
adc
in
out
aam
mov
pop
pop
fsubrl
daa
jge
ds
cmp
mov
pushf
fists
das
xor
es
outsb
or
scas
out
rolb
mov
movsl
sbb
leave
jno
fnstenv
repnz
inc
outsl
adc
mov
cmpb
popf
adc
mov
xor
arpl
movsl
jl
adc
pop
loopne
adc
lcall
sbb
mov
sbb
scas
add
sub
fdiv
inc
and
push
call
lock
sbb
call
mov
adc
xor
out
js
xor
daa
push
dec
mov
mov
jne
dec
ss
add
in
and
dec
dec
xchg
lock
or
sub
mov
sub
and
add
jo
es
mov
imul
adc
jnp
adc
add
shl
adc
andb
push
repz
mov
or
pcmpeqb
sub
push
sub
xor
repnz
mov
inc
jge
rorl
fsub
sbb
push
xchg
sub
in
jge
and
pop
dec
inc
jle
andb
mov
insl
push
sti
sti
mov
mov
insb
mov
fdivr
inc
ja
leave
jno
pop
jne
inc
push
mov
imul
cld
popf
shl
test
push
pop
ja
fnstenv
sbb
es
scas
clc
sub
inc
out
pop
das
popa
je
jno
push
adc
test
pushf
mov
lret
lcall
push
jmp
add
xchg
ss
mov
cltd
ret
in
fcmovnbe
sbb
fwait
jmp
or
inc
xlat
enter
subb
inc
daa
jae
shlb
and
pop
rcr
loopne
inc
xor
das
gs
adc
jge
xor
xor
mov
clc
sub
mov
sbb
bound
xor
lea
lret
sbb
sub
iret
das
cli
stos
sahf
sub
lds
in
shrl
cld
adc
xor
enter
test
add
fcom
shr
std
push
sahf
inc
mov
and
loop
mov
subl
xchg
mov
cmpsl
jb
loopne
mov
push
mov
sub
dec
bnd
pop
or
int
mov
pop
mov
cmp
jge
sub
fs
lods
mov
pop
push
dec
int
mov
adc
xchg
jbe
or
data16
jno
cmp
push
sbb
icebp
test
push
hlt
sub
xchg
mov
cmp
sub
bound
mov
xor
popa
scas
data16
pop
in
mov
xchg
and
push
in
loop
lods
loope
mov
add
xor
pop
ret
pop
xchg
outsl
mov
test
xor
imul
add
sbb
lret
insl
mov
mov
loop
or
add
shll
iret
and
mov
ror
enter
test
loope
scas
add
push
pop
icebp
push
pop
xlat
je
shl
mov
mov
pop
dec
lahf
mov
push
inc
cmp
data16
cmp
pop
and
adc
fwait
outsb
addl
adc
push
pop
dec
xchg
fmull
mov
mov
xchg
inc
jns
xchg
test
and
jb
add
int
or
and
fwait
out
dec
fimuls
cltd
ja
loopne
pop
sbb
xchg
and
inc
outsl
into
fistpl
imul
xchg
xor
in
cmp
xchg
dec
lret
mov
push
lcall
out
fwait
push
or
int
hlt
dec
loope
mov
adc
testb
lods
mov
clc
dec
fisubs
dec
in
xor
arpl
inc
cmc
lods
popf
cld
jb
sbb
mov
mov
imul
inc
loope
js
outsl
inc
aam
jle
sub
decb
lret
mov
mov
pusha
stc
bound
or
ds
call
or
addr16
test
cli
push
lcall
mov
std
cli
xlat
inc
dec
mov
mov
pop
shrl
or
into
dec
imul
xor
push
aas
cwtl
rcl
dec
pop
xor
pop
cmp
ss
dec
je
cmpsl
cltd
cmp
xchg
xchg
xor
enter
popa
pusha
jns
jg
int
incb
insb
jle
or
mov
repnz
jns
fcomps
fstps
sbb
jne
push
adc
sub
es
pop
bswap
mov
ficompl
mov
push
lock
mov
mov
push
cmp
jne
aad
roll
mov
cmp
sub
sub
jg
inc
add
insl
mov
ljmp
out
ds
dec
arpl
add
aaa
mov
sub
inc
mov
lahf
push
pusha
adcl
or
push
jae
ja
ja
and
movsl
push
cs
je
adc
je
pop
xchg
mov
je
cmp
cmp
or
jl
add
shll
sbb
cwtl
mov
mov
jne
cmp
aas
lods
lahf
jmp
fstpt
sbb
jno
lea
mov
and
pop
and
inc
lcall
adc
imulb
out
mov
push
hlt
adc
cli
fisttps
das
xchg
mov
lret
sub
mov
lcall
shlb
sbb
jnp
ror
cltd
inc
cmpsb
popa
and
popa
cmp
xor
or
es
fsts
pop
jne
jmp
sub
inc
pop
mov
add
mov
test
clc
xlat
fcmovnu
in
push
xchg
les
cmpsl
pmaxub
in
push
jge
adc
pushf
std
cwtl
fstl
mov
or
xor
pop
popf
pop
daa
xlat
popf
into
push
pop
fwait
and
xor
cli
mov
or
paddusb
cmpsl
test
cs
cmc
pop
outsl
pushl
dec
movsl
add
cmp
or
in
sbb
ja
cs
pusha
xor
push
or
cltd
or
xor
stos
adc
sub
push
push
out
mov
mov
push
hlt
das
bound
xchg
dec
gs
mov
scas
and
lea
cmp
sub
push
push
je
pop
shrl
sbb
pusha
mov
mov
jno
stos
movl
cmp
js
es
xor
jns
push
fldt
movsb
loopne
incb
lea
adc
dec
pop
adc
inc
mov
ja
clc
hlt
jmp
int
lea
or
mov
testl
dec
mov
pushf
jge
addr16
icebp
and
xchg
cmp
xchg
mov
hlt
out
lahf
xchg
pop
outsb
stos
idivl
lahf
push
outsl
sbb
inc
scas
faddl
stc
pusha
sti
jle
mov
sbb
or
lea
add
scas
lock
icebp
inc
xor
mov
push
xor
cmp
mov
jae
jl
sbb
pop
xor
add
loopne
in
dec
jae
stc
je
sbb
lret
jo
fmul
and
jb
fdivrl
pop
or
or
jns
cs
les
call
bnd
push
xor
inc
add
adc
movsl
mov
fs
push
iret
pop
bound
mov
lea
lahf
clc
xor
and
push
jns
add
add
cwtl
cli
lret
fiadds
xchg
push
jo
arpl
fmul
sbb
add
push
push
ja
jns
xor
xchg
dec
mov
inc
cld
pop
lods
mull
push
inc
stos
das
sbb
inc
sub
mov
orl
ret
pop
lret
bound
ljmp
nop
lods
fimuls
out
dec
mov
xchg
adc
mov
adc
mov
or
cwtl
cwtl
push
lea
xor
fists
cmpb
xchg
inc
ja
dec
push
adc
cmp
testb
ds
stos
imul
sahf
or
cmp
lods
mov
xchg
movb
cmp
add
xchg
lods
push
dec
imul
popa
adc
mov
sub
test
data16
sub
and
xor
or
dec
push
aad
stos
loopne
jnp
fimull
mov
pushf
fwait
or
out
subb
xchg
jnp
fnstcw
js
sbb
cmc
aam
lods
popa
cwtl
adc
arpl
push
fistl
test
loop
jnp
sbb
jno
or
sti
sti
mov
mov
shrl
clc
adc
ret
dec
mov
mov
or
ja
in
mov
shr
pop
xor
cmpsb
add
mov
and
mov
daa
add
fldt
pop
arpl
jl
shlb
xlat
mov
aam
sbb
out
outsb
jnp
imul
dec
inc
adcl
add
mov
in
cmpsb
xchg
adc
and
ret
or
js
repz
push
add
xor
mov
mov
sub
pop
int3
ficomps
dec
pop
cmp
int3
mov
pop
stc
fwait
inc
iret
lds
sbbl
data16
xor
xchg
push
sub
clc
push
roll
sub
not
popf
push
push
push
shrl
dec
cmp
cmp
popl
sbbl
lock
bound
adc
jno
mov
mov
mov
out
inc
jne
lock
jp
adc
push
imul
sub
mov
lahf
xchg
bound
and
sub
hlt
or
iret
mov
inc
pop
imul
mov
mov
out
jne
sarl
mov
into
je
sbb
imul
adc
cmpb
icebp
out
xchg
xor
inc
ja
jmp
xor
xor
mov
mov
pop
scas
jp
or
cmpsb
pop
call
mov
pop
sahf
or
test
inc
arpl
mov
mov
add
inc
lea
cli
dec
int
out
ja
xor
movsl
xchg
dec
sbb
sbb
lea
xchg
jle
push
out
mov
jle
ret
pop
xchg
movsb
mov
rolb
ret
insb
or
fiaddl
pop
fcoms
cmp
adc
das
inc
xor
lret
dec
pop
or
cmp
mov
dec
lret
aam
es
popf
sti
fs
mov
pop
in
xchg
push
mov
enter
mov
iret
sbb
gs
sub
xor
add
push
cmp
imul
clc
daa
nop
orb
aaa
movsl
xor
or
imul
pop
add
vpavgb
cmp
clc
push
push
jp
xor
push
lret
inc
push
rorl
cmp
xor
jmp
pushf
xchg
addr16
adc
pop
lcall
add
movsl
bnd
stos
or
cmp
xor
shlb
lahf
jmp
inc
sbbl
out
ljmp
cmpsl
dec
add
out
dec
adc
adc
jo
loopne
push
lret
adc
pop
mov
push
push
cltd
ret
ficomps
sbb
or
jb
cli
xchg
pushl
aaa
mov
add
mov
repnz
out
cmc
movsb
sbb
push
stos
mov
test
jl
inc
or
loop
jo
loope
loopne
int3
xor
mov
popa
mov
xchg
stc
cmp
xchg
xor
and
mov
out
cli
inc
and
xchg
inc
imul
adc
dec
push
stc
or
mov
and
gs
cmpl
add
rcrb
xchg
ss
sbb
adcb
test
jne
sahf
xchg
js
dec
sbb
cmp
mov
jbe
lahf
or
daa
loop
lods
jne
jno
shrb
pop
xchg
mov
xchg
int3
xor
movsl
call
jmp
idivb
lret
aas
or
fmull
xlat
mov
push
inc
and
mov
inc
scas
and
jp
daa
adc
mov
inc
cwtl
push
jmp
pop
inc
dec
nop
ljmp
mov
mov
insl
in
jecxz
lods
subb
jne
lds
mov
rorl
cmp
jns
mov
dec
adc
nop
cmp
scas
pop
stos
jns
xchg
push
outsb
fldenv
cld
aad
cwtl
mov
cmc
xchg
cmp
daa
jb
fcomps
xchg
inc
test
sub
dec
pop
lret
lret
pusha
insb
in
pushf
dec
lcall
ss
ret
cli
out
push
cli
dec
pop
dec
aaa
inc
aaa
mov
sbb
or
bound
pop
push
or
push
add
add
shl
or
out
sti
jg
mov
sub
movsl
xor
mov
inc
dec
xlat
jbe
fsub
stos
add
hlt
rcrl
faddl
jge
stos
pop
sbb
andb
insb
xchg
inc
mov
mov
jp
pop
adc
mov
xchg
shll
inc
dec
roll
fidivrs
or
pop
imul
jo
mov
jp
push
inc
out
std
mov
adc
xor
in
lret
fstl
fisubrl
and
sub
fwait
push
inc
das
rorb
repz
push
rorb
mov
mov
das
pop
clc
mov
ss
fistpll
push
addr16
addr16
inc
push
cmp
mov
xor
fisubrl
mov
pop
dec
push
mov
mov
and
lahf
cltd
add
shll
test
sub
xor
inc
inc
aas
outsb
cmp
testb
push
insb
jecxz
mov
dec
jl
lcall
pop
dec
mov
das
lcall
jae
sbb
adc
test
xchg
outsb
pop
jl
and
mov
test
ror
mov
cli
mov
cmp
daa
mov
pop
lcall
add
mov
fsqrt
mov
insb
loope
dec
pusha
cmc
pop
xor
pop
mov
push
int
mov
dec
pop
dec
pop
mov
out
ret
in
xor
sbbl
add
sti
ficomps
mov
outsb
mov
pop
jp
sub
fcmovb
jmp
adc
and
jne
dec
xchg
sub
loope
sbb
mov
loopne
jno
dec
push
bound
jge
test
sti
jns
mov
jno
sbb
lods
ss
jne
shl
xchg
cld
sub
cmp
or
jae
ret
hlt
int
inc
mov
inc
xor
in
scas
fidivl
fisubl
lock
in
adc
jo
xor
xchg
jp
inc
add
mov
rcrl
mov
dec
mov
dec
push
scas
repnz
mov
mov
int
inc
rcrb
test
icebp
fwait
xchg
outsb
imul
cmpsb
sbb
jmp
mov
add
ja
aas
jecxz
nop
fcoms
lock
mov
orl
xor
int3
ret
out
enter
xchg
mov
fsubrl
cmp
mov
in
std
pop
cmp
lods
fisubs
push
pop
in
and
pop
and
dec
ja
ljmp
enter
lods
sbb
lds
mov
dec
aad
inc
icebp
aas
data16
mov
cli
insl
pop
pop
cmpsb
fcmovne
iret
jl
mov
insb
iret
int3
int
jno
imul
mov
cld
fdivr
add
lret
ja
xor
pop
lret
mov
movsl
cmp
lea
rcr
or
mov
xchg
inc
andl
movsb
xchg
ss
enter
jns
and
add
or
and
test
lea
mov
setnp
faddl
ja
in
iret
inc
cmc
mov
orb
rorb
pop
insl
mov
out
cli
shr
cmp
jl
xor
lret
je
test
and
int
cmc
fcmovbe
std
out
lcall
aam
and
push
mov
push
add
dec
mov
gs
fimull
mov
sub
jno
push
sbb
rcr
pop
or
inc
push
enter
or
push
sub
ret
lcall
cmovl
jle
sarb
add
nop
dec
push
aaa
aaa
mov
inc
mov
sarl
mov
or
cmp
sub
push
sbb
dec
mov
repnz
jae
sbb
addr16
inc
jne
push
incb
jmp
inc
mov
stos
pushl
out
mov
inc
fidivrl
xchg
dec
inc
cli
push
adc
push
out
test
roll
test
jge
xor
pop
add
jge
inc
popa
lds
mov
push
mov
inc
mov
imulb
adcb
xchg
scas
and
pushf
sti
adc
lcall
xchg
lcall
push
dec
sbb
aaa
iret
push
out
rcll
sbb
add
cmp
cli
pop
cmp
mov
xchg
stos
insl
mov
jns,pn
sbb
int3
cli
inc
jecxz
inc
das
mov
add
mov
pop
jnp
cmp
mov
and
out
mov
xor
adc
inc
push
sbb
aas
nop
ds
es
mov
and
aad
dec
push
loopne
sbb
cli
outsb
test
jecxz
push
ja
icebp
outsb
sub
inc
jbe
out
push
clc
push
aas
sub
out
or
out
push
scas
insb
and
int
rclb
aam
insl
push
outsb
sbb
enter
sub
xor
std
mov
add
or
out
lods
fsts
sbb
rorl
ficompl
lret
lret
leave
cmp
push
nop
sbb
nop
lea
ljmp
ja
add
pop
or
add
cltd
jmp
xchg
ja
fisubrl
inc
or
cmc
sbb
sbb
jno
push
xchg
stos
add
adc
pop
or
popa
call
jg
fisubs
rol
add
xor
mov
and
and
lock
imul
leave
addr16
aad
jge
xchg
cmp
in
shr
popf
pop
ljmp
and
leave
mov
aad
or
jmp
lock
adc
repz
dec
mov
dec
in
dec
or
inc
xor
inc
mov
xchg
push
loope
inc
lea
push
mov
add
sbb
lret
aam
mov
leave
inc
mov
pop
aas
divb
shr
inc
adc
adc
mov
inc
mov
push
pushfw
sbb
rcrl
cli
mov
jl
mov
insb
arpl
xchg
pop
jle
psadbw
add
decl
add
dec
mov
cmpsl
mov
cmp
inc
in
jecxz
fdivs
nop
insl
dec
push
inc
dec
pop
lret
outsb
mov
mov
subl
or
add
xchg
mov
mov
mov
inc
push
shlb
nop
xlat
push
xchg
dec
pushf
call
repnz
push
pop
sbb
xor
push
pop
aad
addr16
scas
dec
cmp
nop
xchg
pop
mov
mov
push
test
and
aas
imul
xor
adc
cmp
add
and
xor
sbb
push
and
push
jmp
in
and
ss
push
scas
mov
mov
dec
xchg
movsl
jl
nop
mov
cltd
push
push
jp
pop
sarb
test
imul
mov
push
and
lret
imul
or
icebp
outsb
dec
ret
push
fisubl
popa
and
jne
mov
and
pop
xchg
shlb
and
dec
mov
cmpsb
cmp
cmc
lods
mov
cwtl
test
cbtw
mov
dec
popf
mov
mov
and
pop
sti
jb
scas
lods
sub
jg
mov
cmp
mov
or
rclb
adc
mov
xchg
push
fisttpl
adc
xorl
loop
aaa
push
jns
cmp
mov
cli
hlt
jns
sub
divb
and
imul
call
push
scas
xor
sahf
fnclex
daa
shrl
fidivs
push
xchg
or
outsl
or
sub
sbb
dec
sub
sub
aaa
lret
fcomps
movsl
adc
cmp
jl
stc
cmp
loop
popa
rcl
jns
cmp
adc
jb
ret
icebp
into
xor
pop
pop
ljmp
sbb
add
cli
inc
lea
mov
fidivrl
push
repnz
and
or
in
dec
mov
cld
xchg
daa
out
mov
adc
idivb
faddl
sub
fsubl
scas
and
push
lods
xchg
jo
xlat
inc
cld
fldpi
shlb
shlb
pop
daa
mov
es
xchg
xchg
pop
mov
outsb
stos
push
mov
enter
mov
mov
sbb
mov
jbe
sub
xchg
mov
xchg
imul
out
nop
and
dec
movsl
mov
lock
jge
loopne
js
add
rclb
andb
xor
mov
inc
mov
in
dec
xor
lcall
pusha
mov
mov
pop
jb
sub
pop
stc
arpl
mov
or
inc
push
inc
lea
lret
sub
adc
push
jb
mov
adc
ret
xchg
sub
cmpsl
lret
ret
ljmp
adc
pop
inc
cwtl
into
mov
fists
jne
jmp
lcall
dec
mov
mov
xchg
pop
sti
xor
mov
aas
in
mov
insb
sahf
imul
xor
lret
addr16
xor
repnz
das
fcom
clc
test
jmp
xchg
push
scas
jbe
test
pop
fs
sub
push
mov
adc
mov
mov
adc
and
sbb
mov
in
shlb
push
and
pusha
enter
xchg
inc
ljmp
xchg
adc
std
insl
ljmp
add
inc
xorb
mov
andb
cltd
push
jb
cmc
lcall
stos
pop
lcall
fs
xchg
call
xchg
dec
in
daa
cmpb
psubb
test
imulb
fistl
xor
aam
fcoml
out
jno
gs
out
sub
cld
cwtl
push
js
out
pop
ss
jo
lcall
sti
stos
lods
and
xchg
inc
movsl
ljmp
cmp
lock
aad
js
icebp
xor
and
loopne
movsb
dec
add
push
cmp
iret
fildll
rcll
bound
shrl
adc
dec
rcr
push
or
dec
jmp
lret
insb
xchg
push
cli
popa
mov
push
scas
mov
addr16
sub
lods
jnp
loopne
sti
daa
ret
xchg
adc
dec
mov
lret
xor
inc
lret
sub
sti
or
ljmp
mov
stos
xor
push
pusha
dec
testb
push
ret
fwait
test
iret
and
sar
in
shlb
je
arpl
int
fwait
push
insl
mov
ret
pushl
or
arpl
and
jge
cmpsl
add
cmc
mov
jp
mov
and
arpl
sbb
add
add
in
in
adc
cmpsl
bound
jmp
and
xlat
ja
jp
fmull
lods
stos
xorl
test
pop
push
dec
ljmp
cmp
stc
mov
cld
dec
dec
push
shr
fists
rclb
xchg
testl
movsl
adc
cmp
and
xor
cwtl
std
inc
aad
addr16
jne
mov
in
out
in
xchg
rolb
gs
pusha
int3
nop
inc
lret
ror
add
imul
xor
add
sub
movb
in
pushfw
call
jge
pop
or
push
sbb
leave
mov
addr16
sbb
mov
sub
push
adc
mov
mov
pop
or
in
insl
ja
popa
sbb
stc
inc
xor
pop
std
add
movsb
sub
push
mov
adc
dec
xor
test
lods
call
or
jo
daa
loop
mov
shll
mov
int
adc
push
das
cmpsl
enter
jnp
push
out
ret
stos
daa
test
into
fwait
push
repnz
dec
inc
jge
push
xchg
mov
sbbb
dec
and
xchg
dec
push
mov
mov
popf
push
lods
sub
ljmp
aaa
test
scas
sbb
cld
dec
cmp
fldl
jno
fidivl
ljmp
cmp
fcmovnu
sbb
cmp
xor
cmp
jl
mov
jae
xchg
mov
scas
lahf
lods
push
imul
jg
pop
lods
mov
mov
inc
stos
mov
dec
into
dec
aad
dec
std
push
push
or
repz
pop
shrl
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
sbb
shlb
movsl
movsl
js
les
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
in
movsl
js
and
sbbb
movsb
jmp
in
jecxz
aaa
gs
les
rep
adc
jns
xlat
or
mov
jno
rcrl
ret
fs
or
iret
gs
outsb
push
repnz
xlat
jmp
cwtl
push
std
rolb
ja
xchg
fwait
add
pop
aaa
jb
mov
xchg
cmp
dec
inc
pushf
mov
xor
test
outsb
sbb
addb
jne
leave
fistpl
ljmp
pushf
xlat
add
jb
ret
sbb
dec
dec
in
scas
sub
push
outsb
inc
or
popf
ret
sub
add
mov
cld
movsl
cmpsb
jns
cmp
inc
or
cmp
inc
sbb
mov
ret
fs
or
lea
sbb
mov
sbb
mov
or
movsl
push
ret
fs
or
mov
sbb
movsl
js
add
inc
or
scas
movsl
aaa
fwait
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
xor
sbb
movsl
cwtl
fnstcw
pushf
popf
ret
fs
push
sbb
mov
iret
scas
xchg
sub
sbb
movsl
js
cmp
aaa
imul
fs
push
sbb
movsl
mov
popf
ret
fs
or
mov
fs
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
sbb
movsl
js
cmp
inc
or
mov
inc
and
push
adc
int
push
lods
sbb
popa
pushf
cmp
sbbb
mov
shlb
or
add
mov
push
jnp
ret
sahf
call
outsb
stos
outsb
cmp
stos
mov
lret
xchg
daa
mov
push
popa
insl
mov
inc
push
cs
cmp
popf
fwait
mov
in
and
leave
xor
ljmp
iret
fstl
shlb
out
outsb
add
mov
sub
sub
or
xor
hlt
andl
mov
mov
push
shll
divb
sub
jg
push
jge
mov
adc
lods
arpl
sbb
lret
imul
inc
mov
xchg
test
sbb
pop
cmp
fs
jbe
sbb
pop
dec
sub
mov
mov
mov
mov
mov
sbb
pop
lcall
orl
imul
cwtl
icebp
sub
push
cwtl
dec
push
scas
cmpsb
cltd
loope
jbe
adc
push
lret
push
xor
inc
dec
dec
lods
cmp
orl
jl
cmp
xsha256
cmpsb
push
shlb
push
cvtps2pd
dec
mov
sub
mov
adc
sub
int
jne
ja
mov
imul
mov
dec
movsl
pop
scas
adc
imul
bound
icebp
push
fdivl
mov
or
sbb
or
xor
add
ds
sbb
daa
mov
repz
fcmovnb
mov
mov
xlat
cmc
jne
fists
mov
test
out
cmp
sbb
ret
xor
or
jb
xchg
mov
push
xor
popf
push
pop
push
and
orl
call
fcoml
bound
adc
or
rorb
inc
sarl
and
lret
mov
adc
xchg
mov
inc
cmp
pusha
outsl
nop
sub
inc
jge
xchg
in
sbb
push
mov
jae
add
fisubs
xchg
addr16
in
cmpsb
loop
das
xchg
cli
xor
js
xchg
mov
cmp
lcall
mov
push
xlat
or
jecxz
popa
jg
aam
es
pop
insb
jo
inc
ljmp
jne
add
jl
neg
jecxz
mov
inc
sub
sbb
push
sub
movsl
inc
imul
dec
push
in
stos
enter
imul
call
push
mov
and
fsubrl
sub
push
pop
jmp
shll
test
jmp
out
mov
cli
clc
and
dec
jle
jae
addr16
cmc
inc
jns
jge
dec
lods
pop
inc
int
cmp
sub
and
shlb
imul
clc
xor
int
dec
push
ret
push
mov
cltd
dec
andl
leave
fstpt
cmpsb
test
mov
leave
push
adc
or
loop
pop
cmp
jo
cmp
and
lods
stos
into
and
in
clc
jecxz
mov
lock
sub
mov
popa
inc
js
mov
out
pop
sub
cs
xlat
sbb
les
jae
sbb
inc
push
das
adc
mov
pop
test
test
shlb
std
jo
pop
ja
addr16
mov
inc
sub
in
in
xchg
je
xor
lahf
in
fdivrs
xchg
js
std
inc
jg
int
mov
or
mov
or
in
adc
or
mov
into
ljmp
add
jb
push
fimull
rcr
cmp
xor
push
pop
cs
inc
push
mov
icebp
mov
xchg
es
repz
dec
push
xchg
xlat
cltd
fmul
cmpsl
push
lods
repnz
insb
test
cltd
add
push
lret
icebp
mov
or
mov
mov
insb
jg
pop
mov
inc
into
xlat
jecxz
dec
cmpsl
dec
or
je
mov
jg
mov
cmpsb
pop
dec
xchg
ljmp
xchg
std
gs
adc
pop
xor
push
test
aaa
jbe
adc
mov
imul
iret
add
test
hlt
jnp
xchg
cmc
movsb
or
push
sub
ret
pop
packuswb
cwtl
es
pusha
jbe
mov
sbb
das
jmp
xor
sub
aam
xchg
add
test
subb
xor
mov
or
and
pop
fstl
or
xor
mov
int
sub
sarl
mov
pop
pop
push
adc
notl
adc
mov
jle
sarb
xchg
mov
pop
jb
in
into
xlat
cmp
push
pop
mov
cs
clc
jne
in
jge
test
syscall
jne
movl
mov
dec
dec
inc
out
clc
push
loopne
mov
xor
mov
push
cmc
mov
jmp
sub
mov
cmp
cwtl
insb
pop
xor
jle
inc
test
push
adcb
rorl
push
cmpsl
loope
fnstenv
inc
pop
sub
jo
cmpsl
stos
stos
lret
and
mov
rcrb
ja
mov
icebp
sti
or
dec
inc
lock
xchg
fimuls
mov
fwait
mov
inc
jmp
loop
mov
popl
gs
lock
mov
fidivrs
js
fs
cmp
cwtl
cmp
dec
dec
jno
scas
fstp
sarb
lea
gs
lret
fidivs
push
out
mov
cmp
cwtl
lock
orl
inc
pusha
push
inc
les
inc
mov
push
cmp
inc
sub
into
loop
cwtl
xchg
push
loop
int
inc
incb
mov
stos
mov
dec
shlb
in
popf
sahf
shl
lret
cmp
insl
mov
std
inc
pop
and
cmp
mov
pop
cli
or
sbb
push
mov
sti
popf
mov
xor
push
in
mov
mov
push
dec
int3
fwait
sarl
fwait
cmp
das
xor
pushl
sahf
or
cmpsb
cmp
cmp
mov
dec
mov
iret
test
xor
xor
mov
pop
mov
jo
imul
jo
aaa
mov
mov
clc
ret
mov
scas
xchg
ficoms
sub
dec
movsl
mov
ror
xor
xchg
and
insb
sub
inc
hlt
xchg
mov
and
lock
ss
outsb
pop
or
aaa
scas
in
lcall
mov
lea
jle
sub
sbb
and
clc
jae
inc
fs
movsl
scas
or
xor
mov
xor
mov
xor
sbb
fs
addr16
addl
jg
mov
cmc
add
aad
in
pop
lock
dec
add
imul
enter
out
inc
mov
in
xchg
mov
inc
add
out
or
movsb
inc
fnstsw
cs
in
mov
loop
fs
xor
pop
pop
jnp
jp
popa
cmp
subl
int
push
cmp
mov
std
loope
adc
jnp
xor
pop
test
lock
and
or
aad
pop
push
push
dec
dec
push
add
popa
daa
adc
test
adc
jle
nop
jmp
pop
scas
or
xor
pop
outsb
pop
dec
jl
sub
dec
popa
jne
add
lock
sbbb
pop
pusha
mov
push
stc
mov
push
sbbb
push
shrl
aaa
fildl
ficomps
inc
pop
repnz
fbstp
loopne
pushf
xlat
cmp
inc
jmp
daa
push
test
jnp
dec
mov
mov
jmp
inc
outsl
mov
xor
sub
xchg
inc
fnstenv
adc
loope
xchg
jnp
xchg
pop
mov
xorb
jg
sub
pop
subb
lahf
push
out
jo
pop
in
add
cmp
jg
sbb
cmp
push
xchg
adc
xor
scas
fdivrl
and
push
jl
jno
and
pop
add
and
scas
insb
add
dec
pop
push
mov
clc
mov
jns
dec
cli
dec
and
mov
mov
mov
in
dec
mov
mov
jmp
repz
mov
out
xchg
aaa
push
mov
lea
dec
sbb
mov
mov
pusha
shl
or
or
outsb
push
jnp
sub
aad
sbb
fisubl
lret
ret
negb
scas
je
push
mov
or
pop
mov
mov
and
dec
mov
xchg
jp
push
and
lcall
inc
mov
xor
jo
dec
movsl
ja
fidivrl
sbb
xchg
insb
push
sbb
mov
scas
mov
test
push
sub
fadds
andb
push
mov
fcmovnu
xor
push
fcomps
pop
and
mov
hlt
sub
mov
test
push
mov
sub
xor
sbb
call
inc
mov
inc
inc
aam
mov
fisttpl
dec
dec
mov
inc
add
shlb
mov
jle
fs
mov
xchg
aaa
and
and
and
insb
and
data16
in
push
jbe
dec
push
xlat
out
sbb
outsl
mov
push
testb
mov
xor
loop
adc
mov
movsb
movsl
lock
imulb
mov
push
sbb
mov
into
outsb
addb
cld
jmp
mov
fbstp
pusha
test
mov
mov
aad
pop
cmc
cli
pop
xchg
xchg
pop
xor
pop
fisubs
and
out
andb
dec
mov
nop
sbb
xor
sub
pop
add
adc
out
ret
lea
dec
test
xor
mov
in
pop
push
and
sarb
lock
push
aam
out
mov
xor
xor
inc
mov
pinsrw
dec
out
inc
scas
pop
pushl
jb
mov
roll
lcall
mov
xchg
lods
mulb
adc
test
ljmp
insl
sbb
push
out
les
or
cmp
sbbb
addr16
push
sar
xchg
lea
push
movsl
ljmp
xor
lea
jmp
mov
xchg
lea
mov
fs
dec
push
mov
data16
fdivrp
pushf
fwait
orl
adc
mull
mov
fisttps
fsub
push
mov
jb
dec
and
mov
out
mov
pop
xor
in
mov
mov
pop
pushf
jl
jp
roll
daa
int3
sbb
mov
adc
test
das
cmp
push
out
out
pushf
lea
iret
daa
sbb
lret
or
cmpsl
leave
sub
scas
adc
push
movsb
inc
jne
test
sbb
mov
xchg
jmp
xor
xchg
pop
pop
add
int
cli
jl
inc
push
sti
jne
call
arpl
jp
xchg
cmp
adc
outsb
scas
cwtl
xor
push
mov
aad
xchg
imulb
decl
pop
xor
cmpsb
xorb
pop
insl
cmp
or
pop
fistl
leave
add
jmp
testb
mov
insl
pop
ss
push
aad
rcrl
test
addl
ljmp
out
sub
adcb
mov
inc
sbb
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
