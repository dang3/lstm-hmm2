push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
mov
in
es
inc
aam
pop
push
popf
loopne
and
leave
sti
testb
mov
add
cmc
push
jle
pmuludq
lods
add
fisubs
pusha
inc
clc
fwait
pop
enter
daa
sub
js
popa
xchg
mov
bnd
dec
push
adc
cmovbe
mov
lret
sti
fstpl
mov
pushf
push
jg
ss
fmuls
dec
mov
sub
and
fdivp
imul
js
dec
int
mov
inc
aad
dec
lds
mov
inc
loope
mov
je
movsb
jns
call
lods
test
lea
adc
push
insb
sbb
call
mov
push
cmc
mov
pop
cmp
sub
es
sub
pusha
mov
xchg
lea
pop
cmp
fdivrl
cltd
push
cmp
sub
popf
fcomi
mov
addr16
andl
icebp
mov
gs
push
cs
pop
adc
inc
pop
faddp
imul
sahf
sahf
push
sbb
push
pop
arpl
cmpsb
xor
std
dec
jne
ss
loopne
call
pop
mov
push
mov
popf
mov
daa
lods
mov
stos
mov
ret
adc
inc
push
xor
test
imulb
dec
jns
not
or
xor
ret
loop
and
pop
std
adc
repnz
cmc
outsl
mov
xchg
jl
shl
pop
lret
mov
nop
and
xchg
mov
mov
mov
or
pop
scas
pop
leave
fstpl
sbb
inc
pop
dec
fs
jmp
sbb
insb
cld
mov
xchg
scas
xor
mov
pop
rclb
sbb
xor
arpl
dec
inc
nop
jge
imul
xchg
adc
lret
xor
mov
fisubl
add
jne
push
fidivrs
in
ret
mov
loop
nop
stc
xchg
ficompl
mov
cmc
jge
push
adc
mov
stos
pusha
add
sub
stos
cmpsl
and
pusha
out
popf
into
decb
fsubp
in
cld
mov
sub
scas
jmp
nop
les
mov
roll
mov
jns
repz
test
in
out
inc
inc
add
test
add
jmp
jmp
sti
test
lret
ror
fmuls
sar
xchg
jmp
jp
cmpb
int3
mov
cmp
xchg
jecxz
push
decb
sbb
mov
icebp
inc
xchg
sahf
std
add
icebp
xchg
movsb
test
adc
and
jmp
xchg
js
dec
or
inc
lret
jle
mov
lret
fstl
jmp
cs
int3
jle
je
mov
cmp
stos
sbb
iret
cmc
pop
or
ss
sbb
push
int
xchg
push
push
test
cmp
sbb
scas
ret
in
push
mov
ljmp
js
sub
rorl
cmp
cs
mov
xchg
fucomp
dec
and
ret
and
dec
push
push
or
inc
add
subl
push
shll
movsl
lahf
ficoms
xor
mov
jnp
rorl
and
std
push
and
or
dec
cmpsb
push
push
xor
repz
ds
insb
in
mov
sbb
cmpb
call
out
movsl
bound
and
xchg
out
add
dec
sti
scas
pop
fdivs
test
xchg
sub
mov
lret
cmp
insl
mov
insb
lret
push
mov
dec
movsl
imul
sub
in
or
lret
inc
add
mov
jbe
xor
loop
cmp
imul
xchg
sar
add
xchg
loope
jno
rcr
dec
inc
push
clc
xchg
xlat
cmp
jl
cmp
cmc
insl
shll
fstps
hlt
dec
fs
inc
in
cmpsl
ja
cmp
jge
sbb
pop
dec
xchg
cmpsb
push
cmp
in
out
bound
int
cmp
mov
cmpsb
stos
cmp
fwait
in
mov
sbb
out
pop
inc
sti
dec
scas
mov
rcrb
aaa
fcoml
or
sbb
les
jl
bnd
fcmovb
movsl
fwait
cmc
mov
dec
pop
mov
and
cmpb
xor
std
lods
nop
xor
les
imul
jns
outsl
in
xchg
push
cmc
aam
inc
mov
sahf
jo
push
pop
cmp
jo
in
cmc
cwtl
xchg
sbb
je
adc
cmp
in
dec
fsub
sub
jae
shr
and
jb
popf
mov
and
sbb
pop
data16
xchg
das
mov
incb
pop
xchg
scas
dec
mov
ja
pop
jne
sbb
fdivl
push
fdivrl
es
out
jb
loope
xor
fisttps
hlt
sub
addr16
push
push
mov
in
adc
inc
mov
inc
jg
cwtl
cmp
cmp
xor
push
push
or
sbb
aad
push
pop
out
sbb
rcl
lds
sti
jae
movsb
push
mov
inc
or
dec
cwtl
movsl
xlat
repz
repnz
icebp
mov
shll
ret
pop
jmp
arpl
add
lret
ds
call
roll
sti
pop
jno
inc
mov
outsl
daa
mov
icebp
jae
aad
pushf
cwtl
adc
sub
inc
cmp
mov
aad
sbb
sub
inc
pop
pop
and
dec
jecxz
and
or
cmp
cli
pop
dec
xchg
push
ds
sbb
and
cmpsb
mov
push
pop
imul
adc
dec
loope
push
xchg
int
inc
push
aaa
mov
jg
mov
sub
test
jb
dec
xchg
arpl
fs
dec
lahf
aam
mov
inc
or
and
dec
out
xor
aam
xor
and
clc
popf
push
sub
or
xchg
or
push
or
icebp
pusha
ljmp
sub
xchg
daa
cltd
inc
test
adc
mov
sbb
fcoml
sub
jno
or
add
aaa
push
das
sbb
adc
outsl
scas
jae
cli
add
repnz
mov
jno
sub
mov
mov
inc
add
stos
mov
jg
or
lods
sbb
jmp
adc
jbe
pop
test
push
outsl
imul
sbb
pop
push
stos
sbb
sbb
imul
xor
mov
loopne
xchg
negb
int
pcmpgtd
cmp
bound
push
adc
mul
adc
sbb
jnp
sti
adc
and
test
cwtl
push
loope
lahf
and
mov
adcb
cmpb
mov
or
popa
sub
mov
and
cmp
push
mov
mov
jo
fsubr
bound
fiadds
stos
lcall
mov
fwait
in
rcl
clc
dec
or
jl
and
dec
fs
mov
add
std
js
pop
outsl
pushl
arpl
or
data16
push
loope
outsb
ja
and
cli
wbinvd
add
notb
movaps
gs
cmp
push
notl
std
andl
sbb
popa
test
and
push
fistpll
mov
and
scas
mov
ss
adc
xor
lock
lcall
pop
add
js
stc
shl
jg
sub
mov
test
dec
aaa
sub
stos
cmpsl
out
jno
pop
jb
add
filds
insl
aam
sub
adc
enter
rorl
mov
sbbl
jae
dec
xchg
lea
cmpsb
xchg
push
add
push
outsl
mov
push
and
jle
or
adc
cmc
pushf
mov
or
stos
xorb
fdivrs
mov
mov
add
and
mov
movsl
pop
les
iret
inc
and
cmp
outsl
leave
lret
sbb
cmp
sub
xchg
xchg
sub
cs
mov
hlt
aam
aam
shll
bound
mov
adc
sbb
movsl
setne
jecxz
test
pop
pop
ja
mov
dec
mov
jnp
sahf
adc
in
jae
mov
mov
int
push
int3
out
cmpsb
mov
popa
mov
gs
add
dec
mov
fwait
mov
mov
sbb
mov
mov
mov
stos
push
lret
pop
pushf
insl
out
nop
jne
test
aaa
pop
mov
insb
stos
pop
jbe
push
das
stos
xchg
mov
push
loopne
decb
pop
repnz
jb
loop
xchg
rsqrtps
mov
fsts
out
repnz
out
movsb
xchg
jno
fs
push
push
test
fmull
arpl
cwtl
jo
loop
mov
or
shr
mov
cld
mov
pop
push
popf
adc
dec
mov
cmpsl
mov
insb
js
dec
repnz
push
xor
movsl
stc
loope
xor
or
sub
rcrb
xlat
sbb
adc
imul
cli
mov
insl
pop
test
aaa
add
xor
xchg
data16
push
mov
mov
fmuls
add
test
add
in
pop
xor
push
rcrw
ficoms
dec
rcr
cld
xchg
push
inc
mov
icebp
rorl
jp
lret
bound
into
xor
dec
mov
pop
cmp
lods
enter
sub
in
dec
add
or
cmpsl
pusha
sub
add
push
and
fdivrs
gs
inc
das
adc
bound
movsb
repz
mov
pop
rorl
addr16
pop
daa
mov
adc
test
pop
mov
mov
into
arpl
xor
faddl
mov
push
bnd
mov
fbld
xchg
imul
mov
mov
mov
sti
add
push
jbe
jns
jo
and
mov
cmp
scas
loopne
xor
mov
jecxz
aad
add
add
cmc
cmc
pop
jle
sbb
not
lea
sub
dec
add
lret
andb
inc
xchg
stc
xor
inc
push
push
outsl
xchg
outsb
das
xchg
mov
jo
loope
lds
xor
push
loopne
pop
cmp
and
test
mov
mov
push
sub
pushf
adc
xor
mov
push
jge
stos
cs
mov
mov
js
sub
xor
lahf
jmp
fadds
popf
aam
sub
rorl
inc
mov
lock
xchg
psadbw
jb
inc
push
jmp
nop
jp
add
pop
outsl
shll
push
addr16
sbb
ss
xor
mov
rorl
mov
in
mov
or
xor
minps
lahf
lea
stc
int
and
mov
cmp
jg
push
lret
test
insl
outsl
in
sub
dec
cmc
icebp
jbe
pop
push
cli
pop
inc
arpl
sbbl
mov
xlat
adc
xlat
inc
dec
ret
lret
repnz
aaa
and
into
lret
inc
outsb
and
rolb
aaa
xchg
fildl
sbb
or
dec
leave
sti
pinsrw
bound
mov
mov
sahf
pop
cs
aad
orb
shlb
jae
pop
push
push
stos
inc
xor
pushf
insb
popa
inc
test
inc
test
lods
dec
add
je
ss
inc
aam
cld
lret
push
int3
dec
in
xchg
lahf
dec
cmp
jecxz
xlat
pop
aad
sbb
pop
movsb
cli
sti
jae
cmc
jbe
push
scas
push
test
and
or
mov
test
jp
pop
jnp
imul
cmp
out
test
stos
test
jo
jne
addr16
sahf
push
lock
sub
inc
cmc
pop
xchg
call
cmp
mov
les
lret
sbb
in
mov
in
aas
xor
adc
aaa
mov
or
lea
sbb
movsb
cmpb
lds
mov
xchg
cmpsl
mov
icebp
jne
je
jle
pop
mov
popa
aas
jb
loop,pn
testb
cmp
jle
andl
cltd
pop
push
xchg
mov
push
jne
inc
mov
lcall
fsubrp
loopne
aaa
fists
testl
xor
xchg
arpl
stos
cs
daa
js
xlat
ljmp
mov
out
lock
dec
dec
test
lods
or
outsl
loopne
out
mov
pop
or
stos
cwtl
mov
aam
jg
push
dec
ret
imul
pop
ficoms
in
mov
dec
stos
or
loope
loopne
inc
jb
out
sub
mov
xchg
push
ja
outsb
adc
mov
cmp
mov
push
xor
jge
cmp
lcall
xor
sahf
mov
xchg
fnstsw
inc
mov
in
hlt
dec
fsubl
mov
push
cmp
inc
jecxz
sub
ss
testl
mov
jecxz
push
lret
push
filds
mov
lret
dec
sbb
jmp
add
xor
mov
jb
test
pop
jl
jne
scas
xor
int
mov
mov
es
mov
fcoml
lods
cmp
xchg
add
dec
ja
fiadds
mov
sti
fs
push
les
iret
jo
fs
mov
mov
mov
pushf
sbb
sti
je
imull
push
inc
jg
jb
in
cmp
ss
pop
cmc
fcoml
clc
add
push
xchg
inc
push
push
mov
ss
mov
mov
fstl
xor
repz
lds
mov
jmp
jle
dec
mov
push
js
das
dec
mov
add
pop
pop
aam
lahf
mov
dec
rorb
pushf
jae
sbb
pop
sub
outsl
cwtl
push
push
lea
loope
ficompl
mov
or
sub
xchg
or
adcb
push
cmp
jp
stos
lds
mov
inc
aaa
adcl
in
sub
sbb
int3
int
push
outsb
loope
pop
sbb
inc
fmuls
mov
popf
jae
std
addr16
int3
jnp
imul
cld
lods
subb
subl
xchg
sbb
mov
test
add
mov
cmp
push
ret
lods
test
pop
push
sar
pop
push
jg
jnp
scas
sbb
insb
std
scas
ficoml
dec
push
xor
inc
fs
cmpsl
in
stos
push
pop
shlb
aaa
push
mov
or
mov
adc
mov
jle
fstps
push
mov
cwtl
cmpsb
sbb
clc
mov
jae
cmc
aas
arpl
cmp
push
pop
das
lods
lret
xor
lret
popa
jle
mov
loopne
aas
daa
inc
sub
aam
adc
lahf
mov
mov
cmp
scas
sub
xlat
or
fsubrs
mov
jo
dec
mov
popa
push
mov
out
repz
fwait
jns
cmp
rcrl
push
mov
and
bswap
sub
jecxz
xor
enter
lcall
sti
mov
xor
lods
xchg
jmp
mov
cmp
push
lock
cmpsl
dec
jnp
or
ss
push
sbb
push
stos
pop
jae
lock
inc
push
call
or
push
sbb
nop
xor
xlat
xchg
mov
int3
mov
orb
xlat
jb
push
int3
movsl
mov
in
push
imul
pushl
jl
mov
xor
hlt
inc
fistps
lcall
sbb
mov
sbb
sub
dec
inc
aas
pop
pop
xor
hlt
loope
ficoms
stos
or
sub
lcall
and
xor
cmp
mov
inc
in
push
mov
adc
add
dec
push
les
ret
dec
test
test
pop
shll
xorl
scas
test
mov
movl
jp
cltd
cmpsb
shrl
mov
xlat
cmp
pop
pxor
mov
aaa
jmp
int3
jg
addb
scas
cmp
frstor
jae
push
mov
jle
out
mov
dec
adc
mov
or
repz
push
cs
cmc
in
daa
inc
pop
cmp
pop
add
push
aas
sbb
inc
mov
sub
test
sarl
loop
mov
aam
inc
jne
scas
jl
inc
sbb
add
jl
sub
jns
push
pop
les
pop
pop
arpl
dec
mov
adc
cmp
lods
add
out
sti
xchg
dec
xor
dec
push
stos
and
pop
xor
jle
lods
and
and
dec
jne
js
xchg
popa
mov
arpl
inc
mov
std
nop
test
sub
fcompl
test
add
addr16
out
and
addr16
adc
adc
aaa
mov
or
sbb
loop
call
test
or
mov
js
cmpsb
sti
mov
out
scas
dec
insb
adc
push
rolb
dec
sub
movsb
imul
jo
ljmp
mov
push
fiadds
sub
sbb
ds
scas
inc
xor
cmpsl
jmp
test
mov
subb
push
fadds
adcb
ljmp
push
jge
repnz
les
push
cmp
rorl
mov
cmpsl
inc
iret
rorb
xor
add
js
jp
jl
rorl
pop
adc
rcrb
adc
cmp
cld
lcall
idivl
mov
or
jle
push
sti
and
sub
andb
dec
xor
in
mov
fsubs
lret
cltd
mov
xor
push
icebp
jle
lret
lock
insb
xor
mov
shl
pop
loope
fbstp
ret
rcll
das
add
stos
pop
loope
push
popf
mov
dec
jns
jns
inc
jmp
int
mov
popa
stos
test
loope
inc
jb
in
sub
popf
rolb
popf
scas
in
testb
rolb
inc
dec
xor
imull
adc
cld
popf
popf
test
push
and
jnp
inc
lds
aad
jecxz
inc
adc
sti
jnp
dec
lea
push
mov
js
dec
push
iret
or
xchg
mov
cwtl
in
jo
inc
lcall
mov
out
dec
push
jl
lret
arpl
xor
push
aad
addr16
jo
mov
pop
jns
mov
add
bound
sbb
sbb
sbb
lcall
shlb
pushf
es
mov
pop
hlt
mov
lods
mov
adc
mov
cmp
cmp
inc
scas
cmc
jne
push
jno
add
cwtl
loope
shr
cmpl
jnp
xchg
dec
mov
mov
hlt
test
inc
push
lea
scas
repnz
sub
mov
push
mov
inc
in
shll
daa
push
test
add
sub
mov
movl
mov
subl
hlt
sub
sbb
dec
loopne
push
mov
cmp
push
xchg
mov
fwait
or
add
and
cmpsl
sub
mov
test
xchg
inc
shrb
or
and
mov
add
jno
lret
or
inc
movb
cs
add
cmp
add
aaa
fistpll
movsl
or
mov
data16
xchg
jns
cmp
inc
adc
jbe
push
in
dec
xor
cltd
xor
adc
adc
mulb
rcrl
loop
mov
sub
xchg
dec
iret
push
mov
repnz
xchg
lahf
repnz
ds
mov
sarl
sub
mov
popl
xchg
xchg
and
add
aad
aaa
xchg
dec
and
jge
xchg
push
in
mov
pop
ljmp
add
stos
sub
std
ret
mov
add
loop
arpl
mov
inc
imul
lock
cmp
pop
lahf
mov
fcoml
or
std
xchg
call
int3
scas
xor
push
repnz
test
movsb
sbb
hlt
ljmp
imul
repz
lcall
inc
es
inc
sti
movsl
or
aad
mov
fldenv
and
in
push
mov
pop
pop
inc
test
mov
sbb
inc
sahf
subb
lret
in
dec
xor
adc
dec
or
insl
leave
xchg
dec
jecxz
test
pop
fstps
xorb
arpl
cmc
icebp
cmp
loop
cmp
aas
xchg
std
in
ds
mov
fmuls
jge
lods
pushf
push
mov
mov
fucomip
ljmp
jmp
add
aad
sub
sub
ljmp
out
in
mov
loope
insb
out
movlps
dec
loop
push
sbb
enter
dec
loope
fadds
int3
inc
cmpsb
fisubrl
xchg
cltd
push
nop
into
cmp
fwait
mov
fldl
testb
cltd
fdivrs
inc
aad
aas
pop
push
add
mov
scas
pop
scas
cltd
gs
mov
clc
gs
out
cmp
xor
push
jns
lcall
push
cld
push
pop
sbb
ja
mov
mov
pushf
sub
ss
xchg
push
push
js
int3
call
sbb
push
movsb
mov
xchg
inc
add
les
or
push
push
lret
popf
repnz
lahf
xor
xorl
mov
xor
sbb
es
xor
ret
arpl
lods
add
pushf
mov
shl
ret
cmp
mov
xchg
out
aaa
aam
inc
std
mov
ret
adc
lea
push
insl
popa
mov
cmp
mov
xchg
fsubs
mov
xor
repnz
dec
xchg
pop
xchg
or
lea
xor
sub
pusha
hlt
les
fsubr
shll
outsl
xchg
incl
stc
cltd
les
insb
movsl
mov
js
mov
jmp
lods
lret
sub
push
lea
loopne
imul
push
in
push
bound
fsubrs
pop
in
sbb
push
add
lret
jmp
inc
into
ss
or
ss
out
mov
aas
fimuls
jns
aam
nop
mov
out
xchg
cmp
mov
incb
mov
mov
nop
mov
push
push
jnp
cmp
js
outsl
movsl
lods
mov
movsb
sub
je
push
mov
fs
push
mov
and
push
cli
xor
xchg
lcall
or
mov
inc
push
jns
aad
call
dec
jg
lahf
sub
stc
push
pop
es
cmc
xor
divl
ss
js
jecxz
fs
gs
xor
rcrb
xor
mov
in
jo
ret
mov
in
into
lods
pop
push
dec
sub
stc
loop
push
xchg
hlt
out
dec
dec
or
add
push
push
gs
pop
clc
aad
jb
and
int3
in
clc
push
xchg
mov
gs
fcoms
or
mov
mov
jo
sbb
mov
sub
adc
inc
leave
fnstcw
push
pop
push
and
int
fxch
or
test
outsb
push
cli
ja
pop
xchg
and
mov
mov
ds
xor
outsb
pop
cmp
pop
sub
add
data16
push
mov
jns
icebp
push
daa
mov
or
pop
xor
insl
cmc
out
sahf
or
dec
cs
pop
test
jle
in
inc
test
push
add
into
jo
mov
jnp
loopne
es
push
ljmp
and
adc
lods
xor
jp
leave
cmpb
ret
lods
ficoms
repz
test
ljmp
test
sbb
push
lock
push
fcomip
call
inc
pop
movsl
pop
or
dec
xlat
rcr
push
loope
mov
pop
fisttps
leave
stc
test
sub
dec
int
mov
xor
mov
and
push
cmp
stos
dec
and
lods
and
scas
adc
je
scas
rclb
lcall
xor
mov
adc
or
add
sub
xchg
out
popa
mov
lods
cltd
pop
push
push
push
xor
test
jecxz
xor
pop
ficoml
xor
insb
mov
fucomp
jns
clc
mov
fstpt
aad
cli
cmc
xchg
xor
xorl
dec
jg
in
dec
add
call
movsb
in
mov
mov
test
push
rorb
push
shl
jne
or
cwtl
mov
movsb
pop
mov
shrw
hlt
jnp
xchg
xchg
mov
pushf
sub
cs
iret
or
jmp
leave
dec
or
test
outsb
mov
jno
adc
add
mov
xchg
cmp
adc
les
aaa
inc
xor
and
push
pop
mov
js
sub
jle
mov
push
and
in
outsb
in
push
xchg
cs
mov
repz
or
stc
push
sub
fcoms
push
push
es
pop
or
or
push
loope
or
inc
add
nop
test
lea
dec
inc
dec
push
xlat
lods
pop
das
xor
adc
and
cmpsb
cmp
and
push
mov
xor
xchg
add
and
cmp
aad
mov
push
mov
adc
mov
cwtl
add
insb
loopne
sbb
fiaddl
xchg
repnz
int
dec
inc
dec
nop
mov
rcrl
jb
sub
faddp
pop
sbbb
adc
adc
add
dec
pushf
adc
int3
push
jns
cmp
cmc
aas
inc
cmp
test
mov
repnz
mov
fwait
xchg
int3
dec
mov
sahf
stos
push
pop
mov
inc
or
dec
add
dec
dec
leave
mov
push
or
insb
fs
sub
xchg
xchg
lret
les
out
pop
mov
jmp
push
add
sbb
push
dec
pushf
mov
in
jne
iret
jmp
iret
pop
lahf
adcl
xchg
in
ljmp
sbb
mov
sbb
jp
inc
dec
add
xchg
sub
and
ja
mov
mov
mov
add
sub
push
xor
push
filds
adc
and
sti
pop
jl
data16
and
mov
adc
out
push
fnstcw
inc
cmp
je
shrb
jae
testl
or
mov
adc
sbb
lar
push
sbb
fld
mov
mov
xchg
lret
loopne
sub
loop
sahf
out
adc
scas
pop
mov
mov
jae
adc
cmp
testl
add
imull
xchg
ja
lods
or
xchg
inc
in
mov
adc
xchg
push
shrl
sbb
dec
iret
ja
das
lcall
push
xchg
sub
adc
xor
repnz
cmp
movsl
xor
es
or
mov
xchg
push
ret
hlt
pusha
sub
pop
and
xchg
and
hlt
mov
sub
cmc
enter
imul
imul
int
mov
imul
pop
pushf
sbb
push
mov
dec
xchg
xor
in
sbb
mov
out
dec
xchg
inc
cmc
mov
push
sbb
int3
mov
lret
popa
pop
test
in
pop
in
imulb
insb
aam
pop
inc
jmp
jp
mov
and
and
lock
call
jns
inc
insb
adc
adc
push
repnz
inc
outsl
ljmp
inc
xchg
stc
fistpl
cltd
nop
mov
pop
sbb
push
sub
mov
in
into
add
imull
test
bnd
cmpsl
adc
xor
jns
cmpsb
jg
push
xor
lahf
cmp
repz
fldl
mulb
outsb
mov
inc
or
inc
dec
mov
ret
das
push
cmpsb
xchg
ja
mov
stos
je
dec
out
addr16
lods
js
into
or
in
mov
inc
mov
movaps
hlt
in
and
out
out
pop
loopne
iret
insb
or
push
pop
insb
nop
sbb
xor
ds
nop
xchg
push
leave
std
cmc
lds
mov
pop
and
push
sbb
pop
pop
scas
aas
insl
test
pop
inc
aaa
not
xor
xchg
rorl
push
or
cmp
add
mov
es
push
stos
sahf
pop
mov
xchg
out
pusha
dec
and
ja
call
pop
mov
xor
out
icebp
mov
sub
jae
sbb
pushf
out
xchg
mov
test
cmp
mov
dec
push
clc
pop
outsb
jg
jo
push
int
and
mov
lock
outsl
sub
hlt
into
mov
inc
xor
repz
sub
icebp
xlat
jbe
test
out
lahf
sbb
lcall
icebp
call
and
scas
addr16
stos
jo
jns
inc
pop
aaa
pusha
popf
adc
inc
cmp
imul
mov
xchg
lret
sbb
dec
test
je
add
adcl
cs
mov
cmc
in
mov
nop
cmp
push
jecxz
insl
add
sarl
inc
lods
inc
rclb
add
or
mov
cmp
add
pop
leave
jbe
bound
lret
aaa
ja
loope
inc
pushf
pop
iret
mov
mov
out
and
xor
cmp
cmp
and
stc
lret
lods
mov
fcmovu
sub
sub
ljmp
mov
gs
xorl
ja
xchg
ss
xchg
or
icebp
and
mov
pop
dec
repz
and
shl
or
cmc
jg
pushf
cmpl
psrlq
jno
push
imul
sbb
cld
loopne
and
mov
jge
call
mov
dec
imul
dec
aad
enter
mov
xor
xor
or
or
stc
push
xchg
andl
mov
insb
add
inc
mov
push
jns
nop
fnstenv
mov
dec
mov
imul
ljmp
jbe
sbb
xchg
loope
dec
xchg
dec
add
lret
fs
and
lds
mov
push
jnp
test
in
testl
cmp
adc
mov
mov
sti
int
jbe
adc
cltd
outsl
mov
mov
push
cwtl
pop
adcl
sbb
ds
push
jb
das
stc
subl
sbb
mov
fdivrs
push
pusha
mov
divl
add
sbb
call
push
inc
or
adcb
add
push
push
mov
dec
mov
or
aam
cmp
cli
push
test
shrl
nop
out
js
dec
ss
pushf
imul
push
pop
jle
push
popa
xchg
out
in
rdmsr
es
mov
mov
seta
pushf
scas
cld
sbbb
mov
sbb
stos
push
and
mov
sub
lahf
ret
popa
cmp
cmp
or
sarl
xor
and
cmp
mov
or
xor
shrl
in
subl
pop
movsl
les
mov
mov
jne
aas
mov
add
push
nop
divb
adc
popf
int3
xchg
push
sbb
jb
imul
inc
outsb
push
xchg
and
loope
icebp
cmpb
cmp
aad
fisttps
cmp
mov
push
adc
js
mov
adc
sbb
add
pop
add
push
sbb
jecxz
inc
pop
les
ja
mov
jo
test
lahf
movsl
dec
sub
add
loope
inc
mov
fscale
sbb
or
mov
sub
sbb
mov
insl
adc
pop
xor
dec
xchg
adc
cmp
cmp
imul
mov
cli
mov
fwait
push
es
inc
enter
push
or
mov
jnp
fiaddl
dec
enter
inc
pop
daa
cmp
cmp
test
mov
sti
icebp
filds
jp
ret
imul
es
pop
mov
inc
js
test
ss
notl
je
xchg
pop
dec
movsb
push
stos
shrb
popf
in
sbbb
repz
psrlq
or
js
push
jb
sbb
fsubrl
lcall
xchg
pop
pop
sti
ss
push
or
push
and
or
ds
shll
in
fdivl
iret
into
jle
sub
sahf
mov
ficomps
cld
addr16
push
pop
jl
outsb
mov
mov
fdiv
popa
lret
pop
jb
xor
lock
mov
pushf
xor
push
sbb
push
fidivrs
add
das
pop
daa
ret
std
cmp
imul
mov
insl
and
std
lcall
xchg
scas
pop
xchg
jecxz
mov
sti
pop
add
or
andl
subb
cld
loope
out
inc
lret
negb
aaa
add
mov
roll
into
data16
mov
mov
jb
in
stc
mov
jmp
in
stos
je
jnp
test
ret
dec
fucomip
fisubs
leave
mov
dec
dec
push
movsl
stc
and
in
xor
or
js
shll
outsb
scas
sub
ret
stos
or
ret
sub
test
repnz
psraw
and
adc
je
cmp
and
sub
or
inc
add
adc
mov
pop
pop
mov
daa
sbb
into
mov
add
push
movsb
cmpsl
stc
jo
jge
pushf
lret
clc
out
test
and
dec
mov
push
stc
testb
dec
imul
push
out
xor
roll
pop
add
or
mov
dec
add
daa
xor
jp
insl
jp
jecxz
cmp
xor
cmp
xor
movsl
push
sub
movb
test
scas
add
or
dec
adc
xor
lcallw
jge
test
adc
and
cmc
adc
imul
pusha
aad
clc
push
xor
jmp
dec
adc
iret
pop
out
repz
dec
in
xor
es
add
lret
clc
cwtl
mov
jl
adc
not
mov
test
outsb
cmpsb
xchg
repz
movsb
fdivr
xchg
pushf
push
or
out
popa
fstps
in
mov
cmp
cmp
xor
push
ds
jecxz
add
add
and
popa
xchg
mov
shl
pushf
pop
int3
mov
sbb
addr16
xchg
pop
movsl
ja
pop
inc
adc
mov
inc
daa
out
popf
iret
mov
cld
movsl
jmp
test
mov
cmp
inc
adc
xor
add
out
cmp
stos
pusha
lret
push
or
andl
fidivl
jl
shrl
outsb
pop
and
aad
pop
in
jae
pusha
ret
fldl
sub
aas
stos
shll
lea
mov
xchg
arpl
jecxz
lea
out
push
aam
bound
loope
cld
cmp
inc
test
or
mov
aas
mov
or
in
jne
aam
loope
cmpsl
ja
in
test
in
xchg
mov
push
add
call
jp
mov
scas
cmpsl
dec
jl
stos
std
xor
and
inc
mov
mov
jae
pop
mov
jb
int3
and
les
addr16
lea
xchg
mov
test
loope
iret
jae
inc
fldl2t
pop
out
mov
cmpl
les
sub
incl
jmp
xchg
add
ds
aam
jg
jbe
stos
rcll
mov
mov
inc
adcb
into
or
jns
jno
stos
mov
sub
in
shlb
gs
push
rol
dec
dec
scas
xor
sub
data16
mov
mov
or
pop
jle
dec
pop
jle
sub
mov
ret
mov
xchg
ds
mov
inc
in
sub
stc
es
jb
cmp
aaa
jns
dec
aad
outsl
cmp
ret
mov
scas
std
ss
or
lds
jmp
insb
movsl
xchg
or
icebp
lret
insl
add
sbb
or
push
dec
or
push
xchg
clc
in
push
movsb
dec
inc
and
push
cwtl
jl
cmp
xor
mov
cmp
jo
and
in
ds
mov
fsts
sub
xchg
cmp
jmp
jge
inc
loope
cmp
mov
out
xchg
mov
rcrl
cvttps2pi
adc
add
jge
mov
pop
and
xchg
add
stc
fisttpl
sub
push
arpl
sub
or
cmp
push
xlat
loop
in
sahf
nop
xchg
or
stos
jo
pop
inc
cld
jne
push
hlt
stc
rcr
push
add
outsb
pop
add
lret
ss
scas
pop
aaa
cmpl
aad
call
aaa
mov
push
loope
int
inc
mov
bound
sbb
nop
xor
and
sub
and
aaa
inc
jmp
sti
aaa
jb
pop
and
popf
pop
incb
push
aas
sbb
fs
xor
jecxz
lea
scas
lret
aaa
cwtl
inc
fsubl
mov
dec
jecxz
loopne
clc
hlt
ljmp
lock
cltd
add
ja
mov
jbe
stos
fwait
pop
scas
adcb
icebp
into
in
mov
cwtl
imul
add
pop
xchg
push
nop
aaa
cwtl
addr16
add
sub
imul
mov
lds
mov
or
inc
cmp
xor
jg
adc
xor
and
scas
inc
inc
jo
js
and
dec
cmp
fcoml
add
inc
and
cmp
mov
rorl
push
mov
cs
fadd
in
sub
cmpsl
in
adc
add
addr16
jo
repz
hlt
jmp
xchg
push
mov
dec
cli
push
xor
adcb
dec
sbb
orb
xchg
cmpsb
or
int3
out
rclb
hlt
adc
xchg
popf
xor
push
mov
imul
test
mov
pop
fiadds
rorb
rolb
jecxz
test
xor
push
mov
sbb
mov
pop
and
push
and
mov
mov
andl
pop
popf
mov
push
nop
orl
loop
inc
cmpsl
adc
js
cmp
icebp
call
mov
into
les
xor
and
adc
movsb
xor
push
pop
std
mov
pop
clc
xor
cmp
dec
mov
loop
dec
in
stos
loopne
xchg
pop
inc
and
pop
xchg
or
lret
xor
ret
push
sbb
add
mov
loope
mov
in
mov
pop
ss
int
and
xchg
jle
push
sbb
vmovhps
xor
int3
shr
xchg
pop
imull
jmp
aad
out
add
call
cli
and
cltd
fdivs
rcrl
push
sub
cmc
or
inc
add
data16
aas
dec
xchg
loope
inc
push
test
lds
or
jae
cltd
rcll
mov
shr
ds
dec
pop
xor
out
std
divb
movsl
or
xor
mov
xor
mov
shlb
insb
lret
ret
cwtl
mov
pop
stos
rorb
lahf
pop
sub
ds
lcall
movsl
inc
scas
inc
aaa
pop
jmp
call
popa
aad
cs
xchg
sbb
pop
enter
fcompl
rcll
sbb
push
test
add
jbe,pt
divl
xchg
imul
loope
mov
dec
and
xor
stos
sub
mov
sti
jle
enter
mov
pop
leave
pop
orb
cmp
sub
js
jne
inc
push
jecxz
push
movsl
mov
rol
shll
adc
sub
in
scas
jae
stc
leave
pop
mov
pop
sbb
les
adc
jbe
mov
dec
iret
jo
cmpl
inc
test
jp
cmpsb
in
rcr
cltd
sbb
add
mov
xchg
push
dec
pop
push
fisttpll
pop
xlat
rcrb
add
push
cmp
inc
cli
push
mov
faddl
cli
adc
pushf
push
imul
cmc
aad
aad
cmp
sub
dec
fwait
mov
and
mov
fmuls
adc
das
aad
inc
es
lret
adc
push
jmp
pop
into
push
nop
test
fs
fimuls
fstpt
xchg
and
int3
mov
pop
push
lret
xlat
add
cld
and
in
ficoms
push
out
xor
mov
test
movsb
fbld
pop
dec
outsb
rcll
xor
mov
mov
add
and
jmp
cs
dec
and
xchg
mov
outsl
bound
je
sbb
out
or
mov
push
lret
mov
lcall
push
add
jns
cli
pop
adc
dec
adc
outsb
xchg
xor
inc
push
popl
xor
out
push
and
push
push
mov
or
xor
xchg
lret
sbb
pop
out
mov
sub
dec
clc
int
cmpsb
daa
xchg
mov
pushf
push
dec
ret
subb
test
ja
je
push
sbb
and
push
popa
aaa
add
sarl
mov
or
mov
adc
dec
sbb
mov
test
outsl
adc
and
jg
add
fisttpl
dec
sub
lcall
mov
inc
mov
mov
cmp
xchg
shlb
xchg
inc
sbb
testb
pop
sbb
scas
sbb
outsb
imul
lock
sub
push
cmp
inc
inc
mov
fdivl
mov
lret
cmp
or
mov
arpl
cli
cmc
xchg
vmwrite
cmpsb
enter
loop
mov
push
xchg
jmp
stos
data16
cmp
add
out
cld
pop
divl
adc
popf
hlt
mov
push
xor
jbe
mov
getsec
sahf
sub
cmpsl
out
cmc
in
lret
xor
and
inc
pop
insb
test
in
pop
ss
mov
jle
jmp
jo
add
int3
hlt
or
imul
movsb
jae
add
sahf
pop
roll
jae
mov
mov
pop
mov
outsb
adc
adc
adc
or
stos
lea
cmp
pop
pop
or
jb
ja
push
pop
cmpsl
push
xor
xchg
push
imul
and
ss
sarb
mov
xchg
mov
call
sub
mov
dec
fld1
fidivrs
lea
add
call
rorb
pop
add
shlb
leave
pushf
imul
lret
dec
or
xchg
xchg
cmp
xchg
add
and
mov
movb
xchg
jg
mov
scas
shrb
xchg
repz
and
mov
lahf
sub
ret
sbb
scas
out
call
aaa
pop
add
and
gs
adc
out
rolb
roll
jbe
lret
pop
test
vmovddup
sbb
or
jae
jne
inc
imul
jg
and
add
call
lret
sub
dec
or
xor
repnz
xlat
lods
or
jmp
or
js
xlat
fstpl
mov
mov
orb
js
jp
xor
in
int
xor
inc
sub
xlat
and
shlb
jg
iret
jne
pop
arpl
sub
xor
inc
and
xchg
sub
pushf
mov
lock
adc
movsb
inc
fcoms
push
or
cmp
mov
mov
scas
xchg
pop
cmp
mov
out
pop
scas
dec
jne
pop
cmp
iret
scas
xor
mov
push
dec
inc
sarb
pusha
fidivs
popf
jp
pop
mov
xchg
or
and
adc
fildl
inc
lods
filds
leave
nop
loopne
push
ljmp
mov
cmp
pop
ret
cli
mov
mov
mov
push
add
rcr
test
hlt
and
subl
cmpsb
sbb
movsl
mov
sbb
pop
and
mov
xchg
data16
xor
inc
push
add
ret
fdivl
dec
sub
lods
inc
cmc
imul
hlt
xor
out
fxch
jp
lcall
les
in
ljmp
lock
scas
jae
fstps
fs
ds
leave
lock
stos
shrb
xor
es
dec
cmp
jle
xor
fsubrp
pop
and
and
fists
inc
cmpsl
or
shrb
stos
clc
pop
mov
adc
push
or
leave
and
popa
xchg
lods
mov
mov
pop
in
push
pop
add
and
or
dec
int3
add
mov
aaa
mov
adc
mov
popa
xchg
call
lcall
rcrb
gs
hlt
inc
and
adc
ljmp
movsl
mov
mov
mov
sub
stos
jl
cmp
xor
lds
subb
lods
or
lock
stc
pop
popf
inc
mov
ds
add
jecxz
lret
mov
ret
xchg
fidivrl
mov
sub
aad
xchg
iret
ss
shr
mov
push
stos
cmp
add
test
xchg
lcall
push
sub
mov
out
pop
leave
lock
sub
jle
mov
call
data16
mov
fistpl
lods
mov
jge
orb
rclb
das
xor
cmp
aam
bound
adc
shll
adc
pop
popf
and
cmp
sbb
and
cmpsb
repz
fcmovnbe
mov
lods
andb
dec
je
jo
dec
mov
scas
rcl
imul
gs
insb
out
jne,pn
ljmp
cmp
and
and
adcl
xor
ja
mov
lods
cli
call
sub
iret
sub
sub
sbb
movsb
inc
pop
ja
cmp
jb
hlt
and
adc
mov
dec
mov
mov
pop
inc
mov
adc
int3
int3
daa
dec
inc
into
into
lods
fistpl
inc
inc
cltd
sbb
sbb
fiadds
or
jl
pop
loop
leave
fbstp
and
insb
fdivrs
mov
lret
cmp
movq
jbe
fwait
and
out
mov
outsb
mov
fs
xor
mov
jge
mov
cltd
xchg
mov
lcall
jecxz
ror
jb
inc
inc
lea
fisubrl
xchg
adc
xor
push
ss
jb
sbb
andl
xor
ret
popf
mov
out
xchg
xor
loopne
push
fxch
out
pop
xchg
jnp
std
hlt
into
push
pop
sub
sti
bound
sti
pop
mov
imul
movsb
pop
sbb
je
sub
and
cli
push
jl
dec
or
add
lret
xchg
insb
push
sub
inc
imul
pop
jbe
adc
push
hlt
mov
mov
pop
mov
nop
clc
pop
jno
shrl
pop
fs
push
xchg
sti
or
add
pop
inc
dec
sbb
adc
push
fcom
jne
call
inc
xbegin
cmp
aas
das
loopne
ss
push
cmp
jmp
in
insb
ss
mov
jne
adc
fstpl
cmp
pop
subb
push
mov
mov
mov
and
loope
ja
cmp
fisubrs
push
sbb
add
xorb
mov
inc
scas
jecxz
cwtl
pavgw
loop
rcll
out
pop
sub
sub
mov
test
inc
and
imul
fadds
rolb
fwait
je
and
mov
xor
jnp
sti
mov
xchg
cmp
cld
jae
xchg
adc
fistl
js
scas
add
lret
or
clc
leave
add
test
aaa
pushf
mov
pusha
pop
xor
pop
btc
sbb
adcb
ljmp
mov
dec
push
mov
and
mov
sti
hlt
push
mov
ja
cltd
ret
or
frstor
dec
inc
xor
rcrl
jne
xchg
negl
inc
cmp
pop
sti
jb
xchg
push
adc
pop
inc
mov
testb
jno
jp
pop
xor
mov
in
ja
push
sbb
jns
adc
data16
sbb
ljmp
lea
addr16
sub
mov
rcr
orl
sbb
xor
mov
add
stos
enter
mov
scas
sub
je
cmpsb
mov
pop
in
add
popa
dec
popf
repz
outsl
adc
push
mov
es
and
mov
push
dec
cltd
mov
sbb
inc
xchg
mov
lcall
sbb
loope
and
add
push
lret
mov
enter
cmpsl
cmp
jbe
hlt
or
sbb
pushf
shrb
fnsave
enter
shrl
test
call
cmp
push
mov
jp
sahf
aam
lock
jecxz
mov
into
push
and
add
xlat
push
mov
mov
cmp
sbb
and
or
jecxz
insb
jbe
iret
mov
mov
mov
mov
xorb
push
movsb
js
jno
xchg
push
mov
test
mov
xchg
jbe
push
xor
fwait
int3
fs
lds
mov
test
pushf
adc
imul
testl
fisubl
jne
sbb
iret
sti
insb
sbb
shl
nop
aas
jb
jg
movsb
mov
jne
mov
mov
dec
push
ficomps
jbe
sbb
sti
shll
and
enter
lcall
imul
gs
and
das
mov
loop
out
adcb
loopne
int
loope
imul
fsubl
dec
scas
sbb
test
test
pusha
cs
in
aad
in
xchg
les
in
imull
mov
inc
lock
negb
cs
repz
cmp
push
pop
sbbb
test
rcrb
outsb
sbb
sub
inc
xor
je
mov
aam
stos
shll
push
mov
push
popf
jnp
fsubl
inc
lret
aam
imul
out
in
push
cmp
mov
popa
mov
add
fildll
xchg
jns
pop
pop
xchg
scas
insb
mov
dec
and
lock
sbb
xchg
cmp
push
addb
dec
xchg
je
cld
enter
push
hlt
repz
pop
push
ret
jae
sbb
mov
scas
mov
sub
sbb
jp
cmc
push
jg
in
and
dec
pusha
imul
loop
nop
mov
cmp
push
sahf
jmp
cmp
jns
les
ja
outsl
mov
push
adc
sbb
jmp
push
sar
xlat
push
sub
daa
fbld
lds
jg
ljmp
jmp
mov
sbb
push
stos
pusha
fs
ret
insb
inc
bnd
cmp
in
lcall
ja
push
mov
movsl
in
pop
and
push
aaa
cld
mov
push
fs
or
mov
jmp
lock
dec
push
sarb
add
ficoml
pop
sar
mov
lret
push
imul
iret
out
fcmove
xchg
mov
push
push
aaa
or
loope
fnstcw
icebp
sbb
push
add
daa
movsl
testb
mov
and
cmp
inc
scas
jnp
xor
jo
pop
push
enter
xchg
cwtl
xchg
and
in
mov
fucomi
cli
add
cltd
add
daa
scas
jl
mov
pop
mov
inc
sbb
mov
insl
divl
scas
into
jae
add
add
inc
inc
aam
pop
jecxz
fcmovbe
sub
shlb
xchg
add
loop
ljmp
les
pop
out
push
add
cmc
rcrl
ret
mov
out
insb
stos
test
mov
mov
pop
testb
xor
or
sub
dec
and
jp
movl
xchg
in
out
popf
xor
lret
mov
and
and
dec
in
cld
push
push
jnp
ljmp
xor
inc
pop
ja
mov
icebp
mov
fndisi(8087
inc
jmp
cltd
mov
fs
mov
push
or
dec
lret
loopne
std
popa
jae
lahf
mov
lcall
into
aam
cld
pop
push
pop
jle
lea
mov
push
addr16
lods
scas
je
mov
mov
lods
mov
stos
fsubrl
out
shlb
add
testl
std
or
jmp
mov
in
dec
mov
add
xchg
adc
repnz
push
ror
mov
lods
sbb
and
push
fs
faddl
adc
call
fs
jg
daa
mov
jle
add
inc
outsl
jae
sbb
jns
inc
push
mov
inc
jecxz
movl
and
and
fldt
mov
mov
sub
sbb
mov
sbb
or
cmc
cwtl
loope
jb
out
and
mov
mov
xor
shll
cmp
sbb
and
mov
gs
xchg
mov
push
out
sub
xor
lods
lods
test
mov
notl
xchg
adc
cmc
pop
dec
mov
adc
cmc
hlt
in
xchg
popa
lods
mov
and
out
mov
sub
pop
out
push
push
or
push
daa
pusha
pop
lcall
nop
cli
jbe
jl
adc
pop
dec
mov
inc
xchg
mov
sub
imul
imul
pop
push
xor
outsl
aad
xor
iret
in
xor
shr
test
flds
push
rcrb
sub
sbb
push
mov
sbb
add
xchg
fnstenv
push
jmp
ret
jnp
dec
xchg
push
inc
sbb
and
jp
mov
loopne
pop
xchg
repnz
popf
cmp
pop
sub
push
xchg
jbe
cmpsb
fbld
outsb
repz
jmp
in
mov
dec
xor
cs
fistpl
in
sub
jmp
hlt
push
fists
in
imul
dec
or
lock
push
jl
incb
adc
cmpb
xor
into
push
pop
popf
jecxz
testb
daa
and
jmp
shrl
add
iret
stos
outsl
jg
shll
sbb
lahf
fldl
ror
mov
stos
mov
jnp
mov
sub
les
mov
pushf
sbb
dec
cmpsl
stos
cmc
cmp
push
mov
idivl
fists
pop
mov
lods
jge
mov
mov
sbb
pushf
jmp
out
or
push
pop
cmpsl
jp
out
sub
sbb
inc
lcall
sub
divl
adc
pop
test
cmc
sub
push
movsb
jmp
xchg
push
in
loop
sbb
into
inc
and
popa
mov
sahf
sbb
nop
push
jp
dec
jecxz
mov
inc
mov
mov
mov
sbb
fs
les
subb
push
stos
repz
fmulp
mov
ljmp
cmp
dec
cli
int3
test
rcrl
inc
test
xchg
jl
sub
jmp
test
or
add
ret
lods
lret
push
mov
sbb
mov
cmp
loope
lods
sbb
bound
jns
aas
shrb
and
in
xchg
add
pop
sti
sub
imul
jmp
mov
dec
scas
movsb
addr16
cmpb
push
adc
sub
flds
aam
pop
in
mov
popa
xor
arpl
mov
or
popa
mov
mov
push
aad
ljmp
jge
mov
mull
pop
mov
sbb
cmp
int3
sbb
xchg
push
les
sti
ds
pop
sub
in
jbe
lret
xchg
inc
aaa
push
ret
dec
cwtd
fwait
mov
dec
ljmp
jnp
adc
std
repz
add
adc
cmp
push
test
int
in
cli
mov
mov
in
and
xchg
adc
adc
mov
jmp
fcmovnb
sbb
jne
or
mov
push
adc
or
mov
mov
push
imul
into
fdivrl
stos
mov
inc
int3
or
mov
stc
outsl
fwait
add
rcl
ja
sbb
ficompl
xor
cwtl
mov
imul
scas
fwait
scas
mov
fsubp
imul
jl
cmp
mov
addb
pushf
popl
or
iret
std
mov
out
scas
adc
or
push
inc
xlat
mov
add
sarb
stos
subl
stc
lret
add
jmp
mov
cmp
and
mov
fld
stc
stc
pop
and
pop
jo
xchg
xchg
insb
enter
outsl
inc
into
add
nop
jbe
aas
mov
leave
cltd
adc
jg
push
in
bound
pop
out
mov
jmp
les
ficoml
add
sahf
adc
xchg
les
xchg
adc
into
xor
cld
and
mov
aas
rcrl
sbb
pusha
push
lock
movsb
push
adc
mov
es
mov
push
inc
inc
and
adc
xchg
mov
mov
les
cmp
out
int3
adc
in
mov
loope
les
icebp
jo
out
push
aas
push
movl
fs
roll
push
pop
inc
sub
or
mov
xchg
lods
test
outsb
arpl
sahf
pop
add
pop
jp
shr
fnstsw
jp
gs
nop
imul
jne
lahf
sahf
xchg
fs
enter
negb
pop
stos
fchs
scas
jnp
mov
in
mov
data16
or
cmp
jge,pt
mov
mov
add
xchg
inc
cmp
dec
nop
bound
aas
decl
mov
in
mov
push
sub
pop
sbbl
cli
sub
out
outsl
in
add
insb
ret
lret
mov
pop
lods
push
adc
les
nop
xchg
mov
rcll
cmp
fldl
jne
xchg
xchg
mov
push
lods
in
jns
add
lds
mov
dec
add
repz
xchg
mov
fistps
dec
outsb
gs
dec
enter
lea
inc
outsb
les
xor
or
cmp
ss
push
cltd
mov
ret
int3
fadds
inc
cmp
cli
mov
sahf
and
mov
lahf
sub
int3
sarl
push
mov
int3
shll
xchg
aas
test
gs
in
mov
jo
mov
or
movsb
push
icebp
insl
pop
add
insl
adc
repnz
loop
mov
mov
insb
dec
mov
into
mov
lahf
das
mov
frstor
pop
hlt
out
lahf
cmc
push
dec
mov
pop
insl
sti
fcmovnb
les
hlt
inc
adc
mov
cmp
aam
mov
bound
lret
je
sub
jnp
adc
inc
jecxz
mov
enter
ds
jmp
push
aas
jne
mov
dec
sbb
test
testl
out
jns
negb
aad
sbb
cmp
in
push
cmpsb
je
sbb
xor
or
scas
movsl
cmc
nop
push
mov
and
aad
dec
movsl
add
pop
call
js
arpl
mov
cld
xor
add
mov
mov
lahf
xchg
xchg
divb
test
daa
jge
jbe
in
cmc
jp
push
ret
out
shlb
sub
adc
fwait
pop
pop
stos
fldenv
cltd
into
sub
adc
lock
adc
ret
mov
jecxz
subb
mov
jne
lahf
insl
or
mov
nop
ds
popf
sub
push
or
shlb
sub
ds
shr
push
outsb
and
and
dec
ss
push
repnz
cmp
in
cmp
pushf
push
int
xchg
fdiv
cld
out
adc
js
js
or
stos
adc
or
and
dec
std
jg
arpl
pop
jge
repnz
and
test
push
ret
decb
imul
mov
jbe
mov
ret
mov
adc
pop
sub
mov
jecxz
xorb
lret
jnp
sbb
xchg
push
inc
call
pop
pop
push
in
mov
movsb
repnz
imul
mov
loop
ss
xor
hlt
lahf
jne
dec
in
or
xor
lahf
js
pop
fisubrs
and
testb
ja
add
and
cwtl
and
dec
outsb
cmp
rcl
inc
bound
or
lret
dec
mov
and
popl
cmp
mov
add
in
daa
adc
out
popf
xchg
movups
jnp
push
mov
test
jns
stos
push
ja
cmp
cmp
sbb
repz
call
mov
or
or
cli
aam
cli
dec
sub
loopne
sarl
jl
lods
jae
lret
test
loope
xor
stc
es
or
or
in
add
hlt
test
and
mulb
dec
inc
cli
sbb
sbb
movsl
pop
and
mov
fwait
pop
cmp
lods
xchg
pop
xchg
loopne
das
xor
adc
int3
pop
out
sbb
mov
cmpsb
cwtl
dec
popf
or
cmp
gs
push
loope
push
push
mov
xchg
dec
sub
sub
decl
inc
nop
imulb
or
dec
mov
sbbl
aas
mov
cmc
fsubs
fwait
mov
dec
insl
mov
aad
sbb
cli
push
xchg
sbb
lcall
test
inc
inc
cmpsl
mov
out
movsb
sub
or
imul
or
cld
stos
adc
push
clc
xchg
cmp
cmpsb
lock
popf
push
and
movsl
shll
inc
shlb
push
cld
mov
jne
fs
xor
shld
ficoms
arpl
mov
loop
insb
mov
out
fmuls
cmpsb
pop
mov
sti
dec
jecxz
jbe
rol
pop
push
lahf
adc
jb
xlat
and
sahf
inc
out
je
inc
mov
pop
push
xchg
push
dec
cltd
dec
and
pushf
push
lret
pop
and
mov
data16
dec
fisttps
imul
or
push
dec
push
scas
dec
lock
push
cmp
in
bound
int
and
sar
lahf
xchg
xorl
scas
sbb
dec
data16
xchg
dec
lahf
sbb
cmp
fucomi
out
out
in
xor
repz
sub
xchg
push
dec
dec
pop
jo
inc
cmp
in
xor
in
out
and
pop
out
jbe
dec
or
or
and
mov
in
dec
push
sti
mov
sbb
fstps
sahf
mov
outsl
pop
cld
test
or
adc
cmc
mov
xchg
xor
jmp
ret
mov
push
test
mov
pop
pop
addr16
and
loop
shll
mov
pusha
pop
sub
jne
jl
and
sbb
jl
jne
loop
rolb
loope
sbb
js
lds
cmp
out
pop
jecxz
pop
lods
xchg
cmc
cltd
pop
test
loopne
pop
xor
sysexit
mov
or
addr16
xchg
push
imul
fstps
jp
mov
xor
mov
imul
repz
lock
push
mov
mov
inc
xlat
enter
repnz
xlat
lods
js
fisubrl
jbe
fimull
xor
les
and
sbb
popa
cmp
imul
ds
adc
call
dec
into
loopne
xor
and
aad
jae
movsb
jns
popa
sub
or
lea
inc
addr16
xchg
xor
mov
repnz
stos
movsl
cmpsl
sub
xchg
pop
dec
xchg
mov
mov
popf
xchg
mov
xchg
adc
cli
call
lods
clc
push
mov
cltd
adc
add
ret
push
icebp
xchg
mov
and
cmp
addl
add
or
pop
cmp
std
movl
out
adc
dec
dec
xchg
push
dec
mov
out
dec
adc
test
sub
aaa
adcl
pop
push
push
les
jmp
inc
mov
dec
cmp
or
int3
insl
fsubs
int
xor
push
fsub
int3
repnz
xor
mov
enter
dec
add
inc
mov
les
sub
scas
jo
aam
jne
sbb
fsubrl
fimuls
push
pop
cmp
jns
in
add
and
inc
pop
mov
aaa
push
imul
sbb
mov
popf
pop
or
cmp
arpl
inc
in
xchg
jae
in
nopl
fmul
push
outsl
jp
jno
dec
hlt
pop
cmpsb
adc
pop
fbld
cmp
inc
pop
jp
aas
test
adc
jg
pop
js
sbb
lods
or
mov
es
pop
pop
adc
pop
jge
mov
sub
or
adc
leave
push
add
mov
sbb
rorl
jge
add
aam
xchg
push
lods
aam
dec
dec
rolb
pusha
sub
mov
mov
mov
cmp
imul
pop
stos
aam
test
icebp
push
dec
inc
xor
pop
sub
cltd
sub
xchg
push
jecxz
mov
test
aam
sub
add
fimuls
dec
std
repnz
cli
into
out
notl
push
sub
mov
call
sbb
push
repnz
sub
lcall
aas
int3
add
sbb
or
cmpsl
imul
insb
dec
loopne
xor
inc
mov
pop
hlt
or
repz
call
mov
adc
adc
mov
xchg
sbb
push
pop
sbb
mov
les
and
and
push
mov
insl
or
mov
xchg
stos
lds
arpl
daa
dec
xor
push
lret
and
call
mov
popf
aad
mov
push
movsb
and
dec
mov
popf
jecxz
jle
cmp
fimuls
mov
xchg
jno
push
pop
push
fs
out
pop
repz
mov
cwtl
mov
mov
imul
mov
clc
push
add
insb
shlb
sub
sub
push
jb
mov
push
adc
mov
inc
add
or
shlb
xor
adc
ss
add
adc
or
xchg
mov
push
out
jecxz
xchg
mov
mov
in
repnz
repz
cmpsl
jnp
out
mov
xchg
inc
arpl
mov
jge
cmp
push
mov
mov
pushf
into
ds
sarl
fldl
mov
mov
insl
pop
push
sbb
adc
push
and
cmpsl
std
aad
in
repnz
jns
jbe
subb
jg
jle
popf
xchg
pop
push
pop
mov
std
push
add
mov
movsb
jp
out
dec
fidivl
sub
repz
ret
jg
neg
daa
scas
jmp
cwtl
pop
ds
inc
pusha
xor
js
aaa
sti
mov
jne
call
cmp
int
push
dec
lcall
sub
mov
movsl
inc
sbb
das
push
xor
fsubrs
cmpsl
vpmulhuw
in
push
das
shl
sbb
in
in
lret
or
jnp
push
mov
repnz
cmc
mov
mov
ljmp
test
dec
sbb
scas
gs
shrb
inc
xchg
lea
pusha
pop
scas
xor
push
adc
mov
mov
mov
rolb
sbb
sub
mov
ret
sub
xor
ficoms
loope
cmpsl
iret
dec
popf
cmp
stos
inc
jnp
sbb
add
adc
stos
fisubl
cltd
out
mov
movsb
aaa
dec
and
lods
pop
sub
addr16
jae
data16
dec
jmp
js
push
jmp
out
outsb
push
insl
push
addb
dec
int3
ljmp
push
cmpsb
and
mov
cmp
push
cmp
inc
leave
fnsave
sti
fimull
outsl
pop
xor
aam
outsb
call
cmp
lret
data16
fiaddl
popa
imul
push
or
mov
hlt
xchg
scas
sub
outsl
scas
cmp
hlt
inc
xchg
daa
add
daa
fs
jle
addr16
mov
inc
mov
add
or
int3
mov
sub
pop
cmp
inc
and
xlat
mov
loopne
xor
xor
int3
mov
out
adc
jmp
mov
cmp
cmp
lret
jle
mov
xor
fcmove
repnz
adc
dec
fldt
mov
out
or
shll
lahf
lret
dec
cmp
jo
push
xlat
fcmovnu
jno
fs
xor
jno
pop
js
push
ljmp
aas
jg
or
mov
in
pop
loopne
iret
lcall
leave
out
add
jnp
loopne
lods
imul
adc
inc
outsb
mov
jne
out
adc
out
jge
add
push
cmpsl
adc
xlat
mov
push
inc
sar
popa
cltd
mov
mov
aaa
aad
in
xchg
les
cmp
sbb
dec
pop
mov
pop
dec
subb
inc
in
sarb
daa
cmp
mov
movsl
xchg
add
lahf
out
pop
je
ds
shrl
insl
stos
aaa
xchg
fidivrs
jmp
jp
pop
pusha
loope
fcmove
call
push
rorl
clc
fbstp
pop
xlat
aaa
xorb
arpl
push
jp
mov
adc
sarb
out
imul
mov
xchg
mov
jp
cmp
and
fwait
jb
sti
adc
xchg
jle
xor
loop
in
lods
aaa
imul
sub
sub
fldl
ss
insl
cs
jnp
push
jbe
sahf
rorl
sub
xchg
or
imul
mov
cmp
inc
jge
fsts
fidivrl
lret
stos
push
jno
xchg
test
and
or
cmp
sub
nop/reserved
popa
mov
cwtl
xchg
mov
js
ret
nopl
xchg
jge
push
mov
ret
dec
dec
fstps
stos
or
fsub
movsl
or
mov
mov
lret
fidivrs
icebp
sub
mov
jb
and
mov
pop
clc
mov
idivb
inc
jle
testb
cmpsb
fiadds
add
dec
fnstsw
movsb
jb
rol
inc
push
into
nop
pop
mov
lcall
cmp
fwait
and
ret
jp
mov
add
cltd
test
ficoml
and
hlt
imul
push
sbb
imul
icebp
rorl
ljmp
push
nop
pushf
pop
sti
bound
jnp
cld
inc
test
mov
int
pop
dec
cmpsl
in
pop
rcl
fwait
and
idivb
aad
and
add
sbb
and
fnsave
jo
and
fs
jl
push
mov
ret
lcall
ret
push
fneni(8087
fldl
mov
inc
sbb
push
mov
insb
mov
fsubl
das
mov
jae
dec
mov
pop
arpl
sbb
adc
in
loop
dec
push
xchg
ljmp
and
test
stc
fwait
sbb
push
cwtl
sbb
jbe
mov
out
adc
jecxz
andl
daa
out
out
xchg
test
push
rol
mov
cmp
mov
in
loop
movsb
stc
lcall
sbb
cmp
push
xor
sub
mov
or
pop
mov
mov
mov
es
mov
or
cmp
pushf
mov
or
mov
popa
mov
xchg
pushf
into
add
stc
ds
ret
xor
mov
jmp
data16
sarb
mov
add
pop
cmp
sub
and
aad
out
push
fcoml
push
imul
flds
inc
adc
or
fwait
out
mov
cmp
leave
lahf
xor
inc
fnsave
xor
push
cmpb
and
cmp
dec
iret
psubsw
test
or
scas
mov
dec
insb
out
push
fs
jne
inc
std
cmc
ret
dec
push
ja
mov
cli
push
push
pop
das
bound
mov
xlat
lcall
out
push
mov
dec
fldl
lods
mov
push
out
shll
notb
push
cmp
cmp
int3
sub
in
add
std
ret
push
add
or
xor
imul
dec
cmpsb
fsubrl
jp
lret
faddl
push
pop
imul
jp
or
jmp
test
mov
out
jns
jl
cmp
adc
mov
int3
add
out
mov
push
pushf
lcall
pop
fdiv
inc
add
or
test
sbb
loope
inc
mov
fimuls
xlat
and
int
call
jb
dec
nop
sahf
cmpb
push
xchg
fwait
iret
pop
inc
mov
mov
test
into
mov
mov
pop
add
jno
xchg
mov
inc
pop
or
popf
adc
mov
out
test
lds
or
loop
fwait
xchg
inc
divb
es
ljmp
stos
int
add
pop
mov
sbb
adc
xlat
mov
mov
std
adc
mov
mov
lods
fcoms
ret
mov
xor
inc
mov
test
cmp
pop
fwait
nop
mov
push
dec
sbb
ficoms
cmc
rcr
sub
shlb
cmp
repz
add
mov
cmpsl
mov
aaa
das
sub
xlat
sub
or
push
pushf
mov
fadds
out
xchg
jge
test
xchg
adc
push
iret
lods
xor
fdivr
cmpsl
mov
repnz
inc
xor
sub
jb
sbb
aas
aam
and
adc
xchg
mov
mov
imul
inc
scas
mov
aam
dec
mov
and
inc
xor
fstps
js
xchg
jmp
mov
xchg
sub
push
inc
ret
mov
scas
mov
jge
mov
sbb
mov
mov
es
loop
aam
lahf
jmp
jecxz
dec
clc
enter
sub
or
aam
sbb
sbb
repz
inc
push
adc
cmp
sbb
int3
je
and
fsts
mov
xchg
outsb
or
cmpsb
rolb
xchg
ljmp
jl
xor
clc
stc
jbe
repz
jecxz
mov
fisubrl
leave
jnp
in
cmp
cmp
mulb
xchg
lret
push
scas
cmp
enter
imul
mov
ret
cli
fdivrs
roll
push
stc
cmpl
ret
add
leave
loopne
inc
lcall
leave
xor
cmp
xlat
pop
addb
mov
mov
aad
lock
stc
jae
mov
je
dec
je
popf
sti
pop
and
out
das
xor
cmp
add
mov
in
mov
pop
cmp
pop
jbe
repnz
cli
xchg
ret
lret
daa
loop
add
cld
dec
stos
sti
dec
nop
test
pop
pop
mov
mov
cmp
jg
push
out
push
cmp
daa
jge
mov
arpl
psubsw
add
dec
sub
stos
out
out
pop
sbb
push
mov
lea
movsb
aas
jno
sbb
out
lods
imul
or
push
or
loop
addl
fwait
and
push
lock
or
imul
xor
xlat
cld
lcall
sub
fstpt
fstps
lea
insl
lods
pop
cmp
xor
mov
dec
enter
call
nop
lea
push
out
jo
test
out
in
add
mov
xor
lcall
dec
add
mov
cmp
sbb
and
call
loope
popf
add
lods
aad
and
dec
xchg
fcomip
pop
pusha
hlt
pop
xor
sbb
pop
jmp
push
out
in
test
jge
jbe
lods
inc
cld
xchg
sub
fucomip
or
lret
add
outsb
sar
xor
out
jne
add
xor
loop
sbb
sub
push
adc
or
addr16
test
fwait
xchg
lods
cmp
int3
dec
int3
shll
dec
push
inc
shlb
ret
ret
push
rsqrtps
rcrb
pop
cmp
dec
mov
scas
insb
xchg
xchg
stos
mov
in
jmp
popa
movsb
adc
sub
outsl
movsl
popa
dec
imul
aaa
jnp
mov
mov
xor
sahf
mov
jl
mov
mov
leave
testl
xchg
cmp
mov
divb
imul
and
pop
push
dec
jne
add
popf
loop
mov
push
in
pop
fsts
and
test
adc
cwtl
sub
or
jo
pop
es
sbb
and
mov
jg
cltd
popa
std
push
in
pop
xlat
mov
repnz
inc
shll
fmulp
sbb
int
or
lret
repnz
adc
xor
mov
mov
push
insl
sbb
sub
sub
lods
mov
int3
aaa
sub
dec
filds
cmp
std
cs
and
and
pop
mov
fcomi
jne
std
mov
bound
scas
adc
neg
sbb
pop
in
push
xchg
mov
sbb
mov
push
in
push
fidivrs
xchg
inc
inc
inc
xchg
les
mov
hlt
xor
and
dec
popf
into
xor
xchg
lcall
scas
mov
outsl
pop
dec
in
cmp
mov
in
adcl
pop
xchg
and
pushf
cmp
dec
mov
mov
jns
mov
out
inc
dec
pushf
addr16
fwait
lret
pop
fiadds
xchg
js
mov
aas
xchg
mov
and
std
jne
mov
jg
ds
jle
sbb
clc
lcall
int3
inc
jg
xchg
sbb
insl
rol
arpl
cs
movsb
xor
sbb
lock
xor
xchg
jge
add
cmp
outsb
rcll
sub
cmp
cmc
pusha
sub
jb
lcall
xchg
xchg
mov
dec
movsl
add
jg
jb
cmp
mov
outsl
pop
push
pop
fiaddl
mov
pop
jno
mov
arpl
xor
sub
add
pop
faddl
sbb
clc
mov
inc
hlt
mov
cmpsb
pop
cltd
xchg
pop
pop
pop
or
mov
insb
js
ljmp
cmpl
lds
loopne
xchg
int
fidivs
int
mov
push
pop
or
repnz
xchg
or
stc
into
lock
shlb
xchg
leave
sbbb
push
cmc
out
bound
clc
or
push
aas
adcb
cmc
cli
repnz
aam
push
push
into
mov
in
pop
adc
out
dec
scas
das
inc
out
clc
sub
xchg
cld
ljmp
dec
pop
sbbl
dec
inc
das
push
mov
sub
jp
mul
ss
iret
jo
and
push
sbb
adc
xlat
ja
fstl
xor
push
xor
add
repz
jge
fildl
popf
sahf
lea
dec
mov
shlb
aad
push
dec
jno
jnp
push
fwait
adcl
and
sub
cmpl
roll
in
xchg
ds
push
mov
mov
hlt
xor
prefetcht0
dec
sub
or
jge
mov
loopne
xchg
dec
out
subl
enter
adc
test
hlt
cli
ret
jb
insl
jge
in
sahf
sbb
pop
xchg
imul
push
xchg
das
ret
ds
popf
mov
xchg
mov
inc
inc
add
sub
fcompl
xor
sub
push
inc
call
mov
es
fbstp
or
popf
outsl
scas
push
nop
dec
jl
pop
movsl
inc
push
add
jne
stc
mov
sahf
lret
mov
int3
dec
leave
sbb
add
shl
adc
mov
jno
ret
imulb
mov
jmp
sahf
dec
xor
xor
sub
jnp
push
fdivrl
xchg
xchg
mov
pusha
pop
iret
and
lret
xor
xor
pop
or
mov
scas
fld
dec
mov
imul
pop
pop
adc
sahf
xchg
cltd
fstpt
negl
lahf
inc
enter
std
inc
or
pop
push
outsb
jmp
cmp
mov
add
or
or
dec
shl
jne
stos
xor
testb
sahf
inc
mov
test
gs
xchg
jne
or
sub
inc
pop
loopne
mov
push
gs
add
xchg
push
jb
inc
call
loope
shlb
xchg
xlat
push
pop
sub
jp
add
ds
and
inc
dec
shr
loope
out
add
xchg
mov
adcb
and
ficoms
pop
xlat
and
mov
cmp
daa
adc
jmp
nop
repz
jno
lods
cmpsb
sbbl
imul
sarb
mov
xchg
data16
sub
into
inc
adc
popf
pop
dec
lcall
xchg
fstps
mov
add
pop
xchg
jne
leave
adc
dec
sub
test
sbb
add
loop
sahf
add
rolb
repnz
pop
daa
cmp
adc
push
out
xor
adc
push
sub
xchg
sahf
jecxz
in
push
subb
adc
sub
mov
adcl
in
mov
cmpsl
dec
fisttpl
fcoms
xchg
popf
inc
mov
out
std
add
dec
fs
shll
adc
jge
push
js
ljmp
jmp
aam
push
push
xchg
sbb
inc
out
jne
inc
cmp
or
dec
leave
out
adc
repnz
mov
push
aas
jge
test
or
movsl
in
cwtl
push
adc
xchg
cwtl
outsb
scas
jp
mov
loop
sbb
cmp
adc
or
daa
xor
mov
lds
lods
stc
les
fwait
inc
fildll
nop
or
fmull
sub
or
icebp
stos
jmp
jmp
sub
mov
mov
sahf
mov
test
dec
lods
fidivrl
ljmp
setl
pop
or
cmp
or
into
xchg
mov
pop
push
and
mov
lahf
mov
data16
xchg
pop
mov
xchg
fadds
fimull
mov
inc
test
sahf
callw
lcall
lods
jecxz
pop
jle
dec
out
cs
add
mov
out
pop
int3
cmp
push
dec
test
fists
test
pop
pop
test
pop
jno
stos
mov
int3
xchg
inc
int
lret
xchg
jecxz
std
imul
adc
mov
fucomip
push
gs
iret
jmp
xchg
and
adc
data16
imul
xchg
xchg
xor
jg
mov
leave
aad
pop
popa
mov
das
cmp
sbb
lcall
or
push
push
inc
mov
xchg
insb
je
xlat
and
call
fdivrl
add
movsb
call
movsl
push
adc
mov
cmpsl
lock
or
daa
xchg
pop
inc
mov
xor
ret
add
jo,pn
sbb
out
push
dec
adc
andb
mov
sbb
icebp
mov
sub
fistpll
lods
lret
insl
stos
mov
enter
cmpsb
scas
add
jnp
sub
inc
inc
xor
out
clc
jle
mov
adc
jle
add
js
fsubrl
gs
scas
xchg
xchg
aam
imul
inc
nop
mov
push
imull
int
out
lcall
mov
mov
fstpl
pop
lret
push
xchg
fdivs
mov
and
xlat
lret
addb
insb
mov
in
sti
cld
xchg
xorb
sbb
ffreep
push
mov
mov
push
fsubs
mov
mulb
dec
pusha
es
outsb
dec
shl
jecxz
xor
jno
cmp
ja
sub
hlt
sbb
mov
push
mov
fisttpll
arpl
mov
adc
xchg
iret
fmull
and
out
je
dec
sahf
and
out
in
imul
loop
and
lock
cmc
or
sub
inc
repnz
std
cmp
hlt
cmpsl
sbb
push
rol
xchg
or
nop
cwtl
jbe
out
movsl
jmp
jge
cld
ljmp
jnp
je
adc
repnz
inc
in
dec
cld
jmp
or
dec
xchg
push
stos
leave
ret
or
or
and
subl
jne
mov
xor
enter
jge
rolb
mov
movl
test
pop
cs
push
xor
out
jns
pusha
and
add
stos
fwait
into
and
pop
leave
insb
xchg
inc
and
shrl
les
jb
xchg
popa
loop
ret
pop
sahf
sti
and
outsb
sbb
rolb
add
xchg
dec
xor
std
pop
jle
lods
stos
xor
pop
adc
lods
pop
negl
loopne
inc
arpl
test
lret
in
pop
pop
cld
pop
loop
pop
jg
xor
incl
shl
sbb
sbb
adc
jp
addb
mov
mov
mov
icebp
mov
rcrl
les
cmp
cmpsl
shll
add
lret
pop
insl
lret
and
das
ds
jns
push
in
outsl
ret
mov
and
and
sub
push
fimuls
das
mov
fmuls
into
sbb
push
ret
xor
cs
xchg
aam
ja
leave
cli
push
loope
push
mov
out
lds
cmp
dec
push
xor
push
rcrl
push
push
into
orb
push
aad
adc
scas
xchg
daa
sbb
pop
push
leave
xchg
ret
cmp
fdivl
jmp
pop
pop
cmp
lods
lret
pop
decb
jg
push
or
mov
sbb
aad
mov
push
xor
and
dec
push
lret
or
sar
and
jle
pop
iret
xchg
cmp
fadds
push
or
repz
aas
mov
xor
leave
dec
pop
push
mov
out
dec
jmp
fcmovnb
std
outsb
mov
push
xchg
stc
lret
das
dec
inc
push
mov
cmpsb
cmpl
inc
cmpsb
xor
xchg
pop
cmp
xor
adc
dec
mov
sub
ds
outsl
sub
cmp
loopne
mov
pop
fwait
jmp
adc
clc
lcall
push
cwtl
adc
fldcw
mov
fst
aad
popf
addl
xor
inc
or
add
fadds
lods
imul
mov
push
inc
push
sbb
and
pop
cmp
in
dec
mov
or
loop
pop
outsl
loope
mov
enter
pop
lret
insl
dec
sbb
in
push
mov
xchg
add
adc
push
insb
aam
fwait
sbb
sub
and
loopne
pop
pop
or
mov
fidivs
mov
fdivrs
inc
mov
or
mov
stos
push
adcl
cld
out
loop
mov
jecxz
nop
xchg
mov
int3
out
inc
cmp
enter
push
push
push
adc
out
adcb
cmp
fldl
mov
sub
xchg
and
cmpsb
xchg
push
loop
out
push
mov
mov
add
sti
mov
adc
rcrb
jno
std
in
daa
inc
popf
scas
imul
stc
adcb
lahf
mov
jg
push
mov
jge
imull
fwait
scas
mov
leave
faddp
cmp
lret
jl
xor
cwtl
test
push
push
inc
popa
adc
ss
sbb
sub
dec
mov
cs
xchg
ss
mov
push
dec
dec
adc
hlt
es
mov
loope
fildll
lea
addr16
sbb
in
jo
ds
rcrb
imul
in
scas
sbb
or
lods
test
int3
sbb
out
cmp
xor
mov
lods
cld
dec
test
lret
sub
in
cmp
cmc
pop
pop
sbb
mov
test
test
fstpl
loope
cmp
test
das
lock
add
mov
mov
cmc
flds
rcr
inc
and
aad
sbb
sbb
jl
cmp
ss
jno
lock
xor
pop
fistpll
lret
inc
in
test
fdivr
lds
lea
ja
xchg
dec
mov
leave
stos
test
xchg
sbb
jnp
xor
js
add
ret
fidivrs
mov
pop
adc
test
sub
das
cmp
movsl
shll
lahf
mov
add
xor
and
pusha
in
int3
sbb
sbb
ljmp
lods
insb
cmp
mov
cmc
mov
imul
iret
js
jmp
sub
lret
or
and
movsb
fwait
lcall
fstpt
in
adc
out
pop
sub
pop
cmp
fiaddl
push
inc
sub
sbb
sub
jbe
cmpsb
adc
xor
dec
lret
jae
mov
movsb
ficompl
in
in
and
sub
out
adc
xchg
je
and
sbb
adc
out
rorb
mov
jb
pop
push
divl
ja
cmp
popf
jmp
cmp
mov
jge
sti
or
mov
mov
dec
xor
rclb
inc
dec
pop
push
sti
nop
and
lcall
push
ret
sub
mov
popa
inc
jl
sub
sarb
lods
rclb
incl
and
test
dec
add
adc
lret
dec
int3
or
aaa
xor
dec
movsl
fmul
pop
inc
out
xchg
mov
insb
or
dec
add
cmp
sub
hlt
mov
inc
aaa
sub
mov
xchg
fcos
shrl
in
pop
int
test
mov
ret
test
aas
xchg
aaa
cmp
stos
xor
arpl
cmp
cmpsb
and
push
push
int
in
lcall
mov
push
es
lcall
out
cmp
adc
adc
sub
mov
hlt
jmp
std
sbb
xor
aam
fadds
cmp
cli
rcll
fbld
mov
jo
push
jmp
and
fiaddl
lods
push
sbbb
mov
pop
xchg
je
sub
mov
js
xchg
iret
adc
pop
fistpl
sbb
sbb
pop
add
mov
cltd
push
push
and
jecxz
stc
mov
sti
cwtl
sbb
icebp
mov
repz
adc
jnp
fidivrl
sbb
dec
jmp
push
ror
mov
xor
add
mov
jl
inc
xor
loope
fists
hlt
test
sub
or
mov
orb
xchg
push
pop
mov
push
push
in
xor
pop
std
stc
lret
push
sbb
cs
mov
add
mov
notb
mov
fsubl
out
pop
push
sub
out
test
jge
jb
cmc
pop
daa
iret
arpl
pop
mov
stos
and
add
notl
add
pop
out
and
es
out
int3
push
ss
pusha
add
ss
jle
popf
xor
in
test
pop
xchg
sbb
xor
or
scas
mov
cltd
stc
mov
inc
mov
push
pop
icebp
cmp
pop
repz
mov
sub
fldenv
mov
mov
jbe
and
mov
mov
dec
movsb
pop
push
cmp
popa
mov
sub
scas
into
divb
inc
imul
and
cmpsb
push
movsb
fmull
fistl
cmc
adc
outsb
ret
jb
sbb
inc
mov
cmc
daa
jnp
mov
pop
and
dec
or
dec
mov
aad
push
popf
test
daa
mov
mov
rcrb
sbb
rclb
shll
push
aas
push
cmp
push
cmp
fstpt
gs
mov
xor
mov
icebp
dec
xchg
or
push
and
fldt
pop
out
push
sub
add
add
in
xlat
mov
das
cmp
sbb
mov
xor
mov
hlt
adc
inc
neg
or
mov
sub
jg
add
xlat
mov
cmp
icebp
jg
shl
fnstenv
mov
push
stc
add
stos
sbb
and
push
fcmovu
mov
dec
xor
adc
inc
int3
in
and
dec
dec
rcl
xor
leave
push
pop
data16
std
in
fnstenv
push
xor
mov
adc
int
cmc
jne
das
lcall
inc
pop
push
push
rorb
nop
jge
sub
xchg
sbb
in
pop
outsw
fwait
inc
cmc
icebp
fists
or
ror
enter
negb
and
xchg
mov
cmp
aaa
and
es
js
mov
repnz
dec
dec
inc
and
dec
outsl
xchg
dec
leave
jmp
mov
adc
icebp
and
in
xor
mov
push
repnz
addr16
pop
sti
out
xchg
test
add
mov
push
ret
lea
sbb
daa
inc
xor
inc
insl
and
movsl
push
outsb
xor
loope
insb
jae
mov
jl
ret
shr
cmp
jmp
repnz
lock
fistps
pop
es
xchg
and
pop
adc
xor
stc
or
sub
add
bound
dec
xchg
daa
sub
insl
mov
mov
imul
insb
xchg
nopl
sub
test
and
test
adc
inc
adc
lods
sahf
fwait
adc
lods
dec
sti
push
mov
lods
adc
mov
es
test
rorb
jnp
push
sub
into
lods
jg
rcll
stc
or
mov
cltd
shlb
push
sbb
jp
mov
push
sbb
ds
aad
std
call
pop
lahf
adc
adc
cli
push
xlat
mov
jno
mov
lret
adc
mov
sub
lock
xlat
in
repz
cvtps2pi
and
outsl
mov
loopne
out
xor
sarl
fnstcw
lock
addl
lcall
inc
clc
jmp
sub
and
repz
enter
jae
dec
sub
mov
hlt
mov
or
jb
roll
rorl
mov
aad
loopne
fwait
sub
gs
adc
jecxz
lcall
push
mov
sub
inc
inc
xor
jmp
mov
sbb
mov
fadd
or
imul
mov
mov
int3
jae
scas
pop
ds
add
push
inc
xchg
in
xchg
mov
jg
jne
jp
cmpsb
dec
sbb
mov
lea
or
daa
movsl
aam
hlt
lret
sti
stc
or
sbb
test
fidivs
fimull
jp
xchg
mov
rep
fs
leave
repz
sarb
pop
into
adc
or
les
mov
dec
dec
cmp
std
in
push
or
sub
cmp
add
pop
fstpl
insl
xor
and
add
js
pop
les
out
popf
out
or
or
xchg
pushf
lret
fs
sarl
pop
pusha
push
cmpl
leave
scas
add
adc
rcl
cmp
push
fistl
mov
es
loopne
dec
lock
in
sub
mov
mov
addr16
cld
pop
aaa
mov
mov
stc
and
jmp
push
fmuls
push
shlb
mov
mov
std
mov
test
out
jb
cld
add
jns
xchg
daa
lcall
pop
popf
sbbb
sahf
jnp
cwtl
mov
orb
cmpsb
adcl
icebp
pop
inc
fnstsw
shr
mov
mov
shll
mov
stc
cmp
inc
lods
mov
inc
jg
flds
ret
cmpsl
repnz
stos
sahf
xor
addb
loop
sahf
divb
xor
or
push
or
add
fs
dec
mov
jge
mov
mov
dec
outsb
iret
pop
fmul
xor
mov
mov
pop
inc
clc
test
xchg
lahf
cmc
or
cmp
int
push
pop
sarl
dec
mov
inc
jmp
lods
iret
das
test
push
xor
xchg
aam
xor
push
ja
pop
shr
and
jae
insl
ljmp
cmp
jle,pn
add
loopne
mov
aas
stc
mov
int3
imul
push
mov
insb
sbb
das
cmpl
and
inc
es
and
es
sub
or
xchg
dec
fstp
leave
mov
dec
dec
addr16
inc
lods
xor
dec
sub
in
mov
xor
mov
shll
std
mov
mov
xchg
cmc
push
add
inc
inc
ret
sbb
dec
test
push
sbb
inc
lods
adc
outsl
sub
cmc
pop
push
int
jno
mov
or
mov
bound
fistpl
sbb
add
jge
sbb
mov
adc
pop
in
jge
cmp
jbe
arpl
push
sub
dec
jmp
jge
in
fwait
ds
ret
jbe
roll
test
or
movsb
push
stos
inc
lock
testb
jge
xchg
mov
repnz
int
dec
fiadds
push
out
loope
rorb
cmp
push
lods
ljmp
mov
loope
idivb
mov
fsubrs
and
pop
mov
mov
cmp
daa
or
dec
shll
es
inc
jp
mov
pop
mov
fisubs
sahf
ss
pop
scas
fsubrl
push
sbb
mov
dec
xor
aaa
fdivp
movsb
sub
sarb
scas
lods
test
dec
enter
mov
icebp
jbe
mov
lea
sbb
add
xor
outsb
push
push
out
sub
imul
push
inc
push
inc
lahf
shll
bound
jmp
push
xchg
mov
rorl
push
lock
jnp
pop
push
in
cmp
xor
dec
jb
imul
sub
flds
mov
adc
lods
ret
hlt
cmp
inc
imul
fwait
imul
push
movsl
mov
add
mov
or
mov
out
dec
cmp
xlat
arpl
or
lcall
movsl
popf
mov
pop
and
jmp
test
cltd
test
adc
xchg
lods
cld
rcll
incb
orb
je
test
stos
push
sub
xchg
mov
jge
jbe
mov
out
test
xor
iret
or
or
stos
sbb
addl
mov
pop
incb
inc
mov
shrl
orl
insb
jge
insb
lret
out
js
dec
and
cltd
das
ret
lcall
add
lock
bound
adc
cltd
jns
pop
xchg
mov
hlt
fsubs
loopne
xor
jae
pop
insb
lods
movsb
mov
fidivrs
lcall
lea
test
dec
jbe
fstpl
xchg
cmpsb
je
lahf
loopne
and
mov
adc
cld
ret
cmp
push
jl
push
adc
inc
dec
mov
jle
outsl
push
in
call
inc
xchg
lcall
pop
pop
xor
out
repz
stos
jg
pop
mov
xchg
gs
into
push
push
cmp
mov
add
ds
sub
outsl
jecxz
xor
cmp
mov
dec
cwtl
iret
lods
cmp
cmc
rorb
or
add
cmp
mov
xor
dec
pop
scas
xchg
fdivp
xlat
add
in
inc
or
cmp
jns
and
fsubrs
lahf
scas
cmp
into
xorb
xor
push
or
arpl
movsl
cli
test
outsl
adc
imul
sub
sarb
xchg
ljmp
loope
cli
cmp
pop
fs
je
popa
stc
mov
jecxz
mov
scas
pop
jle
jno
sarl
mov
xor
dec
test
cs
xchg
mov
xchg
jo
lcall
jp
jmp
out
push
sub
jns
pop
adc
cmp
cmc
pop
rclb
mov
dec
ret
and
xchg
inc
xor
test
movsb
adc
xor
rcll
cmc
jbe
jo
mov
mov
push
inc
jp
add
into
xchg
dec
fcom
mov
je
dec
ret
adc
add
push
jl
sbb
packssdw
sahf
dec
jg
pop
push
fadds
add
fnstenv
lock
pop
sti
int
or
jle
push
push
jge
rcrb
arpl
rcrb
and
sub
into
loopne
cwtl
out
aam
imul
out
xchg
mov
js
cmp
andb
push
sub
mov
jl
pusha
dec
mov
dec
fiadds
jae
sahf
xchg
or
inc
mov
mov
xor
add
les
popa
or
pop
and
arpl
dec
push
adc
lea
push
hlt
rol
sahf
and
cwtl
orb
cld
pop
sbb
xchg
aad
aas
dec
lcall
xor
lods
inc
pop
dec
insl
jb
lock
pop
mov
insb
mov
mov
xchg
cmp
jl
push
inc
movsb
inc
out
mov
out
loopne
xlat
ja
ret
dec
dec
mov
mov
aam
jl
jns
push
div
pop
out
lahf
lods
add
push
jecxz
and
add
xor
mov
jb
into
insb
jne
adc
jbe
testb
lods
jae
ret
dec
cmp
and
add
mov
shl
dec
jno
push
out
adc
pop
shrb
frstor
cltd
test
cmp
push
sub
mov
hlt
push
pop
sbb
outsl
idivl
repnz
leave
jne
jne
inc
add
pop
and
loope
add
loopne
jno
pop
and
mov
test
mov
test
jae
bound
push
rclb
mov
aam
leave
test
inc
push
sbbl
pop
cwtl
cmp
inc
ret
sarl
popf
jno
mov
leave
mov
push
mov
rolb
std
push
xchg
pusha
lahf
cmp
call
rolb
and
adc
fadds
test
fdivl
sbb
inc
lcall
xchg
sbb
lods
adc
pop
jge
xchg
loop
cmp
ret
stos
adc
and
cmp
push
mov
ret
or
cmp
sahf
iret
pop
xor
mov
inc
stos
mov
or
cltd
xor
cmpb
mov
jecxz
popf
cld
fstpl
adc
in
sbb
outsb
add
adc
adc
fldcw
aam
xor
xchg
mov
ret
mov
push
loop
icebp
lds
push
stos
rol
in
push
xchg
cmpsl
imul
pop
mov
or
push
stc
cmp
stos
add
ficompl
sub
mov
push
faddl
cmp
jb
es
xor
out
push
jb
mov
pop
mov
fdivl
je
jns
lock
imul
xor
icebp
and
outsl
dec
pop
mov
pop
xchg
repnz
dec
xor
mov
dec
xchg
arpl
jge
mov
push
xlat
fldt
sbbl
cmpsl
scas
pop
xchg
repnz
inc
and
leave
inc
or
sub
pushf
mov
rcl
rcl
fdivp
mov
mov
filds
test
shrb
lahf
sbb
cwtl
or
push
inc
mov
enter
shl
leave
xor
inc
add
negl
mov
sti
add
arpl
scas
mov
sub
mov
test
and
xchg
inc
rorl
add
add
mov
sub
xchg
rcrl
es
rcll
jae
enter
inc
mov
and
pop
xor
daa
push
fs
dec
sbb
outsb
xor
fldt
int3
hlt
inc
sbb
rorl
fwait
dec
jge
sbb
adc
test
inc
cmp
shrl
ljmp
mov
into
adc
cmp
push
cli
xchg
jle
mov
ret
jg
xchg
stos
sub
pop
jg
or
pop
adc
call
jnp
jecxz
repz
mov
aaa
in
push
test
xchg
push
mov
push
jae
xor
outsb
inc
add
rcrb
daa
fs
sub
or
push
movsl
mov
negb
xchg
lods
loopne
sti
mov
xor
xlat
cld
cmpsl
in
cmpsl
xorl
sbb
mov
fcomi
std
out
inc
mov
rcrb
mov
je
sbb
imul
scas
jp
push
mov
mov
mov
mov
and
inc
jecxz
cwtl
das
rcr
cmc
ja
add
lods
dec
adc
or
arpl
push
mov
iret
pop
sub
xchg
insb
mov
add
ret
inc
outsb
ss
out
or
dec
or
and
dec
out
fsub
jmp
fcmovnb
mov
jecxz
xchg
fnsave
xchg
stos
add
movsl
push
das
daa
shl
mov
ret
mov
and
sbb
lods
leave
pusha
arpl
and
push
inc
xchg
scas
call
sbb
imul
adc
scas
and
jo
xchg
ret
es
dec
mov
fisttpll
push
fxch
clc
cmp
jo
int3
mov
flds
fildll
mov
mov
ds
je
adc
popf
es
mov
push
stc
push
jae
or
xor
xor
adc
jecxz
pop
out
lea
mov
jae
cmp
xchg
mov
cmp
lcall
rclb
loopne
sub
xor
inc
jge
flds
cmp
mov
jmp
push
mov
sbb
ret
repz
push
stos
cli
loope
adc
mov
outsb
inc
in
clc
pop
adc
mov
test
mov
add
lcall
xchg
or
dec
mov
add
cmc
in
icebp
lahf
and
mov
mov
mov
lret
add
jl
shlb
sahf
es
cmp
nop
notb
jg
js
jno
pop
inc
leave
xor
popf
clc
mov
das
mov
xor
xchg
xor
nop
pop
mov
xor
fwait
sub
push
jb
lret
inc
scas
aaa
and
mov
inc
icebp
xchg
ljmp
mov
lret
int3
cmpb
sub
xchg
dec
cmp
test
lret
jnp
js
mov
xchg
push
repnz
jo
cmc
mov
in
jbe
divl
das
ret
loop
fcomp
and
or
xchg
mov
dec
notb
shll
call
scas
xor
push
movsl
adc
popa
addr16
insl
das
cmp
inc
cmp
pusha
call
inc
daa
gs
std
xor
mov
movsl
sbb
addr16
lcall
stos
arpl
xor
adc
test
and
xchg
xchg
mov
outsb
and
add
int3
and
pop
hlt
ret
jbe
inc
call
push
xor
out
pop
ja
xchg
or
sysret
rcll
add
std
push
push
in
les
stc
aad
dec
std
scas
push
pop
cmpsl
jb
aas
dec
pop
rcl
pop
clc
fisttps
mov
sbb
xchg
and
cmp
mov
into
xor
mov
cmp
inc
ja
shr
and
mov
ds
stos
push
jg
xor
daa
ret
cmpsb
aas
ja
xchg
mov
mov
pop
mov
into
icebp
fsubs
ffree
mov
adc
fldl
push
ss
push
daa
mov
adc
lret
icebp
call
jne
jecxz
cmp
pop
push
imul
lock
sahf
sub
push
sbb
fmuls
pop
mov
clc
popf
push
jnp
ss
js
pop
mov
inc
dec
fbstp
cmp
adc
mov
andb
rcll
inc
testl
and
leave
push
xor
mov
stos
ss
mov
xor
incl
xor
cmp
stos
pushf
jmp
shrb
jae
data16
insb
inc
dec
test
jnp
cmp
adc
ret
sub
xor
popa
aaa
mov
adc
outsb
lods
in
mov
adc
xor
rclb
lahf
dec
fiaddl
ljmp
and
jle
mov
movsl
sti
lea
sbb
push
mov
pusha
int3
shlb
adc
add
in
dec
jle
mov
push
mov
sub
int3
mov
push
xlat
filds
xchg
in
sub
cmc
out
add
out
loopne
push
popf
mov
ret
sarb
lock
pop
call
call
or
test
push
xchg
inc
inc
sub
arpl
arpl
add
mov
pusha
aam
cmpsb
adc
repnz
daa
add
xor
hlt
mov
jg
pop
jmp
inc
nop
sub
and
xor
cmp
xor
push
jnp
jb
mov
pushf
or
sbb
rcl
pusha
xchg
xor
aad
mov
aas
loop
mov
pop
lret
loopne
sbb
mov
xor
test
cmpsl
push
mov
nop
shll
cwtl
ss
rclb
pop
addl
pop
xchg
and
push
lods
xor
or
cs
add
scas
add
je
cmp
add
add
aad
ja
iret
sub
gs
movsl
fcmovnb
pop
inc
aam
xchg
push
push
fs
icebp
jno
ret
das
fidivs
push
lods
shl
movl
and
movsl
loopne
add
scas
and
scas
movsb
jb
push
sbb
rclb
pop
dec
or
jl
mov
iret
dec
mov
pushf
push
sub
popf
in
scas
flds
aas
jmp
xchg
test
or
push
xor
jae
mov
fstps
nop
adc
and
nop
bnd
rcr
std
lock
movl
sub
push
aam
xchg
int
xchg
shll
test
pop
ret
fldenv
or
adc
xchg
inc
dec
lcall
cs
push
adc
or
mov
jae
cld
jmp
push
push
mov
or
movsl
cmp
aaa
inc
stos
icebp
lcall
addr16
leave
mov
sbb
jmp
inc
or
add
out
insb
int3
jnp
test
pop
adc
data16
xor
cmpsb
jbe
push
jne
pop
rorl
fimuls
cmp
js
rorl
dec
roll
rol
cld
or
jnp
aam
mov
fdivs
sbb
stos
cmp
ret
cmp
stc
mov
xchg
pop
popa
enter
jae
lods
push
pop
mov
push
fnstsw
xor
mov
stos
xorb
ds
popa
in
js
mov
jb
push
lcall
mov
add
mov
mov
cmc
xor
stos
gs
stos
add
je
roll
and
lahf
out
adc
xor
pop
test
push
xchg
mov
adc
aam
cmpsb
mov
lods
mov
mov
test
mov
dec
in
cmp
fwait
sbbl
pushf
ds
pop
push
cmp
aas
xor
push
jge
add
js
add
pusha
or
scas
lcall
cltd
push
cwtl
pop
dec
mov
gs
xchg
repz
mov
ja
fidivrs
push
rolb
repnz
dec
hlt
dec
into
in
aaa
mov
jbe
cmpsl
push
addr16
scas
or
xor
push
cmc
inc
negl
mov
arpl
loop
test
adc
enter
inc
int
jb
push
loop
dec
testb
jo
add
lea
push
xchg
add
lock
cmp
xor
mov
pop
movb
std
addr16
int
in
pop
aam
out
lods
ret
es
cmpl
pop
aad
sbb
push
mov
lea
push
push
insl
insb
jo
jle
cltd
inc
sbb
movsb
push
mov
mov
push
dec
jl
fcoml
stc
jecxz
addr16
hlt
mov
push
fucom
data16
dec
sti
aam
dec
xor
enter
pop
fcomps
bound
mov
daa
dec
adc
ret
mov
std
adcb
pop
clc
xor
jb
cmp
dec
add
mov
cmpsb
sbb
nop
loope
pop
faddp
or
insb
mov
xor
notl
jnp
not
xchg
aad
cmpsl
negb
hlt
pop
cwtl
mov
pop
test
sub
add
stos
xlat
js
mov
fstpt
dec
sbb
dec
iret
arpl
inc
mov
das
adc
fucom
mov
fs
lret
insb
out
dec
jmp
shll
call
xchg
or
int3
dec
cmp
pop
iret
fistpll
imul
test
sbb
pop
sub
jg
cs
jnp
pop
cli
test
test
movb
sbb
mov
mov
bound
testb
in
sub
sub
repnz
ja
mov
mov
jge
mov
mov
dec
je
ja
ror
mov
fidivrs
mov
jmp
pop
add
pop
push
sub
stos
dec
push
mov
mov
xor
jl
mov
test
fldcw
sbb
test
jb
sub
inc
or
lds
insb
fisttpll
push
push
and
insl
cltd
test
mov
call
sub
test
movups
or
sub
lret
push
cmpl
inc
push
rcrb
fidivrs
cmpsb
mov
pop
enter
rorb
inc
mov
aad
fcmovb
sub
dec
pop
mov
cmp
and
stos
iret
sbb
xchg
stc
shll
push
pop
sbb
mov
fimull
xor
lcall
scas
adc
pop
mov
imul
lret
neg
cmpsb
mov
xor
cltd
xor
jo
fdivrs
jg
push
adc
or
push
push
outsb
sbb
imul
xchg
sbb
leave
dec
mov
mov
inc
sar
pop
push
pop
sub
mov
outsb
loop
divl
data16
xchg
and
popf
cld
les
mov
fcmovnb
sbb
dec
mov
out
xchg
xor
add
test
ds
sub
mov
stos
lret
das
sbb
cmp
popf
pop
pop
int3
mov
mov
inc
addr16
mov
daa
insb
pop
mov
es
cmpl
mov
lret
push
cmc
insb
ljmp
popa
outsb
adc
cld
daa
bound
movsb
int3
push
movsb
mov
push
cmp
mov
inc
xchg
cmp
jo
imul
gs
push
lods
cmp
fisttpll
iret
rolb
cmp
and
sbb
lcall
adc
in
push
aas
icebp
xlat
add
sub
iret
rclb
mov
call
cmp
lods
movsl
pop
mov
popa
xchg
mov
pop
or
mov
stc
xchg
jbe
mov
adc
lcall
ficomps
push
bound
and
push
aam
or
shll
lods
shl
inc
lea
or
mov
or
not
pop
dec
iret
jmp
push
add
pushf
lret
subb
lret
push
xchg
rcrl
and
push
test
sub
mov
hlt
outsb
mov
adc
jo
pop
lea
push
inc
adc
jmp
mov
lret
sub
pop
leave
movsb
sbb
sbb
fdiv
out
jl
ss
fimull
mov
dec
mov
cmovge
push
xor
lock
xorb
pop
jo
mov
add
jb
ljmp
mov
sahf
pop
push
adc
sbb
shl
lock
ds
pop
es
mov
xchg
int
mov
and
push
or
repz
sbb
or
xlat
addr16
das
cwtl
push
test
popl
movb
jno
nop
xchg
pop
or
idivl
fsubs
pop
mov
hlt
les
inc
pop
or
fstps
sbb
fidivl
das
mov
jecxz
test
cmc
xor
repnz
pop
or
jp
pop
movsb
mov
fmull
rol
mov
mov
loopne
out
cmp
test
adc
push
jae
test
rclb
fldt
pop
mov
add
pop
jns
push
in
lock
pop
adc
cmp
xchg
scas
out
mov
inc
jmp
and
add
mov
call
and
inc
mov
mov
mov
sar
je
or
movsb
cmc
scas
and
dec
out
adc
xchg
or
jl
mov
push
fwait
pop
inc
les
or
mov
lret
inc
add
pop
xchg
push
push
xor
push
jmp
aaa
sub
bound
cmp
fldenv
pminub
and
lock
in
xchg
jns,pt
push
bound
popf
test
or
pushf
nop
or
fsub
push
jp
cmc
test
xchg
dec
lea
ret
jge
mov
pop
stos
movsl
fst
mov
and
test
add
cmp
test
jg
in
xchg
aam
ret
arpl
ljmp
subb
xor
test
pop
xchg
or
pop
adc
jge
iret
ds
pop
push
fisubs
fildl
and
mov
enter
out
sti
mov
cs
push
xor
sahf
lret
dec
push
out
cmp
js
add
cmp
dec
insb
insb
in
inc
dec
push
push
lods
mov
pop
sub
jle
pop
xchg
imul
lret
dec
add
mov
test
mov
roll
pop
jp
fstps
xchg
cmp
popf
mov
mov
mov
daa
add
add
jns
test
insb
insb
xlat
lret
cld
xchg
push
add
leave
sahf
rol
out
pop
adc
call
or
dec
pop
sbbb
ljmp
data16
hlt
ljmp
adc
jecxz
inc
push
pop
loopne
fidivs
adc
adc
lods
testl
adc
out
pop
mov
push
jne
add
sahf
cltd
xor
int3
mov
loope
xchg
adc
xchg
mov
fisttps
push
xor
mov
pop
cli
xchg
cli
loop
iret
inc
push
inc
pushf
leave
pushf
inc
and
rorl
arpl
cmp
cmp
fsubl
rorb
pop
mov
pop
jecxz
and
sub
jbe
negl
mov
or
andl
scas
sbb
pop
sub
mov
mov
fidivrl
inc
jmp
imul
int
test
adc
outsl
or
pop
shll
adc
in
mov
js
mov
mov
rcll
sub
fcoml
std
mov
push
cli
lahf
lahf
mov
mov
stc
pop
insb
sub
mov
push
push
test
popf
mov
ljmp
inc
inc
enter
push
xchg
fiadds
xchg
icebp
inc
or
hlt
repz
ds
xor
mov
cld
add
push
adc
push
jo
or
xchg
xchg
inc
jbe
fcmovnb
aad
aad
mov
cld
fistps
add
add
repnz
dec
pushf
leave
add
in
inc
dec
pop
jo
or
inc
dec
xchg
jmp
lret
xchg
push
subb
dec
int3
out
adc
mov
cmp
mov
push
popf
push
adc
pushf
and
pushf
cltd
sbb
pushf
sbb
lods
rclb
cwtl
dec
and
sbb
dec
scas
push
lret
dec
xorb
mov
in
aam
rcl
add
fiaddl
adc
lods
js
jbe
imul
sub
add
sub
mov
stos
rorl
lret
data16
mov
jge
cld
js
mov
pop
dec
add
inc
aad
int3
outsl
aaa
mov
inc
or
push
mov
mov
in
inc
into
test
jecxz
xor
jne
cmc
std
pusha
loope
push
aad
push
leave
pop
inc
decl
push
cmpsb
fnstenv
jne
xor
add
push
cmp
jl
sbbl
cwtl
xchg
jg
adc
cmpsb
loope
push
mov
daa
inc
push
dec
iret
fidivs
in
in
stos
jge
inc
adc
xor
jno
dec
mov
mov
adc
sub
shl
scas
fsubr
push
fld
repnz
test
stos
mov
nop
dec
add
sub
mov
enter
mov
inc
jecxz
push
loop
popf
mov
ret
add
and
imulb
pop
push
ljmp
fsts
and
movsl
ret
fcoms
xchg
xchg
jbe
xchg
add
lock
cwtl
push
sub
or
mov
rcll
ljmp
fld
jns
mov
xlat
dec
out
adc
dec
xchg
push
rcrl
and
sub
jmp
clc
out
mov
sti
adc
push
js
outsl
movsb
fs
mov
std
xchg
mov
shl
xor
cltd
or
push
pop
cmp
das
sbb
cmc
jle
ret
and
loopne
add
cmpb
mov
sub
mov
shlb
stc
cmp
mov
jp
fists
into
cmp
and
xchg
iret
testl
mov
lock
nop
mov
dec
aaa
movsb
call
cmp
paddq
loopne
std
movsb
daa
add
test
and
in
scas
dec
aas
xor
and
mov
xchg
add
in
and
ja
mov
xchg
push
scas
mov
insb
iret
fnstcw
jmp
icebp
push
bound
pusha
jl
idivl
lea
adc
out
movsb
scas
testb
sub
xchg
es
jg,pt
bound
mov
jmp
sbb
frstor
shl
sbb
inc
cmp
xor
dec
or
dec
arpl
pop
aam
icebp
xor
add
rol
fwait
idivl
mov
or
ja
sbb
push
cltd
lock
popa
ficoms
mov
xchg
les
pop
imul
aaa
adc
cmp
or
cmp
pop
sti
xrelease
xor
jg
cmpsb
fstpt
xchg
push
mov
mov
cmpsb
mov
addb
bound
dec
cwtl
xor
add
test
js
cmp
inc
lret
sbb
adc
pusha
cli
cltd
popf
cmp
into
push
and
imul
adc
pop
lock
outsl
dec
jns
mov
and
test
mov
js
mov
sub
add
mov
or
push
cmp
mov
or
in
adc
div
xorb
push
push
out
xchg
fisttpl
bswap
jp
push
into
pop
sub
pop
in
mov
mov
and
mov
fcmovbe
xor
inc
jne
test
add
push
pop
jnp
xor
adc
vmovdqa
xor
popf
add
lret
sbb
ja
aas
and
nop
arpl
lea
stos
lods
outsb
mov
rcll
es
ss
out
dec
movl
ljmp
lcall
xchg
inc
cltd
sub
add
les
mov
movsb
lret
shl
xchg
out
aam
jb
xchg
lcall
mov
push
lods
enter
loope
pop
movsb
popa
adc
xchg
test
rcll
inc
add
testb
jle
insb
fmul
adc
cmp
pop
mov
xor
jns
mov
and
and
stc
lods
sbb
mov
jmp
out
jge
jmp
cmpl
in
dec
sbb
mov
sbb
mov
fdivrp
or
sub
mov
inc
les
fimull
mov
stc
xchg
push
xor
imul
imul
mov
mov
xchg
dec
outsl
fstl
js
mov
dec
mov
mov
test
out
popf
xor
mov
stc
mov
popf
andl
out
aas
lods
lahf
pop
jns
lret
jl
outsl
sub
arpl
add
inc
xchg
xor
outsb
add
test
lock
decb
jg
decb
inc
fcoml
mov
test
mov
pop
mov
idiv
cltd
xchg
jae
jno
inc
mov
bound
out
jge
nop
xchg
data16
push
push
or
out
fildl
jo
pop
nop
pop
aad
sti
roll
inc
insl
mov
out
enter
mov
out
insw
pusha
outsl
adcl
in
fldt
cltd
adc
mov
popl
test
int3
out
xor
mov
in
psubusw
fadds
add
xor
nop
jns
repnz
cli
xor
leave
mov
jns
outsl
daa
iret
push
or
or
icebp
sub
ret
cmp
hlt
in
fwait
mov
cmp
icebp
mov
rcrl
mov
cmp
lea
jecxz
or
mov
mov
rclb
or
shrl
pushf
dec
neg
pop
clc
jno
push
int3
stos
cmc
mov
lods
ret
sub
xchg
nop
push
repnz
out
das
ss
jmp
adc
stc
or
insb
fistpl
pop
xchg
icebp
push
pop
sahf
incb
push
jnp
mov
out
fs
insb
test
repz
mov
jno
cmp
mov
or
inc
mov
ljmp
rcll
pop
mov
in
pop
xchg
movsl
loopne
cld
loope
jne
mov
dec
fdivrl
shll
fs
shl
or
mov
mov
xorb
cmpsb
push
addl
jns
add
xor
mulb
lock
fidivl
out
sbb
jb
popf
pop
clc
shll
or
pop
in
add
insb
cmp
sar
mov
sbb
movsl
pop
fistpll
cmpsl
push
aaa
xor
aam
dec
lret
add
pop
cmpsl
fwait
ds
scas
je
sarl
adc
and
sahf
rorl
inc
xchg
js
mov
out
nop
outsl
xor
out
jnp
fistpll
loope
in
std
inc
rorl
cmp
sub
add
in
jo
mov
in
stc
into
mov
inc
jle
cmp
sbb
movd
test
lods
and
sbb
dec
in
ds
cmc
outsb
inc
push
xchg
or
jmp
sahf
ljmp
mov
xlat
jne
in
lock
dec
out
mov
fwait
or
cmp
inc
roll
data16
in
dec
push
daa
in
xchg
inc
stc
pushf
in
and
and
lods
scas
xor
sarb
xor
or
stc
faddl
push
jg
pop
mov
mov
mov
mov
add
out
sbb
ret
ret
mov
inc
and
mov
mov
mov
mov
or
call
pop
jp
shrb
cs
mov
gs
sti
fldcw
lds
loope
inc
data16
fdivl
lahf
sahf
and
out
in
inc
inc
in
jno
mov
repnz
or
inc
adc
outsb
jbe
sbb
test
loop
cli
xchg
mov
sarb
lock
mov
pop
lods
in
inc
mov
popf
movsl
fstpl
lret
push
cmp
or
xor
leave
pop
pop
jno
jle
jecxz
shll
int3
inc
out
xchg
daa
pop
sbb
push
mov
cmc
popa
and
dec
mov
pop
mov
rcrl
mov
pop
jp
pushf
in
pop
inc
xlat
stos
add
pop
pop
fcomip
into
dec
lds
and
push
ret
mov
sbb
jle
inc
cwtl
or
ljmp
xchg
cltd
mov
in
out
bound
out
shrb
fadd
push
test
pop
test
or
fldenv
jbe
ror
or
rclb
faddl
imul
sbb
sub
fcoml
sbb
xchg
sbb
shrb
jae
cwtl
adc
xchg
mov
mov
out
jecxz
divb
adc
xorl
arpl
push
inc
pop
pop
movsl
fs
mov
fidivrl
sub
notb
add
mov
call
dec
jno
bound
movsl
push
inc
or
stos
mov
push
popf
js
or
mov
rolb
ficompl
or
bound
scas
mov
jge
out
xchg
mov
pop
inc
je
dec
push
ss
ja
mov
or
push
xor
xchg
jnp
in
scas
into
dec
jno
mov
adc
mov
add
push
jns
aas
xchg
cmp
inc
nop
outsl
dec
mov
mov
adc
lea
lcall
pop
ds
mov
and
push
loop
mov
sub
or
lds
rcrl
cmp
sti
ja
stc
loopne
fstpt
sahf
mov
dec
fs
ja
xor
add
sbbb
mov
mov
jge
mov
push
adc
dec
mov
or
lods
daa
repz
scas
xchg
push
mov
add
imulb
cmp
xchg
ret
sti
into
add
pusha
sbb
dec
test
repz
mov
fcmove
pop
mov
lods
repz
in
pop
push
sbb
inc
in
inc
and
gs
cmpsl
sub
out
mov
lret
pop
test
jnp
outsb
arpl
outsl
pop
xor
add
dec
test
data16
test
loopne
imulb
push
push
push
add
push
repnz
push
and
mov
xchg
and
dec
lock
jno
jle
mov
xchg
add
test
dec
pop
dec
out
test
test
dec
dec
out
mov
dec
ja
mov
xlat
gs
mov
mov
cmpsl
dec
shlb
std
cltd
cmpsl
leave
ljmp
xchg
mulb
or
adc
fcomp
sub
aam
dec
imul
iret
push
add
mov
sub
mov
cltd
shll
dec
mov
out
and
xor
es
and
test
loopne
mov
mov
sbb
fwait
jb
sub
cmp
lods
jo
fwait
sbbl
cmc
jb
push
sub
jge
mov
push
inc
mov
lret
in
out
fsubl
out
dec
popf
adc
shlb
pop
aad
inc
add
leave
fistpll
push
mov
mov
fs
clc
pop
movsl
sbb
xchg
in
cmp
jmp
dec
jae
xchg
cmpl
cmp
test
ljmp
int3
jl
xor
sub
int3
sbb
push
imul
vpunpckhwd
or
mov
dec
rorl
imul
stos
jmp
xor
xchg
sti
mov
add
add
or
test
lods
and
jmp
inc
cmc
fwait
out
cmpsb
cmp
int
rorb
mov
cwtl
xchg
test
dec
mov
jno
dec
aam
jg
ret
push
cmp
aam
test
std
icebp
jne
mov
or
xchg
inc
pop
mov
cs
inc
ror
jo
xchg
pop
rcll
mov
daa
mov
push
in
dec
push
and
dec
rcl
adc
and
push
sub
clc
adc
jne
inc
stos
and
sub
inc
fcomip
xchg
and
cmp
pop
or
mov
out
inc
sbb
mov
shrb
pop
mov
and
imul
xchg
ret
fwait
push
nop
xor
sti
inc
dec
int
xor
xchg
insl
arpl
mov
xchg
pop
data16
xor
dec
in
push
and
in
rcl
or
sbb
add
mov
and
pop
dec
mov
xor
lret
scas
stc
xchg
mov
je
aas
je
fidivs
addl
cli
popa
adc
cmp
aam
mov
mov
push
xchg
adc
or
xchg
push
iret
sbb
popa
into
cmpsb
jge
lods
push
add
icebp
add
fists
in
or
imul
int
aaa
pop
clc
cmp
rcrb
psllq
xchg
pop
stos
inc
jo
push
gs
bound
aas
icebp
dec
mov
repnz
jl
mov
lods
int
mov
add
out
sub
mov
sbb
xchg
jne
mov
fdivr
mov
ds
jecxz
mov
pop
cmpl
mov
roll
fdivrs
push
jle
push
add
dec
outsb
pop
add
inc
cmp
movsl
jb
adc
inc
xchg
loop
int3
mov
cld
aad
add
int
pop
fmul
mov
sti
out
xchg
push
fidivrl
shrb
imull
outsl
cmp
lock
repnz
sub
movsb
adc
lret
inc
xor
insb
fiadds
pushf
xchg
inc
push
xor
mov
add
push
add
sahf
lods
push
fcomp
xchg
call
fcomps
jmp
test
jns
testb
mov
or
out
xlat
lock
add
pop
jne
jae
mov
in
mov
movsb
xchg
mov
adc
fistpl
inc
or
dec
mov
xchg
mov
push
loope
mov
aas
dec
push
aam
cld
arpl
fs
cli
adc
mov
addl
jno
mov
scas
cmpb
xchg
pop
mov
xor
cmpb
jne
push
mov
or
jae
xchg
scas
mov
ja
popa
jno
mov
lds
add
and
pop
aad
mov
add
aaa
icebp
fimull
jo
in
mov
fistl
cmpsb
add
adc
dec
push
not
test
jbe
cmp
jmp
jae
hlt
mov
es
mov
xor
cs
inc
sub
mov
nop
jecxz
sbb
loope
jns
mov
out
jl
xor
stos
fsubrs
pop
mov
mov
sbb
jle
fincstp
sti
mov
notb
hlt
aad
push
jg
push
mov
stos
bound
and
dec
or
cs
cmp
mov
jno
je
aad
js
fildll
gs
lods
fstpl
or
fcompl
cmp
adc
and
and
hlt
cmc
jl
loopne
aad
or
mov
jl
jns
enter
jbe
jbe
and
jle
inc
andl
cmc
push
shl
sbb
adc
arpl
and
jp
jp
lds
push
adc
std
ja
fistpl
in
dec
rorl
icebp
test
xchg
sarl
xchg
or
adc
adc
pop
mov
mov
inc
pop
xor
sti
add
mov
push
or
mov
insb
mov
call
das
or
idivl
pop
das
dec
add
shrb
jg
lock
jno
inc
fnstsw
clc
sub
inc
cltd
pop
nop
push
jmp
cmp
pushf
insl
jae
addb
leave
inc
pop
sub
call
insb
lcall
and
adc
cmp
mov
jmp
loopne
jl
daa
or
and
cmp
lods
pop
lret
ror
outsl
fldl
les
inc
andb
mov
jge
jno
cmpsb
in
jg
sarb
cs
lods
add
mov
add
mov
mov
out
dec
sub
adc
lretw
lods
ljmp
pop
jne
jb
adc
popa
je
ljmp
out
ffreep
cmpl
into
ror
movsb
dec
pop
iret
mov
and
mov
mov
jg
stos
lahf
iret
adc
rclb
and
or
mov
cmp
push
mov
fldt
xor
int3
and
fwait
insl
fidivs
scas
mov
clc
divl
push
in
jle
std
mov
xor
fucomip
das
inc
jno
cmpsb
xchg
push
sahf
fwait
and
mov
repnz
sub
xchg
adc
or
jo
sbb
dec
sub
mov
push
inc
fsubrs
stos
mov
clc
stc
ja
stc
lret
mov
xchg
pop
fisubrl
push
or
hlt
sbb
sbb
out
fadds
and
adc
ds
jno
test
out
jb
lret
cld
adc
je
jp
adc
cmpsl
push
loope
adc
inc
cltd
lahf
es
mov
push
fs
dec
ds
push
test
lret
cs
sbb
cmp
loop
jns
jne
cwtl
adc
cmpsl
lods
ficoms
aad
mov
data16
mov
cwtl
or
cltd
cmp
jnp
push
sub
pop
mov
stc
jae
out
nop
push
add
mov
testl
jg
inc
gs
mov
aaa
stos
data16
sarb
jo
xchg
ret
addl
fistpl
fs
outsl
or
fsubrl
int3
repz
sub
xchg
inc
jecxz
scas
adc
sahf
mov
dec
imul
mov
es
xor
int
mov
sbbl
sub
mov
jb
jg
insl
push
fcmovbe
mov
mov
fucomi
xlat
push
insl
jg
mov
shrl
pop
jnp
mov
stc
aaa
and
mov
push
mov
ror
orb
mov
dec
dec
jp
ja
pop
inc
pop
mov
rclb
jmp
std
pop
int3
adc
xor
jle
push
fdecstp
and
sti
fisubs
test
sub
lds
push
sub
xor
xchg
xor
adc
in
insb
jnp
and
aas
xlat
addb
repnz
push
out
push
sbb
add
out
mov
dec
mov
stc
aas
mov
pop
and
mov
jecxz
xchg
sbb
add
lock
sub
mov
insl
shrb
sub
mov
xor
dec
lahf
xchg
subl
push
loop,pt
clc
popf
sub
pop
mov
jae
xchg
sti
jmp
pop
jae,pt
pop
inc
mov
pop
fbld
repnz
fstpt
test
inc
out
daa
mov
mov
lds
nop
dec
in
das
insl
sub
insl
mov
mov
test
aaa
mov
mov
pop
scas
popa
mov
aas
dec
xlat
lods
outsb
sbb
popw
mov
sub
cmp
dec
les
dec
ja
jle
mov
xor
cwtl
cmpsb
int3
cmc
mov
mov
or
jmp
aas
mov
fs
stos
jmp
cltd
jle
into
push
xor
nop
call
addr16
int
lock
jmp
jno
fwait
into
stos
xchg
in
shlb
subl
jnp
mov
xchg
roll
mov
xchg
sbb
arpl
sub
push
outsb
scas
outsl
jle
dec
lock
pop
jne
leave
in
rcrl
xlat
or
sub
mov
cmp
jl
nop
cmpsl
add
sbb
dec
inc
mov
adc
dec
add
or
push
cmp
mov
aam
dec
add
lods
icebp
xor
dec
ja
in
and
lret
mov
enter
inc
daa
xchg
ljmp
lret
sub
into
lret
lds
lods
push
pop
inc
sti
push
add
add
rclb
mov
fadds
mov
push
cmc
in
mov
mov
adc
out
les
adc
lods
les
shl
adc
dec
dec
mov
or
sti
add
cmc
movsl
in
inc
mov
aam
dec
ret
cmp
dec
pop
mov
cwtl
sbb
adc
in
scas
xor
fwait
shrl
call
jae
push
inc
sti
int
and
jbe
ss
pop
lods
mov
sti
daa
pop
cli
push
ja
aad
outsl
testl
loopne
dec
js
mov
ficomps
push
ljmp
lock
push
push
lret
fimuls
das
mov
inc
add
inc
loop
popa
jg
mov
sub
jmp
into
adc
push
mov
or
pop
arpl
fsubp
jle
in
test
iret
popa
int
fldcw
fstl
mov
stc
scas
in
cmp
push
jp
push
and
and
adc
mov
jne
pop
xor
pop
jmp
icebp
ret
cmp
mov
icebp
fiaddl
sbb
das
adc
pop
icebp
sti
or
sub
out
xchg
jo
nop
push
scas
movsl
test
ljmp
jge
push
mov
lret
inc
mov
pop
xor
bound
xchg
shll
out
movl
adc
and
mov
dec
outsl
mov
xchg
mov
daa
jmp
daa
jecxz
aam
push
adc
and
lods
and
and
leave
in
ljmp
ffree
add
fs
mov
lahf
and
fistpl
lret
stc
stos
test
fwait
jnp
push
xchg
sub
push
ljmp
add
enter
outsb
outsl
aad
jne
lcall
fsub
jge
mov
inc
jo
adc
or
arpl
mov
or
mov
ficomps
lock
dec
nop
rcl
mov
ret
jns
and
jo
fs
cmp
stc
or
push
testl
repnz
insb
add
jp
mov
dec
xor
shlb
xchg
pop
enter
in
and
aam
cltd
adc
jb
push
push
das
repz
mov
jl
bound
push
lret
adc
inc
or
repz
fcomip
test
cmp
loope
pop
jne
lret
call
xor
leave
xchg
mov
dec
aaa
mov
popf
ret
push
loope
sbb
and
pop
addr16
imul
xchg
scas
jmp
les
daa
jp
sti
repnz
mov
cld
lret
cmpl
pop
mov
out
add
dec
push
xchg
cli
aaa
push
rclb
cld
inc
movsl
lds
mov
sahf
shll
dec
aaa
das
xchg
or
cmp
add
lea
mov
inc
bound
test
sahf
push
push
ja
cwtl
sbb
inc
push
adcb
add
imul
and
mov
sbb
call
inc
cmp
mov
loopne
pop
cmp
push
out
push
outsb
cli
shlb
mov
jo
rol
out
push
mov
sbb
test
pop
add
pop
dec
mov
inc
dec
cltd
imul
jae
sbb
scas
in
and
rcr
push
adc
imul
jbe
jno
pop
sbb
repz
enter
inc
xchg
dec
lahf
mov
nop
fbld
fildll
rclb
mov
mov
out
dec
mov
xchg
je
inc
mov
xchg
cwtl
lds
jnp
dec
loope
mov
sbb
int3
adc
and
sti
and
dec
mov
pop
jae
adc
push
jne
xchg
in
filds
popf
ljmp
cmc
push
movb
xchg
mov
fldt
dec
jmp
mov
shrl
xor
xchg
pop
jnp
loop
addb
sbb
jae
fprem1
sbb
pop
cmp
add
aas
xchg
sub
insb
addr16
bound
mov
lcall
cld
or
imul
dec
and
pop
mov
mov
or
pop
and
dec
xchg
loope
dec
ret
fstl
push
in
add
inc
push
lock
stc
sbb
xor
pop
push
js
fcomps
dec
test
and
xchg
fisttpll
dec
push
lahf
jle
cmp
sub
add
inc
pop
call
ret
repnz
je
xor
adc
test
jb
or
fstpt
cmp
sbb
or
je
nop
popf
out
ljmp
cmp
mov
roll
std
aaa
in
mov
push
lds
jecxz
add
in
adc
repz
pusha
push
and
push
adc
and
and
xchg
inc
or
sti
test
in
mov
and
lret
xor
cs
sub
adc
hlt
mov
mov
out
inc
mov
push
jg
subb
cmp
ror
cmp
adc
push
into
lahf
subb
xchg
push
xor
icebp
pop
mov
pop
push
cmp
jnp
or
addr16
sbb
add
and
call
mov
jge
stc
or
ds
bound
aaa
lcall
decl
scas
testb
imul
movsb
add
sbb
sub
jge
push
and
out
mov
jecxz
mov
test
mov
mov
aaa
jmp
test
mov
cmpsl
push
clc
js
sbb
ret
jmp
or
dec
sub
or
fnsave
push
mov
mov
jmp
adc
push
push
inc
xchg
loop
hlt
outsb
sub
and
in
mov
xor
out
cmc
sbb
sub
repz
outsb
xchg
imul
repnz
jae
in
pop
push
add
leave
add
dec
ret
movsb
aad
addr16
imul
hlt
repz
fstpl
mov
sub
dec
mov
int3
or
outsl
mov
pusha
pop
stos
xor
cmp
inc
cld
jle
or
or
clc
mov
jbe
push
ja
inc
bound
jg
mov
pushf
pop
stos
shlb
repnz
stc
push
inc
in
enter
mov
and
push
jge
jmp
xchg
int
dec
pop
inc
push
ljmp
cld
gs
fimuls
sbb
loope
sbb
popa
or
pop
push
sarb
ss
dec
fisubrl
scas
inc
push
pop
adc
add
stc
aaa
mov
cmp
lods
popa
and
xor
mov
fsubrp
add
popa
pop
andl
in
loope
mov
pop
scas
arpl
adc
push
sahf
mov
or
add
jo
push
pusha
leave
cmp
fnstsw
add
push
push
or
ja
dec
sbb
add
jo
imul
mov
fnstenv
push
insl
push
mov
mov
movsb
mov
rcrl
jbe
push
test
push
push
cmc
push
lret
leave
cmpsb
pushl
in
test
outsb
jbe
push
ss
pop
inc
cli
push
mov
xorb
insl
inc
aas
xchg
outsb
jmp
cmp
sub
push
xorb
or
fwait
push
fidivs
pusha
dec
adc
mov
sbb
fwait
mov
fs
dec
repz
clc
fisttpl
hlt
lcall
xor
loop
pop
fistpl
pop
add
xchg
stos
push
jg
mov
sub
push
mov
lahf
inc
sub
push
lss
inc
in
popa
push
or
movsb
cmp
sbb
cmp
mov
mov
outsl
jle
pusha
pop
sahf
aad
add
adc
loop
mov
mov
mov
jno
inc
lods
into
iret
sub
shll
pop
push
jbe
jecxz
ja
xchg
fldt
in
xchg
lret
out
cmpsl
jbe
loop
jno
mov
cmp
cmp
sub
iret
push
pop
cmp
lahf
icebp
ljmp
mov
dec
loopne
dec
orb
inc
mov
std
stc
iret
cwtl
jge
fwait
scas
stos
push
loop
pop
jo
and
das
jb
jne
or
dec
and
xchg
and
mov
sub
aam
cmp
jo
adc
imul
push
xorl
jb
movl
lds
mov
pop
sub
or
mov
sbb
xchg
mov
pop
loopne
outsl
sarl
std
pop
dec
lret
test
mov
pop
daa
push
imulb
mov
icebp
or
dec
int
adc
mov
or
insb
or
les
pop
add
xchg
sbb
jne
add
jbe
movsb
in
call
push
ja
and
pop
xor
xchg
fbstp
jge
sbb
jae
cwtl
pop
xchg
clc
dec
fwait
les
lods
icebp
inc
xchg
add
repz
jecxz
les
push
add
mov
adc
in
sub
cld
cltd
cmp
cmp
insl
adc
loope
jns
ret
xor
pop
leave
out
scas
add
clc
add
loopne
push
std
arpl
loopne
scas
in
add
or
ds
roll
test
jae
bound
add
and
jl
jle
lods
movsl
loop
lahf
xchg
in
repz
cmp
popf
pop
add
xchg
jno
add
mov
sbb
enter
cmc
clc
lret
cmp
loopne
adc
fisubl
adc
stos
sub
aas
jp
divl
jne
jge
cmpsl
insl
sbb
inc
lock
mov
cwtl
add
add
xor
loop
mov
sbb
lcall
addr16
jp
push
push
enter
mov
add
mov
sbb
pushf
lds
sti
and
adc
add
mov
adc
fwait
ret
and
pop
inc
xchg
push
mov
xor
repz
inc
mov
and
enter
stc
test
outsb
push
test
or
push
sub
push
fistpl
push
cmp
shrb
dec
xor
sbbb
jg
mov
dec
lret
and
mov
orb
pop
dec
imull
inc
jb
gs
cmp
push
pop
das
cmp
push
jg
out
and
xchg
xor
dec
sbb
les
jle
adc
or
fdivrs
cmp
ljmp
int3
mov
pop
sub
out
jge,pt
dec
fildl
shll
arpl
imul
mov
scas
in
out
cli
jge
inc
push
mov
out
sub
outsl
sub
mov
aaa
pop
xchg
pop
sbb
xchg
out
cmpsl
add
es
sub
ljmp
movsl
inc
in
xchg
mov
dec
inc
hlt
test
dec
pop
out
dec
xlat
jo
cwtl
cmp
bound
dec
and
movsb
stos
pop
pop
les
cmc
add
mov
adc
je
addr16
pop
sub
push
inc
orl
cmp
cs
fisubl
mov
repnz
jne
aam
pop
xchg
stc
incb
lcall
sbb
outsl
push
mov
or
cmp
mov
int3
xlat
fistpl
sarl
aaa
sti
nop
popf
pop
repz
subl
shl
xchg
decl
or
icebp
test
cmpsb
dec
lock
in
adc
sub
dec
insw
mov
mov
mov
int
mov
mov
xor
adc
mov
sarb
pop
stos
testl
aam
jl
lret
push
mov
std
inc
push
and
les
xlat
mov
xorl
shrl
jns
or
insb
cld
mov
jne
push
stc
dec
aam
cli
fbstp
mov
repz
dec
repz
ret
testb
es
sarl
or
adc
in
nop
repz
gs
xchg
push
imul
lret
aaa
in
xor
shrl
jg
rorl
dec
inc
xchg
sarb
mov
ret
sub
inc
push
mov
push
and
add
mov
iret
add
out
addr16
inc
out
sub
sub
or
lea
and
dec
xor
in
adc
mov
ffreep
fsubrl
add
shrl
movsb
mov
push
addr16
aaa
push
stos
addr16
sub
or
xlat
dec
lcall
stc
and
cmpsl
inc
imul
dec
sub
sub
in
push
out
aad
aad
rcrl
stos
lock
adcl
out
mov
or
sub
pop
int
pop
push
fmul
cmovo
mov
stos
jb
shlb
sbb
adc
push
mov
scas
jmp
imul
das
movb
out
in
xchg
repz
mov
add
sbb
imul
std
test
sti
imul
inc
rclb
enter
dec
mov
sbb
outsb
ficoml
push
loope
jne
rolb
pop
pop
sub
jg
adc
fisubl
dec
aam
addl
stos
loopne
pushf
sti
pop
sbb
dec
aaa
xchg
test
movsb
sbb
jb
and
cmpsl
pop
jo
ljmp
xlat
sub
into
ds
lahf
mov
sub
cs
push
inc
je
xchg
adc
stc
pusha
inc
push
fsubs
arpl
lahf
adc
fistpll
fs
call
movsl
test
scas
sti
mov
rol
movsb
cmp
or
fs
lds
ret
iret
sub
pop
xor
jb
mul
fwait
pusha
jns
mov
mov
jg
jb
jae
test
pop
or
addr16
inc
bnd
arpl
inc
call
ja
outsl
ret
popf
cmpsb
into
push
stos
and
mov
push
xchg
jmp
int
mov
fs
mov
pop
in
int3
and
mov
cmp
popa
les
adc
sbb
das
mov
inc
push
and
ficoml
pop
mov
xor
in
mov
sub
stos
mov
push
push
add
jno
pop
in
lcall
in
lds
insl
sbb
test
push
notl
xchg
fistps
sub
adc
xor
rolb
add
fcoml
dec
adc
inc
sti
mov
rcll
outsl
test
jb
mov
shr
movsb
lret
adc
push
imul
repnz
mov
xor
dec
roll
out
ret
mov
jecxz
negb
jnp
aas
shll
subl
out
lock
pop
jns
loope
dec
xchg
xchg
fisubrs
sub
test
and
repnz
dec
jge
and
cmp
hlt
arpl
repnz
std
sub
ja
nop
mov
xchg
ret
fdiv
xchg
popa
testb
insl
mov
xchg
push
loope
fldcw
jbe
inc
fsubrs
xchg
into
adc
mov
sub
xchg
jno
dec
push
pminub
out
jbe
cli
ja
ss
and
lret
stc
xor
sbb
jbe
shll
es
xacquire
lods
cwtl
iret
ds
sti
les
imul
mov
pop
jmp
bound
and
movsl
rclb
movsl
mov
sbb
insb
stos
mov
mov
out
andl
ret
in
sub
xchg
stos
lock
jo
insb
mov
ss
pop
inc
sbb
sbb
imul
push
pop
mov
out
enter
push
xchg
or
adc
outsl
sub
loopne
dec
adcl
rep
push
or
insl
push
test
jne
adc
jecxz
adc
clc
popf
fildl
cmp
mov
and
shl
push
xor
cmp
imul
insb
bound
mulb
scas
ds
test
xlat
cmp
adc
jle
adc
dec
xchg
fstpl
aas
xor
sub
mov
xor
pushf
jo
sub
push
mov
fisttpll
or
lahf
clc
add
ret
stos
movsb
xchg
cmp
pop
mov
pop
inc
fsubrp
jl
xor
xchg
movsb
and
xchg
das
cltd
das
lret
mov
adc
sub
sbb
sbb
sub
xchg
mov
lods
add
push
hlt
push
mov
dec
xor
adc
or
cmp
dec
sub
cld
in
repz
pop
cmp
aas
or
adc
inc
movsb
icebp
orl
lcall
mov
mov
sti
in
test
test
add
subb
mov
movsl
ret
lea
mov
cmp
jnp
ljmp
and
cwtl
out
cmc
xchg
adc
aaa
sbb
jb
xchg
sti
lret
and
mov
pxor
fstps
jl
mov
imul
mov
inc
jle
dec
repz
xchg
add
fdivrs
mov
inc
mov
dec
movsl
ret
fsubrp
jge
shll
inc
je
shlb
push
nop
jmp
mov
add
aas
imul
pop
adcb
jecxz
jne
addr16
adc
in
lret
mov
int
cmpsb
aam
loop
testl
push
dec
sbb
push
ljmp
scas
and
mov
mov
popf
adc
addl
jo
bound
jbe
pushl
sbb
inc
mov
xchg
adc
push
pusha
or
cld
js
and
not
jg
repz
iret
stos
dec
pop
mov
sub
mov
popa
add
push
lods
in
push
jecxz
xchg
jns
loope
dec
fistps
mov
rolb
int3
mov
dec
jmp
lahf
mov
test
jg
inc
jnp
fmuls
js
mov
aam
ds
and
icebp
repnz
jbe
insb
fisubrs
mov
orb
mov
stos
data16
xor
inc
jbe
sti
mov
push
sub
push
jmp
xchg
into
xchg
and
mov
iret
dec
addl
cmc
cmc
push
stos
and
test
pop
mov
dec
inc
cwtl
jge
adc
stos
jg
cltd
sbb
pop
sub
fwait
scas
sahf
or
out
ret
inc
fldenv
jae
cmpsb
mov
std
jg
and
xchg
fcmovbe
and
in
pop
cmp
cs
sub
lea
push
jp
xchg
xchg
fcoms
mov
push
sbb
cmp
sub
les
int3
test
js
lcall
mov
ret
adc
shlb
stos
push
insb
ja
push
cld
mov
ret
daa
push
sub
xchg
fnstenv
lret
dec
adc
xchg
mull
decl
push
mov
push
cwtl
xlat
and
fcomp
fadd
add
cli
push
sub
daa
adc
iret
cltd
cld
xor
add
adc
hlt
xchg
fists
push
aaa
les
or
andb
imul
sbb
jae
dec
and
sbb
lahf
or
dec
lcall
cmp
aad
nop
cmc
jecxz
inc
insb
out
mov
into
sub
insl
scas
imul
int3
imul
adc
fucom
jnp
sub
sbb
rorl
pop
xor
movsl
js
jne
out
imul
test
das
call
jge
add
aad
inc
xchg
adc
out
push
jns
outsb
sahf
cmc
cltd
push
stos
xchg
cli
xchg
test
xorl
pop
sbb
divb
out
andl
adc
movsl
cmpsl
cmp
cmpsb
lods
and
and
push
in
add
inc
jmp
fdivl
ss
jg
fdivrs
jne
push
scas
mov
negl
adc
dec
mov
idivl
cmp
push
inc
int3
xor
aad
shrl
stos
les
sbb
shll
dec
jns
pusha
sti
and
add
xor
sbb
push
daa
and
add
or
and
add
outsl
test
sub
loopne
sub
cltd
rorb
leave
push
and
dec
dec
jl
in
repz
jnp
mov
fisubrs
or
pop
and
mov
and
lods
je
xlat
and
xor
imul
mov
and
mov
jnp
ja
sbb
push
add
xor
adc
inc
inc
xchg
mov
repz
mov
jmp
imulb
jl
leave
nop
fnsave
insl
imul
call
in
push
push
hlt
stos
in
mov
incb
dec
fldt
sub
loop
dec
int
daa
idivl
xor
xchg
adc
lods
lret
inc
repz
cs
or
pop
xchg
cmp
mov
sbb
pop
and
loop
jle
dec
add
lcallw
sub
fistpll
mov
lret
mov
imul
xor
sarl
pusha
test
hlt
and
and
jno
sub
jmp
lcall
xchg
jp
inc
sub
lret
les
sub
mov
mov
std
xchg
dec
xor
insl
xchg
lcall
mov
mov
mov
and
or
pusha
movsb
divb
dec
sub
add
cmp
dec
mov
cs
mov
or
jmp
lret
cmp
xchg
cmpsl
adc
or
cmpsb
sub
xchg
and
std
bound
fwait
int
mov
movsb
inc
or
int
xchg
push
mov
sbb
imul
int
cwtl
sub
jbe
mov
mov
adc
fmull
jnp
out
ja
lock
ror
push
imul
inc
inc
sub
xor
lret
mov
divl
xor
cs
fucom
mov
xor
aaa
loop
xchg
xchg
out
ljmp
and
sbb
mov
fnsave
test
jle
popf
xor
sahf
call
xor
shl
je
fistl
add
xor
push
dec
adc
sarb
roll
insl
adc
mov
push
pop
or
mov
mov
push
imul
mov
fimuls
and
sbb
lss
mov
mov
cltd
mov
sub
std
jo
mov
out
scas
inc
out
jns
cli
inc
popa
pusha
ja
test
out
lcall
dec
cltd
mov
in
inc
add
nop
cmp
stc
add
mov
arpl
lcall
mov
cmp
popf
or
fwait
lahf
cmp
push
push
cwtl
jecxz
icebp
mov
sbb
fidivl
stc
and
in
and
ja
mov
jbe
xchg
push
add
mov
or
push
daa
add
and
nop
add
gs
xchg
lret
hlt
int3
in
mov
test
xor
out
xchg
enter
cmp
add
dec
call
adc
add
inc
jmp
xor
mov
nop
leave
scas
lret
adc
dec
push
push
mov
xchg
int3
cs
mov
call
xlat
nop
jl,pt
mov
mov
fsubl
pushf
cld
ret
push
cmpxchg
fadd
loope
aas
pop
ficomps
adc
loope
jb
int
xchg
pushf
mov
je
and
push
inc
shld
shrl
test
and
sub
mov
jae
pop
jecxz
aad
mov
add
dec
cmpsl
mov
and
or
lret
xor
mov
fwait
sahf
sub
andb
les
push
push
mov
test
jnp
ficoml
adc
mov
sahf
cltd
outsb
ds
int3
mov
mov
sub
std
movsl
mov
scas
push
xchg
movsl
jb
into
outsb
test
mov
bound
pop
pop
and
sub
xchg
push
or
insl
xchg
add
mov
ds
unpckhps
add
nop
mov
pop
je
mov
stc
push
mov
pop
sub
rcrl
aaa
cmp
ds
cmp
xchg
nop
leave
mov
loop
nop
and
mov
popf
int
stc
mull
fmull
lds
out
adc
mov
fstps
mov
sub
or
es
loopne
add
inc
leave
lods
dec
les
mov
and
mov
push
arpl
xchg
subb
adc
movaps
in
jmp
ljmp
pop
shrl
clc
mov
inc
orb
inc
push
lods
dec
cmp
clc
xchg
not
push
fidivl
mov
movsb
jno
inc
lock
lods
push
pop
jae
lock
adc
pop
scas
rcrb
stc
in
push
int3
aam
adc
outsl
fimuls
fsubs
mov
mov
leave
mov
cmpsb
stos
xchg
popa
or
fsubrs
jno
stos
jne
outsb
jg
jp
inc
roll
pop
mov
loopne
aaa
jmp
cmp
bound
inc
push
test
mov
imul
nop
mov
fxam
cld
add
mov
in
into
xchg
jno
sbb
popa
mov
dec
or
pop
movsb
jbe
loopne
pop
mov
mov
lds
sbb
xlat
pushaw
cmp
movsl
in
shlb
pop
cld
pop
sti
stc
dec
fs
mov
and
es
sub
pop
in
lea
adc
lahf
js
mov
sub
jae
push
shrb
stos
das
pop
mov
es
sbb
push
xchg
cmp
and
cmc
fs
test
or
mov
mov
ret
imul
arpl
shrl
ds
fcompl
xchg
sub
sti
fwait
cltd
imul
mov
clc
lds
mov
xchg
and
or
aad
sub
imulb
ret
test
pop
lsl
dec
es
push
popa
lods
pop
clc
ljmp
pop
popf
mov
dec
test
in
cmp
or
sar
fdivl
add
mov
andl
jno
push
and
mov
jge
dec
cli
loop
xchg
mov
and
mov
in
fcoml
mov
adc
repz
dec
inc
repnz
xor
dec
imul
mov
mov
adc
icebp
ja
clc
push
cmp
mov
push
data16
xor
jnp
gs
insl
jae
mov
pop
mov
inc
sub
out
pusha
dec
cmp
fsubr
jno
mov
bsf
mov
mov
pop
pop
adc
inc
sbb
arpl
aad
adc
and
js
mov
insb
xor
cmp
sahf
or
mov
cmp
jae
dec
insb
adc
mov
jae
test
outsl
xor
mov
enter
xabort
stos
arpl
xchg
mov
inc
adc
js
jno
mov
repz
js
lcall
jmp
cmc
pop
pop
jb
inc
fwait
push
repnz
jmp
xchg
sarl
mov
divl
vminsd
mov
fimull
mov
fst
mov
or
dec
scas
cmp
adcl
rorl
push
cmp
test
adc
int
popa
sub
jl
cwtl
push
cmp
push
je
push
ljmp
jle
popf
adc
imulb
jae
pextrw
adc
out
fsubr
mov
push
sahf
repnz
cmp
lea
xor
push
sbb
incl
stc
inc
sbb
push
aad
sbb
addr16
jecxz
mov
in
sub
or
flds
mov
ja
std
sub
negl
in
inc
rclb
ret
jmp
sbb
popf
clc
jo
in
iret
dec
jle
push
inc
nop
inc
rcrb
or
xor
loope
ds
cmpsb
push
or
fwait
inc
iret
mov
mov
ret
inc
jmp
xlat
adc
pop
dec
jae
pusha
mov
jno
out
fs
out
add
in
into
adc
pop
pushl
in
lea
fnstsw
sub
stos
loop
scas
cmp
ret
jbe
and
pusha
mov
add
hlt
test
and
popa
inc
cmp
push
mov
adc
rolb
cmpb
enter
push
clc
push
insb
pop
fdivrl
ljmp
cwtl
lods
or
lret
sbb
dec
inc
inc
pop
sub
mov
xchg
mov
das
push
pop
mov
bound
enter
push
fwait
inc
notb
sbb
inc
xor
xchg
scas
addr16
xorl
fcmovbe
xadd
test
insl
push
jp
xor
push
rcll
stos
popa
sar
hlt
mov
hlt
lret
mov
lods
push
xorb
dec
mov
test
xchg
mov
push
add
fs
imul
sbb
movl
xchg
cmpsb
sar
or
das
mov
rorl
inc
es
mov
push
mov
insl
sub
scas
cmp
xchg
xor
call
test
mov
pop
or
movsl
in
daa
mov
movsl
mov
lods
test
adc
aam
push
xor
addr16
stos
xor
jge
loope
jl
mov
sahf
pop
adc
pop
call
icebp
cmp
shrb
mov
fiadds
mov
dec
xchg
fdiv
int
leave
pshufw
test
loopne
pop
out
loopne
mov
jno
and
ljmp
movhps
stos
add
sbb
xchg
outsl
lods
pop
out
bound
mov
dec
repnz
fidivl
rolb
lea
js
inc
insb
add
stc
xor
rcr
sbb
call
pop
jae
outsl
in
xchg
adc
mov
lods
dec
dec
movsl
cld
popf
scas
scas
cmp
sub
fmull
dec
push
xchg
and
out
cmc
les
das
push
repz
or
and
bts
and
pop
nop
ljmp
and
mov
jno
cwtl
mov
cli
lret
shlb
xor
mov
push
lods
fisubrl
pop
push
sbb
jbe
mov
cmp
rcl
mov
int3
sti
sub
or
add
dec
sarb
mov
lret
pop
dec
shlb
add
dec
repnz
cld
mov
dec
push
cmpsl
mov
in
cwtl
test
pop
push
lock
and
shlb
xchg
out
or
add
mov
or
pop
pop
nop
cwtl
sarl
pushf
cwtl
ss
stos
rcl
add
fsubrl
add
push
add
dec
out
push
pop
dec
xor
inc
push
ficoms
aas
mov
xchg
repz
xor
and
xchg
adc
push
xor
jp
pop
cltd
movsb
insl
add
fxch
dec
mov
movsl
mov
lock
adc
std
mov
je
xchg
lock
push
stc
enter
outsb
arpl
add
cmp
cld
sub
push
sub
je
xchg
iret
mov
test
pop
scas
and
inc
and
mov
mov
jge
scas
nop
lds
xor
adc
and
cli
jecxz
jae
imul
test
fmul
pop
mov
sub
pop
cwtl
negl
sub
out
mov
into
popa
sub
jge
xchg
pop
aad
out
clc
xlat
in
lcall
movsb
or
ds
in
test
xor
loopne
mov
or
outsl
lret
push
dec
out
add
je
cmp
mov
push
fwait
mov
sbb
insb
cmp
lret
cmp
imul
xchg
cmpsb
mov
pop
mov
jno
add
and
cmp
mov
xor
pop
or
mov
pusha
xchg
imul
ret
pushf
mov
xor
jne
jns
jb
stos
loopne
and
pop
mov
sbb
jmp
adcb
andl
mov
jns
test
shll
mov
mov
jo
cmp
jne
add
cmpb
fs
adc
mov
outsb
xchg
jp
xchg
add
push
adc
cs
or
or
or
nop
shlb
iret
in
cltd
xlat
mov
rcll
pop
dec
sub
in
mov
shrb
je
ret
adc
xor
ljmp
mov
mov
add
ljmp
pop
movsl
ret
jg
aaa
adc
adc
icebp
fwait
int
fbstp
pause
sub
in
mov
subl
mov
dec
dec
in
sahf
pop
shrb
cmpsb
jbe
pushf
xchg
or
rclb
push
push
sub
pop
mov
xchg
adc
push
cmp
imul
or
cmp
add
icebp
mov
pop
mov
test
jb
jo
pusha
inc
sub
idiv
push
or
xor
mov
push
dec
mov
push
gs
fbld
inc
jl
fsubrs
in
ret
sub
test
neg
clc
enter
adc
loopne
js
stos
stos
int
vpsllq
repnz
xchg
divb
inc
dec
cmp
fwait
cmp
xor
pop
cmp
jg
pop
movsl
faddl
icebp
sub
adc
dec
fisttps
sbb
fs
ljmp
jecxz
mov
testl
mov
cmp
and
inc
cli
mov
sbb
pop
shl
in
inc
sar
jns
cmp
lret
adc
popf
call
jmp
scas
loope
fisubs
sbb
loopne
cmp
rcll
inc
enter
add
adc
jbe
repnz
dec
mov
xlat
dec
jbe
adc
mov
lret
sub
loope
pop
jnp
mov
sbb
jge
dec
ret
sbb
ret
int3
cmpsb
dec
dec
ret
pop
sti
inc
cs
adcb
and
cmpl
lcall
dec
out
cmp
test
cli
pusha
stos
dec
jecxz
cwtl
test
test
sbb
push
insl
icebp
jae
jns
imul
lea
int
addr16
jo
js
pop
out
fcoml
in
jle
xchg
nop
jb
pop
pushf
rorb
mov
cs
es
rorl
scas
into
daa
sbb
cmpsb
or
push
jnp
aaa
adc
js
push
shl
add
sbb
jecxz
xchg
aaa
sub
jb
test
xor
sbb
sti
pop
xchg
hlt
or
add
inc
std
cmp
pop
and
sbb
push
adc
adc
mov
dec
ljmp
loopne
aam
bound
std
loop
int3
sub
sbb
pushf
popa
xchg
outsl
add
lret
jno
clc
leave
cli
jbe
xor
enter
fists
push
adc
jmp
lea
pmaxsw
fsubl
mov
repnz
dec
fldt
jg
pop
into
lcall
pop
adc
mov
xlat
cmp
dec
xor
in
or
lret
les
mov
inc
shlb
mov
inc
shll
ss
xor
xchg
sti
jno
das
mov
add
push
enter
xor
or
mov
aad
movsb
mov
jb
cmp
bound
adc
mov
enter
xor
call
mov
jmp
mov
adc
cmp
mov
gs
je
mov
push
shl
mov
jmp
sub
sbb
or
outsl
clc
dec
mov
test
add
jl
fldl
jns
and
sub
pop
pushf
cmpb
xchg
rol
jae
sbb
stc
jbe
jle
jb
add
fs
lret
scas
xchg
test
cmp
mov
cs
xchg
dec
mov
sbb
stos
fidivrl
add
jno
shr
sbbl
mov
sbb
sub
scas
shll
and
adc
lods
mov
pop
cs
scas
das
mov
enter
ss
mov
adc
movsb
scas
dec
popf
roll
inc
in
xor
movsb
scas
std
and
dec
fldt
xor
sbb
dec
sahf
add
mov
bound
pop
push
jg
cmp
cmp
adc
add
lcall
add
fadd
bound
popa
lock
sub
mov
mov
fisubs
out
xchg
add
xor
and
or
pop
test
insl
push
sub
mov
movsl
dec
movsb
aaa
xchg
fwait
out
sub
jns
popa
inc
jno
jnp
sbb
js
cmpsl
ljmp
mov
fdivl
inc
fnstsw
int
dec
pop
repz
mov
movq
lds
hlt
mov
jbe
aad
fmuls
gs
or
fwait
sub
mov
outsl
inc
sbb
shrb
addb
mov
ss
add
xlat
outsb
jp
inc
jnp
bound
push
adc
andl
pusha
xor
test
loop
addr16
push
iret
dec
jge
ds
aas
les
cltd
leave
cmp
ret
sub
push
push
pusha
xchg
dec
into
jb
push
mov
mov
push
add
push
mov
dec
push
xor
dec
jge
or
rorb
fistps
sub
pop
sar
lods
cmp
sub
jl
sbb
adc
push
jne
fs
pushf
mov
mov
into
idiv
andl
fcmovnu
push
sti
sbb
or
imul
push
mov
ret
mul
sub
std
pushf
xlat
ss
sub
pop
aas
mov
das
dec
nop
in
rolb
jbe
jb
aad
dec
sti
mov
mov
arpl
xchg
pusha
cld
std
sub
sbb
pop
xchg
std
jo
push
mov
push
mov
rorl
fldt
add
sti
fimull
adc
push
or
jo
mov
and
std
xor
adc
xor
mov
cmp
ret
add
movsb
mov
sti
hlt
cmp
fldenv
inc
movsb
sub
rclb
xchg
push
push
cmc
inc
xchg
js
ret
mov
movsl
jmp
pop
dec
aaa
xchg
hlt
lahf
cmp
jle
out
pop
aaa
rcll
cmpsl
fbstp
dec
fisttps
xchg
imul
add
cmp
rolb
aad
arpl
lcall
dec
daa
and
lds
scas
push
insl
jae
or
into
test
xchg
fnstenv
mov
and
mov
fimull
sub
jno
fwait
test
xchg
outsb
add
add
mov
mov
push
jnp
mov
sbb
push
ror
addl
jno
jge
push
js
add
mov
leave
loop
sub
shrl
jge
jnp
push
inc
push
lret
arpl
fcomi
and
lret
adc
jne
fwait
rcl
mov
icebp
and
sahf
push
cwtl
jo
fstp
and
les
sti
sahf
push
lods
into
xchg
rcll
pop
mov
lock
ss
dec
shl
dec
sub
int3
cld
xchg
mov
jb
jb
sbb
adcb
cmc
shrl
cmpb
aaa
les
cmpsl
adc
scas
fcomp
adc
into
call
ret
or
pop
loopne
mov
ss
popa
sbb
ss
insb
and
in
push
mov
xor
inc
pop
push
push
movb
mov
add
mov
outsl
xchg
jg
cli
stos
test
fwait
sbb
cmpsb
out
mov
adc
jle
dec
pusha
test
adc
inc
adc
xchg
jmp
sub
and
loope
or
in
movsb
add
je
push
data16
ljmp
mov
add
mov
nop
test
dec
lret
mov
das
inc
daa
xor
xor
mov
sbb
sub
xor
popa
test
sub
mov
pop
sahf
inc
push
or
xchg
or
pushf
add
repz
mov
int3
jecxz
xchg
jo
shlb
cwtl
add
inc
xchg
jnp
jecxz
inc
ds
mov
push
push
push
outsl
cmc
lock
js
xchg
into
push
xor
and
lahf
pop
dec
or
insb
jle
sub
inc
jo
pop
fsts
daa
mov
ret
jg
mov
sbb
adc
idivb
pop
mov
lcall
call
push
es
aad
add
inc
in
or
push
ljmp
or
add
push
pop
arpl
imul
add
sub
pop
sub
shrl
sbb
dec
fwait
shrl
xchg
dec
ljmp
mov
cltd
ret
nop
mov
adc
fwait
pop
insb
and
popf
jae
mov
out
mov
scas
icebp
sbb
or
fwait
sbb
ljmp
outsl
aas
lahf
jmp
jno
jb
outsl
dec
popa
in
mov
pop
out
dec
into
add
sbb
inc
jno
fmuls
mov
pop
sbb
movsb
jne
jle
ret
repz
fistps
mov
pop
cmp
mov
cmp
lods
sarl
es
cmpsl
mov
rcrl
add
xchg
pushw
cltd
mov
dec
or
push
pop
xor
lcall
mov
jmp
cmp
mov
mov
arpl
dec
pop
loopne
lcall
inc
mov
xor
or
dec
test
stos
sar
stc
dec
lock
pusha
cli
adc
js
das
lret
mov
shlb
je
fnstcw
mov
ret
leave
insb
inc
ljmp
jno
inc
mov
int3
add
mov
and
mov
mov
addl
mov
imul
dec
jecxz
xchg
mov
dec
fstl
in
add
and
out
mov
dec
cmp
shrb
and
jmp
stos
jl
sti
adc
imul
jb
mov
mov
and
xor
add
roll
mov
int3
shll
dec
xorl
xchg
or
jns
aaa
sub
push
xchg
sub
mov
faddl
sub
test
fmulp
adcb
in
adc
outsb
xlat
xchg
cmpsb
test
xor
andb
loop
or
in
and
mov
xchg
xor
jg
aaa
cmp
or
mov
dec
and
bound
mov
les
mov
dec
into
mov
outsl
es
sysret
xchg
lret
add
inc
clc
sub
mov
or
xchg
pop
xchg
cli
mov
outsl
push
les
mov
enter
pop
test
pop
and
mov
test
lcall
movb
cmc
es
mov
xorl
andb
dec
sub
call
pop
push
cmp
push
mov
test
push
lds
cmp
add
jge
xor
jecxz
daa
in
cmp
stos
iret
sub
cmpsb
cmp
dec
pop
sub
sub
subl
cwtl
jge
inc
scas
sub
jns
lds
inc
test
mov
xlat
daa
imul
repz
adc
iret
fwait
or
imul
mov
sbb
push
pop
fadd
mov
addr16
jle
cmc
out
mov
add
adc
dec
adc
mov
inc
cmp
movsb
andl
jg
add
inc
mov
fucomp
mov
jae
mov
nop
pop
mov
inc
sti
fcompl
jbe
out
into
xor
inc
fwait
sbb
dec
scas
sbb
xor
mov
icebp
xor
mov
sbb
mov
xchg
cmp
inc
dec
adcb
and
aas
cld
inc
cmp
xchg
jg
popa
push
jne
rcr
rorb
sub
repnz
stos
jmp
out
mov
les
mov
cltd
repnz
ss
mov
dec
sti
fstpl
cs
ds
outsb
inc
mov
xchg
ucomiss
mov
subl
mov
scas
lock
mov
pop
inc
pop
jno
jge
sub
cwtl
arpl
mov
jp
push
cmp
mov
aaa
fisubrs
ss
ss
push
cmpsl
push
jmp
inc
call
jne
outsb
xor
adc
add
sbb
add
sbb
in
pop
in
push
shll
xchg
in
addb
ret
cli
cmp
ljmp
call
adc
aad
xor
and
pop
push
stos
pop
adc
or
ljmp
dec
mov
aad
mov
int
dec
mov
enter
clc
inc
pushf
mov
jnp
xchg
jmp
fwait
icebp
out
mov
pop
aas
or
sbb
jecxz
imul
lds
xchg
xchg
push
ret
mov
pop
mov
lcall
add
mov
pusha
inc
add
std
push
xchg
dec
icebp
sbb
movsl
push
push
jmp
call
aam
loop
mov
pop
aad
iret
xor
mov
rol
xchg
push
outsl
sar
mov
test
sahf
mov
popf
mov
in
test
pop
jno
add
jle
mov
jge
xor
cmpsb
xchg
test
inc
mov
mov
test
outsl
pop
dec
repz
ja
add
cmp
adcb
fdiv
imul
repz
jecxz
jno
arpl
mov
sub
xor
cmp
inc
xchg
cmp
cltd
or
les
je
test
add
mov
iret
scas
cmp
jne
pop
cmp
sti
call
fnsave
int
ja
lret
test
add
jns
fldenv
lret
jns
cltd
adc
dec
icebp
cmp
arpl
clc
xchg
std
lds
je
sub
sbb
scas
int3
std
out
pop
inc
or
lcall
jmp
bound
popf
xchg
or
push
cmp
les
nop
popf
or
jge
fiadds
lock
mov
out
xchg
pusha
push
push
jb
adc
cltd
fsubr
mov
dec
fstl
pop
adc
push
jmp
xchg
mov
test
fimull
lcall
sub
shlb
ss
scas
lods
outsb
mov
icebp
fwait
std
movsl
leave
pop
mov
stos
dec
mov
movsl
adc
out
imul
pop
das
mov
or
mov
inc
add
nop
adc
sbb
jl
movsl
call
outsl
jl
icebp
inc
loope
mov
pop
fwait
inc
lret
imul
cmp
in
scas
inc
cmp
clc
lods
out
pop
sub
lods
mov
out
ficompl
jnp
or
xchg
cmc
cmp
in
mov
sub
cs
mov
and
outsl
xchg
outsl
mov
add
into
out
dec
aad
enter
add
jb,pn
add
mov
add
sub
out
add
push
mov
mov
stc
xor
lods
or
movsl
rcrl
cwtl
imul
or
push
ljmp
out
fcomip
in
in
pop
sub
xor
cli
daa
sbb
xchg
push
dec
xchg
cmpb
orl
dec
stos
in
fsub
mov
out
and
mov
in
pop
push
int
dec
pop
mov
outsb
cltd
mov
in
mov
fcomip
jns
leave
dec
cmc
fwait
icebp
mov
add
inc
std
stos
jge
pusha
inc
jge
jb
xchg
mov
roll
lahf
lret
inc
inc
cmp
push
inc
adc
sbb
pop
or
dec
lret
pslld
ret
mov
mov
lahf
push
sbb
fsubl
mov
adc
mov
and
jnp
jmp
movsb
pop
shl
loopne
dec
popf
cmp
imul
jl
jge
test
push
jmp
ja
shr
mov
xchg
xor
ret
fstpt
sub
notl
xchg
cmpsb
xor
dec
or
cmpsl
in
and
pop
xor
adc
adc
add
out
jae
cwtl
add
ret
push
nop
aam
adc
rorl
jae
jecxz
rcrb
cmp
dec
jae
inc
sar
xorl
sub
or
sbb
loop
pusha
push
cmpsl
or
ret
ret
stc
dec
mov
out
pushf
mov
fldenv
dec
lret
loope
dec
imul
rcrb
outsb
call
fadds
ds
sub
sub
int3
jecxz
cwtl
and
or
cltd
call
scas
out
push
xchg
xor
fdivrl
xchg
subl
sbb
mov
pop
push
dec
ret
add
xchg
jg
data16
and
sbb
lds
lret
jmp
mov
cmp
adc
popa
stc
mov
jno
mov
xlat
fistps
jg
mul
pushf
mov
xchg
rcr
push
bound
out
popf
call
inc
or
into
stos
sub
aaa
mov
aad
dec
add
jno
cmpsl
adc
and
push
cmp
testb
lcall
ljmp
add
inc
or
and
add
fidivrl
jmp
gs
pop
lahf
pop
imul
or
stos
aad
xchg
pop
push
movsl
inc
jb
xchg
jae
and
stos
mov
rcrl
adc
outsl
cmp
fimull
ljmp
sub
in
ja
std
xchg
jb
repz
add
enter
push
cltd
mov
addl
ja
add
pop
pop
movsl
xlat
mov
insb
rcrb
loope
add
lods
aad
mulb
sbbl
jp
xchg
dec
xchg
arpl
jne
push
lea
pop
jge
in
push
pop
cld
mov
icebp
mov
dec
movsl
sub
push
adc
push
jge
sbb
xor
sub
xor
in
pushf
ljmp
insl
sub
push
cmp
cmp
test
and
aaa
out
repz
in
inc
stos
mov
loop,pn
loope
or
je
hlt
jae
sub
fucomi
push
lret
out
and
imul
mov
inc
mov
ret
mov
jmp
nop
shll
add
xchg
pop
lods
enter
and
mov
mov
arpl
pop
xchg
inc
data16
add
mov
shrb
std
rcrl
sub
imull
fmuls
mov
int
leave
push
into
pop
cmp
mov
cmc
cmc
push
mov
out
scas
and
int3
mov
imul
les
sbb
push
shl
jb
push
jb
iret
cmp
cld
dec
movsl
mov
or
addr16
push
int3
mov
adc
push
inc
cmp
fstps
mov
paddusb
dec
filds
leave
jno
dec
ficompl
gs
jp
jo
mov
jae
lds
xor
or
out
stos
add
ret
sti
nop
jecxz
mov
mov
xchg
shll
psubq
inc
or
add
pop
das
stos
and
stos
sar
xchg
stc
jbe
orb
inc
xchg
imul
and
cmpsb
shll
push
cmc
addr16
or
test
inc
push
pop
das
cmp
push
aam
call
adcl
not
mov
fdiv
sbb
inc
cmpsl
dec
mov
mov
dec
aam
cld
dec
cli
pop
ljmp
push
imul
gs
add
cli
adc
andb
aas
stos
adc
push
jae
cs
sbb
mov
and
outsb
fwait
lea
sub
mov
sub
adc
imul
jmp
test
fs
jle
sahf
in
adc
js
jnp
adc
inc
sbb
inc
sbb
call
jmp
mov
sbbb
cwtl
dec
dec
sahf
in
lret
and
test
mov
pop
insl
std
fildl
test
lret
pop
and
sbb
out
punpckhdq
xchg
daa
cmc
sbb
pop
mov
bound
pop
enter
cwtl
inc
mov
inc
inc
nop
xchg
paddd
add
sbb
fsubl
push
ljmp
stc
in
and
jae
std
or
inc
xor
out
sbb
dec
push
aad
mov
mov
lret
jmp
xor
add
or
add
dec
mov
sbb
pop
pop
sti
sarb
mov
fucomi
xchg
xchg
jle
dec
jg,pt
push
shrb
dec
dec
inc
xchg
mov
push
inc
xor
pop
jg
lds
sahf
mov
insb
clc
lea
xchg
adc
out
add
les
cmp
loopne
jmp
and
les
test
push
xor
stc
fdivrs
jbe
xchg
inc
adcb
jo
arpl
ja
rcrb
test
popf
loopne
repnz
stos
ror
push
adc
inc
jo
gs
dec
dec
imul
pop
mov
add
adc
outsb
mov
jns
jle
xchg
out
movsl
mov
loop
rcll
into
hlt
sbb
push
js
mov
sub
pop
inc
or
in
cli
mov
leave
cmp
int3
xor
aaa
push
subb
add
fisttpll
scas
mov
pop
sbb
jns
mov
mov
or
stos
int3
xlat
cmp
or
xchg
jo
ret
mov
lcall
mov
pop
movsb
aam
scas
inc
and
mov
imul
shlb
pop
lea
cmpsl
mov
mov
dec
and
and
mov
outsl
pop
sub
fnstsw
sub
mov
sahf
add
jl
movsb
xchg
xor
pop
ds
sub
inc
and
or
out
and
icebp
jno
mov
andb
icebp
cmp
pop
lods
test
lret
push
cmp
push
je
shlb
negb
int
inc
inc
int
mov
ljmp
and
movsl
jo
xchg
into
jno
lock
popa
in
insl
and
je
incb
and
push
insl
push
pop
fwait
int3
mov
or
call
sub
leave
inc
sbb
hlt
sub
cwtl
pop
outsl
lods
pop
enter
out
iret
les
ret
fmull
imul
cmpsl
ss
daa
sbb
andb
pop
mov
jmp
stc
enter
cmp
lcall
pop
in
mov
loop,pt
data16
movsl
cld
and
loopne
scas
iret
rcrl
jbe
das
faddl
sarb
pop
mov
dec
popf
les
nop
add
mov
cltd
mov
out
jle
dec
repnz
push
mov
test
js
incb
push
test
push
pop
and
mov
xchg
mov
movsl
or
cmp
dec
xor
popf
push
push
fmull
xor
adc
rcr
outsl
and
out
data16
lods
pop
mov
outsb
jmp
movb
subb
mov
sub
sub
mov
fwait
pop
xor
adc
filds
mov
jae
xchg
out
fwait
mov
jne
lret
adc
or
push
and
dec
pop
push
push
dec
nop
add
inc
mov
sbb
icebp
mov
bound
push
cmpsb
xchg
add
leave
jns
ds
test
ret
cli
popf
fisubl
loope,pt
lods
mov
scas
fbstp
sahf
xchg
imul
adc
sbb
push
imul
cmp
xchg
mov
out
mov
mov
popa
mov
subl
pop
mov
ret
sbb
push
inc
mov
fisubs
sbb
or
dec
clc
xor
lea
mov
fdivrs
mov
push
mov
sub
stc
sarl
mov
das
push
or
icebp
add
pop
adc
or
test
mov
ja
jnp
sub
adc
cmp
and
xor
mov
adc
adc
mov
xchg
ret
adc
cmp
rcl
aas
testl
call
loopne
js
dec
lods
mov
mov
jae
movsl
sahf
adc
push
ret
push
mov
adc
into
in
or
scas
flds
loop
aad
jbe
mov
imul
jp
cmp
mov
sbb
jmp
mov
loopne
mov
scas
aaa
sbb
dec
xor
dec
pop
loop
mov
dec
sti
mov
adc
jns
lock
in
lea
loop
out
add
cmpsl
movsb
dec
lahf
dec
inc
sbb
or
popa
gs
or
sub
mov
mov
imul
aam
pop
test
dec
xor
into
mov
cmp
loop
enter
out
pop
pop
inc
popa
je
cltd
xchg
movsl
in
push
in
sbb
enter
cwtl
cmp
push
jg
icebp
inc
push
stos
into
decl
aaa
popa
stc
inc
arpl
mov
out
rcr
inc
lret
dec
test
adc
push
mov
sahf
and
pop
mov
xor
add
push
mov
adc
xlat
jae
pop
cmp
adc
jp
or
inc
push
jg
clc
fidivrl
inc
xor
jle
lret
leave
mov
pop
add
add
or
pop
loopne
cmpb
shrb
stos
repnz
out
sbb
repnz
jnp
or
sti
scas
xor
bswap
cmpsb
scas
cmp
adc
rcrb
cli
sub
repz
mov
push
clc
dec
pop
std
enter
aas
adc
lea
mov
sahf
jge
lods
sub
out
push
std
mov
sub
mov
cmp
xchg
rorb
lods
test
push
stc
add
lods
shlb
mov
clc
mov
pop
lods
xor
mov
cltd
adc
xchg
mov
dec
sub
lahf
mov
xchg
lods
lret
sub
inc
jb
mov
sarb
inc
xor
cwtl
pop
mov
filds
fxch
dec
shll
adc
mov
mov
mov
push
das
inc
sub
gs
lock
xchg
imul
jo
loope
cwtl
pop
xchg
ds
pop
popf
ret
int
pop
xor
outsb
cmp
pop
cmpsl
testb
das
lcall
leave
sbb
pop
sub
cmc
and
xor
pop
pop
push
xchg
fcmovnu
push
xor
rcll
push
jb
adc
mov
dec
dec
hlt
test
aas
cmp
pop
pop
or
repnz
push
sbb
arpl
lock
movsb
in
mov
jp
mov
rcrb
or
imul
aas
test
sbbb
stos
cmp
or
rcrb
das
fiadds
pop
lods
add
jb
imul
xrelease
leave
or
adc
pop
fs
mov
out
mov
xchg
movsb
cwtd
addr16
inc
push
outsb
mov
push
mov
hlt
xor
cmpsl
sub
mov
lcall
cmp
mov
insl
sub
push
sti
jecxz
push
stos
mov
push
mov
sub
loop
jle
rcll
mov
pop
xor
std
insl
mov
cmp
daa
sbb
adc
or
or
movsb
adc
inc
bound
rorl
adc
add
ja
dec
fs
test
sub
pop
aam
aaa
mov
pop
sahf
repnz
add
and
int
insb
icebp
fwait
ljmp
add
dec
pushf
into
push
scas
pop
jmp
sbb
add
xor
pop
push
xor
leave
push
xor
sub
pop
push
outsl
fisubl
jp
sbb
lds
iret
jno
add
fidivrl
test
imul
jb
inc
or
fsubl
test
sbb
adc
cmp
fwait
outsb
outsb
in
lret
incl
mov
daa
adc
mov
addb
sub
popf
inc
and
mull
inc
ret
cmp
in
lahf
dec
mov
stos
and
dec
mov
arpl
ret
clc
movsl
pop
dec
mov
cld
lret
popa
bound
mov
mov
popa
inc
fcompl
std
js
popa
lea
out
iret
lret
fldcw
fs
or
mov
push
pusha
inc
xchg
dec
xchg
sub
outsb
mov
inc
in
lea
cwtl
jo
int
dec
in
ficoml
imul
lods
insl
xorb
inc
and
dec
add
jb
jns
sbb
sub
rcll
out
cmp
ret
in
js
cmp
mov
std
cmpsb
scas
bnd
loop
and
add
push
les
add
inc
bound
inc
adc
or
sbb
jmp
jbe
cmp
and
push
icebp
xor
sbbl
add
cmp
les
add
addr16
xor
loopne
push
mov
sbb
pop
and
je
mov
test
stos
int3
or
jo
test
jmp
pop
shl
adc
jae
push
cmp
sub
loopne
lcall
mov
pop
push
sahf
aam
jmp
ljmp
jle
dec
xchg
inc
outsb
pop
jecxz
fstpt
into
cwtl
sahf
mov
shrl
roll
das
jecxz
imul
ficoml
add
push
xchg
mov
push
out
adc
jg
dec
movsb
jbe
repnz
xchg
jecxz
aaa
cmpsl
sbb
mov
push
xor
push
dec
rcrl
xchg
repz
leave
and
inc
xchg
jmp
mov
cmp
lret
mov
out
outsb
sahf
in
repnz
stos
adc
add
icebp
pushf
les
or
movsl
hlt
into
dec
sbb
mov
insb
nop
js
xlat
test
xchg
dec
fstpt
and
pop
imul
jae
adc
mull
cltd
sub
push
sbb
js
out
repnz
dec
decl
in
loopne
adc
cmp
dec
and
lcall
jo
fst
lea
sbb
mov
adc
ljmp
jg
dec
xchg
das
loope
sub
movsl
in
xchg
std
jne
push
mov
mov
out
pop
or
jp
mov
pop
mov
lcall
dec
or
xor
pop
inc
push
and
roll
ja
push
stos
pusha
into
mov
arpl
out
inc
popa
out
stos
cmp
mov
in
test
push
addr16
xlat
les
cli
cltd
in
ss
inc
inc
sbb
mov
push
mov
or
dec
es
lahf
xor
adc
in
add
out
sub
in
popf
mov
sbb
gs
pop
out
cmp
aad
jg
push
aam
jecxz
in
mov
jns
mov
subl
push
and
gs
mov
and
add
mull
xchg
scas
add
in
icebp
jecxz
addr16
push
cmpb
loope
pusha
jle
jg
add
xchg
mov
pop
sub
adc
pshufw
test
add
xchg
sbb
pop
mov
mov
lock
mov
inc
inc
pop
jo
cmp
dec
mov
mov
in
adc
xchg
mov
ljmp
lods
cwtl
cmc
cmpsb
push
cmpsl
or
pop
mov
mov
xor
jmpw
popa
loopne
sbb
pop
and
xor
hlt
in
lea
call
inc
xor
jae
push
out
push
std
pusha
data16
lods
ficompl
or
ret
fimuls
add
enter
push
mov
xlat
push
ljmp
popf
popa
lret
sbb
adc
mov
cmp
ret
sbb
pop
ds
push
and
push
out
pop
sub
sub
es
aaa
pop
repz
mov
mov
jae
xchg
jmp
xchg
fwait
loopne
addr16
shlb
out
hlt
mov
mov
cmc
xorb
add
sub
fwait
push
inc
and
add
std
xchg
bound
es
je
lea
cld
mov
stc
inc
push
imul
push
lret
pop
push
xor
pop
push
addr16
enter
outsl
push
test
mov
jmp
mov
and
pusha
jno
test
scas
jecxz
sub
ss
and
sbb
arpl
rolb
inc
data16
lods
jg
fcoml
push
inc
fwait
adc
shlb
mov
xchg
das
icebp
mov
dec
sbb
scas
cmp
xchg
lea
mov
adc
or
in
aaa
cwtl
push
fsubrs
fidivl
inc
lret
inc
push
mov
sub
cld
or
sbb
addr16
ret
pop
push
and
xchg
push
and
jecxz
jge
aad
sub
cld
loopne
aas
push
pop
and
insb
mov
testb
push
sbb
mov
and
ret
pop
mov
fwait
cli
push
mov
mov
xchg
cmp
mov
mov
insl
sub
or
mov
jbe
jmp
pushf
and
iret
mov
hlt
call
pushf
mov
fcompl
push
adc
idivl
shrl
mov
sti
cmp
dec
mov
into
jno
lahf
ror
adc
sub
test
imul
and
lods
pop
ret
jne
pop
mov
push
sbb
mov
int
jecxz
push
loope
sub
sbb
call
movsl
push
lea
popf
das
xchg
rcll
icebp
dec
jecxz
bound
ja
leave
lods
dec
cmp
sbb
pop
inc
lea
rcrl
xchg
fbstp
dec
imul
jge
mov
dec
test
in
iret
fucompp
fsubrl
pop
push
push
std
outsl
lahf
dec
xchg
icebp
inc
mov
cmp
in
mov
push
lret
scas
out
test
cmpsl
sbb
xchg
adc
mov
sti
int
sbb
mov
shll
iret
sbb
enter
adc
mov
xchg
mov
rorl
mov
push
jmp
dec
push
push
outsl
xor
cmp
iret
gs
push
cwtl
fwait
dec
sub
cmp
cmp
ret
add
loop
dec
jb
push
xor
sub
shrl
cmpsb
lret
popf
mov
sbb
sbb
xor
push
incl
lcall
jp
outsl
mov
inc
mov
movsb
popl
xchg
test
fdivrp
jmp
call
hlt
xor
movsb
cmp
ljmp
inc
mov
xor
dec
ds
es
ljmp
push
jg,pn
aam
les
aas
and
popf
leave
mov
mov
ja
push
inc
or
iret
push
cs
ret
mov
and
fcomp
dec
jle
imul
mov
sarl
jmp
out
mov
orb
mov
imul
sbb
je
neg
lea
jg
inc
inc
adc
hlt
push
out
mov
cmc
push
push
call
insb
push
add
dec
iret
dec
clc
iret
jne
and
scas
and
aad
mov
jne
mov
jge
ds
xchg
and
in
mov
mov
jl
pop
mov
and
dec
mov
mov
test
aam
rcrb
and
fsubrl
mov
mov
in
leave
adc
enter
sub
lea
mov
pushl
mov
insl
ret
mov
popa
dec
jle
mov
pop
xchg
scas
jl
int
pop
jl
inc
cmp
out
cmp
xchg
or
cmp
out
sahf
jnp
and
aaa
jp
xor
adc
daa
cltd
andl
mov
fwait
fstps
sub
push
cmpsl
mov
outsl
push
cwtl
mov
cli
dec
lea
and
cld
stos
mov
outsl
mov
or
add
xor
push
lret
lock
out
sahf
and
jne
into
cltd
aaa
dec
push
jnp
loope
lds
int3
in
rcl
mov
xchg
insb
bound
je
or
out
push
int
mov
push
and
dec
bound
jne
fwait
enter
push
je
divl
mov
mov
xchg
ret
data16
and
pusha
jno
mov
push
jmp
add
add
and
in
dec
addr16
adc
dec
fwait
sbb
aas
inc
icebp
sub
cmpb
aaa
push
push
lds
inc
std
mov
adc
cli
dec
xor
hlt
and
sbb
add
je
or
xor
pusha
mov
out
test
cs
pop
xor
es
or
push
xchg
call
sti
ret
stc
lock
jo
mov
icebp
in
push
popa
pop
cmp
dec
mov
cmp
imul
xor
push
insl
sub
ret
and
xlat
push
cmp
xor
jnp
pop
mov
cmp
mov
ljmp
jne
lcall
pop
out
loop
cmp
aaa
or
xchg
insb
inc
cmc
jb
jae
adc
popf
test
push
fistl
fs
les
sbb
ss
outsl
ja
dec
arpl
or
fsub
xchg
push
pushf
movsl
push
data16
cli
mov
xlat
cld
and
fldt
mov
mov
dec
inc
jns
notb
pop
stos
sbb
in
xlat
xchg
clc
jns
ficompl
stos
xor
cli
sbb
xor
xchg
xchg
push
sub
in
dec
or
push
sub
nop
xchg
xor
mov
jbe
push
inc
scas
daa
sarb
xchg
ss
jp
mov
pop
xlat
fcomi
arpl
sarb
pop
jno
insl
mov
shll
dec
pop
pop
mov
xchg
arpl
cmp
xlat
mov
jns
inc
mov
adc
adc
mov
add
and
add
mov
mov
xorb
mov
push
aad
and
jp
dec
xor
push
rorl
jle
sahf
hlt
push
jne
xchg
sti
rclb
jbe
or
cmovp
mov
loope
and
cwtl
into
push
fdivrp
pop
mov
jae
xor
sub
push
mov
sub
lds
outsl
inc
cmp
bound
repz
mov
pusha
pusha
inc
pushf
cmpsl
stos
cmp
es
mov
test
repnz
es
add
aas
inc
cmp
adc
dec
xor
out
test
icebp
scas
fidivl
mov
js
mov
pop
repnz
inc
aam
aam
jne
mov
pop
lahf
cltd
push
xchg
xchg
jns
mov
stc
iret
xchg
xchg
push
aas
xor
sti
sahf
lret
jb
pop
adc
inc
mov
gs
cs
dec
imul
sbb
lcall
and
mov
or
lahf
xlat
cmpsl
jge
jp
out
sub
add
dec
insb
ss
jge
push
mov
cs
mov
xlat
mov
sbb
xor
in
xor
jl
pop
scas
pop
out
add
das
sbb
mov
sub
pop
and
jecxz
mov
repnz
cmpsl
sahf
inc
pop
jbe
and
lret
adcl
mov
pop
mov
jns
mov
push
mov
jle
xor
imul
push
xchg
notb
popa
popa
cmpb
or
data16
pop
add
and
sub
dec
data16
ljmp
data16
or
push
and
jl
mov
out
movsl
test
ret
pop
stc
lret
addl
mov
and
jnp
js
mov
add
cltd
aaa
mov
ja
add
outsl
scas
int3
cs
push
subl
idivb
sbb
cmp
mov
jae
jp
pop
daa
adc
push
mov
sbb
cmp
mov
xlat
push
jo
call
push
jae
cmp
adc
dec
xchg
add
in
fadds
aaa
mov
mov
add
mov
scas
add
xchg
inc
fcmovnu
outsl
pop
xor
addr16
mov
inc
ja
push
sbbb
sub
lcall
jo
jle
in
js
into
push
loop
add
es
push
loopne
jp
xchg
sbb
and
outsl
gs
dec
mov
mov
xor
ds
push
lret
imul
xlat
dec
mov
cmp
cmp
xor
inc
jl
sub
arpl
xchg
fidivrs
loop
mov
xchg
adc
loop
lret
mov
data16
pop
lea
outsb
or
fs
sahf
xchg
xchg
xchg
add
and
pop
mov
jecxz
jno
mov
lret
daa
nop
bound
ret
loopnew
lcall
mov
sbbb
shld
adc
mov
test
aam
fwait
mov
jge
push
sarb
lret
out
dec
push
jmp
addr16
enter
mov
pop
jg
daa
aad
cmp
push
sti
xchg
xchg
sub
lods
push
js
mov
jns,pn
test
lods
sbb
mov
push
xor
and
xchg
add
je
adc
and
pop
mov
lret
sub
insb
sbbb
iret
test
inc
enter
xor
sub
subb
aas
movsl
jle
mov
mov
fldl
jge
sub
addb
aas
and
sbb
xchg
out
or
cltd
pop
xchg
jnp
fwait
int
punpcklwd
mov
adc
xchg
pop
mov
jmp
je
cmp
and
mov
fmuls
xor
lcall
cmp
or
pop
rcrb
repnz
insb
inc
in
mov
cmp
sbb
int3
xchg
cmc
cmp
dec
ret
std
jmp
out
scas
lods
pusha
dec
shll
cmpsb
or
ds
repz
sub
mov
push
fisubs
sahf
sub
out
mov
adc
je
je
sarb
pusha
push
pop
push
fidivrs
push
lret
jge
je
xor
or
pop
in
popf
mov
insb
insl
call
ret
jno
in
sbb
xchg
or
inc
imul
dec
cmp
jae
cli
std
int3
fldt
fdivrs
pushl
mov
mov
sub
arpl
push
shlb
or
mov
jne
mov
dec
addr16
cmp
pop
mov
int3
aaa
dec
dec
sub
sbb
sbb
icebp
int3
cld
aaa
and
nop
repnz
addr16
cli
push
stc
loope
mov
mov
test
mov
cmpl
xor
add
inc
ss
scas
out
sbb
lcall
push
xchg
test
pop
out
lods
gs
xchg
popf
and
fiaddl
lahf
lea
push
cmp
adc
negl
inc
sti
mov
test
arpl
mov
pop
pop
mov
pop
push
and
cwtl
add
push
mov
mov
pop
std
sahf
jae
jle
clc
push
jb
push
repnz
popf
lods
ja
jne
and
push
pop
in
addr16
scas
daa
xchg
mov
adc
cwtl
jne
xchg
push
aaa
mov
sti
cmc
fsubl
sarb
dec
push
jbe
icebp
mov
imul
mov
cltd
jle
push
mov
xchg
mov
pushf
jns
push
clc
cltd
xchg
jge
pop
int3
jmp
mov
jne
inc
xlat
pushf
mov
cmp
lret
lock
adc
lods
jno
das
push
mov
out
mov
xlat
mov
outsl
xchg
addr16
les
dec
pop
xchg
push
dec
lcall
xchg
or
aaa
insl
int
ret
and
xor
adc
scas
scas
not
cmp
sub
pop
ss
push
aaa
cld
faddl
push
aam
out
cmp
stos
dec
pop
popa
jmp
shlb
and
fwait
dec
arpl
xor
pop
imul
dec
in
mov
flds
add
cmpsb
out
sub
inc
cld
sbb
add
or
cltd
sbb
inc
xor
push
nop
add
push
sub
cmp
adc
addr16
pop
pop
dec
fs
imulb
sbb
and
mulb
xor
sbb
inc
cmpsb
out
dec
into
cltd
stc
sbbl
jbe
gs
push
test
lods
xchg
or
xchg
add
push
jne
mov
pop
xchg
idivb
sbb
enterw
mov
or
push
fistps
sbb
sbb
cmpsb
pop
and
and
sbb
xchg
sbb
lcall
mov
scas
xor
push
inc
in
cmpsl
jp
enter
hlt
xchg
xor
push
fstpt
or
dec
test
hlt
clc
mov
shrl
sbb
cs
mov
mov
xchg
gs
and
and
loop
xlat
cmp
cmp
jae
lahf
sub
xor
ret
add
inc
fisttpll
mov
aam
into
sub
popa
mov
cmp
rep
cmpl
mov
decl
adc
out
cmp
pop
enter
repnz
jnp
push
xor
xor
xchg
notb
outsl
mov
imul
insl
cltd
or
mov
mov
lods
test
sbb
and
mov
in
xchg
lea
jmp
ret
sub
loope
mov
bound
mov
sbb
aaa
fisttpl
push
push
fdivr
fwait
out
push
aad
sbb
fcmovbe
aad
std
ja
jae
out
nop
ret
pushf
hlt
mov
mov
xchg
or
push
xchg
out
mov
jg
repz
add
mov
insl
xchg
nop
imul
fwait
ja
inc
inc
jge
flds
sub
out
fistpl
std
test
mov
scas
inc
mov
sub
call
pusha
xor
ret
adc
hlt
lods
push
dec
jmp
pop
shrb
jbe
pop
jne
jecxz
and
cld
arpl
push
stos
into
orl
pop
push
sbb
pop
loopne
jecxz
mov
inc
fidivrl
and
test
cltd
add
rcr
js
sbb
push
fsubrl
orl
pop
mov
movsl
mov
orl
pop
popa
insl
and
stos
add
xor
mov
adc
stc
mov
test
xchg
aaa
test
cltd
xor
xchg
dec
aad
mov
cld
inc
or
cwtl
mov
sub
inc
roll
or
scas
jmp
setle
cmp
or
popf
sti
and
setb
inc
call
loopne
mov
xchg
push
push
les
push
hlt
mov
add
or
cwtl
lcall
mov
pusha
jg
aam
dec
js
sbb
mov
cmpsl
or
gs
repnz
inc
mov
add
aas
popf
adc
xchg
jmp
jl
push
dec
mov
mov
mov
pmullw
pusha
xor
mov
cmp
aad
jns
repz
fs
mov
push
cmpsb
insb
mov
repnz
dec
dec
inc
les
jl
or
mov
into
jmp
inc
jno
rcl
add
pop
or
pushf
shrb
jp
inc
cltd
fbstp
adc
out
mov
mov
pop
inc
or
and
pop
dec
adc
mov
test
test
mov
es
add
test
pop
arpl
add
add
fs
adc
es
movsb
push
and
popf
bnd
nop
and
outsb
je
cwtl
sbb
fistl
mov
hlt
pop
pop
stos
push
mov
cwtl
jg
addr16
mov
jmp
inc
scas
or
rep
scas
mov
mov
or
push
sub
pop
add
sbb
xchg
adc
cli
push
mov
out
pop
jp
cli
mov
ret
push
add
fimuls
rcrl
inc
pushf
andl
les
fnsave
jbe
mov
mov
mov
jmp
sbb
addr16
stc
mov
mov
or
cmp
test
jae
test
fst
or
lcall
icebp
mov
and
sub
jle
jne
adc
xorl
aas
or
aad
xchg
ret
or
mov
mov
faddl
and
addl
add
jmp
add
mov
leave
adc
xor
sbb
jae
jle
dec
sub
ja
mov
xorb
add
and
jo
aam
in
addl
loope
xlat
push
or
fwait
std
mov
daa
xor
push
scas
push
mov
cmpb
and
pop
ss
dec
cltd
jns
sbb
leave
ds
mov
js
jp
inc
xor
pop
orl
test
dec
mov
inc
dec
and
push
das
mov
mov
xlat
jb
sbb
mov
cld
into
rcl
pop
dec
dec
sbb
fwait
cmp
fstl
mov
adc
imul
subl
repnz
leave
push
mov
repz
sub
add
call
push
xchg
scas
push
inc
fsubl
jecxz
pop
mov
movsb
sub
gs
sub
cmovg
stos
cld
mov
in
je
xchg
out
add
adcb
rcl
lret
jb
inc
adc
loope
xchg
mov
daa
incl
sub
popa
cmp
push
jno,pt
push
sub
fisubs
inc
push
adc
jnp
pop
mov
call
jp
lret
fsts
mov
push
out
mov
inc
call
add
push
or
mov
call
fstl
xchg
mov
out
mov
movsb
and
and
test
ret
inc
cmp
int3
mov
sub
mov
push
xor
out
pop
sbb
dec
dec
cmp
or
in
test
push
jl
add
push
sbb
xlat
jns
in
pop
and
pop
std
or
stos
mov
scas
cmc
fwait
cwtl
fiadds
fs
dec
daa
mov
test
mov
mov
addr16
jmp
test
mov
lds
std
mov
in
in
imulb
sub
cmc
lock
mov
inc
xchg
test
push
mov
scas
ja
sub
sbb
inc
fdiv
xchg
mov
dec
lock
cld
sub
mov
fildll
and
inc
xchg
cltd
cmpsb
sub
xor
xor
xchg
rorl
add
scas
dec
cli
mov
and
ret
xor
jg
push
jle
sbb
or
jbe
xor
loop
out
std
sub
popf
das
inc
sub
leave
outsl
in
add
in
inc
xor
shrb
lea
lcall
adc
jne
in
mov
sti
mov
std
js
icebp
inc
pop
cmp
into
cltd
sub
ja
xlat
mov
cltd
mov
fidivrl
sbb
repz
push
push
test
pushf
xor
out
mov
loope
mov
xchg
push
hlt
loopne
subps
fidivl
inc
in
icebp
dec
out
fldenv
outsb
and
pop
cmpsl
push
sbb
or
jmp
push
adc
and
dec
or
inc
push
pop
aas
mov
leave
and
push
adc
cmp
push
push
sbb
jl
mov
leave
dec
adc
push
sbb
sub
shlb
mov
in
fsts
lret
add
cld
clc
mov
lea
test
or
mov
adc
ror
insb
mov
dec
cmp
cmp
jae
mov
pop
push
pop
jbe
lea
xor
cmp
pop
lret
std
lret
in
inc
inc
mov
pusha
scas
mov
jg
cwtl
mov
lcall
insl
stc
dec
dec
dec
pop
cmpsb
push
cmpsb
pusha
sbb
mov
cmpsl
cmp
rcr
movsb
stos
and
dec
mov
idivl
lods
xchg
std
xor
xorb
negb
or
in
inc
out
test
js
mov
mov
xor
add
jl
pop
mov
and
lods
jmp
mov
rolb
stos
pop
ret
ret
hlt
push
stos
dec
mov
mov
adc
clc
add
dec
inc
insb
mov
add
inc
mov
jecxz
add
jbe
pop
mov
cld
cmp
test
jbe
jmp
int3
or
inc
cmpsb
cs
xchg
hlt
push
pop
mov
add
andl
mov
pop
sub
xchg
fdivrs
and
cli
cmp
les
and
repnz
cmp
cmpsb
pabsb
js
pop
enter
imul
add
sub
les
cmpsb
dec
cmp
sub
data16
stos
mov
in
cwtl
nop
les
pop
and
mov
arpl
shll
pop
mov
cmpsb
dec
stc
or
xchg
scas
push
sti
adc
push
dec
rol
mov
stc
xchg
or
sarl
imul
jnp
xor
dec
mov
in
daa
pop
lods
pop
mov
sub
adc
mov
lods
das
mov
or
test
mov
cmp
mov
fnstcw
adc
sbb
or
ja
jl
sbbb
adc
aam
mov
cmc
fiaddl
dec
xchg
adc
cwtl
imul
pop
xchg
call
movsb
sub
push
rcl
push
insb
push
shlb
pop
fadds
je
cmp
sub
jle
data16
and
push
push
cmp
je
negb
ljmp
mov
or
push
pop
jbe
mov
fildll
push
cmp
jmp
jns
movsb
add
ljmp
xchg
cmp
lods
sub
cwtl
xchg
movsl
scas
mov
cmovp
xor
in
cmp
in
push
sti
jae
mov
or
roll
leave
or
or
cmp
sub
shrb
or
movnti
mov
jmp
mov
mov
shrl
mov
notl
mov
arpl
push
loope
jbe
cmp
gs
mov
push
loop
cmpsl
cwtl
leave
imul
les
mov
xor
clc
add
mov
and
ja
addl
outsb
and
das
inc
sbb
imul
cmc
mov
stc
mov
mov
adc
xor
popf
pop
inc
ret
sbb
clc
cmc
aas
int
add
dec
dec
cwtl
pop
call
dec
sub
js
scas
xorb
out
icebp
je
push
mov
mov
or
hlt
test
or
pop
jnp
leave
aas
aam
test
adc
pop
xlat
lock
in
cmpsb
push
movaps
push
dec
inc
cmpsb
lods
push
mov
int
adc
insb
push
pop
dec
cli
nop
sub
int
cltd
pop
sub
xor
or
mov
std
das
adc
or
adc
dec
sub
das
out
testl
divl
add
xchg
push
sahf
and
push
adc
xlat
sbb
inc
sbb
mov
jae
pop
insl
imul
mov
sub
add
lahf
cmc
mov
aas
stos
pop
cmp
push
jae
sbb
aaa
negb
sahf
clc
add
add
pop
test
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
clc
and
aaa
sbb
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
push
pop
testb
adcb
sbb
mov
lahf
pop
outsb
insb
adc
cli
xchg
mov
pop
push
mov
fdivrs
ja
test
repz
std
mov
aad
ds
mov
jmp
scas
test
insb
jg
jge
mulps
mov
mov
popa
out
imulb
cli
jno
adc
jae
mov
std
dec
arpl
movsl
xchg
imul
mov
mov
sti
cmp
fidivrs
xchg
ret
mov
dec
inc
mov
xor
std
mov
dec
ja
test
cmc
icebp
xor
dec
jne
sbb
jecxz
mov
mov
xor
dec
ja
test
mov
fcomps
dec
ja
icebp
lret
mov
dec
xor
dec
loopew
lret
mov
mov
sbb
test
mov
xor
dec
ja
test
mov
mov
dec
ja
test
mov
xor
dec
ja
test
mov
xor
pop
ja
test
mov
xor
dec
ja
test
mov
aaa
sbb
cld
lret
jae
mov
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
sahf
test
cmp
test
mov
jae
test
repz
pusha
push
dec
ja
test
push
filds
ds
test
mov
aas
sbb
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
test
mov
xor
dec
ja
testl
pop
inc
sub
dec
aaa
mov
push
bound
add
ja
std
pusha
xor
fiadds
in
cmpl
push
inc
jmp
int3
jmp
lods
in
lods
jnp
je
push
mov
mov
mov
std
int3
pop
sub
adc
xor
or
mov
push
add
mov
dec
xor
jg,pt
shll
or
inc
xchg
push
adc
lret
cmp
imul
jecxz
outsl
jo
and
popf
icebp
out
popf
mov
or
and
ja
popf
xlat
jp
ja
add
sub
mov
xor
mov
ret
outsl
icebp
and
push
sbb
loope
out
shlb
and
sbb
add
mov
pop
mov
andl
pusha
dec
ja
adc
neg
outsl
mov
sub
mov
jle
test
jmp
sti
pop
xchg
inc
xchg
roll
jecxz
data16
fndisi(8087
in
rorl
hlt
pop
lret
aaa
dec
or
push
push
add
cmc
lcall
fisttps
inc
sub
popf
add
shl
mov
in
lret
fdivrp
cmp
and
or
jne
mov
fnstcw
jae
sbb
sub
jge
cmp
or
xor
adc
js
mov
cltd
xor
mov
sbb
adc
dec
lret
cld
je
mov
ds
and
xor
rorl
mov
dec
leave
fildll
mov
fwait
push
test
cwtl
adc
jmp
add
mov
mov
mov
in
add
pop
mov
and
inc
rclb
call
cli
dec
lea
js
mov
and
mov
ja
push
mov
icebp
lret
loop
andb
push
sti
stc
gs
sbb
cmpsb
jb
sarl
rcr
lahf
mov
mov
mov
mov
iret
popf
nop
jbe
cmc
mov
icebp
xchg
mov
idiv
push
cmp
std
xor
jp
loope
or
popa
test
xchg
lret
idivb
push
or
testl
test
push
movsl
and
xlat
or
int3
sbb
mov
addr16
outsl
and
in
adc
inc
into
or
insb
push
ss
ljmp
pop
and
mull
pop
ficomps
adc
imul
cmc
ja
sbb
push
sbb
outsb
lcall
add
inc
fwait
mov
pop
mov
sti
fbld
fnstsw
sbb
into
addr16
lcall
lods
mov
or
testl
aaa
scas
sahf
cmpsb
sti
cmp
mov
outsb
repnz
pop
stos
in
outsb
sub
in
scas
jno
push
push
dec
das
mov
aas
pop
insb
cmp
fs
add
loope
push
jno
xchg
sub
xor
out
mov
jnp
xchg
dec
daa
xor
out
xor
pop
dec
inc
int3
xor
icebp
sub
xchg
popf
adc
insb
aam
xchg
mov
cmp
mov
call
xor
and
adc
lahf
enter
loope
outsb
repnz
test
mov
xchg
add
lock
scas
lds
adc
lods
mov
das
jge
cmp
out
sbb
dec
movb
loop
in
ret
sub
cmp
push
mov
lods
or
lret
xor
fwait
cmc
outsl
add
mov
jp
and
pop
addl
push
stos
mov
jno
inc
jle
into
leave
shll
jle
sub
lahf
jo
cmp
ja
and
or
or
xchg
in
jne
loope
dec
icebp
dec
mov
xchg
aam
addl
lahf
mov
jle
call
pop
pushf
sarb
mov
stos
lock
sub
ds
arpl
aaa
push
xchg
dec
mov
call
pop
mov
notl
sbb
dec
in
adc
cwtl
dec
dec
push
out
lea
lods
sbb
dec
dec
push
pop
xlat
push
pop
shll
jge
test
fisttps
push
pushl
repz
adc
lcall
jge
in
cmp
or
outsb
add
or
dec
lods
pusha
pop
popf
cmp
fs
ficoms
adc
pop
fisubrl
push
sbb
popf
popa
stc
lahf
arpl
push
xor
pminsw
dec
mov
lret
nop
adc
mov
inc
adc
testb
fimull
xor
hlt
pop
data16
cli
pusha
jne
insb
cmp
test
cs
arpl
pop
and
add
inc
add
std
inc
cmp
fnsave
idiv
xor
inc
and
imul
push
dec
cmc
pusha
mov
ljmp
add
cmp
es
mov
ret
mov
mov
mov
xor
cmpsl
das
aas
subb
dec
push
out
sbb
mov
push
je
jbe
rcrb
mov
sub
lods
jno
cwtl
jmp
fucomip
sarb
dec
loop
mov
xchg
sub
push
jae
lods
mov
into
mov
pop
mov
cltd
jb
inc
std
cmpsl
iret
test
jnp
sar
cmp
adc
mov
adc
frstor
aas
push
dec
lret
not
icebp
clc
mov
aaa
mov
or
push
loop
jle
jae
add
pop
jo
push
stc
push
or
mov
lret
fisubs
data16
add
jge
xchg
movsb
jno
sarl
add
jb
add
push
cwtl
push
jmp
push
push
cmc
xchg
mov
rcrl
mov
jle
in
sbbl
push
sbb
clc
std
ret
sbb
sub
lea
sub
xchg
ss
cmpsb
push
pop
cwtl
outsb
add
xchg
or
pop
out
rolb
cmpl
addr16
xor
fcomi
inc
add
test
or
pop
xor
mov
push
mov
xchg
adc
lock
mov
loop
mov
lock
ret
fidivrs
mov
sbb
inc
and
nop
outsb
mov
imul
sbb
ret
scas
push
mov
dec
lods
enter
push
push
repnz
and
adc
xchg
mov
and
jle
pop
scas
adc
fwait
jbe
addb
push
adc
jne
mov
adc
mov
fucomp
mov
ljmp
test
xchg
testl
cli
fimuls
xor
mov
jno
pop
ret
imul
sbb
mov
xchg
sub
jmp
popf
arpl
sbb
pusha
int
cld
jmp
scas
jmp
push
cmp
adc
and
ja
xchg
push
movsb
inc
popf
js
mov
test
pop
add
sub
in
cmpsl
dec
mov
leave
inc
lahf
lahf
das
cltd
js
inc
test
adc
pusha
push
push
mov
ja
adc
fidivs
in
mov
cmp
jle
or
push
adc
add
and
repnz
mov
sub
lock
sbb
aad
ror
rorb
leave
js
daa
out
xchg
inc
dec
xchg
push
fbstp
xor
stos
lock
adc
gs
inc
or
lods
xor
icebp
scas
push
cmp
add
xor
jae
das
test
mov
dec
xchg
hlt
push
ret
inc
push
cmove
mov
outsb
loope
and
xor
add
sbb
xor
ficomps
repnz
test
mov
sub
fldl
fmulp
icebp
xor
or
jb
mov
outsl
fdivp
adcl
fdiv
xor
and
popf
or
lret
pop
movsb
aaa
lcall
mov
xor
adc
insl
hlt
cli
lret
pop
gs
addl
aam
dec
cld
sub
xchg
ret
mov
push
gs
mov
ss
cmpsb
sbb
cmp
mov
test
cmpsl
sub
out
mov
fistps
stos
scas
sub
rcr
cmp
dec
fisubrs
insb
aad
jno
setae
xchg
mov
js
ljmp
popf
mov
xchg
inc
push
or
fst
leave
xchg
dec
pusha
and
mov
pop
mulb
adc
leave
mov
test
and
je
sbb
sbb
nop
scas
inc
mov
push
and
imul
dec
lods
jmp
mov
push
xchg
sub
dec
cwtl
push
rol
sub
test
push
dec
icebp
push
dec
nop
jge
loope
lret
sub
mov
aam
sti
pop
dec
lock
xchg
xor
pop
inc
fildl
mov
push
pop
aam
cmc
arpl
mov
or
jbe
fldt
loopne
aas
rcrb
push
lods
cmpsb
imul
jne
xor
add
into
xchg
xchg
jnp
mov
xchg
bound
jge
and
sbb
leave
xor
out
in
pop
jecxz
cmp
sub
and
mov
movsl
push
push
je
popa
jnp
rcr
add
cwtl
rcll
data16
mov
into
ljmp
adc
dec
outsb
js
add
pop
jno
push
jg,pn
xchg
and
sub
xchg
or
sbb
mov
and
push
js
mov
xor
lret
mov
scas
cmp
xorl
push
es
lds
or
or
and
mov
and
mov
ss
adcb
lea
mov
cs
push
xchg
dec
cmpsb
mov
insb
or
push
cmp
rcr
mov
jcxz
mov
lock
out
xor
pop
and
subb
imul
push
dec
push
xor
xchg
rorl
pop
clc
adc
and
xor
and
pushf
out
rcr
jae
fldcw
stos
loopne
aas
mov
pusha
sbb
sbb
jecxz
mov
stc
mov
out
insb
stos
mov
and
fcompl
or
cwtl
pop
shlb
iret
and
mov
xchg
cmp
in
jge
xchg
adc
scas
mov
icebp
cltd
mull
dec
lret
dec
xorl
pop
inc
mov
popa
mov
out
loopne
in
lock
imul
or
xchg
inc
mov
mov
int3
xor
dec
call
pop
push
xchg
rorb
jns
imul
pop
and
push
dec
mov
ljmp
lret
fmulp
sbb
aad
ja
mov
bndldx
sbb
add
xchg
adc
lds
adc
sub
jle
mov
dec
or
sti
aad
test
and
cmpsl
scas
and
inc
fnstsw
orb
adc
loop
sub
test
and
ja
ss
out
adc
or
jne
add
notb
push
fiadds
inc
popf
xlat
add
mov
orb
mov
jge
or
inc
xchg
or
sub
xchg
psubd
sti
sti
ret
push
int
std
clc
sbb
cmpsl
inc
jb
inc
add
inc
outsl
pop
pop
lods
adc
lods
and
lret
inc
and
push
mov
xchg
jle
shlb
mov
shl
jns
push
mov
push
inc
dec
rolb
jmp
sbb
push
jmp
mov
xlat
dec
jmp
cltd
adc
inc
lcall
or
jmp
int
jne
shlb
cmp
ret
into
inc
stos
or
and
out
adc
scas
imul
push
xor
out
repz
add
adc
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
