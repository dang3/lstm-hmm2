js
adc
pop
stos
pop
repz
push
dec
movsl
loop
jo
mov
adc
insb
aaa
adcl
dec
rclb
xchg
icebp
js
clc
inc
jmp
aas
outsl
xchg
inc
hlt
testb
les
inc
inc
es
sahf
or
dec
xorl
iret
ss
out
or
or
fsubl
mov
add
dec
movsl
icebp
sbbl
fwait
loope
scas
or
or
push
xchg
lahf
test
or
and
in
dec
pop
ss
lock
leave
adc
pop
mov
vaddps
add
nop
add
sub
xchg
mov
loope
mov
sbb
ljmp
stos
jnp
xchg
jecxz
inc
adc
cwtl
sbb
dec
push
pop
xor
adcb
roll
cltd
add
mov
idivb
movsl
push
and
roll
sub
mov
ja
inc
pop
movsb
jno
xor
xchg
push
lret
js
stos
jl
je
aad
push
dec
push
movsb
or
test
xchg
pop
mov
pop
mov
jnp
pop
cltd
das
movsb
sarl
mov
js
int
stc
test
decl
fiadds
sub
cmpsl
ficoms
cmpsb
xchg
mov
mov
sbb
inc
xchg
ret
js
pop
mov
add
xchg
xlat
jl
push
aam
stc
and
adc
dec
pop
pop
int
sbb
fnsave
pop
mov
fucomip
xor
dec
into
add
into
in
test
leave
pop
mov
data16
es
mov
xchg
ss
hlt
xchg
lcall
xchg
lods
mov
rcrb
sbb
push
jg
adc
inc
pushf
xor
add
push
push
xor
push
lcall
sub
insb
adc
ret
pushf
adc
xchg
jl
push
orl
idivb
xor
jg
in
and
sti
mov
cmc
dec
pusha
push
pavgw
out
getsec
inc
stc
or
adc
call
inc
and
xor
jnp
adc
pop
addr16
adc
sbb
cmpsl
sbb
dec
mov
scas
sti
lret
scas
mov
repnz
mov
nop/reserved
jecxz
stos
and
xorb
pop
jb
jmp
and
push
ret
and
rorl
or
clc
adc
rcr
inc
stc
jno
push
faddl
inc
xchg
sub
les
hlt
scas
data16
repnz
xorb
xchg
adc
pop
inc
ja
lcall
push
pop
jns
cmp
fiadds
cmp
dec
pop
mov
jae
imul
jmp
pushf
jl
adc
popl
pusha
outsb
adcl
inc
repnz
enter
fisttpll
repz
sbb
xor
sbb
iret
aaa
pop
mov
dec
pop
mov
push
jae
xadd
jle
inc
in
lds
fldt
clc
mov
cltd
inc
ret
sbb
xor
in
xlat
dec
jge
adc
repz
lock
sar
lret
loop
loope
push
pop
ss
lods
pop
inc
leave
dec
xor
inc
adc
or
jb
orl
cltd
adc
or
dec
out
mov
dec
pop
mov
data16
sarb
scas
cmpsb
pop
sub
mov
sbb
sbb
push
pop
lret
inc
jno
jnp
loop
mov
bound
push
daa
push
into
in
sahf
mov
faddl
sbb
int3
xchg
lock
sbb
lret
pop
cs
xor
rcl
std
outsl
or
loope
mov
push
cltd
gs
add
std
cmp
jo
mov
lcall
mov
inc
pusha
mov
add
or
mov
jge
push
push
and
or
cmpsb
lcall
in
dec
xor
clc
push
mov
pop
shrl
cmc
adcl
popa
jne
mov
cs
sbb
jns
mov
sub
scas
mov
cmp
aaa
mov
xor
idiv
repnz
pop
cwtl
jne
test
cmc
popa
cmp
decb
xchg
mov
aam
mov
mov
dec
gs
cmc
out
stos
shll
fnstcw
rcrl
mov
lret
repz
repz
imul
sub
adc
push
icebp
nop
mov
push
enter
sub
pop
mov
les
adc
cltd
in
jmp
shr
pop
fsubs
and
sub
inc
filds
push
shrl
insl
cmpl
rclb
out
bound
jbe
dec
dec
sbb
cli
popf
fdivr
arpl
fadds
out
leave
data16
mov
out
jmp
clc
iret
test
pop
cmp
rcl
lcall
shr
pop
repnz
dec
xchg
shlb
fldt
mov
aam
ret
add
and
cmpl
inc
jo
sbb
ss
mov
sbb
out
rolb
les
imul
sbb
shlb
dec
add
sarl
mov
jge
jnp
or
jg
add
mov
push
sbb
dec
fs
xor
lock
rcrb
mov
notb
jne
xor
xor
fstl
jle
int
mov
cwtl
inc
iret
in
icebp
or
ficoml
repnz
jbe
mov
mov
xchg
fiaddl
dec
mov
mov
js
pop
gs
and
ja
into
pop
into
inc
mov
add
pop
dec
out
mov
repz
dec
les
add
sub
inc
xor
jnp
jno
insb
pop
fs
test
scas
daa
jb
fldt
cwtl
mov
jae
adc
mov
cmp
push
pextrw
and
out
leave
in
mov
ret
lods
jbe
pop
clc
nop
or
xchg
sbb
sub
and
pop
xor
stos
loopne
test
push
sbb
rcr
leave
inc
popf
dec
and
sbb
xchg
test
repnz
mov
cmpsl
cmp
fwait
out
push
test
cmpsl
divl
and
das
stc
ljmp
mov
in
jg
jo
ja
lods
lcall
mov
jbe
mov
dec
xchg
sub
mov
sbb
movsl
mov
or
sbb
jnp
jge
ja
out
jg
mov
scas
mov
repz
icebp
pop
sub
jl,pn
fists
inc
popf
push
nop
xor
lcall
stc
mov
in
addr16
or
pusha
mov
dec
or
loop
cmp
dec
loopne
sub
and
sbb
pop
adc
xchg
xor
sub
ret
dec
sbbl
call
sti
add
out
mov
push
xor
pop
mov
xor
jge
cli
adc
push
loopne
ljmp
xor
dec
xor
push
pop
mov
pop
das
filds
sti
sbb
mov
push
xchg
lds
sbbl
divb
jbe
push
out
sbb
scas
test
sahf
push
pushf
lds
sahf
pop
or
mov
nop
mov
fiadds
cli
pusha
je
mov
jle
xchg
jmp
fisubl
lea
mov
ljmp
push
jb
add
push
shrb
mov
repz
fiaddl
mov
sbb
add
addr16
int3
lret
mov
and
dec
rorl
pop
push
ficoml
cmpb
xor
sub
push
rcll
dec
bound
loopne
dec
sbb
cmp
ja
pop
or
fs
ficompl
jge
mov
enter
xor
lods
repnz
in
loope
xchg
stos
jo
out
jae
pop
xor
es
shll
cli
xchg
cli
das
aad
push
xor
in
jbe
mov
lds
push
dec
xchg
fs
outsl
jne
outsb
test
lcall
mov
test
jge
add
scas
daa
push
ss
sub
mov
push
pushf
mov
push
cmp
addb
or
pop
sarb
fcmovnb
cltd
ret
in
cmpsb
and
mov
mov
xchg
cmp
dec
adc
mov
dec
jne
dec
jp
xor
das
pop
popa
cli
stos
cmpsb
mov
pushf
mov
add
jmp
int3
dec
push
enter
push
xchg
pusha
jb
into
in
movsl
jno
aas
push
or
push
push
call
lcall
jmp
out
flds
xchg
idivb
xchg
xlat
hlt
scas
fld1
pop
mov
lea
test
push
movsb
addr16
outsb
adc
push
push
push
mov
add
push
or
dec
mov
in
lcall
insb
dec
sub
fnstsw
hlt
rcll
sbb
mov
push
mov
xor
xchg
sti
loope
out
push
cmpsb
or
cmp
ja
mov
dec
lods
repz
mov
lahf
repnz
movsb
inc
ja
arpl
xchg
cmp
hlt
outsb
into
push
mov
pop
pushf
fisubrl
xchg
outsb
xchg
and
int
add
jbe
push
scas
fwait
movsb
push
dec
mov
or
cmp
fists
test
mov
pop
mulb
stc
xchg
out
arpl
add
jecxz
pop
fs
incb
add
adc
inc
pop
ljmp
pusha
aad
fcmovnb
adcb
imul
ret
imul
insb
mov
int
fcomps
shlb
fwait
sub
xchg
and
aaa
xor
imul
adc
in
jecxz
or
shr
cltd
dec
out
repnz
insl
aaa
sbbb
clc
adc
fcoms
rorb
mov
jecxz
das
loopne
cmpsb
mov
jecxz
fnstenv
in
push
sbb
pop
test
rorl
nop
xor
mov
adc
aad
je
pop
mov
hlt
jne
jne
mov
mov
adc
cwtl
sub
inc
fs
shr
lods
xchg
cmpl
and
add
mov
or
lea
pop
xchg
cmp
out
cmovle
and
dec
addr16
xchg
sbb
xchg
aas
dec
fildl
sub
in
cmpsl
rolb
pop
cld
cmp
pop
inc
sub
jp
push
out
pusha
repnz
fldcw
push
dec
pop
out
inc
gs
push
leave
movsl
dec
pop
mov
int3
dec
scas
cwtl
insb
jnp
in
or
lds
mov
aaa
or
add
nop
and
rclb
xchg
cmpsw
push
in
movsl
rcl
fs
punpcklbw
inc
jbe
jnp
pop
dec
add
pusha
mov
xchg
mov
cltd
fidivl
mov
stos
mov
inc
ds
iret
mov
lret
lahf
add
mov
outsl
dec
insb
lea
mov
test
push
mov
sub
push
xchg
sbb
xor
adc
stc
or
cmp
and
int3
ljmp
inc
test
mov
lds
dec
lds
mov
jg
lods
xchg
inc
cmp
xchg
pop
stos
movsb
inc
sub
fisubs
scas
inc
mov
cs
sub
stc
shll
cmp
and
inc
test
mov
xchg
sbb
pop
cmp
dec
inc
or
lods
rcr
loopne
gs
iret
js
mov
in
inc
ss
cmp
std
scas
adcb
add
in
jae
mov
jno
call
mov
mov
sub
insb
fbstp
repz
or
rcrb
out
popa
xchg
jmp
rcll
repz
repnz
inc
pop
fmuls
inc
mov
in
stos
pop
mov
xchg
push
pop
iret
fs
pop
sbb
dec
mov
cld
into
or
pop
add
xor
push
sub
jmp
sbb
fisttps
movsb
cltd
push
cmc
daa
sbb
lahf
xchg
les
lock
push
add
popl
and
and
fidivrl
cld
imul
or
popa
ljmp
push
sahf
out
push
adc
rcl
shrb
shr
mov
shll
mov
push
cli
dec
sarl
xlat
adc
mov
sub
mov
mov
roll
addb
ja
pop
dec
enter
fs
push
idiv
dec
pop
dec
jno
xchg
and
xor
mov
push
inc
out
dec
mov
mov
pop
lret
repnz
push
mov
fs
int3
cmovl
lretw
test
sarb
loopne
stc
inc
xchg
xchg
dec
inc
bound
push
inc
push
call
les
ss
mov
jge
xor
stos
iret
xor
scas
dec
push
adc
inc
mov
repnz
cmp
jecxz
imul
leave
push
in
push
iret
inc
in
jnp
pop
jp
add
popa
fisubs
sbb
pop
jmp
je
cs
jo
jns
dec
jp
ds
notl
or
sub
cwtl
std
jge
fsubl
in
push
or
movsb
push
dec
and
add
mov
pushf
enter
loopne
les
push
and
enter
popa
adc
aas
jno
push
xlat
add
push
add
fs
xchg
lods
cmp
lcall
cwtl
jbe
fs
add
inc
xchg
mov
in
subl
or
shl
and
mov
andb
cld
push
jb
sbb
fidivl
pushf
sbb
cmp
jecxz
lcall
mov
mov
nop
dec
or
mov
and
or
push
sub
inc
xchg
mov
loope
nop
imul
dec
clc
cwtl
stos
inc
xor
daa
adc
or
or
xlat
paddw
test
and
cmpsb
fidivrs
test
cltd
mov
sti
aam
je
out
mulb
fnsave
jne
idivb
dec
icebp
xchg
cmp
dec
aaa
lret
insb
test
adc
adc
mov
mov
shlb
rcrb
cltd
rcrb
int
rclb
div
push
mov
or
inc
roll
xorl
sbb
leave
fidivs
sahf
aam
mov
sbb
and
xor
push
insl
push
fisubrl
add
xlat
sub
repnz
and
add
sbb
imul
mov
loope
pop
lock
sti
loope
outsb
addr16
cmp
out
or
cmp
fisttps
loope
insl
and
fnstsw
inc
rcr
push
mov
mov
cltd
aaa
push
sub
fists
xor
dec
std
inc
cmp
jg
dec
insb
inc
or
aam
cltd
jns
add
or
call
ljmp
sbbb
popl
shlb
lahf
shlb
pop
sbb
mov
lret
ret
arpl
lahf
sub
pop
add
xchg
les
xchg
mov
dec
jmp
inc
cmp
pop
lahf
pop
js
pushf
imul
lahf
pop
xchg
sahf
movsb
xchg
pop
lret
sbb
mov
xchg
insl
xchg
sbb
imul
push
and
ret
pop
xchg
or
fimuls
adc
mov
pop
add
or
inc
xchg
and
dec
mov
xor
or
inc
out
mov
xchg
inc
push
jecxz
push
sub
jb
scas
mov
xor
inc
and
out
jbe
mov
adc
or
jg
cli
insb
push
xchg
dec
test
test
jns
mov
push
js
out
mov
rorl
add
imul
mov
cltd
cmc
outsb
mov
shl
or
jmp
cmpsl
xchg
push
test
or
or
cmp
cld
lret
fidivrl
add
clc
push
cmp
sub
inc
fstpl
push
sbb
mov
push
or
add
popa
dec
dec
dec
xor
in
pop
pop
jnp
bound
push
and
cli
add
mov
add
sti
cmp
aam
inc
add
add
in
out
jns
pcmpeqw
jle
and
int3
repnz
pop
lods
scas
enter
cmp
pop
and
cld
sbb
inc
cmp
je
ret
mov
stos
ret
sti
jge
or
mov
adc
mov
jle
jae
add
mov
adc
mov
fldl
push
out
imulb
rorb
push
adc
stos
shrl
adc
mov
in
vmovapd
or
daa
and
push
mov
jecxz
iret
lds
jno
and
int3
jg
pushf
fldenv
rcrb
sub
push
cltd
pop
jmp
ljmp
cmp
lcall
gs
mov
popa
xchg
cmp
mov
aas
mov
arpl
push
pop
inc
xor
xchg
out
inc
ficompl
xor
in
sahf
insb
xor
pop
addr16
test
cmpsl
xlat
cmp
out
mov
mov
ret
lods
xchg
jo
mov
icebp
mov
pop
mov
fdiv
dec
jmp
sbb
push
push
jb
test
xchg
xor
sub
jns
fldl
push
cwtl
stc
fcompl
mov
test
cmp
adc
push
pop
add
sbb
test
fisttpl
in
outsb
pop
in
seto
pop
lcall
test
dec
cmp
sbb
add
outsb
lods
cmp
enter
bound
je
into
inc
pop
int
xchg
imul
push
pop
lods
test
shrb
iret
inc
pop
loopne
pop
fildll
xor
ret
pop
ljmp
repnz
inc
xor
jle
rep
adc
inc
jmp
arpl
movsl
add
pop
icebp
mov
subl
add
out
or
in
popa
andb
repnz
sbbl
cmpsb
aam
pop
cmpsl
loope
add
mov
xchg
ljmp
std
out
ljmp
mov
dec
push
and
lret
mov
cld
mov
xor
gs
loopne
sub
leave
jmp
lds
jge
test
arpl
adc
lret
inc
jns
jg
jnp
int
xor
inc
sub
and
sub
or
decb
fistl
ror
ror
mov
mov
int
pop
dec
push
jb
gs
stos
or
outsb
mov
lcall
rolb
and
sub
in
aam
clc
xor
dec
jge
jmp
jno
push
scas
sub
add
add
iret
xchg
lds
shll
fcoml
mov
jl
inc
in
jmpw
pop
add
mov
pop
call
outsl
dec
xchg
xor
data16
lock
fldt
xor
dec
mov
sub
fstpl
dec
jne
sub
cmp
pushf
pop
add
dec
fisttpll
out
js
ss
clc
cmpsb
cltd
mov
call
int
aas
rol
loopne
xchg
sbb
jo
inc
inc
in
jno
movsl
inc
inc
push
clc
jno
test
mov
push
pop
out
femms
scas
das
add
sbb
jo
enter
mov
jb
je
je
rorb
mov
lcall
jge
pop
adc
hlt
rcrl
push
add
jns
jbe
and
push
lret
push
sub
in
adc
shll
mov
iret
inc
inc
dec
aad
add
mov
inc
mov
sbb
pop
call
jae
mov
aas
scas
inc
dec
sub
adc
add
imul
stos
xchg
in
ucomiss
xor
imul
xor
xlat
jb
sub
stc
or
push
sarb
test
in
int
aad
mov
or
movsb
dec
lcall
add
fwait
stos
sbb
mov
leave
inc
mov
mov
add
aas
xor
jbe
outsb
mov
call
push
push
sub
cmp
or
iret
inc
cmpsb
jp
ljmp
mov
in
pop
push
jbe
ss
jae
out
adc
push
or
push
or
cld
dec
pop
enter
sub
or
repz
cmp
addr16
xchg
xor
in
push
lods
dec
rcll
mov
das
cmp
addb
fadds
sbb
mov
ret
loope
pop
jmp
jmp
xchg
adc
lock
and
mov
nop
arpl
arpl
leave
push
pop
mov
test
movsb
inc
sub
out
sbb
mov
fildl
sti
into
jns
js
cmp
and
mov
pop
and
mov
mov
lods
cmp
xor
leave
sbb
leave
inc
mov
push
and
jmp
bound
xchg
insb
xchg
or
dec
enter
dec
pop
in
popf
testb
rcrb
je
daa
add
mov
mov
movsb
insb
add
xor
outsl
ret
adc
inc
cs
dec
jbe
inc
cltd
dec
pop
movsl
mov
add
sub
dec
dec
loopne
test
dec
test
inc
cmp
pop
clc
out
nop
or
loopne
xor
fs
jbe
sub
outsl
mov
lret
jg
xor
push
sbb
out
stos
mov
mov
mov
and
sbb
add
mov
lods
loop
pop
movsl
xor
ss
dec
push
scas
jae
cmp
push
popf
rolb
daa
cmp
adc
adc
popf
imul
mov
int
add
xor
jmp
and
jbe
xchg
mov
add
cltd
mov
lds
les
frstor
mov
inc
in
xchg
xor
fwait
inc
les
fcmovbe
stos
ljmp
mov
mov
or
testl
cmpsb
aam
push
into
outsb
cltd
pushf
sub
push
sub
insb
jne
inc
cmp
inc
icebp
jno
mov
inc
fwait
add
dec
sub
push
fnstsw
sub
jno
adc
push
je
mov
pushw
add
pop
roll
rorb
out
pop
inc
xor
int3
cmp
test
inc
lea
and
movsl
jge
ja
stc
inc
add
lock
push
jmp
pop
sbb
mov
cmp
add
rcll
or
loopne
test
fs
xor
adc
dec
clc
jbe
pop
cmc
and
add
jmp
cmpl
rcll
xchg
pusha
sahf
mov
stc
xchg
xchg
mov
jnp
cmp
jmp
mov
aam
test
rcrb
loop
lret
sub
out
into
and
fstps
mov
daa
inc
add
mov
aaa
movsb
pop
cmp
aas
loope
sub
mov
jo
stos
or
sub
loop
call
mov
and
in
adc
mov
lret
push
loopne
clc
cltd
data16
sbb
sbb
pop
jge
xchg
jmp
cli
out
mov
and
push
xor
dec
sub
shlb
lret
int
inc
xor
fmull
jmp
test
sbb
cmp
lcall
arpl
setge
add
test
add
push
xchg
out
or
or
and
inc
movsb
das
loopne
ss
mov
sub
inc
mov
addr16
xchg
sahf
mov
test
mov
lahf
lds
dec
cmpsl
loopne
dec
ds
xchg
mov
xchg
mov
clc
mov
clc
out
fmull
insl
aas
xrelease
test
or
pop
popf
or
push
ret
ret
mov
or
sbbb
aam
lcall
push
je
fisubrl
or
aas
add
mov
push
in
js
jle
xchg
lods
call
movsl
fiadds
add
popf
inc
ss
sbb
pop
sarb
lret
ret
nop
push
pop
test
ret
push
pushf
xor
mov
popf
or
loopne
dec
lret
dec
cwtl
js
push
lock
imul
xchg
mov
sub
scas
cmpsb
into
jge
jg
rcll
lret
jnp
imul
xchg
mov
sbb
xchg
adc
add
and
lret
xchg
jo
stos
clc
xchg
ljmp
lds
add
ja
popa
xchg
dec
add
mov
testl
shlb
scas
ds
dec
data16
jb
push
or
shl
and
inc
inc
sbbl
roll
xchg
xor
cmc
mov
xor
loopne
dec
addps
mov
pop
in
repnz
push
cwtl
into
jae
aad
addb
jbe
mov
daa
inc
jnp
dec
dec
xchg
test
rorl
mov
push
mov
mov
mov
lods
sbb
jle
popf
pop
fidivs
icebp
mov
adc
test
add
mov
add
out
lret
stc
bnd
or
subl
cmp
lahf
popl
subl
mov
xor
mov
mov
jo
in
pop
ja
enter
push
and
xchg
int
into
test
loope
addl
pop
and
lea
pop
iret
inc
adc
in
cmp
inc
xchg
int3
movsl
inc
ja
xlat
aam
adc
xchg
jnp
mov
jo
mov
mov
out
scas
pop
mov
or
sub
jb
in
xlat
pop
jne
jle
incl
dec
cmpsl
call
ficoms
dec
mov
xchg
inc
out
mov
popl
adc
mov
je
mov
mov
mov
adc
in
into
icebp
ficoms
add
lods
shl
mov
shlb
lcall
adc
movsb
js
test
sbb
cwtl
mov
xchg
mov
int3
lcall
movsl
adc
mov
outsl
mov
inc
push
int3
ljmp
imul
movsl
jp
paddsb
dec
dec
into
lea
scas
cmp
loop
cmp
cmp
and
iret
lcall
lods
aam
jno
and
dec
in
popa
and
fsubl
mov
popf
sbb
xchg
mov
ja
mov
mov
dec
lds
mov
stos
mov
popa
pop
inc
mov
inc
cmpsb
outsl
sahf
pushf
cmc
xchg
sbb
and
cmpsl
adc
sbb
outsl
ds
sub
sbb
insl
push
sub
popa
inc
jns
int
call
push
xchg
add
push
sbb
jo
rcrl
int
push
and
xor
mov
mov
mov
and
cmp
xor
cmc
in
test
push
pop
mov
notb
mov
or
daa
jne
popa
xor
popa
aaa
xor
cmp
push
jecxz
or
insl
sbb
imul
dec
les
fisttpl
in
dec
pop
add
pushf
test
repz
or
outsl
addr16
pop
scas
outsl
push
mov
test
mov
loop
insb
out
cmpsb
jno
repz
inc
cmp
getsec
scas
mov
sub
adc
push
negb
sahf
adc
adc
stos
shl
jecxz
sbb
sbb
mov
into
fldcw
ljmp
enter
out
decb
or
icebp
repz
or
ficompl
popa
xchg
push
ljmp
je
jae
out
mov
mov
sub
add
push
lret
sbb
or
mov
test
addr16
test
pop
fistpll
outsl
sbb
repnz
sti
add
mov
and
dec
arpl
push
iret
stos
lret
repz
cmp
cmp
adc
pop
jmp
push
icebp
fwait
rorl
mov
dec
sbb
pop
pop
repnz
push
lcall
imul
outsb
arpl
push
cmpsl
rcll
lock
shlb
js
lds
mov
out
xchg
sbb
cli
daa
jmp
repz
clc
push
dec
sub
mov
scas
inc
push
jae
pop
es
push
faddl
int3
lret
add
popf
gs
pop
in
inc
negl
xor
xor
mov
and
mov
inc
mov
adc
ss
and
std
jecxz
sub
jp
mov
and
pop
adc
xchg
and
mov
sbb
ljmp
mov
int3
jp
mov
and
out
mov
xchg
xchg
xchg
mov
popa
stos
xlat
out
into
pop
test
xor
icebp
pusha
test
iret
test
cmp
or
mov
ss
outsl
mov
clc
sbbl
stc
or
add
pop
cli
inc
mov
fwait
rcr
pop
cmp
ja
push
and
rcrb
inc
int3
pop
scas
jae
lds
xor
sbb
mov
jmp
mov
push
pop
jb
mov
ds
mov
gs
popf
ljmp
clc
add
cmp
lods
cmp
cmpb
jne
lret
or
or
xchg
cld
jae
test
gs
mov
add
push
rcll
icebp
inc
pop
test
test
mov
js
sbbl
mov
sbb
lretw
outsb
ds
mov
push
leave
in
xor
cmc
push
xchg
or
cli
sahf
lret
xchg
mov
jne
add
repz
push
mov
inc
mov
sahf
cmp
aaa
mov
dec
jo
mov
mov
movsl
adc
add
fwait
ret
mov
hlt
mov
inc
pop
jbe
popa
push
mov
mov
add
mov
cmc
repnz
popa
sbb
push
pop
popf
cmp
add
xor
sarl
xor
outsl
cmc
and
xor
aaa
or
add
daa
stos
push
rcl
addb
or
push
push
movsl
sub
int
js
iret
or
mov
adc
xor
jecxz
mov
sub
dec
cmp
movsl
dec
nop
test
call
and
pop
add
adc
sbb
lds
hlt
rcll
push
clc
hlt
dec
push
dec
xor
pop
nopl
mov
fwait
pop
stc
ljmp
movsb
jg
fs
cs
xchg
push
test
adc
and
movq
or
and
data16
sub
inc
and
js
push
arpl
and
push
stos
dec
fcmovnb
not
outsb
cmp
fstl
les
stc
fcmovb
cmp
lahf
push
adc
cs
cmp
rep
movsl
mov
ja
ja
xchg
jmp
jno
push
push
inc
pop
int3
nop
xchg
mov
dec
mov
mov
sub
jge
jo
and
popf
jne
push
pop
shll
lea
pushf
mov
rorb
cmpsl
xchg
ljmp
fdivr
arpl
mov
push
mov
inc
jo
mov
mov
subl
js
inc
pop
addb
jb
dec
mov
adc
daa
xchg
sbbl
pushl
dec
add
test
mov
and
ret
pop
das
scas
stos
rcrl
or
lock
xchg
fdivrl
movsl
mov
in
data16
mov
orb
xor
lds
int3
sbb
mov
movsb
cmp
sarl
mov
scas
sub
shl
fists
sbb
inc
stos
push
pop
mov
sbbb
mov
xor
adc
out
and
aam
or
jns
or
mov
inc
cmc
jle
imul
fld
pxor
lret
gs
fidivs
jne
inc
jge
arpl
incb
sub
mov
mov
aam
lods
mov
jnp
popf
ret
xchg
jne
mov
sub
add
adc
setae
fstpt
cmpsb
pushf
xchg
push
xor
and
dec
arpl
lea
mov
int3
rorb
sahf
fcomip
int3
loope
into
mov
xor
pop
xor
lods
mov
in
gs
repz
cmp
js
es
cld
push
sbb
mov
add
mov
cmp
pop
mov
fsubs
sub
mov
lock
mov
pop
jecxz
out
fwait
push
mov
pop
scas
jno
popa
imul
in
dec
dec
jnp
pop
dec
or
cmpsl
outsb
mov
mov
mov
mov
jmp
jno
test
adc
sub
les
call
mov
sbb
pop
fstps
fisttps
inc
adc
mov
pushf
in
xchg
hlt
int
mov
lock
shll
sub
rorl
push
sub
hlt
shl
in
mov
push
cli
dec
jp
or
dec
int
lds
movsb
aam
jo
cwtl
in
pop
ds
mov
mov
lcall
or
mov
jmp
jno
mov
addr16
ja
pushf
dec
in
or
sub
ret
add
leave
xor
xor
pop
mov
movsl
mov
mov
jg
clc
mov
adc
ficomps
sub
mov
xchg
mov
negb
sbb
mov
imulb
subl
ret
aas
mov
sbb
push
add
mov
insb
xor
mov
aas
jecxz,pn
jg
or
add
fcmovbe
sbb
aad
addr16
imul
xlat
push
jae
repnz
jecxz
imul
jle
ljmp
sbb
icebp
inc
idivb
fmul
xor
add
xor
and
push
or
push
fwait
into
xorl
add
repnz
arpl
iret
sbb
popf
push
adcl
adc
adc
iret
jno
aaa
mov
jne
aas
ficoms
cltd
aam
inc
inc
mov
movsb
mov
xchg
adc
shll
mov
inc
bound
inc
adc
jo
ja
xchg
int
xor
pop
jbe
mov
adc
clc
cwtl
jmp
insl
mov
je
insl
xchg
daa
mov
mov
sub
std
push
pop
shlb
mov
shll
imul
out
negl
mov
fcoml
scas
xchg
jl
mov
pop
out
adc
or
in
imul
insl
insl
xor
cltd
clc
add
fsubl
cld
mov
sub
mov
out
call
cmp
mov
cmpsb
lods
mov
std
pusha
enter
outsb
loop
cli
lds
pop
lods
xchg
sbb
ficoml
mov
sbb
sub
loopne
lret
pop
pop
sub
lods
push
mov
test
add
sub
dec
dec
js
stos
out
call
push
cli
test
pop
pop
mov
xchg
jle
fs
adc
ja
xchg
aas
pop
or
cld
jb
into
jg
jp
leave
xor
addr16
or
fistpl
push
push
add
push
into
mov
or
cmp
dec
rcll
shr
int
dec
or
or
repz
or
cmp
xchg
fadds
scas
mov
sub
repnz
pop
ljmp
scas
in
mov
lea
mov
mov
call
fbstp
sbb
popf
int3
inc
sub
cmp
scas
andb
popa
aaa
or
fs
or
add
adc
add
mov
outsb
add
jns
lahf
pop
mov
lret
test
and
pop
mov
xorb
pop
or
mov
lock
xchg
sbb
push
and
mov
loope
inc
jp
imul
mov
mov
or
and
xchg
notl
ljmp
sbb
les
in
xchg
xchg
xchg
aad
out
mov
mov
pop
push
jnp
cmp
dec
xlat
dec
pop
popf
mov
jae
or
div
icebp
cs
pop
rorl
jecxz
cmp
fmull
inc
sti
pop
push
lods
faddp
jo
push
or
sbb
jbe
or
je
adc
ljmp
mov
dec
dec
into
inc
fiaddl
lret
mov
add
mov
scas
clc
sysret
sub
add
lahf
inc
dec
inc
adc
fcoml
daa
cmp
mov
hlt
fdivs
mov
je
mov
or
and
pop
mov
mov
mulb
pushf
mov
add
dec
je
xor
mov
out
sti
cmp
xchg
decb
dec
push
in
pop
leave
lahf
and
fisubs
shrl
pop
add
adc
int3
sbb
jl
xor
pop
xor
xor
mov
je
mov
cmpb
test
fxch
pusha
or
addl
jo
cmc
pop
aad
xchg
mov
push
pusha
lahf
and
mov
xor
sub
and
leave
das
fstps
scas
xchg
sbb
adc
test
lret
mov
pcmpgtd
mov
sub
push
dec
outsl
or
push
pop
je
and
push
xchg
pop
loop
iret
mov
inc
test
push
push
cmc
or
shlb
xor
xlat
xchg
sarl
fs
lock
pushf
xchg
jbe
xchg
fsubs
sbb
sbb
fbstp
inc
js
cmpsb
sbb
jp
mov
mov
movsb
loopne
scas
call
jp
test
jmp
dec
xor
add
pusha
jno
and
lcall
lods
pop
add
mov
sub
inc
stos
mov
push
jb
ret
pop
and
leave
sbbb
sub
inc
out
pushf
xchg
push
mov
mov
movsl
out
sbb
lds
hlt
in
addr16
lods
mov
sbb
fwait
mov
mov
jmp
mov
adc
mov
xchg
mov
mov
add
cmpsb
xchg
adc
iret
or
mov
cmc
fwait
lret
and
xchg
std
gs
push
xchg
das
pop
xor
push
inc
pop
aas
fnsave
sub
lods
adc
adc
pop
and
lock
cltd
insb
jo
xor
push
pop
xchg
adc
pop
xchg
push
lahf
jmp
mov
push
pop
imul
pop
adc
sahf
xchg
adc
fldenv
aaa
mov
aad
add
push
movsb
sbb
inc
in
loope
and
mov
sbb
popa
test
mov
xchg
inc
jns
xchg
pusha
mov
jb
fildl
add
scas
cmp
nop
mov
adc
jb
sub
inc
int3
push
cli
ss
push
cmp
push
cwtl
mov
mov
pop
lahf
stc
fs
in
incb
add
xchg
rcll
mov
repnz
cmpsb
orl
or
fcmovnu
std
push
jo
vcvtdq2ps
dec
aam
mov
cmp
cmp
mov
cmc
sbb
nop
popa
pop
bound
out
lods
xlat
mov
std
mov
cmpsb
loop
pop
into
stc
mov
sub
lcall
pop
repnz
out
add
int3
sub
nop
mov
add
fbld
xlat
arpl
xchg
cld
lret
call
jb
mov
adc
adc
imul
dec
sahf
test
cmpl
xchg
cmp
por
and
cwtl
push
jl
cmpsl
xchg
jb
sub
in
cmp
cmc
xor
xchg
aad
mov
or
dec
mov
ds
call
and
lock
xor
in
add
into
lds
mov
shl
jno
into
std
push
ss
inc
cmpb
xchg
cmp
add
mov
leave
dec
sub
jns
mov
inc
jle
and
cmp
pop
fadd
push
enter
mov
mov
ret
pop
ljmp
sbb
hlt
aad
lods
jns
in
jp
rcrb
add
pushf
dec
jecxz
adc
lods
pmaxsw
les
sub
imul
and
repnz
and
sahf
mov
or
rcrb
inc
in
test
das
iret
popf
cltd
or
mov
or
leave
fwait
xchg
int
in
xor
ljmp
mov
mov
popf
sbb
add
es
in
fsts
push
inc
sbb
ja
ffreep
pop
insb
sarl
mov
pop
call
nop
movsl
fwait
push
in
outsb
sbb
pop
xchg
sbbb
int
mov
dec
add
test
push
xor
into
or
add
test
stos
cmc
loope
fadds
fildl
push
cmp
insl
pop
clc
mov
adc
pop
cmp
cmp
dec
sbb
repnz
add
cmp
stc
out
frstor
xchg
clc
js
jg
or
or
mov
mov
jle
or
inc
mov
adc
flds
dec
jl
xchg
mov
lret
xchg
les
jnp
xlat
fwait
push
jae
gs
cld
adc
ja
test
cmpsb
inc
cmpsl
lcall
inc
fwait
jg
fisubl
add
pop
ljmp
inc
mov
mov
xchg
ja
test
into
xor
imul
popa
push
and
mov
insb
jne
jg
mov
or
or
out
arpl
jo
jo
lods
xchg
pop
lock
xchg
scas
lahf
jb
fidivl
push
int3
xor
cmpsb
mov
and
fcoml
xor
fdivp
xor
push
sub
mov
int
xorl
ljmp
cwtl
aaa
push
xchg
lods
lahf
mov
sbb
add
mov
sub
xchg
xor
les
leave
inc
xchg
pop
pop
push
mov
and
imul
and
mov
mov
arpl
rol
jb
lahf
aaa
int
mov
jmp
push
mov
cwtl
mov
mov
scas
pop
pusha
mov
imul
jno
jns
adc
je
dec
in
jae
or
jmpw
test
sti
test
scas
sbbl
or
pop
subl
test
jae
pop
add
jb
xchg
lds
jle
frstor
adc
sub
fsubr
lods
xchg
cmpsl
push
adc
stos
sub
inc
push
insl
xlat
adc
icebp
ja
xor
fcomip
out
stos
sub
lret
out
mov
mov
mov
lret
xchg
imul
mov
push
arpl
aas
mov
cmp
leave
dec
or
inc
pop
rcrb
fcomps
jae
nop
lahf
xor
filds
jae,pt
push
mov
push
jo
sbb
in
jle
clc
lret
sub
push
or
pop
mov
mov
mov
sbb
push
add
push
mov
inc
push
loop
into
adc
stc
mov
cmp
imul
push
fs
sbb
shlb
outsl
scas
rorb
subl
icebp
test
cli
jg
jb
jp
and
call
lret
sub
rcr
jne
inc
out
mov
jne
dec
mov
test
les
mov
xchg
sbb
adc
ficomps
pop
lret
sahf
add
int
repz
shll
adc
mov
mov
aas
jno
cmp
insb
cltd
push
and
gs
cli
loopne
add
movsb
add
jb
fisubrs
addr16
mov
and
adc
fucomi
dec
movb
or
xchg
scas
jecxz
pushf
cmp
push
mov
dec
dec
mov
inc
aaa
les
jne
sti
mov
push
xchg
hlt
mov
pop
loope
add
or
lock
or
cmp
dec
imul
push
testb
jno
test
cmp
inc
xor
mov
add
inc
stc
sarb
pop
or
je
sbb
ds
jl
inc
xchg
cmp
adcb
push
jge
add
int3
negb
pop
inc
add
push
dec
loope
xor
lret
and
lret
inc
jp
lcall
pop
ret
ror
and
jmp
adc
pusha
mov
or
pop
stc
jge
add
sub
test
pop
popa
xor
aas
xor
jp
rol
sbb
insb
stc
aaa
and
shl
js
sub
mov
out
mov
dec
xchg
neg
adc
fwait
repnz
ss
jecxz
mov
pop
jae
and
fldt
jmp
adc
jns
xor
push
mov
out
adc
ret
pop
bound
movsb
sbb
sub
xchg
jo
sub
cmp
clc
push
out
lret
or
xchg
sti
leave
scas
fisttps
stc
orb
inc
ret
jne
dec
jge
out
pop
pop
jb
lds
cmpsl
je
sbb
repz
in
xchg
add
bound
insl
repnz
inc
into
movsl
test
adc
lret
daa
mov
pop
xchg
fsubrs
mov
and
adcb
pushf
jns
mov
iret
dec
scas
aam
sti
lea
adc
mov
xor
pop
stc
cwtl
incl
fmul
repnz
pop
cmpsb
pop
push
xchg
gs
jmp
pop
les
fnstcw
scas
shll
inc
cpuid
pusha
sub
in
movsl
jle
sbb
out
fxch
rol
ss
or
mov
or
orb
sti
call
or
sbb
cmpsl
cmpsb
aas
rcll
into
mov
outsb
or
push
xlat
add
inc
rorb
lock
sub
jmp
push
into
dec
push
dec
icebp
push
sub
add
enter
data16
jmp
mov
adc
ret
lcall
dec
push
sub
pop
insb
and
mov
lock
jg
push
jo
xor
movsl
mov
mov
pop
jns
adcb
cmp
or
xchg
push
and
pop
push
in
imul
mov
fldl
fcomp
outsl
add
mov
cld
leave
std
or
lcall
xlat
adcl
dec
pop
xchg
ffree
leave
ror
or
jo
push
xchg
inc
push
pop
mov
hlt
push
cs
stos
es
in
sub
cmp
cmp
sbb
pop
shll
jmp
lret
and
jl
and
inc
or
stc
daa
mov
or
dec
inc
jl
bound
rorw
jge
pop
ds
sub
stos
mov
mov
mov
test
test
clc
jecxz
ret
xor
out
xor
mov
stc
jae
pop
cltd
lods
cltd
mov
dec
sbb
or
dec
js
clc
lock
ljmp
mov
int
or
aas
or
fdivl
cmpb
jb
xor
push
ret
add
aam
inc
daa
ret
mov
or
sbb
arpl
pop
daa
loope
mov
push
pop
push
mov
arpl
xlat
sbb
xchg
cmc
push
xchg
jecxz,pn
sarl
mov
or
sbb
xor
test
inc
cmp
or
adc
xor
in
lods
cmp
in
enter
sbb
and
and
xchg
outsb
inc
and
dec
cmp
add
push
inc
inc
shl
cmp
xchg
adc
out
jmp
cs
jns
outsb
pusha
add
test
xchg
addr16
or
sub
lods
push
and
out
add
sub
or
fstl
cmp
lods
cld
lock
enter
push
xchg
inc
push
scas
jmp
mov
inc
aad
jae
mov
sub
xchg
push
popa
xor
out
pop
mov
fstps
or
sub
xor
adc
mov
aaa
lods
js
xchg
loope
mov
cs
xchg
repz
aaa
iret
xor
subl
xor
mov
jns
jno
mov
out
xchg
sbb
push
into
imul
or
pop
jecxz
pop
in
movsb
gs
data16
cwtl
and
jp
and
stos
loope
icebp
jae
and
in
subl
out
and
sbb
sahf
xor
or
and
add
leave
dec
aam
out
or
lret
xchg
decl
fldt
dec
push
into
ljmp
mov
lahf
mov
mov
nop
pop
dec
fisubl
jne
pop
push
outsl
pop
lods
and
pushf
lret
je
pop
pop
sbb
call
fistpl
sbb
or
aam
mov
or
add
jl
mov
gs
fistpl
adc
and
daa
push
jo
pop
jbe
js
dec
out
mov
cli
stos
gs
cltd
imul
jae
dec
imul
add
fcomps
dec
movsl
insl
sbb
add
and
je
mov
test
test
sti
sub
ret
add
fwait
lds
push
push
xor
dec
push
lahf
xchg
jp
adc
clc
inc
fwait
cmp
fisttpll
aam
fiadds
jecxz
sub
int3
movsw
mov
ss
sahf
rorl
mov
gs
mov
cmp
push
loope
mov
loop
fisttps
hlt
stc
lea
dec
adc
lods
movsb
or
cmpsl
stos
sub
fmuls
sbb
fimull
fs
stos
in
fistl
mov
fistl
cmc
cli
insb
sbb
add
dec
mov
sub
and
stos
shl
clc
subb
lret
add
jp
xor
jne
adc
push
inc
push
push
out
pop
or
int
mov
fs
cmovle
mov
mov
das
push
mov
mov
mov
xlat
lds
aaa
inc
icebp
scas
das
ret
add
mov
popa
and
lea
jmp
sti
sahf
sbb
jmp
adc
movb
sub
cwtl
les
xchg
lods
push
jne
sbb
push
mov
cltd
rcrl
sub
fbld
ja
pop
int
addr16
sbb
dec
pop
gs
es
lahf
leave
stos
incl
mov
add
add
mov
lods
pop
jg
sub
shlb
cmpsl
xor
push
push
xchg
stc
aaa
and
and
out
mov
or
xor
sbb
add
sahf
mov
sbb
mov
mov
mov
fbstp
iret
xor
nop
outsl
in
test
lods
jo
insl
sti
push
inc
pop
pop
pop
xor
adc
movsl
sarb
in
test
inc
ja
adc
fdivrl
mov
xor
jbe
dec
pop
adc
adc
aam
add
or
adc
inc
sbb
or
scas
out
sti
pop
aaa
or
xor
xor
push
ds
test
mov
cwtl
jae
jno
jg
pop
cwtl
inc
int
ficoml
pop
mov
sub
adc
dec
jmp
jo
jl
int3
sub
sbb
std
pop
lahf
popa
int
scas
mov
push
and
pop
test
pop
fistpl
xor
into
outsl
scas
cwtl
xchg
cltd
fcos
cltd
push
mov
ss
movsl
push
or
jbe
cltd
mov
sub
insb
pusha
and
ss
cmp
adc
lods
stos
ss
cmp
jmp
mov
ficoml
pop
lahf
cmc
sbb
adc
int
inc
out
push
mov
fchs
pop
pop
and
ret
push
jg
cld
fnstsw
add
sub
shrl
cld
lods
out
outsb
loopne
mov
insl
cmpsl
cmc
into
or
adc
loope
add
aad
xor
push
jno
fdivp
and
and
inc
insb
ror
fistl
cmpsl
popf
es
les
lock
movsl
add
mov
jp
xchg
push
ss
cld
test
andl
xor
inc
mov
xlat
cmp
dec
call
in
insl
sbb
mov
pusha
mov
mov
or
int3
lea
lea
mov
jmp
jb
imul
lock
inc
xorb
push
lcall
int3
pop
jle
jo
sbb
sub
mov
movsl
hlt
mov
pop
sub
mov
arpl
xchg
mov
xchg
sbb
cwtl
rcrl
push
adc
in
dec
incb
sbb
inc
scas
adc
stos
pop
leave
mov
cmp
out
pop
popf
lods
adc
popa
ret
ljmp
pop
pop
fiaddl
mov
adc
int3
adc
xor
mov
sbb
or
test
adc
lods
push
jne
fstps
int
xor
jl
mov
xor
pop
add
xchg
push
jno
das
xchg
cmp
testl
jle
adc
mov
xchg
lds
stos
lods
iret
aaa
jb
cmp
add
cltd
js
fidivs
cmp
pop
shlw
jbe
out
xchg
repnz
in
bswap
xchg
jl
push
mov
pop
sub
scas
mov
je
jle
jno
insb
mov
iret
or
dec
pop
push
pop
sub
xlat
es
lret
cli
adc
pop
sti
fdivrl
stos
mov
cli
ret
add
push
mov
movsb
sbbl
test
mov
std
stos
das
rsqrtps
xor
jb,pn
jnp
cmp
js
cltd
ret
pop
and
cmp
je
dec
inc
adc
nop
xor
xor
js
sbb
cld
movsl
ds
xchg
xor
and
jb
mov
mov
pop
pop
push
pop
sub
aad
jb
mov
jns
stos
popf
mov
jno
jecxz
shrl
jmp
inc
sbb
mov
dec
clc
adc
jle
jno
and
push
lahf
inc
jno
push
in
mov
or
movsl
neg
cwtl
or
fdivp
cmpxchg
les
pop
pmaxsw
dec
in
cmp
pusha
movsb
cmp
pop
mov
jle
push
jg
ss
jnp
std
inc
scas
loopne
adc
stos
addb
cmpsl
xor
cltd
or
jns
imul
adc
sub
shll
dec
adc
inc
pop
test
xchg
xchg
addr16
lcall
shrl
jo
loope
pmulhuw
cmp
fcoml
stos
loopne
mov
scas
adc
in
pop
cltd
xor
mov
faddl
jmp
sub
out
addl
xor
subl
push
pop
jecxz
pop
add
aad
mov
inc
paddd
xchg
sbb
insb
aas
push
aaa
mov
std
lret
cmp
mov
popa
leave
push
aaa
daa
pop
mov
push
sbb
js
xchg
test
test
lods
adc
xchg
jge
loopne
cmp
mov
pop
cltd
adc
xchg
into
inc
test
xlat
cmp
push
daa
sbb
mov
in
pop
xor
dec
scas
ds
movsl
ljmp
dec
into
inc
les
out
sub
push
push
jle
repnz
je
dec
add
mov
iret
jp
mov
add
aaa
sub
sbb
sarb
lret
cmp
or
mov
pop
jecxz
cli
in
data16
jne
popf
dec
sub
sti
pop
cmp
scas
aas
xchg
inc
in
int
sub
jl
push
push
in
inc
jmp
imul
push
pusha
mov
xchg
adc
mov
in
sbbb
push
into
pop
icebp
pusha
mov
scas
push
sub
xor
in
mov
and
in
pusha
lods
imul
adc
xor
pushf
xchg
addr16
cmp
push
scas
inc
dec
mov
sahf
sbb
clc
push
fucom
jae
arpl
jmp
and
testb
movsb
push
loope
loope
cli
rcll
or
or
sbb
sbb
sub
imul
nop
loopne
popa
dec
pop
shll
test
fldcw
lret
xlat
adc
jns
or
cmpb
stc
leave
in
pop
lret
jae
imul
stos
dec
inc
dec
pop
mov
sti
push
fisttpl
daa
or
scas
mov
mov
test
cmpsl
or
movsl
fwait
add
mov
xor
cld
jae
dec
movsl
cmpxchg
movsl
push
mov
xchg
jge
or
nop
xchg
mov
scas
push
jbe
out
lret
popf
in
enter
xchg
lods
popa
or
cld
add
out
sbb
sbb
inc
test
sbb
sub
cltd
test
inc
and
or
dec
xchg
insl
push
js
sub
sbb
xchg
jne
pop
adc
int
adc
adc
outsb
pop
adc
int3
and
dec
sbb
pop
iret
sbb
jp
or
imul
ret
lock
lret
jno
add
popa
and
mov
add
xchg
std
negl
repnz
loopne
int
test
or
in
loopne
loopne
test
sub
ljmp
mov
xchg
cwtl
in
pop
adc
mov
sub
push
xor
lret
cld
fcmovbe
fwait
stos
xchg
cmpsl
sub
inc
xchg
scas
xor
sbb
hlt
mov
pop
movsl
cmp
in
cs
loopne
dec
cmp
fistps
mov
dec
add
fmuls
dec
dec
imul
sub
cmp
push
stos
fs
adc
cmp
insl
add
add
in
bound
mov
insl
aaa
dec
dec
int3
out
int
lock
adc
adc
ss
jno
push
mov
fcoml
jge
jae
pushw
out
lret
xorb
imul
arpl
dec
cmp
sbb
nop
cmp
jecxz
ljmp
push
aaa
divb
std
mov
mov
push
xchg
jmp
outsb
xorb
rorb
cmp
repnz
xrelease
jne
std
adc
push
mov
lahf
mov
mov
rcl
mov
xlat
sahf
in
cwtl
add
js
cwtl
dec
xor
out
pusha
and
stos
dec
stc
jl
cmp
xchg
mov
or
pop
or
imul
gs
sbb
push
ficompl
pop
mov
loop
jmp
push
jo
fstpt
ljmp
iret
adc
test
inc
stos
frstor
sub
and
rolb
sbb
testl
lods
xor
lea
xor
dec
fwait
sbb
imul
mov
out
add
xor
stc
cltd
aaa
imul
lods
sbb
imul
popa
mov
jo
push
enter
push
add
xor
mov
ja
lods
cmc
aaa
ficoml
push
std
je
shl
scas
outsl
push
jae
aas
sbb
xchg
mov
pop
loop
movsb
pop
sub
mov
mov
adc
mov
ljmp
xor
ds
fdivrl
das
push
pop
mov
sarb
adc
mov
cmp
ss
data16
jbe
jnp
xor
or
je
lahf
mov
and
cmpsl
add
inc
xor
mov
mov
mov
jmp
lcall
test
rcl
addl
or
dec
xor
pop
or
test
bound
lahf
std
or
push
leave
gs
pop
movsl
add
test
xchg
jbe
sub
pop
mov
loope
gs
jp
fisttpll
addb
sbb
push
sbb
or
or
movsb
scas
enter
mov
out
cltd
sub
jmp
inc
or
adc
data16
pop
scas
adc
mov
sub
sbb
test
jae
xchg
fimull
inc
mov
mov
push
cmp
xchg
stos
mov
data16
fucomip
lea
fwait
jb
mov
testb
testb
call
push
aaa
jge
scas
mov
imul
lds
mov
test
sbbl
dec
mov
sbb
sub
jne
jbe
adc
dec
in
andl
jbe
pop
cmp
adc
and
leave
pop
push
pushf
pop
lret
inc
inc
inc
push
sbb
or
adc
gs
xlat
hlt
popa
repz
push
orl
xor
jae
xor
je
iret
fs
sbb
mov
popf
adcb
hlt
push
add
xchg
sbb
cmp
mov
push
fistpl
mov
out
addr16
or
dec
inc
push
cmpsb
subb
push
mul
call
jne
inc
sbb
mov
and
lods
test
out
das
into
jle
pop
in
hlt
scas
cmpsl
fsubr
xor
in
adc
ljmp
fcomps
int3
dec
mov
shl
hlt
pop
data16
test
push
enter
out
fdivl
mov
inc
cmp
int3
xor
mov
or
mov
call
lahf
pop
movsb
sub
test
inc
jbe
data16
inc
push
icebp
xchg
sti
xor
ret
mov
adc
mov
je
dec
xchg
mov
pop
mov
mov
push
sub
imul
in
cli
jge
hlt
shl
ret
mov
add
mov
jg
mov
sub
fucomip
cmc
sub
jmp
movsl
rolb
into
mov
adc
out
inc
pop
iret
out
cmp
std
sub
dec
mov
cltd
fs
push
bound
loope
int
mov
and
add
xchg
add
mov
and
cs
xorl
add
mov
xchg
lods
aam
adc
and
or
enter
popf
stos
jnp
fdivrs
imulb
ret
xchg
sub
arpl
bound
rclb
pop
and
hlt
xor
or
add
push
sbb
loope
loope
push
add
and
and
jp
mov
fidivrs
fs
inc
xchg
sub
xor
xor
in
jp
inc
lret
lock
je
ds
sarb
outsb
or
xor
lcall
test
pop
das
hlt
mov
fdivl
out
jns
arpl
aas
xchg
fcoml
dec
out
mov
dec
dec
dec
std
xchg
pop
mov
out
push
jp
lret
add
cltd
test
push
jb
or
pusha
inc
adc
movsl
xchg
push
jnp
mov
je
mov
les
push
iret
push
stos
dec
cli
inc
sti
test
fistl
xor
sbb
xor
inc
out
shll
fists
std
repnz
pop
fdivl
lahf
out
xchg
rcrl
scas
push
js
popf
mov
jle
mov
and
int
cli
stc
mov
add
dec
xchg
orb
hlt
mov
arpl
mov
ljmp
lret
adc
push
imul
movsb
or
push
das
out
cmp
into
jnp
lahf
xchg
push
jns,pn
jl
jne
mov
imul
xor
pushf
inc
testl
and
add
or
into
dec
ja
mov
adc
mov
mov
popf
xor
dec
push
ret
data16
mov
into
ficoml
pushf
fidivs
lds
jg
cmp
mov
repnz
push
movsb
add
adc
xchg
mov
sbb
scas
cmc
lcall
movsl
push
pop
nop
mov
adc
out
mov
fmul
jnp
cmp
xchg
rcll
int3
mov
std
sub
sbb
popa
cmp
cltd
out
test
scas
in
mov
add
sub
aam
or
add
lods
test
lret
add
gs
cmp
int3
mov
ds
aad
das
and
int
push
inc
inc
iret
cmpsl
in
cmp
fwait
scas
out
test
jle
push
or
push
rcl
rorl
cmp
pop
cmp
jne
adc
mov
lea
ss
inc
int3
or
push
push
inc
jl
int
aad
dec
or
scas
clc
lahf
fnstenv
sbb
fisttpll
insl
mov
dec
push
lods
in
lret
inc
pop
xor
lahf
jb
xchg
stc
jbe
sti
insl
js
jp
scas
lret
cwtl
in
or
ja
push
lds
cmpsb
cmp
out
mov
xor
push
sbb
inc
add
xchg
push
stos
movsb
push
popl
fldl
sub
mov
sbb
mov
stc
xchg
loopne
sar
adc
inc
in
add
cmpsb
sti
fisubs
add
loopne
inc
cld
repz
loopne
add
and
jae
mull
push
xor
push
dec
adc
mov
xlat
jo
ljmp
mov
dec
shlb
imul
jg
xor
syscall
jp
jp
arpl
add
out
gs
sub
push
ja
xchg
addl
add
andl
clc
rorl
mov
xchg
outsb
adc
xchg
lahf
sbb
clc
fwait
mov
xlat
mov
lods
sbb
lods
cmp
adc
pop
in
jmp
or
mov
fisttpl
ret
incb
cwtl
cmc
loope
call
mov
inc
push
cwtl
rcrl
adcb
fmull
sbb
popf
sub
mov
or
jbe
push
bound
dec
gs
dec
cmc
ret
inc
push
cmp
gs
inc
pop
scas
pop
adc
jo
mov
xchg
mov
mov
mov
lods
pop
lock
mov
xchg
shlb
clc
jl
ss
dec
mov
jp
std
mov
stos
pop
fiadds
nop
jle
mov
xchg
and
jbe
pop
jb
jge
ficompl
jbe
sub
andl
cld
mov
or
mov
push
adc
push
sub
sbb
or
cmpsb
es
jnp
pop
jmp
gs
hlt
out
dec
fs
int3
lret
ljmp
pushf
je
or
pop
inc
push
sbb
mov
mov
push
xchg
fdiv
adc
dec
mov
je
cs
fidivrl
adc
sbbb
push
dec
ds
sbb
or
loope
outsl
fmulp
xlat
hlt
imul
push
sbb
cmp
lods
pop
mov
sbb
inc
xlat
adc
pop
in
adc
nop
leave
inc
dec
cmp
inc
ss
jae
mov
push
and
test
push
or
push
rorb
sti
jl
daa
add
push
mov
iret
pop
mov
cmovae
es
xchg
xchg
and
ret
pop
stos
addr16
jno
jmp
sub
push
xchg
jl
les
sub
popf
insl
ljmp
ss
xchg
xor
jmp
and
fimuls
fcoml
inc
rol
scas
lahf
inc
int
lock
pop
push
outsb
dec
dec
mov
sar
sahf
cmp
mov
mov
ja
clc
or
jl
add
repnz
out
sbb
sbb
dec
mov
fsubp
cwtl
push
ja
sbb
stc
jnp
jp
jnp
inc
std
sarb
fimull
mov
popa
and
fnstcw
sub
in
aad
rclb
movsb
dec
clc
mov
lret
pop
repnz
push
test
lods
sub
mov
push
adc
push
out
sub
outsl
inc
cli
test
jne
and
shlb
iret
and
cmpsb
push
rclb
movl
push
xor
and
push
rorl
aaa
inc
cmp
xchg
xor
inc
or
cli
hlt
popf
pop
popa
insb
loope
xor
lods
jae
aad
mov
cld
test
xchg
xchg
lret
pop
sub
add
pop
jo
dec
sti
pop
vpminsq
pop
cmp
sbb
push
add
push
mov
dec
xchg
dec
jge,pn
lods
outsb
imul
aam
xchg
int3
xchg
xor
push
repz
dec
push
cmp
jns
xchg
clc
nop
sub
pop
mov
pop
mov
daa
push
sub
xchg
flds
cmp
insb
ja
push
shl
jg
rclb
sub
dec
xchg
or
adc
jle
in
cli
repnz
lahf
inc
sti
or
repnz
iret
xchg
inc
popf
fisubrl
pop
rorl
hlt
fidivs
dec
daa
or
inc
test
lret
pop
lar
cltd
fstp
push
pop
fldenv
dec
push
ret
cmp
incb
ss
jle
mov
sbb
enter
sbb
and
mov
push
ret
roll
adc
mov
and
push
pop
nop
cs
lcall
mov
rolb
je
mov
jge
fwait
mov
ja
cmpsl
sbb
jp
jns
add
mov
mov
repnz
xchg
sub
and
fldenv
push
xchg
test
incb
cmpsl
jecxz
das
xchg
or
dec
mov
in
out
out
sbb
in
mov
enter
arpl
adc
aam
dec
outsb
ja
lcall
test
adc
xchg
lret
mov
inc
rolb
push
insb
pop
add
in
ljmp
iret
aaa
es
cmp
loope
sub
cwtl
movsb
xor
ljmp
xor
fcom
pop
add
mov
fsubr
jge
mov
inc
sub
int3
ss
inc
insb
and
adc
int3
xor
mov
les
xlat
sub
scas
aam
test
push
pop
mov
xchg
push
cmpsl
push
pop
mov
xor
rcll
aaa
mov
cmp
out
fsubs
pop
pop
inc
xor
hlt
in
sub
push
imul
in
or
in
and
mov
xchg
imul
outsl
jle
xor
inc
cmp
outsb
mov
mov
sub
test
dec
imul
jo
imul
mov
and
les
inc
mov
outsb
inc
testl
out
lcall
inc
mov
mov
pop
stos
jecxz
push
mov
push
scas
dec
sub
xchg
pop
ret
loop
push
cmp
movsl
xchg
xchg
dec
sbb
leave
loop
pop
pop
icebp
jge
dec
mov
fdivrl
das
jmp
es
pop
sahf
xor
ss
lcall
add
or
xchg
loop
sbb
mov
sahf
dec
xor
fmul
pmuludq
loop
inc
ja
lahf
pop
outsl
jae
jg
std
idivl
and
insl
nop
jl
cmp
fwait
xor
jb
push
pushl
pusha
push
or
cli
lock
mov
mov
daa
hlt
adc
sub
enter
pushf
mov
push
lea
popf
movsb
sub
xchg
sub
pop
test
xchg
cmpsb
pop
mov
xor
jecxz
enter
push
dec
xchg
sbb
movsl
sub
iret
andb
shrl
cmp
push
test
dec
sbb
xor
stos
sub
inc
xor
push
jle
rclb
adc
popf
xchg
lahf
mov
mov
cmp
int3
outsl
mov
ror
test
iret
push
sti
cmpl
jns
pop
arpl
adc
xchg
push
fisubs
ja
mov
lahf
jl
add
out
lods
stos
mov
test
jns
imul
xchg
add
aam
xchg
hlt
inc
inc
xchg
test
pop
mov
test
daa
jbe
jle
push
xchg
adc
cmpsb
and
pop
sti
or
pop
enter
sbb
clc
adc
xor
adc
sti
sti
pusha
inc
lret
icebp
in
nop
test
and
test
hlt
into
dec
fcmovnu
adc
insl
sub
xor
inc
sahf
add
lcall
or
imul
xor
add
sbb
jbe
dec
adc
sub
mov
pop
and
sub
lea
hlt
push
mov
and
jmp
aam
cmp
jl
ja
xchg
mov
pop
or
int3
sar
mov
repz
sub
mov
stos
lds
repnz
rcll
fs
lods
stc
lods
xchg
lcall
push
aad
gs
or
jp
bsr
mov
jo
imul
std
mov
push
mov
idivl
je
xchg
cmpsl
into
popf
aad
stos
fldl
push
popa
into
enter
inc
xlat
add
dec
adc
push
pop
dec
addl
icebp
sub
inc
jmp
jge
inc
dec
xchg
dec
inc
shlb
stos
dec
dec
push
xchg
iret
dec
je
cmp
lods
rol
sbb
jmp
cltd
push
xchg
out
push
leave
xlat
pop
nop
idiv
call
or
mov
cmpsb
push
data16
or
std
mov
xchg
xor
inc
and
add
push
mov
xor
mov
mov
les
xchg
sarl
les
les
push
aaa
imul
mov
in
aad
loopne
inc
and
sub
jp
cld
jnp
and
out
je
leave
lret
jg
add
std
push
test
scas
je
jp
mov
push
add
dec
mov
jl
adc
inc
adc
fcompl
clc
fdivs
xor
lock
movsl
dec
xrelease
or
loopne
stos
fildl
in
mov
shl
dec
aam
sbb
sbb
pop
push
adc
or
add
mov
sbb
das
repz
mov
or
sbb
xchg
fistpll
cmpsb
aad
shl
cmpsl
data16
and
push
add
or
mov
dec
aas
dec
jae
insb
mov
outsl
mov
and
sub
imul
fildl
sub
das
movsl
cwtl
adc
inc
pop
adc
mov
stos
sub
ret
inc
mov
mov
xor
lahf
mov
sub
divb
in
jnp
rorl
movzbl
or
enter
insb
movsb
ja
lds
insb
and
jl
jmp
sbb
add
out
or
cmp
or
outsb
sbb
add
lods
cltd
sub
ss
sub
cmp
xor
jno
imul
xlat
fcomps
aaa
ret
imul
icebp
aas
pop
jbe
add
add
inc
or
iret
or
lods
loop
jb
xchg
jno
inc
orb
or
cli
inc
cwtl
push
cs
aaa
decl
std
mov
mov
gs
rorb
mov
or
jg
dec
gs
sub
inc
push
int3
idivb
mov
scas
inc
jno
mov
mov
adc
mov
lret
incl
mov
jmp
jae
sub
nop
ja
pop
sub
stos
xor
push
pushf
sti
xchg
adc
xor
inc
pop
add
jmp
push
test
jl
hlt
aas
lds
ss
mov
ljmp
mov
jne
jp
popf
call
loop
cmc
je
popf
push
sub
ss
ljmp
xorb
fsts
add
lret
sub
dec
sub
pop
fs
icebp
xchg
mov
aad
or
cmp
aad
loop
push
pop
cmc
and
cmpsl
stc
xchg
push
das
sahf
pop
mov
aas
bound
mov
fsubrs
sbb
lods
mov
mov
xchg
sbb
in
mov
push
popf
push
xor
rcrl
push
leave
shlb
cmp
inc
ret
test
js
sbb
pop
adc
lods
cmc
adc
pop
jb
xor
push
lret
mov
jle
xor
gs
or
out
xchg
into
cltd
adc
lea
mov
or
sbb
xchg
sbb
in
test
fs
rcll
inc
cmpl
hlt
add
inc
in
fsts
cmp
jl
sahf
dec
scas
xor
xchg
lcall
addr16
in
pop
add
lock
mov
lahf
sub
push
push
out
cltd
add
xor
gs
cwtl
jl
rcll
dec
jg
ss
mov
xchg
adc
push
xorl
popa
push
test
dec
daa
pop
inc
push
push
icebp
mov
cmp
jl
mov
adc
out
mov
fcompl
repnz
notl
add
mov
andl
lods
lds
shr
fwait
lahf
fdivl
mov
pop
lahf
or
jae
sbb
dec
imul
loop
jge
sub
ret
adc
cmp
adc
not
fdivl
mov
adc
sub
jecxz
fimull
jno
jnp
mov
repnz
mov
xchg
dec
fs
inc
in
in
sbb
add
xchg
add
push
cwtl
in
aaa
mov
aaa
xchg
inc
push
jo
inc
mov
loop
sbb
gs
mov
stos
rorl
cmp
mov
push
test
pop
lods
cmp
inc
add
inc
dec
leave
out
jmp
sub
cmp
fbstp
jp
dec
push
xchg
notb
pop
adc
out
inc
mov
xor
movsl
fidivs
ret
jne
sbb
xor
xchg
jge
sub
push
lds
loopew
sub
pop
pop
and
popf
sub
sbbl
icebp
int3
mov
ss
push
imull
xor
enter
adc
xchg
sbb
or
sub
sub
in
loope
dec
mov
dec
dec
push
ret
outsb
lahf
fnstenv
push
pop
in
pop
mov
or
pop
sub
imul
int3
xor
fbld
sub
jmp
jl
lret
add
cmp
pop
push
rcr
pop
popa
mov
repnz
iret
ljmp
insl
add
bswap
shl
add
xchg
cmp
outsb
push
idivb
or
stos
xchg
nop
inc
pop
stos
ss
xchg
das
mov
lret
sbb
out
into
jb
push
cmp
add
movsb
sbbb
pushl
inc
push
les
mov
outsl
or
push
cld
fdivp
mov
test
insl
movsl
cmp
or
sahf
mov
cmp
lea
xlat
scas
push
xor
mov
adc
arpl
call
sbb
pop
xchg
sub
xor
out
add
lret
filds
sarl
dec
pop
push
xchg
fsubrl
pop
and
test
inc
sub
test
push
push
mov
and
cmpsb
xchg
aas
push
imul
scas
mov
repnz
xchg
xor
sbb
adc
rclb
pusha
cmpsb
lock
in
mov
scas
push
ret
and
push
xchg
icebp
bound
jg
movsl
dec
int3
jbe
ljmp
bnd
xchg
jle
sub
xchg
mov
popa
lods
add
cltd
and
js
mul
fldcw
ss
in
dec
scas
jge
imul
das
loop
push
push
mull
adc
ljmp
pop
and
jge
jne
or
in
sub
adc
fdivr
test
push
jl
testb
pop
dec
sub
movsl
xlat
jns
mov
xor
negb
or
mov
jae
add
ss
ds
into
dec
jnp
mov
cmp
push
mov
mov
jbe
cwtl
shl
imul
cs
or
dec
scas
jno
sub
push
ret
call
insb
cmp
jnp
push
mov
xlat
pop
pop
pop
aad
sub
add
add
mov
adc
mov
pop
xor
daa
fdivrl
push
xchg
and
mov
mov
or
push
mov
sub
pop
and
mov
add
jl
repnz
xlat
mov
dec
dec
fidivl
dec
adc
mov
inc
adc
insb
incl
loop
pop
sbb
outsl
shll
mov
sbb
or
or
push
stc
test
add
rorb
mov
xor
mov
arpl
loope
imul
movsb
xlat
sub
or
and
xchg
dec
xor
jmp
lret
push
add
subl
jmp
inc
test
mov
cmp
or
xor
repnz
call
xchg
iret
test
xor
xor
test
cli
sahf
cli
sub
rolb
push
xchg
int
push
sbb
lret
and
pop
test
nop
imul
cmpsl
enter
pop
or
mov
fiaddl
das
cmp
cmc
jbe
and
dec
mov
mov
fwait
xchg
mov
notb
sbb
sti
hlt
push
xchg
mov
xor
or
shrb
pop
add
imul
dec
ja
xor
pop
cwtl
rcll
xor
mov
dec
or
cmp
rolb
or
pop
push
pusha
ficomps
icebp
stos
cmpsl
cmp
cli
add
jl
in
fistpll
test
daa
pusha
push
mov
add
sbb
cmc
xor
fcomi
xchg
cmp
int3
sbb
js
mov
fwait
jbe
pop
hlt
test
dec
insl
lcall
add
pop
nop
sub
popa
fwait
xor
icebp
sbb
mov
xor
in
pop
xor
dec
jae
mov
push
icebp
in
sbb
scas
push
sub
dec
ficoms
push
cmp
outsl
cwtl
xchg
out
dec
lahf
and
adc
lock
lea
imul
cmpl
and
add
popa
jecxz
cs
dec
inc
jo
pop
jb
and
popa
cmpsl
sub
dec
mov
inc
mov
xor
jmp
jo
arpl
dec
xor
and
jae
insl
inc
xor
aam
sub
insb
fiadds
outsb
jle
add
push
mov
push
stos
mov
mov
mov
xchg
dec
popa
lcall
push
cmp
and
inc
sarb
inc
cld
push
jo
daa
xchg
cli
sarl
dec
mov
out
and
adc
rorb
adc
and
sub
jae
push
cmp
cmpsb
outsb
je
testl
fstl
mov
or
sbb
out
lcall
in
inc
and
sub
rcrl
mov
jo
jecxz
or
pop
test
fdivr
sub
cmp
push
fwait
lret
cmp
push
mov
lcall
aas
xchg
mov
sahf
sub
mov
push
xlat
dec
test
push
lea
in
jno
mov
mov
cmp
into
test
fidivrl
divb
pop
jnp
pusha
add
cmp
dec
mov
adc
rcrl
lret
and
pop
mov
stos
test
sbb
test
jb
and
jle
push
sbb
mov
roll
ljmp
sub
mov
jge
sti
and
jnp
mov
cmp
mov
cmp
xchg
add
mov
fadds
cmp
mov
sbb
dec
mov
jb
push
inc
cmp
movsb
loop
add
je
lods
test
mov
pop
sbb
arpl
xor
adc
mov
sub
hlt
jg
popa
add
mov
inc
repnz
rorb
cmp
xchg
mov
jmp
mov
clc
jo
sub
pop
sub
sbb
fiaddl
sbb
jae
inc
lock
int
cld
cmp
jnp
jnp
test
or
inc
push
cld
and
push
sub
push
jecxz
arpl
push
inc
xchg
push
and
xlat
mov
frstor
stos
or
shr
mov
cs
cmc
mov
adc
xchg
aam
dec
jo
movsb
jl
call
pop
jne
lahf
iret
dec
push
cmp
jo
dec
jmp
inc
es
pop
sub
xchg
in
cmp
jge
mov
or
mov
lahf
cmp
sub
dec
out
xchg
mov
push
add
push
loop
jne
jge
jmp
xor
adc
rolb
pop
testb
add
shrb
pop
mov
mov
leave
cmpsl
add
dec
subb
cmp
sbb
add
dec
addr16
pop
mov
scas
jb
jle
movsl
adc
jle
enter
or
xchg
or
pop
inc
int
insb
xchg
jb
adc
jnp
or
loopne
mov
int3
add
mov
xlat
mov
outsl
xchg
pop
mov
not
adc
sahf
aas
fwait
cli
repz
lods
imul
add
xor
movsb
mov
shr
out
or
sbb
push
out
ljmp
movsl
jnp
cs
cmpsb
jns
in
insl
dec
cmp
les
sub
popl
je
cmc
scas
mov
pop
in
testb
dec
pop
mov
add
push
push
lcall
jmp
lds
mov
mov
imul
add
jmp
push
or
mov
mov
adc
outsl
addr16
psrad
cmc
adc
cmpsl
arpl
sarb
dec
mov
or
sahf
inc
out
movsl
repz
fs
jno
repz
mov
mov
fwait
jo
jge
ss
or
fmuls
or
lea
sub
mov
idivb
push
xchg
inc
repz
fistpll
adc
imul
sbb
mov
ja
jecxz
adc
arpl
mov
cmp
je
xchg
adc
sub
pusha
dec
add
testb
mov
or
cmp
mov
adc
pop
nop
mov
add
and
repz
mov
mov
leave
mov
lahf
mov
jle
pop
adc
jp
aam
xor
jle
stc
adc
xor
inc
in
icebp
shll
adc
mov
sarb
jecxz
out
and
cmp
jecxz
roll
push
fadd
xchg
lret
jle
cmp
popf
inc
xchg
push
out
xchg
dec
dec
xor
lahf
mov
push
lods
dec
sbbb
cs
sbb
mov
push
sub
jle
add
push
pop
int
movsl
fdivrs
push
cwtl
test
stos
jmp
mov
dec
loope
in
or
out
inc
mov
insl
ret
adc
sti
pop
fcoml
movsl
mov
jnp
add
dec
push
iret
fidivrs
xor
pop
adc
sub
out
jae
loope
pop
xchg
imul
sub
and
sbb
or
loope
dec
push
aam
test
mov
and
push
pop
in
loopne
frstor
data16
cli
and
sahf
not
stc
xor
fiadds
repz
frndint
or
cli
push
jle
push
movsb
adc
loopne
xchg
cltd
and
repnz
out
mov
sahf
and
mov
sub
inc
sbb
and
mov
test
repnz
adc
jno
mov
inc
outsl
rorl
rcrl
mov
pop
mov
sub
lock
mov
out
daa
pop
mov
out
in
cmp
sbb
adc
push
xchg
pusha
add
sbb
mov
out
and
push
out
mov
or
scas
loope
test
xor
ret
jmp
pop
fsubrs
mov
cwtl
and
cmp
frstor
jne
into
into
cmp
adc
cmpsb
sbb
pop
adc
rcrl
mov
jb
or
sub
imul
in
fimull
rorb
mov
in
gs
push
mov
xchg
or
fisttpll
ror
and
sub
inc
xchg
js
and
mov
and
iret
aaa
or
stc
sub
pop
movsl
cmp
daa
sbb
mov
imul
inc
pushf
or
popa
nop
xor
lahf
adc
jnp
aam
lret
mov
int
stos
add
mov
test
test
dec
test
jae
or
dec
out
dec
lcall
in
popa
rcr
pushf
inc
add
pushf
mov
cmp
addr16
adc
bound
cmp
clc
inc
jnp
xchg
scas
stos
scas
fcomp
jmp
cli
jl
nop
xchg
xchg
push
lds
xchg
mov
push
cmp
repz
sbb
bound
call
mov
mov
xchg
cwtl
insl
pop
addb
cmc
aaa
xor
addl
mov
mov
aas
imul
pop
mov
mov
stc
out
jo
cmp
sub
fiaddl
repz
divl
and
jae
scas
adc
jae
xchg
iret
jle
movl
sbb
lock
call
mov
outsb
int3
shll
push
xchg
mov
push
cld
sti
lds
shrb
lcall
lahf
mulb
sbb
xor
addr16
mov
fldcw
cmp
lea
or
mov
lods
xchg
fistpl
push
mov
rcrb
movsl
enter
stc
sub
mov
inc
inc
ja
pusha
add
idivl
mov
stos
scas
ss
repz
negl
jae
adc
pushf
mov
loop
int
rorb
idiv
jg
mov
insb
jne
inc
and
mov
repnz
in
jns
out
push
add
fldcw
dec
mov
pusha
inc
pop
aaa
add
xchg
and
add
in
mov
mov
lret
repnz
js
loop
loopne
loopne
and
xor
jb
xlat
cmp
sub
iret
cmp
inc
mov
lcall
lds
je
add
jp
imul
test
push
movsb
pop
in
or
int3
push
jae
and
mov
das
xorl
push
sbb
push
xchg
imul
cli
add
xor
daa
xchg
cmp
sub
aas
inc
jb
movsb
xor
lods
jmp
push
loopne
push
pop
lea
sub
ljmp
adc
pusha
xor
lods
xor
loop
push
mov
adc
sbb
adc
fimuls
adc
lock
xor
fstpl
xor
xchg
fisubs
movsl
into
add
mov
dec
add
inc
stos
hlt
sub
push
ds
pushf
out
js
adc
jecxz
mov
mov
pop
movsl
movsl
mov
sbb
mov
fbld
mov
adc
xchg
arpl
cmp
stc
ja
dec
sbb
xchg
out
mov
push
lret
jg
fistpl
cmp
xchg
mov
shrl
pop
jns
push
fs
je
pop
xchg
insb
rcrb
sbb
mov
pop
push
imul
decb
push
ffreep
sub
sub
push
xchg
cltd
inc
and
sub
lret
aaa
js
xchg
pop
out
push
mov
and
mov
inc
mov
stc
sub
adcl
popf
push
push
mov
lahf
adc
inc
loopne
fstps
dec
mov
lret
sbb
mov
push
and
aam
jno
inc
aas
inc
aad
adc
adc
cld
cwtl
lcall
push
sub
ljmp
cwtl
js
mov
js
jg
jnp
sub
adc
mov
inc
add
pushf
test
addl
rcrl
adc
pop
repz
xor
jnp
mov
mov
and
cmp
jno
lock
sbb
mov
inc
add
push
lods
inc
mov
pusha
lahf
xor
jl
mov
add
sbb
and
ror
xchg
xor
orl
xchg
sti
sbb
inc
out
adc
out
or
sbb
dec
xchg
js
xor
mov
xchg
push
adc
jp
into
decb
mov
mov
sbb
mov
adc
cli
pop
mov
add
xchg
xchg
aam
lds
int3
jl
inc
xor
scas
and
or
sbb
outsb
inc
jle
addr16
rcrb
call
and
sbb
rcr
push
lret
mov
sub
pop
aaa
test
lret
outsb
lahf
pop
in
sti
mov
dec
pop
jns
mov
iret
xchg
xor
into
and
mov
mov
add
ret
mov
movsb
fcmovbe
ret
jae
lds
push
divl
in
das
pop
fdiv
scas
ret
test
das
test
sbb
cmp
cmp
movsb
sub
aad
inc
mov
enter
idivb
stc
test
imul
ss
pop
mov
in
jb
insb
pop
inc
sbb
pop
mov
divl
out
ds
lret
pop
lock
xor
je
cmp
and
cs
pop
outsb
int
mov
cmpsl
shll
push
lock
imulb
mov
and
adc
imul
ficomps
pop
or
xor
mov
mov
movsb
outsl
into
add
outsl
movsl
sbb
enter
adc
xchg
in
cmp
sub
stos
fnsave
cmp
test
jp
cld
xchg
sti
mov
and
sbb
xchg
push
addb
lret
pushf
sub
fcmovb
cwtl
rol
mov
adc
pop
les
iret
int
repz
pop
pop
mov
mov
in
std
push
movsl
dec
ja
mov
int3
stc
sub
and
mov
push
and
nop
fisttpl
rorl
fs
les
lret
jnp
aaa
push
sub
cmp
ljmp
rol
inc
fs
in
xchg
lods
jg
shr
add
scas
mov
xor
mov
push
adc
inc
cmp
push
sub
jl
ret
insb
push
in
lcall
insb
pop
lcall
push
out
out
add
xor
cltd
in
jecxz
mov
cltd
loopne
push
xchg
push
inc
sub
ret
sub
sub
in
and
sub
in
int3
loop
mov
ror
jns
push
imul
das
icebp
clc
jge
cmp
call
mov
ja
ror
mov
mov
mov
loop
ljmp
in
aad
stos
aad
inc
add
inc
push
pop
xchg
mov
loopne
in
inc
jnp
xor
das
pop
pop
enter
mov
xchg
cmp
repnz
wrmsr
mov
and
mov
cltd
psadbw
or
out
test
jbe
xor
push
dec
add
sub
sub
lock
sbbb
sbb
inc
outsl
mov
sbbl
dec
push
sub
in
dec
iret
or
enter
andl
imul
xchg
mov
or
push
negb
cmp
je
jo
mov
push
cmp
loopne
mov
or
cs
jne
test
add
mov
mov
sahf
xlat
sbb
jns
cmc
sbb
enter
xchg
dec
push
dec
sahf
cwtl
aaa
das
fldenv
cmp
push
imul
vandps
dec
add
add
add
fistl
jle
cmc
pop
aam
mov
hlt
and
xor
cld
and
pop
jnp
mov
xchg
out
out
jae
mov
mov
pop
mov
push
or
pop
inc
mov
pop
clc
sub
mov
or
jnp
sub
or
mov
xor
dec
call
mov
lock
fidivl
or
xlat
push
or
mov
mov
test
stos
add
dec
fs
shl
int3
pop
outsb
cli
xor
in
lods
mov
sarb
aaa
adc
cld
in
sbb
enter
loop
add
nop
imul
incb
pop
rcll
cmp
jl
cltd
and
test
imull
mov
push
sti
int
inc
jns
test
fptan
and
stos
loope
call
mov
sbb
mov
cmp
in
sub
clc
push
mov
in
jne
ja
adc
dec
test
push
lahf
dec
adcl
and
jg
cmp
add
dec
lret
icebp
mov
repz
rclb
push
fidivl
and
mov
xchg
mov
dec
cmp
pop
in
jnp
dec
mov
pop
popa
adc
popa
repnz
pusha
adc
pop
inc
das
lret
or
jmp
lahf
lods
fimuls
sub
shrl
shrl
dec
loopne
leave
pop
dec
dec
mov
add
mov
fidivl
push
lahf
dec
pop
mov
pusha
fisubrs
movsl
sub
mov
xchg
fidivs
aas
pop
mov
push
push
push
mov
shl
imul
iret
in
inc
stc
mov
shr
sahf
sti
xlat
xor
push
mov
icebp
mov
pop
pop
leave
pop
cwtl
xchg
idivb
mov
sbb
out
mov
outsl
sub
cmc
test
mov
in
and
popa
addb
cltd
in
or
jns
add
ss
sti
mov
aaa
adc
cmp
adc
sub
pop
push
rorb
jecxz
jp
in
loop
jmp
aaa
orb
repnz
pop
dec
cli
inc
pusha
push
mov
rorl
imul
xchg
pusha
ficoms
or
adc
fsub
xchg
push
xor
negb
mov
rcr
push
dec
xor
adc
mov
nop
ss
jne
jae
and
rorb
inc
or
dec
xchg
mov
add
push
dec
mov
sbb
repz
scas
int
test
mov
out
push
gs
mov
add
clc
xchg
cmp
leave
jo
enter
and
sbb
shl
inc
jge
pop
xor
mov
cmc
shrb
mov
mov
jnp
je
dec
decl
mov
inc
loope
sti
inc
mov
ret
data16
mov
sub
out
push
cs
jno
dec
data16
lahf
ds
adc
jmp
stos
add
in
outsl
jnp
and
jge
push
dec
xchg
xchg
add
xchg
cmp
pushf
push
jg
adc
js
cmpsl
inc
cld
mov
inc
xchg
cmpsb
inc
mov
mov
jg
adc
sub
mov
popa
dec
stos
add
fsts
pop
loope
std
les
pop
mov
leave
cmpsl
mov
fwait
and
je
data16
lods
dec
repz
mov
mov
jno
fwait
das
shlb
loope
out
mov
cmp
mov
jb
xchg
call
pusha
sbb
mov
sarl
icebp
cld
leave
adc
mov
fnsave
jle
aas
and
mov
sub
xchg
add
mov
gs
add
and
loop
insl
out
pop
movsl
rol
xor
xchg
jae
jecxz
or
inc
lods
add
or
mov
dec
mov
and
or
inc
movsb
imul
rcr
push
fnstcw
sbb
in
inc
in
xchg
or
das
int
shll
adc
push
mov
sbb
call
ja
or
and
jb
js
fwait
cld
mov
jle
jecxz
mov
jl
sub
cmpsb
pop
sbb
mov
iret
xor
push
shrb
jbe
daa
popa
rcll
jnp,pn
out
push
push
ret
jp
ljmp
jbe
sbb
pushf
jle
xchg
aas
test
test
mov
push
test
lcall
lret
enter
std
rcll
sbb
xor
jns
in
jnp
cltd
loop
scas
fnsave
out
insl
into
fsubl
shrb
jp
mov
pop
adc
ljmp
dec
shlb
or
ss
add
pop
rolb
or
jg
push
xchg
push
and
pop
inc
test
push
adc
or
ficompl
add
inc
push
loop
int3
mov
pop
xlat
repnz
cld
pop
push
test
sub
mov
lret
pop
push
ds
adc
roll
inc
xlat
lahf
pop
test
fdivr
scas
jecxz
dec
mov
fiaddl
int
in
cmp
adc
test
gs
cwtl
jecxz
pop
mov
sub
bound
lds
mov
lret
repnz
fisubs
or
rorl
cmpl
mov
jge
adc
imul
inc
pop
xchg
sbb
mov
adc
sub
aam
inc
dec
jge
adc
xchg
mov
cmp
ret
cmp
push
movb
dec
xor
ficompl
cmp
pushf
imul
mov
js
mov
jp
jmp
cmp
lret
rcrl
jo
xlat
sub
mov
lea
mov
add
dec
and
jns,pt
popa
and
aaa
and
clc
add
push
jecxz
ss
js
jns
pop
xchg
notl
jae
in
jo
shr
dec
mov
xor
and
xchg
or
dec
jbe
push
test
outsl
sbb
sahf
sbb
rorl
outsb
xchg
sti
call
subl
stos
ret
aam
lods
or
or
jbe
inc
out
dec
mov
data16
push
fwait
aam
rcll
popa
imul
test
push
mov
test
in
scas
lods
push
or
mov
xchg
bound
fnstcw
or
mov
icebp
rcll
pop
add
mov
xchg
loope
shl
mov
clc
add
nop
loopne
adc
aaa
outsl
cmp
pushl
xchg
lock
or
loope
and
pop
lock
pop
scas
lcall
xor
xchg
lcall
imul
imul
jge
rclb
ss
sti
push
shlb
idiv
pop
test
cmp
or
ret
and
loopne
hlt
test
popa
movsb
int3
jae
cli
or
idivb
aas
mov
sub
mov
cmp
xor
loopne
fistl
decl
push
loope
or
jne
push
punpcklbw
sub
cmpsb
out
orb
cld
lods
dec
aam
fs
imul
or
xlat
outsb
add
cld
add
xor
mov
in
into
push
inc
dec
imul
pop
xchg
mov
or
iret
out
xchg
push
sahf
out
fistpl
dec
xchg
jno
sbb
jmp
push
loop
inc
adc
ficomps
xor
xlat
push
and
inc
outsl
scas
int3
test
andb
es
mov
mov
fcoms
adcb
data16
bnd
imul
xchg
lock
shll
push
outsl
rep
mov
inc
or
stos
xchg
rcrl
and
aaa
cmp
inc
sub
stos
pop
fisubrs
dec
stc
jl
repnz
loop
push
std
cltd
popf
pop
sbb
cmc
lret
push
inc
jp
repnz
dec
dec
nop
and
sar
xchg
jg
xor
lcall
dec
cmc
lea
xchg
out
jne
dec
pop
pop
inc
adc
fdivrs
in
add
xor
cwtl
ljmp
lea
je
cltd
sub
bound
ja
lods
push
dec
sbb
sbb
loope
sahf
pop
xorb
stos
pop
dec
xchg
insb
sbb
les
adc
clc
sbb
inc
pop
ds
lods
fs
insb
pop
push
addr16
jge
add
xor
sbb
add
cmc
mov
jns
add
adc
stc
movsb
test
lock
cltd
mov
mov
or
xchg
enter
or
cmp
xor
in
in
jne
add
clc
sahf
in
pop
inc
push
outsl
jns
or
mov
jnp
or
mov
sbb
repnz
pushf
adc
sbb
mov
in
cmp
jae
inc
test
jnp
pcmpeqd
fildll
pushf
stos
adc
sbb
dec
stos
cmp
fidivrs
shrl
mov
sub
roll
inc
push
std
mov
sub
jmp
test
loop
mov
inc
add
out
sbb
insl
mov
call
mov
or
push
xor
addr16
fidivs
mov
shll
mov
pop
test
pop
dec
hlt
addl
and
adc
jge
sub
mov
pusha
loope
dec
in
push
cmp
scas
dec
repnz
enter
call
cmp
inc
adc
mul
adc
add
mov
cmp
pop
cmp
dec
push
or
and
mov
enter
xchg
pop
ja
adc
push
insb
sbb
loop
loopne
fmuls
test
aas
sahf
push
popf
dec
ds
sbb
mov
jl
pop
lods
aaa
ss
out
cwtl
fcoms
jno
adcl
cmpsl
jbe
xchg
enter
data16
mov
sbb
pop
pushl
mov
jo
movb
and
push
add
and
xorl
mov
or
loope
lock
sub
lahf
lahf
mov
popl
cmpsb
in
push
push
lahf
out
sbb
repnz
mov
push
jb
shll
jae
sbb
jp
sub
fnstsw
mov
aam
into
filds
pushf
imul
rcl
nop
cmp
xchg
jae
dec
xchg
cmpsb
subl
arpl
scas
mov
mov
test
into
lods
bound
mov
xchg
pushf
int3
cmp
sub
orl
xchg
inc
sub
pop
adc
mov
mov
adc
mov
jns
add
jl
cltd
hlt
push
int3
and
popa
jecxz
cmpb
sbb
nop
out
jle
ret
insl
in
xorl
pusha
jae
test
fildll
inc
and
inc
loope
imul
and
xlat
mov
mov
pop
pop
jmp
je
add
inc
mov
iret
xor
sub
out
dec
mov
jecxz
push
insb
cmc
aas
aad
mov
or
arpl
movsl
repz
sub
xor
sub
rorl
pop
icebp
add
push
loope
aad
xchg
test
arpl
call
ds
mov
jno
shlb
mov
popf
push
stos
add
push
inc
cmp
push
push
adc
inc
in
xchg
push
cli
dec
push
jl
sub
test
or
mov
js
inc
imul
in
sbb
imulb
jno
bound
je
test
push
jp
jns
jne
mov
jo
loopne
ljmp
lret
xor
xchg
jb
mov
sub
or
jg
popa
adc
scas
cs
icebp
push
mov
popf
shlb
xor
add
push
iret
dec
movsl
ds
sub
scas
mov
dec
push
or
sub
hlt
push
sbb
push
int3
fdivl
or
push
loop
in
pushf
push
pusha
pop
mov
mov
mov
mov
jae
rorl
mov
mov
add
mov
pop
pop
push
loopne
das
push
lods
add
or
mov
int
adc
leave
cli
daa
cld
sbb
adcl
or
in
jbe
xorb
push
mov
jno
sbb
push
cmc
xchg
push
and
fcompl
xchg
fs
jmp
imul
sarb
movsb
jnp
cs
pop
xchg
imul
jge
loopne
xor
nop
stc
dec
push
data16
aaa
loop
es
js
sub
enter
in
sbb
adc
repnz
mov
cmpl
jne
and
and
adc
mov
cwtl
xor
and
int3
cltd
or
sbb
xor
mov
outsb
sbb
dec
orb
imul
push
xchg
pop
clc
mov
add
cmp
and
and
lea
dec
inc
loopne
add
fadds
and
mov
xchg
jnp
mov
inc
pop
jbe
loopne
sahf
mov
mov
cltd
lds
scas
add
stos
cmp
sahf
pop
divl
jne
pop
add
push
cmp
movsl
pop
inc
push
frstor
int
call
test
into
add
leave
ljmp
mov
outsb
call
fbstp
xorl
popa
lcall
stc
leave
dec
bound
push
out
rep
shll
loope
test
inc
xchg
popa
push
ror
sbb
lahf
loop
out
add
mov
sub
imul
shl
mov
and
mov
adc
rorb
and
dec
mulb
sti
repz
sbb
movsl
stos
jle
adc
out
and
pusha
mov
scas
incb
cmpsl
shr
data16
dec
mov
std
scas
arpl
mov
ds
clc
cmp
popf
inc
jne
arpl
pop
mov
stc
call
push
rolb
adc
fidivl
rcrb
sbb
sub
cwtl
call
pop
jnp
push
mov
dec
lcall
stos
and
test
repz
in
movsb
sub
inc
xchg
jp
imul
cmp
daa
jecxz
popa
and
shl
inc
xor
decb
imul
cmp
push
dec
sub
pop
push
in
xor
ficoms
sbb
inc
jb
inc
dec
cmpsb
adc
lret
das
insl
add
nop
and
nop
push
pop
sbb
mov
jo
xchg
test
in
lret
mov
push
sbb
data16
aam
js
ja
scas
repz
call
push
ds
dec
jbe
jne
daa
xchg
pop
push
or
loopne
mov
out
lock
jl
scas
and
xor
xchg
lock
push
and
aam
or
xlat
in
sub
fwait
stos
int3
div
mov
mov
add
movsb
cltd
scas
pop
out
dec
push
mov
add
mov
lahf
in
adc
nop
xchg
out
adc
lret
cmpl
sbb
cmc
imulb
pop
mov
movsl
xor
xor
push
nop
xor
add
push
dec
dec
pop
je
push
sbb
add
js
rcrl
in
pop
cli
xor
inc
loop
dec
sbb
and
pop
rolb
add
in
test
in
es
lret
mov
out
aam
xchg
ret
push
mov
stos
test
jbe
cmc
sar
adc
mov
sbb
lock
les
arpl
add
lahf
idiv
ror
out
dec
jno
xlat
rcrl
xchg
jmp
mov
stos
or
test
shrb
xlat
push
jo
inc
mov
mov
mov
xchg
jge
lock
mov
mov
test
sbb
bound
imul
scas
movsb
mov
pop
imul
mov
xor
dec
push
stc
xor
inc
sbb
in
mov
adc
push
loope
xchg
add
bound
and
and
pop
push
cmp
mov
lcall
leave
jns
enter
fisttpll
mov
arpl
int3
dec
cltd
hlt
jle
js
mov
pop
popf
jo
pop
movsb
jne
fadds
xchg
in
cmc
cmp
lea
imul
xor
sub
and
xor
adc
or
xchg
rcll
sub
pop
mov
jg
rclb
mov
xor
cmp
je
and
mov
add
add
push
pop
incb
outsl
push
sbb
cltd
and
addb
adc
aaa
jecxz
pop
icebp
mov
movsl
movsb
or
aaa
mov
dec
inc
jl
jmp
push
xchg
mov
mov
xchg
and
mov
jns
inc
jbe
mov
fwait
int3
mov
in
sub
adc
test
fcmovbe
insb
jnp
inc
data16
sub
dec
outsb
sub
mov
out
lods
imul
dec
mov
loope
mov
fisubrs
add
orl
insb
stos
cwtl
pop
outsb
jbe
push
mov
ds
ja
cmpsl
adc
mov
or
xchg
and
pushaw
push
pushf
jnp
and
dec
stos
mov
sub
fsubrl
xchg
std
mov
popa
faddl
fdivr
dec
mov
mov
pop
xchg
sahf
xor
out
dec
lahf
pop
hlt
lret
pop
push
xor
inc
jns
lods
lahf
test
ja
mov
and
cmp
adcb
inc
cmp
addr16
sbb
mov
addr16
xor
cmc
mov
pop
mov
jbe
dec
loopne
les
daa
imul
es
push
in
sbb
incb
pop
jecxz
subl
mov
cmc
gs
sub
pop
lods
xor
add
in
pop
pop
pop
xor
imul
std
mov
out
imul
fwait
imul
in
or
pop
data16
pop
and
cltd
aas
cmp
stos
fwait
in
movsl
dec
inc
aam
pop
adc
ret
scas
out
cltd
dec
fs
fdivl
std
dec
jp
fists
jge
adc
loopne
ljmp
jl
ja
scas
mov
sbb
jb
push
xchg
mov
shrl
push
out
lds
mov
in
repnz
adc
pop
xor
in
out
cmpsb
mov
lock
mov
jmp
cwtl
repz
es
mov
cmpsl
pop
sti
adc
in
popf
pop
push
iret
cld
pop
inc
shl
clc
clc
inc
bnd
lret
out
cltd
push
popa
shrl
push
cmc
jle
bound
aaa
pop
and
dec
adc
ja
lods
addr16
cwtl
fsubl
pop
pop
cmpl
jns
scas
mov
mov
push
inc
in
sti
sub
popa
push
repz
mov
push
das
add
fadds
mov
ret
daa
xor
inc
xor
xchg
cltd
out
pop
sbb
sub
sbb
adc
lock
nop
xchg
add
scas
hlt
mov
in
movsb
mov
ja
sub
mov
xchg
adc
fldt
iret
adc
decb
mov
adc
clc
pop
dec
cmp
aad
in
dec
jns
jmp
jl
xchg
push
das
mov
int3
dec
mov
xchg
inc
mov
and
test
out
or
mov
ror
xchg
js,pt
out
jo
hlt
mov
inc
or
movsb
push
imul
mov
mov
sub
xor
mov
mov
in
repnz
push
or
adcl
xchg
aam
loop
jmp
inc
adc
xchg
push
mov
aam
or
jbe
cmp
adc
adc
popa
cwtl
adc
outsb
aad
sbb
mov
int
movsl
dec
mov
jmpw
lea
sub
xor
add
mov
mov
pop
popf
and
fcomi
xchg
lahf
mov
jbe
fists
ss
mov
xor
daa
cmp
xor
add
lods
mov
inc
mov
dec
jno
dec
adc
xor
push
fstpl
ss
inc
loopne
rolb
and
jns
pop
js
cmp
imulb
lret
fistl
mov
cmp
or
pop
xchg
xchg
push
pop
sbb
mov
and
std
pop
ret
sbb
dec
sub
pop
test
mov
repz
aad
jno
sbb
cmp
push
insl
sbb
sub
pusha
minps
sar
fwait
mov
fs
icebp
sub
xlat
mov
or
mov
loop
je
lret
xchg
ds
sti
loope
xchg
mov
test
adc
imul
andb
sub
int
mov
pop
sub
jns
lods
cmp
iret
sub
out
push
je
loopne
inc
xchg
add
outsl
inc
adc
adc
cmpsb
fwait
aas
es
sti
fwait
leave
cmp
lret
call
enter
std
aam
loope
daa
divl
or
xor
sbb
jle
cmc
or
sbb
stos
ret
loopne
js
out
andl
arpl
loopne
js
in
mov
lcall
pop
and
jmp
shl
movsb
mov
ds
lret
or
push
push
lods
cli
or
add
mov
les
mov
and
hlt
out
xchg
fildll
lods
into
loope
add
xchg
mov
ret
and
inc
sub
or
pop
fwait
aaa
dec
mov
xchg
gs
rorb
pop
xchg
hlt
push
sahf
mov
cmc
sbb
dec
cltd
pop
sbbl
insb
ficompl
int3
adc
and
add
outsb
test
in
xchg
ret
or
aas
dec
dec
cmp
outsb
out
lret
hlt
std
mov
and
es
test
bound
mov
push
sbb
out
mov
push
test
cmp
insl
inc
push
cmp
roll
xchg
add
xchg
pop
rclb
ret
mov
ds
leave
stos
dec
aad
hlt
inc
aad
sub
arpl
xchg
mov
push
mov
and
in
ficomps
movsl
mov
repnz
cmp
pop
dec
mov
test
popf
gs
dec
push
cmp
push
mov
xor
mov
pop
stos
imul
xchg
clc
mov
push
pop
cltd
repnz
arpl
push
mov
push
shlb
imul
lods
outsb
add
mov
cmp
popa
xchg
gs
mov
out
pop
jo
and
test
das
jp
mov
outsl
jle
or
xor
mov
inc
dec
jns
repnz
popa
or
lods
lret
in
mov
dec
push
inc
mov
and
pop
jno
das
cs
xchg
mov
xchg
movb
call
mov
mov
mov
xor
sarl
dec
cmp
in
push
pop
adc
stos
jnp
push
mov
jno
hlt
in
inc
lods
mov
and
pusha
pop
jle
ja
call
test
mov
in
test
add
scas
js
aaa
mov
xchg
stos
pop
mov
or
sub
mov
out
ret
notl
sub
nop
jae
jns
push
fiadds
and
and
dec
pusha
dec
xor
sbb
adc
std
adc
fidivrs
gs
filds
cmpsb
adc
imul
movsb
mov
mov
fadds
mov
sbb
adc
bound
adc
call
cmpsb
fwait
inc
cmpsl
ror
out
and
inc
xor
jo
mov
push
lret
add
enter
xchg
adc
xlat
or
sub
in
jbe
lods
pop
inc
push
xchg
lret
test
push
and
jns
inc
insb
push
hlt
out
pop
cs
bound
add
les
fadds
insl
or
sbb
xchg
adc
jl
aaa
stos
xlat
and
xchg
push
out
cmp
push
loop
add
push
inc
ljmp
pop
sbb
dec
and
push
inc
lds
leave
loop
adcl
clc
adc
inc
dec
scas
jmp
xchg
jno
mov
jno
push
or
mov
mov
xchg
pop
mov
jg
loope
loope
lea
mov
repnz
shlb
pop
ds
jno
xor
movsl
mov
pop
pop
pop
push
dec
stos
sti
sahf
sub
insl
pop
pop
std
cmp
mov
mov
mov
mov
pop
subb
out
inc
fsubrs
imul
enter
jns
or
and
movsl
or
sub
popf
pop
and
lret
sub
in
sub
mov
mov
adc
push
in
pop
shll
cmp
fildl
call
data16
add
push
clc
cmp
mov
cmpsl
mov
push
cltd
mov
loope
pop
test
pop
ficoml
sti
jp
mov
movsl
addl
dec
add
ds
push
mov
or
ficomps
int
push
insl
hlt
jl
cmpsl
outsl
aam
sbb
jcxz
mov
dec
mov
fistps
sub
test
mov
arpl
add
pop
out
out
jns
jne
call
std
inc
mov
sub
sbb
test
fisubs
test
jp
mov
daa
and
fadds
mov
js
sub
add
sub
mov
mov
cmp
call
mov
cwtl
fidivs
inc
jle
jecxz
pop
sbb
and
inc
test
out
hlt
dec
stos
popf
cli
or
and
jmp
popf
cmp
pop
sti
cmp
iret
xorl
cwtl
rorl
mov
loop
ret
xlat
outsb
repz
xchg
mov
std
aaa
inc
addr16
js
rolb
pushf
stos
dec
ds
add
fmull
mov
in
xchg
popf
mov
test
dec
sub
insl
jno
imul
sub
repz
add
in
and
xor
push
lds
imul
enter
mov
or
arpl
std
sbb
mov
fidivs
xchg
dec
xchg
in
pop
mov
pop
testb
push
mov
push
repnz
jno
rcrl
jnp
sbb
fwait
pandn
mov
jge
nop
jmp
pop
inc
sti
mov
push
test
daa
xchg
leave
adc
testb
sbbl
rclb
lret
fcompl
mov
mov
sub
push
fld
cmp
push
loopne
add
lahf
dec
in
add
sbb
jle
pop
outsb
rclb
lret
xchg
cli
iret
sub
jmp
mov
js
imul
int3
mov
pop
ret
lcall
mov
xorl
jl
loope
ss
push
cmp
les
test
jbe
roll
rcrl
jbe
xor
mov
out
mov
sub
fisubrl
arpl
dec
mov
int3
mov
ffreep
in
ficoml
add
loope
sbb
outsl
and
clc
mov
mov
mov
cmp
sbb
incl
xor
cmp
mov
in
xchg
ret
mov
test
pop
add
or
cs
lock
mov
shld
cmp
adc
hlt
push
das
mov
dec
jge
add
mov
cmpsb
cmpsl
sahf
mov
add
xor
call
pop
aam
pop
int3
lcall
inc
mov
pop
mov
cmpsb
mov
aam
push
xchg
stos
xor
push
add
add
jns
dec
mov
dec
repnz
scas
and
push
jne
mov
rcrb
push
imul
sbb
sub
sub
out
lcall
clc
imul
xor
xchg
fisubs
cltd
push
mov
xchg
mov
cmpsl
daa
xchg
mov
enter
mov
fs
test
sahf
xchg
mov
and
ljmp
sub
mov
push
pop
and
ljmp
adc
mov
add
mov
sub
fldcw
fcomip
int3
xlat
inc
cltd
fldl
xchg
sub
dec
insb
mov
cmp
cwtl
sbb
jmp
loop
push
add
inc
test
aaa
xor
cs
mov
jge
lea
lret
out
sub
in
shlb
lods
adc
mov
in
mov
in
shrb
or
aas
jbe
xchg
inc
mov
jg
dec
repnz
out
sbb
jl
cld
test
daa
push
dec
inc
call
mov
es
cwtl
ljmp
mov
and
and
fstpl
xlat
aaa
xor
xchg
out
popf
in
mov
xchg
test
clc
ret
push
fsts
lret
cmp
bswap
aam
stc
ss
data16
adc
and
fsts
sbb
cmpsb
pusha
mov
gs
clc
lods
aas
movsl
mov
popf
outsl
pop
inc
aad
xchg
out
or
sti
clc
dec
xor
fildl
rcl
push
cmp
ret
imull
lahf
je
push
xor
out
xorps
and
add
outsl
push
sahf
addr16
popf
sbb
pop
and
scas
hlt
les
or
popf
lcall
test
ss
and
pusha
pop
test
inc
sbb
lcall
jb
push
pop
sub
jo
xor
adc
jmp
cmp
cmc
sbb
push
lods
xchg
cmc
jno
and
into
mov
xor
sbb
push
ss
cli
inc
je
shll
jne
xor
movsl
pop
fcomp
jge
jns
push
cmp
mov
inc
es
add
dec
andb
aam
outsb
mov
adc
sub
push
aas
test
clc
inc
jo
or
ljmp
popa
xor
dec
sub
mov
adc
ja
loop
inc
stc
in
jae
cmc
add
jne
fimull
or
pop
jmp
ud2
enter
loopne
fs
test
je
insl
inc
aad
dec
lretw
sbb
outsb
xchg
dec
in
jmp
sub
add
cmp
nop
out
push
nop
lret
push
repnz
ljmp
pop
mov
int
push
aas
gs
gs
lret
adc
xchg
daa
push
mov
loopne,pn
jg
push
mov
xor
nop
xlat
sbb
mov
or
mov
inc
scas
sbb
test
or
mov
inc
lods
lock
mov
cltd
into
cwtl
lods
dec
mov
cmp
dec
sahf
fsubs
inc
dec
inc
dec
pushf
jo
pop
push
mov
or
mov
sub
cmp
insb
sub
pop
push
mov
fnstcw
movd
in
stos
js
rcrb
mov
push
lods
pushl
adc
mov
shl
dec
hlt
cmp
mov
pusha
push
addr16
and
dec
and
sbb
imul
mov
xor
test
gs
sbb
popa
and
xor
test
or
fimuls
push
pop
in
pop
out
mov
xor
repnz
icebp
insb
dec
push
lret
push
sub
out
aas
roll
add
add
hlt
loopne
mov
aas
sub
jo
add
imul
push
scas
ffree
notl
xor
int3
sbb
lock
adc
ret
mov
test
mov
fwait
dec
ficomps
push
int3
in
and
daa
adc
cmp
xlat
je
pop
cmp
pop
add
and
pop
popf
out
push
mov
lret
cmp
repz
jno
xchg
into
sti
mov
push
xchg
mov
cmp
cmp
call
cmc
inc
jbe
jmp
mov
popf
pop
inc
mov
pop
jae
lds
add
sub
je
push
dec
push
ret
sub
push
adc
lea
stos
sbb
nop
sub
movsl
push
sbb
shlb
jmp
adc
aad
xchg
fwait
xor
and
or
dec
mov
jge
jo
jecxz
mov
mov
lret
or
nop
icebp
cmp
bound
aas
xor
inc
xchg
inc
arpl
mov
mov
adc
fidivs
mov
push
push
jp
test
lods
cwtl
sub
cltd
xchg
les
dec
mov
mov
jnp
adc
mov
stos
call
adc
sahf
sub
sbb
push
aad
aaa
add
daa
gs
or
jp
std
dec
pushf
mov
xlat
xlat
push
lcall
fistl
lds
mov
xchg
sbb
inc
lret
shlb
repnz
fdivs
ret
ss
inc
mov
xor
mov
xchg
mov
fwait
sub
icebp
imull
cld
or
or
mov
dec
lock
or
cmpsl
mov
les
xor
stos
js
lods
jo
test
mov
call
cmp
push
rolb
stos
sub
stos
add
jl
pop
xchg
and
dec
mov
mov
cmpsb
sub
arpl
lock
xchg
or
adc
sub
std
and
nop
fwait
cmp
in
push
cmpsl
test
push
mov
jne
ljmp
and
daa
adc
daa
rolb
jge
into
mov
lret
and
or
mov
sub
aam
fmuls
jb
sub
push
in
clc
jp
mov
test
lret
push
cmp
dec
add
into
adc
hlt
ljmp
cmp
jne
cmpsl
sub
ja
mov
mov
adc
inc
mov
push
xchg
scas
movsl
pop
call
test
inc
imul
out
jbe
and
cmp
je
scas
imul
loope
or
in
jnp
mov
test
leave
jb
mov
add
fs
or
lea
xlat
mov
in
aad
and
int3
inc
mov
les
and
sbb
sub
push
ficomps
mov
mov
jae
and
jnp
jbe
cmp
push
sbb
and
sub
dec
cmp
or
ja,pt
mov
mov
es
sti
pop
and
loopne
repnz
shrl
xor
ret
xor
lret
mov
fisubl
dec
xorb
sbb
jno
sbb
dec
pop
call
loope
add
or
mov
sbb
jecxz
adc
jns
xchg
stc
or
out
xchg
ds
adc
pop
pop
jge
aaa
fdivrl
mov
mov
sub
sarb
enter
xorl
inc
jb
fistpll
mov
daa
push
add
lods
js
mov
sub
into
jnp
sub
add
std
jmp
cmp
mov
dec
subb
sbb
mov
mov
xchg
shr
jg
lods
pop
xor
aaa
stc
ficoms
sbb
and
lock
and
lahf
sbb
mov
out
xor
pop
mov
xor
out
pop
sub
cmp
jl
fsubs
sub
mov
outsb
sub
mov
or
sbb
mov
lea
negb
jns
lret
or
xor
or
adc
scas
jmp
xor
jbe
adc
fstpl
xchg
int3
push
sub
movnti
out
dec
pop
jmp
inc
cmp
add
call
stos
mov
push
xor
loope
stos
dec
fildl
or
mov
cli
mov
mov
mov
mov
jle
mov
sahf
imull
mov
enter
mov
and
sti
pop
inc
sub
xlat
loopne
mov
xor
repz
xchg
sub
rcll
push
rclb
ja
popf
insl
stos
pop
mov
cmpsl
aaa
jg
mov
push
shr
push
mov
mov
mov
add
inc
stc
imul
and
repz
fcompl
std
sub
sbb
lods
lret
inc
jns
xlat
push
lock
jne
aam
fsub
dec
jnp
jo
sti
lret
xchg
jnp
and
cmp
mov
jns
je
rol
mov
repnz
dec
inc
sahf
jmp
fldcw
xor
cmpl
in
sbb
add
scas
fcomps
mov
lock
cli
pop
in
xchg
inc
inc
inc
jg
and
je
pop
jp
cmp
sub
cmpsl
push
test
aad
int3
mov
mov
mov
jnp
int
insb
push
lods
jno
cmpsl
pop
ret
pop
and
mov
lods
fidivs
pusha
xor
imul
inc
sbb
cli
add
jg
pop
and
ljmp
shll
add
xchg
ret
mov
pop
mov
mov
repnz
in
jl
inc
mov
mov
dec
dec
sub
lret
cwtl
aas
adc
les
in
lahf
das
mov
shlb
inc
and
jnp
adc
xchg
inc
rcr
lds
pop
dec
jecxz
xchg
cmpb
pop
popa
outsl
insb
pop
push
scas
xor
cmpsl
loope
stos
or
xchg
loop
repnz
dec
popf
clc
sbb
lcall
sub
xchg
xchg
cmp
sarl
int3
movsb
daa
adc
mov
mov
jg
mov
in
lds
or
in
mov
mov
mov
add
imul
fisubs
push
jge
jecxz
mov
sub
frstor
lods
into
dec
popf
push
pop
dec
scas
pop
cli
push
or
xchg
jae
movsl
xchg
mov
iret
mov
mov
int
mov
negb
je
jb
cmp
adc
mov
and
popa
dec
das
xchg
adc
adc
dec
jne
leave
daa
pop
mov
ljmp
in
xor
sbb
iret
mov
addb
pop
rcrb
out
inc
mov
dec
push
jmp
outsl
ret
outsb
scas
xor
cmp
fnstenv
outsl
iret
sbb
lret
sbb
mov
jle
or
adc
xlat
xchg
add
fidivs
imul
pop
dec
jmp
sbb
push
mov
les
les
imul
shrl
gs
and
rorl
enter
sar
xor
iret
std
imul
mov
imul
scas
data16
mov
cld
xchg
pop
push
dec
jo
bound
aam
frstor
push
mov
adc
in
pop
inc
mov
mov
cmpsb
int
adc
test
push
cmc
push
cwtl
mov
divl
data16
cmp
mov
xor
cmp
sbb
mov
dec
int3
lds
mov
dec
call
insb
dec
cmp
frstor
ja
loope
pop
aad
shll
jnp
dec
or
mov
lds
stos
mov
add
adc
jae
and
xchg
fsubrl
push
inc
std
ljmp
in
cmp
cmp
mov
jbe
int3
and
inc
add
xchg
inc
nop
fsubrl
sub
movlps
jo
mov
sbb
out
cli
fsubs
outsb
cwtl
dec
sub
adc
dec
xchg
xor
pusha
insb
lods
and
in
pushf
xor
jmp
ret
pop
mov
pushf
xchg
loopne
loop
fnstenv
fs
fdivrs
lock
bound
adcb
test
pop
mov
add
xchg
xchg
rcl
dec
mov
push
cmp
gs
sbb
movaps
push
inc
mov
sbbl
andl
and
ja
xchg
in
push
push
out
negl
jnp
mov
ja
andb
mov
or
and
out
jbe
negl
mov
xor
jo
sbb
cli
cltd
mul
rorb
pop
inc
or
stos
add
cld
mov
sarl
sub
ds
addb
cmpb
mulb
sub
test
iret
fmuls
pop
xchg
lret
pop
or
cmp
movsl
pop
ret
fdivrs
imul
mov
inc
out
clc
add
sahf
inc
inc
inc
cs
mov
xchg
lock
adc
cs
bound
repz
lret
test
cmp
rorb
dec
ja
dec
sti
push
test
jp
mov
pop
push
incl
and
sbbl
outsl
adc
mov
pop
out
jnp
rclb
cmpsl
aad
mov
mov
into
mov
cltd
push
hlt
xor
push
mov
pop
cmp
lods
push
gs
mov
shlb
sahf
clc
scas
mov
pop
xor
mov
out
das
jp
test
fnsave
cmp
xchg
sarl
xchg
in
xor
push
xor
addr16
pop
jmp
ljmp
int
lcall
lods
mov
add
pop
sub
hlt
xchg
enter
add
cmp
or
sbb
jmp
sub
test
inc
pop
clc
stos
sub
pop
jnp
das
repnz
test
xchg
push
loop
pop
mov
test
daa
ror
xchg
add
jbe
into
or
bound
in
pop
out
test
imul
xor
loope
je
sub
mov
das
mov
xor
lock
inc
out
pop
cmpsl
cmp
popf
pop
ja
icebp
outsl
mov
fwait
dec
shll
sub
test
loope
mov
loopne
outsl
adc
push
lock
xchg
nop
aad
les
push
test
int3
cwtl
fldt
loopne
imul
sbb
mov
mov
mov
mov
insb
add
ficoml
xor
cld
out
loope
or
and
cmp
mov
pop
mov
add
and
xor
test
popf
loop
sbb
outsb
mov
stos
adc
pop
shr
daa
lret
mov
out
xor
stc
sub
loopne
imul
insl
test
fmull
push
mov
sbb
add
and
loop
push
jae
sbb
cmpsb
add
daa
dec
pop
inc
lods
shlb
pop
test
fwait
andb
dec
add
push
xchg
xchg
out
jns
test
dec
push
mov
sahf
pushf
rorl
ss
sub
push
repz
inc
int3
add
mov
fildll
or
std
incb
or
lea
xor
lds
in
into
mov
cmp
adc
dec
int
idivl
xor
repnz
adc
imul
add
sbb
mov
push
push
imul
or
insb
adc
xchg
add
mov
push
adc
xchg
cwtl
in
stc
cmpsl
push
stos
cwtl
sub
sub
sbb
adc
cs
fidivrl
push
cld
jb
jnp
jne
and
xchg
adc
std
fldl
push
loop
data16
add
cs
lret
and
lcall
push
das
xchg
pop
xchg
pop
xchg
sbb
sti
mov
push
cli
mov
mov
mov
xchg
adc
pop
stc
mov
icebp
arpl
cmp
aam
xchg
sbb
mov
mov
das
lock
pop
mov
mov
scas
xchg
test
and
or
and
lcall
jnp
xchg
call
shl
add
pop
iret
jns
sahf
inc
and
sahf
sub
pushf
add
jo
clc
test
cltd
dec
xchg
loop
movsl
push
popf
add
repnz
hlt
imul
fnstsw
dec
lret
addl
inc
jns
pop
adc
gs
cmpsb
jge
mov
xchg
sbb
icebp
or
mov
cli
cwtl
sub
pop
dec
pop
mov
dec
mov
push
std
ret
inc
sub
dec
cmpsb
cld
push
std
out
xchg
add
es
or
aad
xchg
stos
or
add
mov
jle
mov
ss
out
fnsave
xchg
mov
jecxz
mov
pop
aaa
add
fnsave
mov
or
loopne
adc
loop
dec
mov
mov
jae
inc
mov
lock
push
sbb
js
shrl
adc
push
dec
mov
mov
xor
out
jbe
inc
rcr
aas
sbb
lea
stc
xor
push
mov
sbb
and
in
pop
or
push
gs
aam
ret
pop
mov
and
jmp
imul
lahf
sti
and
or
or
mov
lret
andb
push
and
cmpsb
clc
jg
cld
test
jecxz
lahf
sub
ret
cmpsb
aam
and
jns
push
data16
popf
lret
mov
cmpsb
jl
rorl
adc
sub
xchg
in
mov
addr16
push
sub
shll
or
mov
and
cmp
mov
jg
jno
xlat
jb
test
xchg
adcb
cmp
or
cmpsb
leave
jne
add
je
cwtl
fwait
cmpsb
add
pop
or
pop
cmp
mov
pop
jp
push
out
jae
enter
cmp
xchg
in
or
adc
inc
sub
fnsave
dec
in
xor
out
xchg
mov
add
dec
test
cli
xchg
dec
addr16
orl
lock
lods
rcl
cmp
cmp
cmc
sahf
imul
das
fsub
in
mov
mov
pop
mov
lods
push
sbb
push
xchg
push
shrb
rcrl
cmpsb
jecxz
mov
hlt
rcll
std
inc
insl
aam
lea
xor
loope
arpl
ret
mov
or
pop
mov
adc
stos
and
dec
push
add
nop
int3
aam
or
data16
test
jge
mov
sti
dec
mov
xorb
lds
fwait
push
dec
push
pop
fcomp
mov
push
sbb
shlb
in
into
inc
push
push
dec
mov
cltd
loop
lret
mov
in
inc
fucomp
pop
or
inc
ret
jmp
fisttps
push
gs
fs
mov
or
cld
inc
jnp
mov
loop
fcoms
rcl
pop
cld
negb
lods
mov
fcmovnu
loope
jl
xor
or
adcb
xor
jge
lret
push
mov
or
xor
orl
and
pop
out
lret
xor
add
jb
ret
test
scas
es
pop
sti
loop
dec
mov
pop
adcb
pop
lods
insl
loop
leave
in
dec
stc
xlat
push
add
enter
dec
mov
push
test
lds
pop
cmc
push
mov
or
mov
adc
cmp
add
ljmp
aam
and
enterw
jbe
dec
adc
lods
dec
add
cld
out
mov
sbb
jae
or
and
xor
lret
cs
pop
dec
fildl
or
in
pop
and
xchg
cmpsl
mov
stos
loop
out
fiadds
xchg
lret
mov
fdivl
in
pop
xchg
test
sbb
daa
cmpsl
testl
push
iret
fdivrs
add
dec
lock
out
jno
mov
add
out
sub
in
push
addl
add
lock
scas
pusha
cwtl
dec
cs
fisubs
movsl
stos
aaa
aaa
push
cmc
adc
jnp
jns
mov
jb
adc
adc
adc
push
xchg
jl
pop
shll
jae
push
mov
mov
jb
jne
xchg
mov
and
rcll
in
js
push
das
xlat
mov
mov
outsb
or
mov
popa
xchg
dec
scas
and
popa
and
mov
add
js
insl
aaa
mov
sub
xchg
sub
into
rorb
incb
sbb
inc
cmp
mov
cmp
mov
mov
jle
mov
clc
js
bound
pop
push
imul
push
dec
jecxz
es
or
adc
sbb
inc
lahf
adc
stos
push
jmp
jae
popa
adc
in
mov
pop
sub
mov
xor
int
fisubrl
sahf
popa
nop
lahf
pminsw
lds
adc
xchg
fidivrl
mov
popf
xchg
lods
jns
sub
test
sub
fbstp
sbb
int
xchg
lds
loope
sbb
inc
add
push
pop
mov
adc
lea
fistps
cld
subb
je
dec
lahf
pop
mov
pop
mov
int
push
mov
add
push
jno
icebp
in
and
out
loopne
cmp
pop
js
sbb
or
nop
xor
push
pop
sub
adc
add
lahf
orl
jb
loope
jo
int
cmp
sub
push
jo
push
ret
add
adc
push
repnz
cmp
outsb
cmpsb
add
sahf
dec
daa
cli
xlat
adc
sbb
lods
repnz
sahf
dec
mov
sahf
inc
jp
mov
shlb
lds
int3
cmp
or
out
insl
test
adc
mov
dec
sub
mov
jb
sbb
shlb
sahf
popf
imul
xchg
ret
stc
stc
sub
and
inc
sub
pop
jg
and
out
int3
loopne
sbbl
cmp
sti
in
dec
xor
lock
es
and
loopne
call
daa
jno
clc
push
xchg
cmp
mov
daa
mov
add
jp
mov
xor
mov
shrb
dec
xor
or
dec
mov
outsb
imul
cmp
cld
shlb
shll
das
adc
rcrb
push
or
cmpsl
hlt
push
push
adc
loopne
loope
frstor
sub
jecxz
push
add
ja
jno
shl
aam
hlt
sub
add
loopne
arpl
in
rcrb
mov
mov
inc
pop
inc
jp
push
cmp
push
and
je
xor
fsubs
xor
jne
imul
adc
or
ds
cmpl
xchg
cltd
jno
inc
lods
dec
cmp
gs
push
repnz
cmp
mov
sub
xlat
push
shll
clc
mov
jecxz
sahf
adc
arpl
in
adc
push
add
divb
push
das
inc
or
rcrl
push
inc
inc
or
not
cmp
push
icebp
xchg
xchg
or
sub
movsl
push
pop
inc
add
arpl
rcrl
jb
jmp
or
mov
adcl
fdivl
mov
mov
add
stos
adc
and
jns
aad
pop
mov
inc
roll
mov
cmp
bound
mov
or
popl
adc
js
lret
les
hlt
test
mov
fsub
jae
repnz
sub
out
mov
jb
mov
cld
std
xchg
pop
pushf
or
cmp
sbb
xorl
jns
adc
outsl
outsb
rolb
ja
sbbb
lds
insb
fstl
cmp
in
and
jnp
xchg
daa
int3
and
jecxz
in
repnz
icebp
sub
push
mov
dec
js
nop
arpl
and
insl
in
insb
inc
repnz
pop
lds
inc
cmp
dec
pop
rcrb
dec
dec
filds
gs
test
mov
xchg
pusha
insl
and
adc
mov
out
test
ds
mov
sbb
or
repz
loopne
xorl
les
outsl
inc
lcall
xchg
pusha
pop
add
or
push
jnp
pop
shll
push
and
and
out
inc
xchg
mov
imul
pop
in
sbb
sahf
push
fsubr
mov
mov
jae
int
pop
pop
sahf
ret
mov
jecxz
dec
sub
sbb
or
sbb
dec
mov
scas
in
inc
loopne
aam
sarb
lahf
mov
inc
dec
std
push
and
loope
pop
inc
inc
dec
mov
sub
cmp
out
lds
cmp
out
cmp
and
sbb
test
test
icebp
outsb
cmpsl
cli
mov
sbb
cwtl
pop
les
rcll
inc
imul
cli
mov
inc
in
ret
push
gs
adc
imul
or
jb
mov
push
insl
hlt
scas
mov
mov
or
adc
xchg
jle
jmp
rorb
out
test
addr16
pop
add
sahf
push
push
loopne
sbb
lret
dec
shlb
sub
xlat
imul
or
fwait
out
hlt
push
adc
push
ret
mov
sahf
xlat
aas
add
cmp
mov
mov
and
mov
outsb
mov
push
lods
outsb
scas
sahf
out
repnz
adc
dec
iret
and
cli
push
test
fmuls
jmp
aam
mov
mov
lea
ja
fcompl
sbb
dec
dec
rcl
loop
push
test
xchg
iret
inc
or
xchg
push
add
mov
sub
or
cwtl
adc
jae
daa
lret
cmpsl
jns
jle
mov
push
out
mov
mov
push
xchg
stc
enter
leave
adc
mov
jno
out
popa
jns
leave
add
push
push
lret
sub
lret
lea
and
xor
rorb
push
jne
js
push
mov
imul
mov
xchg
in
arpl
add
popf
lahf
jae
cmp
cmp
icebp
pop
lret
xor
dec
xchg
add
mov
mov
pop
pop
adc
adc
adc
loopne
sbb
and
stos
pop
dec
inc
stos
sub
mov
or
mov
loopne
xor
sub
enter
or
fidivl
mov
rcrb
ja
lea
sahf
sub
rorb
insb
mov
test
sti
sbbb
lods
cmpsb
outsb
adc
sub
ljmp
in
fsin
sub
dec
adc
xchg
xor
pop
pop
leave
jle
push
fsubrl
rclb
or
sbb
addr16
stc
loop,pt
add
lods
test
adcb
stos
cmp
add
and
mov
cwtl
loopne
xchg
xchg
push
int
dec
mov
iret
addr16
xorb
ja
and
fmull
enter
scas
shlb
andl
pop
enter
bound
sbb
cmp
ret
lret
sub
mov
ret
shll
mov
inc
sub
inc
enter
mov
movsl
test
mov
cltd
pop
fistps
fisttpl
mov
pusha
cmp
popa
xchg
insl
xorb
es
negl
fisubs
cmpl
push
fiadds
fimull
int
mov
push
and
shll
jno
cmp
jmp
mov
pusha
outsl
xchg
mov
fiaddl
loop
out
mov
add
xchg
mov
push
or
pop
inc
scas
xchg
cmp
xchg
sbb
imul
les
scas
xchg
iret
jmp
rolb
or
aas
ror
jne
mov
and
cmpsb
cmp
mov
out
popa
movd
xor
or
rcrl
popf
xchg
push
push
or
call
dec
outsw
cmp
mov
nop
xchg
xor
pusha
and
sub
lea
dec
pop
mov
xchg
int3
mov
outsb
jnp
add
or
fisttpll
dec
jno
movsb
xor
aam
bound
pop
sub
je
es
fstl
mov
bound
into
idivb
mov
rcl
insl
inc
and
movb
repz
mov
xchg
dec
das
shl
popf
icebp
data16
add
push
inc
mov
jg
mov
xlat
adc
loopne
shl
push
popa
pop
test
adc
insb
pop
inc
rcr
mov
pop
mov
into
add
cmpsb
mov
ret
sbb
test
or
or
cli
mov
or
jg
repz
jmp
call
cli
stos
inc
stos
pop
push
mov
xchg
outsb
add
in
bound
push
divl
out
inc
cmp
aas
cli
dec
fwait
jl
add
mov
sbb
lea
and
loop
call
repnz
loope
loope
jl
push
cs
xchg
testl
push
vmovd
mov
pop
push
cwtl
adc
sbb
imul
xchg
xchg
xor
addr16
fs
or
mov
sbb
mov
jno
jg
add
test
and
lahf
push
pop
jle
jae
sti
shr
repnz
or
jecxz
test
outsb
in
and
and
dec
cs
and
and
adc
ljmp
test
cmp
sub
push
mov
in
jns
inc
push
insb
cmp
fwait
push
outsl
dec
lds
pushf
movsl
lret
addl
std
sub
scas
frstor
cmpsl
xchg
jg
jg
sbb
sarl
jb
daa
out
xchg
mov
iret
pop
cwtl
adc
loope
dec
pushf
and
rcll
pop
iret
xorb
jo
xchg
dec
cwtl
sub
pop
sbb
cmp
repnz
sub
mov
cmp
cmp
dec
push
mov
push
icebp
scas
jne
sahf
andl
push
cmp
cmpb
arpl
jae
xor
mov
mov
aas
mov
xchg
scas
ds
jbe
mov
std
pop
into
cmc
mov
in
out
cli
pop
sub
bound
je
arpl
cltd
fiaddl
rorb
dec
ret
cmpsb
sbb
fs
mov
dec
sub
xor
clc
push
and
mov
push
xorb
or
add
outsl
lods
sbb
shll
das
cli
cmpsl
xor
jnp
scas
dec
lret
out
in
mov
sti
add
sub
pop
xchg
enter
leave
push
insl
mov
push
cs
adc
push
popf
lods
push
insb
aaa
addr16
repnz
iret
mov
mov
pop
or
in
sub
je
add
ja
push
jle
pop
inc
adc
int
xor
ds
jnp
ficomps
aas
xchg
test
add
aad
fwait
sub
lret
pop
das
dec
sbb
push
add
out
xlat
mov
and
out
pop
js
jge
jg
fists
dec
imul
xlat
inc
jmp
mov
xchg
mov
jnp
mov
xor
adc
lods
in
xchg
movsb
fdivrl
js
jl
lds
mov
fmul
in
mov
out
js
mov
lcall
fisubs
mov
cmp
pop
daa
mov
scas
ss
fcomps
mov
or
adc
rclb
andb
outsb
mov
or
sbb
and
push
cs
dec
inc
repz
xor
loopne
les
mov
xchg
pop
clc
mov
mov
outsb
lds
call
ljmp
pop
jb
mov
in
sub
cmp
out
repz
fs
in
cmp
stos
cmc
dec
lret
in
int3
mov
arpl
pop
rcll
dec
adc
xchg
mov
shl
nop
repnz
mov
jl
add
popa
stc
popf
jno
sbb
inc
and
mov
xor
xchg
shl
pop
jge
pop
mov
inc
sbb
movsl
adc
rcll
jb
std
aad
adc
xor
cmpsl
lods
notb
ret
dec
push
idivl
cld
lret
lret
cltd
or
pop
cmp
fs
dec
cmp
outsl
xchg
push
pop
push
pop
clc
mov
xor
arpl
sub
ja
add
loop
xor
imul
jl
test
ret
xchg
pop
pop
adc
sub
scas
in
dec
jno
sahf
dec
aam
sbb
mov
ret
pop
dec
jmp
pop
repz
cmp
push
push
xor
pop
fldl2e
in
stc
fsubrl
stc
lods
cmp
addr16
push
mov
outsl
ds
pop
inc
add
jae
add
adc
mov
mov
mov
dec
into
mov
mov
mov
cmp
test
jp
addb
xchg
arpl
insl
pop
mov
dec
and
stos
xchg
mov
mov
inc
push
ficomps
pop
shrl
xchg
clc
test
mov
leave
sbb
shlb
aas
sarl
push
push
push
inc
jmp
push
or
mov
sub
mov
jo
cmp
mov
popf
or
int
icebp
mov
sarb
xchg
or
pop
inc
orb
das
scas
inc
call
adc
insl
popa
pop
cmpsl
inc
je
sbb
dec
and
gs
addr16
ja
and
fcomps
mov
add
sub
or
jae
scas
cmpsl
outsb
inc
outsb
jb
push
add
cli
mov
pop
sbb
sbb
popf
scas
sbb
bound
out
test
pop
xchg
sub
and
push
jp
call
mov
nop
add
push
imul
add
pop
fidivrl
ror
ja
xchg
mov
or
mov
pusha
jb
mov
sub
icebp
aad
cmpsb
adc
test
mov
cmp
imul
sub
cmp
cmp
ja
cmp
inc
es
pop
lods
hlt
iret
mov
seto
jge
das
loop
inc
cmp
sub
push
mov
dec
mov
inc
cld
adc
inc
into
jmp
stos
ds
lods
stos
jmp
pop
lods
jge
sub
daa
int
repnz
dec
mov
lea
xchg
fnsave
fsubrs
lret
mov
stos
nop
movlps
inc
mov
xchg
xchg
mov
adc
xlat
outsl
pop
or
test
loop
inc
mov
add
xchg
inc
xor
mov
ds
xchg
mov
push
add
push
shlb
xor
into
mov
hlt
adc
or
in
fldt
into
mov
icebp
cli
sbb
int
add
leave
mov
ss
mov
movsb
ficoms
pinsrw
push
aam
bound
cmpl
pop
or
mov
lret
clc
lahf
sbb
les
mov
cmp
mov
loope
xchg
sarb
jle
sbb
xchg
aaa
xchg
ss
sti
ljmp
mov
adc
sbb
lret
out
push
stos
fxch
hlt
adc
test
inc
aaa
inc
lds
lret
push
sub
int
mov
lods
push
scas
cwtl
mov
mov
xor
idivl
xchg
add
or
xchg
xchg
and
dec
mov
cltd
and
cli
fbstp
mov
pop
add
fbstp
adc
xor
cmp
and
repnz
test
push
shll
es
push
add
inc
pop
pusha
movsl
vmread
lret
mov
mov
ja
lahf
lahf
bsf
xor
mov
lock
jmp
lret
leave
test
add
cmp
stc
hlt
lret
sbb
jg
cmp
mov
or
inc
pop
inc
jns
cli
xchg
and
dec
adc
test
into
lods
push
mov
daa
bound
push
pop
jp
mov
call
mov
pop
pusha
cmp
imul
and
sarl
aas
shlb
mov
inc
cwtl
jmp
cltd
lods
jmp
pop
inc
repz
lcall
lahf
dec
push
ljmp
mov
xchg
hlt
pop
out
inc
aad
repz
add
lcall
fdivl
addr16
daa
test
mov
faddl
and
lock
into
add
inc
mov
ss
xor
dec
int3
es
push
jmp
xchg
push
lret
pop
sub
shrl
pushf
cmp
outsb
push
outsb
dec
mov
rcl
push
cmc
push
adc
cmpsl
lcall
test
xchg
xchg
movsl
fsubl
jb
ret
adcb
jge
jne
jno
xchg
and
jne
mov
or
cmc
cmp
sub
shr
add
lret
lods
mov
je
scas
notl
shrb
roll
xor
mov
pop
ret
fstpt
sbb
ud0
sbb
movsb
push
mov
sbb
mov
sub
push
lcall
jge
cmp
pop
dec
xchg
and
icebp
fsts
rorb
bound
cmp
cmc
sti
dec
xchg
sub
pop
jo
repz
xchg
aam
sub
inc
fsubrp
inc
inc
push
iret
jns
push
dec
outsl
mov
xlat
les
jae
rcl
inc
rolb
lods
xchg
mov
adc
cwtl
ds
jl
pop
fbld
shlb
pusha
mov
cmc
in
gs
movsb
pop
movsb
pop
pop
xor
lods
lcall
rclb
repz
add
or
imul
inc
adc
jae
rorb
stc
sbb
imull
push
push
cmp
outsl
movsl
jae
test
jo
cmpsb
fnstsw
sti
xor
scas
lods
pop
notl
inc
rcr
lea
sub
ret
cmp
xor
xchg
movsb
mov
fisubrl
lea
jb
std
repz
inc
adc
aaa
jbe
mov
fbld
mov
shr
mov
and
lcall
push
js
and
pop
imul
mov
xchg
pushf
fucomp
aad
sub
push
scas
cltd
aam
and
and
fstl
pushf
mov
cmp
xchg
out
inc
es
jbe
xchg
or
cmp
xchg
arpl
add
stos
adc
mov
inc
xchg
in
xor
mov
pop
shl
push
push
aaa
mov
add
fisubrl
sarl
push
mov
xchg
lret
ret
cmc
es
inc
fs
and
stc
fldt
push
and
xchg
pusha
nop
add
inc
push
or
stos
xchg
stos
sub
mov
mov
outsl
sub
cli
xchg
ret
sub
adc
lret
and
rcrb
xchg
or
sbb
nop
jo
adc
imul
sub
adc
add
test
roll
add
xor
push
inc
mov
out
cmpsl
popa
and
repz
notl
hlt
push
xor
hlt
mov
dec
and
and
aas
fs
repnz
fsubp
xor
in
cmc
mov
push
mul
cmp
in
lods
mov
ret
data16
push
jge
shlb
and
cmpsb
sub
adc
stos
cltd
sub
in
andl
fld
mov
gs
int
in
mov
pop
adc
jns
add
push
xchg
mov
pop
inc
adc
pop
and
divps
push
and
lret
lods
lret
pusha
lea
fcmovnb
dec
mov
ret
cs
xchg
repnz
jl
hlt
mov
adc
rcll
add
cmpsb
xlat
scas
mov
or
je
ja
hlt
ret
mov
push
push
or
jecxz
xchg
push
add
adc
mov
cltd
inc
and
mov
xor
jge
and
addr16
js
mov
pop
adc
pop
repnz
loopne
loop
xchg
pop
sub
mov
jae
and
ret
push
adc
cmpb
imul
leave
mov
sbb
add
xchg
dec
xlat
adc
xor
xchg
outsl
adc
inc
push
sbb
outsb
sub
pop
clc
or
sub
cwtl
outsb
mov
dec
out
add
outsb
sub
bound
sbb
stos
ljmp
aas
xchg
popf
mov
in
sub
stc
xchg
mov
push
lds
cltd
call
imul
sti
pop
sbb
sub
pusha
sbb
and
je
cmp
jmp
loope
xchg
cmp
mov
daa
insb
sti
aas
cmp
add
mov
lcall
lods
int
inc
xor
andb
cmp
je
jge
ljmp
mov
aad
sub
lods
xchg
mov
hlt
test
adcb
xchg
pop
cltd
and
xor
and
xchg
mov
mov
inc
cs
lods
enter
imull
idiv
in
mov
jg
lahf
sub
pop
mov
xchg
cmpb
hlt
jo
push
push
jmp
dec
movsb
xor
cmc
xchg
loop
fdivr
or
je
mov
outsl
xor
js
and
jg
jae
into
stos
test
lds
les
mov
mov
adc
cmpl
inc
cmc
test
sbb
stos
push
sub
pop
or
cltd
imul
xchg
push
ret
add
and
push
nop
movsl
sub
pop
xchg
mov
das
pop
push
popa
sbb
jp
gs
rcll
lahf
sbb
pop
sahf
mov
or
sbb
add
or
sbb
lea
lahf
jecxz
push
test
sbb
xchg
neg
icebp
sub
int3
iret
adc
fcmovb
ljmp
xchg
adc
dec
sbb
call
arpl
cmp
xchg
push
pop
je
jl
das
dec
movsb
mov
test
and
fs
pusha
pushw
cmc
test
push
cwtl
or
popa
in
push
in
jno
or
mov
xchg
and
xchg
adc
jp
sti
leave
repnz
out
cmp
add
push
mov
ljmp
adc
cmp
int3
mov
adc
clc
pop
mov
mov
test
repz
clc
rorl
cmc
aas
dec
int3
pop
push
imul
xchg
test
adc
out
pop
ret
add
mov
je
mov
adc
xor
dec
cmc
xchg
mov
adc
fs
push
mov
fimull
les
std
cld
sahf
xor
or
push
push
cli
jge
in
das
jp
mov
stos
jg
mov
sti
lods
mov
mov
and
pop
mov
icebp
adc
inc
pop
add
scas
jmp
outsl
in
mov
mov
clc
int3
mov
and
jmp
jb
or
sub
lock
std
int3
xchg
and
mov
and
and
xor
scas
mov
push
imul
add
bound
adc
pop
loope
pop
mov
mov
sbb
arpl
stos
inc
aam
xor
xchg
out
aas
fcmovne
xor
jae
test
mov
cmp
dec
test
insl
cmc
aas
cld
enter
inc
pop
je
int
inc
movsl
xchg
ljmp
fstpt
cli
out
sbb
jbe
or
add
and
test
ret
xchg
push
hlt
push
cmp
jb
outsb
in
int3
mov
pop
add
jle
neg
ja
out
lock
cmp
scas
add
add
in
repnz
pop
dec
mov
or
les
jg
mov
cmc
mov
and
and
ss
xchg
repz
xchg
aam
punpcklbw
cmpsl
fdivrs
cmp
push
xchg
repnz
jg
mov
push
insl
out
fstpl
mov
mov
popf
pop
nop
call
and
lock
loop
sti
imul
inc
aam
pop
add
mov
push
into
mov
cmp
out
dec
cmp
in
shl
test
out
les
sub
and
mov
lods
pop
xlat
hlt
dec
pop
inc
ret
mov
cs
fstps
push
mov
fnstsw
fwait
xor
add
mov
cli
pop
test
push
jns
pop
in
decb
pushf
jae
mov
mov
nop
inc
test
push
xchg
rcrb
push
fbstp
mov
xor
idivl
fldenv
sbb
add
push
pushf
adc
aaa
xchg
mov
mov
push
dec
cmp
jns
divb
std
jae
insb
out
mov
inc
shlb
std
outsb
mov
sahf
jne
xchg
inc
mov
ljmp
xchg
cmpsb
addb
cmp
xchg
push
test
dec
push
lds
iret
inc
mov
in
movsl
outsl
add
in
scas
fists
test
mov
in
xor
cmpsl
repz
sahf
cmp
lcall
add
jl
xor
add
int
popf
out
push
ljmp
pop
and
test
ljmp
jo,pn
stos
jns
jns
clc
add
mov
fbstp
push
or
push
int
mov
rcl
or
push
mov
scas
aaa
icebp
xchg
push
scas
mov
push
ja
and
pushf
push
lahf
add
lea
xor
mov
sub
incl
outsb
add
xchg
adc
push
gs
adc
ret
mov
jmp
jne
inc
push
lods
cmovge
rorb
pushf
xchg
dec
jmp
cld
cmp
es
divb
sub
dec
xor
outsl
clc
ljmp
int3
xor
mov
jbe
rcl
cmpl
add
cmp
movsb
bound
outsl
jp
inc
cmp
push
test
cltd
icebp
ja
xor
mov
fstpl
mull
jmp
xchg
fsts
imul
mov
sahf
ds
repz
je
movsl
sti
loopne
xchg
repnz
insb
out
mov
mov
ljmp
pop
ds
fidivl
mov
in
iret
add
das
pop
mov
js
icebp
daa
mov
in
add
test
bound
divb
sub
sbb
pop
out
stos
add
mov
sub
mov
imul
push
arpl
sub
popf
int
jge
or
cwtl
pop
xor
sbb
testl
xchg
pop
jbe
sti
in
test
sbb
ds
jno
les
mov
scas
stc
ss
add
sbb
xor
mov
rcll
fmuls
jnp
roll
push
jl
jg
xlat
sub
mov
out
adc
loopne
dec
xor
jne
dec
cmp
mov
sbb
mov
mov
mov
inc
fmull
test
ds
jge
repz
mov
push
sub
pop
jne
pop
push
jo
adc
mov
xor
insb
push
test
mov
mov
rclb
fidivrs
inc
pusha
fmulp
jo
lahf
sbb
fwait
std
sahf
insb
inc
dec
jne
mov
jns
xor
mov
mov
pop
add
xchg
popf
dec
lcall
jo,pn
inc
mov
sub
hlt
add
jno
sbb
push
outsb
jns
ljmp
outsl
mov
insb
cwtl
xor
fwait
or
popf
cli
xchg
push
add
mov
rcrl
xchg
mov
mov
and
push
mov
ret
cmpsb
jbe
push
sub
rcrl
xor
rcll
loop
jnp
je
test
push
push
test
cmp
out
loopne
cmpsl
and
pop
daa
xor
jmp
adc
out
xchg
mov
pop
add
cwtl
and
or
mov
or
inc
push
test
xchg
inc
jo
fsubrl
or
xchg
and
xchg
loopne
dec
lock
mov
stc
icebp
in
cmpsb
aad
ret
jge
pop
inc
hlt
xor
lods
out
ja
es
movsl
cmpsb
cmp
out
cmp
in
arpl
lock
aas
pusha
cmp
lds
push
aad
sbb
mov
jg
ret
enter
test
adc
cmp
push
cmp
fldz
adc
rol
ljmp
sub
in
call
push
adc
push
rcr
dec
or
cwtl
xor
fidivrs
dec
test
mov
jo
mov
cmp
testl
nop
scas
fisttps
mov
push
jns
mov
bound
lret
sar
cmpsl
js
lret
movsb
cmp
xchg
lcall
lea
in
shlb
cmp
cli
mov
inc
dec
and
sub
add
inc
addr16
lcall
stc
movsl
mov
or
inc
int3
push
cmp
push
mov
inc
push
insl
outsl
mov
or
pushl
push
popf
test
mov
aas
dec
push
outsb
icebp
minps
inc
ds
ficompl
popa
lds
clc
pop
out
xor
js
fbld
aam
adc
dec
jmp
adc
aad
sbb
ljmp
and
or
cld
jg
movsb
aam
ljmp
pusha
push
xor
divb
loop
pop
cmp
hlt
dec
push
scas
pop
push
pop
jmp
push
sar
dec
pop
jmp
add
mov
stos
jge
aad
cmc
fisubs
sub
cld
das
aad
push
lea
stos
sarb
shlb
in
not
adc
push
insb
xor
in
cmpsl
jns
dec
lods
flds
sub
ja
pop
mov
lock
int3
inc
lock
popa
mov
aas
and
adc
ret
out
fstps
jg
xchg
retw
jae
mov
xchg
sahf
lods
inc
push
sub
ja
arpl
and
inc
xchg
pop
dec
insw
movsl
hlt
adc
jmp
xchg
jnp
test
inc
xlat
cmpsb
inc
jp
test
daa
jae
lock
sub
or
xchg
sub
cld
and
outsl
ds
adc
cmp
lcall
and
int
shll
sbb
not
push
orl
imul
cld
mov
lock
test
cmpsl
aad
pop
xchg
loop
cltd
imul
loop
push
mov
push
and
leave
stos
das
fwait
pop
aad
mov
leave
jmp
cli
lret
pop
inc
fcomps
inc
pushf
es
and
sub
fucom
mov
add
repnz
aaa
and
hlt
push
cli
test
ret
mov
pop
mov
daa
cs
sbb
pop
ds
in
fwait
inc
and
push
jl
ret
out
xchg
jbe
cmc
add
lea
mov
jge
and
bound
clc
dec
cmpsl
aaa
push
lods
lcall
xchg
shll
sub
mov
insl
into
out
repnz
push
jmp
cmp
test
xchg
mov
sbb
and
popf
push
ret
fiaddl
call
dec
cli
sti
sbb
adc
mov
andb
repnz
mov
lock
fdivs
lea
mov
adc
xor
adc
dec
mov
jle
testl
sbb
ret
pop
mov
add
int
call
in
jno
aad
mov
xchg
cmp
ljmp
xchg
arpl
rclb
sbb
and
mov
test
and
lods
int3
sbb
cld
mov
leave
or
lock
lds
rcrb
mov
xor
mov
iret
subb
pop
xchg
and
mov
pop
inc
out
mov
fdivrs
xchg
aas
repz
dec
push
imul
test
mov
les
sbb
or
xchg
scas
movl
and
xchg
popa
sub
call
out
stos
nop
adc
mov
pop
scas
rcr
ret
cli
dec
pop
jmp
or
adc
push
hlt
sbb
test
test
mov
int
mov
cmp
add
aas
mov
mov
dec
dec
enter
and
clc
push
test
fldenv
aaa
xchg
addl
cmp
and
xor
mov
popa
lods
push
pop
dec
jecxz
adc
and
jle
mov
jbe
mov
cmp
push
and
inc
out
xchg
jg
adc
pushf
fdivrp
push
push
xchg
ljmp
addr16
repnz
mov
jg
out
add
loopne
sbb
jmp
jecxz
js
shlb
dec
inc
jmp
add
xlat
syscall
out
in
movl
out
lcall
lret
int3
data16
dec
add
loop
mov
stos
in
inc
test
push
cmpsb
fidivrs
icebp
subb
mov
mov
mov
or
mov
aam
out
and
and
mov
mov
inc
test
loop
out
mov
mov
int
push
sub
orl
pop
inc
mov
int3
int3
mov
mov
mov
adc
js
inc
cmp
inc
push
fwait
adc
adc
mov
ja
leave
imul
sbb
loope
inc
lds
in
jae
sub
cmovl
lret
sahf
idivb
imul
cld
cli
push
mov
sub
sbb
arpl
lcall
jle
sti
ds
or
fiadds
cs
fnsave
loopne
push
jne
xor
fwait
mov
jl
outsl
adc
sahf
push
outsb
gs
int
sub
and
out
jl
fxch
inc
inc
or
xor
movsb
jge
aad
push
jmp
ljmp
imulb
clc
cli
mov
pop
cltd
mov
dec
sbb
xlat
jo
int3
inc
cmp
in
mov
hlt
sub
aaa
mov
inc
push
push
inc
or
es
lea
mov
and
lea
fidivrl
outsl
nop
shrl
and
add
dec
out
lds
cmc
sti
stos
push
sub
repz
jns
xchg
fwait
repz
xor
loope
push
dec
aad
lret
leave
jp
call
adc
imul
out
xchg
test
icebp
jnp
outsl
inc
insb
movnti
mov
ss
mov
jp
ja
movsl
xlat
pop
and
xor
fiaddl
mov
loopne
iret
out
mov
pop
mov
xchg
mov
test
iret
cmp
dec
aas
fsubrl
mov
dec
mov
mov
dec
adc
lock
sbb
fisubs
pop
call
cmp
testl
dec
out
xor
pushf
xchg
push
pop
out
pop
repz
dec
std
inc
push
xchg
dec
dec
jns
aas
jg
adc
jp
ljmp
mov
push
jg
cmpsl
leave
repnz
dec
fists
mov
aam
mov
insb
jne
xor
fcoml
loopne
push
push
orl
jns
lahf
jg
push
mov
in
mov
dec
popa
jbe
sub
decb
leave
or
mov
inc
les
fcmovne
pop
inc
mov
outsl
and
addr16
scas
mov
sub
shl
filds
sub
push
je
push
cmp
push
arpl
cmp
insb
outsb
inc
sbb
xor
jnp
xchg
jmp
jmp
lds
mov
pop
push
mov
mov
int3
add
jae
or
ret
jae
and
inc
cmp
inc
push
ret
inc
in
fcoms
lret
scas
mov
enter
stc
sub
ret
cli
jle
mov
and
data16
lds
add
mov
mov
lods
std
pop
stos
mov
les
push
sbb
and
stc
mov
and
daa
aaa
adc
inc
jg
pop
test
push
sub
lret
fsubrl
push
cmc
cld
push
add
mov
push
ficoms
mov
daa
and
fcmove
std
jb
xchg
aad
pop
dec
pushf
lods
dec
sbb
jae
pop
icebp
dec
xchg
mov
clc
xorb
mov
scas
sub
cmp
jbe
loopne
sbb
addl
je
out
cmp
dec
jmp
rolb
in
insl
mov
dec
and
sub
out
push
dec
mov
or
mov
xchg
mov
ds
leave
es
adc
rcl
mov
fwait
or
push
lock
lahf
sbb
sbb
loop
dec
push
jmp
ljmp
fildll
mov
sub
bound
pop
out
mov
or
lds
insl
fdivp
cmp
xchg
xor
xor
xchg
add
into
jo
popf
pushf
in
dec
loop
call
int3
or
push
push
out
fisttpll
mov
push
inc
dec
and
loopne
pop
loop
loopne
mov
xor
xchg
xor
cmp
in
jg
sbb
pop
clc
daa
xchg
push
push
dec
daa
in
mov
sti
inc
cli
mov
sbb
sub
mov
mov
insl
loopne
ret
cmpsb
loopne
mov
filds
add
push
xchg
dec
movsb
mov
and
addr16
push
xlat
sub
nop
test
ljmp
push
outsb
xlat
gs
enter
jo
aas
mov
iret
mov
movsb
cltd
dec
mov
xlat
sbb
mov
subb
jecxz
cmp
or
outsb
dec
add
xchg
lahf
in
insl
insb
scas
enter
adc
and
cmpsl
lock
push
pop
xchg
pop
cmp
adc
shlb
repz
and
pop
sub
pop
lcall
rclb
sub
xlat
dec
test
inc
cmpsl
lret
or
sbb
sub
mov
cmpb
cmp
mov
sub
ret
fadds
fisubs
mov
int3
lea
ss
inc
out
sub
xchg
or
ljmp
out
pop
cmp
sub
and
ja
mulb
xchg
push
mov
orl
nop
es
jb
or
pop
inc
mov
stos
call
mov
out
aas
aas
ljmp
out
mov
in
mov
ror
rolb
mov
pop
push
popf
dec
xlat
lret
test
xchg
ficompl
or
push
stos
pop
fidivs
mov
xlat
or
testb
in
fistpll
je
aas
xchg
andb
dec
sub
inc
test
loopne
or
repnz
jle
cmpsb
xor
int3
jo
jnp
pop
pop
push
mov
pop
rcl
int
stos
inc
push
insb
std
in
lock
sbb
mov
stos
mov
adc
xchg
inc
aaa
outsl
push
sub
out
aam
mov
mov
sti
mov
mov
daa
xchg
mov
stos
pop
inc
mov
jg
les
pop
cli
call
lods
arpl
pop
mulb
sub
out
and
adc
pop
mov
xor
shll
scas
std
add
dec
hlt
les
xor
stos
mov
cwtl
scas
addr16
pop
ja
out
fldcw
cld
xor
jg
icebp
aaa
movsl
je
lcall
movsl
test
out
pop
inc
mov
and
fcomi
xchg
push
int
xchg
cwtl
dec
imul
out
fldl2e
shrb
scas
jbe
mov
jo
cmpsb
aas
sub
xchg
jp
mov
xor
cltd
dec
jae
in
jns
xchg
xor
mov
scas
sbb
ss
test
idivl
sub
xor
sbb
shl
or
iret
mov
and
mov
loope
sti
shll
in
aas
lahf
dec
or
shl
add
inc
outsb
fs
ja
push
popa
cmp
mov
daa
inc
popa
sub
mov
sub
push
sbb
xchg
mov
jp
les
adc
andl
movntq
orl
cmc
push
icebp
ds
in
sub
out
pop
fbld
push
add
push
out
stos
xchg
pushf
or
cmp
adc
add
in
addb
daa
mov
fcmovb
out
ljmp
jle
xor
push
sbb
jae
fdivrp
xlat
out
mov
in
add
push
mov
mov
add
adc
or
push
mov
shl
jge
push
out
ret
jbe
cwtl
push
ffree
jno
int
fdivs
or
popf
nop
in
mov
add
out
es
sbb
mov
mov
xor
xlat
lret
mov
push
adc
out
cli
mov
jae
insb
jo
sub
fwait
cli
arpl
scas
jo
filds
sub
leave
pop
dec
mov
shll
xor
and
popf
ljmp
enter
shrb
push
mov
push
dec
inc
ljmp
xchg
pop
into
push
sub
scas
int3
or
jo
lods
sub
or
vmovups
dec
pushf
bound
jge
push
inc
ja
xchg
out
je
mov
sub
sbb
push
and
xor
push
jae
adc
sub
or
fists
push
aad
cmp
or
dec
adcb
xor
jns
jnp
les
push
aas
sub
cmp
mov
jmp
repz
sub
push
les
or
dec
push
repz
sbbl
push
push
push
sbbl
stos
mov
inc
test
add
pop
aad
and
adc
push
daa
push
inc
popf
add
sbb
or
neg
fwait
add
out
mov
sub
subb
add
rcrb
mov
test
adcl
cmc
addr16
clc
and
jne
fsubs
cmp
push
mov
test
movsl
push
mov
mov
outsl
aaa
mov
fistl
outsb
lds
mov
subl
pop
mov
push
shlb
int
xchg
or
paddb
mov
gs
in
lods
fisttps
or
push
mov
cmp
fcoml
pop
inc
in
mov
outsb
in
les
and
push
sbb
loope
inc
sti
aam
mov
or
into
xor
out
stc
cli
test
test
shr
add
xor
push
icebp
inc
xor
mov
int3
ja
mov
out
mov
shrl
sbb
inc
jmp
jno
pop
repnz
mov
lds
jge
ret
mov
cwtl
sub
adc
mov
cmp
scas
and
mov
cmpsl
ljmp
daa
sub
pusha
dec
movsb
push
insb
fwait
stos
adc
push
fucomip
mov
test
dec
push
or
daa
mov
and
jb
or
les
xor
les
and
push
daa
addl
or
jle
ret
xchg
adc
cltd
in
leave
das
leave
roll
jmp
xor
jcxz
test
adc
push
and
jmp
das
mov
jl
fidivrs
jae
push
jl
filds
pop
mov
in
xchg
pop
int
xor
mov
cmpb
fbstp
sbb
jbe
aas
inc
inc
sub
pop
fistpll
in
js
mov
cmp
or
push
movl
push
ja
push
mov
cmp
sbb
mov
dec
or
jle
jmp
add
dec
ret
iret
bound
outsl
out
into
loope
or
sub
add
jno
stos
ret
call
call
add
sub
sbb
xchg
push
loope
in
adc
outsl
test
into
jnp
pop
inc
int
fdiv
jecxz
xchg
mov
jecxz
inc
cmc
clc
sahf
arpl
mov
cmp
test
xchg
gs
jnp
adc
sti
or
xchg
out
push
imul
sti
jp
sbb
fsubl
imul
fldcw
cmc
and
out
scas
sub
jl
sarb
cmp
std
mov
inc
in
aad
data16
lods
inc
push
in
inc
jo
dec
jmp
ss
or
mov
jbe
ret
push
jg
or
outsl
xor
add
jns
nop
dec
sub
dec
cmp
stos
movsb
dec
rorb
lcall
mov
popa
xchg
fnsave
cs
sbb
nop
xorl
lret
outsl
mov
dec
dec
imul
jae
popf
ret
inc
ljmp
mov
popa
testb
out
sub
push
minps
mov
xor
rcll
xlat
push
repnz
xchg
lock
and
in
fbld
and
rorl
shrl
push
push
and
inc
mov
aaa
fldcw
shl
and
adc
loop
mov
sbb
js
hlt
mov
lret
dec
lds
dec
mov
scas
sbbb
adc
std
adc
mov
push
sub
and
jecxz
push
sub
xchg
clc
add
hlt
mov
stc
cs
cmp
add
test
out
lahf
xchg
sub
pop
cs
insl
pusha
inc
cmp
test
scas
hlt
or
ss
cmc
xor
mov
sbb
and
jns
in
add
sub
cmp
add
or
in
stos
jo
movsl
enter
inc
adcb
mov
lahf
and
and
cmp
push
push
outsb
cmp
inc
or
xor
divl
scas
sub
sub
cli
sub
mov
jb
scas
push
jle
lods
test
dec
repnz
xor
lret
pop
sbb
icebp
cmp
mov
sub
sub
cmp
fsubr
push
dec
adc
mov
mov
or
mov
inc
mov
and
stc
mov
ret
mov
lods
push
call
xchg
mov
mov
lods
jmp
mov
xor
clc
jo
mov
aaa
mov
jle
and
repz
xlat
xrelease
sub
pop
insb
aas
out
sbb
xlat
pop
in
loop
stc
push
fbld
jb
shlb
or
mov
notl
cwtl
imul
jmp
mov
fdivs
and
imul
sub
repnz
jne
adc
dec
lds
jp
popa
add
sub
inc
cs
sbb
ljmp
dec
cmp
out
and
xor
add
scas
add
jno
jnp
push
mov
mov
stos
incl
sub
xchg
pop
jle
aas
add
adc
sub
xchg
sub
ja
jns
mov
inc
or
pop
nop
push
pop
sub
jnp
fiadds
movq
sbb
idivb
pushl
jbe
subb
mov
sub
insl
sahf
and
sbb
aam
or
mov
jecxz
sbb
lahf
cmp
popa
pushl
jb
adc
inc
fs
imul
bound
mov
fimull
fbstp
jb
mov
adc
xchg
inc
stc
pusha
std
jns
fisubl
lret
into
sti
lret
je
outsb
out
inc
sbbl
jle
jg
test
cli
inc
pop
xchg
lcall
and
stos
dec
sub
pop
sbb
cmpsb
cmpsb
out
mov
inc
cwtl
and
xor
rolb
aam
xchg
bound
sti
push
dec
imul
inc
lahf
stos
ljmp
ljmp
mov
xchg
sub
lds
inc
ds
xorl
dec
scas
movups
adc
sub
mov
pusha
into
out
loop
push
add
mov
dec
inc
adc
cwtl
pop
ret
arpl
xor
push
out
xor
xlat
lret
jecxz
icebp
xchg
jmp
or
sub
mov
loope
xor
in
add
aad
jle
or
mov
pop
and
pop
pusha
outsl
es
push
xor
xchg
aad
xor
xchg
outsl
xchg
add
dec
cmp
jp
fcomps
pop
int
mov
dec
adc
cs
rol
hlt
mov
es
ljmp
cltd
test
mov
sbbl
cwtl
push
repnz
movsb
jg
lret
mov
rcll
aam
xor
cmp
les
or
jnp
ret
call
sbbl
in
push
jb
xor
in
cltd
mov
or
and
jg
xor
pushf
xor
push
rcll
xor
addb
fsts
cmpsl
mov
pop
jno
test
dec
dec
xchg
xchg
lcall
fs
cmp
mov
lret
xorl
cld
sbb
or
lahf
pop
popf
in
xchg
loopne
mov
mov
push
in
jns
sub
shrb
sti
adc
xor
fucomi
push
pop
mov
pop
jmp
mov
adc
and
jp
sub
insb
inc
and
sahf
fxsave
add
jnp
add
xlat
pop
out
jg
call
lahf
and
enter
mov
lds
adc
jge
xor
mov
xchg
lods
mov
push
les
stos
mov
or
lds
jb
gs
rdpmc
inc
jo
arpl
adc
movsb
shl
arpl
mov
xchg
adc
lcall
ret
jmp
add
in
xchg
fstpt
sub
shrb
into
push
xchg
loopne
das
sbb
add
cli
lcall
xchg
xchg
out
inc
bound
ret
jnp
push
lods
lret
jne
out
lock
roll
add
loopne
and
or
add
cwtl
stos
xor
test
popf
xor
cmp
add
xor
xchg
jge
adc
pop
iret
ret
inc
sbb
aad
jl
cmovge
mov
test
int3
ljmp
xlat
jmp
ja
inc
and
adcl
mov
xor
cmpsl
and
add
xor
orb
xchg
mov
pop
pushf
fcompl
faddl
adcb
pop
and
out
push
push
pop
test
xchg
or
xchg
idivb
mov
test
xor
dec
sub
lods
in
fbld
ret
int3
dec
shll
mov
ljmp
les
and
or
stc
mov
into
add
jge
iret
inc
mov
mov
in
cmpsl
movsl
add
mov
push
cmpsb
xor
sub
stos
sub
inc
xchg
cmp
arpl
pop
bound
inc
and
rcll
pop
ret
adc
sbb
cmp
insb
jmp
mov
stc
or
fadds
inc
pop
mov
mov
pop
cmp
int3
xor
les
nop
aas
orb
pop
add
dec
aam
xor
dec
dec
push
cmp
fsubp
adc
inc
xor
xchg
xor
jbe
mov
mov
ja
out
jge
push
mov
or
std
sahf
pusha
and
add
jle
and
mov
dec
xor
outsb
push
in
lcall
je
add
xchg
push
lahf
cmpsb
push
daa
negb
inc
popa
sbb
jae
ljmp
or
push
imul
loope
mov
bound
filds
gs
addr16
inc
out
sbb
jp
add
jb
nop
mov
mov
mov
mov
add
and
aam
imul
jg
imul
clc
xchg
xchg
ror
out
cltd
inc
lahf
jmp
adc
sbb
ss
cmp
add
inc
stos
adc
test
test
movsb
aaa
decl
sti
jle
mov
pushf
cmp
xlat
fwait
ret
sub
xchg
jno
iret
xlat
mov
imul
insb
mov
cmpl
xchg
cmp
mov
popf
dec
mov
icebp
das
adc
stos
mov
or
xchg
and
xchg
mov
popf
mov
sti
push
mov
xor
fwait
jmp
sbb
jmp
cmc
xchg
pop
scas
xor
and
xor
xor
pop
shlb
and
xchg
sbb
cmp
xchg
or
mov
and
and
mov
cmc
mov
xchg
cmp
mov
xor
insl
jl
hlt
sbb
aas
add
sahf
sbb
mov
imul
mov
imul
xchg
cmp
lret
in
push
cmpsb
adc
int3
cmp
mov
mov
add
scas
mov
rclb
lfs
adc
xorb
jno
in
aad
xor
scas
xor
inc
adcl
xchg
cmp
outsl
add
push
xchg
shl
jg
inc
cs
mov
jl
ja
lods
shl
adc
stos
stos
fldenv
in
xchg
scas
rcll
cmpsb
mov
leave
pusha
push
mov
test
sbb
mov
push
scas
lds
scas
lock
int3
sbb
push
pop
call
cld
jno
cmp
popa
adc
loop
into
inc
cmp
adc
jp
xor
fst
xor
data16
mov
mov
push
in
jmp
inc
loop
mov
call
jg
ficompl
lcall
jo
hlt
lods
outsl
mov
sub
dec
sub
sbb
xchg
test
jnp
inc
punpcklwd
hlt
push
js
push
mov
scas
push
ljmp
popf
gs
jle
push
mov
dec
adc
add
and
jp
mov
or
scas
int
jbe
repnz
xor
movsb
cmp
mov
add
cwtl
jbe
call
pop
loop
pop
lret
sub
cld
xor
outsb
mov
out
dec
jnp
push
faddp
xor
clc
cmp
ss
mov
mov
inc
sbb
mov
pop
icebp
nop
xchg
rcrb
sahf
aad
adc
das
xchg
sbb
scas
push
push
inc
wrmsr
push
mov
rcrl
xchg
shr
jo
mov
pop
cmp
mov
test
mov
loopne
aam
stos
push
mov
sbb
ds
jb
xor
jg
loop
out
mov
push
pop
xchg
adc
cmc
in
mov
loop
pop
sti
pushl
out
pop
jnp
inc
das
jno
int
dec
nop
jecxz
fwait
dec
cmp
in
ja
pop
test
fsts
or
sub
sbbl
test
cmp
sti
mov
or
dec
jne
adc
inc
add
test
bound
add
xchg
lret
dec
add
or
xor
xchg
xor
cmc
push
loop
loopne
sarb
mov
and
aas
rorl
fxch
and
popa
jg
call
xchg
mov
mov
sub
add
cmp
imul
sahf
in
lea
jle
clc
subb
sahf
jge
adcl
push
inc
or
push
es
hlt
cld
mov
outsl
not
aam
out
pop
out
jnp
mov
out
pop
pop
mov
or
mov
test
ret
rclb
sbb
sub
jp
out
nop
add
enter
mov
scas
fs
iret
or
adc
or
fldcw
sub
jne
lods
lcall
mov
sbb
rol
push
rorl
stc
mov
int
out
mov
ss
add
xchg
add
adc
jmp
in
cmc
dec
loope
out
shll
frstor
int3
flds
outsb
dec
pop
inc
adc
pop
leave
call
inc
test
cltd
sbb
jne
stos
ficoml
call
loope
insb
add
fwait
mov
inc
fcoml
dec
inc
jb
adc
sub
xchg
add
xor
subb
cld
bound
int
in
cmp
insb
jmp
push
mov
xchg
push
pop
adc
xchg
mov
fs
mov
xor
lds
leave
xor
cld
pop
xor
sub
sub
rcrl
mov
adc
popf
and
jge
mov
add
jmp
dec
and
dec
add
out
cmp
dec
xor
cmp
sbb
push
das
push
inc
and
aaa
sbb
sbb
lret
jp
inc
xor
push
push
and
push
mov
in
hlt
sbb
jno,pn
push
inc
adc
aas
movsb
add
bndstx
xor
xchg
gs
mov
mov
cmpsb
mov
push
sub
je
aas
fisttps
call
cmp
in
and
xchg
push
testl
es
mov
stos
imull
dec
adc
movsl
in
sub
lret
sahf
loopne
add
push
jmp
cmp
mov
xchg
fiaddl
inc
lea
setle
xor
or
data16
and
dec
fxch
dec
pop
aas
test
mov
dec
add
xor
fcos
mov
mov
cmc
push
lahf
imul
cmp
stos
and
ret
fucomi
arpl
cmp
dec
adc
sub
add
out
test
sub
out
shll
jl
stos
mov
xchg
sti
cld
jb
jg
ljmp
xor
pushf
jb
jge
add
pushl
inc
push
cmp
dec
lods
addr16
popf
out
inc
and
push
xchg
adc
dec
test
jg
adc
in
push
and
pop
dec
cmp
vmwrite
and
push
push
cmp
and
xchg
lea
std
shl
lahf
rorb
add
lea
pop
xor
xchg
pop
push
pop
ss
sbb
sub
or
iret
pop
xlat
xor
xchg
fwait
loope
add
xchg
movsb
sbb
inc
pop
das
xchg
add
dec
sbb
imulb
jb
out
adc
jge
jmp
orb
or
mov
imul
maskmovq
idivl
cli
clc
jbe
pushf
mov
jbe
pop
push
stos
mov
mov
dec
dec
mov
pop
insb
mov
les
movsb
add
lcall
mov
push
inc
cmp
push
data16
pop
shrl
push
xlat
and
scas
pop
dec
inc
cmpsl
decl
cmc
divl
dec
jg
inc
mov
in
bound
in
dec
jle
push
push
cli
or
jecxz
sub
lahf
or
iret
add
sbb
adc
dec
idivl
popa
add
jle
mov
xchg
add
xchg
and
mov
mov
data16
cmp
adc
inc
sbb
adc
pop
dec
or
cld
test
dec
jge
jbe
fisttpll
adc
stos
sti
mov
cmp
and
push
bound
push
pop
roll
test
aam
adc
push
and
in
push
js
aad
jae
sti
jns
jnp
cwtl
mov
fdiv
cmc
pop
das
sub
loopne
sti
cmp
data16
or
and
loop
ret
pop
aas
faddp
mov
mov
push
jle
dec
sbb
fwait
inc
mov
push
call
arpl
inc
test
inc
and
mov
lret
jns
push
jl
outsl
inc
jl
cmp
mov
pop
frstor
pusha
dec
jne
push
cmp
dec
ja
cmp
nop
std
mov
mov
mov
xor
xchg
mov
clc
jns
jo
jmp
and
dec
test
mov
popa
fisubs
lret
cld
pop
or
aaa
lock
sbb
or
jnp
cmp
cmp
dec
pop
ficomps
push
aam
loopne
or
jb
test
xchg
out
mov
mov
mov
push
lock
pop
rcll
cmpsl
jp
ds
and
inc
movsl
fisubs
call
fisubrl
push
fnstcw
cmpl
aam
pop
pop
scas
and
das
lret
mov
jae
test
mov
aad
call
adc
push
jmp
dec
cmp
repz
cmc
jmp
cwtl
cmp
pusha
inc
loope
pop
pop
pop
cmpsl
dec
in
call
mov
rcrb
aas
xor
inc
pop
mov
push
dec
aad
or
out
push
fcmovu
fs
adc
popa
sub
or
cltd
mov
repz
fs
jb
cmp
rolb
ret
fs
daa
inc
in
add
sub
cmpsl
stos
xchg
pop
in
testl
dec
lods
add
mov
out
inc
dec
push
cltd
sti
mov
inc
mov
jg
push
xorb
pop
pop
loope
data16
fistps
and
push
jno
pop
push
adc
cmp
xchg
add
fiadds
sub
xchg
mov
and
out
repnz
mov
mov
call
mov
icebp
jnp
xchg
sbb
gs
mov
sbb
pop
mov
jle
xor
mov
subb
adc
pop
add
jne
nop
xchg
stos
mov
push
inc
inc
cmp
mov
mov
dec
rcll
gs
js
adc
lods
negb
or
ret
mov
loopne
fadd
mov
aas
imul
jae
adc
fs
xchg
sahf
ret
or
gs
mov
jp
sub
and
pushf
in
jmp
jge
fisubs
mov
insb
mov
mov
cmp
mov
mov
addr16
adc
mov
cmp
inc
sbb
xchg
jbe
in
inc
or
ror
mov
jmp
imul
push
cmp
mov
push
push
cmp
rclb
notl
ret
pop
mov
mov
ficompl
pusha
and
dec
dec
stos
shrl
add
lds
lret
and
sarl
filds
sbb
lahf
push
cmc
andb
fldcw
mov
aaa
mov
inc
ss
imul
daa
mov
sub
or
pop
mov
cwtl
mov
aas
shl
fisttps
jmp
lret
add
and
insb
aam
or
xchg
cmp
sti
icebp
int
cmp
inc
js
add
sbb
pop
je
dec
out
hlt
pop
push
xchg
std
int
andb
outsl
loopne
push
das
push
clc
pop
lcall
dec
clc
push
rcll
cmpsl
jb
and
aas
roll
pushf
aaa
mov
and
xorl
inc
push
push
inc
lea
not
xchg
adc
cmp
adcl
in
jp
nop
pop
push
sbb
in
ja
add
mov
xchg
adc
and
fadd
insl
mov
lea
dec
movsl
jb
xor
std
js
call
test
cs
sub
icebp
add
mov
rcrb
inc
fwait
xor
cmp
push
mov
es
jno
push
test
jg
sub
xchg
sub
std
inc
xor
mov
sarl
push
jmp
loopne
lret
and
subl
mov
jns
rcll
mov
sahf
jb
sahf
mov
jb
pop
dec
sbb
push
ficomps
inc
mov
outsb
movl
jbe
mov
ds
mov
and
sub
cld
outsl
xchg
add
jbe
cmc
in
mov
jo
push
popf
out
add
in
shrl
mov
jo
mov
jmp
mov
mov
mov
roll
push
lock
mov
sti
pushf
and
jae
sbb
xchg
dec
adc
add
mov
push
mov
dec
inc
xchg
and
mov
fdivs
into
in
into
repnz
fbstp
ss
fstpt
out
xor
push
push
push
or
enter
fldl
into
pop
inc
jmp
repz
xchg
push
add
andb
loop
es
shr
push
mov
imul
test
shrb
loope
test
mov
shrl
push
sbb
sub
cmp
mov
cmp
jg
mov
or
jmp
fucomp
adc
dec
cli
jl
out
loopne
imul
mov
leave
sbbb
jmp
push
mov
ds
rorl
mov
mov
lret
imul
cld
mov
pop
lock
xchg
leave
sbb
enter
sbbb
outsl
clc
fidivrs
cltd
faddl
hlt
mov
mov
pushf
inc
icebp
cmp
repnz
insb
rol
and
daa
mov
mov
adc
mov
shlb
out
inc
add
fildll
adc
hlt
adc
repnz
add
add
jo
icebp
inc
mov
pop
pop
sarl
out
mov
dec
or
sbb
inc
dec
mov
aam
and
mov
test
enter
jne
sbb
mov
and
jne
sbb
mov
and
xor
out
xor
inc
cmc
test
jp
mov
pop
rorl
pop
out
push
pop
bound
inc
pop
sub
push
mov
divl
cwtl
add
inc
cmpsb
imul
hlt
stos
mov
stos
push
add
mov
notl
jnp
push
pop
adc
fwait
inc
je
das
mov
sbb
fbstp
pop
jne
fmuls
ret
movsl
out
subb
cmp
fmul
test
int3
mov
push
ljmp
or
fdivl
inc
mov
call
push
inc
decb
cmp
jle
aad
pop
add
xor
and
dec
cmpsb
xlat
inc
cltd
pop
pushf
push
call
call
mov
sarb
mov
cmp
xlat
fcmovb
fmul
jecxz
hlt
or
pop
test
cmpsl
sti
add
jno
push
iret
mov
xchg
xchg
add
or
cld
sub
mov
lret
addr16
cmp
aad
jb
dec
xor
or
daa
pop
xchg
push
pop
add
pop
or
popa
pushf
push
repnz
loop
xchg
in
pmaddwd
push
aas
rcl
fs
loope
jcxz
imul
or
xchg
imul
scas
lret
jns
fsubs
les
das
es
popf
jae
inc
add
sbb
roll
xchg
sti
push
jg
lods
inc
mov
dec
aaa
dec
lcall
in
fmull
je
out
inc
ret
in
nop
daa
push
movsb
or
adc
push
cmc
test
jmp
and
dec
aaa
arpl
test
aad
xchg
pop
and
jbe
jmp
out
dec
push
push
add
mov
aaa
test
movsb
pop
mov
aam
xor
lcall
psubd
and
fwait
xor
or
mov
test
test
add
xor
xorl
ret
xor
imul
xor
ffreep
je
dec
mov
mov
dec
push
mov
lods
shll
cli
scas
push
mov
cli
jne
sbb
dec
dec
dec
and
pop
or
sub
mov
jg
sbb
shll
ljmp
enter
cmpsb
leave
hlt
popa
test
ret
aaa
adc
les
jmp
add
inc
or
inc
fists
ds
into
ficompl
push
ds
into
ret
pop
repz
mov
sbb
fimull
push
inc
aad
cmp
ret
and
push
dec
imulb
add
mov
cmp
out
push
call
jnp
xchg
dec
stos
lea
das
xor
or
mov
clc
jb
andl
mov
add
jmp
jbe
stos
adc
dec
inc
nop
iret
rcl
fwait
adc
push
ficompl
push
test
and
test
push
add
xchg
adc
fsubp
fidivrl
fildll
adc
mov
sbb
notl
nop
out
xchg
push
add
aam
xchg
pop
lds
mov
jge
inc
dec
lock
or
loope
adc
stos
mov
ss
jl
inc
cmp
leave
aam
xor
repz
adc
mov
bound
or
and
push
mov
loopne
cld
sub
iret
sarl
icebp
dec
push
lret
decb
push
js
lds
pushf
add
pop
push
mov
shll
pop
jle
and
mov
mov
adc
out
inc
test
jbe
lock
sub
pop
mov
rcll
xor
fdivs
jl
add
daa
jecxz
icebp
cmp
xchg
mov
rorb
push
sbb
adc
or
push
sbb
mov
fsubr
imul
add
add
das
call
adc
icebp
into
leave
leave
je
and
push
xor
scas
arpl
lods
pop
push
scas
fnsave
sbb
mov
jbe
mov
notb
cmp
int
out
call
adc
mov
outsb
aam
push
out
pop
aaa
inc
push
inc
add
sti
jle
lods
xchg
xchg
test
fs
pop
jnp
movsb
mov
lds
outsl
add
sbb
lahf
and
adc
test
sub
push
clc
jo
scas
pop
addr16
xchg
ljmp
and
adcb
mov
shrb
jnp
cs
inc
loopne
cmp
in
in
aas
lods
jb
enter
dec
push
and
pushf
cmp
jns
pop
in
fcoml
dec
aam
popa
cmp
sbb
inc
pushf
jecxz
insl
mov
xchg
xor
jo
stc
mov
sti
cmp
xchg
jb
enter
cmc
jmp
out
popa
test
psubq
in
push
sub
adc
imul
sub
jo
imul
mov
shll
dec
add
arpl
cmpl
xor
sub
fisubs
xchg
xchg
push
push
mov
loopne
add
scas
lock
mov
sbb
ret
sub
out
inc
and
movsl
daa
outsl
xchg
lret
stos
sub
int3
leave
leave
mov
sub
outsl
cmpsl
mov
jns
lds
ret
push
adc
push
push
jne
jecxz
adc
sti
xor
mov
xor
scas
outsb
or
add
adc
loopne
bound
and
insb
sbb
lret
dec
cs
push
pop
sbb
add
xor
pop
xchg
outsl
outsb
cmp
push
js
std
push
or
cld
adc
or
xor
jp
lods
or
or
fisubrl
xor
jno
cmp
xchg
mov
std
push
xor
leave
cmp
adc
and
adc
test
fwait
popf
mov
es
loope
push
fwait
pop
mov
dec
fcoml
outsb
bound
je
dec
pop
dec
insl
inc
imul
mov
xor
stos
daa
testl
out
ljmp
push
jl
sbb
push
fxch
sub
push
jno
jae
cmp
mov
push
scas
push
gs
popa
and
lock
dec
aam
pushf
ficompl
push
jne
cld
mov
adcl
mov
inc
xchg
push
jae
mov
adc
test
ja
cli
xor
xor
ljmp
call
lods
push
pop
sbb
lods
negl
pop
pop
add
call
push
repnz
shr
rol
dec
mov
cmpb
testl
inc
push
ret
sahf
movsb
leave
sub
fsubl
popf
pop
mov
push
cs
xchg
cmp
pop
inc
xor
jne
jns
sarl
mov
mov
cld
lret
xchg
arpl
push
cmc
inc
into
pop
pop
lods
cli
and
ds
lret
xor
outsb
pop
bswap
dec
in
ss
lret
cld
outsl
fcoms
std
adc
fldl2e
hlt
bound
xor
jmp
xchg
addl
sbb
sub
test
int3
pop
xchg
pop
inc
xchg
loop
cmc
in
arpl
inc
cmpsl
mov
cmp
lods
repnz
jecxz
mov
int
and
gs
test
push
cmp
repz
push
jle
aam
push
mov
and
pop
je
sub
xchg
mov
arpl
and
adc
enter
stc
mov
jae
adc
les
icebp
rorb
adc
sub
mov
pop
mov
cmpsb
outsb
insb
mov
lcall
aam
aam
or
add
sub
iret
imul
adc
jle
outsl
movsb
xor
std
test
into
mov
xchg
data16
int
scas
fcomi
mov
cli
inc
inc
sar
scas
lock
lcall
decb
fistps
jl
aam
pusha
fcmovne
inc
mov
into
adc
movsb
insb
ret
stc
bound
lret
loopne
pop
pop
iret
inc
jmp
mov
adc
mov
pop
int
call
or
jbe
loopne
sbb
das
and
xor
stos
data16
jbe
roll
adc
sahf
cwtl
sbb
aad
divl
or
pop
inc
enter
popa
mov
iret
out
cmp
aam
lcall
repz
mov
push
divb
sub
mov
xchg
pop
gs
push
test
icebp
sbb
icebp
inc
sti
and
int3
pop
xor
mov
int
in
jmp
add
push
push
mov
dec
in
cmp
and
mov
mov
pop
outsb
rcrl
inc
push
loope
mov
xchg
xchg
pop
xor
arpl
sbb
push
lds
jae
sub
daa
push
lcall
sub
mov
mov
sub
mov
imul
jae
into
scas
imul
cltd
test
addl
add
lret
cmp
mov
out
jns
je
mov
pop
loope
cld
push
outsl
sahf
add
in
push
adc
scas
sub
cmp
jo
jne
jl
inc
fwait
les
jbe
add
inc
push
sub
sub
test
xchg
daa
ss
mov
imul
mov
lcall
xchg
mov
adc
jno
in
sti
repnz
hlt
inc
mov
push
cmp
jo
jle
and
push
pop
push
mov
mov
repz
inc
or
hlt
out
sub
movsb
adc
push
push
lods
push
push
call
je
fmull
jb
lds
mov
dec
fisubrl
pop
les
or
test
cmp
pop
mov
xchg
sbb
pop
jge
repz
add
cwtl
cwtl
fstps
lret
popf
scas
inc
jmp
dec
iret
sbb
jns
push
adc
aas
or
add
jbe
andl
jp
addr16
xchg
add
add
sti
xor
and
es
enter
daa
shrb
pop
outsl
out
adc
dec
xorl
into
dec
mov
add
iret
xlat
pop
lea
jg
fsubs
mov
mov
jmp
fldenv
push
dec
out
pop
hlt
lds
loope
lret
clc
fcomi
pop
xor
subb
push
gs
movsl
loop
pop
and
scas
mov
jno
adc
jno
inc
dec
mov
cli
shll
fisttpl
movsl
mov
jg
dec
in
sub
loope
xchg
and
imul
pop
test
xor
mov
popa
add
cmp
dec
mov
in
and
push
dec
push
loop
fcomps
int3
imul
jg
fmull
ret
add
add
scas
dec
sub
inc
sub
xchg
aaa
adc
adc
lret
inc
in
popa
xorl
jno
mov
je
add
in
inc
lahf
in
in
pop
push
inc
push
cmpsb
iret
daa
in
sub
xchg
jns
cltd
inc
jne
cmp
mov
jle
test
jb
pop
mov
mov
xchg
lods
lock
aam
andb
xchg
adc
mov
push
jl
mov
dec
mov
popa
xlat
sbb
xchg
cld
lahf
in
cmp
inc
mov
test
fcoml
fucomi
rorb
mov
xchg
out
in
shrl
push
stos
dec
pusha
xchg
and
rcl
mov
jmp
pop
fsubrs
out
xchg
outsb
lret
scas
pop
xor
lea
adc
push
add
popa
or
out
addl
mov
ss
stos
mov
testb
jmp
dec
cmp
sahf
nop
mov
mov
sarl
out
iret
pop
outsb
repnz
push
inc
cmp
call
or
jle
xchg
cltd
pop
pusha
das
xchg
ljmp
and
fldl
mov
dec
popa
repz
sub
mov
scas
stos
scas
jmp
imul
test
dec
ret
ja
and
lods
sbb
push
lret
jns
and
mov
xor
mov
in
cltd
cmp
pusha
and
lods
ret
pop
loop
in
pop
xchg
ss
ficoms
jb
or
cltd
cli
stos
xor
xlat
push
pop
nop
fwait
mov
push
sub
cmp
scas
fisttpll
xchg
lret
sti
popl
lret
mov
lds
mov
fcom
les
jmp
mov
repnz
adc
mov
jbe
js
mov
pop
subb
stc
push
sbb
insl
cmp
cmpsl
sbb
addr16
adc
pop
icebp
outsb
movsb
xorl
or
cwtl
insl
int3
in
pusha
fimuls
pop
dec
cmp
stos
mov
testl
push
xor
sbb
sub
xchg
mulb
and
int3
mov
mull
lods
xlat
mov
xlat
adc
leave
sbb
add
fs
jecxz
fdiv
sub
out
cld
mov
mov
inc
aaa
xchg
ljmp
cli
sub
loop
or
add
hlt
outsl
filds
adc
mov
subl
and
push
cltd
push
adc
xchg
les
xchg
xchg
jle
jmp
sahf
enter
dec
cltd
fsubs
lds
xor
add
add
out
jns
lcall
push
fs
fidivrl
lahf
add
and
maskmovq
testl
ds
fcmovbe
pop
push
shll
mov
data16
cmp
push
fldt
and
lret
push
loop
test
insl
push
rorl
sahf
pop
push
jp
lods
out
sub
mov
mov
and
mov
jbe
and
fst
shrb
fwait
out
jge
inc
addb
or
adc
xor
iret
ss
pop
addl
mov
adc
xchg
jne
pusha
add
fistpll
mov
fwait
and
dec
mov
pushf
push
les
int
decl
jg
xchg
test
rcl
and
pop
int
mov
insl
sub
jbe
xchg
xlat
pop
push
xor
jge
add
dec
subl
mov
add
sbb
imul
sub
dec
mov
cmp
sub
pop
fistl
jmp
mov
push
jne
pushf
sbb
jbe
lret
xchg
aam
xchg
jnp
mov
cmp
cmp
fstps
mov
pop
hlt
push
xchg
add
mov
sbb
sbb
add
mov
bound
daa
cmc
shll
hlt
dec
movsl
in
pop
fadds
testl
imul
mov
fldt
mov
sub
in
fdivrs
pop
and
inc
insb
xor
xchg
lods
pop
pusha
adc
pusha
pop
bound
mov
scas
shll
pop
outsl
in
cltd
lods
icebp
adc
call
push
out
cmp
pop
repnz
inc
mov
or
or
push
push
pop
dec
data16
pop
test
and
sbb
mov
jb
cld
outsl
push
cld
mov
cwtl
pop
or
xor
xor
cmp
loope
fwait
pop
fidivs
lock
imul
sahf
enter
mov
pop
icebp
jp
dec
test
inc
loopne
fildl
orb
mov
push
movl
paddusb
sti
into
and
pushf
fisttpll
mov
rcrl
xlat
testl
mov
fdivrp
or
idivb
cmp
mov
arpl
mov
movsl
and
icebp
or
push
jl
scas
jno
xchg
or
push
jp
cmp
mov
xor
mov
ljmp
fnstenv
sub
int3
in
insl
roll
xor
cli
loopne
outsb
push
cmp
and
lods
xor
push
sbb
push
xchg
add
push
xchg
inc
into
imul
ret
enter
push
fildll
cmp
ret
cmpsb
cmpsb
sbbb
or
scas
pop
rcll
repnz
leave
fldenv
mov
push
loope
adc
cmp
mov
incb
jmp
xor
dec
out
in
and
lret
repnz
test
mov
lods
addl
dec
pop
std
call
and
call
cmp
xor
mov
aaa
stos
into
or
icebp
aaa
or
out
fdivrs
dec
pop
cltd
and
lret
pop
mov
mov
add
jecxz
iret
je
pop
push
js
popa
or
push
gs
lods
loope
cmpsb
inc
stos
inc
jb
sub
add
mov
int3
ljmp
fwait
dec
stc
hlt
test
xchg
cwtl
sub
je
out
out
daa
mov
fwait
stos
add
xchg
xchg
rcll
cli
dec
enter
pop
clc
inc
testl
mov
or
int
cmpsl
cmp
nop
xor
lods
call
pop
in
push
xor
mov
jmp
cmp
les
fdivrs
xchg
mov
jge
pop
push
ss
add
movsb
add
mov
popa
inc
movsb
sub
inc
fistpl
les
mov
sbb
pand
popf
xlat
mov
add
scas
nop
add
push
cli
jl
andl
cmc
jl
ret
shll
xchg
scas
lret
addr16
ljmp
sahf
xor
cmp
iret
out
in
xor
mov
icebp
fs
shrb
lods
pop
pop
shl
jno
icebp
inc
cmp
pop
cmp
mov
sbb
jo
cmp
bound
loop
inc
sbb
or
aaa
or
push
ret
pop
mov
add
xchg
aad
call
xchg
xchg
int3
les
dec
pop
push
pop
ret
and
sub
add
cmp
sbb
mov
es
dec
mov
jno
xor
push
jo
sub
inc
or
or
pop
out
dec
adc
stc
push
xor
js
lret
aad
pop
and
sbb
xor
movsb
aas
mov
mov
add
loop
jnp
sub
push
nop
push
clc
and
push
xchg
mov
adc
movsb
fwait
mov
das
test
sahf
sub
xchg
dec
repnz
push
jbe
mov
imul
push
aas
fwait
mov
jmp
inc
adc
aas
mov
mov
sub
std
push
lock
andb
imul
cmc
xchg
insb
ds
test
test
push
xor
mov
mov
or
inc
cmp
xlat
in
icebp
mov
adc
lds
dec
mov
mov
std
fsubrl
test
inc
dec
inc
data16
mov
mov
push
daa
outsl
cmp
aaa
inc
gs
pop
inc
mov
dec
xor
les
cmpsl
ja
stos
popa
sti
into
xchg
mov
jmp
fimull
pop
out
test
sti
jle
arpl
adc
arpl
xor
mov
cwtl
push
mov
push
pop
mov
test
mov
or
insb
mov
mov
cmp
pop
in
mov
pop
mov
iret
inc
enter
push
push
mov
jl
adc
xor
mov
push
mov
int
cli
xor
and
inc
pop
pop
test
popl
addb
adc
push
jns
bound
jl
sub
popf
cmp
ss
out
fdivl
adc
mov
out
das
adc
shl
mov
ds
inc
inc
insl
and
jmp
sub
xchg
insb
xor
sbb
mov
pushf
push
mov
cmp
out
mov
or
in
adc
ret
pop
jl
pushf
adc
xor
or
mov
push
loope
stc
jb
cmp
lcall
dec
mov
sub
cwtl
inc
test
and
xchg
insl
rcr
mov
add
mov
push
ret
mov
fidivl
hlt
sbb
sbb
cmp
cmpsl
test
sti
mov
sar
and
outsl
dec
int3
sbb
xor
jnp
adc
sub
inc
jecxz
fiaddl
mov
mov
sub
scas
sahf
and
mov
dec
pop
dec
mov
pop
dec
arpl
mov
test
jne
mov
dec
push
and
sbb
jns
repz
sbb
leave
pop
pop
orl
push
add
iret
sub
rcll
cmpsb
out
dec
rcl
xchg
add
adc
clc
into
push
int3
ljmp
pop
pop
adc
icebp
sahf
xchg
incb
sub
cmpsl
insb
aad
mov
adc
lret
sub
cltd
mov
mov
inc
icebp
xchg
cmpsl
aas
jb
outsl
mov
add
lret
jp
add
popf
jge
mov
mov
fadds
pop
jmp
dec
hlt
popl
adc
adc
fwait
push
adc
lock
add
push
sahf
mov
add
adc
sbb
into
push
aas
cmp
push
jnp
add
sub
jl
push
jnp
push
lods
push
xchg
jmp
cmp
jb
jg
pushf
rolb
xchg
and
pop
int
ret
sbb
out
fucompp
cltd
into
inc
pop
ret
cld
pop
mov
push
sub
daa
cmpl
lds
sbb
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
lcall
addl
mov
push
mov
sbb
stos
lret
or
mov
pop
xor
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
jb
sub
cmp
fnstenv
mov
addr16
adc
vmptrst
in
jbe
jbe
aaa
mov
sub
out
and
outsb
pop
je
mov
ds
dec
jle
pop
aam
push
das
mov
push
mov
sbb
test
xchg
mov
push
push
mov
and
pop
dec
and
xchg
and
ja
xor
adc
fnsave
and
and
rcrl
out
push
push
loopne,pn
or
sahf
orb
ds
ljmp
popa
and
jbe
dec
dec
mov
and
aaa
mov
mov
add
sbb
mov
sbb
movsb
sti
jo
push
jb
mov
push
push
sub
aas
push
rcl
jb
mov
push
add
sbb
fld
iret
das
mov
push
mov
sbb
push
xor
mov
push
mov
sbb
jb
mov
push
popl
sbb
jb
mov
sub
rclb
aad
das
aaa
or
lcall
xlat
bound
mov
push
mov
sbb
jb
mov
push
mov
sbb
insl
aad
sbb
or
jp
sub
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
fyl2xp1
push
dec
iret
js
mov
sti
aas
push
fld
jb
mov
sbb
add
xchg
inc
jnp
or
mov
sbb
fnstenv
pop
pop
les
mov
sbb
xlat
andb
inc
mov
ret
xor
jb
mov
push
mov
sbb
xchg
das
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
sbb
jb
mov
push
mov
mov
push
not
jb
mov
xor
ficomps
lret
jns
push
and
and
push
push
lret
cmp
call
jns
imul
cmp
lods
mov
jo
dec
repnz
push
js
sbb
mov
cmpsl
and
sahf
jns
scas
xor
hlt
ret
sub
cmp
lods
test
stos
hlt
dec
nop
push
repnz
xchg
test
xor
lahf
imul
cmc
and
mov
cmp
iret
add
movsb
sub
lods
push
pop
insl
jmp
mov
gs
push
frstor
push
xchg
lret
aaa
cmpb
xorl
sbb
aas
sub
mov
sbb
cmp
lock
lret
and
in
jl
inc
lods
or
mov
push
movsl
inc
or
cli
les
fsubrl
in
ds
push
xor
icebp
testl
jge
fs
pop
dec
and
mov
sub
pop
pop
orb
dec
jb
mov
inc
pop
cmc
mov
push
inc
aam
lret
jne
xor
mov
lock
push
clc
pusha
or
mov
mov
jnp
jo
and
xor
lock
xor
int
rorl
fcomps
mov
sarb
lock
jb
scas
push
jg
cmp
jns
test
sbb
cmpsb
popa
jecxz
jecxz
push
cli
jbe
pop
xor
jl
dec
scas
and
push
mov
adc
xor
mul
jbe
stos
loopne
test
adc
addl
das
loop
cltd
dec
rorb
test
inc
test
mov
mov
pop
cmp
mov
inc
iret
icebp
stos
test
and
arpl
stc
push
xor
pop
xor
loope
ja
add
iret
insl
adc
sub
clc
push
inc
sbb
fisttpll
test
sub
or
jnp
inc
sub
sbb
pop
cmp
cmp
les
inc
xchg
js
dec
push
jecxz
mov
inc
std
push
in
mov
shrl
or
icebp
scas
imul
insl
mov
ret
mov
ljmp
addr16
int
sub
pop
sbb
lret
arpl
xchg
negl
setbe
adc
pushf
popa
rcl
arpl
xor
lds
int3
dec
cltd
pop
dec
xlat
iret
mov
jnp
nop
mov
adc
repz
xchg
dec
fisubrs
cmp
or
xorl
xchg
sbb
mov
mov
outsl
mov
dec
mov
mov
cli
push
add
push
inc
lods
mov
pushf
adc
lock
sbb
in
and
mov
xor
cmp
fistps
shll
mov
dec
lret
push
jns
cmp
test
fldcw
hlt
or
rcrb
subl
sbb
int
aaa
or
dec
leave
loopne
stos
insb
lret
int3
sbb
mov
lret
or
lods
pop
mov
mov
cmp
fwait
dec
jle
cmpsb
cmp
and
pop
cmp
out
mov
pop
repnz
push
ret
mov
inc
xlat
or
pushf
lret
cld
xchg
mov
cmp
hlt
aam
cld
loope
lret
stos
and
rorb
and
cmp
lea
add
add
mov
add
and
adc
cmp
cli
mov
jb
push
mov
dec
push
jo
add
sbb
jmp
push
dec
xchg
lds
loop
and
jmp
frstor
dec
mov
mov
loop
or
inc
xor
stos
cmp
addl
pop
and
push
adcl
mov
pop
out
inc
cmp
cmovle
pop
sahf
jecxz
andl
sub
push
and
pop
xorl
dec
sbb
ja
sbb
adc
and
xor
pop
xor
test
mov
xor
mov
xor
mov
mov
aam
xchg
sub
test
sub
test
shll
mov
push
nop
imul
push
mov
scas
jge
insl
or
xor
cltd
movsl
pop
xchg
inc
iretw
je
jg
sbb
test
add
lods
dec
push
mov
dec
outsl
stos
pop
cmpsl
adc
imul
mov
xor
cmp
mov
push
xor
and
adc
je
fnstcw
loop
out
outsl
je
aas
insb
mov
adc
and
add
add
stos
xor
push
add
inc
jge
aad
clc
jl
mov
mov
inc
test
test
icebp
sbb
fbstp
add
movsl
pop
cmp
ljmp
outsb
aam
xchg
fstp
pop
leave
outsb
sti
push
and
and
mov
sub
adc
test
lock
aam
mov
mov
data16
or
clc
jne
and
into
aaa
mov
ja
out
inc
bound
lods
dec
adc
inc
adc
cmp
push
fwait
testb
dec
pop
rorl
inc
pop
imul
sub
dec
movsb
jne
dec
pushf
or
call
dec
loope
sbb
pop
xchg
and
sbb
mov
mov
pop
xchg
push
mov
lcall
lcall
scas
cmp
jno
jp
aaa
imul
call
call
inc
xor
shrl
cmpl
stos
movsb
rorb
push
push
push
popf
lods
push
shl
xor
add
dec
sub
dec
and
shlb
in
es
lods
popa
mov
add
mulb
cmc
scas
mov
das
inc
xorl
jns
repnz
jecxz
cld
aam
inc
sti
and
cmp
xchg
into
je
sbbl
fadd
inc
push
or
aam
scas
ja
add
cwtl
icebp
pop
subb
cli
lock
mov
mov
xor
xchg
pop
cmp
mov
pushf
and
call
sbb
mov
aam
push
repnz
xlat
in
pop
mov
adc
inc
mov
mov
pop
mov
xchg
fmul
pusha
fildl
js
in
pop
cmp
fisubs
ds
xor
rolb
mov
sbb
inc
mov
pushf
cltd
repnz
rcrl
add
adc
mov
sti
aam
cld
out
in
fistpl
add
mov
mov
mov
addr16
das
cmp
add
mov
daa
call
jnp
jno
xchg
cmpsl
sbb
iretw
lret
dec
mov
aas
mull
rol
imul
mov
mov
mov
lds
mov
mov
dec
dec
add
addr16
ljmp
inc
adc
int3
addr16
pop
fsubr
or
leave
push
jge
lds
and
jmp
sahf
dec
scas
out
cld
push
jb,pn
cld
jle
and
test
xchg
insl
jp
xchg
lret
lcall
inc
es
pop
xor
rol
pop
pop
xor
test
xor
xchg
mov
enter
dec
sarb
xor
enter
pop
cltd
pop
call
mull
ljmp
hlt
movsl
pop
outsl
jl
xchg
adcl
rdmsr
popa
push
in
adc
adc
and
fcomps
insb
out
push
xorb
inc
dec
mov
cmp
adc
xchg
sbb
add
jge
repnz
rolb
add
push
test
or
mov
push
push
mov
mov
call
clc
movsl
ret
add
in
pop
push
add
mov
sub
pop
ret
and
and
into
sbb
xchg
jg
or
xchg
out
sbb
push
xor
lret
movsb
inc
cmp
xor
sbb
hlt
and
adc
sub
popf
pop
add
cli
sbb
sti
and
add
in
fwait
leave
jns
je
push
lret
iret
push
aas
loop
inc
push
int
cmpsl
scas
pop
jl
sbbl
lods
inc
xor
sbb
mov
in
xchg
jae
xchg
loope
cwtl
sbb
inc
les
insl
xchg
mov
loopne
adcb
add
je
dec
lahf
push
sbb
jne
sti
xlat
and
js
repz
mov
test
pop
xor
call
test
pop
out
or
js
data16
je
or
fs
insl
xchg
in
je
les
cli
shrl
test
clc
mov
push
mov
cmp
xchg
and
js
mul
insb
xchg
mov
cmp
xchg
push
or
sub
inc
outsb
or
test
cmp
or
xor
and
and
fcom
sti
cmp
addl
push
cmpsb
fs
xchg
cs
mov
iret
cwtl
lcall
mov
call
jns
xchg
push
xchg
sahf
xchg
adc
shl
pop
push
adc
sbb
add
in
push
imul
imul
mov
and
mov
xchg
mov
nop
sarl
mov
repnz
ret
jl
mov
int3
inc
bound
dec
loopne
test
dec
add
aad
shlb
icebp
dec
push
pop
sti
testb
push
gs
dec
or
sti
sub
rcl
scas
nop
popf
xchg
sbb
jb
lea
mov
mov
rcl
cmp
pop
mov
ljmp
jp
insl
and
push
mov
pop
rorb
mov
cltd
sub
xchg
out
add
sbb
fsubrs
push
cli
sti
icebp
fildll
xor
add
insl
sub
dec
dec
and
negl
sub
mov
incb
out
push
pop
fdivl
mov
decl
pop
orb
sub
xchg
jnp
push
xchg
aad
test
fsub
mov
xchg
jb
cltd
mov
pop
xor
sbb
movb
outsb
icebp
lcall
push
push
cli
add
pushf
jns
repnz
addr16
and
push
outsb
out
mov
or
dec
movl
and
xor
push
clc
mov
out
es
iret
call
xor
rcrl
pop
andl
cli
xor
mov
inc
and
divb
enter
jno
in
mov
dec
lahf
pop
jno
cmp
sahf
lret
and
xchg
outsl
je
or
jmp
pop
push
mov
jge
cmp
mov
enter
lock
mov
mov
fldenv
adc
pushf
xchg
fiaddl
cli
pushf
sbb
xor
fcmovne
pop
push
push
scas
xlat
data16
orl
push
adc
jne
adcl
ret
pop
add
jo
test
push
jo
jae
out
xor
push
in
imul
sbb
shrl
inc
insl
fidivrs
addr16
out
test
repz
and
push
xchg
and
inc
cld
es
add
sbb
repz
negb
jmp
in
jl
testb
sti
pop
xchg
jnp
aas
jecxz
js
jp
fs
xor
call
movsb
mov
dec
js
sbb
jl
fadds
loopne
jle
arpl
mov
fwait
cli
dec
xor
lods
inc
mov
jo,pn
adc
inc
imul
idiv
jecxz
push
iret
in
aas
or
repnz
lock
mov
xchg
jmp
cmp
insl
adc
lock
mov
pop
jns
loop
sbb
fcoms
enter
pushf
fprem
adc
pop
stos
outsl
int
adc
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
