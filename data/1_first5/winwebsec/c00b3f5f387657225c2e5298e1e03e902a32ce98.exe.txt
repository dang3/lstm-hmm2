push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
mov
add
mov
scas
fstps
or
dec
out
mov
cmp
and
mov
mov
xor
sub
mov
sub
push
adc
mov
cs
adc
stos
pop
pop
dec
data16
xchg
and
add
mov
dec
ljmp
dec
mov
insl
add
or
nop
aaa
sbb
leave
xchg
mov
sbb
inc
cwtl
rcrb
mov
push
iret
cmp
mov
mov
jns
data16
mul
or
scas
leave
xor
mov
scas
add
lods
andb
sub
xor
push
cli
push
loope
push
out
into
out
aad
dec
adc
adc
add
push
sbb
xor
sub
and
jg
out
cli
movsb
call
adc
test
add
sbb
mov
pusha
jo
jp
inc
cmp
jmp
inc
lret
pop
push
push
mov
inc
add
shll
imul
dec
test
dec
bnd
jmp
loope
jns
in
and
es
inc
xchg
daa
push
jmp
stos
pop
xor
xchg
push
mov
mov
pop
and
inc
iret
add
cmpsb
call
dec
inc
lods
or
cli
and
mov
mov
roll
fistl
fsts
lcall
jae
cmp
sbb
adc
and
add
int
sub
fistl
and
jecxz
mov
jnp
pop
xor
jns
fidivrl
lods
scas
imul
sbb
in
and
xchg
add
lods
adc
incl
sti
push
sbb
pop
push
ret
fucomi
push
cmpsl
cmp
dec
push
mov
add
pop
dec
dec
test
pop
adc
dec
flds
inc
mov
cmpl
dec
insl
call
dec
adc
xchg
pop
leave
pop
pop
mull
aam
jb
lea
mov
repnz
pop
out
push
mov
cmpsb
jge
mov
data16
rolb
stos
sarb
aas
popa
jne
mov
xchg
push
push
fldl
adc
mov
test
or
fisubrl
or
adc
sbb
loopne
sub
idivl
insb
mov
pop
xorl
adc
cltd
int3
sbb
ss
lods
xor
aam
cmc
loop
je
sub
inc
add
ret
imul
adc
std
jns
jns
cmp
push
xor
in
cld
fmull
in
push
jns
int3
jg
xorb
ret
movsb
dec
jl
jl
mov
jne
push
ds
lret
add
cltd
mov
inc
cmc
adc
scas
push
bound
add
or
lret
xchg
divb
imul
inc
mov
je
jp
int3
stc
es
test
out
lcall
inc
cmp
enter
and
pop
pushf
and
clc
and
imul
ds
les
scas
push
ret
xchg
jecxz
out
jae
cmp
iret
cmp
insb
adc
pop
cmp
stos
fdiv
and
in
mov
adc
sub
js
imulb
adc
sub
or
dec
sbb
test
jge
mov
scas
mov
cmp
adc
jl
insb
inc
pop
mov
inc
push
dec
mov
jbe
and
xchg
popf
add
cltd
or
or
mov
shl
and
sub
pop
repnz
adc
cmpb
adc
dec
mov
imul
mov
mov
xchg
inc
scas
mov
mov
add
fwait
cmpsl
sub
cltd
adc
add
lods
in
and
jl
incb
scas
insl
lahf
sub
xchg
pop
jl
xchg
add
xor
sbb
add
cli
popf
aam
or
mov
sbb
arpl
shl
ds
test
push
ja
nop
inc
xchg
lahf
mov
add
inc
out
sbb
stc
es
dec
enter
pop
mov
push
xor
mov
cmc
fstpl
push
xchg
es
sti
adc
pop
scas
pop
add
mov
cmp
icebp
lahf
int3
int
leave
xor
pop
or
into
pop
mov
mov
lret
jne
sbb
cmp
xchg
push
cmpsl
and
or
outsb
mov
adc
dec
clc
and
out
mov
sarl
cld
cmpsl
icebp
inc
test
mov
or
dec
or
pop
mov
jnp
das
and
sub
cwtl
jns
icebp
lods
push
mov
sbb
int
add
pop
inc
andb
mov
lds
mov
and
mov
dec
adc
lahf
icebp
mov
sbb
and
cmp
fisttpl
pop
stos
add
pop
in
orb
scas
xchg
out
dec
js
or
xchg
sub
in
push
int
pmuludq
and
push
xor
mov
inc
repnz
aam
std
leave
lcall
clc
dec
enter
add
lods
push
enter
out
daa
lcall
lret
push
testb
jecxz
ret
cmpsl
push
in
jae
dec
out
mov
in
sub
and
ficoml
shlb
aad
jg
or
out
stc
jnp
xchg
lahf
jne
adc
jne
aad
or
movsb
mov
xchg
insb
dec
sbb
xchg
push
push
test
xor
es
or
jp
scas
aaa
jmp
punpckhdq
outsl
les
jl
fildl
xor
xor
pop
rep
shlb
xchg
clc
cmpsb
sbb
cmpsl
pop
shll
in
inc
xchg
add
sub
sub
lahf
jbe
sub
and
pop
cs
lret
stos
sbb
dec
jmp
push
hlt
sbb
xchg
sub
roll
sub
sbb
push
lret
fisubrs
add
dec
enter
cmp
or
stc
jle
fsubrp
into
sub
hlt
cmpsb
xchg
repz
leave
mov
fmul
add
xor
cltd
push
iret
xor
pusha
or
and
adc
popa
arpl
and
call
lock
pop
and
mov
pop
and
shlb
clc
fadds
movsb
out
sbb
pusha
and
out
fcomps
imul
pop
inc
push
pop
mov
into
xlat
pop
lret
pop
hlt
pusha
xor
mov
dec
mov
sub
push
scas
and
cmp
sti
dec
xchg
dec
xor
notb
mov
and
adc
lds
and
sar
cmp
out
jb
xchg
fnsave
leave
mov
cmp
or
dec
jno
inc
mov
out
mov
ds
jae
std
cwtl
cmp
push
push
fistpll
and
push
pop
mov
mov
cmp
cltd
scas
pushf
sub
movsb
fildl
shll
sub
mov
sub
in
xchg
cmp
jno
sub
mov
add
xorb
pop
dec
out
repz
adc
ret
xchg
sbb
loop
ljmp
test
pop
ja
stos
repnz
loopne
arpl
sub
movsb
sbb
xlat
xchg
movsl
inc
out
mov
xorl
loop
imul
pop
cmp
daa
jbe
cmpsl
es
or
or
ret
adc
xchg
cli
pop
mov
mov
mov
mov
cmpsl
and
sub
pop
sub
jl
mov
jb
add
xor
add
aad
rorb
and
nop
xor
xchg
loope
push
repz
test
icebp
lret
and
inc
inc
jp
or
ss
insl
push
loop
pop
movb
xchg
scas
sti
fnstenv
cld
data16
sub
mov
es
fstps
inc
or
sbb
xchg
and
dec
cmp
shrl
or
xchg
sub
jne
dec
xchg
pop
test
add
xchg
sbb
or
push
push
sbb
subl
fnstenv
loope
sbb
jb
pop
stos
pop
jnp
push
xchg
nop
mov
jne
sub
aaa
hlt
loopne
mov
pushf
movsl
popl
js
or
sti
push
push
mov
push
mov
sub
inc
xor
push
js
out
negl
adc
and
xchg
push
add
mov
mov
push
pop
mov
cmp
push
xchg
test
sbbb
mov
cli
mov
dec
addr16
or
sbbb
inc
gs
fdiv
mulb
push
and
and
ficoml
test
and
push
pop
int3
dec
icebp
call
sbb
js
sub
push
dec
sub
push
outsb
loope
xchg
outsb
and
push
mov
cli
rcr
sbb
cli
mov
fsubl
fwait
cwtl
inc
mov
dec
add
sbb
repz
or
push
lcall
or
fbstp
sbbb
fadds
inc
jo
mov
repz
jp
mov
or
mov
sbb
lds
pop
mov
repnz
cmpsl
mov
cltd
insb
lea
outsb
sbb
inc
std
xchg
or
enter
mov
mov
push
jg
sub
mov
jns
xchg
enter
outsl
inc
aaa
mov
out
call
dec
add
insb
and
inc
fwait
cmpsl
int
loope
sbb
add
dec
sbb
sub
pushf
mov
stc
sub
or
es
adc
xchg
push
mov
hlt
pushf
decl
cmpsl
out
into
int
and
jne
push
je
lcall
adc
cmpsb
ret
jecxz
popf
out
and
adc
sarb
jmp
jb
je
jg
lea
sub
movsl
movsb
clc
jp
in
add
push
xchg
rcll
cmpl
or
lock
outsl
xchg
xchg
decl
test
roll
mov
xchg
mov
xchg
int3
jnp
push
jnp
cltd
xchg
rorl
inc
dec
enter
xor
xchg
loop
and
test
dec
jle
mov
enterw
fisubl
mov
in
pop
aaa
xorb
fcomps
pop
adc
xchg
inc
xchg
nop
push
xchg
xor
fistpl
pop
push
sub
out
fisubrl
mov
xor
gs
bswap
das
loopne
leave
jg
and
and
sub
orl
out
push
pushf
dec
es
sarb
test
sarl
xor
cmp
dec
test
daa
ljmp
sbb
fnstsw
jns
xor
mov
mov
enter
lahf
or
xor
push
cmp
jo
dec
mov
inc
push
jb
mov
pop
insl
aaa
outsb
in
aam
sbb
out
je
jmp
mov
lret
xchg
jne
mov
loope
xor
imul
and
add
aaa
push
lods
outsb
out
mov
pusha
sbbl
xchg
adc
pushf
lcall
lods
test
data16
imul
jl
push
or
dec
dec
repnz
dec
repnz
ljmp
dec
jne
arpl
mov
mov
iret
repz
and
and
scas
or
sahf
movsb
push
mov
ficoml
xchg
cmp
or
stos
mov
dec
jns
jb
pop
or
out
adc
inc
movsb
scas
cmc
mov
pop
iret
mov
ret
adc
popa
pushf
shl
or
loop
mov
stos
sbb
cli
stos
pushf
and
jne
mov
sub
clc
in
add
adc
mov
xchg
push
lcall
or
mov
aas
sbb
pop
sub
jne
adc
pop
lods
cld
mov
ret
sbb
jo
sub
ss
sbb
jge
push
or
divl
mulb
add
arpl
push
jae
dec
ja
xor
pop
scas
fildl
in
sbb
and
pushf
inc
es
lea
mov
mov
xchg
mov
jo
xchg
sub
lds
ja
enter
imul
adc
xchg
mov
rol
lods
mov
adc
jo,pn
push
adc
std
in
aam
fstl
mov
andb
test
call
cmp
les
inc
cli
cwtl
lret
mov
or
xor
int
test
dec
stc
push
es
adc
ss
in
cltd
add
aas
xchg
add
leave
or
xor
fbstp
cwtl
bound
lods
stos
nop
aad
jo
push
pop
popa
out
sbb
adc
adcb
xor
mov
mov
xchg
test
popf
je
insb
in
inc
mov
fdiv
out
fisttpll
dec
sbb
xchg
out
dec
stos
mov
adc
ret
aas
daa
lods
jl
mov
sub
shl
data16
cs
sbb
hlt
push
ds
pop
pop
pop
andb
jecxz
push
push
in
pop
or
push
push
push
xchg
movsb
jnp
out
and
insb
push
push
jecxz
js
dec
push
ss
inc
daa
out
je
adc
pop
and
aaa
test
out
jbe
adc
shlb
fwait
xor
xor
out
sbb
dec
lcall
mov
les
mov
fisubrs
cmp
out
mov
cwtl
addr16
pop
out
fsubrs
sbb
xchg
adc
and
dec
dec
test
enter
mov
ret
lds
in
and
ror
cmp
cmp
clc
lcall
jp
mov
repz
cmpb
sbb
popa
imul
jne
cmp
ljmp
shlb
in
cs
divb
test
les
xlat
sub
lds
lds
test
sbb
hlt
js
iret
fs
mov
pop
iret
mov
or
call
mov
lret
sarb
rcrb
jmp
lea
jl
cmpl
and
pop
or
mov
sub
ljmp
pop
scas
dec
inc
mov
mov
sbb
jecxz
sub
jne
mulb
xchg
and
mov
sbb
cmp
mov
xor
leave
ds
push
je
shll
popf
lods
out
dec
sub
jl
adc
mov
fs
sbb
bsr
sub
xchg
sub
cmp
xorl
adcl
dec
push
popf
fnstcw
pop
ret
test
adc
mov
in
pop
sub
popf
loope
pop
mov
push
add
inc
ljmp
cmp
sbb
divl
aam
jbe
push
add
test
mov
inc
add
mov
push
mov
or
jecxz
dec
movsb
mov
pusha
mov
push
inc
pushf
int3
sbb
lods
xor
leave
mov
lds
loopne
mov
scas
lcall
push
add
aaa
test
repnz
filds
dec
shl
xchg
lods
add
ds
mov
or
mov
and
fisttpll
xchg
jno
jle
mov
arpl
xor
notl
add
mov
jg
shlb
int
in
in
fstps
pushf
push
sub
xor
mov
divl
push
mov
push
inc
add
roll
push
sbb
lcall
clc
loope
mov
repz
leave
sbb
jns
iret
sub
pop
push
or
dec
lods
push
dec
inc
movsb
mov
insl
pushf
pop
repnz
cld
add
int
mov
std
xor
mov
mov
pusha
imul
pop
scas
es
test
ror
lea
or
pop
push
test
shl
mov
out
jg
outsl
mov
dec
adc
sub
adc
subb
add
das
pusha
mov
scas
cmpsl
rcrb
mov
cmp
mov
mov
pop
gs
pop
xorb
mov
fcmovb
call
mov
dec
aad
adc
cmp
lock
cmp
xor
sarb
out
xchg
hlt
clc
cwtl
fnstsw
mov
test
push
mov
fucom
ret
sti
std
xor
inc
clc
inc
in
jno
addl
jle
test
in
icebp
pop
xor
in
lock
and
inc
pop
ss
leave
dec
sbb
in
add
or
mov
fstpl
cld
addl
es
xor
or
jno
or
inc
push
dec
aad
cltd
and
push
loopne
xor
push
cs
je
add
push
push
jp
mov
pop
movb
je
jb
out
pop
pop
pop
sub
sub
daa
sub
je
rorb
fmul
lret
shrb
repz
outsb
mov
lods
push
cmp
dec
test
in
jnp
inc
pop
bound
popa
bound
lcall
out
mov
xchg
ret
out
lock
jp
ror
sbb
dec
or
mov
pushf
popa
push
enter
xchg
jl
inc
roll
xor
stos
jp
jo
or
dec
xchg
movsl
adc
pop
aam
jg
adcb
mov
test
mov
jo
jnp
jg
fcompl
iret
sub
mov
test
jg
dec
cmp
hlt
out
js
aad
xchg
ljmp
xchg
xchg
mov
push
dec
mov
dec
fs
stos
dec
xor
xchg
cmp
cs
test
push
pop
test
adc
jecxz
jne
hlt
iret
add
jle
gs
add
arpl
xor
nop
and
aam
push
cwtl
loop
cmp
in
lods
lret
rcrb
sti
xchg
cmp
add
fstpt
mov
sbb
nop
data16
push
repz
and
test
shll
pop
out
or
addr16
ds
dec
loopne
xchg
ret
fprem1
scas
mov
mov
fsts
dec
in
and
mov
add
enter
into
fabs
mov
mov
sti
mov
dec
sti
loop
pop
scas
not
aad
mov
ljmp
popf
mov
lcall
add
sbb
cmp
jle
mov
jne
out
lock
mov
add
mov
xchg
cli
iret
pop
lods
ss
fildl
out
lods
push
push
sub
insl
fnop
pop
repz
pop
xor
std
insl
stos
lock
cmp
push
mov
int3
clc
jmp
pop
mov
push
mov
test
orl
jge
dec
ja
inc
mov
popa
test
and
push
insb
push
inc
gs
outsl
aam
dec
jb
xchg
inc
ret
jns
sbb
jnp
movsb
mov
lahf
mov
imul
dec
pop
adc
sub
or
adc
cmp
mov
push
aad
mov
add
pop
fsubl
fcmovne
in
outsl
clc
jmp
mov
scas
and
stos
xchg
icebp
pushf
popa
jmp
jmp
and
out
xchg
add
push
mov
mov
out
xchg
movl
jp
mov
xchg
faddl
call
mov
jb
call
and
jl
sbb
xchg
adc
jnp
mov
add
xor
jg
lods
cmp
ss
stos
pusha
popa
fadd
ja
and
mov
js
leave
fcomi
push
pop
sbb
mov
sbb
mov
fwait
mov
mov
cltd
fs
push
dec
cmp
inc
out
stos
ss
pop
xchg
dec
loop
leave
fistpll
pop
sbbb
icebp
imul
jg
pop
sub
dec
das
xchg
sub
in
outsb
jbe
movsl
add
mov
hlt
outsl
jl
sbb
add
pop
dec
jns
mov
jg
les
nop
mov
lock
dec
sbb
jmp
int3
sbb
or
pop
push
lahf
pushf
xor
leave
pop
or
mov
cmp
lahf
leave
test
dec
mov
sbb
mov
hlt
cltd
jp
faddl
xchg
push
rcrl
int3
scas
out
add
out
fs
sbb
inc
dec
cmpsl
lods
push
add
jns
andl
mov
mov
cmpsl
das
cld
xchg
fnstsw
test
cmp
mov
dec
pop
xchg
inc
sar
hlt
mov
fsqrt
scas
hlt
int3
xor
test
mov
sbb
xchg
clc
cmp
pmaxsw
fisubs
js
clc
inc
repnz
adc
and
cld
mov
jne
lods
push
movsl
xor
mov
adc
inc
xchg
fcmovne
pop
add
inc
insb
add
push
mov
sarb
xor
adc
lret
out
stos
das
in
xor
out
lcall
dec
movsl
jno
ret
inc
mov
push
movsl
sub
sahf
enter
push
daa
in
lods
js
addr16
in
push
scas
dec
stc
js
and
int3
mov
orl
and
outsb
xor
add
int
sub
xor
xchg
push
pop
adcb
pcmpgtb
dec
sbb
ficomps
cltd
ret
push
dec
repz
xor
rorb
xor
pop
movsb
mov
xlat
rcrl
ds
lret
scas
mov
cmpsb
leave
cmc
cmc
jge
cmp
sub
lods
jmp
mov
or
mov
cmp
shrb
mov
adcl
sti
mov
dec
pop
push
mov
sarb
repnz
sbbb
cli
movsb
inc
imul
mov
movsl
popf
stos
sbb
stc
dec
fildl
and
xor
outsb
mov
and
addr16
pop
pop
lcall
iret
jbe
xchg
repz
dec
mov
lods
or
mov
add
test
aam
fs
fcoml
loope
fstpt
or
mov
mov
xor
data16
popa
notl
xor
mov
cmp
and
mov
out
or
sbb
xor
lret
hlt
and
sub
aaa
loope
gs
inc
pop
push
dec
insb
mov
sbb
rclb
adc
mov
rorb
and
loop
mov
stos
and
repnz
mov
push
push
mov
adc
sbb
push
icebp
jae
xchg
pop
outsb
in
cmp
xlat
cmp
rolb
mov
mov
pop
inc
cmp
and
mov
jg
add
jl
and
cltd
mov
aam
das
out
or
scas
and
dec
jle
mov
cmpsb
jecxz
jg
mov
jmp
stos
or
xchg
imulb
push
mov
push
inc
sub
cmp
pop
movsb
mov
or
mov
inc
mov
mov
sbb
pusha
cmp
cli
and
int
jp
inc
mov
stos
mov
cwtl
arpl
cmpsl
clc
cmp
movsb
decb
data16
xchg
movsl
loop
sbb
in
mov
gs
sub
fstl
add
sbb
in
sbb
or
inc
dec
das
push
fcompl
das
cmpsl
mov
dec
cmpsb
adc
mov
fsubrl
lock
sbb
lea
insl
jge
pop
xchg
cld
test
or
cmpb
loope
push
push
jl
add
pop
jb
in
cmp
pop
or
cmpsl
mov
add
sahf
fsts
add
cmp
push
jb
push
scas
dec
mov
cmpsl
loopne
adc
es
xchg
int
jecxz
xchg
imul
ja
in
mov
in
gs
push
loopne
leave
jecxz
mov
sbb
dec
hlt
fnsave
pop
test
into
jne
jecxz
and
andl
repnz
icebp
add
push
leave
add
dec
sahf
mov
enter
ret
jns
sub
jno,pt
popl
stos
test
mov
xlat
adc
orl
sbb
mov
mov
cmpsb
sti
push
cwtl
add
inc
loope
pop
cmp
and
and
sub
shlb
not
loop
xor
insl
ret
pop
scas
inc
cmp
cmc
and
xchg
lock
lods
xchg
not
mov
push
push
popa
pop
inc
rcr
es
mov
dec
stos
dec
out
pop
mov
push
adc
dec
jecxz
sbb
xchg
mov
andb
and
insl
cwtl
mov
xor
or
lahf
dec
psubq
mov
jl
jl
int
lock
arpl
in
fnstsw
imul
jmp
mov
ja
mov
fists
add
inc
xor
mov
roll
decl
jno
or
sub
insb
sbb
jecxz
popa
add
dec
ss
dec
aad
xchg
movsb
popf
push
fwait
push
inc
enter
mov
sarb
roll
adc
cmpsb
dec
arpl
dec
ljmp
enter
ja
inc
outsl
ja
sbb
push
and
mov
fsubrl
jmp
pop
add
jmp
push
pop
loop
loopne
pusha
fwait
call
sbb
js
jno
push
lods
mov
addr16
xlat
jnp
jge
push
or
cmpb
js
pop
dec
test
into
icebp
lahf
les
lcall
bound
dec
ja
cwtl
addr16
add
xchg
and
jmp
pop
stc
jnp
push
ja
pop
push
sahf
or
lret
lea
imul
jle
out
or
addb
test
mov
dec
mov
mov
and
add
sbb
xchg
bound
or
cmc
jbe
pusha
stos
in
xchg
push
fnstenv
inc
or
inc
clc
sub
in
pop
cmpb
pushf
outsl
data16
out
adc
or
iret
cwtl
xchg
jno
and
sti
ficompl
scas
jns
nop
xchg
fsts
cld
adc
out
and
dec
test
mov
mov
fsubrl
pop
lcall
mov
mov
in
std
mov
leave
sahf
jmp
gs
xchg
push
lret
jb
xlat
xor
and
ja
pop
mov
add
dec
mov
jno
xchg
jmp
inc
out
dec
jg
call
dec
insl
popf
inc
mov
mov
xchg
ret
inc
cmpsl
pop
into
dec
test
xchg
dec
inc
addb
loopne
psubw
out
jne
out
xor
mov
dec
push
insl
push
scas
std
jo
iret
push
mov
mov
dec
jno
and
into
add
and
xchg
pop
das
sub
pusha
xchg
add
xchg
das
mov
es
adc
add
rcl
push
ret
xor
sbb
mov
iret
pop
cmp
dec
mov
or
xchg
adc
xchg
enter
in
das
nop
inc
bound
movsl
push
cmpsl
xor
imul
cld
fbld
out
xchg
push
stc
fwait
mov
mov
add
sahf
call
lcall
daa
jge
adc
into
cmp
push
sbb
sub
nop
loop
push
and
add
dec
loop
orb
clc
mov
daa
push
cwtl
jnp
fs
sti
xchg
or
fidivs
out
cs
or
data16
inc
loope
sbb
fildl
adc
insl
jp
xchg
xchg
pop
push
cld
jo
fs
es
adc
lcall
je
pop
jge
push
push
nop
mov
xor
fsubl
mov
sbb
xor
aas
dec
dec
xor
add
cltd
mov
jmp
imul
push
mov
or
fdiv
inc
xchg
ret
mov
pop
aad
jecxz
mov
mov
xchg
ljmp
lods
out
inc
mov
pop
je
inc
leave
jmp
xchg
test
lds
stc
je
pop
in
ret
jl
xchg
adc
jecxz
sbb
and
test
push
jl
repz
or
pop
or
into
leave
test
adc
pop
stos
andl
lock
push
add
ljmp
pop
sbb
jbe
es
xchg
shr
sub
push
fcompl
fstpt
push
fwait
lods
mov
out
or
scas
mov
inc
in
cli
xor
lret
push
push
jp
dec
sub
mov
dec
sub
and
lea
repz
aam
xorl
adcb
outsl
push
stc
sarb
jnp
imul
push
lret
cli
sar
mov
fwait
xchg
push
sub
sub
or
mov
or
out
clc
jne
test
inc
mov
inc
ljmp
dec
loopne
fimuls
cmc
ret
or
or
data16
dec
xchg
add
xchg
insl
xor
jb
incb
push
jne
push
xor
enter
cltd
scas
cmp
adc
popfw
stos
lods
subb
mov
call
clc
in
dec
jecxz
pop
adc
movsl
cmc
jbe
pop
ret
cmp
xor
in
cmc
mov
push
movb
cld
incl
xlat
imul
in
aad
adc
cld
lods
cmp
push
mov
cmpsl
sub
bound
outsb
ljmp
pop
lret
mov
sahf
add
arpl
fidivl
inc
sbb
xor
push
inc
push
mov
pop
mov
ffree
mov
xchg
cs
pop
or
xchg
push
mov
sbb
loopne
cmp
add
jmp
mov
movsb
lods
clc
adc
fldt
lods
outsb
xchg
daa
outsb
push
ret
aas
imulb
or
iret
dec
popa
push
sub
mov
test
js
mov
push
pop
mov
mov
xchg
mov
in
and
icebp
jb
sbb
sti
and
sti
inc
insb
stos
mov
inc
pop
sub
dec
cmp
stos
jnp
lea
hlt
dec
cwtl
popa
pop
fdiv
icebp
ljmp
fdivs
aas
movsl
sub
jae
in
movsb
and
inc
dec
call
sti
cltd
lods
adc
add
sbb
pop
ljmp
push
in
add
jns
cltd
pop
xchg
jle
pop
sub
loopne
rolb
adc
mov
jle
call
pop
stc
or
mov
fs
jl
ds
outsb
inc
enter
mov
imul
test
xor
sub
movsl
out
mov
sub
add
das
ror
add
pusha
sbb
bnd
mov
fisubl
push
and
push
mov
add
push
and
cmpsb
cmp
push
insl
in
cmpsl
iret
cmp
jge
or
sub
push
into
dec
ffreep
rolb
add
adcb
jmp
mov
popa
add
outsl
movsb
aad
das
lret
adc
jmp
and
ret
bound
pop
jp
movsb
cmp
or
mov
fisubrs
in
fbld
add
xor
scas
sahf
movsb
xlat
xorb
adc
fildll
sti
std
push
or
cmpsl
adc
mov
or
inc
add
jbe
enter
fwait
bound
jnp
adc
pop
xchg
cwtl
bound
insl
jae
or
jp
imul
mov
out
mov
sub
test
xor
add
insl
shrb
fwait
jle
mov
pop
or
inc
shl
dec
stos
mov
orl
fildl
jl
ljmp
mov
xchg
adc
add
sub
fistl
rcrb
and
out
mov
pop
mov
pop
push
jle
push
cld
out
sub
loopne
scas
push
mov
mov
push
jno
lcall
mov
jmp
sub
pop
popa
xchg
cmp
and
ret
and
pop
adc
jbe
dec
mov
int
inc
mov
xchg
call
push
inc
pop
fs
rcl
in
push
sbb
push
mov
jb
sbb
out
push
pusha
gs
flds
movsb
bound
negl
xor
or
loopne
mov
sub
mov
xchg
and
mov
repz
mov
stos
stc
or
add
xchg
mov
repz
out
dec
imul
xor
inc
ficomps
mov
sbb
adc
ret
xchg
aam
dec
lea
out
inc
aas
push
jp
shll
xchg
jg
imul
push
sbb
sbbb
xorl
pop
inc
sub
adc
fwait
cwtl
add
push
repnz
inc
push
and
mov
aaa
dec
and
jns
sbb
push
mov
pop
and
xchg
or
push
fs
adc
push
rcll
out
shrb
hlt
dec
les
int
imul
push
push
int
insl
mov
divb
jno
das
jae
mov
imull
in
sub
xchg
mov
subb
push
xchg
push
imul
cmp
cwtl
or
in
pop
cmp
add
mov
push
fidivl
shll
in
xchg
fiadds
xor
jl
pop
jmp
arpl
push
insl
gs
push
add
mov
lds
jl
call
mov
adc
jne
ret
xchg
jecxz
adc
cmpsb
push
scas
imul
es
sub
jns
rcrl
cwtl
dec
push
je
adc
ja
jno
mov
dec
sbb
pop
or
cmpsl
xlat
xchg
sbb
test
cmp
call
mov
scas
inc
loope
leave
lock
dec
inc
or
repnz
xchg
push
jmp
ret
lcall
fwait
shrb
jne
dec
push
xchg
aad
inc
jo
cmp
push
pusha
fsubs
cmp
cmp
add
mov
in
cmp
cmpsl
sub
imul
fnstsw
scas
xor
ss
ds
inc
sub
push
fistpl
xor
mov
adc
and
ss
inc
or
add
add
pop
sbb
in
cmc
add
or
daa
push
mov
adc
loop
mov
aaa
cmp
sbb
loope
pop
mov
pop
popf
adc
or
jbe
mov
imul
inc
repnz
js
popa
mov
aas
or
mov
ret
clc
ret
cmp
mov
xchg
and
sub
sbb
out
rcrb
xchg
imul
dec
dec
xor
cmp
cmp
dec
xor
shr
in
mov
lds
mov
mov
add
sbb
mov
xor
pop
lods
and
mov
shll
sbb
mov
cmp
mov
push
lret
jp
test
pop
mov
xlat
xor
outsb
imul
mov
mov
jae
or
loop
out
les
mov
fwait
jle
out
or
mov
jns
jmp
mov
xchg
ss
mov
jl
and
leave
mov
dec
imul
aad
sub
push
mov
fmul
mov
and
mov
xor
jecxz
push
jge
scas
andb
adc
push
adc
sbb
cmpsb
dec
jmp
stos
icebp
mov
sbb
rorb
imul
mov
and
sti
mov
int
lea
inc
ljmp
pop
fsubs
cmp
pop
mov
sbb
aad
ds
lahf
insb
cmp
mov
jno
cltd
cmp
icebp
lock
dec
cmp
out
inc
mov
mov
out
lcall
and
sub
mov
add
xchg
xor
push
mov
gs
jbe
adc
sahf
push
insl
jle
mov
xchg
in
pop
lret
mov
xchg
sti
push
and
and
add
insb
push
sbb
addl
pushl
arpl
dec
push
xor
imul
inc
es
jmp
sub
xorl
jbe
xor
dec
pop
mov
inc
push
pop
xor
xchg
lock
cld
jne
inc
and
test
inc
push
jne
dec
and
and
xchg
push
andb
pop
dec
pop
mov
dec
inc
movsb
bound
adc
fs
adc
pop
add
loop
movsl
mov
out
scas
and
cmp
inc
sbb
rcrl
stc
negb
add
arpl
gs
add
push
jne
sbb
sub
pop
xchg
cmc
mov
addr16
icebp
cs
push
test
dec
xchg
jge
aaa
sub
pop
shll
cwtl
mov
lret
stos
adc
lods
cmc
les
xchg
adc
push
or
adc
jae
xchg
ficoms
jecxz
cmp
ret
sbb
shrl
ljmp
inc
lods
cmp
mov
mov
jns
dec
sbb
jbe
pop
cmp
adc
mov
repnz
bound
cmp
mov
imul
pop
stc
jg
lea
add
shl
cmpsl
xor
or
sarb
ds
jae
fstps
lcall
nop
insb
jecxz
sub
jmp
mov
cmp
mov
xchg
adc
push
rolb
vpxor
es
movl
addr16
arpl
popa
cmp
adc
xor
xchg
jne
mov
repnz
sub
loopne
je
adc
mov
pop
sbb
scas
enter
or
dec
sub
lret
and
into
adc
jbe
jbe
jbe
outsb
xlat
dec
setle
add
mov
loope
and
enter
or
ficomps
fs
fstl
mov
scas
sarb
test
dec
loopne
xchg
les
js
rcrb
sub
enter
int3
sbb
mov
pop
gs
rorb
mov
int
xchg
or
fpatan
insb
xlat
pop
incl
add
mov
test
loop
clc
adc
movsb
add
push
mov
cwtl
jg
mov
sub
in
lds
cmpsb
mov
add
test
outsl
cmp
pop
push
insb
test
xorb
icebp
push
xchg
scas
arpl
mov
cltd
fstpt
fs
or
and
and
mov
xchg
test
add
or
or
out
test
fists
sub
stc
xchg
push
ss
mov
sub
mov
dec
push
push
jp
divb
push
inc
stos
movsb
sbbl
and
cmp
popf
push
mov
sti
mov
cmp
repz
daa
sti
insb
fdivl
mov
subl
fistl
cmp
pop
mov
jnp
lcall
cmpsb
push
mov
dec
loop
or
mov
jle
push
cld
and
jb
xchg
mov
mov
mov
sarl
in
aad
das
loope
clc
cwtl
xchg
jmp
jnp
in
mov
pop
xchg
cmp
push
in
imul
in
flds
mov
rcrl
mov
xor
adcb
cmp
mov
sub
add
lret
int3
cld
xor
iret
add
inc
enter
mov
repnz
icebp
push
push
mov
fldt
dec
mov
dec
popa
add
out
leave
ds
arpl
lret
or
int
cltd
inc
cli
mov
or
shlb
pop
sub
shlb
rcll
lock
and
or
in
call
mov
or
jns
push
ja
aam
xor
adc
hlt
repz
add
jae
or
jmp
mov
cmpsb
incl
add
inc
mov
push
mov
mov
sbb
inc
mov
stc
lahf
mov
cld
or
ds
jnp
cmpsb
in
js
sub
adc
xchg
mov
loop
in
fcomp
add
clc
clc
into
pop
nop
pop
xor
push
pop
in
std
in
xorl
aad
jae
or
test
fst
jno
pop
inc
xchg
test
test
out
mov
xor
daa
sbb
cmp
mov
shl
stc
jae
jg
sahf
and
push
mov
jae
ja
or
xor
adc
outsb
mov
add
inc
aaa
xor
add
or
inc
scas
sub
mov
xor
pop
inc
in
or
cmp
inc
in
mov
and
add
mov
mov
push
rcl
lock
xor
out
or
in
mov
lods
int3
inc
shlb
cmpsb
jmp
push
gs
fisubrl
loopne
into
mov
fstp
stos
ds
aam
jo
test
pop
sub
push
imul
mov
scas
pop
sahf
jle
adc
sti
mov
xchg
and
outsb
sbbb
jge
test
ljmp
jl
sub
sub
lret
or
adc
and
cmp
out
push
adc
inc
jno
cmpsl
jge
aas
jmp
pop
sub
shll
push
fnsave
or
push
add
ljmp
imulb
push
in
push
dec
pop
push
es
sbb
or
sub
mov
add
mul
insl
pushw
and
jg
fcoml
int3
nop
or
jp
adc
outsl
push
push
aas
push
xchg
jecxz
jmp
test
imul
mov
xor
pop
mov
call
adc
testb
icebp
jae
mov
shl
jb
or
imul
test
inc
cmp
and
or
fs
fsubrs
pop
or
orb
inc
push
and
push
adc
adc
rcr
fdivrl
pxor
sub
mov
cmpb
insb
sarb
mov
movsb
jmp
sub
sbb
and
in
dec
xor
insb
xor
adc
insl
rcrb
loope
push
testl
xchg
mov
or
gs
cltd
push
mov
js
popf
sub
cmpsl
mov
jle
ret
ret
stos
or
inc
arpl
ds
xor
iret
ljmp
sbb
in
ljmp
jmp
xchg
mov
xchg
outsb
push
or
and
lret
pushf
adc
dec
mov
mov
cwtl
stc
xor
mov
loop
popf
xchg
dec
call
std
pop
daa
clc
loopne
icebp
and
outsl
out
aas
int3
push
cmp
shlb
xor
push
jbe
loope
dec
fs
aaa
cmpsl
pop
or
int
clc
stos
repnz
push
xor
xchg
sbb
das
push
orb
inc
push
ficoml
iret
ret
scas
or
mov
lock
vpsubd
xchg
inc
jnp
and
push
iret
test
mov
mov
push
outsl
jno
pop
and
stc
pop
inc
pop
mov
out
rorb
lea
icebp
mov
inc
sbb
xchg
dec
xor
push
push
pop
cmp
clc
fistpl
mov
into
push
push
lea
jnp
lcall
cmp
outsl
jbe
int
shlb
mov
fwait
mov
dec
cmpsb
lea
or
xchg
movsb
jbe
mov
andl
dec
hlt
mov
jp
pop
xchg
fs
push
mov
mov
data16
sub
xor
mov
enter
leave
pop
icebp
and
xchg
es
fldl
xchg
or
cmpsb
push
fwait
ror
and
push
adc
xchg
sbb
inc
pop
sub
sub
jmp
sbb
daa
dec
mov
and
mov
insl
xchg
scas
xor
jo
cmpsb
aaa
push
jl
mov
jecxz
mov
mov
cld
jbe
sti
adc
cli
imul
or
jle
subb
sub
cmpl
mov
scas
sti
cmc
shll
mov
out
and
pop
fisubrl
sbb
ret
mov
cli
xchg
test
sahf
daa
ret
cmp
lret
adc
fs
stc
push
or
daa
pop
sub
inc
xchg
and
pushf
testl
call
push
pop
ja
clc
fisubrl
add
pusha
insb
rcrl
das
sbb
movd
lock
scas
daa
das
arpl
and
call
and
ret
mov
mov
dec
xlat
mov
pop
inc
sbb
jl
xchg
push
test
push
imul
mov
test
and
adc
mov
xchg
subl
les
jbe
mov
mov
or
mov
dec
and
push
lret
sbb
imul
sub
jo
inc
add
sub
mov
in
int
jecxz
pop
fsubs
jns
sub
stos
xor
sti
jns
push
xchg
jae
jp,pn
lock
xchg
movsb
jmp
ficomps
loope
push
hlt
or
add
mov
loop
xchg
xor
rcll
and
adc
in
dec
repz
lds
outsb
jl
scas
xchg
call
sbb
mov
pop
mov
mov
pop
divl
xor
mov
ljmp
movsl
es
shll
addb
push
jle
pop
fimuls
add
inc
xchg
or
into
dec
cmp
xor
jnp
rclb
out
inc
arpl
cmp
adc
js
icebp
cmp
sub
mov
mov
push
xlat
pop
hlt
push
sub
add
test
dec
xchg
popf
rcrl
dec
inc
inc
jmp
push
cmpsb
inc
adc
jg
inc
inc
mov
imul
mov
lret
cmp
cmp
lret
mov
sti
into
data16
pop
aam
mov
mov
mov
adc
repnz
popa
mov
dec
cmc
out
cmp
push
nop
mov
jae
aad
out
cmp
dec
out
dec
and
mov
push
cmpsb
outsl
inc
xor
das
loope
ljmp
sub
aad
jo
dec
sarl
imul
inc
out
cs
iret
xor
dec
int
pop
imul
sbb
push
add
dec
mov
ss
cmp
or
sbb
test
fdiv
push
mov
shll
lret
lea
xchg
in
jg
in
fiaddl
push
iret
push
sub
fs
sub
nop
xchg
push
ja
dec
ljmp
lcall
sub
cltd
xchg
dec
xchg
dec
int3
dec
std
inc
ss
ret
outsb
dec
jbe
addr16
cmpl
xchg
push
ror
xor
dec
lds
pop
jle
xchg
roll
insl
pop
mov
or
int3
lahf
mov
fadd
int3
jnp
adcb
stos
pop
clc
push
xor
sahf
push
mov
fs
mov
mov
mov
cltd
cs
popa
in
mov
shlb
push
aas
mov
push
dec
pop
mov
imul
mov
mov
sarb
xchg
popa
mov
dec
aas
test
and
sub
mov
adc
ud1
stos
push
mov
inc
jp
add
test
ds
aas
clc
subl
pop
int3
dec
add
in
fs
test
loop
xlat
or
mov
push
ds
fs
xchg
in
das
ss
stos
inc
pushf
and
dec
std
rorb
jne
jp
adc
in
jae
int
push
xchg
fnsave
out
pop
xor
jo
sbb
dec
out
sub
or
jg
add
sub
push
mov
test
dec
sahf
aad
pop
mov
pop
push
jbe
mov
mov
sub
out
xor
mov
mov
jecxz
mov
inc
sti
and
popf
xor
xlat
mov
movsl
test
or
add
rcl
sbb
xabort
xchg
stc
aas
cmp
test
xchg
fidivl
jns
jle
sti
push
fidivrs
inc
bound
cmpsl
int
ja
push
loope
jg
pop
push
gs
test
xchg
aam
jecxz
stos
shlb
rol
mul
lret
aam
stos
mov
iret
inc
in
jns
push
iret
lahf
jle
cwtl
inc
and
jl
or
stos
cmpsb
push
jnp
mov
lds
rcrb
fdivrs
add
push
in
adc
push
jne
sub
or
int
add
push
sahf
mov
push
lea
adc
jae
mov
xor
sub
aas
into
fstpt
add
and
rorl
jmp
push
push
cmp
in
outsl
jmp
jnp
pop
mov
lods
add
out
je
pop
in
scas
ret
sarb
insb
imul
push
mov
not
or
and
jns
add
adc
mov
jmp
jl
cmp
fidivs
mov
into
lock
adc
dec
cmp
popa
mov
add
xchg
repnz
adc
xchg
lret
lea
mov
jmp
arpl
xchg
cmp
les
outsb
push
xchg
jnp
push
pushf
jne
imul
ljmp
imul
add
mov
mov
ds
gs
jmp
outsb
adc
xlat
stos
std
jae
xor
or
bound
jo
sbb
sbb
out
ljmp
mov
dec
sti
mov
lods
inc
fistl
aaa
push
push
inc
sarl
push
int3
mov
gs
daa
inc
and
jae
jns
cmp
int
sbb
scas
mov
ret
pusha
sub
xchg
sahf
xor
mov
adc
lret
jp
iret
mov
jb
icebp
push
xlat
enter
imul
movsl
clc
jne
mov
rclb
rol
mov
test
mov
fcomps
dec
dec
push
push
in
xchg
std
int
push
add
jne
out
push
aam
sbb
sbb
lret
inc
or
pop
fsubr
loop
or
sub
int3
add
pop
cmp
mov
lcall
pop
hlt
jns
sub
clc
cli
ja
std
enter
push
test
mov
sub
call
inc
jne
xor
rcrb
xchg
out
add
sti
sahf
mov
in
filds
sub
mov
test
pop
in
inc
stos
int
jbe
xchg
out
in
xor
in
pop
add
sbb
sbb
les
call
push
jp
xchg
xor
adc
mov
jno
or
xchg
addr16
jg
mov
sbb
std
sub
push
scas
enter
cmp
pushf
or
stc
inc
cmpsb
testb
fsubs
stc
inc
lret
jb
out
addr16
jb
int3
dec
sahf
push
frstor
int3
mov
pop
inc
cmp
sub
jne
cmp
mov
rorb
sbb
jo
in
jl
mov
sbb
dec
push
mov
clc
out
sub
pop
pop
ret
mov
test
pop
sbb
push
xlat
xor
sahf
jle
sub
repnz
jno
lods
arpl
jo
pop
test
pop
bound
loop
out
cwtl
lea
lcall
cmpsb
push
cs
and
and
dec
mov
adc
ljmp
sub
mov
or
adc
inc
push
push
adc
dec
scas
mov
out
adc
mov
in
sbb
add
push
push
ret
scas
scas
dec
pop
addl
inc
scas
jne
mov
push
in
pop
xor
xchg
mov
jl
jmp
out
xchg
jg
cld
cmp
pop
clc
cltd
arpl
lea
jecxz
xchg
mov
or
pop
push
jae,pn
xchg
int3
popf
fldt
add
fcmovbe
push
cs
lret
cmp
xor
cmp
adc
push
push
mov
mov
lods
mov
cwtl
cwtl
dec
xor
dec
cwtl
xchg
fstps
cmp
int3
or
cmp
mov
or
jg
xor
pop
data16
adc
test
xchg
outsb
call
jb
xchg
cmp
mov
xlat
addb
adc
bound
jmp
scas
lea
cmpsb
prefetcht1
lods
loop
mov
adc
test
and
push
rclb
sub
outsb
aam
push
fisubrl
and
ret
xor
movsb
aam
sbb
lods
or
xchg
testb
jne
pushf
xor
addr16
lret
pop
test
jmp
dec
and
sbb
add
add
jnp
cmp
je
push
pop
pop
pop
inc
xchg
aad
and
das
in
push
xchg
cmp
xchg
arpl
mov
mov
popf
inc
in
dec
or
push
popa
movsb
cmp
psllq
arpl
push
in
mov
or
jg
dec
out
xchg
cmc
mov
int3
ja
shrb
jle
bound
call
push
sbb
cltd
js
je
sarl
dec
fxtract
inc
lds
std
or
aas
sbb
jp
sub
xor
mov
adc
mov
cmpsb
jle
mov
pop
mov
mov
insb
fistps
dec
lea
scas
mov
data16
or
xchg
test
ljmp
shll
xchg
and
es
sbb
jne
sub
es
jp
mov
mov
loope
sub
std
and
xorb
mov
adc
fs
jecxz
mov
mov
add
pop
xor
or
and
insb
xchg
jge
sbb
mov
fsubrl
lcall
mov
mov
dec
popf
aaa
jo,pt
sti
push
or
pop
ss
call
cmp
decl
or
lret
int3
ljmp
cmpsb
inc
test
roll
sub
mov
cmp
sbb
ret
mov
loopne
les
sbb
sbb
mov
jne
movsb
leave
std
bswap
pop
int
pop
aaa
test
adc
loop
xchg
pop
lahf
xor
jne
lods
dec
push
outsb
jl
dec
mov
hlt
dec
test
das
lods
fildll
dec
shlb
sbb
mov
sub
sub
out
cmpb
push
sub
andb
inc
cmp
gs
pop
xchg
push
xlat
mov
jmp
das
push
adc
aad
or
mov
xacquire
fsubl
mov
adc
adc
pop
outsb
mov
lahf
add
or
ja
lods
sti
cltd
out
shlb
jns
sti
dec
mov
js
jno
add
dec
popa
xchg
xor
outsb
dec
in
inc
addr16
dec
lret
or
nop
ds
and
xor
ljmp
or
pop
cmc
dec
mov
das
dec
add
clc
mov
cmp
jb
dec
mov
fcmovu
jmp
out
test
repnz
insl
sahf
pop
sahf
push
je
testb
xlat
add
stc
iret
xchg
mov
xor
ss
sbb
aas
pop
mov
push
jecxz
xchg
rcrb
sahf
mov
mov
sbb
scas
cs
fdivrl
into
jnp
push
xchg
gs
ljmp
clc
lcall
cld
rorl
mov
int3
jp
or
aad
push
add
fadds
dec
dec
imul
clc
xlat
cmp
dec
push
push
repnz
jno
out
push
dec
aad
pusha
cmp
jecxz
loope
addl
jno
jnp
mov
inc
mov
insb
pop
stos
lret
dec
cs
aas
mov
shr
mov
sbb
aad
pop
mov
pop
lret
xor
int3
nop
ret
cmpb
mov
push
pop
cmp
sub
add
fucomip
lods
mov
push
int3
inc
jecxz
inc
and
and
adc
test
rol
xchg
or
pop
shl
mov
cmp
sti
aas
mov
decb
mov
imul
jle
popa
aaa
ljmp
inc
mov
pop
add
or
xchg
pop
fldenv
xor
xor
dec
add
icebp
mov
cld
sbb
stos
leave
mov
je
fs
in
push
xchg
mov
pushf
imul
out
xor
push
aas
leave
dec
dec
mov
scas
jae
push
pmaxub
pop
mov
ds
dec
in
pop
dec
jp
test
push
mov
in
adc
shll
and
pop
dec
daa
aaa
leave
add
scas
filds
loopne
cmp
mov
adc
pusha
into
rcll
sub
stc
pop
cmpsb
mov
mov
jg
dec
pop
pop
mov
js
lahf
push
lock
scas
scas
jns
repz
pop
sbb
add
push
mul
cmpsl
xor
cwtl
pop
ret
test
fwait
pop
xchg
push
out
jnp
inc
pop
ss
nop
lahf
lcall
subl
loop
sbb
sub
xchg
adc
xchg
repz
push
enter
popf
fdivrl
mov
xchg
jl
pop
out
out
mov
je
push
xchg
dec
outsl
cmp
pop
xabort
movsl
jno
mov
fdivrl
loope
ror
pop
xchg
sbb
cltd
mov
pop
jg
test
fwait
imul
sbb
adc
lahf
movsl
in
fdivl
mov
dec
jo
sahf
cwtl
adc
sbb
mov
ret
sbb
iret
and
iret
aam
in
xorb
sub
gs
cmp
cmpsl
cmp
inc
aaa
inc
cmp
xchg
jp
in
inc
addr16
rcrb
cmp
jnp
outsl
jo
rorb
or
lahf
cmc
ljmp
in
aaa
jle
mov
jb
mov
data16
arpl
sub
in
pop
pushf
xor
daa
sub
test
push
push
outsl
mov
dec
movsb
out
cmpsl
dec
add
es
lods
jne
cltd
and
imul
ja
sbb
mov
in
nop
adc
xor
xchg
or
sub
mov
or
fldz
icebp
bound
jne
addr16
inc
pop
test
fwait
push
adc
cmp
xor
adc
pop
mov
subb
rolb
sbb
out
push
pop
add
ret
cmpsl
aaa
in
shrb
in
ja
loop
jmp
xchg
sub
push
xchg
bound
xor
jo
push
pop
loope
cmp
int
pop
arpl
orb
lcall
enter
push
mov
enter
fimull
adc
out
sub
dec
push
loope
aam
pushf
inc
nop
xchg
in
adc
sub
sbb
push
into
sbbb
scas
dec
fwait
test
addb
mov
dec
xchg
push
dec
and
push
leave
ret
loope
fisubrs
loope
movsb
xlat
mov
imul
mov
fstpt
arpl
call
shll
popf
lret
or
ret
test
iret
cmc
cmpb
inc
ljmp
jecxz
lcall
aad
jbe
or
sbb
pop
fiaddl
sahf
inc
mov
inc
fidivrs
scas
xchg
mov
scas
sub
aas
hlt
loopne
jle
and
mov
loope
mov
out
inc
mov
ljmp
pop
ds
shrl
jg
sarl
ficompl
repz
xchg
xor
dec
mov
inc
int3
dec
sub
pop
inc
stc
jo
fs
dec
mov
int
outsb
push
lods
pushf
test
inc
lds
and
mov
out
sahf
sbb
ror
popf
roll
clc
insb
dec
shl
gs
inc
inc
mov
jp
mov
dec
test
pop
loop
dec
out
mov
cs
xchg
imul
pop
push
mov
out
shrl
ret
movzwl
mov
cltd
sti
jmp
push
cmp
test
dec
out
xchg
in
loope
xchg
lock
mov
scas
lock
aam
testb
pop
mov
or
push
inc
inc
call
push
mov
sub
cld
dec
test
cmpsl
mov
shlb
sub
jb
test
addr16
mov
mov
mov
push
gs
xchg
cmp
xchg
mov
add
xor
push
mov
fildl
inc
popa
jo
ret
flds
test
inc
pop
and
lea
dec
mov
popa
jle
hlt
xchg
es
inc
adc
mov
xor
addl
cld
sbb
ljmp
or
cwtl
mov
pop
in
fisttps
call
dec
dec
mov
loope
jl
cld
mov
scas
dec
jle
xchg
fistpll
jns
aam
or
stc
repz
cmp
mov
mov
cltd
sbb
push
mov
cmp
mov
mov
xchg
andb
mov
xor
lret
xor
outsl
nop
addr16
xchg
stos
push
fs
int
mov
dec
mov
je
sarb
packuswb
int
orl
ficomps
sbb
push
notl
jmp
and
jp
pop
sub
test
sti
or
inc
push
cld
test
das
out
adc
in
fmull
pop
jo
orl
mov
xor
ret
cli
mov
or
nop
and
mov
dec
push
xor
movsb
pop
jne
push
pop
xchg
dec
cld
mov
lahf
ds
push
stc
sar
xchg
mov
cltd
outsl
std
mov
pop
pop
cwtl
push
popf
daa
push
jmp
mov
mov
pop
loop
push
xchg
pop
inc
pop
xchg
adc
inc
mov
and
pop
jns
push
jge
loopne
mov
jmp
repnz
into
lods
insb
pop
fsubs
dec
pop
sub
lods
jno
stc
lock
add
lcall
adc
push
faddl
push
or
into
pushf
aam
push
or
inc
aad
addr16
pusha
adc
shrb
lcall
ja
fs
push
mov
es
enter
push
mov
shll
xor
pop
out
mov
outsb
sti
call
cli
mov
mov
and
adc
pop
fisubrs
gs
lock
mov
jo
push
pop
or
loopne
mov
ss
imul
movsb
loop
xchg
pop
orl
stc
jge
mov
cmc
adc
fbld
jle
je
xor
pop
call
dec
or
cmp
push
repz
sub
ja
mov
insl
add
inc
cmp
scas
sub
stos
jl
and
inc
pop
jo
xchg
pop
ja
xchg
out
je
cs
dec
push
fstl
sbb
xor
leave
loop
stc
pop
xor
xor
xchg
inc
lret
and
xchg
outsb
pop
mov
loope
leave
xchg
shr
shlb
insl
cli
inc
shrl
pinsrw
xor
jge
inc
sbb
cs
outsb
push
jecxz
or
jnp
cmpsb
das
mov
push
dec
sub
and
call
lds
cmp
adc
xchg
cmc
fnsave
mov
cwtl
adc
xchg
lea
push
movsl
jmp
jecxz
loop
sub
cmpb
adc
xor
fildl
hlt
dec
push
shll
les
inc
stc
insl
push
out
jmp
cmp
insb
pop
xor
test
jle
inc
jecxz
pop
ret
cmp
mov
inc
push
cs
pop
add
shlb
push
imul
mov
std
jbe
and
jae
sbb
jl
push
mov
fs
pop
jg
pop
dec
aad
sub
adc
pop
or
scas
pusha
loop
pop
cs
inc
clc
push
and
sub
xor
cmp
test
mov
adc
in
xor
adc
das
ss
mov
aad
cs
push
aas
ljmp
bound
add
dec
addl
sub
mov
push
adc
push
int
add
jecxz
jp
cwtl
lods
push
mov
scas
scas
pop
shlb
int
out
fs
dec
loope
in
xchg
inc
mov
mov
xchg
leave
fcoml
aas
dec
dec
data16
adc
push
fs
or
repz
lds
cltd
jg
sub
scas
subl
mov
cmpsb
jg
lcall
or
in
dec
pusha
add
adcb
pushf
je
les
add
cltd
lret
dec
stos
pop
in
dec
jno
jl
addr16
lods
xchg
scas
cmpsb
shrb
int
sub
pop
or
adc
xor
cmp
xor
repnz
mov
mov
sbbb
xor
and
adc
xlat
and
fwait
push
lods
pop
mov
cmp
jno
fcomp
arpl
xchg
mov
fs
jo
mov
and
pop
pop
ljmp
ss
xchg
adc
lea
mov
cld
push
int
iret
imul
mov
pop
mov
nop
sub
cmpsl
add
pushf
dec
loop
mov
sbb
arpl
outsb
push
addr16
pop
fcompp
dec
lret
out
jge
push
or
mov
push
es
int
jb
in
mov
mov
push
fwait
aas
negl
dec
scas
inc
sahf
arpl
adc
xchg
je
mov
xchg
mov
sub
add
fdivr
leave
jle
cmp
in
test
jne
lods
pop
or
out
xchg
dec
sahf
push
jmp
loopne
or
insb
fldl
jle
and
loopne
iret
jg
notl
jp
inc
xchg
jne
jecxz
sbb
sarl
aaa
xlat
and
in
enter
nop
faddl
sub
and
xchg
mov
adc
ss
mov
sarb
add
pop
fildll
repz
add
adc
in
jae
xorb
pop
sbb
pop
clc
in
lods
jp
mov
inc
in
pop
std
push
into
push
inc
cmp
jns
addr16
mov
loopne
xchg
lret
out
insb
jb
pop
jecxz
loop
loopne
outsl
add
in
mov
data16
loop
adc
outsb
sub
push
pop
jnp
pop
mov
neg
sbb
push
imul
sti
add
mov
xchg
mov
rolb
xchg
pop
or
mov
stc
xchg
ret
fs
lods
cmp
ja
addr16
xorb
fiadds
stos
xor
dec
mov
lretw
adc
insb
jae
data16
cmp
roll
test
inc
sbb
mov
aad
mov
icebp
cld
mov
sbb
mov
or
leave
xchg
xchg
sub
test
xchg
out
ss
lods
push
mov
adc
ja,pn
adc
fiaddl
fldcw
add
push
xchg
jo
out
push
jg
jle
mov
cmp
mov
dec
mov
sub
sub
es
cmp
inc
call
sub
ret
push
xchg
emms
mov
fwait
pop
mov
js
mov
orl
mov
popl
lea
dec
sbb
pop
repz
out
dec
in
xor
outsb
jmp
dec
popa
fstpt
sbb
rcrb
cli
inc
mov
sbb
ds
gs
or
dec
je
movsb
add
pusha
mov
frstor
leave
outsl
into
jns
aas
fnstsw
cmp
ss
inc
add
inc
loopne
cli
jg
loopne
rorb
jnp
cli
pop
pop
test
sub
push
ja
adc
mov
in
push
fistpl
std
xor
sub
es
movsb
into
jle
lea
mov
push
mov
sbb
adc
inc
enter
or
shll
jg
sbb
arpl
add
cmp
inc
mov
xchg
pop
fbld
jo
mov
pop
sahf
stos
mov
dec
stos
pop
xor
cmp
mov
cmp
xchg
rolb
ljmp
bound
fdivrp
lock
je
adc
out
stc
inc
sbb
adc
or
and
testl
in
lds
pop
mov
lahf
lock
in
jle
cmp
les
mov
xchg
aaa
cltd
pop
ss
mov
add
shrl
or
sbbl
jne
incl
arpl
arpl
adc
fwait
jl
sarl
xlat
cld
xor
outsb
pop
cli
cmp
cli
fcomps
sub
jmp
cmp
repz
adc
adc
lods
hlt
add
inc
out
mov
and
insb
rclb
sahf
dec
push
popa
xor
and
psubsb
add
ljmp
inc
out
push
sub
call
inc
fsubl
shll
lods
push
xchg
mov
mov
and
or
sti
xchg
scas
dec
pop
dec
mov
mul
test
dec
xchg
mov
daa
mov
jmp
sbb
cmpsb
push
mov
ljmp
and
arpl
call
leave
jb
xchg
dec
mov
mov
jno
loop
out
aam
pop
add
cmpsl
xabort
add
enter
dec
dec
mov
mov
repnz
enter
in
adc
fnstcw
xlat
stos
fistpl
or
inc
jae
movsb
addr16
rcrb
loope
out
outsl
out
js
pop
icebp
or
adc
lret
and
xchg
add
int
cmp
sub
xor
mov
dec
out
push
aam
jmp
and
mov
fdivrl
imul
jmp
cs
pop
fs
mov
rcrl
jo
shlb
jmp
dec
adc
cld
sahf
and
jle
mov
out
dec
mov
aad
movsb
and
push
sbb
btr
pop
xchg
imul
fwait
adc
adc
shl
push
inc
lahf
mov
sahf
xor
xor
jbe
faddl
mov
or
aam
sub
pop
xor
out
repz
je
mov
jge
xchg
idivl
daa
in
adc
cmpsb
ret
loope
jne
mov
jae
jae
push
repz
lds
test
jecxz
cmpsl
bnd
mov
or
stos
inc
sbb
fsubr
dec
cmpsl
add
jg
xchg
cmpsb
dec
xor
pop
mov
mov
lcall
add
inc
inc
sub
dec
and
cmpsb
sbb
sbb
cli
lret
jno
shl
cli
pop
and
xchg
mov
xchg
stc
aaa
or
mov
xchg
int3
xchg
shrb
push
mov
mov
mov
inc
mov
and
leave
sub
sti
mov
mov
pop
jg
das
mov
jno
xchg
lahf
push
pop
and
leave
mov
sbb
stos
insl
fucomi
adc
lods
dec
xchg
adc
insl
inc
or
pushl
and
or
dec
lret
pop
mov
jno
cmpsb
dec
cmp
cwtl
jo
cmp
in
jg
loop
lods
push
cmp
nop
mov
xchg
fadd
xchg
inc
cmp
pop
rorl
push
dec
or
clc
mov
adc
jae
out
xchg
hlt
xlat
xchg
mov
push
adc
iret
lcall
pop
pop
push
sub
mov
and
jg
incl
test
adcl
clc
xor
and
sub
in
cmpsb
dec
or
pop
out
sti
pop
xchg
cmp
cmpl
pop
jae
dec
sti
xchg
xor
movsl
or
push
mov
sub
stos
arpl
fistpl
sbb
cmovns
sbb
jb
add
les
popf
jb
push
mov
in
adc
mov
movsl
jnp
jbe
and
pop
xchg
mov
or
shll
rorb
inc
mov
fcmovne
mov
sti
imul
insl
dec
sub
je
enter
lret
cmpsb
dec
inc
add
repz
scas
lret
push
ds
cwtl
dec
dec
les
stos
jl
push
int
pusha
add
mov
lods
pusha
jo
pop
fisttpll
lock
xchg
clc
add
xchg
mov
mov
inc
jle
das
adc
pushf
loop
or
les
sar
stos
int3
push
cli
inc
dec
andb
add
sti
inc
mov
inc
lds
lds
mov
cwtl
arpl
pop
shlb
or
mov
add
mov
popa
add
jns
cmpsb
and
xchg
popf
stos
jg
cmp
or
pusha
adc
cmp
jmp
fwait
lods
sub
mov
cmp
xchg
and
hlt
fs
fisttps
push
xchg
sub
out
movb
or
add
pop
fwait
cwtl
xchg
cmp
cmpsl
mov
push
daa
loopne
push
and
inc
in
shr
sbb
cmp
mov
sti
pop
jecxz
mov
push
imul
es
dec
fstl
shll
loope
cmp
stc
xor
pop
in
push
pop
rol
push
sub
jge
jp
in
mov
in
mov
push
pusha
cmp
mov
and
adc
pop
jae
rcll
or
mov
lods
int3
xchg
xchg
stos
lcallw
add
xchg
insl
in
stos
jae
xor
push
in
inc
js
call
pop
sar
mov
test
mov
mov
xlat
mov
xchg
mov
jecxz
mov
cli
loop
and
and
stc
or
clc
dec
xchg
push
clc
mov
mov
xchg
pop
gs
pop
repz
add
cmp
icebp
mov
fisubrs
shrl
mov
push
and
popf
or
nop
and
jp
test
inc
jno
cmpsb
xchg
int3
xchg
jno
sbb
jae
mov
loope
clc
mov
sbb
testb
cs
xor
sub
push
dec
xor
nop
out
cli
mov
enter
sub
jl
cli
and
cs
test
xor
add
scas
scas
xor
pop
test
in
mov
inc
orb
test
push
xor
icebp
stc
inc
das
in
push
xchg
mov
je
and
mov
pop
fimuls
mov
sbbb
rcrl
sub
mov
divl
in
adc
nop
pop
push
js
adc
test
pop
loop
ja
movsl
ret
pop
push
sbb
push
jge
shlb
scas
mov
shlb
push
nop
shl
pop
cmp
cmpsl
push
xchg
jecxz
cmp
imul
int3
sub
iret
add
cmp
jp
add
and
jb
les
inc
icebp
xchg
ss
ljmp
and
rol
mov
loopne
insl
nop
xchg
test
or
or
call
mov
push
stc
inc
sub
fisubrs
or
jno
xor
mov
pop
or
cmp
and
and
push
ja
rol
sub
jnp
adc
pop
xchg
shrl
je
xor
pop
scas
not
xchg
push
sub
test
enter
xchg
fbstp
leave
and
lahf
mov
jg
mov
mov
push
je
aad
cld
xchg
mov
mov
mov
or
add
add
ret
aas
xor
push
addr16
xor
dec
xchg
pop
sbb
push
xchg
psadbw
daa
mov
xchg
aad
outsb
mov
pop
scas
xor
sbb
mov
fisubrs
mov
les
cmp
mov
loopne
jne
mov
jmp
loop
mov
adc
outsl
inc
mov
xchg
jo
fsubrl
in
cmpsl
mov
dec
sti
hlt
cwtl
mov
fcoml
jg
sbb
jg
fidivrs
stos
test
sub
sahf
add
daa
lock
jp
jae
xchg
dec
es
push
sbb
imul
fdiv
outsl
lcall
daa
fs
pop
add
dec
pop
xchg
push
add
and
mov
sub
rclb
sbb
dec
xchg
push
push
pop
xor
movsl
std
fildl
xor
in
push
and
sub
int
loop
ja
in
cltd
xlat
jp
lds
cs
xor
jmp
cmpsb
push
or
adc
ss
mov
xlat
scas
lcall
mov
jmp
sub
jle
sbb
stos
movsb
or
xchg
mov
nop
aaa
adc
and
dec
jle
out
das
sbb
pop
add
or
cmp
test
lret
das
sub
icebp
mov
dec
int
lahf
dec
xchg
pop
mov
test
sub
out
lahf
stos
sti
in
testl
add
je
xchg
in
popa
mov
in
adc
cmp
fadds
test
data16
arpl
sbb
mov
xor
dec
xor
aaa
add
lock
mov
pusha
push
loop
pop
mov
mov
push
out
ja
pop
push
push
xor
add
and
pavgb
cmp
sbb
ljmp
ja
rclb
add
scas
stos
sahf
sbb
cli
sbb
out
test
push
aam
cld
jle
push
sub
mull
ret
jecxz
scas
addr16
addr16
mov
sbb
push
les
jb
mov
pop
fwait
pop
enter
add
sub
bound
stc
data16
adc
and
or
loopne
call
ljmp
das
scas
xlat
sub
dec
jge
sbb
xchg
pusha
jl
sub
lret
mov
ja
add
pop
and
xor
xlat
sbb
cmp
sub
movsl
add
in
bswap
loope
fnsave
jnp
in
scas
data16
pop
or
pop
pop
aaa
pop
mov
cs
nop
out
inc
xor
test
and
xor
or
and
lret
scas
mov
cmp
dec
jl
adc
jle
dec
cmc
xorb
adc
pop
lods
pusha
rcrl
test
xor
mov
dec
mov
pop
imul
dec
jb
dec
jnp
out
push
xchg
jmp
inc
repz
add
pop
int
bound
rorb
inc
mov
lock
rolb
test
mov
mov
in
mov
push
divl
lds
xchg
cmp
cmp
pop
inc
mov
xlat
pop
dec
and
stc
add
shl
int
stc
aad
and
xchg
into
xchg
shlb
sub
or
repz
dec
xchg
mov
or
aaa
sar
jg
out
dec
jns
add
mov
fadds
gs
mov
dec
jmp
stc
arpl
pop
out
stos
mov
in
lahf
add
clc
add
pusha
and
jae
dec
movb
scas
cmp
aad
jnp
bound
mov
pop
jge
rolb
aaa
repz
nop
sbb
sahf
push
jge
paddusw
out
lds
inc
loope
cmp
jmp
nop
push
dec
enter
xor
pop
mov
sub
sbbb
cmpsl
or
xor
dec
imul
pop
xchg
mov
cmp
loope
cmc
imul
dec
inc
add
dec
test
loope
pop
inc
std
dec
movsb
rorl
out
test
push
aam
pushf
sbb
in
fcoml
dec
pop
inc
push
lods
ds
add
dec
or
push
adc
xor
in
mov
dec
mov
movsl
mov
gs
push
jae
les
mov
imul
pop
and
dec
ret
js
xor
pop
dec
xor
mov
cmpsw
inc
pushf
jg
pop
xchg
xchg
inc
mov
ss
xorb
stos
pop
daa
cmpsl
jnp
icebp
das
xchg
dec
jae
adc
loop
xchg
out
push
daa
inc
out
outsb
out
push
fwait
mov
subb
leave
aam
mov
lret
sbb
lcall
sbb
add
xchg
sahf
xor
test
mov
pop
jo
push
mov
add
gs
jmp
xchg
fmull
mov
lods
add
cmc
mov
adc
pusha
xor
sub
jbe
push
inc
jecxz
out
jnp
sub
and
push
dec
pop
out
pop
iret
push
mov
repnz
jne
mov
mov
lea
inc
sbb
ret
faddl
push
arpl
mov
add
push
sub
ja
addr16
aaa
lods
ret
mov
sbb
xor
fimull
mov
sbb
pop
mov
incl
sbb
sti
xchg
or
cltd
clc
call
mov
out
aas
rcl
imul
addb
cmpsb
stos
cmp
pop
xor
sbb
cmp
lret
sbb
cmp
lods
pop
out
aam
daa
push
fxch
mov
jmp
repnz
shrb
or
ljmp
addr16
mov
mov
rorb
nop
cmp
movsb
push
sbb
je
int3
or
stos
mov
push
insl
repnz
mov
mov
xchg
and
pop
jl
mov
bound
icebp
xchg
add
pop
xor
lret
imul
mov
xchg
popa
aad
int
mov
test
pop
in
add
fistps
outsw
xlat
test
sti
fucomp
mov
out
push
addr16
push
addb
inc
cltd
push
cltd
das
ss
inc
leave
movsb
dec
xchg
mov
insl
cltd
push
popa
xorl
sbb
add
xlat
lahf
lock
xlat
or
mov
sbbl
fwait
bound
xchg
das
insb
into
sbb
repz
xchg
add
pusha
shl
add
test
out
xchg
sub
sbb
rclb
es
divb
push
adc
cmp
sbb
imul
call
inc
pop
adc
inc
sbb
jge
dec
pop
xor
and
cmpb
inc
imul
sbb
dec
lret
ds
idiv
cmp
cmp
pop
pusha
jmp
or
stos
sub
loope
ds
int
arpl
pop
add
mulb
cmp
ret
aad
loop
mov
and
pop
xchg
aad
dec
jb
ja
mov
repnz
shl
jp
andb
inc
jns
rclb
sub
rcr
jle
mov
cmp
test
pop
mov
test
cmc
push
adc
add
dec
pop
fs
sbb
xor
dec
or
lahf
out
mov
pushf
outsb
int3
adc
mov
shrb
push
sub
push
insl
ds
sub
in
push
imul
cld
inc
je
add
gs
sub
add
stos
cli
and
and
and
stos
mov
mov
cld
add
add
aaa
lret
jle
and
or
ffreep
clc
xchg
pushf
push
jmp
and
call
jae
lahf
jne
dec
add
jno
push
mov
jno
stc
inc
aad
hlt
gs
xchg
lret
mov
movntq
xchg
mov
cmpsl
xchg
movsl
loop
cmp
lods
cmp
fsubrs
jge
stos
popf
push
aas
loope
pushf
or
mov
in
inc
jp
mov
pop
mov
lock
dec
sub
mov
or
sti
fisubrl
mov
pop
dec
cmpsb
inc
iret
popf
outsb
jnp
insl
arpl
adc
lods
pop
xchg
sbb
outsl
and
push
mov
insl
rclb
add
movsb
push
loope
xchg
arpl
mov
popa
lret
jp
pop
push
pop
or
mov
stos
cmc
dec
dec
ret
in
pop
les
std
xor
mov
imul
imul
sub
cmp
mov
sbbl
js
push
push
mov
test
lahf
std
loop
inc
mov
div
dec
arpl
psrlq
cli
push
mov
push
gs
cmp
dec
or
inc
insb
cltd
bound
pop
enter
add
pop
push
sbb
cmpsl
dec
cltd
test
pop
add
pop
aas
inc
push
mov
inc
push
push
shrl
cmp
es
xor
jbe
sub
pop
mov
ss
mov
lea
or
out
mov
fnstenv
popa
testb
adc
inc
aas
mov
mov
xchg
clc
jp,pt
stos
xor
testl
in
or
dec
popf
push
pop
pop
fldcw
mov
push
loope
ljmp
inc
test
lahf
jle
lock
cmpxchg
dec
outsb
dec
int
rcr
sbb
mov
push
xor
or
loopne
sar
mov
sbb
mov
fidivrs
jmp
imull
mov
sbb
iret
jmp
or
mov
jno
movsb
mov
popf
arpl
imul
ss
inc
inc
fsincos
xor
insb
pop
out
push
movb
out
int3
mov
ja
repnz
mov
adc
fwait
inc
adc
lret
xor
push
adc
lret
adc
xchg
adc
sub
xor
and
add
sbb
fnstcw
mov
fiaddl
jmp
mov
imul
fnstsw
xor
jb
rorl
cmp
adc
xor
shll
pushf
push
sti
ja
jl
shr
ret
adc
mov
pop
push
dec
inc
push
mov
lds
sbb
cmp
dec
cli
jp
repz
aaa
pop
adc
sub
xchg
movsw
subl
sub
mov
imul
lods
gs
or
sbb
xor
mov
sbb
push
push
popl
dec
cmp
or
mov
lock
movsl
mov
test
gs
andl
add
sub
or
mov
dec
out
pop
adc
jge
lret
inc
scas
insb
inc
sub
lret
push
dec
pop
add
xor
mov
cmpsb
stos
loop
and
pop
cltd
dec
push
stc
movsl
fildl
mov
dec
das
add
jns
mov
insb
cmpsb
and
push
sub
test
jmp
cli
dec
cmp
test
loop
out
mov
icebp
mov
ret
stos
dec
jnp
xchg
jp,pn
out
lock
mov
sarl
pusha
in
scas
outsl
cld
addr16
inc
in
push
jb
das
jle
dec
aam
and
mov
lock
mov
into
fcomps
push
and
sub
xchg
jecxz
rclb
ret
pusha
imul
jmp
inc
jl
xchg
dec
adc
test
das
xor
cmp
push
jp
daa
icebp
hlt
aam
mov
jae
cld
jnp
test
cmp
int
or
jb
mov
gs
dec
jmp
hlt
sar
cmp
loopne
es
in
popf
cmp
js
pop
enter
jns
and
data16
addr16
lret
pop
test
aaa
or
fiaddl
out
mov
push
hlt
sub
ss
jno
arpl
fcmovnu
cli
fwait
sbb
push
pushf
addr16
xchg
cltd
stc
test
aad
adc
mov
insb
movsl
dec
in
push
faddl
lock
fildl
push
rolb
hlt
jecxz,pn
fistl
jne
jp
lea
mov
cmpb
dec
out
imul
insb
mov
cmp
adc
sub
push
enter
ds
je
and
mov
icebp
popa
or
xor
sub
repnz
daa
in
cwtl
aad
mov
push
push
mov
dec
push
dec
and
cmp
imul
push
pop
and
cmp
insl
push
ret
mov
or
ljmp
pop
cmpsb
jns
xchg
mov
data16
sbb
add
push
sbb
xor
push
movhps
insl
sti
test
inc
push
and
xor
mov
mov
pop
jae
notl
fxch
clc
cld
loopne
add
push
int
sub
outsb
sub
arpl
popf
dec
repz
in
stos
adc
add
inc
mov
cli
addl
nop
xlat
sub
int3
pusha
jge
ljmp
sti
cwtl
mov
shlb
and
xor
xor
int
push
into
xchg
test
ret
insb
jle
inc
in
in
sub
jge
fwait
js
popa
subb
mov
fwait
jmp
ret
or
inc
popa
aad
sbb
mov
out
fmul
fdiv
imul
or
lahf
lea
cmp
cmp
mov
lea
push
sub
jbe
rcrl
xor
xchg
pop
mov
sub
cld
cmc
leave
rorl
mov
sub
dec
xchg
test
cli
pop
fisubl
xor
pop
in
rcr
xor
fdivrs
jge
or
out
pop
lret
push
xchg
imul
mov
sbb
or
push
data16
fisubl
popa
hlt
jmp
lcall
aaa
dec
xchg
xlat
fistpl
paddusw
mov
in
mov
test
rorb
in
fcompl
pop
jo
add
leave
and
test
imul
mov
xor
mov
insl
cwtl
adc
adc
pop
inc
adc
or
sbb
sahf
push
mov
adc
sbb
dec
dec
outsl
sbb
fidivrs
adc
adc
push
daa
cmp
jg
or
les
jae
push
jo
gs
push
stos
pop
gs
pusha
aas
sbb
and
frstor
test
shlb
clc
adc
cmp
jnp
cli
test
inc
sbb
dec
insb
ja
add
xchg
mov
push
xchg
sbb
movsb
addl
es
sbb
xchg
hlt
repnz
jno
mov
stos
pop
add
bt
scas
adc
xchg
xor
fbstp
idivb
push
jae
mov
mov
inc
movsl
jmp
and
inc
cli
mov
sub
iret
addr16
aaa
in
fs
pop
lcall
push
xor
je
lret
xchg
movsl
adc
push
add
test
inc
sub
push
xlat
xchg
int3
cmp
fisubrl
pop
mov
mov
push
xchg
xchg
sbb
adc
sub
in
js
add
dec
adc
scas
aad
and
sar
cs
mov
rcrb
popa
lcall
and
jle
fisubrs
ljmp
lock
pop
loope
loopne
xchg
fdivrs
in
adcl
mov
xchg
popfw
out
or
movsb
sub
and
inc
and
leave
fstps
mov
push
movsl
mov
xor
stc
pop
and
dec
jl
pop
inc
and
shl
cwtl
imul
iret
adc
jg
xor
movsb
in
pushf
test
insb
push
shll
mov
adc
push
fidivrl
sub
xchg
push
push
xchg
pop
fildl
inc
es
or
int3
sub
pop
test
adc
into
cmpsb
test
jbe
jecxz
das
xor
sbb
sub
repnz
add
pop
in
dec
repz
in
jne
shrb
push
nop
add
jae
pop
mov
cmp
aam
test
jb
andb
cmp
mov
sbb
mov
xchg
or
andb
das
add
loopne
inc
jo
movsl
dec
push
stc
loope
adc
push
shlb
xchg
hlt
cmp
test
inc
andl
aad
inc
pop
push
sbb
sahf
or
mov
insl
push
dec
xchg
ret
bound
fidivs
sbb
stos
xor
mov
ja
jo
nop
nop
and
dec
xchg
iret
xor
fisubl
mov
movsb
movsl
mov
in
and
out
fs
or
lahf
fildl
rcrb
mov
jns
imul
push
push
cs
adc
sub
jp
sbb
dec
pop
push
add
pop
xor
mov
leave
lock
and
stos
or
icebp
cmp
loope
pop
ljmp
dec
jb
jmp
movsb
push
adc
push
rorb
cmp
cmp
lods
call
sbb
sbb
pop
jo
mov
stos
xor
dec
lahf
xchg
leave
dec
cmc
iret
lods
fnstenv
outsb
jl
pop
repz
icebp
xor
stc
push
push
mov
jns
pop
test
push
lcall
xor
jbe
je
mov
mov
jno
mov
mov
movl
fwait
mov
enter
pop
fldenvs
sbb
orl
pop
push
cld
jg
cltd
orb
pop
mov
iret
clc
xchg
dec
jo
int3
lods
fcomps
movsl
imul
xchg
sbb
loop
jo
rorb
push
aad
cld
loope
imul
adc
xor
das
imul
jmp
dec
popa
xchg
push
js
xchg
out
dec
das
lcall
imul
inc
insl
test
ja
daa
jnp
outsb
sbbb
dec
mov
pop
data16
gs
gs
into
push
out
insb
xor
mov
shrl
push
adc
sbb
mov
add
push
mov
shrb
sarb
imulb
in
cmp
rcrl
jae
inc
pop
sbb
pusha
dec
int
out
inc
std
xor
ljmp
push
shll
jae
sbb
nop
ja
jg
jmp
adc
xor
int3
in
inc
mov
push
mov
into
xchg
sahf
fdivrp
or
and
mov
dec
in
sbb
pop
inc
ljmp
xor
jmp
cmpsl
cmp
xchg
outsl
insb
je
add
pop
shll
sub
addr16
in
xor
fcomip
jle
test
lock
nop
push
jl
mov
pop
jmp
mov
int3
or
rol
out
pop
dec
stos
xchg
sti
xor
push
fiaddl
xor
or
fildl
leave
push
sarl
add
xchg
pop
std
push
inc
fcomps
dec
xchg
push
scas
mov
lcall
in
stos
repnz
xor
cmp
repnz
push
lret
lds
ficomps
inc
aas
inc
aas
jecxz
cli
out
inc
pusha
dec
fs
pop
insl
cmc
cwtl
hlt
push
inc
pusha
jecxz
movnti
mov
outsl
shr
gs
xlat
cmp
es
add
ja
cltd
in
lcall
sub
stos
cld
dec
repz
or
movsl
jnp
pop
xor
sub
push
sbb
mov
lods
fisttps
lock
dec
or
sub
rcll
xchg
mov
mov
adc
or
sti
lock
pop
outsl
dec
push
stc
std
jns
sub
cmp
pop
mov
xchg
test
das
xor
mov
sbb
leave
lods
mov
pop
inc
int
cmpsl
xchg
cmp
lret
pop
push
sbb
imul
scas
in
je
lcall
lcall
aaa
dec
push
mov
adc
imul
sbb
dec
inc
xchg
dec
mov
scas
scas
rcr
push
lahf
or
inc
fmul
push
or
lds
jnp
or
cmp
and
lods
sub
push
add
sahf
rclb
ss
cmpsl
imul
repz
or
sbb
loopne
jnp
xchg
or
jae
mov
in
aaa
lods
cmpsl
push
cli
popa
popl
popf
add
push
fsubrl
sbb
cmpb
fs
and
leave
sub
cmp
and
lahf
cwtl
arpl
dec
cmp
loop
add
pop
in
jmp
push
jmp
outsb
cmc
jnp
or
in
es
adc
jecxz
call
add
add
lods
mov
into
push
pop
jle
mov
mov
outsb
jae
insl
pop
addr16
push
mov
test
mov
addl
js
inc
loope
scas
rolb
int
add
push
dec
or
cmp
insl
cltd
xchg
jg
dec
sub
dec
inc
shll
xchg
adc
jnp
lea
dec
add
shr
jge,pt
xchg
dec
lcall
or
fsts
in
inc
out
xor
pop
adc
and
test
mov
dec
inc
xchg
popa
inc
mov
rclb
cli
fidivl
out
jmp
adc
mov
xor
push
aaa
inc
scas
stos
pop
and
push
push
lret
or
in
xchg
jg
xchg
cs
add
and
aad
std
fisubl
and
mov
int3
dec
scas
stos
fnstsw
inc
out
popf
xor
out
mov
repz
mov
js
pushf
sti
xchg
pop
xchg
std
adc
mov
cltd
sub
pop
outsb
inc
dec
pop
pop
dec
mov
xor
loop
mov
insb
fdiv
push
enter
and
and
insl
inc
dec
les
xor
fldcw
sub
ja
aaa
mov
or
outsl
push
mov
push
mov
mov
std
pop
outsl
and
push
bound
test
mov
std
jge
stc
call
xor
int
rcl
sbb
ljmp
cld
mov
data16
iret
cmp
insl
fs
mul
pop
and
mov
mov
mov
mov
mov
dec
stc
pavgw
ret
mov
ret
call
jge
cmp
stos
nop
popf
gs
and
mov
inc
cs
fisubl
in
pop
outsb
dec
aaa
test
mov
push
les
cmp
in
ljmp
xchg
adcb
addl
popf
mov
scas
adc
pushf
lock
push
in
testb
adc
xlat
pop
push
and
fdivrl
je
stos
scas
lds
add
push
add
bound
pop
fisttps
addr16
lahf
in
jecxz
sub
dec
or
ljmp
xorb
jecxz
or
nop
mov
xor
sar
pop
lret
mov
jge
shrl
pushf
pop
and
in
inc
jmp
dec
inc
pop
aaa
fdivs
add
int
jno
inc
jne
rcr
inc
adc
outsb
or
lds
sti
and
test
ds
fs
mov
ja
mov
inc
mov
inc
adc
or
fisubl
or
sub
aad
jo
fildll
mov
repz
jle
xchg
cmp
addr16
repz
push
lcall
adc
adc
push
fdivrs
add
xchg
bound
jmp
cmp
jno
mov
rorb
lods
mov
push
mov
in
rolb
gs
add
gs
les
out
pop
inc
ret
fistpl
mov
jl
mov
into
inc
sub
cmp
xor
jae
fdivr
jp
or
pop
jo
push
adcl
repz
clc
dec
push
cmp
ret
inc
mov
cmpxchg
js
mov
add
stos
xchg
ds
icebp
adc
xchg
sub
xchg
scas
fs
inc
xchg
cmpsb
mov
add
jp
dec
dec
add
repz
mov
adc
mov
and
lea
jns
inc
sbb
jae
sub
xchg
xor
imulb
stc
cmc
adc
push
mov
jmp
fnstsw
fadds
gs
test
xchg
mov
cld
pop
xchg
stos
sti
jp
cmc
cmpl
aad
std
sbb
std
inc
insl
sub
out
arpl
add
ret
ja
pop
mov
mov
rcrb
fidivrs
in
outsl
sbb
scas
push
ja
or
cmp
dec
mov
and
inc
aas
mov
sbb
mov
sbb
adc
sub
push
mov
mov
into
ljmp
jecxz
repz
sub
xor
push
pop
jecxz
push
add
dec
push
loopne
hlt
jo
and
gs
lds
sbb
xorl
out
xor
scas
nop
inc
pop
mov
mov
inc
jno
cli
jmp
cld
dec
xor
idivb
aam
jno
push
mov
push
arpl
imul
test
jne
dec
xor
sub
and
das
dec
lock
loop
js
add
pop
sub
sub
jae
pop
les
rclb
inc
ljmp
push
fidivrl
loop
mov
ret
push
mov
out
jns
lcall
movsl
scas
sbb
ljmp
sbb
dec
xchg
cmp
jae
aad
mov
jecxz
mov
js
xchg
pop
push
insb
mov
jne
inc
lock
xchg
lcall
xor
or
mov
xchg
daa
andl
add
hlt
mov
leave
out
jle
sbb
jb
push
inc
jge
sbb
div
cli
lods
movsl
adcb
aam
sub
or
loopne
imul
js
icebp
push
test
jmp
cld
push
mov
ret
add
push
xor
sub
call
pushf
xchg
stos
pop
and
orb
xchg
repnz
fisttpl
or
imul
leave
ret
xchg
adc
mov
fildl
lods
lret
pop
cmpsb
dec
xchg
or
in
nop
outsl
jle
adc
std
jge
into
xchg
mov
sbb
jmp
fmull
xor
cs
xchg
or
xorl
pop
pop
mov
xchg
ljmp
lcall
dec
ret
negb
adcb
jl
icebp
int
mov
out
cmp
xchg
popf
popf
cmpsb
push
mov
cwtl
sbb
call
push
jo
stc
orb
imul
out
mov
out
push
add
out
jb
jnp
add
aaa
pop
repz
aaa
jp
in
std
inc
inc
loope
inc
xchg
rcll
pop
pop
aas
and
xor
mov
sahf
mov
xchg
adc
jmp
clc
in
sbb
inc
aaa
inc
xor
clc
int
xchg
cmpsl
inc
xor
jno
mov
popf
jl
imul
inc
or
sarb
sub
jecxz
lods
xchg
inc
scas
and
fcomps
imul
add
sti
sbb
fwait
jno
loop
push
sub
push
rcrl
mov
pop
mov
out
xor
in
test
jns
ret
out
loopne
arpl
xchg
mov
pop
xchg
mul
sti
push
add
inc
sti
mov
out
mov
add
cmpsl
emms
test
pop
addr16
cmc
movsb
mov
rcr
mov
rcl
adc
xchg
xchg
dec
sbb
inc
add
inc
mov
nop
es
mov
or
xor
les
ficoms
xchg
push
push
xorl
mov
inc
pop
movsb
cs
lods
dec
subb
filds
dec
lock
test
ret
ret
lods
mov
test
xorl
rorb
out
jp
add
mov
sbb
aam
inc
cmc
cmpsl
push
std
xor
sahf
cmp
movsl
inc
xor
scas
mov
lret
shl
dec
push
sbb
jge
push
lods
insl
or
or
sub
cs
pop
out
and
cld
jl
cli
mov
xor
ds
xchg
ret
adc
jo
push
sahf
xchg
jns
jl
jbe
loopne
inc
sahf
jmp
leave
jns
push
dec
mov
adc
jno
sarl
int3
fildl
cmp
into
inc
sbb
add
fwait
mov
jl
dec
scas
jno
idivb
push
push
popf
iret
push
push
adc
push
stos
test
mov
cmp
inc
mov
fadd
inc
pop
in
push
xor
sbb
fidivrl
push
les
and
dec
and
mov
addb
outsl
jae
adc
mov
ja
in
jno
movsl
dec
lret
addl
mov
insl
jae
xor
lods
mov
nop
dec
push
mulb
repz
shll
mov
stos
or
xchg
repz
in
fsubrl
xor
adc
adc
mov
jb
or
fsubrs
mov
inc
adc
ja
jnp
mov
cmp
mov
mov
push
pop
or
sbb
lcall
jle
pop
xchg
mov
mov
cltd
add
decb
xchg
jne
popf
cs
inc
cmpsl
fisubrs
cmp
pop
jg
lock
sbb
les
test
fwait
jecxz
pop
lods
mov
nop
rorl
mov
inc
sub
sub
dec
jmp
popf
inc
or
adc
nop
add
xchg
test
sbb
sbb
push
and
mov
outsb
les
dec
mov
cmc
in
xor
lcall
fwait
xchg
inc
mov
dec
cmpsb
shlb
mov
cmpsb
fdivrs
ds
inc
sbb
xor
jb
lea
jae
mov
inc
aaa
movsl
fsubl
xchg
ret
sub
repnz
jmp
daa
movsb
pop
push
decb
lret
out
sub
inc
mov
sub
lret
push
add
frstor
jne
pop
je
sti
add
out
std
mov
push
sub
push
in
pop
mov
lea
cs
cs
push
jmp
repnz
sbb
jg
insb
mov
pop
popa
insl
pop
jge
add
and
xchg
nop
rcrl
mov
pop
sub
cmp
aam
enter
fucomp
xchg
mov
mov
push
xor
adc
les
in
or
outsb
sbb
out
cmp
jmp
out
aas
rcr
lods
pop
rorb
adc
imul
sbb
out
jl
xchg
movsl
jnp,pt
movsl
and
jg
dec
adc
mov
lods
subl
loop
frstor
cmp
fisttps
andb
lds
jae
bound
aaa
daa
dec
lea
jns
mov
pop
lret
aaa
xor
and
addr16
ds
gs
les
cmp
xor
xchg
sub
icebp
ret
fs
jp
enter
dec
std
xor
fucomp
fsts
lret
jae
movsb
lds
das
lcall
and
sahf
shl
out
xchg
es
mov
mov
test
cmpsb
out
push
cmp
cltd
push
sbb
pop
pop
cli
int
jge
cmp
mov
sub
jle
xlat
fists
ret
test
in
or
inc
push
xchg
out
out
mov
clc
or
or
aad
mov
cli
push
xchg
adc
inc
rolb
inc
shr
mov
ss
fildl
mov
sahf
insb
cmc
lea
jmp
ja
mov
or
cld
test
ljmp
enter
lahf
dec
rorb
pop
dec
and
movsl
rcrl
inc
xchg
out
scas
xchg
pusha
repnz
fsubrp
jne
popl
movsl
add
jmp
cmp
mov
test
cmp
xorl
xor
mov
sbb
gs
dec
mov
cmp
lret
dec
enter
push
mov
out
mov
push
adc
add
data16
and
lahf
mov
push
dec
push
push
stos
jecxz
cmp
push
jb
cmp
push
cwtl
aas
aam
imul
aam
ljmp
fcoml
faddl
in
inc
fidivrl
sbb
mov
rcrl
push
sub
rcl
lods
sub
popf
int3
fdivrs
pop
xchg
nop
and
in
xchg
clc
stos
aam
pop
insl
je
dec
fwait
cs
mov
repz
loop
mov
push
push
dec
loopne
add
inc
ss
gs
xchg
mov
fxch
out
sub
imul
jg
fidivl
mov
loopne
mov
mov
int
es
gs
dec
fsubs
lcall
imul
outsl
xor
xchg
shll
jl
jo
jecxz
push
in
sub
mov
lock
jmp
lret
lret
push
setne
pop
xlat
dec
dec
sarl
cmpb
in
dec
test
mov
push
out
jg
outsb
pop
or
not
sbb
or
cmp
fdivrp
add
int3
pop
mov
adcb
mov
movb
aas
fwait
sub
test
xchg
xor
cmp
jbe
flds
mov
lea
inc
add
mov
push
inc
xchg
push
xchg
scas
in
push
add
sti
stos
cmp
ret
dec
push
mov
xor
jbe
mov
stc
int
or
dec
mov
mov
mov
sbb
shll
outsl
daa
stc
movsb
xchg
jmp
shr
dec
sbb
fwait
hlt
jle
stos
loope
sarl
jmp
aad
inc
mov
repz
mov
mov
mov
addr16
add
lahf
lock
lds
dec
cltd
incb
fdivl
pop
mov
mov
cwtl
insl
enter
pop
adc
fcmove
push
jno
xor
mov
dec
rolb
ds
push
fiadds
cmp
jecxz
fneni(8087
mov
pop
mov
adc
pop
jmp
setg
sub
inc
inc
je
sbb
test
pushf
stc
lea
push
or
jp
imul
pop
or
jne
pop
dec
or
and
mov
xchg
aas
push
out
aaa
arpl
push
scas
inc
stc
dec
aas
es
outsb
jae
inc
imul
divl
scas
pop
bound
xchg
mov
mov
push
dec
loopne
test
lods
aas
mov
outsb
ret
mov
sbb
jo
jecxz
push
bound
rorl
out
fisttpl
lods
sbb
ret
pop
sbb
ret
fstl
inc
mov
lock
ja
push
xchg
shrl
jecxz
and
adc
jl
jecxz
imul
out
mov
cmpsl
cmp
xor
movsb
pop
sbb
aam
xchg
test
adc
or
shll
aad
sbb
imul
cs
insl
adc
pop
cmp
addr16
cmpsb
sbb
sub
push
push
nop
xchg
lods
mov
push
mov
mov
mov
loope
mov
ret
lahf
add
loope
lahf
std
out
push
mov
inc
xor
call
mov
mov
mov
or
xchg
arpl
jg
mov
cld
cltd
xchg
stc
push
cld
mov
mov
popa
outsl
jecxz
idivl
xlat
idiv
pop
adc
clc
mov
js
ret
or
dec
jecxz
sub
stos
push
or
xchg
nop
inc
lahf
push
push
mov
inc
xor
outsb
cmp
bound
mov
cmp
and
add
arpl
popf
cmp
repz
hlt
outsb
jge
xrelease
mov
xchg
call
xor
loop
jge
cld
mov
outsl
leave
sub
clc
cmp
mov
jnp
mov
vpmacssdql
scas
mov
mov
adc
out
adc
adc
sbb
jns
daa
mov
lret
sub
fdivl
jecxz
add
clc
push
dec
and
loop
pop
call
xchg
std
inc
mov
sbbl
pop
popf
in
cmp
mov
scas
cli
xor
fsubs
xchg
loopne
inc
in
mov
mov
jno
push
int3
xchg
sahf
push
mov
pop
pop
push
test
jae
ja
and
ja
push
cs
xor
cs
push
aas
fwait
nop
hlt
mov
andl
sbb
jbe
and
lods
movsb
jecxz
jo
and
xchg
stc
xor
lods
xchg
ljmp
inc
mov
adc
imul
inc
mov
jg
pop
sar
mov
pop
mov
sti
dec
mov
and
sti
mov
mov
sub
adc
in
cs
pushw
xor
int3
mov
icebp
lcall
aas
loopne
mov
je
fmul
add
test
rolb
sahf
icebp
dec
das
push
adc
xchg
ljmp
xor
jecxz
inc
add
xor
addb
leave
mov
dec
sub
sub
pop
mov
xor
lods
xchg
push
imul
dec
jmp
sahf
lahf
pushf
xchg
mov
pop
stc
add
lds
push
adc
insb
lret
pusha
psrlw
testb
push
and
inc
mov
mov
fdivrs
sbb
int
xchg
ret
dec
jno
imul
cmp
add
adc
repz
pusha
cmpsl
hlt
pop
lock
mov
jo
jl
jo
mov
pop
push
pop
sub
push
out
cmp
mov
je
push
sbb
ds
jns
or
int
push
ss
shrb
sbb
mov
scas
hlt
sbb
shll
lds
lds
dec
shl
ja
xor
stos
mov
shll
xor
stos
in
stc
adc
rcll
movsl
dec
mov
mov
imul
fdivrs
into
jno
xlat
push
hlt
int
lea
stos
fmuls
xchg
adc
pusha
cmovo
lea
lret
or
cmp
lret
scas
fimull
dec
xchg
lahf
daa
aaa
jmp
and
mov
clc
fmuls
adc
rolb
cmp
pop
mov
mov
sbb
fwait
bound
sub
add
lret
push
lea
xchg
mov
int3
sub
jmp
sub
mov
and
js
add
and
or
fnsave
cmpsl
jo
jbe
out
dec
sub
int3
cmp
mov
insl
enter
xor
cmpsb
inc
adc
add
cld
and
add
mov
xor
push
sub
insb
sti
xchg
xlat
pop
jo
nop
inc
and
movsb
flds
mov
lahf
cmp
out
mov
pop
and
cmpsb
test
sub
mov
and
adc
out
cli
inc
fwait
jne
ljmp
dec
jge
test
jmp
push
leave
push
jae
mov
hlt
xchg
movsb
jno
add
inc
mov
lods
fsubr
mov
lret
inc
jo
and
test
enter
fs
cltd
and
dec
pop
roll
xorb
jmp
jns
and
ja
jno
xchg
jge,pt
push
push
or
push
add
rorl
push
and
setl
into
rclb
and
push
mov
pop
sub
scas
movsl
inc
scas
or
xor
push
adc
xor
call
shrw
mov
and
outsb
ret
and
sbb
mov
fldpi
test
addl
cltd
popf
xchg
add
mov
lret
in
stos
ljmp
mov
lock
stos
fadd
inc
std
loop
mov
push
daa
out
scas
jge
rcr
aad
add
dec
xchg
xchg
imul
xchg
pop
jecxz
mov
push
mov
mov
aaa
repnz
pushf
inc
fldenv
das
shrb
jecxz
mov
cmpl
jb
arpl
dec
jl
dec
xchg
es
mov
es
jae
int
dec
rcrb
in
and
mov
and
addr16
dec
popa
clc
or
mov
mov
ds
pop
stc
rolb
push
or
dec
ja
lock
addr16
jno
test
or
mov
lods
les
test
xchg
adc
imul
sahf
dec
inc
xchg
mov
push
les
xchg
inc
adc
xchg
movsb
jno
adc
lods
pop
or
mov
mov
add
gs
or
mov
add
clc
subl
mov
adc
pop
aad
aam
dec
cmpsb
je
fdivrs
shrb
mov
sub
bound
jl
stc
xchg
or
test
or
pop
and
lret
in
push
outsl
mov
cmp
push
xlat
xchg
out
push
lret
push
popf
sub
out
adc
repz
inc
adc
jge
int3
imul
fcomps
pop
push
mov
test
adc
xor
or
mov
aam
clc
enter
sbb
idivl
pushf
outsb
jmp
in
pop
fiaddl
pop
mov
mov
hlt
mov
pop
loope
or
ja
lods
adc
xor
mov
xchg
shll
aam
adc
insl
dec
lock
inc
jmp
push
or
pop
xor
lret
mov
mov
je
xchg
pop
mov
lret
hlt
add
lcall
stos
push
out
addr16
jo
aas
inc
adc
lahf
push
dec
xchg
divb
mov
mov
jmp
fsubrl
mov
inc
dec
pop
ret
int
or
jge
or
pop
dec
cmp
mov
mov
jno
ljmp
fsubl
xchg
decl
inc
cmp
adc
jnp
pushf
mov
dec
clc
xchg
push
mov
movsl
jle
xchg
int
jo
mov
pop
xchg
gs
and
add
sti
cmpsl
std
sbb
jmp
shrb
jg
dec
pop
popf
and
mov
lock
pop
push
adc
lahf
xchg
loop
out
adc
sbb
and
clc
sub
mov
hlt
mov
and
mov
pop
ds
loopne
sub
or
inc
add
add
mov
adc
aaa
mov
inc
int3
sbb
loop
fwait
cltd
add
scas
divb
arpl
sbb
imul
mov
or
aam
xchg
js
pop
inc
shlb
pop
xor
cmpsl
pusha
jo
decl
test
or
inc
clc
cmp
insb
cmp
xchg
loopne
xchg
packssdw
addr16
push
and
out
push
cmp
addr16
and
or
test
imull
aam
imul
ds
mov
adc
and
clc
popf
ss
insl
adc
xor
insl
test
cmp
xchg
xor
mov
and
scas
fstps
ljmp
scas
inc
test
inc
push
push
enter
xchg
and
es
xor
aam
mov
mov
inc
mov
div
les
pop
mov
in
repnz
fistpll
lret
inc
or
dec
lea
jmp
xor
cmp
jno
push
add
xchg
push
xor
mov
xchg
inc
lods
dec
hlt
xchg
shlb
mov
rcrb
int
xchg
mov
movsb
adc
xchg
or
adc
je
testb
outsb
jb
lods
mov
xchg
fisubrs
mov
inc
cmp
repnz
mov
xchg
addr16
popf
pusha
popf
dec
xchg
packuswb
fcoml
pushf
mov
fidivrs
je
jg
fs
mov
notl
inc
or
push
test
cmpsb
faddp
push
jmp
rclb
aaa
xchg
repnz
aaa
and
push
sub
rorl
rclb
mov
xchg
mov
scas
xchg
adc
mov
cmpsb
and
adc
jge
js
ss
incl
add
loop
jae
stos
inc
mov
aaa
cmp
pop
push
adc
cmovs
cmp
cli
mov
roll
push
into
int3
repz
scas
cmp
roll
aaa
mov
xchg
and
mov
mov
cltd
mov
jae
push
jb
in
cmp
nop
xchg
mov
xchg
leave
xorl
or
in
jnp
jne
pop
sub
xchg
js
and
je
daa
add
iret
mov
pop
outsb
xchg
mov
ds
xor
dec
iret
mov
add
fwait
mov
dec
and
mov
cwtl
fs
sub
mov
popf
leave
std
sub
or
xlat
lods
rcrb
ret
mov
or
pop
or
cmpsb
add
pushf
mov
stos
rorb
fiaddl
or
aaa
fs
push
in
mov
mov
jle
mov
dec
repnz
out
push
add
aam
sbb
pop
inc
add
mov
ljmp
repnz
mov
dec
push
mov
addr16
push
jl
push
lea
jae
add
dec
icebp
movsb
push
loope
aam
jno
mov
pop
repz
lea
sbb
xor
push
rcll
jns
inc
push
or
std
jp
cmpsl
out
mov
jno
sbb
popa
sbb
push
aaa
cmp
or
movsb
mov
ret
adc
out
stos
adc
mov
sbb
dec
push
inc
test
popf
xor
sbb
inc
pusha
lods
sub
add
push
sbb
gs
inc
in
push
frstor
out
adc
jbe
mov
into
push
jg
sub
jmp
add
mov
jp
dec
clc
or
pop
into
seto
lahf
lods
stos
jg
sub
mov
dec
add
std
cmp
dec
jae
sbb
aas
cmp
out
or
dec
lods
lretw
and
inc
xor
push
pop
xadd
jb
in
sbbb
push
add
lods
sub
sub
pop
or
ror
mov
push
fcmovb
push
and
movsb
cmp
inc
adc
fcmovnu
mov
jne
or
out
jle
rcrb
and
xor
pusha
jnp
jae
shlb
gs
jmp
add
xlat
aaa
push
cmp
sub
dec
dec
ja
mov
push
rorb
arpl
pop
in
sub
xor
jnp
cli
push
xchg
lock
in
int
push
fcmovnu
jecxz
mov
mov
or
push
xchg
out
in
pusha
cld
sbb
nop
fcmovnbe
mov
gs
mov
scas
mov
mov
movsb
mov
mov
mov
jns
aad
sti
push
call
out
loopne
cmpsb
mov
mov
jge
sbb
int3
outsl
les
mov
push
pop
push
int3
dec
jbe
decb
mov
fcomps
adc
mov
xlat
pop
scas
fcompl
popa
inc
mov
outsl
sbb
or
insl
pop
fwait
rcll
xorb
fisubrs
stc
dec
and
insl
push
mov
pop
test
cmp
shlb
xorb
and
in
jg
jb
push
das
pop
push
ret
movsl
mov
filds
in
cltd
jecxz
or
sbb
cs
pop
sbb
ret
mov
test
mov
lret
jle
enter
pop
lock
imul
add
rep
xor
fists
adc
dec
cmp
dec
xchg
es
or
push
daa
insl
sbb
jne
adc
iret
das
and
loop
ret
sarl
or
repz
jae
aad
iret
sbb
cmp
pop
add
leave
xchg
push
push
xchg
call
dec
sbb
add
lcall
mov
aam
push
xor
and
shll
mov
push
stc
out
mov
dec
push
pop
out
xlat
jl
inc
push
push
cmpsl
xor
bound
pop
andb
add
mov
xchg
and
pushf
sarb
push
jge
pop
xor
dec
lods
push
pop
lods
lahf
mov
adc
and
shll
fneni(8087
jnp
or
mov
enter
dec
imul
lock
fidivs
addr16
mov
push
jmp
stc
and
jg
out
repz
imul
or
adc
mov
insb
ss
mov
push
aam
jns,pn
shll
ds
mov
fstpt
in
les
sub
in
aas
test
mov
push
push
pop
cwtl
sub
pop
outsb
and
imul
es
add
int3
stos
lahf
popa
push
jbe
push
cmp
cmp
aaa
or
pop
cmp
sub
fsts
rorl
movsb
jno
inc
subl
clc
out
repz
add
outsb
out
rep
mov
imul
je
jp
lret
cli
sti
sbb
cs
ds
add
lock
imull
xlat
lcall
sti
lahf
push
das
pop
cmp
sub
push
scas
test
dec
popf
xor
outsl
xchg
mov
psubusw
insl
mov
stos
xchg
xchg
into
and
sti
jp
mul
loope
cld
cmc
jmp
stos
test
mov
movsl
lea
je
scas
jmp
ror
stc
xor
or
in
pop
out
call
ds
fwait
sub
dec
fistl
xchg
sbb
cmpsb
push
sbb
and
lods
jg
pop
outsl
movsl
xor
jp
mov
outsb
push
sbb
es
repz
mov
or
dec
sub
jb
cltd
je
adc
pop
mov
adc
in
cwtl
and
and
add
push
add
hlt
adc
fwait
leave
icebp
xchg
mov
test
cli
or
cmp
push
mov
mov
pop
push
adc
mov
inc
xchg
adc
add
mov
stos
in
addr16
xchg
xor
cld
jmp
popf
or
lock
jae
or
addr16
sub
add
loope
int3
jae
fwait
xchg
dec
idiv
pop
cltd
cmc
cmp
aad
jnp
jbe
fmull
mov
inc
js
sub
jbe
sbb
push
in
jl
push
fsubs
out
scas
stos
add
out
xor
sbb
jmp
and
into
mov
jne
loop
clc
lcall
sub
cld
jmp
add
push
pushf
lcall
or
xchg
or
stos
aas
insl
push
test
cmp
stos
mov
dec
das
jle
fsubr
gs
stos
in
lret
jmp
lods
aaa
pop
adc
lcall
stc
dec
lods
add
repnz
inc
push
sub
cwtl
mov
out
shlb
mov
inc
inc
sahf
leave
sbb
mov
mov
push
cmp
rcr
mov
movsb
je
rclb
outsl
repz
xchg
lods
push
inc
cmp
mov
cmp
pop
test
dec
movl
sbb
mov
cmp
xchg
mov
sub
lahf
jae
xor
inc
ret
adc
adc
push
rcrb
mov
pop
enter
pop
iret
inc
inc
and
cmp
jecxz
mov
insl
hlt
nop
mov
loopne
into
xor
enter
jnp
xchg
fcmovne
dec
sub
pop
mov
mov
cmp
in
les
call
jbe
mov
xchg
xor
jnp
insb
rcrl
jecxz
cltd
imul
pop
mov
out
ficoml
insb
cmpsb
jmp
push
sarb
xchg
out
testb
push
pop
sbb
mov
pop
sbb
stos
iret
fucomi
xchg
jbe
lock
add
je
cmc
jb
dec
add
add
inc
cltd
pop
nop
push
inc
les
aam
lcall
sub
iret
xor
scas
add
mov
pusha
push
loopne
adc
pop
scas
arpl
imul
addb
jmp
sbb
pop
fs
sahf
add
sahf
and
lea
jecxz
sbb
in
int3
daa
out
adc
xchg
mov
sub
adc
add
mov
stos
sub
scas
pop
xchg
lods
and
inc
clc
das
sub
outsb
fstpl
push
sbb
fmuls
mov
jg
inc
xor
mov
jl
daa
sbb
lahf
leave
fimuls
sbb
mov
in
scas
insb
pop
aad
or
divb
pop
leave
and
and
outsb
pop
hlt
ror
push
inc
es
push
sub
fwait
cli
push
and
loopne
js
out
nop
loop
fcomi
gs
dec
pop
sub
fdivrl
add
cli
and
mov
loopne
adc
jge
and
xchg
imul
jno
push
pop
iret
push
jae
xchg
stc
xchg
sbb
out
stos
jo
jp
mov
stos
pop
add
mov
aad
jae
mov
xchg
jge
nopl
loopne
sbb
loopne
jne
mov
inc
loop
call
adcl
shrl
mov
or
sub
es
or
jl
mov
adc
je
je
pop
mov
jae
inc
test
and
in
decb
xchg
jp
mov
fisubs
int
test
fcoml
outsl
pop
aaa
movsb
dec
shl
lock
and
insl
push
and
push
in
neg
and
test
jl
aad
pop
fisubrl
fcompl
pop
shrl
nop
outsl
shr
inc
sti
pop
dec
adc
mov
vpcmpgtd
rcr
add
cmpsb
inc
sbb
testb
xor
sbb
shlb
jecxz
cmpsb
out
hlt
cltd
add
repnz
xchg
out
or
arpl
sub
out
addr16
bound
pop
mov
push
dec
es
mov
jmp
in
insl
xchg
xor
sti
mov
nop
out
jne
pop
pop
lcall
jo
xor
ja
outsb
outsb
cmp
in
aad
loopne
push
dec
lods
adc
pop
mov
xchg
shll
jae
stos
xor
pop
jns
outsl
add
push
sti
xor
xor
push
in
in
lds
test
xor
sbb
sub
jno
sbb
std
adc
aam
pop
sbb
lock
je
hlt
out
out
xor
xchg
div
stc
jne
mov
jns
mov
sbb
aas
repnz
ret
in
test
xlat
gs
adc
lock
xchg
sbb
xchg
imul
jns
add
jne,pn
outsb
jno
rcrb
arpl
lods
push
xor
xor
adc
push
and
pop
cli
sahf
mov
rep
jo
int3
stos
jno
jnp
inc
outsl
and
mov
lods
test
in
cmp
push
push
inc
or
sbb
push
repnz
out
jmp
lahf
lods
push
out
or
aam
pop
and
inc
call
or
pop
jle
xor
pop
mov
pushf
pop
xor
sbb
test
nop
pop
sub
in
outsl
mov
xlat
cmp
rcl
orb
jne
inc
add
arpl
pushf
addr16
clc
setb
call
in
mov
int3
push
jbe
pop
xor
data16
sbb
das
push
cs
dec
or
in
icebp
jne
ja
jne
pusha
sub
mov
stc
push
adc
inc
add
cmp
add
xchg
mov
int3
jg
jbe
push
roll
cmp
sahf
dec
and
push
push
xchg
lds
add
pop
or
out
inc
or
push
cmp
mov
std
inc
in
adc
xchg
or
adcb
fildl
push
or
cmpsl
movsl
xor
sbb
aad
in
lods
arpl
mov
js
sub
movsl
fmulp
out
or
mov
dec
out
xor
mov
or
sub
or
dec
xchg
sub
jne
aas
adc
mov
mov
into
cld
cmp
jnp
cmc
or
sarl
inc
sbb
test
sbb
out
in
or
sbb
lods
xor
sarb
or
fstps
in
add
pop
repz
std
roll
nop
ror
mov
pop
in
nop
push
imul
cmp
push
mov
outsb
popa
push
push
inc
adc
adc
adc
lcall
adc
outsl
lods
mov
subl
insl
push
mov
lea
jmp
dec
hlt
mov
jmp
out
sbb
stc
into
dec
pop
imul
jne
cmc
xor
xchg
fcomip
dec
lods
lahf
mov
and
mov
mov
cli
pop
sub
sub
into
push
in
push
push
pop
ret
inc
mov
xor
arpl
stos
adc
mov
mov
jo
and
stos
rclb
sbb
push
fcmovu
xor
cmp
outsl
mov
push
push
in
fsubs
jmp
sub
inc
loop
hlt
dec
in
imul
mov
bound
jge
fisttps
nop
clc
mov
rol
and
add
adcb
loope
imul
inc
das
xchg
int3
movsb
jge
xor
and
jl
jmp
jo
out
gs
testb
addr16
test
stos
xor
data16
lcall
imul
test
daa
sub
pop
push
ret
mov
les
cmp
xor
scas
scas
movsb
xchg
dec
sub
add
sub
fdiv
movsb
jno
sub
pushf
loopne
and
outsb
fisubrl
push
orl
xchg
les
xor
add
or
jo
sub
dec
add
mov
pop
add
mov
pop
in
gs
adc
pop
or
xchg
outsb
jl
int
mov
dec
mov
lret
mov
das
xchg
inc
inc
and
jae
xchg
movsl
in
mov
jne
popa
sbb
out
jnp
ss
push
into
lods
sub
cmc
push
cmp
ret
xchg
imul
js
lods
popa
sbb
std
int
and
jl
vpermi2ps
jno
add
ss
lret
inc
cmpsl
pop
cmp
mov
sti
add
sbb
ret
sbb
stc
andl
popa
mov
in
dec
stc
out
pop
jb
sar
xchg
aas
nop
push
outsb
push
and
pop
xchg
inc
mov
and
stc
xor
and
ds
mov
shrb
lock
dec
hlt
mov
dec
inc
scas
jge
test
js
stos
movl
push
xchg
lret
sub
mov
leave
dec
stos
pushf
clc
adc
sbb
mov
and
rorl
mov
xchg
fiadds
imul
rorl
mov
or
add
inc
mov
push
sahf
jle
cmp
fimull
mov
outsl
filds
es
cs
pop
nop
xor
cmp
gs
and
mov
push
sub
fs
inc
pop
fnstenv
or
out
mov
and
jge
sbb
xchg
jne
dec
pushl
push
cmpsl
mov
pop
jns
pop
and
push
out
mov
bound
sub
js
mov
xchg
mov
out
lods
jb
sbb
sbb
inc
ds
mov
stc
pop
leave
add
stos
aaa
jns
xchg
add
popf
loope
dec
roll
push
subl
fcoms
mov
push
pop
js
pusha
xor
mov
xchg
ljmp
aad
outsl
rcll
fmulp
insb
dec
inc
jbe
cmp
push
or
orl
lds
cmc
cmp
jmp
shll
sub
gs
push
xor
outsb
sbb
es
mov
jge
sbb
decb
mov
mov
cmp
rolb
repz
les
test
fidivs
bound
cltd
sbb
pop
jmp
fstps
fistpll
jb
jecxz
cmp
mov
xchg
xchg
sub
jle
test
adc
les
inc
push
loop
pop
sub
or
cmp
daa
ficompl
adc
push
addr16
or
call
jbe
jo
jnp
pop
gs
loop
jg
xchg
fucom
movsb
test
imul
push
sahf
adc
xchg
cmc
jecxz
pop
lods
or
cmp
mov
cmc
sti
xchg
ja
jbe
imul
fidivl
adc
shlb
push
dec
mov
mov
les
mov
mov
lea
jl
scas
push
in
notb
inc
std
push
jg
out
mov
xchg
and
jno
decb
jo
lret
or
fsubl
in
dec
ljmp
pop
jnp
gs
pop
outsl
lock
aaa
inc
mov
adc
arpl
fcoms
jmp
das
lods
jnp
jmp
sub
mov
and
pop
jp
mov
in
fs
mov
lods
fldcw
sub
mov
xchg
xchg
out
adc
jl
or
sub
aaa
mov
shlb
adc
out
xor
xchg
rorl
xlat
adc
sbb
aas
dec
push
sub
pop
fldcw
adc
dec
out
jg
or
mov
push
push
psllq
mov
push
pop
and
movzbl
and
aad
cmpb
fsubs
scas
negb
rclb
insb
push
rol
pop
or
test
mov
movsl
mov
mov
sahf
sbb
fisttpll
mov
movsb
pop
jns
fwait
and
dec
dec
pop
movsl
pop
inc
aas
das
xchg
imull
push
xchg
outsb
push
jge
in
movsl
scas
repnz
push
lock
add
cmp
xor
outsl
scas
mov
les
cmp
cmpsl
dec
clc
pop
aad
imul
in
cmpsl
xor
in
mov
add
imul
inc
mov
jne
mov
js
and
fwait
jp
add
or
or
ret
out
pop
xor
inc
jno
pmullw
push
cwtl
xchg
pop
xchg
imul
stos
sub
out
mov
mov
mov
mov
xchg
out
jmp
mov
or
add
into
and
xor
pop
or
sub
jmp
mov
jns
lds
dec
dec
push
popa
lods
sub
xor
add
push
dec
xchg
push
movsb
cmc
sar
lods
scas
pop
stc
push
es
xor
fstps
xchg
lock
add
push
mov
cli
jl
in
or
je
insb
xor
in
add
out
pusha
cmpsl
xchg
xchg
jns
cmpsb
fcmovnb
std
insb
les
repz
dec
mov
jb
pop
cmpsl
and
inc
imull
int3
push
jmp
loop
stos
call
cmp
adc
rcrb
loop
pop
sbb
out
sbb
mov
iret
jl
cmp
jnp
jbe
cmc
mov
daa
add
pop
pushf
jmp
xor
lods
lods
lret
mov
add
and
mov
xchg
dec
and
int3
jo
inc
sub
inc
jae
push
ret
adc
inc
jmp
or
bnd
inc
je
dec
xlat
pop
sub
pop
fs
pop
test
cmc
jne
cmp
push
jnp
sbb
jnp
lcall
cmp
cmp
xchg
mov
shll
lret
jb
or
mov
add
pusha
and
cmc
jns
cmpsl
mov
iret
inc
test
rcrb
or
aas
mov
xchg
xor
mov
repz
fwait
lds
push
cld
pop
pop
in
mov
cmp
pop
sub
idiv
mov
rcr
mov
outsl
nop
loopne
or
scas
adc
inc
inc
dec
mov
inc
pushf
and
jb
ret
adc
sbb
repnz
lcall
and
cmp
fimuls
imul
loop
xchg
ret
clc
test
push
pop
inc
mov
jno
ret
out
sbb
call
or
lods
cwtl
push
push
insb
push
cmp
into
jns
inc
mov
pop
das
jp
aad
mov
jp
adc
cmp
sub
iret
cli
nop
and
dec
stc
push
roll
sbb
jbe
add
pop
div
or
data16
popa
pop
dec
pop
gs
les
and
dec
int3
mov
push
jl
mov
sub
mov
lret
pusha
pop
mov
inc
in
xor
xchg
fisubl
int3
fidivs
fidivrs
arpl
movsl
add
xor
movsb
xchg
dec
add
cmpb
iret
mov
sbb
in
leave
mov
or
or
add
mov
add
scas
mov
sbb
ljmp
dec
inc
lds
enter
dec
orl
lds
rorl
rcl
int
in
fwait
loopw
ficompl
add
or
push
push
mov
cwtl
iret
jno
adc
imul
hlt
popa
or
mov
or
inc
orb
mov
jecxz
mov
dec
and
mov
and
mov
insl
sub
clc
or
cmp
int3
add
lds
adc
and
fsubs
fstps
shlb
cli
enter
sub
mov
cmp
pusha
fldenv
call
adc
jae
sbb
sbb
jecxz
cmpsl
aaa
cmp
mov
sahf
nop
mov
rolb
push
xor
loopne
imul
std
sbb
pop
push
xorl
jle
out
lods
sti
pushf
pop
bound
lea
loope
shll
jl
pop
jecxz
lock
inc
xchg
inc
scas
mov
sbb
sbb
mov
js
pusha
mov
fcoms
inc
out
inc
gs
xor
mov
aad
outsl
adc
or
push
mov
push
test
xchg
pushf
aam
jge
sahf
lock
and
lea
sub
xor
xor
adcl
das
xchg
or
adc
popf
dec
push
jmp
jecxz
pop
push
movsb
cmpsl
cmp
xchg
fiadds
clc
jg
pop
fdivrl
std
jecxz
test
mov
cwtl
repz
adcb
loope
fidivrs
push
ds
popf
movsl
xor
rcll
outsb
cmp
insb
popl
sbb
cmpsl
shlb
cwtl
lock
mov
mov
lahf
or
or
and
push
int3
sub
or
push
xchg
push
call
mov
push
mov
imul
dec
std
pop
cwtl
pop
mov
fidivrs
cli
in
sbb
sub
xchg
orb
fldcw
shll
cmp
addr16
stos
jmp
imul
es
push
or
jecxz
mulb
pop
xchg
sbb
mov
or
adc
fwait
std
xor
adc
mov
mov
enter
ja
test
fstps
and
incb
ja
into
idivb
push
cmc
sub
rcrl
lock
pop
sub
jno
inc
mov
or
mov
outsb
jo
push
push
ja
adc
push
cli
mov
jg
jle
in
push
aas
enter
nop
popf
mov
leave
scas
inc
ret
faddl
enter
imul
cs
daa
repz
popf
mov
sti
scas
jno
mov
pushf
fwait
add
sbb
xchg
mov
add
add
fimuls
lock
cmp
arpl
pop
or
mov
daa
insb
xor
imul
xchg
inc
and
pop
xor
je
je
sbb
outsb
sub
idivl
arpl
das
jae
mov
out
mov
aad
and
dec
sahf
xchg
cmp
test
insl
loopne
lock
sti
cmpsb
sub
adc
xchg
mov
xchg
jbe
shlb
cltd
das
mov
xchg
ds
rorl
xor
in
cli
or
nop
push
jno
push
vpmacsdql
mov
jg
add
cld
aas
shll
or
shlb
push
mov
xor
pop
mov
pop
adc
jno
sbb
in
add
sbb
jae
add
movsb
pop
ret
movsb
out
xor
push
push
mov
cmpsl
lods
xlat
stos
out
lret
fistps
or
push
enter
orl
add
js
inc
ficoml
ficoml
jp
std
out
xchg
xchg
mov
xchg
pop
and
inc
adc
cwtl
scas
std
loope
mov
ret
pop
pop
pop
je
rorl
notb
mov
or
pop
push
out
add
mov
fnstenv
cs
cmpsb
aas
bound
xor
sahf
xchg
or
adc
imul
inc
adc
dec
xor
pop
xchg
mov
ja
mov
pop
ljmp
lods
adc
arpl
adcl
inc
jnp
stos
add
mov
loop
xchg
cmc
imul
out
outsb
cmpsl
push
jge
mov
loopne
sub
mov
xchg
mov
es
sub
es
ja
inc
dec
or
xor
push
int3
scas
and
mov
push
arpl
in
lret
dec
mov
pop
bound
or
scas
jns
mov
bswap
cmp
sub
popa
lods
gs
cmpsl
ret
es
add
clc
dec
xor
cmpsb
stc
arpl
movsb
or
mov
adc
test
fbstp
lock
push
dec
sub
leave
std
les
mov
dec
pushf
xor
shlb
leave
ret
jb
je
scas
shll
or
jecxz
add
fbstp
decl
xchg
iret
and
dec
nop
and
fnstsw
jecxz
stc
jae
pop
mov
leave
and
imul
lret
test
sub
pminsw
and
mov
test
out
outsb
dec
mov
mov
test
pop
mov
jb
ret
stos
add
loope
mov
gs
xchg
xchg
adc
push
std
jb
sbb
ljmp
push
dec
xor
lods
adc
add
add
cmc
pop
adc
dec
repnz
cmp
dec
arpl
and
dec
pushf
lds
lahf
ror
shrl
movsl
mov
shll
xor
call
inc
adc
mov
or
pop
aaa
or
jbe
jge
in
out
stos
cmp
insl
loop
pop
or
mov
cmc
push
push
testl
mov
sub
outsl
sti
cld
pop
lock
mov
xchg
pop
xchg
cmp
xchg
in
add
popa
fildll
dec
js
cwtl
cmp
xor
lock
ljmp
lcall
push
enter
xor
or
xchg
push
pop
outsl
and
les
imul
add
mov
sub
mov
aad
dec
or
lds
xchg
mov
int3
je
sahf
inc
add
int
mov
aas
call
lret
loop
pop
mov
mov
repnz
outsb
push
mov
gs
xchg
xchg
pop
bound
roll
sbb
adc
stos
dec
mov
adc
mov
fbld
cmp
xchg
imul
out
or
out
cmpl
setb
mov
imul
xchg
and
sub
push
into
pop
xor
push
lea
sahf
pop
inc
mov
mov
dec
add
int3
dec
pop
add
or
or
pop
cmp
sub
in
sbb
in
xor
fisttpll
fisubrl
testl
fadd
jmp
mov
fwait
mov
pop
int3
arpl
fwait
aaa
pop
cs
push
pop
ret
dec
cmpsb
std
inc
jbe
sbb
xchg
mov
in
pop
and
cmp
dec
add
jbe
adc
dec
xor
xchg
orb
nop
xchg
scas
or
test
enter
and
sahf
xor
rcr
push
mov
xor
sbb
sub
pop
inc
push
adc
test
popf
pop
mov
gs
xchg
jne
sbb
enter
popa
xor
or
inc
and
in
testl
mov
sub
pop
jne
sbb
test
rol
jp
outsl
in
lods
sub
adcb
js
push
imul
push
adc
and
jno
cltd
or
mov
pop
fs
ds
call
pushf
pop
cmp
mov
mov
sbb
mov
and
sub
call
call
xlat
mov
aas
and
xchg
int
mov
test
push
neg
fwait
in
mov
mov
and
cmp
push
mov
mov
mov
lock
mov
cmc
dec
fwait
xchg
out
lods
mov
push
jge
dec
push
es
roll
fidivs
mov
push
adc
mov
sub
cmpsl
jle
in
enter
sub
add
int
or
mov
out
xor
push
sbb
push
in
pop
pop
sti
mov
dec
inc
cs
ja
movsl
sbb
inc
sub
add
push
call
movsb
adc
pop
mov
dec
xchg
push
stc
mov
xchg
sbb
ss
xchg
pop
lock
cmpsl
scas
sbb
jl
push
icebp
sub
lods
lock
fbstp
outsl
xor
mov
and
mov
mov
or
or
sahf
dec
push
ja
in
std
sub
xor
mov
mov
jecxz
mov
mov
adc
or
hlt
dec
gs
xchg
jl
jecxz
and
fwait
and
js
cltd
js
fwait
dec
xor
out
insl
jge
nop
dec
mov
push
and
loop
jecxz
sub
popf
sub
mov
and
inc
xor
ja
fistpll
xchg
scas
mov
mov
or
sub
subb
lds
add
ret
adc
inc
and
dec
lret
inc
sub
cmp
insb
jmp
aaa
mov
cli
int
cld
leave
ret
sbb
cmpsl
inc
test
dec
enter
cmpl
pop
push
dec
das
mov
adc
or
addr16
std
dec
sub
ror
mov
fisubl
push
inc
in
iret
pop
testl
aam
movsb
inc
sub
in
loop
pop
sti
mov
adc
mov
fimull
movsb
sub
int3
dec
push
movsl
stos
test
xchg
mov
test
fs
sub
xor
inc
imul
xchg
scas
mov
sbb
in
add
pusha
popf
mov
xor
xchg
out
aas
dec
loop
out
pop
fidivs
mov
mov
call
out
jp
mov
jp
xlat
pop
push
adc
mov
xlat
add
ds
popl
fadds
out
adc
jg
and
fbstp
jbe
cmpsb
dec
cmp
fistpl
pop
and
std
xchg
sti
insl
pop
sahf
testl
mov
stos
lea
sub
shr
cs
mov
mov
jge
xlat
call
data16
leave
js
jb
clc
fdivrl
push
out
cltd
test
test
shrb
pop
sahf
pop
out
pop
add
and
scas
inc
addr16
xchg
xlat
in
jl
add
leave
adc
inc
mov
fidivl
mov
xchg
or
mov
dec
decb
pop
imul
out
scas
mov
std
adc
stc
dec
std
add
fwait
jbe
inc
outsl
out
push
xor
jbe
int3
jl
add
dec
adc
pop
das
nop
dec
mov
mov
and
jbe
cmp
xor
scas
ljmp
mov
mov
imul
out
loopne
lret
fstl
loopne
add
xchg
pop
add
push
mov
sub
and
stc
je
push
sub
push
lret
notb
fsubrp
push
xchg
cs
dec
mov
add
add
ljmp
cmp
lret
xchg
push
mov
jns
inc
call
loope
cmpsb
cld
test
imul
inc
sbb
lods
jno
scas
scas
cmp
insb
outsl
mov
ret
orb
fmuls
xchg
xchg
jmp
ret
pop
dec
dec
xchg
xor
fs
mov
xchg
push
sbb
jle
fwait
jp
add
out
pop
jae
imul
repz
lahf
fsubrs
in
sub
cmp
ss
xchg
add
mov
psubusw
out
mov
push
xor
outsb
pop
ljmp
pop
mov
lret
and
inc
add
in
std
mov
sbb
inc
test
shrl
sbb
add
pushf
jae
stc
push
movsb
xchg
aad
mov
fists
sti
and
mov
movsl
inc
enter
inc
loope
std
and
xchg
push
pop
jecxz
and
cmpl
cmp
dec
mov
out
xor
jno
add
push
bound
jp
adc
sub
daa
inc
fisubl
popf
add
jp
inc
int
pop
jmp
inc
bound
inc
lods
js
inc
das
xchg
sub
xlat
adc
out
stc
push
ret
mov
and
aam
dec
pop
and
int
div
sahf
push
mov
nop
push
xor
cmc
push
lods
ss
fnsave
inc
adc
shll
xor
test
jmp
lret
sub
mov
inc
mull
jp
xchg
stc
dec
sub
loop
insl
or
adc
sub
sbb
ja
xor
pop
int
pop
cmp
popf
dec
daa
out
jmp
rcr
nop/reserved
cmc
std
cmove
nop
test
pushl
mov
mov
cmp
jnp
scas
dec
push
cwtl
pop
mov
jmp
sub
mov
rcrl
into
mov
push
mov
mov
ja
sub
inc
ret
inc
mov
pop
sti
cmpsl
push
inc
bound
fwait
orb
sbb
rolb
int
rolb
into
in
push
and
mulb
arpl
xor
mov
add
mov
or
and
lret
bound
popa
sub
in
out
pop
push
cmp
cmpsb
test
movsb
rclb
jmp
dec
add
mov
icebp
fdivr
dec
or
and
clc
sub
mov
cmp
jmp
pop
js
inc
out
ds
mov
mov
mov
inc
fwait
sub
dec
inc
iret
sbb
adc
jb
incl
push
cmp
xchg
push
mov
cmp
movsb
dec
pop
mov
pushf
aaa
xchg
jae
sbb
fcomp
ljmp
imul
or
andl
icebp
in
clc
or
and
add
jb
or
aaa
mov
and
xor
iret
dec
xchg
push
lret
cltd
mov
adc
jns
push
jns
push
rcll
clc
pop
fidivrs
mov
sarb
push
cmp
scas
sub
jns
daa
and
scas
jp
sbb
dec
loop
call
lahf
xchg
in
sbb
lret
loop
jns
mov
pop
pusha
cltd
mov
xor
xor
pop
std
scas
cmpsl
and
or
test
or
fld1
test
es
cmp
mov
jg
mov
push
pop
loop
into
popa
sub
loope
inc
inc
out
push
push
into
sahf
int3
sub
pushf
mov
jp
orb
or
shrl
mov
in
test
es
add
mov
sahf
insl
push
ds
es
mov
outsb
jmp
jle
mov
inc
fdivrp
add
push
andl
jp
roll
cmp
or
les
and
jnp,pn
adc
sub
cmpsb
out
add
dec
mov
out
push
xor
add
pop
sbb
pop
adc
jbe
daa
adc
out
xchg
mov
fldl
divb
xor
dec
pop
dec
sub
xchg
lods
lcall
iret
jo
loopne
call
shlb
mov
pop
dec
jg
mov
pop
pop
cmp
mov
pushw
enter
fwait
push
insb
in
xchg
jns
out
rolb
int3
fdivs
ret
mov
test
ficoms
xlat
xor
dec
mov
cltd
inc
lods
cmp
ljmp
pushw
fwait
outsl
inc
pop
icebp
push
adc
dec
adc
test
sub
stc
and
aam
inc
push
and
xor
and
sahf
lods
jo
mov
mov
lcall
push
or
xor
pusha
cmp
test
pop
lock
push
xlat
cli
fstp
xchg
xor
cli
or
dec
fsub
xchg
jmp
outsl
sub
pop
mov
mov
cmp
xor
sub
lret
lahf
push
xor
repnz
sahf
push
pop
push
jp
jmp
xchg
jle
stos
mov
inc
xchg
mov
ljmp
or
pop
sbb
sbb
add
sub
push
test
cmp
xchg
lds
and
ret
insl
sub
arpl
mov
addl
leave
hlt
inc
addb
repnz
sub
add
inc
pop
cli
loop
stos
ljmp
xor
xchg
and
fistps
dec
jl
aad
adc
xlat
xlat
jnp
or
jge
jle
cmp
ret
mov
push
jb
push
sub
dec
std
ret
mov
sbb
xorb
stc
push
subl
pop
jno
jmp
mov
outsl
mov
mov
sbb
cli
xchg
out
push
sti
jno
inc
and
das
jle
sub
pop
push
fdivrs
push
in
cmp
mov
add
sbb
stc
adc
int3
sbb
jns
stos
aad
mov
lock
les
ljmp
adcb
fs
push
addr16
test
fistpl
sub
mov
das
fildl
sbb
dec
inc
adc
add
dec
shlb
xor
inc
rorl
cmpsl
lods
bound
xor
lods
scas
xchg
and
cmpsl
pop
ret
sub
push
out
ret
ficompl
pusha
mov
testl
jge
mov
in
sub
and
shrb
scas
jnp
jbe
cmc
lods
jo
inc
pusha
push
cld
jp
or
xor
dec
cmp
jne
lods
stc
outsl
push
incl
or
fs
jl
cmp
mov
cmp
cmp
loopne
pop
xor
sub
pop
inc
lds
das
mov
rcrl
outsl
outsl
dec
cmc
inc
add
xchg
xchg
sub
inc
xor
sbb
pop
xchg
addr16
movsb
div
mov
in
lcall
dec
pop
in
or
andb
sub
and
imul
xchg
cli
mov
rcll
imul
and
rcr
leave
jno
mov
mov
icebp
mov
lods
outsl
pop
ret
cs
xchg
pushf
faddl
rorb
jl
jns
sub
jno
jge
cld
dec
and
mov
stos
in
sub
das
jns
es
mov
push
fistpl
test
sub
inc
scas
pushf
test
mov
push
jns
pop
fbld
addr16
incl
xchg
movsl
addr16
call
pop
daa
or
and
jle
xchg
xor
mov
outsb
mov
jbe
scas
jg
push
pop
pop
cmp
scas
pop
daa
stc
xchg
into
pop
cltd
jp
inc
es
push
aad
or
pop
mov
push
mov
daa
inc
ficompl
ja
mov
bound
add
cmp
addr16
sub
jae
fildl
inc
enter
cltd
roll
inc
push
cld
fbld
testb
pop
loopne
push
ss
push
mov
xor
add
add
xor
xor
and
dec
mov
pop
cmp
jge
inc
cmp
stos
dec
and
xchg
lods
lods
or
sub
pop
mov
push
sbb
push
imul
sahf
stc
nop
fbstp
in
cli
adc
fcmovnu
jg
xchg
fdivrl
mov
mov
movlps
add
add
cmpsl
xchg
clc
cld
clc
add
and
lret
jns
loop
jg
icebp
adc
out
push
add
xchg
test
cld
push
addl
or
cmpsb
push
sbb
cs
mov
sub
aam
clc
icebp
mov
cmc
xor
push
jmp
and
test
sahf
in
or
outsb
and
push
jl
fldt
jo
inc
lods
into
dec
pop
mov
ja
or
pushf
insl
decb
xadd
fdivl
jg
fnstsw
dec
cs
out
in
dec
cmpsl
push
or
lcall
pop
cltd
out
mov
cmpsb
decl
mov
jge
jl
sub
jg
popa
inc
jp
bound
mov
mov
data16
push
cwtl
stos
cmpl
or
stos
adc
sub
mov
std
jge
loopne
pop
mov
mov
sbb
cltd
cltd
sbbl
xor
in
lret
add
mov
mov
daa
cmc
call
orb
mov
cmp
adc
in
push
fwait
jge
adc
dec
adc
lahf
ljmp
xorb
mov
jne
psadbw
fnsave
test
add
mov
xor
rcrb
mov
fdivr
cltd
add
xchg
add
xor
rorb
in
in
mov
adc
pop
xor
pop
scas
lahf
mov
loope
mov
jnp
jb
scas
cmp
dec
cmp
in
sub
pop
xchg
loope
dec
mov
hlt
call
fadds
push
cmp
adc
add
sbb
hlt
xor
nopl
mov
decb
movsl
cwtl
mov
lret
mov
adc
adc
icebp
xor
or
lods
lret
mov
dec
aaa
imul
inc
xor
testl
lret
xor
adc
imul
fistpl
xchg
pop
sub
test
cmp
and
in
iret
ret
ja
imul
movsl
faddp
insb
mov
fs
and
ret
xor
pop
aad
inc
fs
dec
push
fisttpll
cld
mov
mov
ds
aam
bound
addl
out
pop
ja
out
push
jp
cmp
movsb
pop
adc
call
sbb
pop
xchg
test
lahf
clc
mov
push
and
or
mov
inc
sbb
and
loop
mov
jmp
lahf
jecxz
xchg
pop
es
sub
fdivs
fidivs
cli
push
outsl
mov
sbb
ss
push
stos
and
pop
cmp
fs
mov
sbb
fildll
rcll
sarl
pop
out
push
rcrl
adc
jo
push
movsl
adc
xchg
jg
mov
xchg
int
jno
imul
and
pop
aas
aaa
cmc
ljmp
mov
push
adc
xor
mov
daa
sub
loopne
incb
stc
mov
dec
mov
aas
fsubrl
cli
mov
aam
push
mov
cmp
mov
xlat
mov
pop
inc
lods
sarb
arpl
inc
aas
dec
cmp
scas
daa
push
stos
jnp
cmpsl
adc
cmpsl
int
mov
or
into
sub
outsb
push
inc
jp
movsb
mov
shll
add
xchg
pop
loope
mov
orb
jb
push
jnp
push
push
jmp
and
lret
cmp
repnz
xchg
add
add
loopne
sti
mov
out
and
mov
test
push
subb
fcoms
add
pushl
mov
enter
mov
mov
rorb
es
rcll
add
inc
mov
mov
fdivrs
jp
mov
dec
push
movsb
sub
lods
lods
push
je
lea
scas
inc
xor
inc
mov
popa
les
pushf
in
adc
cs
lcall
insl
xchg
out
std
push
and
data16
pop
inc
and
inc
cmp
mov
ret
add
movaps
sbb
sbb
add
xchg
lahf
out
xchg
pop
dec
jl
cmpsl
dec
clc
lods
fistpl
jns
mov
adc
sbbl
mov
adc
call
push
aaa
jg
xor
stos
and
fistl
pusha
subl
rclb
les
add
test
gs
mov
lds
test
ret
fidivs
mov
loopne
inc
inc
testl
mov
and
es
insl
sbb
inc
jbe
scas
fcompl
data16
imul
sbb
mov
mov
lock
popa
ljmp
in
mov
cmc
enter
inc
mov
adc
push
aam
shrl
mov
and
ret
and
sti
mov
lahf
mov
mov
jnp
dec
mov
mov
jge
dec
mov
xchg
outsb
sbb
dec
mov
pop
mov
jne
sub
lcall
jmp
jmp
jno
jne
sbb
sbb
dec
jnp
jp
mov
pop
inc
data16
fwait
stc
fadds
movsb
adcb
mov
icebp
push
xchg
mov
dec
mov
clc
nop
jne
dec
inc
lahf
jmp
and
std
addr16
orl
mov
xchg
inc
imul
xchg
jns
and
loop
pop
add
pop
sub
xchg
mov
int
fwait
pop
inc
mov
jno
incl
inc
adc
lock
leave
fdivs
je
jmp
hlt
outsb
fwait
xchg
add
stos
mov
mov
and
and
lahf
mov
inc
push
sbb
scas
xchg
add
mov
je
mov
mov
add
icebp
data16
jo
add
pop
xlat
jo
dec
fsub
test
sub
mov
or
aam
and
push
pop
push
mull
xor
out
in
addl
loop
adc
ja
icebp
push
lahf
bound
xchg
add
sti
jb
or
mov
movsb
mov
pop
cmpsl
lcall
push
leave
in
test
gs
push
imul
in
mov
int3
sbb
dec
insb
cli
out
subb
cmpsb
outsb
repz
mov
aad
ss
push
rclb
in
mov
dec
dec
and
ss
pushf
sbb
or
push
fldenv
lret
rcrb
ret
jo
fisubrs
dec
sahf
rol
hlt
jb,pt
cmp
pop
pop
mov
jb
xor
sahf
push
lods
out
in
movswl
mov
adc
pop
sub
popfw
fimuls
mov
push
pop
aad
mov
btr
xchg
pop
ss
test
aad
scas
xchg
fidivs
inc
ljmp
aad
adc
xchg
je
inc
xor
pop
scas
outsl
icebp
imul
push
lea
sbb
popf
mov
or
or
scas
jmp
adc
jg
sbb
mov
xchg
int
jo
aad
sub
bound
and
inc
mov
cmp
xor
push
adc
jnp
cmp
bound
lock
dec
mov
cltd
repnz
js
test
inc
in
lds
adc
push
testb
ss
ds
cs
addl
out
divb
sahf
fdiv
mov
imul
dec
or
dec
incb
xchg
and
in
dec
cmp
adc
pop
mulb
loopne
or
test
into
push
jno
aam
adc
pop
cmp
lods
and
xchg
sub
mov
adc
ss
push
jmp
call
or
mov
adc
lret
mov
gs
ficomps
mov
shll
sbb
push
inc
in
or
sub
or
pop
xchg
pop
lods
cmpsl
pop
or
addr16
and
sbb
adc
lds
inc
dec
enter
dec
xor
sarb
xchg
out
push
mov
rdpmc
aad
faddp
subl
fisubrl
inc
popf
int3
pop
sbb
negb
xor
xchg
rcr
in
mov
mov
pop
aam
jl
mov
inc
xchg
dec
icebp
incb
pop
adc
adc
cs
sbb
mov
inc
jmp
push
loop
push
mov
scas
scas
leave
std
test
fcmovnu
aad
or
sti
rclb
inc
pop
push
add
jle
xor
dec
cli
pop
sub
outsb
inc
inc
mov
or
cwtl
jb
lret
adc
push
repz
outsl
dec
push
add
ret
das
mov
outsb
mov
xor
xchg
sbb
scas
mov
sbb
cmp
xchg
mov
rcrl
pop
shll
cmc
push
fadd
fwait
movsb
popf
adc
add
rolb
cwtl
test
jmp
mov
fdivp
lds
cmpsb
ja
or
cmpsl
cmp
outsb
fmull
ret
fs
paddsw
pop
pop
cld
xor
fistpl
inc
or
or
xor
ret
popa
data16
movsb
inc
pop
pop
in
nop
and
imul
loopne
rcrb
sbb
test
aas
aad
xor
inc
and
cmpsb
mov
inc
rorb
mov
lahf
add
sahf
mov
add
mov
fidivrs
fwait
lret
stos
push
mov
jb
sti
jns
jnp
jbe
push
not
fwait
lcall
xchg
stos
add
stos
mov
push
es
add
repz
sti
mov
sar
xchg
pop
das
jecxz
int
hlt
insl
aas
and
mov
adc
pop
test
jmp
inc
mov
cmp
pop
adc
sbb
pop
pop
and
stos
and
repz
scas
lcall
rcrb
mov
call
popa
pop
mov
rcrl
push
and
ret
dec
cmp
in
xor
mov
in
inc
scas
jb
cmp
push
lods
or
rcl
xchg
pop
or
aam
addb
pop
cld
pop
iret
addr16
push
sahf
jno
je
fs
xor
mov
sub
add
test
mov
pop
fs
fcomps
xchg
dec
enter
and
stc
fiaddl
pop
jno
je
cmc
dec
or
into
and
mov
leave
push
cli
loopne
insb
call
dec
daa
jg
push
jg
cmc
out
das
xchg
in
or
aad
xchg
jne
movl
mov
call
push
push
add
jmp
or
pop
pop
scas
aas
sub
inc
stos
das
inc
inc
fidivrs
cmp
push
mov
inc
adc
inc
jg
ds
fsubl
sti
cmp
jbe
xchg
inc
push
bound
insl
and
mov
fsubl
repz
jnp
cltd
fiaddl
imul
cwtl
out
sbb
fwait
insl
push
cmp
adc
xor
xor
mov
mov
ffree
sbb
repz
int3
push
dec
xchg
cmpsb
xchg
dec
dec
rcrb
mov
xchg
mov
sbb
xchg
clc
cs
pop
shl
cmp
jp
xor
inc
xchg
loope
mov
push
mov
daa
jge
imul
vprotd
add
mov
mov
xor
js
pop
mov
movsl
pusha
mulb
in
jb
or
jbe
jnp
hlt
fistps
xchg
ljmp
inc
pminub
fdivrl
xchg
ficoms
dec
dec
push
sar
cld
arpl
popf
insb
dec
pop
inc
int
ljmp
repnz
xchg
ljmp
xor
jp
jmp
pop
sub
jbe
das
sub
fidivrl
test
ds
in
dec
fcomps
mov
push
push
mov
fstps
js
cmp
and
leave
repnz
jnp
iret
imull
add
jo
mov
dec
loopw
push
mov
ret
stos
cmp
into
add
jne
sbb
cli
shll
out
int
cmpsl
dec
cmc
mov
outsb
mov
std
jp
mov
mov
in
adc
test
push
xor
xor
aad
nop
sahf
loope
scas
jbe
cmp
mov
sahf
hlt
dec
mov
or
test
imul
call
clc
xor
add
lds
push
in
dec
sub
cmp
mov
clc
lock
and
rclb
shll
fdivl
mov
pop
mov
mov
imul
pop
jnp
popa
xchg
sbb
jo
cltd
hlt
outsb
push
jno
mov
stos
inc
jl
inc
xor
push
cltd
loop
mov
pusha
dec
pop
xchg
mov
pop
add
push
mov
stos
and
pop
mov
mov
lods
xor
mov
arpl
sbbb
or
cltd
xchg
pmaddwd
lret
add
ss
daa
add
mov
aaa
iret
das
aas
out
aam
outsb
cli
shr
pop
cwtl
movsl
stc
dec
pop
jnp
xor
push
inc
cs
xor
push
xchg
fcoms
push
leave
repnz
ja
xor
int
lcall
in
pop
xchg
and
cmp
dec
ret
lahf
inc
and
stos
fmull
fcomps
les
ja
jne
sub
pop
outsb
loopne
aas
cmp
in
xor
shlb
mov
stos
jne
sub
cmpsl
cmp
jmp
cmc
stos
pop
mov
addr16
xor
mov
add
mov
sbb
inc
adc
leave
out
cwtl
movsb
push
out
and
mov
outsb
movsl
daa
test
popa
test
data16
lcall
lcall
sbbb
fs
pusha
xchg
jb
shlb
xchg
jecxz
fidivrs
xchg
pop
and
dec
dec
inc
test
js
jecxz
mov
xor
insl
jne
cmp
out
mov
push
fwait
cmpl
lods
mov
pop
nop
mov
stc
adc
jp
out
cmc
mov
scas
scas
subb
std
mov
testb
incb
pop
clc
or
jecxz
sbb
mov
lret
or
jbe
jmp
add
cs
dec
cmpsl
add
jmp
insl
movsb
jl
in
sarb
repnz
rorl
lods
pop
ret
push
das
xorl
adc
in
mov
sub
flds
andb
pop
test
pop
sub
pop
and
int3
cs
pop
cmpb
gs
inc
cmc
aad
mov
setns
cld
sub
clc
aaa
dec
inc
pop
call
lret
ja
cs
cld
inc
or
fiaddl
sbb
je
stos
insb
mov
std
jno
sbb
in
inc
lret
push
fimuls
mov
test
incl
gs
sbb
mov
mov
outsb
mov
insb
ss
jne
test
adc
ds
cmp
cmp
lock
xchg
call
addl
push
mov
pop
mov
mov
mov
sub
addr16
lds
pop
out
andl
int
push
bound
lods
test
ret
inc
xchg
jle
fsubl
lods
sub
mov
in
jno
je
or
push
or
popf
lahf
pop
pop
dec
lds
test
mov
push
dec
cwtl
stos
adc
nop
aam
ja
push
lds
adc
inc
aas
mov
jmp
push
add
sub
mov
sbb
pop
and
aam
in
xchg
lahf
xor
adcb
add
sbb
adc
movsl
mov
or
pop
jno
mov
inc
mov
xor
repz
orps
sub
sbb
cmp
cmpsb
xchg
aam
xchg
mov
outsl
pop
imul
dec
leave
mov
cs
int3
mov
xor
and
and
jl
daa
pop
pop
popa
mov
out
mov
outsb
mov
adc
cwtl
pop
jns
cmp
leave
arpl
iret
test
test
in
pop
mov
inc
lds
push
repz
jbe
sub
ds
inc
lea
clc
pop
mov
inc
repz
outsl
pop
shrb
or
or
jmp
sub
xchg
clc
das
mov
sti
push
pop
insl
imul
idivb
roll
inc
cmpb
cmpsb
cmp
xlat
push
nop
and
dec
jnp
push
sbb
roll
popf
add
in
pop
movsl
or
loop
dec
sub
xchg
je
pop
dec
push
in
test
je
fildl
out
or
cmc
xor
outsl
je
fs
add
test
cmp
jne
mov
mov
insl
xchg
inc
mov
jmp
mov
fs
in
arpl
lods
mov
jae
adc
fs
push
test
mov
je
daa
ret
sub
mov
pop
jnp
add
inc
lock
pop
cmp
in
xor
and
rorl
fwait
dec
fcmovnu
rep
jo
sub
adcb
xchg
inc
lea
psubd
stos
inc
jp
add
pop
xor
inc
fs
sbb
mov
jle
outsb
push
out
fbstp
cltd
nop
dec
xlat
xor
data16
inc
adc
cmp
sbb
and
in
dec
adc
inc
sbb
repnz
dec
pop
loop
xchg
aas
sbb
mov
lods
push
pop
ds
call
sbb
into
jo
push
sub
mov
xchg
stos
or
roll
jecxz
enter
insb
pop
mov
dec
stos
bound
outsl
mov
sbb
or
sbb
je
leave
fildl
mov
pop
mov
shlb
xor
ja
dec
jae
or
pusha
inc
rorl
clc
icebp
or
hlt
or
je
fnstsw
sti
out
cmpsl
movsb
loop
daa
ret
call
aaa
addr16
or
nop
idivl
mov
repz
inc
pop
sbb
jle
xchg
dec
jg
scas
insb
sub
inc
fbstp
dec
cmpsb
and
mov
mov
and
filds
fdivl
shll
or
mov
in
popa
test
cli
rorl
pop
stos
adc
iret
rcll
iret
hlt
push
scas
aas
imul
ja
mov
pop
gs
cltd
inc
lds
sbb
imul
stos
test
out
mov
add
sub
push
scas
cli
jp
mov
add
stos
push
jno
sub
std
stc
and
inc
out
adc
push
sub
fcmovbe
mov
xchg
insl
xor
cltd
xchg
xlat
addr16
clc
loop
xchg
sti
inc
das
mov
outsb
push
pop
mov
movsb
and
mov
sub
sub
pmaddwd
ljmp
xor
adc
shll
data16
andl
sub
lret
sahf
js
cs
xchg
arpl
cmp
jle
pop
mov
cmpsb
pushf
icebp
xlat
fs
push
ret
add
addr16
mov
inc
add
stos
inc
dec
popa
fldt
clc
int3
xlat
in
jns
pop
imul
pop
mov
push
fcomps
lds
outsb
dec
or
sbb
gs
dec
cmp
dec
aad
icebp
dec
loop
xchg
push
cmpsb
aad
mov
pop
fidivl
add
mov
jbe
pop
mov
pop
or
icebp
cmp
xor
mov
mov
dec
shrl
out
cmp
std
inc
rep
jae
xchg
ficomps
testb
lods
shlb
xchg
push
rclb
push
and
out
sbb
iret
mov
add
add
dec
sub
hlt
pop
fcoml
adc
ja
push
pop
jb
ret
repz
and
pop
dec
pop
cmpsl
bound
pop
jb
push
push
clc
sbb
divl
dec
cmc
jg
dec
jle
call
scas
aad
inc
sbb
pop
mov
add
negl
sar
ss
lcall
add
and
xchg
push
cmp
incl
addr16
add
inc
imul
fsubrl
dec
inc
cmc
out
lock
cmp
loop
jb
ret
push
jmp
movsb
ret
or
inc
xchg
cmp
rcr
shrl
subl
cmc
sub
and
inc
xor
stc
daa
mov
jns
fcmovb
or
out
mov
sub
cmpb
sub
cmp
jno
aad
jle
or
call
sbb
mov
insb
push
xchg
mov
jg
push
mov
fsubr
cwtl
fwait
add
aaa
sub
xchg
in
sub
test
ret
cld
xchg
hlt
and
mov
or
dec
outsl
sarl
mov
mov
add
lds
xchg
push
xchg
xor
in
mov
xchg
sub
xor
fdivrs
bound
lock
mov
adc
cmp
cmp
ja
iret
push
shrb
xchg
add
mov
shlb
les
cmp
loopne
push
gs
shrl
les
test
add
adc
dec
lods
jne
cwtl
xor
ljmp
sub
iret
dec
or
fildl
cmp
ret
push
xchg
jne
jnp
xchg
sub
fnstenv
sbb
fs
xor
cltd
loope
cmp
sub
movsb
mov
mov
outsl
enter
popa
xchg
sub
xchg
je
jp
sub
push
or
dec
or
mov
and
cmp
sahf
sbb
jo
cltd
mov
pop
xor
fs
pop
pop
pop
insb
xchg
cmp
fisubrs
and
sub
in
loop
loopne
mov
cmp
cltd
shlb
hlt
mov
fsubrs
mov
pop
fdivs
push
fidivs
cmp
ss
pushf
or
mov
aas
shlb
setl
adc
jo
push
xchg
aad
add
aam
push
jmp
scas
out
xor
cld
pusha
imul
dec
pop
lock
scas
test
movsl
pop
dec
add
stos
pop
outsl
cmp
je
inc
rcrb
push
adc
jb
clc
xorl
repnz
insl
decl
gs
push
or
rcrb
jl
and
add
adc
movsb
test
scas
mov
xor
daa
dec
loop
xor
mov
test
jp
xor
sbb
push
xchg
adc
in
cmc
pop
or
aam
in
shr
loope
and
cmp
insl
lea
aas
cmp
jne
xor
or
cmpl
pop
sub
cs
sub
clc
popa
movb
inc
adc
imul
push
ds
dec
pop
pop
enter
mov
push
fs
xchg
fdivrs
test
mov
insl
mov
jecxz
lds
sub
mov
test
fdiv
icebp
ljmp
cs
in
fstpt
popf
mov
in
rcrb
popa
pop
test
inc
insb
call
sub
addr16
popf
int
dec
xor
clc
orl
std
subb
add
sbb
imul
movsb
pushf
jg
adc
jnp
or
insb
flds
das
or
mov
add
movsb
and
push
test
sub
test
and
xchg
scas
sbb
aam
mov
inc
jbe
xor
pop
dec
stc
dec
loopne
pop
mov
testl
mov
inc
cmp
ljmp
call
test
stos
push
lock
inc
cmc
or
fstps
int3
push
jmp
mov
inc
sub
aam
jle
jnp
or
push
jmp
and
dec
shlb
jbe
in
and
push
mov
into
sub
jae
div
inc
daa
cmpsb
scas
imul
sahf
and
addr16
sub
popa
adc
lods
adc
xor
ljmp
shrl
mov
mov
mov
cmp
inc
xchg
cmp
cmpsb
out
sbb
fidivrs
aad
jmp
mov
dec
mov
lret
aaa
dec
sbb
mov
xchg
xchg
and
lea
pop
and
ds
fsubp
pop
mov
jno
dec
mov
sub
int
pop
inc
push
lcall
and
fistl
test
fsubl
inc
and
or
jb
stos
fistpll
cmp
daa
jmp
adc
stc
icebp
or
mov
stos
in
cwtl
lods
jno
and
push
mov
int3
popa
push
mov
mov
jno
add
mov
sub
mov
adc
icebp
pop
mov
fadd
nop
lahf
push
in
mov
insb
mov
adcb
xor
rcl
inc
sub
push
sarl
push
scas
jbe
pop
inc
lods
mov
push
add
dec
xchg
adc
mov
shlb
ficoms
loopne
mov
imul
test
mov
nop
jne
mov
mov
cwtl
mov
pushf
mov
test
mov
sub
fstpl
adc
lock
pop
mov
inc
aaa
data16
sti
rcrb
scas
jne
pop
mov
adc
adc
mov
cli
dec
in
hlt
fnstsw
pop
jmp
adc
lods
jne
sub
sti
sub
mov
test
pusha
test
cltd
imul
int3
mov
mov
inc
jb
push
jb
leave
dec
ficoms
jno
mov
cmp
loopne
pop
push
inc
jge
les
mov
fisttps
add
jg
sbb
pop
add
outsl
xor
pushf
mov
repz
xchg
repnz
cwtl
mov
inc
out
cmpsb
out
cmp
push
jno
insl
inc
mov
jge
jb
out
push
lock
xchg
jle
das
jo
leave
mov
adc
jmp
xchg
lret
and
mov
loopne
cmp
in
mov
das
outsl
inc
ret
pop
mov
cmp
jle
repnz
xchg
out
jne
test
stc
mov
in
lcall
ljmp
test
jecxz
mov
xor
push
xchg
test
lods
and
test
outsl
arpl
cmp
push
fisubl
pop
mov
cmc
mov
std
pop
lock
or
xchg
mov
or
test
or
inc
ss
and
jnp
mov
in
loopne
clc
pop
cmp
mov
jecxz
mov
sahf
mov
cmc
and
jmp
ret
push
inc
jns
cs
repnz
insl
sub
insl
dec
xor
mov
movsl
mov
std
loope
pop
stos
movsb
hlt
jle
enter
gs
xor
sub
ret
outsb
test
lcall
mov
dec
je
jl
ljmp
loope
cmp
fists
data16
jnp
loop
adc
mov
mov
add
out
jne
mov
test
sbb
sahf
add
out
pop
xchg
outsl
mov
cmp
mov
jmp
xchg
into
xchg
dec
adc
mov
jb
xchg
mov
mov
push
sub
mov
dec
push
push
mov
xor
in
add
adc
daa
dec
dec
adc
and
sbb
mov
and
jne
inc
rcrl
das
mov
mov
xlat
mov
pop
pop
sbb
int
out
daa
fcomi
mov
das
leave
fadds
lds
mov
xchg
shl
mov
ret
add
pop
lahf
das
mov
ja
push
mov
movsb
dec
xchg
mov
dec
ljmp
push
sbb
xchg
sub
mov
daa
out
mov
mov
fimuls
arpl
rclb
shll
and
jge
add
daa
arpl
jae
pop
iret
aad
adc
out
loope
ds
push
mov
sbb
aad
psubq
imul
cmc
dec
adc
xchg
adc
int3
sub
xor
fimull
into
shl
and
mov
imul
or
pop
packuswb
fisttps
mov
js
mov
fwait
enter
pop
test
lcall
movb
mov
xchg
push
into
mov
sub
mov
mov
add
jmp
xchg
add
mov
repz
sti
jmp
and
int3
shll
and
pushf
mov
sbb
out
xchg
pop
push
arpl
xor
das
punpcklbw
rcll
or
pop
out
sbb
in
mov
mov
popf
xor
insl
daa
dec
add
xchg
into
xchg
jno
shl
test
xchg
inc
push
popa
sub
push
inc
es
cmovp
loopne
mov
push
adc
jg
fstpl
jge
faddp
cmp
fwait
inc
push
das
xor
test
push
pop
pop
dec
inc
scas
add
leave
xchg
mov
stos
or
int
jmp
or
jae
pop
and
lcall
mov
test
jmp
push
mov
out
or
subl
int3
jp
gs
adc
popf
sbb
shr
or
rcrl
data16
lret
cld
dec
lcall
cwtl
sub
idivb
mov
mov
nop
lds
call
dec
cmp
call
gs
repz
mov
cli
sub
mov
sti
aad
adc
les
dec
inc
sahf
cli
dec
adc
fsubrs
inc
loope
lret
out
scas
mov
mov
subb
jle
add
dec
mov
or
ljmp
arpl
aaa
xchg
mov
sbb
int
pop
pop
add
repz
sub
fwait
jnp
fidivrl
cmc
push
fwait
lds
subb
xchg
dec
jns
sub
xchg
push
and
jne
addl
mov
popa
add
or
adc
test
pushf
fst
data16
repnz
fdivr
and
mov
cltd
pushf
outsl
fadd
or
aad
pop
ss
lret
test
dec
pop
sarb
clc
aaa
xor
repz
cltd
sub
xchg
jno
sbb
int
xchg
cmpsb
shll
imul
mov
ljmp
lcall
hlt
push
or
lahf
cmp
lret
idivb
fstps
xor
call
fcoms
rolb
rol
xchg
xor
xor
mov
dec
sbb
cmpb
aas
sti
jae
cmp
lret
pop
mov
cmp
fsubrl
hlt
jns
xchg
daa
jecxz
dec
pop
cmpsb
cmp
loop
cmpsl
adc
or
xlat
lods
xor
mov
push
push
adc
cmp
inc
jo
pop
jb
or
std
shll
cmp
or
and
nop
cmp
sbb
push
inc
ljmp
pushf
rorl
jp
fcoml
mov
dec
fisubrs
daa
push
call
pop
psubw
adc
roll
mov
jmp
jno
in
lcall
sub
sub
out
mov
pop
mov
ret
add
jle
test
test
cmpb
pop
pop
sub
cs
fsubs
pusha
leave
in
cltd
fcomi
pop
sub
lahf
in
xor
dec
mov
js
inc
cmp
mulb
sbb
adc
dec
fwait
int
push
mov
cltd
das
xchg
outsl
out
mov
loop
xchg
gs
add
sbb
cmp
mov
pop
repz
xchg
int3
je
dec
iret
hlt
cld
xchg
pop
xchg
jecxz
lods
sahf
fcomp
pop
or
sbb
daa
jp
lods
addr16
in
lods
mov
pop
mov
add
and
andl
das
push
fildl
push
nop
mov
out
dec
out
in
add
hlt
and
in
xchg
shr
test
ficoml
pop
inc
xor
xchg
xchg
sub
fwait
insb
divb
jne
and
inc
cli
cmp
mov
mov
dec
sarl
movsl
psllq
loopne
push
loop
pushf
mov
pop
loopne
mov
stos
out
insb
lock
mov
or
add
and
stc
or
out
mov
cmc
iret
es
sbb
jg
push
mov
repnz
push
sbb
jno
sub
imul
mov
imul
jge
fucomi
into
dec
push
insl
mov
sub
dec
jge
je
roll
or
and
pop
mov
movsl
adc
xchg
arpl
leave
outsl
push
out
xchg
loop
in
pop
mov
pusha
stc
dec
adc
mov
mov
cmc
imul
pop
cli
outsb
push
xor
enter
cmc
sbb
ret
adc
lock
xchg
push
scas
jne
js
inc
inc
inc
push
xor
loopne
pop
shrl
in
outsl
cmpsb
pop
bnd
gs
popf
stos
mov
xchg
sub
nop
in
jno
sbb
imul
xchg
sar
rorl
jnp
dec
push
leave
sub
push
jg
stos
loop
xchg
jle
int3
stos
int3
scas
jmp
cmp
and
xorb
adc
nop
imul
push
xchg
adc
sbb
jno
data16
cmpsl
or
pop
stc
test
adc
inc
xchg
push
jle
es
xor
clc
xor
xor
dec
sbb
adc
mov
xchg
jg
cmp
push
cs
pop
mov
and
ja
mov
fwait
in
jp
adc
enter
lods
insl
out
and
xchg
rolb
aas
test
xchg
lods
int3
push
mov
sarb
dec
dec
pop
adcl
fistpll
adc
ficomps
add
jg
pop
das
clc
pop
jl
jecxz
sbb
rcr
mov
test
lods
test
js
gs
adc
sar
jmp
fdivr
mov
mov
sub
outsb
fcmovnbe
popa
cmc
dec
scas
int
or
adc
xor
pop
shlb
jb
in
movsb
sbb
fdiv
xor
sub
fistpll
xor
push
shr
xchg
in
movsb
cmp
inc
mov
pop
aaa
or
pop
movsl
xchg
cs
sbb
imul
test
push
sub
pop
lcall
push
sub
inc
call
aam
jge
out
mov
cltd
pop
add
std
push
lret
imul
jmp
mov
mov
adc
insl
mov
movsl
pushf
jb
push
inc
cltd
jmp
fs
mov
dec
inc
pop
add
push
push
xlat
stc
stc
cmpsl
dec
daa
insb
imul
mov
decb
rcr
jno
inc
sub
sub
and
ret
cmpsl
mov
jbe
sbb
ss
sbb
aam
xchg
inc
std
or
push
dec
mov
inc
or
xchg
das
daa
in
sbb
adc
push
repz
mov
lds
jae
bound
int3
lret
jle
xor
pop
or
hlt
popf
aam
mov
jge
cmp
sbb
mov
or
dec
sysenter
roll
push
stos
inc
in
cli
adc
jle
insb
or
mov
ss
fiaddl
sbb
push
lds
mov
lahf
push
aas
push
and
and
daa
fdivl
shrb
mov
dec
call
cmp
mov
and
daa
xchg
call
inc
mov
pop
sbb
jle
out
mov
test
push
sbb
pushf
mov
cmpsb
push
in
pop
loopne
das
and
lods
pop
stos
inc
add
aam
or
dec
mov
in
sub
jl
in
adc
inc
sub
xor
mov
jb
sbb
xor
push
sahf
push
sbb
sbb
push
aaa
xchg
xchg
sub
ror
divb
dec
push
jno
hlt
push
xor
push
jmp
jl
mov
fsubrs
daa
push
mov
mov
inc
mov
mov
fimuls
cmp
cld
push
push
cmpsb
adc
divb
les
xchg
xchg
and
shrl
pop
pusha
cld
pcmpgtw
lret
jns
adc
loopne
or
aam
add
daa
leave
sti
inc
pop
insl
xor
outsb
mov
sub
add
mov
mov
cmc
mov
inc
pop
dec
push
aaa
inc
test
cli
cs
call
add
mov
inc
idivl
or
pushf
adc
int
sub
add
sbb
xor
inc
imul
int3
mov
sub
cs
pop
data16
test
js
xchg
jnp
shr
loope
add
cltd
adc
cmc
stc
stc
outsb
dec
sbb
and
xor
insb
pushf
ja
cltd
mov
outsl
nop
clc
inc
xchg
adc
es
mov
xchg
ret
lods
pop
xor
outsb
mov
sbb
mov
push
cmp
fwait
push
push
test
mov
pop
xchg
lock
cmpsl
sub
loop
mov
xchg
inc
rolb
mov
push
xor
mov
fcmovnbe
ja
shlb
push
jecxz
aad
mov
mov
cmc
and
or
add
pop
mov
lcall
xor
add
xchg
lcall
jmp
mov
fs
jp
lret
rolb
sbb
inc
xlat
int3
fwait
lahf
rcll
sub
xor
mov
outsl
pushf
fstpt
and
push
ret
mov
xchg
loope
lcall
test
roll
xor
mov
sbb
pop
mov
es
mov
dec
jecxz
imul
cltd
int3
or
mov
dec
add
aad
dec
jmp
mov
jmp
mov
ss
push
pop
pop
outsl
lret
xchg
mov
out
xchg
int3
mov
andb
pop
pop
sub
jbe
push
fcmovnbe
mov
mov
dec
gs
movsl
cmc
int3
scas
jmp
sti
mov
mov
stos
mov
push
or
add
out
mov
inc
gs
std
call
inc
sbb
and
popf
sub
popa
jnp
jnp
dec
inc
sbb
or
repnz
cmp
pop
push
jno
adc
repnz
sbb
fmuls
int3
adc
and
icebp
repz
outsl
xor
sbb
sub
in
fildll
add
inc
cmp
cwtl
push
int
lock
push
stc
push
xor
fdivl
cwtl
pop
adc
ss
clc
cmpsb
in
cmpsl
mov
lds
lret
repz
int3
cmp
mov
dec
movsb
jmp
insb
inc
insb
je
xor
push
lret
fildl
std
mov
jecxz
xchg
add
mov
jo
lcall
add
mov
xor
jbe
jnp
stos
mov
lret
xchg
push
fwait
cmc
fcmovnbe
adc
call
jmp
dec
jbe
xchg
push
out
shlb
mov
jae
pop
dec
xchg
and
imul
jb
xchg
lods
roll
cmpl
add
cmpsb
mov
dec
js
in
js
sbb
sub
mov
iret
push
mov
fsubs
jb
shr
cmpsb
xor
inc
fidivl
adc
push
fbld
lret
imul
xlat
pop
icebp
jmp
pop
xor
outsb
and
shrl
bound
ss
jno
mov
aas
mov
or
add
mov
sbb
rcll
inc
shrb
mov
inc
popa
imul
sahf
xor
bound
xchg
aaa
xchg
rcrl
add
test
lret
in
into
sbb
or
in
adc
xchg
inc
sarl
pop
sub
insl
fsubl
mov
sti
pop
or
fisttpll
dec
cmp
ds
arpl
daa
adc
stc
dec
out
dec
ds
pop
addr16
mov
rcll
push
loope
fwait
or
adc
mov
cmpsl
adc
cmpsb
or
ror
aad
adc
subb
xlat
icebp
pop
daa
loopne
mov
aaa
sub
cmc
out
cmc
stos
lret
data16
popf
and
shl
arpl
stos
out
dec
cmp
ss
xchg
mov
inc
inc
idivb
lds
je
mov
arpl
sbb
cmpsl
popa
and
fsubrs
stc
mov
shll
frstor
decl
fcomps
lret
adc
jns
test
jge
mov
mov
or
cmp
repnz
mov
testl
cmp
dec
cmp
fsubp
and
sbb
in
push
mov
pushl
sbb
fldt
pop
shll
out
sahf
testl
and
sub
push
outsl
pop
mov
arpl
inc
pop
xchg
dec
enter
cmp
mov
les
mov
mov
xchg
cmp
mov
lahf
leave
jnp
add
and
leave
pop
imul
pop
pop
mov
stos
pop
push
in
mov
cwtl
cmp
jne
hlt
xlat
pop
or
lock
loope
iret
cmp
fstl
add
int
out
pop
add
push
lds
aaa
mov
push
xchg
inc
call
sarb
in
adc
xor
cmp
repz
push
jle
add
outsl
lahf
lock
es
int
cmp
cs
cmp
inc
lds
xor
mov
or
or
add
inc
mov
nop
scas
out
push
insb
into
movsb
mov
aas
daa
rcrb
cmp
ja
push
pop
push
add
push
lahf
jae
fnstcw
inc
test
fucomp
clc
ret
push
emms
pop
fcomp
push
cld
je
cmp
loop
jl
push
and
jae
pop
fistpl
pop
sub
add
add
mov
rcl
sti
sbb
movsb
rcrl
and
dec
cmp
out
jae
add
xchg
push
movsb
orl
fcmovnb
sub
call
bound
adc
dec
shlb
push
push
xchg
in
mov
adcb
mov
or
dec
push
inc
fistpll
shlb
rcll
lods
mov
out
es
mov
jno
and
pop
addl
xor
mov
inc
sub
push
xlat
add
mov
jno
mov
aaa
mov
pop
pusha
add
cld
xor
mov
mov
push
sub
xor
sub
inc
mov
out
out
push
add
int
lret
les
scas
fcoml
mov
add
imul
negl
fdivs
mov
aad
nop
testb
push
jp
mov
sub
into
push
adc
out
js
ss
scas
lods
popf
sbb
add
dec
xchg
mov
rcl
and
dec
xchg
jne
inc
out
jae
outsb
lcall
mov
jnp
in
or
in
or
inc
cmp
test
enter
enter
loop
jne
cmp
mov
jmp
pop
dec
or
xchg
imul
pusha
mov
cli
test
stos
adc
dec
bound
and
mov
mov
inc
ret
iret
sub
insb
pop
xchg
xor
lods
aas
imul
sub
jo
mov
in
fwait
push
lret
lret
cmp
das
mov
frstor
sbb
sahf
sbb
sub
cwtl
test
mov
ds
bound
push
cmpsl
cmc
xor
scas
xor
xor
cwtl
sti
cmp
sub
vmwrite
mov
pop
jge
in
shll
in
imul
or
jg
mov
das
cltd
and
hlt
dec
or
lds
int
xor
pop
mov
or
aas
cmp
and
and
pop
das
or
call
mov
xor
rorl
pop
jae
sbb
sub
lods
test
cmp
pop
dec
dec
imul
stc
cmpsb
cmpsl
insl
stc
pusha
jle
fidivrl
iret
scas
ret
mov
scas
mov
mov
inc
push
hlt
jl
mov
add
push
mov
mov
sbb
aad
in
cmp
mov
jb
addb
xchg
sahf
and
lock
mov
or
in
jne
jbe
xchg
cltd
icebp
adc
xchg
xor
xor
outsb
movsl
jmp
mov
mov
pop
cmpl
jo
fisubrs
jns
sub
addr16
jo
idivl
jecxz
aas
push
xchg
mov
or
out
leave
mov
ja
cmp
dec
sbb
and
lahf
adc
jo
xchg
jle
cmpsb
cmp
pop
mov
adc
and
push
out
aam
loope
lret
mov
insb
fdivp
aaa
mov
push
jp
mov
insl
mov
aad
xor
dec
lret
inc
pop
aad
sbb
je
aas
popa
aaa
jno
iret
lret
xchg
ret
cmp
enter
xchg
cmp
repnz
out
insl
xchg
icebp
addb
push
xor
xchg
pop
xor
js
mov
mov
pop
and
pop
insb
arpl
call
cltd
jae
inc
mov
mov
sbb
pop
scas
mov
xchg
in
iret
add
xchg
fs
mov
repz
mov
ret
push
cmp
or
movsl
cld
ret
push
mov
test
jl
mov
push
mov
aam
xchg
pop
cmp
adc
scas
mov
jo
adc
push
dec
jbe
xchg
cmp
xor
cltd
fistpll
testb
add
xlat
mov
xchg
cmpsl
aam
add
mov
or
rcl
jbe
and
jo
in
inc
pop
and
xchg
fstpt
lock
les
roll
and
mov
mov
mov
jmp
mov
pop
lret
leave
outsl
jno
xchg
and
sub
and
sbb
outsl
aad
xor
fwait
push
mov
or
cmpsl
pop
jp
pop
mov
frndint
jmp
mov
das
inc
out
push
or
mov
sbb
gs
in
popa
push
dec
mov
mov
sbb
sub
in
mov
adc
sub
outsl
adc
mov
andb
push
sbb
dec
arpl
lret
lods
imul
mov
or
push
sbb
jge
adc
fmuls
pop
fsubp
enter
out
popf
nop
stc
push
jno
mov
cmp
outsl
xor
call
jge
adc
mov
add
data16
in
jae
les
in
mov
adc
sub
pop
sbb
icebp
mov
push
arpl
mov
add
outsb
or
rcl
xor
push
add
movsl
sarb
hlt
outsb
sub
dec
loope
mov
jmp
enter
cld
adc
jne
fisttpll
pop
popa
cmp
dec
nop
es
push
push
lods
fistpl
mov
push
nop
icebp
int
and
jnp
jb
add
in
hlt
arpl
pop
mov
ljmp
rcrb
cli
mov
loopne
std
mov
out
movsl
repnz
lret
xchg
dec
dec
sub
or
dec
mov
inc
and
cmp
xor
aaa
adc
arpl
leave
cmp
jg
fwait
sub
adc
xchg
mov
popf
jle
xchg
aad
xchg
xorl
aaa
or
cmp
mov
int
xor
mov
push
mov
push
jmp
dec
jbe
cmp
push
inc
xchg
xchg
xchg
mov
xchg
mov
cmp
shrl
cld
and
mov
fcmovu
xor
test
les
mov
pop
cmp
lea
and
into
fcomp
je
cmpsb
ficompl
jl
fs
mov
xorb
imul
jle
push
xchg
lret
mov
inc
mov
ja
cmp
add
in
out
movsb
mov
movsb
jge
cmp
lds
mov
sarl
xchg
lods
mov
gs
sub
fisttpl
adc
ret
lods
sub
dec
cmp
cmp
and
or
fabs
add
mov
xchg
push
fistpl
pop
lock
or
push
out
test
sub
push
add
movsb
outsb
cli
jmp
adcb
movsb
repnz
in
iret
and
imul
ret
scas
mov
and
shl
int3
pop
xchg
adc
cmp
shll
scas
inc
add
lods
gs
inc
in
fbld
loopne
repnz
data16
je
adc
mov
pop
sbb
cmpsl
dec
movsb
dec
sub
lods
jp
fbld
js
and
xor
negl
or
into
add
adc
pop
cmp
inc
cli
and
and
inc
ffree
mov
ja
and
jno
dec
sahf
sbb
loop
pop
popa
out
jno
outsb
adc
fisttpll
push
sbb
mov
inc
dec
aad
stos
pop
push
jns
mov
sbb
mov
aad
mov
push
mov
jae
dec
dec
cmp
lods
pushf
stc
sbb
mov
test
cld
out
sub
cld
push
or
mov
jb
jae
push
sbb
mov
roll
jnp
insb
bound
loop
xor
sti
mov
test
adc
aam
lret
xchg
xchg
mov
imul
xorl
fcmove
bound
cmp
sbb
scas
xchg
loope
mov
fstpt
clc
mov
nop
sub
dec
fmuls
ljmp
cli
adc
out
and
and
pusha
sub
sub
loop
inc
inc
insl
mov
test
mov
leave
and
pop
mov
sarb
cmp
lcall
gs
inc
mulb
pop
xor
imul
into
mov
sbb
movsl
je
mov
mov
out
leave
leave
xlat
jb
nop
mov
stos
mov
or
es
inc
xor
jge
adc
jecxz
lret
mov
cmp
mov
fdivs
mov
sub
mov
jns
sbb
lahf
inc
jne
pusha
addb
xor
xorl
pop
cmc
add
xchg
stos
jge
sub
cwtl
pop
dec
xorb
cwtl
aad
mov
xchg
test
mov
inc
add
push
dec
loope
cld
pop
imul
jne
leave
cmpsb
mov
dec
rcll
adc
addb
xchg
dec
into
fstpl
orb
mov
cmp
push
out
jns
lret
mov
mov
test
and
dec
data16
popa
jbe,pt
dec
jge
xchg
fstps
test
fdivs
pop
clc
cmp
jb
jb
repz
sahf
scas
xor
pop
std
cltd
or
dec
in
push
fndisi(8087
xor
adc
in
xchg
sbb
or
inc
pop
jb
inc
or
pop
dec
push
cwtl
jo
push
shll
and
xchg
jl
push
mov
fs
push
movsb
add
addr16
out
aam
pop
sub
into
dec
insl
addr16
out
mov
in
add
ficoms
push
xchg
pop
jno
test
xchg
mov
shrl
or
pop
or
cmp
outsb
and
jae
jne
enter
add
jae
cmc
jb
fdivrs
jl
cld
xchg
enter
in
aas
push
inc
test
rolb
aas
imul
adc
cs
mov
cwtl
jo
or
push
inc
mov
or
into
add
pop
push
andl
add
mov
test
out
jmp
sub
cmp
inc
lahf
push
test
sub
inc
jp
pop
and
popa
out
imul
mov
sbb
add
arpl
ret
fs
cs
push
cmp
inc
clc
pop
lcall
push
das
insl
movsl
mov
mov
movsl
add
leave
fiadds
inc
scas
je
lahf
mov
sbb
lods
cmpb
adc
ret
fcoml
int3
mov
testl
int3
sub
roll
pop
jns
jo
jno
insb
mov
add
mov
sub
mov
sub
sub
ss
mov
xchg
dec
movsb
lahf
ljmp
sbb
add
sti
dec
or
pop
add
push
mov
adcl
gs
sahf
in
repz
xchg
mov
xchg
xlat
dec
push
sahf
sub
ret
lods
inc
and
nop
mov
inc
test
orl
and
dec
pop
aad
inc
push
jnp
sub
xor
hlt
je
daa
stos
shrb
imul
icebp
mov
sbb
dec
and
inc
adc
jb
dec
js
xchg
fistps
outsb
lods
or
ss
cli
mov
sub
test
lcall
cmc
sbb
fnstenv
imul
nop
or
inc
xor
test
punpcklbw
aaa
xor
pop
pop
mov
jecxz
xchg
cmp
adc
push
sub
xor
mov
xor
xchg
push
movsl
or
adc
sbb
jne
sbb
mov
lods
and
fnstenv
imul
je
addr16
inc
scas
pop
das
iret
and
sbb
add
push
scas
inc
jbe
aas
and
pop
insb
push
fidivs
push
mov
pop
pusha
xor
dec
aam
cmp
pop
pop
sbb
mov
test
xchg
jns
flds
sub
dec
iret
push
jne
pop
aas
push
rorb
scas
jecxz
push
xor
nop
xchg
dec
pop
lahf
sub
sarb
dec
sbb
call
idivl
sub
pop
lods
inc
adc
lret
sbb
pop
sbb
loope
in
jo
mov
fidivrs
mov
ret
xor
lret
js
fcmovnbe
lret
aaa
add
out
pop
sbb
push
in
and
adc
mov
mov
and
jmp
jecxz
xchg
test
test
mov
roll
xorps
repz
dec
dec
jle
hlt
repz
jae
fistps
imul
inc
sub
test
ja
into
xor
jg,pn
int3
scas
jo
mov
jmp
mov
sarb
push
dec
mov
xlat
dec
mov
xor
ss
les
enter
mov
repnz
or
sub
fistpll
xchg
jl
repnz
push
pop
push
out
lea
mov
mov
jno
leave
lret
pop
or
out
insl
adc
xor
inc
shll
fistps
js
dec
hlt
movb
sbb
mov
jl
lds
notl
dec
adc
popa
or
lock
ficoms
jle
ret
cmp
pop
xchg
popf
popa
pushfw
dec
xor
mov
pop
pop
and
lods
icebp
mov
insl
or
xor
jp
cld
mov
pop
jnp
mov
fmull
jbe
inc
jne
lods
and
outsl
lock
sbb
in
popa
sbb
lcall
rorl
cmp
movsb
mov
stc
mov
mov
paddd
rcl
push
push
jmp
or
xchg
loop
fidivs
cmpb
dec
lock
mov
mov
out
inc
fldt
fs
or
sbb
mov
aad
inc
jl
mov
es
push
mov
ja
mov
pop
out
icebp
das
dec
aas
mov
leave
fwait
mov
lahf
cld
out
mov
sahf
mov
les
scas
and
test
stos
jo
push
xchg
sbb
sti
negb
negb
cwtl
cmp
jne
scas
insb
cmp
mov
jnp
inc
jl
jge
fdecstp
mov
ss
iret
mov
jmp
push
setg
addr16
cli
pop
js
dec
cmpsl
sub
jmp
aam
cmp
push
pop
jle
in
add
xchg
mov
aad
mov
and
cmc
aaa
inc
cmp
or
mov
mov
xchg
cltd
push
imul
int3
adcl
or
fwait
cmp
scas
pop
or
dec
mov
or
dec
cmc
xor
adc
add
push
loope
jno
jbe
popa
scas
sqrtps
int
es
rorl
jecxz
les
inc
pusha
mov
test
test
inc
dec
roll
insb
push
fidivl
lret
or
add
not
cmove
test
xchg
inc
loop
pop
pop
rcrl
dec
pop
in
stos
jno
iret
xchg
cmp
pusha
inc
xor
hlt
dec
add
fadds
iret
sub
mov
repz
repz
dec
sub
xor
lahf
inc
scas
jg
shll
fwait
outsb
in
jns
jp
fcomps
cwtl
lock
add
inc
dec
adc
push
dec
hlt
jg
enter
enter
or
add
xor
sub
push
es
sub
flds
adc
stc
call
pusha
cmp
cs
dec
lcall
sbb
inc
mov
fldcw
add
mov
sbb
mov
les
enter
cmp
and
add
push
enter
or
add
add
jmp
mov
dec
adc
stos
mov
imul
dec
jbe
hlt
data16
xchg
jns
mov
mov
dec
cmpsl
mov
les
pop
movsl
into
in
ret
push
jo
sub
mov
add
lret
pop
xor
das
xchg
and
aad
inc
insb
test
pushf
clc
data16
idivb
loop
daa
in
xor
jnp
fsubrs
or
jae
adc
mov
jne
sub
push
je
mov
mov
adcl
add
repnz
ljmp
xchg
mov
mov
xchg
cs
inc
data16
sub
dec
test
stc
sub
out
test
hlt
pop
cmp
cmp
sub
adc
mov
lret
xchg
push
push
mov
mov
out
loop
in
ss
outsb
dec
aam
dec
mov
lds
aam
insl
adc
faddl
daa
gs
dec
add
insl
push
mov
clc
movsl
sbb
push
ret
lret
cmp
insb
in
pop
jg
rcrl
dec
sub
lods
stos
push
add
int3
sbb
mov
inc
mov
inc
push
sub
fistl
sub
pop
lret
icebp
jp
mov
outsl
add
xchg
dec
pop
add
test
or
xchg
les
adc
mov
mov
sbb
imul
in
sub
fidivrl
mov
imul
jp
cld
loop
mov
pop
or
das
imul
dec
lods
sub
jg
fcmovne
arpl
push
das
cld
test
jge
aaa
xchg
pop
lods
lahf
cld
dec
fyl2xp1
ds
push
inc
scas
push
adc
mov
adcb
stos
inc
int3
cmpsb
add
jp
popa
push
xor
lret
gs
sub
test
icebp
daa
cmp
lods
insl
testl
jg
dec
jg
jl
jnp
movsb
mov
cmp
cli
int3
div
sub
rep
lock
pop
adc
std
push
ret
and
fsubr
jno
sbb
cmp
push
dec
fidivs
pop
pop
insb
cmp
mov
add
jns
mov
sub
sahf
jmp
and
pushf
inc
pop
in
add
repnz
scas
mov
bound
adc
jl
fisubrl
dec
sbb
pop
subl
sub
fnsave
and
mov
mov
push
or
clc
fnsave
ljmp
inc
dec
inc
xchg
loop
ficompl
mov
cld
aas
xchg
loopne
mov
xor
std
jmp
aad
scas
bound
jecxz
rorl
das
lods
jb
push
ret
jge,pt
mov
xchg
inc
sub
dec
jg
inc
mov
mov
adc
std
out
cmp
lret
fimull
popa
fistpl
xchg
pop
dec
lahf
cmp
cmp
repnz
adc
add
daa
push
outsl
pop
jo
arpl
ficomps
insb
nop
out
cmp
mov
sbb
xchg
cmp
jbe
and
popf
mov
xor
loope
out
pop
lods
push
mov
flds
jbe
xchg
ficoms
dec
int3
dec
fcomps
and
jae
or
cmpsl
pop
in
jns
pusha
popa
fdivrl
shlb
pop
mov
cmp
clc
stos
add
and
daa
and
xchg
ds
addr16
mov
sarb
xor
leave
or
lret
in
xor
loopne
gs
lahf
xor
negb
mov
and
cs
stos
push
repnz
push
xor
sub
and
cltd
imul
xchg
xchg
lock
mov
mov
fmul
imul
push
jns
sbb
dec
adc
mov
mov
pop
add
pop
adcl
xorl
sub
data16
shrl
out
lea
mov
cwtl
sub
inc
or
mov
add
in
mov
dec
or
inc
outsb
loope
in
test
and
or
push
xor
jp
loope
arpl
xchg
jp
xor
push
sbb
jns
out
inc
into
push
add
or
cmp
shrl
jae
xchg
mov
enter
xor
test
shl
inc
fnstenv
cmp
repz
jnp
lock
push
lret
movlps
fwait
repz
xchg
xor
addr16
sbb
fldt
movb
cs
xorb
divb
cwtl
xor
gs
stos
pop
mov
jno
loopne
xor
mov
neg
icebp
xor
es
add
ds
dec
push
xchg
mov
test
in
nop
dec
je
mov
push
rorl
add
xor
popf
mov
push
cld
lods
clc
divl
inc
cmpsb
repz
scas
in
stos
sbb
bound
pop
dec
xchg
in
hlt
pop
das
or
jnp
add
mov
insl
outsl
out
clc
fwait
mov
dec
call
ja
sbb
cwtl
fbld
pop
lcall
call
idivb
cs
mov
and
call
fnstenv
je
dec
or
pop
popa
and
popa
ret
mov
add
xchg
test
repz
fidivl
sub
pop
cmpsl
lods
les
push
jl
fstpl
jo
mov
mov
pushf
xor
hlt
imul
cmp
addr16
pop
test
in
or
aaa
mov
jns
pop
mov
mov
xchg
stos
leave
cltd
into
mov
xor
ds
sbb
test
popl
in
or
movl
or
push
outsb
mov
repz
mov
leave
or
stc
mov
notb
ret
std
addb
es
dec
add
adcb
mov
xor
mov
mov
shll
bound
sub
nop
test
repnz
nop
fnstsw
insl
ja
adc
and
sub
cmp
ss
int3
mov
enter
jecxz
push
aam
xchg
push
xchg
fcoml
ret
shlb
movsl
dec
or
das
fwait
lcall
imul
aas
sbb
arpl
imul
xchg
loop
rclb
rorb
sbb
xor
or
out
pop
ljmp
imul
pop
cs
js
addr16
dec
pop
insb
add
dec
das
pop
push
sbb
add
arpl
pop
out
enter
mov
test
pop
mov
fisttpl
cmpsl
jne
and
lods
cmpsl
stc
mov
adc
jp
adcl
inc
pushf
les
adc
cmp
sbb
andl
add
jl
mov
sbb
dec
mov
or
sti
mov
mov
cli
lcall
or
jo
mov
rclb
aad
pop
mov
xor
jbe
or
pop
in
aaa
in
inc
shrl
lret
lahf
jl
ret
cmp
cmpsl
cltd
xor
cmp
adcl
add
std
lret
sub
xchg
movsb
mov
fnstenv
dec
push
call
inc
jnp
movsb
mulb
add
dec
cmpsl
mov
adc
out
sbb
mov
bound
test
jecxz
insb
pop
cmp
jge
in
stos
push
loope
out
mov
gs
xchg
lcall
push
and
lods
push
mov
aaa
imul
dec
jbe
ja
or
scas
fistps
add
mov
call
lret
ja
and
int
mov
sbb
sbb
xor
ss
xchg
outsl
aam
jmp
rcr
clc
mov
mov
aad
mov
loopne
call
push
shl
jne
mov
sub
xchg
filds
xchg
or
mov
je
pusha
cmp
hlt
ror
fsubrl
cmpsb
scas
cmc
out
push
push
push
mov
mov
stc
or
or
ret
scas
xchg
in
arpl
imul
jae
fcomps
cmc
fdivl
lods
xchg
iret
icebp
pushf
sahf
mov
add
decl
mov
lock
or
add
xor
nop
adc
jae
orl
sbb
xchg
loopne
mov
punpckhwd
and
lods
int
jb
pop
jae
popf
cli
stos
and
fcomps
xchg
dec
mov
xchg
jnp
fldcw
iret
push
pop
cmp
loopne,pn
push
sub
push
xchg
xchg
or
pop
cmp
rorl
cs
pop
clc
jne
cmpsb
inc
movhps
jno
lret
call
jle
pop
dec
pushf
jle
inc
dec
gs
mov
xchg
xor
daa
sub
test
adc
mov
icebp
std
in
imul
sbb
push
jb
or
pop
fistpll
mov
sahf
movsb
pop
movsl
fucomi
icebp
filds
fstpt
mov
dec
and
stos
rcrl
mov
addr16
jne
mov
inc
out
mov
push
sbb
and
jmp
js
jno
jmp
icebp
andl
ss
jmp
pusha
dec
clc
adc
xchg
gs
inc
xchg
jne
rcrb
dec
jg
test
cmp
mov
lret
cs
inc
dec
xchg
shlb
add
xchg
push
sub
stos
jnp
dec
js
mov
dec
fsubl
add
jmp
dec
loope
pop
test
push
arpl
add
out
hlt
add
cltd
or
cmc
cmp
add
cmp
orl
mov
push
push
xchg
mov
jl
aam
bnd
int3
mov
je
add
mov
add
lret
sub
enter
jns
mov
sbb
fistpl
mov
sarl
pop
push
rolb
test
mov
stos
dec
push
je
mov
daa
pop
loope
mov
ret
stos
scas
hlt
js
xor
push
gs
pop
lahf
push
xor
movq
out
xor
in
adc
ss
push
jb
or
hlt
sbb
add
in
mov
fmul
xor
sbb
mov
bound
cli
push
mov
outsl
mov
jg
jno
in
or
lcall
call
sti
cmp
and
cmp
pop
in
outsb
icebp
pop
pop
cs
call
movsl
cmp
jge
add
fucomi
push
push
jb
int3
inc
jnp
sub
sbb
pop
push
into
std
lods
das
push
jnp
test
mov
fidivrs
mov
sub
outsl
or
and
ficompl
in
ds
std
fdivrl
mov
push
push
popa
int3
jp
push
push
add
out
pusha
cld
out
clc
mov
sti
stc
mov
nop
insb
ljmp
mov
popa
ret
adc
cltd
jns
sub
ljmp
or
and
test
cmp
mov
and
stos
and
lret
movsl
push
xor
hlt
scas
sbb
pushf
fwait
push
in
mov
mov
jle
pop
aad
ss
add
imul
idivb
jp
pop
inc
lock
dec
shl
dec
and
or
ret
mov
enter
subb
or
lahf
das
jl
sub
jle
mov
icebp
dec
jo
pop
jnp
out
ja
sbb
jns
mov
rcrl
cmp
mov
cwtl
sub
mov
mov
dec
cmpb
movsl
loope
lock
jne
out
jno
lret
jns
ffreep
mov
mov
xchg
sub
shll
jecxz
xchg
aad
dec
xor
pop
dec
xchg
add
test
mov
mov
mov
pop
mov
or
int3
sub
cltd
bnd
adc
dec
dec
mov
insb
jae
cli
cmp
imul
pop
cltd
cmp
stc
cmpsb
lods
mov
shlb
inc
iret
sbb
jnp
cmpsl
jnp
sbb
out
aas
imul
fninit
mov
lock
leave
inc
mov
int
movsl
dec
mov
inc
and
test
inc
and
cmpsl
jns
adc
dec
mov
cmp
into
sbb
add
addr16
sub
es
jb
iret
jg
lret
adc
xor
and
das
andb
popa
fidivrs
shll
arpl
push
add
lock
jb
inc
call
and
mov
push
xchg
pusha
mov
shrl
stos
movsb
jns
cwtl
push
enter
cmp
mov
pop
mov
cmp
ljmp
jne
iret
addr16
call
mov
mov
loop
cmp
inc
test
xor
lret
inc
mov
jns
mov
imul
gs
loop
icebp
scas
or
nop
pop
dec
or
sbb
cmp
mov
and
mov
pop
jge
cltd
mov
mov
and
xchg
mov
add
cmp
inc
insl
lcall
data16
cmc
or
in
dec
inc
inc
pop
insl
push
movsl
sahf
sti
hlt
xor
xor
xor
mov
or
or
out
mov
inc
sub
xor
cmp
or
rclb
fchs
iret
sub
out
clc
mov
pop
loopne
mov
sbb
icebp
mov
push
mov
mov
mov
clc
mov
jns
mov
mov
aas
add
ds
int
jb
mov
jno
and
cmpsl
add
add
mov
lods
or
addr16
ljmp
ljmp
test
mov
push
test
movsb
jb
push
mov
flds
aad
jne
shr
cltd
lea
adc
jecxz
ljmp
pop
bnd
xchg
or
push
jecxz
imul
rol
lock
daa
or
setb
dec
sbb
cmp
jne
les
mov
call
push
lods
sub
pop
cli
ss
stc
pop
mov
stc
imul
add
push
sbb
pop
mov
in
int
xor
xchg
inc
sti
add
jne
jae
lods
xchg
dec
hlt
jle
push
clc
ret
andl
adc
fs
imul
fs
push
popa
xor
in
clc
mov
leave
cmp
mov
pop
enter
sub
pop
aam
cmp
pop
nop
sbb
and
push
je
push
xchg
xchg
jbe
icebp
cmp
xchg
loop
cmpsb
xor
sub
adcl
push
pop
ret
aam
mov
mov
mov
insl
push
roll
jne
sbb
or
out
das
out
and
ret
out
lock
add
in
cmp
mov
rorb
scas
insb
out
fwait
shll
dec
add
outsb
stos
push
or
or
pop
js
movsl
test
shl
jmp
lret
push
ds
ljmp
lds
inc
jg
jb
pop
lods
inc
pop
mov
bnd
loope
cld
imul
inc
in
lcall
push
sbb
xor
nop
notb
test
test
fisttpll
adc
xchg
mov
ja
loop
lret
or
imulb
hlt
add
xchg
aad
test
orb
cmp
andl
lock
or
fucomi
sbb
jle
dec
cmp
mov
mov
mov
int
xchg
inc
pusha
jb
push
mov
int3
stc
pop
icebp
push
sub
mov
dec
nop
pop
test
lret
pop
stc
adc
aam
mov
fprem
insb
push
xchg
cmpsb
pop
leave
mov
dec
repz
jmp
mov
mov
and
mov
mov
cmp
pop
clc
popa
push
xchg
sub
push
mov
xchg
sub
andl
ss
sbb
jnp
push
jne
bound
enter
js
jno
push
sahf
adc
push
add
shrl
nop
dec
scas
mov
mov
popf
scas
out
mov
pop
mov
xor
add
inc
lods
mov
es
leave
mov
jmp
pop
add
sbb
insl
aaa
outsb
repz
mov
fnstenv
push
aam
lds
lahf
inc
imul
sbb
int3
lret
inc
std
hlt
ficoml
mov
cmc
shl
mov
shr
mov
mov
negl
mov
or
hlt
shl
jmp
jecxz
in
jb
xor
jg
xor
addr16
ljmp
xchg
cmpsl
inc
xchg
fisubs
icebp
push
add
ret
jno
leave
pop
lcall
mov
push
int
out
fwait
scas
xchg
jge
cmp
inc
pop
fcmovbe
and
push
mov
aam
pop
sbb
pushf
push
mov
lods
stc
daa
lret
call
mov
adc
jns
bound
std
loop
and
pop
adc
or
and
idivb
iret
ljmp
test
popf
aas
dec
pop
out
xchg
cmp
cmp
jno
mov
push
sub
mov
inc
pop
inc
ljmp
xchg
decb
jge
rorl
loopne
fistpl
mov
packssdw
in
mov
fwait
movhlps
pop
adc
adc
push
push
mov
lret
bound
sti
pop
aam
and
dec
les
mov
outsb
insl
adc
nop
iret
inc
arpl
lret
or
ljmp
std
sub
loope
sub
mov
pop
cmc
js
and
cmc
mov
adc
pusha
lcall
pop
lea
push
jmp
cmc
mov
cmp
and
fsubs
push
popa
pop
dec
mov
dec
mov
leave
mov
mov
pop
mov
and
xor
add
imul
adc
addr16
out
xlat
repnz
sub
loop
shll
mov
data16
orb
push
int3
pop
push
aaa
mov
mov
mov
mov
cmp
fst
jae
mov
inc
pushf
insb
jmp
mov
fimuls
add
xor
xor
outsl
and
add
jbe
mov
or
xchg
jecxz
xchg
test
push
in
inc
adc
xlat
imul
stos
in
mov
fldt
loopne
outsb
das
adc
lea
add
sub
outsl
dec
bound
jg
adc
clc
sub
prefetch
or
shlb
mov
inc
mov
pop
mov
xchg
fmuls
cmp
mov
addr16
jle
sub
sub
dec
push
fcmovnbe
cld
mov
movq
outsb
pop
lret
xor
and
push
mov
dec
loop
sbb
jmp
and
cld
pop
lea
or
fwait
js
sub
or
sti
outsb
stos
pop
sub
jno
xorb
cmpsl
cwtl
lods
cmp
jnp
idivb
ljmp
stc
shlb
sbb
push
sbb
pop
mov
add
adcb
inc
xor
and
xor
call
in
pusha
and
jl
xchg
mov
cmp
lcall
xchg
push
mov
mov
negb
lds
sahf
mov
cmp
dec
or
fbld
sbb
fdecstp
call
mov
cltd
sub
dec
orb
ljmp
fcomi
sti
jl
out
stos
mov
push
or
push
hlt
xlat
or
jbe
stos
outsl
push
push
push
sti
or
pop
sub
inc
ljmp
dec
push
xor
mov
lret
mov
in
lahf
ret
add
inc
fwait
mov
mov
add
push
fcmovbe
enter
sti
orl
jl
cmpsl
loope
xchg
sbb
rcll
dec
loop
sbb
and
loopne
repnz
pop
dec
outsl
mov
xorb
jnp
mov
jmp
and
pop
aaa
inc
add
add
jne
jge
and
xchg
xor
inc
dec
mov
jbe
int
dec
aaa
or
cmp
loope
jo
shll
shl
add
xchg
fwait
int3
and
mov
mov
in
mov
jp
xor
je
mov
or
mov
xchg
in
ficoms
xor
jno
ret
cmp
aaa
cmp
jo
pop
sub
mov
in
xchg
push
or
and
mov
mov
lds
mov
ret
adc
outsl
enter
push
cli
or
sahf
cmc
cmp
icebp
int
push
popf
daa
sub
dec
jo
cmpsb
test
mov
es
std
lea
cltd
stos
scas
and
fmul
mov
mov
and
dec
and
add
sub
dec
je
aaa
mov
ljmp
bound
sub
inc
pop
ljmp
and
sub
jmp
sub
jl
mov
in
leave
add
outsl
dec
movsl
popf
test
push
subb
roll
sub
cld
jns
xchg
jno
jns
daa
iret
inc
jne
loop
pusha
sbb
and
cmpl
test
pop
jg
stos
divl
xchg
add
cltd
mov
or
add
inc
jle
xchg
inc
fwait
and
stos
fsubrs
dec
cmp
loopne
mov
add
sahf
push
mov
jo
movsb
mov
push
jnp
rclb
jl
nop
movsl
jne
mov
adc
js
add
dec
pop
ja
repnz
jle
cltd
ret
stc
repnz
inc
lds
dec
mov
cmpsb
sbb
adc
xchg
sub
cli
std
lret
test
adc
popa
push
sti
dec
or
inc
int
inc
cld
lock
sbb
xchg
imul
push
stc
inc
inc
mov
pop
mov
push
mov
inc
notb
pusha
testb
sub
inc
shrb
add
mov
add
lret
inc
sbb
pop
push
test
ret
js
push
aas
xor
popf
loope
sbb
sub
xchg
dec
subb
vpshaw
push
adc
mov
test
mov
lea
int
imul
imul
clc
scas
and
lcall
cld
cmpl
imul
mov
jbe
push
popa
pop
push
mov
stc
sub
sbb
or
or
add
pop
mov
adc
cltd
and
in
outsb
movsb
cmp
or
iret
ljmp
jg
xor
xchg
dec
orb
mov
inc
cmp
sti
mov
mov
dec
xor
shll
and
stc
pop
xchg
jne
enter
mov
push
or
ds
movsl
xchg
and
cmp
call
mov
mov
int3
push
leave
jbe
sub
inc
sbb
mov
mov
push
out
aam
mov
pop
pop
call
jle
mov
add
inc
subl
mov
pop
cmpsl
pop
das
push
outsl
mov
aad
scas
lock
jae
in
pop
xor
in
push
ret
xchg
aam
cmp
push
pop
mov
cmpsb
dec
arpl
pop
lret
jmp
mov
lret
inc
jp
adc
repnz
stc
loopne
and
decl
or
jno
or
jno
cmp
sahf
sbbb
xor
fs
shr
push
testb
int
cmpb
xor
xor
mov
stos
add
sbb
stos
mov
lds
mov
lahf
push
repz
loop
jne
ja
stc
adc
mov
jns
mov
inc
pop
xchg
sbb
cs
pop
movsb
sub
mov
addr16
pop
int
jecxz
add
fwait
aad
push
fs
xor
jmp
sahf
test
pop
into
adc
cmp
ja
andl
jbe
sbb
shrb
and
cltd
aad
push
pop
loop
scas
xchg
pop
add
test
mull
jno
inc
xchg
aas
and
mov
gs
shlb
dec
cmp
jl
inc
ljmp
loopne
xchg
push
fadds
into
mov
fwait
loopne
ds
mov
roll
fcmovb
das
or
adc
int
inc
jnp
xorb
mov
mull
push
inc
call
repnz
fldenv
mov
mov
jbe
icebp
dec
mov
lahf
and
sbb
pop
in
xchg
jg
mov
or
mov
adc
movsl
jb
arpl
cmpsb
fmull
ret
add
jno
push
in
shlb
js
aam
js
mov
cmp
cltd
orb
insl
or
lods
call
jae
sbb
mov
push
aad
push
mov
or
adc
in
icebp
insl
fwait
popa
ret
aam
std
cmc
out
mov
ss
mov
xchg
jmp
inc
jns
sahf
jecxz
sub
fdivrl
xor
jle
dec
xor
popl
jnp
dec
push
xor
dec
pop
fisttpll
dec
sub
fbstp
ffree
mov
jb
push
rcr
jmp
push
jmp
push
int3
and
fdivs
mov
imul
adc
imul
jg
mov
int3
addb
std
fcoms
aaa
das
mov
push
or
and
mov
jle
mov
adc
inc
mov
out
popa
ss
iret
mov
mov
clc
cli
dec
cmp
xor
mov
jo
ret
push
cmp
addr16
dec
mov
mov
pop
mulb
xchg
aam
pop
xor
jg
mov
rcrl
fs
in
xorb
push
testb
mov
sbb
js
and
xor
shrb
test
xchg
movsl
dec
push
and
cmp
pop
pop
jmp
popf
scas
bound
out
cwtl
pushf
push
pop
out
cltd
nop
inc
mov
js
and
mov
subb
jnp
mov
sub
addr16
aaa
out
inc
mov
iret
mov
xchg
and
adc
adcb
mov
mov
ret
xchg
add
shlb
mov
pop
pop
cmp
mov
hlt
pop
fimull
mov
ret
pop
fmulp
movsb
data16
hlt
xor
std
repnz
xchg
jbe
mov
fldenv
mov
icebp
jbe
xchg
mov
mov
sti
out
cmp
cmpsb
add
pop
mov
lock
adc
hlt
jb
fwait
xchg
and
cmp
pop
push
lods
ficompl
dec
jl
jle
push
rorb
pusha
xor
jo
sbb
jae
ljmp
sbb
xchg
add
xor
mov
cmp
sti
sbb
repnz
xor
lock
sub
sub
mov
or
or
jmp
mov
fadds
ret
push
xor
sub
and
adc
jle
mov
xorb
add
xchg
push
fwait
pop
js
pop
jl
push
rcrb
jp
xchg
cmp
xor
loop
dec
testl
cmp
and
pop
out
jnp
scas
jle
push
outsl
ljmp
andl
inc
fists
fadd
repz
repz
aam
pop
and
inc
shll
into
add
mov
mov
fcmove
dec
sbb
out
mov
push
dec
fildl
or
and
data16
xor
das
ret
xchg
test
adc
mov
movsb
or
lret
cld
ljmp
pop
jle
ret
cmpl
jne
xchg
pop
xor
add
loopne
pop
outsb
in
adc
outsl
out
daa
in
pop
xchg
hlt
dec
data16
cs
fistps
add
aam
jno
xor
and
inc
jns
mov
cmp
adc
or
mov
cld
in
ret
xchg
jb
jl
rcll
cmp
aas
cmp
adc
add
mov
scas
or
or
in
pop
mov
jb
daa
inc
fisubl
jnp
lods
mov
cmp
adc
les
movlps
push
mov
jecxz
aad
xor
inc
and
jge
mov
jmp
cmp
lock
or
fisttpll
imul
pop
xchg
les
je
out
push
cmp
inc
and
sub
inc
mov
cld
repz
mov
jnp
mov
jmp
sub
call
fcompl
mov
mov
insb
jecxz
negl
pop
add
pop
push
mov
adc
pop
mov
scas
cmp
or
loope
mov
mov
push
dec
shl
lods
push
dec
enter
push
stc
jae
sub
fcmovnbe
lods
outsb
enter
dec
mov
sbb
jo
and
shr
mov
insl
pop
adc
push
cmp
jmp
in
ljmp
xor
negb
cmp
mov
xchg
out
in
cwtl
loop
adc
pop
dec
adc
sahf
aas
dec
repz
jo
shlb
pop
loopne
lods
push
jg
and
sbb
int
cmpsl
imul
mov
adc
mov
sub
call
xchg
push
mov
aaa
scas
and
insb
jmp
daa
sbb
hlt
jl
out
nop
sti
jmp
pop
mov
dec
fdivr
push
mov
mov
mov
stc
mov
add
sbb
fwait
add
mov
cmp
jne
xchg
lret
arpl
inc
cmp
gs
addr16
mov
dec
mov
cmpb
mov
and
xchg
mov
and
mov
out
in
bound
sbb
cwtl
insb
xchg
xor
ret
cmp
mov
fcomps
inc
imul
lds
sub
push
fisubl
sub
hlt
fdivr
dec
xlat
into
out
mov
or
lock
xchg
movsl
mov
pop
inc
or
mov
mov
ret
xor
mov
adc
or
inc
pop
mov
push
adc
or
fwait
cmp
sbb
repz
xchg
sbb
sub
movsl
pop
outsb
inc
and
pop
ds
or
jmp
jg
and
jae
insl
push
sbbb
sbb
loopne
lods
call
shrb
jns
mov
test
subl
mov
in
and
inc
sbb
sahf
test
jb
scas
mov
and
add
inc
inc
and
add
xor
iret
loope
fldcw
sbb
test
stos
jb
push
xor
outsl
sub
aad
test
bnd
cmpsl
push
xlat
cmp
subl
xchg
cmp
cmp
int3
mov
jae
mov
mov
rcl
push
pop
or
pop
lcall
adc
insl
inc
sub
ret
xlat
pop
xchg
adc
mov
push
call
scas
mov
dec
push
inc
dec
adc
sbbl
pushl
roll
fdivrs
rcrb
push
adc
ficomps
lcall
std
dec
sbb
pusha
sub
push
sub
cwtl
je
sub
les
mov
adc
push
or
xlat
mov
cmp
mov
adc
jnp
inc
rcll
xor
repnz
jmp
pop
fwait
adc
push
fs
xlat
inc
fcos
sbb
push
dec
mov
mov
push
jg
mov
mov
ffreep
test
andl
xlat
or
fbld
movsb
jp
pop
outsl
cmpsl
and
ret
pop
push
cmp
mov
push
mov
or
jmp
mov
and
pop
mov
out
out
and
sub
lds
mov
jecxz
sahf
repnz
pusha
inc
xchg
movsl
aaa
in
jge
xor
pop
mov
mov
out
mov
mov
cs
mov
pop
movsb
sbb
cmp
mov
and
inc
in
inc
leave
push
inc
cmp
or
fs
jecxz
mov
scas
out
les
cmc
fwait
dec
jae
fisubs
data16
jno
sub
dec
xor
cltd
outsb
pop
test
adc
jmp
push
and
add
sub
fnstsw
push
jg
push
push
repz
div
mov
nop
ja
xor
std
mov
lock
sub
fucomi
pop
fmuls
ds
pop
lcall
clc
or
jmp
call
cld
xor
adc
ss
inc
jmp
fdivp
and
popf
das
pusha
cld
mov
mov
aaa
sub
cmpsb
dec
aas
push
dec
jl
prefetch
or
mov
fsubs
imul
leave
dec
mov
add
int3
lds
push
add
push
mov
ficoms
mov
insl
dec
outsb
jne
adc
jge
mov
sarb
push
in
push
sub
push
jbe
adc
xchg
cli
mov
lea
adc
xchg
scas
shrb
push
sub
dec
test
clc
cld
and
sbb
cmp
test
sub
pop
xchg
or
jns
not
pop
incl
test
inc
andl
arpl
mov
mov
jl
jl
scas
aad
xchg
xchg
jb
sub
sbb
bound
cmpsl
sub
or
jno
adc
cli
mov
out
mov
stos
rcrl
cltd
mov
iret
inc
out
insb
xor
dec
aaa
mov
mov
out
ficoms
aaa
mov
scas
std
sbb
dec
in
in
stc
xlat
clc
cmpsb
out
mov
lret
sub
pusha
fdivrp
dec
sub
jne
xor
push
xchg
test
mov
jl
mov
stc
fcmovb
ret
sub
clc
xchg
fstpl
mov
xchg
cld
aaa
inc
xchg
mov
sti
cmpsb
outsb
rcrl
int3
jl
sbb
and
pop
inc
jecxz
push
dec
mov
out
js
movsb
test
fisubl
nop
lahf
mov
pop
test
clc
insb
cli
pop
jbe
int3
fidivl
dec
sub
repnz
in
mov
cmc
xor
jmp
mov
add
ja
xchg
and
xchg
and
ljmp
shlb
mov
push
cmp
popa
sub
inc
xor
cmc
inc
xchg
in
outsl
adc
pop
in
out
push
test
sbb
sahf
pop
and
aad
push
cmp
add
enter
adc
xchg
syscall
movsl
aad
pop
xor
mov
mov
jge
xchg
xchg
aaa
ds
inc
dec
add
in
daa
ret
dec
sbb
or
mov
mov
push
adc
dec
repnz
xor
fs
cmp
xor
cmp
push
mov
sbb
pop
and
push
adc
push
ret
or
pushf
rclb
pop
jb
add
sub
cmpb
fstps
scas
cmp
sub
jo
movsb
sti
es
jmp
lods
xorl
jae
and
jno
xor
sbb
mov
jg
cmp
mov
ds
into
mov
hlt
jp
rcl
lahf
notl
xchg
insb
pop
repz
orl
outsl
test
loop,pn
sub
jge
movsl
loop
cmpsb
jmp
cmp
inc
pusha
stos
pop
dec
and
mov
inc
inc
roll
cmpb
stos
clc
test
pop
repz
cmp
sbb
jne
out
push
fisubs
fstps
xorb
sti
test
xor
clc
add
mov
jbe
into
int3
cmp
mov
add
inc
mov
inc
sub
adc
in
push
jg
jg
sub
pop
dec
adc
je
pop
and
fcmovbe
sahf
incb
repnz
adc
xchg
daa
mov
or
push
ret
jbe
sar
mov
ret
and
in
imul
push
int
pop
adc
sub
iret
or
xor
mov
je
add
arpl
out
imul
lods
cmp
cmpsb
xchg
fsubs
push
inc
pop
adc
cmp
mov
dec
mov
sbb
orb
adc
push
push
push
cmpsb
sbb
repnz
sub
loopne
popa
mov
arpl
pop
aas
shll
popf
or
movsb
dec
enter
mov
sub
cmp
repz
sub
stos
or
xlat
or
jns
out
cwtl
ret
popa
sarb
js
push
jmp
mov
xlat
add
out
push
xchg
loopne
xchg
fstl
std
mov
fbld
dec
mov
lahf
or
sub
add
jo
push
jmp
jg
xor
push
lods
fimull
push
jl
gs
cmp
sub
and
inc
or
cs
int3
std
sub
inc
cs
mov
hlt
mov
add
mov
pop
and
lods
inc
push
push
push
push
out
pushf
push
sbb
test
daa
jns
jo
dec
fidivrl
pop
xchg
sbb
sbb
mov
sbb
sub
or
mov
pop
and
mov
rorb
or
sti
jb
jmp
mov
test
cmp
mov
sbb
aam
icebp
stos
clc
cmp
pusha
add
fildl
cld
jp
jb
out
inc
loope
loope
push
pushf
cltd
inc
dec
mov
scas
mov
jg
lods
sub
mov
xchg
cmp
mov
adc
popa
add
mov
data16
fnstcw
sub
and
xchg
rcll
pop
add
sub
sbb
popf
das
jbe
xor
dec
shll
js
xchg
mov
dec
pop
sub
sbb
push
lds
lods
icebp
inc
cmp
mov
add
pop
add
inc
inc
or
dec
sbb
inc
ljmp
jmp
ds
shll
xor
push
mov
loope
fiaddl
aam
pop
mov
push
add
ret
je
lahf
mov
or
pop
adc
stos
push
repnz
or
xchg
stos
js
scas
add
iret
pop
dec
mov
sbb
adc
cltd
sbb
jl
in
jno
mov
fisubrs
xchg
mov
xchg
pusha
es
iret
pushf
jno
mov
subb
xchg
push
lods
lods
xchg
test
add
adc
inc
mov
outsl
and
mov
aas
shrb
outsl
clc
pop
mov
scas
push
add
mov
sbb
sbb
mov
ss
push
adc
bound
jb
scas
mov
mov
pop
negl
nop
sub
mov
mov
mov
cmp
or
inc
test
push
mov
sub
push
xor
jl
insb
mov
inc
pop
cmp
add
push
pop
scas
pop
jbe
xchg
nop
dec
pop
cmpsb
mov
arpl
cmp
xor
and
push
jnp
xchg
call
mov
pop
add
or
jno
xor
clc
ret
jbe
add
xor
jl
jb
jp
jne
cmp
xchg
shrb
leave
adc
rcl
mov
icebp
mov
push
mov
nop
mov
push
fbstp
xchg
addr16
pop
mov
sbb
int
imul
push
jo
dec
into
stc
inc
xor
int3
scas
mov
mov
lahf
sbb
popa
lcall
out
push
jb
lcall
mov
test
lock
push
add
sub
das
ja
pop
mov
lock
sbbl
clc
jo
inc
popa
push
inc
loopne
ds
fsubl
cmp
mov
mov
mov
pop
mov
lea
dec
dec
inc
packssdw
cmp
test
lds
ror
or
jbe
dec
dec
mov
adc
xlat
xor
cld
lret
cltd
outsl
xchg
out
mov
pusha
mov
mov
ja
outsl
popa
out
in
aaa
icebp
aaa
rol
jo
xchg
push
pop
stc
mov
add
xchg
mov
add
mov
push
ss
cmpsb
ss
ret
movsl
mov
xchg
pop
push
cmpsb
icebp
mov
add
pop
daa
xchg
sub
and
das
inc
loop
inc
mov
and
cmp
outsb
or
pushf
and
or
pop
and
loop
sub
cwtl
lock
and
mov
or
repnz
ret
pop
xor
cmp
sub
inc
addr16
test
jo
nop
push
jne
mov
cmp
jne
pushl
mov
push
add
and
pop
add
xchg
pop
nop
jno
fldcw
jmp
and
adc
jp
push
and
adc
test
or
mov
mov
pop
mov
bsf
xor
add
es
movsl
dec
shrb
cmc
stos
clc
mov
sub
aaa
scas
xor
jnp
rcrl
scas
loope
cmovo
add
add
mov
and
sub
cmp
push
adc
movsl
xchg
in
fs
xor
inc
mov
ret
sbb
mov
sbb
push
sub
dec
jb
loop
pop
cli
dec
ss
push
int3
into
jns
imul
daa
fcomps
js
fwait
orb
mov
xor
loop
mov
or
xchg
pop
scas
jo
cmp
sti
push
push
pop
pop
push
popa
fsubrl
nop
mov
xchg
daa
sub
mov
ja
rolb
mov
xchg
xchg
fnstenv
out
xchg
out
out
push
jmp
xor
lea
dec
pop
aas
dec
fistpl
or
and
dec
sbb
mov
pop
pop
pusha
filds
mov
in
sub
std
adc
sbb
adc
mov
addr16
jg
dec
push
js
sub
jbe
insl
add
in
jmp
or
je
aam
lret
int
push
popa
xor
pop
and
cmp
in
fsubs
loope
mov
test
cli
xor
rorb
inc
fldlg2
adc
test
mov
in
outsb
push
lret
in
lret
sbb
mov
dec
test
adcl
xor
leave
enter
pop
xchg
and
int3
mov
imul
sub
sub
fwait
addb
lods
out
xor
or
aam
bound
sub
fcmovnbe
std
adc
inc
out
fdivl
xadd
ret
mov
xor
jo
adc
or
call
dec
cmp
ds
sbb
test
xchg
mov
xor
push
insl
cwtl
aad
rorl
pusha
cwtl
inc
mov
adc
jbe
cmp
or
xchg
push
xchg
leave
xor
xor
xor
ret
add
lea
dec
mov
push
sarb
mov
inc
aam
dec
xorb
jnp
js
jnp
mov
inc
cmp
mov
fimull
xchg
cmp
popf
lock
icebp
xchg
popf
fisttpl
push
popf
out
pop
stos
push
sbb
clc
or
add
mov
ss
in
mov
decl
mov
cmpl
popf
sbb
cmp
and
loop
mov
adc
es
sub
in
test
sub
sahf
mov
js
push
xor
aas
xlat
pop
fwait
into
pop
jl
cli
test
ret
pop
int
sub
xor
popf
xor
cs
mov
cmp
and
xor
repnz
test
into
fs
mov
jmp
int
cs
aas
mov
repz
ds
xor
mov
cmc
lret
ja
mov
pop
int
inc
push
xchg
jae
loop
sub
push
lods
nop
jnp
addr16
ss
iret
xorw
sub
mov
movsb
mov
addr16
into
or
inc
mov
fcoms
stc
cli
stos
rcr
and
mov
mov
xor
pusha
sbb
dec
mov
push
imul
dec
sub
mov
mov
fdivr
insl
insb
popa
in
cli
add
pusha
dec
imul
mov
fs
cmc
push
mov
sbb
cmp
mov
fisubs
push
adc
lcall
mov
aas
repnz
adc
fistps
icebp
movsl
mov
mov
cmc
mov
xchg
shll
push
ret
scas
rorb
test
and
pushf
stos
xorb
pusha
inc
mov
sbb
imul
in
mov
dec
pushf
iret
xchg
not
rorb
mov
xor
mov
ret
mov
popa
dec
jne
lock
lret
push
insl
xchg
into
inc
jle
int3
and
arpl
int3
lret
dec
insl
xchg
jecxz
icebp
sbb
push
sub
mov
jle
mov
sub
sbb
cmpsl
insb
or
add
mov
cs
mull
ss
int
loop
cmp
movsb
addb
js
shl
andl
shrl
mov
in
lods
cmp
sub
stos
push
jecxz
imul
test
inc
add
int
sahf
rol
mov
clc
sbb
push
es
pop
jae
pushf
lock
inc
adc
push
std
dec
or
negl
pop
test
jno
jg
and
idivl
mov
mov
cmp
ret
jecxz
fmuls
mov
hlt
imul
adcl
inc
std
push
and
dec
out
and
lock
and
roll
mov
pop
cmp
pop
scas
xor
jno
sti
cs
stos
xchg
insb
fdivrs
ja
push
movsb
mov
sbb
pop
pop
add
nop
cltd
xor
ja
test
pop
sbb
daa
leave
jbe
mov
mov
mov
xorb
cli
lret
adcl
jle
loope
and
ljmp
mov
mov
fistpl
fsubrl
nop
popf
jmp
inc
and
push
sbbl
popa
out
xchg
mov
adc
jle
mov
add
push
stos
adc
or
iret
and
dec
sarl
fs
ds
call
outsl
inc
ficoms
outsb
pusha
pop
sub
fdivrs
mov
mov
push
jp
cmpsl
lret
pop
mov
test
push
stos
cmp
add
aas
insl
mov
movsb
lods
jb
pop
ss
mov
sub
aaa
push
push
fimuls
outsl
cmpsb
pushf
xchg
mov
or
je
outsb
lock
in
jg
test
inc
sbb
shrb
insb
cs
push
mov
pop
stc
movsl
or
mov
adc
sbb
xor
mov
and
push
xor
jecxz
pop
leave
frstor
pop
mov
jmp
add
or
cwtl
mov
add
xor
stos
jl
into
mov
leave
push
sbb
cmpsb
fnstcw
cli
mov
lahf
shlb
sub
and
shll
mov
cmp
daa
add
mov
xor
and
or
inc
out
sbb
lahf
cmp
out
adc
out
ja
outsl
rorb
ret
movsl
push
push
movsl
rcl
adc
xchg
inc
pusha
jae
adc
cmp
mov
add
mov
loop
insb
mov
mov
dec
or
xor
sbb
sbb
push
movsb
add
mov
mov
adc
call
sbb
xor
push
in
jge
push
jge
adc
fisubrl
in
sub
out
mov
insl
xlat
inc
in
and
xchg
cmpsl
out
push
adc
imul
aaa
and
into
sbb
imulb
cmp
lret
cwtl
aad
and
mov
stos
or
js
jae
or
pop
mov
sahf
adc
inc
xor
inc
sub
xchg
sti
fnsave
movsb
sub
add
and
maxps
aam
loopne
shlb
pop
cld
or
pop
pop
xchg
aad
outsl
mov
pop
mov
jns
push
xor
xlat
in
jge
lcall
add
xor
insl
cld
cmc
pushf
jl
pop
hlt
add
cmp
shl
aad
adc
sbb
mov
mov
sarb
test
movsl
add
add
add
xchg
push
outsb
lods
jbe
cmp
sbb
xchg
cmp
and
sub
and
adc
push
call
pop
je
cmpb
mov
popf
push
jmp
fnstcw
push
test
ds
push
lds
test
fisubl
in
sbb
jmp
or
addr16
jmp
lret
fdivp
mov
and
xchg
inc
nop
lcall
sti
jmp
mov
pusha
xor
outsb
add
repz
scas
cmp
xor
pusha
mov
or
sub
fmuls
mov
add
notl
fstpl
jbe
add
popa
repnz
rcll
sbb
or
push
sbb
ret
and
movsl
add
jno
stc
add
stc
popa
sbb
lcall
xchg
push
dec
ljmp
xor
in
ret
imul
jmp
jb
inc
in
jno
nop
pushl
sub
pop
movsb
xor
fmuls
es
push
and
outsl
cld
and
push
call
lret
sbb
pop
insb
mov
xchg
mov
adc
mov
out
adc
jne
out
jp
add
dec
hlt
daa
mov
xchg
or
dec
cmp
cli
popf
inc
push
inc
inc
push
cwtl
daa
je
add
cwtl
pop
push
outsl
push
lcall
mov
dec
mov
arpl
pop
outsl
mov
xlat
daa
jmp
sbb
mov
data16
add
dec
fwait
out
ret
cmpsb
jnp
or
or
je
cwtl
repz
sti
push
test
xor
dec
pop
loope
mov
push
rcll
into
xor
imul
icebp
sbb
xchg
or
fdivrs
jne
xchg
push
pop
js
popf
shlb
dec
popf
add
cmpb
xor
push
call
fcomp
xchg
sbb
dec
push
push
outsb
add
mov
xor
adc
jno
lret
adc
push
adc
jno
bound
sbb
push
int3
jo
lret
inc
lret
push
popf
aas
fdiv
data16
push
inc
inc
xchg
pop
movsb
in
jl
fcoms
pop
subb
cmp
inc
push
push
inc
add
and
outsb
iret
mov
out
movsl
ja
xchg
outsl
xor
mov
mov
inc
enter
and
add
push
jl
mov
mov
lcall
jae
push
cmc
sti
mov
or
add
lock
xlat
arpl
jno
cmpl
sahf
jno
fadd
sub
adc
fs
adcb
stos
popa
loop
out
push
movsb
rcrb
xor
cmpsl
sub
lret
in
addr16
cli
mov
daa
cmp
sti
cmp
es
testl
jae
je
mov
stos
ret
outsb
stos
adc
xlat
lcall
pushf
pop
lock
sahf
out
je
mov
inc
push
repnz
inc
repz
add
stos
sbb
insb
ss
cmp
xor
sub
insl
xor
xchg
or
jle
cli
scas
push
scas
pop
ljmp
and
test
sub
gs
mov
and
or
cmc
mov
enter
xchg
nop
not
int3
adc
inc
xlat
inc
add
ds
test
adc
dec
enter
inc
inc
xor
loop
xchg
lods
cmc
xchg
sub
daa
mov
mov
sub
ljmp
mov
sub
add
sbb
loope
inc
jbe
arpl
pop
ret
cmp
pop
test
cmc
mov
sub
mov
xor
xor
mov
dec
pop
ret
movsb
stos
pop
push
sbb
inc
fistl
cmp
mov
jo
arpl
xor
addr16
jl
xchg
stos
std
push
out
ret
orl
outsl
inc
cld
xor
add
xchg
xchg
pop
pop
add
jns
stos
lahf
add
jns
mov
cmp
movsb
nop
mov
and
xchg
push
cs
filds
data16
mov
sub
iret
inc
inc
sbb
push
call
xor
or
inc
jns
mov
je
clc
dec
inc
scas
mov
push
je
test
pop
xor
mov
pop
cmp
nop
dec
cld
pop
ss
dec
cmpsl
cmovge
hlt
sbb
lret
aaa
out
mov
jnp
push
mov
fstl
mov
adc
sbb
adc
jl
outsl
mov
in
dec
lds
test
push
stos
and
call
int3
mov
js
xchg
pusha
iret
push
inc
cli
lods
ljmp
push
mov
int3
out
cmp
inc
mov
adc
es
loop
popf
push
ret
mov
ret
out
adc
cld
jb
mov
sub
mov
out
cltd
sub
inc
out
cmc
mov
mov
xor
sub
jno
or
shrb
cwtl
shll
int3
repz
sbb
les
cld
inc
imul
insl
sbb
inc
xchg
xor
bnd
adc
movsl
sub
les
cwtl
shlb
dec
xchg
xlat
imul
pop
sbb
and
push
push
test
inc
xchg
or
nop
push
enter
and
mull
and
pop
pop
xor
aaa
add
xchg
mov
mov
js
sub
test
sbb
jnp
mov
repz
mov
arpl
in
notl
mov
jp
add
dec
sbb
movsb
push
or
mov
loopnew
popa
fsubrl
dec
mov
jnp
imull
or
fildll
daa
xor
call
stos
bnd
and
push
addr16
pop
insl
xchg
rolb
and
jo
test
sub
xchg
mov
stos
jecxz
and
push
jne
data16
lret
pushf
aas
mov
nop
cmpsl
into
or
fcoml
mov
mov
jge
pop
or
mov
fstpl
popa
xor
push
fwait
cmpsb
mov
jg
insl
fisubrl
sti
loope
nop
jne
mov
inc
sub
push
jb
cmc
loope
xor
jge
sub
and
movsl
push
and
rcll
cwtl
adc
sub
rolb
push
dec
loope
mov
jnp
jno
cld
inc
pushf
scas
es
fisttpll
daa
adc
mov
pop
cmpsl
push
xor
adc
popa
push
popa
fs
cwtl
jle
loopne
xlat
pop
push
pop
insb
cmpsl
adc
filds
mov
push
and
jns
out
sahf
xchg
pop
or
push
adc
out
enter
xor
aas
loopne
lock
nop
add
ljmp
dec
mov
pavgb
jge
imul
lret
add
mov
add
hlt
movsb
cmp
dec
stos
cmp
ret
fildl
mov
les
sub
ss
xchg
loop
mov
mov
mov
cmpsl
mov
and
cmp
insb
fwait
xchg
xchg
lock
pop
stc
fstp
jmp
je
out
dec
or
xchg
clc
push
int3
sahf
je
arpl
sub
mov
aaa
or
sub
flds
int
sub
xor
pop
mov
cmp
jnp
lods
fwait
pop
nop
sub
mov
call
or
jmp
inc
pop
push
dec
mov
cli
xchg
sub
pop
sbb
xor
scas
lcall
scas
add
pop
push
in
cmpsb
daa
test
lock
fistps
nop
jb
push
mov
mov
dec
mov
push
sub
mov
sbb
lds
jns
xor
or
icebp
mov
clc
je
rolb
mov
add
mov
mov
das
fidivrs
nop
xchg
mov
iret
pop
inc
cmp
enter
sbb
fdiv
es
mov
and
decb
stc
nop
push
imul
cmpsl
sbb
insl
xor
dec
jl
sahf
call
mov
hlt
jo
mov
aaa
mov
aaa
mov
xor
pop
cs
cmp
or
xchg
pop
fstpt
sub
cmc
pop
ja
xchg
jp
sti
cmp
push
push
sbb
out
push
dec
mov
push
mov
jge
cmp
sbb
push
jae
add
sbb
cmp
sbb
std
cmpsb
lds
lds
fists
mov
mov
push
xor
or
ds
test
shll
dec
mov
mov
stos
cmpsl
mov
mov
aas
test
jle
fnstenv
push
repz
test
push
pop
sub
std
or
pop
pop
pop
cmc
ficompl
push
xor
pop
cmpb
dec
div
inc
or
lds
dec
mov
shlb
jne
mov
cli
cwtl
iret
xor
jbe
add
std
mov
mov
inc
clc
lock
aam
adc
addl
dec
xor
and
lds
pop
mov
mov
sub
dec
imul
sub
mov
cmp
movsb
ds
call
fiadds
pop
ret
aam
js
sbb
mov
jg
dec
mov
push
fdivrl
shr
nop
inc
push
jmp
jno
rcl
sbb
les
jg
jecxz
mov
push
cwtl
cmp
mov
out
and
pop
imul
jo
sub
fisubrs
repnz
arpl
addl
cmp
fnstcw
into
xlat
stc
std
rolb
sub
fsubr
pusha
testl
xchg
fildll
jns
scas
shlb
in
mov
dec
mov
pushf
loope
mov
cmp
icebp
scas
outsb
lret
and
push
in
jge
mov
inc
mov
xchg
lahf
sbb
in
jbe
and
xor
pop
test
mov
ljmp
inc
mov
addr16
fs
roll
adc
adc
pop
sti
jge
cmpsl
mov
adc
out
sbb
xchg
push
movsl
lret
je
lds
imul
mov
xchg
shll
xor
fadd
xor
dec
xchg
jp
cmc
punpckhbw
inc
cmp
loopne
mov
mov
adc
pop
mov
or
cmp
data16
lea
inc
adc
leave
jmp
test
pop
add
jae
scas
js,pt
push
jnp
sub
rcrb
adc
std
clc
mov
shr
imul
push
int
fistpl
scas
repz
nop
cs
pop
jl
adc
enter
int
lods
cltd
aam
jns
dec
inc
cmp
sub
loopne
mov
cwtl
xchg
sub
pop
fildl
fmull
pop
jns
mov
outsl
shlb
jne
pop
and
fs
lcall
enter
pop
cmp
cwtl
sub
xorb
sbb
xlat
mov
jg
pop
lds
or
sub
ljmp
repnz
adc
je
mov
xchg
or
and
xchg
xor
lds
jg
decb
or
pop
adc
aad
arpl
adc
pop
rorl
mov
fldl
mov
sbb
ret
mov
sub
xor
stc
xchg
jbe
adc
push
inc
jmp
inc
aaa
jb
imul
sub
cmp
repz
pushf
mov
push
cwtl
pop
cmp
jmpw
sbbb
and
xorl
movsl
cltd
shlb
inc
call
iret
je
notl
out
imul
je
out
push
cmpl
mov
cmp
getsec
cmp
inc
adc
outsb
and
xchg
mov
sbb
xor
scas
or
adc
test
dec
lock
xor
lret
aam
sbb
lret
sub
fs
pop
test
je
dec
rcll
pop
xor
xorb
lret
cld
out
jle
mov
xchg
js
jp
lock
cmp
in
sbb
pop
loopne
out
xchg
and
cli
add
or
out
aaa
xchg
dec
sub
out
pushf
icebp
jbe
lcall
pop
inc
bound
out
mov
mov
fistl
mov
xor
mov
inc
scas
pop
dec
lock
je
cmp
and
popa
pushf
or
push
outsb
cmp
inc
cmp
xchg
into
xchg
mov
das
fwait
int3
fmull
test
mov
sbb
jge
inc
jle
enter
ja
dec
mov
popf
jb
out
mov
pusha
scas
aad
out
fmulp
outsl
out
into
stos
pop
inc
pop
cmp
stos
and
out
add
rorb
adc
cmpsl
into
cld
je
lock
xchg
cmp
jmp
enter
xor
mov
or
lret
sub
es
out
nop
repnz
out
inc
ret
add
mov
sub
mov
decl
sub
insl
pop
or
fdivrp
imul
xchg
push
push
mov
xchg
lret
sbb
xchg
xor
dec
movsl
sub
stc
lods
iret
lods
and
adc
lods
pop
cld
bound
adc
xchg
dec
fiadds
imull
push
fisubl
sbb
lea
scas
xchg
pop
and
popa
inc
in
xchg
subl
shll
sub
loope
sub
sub
ret
cmpsl
mov
test
pop
mov
pop
lcall
adc
mov
pop
in
popf
mov
pop
into
xor
negl
dec
jg
mov
out
or
inc
xchg
inc
jb
pop
rcll
imul
rorb
and
jl
sub
cli
or
cli
jb
aas
mov
push
sbb
sbb
loopne
mov
movsb
lds
mov
stc
add
push
push
lods
xchg
out
cmp
jmp
int
jbe
stos
jecxz
and
ds
imul
push
lods
jl
jp
adc
lea
popa
push
icebp
mov
mov
repnz
pop
lods
mov
pop
mov
push
or
pop
popa
fnstcw
repz
inc
mov
testl
aad
inc
add
or
push
out
fadd
sbb
xchg
test
ljmp
cmp
or
pop
pop
mov
xor
out
pop
xchg
xor
xchg
test
and
pushf
mov
inc
cmp
or
je
cltd
jo
xor
mulb
test
cmpsb
xor
add
push
cmc
sbb
dec
mov
imul
pop
mov
fisubl
pushf
xchg
repnz
xor
sbb
adc
inc
scas
inc
push
sbb
or
mov
xchg
fnstenv
or
scas
test
mul
sub
stc
jle
enter
mov
mov
lcall
inc
pop
ja
fwait
xchg
pop
sub
pop
addr16
adc
sub
sub
jno
shlb
andb
jae
neg
sbb
jb
sahf
nop
xchg
pop
pop
mov
mov
mov
ss
push
dec
add
pop
sbb
loopne
jmp
subl
lods
out
call
testb
fidivrl
fcmovbe
and
stc
xor
push
inc
xor
out
inc
loope
cld
lcall
mov
mov
sbb
pop
xchg
test
or
loopne
fistpll
jb
ret
lea
je
mov
pusha
sbb
mov
or
mov
ret
jle
shr
lock
mov
sub
push
push
xor
cld
push
fistpl
sub
cmpsl
cld
cmp
and
or
stos
add
jo
out
jl
push
inc
cmp
stc
sahf
popa
or
fcom
add
push
add
icebp
mov
cmp
repnz
pop
jae
mov
stos
call
fcompl
lea
in
dec
xlat
out
shlb
mov
test
lahf
pusha
and
push
cmp
insl
pop
jl
inc
pop
jno
fists
popa
jp
mov
or
sub
imul
xor
or
mov
out
adc
jo
hlt
testl
in
cli
addr16
sbb
mov
xchg
and
and
test
daa
dec
dec
cmpb
inc
mov
popf
pop
push
mov
mov
into
jnp
adc
mov
ja
add
insb
jns
jo
pushf
fs
mov
scas
pop
das
push
ret
test
int3
sbb
or
rorl
arpl
push
rcr
push
in
adc
or
sub
cwtl
enter
int3
xchg
repnz
xchg
xor
popf
add
int3
jge
push
aam
sbb
out
add
imul
pop
mov
out
cmpsl
dec
mov
inc
stc
fmull
or
insb
sti
data16
jmp
mov
cmpb
pushf
in
sub
cld
repnz
mov
sub
sub
or
out
push
outsl
stos
sbb
andl
aam
loopne
pop
enter
jp
and
div
cmp
repz
sub
frstor
imul
sub
mov
mov
pop
movsb
outsl
stos
push
cmp
sub
pusha
inc
inc
leave
dec
pavgw
aas
mov
cmpl
aad
pop
adcl
xchg
aaa
push
into
push
adc
mov
loope
mov
pop
lea
hlt
adc
pop
repz
jecxz
call
add
movsb
sti
andb
gs
dec
out
lods
xchg
jne
jecxz
outsb
mov
push
xchg
lods
mov
mov
xchg
mov
xchg
fiaddl
adc
movsb
push
or
jb
loop
inc
rclb
lret
movsb
or
iret
cmpsl
mov
xchg
or
mov
push
cmp
cmpsb
cli
or
and
mov
dec
loopne
fldcw
mov
out
in
mov
leave
cmpsl
push
add
push
and
enter
popf
sahf
jecxz
popa
jmp
cmp
out
lret
pop
sahf
popf
add
aaa
push
mov
mul
mov
jle
xchg
jmp
repnz
inc
mov
inc
adc
xchg
shll
ljmp
jge
xchg
jl
fsincos
jle
test
ficomps
push
test
repnz
mov
and
test
movsl
pop
sarb
stos
inc
push
cmpsl
pop
notb
fcmovb
scas
gs
scas
ret
jge
xchg
mov
add
js
ds
test
add
push
mov
cmp
or
pop
pop
imull
xchg
repz
iret
xor
and
dec
pushf
sbb
xchg
sub
mov
mov
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
push
call
call
mov
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
subl
dec
and
pop
loop
mov
jo
int3
jmp
pop
loop
dec
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
ror
xchg
je
lahf
xchg
movsl
pop
scas
bound
sbb
pop
leave
out
dec
jp
add
scas
adc
sbb
jge
fisubl
in
sbb
push
lods
fstps
add
xchg
popa
sarl
jmp
pop
loop
sbb
movsl
ficoml
sbb
aaa
adc
xchg
xor
in
sarb
xchg
jae
jecxz
int3
movsl
cltd
decb
repz
inc
out
xchg
adc
cmpsb
aas
cwtl
loope
lods
lods
mov
gs
adc
xor
xor
les
insl
dec
xlat
xchg
jmp
cmp
cmp
jb
bound
inc
push
fidivl
sbb
and
sbb
and
int3
jo
je
xchg
dec
and
int3
jo
je
rorl
push
pop
loope
sub
xchg
dec
and
into
jno
jne
xchg
dec
rcrl
loop
dec
int3
jo
je
aad
and
int3
jo
je
xchg
or
sbb
into
jo
jno
xchg
dec
and
int
fwait
je
xchg
dec
adc
pop
loop
dec
int3
jp
jo
xchg
dec
arpl
pusha
fwait
je
xchg
pop
and
int3
jo
fs
pop
loop
dec
int3
jo
je
xchg
adc
sbb
int3
and
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
mov
loop
dec
int3
rclb
sbb
enter
lods
aad
ja
pop
loop
dec
int3
jo
je
jbe
push
outsb
das
subl
sub
int3
sbb
and
int3
jo
push
jmp
cmp
fwait
jbe
xchg
dec
add
pop
loop
dec
int3
jo
jo
xchg
dec
and
int3
jo
je
xchg
dec
jecxz
pop
loop
dec
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
jo
je
xchg
dec
and
int3
pop
fwait
je
xchg
dec
or
jmp
dec
aam
pushl
xchg
jg
fmull
dec
shll
sbb
fcoms
sti
test
cmpsb
dec
addr16
shrb
cmp
cwtl
orl
sbb
jge
imul
cmp
push
outsb
pop
lods
jp
into
les
pop
test
lret
repnz
ss
inc
test
out
or
jne
sbb
jmp
sbb
call
push
jae
data16
mov
adcl
pop
test
mov
push
jp
nop
add
imul
jmp
cmpsl
mov
jp
mov
arpl
pop
xor
xchg
push
aam
pop
ds
add
cmp
in
mov
xor
xor
mov
bound
xlat
sub
test
sarb
in
cmpsl
cli
mov
test
pop
inc
inc
cmp
sbb
jp
arpl
popf
fistpll
mov
nop
mov
adc
pop
scas
push
mov
fcompl
adc
xor
sbb
jg
xchg
jae
mov
cmp
mov
dec
int3
or
or
cmp
dec
adc
rcr
adc
add
lods
jo
push
xchg
rol
movl
adc
xor
and
xor
sub
leave
or
js
push
decl
popf
imul
out
or
pop
ja
push
jo
mull
sbb
add
movsb
cltd
inc
mov
xor
sub
leave
fistpll
ret
add
xchg
lahf
leave
dec
cmp
mov
js
loope
inc
dec
arpl
mov
cmp
push
cmpsl
rcll
mov
cmc
cltd
dec
aaa
hlt
in
bound
jl
out
add
push
shr
sar
out
ja
outsb
lahf
addb
ja
fmul
and
sbb
or
inc
cltd
mov
xor
outsl
mov
inc
pop
loop
jae
pop
mov
xor
inc
mov
out
icebp
push
cmc
data16
jg
dec
push
sahf
jns
inc
or
sub
push
or
shlb
pop
pop
cmp
cltd
fldl
pusha
cs
imul
or
test
js
icebp
inc
fiaddl
xchg
test
subl
mov
das
addr16
jno
fsubrs
idivl
cmp
push
pop
out
mov
push
outsb
adc
push
fstl
sub
mov
sub
lret
scas
push
insb
xchg
aam
sbb
push
sub
aaa
xchg
inc
and
or
and
mov
cwtl
bound
out
mov
jg
iret
jne
orb
xchg
and
push
inc
aaa
aam
add
push
cmp
push
aam
pop
sbb
into
push
mov
pop
jbe
mov
leave
movl
in
inc
mov
xchg
getsec
outsl
mov
xchg
jb
add
cmp
dec
gs
sbb
cmpb
inc
mov
lret
mov
mov
push
inc
mov
and
hlt
insl
and
loop
stos
lret
gs
sub
adc
or
ret
add
repnz
test
push
xchg
mov
inc
insl
aaa
xchg
mov
icebp
lcall
xchg
inc
mov
or
lock
shlb
fidivs
lods
sbb
adc
cltd
xchg
inc
mov
add
pop
mov
xchg
inc
jnp
mov
lock
xchg
mov
loopne
xor
mov
jns
adc
and
mov
pop
movsb
aaa
push
xor
movsb
mov
dec
jo
inc
inc
es
xor
std
xor
orl
jg
aaa
pop
pop
movsb
pop
aam
shlb
clc
fisttpll
jp
push
xor
fisttpl
pusha
push
mov
sbb
sahf
pop
mov
mov
ret
int
ja
sbb
test
leave
sbb
clc
jle
pusha
testl
lea
cmp
testl
or
lock
cmp
pop
add
ljmp
sbb
jbe
xchg
mov
mov
mov
scas
mov
jecxz
test
lret
sbb
adc
aas
mov
cmp
aam
leave
sti
call
mov
cli
jb
lahf
mov
cmpl
sbb
adc
gs
push
mov
xchg
xor
rolb
or
das
daa
pop
mov
pushf
lret
jp
dec
lret
inc
inc
jl
cmpl
nop
cld
and
xchg
dec
xchg
test
in
mov
dec
les
sub
and
fldenv
lods
jb
mov
stos
pop
mov
or
mov
clc
push
sub
sarl
pop
push
lock
or
dec
pushf
mov
push
mov
adc
pusha
push
xchg
push
dec
sub
ret
pusha
dec
pop
jno
mov
push
das
dec
cli
mov
ret
xchg
popl
ret
mov
or
mov
jbe
lcall
loopne
and
sahf
sti
jne
sbb
pop
call
mov
cltd
cltd
arpl
sbb
pushf
aas
mov
and
xchg
outsl
mov
ret
sahf
lds
xchg
in
out
rol
mov
cli
cmp
mov
xchg
or
iret
cmpsl
cmp
icebp
push
or
xchg
add
sahf
jns
in
repz
das
mov
mov
add
mov
cmp
pusha
or
cmc
xchg
iret
xchg
std
dec
mov
and
mov
jne
stos
push
mov
and
sub
xchg
push
xchg
dec
or
xchg
addr16
dec
loop
cmp
pop
lret
or
pop
push
push
fcompl
sbb
add
push
leave
shl
mov
lret
mov
jbe
push
jns
enter
add
dec
sub
mov
dec
cwtl
push
cmp
jecxz
xchg
cmp
pushf
jecxz
add
or
xor
or
add
xchg
mov
and
mov
mov
icebp
jno
rol
rcr
aam
add
in
inc
lret
cmp
and
repnz
loopne
push
add
mov
push
push
call
mul
pushf
mov
sub
bound
repz
cmp
lcall
je
imul
int3
pop
mov
cwtl
dec
fprem
mov
or
into
dec
sub
or
xlat
xchg
add
xor
mov
lods
mov
fmull
test
loop
loop
call
dec
lret
repz
pop
mov
aad
ljmp
jl
push
ret
add
and
add
mov
jbe
sub
push
sbb
pop
push
xchg
jle
popf
cmp
mov
xchg
mov
ffree
dec
mov
test
sbb
inc
jl
scas
enter
sub
cmp
lcall
or
push
rcrl
mov
mov
ja
push
and
jo
std
or
cmpsb
add
outsl
add
cmc
jmp
rcll
sub
insl
outsb
fdivrs
add
mov
cwtl
jle
mov
fwait
xchg
mov
cmpb
xor
dec
fwait
dec
ficompl
mov
aas
jo
popl
adc
mov
dec
test
xor
mov
xor
or
mov
or
xchg
div
dec
or
test
inc
push
int
hlt
mull
jge
cmpsb
pop
lret
fcompl
sbb
push
push
in
into
negb
aaa
imul
and
aad
dec
int
stos
shrl
inc
dec
ja
sbb
repnz
fwait
aaa
aad
enter
roll
addr16
push
mov
xchg
mov
stos
or
scas
or
out
cld
push
rcr
outsb
cmpsb
lea
or
je
js
inc
mov
mov
jl
jb
ss
stos
push
inc
rcrl
cltd
jnp
test
scas
icebp
mov
mov
sub
inc
call
imul
sbb
sub
test
lahf
mov
push
popa
jge
adc
fcoml
and
mov
sahf
stc
mov
jo
xchg
in
push
sub
inc
ds
push
repnz
inc
dec
cmp
test
mov
mov
xchg
jge
es
out
nop
push
mov
mov
sbb
mov
sub
inc
push
outsb
sbb
faddl
arpl
inc
xor
push
xrelease
xor
push
dec
stos
sub
mov
lahf
cltd
and
mov
push
adc
xchg
sub
call
push
inc
xchg
mov
cmp
test
push
mov
adc
cmp
cmp
mov
inc
ret
jl
sbb
pop
cmp
scas
repnz
and
cvtpi2ps
mov
add
xor
fs
pop
lcall
jb
in
and
imul
pop
out
fdivr
mov
jg
sbb
cs
andb
test
or
inc
push
dec
xor
mov
dec
call
mov
cmc
aas
xlat
enter
insl
ds
adc
pop
popa
addl
cwtl
cmp
push
mov
iret
add
movb
push
sub
cs
jnp
adc
mov
test
insl
imul
jmp
inc
subl
mov
push
in
cs
sbb
mov
cmc
mov
sbb
lods
pop
xor
xlat
cmp
pop
cltd
lock
in
js
es
cmc
add
addr16
add
adc
pop
shlb
loopne
pop
in
push
push
dec
fldt
into
test
fincstp
push
dec
or
add
in
loopne
mov
jae
xor
test
push
das
mov
jb
addr16
in
push
jmp
sar
cmp
and
xor
in
fistps
inc
adc
xchg
jo
lret
cmpsl
mov
adc
inc
fdivr
push
les
mov
mov
iret
aam
push
rorl
test
outsl
aad
and
int3
xorl
sub
inc
lods
cmpsl
jge
fldl
sbb
test
pop
test
xchg
adc
jmp
and
aam
int3
sub
dec
cmp
lods
pop
xchg
jmp
into
xchg
in
dec
icebp
mov
test
aas
test
mov
cmp
addb
repz
es
mov
mov
stos
sti
test
mov
aad
jmp
loopne
xchg
cli
and
popf
pop
clc
push
push
and
push
mov
cmp
insl
inc
dec
and
lret
loopne
aad
sarl
imul
and
mov
mov
dec
lds
movsb
dec
out
js
lcall
mov
data16
dec
sbb
mov
pop
pop
fmuls
xchg
inc
and
mov
ret
loope
xchg
scas
xchg
enter
push
fwait
test
xchg
repnz
movsl
call
aas
xchg
cli
call
jbe
add
daa
lods
int
inc
pop
in
iret
sbb
std
in
fucomp
mov
mov
dec
mov
sub
and
jle
insb
fisttpl
leave
outsb
cli
jnp
call
sub
add
inc
inc
scas
add
fwait
mov
and
insl
in
cmpsl
or
addl
and
dec
xchg
add
sahf
or
cmpsl
add
stos
jmp
dec
pop
or
das
mov
jle
test
push
xchg
push
mov
stc
xlat
sbb
fisubs
out
cld
jb
fs
adcl
fnstsw
call
inc
mov
sahf
xor
or
xor
push
inc
into
sub
lahf
fdivl
and
daa
mov
dec
les
dec
xchg
inc
scas
xchg
sub
pop
cmp
hlt
mov
cmpl
jmp
jg
gs
add
decb
jmp
sahf
loope
cmp
adc
mov
mov
sub
ljmp
adc
aam
push
lcall
dec
cmp
jmp
in
or
and
outsb
sub
movsl
mov
adc
mov
cmp
pop
and
les
sbb
int3
pop
pop
inc
mov
ss
mov
shlb
mov
es
xchg
jg
divb
pusha
inc
mov
adc
imul
mov
dec
into
push
sbb
icebp
aas
subl
pop
sahf
dec
push
or
lcall
push
cmp
cmp
mov
fldt
aaa
popa
xor
pushf
adc
clc
and
pop
jb
mov
add
sbb
mov
adc
pop
in
mov
scas
cmpsb
subl
out
icebp
ja
dec
nop
pop
insb
or
cmp
mov
add
add
xorb
scas
xor
lahf
imul
cmp
sbb
pop
xor
aaa
adc
push
mov
imul
pop
xor
inc
or
repz
pop
call
mov
push
out
push
stc
lods
das
movsb
jmp
loope
mov
lahf
adc
dec
sub
jne
stos
or
inc
imulb
mov
sub
pop
test
test
adc
loop
or
xchg
mov
aaa
roll
xor
sub
aaa
push
inc
popf
dec
lahf
push
and
xor
fwait
lea
ljmp
es
cmp
je
pop
enter
adc
mov
mov
and
and
add
or
mov
push
out
popf
js
jo
cli
bound
aas
and
mov
xchg
popf
loop
sti
loopne
jns
sub
int3
and
push
inc
push
inc
mov
push
mov
mov
push
mov
aas
out
mov
aam
stos
out
shlb
inc
dec
addr16
push
sbb
adc
pop
sbb
mov
je
push
inc
lods
xor
insl
stos
sub
dec
sbb
add
cltd
xchg
insl
les
mov
adc
push
dec
repnz
adc
popf
mov
scas
dec
mov
cltd
adc
repnz
leave
cmp
xor
cmp
cmp
mov
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
int3
jmp
