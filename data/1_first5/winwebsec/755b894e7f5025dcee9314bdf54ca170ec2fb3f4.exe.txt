push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
imul
sbb
and
and
outsl
xor
and
jb
dec
xor
push
and
call
cli
arpl
fwait
or
xchg
gs
scas
bound
insb
je
icebp
jge
repnz
xor
es
iret
mov
adc
push
mov
sub
daa
lahf
loopne
sub
imul
call
inc
lret
cwtl
test
frstor
stc
dec
pop
es
pop
nop
imul
push
sbb
cmp
out
jb
xchg
cmpsl
mov
in
scas
inc
xchg
outsb
fistpl
js
jle
mov
mov
mov
cmp
out
inc
enter
xchg
mov
xor
mov
jl
out
dec
inc
push
into
arpl
dec
rep
pop
pop
jl
inc
push
roll
cmpsl
jno
fs
cmpsl
das
popa
or
std
test
add
xlat
loop
fistl
ret
fs
in
sbb
mov
fwait
sahf
subl
cmp
popf
clc
fsubp
gs
test
or
xchg
nop
adc
test
jns
mov
mov
mov
sbb
xchg
insl
or
push
push
lret
dec
inc
sahf
stos
pop
pop
ljmp
push
dec
clc
and
xchg
orb
xor
popa
add
mov
repz
add
int3
xor
into
jp
jo
in
cmp
iret
jno
int
jg
bound
add
or
push
pusha
pop
outsb
push
xor
mov
sub
fcomps
fcmovnu
aam
xor
push
out
pop
sbb
data16
test
ss
mov
stos
or
mov
les
xchg
call
repz
ret
jo
pop
push
outsb
push
je
repnz
inc
dec
cmpsl
cwtl
push
jne
push
iret
cmp
fisubl
inc
insl
mov
cmp
test
aad
mov
pop
sbb
fucomp
pop
cs
fwait
nop
cmpsb
insb
jns
jnp
fstpl
sub
push
mov
inc
lds
adc
imul
sub
jns
out
test
dec
mov
push
es
push
inc
sbb
mov
add
lcall
std
cmp
fldt
into
fwait
movsl
push
dec
cmp
int3
cwtl
mov
pop
sbb
jns
xor
jae
xor
ficompl
adc
cmpsb
push
fisubl
mov
ljmp
lock
xor
mov
pop
mov
mul
mov
mov
or
ret
aad
adc
jae
adc
insb
pop
mov
jge
aad
xlat
subl
sub
adc
pop
mov
pop
adc
into
sbb
leave
daa
add
aad
push
push
arpl
and
sbb
ljmp
divb
stos
ds
sti
in
pusha
addr16
xchg
xchg
mov
out
sub
add
push
inc
popf
dec
mov
cmp
stos
loop
adcl
insb
imul
nop
lahf
push
int
js
arpl
stos
dec
popa
sub
inc
out
push
shl
lret
fistl
cmp
cltd
pusha
aas
sub
cmc
pop
inc
xorl
fwait
sbb
in
test
rolb
ljmp
stos
pop
mov
jle
lahf
pop
test
adc
add
dec
lods
add
pop
mov
ret
aaa
fsubl
xchg
sub
repz
fidivl
push
test
xchg
nop
sbb
xor
push
xchg
stc
and
sbb
testb
test
or
dec
in
lret
loop
pop
arpl
mov
push
imul
mov
sar
sub
into
test
pop
adc
mov
sbb
sub
and
in
mov
shll
push
fadds
stos
addr16
imul
and
add
xor
mov
mov
inc
mov
test
je
sbb
mov
pushl
in
subl
push
inc
cwtl
jl
js
push
sbb
shll
xchg
pop
adc
sarb
in
mov
sub
add
sub
cmp
sbb
movsb
pop
push
mov
in
push
push
fcomps
or
test
fnsave
xorb
int
repnz
push
xor
xor
cs
lahf
fsubrs
dec
jle
cli
jl
xlat
out
mov
add
xchg
aas
pop
test
xchg
dec
cmp
push
xor
sbb
cmc
dec
adc
rorl
sub
xchg
or
outsl
es
jge
in
aam
addr16
fldt
movsb
sbb
push
mov
imul
adc
xchg
add
push
adcb
xchg
leave
and
sbb
hlt
idivb
inc
sbb
scas
push
ret
jne
aaa
mov
jl
mov
xor
push
inc
icebp
adc
add
push
insl
and
fsubs
dec
sub
xchg
das
sbb
lcall
stos
mov
ja
cmc
dec
pop
fistl
inc
pop
cmp
repnz
cmp
call
mov
sub
mov
and
loopne
pop
pushf
and
adc
pop
push
int
mov
xlat
out
ja
and
sub
or
pop
pop
cmp
mov
arpl
mov
dec
mov
lods
test
shlb
arpl
sbb
stc
push
add
mov
inc
jnp
mov
or
mov
mov
add
mov
push
mov
jg
inc
repnz
cmp
push
pop
jns
test
imul
xchg
sub
xor
and
jl
pushf
pusha
mov
stc
enter
outsl
dec
push
push
inc
pop
add
scas
xlat
nop
xchg
inc
adc
jno
in
mov
and
xchg
push
inc
xchg
or
sub
xor
scas
mov
ja
fs
pusha
sahf
push
pop
sub
ljmp
sti
and
jge
fisubrs
push
mov
dec
jp
ja
mov
xchg
daa
test
int
scas
mov
lods
sub
sbb
stc
inc
rcll
jae
in
cltd
sub
xchg
and
mov
or
in
mov
mov
push
dec
out
in
pop
mov
inc
fnsave
sahf
inc
jbe
in
add
out
push
xchg
or
jne
out
pop
fists
mov
aas
stos
dec
xlat
out
int3
out
push
or
dec
cmp
jb
jne
stc
xor
test
mulps
pop
dec
add
stc
cmpsb
idivb
ret
lds
dec
jge
idivb
loopne
stos
jo
add
icebp
or
and
add
ret
cmp
loopne
je
adc
ss
loope
leave
lret
xchg
pop
xor
lds
js
lds
jmp
pop
loope
lds
xchg
out
les
pop
rcrb
hlt
popa
incb
sbb
lock
ss
in
cmp
ljmp
in
dec
scas
jmp
pop
pop
pop
lds
arpl
out
in
jne
test
jnp
push
jge
pop
jp
mov
out
inc
add
je
add
imul
addr16
pushf
jp
in
dec
pop
xchg
sub
or
mov
daa
test
mov
scas
mul
cmp
mov
dec
les
xchg
enter
insl
sub
cmp
mov
repz
fistpl
push
bound
fisttpll
cld
xor
sub
jno
mov
inc
mov
out
les
stc
sbb
cmp
pop
sub
fdivrl
ret
push
pop
aam
mov
out
movsb
imul
je
icebp
mov
call
jnp
cmp
jnp
dec
data16
add
cmp
add
rcll
mov
push
mov
aad
fiaddl
int3
popa
fstps
daa
loope
or
fnstenv
daa
and
out
outsb
lock
add
je
push
imull
ja
stos
pop
xor
in
push
jbe
sub
mov
and
andps
inc
fdivs
adc
lcall
sub
ss
sub
cltd
nop
vpcmpeqd
fsubl
notb
mov
rorl
push
mov
lods
cmp
push
aas
cwtl
lds
push
xlat
push
outsb
repz
xor
outsb
lods
mov
imul
xor
je
pop
insl
test
sahf
lea
stos
dec
cmp
push
add
sbb
adc
jecxz
add
ss
mov
xchg
xchg
push
pop
aad
mov
cmp
lret
xchg
les
mov
xchg
xor
mov
dec
loope
or
mov
outsb
js
in
decl
leave
fidivl
inc
fimull
add
xor
dec
ja
and
xchg
pusha
xor
mov
into
mov
std
test
mov
jno
ret
inc
cltd
lcall
push
inc
ja
popa
ret
addb
add
loopne
push
pop
mov
movsl
jl
lds
out
in
int3
jp
or
loopne
in
mov
neg
lods
pop
add
inc
test
adc
sbb
pop
jae
jl
stc
add
jne
xchg
fsts
dec
movsb
cltd
aam
xchg
sarl
leave
inc
xchg
jo
cmpsl
cmpsb
sti
stos
aad
sub
mov
aaa
jb
jp
je
outsl
mov
inc
mov
fdivrp
rcll
jo
orb
test
lret
mov
scas
icebp
dec
and
je
mov
and
cmp
ret
jnp
or
adc
xchg
inc
dec
mov
arpl
icebp
mov
jae
movsl
fnstsw
jmp
addr16
outsl
push
shrl
mov
add
and
test
xchg
sbb
jb
cmp
xor
popf
insl
divb
lcall
out
mov
sahf
fwait
lock
roll
sub
test
fmuls
aas
xor
mov
mov
nop
mov
jmp
xor
lret
pop
dec
jns
sahf
mov
imul
repnz
sbb
push
fcmovu
fimull
cmpsl
or
xchg
aam
and
sub
or
push
xchg
shrb
and
jge
mov
testb
lea
xchg
mov
sub
cmp
add
pop
adc
stos
dec
das
fdivs
sbb
inc
sbb
mov
sbb
incb
inc
out
fmuls
push
xor
sbb
push
cmc
push
mov
call
hlt
pushf
das
loopne
pop
mov
add
lds
xor
sbb
lock
into
std
add
stc
lcall
test
outsl
cwtl
ss
inc
rcrb
daa
adc
sahf
mov
cmpsb
mov
push
push
int3
sub
je
mov
mov
mov
fisttpll
xchg
jg
adc
cmp
rcrb
ror
pop
movl
mov
jecxz
cs
jb
xor
arpl
cmp
mov
xor
and
aam
mov
aaa
mov
arpl
scas
or
cmp
scas
incl
push
ret
pop
cmc
ficoms
mov
inc
xlat
pop
dec
cmp
push
pop
sar
stos
xchg
pushf
cmp
push
std
fbld
add
nop
jae
je
xchg
imul
imul
lret
or
inc
jne
shll
repz
sub
push
fs
or
mov
test
loope,pt
jne
mov
xor
push
sti
jle
negb
jl
jmp
in
mov
cli
daa
shr
and
lds
xchg
stos
or
sbb
insb
lret
int3
dec
xchg
les
inc
icebp
ja
inc
aam
es
pop
ja
shrl
inc
test
mov
jmp
xchg
pop
addr16
popl
inc
fwait
jae
push
dec
scas
out
cwtl
sbb
in
es
int3
jns
dec
xchg
and
or
mov
adc
pop
mov
int
fnstsw
int
mov
enter
pushl
xor
jno
mov
aaa
xchg
bound
jmp
and
cld
sbb
and
add
xchg
mov
roll
cmp
mov
out
lds
outsl
ljmp
dec
push
mov
mov
dec
push
jmp
mov
stos
push
xchg
xorb
and
decl
sub
xchg
rclb
in
lahf
iret
popa
incl
ret
dec
jge
repnz
cwtl
xor
rolb
ljmp
jl
cmpsb
push
push
cmp
arpl
jb
test
push
cwtl
leave
jne
test
pop
sub
mov
cmp
dec
push
and
jns
arpl
jns
adc
enter
es
jmp
cmp
scas
loop
scas
mov
imul
mov
mov
mov
mov
mov
cltd
out
jbe
neg
sub
shll
in
fwait
cmp
pop
fsubs
sub
dec
and
or
sbb
pop
les
add
insb
xlat
sbb
test
push
push
xchg
push
mov
push
xchg
push
xchg
pop
popf
inc
inc
xchg
fcom
mov
or
hlt
out
sbb
mov
sub
pusha
xchg
jp
push
lock
push
les
mov
push
mov
popf
clc
fucomi
lcall
xchg
jmp
shlb
pushf
fstl
pusha
pop
stc
dec
inc
dec
adc
loopne
or
pushf
ds
testl
lock
lock
jae
scas
mov
mov
mov
inc
jno
jge
sbb
imul
sub
in
lods
xchg
addr16
dec
imul
cmpsl
maxps
xor
popa
jbe,pn
xor
fwait
ss
mov
add
test
pop
jmp
jns
jmp
mov
adc
mov
adc
xchg
xor
ds
push
dec
push
into
jg
ret
scas
in
or
or
add
imul
sbb
jle
or
outsb
cmp
dec
sub
pop
and
addb
xor
addr16
hlt
fsubrs
stos
jl
das
pop
add
cmp
out
push
cmp
mov
scas
sub
daa
jno
push
adc
pop
loopne
lahf
dec
lahf
ffreep
mov
fwait
test
lcall
xor
jp
pop
mov
sub
jge
scas
hlt
xchg
mov
ficoms
push
fiadds
insb
int3
scas
ficomps
sti
enter
shr
fs
lret
jae
cli
push
fisubrs
aas
or
xlat
sbb
shll
jmp
cwtl
mov
jecxz
pop
cmp
es
mov
push
mov
das
test
xchg
clc
push
std
mov
scas
mov
leave
int3
inc
push
xor
test
int3
and
ret
xor
insl
movsb
add
sarl
pop
mov
xor
sbb
add
movsl
into
xchg
and
pop
test
imul
aad
mov
mov
test
imul
and
jmp
icebp
add
lcall
jmp
cli
mov
add
stc
jo
fsub
sbb
and
dec
cmp
adc
jp
jnp
lcall
movsb
mov
scas
stc
idivb
mov
inc
shll
aad
bound
sub
xor
ds
add
test
and
jo
mov
mov
sbb
dec
adc
into
dec
adc
scas
mov
push
orb
mov
mov
sbb
adc
pusha
jns
out
xor
stos
ret
push
push
addr16
mov
pop
mov
push
or
or
jae
mov
int
fidivrs
adc
add
add
mov
cld
subb
dec
in
mov
dec
and
int3
fs
sti
dec
push
jge
ret
dec
test
sbb
push
outsl
sub
push
out
mov
je
mov
mov
or
cld
aas
inc
adc
sub
cmp
pop
jl
jae
inc
add
xchg
icebp
jbe
iret
ljmp
xor
and
test
cli
jae
push
les
xchg
mov
bnd
js
adc
subb
inc
push
and
scas
push
jl
lods
mov
out
jecxz
popa
loopne
popf
rorb
push
or
and
adc
or
sbb
xorb
dec
push
inc
shl
jae
jb
test
loopne
ret
sub
add
dec
ja
push
mov
jne
inc
mov
cltd
andl
and
sahf
sbb
ret
lods
int
ja
lret
mov
push
push
lock
movsl
fcoms
rcrl
push
roll
pop
test
xor
inc
push
std
dec
inc
aam
mov
cmp
sbbl
mov
push
adc
jp
mov
lock
sub
mov
pop
lcall
sbb
jp
xchg
les
jge
mov
sub
into
adc
push
adc
mov
mov
fcom
push
ljmp
mov
fisubrl
mov
shrl
pop
mov
push
insb
mov
divb
cs
mov
js
sbb
adc
push
outsl
cmp
in
outsl
mov
and
addb
push
push
lret
cmp
pop
inc
in
mov
js
dec
int3
add
in
push
xchg
xor
inc
pop
sub
add
testb
inc
pop
cld
repnz
pop
dec
jg
test
xchg
shll
mov
push
dec
sbb
mov
pop
test
clc
jne
add
aas
inc
insb
adc
add
cmp
dec
xor
test
adc
icebp
cli
int3
movsb
lds
mov
dec
mov
movsb
adc
cs
mov
xor
pop
aas
into
pop
cmc
nop
frstor
lahf
dec
and
test
leave
mov
sti
sbbb
rolb
xor
add
repnz
jns
push
cvtps2pd
cmp
mov
pop
jno
add
hlt
lcall
cmp
push
sub
test
rcr
adc
or
adc
mov
sbb
inc
popf
mov
xor
and
fdiv
mov
sub
lods
fwait
test
xor
xchg
sub
pop
sub
popf
mov
roll
rorb
mov
inc
mov
mov
add
out
cmp
insl
jae
test
and
fldt
and
pushf
bound
sbb
imul
icebp
out
cmp
dec
push
loope
jo
cwtl
inc
sub
jo
add
sub
lea
jmp
imul
mov
js
aas
out
xchg
mov
aad
outsb
mov
repnz
cmp
adc
pop
dec
inc
stos
push
xchg
push
fcom
push
mov
jae
push
add
mov
rol
adc
sub
outsl
aad
cmp
pop
dec
pop
out
jge
int
lods
scas
adc
adc
in
test
test
testb
je
call
pop
mov
jb
ficompl
stos
mov
xchg
push
push
push
mov
jle
lock
sbb
jge
jne
adc
pop
inc
mov
lock
ret
pusha
fwait
and
mov
insb
add
lahf
lret
js
adcl
dec
jne
mov
cs
push
lods
dec
or
popa
pop
in
in
xchg
movsb
aam
mov
in
stos
inc
fnstsw
and
push
pushf
pop
popa
jne
dec
mov
out
and
push
xchg
or
scas
fdivp
fs
cmpsl
in
jae
mov
mov
stos
jne
adc
mov
sar
idivl
bound
fldenv
in
outsb
mov
mov
mov
and
cs
xor
and
mov
es
in
mov
pop
lret
das
in
lds
cmpsb
xor
fbld
test
or
pop
mov
cmp
je
mov
dec
lods
and
stos
std
mov
cmp
fwait
cmpsb
fnstsw
xchg
or
or
sti
inc
shlb
pop
ljmp
pop
sub
repnz
adc
fst
sub
or
add
inc
fisubrl
test
cmpsl
and
cmp
cmp
xchg
cmc
sbb
push
pop
icebp
or
cmp
xchg
mov
dec
sub
add
and
loope
outsl
repnz
std
fildll
les
xor
mov
cmp
sti
xor
xor
ja
imul
and
in
loopne
iret
out
cli
aas
push
mov
jge
inc
jle
stc
test
pushf
fisubl
mov
xor
pop
testb
outsb
int3
mov
sbb
int
add
mov
fcompl
inc
jae
add
movsb
xor
jp
mov
mov
das
arpl
jl
and
in
sbb
dec
adc
jge
out
das
loop
mov
das
pushf
fldenv
ds
hlt
pop
ds
fs
out
lret
mov
mov
lret
push
xchg
mov
jecxz
xor
mov
sbb
or
jbe
dec
dec
outsl
inc
mov
in
jbe
out
sti
sbb
push
cmc
xor
mov
xchg
pushf
ljmp
xchg
outsl
add
xlat
dec
cwtl
and
lea
negl
aad
cltd
mov
sub
push
sti
aad
out
aas
popf
mov
andb
and
popa
cwtl
sbb
sub
mov
cwtl
dec
or
sub
mov
aad
pushf
popf
mov
imul
adc
jmp
push
and
sub
inc
sub
arpl
mov
imul
mov
adc
mov
addb
movsb
pop
nop
js
mov
je
pop
and
cld
xchg
pusha
mov
sub
in
xor
pop
pushl
jno
test
jnp
lds
cmpsl
scas
test
xor
pop
jo
test
rcll
jae
cmp
mov
stos
ret
sti
cmp
rcrl
movsl
mov
inc
jmp
incl
jae
xchg
or
ja
xchg
iret
hlt
push
sbb
push
sbb
cmpsl
out
stos
mov
push
faddl
cmc
jp
mov
aaa
push
xchg
loopne
mov
xchg
lahf
mov
insl
and
out
mov
test
dec
fwait
mov
scas
add
dec
pop
dec
loopne
sbb
mov
pop
cmp
sub
add
add
out
inc
inc
mov
cld
es
jnp
xor
push
test
shlb
ljmp
daa
pop
mov
into
push
cmp
pop
iret
push
inc
adc
lcall
aaa
ja
jl
or
pop
clc
xchg
jp
mov
movl
arpl
push
sub
push
cmp
adc
or
stc
call
cmp
xor
or
or
cmc
jae
mov
pop
mov
adc
clc
sub
sbb
movsl
int3
iret
mov
ss
pop
sbb
aas
cmp
pushf
xchg
xor
push
imul
stos
dec
pusha
push
xor
xor
cmpsb
add
adc
mov
mov
andl
orb
adc
shrb
test
inc
jne
sarl
shl
jmp
arpl
push
int
mov
invd
mov
mov
lea
mov
mov
lods
dec
add
mov
push
data16
and
jmp
daa
stc
lock
fs
dec
dec
and
les
int3
inc
and
xchg
xor
mov
out
mov
and
pop
cmp
cmpsb
fbstp
dec
outsb
mov
cmp
jb
shll
js
xchg
addr16
mov
outsb
and
and
xor
cs
into
mov
pop
jge
scas
pushf
jbe
addr16
pop
xor
lods
pop
fcmovbe
push
xchg
mov
bound
xor
mov
rclb
adc
aad
aam
inc
xor
rcrl
add
mov
jle
jne
inc
movsl
jp
and
xor
shr
sahf
push
sbb
jmp
jp
cmp
scas
sub
or
std
testb
lret
pop
dec
in
pushf
dec
orb
bound
mov
stos
or
xlat
mov
test
push
mov
clc
pop
popf
ds
jge
jge
jnp
std
mov
ret
lret
into
sbb
adc
mov
and
daa
push
mov
xchg
sbb
scas
mov
jge
or
cmp
pop
sub
out
cmp
sub
shll
sbb
lods
ljmp
je
clc
xchg
js
js
ret
in
cltd
clc
add
test
dec
ret
cmc
adc
out
fsubrl
push
enter
dec
adc
add
sahf
ror
inc
mov
adc
cld
icebp
je
loope
negl
jns
push
aam
loopne
lahf
rclb
mov
aad
mov
movsb
xchg
mov
sub
add
fidivs
jge
add
insb
int
jle
divps
push
ret
movsb
sub
ret
jle
mov
test
inc
shlb
sbb
fs
xchg
and
xchg
loopne
jmp
fwait
pop
mov
sti
lret
iret
mov
push
ret
jno
or
out
sbb
cmpsb
xchg
or
std
pusha
dec
sub
in
leave
insb
popf
cmpsb
push
orl
lock
sub
mov
mov
lods
xchg
mov
xchg
mov
pop
lret
xchg
adc
xchg
fistl
inc
fistpll
cmp
inc
and
out
inc
iret
outsl
xor
mov
mov
push
lret
push
mov
push
pushf
add
mov
roll
mov
iret
mov
jmp
int
or
cmc
push
inc
sub
dec
add
leave
int3
iret
push
push
jno
adc
inc
sbb
in
mov
inc
inc
rclb
lock
push
cwtl
xchg
push
in
mov
fbld
aam
mov
mov
int3
pop
out
dec
pop
mov
sahf
mov
loop
aas
mov
push
or
add
imul
xchg
out
outsl
jp
test
sbb
pop
cmp
push
or
movsl
push
sub
scas
inc
mov
xor
push
dec
pop
imul
hlt
incb
fldt
loope
sti
cmp
arpl
and
mov
test
das
add
cmp
and
popf
fldcw
push
sub
pop
mov
icebp
adc
jb
cmp
adc
jb
dec
inc
pop
fidivrs
xor
inc
lcall
in
pop
dec
jp
sbb
xchg
jae
jg
ficompl
mov
fwait
mov
mov
jb
ds
adcl
dec
pop
push
xchg
add
add
cmp
fstps
push
roll
dec
gs
inc
and
xchg
adc
jg
lods
in
hlt
in
pop
dec
outsl
mov
mov
dec
pushf
jno
insl
dec
repz
xchg
adc
xchg
sbb
pop
mov
add
mov
jle
mov
bound
pushf
or
enter
xchg
mov
cld
daa
jne
lods
or
xor
sub
or
mov
icebp
mov
mov
lret
sub
or
fnsave
add
pop
call
nop
add
cs
sub
pop
frstor
xorl
aam
pop
add
adc
fucomi
loop
add
pop
rorb
mov
test
cmp
jle
inc
pushf
ret
std
mov
divl
hlt
iret
cwtl
lods
xor
into
rdtsc
pop
push
out
shrb
scas
inc
or
cld
fs
adc
dec
repnz
mov
xchg
ja
jmp
scas
xchg
inc
add
sbb
jb,pn
add
enter
add
ss
divb
loopne
mov
push
arpl
fildl
das
jb
xchg
fcoms
sbb
inc
mov
jnp
cmc
mov
xor
test
pop
out
inc
dec
cmp
pop
mov
divl
ret
insb
push
pop
outsl
ja
js
pop
aaa
ret
mov
stos
bound
mov
arpl
mov
cli
or
mov
xchg
jle
cmpsb
cli
push
aad
ds
xchg
or
add
add
push
jae
jmp
aaa
pop
out
adc
rorl
jae
xchg
mov
loopne
jmp
add
xchg
stc
stos
jge
adc
inc
add
into
push
push
xor
jns
cmpsb
adc
jg
pop
xchg
lret
lea
pusha
dec
or
mov
cmp
xadd
jo
add
pop
and
repz
mov
mov
les
adc
ja
dec
ds
imulb
cmp
add
in
ja
fimull
sbb
subb
jnp
push
dec
sbb
inc
adc
gs
bound
repz
les
push
les
test
mov
mov
repnz
lahf
popf
subb
xchg
dec
push
movsb
scas
lahf
ja
inc
repnz
in
js
ficompl
popf
jl
mov
lds
cli
adc
mov
mov
pop
fnsave
pop
jno
jbe
push
movsl
into
ss
test
rol
dec
inc
mov
sbb
pop
jb
jno
pop
pop
cmp
pop
lea
xchg
aaa
pop
xor
pusha
mov
sahf
pop
push
leave
xor
aas
test
enter
push
lahf
adcb
inc
mov
push
lcall
mov
scas
test
hlt
lods
insl
cmc
xor
mov
dec
xchg
insb
lret
push
jne
shlb
ljmp
faddl
aam
jns
adc
cmp
jae
dec
or
stos
addb
xor
or
xorl
cmp
cmpsl
jne
pop
sti
test
std
aaa
clc
sarl
pop
stos
and
add
bound
jnp
ja
and
xchg
inc
pop
pop
das
dec
scas
call
rolb
xor
fidivrl
or
out
push
lahf
pop
jbe
xor
and
pop
cmpl
rolb
dec
popa
dec
adc
pop
or
roll
stos
lods
mov
rclb
outsl
in
lods
hlt
imul
inc
cltd
popf
dec
jge
mov
sahf
xorl
call
mov
stc
lret
and
jne
les
pop
mov
aaa
mov
out
gs
addr16
cmpsl
loopne
in
fwait
mov
cld
push
dec
mov
pushl
add
into
push
std
sub
in
ljmp
cmpsb
cmp
std
push
mov
ja
xchg
xchg
pushf
lods
xchg
outsb
mov
lods
push
sub
cmp
int3
lods
adc
cmp
mov
mov
mov
jmp
les
push
adc
cli
lods
jg
mov
push
movsb
test
clc
and
clc
inc
insb
cli
add
inc
jmp
ja
lods
bound
lds
fnsave
lahf
into
mov
add
jmp
ja
outsb
leave
or
dec
cmp
cmp
mov
cltd
loopne
and
xor
jp
or
cmp
lret
jl
test
dec
xchg
jnp
pop
or
shrb
shrl
nop
in
test
mov
mov
mov
mov
aas
xor
nop
int
ljmp
int
ret
fst
and
psubsw
pop
inc
roll
or
jmp
mov
pop
xor
aas
xor
xchg
sbb
push
add
dec
jmp
mov
ret
cwtl
push
jbe
in
and
xor
mov
inc
in
pop
ja
inc
sub
cld
fsubs
sub
mov
jne
mov
mov
xor
or
push
lret
je
xchg
jmp
jle
enter
push
insl
jecxz
mov
in
xor
adc
addr16
push
xor
sub
shlb
pop
outsl
pop
push
out
dec
cmpsb
das
sbbb
das
xchg
jns
test
jp
loope
int
mov
or
mov
inc
dec
jns
add
std
inc
mov
in
mov
jb
and
pop
cmp
fbstp
sarb
loopne
adc
cld
fdivrp
frstor
sub
push
fs
pop
fwait
ret
ss
insb
arpl
imul
fdivs
or
jl
lret
arpl
je
pop
add
push
int3
and
jae
les
test
test
testb
or
push
dec
pusha
push
add
andl
pop
movsl
aaa
fmulp
fidivl
mov
push
mov
push
int
rclb
rolb
jg
dec
push
fsubrl
les
scas
sub
sbb
lods
xor
jnp
test
sbb
cwtl
fxtract
rcll
test
loope
daa
insb
pop
sahf
ja
push
shrl
test
das
loopne
aam
ss
sbb
stos
jmp
jp
jns
ds
push
jo
fs
enter
or
or
mov
mov
mov
test
std
sbb
xor
stos
rorl
dec
or
add
pushf
lea
push
cmc
inc
pop
mov
lret
dec
in
pop
pop
dec
pushl
sbb
leave
or
push
push
inc
dec
or
jle
push
daa
mov
lds
sahf
cmp
shrl
lds
pop
das
dec
adc
inc
or
fdivl
pop
addr16
add
dec
das
lds
in
push
ds
mov
cmp
mov
adc
lock
inc
in
push
and
das
xlat
scas
test
mov
mov
and
ret
mov
mov
dec
sbb
sub
pop
mov
das
lahf
mov
aam
stc
nop
bound
fisubrs
outsl
ja
pop
inc
and
and
push
ljmp
xor
jno
les
lret
pushf
sbbb
push
mov
jne
sub
sti
fwait
lods
pop
mov
jp
fwait
mov
pop
push
fwait
sbb
xchg
mov
jns
jp
outsb
leave
fnsave
mov
pop
xor
xor
adc
imull
scas
mov
dec
loope
mov
and
or
test
and
adc
mov
mov
imul
ja
fcompl
jae
dec
outsb
movsb
mov
mov
int
out
hlt
sbb
jmp
outsb
mov
xchg
call
mov
addr16
in
mov
push
sub
testb
loope
mov
inc
mov
mov
stos
ljmp
fldenv
fcompl
stos
aaa
call
mov
imul
mov
push
mov
jae
sub
test
and
scas
and
sub
jno
out
lea
or
push
xchg
cli
clc
divb
out
test
shll
int
fstpt
or
xor
movsb
xchg
fcomip
xor
cli
mov
inc
fs
sbb
jge
xchg
xor
dec
adc
or
rclb
imul
push
lret
lods
mov
inc
sbb
cmp
xchg
movb
xlat
mov
jnp
xlat
mov
pop
sub
mov
mov
and
inc
mov
jno
mov
mov
fimull
stos
icebp
jo
daa
aam
jmp
outsb
mov
mov
stos
arpl
clc
lods
int
mov
cmp
push
mov
filds
gs
adc
mov
lahf
xor
mov
xchg
adc
call
daa
xchg
aad
cmp
jne
dec
testb
fstl
js
imul
and
fs
mov
dec
mov
mov
xchg
and
xor
push
push
inc
stos
mov
lock
data16
imul
mov
and
add
test
stc
or
inc
in
or
out
movsl
mov
daa
cmpsl
xor
inc
test
push
jns
stos
leave
shrb
lahf
fdivrl
mul
daa
ss
pushf
data16
jl
ja
imul
fldl
lahf
sti
add
fimull
std
lret
int
mov
rol
repz
pop
cltd
cwtl
mov
je
fistpll
push
and
mov
cs
cmp
sbb
and
mov
out
pop
ret
les
les
leave
or
xchg
test
and
adc
dec
outsl
fsubrp
das
or
sbb
cmpsb
les
sbb
nop
mov
aas
sub
aaa
or
push
mov
ss
xor
inc
mov
and
loope
sub
lods
inc
pop
adc
inc
mov
xchg
cli
cli
sub
cltd
aam
xchg
fildll
fisubl
jl,pn
adc
mov
sbb
sub
sub
mov
fmuls
int3
adc
mov
mov
mov
dec
aam
jb
dec
jl
add
mov
inc
aam
push
mov
sbb
push
dec
cli
lea
mov
sub
arpl
mov
push
xor
pop
push
push
pop
cwtl
movsl
mov
cwtl
xor
insb
mov
xlat
hlt
or
mov
into
mov
and
add
inc
or
in
fmuls
roll
inc
push
cmp
push
outsb
idiv
js
mov
lahf
dec
jl
imul
movsl
xlat
inc
mov
or
or
lock
mov
inc
std
je
adc
pushf
xchg
lea
mov
cmpsl
int3
cmp
and
pop
dec
cwtl
out
test
int3
pop
je
js
mov
int
xor
call
push
pop
rcl
cmp
mov
aam
add
repnz
mov
sbb
ret
inc
xor
cld
mov
ljmp
int3
xor
loop
or
sbb
adc
inc
adc
cmpsb
fucom
inc
nop
sub
xlat
mov
mov
mov
pop
stos
mov
inc
cmp
xchg
ljmp
jmp
mov
outsb
dec
mov
pop
dec
push
in
ljmp
xchg
mov
lock
inc
push
mov
ljmp
loope
cli
mov
mov
rorb
lock
jl
sbb
push
ljmp
mov
enter
or
fdivrl
call
mov
into
pop
repz
sub
xchg
stos
lahf
scas
popa
jp
cwtl
push
push
out
push
pop
out
jns
outsl
repz
jae
sbb
incb
jg
movsl
mov
daa
lds
pop
pop
ret
repz
pusha
mov
push
cwtl
and
fbstp
jp
sub
sti
out
dec
and
jmp
xor
gs
sar
push
insl
mov
lock
xchg
test
mov
pusha
test
jo
scas
lret
inc
or
dec
adc
push
loope
push
push
dec
xchg
loope
inc
sbb
xchg
je
mov
jnp
outsb
lret
je
cmc
sub
in
leave
push
jns
test
adc
stc
or
push
mov
xor
fidivs
sbb
test
pop
and
ffreep
test
setns
or
lea
sar
sbb
mov
scas
outsb
out
xor
or
push
rorb
test
ja
jp
test
adc
cmp
fists
mov
mov
xchg
push
rcrl
mov
sarb
stc
fidivl
mov
adc
bnd
std
data16
cltd
int
mov
sub
adc
out
mov
dec
test
add
cli
sti
lea
pop
cmp
fmull
fwait
sub
jg
push
in
pop
mov
xlat
mov
jo
inc
xor
call
jmp
stos
inc
mov
fbstp
mov
and
mov
mov
cmp
and
lds
shll
mov
ja
inc
inc
loope
and
and
inc
inc
push
lods
jo
mov
adc
call
inc
push
rorl
xor
ljmp
movl
int3
ftst
stos
popa
push
push
xchg
std
jle
outsl
fnstsw
ret
outsb
and
pop
jle
aaa
lcall
repnz
icebp
push
js
sub
pop
shll
push
adc
push
mov
jle
and
std
sub
shll
jo
test
ss
mov
cli
inc
sbb
sti
js
aas
shrl
adc
outsb
test
mov
xchg
aas
loopne
push
daa
jb
push
mov
outsb
push
and
je
xchg
xchg
mov
les
movsl
pop
test
xchg
cmp
jg
sbb
fisubrs
mov
lock
adcb
jp
mov
lcall
jle
andl
mov
loop
push
push
push
xchg
aaa
adcl
adc
mov
outsw
inc
jns
sub
cmp
or
jl
adc
movsl
imul
pop
xor
dec
sbb
add
pop
jl
aas
add
jecxz
push
popa
or
and
push
cmpsl
xchg
pop
out
cltd
jmp
and
hlt
clc
scas
jno
sub
je
lcall
jo
push
inc
repnz
pop
mov
pop
popf
add
mov
addl
mov
test
xchg
pop
into
cmp
fisttpll
add
add
push
fdivrs
movsl
imul
inc
cmpsb
iret
push
cwtl
pop
jo
xlat
fs
push
xor
shll
sbb
mov
mov
jno
jnp
cmp
xchg
lret
push
leave
jg
jne
mov
mov
sbb
sub
add
mov
jno
push
inc
pop
in
jne
lods
cmpl
gs
dec
xor
xlat
mov
fwait
in
jno
sbb
popf
and
leave
or
mov
pop
fs
addr16
dec
aas
or
add
adc
and
push
aad
je
push
cmp
mov
jae
push
dec
and
push
push
je
enter
popa
cmpl
sbb
daa
jno
add
fidivl
addb
call
das
pop
into
xor
jne
jecxz
mov
pop
lods
inc
sbb
mov
dec
sub
mov
ret
out
outsb
repz
stos
push
sub
or
gs
das
inc
xchg
push
ret
or
push
ja
xor
xor
dec
fwait
mov
inc
imul
mov
es
fimull
mov
dec
and
frstor
dec
inc
test
push
test
or
movsb
cmc
push
in
loopne
push
rolb
jge
lret
mov
mov
sub
jns
jp
or
std
mov
jl
jae
or
mov
repz
mov
xchg
lods
push
and
pop
sbb
xor
xlat
jg
xor
fisttps
movsl
inc
stos
cmpb
push
xchg
lahf
clc
xchg
or
xor
pusha
or
xchg
rclb
push
push
decb
dec
sbb
xchg
adc
mov
push
xchg
adc
jmp
cld
call
inc
mov
push
in
lea
stc
arpl
movsl
shll
pop
lret
xchg
aam
loop
mov
ficompl
jecxz
outsb
xor
or
mov
ret
mov
or
mov
push
adcl
mov
les
jp
gs
mov
jecxz
xlat
arpl
test
stos
sbb
enter
cmp
xchg
jno
aas
or
std
lea
arpl
jp
sahf
mov
mov
pop
call
outsb
inc
push
decb
xor
pop
xor
xchg
iret
cltd
pmullw
dec
pop
shll
cmp
adc
sbb
sbb
mov
jle
ljmp
ret
test
mov
xchg
cwtl
std
sub
in
pop
out
xor
aam
fwait
cmp
fwait
jl
pushf
mov
imul
nop
sbb
dec
aas
or
jp
incb
cmc
iret
jp
push
outsb
dec
test
or
sub
arpl
pop
cmp
fdivl
bound
stos
dec
mov
scas
mov
inc
out
push
scas
icebp
inc
cmp
je
jl
pop
adc
add
pusha
jp
mov
adc
outsb
add
sarl
inc
sbb
fiaddl
fwait
pop
push
rorl
add
jns
pop
jbe
jg
inc
mov
mov
shll
bound
jne
sarl
aas
ja
dec
lods
mov
push
xchg
push
mov
aad
xchg
fdivs
add
cmp
les
push
jbe
mov
jae
and
xorl
dec
cld
xchg
repz
insl
test
enter
cwtl
cmovbe
stos
jp
push
je
dec
jae
mov
bound
push
pusha
jne
push
adcl
sahf
aam
pop
cmp
cmpsl
jo
add
push
and
pop
jmp
mov
call
add
insl
je
cmpsb
out
dec
cmp
xchg
stos
rclb
push
enter
outsl
jo
mov
dec
addb
adc
in
aam
imul
mov
scas
loop
xor
addb
xor
lods
inc
mov
mov
lods
fdivs
sarl
mov
test
sbb
cmc
or
mov
or
stos
and
mov
mov
shlb
aad
outsb
mov
dec
out
push
add
insl
and
jp
pop
ja
not
sbb
inc
pop
push
test
dec
mov
jb
mov
pop
jmp
sub
scas
in
mov
cmp
inc
sub
mov
les
or
and
lret
inc
fsubl
pop
jb
sbb
ret
fldcw
in
jo,pt
push
pop
fs
and
inc
mov
sahf
push
ret
mov
mov
inc
outsl
pushf
and
ret
mov
xchg
mov
imul
dec
mov
sub
xor
xchg
adc
dec
cmpl
jb
jg
pop
pop
or
mov
icebp
mov
out
pop
or
fcmovne
mov
mov
rclb
stos
push
mov
popa
leave
add
cli
and
sbb
testb
data16
ja
aad
push
stc
subl
xchg
cmp
dec
iret
and
sub
sbb
xchg
rcl
nopl
jle
ficoml
cmp
iret
push
imul
pop
shll
mov
jb
push
adc
xor
outsl
push
stos
add
lret
test
incl
cmp
imul
mov
lret
add
out
or
jmp
mov
mov
cmpsl
xchg
aam
jp
scas
in
inc
jns
pop
cmp
add
sub
out
nop
cli
in
gs
ja
sbb
jmp
pushf
outsb
mov
clc
sar
jne
stos
xor
icebp
flds
out
sti
pop
enter
xor
cltd
pusha
inc
inc
ss
adc
adc
sbb
adc
sub
sub
xchg
adc
jl
push
jle
xor
outsl
test
pop
sub
pop
dec
xchg
aam
lahf
jae
sti
pop
add
decb
lahf
fcoms
mov
or
sub
cld
cmp
cmp
popa
dec
inc
test
sahf
cmpsb
and
loope
inc
mov
je
les
cwtl
popf
xchg
mov
xor
jmp
test
movsl
push
rcll
jp
movsb
fs
mov
pop
sti
mov
sbb
fwait
fwait
jecxz
cmp
jmp
jg
pop
sarl
mov
xchg
seto
repz
jno
inc
push
inc
cwtl
dec
push
dec
in
scas
sbb
xor
mov
shlb
out
jnp
mov
std
lcall
inc
das
cld
mov
cld
push
test
rep
xchg
push
das
into
mov
xchg
adc
sub
popa
xor
mov
xchg
out
cmpsb
push
rcr
daa
push
mov
mov
fucomi
mov
cmp
add
push
imul
push
test
add
push
adc
sbb
cmc
add
pmuludq
movsb
lock
and
std
jmp
nop
mov
pop
pop
add
stos
sub
mov
pslld
leave
add
jecxz
add
loopne,pn
mov
loop
xchg
icebp
dec
mov
ds
inc
gs
fiadds
pop
xor
or
mov
js
loope
aad
jle
imul
in
inc
fbld
test
sbb
sti
gs
cmp
jg
movsb
fwait
repnz
mov
and
cltd
fs
dec
adc
test
bound
xor
out
mov
mov
sbb
pop
mov
out
mov
ljmp
add
push
enter
lods
sbb
cltd
aam
xchg
gs
ss
pop
cltd
dec
or
pusha
pop
cli
ds
fwait
sub
leave
xchg
fisttps
inc
pushf
xor
imul
cs
lods
mov
xor
adc
or
in
cmp
loope
lcall
cwtl
fisubrs
jmp
jne
addr16
push
cmp
ja
mov
loope
pop
mov
adc
or
lret
push
mov
jb
mov
add
clc
sahf
adc
push
sbb
ret
push
mov
out
mov
push
jo
data16
or
xchg
push
shll
ds
sti
and
dec
roll
xchg
fwait
cli
mov
je
out
outsb
lea
ficoml
pushf
aas
mov
mov
and
je
jno
mov
sub
sub
mov
sub
jle
inc
or
jo
lcall
dec
xchg
inc
inc
ret
xor
stos
add
adc
adc
lret
orb
lods
jp
aas
push
into
add
pop
fcmove
fwait
dec
leave
iret
ljmp
je
mov
mov
push
dec
inc
push
les
mov
inc
inc
aad
xor
mov
mov
aam
mov
sti
pop
xor
mov
cmc
push
or
cmp
jmp
cli
sbb
movsb
imul
fninit
das
mov
cli
test
fildll
dec
andl
cltd
push
push
jne
mov
enter
adc
fmuls
xor
int3
add
sub
dec
xchg
and
out
ror
push
jmp
mov
mov
inc
xchg
ret
jbe
outsl
xor
inc
imul
adc
pop
jg
rorl
push
sub
fdivrl
adc
dec
and
ds
sbb
aas
push
fnstenv
mov
aad
jb
mov
in
mov
aam
push
inc
xchg
loope
push
pop
add
inc
pop
out
xlat
clc
loop
and
inc
dec
mov
jns
pop
into
mov
pop
or
xchg
rolb
pop
jp
adc
pop
lds
ja
pop
daa
ljmp
cld
aaa
je
mov
pop
mov
lock
and
fildl
mov
sbbl
sbb
call
out
int3
mov
mov
inc
push
mov
mov
pop
into
jbe
leave
repnz
push
add
into
out
push
sbb
mov
lret
sbb
xor
or
xorb
mov
pop
dec
jnp
xchg
frstor
adc
test
sti
shrb
loope
ret
data16
imul
inc
daa
dec
repnz
iret
xor
shll
inc
inc
int
jne
add
les
stc
fwait
call
ja
es
loopne
movsb
mov
dec
or
pusha
sub
or
dec
dec
inc
mov
iret
cmp
popf
ficoml
push
push
repnz
push
jmp
xchg
push
jmp
mov
ror
test
loop
movsl
sub
mov
nop
leave
in
flds
lea
roll
jl
fcoml
std
adc
sbb
mov
popf
ror
dec
or
loope
dec
cmp
fmull
cmp
inc
cmpb
stc
int3
lods
sbb
mov
sbb
fidivrl
call
cmc
xchg
mov
pushf
loopne
xchg
mov
fs
cmp
adc
cld
inc
jg
ret
lret
aad
sub
test
bound
push
jns
or
insl
jns
push
call
test
mov
xlat
rorb
dec
repz
test
fcoml
lock
mov
rcll
adc
adc
inc
ret
dec
sbb
pop
jns
popa
push
lea
push
inc
pop
lds
pop
or
cmp
and
mov
mov
xchg
pop
movsb
push
adc
inc
fwait
push
sub
xchg
into
outsb
aas
movsl
popa
sbb
mov
inc
sarl
and
mov
rcrb
mov
jecxz
arpl
mov
test
and
push
sub
sbb
fistps
or
pop
mov
jb
push
loope
fdivrp
popf
and
inc
arpl
adc
js
push
imul
or
js
inc
sub
movsb
sub
sub
mov
dec
mov
shrb
cs
and
xchg
fldcw
int3
cmpl
push
mov
mov
lahf
repnz
mov
sti
into
inc
dec
ret
sub
movsb
mov
and
fistps
adc
test
bound
mov
jb
lret
rcll
ret
ds
xchg
imull
cld
jno
cmp
cmpsl
pop
out
lods
adc
movsl
add
mov
jae
mov
in
lahf
inc
dec
jl
pop
movsb
sub
adc
sub
sahf
inc
mov
aam
aad
fidivrs
mov
lods
ljmp
cmp
push
std
adc
dec
xchg
fisubs
and
mov
mov
cmp
add
dec
call
xchg
push
addl
lahf
repz
in
ljmp
and
enter
adc
popa
mov
pop
xor
out
cli
lahf
mov
divl
push
dec
test
insb
aas
outsl
popf
out
out
bound
das
pop
enter
popa
jle
popf
dec
add
in
mov
ret
ret
push
or
dec
fistps
sbb
cmp
mov
or
call
push
mov
pop
jo
cmc
and
cld
out
xchg
data16
ret
lret
add
jp
xchg
mov
adc
dec
inc
add
lea
popf
mov
cmc
sbb
mov
sbb
sarb
xor
dec
pop
or
pop
dec
cld
cmc
mov
shll
clc
lahf
xchg
imul
scas
es
add
xchg
call
inc
jl
mov
shll
jns
pop
insl
sahf
in
or
cli
sub
inc
inc
jb
sub
jbe
or
popf
es
xlat
dec
mov
cmp
testl
rclb
mov
xchg
test
mov
stos
pop
icebp
data16
repz
test
ret
movsb
insl
movsb
lock
inc
xchg
sub
inc
fwait
cmpsb
adc
xchg
xchg
les
insb
push
orb
sbbb
sub
out
in
jle
jne
clc
loope
mov
bound
add
cwtl
jnp
es
arpl
mov
lods
xorb
pop
out
or
cmpsb
jo
cmp
cmp
cmp
adc
mov
jecxz
jae
mov
mov
loope
js
or
movsb
xchg
arpl
inc
jno
xchg
test
icebp
clc
jno
fs
mov
movsl
enter
addr16
jbe
xchg
jge
dec
scas
adc
mov
sub
sar
cmp
insb
xchg
enter
inc
aam
es
push
dec
jne
mov
bound
rcll
popl
ret
call
fcomps
xor
mov
leave
ljmp
mov
mov
nop
push
pop
dec
mov
shr
mov
push
xchg
cmpsb
hlt
jbe
call
cli
jmp
mov
rorb
out
fdivl
xchg
movsl
aad
insl
add
iret
cli
sub
lcall
outsl
push
arpl
dec
fs
rolb
jae
lods
sar
sarb
fcoms
into
xlat
push
cs
push
mov
cli
and
mov
call
and
popa
je
pop
and
in
add
jae
jae
fldenv
pop
imul
popf
xor
push
mov
aaa
sub
lret
mov
mov
inc
leave
jmp
mov
push
incb
sbb
decl
cmp
xchg
rcr
shll
xchg
fcompl
pop
mov
mov
cmp
repz
inc
mov
add
jo
mov
out
mov
mov
enter
mov
adc
js
jl
sub
mov
inc
insl
loop
add
jge
push
xor
out
pusha
push
ds
lods
rcl
lcall
inc
mov
xchg
shrb
sti
lea
sbb
xor
sub
int3
mov
pmaxsw
push
xor
sbb
ficompl
mov
push
jle
push
daa
rcr
scas
in
inc
mov
outsl
sub
outsl
push
cld
subb
lret
mov
insb
sbb
fsubr
fisubrl
mov
loope
jb
jb
pop
stos
cmp
rcrb
and
jmp
into
xchg
lcall
sub
pop
sub
pop
insl
popf
sub
jno
jmp
jns
pop
mov
std
mov
mov
lcall
arpl
lock
push
leave
iret
filds
pushf
inc
xor
cmp
inc
push
mov
fnsave
push
sbb
push
push
inc
roll
push
push
jns
xchg
xorb
sub
jno
fildll
mov
adc
mov
mov
das
dec
popa
rcrb
rol
xchg
jecxz
popa
iret
sti
mov
mov
and
mov
add
add
pop
sar
insl
sbb
iret
xchg
lahf
inc
sbb
fstpl
xor
xlat
shrb
jo
pop
add
shlb
xchg
inc
stc
cltd
push
dec
popa
bound
sbb
or
push
ret
adc
lahf
popf
addb
xchg
rclb
or
rcl
scas
adc
lahf
xor
fwait
sub
cmp
pop
and
xchg
sub
lret
xchg
dec
inc
aas
inc
add
add
test
aas
mov
cmp
xor
pop
js
enter
inc
cmp
movsl
popa
in
xlat
ds
call
fistl
xor
repz
mov
xor
pop
xchg
add
mov
and
adc
adc
popa
out
pushf
mov
or
jns
cwtl
dec
cmp
repnz
sti
lock
xchg
popa
andl
shrl
js
movsb
xchg
mov
push
test
adc
rcrl
out
push
dec
fistpll
or
daa
pop
shl
mov
adc
adcb
inc
jns
insb
xchg
mov
bound
in
pop
jno
pop
imul
out
mov
inc
push
dec
stos
adc
fcmove
out
sub
mov
jbe
nop
mov
test
mov
sbb
cmp
adc
pop
je
ja
add
jns
pop
jns
or
ds
ss
jecxz
pushf
leave
jp
mov
jge
mov
mov
test
pop
xor
sbb
adc
aaa
sarl
lock
stos
cmp
dec
and
add
push
sahf
cmpsl
ja
subb
jbe
add
xlat
stos
or
mov
or
dec
popa
mov
movsb
cmp
xchg
pop
inc
lcall
out
inc
xchg
xchg
mov
call
movsl
cmpsl
orb
inc
out
rolb
lret
inc
mov
in
jle
je
out
pop
movsl
add
fbld
jmp
mov
xchg
pop
xor
out
aaa
scas
pop
and
fidivrs
test
out
cmpsl
ror
pop
dec
mov
xor
push
fisubrs
cltd
pop
add
dec
pop
testb
adc
sahf
jl
fldcw
or
pusha
jge
in
jne
scas
test
in
jae
mov
dec
mov
adc
sub
shll
cli
mov
xchg
in
aas
sbb
push
leave
sub
inc
lret
mov
dec
pushf
sbb
loop
iret
jb
and
mov
fldcw
daa
sub
adc
jmp
fnstenv
jge
inc
or
and
pusha
push
loopne
sarb
outsb
pop
lods
scas
setle
cmc
or
data16
sarl
jg
call
dec
push
pop
jmp
in
cs
mov
push
xlat
jmp
xchg
mov
lcall
adc
mov
cmpsb
out
xchg
sahf
xchg
int3
xchg
movq
dec
jns
mov
and
adc
clc
loopne
js
push
stc
inc
xor
movsl
ljmp
xchg
rcl
mov
pop
sub
mov
ret
adc
adc
sahf
xchg
pop
mov
dec
mov
leave
inc
push
lret
xchg
adc
xor
inc
mull
popa
xlat
or
sub
aaa
pushf
pop
ljmp
inc
sub
bound
mov
jno
in
jl
mov
jno
or
mov
xchg
sub
scas
inc
insl
arpl
jg
ret
dec
xchg
int
mov
fdivl
push
inc
sub
stos
sbb
push
mov
jno
mulb
cmpsb
and
mov
or
bnd
les
fidivrs
jg
repnz
aam
into
push
pop
out
adc
daa
f2xm1
mov
jno
xor
cwtl
xor
stos
sbb
fwait
or
ds
repnz
in
pop
dec
add
push
das
adc
dec
push
or
js
outsb
call
out
push
pop
jo
and
outsb
mov
mov
lods
dec
cmpsb
int
jo
lret
adc
shl
and
out
roll
iret
test
jmp
mov
pop
pushf
mov
data16
mov
repnz
lret
lret
mov
mov
cmp
lods
out
cmp
dec
mov
mov
insb
in
in
push
mov
mov
or
push
lods
xchg
mov
cmpsl
add
ss
cmpb
mov
ljmp
push
mov
jecxz
inc
aaa
inc
dec
popa
or
aas
pop
mov
sub
insl
or
jg
lea
and
mov
call
insl
or
jp
mov
divl
mov
pop
das
aaa
dec
cmp
scas
insb
push
lahf
cmpsl
mov
mov
push
pop
cmp
mov
dec
lea
aaa
sbb
js
push
xor
ret
adc
jne
mov
push
push
lds
mov
les
xchg
loopne
adc
mov
ret
push
dec
fwait
test
mov
dec
lahf
movb
aaa
sti
inc
inc
fstpl
aad
push
xor
pop
into
pushf
xchg
push
cwtl
sbb
pop
cmp
mov
iret
idivb
ljmp
adc
mov
xlat
xchg
sbb
shlb
imul
mov
call
push
adc
cli
insb
pushf
std
dec
xchg
lret
and
mov
stos
lret
cli
pmuludq
xchg
and
addr16
adc
ficoml
cli
sahf
lock
pusha
push
inc
cmp
cwtl
in
xchg
sub
popa
je
dec
dec
add
mov
jmp
mov
xchg
cmp
mov
repnz
dec
pop
fidivrs
inc
push
inc
testl
mov
sti
cmpb
cmp
mov
or
pop
fwait
ja
sbbl
and
mov
ror
dec
push
stos
xchg
test
shl
mov
fcom
xlat
cmpsb
jno
fdivs
inc
xchg
pusha
push
cli
lret
pop
out
jg
call
jne
mov
mov
aas
ror
jne
cmp
scas
int3
int
push
push
nop
adc
push
mov
lahf
xlat
xchg
inc
jnp
dec
sar
flds
xchg
ljmp
inc
mov
mov
in
and
jl
xor
adc
std
add
sub
jnp
mov
std
loope
mov
mov
inc
jns
filds
ja
je
lea
pop
jbe
repz
leave
les
addr16
mov
sbb
bound
push
mov
xor
icebp
sbb
mov
es
lds
cmp
mov
adc
stos
cwtl
xor
aaa
mov
je
push
mov
and
adc
xchg
mov
shl
add
cmp
mov
xor
lahf
push
add
push
dec
ficomps
lods
dec
mov
sbb
bound
or
and
mov
mov
gs
dec
jmp
scas
adc
loop
ret
cwtl
stos
sub
adc
cs
call
and
push
sbb
pop
ss
int3
jmp
out
cmpsb
rcrl
lret
fs
out
cmp
pusha
repz
mov
sbb
lea
jne
xchg
test
sti
or
pop
into
pop
pop
mov
mov
mov
mov
scas
data16
pop
push
dec
jg
mov
adcb
lret
cmp
flds
lds
adc
dec
dec
or
sbb
dec
out
mov
arpl
ja
rcl
or
or
jne
les
mov
hlt
mov
into
push
je
adc
fdivl
xor
aad
inc
inc
pop
mov
cmp
movsb
repz
insb
adc
out
adc
pop
dec
clc
call
daa
xchg
dec
sub
inc
dec
pop
cmp
push
adc
ficoms
mov
popf
mov
adc
inc
mov
jno
cmc
lcall
cmp
cmp
outsl
call
ja
test
and
fs
in
inc
hlt
je
cmp
in
repz
mov
fs
lds
mov
jae
add
push
xor
pop
insl
sahf
mov
enter
xchg
and
out
iret
movsl
dec
pusha
and
sbb
scas
incb
push
push
test
outsl
push
pop
cmpb
jns
cmp
ljmp
int
fnstcw
mov
popf
pop
xchg
ja
push
cltd
aas
addr16
sbb
ds
in
adc
dec
dec
insb
in
sar
add
lods
clc
aaa
sbb
mov
xchg
ja
stos
sub
pop
push
and
mov
mov
push
adc
movb
sub
add
jg
and
in
adc
push
movsb
mov
cmpsb
lret
fmuls
jle
repnz
test
ficomps
movlps
jg
push
dec
fmull
das
rorl
cmp
loop
jl
outsb
iret
cld
stos
fisubs
push
movsl
xchg
popf
push
mov
aad
out
stos
push
lock
cmp
les
cmp
mov
cmpsl
jo
jae
cmp
xor
push
dec
stc
leave
mov
pop
jl
pop
out
pop
lcall
pusha
adc
xchg
jns
and
add
xchg
xor
bound
icebp
push
xchg
ja
inc
js
outsl
dec
es
notb
cwtl
mov
cmp
lcall
cmpsb
sbb
xor
call
dec
inc
mov
movsb
imul
sarb
push
sbb
jne
inc
mov
data16
and
sub
loopne
imull
fistps
sub
sub
xor
or
test
insw
in
in
imul
outsl
jge
mov
test
mov
push
mov
data16
sahf
insb
mov
aaa
ret
movsl
push
inc
add
mov
push
fstpl
inc
dec
dec
jnp
lret
sahf
jp
loope
adc
push
push
dec
sahf
dec
movl
mov
popa
and
bnd
cli
mov
mov
and
jg
push
adc
push
or
or
cmpsb
sbb
movsb
xorl
shll
mov
int3
mov
cmp
sahf
push
arpl
imul
inc
ljmp
jo
shrl
in
cwtl
clc
sahf
push
scas
iret
or
sub
fistps
sahf
inc
shlb
push
xor
call
mov
icebp
test
mov
repz
pop
test
mov
bound
imul
jnp
sbb
in
sub
push
sti
jge
dec
mov
and
dec
and
les
test
or
nop
push
divb
xor
push
sbb
xor
lahf
mov
js
into
push
mov
imul
sub
mov
push
popf
out
adc
mov
mov
lock
fadds
mov
and
xchg
xchg
data16
or
imul
int3
jo
xorb
mov
inc
mov
adc
insb
and
mov
or
dec
es
inc
dec
dec
and
fsubrl
or
aas
inc
es
dec
sub
stos
addr16
mov
ret
push
cmp
pop
xchg
cs
cmpsb
leave
aaa
in
xchg
pop
mov
data16
or
clc
ret
push
je
out
ja
and
and
shr
mov
add
cli
and
repz
adc
testl
dec
jle
or
sti
or
fiaddl
mov
mov
jae
jmp
mov
je
into
out
sub
rolb
jle
mov
push
les
leave
cmp
lret
aad
fnstcw
ja
or
cmpsl
mov
xchg
lret
and
enter
int
into
loope
hlt
insl
and
rolb
cwtl
negl
test
iret
cld
pop
or
stos
lcall
jns
in
or
jbe
mov
cmp
in
call
fidivl
cld
cmpsb
in
pop
adc
outsb
out
testb
jmp
push
mov
fisubrl
pop
sar
push
jo
xor
xor
xor
push
xor
or
insl
dec
aad
data16
xorb
mov
das
sub
sub
fwait
cmp
in
loop
inc
sahf
lret
inc
nop
fdivs
imul
cmp
adc
vpshufd
mov
rcrl
push
cmp
and
popf
ja
dec
jl
cld
fadd
fmuls
fdivrs
addr16
testb
repnz
in
rcl
imul
jl
xchg
mov
test
dec
pop
or
add
cmc
shll
xchg
xor
pop
mov
cmp
in
sub
jb,pt
into
add
mov
pushf
jno
and
add
cld
pop
icebp
mov
cmp
stos
dec
sub
pop
add
int3
scas
rcll
es
imul
jge
push
mov
push
mov
jge
fcomps
imul
cmp
push
pop
out
nop
and
push
push
xlat
inc
leave
insb
mov
jnp
stc
loope
out
xchg
repnz
nop
dec
jo
push
mov
out
pop
js
cltd
xor
xchg
mov
pop
xchg
loopne
or
mov
inc
lgs
aam
cmpl
lret
sub
out
rcrl
pop
pop
mov
cmpsl
das
jne
jae
push
aas
loope
call
sub
lock
and
mov
sbb
push
mov
cmp
sbb
shll
or
mov
lds
repnz
xlat
outsb
call
push
ret
les
out
orl
out
dec
cmp
js
push
push
pop
aas
arpl
fdivrl
cmpsl
cmp
jl
daa
loop
dec
js
push
aaa
or
sub
jl
pop
inc
cs
shl
mov
push
sub
movsl
mov
sub
ds
faddp
and
rclb
test
dec
lds
cmp
mov
dec
shlb
sbb
jbe
pop
mov
ss
jp
xchg
scas
mov
or
push
mov
adc
ljmp
ljmp
inc
cmp
cs
xchg
sub
lahf
pop
shrl
jmp
leave
pushf
sub
lret
clc
out
sbbb
xchg
xchg
mov
xchg
lahf
test
loopne
jns
adcb
pop
dec
cmpsl
data16
sbb
popa
movsb
or
push
in
adc
int
jo
hlt
mov
mov
mov
scas
lahf
mov
scas
push
in
test
xchg
mov
mov
in
jne
dec
cmp
mov
les
add
jge
mov
mov
int3
cmp
rcl
imul
jp
jmp
cwtl
and
out
xor
and
mov
xchg
pop
pop
and
pushf
jns
call
xchg
mov
jmp
clc
jb
lret
out
push
and
pop
subl
jne
out
lret
pop
sub
ret
in
inc
call
loopne
addl
in
stos
mov
cli
loope
dec
ljmp
lcall
sbb
lcall
jnp
cmc
mov
sbb
mov
loopne
cmp
push
mov
inc
lfs
sbb
mov
mov
mov
and
out
inc
cmpl
inc
dec
stc
cld
pop
xchg
dec
sbb
aam
mov
or
push
jle
fidivrl
icebp
jnp
popa
sbb
outsl
insl
pop
insl
rorb
xchg
out
mov
outsb
popf
addr16
inc
adc
in
sarl
add
push
push
mov
pop
push
nop
and
jg
pop
pop
movsl
ja
xor
jb
and
push
inc
std
inc
ds
lea
add
fdivl
incl
jne
movsb
push
lret
add
stc
jge
lcall
sbb
jle
add
or
iret
inc
ret
notl
dec
cmc
cmpsl
cmp
pop
jp
pusha
stos
dec
cs
or
lods
sbbb
push
push
push
in
scas
lahf
dec
dec
fidivs
fsts
fld
pushf
in
pop
and
add
mov
cmp
popf
pop
pop
pop
out
je
dec
inc
scas
add
mov
xor
insl
xor
mov
cmpsb
aad
lcall
push
cwtl
pop
pop
jle
and
xor
addl
dec
adc
lea
adc
inc
incl
mov
push
scas
push
in
jle
cmpsl
or
mov
push
lea
test
loope,pt
dec
repnz
push
lret
gs
jno
movsl
insl
fisttps
or
insl
inc
aaa
out
xchg
ljmp
test
xchg
sbb
adcl
cltd
push
das
inc
adc
jmp
mov
xor
xchg
adc
xchg
sub
cmpsb
mov
add
inc
xchg
ljmp
and
in
xlat
mov
add
out
mov
repnz
sub
push
cltd
loopne
xlat
out
sub
cmpsb
xchg
jo
cmc
and
sbb
outsb
icebp
cmp
cmp
add
lcall
pop
dec
cmp
mov
call
xchg
retw
jmp
sbb
fidivs
cmpl
dec
data16
and
popa
leave
inc
ljmp
fsub
jbe
or
adc
lods
jge
and
insb
push
mov
cmc
or
inc
cmp
test
fwait
repz
enter
mov
icebp
in
xchg
mov
jg
dec
aaa
and
jle
xor
inc
push
pop
push
ja
add
ret
mov
test
inc
jle
sahf
fbld
xchg
or
in
dec
and
cmp
inc
mov
shr
add
ljmp
push
clc
mov
stos
call
or
je
int3
add
mov
repz
xlat
sahf
mov
and
inc
sub
cmpsb
and
push
jp
sar
icebp
mov
shrl
roll
cltd
pop
aas
int
xor
add
out
adc
cli
xorl
popl
testb
or
pushf
inc
lahf
jno
out
mov
ret
sub
leave
std
dec
cli
xchg
fimull
in
xchg
mov
jbe
mov
fldcw
and
sbb
sbb
jbe
xor
mov
enter
loope
xor
shl
sub
pop
sbb
fisubl
cmpsb
movsl
cmpb
int
cwtl
shll
in
inc
push
and
fisubs
inc
mov
data16
shrl
shlb
or
jb
cmp
sub
aaa
pop
sbb
cmp
jl
push
sbb
ficoms
fst
cmpsb
repz
scas
hlt
add
outsb
sub
ret
pop
sbbb
and
arpl
jecxz
cmp
adc
push
jns
and
and
mov
js
scas
jl
and
jg
xchg
fildl
adc
loope
scas
popf
push
in
ret
shll
call
insl
mov
enter
jbe
test
aas
outsl
adc
mov
ret
mov
lret
push
cmp
cmp
pop
jo
imul
inc
pusha
xchg
lods
jg
lods
je
inc
add
sub
ret
lahf
push
adc
andb
pop
out
popa
lods
mov
enter
mov
in
rorl
test
in
cmpsb
aas
push
addb
lock
iret
add
mov
and
outsl
cmp
ds
mov
sbb
icebp
add
jle
push
push
out
into
mov
pushf
jo
loope
adc
test
int3
mov
push
jecxz
or
mov
push
dec
cmpsb
cmp
out
adc
cld
fnsave
jno
cmp
cmc
xchg
jnp
arpl
adc
fwait
bound
sub
mov
je
rorb
push
cmp
std
inc
sbb
push
add
testl
aam
xchg
sbb
loop
fidivrs
popa
iret
inc
mov
inc
jp
xor
enter
cli
push
addr16
push
je
mov
pop
loop
push
jns
inc
mov
add
adc
ret
sbb
rorb
stc
scas
pop
dec
fcmovnu
dec
xor
push
adc
inc
in
mov
sbb
dec
xlat
lahf
call
sbb
shrl
adc
sbb
jp
mov
cli
fsubrl
jb
lcall
cmp
and
jnp
xorb
cs
pop
mov
ret
icebp
imul
xor
adc
inc
lea
test
push
andb
je
and
or
xor
lock
bound
mov
stc
push
lret
mov
or
mov
leave
push
pushf
push
aaa
add
dec
inc
mov
dec
push
cltd
or
loop
into
mov
push
jmp
adc
sbb
add
stos
inc
cmp
xor
or
jl
jge
into
and
cmp
dec
push
sbb
imul
add
or
mov
mov
gs
hlt
maskmovq
imull
lods
sbb
mov
mov
jg
and
mov
cmp
sub
adc
add
or
dec
js
loopne
jg
xchg
dec
pop
mov
popf
in
mov
loope
xor
pushf
inc
sub
andb
add
adc
outsl
mov
fmuls
inc
jbe
pop
mov
fninit
dec
bswap
test
lods
mov
xor
sub
nop
sbb
mov
out
or
sbb
popf
lds
sub
jp
sbb
xchg
in
scas
sub
lods
dec
arpl
xor
push
jo
enter
mov
sti
push
scas
push
insb
shll
xchg
xchg
imul
sarb
test
dec
repz
sbb
das
je
xor
repz
jmp
xchg
pop
test
movsl
mov
imul
ret
inc
ret
test
out
test
mov
xor
mov
cmp
out
pushf
push
push
mov
cmp
lock
subl
inc
jbe
push
pusha
mov
xchg
pop
or
cmp
mov
in
dec
mov
add
mov
pop
mov
clc
mov
insb
scas
xchg
lock
test
aaa
pop
movsl
movsl
inc
ret
sti
inc
sbb
pop
xchg
outsb
in
mov
or
fucomip
js
sub
stos
vmovaps
fnop
mov
pusha
lds
sub
jle
dec
mov
call
lods
cmp
push
or
mov
mov
loopne
repz
xchg
xor
sub
dec
popa
cmp
xchg
lret
cmovae
mov
js
fmuls
ja
loopne
push
lods
cli
xor
jp
pusha
xchg
xchg
push
ds
lcall
bnd
lret
mov
mov
test
aam
mov
aam
pop
sti
xchg
xor
dec
jl
cmc
mov
pop
or
std
out
sti
into
rcll
pop
xor
ss
push
imul
insb
shrb
mov
mov
out
pop
movsb
pop
roll
jne
loop
sbb
mov
std
movsb
pop
shrb
and
and
pop
mov
mov
xorb
in
jg
inc
pushf
aas
popf
adc
jbe
test
cld
in
aas
pop
push
enter
lret
es
cmpsl
dec
inc
es
cmpsb
cltd
add
std
loopne
outsl
jmp
sbb
sub
rorl
insl
lock
es
jae
cmp
les
imull
fisttpl
ds
or
bound
or
imul
into
fcmovnb
adc
popf
jecxz
push
mov
jae
mov
dec
test
sbb
jae
test
push
fwait
or
or
cmpsb
mov
push
inc
leave
lcall
dec
and
lret
pop
dec
sti
sub
jb
stos
adc
neg
je,pt
icebp
scas
clc
jg
push
js
cwtl
push
fcmovb
movsl
jns
jge
pop
dec
mov
mov
ja
movl
dec
cmp
push
hlt
push
shll
fwait
sub
xchg
add
enter
mov
dec
jae
mov
in
inc
std
mov
mov
dec
mov
push
mov
rclb
fnstenv
jg
push
ss
sahf
setle
out
mov
fists
xchg
push
mov
ss
mov
out
push
push
lret
call
das
imul
je
pop
xchg
pop
jle
rclb
jns
mov
stos
mov
fs
in
pop
sbb
xor
loop
ss
push
mov
sbb
jae
cmp
cmp
test
or
and
mov
mov
and
faddl
add
popa
xlat
sti
das
loopne
dec
in
push
test
scas
push
add
push
cmp
or
mov
ret
push
jge
jge
and
adc
cwtl
and
push
rcr
cmp
stos
es
push
sub
outsb
mov
inc
jle
xor
jno
aaa
sbb
inc
and
jnp
push
lds
popa
or
js
or
js
shrb
dec
xchg
add
adc
mov
fwait
inc
leave
and
sbb
jl
test
mov
push
inc
cmp
faddl
jo
pusha
mov
mov
loop
inc
pop
clc
xchg
cmp
xor
jge
xchg
ret
dec
dec
mov
add
mov
out
add
subb
jl
inc
and
aad
sbb
cmp
test
xchg
pop
clc
popa
aam
out
insb
add
fmull
mov
sbb
inc
sbbl
repnz
stos
fs
ficoml
mov
iret
xchg
mov
cli
adc
push
loope
pop
stc
add
je
inc
xor
jb
mov
dec
mov
call
in
andb
inc
adc
xor
repnz
mov
pop
movb
pop
or
xor
nop
dec
in
cmp
mov
xchg
inc
and
mov
mov
sahf
push
push
popa
insb
mov
cwtl
mov
mov
cmpsb
push
sbb
mov
push
mov
pop
out
jecxz
loop
cld
out
mov
and
les
lock
addr16
xlat
repnz
inc
xor
jg
jle
out
cltd
sbb
or
jae
pavgw
xor
mov
mov
mov
clc
icebp
imul
bound
sbb
pop
sbb
iret
cmp
dec
and
call
les
or
xor
dec
inc
leave
fbstp
and
fiadds
mov
cli
inc
aas
or
pop
mov
mov
xchg
adc
inc
arpl
cld
xchg
loope
or
mov
leave
mov
mov
movsl
test
out
shll
sub
xor
jae
xchg
cmpsl
xor
cli
repz
cmp
or
arpl
xchg
test
rcll
sbbl
and
aam
pop
and
ret
push
rep
test
or
push
scas
adc
ljmp
jmp
xchg
lea
repnz
pop
out
inc
jne
rolb
stos
mov
adc
testl
aaa
jle
cmp
cmp
mov
inc
mov
es
daa
shlb
aam
mov
aam
mov
cmp
mov
sahf
xor
ljmp
cmc
sbb
repnz
fidivs
and
enter
mov
fstps
or
sub
dec
daa
aaa
xchg
and
adc
shrb
mov
or
loope
or
jp
mov
pop
add
pop
xchg
cmpsb
je
rclb
daa
arpl
jne
push
pop
lcall
fisubl
out
push
cs
add
pop
fwait
cmp
imul
cmpsb
icebp
sub
jge
jmp
gs
sub
sub
mov
add
xlat
lret
mov
mov
aas
cmp
cmp
mov
push
testl
mov
push
add
dec
fs
inc
and
cmpsb
jl
mov
jge
aad
push
push
or
dec
imul
int3
jl
cmp
cli
push
pop
and
outsl
push
add
xor
aaa
sub
cli
out
les
xor
lahf
mov
lret
push
bnd
repnz
dec
aaa
pop
jae
enter
mov
xlat
xchg
mov
scas
iret
testb
push
cmpsb
ret
xchg
jmp
and
pusha
out
and
xchg
enter
shl
stos
add
or
add
mov
test
lret
pop
dec
jp
mov
mov
push
fs
je
push
ljmp
jp
mov
xor
addr16
aad
stos
jns
mov
mov
dec
mov
rorl
imul
sbb
push
sti
xchg
adcl
movsb
sbbb
xchg
xchg
out
mov
nop
int3
xor
dec
cmpb
dec
lods
adc
aas
sbb
int
cmp
xor
jae
cli
test
nop
add
ja
sbb
adc
loop
push
xchg
pusha
add
aam
ret
test
sbb
mov
xchg
mov
mov
inc
xchg
lea
sbb
call
mov
lcall
fildll
stos
arpl
push
out
ja
cmpsl
adc
pushf
bound
xor
cmpsb
out
lret
or
add
cmp
push
jns
scas
scas
push
test
pop
cmp
mov
out
dec
ja
xor
ficompl
fdivs
push
add
dec
orl
adc
divl
adcb
push
enter
popf
jnp
xorb
jecxz
xor
hlt
ret
lahf
push
aam
xchg
andb
pop
test
push
ret
push
lret
shr
sbb
mov
cmp
pop
cmp
insb
mov
and
cltd
cs
add
pusha
aaa
push
jg
ret
dec
pop
enter
out
adc
mov
in
sub
push
sti
xor
imul
mov
jmp
data16
inc
xor
jg
or
lret
push
test
pop
test
dec
addb
mov
aam
gs
jb
test
adc
fstl
out
xchg
outsl
movsb
push
add
stos
jmp
fists
mov
fucomip
outsl
adc
loope
dec
stos
out
jne
inc
jae
push
sar
inc
repnz
mov
add
imul
pop
mov
mov
mov
mov
pusha
aad
hlt
dec
ficompl
adc
movsl
mov
xorl
andl
cli
sub
mov
push
test
mov
cmp
jns
and
sub
shlb
pop
jle
or
fwait
pop
sub
xchg
shll
into
lcall
inc
sbbl
push
push
movsl
hlt
insl
jbe
int3
add
xor
pop
dec
mov
cmp
dec
push
shrb
xor
jnp
add
imul
filds
jne
xchg
loopne
sub
fsts
or
mov
add
daa
adc
mov
test
ficoms
fistpll
js
xchg
sti
loopne
cld
mov
sbb
lds
add
out
or
dec
je
seta
movsl
and
lock
mov
fcomps
in
cmpsl
cli
cmpl
fcoml
adc
xor
stos
jb
lret
and
outsb
jp
loop
inc
insl
push
rcrl
mov
sbb
and
push
insl
or
addr16
movl
test
push
push
add
adc
xchg
in
jbe,pt
pop
cwtl
mov
lret
inc
add
fdivs
mov
imul
data16
mov
push
ja
jb,pn
test
add
jmp
divl
ficoml
dec
das
jbe
lods
jg
popf
adc
and
movsb
repnz
add
mov
xor
inc
scas
add
mul
stos
nop
push
lea
outsb
lods
shlb
sub
iret
push
mov
out
test
pusha
mov
popf
cmpsl
imul
out
push
je
lds
loopne
inc
iret
jnp
lods
xchg
popa
jl
stos
mov
fisubl
ror
jg
enter
mov
out
test
or
push
shlb
adc
rorl
fimuls
ja
mov
mov
cmp
pop
loopne
loop
push
sbbb
iret
xlat
inc
mov
and
inc
cmp
xor
shll
jb
dec
pop
jle
inc
xchg
out
ret
push
int
push
ljmp
std
mov
xchg
cwtl
inc
stos
fwait
xchg
sbb
std
stc
pop
mov
fadds
movsb
sub
out
mov
xor
push
xor
cmp
inc
mov
addl
adc
cmp
push
jbe
xchg
dec
xchg
and
gs
push
adc
ret
dec
mov
add
sbb
xchg
sub
dec
iret
cmp
adc
and
xchg
scas
mov
sarb
cltd
mov
rorl
mov
stc
mov
push
call
dec
out
divb
lret
adc
cs
movsb
inc
mov
mov
cld
mov
int3
adc
test
dec
lret
sub
jle
shr
jbe
push
pop
mov
jbe
inc
mov
sbb
out
loopne
pop
shl
in
jo
stc
mov
mov
pop
mov
nop
xor
scas
add
push
jp
cmp
mov
daa
cld
cli
push
sbb
icebp
sub
xor
enter
push
scas
sarl
or
into
push
pop
ficoms
pop
jno
fdivl
mov
cmp
mov
sbb
mov
inc
pusha
cmp
movsl
adc
mov
test
ljmp
dec
pop
pop
lret
fmuls
sbbb
aaa
daa
mov
lods
cld
xchg
fdivp
bound
test
or
push
shll
mov
pop
aad
inc
call
add
xor
out
jecxz
inc
mov
js
in
jg
sarb
xchg
repz
or
fdiv
push
sbb
mov
cmp
iret
cmp
xchg
lret
movsb
sub
jecxz
inc
or
dec
fnstcw
int
add
cmp
xor
mov
in
push
lods
push
scas
xor
mov
divl
testl
js
dec
pop
inc
mov
inc
pop
fsubr
mov
frstpm(287
movsb
cmc
sbb
addr16
cld
cmp
jle
inc
pop
das
mov
ret
or
push
testl
mov
mov
mov
pop
push
xchg
and
ds
loopne
mov
mov
rorb
push
rolb
adc
leave
sahf
jbe
aam
or
fistps
data16
std
mov
mov
cmp
or
mov
mov
push
mov
test
push
ret
xlat
or
inc
and
movsl
test
stc
movsb
xchg
xchg
sahf
mov
mov
fidivrs
rcrl
out
adc
sbb
out
das
stos
fadds
jle
pop
mov
movsl
fnstenv
mov
imul
mov
sbbl
jp
xchg
mov
inc
hlt
scas
xchg
aad
sahf
fiaddl
call
inc
mov
pop
lahf
dec
push
jns
adc
popf
fucomi
movsb
inc
pop
mov
repz
subl
cmp
inc
mov
rorl
add
sbb
sahf
negb
sbbb
jle
popl
sub
mov
push
adc
sbb
sub
sbb
xor
fstpl
cli
xor
jecxz
dec
pop
in
pop
sbb
sbb
in
insb
add
sbb
setno
fcomps
or
push
fs
sbb
fiaddl
nop
inc
mov
add
add
dec
mov
sub
pop
ret
mov
cmp
push
jmp
adc
outsb
xchg
mov
adc
je
cmp
cmp
inc
pop
jle
inc
mov
jns
cmpsl
or
push
mov
loopne
movsb
dec
leave
popf
mov
test
rcr
sahf
shrl
add
inc
shl
sub
dec
and
hlt
cli
ja
xchg
mov
mov
mov
ljmp
out
cmp
cmp
xchg
mov
lcall
nop
add
pop
das
subl
sub
mov
inc
loop
flds
adc
inc
sbb
lea
inc
fidivrl
adc
clc
out
jg
imul
push
out
dec
push
pop
mov
es
call
stos
add
arpl
rorl
in
sbb
out
jge
lds
or
lock
mov
xor
cmp
scas
mov
fldz
xor
js
repz
jno
mov
and
iret
mov
sub
or
xor
xor
sub
xchg
jb
mov
std
jne
sahf
hlt
lcall
sbb
pop
pop
fwait
xchg
ds
mov
repnz
mov
cwtl
push
rorb
jns
aas
push
cli
loope
jecxz
shll
dec
jg
adc
into
push
cmp
inc
pop
mov
xor
das
jne
fnstenv
cmp
nop
inc
sahf
xlat
outsl
pop
lods
ret
in
popf
ret
push
sbb
and
es
push
xor
shrb
mov
mov
mov
shlb
mov
or
repnz
int
nop
scas
pushf
pop
xchg
xchg
push
mov
pop
shlb
andl
sahf
cmp
mov
adc
mov
popf
gs
rolb
jecxz
js
dec
jbe
xchg
ret
or
mov
fstpl
jge
and
push
fadd
xchg
mov
shl
inc
dec
pop
sbb
or
lret
repz
in
test
addb
pop
lahf
adc
xchg
or
mov
jne
or
mov
insb
sub
mov
and
fstl
rcr
xor
insb
jle
adcl
push
mov
push
sarb
sub
mov
repz
mov
in
outsb
ret
mov
push
add
xor
sbb
test
fbld
xor
lahf
ret
iret
out
jne
add
mov
or
xor
sbb
xchg
inc
cmp
sbb
inc
test
dec
jbe
loop
inc
cmp
or
lahf
dec
and
out
das
jb
dec
or
mov
ss
push
xor
jo
nop
call
xchg
daa
add
cmp
pop
stos
pop
mov
rcll
jmp
xchg
push
cmp
mov
das
dec
mov
inc
cltd
nop
notl
lods
in
jmp
sbb
test
test
imul
lret
xchg
sbb
push
pop
stc
sahf
ficoms
insb
mov
dec
and
jmp
mov
or
pop
mov
or
rolb
inc
fwait
mov
aas
sub
arpl
add
inc
jp
daa
push
sub
aad
xchg
mov
cmp
cli
scas
adc
pop
ds
mull
xchg
in
into
jae
mov
in
lret
add
mov
pop
inc
jns
push
inc
popf
sbb
ja
sti
clc
cmp
mul
fnstenv
push
pop
mov
in
pop
sbb
fsubs
or
inc
cmp
mov
mov
pop
daa
jl
inc
jmp
inc
int
clc
pop
mov
je
das
push
xor
add
out
jge
cli
test
icebp
insb
les
out
rorb
lock
sbb
push
sbb
repz
jne
out
or
out
jbe
orb
fildl
jo
sbb
pop
orl
mov
cli
cmp
fsubrl
movsb
push
add
into
cmpsb
mov
mov
push
pop
adc
or
enter
gs
dec
movsb
and
mov
fsubl
cmpsb
fs
outsb
in
fcomi
scas
push
xor
int
pop
dec
aad
es
or
mov
pop
stos
cmp
repz
call
jl
mov
jns
mov
xor
pop
fisttpl
fwait
push
mov
mov
or
dec
cltd
icebp
lcall
sub
sbb
xchg
push
out
outsb
in
adc
add
mov
sbbb
mov
cmp
push
test
pop
cmpsl
lahf
sbb
lods
lea
fwait
cmp
sub
jl
div
push
sub
xchg
pop
jp
shlb
addr16
aam
dec
or
subb
sbb
pop
adc
sbb
call
mov
arpl
fwait
stos
sub
jb
stos
loope
lcall
fisttps
mov
push
mov
int3
and
in
test
add
push
and
mov
out
mov
xor
shlb
cmp
mov
inc
aad
xor
xchg
sarl
cmp
mov
jbe
call
fistpll
jb
shll
add
and
fcmovne
femms
aam
cmp
inc
popa
xchg
cmp
push
mov
shr
adc
dec
jg
call
cld
adc
fstl
fisubs
inc
sbb
pop
xor
jp
adc
or
loope
jb
xchg
addr16
adc
add
inc
or
push
xorb
jbe
ljmp
mov
testb
mov
or
xchg
outsl
cwtl
lods
stc
negl
sbb
sti
out
mov
cmp
push
std
rorl
test
es
enter
sub
adc
shrb
dec
cmp
stos
xchg
mov
push
jo
xorl
pop
mov
ljmp
mov
xor
push
cmp
adc
dec
hlt
push
cmp
add
test
xlat
lcall
mov
adc
xor
push
aas
clc
into
pop
xor
xor
cld
imul
in
xchg
mov
rolb
jg
scas
push
adcb
or
ja
jbe
fs
or
push
dec
add
in
aas
fsubs
pop
mov
scas
stos
dec
outsb
adc
inc
test
mov
pop
scas
stos
in
imul
popa
add
add
scas
xor
push
push
push
inc
inc
xrelease
add
cmpsl
add
in
in
call
sbb
imul
lea
adc
mov
jp
lods
jnp
sbb
filds
les
jl
movsb
mov
imul
test
mov
mov
sbb
and
xchg
xchg
xchg
xchg
xchg
pop
adc
xor
xchg
call
das
xchg
mov
adc
add
inc
mov
js
mov
movb
or
jo
and
pop
inc
pmullw
sbbl
xlat
mov
das
pushf
mov
sub
into
ljmp
fs
sub
mov
pop
aaa
mov
ss
mov
test
lock
sti
into
loope
lret
lcall
in
adc
mov
xor
mov
rorb
out
push
dec
mov
jp
dec
mov
faddl
push
lea
pusha
sbb
das
or
gs
pop
adc
shlb
ret
cmpsl
or
push
incb
or
mov
ss
mov
leave
jp
sub
xor
addr16
bound
pop
pop
rcll
mov
insl
daa
adc
fwait
out
scas
idiv
pop
xchg
repz
push
mov
cs
jl
mov
in
imul
es
mov
xor
addr16
xor
or
in
cmovs
dec
cmp
sub
sahf
or
out
jb
shll
into
cwtl
push
lret
cmc
pop
mov
jno
inc
push
clc
add
push
repnz
adc
jp
inc
sbb
ror
int
and
push
popl
cmpb
inc
sbb
xor
loope
sarb
in
orl
popf
je
cli
or
xchg
ja
rclb
pop
jb
addr16
jne
fsubrs
jo
adc
jbe
aaa
mov
mov
scas
and
pop
test
dec
mov
cli
or
ret
mov
cli
sbb
mov
js
push
in
jbe
lea
push
push
or
add
mov
jne
pop
push
mov
movsl
daa
loop
ljmp
push
jb
jae
les
jns
leave
sub
cltd
mov
and
jne
xor
lcall
xor
stos
sbb
bound
xor
mov
fidivrl
xchg
push
call
sahf
xor
mov
daa
enter
mov
inc
rcl
sub
adc
xlat
inc
leave
mov
push
dec
repz
xchg
outsb
in
incb
pop
and
xor
push
es
cwtl
lret
inc
push
aas
leave
jns
mov
iret
push
cli
orb
xchg
sbb
call
mov
std
subl
leave
inc
es
sub
xchg
stc
dec
stc
cli
dec
add
jecxz
or
rorl
mov
mov
adc
push
cmp
insb
push
jmp
ret
jmp
lea
pop
adc
add
jmp
fmull
stos
adc
outsl
push
fistl
js
test
lods
push
mov
and
test
imul
and
sarb
and
pop
inc
scas
clc
dec
sahf
dec
loopne
sbb
sbb
orb
adc
ficomps
add
jp
ret
mov
sarl
cmpsl
and
sub
sahf
lea
scas
mov
jno
add
mov
int3
pop
daa
jne
add
lret
into
std
xor
arpl
pop
jns
ljmp
mov
and
leave
push
pop
adc
incl
fcomps
hlt
cs
or
jmp
jnp
pop
dec
inc
aaa
lahf
xor
mov
lock
push
mov
rcrl
sbb
loopne
dec
aaa
sub
jb
pop
bound
sbb
mov
add
mov
gs
cld
jg
jo
cld
sbb
cmp
pop
fisttpll
rolb
loopne
mov
outsb
lcall
std
push
add
adc
mov
jmp
cmp
add
sub
adc
pop
mov
jne
xchg
ja
or
fidivrs
daa
lods
add
ss
xor
inc
fcoml
in
lods
lods
and
jnp
jb
sbb
sarl
lahf
mov
inc
dec
sub
stos
sbb
lcall
lea
sub
scas
mov
imul
fidivs
rorb
mov
add
shlb
mov
and
out
mov
adc
jae
cmp
lret
test
sarb
aad
ljmp
add
sbb
sbb
mov
xchg
and
popa
lods
sub
aas
nop
push
jle
inc
sub
jge
ja
mov
or
arpl
daa
insb
xchg
jle
add
jne
mov
outsb
popf
xor
dec
ljmp
std
add
mov
jp
fnstcw
mov
fisttpl
push
ret
jbe
sbb
insl
fnstsw
aas
fisubrs
fisttpl
cld
cmpsb
jg
aas
push
lret
nop
xor
pop
arpl
sbb
inc
imul
xchg
sbb
and
sbb
fcomps
pop
sbb
jbe
pop
shrl
and
push
movsb
mov
inc
shll
out
cmp
and
sbbl
enter
mov
dec
mov
adc
sti
ss
ret
sbb
repnz
push
pop
mov
mov
pop
pop
cmp
and
push
mov
cmp
mov
arpl
lret
je
popf
lcall
mov
inc
sub
push
jnp
mov
fimull
mov
popa
sti
out
or
xchg
loop
cmp
and
leave
insl
mov
cli
push
pop
adc
push
test
jnp
sti
jl
jbe
xchg
movsl
mov
push
hlt
test
leave
push
mov
mov
orl
mov
scas
add
incl
jg
icebp
dec
loop
cmp
mov
cmp
jmp
add
bound
dec
insb
clc
mov
imul
aad
mov
cs
xchg
pop
lock
add
lret
push
cld
testl
enter
push
call
mov
mov
cld
popa
orl
popf
and
nop
xchg
stos
pop
addl
xor
daa
sti
and
xchg
test
jno
mov
adcb
insb
stc
outsb
popf
arpl
stos
in
cmc
imul
dec
mov
push
rorl
inc
cmp
cmp
sti
rcrl
xchg
dec
xchg
out
mov
inc
cmpsl
std
iret
mov
cmpsb
lock
add
into
xor
stos
leave
mov
pop
sub
in
xor
lea
popf
cmp
push
and
mov
jno
movsl
dec
cmp
cmpl
sti
cmp
cmp
les
shrb
cwtl
cld
mov
rcrb
pop
je
mov
mov
dec
loopne
into
dec
jmp
jge
xor
ud1
pop
pop
push
insb
jmp
xchg
mov
fcmovu
mov
sub
jmp
inc
lcall
pushf
int3
das
add
push
enter
sbb
dec
xor
mov
and
mov
rolb
daa
sub
aad
aaa
lret
loope
push
test
imul
ja
add
sbbl
add
inc
fdivl
jns
inc
ds
in
mov
int
ret
gs
ss
cmp
push
lods
mov
sbb
aad
jmp
add
movsb
adc
sti
push
roll
sbb
pop
cltd
mov
mov
call
and
mov
cld
insl
xchg
adc
imul
clc
push
add
es
mov
sbb
daa
out
add
notl
cmp
imul
jl
push
xchg
mov
jo
xor
in
in
idiv
jecxz
sbb
fcmovnb
dec
push
mov
adc
and
or
scas
mov
mov
jl
xchg
xchg
pop
push
xchg
push
mov
lret
cwtl
or
fiadds
out
dec
dec
cmpl
mov
xor
or
ficompl
out
xor
mov
push
loope
dec
cmp
cmp
aaa
rcll
jmp
inc
test
test
out
lea
xchg
fisttpll
daa
popa
int3
mov
xchg
dec
out
repnz
mov
push
sub
mov
xor
test
mov
or
dec
les
cwtl
movsl
cli
arpl
ret
jae
inc
jae
pushf
or
pop
decl
shll
sub
and
insl
sar
and
sti
lods
in
mov
xlat
ljmp
clc
iret
ja
sbb
push
sti
push
push
pop
push
pushf
aad
lods
dec
push
inc
cld
daa
pushf
dec
cwtl
jl
adc
sbb
xlat
nop
pop
cwtl
gs
mov
int3
pop
dec
mov
movlhps
dec
push
jb
fistpl
imul
js
xor
mov
xchg
cmpsb
or
and
pop
dec
xor
jmp
xchg
lock
xchg
inc
push
jp
mov
imul
fisttpl
fwait
je
jecxz
push
mov
out
mov
inc
jbe
movsl
ret
or
scas
jecxz
xor
test
dec
dec
popf
add
xlat
inc
add
dec
add
out
mov
xchg
xchg
outsl
sub
and
xchg
add
sbb
xor
fiadds
mov
dec
inc
das
mov
xchg
lahf
aam
iret
ret
movsb
popf
lret
inc
aaa
es
xor
mov
notl
push
cmp
mov
or
loop
push
xchg
cmp
int
int
cmpsl
mov
mulb
cmp
mov
stc
stos
in
aas
in
flds
dec
and
not
push
aas
pushw
cmc
cmpsb
and
arpl
dec
pop
mov
adc
mov
push
mov
fnsave
mov
int
js
jecxz
jmp
insl
insl
cmc
negb
mov
sahf
or
aaa
pop
mov
jle
pop
in
clc
add
fimull
in
xchg
and
clc
in
jmp
imul
into
into
negb
cwtl
mov
cmp
nop
ds
mull
sub
sbb
notb
repz
cs
mov
nop
jno
js
mov
and
jmp
sub
push
mov
outsl
scas
jae
movsb
push
xlat
cmpsl
movsb
fs
insb
jp
adc
xor
cmp
testb
ss
idivb
push
mov
icebp
ljmp
ds
jge
adc
or
mov
inc
dec
shrb
mov
cld
cmp
add
inc
cltd
add
fdivrl
mov
test
push
pushf
lds
adc
push
mov
ficompl
imul
sbb
jmp
or
adc
clc
mov
enter
lcall
xlat
jg
cmp
xchg
dec
adc
mov
outsl
lret
push
js
addr16
sub
subb
mov
mov
aad
xlat
shll
xchg
shlb
hlt
sub
faddp
and
adc
in
enter
pop
add
cmc
dec
ds
mov
jge
call
push
add
add
sub
xor
pop
xchg
jbe
cld
xchg
jb
mov
nop
ficoml
sub
popf
out
icebp
xor
adc
push
sarl
jg
dec
gs
cmpsl
clc
and
lahf
sbb
adc
fidivs
jp
jbe
mov
sahf
mov
cwtl
ss
push
dec
out
or
test
mov
xor
and
sbb
add
jb
dec
adc
lret
dec
jmp
inc
adc
push
imul
mov
sub
cmc
mov
mov
das
outsl
lahf
xlat
leave
sub
and
add
int
push
inc
cmp
mov
mov
pop
icebp
or
test
je
mov
cmc
cs
ljmp
ror
sbb
fisubl
dec
sub
push
xchg
add
mov
leave
pop
gs
fstpt
shll
sbb
mov
cmc
adc
test
inc
add
adc
shll
es
add
ljmp
inc
loope
cmp
mov
pop
out
insl
jmp
adc
aam
scas
sahf
dec
xor
jmp
jl
pop
call
mov
cmp
adc
jbe
in
cmp
push
stc
push
arpl
pusha
sub
mov
mov
popa
adc
js
test
xor
xchg
js
pop
in
icebp
cli
lods
add
cmp
mov
lret
mov
jle
mov
in
pop
xchg
sti
scas
dec
int
dec
mov
push
jecxz
lahf
pop
js
fisubl
xor
orb
mov
arpl
xchg
sub
lret
add
out
xchg
insb
push
rorb
pushfw
lcall
mov
or
sti
int
shrl
mov
mov
dec
js
das
es
ljmp
movsb
inc
stos
inc
xlat
es
mov
imul
adc
popa
pop
xchg
xchg
or
mov
clc
or
xchg
dec
push
xor
and
and
add
pop
hlt
imul
push
out
mov
mov
inc
xchg
push
inc
ja
cmpb
test
push
xlat
push
push
cld
inc
fisubrs
mov
jmp
leave
xchg
add
mov
mov
mov
iret
bound
int3
aad
jbe
test
in
and
xchg
ficoml
fdivl
mov
orb
sbb
lret
mov
repnz
imul
pop
ret
fisttpl
pop
shll
jnp
nop
sub
shrl
hlt
aaa
and
jg
outsb
ds
and
sub
and
adc
arpl
dec
push
sub
mov
adc
out
in
fwait
dec
or
add
fs
clc
addr16
daa
jbe
mov
and
push
es
pop
out
push
gs
pop
and
int3
stc
adc
lcall
pusha
sbb
sbb
sbb
in
cs
gs
cmp
in
dec
pop
cld
adc
out
int
insb
int
sbb
lea
jecxz
into
mov
push
adc
mov
jmp
adc
int
stos
or
lds
fcomps
inc
and
test
sbb
cmp
das
push
inc
mov
or
push
and
push
mov
clc
cmp
in
pushf
jo
sti
mov
sbbl
dec
mov
jg
fwait
add
or
mov
xor
add
mov
push
pop
inc
xor
movsb
jg
ret
push
mov
idivl
out
aad
pop
jecxz
jmp
daa
xchg
fcoms
inc
push
mov
mov
lock
jnp
mov
test
pop
and
lds
xchg
call
mov
scas
xchg
or
or
mov
add
nop
push
cvtps2pd
sti
xchg
xor
xor
or
inc
icebp
push
gs
in
push
std
jl
mov
dec
inc
lea
js
out
aad
fs
sbb
pop
push
cmp
xor
icebp
adcl
in
inc
out
cld
mov
sub
in
pop
mov
inc
mov
cwtl
jle
pop
out
sbb
cmp
adc
jne
popf
insl
and
dec
aam
mov
into
mov
or
je
es
pop
push
mov
and
dec
test
mov
xchg
pusha
or
and
aaa
dec
lods
mov
cmc
fcomps
xor
add
mov
cmpsl
adc
scas
std
cmpsb
les
pop
rcrb
mov
mov
mov
shlb
or
into
clc
mov
cs
cmp
scas
popw
xchg
into
movsb
lcall
test
rol
pop
and
pop
in
js
scas
sub
cs
leave
ret
bound
pusha
in
jno
pop
cmp
or
imull
add
dec
pop
sbb
jge
xchg
mov
stos
mov
sub
jecxz
loope
shl
movl
jns
xchg
mov
dec
xor
test
repz
mov
leave
mov
jb
mul
adc
cld
mov
xchg
push
leave
mov
in
divl
pop
sbb
sbb
and
dec
push
add
push
mov
ljmp
lret
mov
movsb
fwait
push
scas
cwtl
aad
xchg
sbb
mov
repnz
sti
and
clc
dec
xchg
sahf
cltd
mov
das
lods
mov
push
and
repz
add
xchg
sub
daa
xchg
push
jmp
adc
into
int3
fcmovnu
mov
test
lds
cmc
mov
popf
mov
push
lods
aaa
outsb
lcall
mov
and
lret
push
dec
addr16
dec
inc
stos
shrl
xchg
xor
or
iret
and
mov
ret
push
popf
dec
sbbl
cmp
xchg
add
icebp
icebp
stos
push
shll
imul
out
xor
dec
push
fmul
in
pop
mov
test
mov
out
cltd
jmp
sti
jne
or
dec
dec
lock
xchg
sbb
pusha
dec
xorb
dec
push
int
inc
adc
pop
int
in
imul
lret
adc
xchg
ffree
ljmp
leave
jae
push
pop
arpl
add
sbb
pop
shll
popa
push
scas
jl
addr16
mov
push
into
sub
sub
inc
sbb
in
mov
jns
push
dec
mov
or
out
fistpl
xchg
pop
cld
xlat
sbb
mov
es
jecxz
insl
fbld
push
ss
scas
cwtl
push
mov
or
std
enter
ljmp
outsb
and
mov
aas
cmp
dec
pushf
out
lcall
stos
lret
scas
ficomps
jnp
and
in
mov
ljmp
sub
xlat
cmc
paddb
outsl
mov
cld
repnz
mov
xor
loop
xchg
cmpsb
xchg
mov
movsb
mov
pop
test
and
add
ficompl
arpl
fmuls
lods
cmp
lods
push
cmp
mov
lock
aas
cmp
xchg
sub
in
test
sarb
mov
ja
ret
adc
movb
out
xor
push
push
mov
les
fidivs
or
xchg
ja
xor
outsl
iret
mov
stc
mov
leave
or
inc
iret
and
or
pop
xor
int
js
out
pop
dec
lret
mov
dec
lret
adc
loope
testb
pop
loopne
mov
lock
iret
fsubr
pop
push
cmc
mov
out
jne
dec
mov
inc
sub
ds
jl
mov
sub
std
pop
out
adc
jg
mov
dec
std
adc
pop
outsb
and
mov
push
into
lock
movl
or
lds
sbb
mov
push
jp
inc
popf
mov
xchg
add
imul
jae
mov
jecxz
mov
jae
sbbb
jge
push
call
sub
in
ds
jmp
inc
xor
sarl
jmp
rorl
cmc
dec
dec
addr16
hlt
iret
push
mov
add
data16
jg
pushf
cmpsl
imul
mov
xchg
push
sub
mov
add
sub
je
xlat
mov
sub
mov
cli
test
dec
nop
mov
pop
pop
push
sub
sbb
lret
aas
dec
mov
push
mov
jnp
mov
adc
fistpl
roll
insl
jg
mov
filds
jge
inc
je
mov
sbb
and
xchg
sub
hlt
mov
jo
push
addl
jns
aad
mov
pop
ret
das
sub
mov
test
call
dec
push
aaa
popa
sbb
inc
and
inc
cmp
shl
imul
mov
mov
xchg
pop
dec
insb
pop
jne
jmp
jbe
push
pop
pop
and
and
divl
adc
or
imul
js
int3
add
lock
xchg
shlb
and
add
faddl
scas
data16
mov
adc
aas
ret
dec
jge
jb
imul
lds
cmp
lret
and
add
shl
ret
pushf
outsb
sbb
adc
or
mov
imul
dec
mov
shr
dec
ret
jns
les
es
aas
sub
xchg
faddl
mov
push
lret
int
jmp
push
mov
add
pop
es
mov
or
aam
mov
sub
adc
and
cwtl
repz
pop
cmp
out
mov
xor
jne
sub
mov
outsb
pop
inc
xchg
popa
push
in
add
adc
add
jns
std
fistl
and
cmp
mov
mov
xchg
or
imul
jns
jne
ds
ret
mov
test
stos
add
inc
or
enter
push
loopne
push
in
hlt
pushf
divb
loopne
xchg
xchg
jbe
subb
iret
movsb
sub
cmpsl
jg
fwait
into
mov
xchg
jg
cmpsb
lret
inc
in
add
dec
push
loop
mov
jg
cmp
adc
lret
ja
sub
pop
stos
test
pop
mov
mov
movsb
and
arpl
popa
mov
add
adc
push
loop
and
aas
std
push
pop
mov
arpl
enter
jno
jbe
mov
mov
jge
cli
push
aas
push
push
cmp
loopne
push
lods
sti
leave
dec
data16
push
push
aam
out
fistps
and
push
adc
test
pop
inc
add
je
pop
lret
mov
sub
pusha
lahf
mov
stc
ljmp
or
cmp
into
mov
jg
and
js
clc
mov
xabort
mov
mov
dec
cmp
sub
cltd
call
push
mov
pop
imul
pop
jne
dec
jbe
test
iret
movsl
je
insl
mov
in
lahf
sbb
ret
xchg
and
test
sbb
fs
iret
pop
push
mov
cmp
nop
lds
push
jns
push
out
inc
daa
cmp
xchg
loope
filds
ficoml
dec
cmp
cld
mov
pop
cs
insl
or
dec
out
jl
mov
push
inc
pop
popf
cmc
out
das
into
pop
sbb
addl
repz
cmpsl
ret
cmp
ja
adc
stc
xor
pusha
push
jb
pop
push
sbb
adc
repz
sub
and
cmpb
xchg
pop
sub
jb
mov
xor
adc
fidivrs
loope
mov
cwtl
in
mov
or
mov
out
aaa
mov
arpl
xchg
sbb
fs
mov
push
xchg
imul
xchg
mov
ret
aaa
or
filds
jno
xor
mov
and
add
push
out
outsb
mov
push
lock
xchg
insl
lahf
out
fmuls
stc
mov
stos
inc
rorl
into
imul
movsb
stos
dec
xchg
dec
pop
into
xchg
dec
lods
mov
insb
fisttpl
dec
dec
cmp
or
aas
sub
fnstsw
insb
popa
sub
prefetch
or
fdivr
call
xchg
push
mov
bound
div
pop
movsb
xchg
gs
in
jge
in
jnp
ret
cmc
je
adc
scas
repnz
inc
enter
or
addr16
lret
jb
sti
sub
scas
sbb
out
mov
ret
sub
xchg
inc
and
in
xor
mov
add
movsl
icebp
pop
mov
lds
roll
lret
imul
aas
outsb
ja
add
test
lods
pop
mov
test
stos
add
aaa
sbb
clc
std
lahf
je
sbb
in
pop
icebp
cli
mov
lea
push
sbb
nop
es
dec
cmp
mov
push
jne
mov
stos
pop
adc
ret
cmp
test
dec
xchg
lahf
adc
bound
cld
fs
cmpsl
xor
inc
popa
ljmp
das
lahf
sub
mov
mov
aam
cwtl
ret
or
test
mov
ss
mov
out
pop
dec
dec
push
bnd
sti
dec
mov
adc
fdivrs
dec
and
stc
std
xchg
xchg
into
lods
inc
jg
push
addl
bound
cli
les
push
pop
call
fldpi
test
repz
mov
jnp
inc
push
test
mov
dec
adc
ficoms
imul
stos
notb
fwait
lret
cmp
mov
imulb
xchg
mov
cs
inc
imul
aad
sahf
mov
or
cli
jne
ret
adc
daa
cmp
movsl
dec
xchg
ss
xor
xor
mov
jne
or
das
arpl
push
cltd
fstpt
or
mov
or
jo
lods
cltd
inc
adc
fwait
pop
sub
push
xlat
in
clc
jp
lcall
sbb
popa
cltd
fldt
inc
lahf
xor
sbb
mov
pop
insb
scas
arpl
insl
insb
test
loope
mov
pop
jno
xor
sbb
jmp
lds
imul
sbb
out
adc
mov
adc
outsl
outsl
pop
mov
push
outsl
jle
or
enter
mov
xchg
or
insl
xor
filds
pushf
pop
or
and
stos
stc
cmp
outsb
shlb
xchg
int
sub
add
cmp
in
mov
push
jno
sub
push
pop
test
and
dec
pop
xchg
stc
pop
notb
jle
daa
ja
in
test
add
mov
jmp
xlat
xor
popa
jge
sahf
cwtl
mov
and
pop
negl
jl
popa
cmp
movsb
addb
movsb
push
mov
aaa
inc
mov
movsb
mov
xor
in
adc
pop
mov
leave
popf
push
mov
cpuid
cmpl
push
stos
fs
jbe
xchg
cmp
idivl
pop
test
int3
faddl
cmp
fs
xor
and
mov
inc
xchg
add
fiadds
stos
pop
add
es
push
cmc
call
sbb
daa
cmp
inc
sub
sahf
bound
stos
cmpsb
mov
push
adc
gs
add
mul
out
mov
cli
xchg
sbb
or
push
jge
lods
or
in
sub
push
js
daa
cmpsb
test
int
imul
mov
cmp
mov
ret
fsub
repz
fs
inc
fidivl
xchg
cld
aad
mov
adc
inc
mov
subl
test
aam
cmp
and
dec
pusha
ret
dec
in
push
and
movsl
pop
mov
inc
in
inc
mov
mov
call
mov
push
and
fcmovb
sahf
mov
shlb
lds
mov
lcall
lods
mov
mov
les
sub
jno
xchg
test
pop
mov
mov
addr16
and
sub
mov
scas
jmp
add
inc
inc
shll
adc
mov
sbb
lcall
nop
mov
test
outsb
cmp
push
mov
aad
repz
cmp
add
rcrl
push
mov
xchg
lea
cmpsb
icebp
fdivs
mov
adc
gs
aaa
cmpsl
inc
popa
mov
xor
sub
ljmp
pop
sub
jno
adcl
aam
lock
hlt
xchg
mov
test
adc
xor
cmp
xor
call
dec
dec
ss
mov
insb
sub
jmp
mov
dec
fdivrs
mov
cmp
ret
das
jg
cmp
xor
jne
inc
mov
pop
pop
pop
dec
pop
add
or
gs
hlt
loop
popa
test
push
sahf
leave
pop
xor
lret
andb
xor
aam
outsl
insb
mov
sarb
icebp
push
jmp
cmp
movsb
mov
sub
repz
sub
fs
add
push
dec
lods
mov
aaa
push
sbb
lea
pop
fcompl
sub
inc
lds
mov
lar
orl
mov
imul
lods
dec
fistpll
scas
repz
wrmsr
test
ret
jle
and
rcrb
bound
sub
in
out
scas
sbb
inc
xor
jmp
push
cmp
scas
movsl
pushf
dec
out
stos
into
test
imul
xor
cmp
mov
add
jnp
movsl
out
jecxz
inc
bound
in
sti
lods
ror
test
and
pop
lret
in
icebp
cmpsl
mov
dec
nop
fdivrs
xlat
push
inc
into
popa
imul
or
test
cmp
cmpsl
and
jno
inc
mov
mov
jmp
adc
fimuls
jmp
idivb
dec
cmpl
lret
fildl
movsb
out
enter
dec
mov
insb
daa
fldlg2
mov
sub
push
dec
mov
cltd
stc
sbb
loop
and
push
test
add
leave
loopne
ljmp
jmp
inc
jns
add
adc
das
inc
xchg
rcl
pop
fwait
ret
add
scas
cwtl
faddp
daa
mov
bound
adc
stos
je
movl
mov
into
dec
lret
cmp
pop
repz
test
ror
dec
cmp
popf
mov
sbb
xor
sub
or
adc
cmp
adc
fucompp
loope,pn
sbb
iret
dec
loop
adc
or
and
daa
mov
jg
sbb
or
push
cltd
ja
jb
in
addb
and
xlat
fdivrs
xchg
or
fcmovnu
adc
inc
pop
cmc
fsubs
sub
sbb
sub
add
or
fsub
jb
xchg
cmpsl
xor
sub
xchg
insl
notb
and
dec
sub
push
mov
test
aam
sub
push
push
fsubl
movsl
mov
pusha
pop
filds
or
mov
dec
in
mov
mov
sbb
lret
xlat
or
jmp
xor
scas
rorl
pop
mov
stos
ja
andb
add
mov
inc
dec
icebp
dec
jle
jns
inc
mov
mov
xchg
shr
dec
adc
mov
repnz
push
mov
mov
jb
lods
fwait
ror
push
out
push
mov
cmp
pop
loop
add
cmc
rcr
sahf
xchg
ds
cltd
sub
xchg
adc
notl
loop
dec
icebp
sbbb
mov
jle
inc
fldl
xchg
sbb
mov
mov
jnp
dec
jno
pop
mov
mov
mov
mov
jne
hlt
roll
xor
mov
jns
fs
pop
ret
fcoms
cmp
inc
xchg
addr16
sahf
jge
data16
aad
sbb
fistl
jae
aam
mov
into
fs
rorl
idivb
enter
push
cli
xchg
scas
mov
sub
and
shll
pop
jl
popf
push
mov
dec
cs
aad
sbb
jnp
xchg
xchg
pop
shll
mov
in
push
mov
mov
mov
xor
bound
fs
bound
gs
lahf
scas
aas
movsl
outsb
fadds
jl
dec
test
or
repz
loopne
cld
or
xchg
jb
fwait
stos
jno
mov
or
jge
lods
popa
pop
and
pusha
adc
mov
mov
xorl
pop
inc
std
sub
in
stc
cmpsl
clc
stc
fbld
push
mov
and
xor
fnsetpm(287
xlat
mov
add
aaa
cmp
xchg
xor
insl
pop
adc
push
mov
mov
jb
pop
enter
aas
or
cltd
mov
out
pop
adc
adc
movsl
rolb
les
rclb
jge
out
lds
mov
cld
adc
dec
jae
jo
xor
cltd
sahf
fstps
and
aad
inc
test
out
mov
cmp
pusha
adc
push
push
iret
xchg
inc
or
sti
jg
dec
aam
clc
icebp
cmp
pop
jp
daa
sahf
das
xor
fbld
setne
jl
nop
cld
mov
mov
add
ret
outsl
mov
or
in
arpl
test
add
push
loope
out
fdivl
or
xlat
mov
insb
and
xchg
jnp
sub
or
loopne
adc
sahf
adc
test
pop
lea
sti
and
jo
repz
aad
int
repnz
xchg
sub
icebp
lods
popf
shrl
mov
pop
mov
inc
xor
xor
cmp
loopne
icebp
loopne
pop
mov
mov
fwait
add
out
jbe
test
pop
cmpsl
ret
push
dec
inc
daa
adc
or
or
popa
and
fsubr
xor
xlat
jge
or
adc
aam
adc
jg
lahf
ret
pop
push
pop
sbb
jp
and
and
sbb
jl
lock
leave
mov
loope
sub
cli
incb
icebp
icebp
jo
jbe
pop
repz
sbb
popf
into
lea
repnz
push
bnd
clc
cmpsb
mov
xorl
mov
jbe
cld
rclb
movsb
xchg
inc
and
lods
xor
enter
jg
sub
in
pop
fildll
out
lods
outsl
lret
mov
dec
push
ja
maxps
sub
mov
test
mov
outsb
and
mov
add
mov
add
aas
loopne
fld
dec
lret
lahf
int
and
pop
stc
cmpsb
mov
fisubrl
push
xchg
add
pop
cltd
and
jns
sti
mov
mov
sub
dec
addr16
cmpsl
push
out
pop
mov
outsl
in
jne
loop
mov
fists
data16
adc
jge
pop
mov
mov
jp
xchg
and
sub
xchg
cmp
ljmp
imul
nop
xchg
sub
arpl
ja
or
adc
inc
and
and
push
mov
pop
push
insb
in
dec
dec
ret
push
jmp
add
push
add
lret
in
cmp
dec
inc
rcll
rol
lahf
sub
aas
mov
loope
pop
fs
arpl
inc
jnp
lret
gs
sub
ja
push
and
mov
stc
movsl
das
out
stc
aad
call
add
lret
inc
cmpsb
and
xchg
lea
scas
mov
or
jmp
add
jmp
dec
insb
lods
mov
ljmp
lods
andb
sub
lret
mov
das
call
das
push
int
push
movsl
push
xchg
push
adc
or
movsl
xchg
jo
jl
dec
mov
in
sub
dec
nop
and
bnd
mov
in
jmp
sub
repz
or
push
pop
insb
scas
ja
out
hlt
cmp
in
pushf
aam
ljmp
out
xor
or
outsl
imul
push
fwait
mov
lahf
lea
ficoms
cmp
fbstp
leave
cmp
push
leave
popa
rorl
xchg
leave
loop
mov
div
push
add
and
movsb
aam
scas
inc
dec
fidivl
add
dec
mov
and
jle
push
out
adc
mov
test
and
sub
jecxz
push
add
shr
pop
icebp
int3
push
pop
jg
adc
clc
fcomp
and
xor
inc
mov
adc
or
mulb
push
clc
mov
rol
jno
fyl2x
xchg
xchg
push
leave
and
int3
insl
sbb
jecxz
pushf
mull
xorl
cmp
dec
jne
mov
cli
lock
cmp
or
leave
fs
push
repz
dec
repz
pop
mov
movsb
xorl
mov
jle
ss
mov
push
cmpsl
push
push
das
sub
mov
int3
pop
xor
shll
jp
sbb
inc
and
insl
pop
ds
sarb
mov
xchg
fstl
add
outsl
fucom
and
dec
or
mov
push
add
xlat
inc
xor
sbb
je
pusha
xor
stc
push
aaa
les
jecxz
pop
mov
pop
dec
cmpsb
sub
cmc
lea
call
mov
and
loopne
cmp
lds
ljmp
repz
fisubs
repz
stc
pop
movsb
fst
inc
mov
pop
addr16
mov
enter
xchg
jmp
lret
and
or
movsb
bnd
cmpb
add
sbb
pop
pop
jle
cmpsl
jns
out
pop
and
imul
loope
add
sbb
sub
dec
pusha
cmp
popf
pop
dec
aam
psubusb
bound
rcll
imul
inc
pusha
data16
mov
inc
sub
rol
fs
or
fisubl
mov
xor
or
push
jbe
loope
add
cli
sub
repnz
insb
jl
repz
mov
jns
idiv
pop
mov
popf
xor
fcmovnbe
adc
mov
xchg
pop
dec
dec
ja
cmp
mov
lcall
subb
sbb
pop
cli
out
cmp
sahf
xchg
pushf
xchg
jl
and
push
jl
mov
lods
dec
ss
xchg
jg
call
and
loope
movsl
outsl
or
jp
int
mov
fcomp
cmpsb
xchg
outsl
pop
jnp
sub
movl
ss
inc
and
mov
cmpsl
push
xor
hlt
mov
bound
outsb
sbb
mov
imul
gs
jecxz
dec
xchg
in
test
lea
add
ret
xchg
jmp
mov
shrl
movsb
mov
xchg
inc
mov
jno
xchg
fstp
inc
stc
test
outsb
test
out
sbb
hlt
and
movsb
mov
fucomi
lods
mov
repz
jns
int3
cmp
out
lcall
fcoml
ljmp
loopne
sbb
jno
and
sti
in
cmp
jns
fmull
pushw
mov
jnp
adc
adcb
iret
push
sub
jmp
test
das
or
scas
call
mov
mov
mov
sahf
cmp
jne
xchg
and
imul
or
inc
loopne
sti
ficoms
ljmp
inc
stos
bound
call
out
add
add
lret
adc
and
mov
and
popa
fnstenvs
leave
jbe
cmp
cli
xchg
xchg
scas
mov
clc
lods
mov
and
mov
add
push
imul
mov
jmp
cmp
sub
sbb
jecxz
aas
mov
push
cmp
mov
sarl
cmp
mov
mov
arpl
dec
jle
adc
movsl
jmp
inc
xchg
sbb
sbb
sub
shrb
xor
stos
mov
cltd
rcrl
inc
push
std
fwait
push
fsubrl
fbstp
aad
stos
insl
sbb
and
mov
ja
inc
cmp
or
fidivrl
fs
xchg
test
sahf
gs
lahf
xlat
shl
sahf
push
gs
negb
cmp
xchg
std
or
out
lret
sub
aas
or
sub
jle
dec
out
out
jb
add
cmc
mov
arpl
inc
aam
add
clc
enter
jnp
cmp
in
mov
inc
rcr
push
les
lahf
addl
aam
jmp
mov
cmp
mov
sbb
mov
mov
dec
dec
inc
sub
in
roll
add
out
xchg
in
adc
inc
mov
or
in
dec
cmp
fwait
add
ss
mov
ret
pop
imul
fisttps
push
fidivl
jge
jmp
push
les
mov
sti
sub
pop
jl
cmpsb
and
fbstp
fbld
and
push
mov
inc
add
jge
add
lret
or
cmpsl
inc
sbb
movsl
add
les
inc
sub
xor
inc
call
enter
mov
scas
ret
imul
sti
imull
ljmp
dec
add
push
cmpsb
xchg
xor
out
sub
inc
sub
test
dec
pop
pop
or
stos
leave
pop
push
cmp
test
push
push
bound
dec
pop
pop
shrl
pop
or
mov
push
icebp
fdivrl
push
push
or
mov
and
push
mov
sbbb
adc
loope
and
enter
jl
icebp
pop
scas
sarl
adc
iret
in
pop
pop
outsb
and
in
sub
jecxz
sbb
push
divb
and
out
jmp
dec
push
fucomi
test
movsb
adc
mov
jle
jmp
adc
mov
mov
ljmp
pop
scas
addl
pop
mov
test
or
jle
jge
xchg
ja
cmp
sbb
addr16
cmp
aam
xchg
dec
push
and
adc
test
pop
dec
dec
aam
xchg
jno
ja
push
ja
loopne
xor
leave
sub
js
int
and
data16
movsl
mov
dec
movsl
pop
xchg
or
ds
fmull
fisubs
jl
lret
pop
rcr
enter
popf
cmp
mov
xor
jmp
and
enter
jg
pop
les
mov
or
mov
xchg
dec
pop
arpl
clc
scas
cmp
fistps
inc
mov
xchg
sub
scas
xor
push
cmp
jp
jb
enter
jmp
mov
imul
fidivs
cltd
xor
pop
adc
int
jno
mov
call
or
aaa
divl
lret
cmp
in
popa
jbe
repnz
bound
orl
addr16
pusha
shlb
pop
dec
push
jge
mov
test
sub
sub
jp
cmp
into
mov
clc
std
cli
adc
daa
inc
popf
cmp
iret
pusha
cltd
jl
fldpi
mov
or
dec
cmpsb
addr16
repz
push
jmp
es
push
repz
xchg
jg
mov
sbb
imul
sbb
in
jne
scas
lret
das
aam
std
jne
cmp
or
jno
leave
sbb
outsl
es
cli
loope
push
out
in
popf
lock
cmp
aas
enter
push
int3
mov
movsl
insl
cmp
fmull
repz
cmpsl
pop
jecxz
shrl
pop
out
jae
ss
out
mov
fistpll
xor
inc
add
scas
pop
int3
fstpl
and
scas
test
dec
lods
cmp
cltd
mov
loopne
leave
movsl
loope
add
lods
loopne
daa
mov
imul
call
xor
test
loopne
jecxz
push
jp
mov
jp
jae
je
sbb
insb
ret
xchg
outsb
xor
mov
and
xchg
pop
xor
cld
enter
aas
sub
imul
jno
leave
cwtl
cmp
pop
lcall
sahf
pop
jno
pop
cmp
sub
cwtl
test
cmp
test
divb
jg
mov
jnp
std
out
jne
dec
outsl
aad
cld
aad
push
fcomps
ret
outsb
cmpsl
cmp
stc
sub
shll
pop
xchg
ficoml
xor
movsb
inc
mov
mov
cmpsb
dec
out
inc
cltd
cmpsl
pop
add
aam
cmpsb
imul
mov
sbb
imul
xor
ret
stos
imul
shrb
jp
mov
fldt
jp
or
popf
push
nop
push
push
xchg
cwtl
xchg
mov
out
cwtl
jns
push
verr
sbb
bound
pop
ljmp
mov
and
inc
nop
jl
cmp
sbb
adcl
jl
mov
sbb
push
mov
jmp
mov
xchg
jmp
arpl
les
int
cmc
jmp
dec
shll
je
push
push
xor
pop
xchg
mov
hlt
fstpl
pop
jne
fdivs
ljmp
sahf
cli
xchg
add
inc
lea
sub
cmc
maskmovq
negl
andl
loopne
daa
add
out
push
pop
fsubrs
mov
push
cmp
sub
das
or
jo
out
xchg
and
pop
bound
push
or
pushf
and
inc
inc
xchg
cmp
fadds
into
jmp
pushf
sub
popa
jbe
jmp
out
cmp
xchg
xchg
push
loope
pop
hlt
sub
fistpll
insl
sbb
cltd
xor
lcall
rclb
adc
ret
mov
mov
mov
es
sbb
add
ror
mov
push
fs
adc
pop
lahf
jb
pop
sahf
stc
mov
fidivrs
das
popa
scas
xorl
and
sub
mov
xchg
shlb
fldl
shr
mov
in
xor
cmp
mov
cmpsl
lcall
inc
cmp
push
loopne
in
push
dec
and
mov
jbe
dec
mov
mov
push
out
in
ret
mov
jmp
or
fldenv
mov
adcl
jb
dec
divl
adc
leave
or
mov
ss
in
test
inc
push
and
lahf
nop
mov
addr16
push
cmpsl
dec
dec
inc
test
sub
fs
xchg
arpl
rcrb
daa
mov
aas
or
std
cwtl
aad
std
enter
test
cltd
push
xlat
mov
mov
loope
mov
ret
push
sbb
cmpb
adc
mov
sub
bound
adc
int3
mov
xchg
cmp
or
and
and
ds
add
sub
sbb
call
int3
shlb
pop
add
sbb
sbb
in
out
or
icebp
shll
fsubl
cld
dec
lock
xor
int3
fsubrl
mov
xchg
out
xchg
ret
fs
jb
adc
imul
in
cwtl
and
test
jl
adcl
inc
and
stc
cmp
test
fnsave
dec
subl
movsl
icebp
inc
es
es
add
nop
add
inc
call
inc
pop
mov
fiaddl
mov
flds
jcxz
orb
int3
out
aam
dec
cs
cmpsb
xchg
mov
inc
rorl
mov
shll
outsl
sbb
and
daa
lods
int3
pop
jo
inc
add
cli
cli
dec
fs
mov
add
sub
cmp
jp
into
and
out
dec
stc
sub
mov
jp
loopne
pop
xchg
int
push
or
push
mov
sub
push
repz
aam
lcall
and
lahf
lahf
xchg
jno
inc
test
ds
pop
mov
loop
lods
clc
adc
out
lret
or
lret
test
js
xor
lcall
sbb
fiadds
lods
and
pop
ret
cli
mov
mov
push
inc
sbb
repnz
adcl
icebp
mov
jno
and
clc
jne
fldenv
inc
push
inc
dec
add
shrb
out
fsubrp
ss
push
lods
repnz
repz
cli
inc
loop
push
dec
pushf
cmp
pusha
insb
pop
jecxz
jno
out
push
mov
mov
in
mov
pop
and
push
jl
in
add
pop
leave
cmpsb
push
or
jmp
xor
jp
pop
xchg
mov
out
adc
pmulhuw
or
sub
outsb
sbb
test
lods
inc
push
or
sbb
or
sbb
jnp
mov
mov
lcall
ljmp
pop
push
in
push
std
push
addb
add
mov
cmpsl
cmp
fnsave
imul
ljmp
jne
and
popf
sub
or
mov
cmp
mov
les
out
pushf
sarb
jl
cs
sub
testl
add
leave
xchg
icebp
in
xor
es
xchg
push
dec
xlat
gs
fadd
pop
push
jnp
mov
ror
lea
adc
adcl
jl
push
in
xorl
mov
ja
cmp
sub
pop
sub
cmp
dec
mov
stos
inc
cmpsb
push
jno
ljmp
lret
sbb
ret
cmp
cld
movsb
and
jecxz
fcoms
outsl
popa
cli
jnp
cmp
outsb
shll
aaa
inc
pop
js
out
inc
inc
push
hlt
mov
inc
sar
insl
add
dec
rclb
rcl
cmpsb
cltd
outsb
insb
test
ret
add
mov
pop
inc
fwait
outsb
sub
dec
or
jo
and
data16
int3
fildl
in
push
cwtl
mov
rcl
outsb
stos
dec
lods
clc
ror
and
js
testl
dec
xor
cmp
sub
test
je
mov
and
sbb
imul
sub
cmp
mov
loope
mov
dec
jne
cmp
pop
out
test
mov
pop
push
popf
shlb
jns
jle
mov
repnz
pushf
lahf
and
and
xchg
cmp
stc
pop
mull
test
adc
outsb
adc
aaa
sbb
mov
sbb
inc
push
pusha
pop
push
imul
lahf
push
dec
mov
adc
aaa
sbb
out
enter
or
lea
sub
ljmp
sahf
sti
test
dec
fcoms
pop
xchg
pop
pusha
test
test
enter
mov
cmpsl
cmp
shlb
mov
js
hlt
movsb
mov
out
shlb
rclb
jp
in
popl
push
imul
xchg
insb
mov
icebp
xlat
push
xchg
fstpl
dec
fwait
sbb
fstpl
pop
adc
xor
or
mov
jp
sub
in
sub
mov
loope
pop
hlt
mov
fdiv
rorl
jo
adc
icebp
pop
popf
jl
dec
sub
hlt
sbb
dec
ds
sbb
mov
or
and
stos
cmp
ret
inc
sbb
cli
inc
arpl
push
mull
stos
xor
xchg
ds
sbb
jecxz
xchg
mov
jns
fdivr
adc
and
jle
xchg
inc
fadds
fbld
stos
sti
and
inc
aam
add
out
mov
rol
nop
push
push
xor
cs
repnz
lret
andl
jbe
std
in
dec
adc
mov
mov
call
pop
ret
enter
outsl
and
out
jno
movsl
outsl
dec
add
popa
jmp
fistps
push
xchg
pop
subb
pop
je
out
scas
mov
mov
int
cmp
std
adc
inc
loopne
dec
mov
jle
mov
inc
js
mull
repz
fiaddl
testb
lods
or
xor
das
mov
push
mov
and
aad
std
lock
xchg
sbb
dec
repz
mov
add
std
cmc
pusha
pcmpeqd
pop
pop
lcall
out
mov
mov
and
std
cmpb
jbe
arpl
jns
pop
push
clc
iret
lahf
jnp
push
mov
je
pushf
xchg
ja
cli
push
xchg
mov
pop
and
sub
dec
clc
xchg
mov
test
daa
or
push
cmpsb
mov
shl
pop
jbe
roll
outsl
lods
dec
shll
adc
mov
cmp
nop
scas
mov
imul
cli
fsub
or
sub
out
cwtl
add
jle
cmpb
mov
pushf
out
rcr
and
cmpsb
xlat
mov
push
or
cmp
loope
pop
mov
les
push
leave
lret
inc
inc
pop
jle
dec
push
pop
dec
ror
inc
imul
jns
jle
daa
jb
sbb
adc
pop
add
int
rcrb
sub
mov
fidivl
or
push
jge
sbb
daa
adc
jns
movsb
mov
mov
sub
push
add
jns
out
out
mov
mov
jge,pt
pushf
pop
xor
push
flds
or
mov
mov
lods
roll
mov
jmp
sub
repz
mov
mov
rorb
or
inc
jmp
mov
cmpsl
jecxz
sub
xchg
insl
add
or
mov
push
add
or
xchg
dec
mov
std
mov
mov
mov
lods
fcmovne
rcrl
orb
jge
out
ljmp
cli
test
gs
or
mov
dec
popf
add
jo
adc
mov
stc
adc
repnz
loopne
mov
sub
ss
xchg
xor
or
popa
inc
ss
mov
popa
cltd
add
and
ja
mov
adc
insl
mov
mov
xor
pop
clc
ss
cmp
cmp
fdivp
jne
push
in
repnz
mov
push
out
sbb
fcmovnb
add
pop
repz
out
and
xor
dec
xor
or
outsl
imul
xchg
or
outsb
push
xchg
test
or
sub
in
popf
add
push
and
adc
cli
mov
das
lret
push
xor
std
ja
aaa
add
lcall
scas
sub
and
xor
add
mov
mov
fstpl
inc
lret
lret
incb
divl
addl
out
sub
and
xchg
cmp
insl
addl
test
mov
dec
mov
mov
mov
shrl
mov
jecxz
fists
jae
xchg
outsb
push
call
das
mov
stos
push
out
mov
scas
and
mov
cwtl
jge
cmp
daa
push
sbb
dec
and
mov
push
sub
jne
sar
inc
push
pop
inc
mov
in
insb
adc
xchg
nop
dec
out
cmp
xchg
gs
pop
shll
mov
aas
call
pop
or
outsb
leave
cmp
cltd
mov
dec
mov
movsl
push
xor
imul
or
mov
std
jne
subb
push
lret
or
btc
or
mov
add
mov
lea
data16
fdivs
pop
rcrb
mov
push
incl
add
xchg
jae
push
lods
loope
cmc
imul
imul
push
fcmove
adc
mov
xchg
test
rcll
xor
test
stc
inc
xchg
push
nop
xor
adc
jl
and
dec
fbld
push
pmaddwd
mov
adc
or
lcall
les
jmp
lea
add
add
ss
push
mov
mov
xor
mov
push
lds
or
sarl
test
fsubrp
mov
inc
jmp
cmp
stos
test
aaa
loope
aas
lods
mov
mov
in
aaa
pop
enter
jbe
pop
push
mov
enter
aaa
clc
add
fwait
cmp
xor
xchg
fldt
pop
jno
adc
and
push
stos
jle
xor
cmpsb
insl
into
inc
out
pop
int
out
xor
and
arpl
outsl
std
mov
inc
push
xor
mov
mov
sbb
test
fs
xor
hlt
ret
sbb
and
adc
xchg
push
and
sti
popa
loope
in
fs
and
clc
movsb
cwtl
pushf
imul
xor
sub
xchg
dec
jb
verw
push
sub
outsb
inc
aad
movl
outsl
imul
lods
cmp
aas
sub
mov
push
sub
fwait
orb
out
and
sub
cld
movsb
xor
xor
cmp
ss
jo
dec
xor
inc
adc
test
imul
call
jne
out
mov
jmp
enter
add
dec
lock
cmp
idivb
pop
mov
aaa
lea
js
aas
inc
xchg
xchg
inc
inc
push
aas
outsb
cltd
xor
push
dec
jle
pop
ds
cmc
mov
jne
mov
aam
fimuls
jl
daa
outsb
lcall
push
push
lock
js
cmp
xchg
ljmp
jle
inc
push
cmpl
ret
daa
mov
loope
es
xor
jge
out
shll
jge
enter
psubw
xor
sbb
xor
mov
adc
imul
jo
orb
sbb
fistpl
and
cmp
jb
scas
lods
xchg
push
pop
lret
mov
dec
pop
xchg
aad
or
dec
pushf
and
push
std
jnp
fwait
lahf
in
dec
lds
dec
stc
sub
fistps
loopne
lret
cmpsl
arpl
jmp
cmp
mov
push
pop
loopne
lcall
sub
ss
inc
rcrl
insb
scas
lahf
push
test
inc
lret
mov
out
xor
adcb
fs
sbb
pop
popf
push
bound
ja
aaa
insl
rcrb
pop
aad
add
mov
sub
sbb
ja
mov
add
jns
sub
imul
cwtl
push
loop
icebp
pop
je
repz
pop
xor
iret
sbb
mov
mov
adc
rclb
jae
in
dec
in
mov
lock
js
xor
jp
mov
inc
popa
jmp
adc
jecxz
jp
xchg
push
mov
aas
adc
stos
nop
cmpsl
add
imul
loopne
mov
inc
push
add
pop
jmp
cmp
or
loopne
or
pop
lret
out
xor
stos
aam
iret
pop
jmp
jae
mov
or
xchg
pop
jge
ret
std
jb
add
or
ret
mov
ljmp
xchg
call
cmp
sub
not
inc
inc
mov
xchg
aas
hlt
pop
jl
adc
or
xor
adc
negl
push
subl
inc
pop
mov
mov
dec
push
dec
dec
call
call
xor
xor
cs
addr16
sbb
push
mov
push
insb
and
cmp
pusha
pop
fs
pop
lret
scas
inc
inc
sub
outsl
pop
mov
scas
cld
sub
sbb
inc
ficoml
sub
lcall
movsb
loopne
ss
cmpsl
outsl
jo
sbb
push
cmp
mov
gs
fsubs
out
data16
jg
ret
mov
rcr
cltd
out
test
push
int3
pop
outsb
outsb
jle
add
or
xor
frstor
dec
jl
lret
push
repz
iret
lods
xchg
jno
insb
lock
push
ret
or
pop
shll
lock
mov
pop
push
mov
popa
aad
repz
cmpsb
sahf
and
push
jb
jmp
mov
and
cltd
movsl
inc
pusha
or
loope
mov
sub
fisubrl
nop
insb
pop
pop
lds
movsb
pushf
arpl
mov
push
lea
imul
jne
movsb
out
enter
sbb
pop
push
insb
mov
mov
loope
mov
pop
iret
rol
out
in
mov
or
mov
mov
call
jl
dec
xchg
pop
adcl
enter
popa
pop
mov
or
pop
mov
sar
mov
adc
scas
lods
insl
outsl
xor
cltd
xorl
push
sbb
es
mov
imul
sbb
orb
dec
mov
popa
mov
je
xor
in
add
pusha
mov
sbb
dec
jo
and
loope
inc
repnz
outsb
pop
shlb
mov
fs
ror
add
fdivrs
mov
fisubrs
stc
aaa
jne
dec
ror
loopne
iret
or
aad
cmpsl
xchg
loopne
lret
bound
popa
lods
aad
subl
aas
cmp
div
sbb
std
xchg
xchg
inc
cmp
cmp
mov
adc
test
loopne
dec
sbb
lcall
das
xchg
add
pop
xor
or
jno
aam
cs
jge
out
je
xchg
rorb
insb
cmpsl
push
data16
add
mov
jbe
inc
sbb
leave
add
dec
fstpl
mov
aam
lock
test
les
add
lea
push
pop
mov
ja
mov
push
sub
inc
cli
stos
cld
mov
out
cmpsl
aad
out
sbb
jg
int3
out
daa
pop
jge
ljmp
mov
data16
sbbl
loope
fbld
push
pop
jnp
jne
xchg
cmpsl
push
fsubr
mov
pop
push
fcoml
mov
lcall
out
jp
call
das
fisubl
repnz
mov
xor
int
inc
ret
push
js
cs
insb
push
mov
incb
in
mov
jecxz
adc
mov
andl
outsl
inc
stos
push
iret
adc
out
dec
cmp
out
jl
popl
aaa
xchg
lods
pop
dec
mov
lea
xchg
sahf
xchg
rorl
orb
sub
sbb
mov
cwtl
std
andl
or
inc
cld
gs
lahf
xchg
push
mov
dec
push
mov
loope
pop
mov
jl
sbb
out
jne
std
ljmp
sub
out
aas
loopne
push
aas
mov
sti
mov
and
mov
popf
lods
bnd
pusha
addl
inc
adc
mov
daa
lods
or
mov
mov
inc
xchg
xor
into
push
repz
pop
mov
or
mov
fisttpll
cwtl
int3
aad
push
xor
sahf
inc
js
mov
test
sbb
sub
out
push
rcrl
and
lahf
mov
xchg
jmp
sbb
das
ds
jno
xor
clc
mov
ljmp
cmp
sbbb
add
push
push
lods
cmpsb
inc
in
mov
xchg
cmp
pop
mov
xor
mov
xchg
sbb
repz
cmp
mov
xchg
mov
inc
mov
pop
mov
adc
andl
out
xor
xor
dec
sar
xor
xchg
mov
add
out
arpl
sbb
insl
jl
aad
jmp
dec
cmp
mov
mov
shrb
dec
sbb
mov
icebp
push
jae
in
push
add
pusha
cmp
cli
pop
mov
enter
shl
xlat
stos
daa
or
xor
stos
out
cltd
push
or
push
loopne
jg
enter
xor
lret
adc
lcall
mov
add
and
cld
sub
mov
mov
adc
sahf
call
inc
xchg
cmc
cltd
jge
arpl
mov
mov
outsl
aad
jl
mov
or
stos
sbb
andb
dec
xchg
dec
iret
add
pushf
popa
jne
and
pop
mov
pop
sbb
and
pop
je
inc
sbb
insl
scas
stc
mov
jge
and
cmp
jae
sub
cs
es
lret
push
fildl
in
add
pop
cmp
popa
call
push
pop
adc
inc
repz
lods
jg
sti
push
and
push
add
add
dec
stos
or
mov
into
int3
adc
lret
arpl
sbb
nop
cmpsb
jno
jl
jns
popf
jp
jnp
xchg
in
push
sbb
mov
aaa
aaa
mov
loop
adc
lahf
loope
adc
daa
mov
std
jmp
inc
xor
cltd
lds
sbb
pop
sub
xor
mov
lods
xor
loop
inc
mov
mov
add
jb
dec
sbb
mov
negb
cmp
lds
mov
pop
push
inc
in
flds
aam
add
dec
dec
out
lods
sub
lds
or
push
fcompl
out
xchg
add
js
pop
push
in
sub
cltd
sbb
pop
mov
and
sbb
rclb
jae
jl
sub
loopne
dec
dec
pushf
mov
icebp
imul
cmp
test
push
in
mov
add
dec
sbb
pop
cmpsb
xor
lds
pop
dec
bts
sub
fisubrs
lcall
or
mov
xorl
pop
in
out
lret
movsb
xchg
daa
and
sahf
xorb
ja
mov
dec
sbb
add
bound
insb
push
or
pop
mov
and
unpcklps
sub
lods
mov
jle
cmpsb
push
fmulp
nop
or
lea
sbbl
dec
pusha
xor
scas
push
testb
jo
fcomip
jnp
sbb
cmp
fstpl
shll
sub
lcall
push
sub
lock
mov
jmp
filds
pop
andl
fcoml
mov
jmp
dec
imul
shlb
ljmp
or
addr16
cmp
ds
xchg
pop
in
int
pop
popf
dec
arpl
mov
inc
stos
js
fiaddl
lcall
jmp
insl
mov
imul
movsb
xchg
les
aas
test
inc
and
xor
jmp
mov
and
int3
mov
aad
sbb
wbinvd
pop
adc
xchg
xor
sbb
in
movsl
fidivrs
cltd
mov
and
xchg
jl
cs
pop
lods
pop
xor
xchg
cmc
jns
add
std
outsb
in
lods
andl
fcompl
jbe
push
inc
sbb
jbe
mov
enter
inc
test
subl
cwtl
in
xorb
les
int3
je
in
adc
jbe
mov
mov
mov
movsl
cmp
fstpl
cwtl
mov
imulb
aad
bound
pop
test
rclb
push
loop
mov
js
push
outsl
movsl
xchg
incl
mov
jb
mov
pop
cmpsl
mov
in
sub
cmpsl
out
cmpsl
cmpsb
jae
outsl
push
and
sti
jb
mov
hlt
lcall
cmpb
dec
test
popl
ja
mov
push
push
xor
push
xchg
out
xchg
adc
or
or
cmp
aam
test
xorl
shrb
adc
mov
jnp
shrb
add
mov
jo
rcl
cmp
mov
hlt
lea
cltd
push
fwait
jo
adc
adc
and
push
xchg
adc
lahf
lods
stos
pop
jnp
mov
inc
std
pop
outsl
and
adc
imul
add
push
jae
stos
push
rorl
jns
add
mov
dec
jnp
repz
mov
ret
fstl
lock
shrb
push
pop
fisubl
cmp
mov
jmp
lret
insl
push
or
jge
jg
dec
jno
pop
dec
cwtl
mov
sub
dec
sbb
insb
mov
adc
movsb
pop
fisubrs
jns
outsl
imul
cmpsb
loop
dec
imul
popa
rorl
cmp
jo,pt
adc
mov
leave
add
mov
ret
movsb
in
add
or
insl
aaa
nop
in
aad
push
push
or
sub
es
or
jns
xor
push
hlt
aam
cmp
leave
test
or
xchg
jle
imul
arpl
ret
inc
test
xchg
mov
nop
shlb
scas
jl
popa
adc
imul
lea
in
add
adc
adc
dec
or
and
mov
dec
dec
dec
popa
into
dec
pushf
push
fisubrl
jle
inc
push
lock
xlat
ss
ss
fisubl
or
jg
mov
cmp
xor
cmp
not
xor
enter
xor
and
stos
fistps
and
xchg
cmp
jnp
sub
ja
cmp
rclb
iret
sub
pusha
push
stos
lds
pop
pop
pop
fiaddl
fcmovnb
fnstcw
loop
js
lahf
aam
orl
divb
int3
xchg
js
jle
test
insl
cmp
jno
shrb
mov
scas
fldcw
xchg
add
jne
xchg
aaa
cld
jle
and
xchg
cmp
mov
notb
adc
mov
out
js
inc
fwait
in
test
shrb
rcrl
pop
mov
movsl
jmp
je
xor
xchg
ljmp
int
popa
mov
aas
ret
aaa
cli
jecxz
out
sbb
cmp
scas
jge
mov
dec
popf
adc
daa
add
dec
rolb
jnp
mov
filds
es
test
mov
loopne
mov
push
pop
xchg
dec
pop
int
js
jo
jo
mov
jle
mov
int3
xor
xchg
or
push
stc
push
je
rep
jne
cmp
int3
mov
scas
xchg
mov
cmpsl
insb
ret
insl
mov
into
sbb
test
movsb
insb
js
jg
sahf
gs
out
xchg
movsb
push
jmp
mov
xchg
and
daa
mov
dec
xor
mov
int3
or
sbb
pop
mov
push
inc
cltd
jecxz
clc
arpl
push
int3
inc
ljmp
sbb
rorl
lea
xchg
lahf
pop
cmc
movsb
inc
frstor
add
or
js
in
les
sub
mov
cmp
and
push
das
push
repnz
mov
or
idivl
jge
or
inc
pushf
and
adc
bound
jl
daa
sahf
dec
cmc
push
pusha
jg
xor
les
repnz
and
pop
shl
add
in
lahf
cltd
mov
sub
or
fidivs
mov
mov
and
out
daa
inc
lods
sbb
inc
loope
push
cmp
cmp
push
sub
xchg
mov
pop
popa
mov
stos
popf
mul
in
ret
push
mov
push
push
es
jp
mov
inc
inc
mov
rcll
jno
cs
sbb
or
pop
adc
dec
mov
push
or
enter
aas
scas
enter
mov
mov
pusha
fwait
add
push
pcmpeqw
mov
jecxz
mov
das
nop
add
lods
mov
jmp
ljmp
cmp
cmpsb
and
push
lods
pop
out
sub
xor
addb
push
and
push
sbb
pop
inc
je
cmp
dec
inc
mov
or
popf
dec
mov
xchg
jecxz
leave
pusha
xchg
pop
sti
adc
lods
xorl
push
aaa
fnstsw
push
xchg
fcmovbe
push
imul
jge
ret
stos
in
jecxz
rclb
fdivs
ret
adc
clc
sub
mov
leave
mov
mov
dec
pop
add
outsl
cmp
adc
lret
xchg
xchg
and
lock
xchg
ljmp
rcrb
and
pop
sbb
or
sarb
aad
pop
push
cmc
cld
pusha
mov
fwait
outsl
popf
xor
andb
test
loopne
jno
lret
je
test
mov
or
mov
push
xchg
fisubrl
rcl
mov
stos
mov
cld
xor
push
stc
push
push
cmpsl
jb
jb
test
std
orb
or
rcrb
mov
pushf
repz
jns
fdivrl
dec
mov
cmp
fs
ljmp
inc
push
ds
int
xor
fnsave
xchg
adc
into
inc
push
mov
and
push
mov
fdivrs
mov
push
cmp
push
daa
fcompl
outsb
aad
mov
daa
scas
lds
stos
leave
pop
push
das
push
xchg
sub
and
repz
cli
or
mov
ret
adc
enter
or
push
add
shr
out
sbb
scas
jp
imul
test
jne
pop
jae
fidivl
imul
test
dec
loope
mov
add
mov
xlat
add
nop
ss
add
loopne
fisubl
adc
sbb
push
fldl
stos
and
sub
shlb
mov
jecxz
lcall
xchg
pop
inc
je
iret
push
fnstenv
inc
xchg
movsl
mov
mov
mov
inc
sbb
jecxz
fdivr
jmp
cmpsb
mov
iret
pop
sbbl
sub
fdivrs
xor
jbe
stc
sub
das
pusha
and
cmp
repz
lcall
sbb
sahf
or
or
inc
jp
jo
sub
leave
and
pop
jg
dec
dec
mov
jo
stos
mov
push
and
mov
or
add
fcoml
shl
aaa
mov
add
xchg
jno
mov
and
jae
xchg
shrb
mov
xchg
mov
test
daa
clc
lret
clc
out
xchg
repnz
jne
mov
out
jnp
imul
int3
rsqrtps
pop
rcl
sbb
fmuls
pop
insl
ljmp
mov
pop
sbb
push
into
mov
leave
aaa
stos
outsb
les
loop
pop
push
repnz
nop
filds
sub
cld
inc
jp
push
xchg
enter
out
movsb
scas
mov
sub
add
sbb
xor
sbb
fildll
inc
cmpsb
pop
jmp
jno
dec
xor
add
insl
push
stc
jne
fcoml
pminub
dec
mov
popa
inc
mov
mov
out
and
ret
jl
add
fwait
je
or
pop
bnd
push
sahf
scas
mov
dec
xchg
in
jb
pusha
mov
pop
mov
loope
push
nop
mov
jno
scas
sub
ret
dec
mov
test
jmp
mov
out
out
push
test
fdivrl
fidivs
and
cmp
orb
xchg
xor
loopne
clc
dec
movb
lea
imul
icebp
into
sbb
add
push
push
cs
and
popf
roll
out
mov
js
cld
test
std
lods
mov
sbb
test
dec
adc
jl
inc
dec
adc
jno
incb
int
pop
cmp
xor
aas
add
jo
in
imulb
jp
pop
scas
popf
pop
pop
dec
sbb
test
pop
jns
outsl
mov
push
aad
xchg
in
les
push
test
dec
adc
mov
stos
fcoms
addr16
out
je
cmpsb
jnp
push
cmp
mov
add
adc
js
sbb
out
mov
sub
mov
mov
mov
push
add
and
push
adc
imul
adc
push
adc
arpl
int3
pop
adc
test
ror
dec
call
push
push
mov
dec
lret
in
jno
sti
inc
pushf
pop
push
pop
mov
push
and
sbb
xchg
add
pushw
adcb
and
xchg
fiaddl
xlat
andb
or
test
imul
daa
test
cmp
es
push
fdivs
pop
pop
out
dec
rcrl
push
fadd
cld
loope
jle
ja
setb
sub
and
iret
xor
gs
cwtl
adc
xchg
scas
cmp
inc
jbe
inc
sbb
in
int
and
ja
ret
cmp
xchg
or
dec
lock
fsubs
sbb
rcrb
mov
aas
scas
fdivrs
mov
pop
inc
insl
and
xlat
mov
cltd
in
sub
test
sub
sub
xchg
mov
ds
js
pop
in
dec
xor
subb
xchg
or
mov
cmc
jp
int
fnstsw
std
popa
pushf
fwait
or
nop
int3
jmp
push
push
repz
ret
es
ja
aad
fnstsw
mov
in
push
rcrb
jae
mov
xchg
lds
adc
xchg
lods
xchg
sbb
fldcw
ljmp
jno
addr16
cmpsl
jnp,pt
pusha
in
arpl
ret
hlt
test
jge
mov
adc
pop
jns
scas
mov
scas
add
cltd
sbb
roll
ljmp
add
xlat
test
mov
push
mov
add
sbb
xor
xchg
cmp
popa
iret
jg
xchg
and
inc
inc
mov
and
mov
test
cmp
push
jge
adc
and
dec
xor
ljmp
jecxz
enter
adc
inc
adc
test
push
pop
cmpsb
adc
dec
addb
pop
in
jl
iret
adc
and
lcall
out
xor
lods
fisubs
pop
das
cmp
in
jne
insl
xchg
xchg
mov
sbb
push
mov
dec
push
fisttpl
adc
mov
iret
loop
mov
cld
sti
mov
out
mov
dec
push
fneni(8087
decl
push
or
fs
test
enter
loope
mov
jmp
pop
cmc
add
jmp
and
dec
inc
mov
into
test
test
mov
movsb
add
push
add
sahf
imulb
push
inc
add
cmpb
mov
movsb
mov
imul
sbb
lods
add
push
jg
push
pop
cmp
popf
mov
or
popf
fldl
inc
pushf
cmp
mov
das
lds
and
dec
inc
call
test
scas
neg
mov
das
lods
hlt
imul
cmpsb
xchg
cmp
leave
int
inc
xlat
ret
lods
dec
ss
sub
popa
icebp
and
push
sub
sahf
popa
icebp
push
movsb
mov
xchg
ret
ret
dec
or
dec
test
jle
cmpsb
add
lret
cmp
int
lods
xor
pop
jecxz
scas
push
outsl
imul
mov
mov
clc
xchg
cmp
pop
cmp
std
mov
cli
cmc
mov
mov
in
jb
cs
xchg
sahf
movsl
orb
push
repnz
jmp
fwait
inc
cltd
lcall
pusha
rorl
es
jmp
push
xorb
mov
test
mov
sub
cmp
rcrl
push
fildl
xor
in
test
mov
jmp
pop
insb
mov
lahf
out
jnp
sub
jmp
lock
test
mov
push
in
sub
out
or
jns
and
into
or
pop
jns
and
iret
adc
sbb
cmp
fcompl
pop
fdivrl
lahf
iret
cmp
insb
ds
sub
outsl
cmpsb
stos
movsl
mov
shrl
pusha
sub
and
cltd
xor
cmp
test
push
sahf
add
pop
xlat
mov
fwait
mov
outsb
inc
pop
lret
pop
lds
cmp
push
sbb
vdivsd
bound
adc
sub
cld
data16
hlt
and
jg
push
es
jmp
xchg
out
sub
and
push
out
bound
xor
or
xor
repnz
into
sub
je
dec
adc
iret
jno
inc
movsb
movsl
or
mov
adc
push
pop
loopne
popa
je
fisttps
sbb
int3
pop
dec
outsb
adc
ja
xchg
jae
fmul
popa
lock
push
pop
xchg
pop
lret
mov
jae
ret
adc
adc
fwait
mov
cltd
out
add
arpl
add
cmpl
bound
dec
lea
clc
hlt
pop
fldenv
inc
shll
jg
or
pusha
adc
mov
test
lock
inc
cli
data16
or
pop
xor
adcb
rcrb
sub
mov
rclb
xchg
shll
imul
cmp
dec
bound
decb
mov
adc
test
test
sub
jmp
sub
fildll
cmpsl
mov
into
fnsave
cs
nop
rcr
ljmp
hlt
in
xchg
in
loopne
pop
jns
cltd
or
insl
jp
rclb
lods
aam
lock
out
jle
xchg
adc
fsts
add
push
jo
repnz
ss
xor
xor
xchg
enter
dec
loope
push
fs
sub
sub
cmp
lret
mov
xchg
jge
xchg
cwtl
sbbl
add
aas
pop
testl
stos
inc
xor
mov
cmp
or
and
push
or
cmp
pop
fildl
inc
addb
jp
pop
cwtl
add
jno
imul
popf
mov
xor
xchg
push
pop
sub
inc
icebp
mov
pop
push
repnz
ljmp
repnz
imul
cmp
into
in
pop
inc
and
or
add
int3
icebp
jbe
mov
add
std
inc
sub
lcall
push
loop
sti
push
push
std
pop
cmpsb
mov
xor
inc
repnz
pop
loop
sub
outsb
addl
cmp
mov
jno
push
rclb
pop
and
stc
xor
pop
pop
lds
sbb
mov
inc
repz
jne
sub
inc
loop
clc
jbe
pop
adc
fcmovbe
mov
pop
mov
fisttpll
sti
jnp
lret
fwait
cmp
movsb
in
cmp
mov
test
dec
mov
add
in
in
xor
jb
outsl
call
lea
fistpl
fistpll
pop
mov
xchg
jb
sub
js
lods
ja
xchg
pop
aas
lahf
push
mov
insl
ret
movsb
in
push
mov
fmull
lret
lds
and
pop
loopne
push
mov
push
loopne
pop
fdivrl
enter
fstpt
in
mov
pusha
mov
adc
cld
jmp
lods
pop
mov
xor
out
lret
std
inc
mov
imul
cmp
add
aam
ds
xor
sbb
outsb
pusha
mov
sub
pop
insb
push
or
in
ja
and
roll
ds
mov
xchg
outsb
inc
out
xor
add
push
add
or
sub
and
pushf
mov
cmpsb
sti
sub
inc
mov
mov
loope
nop
out
xchg
sub
mov
mov
mov
mov
xchg
dec
fsubr
mov
cmpsb
inc
cmpsb
jo
mov
mov
xchg
insb
mov
daa
add
fcompl
xor
mov
ds
std
push
or
cli
jb
cmc
or
ds
mov
add
add
pop
mov
or
scas
xchg
rclb
pop
jae
mov
sub
xchg
lock
push
push
cli
adc
inc
ret
mov
add
mov
cmp
and
out
xor
fstpl
std
lcall
sbb
jno
cs
push
add
pop
dec
lret
xor
ret
sti
icebp
jl
dec
pop
and
mov
mov
pop
or
mov
insl
and
adc
out
sti
rcrl
push
cltd
jne
sub
sbb
inc
mov
rorl
enter
aaa
subb
out
fisubrs
divb
xor
sub
cmp
sub
in
std
fs
loope
mov
sbb
popa
js
popa
outsb
mov
or
pop
adc
jne
inc
ss
cli
ret
insl
xorl
xchg
fs
adc
mov
mov
mov
push
inc
ret
add
scas
loop
rol
add
xlat
or
mov
push
or
mov
or
push
arpl
aaa
addr16
std
in
in
inc
roll
jnp
test
jo
mov
mov
lret
loopne
mov
cmpsb
outsl
mov
and
mov
sub
sbb
std
push
push
roll
divb
lret
sbb
and
lock
shrl
dec
test
fs
adc
test
inc
inc
roll
popf
mulb
sbb
pop
sbb
push
jnp
std
mov
jae
mov
xor
iret
cmp
fsubr
or
pop
xor
aad
cmp
shrl
inc
xor
out
mov
les
jmp
push
in
sahf
adc
lcall
popa
sti
jno
add
fimuls
cmp
shl
jne
sub
jbe
mov
cmc
gs
inc
add
mov
repnz
cs
xlat
rcl
jo
sub
shld
call
imul
lock
pop
xchg
adc
aam
ficompl
jbe
and
xchg
push
add
jge
mov
lret
test
push
pop
pop
notl
cmpsl
jmp
je
arpl
lds
inc
pop
mov
aaa
jl
jge
out
mov
pusha
pop
ljmp
stos
xchg
andb
xor
jns
jnp
insb
fucom
cmp
xor
push
cltd
scas
insl
jb
push
adc
in
inc
divl
xor
sti
xchg
xchg
sbb
mov
stc
xchg
add
call
test
ficompl
adc
and
sbb
jns
repnz
outsl
fdivl
push
popf
pop
push
shrl
outsl
aam
aad
or
and
je
cmpl
jbe
sbb
test
or
xchg
mov
loopne
pop
in
inc
add
ret
mov
loop
adc
mov
sbb
mov
ficomps
ret
pushw
out
cmp
jle
push
les
stos
sub
fwait
nop
add
inc
push
pop
lock
in
fwait
imul
and
movsl
and
int
pop
dec
hlt
aas
cs
pop
aas
push
lds
leave
or
addb
mov
lcall
stc
sbb
mov
push
mov
test
cmp
cld
xchg
lcall
ret
lods
push
mov
jo
sub
je
lock
negl
int
enter
pop
in
jecxz
repnz
pop
sub
cmp
sub
sub
lods
ret
cs
dec
test
das
mov
cmpsb
stos
push
jecxz
fbld
cmpsb
xchg
lret
push
outsl
iret
mov
push
pop
jp
xchg
mov
push
or
outsb
scas
stos
js
fidivrs
aad
pop
cs
movsl
insb
addr16
aaa
xlat
add
mov
pop
mov
jno
jl
ret
mov
sub
mov
xor
xor
fcompl
testl
pop
int
fbld
ret
lret
int
test
cld
or
call
in
test
movsl
sbb
xor
mov
test
loopne
shrb
movsl
and
out
mov
cmpsb
inc
int3
dec
add
testb
addr16
inc
inc
loope
hlt
cmp
xchg
std
mov
sub
fidivs
test
fmuls
lret
stc
imulb
insl
adc
jo
jecxz
dec
shl
sub
divl
pusha
sub
lods
test
aaa
test
loop
add
shll
mull
or
sub
cmpsb
stos
mov
aad
test
out
pushf
cmp
sub
add
ret
add
sub
jmp
pop
push
cmpsb
aam
sbb
lods
push
sbb
cld
mov
mov
pop
in
inc
mov
lea
or
pop
mov
and
cmp
fmul
inc
or
mov
cld
xor
fisttpll
jb
insb
sub
add
push
push
aad
and
push
inc
dec
mov
push
enter
inc
repnz
repnz
mov
xor
jae
lret
jge
mov
shrl
dec
mov
fstl
jae
mov
movsb
dec
scas
test
xchg
push
xor
sar
ljmp
mov
mov
mov
adc
dec
inc
sbb
imul
xor
jle
jle
sub
test
shlb
pop
sub
out
cmpsl
cmp
inc
jmp
adc
mov
lret
and
jmp
aad
out
xor
push
cmp
pop
loopne
fdivs
jo
fidivl
pop
stos
inc
jl
lea
jno
movsl
test
or
jns
repz
xor
adc
pop
jecxz
ret
mov
bound
mov
fnstenv
js
gs
xchg
mov
dec
popa
arpl
xchg
adc
scas
pusha
cmc
mov
repnz
or
jmp
daa
loop
xor
xchg
test
push
cs
dec
mov
sar
data16
out
xchg
fadds
clc
push
jb
insb
adc
insl
dec
ret
adc
repz
je
enter
rcrl
fstpl
jmp
push
sub
bound
mov
mov
pop
ret
mov
loope
pusha
xchg
cmp
push
ret
data16
or
in
sub
xchg
in
pop
push
andl
divb
add
add
out
mov
pop
popf
fsubp
sub
dec
xchg
dec
jp
add
add
and
test
test
in
test
test
push
call
dec
mov
mov
cmpsl
ret
xor
cli
aam
jmp
call
pusha
cmp
mov
mov
fiadds
push
out
xor
bound
cmp
testb
iret
movsb
mov
mov
xor
push
adc
dec
lods
push
lds
push
lcall
dec
xchg
in
xchg
mov
shll
sub
aaa
mov
loopne
mov
les
fisubl
xor
jo
jbe
hlt
ja
hlt
push
pop
fsubrl
repnz
adc
imul
sub
test
lds
cmpl
js
or
sbb
std
push
rcr
xchg
cmp
sbb
jbe
inc
mov
stos
push
push
and
mov
call
imul
out
popa
pop
xor
shl
aad
lea
sbb
pop
aas
add
aam
ja
lea
xchg
pop
dec
outsl
aas
dec
fsubr
push
cmp
cmpsb
pusha
fistpl
and
add
call
inc
cmp
mov
xchg
stc
mov
mov
or
or
sbbb
popa
popf
dec
lahf
repnz
cmpsb
fwait
pusha
jns
ss
jge
popa
mov
xor
test
lahf
mov
cltd
dec
aaa
or
xor
idiv
shlb
stos
popf
dec
leave
inc
ret
xchg
fistpll
lods
sub
push
pop
les
imul
push
mov
and
pop
mov
popa
add
andl
sbb
les
jle
cs
lcall
ret
cmpsl
stc
mov
fs
xchg
cmp
dec
cmp
mov
ret
push
cmp
lea
lock
inc
inc
xor
loop
mov
sub
or
push
add
inc
mov
repz
aas
sub
pusha
push
add
stos
sar
pop
sbb
or
scas
scas
mov
cmpb
cmp
mov
lret
jle
cmp
and
mov
dec
les
lock
jmp
jl
mov
lcall
clc
fisubrl
sbb
or
dec
pop
in
adc
movsb
mull
xor
insl
adcl
faddp
test
pop
jae
addr16
jmp
mov
jbe
dec
mov
mov
sbb
adc
mov
xrelease
aad
xchg
add
mov
lcall
sti
xor
xor
add
shll
jns
xchg
mov
in
add
add
jmp
jo
popa
fs
mov
ss
xor
insl
adc
arpl
mov
push
mov
dec
mov
xchg
dec
fdivs
pop
stc
movsb
das
int3
pop
jge
xchg
mov
xor
mov
mov
paddb
cmp
rorb
popf
jmp
cmpsl
mov
pop
xlat
mov
aad
jecxz
pop
push
jecxz
pop
imul
ror
mov
stc
dec
xchg
mov
pop
xorb
dec
in
fdivs
pop
or
inc
xchg
imul
jle
jge
into
push
rorl
mov
xchg
pop
hlt
push
or
cltd
sub
test
outsb
pop
sbb
pop
mov
loope
jmp
pop
or
push
cmp
sbb
adc
and
pop
insl
std
insl
mov
xchg
or
stos
dec
dec
sbb
or
scas
stc
int3
add
jg
sub
push
mov
mov
xchg
scas
leave
mov
lods
pop
sbb
xor
cwtl
pop
in
mov
dec
in
and
arpl
pop
dec
pop
jmp
mov
aad
xchg
sbb
cmp
repz
adc
mov
sar
mov
fildll
sub
outsl
xchg
lcall
jno
movb
jnp
push
lahf
jp
repz
popa
jb
push
xchg
add
jb
fistps
jle
incb
fsubs
mov
movsb
arpl
mov
sub
xor
mov
push
neg
gs
xchg
xchg
sub
mov
mov
xchg
or
or
jb
jae
cmp
jecxz
inc
push
mov
push
add
dec
jmp
jl
lds
mov
jle
mov
bound
cmovg
dec
and
jne
xor
xchg
push
insb
loopne
xchg
pop
insl
arpl
aam
cmp
loope
fmull
stos
ds
cltd
js
loope
lods
out
lea
icebp
enter
sbb
adc
sbb
ja
mov
js
sub
imul
adc
xor
xor
lds
int3
push
adcb
mov
xchg
fwait
ja
sub
inc
pusha
sbb
lods
and
outsl
mov
inc
jge
stc
insl
xor
pop
ss
out
sbb
stos
mov
fldl
mov
in
jno
invd
and
sub
mov
sbb
addr16
sahf
xchg
adc
jg
fadds
xchg
loope
inc
nop
loopne
cmpsl
aas
and
inc
cmp
sub
int3
push
lret
imul
xchg
and
mov
mov
aas
lock
xor
insb
xor
fwait
inc
push
dec
sbb
icebp
std
or
aas
rcll
cmp
add
inc
cmpsb
push
pop
das
or
sti
test
outsl
or
push
push
inc
ret
mov
or
int3
mov
lods
xor
lahf
cmp
push
pop
pop
cld
aaa
roll
movsb
xchg
and
push
callw
movsb
popa
imul
push
ljmp
sub
jo
mov
cmp
dec
js
adc
es
inc
test
pop
push
and
daa
aad
xchg
sbb
shll
add
aam
test
mov
fwait
xchg
lret
test
sbb
or
dec
mov
insl
insl
pusha
scas
mov
and
hlt
jns
bound
push
dec
jmp
rclb
lds
mov
dec
mov
mov
mull
cmp
xor
daa
out
cmp
add
lret
pop
lods
push
or
adc
xchg
or
jo
cmp
jmp
out
rorl
cmc
insb
jno
jo
enter
mov
pop
iret
insl
fldcw
jbe
stos
push
or
sub
sarb
bound
fstpt
arpl
cli
push
nop
in
add
dec
xor
aad
test
sbb
mov
adc
das
sub
mov
das
call
sbb
adc
js
mov
loope
push
sub
xchg
push
and
inc
pop
jg
movsb
push
fidivrl
jbe
pushf
xchg
mov
add
ficoml
ds
lock
cmc
insl
fidivl
push
and
cmp
jmp
mov
les
cmp
fstpl
or
lcall
inc
cmp
lods
inc
sbb
jae
pop
jmp
mov
leave
push
mov
popa
mov
mov
jge
push
push
out
out
or
scas
ljmp
clc
imul
jl
inc
sbb
insl
mov
mov
jp
xor
and
imul
pop
sub
xchg
pop
insl
mov
into
lods
mov
dec
iret
pop
stos
dec
pop
outsl
mov
outsb
mov
xor
and
fsub
xor
add
shl
mov
iret
mov
pop
push
push
pusha
stc
fsubrs
lea
lcall
adc
jecxz
push
xchg
scas
xor
cld
pop
jno
and
cmc
sti
fisubrl
sub
mov
mov
std
test
push
les
inc
jbe
jbe
or
dec
jg
out
add
stos
ja
cs
sub
fsubrs
adc
push
enter
push
pop
sbb
lods
icebp
xor
xchg
jnp
adc
test
loop
add
js
ja
jbe
add
mov
pop
cmp
sbb
fistps
mov
pop
mov
inc
pop
cmp
pop
outsl
mov
push
pop
not
leave
push
mov
cwtl
push
idivl
xor
rorb
iret
mov
cmc
int
in
and
pop
sub
add
or
in
lcall
mov
orb
jno
jno
xchg
ljmp
push
fs
xchg
in
xor
in
xchg
iret
mov
add
sbbb
pop
mov
out
mov
sbb
sbb
sub
cld
pop
cmp
fst
xchg
adc
xor
and
and
jecxz
stos
jnp
and
fcoms
fildll
mov
sub
and
in
add
int3
test
push
and
lods
mov
jmp
lcall
add
cli
mov
hlt
mov
mov
pop
add
imull
cltd
dec
push
js
cwtl
push
sbb
lods
inc
push
jae
add
lcall
jns
lds
mov
sub
fdivr
in
sub
outsb
mov
and
add
sub
int
lahf
mov
test
jb
add
cmp
aaa
es
mov
pushf
cld
jo
cmp
xor
jnp
stc
lret
add
inc
outsb
fsubl
adc
inc
and
ss
lgs
mov
andb
movsb
push
addr16
ret
and
ja
std
xor
cmc
sahf
mov
out
dec
jno
jp
add
fimull
out
ret
sub
and
cmc
xor
iret
jae
jge
dec
and
in
sbb
pop
xchg
popa
jo
cmp
or
testl
pop
mov
movsb
jne
dec
scas
aas
or
bound
shl
jno
mov
or
jmp
mov
jg
ss
cmp
lret
dec
test
and
mov
xor
push
test
lock
cmp
mov
iret
jg
sub
push
test
test
mulb
std
mov
jbe
call
sub
cmpl
mov
push
and
xchg
mov
lahf
push
scas
ljmp
and
pop
add
gs
mov
fstpt
shrl
out
in
pop
outsl
xor
movsl
xchg
inc
cmpsb
in
adc
push
sti
adc
lods
mov
test
mov
cmpsl
mov
mov
call
nop
xchg
push
aaa
dec
jg
je
arpl
lock
cmp
inc
jno
xchg
inc
movsb
stc
shrl
pop
popa
insl
ftst
sti
or
leave
cli
mov
iret
in
and
sbb
es
mov
ljmp
aam
lock
repz
jne
sub
imul
and
push
cmp
stos
jo
mov
cmp
repz
jo
movsb
cmp
test
mov
in
lock
jae
lock
scas
cmp
pop
add
mov
cmc
adc
rorl
pop
aam
imul
xchg
lret
lods
movb
aaa
mov
fnstenv
jb
fcoms
mov
insl
dec
push
out
ret
fstpl
fsubrp
call
dec
sbb
fmulp
insl
insb
and
sub
js
mov
inc
jnp
adc
mov
push
mov
orl
js
pop
xor
xchg
fstpt
sti
xor
xlat
cmpb
cmc
leave
inc
jno
cmp
mov
iret
imul
sbb
jle
lcall
inc
jnp
mov
dec
jmp
xor
adc
loopne
dec
xor
jge
cmp
mov
cmpsl
fdivp
lods
pushfw
sbb
in
and
bound
jo
push
sbb
inc
add
add
lret
imul
xchg
popa
adcb
mov
mov
imul
mov
xchg
and
or
pop
outsl
or
inc
orl
pop
cwtl
test
jmp
insb
sub
pop
xor
push
lea
add
ds
int3
mov
movsb
jb
lods
sahf
and
pop
scas
pop
lret
test
dec
jge
imul
or
daa
xor
jl
sub
fidivs
sub
ds
inc
lock
mov
sbb
iret
pop
xor
dec
xor
jp
js
loopne
dec
adc
dec
or
adc
into
pop
stos
or
addr16
popa
clc
mov
cmc
js
dec
into
call
orl
mov
mov
xlat
clc
mov
push
pop
mov
mov
frstor
jl
mov
and
fs
and
jne
insb
in
jne
inc
daa
xchg
sub
pusha
into
dec
addb
push
jno
mov
lret
xchg
cmpsb
dec
es
pop
fisubrl
jno
xor
lea
jbe
ss
fs
int3
pop
fdivrs
scas
sbb
sub
push
pop
push
push
loope
inc
jno
sahf
add
loop
adc
push
sub
ja
and
iret
shlb
imul
mov
mov
jp
ss
mov
push
sti
sbb
aam
js
cmp
sbb
lahf
into
xor
and
mov
iret
mov
inc
xor
cmpsl
popf
dec
adc
sub
loop
mov
or
adc
clc
lock
fiadds
mov
dec
jmp
inc
mov
push
scas
push
cmc
idivl
jbe
out
pop
nop
popf
inc
popl
mov
cmpsb
mov
stos
ss
mov
lahf
add
xchg
cmp
pop
ret
fstps
movsb
clc
in
mov
cmpsb
mov
cmp
andl
jge
xchg
push
aam
mov
movsb
movsl
aas
call
cmp
outsl
nop
shlb
repnz
xor
mov
or
push
mov
imul
rorl
adc
inc
out
shlb
xlat
mov
in
xchg
or
dec
adc
fadds
insl
and
jnp
es
loope
sub
popa
pop
xor
jns
pminub
jmp
adc
cld
push
fistpll
mov
cmp
scas
push
rolb
notb
jp
push
aas
xchg
mov
push
addr16
aas
and
in
repnz
lea
add
fisttpll
xor
push
pop
daa
out
sub
hlt
and
fisttps
lret
jl,pt
rorl
jbe
pop
stos
inc
push
push
inc
arpl
lea
fcmovnu
xchg
xchg
insl
and
or
outsb
shlb
gs
add
sub
add
js
sahf
inc
adc
adc
cmp
ja
cwtl
dec
call
scas
inc
pushf
add
fnstenv
inc
test
hlt
fnstsw
fs
xor
push
or
push
sbb
out
xor
sahf
and
imul
adc
xor
jmp
aam
mov
out
movl
mov
sbb
fnstenv
aaa
pop
andb
mov
outsb
push
add
add
mov
jo
adc
mov
mov
popf
in
push
lods
sahf
loop
stos
dec
sahf
push
push
jno
fadds
and
in
dec
mov
sub
faddl
rcrl
mov
adc
rolb
mov
es
popa
pop
mov
add
js
adcl
inc
call
adc
idivl
fstpl
out
into
mov
mov
fcomi
sbb
add
fwait
enter
mov
movsb
dec
push
sub
pop
test
ret
jae
pop
mov
mov
ss
dec
mov
fstl
cltd
pop
sbb
mov
lea
mov
aaa
mov
dec
jbe
ss
imul
hlt
jo
mov
stc
pop
jb
add
lods
iret
push
adc
scas
imul
push
test
ja
sti
stos
sbb
push
inc
bound
xor
std
andb
mov
leave
out
fstpt
ljmp
dec
or
dec
int
dec
xor
sbb
outsb
sub
inc
std
xor
outsl
xchg
movsb
outsl
xchg
shl
cmp
add
or
jl
lahf
pop
jle
pop
popf
push
xchg
push
int3
out
insl
dec
sbbl
sbb
mov
sub
fiaddl
adc
arpl
shlb
inc
mov
lahf
repz
xchg
cli
cld
cmpsb
shrb
mov
add
ss
sti
sub
pop
pop
xor
ret
fdivrp
cld
inc
int
outsl
sarl
xor
ficoml
mov
imulb
xor
or
push
int
das
push
mov
and
ret
xchg
mov
sbb
sbb
inc
mov
imul
sub
xor
dec
add
dec
mov
pop
jb
cmp
adc
mov
jmp
xor
mov
out
mov
subl
jmp
leave
imul
jl
lret
dec
stos
subl
mov
and
das
fstl
inc
andl
jnp
xchg
jb
sub
imulb
bound
orl
fisttpll
push
and
in
loopne
mov
dec
mov
fadd
adc
stos
cmpb
dec
subb
popa
jge
inc
test
push
add
cmc
and
mov
mov
daa
add
shrb
xchg
movsb
push
sahf
mov
insb
add
cmp
sub
mov
stc
or
clc
es
cmp
xchg
inc
outsl
sub
inc
sti
addr16
xor
cmp
lods
aas
pop
jb
ljmp
sub
pushf
jecxz
cmp
sub
sub
jno
push
stos
shlb
jbe
sti
sub
xchg
dec
std
xchg
fucomip
rcl
pop
jl,pn
shl
inc
dec
fbstp
jbe
mov
mov
push
cmp
inc
aaa
jns
cmpsl
test
sbb
mov
enter
adc
cmp
iret
jecxz
inc
hlt
testl
aam
int
dec
dec
aad
and
jnp
adc
pushw
repnz
mov
mov
jge
and
int3
ss
dec
cmp
push
pushf
lods
dec
add
push
imul
adc
sub
fsubrs
xor
push
call
dec
xchg
jo
imul
xor
jo
shlb
mov
pushf
cmpl
sub
xchg
mov
adc
outsb
lahf
jge
clc
repnz
adc
push
es
gs
int
xchg
jno
fsubs
int3
fisubrs
loop
test
push
clc
mov
fidivrs
std
ss
sbb
popf
jbe
inc
and
shrb
insl
cmp
pop
adcl
pop
pop
loopne
shl
aad
lock
sahf
adc
incl
ljmp
jns
rorl
lcall
adc
fldz
dec
push
popa
cmp
ljmp
sbb
lods
ret
in
lods
test
sbb
mov
stc
mov
jb
rorl
push
lahf
cltd
dec
mov
pushf
inc
and
test
popf
add
fbld
jecxz
cltd
adc
fwait
jmp
stos
dec
cmp
push
xchg
push
xchg
andl
inc
xchg
dec
adcl
subb
sub
mov
stos
and
jmp
add
jns
lds
dec
pop
inc
imul
sub
xchg
je
cmpsb
shrl
adc
nop
mov
sub
cmp
jns
push
pop
fcoms
pop
aaa
sti
rclb
push
mov
jb
fs
stc
adc
lea
ret
jo
scas
xlat
test
add
ss
jmp
jecxz
sbb
jns
push
mov
mov
cmp
loope
popa
outsl
fmul
popa
xor
pop
inc
pop
js
js
mov
mov
rcrb
pushf
push
stos
ret
cli
cs
push
call
subl
jl
push
mov
lock
dec
sahf
push
bound
jg
insb
stc
sub
stos
add
push
mov
cmpsl
popa
fxch
int3
int
jg
adcl
pop
xchg
iret
in
aas
jle
leave
sbb
sar
es
push
cmpsl
inc
fdivs
jle
mov
dec
clc
mov
sub
and
xchg
fwait
aad
push
and
fists
imul
push
mov
jmp
jl
cmpsb
in
cwtl
into
and
pushf
ss
pop
movsb
rclb
xchg
fdivs
mov
mov
mov
es
or
mov
xor
bound
mov
or
push
push
dec
aas
ja
jne
sub
pop
sub
js
cwtl
movsl
stos
enter
notb
shlb
into
sbb
dec
mov
pop
in
cmp
inc
popa
sbb
es
sub
add
fs
jg
jecxz
mov
movsl
iret
sbb
mov
je
xor
jae
mov
sub
inc
fdivl
jle
mov
mov
jno
mov
add
stc
and
mov
sti
mov
inc
into
into
mov
aad
imul
je,pn
frstor
inc
adc
pop
popf
fsubs
or
test
cwtl
aam
or
pop
and
sarb
aad
shll
repnz
lea
dec
lret
sbb
les
fcmovu
aam
cmp
push
sarb
jbe
imul
inc
les
jae
mov
push
test
cmp
mov
cmc
stc
mov
fisttps
mov
iret
dec
hlt
jno
dec
cmp
hlt
cmp
push
ja
pop
inc
js
sti
mov
cmp
repz
aas
pop
push
cmpsb
test
bnd
add
sbb
call
sub
jae
inc
imul
lret
bound
jg
popa
aam
adc
loop
sahf
pop
add
mov
push
ljmp
sub
ficomps
fcmove
hlt
adc
sbbb
je
loop
jp
jo
fimull
imul
mov
addr16
xchg
jg
jp
and
jl
push
pusha
out
cltd
aas
in
out
ficoms
pop
push
jmp
sub
xor
jmp
or
gs
adc
idivl
adc
insb
push
push
sbb
daa
stos
and
sbb
and
jns
jge
xchg
pop
out
enter
ficoml
out
js
daa
mov
push
push
fisttpl
ljmp
sbb
dec
addr16
cmp
icebp
jge
inc
pusha
dec
and
mov
or
movsl
movsb
outsb
jge
add
pusha
mov
add
adcl
mov
ss
loope
lcall
and
inc
imul
idivb
scas
icebp
jecxz
ficoml
fsubrs
sub
jno
jae
pusha
mov
mov
push
das
and
dec
ret
int
das
and
and
es
fisubrl
rol
and
xchg
pop
cmp
sbb
ss
cmpsl
enter
das
loopne
mov
js
add
jle
dec
mov
mov
dec
loop
stos
loope
lret
or
push
sbb
loope
push
lods
mov
aam
out
mov
sahf
jbe
popa
cltd
mov
mov
xor
nop
mov
addr16
jne
enter
add
inc
fwait
pop
int3
iret
sahf
push
xor
ds
push
repz
push
addr16
xor
jecxz
xor
lcall
xor
icebp
sbb
divl
mov
ds
push
les
add
or
lret
sarb
test
test
in
test
xchg
sbb
or
ja
push
adc
lcall
sbbb
lods
inc
movsb
push
xor
mov
lcall
lret
mov
andl
clc
out
stos
push
gs
vmovdqu
scas
jae
mov
int
pop
mov
inc
mov
xor
xchg
loop
xchg
rolb
lods
addr16
stos
mov
dec
mov
out
cwtl
dec
push
push
test
leave
sub
jbe
sub
ljmp
das
movsl
mov
test
aam
data16
push
jnp
mov
std
int3
push
jns
xor
mov
or
mov
mov
stc
cmp
int3
lods
mov
test
dec
loopne
bound
sbb
enter
push
xlat
mov
in
sahf
daa
lods
cmp
xchg
xor
std
mov
dec
addl
inc
shl
in
pop
or
adc
cmc
push
xorb
lahf
mov
mov
in
stc
test
xor
aam
adc
lea
or
in
andb
sbbb
push
push
pop
loop
data16
mov
push
mov
in
adc
cmc
scas
or
negl
jno
mov
loope
imul
pop
js
daa
push
pop
sbb
cli
jns
decl
add
push
out
pop
fldcw
sarb
adcb
fs
aam
lods
adc
dec
aam
adc
mov
pop
sub
iret
pop
pop
xlat
ficoms
sub
jg
bound
xchg
inc
push
xlat
stos
jnp
clc
pop
lock
pop
or
adc
jno
and
and
aad
xor
movsb
test
les
mov
sbb
ret
mov
scas
or
jb
ret
out
pop
int
adc
lods
imul
push
adc
mov
jecxz
jns
repnz
cld
arpl
rorl
xor
lock
fbstp
lods
xor
cmc
and
sbb
xchg
sub
xchg
cmp
scas
fiaddl
push
stos
sti
je
std
xchg
push
imul
in
nop
pop
push
arpl
fisubs
jae
aas
push
xchg
lea
dec
sarb
cltd
mov
jg
mov
test
jb
mov
scas
ficomps
fldt
mov
pop
jg
adc
repz
adc
jecxz
dec
popl
sub
push
movsb
shrl
and
mov
jmp
cmp
or
testb
fs
xlat
sub
aam
imul
push
aam
cmc
addl
jb
pop
mov
inc
pop
adc
adc
test
stos
shlb
xlat
movsl
jbe
or
popf
loopne
or
xchg
data16
ret
repz
roll
shr
jbe
dec
xchg
pop
jg
xor
aad
clc
leave
outsb
mov
sarb
scas
stc
xchg
or
out
push
repnz
cmp
push
mov
incb
bound
aas
mov
jo
stos
sahf
inc
out
cmp
or
push
push
stc
pop
cwtl
hlt
cmp
cmp
stos
mov
jecxz
mov
lret
outsl
jne
rolb
lock
aam
push
jmp
jmp
sub
mov
mov
mov
pop
ficoms
in
lret
xchg
push
scas
movsb
xor
das
test
jecxz
lock
sub
cmpsl
mov
xchg
loope
fs
cmp
jp
es
add
push
inc
lcall
mov
std
sub
sbb
and
cmp
pop
cltd
mov
jae
dec
or
imul
sub
into
popf
sub
nop
icebp
or
and
adc
xchg
dec
in
push
sahf
cli
add
and
in
mov
dec
push
imul
and
and
loop
rcll
mov
xor
jecxz
fildl
cmp
xchg
push
jnp
xchg
cmp
or
mov
stc
insb
xchg
pop
pop
jl
stos
repz
std
pusha
lea
push
push
out
cmp
xchg
stos
gs
mov
sbb
xchg
loop
cmp
pop
les
out
sbb
stc
pop
scas
testb
adc
mov
xchg
push
inc
lret
sub
popf
fsubl
mov
xor
mov
or
jge
into
sub
in
xor
std
xchg
fwait
xor
notb
or
outsl
dec
loop
adc
jl
and
mov
mov
clc
inc
scas
mov
cmp
jo
daa
cwtl
sbb
ljmp
add
dec
adc
fs
and
dec
push
xlat
mov
daa
xor
js
jge
push
jns
push
jle
nop
out
xlat
push
test
mull
cmp
iret
hlt
pop
test
xchg
xor
pop
adc
and
mov
adc
adc
dec
pop
loope
jmp
cmp
adc
add
jg
sbb
push
push
sbb
fwait
cmp
mov
loopne
shll
jecxz
sti
pop
xchg
stos
int
movsl
sbb
stc
enter
es
mov
ja
add
test
ja
out
lret
and
nop
imulb
mov
iret
xor
fbld
leave
xlat
mov
jecxz
test
shlb
xor
loope
das
mov
cmpsl
push
jb
insl
push
mov
xchg
sub
test
pop
std
rcl
xor
push
test
cmp
pusha
xor
pcmpgtd
std
mov
or
push
fcmove
sbb
popa
incb
es
adc
pusha
xchg
jne
and
and
inc
flds
xor
cwtl
mov
ds
dec
push
add
dec
mov
cmp
mov
sbb
xor
push
sub
ds
pop
push
mov
add
jp
jmp
push
sbb
cmp
in
xchg
lock
dec
js
pop
xor
aam
sbb
outsl
push
lret
jle
lods
xor
inc
clc
pop
test
outsb
or
cmc
inc
cmp
dec
adc
imul
jae
mov
aam
cmp
dec
xor
pop
outsl
nop
imul
hlt
cmp
dec
outsl
xchg
leave
and
testb
aaa
iret
xchg
add
stos
cmp
pop
push
cmc
loopne
ja
push
mov
gs
lret
mov
sbb
inc
fstpt
jg
iret
dec
jecxz
fs
cmp
loope
and
ret
jnp
sub
mov
pushf
adc
sub
loopne
mov
xchg
inc
pop
push
out
lahf
fidivrs
inc
inc
ret
sub
rorl
mov
cwtl
divb
xor
add
sub
dec
cwtl
inc
loop
test
dec
sbb
push
fscale
leave
daa
push
ss
aas
pop
dec
fucomip
xor
loope
inc
movsb
xchg
cld
mov
in
sbb
or
dec
push
jns
xchg
out
ret
xchg
aaa
lret
cmpsb
push
mov
mov
leave
movsl
xchg
wbinvd
xor
loope
shrl
xchg
and
cmpsl
mov
and
dec
cmc
adc
or
and
mov
inc
nop
cvtps2pi
scas
dec
mov
or
mov
faddl
ljmp
js
cwtl
lds
rcl
sti
fcom
sub
push
cmp
mov
adc
add
movsl
mov
aad
add
int
jbe
in
lods
test
sbb
jns
add
lcall
int
fsubl
pop
outsl
push
imul
fimull
in
cmp
in
jp
fdivs
xor
in
fdivl
stos
xor
cmp
sbb
fwait
negl
rol
or
pop
fstpl
pop
mov
ss
jmp
scas
mov
cmc
pusha
push
xchg
test
sub
iret
es
loope
ds
inc
fcompl
and
adc
std
jne
loope
ficoml
imul
sbb
in
nopl
repnz
fisttpl
push
pop
lret
push
js
rcrb
and
test
jnp
pop
in
dec
notl
arpl
aam
sub
aad
pushf
aam
bound
mov
les
out
in
or
push
loopne
add
sbb
lcall
fimuls
std
inc
jb
or
push
jge
inc
bnd
or
popa
mov
lea
movsl
call
add
test
push
xchg
scas
mov
mov
sub
push
insb
or
pop
insb
arpl
sbb
mov
shll
lea
pop
test
pusha
leave
mov
mov
mov
adc
test
jb
fildll
push
cwtl
xchg
es
cmp
mov
gs
add
mov
mov
sbb
jbe
inc
fcmovb
enter
xor
mov
inc
push
sub
pop
jno
inc
mov
pop
and
and
sub
out
rcrb
or
aam
lret
sbb
jg
popf
or
sub
idivb
std
loope
repnz
xlat
cmp
sar
dec
out
mov
pop
xor
adc
xchg
loop
and
adc
imul
mov
jne
lds
enter
lods
xor
jge
mov
cmc
push
fildll
iret
or
or
les
xchg
cmp
negl
in
orb
mov
mov
mov
pop
int3
xlat
cwtl
sub
xchg
sbb
and
and
mov
mov
pop
int
fmull
push
adc
push
xchg
fdivrl
mov
and
lock
mov
xor
arpl
xor
cs
mov
sbb
push
sbb
popf
dec
sub
sbb
fidivrl
cltd
or
and
and
sahf
std
jmp
xlat
add
jmp
fisttpll
push
jp
stc
repz
inc
add
mov
push
pop
pusha
adc
pop
orl
dec
js
push
xchg
sub
jecxz
sbb
hlt
mov
cld
test
inc
lods
mov
lds
nop
subl
mov
outsl
mov
divl
nop
gs
daa
adc
jae
jmp
jnp
push
sub
popf
dec
jl
lahf
es
or
into
leave
subb
mov
jo
sbbb
vcvtsi2ssl
mov
jno
repz
jmp
and
mov
test
jne
fs
lret
in
int3
loopne
mov
fs
xchg
pop
push
mov
add
int3
mov
cmp
or
data16
inc
test
loopne
int3
push
or
xor
sub
push
test
stc
sub
mov
lds
hlt
pop
imul
fistl
adc
jmp
bound
movsl
repnz
ret
push
enter
push
mov
loop
ret
gs
sub
jb
cmp
mov
aad
mov
imul
sub
jns
shlb
xor
aaa
push
xchg
ss
add
ds
and
mov
jbe
jno
pop
add
jno
sub
leave
mov
mov
sbb
ljmp
scas
pop
push
lock
test
sahf
jmp
cmpsb
or
jno
jle
push
and
test
movsb
jmp
dec
dec
test
mov
push
jmp
fldenv
test
sbb
divb
jmp
adcb
test
mov
or
jecxz
test
sub
sbb
dec
adc
fldcw
mov
hlt
or
jmp
inc
arpl
rol
mov
mov
nop
fsubrp
and
xor
repz
outsl
mov
cltd
or
mov
stc
and
and
pop
mov
hlt
inc
fsts
adc
pop
fistpll
dec
lock
and
xor
inc
ja
mov
and
test
lock
push
push
test
popa
pop
adc
jno
adc
aad
mov
cld
mov
xlat
adc
pushf
mov
adc
jl
js
imul
mov
ja
fisubl
xchg
ss
mov
push
cmp
in
jmp
dec
les
cmpsl
pop
stc
decl
push
mov
xchg
out
jne
mov
cmp
movsb
mov
jmp
xchg
pop
mov
or
cwtl
pushf
or
jne
adc
ljmp
fistpl
in
mov
adc
stc
dec
dec
icebp
xlat
mov
in
add
cmpl
shrd
cmc
sarl
xchg
imul
mov
pusha
jb
jbe
test
cvtps2pd
aas
pop
lret
jae
popa
cmp
cmp
sarl
test
sub
addr16
in
es
cld
adc
mov
movsb
stos
rcrl
xor
cmp
cmp
or
add
imul
cmp
bt
fwait
inc
mov
jns
push
jns
stos
adc
xor
lods
pop
sbb
test
out
pop
mov
and
orl
int
jno
lret
adc
out
or
adc
and
aam
ja
jp
and
mov
mov
xchg
mov
mov
pop
cmpsl
adc
cs
cmpsb
pushf
lds
iret
lcall
add
mov
sub
sti
xlat
gs
jmp
bound
das
mov
sub
xor
push
xchg
inc
cltd
movsb
xchg
gs
sub
adc
pop
inc
out
and
shlb
cmp
mov
int3
out
sbb
cmp
dec
testb
mov
popf
outsb
mov
aad
aaa
jno
int
cmc
xlat
and
jno
push
or
mov
add
mov
lds
inc
jo
xchg
push
ret
jo
xchg
loopne
pop
and
dec
jno
lahf
icebp
imul
in
mov
and
leave
inc
test
dec
pop
adc
sbb
cmp
mov
cli
inc
cld
insl
or
jb
mov
es
jecxz
dec
pop
gs
add
ljmp
shll
outsb
int
cmpsb
dec
subl
xor
loope
xchg
lahf
xchg
rcrb
gs
jg
push
pop
push
add
mov
ja
loope
jle
cs
nop
enter
inc
mov
pop
insl
sbb
pop
adc
lret
fs
xchg
nop
pop
test
jnp
mov
xchg
sbb
imul
pushf
cmc
fs
orl
sbb
jle
inc
pop
cld
pop
xor
or
add
ret
fnstcw
lods
aad
pop
jns
xchg
fbstp
call
outsb
out
jmp
jae
add
xchg
aad
pop
cli
xor
push
aaa
sti
rep
aam
pop
push
jge
rcl
push
out
int3
jnp
sub
inc
pop
dec
and
adc
add
or
jae
das
aam
popf
mov
pop
sub
push
and
lcall
adc
jbe
lock
adc
out
pop
loope
xchg
push
fbstp
imulb
or
mov
dec
dec
mov
push
sbb
stos
mov
sbb
adc
or
ljmp
nop
jae
roll
sub
daa
cwtl
lsl
js
inc
push
pusha
push
push
mov
adc
xor
lea
inc
fimuls
stos
cmp
pop
mov
imulb
out
xor
mov
movsb
and
test
jb
outsl
mov
out
out
dec
insl
out
enter
push
pop
clc
pusha
pushf
lods
and
ljmp
jecxz
call
or
ljmp
mov
sub
pushf
in
or
inc
and
je
nopl
xlat
and
aas
stos
mov
mov
hlt
aam
pusha
out
or
pop
or
jns
cmpsl
lcall
jb
adc
sub
mov
lods
ror
mov
lods
std
adc
mov
jo
fldcw
mov
lds
mov
mov
stc
data16
lret
mov
stos
scas
pop
std
movsl
fiadds
rcrb
icebp
adc
leave
mov
add
push
orl
cltd
xchg
test
icebp
lds
xor
divb
je
std
xchg
jge
fistpll
ret
andb
fsts
nop
stos
mov
jns
add
leave
sahf
jmp
cmp
mov
pusha
mov
adc
mov
cmp
add
mov
insl
or
fsubrp
sub
adc
cmp
push
adc
incl
jne
sti
aam
mov
cmp
jb
repz
loop
dec
push
dec
ret
cmp
cmpsl
aam
mov
test
mov
insl
and
sub
dec
out
sbb
xor
jo
out
sub
pusha
popf
cmp
adc
push
in
pop
gs
mov
inc
jg
std
out
loop
icebp
mov
push
and
push
repnz
sub
or
fimuls
hlt
rorl
mov
lahf
xchg
xchg
jmp
loope
paddsb
jmp
imul
das
mov
jne
fisubl
call
jae
lds
push
mov
push
push
les
leave
mov
frstor
test
aaa
subl
inc
repnz
dec
sbb
push
push
and
cwtl
xor
outsl
aaa
bt
mov
gs
or
push
rolb
push
mov
outsb
inc
sbb
addb
mov
das
shrl
pop
adc
xchg
inc
repnz
loopne
js
int
sub
ljmp
inc
mov
mov
std
or
cltd
shlb
shll
fisttpl
push
fldcw
outsl
jnp
outsb
fsubrl
imul
mov
sbb
jnp
filds
hlt
xor
push
jbe
and
sub
adc
movsb
jmp
or
test
in
cmpsb
mov
pusha
fcomps
jbe
pop
mov
cwtl
inc
or
fs
jns
bnd
mov
add
dec
add
xlat
scas
loop
std
dec
push
loope
aaa
fcomps
dec
xor
mov
mov
mov
cmp
outsb
xchg
popf
push
fildll
sub
inc
mov
outsb
sahf
cmp
jbe
loopne
mov
lds
pop
test
jb
enter
or
in
xchg
sbb
leave
cmpsl
dec
aad
mov
mov
add
mov
mov
popf
push
stos
mov
lock
cmpsb
push
ret
dec
add
mov
dec
in
jne
daa
mov
mov
call
xor
dec
jmp
add
jne
and
add
pop
flds
cmpsl
mov
jnp
xor
ds
add
rcrl
andb
xor
mov
les
int
shl
fldlg2
repnz
inc
sti
inc
pop
ja
mov
sbb
pop
addr16
sub
insl
mov
bound
shrl
pop
dec
je
or
outsb
cli
inc
push
mov
xor
mov
inc
fidivrl
mov
or
imul
mov
and
push
lods
hlt
add
popa
xchg
inc
dec
ds
pushf
mov
sbb
popa
outsl
outsl
testb
mov
sahf
push
rcrl
int
mov
lods
xchg
sub
jcxz
jle
testl
aaa
stc
mov
scas
fwait
jne
jmp
cmp
adc
mov
lock
das
cmc
lahf
lret
insl
jl
jle
je
dec
cwtl
push
lock
mov
lret
jb
aaa
inc
popa
sub
sahf
ljmp
pusha
sti
mov
dec
scas
xchg
or
imul
cmpsb
jo
cmp
loop
notl
in
in
enter
mov
cltd
ret
add
dec
das
xlat
cmp
jge
add
vmread
adc
icebp
leave
dec
jnp
je
add
cld
jo
fs
imul
jbe
flds
mov
or
sub
jge
sbb
in
mov
mov
loope
je
loop
stos
and
sbb
in
dec
rcrb
sbb
jbe
dec
or
cli
pop
jns
into
loope
mov
sbb
imul
mov
call
pop
push
xchg
mov
inc
ror
xchg
sub
xchg
fs
dec
adc
sbbl
pop
xor
mov
cmp
popa
mov
mov
lods
shll
mov
rcll
pop
xor
lods
call
outsb
adc
adc
mov
pop
pop
dec
mov
pop
adc
mov
rcll
bswap
mov
sub
scas
notb
inc
int
insb
mov
mov
loopne
hlt
insb
jb
lcall
inc
xor
movsb
jb
jns
cmp
stos
mov
popf
insl
gs
fcoml
repz
add
stos
imul
int3
sbbl
in
pop
fisttpll
loop
shrl
cs
jae
shll
stos
mov
or
imul
or
int3
iret
xorl
hlt
adcl
xor
dec
and
fsubl
lea
xor
insb
push
cmpsl
mov
int3
inc
pop
ljmp
lret
push
mov
nop
mov
stos
adc
mov
mov
les
popa
cmp
dec
mov
mov
fidivs
jbe
inc
lods
dec
jo
aam
sub
scas
push
cmp
jge
xor
nop
inc
adc
shlb
xor
mov
xchg
aad
mov
aad
popa
pop
test
mov
inc
push
dec
pavgb
cmpsb
dec
mov
mov
mov
movsl
std
push
out
or
jae
lods
jo
pushl
sbb
mov
xchg
es
and
adcb
adc
clc
mov
call
and
and
pushf
std
push
cltd
jl
sbb
scas
ror
aaa
jg
lret
lods
fiaddl
fldln2
pusha
arpl
stc
lock
outsl
adc
mov
push
jecxz
inc
hlt
push
clc
popa
adc
jae
das
cmpsl
jmp
mov
mov
ret
jg
in
or
pusha
xchg
cmpsl
mov
mov
jo
imul
int3
lret
pop
test
fnstenv
subb
fcompl
pusha
push
lea
stos
dec
push
fiadds
cwtl
sbb
out
clc
jo
xor
pop
and
inc
or
mov
ljmp
cld
lods
pop
cmc
pop
or
mov
lods
jmp
pop
pushf
cmpsb
cmp
popf
push
mov
or
hlt
mov
mov
mov
into
fwait
add
rorb
push
mov
daa
aas
push
sub
fs
add
in
ja
lahf
stos
pop
xchg
push
jg
fmuls
fmull
push
cmpsb
cmc
into
mov
test
add
out
jg
pop
repz
sub
or
in
hlt
dec
cltd
inc
sbb
test
fimuls
and
adc
test
ja
xchg
push
nop
sti
je
inc
lahf
sahf
cmp
mov
lods
mov
in
jl
sbb
gs
lods
push
sub
mov
fcmovb
xchg
dec
loop
loop
jl
ljmp
cwtl
xchg
xchg
mov
sbb
les
repnz
ss
xchg
shll
cmc
push
jle
loop
in
mov
mov
mov
out
xlat
in
leave
sub
push
movsb
je
aas
mov
jl
cmp
xor
push
push
icebp
xchg
jnp
push
aas
lret
stos
mov
mov
add
xchg
sbb
pop
fidivs
sysenter
sbb
sbb
xchg
fwait
sahf
push
pop
lock
out
xor
cmp
pop
mov
int
push
out
xchg
orb
inc
fsubl
sub
adc
js
lods
fs
into
aam
add
insl
ds
into
das
shlb
and
jo
lock
xchg
cld
lcall
in
jb
rorb
in
add
dec
sub
push
mov
inc
sub
sub
insl
mov
dec
js
repnz
arpl
xchg
loop
xor
push
xor
sub
add
dec
cmpb
mov
outsl
jge
sbb
popa
pop
jae
ja
mov
mov
rcr
push
test
cmp
mov
xor
cmpsl
cld
shll
pop
lret
xor
lcall
in
out
addl
jl
inc
push
xor
push
jg
xor
and
mov
flds
mov
and
pop
imulb
push
cmpsl
mov
mov
add
clc
ds
pop
ljmp
es
arpl
jle
push
cmpsl
add
and
cwtl
into
pushf
out
cmp
add
leave
ja
pop
pop
outsb
pop
popa
pop
jge
xor
jge
and
xchg
icebp
cmpsl
xlat
insb
xchg
adc
jnp
lds
sbb
xchg
or
mov
pop
int
cmp
adc
sub
fsubs
rol
add
sub
aaa
scas
xlat
ret
mov
xlat
insl
cwtl
mov
out
movsb
andb
cwtl
popl
test
rcr
clc
inc
mov
lods
loopne
xor
jp
add
lds
sub
js
aad
jl
lods
inc
or
cld
enter
outsl
test
xchg
push
lahf
test
aas
jbe
int
das
push
cmp
and
jae
or
ljmp
jnp
addr16
add
dec
lcall
daa
bound
mov
lock
pop
movsb
mov
pop
cld
dec
call
and
test
push
sub
int
inc
faddl
push
cltd
enter
add
leave
sti
cmp
in
mov
orb
loope
cmc
dec
pop
call
in
cli
jmp
mov
and
xlat
mov
push
repz
mov
inc
push
stos
dec
xor
dec
mov
insl
jmp
testl
cs
pop
aad
and
inc
outsb
insl
sbb
mov
mov
push
push
das
div
lods
hlt
pop
cmp
cld
mov
bnd
cli
test
mov
jno
cmpsb
sub
mov
mov
insb
mov
stos
cmp
inc
push
jne
pushf
sti
cli
imul
or
js
inc
and
cwtl
xchg
stos
nop
aad
and
bnd
scas
out
iret
rcrb
fsub
sbb
js,pt
std
xchg
rcll
out
inc
fwait
jle
push
gs
sbb
outsl
pop
push
xor
ds
lret
cmp
xchg
mov
ret
push
push
push
sub
mov
int
mov
aas
repz
mov
popf
push
push
pusha
icebp
mov
aad
dec
icebp
dec
mov
mov
cmp
inc
ret
dec
jbe
inc
push
xor
add
shl
popa
dec
shrb
mov
pushf
cmp
or
cli
push
insl
xor
jmp
dec
fistps
stos
inc
xchg
push
rolb
push
dec
stc
sbb
hlt
add
jbe
push
in
mov
test
scas
subb
mov
lahf
in
and
lea
scas
add
ds
ljmp
call
clc
xorl
sahf
jl
das
mov
mov
cs
mov
outsb
sbb
sahf
xlat
movsl
leave
addb
and
into
xchg
mov
test
orl
fdivrl
sbb
cmpsb
jl
aad
loop
inc
lret
imul
mov
hlt
movsb
scas
sarb
mov
jl
pop
rcrl
aaa
ds
jg
mov
xchg
pusha
mov
ret
ret
push
cmc
sahf
in
lods
sbb
mov
sbb
lds
mov
cmp
aas
fcoms
rcrb
xchg
sbb
lea
cli
push
xchg
adc
cld
sti
and
add
cmp
pop
repz
inc
lcall
pushf
push
jnp
pop
insl
pop
cmp
or
dec
sub
xchg
sbb
mov
out
out
mov
cmp
sub
inc
jp
jmp
int3
daa
cmp
lods
lahf
or
inc
insb
mov
cmpsb
insl
out
and
mov
mov
cmp
xchg
pop
add
popf
mov
mov
sbb
rcrb
fwait
mov
out
adc
test
shrb
fmuls
dec
inc
loop
push
daa
push
adc
jp
std
out
insb
mov
xchg
jge
pop
fiadds
mov
xchg
fbld
loopne
orb
push
js
ret
jbe
add
in
cmpsb
or
adc
adc
xchg
push
rcrl
inc
popa
nop
testb
jmp
jmp
mov
call
pop
dec
fdivl
push
mov
mov
push
ss
sub
movsl
or
sbb
jge
dec
icebp
js
lds
mov
xor
adc
mov
cmpl
lret
inc
or
mov
adc
jmp
dec
add
jbe
adc
sbb
mov
cltd
bound
and
mov
adc
fwait
jle
dec
dec
out
xchg
inc
pop
inc
dec
push
mov
lahf
cmp
mov
jmp
inc
jmp
aam
sub
or
push
mov
mov
js
inc
out
rol
hlt
lret
aaa
ret
nop
es
dec
inc
mov
inc
adc
and
xchg
mov
dec
notb
fmul
pop
and
push
outsl
mov
fisubrs
out
cmc
out
jmp
iret
mov
outsb
or
mov
push
xorl
movsl
pop
daa
addl
jo
jbe
push
and
pop
or
iret
dec
push
mov
sub
cmp
sti
cltd
pop
push
pop
adc
out
sti
pushf
cmp
daa
dec
lahf
xchg
sub
stos
xchg
lods
ret
xor
jmp
jne
rorb
sbb
jne
lret
int
lret
cld
inc
aas
sub
inc
pop
dec
push
ss
cmp
inc
pop
mov
or
jmp
sub
mov
sub
and
add
wrmsr
out
jnp
inc
mov
mov
xchg
pop
and
cmp
sbb
dec
sbb
leave
dec
or
cwtl
test
and
lods
push
cmp
aas
push
sbb
and
in
mov
mov
mov
sub
and
repnz
sub
sbbl
push
add
js
scas
ret
data16
scas
or
int3
and
dec
in
sbb
cmp
pop
loope
rolb
sbb
xor
jg
pop
sub
mov
enter
shll
lcall
aas
push
add
or
and
mov
add
addl
adc
out
ret
sub
sarl
notb
int
xor
or
sub
xor
adc
outsb
add
arpl
aam
adc
movsb
imul
dec
add
inc
sbb
stos
mov
cmp
mov
sub
lcall
insl
adc
add
adc
mov
sub
inc
sub
xchg
fldt
push
cmp
call
pop
insb
ss
iret
lret
xor
pop
sbb
dec
subl
std
and
loope
or
sar
test
push
add
xchg
int3
inc
repz
sbb
pop
clc
shlb
dec
stos
mov
add
jl
aad
imul
icebp
in
aam
xor
aaa
pop
inc
in
jno
adc
repz
fsubp
dec
out
mov
cld
int
cwtl
gs
adc
loopne
lahf
call
aas
xlat
xor
aas
mov
ret
adc
dec
roll
push
mov
mov
dec
outsb
pop
jl
and
jecxz
lods
cmp
aad
loope
mov
pop
out
rcrb
pop
pop
mov
dec
dec
sbb
pusha
imul
or
lahf
inc
mov
fbld
lret
rcll
test
mov
into
cmp
into
pop
and
jp
cmpsb
cmpsl
shlb
insb
mov
lock
stos
dec
or
and
aam
mov
cmp
ds
sbb
jge
cltd
insl
popa
adc
pop
xor
jo
hlt
loop
sub
nop
sub
mov
rcrb
mov
hlt
outsb
fldl
sbb
icebp
and
cmp
roll
subl
std
mov
jno
in
xlat
fdivp
test
jge
test
add
fwait
scas
daa
nop
scas
outsl
dec
xchg
mov
fcompl
mov
ret
jp
push
pushf
jo
sbb
mov
jb
and
jnp
jbe
daa
dec
push
mov
loope
mov
xchg
test
jae
pusha
leave
sbb
addr16
mov
js
mov
push
mov
pop
fisubl
movsl
xor
es
pop
sbbb
cmp
or
int3
nop
sub
add
lahf
mov
mov
mov
pop
mov
das
in
mov
jb
stos
idiv
mov
std
or
push
and
or
mov
adc
gs
adcb
sbb
xchg
ja
mov
imul
pusha
scas
stos
cltd
xchg
push
mov
sahf
xchg
jecxz
sbb
or
or
int
pusha
idiv
roll
adc
dec
outsl
cmp
int3
cmp
jl
stos
cwtl
pop
lret
mov
push
loop
roll
pop
push
jecxz
je
out
out
int
and
imul
lods
aaa
xchg
mov
imul
pop
cmpsl
pop
pop
les
sarb
mov
sub
ret
xchg
mov
sarb
fdivrs
inc
cltd
mov
movsb
add
sub
mov
pusha
jg
sti
add
mov
xchg
mov
shrl
add
orb
lds
js
push
inc
sbb
aam
push
jmp
inc
and
add
jge
push
sbb
iret
bound
mov
ret
xchg
stos
hlt
cmpsl
in
mov
pop
jnp
jge
es
fcompl
adc
pop
mov
adc
out
aaa
ret
jae
mov
faddl
sub
insb
inc
ljmp
fs
mov
inc
adcb
push
jns
test
inc
nop
mov
dec
in
repz
cmpsb
hlt
aaa
pop
out
roll
push
mov
xchg
arpl
gs
mov
mov
movsb
pop
loope
lea
movsl
mov
lock
cmpsb
scas
shrl
jle
movsl
add
push
in
sbb
icebp
sahf
in
lahf
cmp
inc
outsl
add
adc
mov
sbb
decl
in
mov
jo
sbb
repnz
mov
jnp
cltd
in
movsl
or
mov
call
shll
in
imul
push
sahf
sbb
xchg
sbb
rcl
sub
sbb
dec
mov
test
mov
ss
icebp
scas
ficompl
sub
jecxz
mov
clc
push
les
shll
sub
and
data16
fcmovnbe
stc
sub
fists
mov
pop
ficoms
rolb
lret
mov
mov
test
ss
ljmp
or
jg
stos
inc
sbb
jmp
pop
pop
test
daa
mov
les
mov
popf
fisttpl
mov
push
ja
mov
outsl
and
mov
imul
push
and
sti
shlb
jnp
or
adc
setge
jge
mov
pop
sti
push
loope
repz
pop
jns
loop
pop
push
inc
jbe
pushf
cmp
jne
scas
jl
pop
ds
imulb
aam
int
sahf
sbb
mov
inc
aam
dec
jmp
jecxz
cmc
loope
sahf
inc
out
std
fdivr
mov
movsl
xor
enter
mov
lods
mov
stc
pushf
ret
adc
out
data16
push
mov
sbb
stos
pushf
push
xor
mov
lea
jnp
jecxz
leave
pop
and
adc
mov
stc
push
sub
lock
xor
shlb
jnp
and
ret
data16
rorb
dec
jle
push
sub
ret
jns
pop
jo
push
test
sbb
das
dec
loop
shlb
or
inc
ret
flds
jl
sbbb
jl
push
cld
rcrb
mov
mov
pop
dec
adc
mov
scas
sbb
or
push
cmp
bound
jmp
popf
inc
mov
sub
inc
ficomps
test
or
inc
pmullw
mov
dec
mov
jo
or
inc
mov
mov
ret
push
jb
fimuls
xor
rcrl
jae
jns
pushf
sbb
push
aas
jnp
imul
adc
mov
push
cld
sub
sbb
iret
cs
mov
rolb
ja
das
xchg
int3
jo
mov
cmc
xchg
loope
jg
add
insl
das
dec
filds
call
xlat
popf
mov
sub
xor
mov
sbb
int3
sub
jmp
sbb
xor
pop
cmp
push
cld
dec
xchg
pop
inc
push
xor
xchg
push
jo
xor
sub
mov
jae
fistl
aam
andb
xor
loopne
cmp
sub
sub
sub
and
and
jl
mov
jg
or
xchg
test
cmpsb
lahf
xorl
pop
pop
jmp
dec
repnz
mov
loop
lds
fdivrs
adc
outsb
lods
movsl
pop
xor
sbb
in
shrb
push
data16
popl
sub
test
ja
pusha
mov
jp
jnp
aas
dec
lcall
cmp
cmp
pusha
cli
aas
or
gs
jle
cmp
sub
gs
lods
andb
sbb
or
imul
xor
pop
lock
xor
and
mov
xchg
fs
popf
mov
and
mov
movsb
ja
mov
and
jns
cmpsl
cmc
mov
jne
test
lods
sahf
sbb
jae
xchg
inc
in
lods
add
xor
lock
mov
pop
in
outsl
add
mov
sti
sahf
jg
les
cmp
test
xor
call
xchg
and
or
xchg
pop
lcall
out
pop
in
jl
push
lea
int
fst
ficoml
sbb
jecxz
mov
nop
jb
mov
into
cmp
mov
and
orl
jbe
xlat
arpl
pop
sbb
mov
outsb
sub
incl
dec
mov
pop
inc
xor
pop
inc
stos
sub
js
inc
ljmp
adc
push
lret
push
mov
xchg
cli
in
lods
and
cltd
cli
dec
mov
sub
sbb
and
fiaddl
jae
arpl
fucomp
popf
pop
push
xchg
repz
jbe
lcallw
testl
xchg
jg
xorb
xor
lods
or
or
test
jle
ja
sbb
jns
or
loopne
mov
es
push
dec
test
mov
repz
lock
mov
in
pop
icebp
xchg
ret
sub
add
scas
or
inc
sti
or
sbb
cmp
out
add
dec
loopne
sbb
jge
push
lret
push
call
fwait
inc
xchg
mov
psubq
cmp
xchg
test
icebp
or
sub
sbb
xor
cmc
push
rcll
and
repz
sbb
into
xchg
mov
por
movsl
scas
xor
or
out
jge
mov
jge
pop
aad
cltd
jge
pop
iret
xor
test
xlat
add
fcmovu
lahf
lods
into
xchg
sbb
add
xchg
or
pop
dec
repz
cmpsl
in
lods
aaa
mov
sbbb
and
adc
mov
dec
add
daa
imul
sbb
push
bound
push
rorb
rclb
inc
mov
lea
mov
inc
jle
cmp
inc
jns
les
icebp
cmp
push
cmp
and
loope
or
mov
dec
pop
push
and
mov
imul
repz
std
in
and
dec
out
test
rcrl
out
xchg
addr16
jne
outsb
mov
xor
jl
cmpsl
push
push
pop
hlt
lcall
outsb
iret
bound
inc
xor
dec
xor
enter
stc
bound
sbb
pushf
mov
xor
adc
and
ret
pop
dec
add
sub
add
loopne
adc
push
imul
sarl
lock
es
shl
and
testb
in
aas
fistpl
xchg
or
push
mov
sbb
lea
push
jbe
inc
xor
insl
jno
mov
call
xor
aas
xchg
cli
ljmp
movsl
out
cmp
addl
xor
in
pop
dec
push
dec
add
pop
dec
mov
cmp
pinsrw
es
jg
lahf
cmp
negl
cwtl
add
test
push
jae
test
sbb
xchg
jle
aas
and
or
pop
jmp
repz
mov
inc
inc
sbb
in
movsl
mov
mov
mov
jae
lock
shlb
lock
and
testl
cmp
or
ret
test
outsl
or
cmpsb
and
subb
ret
test
shlb
jle
add
xor
mov
int3
in
sub
adc
insb
add
mov
push
sub
adc
or
into
or
and
in
subl
out
inc
xchg
in
cmp
imul
jae
aam
mov
addb
pop
lret
add
cmp
inc
mov
ss
loop
adc
sub
cwtl
jbe
fstpl
and
jbe
pop
cmp
js
fwait
in
outsb
inc
mov
add
inc
arpl
lcall
pop
sbb
shll
movsl
mov
bound
push
loopne
mov
mov
push
ficomps
fwait
test
bound
nop
cmc
jns
lret
mov
or
xor
or
ss
clc
jl
pop
sbb
mul
cs
fdivl
ljmp
and
cwtl
mov
jno
pop
stos
xchg
shl
decb
jbe
or
mov
iret
add
roll
sbb
inc
xor
cld
push
sarl
subl
xchg
cmpl
add
pop
test
cld
mov
shr
jge
hlt
adc
jmp
jecxz
jp
mov
jnp
push
and
push
jle
inc
lahf
andl
pop
dec
pop
std
dec
xchg
sbb
fninit
aas
push
iret
mov
imul
cmp
sbb
cmp
repz
sarl
ds
pusha
test
inc
jp
repnz
hlt
adc
or
imul
insb
xor
icebp
addl
sbb
scas
cmp
cld
mov
push
out
repz
repz
mov
xchg
or
popf
into
xchg
inc
xor
aas
aam
out
xlat
dec
mov
scas
arpl
xor
push
xor
xor
or
sbb
push
hlt
dec
and
sbb
xchg
sub
mov
ret
stos
shll
inc
fwait
inc
ljmp
jmp
lret
add
adc
leave
in
out
push
js
sub
les
mov
cmp
mov
lods
arpl
outsb
push
dec
sbbl
mov
cld
sub
xlat
adc
imul
adc
adc
ss
arpl
inc
iret
mov
add
push
pushf
pop
dec
popa
push
imul
or
push
sub
sbbl
sbb
fbld
add
mov
and
jge
xor
stos
popf
outsl
pop
add
dec
jbe
fisttpl
sti
cltd
outsb
pushf
jmp
jb
jmp
and
shr
cmc
cmp
or
cmp
inc
pop
rcr
xor
pop
jbe
aas
xor
inc
mov
pop
lock
mov
les
daa
ss
mov
push
push
in
mov
data16
mov
or
scas
sub
cmp
or
cmp
pushf
repz
jb
cmp
add
inc
or
fcmovne
in
cwtl
addr16
adc
lods
push
dec
pop
cwtl
test
insb
repz
lcall
sbb
xchg
xchg
add
fidivrs
sub
mov
push
or
jge
ja
push
and
ljmp
adc
imul
xor
lahf
mov
fwait
jbe
popf
daa
ret
popa
pop
mov
sub
and
sub
sti
or
mov
xor
iret
cwtl
cmc
imul
clc
cmpsl
mov
sub
adc
cli
add
aad
cmc
dec
test
into
test
repz
aaa
pop
and
jne
ret
out
imul
add
push
mov
in
sub
xchg
adc
les
push
lcall
pop
scas
xchg
push
div
popl
enter
dec
cmpl
out
jmp
es
jbe
loopne
in
out
lret
pop
push
mov
xor
jmp
imul
push
repz
sahf
dec
and
repnz
inc
push
push
les
ljmp
push
jno
xchg
sub
pop
mov
or
xchg
cld
cmp
xor
mov
leave
aaa
xchg
loopne
inc
sub
add
mov
imul
jne
pushf
xchg
mov
jecxz
mov
roll
jp
add
fld
lahf
cmpb
outsb
inc
pmaxub
xchg
mov
call
pop
mov
pop
sbb
cmpsl
test
stc
mov
enter
mov
mov
and
xchg
jge
and
pop
and
inc
sub
xchg
repnz
or
sbb
cmc
jmp
mov
add
insb
or
mov
jne
loop
mov
movsb
jl
push
mov
loope
leave
int
mov
loope
stos
mov
fsts
or
je
sahf
push
icebp
scas
das
fidivs
and
rcrb
imul
xor
mov
scas
rcl
dec
daa
shll
lcall
inc
scas
adc
out
cmpsb
sub
int
test
in
mov
je
jge
in
fs
pushf
sub
push
lock
cmpsb
ljmp
cld
icebp
loopne
out
push
sahf
testl
repz
cli
push
add
jno
inc
sbbb
sbb
adc
fsts
add
pop
or
add
lret
jb
ljmp
push
mov
rcll
sub
xchg
ss
pushf
icebp
sarl
add
push
inc
pop
sbb
daa
sub
push
jg
pop
ss
ret
jae
cmpsb
inc
dec
jne
mov
paddsw
xor
adc
fsts
aaa
daa
dec
mov
mov
xor
fildll
add
pop
loopne
pop
flds
cmc
xor
add
dec
cli
sub
jge
vmovhps
jmp
xchg
xchg
dec
stos
nop
mov
and
test
imul
sbb
scas
add
lcall
sbb
out
insb
out
or
sti
bound
or
adc
into
dec
jg
xor
jno
das
xor
pop
xchg
pusha
push
cmp
or
or
inc
cmp
push
xchg
testb
cmc
ret
fwait
adc
pop
cmp
xchg
add
mov
inc
inc
and
lds
mov
or
jns
or
jle
pusha
push
out
ret
mov
jcxz
inc
sub
xchg
lods
jbe
mov
fisubrs
pushf
add
call
rorb
dec
dec
mov
adc
imul
cltd
sbb
lret
pop
and
cmp
mov
xchg
aas
scas
and
pop
push
push
or
pop
stos
xchg
sbb
and
ss
loopne
mov
jl
fnstenv
sub
mov
xchg
lods
add
pop
mov
loope
sbb
cwtl
add
sub
and
or
inc
push
lock
or
add
mov
addr16
stc
leave
popf
mov
mov
xchg
cli
cld
outsb
xor
mov
mov
es
mov
push
jnp
enter
adc
neg
scas
cmpsl
popa
stc
xor
bound
cmp
or
inc
inc
sbb
jo
ret
jb
ret
add
cmpsb
add
xlat
push
jp
movsl
cmp
cwtl
mov
lock
popf
xchg
or
inc
add
out
adc
aam
mov
popa
daa
icebp
sub
xchg
push
imul
adc
adc
fists
test
das
mov
jns
fmulp
pushf
mov
adc
adc
lahf
mov
jo
or
jbe
jecxz
jbe
mov
call
pop
addr16
inc
add
xchg
xchg
add
jg
xor
adc
dec
outsl
add
push
scas
mov
push
sub
mov
inc
inc
cltd
mov
aam
fcmovnu
outsb
mov
rorb
cltd
mov
inc
repz
icebp
imul
pop
leave
jae
sbb
scas
int3
in
cmp
inc
mov
adc
cs
xchg
cmp
xor
int
movsl
jl
and
repnz
xor
fsubl
mov
ja
loopne
stos
mov
mov
mov
mov
jmp
insb
xor
int3
lds
mov
push
sbb
loope
jmp
or
loop
out
aam
in
inc
in
ljmp
jns
loop
xorl
jns
bnd
fdivs
sub
sahf
mov
sbb
add
les
add
in
movsb
rorl
dec
adc
insl
dec
and
popf
xchg
adcl
and
data16
call
xchg
mov
cmp
xlat
add
push
imul
jp
in
pop
or
adcl
and
pop
cmp
pop
jae
dec
pop
loop
pop
insl
sub
add
cmp
test
icebp
push
xchg
push
movsl
int
dec
ja
xchg
adc
shl
dec
xchg
pop
dec
xor
add
xlat
mov
das
mov
adc
das
lcall
mov
stos
sub
ds
imul
ficomps
fists
mov
mov
test
fstpl
lods
insl
lahf
push
cmc
add
imul
inc
jmp
pusha
movsb
mov
rcrl
fmull
cltd
xor
xchg
addr16
nop
inc
cmp
imul
pop
xchg
mov
rorb
dec
les
mov
cwtl
loope
jns
sub
cmp
lea
cmp
in
movsb
dec
and
in
fdivr
xor
mov
cltd
xlat
movsb
jl
in
sbb
mov
pop
ds
repnz
cmp
into
jno
inc
mov
jg
idivl
mov
jae
aaa
fldenv
mov
pop
sub
xchg
out
xor
in
std
outsb
add
push
stos
pop
lcall
ljmp
fwait
xchg
pop
jp
xor
cld
in
xchg
mov
jl
xchg
inc
or
jmp
or
lret
and
leave
mov
xor
push
out
pop
sti
bound
lret
imul
mov
shl
in
or
in
push
arpl
add
mov
psrlq
loopne
xchg
mov
and
leave
popa
loopne
fcomps
pop
mov
fs
pop
mov
int
sbb
leavew
lret
and
or
sub
movsb
sti
inc
jp
mov
lods
inc
repnz
xchg
mull
les
jmp
leave
mov
out
mov
sbb
vmread
jo
mov
push
arpl
loopne
pusha
cmp
gs
fcomps
test
and
add
repz
mov
mov
imul
mov
cli
daa
mov
push
adc
imul
and
scas
insl
paddusw
mov
push
cmp
add
lock
notl
daa
adc
xor
adc
lcall
js
jmp
and
imul
pop
cmp
sbb
xor
jns
jo
and
pushf
rorl
out
push
jge
sbb
cmp
std
jge
pop
andb
cwtl
and
xchg
xchg
xchg
aam
pop
mov
roll
sub
cmp
fsubr
aam
and
sbb
call
pusha
mov
xlat
cmp
xor
sbb
mov
mov
jmp
std
pop
mov
popf
lcall
das
lahf
es
jns,pt
cmp
orb
enter
jae
mov
mov
jle
mov
cld
lods
inc
dec
adc
adc
add
xchg
test
or
out
mov
pop
sub
out
mov
xor
push
test
pop
pop
mov
rol
mov
add
int
getsec
inc
rcrb
ds
out
push
mov
stc
mov
cld
mov
shl
pop
or
dec
sub
pushf
hlt
or
push
sarl
fstp
push
std
cmp
clc
mov
ss
xchg
sarl
push
dec
push
xchg
jno
lahf
orb
xchg
lea
cld
sbb
mov
nop
fwait
or
ja
jae
cld
stc
dec
inc
mov
sub
pop
jae
lret
pop
mov
sub
faddl
mov
dec
jg
lret
mov
nop
push
jne
mov
dec
adcl
jae
mov
popa
sahf
jae
icebp
dec
xchg
inc
mov
in
aam
push
data16
inc
aas
out
lret
and
adcl
fimuls
cld
mov
adc
dec
test
jge
inc
loop
out
mov
or
les
aad
dec
shlb
fninit
addr16
dec
imul
icebp
stc
repz
push
out
aaa
leave
test
pop
xorb
mov
mov
xchg
push
xor
movsb
bound
sarb
repnz
popa
insl
mov
in
cmpsl
lahf
xor
add
insl
jo
or
call
mov
loope
mov
hlt
inc
jo
icebp
movsl
fldenv
pushf
xor
adc
xor
and
es
xchg
pop
ljmp
adc
sub
mov
jno
push
adc
pop
mov
cmp
adc
inc
xchg
cmc
push
xchg
pop
push
and
jno
xchg
sti
adc
mov
in
mov
cltd
fwait
push
es
cltd
xchg
mov
xor
pop
or
movsb
mov
push
and
arpl
scas
jb
add
aam
sub
push
xchg
mov
fistl
mov
daa
xchg
adc
mov
sub
sbb
fisubl
jl
mov
cwtl
adc
pop
out
xor
mov
sub
xor
mov
xchg
push
scas
xchg
add
gs
mov
sub
and
cwtl
ljmp
or
mov
mov
ja
fsubrl
pop
xchg
je
mov
xor
push
mov
and
xor
popf
xchg
hlt
push
lock
loopne
dec
sub
or
mov
repnz
dec
jbe
das
inc
lret
out
mov
sbb
push
xchg
push
movsb
dec
jns
sbb
daa
jp
jecxz
jp,pt
cs
xchg
pop
adc
je
stos
push
mov
lods
cmp
testb
push
dec
adc
into
lock
mov
fnstenv
mov
inc
lods
ds
mov
std
sub
fcmovne
arpl
cmp
iret
mov
iret
stc
cmpb
fnstenv
inc
sub
fsubrs
je
fidivl
adc
sub
clc
pop
jp
popa
insl
pop
es
xchg
push
fst
in
lea
mov
jae
mov
mov
mov
imul
mov
pop
sbb
out
dec
fs
stos
xor
add
mov
and
xlat
cmp
push
xor
fldpi
inc
push
and
fcomps
or
sbb
fisubl
pop
adc
clc
lcall
push
push
mov
lock
xchg
lret
fisttps
sub
adc
jge
lea
mov
ds
dec
or
or
pop
cmp
ds
rcr
lock
fcoml
rolb
ss
fnstenv
clc
mov
mov
xor
fdivrs
insl
cli
int3
push
inc
es
scas
mov
jne
push
or
or
outsb
xchg
jns
mov
decb
ds
sub
lds
imul
pop
cltd
scas
insl
or
mov
push
mov
mov
pop
cltd
rcr
imul
jne
popf
dec
out
shlb
enter
or
movzwl
mov
sbb
jo
pop
jns
in
aam
jle
mov
add
xchg
sbb
test
hlt
fsubs
sbb
loope
cli
mov
adc
jno
cwtl
add
mov
nop
adc
lcallw
ds
and
jns
sbb
or
push
popf
and
in
test
jb
sarl
lcall
loopne
sbb
inc
icebp
insb
sub
adc
inc
fstl
jnp
sub
pop
mov
loopne
dec
scas
sbb
lock
add
xchg
push
mov
in
add
je
popf
in
movsl
popa
arpl
gs
fs
mov
mov
stos
lahf
sbb
mov
icebp
lret
fs
inc
xor
in
outsb
and
xchg
insb
data16
sbb
bts
add
mov
loope
out
stc
arpl
imul
ds
sbbb
out
and
je
push
lods
in
leave
push
sar
pop
cmp
inc
loop
xchg
jb
dec
je
sbb
outsb
insl
mov
fnstsw
rol
stos
add
test
int3
xchg
pusha
outsb
mov
pop
push
cmp
dec
sbb
add
dec
test
and
cmp
sbb
add
pop
mov
pop
jns
mov
xchg
aaa
bound
inc
popa
lahf
addr16
iret
and
insb
xor
mov
lcall
lods
add
push
test
xor
into
and
insl
data16
mov
std
pop
fdivrl
xchg
push
das
les
out
pop
icebp
scas
in
ja
pushf
mov
call
inc
fwait
adc
fildll
ret
popf
pop
jo
divl
cmc
test
lcall
push
sub
pop
std
pop
mov
xchg
insl
inc
xchg
mov
mov
cwtl
test
jne
push
pop
js
rcll
xchg
mov
lea
sub
cwtl
mov
ficoml
and
or
orl
mov
cld
pop
outsl
mov
ja
sbb
push
and
fcmovnu
scas
inc
mov
fsubs
div
cmp
mov
ret
cli
in
pop
jmp
dec
fstps
adc
pop
mov
cmp
push
push
jg
mov
movsb
mov
pop
ds
enter
mov
and
pop
push
outsl
pop
xor
push
mov
cli
sbb
and
sbb
iret
test
jbe
mov
or
push
cmpsb
pushf
inc
mov
je
and
je
fsubl
jmp
fidivs
pop
xchg
sbb
insl
xchg
sarl
add
add
push
jmp
test
mov
in
out
leave
test
test
clc
jl
das
es
sbb
test
cmp
popf
popl
mov
xchg
in
sub
fisubrs
xchg
jg
xchg
mov
add
inc
xchg
filds
popa
cli
vscalefss
in
loope
sarb
adc
adc
push
inc
pop
idiv
mov
movsb
xchg
mov
xor
repnz
adc
fsubrs
mov
inc
jmp
mov
and
and
dec
xchg
xor
mov
push
mov
and
dec
mov
xchg
sbb
xor
scas
jne
sbb
lds
pop
notb
lahf
jecxz
adc
inc
and
push
mov
iret
jge
lret
mov
insb
fmulp
hlt
inc
cmp
testb
adc
in
dec
test
cmpsl
aas
jge
rorb
ss
jnp
or
je
aam
jl
icebp
pop
addr16
and
xchg
and
pop
pop
das
out
push
inc
dec
add
xchg
cwtl
repz
sbb
addr16
adc
loop
icebp
jno
lds
stc
dec
in
mov
hlt
lret
rclb
paddq
xchg
or
xchg
and
fs
imul
test
les
pop
fsubrs
adc
mov
xlat
dec
loope
fcmovb
or
into
xchg
xlat
jae
adc
push
ret
in
push
aam
imul
mov
sub
and
sub
mov
push
mov
push
dec
mov
popf
push
iret
testb
jle
loopne
in
mov
jne
push
cmp
jge
mov
cmp
ficoml
cmpl
dec
shll
adc
dec
and
mov
sub
cli
xlat
fisttpll
mov
jb
mov
cld
sahf
sahf
fmuls
jle
das
jle
jbe
into
fisubl
pop
popa
jle
cli
and
out
dec
in
scas
cmp
xchg
mov
xor
stos
shrl
clc
outsb
xor
mov
fstps
icebp
mov
fwait
mov
xor
shl
pop
fsubrs
push
inc
movsb
aaa
inc
repnz
sbb
mov
sub
daa
mov
adc
push
fisubl
outsb
inc
cli
push
and
dec
adc
pop
ja
loopne
push
jo
loope
pop
adc
leave
not
outsb
adc
lahf
mov
addb
jb
xlat
lea
andl
jnp
cmpsb
wrmsr
xchg
clc
sub
popf
sbb
inc
stos
insl
lock
jne
mov
test
mov
inc
pop
mov
sub
es
push
daa
adc
pop
dec
dec
roll
arpl
cltd
out
pop
jo
icebp
pop
adc
les
jnp
mov
sahf
into
cmp
push
repnz
or
sub
mov
sub
jmp
push
pop
push
pop
je
mov
das
hlt
roll
cwtl
mov
lret
dec
mov
imul
jl
xchg
and
mov
cmp
dec
enter
push
xchg
push
lea
fidivrl
sbb
rcll
jg
stos
mov
pusha
andb
mov
add
out
dec
aas
push
dec
add
xor
jbe
cmp
rclb
ss
sub
xchg
lock
mov
lock
mov
mov
js
xchg
jl
scas
roll
xchg
ljmp
jp
add
or
mov
aaa
jns
mov
xchg
std
push
jp
mov
pusha
xchg
push
push
push
lods
lds
std
stc
in
mov
or
jl
sbb
pop
test
idivb
mov
subl
out
or
or
mov
je
aam
adc
jae
and
jg
outsb
jg
ds
dec
adc
add
pop
dec
data16
xchg
mov
sub
repnz
push
mov
loopnew
push
adc
cmc
in
jns
enter
jnp
adc
pop
stos
mov
jno
ljmp
outsl
mov
jbe
pop
xchg
and
mov
adc
mov
in
sti
mov
call
fs
sub
mov
mov
mov
ficoml
fadds
test
es
mov
cwtl
lock
add
sub
jnp
movsl
test
mov
lock
nop
lods
into
adc
or
inc
imul
fstps
or
stos
adc
pushf
js
sbb
adc
cwtl
push
jno
pop
mov
mov
out
data16
jno
test
adc
inc
push
or
pushf
aam
repz
or
shlb
iret
stos
inc
mov
scas
pushf
rclb
and
xchg
mov
stos
addl
gs
and
fisubrl
lods
mov
xchg
loopne
mov
fisttpl
jbe
out
hlt
adc
shrb
cld
dec
mov
push
mov
loop
clc
add
clc
pushf
leave
jecxz
pop
push
shl
push
xor
sbb
and
test
sub
ljmp
jmp
out
js
sbb
pop
cmpsl
rcll
pop
dec
cmpsl
mov
jno
jns
dec
xchg
mov
xor
fwait
xlat
call
mov
or
pop
test
sbb
push
xchg
inc
dec
sahf
clc
xchg
mov
ret
add
push
cmpsl
cmp
mov
inc
mov
lods
repnz
rorb
inc
pop
scas
pop
jg
icebp
mul
inc
mov
sub
lahf
xchg
pop
movsb
aaa
or
out
jo
adc
jge
das
xor
lods
gs
cwtl
fisubrl
add
addb
mov
inc
jl,pt
and
dec
lock
fmull
rolb
cmp
xchg
nop
push
jo
pop
sub
mov
inc
pop
pop
mov
cmpl
xor
xchg
adc
push
sbb
mov
imul
or
movsl
jbe
inc
push
ret
fcomp
cmp
test
loopne
mov
sub
icebp
ret
or
xorb
pop
inc
mull
ret
and
int
add
mov
add
and
xor
sbb
std
out
inc
adc
into
xchg
mov
aaa
push
mov
pop
lcall
int3
bound
or
bound
xchg
xchg
cmpsl
sub
jl
jnp
push
mov
mov
xor
xor
mov
mov
or
repnz
dec
jne
dec
mov
fimuls
dec
fimuls
add
sub
les
stos
fdivs
add
lock
lret
fwait
cmp
lock
pop
jl
lahf
fdivl
push
pop
mov
pop
arpl
aam
mov
lea
aam
add
inc
xor
fnstenv
sbb
pop
sub
negl
movsl
mov
mov
roll
pop
leave
cmc
std
je
enter
lock
add
cmp
imul
mov
sbb
inc
jle
das
add
jo
xlat
movsl
and
mov
aaa
outsl
out
das
jg
xor
mov
mov
rorb
push
rolb
fistl
cmp
es
scas
mov
inc
cmpsl
nop
sbb
ja
jmp
jle
out
mov
lods
sti
inc
or
add
inc
cmc
dec
jno
lcall
imul
add
das
add
lods
jno
js
xor
pop
push
sbb
lods
insb
ja
andl
dec
leave
lea
sub
bound
pop
and
xchg
sbb
mov
ljmp
and
mov
cmp
rcll
jl
cmpsl
or
or
shlb
insb
enter
call
into
lcall
jle
arpl
jge
inc
ljmp
inc
loop
lods
mov
out
fucomip
pop
popa
add
mov
jl
xchg
gs
adcl
es
sbb
xchg
cmpsb
mov
aas
jns
mov
stos
lock
lods
out
cltd
mov
mov
sahf
es
insl
gs
call
and
xlat
inc
dec
dec
sbb
test
mov
sbb
mov
js
jae
adc
faddp
leave
enter
loopne
std
dec
jns
enter
mov
pop
std
jmp
out
cmp
sbbl
sbb
repz
mov
inc
out
shll
or
std
push
ja
xchg
mov
lret
fcmovu
xlat
jl
out
arpl
arpl
jno
addr16
lods
mov
dec
loop
cli
sbb
test
data16
sbb
dec
imulb
fwait
cli
pop
jne
mov
adcl
sahf
cmp
scas
std
mov
adc
mov
aam
je
or
dec
out
push
jns
in
bound
or
mov
insl
sub
ret
cltd
push
std
orl
shl
inc
data16
fs
or
and
cltd
imull
sub
stos
xchg
lods
jmp
mov
test
fucom
and
stos
stos
lds
andb
mov
aad
cmc
aam
sbb
and
add
pop
in
dec
scas
dec
dec
or
hlt
stos
ds
out
jo
jmp
xchg
into
jg
mov
fmulp
js
sub
fprem1
movl
jo
pop
inc
push
js
xor
ljmp
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xchg
in
push
movsl
cltd
shl
ss
push
imul
and
shl
xor
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
negb
lds
cmp
mov
lods
mov
in
xor
lret
cmc
mov
call
and
test
mov
xchg
cmp
mov
negb
fcmovne
cmp
or
sbb
xor
insb
pop
insb
pop
xchg
testl
mov
sbb
daa
xor
sub
sbb
in
pop
mov
jno
shll
dec
inc
insb
pop
insl
pop
imul
add
out
scas
cld
mov
incl
inc
pop
lods
mov
sub
subb
movsb
jge
or
sbb
popf
xor
mov
movsl
lcall
notb
mov
movsl
lret
popf
jle
push
divb
cli
mov
xor
mov
movsb
nop
shl
ss
push
jb
fidivl
dec
popf
xor
mov
movsl
lcall
notb
mov
mov
xor
mov
movsl
lcall
repnz
mov
neg
mov
push
out
fisubl
out
xor
mov
mov
shl
xor
mov
movsl
xchg
shrl
pop
sti
movsl
lcall
notb
mov
movsl
lcall
testb
les
xor
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
pop
iret
movsl
lcall
notb
mov
cmc
filds
push
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
ffree
movsl
lcall
notb
mov
test
sti
ds
ja
mov
cmpsl
lcall
hlt
adc
mov
mov
xor
mov
movsl
fcmovb
negb
sahf
push
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
notb
mov
movsl
lcall
mov
movsl
mov
divb
pop
jmp
cs
sysenter
xlat
or
enter
sahf
jae
jge
inc
pop
test
addl
es
adc
pushf
pop
mov
mov
jle
mov
xchg
mov
outsb
fsub
rol
int3
cmp
xor
mov
xor
adc
mov
imul
lret
sub
xchg
mov
xchg
out
jle
xchg
out
jge
rolb
sbb
cmp
cmpsl
ror
lods
sbb
mov
and
fimull
push
pushf
xchg
aas
std
push
or
outsb
cwtl
push
mov
add
xor
sub
out
stos
pop
les
test
ljmp
aam
and
icebp
cmpsb
insb
in
aam
in
dec
push
push
sahf
adc
inc
jns
xchg
pop
fidivrs
sbb
faddl
sbb
jne
lds
add
lock
neg
lock
fwait
in
mov
jg
aas
dec
stos
or
jo
rorb
repz
loop
mov
rcrl
loop
leave
mov
sub
xchg
adcb
addb
jp
imul
pop
mov
daa
std
pop
pop
scas
mov
adc
add
pop
icebp
fisubs
sbb
mov
inc
addr16
ljmp
adcb
pop
xchg
fcomps
leave
sub
inc
pop
ss
cmp
push
ror
das
lock
lea
popf
adc
or
pop
and
cmp
mov
push
xchg
mov
pop
mov
invd
mov
adc
gs
dec
call
clc
ss
fbld
in
imul
lcall
lret
int3
test
iret
loopne
cwtl
fistpll
dec
mov
xchg
mov
push
ret
icebp
call
jne
mov
xor
ja
xchg
in
push
dec
inc
lret
mov
sub
test
jns
and
hlt
dec
je
in
adc
out
outsb
sub
dec
aas
test
imul
mov
pop
pop
push
icebp
adc
and
push
ljmp
enter
inc
lods
xchg
push
pop
data16
mov
outsb
std
scas
xchg
call
sbb
aaa
cmp
es
stos
jmp
fldcw
adc
jnp
add
xchg
xacquire
outsl
sbb
lods
push
pop
adc
iret
movsb
cli
imul
adc
jns
xchg
sbb
push
shrb
sti
push
stos
push
jns
jmp
out
adc
in
sbb
scas
jmp
cltd
sbb
test
xor
insb
sub
pop
mov
adc
mov
daa
push
inc
mov
addr16
ret
bnd
mov
mov
imull
add
push
adc
mov
into
stos
lahf
stos
ret
mov
fiadds
outsl
cmp
int
push
ret
mov
cmpsb
jle
movsl
xchg
jl
aas
sub
push
xchg
sbb
pop
pop
jge
cld
add
js
xor
repnz
mov
adc
and
cmp
cli
aam
xor
mov
sbb
pop
adc
fildl
stos
push
mov
push
ds
and
lret
mov
sub
pop
mov
inc
xor
fsubrp
and
gs
repnz
add
movsl
xor
add
sub
int
mov
cwtl
pop
out
add
pop
ja
in
inc
push
icebp
and
test
add
mov
cmp
mov
sahf
pusha
insl
jmp
je
xchg
outsb
adc
jecxz
xlat
xor
jns
mov
push
push
xor
loopne
dec
stc
iret
ds
movlps
stos
sub
ljmp
xlat
or
pushl
mov
push
mov
cmpsl
in
inc
inc
test
and
out
inc
out
or
lret
or
pushf
sbb
and
shrl
jecxz
pop
push
inc
data16
aaa
inc
push
or
scas
push
in
daa
insl
fisubrl
ss
lret
mov
ss
push
ljmp
mov
shrb
mov
or
xor
test
jp
push
cmp
ds
loopne
hlt
test
bound
mov
push
fimuls
lods
jp
jne,pt
sub
jno
rorl
int3
stos
pop
sub
mov
fldt
aas
subb
sub
mov
xor
jg
adc
out
fsin
inc
jmp
test
dec
sub
push
inc
fnstsw
xchg
cltd
jo
ffree
xchg
stos
je
cwtl
cmp
int3
icebp
sahf
lret
outsb
lahf
lret
fldl
in
inc
cmp
repz
stos
xlat
dec
mov
in
enter
rclb
jb
inc
and
xor
cmpsb
add
sub
shr
bound
pop
loope
into
sub
or
add
dec
add
lds
addl
mov
ljmp
lods
pop
adc
mov
shr
fwait
jg
pushf
sbbb
nop
xor
mov
jo
fdivrs
iret
add
dec
fnstcw
popf
mov
lret
push
scas
sub
jle
popf
ror
les
or
push
push
cwtl
rcr
cmp
into
popl
mov
dec
rorl
cld
add
gs
and
imul
mov
jb
adc
in
dec
pusha
pop
scas
and
out
shlb
aam
pop
sahf
bound
ss
sub
sub
mov
xor
inc
js
cbtw
add
and
xchg
pop
jmp
pop
bound
jne
aas
or
pop
mov
mov
mov
into
mov
jb
imul
popf
insl
pop
addr16
test
pop
enter
dec
sub
sub
mov
clc
mov
mov
adc
mov
inc
lods
pop
or
push
jno
xchg
and
iret
push
push
rclb
ja
scas
pop
repz
cmpsl
out
aas
aas
repz
mov
dec
sbb
mov
adcb
enter
and
rorb
inc
clc
lret
pop
xorl
test
sti
jmp
pop
mov
pop
lock
daa
sahf
loop
xchg
mov
ret
push
xor
sarb
pop
or
rorl
int3
mov
je
and
push
mov
rorl
shrb
ret
mov
mov
jle
fidivs
out
in
sub
es
mov
rep
shr
fldcw
adc
add
mov
jp
xor
jno
pusha
gs
sbb
inc
imul
dec
xchg
mov
mov
mov
mov
pop
mov
loope
shll
mov
mov
xchg
scas
add
andps
aam
test
mov
fistpll
jg
ret
clc
push
xchg
stos
xchg
cwtl
sbb
orl
push
sub
fs
incl
notb
cmpsb
sbb
pop
sub
xor
pop
js
gs
lds
or
push
dec
enter
sahf
add
adc
add
das
shl
mov
fisubs
pop
sub
inc
mov
mov
pop
lahf
sarl
nop
xor
mov
roll
mov
pop
mov
in
es
repnz
inc
stc
sub
pop
push
pop
movsb
divb
loope
push
daa
lock
pop
adc
ret
out
add
cmp
dec
pop
cmc
out
pusha
ds
jnp
orb
mov
imul
and
bound
add
pop
nop
sub
or
ret
or
cmpsl
xchg
data16
inc
enter
lock
clc
add
sbb
popf
scas
inc
mov
push
ret
lret
pop
sbb
cld
outsl
adc
sub
mov
lret
xchg
mov
or
in
outsl
out
fsubrs
out
inc
xchg
mov
in
cli
cmp
push
cmp
push
mov
cmp
ror
aas
mov
ret
mov
add
cmc
and
mov
xchg
ss
cmpsl
mov
sbb
in
movsl
movsl
push
sbb
jge
in
ja
test
xlat
adc
or
xor
enter
add
sti
xlat
outsb
mov
xlat
adc
popf
scas
xor
int3
sbb
xor
out
and
dec
xchg
lds
in
fucomi
add
fcomp
push
stc
fimull
insl
movsl
mov
insb
mov
sar
ljmp
cmp
enter
mov
sub
push
lahf
roll
or
rcll
inc
sbb
fistl
adc
das
dec
sti
imulb
xor
movsb
cmp
aas
testb
jp
adc
sbb
les
cmp
xor
dec
push
test
jmp
das
mov
int
xchg
sbb
ret
xchg
dec
dec
jp
dec
pop
xchg
mov
lret
fidivl
inc
iret
cmp
loope
push
jno
jbe
roll
daa
in
ret
cmp
push
pop
ja
cmp
mov
btc
pop
test
outsb
cmc
push
pop
cmp
mov
jne
mov
adc
cmp
cwtl
cmp
sbb
mov
cmp
insb
fs
loope
addr16
inc
push
inc
inc
in
sbb
ficompl
dec
mov
ljmp
cmp
sub
push
ja
jp
repnz
inc
in
mov
scas
sub
leave
mov
xor
mov
jle
mov
loop
add
mov
jo
int3
push
or
add
dec
or
in
lds
adc
icebp
ret
or
fxch
les
xor
clc
mov
test
mov
iret
dec
scas
push
int
repz
cmp
xchg
repnz
add
stos
mov
stos
lahf
ret
adc
call
cmp
fsubrs
fistps
int3
in
aad
mov
ret
push
adc
decb
add
fwait
adc
adc
outsb
xchg
in
jne
lahf
mov
pusha
push
std
sub
inc
add
ja
xchg
inc
mov
jb
and
fs
sub
sub
mov
inc
jae
flds
mov
daa
pushf
aad
xor
cmp
fwait
add
push
add
push
hlt
hlt
cld
imul
xchg
negl
mov
pushf
mov
pop
cmc
incb
and
or
cmp
fisttps
cmp
sub
push
mov
and
cmp
dec
lock
mov
inc
and
int3
jb
mov
fcomps
insb
sub
stos
cwtl
push
leave
fs
lahf
dec
push
int3
fsubrs
leave
in
addl
mov
push
mov
es
adc
inc
test
pushf
mov
imul
jecxz
or
mov
push
in
pusha
dec
das
aad
pushf
jmp
and
out
sub
xchg
xchg
fsubrs
pop
sahf
hlt
adc
sub
mov
push
cmp
daa
call
xchg
adcl
and
adc
xchg
sbb
cmc
out
fimuls
lods
fldl
sbb
mov
clc
sub
int3
dec
adc
movsl
pop
aad
push
cld
movsb
test
into
dec
hlt
push
xchg
dec
fucomp
das
pusha
xchg
test
lret
sahf
ret
jle
sbb
xchg
loopne
mov
cmpsb
repnz
out
jg
xchg
aam
pop
pop
mov
and
cmp
outsb
dec
or
or
fildll
pop
and
repnz
jb
daa
push
adc
jmp
xor
inc
divl
pop
fdivrl
cltd
jbe
push
stc
adc
sti
in
pop
shlb
lock
xchg
daa
jg
mov
loopne
jle
and
mov
dec
mov
andl
cmpsl
adc
movsb
xchg
sub
out
std
ljmp
mov
shlb
rolb
fs
lret
push
pop
cmp
sbb
pop
insb
outsb
jle
sub
mov
pop
pop
push
sbb
out
add
rcrl
add
xor
imull
fmul
cmp
imul
lods
jne
outsl
inc
pusha
cs
clc
orl
xor
ja
mov
roll
pop
outsl
loopne
out
mov
or
nop
jbe
scas
lret
pop
jnp
shrl
hlt
xchg
pop
adc
sbb
mov
test
pop
test
xchg
dec
in
scas
xchg
mov
jne
add
xchg
data16
repnz
cmpsl
lea
add
mov
pushl
loopne
sbb
jle
pop
imul
xorb
push
pop
sub
fdivrs
repnz
sahf
pop
xchg
stos
and
mov
shlb
ss
test
fadds
bound
cmp
xor
add
sub
pushf
lret
test
xlat
loop
dec
push
fs
jmp
jge
scas
jmp
mov
js
mov
cmpsb
das
push
fidivrl
sub
dec
pop
xchg
leave
inc
jp
jno
dec
pusha
xor
jnp
outsb
jle
push
les
inc
pop
adc
les
shr
in
xor
outsb
dec
iret
sbb
inc
inc
push
jmp
adc
pop
and
sub
mov
cmpb
ret
nop
dec
push
inc
inc
jg
sar
cld
dec
scas
fwait
sahf
dec
push
mov
outsb
lahf
std
lahf
std
xchg
scas
fisttps
cwtl
sub
fstps
jmp
fwait
ljmp
or
rolb
cmp
add
sub
push
xchg
pop
aam
mov
hlt
loop
pop
pop
xor
cmp
rcrb
jnp
fisttps
mov
pop
sub
gs
add
add
stos
pushf
push
or
xchg
sub
fsin
jl
jl
jnp
ret
mov
das
test
xchg
cmp
shlb
out
push
testb
lea
fimuls
push
pop
mov
iret
jmp
push
lahf
sbb
xor
fdivrs
xor
xor
cmp
hlt
dec
mov
xor
xchg
lds
jecxz
mov
ret
out
jp
sti
sbb
mov
pusha
cmp
push
xor
or
repnz
dec
fimull
pop
inc
out
mulb
les
jp
bound
pop
xchg
and
inc
pop
hlt
out
clc
popf
cwtl
jle
ljmp
pusha
and
notl
aas
push
mov
movsl
push
xor
or
push
mov
mov
cmp
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
