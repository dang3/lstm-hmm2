cmp
cmp
fsubrp
mov
jl
mov
fxch
into
push
into
shr
push
push
sbbl
lea
cwtl
or
in
push
stos
fisubrl
dec
push
jp
or
xchg
pop
inc
add
in
repnz
stc
jg
adc
pop
push
mov
shl
into
out
shlb
imul
dec
arpl
inc
out
es
xor
mov
mov
fs
out
adc
jecxz
in
mov
push
cltd
sub
xchg
xor
mov
sub
push
clc
cmp
mov
inc
rolb
shlb
call
inc
hlt
leave
dec
popf
dec
mov
xchg
cs
push
mov
sub
fists
fmull
pop
fidivrs
pop
in
cli
sbb
mov
shlb
jle
lcall
mov
sbb
xor
in
call
adc
nop
lret
jge
cs
mov
jge
mov
mov
lods
movsb
jl
loop
dec
repz
bound
sahf
push
pmaxsw
ljmp
dec
pop
xchg
ss
mov
stc
inc
rcrb
xchg
rcl
cwtl
sbb
pop
shll
pop
sub
sbb
ret
sub
pop
xchg
movsb
cs
or
jl
lods
cli
jne
enter
add
and
popa
xor
mov
xor
push
adc
aas
xchg
or
dec
fnsave
cwtl
imul
mov
insb
sahf
and
sbb
dec
movsl
shl
mov
sarl
jne
gs
fimull
inc
mov
jle
mov
rcrb
test
cmp
out
fnstcw
adc
sbb
sub
outsl
xchg
adc
test
movsl
or
pop
pop
outsb
sub
div
dec
xchg
mov
mov
daa
or
inc
out
in
jbe
mov
int
mov
sub
rorl
push
cmp
dec
jmp
cs
mov
lret
jp
inc
scas
mov
add
nop
subb
nop
add
mov
push
push
adc
jmp
loop
mov
mov
inc
dec
bound
push
xor
ljmp
loop
xchg
mov
jbe
ret
scas
pop
adc
push
jno
stos
inc
dec
mov
jp
push
and
xchg
inc
sub
jnp
jge
push
lds
inc
icebp
scas
movsl
fbstp
pop
sub
in
mov
mov
jmp
mov
sarb
mov
stos
pop
sbb
cmp
xlat
cld
or
sub
dec
push
mov
enter
inc
fwait
mov
or
fwait
adc
jns
dec
adc
cmpsl
push
push
sbb
idivl
stos
ret
pop
cmpl
rcll
push
cmpsb
or
sbb
cld
jb
notl
fwait
dec
jb
fbstp
repnz
fnstcw
push
adc
subl
loop
sahf
bound
push
cmp
movsl
mov
ja
pop
cmp
ljmp
jo
inc
lahf
inc
push
clc
jmp
stc
aaa
repnz
loopne
mov
scas
mov
outsb
push
jp
scas
adc
js
test
lock
inc
jp
movl
adc
sbb
jg
mov
lods
jp
pusha
xor
inc
push
cmc
fldt
mov
mov
mov
loop
xor
inc
bound
mov
cld
mov
dec
jb
mov
aad
sbb
lret
ja
lahf
mov
xor
dec
cmpsb
sahf
sbb
xchg
sbb
into
or
jne
mov
mov
aas
adc
fisubs
in
cmp
mov
lods
adc
adc
ret
cwtl
xchg
adc
xchg
aaa
movsb
lock
ret
loope
stos
push
int
pushf
out
push
push
mov
std
xorb
sbb
adc
adc
enter
jno
lret
pop
inc
mov
cmp
sub
ret
movsb
pop
mov
mov
sub
pushf
int
inc
sub
or
arpl
jns
arpl
sub
xchg
in
cs
popf
loopne
into
jge
or
fidivs
divl
pop
cmp
test
insl
push
insb
cmp
aam
adc
je
movsl
inc
add
fcmovbe
mov
cs
sbb
cs
sub
mov
jbe
aaa
push
add
xchg
xor
push
push
fstp
sub
sbb
or
lahf
mov
cmp
and
addb
and
repz
mov
loopne
inc
out
aaa
jg
pop
or
xor
and
jae
ss
dec
mov
add
fildl
dec
es
cltd
xor
add
cmc
mov
sub
out
sub
daa
sahf
sub
xchg
mov
push
push
push
mov
inc
jge
stos
cmp
scas
dec
cmp
mov
sbb
mov
orl
scas
shrb
enter
sti
sub
or
fnsave
lcall
mov
sbb
sub
push
inc
sbb
mov
inc
fstp
bound
test
xchg
fsubl
or
lock
push
imul
add
xchg
movsl
cmp
testb
repnz
pop
mov
adcb
inc
push
test
enter
jo
movsb
or
inc
outsb
rcr
std
rorb
and
insb
xor
cmp
dec
call
push
call
xor
sub
pop
push
push
test
inc
dec
ss
pop
cmp
push
or
lret
push
lret
mov
xor
jge
lret
leave
fidivs
xor
xor
push
or
aaa
or
jle
pop
jmp
push
and
mov
mov
sti
pop
pop
sub
and
cmp
lahf
cld
add
std
lcall
in
jecxz
pop
xor
loope
stc
fucomp
dec
out
popf
mov
sbbb
dec
mov
push
jecxz
fists
pop
jnp
jo
rolb
and
test
imul
push
rorb
or
mov
dec
stos
sub
data16
lret
inc
in
cli
inc
inc
cmp
jecxz
dec
cmp
andb
sub
loop
push
inc
mov
inc
orl
stos
or
popf
cli
std
cs
jae
mov
jmp
add
inc
push
jne
fstps
fstpl
movsl
cli
arpl
adc
or
cmp
inc
add
cwtl
push
dec
sbb
repz
shl
in
cmp
sbb
bound
cld
and
cli
and
xor
jecxz
movsb
mov
addl
inc
mov
insl
fdivs
xchg
lea
adc
inc
les
push
lcall
mov
push
lock
push
xchg
push
cs
inc
ja
cmp
mov
and
repz
setne
pop
sub
mov
pusha
xor
das
sub
repnz
lret
mov
sub
inc
imul
inc
mov
pop
adc
lahf
lret
cmp
roll
insl
dec
push
push
fsubl
shl
xor
sti
fildll
xor
mov
add
adc
sarb
sub
fidivs
lods
mov
pop
dec
sub
push
outsb
mov
fs
std
stos
xor
out
push
xlat
dec
push
pop
enter
adc
jno
flds
jbe
in
cs
lods
pop
push
inc
xchg
std
or
xor
cmpsl
les
pop
lds
popf
ret
push
cltd
in
push
xor
insb
mov
xchg
frstor
push
mov
mov
pop
test
mov
xor
adcb
add
andb
add
jnp
fwait
dec
dec
xchg
inc
pop
mov
mov
sbb
sarl
pop
mov
adc
mov
mov
orl
add
dec
out
mov
lret
data16
jns
sbb
ret
test
cs
adc
push
cs
std
lret
push
cmp
cmp
inc
je
fcomi
fdivs
dec
movsl
dec
pop
mov
push
mov
stos
ret
lods
cmc
xor
add
adc
aas
push
add
lahf
rcrl
or
scas
push
pop
inc
or
xor
and
xor
mov
pop
bound
mov
fldenv
cmpsb
jo
mov
or
in
cmp
mov
leave
mov
push
jmp
shrb
xor
sahf
xchg
cs
cmpl
and
fimull
ss
add
movsl
xor
dec
sub
clc
loopne
scas
js
mov
push
ret
aaa
sub
pop
dec
lret
xor
loope
pop
sahf
cmp
pop
mov
add
jg
adc
mov
xor
adc
fmull
aaa
mov
daa
sahf
mov
iret
mov
mov
pop
pop
jge
push
jb
or
push
out
gs
testb
inc
scas
mov
lods
out
sbbl
cmp
push
arpl
shll
push
xchg
xchg
adcl
pop
das
lret
push
sub
push
lret
hlt
mov
xchg
jge
adc
mov
mov
lret
fsubp
cmp
sub
out
fcmovbe
sti
imul
dec
cmpsb
sub
push
ljmp
cmpsb
and
push
test
dec
mov
fs
mull
pop
stc
inc
mov
jns
nop
push
lds
in
lret
pop
es
popf
nop
sbb
out
repnz
std
mov
int3
xor
icebp
dec
cltd
test
fidivrl
int
xchg
fisubs
outsb
out
and
sti
xchg
and
sub
xchg
repz
mov
lcall
mov
outsl
mov
out
dec
ror
jecxz
cld
movsl
out
fadd
scas
sbb
mov
mov
inc
mov
aaa
xlat
mov
dec
push
adc
inc
movsl
and
lock
fiadds
shl
mov
imul
mov
sbb
adc
sub
or
inc
fsubl
inc
sahf
jecxz
dec
outsb
leave
test
xor
fiaddl
xor
jmp
inc
int3
into
cmp
xor
xchg
and
aas
outsl
xchg
lds
rclb
xchg
test
inc
xor
outsl
or
dec
out
insb
mov
mov
cs
shlb
scas
test
rcll
xchg
push
mov
cld
das
cmp
test
add
std
adc
imul
into
mov
or
daa
into
or
and
test
pop
add
stos
loopne
popf
outsl
mov
jns
in
mov
cmp
andl
scas
test
pop
push
daa
mov
jns
mov
cmp
mov
push
out
insl
stc
sti
rcr
leave
neg
daa
and
shrl
aad
andl
push
aas
inc
xor
xlat
mov
mov
scas
jg
mov
jno
mov
orb
lods
icebp
cmpsb
mov
pop
xchg
icebp
test
inc
xor
mov
xchg
sbb
int
sub
mov
mov
fldl
movsb
push
pop
ret
sbb
pop
out
mov
mov
mov
jecxz
dec
mov
inc
arpl
and
sbb
inc
loopne
ljmp
push
jmp
inc
jle
ret
inc
mov
jb
inc
movsb
jl
into
mov
out
insb
sub
push
sti
and
mov
cmp
das
adc
xor
mov
fbld
dec
into
pop
movsb
and
orb
mov
inc
jne
mov
pusha
clc
xor
sub
or
std
cmp
sahf
push
ds
push
iret
mov
adc
sbb
dec
push
or
cs
clc
lret
fistl
in
loop
es
mov
insb
mov
jmp
loope
pop
mov
mov
sarb
sub
mov
push
push
xchg
lds
test
push
mov
cltd
out
hlt
jo
inc
sbb
rcrl
and
sahf
mov
mov
adc
cmpsl
sbb
negl
and
cmp
xchg
mov
jno
mov
stos
fsubr
rorb
cmpl
jmp
scas
addr16
test
dec
lret
testl
add
cli
popf
inc
or
aaa
push
pop
xchg
lods
push
outsl
lods
pop
dec
add
cmc
daa
jp
cltd
movsb
stc
lret
adc
mov
mov
cmpsl
rolb
inc
mov
repz
insl
ljmp
jg
mov
mov
clc
icebp
fwait
and
in
or
jecxz
jbe
imul
stos
ret
jp
sbb
pop
gs
cmc
orl
mov
addl
fldenv
addr16
scas
movsb
or
cmp
jnp
cmp
aas
stos
pop
sbb
jmp
icebp
adc
pushf
pop
push
fists
adc
xchg
pop
push
push
out
in
xchg
push
jp
outsb
mov
inc
test
cmp
lods
adc
cmp
and
add
xor
and
add
mov
sarl
ds
push
dec
lahf
push
xor
mov
out
aad
pop
xchg
ds
loopne
xor
iret
mov
mov
lds
add
cmc
lods
in
dec
add
mov
xlat
and
push
js
scas
lods
sub
xor
sbb
jmp
inc
xchg
fadd
cld
pop
das
ljmp
ret
cmp
jae
push
mov
sbb
cmp
jmp
mov
leave
fisttpl
mov
ret
rcrb
jnp
jecxz
ja
cmp
repnz
push
dec
xor
ficoms
mov
subl
xchg
push
pop
ret
xchg
mov
adc
mov
pop
mov
lahf
ret
mov
sbb
mov
stc
movsl
mov
testl
std
mov
ja
test
sbb
xchg
xchg
movsl
cmc
adc
sahf
orl
mov
cmp
pop
cmp
hlt
lret
ror
lds
lret
sub
lock
pop
loope
movsl
sbb
and
lahf
add
jp
hlt
insl
xor
fiadds
pop
mov
pop
roll
aam
pop
sbb
ss
cltd
lahf
int3
or
mov
dec
call
clc
xchg
sahf
xor
lods
xchg
rol
je
int
dec
je
add
push
push
popf
jge
aaa
sub
sub
jg
cmc
loop
and
jnp
dec
lret
xlat
shlb
scas
adc
xchg
jge
xchg
xchg
lcall
sti
lcall
fs
push
xchg
jbe
cmp
or
movsl
adc
mov
pushf
ja
or
adc
pusha
sub
sub
sbb
lods
xor
addl
ljmp
orl
xchg
xor
orl
mov
add
cmp
xor
rcll
out
mov
ret
xchg
adc
pop
push
mov
sub
add
push
bound
js
inc
in
popa
in
dec
mov
cmpsb
shlb
pop
mov
dec
add
add
dec
int3
add
out
inc
outsl
scas
pop
orb
subb
jg
add
inc
mov
imul
xlat
lea
mov
adc
xor
fnstcw
xchg
shll
loope
mov
and
jmp
negb
cmp
cmp
xchg
add
jo
bound
addr16
lods
lock
int3
shlb
das
mov
test
xor
in
xchg
es
test
inc
imul
push
int
mov
int3
mov
jb
xchg
xchg
ja
xchg
out
xor
xor
addr16
and
icebp
movsl
push
and
xchg
int
mov
ss
pop
mov
in
test
repnz
test
or
imul
mov
mov
sub
dec
push
mov
or
cmp
in
icebp
pop
or
ss
aas
sub
fimuls
add
jbe
adc
scas
adc
push
mov
or
mov
movl
adc
jmp
rdtsc
rcll
dec
jae
dec
sub
rcrl
mov
pop
shlb
cwtl
int
mov
mov
jmp
jnp
mov
adc
mov
sbb
xchg
xor
xor
jno
addr16
jecxz
pop
ljmp
fisubs
int
xchg
cmp
lret
stos
push
scas
mov
jb
pop
andb
adc
andb
and
push
xchg
dec
xor
adc
dec
loope
inc
idivl
pop
int3
dec
sbbb
sahf
fsubs
jp
fdivl
insl
aas
out
inc
aad
lahf
mov
sub
sub
push
push
mov
pop
js
test
and
or
insl
je
int3
in
ja
aad
jbe
mov
insl
shlb
mov
std
push
xchg
cwtl
or
sub
dec
mov
test
rcr
lret
xchg
jo
push
or
insl
lock
clc
repnz
xor
bound
mov
shl
xchg
sbb
cmp
scas
jl
popf
jne
pop
inc
xor
or
jno
cmpb
adc
dec
ds
in
les
sub
cld
and
xor
or
mov
or
jecxz
test
shrl
sbb
cmp
jno
sub
mov
pop
lea
fisubs
je
imul
mov
add
or
push
inc
ds
mov
enter
bound
push
xor
jp
push
mov
decl
std
ret
popa
into
imul
or
orb
dec
jmp
cmpsb
xchg
das
bswap
imul
cmc
mov
jl
add
cmp
xchg
jecxz
mov
imul
ljmp
pop
subb
je
sbb
lds
add
mov
lods
cmp
adc
cmpsl
mov
shrb
imul
jp
fadd
js
test
fs
push
mov
jo
je
xor
movsb
dec
arpl
pop
movsl
xlat
mov
aaa
adc
popf
mov
imul
xchg
test
xchg
cmp
sub
int3
xchg
dec
rcll
sbb
xlat
dec
dec
bnd
add
add
sbb
or
inc
jbe
test
jg
loop
pop
mov
xor
dec
jb
out
pop
sub
adc
add
into
sub
lret
cmp
nop
pop
sub
cld
rcll
fimuls
and
xor
adc
aaa
jbe
and
fwait
in
add
push
div
mov
les
push
sbb
stos
cmpsl
inc
fstps
stc
xor
mov
jo
bound
cmp
sbb
xchg
jb
mov
das
shr
insl
stos
mov
pop
pushf
mov
es
mov
mov
sbb
inc
std
lea
or
or
push
roll
add
xchg
sbb
xchg
sbb
imul
inc
nop
mov
add
ja
xchg
std
pop
int
pop
mov
dec
xchg
ret
pop
iret
mov
mov
inc
fnstcw
cwtl
pop
rclb
lds
int
cmp
sbb
lods
jg
negl
and
or
and
xchg
imul
xchg
and
cld
movsb
sbb
fstl
push
fisttps
sub
adc
cmp
mov
lds
or
dec
jecxz
xorb
ret
fldl
and
pop
stc
push
int3
dec
movsb
shlb
xor
idivb
mov
dec
or
push
cwtl
sbb
insl
jmp
imul
pop
test
clc
lret
stos
add
pop
out
xor
fnsave
fcomps
push
lret
mov
jp
xchg
mov
fsubs
xchg
movsl
aaa
ss
inc
or
fcompl
jmp
cmpsb
incb
inc
and
jmp
test
nop
push
adc
aad
xor
popa
dec
pushf
adc
add
ja
xchg
jecxz
xchg
andb
xchg
test
mov
addl
leave
ss
cmp
fidivl
lock
xchg
fucomi
cltd
inc
pop
push
mov
ret
ja
arpl
jbe
xchg
lahf
sti
lcall
ror
xchg
cli
stos
xor
xchg
lret
xchg
xor
in
jl
in
mov
or
or
pusha
cmovno
sti
pushf
mov
nop
shll
xor
nop
adc
ja
pushf
sahf
es
mov
xor
dec
pop
sbb
add
cmc
out
ret
sub
addr16
inc
add
out
fsubrl
mov
xor
fwait
inc
xchg
cmpsb
mov
cmp
mov
pop
rolw
mov
in
mov
daa
movsb
adc
aaa
ficompl
xchg
push
sbb
push
clc
or
adc
jno
fimuls
int
mov
jo
lods
jl
or
loop
pop
pop
fdivl
movsl
xor
mov
divl
add
and
imul
into
cltd
cmp
shlb
or
xor
cmc
xor
add
sub
pop
sbb
mov
and
add
lock
mov
cmp
popf
adc
std
xor
repz
lods
xchg
jns
mov
mov
push
enter
mov
imulb
icebp
ret
or
test
adc
fldt
cld
xchg
movb
into
or
push
jl
dec
mov
pop
in
repz
out
push
in
cli
push
mov
pop
lret
shll
cmp
mov
sub
imul
add
xchg
or
stos
decb
ljmp
or
cwtl
lods
mov
sub
jne
mov
or
ffreep
dec
mov
sub
dec
pushf
sub
jg
sbb
or
lock
jle
inc
pop
sub
fimull
sbb
cmp
hlt
push
imul
push
add
mov
mov
push
fisttpll
jge
pop
push
xchg
lea
jns
pushf
cld
mov
inc
shll
cld
sub
inc
mov
push
push
cmc
out
gs
stos
add
xchg
sub
lret
and
push
push
jae
es
aaa
push
inc
xchg
notl
jle
mov
fnstenv
fisttpl
inc
fildl
or
dec
xor
inc
sub
shr
movsb
pop
int
jno
repnz
pop
or
adc
push
adc
or
or
xlat
jmp
push
xlat
and
sti
imul
cmp
sub
fldl
jb
aaa
push
loop
aad
mov
pop
jmp
int
sahf
fstpl
pop
fisttpll
cmp
ficomps
mov
out
adc
cmp
clc
fstpl
out
jno
das
rol
mov
fnstenv
ljmp
xor
sub
jns
or
sub
sub
loopne
fwait
stos
cli
test
and
sub
push
and
lods
lock
fcomps
and
add
icebp
lods
xchg
ret
add
lret
jle
pop
stos
pop
dec
push
mov
lret
add
sbb
mov
mov
dec
shll
mov
cs
bound
rclb
je
push
or
in
jle
in
daa
pop
mov
add
aam
mov
jnp
iret
ss
xchg
out
xor
mov
inc
adc
push
push
or
repz
adc
mov
out
in
jbe
pop
cltd
mov
gs
stos
push
mov
lods
adc
jo
adc
repz
ret
mov
imul
jae
sbb
or
sarl
fisubs
inc
ljmp
mov
popf
pop
pop
jle
pop
inc
adc
and
adc
test
cli
cmpsb
cmpsl
cmp
xchg
popf
inc
mov
lret
stos
call
mov
pop
inc
in
fbstp
mov
xor
jb
jb
xlat
insb
pop
xor
decb
cmp
adc
fnsave
fildl
add
mov
or
fmull
jnp
sbb
jmp
ljmp
and
ret
add
add
sbb
cli
repz
mov
ds
cmp
push
idivl
stos
or
scas
cmp
cmp
shrb
sbb
cmp
or
test
pop
js
int3
ja
outsl
mov
add
push
roll
cmpl
xor
ljmp
inc
inc
enter
in
cltd
mov
popf
jge
sub
or
adcl
mov
pop
adc
fimull
inc
cmp
shl
aaa
pop
cli
jno
mov
sbb
cmp
xlat
pop
sahf
and
jne
and
in
mov
les
mov
lfs
dec
mov
out
jae
jbe
and
insl
sti
rcrl
xchg
addr16
jnp
inc
shrl
push
out
rolb
mov
xor
ja
mov
mov
lea
in
leave
ss
or
jae
mov
js
incb
sti
popa
and
pop
sub
push
pop
rolb
lret
sub
pusha
xor
enter
sti
mov
mov
clc
jge
mov
jo
daa
mov
jl
gs
fs
jb
xor
lock
das
or
in
les
jns
aam
and
mov
sub
insl
cmp
cld
sub
mov
push
inc
ss
push
lods
mov
aam
xchg
outsl
mov
mov
push
cli
test
divb
mov
jae
aam
enter
sbb
daa
pop
sahf
hlt
jns
mov
imul
jge,pt
and
add
or
hlt
and
cltd
xor
daa
mov
inc
leave
outsb
movzwl
push
or
push
jno
test
idivb
in
pop
xchg
add
add
jno
int3
push
dec
in
or
ret
sahf
cmpsb
inc
daa
scas
mov
pushf
pop
inc
inc
test
in
sub
mov
cld
and
negb
std
sbb
mov
sarb
outsb
repnz
nop
pop
leave
sub
cmp
mull
push
cmc
mov
mov
pop
jae
bound
clc
mov
aam
pop
test
and
xchg
xor
fisubrs
icebp
outsb
mov
jno
jo
adc
je
in
or
mov
fucomi
mov
bound
mov
mov
inc
cld
out
mov
cmp
mov
mov
cmp
push
mov
or
inc
sbb
jp
xlat
push
bound
and
rorb
push
mov
jo,pn
addb
stos
mov
sub
mov
mov
push
arpl
cmp
mov
dec
push
popf
jno
ss
mov
lcall
xor
stos
push
loopne
push
mov
es
push
add
je
loop
notb
or
dec
mov
adc
jge
cld
or
les
xlat
xchg
push
out
jnp
cwtl
fldenv
daa
cmpsb
mov
inc
jo
push
or
sub
mov
or
inc
cltd
cwtl
xor
rorl
sbb
push
pop
cmp
insl
shl
xor
sub
lahf
push
arpl
fs
mov
es
sbb
pop
popf
adc
cmpsb
cmc
sub
insb
aas
psrlw
jne
int
fldl
or
cwtl
ljmp
inc
in
add
les
xor
mov
int
addl
cmp
cmpsl
pop
or
push
jge
cli
or
pusha
mov
lock
mov
mov
inc
daa
fnsave
in
xorl
imul
pop
out
call
or
xlat
lcall
cli
imul
popa
dec
or
pop
jns
les
fcoms
aaa
dec
xchg
and
in
cli
test
pop
inc
loop
jmp
aas
out
push
adc
out
hlt
fwait
mov
jae
mov
lret
push
or
adc
cmpsl
out
in
pop
jne
imul
cmp
or
cmp
not
dec
test
and
jnp
pushf
test
push
adc
je
dec
pop
mov
xchg
or
dec
aad
sbb
xor
mov
xchg
add
jns
mull
test
in
popf
out
call
imul
cmc
adc
int
jl
mov
dec
or
ret
lahf
push
js
or
rcr
inc
arpl
mov
sarb
mov
call
insl
xchg
cwtl
xor
ja
pop
int
sbb
std
loope
rolb
inc
mov
rorb
psubusw
mov
mov
loope
fistpll
stos
push
dec
sbb
shrl
rcrl
int
dec
jg
xor
into
cmp
or
subb
not
incb
out
sub
fstpt
cltd
cmpsl
shr
xor
ret
pop
imul
push
dec
rcll
je
daa
xlat
jmp
sub
inc
mov
int3
in
scas
lods
and
test
adc
jg
mov
push
mov
sti
in
dec
movsl
xlat
in
and
mov
dec
scas
inc
fdivrs
imul
push
imul
add
stos
xor
and
mov
mov
cmp
xchg
movsb
movsb
mov
push
stos
int
mov
cmp
adc
add
sarb
xor
rcll
xchg
sti
ss
sbb
icebp
push
jno
mov
outsl
fs
lret
jge
dec
fldenv
fnstcw
ja
inc
mov
cwtl
gs
xchg
xchg
xor
test
and
push
jp
cmp
sub
mov
pop
sbb
out
push
fistpl
clc
iret
nop
mov
pop
int
subb
jge
je
repz
jle
pop
xchg
popf
jmp
bound
mov
scas
fdiv
fistpll
xor
sbb
push
movsl
mov
popa
inc
xchg
nop
leave
inc
mov
in
sbb
out
pop
pushf
stos
and
dec
icebp
cmpsb
sub
fucomip
pop
mov
jp
xchg
pop
test
and
xchg
push
pop
outsb
adc
xchg
sbb
out
xchg
xchg
xchg
adc
push
lret
mulb
sub
out
mov
fldt
fadds
push
cmp
in
mov
cmpsb
out
dec
aam
loop
pop
xor
les
inc
xor
ds
test
xorb
and
rcrb
adc
ds
pop
test
push
pusha
js
arpl
shr
sub
mov
fs
jo
leave
test
movsb
and
pop
loop
movsl
add
adc
xor
outsb
stc
mov
in
cmp
aad
dec
sbb
or
dec
aam
cld
lock
popl
stc
scas
sbb
enter
adc
dec
xor
jne
sub
rolb
push
lds
adc
mov
add
xchg
out
inc
and
out
cltd
lds
adc
mov
shlb
pushl
pop
adc
out
lds
mov
pushf
add
in
in
imul
ss
mov
cmc
mov
pop
mov
enter
sbb
mov
insb
jg
data16
sub
dec
pop
push
icebp
in
movsb
cmp
lods
test
cmpsl
push
insb
aad
lret
or
push
jmp
aad
add
sarb
sbb
inc
testb
lcall
outsl
loopne
dec
and
idiv
jae
jns
mov
inc
aas
cmpsb
cmp
push
jns
mov
dec
out
in
push
sbb
push
or
aas
add
lods
pushf
inc
add
test
mov
xchg
clc
pusha
cmpsl
push
rorl
cmp
in
xchg
movsb
jne
cmpsb
lret
xchg
mov
shlb
push
lods
ljmp
mov
sbb
int3
ret
mov
inc
test
enter
cmp
and
stos
aaa
enter
pop
out
jae
jns
push
call
or
lahf
aaa
insb
cld
movsb
adc
les
mov
adcl
push
mov
fiadds
test
cmp
jno
mov
jno
nop
adc
cli
adc
push
adc
in
fsubr
ffreep
loop
movsb
jmp
insl
out
fcom
std
nop
cmp
fstp
ret
fmul
cwtl
jecxz
jl
sbb
sub
mov
call
sti
mov
test
fs
stos
clc
cmp
ljmp
mov
arpl
cmpsl
mov
mov
shlw
outsl
jo
rcll
out
mov
add
push
dec
pushl
pop
mov
jae
push
xchg
test
loope
arpl
fmul
jg
sub
and
cmp
xchg
shr
xchg
cmp
sub
test
rcrl
lods
loope
xlat
je
imul
sbbl
std
inc
dec
pushf
xor
add
push
mov
jae
int
das
cmpsl
mov
sub
push
sub
and
xor
int
cmp
xor
ds
shrb
insl
mov
fdivp
jno
xor
jno
mov
sbb
xchg
scas
sub
sti
push
fdivs
adc
mov
test
fldt
mov
je
jnp
xchg
xlat
add
add
repz
push
roll
dec
inc
inc
fisttpll
test
mov
shll
sub
imul
xchg
mov
add
sbbb
mov
mov
push
mov
mov
les
and
push
movsb
repnz
mov
and
dec
cwtl
xchg
sahf
cmp
mov
enter
or
xor
lahf
cmp
das
inc
pop
data16
xchg
dec
movsl
mov
push
xlat
outsb
loop
int3
fsubrl
mov
rclb
stos
sub
and
ds
cmpsb
into
das
inc
adc
mov
and
mov
push
mov
pop
xchg
mov
xchg
sbb
orl
sub
xchg
lret
cmpsl
inc
and
jne
push
mov
loopne
int3
bnd
ljmp
xor
pop
push
adc
pop
mov
out
add
bound
sbb
adc
cmpsb
xchg
cmp
lods
daa
pop
cmpsb
and
stos
out
mov
push
scas
mov
xchg
cltd
jo
fdivl
mov
clc
push
mov
mov
test
cmp
lods
inc
fdiv
sbb
mov
pop
cmp
lock
mov
mov
xor
adc
das
pop
lea
rclb
dec
inc
outsl
mov
inc
jp
stc
mov
fildll
jnp
ja
sbb
test
lcall
mov
cmpsl
into
into
ss
inc
lds
std
nop
xor
in
dec
cmpsl
lea
sub
add
leave
and
xchg
scas
jl
ds
mov
lahf
insb
mov
or
add
pop
es
shrb
jmp
arpl
cli
pusha
sub
xchg
shlb
pop
out
insb
rcl
jns
int
das
push
gs
jmp
cwtl
int3
xchg
and
mov
int
sub
mov
int
insl
pushl
mov
dec
enter
xchg
fprem
sbb
movb
shl
scas
xor
jp
arpl
dec
or
scas
adc
call
inc
inc
jb,pn
jne
loop
jecxz
lods
or
fwait
push
and
adc
mov
sub
add
inc
sbb
adc
adc
hlt
js
shr
mov
stos
call
sub
leave
push
into
inc
dec
lock
stos
dec
dec
popf
in
mov
dec
cmpsl
inc
scas
dec
loopne
das
data16
lds
or
add
push
test
mov
in
add
sbb
push
and
adc
mov
int
lock
and
and
push
fistpll
add
pusha
cld
sub
add
into
aam
les
icebp
mov
fistpl
push
in
movsb
daa
push
repz
rcrb
dec
inc
adc
push
adcb
imul
insb
lods
nop
popa
lock
sbb
ljmp
sbb
ret
cmp
mov
push
sbb
pusha
repnz
repz
pusha
fidivl
cmp
mov
inc
pop
mov
cmpsb
mov
push
ja
inc
adc
xor
mov
pushf
sti
fimull
mov
add
push
lcall
arpl
insl
mov
sahf
inc
fsubs
sbbl
xchg
mov
dec
dec
cwtl
dec
ret
inc
or
mov
jnp
pop
nop
pop
lods
mov
shrl
out
push
daa
cmp
dec
mov
pop
jl
sbb
sbb
push
insb
rolb
cmp
pop
mov
cmp
cwtl
jne
jo
in
sbb
inc
dec
pop
pushf
add
popa
adc
pusha
sarb
fs
mov
xchg
shl
push
xchg
sub
push
inc
mov
dec
imul
sbb
push
cmp
xchg
sti
ficompl
jnp
xchg
gs
cmp
and
ficoml
sbb
lock
loopne
out
bound
dec
test
dec
ror
mov
sbb
or
fisttps
mov
jb
sub
stos
mov
dec
dec
fildll
fnstenv
cmc
cmp
and
jle
clc
mov
lcall
mov
notl
rcrl
nop
ret
popa
addr16
mov
lds
add
out
cli
cmpsl
stos
mov
or
xor
std
jle
xor
or
data16
cmp
ret
pop
dec
les
lods
xor
js
dec
pop
imul
jbe
xchg
xor
pop
jl
mov
call
or
les
mov
faddp
pop
jge
push
fsubl
inc
cwtl
fdivs
lods
adc
jl
fs
cs
adc
mov
out
mov
mov
fsubrp
imul
mov
xorl
mov
rorl
cmp
cld
nop
incl
lcall
lea
inc
or
decl
mov
ds
jmp
mov
rcl
cmp
xchg
std
jg
or
sbb
or
add
repz
pop
lahf
jb
inc
sub
addb
mov
icebp
adc
fcoml
sbb
repnz
pop
ret
sub
mov
repz
inc
push
fcmovnu
jne
sbb
insb
or
xchg
jmp
sub
std
loopne
call
popa
sbb
mov
daa
jg
sub
in
enter
scas
dec
mov
mov
dec
shr
ret
lret
jl
mov
rcrl
cld
popfw
sbb
test
sub
insl
gs
mov
mov
jo
stc
cli
in
pop
lods
outsb
add
mov
jecxz
cmpsb
es
pop
inc
daa
mov
inc
xorl
adc
cmp
ss
xor
jo
mov
popf
sahf
test
dec
jnp
xchg
sahf
dec
pop
in
adc
cld
movsl
pop
or
call
xor
add
test
or
add
in
pop
push
push
or
and
or
fwait
scas
push
fimull
outsb
lcall
movsb
pop
mov
aas
push
pusha
andl
push
fadds
aam
das
push
push
test
pop
pop
and
lret
jmp
stos
mov
xor
add
jae
in
push
dec
les
aad
sub
aad
ret
pop
push
pop
pop
imul
mov
je
test
ss
and
jp
pushf
out
inc
idivl
mov
add
sub
mov
sub
mov
fisubrl
mov
xchg
in
in
les
push
insl
jb
aam
jo
add
or
test
fldt
add
cs
cwtl
xchg
scas
mov
mov
js
xchg
sub
insl
ficompl
outsl
dec
mov
mov
jns
mov
cld
jbe
scas
data16
vpmacsdqh
popf
lret
cltd
test
adc
fs
or
mov
cmp
in
sbb
shl
pop
je
mov
cli
sub
and
in
das
mov
cld
mov
fs
jmp
push
or
mov
jb
lahf
xchg
int3
jl
or
xchg
mov
mov
repz
repz
lods
stc
sbb
test
sbb
mov
outsb
mov
sahf
xlat
in
xchg
and
cmp
inc
in
pop
shlb
or
sub
das
cmc
and
mov
iret
pop
mov
and
mov
mov
fs
fwait
fstl
pushf
popf
je
xor
nop
or
scas
mov
jl
push
stos
loop
aad
push
icebp
outsl
sub
pushf
mov
scas
negb
xchg
sbbl
add
std
data16
xor
fs
push
and
sti
jbe
pop
scas
pop
loop
jns
sub
data16
out
mov
rolb
adc
dec
lcall
ds
mov
repz
sub
jl
xor
loop
mov
outsb
addl
sub
insl
rcl
subl
shrb
xlat
inc
add
sub
dec
lcall
call
xchg
out
cltd
push
pop
sub
flds
mov
push
sbb
movsl
jmp
je
and
fnsave
out
sbb
loope
rcll
mov
push
imul
fs
sub
je
mov
fadds
xchg
aam
fsubr
xchg
mov
jns
popa
push
inc
push
mov
xchg
loopne
cmp
stos
repnz
jl
sub
xchg
cmp
dec
popa
icebp
or
int3
xchg
xchg
loopne
mov
mov
loope
cmpsl
das
inc
cmp
daa
sbb
push
lods
int3
pop
psrad
notb
repz
or
lock
inc
jno
loop
call
inc
jo
rcrb
xchg
js
es
pop
dec
cmp
iret
ds
pop
in
xchg
xchg
sub
fldenv
fistpll
xchg
mov
and
add
mov
inc
es
addr16
fbld
and
push
pusha
jle
call
inc
mov
je
mov
incb
es
xchg
scas
sbb
inc
xchg
aas
mov
psraw
popf
or
fadds
repz
int
or
mov
test
jg
imul
out
pop
push
and
adc
jecxz
orl
je
sbb
shlb
push
shrl
dec
push
mov
es
aas
in
mov
ret
enter
mov
imul
adc
pop
add
xchg
push
inc
mov
nop
cmp
ficomps
loope
out
int3
and
sub
sub
in
sub
dec
inc
mov
jne,pt
sub
test
push
scas
cmp
xchg
test
pushf
aas
jb
push
aas
or
enter
and
scas
mov
mov
fs
mov
push
mov
orb
push
sub
xchg
adc
sub
push
push
int3
ss
cmp
inc
pop
pushf
mov
in
xor
movsb
cs
dec
mov
and
sahf
fisubl
or
pusha
ror
mov
push
dec
sbb
vpcomuw
inc
cld
pushf
or
mov
es
adc
lahf
mov
cmc
xchg
imul
dec
outsl
jp
jnp
aam
movsl
xor
jle
sbb
sbb
stc
fdivs
shr
sbbb
stos
in
fsubrs
dec
mov
adc
pop
mov
out
sub
jbe
and
sub
iret
jae
and
cmp
add
fstpl
movsl
movsb
xchg
jl
lods
jl
and
sub
cmpsl
jns
test
sar
cld
jnp
fidivrl
xchg
and
xor
sbb
add
popa
iret
jl
or
jl
sub
push
aad
rcll
jne
loopne
jb
cmpsb
push
rorb
sbb
mov
mov
push
sub
push
icebp
lret
movsb
xor
or
movsb
mov
sub
pop
sbb
rorb
push
adc
adc
inc
xchg
mov
outsb
icebp
jae
jns
and
out
push
mov
cli
add
mov
sbb
xchg
fisttpl
cmp
test
xlat
mov
test
sbb
xchg
mov
subl
xorl
rcr
mov
mov
fiadds
inc
mov
rolb
or
adc
xchg
lcall
loopne
insb
ret
pop
or
test
daa
fldenv
adc
push
xchg
xchg
mov
pop
add
mov
cld
pusha
es
mov
mov
adc
int
mov
sub
dec
pushf
leave
sbb
push
xchg
dec
popf
lahf
xor
test
push
ret
fcmove
cmp
insb
push
jge
imul
lcall
push
repnz
jns
xor
sti
dec
inc
inc
fildll
pusha
xorb
inc
cmpsb
repz
sbb
jl
mov
popl
dec
or
push
shl
lahf
mov
inc
and
mov
repz
pop
pushf
mov
xor
and
or
xchg
jno
cbtw
fnsave
pop
dec
outsl
push
inc
outsb
cltd
aas
push
rcrb
cmpsb
je
sbb
pop
sbb
jbe
ror
sbb
jne
jge
sbb
mov
inc
les
fwait
sbb
sub
lds
andb
lods
xlat
out
jg
xlat
and
clc
and
rclb
add
inc
mov
shrl
jp
xlat
movnti
popf
scas
fildl
out
repnz
sbb
push
dec
or
push
hlt
les
movsl
imul
in
lea
decb
int3
mov
push
sub
outsl
shrl
gs
fs
shrb
inc
cmp
or
insl
loopne
repz
cmp
ss
push
mov
sbb
add
shll
repnz
leave
or
inc
fistpl
dec
dec
jmp
xchg
js
jbe
jo
test
imul
pop
inc
add
aas
inc
adc
adc
push
sbb
stos
or
dec
rorb
imul
call
push
mov
or
je
addl
mov
xchg
enter
xorb
popf
push
arpl
mov
test
sub
xor
or
lods
lret
mov
in
outsb
out
insl
jno
pop
add
aad
xchg
xchg
dec
dec
call
popa
inc
out
sub
adc
inc
dec
inc
shll
inc
ljmp
push
mov
xchg
xor
xorl
andb
jmp
jb
mov
dec
test
out
mov
sbb
leave
lods
insb
xor
push
insl
stos
adc
cwtl
popa
clc
sbb
bound
inc
or
push
bound
int3
pop
mov
or
cs
dec
mov
sub
rcl
push
inc
dec
movsb
mov
std
inc
daa
mov
in
stos
lds
fcomps
xor
stos
enter
inc
sub
sti
imulb
imul
cmp
nop
repnz
outsl
jnp
pushf
sbb
xchg
push
mov
sub
pop
add
cld
scas
scas
cmp
mov
arpl
movb
ror
sti
xchg
leave
addr16
dec
std
fsubs
dec
inc
inc
add
loope
lcall
pop
test
inc
subl
pusha
mov
jg
hlt
lret
lret
out
push
and
andb
fstpt
or
ds
in
push
roll
iret
js
lea
jecxz
cltd
jns
pop
bound
jns
cli
pusha
jl
pop
aam
push
sbb
hlt
cli
jnp
leave
push
mov
adc
lret
inc
pop
adc
aaa
fimull
std
jae
ljmp
mov
fld
sub
loope
bsr
mov
lock
jns
xor
movsb
xor
adc
and
bound
nop
cmp
aam
cmp
lds
ljmp
into
ret
adc
cmp
mov
add
rcrb
sbb
mov
sarl
insb
jp
outsl
mov
popf
or
cld
inc
lods
test
jb
imulb
mov
sbb
int
icebp
in
shl
xor
jl
mov
push
test
push
fwait
push
sarl
imul
fwait
adc
jns
jns
jle
sahf
push
je
movsb
test
push
jns
push
pop
andb
scas
sub
loope
sub
mov
jno
lds
jge
mov
scas
insb
mov
lret
adc
pop
iret
fcmove
in
daa
mov
ds
mov
jge
xchg
push
sbb
ja
adc
add
push
push
mov
ret
imull
mov
jecxz
xchg
xchg
sahf
mov
sbb
test
and
cmpl
mov
in
stc
fs
and
jbe
jle
pop
cmpsb
xor
loopne
fidivl
pop
insl
inc
pusha
pop
cmp
sahf
loop
and
test
movsl
scas
sbb
or
adc
int3
jbe
out
inc
push
jg
icebp
xchg
cmp
gs
bound
leave
jmp
stos
test
dec
ja
pop
mov
mov
or
dec
scas
jg
mov
ret
xor
add
cmpsl
es
inc
xor
mov
imul
and
sar
sub
out
cmpsl
cmp
int
push
mov
sub
push
xchg
nop
pushf
test
dec
mov
pop
out
hlt
arpl
jo
xor
mov
bound
ljmp
iret
adc
aad
mov
shll
movsl
mov
add
jo
or
sbb
adc
nop
repz
hlt
add
adc
push
push
mov
push
mov
mov
jae
xor
int3
sub
sbb
mov
in
faddl
cltd
or
push
and
jp
xchg
jl
and
inc
mov
pop
jne
mov
jnp
insb
or
xor
inc
cmp
inc
cld
add
lahf
sbb
cmp
cmp
cmp
int
adc
mov
bound
nop
jle
arpl
xor
and
sahf
mov
cmp
mov
int
mov
dec
hlt
adc
xlat
push
jecxz
and
shll
fiadds
ret
jle
popa
lahf
aad
ret
aam
rorl
movsl
xor
enter
jmp
adc
cld
test
pop
fsubp
int
rsm
faddl
into
adc
leave
dec
pop
inc
mov
vmovss
adc
aas
cmp
dec
mov
adc
or
jae
data16
add
faddl
sub
push
rclb
dec
call
lcall
adc
inc
push
aaa
pop
xchg
xchg
out
adc
je
test
lcall
pop
xor
pop
std
clc
mov
cmp
pushf
xor
jp
xlat
out
cld
push
fs
mov
loopne
bound
jbe
pop
push
adc
push
jnp
sbb
mov
or
xchg
pop
pop
decb
adc
ljmp
and
add
jp
adc
pop
pop
xor
mov
sub
fs
mov
mov
mov
and
imul
adc
hlt
inc
mov
test
push
jmp
out
mov
outsb
in
mov
out
mov
dec
jne
sub
jns
sbb
decl
adcl
int3
jnp
test
mov
outsb
xchg
lret
dec
ss
push
mov
cwtl
test
cmc
push
mov
ret
jmp
push
scas
jno
sub
or
dec
cwtl
inc
lret
push
mov
add
dec
or
pop
mov
add
or
jo
sub
cmpsb
sti
sar
scas
push
lcall
pop
lret
and
cmc
addb
adc
pop
jle
stos
loopne
loopne
rclb
inc
jo
es
into
nop
jmp
movsl
js
push
mov
cmp
popa
data16
or
imul
cmpsl
js
paddusw
inc
ja
insl
fistpll
scas
cs
push
ret
subb
repz
adc
dec
mov
mov
in
stos
outsb
fldenv
aad
call
sub
sbb
mov
mov
daa
aad
push
vucomisd
xor
xchg
mov
int3
movsb
mov
sbb
cmp
mov
jbe
stos
cmp
movsl
push
loope
pop
cld
test
cmp
aas
or
repnz
lret
xchg
arpl
stc
mov
dec
push
popa
push
jo
ss
jbe
scas
fsubs
sbb
sub
out
lret
adc
mov
lock
push
mov
loop
pop
inc
sbb
dec
insl
cmp
cmp
pushl
and
adc
push
movsb
pop
dec
mov
jbe
mov
pushf
sub
jl
inc
push
cmc
push
adc
mov
push
int
mov
or
leave
xor
adc
lahf
sbb
hlt
popf
inc
int
or
mov
aam
out
jle
pop
stos
jle
mov
lcall
pop
out
das
mov
push
jge
inc
xchg
dec
fsubrs
leave
cli
mov
sub
out
and
es
cmpsb
iret
xrelease
outsl
push
jmp
icebp
sub
mov
adc
lret
add
mov
out
cmp
pop
sbb
push
mov
mov
pop
lods
pop
addl
pop
ss
pop
popa
lods
xlat
addr16
dec
dec
sub
sti
rol
scas
sub
repz
add
push
lods
cmp
adc
mov
dec
xchg
je
ficoms
stos
sbb
cmp
or
sahf
mov
cmpb
dec
jnp
repz
addr16
cmp
jle
inc
dec
cmp
xchg
xor
push
adc
push
dec
inc
cmp
jns
rcrl
orb
rorb
adc
stos
mov
pop
ret
lret
sbb
popf
cmp
inc
add
clc
cmp
sub
sti
and
jp
ret
shl
mov
ljmp
xor
xchg
sub
out
cmp
jmp
aam
repz
fsub
imul
pop
lds
dec
adc
out
push
jge
add
nop
add
lret
fildl
cmpsl
aad
sub
cmp
sub
popf
pop
mov
stos
int
outsl
mov
out
inc
notl
cmpsb
sub
shlb
ret
fs
cmp
fnstsw
stc
inc
icebp
pop
pop
sbb
mov
mov
mov
mov
inc
subl
into
js
pop
inc
aad
dec
cmpsb
aam
sub
jp
xchg
addl
lods
jmp
lret
xchg
sar
in
out
pop
pop
and
xchg
out
lods
jl
loopne
stos
ss
fisubs
cmc
mov
sahf
jmp
sbb
insl
jge
pop
xor
int
leave
aad
jo
hlt
add
iret
stos
fistpl
cmc
and
and
imul
repnz
sub
in
gs
cmpsl
sarb
sub
xchg
faddl
outsl
push
loopne
ret
addr16
and
loope
jb
sbbl
or
xchg
cmpsb
mov
pop
cwtl
fildll
adc
repnz
mov
cli
xchg
cmp
test
out
fstpt
mov
cmc
sub
and
sti
jb
or
in
mov
xchg
push
lea
lret
jecxz
cmpsb
mov
popa
lods
add
clc
add
xchg
pop
pop
arpl
out
adc
mov
pop
dec
out
pop
ret
aam
and
and
pop
insl
in
cmp
add
movsb
xchg
jge
stos
rcrl
and
je
fcmovne
xchg
xor
sub
insl
jnp
dec
sbb
leave
clc
popa
jbe
add
pop
add
negb
pop
outsb
inc
jne
addr16
call
lcall
sbb
add
cmp
add
sub
or
loopne
shrb
push
cmp
pop
push
mov
mov
xchg
out
arpl
popa
packuswb
mov
push
jne
jecxz
out
mov
mov
jmp
ljmp
push
or
and
mov
mov
test
stc
add
jnp
or
aas
mov
xchg
inc
scas
sbb
add
add
ficoml
push
mov
fbld
loopne
lds
fistpll
dec
imul
in
not
xor
outsb
iret
daa
xor
mov
push
add
fcomps
push
sub
cmp
mov
sub
jp
test
movsl
js
push
inc
fistl
jg
mov
sub
aam
or
inc
lret
idiv
xor
cmp
mov
nop
push
lcall
lret
push
loopne
sub
jecxz
cmpl
push
pop
mov
xchg
mov
ljmp
int3
stos
es
mov
ja
push
in
ja
adc
or
data16
jns
or
mov
mov
push
sbb
xchg
adc
test
pop
lret
xor
and
call
jae
pop
push
mov
rorb
jae
push
sbb
cmp
adcb
mov
mov
mov
mov
cmc
lahf
mov
cmpsl
push
outsb
negl
or
push
inc
scas
stc
push
push
scas
jb
mov
cltd
pop
xor
movsb
mov
movsb
pop
ja
out
xchg
loopne
pop
std
push
out
mov
push
aas
rorl
jmp
in
in
mov
rcrl
mov
xlat
mov
lret
mov
inc
push
jge
mov
cmp
inc
push
sbb
jae
adc
bextr
dec
add
daa
inc
fdivp
pushf
push
xchg
pop
inc
cmp
gs
les
hlt
ret
stos
mov
jg
rclb
pop
aaa
add
lock
or
lahf
lock
dec
sbb
xchg
cmp
mov
stc
jnp
std
loop
insl
mov
mov
in
or
fisttpl
ret
scas
lds
dec
test
jb
in
dec
jbe
ss
shll
or
jne
lret
andb
cwtl
int
scas
jp
adc
mov
call
xchg
sbb
mov
aam
push
lret
movsb
or
inc
and
lcall
rorb
iret
sbbb
enter
inc
aam
xchg
and
sbb
jbe
mov
mov
hlt
or
lahf
add
stos
pop
jp
addr16
negb
xchg
aaa
push
pop
shrb
jmp
inc
lret
dec
jb
mov
sbb
dec
cmc
cs
xchg
cwtl
mov
push
or
inc
jl
inc
dec
mov
pop
int3
and
outsb
sbb
sub
in
movsl
mov
mov
sub
mov
adc
inc
fwait
in
pusha
mov
les
and
or
jle
xchg
or
outsb
adc
cmp
daa
xchg
movsl
mov
mov
mov
rcrb
push
mov
arpl
adc
sub
sub
add
inc
mov
mov
cmp
subb
inc
enter
mov
sbb
dec
packuswb
jle
addr16
pop
test
adcl
jo
sbb
insl
mov
jnp
add
pop
ret
or
fmull
mov
aam
or
test
fstps
sbb
shlb
pop
cmp
int3
cwtl
push
lahf
sti
bound
push
and
adc
cmp
xor
aad
and
mov
lea
out
xchg
xchg
dec
mov
pushf
movsl
idiv
sbb
shll
sbb
and
pop
xchg
add
mov
call
sub
ds
imul
push
arpl
setg
cmp
stos
loope
pop
sbb
mov
add
xlat
or
shr
stos
into
cmp
xchg
jne
fiaddl
pop
rcl
ret
sub
arpl
fucomip
lea
dec
inc
xchg
or
pop
dec
xchg
push
das
icebp
adc
mov
js
stos
sbb
jl
dec
mov
leave
sbb
out
cmp
aaa
cmpb
sbb
xchg
sub
push
and
cmpsl
outsb
cmp
jp
xchg
cmp
cmp
and
cmpxchg
lods
addr16
sti
sbb
fwait
das
push
fdivl
jge
outsb
inc
lret
loopne
sbb
jg
push
gs
sbb
aaa
outsl
jbe
call
sbb
xchg
mov
pop
mov
xorb
fcoml
cmp
or
and
xchg
arpl
or
aad
popa
mov
out
das
and
lods
and
jo
mov
inc
out
and
cmp
mov
fwait
inc
outsb
mov
cmp
cwtl
add
clc
push
fxch
mov
pop
es
sbb
adcl
and
pop
pop
sub
jmp
jnp
mov
dec
into
dec
jmp
adc
aad
sbb
dec
add
lcall
arpl
ja
lahf
fs
fxch
dec
insl
mov
pop
test
push
les
into
xchg
push
dec
or
add
jnp
pop
adcl
jnp
mull
push
pop
mov
inc
inc
jle
addr16
popf
mov
inc
hlt
xor
dec
mov
sahf
jmp
xor
pop
add
shlb
adc
push
sbb
ret
inc
adc
mov
pop
dec
or
shrl
jno
lea
cmp
cmpsl
adc
jg
je
js
cmp
jp
pusha
jle
es
xor
mov
pop
adc
dec
cmpsl
xor
stc
adc
in
daa
cmpl
dec
enter
in
shl
xsave
pushf
mov
push
pop
aam
loopne
and
mov
cmp
xor
movsb
push
jge
pop
in
xchg
xor
inc
sbb
fsts
subl
xor
or
push
xchg
jle
imul
lods
imulb
mov
icebp
mov
ss
push
sub
lret
or
mov
imulb
outsb
push
jb
mov
add
mov
iret
mov
shr
sub
cmp
mov
xchg
xorl
fistl
jns
push
add
js
je
outsb
enter
test
cmp
les
in
mov
add
fsts
inc
and
in
sbb
cli
push
mov
dec
orb
dec
add
push
enter
mov
test
insb
xchg
push
or
rcr
pop
mov
inc
cmp
imul
mov
jge
sbb
fcomip
and
or
je
pop
in
js
fcmove
xchg
popf
shl
jmp
hlt
jae
cmpsl
add
xchg
lret
aad
jge
dec
jl
std
hlt
pop
xchg
push
mov
mov
pop
cmc
cmpsb
aad
lock
mov
pop
mov
call
pop
pop
fidivl
mov
cmp
xor
lret
or
roll
mov
repz
pusha
jmp
or
hlt
imul
xchg
lret
imulb
aas
out
add
push
pop
sbbl
or
jmp
mov
inc
cmc
ret
cmp
push
cld
cmc
ret
sbb
fdivl
xor
mov
xchg
mov
xor
repz
jo
or
outsb
jp
jnp
dec
lcall
sarl
mov
jge
mov
mov
adc
sarb
iret
pop
dec
lds
pushw
sub
lret
icebp
les
mov
outsl
icebp
push
insl
ficoml
mov
aas
xchg
shlb
xchg
sbb
xchg
sbb
sbb
lods
xor
jecxz
ret
cld
sub
stc
pop
inc
or
adc
les
das
dec
inc
add
push
popa
and
je
je
nop
cmp
push
sbb
push
in
add
iret
inc
jl
lcall
cmp
sub
mov
mov
jp,pt
lcall
jbe
jae
inc
add
mov
xorl
mull
mov
je
scas
sub
imul
shlb
and
orb
jge
mov
mov
int3
fnstsw
mov
out
insb
sbb
imul
paddw
mov
adc
sbb
adc
rep
jo
add
inc
ret
push
lcall
sub
lods
icebp
cs
out
jp
push
stos
mov
ret
nop
insl
pop
mov
lahf
mov
mov
cmp
arpl
test
push
push
fimull
arpl
int
xchg
stos
xchg
inc
jno
icebp
cmc
out
loop
lahf
xor
push
jecxz
or
mov
leave
pop
push
mov
sub
std
scas
or
push
aaa
sti
inc
push
jbe
dec
pop
cmp
add
stc
in
in
inc
or
std
pop
gs
mov
sahf
mov
or
inc
dec
stc
subl
fdivrp
pop
btc
jmp
mov
mov
pop
adc
je
sti
lahf
insb
add
mov
mov
lret
mov
loop
in
lret
push
in
add
inc
std
dec
xor
jecxz
loope
out
bound
cli
inc
mov
scas
mov
dec
aaa
enter
les
mov
mov
pop
movsl
stc
mov
mov
rolb
pushf
shlb
bound
not
in
negl
cmp
xor
mov
ret
mov
push
mov
push
pop
fdivs
adc
cmp
mov
mov
sub
mov
cld
fcoms
adc
add
inc
lods
notl
mov
rcl
xchg
xchg
je
mov
scas
dec
mov
add
hlt
pop
cs
jns
test
iret
push
call
in
sbb
dec
dec
in
cmp
push
movsl
push
sub
loop
rcrb
sub
mov
cmp
jl
sub
push
in
fcomi
mov
mov
xor
sub
add
mov
test
xor
push
out
sbb
xchg
aad
inc
pop
sub
lds
pusha
ficoml
pop
push
adc
inc
xchg
loope
or
mov
and
xor
adc
cwtl
sub
push
sbb
int3
dec
mov
add
dec
repz
or
and
mov
jne
pop
or
cs
adc
mov
push
or
jmp
sarb
mov
inc
addr16
mov
jmp
add
fwait
cmp
xor
mov
dec
sub
adc
rol
xchg
push
mov
xchg
pop
clc
test
fs
pushf
mov
xchg
jno
pop
xor
dec
cmc
adc
mov
dec
loop
push
rorb
inc
repnz
cli
in
clc
push
or
or
xor
mov
cltd
sub
pop
pop
inc
push
shll
fcompl
xchg
sbb
rol
and
cs
sbb
mov
sbb
jb
adc
sbb
adc
enter
pop
fucom
mov
cmpsb
insb
and
scas
out
imul
xor
ds
mov
mov
hlt
aaa
je
aaa
push
pusha
jmp
jne
push
loopne
dec
in
fnstsw
adc
sub
jo
mov
dec
int3
mov
adc
and
cmpsl
xor
push
inc
fwait
scas
scas
cmp
mov
and
xchg
mov
pop
stc
and
mov
mov
or
mov
stos
clc
pop
shlb
mov
mov
adc
xor
mov
pop
xchg
push
jg
sub
ss
dec
je
repz
push
add
cmp
out
fisttps
lds
icebp
mov
mov
sbb
jno
jecxz
add
push
insl
addr16
mov
sarl
divb
cmp
pop
and
mull
call
xor
mov
js
sub
add
push
adc
stos
pop
fs
lock
dec
gs
fists
pushf
imul
mov
jp
fisubrl
xchg
inc
push
mov
xor
rol
es
or
and
pop
mov
and
mov
incl
mov
lea
or
jno
sbb
sbb
xlat
test
jnp
sub
in
and
test
or
mov
sub
movsl
push
inc
loop
clc
sbb
push
arpl
push
xlat
aaa
jle
push
pop
aad
and
pusha
jg
push
adc
dec
add
adc
rcrl
mov
or
dec
out
dec
add
add
dec
jl
cmp
sbb
enter
ret
call
inc
lods
push
xchg
cmp
lock
mov
push
sbb
mov
shll
int3
mov
mov
mov
pop
cs
fwait
imul
dec
cmpb
cmpb
dec
pop
pusha
popf
jb
std
push
test
test
cld
mov
adc
inc
sahf
dec
xor
sbb
enter
aas
nop
jecxz
shll
mov
push
push
iret
out
call
lret
or
mov
adc
sahf
xorl
pop
sub
js
adc
push
jmp
imul
jo
loope
std
fadds
dec
testl
pop
push
xchg
aas
clc
test
adc
loopne
xorb
scas
add
mov
hlt
xor
hlt
lea
push
pop
mov
cwtl
icebp
and
xchg
and
or
enter
shrl
push
repnz
addr16
cmpsl
dec
sub
rcl
rcl
rcr
ljmp
xchg
dec
test
jecxz
and
in
aas
in
pop
or
ds
leave
stos
insb
or
fldl
rol
std
fildl
inc
fwait
in
out
push
fcoms
pop
push
repnz
mov
insl
xor
cld
inc
shl
mov
in
pop
dec
jmp
out
mov
jmp
inc
lret
repnz
subb
push
mov
fwait
out
mov
pop
out
enter
push
fcompl
jmp
push
ds
xchg
pop
add
inc
adc
jbe
pop
aaa
insb
aad
rcll
inc
sub
inc
mov
add
jae
aas
in
inc
push
push
jb
push
cmp
push
cmp
and
fnstcw
in
ret
pop
jg
in
rcrb
lcall
ljmp
mov
enter
data16
pusha
cmp
leave
or
into
pop
and
push
push
dec
add
pop
add
push
push
mov
sti
inc
inc
cmc
fs
leave
jge
xchg
iret
mov
orl
jmp
or
pop
rcr
add
aaa
adc
push
hlt
mov
cvtps2pd
aad
xchg
inc
ret
push
pop
mov
inc
fbld
xchg
rol
stc
mov
jno
stc
dec
insb
cmp
adc
inc
sbb
inc
clc
cmp
add
inc
movsl
mov
xchg
and
push
lea
iret
mov
sub
icebp
mov
iret
daa
xchg
fnstcw
out
mov
aad
inc
pop
daa
popa
test
and
fs
inc
popa
xor
int3
shrb
lret
cmp
xchg
fsubr
call
push
lahf
jecxz
fcmove
hlt
imull
mov
loopne
sti
inc
dec
sub
aad
ror
xchg
dec
cli
out
cmp
enter
aas
jge
pop
fldcw
lods
ljmp
gs
cmp
hlt
add
cwtl
pop
fisubl
xchg
jp
pop
lret
lock
sbb
mov
aam
inc
insb
pop
jne
fiaddl
mov
dec
aam
mov
add
mov
loope
roll
pop
fidivrl
cli
lcall
dec
sbb
pop
cwtl
xchg
sub
push
dec
imul
mov
decl
mov
jp
jmp
fcmovu
dec
in
push
or
jmp
daa
aam
and
pop
jo
pop
ja
or
mov
lods
loope
daa
dec
mov
aaa
cld
xor
adc
mov
dec
adc
ljmp
xchg
jno
bound
stos
dec
loop
mov
mov
dec
jne
sub
dec
leave
mov
arpl
mov
daa
std
subl
rcll
js
repz
jbe
pop
out
lea
or
lcall
adc
cmp
mov
inc
insl
mov
dec
hlt
inc
lods
fistpl
insl
addr16
rcrl
push
xchg
mov
xor
xlat
xchg
mov
or
sub
mov
jg
adc
test
lods
insl
adc
jecxz
sub
xlat
sti
sbb
mov
sub
mov
fdivp
or
fwait
or
lods
push
mov
inc
sti
rolb
inc
hlt
sub
imul
xlat
mov
pushf
dec
push
add
movsl
test
adc
push
jp
sbb
rclb
test
mov
inc
ljmp
iret
sbb
inc
loope
inc
popa
aad
adc
pop
sbb
pop
sbb
lods
shll
scas
or
or
loop
xor
xchg
pop
cltd
xchg
test
aam
js
clc
and
mov
sub
fistpll
push
lret
mov
adc
movsl
cmp
push
fadds
jo
mov
inc
leave
lahf
or
jns
into
dec
repz
xor
mov
inc
xchg
ljmp
fsub
aam
push
jne
mov
js
fcoms
dec
imul
je
mov
jge
scas
lret
jo
cld
scas
push
pop
xor
jno
leave
decl
jae
jg
and
xchg
mov
sub
outsl
in
push
jnp
inc
sbb
testl
and
inc
push
cmpsl
sbb
or
pop
jae
movsb
lods
dec
pop
mov
fmull
rolb
xchg
xor
mov
xchg
aad
mov
fucomi
in
ret
call
sbb
sbb
jno
dec
aaa
dec
mov
test
dec
testl
lret
fsubs
ss
pop
js
cmc
shll
xlat
adc
lds
add
inc
mov
pop
pop
or
jbe
adc
leave
out
dec
xor
in
stos
mov
or
mov
cltd
pop
dec
sbb
cmp
mov
in
aad
rcl
mov
scas
mov
test
cli
xchg
jnp
insl
sbb
jnp
inc
invd
push
stos
mov
sbb
lret
cmc
cmpsb
testb
jmp
dec
lock
fisubs
adc
das
outsl
clc
daa
sbb
xchg
mov
shlb
dec
fsubl
mov
adc
out
add
jne
ret
xlat
mov
ret
xor
jl
rol
test
and
gs
repnz
repnz
xor
testb
pop
mov
jnp
xchg
mov
push
mov
je
add
xchg
dec
data16
aad
pxor
push
sub
xchg
or
inc
testb
mov
dec
je
xor
dec
xor
push
sti
ficoms
bound
jge
or
push
jmp
dec
arpl
and
jmp
test
adc
ljmp
or
test
sbb
je
push
test
cltd
mov
int3
mov
mov
fdivr
push
sbb
mov
mov
jae
mov
fidivs
les
adc
mov
rcrl
sbbb
sbb
inc
pop
jl
sbb
jb
rcll
repz
ret
dec
ret
test
mov
mov
test
dec
dec
repnz
js
out
bound
sbb
faddl
push
iret
sbb
inc
fcmovb
pop
pop
pop
push
cmp
xchg
mov
inc
mov
xor
mov
jge
lahf
leave
inc
cmp
cwtl
mov
gs
jbe
xor
cmp
les
ja
int3
dec
sahf
pop
loope
in
pop
es
sbb
pop
and
sahf
mov
jno
shl
and
and
sub
jb
nop
pop
push
push
cmp
divb
sbb
xor
fsts
pop
push
adc
pop
mov
pushf
loope
mov
mov
in
mov
fistps
imul
popf
dec
or
add
cld
popa
pop
pusha
rol
fidivl
call
xor
sub
ljmp
and
jbe
out
mov
addr16
xchg
subb
mov
jno
cmc
or
loop
xchg
nop
sub
insl
lods
pop
and
inc
je
test
push
into
xor
add
cmp
and
and
jle
aam
cli
mov
adc
scas
inc
popa
pop
lea
clc
inc
xchg
popf
lea
cmp
jl
push
shl
bound
pop
sbb
pop
jl
add
adc
sub
sahf
addr16
mov
jb
jb
cmp
or
lods
shll
mov
dec
xchg
adc
enter
sub
push
sub
repz
cli
das
push
call
outsl
les
sbb
fnstenv
sbb
sbb
cmc
in
out
dec
cmp
xchg
into
mov
add
inc
int
inc
pushf
js
xor
add
rol
push
fwait
xorl
xor
jb
fisubrl
dec
cmp
loop,pn
popa
icebp
ss
cmp
jmp
or
rorb
or
out
adc
xor
loope
xsha256
cmpsb
push
push
fucom
or
dec
ror
dec
fcomip
fadds
xor
movsb
aaa
jge
in
movsl
sbb
cmp
js
movl
addl
mov
mov
ja
ss
adc
mov
int
push
dec
inc
ds
inc
xor
ret
xchg
scas
lret
jp
fists
je
gs
cmpl
into
sti
cwtl
push
push
inc
daa
aam
nop
jns
pop
fcoml
stos
bound
ret
lret
adc
dec
lock
xchg
iret
fldt
jp
or
xchg
scas
pop
call
xchg
call
dec
test
sbb
cmp
sub
adc
cli
into
add
out
fisubs
fs
inc
test
inc
adc
cltd
jnp
pop
dec
cmp
mov
cs
je
mov
mov
fisubrs
scas
je
xchg
jo
inc
mov
jmp
cmpsb
aas
mov
aam
xchg
mov
cli
inc
mov
mov
out
out
fists
mov
inc
push
sbb
push
enter
push
pop
jo
into
out
dec
add
repz
ret
add
icebp
dec
cmp
daa
bound
jecxz
mov
jl
nop
outsb
test
push
push
mov
test
pop
and
push
pop
cs
push
inc
sbb
insl
movsb
cmpsl
mov
add
pop
sti
nop
nop
push
dec
std
scas
dec
mov
movsb
shll
inc
sbb
jb
test
pusha
mov
and
xchg
dec
xchg
jnp
inc
mov
xor
cmp
mov
mov
mov
inc
sbb
int3
cmp
cs
daa
gs
sbb
xchg
orb
jl
pop
cwtl
test
popf
dec
aam
and
or
shlb
enter
je
stos
jne
sbb
xchg
into
xchg
ja
es
mov
iret
push
mov
inc
fcoml
inc
push
cmpsl
lea
stos
jbe
xchg
pop
cmp
in
push
dec
pop
dec
test
pop
push
ljmp
mov
xchg
lods
ja
dec
aaa
lret
xchg
add
movsb
jmp
clc
into
int3
push
lods
es
mov
loopne
cmp
cmp
lock
sub
xchg
cld
leave
xchg
mov
pop
mov
fsubs
inc
xor
lahf
sub
in
fisttpl
pop
movsl
dec
outsb
xchg
data16
or
push
dec
addr16
inc
insb
outsb
rcrl
cmc
jb
stc
xor
loop
iret
sbb
lea
jg
push
repnz
shrb
in
inc
and
std
sti
int3
out
lods
sub
imul
stc
push
shrb
int
cs
or
aad
xchg
xchg
bound
mov
inc
pop
mov
leave
in
lcall
aaa
orl
pop
fadds
lret
sbb
sub
push
fadds
hlt
xlat
xchg
les
inc
or
cli
stos
dec
adc
leave
cmc
push
ja
dec
ds
lret
jae
sub
lret
jb
ds
xchg
dec
xchg
pushf
std
clc
insl
movsl
cmpsb
movsl
or
jbe
adc
mov
xor
insb
or
mov
jbe
and
sub
incb
and
and
xor
cmp
imul
jle
cmpsb
call
inc
jne
mull
sti
fdivr
lret
jns
mov
xorl
ds
xor
push
fildll
push
dec
push
sahf
rorl
fimull
add
jg
xor
and
fs
ds
repnz
and
jle
into
adc
jbe
xor
les
xlat
inc
adc
and
mov
or
sub
dec
in
mov
fwait
mov
lds
repnz
jb
mov
aas
lret
sbb
inc
jbe
mov
loop
filds
sbb
psubsb
int3
into
mov
inc
and
mov
and
add
jbe
fildl
jg,pn
stos
cmpsl
fsubr
outsl
mov
sub
sbb
push
adc
out
mov
sti
ss
or
out
mov
lds
flds
pop
cmp
movsl
arpl
out
inc
push
jg
imul
add
or
test
push
js
out
or
jo
inc
mov
out
xchg
std
sub
dec
testb
inc
in
test
shll
rcrb
cli
enter
inc
pop
shrb
mov
clc
xchg
mov
inc
and
das
xor
fcomps
and
push
pop
addr16
xor
popf
lret
mov
add
dec
xlat
out
jmp
addw
sbb
negl
fbld
arpl
push
cmp
leave
stos
std
fisttpl
pop
push
mov
pop
cld
sbb
lods
dec
sti
ret
repnz
ljmp
lea
loope
xchg
into
ud2
jnp
out
pop
push
xchg
mov
std
lret
adc
inc
adc
in
adc
pop
push
data16
int
push
jnp
xor
in
addr16
and
pop
cld
outsb
fstps
movsl
jo
xchg
adc
cmc
fstps
ret
cli
mov
xchg
repz
imul
mov
insl
lea
mov
sahf
adc
sbb
lret
notb
lds
rclb
push
lock
push
lods
sbb
cmp
jg
xor
or
cmpsl
pop
testb
fisttpl
fwait
dec
lock
imul
xlat
and
cld
dec
out
mov
sbb
addr16
mov
test
imul
mov
mov
mov
xchg
test
jns
inc
bound
hlt
movsb
in
xchg
mov
adc
mov
cmp
mov
cmp
lods
jno
fdivs
imul
aaa
mov
dec
dec
xchg
mov
push
jp
hlt
in
sbb
mov
cmp
xchg
push
sbb
sub
inc
ljmp
mov
adc
stos
push
and
add
ss
jne
and
arpl
ret
xchg
clc
pop
jbe
dec
mov
jecxz
lahf
int
test
shl
jecxz
lret
fbld
jae
dec
cmc
push
mov
ja
push
dec
inc
sar
je
sahf
adcl
or
movsl
out
xor
adc
ljmp
je
cs
pop
stc
into
push
outsb
outsl
mov
fildll
subl
and
dec
or
or
inc
adc
out
stos
fdivl
ret
fnstsw
repnz
xchg
aaa
mull
xor
jbe
in
mov
arpl
add
pop
dec
mov
movsl
js
inc
repz
add
dec
pop
int3
les
das
outsl
pusha
shrb
cmp
mov
cmp
sub
rcr
test
sub
mov
and
mov
mov
add
push
mov
xor
leave
repnz
xlat
jno
adc
sub
mov
cmp
test
add
xchg
mov
movsl
cltd
cmc
pop
orb
ja
jo
cmp
fs
adc
stc
leave
pusha
mov
rclb
push
fdivrs
mov
movups
mov
ret
sti
fsincos
nop
add
sbb
xor
dec
data16
lea
mov
iret
loop
in
aas
push
jno
shl
fs
sti
pop
incb
addr16
lock
enter
adc
jns
add
cmp
int3
mov
cmp
jo
dec
cmp
xchg
fiaddl
xor
mov
or
popa
pushl
jp
jae
inc
pop
popf
push
aaa
pusha
popf
in
mov
jl
mov
cmp
shll
into
push
inc
jnp
fdivl
loop
shrb
test
cli
ss
roll
inc
idivb
cmpsl
out
repz
gs
in
sub
addr16
jp
mov
and
fnsave
dec
jno
sti
enter
outsl
scas
ljmp
cli
pop
sub
in
adc
sbb
xchg
xchg
lods
sub
inc
fidivs
push
mov
hlt
aaa
jne
gs
andl
outsb
and
or
arpl
in
adc
mov
es
shlb
push
xor
inc
mov
frstor
sub
je
repz
dec
xchg
loopne
xor
scas
movaps
jg
aas
adc
add
icebp
pop
xchg
dec
fcompl
jb
orl
push
shl
scas
pusha
push
sbb
fmull
mov
or
stos
int
mov
loop
jecxz
imul
sbb
inc
ja
xchg
inc
mov
sbb
clc
dec
leave
ret
push
repz
pop
sbb
pop
mov
adc
pop
loope
pop
mov
jle
ret
mov
int3
idivl
dec
pop
pushf
addr16
lret
lods
sub
push
jmp
jmp
and
push
lcall
mov
mov
and
pop
lods
ljmp
daa
inc
or
insb
rolb
xchg
ficompl
xor
je
jbe
shll
gs
daa
clc
sahf
into
sbb
out
add
xchg
mov
inc
mov
repz
hlt
cli
jne
fst
and
push
in
adc
movsb
dec
call
sarl
in
icebp
sbbb
inc
repz
adc
sbb
or
mov
in
push
imul
push
data16
mov
ret
xor
push
add
mov
pop
int3
mov
xlat
mov
and
fcompl
adc
fsubrl
jp
add
add
jl
aaa
pop
mov
mov
popf
lret
fs
and
push
jo
xorb
mov
lret
aad
fwait
lahf
cltd
loop
movsl
mov
outsb
rorb
adc
ss
les
int
and
hlt
pop
inc
lea
out
jle
jae
aad
inc
test
popf
dec
mov
mov
xchg
jmp
das
add
jae
and
in
adc
xchg
daa
das
int
cs
sbb
xor
subb
repz
lcall
fmul
sbb
or
fimull
adc
daa
cmp
decb
orl
pop
push
cld
pop
lods
mov
fisubs
push
adc
movsl
inc
repz
xchg
xchg
pop
cmp
or
lcall
cmp
popa
pop
push
push
inc
repnz
inc
lock
add
stc
inc
xchg
sub
cmpb
xchg
inc
push
push
outsb
jle
or
jle
std
daa
iret
sub
cmp
aad
in
adc
bound
xchg
sbb
dec
sbb
int3
loopne
fildl
xchg
andl
push
clc
loope
xchg
js
and
inc
xchg
xor
movsl
mov
mov
dec
imul
cmc
mov
sub
mov
loop
jmp
dec
push
nop
or
sbb
sbb
cli
jle
ds
xchg
pop
xor
in
dec
mov
sub
xor
icebp
lcall
pop
sti
jae
stos
add
ja
mov
add
mov
inc
cwtl
push
ljmp
aas
mov
pop
scas
cmp
adc
jne
push
adc
mov
icebp
mov
cmp
xor
mov
fwait
jle
xchg
inc
loope
push
clc
mov
ds
shl
or
mov
rorl
pusha
mov
loop
in
enter
mov
imul
add
xchg
fwait
sub
mov
or
and
adc
dec
and
out
nop
bound
dec
inc
mov
pushf
mov
xchg
mov
mov
loope
popa
arpl
dec
mov
lods
aaa
sahf
outsl
inc
jne
gs
lock
mov
dec
sub
mov
sbb
add
lock
out
ror
xor
inc
mov
testb
mov
or
pop
and
sbb
jae
rcll
pop
cmpsb
pop
jo
mov
and
enter
fildll
push
dec
and
ficoml
mov
cmc
push
sub
pop
push
bound
xchg
lods
sub
decb
cmc
sub
jnp
mov
xchg
inc
xor
scas
pop
ljmp
in
jbe
push
or
fadds
addr16
mov
cli
mov
hlt
fs
jl
lret
push
push
imul
inc
sti
ja
cli
jnp
insl
sub
pop
inc
pop
cmp
and
pop
or
xor
es
jmp
in
into
xchg
je
push
push
xor
xchg
mov
lods
subl
ret
fimull
std
aad
loope
loopne
lret
push
divb
daa
xchg
sbb
cmp
movsb
and
out
outsl
dec
popa
daa
adc
xchg
push
adc
arpl
loopne
fnstcw
int
mov
mov
shl
add
jo
cmp
lcall
insb
add
push
test
jne
out
sbb
fisubl
clc
es
jmp
add
lds
adc
enter
add
sahf
lcall
push
out
cmp
inc
mov
and
mov
cmp
hlt
imul
movaps
stos
std
add
jbe
mov
xchg
push
dec
outsl
cmp
pop
out
cli
push
sub
in
sarl
pop
jp
mov
stc
and
add
fstl
jg
pop
pop
and
mov
aad
jno
pop
pop
jbe
data16
inc
adc
xor
outsb
subl
jge
fwait
leave
xchg
mov
repz
sbb
clc
outsl
inc
cmp
test
in
mov
shrb
xor
dec
inc
and
int3
mov
fisubs
cli
mov
and
or
add
daa
jbe
xor
jmp
sbb
insb
xchg
pop
cltd
mov
lret
adc
aas
xlat
ret
cmp
inc
push
vpsubusb
push
mov
fisttpll
mov
outsl
in
inc
movsl
popa
shll
adc
mov
pop
pop
pop
nop
jnp
cs
aad
add
pop
cld
out
inc
pop
jno
mov
xchg
jnp
je
add
sub
push
lods
add
es
nop
js
pop
fs
xchg
lcall
icebp
in
push
daa
das
int
or
mov
cltd
pminsw
dec
and
fbstp
mov
stos
adc
push
push
pop
dec
fdivrl
popf
dec
mov
or
out
jl
mov
inc
xor
mov
jbe
xchg
addr16
xchg
and
stc
mov
lock
or
cmp
adc
lcall
sub
in
sub
gs
lahf
cwtl
push
or
cmc
addr16
out
push
les
pop
mov
sbb
ret
out
rorl
jne
lcall
cwtl
enter
push
in
popf
add
notl
cmc
das
mov
aam
mov
adcb
int3
pop
pop
fldt
enter
push
inc
dec
neg
cmp
ss
pop
scas
push
fwait
mov
arpl
sti
sbb
imul
arpl
popf
jmp
jp
sub
and
inc
ret
fistl
add
fidivs
lret
xlat
inc
incb
leave
fsubs
fsubs
inc
push
and
icebp
call
movsl
sbb
cwtl
pop
jle
imul
in
adc
cmp
inc
fstpl
inc
nop
push
js
pop
shl
ja
out
scas
out
dec
fwait
or
pushw
push
jp
pop
call
scas
stos
adc
lods
scas
int
mov
fists
ss
lds
mov
inc
test
jge
or
loopne
sbb
jae
movsl
inc
mov
in
enter
dec
push
enter
test
cli
pop
sub
and
loopne
pushw
sub
bound
cmp
inc
insl
xchg
lahf
in
fcomi
scas
cmc
pop
testl
and
std
imul
test
shl
adc
and
pop
add
cmp
lods
push
push
loop
sbb
loopne
cmp
repz
test
xchg
hlt
sub
pop
ret
jbe
and
enter
hlt
movsb
std
pop
jmp
cld
cmp
cmc
and
cmp
fcmovnu
popf
sub
out
jmp
inc
out
push
inc
push
cmp
inc
inc
dec
and
test
sarb
cmp
std
filds
notl
dec
push
rorl
and
lret
sub
jle
test
insb
adc
sub
sti
and
stc
cmp
inc
add
data16
data16
outsb
xchg
js
ljmp
mov
movlps
inc
sbb
cmpsb
pop
incl
imull
mov
arpl
data16
pop
push
push
dec
cmp
into
jle
jecxz
sub
enter
and
xor
fst
inc
fisttps
out
pushf
in
jmp
hlt
mov
mov
loop
stos
jne
dec
insl
lock
imulb
fistps
shrb
out
addr16
lret
dec
xor
push
fidivrl
cli
loop
mov
mov
cmp
sahf
and
movsl
roll
pop
mov
shll
faddp
push
add
int
jg
repnz
dec
pusha
mov
pop
in
pop
xchg
jmp
and
in
fwait
push
fistl
inc
sbb
pop
lret
subb
or
sbb
aas
movsb
in
sbb
movsl
and
dec
cltd
fs
imul
in
sbb
dec
shrb
push
int
ret
or
mov
adc
mull
enter
jo
mov
jp
sahf
xor
cs
mov
inc
mov
fcoms
xchg
inc
cmp
iret
adc
xchg
push
pop
jge
and
add
ret
xor
stos
movsl
and
lods
xor
out
sahf
stos
push
lret
mov
or
popf
lahf
jae
sbb
popa
loop
push
popf
adc
out
in
aam
movsb
sar
pop
sti
jb
pop
jb
inc
nop
cs
adc
or
pop
insl
bound
arpl
shlb
or
jmp
mov
dec
idivb
push
aaa
stos
push
push
pop
clc
cwtl
and
ffreep
mov
mov
lret
pop
jge
cmp
mov
push
xchg
in
fcmovb
test
mov
je
hlt
and
call
push
test
loopne
cmp
ss
insl
xor
xchg
dec
inc
pop
filds
xchg
bound
xchg
lret
mov
push
mov
xchg
inc
mov
push
ja
pop
dec
movsl
xor
mov
adc
out
lods
pushf
mov
dec
add
xchg
pop
push
ljmp
mov
pop
adc
inc
xor
sbb
mov
movsl
pushf
add
jle
lahf
mov
xor
into
jns
mov
mov
mov
cli
dec
lahf
xchg
adc
cmp
cmovb
dec
sub
notb
ret
xchg
jb
jo
movsl
dec
push
pop
and
push
xchg
and
xchg
adc
cwtl
cmp
into
cs
xor
push
sti
into
rcrb
pushf
fiadds
cmp
loope
dec
add
lock
or
popa
mov
push
sbb
sub
insb
sub
out
inc
xchg
sub
in
cmp
pop
lret
ljmp
loop
jae
jns
js
imul
cmp
xchg
jns
sub
fistl
test
jne
fwait
lret
mov
std
mov
pop
and
lcall
fsubrs
stc
je
push
sub
jecxz
loopne
sub
test
test
lods
pop
mov
mov
jge
divl
aam
push
xchg
inc
pop
das
movsb
aaa
sbb
lahf
leave
xchg
xchg
sbbl
shll
jmp
mov
cltd
outsl
jge
add
mov
ljmp
jb
fisubl
pextrw
js
adcb
fidivrl
inc
sbb
add
imul
xchg
or
jno
fwait
imul
fildll
sub
xor
dec
inc
test
adc
stc
mov
mov
js
mov
lods
popa
inc
loop
rorb
rorb
pushaw
dec
or
dec
adc
dec
xchg
arpl
add
mov
xchg
mov
pop
testl
xchg
cmpsb
or
xchg
dec
cmpsb
bound
sbb
sub
jle
imul
stc
stos
add
pop
push
cmp
jl
neg
fidivrs
jl
cmp
and
js
ret
lock
or
aas
jnp
cmp
std
xchg
sbb
leave
adc
or
pop
jnp
fsubrp
je
ljmp
ret
lcall
lea
sub
adc
xchg
mov
mov
mov
stos
mov
shll
pop
mov
adc
sbb
dec
jp
cmpsb
and
jmp
xchg
ret
mov
pushf
dec
xchg
inc
cmpsb
int
inc
loopne
stos
pop
xchg
and
ror
inc
and
in
lcall
jle
lahf
leave
sarl
and
dec
iret
mov
cld
mov
pop
pop
and
jae
jno
fwait
les
scas
stos
mov
cmp
fisubl
mov
popl
imul
lods
loope
hlt
jno
loop
push
je
fwait
xorl
dec
mov
and
call
jg
je
mov
mov
outsl
xchg
addr16
gs
push
add
jne
push
leave
push
push
rcrl
in
insl
cmp
ljmp
mov
scas
sahf
sbb
repz
sti
enter
fcompl
add
pop
sub
and
subl
mov
mov
jmp
fistpl
test
mov
mov
shrd
je
adc
mov
out
outsl
or
dec
pop
imul
sub
fidivrl
lahf
or
imul
cltd
ss
and
lahf
cmpsl
jns
cmp
inc
fistpll
inc
xchg
cmpsl
popf
test
inc
cmp
lahf
xlat
inc
mov
pop
sbb
sub
push
xchg
aas
lock
lcall
xorl
scas
xchg
xlat
jecxz
add
dec
jnp
jle
pop
push
jne
cli
pusha
sahf
stos
inc
and
stc
mov
popf
mov
je
mov
jl
push
lea
sbb
daa
mov
test
push
fwait
push
outsb
popa
add
outsl
mov
loope
cld
fpatan
pop
push
stos
add
sub
mov
xor
inc
out
mov
pop
popa
test
mov
cmp
fucom
adc
sub
add
js
xlat
lock
fldenv
sbb
lcall
xchg
popf
sahf
fildll
cmpl
push
push
andb
loope
mov
add
pusha
clc
lret
cmp
xor
sbb
sti
arpl
out
add
jbe
int3
sahf
cmp
jnp
hlt
fidivl
fldenv
push
ret
push
fildl
ret
add
mov
xchg
sub
and
repnz
scas
dec
mov
stos
push
out
pop
xor
aad
xchg
movb
aas
movsl
jge
mov
and
jbe
sbb
outsl
dec
mov
or
neg
iret
adc
leave
das
xor
push
cmc
pop
jbe
jge
mov
je
enter
jae
enter
outsb
pop
sahf
nop
push
xchg
ljmp
sahf
pcmpgtb
popa
fmuls
test
or
xor
sbb
pop
cmp
add
dec
in
inc
mov
inc
xchg
mov
mov
mov
jnp
insl
fstps
mov
dec
xchg
stos
out
mov
pop
lret
push
clc
pop
add
adc
addl
fstps
jbe
ret
pop
out
loop
cld
std
dec
rclb
xor
lret
cmpsb
sub
in
imul
jp
sbb
push
lock
sbb
push
mov
dec
ret
jle
lock
dec
out
lret
xchg
cli
cmp
enter
inc
stos
or
or
jnp
inc
xchg
cld
stos
jns
push
stc
mov
mov
movsb
int
adcl
aam
inc
mov
in
insl
lret
jae
in
mov
jp
std
daa
scas
test
lret
or
or
scas
sub
xchg
scas
fisttpll
es
mov
imul
jecxz
mov
mov
or
sub
sbb
sbb
scas
push
dec
decb
cli
jnp
cmpsb
cmp
call
notl
out
add
ljmp
scas
movl
cmpsb
dec
jle
sub
fists
and
xorl
stos
loop
cmp
test
incl
dec
jmp
sti
xchg
pop
repz
arpl
test
cmc
xchg
cmp
cld
jo
aaa
lret
mov
sub
add
into
pcmpgtw
fdivs
sbb
in
cmp
sarl
xor
add
sub
push
xor
icebp
cwtl
push
hlt
inc
scas
cmp
cli
enter
cwtl
fwait
ds
xor
loop
pop
stc
fwait
imul
pop
sbbb
and
mov
or
sahf
fisubrs
addl
lea
in
jge
sbb
imul
add
xlat
cmpb
xor
fwait
test
cmpsb
pop
cmp
ljmp
ds
inc
sub
mul
and
nop
inc
mov
test
add
jge
cmp
push
mov
jo
mov
test
cs
in
adc
test
fsubrs
in
sbb
js
out
sub
popa
cltd
jl
jae
ljmp
xchg
enter
cmp
rcrb
jge
jo
jg
arpl
sbb
lds
or
fwait
mov
mov
divb
add
xchg
sub
pop
test
iret
mov
dec
frstor
mov
sub
adc
pop
push
and
je
addr16
int
mov
sub
pop
jmp
test
loopne
xor
jnp
xor
ret
repz
and
dec
xchg
inc
jmp
push
sbb
cmp
cli
sbb
push
cs
hlt
sub
add
jmp
pushf
in
pop
inc
mov
inc
xchg
mov
outsl
lahf
mov
sahf
sub
xchg
out
sub
lods
xlat
fxch
jge
fadds
jle
push
stc
pusha
inc
inc
in
mov
xchg
mov
pop
lods
and
push
sbb
iret
or
movsl
push
inc
loopne
sub
sbb
push
lret
mov
mov
dec
js
jmp
icebp
inc
jmp
dec
fistl
xor
sbb
sbb
out
jg
jb
push
mov
dec
and
xchg
scas
stos
test
popa
cmp
cmp
outsb
sub
mov
iret
jnp
inc
pusha
xor
into
imul
mov
xchg
cld
pop
adc
pop
daa
ret
dec
pop
cmpsl
add
mov
sbb
sub
das
mov
lahf
std
xorb
push
jle
popf
mov
sbb
les
add
out
or
or
outsl
mov
adc
lock
cmp
adc
mov
dec
fcmovbe
ret
pushf
add
data16
sbb
add
mov
fisubrs
pushf
fstl
cmp
xor
sbb
adcl
out
sub
icebp
mov
fdivl
insb
jle
mov
int
mov
rcll
ljmp
push
push
ret
cmp
lcall
test
or
inc
xchg
sbb
push
leave
and
and
roll
push
shrl
ret
pop
mov
jp
arpl
shll
repz
xchg
jb
sbb
or
test
into
loopne
out
test
add
inc
aaa
shrl
es
cli
inc
push
cltd
repz
in
or
push
xor
and
insb
jmp
test
jle
xchg
jmp
cld
and
dec
dec
outsb
cmp
sub
sbb
xor
jmp
sahf
push
xchg
jae
adc
sub
aas
dec
outsb
push
xor
outsb
enter
sarb
xchg
dec
mov
out
into
xchg
adc
push
inc
and
cmc
push
ret
inc
sti
lds
adc
xchg
pop
xor
lahf
mov
cli
sbb
shlb
movsl
test
mov
clc
inc
nop
into
push
cmp
outsl
push
int3
jp
and
xchg
out
mov
and
mov
cmp
adc
cmp
fimull
shrl
lds
gs
or
or
movsl
pop
test
test
pop
aad
push
sbb
popf
arpl
mov
sbb
rcl
rorb
shlb
sub
imul
push
dec
pop
and
aas
in
mov
arpl
xchg
outsb
dec
fisttpll
ficomps
pop
jae
sub
jae
xor
xor
jge
hlt
push
push
loopne
mov
jge
xor
mov
adc
mov
mov
int
cmp
lahf
cmp
jns
js
shrl
and
sub
push
jns
pop
jo
arpl
sbb
std
sti
repnz
adc
jae
xor
cmp
cwtl
sbb
int3
mov
push
sbb
and
sti
hlt
sbb
mov
cwtl
pop
push
xchg
xor
mov
stos
ljmp
sbb
int
lret
mov
ds
frstor
test
jp
mov
and
and
adc
popa
imul
outsb
sub
dec
mov
pop
adc
sbb
das
jg
stos
lcall
or
adc
ret
loope
sahf
es
dec
and
je
lret
or
pop
cmp
cmp
iret
jne
push
fucomip
jne
sub
and
ftst
push
mov
fidivrs
sarl
mov
adc
in
dec
ror
xchg
loopne
or
inc
leave
cld
jns
push
sbb
aaa
xor
inc
mov
push
mov
push
aaa
fadd
adc
and
dec
mov
mov
mov
cmp
mov
ds
sbb
inc
addr16
inc
cs
sbb
jmp
insb
cmp
test
pop
pop
or
neg
jns
popa
jle
enter
test
movsl
mov
jo
shll
lods
adc
out
xor
in
ffree
pop
icebp
test
push
mov
pop
cmp
sbb
sub
jmp
jecxz
rcrl
pop
scas
lret
push
mov
movsb
movsb
jae
orl
dec
jmp
ss
push
pop
cmpb
ret
imul
movsb
push
icebp
stc
mov
push
jg
jmp
xchg
push
dec
push
inc
test
mov
mov
sbb
movb
jl
xchg
imul
or
out
sbb
push
int
sub
sti
adc
xchg
aad
aam
push
mov
mov
xor
sahf
leave
add
pop
pushf
jb
mov
inc
jnp
movsl
rcll
cwtl
icebp
pushl
orl
dec
inc
mov
xor
addr16
in
dec
mov
ret
pop
xchg
sbb
inc
in
xor
mov
add
enter
cmpsb
cmp
dec
and
push
mov
mov
loopne
sbb
loop
jns
cmpsl
xchg
int3
fdivs
call
lret
sbb
hlt
mov
xor
inc
mov
test
xor
cmp
push
decl
pop
cmp
js
cmp
push
adc
mov
test
call
push
adc
xor
inc
andps
cmpsl
add
sub
push
lahf
pop
fwait
adcl
iret
jnp
and
fnstsw
aad
xor
adc
mov
jge
or
adc
les
dec
mov
inc
fisubl
lea
cltd
int3
mov
movsb
dec
in
fisubs
lcall
add
push
inc
jg
sbb
cwtl
int
or
inc
xor
outsb
sub
add
mov
repz
jno
pop
lcall
daa
or
inc
lock
aad
and
rcll
ds
cltd
xor
pop
enter
mov
lods
mov
out
sbb
cmp
add
xor
fildll
xor
fnstcw
lret
in
mov
pop
in
lods
movhps
sub
pmullw
cli
scas
scas
inc
lcall
lea
icebp
inc
xchg
or
fwait
ud0
das
mov
lahf
mov
filds
outsb
into
dec
std
xchg
sbb
xor
leave
mov
sbb
xchg
add
mov
mov
pushf
mov
cmp
movsb
push
cltd
nop
add
dec
push
jmp
js
enter
ret
orb
or
out
dec
xor
icebp
movsb
ja
imul
rclb
inc
cmp
mov
jp
xchg
pop
aad
iret
jo
das
jge
leave
dec
xor
fucomip
imul
jmp
incl
mov
xchg
inc
loop
cltd
dec
fnstenv
out
adc
inc
sub
jmp
dec
data16
mov
nop
or
xchg
mov
hlt
sahf
jecxz
xor
mov
adc
mov
out
pop
add
jnp
and
xchg
fbld
inc
xor
adc
iret
sub
cs
dec
push
cmpsb
fidivs
popf
push
inc
sub
pop
xor
arpl
add
inc
push
in
aad
cmp
fsubrl
insb
mov
lea
int
aam
mov
mov
int3
xor
fidivl
rclb
and
mov
adc
dec
movsl
sbb
add
inc
fdiv
fs
dec
dec
out
pushf
insl
add
fndisi(8087
sbb
sbb
cmp
adc
mov
je
and
fisubrs
xor
ljmp
xor
lret
jge
stc
xor
cld
aam
sub
orb
mov
fcoms
in
and
mov
mov
push
jmp
ljmp
into
in
setns
cmp
lods
cld
mov
add
test
das
inc
outsl
stos
inc
inc
and
bound
xchg
ret
sbb
dec
dec
xchg
push
ljmp
or
outsb
pop
mov
lcall
lahf
popa
or
outsb
fs
in
pop
mov
fwait
out
jnp
and
sub
sbb
and
daa
cli
jnp
test
cmp
and
lret
shlb
adc
inc
mov
sbb
dec
xor
xor
in
push
out
sbb
cmp
faddl
outsb
pop
dec
mov
jg
xor
rcpps
jle
rcl
inc
or
pop
adc
daa
mov
push
sti
repnz
mov
test
fisttps
lods
cmpsb
inc
or
bound
push
push
inc
loope
clc
sub
in
addr16
inc
es
pusha
pop
sub
xor
xchg
inc
jno
pop
pop
xor
push
pop
ret
pop
es
or
jno
xchg
pinsrw
adc
xor
xchg
ret
or
push
notl
nop
push
stos
loop
cmp
loopne
sub
pusha
add
loopne
mov
es
pop
sbb
imul
js
outsb
pop
cmp
pop
std
lea
sbb
mov
inc
mov
cmp
movsl
add
cld
adc
push
and
mov
daa
and
push
sbb
adc
test
inc
fdivl
adc
push
mov
adcb
iret
sub
mov
and
iret
add
pop
loop
daa
mov
fnclex
sub
jmp
aas
nop
push
int
mov
lods
sbb
mov
repz
adcb
loope
aas
adc
push
mov
jns
jmp
lods
scas
add
cmp
jnp
mov
jb
dec
mov
bound
adc
xchg
movb
lcall
mov
dec
clc
int
pop
sub
pop
pop
js
pop
mov
out
ja
jecxz
negb
inc
ficoms
pop
mov
push
fstl
push
xchg
jnp
inc
cs
push
ljmp
push
sub
mov
clc
push
stc
pop
pushf
pop
mov
pusha
mov
stos
adc
test
push
jle
mov
nop
loop
jns
sub
loope
test
pop
mov
in
or
and
leave
sub
xchg
int3
aad
je
bound
clc
sbb
std
lds
sti
hlt
insb
and
out
jp
int3
shlb
jle
pop
mov
jmp
mov
lret
mov
pop
cmp
dec
add
int
push
stos
and
fimull
mov
ret
mov
in
ds
cltd
ljmp
xchg
test
xor
xlat
mov
jnp
lods
cld
sbb
fs
dec
andb
inc
or
pop
loop
inc
add
cmpsl
int3
aam
xor
stos
insl
cmpb
fcoml
push
sub
cltd
and
leave
or
push
in
imul
fs
hlt
sahf
push
movsl
pop
sub
mov
repnz
mov
xchg
stos
lcall
mov
xor
sub
sbb
mov
pushf
call
xchg
ljmp
sarl
mov
push
pop
icebp
out
sti
sbb
loope
pop
mov
popa
stc
testl
bswap
daa
imul
push
jecxz
data16
cs
lahf
lret
jnp
aaa
and
rorl
int3
aas
dec
jl
push
mov
and
notb
pop
stos
add
in
es
jnp
test
sbb
insb
aam
jae
aaa
push
test
stos
loope
xchg
lods
popa
xor
call
push
or
xor
sbb
lods
or
arpl
flds
inc
inc
aam
rcl
repz
aas
lods
hlt
sub
and
popf
or
popa
jl
test
filds
int
inc
mov
fmul
fcoms
sar
cmpsb
xchg
push
or
xor
adc
mov
popf
push
pop
jb
cli
pop
test
mov
dec
aam
movsl
push
pop
jne
cs
imul
in
cmpsb
or
jbe
inc
jns
mov
jnp
xor
mov
test
data16
adc
mov
cmp
stos
mov
sbb
dec
outsb
insb
int
jns
mov
xchg
dec
les
push
sbb
jl
dec
insl
pop
dec
fimuls
out
fcmovnb
test
or
in
and
jbe
adc
aas
out
jns
leave
test
or
pop
cmpsb
adc
addl
pusha
into
cmpsl
or
xlat
movsb
lods
insb
sub
or
push
dec
outsb
test
jecxz
jns
cld
sub
imul
xor
adc
mov
sub
aam
dec
cltd
cwtl
arpl
cmp
xchg
cwtl
fadd
cmp
es
jp
xor
dec
mov
add
and
scas
mov
aas
jmp
je
pop
sub
sub
add
dec
dec
xor
adc
mov
or
mov
sahf
lock
adc
test
push
jbe
or
sbb
das
pop
sub
cmc
in
mov
xor
leave
push
cltd
outsb
fs
push
aam
je
hlt
loope
movsl
outsb
push
mov
sbb
insl
and
into
sbb
les
lret
arpl
sbb
mov
jmp
lock
and
cs
loop
in
jno
jne
rorb
adc
xchg
xor
dec
int
aaa
shrl
xchg
lds
dec
mov
xor
scas
xchg
fsub
xorl
fiaddl
inc
mov
xchg
aam
add
jle
sub
das
test
xchg
clc
orb
sub
in
nop
fdivrs
adc
jbe
xor
and
js
test
pushf
ja
and
icebp
fwait
js
js
shlb
lds
hlt
xor
mov
sarl
nop
mov
inc
dec
cwtl
pop
test
push
mov
push
or
stos
lahf
pop
sub
pop
enter
mov
and
sbb
xchg
movsl
pop
sub
mov
dec
inc
mov
cmp
dec
inc
and
gs
out
sti
or
sahf
lds
inc
out
rcrl
sbb
jnp,pt
fs
test
insb
dec
mov
cmp
outsb
cli
int3
inc
and
sub
jae
cmp
mov
mov
sbb
rcrl
not
xor
mov
outsb
addr16
lret
in
cmp
adc
sub
jle
or
xor
inc
or
adc
jno
dec
sbb
sbb
add
fadd
sbb
int
dec
loopne
shlb
push
addr16
add
outsb
arpl
ficompl
and
iret
and
aam
std
pop
test
stc
mov
xor
mov
jg
jb
mov
pop
movsb
dec
push
cmp
loope
dec
pop
pop
and
jmp
push
mov
cmp
bswap
dec
test
pop
sub
popf
push
movsl
pop
xor
mov
dec
adc
pop
inc
iret
adc
int
or
lods
dec
loop
out
inc
fwait
js
fimull
sti
mov
sbb
pop
dec
dec
neg
sti
lahf
into
stc
or
int3
fildll
sarb
imul
js
lcall
add
test
ffree
xchg
test
ljmp
xchg
lds
and
sbb
mov
jb
fwait
cmpsl
lret
out
je
mov
lret
cmp
mov
in
xor
dec
mov
mov
into
inc
pop
ret
and
aas
roll
iret
sub
xor
int3
jle
shlb
test
add
jl
xor
in
inc
in
ss
cmpsb
sbb
jp
popf
cmpsb
insl
dec
neg
sub
pop
mov
out
xor
mov
scas
in
add
sub
sti
sub
into
scas
loope
jg
enter
cmc
sahf
clc
sbb
js
dec
or
dec
mov
ss
lret
adc
fsubs
xor
mov
or
jecxz
outsb
ljmp
addr16
push
out
push
lahf
pop
push
sar
jecxz
fsubrs
adc
jl
lret
in
into
cli
fdivl
movsb
mov
fadds
inc
and
pop
sub
adc
arpl
mov
sub
std
out
mov
dec
data16
mov
call
stos
lret
xchg
jne
xor
mov
xchg
mov
xor
mov
cmp
pop
movsl
sbb
cmpsb
frstor
and
ljmp
push
xorb
popf
mov
ret
lods
push
popa
mov
out
aam
sub
add
xchg
mov
jle
ljmp
notb
mov
outsl
in
dec
movsl
pusha
fdivr
pop
in
js
cwtl
mov
hlt
inc
scas
out
aas
lock
in
loopne
pop
jo
daa
jle
cmpsl
xor
sbb
mov
xchg
and
push
aam
lret
idivb
xchg
xor
addl
jo
cmp
mov
stc
arpl
or
add
ds
testl
lret
sti
xchg
push
xor
paddw
mov
sub
shll
jo
and
sbbb
or
lods
ljmp
imul
lahf
adcl
fs
pop
scas
sbb
push
and
jl
cmp
cmpsl
mov
sbb
popf
jns
addr16
add
rclb
xchg
xor
stc
icebp
outsb
inc
mov
dec
jecxz
sub
sub
push
mov
mov
adc
mov
pop
hlt
mov
gs
add
inc
xor
pushaw
and
cld
in
and
ret
xor
jle
stos
ror
jb
aaa
mov
cld
cwtl
and
xchg
ljmp
xchg
pop
fcmovu
xlat
or
jl
outsl
loope
bound
fwait
stos
lcall
test
mov
scas
pop
mov
cld
inc
insl
pop
pop
and
dec
sub
rcrb
or
sbb
ror
adc
mov
sbb
in
filds
sub
sbb
xor
repnz
loop
imul
and
jb
icebp
adc
in
mov
inc
out
mov
lahf
sbb
ljmp
pop
addl
jno
gs
aad
sbb
or
pop
repnz
sahf
cmp
or
bound
mov
mov
xchg
push
inc
rolb
mov
out
add
mov
sub
adc
push
inc
jb
test
mov
stos
xor
cltd
or
inc
inc
push
cli
mov
enter
test
test
pusha
arpl
xchg
jmp
mov
cmp
hlt
call
mov
inc
dec
lea
fmuls
fldl
pop
or
cvtps2pi
mov
mov
jp
shl
iret
pop
and
push
rcl
ds
int
sbb
jmp
push
jno
sub
imul
fstl
stos
or
adcl
mov
movsl
fucomi
int3
adcb
mov
add
push
aad
ljmp
cmp
outsl
lret
pop
jnp
add
leave
mov
aad
lret
jae
sub
neg
adc
call
loope
inc
leave
clc
stos
add
in
inc
pop
addb
ficoms
jg
lret
jecxz
loopne
clc
mov
loope,pn
inc
sub
cmp
xor
jmp
adcl
subl
outsb
sub
shrl
cld
aas
inc
repz
mov
sub
mov
iret
xchg
push
xor
sbb
mov
pop
out
xlat
scas
add
ret
lods
insb
icebp
mov
xor
sti
imulb
mov
enter
and
mov
aaa
shrb
clc
push
stos
pop
ret
movsl
adc
mov
test
jo
gs
xor
mov
lahf
adc
std
cmpsl
or
repz
fiaddl
lahf
stos
mov
jae
mov
in
ret
cmpsl
push
dec
cmp
fidivs
arpl
testb
mov
repz
nop
icebp
mov
jbe,pn
mov
push
aas
xchg
fsubrl
jl
paddw
jg
pop
mov
dec
pushf
pop
aaa
out
xor
das
jne
add
xor
test
mov
cmp
inc
dec
push
mov
pop
jle
test
xchg
push
out
iret
xchg
pop
nop
jb
or
decb
loope
std
jnp
out
jo
daa
fwait
push
icebp
xchg
sbb
insb
jge
push
push
loope
xor
cmp
mov
inc
popf
sbb
mov
cmpsl
cmp
leave
sbb
aas
mov
arpl
xor
push
push
hlt
xchg
adc
ficomps
aaa
sti
and
sub
mov
or
xchg
push
aam
add
movsl
out
iret
mov
pop
fldt
out
mov
cmpsl
jbe
dec
mov
test
cmp
lcall
rcrb
mov
jmp
xchg
adc
jo
fnstenv
popa
adc
stos
dec
jl
int3
out
lahf
in
xor
test
movsl
test
in
loopne
sub
sbb
and
jmp
jge
dec
dec
sbb
pop
fs
mov
or
adc
mov
mov
sub
loope
adc
adc
jbe
dec
xlat
negb
adc
ret
dec
add
xlat
mov
cmp
cld
lcall
movsb
mov
pop
loope
sbb
mov
sub
cmp
add
out
pop
sub
and
repnz
cwtl
add
lock
add
stos
dec
jmp
mov
push
xchg
xchg
and
test
mov
movsb
push
fs
out
lock
push
rclb
cmp
jecxz
pop
fildl
xor
jle
jg
jg
jg
mov
cli
mov
push
test
xor
addr16
jae
add
int3
rolb
cmp
negl
mull
bound
jmp
insb
test
sub
add
fs
movsl
mov
add
xor
push
jbe
sub
add
cmp
push
mov
mov
orl
sbb
dec
inc
imul
and
jae
stc
scas
fwait
add
popf
andb
dec
push
movsb
sbb
stos
lea
test
pushf
orl
addl
rcrb
xor
loopne
int3
push
loop
cmp
mov
loop
insl
stc
clc
shr
ja
and
shrb
fwait
inc
lea
dec
sub
movsl
popf
fs
cmp
mov
mov
and
nopl
dec
dec
jae
sbb
jl
dec
inc
mov
dec
push
inc
mov
les
into
test
mov
pop
int3
and
testl
cwtl
or
adc
scas
jne
fmuls
push
adc
or
jp
into
xchg
mov
jbe
or
sbb
cwtl
rorb
cmp
mov
push
imul
sbb
aad
outsb
xor
nop
cmp
test
pop
and
adc
push
lock
in
push
mov
jns
cld
xor
pop
addb
xor
sub
stos
adc
outsl
inc
cmp
repz
fcmovb
and
imul
adc
lods
and
wbinvd
daa
shrl
fadds
fldenv
cmp
dec
dec
push
std
lcall
pop
les
test
dec
jmp
lods
mov
add
cltd
incl
pop
in
dec
testb
push
lret
push
clc
dec
leave
fistps
fstpl
push
jnp
imul
rorl
inc
adc
loope
int
mov
push
or
out
ficompl
push
aas
sub
mov
push
cwtl
push
adc
pop
mov
test
xor
add
stos
mov
leave
jns
inc
mov
cltd
out
xor
gs
mov
jge
fcomip
add
or
sti
sbb
jb
pop
dec
mov
or
xor
fnstenv
ret
push
sub
mov
mov
pop
lods
xor
mov
sbb
out
fpatan
ret
mov
leave
ss
jae
add
das
cltd
or
fcoml
mov
inc
into
ret
jb
sbb
aaa
xlat
pop
lcall
mov
sbb
clc
adc
leave
xchg
sbb
cmp
aaa
cmp
jg
outsb
mov
add
nop
dec
mov
adc
fcmovb
push
std
outsl
adc
and
push
inc
pop
fisttps
in
jb
mov
xor
imul
mov
hlt
fdivrl
into
mov
inc
jmp
add
bound
fcoml
dec
mov
testb
mov
jo
mov
mov
cmp
add
insb
gs
xchg
mov
mov
xchg
inc
push
ljmp
fbstp
mov
cmpsb
mov
je
shrb
roll
ret
jbe
js
out
aaa
push
inc
aas
ret
lds
sarl
popl
add
cmp
cwtl
push
out
enter
loopne
cs
push
lods
and
or
adc
test
mov
jle
and
test
fstl
inc
mov
sub
dec
mov
leave
jmp
xor
cmp
leave
roll
das
sbb
out
test
sub
dec
fs
rcll
inc
and
jae
mov
fucomi
cmpsb
lret
les
jmp
rclb
jl,pn
jl
jo
jecxz
loopne
pop
adc
aad
fsubl
jae
adc
cmp
mov
data16
ret
in
dec
jne
cld
push
jo
cltd
sahf
add
loope
inc
stos
pop
ljmp
mov
push
sbb
jmp
push
xchg
jae
inc
adc
xchg
xchg
movsl
mov
inc
js
sbb
sub
sarl
idivl
stos
je
dec
fmul
nop
aad
cmpsl
and
rcrl
and
movsl
jle
cs
or
call
cmpsl
enter
cwtl
aam
or
pop
lret
xor
shll
bound
fisubrl
fwait
pop
adc
xchg
scas
pop
lods
js
jno
xchg
inc
mov
lock
out
jo
mov
push
sub
mov
adc
addr16
mov
test
mov
pop
out
int3
and
iret
fwait
xchg
dec
cmpsb
mov
xchg
lret
neg
push
call
push
push
int
sub
arpl
cmpsb
rclb
addl
lret
inc
rcr
negl
loopne
fwait
test
inc
adc
jl
jecxz
cmp
jmp
add
in
adc
icebp
je
adc
push
xor
sub
scas
xor
pop
loopne
push
outsb
add
filds
pop
fimuls
test
push
in
ffree
push
ds
popa
data16
push
dec
ss
jae
inc
dec
sub
jne
movl
jle
mov
or
xchg
cmp
fists
pop
xor
aad
out
arpl
add
push
dec
cmp
in
dec
sub
hlt
dec
loopne
xchg
mov
std
addr16
rcrl
sbb
jno
pop
xchg
aaa
mov
or
jnp
adc
popa
add
iret
addr16
test
xor
cmp
stc
xchg
je
cmp
adc
shlb
sbb
inc
or
loope
test
out
out
push
mov
int3
lods
xor
fs
ret
xchg
sub
int
xchg
push
cmp
out
jo
dec
xchg
cmp
pop
sbb
add
inc
popa
outsb
cmp
ds
push
mov
sbb
fimull
icebp
push
push
mov
movsb
rcrl
movsb
and
cmp
cmp
imulb
adc
fucom
sbb
xchg
gs
aam
pop
imul
jp
addr16
popf
lret
cwtl
adc
arpl
ljmp
mov
dec
jl
mov
dec
cmp
sbb
popl
sbb
lahf
push
test
xchg
cwtl
jnp
lods
std
aas
divl
notb
add
mov
xchg
sahf
fdivrp
mov
push
dec
add
loopne
jnp
aam
inc
aas
mov
dec
call
sbb
mov
out
xor
rcr
insl
lods
jne
pusha
pop
inc
arpl
stos
clc
repz
push
shlb
lods
rclb
jns
xlat
pop
sbb
dec
xor
pushf
push
in
xchg
outsb
jo
sub
jmp
popf
jbe
xor
dec
mov
fstpt
inc
jmp
rolb
mov
movsl
jecxz
mov
ss
push
rorl
add
lea
mov
aad
cmpl
test
rcll
ret
or
sahf
cmp
repz
loopne
xchg
push
btc
out
pop
cmp
and
and
std
cli
aas
sbb
xchg
lsl
inc
fisttpl
or
and
in
pop
jmp
xchg
test
idivl
cmp
add
jnp
movsb
mov
jle
mov
cwtl
mov
enter
in
adc
stos
xchg
sbb
dec
dec
cmpl
rorl
imul
or
xchg
std
push
cmpsb
out
cmp
inc
jle
inc
sbbl
jle
xor
xor
xlat
or
xchg
sahf
push
out
cld
pop
cmovg
stos
pushl
xchg
outsl
jg
lock
mov
and
sbbb
push
mov
cld
js
pop
icebp
cmc
xlat
mov
out
push
sti
cltd
cmp
cmpsl
mov
pop
cld
test
jo
cmp
lret
mov
data16
lahf
ss
inc
out
jne
xor
sub
xchg
movsb
mov
or
and
push
cli
imull
std
add
add
rcrb
shr
repz
mov
das
jl
lret
fneni(8087
pop
xchg
in
add
mov
test
je
mov
jae
decb
jp
test
jnp
sbb
jbe
nop
shrl
xchg
sbb
lea
adc
push
xchg
pop
orl
lret
push
mov
test
imul
call
inc
adc
pop
sbb
movsl
insl
cmpsl
mov
int
mov
xchg
pushf
push
loop
add
ret
add
and
xchg
repz
fldl
mov
and
push
and
js
dec
shl
rep
popf
outsl
rcll
pop
jo
and
clc
jae
add
lret
in
testb
cmp
adcl
push
lods
mov
mov
xchg
or
test
rclb
inc
push
shlb
xchg
jle
insl
and
mov
inc
shr
mov
cli
sbb
sti
pop
cltd
jge
jmp
or
cltd
sbb
shl
or
outsl
pop
pop
loop
std
repnz
rcll
mov
aam
repnz
repz
cmp
iret
sahf
in
and
pop
arpl
pop
mov
stos
xchg
jle
pop
and
cmp
mov
inc
orb
out
sub
pop
adc
xchg
adcb
mov
aad
and
push
xor
into
pop
dec
stos
pop
add
or
shrb
cld
data16
pop
subl
mov
out
pop
test
test
mov
inc
xchg
sbb
sbb
adc
push
ljmp
test
in
pop
gs
ret
out
pop
mov
int
cmpl
insb
cltd
cmc
push
mov
xchg
push
jle
xchg
xor
in
scas
mov
in
add
std
push
es
lods
outsb
addb
in
negl
enter
push
add
out
pushf
mov
sbb
add
lods
mov
xchg
sahf
and
shlb
cmp
mov
outsb
shll
movl
mov
xchg
insb
inc
xchg
icebp
add
cmpsb
out
test
mov
xor
xor
xchg
mov
cld
mov
sub
mov
std
xor
js
pop
pop
sbb
inc
aaa
push
or
out
xchg
dec
mov
xor
mov
fsts
push
xchg
mov
push
cltd
popa
dec
filds
lret
in
insl
jecxz
bound
gs
pusha
fsubrp
mov
bound
enter
pop
ljmp
shll
or
jl
sub
pop
adc
jg
cwtl
sub
xchg
adc
or
sub
aad
push
jge
and
or
pop
pop
cld
xchg
dec
add
shlb
ss
push
inc
scas
mov
lods
mov
jne
and
jnp
shrb
inc
movsl
movsl
sub
insl
inc
push
hlt
fwait
add
mov
in
mov
outsl
pop
and
and
and
jae
stc
mov
loop
inc
mov
inc
ss
jmp
and
aad
mov
mov
lahf
shl
in
cmp
and
addl
xor
or
push
stos
mov
les
fldenv
fists
push
lea
xor
fwait
icebp
int
dec
push
xor
sub
dec
orb
fidivrl
sbbb
xor
pop
mov
stc
xchg
nop
movsl
aad
jl
sbb
rcr
sti
sub
cwtl
nop
dec
outsb
jmp
mov
sbb
ficomps
xchg
fidivs
inc
pop
and
das
test
xor
shrb
push
lret
and
out
mov
xor
sbb
xlat
lret
fisttps
in
adc
sbb
pop
rcrl
fst
jmp
out
fdivp
dec
fisubrs
xchg
movsb
lahf
lahf
dec
dec
and
mov
push
mov
mov
lods
int3
sbb
sbb
inc
ja
dec
push
test
mov
add
cli
imul
rolb
jbe
outsb
punpckhdq
push
in
cli
jecxz
in
and
push
sub
add
sbb
xchg
loop
dec
pusha
add
es
cld
sub
mov
mov
enter
pop
mov
inc
xor
test
arpl
loop
adc
or
loope
sub
mov
or
add
mov
out
xor
dec
pop
or
popa
jno
pushf
jmp
scas
mov
mov
mov
dec
or
mov
pop
idivl
scas
arpl
sbb
push
lds
jmp
cmp
cmpsl
pusha
mov
js
ja
mov
bound
hlt
mov
aad
pop
mov
sub
xchg
mov
jmp
iret
and
nop
mov
adc
lahf
cmpsb
pop
jge
cmp
mov
inc
mov
imul
pop
push
pop
mov
and
dec
push
xor
push
out
ja
fdivrl
repz
xchg
jge
lret
mov
gs
fdivrl
push
ficompl
dec
std
js
adc
and
into
mov
xor
icebp
add
pop
mov
xor
daa
mov
imul
push
sbbb
ficoms
inc
or
pop
test
xlat
mov
jae
loopne
aas
lods
cmp
lret
sahf
test
dec
push
fildl
mov
cmp
rorl
cmp
sub
mov
test
push
lock
iret
in
jg
adc
xchg
add
cwtl
jae
pop
cmp
and
and
mov
jge
or
ret
or
inc
insl
je
inc
pop
cmc
cmp
sub
aad
sbb
data16
adc
or
stos
outsb
repnz
mov
sub
mov
sbb
in
dec
inc
imul
nop
xor
leave
bound
mov
in
fistps
sub
mov
jge
sub
or
xchg
int
cwtl
mov
or
int3
cmpsl
addr16
cmp
lahf
pop
adc
lods
pop
in
in
push
add
mov
push
cld
rclb
aas
repz
xchg
fsubr
andb
pop
push
es
out
outsl
cmp
jge
std
and
lea
sarl
or
pusha
cltd
cmp
pusha
scas
mov
aam
repnz
dec
mov
imul
pop
mov
fiaddl
in
jg
sub
jmp
jbe
mov
bound
scas
sub
sub
pop
jmp
mov
in
aad
cmp
push
loop
or
fsts
popf
cmp
adc
pop
push
scas
scas
pushf
pop
cmp
hlt
cmp
mov
push
lcall
cmp
mov
shrb
and
mov
rclb
jmp
int3
sub
lock
fdivl
jbe
fsubs
cmc
lret
and
sub
xor
push
cmp
jmp
arpl
roll
or
gs
cli
mov
jecxz
movsb
add
push
mov
daa
push
nop
xchg
inc
cmp
in
in
fwait
inc
fmulp
mov
mov
arpl
stos
inc
or
pop
xorl
push
jno
mov
and
lea
mov
or
stos
sti
inc
add
adc
dec
lret
pop
sti
mov
mov
mov
test
sbb
push
mov
cmp
add
pop
lret
ret
mov
stos
push
aam
sub
in
mov
dec
icebp
mov
and
loopne
jnp
mov
mov
aas
push
and
cmpsl
cltd
ret
xchg
dec
cltd
push
mov
test
nop
fistpll
sbb
jbe
add
popf
lcall
stos
into
dec
sbb
mov
insl
call
xchg
push
xor
ljmp
add
scas
movsb
or
inc
push
shrl
pop
cwtl
push
loop
dec
xchg
adc
xor
or
adcb
xchg
cmpsl
js
lcall
mov
dec
out
fsts
sub
cmp
sub
popf
pop
fs
mov
mov
aas
add
pop
xchg
mov
fidivs
stc
add
or
out
inc
mov
cmpsb
ficompl
or
sub
pop
adc
pushf
push
sbb
push
outsl
les
mov
cltd
or
xor
scas
pop
hlt
sbb
repz
push
dec
cmp
popa
push
test
push
mov
cld
mov
js
sub
in
jp
add
jmp
cld
js
xchg
mov
and
adc
xchg
inc
insl
mov
cmp
pop
mov
mov
pop
stc
pop
jmp
gs
inc
inc
cs
xor
movsb
push
or
pop
adc
cs
sbbl
or
push
rol
in
sub
cwtl
jmp
into
insl
test
scas
mov
xchg
push
mov
mov
jbe
cmp
testb
lods
lahf
repnz
push
jbe
pop
add
ds
jmp
pop
stos
mov
imul
pop
dec
imul
jns
test
in
xchg
lret
gs
pusha
cltd
mov
inc
fcmovnbe
sub
push
aaa
jg
loope
jp
mov
lret
cmp
xor
out
aaa
dec
leave
out
out
ds
push
lret
add
push
popa
push
lds
push
mov
bound
lods
scas
or
movsl
adc
adc
mov
sbb
mov
out
push
js
mov
inc
mov
dec
inc
and
adc
inc
jp
push
insb
mov
cmpsl
out
stos
jae
loopne
inc
cltd
fadds
xlat
sub
or
adc
cmp
add
sub
pop
call
xor
loopne
negl
pop
jns
fcom
cmp
daa
decl
stos
sbb
faddl
push
lret
pop
jne
jns
jns
popa
mov
jl
in
in
push
ret
data16
jae
cld
and
sahf
popa
push
push
sbbb
ja
or
jb
or
rclb
dec
daa
test
scas
stos
mov
fiadds
cld
inc
add
std
fldenv
xor
xchg
shr
loopne
xchg
mov
std
and
xor
aam
adc
pusha
or
movsb
loop
and
insb
xchg
aas
iret
push
sti
xchg
sub
pop
cmpl
sub
push
xchg
cmp
mov
pop
pop
fldcw
jae
add
cmp
push
icebp
scas
enter
cmp
dec
test
inc
pop
add
pop
sar
ficompl
jg
pop
sub
dec
jg
sbb
cmp
aaa
xchg
pop
aam
jl
push
outsl
stos
int
jo
push
lcall
inc
int
xchg
mov
fs
cld
call
mov
push
rclb
mov
in
fidivl
xchg
int3
aad
mov
and
mov
stos
mov
repnz
xchg
xadd
inc
push
xchg
js
cwtl
out
clc
lods
cs
nop
xchg
jge
mov
int
cwtl
push
iret
negl
add
pop
hlt
mov
jmp
sbb
fimuls
jmp
mov
add
xchg
repz
and
sahf
js
xchg
xor
push
pusha
int3
push
fmuls
fbld
js
ja
cwtl
adc
sbbb
enter
flds
lods
mov
movsl
and
mov
movsl
mov
in
dec
incl
mov
mov
loope
add
mov
pushf
push
push
xchg
aas
or
in
sub
orb
insl
es
aas
mov
jbe
cmpsb
lret
stos
nop
adc
cmpb
insb
fs
ljmp
scas
es
cmp
mov
lods
aas
bound
out
cs
enter
sbb
xchg
ret
lcall
das
ret
insb
into
lret
mov
aaa
movsl
adc
pop
pop
pop
mov
xchg
je
in
sbbb
sub
xor
xor
mov
sub
pop
push
loop
inc
cmp
mov
mov
or
xorb
rorl
push
popf
and
xchg
sub
ja
pop
out
into
adc
iret
test
imul
xchg
insb
popf
mov
or
jae
jp
jns
loope
mov
repnz
sub
inc
inc
addl
and
lret
mov
cmp
push
pop
and
jno
cwtl
sub
jnp
in
loopne
xor
imul
pop
add
xchg
std
push
push
jnp
inc
mov
iret
xchg
stos
inc
sbb
lods
jle
cs
push
iret
repz
push
icebp
sbb
lock
adc
jmp
add
mov
mov
mov
add
sbb
jecxz
push
scas
stos
sbbb
dec
popa
push
push
stos
mull
or
loop
mov
sbb
fdivr
xor
mov
rclw
mov
clc
jno
jl
clc
nop
cmp
aaa
and
scas
fistl
push
arpl
xchg
ljmp
or
in
int
jb
pop
cld
test
mov
jmp
imul
push
xchg
dec
or
cwtl
in
dec
xlat
fidivrs
push
xchg
dec
mov
xchg
dec
cmp
in
jb
ret
dec
in
mov
aad
cmp
loope
push
test
push
inc
gs
aas
mov
clc
lahf
cltd
mov
lea
xchg
mov
sahf
in
cmp
loop
cmp
loopne
movsb
cmp
jp
mov
idivl
xchg
pusha
mov
fdivs
mov
andb
sub
lret
and
rclb
pop
push
jnp
and
mov
and
neg
sbb
leave
loopne
xchg
mov
mov
xchg
mov
mov
and
jno
cmp
jl
mov
js
or
xor
or
pop
xchg
lock
repnz
roll
xchg
loopne
sub
psraw
jno
mov
dec
stos
ljmp
lret
in
mov
sbb
negb
mov
cltd
pop
jg
insb
mov
imul
add
popl
pop
push
mov
and
pop
cmp
mov
dec
mov
mov
push
pop
xor
mov
push
les
flds
cmpsb
sub
ja
aaa
loopne
cli
fcomps
ds
insl
and
xchg
mov
movb
pop
xlat
mov
mov
orl
mov
cmpsb
ss
mov
fwait
pop
jns
and
jb
rcrl
sub
xchg
mov
and
adc
fmull
xchg
leave
dec
and
idivl
out
int
fcmovne
mov
mov
xchg
xor
add
mov
xchg
mov
lods
push
call
lahf
jl
jnp
ss
xchg
insl
flds
sub
test
dec
dec
mov
mov
add
outsl
mov
pusha
add
pop
mov
cmpsb
mov
dec
and
fsts
rorl
call
jge
sahf
sbb
pop
dec
jecxz
mov
mov
mov
test
sti
mov
pop
in
jecxz
mov
push
pop
dec
or
fdivl
outsl
fldenv
push
inc
add
mov
mov
out
mov
into
aaa
or
jl
push
test
addl
add
add
sub
mov
mov
sbb
xlat
fcompl
scas
push
js
rorl
aaa
xor
iret
jl
xchg
xor
in
mov
jecxz
add
es
pslld
add
xor
enter
movsl
pop
orb
pop
std
in
jb
test
fidivrl
jecxz
iret
lcall
and
adc
add
xlat
add
mov
pop
fadds
push
or
fmull
std
sbbl
mov
cmp
sub
mov
jns
imul
mov
mov
push
outsb
pop
inc
dec
repnz
dec
mov
int
or
xchg
inc
push
adc
add
mov
imulb
test
dec
xor
push
and
fistpl
jge
into
inc
pop
add
notl
loopne
ror
fs
data16
fimuls
mov
lds
xor
cmpsl
inc
insl
mov
enter
stos
or
jmp
leave
fimull
ficomps
jg
stc
fistpl
jp
xchg
and
mov
testb
push
jl
xchg
lea
push
push
pop
and
sarl
bound
mov
add
jge
mov
mov
xchg
pop
and
std
or
ljmp
inc
add
ret
pop
movsl
and
xchg
loop
aam
pusha
mov
and
orb
subb
pop
leave
jp
mov
inc
movsl
xchg
pop
mov
int3
push
jno
adc
cltd
movl
add
bnd
dec
jmp
cmp
ja
bound
es
fists
sub
jp
pop
hlt
mov
mov
scas
jo
sub
push
xchg
rolb
gs
and
and
mov
cld
movsl
jnp
jg
fst
or
int3
dec
sub
sub
sub
orb
adc
insb
cmpsl
jns
dec
test
scas
sbb
ljmp
sarl
loope
pusha
push
mov
jge
xor
jge
xchg
cltd
repz
imul
cmp
in
xor
sub
jno
jmp
inc
add
incb
lret
loop
movsl
sbb
inc
mov
push
into
stc
pusha
loop
in
jo
adc
enter
sbb
pop
cmc
cmpsb
push
cmp
inc
mov
aad
dec
dec
fucomip
into
sub
lds
cwtl
dec
jmp
inc
enter
add
xor
mov
mov
sti
hlt
lea
stos
mov
insb
int
cmp
add
stc
sub
push
xor
add
popf
or
aas
out
jge
test
cs
jns
xor
std
xchg
aad
dec
addb
mov
jno
jne
in
mov
fisubrl
iret
fimuls
mov
sbb
sbbl
xor
lea
mov
popa
mov
mov
xchg
adc
mov
push
and
dec
adc
call
mov
add
jp
mov
dec
xor
mov
add
pusha
xchg
or
leave
sahf
and
pop
inc
pop
pop
imul
mov
in
mov
stos
lods
stos
mov
xchg
xchg
dec
fstp
pop
xor
cmp
dec
pop
sbb
dec
sub
jl
shll
lret
cli
popf
mov
ret
jge
and
movsb
jno
outsb
sti
lock
jle
sbb
imul
and
mov
mov
jmp
aas
xchg
pop
int3
add
pop
out
xchg
lock
and
clc
mov
in
lods
cltd
sahf
decb
add
inc
aad
dec
jae
negb
mov
push
int3
stos
dec
sub
jg
lcall
cmp
mov
mov
mov
xchg
sub
outsl
jl
and
dec
arpl
push
fldl
ja
xchg
aas
dec
mov
ss
dec
mov
inc
cmp
in
jge
mov
popa
pop
sbb
ja
ss
sub
in
scas
xchg
jle
hlt
mov
es
scas
das
pusha
sbbb
jns
aaa
mov
mov
adc
jae
adc
jp
cmpb
lret
sbb
dec
mov
jae
push
inc
and
sarl
mov
call
inc
jg
hlt
push
faddl
movb
pop
adc
cmp
dec
adc
daa
jecxz
loope
push
out
neg
les
adc
add
stos
hlt
popa
aad
outsb
pop
xchg
ljmp
xchg
cmp
pop
jne
xchg
test
push
pop
and
mov
movsl
fisubl
out
rcr
test
ret
shl
mov
lret
cmc
jecxz
cmc
inc
aam
stos
mov
pop
adc
filds
enter
jp
popf
je
xchg
push
int3
cmpsl
and
pop
or
test
pop
jnp
push
shlb
mov
jg
xor
imul
push
xor
inc
jp
or
fisttpl
faddl
insb
push
jb
cmp
push
in
fsubp
lret
bound
jnp
xchg
adc
cmp
out
mov
adc
cmp
jmp
sbb
xchg
push
faddl
dec
dec
fisubrs
rol
add
ss
rcrl
sbbb
loope
cmp
jl
ret
hlt
ss
xor
sub
push
or
add
mov
arpl
sbb
xor
mov
jmp
stc
mov
push
call
gs
mov
jl
inc
dec
data16
mov
ljmp
stc
js
fnsave
jb
and
jnp
loop
imul
aam
dec
jle
mov
inc
outsb
jge
out
cwtl
sbb
pushf
insl
loope
xchg
inc
sbb
jp
pop
sbb
int
sub
gs
imul
add
lods
stos
sbbl
mov
cs
daa
dec
icebp
imul
imul
lock
sub
mov
pop
popf
and
mov
jecxz
pop
cld
and
lods
addr16
stos
mov
dec
stos
repnz
or
testl
idivb
pushf
mov
fwait
loop
cmc
fdivl
lcall
enter
xchg
test
add
dec
inc
clc
push
xchg
xchg
xchg
mov
je
pop
call
sbb
jl
xchg
pop
add
out
sub
push
leave
fndisi(8087
pop
dec
xor
cs
lock
lret
push
aad
jnp
mov
lahf
push
pop
outsl
and
xchg
push
sub
cs
mov
cmp
outsb
sub
adc
mov
adc
enter
cmc
std
and
fisubs
insl
outsl
stos
adc
shll
or
dec
jne
in
and
push
lods
sarl
pop
lcall
inc
inc
cmp
jecxz
cltd
data16
cltd
movsl
xor
pushf
jecxz
jl
sub
or
lcall
push
or
rcr
mov
pshufw
mov
sub
enter
outsl
inc
lea
jecxz
shll
out
cmp
orl
scas
inc
or
jne
inc
in
push
pushf
sbb
out
pop
pop
loop
inc
fcompl
jne
xchg
outsl
sbb
and
xor
lods
add
inc
xchg
popf
pop
xorb
inc
pop
sub
or
and
jb
jo
mov
sbb
jg
lcall
xor
sbb
movb
insl
loopne
sbb
ret
js
mov
scas
mov
push
pop
cmpsl
push
add
daa
into
in
out
out
cmp
in
fcoml
sti
ljmp
cli
mov
inc
js
stos
out
add
and
mov
aas
push
adc
aad
stos
jo,pt
add
ds
imul
sub
pop
cli
stos
xchg
add
xchg
sbb
and
xor
cmp
add
enter
fsubs
fcos
cli
sbb
mov
jnp
das
cmpsl
cmp
dec
cmp
mov
xchg
mov
cld
adc
sbb
sbb
fcmovnbe
mov
shrb
subl
add
cmpsb
pop
mov
xor
mov
inc
dec
in
hlt
fwait
gs
ja
jns
lret
sbb
shrl
cmp
push
jle
xchg
sbb
mov
in
adc
repnz
stc
and
fs
mov
add
and
popf
push
insb
das
aaa
cmp
or
add
test
outsb
jae
mov
mov
hlt
aaa
sarl
fidivrs
aad
jg
or
pop
sub
stos
adc
xsavec
orl
mov
daa
insb
sub
int3
and
mov
or
inc
imul
dec
jmp
in
add
cmp
cli
fdivrp
add
and
dec
inc
xchg
adc
clc
pop
data16
xchg
sub
icebp
pusha
lcall
pop
xor
nop
out
pop
push
out
hlt
mov
sbb
cmp
repnz
xor
and
pusha
loope
std
mov
mov
xlat
sarl
repnz
addr16
mov
stc
and
jle
cli
js
jp
cmpsb
outsb
lret
mov
stc
or
loop
jne
xor
cltd
stos
mov
pop
mov
push
pop
pop
clc
repnz
aam
inc
dec
jg
jl
lcall
imul
les
daa
and
add
pop
cmpsb
cmp
cmp
aam
jnp
rclb
ljmp
lock
jne
push
pop
pop
stc
int
cmp
inc
mov
or
loopne
cli
lock
push
mov
xchg
or
xor
les
scas
xchg
mov
jbe
sbb
pusha
fwait
addr16
mov
mov
in
mov
and
iret
sbb
mov
aaa
movsb
fwait
int3
mov
std
xor
dec
pop
cmp
jp
cmpsl
xchg
je
out
and
fdivrl
aad
rolb
imul
andb
mov
enter
rclb
pop
xchg
inc
pop
mov
cmpsl
xor
js
stc
pop
pop
mov
push
fisttpl
lret
adc
addr16
lcall
or
das
ret
fsub
pop
lds
pusha
movsl
adc
adcl
lods
lret
push
lock
jg
sbb
sti
icebp
adc
rorb
push
pop
mulb
sub
push
cmp
adc
add
test
xchg
dec
pop
xlat
mov
push
cli
cwtl
popf
mov
and
lds
lods
mov
dec
testb
jl
mov
dec
cmp
cmp
jne
fwait
mov
add
mov
les
sub
pop
mov
repz
scas
rcrl
cmpsl
pushf
gs
dec
lea
outsb
sbb
fxtract
jae
ljmp
jo
adc
addr16
mull
dec
mov
and
out
imul
shrb
enter
subb
or
mov
in
xor
outsb
dec
mov
inc
outsb
mov
mov
or
lcall
rcrl
mov
arpl
loopne
mov
xor
std
pop
sub
out
adc
pop
shll
int
lods
push
loop
push
int3
addr16
mov
rep
adc
pop
adc
pop
mov
pop
or
fsubrl
test
jo
push
test
dec
push
lahf
jp
test
xor
mov
pushf
imul
aaa
or
push
pusha
pusha
pushf
and
fs
outsb
movsb
fs
ss
mov
fistpl
test
mov
pop
in
pop
aas
jle
cmp
popf
push
out
push
adc
lahf
xchg
movd
jmp
loop
pop
mov
adc
divb
and
sbb
test
js
outsb
mov
adc
cmp
inc
inc
in
mov
jl
movsb
push
adc
push
push
stos
call
jge
jecxz,pn
push
xchg
icebp
inc
or
out
adc
in
adcb
xor
loop
or
mov
xchg
jb
dec
test
sbb
in
out
cmovg
in
ss
sub
mov
push
pop
scas
popa
cli
sbb
jmp
in
test
faddl
xchg
xlat
dec
fists
cli
xlat
in
jae
pop
popa
mov
mov
scas
lcall
sahf
cmc
xchg
bswap
mov
mov
sahf
mov
adc
stos
adcl
mov
fsubrl
xchg
mov
cmp
ljmp
dec
bound
cmp
inc
sub
and
inc
pop
mov
or
cmp
inc
pop
add
push
jp
mov
add
roll
lods
scas
or
sti
cmp
repnz
xor
mov
xchg
mov
mov
sbb
xchg
inc
fwait
adc
fmuls
mov
stc
mov
outsb
push
mov
mov
sbb
and
push
je
movsl
jo
nop
mov
mov
out
stc
mov
in
stc
das
shrb
mov
jb
jle
inc
dec
sti
imul
test
mov
fwait
push
icebp
pop
jno
mov
sub
lea
xchg
ret
push
pop
out
ljmp
sahf
sub
lods
in
push
clc
pop
mov
negb
cmp
sub
dec
and
aam
test
imul
sbb
test
adc
fucomi
and
dec
fstps
jle
rcr
inc
sbb
push
outsl
jg
dec
add
das
lea
testb
ljmp
popf
sbb
iret
arpl
xchg
and
mov
or
movsb
loopne
pop
adc
shlb
pop
ret
sbbl
ljmp
inc
xor
roll
xchg
xchg
xchg
mov
nop
outsb
jecxz
lea
lods
jecxz
pop
mov
je
imul
clc
ss
xor
scas
add
sub
adc
addl
mov
dec
ret
movsl
pop
inc
imul
dec
xor
cmp
outsl
mov
nop
cli
pop
dec
inc
or
jnp
push
fisttpll
mov
in
andb
fs
addr16
mov
xor
out
jo
inc
push
xor
dec
add
inc
jno
push
out
fcoml
ds
fstp
fmull
dec
aam
repz
push
jb
scas
cmpsl
aam
leave
lods
mov
orl
hlt
or
shrb
stc
add
stos
sub
lods
push
scas
sub
mov
dec
mov
aam
mov
push
icebp
shrl
add
mov
test
mov
rcrl
fcompl
mov
sbb
addb
ret
in
dec
shll
jae
add
icebp
jecxz
fwait
sub
jbe
movsb
hlt
xchg
aaa
out
subb
popa
jb
cwtl
popa
push
mov
xor
sub
inc
add
adc
sahf
pop
pop
push
push
add
pop
dec
fwait
or
ret
cmp
call
imul
push
sbb
nop
jle
sbb
mov
inc
mov
addr16
xchg
dec
ja
cwtl
mov
jnp
mov
aam
mov
jmp
fiadds
sub
lcall
test
push
mov
pushf
mov
push
test
insb
cmpsl
sub
cwtl
xchg
and
pop
rep
dec
mov
cmp
sahf
adc
hlt
xor
popf
repnz
std
push
cwtl
mov
jg
dec
sub
push
fwait
cli
xorb
lods
cmc
mov
push
pushf
fwait
or
mov
test
xor
jnp
pop
sbb
inc
dec
inc
jp
and
add
mov
pop
push
pushf
cmp
out
test
scas
out
not
in
xchg
adc
mov
mov
and
and
sahf
loopne
xchg
pushf
dec
pop
stos
mulb
mov
stc
sbb
mov
cmp
pop
lret
icebp
adc
adc
mov
pop
sub
lods
test
sub
lahf
add
dec
jl
ljmp
jne
enter
mov
roll
cmpsb
jno
jnp
mov
push
mov
gs
pusha
cmp
aam
and
sub
mov
cs
cltd
js
mov
sbb
xlat
add
pop
in
mov
mov
cmp
enter
dec
mov
jo
outsb
movzbl
mov
push
insl
pushf
sub
mov
jp
aaa
mov
insl
leave
addl
lock
or
movsl
jne
aad
sub
lcall
js
pop
sub
out
xor
int3
adc
imul
push
and
dec
cmp
and
jne
sbb
dec
mov
dec
into
fiaddl
test
outsl
or
cmp
xlat
mov
insl
out
jae
lahf
mov
or
je
and
iret
pop
and
fisubl
or
jg
andl
xchg
jo
stos
and
mov
and
dec
pushf
dec
cmp
lahf
mov
repnz
adc
out
mov
movsb
push
xor
jge
push
outsl
fcoms
xchg
mov
xor
ja
lock
mov
mov
sahf
jl
mov
push
shrb
push
out
pushf
pop
cmp
inc
outsb
in
push
mov
lods
outsl
rcrb
pop
out
je
sub
ret
inc
aas
adc
outsb
stos
dec
lahf
pop
mov
and
das
cltd
cltd
lods
push
jecxz
jle
jae,pt
push
xor
orl
jle
cmp
lahf
adc
jbe
sbb
mov
lret
outsb
inc
sub
push
xchg
mov
cltd
cmp
pop
repz
fistpll
xchg
rclb
mov
mov
sbb
xchg
enter
jge
mov
cwtl
xchg
jo
sbb
ja
add
push
mov
jge
dec
fwait
push
cmp
push
push
lock
mov
mov
jnp
xchg
and
adc
mov
loop
ss
fs
pushfw
xor
fsubs
aad
mov
mov
lods
dec
test
jp
insb
and
mov
decl
mov
lods
mov
nop
and
mov
sub
inc
xchg
addr16
push
inc
aad
pusha
std
push
mov
cmpsl
mov
jb
lods
jmp
xchg
xchg
mov
or
pop
test
hlt
xchg
orl
aas
and
addl
mov
fbstp
mov
popa
data16
sub
or
movd
inc
and
cmpsb
enter
les
popf
cmc
pop
mov
sbb
mov
ds
ret
inc
test
rorb
xchg
ror
pop
in
bound
outsl
mov
mov
sub
rol
sub
jb
xor
int3
inc
mov
pop
sub
xchg
loope
push
mov
lret
repnz
test
push
out
negl
add
pushf
adc
out
sbb
pop
push
in
rolb
dec
subl
ret
lret
push
sbb
icebp
jle
call
addr16
add
fmuls
lods
jmp
or
pop
sti
pop
mov
ja
loop
arpl
insb
push
sub
and
mov
inc
cmpsl
int3
jle
test
mov
lods
cltd
call
fsubrs
shlb
sub
sbb
inc
iret
push
fcomp
ss
lret
xor
xchg
lods
adc
cmp
sbb
inc
add
jmp
arpl
xchg
dec
jmp
out
or
out
or
mov
push
idivb
scas
mov
jl
mov
and
cmc
add
fs
and
leave
xchg
jmp
adc
cmp
rorl
aad
stos
jns
inc
push
sbb
or
jp
push
jnp
push
or
cs
shl
mov
and
push
inc
nop
rclb
loop
mov
movl
dec
inc
rcrb
js
movsb
sahf
sahf
addr16
out
in
sbb
mov
enter
lret
and
in
ljmp
pop
aam
enter
js
nop
add
push
sbb
mov
push
add
sbb
les
xchg
jnp
aaa
outsb
push
hlt
cmp
testl
sbb
call
push
lock
xchg
mov
push
std
sbb
cltd
inc
nop
test
pushf
cmp
icebp
xor
sahf
int3
mov
adc
mov
pop
fwait
addr16
jo
fsubl
mov
or
mov
ds
int3
subb
xlat
fstpl
outsl
cld
je
ret
adc
dec
sbb
jp
inc
mov
loope
lret
mov
or
jb
push
mov
neg
xchg
pop
xlat
ljmp
inc
aad
mov
mov
add
out
mov
mov
push
add
fldl
popa
mov
mov
jo
aam
repnz
pop
dec
sub
sbb
popf
inc
loope
xchg
rclb
jne
xor
xlat
fistpll
enter
gs
add
push
sub
sub
and
pop
not
cpuid
push
sbb
rolb
jb
dec
fnstsw
pusha
popf
popa
in
roll
shll
xor
inc
mov
hlt
rcrl
std
dec
call
dec
ljmp
sbb
cmc
inc
pusha
fidivs
mov
sub
mov
add
mov
aas
ja
pop
push
pusha
faddl
lds
cwtl
and
inc
leave
fcomi
cmc
cmp
mov
inc
sbb
or
xor
pop
aam
xor
lahf
cmp
movsb
add
push
mov
cmp
sbb
push
and
gs
mov
iret
sbb
enter
push
add
mov
int3
fistl
jg
jge
mov
mov
mov
es
sbb
dec
sbb
mov
stc
xor
out
negl
icebp
cwtl
andl
pushf
lods
je
cli
lods
mov
repnz
mov
sahf
cmp
inc
in
xchg
inc
imul
out
loopne
scas
mov
enter
and
mov
ret
adc
pop
test
sti
inc
add
and
mov
cmp
mov
repnz
xlat
sbb
push
xchg
popf
dec
mov
fnstsw
pop
imul
xlat
mov
push
call
jge
stos
sub
inc
push
fistps
lock
mov
dec
sub
mov
adc
push
lea
popa
push
add
aam
fsubrl
inc
and
jns
cltd
push
pop
sti
jle
fldl
mov
pop
fwait
or
sbb
mov
jmp
mov
fwait
mov
and
fists
out
inc
lds
mov
scas
jo
push
mov
push
fs
ret
sub
xor
mov
dec
gs
loopne
adc
inc
movsb
mov
mov
imul
push
dec
pop
push
push
sub
paddb
pop
sbb
fwait
out
mov
mov
jnp
lds
cmp
xchg
popa
stc
jmp
scas
pop
mov
int
adc
in
je
test
jl
mov
rol
or
les
ljmp
inc
push
in
inc
mov
adc
stos
imul
into
leave
enter
scas
movsl
mov
dec
movsb
repnz
sub
and
scas
ds
imul
pusha
loopne
fcomps
ja
int
daa
ret
inc
dec
ss
push
out
xor
mov
adc
dec
xchg
sahf
mov
movsl
enter
xor
jmp
xor
insb
adcb
jae
je
adc
jecxz
lods
and
lret
lret
adc
or
xor
lcall
lret
adc
jle
inc
xchg
mov
fisubrs
adc
arpl
xor
xor
into
stos
jecxz
lcall
aad
or
subb
xchg
mov
sbb
cmpsb
fcomip
lea
push
sbb
xchg
xor
mov
pushf
inc
jle
orl
and
xchg
add
jge
dec
mov
dec
push
sub
jmp
lds
out
push
cmp
mov
and
test
je
adcl
testl
cmc
mov
add
push
add
aam
into
xchg
push
aas
leave
adc
mov
mov
and
pushf
and
cmpsb
inc
xchg
das
cmc
cmc
scas
or
addb
ja
add
push
pop
mov
xchg
int3
leave
insl
mov
push
mov
adc
push
inc
xchg
lret
loope
xchg
cmc
outsw
arpl
mov
inc
cwtl
jg
sbb
push
ss
inc
mov
roll
xor
mov
mov
jecxz
out
dec
mov
sbb
movl
pusha
inc
je
jp
sub
outsl
cmp
jp
inc
out
std
in
cmp
adc
scas
daa
pop
cmp
into
mov
ret
xchg
arpl
push
lret
pop
mull
mov
cmc
cmp
add
insb
popf
push
push
dec
scas
push
push
imul
popf
xchg
inc
popa
ja
inc
dec
ljmp
mov
dec
in
pop
jnp
xor
pop
sti
jg
add
test
scas
ss
mov
mov
pop
inc
cmpsb
lcall
das
dec
adc
inc
stos
icebp
in
pop
cmp
or
cmp
or
loop
mov
rcl
rolb
loop
divl
imull
jg
cmp
dec
add
in
popa
fwait
mov
push
xor
imul
inc
sub
or
and
scas
jmp
push
ljmp
js
jl
fimull
xchg
out
xorl
test
mov
jae
ror
sub
frndint
loop
inc
and
fcom
aad
dec
ret
dec
inc
repnz
idiv
push
aaa
xor
test
adcb
mov
insb
xlat
pop
shr
push
or
pop
imul
push
fwait
popf
adc
test
sub
cmp
aaa
lcall
cmpl
aad
mov
jle
jno
xor
xor
mov
mov
aad
outsb
inc
insb
in
pop
adc
add
test
sub
xchg
and
test
leave
mov
iret
je
dec
outsb
pop
insl
or
shl
mov
dec
and
clc
mov
jne
xchg
lcall
inc
int
int3
cmp
fimuls
and
fisubs
xor
and
in
pop
pop
jae
aad
push
or
jp
dec
cli
xchg
mov
inc
bound
mov
mov
add
sbb
push
add
mov
outsb
pop
fwait
dec
sbb
xchg
sbb
fildll
mov
fisubl
adcl
and
fisubl
mov
mov
xor
stos
fisubl
pop
ret
aam
mov
add
pop
aaa
add
dec
xchg
sti
jge
out
sub
sub
adc
add
sbb
stos
pushf
dec
pop
ret
lcall
scas
pop
cmc
arpl
iret
int3
sti
mov
dec
sbb
and
dec
js
push
pop
je
inc
cwtl
cmp
je
cli
fadds
inc
fmull
pop
mov
push
popf
fwait
cs
out
shl
or
inc
add
mov
and
xor
mov
xor
rcrl
push
push
dec
outsb
fs
fmull
outsl
add
ret
xor
ds
xchg
shrl
test
jle
pop
mov
mov
aaa
jne
adc
cmp
shrl
and
test
leave
es
cmpsl
imul
push
xor
dec
sub
sbb
sub
out
sub
adc
sbb
jg
and
push
add
pop
sub
outsb
repnz
aam
aaa
scas
sbb
in
inc
in
xchg
cwtl
stos
imul
gs
ffreep
jne
shrd
xor
jl
call
aam
fstp
nop
sti
ljmp
fistpll
iret
mov
loop
push
test
inc
pop
add
dec
xchg
jb
adc
xchg
dec
lds
lods
imul
idivb
cmpsl
sub
bound
mov
jo
add
jae
or
cmp
xor
in
lcall
femms
add
ja
ficoml
fidivrl
lcall
sbb
out
jmp
das
mov
cmp
xchg
push
mov
sub
xchg
int
call
inc
ja
arpl
daa
sbb
test
sub
adc
cs
adc
inc
fcmovnbe
daa
sub
xlat
jae
pop
mov
push
ret
pop
rorl
bound
ret
xchg
dec
push
push
inc
or
push
lock
fnstsw
push
pop
cmp
bound
mov
int
jl
xchg
xchg
cld
inc
cwtl
xor
fwait
scas
push
rcll
out
sub
cmc
mov
inc
mov
add
adcb
push
adc
stos
dec
cli
adc
in
jae
or
rcrb
fbstp
mov
mov
xchg
std
lods
inc
shr
stos
mov
test
lret
xchg
test
mov
call
xchg
mov
repz
adc
jns
orl
aaa
adc
adc
xor
xchg
sub
mov
xchg
and
inc
mov
mov
dec
shll
sbb
cmc
dec
xor
pop
ret
jbe
ljmp
mov
out
fbstp
xchg
ret
fisttpl
push
rolb
xchg
dec
shl
jg
int3
inc
aas
sub
inc
out
cmc
mov
xchg
stos
push
adc
push
dec
mov
pusha
clc
lcall
js
test
push
jne
mov
je
mov
in
mov
outsl
clc
scas
cmpsb
loop
scas
std
fwait
or
clc
aaa
inc
xchg
mov
scas
into
je
dec
int
les
flds
sbb
push
pop
sbb
mov
fildl
into
pop
inc
sbb
call
mov
jl
cli
jle
pop
mov
inc
xchg
ret
mov
sbb
mov
fisttps
out
dec
pop
and
jg
lods
push
mov
fwait
cmp
and
into
les
ror
nop
data16
pop
loopne
mov
push
xchg
lahf
daa
push
repnz
lret
cs
jg
ret
in
and
test
lds
sbb
and
pushf
fdivrs
outsb
out
add
fdiv
sbb
nop
mov
mov
rcrl
loope
mov
sbb
xchg
adc
xlat
fistps
inc
hlt
xchg
lcall
pop
jo
add
loopne
pushf
cmc
data16
in
mov
jb
addb
jmp
scas
mov
ffreep
test
pusha
int
add
incb
cmpsb
jp
js
lret
sbb
pop
add
out
add
and
jo
mov
inc
out
sahf
xchg
int3
pop
leave
or
ljmp
adc
movsl
mov
daa
enter
cmp
mov
insb
lods
ss
ss
pop
or
mov
cltd
movsl
xchg
xor
lock
pop
movsl
sbb
mov
mov
push
push
sub
bound
rcrb
xor
das
pop
mov
in
cmpsb
std
dec
push
hlt
xchg
jmp
popa
lea
ja
add
xor
subb
inc
mov
or
cltd
out
fadds
ja
lahf
into
insl
pop
mov
das
or
dec
xchg
lret
jns
insl
sbb
mov
ja
aad
jp
and
fimuls
repnz
cmc
hlt
imul
add
push
dec
sahf
rol
sarl
fcomi
pop
mov
xor
jg
push
pop
cmp
lods
pushf
ret
enter
pop
push
jns
jge
add
stc
dec
sbb
mov
add
stc
jmp
pop
sbb
pop
cwtl
and
push
into
je
pop
mov
jbe
xor
and
cld
imul
addl
or
add
fcmovu
outsb
mov
addl
test
add
mov
sub
test
add
add
out
out
addr16
mov
cmp
mov
mov
cld
loop
sbb
fsubrl
and
sbb
movsl
xchg
dec
mov
jb
inc
jg
mov
or
mov
or
hlt
les
cmp
mov
adc
scas
pop
ret
mov
cmp
mov
push
adc
sub
lret
mov
and
mov
out
subl
sahf
aas
xor
sbb
repz
cmp
jge
jb
jecxz
ss
jecxz
int3
xor
mov
jb
jb
ret
add
std
or
dec
insb
mov
or
repnz
popf
imul
mov
sbb
jle
into
jp
xchg
adc
mov
iret
les
es
or
aad
sbb
out
fwait
test
push
call
stos
xchg
out
incl
inc
inc
jle
outsl
imulb
dec
loopne
xor
movsl
mov
xchg
cmc
cwtl
sbb
ret
cmp
fnsave
arpl
movsl
lret
cs
hlt
fwait
test
push
enter
movsl
adc
xor
add
lods
or
cmp
loopne
or
cli
cwtl
jp
pop
mov
xchg
sub
jbe
dec
fs
in
mov
rolb
mov
enter
inc
pushf
daa
inc
lods
stos
imul
aam
sbb
jae
jb
fdivl
je
dec
cmc
mov
in
push
lods
cli
push
xchg
mov
dec
add
stos
cmp
pop
mov
dec
dec
fdivrs
sbb
pusha
inc
insl
enter
arpl
cmp
jle
insb
push
xchg
xor
bound
and
lret
add
stos
add
in
scas
push
and
adc
push
inc
sub
fimuls
pop
inc
dec
inc
sub
loop
jmp
jns
cld
mov
cmp
sti
ds
mov
cmpsl
push
sahf
call
jbe
jb
cs
call
jnp
cwtl
outsl
arpl
out
stos
push
adc
es
int
roll
sahf
int3
adc
pusha
addb
jae
sti
dec
adc
mov
dec
shl
or
sub
inc
jne
inc
imul
les
xchg
out
sub
jbe
outsb
sub
lods
inc
lods
mov
cmp
ret
dec
or
xor
mov
shll
arpl
push
jge
and
lea
mov
push
sbb
cltd
imulb
mov
add
add
or
mov
push
addr16
movsb
pop
fs
pop
inc
test
xchg
cmp
mov
add
push
jecxz
mov
ret
mov
mov
ficoms
adc
scas
cltd
jmp
fsubs
push
xlat
fsub
jge
push
pushf
lret
sub
fcoms
dec
jge
mov
cli
xchg
pop
enter
xor
mov
fwait
inc
push
push
popa
xchg
cmp
xor
adc
adc
xor
hlt
xor
out
in
lds
xor
lahf
mov
cltd
xchg
cmp
mov
dec
xchg
mov
mov
xchg
xchg
stc
inc
pop
test
jg
or
jmp
jb
inc
push
and
push
test
std
mov
xor
cmp
mov
ds
push
xchg
cmp
jle
sbb
fs
push
lcall
xchg
in
jecxz
push
addr16
mov
aas
dec
cmp
clc
adcl
add
test
ret
fstl
add
or
xor
sbb
jl
xchg
notl
test
jb
inc
test
sti
or
inc
mov
adc
icebp
inc
mov
fwait
call
pop
push
js
pusha
push
add
fs
jno
fildl
int
lea
mov
and
jnp
sbb
push
mov
dec
sbb
aaa
fdivs
in
adc
inc
daa
scas
rclb
aas
pushf
mov
jns
sub
bound
push
lret
incl
adc
scas
jb
in
add
pop
movsl
popa
nop
push
push
insb
ds
cvtps2pd
call
scas
gs
xchg
push
mov
imul
pop
cmp
incl
sbb
jo
push
add
mov
push
cmpb
sahf
jae
dec
pop
jne
fwait
ss
sbb
ss
inc
in
jno
test
dec
cli
sub
or
clc
sbb
inc
fistpl
and
repnz
iret
lock
iret
mov
cs
ljmp
roll
mov
scas
pop
into
sbb
or
es
adc
ret
mov
adcl
ss
not
pop
jl
push
nop
ljmp
and
daa
pop
fstl
pop
out
stc
jns
imul
lods
cmpsb
aaa
notl
cmc
stc
mov
repnz
in
pusha
cmpsl
sub
dec
and
fcoms
sub
lret
stos
gs
stos
out
cmp
test
cmp
in
test
inc
dec
scas
je
ss
push
stc
js
aam
pop
imul
fs
xor
lret
and
push
xchg
inc
jle
mov
scas
xorb
and
xchg
jmp
inc
sbb
cmp
xor
ja
fsts
popa
adcl
inc
loop
sbb
xchg
int
xor
not
lahf
mov
mov
out
xor
cmpb
xchg
or
jns,pn
xor
js
jne,pt
push
movsb
and
adc
pop
or
or
or
inc
shrl
stos
jo
pusha
iret
testl
adc
subb
cmp
adc
leave
push
jbe
test
xor
in
and
mov
xchg
jno
fldenv
sub
adc
sbb
xchg
mov
icebp
adc
sbb
outsl
insb
leave
inc
movsb
mov
in
pop
push
jp
dec
fnstenv
clc
in
dec
and
dec
fsubl
push
rorb
and
pop
or
int
sub
pusha
inc
fildll
pop
inc
test
scas
insb
lods
dec
subl
adc
adc
mov
push
stos
pop
icebp
adcb
cmpb
clc
push
in
out
int3
add
or
loopne
insl
xor
xchg
outsl
das
repnz
mov
idivl
push
dec
xor
mov
push
leave
insl
push
sub
jg
pop
aaa
pushw
or
and
ret
sbb
mov
mov
ljmp
cmpsl
xchg
jne
xchg
cmpsl
push
sbb
shrb
aaa
inc
mov
mov
rorl
cmp
xor
mov
add
push
js
test
mov
test
clc
push
sub
and
inc
into
das
lods
pushf
dec
mov
outsl
dec
xor
dec
stc
lcall
inc
cmp
in
scas
push
pushf
pusha
pusha
jle
fwait
jno
push
nop
and
out
adc
out
in
inc
mull
mov
mov
jle
out
inc
fldcw
mov
mov
sbb
jmp
xchg
ss
leave
pop
mov
lods
test
jp
pop
jb
ljmp
sbb
dec
jne
loope
cwtl
jl
pop
decl
setl
test
icebp
ljmp
xchg
xchg
aaa
mov
ret
stc
repz
mov
rcrb
dec
xchg
stos
ficoms
sbbl
jae
inc
xchg
xchg
mov
les
call
in
mov
sbb
and
js
addr16
sahf
lock
std
jo
mov
and
pop
push
cmp
addr16
imul
inc
fs
std
imul
adc
loopne
pop
fcmovnb
jb
jmp
pop
inc
fwait
imul
xchg
mov
inc
cmp
dec
cmp
rcr
adc
jge
xchg
mov
adcl
and
fiaddl
jle
jae
jne
out
and
fimuls
int3
icebp
cs
mov
loope
cmc
mov
loope
int3
or
dec
fbld
test
jnp
mov
sbb
sbb
and
es
fbld
jge
inc
sarb
pop
cmp
test
pop
fbstp
jl
mov
mov
testb
lods
xchg
xchg
add
repnz
xchg
sub
dec
lcall
push
jb
test
stos
sub
cmp
pop
es
and
mov
jl
dec
sbb
stos
or
xchg
inc
es
in
cmp
out
or
jg
sub
test
pop
pop
rolb
cs
sbb
test
sbb
and
pop
jmp
jmp
popf
flds
add
fstps
sub
cmpsb
dec
out
jb
pop
ficomps
mov
push
les
xor
mov
fidivs
lcall
add
sub
pop
jle
imull
mov
jmp
lods
sbb
push
notrack
out
push
lret
cmpsl
fdivl
fbld
push
pop
dec
leave
dec
xrelease
jge
negl
int
les
add
jnp
std
and
adc
test
aaa
in
loope
inc
iret
sti
and
ljmp
mov
jns
pop
adc
mov
pusha
and
push
cwtl
das
ret
ljmp
fstps
es
imul
sbb
hlt
jp
mov
pop
jge
cltd
jge
or
cmp
lock
jae
dec
inc
outsl
add
mov
mov
jecxz
int3
js
inc
jecxz
cmp
aad
imul
xchg
cmc
xchg
stos
popf
mov
mov
lock
jle
mov
pop
sbb
cwtl
psadbw
inc
jmp
push
xor
imul
in
loope
inc
xchg
add
out
lock
or
mov
in
enter
cmp
jp
mov
divb
push
adc
mov
fistl
aam
or
and
pop
push
daa
mov
inc
in
clc
sub
lea
bound
mov
jle
rcll
pop
mov
cmpsl
loope
cmc
pop
nop
inc
adc
iret
pop
lret
repz
popf
sub
pop
sti
adcl
xor
adc
pop
jp
rcrb
lods
mov
mov
fwait
mov
xor
pop
xchg
mov
stos
lahf
pop
push
jecxz
or
cld
insb
iret
xchg
mov
sub
lret
mov
ss
lret
insl
mov
call
push
in
inc
mov
mov
adc
pop
int
pop
popw
xchg
mov
repz
das
int3
mov
adc
lahf
cmp
dec
jecxz
mov
test
movsl
xlat
movsl
sbb
sbb
push
dec
pop
rorl
outsb
add
xor
sbb
es
orb
fists
dec
loop
inc
inc
cmpsb
jle
call
mov
inc
pop
push
hlt
pop
call
loopne
mov
jns
mov
movsl
out
and
les
nop
push
ss
mov
test
xlat
inc
repnz
xchg
sub
into
gs
dec
outsb
xchg
mov
int3
cmp
sar
js
shll
mov
dec
mov
insb
mov
fisttps
loope
js
pop
insl
ja
iret
or
mov
dec
bound
sub
rcr
or
out
jge
data16
inc
lods
cmp
insb
test
arpl
jle
iret
xchg
adc
mov
xor
hlt
lods
daa
or
rorb
mov
push
das
push
or
fwait
into
adc
cli
fildll
or
push
inc
fisttps
icebp
sbb
arpl
xor
pop
daa
mov
mov
sbb
or
or
outsb
mov
push
xchg
dec
cmp
negl
les
loop
jbe
push
add
mov
or
pushf
fdivr
insl
push
pop
pushf
int
fdivl
mov
and
pop
cli
sbb
push
add
mov
cmpsb
jg
out
xchg
ret
fdivl
lods
cmp
push
ret
cmp
adc
divb
xor
jle
xor
arpl
popa
repz
leave
ljmp
std
or
inc
and
cs
inc
sbb
daa
pop
push
xchg
mov
stos
pushf
daa
lock
jl
xchg
les
inc
out
loope
lret
ret
outsb
mov
rcrb
loope
push
mov
cmp
adc
insl
jnp
sbb
out
std
pop
fwait
subl
leave
outsl
mov
cld
int3
test
cli
decb
ja
add
int
xchg
sbb
jmp
aad
ret
and
outsl
idivb
out
mov
or
lds
or
roll
cmp
mov
add
xchg
dec
mov
adc
xor
psubusb
xchg
push
add
jns
jnp
jp
negb
icebp
lds
add
sbb
pop
ljmp
ret
jb
adc
jmp
jno
sbb
inc
add
das
xchg
sub
loopne
in
lds
xor
add
lock
jae
adc
jae
ss
jno
add
mov
xor
xor
dec
push
sbb
sbb
push
push
push
std
in
aam
movsl
push
int3
insl
cltd
pop
mov
fbld
jo
xor
or
and
cmc
nop
stos
gs
mov
and
adc
mov
pop
in
aaa
clc
mov
or
add
cltd
push
xchg
cli
jnp
cld
cld
mov
mov
cmpsl
jmp
cmp
incb
mov
out
pop
mov
jbe
addl
add
mov
cwtl
movsl
rolb
les
xchg
jp
movsb
fcmovnu
aas
fsubrs
imul
sub
mov
mov
dec
pop
sbb
xor
mov
mov
lcall
mov
sbb
fadds
imul
dec
stos
dec
pop
lret
insb
testl
jp
mov
mov
cwtl
aam
inc
repz
cmp
cmpsl
sub
out
dec
in
and
dec
jb,pn
push
jnp
out
test
subb
in
and
frstor
sbb
lods
cli
pop
adc
lcall
and
lret
xchg
pop
lahf
pop
lods
push
andl
movsb
gs
cmp
jb
cmp
mov
loope
push
fs
or
and
addl
jb
mov
push
dec
dec
cmp
hlt
adc
jp
or
push
and
fstps
int3
xor
adc
xlat
pop
xor
je
dec
das
ret
std
inc
adc
mov
sub
pusha
and
lds
inc
sub
xor
test
sti
rclb
push
jne
adc
mov
sbb
fstl
mov
push
aaa
push
inc
jno
pop
cmp
jae
mov
mov
adc
adcb
sub
pop
jecxz
inc
movsl
movsb
dec
shl
adc
sarl
daa
dec
leave
stc
fmul
xor
xchg
in
rol
test
loop
mov
jo
sub
sbb
and
lods
jp
es
cmpsl
lcall
enter
xchg
xor
dec
jmp
xlat
hlt
jmp
sti
mov
cld
inc
and
pusha
les
pop
push
push
mov
mov
mov
cmc
xchg
hlt
rcrl
insl
lods
add
inc
in
jmp
push
xchg
mov
cmp
xchg
add
shrd
adc
lock
scas
mov
in
daa
ficomps
test
and
jo
push
mov
fidivrl
pop
mov
rcrl
pop
adc
sbb
cmp
cmc
sbb
inc
jnp
f2xm1
mov
leave
push
mov
sti
cltd
xchg
movsb
xchg
scas
gs
pop
movsb
or
shll
out
inc
sbb
mov
adc
adcb
das
sbb
sti
lock
in
ret
stos
pop
popa
sub
jmp
mov
js
mov
cs
add
pop
cmp
and
fmulp
in
push
add
mov
iret
inc
jl
movsb
shrb
gs
stc
jp
add
xor
add
in
adc
les
mov
notl
xchg
pop
ja
nop
mov
inc
adc
packuswb
sub
nop
rorl
cs
mov
lcall
pop
ret
fs
lret
mov
cmp
cwtl
out
jbe
cmp
test
popl
sub
lock
es
test
fisubs
aas
popa
iret
inc
sbb
dec
mov
lea
xor
lcall
pop
adc
jno
xchg
out
aas
dec
adc
dec
sbb
decb
cmpsb
adc
xlat
jae
and
sub
imul
imul
leave
inc
mov
jae
adc
push
out
dec
xchg
mov
mov
rcll
and
mov
dec
pop
shrb
cmc
lods
js,pt
xchg
sub
lcall
fldt
mov
and
mov
mov
cwtl
ss
test
and
popa
scas
adc
jo
push
andb
jbe
cmpl
pop
xlat
rorb
lahf
lcall
sbb
popa
jnp,pt
dec
loope
xor
jecxz
inc
fcoms
add
adc
lock
into
gs
in
enter
scas
sbb
outsl
and
mov
mov
and
cmp
lea
mov
xorl
jo,pt
movsl
js
jbe
stos
pop
mov
mov
fs
add
jne
xor
test
mov
repz
cmp
add
xchg
movsl
cmp
adc
pusha
pop
jg
push
pop
repnz
fs
in
call
add
int
addr16
jle
test
dec
mov
pop
insl
mov
cltd
in
and
frstor
mov
mov
adc
xor
dec
insl
xchg
mull
cli
popa
clc
xor
inc
push
or
or
pop
cmpsb
add
sbb
mov
or
mov
mov
pop
dec
mov
ljmp
or
popa
and
mov
xor
sbb
cld
lret
adc
lcall
push
mov
pusha
lods
mov
lret
and
and
sub
pop
mov
pop
mov
dec
push
movsl
jnp
cmpsb
das
popf
je
mov
mov
xchg
push
pop
stc
jge
lods
sarb
scas
movsl
sub
fsub
inc
into
cmc
sbb
mov
cli
xor
ds
dec
stc
add
sub
xchg
cli
push
addr16
fmul
in
testl
lcall
sbb
jecxz
or
sbb
mov
push
pusha
test
mov
lea
mov
loopne
in
xchg
out
add
shll
cld
dec
roll
leave
adc
ljmp
jno
jmp
mov
rorl
and
add
xor
xor
lods
mov
pop
and
and
lock
aad
out
and
adc
setae
push
out
jne
int3
pop
out
enter
jecxz
cmp
inc
push
stos
clc
sub
in
mov
push
and
xchg
ss
jle
add
fs
adc
or
shlb
aad
repnz
cmp
mulb
outsl
inc
inc
popa
mov
dec
lods
sti
inc
pop
movsl
rclb
data16
xor
fwait
or
daa
popl
icebp
int3
cmpsl
xchg
mov
das
jmp
dec
sbb
or
rolb
pop
or
sbb
rcl
add
jnp
cmp
push
daa
xchg
loop
fxch
dec
negb
dec
mov
pusha
and
lods
jo
mov
xchg
shl
stos
lds
add
and
mov
dec
pop
fsubrl
jo
movsb
nop
and
fcmove
cmpsb
cmp
in
lret
shlb
mov
mov
mov
sub
dec
adc
rorb
cmpsb
jmp
fldenv
xor
mov
jbe
movsb
fldcw
shl
aam
movsl
and
ljmp
pop
cmp
sarb
or
sub
or
call
mov
or
or
pop
aad
adc
mov
movsl
adc
dec
cmp
cli
sub
fidivl
or
sub
sbbl
mov
xor
adcl
or
cmpsl
xchg
lret
inc
xchg
push
xchg
fldenv
ljmp
fildll
mov
mov
or
add
scas
arpl
cmpsl
test
int3
std
scas
adc
mov
and
sbb
mov
xor
out
add
rol
aam
negb
shll
push
int3
push
sub
cmp
cmc
pop
mov
repz
add
inc
mov
push
test
jae
add
daa
jns
in
lds
aad
pushf
mov
cmpb
scas
mov
adc
push
ffree
pop
into
xor
addb
imul
stos
icebp
mov
sbb
lds
ja
jecxz
jnp
mov
rcrb
xchg
testb
cmpsb
pop
cmp
push
cmpsl
jne
outsb
pop
outsl
test
cmp
sbb
add
push
aaa
xchg
test
xor
ret
pop
shll
push
cmp
out
mov
dec
mov
sbb
outsl
dec
mov
shlb
test
sbb
insl
cmp
mov
cmpsl
rcll
sahf
xor
in
mov
push
and
xchg
cmp
icebp
movsl
lods
mov
pcmpgtw
div
decb
das
jge
sbb
xchg
jmp
repz
cltd
cld
cli
mov
dec
leave
push
ss
add
cmp
pop
mov
mov
cmp
push
ds
push
aad
push
sbb
jecxz
lea
gs
sbb
cltd
ja
dec
aaa
xchg
lret
aad
and
dec
fcomp
ljmp
icebp
xchg
mov
lock
push
xor
jmp
in
call
xor
xchg
cli
pop
push
jnp
aas
mov
push
stos
negl
mov
sbbb
mov
mov
push
inc
shrb
cmpsb
sub
pop
or
std
sub
dec
aas
mov
outsl
stos
fisttpl
cmp
mov
daa
movsl
cwtl
testb
push
clc
lcall
push
add
jns
sub
test
lods
cltd
testl
dec
sti
mov
loop
js
lret
cmp
mov
push
jecxz
cld
inc
jg
repnz
out
imul
mov
mov
mov
adc
stos
inc
mov
fs
inc
inc
lret
adc
cmp
std
xchg
xor
push
jne
ja
loope
les
mov
dec
dec
mov
push
lret
fidivrl
mov
push
mov
lds
jl
xchg
adc
xlat
lods
xor
hlt
xor
sub
ja
jl
add
mov
idiv
or
mov
and
les
movsb
sbb
nop
dec
outsb
lods
decl
js
test
repnz
stos
shlb
push
lods
data16
sub
mov
aas
addb
and
dec
in
xorl
je
in
mov
std
jle
inc
enter
das
or
sti
xchg
popf
push
sub
mov
sbb
sub
push
add
xor
dec
lea
push
add
jbe
jno
scas
loope
cli
xor
adc
jl
orl
jecxz
les
pop
insb
stos
jae
sahf
jmp
push
jo
shll
out
jns
lock
add
or
push
add
jnp
xchg
mov
outsb
ret
data16
scas
adc
or
and
inc
call
leave
adc
int
sarl
rcrl
add
sbb
lret
scas
aam
xchg
clts
cmp
in
pop
bound
fisttps
sub
mov
and
jg
pop
jae
movsl
addb
lock
ds
and
lcall
xor
cmc
mov
pop
cmp
sub
and
int
sbb
mov
clc
lahf
in
and
or
xlat
loope
push
std
fdivl
mov
push
dec
and
mov
rcll
push
dec
movsl
inc
jg
sti
enter
xchg
enter
shlb
push
popa
inc
lock
xchg
jns
cmp
lock
mov
push
cmpsl
cmp
iret
gs
rcrl
lret
ja
dec
lods
stos
out
mov
xor
adc
in
leave
out
jae
loopne
rcrl
mov
sub
jge
dec
ret
push
scas
cmp
mov
insl
test
outsl
bound
fdivrp
cmp
out
add
mov
arpl
mov
mov
decb
pushf
cli
in
cli
dec
mov
pop
xor
jbe
xor
push
pushf
adc
sub
loope
dec
movsb
inc
pusha
mov
pushf
cmp
imul
pushf
cmp
add
pop
xor
bnd
sbb
mov
idivl
mov
aaa
test
mov
shrl
insb
mov
in
sti
aad
daa
mov
push
adc
cmp
dec
mov
add
jp
mov
int
mov
enter
into
repz
aam
sbb
imul
inc
ficompl
clc
aad
adc
lea
adc
incl
insb
mov
sarl
xor
ds
popf
xor
lret
sub
js
popa
rcrl
fdivrl
or
cmp
pop
cmp
adc
adc
mov
mov
or
sar
das
xlat
push
adc
and
pop
inc
enter
leave
dec
push
cmpsb
stc
fwait
mov
cmpsl
mov
add
iret
adc
jbe
gs
lea
and
imul
dec
clc
xor
sbb
pop
fldt
sbb
and
js
inc
dec
repz
sahf
lahf
xchg
fnstsw
cli
ljmp
subb
ret
dec
adc
inc
sbb
cmp
adc
dec
fdivr
and
iret
and
xor
mov
test
dec
lcallw
les
pushf
fs
push
jle
int3
movsb
mul
and
add
dec
or
xchg
xor
iret
or
mov
and
stc
bound
loope
repz
push
imul
adc
cmc
push
dec
pop
cmp
test
scas
popf
dec
push
sub
lds
nop
dec
adc
dec
test
addr16
enter
fcoml
and
daa
mov
cmpsl
sbb
shrl
cmp
mov
scas
xchg
xchg
xor
sbbl
mov
push
sub
lds
xlat
and
mov
data16
cld
in
mov
sub
mov
in
mov
mov
push
and
xchg
roll
sub
fneni(8087
xchg
cmpl
inc
and
icebp
loop
inc
enter
test
push
mov
cs
in
mov
push
sbb
mov
repz
xor
or
sbb
mov
pop
mov
lods
inc
xchg
jns
lret
sti
into
loop
sub
sbb
sub
or
adc
fisttps
test
popf
cmp
imul
and
rcr
lret
das
xchg
dec
jnp
aam
push
push
cmp
dec
inc
or
or
jle
xchg
mov
push
xor
xchg
add
je
je
dec
fmull
pop
add
jl
roll
and
dec
scas
lds
cltd
test
push
pop
clc
cmp
pop
push
scas
shlb
imul
ret
jmp
mov
jle
inc
in
dec
mov
rcll
xor
cmp
adc
lcall
dec
pop
shlb
loopne
in
or
fnsave
push
add
subb
fisubrl
lret
test
push
inc
pop
xor
imulb
and
push
inc
push
insl
jno
movsb
ds
pop
stos
lret
imul
mov
imul
loop
lds
or
adc
add
cltd
pop
out
roll
clc
pop
rdmsr
xor
call
jle
lock
cmp
dec
xchg
cmp
xchg
and
iret
dec
mov
test
inc
inc
lods
xchg
scas
cmp
test
ds
mov
in
cmpsl
orb
scas
insl
les
xor
mov
loopne
outsl
pop
es
sbb
mov
call
stos
les
mov
ficomps
les
imul
movsb
bound
dec
call
lret
mov
fwait
in
call
mov
or
fisubl
loope
inc
rol
mov
sbb
adc
mov
call
mov
inc
pop
aam
sbb
adc
add
shlb
and
fadds
data16
shlb
xchg
adc
stc
loope
jecxz
mov
out
cmpsb
dec
cs
sbb
mov
cli
aas
or
rcrl
pop
sti
lahf
sub
push
dec
movsb
push
addr16
sbb
push
test
xor
pop
jge
shrd
add
int
sbb
in
cwtl
repz
pushf
dec
icebp
pop
mov
add
pop
mov
mov
lods
push
dec
xchg
or
pop
lahf
xchg
pop
mov
push
sbb
push
xor
mov
data16
movsb
mov
or
mov
ss
bound
mov
ret
pop
or
inc
xsavec
and
or
sub
imul
xchg
outsb
sub
push
xchg
aam
test
pop
lcall
pop
jge
sbb
inc
adc
sbb
sub
dec
rcrb
scas
inc
in
sub
jno
js
and
je
das
xchg
frndint
xor
sub
fs
dec
in
xchg
mov
pushf
out
pushl
loopne
outsb
jae
mov
xchg
loop
jle
add
cmc
in
lret
insl
and
add
aad
mov
stos
jmp
jnp
cli
cwtl
pop
inc
dec
ret
mov
push
pop
mov
test
xchg
sub
jg
enter
loop
pop
jnp
bound
push
xor
mov
lret
cltd
dec
xor
jo
sbb
push
testb
fldln2
xchg
adc
insl
pushf
test
pop
mov
adc
lock
mov
xor
jge
lcall
push
xchg
out
sub
pop
push
pop
arpl
lea
adc
hlt
dec
insb
mov
jno
enterw
xchg
jl
stos
xchg
adc
ficomps
mov
repz
push
cmp
xlat
lret
popf
dec
and
xor
fsubl
into
sbb
pop
sbbb
mov
ret
lret
lret
ljmp
enter
or
int
arpl
push
jae
lret
enter
mov
data16
iret
pusha
xchg
cmpsb
scas
xor
arpl
mov
std
push
movb
or
inc
pop
sahf
or
bound
cmc
sub
push
push
inc
jbe
divb
jae
mov
sbb
push
fincstp
scas
adc
negb
lods
push
and
push
mov
movsb
test
mov
nop
add
in
cmc
loop
mov
mov
and
mov
inc
xchg
cmp
dec
in
test
pop
dec
in
cmp
pop
pop
adc
lret
and
pop
mov
lahf
fldl
adc
fists
or
sbb
outsb
push
mov
sarl
cmp
je
and
insb
insb
sbb
fldl
fisttpll
movsb
jb
push
out
fs
jecxz
cld
jne
dec
or
int3
mov
fmuls
data16
mov
mov
add
int
mov
cmc
mov
fcomps
in
xlat
inc
inc
jecxz
mov
mov
aas
js
das
add
sbb
xchg
xorl
and
fmul
shr
out
and
xchg
cmp
xchg
fsubrl
mov
mov
or
xchg
out
cs
sbb
repz
mov
mov
sub
cmpsb
ja
mov
xchg
call
mov
and
pusha
fcomps
mov
sub
jle
sub
jne
pop
cmp
test
push
xor
dec
pop
out
lods
cmp
pop
vminss
and
sar
xlat
cmpsl
dec
sbb
fdivs
xorb
inc
sbb
push
inc
in
xor
arpl
bswap
stos
pop
stos
mov
add
leave
lds
push
xor
pop
jmp
dec
dec
loop
pop
mov
cltd
in
add
shlb
pusha
mov
popa
fs
sar
rcll
adc
movl
dec
pop
mov
cmp
inc
pop
jp
sbb
mov
adc
pop
sti
dec
dec
mov
fbld
xchg
aas
int3
dec
ret
inc
push
jge
les
cmp
inc
xchg
push
lret
cli
pushf
cwtl
fmul
jb
mov
nop
sbb
cmp
rcll
cmp
adc
xor
out
dec
rcrl
andl
rorb
inc
mov
rcl
jg
incb
test
mov
or
imul
into
les
hlt
loop
push
repnz
aam
call
adc
fstps
lret
aad
imul
sbb
cmp
or
pop
call
cltd
cmpsl
jle
test
aaa
xchg
cmpsl
inc
dec
add
daa
and
pop
cmp
pop
cmpsb
rcll
sbb
sahf
xchg
sbb
dec
sti
mov
mov
cld
dec
and
movsb
jmp
jo
xlat
xor
inc
jle
imul
js
mov
mov
loopne
pop
insb
and
pusha
mov
mov
shlb
mov
xchg
adc
push
or
pusha
fwait
mov
fimuls
mov
pop
jp
push
pop
lods
loopne
mov
mov
xchg
mov
movsb
jmp
bound
push
cmp
jo
xor
cli
sbb
pop
adc
cmpl
into
inc
call
stos
icebp
sbb
inc
out
insl
sbb
jno
mov
mov
stos
pop
pusha
repz
xchg
sti
mov
fnstenv
mov
daa
jecxz
fs
mov
pop
add
sbb
add
stos
cmp
mov
test
mov
or
and
jnp
add
in
xor
and
pop
nop
mov
out
int
jb
inc
cmpb
mov
inc
xchg
lds
mov
mov
cmp
loop
sbb
iret
leave
or
fadd
xor
or
xchg
and
cmpl
mov
mov
test
pusha
les
sub
outsl
lock
push
iret
stos
hlt
inc
mov
loopne
inc
cltd
ljmp
cs
movsl
and
fsubrs
lea
and
sbb
iret
cwtl
movsb
xchg
and
cmp
mov
or
mov
int
jb
shrl
fcomip
and
test
fldl
lret
mov
and
or
pop
mov
orb
mov
pop
setp
addr16
add
int
fwait
imul
xacquire
inc
sub
jns
jle
jno
sbb
mov
or
or
arpl
gs
add
fcmovu
or
ret
repz
pop
imul
cld
popl
lea
push
out
js
adc
jg
cmp
sbb
jecxz
jb
scas
xchg
pop
fcomps
sub
xor
jo
inc
ret
xlat
outsl
fsubrl
sbb
push
push
inc
arpl
cld
pop
add
xchg
loopne
incb
arpl
rcrb
cmp
jecxz
sub
aas
mov
pop
pusha
pop
sbb
push
iret
pop
or
jge
rclb
cmp
aaa
sbb
or
push
xchg
adc
mov
cwtl
pop
scas
jmp
and
and
aaa
xor
in
jnp
pushf
mov
or
adcl
sahf
jmp
jno
fwait
mov
scas
movsb
mov
cmpb
leave
leave
xchg
rep
dec
repz
inc
dec
fnstcw
jbe
xchg
mov
insb
xchg
pop
aad
mov
rcr
bound
cmp
dec
push
popf
push
or
sub
outsb
dec
jnp
fldl
mov
fcomp
sahf
aaa
lret
or
pop
pop
add
ljmp
aad
cwtl
jo
cmpsb
notl
and
das
imul
pop
scas
fbstp
jo
insb
sub
mov
xlat
lock
imul
mov
leave
fwait
push
mov
jecxz
jp
icebp
inc
cmp
ljmp
mov
repz
pop
fmuls
aas
mov
icebp
jmp
jmp
mov
icebp
pop
enter
dec
mov
insl
das
sti
mov
arpl
jbe
sahf
inc
insl
jl
leave
int3
add
adc
and
imul
push
shll
push
lock
cld
push
lds
in
sti
ljmp
lods
iret
cmpsl
push
cmp
mov
add
decl
decb
repz
or
xorb
mov
inc
hlt
ficomps
rcll
or
int3
fcoms
js
xchg
xchg
lea
mov
xor
push
ds
sbb
mov
mov
mov
jmp
cltd
add
mov
jb
cli
adc
sbb
ficompl
and
adc
clc
xor
push
ss
xor
lods
mov
mov
push
es
sub
mov
lahf
add
push
test
jle
js
sub
ljmp
mov
std
data16
jmp
fidivl
sbb
push
and
jl
mov
addr16
dec
shrl
push
stos
xchg
in
fldl
jg
mov
leave
mov
jno
test
repz
addb
call
xchg
je
pop
mov
fcomps
inc
enter
sbb
push
sahf
push
div
cld
jl
cltd
out
std
sbb
sub
repz
shr
dec
add
sub
jns
fcoml
std
je
push
cmp
insb
in
rcrb
sbb
rorl
dec
add
sbb
cld
cmpsb
add
push
insl
xchg
in
push
xchg
add
push
imul
mov
or
xchg
push
andl
int3
shr
push
stc
cmc
mov
xor
movsl
inc
es
ret
lock
inc
lods
mov
imul
inc
pop
mov
cmp
pushl
inc
aad
fistpll
lods
jns
fstpl
imul
push
inc
push
gs
xor
mov
dec
das
mov
push
mov
test
dec
adc
xor
rorl
pusha
pop
ja
sbb
xchg
fidivl
fwait
and
in
xchg
nop
push
sahf
rcrb
jns
jae
adcb
fsubrs
cltd
mov
out
pop
sub
icebp
shrb
rclb
sbb
mov
mov
and
mov
jge
movsb
pushl
mov
dec
incb
add
das
dec
fadd
mov
lods
mov
add
push
imulb
movsb
data16
into
mov
xor
cs
pop
aad
mov
xor
adc
scas
xorb
lcall
cld
jge
lret
jge
pusha
or
jnp
cltd
sahf
ds
xlat
or
lcall
mov
aaa
or
and
push
adc
push
fcoml
sub
pop
inc
je
push
inc
inc
adcl
jae
test
xchg
stos
loop
aas
lret
push
imul
lret
mov
mul
dec
popa
inc
or
fwait
loopne
je
mov
adc
sbb
dec
shrl
mov
pop
imul
scas
sub
addr16
cmpsb
sbb
push
xor
ja
jnp
dec
pop
lds
push
ja
inc
jl
sarb
lds
out
adc
jo
adc
cwtl
sbb
repnz
in
push
mov
mov
dec
loope
xchg
mov
lret
out
jecxz
cmc
fstl
jg
and
fistl
jnp,pt
mov
sbb
mov
xchg
or
nop
mov
adc
add
adc
nop
les
pop
push
ss
daa
mov
clc
insl
mov
cwtl
aam
jbe
cmp
and
cmp
movsb
cmpsl
sub
cmpsl
movsb
xor
adc
ja
pop
push
pushf
enter
es
call
sahf
ljmp
add
add
pop
sahf
outsl
dec
shrb
daa
pop
and
nop
dec
dec
jecxz
jg
mov
lock
je
sbb
sub
push
fisttpl
outsl
loope
test
sub
xchg
push
lock
push
data16
sbb
fcoml
mov
addr16
aaa
cld
sbb
push
imul
push
jecxz
test
fcompl
imul
cs
lret
movq
mov
pop
mov
cmp
and
call
sub
xchg
mov
pusha
xor
or
mov
pop
shrb
push
cld
cmpsb
hlt
fsubl
jns
jmp
pop
and
adc
push
out
mov
out
xchg
adc
out
popa
push
cmp
mov
jnp
sub
es
add
push
sahf
mov
aad
adc
jns
push
orl
and
ret
xchg
inc
lods
sub
in
fdivl
sbb
mov
adc
mov
data16
in
ss
mov
in
dec
sub
mov
or
adcb
or
pop
cmp
or
or
loopne
cltd
das
push
inc
inc
ss
pop
jecxz
cmpsb
inc
lcall
ret
mov
data16
test
pop
cmpsl
mov
mov
sarb
add
xor
mov
imul
cltd
pop
push
or
add
jne
cmp
mov
mov
cmc
sub
pop
adc
xchg
mov
inc
fdivl
lock
test
dec
pop
push
adc
test
sbb
or
jne
mov
cmpsb
dec
jecxz
cmp
rcrb
add
cli
dec
aam
outsl
lret
imul
insb
mov
dec
add
and
lret
lods
aaa
mov
andb
xor
les
mov
mov
mov
push
xor
ffreep
mov
or
lret
addb
cmp
mov
dec
cld
adc
ljmp
mov
pop
data16
push
cmp
jns
sub
mov
icebp
mov
mov
adc
fdivrs
dec
lods
mov
adc
push
mov
push
ss
and
sbb
jge
inc
daa
inc
das
mov
dec
jbe
pop
testb
sbb
jae
addr16
imull
xchg
repz
mov
in
mov
add
ss
cmp
enter
pop
mov
and
jae
cmp
pop
rep
jbe
aas
adcl
mov
sbb
aad
popf
test
movsl
arpl
push
jle
aas
idivl
or
outsb
adc
adc
es
aam
sbb
push
and
in
repz
jo
inc
out
add
addr16
es
push
clc
repz
lods
fdivl
enter
xchg
adc
into
dec
jp
cmpsb
sub
jmp
mov
xchg
adcb
ds
dec
xlat
jmp
pop
sahf
xchg
add
xor
cld
or
and
dec
mov
cli
hlt
in
cs
shll
xor
and
mov
push
icebp
test
jae
xchg
mov
ljmp
push
insb
fisttps
into
popf
sahf
out
ljmp
jle
call
loopne
lret
test
mov
std
and
xchg
cmp
cld
test
jbe
jl
aas
xor
push
mov
iret
inc
fs
inc
push
iret
push
cmp
fimull
mov
test
jns
loope
mov
std
stos
mov
jns
out
add
movsl
vmwrite
mov
xor
jne
inc
addr16
je
jl
sbb
mov
fidivl
dec
movsl
test
into
xchg
mov
push
out
nop
dec
aam
popf
jns
fsts
ss
add
stos
rcl
inc
adc
mov
aas
and
mov
fisubs
lret
or
ds
pop
cld
stos
push
dec
ret
push
sbbl
loope
inc
and
stos
and
addr16
inc
testl
subb
dec
xchg
movsl
daa
mov
add
testl
lock
dec
lods
gs
dec
push
push
cmc
mov
sbb
mov
sbb
and
fdiv
lock
mov
enter
aaa
pop
xchg
icebp
mov
lock
cmpl
pop
sub
fists
shll
arpl
std
jnp
xchg
movsl
mov
sub
push
dec
es
int
mov
stos
adc
or
pop
aam
mov
stc
into
jne
nop
enter
adc
repnz
insb
ret
fidivrl
test
insb
cmpl
js
dec
imul
in
xchg
ror
and
scas
nop
ljmp
loop
inc
out
cmc
cwtl
nop
addr16
push
pop
imull
jg
xchg
xchg
mov
ljmp
xor
enter
imul
popf
in
inc
adc
in
xor
adc
xor
ficoms
mov
cs
push
xor
mov
mov
sbb
dec
pop
mov
lret
mov
inc
in
ret
jecxz
int
jae
es
inc
push
and
movsl
sub
out
jmp
fnsave
or
out
imull
jmp
mov
mov
std
mov
jecxz
in
dec
cmp
cli
je
arpl
out
push
fiaddl
ret
repz
decb
pusha
xchg
push
mov
and
pop
loop
loopne
movsb
mov
cmp
cli
leave
push
sub
jbe
divb
fstps
cmpsb
shrb
lret
popf
cs
inc
jecxz
je
imull
xchg
insb
pusha
sbb
into
rclb
popf
imul
cmpb
add
hlt
roll
stc
xchg
and
jle
sub
inc
idivb
and
sarb
and
repnz
in
mov
adc
push
push
adc
ljmp
sub
sahf
cmpsb
pop
ret
push
pop
jle
or
cmc
mov
pusha
std
ds
or
jne
dec
cmp
and
int
dec
aad
and
mov
jecxz
out
mov
loopne
push
jecxz
daa
lods
adc
mov
or
xor
xchg
or
movsl
push
push
imul
imull
pop
lock
inc
fdivrl
dec
or
bound
testl
adc
call
jb
fisttpll
imull
movsl
push
cmp
int3
loop
push
push
fs
jo
std
lock
loope
jp
cli
and
je
add
movsl
pop
push
and
ljmp
push
or
enter
mov
and
xchg
mov
jle
shll
jmp
add
cld
push
cmp
pop
jbe
dec
inc
xor
jge
mov
or
sti
test
xchg
cwtl
mov
push
mov
test
mov
insb
mov
mov
sbb
lret
push
cmc
pop
mov
lcall
daa
in
cmp
aaa
mov
xor
or
add
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmpl
jne
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
call
lcall
out
mov
rclb
jecxz
mov
xchg
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
sbb
jp
mov
pop
mov
test
int3
popa
stos
mov
add
shrl
scas
call
sbb
lahf
add
aam
or
fwait
inc
fcmovne
push
jecxz
mov
popa
cltd
roll
rorl
nop
push
xchg
cwtl
divl
jmp
pop
cmp
mov
mov
sbb
adc
cwtl
stc
mov
stos
andl
bswap
fdivrs
inc
rcll
nop
pop
xchg
call
adc
jmp
lds
pop
pop
mov
gs
cwtl
out
aam
adc
sub
roll
ror
push
jecxz
mov
popf
nop
xlat
mov
jecxz
pop
add
popf
rclb
add
lret
scas
push
pop
mov
rolb
jecxz
mov
popf
rclb
jecxz
mov
cwtl
rclb
out
mov
popf
rclb
out
mov
cwtl
rclb
repz
rclb
jecxz
mov
rclb
jecxz
mov
movsb
int3
xchg
inc
fcmovne
push
adc
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
sarb
mov
rolb
jecxz
lea
int
rorl
jecxz
mov
popf
shlb
test
xor
mov
rclb
jecxz
mov
mov
jecxz
mov
mov
fcmovne
push
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
mov
popf
rclb
jecxz
out
lahf
popf
out
xchg
mov
inc
popa
clc
push
imul
and
cs
sbb
shll
or
sub
bound
or
stc
mov
push
les
cmp
sbbb
rcr
dec
add
daa
aaa
ret
sbb
ljmp
xchg
hlt
cmc
adc
ret
call
call
mov
mov
sbb
les
out
rorb
int3
add
xchg
jbe
push
pop
lock
out
into
dec
and
test
adc
sub
fisubl
ja
call
cmp
scas
mov
and
ljmp
jge
sahf
or
mov
push
cld
and
fs
das
push
lcall
popf
jp
cmp
test
inc
data16
jns
mov
sub
addr16
dec
jmp
cltd
loopne
add
pop
lahf
xor
inc
cmp
and
mov
dec
push
mov
cmc
or
xor
push
addr16
add
mov
lret
dec
fidivl
and
lret
pop
dec
cld
es
test
das
test
shlb
loopne
lods
mov
xor
sti
mov
jl
shl
ja
sub
xchg
shll
mov
xor
out
push
rorb
mov
in
fldl
adc
pavgw
or
push
int
ss
in
mov
jg
xchg
leave
dec
cs
mov
ret
or
not
std
pop
lret
xlat
fnstenv
pop
pop
lods
mov
repz
mov
sub
pop
mov
negb
lahf
test
movl
test
dec
adc
add
test
enter
insb
cli
cmc
jp
push
sbb
or
scas
cmp
adc
push
sbb
inc
jbe
sub
mov
imul
movsb
outsl
movsb
or
pop
inc
mov
pop
movsb
mov
mov
inc
out
call
roll
test
movsl
push
mov
arpl
lock
insb
cli
aaa
or
orb
add
inc
icebp
std
pop
jne
pop
xchg
jnp
add
into
pop
cwtl
adc
dec
loopne
cwtl
xor
in
pop
ds
gs
fdivs
in
stos
cmp
rol
ja
out
inc
std
fwait
pop
xchg
mov
jl
out
hlt
or
imul
sub
xor
pop
pop
test
lods
movsb
outsb
cmp
xchg
push
xchg
add
jno
fyl2xp1
xor
pop
dec
add
mov
test
and
inc
ds
testb
dec
cwtl
sub
cwtl
cmp
int3
outsb
mov
or
add
lods
jmp
imull
mov
mov
add
aas
lahf
sarl
push
pop
xor
rol
and
push
orl
cmp
pusha
cmp
test
and
xchg
mov
jle
mov
inc
mov
repz
dec
cltd
dec
adc
jle
lret
mov
roll
or
outsl
pop
push
add
imulb
mov
adc
mov
xchg
mov
jne
push
mov
mov
jns
aad
inc
gs
pusha
cli
xchg
sub
pop
add
sbb
xchg
xchg
mov
jmp
popa
add
test
jae
xchg
sub
add
test
xchg
pop
push
mov
inc
push
or
mov
cli
cmp
inc
cli
popa
cmp
xor
cld
mov
mov
adc
jp
fisubs
jg
repnz
lcall
shlb
sub
inc
jmp
scas
aaa
pop
jecxz
test
dec
push
nop
add
jp
sbb
cmp
xor
popf
in
into
pusha
fwait
pop
dec
jle
mov
inc
fists
push
sbb
in
cmp
xor
xor
and
dec
sbb
sub
fcmove
mov
push
in
jecxz
out
xchg
sbb
jmp
imul
xor
jns
jb
clc
jo
push
decl
insb
xlat
out
ror
jno
aad
mov
push
pop
cmp
mov
push
pop
add
clc
and
rorb
fiadds
insl
mov
rcll
shr
jae
jb
daa
out
lock
xor
shlb
jmp
jne
push
mov
idivb
loop
xor
inc
pop
and
stos
gs
adc
daa
stos
out
mov
leave
loop
pop
lea
stos
jecxz
add
std
dec
in
jo
or
into
jno
ss
and
in
lds
sub
adc
iret
xor
mov
and
scas
inc
ds
cmpsb
insl
add
add
in
and
xchg
jae
int3
or
rcl
push
pop
fcoms
outsb
push
adc
ja
pop
mov
lock
or
fsub
sub
mov
mov
gs
dec
push
bnd
sti
repz
popf
pop
aam
cmp
imul
stc
fcmovnb
lcall
sbb
andl
xchg
cmpsl
fisttps
push
imul
dec
fwait
push
je
mov
js
pusha
out
adc
shll
mov
in
data16
jb
mov
mov
outsb
xchg
loop
mov
daa
jge
or
iret
sub
sbb
test
std
mov
cvtps2pi
mov
xor
jno
sub
scas
cmp
push
fiadds
push
in
or
mov
or
fs
xchg
xchg
xor
repz
pop
and
adc
push
mov
adc
mov
sbb
sub
rcll
fwait
lret
mov
and
and
cmp
mov
and
pop
or
lret
mov
pop
insl
xor
inc
dec
aad
sbb
push
and
or
mov
shll
faddl
vfnmadd132sd
pop
lea
and
xchg
pop
xchg
lods
negb
je
pop
mov
fbld
imul
cmp
cwtl
cmpsl
pcmpgtd
into
pop
and
aas
cvttps2pi
sahf
inc
int
fcoml
push
ja
cmc
sahf
mull
dec
sbb
stos
mov
pop
imul
xchg
ror
pop
or
stos
mov
push
sti
pop
lret
in
testb
mov
aam
push
sub
sahf
jo
scas
jecxz
das
arpl
stos
pop
and
imul
mov
lock
mov
xorb
imul
sbb
mov
inc
add
sbb
add
cmp
aam
in
dec
lds
jg
or
bound
mov
cmp
adc
mov
jbe
jg
mov
inc
xchg
push
and
cmpsl
jl
xchg
popf
test
push
ficoml
int
lock
jle
jecxz
dec
enter
mov
adc
imul
fwait
push
ret
push
inc
jbe
pop
jne
mov
or
mov
fwait
jae
cwtl
mov
lds
xor
or
lcall
gs
sarb
subb
mov
xchg
push
aas
adc
into
sahf
ljmp
fildl
xchg
mov
push
lret
sti
test
pop
sarl
testl
pop
pop
push
repnz
jo
or
mov
ja
bound
sbbb
stc
cltd
negl
fcoms
mov
push
in
loopne
add
jle
call
mov
push
and
mov
push
gs
mov
shl
pop
jo
popf
mov
outsl
add
xchg
ror
test
adc
add
andl
sahf
mov
jp
adc
push
hlt
fstpt
ret
fdivrs
gs
mov
lea
jo
lret
jo
sbb
xor
dec
jmp
mov
mov
das
lods
jp
inc
cmp
pushf
xor
pop
jne
popa
xlat
mov
shlb
jo
pop
xchg
lcall
jle
out
jp
mov
cmp
ss
pop
push
push
cmc
movsl
mov
mov
das
cmp
sbb
pop
ret
ret
sub
xlat
cs
pop
mov
mov
inc
mov
loope
pop
xchg
sbb
xor
push
mov
es
outsl
cmc
mov
imul
xchg
movsb
and
subb
mov
insb
xchg
js
test
add
cmpsb
or
mov
pusha
and
dec
les
push
sti
push
pop
fs
sub
pop
xchg
add
sbb
popa
stos
mov
test
xlat
xchg
sti
es
mov
inc
mov
sub
test
popa
push
cmp
and
xchg
in
cmp
filds
out
stos
inc
and
jo
lret
ds
jl
cmpsl
jmp
mov
and
or
inc
cli
lods
jb
arpl
xor
je
or
fiadds
pop
int3
fcmovnu
push
sbb
insl
scas
xchg
repnz
movsb
adc
pop
hlt
or
cmp
cmp
pop
fstpt
jae
std
fisttps
xchg
pop
and
loope
lcall
leave
cmp
mov
pop
fcmovnu
pop
xor
out
pushf
addr16
mov
inc
mov
sarl
xchg
mov
sub
push
cmp
inc
mov
stos
push
pop
jecxz
xchg
sbb
cld
pop
lret
jne
mov
push
jne
hlt
pop
jle
pop
das
shlb
popf
fsts
ret
addl
js
adc
test
stos
adc
cmpsl
fs
mov
dec
int3
pushf
inc
popa
dec
push
inc
cmc
xchg
mov
jle
pushf
mov
xor
fildll
lock
mov
inc
pop
xor
cltd
pusha
jp
das
xchg
dec
dec
scas
rcll
and
inc
add
loop
es
nop
dec
mov
mov
stos
add
hlt
std
mov
push
or
lcall
jns
jne
xor
rolb
test
mov
adc
daa
imul
mov
xchg
jnp
clc
filds
mov
inc
scas
push
jg
mov
adc
mov
out
popf
cmp
add
push
mov
gs
add
fldcw
pop
out
dec
mov
pop
push
and
lret
lock
out
mov
imul
dec
pop
hlt
push
mov
cmp
dec
fwait
xor
pop
insl
out
pop
cli
shl
das
dec
sub
ss
add
push
shl
mov
sbb
or
ficoml
divl
or
shll
xchg
mov
into
sbb
dec
bnd
gs
cmp
hlt
leave
cmpsb
dec
das
cltd
xor
xor
repnz
sbb
xor
dec
lods
mov
push
inc
xchg
lock
lods
inc
dec
mov
add
or
mov
inc
aaa
pop
dec
test
insb
dec
dec
cmp
mov
loop
inc
jge
inc
pusha
clc
sbb
or
in
imul
ds
jo
popa
push
cmp
pushf
sbb
xchg
xchg
mov
sarl
push
stc
dec
mulb
ret
dec
cwtl
xchg
sbb
mov
dec
popf
aad
mov
shll
mov
cwtl
jne
lret
jbe
lods
jecxz
sahf
cmp
xchg
popf
lret
fimuls
popa
aas
mov
or
pop
pop
dec
inc
mov
lret
inc
and
xor
and
add
lret
jnp
mov
lcall
pop
cmp
ror
sub
mov
pop
sub
and
pushl
inc
inc
sub
popa
test
or
popf
imulb
pop
add
inc
ficompl
mov
jmp
push
push
sub
or
sub
pop
fs
push
xchg
jge
push
test
test
ret
or
rorb
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
inc
inc
add
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
dec
inc
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
push
inc
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
imul
call
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
push
add
push
add
push
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
