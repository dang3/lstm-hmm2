push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
and
fstpl
push
adc
loope
or
jmp
and
mov
xor
push
xor
cmp
cld
and
scas
scas
lods
push
mov
stos
adc
xor
or
outsl
in
aad
inc
inc
dec
and
addr16
jns
add
outsb
dec
push
add
jb
scas
cli
inc
aam
inc
inc
xlat
xor
adc
push
and
imul
in
adc
ljmp
dec
sub
test
enter
popw
and
popa
icebp
sbb
orl
mov
xor
outsl
fcompl
out
dec
pop
pop
xor
test
inc
test
rol
cld
add
dec
out
movsb
pop
bound
mov
imul
add
dec
or
push
loope
out
push
cmp
cs
mov
pop
stc
hlt
outsb
jae
pop
push
test
out
add
loop
sub
mov
mov
ret
cmpsb
jns
mov
or
es
sbb
lea
xchg
cltd
mov
mov
stos
fidivrl
decb
pop
lea
in
jg
jge
push
push
xor
sbb
or
mov
daa
inc
and
cltd
in
into
inc
out
jo
test
clc
xchg
aam
mov
es
fidivrl
inc
js
xchg
mov
adc
xchg
pop
dec
mov
cmpsb
jmp
out
mov
fcoms
xchg
pop
push
pop
loopne
loop
push
sub
fcomp
loope
xor
out
cmc
push
pop
pop
or
cmp
in
js
adc
push
cld
cmp
mov
lods
in
xchg
test
in
lret
pushf
push
xchg
mov
lds
movsb
rorb
cmp
push
inc
shr
aam
fistps
mov
pop
jnp
push
cmp
xor
in
mov
adc
notb
jbe
nop
ljmp
call
or
pop
js
xchg
sub
mov
jnp
mov
lods
xor
jae
mov
add
xor
pop
shll
lods
jl
pminsw
repz
add
and
out
push
cmp
mov
out
dec
addb
ds
lahf
fimuls
mov
sbb
or
push
push
sub
xor
adc
and
sbb
loop
push
add
dec
iret
or
ljmp
push
xor
sub
sbb
xor
daa
push
movsl
ja
ljmp
mov
fistl
cmpsb
mov
shrl
rcrb
add
jp
xor
cmp
fs
push
negb
sub
cmp
mov
xor
shrb
mov
test
push
mov
adc
xor
lea
ret
aad
lea
movsl
imul
imul
in
add
lahf
push
ficoml
xchg
adc
inc
lret
pop
sbb
ja
fstps
mov
sub
insb
je
shll
push
shll
sub
rclb
inc
push
jb
xor
fwait
mov
stos
ds
inc
in
xchg
roll
push
stos
dec
or
push
push
or
and
arpl
sbb
int
mov
in
jne
jmp
mov
iret
mov
or
out
inc
mov
lea
sub
mov
ret
daa
and
mov
mov
ds
data16
pushf
out
clc
cld
out
test
ds
aad
sbb
mov
pusha
adc
cmc
or
xchg
enter
pop
jle
test
in
and
and
lods
jl
adc
aam
mov
sub
dec
ficoms
cs
sti
inc
and
ljmp
pop
pop
cwtl
sub
scas
fs
lods
push
or
sub
dec
cmpsl
sbb
mov
lcall
jg
pop
sub
mov
data16
inc
shrl
xchg
jo
xorl
sbb
insb
cmp
fdivrl
jbe
mov
imul
roll
cmp
or
flds
pushf
push
lods
jmp
inc
call
out
sbb
lods
popf
jne
inc
jmp
pusha
or
jne
aas
xchg
ficompl
push
pushw
cmpsb
popf
addr16
cli
js
dec
mov
inc
sbb
inc
mov
aad
pop
and
xor
and
rolb
cmp
or
or
cmc
enter
or
inc
fs
and
fadds
loopne
fwait
push
negl
push
jl
orl
jmp
jb
lock
xorb
ret
pop
and
mov
jbe
stos
push
loopne
pushf
inc
sbb
jp
or
imul
mov
icebp
adc
or
shlb
mov
adc
inc
int
mov
loope
gs
or
or
inc
jno
in
out
and
pushf
call
shl
cs
movb
cmpsb
and
sti
movb
iret
sub
cmp
or
cmp
mul
mov
pop
out
mov
mov
sti
add
lret
fwait
lahf
mov
les
andl
dec
movsb
sub
push
xchg
jge
pop
cmpw
cmp
and
inc
cmp
insb
mov
repz
loopne
arpl
push
add
dec
add
lcall
lock
inc
popa
pop
add
mov
sub
fdivl
sbb
pushf
fcoms
mov
and
or
xchg
jnp
testb
outsl
shl
movb
je
cltd
outsl
pusha
je
inc
jecxz
sub
sub
push
pop
or
in
outsb
test
and
adc
mov
int
cmp
js
loopne
ja
faddl
out
xchg
sbb
mov
into
xchg
fiaddl
mov
push
adcl
xlat
cmp
mov
inc
adc
cmp
fwait
add
sub
inc
jl
pop
lods
push
cmpsl
jl
and
mov
out
push
sbb
inc
or
and
adc
cs
jbe
mov
add
push
pop
pushf
adc
cwtl
movsl
sbb
cmp
insl
push
xlat
adc
lret
imul
dec
ja
ss
push
mov
bound
xor
out
rcrl
aad
dec
sahf
aas
scas
sub
push
xchg
adc
cltd
cmp
mov
lcall
icebp
sub
test
call
les
test
mov
rcll
ds
cs
rcrb
mov
sbb
imul
leave
dec
mov
das
jecxz
pop
dec
add
fdivs
arpl
push
add
or
or
push
push
adc
gs
sbb
jge
out
stos
cmp
clc
pushf
sub
sbb
dec
push
enter
adcl
rcll
outsl
dec
add
adc
xor
jecxz
lret
sub
push
jmp
xchg
dec
ss
shrl
add
daa
shrl
popl
std
int3
mov
popf
inc
shrb
inc
mov
test
sub
in
sti
scas
sub
or
mov
add
push
add
iret
repz
mov
icebp
adc
faddl
ret
sub
cmp
lods
insl
scas
iret
push
pop
jl
jg
jecxz
lcall
pop
sbb
loope
out
push
sub
popa
fldenv
rcrl
cmp
xchg
sbbb
ja
mov
cld
dec
test
lock
cltd
stos
std
push
ret
fstpt
push
scas
mov
jecxz
loope
mov
mov
inc
xor
push
std
push
jno
or
add
clc
testb
jecxz
gs
pushf
cmp
cmp
sbb
loopne
repnz
andb
jle
std
outsb
pop
nop
cmpsl
std
aaa
dec
jg
and
lret
and
lahf
stc
jecxz
jcxz
pop
dec
jnp
xor
rcl
and
cli
mov
jae
sarl
out
sub
push
and
test
ffree
xchg
aam
push
adc
call
inc
push
gs
sbb
mull
or
pop
lods
es
push
dec
popa
dec
inc
push
xchg
sub
jmp
dec
sbbl
mov
sub
and
xchg
dec
jae
pop
and
sub
inc
fstpl
inc
and
xchg
sbb
mov
sub
mov
jbe
aas
push
or
push
push
adc
mov
in
xor
out
sar
clc
imul
and
ret
shl
aad
mov
xchg
insb
std
pop
ret
add
mov
jae
ss
add
mov
or
push
or
subb
in
int
lock
jns
cmpsl
stos
into
in
sti
pusha
and
insb
add
mov
test
outsb
jae
lds
sub
call
jnp
sarl
add
pop
add
dec
push
je
enter
rclb
ficoml
xor
mov
les
mov
call
roll
lret
out
or
rcr
mov
icebp
cmc
push
dec
ret
rep
ja
sbb
dec
mov
push
aad
pop
pop
std
jae
in
mov
pusha
out
int
fs
aad
cltd
jp
fcmovb
xor
adc
jmp
repz
arpl
shrl
dec
jle
cmc
outsl
add
stos
dec
ss
xor
das
das
push
lret
mov
test
and
mov
lcall
adc
xlat
add
pop
xchg
inc
and
ret
mov
mov
mov
sub
icebp
mov
mov
stos
xchg
and
lret
mov
jno
cwtl
ja
and
shl
shlb
sub
dec
or
rcrl
jnp
push
outsl
mov
lret
and
jp
jo
pop
movsb
popa
aaa
or
hlt
mov
insl
bound
arpl
cmp
xchg
xlat
sbb
ss
add
xchg
lcall
sbb
jae
ja
xchg
fstps
adc
cmpsb
sub
mov
dec
cwtl
out
xchg
cmpsl
test
outsl
in
mov
call
mov
lds
mov
and
mov
inc
cmpl
dec
in
int
sub
jge
cli
int
js
das
fldt
adc
shlb
or
xor
lea
fsubs
ss
mov
push
das
bswap
addb
mov
adc
ss
ja
mov
mov
sub
mov
pop
outsb
push
ds
xor
pop
sub
inc
mov
jecxz
fsubrl
lock
arpl
mov
lock
cmc
lods
movl
and
rorl
out
add
jge
aaa
enter
js
push
test
adc
jmp
mov
fidivl
out
mov
push
addl
jl
shlb
iret
insl
and
inc
jp
inc
sub
pushf
xchg
not
pusha
aaa
ret
push
push
sbb
rolb
notl
jecxz
and
cmp
push
mov
mov
lea
and
jne
add
nop
sbb
cmp
add
arpl
add
or
les
mov
mov
xchg
ds
or
enter
pop
into
mov
pop
mov
lods
jmp
pop
mov
cmpsb
fldl
pop
dec
mov
repz
and
rclb
adc
pop
jns
ja
scas
stos
pop
cmpsb
cmpsb
jle
push
jge
sbb
pop
xchg
popf
je
or
popa
pop
jo
cmp
movsb
mov
push
mov
xor
xor
sub
ljmp
pop
push
jo
loope
leave
xor
fisubrl
jl
mov
lods
loopne
repnz
sub
add
lahf
push
sbb
daa
or
push
add
pushf
xor
mov
inc
movsl
or
std
fwait
or
out
mov
fwait
js
mov
xchg
mov
arpl
xor
sbb
push
rcl
add
enter
aad
std
fidivl
dec
mov
flds
pop
es
repnz
xchg
pop
or
gs
and
pop
popf
cld
mov
loop
sbb
and
fmull
jg
mov
jmp
aaa
pop
pop
imull
mov
mov
int
clc
dec
test
clc
mov
or
sub
addr16
jecxz
mov
int3
addr16
sbb
icebp
daa
in
sbb
sbb
loop
in
xor
lret
pop
pop
in
inc
xchg
fidivrs
adc
bound
adc
dec
pop
stos
mov
sets
out
js
xchg
add
xchg
jmp
stc
xchg
icebp
lret
xchg
jmp
int3
sahf
add
stc
push
sub
fistpl
push
sbb
int
mov
and
mov
lock
test
cs
hlt
vmovd
mov
push
mov
mov
pop
xor
adc
or
pop
stos
cmp
insb
sub
sub
push
mov
mov
testb
pop
mov
out
and
or
or
loop
lods
xchg
jne
lahf
fisttps
sbb
pop
test
push
cmp
dec
movsl
mov
pushf
inc
mov
push
sbb
mov
movsb
lods
mov
push
notl
pop
outsl
pop
cmp
cltd
cltd
xor
mov
sbb
sub
lock
ret
mov
in
lea
lret
xor
adc
mov
add
call
shr
ret
je
sub
sub
mov
dec
pop
rol
dec
mov
in
jae
jne
adc
pop
pop
in
add
pop
xor
in
rcll
data16
or
shll
mov
mov
inc
and
fbld
stos
les
lods
imul
pushl
aaa
stos
pop
movsb
cmp
mov
cmpsl
lods
dec
sub
popa
loopne
push
mov
scas
dec
sbb
sbb
stos
cmp
fsubrl
sbb
xchg
cmpl
push
rorl
dec
xlat
ljmp
mov
aad
xchg
xchg
or
sub
jns
stos
sbb
push
cmp
mov
ja
adc
pop
cmc
push
mov
jb
cmp
int3
inc
sub
pop
dec
pop
xor
push
adcb
flds
mov
adc
fiaddl
or
add
and
fidivs
add
cltd
dec
das
mov
pushf
dec
xbegin
sbb
cwtl
sub
mov
cmp
sbb
outsb
data16
jne
sarb
lock
sub
or
dec
dec
stos
scas
inc
cmp
inc
jge
in
das
mov
add
cmc
lret
cmp
xor
inc
pop
sbbb
cwtl
push
stos
es
into
mov
sub
hlt
aad
push
out
ja
movsl
mov
divb
inc
idivl
jmp
push
inc
push
jns
add
mov
dec
rclb
mov
inc
pop
mov
mov
lahf
dec
pop
push
cmc
mov
jmp
jo
cs
xchg
sbb
xchg
and
jbe
pop
lods
pop
roll
xchg
scas
mov
scas
testb
jmp
jp
xor
pop
aaa
loop
adc
sbb
dec
dec
pop
inc
jl
repnz
dec
pop
push
in
cmp
ret
push
int
loopne
mov
mov
sahf
adc
mov
sub
decl
or
xor
adc
pop
setnp
idivb
negb
mov
mov
sbb
lcall
lock
shrb
fdivrs
jne
push
mov
xorl
rcr
add
mov
jl
pop
mov
popf
out
aad
fwait
sub
das
mov
inc
sub
jnp
lcall
sub
xlat
fists
stc
mov
int
xor
pusha
popl
inc
jb
lret
xchg
jecxz
cmp
cmp
sub
xor
xor
jmp
mov
fbld
sbb
pop
dec
sub
xor
jnp
xchg
jbe
jecxz
insl
mov
jns
repnz
sbb
mov
cltd
inc
movsb
call
adc
sub
sti
push
rorb
bound
rorl
lds
jnp,pn
xor
sbb
sbb
mov
mov
xchg
les
clc
inc
push
push
or
or
ljmp
aam
sub
mov
push
ror
xor
cmp
sbb
sarl
mov
push
and
xchg
leave
adc
mov
int3
add
je
hlt
in
cmp
mov
lods
mov
sub
lahf
pop
sbbl
xor
lret
insl
sub
dec
les
in
or
and
mov
lock
cmpl
pushf
mov
fiaddl
pop
cmc
and
add
lcall
lret
inc
imul
jne
mov
jnp
jecxz
fsub
iret
out
popf
push
cld
xchg
std
aas
adc
mov
cmc
dec
sub
shl
jno
insl
mov
sub
fistpl
or
pop
js
mov
sbb
or
dec
loopne
and
and
gs
aaa
lds
pop
roll
jns
sub
dec
ljmp
sbb
dec
cmpsb
push
xchg
xor
insb
mov
xchg
or
pop
cmpsl
and
mov
fsubl
sahf
pushf
lea
add
cmp
add
mov
sarb
mov
stos
mov
jl
adc
mov
jge
inc
ds
push
fisubs
sub
div
loope
lods
cmc
mov
testl
mov
in
push
pushf
push
leave
test
rorb
push
and
lock
jle
je
mov
aam
mov
xlat
cltd
std
iret
xor
fidivl
loop
shll
xor
cmc
mov
jmp
mov
stos
pop
faddp
enter
add
data16
push
pop
ret
mov
dec
in
pop
dec
adc
test
push
imul
xchg
fcmovbe
xor
add
mov
xchg
cmpsl
cltd
lcall
out
fists
jne
pop
pop
std
adc
aas
sti
add
hlt
ret
push
inc
dec
dec
sub
icebp
sub
xchg
sbb
jne
les
adc
pop
std
aam
jecxz
pop
cmp
mov
mov
enter
test
mov
push
xor
sbb
lods
mov
and
subb
int3
mov
ret
push
adc
adc
inc
ja
fs
add
into
cmovno
lods
pop
sub
xorb
add
add
pop
out
ss
cwtl
adc
push
xor
imul
push
sub
or
add
mov
cld
in
fsubrl
pushf
dec
jmp
cmp
lahf
sbb
inc
imul
icebp
rcrl
mov
push
stos
sub
fldl
inc
sub
cmp
add
jecxz
xchg
pop
xlat
sbb
sbb
cli
inc
dec
mov
sub
mov
ss
lret
imul
push
js
cmpsb
fcmovne
ljmp
push
ficoml
sbb
pop
mov
leave
nop
and
cmp
inc
test
call
jle
in
cmpl
adc
mov
insl
push
inc
mov
aas
insl
popa
xor
sub
jns
fldl
dec
mov
push
push
cmpsl
and
cmp
mov
mov
roll
mov
lods
nop
aad
sbb
and
popa
pop
mov
out
or
rorl
out
mov
sbb
scas
mov
adc
mov
out
out
pusha
jecxz
cmp
bound
xlat
fisubrl
clc
inc
pusha
mov
cmpsb
fisubs
cmp
jb
push
or
out
xchg
jb
pmaxsw
sbb
test
idivl
and
cltd
xor
mov
ljmp
jnp
xchg
sub
xchg
pop
ja
cmpsb
in
xorl
xor
xchg
and
std
lret
shll
xor
int
pop
pop
sti
dec
mov
lods
mov
loope
dec
fdivr
shll
call
sbb
pop
pop
ds
adc
sti
popf
lea
mov
jbe
jno
jg
xorl
aad
adc
pop
lcall
sbb
daa
addr16
fstps
aas
shlb
pop
mov
jge
ljmp
adc
icebp
push
cmpb
in
jo
test
addr16
sbb
popl
jae
sub
shlb
push
std
jnp
pop
lds
stos
xchg
mov
cld
wbinvd
negl
push
xor
sub
mov
xchg
and
or
mov
dec
clc
sti
mov
inc
xchg
mov
imul
shrl
cmp
pop
and
aad
test
rcrl
rcll
jp
push
sub
rcrl
inc
mov
clc
or
add
pop
sub
mov
outsb
jnp
hlt
sti
jp
xchg
sbb
cmp
and
insl
sub
jno
aam
xchg
icebp
stc
jns
cmp
mov
sbb
stc
test
out
ret
dec
jbe
jo
push
movsl
mov
inc
fnstcw
dec
out
jmp
scas
imul
xchg
add
jnp
xor
popf
lods
push
aas
call
adc
sbb
mov
adc
pop
push
dec
jno
mov
mov
sub
mov
pop
cmc
gs
popf
idiv
sbb
mov
pop
cs
adc
mov
gs
mov
pop
fstl
imul
lahf
cmp
scas
es
test
inc
add
cmpsb
inc
add
mov
pop
outsl
inc
dec
mov
divb
dec
cmp
sbb
sub
jnp
into
es
xor
and
out
repz
fmul
es
in
mov
dec
lret
ficoml
jo
subl
mov
cmpsl
or
repz
and
dec
fdivs
leave
clc
dec
subl
rcrl
ljmp
push
imul
jl
pop
or
pop
pushfw
lahf
pop
xor
push
jae
fsubr
mov
loopne
cltd
lahf
aam
mov
out
push
mov
sti
jno
mov
inc
and
icebp
jge
adc
jg
mov
test
mov
sub
fnstenv
xor
or
and
xor
loopne
pop
es
sarb
add
scas
lret
aaa
ret
leave
mov
sbb
cmpsb
xchg
out
divb
insl
push
add
outsl
repnz
jnp
mov
stos
push
je
cli
rclb
xor
cmp
cmp
loopne
mov
mov
lock
fstpl
popa
inc
and
mov
ja
mov
xor
mov
das
lcall
cld
out
rcll
cmpsl
add
shll
les
das
mov
inc
jecxz
stos
jp
out
fildll
pop
jp
cli
fisubrs
testb
xor
mov
enter
clc
in
mov
fldt
sysexit
jo
cmp
cli
call
insl
nop
fidivs
pop
push
mov
jp
mov
sub
ljmp
js
rorb
jp
mov
xlat
fisubrl
fadd
and
jbe
adc
xchg
mov
mov
pop
rolb
int3
cmp
xchg
stc
in
std
aad
test
push
loope
or
lods
or
push
xor
insl
fcoml
and
adc
lea
out
lret
sub
cwtl
in
ds
cltd
inc
mov
xchg
lret
mov
shrb
cmp
ficompl
rcrb
mov
aam
mov
jg
jge
sub
fbstp
inc
jne
push
or
push
and
mov
fidivrs
pop
cmp
lret
dec
sbb
scas
insb
popf
fcompl
adc
sbb
and
lcall
jge
stos
jle
repnz
mov
int3
rol
mull
or
mov
inc
cs
jb
aas
dec
adc
data16
into
and
add
cmp
mov
push
shrb
xchg
out
loop
lahf
and
jle
xor
sarb
pushf
jl
cltd
imul
lahf
dec
mov
push
cmp
push
clc
sub
mov
push
jp
push
sbb
add
sub
sub
cmp
sub
jb
or
xor
test
dec
loopne
push
push
cltd
dec
xchg
xor
pop
lcall
rcl
data16
or
inc
repz
cwtl
and
in
fidivs
data16
xorb
clc
fwait
jle
test
insb
enter
mov
jno
lcall
cmp
jl
sbb
xchg
or
xchg
push
inc
ret
mov
std
pop
das
sbb
cmpsl
adc
pop
inc
xchg
jo
clc
dec
fimull
cmpsb
imul
ret
cmp
scas
sub
clc
into
fbstp
in
adc
in
lds
push
or
inc
add
or
bound
imul
daa
das
xor
scas
outsb
jno
sbb
cmpsb
xor
leave
mov
call
subl
aad
mov
rol
scas
ret
push
mov
adc
inc
add
fmull
adc
cmp
push
data16
push
mov
sub
cmp
in
mov
pusha
xchg
inc
sbb
test
cmpsb
lcall
cmp
lret
ljmp
outsb
pop
xlat
dec
and
inc
pop
inc
mov
adc
sub
add
push
ss
ss
jp
mov
pop
adc
fnsave
leave
enter
aaa
fdivl
les
xor
xlat
xor
ljmp
cs
sbb
jne
je
pop
cmp
add
sti
ficompl
hlt
gs
xchg
aaa
xor
sahf
push
mov
and
jecxz
jo
hlt
dec
mov
jmp
inc
pop
xchg
pop
fistl
fistpl
mov
mov
dec
pop
xchg
pusha
add
lock
cmp
xor
in
push
mov
ja
incl
dec
sub
subl
fisubs
sahf
and
incl
popa
mov
cmp
insb
icebp
inc
push
jge
cmp
sub
jge
fwait
decl
cs
ret
xor
lret
push
mov
sbb
insl
dec
jmp
sti
and
in
pop
push
sbb
out
mov
dec
fsub
xor
jbe
out
xor
jb
mov
pop
scas
addr16
sarb
ljmp
cld
addr16
icebp
push
cld
pop
pop
mov
sbb
fsubrl
mov
mov
and
flds
xchg
js
sbb
adc
push
sub
cmpsb
xchg
aas
bound
and
dec
mov
insb
xor
ret
sub
addl
cmp
dec
mov
ficomps
ja
sub
ret
aaa
lahf
mov
pushf
outsb
iret
push
pop
aam
mov
fcomp
lret
xchg
insl
lahf
xchg
jno
sbb
testb
mov
and
sbb
cld
adc
jp
hlt
mov
clc
rcl
cmp
je
mov
xchg
std
cmp
hlt
cmp
jmp
cs
or
call
call
andb
imul
and
fcoml
add
jmp
xchg
fs
out
mov
dec
popa
test
ljmp
insb
movsl
jns
fistpl
notb
xchg
add
jo
rorb
add
inc
loopne
in
mov
sub
mov
mov
push
adc
push
out
es
je
rcll
sub
cmc
pop
arpl
add
mov
ret
cld
push
push
cmpsb
push
mov
lods
push
int3
das
test
jg
outsb
sarl
xor
aam
testb
pop
push
movsb
data16
mov
add
push
pop
mov
iret
repnz
push
push
aad
sub
test
push
rorl
jb
jl
mov
jmp
mov
xchg
in
or
cmpsb
jecxz
inc
push
inc
dec
inc
adc
adc
std
mov
add
xchg
sbb
jl
mov
xor
fbld
and
mov
inc
xor
cmp
xor
dec
cmpsl
mov
hlt
ja
dec
movb
sahf
fadds
int3
pop
push
sbb
repnz
pop
cld
inc
popa
test
mov
add
add
pop
inc
adc
pop
jne
stos
rcrl
ja
push
notl
divb
mov
int3
mov
daa
push
repz
dec
jl
cmp
add
jecxz
daa
dec
push
or
sbb
dec
arpl
into
push
fidivrs
sar
push
xchg
loop
jg
push
mov
xchg
xchg
inc
mov
or
flds
cmp
inc
inc
or
push
pop
and
stos
xor
lods
dec
hlt
jecxz
push
mov
in
stc
orb
lahf
inc
jo
fdivrs
sbb
xlat
cmp
add
push
push
aad
jmp
subl
push
shll
out
pop
sub
popa
jge
iret
cmpsl
jb
cmp
popa
rolb
push
out
inc
in
push
mov
lcall
sbb
data16
lahf
insb
dec
lcall
pop
ficoms
fbstp
pop
loop
gs
nop
push
cmp
inc
xchg
lea
xchg
mov
sbb
pop
pop
xchg
xchg
jecxz
les
sbb
into
int
std
mov
popa
stc
sub
add
out
dec
jecxz
xchg
rcr
mull
add
xor
and
imull
sti
adc
mov
addr16
push
rclb
outsl
dec
jecxz
jno
in
xchg
mov
xor
jmp
sub
hlt
pop
jmp
mov
dec
mov
outsl
das
jbe
mov
and
xor
mov
or
dec
aam
pop
cmp
shrl
sub
sub
in
mov
pop
lahf
fwait
add
push
xchg
fsubl
sub
test
pop
and
adc
hlt
mov
inc
cwtl
imul
repz
pop
sub
push
push
cwtl
add
or
out
jecxz
shrb
ds
imul
mov
mov
popf
pop
scas
mov
fistpl
stos
or
lret
inc
flds
sbb
das
jl
in
mov
stos
int3
out
lds
jp
in
jge
push
mov
sbb
mov
pop
cmc
je
push
fldcw
pop
mov
fsubr
ljmp
push
mov
fldt
xchg
mov
adc
into
push
mov
cltd
jmp
fidivl
mov
cwtl
jmp
fwait
add
sbb
loope
aam
sub
in
lods
mov
scas
jnp
push
jl
aad
test
mov
pop
int
jb
pop
jb
mov
fcoml
cld
mov
mov
hlt
imul
and
xor
pop
stc
es
sti
sub
std
cmp
cmc
adc
pop
shll
pop
jbe
inc
andl
inc
mov
xorb
scas
arpl
bound
stos
cmp
sbb
arpl
aad
in
cli
hlt
adc
add
cld
mov
push
mov
xor
mov
pop
adc
nop
mov
loop
sbb
lahf
cwtl
icebp
fwait
dec
stos
mov
repnz
js
inc
into
or
cmpsl
fmuls
dec
push
mov
les
xorb
lds
sub
fwait
mov
add
xchg
mov
adc
in
pop
jnp
mov
dec
ljmp
mov
xchg
cmpsb
jb
xchg
pop
pushf
outsl
lods
sysenter
jge
jb
arpl
jg
repz
xor
mov
add
out
cld
cmp
popf
xchg
adc
scas
cli
cmp
lods
push
mov
lods
int3
faddl
ret
lock
sarb
test
xchg
loope
cwtl
pop
mov
inc
inc
push
leave
insl
cmpsl
lock
or
loopne
mov
push
sahf
xchg
jmp
fsubrs
and
aas
cmpsl
out
subb
or
and
xchg
push
inc
cwtl
mov
ss
jnp
les
fdivrl
push
ss
ds
dec
mov
xor
xchg
xorb
or
jp
fstps
jo
dec
xchg
xchg
jl
nop
cmc
insl
test
pushf
popf
sar
addb
mov
iret
adc
cmp
pop
shll
and
test
cli
enter
pusha
repnz
mov
push
fwait
mov
mov
xchg
and
mov
mov
jnp
mov
imul
push
or
dec
lds
push
pop
dec
jp
mov
clc
jo
mov
cwtl
lcall
add
lcall
inc
jo
dec
test
std
and
ja
cli
aas
cltd
jb
idivb
mov
or
push
sahf
hlt
or
dec
insl
aad
pop
and
push
popa
sbb
jl
mov
out
adc
mov
ljmp
add
sti
scas
mov
outsb
jge
pop
mov
jno
lods
jae
repz
loop
into
pushf
dec
add
pop
and
sbb
test
iret
xor
lcall
adc
ret
divl
mov
jb
dec
push
push
lret
mov
cmp
sub
cs
dec
arpl
or
sti
xchg
pop
into
cmp
sub
setp
push
ret
push
ss
push
sbb
out
pop
test
add
cli
mov
lcall
push
cld
xor
ret
cmp
movl
mov
and
arpl
fiadds
ret
imul
xor
mov
call
mov
adc
pushf
xchg
ret
rorl
inc
addr16
xchg
shll
push
rolb
pop
mov
rcrl
push
insb
adc
mov
or
fcoml
or
lods
adc
rorb
sub
pop
jp
int
sarb
sub
lea
popa
adc
or
sub
lods
lock
loope
cmp
mov
xchg
mov
aad
out
cmc
movsb
fwait
jns
test
popa
hlt
test
pushf
push
enter
enter
push
and
jae
das
cld
aam
loope
test
cmp
cmp
mov
ljmp
mov
movsb
pop
shlb
lcall
fadd
fnsave
mov
mov
jge
sbb
pop
shl
nop
jne
and
mov
adc
or
jo
sbb
add
mov
adc
sbb
sub
or
mov
sbbb
mov
and
out
xchg
shll
test
iret
popf
outsb
cmc
ficompl
and
in
in
xor
rolb
scas
add
or
mov
push
movsb
mov
and
call
push
rorl
push
inc
jne
test
jmp
sbb
jno
lret
iret
sahf
jo
pop
jno
fdivr
add
push
and
push
popa
aaa
cmpsb
mov
fldl2e
inc
imul
pop
jne
js
sub
fistpl
pusha
stos
push
mov
jae
mov
popa
lcall
jecxz
push
fildll
leave
push
insb
mov
les
mov
or
pop
inc
popa
mov
ret
cli
push
mov
jb
and
and
push
pop
iret
lret
jl
or
dec
lea
icebp
fists
in
mov
xchg
pop
enter
stc
loop
stos
mov
loopne
or
sub
xor
into
cltd
lods
jmp
in
push
dec
jnp
and
mov
inc
cmp
xchg
push
in
test
mov
adc
rol
add
mov
push
fistl
jno
or
adc
aas
mov
int
and
dec
sbb
jp
mov
xchg
mov
enter
sub
or
sub
inc
test
mov
int
mov
bound
fnstenv
dec
shlb
pop
fmulp
mov
mov
push
addr16
aam
inc
jbe
aad
cmp
xchg
sbb
icebp
arpl
and
add
testl
enter
mov
adc
push
mov
aaa
add
pushf
movsb
bound
push
hlt
or
testl
lret
scas
jecxz
xlat
clc
hlt
xlat
fimull
pop
xor
notb
push
popf
add
xchg
pushf
sub
ss
jg
ss
test
scas
scas
jb
lea
push
sub
inc
cwtl
jnp
or
lods
scas
add
add
add
or
cld
mov
pop
fs
fcomps
adc
and
daa
mov
stos
jns
addr16
mov
xor
add
cmp
icebp
mov
or
add
mov
nop
xchg
inc
jmp
ror
jl
les
popf
mov
or
ficoml
or
sahf
mov
idiv
pop
mov
pop
cli
push
and
mov
mov
jnp
or
cmpl
aad
mov
add
rcll
inc
call
fdivrs
addr16
add
subl
rorb
push
sub
call
fmull
xlat
aas
jnp
and
movsl
dec
jbe
pop
sbb
mov
cmp
out
fsubrl
mov
ret
fwait
aam
xor
test
pop
stc
or
pop
add
int
jecxz
inc
jge
sbb
stc
test
jmp
outsl
cmp
mov
jp
scas
sbb
scas
out
insl
test
enter
xchg
cs
add
inc
jp
aam
cmpsb
rorl
mov
jg
faddl
imul
jno
push
sbb
xor
cmp
out
push
add
add
inc
mov
popa
cmp
pop
xor
cmp
movsb
xor
fwait
jge,pn
mov
cmp
loope
scas
movsl
outsl
rcr
test
in
lahf
mov
dec
leave
mov
push
repnz
sarl
xchg
mov
cmp
xlat
add
cltd
daa
pop
out
adc
mov
das
and
pop
pop
in
cmp
cltd
int
ret
mov
adc
or
mov
xor
sub
sub
mov
data16
stos
imul
faddp
faddl
popa
push
orl
pop
popa
cli
sbb
repz
add
sub
sbb
and
sbbb
add
jl
pop
inc
cmc
and
loop
sbb
nop
sub
mov
out
jmp
mov
pushf
jb
insl
add
jmp
dec
es
outsl
push
mov
and
call
adc
adc
lcall
cltd
loop
ret
sbb
ljmp
nop
ljmp
jns
add
sub
shl
sbb
jmp
pop
mov
jae
arpl
adc
sub
adc
mov
add
cmp
or
and
sub
loopne
inc
clc
out
sarb
jae
lret
cmp
jmp
std
jns
mov
jo
push
mov
jno
imul
jns
mov
dec
inc
add
inc
cmpsl
fcomps
mov
int3
sub
hlt
ret
or
outsb
pop
repnz
mov
bound
push
push
lret
es
bound
clc
xchg
cmpsl
push
xor
cli
cmc
inc
jne
xchg
popf
test
sbb
xor
enter
sar
add
outsb
testb
mov
and
mov
push
outsb
clc
pop
pushf
mov
or
jmp
mov
rcrb
mov
fnstcw
push
les
cld
rorl
pushf
int
dec
xchg
movsl
jo
test
inc
inc
push
jbe
mov
ljmp
outsb
xchg
mov
sub
into
adc
das
stc
cli
out
push
jae
mov
loope
test
das
ljmp
mov
sti
mov
lret
inc
aaa
cmp
stc
push
or
movsl
scas
ret
inc
and
or
pusha
add
dec
mov
cwtl
daa
movsl
mov
adc
pop
test
and
gs
jae
push
inc
sbb
and
clc
jg
pop
ja
adc
adc
jo
sbb
scas
mov
je
rep
push
scas
jg
lds
clc
inc
xor
mov
push
mov
gs
xchg
les
mov
inc
push
out
xor
sub
sub
fdiv
enter
and
push
rorl
fldenv
cltd
lret
or
mov
push
lds
popa
and
iret
push
add
mov
and
dec
jbe
cmpsl
dec
ficoms
sti
mov
incb
test
inc
icebp
and
push
cld
iret
outsl
xlat
aas
push
js
push
pop
es
lcall
cltd
mov
outsl
out
pop
shlb
xchg
jno
xor
jae
out
shrb
pusha
inc
adc
in
pop
js
leave
jae
xlat
pop
test
call
jnp
jl
push
stc
test
mov
and
sub
inc
xlat
gs
cmp
pusha
mov
std
cli
mov
mov
arpl
push
fistps
ss
pop
lock
aad
mov
les
js
test
fistps
mov
xchg
pop
sbb
or
and
test
test
and
or
aad
fcomps
dec
sbb
test
xor
loopne
bswap
arpl
lret
ja
adc
adc
and
aas
in
fildll
jne
mov
ret
sub
sahf
pop
adc
inc
pop
arpl
insl
scas
inc
sbb
cld
stos
and
adc
mov
and
dec
movsb
shll
pop
cmp
push
roll
xchg
push
cmp
in
mov
push
xor
adc
test
movsb
mov
enter
add
les
adc
xchg
adcb
or
cmc
sub
push
das
lea
or
add
enter
sub
fldt
jne
jg
rorb
nop
fcmovne
lret
inc
pop
fsubs
iret
test
adcl
mov
or
sub
js
inc
jg
out
dec
pop
fwait
andb
adc
inc
call
inc
mov
mov
popf
or
pop
hlt
xchg
jcxz
and
shlb
das
popf
and
sub
mov
sbb
mov
rol
test
xor
cmpsb
leave
add
aaa
pop
jl
icebp
cmp
mov
mov
andl
lcall
add
ja
pop
xchg
xchg
repz
scas
int
pop
mov
mov
push
rcr
xor
or
add
out
out
sub
leave
lcall
mov
test
aad
test
xchg
scas
repz
mov
leave
adc
out
jns
pop
stos
loopne
fsubl
mov
pop
cmp
fld1
mov
iret
outsl
push
data16
and
bnd
arpl
jb
cmp
scas
in
sub
mov
and
aas
add
stos
sbbb
pop
and
dec
add
ds
shl
lret
pop
or
and
xor
fs
fsubr
rol
testl
sub
xchg
inc
les
ja
push
xor
ret
dec
add
aaa
sub
inc
adc
stos
lret
mov
mov
cmp
test
test
push
mov
sub
push
ror
clc
mov
ja
into
bound
or
add
js
jne
scas
or
adc
fwait
testl
jg
xchg
xor
sub
outsb
push
xor
dec
sbb
xor
pushf
mov
inc
xor
roll
std
repz
mov
or
lods
rorl
mov
rcll
cmpsb
jle
jmp
xor
loope
pushf
nop
addr16
add
lahf
aaa
sub
dec
ja
enter
dec
jns
adc
fcom
cmp
fisubl
in
adc
add
xchg
faddl
insb
rcrb
repnz
fwait
stos
dec
inc
cwtl
jmp
in
repnz
xor
adc
jns
cld
loope
mov
in
push
out
dec
test
sbb
out
xchg
cmp
adc
cltd
mov
mov
dec
or
push
scas
mov
mov
fs
imul
cmpb
mov
sbb
or
ja
das
montmul
cmpsb
add
in
adc
movsb
mov
dec
addb
aad
dec
xor
repnz
insl
mov
ljmp
mov
shrb
loope
cmp
adc
jmp
cmpl
js
cmp
inc
insl
imul
mov
std
sbb
dec
push
ret
jge
stos
mov
or
sbb
mov
test
or
lods
xchg
iret
fsub
xor
imul
mov
outsb
negb
jae
lea
jmp
pushf
and
popa
mov
inc
jbe
insl
rorl
mov
pusha
or
call
pop
mov
aaa
loop
adc
cmp
movsl
call
fistl
shrl
movsl
ret
dec
push
loopne
mov
bound
out
andl
int
out
pop
ja
fcoml
cmp
push
mov
lret
jbe
adc
mov
clc
inc
lahf
aad
stos
push
clc
mov
andb
pop
aaa
push
sub
add
push
push
scas
int3
fstp
je
popw
es
jbe
fs
in
cld
sub
push
pushf
addps
inc
sbb
mov
sbb
and
cltd
xchg
cmpsb
imul
dec
pop
cld
push
mov
sbb
xchg
loop
lret
push
cmpsb
jp
push
xor
inc
inc
popf
aas
ja
fbstp
jns
jge
xchg
test
mov
mov
out
je
dec
popa
dec
int
xchg
mov
pop
add
dec
pop
xchg
or
mov
fisubrl
cmp
sbb
test
clc
mov
cmc
int3
sub
out
mov
mulb
push
mov
sub
sbb
add
mov
cwtl
into
add
nop
cltd
sub
addr16
mov
xor
insl
push
push
mov
pop
adc
push
mov
or
sub
jp
sbbl
or
addr16
out
fsubl
repnz
dec
test
arpl
out
add
das
xor
mov
pop
push
lds
ja
push
fwait
scas
inc
mov
add
clc
pop
dec
out
repz
push
push
or
add
push
adc
cmp
lcall
push
rorb
je
ljmp
xor
sub
and
shrb
daa
adcl
mov
nop
out
test
test
sbb
push
xchg
mov
mov
loopne
or
or
pop
imul
out
ss
leave
cmc
and
andl
xor
dec
inc
gs
rorb
mov
push
dec
dec
out
popa
lret
jle
ficoms
jg
xchg
aad
mov
mov
out
scas
iret
push
push
adc
lahf
mov
sbb
out
xchg
movsl
clc
test
push
xchg
sbb
jmp
repnz
push
xor
add
mov
adc
jns
in
sub
pop
scas
mov
movsl
lods
rcrb
in
xchg
sub
or
push
sbb
jmp
jne
loopne
bound
in
or
js
aad
and
int3
pop
je
mull
scas
xchg
xchg
sti
jmp
mov
xor
stos
xor
rorl
es
or
sbb
inc
push
mov
mov
inc
dec
dec
mov
mov
out
and
cld
movsl
cltd
sbbb
aaa
dec
pop
cmpsl
testl
cld
call
mov
stc
push
popl
and
mov
hlt
mov
xchg
fldenv
sub
js
rolb
cwtl
je
jecxz
scas
fcoml
jmp
aaa
push
sub
mov
and
hlt
pop
jae
pop
cmpsl
outsl
and
fnstcw
jb
outsl
push
sub
cmp
adc
ja
daa
jae
rcll
ds
pop
repnz
scas
scas
jno
sub
jae
gs
in
cmp
and
inc
xchg
or
mov
xchg
and
iret
and
movl
lds
add
xor
sarl
cltd
insl
int
mov
pop
dec
jl
lcall
jno
rcrb
sahf
incb
sbb
mov
out
popw
or
pop
fcmovnu
arpl
dec
mov
xor
into
pop
lock
movaps
std
fsubrl
fcom
js
into
rcrl
aas
lahf
cmp
cli
fsubrl
cld
mov
jle
mov
iret
sahf
sbb
cmc
sbb
les
iret
and
and
sbb
fwait
inc
jne
mov
dec
rolb
xlat
jo
xchg
cmp
fistpll
inc
mov
xchg
xorb
shl
mov
je
jno
in
sbb
or
lret
aad
pop
cmp
int
out
rclb
dec
mov
push
in
and
adc
jb
in
adc
std
sub
push
jo
stos
jno
sub
cmpsb
ja
xchg
in
arpl
shrl
pop
jns
jp
push
cmc
test
mov
xchg
sub
pop
xchg
int3
jne
mov
adc
int
sbb
fisubrl
fbld
loopne
push
or
mov
sub
fisubl
je
scas
shrl
mov
push
rorb
les
negb
aaa
psubw
cld
movsb
jg
or
add
lahf
jecxz
les
and
inc
mov
sarl
rcl
push
and
jne
mov
out
push
jl
or
and
pop
cmp
jge
or
push
ja
xchg
push
popf
and
fists
push
arpl
xchg
aad
push
cmp
mov
scas
add
lcall
xchg
or
xlat
dec
jl
inc
mov
sbb
push
insb
mov
jl
in
ljmp
gs
or
in
imul
or
lods
mov
lods
xchg
push
cmp
in
add
or
es
or
popf
fisubs
cwtl
pop
rorl
test
push
jmp
icebp
cli
sbb
test
and
mov
jge
cmp
fidivl
fbld
aas
setno
inc
insb
inc
ficoml
daa
adc
or
lret
pop
pop
add
jge
shl
jg
sti
fiaddl
adc
xor
and
adc
cli
xor
stos
lahf
ss
test
xchg
or
pop
je
mov
jne
aaa
lret
dec
ss
cltd
xchg
aam
arpl
mov
lds
arpl
sbb
and
lret
test
pop
bound
sub
imul
push
push
popa
jns
xchg
add
or
pop
pop
sub
imulb
addr16
lods
xchg
xchg
jle
sub
insl
movsl
push
xor
insb
leave
push
adc
aas
out
mov
pop
ret
mov
gs
add
push
xchg
mov
xchg
lock
xor
je
jo
test
rcrl
pushf
mov
jl
push
ficomps
ds
fnsave
inc
shl
and
pop
aas
push
add
je
jl
aam
push
daa
xor
or
dec
sbb
ljmp
pop
cmc
int
mov
cmpl
mov
jmp
sahf
inc
mov
xchg
cmp
mov
in
fsubrs
inc
lcall
aam
mov
lods
dec
js
jne
call
aam
shr
lods
mov
cmp
aas
shll
sarl
test
pop
pop
mov
loop
into
ftst
mov
cli
lds
aad
sbb
into
sahf
inc
dec
lea
jno
lahf
mov
in
dec
hlt
je
test
mov
push
sbb
xchg
and
insl
shll
jg
dec
ja
imulb
mov
mov
and
inc
mov
xor
xchg
xor
adcb
mov
mov
push
sbb
xor
inc
cmp
fdivr
mov
dec
and
addr16
dec
insl
sub
sbb
lods
pop
scas
imul
daa
dec
stos
fcompl
dec
and
push
mov
sub
sbb
dec
lea
filds
loope
and
dec
xchg
pop
sub
push
idivb
and
jbe
fwait
mov
sub
test
rcr
mov
dec
imul
enter
and
mov
mov
adc
loopne
xchg
jmp
mov
sbb
es
add
pop
jecxz
repnz
sub
inc
test
and
lahf
rorl
add
mov
and
jge
pop
jbe
hlt
adc
fdiv
outsl
sub
add
aad
mov
stc
outsl
dec
sbbl
lods
cmp
mov
popf
adc
sbb
inc
loop
sub
and
jmp
ret
push
jae
add
adc
ret
loopne
aam
add
push
aaa
clc
leave
ret
cmp
lds
int
loop
add
xchg
or
shrb
jns
jnp
and
inc
data16
pop
xchg
int3
loope
sbb
dec
pop
mov
dec
fs
test
clc
xlat
in
pop
test
aad
xor
cmp
lock
aas
cltd
movsb
jecxz
xor
pushf
arpl
xor
xor
adc
xchg
fiaddl
jge
dec
aas
pop
xor
mov
inc
les
sbb
mov
jle
xchg
ret
adc
fxch
inc
cmpsl
mov
aam
call
orl
shll
pop
loop
test
xchg
clc
jnp
lods
lahf
and
fs
mov
pop
jecxz
adc
jb
mov
pop
mov
cmpsl
mov
cmp
sub
adc
cmp
sub
inc
bound
mov
dec
int3
xor
out
leave
add
loopne
pop
aaa
pop
mov
rorb
pop
dec
addb
sbb
pop
add
mov
scas
movsl
xchg
out
loopne
mov
cld
adc
lret
or
and
stos
mov
inc
je
cmp
mov
or
or
test
lahf
or
jle
insb
repnz
adc
lea
dec
jb
fwait
push
arpl
rcrb
pop
xchg
mov
shlb
lcall
push
adc
jmp
sub
or
addr16
bound
lds
inc
mov
fbstp
jbe
mul
scas
xchg
or
sbb
inc
push
pop
leave
push
push
xchg
cltd
ss
dec
sbb
and
in
mov
or
sbb
aam
adc
xchg
cli
cmpb
or
mov
ja
out
adcl
mov
or
stos
leave
sbb
mov
int
jno
mov
cmpsl
dec
inc
pushl
or
das
insl
cld
mov
adcl
xor
cmp
pop
icebp
in
jb
insl
lcall
dec
and
sub
sub
cmp
sbb
loopne
es
dec
lods
adc
push
cmp
jno
or
leave
and
mov
adc
test
mov
xchg
mov
sub
imul
push
scas
mov
xor
sub
lret
lret
jl
bound
or
in
test
xchg
sub
pop
mov
inc
pop
repz
mov
into
jae
adc
sbb
mov
inc
in
jne
addr16
sbb
pop
inc
add
add
inc
aaa
adc
xchg
pop
sub
shrb
dec
inc
arpl
pop
cmp
dec
icebp
and
ret
and
inc
pop
xchg
fwait
xchg
outsl
mov
sub
rcrl
mov
pop
xchg
int
pusha
mov
iret
pop
and
ret
xchg
ja
and
ret
jo
sbb
xor
inc
xchg
pop
sub
frstor
outsb
pop
negl
pop
add
gs
and
js
lock
add
xor
mov
and
js
icebp
jp
pop
std
push
push
loop
xchg
movsl
popf
xchg
repz
rorb
or
mov
out
fmul
dec
dec
mov
int3
fwait
adc
out
push
ljmp
mov
jae
xchg
and
aaa
out
in
sbbb
or
cmp
mov
push
xor
jo
mov
or
test
dec
ret
fcmovb
push
fs
push
je
out
rolb
mov
sahf
stc
jp
jo
lcall
adc
stc
cmp
mov
lahf
enter
jns
icebp
sbb
push
insl
ss
movhps
jne
ja
jle
sbb
mov
mov
jmp
dec
test
stc
jns
sbb
test
push
push
arpl
cmp
adc
test
jne
add
xor
lret
jmp
in
mov
jg
daa
sub
and
out
inc
andl
mov
xchg
sub
iret
shll
in
es
mov
stos
push
jl
sub
les
sub
pop
push
ljmp
add
sahf
fisttps
insb
les
sub
xchg
je
cmpl
mov
xchg
outsb
fdivrs
push
or
mov
push
popf
shl
pop
ss
xchg
fsubs
mov
lahf
and
jb
mov
outsl
dec
cmp
xchg
pop
repz
mov
push
das
arpl
insb
mov
incl
repnz
scas
dec
ss
dec
sub
dec
mov
add
inc
mov
aam
adc
cmp
int3
mov
xor
fwait
daa
scas
adc
sahf
fucom
cld
movsb
aad
push
pop
sbb
mov
popa
sar
sbb
cmc
inc
cld
xchg
ljmp
xor
pusha
ret
nop
xchg
cltd
lahf
inc
pop
cmp
ljmp
bound
test
jne
loopne
pop
mov
dec
ret
sbb
adc
xchg
andl
xor
mov
sub
jae
mov
movsb
pop
out
push
shlb
in
test
leave
sbb
xchg
xchg
rorl
in
push
dec
dec
dec
mov
iret
adc
pop
insl
ja
jne
mov
imulb
mov
xchg
data16
and
mov
imul
lock
jg
lds
add
dec
in
mov
fbld
dec
add
push
pop
fcmovnbe
mov
sub
mov
adc
xchg
lret
pop
test
imul
xchg
test
mov
and
mov
std
dec
ljmp
dec
ds
test
enter
addr16
adc
add
xchg
jge
sarl
rolb
mov
mov
inc
nop
pop
xchg
mov
xchg
insl
and
js
or
inc
or
jmp
push
mov
mov
jae
sbb
mov
add
das
stc
xchg
in
fldenv
repnz
lods
nop
ficoml
add
lods
xchg
fimuls
mov
call
push
add
pop
iret
addl
xchg
arpl
mov
and
dec
std
sbb
mov
add
mov
or
mov
orb
aas
in
mov
popa
fiadds
jl
pop
out
out
dec
call
mov
cmpsb
mov
xchg
pop
rcll
mov
dec
xchg
pop
jns
jb
aas
push
or
or
mov
pop
add
push
pop
xchg
dec
das
fisubrl
stc
mov
add
xchg
mov
cmp
es
inc
sti
xchg
sarb
mov
xchg
lock
cmc
jmp
pop
loope
or
dec
es
out
mov
prefetcht2
ljmp
nop
cmp
stos
push
cmpsl
inc
and
bound
sahf
sub
mov
adc
jo
add
dec
adc
push
es
sub
std
mov
or
sub
push
ret
push
jne
inc
push
mov
jne
cmp
pop
icebp
jge
sub
aad
sub
xor
cmp
das
dec
xchg
sbb
mov
xor
lcall
out
adc
icebp
inc
push
and
test
aaa
int3
test
dec
out
mov
ljmp
cld
nop
pusha
jbe
sahf
leave
ljmp
adc
xchg
decl
push
loopne
adc
loopne
sahf
pop
in
mov
pusha
mov
dec
sbb
nop
ss
push
cmp
pop
les
ja
and
dec
pop
fldcw
push
mov
int
mov
incl
fwait
xor
sti
pusha
pusha
stos
test
push
cmp
add
loopne
xor
inc
inc
ss
add
inc
stos
xor
jno,pn
mov
in
out
xchg
fcoml
pusha
sti
mov
xor
imul
int
xchg
pushf
mov
hlt
fcomp
ret
shll
xor
in
mov
aad
sbb
xchg
sbb
add
sub
ret
adcb
ret
dec
inc
push
imulb
inc
ds
iret
xchg
dec
stos
or
add
out
jl
add
push
pop
std
cltd
jb
test
and
popa
or
push
jae
or
movsl
loopne
cli
movsb
cmp
js
stos
cli
dec
sarb
std
ds
adc
push
lcall
fsubl
loope
mov
iret
jb
mov
out
enter
fwait
mov
adc
fldcw
call
mov
cli
and
aaa
movsb
repz
arpl
aas
mov
xchg
les
add
sbb
push
out
lea
and
cli
xchg
test
out
push
jnp
inc
push
pop
mov
sbb
sar
ret
cmp
psubb
mov
cld
and
aad
dec
popa
cmc
insl
stos
or
dec
mov
mov
imul
jecxz
insl
sub
loopne
lock
xchg
test
adc
mov
cwtl
loopne
loop
or
in
repnz
xor
jmp
dec
sub
mov
sbb
lods
sbb
cmp
sbb
sbb
fsubr
pop
call
jecxz
fmul
ljmp
jmp
mov
push
adc
mov
or
cmpsl
std
mov
pushl
cwtl
nop
xchg
loop
inc
xchg
fwait
sub
bound
lea
icebp
push
pop
dec
test
push
scas
clc
jecxz
cmpsl
ja
nop
out
loope
lds
add
sbb
ss
in
cmpsb
pop
pop
ja
lock
aam
testb
sbb
filds
outsb
les
xor
mov
sub
test
and
jle
sub
add
mov
jo
and
arpl
lcall
mov
scas
cltd
popa
pop
push
movsb
pop
mov
test
dec
inc
xor
sub
aas
and
fwait
inc
mov
cmp
jo
xchg
add
test
imul
testl
adc
adc
leave
add
xchg
movsb
loopne
mov
mov
insb
pop
xchg
cltd
inc
mov
mov
pop
clc
fisttps
xor
and
push
lods
bound
sbb
fcoml
outsl
sbb
dec
push
fistpl
mov
sbb
cltd
lock
xchg
fs
jle
mov
fidivrs
dec
imul
lods
pop
lcall
mov
sub
push
pop
mov
jle
mov
sarl
mov
mov
adc
mov
rcll
push
popf
mov
pop
repz
fs
push
dec
inc
xor
call
pop
mov
cwtl
sahf
mov
inc
imull
jo
and
lret
arpl
repnz
ja
outsl
xor
dec
ds
in
mov
cs
lods
das
pop
lcall
cli
xor
mov
icebp
fsubl
sbb
xor
adc
sbb
jg
test
xchg
sub
bound
test
mov
daa
inc
fwait
cmp
push
add
push
jecxz
push
popa
dec
cmp
ja
jbe
xor
mov
push
cmpsl
mov
mov
pop
pop
or
pushw
mov
in
test
xchg
xchg
pop
fsubl
mov
and
sahf
fnstcw
xor
flds
in
mov
jbe
dec
mov
lods
mov
jns
es
xor
push
and
pop
xchg
fcoml
add
cmp
lock
hlt
js
out
daa
jnp
sbbb
pop
addr16
sub
pop
in
and
dec
cmp
pop
les
mov
mov
faddl
cmpsb
jle
hlt
fidivs
movsl
xchg
sub
jnp
xor
add
iret
sbb
push
nop
push
and
push
or
gs
out
adc
mov
inc
notb
stc
ror
add
xchg
cmp
enter
fisubrl
push
cmp
shrb
and
hlt
jmp
jl
rcrl
sub
sbb
jne
rorl
xlat
xchg
in
sarb
cli
xor
xor
cmp
in
subb
xor
dec
pop
sub
push
movsb
aad
lret
pop
arpl
mov
lahf
lods
jae
aaa
pop
das
jge
add
sub
xchg
mov
or
aaa
dec
pop
dec
adc
je
cmp
int
rcr
xlat
jg
std
mov
repz
sub
repnz
jmp
mov
scas
mov
mov
mov
dec
cmc
mov
pop
mov
imul
int3
test
pop
mov
mov
xchg
xchg
or
pop
outsl
dec
mov
sbb
mov
mov
inc
jl
jl
jae
xchg
fs
pushl
ss
arpl
bound
push
bound
inc
addr16
xchg
bound
bound
icebp
movsb
jbe
and
test
roll
cwtl
and
push
add
movlps
sub
fdivl
mov
mov
cwtl
cmp
fldenv
movsl
mov
jb
movsb
stc
int
cs
cld
int
dec
pop
js
jp
sub
dec
xchg
popf
int
fmulp
jle
adc
pop
jp
xchg
test
loop
aad
xor
jp
jp
scas
jp
in
cltd
inc
in
aaa
mov
mov
bswap
ss
xor
mov
test
xor
cmp
shlb
inc
push
jne
jge
sub
ret
dec
and
mov
subl
or
push
or
insb
inc
xorb
fsubr
push
push
adc
inc
or
jecxz
cmp
xlat
xor
mov
shl
dec
imul
lret
lret
inc
imul
sbb
mov
or
sbb
cmp
mov
arpl
jo
shrb
fucomi
lock
lock
mov
adc
jbe
dec
jae
inc
lret
pop
jo
imul
daa
test
daa
clc
mov
mov
mov
clc
pop
inc
jle
addr16
out
pop
lods
jae
adc
mov
sub
mov
jg
mov
ret
add
bound
out
xchg
inc
xchg
mov
or
add
cmp
mov
mov
jno
dec
dec
leave
adc
or
dec
push
sarl
sbb
xor
cmp
int3
pop
les
sbb
sbb
lea
das
cs
daa
cmpsb
mov
mov
mov
cmp
push
loopne
sti
push
sub
lcall
mov
notl
sbb
stos
rcrl
sub
les
mov
int3
loop
xchg
cmp
pusha
add
mov
dec
push
arpl
loopne
nop
cmp
sub
pusha
out
cmpb
sub
into
test
jne
lret
dec
lods
push
sub
add
mov
popf
inc
jo
sub
pusha
mov
push
ss
inc
push
add
ds
gs
movsb
sub
push
push
xchg
in
iret
and
inc
mov
push
lods
call
jmp
adc
sbb
and
movl
bound
out
fdivrs
cs
cmp
mov
cmpsb
stos
sti
pop
clc
ficompl
out
and
and
fs
leave
mov
lock
xchg
push
mov
ds
and
push
imul
add
push
push
sbb
sub
cmpsl
ds
mov
sahf
jp
cli
mov
int3
sub
add
addr16
lock
cmpsl
into
loop
test
std
ret
xchg
in
mov
add
mov
and
fisttps
data16
mov
mov
icebp
dec
push
push
push
add
filds
add
push
aaa
rcrl
les
mov
lcall
sub
dec
mov
inc
push
xchg
pop
lret
lahf
dec
xchg
inc
mov
sub
add
add
mov
sub
lock
rcrl
or
sub
sarb
pop
notl
push
in
scas
cmp
ds
cli
ja
repz
dec
mov
xchg
jne
repz
leave
int
cmpsl
jmp
push
mov
orb
in
mov
push
int3
sub
adc
stc
hlt
xor
lahf
sub
popf
lahf
cmpsl
scas
loop
mov
loope
lret
lea
test
enter
jge
aaa
inc
jge
les
cmp
sarl
insl
mov
into
push
jnp
xlat
aas
push
test
add
jp
ja
sti
js
fisttps
cld
lahf
arpl
add
sub
inc
adc
arpl
es
xchg
loope
movsb
es
stc
inc
mov
setns
push
push
lods
out
pop
lock
sahf
push
rorb
lret
sbb
cmp
mov
push
faddl
out
jae
cmp
mov
pop
lret
clc
cmp
dec
js
in
andl
lea
sbb
int
jle
mov
lahf
adc
hlt
mov
mov
and
jae
push
hlt
ja
out
clc
sti
in
std
js
inc
jmp
or
shlb
mov
mov
xchg
adc
push
test
lods
pop
daa
sbb
repz
out
stc
fisttpl
sahf
pushf
xchg
sub
shrl
cmpsl
sub
fcomip
ret
jae
xchg
mov
ret
xchg
xchg
cwtl
aam
dec
jbe
ret
outsl
stos
movsb
cmp
mov
test
and
xor
xchg
jns
dec
mov
adc
xchg
push
adc
dec
popa
add
inc
shlb
mov
inc
iret
mov
std
sub
add
sti
ja
mov
push
dec
xor
lea
popa
nop
cli
clc
push
pop
rol
sti
shl
mov
roll
sbb
scas
shl
jge
xor
fmuls
mov
xchg
add
hlt
pusha
mov
repz
test
std
pop
and
or
fdivr
mov
gs
lods
into
cs
in
or
loopne
ds
fidivs
xchg
xchg
lea
lcall
inc
jecxz
dec
sahf
pop
inc
jp
scas
or
lahf
jl
sbb
addr16
test
loope
int
push
aad
in
jae
push
sub
mov
stos
push
lods
shrb
push
rclb
std
xor
dec
popa
test
mov
mov
stc
repnz
iret
adc
push
rclb
adc
call
xchg
sahf
sub
pop
icebp
adc
idivl
sbb
ror
pop
lcall
lret
add
in
mov
and
cwtl
in
les
adc
fnsave
loope
push
pop
cmpsl
dec
mov
decb
cltd
cmpsl
sbb
outsb
out
repz
imul
popa
std
clc
adc
repnz
std
cmp
repz
dec
loope
push
stos
pop
cmpl
mov
add
stos
mov
jge
outsb
in
das
js
test
sahf
aam
hlt
dec
mov
into
sub
ret
add
push
scas
xchg
xor
repnz
lods
movswl
lahf
and
mov
mov
push
adc
mov
out
and
popa
jno
xchg
jno
loop
cli
stos
rorb
or
std
test
js
test
ret
xor
movsl
xchg
stc
test
arpl
outsl
and
dec
in
js
test
add
in
test
jle
cmp
outsb
out
or
cli
sarb
std
fcomps
or
inc
insb
jbe
movsb
sub
aam
dec
sub
cmp
xor
mov
and
xchg
push
out
into
int
mov
push
jbe
jg
push
inc
rolb
ds
jmp
adc
xorb
loope
stos
lds
xlat
rorb
sbb
jecxz
adc
cld
xor
aam
push
xchg
pop
rorb
int3
lcall
les
xlat
aam
cmp
loop
sbb
add
mov
or
sbb
mov
call
pushf
xchg
loopne
dec
xor
mov
stos
mov
xor
repz
push
inc
inc
or
mov
lret
jno
pop
mov
jb
movsl
pop
xor
xchg
xchg
sub
orb
push
lock
push
test
cld
mov
pop
push
cmc
push
fcmovb
cmp
or
mov
ret
scas
arpl
cld
adc
xor
push
xor
roll
cmp
aaa
xor
xchg
inc
testb
sub
mov
sub
pop
insl
mov
mov
cmp
stos
jmp
mov
mov
pop
push
xchg
lea
int3
lea
clc
and
insb
pop
push
sbb
dec
jnp
add
xchg
out
xchg
jg
inc
pop
daa
push
adc
adcl
ja
je
ds
jp
hlt
outsb
shrl
or
cmp
mov
test
fld
mov
cmp
ret
mov
xor
push
aas
in
pop
roll
adc
lods
sbb
iret
adc
pop
test
xchg
js
ljmp
jp
mov
xor
jns
pop
add
fs
push
outsb
int3
dec
dec
mov
xlat
and
into
sbb
sahf
lock
loopw
xor
call
incb
and
rcr
roll
mov
ret
lods
mov
or
repnz
out
aad
rolb
and
bound
das
mov
ret
shr
fwait
pop
inc
mov
mov
nopl
jo
adc
fnstcw
sbb
cmp
and
xchg
je
jecxz
pop
in
mov
xor
fstpt
adc
cmp
xchg
xchg
and
push
push
xchg
ret
add
and
cltd
mov
push
pop
xchg
inc
push
dec
mov
xchg
push
inc
mov
mov
dec
dec
icebp
ret
pop
mov
inc
fiadds
push
mov
mov
imul
dec
faddl
xchg
xor
jbe
mov
dec
sbb
dec
fidivl
and
popa
clc
cld
out
add
mov
inc
xlat
js
cwtl
jecxz
je
sbb
int
ret
hlt
scas
das
inc
into
mov
push
mov
bound
mov
addr16
sbb
cmpsb
inc
incl
sarl
sti
and
or
in
cltd
lds
sahf
fcmovb
insb
sub
push
dec
and
jl
ret
xchg
add
dec
push
push
jbe
and
out
sti
clc
xor
movsl
outsb
mov
in
pushf
ret
ljmp
inc
inc
arpl
push
pop
sub
mov
jns
or
mov
xor
loop
mov
out
inc
ret
adc
aas
jae
rclb
std
in
xlat
sbb
pop
in
std
xchg
add
ljmp
sbb
xor
js
jmp
dec
daa
stos
push
repz
push
rcr
or
loopne
fbld
mov
push
outsl
imul
cmp
cs
sbb
or
lret
test
pop
out
loopne
into
push
rorb
test
leave
jg
push
in
mov
in
mov
adc
push
dec
push
mov
add
add
pop
xor
insb
pop
imul
fbstp
sbb
pop
cmp
clc
jg
xor
cmp
cwtl
iret
lea
xchg
and
sub
aam
push
jbe
lods
icebp
pop
nop
addr16
pop
lcall
push
arpl
mov
js
dec
xor
add
sub
cs
mov
xchg
add
add
sbb
mov
shlb
or
mov
mov
add
fstl
int3
add
or
xchg
rcrl
push
mov
jl
iret
fidivl
adc
mov
out
arpl
xor
xchg
imul
ds
popa
pop
fnstenv
mov
jbe
xacquire
inc
push
cmpsl
out
inc
cmp
and
imul
adc
inc
cmp
cmp
cmp
stc
push
jle
jo
sub
mov
jl
xor
dec
push
lcall
daa
add
je
inc
sahf
sub
pop
mov
push
stos
mov
mov
imull
shrb
sbb
lods
jecxz
and
lea
add
filds
loopne
xchg
mov
add
imul
cld
test
les
out
sbb
orl
xchg
mov
insb
xor
stos
out
pop
das
inc
lret
pop
int3
xor
pop
out
out
inc
jbe
dec
iret
lock
mov
dec
stos
push
add
and
loopne
mov
ret
shll
mov
test
xor
sti
push
and
mov
nop
std
xchg
mov
mov
ja
bound
imul
adc
add
in
fsubr
ljmp
aas
adcb
pop
jp
popa
or
cli
ljmp
or
inc
movsb
mov
adc
arpl
repnz
into
sbb
adc
mov
cwtl
es
dec
clc
cmpsb
cld
push
xor
xor
aam
stc
in
adc
not
dec
mov
cmpsb
data16
mov
jo
shrl
ljmp
or
iret
xor
and
push
mov
xchg
dec
das
add
insl
shlb
inc
pop
push
sbb
aad
lahf
xchg
sbb
cmp
out
adc
cltd
sub
mov
int3
movsl
lcall
push
mov
sbb
jecxz
repnz
int3
add
and
arpl
or
lods
mov
adc
cmpsb
mov
pop
js
in
aaa
ret
stos
jns
aaa
jl
mov
jle
call
xchg
cmpsl
push
rcll
aaa
xchg
cmp
nop
decl
cwtl
cs
dec
cld
jmp
jle
in
dec
sub
in
loop
aas
sub
test
mov
push
shrb
scas
aad
mov
sbb
mov
jae
repnz
dec
sahf
add
dec
test
negl
popa
sub
mov
pop
lea
pop
xchg
mov
cli
mov
jne
mov
push
jecxz
xor
ret
add
pop
pop
cwtl
mov
or
or
push
addl
xchg
pop
cmp
cmc
imulb
es
out
lahf
in
xchg
mov
and
cmp
das
cmp
jl
rol
js
enter
int3
loope
xchg
outsb
aaa
adc
mov
aad
rcr
jl
scas
or
pop
sub
inc
xchg
outsl
xor
push
lock
lret
cmpsl
xchg
inc
lret
xchg
inc
xor
in
xor
mov
push
or
ljmp
cmpsb
repz
mov
imul
jle
dec
mov
pop
cmpsl
ds
pop
mov
pop
jl
jo
mov
push
dec
xchg
repnz
lods
sbb
pop
in
or
gs
repz
shlb
cmpsb
and
repnz
xor
xchg
rcl
xchg
sbbl
pop
ja
mov
pop
mov
sbb
sub
aaa
or
jbe
lret
fldenv
sub
add
arpl
push
cwtl
in
mov
or
push
pop
jmp
testb
inc
jl
sbb
adc
sbb
jae
outsb
mov
insb
push
sysenter
jg
mov
mov
sahf
gs
insb
repz
mov
lcall
cmpsb
or
xlat
xchg
stos
pop
jnp
cmc
mov
and
pop
push
mov
jg
orl
aam
dec
mov
repz
mov
ss
cmp
mov
popf
pop
aaa
jl
jle
or
xchg
mov
xchg
cmp
or
mov
inc
add
out
xchg
movsb
popa
sbb
mov
pop
jp
shlb
outsl
ror
mov
adc
nop
enter
xor
mov
xor
add
stc
xchg
in
xor
fimuls
pop
lds
mov
adc
xor
cmc
js
mov
jle
cmp
lret
lods
dec
mov
cmc
jne
push
rorb
repnz
aas
sub
arpl
in
outsl
pop
je
inc
mov
mov
js
sbb
pop
add
in
jbe
imul
jno
push
sbb
cld
aam
dec
std
popa
mov
jo
movl
aam
dec
push
dec
xchg
popa
inc
adc
or
imul
and
pop
cmp
dec
cmp
popa
insb
rcrl
outsb
cmp
mov
push
fisttpl
fdivl
sub
mov
sahf
jnp
ja
or
inc
mov
std
lret
mov
loopne
ret
mov
sbb
iret
or
mov
sbb
jle
cmpsb
popf
cwtl
mov
into
inc
je
sbb
cmp
cmp
nop
inc
sti
and
mov
mov
fsts
aad
js
loopne
jno
mov
shl
mov
cmpsb
add
xchg
jbe
xor
loop
jne
mov
dec
add
adcb
or
and
jg
mov
and
dec
insb
mov
and
jp
sub
testb
lock
mov
xchg
adc
jno
and
in
into
nop
leave
loope
ret
dec
push
hlt
cmp
pop
mov
fdivl
lods
and
push
loopne
lahf
andb
pop
pop
jae
lock
in
sub
jno
or
aas
add
xchg
shlb
dec
movsl
int3
lock
cmp
data16
add
sti
or
mov
xor
mov
adc
and
bound
loop
loope
shrb
jge
and
jne
push
xchg
in
test
imul
pop
test
push
imul
lea
pop
fidivl
fbld
gs
and
jno
push
lcall
lret
lods
xor
xchg
mov
clc
aaa
dec
je
pop
mov
mov
cmp
ljmp
jo
dec
sub
adc
adc
sti
push
adc
xchg
adc
cmp
sbb
dec
notb
nop
sub
jo
imul
data16
push
push
adc
or
outsl
push
fwait
lea
inc
dec
add
je
pop
cli
dec
xchg
test
lea
pushf
imul
sub
outsb
aad
scas
adc
pop
adc
mov
mov
int
fisubs
fld
outsb
cmp
mov
sbb
mov
add
lahf
mov
add
xor
fistl
push
inc
aaa
lret
hlt
jno
pop
aam
mov
aad
cmpsb
sbb
adcb
sbb
imul
add
das
mov
stos
mov
sbb
xor
inc
daa
or
jns
xchg
mov
out
fisubrl
pcmpgtw
loope
mov
pop
push
dec
shll
mov
test
push
pop
sahf
test
jb
data16
je
xor
cmpsb
decb
cmpsb
aas
or
fimull
mov
mov
jne
cmp
in
imul
and
push
lret
pop
ret
mov
je
pop
push
xor
xor
push
imul
pop
aas
int3
loopne
jmp
mov
enter
mov
jmp
lock
xor
inc
mov
sbb
stc
out
mov
sahf
push
inc
scas
clc
in
mov
jmp
nop
mov
xchg
filds
sbb
mov
xor
cld
fucomi
loop
and
jo
cmp
add
push
or
jae
sub
ja
adc
sbb
sbb
xchg
cmc
cld
pushf
dec
xor
cmc
test
lahf
push
stc
cmpl
mov
push
xorb
mov
out
and
xor
sub
dec
sbb
pusha
std
std
push
rclb
dec
rclb
repnz
jno
sbb
cmc
inc
lock
je
popa
sub
mov
xor
pushf
jbe
push
push
and
dec
or
inc
inc
xor
aam
int3
fiadds
icebp
jecxz
mov
repz
lcall
pop
lahf
stc
arpl
sarl
lods
stc
mov
sti
mov
jmp
jg
loope
cmp
or
mov
and
test
lahf
xchg
pop
mov
pop
xor
rolb
cmp
ror
movsb
int3
inc
pop
outsb
mov
popf
shrb
cltd
sbbl
push
push
xor
cs
inc
fistpl
decb
outsl
sub
jecxz
sti
jne
or
orl
cs
sub
cmc
adc
mul
xchg
in
inc
imul
mov
loopne
sbb
movsl
out
repz
mov
in
cld
out
iret
cld
pop
aas
mov
cli
mov
lea
mov
aad
fldcw
pushf
pop
sub
push
add
jg
jnp
pop
sub
movsb
and
mov
xchg
and
dec
adc
xchg
out
xchg
dec
mov
ss
mov
jp
cmpsb
cmp
pusha
xor
dec
mov
pop
fisttpll
jl
mov
test
sub
icebp
mov
jno
push
lds
push
inc
outsb
mov
add
mov
jno
test
scas
xor
dec
add
imul
andb
cli
imul
jle
negb
lret
mov
lea
add
jno
mov
mov
int
mov
movsb
repnz
ficoml
jne
and
dec
incb
and
mov
lcall
adc
call
cmpsb
push
or
adc
leave
push
setns
and
fsubl
cwtl
cmp
jge
sub
enter
push
jns
adc
xchg
cmc
dec
dec
add
xor
ja
leave
cli
jmp
inc
mov
cmp
add
insl
or
jecxz
addr16
xor
cmpsl
adc
xchg
cmp
jo
mov
push
xchg
sbb
adc
cs
or
xchg
loope
loop
mov
aas
sahf
scas
test
cmpsl
int3
add
xor
inc
xor
fildll
pop
mov
xlat
fcom
lret
lea
cmp
push
out
fistps
je
fwait
jne
jae
jge
push
dec
adc
cmp
fistpl
lahf
sub
jmp
push
push
mov
sbb
mov
mov
jmp
pop
outsb
das
fsubp
push
test
push
jp
sub
out
enter
inc
dec
fcmovnb
insb
pop
mov
add
in
xor
in
sub
sti
jae
and
cmp
xchg
call
xchg
jl
dec
lahf
sahf
bound
mov
int
pushf
sar
push
jge
mov
jge
or
aam
mov
and
sbb
cs
xor
dec
xor
add
dec
cmp
jge
mov
mov
adc
cmpsl
mov
test
cld
xchg
outsb
gs
rolb
mov
jp
movhps
xor
xor
push
pop
cmp
push
push
stos
pusha
in
fmuls
fcoml
push
stc
mov
jo
aam
pusha
adc
into
pop
mov
mov
fidivl
mov
pop
hlt
lods
push
sbb
dec
sti
hlt
dec
jmp
leave
repz
xor
push
mov
inc
enter
cmp
jge
bound
mov
testl
sub
sbb
xchg
clc
mov
jmp
insl
jg
and
pop
and
push
imul
adc
xor
imul
movsb
fcom
dec
lods
dec
enter
push
fs
adc
sbb
push
movsb
sbb
bound
dec
add
add
ljmp
into
jl
sbb
xchg
aaa
push
mov
test
push
pusha
mov
rolb
shlb
aaa
hlt
mov
add
and
ret
mov
dec
lods
sub
xor
mov
mov
cwtl
pop
rorb
or
xchg
repz
cmp
push
dec
mov
jmp
js
ss
pop
pop
sti
sahf
scas
out
imul
mov
subl
arpl
stos
imul
imul
rep
xchg
jne
sub
sub
sahf
jmp
xchg
call
insl
xor
aaa
jge
daa
push
and
mov
cmpsl
dec
adc
mov
dec
mov
in
pop
mov
hlt
xor
mov
sbbb
push
sub
jns
test
inc
add
ds
mov
clc
adc
or
xchg
mov
nop
push
cld
mov
sbb
insb
pusha
inc
loopne
into
cs
das
cmp
sbb
shl
dec
push
sub
iret
leave
jle
mov
rep
jb
insl
push
xchg
xchg
xchg
push
pop
or
rcr
movsl
pop
inc
dec
leave
xor
adc
and
mov
aam
rcrb
adc
sbb
pop
dec
sub
pop
sbb
repz
ds
xchg
sub
mov
adc
xchg
adc
mov
rclb
adc
jg
jbe
mov
push
push
sbb
js
in
lahf
icebp
push
mov
mov
push
popaw
mov
cltd
jp
js,pn
push
push
fs
aam
fistl
push
lods
pop
xchg
mov
lds
push
xchg
roll
cmpsb
dec
shll
push
inc
jl
cmc
inc
lahf
xchg
gs
cmc
test
push
icebp
inc
arpl
push
leave
or
fistps
adc
and
sbb
rol
mov
addr16
xchg
lcall
fistps
pop
std
mov
cwtl
jbe
add
or
stc
cmp
sub
mov
je
call
adc
cmpsb
ret
or
jo
sub
lock
xchg
fdivr
add
jl
nop
les
mov
and
es
cmp
flds
jbe
leave
lret
dec
xor
mov
inc
adc
mov
jne
aas
cmpsl
inc
add
enter
cmp
fstpl
aas
clc
add
idiv
shl
decl
mov
pop
testb
cmpb
subl
test
pushf
das
or
mov
xchg
mov
pop
pop
gs
ss
iret
and
inc
ds
fwait
mov
mov
sbb
data16
or
jmp
xchg
adc
enter
xor
test
fsubrl
outsb
mov
jo
stos
and
inc
std
inc
push
jne
daa
pop
fdivr
in
out
repz
adc
xor
inc
or
push
lea
xchg
or
pop
sub
dec
std
lds
or
js
sub
shlb
cmp
icebp
and
jno
xchg
cmp
or
jp
fsubp
ret
xor
adc
pop
dec
add
pop
outsl
adc
rolb
mov
add
mov
mov
mulb
in
lahf
sbbl
adc
cli
stos
cld
in
adc
jl
jle,pt
lcall
mov
test
in
xchg
pop
inc
sbb
jb
pusha
cmc
addl
sarb
int3
ja
mov
je
sub
test
int3
cmc
xor
xchg
lret
push
cltd
daa
mov
mov
les
push
loop
nop
dec
pop
daa
xor
push
les
adc
popa
cltd
fcomps
add
cmp
add
and
loop
loope
mov
fwait
ds
sbb
in
aam
mov
push
add
cmp
loopne
pop
dec
jp
insl
psrad
xchg
icebp
jge
sbb
ljmp
int
mov
add
dec
lcall
and
mov
rol
das
inc
xchg
xchg
dec
cmpsb
cld
arpl
lods
pop
ss
mov
xchg
jecxz
mov
es
adc
int
lock
ja
cmpsb
add
adc
mov
and
mov
adc
lcall
les
hlt
jmp
jmp
adc
xchg
sti
xchg
dec
cmpsl
xchg
push
add
adc
jge
insl
int
cmpsl
js
sbb
stc
repnz
orl
lock
add
iret
or
sub
test
pop
fucomip
aaa
inc
cltd
stos
xor
cltd
dec
add
scas
ret
mov
cmp
mov
mov
int
or
mov
arpl
ret
cmp
pop
xchg
mov
cwtl
outsb
andl
imul
movsl
xchg
add
adc
cmpsl
andl
jae
jns
loopne
xchg
inc
icebp
or
cmp
cmpsb
in
cmp
scas
pmulhuw
int
inc
push
loopne
add
adc
add
hlt
neg
mov
or
lods
fistl
add
sbb
cmp
mov
cli
rol
cwtl
andb
and
cmp
sub
push
and
dec
lahf
push
sbbl
out
aad
jecxz
je
ficoml
imul
cmp
dec
sub
push
fldl
cmp
adc
mov
mov
in
inc
fbld
inc
sahf
mov
aaa
xchg
je
jmp
repz
js
das
jmp
sti
sarl
dec
in
add
pop
add
sub
jle
icebp
push
inc
data16
cmp
mov
lcall
or
adc
jecxz
pop
mov
sbb
mov
xchg
xchg
pop
dec
push
dec
add
sbb
rorb
or
xchg
aas
mov
and
sbb
mov
testb
cltd
add
dec
adc
es
pushf
cmp
mov
xchg
cmp
sub
jle
cltd
insl
cld
and
push
outsb
jg
push
pop
xchg
sbbb
into
push
inc
cmpsl
stc
stos
lds
xchg
aaa
imul
idivl
xor
pop
fldt
lock
add
std
nop
scas
scas
or
jmp
repnz
jmp
in
jno
test
push
or
cmp
loopne
or
or
dec
mov
mov
mov
call
nop
mov
xor
addr16
test
xor
dec
xchg
jmp
test
jmp
and
scas
jbe
ret
aaa
xchg
or
lods
lods
out
mov
mov
push
aaa
imul
push
mov
jbe
push
adc
push
cli
and
lds
sub
cltd
or
push
and
lock
outsb
js
push
cwtl
pop
out
popf
xchg
cmp
mov
pop
ret
dec
imull
rol
jmp
sbb
mov
mov
icebp
mov
decb
xchg
sub
das
jg
mov
lret
fdivrs
mov
adc
mov
out
push
jle
stos
ret
insb
repz
dec
pushf
add
dec
into
imul
jle
sub
leave
add
and
fistpll
adc
enter
lret
stos
and
xchg
lahf
fdiv
in
mov
mov
fwait
sar
mov
push
repz
jl
inc
daa
fildl
adc
nop
mov
int
movsl
js
clc
xchg
lea
cmc
cli
clc
add
add
xchg
jb
ja
ja
sub
psubsb
fwait
cmp
aad
shll
enter
add
out
jb
fistpll
or
outsl
scas
insb
xchg
sahf
xchg
sbbb
fsts
rcl
jle
fisubl
jb
mov
cmp
pusha
mov
inc
mov
mov
fs
xor
loope
and
lahf
lahf
scas
cmpsl
and
cmp
inc
sub
test
mov
aam
pop
adc
das
adc
and
lods
xchg
mov
gs
cld
adc
aad
pop
fsubs
mov
outsl
mov
sarb
jae
mov
or
cs
or
push
add
mov
clc
sbb
rclb
inc
and
jle
jbe
jns
xor
sahf
and
outsl
in
mov
push
or
or
and
pop
dec
pop
stos
lds
xchg
es
xor
push
adc
sbb
xor
in
push
rcrl
dec
xchg
es
repz
mov
movsb
pop
sti
les
std
push
cmc
icebp
loop
ficoms
fimuls
xor
or
mov
fs
mov
and
add
dec
pop
and
outsb
push
insb
push
xor
mov
or
dec
push
sub
movsb
cmp
and
pop
jle
sarl
xor
out
lahf
arpl
mov
mulb
jo
pop
sub
xor
dec
push
dec
mov
enter
sub
ss
insl
xchg
mov
pop
fstps
xor
jne
test
push
mov
and
mov
les
scas
xchg
sbb
pusha
scas
pop
stc
iret
push
aad
mov
mov
cmp
lret
ljmp
sbb
jecxz
dec
iret
mov
mov
cmp
or
fstl
sarb
xchg
jmp
out
test
imul
push
adc
inc
out
cld
jb
and
push
adc
imul
or
cmc
dec
loop
std
aam
xchg
scas
pop
aas
mov
ret
xchg
jecxz
ljmp
rcrb
adc
mov
test
ljmp
xchg
aam
ret
adc
add
push
and
cli
sub
int
xor
cld
negb
lods
stos
jl
pusha
jg
ret
xchg
pop
call
xchg
idivl
fbstp
hlt
push
add
sahf
mov
ret
or
pop
popa
repz
outsb
push
xor
pop
or
mov
jle
test
std
scas
or
adc
cmpsl
jns
imul
mov
mov
mov
inc
cmp
aam
addr16
inc
add
xchg
jmp
ljmp
dec
dec
xchg
mov
xchg
add
adc
mov
mov
addb
test
jno
sti
in
jae
inc
nop
jnp
mov
jnp
mov
or
aas
jae
insb
inc
mov
outsb
fisttpl
in
icebp
mov
push
dec
xchg
xchg
dec
rcll
pop
dec
lcall
pushf
int3
cmp
xorb
rolb
fs
lret
fimull
jb
mov
in
scas
aam
jmp
inc
arpl
ficompl
mov
xchg
in
or
movsb
jb
mov
and
mov
insb
mov
pop
sub
jnp
mov
adc
ja
into
out
test
mov
fdivs
mov
xchg
dec
icebp
ljmp
out
push
mov
rcrl
movsl
psubw
cmp
mov
add
mov
mov
in
out
jo
mov
mov
add
inc
rorb
jmp
pop
and
cmp
movsl
jno
cmp
xchg
adc
jno
push
ret
xor
cmp
nop
int3
scas
jo
jo
decl
idivb
push
dec
jns
and
jg
mov
push
push
adc
mov
push
or
loope
gs
repz
iret
jecxz
mov
std
stos
pop
fs
mov
test
cwtl
mov
sbb
mov
jo
insl
mov
shlb
xchg
negl
xchg
les
mov
push
jg
sbb
pop
les
lods
inc
popf
jge
stos
add
repnz
dec
xchg
pusha
imul
lahf
sbb
fidivl
inc
dec
jnp
sti
xor
outsl
fwait
push
mov
lret
shlb
js
jle
test
xor
jb
fs
dec
adcb
add
mull
loope
mov
frstor
jb
lret
xchg
adc
xchg
push
xchg
inc
dec
out
push
xchg
mov
ljmp
dec
bound
mov
jge
repnz
push
dec
inc
rorl
jl
jbe
mov
pop
cmpsb
and
in
ja
cmp
out
mov
ss
ret
push
mov
push
mov
stos
jo
scas
aas
pop
push
lahf
xchg
mov
clc
mov
sub
xor
stos
jp
movl
mov
push
call
push
mov
leave
int3
into
andl
int3
xchg
xchg
sub
adc
adc
xchg
mull
fs
inc
ljmp
pop
xlat
cmp
sub
and
ljmp
dec
jle
lock
add
jb
scas
popf
loope
inc
xlat
lds
fcmovnbe
nop
xchg
xlat
imul
jge
inc
call
dec
mov
cmp
pop
or
push
pusha
lods
outsl
jg
loop
dec
or
push
mov
fdivr
cmp
sub
sbb
aas
loop
mov
mov
jp
sub
out
cwtl
or
jmp
aas
xchg
sbb
push
mov
push
inc
mov
inc
cmp
jb
add
lds
dec
mov
fs
inc
or
sbb
fstpl
or
pushf
inc
pop
in
stos
lret
dec
adc
sbb
cltd
and
addl
sbb
loopne
pop
push
jne
scas
or
cmp
jl
clc
pop
imul
popa
mov
jbe
mov
jns
sti
fs
jp
and
jp
jns
push
fists
or
test
ret
xor
push
pop
mov
mov
adc
clc
in
addr16
aas
or
ret
jp
mov
std
adc
jne
jle
fiaddl
clc
inc
adc
mov
repnz
jecxz
mov
mov
cwtl
es
xlat
fcmovu
and
push
call
rclb
and
mov
ja
mov
addr16
cld
push
aad
push
inc
js
cld
daa
lods
decb
xor
cmp
arpl
ja
mov
push
iret
out
fs
aad
loopne
add
cmp
dec
sub
mov
mov
adc
jge
add
out
dec
rol
push
nop
repz
sbb
fdivl
cmp
and
jnp
test
repz
pop
cmpsb
xor
insb
push
std
mov
inc
inc
pushf
hlt
cmp
loop
adcb
dec
push
xor
lea
ret
and
std
shlb
xchg
sbb
mov
cwtl
aaa
dec
dec
inc
xchg
stos
bnd
xchg
std
mov
lea
inc
xchg
mov
test
js
stc
ljmp
mov
jns
das
int3
rcrl
icebp
out
out
xchg
in
sbb
in
add
pop
cmpsb
sbb
pop
out
pop
inc
aaa
xchg
add
xor
mov
pop
dec
mov
sti
setl
insl
mov
xor
rcll
cld
xchg
movsl
mov
in
dec
lods
inc
inc
stos
shrb
push
scas
and
cmp
push
lock
xor
mov
cmp
mov
sar
cmp
pop
std
push
jns
xlat
sbb
ret
xor
test
xchg
cwtl
outsl
test
mov
sbb
inc
cmp
cld
pop
shll
sbb
mov
sarb
push
les
shl
sbb
and
divl
inc
gs
lret
push
jo
pop
imul
testl
fstpt
cmp
jecxz
iret
jp
mov
movsl
xor
sbb
sub
fwait
jmp
mov
je
add
das
ds
push
pop
iret
or
mov
roll
jb
or
and
xchg
pop
jp
fsub
lods
fiaddl
or
movsb
gs
jge
lock
or
mov
enter
repz
cmpsl
fmul
jge
dec
pop
gs
xor
movsb
mov
mov
aad
lret
out
mov
das
ja
xorb
cmpsb
cmp
aam
pop
mov
mov
int3
and
push
jecxz
leave
imul
jl
fbstp
sbb
test
popa
and
push
cmc
pop
movsb
dec
jnp
xchg
out
mov
xor
js
pop
ret
test
dec
push
fdivr
sub
addr16
pop
orl
stc
scas
push
adc
mov
stos
and
je
pop
pushf
dec
fwait
mov
push
test
mov
setp
cli
fdivs
push
orl
add
stos
xchg
dec
fistps
jbe
pop
ds
add
in
mov
jnp
in
adc
test
mov
push
clc
push
pop
fidivs
or
packssdw
xchg
inc
fwait
sub
add
or
loop
bnd
and
clc
mov
in
in
jl
jns
mov
pop
scas
add
push
cwtl
lock
jne
out
aas
cltd
outsb
lds
int
push
sub
out
adc
repz
stos
mov
or
and
jno
out
in
pop
dec
js
data16
stc
js
or
bound
mov
test
rclb
push
stc
inc
adc
lds
fcomp
mov
cs
push
cwtl
inc
xor
add
push
ljmp
in
xchg
xchg
xchg
ja
test
xor
lret
dec
imul
int
adc
and
ret
out
xor
adc
sahf
ret
xchg
out
or
jp
popf
and
insl
cmp
cmpsb
push
aaa
xchg
mov
jns
imull
in
mov
idivb
sub
out
inc
sub
inc
xchg
dec
lcall
mov
decl
pop
pop
loopne
push
loop
imul
mov
add
subb
popa
sar
xchg
pop
sbbb
shr
andl
adc
adc
sub
push
hlt
cmp
adc
pop
stos
jp
mov
mov
xor
add
orl
mov
adc
and
inc
cmp
mov
sbb
xor
cld
daa
add
sbb
dec
adc
aad
push
movsb
aaa
xchg
lcall
negb
ds
mov
lock
stc
adc
jmp
cmpsb
clc
mov
or
mov
loop
mov
scas
pop
adc
ret
jns
dec
and
cmp
jecxz
arpl
pop
sub
xchg
test
imul
arpl
mov
sbb
int
lds
pushf
lea
loopne
ds
mov
inc
pop
mov
repz
test
mov
pop
mov
jns
ljmp
mov
dec
insl
xchg
out
mov
orb
fsubl
cwtl
mov
mov
in
push
fnstsw
aas
cmp
aam
scas
add
or
mov
addb
addl
lds
lock
mov
gs
cmp
subb
mov
testb
xchg
pop
pop
sub
sti
xor
lcall
je
stc
xchg
stos
adc
pop
xchg
mov
add
lock
and
mov
aad
pop
dec
movb
jbe
inc
out
shrl
gs
ja
loope
iret
and
xor
lret
xorl
fisttps
jge
mov
pop
adc
fsubs
lcall
push
xor
aaa
scas
daa
lcall
jb
mov
and
inc
pushf
sti
daa
ss
lcall
icebp
sbb
mov
aas
cs
push
jge
outsl
shll
dec
outsl
lods
insb
jbe
mov
add
jge
gs
fs
dec
xchg
loop
inc
pop
cs
push
push
pushf
jp
xchg
pushf
add
cli
add
xchg
pop
dec
lret
je
pop
pop
cli
inc
mov
inc
ss
dec
push
daa
mov
lret
divps
xchg
aad
mov
popa
mov
es
push
loope
ficoms
mov
addr16
cwtl
popa
and
cli
mov
adc
in
push
xchg
or
ljmp
stc
shll
cmp
stos
xchg
stos
mov
ja
jae
sbb
add
sbb
and
mov
cmp
push
fdivrp
js
jle
jb
mov
inc
imul
mov
xor
insb
lods
in
cs
fistl
pop
cmc
sub
mov
dec
xor
daa
sbb
sub
rolb
std
rcll
cli
fstl
pushf
shll
cmpsl
mov
int3
mov
pop
pop
mov
push
push
clc
fildll
and
sbb
test
inc
jmp
gs
mov
lret
loopne
add
das
mov
and
insl
negl
test
pushf
fsubs
dec
inc
and
icebp
addr16
mov
pop
or
inc
cmp
mov
or
mov
mov
cmp
std
cmc
xchg
jbe
cmp
hlt
test
jne
in
mov
sbb
and
push
stos
adc
sub
jb
push
cmpb
pop
dec
cmc
repnz
je
pop
je
aaa
sbb
lds
push
sti
pop
sub
jge
std
mov
jnp
pop
or
in
test
jecxz
xchg
and
outsl
adc
jno
mov
push
and
jno
jmp
lock
cmp
xor
or
in
mov
mov
shl
pop
test
mov
rclb
adc
and
add
and
insb
dec
and
sub
lret
cltd
cmpsb
and
xor
mov
pop
cmp
ljmp
sbb
mov
xor
subl
pop
test
sub
je
test
or
lock
add
push
sbb
and
insl
adc
xchg
stc
jecxz
mov
les
ror
or
rorl
cmpsb
sub
inc
sbb
out
rcl
lret
addb
fcom
fcomps
mov
jns
adc
sub
push
pop
jp
sub
out
mov
cmp
test
cld
mov
insl
aas
jno
daa
cld
jg
dec
dec
sub
or
fsub
add
and
jecxz
aas
and
sub
mov
mov
mov
scas
mov
es
pop
jne
shll
lds
ret
dec
mov
cmp
sub
test
cmp
stos
cltd
call
cmpsl
aas
or
dec
dec
push
xor
popf
and
mov
cmp
in
int3
mov
lds
cmc
cli
das
xchg
xor
lock
daa
sub
ljmp
pushl
pop
test
testb
out
adcl
xchg
ret
mov
cli
repz
xchg
xor
cmc
stc
inc
rclb
inc
testl
lret
pop
push
pop
fldt
pop
jbe
stos
fs
push
cmpsl
pushf
xor
enter
flds
and
imul
lock
dec
aas
shl
pop
mov
adc
lods
je
ljmp
cmc
inc
jp
pushf
push
add
repnz
xor
pop
xor
and
cmp
sbb
lret
mov
sahf
lods
mov
fidivrs
and
call
xchg
mov
std
int
mov
lret
xchg
icebp
out
dec
adc
and
stc
gs
shrl
pop
pop
jo
imul
lret
cmc
jne
dec
int
in
orl
mov
adc
pusha
sub
inc
lcall
sbb
jnp
ss
test
mov
pop
pushf
fprem1
jnp
in
sub
movsl
test
enter
cmpsl
jo
aam
or
fs
insb
out
testb
test
and
push
inc
daa
call
ret
push
jl
dec
xchg
fldenv
cvtps2pi
xchg
push
mov
and
cmpsl
sub
insb
jno
or
loope
ja
adc
inc
in
addr16
rcr
xchg
mov
xor
enter
jecxz
in
and
push
movsl
sub
fdivr
in
clc
mov
loope
dec
dec
mov
shl
out
mov
je
test
ja
in
mov
pop
sbb
add
dec
incb
icebp
mov
jb
xchg
add
dec
mov
xchg
les
xchg
mov
pop
ljmp
les
add
fimull
dec
es
or
les
popf
mov
shll
jp
out
xchg
push
mov
call
mov
shr
jb
ljmp
jno
sbb
pop
xor
cmp
sbb
mov
xchg
mov
or
iret
inc
push
jns
pop
inc
sub
shll
adc
sub
int3
mov
inc
mov
dec
and
pusha
add
xor
xchg
xor
loope
out
aaa
jp
sub
xlat
xor
mov
imul
pop
xchg
push
fcomi
push
push
incl
mov
jno
clc
xor
xor
clc
or
in
aaa
sub
cmp
xchg
popa
push
into
or
inc
mov
decb
scas
jp
mov
sub
dec
xchg
dec
je
insl
dec
jp
xchg
leave
xchg
push
addb
aad
sbb
xor
inc
lret
pop
dec
push
test
adc
mov
jg
mov
loope
test
or
mov
mov
xlat
nop
pusha
in
and
notb
mov
mov
push
pop
dec
imul
jns
add
out
in
popa
xchg
popf
inc
add
inc
xor
call
cld
push
xchg
push
cs
jae
mov
dec
sarb
out
lods
and
adc
sbb
loope
sahf
rcrb
jne
add
gs
and
lock
popf
xchg
pop
and
sarb
ds
imul
or
lahf
lock
jg
dec
xor
popa
push
adc
jl
in
or
adc
sbb
sub
lea
cmp
sbb
das
mov
xchg
cmp
pop
mov
ret
out
pop
shll
rolb
mov
mov
ret
xor
rep
insl
arpl
stos
xchg
andb
jae
inc
inc
mov
dec
sub
mov
cmc
loope
add
jae
jns
call
mov
xchg
sbb
mov
dec
or
sub
loopne
dec
push
dec
shl
jno
andb
cmp
sbb
ja
ds
mov
push
fists
push
pop
lock
inc
rorb
sub
out
and
xor
sub
push
adc
mov
dec
add
inc
gs
pop
int3
jecxz
sbb
sahf
cmp
or
pop
cmp
push
lea
lea
and
adc
pop
jl
imul
mov
mov
mov
push
mov
loopne
push
test
insb
push
in
cmpsl
insb
and
loopne
sbb
arpl
xor
and
inc
push
pop
or
push
add
cmp
cmpsb
idivl
pop
filds
movb
shr
lcall
fsubrl
out
xchg
mov
mov
add
fldt
dec
cwtl
cmp
scas
sbb
sbb
or
mull
pop
add
sarb
in
cmpsl
cmp
sub
mov
aad
roll
cli
hlt
sbb
adc
sbb
das
movsl
hlt
sub
sub
sub
jbe
push
xor
mov
shll
and
bound
les
mov
jecxz
jne
lods
notl
rorb
outsb
inc
movsb
fdivr
or
fstpt
rcrl
push
fildll
lea
add
ret
cmc
xlat
fdiv
push
jne
jbe
sub
lret
loopne
add
out
test
sub
in
jecxz
movb
lea
xor
pop
and
stc
mov
pop
int
mov
add
rclb
inc
mov
shll
pop
adc
inc
out
in
sti
xchg
fdiv
sub
sub
jns
pop
iret
cmp
jo
or
scas
movsb
out
mov
stc
sahf
sub
push
mov
mov
mov
sbb
fstl
mov
addl
mov
in
imul
dec
fsts
rclb
jecxz
addr16
push
rorl
cmpsb
mov
xor
dec
stos
pop
popl
mov
add
sub
rcrl
es
xor
push
fildl
fwait
in
cltd
cmp
repz
jle
adc
and
test
iret
subb
dec
adc
mov
mov
mov
sub
shr
dec
mov
dec
loop
inc
cmpsb
xor
add
hlt
mov
js
out
les
pop
ljmp
ror
sbbl
lret
jbe
test
nop
std
inc
and
pop
pop
add
fldl
int
or
fidivrs
enter
into
pop
popf
jg
lds
xor
jae
push
mov
xor
push
mov
pop
outsb
inc
lds
pop
sub
cmpsl
mov
inc
mov
insl
pop
rorb
inc
pop
data16
ljmp
adc
cmp
adc
cli
xor
stos
cmp
and
or
inc
out
or
mov
dec
lods
cs
test
ss
loop
add
cmp
inc
mov
pandn
adc
stos
cmp
das
outsb
cmp
inc
sbb
movsl
stos
fcom
jbe
adc
or
pop
daa
push
inc
rcl
lea
mov
mov
push
outsl
adc
out
dec
jmp
cmp
mov
fildll
push
cwtl
dec
or
stos
andb
add
int
or
pop
mov
shrb
mov
xchg
pop
cmp
pop
aad
das
xor
sbb
shlb
push
ljmp
mov
xor
inc
push
scas
test
cmpb
and
testl
loopne
gs
xchg
int
stos
mov
scas
scas
shlb
lahf
int
inc
ficoml
add
lea
hlt
add
dec
mov
iret
addr16
xchg
hlt
cmpb
sbb
cwtl
fstpl
in
outsl
sti
cmp
xchg
xchg
jo
lock
or
lcall
aaa
dec
adc
pop
pop
lods
mov
adc
dec
or
adc
push
insl
ss
pop
and
rcrb
xor
pop
xchg
out
or
mov
push
xor
xchg
mov
sub
pushf
cmpsb
inc
xchg
dec
ja
pop
push
mov
xchg
sbb
xor
test
jae
xor
mov
idiv
inc
lds
icebp
ds
sub
loopne
ficoml
sbb
jge
mov
push
cmp
xor
pop
jle
mov
insb
mov
add
or
pop
insb
mov
mov
push
cmpsb
ficomps
cmp
fldl
jnp
xchg
fstl
pop
ret
inc
dec
jp
sub
lods
pop
and
out
cmovl
lea
mov
mov
andl
dec
xchg
pop
mov
mov
pop
inc
add
mov
gs
cmpsl
testl
add
sbb
jecxz
cli
push
pop
fdivrs
pop
std
roll
jo
jns
dec
mov
sbb
insb
stos
test
adc
imul
pop
push
sbb
rcrl
sbbb
or
jo
addb
mov
lods
inc
jmp
frstor
xchg
clc
jg
imul
push
inc
repz
popf
mull
and
in
push
sbb
push
jnp
in
fcoms
je
movsb
pop
ret
fbld
int
ret
xchg
in
mov
faddp
xchg
cmc
and
mov
sub
xorb
frstor
mov
add
out
shrb
jmp
rcrb
sbb
sub
shlb
pop
mov
aaa
xchg
xchg
sbb
lods
mov
das
iret
inc
shll
inc
mov
and
push
mov
insl
push
inc
insb
jecxz
xor
addr16
mov
adc
xor
cli
adc
cld
fcomps
out
xor
jne
adc
jle
mov
push
int
push
ret
rclb
sbb
cmp
inc
mov
je
sub
mov
lret
mov
adc
stos
inc
xchg
add
test
pusha
fnstenv
shlb
mov
add
and
int
call
lea
repnz
cmp
xchg
mov
icebp
and
and
roll
sbb
lahf
jecxz
movsl
pop
xchg
cmp
mov
jecxz
frstor
sbbl
fndisi(8087
aam
xlat
dec
imul
dec
sbb
cmpl
xchg
mov
push
cld
push
mov
jnp
inc
adcl
out
push
sbb
cltd
mov
stos
pop
cwtl
outsb
inc
jnp
mov
fistpll
arpl
outsl
adc
nop
out
stc
cmpsb
jbe
iret
mov
dec
add
adc
addr16
pop
pop
mov
and
sar
inc
enter
sub
adc
add
sub
cmp
cs
stos
in
popa
pop
xor
addr16
inc
jo
lea
mov
iret
cmc
int3
faddl
add
aam
movsl
movsl
stos
mov
int
add
popa
add
lret
adc
shrb
sub
pop
sub
out
outsb
dec
and
push
lret
and
stc
mov
pop
jl
and
ret
inc
cmp
test
dec
in
insb
and
popf
jo
pop
sub
cmp
std
decb
xchg
sub
out
fs
popa
scas
cmp
stos
lahf
stc
dec
add
test
jmp
inc
jno
test
xor
sbb
sub
leave
mov
xor
loopne
sbb
mov
mov
out
push
xor
mov
mov
out
or
fisubl
xor
arpl
mov
dec
scas
sahf
pushf
sub
ja
mov
test
sub
sbb
mov
arpl
pop
scas
inc
push
ret
mov
js
push
lock
sbb
and
add
clc
jle
hlt
sub
popf
cmp
or
mov
push
dec
jb
outsb
into
leave
dec
movsl
stos
repz
fimull
repz
gs
xor
jno
ret
aaa
push
out
pusha
movsl
sbb
addr16
or
cmp
xchg
in
or
aaa
mov
outsl
xor
dec
test
pusha
dec
cmp
jnp
ds
and
fs
jg
xor
lds
fwait
xchg
imul
notl
sub
pushf
fcmovbe
push
mov
out
dec
bound
nop
test
iret
fmulp
mov
pop
mov
xchg
std
mov
aad
adc
sti
xchg
mov
push
fists
jge
ret
push
add
js
push
ja
fsqrt
cmp
nop
xor
cmp
into
roll
jl
bound
out
jmp
mov
sub
mov
pop
jecxz
sbb
push
jge
test
jns
pop
mov
popf
test
fists
xchg
xchg
mov
int
ss
shl
or
sti
inc
xlat
jle
in
dec
sbb
daa
push
or
test
or
inc
or
mov
stc
or
nop
mov
shl
call
and
adc
popf
sahf
pop
xchg
popf
push
aam
cmc
outsb
push
fs
sar
xchg
js
lea
mov
test
call
mov
or
pushf
fs
xor
dec
dec
sar
dec
or
repz
cs
inc
sbb
nop
ret
inc
dec
dec
divl
lock
cmp
cmpsl
xchg
adc
mov
loop
pop
xchg
cli
mov
cmpsl
push
ja
pop
xchg
stos
cmp
call
mov
sub
jmp
test
mov
jle
sti
jecxz,pt
sti
adc
testb
mov
ljmp
iret
and
lds
or
adc
lock
mov
je
mov
shlb
pop
cmp
xchg
mov
lret
mov
arpl
lods
shrl
xchg
dec
popf
push
dec
add
outsl
int
roll
in
dec
xor
sub
ret
mov
add
mov
test
roll
sahf
loop
mov
xchg
js
iret
cmp
gs
mov
add
inc
lcall
mov
jp
cmp
cmp
inc
sarl
cltd
cwtl
jg
shlb
mov
inc
dec
mov
pop
std
sbb
in
jmp
xor
cmpl
movsl
or
cmp
and
jns
lds
mov
jo
stos
negl
inc
pop
lods
loope
das
stos
inc
call
sahf
or
mov
sub
adc
ds
jecxz
leave
lds
mov
mov
dec
push
bnd
aaa
dec
rolb
pushf
jns
sub
pop
ss
mov
das
rcl
out
insl
add
movsb
gs
push
jecxz
jl,pn
push
jge
mov
paddusb
or
push
testl
sub
adc
cs
clc
ja
repz
clc
nop
pop
movsl
sarb
fbld
add
xchg
rolb
lods
push
cmp
mov
dec
mov
jmp
cs
jecxz
push
lea
push
pop
aaa
fcomp
adc
lods
in
lock
arpl
ss
push
outsb
leave
xchg
mov
int
xchg
xchg
pop
cwtl
lahf
outsl
scas
fcmovb
sbb
int
loop
sbb
and
fstpt
das
enter
xchg
lret
cmpsb
cs
jne
xchg
and
aas
dec
sub
mov
addb
pop
pop
fdivl
ret
or
fadds
cmp
cwtl
inc
mov
ret
insb
jl
jg
adc
test
ds
sbb
in
or
negb
xor
mov
test
mov
scas
jns
testb
dec
inc
and
cmp
dec
in
in
lret
scas
test
adc
outsl
add
pop
xchg
mov
into
pcmpeqb
sbb
mov
sub
and
jl
pop
clc
movsb
xor
sbb
cmp
ss
daa
shrl
ss
jge,pn
xchg
and
fldt
and
enter
sub
add
mov
jg
sbb
xor
iret
sbb
mov
push
and
pop
filds
push
sub
je
stos
in
ljmp
xor
or
sbbb
jle
sahf
xchg
jne
jge,pn
mov
ret
cld
mov
jne
ja
mov
dec
xchg
sub
leave
sub
add
jnp
mov
pandn
xor
test
lods
decb
mov
push
and
jmp
jecxz
in
dec
or
adc
dec
pusha
sbb
fs
sub
or
rcll
mov
mov
pushf
ret
or
inc
add
mov
xorl
int
mov
jecxz
fsubr
ljmp
arpl
es
push
fldt
inc
xchg
sbb
mov
push
mov
fldl
or
pop
ljmp
and
movsl
addr16
pop
pushf
pop
jmp
sbb
fcmovu
pop
push
mov
pop
jge
outsl
cmp
xor
pop
mov
mov
shrb
cmp
inc
sarl
add
out
dec
movsb
inc
imul
jo
push
test
orl
add
inc
sahf
push
mov
scas
push
scas
out
push
or
mov
hlt
sbb
mov
lcall
inc
jne
div
pop
mov
in
mov
fstpt
inc
mov
mov
fildll
clc
dec
xchg
fwait
divl
popa
out
rcrl
dec
sbb
sbb
xchg
imul
or
mov
xor
sbb
in
inc
jae
out
adc
jp
shll
and
lock
inc
faddp
push
jp
add
cmp
or
jg
xchg
lahf
rcrl
nop
cmpsl
jne
inc
cmp
sub
or
xchg
out
mov
test
test
sahf
cmp
js
cld
lret
jge
fcompl
xchg
frstor
ss
sub
mov
test
ss
pop
xor
and
pop
push
jg
icebp
adc
pop
jns
mov
loop
push
and
jo
stc
pop
inc
push
or
rcll
pop
jns
insb
movsb
in
mov
sbb
scas
cvtdq2ps
lcall
jo
jge
sti
subb
int
jae
push
mov
iret
fmuls
daa
xchg
icebp
pop
sbb
mov
fistl
or
and
xchg
xchg
cmpsl
dec
lock
pop
ss
xor
pop
xchg
push
sbb
call
int3
jg
ja
test
jb
ret
jmp
cmp
inc
adc
movsb
loop
mov
xor
cmpb
sbb
pusha
fwait
test
jne
insb
mov
xchg
inc
mov
inc
and
jns
les
outsb
dec
sbbl
adc
punpcklwd
add
subl
fiaddl
arpl
andl
xchg
aaa
jg
mov
sub
cwtl
data16
out
aaa
imul
ss
jbe
int3
pop
xor
int
int
mov
jge
fcoml
shlb
inc
mov
out
lea
cmp
pop
iret
nop
and
mov
dec
and
iret
out
dec
ss
cs
loope
jnp
sbb
pop
add
fs
in
or
pop
mov
xchg
and
ds
adc
push
pop
cmp
repnz
cld
ret
jns
fdivrl
xchg
push
aam
ja
jl
out
lods
aaa
pop
cmp
dec
jb
inc
mov
sub
dec
jb
pop
push
inc
cmp
imul
sbbl
arpl
push
add
and
inc
push
stos
pop
fwait
mov
pusha
es
in
and
xor
test
xchg
mov
mov
jbe
lea
sbbb
pop
mov
inc
idivb
dec
sbbb
in
movsl
xor
jo
pop
add
dec
push
and
cwtl
jg
jg
xchg
cmp
pop
mov
cmp
fsts
popaw
and
pop
and
jno
mov
sub
loopne
jno
das
testl
dec
insb
sub
shl
js
dec
pop
sbb
or
ficoms
sbb
jg
lret
lret
bound
adc
cli
push
xchg
mov
dec
fucompp
mov
stos
jmp
pop
pushl
in
push
in
push
outsb
push
xor
mov
pop
dec
dec
mov
mov
sahf
lods
push
and
out
or
js
inc
xchg
mov
adc
ja
lret
jp
fsubp
call
xor
pop
mov
fcompl
shr
sub
stos
sti
lods
mov
adc
je
imul
insb
je
jg
imul
and
add
xchg
js
lahf
movsl
sbb
fistpll
adc
dec
aaa
dec
xchg
pop
cld
enter
dec
ss
jg
push
adc
push
xor
inc
cwtl
loop
movsb
cmp
sub
lds
cmp
aam
aad
pop
adc
stos
lret
mov
mov
mov
mov
fnop
lds
mov
pop
aad
js
mov
popf
out
add
loop
or
enter
mov
ret
je
int
and
push
inc
push
out
pop
das
dec
movsl
aas
mov
fs
or
insb
xor
xchg
or
and
adc
or
mov
push
rolb
lock
dec
aaa
mov
adc
loopne
mov
clc
push
fldenv
adc
out
sbb
mov
ret
jbe
mov
shrl
ljmp
dec
mov
push
xchg
ds
xchg
or
inc
push
inc
xchg
or
and
cmp
rcrl
stos
push
mov
outsl
icebp
mov
mov
xor
sahf
ljmp
ds
sub
jns
test
lds
enter
movsb
add
jno
add
cmc
xchg
fstl
outsl
pop
mov
inc
jne
add
scas
stos
mov
adc
xlat
jbe
inc
push
leave
xchg
shr
dec
outsl
rcr
sbb
hlt
sub
mov
xchg
push
jle
adc
imul
popf
aaa
mov
arpl
insl
inc
pop
mov
jns
adc
jp
imul
mov
inc
jne
cmpsl
jmp
mov
insl
fcoms
push
in
pop
jb
fnstsw
push
dec
jl
dec
mov
cmp
mov
out
lods
cld
xlat
js
clc
adc
xchg
cli
decl
push
push
call
jbe
sub
lret
ficoms
stc
jbe
mov
in
outsb
adc
lds
sub
mov
leave
or
sub
inc
push
idivb
in
or
mov
fucomp
rorb
push
adc
and
sub
test
andl
cmp
xor
jecxz
lds
adc
and
fimull
and
adc
and
pop
or
jnp
addl
ret
es
lods
lcall
loope
int3
mov
movsb
shll
fwait
xchg
dec
daa
fidivs
sarb
dec
jns
addl
xchg
call
inc
sub
movsl
dec
dec
xor
push
pop
arpl
sub
test
sbb
mov
test
jb
sbb
fldt
add
sub
pop
lods
adc
push
insl
jmp
dec
call
adc
adc
cmpsb
dec
fcomi
push
sbb
jg
lea
data16
add
mov
mov
aam
pop
sbb
hlt
cltd
pushf
xor
sub
mov
sub
pop
pop
iret
adc
sub
jmp
mov
andb
mov
push
into
fisubs
sub
fisttps
add
into
es
push
jg
mov
mov
mov
sarl
idivl
lahf
or
xor
lret
jle
and
pop
jns
inc
mov
scas
out
repz
dec
xchg
dec
cmp
sarl
fcom
sub
out
sbb
cmpsb
fcomps
fs
fmull
adc
fs
or
clc
or
dec
loope
mov
cmp
mull
dec
push
cmp
push
sub
cmc
mov
xchg
push
add
jnp
fcompl
and
mov
jge
and
mov
fldz
push
cmp
xchg
push
lods
fcmovnb
inc
pop
xchg
nop
das
mov
jne
add
mov
imull
push
jno
mov
mov
repz
stos
xor
and
cmpsb
cwtl
lea
stos
das
pop
js
and
and
or
push
pop
rcr
xchg
lods
xchg
pop
and
mov
imul
sub
sbb
ret
jle
lods
cli
shlb
push
xchg
add
cmpsb
into
shll
mov
mov
pusha
out
xor
imul
jecxz
out
or
jge
es
lock
push
shrl
ds
xchg
js
sub
pusha
loopne
jl
out
sub
mov
jno
push
pushf
dec
aam
out
loop
test
in
jp
sar
stos
sti
insb
inc
adc
lods
or
mov
jo
lret
aaa
xchg
adc
and
or
data16
fsts
xchg
sub
sti
out
mov
jnp
fsubl
popa
inc
push
js
sbbb
repz
pop
fnsave
mov
icebp
add
mov
movsb
inc
and
inc
inc
test
add
inc
add
push
sahf
inc
idivl
arpl
cltd
adcb
mov
les
ret
xor
out
loop
xchg
clc
xor
mov
sub
js
pop
xor
gs
daa
add
out
subb
pushf
in
push
cltd
sub
xchg
scas
and
rcr
mov
ficoml
fwait
lahf
inc
inc
xchg
jge
out
repz
push
movsl
add
shll
fbld
push
pop
mov
sub
ret
ss
lahf
add
jae
pop
sub
movsl
mov
mov
inc
push
sub
iret
push
xchg
push
inc
loopne
ror
insb
gs
jbe
pusha
jecxz
testb
testl
jp
mull
and
fildll
popf
hlt
loope
pop
mov
mov
in
push
push
mov
iret
scas
push
dec
mov
in
call
iret
jmp
jge
cli
mov
push
scas
pushf
push
cmpl
sub
sahf
jnp
mov
nop
fnsave
or
testl
inc
sbb
inc
js
aad
data16
xchg
testl
push
movsl
push
pop
push
jl
repz
pop
mov
adc
aad
int3
cli
and
jae
rorl
fbstp
cli
movsb
add
adc
std
sbb
mov
fnstenv
mov
mov
imul
faddl
cwtl
dec
cmpsb
mov
sbb
lods
ficomps
mov
mov
sti
sub
notl
lods
add
push
ret
add
jg
mov
and
sub
mov
movsl
xlat
jge
je
jge
iret
into
sub
and
fnstenv
mov
cld
in
or
leave
sbb
data16
cmp
mov
mov
adc
out
xor
mov
inc
lahf
xchg
adc
push
push
jge
pop
pushf
lcall
dec
and
aad
mov
fdivp
scas
adc
inc
fs
inc
jnp
cli
jb
notb
stc
pop
ffree
pop
sub
push
hlt
dec
jb
sbb
jg
mov
negb
pusha
xor
pushf
sub
fimuls
cltd
inc
ret
data16
mov
out
xchg
repnz
adc
idivb
mov
sub
or
push
and
iret
dec
daa
icebp
fisttps
shlb
int3
add
repnz
xor
jmp
push
int3
cmp
fstl
cmp
and
mov
movsl
test
sub
sub
push
xor
mov
icebp
filds
das
mov
dec
dec
es
test
les
in
xorl
out
lea
idiv
call
addr16
xor
fistpll
xchg
mov
and
add
xor
cltd
mov
cmp
xchg
imul
outsb
cwtl
sbb
fs
lret
adc
push
mov
adc
sti
inc
arpl
sarl
rorl
fildl
jle
jns
loop
loopne
jne
ret
test
shrl
test
jne
pusha
jmp
or
jne
and
rclb
mov
aas
mov
push
loopne
xor
adc
repz
aam
daa
imul
sbb
repnz
repnz
push
inc
lcall
addr16
loop
push
or
xor
shlb
or
xlat
and
lcall
je
lahf
ss
pop
test
xchg
jmp
popa
lods
or
xor
add
pop
jl
xchg
adc
jno
insb
inc
test
dec
notb
sub
sub
mov
jg
dec
pop
jl
sub
adc
pop
shr
jb
mov
cmp
push
test
push
repnz
fidivrl
cmpsb
mov
mov
xrelease
clc
loop
cld
pop
test
sub
arpl
mov
std
push
test
pushf
jg
sbb
adc
in
imul
nop
mov
into
sub
sbb
mov
cmp
jmp
cmp
or
or
and
int3
aaa
mov
pushf
and
adc
lds
leave
mov
mov
out
or
push
les
xchg
adc
cltd
pushf
mov
bound
dec
fisttpll
sarb
dec
sahf
addr16
push
enter
and
push
sub
test
adc
push
rolb
cltd
insb
xchg
mov
cmp
push
xor
cmp
mov
repz
or
inc
xchg
mov
sbb
arpl
jg
gs
push
jbe
andl
cmpsb
stos
push
inc
mov
mov
add
adc
pop
addr16
sub
in
mov
clc
jecxz
in
loopne
cpuid
fimull
sub
pusha
iret
sub
ficomps
cmpsl
leave
xor
lds
push
xor
and
cmpsb
icebp
dec
lret
push
xor
dec
inc
jno
mov
pop
xchg
cmp
sbb
adc
rorb
ret
cmc
arpl
test
es
ljmp
add
sbb
and
add
dec
mov
push
push
push
lret
sub
les
sbbl
mov
push
cmp
and
jo
mov
dec
and
jnp
clc
lods
les
loopne
lahf
pop
push
mov
fisubrs
pop
std
ja
sahf
pop
aas
scas
mov
out
push
in
psubusb
ficomps
mov
and
and
mov
jne
sti
rol
mov
xor
dec
jo
orb
sub
aaa
ret
xchg
mov
ror
xchg
dec
lds
adc
scas
orl
cld
pop
dec
cmp
cwtl
outsb
jp
sub
push
aad
ds
into
push
das
bound
into
inc
and
jae
adc
jns
outsb
into
pop
icebp
in
hlt
mov
pop
mov
pop
mov
jmp
outsb
fisubrl
pop
push
insl
outsb
stos
outsl
in
sbb
mov
dec
lahf
addr16
xchg
inc
sbb
xchg
jb
loop
mov
pushf
sbb
jge
pop
popf
xchg
jne
test
repnz
mov
repz
sbb
pop
cmp
jg
pushf
push
shlb
sbb
lea
dec
mov
mov
or
or
adc
call
sti
ret
and
lods
jb
mov
and
dec
adc
pop
xor
sub
jg
in
jmp
adcb
xchg
out
or
add
idivl
add
int3
loop
inc
imul
imul
pop
sub
adc
jle
daa
loopne
movsb
movsb
push
mov
jecxz
stc
mov
cmp
mov
mov
fisubrs
in
std
repz
out
and
fwait
aaa
outsb
mov
xchg
mov
out
inc
fadd
sub
mov
test
sbb
xchg
inc
loop
jp
js
adc
push
daa
add
pop
inc
pop
push
mov
dec
es
inc
xor
scas
shll
inc
iret
and
push
xchg
sbb
push
pop
mov
xor
inc
in
or
or
mov
movsl
andb
movsl
fisubrl
cmp
and
lret
shrb
iret
mov
in
daa
xor
cmp
push
aaa
sub
int
add
cmp
jo
lds
fdivl
mov
push
cmp
iret
or
adc
les
int
mov
dec
cmp
sbb
mov
test
mov
lahf
insb
xor
pop
push
mov
jnp
mov
dec
xchg
inc
fldcw
rclb
mov
pop
sbb
inc
aad
and
mov
mov
adc
cmpsb
mov
push
jl
jbe
sbb
jmp
and
push
mov
cmp
popa
pop
dec
fisttpll
sbbl
xor
ljmp
adc
lods
mov
out
mov
ret
xchg
cwtl
or
out
sbb
aaa
ljmp
lods
jns
out
inc
dec
push
push
jo
mov
ret
in
dec
mov
test
pop
adc
and
jle
je
notl
rcrl
out
mov
shr
sbb
mov
int3
js
into
add
test
clc
std
dec
pop
mov
sub
call
stc
pop
pusha
add
mov
xor
add
add
out
xor
arpl
cld
cmp
int3
adc
push
mov
mov
sbb
jnp
popa
std
mov
pusha
addl
into
adc
loop
movsb
xchg
jp
cmc
sbb
pop
mov
fldenv
mov
add
shlb
orb
inc
or
dec
popa
mov
outsl
adc
ds
sbb
adc
mov
push
jmp
dec
mov
sbb
test
faddp
into
mov
pushf
mov
mov
mov
mov
pop
pusha
rorb
push
lods
xchg
mov
stc
dec
mov
lock
mov
enter
jmp
mov
es
mov
xchg
out
addr16
push
iret
sti
mov
pop
test
jl
ds
stos
or
out
pop
fistps
mov
shlb
inc
or
xchg
movsl
dec
jnp
jmp
int
cld
sub
rol
mov
mov
mov
push
push
sbb
mov
sub
popa
mov
in
push
mov
repnz
loop
dec
adc
adc
push
cmp
or
shlb
clc
lods
mov
fstpl
repnz
mov
into
mov
jno
aaa
xor
cltd
cmp
xor
into
icebp
out
mov
or
mov
lods
and
movsb
adc
inc
cli
mov
daa
jbe
lock
lret
cmc
in
sub
adc
push
push
push
clc
leave
mov
orb
aas
xchg
sbb
xchg
cmp
jo
lea
cmp
lahf
pop
icebp
sub
fwait
subb
aad
aas
sub
fadds
test
loopne
push
add
clc
sub
in
je
mov
pop
ds
mov
jl
in
mov
fimull
sti
adc
adc
jno
negl
jne
les
xorl
leave
cwtl
mov
js
add
push
mov
or
ficoml
inc
jne
inc
and
fs
xor
dec
pop
add
fildl
mov
jo
ss
fisubrl
push
cmp
ret
mov
shl
int
adc
and
jmp
push
repnz
sbb
iret
in
push
push
push
push
outsl
cmpsl
inc
dec
inc
jge
sbb
xchg
mov
mov
mov
or
mov
shl
es
inc
addr16
dec
add
nop
mov
mov
insl
rclb
adc
xchg
fxtract
adc
enter
inc
dec
sub
or
jb
sbb
jmp
popa
imul
clc
das
nop
mov
push
dec
repnz
push
or
lods
cmp
xchg
push
xor
lcall
inc
nop
jno
cwtl
dec
or
cmp
pop
shll
jbe
out
add
jl
jae
mov
movsl
nop
rcrl
dec
and
fsubl
pop
mov
fcoml
mov
imul
cmc
and
xor
bound
shll
push
pusha
mov
jbe
mov
in
test
lcall
dec
mov
in
xchg
xor
sub
cmpsl
sbb
icebp
sub
jno
add
call
out
sub
pop
decl
xor
push
pop
mov
bound
test
int
mov
sub
cmp
fistpll
cmpsl
inc
cmpsb
popf
adc
push
adc
mov
aad
cmp
or
inc
movsb
int3
push
sbb
sbb
int3
icebp
imul
lcall
outsl
das
cmp
and
inc
jb
in
movsb
adc
jge
mov
loope
lods
clc
xchg
adc
mov
lods
jns
pop
or
scas
test
int
inc
add
sbb
mov
scas
xor
daa
cld
sub
ja
pop
cmp
shl
adc
or
call
inc
adc
les
or
jp
pop
outsl
sarl
aaa
ss
or
xchg
lahf
sets
lods
mov
arpl
fdivl
sbb
out
mov
mov
popa
icebp
mov
enter
loop
jb
sbb
jmp
push
stos
sub
mov
push
mov
test
xor
mov
hlt
adc
push
fwait
jne
into
arpl
and
stc
jbe
insb
dec
jl
sub
lahf
popa
jmp
pop
jmp
mov
out
sub
imul
or
cmp
popa
jne
push
repnz
push
pop
inc
fwait
ss
cmp
push
loope
outsb
fldcw
out
test
inc
cwtl
xchg
in
lahf
cmp
push
call
dec
mov
sbb
mov
pop
mov
and
lahf
xor
jbe
cmp
cld
js,pn
ret
inc
sbb
mov
rcl
mov
or
stc
inc
cltd
push
sbb
rclb
mov
sbb
fmull
fadd
fdivs
dec
mov
and
out
mov
ret
mov
fsub
push
ja
cld
insl
xchg
mov
mov
push
out
push
mov
vfmsubaddps
loop
mov
push
push
sub
mull
adc
cld
into
xchg
int
fwait
push
pop
fldenv
push
insl
rolb
roll
out
pop
mov
add
lcall
loope
enter
cmp
mov
pushf
sub
movsl
xor
or
sti
push
aas
fcomip
arpl
call
test
movsb
add
int
jne
push
pop
adc
xchg
xor
dec
aad
add
or
or
mov
xor
sahf
popl
jne
and
adc
test
scas
push
mov
xchg
jbe
adc
les
xchg
popw
pop
add
xchg
and
xor
fcomps
outsl
repnz
xor
out
ret
lahf
popa
lock
test
pop
inc
stos
std
imull
out
sub
movsb
and
sub
mov
inc
mov
cwtl
sbb
fcomip
andb
jnp
inc
jne
jae
and
jne
icebp
idivl
std
pop
pop
dec
cmp
fs
mov
push
xchg
mov
outsl
dec
pop
pop
jne
pop
fwait
mov
xchg
es
in
inc
into
sbb
push
and
and
movsl
ljmp
sub
cmp
dec
cmc
xor
push
aas
sbb
and
loop
add
int
iret
jmp
test
xorb
pop
fst
mov
mull
jecxz
push
cli
mov
rorb
xchg
mov
mov
lahf
mov
sub
adc
mov
stos
mov
cmp
das
sahf
xorl
repz
cmpsl
inc
inc
xchg
movsl
rclb
inc
ficoml
mov
fcmovbe
fnstsw
xor
dec
das
out
push
xor
mov
adc
push
pop
cmp
mov
push
pop
das
aam
inc
mov
mov
pop
fisubrs
repz
mov
leave
test
and
lods
outsb
insl
scas
mov
lret
xchg
jp
subl
pop
mov
pop
push
test
out
push
or
cmpsb
lretw
hlt
xlat
or
sbb
sahf
fwait
push
test
push
neg
in
movl
sub
imul
flds
insl
imul
ret
scas
and
call
inc
shll
fs
mov
addb
inc
add
sbb
repz
popf
cltd
iret
jp
decb
mov
adc
sbb
movsb
fdivrs
jns
adc
dec
scas
push
xchg
sub
shr
mov
mov
adc
xor
bound
shll
pop
ret
data16
adc
pusha
out
inc
aam
adc
or
xor
xor
ss
incl
adc
or
mov
outsb
cmp
divb
outsb
dec
fwait
into
test
movsl
or
jno
mov
ljmp
cmp
mov
xchg
sahf
push
mov
sbb
inc
loope
movsb
into
in
xor
mov
xchg
push
lods
cmp
add
mul
jg
push
and
cmp
aam
and
xor
mov
push
xlat
bound
stos
std
mov
sbb
pop
and
lret
sub
scas
js
mov
int
icebp
mov
mov
cli
push
fidivl
arpl
jno
xor
mov
sarb
push
pop
push
pop
and
jg
push
cmp
stos
adc
add
push
out
xor
inc
xor
fcmovu
pop
lret
push
sbb
sarb
nop
jnp
sbb
daa
fnstsw
mov
xchg
sbbb
data16
dec
adc
rcr
mov
mov
mov
mov
lret
sub
test
lods
outsl
popa
inc
int
std
int3
push
lahf
xchg
mov
jecxz
pop
cmpb
testl
stc
or
ljmp
sub
inc
cs
out
push
pop
cwtl
clc
out
imul
cmc
push
inc
fistl
xor
pop
ret
inc
push
clc
xchg
ja
pop
fmuls
mov
sahf
xor
in
popf
mov
popf
loop
sti
fwait
testl
mov
stos
mov
clc
cmp
adc
add
mov
cmp
or
jmp
jno
or
mov
dec
nop
imul
fisttps
fsubrs
movsb
inc
in
sub
adc
outsb
mov
push
pop
lret
rorb
aas
mov
sbb
test
mov
aas
das
jge
push
call
psllq
sub
mov
xchg
and
sub
inc
sub
push
mov
scas
lea
fmuls
mov
loope
cmpsl
enter
aad
fwait
jle,pn
pushl
faddp
cmp
or
test
and
aaa
dec
cmp
or
inc
fstpl
outsl
cld
xor
lcall
ljmp
iret
xchg
cmc
and
pusha
mov
hlt
outsb
loope
pop
popf
push
fwait
xor
xchg
gs
in
int
loope
add
or
ja
xchg
fstl
mov
pop
pop
clc
mov
repnz
icebp
cmpsl
xorl
cmpsl
sub
xor
cmp
push
pop
cmp
repz
adc
mov
ret
and
ret
mov
ds
lock
aam
hlt
iret
lods
pop
jne
lret
mov
mov
jl
jmp
mov
xor
out
mov
mov
mov
mov
bound
fsts
ret
test
cmpsl
aad
mov
fdivrs
insl
xchg
inc
pop
fdivrl
fidivs
leave
mov
aad
push
jne
jp
ljmp
lret
fisubl
add
jecxz
cmp
popf
and
repz
test
sbb
aam
enter
push
xchg
loope
push
cmp
cmp
jns
enter
daa
fisubl
cltd
dec
mov
mov
pop
lds
adc
xor
insl
pop
mov
jo
mov
and
scas
mov
pop
mov
ljmp
and
add
nop
cmp
inc
add
push
loopne
lcall
int
aad
aas
lahf
in
cmp
sbb
jnp
xchg
out
inc
lret
ret
mov
fisubl
sti
push
pop
pop
cs
lret
mov
clc
rclb
inc
aas
mov
jle
inc
loop
sub
xor
mov
ljmp
int3
outsb
and
cmpb
aam
cmp
or
push
outsb
fidivrl
outsl
mov
sar
arpl
fmull
je
ja
lea
push
insb
xlat
lock
dec
dec
pop
cwtl
lods
fs
dec
push
ret
out
mov
push
repz
jp
lcall
int3
clc
jg
ja
dec
sub
dec
pop
sub
bound
out
jecxz
js
jb
imul
mov
mov
add
lcall
push
cmp
and
fistl
dec
lods
xorb
mov
mov
sub
test
jle
test
xorl
test
sbbb
clc
add
add
xchg
clc
cltd
loopne
iret
imul
mov
and
rcll
sub
les
dec
outsb
mov
stos
xor
das
sub
inc
mov
rcl
inc
stos
cmp
and
sub
mov
mov
push
ljmp
cmp
pop
mov
or
or
lret
sub
fwait
cmpsl
mov
push
sbb
stc
cmp
xor
lret
mov
dec
add
test
outsb
mov
les
icebp
dec
inc
mov
lds
shlb
pop
push
push
jl
lods
repz
xor
jo
jle
add
addb
cmpsb
stos
pop
jnp
xor
jae
or
test
cli
add
outsl
sub
cmp
ds
negb
xchg
scas
sbb
cs
rolb
adc
fidivrs
adc
pop
push
jmp
push
out
into
fsubs
fistl
xor
pop
div
cld
or
mov
adc
inc
and
jle
push
out
mov
xchg
insb
hlt
gs
dec
jbe
notl
int3
dec
loop
ficoml
shrb
iret
xchg
push
jge
and
or
cwtl
into
push
push
in
inc
loopne
jl
adc
rorl
ror
pop
data16
hlt
mov
pop
or
scas
fwait
ret
pop
add
lea
dec
les
mov
add
mov
addr16
mov
dec
xor
shlb
out
aam
aam
push
cwtl
dec
xchg
fdivs
jp
out
lock
ljmp
popa
adc
pop
add
mov
icebp
jp
jbe
andnps
sbb
pop
sub
jns
add
or
pop
sbb
in
jno
fisubrs
add
dec
pop
insb
sub
pop
dec
cmpsl
jp
sbb
es
addr16
aas
push
jo
std
sarb
divl
subb
repz
add
aad
mov
daa
or
jge
cwtl
mov
idivb
cld
out
loopne
add
addl
es
xor
fwait
xchg
dec
add
xchg
add
inc
jge
fsubs
xchg
sub
enter
cmpsl
dec
ss
mov
mov
out
adc
in
mov
pop
pop
adc
and
mov
xlat
or
sbb
into
push
addr16
js
loop
out
lods
sbb
jne
imull
jl
out
jg
aam
int3
fsubs
jnp
mov
loope
sub
test
in
cmp
ss
ffree
gs
inc
popf
in
sub
loopne
xchg
fsubrl
inc
push
cmp
mov
loop
adc
push
pusha
inc
dec
and
add
inc
insl
push
bound
push
xchg
repz
movsb
sub
or
inc
ljmp
in
push
pop
fdiv
jl
pop
scas
mov
xchg
dec
push
pop
lahf
sub
add
pop
mov
xorb
callw
adc
hlt
xchg
lret
das
mov
pop
push
ljmp
push
add
sub
sbb
pop
ja
lds
xlat
fdivrs
fs
lods
or
adc
mov
pushf
cmp
and
bound
xor
scas
sub
mov
popf
or
inc
inc
mov
fwait
xor
jns
popf
cmp
out
mov
dec
push
jmp
insb
push
cmp
scas
movsb
xchg
sub
cwtl
xor
in
dec
mov
inc
scas
fstl
imul
cmove
xlat
ljmp
fmull
jg
xor
ja
push
ret
add
mov
andl
in
gs
ret
cwtl
sub
pop
in
jo
inc
hlt
or
sbb
cs
ret
sbb
call
jo
push
xchg
sub
cltd
or
dec
pusha
mov
aam
mov
mov
dec
jecxz
or
lahf
lret
es
push
icebp
cmp
test
or
add
push
inc
pop
cmpsl
push
push
cmp
mov
cwtl
mov
mov
out
mov
mov
movsl
xor
test
mov
sbb
push
and
icebp
mov
in
aas
xor
sarl
push
jecxz
mov
adc
cmp
jnp
push
mov
mov
pusha
jge
nop
int
mov
stos
add
bound
push
ljmp
repz
mulb
ljmp
sbb
xlat
out
int3
pop
cmp
lods
ds
or
lods
loop
and
pop
sbb
shlb
adc
test
js
cmpsl
sahf
mov
pop
sub
cmp
mov
leave
push
dec
inc
xchg
xchg
ds
leave
popf
push
mov
in
out
mov
imul
inc
push
dec
imul
dec
pop
sbb
mov
shlb
shlb
sub
cmp
jg
aad
sbb
add
int3
out
dec
out
xchg
push
push
fs
jae
push
mov
mov
imul
bound
adc
lcall
dec
imul
inc
mov
fidivrl
incl
pop
scas
outsl
xchg
mov
inc
sbb
push
mov
cmp
fists
xlat
hlt
jno
push
inc
aad
out
inc
ja
pop
or
das
and
adc
dec
loopne
cmp
push
pop
lods
sahf
fsubr
sub
pop
push
cmp
fidivrs
movsb
xchg
fcomps
lods
mov
jnp
orl
push
pop
lret
lea
sahf
inc
shlb
je
out
pusha
jl
sbb
jnp
mov
and
xor
lds
sub
xlat
imul
mov
cmp
out
mov
mov
in
add
xchg
push
lods
sbb
mov
movsb
inc
push
pushf
xor
and
arpl
mov
dec
pop
sbb
addr16
mov
xor
adc
pop
bound
sub
andl
and
fidivrs
test
sbb
mov
jne
adc
ret
in
pop
add
movsl
rcl
cwtl
ret
sbbl
ficoml
jae
pop
dec
dec
mov
or
and
sti
or
hlt
add
pop
cmp
gs
int3
and
shrb
sub
cmp
xor
push
mov
rol
loop
sbb
xor
repnz
mov
sbb
jne
mov
loop
ja
cmpsl
iret
pusha
sub
push
fnsave
mov
dec
lret
inc
fdivs
jnp
lret
xor
dec
ret
sub
fidivrl
mov
inc
pushf
leave
ret
mov
rcl
xchg
call
imul
lods
scas
mov
sub
imul
clc
add
pop
call
cmp
sub
xor
movsb
mov
sub
js
cmp
popa
addb
mov
iret
sti
mov
ja
ljmp
mov
cltd
sbb
ret
dec
insl
add
stos
lds
lods
mov
mov
ss
push
pop
inc
add
push
jb
dec
add
scas
or
int
cld
jbe
mov
lret
cmp
push
dec
dec
aas
xchg
fs
fiaddl
cltd
or
in
int3
shll
mov
sub
adc
jg
lea
rorl
fstps
jb
rep
cltd
mov
scas
jo
cld
leave
jne
xchg
ret
xor
icebp
sub
and
cmp
add
gs
lcall
and
inc
dec
add
test
xchg
inc
push
mov
mov
punpcklwd
enter
subl
rcr
xchg
movsl
rclb
xchg
mov
lea
jns
push
popl
daa
fildl
or
adc
inc
xchg
or
dec
xchg
add
rcrl
leave
sub
imul
sbb
pushf
in
mov
ret
shl
sbb
cld
cmp
pop
sub
and
loope
outsl
fsubr
sub
out
or
leave
adc
adc
lea
hlt
mov
jb
popf
insb
lds
pop
sub
pop
repnz
push
mov
mov
ja
dec
popf
aaa
rcrl
xchg
xchg
or
jl
dec
lods
daa
repz
mov
mov
adc
jae
outsb
notb
ret
and
popaw
mov
rcrl
push
xor
inc
int
mov
ja
sub
dec
out
test
push
or
out
xor
daa
dec
mov
sbb
int
mov
push
lahf
adcl
mov
ret
mov
rcrb
in
xchg
sti
inc
data16
mov
mov
inc
in
aad
add
push
pop
andl
mov
pop
idivb
mov
and
test
mulb
cmp
in
push
pop
gs
push
jl
ficoms
mov
imul
dec
fcmovbe
rcr
in
scas
mov
shl
adc
push
and
dec
fnstenv
sbbl
push
ret
inc
xor
xor
int
add
insl
cwtl
add
fadds
scas
add
out
pop
enter
fistl
mov
jge
mov
mull
pop
test
mov
jnp
push
sahf
imul
sbb
sub
sarl
call
cmp
lea
outsl
mov
mov
sbbb
lods
dec
pop
dec
insl
jmp
pop
in
jg
sbb
lret
imull
pop
sbb
cmp
pshufw
dec
push
inc
mov
push
fs
fstl
mov
inc
mov
fistpl
adc
sbb
rcrb
lods
dec
popa
leave
or
sub
aam
js
nop
xchg
mov
xlat
mov
rcrb
add
sbbl
subl
xorl
add
xchg
xorl
lahf
pop
inc
xor
sub
pop
jnp
mov
fiaddl
jbe,pt
cmp
jg
sbb
inc
mov
adc
push
jmp
push
jle
xchg
add
mov
stos
push
outsb
and
mov
inc
adc
inc
xchg
test
pop
adc
push
lea
and
pop
int
xchg
push
lcall
mov
or
fisubl
mov
add
add
lahf
or
mov
outsb
rorb
dec
xor
outsl
xchg
pop
add
rcrb
in
mov
loopne
dec
dec
cmp
push
fcmovu
imul
and
lcall
jo
icebp
adc
in
shll
jno
or
dec
insb
mov
or
add
gs
xor
and
push
popf
fucom
mov
aad
stos
stc
jne
in
xchg
add
lcall
mov
jnp
xchg
mov
sbb
pop
roll
ret
test
fcoml
adcb
push
cli
andl
addr16
sub
dec
xchg
js
loopne
out
repz
sbb
dec
push
mov
cmp
in
inc
in
and
mov
lret
and
xchg
test
xor
rcrl
mov
mov
sbb
mov
cmpsb
push
dec
push
into
push
repz
mov
ds
imul
add
mov
mov
jne
add
push
and
je
jo
enter
out
jle
shr
dec
mov
popa
iret
and
push
xchg
add
push
sbb
xlat
pop
ss
call
dec
cmp
sub
popf
ret
cltd
pop
cmp
in
mov
mov
jmp
push
mov
mov
insb
in
flds
cmp
or
bound
xchg
jecxz
xchg
ljmp
sub
sar
push
pop
fninit
sarl
add
scas
pop
push
lcall
es
ret
repnz
fstl
add
mov
in
xor
jp
or
insl
mov
inc
repnz
imul
jmp
jae
lcall
jne
test
cmp
cmc
sub
jae
adc
cmp
dec
jp
adc
xchg
mov
stc
lea
push
and
into
dec
ret
add
push
mov
out
mov
outsl
cmp
cmp
lods
mov
xor
jnp
mov
scas
mov
les
scas
fidivs
mov
xchg
ror
cli
push
sub
pop
sub
icebp
outsb
or
fs
fistpll
adc
xor
and
icebp
cmp
pop
cmp
subb
lret
jns
test
insb
testb
mov
mov
jle
push
jge
int
dec
sbb
inc
push
sahf
negl
sti
mov
loopne
shrl
enter
cmp
test
adc
fcomp
cmp
pop
mov
mov
cmp
jge
and
xchg
xorl
xorl
pop
cmpsl
add
xor
mov
and
arpl
push
dec
rolb
fs
arpl
and
sub
test
jl
cltd
shlb
aam
xor
xor
sub
jmp
dec
jbe
into
pop
in
mov
addr16
loop
fcmovbe
jns
and
mov
and
push
xchg
bound
aas
push
lods
fsubl
rcll
mov
pop
pop
cs
or
ja
ficoml
mov
mov
mov
and
in
dec
push
stc
mov
aam
je
pop
loop
adc
scas
fcmovb
imul
movsb
les
jmp
dec
push
popf
loopne
inc
mov
data16
out
in
lahf
ret
sub
and
mov
adc
lods
cli
cmpsl
int
xchg
sub
mov
sbb
cwtl
or
lock
add
rorl
adc
jo
test
push
lods
jecxz
mov
and
imul
adc
mov
mov
pop
xchg
adc
adc
scas
out
or
cmp
cmpl
adc
sub
or
std
jmp
aam
sar
or
add
pop
push
push
and
dec
arpl
mov
or
enter
adc
jno
lcall
cmpsl
jmp
stos
sub
mov
sub
es
or
jno
mov
lds
xchg
push
out
adc
jge
sub
and
mov
mov
bound
je
dec
xchg
jae
fs
movsb
shl
xchg
orb
sbb
out
push
pop
loopne
and
mov
popa
jle
insl
ret
mov
outsl
stos
scas
add
insl
sub
leave
sub
xchg
xchg
mov
lds
mov
aaa
xchg
adc
or
inc
xchg
sub
aam
and
dec
push
xchg
sbb
mov
ret
loop
adc
shrl
clc
and
mov
hlt
pop
pop
add
mov
lock
pop
and
ja
sub
cs
rolb
ret
sub
popf
bound
push
in
and
mov
lods
pop
mov
es
or
inc
and
mov
popa
jbe
jae
fidivs
xchg
mov
sbb
int
andl
push
jo
mov
or
xchg
dec
aas
inc
mov
xor
push
pop
fucomp
lcall
inc
lret
mov
sbb
jns
addr16
dec
lcall
nop
cmp
test
popf
sbb
std
jecxz
ljmp
ficoms
mov
repnz
sub
insb
jl
popa
stos
push
shl
sub
add
xor
ret
sub
ljmp
aas
imull
inc
sub
mov
mov
xchg
cmp
cmc
movsb
and
fisubrs
addr16
stc
push
cs
sbb
cmpsb
insb
push
sbb
nop
push
enter
repnz
in
lods
mov
leave
dec
sbb
dec
and
add
adcl
in
jae
mov
xchg
cmp
scas
ret
jnp
out
daa
dec
shll
pop
les
aam
pushf
mov
rol
scas
ffree
add
or
or
pop
xor
out
cmp
andb
mov
mov
clc
xchg
sbb
leave
mov
mov
call
mov
insl
sbb
pushf
pop
jae
ja,pn
bound
adc
test
push
jmp
xor
les
sbb
fwait
aaa
test
iret
ss
int
jno
jl
mov
outsl
and
fs
test
fwait
adc
outsb
out
mov
mov
mov
sbb
mov
and
mov
jecxz
xchg
add
pop
push
hlt
add
scas
or
push
adc
jg
fildll
xchg
sbbl
in
sti
pop
jge
cmp
aas
adc
retw
jge
add
inc
pop
incl
jle
mov
push
ret
or
sarl
repz
dec
inc
fnstcw
neg
dec
xchg
fidivs
inc
mov
call
pop
adc
push
aad
std
out
xor
adc
sub
nop
jmp
rorb
ret
xor
xchg
cmpsb
jbe
xchg
test
fsubl
jle
jg
popf
push
sbb
in
mov
into
movsl
push
push
mov
cmp
sbb
test
pop
mov
sbb
fcomip
push
jnp
inc
idivb
jae
mov
jmp
test
popf
xor
xchg
jg
shrb
adc
push
jne
pop
js
or
hlt
pop
notb
push
sbb
xchg
jae
cmpsb
test
cld
or
xor
movsb
lahf
pop
pop
int
fsubs
je
movsb
jge
xchg
imul
or
daa
cld
cmp
int
lock
aad
imul
sbb
push
pop
fidivrs
cmp
and
jmp
cwtl
out
jecxz
divb
mov
outsl
add
cmp
nop
repz
jb
xchg
dec
pop
imul
jne
and
sub
icebp
add
cmp
in
xchg
test
sysenter
scas
sbb
mov
cmp
mov
push
scas
rcl
pop
pop
movsb
cmp
repz
push
int
inc
aam
mov
stos
loop
inc
or
pop
xchg
mov
decb
popf
insl
fdivrs
fsubl
sub
ffreep
push
cmpsl
sti
loop
sti
mov
rclb
shrb
xor
ds
mov
lret
mov
mov
and
mov
in
xchg
and
inc
test
sub
arpl
cmp
sbb
adc
movsl
mov
out
dec
mov
xchg
xchg
mov
addr16
ds
jns
xchg
shrl
movsl
jmp
ss
pop
cmp
push
mov
xchg
xor
sahf
icebp
fwait
pop
add
mov
jecxz
jmp
xchg
int3
adc
xorl
lea
cmpsl
push
inc
fs
sub
inc
clc
xchg
mov
pop
rcrl
leave
out
pushl
int
loope
testl
cs
shr
dec
mov
or
xchg
mov
call
lret
ds
fmuls
inc
mov
pop
and
mov
mov
imul
ss
icebp
cmpsb
mov
sahf
cmp
sub
dec
stc
push
rol
es
ret
inc
sub
jbe
out
and
lock
push
aad
outsl
mov
stc
adc
shl
out
dec
sub
test
outsl
cmpsl
jg
push
mov
aaa
stos
mov
out
add
sbb
mov
repnz
movsb
movsl
inc
stc
pop
jbe
inc
cmc
arpl
pop
pop
jns
mov
mov
test
rorb
mov
faddl
pop
das
ffree
jecxz
rorl
jne
mov
mov
cwtl
outsl
std
out
mov
or
pop
add
and
loop
xchg
mov
add
out
or
leave
les
and
ret
mov
lea
hlt
push
lods
xor
add
lods
lcall
sub
inc
mov
mov
fs
scas
sub
stc
mov
stc
sbbl
fsub
add
dec
fcmovnb
xor
dec
xchg
insl
fists
sbb
jae
cmp
adc
push
aaa
mov
pop
wrmsr
mov
pop
pop
movsl
push
fsubr
pop
fsubrl
scas
and
jne
lea
add
inc
outsl
adc
scas
loope,pn
stc
mov
or
add
fistl
inc
pop
dec
stos
dec
shl
ror
push
stos
nop
mov
lods
mov
add
adc
rcrb
rorl
mov
xor
js
loopne
ret
sti
in
stc
xchg
shr
mov
adc
shlb
popf
cmp
pop
cmc
xor
inc
xor
sbb
sub
mov
cld
cmp
std
pop
xchg
mov
xor
xchg
rorl
mov
test
inc
xchg
sbb
and
outsl
pop
and
idivl
fiaddl
add
int
sbb
sbb
xchg
fstps
inc
stc
inc
push
jnp
sarl
leave
popa
and
out
jbe
jnp
in
mov
or
ficoml
mov
xchg
icebp
jae
adc
or
inc
in
pop
sbb
pushf
movsl
push
negl
xor
pop
jle
cmp
out
push
cmc
sbb
and
inc
orl
out
ss
int3
hlt
add
setb
fdivr
imul
mov
call
or
in
scas
repnz
xchg
mov
std
jge
xchg
es
dec
fxch
rcrb
jnp
out
mov
mov
pop
test
sub
mov
xchg
out
jg
xchg
cmp
mov
inc
call
mov
test
sub
lret
mov
push
in
mov
nop
xchg
dec
ss
insb
mov
scas
leave
dec
cmp
add
and
cmp
aas
mov
test
add
scas
inc
lcall
mov
bnd
imul
push
test
xchg
mov
pop
je
inc
pop
add
xor
aaa
stos
mov
lcall
sub
xchg
stos
xor
or
push
mov
push
xchg
mov
or
js
mov
xbegin
mov
mov
pushf
mov
jo
aad
stos
push
je
iret
mov
cmp
cmp
sub
roll
jle
cmpsb
rcrb
mov
sub
das
adc
and
jl
hlt
sbb
push
adc
xchg
clc
roll
repnz
jmp
mov
cmpsb
dec
xor
mov
jmp
subb
ljmp
pushf
and
dec
in
mov
pop
jns
pusha
and
ljmp
stc
cmp
mov
or
mov
stos
jl
repz
add
add
xchg
sub
lods
dec
sbb
addl
fs
test
in
aad
jne
xchg
sub
mov
add
xor
fwait
mov
lods
movsl
push
aas
repz
dec
outsb
mov
outsl
mov
pusha
cld
cmpsb
push
fisubs
mov
inc
and
movsl
ret
aam
jle
je
add
cmpsb
mov
push
in
inc
add
lock
inc
imul
pop
sti
les
addr16
adc
nop
xchg
or
add
in
mov
mov
pop
xabort
pop
jp
mov
enter
es
loope
jae
sti
push
dec
insl
or
sarl
sahf
fistl
aam
xor
push
data16
push
icebp
mov
loopne
cmp
fisubs
pop
mov
dec
push
int3
imul
lcall
adc
mov
mov
ficompl
test
xor
cs
or
out
outsb
xlat
cmpl
sbb
jbe
cmp
xchg
psrad
xchg
sbbl
test
cmp
cmp
or
stos
or
or
shrb
vpunpckhwd
adc
call
push
pusha
mov
lods
dec
cld
xchg
popf
adc
cmpsb
or
mov
outsl
icebp
add
push
ficomps
negl
incl
mov
lods
xchg
and
mov
xchg
inc
push
es
fstps
xchg
mov
fildl
imul
dec
add
mov
bound
mov
fbld
outsb
push
cmp
and
sub
fisubl
std
add
push
fsub
dec
divb
jne
mov
scas
push
inc
out
push
adc
sub
adc
ret
outsb
jmp
jp
sarl
inc
ret
mov
xor
popa
ja
pop
inc
lahf
scas
shll
std
push
mov
add
cli
lret
and
fcoms
idiv
dec
mov
loope
pop
xor
out
dec
pushf
dec
or
popw
jmp
adcl
std
adc
test
iret
or
sub
mov
and
mov
mov
jp,pt
or
jmp
or
aas
pop
xor
into
mov
cmp
fldl
std
push
negl
sti
mov
or
movsb
inc
and
ficomps
add
push
call
xor
xchg
shll
mov
in
jnp
cli
push
dec
adc
push
or
sbb
cwtl
pushf
pop
sub
xor
mov
dec
cwtl
or
mov
movsb
jne
inc
insb
push
in
out
ljmp
adc
ret
shlb
and
mov
sahf
sub
les
jge
mov
faddl
xchg
xchg
mov
repz
in
mov
imul
fisttpll
lods
and
insl
pop
ljmp
mov
add
movsb
xchg
leave
js
xor
cltd
gs
pop
push
cltd
shll
enter
inc
movsl
sub
inc
cwtl
rcr
rorl
aam
sub
int
movsb
push
sbb
or
push
popf
pop
xor
or
addr16
out
mov
sbb
mov
sbb
pop
lods
pop
das
test
leave
and
pushf
fistps
out
fstl
and
arpl
pushf
fcmove
push
mov
rol
jb
pop
mov
mov
dec
jmp
jns
adc
outsb
ret
and
lods
adc
xlat
shlb
loop
xor
sbb
dec
fildll
pop
aas
dec
insl
dec
xor
pop
mov
int3
in
dec
pop
jg
push
adc
push
in
xor
mov
sti
mov
sysexit
pop
clc
pop
loopne
and
loop
and
enter
dec
adc
mov
das
imul
jne
outsl
mov
clc
lcall
mov
scas
jo
lcall
inc
fs
sub
push
std
sbb
ucomiss
call
mov
ret
cmpsl
shll
mov
push
fsub
jl
mov
leave
adc
fldcw
dec
mov
jns
aaa
add
push
pop
mov
jo
xchg
pop
cmp
or
mov
pop
test
pop
repnz
mov
sbb
mov
mov
mulb
sbb
in
fstpt
sbb
mov
jmp
pop
and
sarl
or
xchg
jae
xlat
mov
test
dec
ret
add
sub
test
push
push
shlb
mov
adc
mov
mov
stos
lock
pop
aaa
gs
push
or
cmp
mov
out
mov
adc
or
push
push
xchg
in
cmp
adc
mov
mov
pushf
mov
mov
mov
popa
add
fwait
sub
push
jge
pop
xlat
stc
stc
xchg
insl
stos
and
and
test
adc
clc
inc
jno
mov
inc
push
cwtl
rcl
shll
shlb
inc
add
fiaddl
mov
ret
mov
pop
cmp
fs
daa
icebp
pop
or
faddl
cld
leave
cwtl
push
popa
mov
repz
mov
pop
leave
aaa
in
xchg
outsl
lds
sbb
outsl
pop
lcall
sub
push
cltd
push
movsl
pop
insl
xlat
loop
sarb
sub
into
and
mov
jne
stos
fisubrs
push
xchg
sub
int
pop
outsb
lret
movsb
imul
sbb
hlt
jo
xchg
or
adc
jecxz
mul
pop
lcall
vpsrad
cli
dec
jge
xor
imul
fnstenv
scas
loop
in
popa
repz
xor
push
ss
xor
icebp
jo
and
aad
fidivs
push
lods
notb
repnz
call
mov
repnz
aaa
xor
pop
lods
jnp
pop
loopne
push
sahf
es
jecxz
ret
out
and
push
jnp
xor
pop
fiaddl
inc
jae
ret
jbe
push
mov
add
jmp
mov
iret
pop
jbe
out
test
rclb
lahf
xchg
mov
cs
in
subl
xchg
inc
cmpsb
cld
and
ds
dec
movsl
rdmsr
inc
rclb
sbb
inc
bound
adc
rorb
fsub
sub
mov
in
push
repz
cmc
shll
adc
rclb
outsl
popa
aas
inc
outsl
orl
cli
jne
jge
sbb
dec
test
arpl
pop
or
lea
mov
jecxz
dec
dec
mov
aad
jmp
mov
cmp
cltd
pusha
insl
fldcw
das
scas
xchg
push
in
loop
test
mov
add
in
sahf
std
testb
adc
rorl
push
ja
imul
dec
ret
jbe
scas
sub
add
sub
rorl
data16
pop
xor
int
popf
mov
inc
cmp
and
mov
inc
xchg
imul
or
pop
outsb
adc
pop
ds
jns
mov
data16
hlt
xchg
xor
or
push
mov
lea
adc
pop
jle
fidivrs
insb
dec
dec
mov
mov
arpl
cmc
rorl
xchg
jo
xor
test
outsb
std
mov
lret
inc
and
mov
mov
mov
in
iret
nop
cmpsb
inc
or
adc
int
sbb
fstpt
or
cmc
cmp
andb
jo
add
outsb
mov
or
je
adc
jmp
mov
add
sahf
or
lahf
pop
loop
hlt
and
and
in
sbbb
push
add
ficoml
inc
arpl
shlb
cmp
adc
push
cmp
cltd
shlb
xor
sbb
ds
inc
pop
ss
lock
mov
arpl
xor
xchg
dec
ljmp
mov
mov
push
ret
movsb
mov
pop
jb
std
popa
mov
mov
push
adc
cmp
adc
sahf
nopl
mov
cld
pop
inc
adc
nop
ss
movsb
out
adc
or
test
fcompl
xor
and
dec
shrl
in
test
out
int3
das
orl
jle
add
arpl
in
fucomi
movsb
push
pop
push
inc
test
and
add
add
jecxz
jl
fsts
int
xlat
pop
xor
mov
jecxz
ret
ret
test
and
test
dec
aaa
ret
xchg
jl
push
clc
inc
pop
test
mov
inc
addr16
cltd
fldcw
imul
or
cwtl
pop
push
inc
enter
adcb
pop
sbb
xor
cwtl
imul
sbb
fnsave
push
int3
jne
push
outsl
cmc
xor
movsl
pop
addr16
xchg
stos
mov
xor
mov
js
push
dec
test
xchg
xchg
mov
notl
and
sbb
dec
aaa
fs
jo
les
xchg
push
fldl
xor
mov
sbb
rcrl
pop
sub
cmp
mov
push
push
test
pop
cwtl
push
xor
adc
fcoml
imull
mov
cwtl
aad
mov
mov
xchg
rorb
lock
gs
xchg
and
dec
out
js
gs
fld
cld
sub
and
sahf
fld1
sti
xchg
insl
enter
cmp
lds
jne
outsl
pop
or
pushf
cmp
mov
mov
loop
adc
stc
fs
mov
lcall
test
dec
mov
inc
lret
xchg
ja
fcoms
pop
cmpsl
adc
scas
cmp
lock
mov
jle
faddp
aad
mov
aad
sbb
lock
mov
pop
cltd
into
jmp
add
loop
cmc
sub
xchg
sub
push
xchg
lcall
sub
imulb
insl
xchg
jmp
movsl
pop
or
nop
mov
mov
pop
mov
rcrl
lret
aad
push
outsl
ljmp
xchg
push
bound
mov
in
rcll
add
add
enter
add
rol
fstl
xchg
out
pusha
mov
test
mov
cli
shll
mov
or
sub
dec
stos
push
cs
xchg
test
inc
cli
sub
mov
jg
das
insl
pusha
lret
enter
push
jge
popf
js
leave
sbb
xor
push
jge
xchg
sbb
mov
mov
popa
or
popf
movb
jnp
or
jb
repnz
pop
jge
lret
dec
xor
mov
mov
out
mov
cmp
push
adc
sbb
or
test
xchg
xchg
xor
push
fsubr
iret
movsl
popf
mov
into
std
pop
sbb
sarl
sbb
mov
xorl
push
push
mov
jno
push
mov
pop
loope
sub
adc
inc
jle
xor
cmp
mov
aam
outsl
cmp
test
push
rolb
and
push
mov
cmp
rol
add
shl
mov
add
push
in
negb
mov
adc
cli
icebp
insb
movb
sub
stos
movsb
adc
mov
mov
ds
clc
mov
aaa
je
mov
insl
mov
xchg
shlb
hlt
jb
add
xchg
dec
jge
loopne
jb
pop
push
daa
xchg
inc
pop
cmp
jno
cltd
insl
mov
out
popf
or
mov
pop
std
loopne
inc
addr16
push
add
sahf
adc
xchg
ret
aad
jmp
sbb
adc
sub
jo
and
sub
sahf
pop
jecxz
stc
pop
fistpll
push
out
mov
push
stos
pushf
pop
clc
mov
or
es
sub
hlt
and
clc
hlt
push
mov
and
mov
mov
lret
sbb
jl
rcrb
movsl
push
fcompl
stc
xor
mov
push
xchg
loopne
es
xchg
jo
loopne
pop
popf
mov
sub
addr16
loope
lcall
repz
es
push
loop
pop
xchg
hlt
xchg
clc
push
div
lea
xor
mov
push
xchg
mov
xor
pop
sti
push
outsl
mov
out
or
sti
sbb
or
fcoms
fistl
xor
mov
aad
ss
jno
sbb
inc
in
push
push
fstpt
add
shll
andb
popa
insb
cmp
inc
or
pop
or
sub
jp
mov
and
and
inc
xchg
outsl
popf
pusha
xlat
testl
push
and
mov
cmp
cmp
insl
subl
push
dec
mulb
sar
aad
jns
jns
shr
add
push
xchg
outsl
test
ret
ret
pop
cmp
loope
inc
mov
ss
daa
add
jnp
dec
inc
lret
ret
mov
jl
push
jnp
cltd
inc
jae
and
and
dec
fstps
outsb
xor
sbb
bound
push
addl
inc
jb
aas
cmp
push
mov
sub
adc
jmp
shlb
adc
mov
mov
jb
dec
scas
mov
add
cmp
fs
mov
ja
ret
dec
add
movsl
mov
pop
xchg
mov
jle
lds
movsb
cld
je
roll
test
mov
scas
and
pusha
int
cmp
bound
lcall
sub
repz
sahf
jb
fcomp
inc
jbe
jle
sub
pop
xlat
jne
lahf
push
idivb
subl
in
es
jmp
jle
popf
xchg
add
jbe
lods
lods
scas
xlat
inc
adc
rclb
int
push
int
enter
movsl
adc
testl
iret
les
inc
mov
cmp
mov
and
dec
mov
cld
sub
xor
mov
mov
pop
testb
test
or
jp
jo
fmul
push
xabort
sbb
cmp
or
movsl
in
jno
mov
push
mov
cmp
fwait
repz
xchg
add
sub
fstpl
icebp
mov
sbb
sti
cmpsb
jns
sub
aad
mov
aam
cmp
addl
xchg
push
or
jge
bound
orl
lahf
push
push
int3
aaa
insb
pop
sub
je
pop
data16
mov
fwait
ljmp
jge
movsb
js
dec
dec
adc
jecxz
sub
shrl
jmp
push
jg
sub
cmc
adc
mov
adc
jmp
rorl
pop
jnp
fsubs
jne
loope
jo
addr16
js
sub
mov
push
adc
fistl
dec
xchg
push
lods
mov
fsubrp
in
xchg
insl
lock
pusha
js
out
jmp
lcall
pop
int
push
mov
fucom
mov
inc
jecxz
sti
dec
pop
stos
lods
xor
mov
mov
popa
int3
mov
jmp
inc
lcall
push
ljmp
movsb
mov
fwait
dec
push
lods
stc
iret
filds
cld
call
jle
cli
push
pop
es
mov
idivb
mov
mov
jae
jmp
mov
mov
or
mov
inc
loope
jnp
xor
xor
sahf
in
inc
and
dec
std
push
shll
pop
mov
mov
movsl
lods
in
gs
fdiv
orl
push
lahf
out
xchg
sub
test
xchg
lcall
mulb
mov
stos
cmp
and
out
or
cli
loop
arpl
call
add
ss
fwait
aaa
fs
aad
les
iret
jbe
pop
shrb
loopne
xchg
push
sub
xchg
xor
sar
lods
add
test
test
inc
mov
cmp
test
ficoms
popf
push
mov
shrb
jge
sbb
push
orl
push
out
je
loope
fnstcw
popf
pop
nop
popl
xor
push
push
jns
xlat
dec
ljmp
shlb
movsl
xchg
mov
outsb
mov
sub
jbe
or
mov
add
xorl
xor
inc
xchg
faddl
push
cwtl
loopne
cmpsb
fnstcw
mov
mov
lods
or
xor
jl
mov
out
lret
adc
pop
in
cmp
pop
je
pushf
jb
and
xlat
cmp
jle
push
cmp
ja
lds
and
pop
dec
mov
cmp
xchg
and
dec
cmpsl
ja
push
pop
dec
scas
and
fidivs
mov
fstpl
adc
jno
xor
xchg
sbb
cwtl
jmp
js
int
mov
lret
xchg
mov
push
dec
inc
sti
inc
mov
stc
sub
mov
fcoms
pop
sbb
lea
aas
fnsetpm(287
sbb
ds
jp
pop
inc
icebp
subb
js
hlt
jne
or
xor
or
div
push
sub
call
enter
jne
jle
add
dec
sbb
scas
mov
mov
dec
testb
mov
sub
in
jg
pop
mov
add
negl
lret
cmpsb
mov
adc
arpl
rolb
jg
cmpsb
push
rcl
dec
jmp
and
iret
sbbb
xchg
cli
mov
adc
add
clc
int3
cs
movsl
cs
xchg
les
or
shlb
test
mov
insl
jo
fnstsw
mov
mov
push
pop
push
addr16
insb
inc
dec
push
shr
mov
inc
sbb
pusha
add
xor
in
ret
push
mov
and
pop
insl
add
mov
push
dec
and
jae
mov
lods
movsl
cmp
mov
icebp
add
lret
dec
sub
insb
mov
push
dec
gs
mov
leave
mov
dec
mov
adc
ja
xor
in
add
inc
add
xchg
pop
adc
fstpl
test
pop
lea
adc
stos
aas
lds
insl
push
pop
aad
adc
repnz
pop
popf
jns
push
and
negb
jg
pop
sub
outsl
sahf
mov
hlt
and
test
jb
pop
pop
mov
into
std
sub
incl
mov
cmc
ss
loope
jge
jbe
in
mov
pusha
xchg
in
mov
fxch
cmpsl
cmp
out
lods
jo
clc
jecxz
mov
jb
mov
shrb
xchg
dec
dec
fcmovnbe
cmc
cmovno
xor
scas
inc
push
mov
and
jge
jnp
mov
jmp
mov
jae
int
inc
ja
cmp
out
add
dec
xor
and
jo
imul
ds
roll
cmp
adc
mov
out
jle
sub
mov
in
add
in
in
sbb
mov
decb
push
pop
std
popa
mov
aad
andb
inc
jb
push
pop
jp
mov
sar
cmpsb
daa
push
mov
sbb
cmpsl
movsb
cltd
in
mov
outsb
push
xchg
add
in
cmp
movsb
mov
jle
je
data16
fisttpl
outsb
mov
xor
movb
fs
mov
rcr
test
rolb
lea
fwait
push
sbb
cmp
jge
inc
xor
or
sub
rcr
shl
lock
test
dec
int
loope
icebp
ja
test
test
mov
cs
test
xor
cld
jl
mov
sbb
push
mov
ret
insl
pusha
mov
jbe
xchg
aam
adc
mov
in
mov
mov
loopne
loop
dec
mov
in
sbb
andl
jb
sub
ss
test
scas
and
xchg
inc
add
fdivrs
sti
or
into
sbb
out
sti
insb
popf
push
scas
pushf
dec
daa
cmpsl
adc
xor
in
imul
sub
add
adc
aas
push
leave
adc
push
sub
icebp
add
and
sbb
lds
push
xchg
and
jp
daa
inc
popa
add
rcl
lods
dec
outsb
dec
scas
dec
mov
shr
push
jns
push
jge
out
sar
mov
add
mov
stos
in
push
xor
les
ss
pop
mov
mov
jb
fcmovnu
dec
push
std
orl
or
stos
jo
mov
into
sub
inc
ud0
or
popf
jmp
xchg
pop
lock
adc
ss
push
sub
icebp
outsl
add
mov
popf
push
nop
cmpsl
icebp
popa
sub
pop
cli
rorb
andb
fimuls
xor
pop
pop
and
in
sub
pop
pop
imul
mov
cmp
fsubr
inc
and
cs
cltd
adc
enter
dec
pusha
sahf
or
stos
imul
pop
jmp
insb
and
pop
int
mov
push
jb
insl
adc
xor
or
shrl
pop
leave
push
ret
ror
push
test
mov
push
insb
add
mov
jo
daa
jno
shl
jecxz
sub
ja
data16
rcrl
xorb
push
xchg
push
sub
xchg
xor
shr
jne
cmp
sarb
in
outsl
and
mov
cmp
mov
mov
fsubr
pop
lods
lcall
and
ds
sti
dec
push
push
pop
jp
popf
lods
push
sub
dec
fisttps
and
lea
mov
mov
push
jnp
mov
mov
fwait
imul
adc
dec
xchg
xlat
pop
pop
mov
and
dec
inc
frstor
orb
lods
and
out
pop
or
leave
sbb
sbb
sub
adc
sbb
ljmp
andb
push
add
jno
mov
mov
jl
cmp
mov
call
sbb
cwtl
push
addr16
dec
arpl
movsl
push
and
sub
pop
das
xor
in
enter
cmp
lds
mov
push
cli
sub
lods
mov
mov
xor
inc
push
pop
inc
pop
push
push
pop
aaa
in
in
call
mov
cld
roll
repnz
mov
std
or
pop
in
fsubs
mov
jmp
and
test
test
out
inc
xchg
inc
lods
std
jnp
ret
cltd
push
je
jne
push
pop
les
push
sub
sub
sub
mov
pop
in
cmp
lods
and
sub
jle
jo
cmp
mov
pop
cmp
mov
outsl
inc
push
addb
in
gs
fcmovne
jbe
cmp
pop
push
loope
sbb
clc
jge
pop
cld
dec
sbb
imul
int
and
jmp
mov
mov
mov
adc
stc
and
inc
pushl
rclb
rolb
xchg
xchg
mov
pop
repz
or
lret
jo
int3
inc
push
push
movsb
lret
dec
adc
outsl
cmp
subl
inc
shlb
jne
cltd
aas
xor
fwait
popa
sub
mov
dec
nop
mov
divl
outsl
in
cmpsl
cs
pop
sbb
mov
out
mov
xchg
imul
push
adc
dec
sbb
nop
repnz
sbb
dec
xchg
ret
add
xchg
mov
push
cmpsl
stos
jae
sub
jp
daa
push
out
cld
repz
dec
jno
cmpsb
sub
pop
sub
cltd
into
cmp
loopne
mov
mov
enter
pop
and
mov
cmpb
cs
xor
and
int
bound
insl
lea
pop
push
or
insl
add
push
mov
dec
call
into
fwait
movsb
je
or
push
repz
pop
loop
arpl
or
out
mov
lret
ja
add
mov
mov
dec
stos
cmp
cmp
enter
loope
fcmovnu
aam
mov
loopne
add
push
aam
xor
xchg
in
xchg
mov
cmpsb
orl
mov
mov
xor
ljmp
loopne
imul
jp
out
rclb
push
or
mov
fadds
ja
cmpsl
mov
mov
or
loopne
ljmp
outsb
jns
ficomps
bound
lock
popa
dec
inc
mov
inc
sub
xor
push
enter
dec
pop
lcall
ja
jl
aaa
xor
aaa
test
shlb
sub
leave
inc
inc
flds
sti
and
rorb
add
test
les
fdivrp
ficompl
mov
cwtl
aaa
mov
sub
xchg
and
mov
xchg
ror
cmovbe
nop
in
movsl
fcomps
pop
popa
xchg
enter
sub
cmp
sub
mov
inc
dec
outsb
std
jne
or
icebp
push
xor
outsl
mov
jae
sarl
adc
jo
mov
jb
rolb
mov
inc
test
xor
leave
gs
inc
in
loope
cmp
stos
mov
and
or
and
pop
pop
pop
gs
fstpt
nop
cmp
and
je
stc
dec
push
lods
xor
sbb
lds
shl
sub
outsb
inc
dec
pop
sub
xor
lcall
stos
inc
push
and
in
adc
mov
adc
cmp
dec
inc
insl
daa
jb
scas
clc
int3
mov
in
lds
in
push
jno
sbb
cli
dec
insl
xchg
fsubr
orl
in
pop
daa
push
ljmp
js
jmp
jnp
outsb
push
fidivl
fnsave
mov
mov
push
push
and
or
cmp
data16
ret
test
outsb
dec
mov
and
scas
inc
jns
add
mov
mov
dec
lods
jecxz
pop
add
ficompl
ja
insb
addr16
leave
in
push
jge
stos
push
lahf
jae
push
shrb
mov
mov
call
sbb
out
pusha
pop
dec
jle
sbb
add
and
jne
push
pushf
xor
add
nop
sarl
add
sub
sbb
mov
inc
lret
lcall
loope
cwtl
jns
mov
imul
xorb
xchg
adc
test
ret
call
sahf
push
imul
pop
subb
repz
icebp
inc
int
xchg
ljmp
sahf
push
jl
lcall
jle
inc
pop
bound
cmpsl
push
xchg
icebp
int
and
movsl
push
std
push
sub
mov
xor
sahf
rorb
xor
xchg
mov
inc
mov
mov
dec
pop
xchg
outsb
das
jne
adc
enter
mov
dec
in
out
sub
push
sbb
inc
dec
mov
adc
lods
out
into
xor
js
jbe
mov
inc
sub
ficompl
push
nop
gs
or
icebp
dec
je
cwtl
inc
and
rcll
xor
pop
ss
mov
mov
dec
mov
sub
jo
sbb
xchg
add
jp
cwtl
lret
mov
aaa
sbb
cmc
clc
je
das
xor
jbe
xchg
ja
in
into
ficoml
push
mov
mov
andl
ror
insl
ret
gs
shrb
aas
mov
pop
cmp
add
push
push
and
call
or
insb
mov
inc
nop
and
outsl
ds
push
pop
add
push
adc
jmp
inc
or
dec
arpl
sub
fcmovnb
cli
inc
test
outsl
gs
ljmp
out
and
std
pop
fdivrl
loop
mov
movsl
mov
sahf
push
ja
cvtps2pd
jge
push
xchg
xchg
sar
into
int3
hlt
fwait
shlb
jle
std
mov
mov
scas
xor
pop
std
out
andb
xchg
add
push
or
cltd
sbb
mov
lods
popa
and
sbb
jae
xchg
sub
sub
xorb
and
test
pop
adc
popf
lahf
jno
dec
jb
and
aas
adcb
pop
lods
imul
arpl
in
test
mov
xchg
loop
add
adc
ljmp
jbe
dec
jmp
mov
mov
jp
or
jp
xchg
fcomps
mov
popa
jns
stc
mov
xlat
hlt
and
push
sbb
xor
mov
int3
cli
pop
add
mov
jge
and
sbbb
sub
mov
jmp
or
insb
jo
jmp
addr16
push
out
inc
add
imul
sbb
inc
pop
frstor
call
xor
icebp
adc
jl
cmp
lret
fcom
into
mov
sbb
lea
call
jno
mov
cmpsl
das
xor
xor
lods
mov
and
push
ret
add
sbb
push
xor
pop
repnz
mov
mov
rorl
jns
fnop
loop
les
sbb
pop
xchg
lea
mov
sbb
stos
mov
add
sub
jg
je
push
scas
aas
stos
cmp
in
pop
lods
cltd
jg
movl
mov
das
nop
adc
outsl
pop
popf
hlt
or
push
sub
outsb
test
outsb
leave
rcrb
add
cmpsl
mov
push
push
cmpl
insb
push
loopne
jle
mov
pop
cmp
in
mov
sbb
out
or
in
int
std
out
cwtl
idiv
adc
mov
pusha
mov
repnz
xor
mov
inc
mov
lret
scas
jae
push
jnp
jae
cmp
jne
dec
enter
daa
jbe
pop
push
incl
xchg
test
rcl
hlt
jbe
orb
and
cs
xchg
mov
test
or
fwait
or
pusha
aaa
mov
subb
push
cmpsl
fldt
mov
jno
in
outsl
sub
and
mov
jecxz
jmp
js
decl
es
xor
faddl
fcmovnb
ja
xchg
push
iret
das
cmp
addr16
or
outsl
inc
push
and
push
leave
add
jno
test
jne
pushf
xor
insb
or
mov
pop
roll
rcrb
mov
push
stos
aas
cwtl
pop
mov
js
lds
add
imul
or
mov
pop
mov
imul
in
xor
or
cld
adc
sub
es
aad
cltd
inc
cmc
imul
push
jmp
dec
push
fldl
clc
push
lret
xor
lcall
jl
push
ret
inc
nop
fisttpll
stc
mov
inc
outsl
inc
mov
enter
stc
xchg
cltd
test
sahf
enter
mov
push
cld
stos
dec
mov
into
insl
test
inc
sub
imul
ret
roll
out
rorb
fisubrs
in
xchg
cmc
sbb
push
sbb
loopne
es
hlt
mov
push
mov
mov
icebp
out
in
mov
and
fisubrl
movsl
in
outsb
push
mov
pop
sub
or
fistl
test
add
push
pop
lret
test
sbbb
ret
pop
aaa
mov
xor
pop
xor
cltd
aad
addr16
push
jne
push
out
push
sub
jnp
test
out
jb
sbb
fadds
outsb
push
lock
adc
cmp
lods
sub
dec
lock
leave
iret
pop
inc
int3
stos
rep
movsl
mulb
lcall
jg
mov
jae
andl
push
mov
shlb
imul
cmp
add
mov
dec
fidivs
daa
dec
push
sub
movsl
cs
and
fimull
sti
and
xchg
popf
loop
fdivl
inc
imul
stos
xlat
fidivrl
dec
outsl
adc
lret
cmpsl
dec
push
roll
jne
add
push
jo
outsb
xor
and
xor
sub
arpl
push
rolb
cmp
sti
xchg
sti
loop
loopne
xchg
jnp
and
lahf
out
movsb
test
pop
jbe
movsl
pop
xchg
mov
pushf
jge
js
xchg
js
je
out
loope
shr
addr16
dec
push
adc
shrb
lret
shr
in
inc
into
xor
cwtl
pop
jae
testl
xchg
cmc
lahf
iret
cld
or
or
inc
pushf
cli
out
xchg
cmpsb
mov
les
jle
iret
and
adc
sub
xor
lret
mov
ja
aam
pop
insb
leave
xchg
test
pushl
stos
xor
add
repz
subl
mov
mov
test
push
add
mov
push
sbb
mov
add
dec
inc
push
fldcw
cmp
xor
in
testl
xor
adc
push
adc
push
and
or
push
jo
xchg
sbb
xchg
xor
lock
ret
aam
pop
xor
sbb
lcall
lock
loop
mov
pushl
adc
adc
pop
push
out
sub
lds
inc
cli
jbe
aad
lods
imulb
sbb
jl
dec
add
out
dec
lea
push
hlt
sub
xchg
dec
and
rcrl
int
lods
push
rclb
mov
adc
xchg
mov
jno
nop
fs
callw
xchg
xchg
cmp
xchg
cmpsb
sahf
push
xchg
jmp
popa
daa
ja
lcall
pushf
inc
sub
add
jne
push
out
sub
mov
mov
out
call
stc
xlat
adc
xchg
les
and
lret
cmpsb
jno
nop
mov
sbb
inc
lods
nop
adc
and
aas
out
jl
push
inc
push
idiv
xorb
rorb
mov
stos
fwait
sbb
push
sbb
fcoms
mov
mov
je
lods
jecxz
out
mov
adc
cmovg
xor
fs
pop
dec
insb
test
push
push
and
cmpl
pop
call
pop
adcb
xor
hlt
out
mov
push
hlt
jae
sub
pop
lret
adc
xchg
out
and
leave
jo
mov
add
add
push
ficompl
xchg
pop
fwait
clc
cmpsl
out
xchg
pop
shlb
es
push
mov
xchg
ljmp
inc
filds
mov
ret
mov
shlb
fs
bound
loop
inc
int
mov
jl
std
daa
mov
das
arpl
dec
mov
inc
cmpsb
popa
dec
in
nop
mov
sbb
pop
je
inc
ror
ja
sbb
hlt
pop
testb
insb
push
pop
imul
testb
les
cltd
andl
and
adc
sbb
fldcw
jl
sarb
clc
sub
jb
sbb
push
mov
dec
dec
sbb
mov
ljmp
cli
xchg
cmc
fdivl
div
in
pop
shl
pop
mov
jbe
jp
imul
xchg
daa
jecxz
aam
daa
das
insl
mov
sub
cmp
inc
daa
and
clc
je
xorb
out
lock
je
pop
add
js
hlt
mov
dec
daa
aas
xor
pushf
jecxz
xchg
das
cs
adc
loope
push
sub
addr16
shr
add
xor
jl
xor
inc
in
push
fs
int3
sub
icebp
nop
movsl
and
lret
pop
xlat
iret
dec
xchg
mov
add
data16
mov
sbb
jl
dec
cwtl
aas
or
out
pushf
cmpsb
mov
idivb
mov
dec
or
cld
jmp
xchg
pop
sub
ret
push
pop
rolb
mov
cmpsl
in
shl
xchg
and
nop
test
aas
sahf
add
fisubl
push
loopne
stos
loope
and
jecxz
fnsave
aam
or
xor
add
in
xlat
test
mov
repnz
inc
pusha
mov
out
cwtl
dec
bound
iret
xchg
movsl
cli
jmp
outsl
jp
xchg
je
loope
into
orb
and
popa
cmpsb
or
fsub
sub
cld
mov
loop
sarl
pminub
add
imul
jge
lock
or
cli
addb
out
fs
or
xchg
iret
or
bound
lahf
dec
outsb
push
je
mov
push
daa
sbb
stc
stc
dec
pop
dec
mov
xchg
mov
sbb
jecxz
push
mov
push
jecxz
mov
cmp
movsl
dec
xor
cmpsb
hlt
ret
mov
nop
pop
adc
mov
arpl
imul
insl
sti
and
mov
add
push
jnp
addr16
inc
mov
movsl
stos
outsl
outsl
repz
add
ja
mov
mov
test
add
push
xor
in
mov
out
adc
mov
movsl
negl
imul
mov
add
fidivs
insb
mov
popf
pop
mov
add
jp
out
sbb
mov
mov
cmovge
mov
mov
push
or
mov
lods
rorl
loop
jecxz
ret
inc
mov
inc
mov
cli
xor
cmpsb
testl
jl
cmp
rcrb
outsb
xchg
jmp
mov
clc
jg
mov
mov
adc
mov
cmp
sub
inc
xchg
mov
lods
pop
or
gs
dec
mov
and
pop
pop
rcll
xlat
lret
push
cmp
inc
fnstenv
lahf
js
stc
adc
mov
pop
mov
cmp
cmpsl
ss
test
xchg
sbb
lret
lods
or
repz
add
pop
mov
loopne
aas
fnstenv
movsl
jb
or
xor
xor
stos
repz
push
loop
or
lods
cmpsl
adc
subb
inc
clc
loope
and
fcomp
jmp
push
xchg
outsl
insb
dec
fimull
cld
xchg
pop
ljmp
mov
cmp
cmp
dec
adc
inc
lret
mov
mov
jne
inc
sahf
fcompl
jl
xchg
in
add
push
mov
mov
insb
das
loop
push
scas
cmp
fisubrs
shrl
dec
and
mov
clc
and
xchg
cwtl
and
fcmovnbe
pop
mov
lahf
adc
imul
out
aas
pop
mov
pop
fdivrl
cmp
add
int3
in
hlt
mov
inc
mov
cltd
les
sub
jae
cs
dec
jns
jp
mov
inc
stc
rorb
sbb
fidivrs
out
sbbb
mulb
xor
pop
pop
or
jbe
add
ret
nop
aas
cmp
mov
data16
push
repnz
das
enter
jbe
in
movsl
push
xchg
mov
les
fmull
pop
adc
cli
fdivrs
lods
push
fdivs
outsl
cmp
push
lock
jl
mov
in
in
adc
push
xchg
or
push
pop
add
dec
fidivrs
sbb
push
fwait
out
lahf
xor
lods
jne
ljmp
adc
inc
inc
das
cld
movsl
shr
outsl
ds
iret
mov
cmp
jg
xchg
ret
sub
pop
mov
adc
mov
jo
dec
xchg
jno
out
xchg
sub
mov
push
iret
ret
mov
dec
adcl
xor
popa
dec
jb
in
testl
outsl
stos
bound
hlt
sbb
mov
xchg
repz
mov
ret
mov
or
shll
xchg
clc
mov
lret
xor
addr16
sub
test
pop
xchg
sbb
test
cli
jmp
push
cli
jl
push
ss
xor
inc
or
lret
mov
sub
iret
and
jle
add
js
pop
fildll
xchg
xchg
xor
sarb
ss
adcl
std
cli
mov
ljmp
mov
cmpl
enter
xchg
mov
shr
and
lock
push
test
fmull
nop
stos
jnp
push
pop
movsl
pop
ja
mov
sbbl
cmc
cmp
fsubrs
sti
imul
bnd
and
dec
mov
fwait
xor
out
jnp
ljmp
or
int
jecxz
mov
push
dec
test
mov
push
aaa
cltd
jne
and
jbe
jp
mov
pushl
icebp
xlat
cli
dec
lock
fstps
and
or
stc
imul
fs
aaa
je
mov
push
nop
adc
data16
test
mov
fadds
movsb
and
jns
adc
decl
dec
pop
jnp
xor
ja
jae
sbb
orb
nop
popa
mov
adc
jo
fbld
lcall
jbe
lret
jnp
push
cmp
add
ret
fadd
je
push
fsubp
add
mov
ret
adc
or
lds
ret
jmp
repnz
add
and
out
add
push
xchg
int3
nop
mov
cmc
pushf
cmp
aam
jbe
push
mov
sar
aam
mov
mov
divl
fidivl
push
sbbb
mov
jns
jge
das
and
inc
popa
inc
imul
xor
push
and
cmp
in
fbld
sbb
mov
iret
jbe
sbb
leave
cwtl
mov
add
mov
inc
rorb
icebp
popf
mov
gs
nop
jecxz
cwtl
adc
lds
pushf
ror
insb
xchg
jle
fstl
jns
jecxz
ret
sahf
dec
add
call
cmpsl
cmc
mov
rorl
adc
mov
sbb
fsubrs
pushf
cmpsl
mov
jae
xchg
fsubl
mov
in
cmpsl
out
or
pop
add
cwtl
add
and
mov
push
pop
push
pop
mov
stos
sbb
pop
cmp
jo
mov
push
add
mov
stos
rorl
sbb
mov
repz
aaa
test
or
xor
xchg
fstpl
xor
lods
aaa
cltd
mov
lret
fst
repz
sub
jecxz
xor
and
rcl
push
scas
repnz
ds
adc
lret
xor
rorb
lock
iret
cmp
clc
xor
mov
jb
pusha
adc
xor
pop
jbe
cld
push
mov
mov
aad
jecxz
cmp
enter
lcall
fidivrl
lea
add
and
jmp
add
mov
js
and
mov
mov
test
rolb
inc
push
in
mov
push
push
dec
mov
popa
xchg
jl
add
mov
insl
dec
insl
jnp
mov
in
cs
xchg
push
into
push
ja
in
rcll
lret
mov
scas
arpl
dec
sbb
sbb
xchg
fs
sub
pop
push
les
stc
pop
out
push
cmp
push
stos
call
mov
sbb
mov
call
pop
or
mov
pop
mov
iret
nop
insb
jne
xchg
push
mov
mov
push
and
xor
mov
mov
mov
stc
fmul
or
loopne
xor
pusha
stos
jne
pop
and
aad
shrl
jmp
push
mov
mov
sub
fnstenv
imul
imul
scas
leave
inc
fists
stc
inc
cwtl
sbb
xchg
andl
push
stos
xchg
pushf
fstpl
cmc
and
movsl
dec
es
xchg
pusha
push
push
cmp
stos
sub
sub
cli
movsl
bnd
leave
loopne
inc
insl
adc
jg
ficompl
pop
jmp
daa
outsl
cmp
mov
mov
push
rcll
mov
nop
jp
adc
lods
mov
arpl
cmp
or
jo
fs
push
pop
dec
hlt
repz
sbb
pop
sub
imul
add
mov
cwtl
inc
jecxz
xchg
cmpl
out
mov
inc
add
test
and
xlat
cli
or
int
push
int3
popw
and
rorb
xchg
aas
push
cltd
pop
cmpsl
and
pop
gs
dec
pusha
and
mov
inc
lea
inc
outsl
ss
add
lods
mov
subl
lds
jbe
inc
dec
dec
into
or
clc
in
mov
pop
push
shll
jle
imul
movsb
mov
jle
inc
sub
repz
mov
inc
fidivrl
and
cmpsb
pop
pop
lock
sub
sub
xor
lock
jae
je
mov
mov
pop
mov
jne
shlb
jmp
dec
xor
mov
sub
fnstenv
test
lods
jmp
cmp
push
pop
insb
or
xor
ret
and
clc
je
rcll
hlt
mov
es
cmp
and
jo
jae
arpl
and
xchg
pop
inc
js
mov
int
push
mov
pop
mov
cs
and
inc
aaa
mov
inc
out
cwtl
add
ficompl
outsl
cmp
inc
insb
dec
inc
add
rclb
insb
icebp
fisttpll
icebp
jl
fstpt
jecxz
mov
mov
push
les
sti
ljmp
push
cmpsb
repnz
pushf
pop
dec
xchg
mov
cld
xchg
loopne
inc
pop
test
or
push
mov
jp
test
lods
mov
pop
fwait
call
cltd
push
js
jg
mov
mov
stos
push
cltd
lret
orl
leave
xor
adc
sub
push
fcmovnu
mov
sti
cmc
push
je
faddl
jno
in
out
fs
cmp
inc
sbb
popf
sub
dec
add
test
cmp
jo
pop
xlat
or
jnp
add
adc
push
daa
xor
mov
scas
ljmp
cs
push
and
xchg
loop
rorb
std
addb
icebp
in
mov
mov
fildll
mov
cmpsl
push
stos
jo
shl
insl
lcall
test
dec
aam
dec
cmp
data16
in
push
stos
pop
xor
or
js
sub
cmp
fbstp
pop
pop
push
int
js
in
cmp
andl
mov
dec
movsl
test
inc
inc
mov
cli
xchg
mov
ljmp
roll
addb
rcl
lret
gs
out
es
sub
jno
add
xlat
jne
movsb
ret
enter
or
cmc
lcall
adc
mov
pop
dec
bound
pop
sbb
push
lcall
xorl
scas
ret
dec
xchg
mov
imul
scas
roll
in
cmp
addl
inc
loope
cmpsl
movsl
push
sub
xchg
inc
add
lea
mov
pusha
popa
mov
jnp
or
ja
mov
or
mulb
jecxz
xchg
cmp
in
lahf
pop
push
outsl
shl
stos
cli
pop
add
jno
pop
mov
push
mov
pop
ret
movsb
in
mov
sub
and
and
jle
push
ja
dec
mov
mov
bound
popa
jno
dec
xchg
and
cmpsl
push
pop
fdivs
pop
cmpsb
lods
mov
clc
cmpsb
dec
les
mov
xchg
mov
bound
repz
xchg
clc
int
cmp
arpl
adc
inc
arpl
mov
fcoml
cmpsb
ret
xor
push
lret
push
mov
xchg
fists
iret
and
enter
fldl
sbb
push
das
mov
and
lret
fstpl
cld
in
std
in
das
sub
fnstcw
ret
imul
data16
mov
and
inc
xchg
adc
int3
lock
js
mov
mov
or
out
mov
clc
cld
ljmp
jne
mov
and
sbb
and
pop
and
sbb
lea
cmpsl
push
lock
push
popf
pop
xchg
sahf
push
lret
pop
push
adc
test
mov
fidivrl
call
push
mov
cli
rorb
push
jb
sbb
mov
popa
cli
sub
call
cltd
sar
jnp
idiv
mov
scas
aas
lods
xor
lea
popf
lods
test
push
or
sar
nop
sbb
aas
xchg
insb
pop
mov
decb
iret
aam
leave
xor
or
inc
inc
fidivrl
sub
shll
cmp
push
lds
xchg
dec
arpl
add
jmp
or
jge
and
cmp
fs
aaa
jae
pop
pop
dec
addr16
jmp
mov
fs
call
cwtl
fcompl
int
dec
inc
mov
mov
fbstp
xor
sti
int
ret
sbb
mov
ficomps
loopne
sarb
xchg
sbb
cmp
repnz
adc
xchg
test
outsb
cs
mov
stc
sbb
cmp
xlat
sbb
into
inc
mov
xchg
ds
push
and
in
or
enter
cmp
dec
mov
inc
pop
xor
adc
cli
adc
push
filds
xor
jo
into
movsl
xchg
jno
out
neg
dec
or
sub
mov
dec
pop
adc
in
sbb
jmp
jmp
inc
mov
sti
insl
mov
shrb
ficoml
jns
add
mov
inc
call
enter
and
int
xor
addr16
out
inc
xor
arpl
out
jb
sbb
lods
into
add
popf
xchg
add
sub
mov
jne
std
rolb
hlt
loop
sub
inc
int3
xor
rorb
pop
push
inc
repz
mov
push
je
jo
push
push
sbb
mov
jbe
sub
pop
jb
dec
and
or
icebp
int3
mov
fmuls
xor
js
mov
cmp
mov
std
clc
add
inc
daa
jmp
pusha
jb
inc
xchg
cmp
sahf
mov
mov
xchg
jo
lods
decb
movsl
lret
or
inc
pushf
jecxz
mov
les
pop
fisubs
jo,pn
sbb
mov
pop
js
insb
out
dec
fdivl
mov
lods
xchg
jg
jecxz
shrb
mov
sub
push
cmp
push
in
mov
ja
pop
dec
mov
pushf
or
bound
add
arpl
ljmp
xor
loop
lcall
ret
test
sbb
stos
jp
xchg
jle
mov
push
movsb
xchg
sbb
push
push
push
sub
testl
sarb
mov
pop
enter
icebp
add
popa
pop
pop
or
jns
sub
mov
mov
mov
sbb
xor
mov
clc
push
xchg
lcall
clc
sub
and
jle
cwtl
ret
inc
xor
and
hlt
pusha
jmp
outsb
inc
add
jb
cwtl
add
fnstsw
pop
das
sbb
jns
std
clc
lds
and
ds
xor
cs
std
jge
mov
subl
xor
rcrl
and
dec
mov
cmpl
in
sub
std
stc
scas
pop
fs
push
inc
lcall
pop
stos
or
xor
sahf
out
adc
pusha
jg
or
pop
inc
inc
mov
xchg
jge
ljmp
imul
lds
lret
arpl
xchg
xchg
mov
push
xchg
out
outsb
dec
sbb
dec
xor
ret
test
test
pop
xor
add
dec
out
dec
test
pop
aad
adcb
dec
xlat
int
xchg
cwtl
mov
mov
fisubrs
mov
xchg
popa
push
mov
push
fs
enter
add
mov
jl
out
lret
lds
jecxz
cmpsb
jno
sti
addr16
jp
sar
dec
incb
sub
outsb
mov
stos
jne
pushf
sbb
aaa
repz
jne
or
lret
inc
push
repz
out
adc
fstpl
lods
sbb
push
adc
enter
xor
push
cmp
mov
dec
and
aas
inc
into
mov
and
or
sbb
push
pop
out
pmuludq
and
test
pop
cmp
push
push
pop
pop
lret
call
shrl
sti
clc
movsb
into
push
out
fstps
cmp
push
push
setbe
adc
mov
orb
push
mov
cmp
adc
adc
outsl
into
stos
jle
pop
stc
sub
pop
jne
jb
sti
xor
outsl
mov
in
add
loope
fidivl
inc
xchg
xor
push
andl
mov
inc
dec
xchg
push
cmp
cmp
cli
pop
hlt
or
mov
or
mov
sub
inc
xchg
jno
mov
adc
stc
adcb
add
lcall
xchg
push
cmp
test
jle
int3
rcll
adc
push
in
leave
rorb
mov
lods
mov
jp
mov
sbb
int3
enter
sbb
jmp
test
or
push
inc
stos
fsubl
inc
inc
or
negb
inc
test
mov
sti
pop
jecxz
or
adc
cltd
imul
push
push
mov
call
fldt
push
sbb
inc
dec
dec
fsubs
or
outsb
aam
gs
dec
xor
sub
pop
js
adc
mov
xor
fistpl
pop
into
inc
icebp
mov
pop
into
dec
pop
fidivs
cmp
shrb
adc
enter
imul
sbb
xlat
adc
std
push
mov
xchg
mov
sti
outsb
stos
mov
addl
out
hlt
xor
mov
lcall
cmp
xor
mov
or
mov
stos
adc
fildll
add
cli
std
and
jnp
cmp
or
and
xchg
rorb
les
fldt
inc
mov
and
enter
lret
ficomps
mov
into
sbb
xorl
dec
mov
or
sbb
icebp
mov
push
cmpsl
shrl
pop
jl
mov
popl
inc
jge
adcl
cmpsb
out
addr16
mov
jecxz
mov
daa
cmp
in
lock
sub
mov
decb
loope
sahf
stc
dec
inc
mov
cmpsl
ljmp
scas
mov
mov
cmpsl
test
sub
push
pop
sarl
das
mov
fwait
nop
rcr
shl
mov
cmp
lcall
inc
add
sbb
hlt
dec
add
test
and
out
mov
sub
pop
popa
or
outsb
rcl
sbb
fdivr
or
push
dec
loopne
lods
ja
enter
xchg
push
xlat
mov
and
xchg
in
lods
inc
mov
lods
addb
cmpsb
aad
mov
mov
incl
sbb
in
into
xchg
fsubs
or
ret
xchg
dec
mov
je
cmc
mov
add
cwtl
aam
jnp
pop
nop
into
cmp
add
jb
pop
add
lret
idivl
in
leave
add
cmp
mov
in
inc
xchg
jl
test
jnp
popw
xchg
call
sub
stc
sub
mov
leave
nop
mov
add
ja
sub
loop
push
jle
sub
mov
mov
mov
shl
inc
xchg
movsb
mov
imul
mov
ss
loopne
das
cmp
gs
jo
out
mov
add
push
cli
dec
mov
jl
std
xor
and
jne
mov
movsb
mov
mov
jns
pop
sbb
push
in
repnz
xchg
jae
jo
popa
add
test
les
mov
mov
push
cmpb
mov
jl
pop
aam
nop
push
sbb
sti
jnp
xchg
inc
cmp
ror
popf
xor
mov
jno
pop
mov
add
sbb
in
xchg
fdivp
test
repnz
inc
shl
sub
pop
bound
adc
cmp
inc
lds
repnz
popf
jp
stos
std
inc
xchg
cmp
mov
adc
fimull
or
sbb
xlat
lock
ret
and
pmuludq
or
mov
lock
mov
mov
addr16
dec
sti
loope
notl
mov
xchg
popa
push
cltd
cmpsl
pop
cli
cwtl
mov
fs
mov
addr16
jb
inc
lahf
ja
aad
adc
cwtl
adcl
test
push
pop
out
cmp
add
sarl
inc
xor
das
pop
mov
jae
dec
xchg
inc
leave
testb
mov
mov
fcom
icebp
sub
das
jge
fwait
lret
cmp
stos
icebp
mov
push
pop
insb
xor
data16
xchg
push
stos
lds
jg
xchg
lret
imul
fcmovnb
push
fmull
dec
jmp
adc
sub
adc
mov
fwait
js
sub
cmpsl
lea
mov
jbe
jae
pop
mov
in
jns
add
cwtl
and
dec
icebp
out
pop
clc
cmc
shlb
pop
test
mov
add
movsl
arpl
jae
cmpsb
push
sti
xchg
les
cld
shrb
pusha
push
shl
adc
lea
jle
xchg
add
add
repz
and
cli
lret
and
jae
xor
push
arpl
lea
mov
std
out
fmuls
push
movsl
mov
notl
adc
push
cmp
mov
add
es
pop
mov
cld
dec
das
push
xor
dec
adcl
icebp
loop
loop
mov
push
fld
decl
sub
mov
dec
cwtl
sahf
out
ficompl
jmp
loope
push
mov
into
xor
cmc
or
outsb
push
arpl
test
mov
cmp
mov
cmpb
ss
add
arpl
lds
ficompl
daa
rcll
lret
std
sahf
cmpsb
jmp
cmp
es
scas
pushf
pop
inc
add
mov
pop
lds
mov
shlb
pop
push
sar
fucom
dec
sub
pop
sbbb
loop
xor
mov
aad
scas
movsb
jmp
mov
add
mov
loope
jge
loop
pop
cmp
enter
inc
pop
test
call
insb
or
xchg
pop
aas
pop
rclb
cld
sbb
aaa
mov
das
bound
adc
clc
outsb
jle
es
lret
pop
mov
and
pop
and
imul
add
jnp
xlat
aaa
mov
adcl
push
test
js
inc
and
outsl
or
aas
cmp
inc
push
sbb
mov
loope
and
pop
push
jbe
dec
inc
or
imul
mov
cmp
sbb
es
scas
or
sahf
sbb
mov
into
jmp
push
pop
sub
je
outsb
sub
mov
stos
dec
mov
add
roll
hlt
jmp
mov
lods
ret
jns
or
pop
jns
and
dec
cmc
or
aam
out
dec
pop
or
xor
shlb
mov
mov
lcall
popf
fcoml
or
fldenv
repz
loop
popf
cmpsl
adc
mov
packsswb
lds
sbbb
mov
stc
xchg
fistps
add
dec
jmp
add
shrl
cli
stos
cli
sub
sbb
stos
inc
sbb
in
pop
ror
nop
mov
rcl
sbb
inc
mov
lret
xchg
mov
xchg
daa
mov
jbe
mov
mul
aas
pop
imull
out
js
push
stos
sub
stos
shll
mov
cld
mov
dec
scas
out
leave
data16
and
lods
xor
out
lock
mov
dec
fwait
popf
call
or
and
shlb
cmp
stc
aas
dec
fadds
or
movsl
or
arpl
bound
pusha
sti
mov
ret
idivb
jno
out
push
orl
outsb
xchg
mov
nop
js
xlat
pop
fcoms
xlat
cmpsb
pop
or
aad
jge
lahf
lcall
ret
mov
je
movsl
or
or
mov
sbb
cmp
or
push
mov
inc
push
test
inc
adc
js
fs
mov
and
sub
andb
mov
movsb
mov
pop
mov
jl
out
fstpt
cli
mov
jp
cmp
jno
jbe
cld
insb
pop
lods
ficomps
adc
add
cwtl
sbb
enter
out
lret
dec
sbb
shll
sub
jns
fs
xchg
mov
lock
ja
sbb
lcall
pop
cmp
fidivrl
jne
cmp
arpl
loope
jl
aaa
js
sahf
icebp
pusha
js
inc
mov
out
dec
pop
xor
int
push
mov
pop
jae
mov
scas
lahf
test
imul
jnp
iret
adc
sbb
xchg
call
pop
adcb
mov
or
mov
xor
repnz
mov
scas
lock
jns
jne
adc
push
fistps
ficomps
in
mov
adc
lods
inc
mov
fwait
pusha
cld
hlt
pop
ret
ja
jl
cmp
test
and
xor
imul
call
pop
sti
mov
in
push
mov
hlt
lahf
cltd
mov
mov
adc
insl
xor
adc
mov
aad
xor
sub
int3
loop
mov
fwait
ret
xcrypt-cbc
cmpsl
push
fstl
cmp
jnp
dec
sbb
stc
pop
jo
ret
sbb
push
shlb
mov
clc
jp
xchg
sub
sbb
fbld
pusha
flds
mov
xchg
ja
mov
or
mov
repnz
imul
push
scas
and
xchg
push
mov
data16
jb
xchg
jp,pt
jl
test
and
cmpsl
movsl
or
mov
es
xchg
adc
add
fistpll
xchg
insb
mov
or
out
insl
sbb
adc
test
jno
in
mov
aaa
xchg
cltd
push
inc
push
rolb
stc
pop
jge
adcb
sub
xchg
incb
mov
aad
cwtl
mov
xchg
lds
outsl
jmp
mov
pushf
jns
push
fcomi
cmpsb
mov
inc
out
push
scas
testb
adc
jno
adc
sbb
mov
fs
sahf
add
icebp
imul
push
mov
gs
repz
mov
mov
arpl
jnp
inc
std
sti
into
mov
push
fisttpl
lods
popf
adc
aad
adc
sbb
and
dec
imul
mov
mov
mov
shl
clc
lret
adc
rcr
sub
xchg
and
adc
mov
loop
mov
pop
shrl
xor
imul
inc
cmpsb
add
pop
test
cmp
lods
mov
xor
xchg
aad
jb
fdivrl
cmc
test
or
inc
pop
loope
xchg
dec
out
shrb
sbb
mov
adc
mov
aad
jb
int
ja
stc
sub
mov
xor
lahf
sbbl
dec
popa
dec
fisttpll
scas
and
push
mov
dec
sti
lods
test
dec
jl
cmp
push
jmp
in
sbb
and
add
daa
iret
jae
and
pop
xor
mov
and
test
and
dec
jle
jbe
aas
mov
xor
sbb
and
scas
add
aas
sbb
mov
sub
loope
mov
imul
and
mov
pop
xor
faddp
push
or
scas
iret
fs
jmp
push
xchg
movsb
jl
dec
cmp
ret
cmpsl
dec
add
mov
insb
shl
mov
mov
sbb
xchg
shl
sub
jecxz
mov
lret
scas
lret
stos
inc
xor
out
test
push
ss
push
stc
repz
inc
adc
ficomps
fisubl
adc
cmp
cli
cld
imul
popf
pushf
adc
pop
les
test
xchg
cmp
dec
jl
sub
in
aad
nop
pushf
fisttps
xchg
xchg
test
cld
cltd
cmp
add
leave
add
out
jbe
fisttpl
es
and
and
std
cmc
pop
imul
xor
jecxz
push
fldt
aam
xor
xchg
and
mov
hlt
xchg
lods
sbb
test
pusha
pop
in
inc
push
jmp
jns
add
xor
outsb
aas
js
pop
pop
lods
scas
hlt
fsub
jbe
mov
and
add
sub
push
fmuls
pop
aam
mov
cmp
sub
xor
gs
int3
dec
ljmp
stos
jb
dec
lock
inc
enter
les
xor
test
xchg
outsb
ja
xchg
stc
leave
push
wbinvd
mov
sahf
fcomi
mov
lret
movsl
sbb
jns
lock
sbbl
pop
push
imul
je
dec
popf
aad
out
pop
mov
push
lods
sar
aad
outsl
sbb
dec
test
je
ret
jno
mov
jbe
pop
lock
push
xchg
sbb
sub
xchg
notl
std
inc
sub
dec
and
cmpsl
out
fsubrl
sbb
push
sub
xlat
mov
inc
pop
sub
pop
scas
xor
adc
push
arpl
test
jae
aaa
push
shlb
shll
pop
pushf
dec
pop
adc
mov
mov
sub
mov
cwtl
sub
push
daa
in
repz
and
out
push
or
popa
dec
clc
int
vandnps
aaa
xchg
add
js
mov
jl
fists
je
inc
int
mov
inc
test
subl
scas
pushf
inc
jbe
adc
sub
or
pop
cld
mov
push
pop
jno
inc
arpl
lds
pop
daa
lahf
adcb
mov
push
ja
mov
inc
loope
testl
cltd
data16
push
inc
xchg
xor
cmpsb
dec
fnstenv
movsl
add
and
je
mov
inc
jbe
sbb
shr
lods
mov
out
stc
adc
dec
bound
mov
cmp
dec
cld
std
mov
iret
sub
adc
inc
hlt
loop
mov
in
ret
adc
cmp
repz
mov
enter
stc
aad
fstps
stos
xor
dec
pop
das
jb
and
into
xor
cli
jb
lret
and
sub
inc
into
movsl
jns
pop
or
aad
cld
sbb
push
or
push
push
pop
lods
pop
pop
fildl
mov
fwait
mov
mov
lock
ss
inc
inc
inc
imul
jnp
sti
jo
adcl
pop
fldl
iret
pop
inc
cli
adc
test
adc
xchg
inc
mov
jns
je
pop
xchg
aaa
inc
daa
push
adc
xor
jecxz
xor
or
leave
mov
ja
cld
or
ret
xlat
divl
mov
jcxz
mov
mov
sub
or
fsubrp
jl
or
inc
sbb
adc
test
mov
cmp
xlat
jne
jb
imul
dec
addb
pusha
lret
mov
movsb
cmc
out
ss
xchg
jae
daa
cmpsl
and
or
inc
loope
mov
popf
imul
xchg
mov
sub
repz
xor
cli
out
or
adc
shll
jno
push
dec
sarb
mov
sub
push
jl
mov
mov
das
lret
out
xchg
pop
mov
movsb
jl
adc
enter
push
xchg
outsb
sbb
sahf
mov
push
and
adc
stos
xchg
mov
push
dec
sbb
jmp
imul
ds
into
pushf
pop
sbb
sub
and
add
add
notl
fcoml
filds
cmp
in
repnz
jle
int
rcrb
pop
push
push
aaa
mov
popfw
dec
mov
test
mov
push
and
adc
repz
mov
jge
lods
fldt
lods
data16
addr16
aaa
inc
xor
fistps
dec
mull
push
int3
lds
jno
cmp
lcall
enter
sub
mov
das
adc
dec
xchg
mov
xor
jmp
icebp
push
push
sbb
pop
cltd
imul
fs
mov
xchg
mov
movsb
adc
xor
popf
mov
add
adc
cmpsb
pop
enter
cwtl
cmpl
sbb
xor
arpl
push
adc
in
mov
mov
ret
lods
sub
push
shr
icebp
ds
adc
lahf
xchg
arpl
mov
and
aaa
daa
test
fidivrl
test
jae
mov
dec
xor
pop
push
mov
repnz
lea
ss
or
stos
das
or
xor
inc
pop
adc
or
and
dec
les
insl
or
xchg
mov
sub
push
shlb
shlb
imul
push
cld
sub
xor
mov
pop
push
cmp
mov
adc
test
xchg
push
dec
mov
sub
and
mov
mov
cmpsb
lock
mov
fisubrl
cmc
in
xchg
jmp
sub
inc
outsb
fists
nop
fs
aaa
aaa
pusha
push
xor
fildll
inc
or
push
sub
shl
jne
and
push
stos
adc
aam
cmp
mov
and
push
and
pop
push
lods
sbb
pop
push
bound
stos
stos
sti
jbe
mov
clc
not
mov
outsl
push
icebp
jecxz
jl
in
mov
dec
dec
add
lds
cltd
std
bound
gs
mov
xor
xor
jecxz
rcr
dec
xchg
cmpsb
mov
mov
mov
mov
mov
imul
idiv
or
mov
sub
test
add
xchg
jbe
adc
ja
lods
push
pop
popa
push
xchg
ss
cmp
push
clc
xchg
outsb
mov
pop
sub
mov
outsb
in
cs
mov
jle
out
dec
in
hlt
mov
dec
or
pop
mov
int3
pop
jo
or
and
xor
les
lahf
aaa
popf
testl
lret
neg
pop
sub
or
adc
enter
cltd
sub
enter
dec
fmull
inc
jl
js
xchg
loope
int
mov
icebp
sbb
ret
push
mov
scas
jo
and
int
test
sbb
jnp
add
dec
dec
xlat
lcall
mov
jmp
loop
in
push
and
insl
add
addb
sti
inc
dec
inc
out
push
lcall
inc
xlat
filds
mov
into
pop
jbe
push
jae
jb
mov
movsl
stos
jmp
xchg
cmp
sub
jmp
mov
lret
je
int3
mov
adc
add
ja
icebp
outsl
test
test
mov
adc
xchg
sub
mov
xlat
and
jmp
sti
xchg
repz
mov
mov
hlt
dec
pusha
lods
or
or
ret
in
stos
push
xchg
jne
sub
fs
dec
aad
xor
scas
roll
or
inc
pop
lahf
fwait
lock
jae
fs
add
sbb
inc
cwtl
nop
cli
mov
jno
hlt
jle
aaa
test
sub
or
jp
xor
pop
iret
xchg
mov
dec
push
inc
mov
loope
push
sarb
fs
xor
aam
es
add
fwait
in
inc
pop
sub
and
rclb
dec
js
repz
lds
pop
push
sub
dec
sub
mov
stos
gs
push
jbe
addl
and
add
std
popa
pop
mov
sarl
push
data16
push
jmp
rcl
insl
mov
ds
pop
adc
inc
add
fsubrl
sub
dec
cmp
out
mov
jmp
test
adc
rolb
cmp
popa
aas
mov
or
sarb
dec
shrl
and
cmp
and
jmp
sbb
mov
nop
daa
ja
add
mov
mov
das
scas
lods
mov
scas
xchg
add
push
je
les
sbb
lret
mov
cmp
shlb
out
out
lret
push
sub
popa
ret
xchg
inc
loop
rcr
inc
jg
xor
inc
in
ss
out
into
mov
push
loop
xchg
sbb
mov
sub
add
mov
sbb
outsb
std
jae
insb
es
or
xchg
imul
test
jle
lahf
jae
mov
les
dec
mov
push
mov
into
rclb
stos
mov
xchg
push
imul
jmp
movsb
movsb
sub
sub
popf
add
neg
nop
lock
mov
in
outsl
ficoml
mov
fnstcw
jne
ja
test
cmpsb
and
negb
lods
outsb
pop
scas
jle
clc
mov
test
outsl
loope
cld
and
and
mov
and
xchg
jo
adc
xchg
mov
jge
pushf
push
inc
lock
sarl
jns
xchg
imulb
daa
fstpl
xlat
fldt
jle
dec
imul
jne
pushf
add
sbb
inc
pop
test
or
pop
es
fistpl
push
aam
rorb
sub
mov
jmp
or
movsb
out
data16
std
arpl
imul
and
ret
mov
lds
sti
sbb
dec
fcmovnbe
into
add
rorl
out
js
sbb
xchg
pop
sbb
lret
mov
fs
sbb
lcall
push
mov
es
pop
js
xor
rorl
cwtl
ds
xchg
punpckldq
mov
dec
jnp
jbe
imul
mov
xchg
fsubr
jnp
pop
and
stos
lods
sbb
push
imul
cwtl
mov
hlt
lcall
daa
outsl
push
sbb
push
jnp
in
daa
imul
xor
rcrl
movsb
sbb
xor
jp
insl
into
data16
incb
negb
clc
mov
out
jnp
jbe
and
adc
jae
cmp
push
pop
xor
inc
xchg
xor
lret
add
bnd
mov
inc
xchg
push
push
push
jecxz
pop
test
cmpsl
pushf
pop
xchg
jp
mov
fstpl
stc
jne
pushf
flds
das
xchg
and
icebp
add
xor
jne
ja
sahf
je
icebp
mov
xchg
sbb
push
push
test
popa
pushf
pop
inc
nop
sarl
std
sub
test
mov
lret
nop
pop
and
jp
pop
maskmovq
idivl
test
stc
dec
sarl
iret
or
sub
fwait
in
orb
cmp
jne
mov
inc
mov
mov
lds
sbb
and
pop
cmp
das
mov
and
loop
sbb
inc
lock
sti
in
xor
or
and
jo
mov
clc
stos
xor
mov
pop
ds
inc
cmpsb
enter
add
sarl
xchg
aad
imul
mov
adc
stc
in
jne
or
push
ds
or
ret
test
call
xlat
into
icebp
cs
lret
sbb
adc
mov
dec
push
add
cmc
inc
enter
mov
xor
sub
and
in
and
fsubr
add
divl
in
jp
cltd
rcrb
push
mov
iret
pop
mov
push
icebp
mov
les
sbb
fistpll
add
lahf
sahf
int
or
add
cmpsb
enter
cmp
stos
je
pop
test
ret
mov
std
xchg
lret
jns
in
lds
movl
mov
push
rcrb
mov
push
test
cmp
mov
adcl
and
pushf
das
repnz
push
dec
rorb
dec
push
and
fdivrp
xor
and
jns
xchg
adc
vmread
in
cmp
jecxz
push
pop
pop
ret
gs
bound
dec
xchg
xchg
enter
cmp
sbb
int
jp
mov
xchg
dec
mov
leave
leave
cmp
mov
sbb
outsb
or
inc
mov
jecxz
sub
jp
push
mov
call
repnz
jb
aad
ret
xor
pop
mov
fiaddl
sbb
lret
xchg
pop
aam
cwtl
das
nop
sub
xor
sbb
and
push
pop
adc
xchg
ljmp
push
js
lock
xor
shll
mov
ror
clc
sub
and
mov
pop
iret
mov
arpl
pop
inc
jge
pop
inc
cmpsb
test
popf
lcall
out
aam
mov
dec
sahf
mov
popf
pop
or
sbb
pusha
adc
in
cmp
hlt
mov
add
out
pop
dec
inc
pop
shl
xor
pop
push
inc
push
jne
loop
jb
std
sub
cwtl
cmc
mov
or
push
sbb
cmp
sub
xchg
sahf
inc
xchg
or
frstor
adc
sbb
push
scas
xchg
lods
lret
sbb
jl
xlat
and
or
dec
dec
inc
sbb
lds
cmp
mov
pop
sbb
imul
rcrl
ss
sbb
rcr
mov
adc
pop
adc
arpl
cmp
in
or
vrsqrtps
adc
inc
add
dec
stos
stc
dec
mov
sti
pushf
sub
clc
clc
lea
mov
aam
dec
idivb
jge
lcall
and
test
test
sub
add
cli
sbb
cmpsl
dec
xchg
in
pop
lret
lcall
aam
inc
add
sub
repz
popa
shlb
fildll
dec
mov
xchg
ret
cmp
daa
pop
movsb
aas
dec
dec
rorl
mov
in
and
add
lods
and
cmp
nop
pop
xor
out
push
mov
jb
adc
xchg
aad
or
mov
not
scas
push
inc
pushf
sbb
pushf
je
mov
aam
negl
dec
testl
jecxz
imul
inc
xchg
mov
xor
lea
pop
mov
orb
faddp
inc
dec
aam
mov
cmpl
out
jmp
add
jecxz
out
cmp
xlat
and
je
andb
push
jmp
xchg
outsb
sub
in
orb
jp
xchg
xor
lcall
testl
jmp
fsts
inc
jb
cmpsl
xor
xor
xor
inc
push
push
das
rcr
popf
ret
repz
cmpb
ret
cmp
jecxz
cmp
ret
cmpsb
popa
ljmp
iret
pusha
mov
dec
stos
pop
popa
mov
mov
aas
adc
loope
mov
mov
int3
test
sub
scas
jmp
imul
inc
imul
loope
xor
sbb
outsb
cmp
mov
mov
mov
imul
lock
daa
dec
aad
test
mov
xchg
fwait
cmp
sbbl
pusha
inc
enter
stos
cmp
ja
mov
pop
sub
mov
pop
pop
es
and
into
rol
lcall
add
ja
mov
cld
jno
push
xchg
sub
sbb
sub
orl
test
movd
mov
add
jg
out
and
cltd
xor
push
adc
push
mov
cwtl
sbb
mov
je
fnop
adcl
mov
stc
lock
push
mov
jp
rorb
sahf
cmpsl
divl
dec
repz
shrl
out
add
pop
xchg
and
sub
jmp
jb
neg
sub
dec
test
or
sbbl
pop
sub
xchg
je
dec
mov
pop
movsb
add
lds
ja
sub
adc
test
dec
cwtl
daa
loope
aas
scas
leave
js
add
inc
int
test
ljmp
repz
mov
int
mov
dec
dec
popa
push
jp
mov
ret
pop
dec
insb
fwait
sbb
adc
cmpsb
cmc
pop
movsb
ret
cmpl
push
inc
jb
loopne
or
or
mov
add
scas
xor
adc
xchg
jecxz
cli
and
mov
sbb
xchg
arpl
insb
mov
clc
jno
mov
inc
mov
movsl
jne
dec
mul
mov
aas
aam
or
jb
addr16
and
out
into
mov
cwtl
jno
or
es
stos
inc
add
xchg
add
cs
outsb
mov
dec
or
sbbb
in
xchg
daa
jnp
fucomi
push
push
cmpsb
mov
or
sbb
cld
jo,pn
ret
xor
ss
pop
mov
or
lods
jp
mov
mov
icebp
sarl
adc
mov
imul
stos
ds
cmp
sbb
jge
or
test
fstpt
lods
outsl
push
jecxz
jo
scas
std
fistpl
and
aad
cmp
and
dec
mov
ss
cmp
call
or
outsb
lret
dec
sbb
fs
jle
in
jl
push
iret
mov
gs
xchg
mov
scas
ja
movb
cmp
cmp
sbb
xor
sar
adc
push
aad
sbb
mov
aas
cmp
mov
imul
adc
mov
sbb
mov
dec
pop
je
cmp
fsub
mov
inc
xor
or
fdivrl
pop
int
and
push
jmp
add
lret
mull
les
lock
sub
ficompl
xorb
pop
inc
jnp
jmp
int3
lds
xchg
add
fs
jb
adc
dec
ljmp
aam
call
int
xor
outsl
sbb
test
shll
cli
fstl
int
mov
test
fcmovnb
cmpsb
daa
aaa
mov
dec
jne
data16
pop
loop
cld
jmp
adc
xchg
imul
loopne
xchg
loopne
insl
je
enter
lds
ss
in
mov
xchg
pushf
mov
xchg
scas
sbb
shl
shl
insb
pop
daa
xor
xor
loopne
cmp
lahf
add
stos
and
lods
xchg
mov
test
mov
mov
repnz
jb
lret
mov
or
rolb
sub
cmp
out
mov
scas
sub
insl
mov
sarb
adc
xor
setne
cmp
mov
aad
pop
pop
jns
movsl
and
inc
ficomps
movsl
aam
ret
mov
dec
mov
insl
xchg
add
mov
loopne
push
loope
xchg
hlt
lock
mov
and
xor
lock
fimull
push
into
int3
xchg
cmp
pop
leave
add
mov
xchg
loope
push
sub
dec
or
stc
outsl
icebp
fwait
in
lods
or
daa
xchg
add
cmovae
xchg
add
inc
div
push
test
scas
orb
sub
testl
call
shlb
mov
cmp
or
loope
out
testb
leave
sbb
jno
push
enter
mov
es
scas
or
mov
push
xchg
xor
fdivr
stc
push
pop
add
test
xchg
xor
dec
xor
out
ja
pop
fsts
test
sbb
inc
sti
iret
lock
xor
hlt
popf
fistps
or
shl
sahf
shl
repnz
bound
mov
sbb
dec
mov
in
fidivl
xchg
call
clc
outsl
shlb
fiadds
imul
out
pop
sub
push
adc
mov
insb
mov
in
int
cmp
mov
ss
jo
es
shl
xchg
mov
movsl
pop
adc
fistps
loopne
ljmp
inc
ljmp
mov
loope
dec
repnz
incb
xchg
xor
andl
xchg
ss
mov
mulb
sbb
jmp
out
outsl
fadd
or
inc
xchg
in
or
dec
scas
dec
cli
shll
jne
loop
ss
push
add
fs
push
js
ja
dec
mov
jg
pop
dec
call
fldl
cli
test
push
dec
adc
pop
ljmp
jl
pop
jno
jnp
and
xor
daa
imul
sub
repz
sub
subl
leave
cmp
ficoms
stos
aas
push
xchg
pusha
jbe
inc
or
mov
mov
dec
push
stc
shl
int3
mov
mov
jl
dec
xor
popa
stc
popf
out
add
inc
push
pop
sub
pop
cmp
inc
mov
pop
pop
in
mov
dec
fcoml
jbe
cmp
fisttps
inc
push
mov
mov
sbb
push
sub
movsl
push
xlat
xorl
cs
mov
xor
add
xchg
rcrb
jb
xchg
pop
mov
lds
or
ljmp
push
cmp
or
int3
jbe
test
test
loope
xlat
cli
fimuls
inc
out
flds
outsb
or
std
pop
out
and
scas
add
pop
xchg
sub
int3
mov
mov
ljmp
jg
cmp
lods
dec
out
sub
jp
repz
es
aas
ljmp
sahf
ljmp
xchg
repnz
mov
push
test
pop
inc
imul
cmp
test
push
mov
sub
push
es
push
mov
push
push
cmp
ss
pop
repz
nop
adc
xor
imul
jne
mov
cli
xchg
testb
adc
cmpsl
add
iret
push
fmul
inc
test
imul
mov
mov
fadds
data16
push
lock
int3
sbb
ficoml
sub
ret
pop
gs
cltd
cwtl
test
inc
fwait
pop
imulb
std
fldcw
mov
scas
jb
sahf
fs
mov
inc
ja
dec
sbb
fwait
dec
sub
lret
push
xchg
push
fld
xor
mov
jg
js
lahf
jp
cmp
sub
mov
push
xchg
pcmpeqb
fmuls
imul
add
pop
cmpsb
jge
jnp
adc
movnti
add
dec
sbb
in
jns
cltd
cmovp
mov
pop
fsubp
mov
or
sbb
push
hlt
popa
mov
and
add
mov
jnp
jge
pop
push
lret
stos
mov
dec
cmp
mov
mov
cmpsb
push
lds
shrl
pop
out
subb
jle
mov
xor
pop
aas
das
add
int
mov
imul
out
push
adc
sbb
jecxz
mov
mov
mov
clc
mov
ja
add
mov
mov
sar
das
pop
loope
imul
loope
mov
movsl
cld
mov
xor
int3
sub
mov
mov
pop
mov
cs
int3
xchg
ficoms
cmc
dec
pop
fnstsw
push
in
fwait
outsb
int
jno
imul
sbb
les
adc
sbb
imull
mov
push
push
cmp
int
add
sub
scas
gs
mov
cmp
int
test
test
adc
pop
jnp
mov
dec
inc
insl
aad
dec
adc
inc
loop
xchg
es
neg
lret
out
sbbb
int
jns
dec
push
sub
cltd
mov
dec
repz
mov
dec
jo
or
out
lahf
dec
imul
add
clc
movsb
test
test
icebp
adc
pop
cmp
icebp
stos
sub
stos
notl
cs
test
pop
sub
push
sub
fwait
in
shl
mov
mov
in
fldcw
cmp
movsl
jno
popf
nop
aas
push
clc
xchg
mov
push
out
pushf
add
dec
xor
push
jecxz
clc
notb
mov
jo
test
jnp
es
xchg
movsbl
jp
icebp
sub
jno
enter
bound
jmp
repnz
sbb
cld
push
and
and
adc
std
aaa
aam
stos
sub
cmp
out
mov
cmp
adc
ret
je
mov
das
pop
loop
mov
daa
xchg
pop
out
xchg
icebp
repz
jne
jmp
push
rorl
popf
clc
mov
stos
xchg
imul
cmp
adc
xchg
xor
aad
add
sbb
xor
lret
xchg
push
fs
pop
or
gs
imul
dec
ja
pushf
push
loopne
add
std
out
inc
lret
sub
inc
fdiv
jmp
push
in
mov
cmc
mov
jl
xchg
repz
cli
pop
pop
xchg
loopne
xchg
cli
jl
cmp
inc
ds
jp
orl
mov
cmc
or
hlt
rorl
xchg
scas
sar
inc
jp
int
les
xchg
inc
sarl
fs
mov
push
pop
add
scas
sub
repz
xchg
sti
in
cmp
mov
scas
xchg
sbb
jg
jecxz
cs
ds
jecxz
push
pushf
out
push
pop
inc
es
push
cmpsl
shll
gs
popf
testb
loop
add
test
test
jmp
mov
add
adc
fwait
mov
mov
sbb
orl
mov
daa
loopne
dec
jnp
dec
sbb
call
push
loopne
test
sub
lret
lods
arpl
nop
test
inc
mov
mov
inc
negl
jecxz
daa
andb
mov
push
dec
loop
repnz
loopne
jbe
call
dec
inc
cmp
aam
sbb
and
mov
cli
pop
out
and
in
cmp
subl
cmp
pop
adc
popa
movsl
or
pop
popa
pop
ret
inc
cmp
int
or
xchg
add
mov
stos
xchg
bound
stc
sub
sbb
cmp
dec
mov
jb
int
sub
sbb
dec
shlb
lods
data16
inc
cmp
aam
jo
jno
cmp
sub
repz
cli
aam
or
xor
jge
mov
mov
sahf
xchg
std
test
shrl
stc
mov
lods
xchg
push
lods
mov
mov
test
mov
mov
pop
push
dec
ffreep
inc
ljmp
mov
rclb
pop
popf
inc
sbb
inc
push
incl
in
lret
add
sub
imull
dec
ljmp
jbe
xchg
aas
mov
push
push
xchg
fldcw
xchg
mov
lret
dec
push
mov
je
pushl
data16
lret
ret
ss
mov
jecxz
or
push
fsubp
push
push
arpl
pop
push
lds
js
dec
fadds
divb
add
into
out
ds
xor
inc
mov
mov
pop
push
sti
std
je
push
sbb
shr
sub
and
xchg
outsl
pop
xor
rcr
imul
dec
loopne
ret
jb
xchg
sbb
sbb
stos
test
jne
jmp
mov
ret
and
or
sub
adc
inc
rcll
or
and
xchg
fmulp
push
mov
mov
loop
xlat
stc
adc
mov
jmp
xor
aaa
add
jp
out
sbb
push
loope
mov
nop
push
cmp
mov
xchg
icebp
xor
popa
ljmp
repnz
xor
mov
lahf
ljmp
iret
dec
std
sbb
into
out
popf
fcompl
add
mov
les
lods
in
xchg
mov
sbb
mov
adc
inc
pop
test
push
loopne
sbb
sbb
fwait
sbb
sbb
cmc
xor
pop
push
push
push
adcl
pushf
push
inc
push
cmc
jp
adc
jle
loopne
dec
or
and
pop
out
dec
sbb
nop
icebp
push
aad
in
popf
fsubrl
sti
loop
shlb
int
ror
jge
mov
rclb
neg
push
push
xor
pop
push
test
xchg
fldl
stos
or
mov
mov
cmc
imul
or
push
push
sbb
pop
jb
loopne
mov
ljmp
dec
leave
fcompl
jno
xor
or
mov
sub
xchg
cmc
push
cmp
push
cmp
test
add
dec
test
les
push
arpl
test
pop
or
or
push
adc
test
pop
mov
adc
mov
lret
dec
jmp
jmp
sbb
insb
jl
cmp
imul
test
out
push
push
dec
jp
lods
pop
xchg
test
adc
xor
fistpll
dec
lock
sub
pop
dec
icebp
pop
enter
jb
and
xchg
adc
jg
shl
mov
movsl
rclb
addb
faddl
pop
xor
mov
notb
sub
out
mov
push
mov
mov
add
lds
int3
fs
arpl
jg
pushf
mov
xorl
push
lods
faddp
aas
inc
leave
cmp
pop
xor
pop
mov
mov
das
pop
fwait
repz
jle
jg
jp
cs
fucom
pop
test
sarl
insb
dec
fists
mov
or
mov
nop
out
pop
inc
aad
mov
aaa
rol
insl
mov
sub
sbb
sbb
push
and
mov
inc
sbb
scas
xor
mov
cwtl
xchg
clc
ret
xchg
pop
mov
pop
lahf
aaa
pop
shll
iret
sbb
imul
xchg
sahf
cld
xor
or
mov
dec
cs
jge
pop
cld
mov
adcb
in
adc
lcall
jns
sub
popa
mov
cmp
insl
data16
cmc
xor
sbb
xchg
mov
and
vmwrite
call
cmp
or
out
out
xor
or
mov
sbbl
addr16
repnz
adc
fwait
and
popf
insl
push
push
mov
jmp
loope
or
add
addr16
stos
and
xchg
inc
pop
fwait
movsl
push
cmp
pusha
add
adc
outsl
sbb
out
sahf
mov
jle
mov
test
das
cmc
or
rcll
insb
add
pop
sub
negb
out
or
bound
mov
fsubr
in
dec
jns
call
fs
shl
push
mov
xor
or
fdivrl
sbb
sub
jmp
popf
scas
mov
cmp
xchg
sbb
lock
adc
sbb
aas
or
pop
cmp
mov
cmc
sub
xchg
sbb
sbb
mov
sub
adc
insb
mov
out
mov
int
lahf
jle
es
cmpl
pop
sub
pop
xchg
fmuls
fcompl
xchg
movsl
orb
in
movsl
inc
mov
and
lea
pop
and
xor
dec
mov
jecxz
push
sub
add
rcll
add
mov
cs
push
push
inc
movsl
lea
adc
xchg
mov
inc
orb
pop
ja
pop
mov
sub
aad
xchg
and
pcmpeqd
lcall
mov
gs
mov
stc
insb
dec
adc
je
lcall
adc
orl
dec
mov
inc
push
jo
movl
xlat
stos
xor
and
scas
sti
add
pop
or
or
stc
mov
sub
inc
mov
cli
mov
jecxz
mov
fwait
cli
sti
jmp
and
aas
pop
sti
lods
cmp
push
xor
test
cltd
jne
jmp
sbbl
xchg
push
or
cmpsb
lods
or
scas
sahf
aam
into
adc
or
int3
push
xor
call
jecxz
mov
cs
inc
push
shrl
cmp
xor
pop
add
ss
nop
ret
nop
rcr
stos
xor
or
pop
dec
pop
add
push
clc
and
das
inc
shlb
push
cmp
test
push
jg
push
or
mov
xor
mul
mov
test
cli
mov
mov
and
or
int
or
sbb
daa
jle
mov
aaa
add
inc
push
sahf
xlat
sub
std
dec
mov
in
in
dec
loop
in
pop
xchg
cmp
xchg
enter
add
lahf
es
stos
push
fidivl
jnp
jnp
pop
sub
out
jecxz
mov
xchg
mov
cli
ret
loop
and
mov
inc
in
dec
sbb
test
lods
enter
mov
mull
lret
push
repz
movsl
or
decl
ret
scas
int
aaa
mov
repnz
and
jnp
mov
jl
subl
fs
sbb
or
cmp
scas
sbb
pop
mov
adc
or
sub
imul
out
popf
out
mov
les
pop
xchg
in
aam
imul
orl
jnp
and
mov
jle
enter
dec
in
ror
sbb
mov
push
scas
arpl
mov
pop
insb
mov
jne
sub
dec
push
test
dec
dec
pop
xor
shl
fisubl
fst
loope
cli
shll
mov
cli
xor
inc
fsubrl
inc
ret
inc
fsub
pop
mov
mov
out
clc
fidivrl
test
pop
or
fwait
out
mov
mov
inc
aaa
pop
imul
push
rep
jno
fdivrp
mov
mov
mov
in
add
mov
fdivrl
iret
bound
icebp
fdivrp
test
cwtl
push
sub
std
jp
les
xchg
loop
adc
cmpsl
inc
cmp
dec
or
mov
and
add
pop
stc
cmpsb
push
pop
mov
push
sbb
outsl
xchg
cmp
mov
add
mov
jmp
or
fyl2x
stos
pop
xor
les
int3
mov
xlat
jb
sbb
fidivl
add
pop
cld
inc
sbb
jle
mov
out
popa
xchg
jb
gs
pop
xchg
add
xchg
test
pop
scas
out
out
mov
mov
ds
leave
mov
mov
push
dec
add
inc
in
cmp
jmp
lea
mov
in
out
inc
cltd
xchg
imull
aas
mov
adc
mov
sbb
mov
repz
lret
adc
cld
inc
clc
repnz
xor
inc
add
jo
cmp
inc
xchg
xchg
push
imul
fs
outsl
cwtl
push
bound
sub
inc
fisubrs
dec
mov
rorl
inc
jbe
jo
pushf
out
pop
jmp
add
mov
ficompl
cmc
movsb
je
fisttpl
out
jecxz
dec
lock
or
shlb
mov
adc
movsl
rorb
mov
mov
lds
sub
insl
pop
fiaddl
sbb
sub
je
outsl
sbb
cltd
mov
jo
rcll
push
adcb
cmp
jp
mov
mov
cli
dec
dec
inc
fdivs
lods
xchg
xchg
push
mov
out
mov
or
xchg
mov
sti
xchg
push
in
pop
fisubl
push
dec
and
add
fists
jmp
int3
sbb
xor
xor
xchg
inc
mov
mov
push
dec
sahf
shlb
mov
lret
and
dec
add
inc
pop
xor
push
fstl
mov
icebp
lret
add
fnstcw
cmp
test
inc
loope
xor
pop
or
lcall
sbb
test
cld
out
xchg
push
inc
jnp
sub
stos
adc
clc
and
push
stos
jo
or
lret
orb
mov
jns
fsubrl
outsb
sti
cmp
mov
ret
insb
push
lea
dec
adc
mov
jecxz
imul
enter
fwait
mov
outsb
adc
fildll
fstps
loop
icebp
lods
in
inc
leave
xor
jg
call
inc
addb
insl
lcall
pop
mov
aam
mov
jns
jb
mov
add
in
imul
xor
mov
and
stc
inc
int
push
call
add
lods
out
mov
cli
jnp
mov
dec
shll
jne
clc
fldt
pop
sahf
mov
ret
and
inc
in
cmp
xlat
push
xor
movsl
bound
mov
pop
inc
popa
std
sub
or
or
into
cli
push
js
xor
lret
cmp
fs
pslld
mov
xchg
scas
inc
mov
jb
lcall
int
cmp
add
stos
jmp
mov
scas
mov
jbe
adc
cmp
sbb
or
movsb
pop
leave
aad
clc
popf
outsb
sarl
daa
pop
jl
lock
lea
loop
call
add
lret
jmp
popa
push
lock
out
lods
cli
adc
sti
jge
fidivl
shr
data16
repz
mov
insb
repnz
dec
pop
push
xor
mov
jno
sub
xchg
sub
bound
daa
scas
adc
ret
mov
mov
inc
xchg
add
pop
out
pop
sub
xchg
rclb
loope
andl
xor
dec
jl
negl
mov
pop
in
push
cmp
mov
inc
pop
and
loopne
mov
dec
call
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
andb
in
in
rorl
bound
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
loopne
mov
mov
dec
aas
int
rol
arpl
fwait
xchg
or
popf
aaa
addb
lods
sahf
or
shlb
rorb
dec
out
xchg
or
stc
or
lret
or
mov
rorl
pop
pop
lds
mov
pop
adc
push
push
pusha
gs
xchg
xor
jo
sbb
and
std
jge
jae
pop
sub
mov
aas
das
fstpt
sub
lea
lcall
pop
adc
jl
xor
ljmp
xor
loopne
jae
popa
xchg
roll
push
cld
dec
lods
xchg
pop
pop
lds
mov
mov
inc
repnz
call
iret
jmp
in
add
in
movsb
rorb
sub
in
call
int
imul
and
mov
rcrl
addr16
inc
mov
call
int
bound
rorl
bound
in
mov
mov
inc
repnz
imul
out
bound
call
iret
jmp
mov
rorl
data16
inc
stos
out
call
iret
stos
pop
mov
inc
repnz
call
iret
jmp
mov
xrelease
mov
inc
repnz
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
nop
cmpsl
mov
mov
push
repnz
call
lret
jmp
clc
add
mov
and
incl
mov
mov
incl
mov
inc
xor
call
iret
xchg
data16
inc
repnz
call
iret
jmp
mov
mov
roll
bound
in
mov
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
jmp
mov
rorl
bound
call
iret
shlb
lods
inc
repnz
dec
or
adc
dec
mov
lcall
mov
scas
cltd
adc
mov
and
push
cmp
enter
call
mov
movsb
xchg
push
xor
add
inc
dec
pop
in
sbb
pusha
xchg
sbb
jns
dec
add
subl
adc
lods
lret
sbbb
mov
mov
addl
nop
xchg
icebp
xor
jbe
push
nop
sub
and
mov
stos
ss
pop
xchg
daa
xor
lcall
add
cmpb
fstpl
pop
inc
sbb
mov
inc
andb
stos
or
inc
fisttpll
xor
inc
xchg
nop
in
jmp
fwait
and
pushf
ret
sub
jmp
enter
lock
iret
sbb
inc
int3
or
mov
addb
and
loopne
jmp
imul
inc
push
pusha
in
arpl
xchg
sub
sub
inc
movsl
in
adc
fldl
sub
cmp
xchg
dec
movsb
sbb
mov
inc
push
adc
xor
jb
or
outsl
cmpsl
lods
adc
push
mov
cltd
stos
ret
gs
mov
mov
addr16
in
mov
lods
push
das
jmp
rcl
mov
inc
daa
adc
int3
mov
add
jae
push
adc
and
cmpl
sub
mov
push
ror
fs
push
mov
xor
insb
lret
mov
cmp
add
push
test
pop
cmp
popf
inc
daa
push
mov
jnp
sbb
adc
mov
int
in
movsl
imul
xchg
mov
pop
cmc
mov
in
lods
mov
lods
repnz
mov
mov
pushf
push
aaa
push
or
imul
cmp
xchg
adc
or
adc
sub
xchg
push
jge
pop
and
push
sub
stos
out
std
or
pop
cmp
icebp
cld
xchg
xor
cltd
add
fwait
imul
inc
data16
shrl
push
fcmovbe
jnp
mov
push
and
out
mov
xor
inc
adc
dec
stc
pop
adc
or
pop
push
call
or
mov
lret
flds
js
outsl
add
mov
rclb
gs
dec
test
jecxz
jnp
xor
in
lret
xor
mov
push
sti
xlat
aam
and
inc
dec
push
mov
cwtl
ds
jle
xlat
rcrl
push
dec
mov
fmul
cld
out
mov
scas
cmpsb
add
out
fnstsw
xchg
sbb
ds
add
inc
shll
xor
hlt
out
aad
lcall
scas
pop
es
mov
outsb
mov
les
in
pop
iret
pop
jmp
lret
push
mov
mov
setne
inc
mov
cmp
xorl
mov
mov
sub
ds
dec
pop
cmp
lods
pusha
adc
xchg
out
xor
fs
pushf
andb
sahf
imul
cld
pop
mov
sbb
popf
es
sbb
jge
add
xor
insb
imul
pop
add
cli
mov
mov
lahf
stc
sub
mov
mov
pushl
and
xchg
leave
ret
insb
or
sarb
cli
loope
fwait
sbb
jp
mov
das
dec
mov
sbb
pusha
mov
dec
or
adc
jns
insl
adc
pop
add
inc
pop
lock
or
and
into
std
adc
push
iret
js
ret
sahf
scas
pop
and
xchg
mov
insb
xchg
mov
ds
push
cmpsl
outsl
jno
mov
mov
inc
testb
lret
mov
shll
cmp
or
in
sbb
inc
in
pop
movsl
xor
mov
mulb
mov
xor
scas
hlt
call
hlt
adc
xchg
dec
mov
mov
push
push
stos
test
pop
jp
jle
icebp
clc
mov
inc
outsb
arpl
cmp
or
dec
ret
mov
xor
addr16
je
and
cmp
push
in
fadds
sub
inc
fstl
stos
das
cld
test
jo
jle
fs
sbb
into
fbld
cmpsl
jg
insw
outsl
hlt
cmc
add
shr
iret
pop
out
pop
out
call
cmpsb
mov
sbb
pop
mov
adc
js
mov
into
adc
push
push
push
imull
jo
nop
in
mov
pushf
jl
sbb
shl
mov
repz
inc
sub
fisubrl
cld
inc
adcl
or
jmp
xchg
pop
arpl
negl
fwait
add
test
cmp
adc
int
push
movsl
mov
add
xor
push
out
ljmp
ret
mov
out
cmpsl
mov
dec
sbb
mov
scas
add
sub
fcomip
sbb
cltd
mov
repnz
cli
and
jmp
stc
lcall
js
mov
insl
dec
add
xchg
jno
adc
or
in
sub
fnstsw
scas
ds
xchg
cmp
push
jno
push
inc
into
push
add
into
or
adc
push
cmp
lret
dec
jmp
adc
test
fs
es
test
cmp
cld
and
hlt
mov
loop
mov
push
out
in
pop
decl
cmp
push
push
test
call
sub
add
xor
in
sbb
mov
adc
adcb
scas
rcrl
mov
adc
movsb
cmpsb
ja,pn
outsl
pushf
xchg
mov
add
sti
daa
ffree
xchg
mov
sub
call
lahf
insb
loopne
push
inc
cld
and
cmp
loopne
fsubl
mulb
mov
repnz
dec
test
sub
adc
mov
lods
fs
pop
and
rcr
insl
out
mov
add
cmc
and
call
xchg
cmc
or
idivl
adc
xlat
xchg
push
je
ja
nop
sti
lret
pop
jmp
jle
fwait
shll
idivl
pop
orl
out
js
mov
and
jl
cmp
aam
xlat
lds
push
cmp
aaa
push
and
outsl
adc
xchg
stos
adc
leave
repz
sub
in
shll
lods
and
stc
lea
dec
divl
push
mov
or
mov
repz
fwait
mov
out
jno
pop
jle
adc
inc
test
pop
stos
fldenv
outsl
hlt
mov
and
adc
popf
cmpsl
mov
dec
repz
xlat
ret
lret
adc
mov
out
mov
and
jo
arpl
and
mov
dec
adc
push
repnz
mov
mov
test
ja
mov
sarl
into
icebp
mov
call
push
inc
clc
mov
outsl
insb
mov
inc
mov
arpl
push
mov
push
bound
stos
daa
dec
dec
mov
or
mov
xchg
cmc
adc
lret
add
and
aaa
dec
pop
push
in
jle
mov
int3
mov
mov
int
pop
iret
or
stc
ss
negb
outsb
dec
add
cmp
adc
cmc
mov
push
notb
faddl
mov
in
mov
aas
ret
jo
je
push
andl
aaa
jp
gs
pusha
jno
cs
clc
stos
fdivrp
call
shll
cmpsl
clc
daa
sbbb
cmp
add
push
ret
out
push
dec
sub
test
mov
out
mov
sub
ds
lods
adc
int3
dec
push
loop
les
in
or
pop
jle
outsb
add
imul
cmc
les
andb
insl
sbb
ljmp
aad
mov
cmpsb
add
adc
adc
mulb
ret
xor
mov
and
loope
aaa
push
or
dec
popf
lcall
fistps
jmp
dec
and
push
lahf
imul
jns
pop
out
adc
jecxz
aas
sub
push
movsb
inc
and
data16
test
outsl
ja
push
jge
xchg
xchg
add
mov
xor
and
jle
add
ds
in
push
dec
pop
loop
mov
jl
cld
insb
rcr
aas
repz
inc
mov
and
movsb
imul
cs
cwtl
mov
lea
push
decb
idivl
push
pop
es
add
addb
add
add
xchg
xchg
imul
fistpl
push
push
cmp
inc
ds
loopne
popf
sbb
adc
aas
outsb
xchg
lea
gs
nop
sbb
test
xchg
lea
sub
add
loop
imul
inc
xor
cmp
push
and
xchg
sbb
push
and
pop
cs
js
adc
mov
xchg
sti
mov
push
mov
popa
dec
xchg
cmp
sbb
or
jle
sub
stos
xor
add
lcall
xchg
addb
stc
jg
popf
inc
in
imul
add
mov
fadds
subl
dec
pushf
mov
xchg
inc
lahf
loop
adc
in
xlat
pop
ret
sbb
dec
dec
push
adc
cld
or
or
test
pop
dec
add
popf
sbb
test
mov
xor
cs
xchg
sbb
jns
iret
lds
dec
sbb
lea
jmp
hlt
push
jno
shll
sbb
int
jns
jnp
ds
mov
out
in
xor
es
leave
stc
outsb
mov
es
leave
fwait
leave
jo
andl
jp
mov
popa
push
push
and
jae
dec
or
gs
es
add
repz
ja
add
shlb
repz
lds
add
in
cmovb
jno
test
aam
pop
mov
jle
and
cmp
cli
lcall
scas
imul
mov
fildll
push
fnstenv
adcb
mov
dec
jo
imul
movsb
cmp
adc
dec
rolb
mov
jmp
jae
or
mov
out
or
lret
and
cmp
mov
mov
addr16
jp
ror
leave
and
cmpsb
inc
fsub
add
jno
inc
lods
sub
shl
add
out
je
cwtl
leave
dec
mov
and
xor
lea
inc
int3
sub
fldt
insb
mov
push
mov
test
pop
sub
out
adc
jo
xor
pop
ficoms
xor
jo
les
mov
pop
clc
adc
dec
sti
test
loope
pop
mov
add
mov
mov
adcl
sbb
xchg
movsb
push
pop
ss
dec
adc
xchg
rcrl
es
mov
shlb
out
and
ljmp
fsubrp
rorl
nop
stc
and
and
leave
enter
aam
jge
rcrl
mov
inc
lahf
inc
outsb
out
mov
jg
lods
icebp
mov
and
jbe
cmp
leave
jne
aaa
movsl
and
dec
jmp
jg
out
lret
les
ljmp
ret
cmp
roll
pop
movsb
das
or
repnz
jbe
inc
mov
stos
pop
add
xlat
nop
jno
popf
mov
push
cs
cmp
jge
cmp
or
ja
loopne
adc
pop
neg
mov
insl
aaa
adc
cmp
leave
mov
and
mov
cmpsl
or
jnp
jecxz
pop
int
in
ss
shrb
mov
pop
dec
addr16
jmp
fisubrs
or
mov
jnp
lret
push
lock
pop
fs
or
fists
pop
mov
test
mov
addl
mov
movsb
frstor
cs
jl
adc
pop
pop
lods
les
ficoms
into
pop
jb
mov
stc
out
fnstcw
mov
sbb
jae
es
fidivs
fs
inc
cmp
push
iret
scas
push
and
lods
rorl
andb
out
cs
scas
push
mov
lds
data16
mov
cmc
enter
jbe
adc
xor
fsubrs
mov
lods
je
scas
adc
jno
dec
add
movsl
or
loop
mov
adc
push
lods
sub
cmpsl
in
insl
fisttpll
ds
xchg
jae
test
mov
mov
inc
mov
inc
fstl
cli
stos
mov
fs
fnsave
push
pop
pop
xchg
lcall
pusha
stos
jge
add
std
aad
fs
mov
into
push
xor
jmp
iret
push
rorl
movsl
test
iret
sbb
add
add
mov
js
mov
cs
dec
pushf
lea
pop
or
hlt
mov
jns
loope
mov
jns
ss
inc
mov
adc
dec
aas
test
aam
das
int
jg
add
in
sti
inc
dec
nopl
insb
in
sub
cwtl
and
movsb
dec
jne
add
xchg
fsqrt
test
adc
cmpl
cli
jo
add
push
dec
lock
scas
xor
mov
movsb
fisttpll
sbb
into
xchg
jmp
jmp
pop
cmp
pop
rcll
inc
test
fsubp
mov
cli
mov
mov
out
ret
cmp
mov
xchg
jb
pop
xchg
insb
imul
xor
into
or
or
mov
out
jne
insl
xchg
mov
dec
sub
fcom
int
cmc
cmp
push
mov
jmp
mov
mov
push
pusha
pop
and
sub
sbb
lret
sahf
jo
mov
int
push
sbb
adc
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
