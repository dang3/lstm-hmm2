test
add
inc
inc
pop
add
xor
and
sub
orb
or
add
add
imul
inc
add
or
add
adc
and
add
and
adc
popa
add
or
popa
xchg
inc
or
add
mov
push
jno
addb
and
inc
xchg
mov
push
popa
and
sub
andl
mov
and
and
pop
and
add
ret
nop
inc
add
or
lret
push
add
lods
and
xchg
dec
jo
popa
add
movsl
adc
dec
test
or
push
add
inc
add
add
and
or
adc
add
inc
add
push
mov
add
inc
and
inc
add
addb
and
add
mov
add
inc
sbb
and
add
add
inc
inc
add
or
or
roll
ret
dec
loopne
add
addl
sbb
add
and
mov
mov
inc
xchg
and
and
lret
xor
rolb
dec
push
bound
add
add
sbbl
sub
push
add
add
add
push
add
add
add
and
push
inc
add
add
push
adc
add
and
andb
sub
add
lcall
mov
inc
adc
les
adc
mov
and
push
or
sbb
sub
xor
test
mov
inc
sbb
or
adc
shlb
pusha
rorb
adc
add
and
add
push
or
and
cmp
add
or
inc
adc
add
pusha
add
andl
adc
sub
dec
push
les
mov
add
adc
or
add
add
and
jecxz
or
mov
add
and
enter
dec
add
add
lds
andb
add
stos
inc
add
inc
add
inc
sub
add
or
pop
add
add
add
push
enter
add
mov
enter
adc
inc
in
inc
add
and
or
adc
adcb
add
adc
add
add
dec
or
sub
adcb
jo
pop
roll
add
or
jb
test
add
rolb
inc
push
add
add
add
sbb
add
add
add
pop
cltd
xor
inc
inc
push
or
mov
add
imul
and
sub
adc
add
and
push
and
and
or
add
ficoml
add
or
adc
add
add
inc
inc
jne
mov
or
nop
add
add
inc
or
rorb
add
inc
pusha
inc
bound
lock
add
add
mov
sbb
inc
mov
add
add
ret
xor
test
nop
add
sub
loope
inc
add
mov
rorb
adc
inc
andb
or
add
addb
push
enter
pusha
jo
rorb
mov
and
adc
mov
lock
pusha
and
xor
or
or
dec
add
push
mov
cs
add
xor
loopne
mov
sbb
inc
add
add
xor
sub
add
inc
add
sbb
or
addl
add
sub
inc
sbb
and
push
push
add
add
inc
inc
or
push
mov
test
push
pusha
or
add
inc
roll
in
add
shlb
add
rolb
cmp
add
orl
push
movsb
adc
jo
test
add
dec
cmp
add
add
add
adcb
and
popa
add
add
or
add
dec
push
inc
or
or
add
addb
add
add
add
pop
or
rolb
add
add
or
add
andb
or
enter
or
push
xor
jne
mov
add
xchg
adc
and
enter
js
mov
add
inc
sub
xchg
add
popa
and
bound
add
inc
loop
pop
adc
add
push
add
add
add
or
subb
mov
les
inc
sub
cwtl
add
cwtl
addb
inc
add
cwtl
sarb
and
rolb
orb
and
inc
add
add
inc
or
movsb
add
mov
scas
and
inc
pushf
xor
adc
inc
andl
add
or
or
dec
inc
movsb
add
and
add
inc
add
subb
cwtl
and
adc
sub
xor
rclb
add
add
or
push
pushf
sub
add
add
sub
or
inc
adc
or
mov
sbb
add
dec
and
movsb
xchg
add
sbb
add
add
xchg
jp
add
mov
add
dec
adc
or
add
and
js
mov
inc
test
push
lret
leave
inc
adc
add
xchg
adc
add
or
and
popw
pop
add
sub
and
and
pusha
mov
inc
movsb
push
push
shlb
xor
add
and
and
mov
inc
dec
in
nop
dec
popa
and
stc
and
cmp
add
int3
add
add
dec
inc
add
adc
or
or
xorb
inc
or
push
dec
or
dec
rolb
and
cmp
ret
add
push
xchg
enter
add
add
add
add
lret
adc
or
adc
mov
adc
adc
xor
addb
inc
add
sub
add
and
xor
andb
and
dec
push
js
popa
and
add
pusha
xor
and
dec
and
add
add
inc
add
add
pop
push
cmp
nop
dec
adc
and
adc
add
dec
add
sbb
add
and
enter
inc
and
add
or
adc
inc
and
movsl
and
jbe
inc
sub
add
inc
or
and
or
andb
add
add
or
add
adc
orl
add
mov
add
xchg
adc
fs
dec
sub
adc
add
push
or
or
and
add
mov
adc
mov
adcb
movsb
sbbb
adc
xor
sub
test
mov
sub
test
mov
add
addb
add
dec
add
mov
add
adc
and
xor
lret
or
and
add
xchg
lar
sbb
add
add
mov
adc
nop
adc
and
pusha
cmp
inc
inc
add
andb
add
lret
sub
adc
lar
inc
inc
loope
add
xor
addb
sbb
or
xor
adcl
and
pushf
add
inc
roll
out
mov
add
addb
or
sub
inc
nop
lds
push
mov
mov
shlb
inc
loop
add
sub
and
inc
add
xor
inc
add
dec
add
pop
and
add
add
xor
add
dec
mov
pusha
adc
add
andb
or
add
mov
or
add
and
xchg
or
xchg
inc
popa
and
test
sbb
dec
adc
adc
imul
adc
nop
enter
add
add
add
and
add
add
add
addl
push
add
add
pop
add
add
inc
add
hlt
mov
jp
or
dec
and
add
add
fcoms
xor
mov
adc
inc
add
add
mov
add
andb
push
and
and
mov
and
loop
pusha
xor
addb
movsl
adc
add
adc
add
shlb
inc
or
dec
add
mov
adc
xorb
and
sbb
inc
add
nop
add
addb
add
sub
pusha
orb
adcb
pusha
xchg
add
and
pop
mov
add
adc
mov
mov
mov
add
dec
xorb
sbb
add
add
add
ret
mov
add
add
add
and
loopne
or
add
add
rolb
inc
or
mov
cmp
adc
out
sub
add
and
or
mov
incb
adc
scas
outsl
pop
or
mov
addb
push
subb
add
inc
add
andl
add
lcall
pusha
sub
add
and
and
xchg
add
add
adc
inc
add
dec
add
add
add
push
jb
dec
add
inc
les
xchg
xor
xor
add
add
adc
adcb
subb
and
bound
add
add
inc
popa
inc
addl
add
mov
adc
inc
or
or
add
add
and
test
push
add
mov
adc
popa
add
andb
ret
les
addb
insb
ret
inc
cmp
add
add
add
mov
inc
enter
lcall
sub
loopne
and
or
add
adc
inc
xchg
addb
and
and
cmp
add
xor
mov
add
sbb
and
and
or
add
push
add
or
or
pusha
andb
aaa
pop
add
pusha
jo
loop
add
add
add
add
or
inc
add
sub
or
xor
inc
test
add
adc
sub
add
enter
adc
sbb
add
xchg
and
xchg
xchg
add
add
subl
inc
pop
sub
add
xchg
inc
add
mov
shrb
addl
inc
cmp
add
rclb
pop
add
inc
pusha
inc
inc
pop
and
adc
adc
stos
inc
cwtl
rol
and
push
roll
inc
rolb
add
sub
sub
and
addl
xchg
dec
inc
pop
nop
bound
and
mov
andb
mov
adc
and
add
inc
push
addl
addl
adc
add
inc
dec
popa
insl
and
mov
sub
inc
add
mov
js
xchg
push
and
mov
sub
inc
inc
adc
inc
sub
add
rcrb
mov
pop
or
add
mov
add
add
les
inc
jo
ret
xchg
add
mov
int3
dec
add
shl
test
add
cli
addb
or
mov
xor
adcl
loop
add
mov
add
add
andl
add
xor
adc
nop
add
inc
lret
and
lret
or
xchg
add
add
push
inc
and
lds
jno
and
test
int3
dec
pusha
adc
adc
add
cmp
inc
add
add
mov
add
arpl
sbb
orb
inc
adc
and
add
sbb
inc
add
xor
mov
test
add
shlb
add
push
rolb
or
sub
add
lds
dec
add
adc
rolb
add
or
add
mov
sbb
inc
push
add
dec
sub
or
or
add
xchg
and
addl
test
push
add
and
push
ret
add
add
and
or
and
add
push
xorb
jo
push
sahf
inc
fs
push
inc
adc
push
orb
inc
sub
mov
mov
subb
add
dec
add
sbb
adc
adc
or
cmp
jo
orb
mov
mov
or
addb
adc
dec
rolb
popa
sbb
sbb
and
addb
xorl
or
adc
arpl
add
and
pusha
push
or
add
add
add
adc
or
add
inc
or
gs
test
add
dec
andb
add
pop
andb
inc
and
push
jo
sub
inc
gs
lea
xchg
push
test
add
pusha
add
and
add
addb
loope
cwtl
add
add
xor
sub
and
nop
mov
adc
inc
add
mov
add
or
xor
add
add
inc
pop
add
add
nop
movsb
and
and
adc
add
jo
add
sub
orb
adc
dec
mov
inc
dec
and
cmpb
add
rcl
adc
mov
add
rorl
and
adc
addb
or
add
inc
icebp
add
add
push
add
adc
dec
and
add
add
add
cmp
popa
and
add
adc
or
adcb
add
inc
mov
mov
xlat
xor
add
add
ret
or
push
add
orb
xchg
add
mov
fadds
adc
adc
sbb
pusha
push
test
sbb
adcb
lock
mov
push
add
and
add
sbb
and
or
xor
add
addb
add
pop
lods
sbbb
les
or
test
mov
push
test
push
inc
ret
test
leave
sbb
push
add
jo
call
add
inc
xor
xchg
orb
adc
add
and
cmp
dec
mov
add
adc
rolb
add
push
add
or
push
add
inc
inc
and
add
inc
lds
adc
xchg
and
xor
pop
xor
and
add
adc
add
adc
adc
add
dec
and
leave
xorb
and
loopne
shlb
adc
add
add
add
add
addl
push
add
sbb
add
adc
add
sub
add
xchg
and
push
roll
dec
orb
dec
addb
sbb
shrb
add
add
add
push
sub
inc
add
add
inc
add
xchg
add
add
mov
mov
orb
mov
inc
repnz
add
or
add
add
sub
push
add
or
pusha
add
and
gs
and
xchg
and
pop
add
inc
add
cwtl
or
add
rolb
pusha
and
inc
adc
inc
add
add
es
inc
adc
cwtl
add
nop
sub
cwtl
addb
push
or
inc
sbb
orb
add
and
add
xor
mov
add
add
inc
rolb
add
mov
sbb
lret
sub
mov
pop
inc
add
inc
add
dec
add
pop
inc
or
or
add
addb
add
inc
and
adc
add
cwtl
xchg
add
or
add
add
adc
andb
adc
xor
mov
push
and
or
add
addb
dec
adc
mov
push
or
pushf
nop
xchg
xor
dec
add
lods
or
add
and
add
add
adc
nop
and
popa
add
add
or
inc
add
inc
lcall
addl
jo
inc
adcl
add
loopne
or
inc
dec
and
mov
mov
das
add
push
inc
add
or
les
adc
adc
mov
xor
clts
add
adc
or
pusha
call
and
mov
or
and
inc
enter
push
jnp
mov
test
popa
and
jo
xchg
mov
push
cmp
and
add
addb
or
test
addb
add
or
or
dec
xor
rorb
adc
addb
push
sub
add
add
add
and
add
or
sub
cmp
adc
add
pop
adc
push
inc
add
inc
mov
add
inc
call
bound
add
add
mov
mov
inc
add
rolb
or
add
inc
add
add
pusha
add
nop
add
dec
test
andb
pop
mov
enter
add
or
add
addb
loope
inc
mov
or
inc
popl
inc
mov
test
or
or
and
sbb
add
nop
add
dec
mov
add
inc
add
mov
nop
or
adc
add
addb
xor
add
and
add
imul
add
inc
sbb
and
sbb
loopne
and
xor
and
mov
add
add
mov
inc
add
shlb
push
inc
or
and
andb
add
orl
shrb
sbb
add
add
or
pop
push
add
inc
cwtl
sub
sbb
adc
push
push
add
add
or
add
push
or
mov
or
or
inc
add
inc
adcb
jecxz
add
add
add
and
or
add
sub
add
pop
inc
add
push
or
or
add
pusha
xor
addl
or
insb
adc
pusha
mov
bound
dec
or
add
add
andb
add
and
add
or
addb
add
js
adcb
addb
or
mov
enter
xor
xchg
inc
mov
xchg
jecxz
and
or
add
or
push
test
sub
add
inc
inc
inc
xchg
push
sbb
add
inc
test
or
pop
add
andb
add
sbb
add
add
andl
add
mov
add
add
add
add
sub
mov
add
test
orb
add
inc
test
mov
add
or
mov
add
enter
add
xchg
and
or
adc
js
xchg
insb
sub
inc
add
add
test
dec
orb
xchg
rclb
add
add
pop
add
inc
cltd
adc
add
dec
add
adc
movsb
mov
inc
inc
and
add
or
and
adc
push
add
dec
sbbb
add
pop
add
or
add
add
add
scas
adc
xchg
and
mov
add
les
inc
and
mov
imul
loope
push
inc
jp
xor
add
and
inc
or
adc
mov
addb
test
xor
or
add
inc
fsubs
add
icebp
cwtl
add
addl
and
cmp
sbb
sub
or
push
test
pop
adcl
adc
push
inc
sbb
rolb
xor
sbb
sbb
mov
adc
add
and
and
inc
dec
xor
or
and
ret
add
add
add
inc
ljmp
inc
and
dec
inc
or
orb
nop
xor
or
rorb
inc
inc
and
mov
add
inc
fcmovb
add
rorb
inc
inc
add
mov
aam
add
add
or
add
push
add
add
mov
inc
adc
add
xchg
pop
add
add
inc
add
cwtl
add
orb
lock
add
push
nop
sub
inc
add
jno
mov
push
and
or
sbb
adc
addb
sbb
and
or
sub
adc
xchg
and
adc
add
mov
add
and
pop
add
add
lcall
push
add
mov
xorb
adc
sbb
add
sbb
adc
add
adc
sbb
mov
sub
addl
inc
test
addb
sub
add
or
or
add
or
nop
and
add
jno
xorb
add
loopne
ret
addb
mov
adc
push
and
or
adc
fs
push
adc
shlb
push
add
or
add
add
mov
inc
adc
rolb
dec
call
andb
sbb
ret
cli
pusha
and
addb
sbb
nop
add
or
push
addl
or
and
add
inc
or
and
add
andb
or
test
sub
adc
nop
adc
add
and
dec
andl
test
xchg
rolb
mov
sbb
inc
dec
or
add
and
adc
add
adc
add
inc
and
or
add
sub
mov
mov
push
xor
mov
xor
rcrl
add
add
orb
sub
push
add
and
addb
push
add
adc
inc
sbb
rolb
push
add
orb
and
add
or
add
mov
adc
dec
and
subb
push
inc
mov
or
add
mov
or
and
xchg
add
add
add
and
pop
add
subb
adc
or
inc
add
add
and
and
and
add
inc
add
rcrb
and
add
cmp
ret
and
lock
inc
or
or
sub
lret
popa
xor
adc
orb
add
push
andb
and
inc
inc
add
andb
and
or
inc
sub
sbbb
add
sub
add
sub
add
adc
xorb
js
add
sub
inc
mov
and
bound
cs
or
add
mov
test
adc
or
xorl
add
popa
or
and
adc
hlt
adc
or
movsl
mov
mov
push
adc
mov
adcl
cwtl
mov
pop
inc
lods
sub
andl
push
adc
adc
adc
add
adc
xor
pop
inc
add
add
xchg
add
or
nopl
movsb
nop
add
ret
adc
add
addl
or
and
or
call
inc
add
pop
xor
add
add
sbb
add
and
add
push
push
adc
add
push
or
or
add
ret
adc
add
add
pusha
sbb
add
or
inc
and
call
and
inc
or
add
push
call
sub
or
sub
insb
or
add
inc
adc
add
and
push
inc
push
add
shrl
ret
dec
add
add
mov
and
or
add
add
add
adc
add
xor
or
mov
or
mov
repnz
add
or
sub
mov
add
or
inc
add
rcll
shll
test
sub
add
and
sbb
add
sub
lea
addl
inc
add
and
add
mov
leave
addl
adc
adc
sbb
sbb
push
sbb
mov
xchg
pop
and
sub
shlb
add
add
fs
sbb
add
add
mov
addb
or
xchg
mov
addb
and
inc
or
sbb
inc
lahf
or
movsb
sbb
orb
inc
or
test
adc
add
adc
sub
nop
xor
pusha
add
add
add
mov
popa
sbbl
lcall
adc
push
add
push
add
or
push
add
add
add
popa
lock
inc
push
inc
mov
add
xchg
xchg
push
inc
or
adcb
es
adc
add
leave
add
add
xor
add
xor
mov
andb
xor
adc
add
add
jo
sbbb
and
cwtl
sbbb
cwtl
add
add
popa
and
adc
add
nop
add
adc
xor
jo
add
add
push
add
nop
xor
adc
dec
xor
add
cwtl
push
addb
inc
adc
and
pusha
add
sbb
or
sbbb
or
adc
add
add
add
and
ret
test
add
adc
or
adc
inc
or
mov
push
xor
dec
or
add
add
add
xchg
pop
pusha
nop
lret
add
or
and
add
push
add
mov
pop
xchg
adc
cmp
or
test
adc
or
sbb
xor
orb
rcl
or
nop
adc
add
add
or
push
and
sub
add
inc
pushf
or
add
sub
adcb
addb
addl
add
add
or
pop
pusha
dec
adc
or
push
add
add
add
pusha
pop
ret
rclb
adc
add
loope
and
add
dec
and
add
inc
pop
lcall
or
and
stos
adc
add
mov
and
mov
sub
dec
adc
push
sbb
and
add
loope
or
sub
or
or
and
les
adc
and
test
add
sub
add
int3
xchg
and
and
add
add
add
and
or
or
or
push
test
and
fs
pop
jno
add
rolb
and
inc
pop
inc
and
add
adc
or
aaa
popa
push
add
add
adc
mov
sbb
or
or
mov
mov
add
dec
addl
movsb
movsb
or
ret
mov
shlb
andb
pop
adc
or
adc
push
add
add
or
adc
add
fs
adc
push
xor
mov
nop
mov
lock
jo
dec
dec
mov
add
bound
or
push
lret
add
add
mov
adc
or
adc
add
inc
and
sub
addl
add
sbb
add
or
inc
addb
add
stos
mov
add
inc
andb
add
or
dec
xchg
or
subb
subl
add
test
add
add
loopne
shlb
or
and
js
add
and
pop
add
and
mov
andl
or
adc
inc
xor
add
mov
xorl
sub
add
and
and
or
and
popa
mov
mov
add
inc
inc
or
add
add
add
adc
pusha
add
dec
inc
add
sbbb
or
inc
add
sub
add
and
pusha
and
add
popa
xchg
add
or
sbb
add
sbb
and
pop
add
nop
or
push
loopne
adc
data16
add
add
mov
or
inc
add
adc
cltd
adc
or
and
adc
xor
adc
or
loopne
pop
inc
push
loopne
add
add
shlb
sbb
add
dec
andb
andb
adc
inc
mov
orl
inc
or
inc
add
add
and
and
and
cwtl
add
add
add
push
add
fadds
add
orb
add
or
inc
mov
xchg
add
stos
add
and
ret
pop
add
or
adc
and
inc
and
add
cwtl
mov
xor
call
and
adc
add
add
add
mov
add
and
or
push
add
xor
adc
rcll
push
and
inc
and
orb
int3
add
mov
and
fsubs
addb
adc
inc
add
add
rolb
xor
push
stos
and
or
xchg
add
add
add
sbb
adc
and
out
xor
inc
lods
cmp
xor
or
popf
and
or
addr16
push
inc
dec
adcl
les
push
adc
mov
roll
inc
add
movsl
sbb
pop
adc
inc
sbb
mov
push
pop
and
pop
dec
bound
or
or
or
orb
cs
subb
sub
add
inc
and
dec
add
popa
add
addb
xchg
or
add
ret
or
adc
add
inc
add
adc
inc
add
inc
xor
inc
and
add
dec
add
cmpsl
cmp
xchg
sub
add
or
and
add
adc
or
imul
or
nop
dec
or
inc
sbb
push
and
mov
inc
inc
mov
adc
cmp
add
add
mov
xor
adc
xor
dec
xorb
inc
push
inc
mov
and
push
push
dec
and
mov
or
and
or
mov
xor
add
and
bound
inc
add
rorb
inc
dec
and
add
add
add
lds
mov
and
mov
movsb
xchg
ret
mov
mov
add
or
shll
and
add
xchg
add
and
addb
xor
adc
mov
dec
mov
sub
bound
test
subb
rolb
xor
push
or
inc
add
subl
xchg
nop
sub
test
add
add
addl
adc
or
popa
inc
inc
pop
inc
add
add
lea
xor
mov
enter
xchg
or
orb
adc
push
add
xor
add
call
enter
xor
or
mov
enter
sbb
gs
inc
add
sbb
dec
add
inc
adc
dec
dec
cltd
xor
adc
add
movsb
addb
and
add
add
xor
and
popa
sub
adc
add
add
test
adc
and
inc
shl
insl
and
push
adc
and
adc
xor
add
or
dec
and
and
daa
add
mov
add
loopne
xor
and
inc
add
add
push
add
add
mov
adc
dec
leave
add
and
dec
add
sbbb
and
or
add
dec
and
or
addb
shlb
addb
add
and
add
add
xorb
add
xor
add
cmp
sub
inc
add
add
mov
add
add
push
add
cwtl
add
or
mov
push
add
pop
sub
pusha
nop
mov
add
in
addb
xchg
add
mov
adc
insl
xor
sub
rorb
and
add
add
or
sbbl
or
mov
adc
clc
mov
or
and
cltd
or
es
lea
les
push
add
addb
add
sub
je
sub
adcl
xorb
addb
xor
addb
adc
pusha
and
add
dec
or
cwtl
add
push
adc
xor
inc
andb
test
inc
push
add
xor
mov
add
inc
addb
sbb
add
push
add
add
and
add
dec
xor
add
dec
and
and
adc
and
xor
loopne
aam
nop
dec
das
or
or
add
ret
lret
and
inc
add
push
cmp
or
add
adc
and
xchg
add
inc
or
inc
adcb
orl
mov
loope
cs
rolb
rolb
or
inc
test
mov
sbb
inc
or
xor
or
or
or
add
pop
add
pusha
dec
add
add
jge
sub
add
mov
adc
mov
add
adc
add
and
sbb
add
jo
add
add
add
add
xor
add
adc
or
mov
addb
xchg
and
sbb
or
add
add
add
add
adc
add
and
mov
or
add
add
adc
push
add
orb
mov
dec
push
pop
loope
push
enter
orb
inc
add
sub
xor
bound
add
add
sub
xor
xor
xchg
adc
sub
add
cltd
add
inc
sub
push
add
shll
add
or
mov
sbb
add
sbb
add
adc
mov
nop
pusha
push
test
and
add
adcb
mov
or
and
mov
sbb
adc
add
or
xor
roll
xor
test
mov
popf
popa
and
sub
add
adc
nop
or
adc
add
push
mov
inc
and
andl
adc
test
add
inc
add
inc
sbb
dec
or
add
adc
adc
test
push
add
or
add
adc
add
adc
add
adc
or
inc
push
xor
adc
and
mov
pop
add
or
imul
add
or
adc
sbb
dec
orb
add
sub
adcb
adc
adc
add
or
cwtl
push
add
adc
sahf
rolb
xor
add
add
inc
ss
add
addb
sub
or
je
add
es
orb
orb
mov
add
add
adc
or
add
and
add
or
adc
nop
xor
pop
adc
inc
mov
mov
xchg
or
or
pusha
or
add
add
adc
adc
mov
and
add
add
addb
ss
lret
gs
xor
lock
xor
adc
add
pusha
and
add
or
pop
sub
or
sub
add
dec
inc
and
and
add
mov
push
or
push
dec
and
or
or
add
or
xor
cwtl
mov
and
subb
sbb
jns
inc
adcl
adc
adc
add
and
push
push
rolb
adc
push
adc
mov
inc
sbb
fisttps
add
or
dec
push
js
adc
sub
or
dec
add
ds
adc
imul
call
adc
pop
or
adc
add
adc
movsb
add
adc
test
or
adc
push
add
test
mov
and
or
mov
adc
add
add
add
or
pop
xchg
out
push
pop
dec
fwait
andb
push
or
inc
dec
adc
mov
and
or
sub
add
or
add
sbb
add
inc
orb
mov
or
pop
or
adc
inc
sub
adc
or
add
aam
add
or
sbb
andb
add
les
add
pop
adc
add
or
lods
mov
xorl
inc
cwtl
pushf
add
adc
and
or
into
pusha
add
sbb
test
and
add
addb
les
inc
add
add
add
orl
adc
mov
xor
cmpsb
inc
dec
inc
in
mov
or
push
or
addl
shlb
or
add
add
push
add
xorl
adc
push
add
jo
add
adcb
adc
or
test
mov
or
rolb
inc
or
add
add
inc
cwtl
pusha
pop
add
sbb
add
or
add
inc
add
and
or
add
inc
ljmp
add
add
and
add
add
add
or
mov
inc
or
jo
or
add
inc
sub
and
push
push
rolb
test
xor
das
or
lcall
and
add
and
addb
addb
adc
rclb
xchg
push
add
adc
popa
addb
push
add
push
sbb
add
xorb
orb
and
or
adc
and
mov
jns
inc
inc
and
and
add
xor
adc
add
sbb
inc
add
dec
inc
dec
mov
add
add
andb
inc
addb
or
sbb
add
nop
nop
sub
add
add
lock
and
add
xor
xor
adc
push
add
push
cwtl
adc
inc
inc
and
adcb
add
and
dec
add
rorb
dec
adc
add
add
or
add
orb
inc
or
xor
add
add
adc
adc
and
add
push
or
add
add
add
shlb
nop
cwtl
push
and
or
cmpb
and
add
add
add
addb
add
imul
dec
push
add
add
or
rorb
data16
cmp
sbb
add
push
pop
add
orl
lock
and
inc
or
mov
adc
mov
sub
add
add
and
push
mov
add
sub
mov
push
adc
xchg
add
sbb
inc
inc
movsb
loopne
add
inc
mov
and
or
add
add
sbb
addb
inc
or
pusha
mov
add
inc
inc
add
adc
adc
add
cmp
add
and
xor
and
nop
inc
add
addb
addl
inc
add
adcb
pop
adc
add
inc
xor
add
mov
inc
add
inc
test
add
sbb
add
add
jns
adc
add
and
add
cmp
inc
dec
xor
sarb
adc
cmp
mov
add
inc
add
inc
add
xor
or
inc
mov
scas
mov
add
or
add
sbb
test
sub
dec
add
roll
or
or
popa
and
sub
addb
orb
adc
or
bound
sbb
add
inc
adc
loope
or
sbb
xor
orb
add
add
cmp
and
cmp
ret
or
pusha
add
mov
movsb
jle
dec
add
add
push
add
add
or
add
add
fadd
and
inc
and
cltd
mov
addb
or
imul
cmp
cmp
pop
mov
add
add
xchg
push
or
push
and
or
adc
repz
inc
add
adc
add
sub
dec
inc
push
subb
rolb
add
cwtl
mov
subb
sbb
test
sub
in
or
addl
or
adc
popa
add
push
cmp
add
add
inc
or
or
out
add
inc
add
sub
pop
xor
sub
adc
mov
push
add
add
inc
add
pop
inc
subb
add
adc
inc
or
xor
adc
inc
cwtl
adc
movsb
nop
add
inc
add
sbb
inc
xchg
and
adcb
xchg
mov
add
popa
add
add
add
push
test
dec
xor
addb
dec
subb
mov
push
or
push
and
add
mov
call
add
or
add
inc
add
add
add
push
dec
andb
sub
mov
add
and
and
or
adc
add
push
add
xor
add
add
push
push
add
and
push
andb
push
pop
mov
add
add
and
xor
push
or
adc
pushf
and
and
adc
dec
add
or
push
adc
nop
add
or
add
and
xor
sbb
inc
adc
xorb
lods
or
adc
inc
add
dec
adc
push
or
add
xor
stos
gs
or
or
mov
sub
add
and
aaa
push
rcll
add
roll
add
add
add
inc
add
add
push
or
dec
dec
andb
mov
add
inc
add
and
xor
mov
xor
push
loope
addl
add
add
xor
mov
adc
mov
dec
leave
rcrb
add
add
and
addb
inc
sub
add
nop
dec
inc
adc
sbb
jo
add
and
add
add
and
xor
nop
addl
add
add
dec
add
mov
push
adc
add
ror
and
add
sldt
add
movsl
ss
inc
add
lea
add
adc
cmp
mov
add
adc
push
sbb
inc
test
or
adc
rolb
add
pop
mov
add
mov
adcb
and
push
dec
or
add
add
adc
adc
push
sbb
and
add
add
adc
adc
sbb
and
add
push
add
xchg
push
fmuls
inc
add
add
xor
add
adc
inc
or
push
add
clc
sub
or
mov
mov
add
mov
push
rolb
and
add
inc
pushf
add
inc
xor
add
and
inc
or
xchg
or
pop
pop
adcb
lcall
pop
and
add
push
push
or
bound
pusha
andb
add
lock
add
sbb
stos
adc
and
add
xor
leave
add
jmp
sub
pop
push
sub
mov
nop
add
adc
enter
xor
adc
add
adc
add
mov
push
inc
add
adc
add
and
inc
addb
rclb
lret
add
push
and
add
mov
inc
add
es
and
inc
rolb
rol
or
test
add
add
inc
imul
adc
addb
orl
add
ror
and
adc
test
mov
add
or
roll
inc
or
adc
add
addb
and
loope
inc
mov
adc
mov
add
and
les
sub
add
loope
and
mov
rclb
mov
add
adc
mov
add
faddl
addb
add
nop
push
or
orl
adc
sub
pusha
mov
and
add
sbb
sub
rorl
inc
push
test
adc
or
addb
test
nop
add
adc
sub
subb
push
adc
sub
addl
add
push
inc
dec
add
inc
add
dec
addb
sub
inc
add
inc
add
and
inc
adc
add
js
push
add
add
arpl
gs
add
dec
addb
inc
xchg
xchg
and
adc
andb
addb
adc
sbb
popa
cmp
pop
or
add
add
add
and
mov
orb
add
add
push
add
dec
orb
add
and
xchg
subl
adc
add
xchg
adc
flds
adc
or
adc
add
sub
adc
xor
adc
roll
add
inc
dec
or
or
add
add
inc
dec
nop
dec
and
xchg
dec
roll
inc
adc
add
xchg
add
rolb
sbb
add
xor
add
sub
adc
sub
adc
andb
inc
jb
sahf
mov
push
pop
bound
stos
add
or
inc
nop
cltd
mov
add
rcl
add
adc
push
add
and
push
or
dec
rolb
adc
mov
and
lds
inc
nop
leave
add
rcrb
or
cmpsb
pop
bound
adc
add
dec
adc
mov
add
pop
add
add
push
dec
inc
adc
or
sub
add
xor
add
mov
rcll
and
lret
xchg
add
add
and
xor
ret
push
add
dec
push
and
add
dec
push
add
add
subb
add
stc
rcrl
mov
add
les
add
add
inc
pop
add
or
xchg
inc
sbb
adc
adc
and
or
rolb
andb
adc
inc
inc
or
cmp
nop
popa
add
mov
and
add
add
nop
push
inc
adc
movsb
or
push
adc
and
nop
sbb
sbb
or
addb
add
add
inc
add
add
dec
sub
and
and
dec
mov
mov
or
and
add
jl
or
rcll
add
or
inc
and
mov
and
popa
addl
test
add
and
xchg
sub
add
push
jno
add
add
fs
add
dec
dec
adc
cld
push
add
adc
add
push
sub
add
inc
mov
inc
or
nop
sbbb
add
add
adc
inc
jno
add
and
rclb
add
out
inc
adc
sbbl
dec
inc
add
and
or
mov
add
shlb
rolb
dec
inc
rcll
inc
aam
add
andl
addl
add
andl
add
xor
and
fsubrs
push
dec
or
pusha
add
orl
inc
sbb
pusha
push
pusha
and
and
inc
add
sbb
xor
nop
inc
addr16
add
bound
push
orb
add
sbb
add
push
bound
ret
cltd
and
add
ret
sub
add
xchg
add
and
mov
add
mov
and
icebp
add
pusha
add
mov
arpl
or
adc
or
adc
add
add
adc
cmp
push
or
add
push
addb
add
add
add
adc
add
adc
adcb
add
or
add
inc
add
rorb
inc
xor
test
mov
mov
inc
cmp
dec
or
loopne
and
add
add
addb
sbbb
nop
or
and
add
add
add
inc
add
orl
or
and
adc
add
nop
push
and
cltd
add
inc
les
adcl
adc
addb
add
add
rclb
call
add
pusha
xchg
inc
add
adcb
adc
add
mov
add
addb
add
push
add
sbb
inc
add
inc
add
or
jbe
push
pop
mov
push
and
adc
cwtl
dec
add
mov
add
rolb
and
lock
add
les
orb
add
out
orb
add
subb
add
add
and
pusha
add
push
icebp
and
dec
add
roll
xchg
and
xor
or
inc
addb
add
add
add
mov
add
add
or
add
add
or
andb
jne
or
add
inc
add
jns
add
or
add
add
add
add
sbb
and
inc
add
dec
or
or
add
add
xor
mov
add
and
add
jb
adcl
orl
inc
insb
adc
adc
sbb
and
add
and
adc
call
add
push
add
dec
add
add
sbb
and
and
inc
and
addb
xor
add
inc
or
add
sub
or
add
mov
enter
sbb
lds
push
lret
add
mov
add
adc
inc
sub
add
and
addb
inc
mov
es
add
adc
add
add
addb
or
add
add
add
add
sbb
add
mov
nop
adc
nop
loopne
adc
and
addb
adc
add
mov
add
add
add
or
addb
add
add
shlb
inc
xchg
add
xor
add
inc
add
xchg
xor
add
xchg
movsb
pusha
test
add
gs
adc
and
add
add
adc
add
or
adc
adc
roll
inc
or
add
dec
addl
inc
xor
add
add
adc
adc
and
and
or
addb
or
addb
rclb
or
inc
add
add
sub
or
adc
addl
adc
add
adc
adc
add
inc
dec
or
add
add
adc
add
and
push
add
add
mov
add
mov
add
sbb
add
inc
add
add
or
and
xor
and
adc
adc
inc
inc
add
xchg
nop
add
add
sbb
adc
adc
inc
or
add
or
and
or
cwtl
and
sbb
data16
add
and
enter
and
add
push
pusha
imul
sub
lret
push
and
or
add
push
dec
push
add
inc
addb
add
or
dec
or
xor
and
stos
add
adcl
adc
jno
add
inc
push
addb
inc
movsb
or
add
sbb
add
inc
inc
test
and
inc
push
roll
or
addb
test
add
adc
test
add
nop
orb
or
addb
or
test
adc
adc
or
inc
push
and
add
or
or
or
add
xchg
add
gs
subb
add
sub
and
inc
add
adc
add
add
add
sub
add
add
add
ret
adc
rorb
inc
adc
add
add
add
add
add
mov
sbbb
pushf
add
add
add
add
inc
addb
or
inc
roll
sub
sbb
sub
inc
and
lcall
or
shlb
add
sbbl
adc
add
add
add
add
add
pop
or
add
or
and
or
jbe
add
push
imul
push
or
add
add
add
add
jo
add
add
adc
add
sbb
roll
add
add
sarb
nop
int3
inc
and
add
inc
and
adc
inc
add
and
add
test
or
inc
add
inc
add
sbb
add
add
add
or
cmp
addb
loope
or
bound
add
add
adc
add
dec
adcl
add
ljmp
sbb
push
xor
inc
add
add
inc
adc
test
adc
and
and
or
push
add
add
or
adc
push
add
inc
ret
add
mov
inc
and
sub
dec
add
and
add
pusha
add
add
add
add
add
dec
rolb
and
loope
test
or
sbb
mov
add
addb
fs
inc
into
and
add
pop
nop
adc
add
addb
add
and
sub
add
add
cmp
add
or
or
les
add
adc
movsb
or
inc
or
inc
inc
adc
or
add
lods
inc
inc
add
xchg
loopne
test
arpl
xor
add
add
add
inc
sub
addb
add
loopne
add
add
or
add
dec
inc
inc
mov
add
inc
add
push
addb
mov
add
add
add
and
inc
or
andl
addb
add
inc
dec
add
inc
add
adc
jo
adc
orb
add
inc
add
push
lcall
add
test
dec
inc
or
add
mov
add
add
add
mov
add
add
add
adc
add
add
add
adc
adc
push
and
roll
inc
orb
add
adcb
or
inc
add
addb
add
add
dec
and
or
add
add
add
adc
add
add
add
add
add
mov
sub
sbb
addb
or
add
adc
add
call
add
add
mov
inc
or
add
adc
or
adc
or
dec
and
add
or
inc
or
addb
add
add
add
add
add
or
and
add
addb
and
add
add
mov
adc
adc
adc
add
adc
and
add
add
sbb
add
sub
add
add
loope
adc
add
imul
add
add
inc
addb
cwtl
or
adc
add
and
lock
lock
movsb
add
add
add
add
add
popa
inc
and
and
push
adc
bound
and
lea
or
add
inc
add
pop
push
add
mov
mov
and
dec
mov
inc
add
arpl
inc
add
add
add
inc
inc
nop
ret
addb
add
sub
addb
inc
andb
inc
xor
es
inc
add
adc
add
push
add
and
adc
or
push
add
adc
add
xor
add
subl
adc
inc
mov
mov
add
add
nop
add
inc
inc
inc
add
addb
add
or
add
sub
add
add
add
add
pop
add
cmp
inc
add
add
and
dec
mov
test
adc
nop
leave
add
dec
add
add
inc
and
andb
or
mov
and
xchg
add
cmp
sbb
add
inc
or
and
add
push
and
orb
inc
add
push
inc
and
add
leave
shlb
loope
and
add
cmp
and
popa
and
add
add
add
gs
adc
add
add
add
add
jno
add
add
add
and
addb
push
test
add
add
add
xor
adc
inc
and
mov
test
pop
adc
sbb
add
adc
sbb
inc
inc
add
mov
call
or
mov
sbb
lret
adc
dec
addb
adc
movb
mov
add
inc
add
sbb
inc
addb
inc
add
addl
add
add
cwtl
or
sbb
inc
sbb
xchg
mov
or
add
add
popa
add
add
or
push
add
popa
mov
add
inc
add
xor
add
add
add
add
add
addb
add
or
inc
add
sbb
add
xorb
adc
add
enter
in
xorl
xchg
lcall
adc
dec
or
add
and
adc
or
adc
add
cs
rolb
cmp
push
add
mov
addb
mov
popa
or
sub
mov
inc
add
add
add
sbb
and
or
and
sbb
push
cmp
add
adcl
xchg
inc
add
or
dec
add
mov
dec
add
add
adc
sub
add
adc
sub
and
add
inc
mov
sub
inc
add
add
loopne
inc
adc
mov
and
dec
add
inc
add
sub
add
cmp
adc
addb
add
adc
mov
add
add
add
add
movsb
add
add
mov
add
mov
adc
add
add
adc
add
dec
bound
and
add
adc
add
add
and
add
mov
or
mov
inc
call
add
or
adcl
or
add
add
add
sbbb
nop
and
adc
test
and
inc
mov
ret
add
add
inc
add
add
push
xor
add
add
xor
rolb
or
add
enter
add
add
add
add
adc
adc
add
mov
addl
mov
pushf
nop
mov
mov
inc
pusha
test
cltd
inc
xor
add
and
push
mov
and
add
popa
adc
inc
mov
test
and
addb
mov
add
loopne
test
add
xchg
adc
adc
inc
add
sub
add
xchg
adc
add
addb
inc
add
popa
inc
add
inc
mov
add
add
or
add
add
add
and
add
sub
inc
pusha
rolb
inc
and
jo
or
dec
add
lldt
add
push
inc
adcb
dec
adc
or
add
int3
rorb
adc
jo
add
inc
add
add
pusha
or
inc
inc
add
popa
add
push
or
add
adc
add
dec
nop
and
pop
adc
add
add
test
xor
or
inc
test
or
or
jp
test
or
sbb
inc
imul
and
inc
and
add
test
add
add
adc
xor
add
and
andb
add
and
inc
push
adc
push
add
add
add
add
push
nop
test
adc
xchg
and
add
add
popf
dec
add
dec
or
adcl
add
add
sbb
add
sbbb
add
add
xorb
add
push
add
add
add
and
addb
add
add
mov
or
or
add
pusha
push
add
add
out
or
dec
sbb
nop
addb
add
and
add
add
pop
adc
add
sbb
add
inc
add
and
rcll
add
dec
add
and
and
inc
addl
inc
add
orb
add
push
and
and
in
push
adc
add
pusha
inc
sub
subb
or
inc
add
or
add
inc
xchg
adcb
add
nop
add
add
add
mov
inc
or
jecxz
and
inc
roll
add
and
mov
adc
inc
fs
or
mov
roll
bound
add
sbbb
mov
cmp
test
inc
add
sbb
or
or
inc
and
inc
add
jge
add
addb
addb
inc
sub
or
inc
xor
and
push
mov
cwtl
pop
and
mov
call
add
push
add
and
add
mov
inc
add
inc
adcb
add
inc
pop
andl
add
add
add
or
add
add
and
addb
add
add
and
inc
adc
and
and
add
loopne
add
add
addb
add
xorb
and
sub
add
push
addb
pop
sbb
and
and
and
push
or
inc
add
addb
add
inc
add
add
push
dec
add
or
shlb
sub
or
orb
pop
adc
adc
mov
adcb
add
or
xor
xchg
lods
rclb
add
and
add
rcll
add
addb
addb
add
add
add
push
dec
nop
add
add
les
mov
inc
add
and
add
pusha
add
add
add
test
lea
add
add
push
add
test
add
add
or
add
add
inc
add
dec
inc
add
add
or
adc
inc
or
inc
push
xorb
dec
add
inc
dec
and
and
adcb
xorl
push
inc
or
subb
sub
inc
add
add
add
adc
add
or
adc
or
inc
and
adc
mov
add
add
dec
popl
xor
adc
addb
dec
addb
and
add
orb
add
and
add
adc
and
adc
adc
or
mov
add
add
and
dec
dec
or
adcb
adc
add
sbb
or
adc
test
add
pop
inc
add
sbb
inc
add
addl
push
add
mov
add
mov
add
add
inc
add
add
les
add
and
add
add
add
cmc
push
adcb
test
xchg
ljmp
push
lret
int3
mov
pop
sbb
test
jl
test
repnz
outsb
aam
mov
pusha
insw
push
mov
addr16
push
fs
sub
jno
daa
adc
jae
arpl
fcmovbe
jno
jne
add
mov
add
push
outsb
sbb
out
jne
adc
subl
gs
out
sub
je
dec
pop
inc
or
add
imul
mov
or
loopne
jmp
dec
mov
fiaddl
jns
fcmovnbe
adc
fcmovnbe
jno
ficoml
lret
fcmovb
in
sub
jno
gs
in
fcmovbe
jno
and
jo
fisubrl
xor
jp
aam
hlt
xor
mov
rorl
jno
out
out
jecxz
fcmovbe
jno
scas
fsubr
aam
pusha
imul
jno
push
fidivl
mov
dec
test
mov
out
out
iret
out
lahf
add
test
inc
inc
sbb
sbb
rcr
data16
or
sahf
xchg
dec
sahf
jl
shrl
bound
add
aad
inc
push
xlat
outsl
pop
adc
les
fistpl
jno
and
push
jns
fcmovnbe
cmovns
jb
fisttpl
iret
fiaddl
adc
dec
jns
sarl
out
arpl
gs
add
sub
shrb
repnz
fistpl
jmp
xchg
mov
rcll
dec
jno
xchg
into
call
or
into
jno
dec
ljmp
repnz
ljmp
adc
aam
dec
test
ljmp
pop
stos
dec
inc
xchg
jno
dec
push
jae
lcall
aam
xchg
jne
add
pushf
jmp
xlat
jno
push
xchg
jns
nop
inc
fcmovu
jmp
xlat
jno
push
xchg
jge
xchg
fisubrl
sahf
mov
rol
dec
and
xlat
xorl
lret
call
gs
frstor
lds
aam
sub
fsubl
mov
fcmovbe
jno
test
outsb
pop
pushf
pop
lret
data16
push
mov
mov
mov
insb
cltd
out
lahf
mov
loopne
aam
sbb
loope
dec
inc
std
mov
ljmp
test
icebp
pop
fsubr
cld
into
out
adc
adc
xlat
sahf
jb
adc
aam
dec
test
popa
gs
pop
into
jne
pop
mov
mov
jno
in
test
jbe
jno
addr16
jno
fisubl
and
xchg
rol
xchg
fcmovb
mov
jecxz
xor
out
add
test
cwtl
jno
out
lods
lds
repnz
and
adc
push
inc
xchg
adc
inc
aam
xor
pop
jno
rclb
into
addr16
fistpl
outsl
xchg
cltd
inc
out
daa
aad
dec
jecxz
and
fadds
into
push
shrb
or
or
pop
or
out
jno
adc
pop
dec
mov
fiaddl
xorl
out
aam
push
cmp
mov
jno
addr16
or
aam
iretw
inc
aam
jno
sti
dec
sub
repnz
aam
push
inc
mov
shll
jg
out
loop
xchg
jno
repnz
aam
dec
sub
and
out
leave
xchg
jno
fiadds
xchg
jb
inc
aam
test
aam
mov
xlat
sti
jecxz
jecxz
aam
dec
sub
dec
and
push
fimuls
testl
inc
shll
fcomi
jecxz
repnz
xchg
ret
sbb
jl
jno
lahf
push
nop
ret
bound
aam
aam
and
jb
std
pop
pop
xlat
sti
jecxz
xor
dec
sub
iret
push
bound
aam
aam
ficomps
jge
pop
jae
fistpl
jno
push
call
sbb
fidivl
lahf
push
mov
lcall
aam
popa
imul
jno
into
popf
call
out
out
rorb
push
xor
dec
xchg
rorb
xchg
shl
out
sub
lcall
insb
stos
addr16
pusha
sub
orb
dec
popa
jge
or
and
ss
adc
xlat
jnp
lds
mov
and
inc
mov
mov
lret
xlat
pop
gs
mov
out
mov
add
outsb
mov
mov
out
into
dec
sti
mov
pop
into
jle
cmpl
aam
loop
aaa
mov
out
pmaxub
jno
dec
push
jno
add
aam
rcll
dec
arpl
in
push
shll
sbb
popa
iret
push
cld
roll
pop
ljmp
adc
lahf
out
dec
pop
popa
dec
cmpsl
lret
jnp
fmuls
shlb
outsb
push
shrb
data16
mov
sbb
mov
into
xlat
xchg
imul
xlat
sti
jecxz
jnp
aam
jnp
call
out
aaa
out
rorb
int3
xlat
jnp
test
je
mov
decl
fcmovbe
jno
fwait
dec
cld
lret
xlat
and
rcr
out
xlat
pop
imul
add
les
jo
shrl
jno
fld
cmp
in
dec
sub
xlat
push
rcl
fcmovbe
outsb
push
ss
jno
lahf
out
or
lods
rcr
mov
in
jno
jbe
inc
aam
out
into
dec
xor
dec
mov
test
cmp
popf
sub
mov
into
call
rclb
xchg
push
rcr
jno
jecxz
pop
aam
popa
push
xchg
jno
fcmovbe
stos
mov
jno
fcmovbe
adc
sbb
jno
fisubrl
cmp
mov
pop
ljmp
pushf
addb
je
insl
lret
imul
jo
sbb
stos
fcmovnbe
mov
jo
rorl
push
sbb
mov
popa
mov
outsl
or
dec
push
lea
pusha
repz
and
jno
sub
imul
int
addr16
xchg
push
inc
ficoml
xchg
loop
addr16
jle
outsl
into
lods
adc
pop
sahf
adc
jecxz
xchg
mov
int3
fstps
dec
fistl
mov
pop
adc
rcrb
cmc
nop
cwtl
mov
push
mov
insb
push
jbe
orl
outsl
lret
add
rcl
or
popl
rol
mov
lret
iret
nop
xchg
gs
fmul
arpl
cltd
int3
imul
clc
into
xchg
mov
or
pop
int3
xor
xor
jae
pop
pop
mov
xchg
repz
movsl
mov
dec
fadd
dec
push
ja
movsl
push
outsl
les
lea
int3
test
pusha
nop
jae
mov
add
iret
es
cltd
or
data16
cld
ljmp
xlat
inc
ss
xchg
inc
xchg
push
push
adcb
sbb
imul
fwait
cmpsl
push
and
dec
sbb
insl
sub
pop
hlt
jp
dec
jb
jbe
dec
or
pop
lods
cmp
sub
dec
arpl
rcll
sar
rorl
adc
aad
aas
stos
es
rclb
xlat
inc
ret
addl
mov
rorl
jmp
cmp
jno
sbb
cmc
pop
jns
cmp
insl
jecxz
inc
fwait
mov
push
imul
mov
push
in
out
sarb
lea
rcll
cmp
mov
lret
jne
test
adcl
shrl
dec
rorl
js
mov
jne
aam
or
dec
popa
jbe
add
pushf
inc
ficoml
sbb
mov
mov
cmp
dec
mov
jno
lds
out
mov
adc
lahf
jl
mov
shll
mov
xchg
test
sbb
insl
test
cmpsb
mov
adc
xchg
mov
popa
aam
add
mov
xor
iret
fisubl
je
pop
fs
cld
xorl
ficoml
sub
jno
pusha
outsb
bsf
out
mov
icebp
arpl
cmp
call
shrb
stos
pop
jno
in
call
imull
xor
inc
xor
adc
jno
outsb
aam
mov
xor
cli
mov
pop
dec
add
scas
inc
int
insl
scas
jge
inc
jl
insb
clc
jo
fdivrl
xchg
lcall
aaa
shrl
loop
fxch
dec
dec
add
ljmp
sbbb
dec
sbb
mov
mov
sbb
sarl
outsb
xor
xchg
mov
cwtl
jno
mov
mov
push
cs
pop
test
je
fiaddl
aas
jnp
es
mov
jno
int3
adc
loope
add
notb
icebp
xchg
insl
cmpsl
jo
insl
or
and
pop
push
fbstp
and
or
cmp
cmp
out
inc
int
mov
sahf
dec
push
ss
movsb
pop
out
in
es
es
adc
add
dec
mov
pop
ja
imul
jo
xor
loopne
jno
cs
clc
inc
lahf
rcr
sarb
nop
cmp
imul
xor
iret
sub
cli
lea
add
out
add
cld
roll
mov
nop
jmp
pop
out
int
cmp
movsl
js
rorl
shll
imul
icebp
add
int
and
jae
bound
push
aam
jecxz
imull
pop
cmp
push
out
mov
pushf
jle
xchg
clc
jge
sti
insl
fsubrs
jns
adc
or
xor
and
cmp
push
xchg
dec
jp
sub
ds
sub
or
or
ret
cmc
push
aam
test
xor
fcmovbe
sub
js
stos
xchg
imul
ja
shl
mov
xor
mov
pop
pop
std
ror
mov
das
aaa
ret
ficoml
lahf
adc
add
mov
ljmp
inc
inc
mov
lods
in
out
mov
cmpsl
fisubl
sbb
pop
dec
sahf
jno
mov
in
push
inc
jecxz
fmuls
pop
clc
jo
lahf
sub
cld
cmp
xlat
stos
dec
test
sti
rorl
push
jp
int
push
mov
mov
icebp
xor
pushf
pop
adc
dec
cld
sbb
adc
addl
mov
test
in
out
xor
add
pop
dec
repnz
fidivl
aad
pop
dec
scas
filds
bound
ljmp
stos
shrl
add
push
cmp
pop
fldl
fwait
and
mov
push
pop
into
mov
mov
test
lcall
xor
jg
mov
ret
frstor
in
inc
out
dec
jo
repnz
jg
cltd
les
or
nop
dec
scas
jno
dec
rorl
rclb
icebp
shlb
xchg
add
popa
dec
xor
cli
outsb
jmp
mov
push
cmp
fs
aad
icebp
fdivl
push
adc
outsb
test
nop
sbb
fwait
xor
xor
xorl
jmp
jno
cmp
pop
roll
je
cmpsl
fbld
andb
out
adc
sbb
cmp
xor
jp
inc
or
push
ficoms
aam
push
outsb
inc
sti
dec
fcompl
jb
adc
out
inc
xor
es
rcrl
loop
adc
cmp
inc
aam
mov
call
das
ds
jno
lods
pop
ret
inc
cmpsl
loop
add
mov
fcmovu
mov
test
or
xor
xchg
mov
jno
jns
sbb
repz
jp
imul
lea
and
jle
sub
xor
movsl
movsb
mov
xchg
enter
out
inc
shll
xchg
sbbb
sub
iret
mov
out
cld
or
ljmp
fstl
mov
fisubl
mov
dec
jae
mov
fiaddl
sub
outsb
jecxz
jecxz
jecxz
scas
icebp
cmpsb
rorl
cmp
mov
mov
popf
mov
xchg
push
sbb
pop
xorb
mov
dec
aam
ret
call
and
or
jo
rcl
vmwrite
mov
andl
dec
xchg
cwtl
cmp
std
and
imul
or
outsb
jae
and
shlb
adc
sbb
cli
xor
daa
aam
test
xor
fimull
jmp
lea
or
push
pop
pop
jno
sub
insb
aam
dec
lods
xchg
fidivl
shr
lods
into
dec
sub
andb
jp
push
mov
mov
clc
xor
pop
push
push
push
mov
test
cmp
ret
mov
aad
sbb
test
lcall
pop
int3
jno
push
sbb
dec
fidivl
pop
sti
push
inc
lods
adc
mull
cmpsb
sub
mov
fcomi
xor
int3
cmpsl
fxam
fiadds
push
mov
jnp
jno
push
fistl
xor
dec
loop
lods
mov
sub
inc
imul
or
clc
loopne
mov
ds
sti
call
shlb
inc
sahf
cld
xchg
fidivl
add
fstps
js
xchg
xchg
push
dec
rcl
mov
push
xor
je
cwtl
ficoml
adc
xchg
aad
imul
bound
dec
jle
pop
fsubrs
lods
jnp
mov
push
pop
pop
imul
adc
adc
pop
rcll
xor
pop
mov
jo
adc
push
jbe
ss
add
sbb
jmp
leave
lret
cwtl
push
sub
dec
jmp
cmp
cli
adc
repz
jnp
mov
insl
cli
jecxz
adc
inc
mov
out
mov
mov
test
shlb
jno
gs
std
mov
stos
movsl
jns
mov
lcall
fcmovnb
pop
jno
jno
pop
into
bound
lret
inc
and
pop
sbb
or
sub
dec
cwtl
in
shlb
in
jbe
dec
bound
mov
stos
jno
outsb
dec
add
mov
cmp
mov
iret
dec
ret
dec
mov
push
mov
xor
popf
inc
das
mov
rcr
stos
ja
mov
popa
mov
mov
or
adc
loopne
filds
jno
scas
sbb
aam
out
ljmpw
sub
je
sbb
adc
fwait
pop
mov
cmp
xchg
push
icebp
push
jmp
les
es
lea
mov
nop
fst
aam
insl
scas
aad
jl
dec
push
sbb
jno
jb
lea
roll
leave
out
and
es
push
into
inc
ret
jno
stos
pop
cs
ret
push
pop
jbe
lods
adc
jno
hlt
sahf
push
push
icebp
add
push
ror
divl
insl
clc
inc
mov
add
scas
sub
call
repnz
pop
xor
call
fnstsw
or
fdiv
shrl
sub
sbb
pop
or
sub
inc
call
sbb
dec
test
out
stc
push
lods
ret
fidivl
sti
sbb
sub
loop
cmc
repnz
lods
sub
js
fwait
enter
adc
push
je
lret
movsl
jno
lock
das
add
adc
shrl
jl
add
dec
sbb
clc
aad
add
stos
jno
out
jb
xor
sub
jl
mov
jg
sbb
mov
stos
and
icebp
mov
sub
mov
jp
xor
sarl
fnstcw
push
xchg
movsb
es
sarl
nop
inc
pusha
adc
movsl
loopne
fstps
cld
scas
sub
fiaddl
lds
or
cmpsb
push
sub
xchg
push
enter
dec
repnz
aam
ret
cmp
push
or
xlat
xchg
test
insl
loope
sbb
mov
iret
mov
and
arpl
or
ss
or
mov
dec
bnd
in
in
mov
scas
mov
cli
xor
mov
dec
adc
jle
sub
aam
dec
les
fidivrl
mov
pop
sbb
lahf
in
and
mov
sarl
dec
sub
or
add
cmc
jne
jno
imul
mov
mov
arpl
shrl
data16
push
cld
js
xchg
aam
adc
jno
pop
hlt
mov
shll
fwait
cmp
lods
fst
mov
loope
mov
test
out
xor
out
sbb
fiaddl
sarl
out
in
add
fnstenv
scas
mov
adc
inc
sbb
cmp
dec
icebp
push
fimull
and
pop
in
xor
pop
fadd
pop
dec
aas
add
fnsave
push
dec
adc
jmp
pop
xchg
stos
push
jno
jno
shlb
mov
cmp
arpl
pop
pop
fidivrl
inc
and
pop
inc
sub
and
pop
ds
test
jge
add
stos
vpshufhw
movsb
inc
push
inc
cld
mov
aad
repnz
fiaddl
test
shrl
insl
imull
cmp
xor
jno
mov
xor
rorb
cli
fnstcw
xor
movsl
ds
adc
push
lcall
cmpsl
sbb
out
fisubl
mulb
mov
jnp
dec
xorb
or
sti
push
addr16
sbb
mov
shlb
and
nop
push
cmpsl
rorl
loope
adc
test
imul
cltd
push
mov
int
pop
mov
pop
int3
gs
sbb
popf
push
fistpl
sub
adc
call
das
xor
cltd
icebp
ret
js
fmuls
sbb
pop
pop
xor
xchg
movsl
xchg
or
mov
aam
out
jne
push
mov
loopne
mov
sbb
push
les
call
leave
push
add
fisubl
subb
pop
out
pinsrw
xchg
push
push
or
es
movsl
je
xchg
leave
xchg
jecxz
test
lods
fld
jns
fisubl
dec
iret
leave
and
movsb
adc
xor
xchg
les
rorl
adc
mov
vpmullw
jl
mov
jno
sbb
sub
jmp
push
cld
js
push
stos
popa
cmp
pop
test
insb
pop
cltd
dec
mov
push
mov
sbb
or
jnp
ficoml
shll
or
mov
mov
inc
cs
jae
lods
push
leave
or
mov
mov
pop
push
ror
push
xchg
ljmp
sub
into
jne
xor
xor
push
out
es
mov
pop
rcll
cmp
jl
aam
loope
fs
pop
sbb
cli
sti
xlat
mov
js
lock
not
aam
sub
test
loopne
xchg
mov
fcmove
scas
xchg
mov
pop
push
std
movsb
call
jb
in
cwtl
xlat
jbe
out
ljmp
pusha
fidivs
aam
pusha
outsb
jmp
fisubrl
clc
sbb
push
pop
xchg
jmp
fucom
ftst
lahf
loop
jno
add
leave
data16
orb
aaa
xchg
mov
daa
add
push
xor
sub
test
mov
fildl
cmc
aam
pushf
xor
sbb
addb
stos
push
aam
cmp
insl
cmp
aam
cwtl
filds
mov
or
lods
enter
xorb
adc
cmp
lock
or
sbb
dec
xchg
js
fisubl
test
stc
aad
test
insb
ret
pusha
stos
sub
out
fnstenv
test
out
f2xm1
shlb
sbb
fstp
imul
iret
lods
lock
dec
std
cmp
repz
xchg
push
sub
add
fwait
int
aam
fidivrs
xor
gs
in
pushf
icebp
sbb
addl
jno
iret
xor
lret
in
cwtl
loop
dec
and
adc
mov
rclb
scas
hlt
jnp
push
jno
cs
mov
out
mov
bndldx
jp
xor
jno
push
cmp
shll
shll
xchg
lret
mov
jnp
mov
jns
push
xlat
shll
adc
lret
mov
xchg
fs
or
xor
push
ret
sub
stos
xor
cmp
jno
lret
ficomps
inc
lods
fucomip
into
xchg
inc
stos
shld
addr16
pop
add
aaa
fdivp
mov
jo
mov
mov
cmp
hlt
push
int3
scas
lcall
pop
sbb
add
xchg
and
add
lea
mov
jg
cmp
lods
sbb
cld
addr16
jo
pop
aam
movsb
in
mov
ficoml
add
popa
cmp
add
fidivl
push
push
shrb
jno
mov
daa
fisubs
jno
ret
mov
jbe
push
inc
push
scas
test
in
fidivl
pop
jecxz
ds
push
jno
sbb
mov
imul
lods
movsb
push
xchg
inc
adc
mov
cmp
mov
js
jno
pop
mov
in
sbb
cmpsb
mov
cltd
ficompl
pop
lret
pop
adcb
lret
cmpb
mov
sbb
mov
call
jl
in
rdpmc
cmp
jno
scas
inc
mov
mov
sti
pop
dec
jbe
movsb
jno
lahf
into
and
aam
sbb
in
fs
rcrl
push
push
sbb
jle
out
jno
repz
adcb
cwtl
adc
icebp
push
xchg
pop
insl
aas
ficoms
out
dec
mov
sarl
cmc
pop
or
dec
cmp
int3
push
push
xor
inc
add
out
fidivrl
pusha
pushf
data16
xor
aad
xor
xor
js
push
ja
lret
or
dec
cmp
mov
fcmovbe
mov
jmp
jno
mov
push
mov
enter
mov
insb
jno
jmp
jmp
aam
test
out
or
mov
mull
xbegin
rcll
xlat
xchg
mov
lock
add
push
int
sbbl
sbb
mov
and
lret
cs
pop
lock
jp
test
popf
mov
sbb
rcll
out
jnp
cs
fcompl
xchg
mov
sub
inc
or
mov
push
mov
mov
mov
inc
nop
jb
adc
xor
or
adc
int3
adc
gs
andb
aas
out
sub
lahf
rcrb
xor
pop
jae
pushf
andl
cmpsb
adc
mov
insb
mov
imul
out
jle
cmp
insb
jmp
hlt
shrb
cmp
mov
idivl
lock
adc
and
jae
rcl
cmp
in
imul
in
les
jno
push
push
loope
jg
jp
leave
jno
sbb
imul
scas
push
nop
dec
fisubl
sbb
cmpsb
int
rolb
imul
ljmp
cmp
adc
jb
push
push
lret
lock
icebp
sub
mov
jbe
testl
shl
lock
add
aad
into
imul
imul
jg
clc
xor
addr16
negl
dec
jno
test
or
rorl
bnd
dec
pop
ficompl
sub
aad
or
fmul
xor
jo
jo
push
fwait
out
mov
cmp
cmp
shrl
mov
xchg
pop
int3
orb
jmp
jl
inc
leave
push
xlat
add
jbe
pushf
shll
shll
xor
popf
xor
mov
mov
jb
std
xchg
ficompl
jbe
dec
shll
inc
add
in
fcmove
cmpsl
repz
jae
stos
adc
cmpsb
and
in
je
cmp
sub
push
call
test
stos
cmp
or
sub
nopl
cmp
mov
jno
mov
data16
std
hlt
jbe
mov
movsb
jbe
cmp
popa
rolb
push
push
mov
mov
mov
loopne
inc
dec
idivb
sub
dec
pop
fcompl
addr16
leave
jno
leave
out
push
mov
sub
push
lods
dec
or
xchg
xor
sbb
push
and
cmp
xor
inc
mov
mov
aas
mov
mov
sahf
push
js
ja
imul
cmp
loop
dec
rorl
test
aad
sub
cmp
leave
fists
mov
push
push
imull
fisubrl
push
pusha
movsl
outsl
rclb
fcoms
inc
mov
inc
clc
add
mov
adc
xchg
fsubrs
jae
mov
insl
and
mov
push
out
das
aad
cmp
jns
es
push
jno
loope
shrb
mov
shl
mov
xor
out
sub
jno
shlb
loopne
cmp
pop
rcrb
orb
imul
sub
xlat
adc
inc
mov
mov
ja
mov
dec
adc
repnz
lar
nop
out
in
jno
aas
pop
cmp
mov
inc
sbb
xchg
insl
leave
in
fcmovu
cmpsb
popf
sti
push
jmp
xor
xor
cltd
ficompl
testl
pushf
adc
xchg
mov
sub
pop
xor
outsb
int3
sub
cmp
push
jno
jo
push
cmpsb
jns
in
out
popf
and
inc
std
test
inc
push
in
add
dec
shll
pushf
in
dec
pop
cmpsb
adc
shlb
mov
xchg
pusha
push
mov
addr16
jno
roll
adc
jo
shlb
bound
repnz
pop
ds
xchg
stc
loop
scas
cld
pop
scas
jno
out
mov
data16
mov
xor
jno
mul
pop
scas
fldt
mov
xchg
repz
inc
sti
pop
mov
ret
adc
shlb
mov
aam
into
push
cmp
dec
arpl
std
mov
mov
pop
jg
fcompl
out
mov
sbb
out
and
add
fstpt
xor
push
sub
fadds
ficomps
lret
mov
ficompl
data16
sub
rorl
popa
ds
mov
mov
int3
dec
xchg
mov
inc
cmpsb
mov
xor
pop
dec
jnp
sbb
and
pop
pusha
ja
lret
sbb
or
cs
test
loop
ficoml
jmp
sbb
mov
xor
dec
jno
sbb
outsb
mov
lods
adc
push
gs
outsb
mov
jno
jnp
jmp
mov
into
mov
xchg
jg
add
inc
sub
jae
iret
js
scas
push
and
fisubrl
movl
pop
arpl
sbb
out
push
sbb
pop
jno
iret
adc
ljmp
and
das
cld
notb
shlb
sahf
push
loope
cmp
push
push
xor
and
jno
xchg
cli
mov
jmp
daa
add
cltd
or
inc
ja
push
pop
test
adc
movsl
jno
fnsave
shll
or
dec
jne
push
movsb
cmp
int3
enter
vorps
repz
divl
lahf
ret
xlat
andl
pop
inc
aad
push
adc
mov
cmp
jle
ret
sarl
lcall
rorl
das
lret
nop
mov
push
jp
sub
cwtl
shll
jns
jne
das
mov
sbb
aas
out
dec
push
aaa
mov
jno
dec
sbb
pop
and
cmp
loopne
scas
repnz
sub
pop
inc
es
ja
pop
insb
enter
push
repnz
shll
mov
inc
nop
shr
popf
jmp
xchg
and
pusha
adc
push
mov
adc
fsubl
xchg
divl
addr16
jle
repz
lret
das
stc
xchg
jp
data16
test
xchg
sub
sarl
or
scas
xor
clc
rcrl
rolb
fsts
mov
aam
int
ja
dec
popa
mov
xchg
jne
fistpl
pop
pop
pushf
mov
outsl
adc
mov
out
lret
out
aad
mov
jle
stc
mov
into
cwtl
push
clc
je
fdivrl
mov
or
inc
fisubrl
std
rolb
mov
mov
add
shr
jbe
jbe
fidivrl
js
or
push
dec
push
in
or
mov
mov
xchg
pushf
shll
in
add
dec
rclb
inc
shl
sbb
cmpsb
add
nop
adc
pop
lcall
cmc
mov
jmp
ret
xchg
aam
adc
out
mov
xor
push
addb
push
jmp
nop
add
test
adc
cmc
jne
cltd
push
xchg
mov
inc
add
sbb
inc
lock
iret
addr16
or
pop
inc
ss
adc
mov
mov
push
fmull
jp
sub
ja
cmp
cmp
ret
insb
lds
test
jo
loope
insb
push
dec
insb
test
mov
xchg
add
popf
sub
clc
dec
pop
xor
cmp
push
xor
popa
mov
jno
mov
mov
pop
aam
mov
mov
mov
in
push
idivb
sbb
repz
lds
mov
jmp
add
je
adc
setnp
inc
mov
xorl
or
pop
loop
inc
adc
insl
fcmovbe
xchg
mov
out
jl
sbb
iret
pushf
outsb
jmp
mov
or
push
insb
adc
push
lods
xlat
mov
loop
mov
inc
jmp
mov
leave
int3
or
or
xchg
fmull
mov
int3
pop
ret
mov
and
pop
and
xor
push
call
add
stos
mov
inc
int
mov
cli
mov
and
rolb
pop
mov
int3
aas
shll
push
les
adc
call
jno
adc
or
and
dec
addb
jno
dec
insl
mov
inc
rcrb
adc
inc
cwtl
xor
std
notl
call
int3
jmp
aaa
dec
mov
and
jecxz
lods
lcall
shll
pop
mov
jmp
iret
fsub
sarl
aam
xchg
outsb
rclb
jle
jno
and
inc
pusha
pop
fcompl
aam
or
mov
test
pop
mov
enter
in
fidivl
dec
jns
inc
jge
and
outsl
aaa
int3
cmpsl
sub
inc
inc
inc
fdivrs
or
lods
ja
arpl
jmp
mov
adc
shrb
pop
ds
fsubrs
push
mov
xchg
push
aad
xor
idiv
xchg
dec
aam
or
sti
stc
test
sbbw
and
mov
movsb
jno
mov
shrb
cltd
cltd
push
adc
cmp
mov
es
lods
adc
ds
sub
pop
hlt
imul
sub
adc
push
xlat
mov
fisttpl
ja
adc
lret
fidivrl
fisubrl
push
jle
or
dec
pop
inc
daa
mov
and
stos
jecxz
int3
ror
testb
mov
js
ss
inc
dec
call
icebp
pop
mov
out
add
scas
lret
in
ljmp
xchg
ret
lea
fidivrl
and
js
jnp
jo
dec
lcall
and
les
push
insl
out
pop
or
mov
sub
test
or
ljmp
mov
adc
xor
addr16
xchg
xor
cmpsl
xor
pop
fnstenv
jae
xchg
jne
mov
jno
out
cmp
pop
movsb
ror
pand
cmc
mov
mov
or
jno
in
cmp
sub
sub
lret
sbb
jnp
imul
pop
sub
loopne
jo
test
in
icebp
cld
adc
add
repz
push
int3
cmpsb
jmp
shll
es
lods
aad
fs
jns
lret
lods
iret
cld
sarl
arpl
ficoml
sub
aaa
bound
mov
shlb
push
jle
movsb
mov
scas
test
jg
inc
jl
pop
jno
push
lock
xor
jb
iret
dec
cmp
and
andl
ja
jno
repz
fisubl
or
rcrb
scas
imul
xchg
mov
pop
mov
aad
cmc
aad
and
add
jl
pop
insl
push
mov
aam
mov
leave
pop
fnstcw
and
test
add
ljmp
fsts
fisubl
in
inc
aas
and
fidivl
cmp
jae
pop
out
in
aad
jnp
aam
mov
and
and
cmc
and
lods
mov
inc
xor
fcmovu
fstpt
ljmp
daa
add
outsl
inc
dec
aam
jns
adc
inc
fidivs
fisubl
add
mov
rcrl
mov
test
push
je
shll
jge
or
shl
roll
mov
pop
pop
in
sbbb
insl
test
es
jbe
and
sbb
stos
sub
and
adc
mov
xor
testl
adc
imul
cltd
xor
in
cmp
inc
jl
outsb
fcmovnu
jbe
push
mov
adc
std
outsl
jge
notb
leave
xchg
mov
xor
shlb
jno
jo
pop
cld
stos
adc
mov
aas
mov
push
adc
adc
sub
jbe
cltd
push
sbb
inc
js
or
int3
add
push
int
cmpsb
or
xchg
shrb
push
imul
xchg
mov
jnp
xlat
xorl
inc
ljmp
loop
pop
and
push
mov
lahf
cltd
add
or
lea
adc
rep
pop
push
push
push
xor
in
sahf
imul
popa
sahf
inc
mov
addr16
mov
adc
adc
pop
stos
ret
xor
test
xchg
dec
push
mov
hlt
adc
scas
ficompl
mov
cmp
pop
lea
mov
xchg
and
pop
clc
int
orb
push
push
fimuls
fcoms
arpl
lret
push
adc
call
xchg
sbb
pop
outsb
or
into
sbb
aad
idivb
jb
jno
int3
pop
in
jbe
mov
pop
js
lahf
mov
fisubl
loopne
pop
shll
int3
fbstp
and
ja
rolb
jb
inc
sub
loop
cs
lock
sti
jo
popa
and
leave
push
fbstp
xlat
pop
mov
pushf
fcmove
pop
shll
rcrl
add
xchg
out
in
jo
lods
pop
xor
pop
mov
pop
aam
jp
add
test
loope
sub
xor
and
sub
jecxz
aaa
scas
movsl
dec
or
push
xor
notl
dec
jecxz
loop
and
jno
in
push
adc
pop
mov
shrl
mov
aas
in
push
shll
aam
ljmp
fwait
pop
mov
pop
mov
aam
nop
int
inc
mov
test
sbb
leave
mov
add
fidivrl
jno
popf
sub
inc
or
in
jge
fwait
mov
jo
xor
push
and
ja
push
add
outsl
jno
lea
xor
mov
repz
xchg
cmp
or
mov
iret
pop
sub
jne
jecxz
fcomps
negl
add
inc
mov
loopne
dec
push
neg
xlat
adc
cmc
push
stos
cmpsl
dec
into
xchg
push
mov
push
adc
jmp
cmpsb
xlat
clc
jo
neg
lock
mov
pop
lock
inc
pop
stos
mov
loope
mov
xchg
divl
cmp
into
mov
xchg
push
sahf
repnz
fs
inc
mov
xor
sti
jo
sahf
int3
and
jns
cmpsl
outsb
ffreep
inc
popa
insb
and
mov
out
insl
les
mov
div
pop
xorl
sbb
push
dec
inc
test
shl
jecxz
sub
mov
sbb
mov
das
nop
testl
lock
cld
iret
outsb
add
jo
push
into
orb
jno
sbb
insb
and
mov
pop
sbb
loop
mov
enter
add
push
xchg
in
dec
pop
lret
jno
hlt
add
cs
fdivrl
pop
push
jle
fisttps
cmpsb
cmp
cmpsl
add
push
scas
inc
movsl
out
sub
jle
inc
cs
cs
negb
test
int3
repz
fisubrl
lea
je
decb
enter
push
in
inc
and
addl
dec
adc
jge
dec
lock
dec
jno
outsl
ja
sub
out
mov
push
cmp
ret
xchg
pop
cmpsl
jp
sbb
cld
xlat
loopne
jno
or
loope
mov
test
aas
hlt
stos
shll
es
or
ret
mov
adc
xchg
cltd
lds
arpl
rcrb
xchg
into
pop
inc
mov
jp
mov
neg
icebp
fadds
sub
ds
ja
aaa
enter
mov
inc
jno
push
jo
cmp
and
outsl
loopne
and
jns
and
ret
nop
push
std
aad
shrb
jno
mov
cmp
aam
loopne
ss
add
xlat
add
push
dec
add
and
aam
cmc
fs
outsb
or
or
sbb
rol
mov
xchg
add
jecxz
jno
aaa
mov
call
xchg
test
das
pop
not
fdivrl
call
mov
cltd
ficoml
cmpsb
sub
xchg
ficoml
leave
leave
rcrl
rcrl
faddl
loope
push
jbe
lea
mov
push
cltd
or
sbb
mov
loop
push
push
loop
and
cmp
in
push
mov
in
outsb
outsb
lret
xor
and
lock
test
ja
int3
sbb
xor
or
lea
lods
xchg
adc
out
mov
jno
add
addb
or
mov
fmul
jns
mov
adc
sbb
aam
add
xor
sub
cmp
adc
sbb
lret
addl
adc
mov
fstpl
aam
xchg
outsb
xor
cltd
jno
xchg
and
or
mov
xchg
inc
xlat
rcrl
mov
stc
sarl
dec
or
rorb
rcll
popa
faddp
cmc
popf
sub
xchg
pusha
cltd
and
or
pop
and
jno
shl
mov
cld
in
in
jge
sarl
fidivs
fidivl
sub
rclb
rol
cmp
jl
cld
test
dec
adc
stos
cs
push
add
sbbb
clc
roll
jo
ss
push
subl
xlat
lcall
bound
movsb
inc
mov
jno
mov
pushf
imul
ss
cmpsl
shrl
or
ja
cmpsb
mov
rcl
and
push
aam
pop
lahf
in
aas
pop
shl
ficompl
jmp
arpl
add
push
push
mov
xor
and
xorb
in
js
test
and
rorb
jne
fisubrl
sub
outsl
xor
mov
xor
push
movsl
sbb
fcompl
faddl
xchg
inc
pop
lahf
adc
jg
inc
shlb
stos
rorl
rcrb
dec
mov
gs
jne
jns
shll
sbb
add
mov
push
add
shrl
push
mov
ficompl
mov
movsl
outsl
cs
xor
mov
jno
sbb
pop
mov
dec
dec
out
daa
xchg
shrl
xchg
test
cmp
mov
nop
mov
and
adc
es
sub
pop
lock
push
adc
imul
push
jns
icebp
dec
pop
mov
fistpl
insb
jbe
or
adc
repz
ss
adc
aam
or
sbb
mov
ficompl
xchg
mov
pop
pop
pop
test
aaa
cmp
sub
mov
mov
js
sbb
sti
dec
je
mov
aas
cmpsl
sbb
pop
das
aam
out
xchg
dec
xor
sbb
or
mov
lods
mov
fidivrl
enter
mov
xor
mov
call
inc
mov
aas
outsl
sub
jo
lret
jo
and
shll
ljmp
adc
sahf
dec
mov
sbb
js
pop
adc
into
push
fisubrl
scas
cli
ret
aad
std
icebp
mov
inc
movsb
fcmovb
push
sbb
mov
mov
pop
icebp
loop
jno
xchg
inc
cmp
push
lret
test
int
dec
cmp
jbe
stos
cmpsl
adc
xchg
xchg
pop
jne,pn
stos
xor
test
pop
imul
dec
or
mov
adc
sti
imul
mov
hlt
cld
out
out
shlb
jmp
aad
jnp
lret
dec
cmp
aas
adc
ficoms
jne
ss
test
pop
sub
inc
xchg
dec
jno
mov
adc
pop
fucompp
sbb
lahf
sub
jns
sub
jno
xchg
xor
cmpsb
andb
mov
ret
xchg
push
cwtl
pop
ljmp
int
stos
jmp
pusha
mov
out
or
repnz
add
adcb
fisttpl
mov
mov
mov
lret
bound
divb
cmp
fisubl
adc
sub
testb
cmc
jo
and
test
lret
insb
inc
outsl
pop
and
pop
int3
leave
hlt
adc
xchg
aam
lcall
pop
jae
outsl
jmp
push
push
das
in
sbb
rcrl
jae
adc
rcll
bound
inc
mov
popf
jnp
insl
int
jp
add
leave
es
sbb
lds
jbe
fisubl
pusha
int3
shll
mov
rorb
test
mov
stc
adc
and
lds
inc
push
jno
ficoms
loope
jl
xlat
fisttpl
lahf
pop
in
sub
outsb
pop
arpl
imul
rcll
loopne
mov
cld
movsl
cmc
sub
fistpl
and
mov
pop
lahf
jnp
roll
cmp
ficoms
ret
push
sbb
dec
fiaddl
jecxz
cmp
add
jne
in
cmpsb
xor
dec
add
fdivrl
mov
mov
aas
add
push
mov
push
mov
xchg
dec
push
or
lea
mov
imulb
inc
movsb
push
rcrl
test
and
xor
lret
push
shll
xchg
mov
out
test
xchg
adc
cltd
ficoml
inc
fisttpll
std
push
xchg
icebp
rclb
dec
out
inc
lret
cmp
cmp
ss
xlat
jae
add
in
jnp
mov
ficoml
mov
or
push
jns
lock
fisubrl
ret
sub
sub
sahf
lret
aam
mov
push
xchg
aaa
in
cmp
push
arpl
out
jno
nop
stos
rcrl
cmpl
les
test
pop
fnstenv
or
aam
fwait
cs
leave
fnstenv
out
jno
out
dec
out
mov
arpl
cli
bound
jne
repz
xor
xor
lret
aas
cs
pusha
fisubl
xchg
cwtl
add
mov
ss
mov
jnp
mov
out
ret
adc
out
lods
out
pop
arpl
dec
stos
mov
push
dec
insb
shll
mov
mov
mov
mov
divb
jg
out
push
and
xchg
js
pushf
add
cmp
xchg
and
in
int
jle
test
shlb
test
or
push
sbb
mov
sub
mov
ds
cmp
inc
xchg
imul
adc
add
aad
jne
shlb
lock
shlb
jp
pop
pop
dec
mov
ret
jno
jle
dec
pushf
and
shrb
test
jp
pop
xor
inc
and
or
push
jo
and
push
clc
lock
mov
pop
test
jae
mov
ret
cmc
inc
xchg
and
push
ss
rorb
int
xchg
jecxz
or
push
and
mov
xchg
movsb
mov
in
cli
test
ds
dec
pop
push
dec
sbbb
into
sbb
dec
jle
push
cmc
iret
sbb
mov
push
lret
mov
sti
jo
popa
mov
dec
scas
aam
shrb
js
sub
ficompl
and
push
cmp
icebp
gs
notl
clc
jns
fidivrl
dec
jmp
scas
fs
imul
fidivrl
or
scas
mov
dec
rorb
sahf
imul
xchg
mov
jo
in
xor
mov
arpl
inc
repz
hlt
mov
jge
mov
pushf
in
aam
out
add
push
xchg
mov
push
add
dec
or
test
mov
mov
sub
push
or
fldenv
sti
sarb
shl
aas
jl
out
push
jl
sub
jno
mov
dec
jnp
outsl
aam
inc
sub
pop
daa
mov
or
mov
mov
mov
adc
loop
jno
sbb
in
mov
cmp
int3
daa
xchg
push
push
cwtl
jb
mov
sbb
push
and
sahf
pop
mov
fidivl
mov
fcompl
aam
sub
popf
mov
out
data16
jo
pop
xor
loopne
sbb
jae
popa
scas
mov
fcmovbe
fnstcw
or
add
lock
in
dec
outsl
or
mov
test
aam
jne
insl
arpl
jge
imul
xor
adc
ss
cwtl
out
cld
aaa
xchg
mov
pop
push
jae
out
xor
shll
mov
xor
inc
jle
cwtl
mov
pop
mov
inc
fcmovb
cs
xor
dec
aaa
test
bound
ja
mov
fucomip
lods
cmpsl
hlt
add
roll
mov
and
mov
jecxz
push
sbb
push
sbb
imul
enter
fiaddl
fstpl
xlat
xorl
add
dec
jo
pop
aad
add
jno
push
inc
push
gs
jecxz
aam
data16
dec
cmpsl
scas
inc
rcr
nop
mov
push
pushf
and
sti
inc
push
xor
jns
enter
push
sbb
ret
pop
in
xor
push
jbe
into
stos
scas
mov
movsl
and
mov
in
push
cmp
aam
or
pop
shl
jge
dec
dec
sbb
add
pop
sarl
mov
jo
push
jnp
movsb
dec
jns
rol
cltd
inc
push
pop
jmp
xlat
inc
dec
scas
xchg
sub
aam
movsl
insb
sbb
ficompl
adc
out
mov
and
xchg
push
clc
push
push
jmp
add
decb
pusha
xlat
addl
outsb
arpl
rclb
push
popa
pop
jg
jo
fidivl
mov
jno
add
and
push
orl
or
mov
test
fildl
and
bound
inc
sbb
xchg
push
js
push
cmc
cmp
jno
sbb
lock
adc
jle
xchg
frstor
addr16
adc
negb
cmp
xorl
mov
and
aaa
lahf
addr16
rorl
test
fimuls
rclb
jae
sub
mov
in
test
repz
pop
mov
fst
fcomip
mov
int3
jbe
mov
stc
mov
std
ficoml
add
test
lods
jns
add
sbb
xor
add
dec
mov
xor
int3
adc
xchg
inc
sbb
xor
aam
les
enter
jae
mov
or
sahf
stos
out
mov
or
outsb
ja
push
dec
xor
mov
mov
mov
test
push
sahf
xchg
push
jle
inc
push
sub
data16
and
mov
lds
in
scas
lcall
dec
xchg
cs
jmp
sarl
mov
andl
sbb
aam
xchg
les
cmpsb
mov
or
shrl
xchg
aam
push
cmp
adc
and
dec
aam
rorl
testb
test
je
shr
testb
mov
pop
push
lods
aaa
jg
stos
stos
addr16
cmp
int3
popf
mov
dec
push
movsl
mov
jno
xlat
icebp
mov
testl
cmpl
or
xchg
or
adc
fistpl
out
mov
jo
cli
sbb
sti
pop
pop
aam
sub
dec
aas
fldl
or
ficomps
jl
enter
fiaddl
ret
cmpsl
rorl
ret
xchg
sbb
lret
cmpsl
cmp
sbb
xor
imul
ret
push
data16
test
add
outsb
cltd
and
jo
jns
or
jbe
push
jno
xor
sub
movsb
jl
out
pusha
lret
cmp
enter
mov
pop
in
ja
andb
scas
idivb
lcall
or
mov
cmp
jnp
lcall
adc
mov
mov
cltd
inc
adc
movsb
xor
lods
dec
and
insb
mov
rcl
iret
loop
idivb
cmp
out
aam
cmc
xor
movsl
outsl
add
add
jns
sub
jle
clc
sub
lret
fnsave
pusha
aam
movsl
push
add
dec
cwtl
aad
dec
pop
lds
in
or
jge
leave
stc
sub
shl
xchg
fcmovnb
fs
sbb
mov
xor
dec
mov
inc
insb
dec
push
push
dec
mov
stc
add
xor
gs
scas
test
sub
dec
mov
test
les
pop
lret
mov
or
cmp
jnp
mov
iret
mov
jae
gs
push
sub
out
ds
pop
add
xchg
and
mov
dec
arpl
xor
mov
cmp
mov
cs
mov
loope
and
mov
pop
adc
and
push
xor
enter
mulb
addl
inc
outsl
repz
loope
aas
ljmp
mov
or
cmp
lods
fisubrl
push
jecxz
int3
pop
cmp
pop
pop
push
leave
iret
loope
push
lahf
mov
out
ja
pop
mov
cmp
fsubl
jno
xchg
inc
and
mov
mov
pop
jne
ljmp
icebp
arpl
rcrl
sub
and
int
hlt
lds
mov
aas
fidivl
nop
loopne
mov
cmp
xchg
xchg
les
push
inc
hlt
fsub
iret
sbbl
and
mov
pop
cs
adc
jno
mov
sbb
mov
adc
outsl
jp
in
xchg
cmp
int
push
aam
sbb
dec
sub
aad
das
fnstenv
ja
lahf
xchg
add
shl
xor
mov
fucom
lret
mov
adc
movsb
lcall
and
rcl
adc
outsl
lahf
mov
mov
add
rcrl
jne
rcr
bound
inc
cmp
scas
pop
mov
fsubs
jno
pop
push
in
bound
xor
and
jae
icebp
inc
mov
and
cltd
nop
jge
and
mov
jo
fbstp
push
inc
insl
push
pop
mov
pop
js
fidivl
pop
mov
xchg
out
inc
fidivl
xchg
fwait
sub
lcall
ficomps
mov
pop
out
ret
fidivrl
sti
and
arpl
xor
adc
cld
jo
pop
pop
add
add
lds
cmp
cmpsb
inc
sub
test
js
aam
outsb
adc
dec
cli
nop
fidivs
mov
aad
std
rorl
or
ficoml
mov
mov
or
add
mov
pop
jno
icebp
fnstenv
es
mov
aam
xchg
dec
insb
adc
mov
fidivrs
ficoml
es
adc
cmp
xchg
inc
jne
jno
or
cld
cmp
mov
call
es
loopne
add
add
inc
cwtl
push
enter
lret
sbb
xchg
clc
xlat
sahf
hlt
pusha
loop
jne
fiaddl
outsb
pop
or
lea
jl
or
ficompl
imull
mov
fistpll
cld
popa
fisubrl
and
mov
push
test
mov
and
fnstsw
xor
xchg
push
fdivr
movsb
in
and
pop
xchg
and
cwtl
adc
mov
or
movsb
pop
mov
int
fimull
push
stos
aas
push
push
fs
sbb
or
mov
xor
push
in
lcall
rcrl
popa
adc
mov
inc
jbe
dec
sbb
aaa
aam
rol
mov
dec
jo
fiaddl
shll
inc
out
cli
in
xchg
pop
fldcw
add
ljmp
lods
ljmp
scas
inc
or
lret
cld
out
sbb
loop
mov
lahf
mov
stos
shrl
xor
push
xchg
mov
rclb
push
dec
enter
adc
rcll
jo
mov
add
das
testl
mov
jno
jl
fwait
xchg
imul
scas
mov
test
xor
fcmove
stc
aad
mov
cld
sbb
sub
jno
shlb
outsb
cmp
aad
sub
dec
and
mov
and
mov
aam
or
repnz
pop
imul
stc
fbld
jge
addl
stos
jno
rcll
or
in
dec
push
cmp
adc
dec
mov
arpl
call
and
mov
test
jge
inc
and
mov
hlt
inc
dec
into
insl
or
adc
cmpsl
inc
push
daa
or
and
mov
jno
jno
mov
pop
cltd
lret
xchg
mov
inc
frstor
mov
stos
xchg
push
call
dec
rcrl
push
mov
push
mov
push
shll
inc
or
mov
out
push
fnstcw
cmp
mov
addr16
xchg
rcll
ret
xchg
in
jmp
aad
push
sbb
mov
xchg
js
cmpsb
mov
inc
pop
clc
int
fistpll
aad
or
cli
jp
cli
fisubrl
add
push
out
int
inc
call
lods
rorb
out
cmp
aad
or
je
lds
add
adc
mov
out
stos
xchg
sahf
bound
in
loope
fistl
jbe
scas
mov
sub
xor
or
stos
and
popa
rorl
push
jno
xor
loopne
push
mov
inc
mov
lods
cmp
xor
mov
cld
test
aam
shrb
fidivl
jp
inc
cmpsl
sbb
lret
inc
mov
xchg
outsb
cmp
fprem
icebp
mov
ds
sbbl
add
cmp
in
adc
ret
cmp
rol
dec
dec
jnp
mov
lods
mov
sti
fdivs
lcall
insb
push
mov
jno
or
push
int
bound
inc
add
mov
xor
mov
enter
rol
inc
aad
out
mov
imulb
cmpsb
into
ror
lock
fs
decl
movsb
test
jno
jo
jnp,pt
inc
iret
rcrl
dec
and
lcall
mov
subb
test
es
ret
ficoml
dec
int3
jmp
fdivrl
aam
cld
cmc
insb
add
xchg
fcmovb
int3
push
dec
aaa
adcl
jae
jbe
and
jno
xor
es
rol
adc
push
jno
push
mov
dec
pop
xchg
dec
pushf
xchg
ret
push
lea
notb
fnsave
xchg
or
xchg
in
or
lahf
aad
inc
int3
mov
pop
shrl
pushf
add
imul
clc
xor
dec
dec
aad
repnz
mov
sbbl
sub
pop
lret
int
or
add
sbb
cmp
cmpsb
mov
repz
or
add
sbb
cmp
repnz
sub
fiaddl
cmpsb
insb
jno
lret
sub
aam
mov
pop
cmp
addr16
cld
xchg
icebp
sub
inc
mov
xor
mov
cmp
fisubrl
fldenv
lds
out
test
adc
cmp
sbb
push
sub
pusha
outsl
inc
aam
mov
dec
adc
adc
test
cli
stos
pop
mov
aas
int
popf
dec
sbb
inc
sbb
fidivrs
inc
shl
pop
xchg
xchg
mov
int
gs
xchg
or
pop
push
leave
inc
daa
pop
jno
sbb
leave
shl
sbb
stos
arpl
or
inc
lahf
fdiv
popf
fnstsw
mov
cmp
jno
fildl
jns
xchg
and
jecxz
push
popf
shll
mov
adc
cmp
mov
std
sub
mov
test
jle
xchg
outsb
ss
xor
ss
xchg
adc
pop
jmp
movsb
ret
or
fbld
cld
mov
add
fiaddl
int3
add
and
mov
test
loope
icebp
adc
movsl
fxch
clc
xchg
sub
pop
mov
and
cwtl
fmull
jmp
js
scas
adc
fidivs
in
cmp
mov
orl
xor
jb
test
iret
inc
loop
dec
xchg
pop
xchg
lods
dec
cmpsl
pop
add
fnstenv
int
sbb
leave
insl
ret
fisubrl
andb
xchg
cmp
cmp
or
rcll
stos
mov
ret
pop
and
fisubrl
xor
scas
nop
rclb
adc
mov
fidivs
pusha
pop
mov
hlt
scas
addr16
es
in
inc
pop
or
jo
or
cwtl
cmp
iret
and
ret
mov
aam
mov
cltd
push
lret
jb
ljmp
shlb
jo
out
shl
ljmp
fimull
push
ss
aam
jecxz
or
cli
sbb
fimull
cwtl
mov
mov
data16
cmp
push
les
out
hlt
push
fldcw
sbb
das
sub
fcmove
mov
in
aad
sbb
adc
mov
push
movsl
mov
xchg
cs
or
repz
cmp
test
movsl
add
repnz
or
sbb
sbb
jno
fdivs
sahf
adc
xor
rcl
adc
lea
jno
cmp
pop
cmp
pop
add
lock
loopne
fildl
je
sahf
loope
xor
fs
xor
rolb
daa
and
mov
lods
sarl
mov
cs
daa
adc
icebp
mov
lods
jl
mov
cld
insl
and
test
push
repnz
rol
or
xor
inc
fsubr
bound
cmp
pop
fstl
iret
and
movsb
jo
xor
test
sarb
out
jmp
add
fcmovu
ficoml
xor
ja
xor
jo
das
xchg
fistpll
xchg
fimull
mov
or
enter
sub
push
scas
mov
out
cmc
sbb
gs
inc
sub
push
shrb
testb
jae
dec
push
inc
lock
cmp
add
adc
jno
loope
dec
xor
jg
pop
in
mov
in
scas
jno
push
cmp
pop
iret
sbb
test
les
adc
cmp
xlat
ret
mov
jl
shlb
mov
mov
rol
call
leave
adc
imul
pop
mov
pushf
mov
pushf
xor
lcall
push
fisubrl
jmp
pop
push
and
dec
out
xchg
jno
jno
mov
inc
xchg
shll
test
push
lahf
sbb
mov
fst
pop
outsb
mov
mov
subb
dec
movsl
sub
addr16
adc
push
adc
iret
jae
mov
lret
aas
add
out
mov
arpl
cmp
les
xchg
dec
cld
pop
xor
xor
stos
sbb
cmpsl
sbb
mov
dec
mov
mov
push
jg
cmp
in
mov
pop
shr
push
jns
xchg
stc
fwait
pop
lret
push
jnp
in
jge
mov
and
fsubp
ret
adc
xchg
inc
fistps
jno
ret
xor
rclb
pop
insb
pop
inc
lret
pushl
fimull
adc
ret
jecxz
cld
xchg
or
outsb
loopne
mov
jb
out
test
inc
in
sbb
popa
xlat
rol
orb
out
pop
fimull
sub
mov
lods
xchg
leave
jnp
jno
jns
loopne
inc
movsb
sarl
cwtl
push
ficompl
xchg
and
ljmp
and
pop
inc
mov
cmp
or
mov
or
push
js
shrl
mov
push
mov
adc
mov
push
jno
add
add
not
inc
aam
push
nop
mov
fisubl
imul
rcrl
cmp
in
pop
xchg
fwait
or
mov
pop
fsubrl
sti
leave
dec
orl
icebp
aad
push
sub
ss
lcall
jne
pop
push
rcl
cmp
mov
mov
mov
adc
and
add
add
aad
rcr
xchg
outsl
stos
in
pop
pop
data16
jno
inc
dec
mov
mov
add
sahf
repnz
lcall
adc
sbb
sub
es
aam
xchg
enter
es
cmp
test
ret
das
cmp
xchg
inc
popf
or
aam
inc
dec
popa
add
jl
sbb
mov
and
fstl
lahf
sub
push
pop
lods
pop
scas
add
xchg
cltd
sarl
or
outsb
jno
push
sahf
dec
mov
mov
xchg
xchg
sub
mov
sbb
fistl
jno
inc
fcmovbe
xchg
dec
pop
lods
imul
es
jecxz
rorl
cmpsb
cli
sti
shrl
push
jo
dec
lret
push
fiaddl
insb
jmp
xor
rcrl
inc
daa
jno
lock
dec
push
pop
inc
or
setge
fidivrl
adc
lock
leave
sbb
jge
pop
mov
pop
jno
adc
fidivrl
xchg
cltd
pop
jmp
add
cli
xlat
sbb
mov
inc
int3
mov
call
sti
adc
loopne
lock
movsb
test
insb
and
idiv
sbb
addr16
mov
cmpsl
dec
test
ret
jne
mov
dec
fmull
push
mov
push
iret
and
fs
aas
mov
adc
rorl
jmp
pop
insl
mov
outsl
pop
std
and
insl
roll
ret
sub
mov
adc
fnsave
mov
jns
inc
xor
pushf
push
jno
xchg
sahf
outsb
pop
leave
push
je
mov
mov
xchg
pop
ficoml
adc
mov
jl
mov
aam
mov
test
repnz
adc
enter
popa
lea
outsl
jl
mov
andl
sbb
jge
push
pop
cmpsb
ljmp
sbb
mov
cld
lock
adc
lret
rolb
out
xor
and
adc
repz
pop
jo,pt
arpl
xor
mov
scas
jbe
jl
jnp
loope
outsb
in
sarb
sub
not
and
push
jne
mov
shll
mov
out
lret
mov
pusha
push
jno
addl
rclb
mov
daa
loope
jecxz
mov
addr16
xchg
test
lods
lea
stos
dec
loope
ds
xor
xor
test
aaa
lahf
add
fwait
lahf
stc
enter
pop
out
insl
adc
repz
int3
mov
fs
into
dec
jmp
sbb
mov
ss
push
mov
shrl
sbb
xor
jo
mov
pushf
xorl
or
xchg
jae
jg
out
adc
clc
add
in
sub
push
call
add
push
push
push
push
call
add
push
mov
mov
call
push
mov
sub
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
mov
mov
sub
push
call
add
add
push
call
add
mov
push
push
push
push
call
add
and
call
call
sub
push
push
call
add
mov
push
push
push
call
add
push
push
push
call
add
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
mov
push
push
push
push
call
add
add
mov
mov
push
push
push
call
add
call
push
push
push
push
call
add
cmp
jne
cmp
jne
xor
sub
push
push
push
push
push
call
add
push
push
call
add
sub
sub
add
cmp
jne
sub
push
push
push
call
add
push
push
call
add
push
call
add
add
xor
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
and
mov
push
call
add
push
push
push
push
call
add
mov
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
cmp
jne
and
sub
sub
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
and
push
call
add
sub
push
push
push
call
add
push
push
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
test
jne
test
jne
mov
or
cmp
je
and
add
push
push
call
add
push
push
push
call
add
mov
mov
xor
mov
sub
add
mov
sub
and
cmp
jne
add
cmp
jne
mov
cmp
jne
cmp
je
sub
mov
mov
add
add
cmp
jne
mov
and
mov
add
add
add
or
add
cmp
jne
mov
sub
mov
sub
add
mov
add
or
cmp
jne
sub
mov
mov
add
add
cmp
jne
cmp
je
sub
add
mov
mov
sub
or
add
cmp
je
or
mov
or
mov
add
sub
add
sub
mov
xor
mov
mov
cmp
je
xor
mov
sub
mov
add
add
add
sub
test
je
sub
or
xor
or
mov
sub
and
add
and
sub
add
cmp
je
cmp
jne
xor
add
test
je
cmp
je
mov
mov
cmp
je
sub
add
cmp
jne
and
mov
xor
test
je
sub
add
sub
sub
add
sub
and
and
or
or
cmp
je
and
and
mov
mov
test
jne
sub
mov
cmp
je
mov
cmp
jne
cmp
je
sub
sub
mov
add
mov
xor
cmp
jne
cmp
je
add
mov
push
push
push
push
call
add
call
or
push
push
push
push
push
call
add
sub
push
call
add
push
push
push
push
call
add
mov
mov
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
call
add
and
mov
push
push
push
call
add
add
push
call
mov
cmp
je
add
xor
add
cmp
jne
mov
call
mov
add
push
push
push
call
add
push
push
push
push
call
add
add
mov
mov
mov
or
add
test
je
mov
mov
add
sub
add
add
cmp
je
sub
sub
and
mov
add
mov
add
and
add
add
add
cmp
je
sub
mov
sub
sub
sub
xor
sub
sub
and
or
add
xor
mov
sub
mov
add
sub
mov
sub
mov
push
push
push
push
call
add
push
push
push
push
push
call
add
sub
cmp
je
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
call
add
mov
call
call
push
push
call
mov
mov
sub
add
mov
cmp
jne
sub
push
call
add
mov
add
mov
mov
sub
sub
test
je
mov
mov
or
sub
add
sub
cmp
jne
sub
mov
mov
sub
add
add
or
mov
cmp
je
add
mov
push
call
add
and
add
cmp
je
push
call
add
add
mov
add
xor
push
push
call
add
push
push
call
add
push
call
add
sub
push
call
add
call
push
call
add
sub
push
push
push
push
push
call
add
push
push
call
add
mov
mov
call
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
push
push
push
push
call
add
or
push
push
push
call
add
push
call
add
and
push
push
push
push
push
call
add
call
push
push
call
add
mov
push
push
push
push
call
add
mov
sub
push
push
push
push
push
call
add
mov
mov
push
push
push
call
add
push
push
push
push
call
add
push
call
add
push
call
add
call
call
xor
call
push
push
call
add
push
push
push
push
call
add
mov
sub
push
push
push
push
call
add
add
push
push
push
push
push
call
add
push
push
push
call
add
sub
mov
mov
push
push
call
add
push
push
push
push
call
add
push
push
push
call
add
push
call
add
sub
call
call
xor
mov
call
sub
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
lea
cmp
je
sub
xor
mov
add
cmp
jne
sub
mov
mov
cmp
je
mov
mov
add
cmp
je
cmp
jne
and
mov
cmp
jne
sub
mov
sub
xor
sub
and
xor
add
cmp
jne
mov
sub
sub
mov
and
sub
cmp
je
cmp
jne
mov
xor
cmp
je
mov
add
cmp
je
sub
add
add
mov
and
cmp
jne
mov
mov
xor
sub
cmp
je
xor
xor
add
sub
add
and
cmp
jne
mov
mov
add
add
add
cmp
jne
add
cmp
je
mov
cmp
je
and
xor
and
add
mov
sub
add
cmp
jne
add
mov
cmp
jne
test
je
sub
mov
and
xor
add
sub
and
sub
sub
cmp
jne
mov
sub
or
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
call
mov
mov
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
shr
add
cmp
jne
push
push
push
call
add
push
push
call
add
mov
or
sub
test
je
sub
add
sub
xor
sub
mov
add
sub
cmp
jne
mov
sub
mov
cmp
je
mov
cmp
je
sub
add
mov
mov
sub
add
sub
or
add
call
mov
sub
mov
push
push
push
push
call
add
mov
push
push
push
push
call
add
pushl
push
pushl
call
call
addl
call
push
push
push
push
call
add
mov
mov
cmp
jne
mov
xor
cmp
je
add
add
mov
mov
sub
sub
or
add
add
call
push
push
push
push
push
call
add
mov
push
call
add
push
push
call
add
mov
call
sub
call
call
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
sub
push
push
call
add
push
push
call
add
call
and
test
je
sub
push
push
call
add
push
call
add
cmp
jne
push
push
push
push
call
add
and
call
mov
push
call
add
push
call
add
mov
sub
mov
call
call
sub
add
push
push
call
add
push
call
add
push
push
push
push
push
call
add
and
cmp
jne
mov
push
push
push
push
push
call
add
push
push
push
push
call
add
test
jne
push
push
push
call
add
call
push
call
add
add
push
push
push
call
add
push
call
add
push
push
push
push
call
add
push
push
push
call
add
or
mov
cmp
je
mov
or
call
push
push
call
add
xor
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
call
add
push
call
add
push
push
push
call
add
pop
call
push
call
add
pop
cmp
je
mov
push
call
add
add
push
push
call
add
sub
push
call
add
pop
cmp
jne
test
je
mov
push
push
push
push
call
add
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
add
push
push
call
add
call
push
call
push
xor
mov
add
push
push
call
add
movl
push
push
push
push
call
add
call
mov
add
mov
push
call
add
call
call
cmp
je
mov
and
cmp
je
xor
add
add
add
mov
mov
push
push
call
add
call
call
sub
add
cmp
je
mov
sub
and
mov
push
push
call
add
push
push
call
add
mov
mov
push
push
push
push
push
call
add
sub
xor
sub
and
and
xor
push
push
push
call
add
mov
push
call
add
sub
push
call
add
xor
cmp
je
mov
call
push
push
push
call
add
cmp
je
cmp
jne
mov
push
push
push
call
add
push
call
mov
mov
mov
and
add
or
je
mov
mov
add
add
or
and
cmp
jne
sub
and
sub
addl
or
lea
push
push
push
push
push
call
add
inc
push
call
add
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
call
sub
call
call
cmp
jne
xor
mov
test
jne
cmp
jne
push
push
push
push
push
call
add
sub
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
mov
cmp
je
sub
mov
cmp
je
sub
xor
add
xor
sub
add
sub
sub
cmp
jne
mov
mov
add
sub
add
sub
sub
add
cmp
jne
add
cmp
jne
add
add
mov
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
call
add
push
push
call
add
pop
mov
mov
call
push
push
call
add
cmp
jne
cmp
jne
sub
pop
call
push
push
push
push
call
add
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
xor
push
push
push
push
push
call
add
push
push
push
call
add
push
push
call
add
xor
mov
call
push
call
add
push
mov
mov
cmp
jne
mov
push
push
push
push
push
call
add
push
call
add
mov
push
push
push
push
call
add
push
call
push
call
add
push
push
call
add
call
call
rdtsc
sub
add
mov
add
mov
cmp
jne
mov
mov
sub
cmp
jne
mov
mov
add
cmp
jne
add
cmp
je
cmp
jne
mov
add
mov
cmp
je
add
xor
or
add
cmp
je
cmp
jne
sub
cmp
jne
test
jne
sub
xor
xor
add
sub
mov
sub
and
and
cmp
je
sub
add
add
pop
or
or
mov
sub
cmp
je
sub
add
mov
sub
cmp
je
cmp
je
cmp
je
xor
xor
and
sub
add
add
test
jne
mov
mov
sub
sub
and
cmp
je
mov
mov
cmp
jne
mov
add
add
mov
test
jne
mov
cmp
je
mov
mov
or
test
jne
xor
or
add
sub
cmp
je
mov
sub
or
mov
add
pop
add
pop
mov
and
mov
or
sub
add
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
mov
push
call
add
cmp
jne
push
push
call
add
mov
sub
cmp
jne
or
mov
mov
mov
mov
or
sub
cmp
je
add
decl
add
mov
mov
or
sub
add
and
add
test
jne
sub
sub
mov
mov
sub
sub
sub
mov
subl
mov
mov
xor
cmp
je
mov
sub
sub
add
mov
add
cmp
je
add
sub
cmp
je
and
mov
add
cmp
jne
xor
mov
sub
cmp
je
test
jne
add
add
add
sub
negl
cmp
je
mov
add
subl
cmp
je
sub
add
mov
test
je
mov
or
cmp
jne
add
sub
cmp
je
mov
xor
and
sub
add
sub
add
or
test
jne
sub
jmp
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
push
call
add
push
push
call
add
push
push
push
push
push
call
add
pop
push
push
call
add
pop
push
push
call
add
pop
mov
cmp
je
sub
mov
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
push
push
call
add
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
call
add
push
cmp
je
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
mov
mov
call
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
push
mov
xor
push
call
add
or
call
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
add
push
push
push
call
add
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
push
mov
call
mov
call
push
call
add
call
push
push
push
push
call
add
push
call
add
push
push
push
push
call
add
add
push
push
push
push
call
add
call
push
mov
call
mov
mov
mov
and
add
and
and
sub
mov
mov
or
or
add
add
call
cmp
je
cmp
jne
cmp
je
add
mov
mov
sub
cmp
je
mov
xor
sub
mov
and
sub
sub
cmp
jne
sub
add
mov
push
push
push
push
call
add
push
push
push
call
add
mov
and
mov
test
je
sub
sub
add
test
je
mov
cmp
jne
test
je
sub
mov
sub
add
mov
mov
add
add
add
or
add
cmp
je
sub
mov
mov
sub
sub
add
or
test
je
mov
add
sub
mov
push
push
push
push
call
add
push
push
call
add
mov
push
push
push
push
push
call
add
push
push
push
call
add
push
call
add
push
call
add
mov
xor
push
push
call
add
push
call
add
mov
cmp
jne
add
mov
mov
push
call
add
mov
add
mov
add
cmp
je
sub
add
cmp
jne
add
or
je
cmp
jne
xor
mov
cmp
je
sub
xor
sub
cmp
jne
sub
sub
mov
sub
cmp
je
sub
mov
add
add
xor
sub
add
sub
add
repnz
push
call
add
addl
push
call
add
call
jmp
cmp
je
add
push
call
add
add
push
push
push
push
push
call
add
mov
cmp
jne
test
je
mov
sub
mov
mov
cmp
je
test
jne
cmp
jne
add
mov
mov
sub
add
add
test
jne
mov
pop
mov
sub
and
mov
cmp
je
add
mov
and
xor
add
sub
cmp
jne
mov
cmp
jne
or
mov
add
cmp
jne
test
jne
cmp
je
mov
cmp
jne
or
cmp
jne
sub
sub
mov
xor
add
sub
cmp
je
mov
mov
add
cmp
je
mov
sub
or
add
mov
sub
add
add
sub
sub
sub
cmp
je
cmp
je
mov
mov
cmp
jne
cmp
jne
mov
mov
sub
add
xor
sub
sub
mov
sub
add
and
sub
sub
cmp
jne
sub
xor
mov
mov
add
sub
add
and
pop
mov
pop
mov
cmp
jne
mov
cmp
jne
add
and
test
jne
add
mov
xor
add
xor
and
mov
add
sub
add
add
cmp
je
and
and
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
call
add
push
call
push
push
push
call
add
push
push
push
call
add
push
push
push
push
push
call
add
call
mov
push
push
call
add
push
call
add
push
push
call
add
push
push
call
add
pop
add
mov
sub
push
push
push
call
add
pop
push
push
call
add
push
push
push
push
call
add
pop
xor
mov
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
push
push
push
call
add
push
push
call
add
push
push
call
add
push
push
push
push
call
add
call
add
push
call
add
push
push
call
add
cmp
jne
mov
add
push
call
add
push
push
call
add
push
push
call
add
pop
cmp
je
test
jne
cmp
jne
add
mov
push
push
push
call
add
push
push
push
push
push
call
add
pop
push
call
add
pop
push
push
push
push
push
call
add
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
push
cmp
jne
push
push
push
push
push
call
add
push
push
push
push
call
add
mov
test
jne
mov
push
push
push
call
add
add
push
push
call
add
push
push
push
push
call
add
add
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
push
push
call
add
pop
push
push
call
add
pop
or
push
push
call
add
push
push
push
push
push
call
add
pop
mov
xor
push
push
push
push
push
call
add
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
call
add
push
mov
call
push
add
push
push
push
push
call
add
call
push
test
je
xor
call
xor
push
push
push
call
add
call
mov
push
push
push
push
push
call
add
mov
push
push
push
call
add
and
push
call
add
push
push
push
push
push
call
add
sub
push
push
push
push
call
add
pop
mov
cmp
jne
push
push
push
call
add
pop
sub
pop
mov
mov
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
call
add
push
test
jne
mov
push
mov
mov
push
push
push
push
push
call
add
push
call
add
push
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
cmp
je
call
push
push
push
push
push
call
add
call
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
add
push
push
push
call
add
push
push
push
push
push
call
add
pop
mov
test
jne
mov
mov
push
push
push
push
call
add
pop
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
add
cmp
je
mov
sub
add
push
sub
push
cmp
jne
mov
sub
mov
cmp
jne
add
sub
mov
sub
and
mov
add
mov
and
add
mov
cmp
je
mov
mov
sub
cmp
jne
add
sub
and
sub
mov
mov
or
sub
add
xor
mov
and
and
pop
add
pop
mov
sub
mov
add
cmp
je
xor
add
test
jne
add
mov
cmp
jne
add
cmp
je
mov
mov
add
cmp
je
sub
add
cmp
je
mov
mov
add
cmp
jne
sub
or
and
cmp
je
add
add
mov
add
sub
sub
pop
cmp
je
xor
leave
ret
