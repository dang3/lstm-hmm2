ret
add
xchg
xor
inc
xchg
cmp
sub
out
xor
jb
scas
cli
cld
pop
mov
jns
adc
sahf
cmp
iret
jmp
push
and
pusha
push
cld
out
cld
xchg
jge
idiv
or
fsubl
adc
sete
dec
push
ja
daa
xor
sahf
xor
sub
stc
mov
mov
jo
mov
and
outsb
lock
sub
out
push
lods
pop
negb
in
push
jl
mov
mov
cltd
add
jae
je
movsl
push
xchg
mov
out
lret
fwait
popf
out
push
fsubrp
jns
dec
ret
pop
test
push
aaa
cmpsl
fidivl
cmpsb
add
sti
les
jno
sub
mov
xor
lods
inc
mov
subl
adc
sub
gs
outsb
adc
add
sub
sub
sbb
sarb
out
xor
mov
jmp
lds
data16
dec
mov
stc
sbb
xchg
stc
fistpll
inc
pushf
les
ret
and
fisubl
jg
insb
out
pushf
outsl
rclb
jno
testl
inc
out
scas
mov
je
adc
mov
and
ljmp
mov
jp
ret
cmp
sahf
sub
and
idiv
pop
rorb
push
cmpsb
in
push
jb
loopne
xchg
popf
out
pop
mov
subb
jl
jle
mov
cmpsb
ret
or
outsb
arpl
pop
imul
mov
push
pop
mov
cmp
ljmp
jae
xor
jle,pn
add
stos
cs
push
inc
xchg
nop
inc
sub
out
sub
or
jno
dec
cmp
adc
add
ljmp
xchg
pop
incb
fistpll
cmp
or
pop
push
xchg
xchg
mov
lcall
mov
cmp
push
mov
pop
lcall
and
ds
movsb
sub
pop
test
call
or
add
dec
dec
adc
mov
insl
push
clc
fnstcw
jg
flds
outsb
adc
sbb
mov
push
imul
and
xor
jb
adc
dec
xchg
test
or
sbb
adcl
pop
cmovo
cmpsl
out
bnd
faddl
test
and
jno
clc
lret
pushf
loopne
sub
xchg
test
mov
and
arpl
je
mov
sub
xor
mov
lea
dec
in
jle
and
mov
popf
cvtps2pi
in
dec
out
push
jle
jmp
scas
or
dec
aam
or
pop
push
mov
inc
lods
xor
mov
ljmp
sub
sub
loope
ljmp
cs
sub
rorb
cs
and
sbb
or
popa
jns
mov
or
push
loopne
pop
in
je
mov
mov
mov
jae
cmc
in
iret
adc
int3
ret
pop
popa
into
mov
mov
mov
cmp
mov
aam
scas
gs
scas
icebp
clc
dec
sub
hlt
jo
dec
sub
mov
jecxz
cltd
dec
dec
lods
popa
pop
xlat
mov
mov
insl
add
dec
shll
jmp
cltd
test
xor
push
dec
xor
and
std
popa
adc
dec
sarb
std
imul
data16
xor
jp
xchg
adc
mov
cmpsl
cmp
das
aaa
jns
xor
aam
dec
xchg
sahf
imul
adc
cli
xchg
test
mov
push
push
in
xchg
int3
sbb
in
addr16
out
sti
movsb
ret
or
sub
push
inc
pushf
stos
fisubrs
in
pop
ljmp
push
div
andb
mov
jmp
std
add
loope
jp
jne
dec
addr16
mov
jp
add
dec
imul
sbb
pop
cli
xchg
add
mov
call
aam
dec
dec
js
fdivl
arpl
sub
pop
xchg
lahf
arpl
addr16
push
add
inc
and
icebp
test
inc
adc
mov
ret
and
mov
loopne
loop
mov
pop
insl
push
mov
mov
shl
push
inc
imul
sub
mov
cwtl
popa
jae
xchg
push
and
xchg
add
xor
pop
or
lods
add
pop
xchg
loop
xor
dec
mov
push
movsb
pop
repnz
mov
fisubrs
jge
cli
stc
lahf
and
mov
jmp
mov
lock
lea
fnstenv
decb
sbb
fildl
jl
js
xchg
push
push
and
je
pop
jae
or
jne
push
sahf
int
popf
mov
or
cmp
ja
add
inc
cwtl
push
inc
rorb
xor
jo
pop
pop
insl
adc
leave
mov
xor
jp
push
mov
sbb
jo
test
inc
sbb
and
mov
adc
push
mov
lcall
push
outsl
adc
add
xor
addb
out
push
outsb
mov
dec
xlat
sbb
cld
xchg
scas
popa
mov
movsl
pop
and
add
jnp
fsubrs
adc
dec
out
cmp
pop
and
outsb
mov
sbb
repnz
scas
adc
pop
xchg
pop
pop
and
add
and
rcr
sbb
lret
cmp
add
int
xchg
and
jle
outsb
or
xor
dec
shlb
adc
mov
ljmp
dec
insl
addr16
nop
ljmp
aaa
lds
jge
lea
enter
ret
loopne
outsl
imul
cmpb
icebp
pop
imul
inc
adc
sbb
enter
lret
push
pop
les
sbb
ret
push
inc
fidivl
add
mov
int
fisttps
lret
jno
dec
push
sti
out
dec
adc
and
sti
addr16
adc
popf
xor
adc
dec
lahf
mov
cltd
arpl
push
jg
mov
aam
push
or
into
push
push
xchg
mov
cmp
les
adc
mov
lcall
cli
mov
adc
shl
test
push
inc
and
inc
loop
mov
inc
fsubs
or
adc
jg
in
xor
xor
or
dec
and
mov
pop
mov
cs
sarb
jecxz
int
les
ret
mov
jp
nop
js
or
dec
int
lret
fisubrl
lahf
inc
cs
add
sbb
pop
pop
clc
addr16
adc
mov
and
test
pop
mov
lock
pop
dec
popf
push
jecxz
insl
lods
jecxz
push
jo
add
out
insl
pop
mov
popa
bt
test
add
imul
cltd
cmc
orb
or
cmp
jno
or
push
dec
mov
mov
cld
test
xchg
ljmp
jns
pop
lret
lahf
nop
adc
push
lods
and
inc
xchg
xchg
jg
lret
shl
mov
jmp
lret
inc
aad
push
loop
push
xor
xchg
xchg
pop
std
daa
imul
xchg
mov
mov
cmp
inc
outsb
and
fcoms
cld
or
jp
or
cld
pop
lds
sub
shlb
jno
mov
inc
add
ficomps
jnp
pushf
push
push
dec
ja
scas
sbb
pushf
les
sbb
cli
es
mov
hlt
xchg
ljmp
int3
cmp
stc
mov
cmpsl
aaa
inc
adc
ret
and
inc
shrl
pop
xchg
adc
divb
sbb
rcrl
stc
pop
in
lods
and
cmp
xor
out
jne
cwtl
pop
out
inc
mov
fildl
jbe
repnz
aas
mov
fs
jne
stos
mulb
fdivl
mov
and
enter
rorb
cwtl
rol
cwtl
mov
adc
fisubs
mov
inc
cmc
jle
cltd
add
pop
mov
and
in
xchg
stos
or
out
jmp
stos
sbb
movsl
pop
insb
imul
leave
cmpl
sarl
pop
cld
push
loop
enter
push
xor
shlb
into
je
adc
mov
cld
faddp
add
test
jl
jg
aad
fstpt
and
insl
mov
aaa
mov
aas
push
rcl
cmpsb
sbb
cmp
push
pop
or
dec
push
jmp
jle
jecxz
add
jge
mov
pop
cli
pushf
mov
lea
insl
pop
pop
pop
loope
mov
mov
mov
mov
je
mov
insl
jmp
ja
cmpsb
testb
add
fnstenv
and
and
jne
testb
cld
adc
testl
pop
repnz
and
add
fcomip
mov
and
sbb
dec
mov
mov
int3
and
bound
xor
push
out
mov
movsb
sbb
jno
sub
lcall
adc
loopne
adc
mov
xchg
aam
pop
pushf
xchg
in
repz
push
cmp
mov
icebp
add
gs
mov
lret
pop
lcall
inc
outsl
dec
lock
dec
popf
rolb
xchg
out
in
mov
pop
dec
xor
nop
es
xor
push
out
push
jl
xor
push
and
jp
cmp
int3
push
add
mov
inc
adcl
pusha
xchg
mov
mov
int
push
add
std
sub
adc
dec
jmp
pop
mov
out
add
or
mov
push
insb
adc
lds
or
hlt
jge
mov
loop
dec
cmp
sbb
push
cmp
ds
jno
lret
das
dec
xlat
cmp
test
push
jnp
sub
or
push
mov
addb
push
dec
mov
insl
cmp
rorl
leave
sub
add
xchg
add
je
aas
mov
outsl
adc
adc
jge
sbb
mov
mov
xor
adcb
lds
cli
mov
lock
clc
pop
and
jnp
andb
mov
inc
iret
es
adc
pop
in
push
rcrl
dec
rorb
loope
repz
bound
mov
int3
xor
inc
sub
and
cld
decl
xchg
mov
mov
xchg
add
mov
pop
mov
rorl
in
rol
sub
sti
cmp
stc
imul
cmpsb
mov
jl
jg
xor
pop
je
lods
fstpt
or
ja
xchg
fwait
mov
sub
movsb
sbb
mov
imulb
cmpsl
test
xchg
std
dec
xchg
xor
add
pop
cwtl
xor
jmp
in
aad
insb
mov
and
andl
stos
leave
inc
shlb
std
lea
pop
and
xchg
jb
hlt
pop
clc
insl
mov
push
call
mov
sbb
test
mov
sbb
pop
mov
inc
jp
ja
movsl
not
sub
mov
dec
dec
js
repz
adc
fdivrs
sar
fcmovnb
adc
loopne
mov
or
xchg
sbb
fiadds
jne
jo
cmp
xor
clc
cmp
aaa
mov
fwait
cmp
imul
mov
jnp
xor
clc
sbb
push
leave
adc
je
lcall
mov
ret
loop
push
ds
rorb
pop
cltd
mov
xor
imulb
popa
sbb
xlat
dec
mov
pop
mov
test
rcrb
xchg
xor
pusha
pushf
jae
in
ja
sbb
push
dec
xor
jns
adc
jle
or
shll
mov
pop
out
lods
sub
repnz
mov
xchg
test
lods
cmp
adcl
movsl
std
add
popf
or
and
int3
repnz
lcall
dec
sbb
call
cmp
mov
and
jno
sbb
cmp
sub
push
mov
loop
mov
add
jb
jle
inc
mov
fisubrs
cld
pop
fmul
pop
loope
pusha
loopne
sub
shll
cmc
jnp
xor
rcl
ret
xchg
std
int
cmpsb
fildll
xchg
jge
add
cmp
pop
mov
or
ret
sbb
call
jbe
out
mov
sbb
mov
rorb
inc
scas
dec
inc
jl
pop
outsl
imul
ss
divl
sub
mov
mov
in
lcall
jg
cwtl
mov
cmpsb
mov
xchg
in
mov
pop
add
sbb
cmp
adc
xchg
fcmovnb
pop
mov
data16
sub
sbb
xor
xor
fs
and
or
loop
adc
adc
jo
jb
rorl
hlt
es
jmp
pop
pushf
mov
insb
xchg
adcb
adc
mov
or
mov
hlt
sub
xchg
bnd
data16
adc
imul
aad
popf
lahf
xchg
xchg
dec
pop
pop
fidivs
xor
mov
mov
or
aas
int3
push
sbb
pop
mov
add
xor
int3
mov
jb
cmpsl
sub
push
jbe
push
ret
lcall
xor
fadds
stc
int3
mov
loope
or
xor
movsb
dec
xlat
xchg
imul
aas
pop
shl
dec
daa
dec
fnstcw
or
inc
xchg
mov
mov
cld
or
and
mov
sbb
dec
inc
test
daa
stos
mov
sahf
push
test
scas
sbb
xchg
lcall
test
rcrl
dec
xchg
in
mov
je
mov
pop
xchg
xor
sti
sub
imul
nop
add
addl
or
adc
in
ret
in
fidivs
sub
es
fisubs
mov
subb
inc
fbld
dec
in
sarl
in
jns
std
jmp
add
mov
sub
and
dec
xor
and
cmc
leave
push
and
stos
les
pop
sub
shll
pop
les
add
xlat
repz
movsb
pop
pop
mov
sbb
int3
out
add
cmp
adc
stos
push
push
cmp
cmp
inc
xchg
push
clc
mov
push
scas
mov
scas
scas
arpl
jmp
pop
xlat
inc
pop
dec
fwait
out
scas
adc
std
xchg
lds
jle
cwtl
sti
lea
or
mov
popfw
fnsave
lds
popa
out
sub
cld
mov
sub
mov
icebp
hlt
outsb
cmp
stc
test
test
fiaddl
jg
jno
mov
aaa
dec
mov
or
leave
xchg
fsubl
pop
aam
test
inc
push
mov
out
fldenv
sub
xor
push
in
and
mov
dec
call
mov
and
inc
push
push
xchg
adc
pop
push
pop
jno
xor
cmc
add
dec
jecxz
mov
dec
pop
mov
mov
xor
in
dec
jns
lcall
cmp
and
xchg
popf
insl
jo
flds
xchg
scas
int
fsubl
lret
popa
andb
xor
int3
xchg
mov
push
inc
mov
cli
adc
inc
add
jae
stos
bound
and
jo
fmuls
dec
ds
jg
jne
cltd
jae
jecxz
mov
dec
and
mov
cmp
pusha
lret
lret
jmp
or
test
sbb
les
or
or
mov
xor
or
push
out
div
pop
sbb
sbb
ljmp
popf
xchg
and
pop
insl
fwait
sub
cli
push
add
fsubrl
bound
js
dec
lret
xchg
cmp
data16
arpl
mov
jnp
jb
lock
addr16
shr
shl
andl
mov
push
adc
shlb
stos
or
jge
xor
dec
sti
pushf
jge
cwtl
pop
cs
jl
out
and
stos
mov
push
jg
pop
enter
pop
scas
mov
dec
adc
int3
dec
sbb
push
dec
adc
lahf
push
pop
mov
push
mov
rclb
xor
pop
lds
adc
ja
cmpb
aam
inc
inc
rcrb
push
sbb
jmp
jl
add
data16
les
cmpsl
sub
int3
adc
mov
test
lret
inc
fldcw
movaps
fldenv
sub
outsl
bound
test
cmp
inc
testb
sbb
loope
lret
aaa
test
loop
lods
dec
inc
adc
enter
cli
rcrb
push
insl
aaa
inc
cld
rcr
stc
sti
and
out
jb
xor
cmpsl
cmpb
subl
mov
mov
imul
cmpsb
pop
addr16
lds
mov
cmp
xchg
xchg
lock
jo
ret
popa
mov
call
sbb
cltd
inc
add
repnz
jb
jnp
or
es
aam
adc
jg
xchg
sub
xor
and
xchg
nop
xrelease
movsb
mov
popf
cmpsb
loopne
out
addb
icebp
cs
roll
push
cli
jp
int3
sub
add
lahf
and
les
xor
aam
dec
les
dec
cmp
push
js
mov
test
sbb
xor
cmp
jbe
add
xchg
adc
xchg
push
adc
shrl
mov
pop
cld
cmp
mov
clc
mov
int
mov
cmp
repz
jb
repnz
repz
mov
push
jae
pcmpgtb
scas
out
xchg
xorb
ret
out
jmp
or
js
jl
jge
and
xor
aas
mov
inc
add
xchg
dec
pop
push
fistpl
out
fcompl
fs
jg
outsb
ss
or
int
xchg
sbb
jbe
ds
push
je
adc
push
jae
add
mov
test
mov
lods
pusha
push
xor
vpermilps
jns
inc
jecxz
cld
jecxz
scas
frstor
movsl
and
sbbl
mov
mov
popa
das
inc
mov
lea
fisubrs
aam
xor
shlb
mov
in
rorl
mov
fistpll
pop
dec
adcl
jbe
and
int3
daa
in
sbb
in
mov
xlat
repnz
in
les
outsb
inc
add
lret
adc
mull
addr16
lods
adc
in
ret
icebp
inc
add
pop
lods
mov
sub
or
lret
sub
repnz
cwtl
cmp
mov
lea
push
mov
addr16
pop
push
scas
push
scas
xor
lds
cmpsl
cvttps2pi
push
fidivrs
flds
notl
mov
sub
mov
insb
rcrb
jmp
cmpsb
xor
lea
xchg
inc
xadd
push
inc
sbb
inc
push
xchg
cwtl
sub
push
jl
pop
repz
add
mov
outsb
pop
xchg
icebp
jae
daa
mov
dec
adc
ret
jbe
iret
cmp
mov
sbb
and
sub
inc
rclb
repz
lcall
push
jmp
adc
imul
jle
pop
dec
aad
cmp
cmp
sbb
invd
xchg
mov
shll
leave
jmp
or
inc
stos
testl
flds
adc
mov
nop
clc
je
inc
fs
mov
dec
and
push
cmc
push
mov
call
repz
dec
and
repnz
jnp
out
clc
push
popf
in
pop
sbb
and
mov
pop
loope
out
out
sbb
mov
add
fildll
sub
adc
shrb
mov
inc
dec
mov
jp
jmp
loopne
cwtl
addb
dec
cli
jbe
outsl
test
xchg
mov
jle
inc
imul
fdivl
pop
lock
sbb
xor
pop
ficomps
loop
insb
add
inc
jmp
jge
push
inc
lcall
or
add
mov
ret
jae
aas
inc
es
and
mov
sarb
xchg
add
stos
mov
out
ret
inc
in
ds
mov
mov
mov
cli
in
scas
movsl
and
dec
push
adc
loopne
fbld
xchg
test
inc
mov
sahf
stos
inc
add
shll
mov
push
insb
lock
cmp
lock
xorb
add
xor
out
mov
xchg
out
lahf
inc
jl
insb
xchg
outsb
out
mov
pop
shrb
in
pop
bound
and
push
sub
add
mov
mov
dec
fcom
adc
sub
jecxz
out
sbb
rorb
adc
mov
leave
push
inc
fstl
cmp
jno
xchg
xor
das
stos
pop
xchg
sbb
xchg
lret
test
xchg
push
or
les
aas
icebp
test
sub
dec
outsl
cmpsb
xchg
push
inc
into
cwtl
lcall
dec
addb
jle
ret
adc
push
or
das
movb
mov
cmp
add
jno
icebp
ds
jne
cmp
ja
push
dec
pop
std
xchg
shlb
stos
mov
push
aad
nop
test
lods
fdivl
gs
rcll
out
cmp
or
addb
addr16
cs
jo
icebp
mov
mov
xor
jmp
add
outsl
jecxz
and
test
divl
add
lret
cli
jp
mov
addl
cmpsl
js
sub
adc
xchg
stos
jmp
or
xchg
outsb
inc
inc
roll
or
lcall
lret
sbb
push
adc
dec
in
ljmp
mov
pop
inc
push
enter
xchg
adc
outsl
and
mov
bswap
das
mov
push
xor
out
inc
inc
cmp
pop
cwtl
aas
std
dec
mov
lcall
pop
test
popf
ret
leave
pop
scas
cmpb
cmc
xor
hlt
cs
imul
mov
xchg
loopne
xchg
sbb
imul
out
mov
cmovge
push
lods
mov
and
xchg
sbb
int3
fiadds
dec
sub
sbb
xor
or
sahf
xchg
add
jp
and
pop
xchg
out
jmp
mov
stos
repz
mov
mov
push
imul
mov
jl
mov
cmpsb
xor
cld
inc
xlat
inc
ficompl
xchg
or
or
addb
add
in
xchg
jbe
adc
in
clc
dec
xor
mov
call
add
test
sti
dec
outsl
pop
inc
mov
iret
inc
jno
cwtl
fstps
mov
inc
sub
popf
inc
inc
xor
sbb
repz
ljmp
insl
jg
xchg
cwtl
pop
mov
sbb
in
je
jbe
add
fwait
stos
xor
int
adcl
js
mov
flds
mov
divb
pop
negl
test
cli
ret
in
js
in
xchg
push
mov
or
pop
adc
mov
dec
scas
add
adc
sar
dec
je
in
sub
dec
push
lahf
ja
mov
inc
and
mov
in
jg
mov
push
sti
lods
push
les
dec
push
push
xor
mov
addr16
cmpsb
push
les
xor
popa
sub
cld
das
dec
push
rorl
cmp
iret
push
or
add
mov
outsl
mov
and
hlt
stc
out
xchg
sahf
nop
aam
mov
enter
pop
scas
sahf
jle
push
xor
xchg
lock
and
cltd
xor
rol
leave
loopne
lock
and
add
xor
mov
pop
out
add
jo
sbbl
mov
cmp
mov
push
or
mov
nop
lock
xchg
and
cmc
dec
fisttpll
adc
andl
cmp
mov
push
or
mov
gs
stc
jecxz
mov
pushf
aaa
bound
arpl
rcr
pop
out
js
mov
xor
pop
ret
mov
les
loopne
scas
mov
ret
cs
jo
popf
inc
imul
es
imul
mov
mov
jl
pop
or
outsb
sub
xchg
test
xchg
mov
mov
xchg
pop
in
pop
lahf
cmp
addps
mov
mov
or
mov
xchg
push
or
test
mov
dec
adc
jmp
and
repz
jne
mov
movsl
mov
sub
mov
jo
icebp
mov
mov
add
xor
and
shlb
cmp
cli
mov
and
sbb
das
sbb
fstpl
mov
subl
adc
into
jnp
push
push
rdmsr
jecxz
and
ficoms
pop
dec
int
in
sbb
push
movb
pop
imul
sbb
pushf
cld
jo
lret
out
dec
dec
pop
xchg
sbb
xchg
mov
or
in
ja
hlt
pop
ret
inc
or
xor
pop
add
fwait
add
les
xchg
sub
mov
add
addb
inc
iret
push
cmp
inc
pop
and
adc
and
mov
push
jp
xchg
add
dec
mov
mov
cmp
sahf
lods
sbb
add
std
inc
mov
loop
decb
in
mov
adc
fwait
lahf
xor
leave
xchg
insb
nop
inc
subl
mov
adc
pop
testb
mov
sbbl
icebp
inc
jle
adc
sarb
mov
lods
push
add
in
jbe
push
xchg
sahf
std
jp
fstpt
xchg
lods
bnd
cli
add
push
xchg
sahf
pop
lret
mov
xchg
lods
les
inc
stos
cmpsl
std
inc
call
mov
in
xor
fdivrl
xchg
push
fiaddl
hlt
or
movsl
rclb
mov
test
jl
frstor
pop
mov
dec
xor
fadds
fmuls
es
push
cmpsb
lds
push
loop
imul
xor
push
int
icebp
xchg
shld
add
shll
inc
and
mov
stos
mov
add
jecxz
pop
dec
dec
shrl
ss
out
ljmp
rcll
or
ret
invd
xor
rcl
clc
in
daa
push
push
dec
es
aas
mov
psubusb
lock
loope
mov
jnp
ljmp
rcll
pop
stos
inc
mov
dec
jp
data16
scas
movl
mov
movsl
jae
das
fidivrl
push
sub
cmp
pop
daa
dec
lea
jno
dec
jb
aaa
pusha
dec
push
pop
mov
add
dec
std
pop
pop
fldenv
adc
xchg
or
xorl
cmp
aas
ja
jb
inc
dec
pusha
rcl
pop
aas
scas
sub
fldl
fsubs
push
and
arpl
cmp
cmpsb
imul
jle
cmp
and
call
push
popa
dec
add
jno
ds
daa
pop
jb
jo
js
iret
scas
add
sbb
lods
xchg
arpl
xor
repz
and
lahf
add
mov
cmpl
int3
push
call
fs
push
mov
sti
stos
aam
into
push
in
mov
sub
jae
add
bt
pop
and
add
add
ss
sub
and
dec
dec
ds
shrb
imulb
pop
aad
pop
fildl
lcall
insb
push
cwtl
dec
loopne
out
push
lds
nop
add
inc
pop
repnz
int
cmp
push
ss
out
mov
mov
into
sti
leave
or
pushf
push
adc
ret
mov
enter
fs
popf
mov
jmp
jae
bound
inc
out
pop
es
fidivl
test
adc
lret
orl
mov
aaa
ljmp
daa
cmp
xor
and
unpckhps
test
cmp
mov
cmc
add
ja
cwtl
out
sub
xor
dec
lds
sbb
aaa
ret
cmp
mov
mov
in
shlb
push
inc
lret
pusha
sbb
loopne
mov
cmp
aad
lahf
sbb
push
sbb
cmpsl
inc
xchg
rolb
loope
pusha
push
popa
fsubl
scas
push
out
das
enter
xlat
mov
push
popa
out
or
inc
adc
lahf
in
ds
test
sbb
arpl
adc
adc
scas
mov
js
jae
jg
cmp
mov
notb
aas
push
fimull
fmull
jae
adc
fnstenv
rcrb
scas
out
sub
push
ret
aaa
pop
mov
push
cwtl
insl
sbb
sub
ret
call
test
lock
push
testl
int
mov
fildl
bound
pop
adc
dec
inc
nop
in
sti
nop
jl
jl
out
bound
std
inc
rol
xchg
and
pop
push
iret
push
add
test
rcrb
cmpsl
inc
pop
pop
sti
je
and
jge
dec
mov
repnz
xor
push
inc
mov
xchg
stos
mov
lock
sbb
mov
dec
test
sub
mov
push
ds
int
xor
xchg
add
iret
ljmp
test
mov
mov
insb
fidivrs
jne
lds
icebp
jecxz
and
sbb
rcr
or
cmc
cltd
xor
lock
cmpps
daa
mov
sbb
iret
js
hlt
mov
jbe
push
push
xchg
jg
adc
xor
loope
xor
sbbb
fistl
ljmp
out
xchg
sbb
dec
push
mov
gs
stc
inc
and
loopne
shrl
xchg
movsl
push
aas
cld
pop
stos
hlt
adc
nop
or
loop
inc
xlat
icebp
or
xchg
add
andl
jge
add
inc
xchg
mov
sbb
mov
and
stos
or
lahf
jl
fiadds
xchg
jecxz
fcmovu
pop
mov
or
dec
cmp
loopne
add
fidivl
out
mov
sbb
add
cld
adc
or
sub
fmull
rcll
outsl
sub
cmpsb
push
aaa
stos
cld
add
arpl
add
mov
xchg
stc
fildll
aaa
mov
stos
inc
pop
cmpsl
xacquire
jge
and
scas
inc
pop
data16
mov
in
pop
lds
pop
xchg
xor
aas
push
xor
jmp
test
xchg
jne
add
mov
xor
test
sub
xchg
jle
mulb
pop
inc
jns
dec
testl
arpl
arpl
pop
divb
mov
fimuls
mov
out
mov
jmp
inc
fisubrs
jbe
push
addr16
pop
xchg
mov
lret
cmp
push
add
pop
outsb
repz
sub
cmp
pop
cmp
dec
cwtl
push
ds
sahf
and
int3
xlat
testb
insb
jne
xchg
mov
inc
or
addr16
mov
mov
aam
push
mov
shrb
push
mov
fbstp
sbb
mov
out
mov
ret
into
push
xor
sub
int
mov
cmp
pop
ljmp
lret
mov
xchg
xchg
sub
sahf
sbbl
push
lods
fldl
data16
pusha
jecxz
test
dec
fisubs
push
rorb
ljmp
adc
or
fnsave
mov
pop
test
loop
aas
pop
inc
ss
fisubl
insb
fisttps
push
inc
adc
fmuls
jae
movsb
push
out
andb
ds
mov
mov
cli
je
or
std
cmp
inc
cmpsb
xchg
push
popf
push
mov
adc
pusha
pusha
test
es
pop
dec
in
cli
jb
cmp
cli
fists
gs
pminub
cmp
imul
daa
scas
leave
or
outsb
push
cltd
fisubrl
movsb
add
sbb
dec
mov
fsubrs
mov
pop
jg
cltd
dec
or
xor
lea
xchg
pusha
pop
and
movsb
scas
scas
xor
mov
sbb
inc
ffree
pop
popa
loope
adc
or
cli
sub
cmpsb
cli
adc
shrl
xor
mov
add
fs
sbb
sarl
pop
pop
and
push
outsb
aad
xor
or
jge
cmp
sbbb
adcl
jmp
cmp
iret
stos
out
fcmovnu
sbb
or
jle
pop
call
pop
in
add
adc
imul
cmp
into
test
inc
mov
cmp
jge,pn
cmp
icebp
mov
xchg
mov
and
mov
shr
xor
jb
popa
and
inc
jne
xchg
mov
loopne
sub
or
pop
insl
xchg
shll
push
xchg
fwait
inc
mov
lcall
inc
pop
test
out
hlt
mul
lock
add
dec
loope
daa
lods
xchg
sbb
enter
test
mov
in
sbb
int3
mov
sub
jg
pop
lcall
rorb
ret
cmpsb
inc
out
cmp
shrl
xchg
imul
pop
fsubr
ret
push
fisttpll
adc
push
outsl
xor
mov
xor
fidivrs
and
sub
outsb
jmp
cmpsb
mov
in
adc
xchg
cmp
ret
lcall
repnz
jae
ja
out
test
or
push
sub
int3
add
loopne
ss
xchg
jle
push
xchg
mov
jbe
mov
dec
add
jno
lret
mov
inc
mov
push
lcall
dec
add
or
xchg
int3
push
inc
pop
pop
mov
lock
push
jmp
xchg
inc
cli
daa
jbe
cli
loopne
push
nop
xchg
int3
mov
jl
dec
jp
push
jnp
cmpsl
pop
jmp
cmp
fsubs
mov
jle
pop
push
pop
cmpsb
stc
int3
xlat
jl
test
test
cld
ss
ljmp
fistpl
xchg
fists
pop
push
cmp
xchg
sbb
cmc
xchg
cmp
push
mov
cld
pusha
xchg
je
ficompl
mov
cmp
jb
imul
inc
daa
clc
mov
rorl
inc
cmp
and
enter
in
or
repz
pop
cli
cld
push
inc
add
mov
sbb
add
mov
outsl
cltd
cwtl
ds
xlat
adc
divb
or
dec
das
push
add
mov
leave
js
adc
mov
dec
fcmovnu
mov
push
mov
cs
ret
aas
fmuls
insb
cld
sbb
pop
repnz
lahf
test
mov
js
in
adc
bound
rcll
test
stc
jne
pop
lods
dec
mov
pop
enter
cmp
out
sub
pop
add
dec
mov
ds
aam
out
lret
out
jg
and
mov
leave
mov
fs
and
mov
mov
fdiv
je
mov
lds
add
sti
and
sub
mov
inc
sbb
add
and
sbb
fists
or
xchg
mov
loopne
xchg
shl
aad
shl
test
mov
data16
and
mov
adc
pop
xchg
xor
fcoms
fldenv
mov
sbb
lods
and
cs
lahf
inc
dec
mov
jp
adc
int3
and
sbb
pop
fimull
ret
or
dec
ja
mov
fs
mov
xor
lahf
out
jnp
cmc
xchg
adc
jae
stos
cmp
lahf
jno
loop
daa
in
lcall
mov
mov
icebp
dec
adc
test
stos
jns
cmp
pop
xor
cmc
ret
js
cmp
adc
out
push
mov
inc
vpcomub
imul
cmpsl
xor
cmp
pop
fcom
sub
bound
outsb
adc
insb
enter
xchg
cld
in
xchg
pop
push
and
adc
add
popa
xor
and
dec
cmp
ftst
bound
fsubr
popa
inc
jbe
pop
sub
outsb
inc
mov
rclb
pop
fidivrs
loop
xor
jg
sarl
adc
cli
push
aad
repz
xor
lahf
inc
lds
mov
and
cmp
popa
push
xor
xchg
add
or
mov
je
mov
daa
sti
pushf
shrb
fcompl
shrl
sub
shl
pop
jge
pop
adc
imul
xchg
add
xchg
mov
bound
mov
leave
cltd
or
xchg
mov
inc
push
cmp
jnp,pn
test
adc
jbe
dec
fdivs
lea
or
aad
adcb
or
out
cmp
mov
pop
cmp
dec
jmp
jmp
mov
lahf
out
push
or
mov
fdiv
ja
nop
mov
mov
cli
push
or
or
mov
xor
sbb
sbb
ja
push
ret
xor
gs
xchg
cmpsl
test
outsb
add
outsl
out
xchg
mov
pop
in
test
in
sbb
mov
push
xsaveopt
cli
mov
adc
adc
mov
mov
rcrl
sbb
sbb
mov
jbe
shrl
repz
push
test
pop
dec
ss
add
jmp
leave
je
jb
cli
popl
outsl
pop
push
dec
dec
out
bnd
clc
ja
and
mov
fwait
popa
lret
fnstsw
sub
ss
adc
lods
out
adc
fistl
lock
mov
cmp
inc
add
lret
and
rclb
loope
mov
add
rcrb
sub
and
jl
int3
shll
pop
xor
mov
and
pop
adc
mov
test
insb
xchg
pop
cmp
pop
push
pop
cmc
arpl
inc
call
or
je
mov
pop
int
mov
sbb
or
add
xchg
int
xor
xchg
dec
fs
xchg
mov
cmp
sbb
mov
cmp
cmp
notb
imul
xor
adc
subl
cmp
inc
sbb
pushf
andl
arpl
push
mov
sub
lods
push
cmpsl
gs
dec
lahf
mov
mov
scas
sub
in
arpl
lock
cld
mov
mov
imul
sub
and
loop
bsf
xlat
and
test
mov
xor
sub
cmp
cmpsl
xor
pop
sbb
add
lods
aas
sahf
mov
ret
push
mov
mov
mov
cmpsl
inc
xchg
mov
sub
outsb
out
pop
and
jle
les
xor
xor
or
xchg
xor
cs
popf
jae
lahf
cmp
push
jbe
test
shrl
bound
stc
enter
push
lds
jnp
loope
dec
cltd
mov
arpl
data16
out
fsubs
xor
roll
dec
jp
aaa
add
dec
xchg
jle
sub
sbb
loope
decb
mov
ret
add
mov
xchg
push
bnd
sub
es
pop
pop
je
aaa
push
loopne
sahf
cltd
pop
cmpsl
or
movb
fst
mov
push
xor
inc
jns
and
cmp
popf
lds
test
stos
leave
in
shll
push
repnz
inc
mov
repz
lret
xlat
cli
stos
jnp
lahf
test
pop
xchg
lds
mov
sti
data16
sbbb
jl
jns
sub
xchg
pop
sub
mov
jle
push
inc
loope
pop
jb
sbb
pop
pop
push
mov
inc
mov
pop
aam
test
scas
fsubrs
mov
out
mov
or
adc
cltd
mov
and
pop
push
adc
xchg
pand
sbb
lahf
dec
pop
xor
jns
mov
pop
pusha
das
pop
data16
hlt
nop
sub
jge
out
rcrl
add
stos
loopne
fwait
inc
dec
loop
dec
enter
dec
clc
sti
push
test
or
int
out
cwtl
sbb
aas
mov
dec
sbb
and
mov
stos
test
sbb
shrb
imul
in
repnz
xchg
add
inc
sub
popf
push
outsb
jmp
pushf
sti
push
repz
std
fisttpl
cmc
pushf
addr16
les
ret
hlt
mov
xchg
lods
ret
xorl
and
cmpsl
inc
jg
test
bound
ficoml
inc
sub
xlat
dec
icebp
jb
adc
adc
sub
and
mov
sti
mov
jl
aad
cltd
andb
jl
fucomi
test
lret
or
jns
add
push
outsl
lods
sbb
in
repz
pop
pop
ret
push
movsb
inc
scas
ja
mov
xchg
imul
hlt
mov
sbb
mov
push
add
movsl
adc
xchg
icebp
push
mov
mov
adc
cwtl
push
hlt
pop
push
dec
bound
sbb
xor
aas
mov
test
lea
inc
arpl
or
add
mov
je
xchg
pop
pop
push
push
xlat
and
lcall
ss
jg
cmp
mov
cmp
xor
cmp
daa
sub
pop
push
mov
imul
sub
or
cmp
or
jl
pop
pop
loope
iret
sub
in
sbb
pop
clc
cmc
adc
fmuls
int3
lcall
dec
xchg
pop
dec
repz
push
push
mov
dec
imul
cs
fsub
es
stos
xchg
mov
xorl
fs
popa
lahf
push
mov
sbbl
in
mov
and
dec
or
sbb
fcom
and
je
fnstenv
lahf
arpl
ror
sub
inc
inc
or
jp
movsl
out
pushf
fsubrl
movsb
out
negl
lret
adc
mov
mov
pushf
fs
fdivr
jo
lds
pop
lock
xchg
rol
fistpll
stos
hlt
adc
test
adc
cwtl
std
iret
or
pop
inc
addr16
pop
ret
push
jl
ja
test
push
and
repz
into
mov
sub
and
sub
sbbl
add
aad
subl
ss
xlat
cli
jno
loopne
adc
push
sub
repz
pop
cmc
cwtl
mov
pop
out
jp
xchg
in
jl
test
pop
leave
mov
icebp
iret
fistpl
sub
clc
mov
pop
mov
test
and
jge
test
or
cwtl
and
push
mov
add
inc
imul
arpl
inc
jno
out
adc
adc
pop
and
clc
andl
shll
and
test
mov
mov
cli
sub
movsb
lds
loope
jp
jle
pop
xchg
mov
fs
push
xchg
lret
jae
test
lods
mov
cmp
int
adc
aaa
shrb
mov
in
push
pop
loop
imul
sub
js
ret
dec
movsb
aad
or
dec
push
cmp
mov
int
sub
cmpb
adc
sub
push
lock
sub
cmpsl
movsb
dec
lea
vorps
lock
out
imul
repnz
scas
sarb
xchg
fnsave
in
int3
or
cmp
out
jp
sbb
adc
jns
movsb
cmp
out
mov
mov
adc
mov
out
iret
cmp
push
test
mov
in
ljmp
lcall
icebp
stos
stc
jg
scas
cmp
mov
cld
in
in
sahf
adc
mov
mov
enter
jp
sub
out
ja
pop
jp
jne
xchg
dec
pop
or
push
test
ja
loopne
mov
arpl
mov
cmpsl
xchg
clc
lods
stos
cmp
mov
test
and
sbb
or
sbb
cmpsl
pop
mov
push
jle
aas
call
dec
mov
int
aas
lods
repz
mov
and
into
push
pop
test
addb
sar
xor
cli
jg
dec
mov
push
mov
stc
into
and
stos
pop
sbb
xchg
test
or
inc
loopne
nop
dec
stos
jp
imul
fdivrl
inc
cmc
push
mov
push
orl
imul
fsubrl
sub
jno
mov
lock
sbb
xchg
jl
and
push
push
jb
jp
es
sub
jg
cmp
pop
and
data16
sbb
into
sbb
sub
push
or
and
cmp
push
sub
out
adc
imul
jmp
divl
outsl
jle
clc
or
and
xchg
je
mov
inc
mov
mov
imul
mov
inc
jne
cmp
stc
mov
daa
insb
add
or
or
stos
arpl
inc
xchg
xor
gs
xchg
or
mov
dec
xor
fidivl
inc
adc
mov
push
xchg
ret
inc
aaa
fcomip
jbe
scas
mov
rep
xor
nop
jns
daa
lcall
adc
inc
andl
inc
lock
mov
bound
mov
xchg
or
int
sub
inc
repnz
inc
rcrb
mov
andb
fistps
filds
das
add
scas
imul
nop
xor
fmulp
fistpll
aaa
shll
sbb
adc
mov
out
adc
and
push
stos
test
add
push
movsl
jne
add
pop
pop
xor
xor
push
movb
cmpl
imul
mov
mov
mov
stos
incl
push
cmp
ret
push
mov
push
nop
in
gs
jbe
jne
addr16
push
jnp
mov
adc
mov
mov
test
push
add
int3
sbb
adc
xor
xchg
mov
div
lcall
or
lahf
xor
ja
mov
in
div
adcl
nop
pop
jge
das
xlat
icebp
sarb
dec
fcomps
addr16
in
inc
int
pop
adc
mov
out
jmp
jbe
outsb
rorl
mov
loope
xchg
mov
pop
in
mov
or
pushl
out
insl
imulb
jns
and
mov
and
add
fdivl
insb
cli
and
orb
out
push
inc
mov
jbe
xorl
verr
sbb
adc
sbb
in
xor
cmp
mov
adc
call
cli
add
push
sub
test
pop
inc
lods
clc
or
test
cmp
mov
mov
jns
xor
jmp
add
ja
and
pop
mov
dec
roll
es
cli
jp
test
insb
sub
jo
jo
pop
xchg
pop
idivl
xchg
fidivrs
negb
cwtl
xchg
adc
add
std
jle
ret
xor
out
daa
push
pop
pop
stc
dec
or
adc
cmp
mov
in
test
and
cmp
or
js
push
lahf
mov
arpl
aam
lret
lcall
aam
test
sbb
jb
shlb
add
pop
lcall
pop
out
adc
int
in
jecxz
jmp
sysenter
in
dec
aaa
pushf
sub
lret
and
push
add
daa
push
push
cld
pop
pop
inc
add
mov
enter
fwait
mov
dec
aaa
cwtl
int
xchg
aad
mov
mov
add
xchg
inc
sub
pop
decb
push
mov
nop
shrl
mov
pop
leave
bound
sub
dec
jns
sub
clc
test
jno
int
enter
cmpsb
adc
push
add
push
cmp
aad
in
aaa
inc
cmp
insl
mov
jp
outsl
imul
sub
cld
xor
repnz
test
jl,pt
mov
inc
and
pop
jns
mov
fs
inc
jg
ret
in
dec
mov
mov
out
or
jno
jl
push
lret
add
pop
addb
pushf
stc
insb
loopne
rsm
iret
or
addr16
icebp
sahf
push
ficompl
arpl
inc
loope
addl
xchg
das
fidivs
pop
in
pop
loope
xchg
adc
sub
xor
push
dec
and
adc
lock
and
jbe
adc
xchg
outsl
js
xchg
cwtl
lret
out
lds
lds
pop
sub
mov
sub
lods
div
dec
shrb
cmp
sbb
inc
xchg
sbb
les
ds
out
lret
pusha
ss
cmpb
in
sub
push
pop
jle
push
aas
es
xlat
push
sub
xchg
mov
xlat
cwtl
movsb
repz
repz
rorl
or
push
js
mov
nop
movb
jecxz
clc
or
xor
cmc
movsb
sbb
outsl
arpl
sbb
wrmsr
popf
xlat
imul
and
jmp
mov
inc
ds
mov
int
iret
stos
out
lret
sbb
dec
xor
mov
dec
xchg
int3
and
sub
jmp
push
mov
xchg
adc
add
jg
xchg
inc
inc
mov
out
lds
data16
sarb
xchg
add
sar
out
and
fs
pop
xchg
dec
fisubl
lcall
dec
jns
or
and
or
xchg
and
jle
cs
imul
pop
push
xchg
sub
or
enter
xchg
lcall
and
xor
fistpl
shll
mov
xor
dec
jnp
cmp
add
loopne
cmc
mov
pop
jge
stc
repnz
mov
arpl
ret
imul
sub
pop
pop
pop
fcoms
pop
and
push
inc
jo
mov
mov
cltd
lcall
repz
test
mov
and
mov
push
sub
sbb
shl
jnp
mov
stos
lods
dec
push
cli
mov
dec
mov
lock
int
btc
mov
mov
shll
pop
addr16
push
cmp
add
fcmovbe
mov
ret
stc
bound
jmp
lret
and
xlat
dec
filds
lret
cmpsb
xor
mov
out
mov
cmp
pushf
in
inc
adc
sbb
lock
jbe
cwtl
mov
sub
es
andl
jb
xor
mov
add
sub
jns
clc
out
mov
sbb
xor
std
mov
pop
cld
ret
mov
movsb
sahf
data16
lret
xchg
fldpi
addr16
insl
jl
xor
jmp
jge
inc
out
cmp
xchg
pushf
pop
and
enter
sub
lcall
push
ds
dec
jbe
mov
lods
ja
popa
les
cmp
sub
mov
pop
mov
xchg
sub
lret
lds
push
sbb
jecxz
dec
negl
mov
cmp
addr16
push
jmp
fwait
hlt
mov
pop
pushf
xchg
ret
js
loop
orb
shll
in
pusha
in
sbb
sbb
jae
iret
mov
mov
scas
out
movsb
scas
imul
pop
leave
cmp
mov
int3
sbb
loopne
mov
leave
jno
xlat
ja
test
mov
pop
pop
xor
xchg
jnp
and
mov
add
mov
in
jecxz
subb
dec
inc
out
pushf
push
sub
cmp
fsts
test
out
ds
push
movsb
out
inc
mov
fcmovbe
orl
cmc
adc
daa
jmp
dec
xchg
or
fcomip
or
xchg
stos
jecxz
ja
lret
lcall
clc
cltd
and
cmp
push
mov
dec
repnz
ljmp
pop
and
ret
or
mov
aad
mov
mov
subl
fstpl
xor
fdivr
rorl
movsl
arpl
xchg
cmp
jno
lcall
fs
dec
into
je
sbb
lds
sub
pop
sub
test
je
adc
rolb
lods
mov
push
loope
movsl
mov
in
inc
and
fnstenv
dec
sbb
mov
out
sbb
scas
or
push
sub
or
orb
sub
pop
xchg
xor
push
pop
adc
add
xchg
dec
test
out
cltd
popf
mov
ret
jmp
sbb
div
das
aam
cmc
sub
clc
lods
or
jl
push
jle
and
push
mov
lret
cmp
test
jle
sar
in
orb
cmpsl
pop
push
repz
pop
pop
daa
xor
shrb
mov
out
inc
aaa
jge
xchg
int
es
add
pop
jge
aas
push
rolb
es
pushl
xor
jbe
add
pop
pop
insl
dec
rolb
inc
jnp
test
popf
rorl
fldenv
sti
out
adc
stos
jmp
jmp
loopne
mov
mov
pop
or
mov
jne
incb
testl
into
mov
cmp
addl
sbb
dec
ficompl
mov
and
loopne
sahf
mov
test
idivl
adc
fcmovnu
mov
push
std
mov
jae
cltd
mov
push
cltd
or
push
sub
and
popa
lock
fdivr
addr16
je
out
and
inc
cmp
jne
push
inc
es
jmp
pop
bound
rol
cmpl
insb
sub
dec
cmpsb
dec
sbb
adc
cmp
lret
xor
push
addr16
adc
test
xor
mov
clc
lret
daa
push
cwtl
dec
jl
jbe
movsb
or
inc
xchg
jg
inc
adc
cmpsl
stos
xchg
xchg
xchg
dec
cld
add
push
jns
lahf
mov
mov
xchg
pop
xor
mov
pushl
or
xchg
into
xchg
mov
push
sub
or
repnz
xor
sbb
xchg
push
jg
xchg
cmpsb
push
xorb
bound
push
pop
stc
aaa
dec
into
xor
repz
mov
add
out
das
das
or
xchg
jb
es
out
or
lods
addb
push
jmp
sub
iret
int
adc
int3
insl
inc
int3
scas
js
outsl
inc
mov
inc
repnz
pop
stos
xchg
lods
test
and
fsubrs
cld
xchg
mov
clc
loop
ljmp
xor
adc
sub
pop
jae
cmp
push
push
and
inc
int
std
insb
and
pmulhuw
mov
xchg
push
test
jp
and
sub
imul
inc
add
in
bound
dec
xchg
fisubrs
ss
lea
xchg
mov
hlt
repnz
adc
sti
push
sub
test
ficoml
inc
adc
subl
xchg
aas
nop
jne
fldenv
mov
cmc
popf
sbb
xchg
sbb
sbb
fsubrl
cmp
ljmp
push
push
xor
popf
stos
mov
cmp
in
xor
mov
popf
iret
stos
outsb
insl
lret
repnz
mov
xchg
jnp
shlb
ss
bound
pop
arpl
fmull
cmp
fldenv
jbe
in
iret
shl
repz
or
inc
jnp
sub
dec
add
cmp
cld
lods
sti
aad
pop
push
fmuls
inc
and
lret
mov
xchg
and
lahf
push
pop
adc
es
fsts
xlat
psubusb
sti
and
cwtl
xor
mov
add
jbe
push
jnp
sbb
add
fiaddl
pushf
push
mov
sub
xchg
cwtl
int3
jecxz
es
sub
aaa
mov
in
repnz
addl
mov
xorb
mov
popl
fldt
pusha
xchg
andb
fs
lods
mov
or
repz
add
lods
scas
lahf
inc
scas
in
aad
ljmp
test
testl
inc
cmp
cmp
gs
fcoml
ljmp
cwtl
imul
dec
or
xchg
push
or
cmp
mov
inc
xor
mov
push
movsl
push
in
cmpsl
and
mov
ljmp
cmp
cld
xor
dec
dec
cs
push
add
in
or
lock
adc
dec
cmc
jne
insl
push
sub
sbbl
popl
call
pop
mov
adc
das
out
enter
jb
lea
stc
jp
inc
pop
or
fnstenv
jge
sub
lock
mov
daa
push
adc
scas
xchg
adc
shrb
push
ret
mov
imul
into
ljmp
pop
scas
adc
ja
and
les
aam
stos
bound
xchg
dec
icebp
loop
hlt
sub
shrb
sahf
xchg
pop
mov
lea
movsl
mov
jo
sbb
push
cmp
xor
cmp
fisttpl
cld
sub
sbb
dec
xor
or
fisubl
push
adc
adc
mov
add
test
addr16
adc
push
xor
loope
and
mov
mov
in
popf
outsl
lret
sub
mov
push
xchg
adc
mov
push
scas
stc
lcall
int
adcb
stc
mov
jo
stc
ljmp
mov
rcrb
idivl
dec
mov
scas
inc
popf
or
or
stos
aas
inc
xchg
cltd
mov
ja
xor
cmp
push
call
rorb
fwait
lret
jnp
sbbl
and
je
push
shlb
into
add
jnp
add
lea
addr16
scas
pop
mov
cmp
xchg
shlb
jmp
inc
mov
imulb
xlat
or
mov
push
std
out
fimuls
sarb
sbb
gs
cmpsl
mov
mov
loope
jb
or
pop
mov
aas
inc
fidivrs
adcl
cmp
xchg
cld
ret
or
iret
jle
jnp
xor
mov
mov
mov
adc
stos
movb
or
cmp
cmp
or
bound
addb
insl
xor
sub
and
insl
and
imul
addr16
mov
add
pop
in
cmp
out
mov
insb
jecxz
cli
push
jecxz
lods
jns
into
xorl
in
ljmp
icebp
pop
addr16
push
jbe
movsl
bound
cld
mov
sub
mov
ret
les
xor
lcall
je
add
and
ret
test
lea
mov
nop
clc
push
shrl
or
xor
inc
fsubrp
cmpsl
ds
mov
sbb
pop
push
je
aas
imul
data16
addb
xchg
inc
mov
insb
xchg
sub
sbb
lods
sbb
mov
fisttps
call
and
fdivrl
insl
aam
jp
iret
jno
and
fldl
aam
in
pop
mov
pop
std
mov
sbb
shll
scas
mov
or
popa
pop
mov
out
pop
jae
adc
sbb
mov
call
xchg
xor
push
jecxz
cmpw
bound
add
jae
iret
lods
lea
cs
imul
in
std
mov
pushf
mov
dec
or
arpl
pop
adc
bound
shlb
inc
movl
mov
test
xor
dec
push
add
inc
lret
shl
imul
xchg
aam
mov
nop
inc
add
add
xor
mov
insl
call
mov
pop
lcall
xchg
xchg
rcrb
add
in
push
jns
test
dec
and
fs
fists
dec
aaa
cmp
fidivrs
in
mov
push
pop
and
mov
add
notb
ja
mov
pop
imul
leave
sar
add
jne
mov
dec
int
lock
gs
and
or
sub
lret
movsl
lret
push
pop
daa
sub
pusha
xor
jle
inc
pop
cmc
sbb
imul
outsb
aam
sub
je
add
pop
sub
xor
pop
pop
adc
imull
or
lret
pop
les
ja
dec
aaa
sbb
lock
jg
push
insb
or
pop
addr16
lcall
out
pushf
aaa
shrl
test
movsl
sub
sbb
cmc
lock
in
pop
push
or
mov
cmc
and
jo
inc
lea
psubb
xor
xchg
dec
mov
jg
mov
push
fists
mov
and
pop
inc
iret
and
loope
cltd
xor
jno
clc
adc
inc
std
jmp
into
inc
xchg
clc
insl
or
lret
add
mov
pop
out
es
mov
xchg
je
xorl
ds
add
cmc
add
add
xorl
pop
pop
pop
push
leave
xchg
mov
xchg
stc
pop
sahf
mov
fiadds
rcll
roll
clc
jge
ja
popa
lret
mov
testl
xor
xor
call
loop
jmp
cmp
and
int
jno
lds
pop
or
cli
add
xchg
jne
mov
pop
add
loop
insl
jns
jl
sahf
in
fsubp
sub
sarb
sub
pop
add
addr16
cmpsb
ds
enter
jno
out
or
sub
sub
xchg
mov
js
and
movsb
mov
mov
adc
xchg
cwtl
arpl
inc
sub
out
push
lea
repnz
sub
fildl
mov
add
fdivr
or
movsb
ffree
add
divb
mov
in
cmp
dec
jge
cmc
pusha
imulb
gs
mov
pusha
mov
pusha
sub
pop
fmulp
add
xchg
push
jle
lret
ljmp
jp
icebp
rorb
xor
mov
pop
dec
out
in
movsb
cmpsb
push
add
idivl
inc
daa
aad
movlps
pop
fucom
shll
cwtl
mov
pop
mov
dec
adc
dec
xchg
decl
jmp
lcall
stos
lcall
imul
and
data16
pop
fwait
sub
insb
xor
jns
dec
lahf
subl
repnz
sbbb
sbb
in
xchg
stc
hlt
add
xor
adc
aaa
orl
pop
adc
rorb
fst
mov
pop
xchg
pop
lret
pusha
bound
sbb
test
inc
mov
push
xor
inc
stos
dec
inc
pop
and
out
mov
push
mov
pop
decb
movsb
aaa
in
nop
pusha
scas
dec
pop
push
ljmp
pusha
test
adc
mov
movsl
cltd
icebp
add
and
sub
xlat
sbb
xor
shll
and
or
jns
jns
mov
jg
lods
roll
das
test
aas
psubd
push
push
mov
dec
adc
push
xchg
pusha
sbb
scas
insl
std
mov
jo
mov
insb
and
clc
or
cmp
dec
mov
inc
enter
jg
xchg
imul
int3
pop
or
and
xchg
mov
mov
and
pop
sub
jns
int
inc
inc
repz
or
sub
or
cmp
pushl
xor
imulb
pop
jnp
sub
dec
scas
mov
mov
aaa
int
mov
mov
pop
mov
std
dec
mov
aaa
mov
add
adc
mov
andl
pop
arpl
push
jmp
xor
inc
cmp
or
ss
and
xor
fnstcw
pop
mov
ret
daa
mov
push
xchg
cmp
pushf
movsl
stos
shlb
mov
aam
or
jnp
xchg
add
mov
outsl
mov
push
mov
or
cmp
in
and
neg
cmpsb
add
mov
mov
testb
push
pop
push
lahf
and
stos
cs
inc
aam
pop
xor
testb
mov
mov
and
in
inc
cmp
lahf
jbe
mov
sub
jne
jg
js
push
scas
add
push
stos
adc
jge
into
scas
pop
pushf
js
mov
lods
xor
stos
imul
stos
std
and
hlt
pushf
pushf
mov
imul
sbb
xchg
push
addb
cmp
jl
std
sub
or
cmp
push
out
cmp
ljmp
mov
mov
or
pop
movsb
pusha
push
cmp
mov
pop
mov
int3
ss
int
mov
sub
dec
adc
mov
push
jg
outsl
es
pop
cmpsb
sarl
in
and
jbe
scas
sub
int
int3
add
fwait
aam
rorl
and
fbld
dec
nop
les
mov
shll
mov
lret
cmp
les
xchg
data16
loop
fsubr
dec
mov
mov
and
sub
add
push
ds
in
ds
lods
and
sbb
mov
pop
imul
cs
mov
push
add
push
sub
add
imul
jmp
and
pop
jge
and
mov
test
sub
cmp
or
shrb
pop
xor
pop
inc
and
ljmp
ja
jae
push
adc
pop
sarb
iret
and
inc
movsl
and
pop
sti
out
inc
sbb
xchg
scas
rol
hlt
cmp
lahf
or
sti
inc
xor
pop
hlt
test
movsb
jae
xchg
std
sbb
int3
add
scas
arpl
mov
pop
mov
push
call
mov
add
sti
stc
xchg
negl
adc
aad
mov
out
or
dec
iret
add
push
mov
cmp
add
mov
mov
mov
adc
mov
cmp
xchg
xchg
mov
std
mov
xchg
movsl
mov
lds
mov
imul
mov
ljmp
in
pushf
mov
and
inc
sti
cmpsb
push
and
aam
sbb
scas
std
shrl
mov
cmp
inc
and
pushf
cmpl
leave
fmull
jge
sbb
sub
pop
add
stos
cli
add
shlb
roll
repnz
jne
test
mov
add
add
arpl
scas
scas
mov
clc
adc
stos
dec
mov
sbb
andl
mov
lcall
add
dec
les
jp
decb
sub
adc
idivl
mov
js
cs
dec
stos
rorb
mov
out
xor
sbb
mov
mov
inc
dec
cmp
cmpsb
xchg
out
mov
in
sbb
mov
cmpsb
outsl
sub
add
ret
imul
inc
loop
inc
mov
das
scas
push
jne
adc
adc
je
out
sbb
pop
hlt
dec
divl
push
cltd
lods
out
sbb
add
cmp
inc
and
and
jb
and
inc
jl
adc
mov
movsl
call
jecxz
mov
aaa
loop
mov
add
leave
clc
movsb
jg
or
neg
cltd
add
das
lds
jnp
xlat
ja
lahf
out
jno
sbb
int
dec
hlt
mov
insl
sti
xchg
adc
scas
call
lahf
in
lret
cmp
outsb
ret
jae
jne
ret
add
iret
loope
sbbb
cld
gs
aad
test
and
inc
mov
test
out
stos
add
ljmp
and
mov
xchg
cmc
dec
add
mov
sbb
test
hlt
jg
or
idivb
loop
mov
jns
jecxz
push
adc
cmpsl
rcl
cltd
inc
push
mov
lods
push
bound
sub
lods
mov
out
imul
sti
jl
sub
ds
and
add
inc
and
push
and
or
pop
push
jecxz
mov
insl
outsb
je
in
push
aam
dec
das
inc
icebp
sti
int
adc
dec
push
mov
jmp
push
cmp
bound
adcb
out
dec
in
sub
dec
fstps
cmp
xor
inc
push
pop
andl
adc
sub
mov
mov
mov
pop
stos
xchg
dec
push
mov
fsubr
dec
jge
mov
sbb
repnz
xchg
pop
cmpl
push
inc
fadd
int3
fstps
fs
sub
sbb
in
aaa
cld
mov
mov
sbb
cmp
setae
lods
pop
dec
dec
xchg
jecxz
insl
outsb
mov
ret
shrl
addr16
xchg
lea
lret
mov
pushf
stc
cmc
pop
lods
push
xchg
js
and
sbb
adc
shlb
fsubr
jae
push
mov
xor
aaa
mull
add
push
cld
lcall
jge
lcall
fisttps
mov
lock
inc
roll
movsl
stos
push
sub
mov
or
fidivl
inc
nop
dec
and
and
sti
add
pop
in
sub
loope
pop
pop
jmp
dec
outsb
dec
mov
outsl
out
js
cwtl
sbb
outsb
dec
xor
or
arpl
out
loop
mov
pop
adc
aas
lret
mov
rorl
pop
mov
jb
xchg
shll
pop
aam
push
inc
rolb
fisttpll
jb
push
aam
pusha
je
in
pusha
mov
shrb
call
pop
adc
sub
popa
jl
adc
in
or
sub
mov
xor
or
sbb
adc
into
movsb
adc
xor
mov
jle
jns
cld
pop
into
nop
inc
and
jg
lods
mov
dec
mov
mov
inc
leave
adc
aam
cmp
out
lea
push
aas
and
adcl
popa
and
adc
push
notb
cmpsb
fdiv
call
inc
ljmp
loopne
ljmp
sbb
dec
pop
pop
mov
in
out
rorl
push
arpl
dec
pop
test
loop
fcomp
fisubrl
test
mov
stos
dec
pop
pop
mov
clc
add
cs
jns
cmp
sub
adc
test
mov
mov
sbb
jg
iret
ror
jae
add
lahf
or
lds
shrl
dec
mov
mov
fidivs
repz
and
sub
and
xchg
push
mov
jns
stos
daa
xchg
ljmp
inc
ljmp
mov
mov
out
rorb
cwtl
fs
test
push
xchg
mov
pop
mov
pop
scas
mov
push
xchg
test
stos
pop
inc
pop
nop
out
cmc
sbb
cwtl
lods
mov
or
pop
in
xchg
aam
sub
enter
repnz
mov
cmpsb
sbb
es
cmp
dec
sub
inc
daa
mov
adc
dec
fisubs
aam
xor
and
inc
scas
pop
testl
xchg
push
dec
jno
movsl
ficompl
cld
mov
add
mov
xchg
stc
mov
ja
pushf
jbe
xor
test
push
mov
push
mov
test
xchg
scas
out
arpl
pushf
mov
fldenv
pushf
sub
and
xor
add
xadd
lods
mov
mov
imul
insl
out
cwtl
and
cmp
hlt
xchg
xlat
lea
mov
outsb
movsb
and
pop
sarl
push
pop
add
jo
jmp
fists
scas
add
out
pop
xor
insl
jmp
insl
dec
or
stos
pop
jno
mov
xlat
pop
dec
mov
jg
and
pusha
inc
sete
faddl
fdivr
push
adc
andl
loope
cld
leave
sub
and
cwtl
nopl
in
movsl
jmp
sbb
pop
inc
mov
push
and
cmpl
cwtl
into
fs
jo
cmp
push
add
shrl
lahf
push
lret
outsb
fdiv
jp
subl
out
push
mov
xchg
mov
es
mov
sub
lahf
add
and
cmp
pop
test
pop
dec
dec
fwait
mov
addl
and
add
mov
popf
mov
loope
addl
int
out
cmpsb
repz
mov
pop
inc
outsb
jnp
lret
dec
sar
lahf
cli
mov
jg
jl
adc
jle
lods
aad
decl
cmp
cmp
and
scas
pop
inc
cmp
ret
outsl
nop
sarl
dec
and
push
xor
pop
loop
out
xchg
mov
out
inc
adc
js
std
inc
jge
mov
push
fbld
inc
lods
std
add
into
mov
dec
or
es
xchg
cmp
push
addr16
push
ret
ret
mov
mov
jae
dec
inc
jmp
mov
fstpl
mov
adc
ljmp
dec
pop
bound
jmp
xor
sub
cmp
pop
jmp
mov
mulb
sbb
leave
push
push
xchg
lock
bound
enter
cmp
inc
inc
ljmp
int
mov
adc
sbb
cmpsb
cwtl
icebp
mov
xorb
mov
push
dec
sahf
loopne
mov
cmp
sbb
mov
lods
and
cld
fcoms
je
dec
pop
in
in
push
and
lret
jae
cmp
dec
stos
aad
dec
imul
pop
cmp
aam
sub
ss
aas
add
sbbl
nop
xchg
and
lret
add
cmpl
outsl
stos
sahf
loop
cld
sarb
test
adc
fwait
jle
outsl
adc
mov
add
cmpsb
pop
pop
mov
insb
xchg
insb
mov
dec
cs
test
gs
mov
xchg
std
mov
jo
jl
sub
jo
repnz
and
mov
mov
vcvtdq2pd
fs
adc
stos
adcb
mov
fsts
jmp
xor
pop
dec
int
and
rol
xchg
sarb
and
in
xor
movsb
cmp
mov
mov
shll
push
and
adc
and
test
addb
ffreep
inc
add
popa
cmpb
aad
mov
mov
mov
fsubrs
xchg
popf
jne
add
or
mov
imul
mov
test
or
fwait
lea
scas
std
mov
xchg
ret
roll
rorl
xorb
lret
popa
nop
inc
movsb
outsl
inc
ret
ss
add
xchg
ljmp
sub
imul
mov
loopne
ja
addr16
fstl
out
insl
pop
fs
inc
lods
or
dec
lcall
fisttpl
in
xlat
mov
jns
mov
jmp
cmp
out
cmp
lods
pop
lock
cmp
jo
cs
jg
test
inc
add
jne
in
jb
leave
hlt
inc
out
cwtl
ljmp
push
mov
cmp
jns
lock
inc
pop
arpl
es
sti
jb
jp
dec
cmp
dec
iret
mov
mov
jns
testl
add
push
jbe
fcmovnu
mov
movsl
and
push
or
aas
jge
jnp
pop
repz
ja
and
push
mov
lret
add
add
sub
cs
push
movsl
cmc
imul
sub
inc
popa
stos
pop
cmpsb
xchg
ficomps
adc
jbe
mov
dec
mov
mov
cmp
xchg
and
cmp
push
sbb
in
jle
ret
dec
push
mov
push
add
rep
js
gs
in
cmc
push
cld
and
sbb
inc
fs
rcrb
mov
fstpt
pop
stc
insb
cmp
pop
adc
pop
mov
cmp
loopne
rcll
icebp
inc
xor
movsl
data16
add
push
xchg
in
jno
aam
aas
sahf
xor
lock
adc
sub
insl
jge
pop
cltd
aad
mov
mov
incl
mov
loope
je
mov
pop
pusha
push
jo
jg
dec
push
cmpsl
jne
or
decb
inc
xor
mov
cmp
pop
sahf
fs
lods
jno
mov
push
pop
add
cld
ljmp
jmp
or
cmc
mov
mov
mov
cs
jp
inc
adc
cmp
adc
aas
cmp
repz
cmpsl
mov
mov
xchg
push
add
adc
repz
addb
add
jle
mov
inc
mov
aaa
xor
popa
jge
lret
jmp
mov
jle
mov
push
pop
imul
jne
sbb
pop
and
inc
jle
lret
adc
cli
adc
jae
loope
inc
dec
ror
mov
dec
sbb
inc
adc
je
mov
push
dec
icebp
mov
adc
push
test
sub
ljmp
lods
loope
es
or
cli
dec
pop
mov
xchg
sahf
stos
loop
push
sub
mov
jecxz
mov
pop
hlt
ja
mov
std
xchg
jmp
pop
aaa
mov
in
leave
movsb
inc
cltd
mov
pop
outsb
xchg
in
xor
adc
pop
das
leave
mov
out
inc
xor
mov
sbb
pusha
jg
sbb
ret
add
mov
shrb
inc
and
add
xlat
ficoml
xor
insl
cmp
adc
mov
xchg
lock
stos
mov
loope
adc
stc
mov
mov
out
gs
pop
incl
sbb
jge
arpl
jge
adc
sbb
mov
pusha
dec
addr16
js
jae
and
jae
or
addb
popa
mov
push
push
push
xor
mov
jp
mov
shlb
push
push
mov
cwtl
pop
in
mov
lods
lods
sbb
clc
mov
xor
pop
mov
shll
data16
jo
hlt
pushf
aaa
lock
out
sbb
xchg
sub
and
jae
push
and
sub
lret
fidivl
jle
inc
nop
mov
push
pop
loope
mov
mov
inc
outsb
push
mov
js
int
movsl
pop
hlt
mov
xchg
loopne
xor
or
push
dec
jge
rorl
sub
adc
mov
mov
adc
add
inc
shll
push
cmp
add
push
movsl
dec
mov
push
daa
push
sbb
fdivrs
adc
xchg
fldl
cwtl
adc
jle
fcoml
fsub
dec
popf
lret
call
or
mov
and
divb
loop
imul
repnz
add
jne
xor
mov
shrl
pop
dec
and
in
lahf
adc
jg
test
call
out
push
inc
add
ja
adc
sub
sub
xchg
cmpsl
xor
xchg
into
lahf
aam
lret
mov
pushf
add
sbb
rcll
jne
add
sbb
mov
dec
adc
lret
push
pop
fiaddl
les
lds
js
test
and
mov
sbb
xor
cltd
jl
pop
push
rorb
xor
inc
jns
daa
repz
das
mov
dec
lcall
scas
sbb
std
comiss
loope
jne
xchg
aad
jmp
inc
lds
sub
into
sub
cmpsb
pop
xor
add
shrb
mov
inc
dec
cmp
imul
loop
pop
mov
aas
or
jno
and
sub
inc
rcrl
push
and
add
fstpl
dec
rcrb
popa
in
shr
xchg
lea
cld
add
stos
sub
lahf
sbb
sub
add
cltd
add
add
jne
add
int
fwait
scas
cmp
adc
mov
andb
in
sbb
ljmp
xchg
jmp
rep
arpl
sbb
mov
movsb
or
jbe
psubusw
dec
sbb
inc
fisubs
int
or
xor
sub
call
xchg
or
cmp
fisubrl
dec
test
sti
dec
insb
mov
test
fidivrs
mov
insb
mov
shrb
rcll
cmpsb
out
mov
sub
push
loop
inc
out
fidivl
xchg
icebp
dec
pusha
in
lods
stos
xor
xchg
xchg
pushf
fbld
jnp
fldt
mov
mov
repz
lret
out
es
out
enter
or
fldt
fbstp
in
xor
xor
out
aam
sub
jns
cmp
pop
fldt
jl
dec
and
mov
push
push
iret
insl
jge
pop
sti
xor
data16
fimuls
test
lcall
and
outsl
adc
movq
fsubr
dec
push
pop
out
nop
fldenv
push
subl
cltd
mov
jne
mov
out
incb
mov
mov
dec
data16
in
cmpsl
inc
iret
push
xor
lahf
scas
dec
sti
popf
mov
xchg
add
mov
adc
pop
dec
adc
jp
ljmp
or
mov
lahf
mov
popf
lock
pop
stos
xchg
mov
or
enter
fdiv
push
insb
scas
push
cwtl
push
rcll
sahf
in
out
cmp
rcrb
sub
imul
xchg
into
enter
push
in
cltd
shrb
lcall
movsl
movsb
pop
clc
pushf
insl
fsubr
jo
ror
lock
in
push
aaa
fs
add
mov
sbb
push
jmp
add
or
push
mov
jbe
push
jb
das
arpl
mov
jmp
decl
outsl
lahf
pop
adc
push
pop
test
mov
adc
les
sub
fs
ljmp
daa
dec
jp
jg
insl
dec
fwait
mov
call
pop
in
stos
inc
xchg
mov
push
je
push
cmc
jle
stos
lods
out
fcomip
mov
das
lahf
mov
inc
adc
push
jb
call
jns
sub
pop
xchg
jnp
pop
les
ficompl
or
hlt
mov
xor
push
lods
jbe
add
jg
pusha
jl
imulb
jmp
imul
mov
push
enter
push
stc
mov
mov
xchg
mov
dec
push
icebp
cmp
mov
popf
push
jae
test
xor
gs
mov
mov
inc
and
xlat
cs
das
push
pushf
pop
shlb
mov
xchg
lret
inc
ret
stos
in
repnz
jle
dec
and
mov
aas
js
fdivl
sarl
mov
push
mull
leave
nop
sbb
xlat
jle
mov
or
or
js
outsb
cmp
add
hlt
cli
je
out
add
xor
push
or
xchg
mov
lcall
push
push
dec
xchg
cli
push
outsl
push
xor
push
push
sub
outsl
or
cmp
fcmovu
cltd
das
push
aaa
lahf
stc
mov
test
decb
or
sub
push
sub
ss
and
icebp
mov
inc
sahf
dec
dec
cltd
loop
std
or
dec
fimull
push
pop
outsb
push
mov
push
pop
dec
inc
dec
les
rorb
notb
in
arpl
in
dec
popa
stos
dec
xor
test
add
sbb
ds
mov
std
std
mov
roll
cmp
ret
push
sbb
mov
cmpsb
or
test
inc
decb
jnp
pop
and
push
jo
push
es
int
xor
dec
enter
mov
pushf
adc
cmp
imul
sbb
cmpsl
add
vpshad
lods
adc
aaa
adc
and
mov
fists
sbb
out
mov
mov
cmp
and
jmp
sub
or
fcomip
bound
and
xor
call
cmp
stc
lock
mov
cmp
adc
mov
lcall
icebp
add
pop
subl
pop
inc
movsl
cmp
aaa
dec
cmp
ds
pop
xchg
mov
sar
mov
add
xchg
into
xchg
not
sub
pop
inc
ljmp
inc
test
out
enter
inc
ja
out
xor
sub
idivl
mov
aam
testl
leave
arpl
dec
xchg
andb
adcl
xchg
mov
jle
pop
fdivl
shrl
sbb
mov
or
orl
sbb
cli
fdivrl
adcb
add
fimuls
push
adc
cld
mov
iret
and
sub
sbb
jecxz
cmp
dec
js
leave
pop
and
sti
mov
fnsave
loope
xor
cs
pusha
lret
add
xchg
inc
in
pop
or
repnz
xor
cmp
push
push
sti
fldcw
xor
sub
mov
test
pop
fiaddl
pop
push
or
xchg
cmpsl
aad
cmc
push
pop
pop
inc
add
shlb
mov
jo
jecxz
fldln2
adc
push
mov
subb
sahf
test
notl
sub
push
andb
push
mov
enter
lea
mov
sub
adc
stos
xchg
in
imulb
xor
and
jno
into
daa
pop
jecxz
enter
jb
sub
jle
leave
jbe
jmp
loopne
in
adc
les
and
xchg
in
sub
sbb
dec
add
inc
jecxz
jg
push
daa
xor
int
xor
sbb
mov
xchg
mov
push
into
pop
jp
sbb
loope
add
xor
xchg
stc
ret
push
push
hlt
jmp
es
add
arpl
sarb
push
std
mov
adc
imul
cmpsl
push
mov
lret
mov
mov
xchg
xchg
out
and
push
mov
scas
inc
inc
out
test
popa
dec
repz
ret
mov
add
or
dec
add
xchg
mov
xor
stc
cltd
jne
scas
or
ss
popa
in
cmp
pop
push
leave
jecxz
insb
sub
sbb
xchg
mov
and
jb
dec
sti
dec
shl
jmp
std
dec
and
dec
pop
rorl
dec
pop
mov
push
adc
repnz
pop
dec
int
fists
ja
sahf
les
mov
xor
dec
jge
mull
rcr
cmp
pushf
fcomps
inc
push
daa
fimuls
push
mov
in
lcall
mov
adc
mov
jmp
jmp
push
xchg
mov
or
and
les
or
adc
xor
fisubl
mov
pop
sub
mov
stc
xchg
inc
fidivrs
cmpl
movsb
cmp
inc
in
outsb
mov
or
pop
push
xor
fcmovbe
scas
outsl
rorl
cwtl
push
aad
loopne
xchg
jo
cmc
scas
xchg
add
sbb
movsl
test
xchg
sub
rcll
fwait
push
cld
pop
xlat
xchg
and
jmp
aaa
in
cmp
and
jle
fisubrl
lea
test
adc
sbb
sbb
clc
mov
mov
sahf
sbb
add
and
push
add
xor
js
adc
push
push
insl
jmp
aam
sbb
call
push
sbb
scas
push
cmp
push
dec
arpl
das
mov
addr16
pop
mov
jne
hlt
in
rorl
inc
lea
insb
out
jp
in
jle
dec
xor
push
int
xchg
push
sub
push
adc
jae
mov
add
push
xchg
xor
or
pop
sub
xchg
out
fcompl
out
andl
adc
mov
sarb
rcr
push
jno
mov
jg
imull
cmp
loopne
testb
mov
xchg
xor
mov
and
in
sbbb
je
cli
jge
hlt
test
dec
arpl
les
jbe
insb
jl
mov
jecxz
push
inc
or
jo
outsl
mov
out
sub
jg
rcrl
cmp
jae
xor
das
jle
cmp
lock
mov
in
mov
imul
movsb
loope
push
xchg
xlat
int
pop
add
fldt
fadds
or
popf
sbb
dec
inc
cli
mov
jmp
movsb
mov
push
icebp
push
fsubrp
xor
rcll
jge
mov
lret
mov
adc
enter
jne
pop
cs
pop
inc
sahf
mov
sub
enter
and
and
pop
or
push
fiadds
mov
jmp
cs
outsl
jge
ret
lahf
pop
push
adcb
inc
cmc
pop
mov
fs
cmp
cltd
pop
dec
push
add
push
mov
pop
jge
and
stc
test
fs
faddl
cmp
sub
shl
movsb
cmc
iret
ljmp
data16
test
icebp
mov
shlb
dec
jmp
mov
jbe
leave
in
rcrb
cmp
sub
jne
pushf
mov
out
scas
popf
mov
aas
mov
mov
daa
ret
int
ret
sub
dec
fisttps
cli
aaa
dec
inc
fcoml
lods
or
fs
lods
dec
pop
imul
ja
jns
xchg
movsl
out
xor
mov
cmp
andl
psubusw
lock
call
mov
dec
aad
xchg
xlat
aas
mov
ret
push
dec
pop
pop
jae
pop
sarb
loope
mov
xchg
out
mov
mov
cmp
jl
sbb
xchg
and
iret
test
xchg
push
add
into
inc
lock
mov
ljmp
add
jno
cmp
sbb
jo
out
mov
xor
cmp
dec
test
hlt
add
sti
mov
cli
adcl
daa
and
mov
repz
in
loop
loop
jns
push
cld
mov
or
outsl
and
jb
ss
xchg
jne
mov
add
mov
test
jns
jbe
insl
movsb
arpl
cli
fwait
ds
adc
test
pop
dec
aaa
push
lahf
xorb
push
ja
in
lods
rol
xchg
push
mov
xor
xor
adc
lahf
sub
mov
mov
mov
ljmp
ret
int
adc
je
stos
cs
fildll
scas
sbb
push
push
sti
pop
lods
cmp
lock
shr
sub
mov
mov
dec
cmp
cmp
loope
sbb
jb
cmp
mov
and
popa
insl
clc
sbb
ret
push
mul
sub
mov
repnz
iret
xor
adcl
sub
xor
insb
mov
dec
cmp
andb
sbb
mov
in
dec
loopne
in
cmp
mull
inc
mov
or
repnz
nop
xor
fcompl
adc
and
xchg
ja
test
icebp
jp
xchg
imul
lret
jp
lcall
push
pushf
jne
sbb
or
stos
hlt
js
fwait
pop
mov
mov
adc
lods
adc
stc
cmpsb
cmp
adc
jbe
pop
ret
xor
rcrl
cmp
cwtl
sub
faddp
scas
pop
mov
xor
jmp
push
xchg
mov
ret
xchg
ljmp
loope
mov
cld
addr16
stos
lret
popf
xor
push
out
and
das
loop
xor
cwtl
repz
fidivrs
or
mov
out
pop
jns
adc
scas
in
ljmp
dec
aaa
mov
cwtl
hlt
cmp
stc
lock
pop
ss
mov
fmuls
push
stc
addr16
or
mov
rorb
mov
ja
sbb
xor
bound
ja
inc
push
xor
fstpt
hlt
push
enter
lea
scas
add
out
cmp
inc
pop
xchg
les
int
xchg
shrb
pusha
adc
pop
mov
xchg
xorl
mov
pop
lahf
cmp
fidivrl
push
movb
jae
ret
outsl
jge
lcall
mov
xor
mov
jmp
adc
scas
sbb
or
xchg
pop
jp
ret
jmp
and
ret
ds
popa
and
pop
adcb
cltd
mov
cmp
fldt
add
cld
mov
push
push
mov
ljmp
outsl
jg
jmp
push
lea
push
xchg
sbb
or
ret
jl
add
out
mov
inc
call
mov
mov
jge
stc
je
jg
test
sub
lret
pop
sahf
jb
pmulhuw
test
jle
aad
in
out
pop
push
mov
cltd
outsb
mov
mov
inc
fmull
arpl
insb
mov
pop
aaa
cld
jbe
push
int3
shrb
out
xor
adc
sbb
xchg
cmp
frstpm(287
add
pop
repnz
cmc
inc
repnz
adc
fidivl
rcrb
fidivl
mov
lret
push
jb
and
cmpsl
sbb
push
push
pop
mov
mov
mov
mulb
pop
lea
cli
xor
and
cwtl
mov
out
hlt
lret
mov
push
scas
js
or
fldenv
inc
and
push
test
and
adc
mov
dec
push
push
rclb
lods
push
insl
inc
addb
ljmp
ljmp
jecxz
or
daa
push
push
stos
mov
in
sub
nop
repnz
push
je
ret
lret
cli
mov
mov
addr16
sahf
mov
xor
add
movsb
ror
add
adc
fdiv
jno
fldl
popa
xchg
imul
adc
jbe
test
inc
scas
pop
into
inc
rclb
lcall
jnp
mov
cs
ja
insb
ror
das
sbb
hlt
pop
insb
mov
loop
cmp
shrl
test
gs
jle
imul
mov
or
inc
jo
dec
movsb
xchg
add
ss
push
xor
cmp
idivb
cmp
fs
test
hlt
dec
mov
enter
shl
cmpsb
ret
test
mov
mov
out
add
test
push
ret
aad
or
pop
aad
cmp
shrl
dec
and
jecxz
int3
outsb
push
push
xchg
cmpsl
ljmp
jp
inc
dec
push
push
ds
loop
xchg
xor
fsubl
jg
xchg
xchg
xor
sbb
sub
xor
stos
mov
and
aam
scas
push
sbb
aad
push
adc
lods
add
cmp
es
sub
and
pusha
xor
xchg
mov
adc
xor
out
inc
leave
mov
cmp
aaa
push
sbb
loop
push
xor
data16
pop
decb
popf
push
cmp
push
pop
mov
gs
movsl
pusha
push
jecxz
retw
dec
pop
pop
mov
lds
hlt
mov
pop
sub
jmp
stos
out
icebp
cmpsb
jl
in
dec
sub
fimuls
mov
cmp
push
xchg
aaa
insl
mov
and
hlt
xchg
stos
cmp
arpl
jbe
xchg
flds
cld
sbb
scas
mov
insb
sbbl
ficoms
jb
lds
cmp
mov
scas
popf
sub
mov
sbb
xor
mov
ljmp
or
pop
sub
sub
imul
push
lret
cmp
push
insb
movsb
testl
fisttps
pop
push
divb
pop
push
or
sbb
ljmp
sti
dec
push
push
notb
jb
sub
push
pop
icebp
je
adc
or
sbb
or
shl
and
mov
sub
pusha
mov
push
xchg
jg
cmp
jge
dec
add
cmpsl
out
lock
lret
sub
mov
ljmp
movsl
push
fs
mov
and
inc
in
inc
xchg
pop
cmp
sub
xor
sarl
test
xor
aas
and
push
out
ja
inc
ss
add
mov
popf
dec
add
push
pop
push
add
sahf
cli
or
mov
inc
and
mov
fdivrl
subb
jo
loopne
sub
fiaddl
mov
jo
pop
sahf
lods
sub
cltd
in
hlt
lret
cmp
loop
push
imul
xchg
push
dec
push
jg
xchg
push
icebp
cltd
dec
out
cld
inc
mov
dec
sbb
push
out
jp
mov
arpl
add
push
imul
mov
aad
inc
fwait
gs
daa
mov
shlb
or
subl
fadd
jmp
roll
sub
pop
push
nop
lea
xor
outsl
pop
fstpt
xor
mov
pop
pop
pop
xor
nop
pusha
jp
repnz
inc
mov
or
pop
push
push
test
icebp
lock
nop
movl
lret
je
mov
repnz
or
rcrl
jne
push
xchg
or
jo
push
pop
xchg
ret
push
movb
sbb
out
ja
inc
push
dec
dec
mov
mov
and
int
je
sti
inc
int
jg
cmp
rclb
lahf
xchg
mov
test
xor
daa
and
mov
push
mov
and
push
imul
and
outsl
arpl
sbb
jp
dec
pushaw
lcall
loopne
in
add
mov
add
xchg
fwait
jmp
insl
and
fs
mov
adc
xchg
mov
and
or
pop
xor
cmp
test
push
mov
ret
test
nop
pop
cmpb
sub
test
inc
enter
or
mov
into
sub
clc
xor
pop
add
mov
arpl
pop
mov
scas
cmp
push
or
mov
cmp
fdivrs
fwait
mov
fwait
push
addr16
adcl
and
aam
adc
jecxz
push
xor
sbb
es
adc
out
lret
lods
jns
fs
adc
les
xchg
mov
nop
sbbl
mov
pop
push
adc
add
and
and
arpl
lret
scas
add
inc
scas
dec
mov
or
and
test
into
movl
out
ja
add
pop
lret
jae
dec
int3
add
mov
fdivrs
mov
std
xor
xchg
test
clc
test
in
in
pop
outsl
sbb
aas
and
xor
push
adcl
xor
push
mov
ret
sub
sbb
call
shl
xchg
ja
add
leave
ljmp
je
aam
inc
jmp
fists
shlb
mov
jp
mov
mov
fldt
dec
repnz
outsb
fdivs
mov
mov
out
test
call
mov
push
mov
shlb
stc
and
xchg
pop
lock
jbe
sbb
cmp
aaa
pop
pop
jp
cmp
sbb
subl
inc
in
in
scas
dec
pop
jns
dec
jl
bound
push
decl
mov
mov
dec
subb
pop
and
inc
popa
cmpsl
dec
cmpsl
hlt
andl
in
ret
dec
xlat
clc
ds
cmp
daa
ss
test
cmp
or
enter
or
push
xchg
or
enter
int
daa
into
jl
into
and
sti
mov
repz
mov
rolb
leave
or
inc
inc
mov
jae
push
pop
mov
mov
pop
add
int3
dec
insl
mov
popa
adc
xchg
dec
je
movsl
daa
scas
std
adc
pop
in
fistpl
hlt
hlt
push
into
push
mov
or
jmp
mov
mov
mov
sbb
or
in
mov
and
ljmp
sbb
popf
xor
push
pop
scas
arpl
jp
add
aas
push
push
sahf
jge
xor
incb
dec
outsb
fldl
fcompl
in
fisttps
mov
push
int3
pop
outsb
mov
and
outsl
xor
testb
inc
pop
jle
mov
bound
inc
mov
sti
shl
sub
add
fwait
notl
in
rorl
fistl
and
addr16
xacquire
pop
adc
and
call
imul
mov
dec
pop
aas
or
bound
imul
dec
das
ja
sub
pop
addr16
lds
jns
jecxz
adc
cmp
loop
mov
fstp
mov
xor
mov
xchg
fidivrs
cmpsb
std
mov
test
shll
cs
stos
movb
sub
and
mov
arpl
stos
push
sub
add
push
les
pop
sarb
jns
fisubs
and
stos
cmc
mov
dec
xor
mov
fstps
lret
xchg
and
mov
or
sub
or
mov
mov
icebp
rorl
jg
xlat
adc
imul
lods
std
cwtl
les
cli
sbb
mov
jp
sub
adc
shrb
pop
push
xchg
and
mov
enter
or
sub
sahf
sbb
ror
pop
sahf
jmp
fs
in
cltd
lsl
xor
pop
or
push
jbe
or
ja
xorb
in
test
push
aam
cmp
cli
cmpsl
xor
imul
add
loop
shrl
sbb
pop
pushw
jnp
mov
xlat
mov
mov
sbb
xor
xchg
addr16
stos
mov
and
stc
dec
shlb
xchg
and
or
pop
dec
clc
mov
cltd
bound
fwait
push
stos
and
xchg
in
push
dec
xchg
lods
dec
dec
cmpsb
push
mov
daa
or
sahf
adc
leave
je
jb
xor
dec
iret
fistpll
cmpsl
xchg
add
mov
lock
fwait
sahf
fwait
test
mov
sahf
and
int3
jo
and
dec
xchg
sub
jo
aam
shr
cmp
xchg
or
mov
push
mov
mov
movsl
cmpsl
negl
mov
std
in
xor
add
adc
inc
cmp
inc
jl
neg
inc
sub
in
cmp
lret
inc
loopne
test
nop
cmp
cli
pop
push
call
call
outsl
adc
add
outsl
icebp
jne
xor
ljmp
mov
daa
inc
inc
sub
pop
and
aaa
xchg
push
iret
sbb
or
cs
lds
fildl
add
cmp
bnd
adc
pushf
push
mov
xor
cmpsb
lret
inc
fildl
and
xchg
sahf
pushf
adc
mov
loopne
push
push
call
pushf
mov
push
jno
add
mov
adc
sub
fidivl
xor
push
in
mov
push
dec
lods
js
and
jp
add
inc
mov
fstps
mov
out
stos
mov
jb
loope
or
daa
mov
jl
sub
mov
callw
push
sbb
mov
popa
lret
add
repz
repnz
jecxz
dec
mov
mov
or
xor
mov
jns
xchg
adc
aaa
cld
add
mov
or
in
les
sub
sub
and
xchg
out
and
das
sub
pop
pop
adc
loope
lds
inc
sbb
cs
shrl
mov
fidivrs
mov
andb
xorl
bound
cwtl
mov
jle
sti
mov
mov
incl
pop
movsl
cmp
subb
xor
int
adc
mov
out
ds
popw
sub
xor
scas
sbb
ss
adc
hlt
mov
addr16
test
push
adc
dec
movsl
nop
scas
add
jns
push
stos
cmp
and
ljmp
push
fsubrs
ficompl
cld
std
push
negl
mov
enter
mov
fcoml
inc
loope
xor
scas
sub
mov
sub
enter
pushf
aaa
jns
cmp
nop
dec
xchg
push
or
les
or
push
lds
addr16
call
int
jbe
or
mov
das
fmuls
bound
stc
jge
mov
stos
pusha
sbb
add
mov
and
and
and
out
movsl
jmp
xor
sub
push
mov
jmp
repnz
lods
jns
stos
cltd
xchg
int3
rorl
xor
or
fcompl
out
adc
ret
out
mov
cltd
shrl
jns
dec
jmp
mov
repnz
xor
out
mov
adc
pop
push
fldcw
push
jo
jne
add
movsb
push
test
xchg
andl
push
push
outsl
enter
scas
dec
aad
ljmp
xchg
jg
popa
sarb
std
arpl
jnp
mov
repz
fidivs
mov
scas
mov
mov
and
mov
mov
mov
or
popa
cmp
sub
ret
cmpsl
std
jl
cmp
testl
push
cli
jb
jg
sbb
inc
push
dec
and
mov
icebp
mov
inc
mov
dec
inc
lcall
pushf
out
push
icebp
jl
shll
push
mov
add
movsb
mov
sbb
test
loopne
mov
sbb
out
cmp
pop
mov
in
addr16
mov
jns
pop
xor
pusha
or
adc
pop
dec
jne
pop
sub
pop
testb
in
xchg
nop
js
stos
and
shl
fimuls
roll
jge
call
mov
scas
ljmp
cmp
imul
imul
sbb
cmpsb
sub
sub
sti
lock
jle
inc
das
xchg
rorb
out
add
scas
jnp
dec
mov
sbb
xlat
lret
out
ja
inc
inc
notb
rorl
push
popf
xor
pop
mov
jp
mov
add
lcall
mov
mov
das
fwait
ret
jle
outsl
fcomp
test
sti
mov
test
dec
dec
add
cwtl
push
js
lock
xchg
gs
ja
pcmpgtw
mov
test
gs
xchg
xchg
push
add
and
js
mov
iret
ds
xor
sub
loope
mov
sbb
scas
dec
cli
stos
sub
inc
inc
or
add
jg
icebp
sbb
dec
lods
fisttps
rcl
and
ja
imul
pop
lods
lods
test
pop
mov
mov
pop
and
arpl
sbb
cmp
adc
daa
mov
fisubrl
or
stc
dec
cmp
pusha
push
add
ljmp
push
lret
fnstenv
dec
cld
loop
mov
pushf
dec
mov
xchg
xor
pop
xchg
aas
cmpsl
fdivrp
add
in
or
inc
andl
in
lret
enter
push
jne
lahf
into
sbb
bound
popf
pop
in
out
add
jae
add
pop
sbb
stos
daa
mov
into
dec
sub
out
jo
ffreep
add
or
add
and
pop
es
fbld
mov
arpl
lret
xchg
or
sahf
mov
wrmsr
and
lcall
xor
fs
push
and
jg
pop
lock
jne
mov
loop
pop
jmp
push
lods
aaa
outsb
cmc
push
int
int
and
shr
dec
inc
mov
or
iret
mov
pop
cld
aas
sub
mov
xor
das
frstor
push
shrl
inc
or
xchg
cmpsb
pop
xor
pushf
mov
jl
stos
cltd
aam
adcb
lock
rorl
add
dec
ret
xor
jb
sub
mov
jae
mov
push
outsl
mov
lcall
xchg
arpl
pop
idivl
sub
repz
imul
dec
mov
jle
loop
xor
xor
mov
orl
pop
dec
lods
fs
sub
hlt
jmp
mov
daa
pop
mov
add
mov
mov
jo
mov
fmuls
adc
es
fldl2t
call
adc
test
ja
std
popa
sbbl
adc
in
xor
cmp
sbb
inc
mov
push
cmp
mov
fdivs
fdivrl
insb
test
ja
movsl
xor
pop
repz
xor
push
cmp
xchg
outsb
loop
jp
fildl
push
or
iret
mov
mov
test
pop
pop
scas
mov
push
mov
sbb
addr16
jae
icebp
or
sub
jae
pop
in
pushf
in
sbb
push
lret
jno
dec
fbld
lea
mov
inc
gs
fwait
or
add
xor
mov
mov
int3
dec
test
fadd
fmuls
clc
call
rorb
es
adc
lds
pop
adc
dec
jmp
pop
idivl
cmc
push
sub
shll
mov
sbb
lods
cmpsl
add
push
ficomps
jno
mov
xchg
ret
aam
and
test
std
add
dec
adc
loopne
sahf
and
jbe
jmp
or
adc
mov
sub
pop
mov
cmp
jns
lahf
lock
icebp
jle
lret
pop
mov
in
lock
movsl
cmpsl
lock
pop
call
aad
mov
cmp
dec
in
sub
std
movsb
movsb
xchg
call
jecxz
inc
cld
rcr
aaa
fisubrs
dec
rclb
add
mov
sahf
cmc
mov
push
adc
adc
mov
xchg
jo
or
mov
or
je
adc
scas
mov
or
repz
mov
adc
add
test
sub
js
outsb
fadds
dec
ret
sub
cmp
cltd
push
push
sub
insl
pop
jns
inc
mov
mov
insb
aas
jmp
fisttps
lret
jecxz
mov
sub
sub
pop
xor
insl
int
jmp
and
inc
cltd
mov
out
pushf
push
cltd
xchg
test
pop
sbb
mov
dec
cmp
xor
arpl
inc
movups
icebp
push
dec
js
mov
xor
imul
int3
inc
mov
nop
lret
xchg
push
sub
mov
or
rorb
leave
jg
mov
dec
ret
sub
repz
testl
aaa
push
sub
leave
decb
push
adc
xor
jg
cmp
xchg
jno
aas
aaa
imul
rcl
inc
enter
push
test
cmc
jne
pop
iret
loope
mov
orb
adc
mov
into
lcall
pop
inc
pushf
pop
icebp
gs
les
insb
push
inc
adc
mov
dec
cltd
mov
sti
push
and
sbb
mov
pop
sbb
sbb
dec
jp
push
andb
sub
out
push
cmpsb
inc
leave
cmpsb
add
mov
ds
mov
std
and
cmp
into
outsb
fsubr
mov
lock
lcall
xchg
loop
inc
and
push
mov
adc
sub
jg,pn
cmp
jmp
sub
push
int
push
ja
inc
sub
rorb
ret
stos
jae
or
xlat
dec
push
jp
xchg
repnz
jno
adc
clc
and
clc
imul
sbb
cmp
test
popa
mul
dec
repz
push
pop
ret
outsl
pop
sbb
loope
cmp
sahf
dec
inc
dec
pop
cli
ret
mov
pusha
out
push
lds
cmc
in
popa
mov
fldenv
lret
cmp
leave
sbb
icebp
outsl
scas
or
out
mov
repnz
out
dec
aad
add
jb
int
adc
test
dec
clc
je
xor
push
mov
cmp
aam
mov
jmp
push
cltd
mov
gs
mov
jl
add
mov
je
fmul
mov
cmc
xor
xchg
sub
jp
in
ret
scas
fwait
add
daa
nop
mov
dec
cmpsl
lods
ds
xchg
stc
icebp
loopne
je
cs
dec
sti
sub
add
jnp
rcr
push
hlt
pop
mov
imul
cmp
sbb
shrl
mov
xchg
nop
fcomps
data16
mov
test
xchg
lea
xor
pop
inc
adc
aam
dec
lds
movsb
sub
cmc
cmpsl
loopne
jp
xchg
cmpsb
and
and
inc
xor
dec
icebp
lods
arpl
sub
dec
push
adc
jns
push
in
jle
ljmp
addl
in
insb
pop
int3
add
cmp
add
dec
cmp
xor
mov
lahf
mov
test
pop
mov
xchg
xchg
scas
rcrl
xor
or
ds
mov
sti
inc
sbb
inc
imul
push
aam
stos
dec
aas
or
jmp
shl
cmc
fistl
je
call
xchg
in
call
jo
add
push
mov
mov
xor
push
fisubrs
add
lods
lret
fs
fcmovb
in
mov
hlt
in
xor
stos
test
into
inc
mov
sti
mov
rclb
push
sub
add
adcl
fbstp
sbb
notb
mov
mov
jp
push
adc
arpl
loopne
pop
mov
cmpsl
pop
xchg
lea
int
ljmp
mov
jg
pop
xor
jnp
int3
cld
int
out
adc
sub
bound
xor
sbb
cmpsb
rcrb
pop
aam
adc
or
out
mov
cmp
mov
pop
xchg
in
aas
cwtl
xor
jbe
jp
sub
or
push
adc
inc
and
mov
lret
mov
bound
mov
insl
je
xchg
cmp
mov
and
cmovbe
or
xor
js
jbe
mov
xor
jns
jo
cmp
pop
push
ljmp
test
lea
testb
mov
mov
sarl
pushf
cmp
rorb
movsb
inc
popf
push
mov
std
icebp
ret
lock
pushf
imul
add
xchg
stc
and
addb
or
out
es
rolb
or
out
jge
adc
sbbb
xor
icebp
and
sub
push
ret
mov
push
idivb
in
jmp
or
shll
inc
add
out
sti
jmp
xlat
mov
cmp
or
adc
xorl
test
or
add
jecxz
movd
test
sbb
icebp
pop
push
mov
jle
test
fwait
xchg
test
scas
add
stos
add
mov
pop
aad
sub
popf
les
sub
pushf
std
stc
dec
mov
jnp
shl
pop
mov
mov
in
push
mov
push
aad
les
sub
mov
xchg
sbb
adc
and
push
in
mov
pop
or
out
xor
test
mov
stc
jnp
jle
stos
leave
mov
addr16
popf
fcmovb
mov
or
pop
xchg
add
jo
mov
outsl
loop
dec
call
cs
mov
je
mov
insb
insb
and
shll
pop
andb
lds
aad
iret
and
lock
in
push
outsl
mov
aaa
outsb
aam
push
jg
das
add
ret
push
xchg
loope
sti
xchg
cld
sub
pop
lahf
cltd
addr16
xchg
rorl
aas
mov
loope
inc
mov
push
stos
inc
aas
add
movsb
pop
inc
stc
andb
leave
and
jbe
or
aam
or
mov
mov
sahf
bnd
lods
bound
ficompl
push
mov
dec
dec
js
shrb
cmp
push
rcrb
fsubl
aad
dec
ljmp
push
jl
sub
inc
aam
in
out
add
cmp
lds
cli
int3
pop
push
pop
rorb
int
sbb
ja
push
cmpsb
fs
ss
inc
xchg
adc
cmp
nop
insb
push
loop
xchg
popa
movsb
dec
sbb
es
popa
jns
icebp
lahf
dec
rcr
mov
cld
and
or
mov
je
imulb
mov
xchg
or
in
pop
cmp
insb
jnp
mov
jno
push
pop
cmc
popa
pop
push
cmp
out
daa
jb
out
and
xor
fs
xor
std
add
mov
push
push
push
jne
xor
and
inc
mov
push
mov
push
sub
push
or
jle
outsb
addr16
adc
loope
lret
daa
mov
xor
leave
gs
jp
ss
js
shr
sub
mov
jno
xor
test
xchg
or
sbb
mov
rcrb
fcoms
push
sti
push
dec
ficoms
xor
es
pop
ss
xor
lahf
mov
sti
add
xchg
out
ss
movsl
lahf
hlt
push
mov
jns
jne
bound
xor
movsb
jno
mov
sub
call
mov
inc
mov
and
push
rorb
jp
add
mov
lock
daa
mov
fsubl
push
mov
fs
std
into
inc
jmp
jbe
xchg
cmp
jns
pop
xor
xor
in
inc
mov
sub
or
sbb
lock
adc
cmpsb
xchg
or
inc
fimull
xor
mov
cmc
xchg
pop
mov
orb
jmp
push
push
sbb
cwtl
cmp
lahf
in
pop
mov
imul
add
iret
xchg
out
nop
outsl
or
imull
jmp
fdiv
inc
lock
in
inc
push
or
aaa
fildl
bound
sbb
and
mov
jns
fdivs
mov
mov
mov
hlt
jno
fs
push
cmp
cwtl
addr16
sti
cs
xchg
out
xchg
dec
outsl
push
outsb
adc
insb
and
sbb
leave
xor
aad
hlt
int3
add
fcoms
out
lea
jo
enter
mov
dec
loop
jl
mov
add
js
stos
dec
pop
add
push
mov
mov
push
mov
push
inc
push
fadds
test
mov
negb
aas
outsb
lahf
inc
inc
popf
or
rcl
lret
adc
daa
xor
inc
ss
movsb
jbe
stc
out
ds
cmp
push
aam
add
ss
test
cld
push
imulb
or
mov
pop
add
xor
aad
xchg
enter
out
and
xor
ljmp
mov
push
std
sbb
or
pop
mov
xchg
loope
pop
mov
and
mov
outsl
out
lahf
sub
bnd
lods
jae
push
pop
or
add
outsl
xlat
mov
mov
js
inc
gs
jg
js
add
lods
rcr
das
loopne
fildl
push
mov
cmp
cli
stos
xchg
mov
pop
push
mov
push
aad
pop
and
inc
mov
fwait
mov
negb
jbe
lret
aaa
std
and
mov
inc
out
out
jle
daa
pop
xchg
mov
pop
inc
rolb
aad
fisubl
pop
sbb
mov
and
xchg
xchg
gs
imul
xlat
pop
andps
rcrb
rolb
outsb
stos
out
cmp
and
mov
mov
in
nop
je
sbbb
mov
int
sbb
mov
dec
cltd
or
gs
mov
adc
movsb
jmp
cmp
dec
mov
inc
out
push
pop
push
syscall
cltd
mov
dec
cli
mov
ret
mov
scas
inc
xor
mov
lds
jno
push
and
add
icebp
addr16
xchg
int
rcr
add
dec
push
stos
sub
enter
inc
call
mov
inc
rcl
xor
mov
sbbl
dec
inc
inc
lcall
into
popf
test
jno
inc
es
inc
xor
lahf
out
aam
test
mov
sub
hlt
insb
jecxz
jne
xor
xor
or
xchg
daa
mov
push
test
inc
loope
cld
cmpsb
pusha
or
fstp
sarl
inc
into
lock
fmulp
and
mov
push
xchg
or
sbb
pushf
adc
jbe
adc
xchg
sub
dec
pusha
ljmp
add
xchg
xor
ret
adcl
pop
ds
or
xchg
aaa
ljmp
rorb
xchg
sbb
push
lahf
pop
and
loop
fldl
xchg
shlb
xchg
sub
inc
imul
lcall
mov
aad
roll
pushf
es
mov
aas
xor
or
push
push
fwait
lcall
nop
jle
frstor
cmp
mov
aad
mov
int3
lret
repz
pop
stc
mov
sub
sub
sub
test
out
je
lcall
aas
jl
and
lock
xchg
sub
fistl
fwait
movsl
sbb
rolb
loop
xor
mov
or
stc
cmp
sarb
dec
imul
add
cltd
lret
jne
das
fldenv
jb
push
popa
pop
mov
sbbb
btr
ljmp
dec
das
mov
pusha
vshufps
js
push
arpl
push
mov
out
dec
inc
jp
adc
sub
imul
data16
xor
or
mov
insb
mov
ja
xchg
sub
mov
or
add
in
mov
dec
shll
jp
hlt
imul
dec
cmpsb
sbb
popa
out
and
cmp
cmp
ficoms
pop
std
cmpb
sbb
sbbb
mov
adc
mov
rcr
cmp
xchg
or
fs
loopne
lret
lods
or
ret
flds
mov
fldl
sub
lcall
int3
scas
mov
inc
jnp
xlat
stc
sbb
push
cmp
adcb
adc
dec
mov
xor
cmp
outsl
inc
or
stos
add
cmpsb
jp
mov
outsb
adc
and
push
nop
push
aam
push
pop
or
lret
repnz
fadd
fstpt
in
sub
mov
pop
jp
xor
loop
daa
xchg
enter
jle
fsts
adc
test
cmp
sub
mov
and
jge
jno
xor
and
jge
repnz
jp
mov
mov
push
inc
mov
xchg
jge
fcoml
mov
xor
xchg
dec
xchg
das
ja
dec
push
xchg
scas
or
push
jmp
and
outsl
in
cmp
sub
push
xorb
hlt
dec
mov
ret
outsb
loopne
and
inc
xorl
add
shlb
cmp
mov
icebp
lcall
icebp
pop
sub
fs
add
cmp
scas
or
push
test
mov
fidivs
rolb
jno
add
add
loopne
mov
lods
and
lcall
inc
les
lock
push
push
testb
fimull
inc
or
lcall
mov
pop
xchg
push
push
pop
rorl
add
mov
arpl
or
icebp
pop
fwait
stc
movsl
dec
shr
or
ds
jo
inc
xor
jbe
or
cmpsb
lret
lahf
mov
xor
popa
lcall
fistl
pop
pop
xchg
out
sub
mov
dec
sti
jns
les
sub
scas
shlb
mov
adc
jne
cmp
sbb
cmp
xor
lcall
test
aam
out
cmp
setae
push
rclb
adc
xor
movsl
sbb
int
stc
insl
mov
jl
mov
jl
add
xor
stos
movsl
shr
jno
and
loope
mov
jmp
mov
or
pushf
shrb
int
push
les
sarb
jae
inc
jae
enter
mov
stc
add
xchg
cli
fcoml
int3
pop
es
pop
jmp
jno
jp
out
bound
jb
iret
jno
iret
data16
movsb
fwait
lret
jbe
divb
in
xchg
popl
jo
test
mov
clc
push
popf
dec
stos
xor
jnp
cs
pop
and
sub
sbb
loop
or
fnstsw
mov
ljmp
add
mov
stos
cmpsl
mov
mov
jno
pop
cmp
in
push
in
in
std
test
mov
int3
data16
aas
cmpsl
jae
sbbl
pop
std
dec
push
ja
mov
sbb
xor
lods
cld
lea
test
aaa
adc
scas
adc
mov
cmpsb
xchg
sbb
std
popa
push
sub
or
orb
aam
mov
outsl
daa
mov
jo
outsl
adc
push
add
cmpsb
imul
lea
mov
icebp
add
or
xchg
mov
loopne
adc
sub
jmp
test
in
inc
mov
divl
xor
push
into
js
xchg
fbld
fsub
and
cmp
das
xchg
jbe
es
sbb
sbb
test
lods
xchg
int
movsb
imull
or
fildll
insb
call
ljmp
rcr
data16
arpl
mov
sbb
mov
mov
mov
jne
nop
push
jmp
aad
mov
fists
mov
fsubrl
pusha
shlb
dec
test
mov
dec
sub
mov
inc
repnz
ja
sti
jbe
ds
ds
cmc
xor
cmp
pop
lcall
push
mov
xor
jo
icebp
mov
jmp
fstps
push
adc
pop
dec
sub
addr16
sbb
test
iret
imul
dec
ja
outsl
sbb
leave
mov
and
pop
and
je
aad
xorl
inc
push
std
pop
cs
fldenv
insl
adc
popa
ljmp
int3
mov
repnz
jmp
push
int
jmp
adc
sbb
shl
repz
xchg
push
mov
xchg
ret
jg
and
and
xchg
lahf
sbb
push
sbb
mov
in
jecxz
dec
fdivrp
sub
sbb
mov
cmp
inc
xchg
xlat
xchg
push
stos
and
jle
xchg
call
test
out
mov
mov
fldcw
jge
pusha
inc
sub
shrb
xor
lods
repnz
xchg
xor
mov
mov
mov
add
dec
xlat
gs
pop
jg
dec
sahf
leave
scas
std
pushf
dec
mov
loop
mov
mov
test
sbb
lret
mov
adc
push
jmp
adc
sbb
sub
xor
je
sbb
mul
sub
fcmovnb
push
or
ret
xchg
ds
repnz
shrl
movsb
pop
mov
das
push
lret
dec
push
idivl
pusha
arpl
sahf
or
jp
ss
push
or
mov
jb
lret
inc
and
out
dec
cs
sub
mov
dec
or
insl
loop
icebp
outsl
jg
add
pop
dec
aas
dec
sub
adc
aam
gs
mov
xor
pop
cwtl
fnstenv
cld
aam
sub
inc
test
dec
xchg
sbb
dec
mov
fdivl
jbe
std
inc
test
cmp
xlat
sbbb
mov
lret
mov
das
pop
mov
jb
jmp
inc
les
pop
incl
push
xchg
imul
clc
add
iretw
inc
xchg
xchg
pop
inc
cltd
adcl
or
pop
push
xchg
pop
jmp
fwait
scas
js
and
push
or
lahf
inc
mov
inc
jns
sub
inc
and
bound
mov
loope
popa
loop,pn
cld
insl
xchg
stos
mov
or
mov
push
dec
inc
mov
fs
dec
enter
fcmovnb
shlb
push
stos
cmp
int3
mov
nop
inc
jns
outsb
stos
mov
lea
add
test
sahf
mov
aas
mov
js
aaa
pop
scas
cmp
or
les
imul
insb
cmc
dec
xchg
jo
insl
insl
dec
push
or
insl
ss
lahf
sub
xchg
sub
fldl
out
lea
out
mov
lret
jmp
dec
aad
call
les
cmp
movsb
dec
adc
mov
inc
mov
cmp
sbb
in
and
mov
push
iret
xor
shll
hlt
inc
pop
popa
jbe
cltd
inc
xchg
xchg
fisttpl
lods
std
xchg
jmp
cmpsb
fstpl
sti
sub
mov
cmp
xchg
jns
dec
das
xchg
test
scas
xchg
repz
hlt
test
sub
rorl
pop
or
in
inc
jl
in
cmpsl
pop
sbb
bound
daa
sbb
mov
nop
sbb
push
aam
gs
jge
fidivs
test
mov
push
cmc
nop
divb
bound
rcrb
inc
out
jnp
mov
stos
mov
mov
and
in
cmp
int3
xor
mov
or
sahf
mull
xor
lea
ja
cld
mov
fistl
cmp
mov
lea
lret
int3
aad
xor
outsb
cltd
fcoms
fs
lea
sarb
mov
mov
nop
xor
sub
call
ret
mov
jmp
cmp
mov
jbe
daa
or
sar
pusha
cli
mov
ds
leave
mov
adc
add
mov
data16
mov
mov
cmp
add
outsl
xchg
xor
xchg
jge
mov
cmc
in
fcompl
or
or
push
mov
test
out
sbb
daa
mov
mov
imul
jae
lock
sub
loopne
pop
out
mov
xor
nop
lds
mov
shl
dec
lock
push
movsb
out
and
lahf
test
mov
sub
lods
inc
sbb
dec
or
xor
in
in
mov
sahf
or
cmp
jno
mov
add
clc
loop
imul
movsl
jle
ret
dec
idiv
leave
mov
cltd
fiadds
add
or
jg
mov
lahf
sbb
mov
push
in
repz
xchg
cld
cmp
cmp
jno
push
lahf
mov
aas
sbb
loope
fistpll
pop
mov
mov
je
rcr
xchg
push
call
xchg
pop
jl
sub
addr16
icebp
sub
dec
push
xor
movsl
popf
mov
jb
sbb
jle
jno
sub
or
inc
mov
enter
jo
pushf
cmp
xchg
das
push
pop
sub
mov
inc
leave
out
and
and
test
sbb
mov
jne
xor
imul
lds
in
add
dec
mov
xorl
aas
or
cs
xchg
cltd
mov
jmp
push
adc
xor
pop
sub
sbb
js
mov
pop
xor
sahf
inc
sub
lret
cmp
ret
xchg
es
dec
scas
les
es
out
imul
push
lock
scas
jle
dec
rcrb
lcall
dec
jns
push
ss
out
add
and
jae
es
outsb
and
and
pop
pop
cmp
rcrb
adc
cltd
mov
aaa
lods
out
scas
int
mov
xor
dec
adc
aas
jne
lods
and
dec
scas
mov
aas
cld
sub
pop
pop
dec
sbb
mov
jbe
cmp
cmpb
stos
rcrl
sbb
add
dec
mov
lods
mov
das
jae
outsb
mov
push
mov
dec
fstpt
and
sbb
aam
or
and
xchg
in
mov
push
mov
shl
andl
sbb
jle
inc
jl
idivb
cltd
aad
jl
cwtl
int
insb
jae
xor
mov
in
fidivs
adc
mov
inc
jne
insb
into
cs
mov
ljmp
jno,pt
add
clc
adc
mov
dec
icebp
sub
movsb
lods
std
cmp
aas
mov
loope
xchg
test
out
gs
ficomps
jl
stc
negl
adc
ret
lret
adc
shll
inc
aaa
in
dec
sbb
outsl
mov
out
dec
cld
mov
ficoms
sti
push
dec
jmp
sub
pop
bound
dec
adc
sarl
fldenv
lret
jns
into
and
nop
mov
sbb
imul
add
lods
das
and
in
and
sti
xor
pop
stc
cmpsl
pop
hlt
pushf
dec
cmp
sbbb
fldt
cmp
lea
mov
movsl
mov
ja
mov
cltd
movsb
jb
and
push
mov
push
cmp
ds
sub
insb
push
mov
jmp
adc
add
cmpsb
xor
pushf
out
stos
xchg
mov
sub
jg
mov
pop
push
inc
nop
fsubl
push
add
mov
push
cvttps2pi
mov
xor
add
call
xlat
pop
push
test
xor
scas
pop
mov
pop
pop
mov
ret
jbe
cmp
dec
insb
test
dec
sbb
mov
sub
mov
bound
lret
inc
push
push
dec
adc
and
xor
in
das
add
mov
mull
xlat
cmpsb
cwtl
nop
aaa
mov
aad
pop
frstor
inc
out
fsubs
mov
jbe
sbb
sub
xchg
arpl
out
cwtl
inc
test
dec
fstpt
pop
mov
je
cmpsl
int
mov
ds
popf
out
pop
int3
inc
rcll
pusha
jne
js
mov
add
push
data16
jecxz
jle
out
test
pop
lods
inc
ja
stc
popl
popf
adc
inc
loop
aas
mov
cmp
scas
sub
movsb
xchg
out
bound
in
fisttps
clc
inc
daa
clc
mov
add
xchg
or
adc
mov
out
dec
fnstsw
ljmp
in
xor
or
cmpsb
dec
jl
pop
into
xor
mov
int
cmp
add
loopne
mov
scas
pop
call
aam
and
and
mov
popf
arpl
sbb
sub
sbb
adc
and
pop
test
das
jo
out
test
imul
pop
icebp
mov
jp
call
add
jae
cmp
xchg
pusha
test
mov
push
jmp
sub
aad
xchg
out
mov
lock
inc
mov
jge
jg
jno
xor
push
aad
add
or
jmp
std
lcall
movl
jge
jg
push
test
int3
icebp
mov
sarb
inc
and
mov
sbb
jo
aas
add
xlat
or
pusha
loop
das
in
pop
mov
imul
and
repnz
add
mov
out
pop
inc
xchg
adc
mov
fbstp
shll
cmp
adc
daa
mov
mov
test
jle
lahf
rorl
jne
pop
jg
repz
dec
mov
in
or
add
es
jecxz
inc
stos
bnd
cmc
pushf
ss
dec
cmp
dec
or
xor
out
push
mov
cs
add
mov
add
jp
dec
mov
loope
jo
out
rorb
sbb
xor
dec
jp
sub
mov
add
cmpsl
gs
rorl
add
and
repnz
add
mov
xchg
inc
pop
push
imul
sbb
rclb
mov
es
out
popa
xchg
inc
pop
sub
enter
or
mov
enter
lcall
icebp
aad
jl
jmp
mov
xlat
mov
mov
pop
ljmp
push
addr16
arpl
or
mov
adc
pusha
pop
test
push
aad
xchg
adc
sbb
in
add
jp
jl
push
lods
imul
ret
mov
insl
add
push
dec
sbb
stos
add
out
xchg
aam
mov
cmp
adc
test
push
cs
dec
inc
adc
loope
scas
jo
idivb
or
mov
adc
cmp
sarl
jo
inc
shlb
xchg
imul
xor
mov
cmpl
lds
fsubrp
jl
sbb
inc
jmp
rcll
jne
xor
out
sub
outsl
sub
xor
les
setae
xchg
mov
dec
sub
adc
sub
add
daa
pop
movsb
sbb
js
add
jbe
push
arpl
pop
jl
and
ds
imul
add
pop
or
cmp
xor
jge
xor
insb
sbb
fdivs
cmp
pop
adc
iret
push
xchg
hlt
and
inc
mov
dec
ret
test
in
int
xor
cmpb
add
js
es
es
sahf
jl
ljmp
inc
xorl
call
fsts
add
or
push
sbb
push
and
push
mov
mov
mov
xor
push
mov
andb
mov
lcall
movsl
imulb
ret
and
cmp
jo
mov
and
test
insl
hlt
adc
push
out
jmp
push
imull
je
movsl
data16
clc
add
movl
das
jecxz
adc
pop
push
dec
sarb
inc
sub
stc
int3
ja
daa
xlat
roll
jge
call
cmp
push
lcall
and
insl
xchg
test
sbb
sub
shl
adc
clc
outsl
out
sar
lret
xchg
ds
push
dec
and
test
cwtl
lahf
fnstcw
call
pushf
out
subl
test
xchg
js
mov
xor
sbbl
push
or
mov
sahf
jl
sti
loop
add
xor
adc
sar
mov
push
xchg
ja
je
hlt
push
adc
out
sti
popa
inc
arpl
aas
dec
adc
mov
inc
divb
addr16
cmp
shlb
mov
sub
sqrtps
stos
mov
call
les
lcall
rorl
bound
ljmp
pop
lds
ret
je
xor
add
sub
inc
cmc
mov
xor
cmp
daa
xchg
pop
mov
mov
int
mov
cld
bound
dec
std
aaa
xchg
add
subl
sub
mov
aas
roll
inc
push
scas
pop
test
jmp
xor
sub
andl
int3
cmc
out
sub
jmp
mov
in
push
cmpsb
push
dec
inc
sbb
dec
mov
fisttpll
mov
xchg
mov
xlat
sbbb
lods
sub
xor
loope
or
int3
stos
iret
mov
into
bound
or
stos
fcompl
dec
shrb
push
mov
dec
jnp
repnz
mov
and
xchg
and
pop
xchg
popa
and
xchg
out
sbb
mov
and
dec
lret
dec
es
bound
xchg
lahf
or
mov
sub
cld
and
mov
jmp
add
flds
pop
clc
test
arpl
mov
mov
test
xchg
bound
in
dec
cmc
ret
or
lret
js
pop
sbb
xchg
icebp
cld
outsl
in
xchg
stos
xchg
sbb
addr16
mov
push
cmpsl
dec
adc
fisubl
jno
cmp
pop
push
mul
push
lods
dec
mov
sahf
jne
inc
das
shl
dec
mov
push
insl
jnp
sbb
out
cld
fwait
inc
fs
dec
daa
jo
test
sbb
fnstsw
fnstsw
hlt
shr
xchg
sbbl
fidivl
loopne
int3
out
iret
lret
repnz
and
lahf
cmp
idivb
scas
dec
cmp
imul
and
jecxz
sub
adc
sub
repnz
bswap
mov
test
pop
popf
sbb
inc
repz
stos
dec
cmpsl
lods
divb
cmp
jne
sub
xlat
xchg
jae,pn
cmc
out
subb
lcall
ljmp
daa
into
mov
jnp
xor
loope
insb
xorl
dec
push
mov
aas
dec
scas
inc
pop
adc
testl
sarl
fstpl
mov
gs
sbb
sub
movsb
lds
mov
mov
push
pop
or
fldt
hlt
add
lods
adc
lock
mov
js
add
inc
pop
and
cmpsl
cltd
enter
das
xchg
jae
inc
sub
fcmovbe
out
pop
stc
inc
ret
data16
and
sbb
loopne
and
mov
cltd
shlb
lahf
cmp
mov
mov
repnz
int3
mov
int
sub
lds
daa
mov
add
mov
leave
into
cs
sar
mov
es
dec
cmp
cmpb
jnp
sbb
shll
mov
dec
das
dec
dec
xchg
call
ja
bound
and
inc
push
pop
movsb
adc
repnz
call
add
xor
add
clc
sti
push
push
pop
cmpsl
adc
aad
or
fmull
jge
js
daa
dec
lods
xor
or
inc
inc
cmpsb
ja
mov
mov
xchg
or
fldlg2
xor
push
add
inc
push
lods
mov
sbb
sub
mov
repz
mov
stc
jle
in
fisttps
pop
popa
adc
adc
dec
cld
xor
xlat
data16
mov
orl
into
or
xchg
js
jb
lods
cmp
fmul
call
je
cmp
divl
add
js
sbb
fwait
mov
inc
mov
cmc
fildll
mov
movsl
aad
jl
mov
xchg
lods
mov
xchg
pop
fs
xor
cmp
mov
test
shl
jbe
cmp
mov
push
push
pop
rcrb
daa
loop
fisttpl
ret
je
xor
lcall
push
js
adc
hlt
inc
adc
cmp
lret
outsb
fsubrs
pop
jbe
je
stc
xor
and
in
insl
loopne
and
cmp
mov
mov
arpl
sbb
jp
lahf
pop
aas
fsubl
dec
dec
cwtl
sbb
lods
fdivs
sbb
pushf
push
call
cmpsb
imul
lret
inc
sbb
fmull
in
pop
mov
cmp
xor
add
out
add
cs
and
hlt
outsb
mov
jle
cwtl
xor
les
and
pop
adc
les
aad
lods
or
cs
iret
iret
adc
mov
cld
inc
bound
loopne
adc
sub
pop
push
xor
push
pop
xchg
fldcw
push
pop
ds
gs
and
je
xor
cmp
lods
xchg
mov
cltd
sbb
jnp
decb
movl
and
sbb
inc
decb
hlt
call
xor
pushf
sub
fdivrs
pop
pop
xor
shrl
daa
pop
sub
movsl
repz
cmp
lahf
add
fsts
xchg
xchg
add
dec
fs
outsl
adc
mov
jge
idivb
andl
fs
gs
and
arpl
cwtl
lods
cld
sub
scas
lret
lock
mov
xor
cmpsl
insl
jo
mov
push
pushf
loope
pop
ja
mov
popa
out
mov
jb
adcb
push
mov
mov
adc
cli
shll
decb
xchg
jg
pop
pop
inc
sub
pop
fnsave
xor
popl
and
scas
xor
mov
mov
xchg
fsts
enter
stc
repnz
cmp
push
enter
or
mov
mov
add
addr16
pop
lret
jg
sahf
testb
je
sub
push
xor
test
inc
pop
addr16
and
xchg
jmp
cwtl
outsl
out
push
or
loop
jle
gs
mov
je
pop
aad
xlat
sbb
shrb
xchg
dec
movsb
push
popl
fadd
mov
cmp
inc
lret
leave
xchg
out
mov
sahf
aad
add
cs
lds
sub
pop
movsl
into
stos
shl
cli
xlat
test
or
sahf
sti
sahf
rcl
iret
jbe
jnp
test
jns
cmp
js
and
push
push
pop
pop
lcall
cld
sub
std
dec
add
mov
test
js
lret
inc
or
adc
add
data16
cwtl
out
stos
mov
mov
mov
mov
aad
push
fs
push
mov
lcall
rcrb
dec
dec
cmp
sbb
jp
cltd
jmp
out
nop
mov
aas
xchg
mov
xchg
or
inc
mov
xor
push
jne
pop
cmpsl
imul
mov
jnp
push
ja
and
jge
mov
filds
pop
xor
add
inc
and
or
in
mov
fiadds
insb
out
int
fbstp
pop
shlb
jmp
loopne
outsb
cmc
popa
icebp
insb
test
mov
rcrb
pop
hlt
push
rcl
pop
sbb
pop
jle
test
push
mov
aam
xor
ljmp
mov
push
mov
ss
repz
stc
div
push
frstor
mov
lods
stos
or
push
mov
mov
insl
bound
into
jp
mov
sub
mov
adc
cltd
fs
dec
jo
mov
or
incb
int3
rolb
cmp
lahf
add
int
imul
cmp
fdivs
lcall
clc
or
xor
fs
xor
sbb
test
mull
ljmp
insl
and
fldl
push
cli
mov
sbb
jne
rorl
or
jecxz
outsl
cmp
sti
pushw
out
outsb
das
pop
inc
mov
jmp
pop
inc
inc
mov
movsl
mov
sti
shrl
push
out
mov
push
loop
dec
add
orl
mov
ret
dec
imul
enter
push
shrl
inc
cmpb
or
mov
fstp
and
sub
negb
pop
jns
inc
icebp
mov
cli
out
daa
xchg
cmc
jle
arpl
jmp
pop
push
rcll
cmp
cli
rclb
addr16
pop
dec
popa
jae
ja
pop
and
pop
push
into
aas
cmp
fwait
ljmp
icebp
sub
ficoml
pop
pop
pop
inc
les
addl
aam
jle
enter
inc
int
movsb
sub
insl
cmpsl
xchg
jo
lods
lret
out
leave
aam
jbe
pop
lret
push
jb
mull
adc
jns
cli
adc
jnp
es
je
dec
subb
jmp
cmp
xor
sbbb
pop
jbe
push
clc
pushf
cmp
xor
fisubs
cmp
out
jecxz
cmp
pusha
mov
std
lods
inc
cmp
cmp
stos
mov
pop
mov
dec
jo
sub
cmp
jae
clc
cmpsb
adc
push
fwait
jg
lds
xchg
adc
cwtl
push
aam
imulb
mov
cmp
mov
inc
mov
test
cmp
and
cmpsl
outsl
pop
into
sbb
dec
scas
sbb
idiv
dec
ss
adc
lock
jae
mov
dec
int
add
fs
and
vcvtdq2ps
es
lods
cmp
cmpsb
adc
xlat
insb
mov
cmp
ds
dec
rolb
fldt
xchg
stos
lock
subl
data16
cmp
ficompl
imul
not
rcl
dec
scas
inc
repnz
inc
sarl
arpl
mov
repz
mov
inc
lods
mov
or
lods
dec
clc
loop
xor
mov
pop
mov
inc
mov
cmpsl
pop
faddp
jp
adc
cmc
shll
push
sbb
pusha
fnstsw
cmpsb
and
aad
lods
mov
dec
mov
cmp
jno
bound
imul
xor
insl
jp
and
test
or
xor
add
incb
loopne
loopne
push
sub
js
sub
sub
pushf
and
cmp
out
inc
inc
scas
call
and
lcall
popa
mov
ds
jp
inc
cltd
dec
xlat
notl
and
in
lahf
addr16
jnp
arpl
push
test
gs
nop
adc
shl
hlt
cmp
jp
movsb
jo
inc
loop
mov
push
mov
inc
cld
push
sti
addb
cmp
xor
hlt
adc
xor
add
pop
pop
add
stc
cmp
les
shlb
imul
jl
sbb
imul
adc
push
sbb
mov
cmp
leave
sbb
lret
sbb
or
mov
in
ret
xchg
lock
mov
outsl
stos
sbb
loop
lods
and
scas
popa
mov
xor
jne
and
jge
outsl
add
not
adc
adc
xor
addl
jne
cmp
mov
cmpsl
std
jo
into
and
mov
rolb
hlt
jbe
repz
mull
xor
jp
xchg
or
mov
lret
sahf
into
push
jecxz
xchg
xor
into
gs
jmp
imul
mov
mov
and
dec
jae
or
pop
add
push
ja
or
mov
ss
inc
ret
loope
flds
cmpsb
je
out
enter
sbbb
movsb
lcall
nop
xchg
daa
daa
fdivrp
sbb
xchg
sbb
cltd
or
data16
xchg
dec
jecxz
mov
mov
push
popa
xlat
cmp
movsl
mov
mov
fs
gs
fcomps
mov
test
adc
push
sti
int
out
cmp
lock
mov
scas
hlt
mov
mov
test
jg
cld
inc
mov
add
jge
lret
and
push
popa
call
shrl
fistl
adc
adc
jecxz
push
idiv
inc
push
xor
pop
pop
mov
ja
insb
inc
xor
arpl
and
std
dec
mov
stos
imul
or
jae
xchg
push
mov
jmp
insb
pushl
call
fistl
push
add
lret
sub
push
fs
xchg
add
pop
pop
mov
daa
push
adc
lock
cwtl
dec
icebp
bound
neg
and
call
fisubrs
cli
or
xchg
shrb
cmp
pop
popa
mov
clc
cmp
adc
ss
lods
lret
mov
sub
push
adc
fwait
dec
idivb
xor
fwait
mov
scas
dec
and
push
pop
mov
stc
lret
pushf
hlt
jb
add
mov
lcall
adc
cmc
inc
or
mov
repz
or
popf
nop
sahf
movsb
loop
loop
inc
dec
jnp
push
fsubrl
aam
lahf
xor
fisubl
sbb
add
cmp
push
js
dec
jl
orl
aad
inc
rclb
xor
mov
jecxz
push
dec
fcomps
movsl
dec
aaa
dec
pop
push
shrb
rcrb
jbe
rcll
cmp
xchg
cld
cmp
add
sbbl
hlt
out
sub
xor
std
movb
stos
sub
push
lds
jle
push
jmp
fildl
iret
or
movsl
jg
add
into
push
push
jl
pop
daa
cmp
inc
vmovhpd
and
fmull
add
xchg
in
arpl
mov
sub
sbb
jns
sbb
jle
loop
pop
adc
and
dec
xchg
inc
test
dec
lods
push
dec
inc
add
pop
xor
loope
lret
push
pop
pop
gs
out
or
sub
out
sbb
mov
mov
je
repnz
lret
jmp
sub
inc
and
xor
imul
push
movsl
mov
or
sbbl
fwait
je
adc
dec
lret
je
lds
cltd
ret
dec
jp
lea
xchg
push
sub
aam
arpl
dec
lock
out
push
jge
mov
or
pop
test
mov
xlat
mov
subl
aaa
mov
adc
jae
mov
sub
sbb
sahf
xchg
adc
ret
neg
scas
mov
insb
int3
adc
fistl
mov
and
mov
in
ds
add
pop
rcrb
xor
adc
push
and
add
pop
leave
jl
in
repnz
mov
ljmp
and
bound
sub
jns
data16
mov
xchg
cwtl
push
xchg
roll
imul
pop
mov
sub
enter
icebp
popa
add
cmp
js
fnsave
pop
pop
into
cmp
pop
cmp
out
insb
out
jmp
and
dec
cmp
push
adc
inc
fsubrp
dec
shlb
mov
mov
arpl
mov
iret
jp
sbb
jl
decl
loopne
pop
cmpb
xor
pop
roll
insb
aam
jge
gs
leave
push
mov
enter
mov
cmp
and
pop
inc
fists
roll
dec
pushl
enter
inc
mov
mov
mov
lods
push
mov
pop
nop
out
push
addr16
lods
sbb
scas
push
and
jb
mov
xchg
loopne
jo
cwtl
and
inc
test
mulb
xchg
jmp
in
adc
aas
jno
andl
xchg
push
sarl
push
cmp
and
sbb
stc
mov
shlb
int3
stos
jmp
test
push
mov
jmp
daa
sbb
stc
add
leave
popl
sub
mov
imul
std
in
push
jb
cs
dec
in
mov
int
xor
xchg
in
enter
add
xchg
inc
pop
cmpps
ds
subl
push
adc
cmc
loope
shrl
rorl
inc
or
scas
push
pop
fmuls
mov
mov
jnp
mov
imul
jno
in
cmpsl
adc
sbb
cltd
cli
call
ficomps
in
sbbl
push
or
mov
push
or
push
pop
stos
mov
push
xchg
push
dec
loopne
movsb
add
push
xchg
clc
pop
push
sub
mov
vmwrite
repz
push
fcoml
dec
lcall
jns
sbb
inc
ljmp
js
lea
mov
xchg
lcall
cmp
loope
insb
or
add
or
inc
arpl
mov
inc
push
imul
call
inc
cmpsb
add
mov
sbb
adc
mov
lret
jnp
jnp
jecxz
pusha
fdivl
pop
sti
pop
mov
gs
ficomps
xchg
fwait
ror
pop
lahf
push
inc
sub
jae
andb
inc
cli
lds
enter
sbb
popf
sarb
add
dec
in
sbb
inc
ret
mov
andb
adcb
add
inc
jg
or
dec
dec
jle
pop
push
jnp
and
ret
or
jmp
xchg
mov
pop
lret
mov
fisttps
cli
jmp
repz
test
ljmp
insb
pop
sbb
fldl
out
leave
lods
insl
dec
push
jns
outsl
loopne
and
xchg
addr16
nop
adc
outsb
test
cmpsb
or
xchg
sbb
dec
xchg
int
cmp
jbe
xchg
xlat
xchg
enter
xor
mov
or
or
jge
cli
lahf
cmc
mov
aas
int3
inc
stos
movl
jg
sti
packssdw
aad
mov
aas
pop
out
jp
mov
ss
scas
inc
add
xchg
stos
mov
cmp
push
xor
mov
imul
js
mov
dec
movsw
mov
bound
ret
cmp
sub
mov
cmp
popf
pushf
imul
nop
and
inc
adc
xor
rcll
sbb
repnz
out
inc
repnz
iret
sub
nop
out
test
pop
mov
dec
mov
cld
add
inc
mov
xchg
jmp
fistpl
adc
dec
sbb
push
and
xchg
pop
mov
inc
sub
cld
dec
aaa
mov
xchg
scas
mov
loop
xchg
mov
hlt
outsl
cmp
mov
daa
push
mov
aad
and
cmp
xchg
sahf
int3
pop
lret
mov
sbb
pushf
cli
shr
mov
xor
cltd
jg
aas
xor
enter
rol
inc
and
mov
adc
stos
imul
push
xchg
jp
xor
pop
lock
mov
xchg
xor
enter
pusha
add
mov
mov
push
inc
in
push
lahf
xchg
test
mov
aaa
int
bound
imul
xor
cmpb
lods
xchg
ret
enter
rolb
add
out
in
xlat
jecxz
add
add
cmp
add
jl
rcrl
cs
push
dec
ficompl
push
pop
sub
in
mov
mov
inc
jp
jno
adc
loopne
addr16
shlb
push
push
adc
adc
lret
sbb
pusha
arpl
lret
gs
pop
fstpt
jg
pop
pop
add
adc
push
xor
mov
cmp
push
add
bt
push
fcoml
mov
cltd
sahf
loope
enter
mov
xorb
ja
sbb
or
and
lock
pop
arpl
roll
inc
inc
xlat
cmc
mov
cmp
mov
je
ljmp
push
mov
movsl
mov
je
or
mov
pop
push
mov
sbb
adc
inc
cmp
cld
lock
inc
mov
sbb
sub
pop
stos
enter
pop
mov
loope
sbb
mov
mov
xchg
outsl
cs
inc
pop
lds
jmp
mov
mov
sub
sub
aas
cli
xchg
dec
add
ds
jae
imul
mov
inc
inc
xchg
dec
xorl
cltd
pusha
hlt
ss
adc
add
in
sub
cmpsl
inc
pop
mov
fsts
and
pop
iret
outsb
pop
sub
jbe
add
add
mov
inc
popa
add
dec
push
fiaddl
lods
xchg
ss
push
pop
sbbb
and
ljmp
mov
add
jecxz
dec
cmp
xchg
push
jb
imul
push
xchg
repnz
add
test
aad
std
cmp
xchg
cmp
jp
mov
cmp
daa
push
out
push
jno
jb
movsl
ret
pop
xor
mov
or
cmp
push
push
jge
mov
shrl
loope
gs
xor
xchg
bound
mov
push
and
pusha
insl
in
or
and
insl
jns
xorb
aaa
std
or
dec
outsl
pinsrw
sbb
js
mov
mov
jno
lahf
mov
das
inc
scas
scas
pusha
sahf
in
xchg
cmp
sbb
out
cltd
inc
sbb
and
pop
push
notb
sti
arpl
in
add
adc
mov
dec
mov
mov
mov
push
xchg
push
add
lret
add
cmp
cmp
lret
mov
clc
jae
das
cmp
jbe
cmc
fwait
mov
mov
aaa
in
and
inc
rcr
sub
and
jne
sti
mov
pop
mov
lret
mov
fidivrl
int3
idivl
and
xor
fdivrl
jp
dec
pop
iret
xchg
inc
inc
call
sub
mov
jno
push
jg
sub
shrb
mov
arpl
lods
outsl
lret
popf
cmpsb
out
jne
int
mov
fwait
cmovno
pop
jns
sahf
cmp
fdivs
jp
loopne
frstor
mov
pop
cmp
xorb
sbb
test
fidivrs
sub
sub
ja
sbb
mov
sub
inc
arpl
shlb
cmpsl
xor
add
cmp
add
stos
lret
adcb
daa
dec
jecxz
xor
test
lahf
pop
cmp
leave
sub
pop
mov
lock
ja
arpl
dec
or
mov
lods
data16
clc
pop
daa
and
test
lods
add
sub
pop
push
out
insb
sbb
mov
add
sbb
mov
sbb
lcall
or
scas
and
aam
jl
pop
lods
mov
and
jo
pusha
scas
pusha
icebp
aam
out
jo
pop
loop
sbb
insl
mov
xlat
icebp
mov
bound
xchg
push
jecxz
mov
pop
dec
scas
out
mov
daa
adc
xor
jae
or
adc
xchg
push
test
loope
mov
jnp
jno
jg
add
mov
dec
jbe
fldt
cmp
xchg
mov
or
mov
je
es
dec
cltd
pop
aas
add
js
shrb
jmp
adc
rolb
jbe
fldl
gs
xchg
ret
jge
pop
test
or
jp
adc
sbb
sarb
xlat
rcll
jns
cs
push
inc
dec
mov
xchg
xchg
es
lods
push
xchg
push
cmp
pop
in
push
lea
fdivr
mov
imul
jno
rorb
mov
test
shlb
pop
jno
and
cmp
out
lret
xchg
clc
rcll
pop
cmp
test
outsb
xchg
mov
ja
xchg
shlb
popf
aas
mov
mov
and
sbb
jbe
mov
daa
outsb
add
adc
loope
adc
dec
pop
scas
mov
pushl
divb
adc
sub
test
and
mov
mov
gs
add
pop
adc
imul
push
xchg
aad
fldt
mov
pop
insl
out
xlat
fists
sti
ja
xor
ficoms
xor
rcrb
js
xchg
lahf
rolb
push
fcom
enter
into
add
cltd
fwait
adc
lock
push
mov
outsb
stc
in
xchg
jmp
ds
ss
jns
jns
shll
jns
int
push
repz
push
sbb
and
inc
sbb
mov
aam
out
in
andl
xchg
sbb
xor
pop
and
loop
push
inc
jge
add
pop
rorl
rcr
popf
mov
xor
jae
mov
lcall
insl
xor
pop
mov
inc
add
add
push
movsl
sub
push
jl
dec
cli
ret
fs
clc
in
imull
sbb
lods
in
xlat
pop
mov
push
add
test
fxch
sbb
test
les
jae
fsubrl
cmp
pop
xor
addl
and
lahf
pop
mov
gs
and
push
test
xchg
or
insb
cmp
lahf
inc
jp
gs
push
sbb
pushf
rolb
xlat
aaa
subb
or
cmp
pop
inc
js
test
fs
les
push
es
test
outsl
fistl
cwtl
jl
push
out
lcall
adc
daa
mov
jle
fcmovbe
inc
inc
dec
loope
lret
push
sub
pusha
push
add
adc
mov
enter
pushf
test
dec
shrb
xlat
insl
cmp
push
cmp
mov
or
xor
adc
inc
arpl
inc
scas
mov
or
call
xor
lock
pusha
or
cmc
lahf
out
mov
xchg
mov
pop
push
arpl
lods
mov
pop
and
les
push
loope
lock
cld
mov
dec
xrelease
loope
mov
les
xchg
scas
out
jns
outsb
xor
sub
cmc
sbb
movsl
out
jp
push
sbb
xor
or
xor
xchg
cld
inc
sub
and
in
cwtl
aas
mov
ds
dec
mov
jno
iret
mov
aas
inc
sub
stos
outsb
mov
hlt
pop
or
pop
cli
mov
outsb
sarb
cmpsl
xchg
xchg
or
sub
fyl2x
mov
mov
out
or
cmp
mov
inc
lods
addl
sub
push
iret
sbb
sub
adc
inc
stc
pop
sbb
and
lcall
mov
lock
sbb
add
mov
sbb
cmc
pop
lcall
lahf
leave
push
shrl
mov
std
inc
mov
in
lahf
dec
insb
cmp
mov
add
cmpsl
mov
outsb
fcoml
cs
or
xor
xor
or
inc
mov
pop
repz
xor
inc
mov
mov
adc
cmp
imul
cmc
out
cld
and
adc
dec
adc
mov
xchg
mov
jo
shl
int
sbb
sub
mov
mov
dec
outsb
subl
xor
mov
orb
jns
dec
mov
and
int3
mov
test
mov
or
pop
lret
dec
jae
push
insb
cwtl
loop
add
or
dec
loop
mov
mov
std
lods
out
pop
inc
fwait
movsl
jmp
stos
mov
pushf
add
jle
out
mov
mov
jmp
outsb
and
xchg
inc
sahf
sbb
jl
mov
push
repnz
cltd
xchg
test
mov
mov
aaa
pop
aam
ss
cmp
dec
lock
xchg
push
enter
xchg
dec
std
fdivrs
popf
mov
test
in
test
push
lret
in
sub
mov
push
xor
mov
addb
addl
pushf
lcall
fidivrs
push
imul
mov
arpl
test
nop
out
lret
outsb
scas
mov
popf
movsl
cs
xorl
mov
test
push
inc
ret
dec
and
das
shll
outsb
and
repnz
loopne
loop
xchg
and
cmp
sub
fadd
aas
cld
inc
jg
jp
fsubs
repnz
adc
pop
lcall
or
jb
adc
cs
bound
xor
outsb
sbb
push
mov
and
mov
shrd
scas
xor
je
sub
push
ljmp
push
xchg
jl
push
lret
loop
call
add
pop
sub
lret
push
fistpl
out
add
dec
or
add
sbb
cmp
push
icebp
or
push
push
repz
jp
inc
cmpsl
fldl
out
jge
push
adc
imul
inc
lods
mov
xchg
aaa
ret
mov
dec
aaa
fbld
and
push
inc
mov
jns
push
stos
mov
jp
and
addr16
lods
or
adc
jne
and
arpl
insb
and
pop
xor
aaa
push
hlt
lods
mov
xor
not
dec
imul
push
sub
cmpsl
xchg
sub
movsb
mov
stc
das
mov
pushf
mov
fs
mov
mov
mov
mov
aam
cmp
in
push
ret
mov
sub
ja
push
lds
push
xchg
subb
loop
pop
jae
int3
test
mov
mov
inc
and
rolb
pop
out
inc
loopne
filds
dec
add
addr16
adc
popf
xor
adc
add
jo
adc
stos
data16
lods
nop
arpl
sbb
xor
push
jne
and
les
pusha
push
or
jae
mov
mov
dec
ds
lock
pop
xchg
jne
or
sbb
push
test
stos
xor
mov
stos
pop
arpl
fbstp
psubd
stos
pop
adc
outsl
mov
mov
cmpl
mov
or
mov
sub
push
lds
pop
lock
repnz
add
enter
xor
sbbb
push
add
xor
lods
testl
scas
add
aas
inc
scas
xchg
jo
into
dec
xchg
push
sbb
lcall
daa
scas
sbb
cmpsl
in
lea
insl
jmp
scas
rorl
outsl
cmc
idivb
cmpsl
icebp
mov
and
popa
int3
inc
jecxz
call
jbe
cmp
rolb
mov
out
push
jo
aad
sti
xor
jbe
mov
pushf
js
or
bound
inc
ljmp
stc
jae
mov
lahf
xchg
lods
aam
out
pop
fisubl
nop
dec
dec
in
lods
jg
inc
jae
scas
jge
scas
lea
std
fwait
ds
cmpsl
xchg
sub
subl
cmp
outsl
inc
clc
inc
outsl
testb
in
fmul
imul
inc
lods
pop
lret
pop
je
in
std
xchg
add
cmp
addr16
mov
and
adc
orb
fldenv
cltd
clc
mov
xor
mov
arpl
stc
mov
addr16
dec
push
and
mov
mov
xor
mov
rcrl
mov
iret
mov
lds
dec
dec
sbb
or
push
pop
xchg
ret
push
lods
jp
insl
dec
into
cltd
stc
out
pop
xorb
mov
add
mov
loopne
xor
push
mov
ja
push
aas
add
adc
xor
mov
int3
add
xchg
push
add
fistpll
cmc
enter
es
inc
imul
inc
mov
sub
sbb
sbb
inc
ret
pop
sbb
push
in
aad
in
push
push
dec
add
lock
mov
mov
pop
out
xor
xor
add
mov
fnstenv
popf
call
dec
out
dec
mov
ss
or
cmpsl
mov
cld
fwait
xchg
aad
xor
ret
push
xor
or
stos
aaa
push
fwait
inc
dec
shll
ds
xchg
mov
jmp
xchg
dec
and
in
mov
mov
and
dec
popa
add
push
push
push
mov
xchg
mov
sub
push
xor
lods
push
or
mov
stos
xchg
mov
mov
inc
cmpsl
jnp
or
xchg
ret
jae
mov
mov
in
jl
dec
arpl
aas
push
sub
es
inc
mov
rolb
cmp
inc
mov
push
pop
mov
mov
xchg
aaa
test
mov
pop
fwait
insb
shr
cwtd
mov
ja
addl
data16
loop
mov
pop
sti
mov
pop
lahf
loopne
adc
imull
fs
js
cmp
enter
ret
pop
sbb
sbb
jne
bnd
fcomi
xor
fcoml
pop
imul
and
and
sub
xchg
sub
or
push
rep
dec
les
adc
mov
cmpsl
adc
cmp
sbb
mov
ja
or
mov
out
xor
enter
adc
mov
and
inc
fwait
lret
test
cmpsl
lcall
push
rcll
sbbb
out
mov
mov
push
jle
ja
into
mov
or
and
add
push
lods
pop
or
stc
inc
add
int
sub
lea
js
int
dec
pop
aam
fs
mov
ljmp
cmp
and
and
pushf
xchg
and
and
in
into
ret
in
pusha
sbb
xor
inc
mov
xchg
fcmovbe
in
pop
pop
cli
adc
fmul
popf
ret
arpl
pop
repz
clc
fs
cmpb
int
lds
rorb
mov
je
cltd
mov
les
stc
push
les
and
push
inc
mov
xor
repnz
push
dec
cli
mov
or
push
cmc
mov
push
pusha
and
in
test
xchg
pusha
insb
push
push
cmpsl
xor
inc
es
jbe
nop
mulb
addb
lds
das
sbb
pop
sbb
mov
push
sbb
sub
jg
ret
mov
icebp
sbb
fidivrl
dec
xchg
icebp
adc
clc
fsubrp
mov
mov
subl
push
and
divl
xchg
dec
imul
jle
xchg
inc
and
jge
sahf
cmp
or
xorl
xchg
push
push
arpl
adc
jb
cmc
out
mov
jb
movsl
dec
adc
outsl
mov
xor
add
imul
es
inc
xor
xor
and
sbbl
inc
mov
cmc
clc
adc
int3
out
sbb
mov
dec
jecxz
pop
fiadds
lret
add
or
inc
rolb
cld
cmp
sub
pop
xor
and
fcoms
mov
push
and
sub
je
jge
xor
pop
push
add
outsb
lcall
push
mov
lea
push
in
out
dec
fnstenv
jmp
ret
push
movl
add
xchg
mov
leave
iret
les
dec
shlb
mov
test
pop
xchg
insb
inc
clc
push
pop
adc
cwtl
insl
ljmp
pushf
mov
add
lret
bound
cld
out
inc
int
nop
aad
lcall
jle
and
scas
mov
les
xor
popa
imul
mov
imul
mov
mov
scas
pop
xchg
insl
xchg
xor
jnp
rorb
mov
xchg
pop
mov
cmc
arpl
mov
xchg
aaa
xchg
stos
jb
xchg
or
movsl
stos
sbb
pop
inc
loop
xchg
and
stos
insl
sub
es
xor
and
or
cmpsl
pusha
cmp
out
jg
jnp
push
xchg
sub
divb
negl
je
fiaddl
getsec
clc
sub
and
roll
jns
jno
cwtl
jle
sbbl
and
mov
push
hlt
cmp
pop
push
jae
fildl
sub
imul
test
ret
dec
fs
loop
paddsb
lcall
xchg
mov
cltd
sub
jae
mov
hlt
jae
pop
lods
pushf
dec
add
mov
lds
fdivl
fdivrl
pop
push
pop
xor
cmp
lcall
fidivl
pop
push
jmp
or
push
jg
sarl
cmc
jo
sbb
jnp
inc
stc
icebp
daa
mov
shll
movsl
test
das
inc
leave
movsb
pop
and
pusha
test
into
cmpl
mov
mov
xchg
inc
lea
aad
mov
push
shl
sti
jl
or
jns
mov
shlb
add
pushf
xchg
xorb
pop
mov
mov
mov
les
sbb
mov
xchg
mov
hlt
push
push
jle
mov
inc
test
adc
int3
sahf
inc
lret
hlt
or
cwtl
jecxz
ja
test
mov
lret
icebp
cmpsb
mov
lahf
stc
loop
pop
lds
dec
sub
add
xchg
loopne
test
xor
bound
ljmp
push
popf
loope
sub
add
fwait
and
jge
inc
push
aaa
inc
sub
icebp
pop
call
add
insl
adc
adc
and
add
mov
iret
mov
imul
and
cmc
pop
sub
js
adc
mov
in
mov
aaa
inc
lahf
add
xchg
cmp
cmp
push
movsl
sbb
pop
lret
outsb
leave
fs
xchg
int
xor
pop
sbb
inc
test
mov
mov
mov
sub
mov
inc
mov
jo
and
mov
je
fidivl
stos
sbb
mov
add
and
arpl
jne
dec
fs
subb
or
xor
xor
cmp
sbb
ja
or
cmp
jo
lods
imul
int3
or
dec
lock
in
inc
pop
adc
push
ljmp
xlat
sub
or
ds
mov
or
pop
aam
mov
jecxz
cmpsl
outsl
loopne
xorl
test
ret
leave
push
mov
in
nop
cmp
sbb
addr16
dec
fisttpl
das
xchg
dec
adc
push
add
popa
aam
adcb
fistpll
addr16
inc
cli
pop
push
push
add
ljmp
cs
mov
dec
xchg
into
xorl
cmpsl
pop
lcall
xor
rcll
das
xchg
rolb
popa
ja
sbb
pop
inc
add
imul
add
dec
arpl
lock
cmp
or
adcb
std
jo
or
cwtl
pop
loopne
addr16
add
lret
or
pop
or
sti
mov
and
xchg
jge
jmp
dec
popa
test
xor
lahf
lods
adc
push
int
data16
sub
jl
xchg
ret
mov
cli
add
xor
mov
sub
add
or
pushf
adc
xchg
fstpt
push
fcmovnu
fidivl
push
loopne
mov
rolb
pop
push
nop
mov
ficomps
push
iret
push
pop
jnp
movsb
aaa
repz
push
das
add
pop
sub
scas
aam
pop
and
pusha
cmp
sbb
push
mov
cmp
rcrb
cmp
pusha
or
adc
repnz
enter
shlb
sbb
xchg
jp
pop
mov
sbb
psubusw
ret
cmp
push
mov
or
add
hlt
mov
cmp
or
out
loope
jmp
or
push
lret
or
xor
cld
xor
xchg
bound
xlat
inc
adc
ss
mov
xchg
adc
jecxz
popf
xchg
sub
adc
stos
cwtl
mov
add
cmp
dec
xlat
push
jnp
ret
inc
mov
dec
adc
push
pop
inc
cli
mov
mov
jbe
addl
mov
mov
movsb
addb
cmp
popa
cltd
dec
mov
scas
dec
orl
xchg
push
enter
push
mov
pusha
pop
jp
add
pop
popf
mov
stos
xor
mov
add
xor
push
add
mov
mov
movsb
test
imul
cli
push
pop
xlat
ljmp
fsubs
in
in
or
je
pop
mov
dec
adc
imul
clc
call
sbb
mov
jo
sub
sbb
fcmovnbe
inc
cmp
test
sbb
cld
mov
lds
cmp
pop
push
xlat
loope
loopne
scas
push
inc
scas
xchg
xchg
into
dec
test
daa
seta
lret
and
out
cltd
aam
jle
pop
inc
push
outsb
ss
gs
pop
inc
adc
xchg
cmp
inc
dec
mov
out
mul
pushf
hlt
or
mov
push
mov
in
test
out
xor
inc
adc
cmp
push
jbe
les
mov
and
adc
xor
popf
int3
mov
jae
cmpsl
inc
mov
adc
add
push
jg
lahf
sub
mov
je
popa
icebp
gs
adc
lret
dec
cld
dec
sbb
pop
xchg
cmp
rcrl
mov
adc
sub
daa
lcall
sub
pop
int
pop
mov
lret
lods
and
adc
mov
sbb
sbb
sbb
sub
mov
jne
mov
mov
lcall
sbb
sub
sbbb
lret
add
aaa
mov
aad
int
push
push
clc
rcrl
xchg
dec
sub
imul
sbb
std
adc
idivb
or
push
sub
jecxz
jno
xchg
repnz
add
in
stos
lahf
mov
xchg
fidivs
mov
sbb
in
dec
fidivs
add
and
aaa
mov
sub
add
daa
cmp
and
ja
pop
and
sub
lretw
sbb
pusha
les
push
in
add
je
ja
cmp
mov
xchg
pop
bound
pop
pop
add
dec
aam
pop
mov
mov
into
push
loope
push
xor
and
cmpsl
xchg
mov
jecxz
inc
adc
cmp
dec
add
in
xchg
in
sbb
test
loope
dec
or
lods
pop
adc
movsl
lahf
cli
lret
iret
or
orb
lret
lods
popa
mov
add
ja
sub
pop
xchg
or
inc
out
xchg
and
dec
imul
sbb
daa
fsubr
mov
push
sbb
cmc
sub
dec
shlb
jp
bound
call
nop
loopne
mov
mov
sbb
insb
ds
popa
mov
lods
xlat
mov
pop
leave
or
sub
ss
and
add
pop
outsb
jl
push
mov
xchg
pop
mov
sub
inc
inc
inc
push
mov
pushl
jle
cld
loopne
or
insb
cs
add
cwtl
push
jge
in
les
dec
lods
lret
mov
repz
sbb
ret
loopne
push
fs
jmp
mov
div
inc
ds
sbb
cmp
xchg
inc
hlt
int3
ficomps
pop
fbld
neg
int
cmp
mov
xor
jb
scas
hlt
inc
inc
dec
xor
call
or
loope
jg
scas
sbb
divl
or
mov
out
movsl
xchg
inc
push
iret
filds
xchg
dec
bnd
push
or
lods
push
adc
packssdw
xchg
scas
jmp
les
add
addl
mov
xor
nop
mov
mov
add
jg
pop
adc
rcl
pop
sbb
movsb
stos
dec
jbe
xor
aad
add
push
sub
cmp
mov
cmp
sub
addr16
adc
jb
mov
sbb
ret
sub
loope
cmp
mov
jg
dec
ror
mov
adc
sbb
push
in
add
cltd
xor
or
xchg
ja
adc
pop
adc
xchg
jb
loop
fwait
xchg
push
mulb
pop
jns
jl
stos
dec
pop
scas
bnd
cmp
repnz
xor
repnz
mov
inc
push
dec
inc
shll
jmp
ret
mov
xchg
mov
or
jne
stos
scas
bt
lock
mov
sub
cmp
pop
ss
cmpsl
shll
jge
push
je
ljmp
xchg
adc
and
fcomip
cltd
xchg
jg
ret
xchg
leave
or
jns
add
das
ljmp
pop
out
mov
mov
shlb
fstpl
scas
inc
and
aas
in
sub
clc
xorb
push
and
lret
test
aad
loopne
cmp
xchg
lret
test
adc
mov
arpl
dec
aaa
lret
jmp
mov
xchg
jecxz
scas
sub
sub
ljmp
mov
push
xor
adc
push
jb
push
mov
push
arpl
adc
aas
sub
xor
insl
daa
loopne
cli
jge
push
inc
int
faddl
sbb
shlb
int
nop
add
xchg
test
pushl
repnz
pusha
ret
push
into
sti
cli
mov
loope
mov
or
sub
lea
pop
mov
inc
push
xor
fwait
repnz
xor
adc
jle
data16
dec
fwait
repz
and
mov
nop
or
mov
fisttps
and
or
mov
or
mov
xchg
das
sub
cltd
aas
mov
sbb
dec
dec
negl
xchg
cmc
in
mov
imul
loop
stos
sub
dec
dec
lahf
mov
cli
adcb
lahf
cmp
pop
adc
jns
jno
or
test
adc
cmp
js
aaa
lds
jno
or
negb
cmp
cmp
sbb
ja
scas
in
mov
notl
divl
or
xchg
pop
push
or
test
dec
in
in
inc
inc
pop
mov
daa
xor
sub
jle
insb
cltd
jns
fld
mov
jle
xchg
inc
jle
sbb
adc
and
pop
jno
mov
pop
pop
cwtl
pop
movsl
pop
movsl
inc
test
dec
insb
rorl
or
loopne
add
repz
mov
mov
xor
js
inc
mov
push
dec
fnstsw
sub
or
push
aad
test
stos
xchg
and
outsb
pop
jae
inc
in
popa
repnz
xor
dec
ffreep
mov
cmp
call
in
stc
push
mov
pop
enter
mov
xor
inc
xchg
push
dec
mov
insl
mov
dec
xchg
or
movsl
lea
or
push
out
fdivs
pop
pop
test
out
pop
lret
out
lds
roll
outsl
les
ds
shll
dec
rep
xchg
mov
out
jg
data16
shl
stos
roll
and
jbe
cmp
pop
xor
shrl
mov
and
xchg
sub
sbb
adc
aad
dec
dec
push
jmp
jg
out
cltd
in
xlat
aas
pop
fdivs
iret
mov
icebp
sub
cmp
pop
dec
into
xor
lcall
cmp
cmpsl
push
out
test
inc
jp
insb
sub
jbe
mov
push
ret
hlt
adc
hlt
lret
mov
jmp
mov
jp
popf
fidivrl
jbe
icebp
push
ficoml
push
inc
insb
pop
or
shll
or
push
mov
in
jbe
jp
cmpb
pop
lahf
pushl
cmpsl
adc
inc
shl
sbb
test
out
subb
shll
cmp
xor
adc
in
mov
cmpsb
xchg
sbb
dec
adc
test
stos
mov
inc
xchg
adc
aaa
xor
pop
pushf
cmpsl
inc
jno
mov
loope
push
cmpsl
imul
xor
dec
iret
mov
mov
and
mov
fbld
je
ret
push
aas
imul
or
sbb
xor
inc
aaa
loop
in
inc
pusha
in
dec
nop
and
ljmp
fnstsw
inc
movsb
int3
push
jb
rcrb
adc
inc
fisttps
test
push
add
jns
cmp
enter
cs
lds
xchg
jle
sbb
or
imul
push
push
mov
daa
add
push
xchg
imul
jb
cmp
pop
daa
pop
mulb
xchg
popf
sbb
sub
enter
xchg
test
and
movsb
push
dec
in
mov
jo
les
out
pushf
jg
ret
sbb
sbb
stc
mov
jmp
aas
ret
xchg
outsl
outsl
xchg
mov
inc
stos
inc
ficoml
test
push
xor
xchg
lahf
push
je
jge
sahf
sbb
push
packsswb
inc
jo
lods
enter
fisubs
aad
jb
cld
dec
rorl
push
or
cmp
adcl
out
xchg
mov
sti
add
jge
imul
clc
adc
insl
sbb
inc
mov
xchg
pusha
pop
mov
das
call
xchg
cwtl
pop
iret
and
xchg
insb
outsl
pop
and
sub
fnsave
popa
test
xchg
or
aas
pop
jmp
add
and
jmp
cld
cmc
mov
fcomi
movsb
mov
repnz
jae
repnz
adc
movsl
pop
loope
jo
adc
out
cmpsl
sbb
jp
out
cmp
decb
xor
cmp
dec
test
fldcw
pop
ljmp
cmp
aaa
mov
push
jecxz
xor
ret
rcl
ljmp
mov
jg
sbb
cmpsb
stos
mov
xchg
sub
mov
aam
loope
imul
cmp
xor
lods
cmp
je
jmp
adc
pop
push
sub
sub
jp
mov
pop
jo
sarl
jge
shlb
stos
incb
fmul
neg
xchg
pop
daa
subb
gs
scas
or
dec
rol
cmp
into
js
aam
repnz
sub
cmc
inc
xchg
cmp
jae
inc
and
or
lcall
inc
mov
sbb
int3
mov
insb
dec
xchg
pop
jmp
dec
mov
negl
jo
push
dec
addr16
jge
sti
and
jecxz
pop
xlat
scas
dec
negb
mov
out
insl
gs
push
mov
test
stc
cmpsb
popa
lods
pop
lds
xchg
mov
xchg
retw
cmpsb
ds
mov
pushf
cmc
insl
jp
sbb
cmp
in
shll
aad
nop
lea
cmp
xlat
pop
xchg
bnd
jb
sbb
jns
rcrl
bsf
leave
or
fsubrs
popf
sub
mov
aas
ja
add
and
insl
inc
bound
movsb
sbb
ret
dec
xchg
add
mov
in
dec
add
mov
test
mov
call
mov
push
jb
jno
idiv
loope
cwtl
fidivl
in
push
mov
pop
fldcw
push
lret
test
cmc
pop
out
loopne
or
jge
mov
imulb
popa
gs
push
lret
loope
xchg
push
sbb
xchg
push
and
jbe
iret
mov
fisttpll
popa
notl
mov
jne
or
cli
jmp
jns
int
jmp
ss
mov
sbb
sbbl
aaa
les
or
xor
xchg
fs
push
mov
mull
lcall
mov
jl
loope
rcrl
jae
push
popa
repnz
sbb
ss
pusha
pop
jmp
fsubs
add
mov
push
inc
inc
add
mov
push
and
cmp
and
sub
enter
ret
rorw
mov
push
test
mov
or
push
add
hlt
subb
out
jmp
push
fdivl
imul
leave
jmp
mov
movsl
rclb
lods
xor
je
xor
testb
test
mov
fisubrs
inc
jecxz
mov
mov
push
and
jp
adc
xchg
lds
in
pop
push
sti
cltd
xor
shl
pop
cli
inc
cmp
lahf
push
insl
pop
jp
mov
xor
mov
xchg
mov
sarl
lret
loope
or
test
clc
xchg
scas
scas
xchg
jb
jp
pop
dec
jle
fimull
pushf
jns
js
sub
inc
push
sbb
test
mov
arpl
cmpsl
ror
add
repnz
jnp
inc
cmp
movsb
mov
shlb
xchg
pop
add
xor
orl
lret
hlt
push
jl
or
out
push
sub
cmpb
incb
les
xchg
cld
in
and
xlat
sbb
and
pop
jo
nop
cmc
outsl
aad
jb
addr16
or
sbb
stos
aas
dec
repnz
jnp
scas
fstpt
fstpl
mov
leave
movsl
jae
mov
ljmp
fsubp
xor
negb
lahf
mov
pop
fsin
mov
xor
mov
in
or
mov
add
stos
or
adc
jae
mov
mov
mov
cmp
addl
jo
pop
inc
lock
push
clc
mov
jo
add
ud2
clc
cmp
out
ljmp
mov
jne
lcall
push
call
into
popa
pusha
adcb
repz
dec
inc
adc
push
in
cmp
push
mov
mov
out
mov
inc
inc
xchg
into
mov
xchg
xchg
neg
ret
jmp
dec
pop
movsl
int
push
adc
std
xlat
pop
movsbl
add
jnp
aas
push
inc
int3
dec
test
push
sub
and
roll
pop
xlat
iret
orb
and
xor
cld
int3
aas
dec
push
cli
leave
rorl
add
popa
lret
xor
in
loope
inc
in
xchg
inc
mov
je
pop
mov
sub
jb
or
fldcw
mov
je
ret
mov
mov
pop
pop
xchg
xchg
xchg
or
inc
push
lds
orl
mov
orb
push
mov
ret
dec
push
add
mov
pop
lret
mov
aad
sub
xchg
leave
js
add
sahf
ret
cmpsb
mov
push
repz
push
std
or
aaa
xor
sub
mov
dec
mov
cmp
cmp
xchg
repz
arpl
fisubs
sti
fnstcw
pop
popf
mov
inc
mov
or
mov
jnp
or
jnp
cmp
xor
xor
lods
shlb
mov
sbb
jecxz
mov
incl
pop
repnz
sub
xor
mov
add
mov
and
jo
pop
pop
cmp
mov
pop
pop
cmp
fstpt
out
pop
minps
cmpsl
roll
mov
fnsave
lds
rolb
lret
dec
ja
push
mov
imul
push
sub
testb
jmp
scas
pusha
mov
out
fwait
and
and
cwtl
ficoml
into
test
mov
add
sub
pop
adc
push
out
adc
jo
mov
dec
add
mov
xchg
and
stos
cwtl
sbb
leave
mov
xchg
xchg
pop
and
out
pusha
sub
lret
inc
cmp
inc
fildll
sub
jae
xor
sub
xchg
jg
aas
and
loop
cltd
sub
sub
sub
mov
lcall
rcrl
sbb
outsl
sbb
lahf
or
fsubrl
and
or
clc
outsb
push
mov
push
add
push
xchg
cmc
scas
pop
imul
setbe
jle
adc
add
push
in
fimuls
jmp
notl
popf
call
test
xorl
shlb
xor
subb
adc
clc
fistpl
fcompl
xor
mov
sahf
xlat
rorb
mov
aaa
or
mov
rorb
cmp
sbb
jmp
fistpll
mov
and
and
loop
push
mov
shlb
fmuls
lods
in
leave
mov
and
jmp
in
push
aaa
push
ja
addr16
xor
or
iret
scas
testl
jae
mov
lcall
lret
cmpl
inc
sub
inc
pop
aad
ss
in
sahf
sbb
pop
push
and
jns
push
mov
jp
fistl
jo
lret
scas
and
scas
inc
xor
mov
orb
inc
add
pop
mov
adc
sbb
test
dec
dec
dec
call
pop
loopne
dec
aad
add
mov
and
ja
sub
icebp
mov
xchg
scas
adc
lods
cmpsb
rcrl
add
push
gs
and
orb
mov
sub
sub
addr16
pop
pop
xor
in
cmp
dec
pop
subb
pop
aaa
repnz
xchg
test
xor
lcall
adc
stos
xchg
push
testb
leave
inc
popf
mov
sbb
jl
sub
or
int
pop
adc
arpl
push
pop
and
dec
xchg
jb
xchg
int
add
cld
stos
sbb
or
fstps
and
mov
add
cmp
pop
popf
push
pop
mov
loop
lret
mov
pop
jl
je
pop
xor
jne
dec
xchg
shll
ds
and
into
addr16
in
loop
dec
mov
int3
hlt
cmc
push
es
aas
dec
mov
adc
dec
push
fisubs
enter
adc
pop
iret
dec
pop
or
sub
sbb
mov
test
lea
inc
mov
fsincos
test
inc
mov
adc
imull
iret
jnp
frstor
arpl
mov
lahf
or
add
cmpb
add
push
mov
xchg
negl
xchg
sub
shlb
sarb
jecxz
mov
push
jg
clc
jae
and
mov
inc
xchg
dec
dec
dec
lahf
sahf
and
inc
add
not
push
jge
mov
mov
mov
sbb
cmc
ret
out
lods
pop
dec
sbb
mov
push
sbb
jno
push
adc
loopne
icebp
sbb
push
shrb
icebp
outsl
movsb
mov
add
xlat
xchg
addr16
and
inc
push
repz
ljmp
and
lahf
repnz
mov
add
sub
ds
ret
pop
mov
movsb
mov
in
cmpsb
sub
push
cwtl
lcall
jb
push
mov
cltd
mov
rol
adc
mov
stc
dec
sub
mov
lret
aaa
mov
decl
std
shll
fildll
subl
dec
jg
or
in
es
fstpt
lds
push
sti
outsb
dec
sub
mov
pushw
sbb
xchg
es
and
push
mov
pop
scas
push
pop
add
xchg
sbb
or
pop
mov
mov
sbb
adc
inc
out
pop
pop
sub
adc
mov
cmp
clc
lret
scas
dec
adcl
lods
test
mov
shrl
xchg
hlt
mov
and
out
mov
orl
xchg
jl
push
mov
lock
call
stos
mov
roll
pop
xchg
and
and
vpsubw
push
fisubrs
sbb
dec
mov
ret
add
xchg
sbb
sub
popf
fcompl
in
xor
dec
sti
or
ljmp
dec
cs
lret
jl
sub
outsl
fsubrl
outsl
jo
cmp
jne
les
shr
or
mov
pop
decl
scas
insl
xor
dec
out
fidivrs
ret
pop
inc
in
inc
aam
scas
sub
push
repnz
jp
xor
dec
cltd
pushf
ficomps
and
xlat
cltd
insl
loopne
ss
imul
test
dec
in
sbb
mov
inc
xlat
jns
test
aad
cmp
ja
and
dec
outsb
in
popa
push
fcom
fs
je
inc
gs
add
leave
push
fldcw
xchg
das
pusha
call
es
mov
js
or
outsb
daa
fisubrs
mov
mov
inc
out
pop
pop
sub
push
mov
repnz
fs
pop
punpckhdq
sub
loope
shll
out
fsubs
or
mov
dec
test
orl
cli
insl
cmp
in
inc
adc
pop
jp
fiaddl
xlat
and
ja
out
movsl
into
mov
cld
loop
push
pop
pop
mov
xor
jecxz
cs
mov
idivl
out
sub
jmp
loop
sub
push
lahf
ss
inc
cmp
pop
mov
js
mov
loopne
inc
call
into
dec
cmp
outsw
xor
arpl
sti
fidivrs
movsl
clc
inc
ficoml
cmp
mov
fmul
daa
popf
xor
lea
and
imul
and
jmp
pushf
in
shlb
xchg
mov
into
cli
pop
xchg
add
aas
lods
pop
inc
daa
xor
or
frstor
pop
mov
popf
mov
xchg
scas
mov
jno,pn
or
sbb
adc
jnp
in
xor
mov
inc
mov
sbb
sti
lahf
dec
add
notl
dec
sbb
push
pop
mov
dec
or
aad
fbstp
movsl
orb
or
sbb
mov
sub
dec
xchg
test
cmpsb
rorb
inc
cmp
push
mov
lretw
lods
outsb
adc
mov
or
xor
jp
loope
jae
rorl
pop
rolb
jmp
mov
sti
cmp
xchg
sub
and
mov
xlat
and
xor
fists
into
adc
mov
cwtl
jns
xor
adc
iret
jecxz
xchg
jmp
shl
fwait
jae
mov
dec
cwtl
xchg
push
xchg
pop
insl
out
sahf
pop
sbb
cltd
jo
dec
cltd
ja
jb
incb
push
jl
xorb
movsb
pop
dec
pop
std
add
data16
std
add
cmpsl
imul
jl
popf
sbb
and
daa
mov
xor
sub
iret
push
xchg
mov
xchg
and
mov
or
pop
and
jg
outsb
mov
mov
or
push
pop
pop
xchg
mov
inc
aam
fwait
imul
pop
insl
mov
add
stos
cmp
mov
pop
inc
lods
data16
mov
cltd
and
out
mov
data16
jb
xor
push
inc
cs
xor
int
jge
inc
les
repz
and
lea
sbb
push
int3
jb
ss
adc
mov
dec
adc
cmp
sub
mov
out
inc
outsb
popa
push
or
adc
daa
and
cmp
fcomi
fstpt
xor
pop
cmp
xchg
stos
or
add
das
es
xchg
mov
shll
mov
or
outsl
or
cmp
or
fsubs
movsb
gs
or
cmp
dec
jns
ljmp
mov
jg
xchg
xor
dec
repz
fcmove
pusha
dec
add
mov
in
mov
dec
jae
mul
mov
sub
adc
repnz
sti
in
xlat
push
add
daa
out
push
std
leave
sub
test
push
mov
rorl
push
negb
adc
push
cmp
dec
stos
cltd
add
fcoml
aad
outsl
and
or
aaa
pop
pop
pop
aam
incl
sti
jmp
int3
enter
inc
inc
rcll
jmp
pop
sub
or
sbb
mov
adcl
dec
loope
and
mov
andb
push
adc
dec
rolb
int3
sbb
cmp
push
aam
pop
dec
outsl
jnp
nop
fcom
bound
cmpsb
mov
or
push
sub
std
lock
fmuls
dec
push
xor
adc
test
jg
push
adc
jbe
pop
xchg
out
pop
out
call
and
mov
push
jb
cs
inc
or
xchg
xor
es
sbb
push
xor
sub
fisttps
jbe
ljmp
push
in
pop
push
mov
scas
shlb
jmp
and
lock
je
mov
test
adc
sub
push
sbb
ljmp
or
sbb
adc
and
iret
jae
pop
scas
and
aas
shlb
cmp
jnp
sub
and
pushf
xrelease
out
lock
std
stos
jnp
pop
jbe
xor
xlat
out
inc
pop
mov
adc
inc
icebp
fistpl
fdivrs
and
movsb
sbb
imul
sbb
cltd
cmp
iret
aam
lea
shr
sbb
and
shll
lock
outsb
sub
xor
xchg
add
test
gs
add
jb
push
hlt
stos
mov
mov
stc
sub
dec
dec
fs
ljmp
sahf
push
ja
inc
mov
addr16
xchg
dec
dec
and
les
sahf
lcall
cmc
pop
aaa
xchg
or
in
hlt
enter
repnz
mov
adcb
pop
rorb
stc
pop
aad
add
add
aad
cld
sti
mov
fadd
arpl
push
dec
add
mov
das
bound
xchg
mov
mov
mov
xlat
pop
out
sbb
push
add
mov
mov
xchg
je
cmpl
add
lret
dec
in
shll
lea
out
mov
jnp
pop
cli
sbb
and
mov
movsb
jne
jmp
mov
mov
pop
xchg
dec
and
mov
xchg
xadd
jb
into
aam
xor
sti
push
adc
jp
scas
dec
sbb
mov
or
cld
sahf
adc
push
pushl
test
xor
jae
shll
int3
jmp
adc
jmp
scas
loope
mov
adc
das
and
xchg
or
sub
push
frstor
cmp
sbb
out
jae
imulb
outsb
ror
lahf
dec
add
outsb
mov
ret
cltd
and
mov
fldl
or
mov
es
xchg
arpl
add
mov
fwait
movsb
push
es
push
fidivl
out
lret
lret
xor
jge
push
shll
xchg
int
fimull
inc
jmp
xchg
bndstx
imul
das
popf
push
xchg
fucomip
fcomps
dec
test
add
xchg
pop
nop
pushl
inc
cmp
lcall
cmp
aam
mov
frstor
lahf
push
cmp
inc
dec
cmpsb
pop
pop
pop
test
sti
mov
pop
lods
sti
dec
shrb
insb
imul
cmp
cmpsb
or
xchg
in
scas
ret
mov
mov
cmpsl
int3
test
stc
arpl
push
inc
jl
int
dec
hlt
mov
sbb
stos
jp
xchg
lret
inc
mov
xor
and
jne
jge
sub
jbe
movsl
xor
sub
sbb
gs
aaa
push
js
sarl
lock
cs
jb
adc
fidivs
cmpsl
sbb
icebp
or
mov
cmpsb
test
push
mov
mov
ficomps
pop
repz
sub
cmpsl
rolb
cmp
shlb
inc
push
pop
or
pop
test
fwait
in
push
rolb
inc
rcrb
sahf
lds
subb
aaa
sub
cltd
dec
xlat
push
in
iret
lods
inc
adc
inc
ja
push
pop
pop
fucom
fisttpll
mov
scas
iret
subb
cmp
dec
loope
jl
jnp
adc
inc
xchg
adc
cmpsl
mov
and
cmp
cs
cmpsb
cmpsl
dec
lret
loope
call
nop
mov
pusha
inc
mov
dec
sbb
pop
lea
xor
mov
xor
mov
lret
mov
cld
mov
loope
mov
or
cltd
ljmp
cmp
cmp
inc
fidivrl
fwait
xchg
mov
sbb
xor
cmc
cmp
aas
cmc
jns
fdivrp
mov
movsl
jnp
mov
fs
lret
add
mov
pusha
jb
sub
mov
aam
lahf
xor
xchg
lret
mov
jg
mov
and
sbb
shrl
mov
dec
or
add
ret
lods
xchg
pop
pop
push
cli
rcpps
push
xchg
mov
jne
or
push
jns
mov
pop
shll
in
xor
adc
testl
cmp
push
jbe
cmp
cmp
add
clc
pop
jo
frstor
xor
jmp
mov
aaa
pop
sub
dec
negb
mov
sub
loopne
sarb
ljmp
add
lret
test
mov
scas
addr16
xor
insb
push
sub
mov
pop
rclb
or
scas
adc
loop
mov
rorb
sub
aad
clc
das
in
push
sbb
decl
xor
jnp
fbld
mov
mov
xchg
pop
pop
xchg
ficoms
fwait
push
xchg
gs
xorb
aaa
rcrb
scas
aaa
dec
dec
sub
cs
fisttps
stos
xchg
push
popa
loopne
stos
and
imul
lret
pop
subl
leave
test
testl
sub
cmpsb
imul
xor
lret
les
mull
stos
cmpsb
push
cmp
cmp
mov
mov
pop
movsb
out
jge
xor
lea
mov
sbb
pop
daa
js
lcall
lret
testl
mov
ds
lea
push
mov
rcr
sti
pop
or
sti
sbb
enter
adc
xor
in
fwait
loope
test
cmp
mov
insl
cli
lahf
mov
xlat
mov
mov
inc
push
pop
lock
and
cmpsb
or
xchg
enter
cmp
and
cwtl
bound
cld
cvttps2pi
dec
mov
in
fsts
jle
push
cli
call
mov
in
test
idivl
icebp
and
jge
mov
mov
xchg
sbb
lock
mov
mov
xor
dec
mov
and
xorl
adc
cmp
popa
mov
xchg
sub
jecxz
inc
pop
dec
mov
pop
loop
ds
mov
fcomps
hlt
or
dec
mov
jg
xor
stos
andb
test
jns
fstpt
sub
cmp
imul
pop
fsubrl
lea
jge
idiv
mov
dec
int
mov
mov
call
and
push
push
xchg
mov
sahf
mov
and
mov
mov
push
or
push
fcompl
cmp
xchg
daa
pop
add
add
orb
idivb
mov
cmpsb
push
pushf
jae
ljmp
sbb
xchg
outsl
in
push
int3
inc
call
jo
testb
fs
jns
insb
push
mov
push
mov
inc
loope
push
stos
inc
pop
inc
adc
dec
mov
mov
dec
icebp
or
or
pop
fisubs
out
fs
or
in
mov
mov
jnp
push
add
stc
jb
popa
or
jp
jbe
mov
aad
gs
stos
cmp
xchg
sbb
jns
adc
orl
leave
sub
push
lret
cmpsb
test
out
js
cmp
filds
shrl
mov
data16
pop
push
fwait
jne
xor
cli
and
push
out
sarb
hlt
push
shrb
fdivs
js
or
fimuls
dec
repz
cmp
mov
xor
ljmp
jecxz
outsb
repz
ret
and
vsqrtsd
mov
enter
mov
push
test
rcr
sbb
rorl
jmp
imulb
sbb
mulb
adc
bt
sar
lret
test
push
or
sub
jb
rcl
jle
xchg
or
pushf
sbb
sbb
cli
mov
test
lds
push
outsl
in
pop
jg
or
out
shll
jns
movsb
out
and
inc
out
lahf
orb
mov
pop
mov
mov
pop
mov
test
push
bound
mov
stos
dec
out
imul
add
xor
xor
or
jmp
mov
inc
mov
cmp
in
imul
ds
sbb
or
cmpsl
test
mov
add
movsb
in
lcall
push
mov
cmp
imul
mov
pop
cli
test
test
testb
add
xor
aam
dec
mov
add
sbb
lret
jg
and
out
loopne
cli
lods
imul
xchg
fidivs
lret
cmp
cmp
or
xchg
in
call
add
jno
pop
sub
fisubl
cltd
cmpb
mov
sahf
sahf
inc
dec
cmpsl
orb
jb
push
push
xor
pop
in
clc
push
out
je
mov
or
aam
cmc
jae
or
and
pusha
insl
cmp
pop
cld
scas
push
nop
mov
mov
xchg
call
movsl
lods
push
fmuls
cmpsb
xchg
xchg
pop
mov
dec
vmovq
jge
lods
jnp
mov
call
mov
mov
clc
mov
lret
mov
fbld
mov
cmpsb
ss
lahf
jne
jo
cwtl
movsl
or
or
jecxz
jno
int3
jg
in
dec
mov
mov
xchg
fadds
xor
fbld
mov
add
and
push
adc
xchg
fmulp
or
hlt
outsl
jecxz
adcl
out
stos
je
pop
dec
add
push
loop
test
add
mov
pop
lods
sbb
mov
loopne
add
jno
add
jmp
enter
fsubp
inc
imul
and
je
adc
dec
mov
xor
dec
jae
rorb
ss
xlat
or
xor
xor
cmp
aas
add
inc
inc
xlat
iret
popf
fidivrs
push
add
bound
test
insl
in
pop
inc
xchg
enter
and
imul
aam
rorb
dec
add
scas
mov
or
mov
les
shll
or
cs
in
ljmp
bound
hlt
jne
mov
push
add
inc
mov
nop
mov
arpl
mov
enter
sbb
out
js
je
iret
lods
add
pop
mov
icebp
imul
sbb
mov
outsb
aad
scas
xchg
xchg
mov
mov
fldenv
push
pop
mov
sub
mov
or
push
pushf
mov
mov
dec
shrb
push
sub
inc
sub
xor
pop
jecxz
arpl
inc
inc
lcall
jp
test
sbb
cmpl
dec
jns
jno
pop
test
insb
lods
pop
out
and
fcomip
in
test
ljmp
ret
cmp
imul
sbb
test
pop
jecxz
xchg
inc
std
push
mov
fwait
sti
cltd
addb
push
cmp
add
pop
mov
jne
pop
cltd
and
push
out
cwtl
mov
sbbb
pop
pop
mov
mov
lret
sub
mov
int
popf
pop
pop
ret
push
aad
jae
or
mov
adc
cmp
mull
popa
add
add
mov
out
add
cmp
pop
bound
cmp
cmp
sbb
loop
in
mov
arpl
jb
mov
cmp
test
sbb
mov
push
mov
or
das
push
adc
sub
inc
test
sbb
lods
das
out
cmp
roll
and
fbld
jo
mov
jne
repz
popa
and
dec
fisubs
scas
cmpsl
call
xlat
test
mov
push
repz
or
notb
fcompl
orl
out
gs
je
xor
movsb
push
scas
sub
or
mov
negb
ds
les
xchg
mov
cmp
mov
mov
sbb
ret
jmp
pop
std
inc
daa
or
mov
adc
loop
jb
arpl
sub
push
flds
stos
xchg
jbe
xchg
lods
shrb
mov
frstor
cld
test
rcr
xchg
mov
xchg
sbb
xchg
cmp
adc
cmc
jp
push
xchg
pushf
xor
and
imull
shld
pop
adc
insb
push
adc
pop
jbe
fstp
cld
cmp
int
cmp
xor
hlt
jne
or
fs
sbb
mov
or
in
push
movsl
imul
and
mov
mov
sub
loop
add
les
cmp
cmp
jl,pt
leave
push
push
jne
add
lock
gs
xor
iret
add
js
jmp
adc
pusha
mov
sub
jbe
xchg
repnz
push
ja
in
pop
sbb
jne
push
sub
mov
fnsetpm(287
out
cltd
out
ret
xchg
fistl
dec
in
popf
mov
ja
mov
rolb
mov
mov
xchg
sti
das
test
and
xor
add
xor
popa
add
push
cmp
mov
ja
and
sahf
data16
push
mov
and
pop
jmp
cmp
mov
push
mov
and
push
cmp
mov
sbb
mov
cltd
xchg
push
adc
sbb
pushf
xchg
xchg
add
mov
arpl
lahf
inc
or
dec
sahf
xor
insb
or
enter
pop
or
and
mov
pop
pop
xor
inc
gs
shl
xor
jbe
dec
xchg
cmp
cwtl
mov
jecxz
pop
add
pop
sbb
out
cs
and
js
pop
cmpsl
push
bound
push
js
adc
aad
imul
mov
mov
push
mov
inc
lods
mov
adc
adc
jnp
pushw
outsb
add
jge
pop
cmp
cmp
pop
or
pushf
rcll
and
push
sub
cmc
push
hlt
pop
cmp
lret
xchg
xlat
mov
repnz
and
xor
lock
repnz
jb
fwait
test
mov
dec
push
or
and
int3
mov
loopne
ss
addr16
fwait
repnz
xchg
clc
or
lock
mov
stc
jp
loopne
aad
and
xor
cld
decl
movsl
aad
dec
lds
cmc
push
jb
xlat
sbb
cmpsl
daa
lods
jp
imul
adc
mov
adc
pop
sub
or
out
fsubrs
dec
shl
shrl
sub
sub
les
adc
jns
pop
or
and
and
xor
sbb
cmp
mov
inc
das
imul
icebp
aam
dec
pop
xor
nop
push
out
mov
sub
data16
or
roll
inc
pop
sbb
sahf
sbb
sti
cmp
insb
loop
push
sbb
mov
and
rclb
pop
in
bound
rcrl
mov
xchg
mov
out
sbbb
pop
inc
mov
dec
add
xchg
mov
outsb
mov
pop
inc
sub
add
popf
shll
push
and
rcll
mov
jecxz
sbb
mov
rep
or
xchg
inc
jle
sub
clc
jp
add
hlt
jnp
sbb
leave
hlt
dec
mov
jp
dec
ret
and
lea
adc
in
lret
cmp
xor
inc
mov
cmpsb
out
loopne
xchg
std
xchg
dec
push
push
ss
and
ss
ljmp
mov
dec
test
cmp
daa
fcoml
jle
sarl
sbbb
mov
es
inc
mov
daa
and
and
push
stos
mov
nop
cmc
sbb
xchg
dec
jno
jmp
shll
jbe
rolb
dec
addr16
in
or
dec
xchg
and
pop
cmp
lods
rorl
outsb
adc
das
daa
push
je
xor
test
ret
push
fadds
lods
sub
mov
subb
ds
inc
les
mov
or
pop
add
sub
les
sub
inc
jle
int3
mov
fadd
xlat
pop
jae
divl
inc
mov
inc
inc
mov
pushf
jmp
aaa
pop
mov
rolb
sub
movsb
xor
in
sub
aaa
cmp
imul
sub
push
lds
arpl
mov
scas
push
xor
neg
pop
ljmp
cmpsb
je
push
xchg
jnp
xchg
mov
outsb
flds
test
xlat
mov
pop
dec
lcall
xchg
clc
dec
mov
sahf
jbe
inc
mov
call
lret
mov
push
jg
jo
sub
inc
daa
insb
xchg
lahf
pop
add
scas
adc
orps
sbb
es
dec
pop
test
ds
pusha
lret
push
outsl
xchg
dec
mov
mov
or
stc
dec
ja
mov
test
movsb
and
sbb
leave
xor
jmp
sub
cmpsb
inc
push
inc
ret
mov
ja
dec
jns
xor
add
lock
das
xor
adc
test
mov
dec
cld
and
cmp
and
push
xchg
push
inc
sub
ror
and
xor
sbb
stc
shl
mov
push
pop
out
loopne
xor
adc
mov
ret
push
adc
ljmp
push
popa
lret
ds
push
or
int3
lret
lcall
dec
sub
adc
jg
lret
jg
inc
fldcw
mov
xacquire
push
outsb
fsubs
and
mov
fcompl
add
jmp
jb
jb
or
imul
sbb
sub
mov
cwtl
xchg
cli
xor
sarb
adc
in
popf
daa
stos
jl
push
cmp
insl
lea
mov
cli
pop
adc
sub
arpl
cmc
push
fs
mov
sti
imul
xchg
dec
or
push
mov
mov
xchg
lods
enter
add
aam
sbb
ret
jg
mov
jae
bound
shll
cmp
or
jge
and
mov
xchg
xor
xchg
movsb
lahf
mov
es
jle
mov
into
test
stos
fwait
mov
or
cmc
ja
mov
addb
inc
test
jne
outsl
popf
fsubs
in
je
insb
movsl
add
arpl
repz
jle
data16
inc
gs
je
cmpsb
out
add
sbb
pop
jle
dec
dec
pop
mov
and
int3
pop
pop
aam
jmp
divb
repnz
mov
imul
sahf
pop
pop
sahf
or
pushf
inc
mov
lods
loope
test
je
es
adc
test
dec
jg
jns
pop
out
ret
insl
jno
fwait
js
lds
outsl
xor
popa
mov
ret
sub
scas
sub
or
cmpsb
inc
inc
je
mov
mov
das
sbb
sub
pop
pop
insb
fisttpll
cmp
ja
in
into
xchg
mull
xor
pop
addr16
sbb
or
int3
icebp
xor
adc
adc
or
aad
mov
jecxz
jb
loop
ds
loope
outsb
mov
sti
mov
jmp
xor
adc
ret
sarl
lcall
mov
jmp
add
cmpl
dec
mov
pusha
out
fwait
aad
add
mov
push
lods
pop
movsl
scas
stc
imul
or
mov
les
add
inc
je
and
inc
popf
lods
stos
sbb
jne
jae,pt
fisubl
xchg
ja,pt
jp
fs
mov
jge
enter
jge
sbb
adc
cld
dec
push
pop
sub
push
jp
inc
push
cmp
xor
dec
sbb
hlt
jo
jnp
fcmovnb
inc
adcl
pop
rcrb
roll
dec
mov
ljmp
push
das
inc
mov
dec
adc
pop
jnp
ljmp
adc
aad
or
sub
or
int
dec
sbb
jmp
mov
cmp
sbb
fdivs
mov
jbe
or
inc
flds
xor
test
jmp
xchg
mov
les
bound
mov
fwait
loopne
inc
icebp
sbb
pop
jge
push
int
xchg
pop
adc
push
mov
jmp
cmp
mov
sarb
push
dec
out
je
int
call
fdivrl
fidivrs
jge
in
pop
and
insb
testb
sti
jg
sbb
push
add
rclb
xchg
dec
jns
mov
push
cmp
fistps
adc
adc
adc
inc
sbb
jb
push
dec
addr16
adc
cmp
jecxz
mov
ss
cmpsl
cmpsl
scas
or
inc
sub
add
push
inc
std
xchg
add
dec
pop
jmp
mov
sub
push
ret
arpl
sub
ljmp
sbb
loop
icebp
rcll
push
stos
imul
pop
clc
jmp
dec
pop
dec
lret
cmpsb
aaa
rcrl
jb
xor
scas
aas
or
pushw
repnz
mov
rorl
js
mov
add
insb
fmuls
xchg
stc
mov
jmp
inc
cmpsb
jno
sti
dec
adc
pop
pushf
ret
es
je
rolb
jno
cltd
mov
dec
push
mov
mov
popf
bound
xchg
nop
outsb
loope
mov
pop
jle
sub
jg
inc
add
and
jns
shll
lods
shll
je
sub
pop
mov
lods
push
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
cmp
gs
in
loop
inc
fmull
das
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
adc
mov
arpl
jecxz
mov
and
pop
orb
xchg
add
sbb
lea
sahf
add
fldenv
or
je
gs
jmp
mov
es
jnp
mov
test
jo
jge
mov
ud0
sbbl
into
loopw
mov
mov
frstpm(287
std
daa
and
and
mov
ss
mov
aam
das
xchg
push
scas
jl
mul
mov
mov
popa
gs
adc
outsl
lods
adc
adc
adc
cs
out
gs
jmp
ja
sub
inc
insl
sub
movsb
je
gs
or
mov
insl
movsb
lcall
inc
and
jl
je
gs
jmp
ja
insl
in
das
jne
jmp
jb
insb
movsb
je
gs
in
loop
inc
and
insl
movsb
and
gs
in
loop
inc
jb
outsl
movsb
je
gs
stc
loop
push
and
insl
mov
das
jne
jmp
imull
je
gs
jmp
dec
sti
insl
int
das
gs
sbb
mov
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
inc
rclb
push
adc
jmp
ja
jge
je
mov
jmp
daa
mov
xchg
and
out
jmp
ja
lea
jmp
ja
insl
push
jg
gs
loop
sahf
daa
ja
insl
movsb
je
gs
jmp
push
imull
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
je
gs
jmp
ja
insl
movsb
fs
lds
int3
and
pop
imul
cld
pop
ja
aaa
cmpsl
sub
inc
andl
dec
into
pop
jmp
cmp
into
inc
xor
pop
cltd
test
cmp
std
outsl
movsb
xor
ljmp
mov
pop
mov
loop
insb
stos
pop
scas
lret
rcr
sub
sbb
or
adc
int
shl
inc
inc
filds
cs
inc
cmpsb
sbb
pop
insl
dec
adc
shll
sub
push
xor
pop
and
xor
fs
ss
push
les
mov
jb
inc
imul
fistpll
test
popf
dec
pop
mov
fsubrp
test
notl
fstpl
loopne
aas
test
ret
aam
or
sub
shlb
fcmovnb
cld
bound
shrl
or
sub
nopl
sar
xchg
iret
mov
movsb
bound
push
push
daa
lods
adc
mov
xchg
jno
mov
sub
jae
xchg
aam
leave
in
push
pop
loope
fistps
ret
mov
adc
dec
cmpsb
or
movsl
mov
push
pop
aad
stos
ljmp
and
je
fldt
inc
fsubrs
mov
pop
mov
aas
jp
push
inc
cmpb
push
out
rorl
jge
sti
inc
adc
sbb
mov
pop
shl
mov
sbb
sub
fdivrp
insb
jmp
push
aas
mov
xor
cltd
nop
jp
daa
push
mov
xchg
ss
rolb
add
decl
cld
sub
add
inc
stos
cmc
push
mov
and
adc
jne
std
fdivl
push
clc
cli
lock
jle
cmp
inc
dec
pop
dec
pop
dec
cs
mov
fnstenv
push
fmull
cmp
les
jp
lock
lcall
inc
ja
xchg
mov
sbb
jno
repnz
push
loop
scas
push
mov
mov
mov
repnz
lcall
jno
push
or
mov
jle
jb
lock
sti
movsb
imul
cmpsb
test
xchg
dec
std
pusha
push
scas
scas
into
mov
in
sub
mov
ljmp
repnz
xor
jmp
pop
enter
shr
pop
push
orl
cmc
nop
mov
repz
into
imul
pop
mov
insl
sbb
test
gs
dec
bound
data16
pop
adc
adc
call
ror
scas
jle
adc
ss
pusha
xlat
mull
mul
xchg
push
cmc
fucomp
and
cmpsl
or
xor
ret
in
sbbb
sub
xor
or
sbbb
jp
mov
mov
mov
sub
sub
lods
es
cmp
dec
adc
jmpw
sub
add
mov
sbb
mov
jp
mov
lcall
in
movsb
sbb
add
test
icebp
pop
mov
jle
xchg
psubw
mov
lock
gs
cmpsb
fadds
pop
in
adc
mov
rcr
xor
jg
jne
jnp
bound
shrl
addr16
xor
mov
sbb
sub
dec
popf
push
fisubs
orl
scas
dec
mov
gs
lock
cmp
adc
cmp
xchg
xchg
lret
mov
leave
rclb
cmpl
cmp
mov
jmp
pop
xchg
scas
cmc
cli
into
gs
rcrb
shrb
and
sti
lcall
jns
cmp
xor
cwtl
or
aas
insl
lds
loopne
jno
mov
mov
cli
int3
xchg
sub
popa
sbb
sbb
cmp
mov
fwait
jo
mov
pop
mov
push
pop
jle
jecxz
mov
mov
sbb
pop
add
bound
sub
popf
xchg
int3
mov
or
pusha
test
lods
push
or
xchg
test
xchg
imul
loopew
xor
repnz
dec
inc
pop
xchg
mov
inc
jl
push
inc
cmp
mov
and
cltd
add
dec
push
mov
sub
and
dec
and
test
inc
mov
push
inc
loope
lods
and
jo
dec
dec
adc
addr16
pop
mov
stc
xor
inc
sbb
push
jmp
cmpsb
fimull
int
outsl
js
and
lock
jo
jo
sbb
sub
into
sbb
and
adc
dec
pop
cld
jmp
sub
mov
cmp
insb
insl
cmp
mulb
je
adc
push
pop
inc
stc
out
pop
xor
into
loop
xor
cmpsl
adc
push
lcall
mov
mov
aam
pushf
sbb
push
pusha
adc
mov
outsl
and
xchg
xor
mov
inc
insl
iret
or
test
int3
pusha
inc
xchg
into
xchg
icebp
std
sti
loope
jb
movsb
fdivs
ret
adc
aad
push
and
push
inc
pusha
sbb
inc
dec
and
mov
lea
out
push
pop
fsubs
cld
dec
jp
mov
je
mov
in
rcll
push
sarl
mov
xor
pop
xchg
fwait
nop
fcompl
mov
setns
add
adc
out
cmp
mov
add
dec
test
pop
sahf
imul
mov
jns
mov
inc
push
dec
xchg
mov
xchg
imul
mov
test
add
dec
ja
insl
jnp
jae
cmp
cltd
cltd
mov
lods
outsl
push
test
jge
lea
inc
adc
xchg
pop
mov
lret
stos
jb
mov
popa
and
push
mov
mov
and
adc
add
insb
inc
notl
mov
fmull
adcl
lods
mov
sub
icebp
add
cmp
aas
and
popf
sub
mov
loop
dec
and
mov
inc
ret
or
mov
push
xor
push
mov
cmp
mov
xrelease
mul
add
jle
stc
and
cmp
fimull
mov
aam
xor
cmpsb
pop
push
push
jge
inc
lret
sbb
push
jno
cli
aad
loope
mov
aad
dec
xor
popa
orb
dec
xor
mov
add
int3
cmp
cwtl
divb
xchg
loopne
pop
mov
call
fs
ret
lcall
mov
lock
insl
sub
mov
jne
adc
int3
test
imul
add
gs
call
and
push
fldcw
mov
xchg
mov
jl
push
loop
xchg
mov
xchg
sub
mov
js
push
filds
and
xlat
dec
mov
lcall
ja
cmpsb
pop
mov
sahf
inc
sbbl
call
lcall
pushf
and
fldl
mov
test
shll
mov
inc
hlt
dec
stos
idivb
sar
fnstcw
stos
std
dec
mov
pop
mov
cwtl
mov
jl
idivb
out
int3
insl
pop
mov
js
ficompl
mov
shll
mov
repz
inc
mov
cmp
mov
pop
pop
lcallw
dec
or
mov
shlb
and
push
test
idiv
out
pop
test
mov
cmc
ret
or
enter
adc
ret
pushl
test
fwait
inc
push
pop
test
jl
leave
mov
in
and
push
sbb
out
xchg
mulb
lahf
push
sahf
int3
xchg
adcb
cmc
cltd
adcb
shll
cmpsl
scas
mov
rorb
dec
lock
mov
push
dec
add
jg
and
pop
pop
rclb
pop
out
ret
dec
cmp
cmp
inc
cmp
imul
movsb
fdiv
fstps
jae
jecxz
cltd
je
pop
xor
jmp
adcb
mov
jp
test
jge
jecxz
add
inc
inc
push
sbb
jnp
dec
fs
call
jbe
adc
xchg
pop
and
lret
jo
mov
iret
push
daa
jecxz
xchg
xchg
vfrczps
ljmp
mov
pushf
icebp
or
jae
sahf
hlt
roll
push
cli
iret
arpl
mov
adc
mov
pop
or
jo
mov
rcll
mov
js
ja
popf
mov
iret
arpl
shll
sbb
in
pop
int3
ds
or
sbb
mov
dec
mov
inc
push
xchg
sbb
inc
cmp
inc
adc
rolb
bound
insl
loop
ss
mov
ret
add
fsubrl
mov
fcmovnbe
mov
jmp
or
addr16
inc
mov
iret
fistl
mov
lea
push
xorl
aam
adc
pop
mov
mov
mov
xchg
movsl
shl
test
fsubrs
arpl
test
jbe
cmp
cmpsl
adc
cwtl
bound
sbb
andb
sbb
sbb
dec
lahf
jne
cmp
or
imul
jg
mov
mov
add
incb
arpl
mov
jl
push
out
xor
rcl
mov
nop
fwait
push
xchg
out
xor
sahf
jle
sub
add
xor
daa
add
xchg
int3
jb
mov
dec
or
cwtl
cmc
jno
pop
mov
nop
iret
rcrb
fxch
cmpsl
stos
or
and
sub
sbb
push
jno
inc
decl
sbb
aaa
loope
pop
mov
xlat
iret
push
add
mov
pop
nop
lods
jg
inc
mov
jbe
popf
inc
push
xchg
and
pop
les
fsts
cli
sub
cmpsb
push
or
call
cwtl
imul
push
cvtdq2ps
pop
or
mov
dec
test
imul
fsts
add
dec
rorl
push
loopne
mov
xor
fidivrl
rorb
cwtl
cld
jge
xchg
mov
inc
mov
push
mov
inc
roll
sbb
cwtl
and
pop
shr
testb
sbb
pusha
sub
jecxz
or
push
push
stos
arpl
add
sub
add
mov
lahf
sarb
jns
sub
jmp
fsubs
and
fisttpll
rclb
imul
add
rol
sub
mov
pop
mov
sbb
daa
xchg
test
xor
cmpsl
divb
mov
mov
jno
fcmovnu
mov
out
lock
pop
add
push
addps
movsl
mov
je
xchg
ds
jge
pop
mov
and
inc
xor
andb
inc
pop
test
xchg
inc
and
arpl
outsl
hlt
mov
popl
js
aad
cmc
mov
js
cmp
jbe
mov
inc
push
notb
cmp
xchg
lods
addl
popa
and
arpl
jbe
popf
ljmp
jp
ficompl
or
cmp
push
das
sahf
clc
inc
or
inc
fisubrs
xor
sub
and
imul
push
insb
adc
xchg
in
test
enter
or
clc
adc
push
int
sbb
jge
loope
jmp
xchg
or
data16
lock
add
fimuls
and
lret
and
sar
jg
mov
pop
inc
pop
pusha
mov
cs
idivl
lods
enter
xchg
icebp
imul
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
