xor
xchg
push
out
lods
hlt
jg
mov
or
sub
movsl
pop
mov
fmull
or
jge
imul
sbb
mov
and
mov
mov
push
mov
outsl
pop
stc
call
pop
inc
cld
mov
ret
and
outsb
sub
jnp
mov
sub
dec
ds
rcrl
inc
push
pop
jb
arpl
sub
dec
cmpsl
shlb
cmp
cmp
push
das
sub
hlt
les
popf
cmovge
xor
xchg
fadds
rcl
pop
in
cmpsl
imulb
or
mov
into
inc
sub
adc
leave
mov
or
add
jg
pop
cmp
stos
leave
adc
pop
icebp
fwait
loope
inc
jle
aad
pop
loop
dec
mov
or
outsl
hlt
imul
pslld
stc
incb
es
xor
mov
push
add
lods
jmp
push
leave
mov
aad
in
hlt
fldenv
sub
mov
mov
inc
clc
mov
aaa
cmp
fwait
push
push
fisubrl
push
cmpb
out
cmp
jbe
mov
lret
sbbb
add
pop
stc
mov
and
ja
insl
push
push
cmp
ljmp
xor
and
cmp
adc
mov
scas
push
fcmove
popf
pop
inc
addr16
fisttps
sahf
sti
push
insb
cmp
push
pop
js
out
lock
mov
lds
or
imul
sbb
fisubrs
insl
jg
cltd
shlb
sbb
xor
pusha
ss
jle
bound
or
shll
stos
inc
ffreep
add
stc
insl
popf
adc
sbb
xchg
neg
leave
xchg
mov
pop
dec
mov
scas
inc
inc
dec
shrl
pop
and
ret
mov
addr16
sub
mov
ja
imul
call
xor
in
pop
xor
outsb
stos
push
es
inc
jno
out
das
pushf
fildl
lock
push
out
jbe
out
lock
adc
into
jle
pop
jmp
push
jns
out
rorl
xchg
inc
lret
test
mov
cltd
or
pop
fsubl
cmpsl
xchg
push
mov
mov
lock
mov
pop
cmp
xor
xor
pop
xor
sub
aaa
jmp
sub
mov
mov
xor
js
push
aaa
inc
das
repz
test
cmc
lret
popf
in
mov
ljmp
mov
movsb
mov
jmp
add
jmp
cs
cmp
loop
and
pop
dec
mov
scas
mov
mov
pusha
sti
outsb
push
fisubs
hlt
icebp
push
sub
jg
sbb
pop
xor
ds
push
lea
xchg
add
lock
push
stos
xchg
aaa
mov
ret
fistps
mov
dec
push
mov
and
push
and
adc
fcmove
pushf
sub
pop
jae
add
push
add
rcll
cli
add
add
fwait
test
cmp
stc
mov
loope
lret
aad
lock
ret
jbe
test
inc
inc
shlb
pop
lea
stos
mov
out
mov
pop
bound
push
sub
mov
pop
aam
fsubrp
sub
adc
cmp
fnsave
cwtl
gs
shll
in
outsl
fcomps
lods
xchg
pop
xor
mov
push
lods
adc
xchg
jb
lcall
xor
add
cmp
sbb
mov
mov
inc
pop
or
loop
jae
repz
adc
out
jecxz
jmp
out
add
xchg
sbb
adc
push
fisttpll
fstpt
mov
fldl
lods
lea
or
scas
aad
adc
scas
jb
es
insl
cmp
inc
popf
inc
mov
and
test
dec
pop
orb
pop
dec
outsl
push
push
mov
and
xor
mov
cld
not
rolb
arpl
and
aaa
stos
cmp
outsb
jbe
adc
jmp
pop
jnp
icebp
and
fldenv
adc
jnp
cmp
call
outsl
cmp
push
gs
xor
movsl
jbe
adc
sub
mov
test
scas
in
ljmp
loopne
outsb
jmp
ss
loopne
push
cmp
pop
pop
mov
or
adc
add
xchg
add
mov
dec
aaa
scas
mov
out
lock
xor
push
xlat
and
xchg
arpl
dec
test
xchg
rorb
les
test
mov
lcall
push
imul
outsl
jno
and
fsubr
push
addr16
mov
jg
cmpl
int3
push
push
dec
jo
imul
popf
aaa
divl
push
rorl
and
rcrb
cmp
aam
js
mov
fstps
dec
jmp
pushf
push
clc
movsb
idivl
lock
imul
stc
and
inc
js
jb
xor
std
xchg
adc
pop
xlat
adc
or
fnsave
jg
call
xabort
pop
push
pusha
lods
jns
and
test
bound
icebp
repnz
pop
and
sub
inc
sarb
xor
decl
iret
aam
test
sbb
jbe,pn
pusha
cwtl
add
in
mov
inc
sbb
je
push
jge
repz
sbb
cmp
aad
repz
push
shl
mov
bound
jo
or
mov
test
or
out
add
aas
xorl
dec
gs
fstps
cltd
arpl
enter
rcll
insl
jno
sbb
jge
lods
xchg
pusha
cmp
xchg
ret
pop
int
shrl
mov
stos
std
andl
aam
sbb
out
cmp
in
mov
in
sti
les
jb
repz
add
lds
jle
inc
aas
xor
jno
jne
insl
pop
fwait
mov
push
out
test
ljmp
repz
aaa
mov
pop
mov
mov
fwait
mov
imul
inc
test
testl
sbb
dec
dec
imull
shrb
movsl
push
insl
mov
dec
data16
adc
fstp
pop
xchg
and
cmp
xor
mov
jp
adc
pop
dec
repz
out
stos
cmpl
add
mov
and
xchg
sbb
divl
js
jmp
bound
data16
adc
dec
pusha
push
inc
test
lcall
adc
outsl
xchg
scas
loope
icebp
out
pop
jo
mov
mov
ja
mov
adc
cltd
sub
inc
mov
dec
shrl
xchg
xchg
in
lods
jno
sbb
test
xor
xor
ficomps
lods
mov
mov
sbb
mov
mov
cmpsl
mov
es
mov
pop
lcall
les
aad
dec
dec
dec
test
jno
ss
ds
ror
and
or
shl
mov
stc
mov
notb
fsubl
test
push
test
cli
mov
xchg
rcll
mov
fwait
daa
or
push
sub
inc
mov
lock
xchg
jecxz
imul
rcrb
cmp
cmpsl
clc
pop
cmp
pop
sti
ret
xchg
push
sbbl
jmp
push
inc
gs
jl
mov
xchg
movsl
mov
sbb
sub
mov
ljmp
mov
jo
ja
mov
pushl
mov
inc
inc
or
sbb
mov
test
lahf
gs
adc
push
xorl
shlb
add
mov
add
sti
push
sbb
add
popa
mov
imul
xchg
pop
ja
repnz
or
pop
ljmp
lods
cwtl
incb
push
jmp
inc
lea
adcb
push
dec
out
lock
popa
xchg
mov
jmp
mov
mov
jl
mov
fwait
cmc
fcmovbe
cmp
pslld
cmpl
xchg
movsb
ret
cmp
addr16
frstor
mov
push
push
mov
out
jmp
sbb
push
jle
sbb
dec
push
sub
insb
push
xchg
mov
fs
ss
sarl
cmpsb
sub
adc
sub
add
int
daa
adc
repnz
jle
in
stos
or
pop
and
cmp
lar
sbb
mov
jecxz
hlt
stos
mov
inc
ljmp
les
scas
and
data16
mov
rcrb
cwtl
rcr
int
popa
cmp
repnz
push
push
jle
hlt
or
aaa
outsb
mov
xor
icebp
xor
aad
adc
insb
or
mov
nop
mov
cmpsl
jmp
sbb
jge
pop
xor
adc
pushf
fsubrs
repz
imul
sbb
mov
leave
cmp
or
loopne
stos
out
in
test
pushf
mov
daa
xorl
iret
sub
ret
in
call
sbb
mov
addr16
rcrb
add
daa
sub
xor
imul
mov
fbstp
cwtl
call
fnstcw
xchg
fdiv
pushf
xor
jmp
movsl
push
xchg
repnz
jbe
imul
fldcw
insl
nop
fildll
sbb
xor
dec
xor
lea
jae
jge
inc
fld
daa
inc
cvttps2pi
les
mov
or
jo
enter
icebp
addb
arpl
out
into
push
cmp
xor
and
dec
hlt
push
inc
in
sbb
bound
icebp
ret
je
jne
in
or
lret
fcom
jl
pop
aas
lcall
aaa
push
push
pusha
pusha
and
add
xchg
dec
int
and
mov
dec
cmpsl
dec
mov
push
jge
push
std
cmpsl
sahf
inc
dec
xor
lea
fidivs
fnstsw
sub
out
cs
int3
xchg
pop
xchg
movsb
mov
dec
xor
adc
iret
cltd
and
ja
add
loopne
add
sbb
mov
cltd
xor
in
or
xchg
push
dec
inc
loopne
jbe
pusha
cmpb
stos
push
sbb
mov
or
insl
jb
add
or
imul
mov
in
stos
push
add
stc
inc
clc
sub
adc
cmp
lock
scas
jg
pop
push
stos
fdivrs
sub
add
and
adc
mov
popf
rol
js
call
cwtl
adc
cmp
je
sbbb
or
jae
lods
stos
push
imul
and
cmp
adc
scas
ss
pop
push
popf
jecxz
and
cwtl
xlat
pop
enter
mov
loopne
and
jl
cmp
sbb
loope
cmp
push
inc
test
sahf
outsb
mov
jmp
repz
mov
push
shrl
sub
jae
lock
fsubr
rorl
mov
call
cwtl
and
xchg
lea
testb
ja
pop
fisubrs
mov
aam
outsl
subl
xor
fsincos
jnp
arpl
repz
push
lret
pop
jmp
ds
pop
fdivrl
xor
mov
adc
popl
jmp
sti
test
mov
sbb
mov
and
shr
mov
test
in
pop
repnz
cs
lds
test
int3
sbb
sahf
ljmp
sub
cmp
inc
call
add
cmp
mov
out
repz
int
or
jno
and
arpl
cld
adc
stc
movsb
dec
pop
xchg
mov
and
lret
push
out
cmpsb
mov
fstps
dec
sbb
imul
adc
mov
pop
adc
xchg
testb
je
pop
pop
cmc
xor
adc
jmp
mov
adc
fldcw
pop
outsl
pop
loope
push
xchg
mov
test
rcll
in
dec
pop
nop
jno
inc
sti
mov
ret
jbe
mov
xchg
fisttpll
lock
inc
xchg
sub
and
inc
or
push
jmp
bound
les
fsub
push
ljmp
fcompl
mov
add
stos
shll
xor
lahf
test
xchg
les
xchg
lods
imul
repz
lods
into
sub
lods
sahf
pop
cmc
scas
xor
and
add
sub
push
jle
aam
mov
loop
jns
icebp
stos
pushl
out
pop
lahf
test
divl
movsb
fstps
stos
mov
inc
push
pop
cltd
shll
push
rorl
mov
mov
fs
dec
mov
test
cmp
mov
mov
fcmovnbe
int
popa
repnz
aam
add
adc
imul
aas
fldl
dec
cmp
test
stc
iret
ret
ds
cli
aas
sbb
or
push
outsl
test
pop
sti
call
test
mov
into
add
sub
mov
insl
imul
add
loop
adc
aaa
jp
pop
fstl
sub
add
data16
and
push
dec
sti
mov
int3
xlat
inc
push
xchg
xchg
rcr
mov
outsb
insb
jae
dec
push
jmp
ljmp
cmpsl
rolb
rcrl
cmp
sbb
and
jbe
repnz
add
pop
xchg
movsb
lods
fstps
jno
and
mov
mov
movsl
push
dec
mov
adc
cs
movsl
mov
insl
push
and
das
lea
ret
movsl
jo
les
push
roll
mov
out
ds
movsb
push
hlt
clc
xchg
adc
xlat
xorl
movsl
loopne
ljmp
js
test
bound
add
mov
outsb
jmp
repnz
mov
xor
das
push
hlt
bound
push
out
loopne
icebp
jae
mov
and
push
mov
sbb
test
mov
mov
std
je
adc
stc
mov
pop
add
ljmp
mov
adc
sub
or
mov
pop
nop
adc
sub
out
hlt
sahf
or
decl
push
adc
push
mov
xor
sub
pop
lea
fdivp
pop
push
sbb
je
call
aad
sbb
ret
ror
mov
call
ja
pop
stc
rcll
movsl
and
or
adc
and
out
fists
int
loop
xchg
outsl
and
pushf
xchg
adc
idivb
dec
pusha
and
inc
pop
nop
mov
dec
ror
std
aam
or
outsb
stos
sar
sbb
xchg
push
fisttpl
jp
xchg
js
or
mov
sbb
add
push
add
xor
mov
mov
aas
dec
negl
add
clc
inc
fstl
movsl
lret
push
xor
inc
xlat
sub
cli
aaa
xor
fs
ja
mov
xor
imul
and
mov
xchg
mov
outsl
mov
ret
or
xchg
cmp
mov
mov
imul
rol
addr16
mov
rclb
jo
mov
sub
xorl
imul
ret
push
mov
and
dec
inc
stos
rclb
cmp
gs
sbb
or
xchg
and
add
ret
lea
gs
in
jnp
int3
int3
mov
out
test
jp
inc
cmp
mov
mov
cmp
sbb
ds
icebp
mov
hlt
xchg
nop
les
das
jmp
andl
push
mov
jge
sbb
and
dec
xchg
sahf
sbb
push
ss
rorb
aas
stos
adcb
jg
bound
and
lock
add
scas
adc
jb
fistl
in
inc
std
push
add
and
stos
arpl
jg
add
stos
mov
mov
fwait
xchg
mov
arpl
out
xchg
jp
ret
xor
dec
mov
pop
les
cmpsl
xchg
mov
mov
push
sbb
push
call
rol
mov
outsl
xchg
cwtl
mov
xlat
add
imul
xchg
int3
jmp
jb
sbb
imul
pusha
addr16
sub
insb
cmp
xchg
sbb
shrl
sbb
add
lret
jnp
xor
je
cmpsb
inc
mov
push
jae
popa
mov
push
push
cmpsb
adc
push
pop
xchg
repz
or
loope
xor
lahf
xor
jo
testb
std
in
xor
out
js
jge
das
sbb
and
adc
pop
sbb
loop
lret
pop
je
xlat
and
pushf
in
fistpll
jno
lods
rol
das
adcb
xchg
jne
cmp
sub
jle
testl
dec
mov
loopne
fs
imul
test
push
les
add
aam
push
add
dec
push
maxps
push
and
ljmp
xchg
add
imul
int
pop
pop
arpl
movsl
cmp
xor
mov
and
pop
imul
jae
mov
jl
mov
cmp
jb
stos
mov
fstpl
mov
cld
dec
or
and
pushf
out
add
pop
mov
mov
dec
push
ficompl
aas
lods
jmp
xchg
lret
push
adc
mov
lock
xchg
dec
scas
stc
mov
dec
xchg
lock
mov
xor
xchg
aaa
dec
mov
cwtl
inc
or
dec
insb
dec
or
out
inc
xchg
aad
adc
cmp
leave
sarl
scas
inc
in
xor
push
mov
xchg
push
sbb
idivb
cld
jae
jmp
loop
andb
mov
aam
inc
xchg
sub
mov
mov
mov
bound
adc
out
xchg
xchg
cld
mov
add
cmp
mov
bound
ss
push
adc
cmp
xor
add
shrb
pushf
les
inc
nop
pop
into
or
test
push
daa
mov
mov
in
jb
mov
sbb
mov
hlt
xchg
mov
iret
cwtl
sbb
in
inc
adcb
sahf
pop
xor
outsb
cmpsb
stos
mov
push
sbb
mov
jmp
leave
mov
lcall
andb
in
lods
push
jae
fwait
ljmp
mov
lds
push
push
push
pushf
ja
or
fisubl
mov
xchg
pop
ret
shl
pop
mov
loop
cs
jmp
xlat
dec
mov
fmull
inc
addr16
mov
jg
jle
xor
and
lods
adc
and
icebp
push
fwait
xchg
call
mov
inc
mov
or
or
xchg
int
mov
sahf
movsl
addr16
and
jl
sub
pop
insb
push
xor
mov
push
pop
mov
jge
mov
dec
mov
sbb
and
mov
enter
pop
inc
mov
add
sub
icebp
adc
sbb
cs
in
std
adc
jge
mov
out
and
pushf
fwait
lret
and
inc
cs
stc
jb
sbb
jno
push
aaa
outsl
lock
inc
pop
mov
mov
xchg
mov
xchg
nop
pop
xor
idiv
sub
inc
jmp
clc
cmc
int3
insl
daa
or
ret
sub
pusha
pop
push
sbb
sbb
adc
pushw
cmp
adc
or
pop
adc
sahf
test
pop
mov
sbb
jle
popa
jl
test
std
mov
ret
xchg
test
mov
repnz
out
mov
push
dec
mov
sti
mov
and
mov
xchg
pushf
cld
dec
mov
aaa
inc
repz
loopne
sarl
push
jnp
xchg
pop
mov
loopne
loop
enter
jnp
icebp
pop
fsts
adc
dec
cmp
push
add
out
mov
push
mov
jmp
popa
cmp
lods
mov
xchg
inc
pop
les
push
divb
outsl
mov
lds
adc
or
loope
add
dec
repz
push
sub
sub
sbb
mov
add
mov
cmp
xor
test
push
fsub
cmp
jmp
std
les
stc
in
mov
aam
cmp
push
repnz
scas
jnp
sti
jmp
call
outsb
ja
jne
ret
adc
mov
and
clc
xchg
insl
cs
xchg
xchg
sbb
das
mov
push
jno
hlt
xor
clc
xchg
dec
push
leave
dec
icebp
fistl
inc
inc
out
sub
sarl
push
fs
mov
push
mov
insl
add
inc
mov
or
push
shrb
iret
xor
mov
push
cmp
int
stos
adc
orb
xor
pop
push
jbe
jnp
adc
imul
scas
sbb
push
nop
inc
cmp
arpl
xchg
mov
dec
iret
fimull
push
inc
shr
mov
cwtl
dec
insb
loopne
daa
add
inc
sub
lret
lds
mul
jno
aas
addr16
dec
loope
cmc
dec
lret
sub
xchg
jbe
jne
dec
fsubr
or
loope
jmp
shlb
idivb
lret
sub
or
cltd
shlb
push
aaa
jb
in
xchg
imul
jb
repnz
dec
stos
cmp
addr16
into
mov
xchg
mulb
sub
jne
and
fmull
gs
mov
jg
rorl
aas
stc
out
jnp
fiaddl
fisttpll
ss
jb
imul
xchg
movsl
popf
call
jge
cli
lock
pop
push
jo
imul
mov
pop
fstpt
pop
stc
cwtl
cwtl
out
xchg
pop
inc
int3
ret
xchg
dec
mov
push
aas
test
insb
jl
jmp
inc
test
ds
mov
mov
cmc
mov
inc
rcl
jae
aas
enter
rcrl
inc
xorb
jecxz
outsb
mov
xchg
addl
inc
imul
popf
lret
lock
out
jns
pop
icebp
fstl
lcall
sbb
cmp
hlt
out
mov
fildll
sbb
add
addl
push
adc
sbb
out
adc
imul
aam
imul
test
sbb
popa
mov
jb
add
inc
ljmp
adcl
push
inc
jle
out
jnp
mov
lcall
orl
mov
daa
mov
std
dec
fnstenv
cmp
mov
mov
shrl
dec
sub
or
adcb
mov
repnz
xlat
test
andb
cld
cs
iret
xchg
mov
inc
idivb
out
jno
sub
sti
pop
xor
cltd
inc
xor
xor
lock
lods
fistpl
xchg
cmpsb
jo
mov
cmpsl
push
popf
stos
hlt
push
cmp
jno
push
addl
ret
sub
fistpll
loope
cmc
rclb
sbb
push
shlb
loope
imulb
lret
out
lods
out
std
ret
dec
out
and
clc
addr16
js
outsb
push
outsb
in
pop
lods
or
mov
call
sbb
js
xor
jno
loopne
jnp
or
jmp
sub
push
adc
jne
inc
fcmovne
push
gs
pop
pop
stc
lea
mov
div
rcrb
sarl
arpl
fldl
mov
inc
mov
mov
mov
inc
arpl
sbb
push
cs
rol
and
outsb
repz
jo
xchg
out
les
adcb
mov
mov
fptan
fiaddl
in
xor
outsb
jl
test
aaa
jg
xor
fscale
shll
dec
stos
test
out
adc
and
cmpsl
dec
ja
mov
loop
sbb
addr16
bound
shll
insl
cmp
jg
jmp
lea
loopne
mov
ret
mov
lock
incl
leave
es
mov
mov
lea
adc
or
sti
lea
xchg
mov
dec
mov
push
lds
jne
xor
lods
sahf
es
push
lock
cmp
xchg
movsb
dec
aaa
sbbb
cmc
in
jns
xchg
or
rcr
pop
dec
pop
inc
loopne
mov
int
and
xor
or
fidivrl
cli
and
xchg
pop
rorb
aaa
inc
std
fyl2xp1
jecxz
fnstsw
aam
sub
jmp
inc
dec
jp
xor
pop
cmpsl
sbb
dec
mov
jmp
jle
cmc
xchg
and
inc
jmp
mov
roll
cltd
pop
std
out
dec
xor
adc
mov
mov
jge
iret
movsl
sbb
sub
push
inc
gs
push
xchg
in
jno
xchg
or
movsl
ljmp
in
mov
loopne
out
daa
mov
jmp
sbb
lods
shl
icebp
cmpsl
lock
cmp
push
adc
das
sahf
jo
lods
test
or
push
fsubrs
stos
cmp
inc
jo
sarb
push
lods
add
clc
out
fwait
inc
adc
sbb
fsubs
out
push
cwtl
cmc
inc
push
gs
pop
ja
jl
mov
cmp
ss
mov
dec
sub
pushf
iret
jecxz
cmc
insl
adc
jne
fwait
sbb
out
jecxz
mov
pop
fsub
in
jge
push
inc
and
jno
mov
sub
pusha
into
sub
pop
push
bnd
cmpsb
add
or
mov
ljmp
shrb
shlb
sub
pusha
gs
xor
push
fs
inc
xchg
adc
call
je
pusha
cli
jl
call
push
icebp
jecxz
fwait
jae
aad
jae
bound
aas
xor
lds
fstl
jne
test
out
fisttpl
dec
fldenv
fnsave
mov
sbb
aam
mov
add
mov
sbb
mov
dec
sbb
scas
cs
mov
inc
push
jp
inc
xchg
xor
fists
push
dec
bound
and
shlb
mov
imul
mov
xor
test
sub
int3
sub
inc
add
repz
dec
mov
sub
ss
mov
lcall
test
cmpsl
or
repnz
sbb
sbb
adc
push
pop
clc
xor
cmpsl
lods
ret
cmp
and
and
pop
sub
mov
out
mov
jge
ror
jbe
ret
ret
cltd
dec
add
cmp
in
test
add
data16
ljmp
lcall
or
xchg
mov
mov
cmp
mov
hlt
jnp
test
xchg
ret
xchg
mov
and
lahf
mov
pop
inc
aaa
call
in
mov
xchg
xor
adc
in
adc
sub
sahf
mov
sbb
dec
lcall
push
jbe
push
cmpl
out
mov
fildll
dec
sbb
cmp
mov
enter
leave
or
insb
mov
cwtl
jge
mov
adc
mov
mov
dec
ss
enter
inc
roll
pop
dec
and
ror
push
sbb
add
dec
xor
dec
add
jbe
ret
mov
xor
sub
adc
enter
xlat
push
gs
divb
out
push
mov
sbb
push
arpl
call
adc
lret
dec
sbb
add
sbb
rcll
jne
lea
mov
in
scas
adc
add
jo
loop
je
sti
xchg
jbe
xor
icebp
mov
hlt
or
mov
ret
cld
sub
daa
bound
mov
cmp
add
dec
cmp
xor
out
lret
ret
cwtl
or
cwtl
cli
mov
mov
sti
inc
xchg
ljmp
xchg
cmpsl
cld
lea
mov
sub
cmp
push
notl
mov
andl
insb
push
ljmp
aas
ret
rorb
inc
jecxz
pop
aas
pop
and
jo
mov
adc
xchg
icebp
jbe
mov
pop
pushf
ljmp
push
inc
rolb
lods
push
aad
lock
ljmp
out
clc
add
push
jae,pn
inc
jnp
xchg
mov
out
adc
mov
rcrl
pop
mov
rorb
mov
test
xorl
sbb
insb
cmp
clc
dec
jnp
outsl
repz
pop
das
std
mov
mov
fsts
xchg
mov
inc
dec
dec
jno
dec
mov
daa
ja
or
hlt
js
dec
cmpl
cltd
lret
pop
scas
sub
scas
fldt
out
loopne
xchg
xor
insl
shll
push
push
adc
cmp
aam
rcll
mov
notb
sub
repnz
push
push
imul
pop
xchg
xchg
mov
cltd
push
cli
jg
inc
rcr
jmp
adc
sub
mov
enter
adc
clc
cli
push
jo
jae
std
into
loop
mov
cltd
sub
sbb
imul
pop
push
xor
incb
in
lock
fldt
xor
pop
out
lds
cld
aaa
cltd
adc
add
popaw
mov
pop
jle
repnz
dec
repnz
push
push
jl
stos
jno
pop
dec
mov
arpl
outsb
add
pop
sbb
dec
xchg
insl
pop
or
pusha
sarl
mov
loop
nop
test
pop
inc
mov
or
sbb
sbb
jno
pcmpgtw
mov
andnps
test
fmuls
inc
push
push
cs
nop
push
or
ss
call
popa
shl
mov
push
xchg
dec
cli
pop
jo
dec
adc
xor
jns
add
adc
jmp
inc
push
pop
imul
adc
pop
fnstcw
loopne
mov
mov
jl
iret
jecxz
fwait
dec
ds
loop
cs
sbb
sub
dec
pushf
lods
pushf
mov
mov
and
and
fwait
leave
ss
out
out
inc
out
or
sbb
push
fnstcw
loope
push
in
mov
bound
dec
gs
sub
int3
adc
inc
sub
aas
jo
fisttpll
mov
imul
negl
ss
push
xor
stc
cmp
push
dec
xchg
repz
push
jp
nop
leave
jne
pop
lcall
sti
test
dec
push
nopl
sbb
pop
leave
popa
sbb
pop
idivl
mov
push
outsb
pusha
cmpsl
mov
mov
les
lret
and
mov
out
xchg
xlat
aaa
mov
loope
outsl
adc
and
or
lret
in
insb
stc
xchg
jno
add
dec
fs
fs
xchg
je
outsb
in
out
notb
jp
movsb
cli
jae
aam
loopne
loop
mov
sbb
enter
add
add
mov
xor
adc
setno
xchg
stc
mov
inc
inc
test
xchg
loope
add
pop
sub
mov
xchg
xchg
mov
push
jg
fistpl
loop
int3
cmovp
repnz
insb
lret
test
pop
call
sub
jnp
jno
xor
mov
cmp
sbb
lcall
inc
rolb
aad
pop
mov
inc
movlps
mov
lods
sti
inc
adc
jmp
mov
les
testb
cli
sub
and
ja
cli
cltd
out
ret
pop
popa
or
mov
jecxz
dec
sbb
arpl
stos
fwait
xor
loope
lret
pushf
jno
mov
out
hlt
and
ljmp
cmp
and
and
out
add
dec
popa
adc
das
ds
mov
mov
cmp
mov
xchg
xor
loop
fwait
lahf
das
cmpsb
pop
pop
loope
jb
xchg
pop
mov
mov
mov
pop
sbb
loope
ret
pop
cmp
mov
cs
sbb
add
lds
jo
in
cwtl
lods
outsl
add
inc
in
fisubrl
xchg
pop
xchg
mov
jmp
cmpsl
inc
pop
test
sbb
dec
insb
clc
je
jae
lcall
or
cmpsb
movsb
and
movl
pusha
aaa
movsb
fwait
xchg
imul
sub
cmp
and
add
cwtl
pop
xchg
sbb
ja
aam
pop
pop
dec
pop
ja
ret
icebp
iret
fisttpl
fwait
repnz
cmp
popa
stos
push
orl
enter
ficompl
xor
jge
push
xor
fwait
ret
les
mov
dec
and
lods
jns
jle
sbb
jp
and
test
ja
mov
movb
fstp
or
pop
iret
dec
and
in
movsb
adcl
mov
mov
inc
ror
test
lahf
cmp
stos
xchg
xchg
dec
xchg
push
or
sub
cwtl
and
and
sbb
mov
popf
mov
adc
aaa
mov
mov
jp
xchg
mov
cmpb
xor
movsl
mov
es
jo
mov
xor
push
lret
mov
inc
out
and
test
adc
push
mov
push
imul
test
in
jmp
ljmp
sahf
inc
and
stc
into
xlat
cltd
push
push
jp
popf
hlt
jecxz
gs
repnz
out
mov
fistps
popf
xor
frstor
aam
fwait
ret
gs
mov
jl
mov
repnz
sahf
in
jmp
push
ret
jnp
les
fstps
dec
stos
push
or
push
les
xchg
push
les
jae
jl
push
pop
push
leave
adc
hlt
or
cmp
push
aad
shrb
xor
in
xor
adc
sub
mov
jmp
punpckhbw
fbstp
mov
test
xor
and
dec
pushf
and
stos
jle
dec
pusha
out
sub
test
pop
xor
mov
push
pop
fs
pop
or
gs
mov
mov
xor
push
sbb
mov
or
and
xor
scas
fwait
int3
push
sahf
xor
pop
cmp
enter
in
xchg
mov
fwait
stc
mov
sub
mov
sub
data16
scas
fcmovu
sahf
call
xchg
imul
xchg
push
sub
add
int
cmp
inc
lea
mov
test
jo
add
dec
aam
ss
icebp
negl
mov
decb
sbb
idivb
hlt
xchg
sbb
adc
test
rcl
jns
int3
add
add
xchg
cmp
pop
mov
dec
pop
jmp
dec
loope
aam
pop
mov
jecxz
push
jle
shrl
and
mov
dec
clc
or
sub
repnz
cmpsb
mov
cmp
inc
aad
inc
sub
dec
push
imul
scas
cwtl
fidivrl
xchg
mov
push
cld
and
pusha
add
jp
dec
fisubl
mov
repnz
push
daa
scas
cld
adc
jo
dec
mov
insb
out
cmpsb
mov
icebp
cld
ret
test
test
cmpsb
sub
repz
mov
int3
cmp
pcmpeqd
and
xchg
mov
pop
add
sub
pop
sti
inc
mov
test
sbb
popa
hlt
and
es
into
adc
bound
sub
in
push
or
sbb
es
lds
cmpl
pop
jne
call
stc
lea
mov
gs
xor
xchg
jno
imull
dec
loope
fwait
xchg
stc
pop
cmp
lret
xchg
adc
imul
mov
mov
jecxz
xchg
jmp
push
mov
sub
inc
xchg
inc
sahf
js
es
lahf
mov
inc
mov
mov
ffree
loope
dec
ficomps
enter
adc
lods
dec
scas
jae
ds
mov
add
or
and
sbb
xchg
inc
mov
cmp
cld
xchg
mov
push
xor
xchg
jno
xor
lods
js
inc
data16
jl
ret
cmp
sbb
pusha
and
loopne
sahf
popa
mov
dec
ret
jle
jp
aas
lahf
mov
cli
cltd
rcl
bound
imul
jne
movsl
imul
adc
pop
pop
push
leave
push
sub
cmp
ret
nop
das
mov
jo
push
and
add
popf
push
pop
adc
fildll
daa
mov
push
pop
sahf
pop
add
icebp
test
push
dec
cltd
test
arpl
fwait
mov
and
mov
movsb
jo
dec
std
inc
sub
adc
ja
xchg
fmuls
fsubr
pop
or
xor
cmp
adc
xor
pusha
mov
cld
mov
fimuls
lret
xor
rolb
filds
inc
imul
enter
inc
mov
cmpsb
xchg
mov
lret
adc
xchg
mov
fstl
ret
fs
movsb
movsl
loope
scas
mov
into
and
lods
adc
jno
jmp
scas
and
stc
int3
or
xor
inc
ja
orb
aam
mov
sub
jmp
or
and
mov
jne
movsb
outsb
and
xchg
mov
jmp
sub
jb
mov
jle
xor
rorb
adc
jb
adc
repz
hlt
popf
fs
cmp
pop
dec
mov
int3
adc
sub
movsl
pop
not
fwait
mov
jbe
cmc
cltd
pusha
mull
popa
and
shrb
shlb
lods
jecxz
dec
jg
shl
pop
jge
test
mov
iret
mov
mov
je
call
arpl
sbb
lcall
push
jno
aad
sub
dec
stos
ficoml
sbbb
lds
or
pop
dec
fstps
mov
mov
and
int
dec
inc
dec
scas
in
int
xchg
jne
das
xchg
fnstsw
sbb
push
cmp
jecxz
sbb
popa
jp
inc
sahf
dec
mov
in
sbb
insb
sub
cmpsl
or
or
cmp
and
fcom
xchg
push
and
pop
sbb
es
add
into
mov
and
jl
sbb
push
popf
inc
nop
push
pop
clc
xorb
std
in
arpl
das
dec
loope
push
inc
test
pop
lret
jmp
add
test
sbb
xchg
das
xorb
clc
mov
inc
inc
push
sbb
out
push
outsb
add
jne
data16
sbb
fistps
daa
lret
shlb
and
sahf
or
gs
and
push
sbb
xor
push
adc
in
push
xchg
enter
cli
aam
imul
and
pop
cld
mov
push
dec
pop
add
add
dec
cmp
in
sbbb
ucomiss
mov
fwait
or
sbb
sbb
loope
ja
movsb
pusha
pop
pop
je
inc
subl
mov
jmp
dec
out
fs
stc
or
mov
push
insl
sbb
in
jle
mov
lea
sub
mov
mov
cld
arpl
fldl
jmp
notb
cmc
dec
test
adc
add
daa
ret
mov
loop
xorl
mov
nop
outsl
pop
es
mov
xor
movsb
inc
mov
mov
idiv
push
loopne
xor
imul
outsb
sbb
lret
adc
dec
sub
mov
popa
ficoms
insl
out
ss
dec
and
cmp
inc
test
fcompl
iret
rorl
repnz
mov
xor
cmpb
repz
lcall
mov
scas
outsb
outsl
bound
xor
push
push
pushl
fstl
jns
cltd
mov
fsub
or
lret
mov
xchg
movsb
popa
hlt
sbb
inc
sub
in
mov
mov
rolb
mov
aad
scas
or
mov
pusha
repz
or
push
pop
xchg
pop
lret
push
loop
add
dec
lcall
push
testl
dec
push
adc
jo
jns
cmpsb
sbb
std
push
jmp
xor
arpl
sub
ret
adc
jge
cmc
inc
push
cmp
stos
std
pop
pusha
mov
pop
lea
jp
xor
insl
fistps
push
dec
cmp
fmul
xchg
cwtl
daa
and
adc
fsubl
mov
lods
xor
xchg
adc
adc
cli
adc
fsubr
lds
iret
add
xchg
dec
push
ficompl
add
and
push
adc
rorb
std
pop
mov
sbb
sbb
xchg
rorl
fisubl
lock
mov
mov
ja
loop
and
sbbl
push
repnz
fwait
outsl
orb
mov
cs
sbb
xlat
aam
fwait
jb
into
insb
sub
inc
js
mov
dec
push
mov
lahf
xchg
ret
imul
in
pop
pop
mov
sub
push
and
ljmp
inc
pop
lret
fiaddl
fbstp
pop
cmp
jns
push
pop
lods
sub
aas
fnsave
aaa
leave
outsl
stc
in
add
addr16
cmp
out
in
jnp
mov
xor
and
in
push
push
mov
call
nop
or
in
jge
int3
xchg
add
mov
add
push
xor
mov
lods
adc
dec
adc
repnz
add
and
fnstenv
je
jb
or
movsb
sbb
inc
xchg
inc
dec
faddl
push
roll
in
sub
dec
hlt
ret
mov
scas
hlt
pop
sbb
sbb
jg,pn
xchg
cmpsl
mov
int3
popa
stc
cmp
pop
mov
sbb
lea
sub
popf
jo
test
sti
add
push
or
inc
in
out
repnz
mov
mov
pop
add
pop
ret
pop
xchg
mov
add
and
push
data16
sub
add
xor
lds
jg
mov
loope
dec
and
pop
pop
push
and
xchg
fdivrl
call
in
and
adc
pop
mov
dec
aad
fidivrl
or
push
nop
jnp
nop
addb
and
hlt
mov
adc
mov
dec
jle
dec
das
xlat
das
sbb
lea
xor
lds
mov
scas
mov
std
lcall
push
mov
cmp
sbbl
push
arpl
or
and
add
pop
pop
pop
mov
das
imul
jo
inc
aas
or
sub
push
jmp
pop
aaa
ja
divl
push
dec
pop
push
mov
ss
add
sbb
lahf
xchg
andb
mov
mov
pop
popf
pop
push
pop
xchg
loopne
xchg
xor
push
es
adc
fwait
lods
mov
fstpl
sub
sahf
sbb
lods
lock
aad
ljmp
aam
pop
dec
jg
or
fadd
push
mov
sbb
hlt
mov
test
sub
mov
pusha
inc
mov
stc
testb
lret
xor
add
sbb
adc
lahf
inc
or
xchg
cmpb
dec
jo
and
jo
or
or
mov
xor
and
mov
and
mov
ds
mov
ljmp
xor
sbb
inc
adc
mov
das
int
dec
fstpt
mov
pop
ja
repnz
sub
sti
fcmove
daa
sub
dec
stos
lods
jno
ja
cmc
inc
test
sbb
jo
jl
push
popf
movsl
push
adc
or
hlt
lea
sbb
fidivrs
jbe
in
mov
cmp
and
or
inc
mov
sub
and
arpl
out
stos
inc
rolb
jbe
outsl
cld
leave
fildl
jge
add
jbe
xchg
inc
push
sbb
mov
push
push
cmp
movsl
sbb
pop
orl
xchg
cmpsb
mov
add
add
loop
adc
cld
cs
mov
pop
pop
int
add
lods
loope
fistps
lcall
lods
pop
jne
aam
ds
popa
xor
jno
xchg
stc
loope
xor
cmp
popa
lcall
xor
loop
cli
fildl
std
lea
xor
add
out
dec
lock
gs
fists
dec
repz
add
rcrb
pop
lea
inc
or
sbb
add
xchg
cmp
rorl
cmpsl
fildll
mov
mov
mov
scas
and
cmpsb
dec
mov
loop
stos
mov
in
jle
cmpsb
mov
push
jmp
push
mov
cmp
push
iret
int3
sbb
push
mov
in
mov
dec
and
adcl
push
add
popa
jl
jb
insl
lcall
cmp
push
and
addl
xor
inc
in
pop
popa
sbb
dec
je
cwtl
and
lcall
shrb
mov
dec
fwait
stos
in
bswap
xor
push
adc
stc
jae
sbb
mov
mov
arpl
jg
fcom
lods
or
out
outsl
aas
adc
adc
cmpsl
adc
or
sub
mov
outsb
out
push
rolb
jae
shl
lahf
js
sbb
in
loope
push
cmp
cmp
leave
adc
dec
cmc
dec
nop
mov
mov
jg
cmp
test
mov
test
mov
xchg
icebp
inc
xor
jns
mov
cli
push
cmp
push
xor
dec
movl
inc
call
or
std
pop
roll
popa
or
dec
test
xchg
dec
add
mov
xor
and
mov
xchg
in
call
xlat
jb
cmp
mov
lds
jle
lods
dec
fmul
push
jl
xchg
ficoml
push
dec
push
int
sbb
sti
or
js
iret
push
repz
sub
xchg
pop
subb
sub
adc
xor
aad
jmp
sub
mov
testl
sub
cmp
push
dec
inc
mov
addr16
js
iret
mov
les
pop
mov
jo
add
sub
sbbb
clc
repnz
pop
popf
pop
dec
xor
orb
push
or
xchg
jl
sub
push
insl
out
and
dec
adc
pushf
cmp
popf
ds
div
out
dec
mov
es
imul
fdivrs
das
jno
cmp
dec
xor
arpl
cmp
aas
notl
jbe
int3
fxrstor
jne
xor
lock
negl
fistpll
dec
movsb
push
mov
lea
aam
xchg
outsb
jp
xor
pop
stos
fwait
push
insb
repnz
mov
cltd
fwait
or
test
call
in
lock
xor
in
inc
mov
sub
sbb
leave
mov
shll
loop
xchg
ret
cmp
negl
add
inc
ror
loop
mov
xor
pop
jp
lods
pop
lock
in
mov
sub
adc
xor
out
fadds
dec
in
push
xor
mov
mov
and
sbb
add
inc
mov
into
pop
sub
xchg
pop
inc
lods
cmp
dec
out
jg
fistpll
xor
or
pop
cwtl
jl
cmpsl
ficoms
pushf
jb
inc
filds
mov
hlt
adc
cli
fisubrl
mov
shlb
push
xor
jmp
xchg
xchg
xor
test
push
xor
mov
xchg
jae
xchg
inc
insb
insl
stos
jge
lahf
xor
iret
hlt
and
arpl
adc
hlt
sbb
scas
xor
push
sbb
in
cmp
sbb
xchg
push
lcall
clc
lcall
mov
cmp
movsb
ja
cmp
testl
subb
shl
cmpsl
enter
cmp
or
out
je
push
cmp
dec
inc
cmc
push
movsl
loopne
or
push
jecxz
pop
pop
enter
or
xlat
xorb
adc
testb
dec
in
cmp
lea
push
loope
shrb
push
popa
roll
inc
jp
and
cmp
lock
leave
xor
sub
mov
aam
and
lcall
fwait
xchg
loop
les
inc
inc
out
in
rcll
push
jne
jnp
sub
pop
cs
push
divl
push
pop
cmp
gs
push
lods
mov
jl
popa
lret
scas
scas
mov
xor
in
sti
sti
orl
jecxz
sbb
push
ret
mov
lods
movsb
push
imul
lret
mov
inc
push
mov
mov
test
and
and
cmp
jl
movsb
loop
sub
addb
sarl
mov
push
xor
lret
andb
notb
fcmovnu
cli
mov
pushf
xchg
js
or
fucomp
aaa
xchg
jno
mov
pop
jle
test
jbe
adc
iret
dec
xor
jge
test
daa
lock
add
cli
adc
cmpsb
mov
cmp
xchg
fwait
xchg
sbb
mov
cwtl
subb
mov
push
or
xor
pop
mov
cs
mov
push
push
mov
jb
pushf
sbb
xchg
lret
cmpsl
fucomip
push
inc
jnp
and
adc
test
shlb
mov
and
bound
sub
arpl
test
sbb
pop
daa
mov
lds
push
xchg
testb
sub
out
out
stos
mov
cmpsl
jb
imul
xlat
adc
push
pop
pop
in
dec
adc
mov
mov
xchg
lock
and
sbb
mov
inc
pop
xchg
jb
aas
pop
cld
out
push
pusha
mov
dec
xchg
mov
push
movsb
pop
pop
dec
aaa
add
ss
sub
and
in
pop
subl
add
hlt
push
jle
xchg
jge
mov
enter
push
jno
lcall
test
call
test
xchg
inc
push
push
pop
incl
nop
push
fstps
fucom
push
dec
push
mov
fisubs
and
xor
lods
movsl
mov
out
push
pop
addr16
rcrb
add
cltd
test
xchg
jmp
sub
push
inc
push
std
dec
xchg
rclb
loop
aad
inc
pop
hlt
lods
in
jg
mov
mov
cmpb
xchg
inc
jo
fisubl
stos
cmc
cs
pop
in
cs
pop
xorl
leave
cwtl
lods
xchg
shrb
insb
mov
repnz
push
iret
movsb
jae
cmp
or
scas
cmp
jl
xor
cmp
mov
xchg
jp
cmp
or
mov
fwait
or
cmp
push
into
push
aas
lock
add
mov
movsb
jo
stos
lds
test
cmpsb
sahf
repnz
fldln2
add
jns
xor
mov
in
xchg
aad
lock
sbbl
roll
lcall
idivb
fildl
into
fcomp
ljmp
out
sub
sub
fwait
add
test
xchg
adc
loope
lea
sbb
pop
mov
jecxz
mov
dec
mov
xchg
sbb
push
push
adc
jg
cmc
xor
mov
xchg
pop
jbe
sbb
mov
lret
mov
movsb
dec
mov
mulb
loope
pop
scas
dec
dec
out
aaa
lods
xchg
fs
and
fidivrs
adc
fidivrl
push
add
cld
cmp
fcoms
cld
mov
sbb
add
gs
and
shlb
xchg
pop
pop
jg
in
aaa
lea
paddd
xor
in
push
xor
inc
push
pusha
adc
mov
out
jno
std
inc
stos
enter
push
pop
outsl
sub
ds
xor
jno
xchg
jg
lds
cmpsb
test
sbb
inc
jp
add
into
xchg
pushf
xor
clc
xor
mov
cmp
or
or
setg
xchg
mov
mov
cmp
nop
dec
andb
mov
lock
mov
adc
sarb
mov
add
jg
test
adc
shll
std
xor
clc
bound
mov
or
je
mov
inc
adc
mov
sub
mov
cld
popa
rorl
int3
pop
andb
push
int
push
xchg
mov
fiaddl
lcall
xor
or
jl
cltd
out
sbb
stos
je
in
push
fwait
pop
pop
shr
jne
call
fldl
ffreep
jmp
pop
daa
pop
mov
testl
xchg
and
leave
adc
or
cltd
loope
jbe
jb
lods
es
add
push
fisttpll
mov
in
sub
bound
sbb
mov
hlt
fidivrs
cmpsl
jle
fs
mov
add
imul
test
jg
mov
sbb
push
mov
icebp
xchg
mov
in
jecxz
xchg
mov
cltd
mov
mov
frstor
fldenv
popf
and
push
xchg
cli
sbb
sahf
dec
push
cmp
lods
mov
push
xchg
ret
popf
cld
mov
sub
popa
outsb
fcomp
inc
es
adc
pop
daa
fcompl
outsl
cmp
rol
outsb
or
mov
pop
outsb
outsb
pop
xor
xchg
pop
fmuls
jb
mov
fidivrl
add
sti
pop
imul
cmp
test
mov
pop
sbb
nop
adc
arpl
leave
jecxz
arpl
and
sti
notl
xchg
scas
lret
enter
int3
outsb
in
cltd
arpl
and
xor
sti
es
dec
sub
push
daa
mov
mov
dec
dec
je
cmp
pop
push
sti
push
jbe
mov
pop
push
sub
pop
in
sbb
adc
mov
outsb
cld
rolb
cmpsl
push
mov
push
cmp
mov
std
jge
dec
adcl
lods
mov
jne
div
mov
or
dec
ret
push
clc
popa
jbe
lds
std
sbb
add
or
push
jno
nop
ror
and
pop
sbb
loopne
fisubl
lcall
call
sub
sar
cmp
add
out
fidivs
mov
dec
dec
push
call
dec
mov
fsubr
mov
xor
pop
adc
bound
daa
push
adc
int3
cwtl
adc
pop
ficompl
mov
push
mov
jmp
xchg
data16
adc
ja
loop
outsl
lods
xor
out
mov
add
push
dec
adc
sbb
adc
scas
jecxz
loopne
add
fs
jg
into
or
sbb
inc
es
orl
jb
jae
mov
mov
pop
xor
push
int
in
clc
imul
push
pop
scas
lds
lahf
mov
jmp
out
pop
dec
mov
inc
jbe
std
call
adc
roll
inc
fs
or
cli
jbe
pop
bound
addr16
scas
or
sub
stos
mov
mov
pop
das
or
shlb
pop
sbb
in
add
subl
in
mov
out
rol
jp
dec
scas
test
push
je
fsts
push
loopne
jmp
mov
dec
fcmovb
adc
mov
je
or
paddsb
enter
cmp
pop
mov
mov
in
arpl
mov
jb
mov
xchg
je
scas
push
jle
into
les
or
in
push
fs
push
push
cmp
sub
iret
cmc
jbe
sar
jle
mov
fstpt
test
xchg
or
jb
sbb
jnp
jb,pt
pusha
and
cli
leave
add
ret
imul
rcll
fisubrl
jp
mov
shr
repz
jne
dec
pop
or
pop
sbb
jg
popa
repnz
mov
sti
fistpl
cltd
inc
lret
daa
shlb
out
mov
loopne
insl
sub
nop
mov
test
imull
cmpsl
cwtl
xor
dec
stc
arpl
and
jecxz
punpckhwd
icebp
movsl
mov
cmpsl
imul
push
movsl
int
cmp
fistpll
sub
roll
repnz
call
jl
jg
and
mov
das
iret
mov
xchg
mov
sbb
add
lret
sbb
sub
jne
rorb
in
fwait
jo
scas
dec
or
inc
stc
ss
je
mov
push
fisubrl
push
mov
add
mov
mov
test
pop
inc
fiadds
sbb
gs
insl
loope
mov
xchg
dec
aas
aas
pushf
out
add
clc
out
xor
je
pop
pop
xchg
pop
pop
add
xchg
call
mov
cmp
push
cli
mov
inc
out
outsb
jmp
mov
test
sbb
ljmp
fimull
clc
mov
lea
xor
jo
sbb
sbb
xchg
lret
jbe,pt
sub
mov
mov
cmp
add
mov
xor
adc
loopne
out
inc
mul
pushf
shrl
sub
xlat
lods
movsl
mov
inc
inc
push
ret
xchg
adc
loop
sahf
xchg
push
mov
add
pop
push
rcll
sahf
jae
lods
punpcklwd
or
jb
lcall
push
cwtl
mov
aad
and
sub
pop
in
sub
mov
cmp
enter
mov
mov
fsubrs
mov
xor
lock
fsubl
xlat
fidivl
dec
and
xchg
cwtl
and
mov
cld
pop
cli
movsb
push
and
lahf
or
xchg
sub
fwait
push
xor
dec
sbb
dec
xchg
rorb
mov
mov
xor
dec
add
or
sbb
loop
mov
int3
cmp
andb
fisttpl
xor
roll
pop
mov
insl
out
call
push
and
adc
sub
xorl
sahf
movsl
and
dec
ret
ficomps
insl
adc
pop
clc
push
mulb
and
imul
push
push
mov
sub
adc
call
testb
aas
xor
ss
pop
jmp
in
dec
mov
clc
and
icebp
shll
add
cmp
push
icebp
mov
fs
pop
sbb
push
adc
mov
cltd
sub
pop
mov
cmp
cli
inc
aad
sti
idivb
jnp
xchg
into
test
or
stos
lret
pushl
inc
jmp
or
stos
lret
std
popa
dec
leave
idiv
pop
pop
or
sub
push
push
pop
add
xchg
stc
mov
add
jno
fdivr
iret
lods
out
pushl
les
or
or
lock
pop
xor
cmp
ss
push
lods
loopne
stc
add
das
adc
push
dec
stos
pop
popf
jnp
adc
in
xchg
sub
or
pop
outsb
fs
or
jnp
mov
or
jne
adc
cmp
inc
scas
xchg
inc
lods
test
stc
call
or
mov
jns
inc
sub
pop
adc
inc
cltd
insl
pop
adc
out
das
insl
jne
and
or
push
pop
mov
sub
shll
gs
jecxz
mov
push
aaa
mov
in
mov
pop
inc
xchg
ja
int
pop
lods
mov
pop
mov
scas
xchg
inc
lds
xchg
mov
push
jg
mov
lahf
push
stc
add
lods
xor
push
das
lret
rcr
leave
into
lock
sub
and
ss
ss
xchg
pop
lahf
xorl
sub
or
pop
mov
xor
test
cmc
popf
lcall
repnz
mov
test
popf
mov
sub
mov
popa
lock
adc
loop
sti
pop
lea
sti
jns
inc
bound
dec
sub
call
hlt
or
ss
mov
scas
mov
dec
addr16
mov
and
sbb
test
add
mov
lcall
inc
sub
sahf
sbb
jns
mov
popa
popf
fst
test
add
inc
cmc
mov
popa
lds
mov
fisubs
mov
ret
mov
int3
pop
fwait
test
test
loope
rolb
hlt
std
repnz
mov
popf
cmovnp
shrl
push
imul
xchg
xchg
lods
in
mov
out
dec
mov
int3
dec
push
mov
sahf
xchg
cmp
mov
in
mov
stc
jge
mov
push
and
mov
xor
mov
push
xchg
ds
dec
ret
cmp
clc
les
out
negl
scas
pop
cmp
imull
leave
pop
xchg
popf
sti
cmp
fdivs
pop
cmp
bound
popf
shll
mov
sub
push
mov
sub
xchg
xor
push
cs
pop
les
adc
test
inc
jl
ds
sub
lea
pop
dec
push
pop
sbb
scas
cmpsl
cmc
and
rcrb
jne
jmp
pop
popf
or
push
xchg
push
pushf
add
inc
cmp
fildll
xor
out
shlb
cmp
push
cmp
hlt
fwait
imul
mov
xchg
jb
pop
or
mov
jns
leave
ljmp
inc
shrb
jne
pop
scas
adc
enter
adc
xchg
pop
popf
cld
scas
es
xor
jl
sub
fcoms
dec
sbb
mov
inc
sub
sti
adc
cmp
div
mov
movsl
mov
mov
hlt
mov
mov
cli
call
loop
mov
popa
or
xchg
mov
pop
add
aaa
aad
test
jmp
ret
pop
popl
lds
mov
adc
mov
jne
adc
ret
inc
xchg
and
adc
and
push
pop
aad
push
xchg
cmc
and
and
adc
out
ficoml
push
push
xor
fstps
rcrb
aad
andb
pop
jae
dec
jp
or
push
rclb
push
filds
jb
fisubrl
pop
into
sbb
push
divb
bound
mov
aad
scas
pusha
jne
add
cmp
scas
dec
or
xchg
test
push
mov
ja
mov
mov
add
mov
cmp
add
cmp
test
sbb
aas
xchg
jl
arpl
jg
pop
inc
mov
mov
enter
mov
pop
mov
js
add
insb
add
mov
test
add
inc
clc
push
hlt
dec
jg
xchg
adc
fldz
jo
outsb
xchg
cwtl
shll
sahf
dec
push
sub
jno
and
sub
popf
out
cmp
cli
popa
and
xor
inc
xor
out
inc
jmp
xchg
xchg
stc
pop
out
add
jle
decl
int
scas
jl
out
xchg
in
outsb
pop
add
jb
mov
outsb
icebp
jo
loopne
pop
mov
and
adc
loope
mov
inc
nop
pop
mov
mov
mov
pop
xchg
fs
mov
out
rorl
enter
mov
or
jbe
cld
rolb
jb
mul
add
test
mov
pusha
pop
pop
mov
push
mov
or
je
sub
and
lods
push
mov
xor
add
add
sti
xlat
jne
mov
sub
or
test
mov
repz
xor
sbb
fadds
std
icebp
pop
aaa
pop
dec
xor
cmpsb
repz
out
xor
pop
cmp
or
test
es
mov
cmpsl
mov
xchg
add
lea
jmp
pop
call
inc
insb
mov
test
jmp
hlt
sbb
mov
pop
mov
and
das
dec
inc
xor
sub
movsb
jge
rorb
and
sbb
sbb
inc
adc
out
ljmp
test
mov
push
das
xor
pop
adc
stos
push
ret
xchg
xor
sarb
sbb
lret
les
cmc
int
mov
and
pop
scas
xlat
dec
lods
and
cwtl
cltd
popl
outsl
add
int3
xchg
mov
mov
insl
and
ss
dec
aas
ds
scas
test
in
rcrb
push
xor
scas
sbb
mov
in
les
mov
sti
pop
ficompl
add
cmpsb
loop
add
jns
aam
lret
push
jl
clc
cmp
inc
push
out
out
int
cmp
mov
xchg
and
test
or
mov
out
cs
inc
pmuludq
nop
mov
pop
fwait
xorl
pop
adc
das
stos
jge
mov
sub
js
ds
dec
add
xorb
lcall
sti
fidivs
sbb
xchg
sbb
inc
and
lods
jb
imul
sub
idivb
rcrb
mov
xchg
cmp
mov
sub
jns
inc
js
xchg
pushf
push
xor
mov
lret
cmp
in
pop
mov
jecxz
mov
jns
inc
adc
cmp
scas
out
adcb
xchg
scas
push
scas
lods
cmp
fucomip
subl
pop
std
xlat
sbb
scas
call
xchg
scas
outsl
add
mov
sbb
xchg
pop
pop
test
call
mov
loopne
jno
stos
xchg
cmpsl
push
and
sahf
sbb
pop
mov
fidivl
cmpsb
mov
leave
into
insb
pop
movsl
mov
faddl
push
aad
lea
sub
jmp
callw
sbb
lret
fs
shlb
xchg
mov
mov
fcomps
cwtl
mov
pop
xor
add
lea
dec
push
ficomps
stos
insb
adc
cltd
xchg
sub
dec
enter
pop
in
or
test
xor
inc
sarb
pop
mov
test
push
cmpsl
push
cs
int
lea
push
jge
cltd
mov
lock
out
dec
mov
dec
fdivrl
outsl
and
or
push
dec
mov
ror
jp
xor
add
jle
outsb
dec
ds
jbe
bnd
xchg
sub
xchg
shll
mov
es
cwtl
in
sti
shlb
decb
int3
mov
andb
jne
fwait
daa
hlt
xor
xchg
and
popa
jo
dec
xchg
mov
jge
punpckhbw
adc
and
frstor
inc
xor
les
sbb
int3
xchg
lods
popa
push
cmc
push
pop
cmp
and
pop
sbb
lret
nop
punpcklwd
fcmovbe
js
adc
mov
sbb
frstor
mov
test
int
pop
add
movsb
notl
movsl
stc
inc
int
lds
ret
pop
mov
and
jp
push
mov
push
lock
sti
fadds
test
pop
not
fwait
dec
lods
cmp
xchg
pop
inc
xchg
jno
aam
pop
fmul
ret
sahf
mov
dec
arpl
lods
dec
inc
jb
sahf
xchg
imul
and
repnz
jae
push
sbb
push
xor
mov
push
sbb
fucomp
mov
or
mov
cmp
jmp
push
pop
in
xorb
bound
mov
jle
jo
repnz
jo
cmp
leave
loope
insl
sti
add
or
push
mov
cs
adc
xchg
sarl
test
and
nop
mov
insb
imul
push
mov
imul
dec
inc
nop
or
mov
out
fneni(8087
cld
inc
mov
popf
es
push
mov
or
add
add
aam
mov
scas
nop
arpl
arpl
add
test
add
out
stos
imul
int3
add
xchg
sub
cmpsb
fistpll
and
push
or
mov
sbb
add
lret
inc
push
andb
inc
je
cmpsl
test
popa
jp
cmp
je
fcompp
jge
adc
stos
shlb
lahf
xchg
jmp
sub
les
cmc
mov
fidivl
add
in
mov
iret
stc
aaa
in
stos
loopne
imulb
add
cmp
aaa
push
repnz
mov
data16
mov
push
aaa
es
xchg
pop
pop
out
dec
jbe
fldcw
and
push
rol
dec
aaa
stc
test
stc
inc
add
add
inc
sub
pop
rorb
fistps
xor
pop
cmpsl
dec
jnp
jne
jp
lea
mov
lcall
fistpl
mov
add
dec
pop
cmp
lret
test
movsb
xchg
loop
or
shll
mull
push
jge
pop
in
add
pop
movsl
or
mov
or
xchg
fs
cmpsl
and
into
stos
jle
ror
ljmp
int
out
test
mov
clc
fcomi
push
out
shl
dec
out
mov
loopne
inc
add
sbb
and
sar
push
pushf
xor
inc
inc
or
rorl
adc
addr16
mov
lods
and
mov
fs
adcb
stos
cld
stos
adc
sub
and
mov
insb
push
or
and
mov
loope
adc
inc
divb
xchg
sbb
mov
gs
or
cmp
mov
dec
insl
jg
adc
rcr
xchg
cli
and
loop
int3
or
int3
mov
ret
shlb
mov
lret
cld
call
aas
ja
lods
jge
mov
xor
add
cmp
shrl
ja
xchg
ret
sbb
stos
mov
arpl
adc
adc
jl
mov
les
out
gs
iret
fistpll
jno
pusha
sub
xor
loope
add
sub
shl
pop
adc
mov
jno
stc
aas
xor
xchg
cltd
fs
mov
or
aam
aad
ret
clc
ror
jns
add
fiadds
xchg
mov
xor
mov
adc
shlb
aad
cmpsb
icebp
ss
in
testl
dec
push
inc
cli
pop
mov
pusha
mov
int
fimull
lds
mov
stc
push
xchg
lret
insl
aaa
mov
pop
insl
lods
jmp
adc
jge
test
addr16
cld
test
out
cltd
jecxz
push
xor
dec
mov
add
hlt
sbb
test
and
push
int3
fwait
popf
mov
xchg
fidivl
mov
xchg
push
push
cld
mov
ja
xor
pop
cli
or
mov
comiss
mov
or
jns
mov
mov
xchg
insl
jecxz
sahf
cmpsb
std
out
lcall
sarb
mov
dec
les
rorb
mov
dec
clc
xchg
add
mov
cmp
pop
ret
mov
pop
cld
sub
testb
jmp
push
ss
sbb
pop
push
cmpsl
sbb
mov
out
or
out
mov
fwait
adc
outsb
jb
inc
arpl
addr16
gs
insl
jp
sbb
mov
in
sbb
loope
ffreep
jecxz
insl
div
sub
aam
out
fildl
dec
xchg
enter
out
popa
fstpl
sbb
cmpsb
push
push
mov
dec
xchg
jecxz,pn
jecxz
adc
ret
lret
mov
out
in
cmove
or
rorb
jge
ds
sbb
lret
add
push
push
movsb
mov
repz
insl
mov
loop
outsl
popa
mov
sbb
dec
mov
imul
push
lret
in
in
adc
or
push
mov
imul
call
or
mov
sarl
dec
inc
stos
icebp
in
jg
pop
repnz
aas
push
aaa
sbb
push
mov
fisttpl
pop
ficompl
fisttpll
movsl
jp
push
pop
and
in
jne
cmp
jl,pn
loope
mov
mov
into
mov
mov
jmp
aad
aaa
nop
and
scas
xor
lods
es
mov
pop
cmp
mov
jbe
sar
test
mov
xchg
repz
pop
adc
push
mov
dec
push
stos
pushf
xor
dec
jmp
jo
or
dec
xor
jecxz
dec
mov
pop
mov
dec
rorb
test
pop
cmp
bound
mov
dec
fsubrl
stos
or
lcall
movl
mov
popa
mov
lods
dec
pop
imul
xor
xlat
jp
out
mov
cs
test
dec
in
inc
dec
xorl
sub
rcr
in
fcoml
jnp
fwait
lret
stos
roll
int3
popf
mov
xor
aam
insl
and
mov
mov
scas
jl
xchg
pop
dec
sbb
xchg
pop
push
test
jg
sbb
and
mov
aam
push
mov
clc
dec
stos
mov
lds
test
movsl
pushf
out
insb
leave
jnp
pop
insl
xor
test
es
mov
ja
jbe
mov
dec
mov
lods
push
mov
adc
js
xchg
push
nop
outsb
jge
or
xor
jnp
cmp
jno
loope
out
dec
test
clc
mov
addl
rol
aad
out
sbb
shll
insb
adcl
psubusw
push
lret
iret
inc
fsubrl
mov
mov
or
push
mov
sub
cwtl
push
shlb
cmp
mov
fldt
popa
fdivp
mov
movsl
aas
test
xor
in
adc
mov
push
mov
addb
or
loope
sti
clc
mov
mov
xor
imul
or
inc
and
or
xor
movsl
sti
pop
es
sub
addb
xchg
add
mov
jecxz
push
jno
cmc
pushf
mov
mov
jl
fdecstp
xor
movsb
cmp
testb
push
dec
sbb
adc
cmp
test
movsb
lock
mov
daa
lret
frstor
icebp
nop
dec
pop
pop
jae
fsubs
clc
test
cmp
sbb
jae
into
jle
jp
push
lods
adc
sbb
sub
pop
outsb
dec
pushf
cmp
lret
out
adc
xor
cld
iret
jo
movsb
sbb
fcoms
jnp
mov
or
dec
jns
sarl
mov
push
mov
push
rolb
push
ss
pause
aam
mov
out
loopne
out
fiaddl
adc
hlt
lods
sub
and
jg
lods
mov
push
cmovne
lret
add
shr
adc
cwtl
outsl
jbe
cwtl
ljmp
pushf
hlt
jne
lds
imul
hlt
shrl
sub
into
add
pop
push
xor
mov
aad
dec
dec
xor
dec
sub
pop
outsb
mov
dec
cmp
jg
pop
aam
lret
mov
fwait
adc
add
adc
stc
and
jecxz
add
enter
adc
sarl
cmp
and
xlat
mov
pop
mov
fisubs
jecxz
es
stos
loop
int
das
mov
adc
add
sbb
sub
inc
pop
js
lret
imul
shll
call
jae
in
sub
outsb
xor
mov
sbb
xchg
adc
mov
andw
mov
fmuls
pop
mov
dec
add
pop
nop
mov
adc
push
or
ret
push
cmp
xor
insl
jnp
loop
xchg
mov
fcom
les
jp
les
inc
and
int
lods
fstpl
mov
push
mov
xor
xor
xchg
aad
cld
loope
xchg
jmp
and
ret
or
mov
add
jb
dec
add
or
test
mov
mov
push
ja
sahf
jle
adc
adc
push
cmp
adc
iret
repz
or
jp
lds
push
cltd
mov
mov
xchg
nop
stc
andl
daa
lea
popf
cmp
mov
mov
jp
add
hlt
xchg
push
outsb
add
scas
movsb
sub
cltd
inc
fdivrs
fisttpll
loope
adc
addl
pop
mov
sub
push
fistl
lahf
lahf
or
in
jns
cld
sbb
inc
das
dec
int
jecxz
movsb
mov
cmp
xchg
cwtl
divb
arpl
dec
std
xor
cmp
mov
in
ss
stos
fpatan
imul
loope
push
xor
xorl
cwtl
add
out
gs
push
ja
in
dec
stos
xor
jp
cmpsb
in
jns
ficoms
adc
ljmp
cmp
idivb
jae
cmpsb
popa
xor
fidivrs
add
in
das
push
jle,pt
stc
push
fwait
fisubrl
int3
lea
sbb
loope
xchg
arpl
xor
int
xchg
mov
aam
ret
ja
mov
lret
push
inc
add
stos
and
cmp
inc
ds
jns
sub
inc
out
pop
hlt
std
jnp
and
cmp
fdivs
push
cmp
insb
mov
outsl
cmp
cmc
shlb
push
iret
ficoml
mov
adc
aaa
mov
dec
arpl
xchg
sub
fimuls
int
or
mov
outsb
and
mov
fwait
testb
addr16
xchg
fnstenv
pushf
sbb
push
mov
sbb
and
cmp
and
out
sahf
or
inc
popa
and
stc
outsb
sub
xchg
negl
aam
or
cmp
cmp
pop
xchg
jae
inc
fcmovb
aam
or
mov
add
stc
pop
push
in
dec
adc
xchg
cmp
mov
sbb
mov
scas
pop
cmpsl
sub
xchg
rorl
pop
mov
push
push
inc
inc
xchg
and
cwtl
movsl
pop
gs
pop
push
push
pusha
dec
pop
outsl
inc
mov
mov
mov
mov
daa
mov
or
je
push
int3
dec
imul
mov
adc
frstor
jl
pop
dec
sbb
repz
or
daa
sti
and
xchg
cld
popa
icebp
adc
mov
dec
adcl
sbb
out
mov
mov
out
jp
jb
aam
sub
scas
adc
lods
in
dec
pop
fs
pop
mov
jmp
sub
adc
ljmp
lahf
sti
sub
jns
mov
sub
push
jnp
or
add
fucomip
push
mov
mov
cli
dec
dec
test
cmp
popa
in
dec
lods
dec
icebp
xchg
int3
lret
add
push
lcall
cwtl
lea
xor
lcall
repz
dec
insl
jl
mov
fstl
push
adc
ret
mov
jecxz
lods
jnp
adc
test
and
sub
stos
jb
or
or
xchg
divl
notl
das
xchg
dec
fs
pop
jbe
jne
popa
pop
stc
js
sub
xchg
cmpsl
addr16
insb
outsl
mull
cs
dec
int3
sbb
jle
scas
jge
sub
or
xor
cwtl
add
xor
pop
aad
inc
lahf
sahf
out
mov
pop
xlat
push
push
mov
gs
jp
push
cmp
stos
bound
jle
hlt
test
cmp
sarl
cltd
xchg
iret
push
xchg
fdivr
xlat
ret
or
cmp
cmpb
and
jp
aad
xor
lea
jge
insl
imul
scas
cmp
lcall
cmp
and
or
or
stos
insb
xor
push
aaa
xchg
fcomip
fs
fsubl
xchg
idivb
add
jp
ss
cwtl
mov
outsl
movl
mov
adc
push
call
stc
push
inc
cli
pop
stc
jb
push
lea
or
enter
ss
xchg
jnp
out
mov
cmpsl
cmp
lds
adc
mov
pop
jne
xchg
mov
hlt
xchg
xchg
mov
xlat
mov
xor
mov
adcb
add
fiaddl
jo
jge
cs
mov
sub
push
mov
cltd
sub
adc
jb
test
cmpsl
rcll
mov
adc
fdivrs
mov
sbb
insb
icebp
hlt
xchg
or
xchg
mov
or
imul
sbb
push
ds
or
sar
in
test
cmp
add
cmpsl
jle
pop
je
inc
sub
mov
iret
insb
inc
sub
sbb
or
sbb
imul
fisttpll
jmp
mov
sahf
xchg
cli
inc
aam
mov
or
xor
lea
ja
icebp
jnp
mov
test
jnp
mov
jne
fsubr
sub
in
xor
in
dec
xor
add
push
rcr
or
pushf
dec
std
and
inc
push
and
clc
stc
in
ljmp
and
mov
sub
mov
add
jp
insb
nop
lds
jp
ret
sub
cmp
cmc
mov
xor
jl
mov
dec
js
fidivrs
fldl
xchg
mov
es
push
rorl
inc
push
pop
pop
jle
out
mov
mov
and
pop
sbb
or
movsb
push
lea
push
lea
or
fdivrs
push
or
mov
cs
test
jecxz
loopne
ja
bound
jl
lcall
jecxz
or
cmp
pop
je
iret
aas
sub
cwtl
jne
inc
mov
mov
movl
sub
inc
jge
cmp
xchg
mov
xchg
leave
mov
xchg
dec
outsl
cmpsb
jnp
repnz
sub
jp
dec
adc
sbb
scas
mov
dec
inc
add
les
jb
sub
sub
and
adc
xchg
iret
testb
xor
mov
mov
add
dec
add
aaa
push
dec
rcrl
jg
dec
jmp
sbb
rorb
mov
insl
mov
out
dec
cmp
sub
sbb
sbb
push
test
arpl
xchg
jp
push
fbld
dec
inc
pusha
mov
adc
in
sbb
jbe
adc
fwait
popa
pop
xor
subl
sbb
cmp
das
and
es
testb
loope
hlt
mov
add
xor
mov
add
mov
sbb
inc
mov
nop
add
and
xchg
mov
add
stc
and
fiaddl
jb
dec
sbb
fsubrs
iret
loope
push
into
subb
aad
dec
push
push
negl
aaa
mov
test
loope
inc
xor
xchg
stos
pop
push
aaa
mov
hlt
add
ret
mov
pusha
pmaxub
test
mov
mov
out
sbb
pop
xor
jecxz
sbb
inc
push
mull
cs
fmulp
push
incb
adc
insl
cmp
sbb
jp
pusha
pop
mov
popa
insb
std
mov
fs
or
cmpsb
pop
sub
add
out
adc
or
hlt
mov
adc
add
jmp
sbb
mov
mov
out
pop
div
pop
pop
mov
scas
xchg
adc
mov
dec
add
mov
pushf
jge
and
out
scas
add
aam
ret
cmp
js
outsl
cmpsl
and
add
nop
or
idivb
jge
inc
imul
sub
pop
mov
jnp
das
adc
out
cmp
fmull
in
pushf
jo
fldcw
lret
or
dec
jl
xor
jg
inc
cmp
pop
sahf
sarb
push
ljmp
scas
ja
outsb
push
or
or
in
orl
ret
xor
mov
lret
mov
lods
mov
testb
cmpb
sarl
in
and
scas
xchg
popf
inc
dec
push
inc
pop
sub
push
cmp
cs
in
iret
adc
cwtl
popa
mov
cmp
add
gs
sbb
mov
adc
mov
cs
loop
cltd
je
dec
jnp
cltd
sub
out
movsl
sbb
pop
add
push
les
push
mov
mov
dec
pop
hlt
loope
ds
jg
jmp
add
push
lret
cli
loope
xchg
cld
jg
sub
mov
mov
xchg
popa
test
mov
pop
inc
ret
dec
mov
mov
pop
sbb
push
push
sbb
test
inc
fxch
or
in
ja
mov
push
or
fwait
cmp
ljmp
outsb
push
movsl
ficoms
push
mov
sahf
mov
mov
add
inc
xor
mov
mov
adc
stos
jmp
adc
mov
pop
cltd
outsb
mov
stos
ret
and
pop
jae
sub
add
cmc
mov
or
aad
outsb
xor
das
pop
mov
sub
loop
imul
xchg
and
lea
sbb
imulb
xchg
roll
mov
cltd
in
inc
icebp
and
pop
pop
mov
push
mov
insb
push
inc
xor
xchg
adc
xlat
adc
fcomip
cltd
mov
mov
lret
xchg
and
add
add
mov
push
out
xor
sub
and
mov
cltd
popf
jmp
cwtl
mov
jbe
jl
sbb
ss
adc
dec
sub
outsl
cs
add
cmp
rclb
cltd
mov
inc
mov
or
jecxz
movsb
cmp
cltd
rsqrtps
clc
rclb
lret
dec
fcos
shll
mull
mov
sub
pushf
leave
movsl
mov
sbb
sub
or
push
cld
daa
jle
jl
adc
adc
lcall
shl
xor
pop
addr16
ja
pushf
sbb
sbb
push
or
cwtl
pop
and
sub
dec
xchg
gs
mov
mov
inc
sbb
out
mov
cmp
sub
xor
adc
jle
cmp
xor
push
out
repz
xchg
xor
adc
mov
mov
stos
sti
add
cmp
or
xchg
popa
adc
nop
cmpsb
movsl
aam
jno
sbb
sub
into
xchg
push
mov
sub
mov
andb
popf
cmp
fwait
jbe
mov
xor
sarl
ret
bound
sbb
jmp
sub
push
test
push
push
add
rcl
adc
subb
jne
imul
jg
sti
lcall
imul
in
jbe
mov
jg
pop
repz
cmp
not
lcall
adc
loop
inc
test
sub
pop
ret
xchg
dec
pop
sarl
arpl
mov
xchg
mov
push
xchg
scas
cs
cmp
inc
mov
xchg
fidivl
jp
into
nop
push
push
repnz
and
sub
sub
scas
lcall
xorb
testb
jnp
mov
xchg
inc
fnstenv
cld
fcmovb
jb
dec
lods
mov
dec
or
jecxz
and
sub
mov
inc
popf
xchg
xchg
adc
test
xchg
adc
fcompp
or
fisubrs
mov
or
lcall
pop
or
lea
lock
pop
and
std
push
add
xor
hlt
push
bound
jno
or
scas
pop
insb
jbe
xchg
jle
jl
in
mov
push
insl
fidivs
or
inc
xchg
cmp
fs
sbb
outsl
cli
jg
gs
lods
mov
xchg
popf
xchg
mov
push
jb
sbb
xchg
pop
loope
mov
sti
mov
rorb
push
and
nop
jmp
enter
pusha
xchg
sub
enter
mov
int
stos
mov
sbb
xor
cmp
push
xchg
mov
push
pop
nop
mov
pop
cwtl
fsubp
cmpsl
push
cmp
lcall
sbb
scas
mov
jb
mov
and
pop
addl
dec
xchg
jmp
push
fcmovu
fnstsw
bound
push
addb
sbb
roll
pop
enter
std
cwtl
or
sub
jecxz
mov
adc
and
data16
or
pop
pop
dec
dec
fdivrs
jmp
pop
xlat
push
adc
lods
inc
inc
jmp
out
dec
fs
lods
ret
jecxz
xchg
dec
les
cmp
out
sub
add
dec
adc
sbbl
repz
shlb
pop
lods
loopne
mov
faddl
test
and
gs
ljmp
pop
lcall
cmp
add
pop
push
icebp
call
aas
ss
or
stos
mov
and
int3
mov
xchg
xchg
lds
or
or
cmp
je
movsl
mov
pop
pop
push
dec
xchg
imul
mov
in
mov
fistl
pop
sub
cmp
jo
es
sbb
fwait
mov
and
cmp
clc
fwait
push
xor
inc
pop
or
lds
push
int
notl
dec
shll
pop
stos
inc
fisttpl
adc
xchg
decb
je
rcr
jg
repnz
or
and
insb
push
pop
int
ret
mov
xor
into
pushf
dec
push
sub
enter
cmp
push
enter
ds
xchg
fs
dec
jl
jbe
xchg
adc
xor
shlb
and
push
xchg
pop
jno
jecxz
mov
push
and
ror
into
in
test
aam
lods
ljmp
sub
mov
cmpsl
fsts
jno
mov
xchg
mov
jns
data16
and
adc
pop
lret
xor
inc
or
pop
data16
ds
lret
and
xchg
popl
fdivrl
cwtl
xchg
xlat
and
fidivl
stc
scas
or
fcomi
leave
pop
pop
fdiv
or
aad
adc
push
das
jns
inc
xchg
cwtl
inc
push
mov
cli
and
das
sahf
fnsave
xchg
sub
adc
pop
loop
dec
mov
fwait
cmp
adc
fsubs
inc
in
fwait
sub
xlat
punpckhdq
xchg
inc
or
dec
lock
cltd
fs
pusha
xor
sbb
mov
pop
and
clc
int
adc
lods
add
loop
popa
call
popa
push
pop
add
pop
rcl
cmp
add
in
ja
jb
sub
pop
in
inc
xchg
call
dec
testl
fs
int3
das
pop
xlat
sbb
add
jecxz
and
sbb
popa
lahf
repz
popa
adc
arpl
and
xor
mov
mov
mov
mov
icebp
mov
add
fistpll
sub
lods
mov
sbb
add
scas
in
popa
mov
xlat
pushf
inc
clc
or
push
adc
ret
pop
xchg
fwait
in
daa
inc
repz
inc
out
adc
inc
mov
push
xchg
icebp
dec
dec
inc
inc
call
mov
bswap
cmp
sub
stos
xchg
fdivl
pusha
push
aam
mov
cli
ljmp
ret
test
imul
adc
cld
dec
push
sti
or
repz
mov
out
cli
fs
clc
mov
add
out
fwait
mov
popa
cmp
dec
push
adc
mov
cmpsb
cmp
in
in
cmp
les
pop
mov
push
in
and
scas
daa
inc
arpl
hlt
sub
mov
int3
cwtl
je
test
mov
fdivl
ja
push
mov
inc
pop
xchg
ret
mov
pop
sbbl
cmp
adc
insb
fmull
scas
push
pushf
push
mov
and
outsl
arpl
pop
shll
fs
xlat
pop
cs
rorl
lret
push
xlat
popf
jl
mov
mov
xchg
cmp
cmp
dec
cli
pop
push
dec
pushf
das
sub
add
add
jno
mov
lods
pop
jno
dec
jb
test
loope
cmpsl
xchg
push
ja
movsb
cmp
xor
bound
lcall
jo
cli
mov
insl
pop
call
mov
js
test
fsts
loope
mov
orb
push
push
sbb
imul
pop
jg
mov
leave
cmp
and
xorb
mov
loope
in
test
dec
dec
ret
lods
pop
aaa
xor
and
ret
xchg
movsl
xchg
mov
movsl
lods
mov
aam
jo
xchg
cmp
mov
mov
lods
sbb
mov
lods
fcomi
add
add
out
xchg
or
adc
cltd
cmc
inc
pop
xor
pop
rclb
cmc
push
jge
and
clc
loopne
xlat
mov
push
push
adc
jl
sbb
shlb
mov
jp
xchg
dec
insb
push
loop
sbb
mov
scas
sub
xchg
inc
mov
mov
mov
sbb
ds
mov
mov
mov
jbe
mov
xchg
dec
aaa
lcall
jae
sub
inc
addr16
sbb
test
add
cmp
add
mov
pop
push
popf
mov
adc
mov
jmp
inc
cli
mov
clc
cmp
sbb
inc
pop
inc
cmpsb
ret
sbb
scas
lods
stc
or
pop
je
mov
add
js
inc
lret
call
shl
dec
sub
pop
dec
sub
nop
inc
sub
cmpsb
or
int3
dec
or
pop
sbb
in
mov
xor
cltd
pop
add
test
cs
inc
mov
xor
mov
xor
fdivl
push
cmp
jmp
inc
mov
fs
adc
inc
push
pop
scas
jbe
mov
push
xrelease
rcl
aaa
ja
adc
xor
mov
jno
iret
loop
mov
lods
add
mov
lcall
jnp
cmpsb
mov
mov
inc
mov
daa
shll
xchg
mov
jno
popa
xor
ret
int3
inc
lock
std
pop
xchg
sahf
ret
add
push
sbb
mov
sti
adc
imul
mov
xlat
imul
jno
or
aaa
inc
cmp
dec
movsl
andnps
xchg
pop
pop
incl
or
and
or
push
bound
movsb
movsb
add
sti
add
mov
sbb
inc
int3
add
mov
hlt
fwait
and
lret
fwait
adc
lret
lds
js
xchg
inc
les
push
lock
mov
xor
out
sub
fistpl
mov
jle
inc
mov
cmp
out
fsubs
dec
xor
in
lcall
mov
cmp
insb
mov
jp
enter
loop
pop
dec
pop
sarb
movsl
mov
or
adc
imul
icebp
mov
jne
loopne
insl
inc
bound
xchg
out
xor
test
aas
mov
pop
mov
scas
mov
jo
in
dec
pusha
fwait
into
mov
test
ret
ret
aaa
aaa
fisubl
vmovd
mov
popa
cmp
in
out
and
mov
dec
inc
inc
nop
cli
add
pop
repz
cli
xchg
fldenv
push
std
push
cld
iret
mov
outsl
call
fwait
lods
stc
dec
pop
add
sbb
lock
jle
inc
pop
cmp
and
jne
add
mov
mov
jge
movsb
stos
mov
jecxz
fwait
inc
fidivs
cmp
cli
add
cmp
stos
lods
add
xchg
xlat
jle
adc
fwait
js
pop
popa
out
getsec
repz
out
shlb
jnp,pt
add
mov
pusha
dec
and
dec
push
movl
bound
push
ja
xchg
xchg
pop
scas
cs
mov
pop
jnp
in
mov
ljmp
cmc
repnz
mov
sbb
js
mov
xchg
fldcw
clc
loope
push
movsl
nop
jmp
and
xchg
adc
lcall
sahf
std
mov
inc
in
xlat
dec
dec
adc
or
inc
xchg
mov
mull
adc
xor
mov
pop
cld
negb
mov
adc
inc
cltd
fwait
sti
cld
inc
jnp
sbb
insb
les
jecxz
xchg
in
dec
pop
mov
sbb
data16
xlat
lock
or
jp
sbb
das
stos
jmp
cmpl
into
inc
hlt
jae
jge
mov
mov
les
rcl
mov
cmp
inc
mov
jnp,pn
cmp
ljmp
adc
and
and
aas
mov
mov
pop
movsb
mov
subb
fwait
leave
in
mov
scas
lcall
sbb
add
inc
ja
dec
mov
lcall
pop
in
out
aad
sbbl
loope
pop
cmp
mov
divl
or
cmp
push
xor
or
rolb
fdivrl
out
lods
incb
add
sbb
ds
xchg
pop
cld
push
mov
notb
rorb
jbe
int
lods
arpl
cs
cli
fimull
sub
add
shrl
or
jne
pop
negb
mov
jl
inc
mov
jnp
popf
cmp
das
or
notb
lea
fsubl
fistpl
imul
inc
jbe
rorl
cmp
xor
mov
adc
adcl
fwait
and
dec
fstpl
push
les
push
sbb
jecxz
fimull
adc
mov
dec
stc
ljmp
sub
jp
ljmp
jno
jno
jecxz
sbb
test
leave
je
and
or
aam
mov
nop
test
mov
pop
mov
add
push
push
pop
testb
adc
arpl
dec
cs
scas
inc
sub
jg
jns
inc
dec
cmpsb
ja
aaa
xchg
aam
mov
push
out
inc
scas
xor
cld
xor
push
mov
aaa
xor
cmp
add
aaa
lret
sub
pop
fs
or
sbb
shlb
mov
xor
sbb
jle
or
sbb
mov
mov
adc
push
xchg
xchg
push
insb
sbb
lret
cmpsb
out
xor
loop
ds
cwtl
push
jb
mov
cmp
mov
xchg
push
xchg
stos
enter
aas
jecxz
adc
popa
push
incl
aas
sbb
and
mov
sbb
fldenv
clc
test
xchg
adc
icebp
inc
mov
cwtl
sahf
pop
fidivs
into
xlat
xor
int
xor
inc
and
pushf
fwait
ja
ja
push
inc
sbb
clc
add
insb
add
sbb
sbb
lcall
bound
inc
jne
mulb
stc
xchg
ds
imul
sub
and
subl
insl
incb
lods
and
sbbb
subl
or
stos
sbb
enter
lock
js
xchg
mov
bound
push
cmp
loope
stc
es
pop
popf
xchg
repz
jl
sbb
rolb
xchg
mov
aad
and
sbb
sbb
sahf
jg
mov
mov
pop
pop
xchg
test
outsl
xor
je
dec
jns
cmp
imul
xchg
ja
push
loopne
push
xlat
jecxz
jae
xchg
bnd
fs
dec
push
testl
and
xor
mov
or
mov
xchg
sbb
adc
andb
cmp
xchg
arpl
push
mov
pop
mov
push
in
and
cmpsl
scas
sti
cwtl
mov
je
cwtl
movsb
cs
xor
hlt
jbe
ffree
push
jp
shll
insl
je
push
popa
mov
ret
in
repz
in
mov
xchg
hlt
xor
pop
sub
mov
xchg
jg
clc
out
mov
les
xchg
mov
int3
inc
add
stos
in
push
repz
push
push
loop
mov
sbb
out
or
sahf
xlat
mov
and
lods
mov
iret
mov
pop
mov
test
es
or
call
inc
mov
xchg
mov
scas
jbe
std
mov
adc
daa
push
add
inc
and
add
xor
outsl
repnz
aam
movsl
call
and
or
cld
bound
loope
or
in
inc
jb
dec
adc
mov
or
add
dec
int
and
shr
push
pop
nop
and
dec
bound
sub
adc
mov
arpl
jg
je
xor
in
xor
jle
cmpsl
lret
xchg
mov
cmpsl
push
or
push
test
xor
and
lret
into
dec
mov
pop
testb
lods
dec
dec
mov
sbbl
push
or
mov
sub
dec
pop
mov
icebp
cmp
clc
pop
mov
pop
loop
scas
mov
push
pop
or
sub
sbb
sbb
push
add
mov
sub
int3
xorb
pop
icebp
mov
fisubl
mov
test
int
lret
cmpsl
sbb
std
pop
and
lock
enter
int3
in
push
push
pop
add
out
cltd
jae
lret
and
jp
jne
cwtl
adc
divl
or
lret
es
sub
ret
xchg
cmpsb
pop
int3
mov
push
cmp
test
xchg
add
mov
cld
add
fsts
insb
pop
sbb
lret
mov
mov
movq
or
cmp
gs
mov
jb
push
mov
ret
and
and
xchg
and
and
jmp
sub
push
fisubrl
push
jo
add
xorb
aas
adc
inc
insb
sub
jmp
or
outsl
dec
dec
sbb
sbb
subb
pop
out
in
orb
lahf
pop
rcr
xchg
sbb
jnp
scas
pusha
dec
xchg
in
jae
jmp
es
loope
in
hlt
xchg
pop
jno
out
jge
mov
sub
mov
lds
ret
fwait
jmp
pop
jmp
into
cmpsl
mov
sbb
pop
mov
cli
int
movsl
or
sbb
jo
push
movsl
push
mov
push
repz
mov
inc
sub
xchg
push
jbe
mov
std
out
jne
out
faddl
mov
push
pop
lret
lret
cmpsb
outsl
loope
xor
mov
inc
push
xlat
mov
ficoml
loope
loope
jne
inc
mov
and
xor
mov
das
sbb
filds
adc
dec
mov
sbb
enter
sbb
ds
pop
and
inc
addl
sbb
mov
sahf
std
aas
lods
insb
in
test
scas
or
sub
mov
stc
cmp
xchg
add
call
jnp
aaa
ss
shl
jecxz
mov
sbb
jmp
data16
call
or
shrb
or
test
addb
in
jge
or
add
pop
adc
aas
push
pop
pop
ds
cmp
jle
jae
bound
inc
push
loopne
pop
mov
insb
sub
outsb
insl
pop
stc
xchg
or
sarl
push
rorb
adc
or
lcall
jb
js
mov
xchg
inc
sub
fsubrl
int
push
test
out
xchg
cmp
sbb
inc
fcoms
pusha
fidivrs
insb
scas
clc
enter
jl
loop
pop
inc
int3
mov
add
test
ficoms
into
ret
daa
sbb
dec
xor
cs
xor
mov
test
adc
mov
sbb
xchg
rorb
js
and
lds
mov
inc
add
push
ss
vpshab
roll
outsl
lcall
lcall
dec
sbb
and
push
mov
jae
cwtl
outsb
rorb
leave
inc
je
test
mov
sub
clc
sbb
sub
repnz
lcall
lods
loop
sub
shll
mov
insb
push
cld
pop
add
xor
lea
dec
cmpsb
xor
mov
lock
repnz
add
xor
inc
and
or
roll
lret
out
xchg
xchg
cwtl
scas
pop
rcrb
mov
push
adc
cmp
inc
sub
xor
push
xchg
sbb
shlb
mov
aaa
mov
imul
cmpl
enter
lods
inc
jmp
mov
dec
stos
xrelease
cld
pop
test
push
mov
je
fwait
scas
es
inc
push
in
adc
jmp
mov
cmp
fs
dec
sub
cmpsb
mov
outsb
dec
xchg
xchg
inc
dec
lea
add
mov
pop
data16
pop
cmpsb
sbb
dec
hlt
daa
mov
xchg
lds
mov
sahf
sbb
inc
sub
fsubs
movsb
sbb
mov
jge
sbb
fnsave
hlt
pusha
test
cmpsl
jl
imul
jge
idivb
pop
push
dec
cmpsl
add
fdivs
xor
out
cmp
sub
je
fdivrs
repz
cmc
push
mov
inc
test
rorb
mov
jle
pop
repnz
sub
xadd
iret
jnp
mov
std
outsl
rcl
jmp
mov
mov
mov
jb
int3
xchg
lea
stos
stc
adc
leave
sub
js
imul
in
xchg
cmpsl
mov
and
cmpl
insb
icebp
test
int3
test
pushf
mov
rcrb
outsb
call
sub
sar
shr
in
adc
jae
xor
mov
aad
cltd
fsubr
xchg
jecxz
and
test
xlat
xchg
out
pop
dec
mov
movsl
inc
addb
adc
jb
bound
popf
ljmp
lahf
icebp
and
sbb
imul
push
xor
mov
pop
mov
mov
mov
cs
clc
subl
and
fsubs
addr16
mov
cmp
or
inc
adc
hlt
adcl
rorl
mov
out
mov
inc
sub
add
add
dec
inc
insl
xchg
inc
loope
cs
rcr
mov
dec
pop
and
push
push
arpl
jl
ret
pop
dec
ljmp
cltd
lock
sub
cli
sbb
push
mov
cwtl
das
js
jbe
mov
rol
ljmp
int
test
add
imull
loopne
lock
adc
jbe
loop
sub
adc
xor
mov
pop
leave
ja
test
sbb
std
in
aas
ljmp
decl
cli
in
mov
and
and
fwait
lods
add
jg
sarl
sbb
pop
pusha
ret
dec
push
pop
sbb
ficompl
push
mov
sar
stos
and
sahf
pop
sub
cs
xor
ja
out
pushw
ret
cmp
cmpsl
rclb
xchg
mov
mov
stos
movsl
push
cmpsl
fiadds
xor
or
and
pop
test
push
push
push
call
js
test
pop
and
repnz
mov
dec
sbb
out
cmp
loopne
push
mov
push
jmp
xor
xchg
and
sub
mov
pop
dec
pop
hlt
int
aaa
xor
adc
xchg
mov
sarb
insb
push
dec
dec
out
sbb
loop
pop
push
jge
sarl
int
aaa
push
shrl
xor
nop
movsb
jg
flds
mov
aas
dec
or
push
ljmp
inc
push
mov
push
push
out
pop
jno
adc
pop
int3
test
xor
lock
mov
lret
sbb
mov
in
pop
jno
adc
popa
sbb
pop
pop
xor
daa
loope
mov
das
or
mov
in
jns
mov
and
repnz
sbb
fucomip
sbb
lcall
mov
pop
dec
adc
xchg
shl
adc
addb
push
add
push
dec
popf
push
fs
in
add
clc
mov
iret
scas
xor
dec
daa
aad
les
out
or
and
scas
push
xchg
pop
sahf
sarb
cli
adc
mov
dec
ja
or
rol
mulb
in
inc
xchg
sbb
mov
mov
adc
cmpsb
cmp
xchg
shll
mov
out
dec
imul
mov
add
cld
js
dec
sbb
out
fmul
hlt
mov
add
or
out
lcall
cmpsb
push
mov
shlb
rorl
sub
mov
mov
jge
cltd
adc
or
pop
je
mov
arpl
sahf
cs
dec
ret
psubb
xor
and
filds
pop
in
cmp
xor
stc
push
cmpsl
in
add
mov
adc
sbb
jp
mov
push
mov
pop
cmp
cltd
out
xchg
lea
adc
pop
jp
mov
add
pop
scas
in
xor
or
and
lods
pop
imull
icebp
divl
push
cmp
scas
and
es
rcrb
push
pop
adc
rcr
fists
pop
or
fwait
pushf
test
mov
or
scas
sub
push
jbe
mov
pusha
popa
sub
jns
sbb
sti
xor
cmp
jp
int3
mov
test
pop
movsl
bnd
movsl
jle
inc
xchg
rcr
imul
iret
or
lret
out
mulb
adc
lods
stc
jecxz
pop
jecxz
sbb
jo
inc
mov
icebp
adc
dec
imul
movsb
btr
pop
adcb
test
jae
test
pop
mov
jp
test
fwait
icebp
cmp
test
push
inc
adc
inc
push
fwait
test
ja
or
sbb
fsubr
pop
and
popa
and
mov
cmc
test
sbb
inc
ror
fsubrs
es
mov
mov
jnp
push
call
and
insl
dec
mov
fsts
sub
scas
sbb
xchg
dec
mov
and
jge,pt
icebp
test
inc
fistl
cli
mov
sub
ror
pop
and
push
pusha
and
jecxz
inc
out
stos
mov
inc
pop
pop
cs
lret
test
pushf
adc
add
dec
cmp
cmpsl
inc
mov
sbb
push
push
adc
addl
dec
dec
idivl
add
mov
outsl
add
repnz
fstpt
cwtl
lods
dec
stos
fwait
jns
loopne
xchg
pop
sub
lahf
pushf
push
movsb
xor
adc
mov
push
cltd
jmp
xor
add
mov
pop
aaa
or
lods
fnstcw
xchg
cld
les
shr
in
inc
and
inc
dec
dec
mov
xor
pop
push
shll
popf
cmp
mov
adc
movsl
adc
mov
lods
in
xchg
cmp
out
jl
ljmp
cmp
mov
push
insl
add
mov
mov
add
repnz
sbb
aad
ret
inc
das
mov
das
subl
mov
dec
ret
std
outsl
cmp
mov
xchg
xor
push
xchg
adc
cmpl
dec
cmp
out
jmp
mov
lret
enter
clc
add
call
mov
jno
lret
mov
cmp
insl
sub
mov
addb
es
mov
enter
inc
mov
or
add
xchg
mov
jl
mov
xor
jge
sub
pushf
inc
mov
mov
sub
iret
pop
icebp
gs
dec
jb
shrb
push
dec
xor
outsl
jbe
and
lea
loope
pop
and
pop
nop
mov
or
ja
fsubrs
xchg
loop
out
call
xchg
nop
pushf
mov
shrl
out
xorl
aam
in
add
push
pop
sub
xor
cld
or
flds
icebp
push
fidivl
out
cmc
mov
cmp
cmp
fsubrl
fst
lods
sub
imul
int3
in
in
ficomps
mov
and
mov
mov
jecxz
xchg
out
or
lods
je
rcrb
and
cmp
cmpsl
adc
and
loopne
fstps
mov
sti
cmp
ss
outsb
xchg
push
pop
adc
enter
outsb
jmp
add
lret
mov
lret
ret
cmp
int
sub
sub
loopne
lods
lcall
leave
popf
jnp
rclb
shlb
mov
ljmp
mov
mov
imull
outsl
test
adc
pop
cmp
lret
dec
jae
pop
fwait
jo
push
and
inc
mov
lods
mov
xor
jp
mov
dec
pop
adcl
rclb
xchg
mov
stos
sbb
mov
orl
lds
outsb
ljmp
mov
outsb
movsb
fldl
fldt
aad
pusha
fsubl
dec
pop
xorl
lods
xor
out
or
in
mov
sbb
mov
shll
push
pop
bound
xchg
jne
mov
lret
movsl
inc
outsl
movsb
dec
inc
pop
cmp
ficoml
data16
cs
jl
fildl
cmpsb
xor
lock
sbbb
push
movsb
in
out
mov
mov
sub
dec
fdivs
inc
fsubrl
xchg
and
pop
and
out
and
jb
lods
push
stos
mov
je
ljmp
jmpw
push
nop
xchg
lcall
loop
mov
jno
push
sub
dec
jno
ja
mov
lods
push
pop
fs
cmp
mov
pop
test
xchg
icebp
jl
and
nop
cmpsl
xor
in
adc
dec
xor
cmc
xchg
gs
dec
mov
fxch
lock
scas
inc
cli
cmp
cmpsb
and
hlt
movsb
add
rcrb
mov
hlt
addl
pusha
adc
hlt
fcmovu
pop
and
dec
cmp
sbb
jg
sbb
or
push
inc
negb
ja
mov
imul
sbb
sbb
mov
aad
rorl
sub
push
fcoms
xlat
xlat
out
scas
fcoml
cwtl
cli
fldenv
jle
rcll
pop
add
dec
xor
lock
test
or
out
push
arpl
out
push
lea
sub
pop
dec
inc
mov
inc
repnz
jns
fisubrl
mov
mov
mov
cmp
pop
inc
push
loope
pop
dec
add
js
cmc
stos
cwtl
xor
lock
inc
pop
cmp
jl
sub
lea
sahf
ficompl
push
test
movsl
outsb
and
mov
in
insb
or
mov
out
pusha
xlat
lds
jnp
adc
or
push
stos
xchg
add
cld
and
pop
mov
jbe
test
div
sahf
or
test
inc
leave
je
int3
xlat
enter
adc
mov
repnz
mov
push
test
lret
leave
or
lods
sbb
ror
scas
movsb
popa
jge
idivb
xor
shlb
or
mov
mov
stos
add
sub
in
rol
rorl
mov
adc
add
daa
js
sub
push
std
ret
add
test
imul
in
or
mov
mov
adc
dec
shlb
jbe
mov
mov
movsl
mull
in
dec
lea
and
push
sbb
or
fidivl
int3
ja
pop
sti
inc
xorb
daa
push
aad
pusha
aad
clc
orl
stc
lahf
in
pop
sbb
push
popa
inc
and
inc
and
xor
movsb
in
gs
pushf
out
loop
or
push
sub
mov
loopne
shrl
das
jmp
mov
repz
faddl
es
adc
outsb
push
pop
arpl
jmp
cld
dec
cltd
rorb
xchg
push
adc
push
mov
and
dec
fld
and
mov
pop
fadds
lea
lods
not
mov
dec
xchg
pop
seto
mov
out
and
outsb
sbb
push
dec
bound
test
fdivl
nop
adc
mov
lds
clc
call
mov
cmp
andb
ret
subb
int
enter
lret
mov
leave
mov
add
ljmp
jecxz
ja
jg
loopne
addr16
iret
adc
pop
push
jle
and
imul
lea
ds
iret
sub
cld
and
loope
jno
cld
jmp
dec
adc
fcompl
push
repnz
movsb
push
dec
mov
insb
out
cwtl
loop
xor
rcl
xor
mov
pusha
dec
ret
faddp
mov
mov
bound
je
clc
fldl
pop
rorl
std
subb
mov
dec
adc
jae
mov
into
xchg
test
daa
and
adc
jecxz
add
pop
stos
xor
aas
fdivs
and
insl
xchg
scas
into
lods
in
test
pop
jp
pop
add
repz
out
popf
push
pop
adc
sbb
popf
shr
fisubl
push
test
arpl
outsb
mov
mov
cmp
movsb
fistpll
sbb
mov
das
jmp
mov
mov
mov
sub
sub
pop
add
insb
push
inc
fisubl
mov
adc
loop
scas
data16
or
int
movsb
sbb
ret
ja
in
sbb
pop
mov
dec
or
pop
sbb
js
lods
mov
iret
or
xchg
lods
xlat
in
mov
cld
xor
pop
mov
jo
xchg
jmp
push
lock
or
add
jge
adc
cmp
daa
sub
out
cli
push
imul
in
leave
fidivs
ffree
cwtl
push
scas
leave
stos
aam
repnz
and
test
xor
bound
push
jo
mov
icebp
fisubs
xor
outsl
push
mov
data16
or
add
ss
xor
push
adc
xchg
sbb
call
cli
icebp
cmp
stos
punpckldq
aam
dec
mov
xor
sbb
mov
inc
test
mov
dec
andl
sub
mov
add
test
xor
jmp
mov
xchg
xchg
adc
leave
xchg
lock
daa
orb
sbbb
sub
jne
cltd
subl
adc
push
xlat
sbb
adcb
sarb
jo
in
enter
mov
pop
sbb
cmp
mov
xchg
rolb
fstpl
mov
mov
movsl
sub
inc
pop
fnsave
or
fistl
inc
push
jns
sbb
cmpsl
jbe
push
popf
inc
and
mov
aaa
aas
dec
pop
pop
jb
mov
leave
inc
enter
aam
nop
mov
in
cmp
dec
sub
rorb
enter
movq
or
pop
mov
lds
loop
and
orb
xor
or
xchg
xorb
data16
pop
sbb
mov
jbe
into
inc
push
sub
mov
adc
xchg
inc
lods
xor
outsl
loop
ja
push
fsubrl
push
pop
inc
inc
lret
mov
mov
cmpsb
inc
push
adc
cli
or
rorb
push
push
ret
outsl
ret
push
das
and
popf
scas
test
mov
imull
scas
jnp
fisttpll
mov
rcrb
inc
mov
enter
or
sub
pop
jg
inc
mov
jns
push
movsl
fwait
stc
push
lods
jl
jecxz
bound
sub
xor
fiaddl
adc
xchg
inc
mov
inc
lret
sbb
add
dec
xchg
pusha
jmp
es
loop
mov
xor
jp
out
dec
push
aas
aam
xchg
leave
sub
out
inc
xor
lock
cmp
and
fidivs
ss
data16
cmp
inc
sbb
leave
fdivs
jne
xor
fcomi
sbbl
xchg
ja
mov
jg
lods
push
pop
test
inc
xor
cmc
push
sub
roll
scas
fsubs
out
adc
inc
aaa
xchg
xchg
in
out
xchg
inc
jo
jne
and
shll
cwtl
iret
adc
pop
lret
push
cmp
sub
mov
repnz
and
adc
loopne
stc
mov
cmp
pop
mov
fwait
arpl
mov
fld
jb
xchg
adcl
sti
mov
ljmp
mov
pusha
cli
or
movsl
movsb
adc
pop
out
pop
mov
scas
pusha
cs
icebp
cmpsb
rcll
cli
adc
mov
dec
push
nop
mov
jnp
ja
in
ret
insl
jns
mov
ds
mov
dec
or
add
stos
dec
xchg
push
dec
outsl
add
xchg
repz
fsub
or
loopne
add
adc
mov
sti
jbe
push
rcr
dec
jbe
jmp
int3
lods
mov
test
inc
sub
sub
mov
fcmovb
xor
notl
xchg
push
and
sub
pop
add
sahf
mov
inc
sub
shl
bound
push
lock
and
enter
mov
into
dec
push
sbb
loope
popf
cli
sbb
and
jmp
jg
or
fldenv
push
jo
jbe
sbb
push
dec
mov
sub
dec
push
xchg
and
pop
in
ficompl
ret
daa
cmp
push
pop
in
dec
iret
rorl
sbb
test
fnstsw
sbb
push
cli
repz
bound
xor
sub
jne
cwtl
mov
jmp
xchg
sahf
xchg
aas
mov
push
xchg
in
xor
loop
mov
push
inc
adc
pusha
xchg
xchg
adc
out
mov
mov
sbb
fisttps
jmp
mov
dec
cld
sbb
push
jns
insl
jle
mov
addr16
outsb
mov
jno
mov
push
cmpsb
pop
push
pop
ljmp
mov
rclb
fucomi
hlt
fs
add
xor
aaa
into
cmp
dec
inc
flds
cmp
pop
mov
lcall
repnz
hlt
xor
std
bound
pushf
jmp
test
adc
stos
inc
stos
fsubrs
and
and
popa
js
ljmp
cmp
or
mov
addb
sbb
daa
imul
pop
mov
inc
test
cmpsb
clc
fmul
add
fs
out
int
outsb
xor
fstps
fnsave
adc
push
jmp
push
lcall
jg
mov
mov
adc
mov
push
jno
mov
adc
scas
lret
add
jl
les
pop
inc
mov
lods
xchg
push
pop
xor
jae
jge
pop
xor
sti
pop
cmp
pop
jmp
pop
rorl
divl
mov
test
and
cmp
mov
jnp
lcall
cmp
jle
push
push
icebp
mov
sbb
pop
cs
push
pop
jb
xor
xor
insl
in
xchg
cwtl
sbb
daa
or
jo
loop
xchg
adc
push
inc
stos
pop
or
in
or
in
icebp
or
adc
push
jg
dec
ljmp
adc
mov
mov
cli
cmc
adcb
jl
add
push
inc
and
ds
imul
push
xchg
jb
nop
lret
aaa
lock
jl
fwait
jle
stc
push
xchg
inc
test
iret
mov
dec
inc
mov
lods
mov
popf
or
sub
push
fisttps
xchg
mov
je
fisttpl
dec
bound
pop
push
insl
adc
insl
cmpsb
je
bound
pop
xchg
push
add
push
jbe
xlat
xchg
jbe
mov
dec
enter
mov
ss
push
cmp
pushf
js
test
clc
push
sbb
inc
inc
or
cli
test
cltd
jmp
sub
jnp
and
cwtl
cmp
flds
push
add
mov
xlat
ja
mov
andl
scas
dec
xchg
les
pop
shl
xchg
test
sub
mov
xchg
lods
cld
add
xor
sbb
inc
test
jl
and
out
aaa
jecxz
shll
push
mov
xchg
gs
jl
mull
fwait
cmpl
daa
xchg
adc
cmpsl
sub
out
push
dec
out
cmp
loope
xchg
aad
and
lcall
mov
cwtl
push
je
cmpsb
hlt
das
sbb
or
xchg
cmp
dec
mov
mov
xor
popa
adcb
sbb
mov
push
loopne
sti
inc
mov
cmp
mov
jecxz
pop
mov
lea
mov
orl
pop
push
sub
adcb
popa
xchg
cmp
sti
inc
popa
add
movsl
mov
test
push
mov
and
cmp
jns
sti
mov
call
jno
faddl
push
inc
out
push
dec
sahf
fldt
repnz
leave
and
imul
xchg
das
lods
inc
sahf
add
xchg
cmp
push
popa
nop
xchg
jge,pt
sub
es
sub
cmpsl
cli
jo
ret
test
push
fldenv
fdivrl
mov
sti
add
sbbb
es
mov
mov
arpl
push
and
mov
push
fistl
test
jecxz
jge
add
pop
sti
cmp
cs
sub
fstps
xchg
adc
jle
mov
out
dec
dec
test
out
imul
jbe
inc
or
repz
dec
xchg
xor
stos
icebp
mov
xchg
lods
test
std
add
jg
push
hlt
fldl
add
sub
rcrb
and
inc
push
inc
xor
aaa
fwait
scas
mov
test
shr
jbe
ret
inc
repnz
aam
stc
fstps
or
add
or
lds
pusha
pop
sub
into
mov
or
pop
jecxz
xchg
cwtl
xor
fwait
push
cmp
dec
xchg
pop
dec
cmp
cld
and
mov
jo
lods
roll
cwtl
mov
xchg
rcl
push
imul
popf
xchg
xor
lock
sbb
int3
sahf
pop
pop
sub
sub
lret
jp
sbb
aad
leave
mov
stos
test
popf
add
das
or
loop
iret
adc
std
out
hlt
jno
sbb
repz
fsubrl
pop
cmp
sub
aas
fcmovnb
jns
mov
sub
movl
pop
adc
ret
pushl
cmp
sti
mov
or
in
push
pop
es
stos
ficoms
jo
aaa
jge
or
sub
mov
dec
ret
add
lahf
cmp
pop
xor
imul
fcomps
leave
je
sahf
bound
push
add
push
cmp
dec
hlt
je
stos
mov
lcall
dec
mov
cmp
stos
in
cs
sbb
mov
jne
ljmp
push
mov
rcrl
or
sbb
nop
roll
push
inc
mov
outsl
leave
dec
hlt
add
out
sub
cmp
xchg
imul
pop
mov
call
andl
loopne
les
pop
rclb
imul
repnz
std
mov
test
cmpsl
push
outsb
xor
ss
andb
xor
icebp
pushf
mov
insl
xor
int
mov
jmp
add
dec
mov
jl
nop
subl
mov
dec
sarb
sub
inc
push
jne
lcall
fdivs
gs
inc
mov
dec
cmp
cmp
outsb
xor
push
and
frstor
jmp
imul
lea
negb
in
adc
pop
jno
fsubl
lods
xchg
iret
out
mov
stc
cld
mov
insl
mov
jl
pop
jmp
jl
mov
fxch
fs
cmpsl
clc
leave
mov
lret
jle
mov
ret
in
imul
mov
inc
mov
rcrl
mov
mov
cmp
cwtl
pop
cmp
test
repnz
pop
pop
jecxz
push
mov
rclb
mov
fistl
stos
pop
jmp
sub
data16
add
addr16
call
adc
fstl
fucomi
pop
ficomps
sti
cmpsb
popa
sti
xchg
call
loope
js
int3
bound
data16
push
lods
push
pop
aaa
xor
fs
sub
mov
xchg
inc
inc
rcrb
xor
testb
mov
ret
jne
pop
xchg
jnp
dec
or
in
ret
xchg
icebp
mov
out
loopne
cs
adc
cs
icebp
call
dec
movsl
shrb
xlat
adc
pop
xchg
stc
xchg
inc
jp
cmc
gs
pop
aas
clc
lret
inc
inc
xchg
dec
xchg
outsl
cmp
nop
cmpb
test
clc
int
xchg
or
out
xchg
dec
add
movsl
sbb
and
and
cmp
xor
dec
cmp
insl
enter
in
and
pop
icebp
lret
js
sub
aam
jge
dec
push
fdiv
add
mov
insb
cltd
jmp
push
lret
push
je
gs
sbb
out
mov
gs
repz
xchg
pop
pop
push
aad
roll
and
mov
enter
mov
add
cltd
cltd
add
popa
sbb
scas
or
imul
mulb
jecxz
xchg
cltd
push
in
sub
repnz
jp
into
and
lahf
mov
pop
xor
mov
lcall
daa
ss
push
ljmp
xchg
insl
mov
xchg
hlt
inc
fsubs
sub
daa
ljmp
aaa
into
fimull
cwtl
test
push
mov
ds
dec
pop
jo
mov
or
insb
les
stc
xor
pop
pop
repz
movsl
push
cmpsb
cmp
mov
mov
mov
mov
cmpl
mov
mov
add
dec
stos
adc
or
test
outsb
stos
gs
iret
sub
xor
or
hlt
ss
mov
lds
cwtl
push
pop
mov
cli
scas
mov
ljmp
mov
lock
push
mov
mov
jmp
ret
ret
sub
stos
in
in
sub
test
dec
add
into
sti
aas
sbb
add
cmpsb
outsl
jmp
jle
scas
cmp
cltd
or
jp
sub
loope
daa
mov
mov
xchg
adc
imul
sti
in
push
mov
ret
bound
enter
loope
and
stos
movsl
les
insl
sub
sub
ret
ret
mov
or
sub
rorb
cmpsl
fimuls
stos
xchg
dec
iret
imul
cli
push
or
push
jo
lock
cltd
movsb
addr16
stc
mov
sub
fld
fsubs
pop
out
ret
out
dec
adc
jp
je
data16
sub
loope
gs
push
xchg
push
dec
push
or
mov
lock
add
xchg
mov
cld
or
xchg
icebp
sbb
data16
fildl
cld
aas
arpl
sub
cwtl
inc
sub
adc
inc
hlt
fsubrp
dec
scas
sub
xor
scas
pop
inc
ljmp
xchg
adc
push
movsb
cmp
or
push
xor
jbe
stc
in
cmpsl
jl
scas
leave
inc
cmc
test
mov
adc
jns
mov
and
mov
out
rolb
incb
rcrb
aaa
xchg
dec
xor
pop
sbb
cltd
dec
push
movsl
popf
clc
jecxz
push
ret
mov
lret
call
adc
aam
cmp
add
sahf
pop
lahf
adc
jae
stos
xchg
out
mov
xor
in
cli
ucomiss
call
mov
xorl
lret
sbb
xchg
mov
sarl
push
in
repnz
xor
shlb
sub
shrb
mov
cmc
shrb
addr16
pop
mov
xchg
test
sahf
cmpsl
and
in
sub
push
xchg
xor
xor
pop
xchg
xor
popf
dec
dec
mov
xchg
shrb
out
das
stos
aaa
dec
cmpsl
fldenv
mov
inc
push
inc
inc
mov
rorb
push
fwait
ja
icebp
rorl
push
arpl
out
bound
adc
and
push
cmp
cmp
ss
inc
outsl
push
cmpsb
sbb
pop
mov
movsb
js
nop
test
xor
or
and
sbb
iret
mov
test
sbb
arpl
aam
mov
and
ret
test
jo
int
fwait
adc
loop
je
sub
fwait
bound
xor
push
loope
push
adc
sbb
cld
out
and
lock
or
pop
in
lcall
test
in
add
jle
and
add
lret
xchg
repz
mov
or
adc
pop
jg
subl
inc
lods
xor
add
push
aam
rol
fldt
ret
iret
and
into
addr16
outsl
insl
scas
jbe
icebp
pop
cld
or
std
mov
jne
and
gs
mov
testl
lahf
cwtl
mov
xchg
in
and
lods
iret
lret
cmp
push
call
ror
pop
shlb
cld
mov
aam
lahf
fsubs
sub
jle
movb
adc
push
lret
aam
inc
imul
sbb
cmc
mov
cmc
jno
dec
or
aaa
jp
push
or
lahf
in
bound
aam
sub
into
fmulp
ljmp
mov
mov
pop
aaa
mov
mov
mov
insb
push
jnp
je
pop
insb
orb
out
jle
clc
jmp
pusha
in
or
cmpsl
mov
enter
stc
jecxz
lret
data16
mov
cmp
adc
pop
dec
jns
ss
sbb
add
enter
sub
test
sbb
pop
subl
addl
push
stos
lea
dec
jne
mov
lcall
lar
aad
jae
aam
sbb
out
pop
aam
out
add
cmp
arpl
lahf
sub
lret
pop
in
inc
xor
mov
lods
mov
inc
add
lock
add
cmp
jae,pn
sbb
out
and
push
xor
mov
adc
rclb
stos
ret
fwait
icebp
stc
loope
les
lahf
push
pushf
scas
mov
or
pop
icebp
repnz
and
adc
rcrl
sbb
mov
out
mov
sbb
addr16
test
jle
pop
cmpsl
mov
dec
pop
mov
frstor
addb
xchg
clc
cmpsl
std
mov
lock
shlb
incb
outsl
jle,pt
loope
pop
stos
lds
hlt
test
dec
mov
xlat
cwtl
dec
mov
and
mov
dec
outsl
out
loope
sub
mov
cmp
hlt
inc
dec
dec
aam
cmpsl
cmp
into
pop
test
adc
outsb
or
div
mov
clc
jnp
push
and
ficoms
dec
lods
aam
addr16
int3
shrb
repnz
jbe
push
outsb
push
lret
cld
add
rolb
popf
cld
outsb
push
cmp
leave
roll
add
dec
inc
xor
jmp
inc
and
call
pop
jl
ret
mov
mov
push
sub
stos
outsl
rorl
aaa
push
test
out
pop
mull
jb
testl
mov
imul
data16
std
arpl
loop
push
adc
adc
in
sub
ljmp
addl
shlb
movsb
sub
adc
add
loope
sahf
orl
sub
xchg
fnstsw
push
stos
jns
fstps
dec
mov
adc
mov
jns
and
mov
fadds
xchg
mov
push
lret
mov
das
adc
push
decb
mov
xchg
mulb
test
adc
mov
xchg
push
sbb
pop
mov
test
dec
aam
xchg
sbb
and
fdivrs
push
bound
sbb
cltd
add
and
test
sahf
inc
jmp
and
testl
sbb
xchg
add
aad
inc
jg
and
add
cmp
lret
pusha
inc
push
xchg
roll
mov
mov
mov
and
cwtl
add
testb
das
in
jns
in
movsl
push
xchg
adc
mov
push
mov
push
fistps
shlb
push
call
inc
push
es
lock
or
arpl
bound
add
fs
fistps
jecxz
pop
adc
jl
sbb
outsl
dec
adc
dec
fidivrs
bound
les
push
inc
sub
scas
leave
data16
lret
mov
les
and
aaa
xor
orl
mov
aaa
call
jg
pop
pop
pop
sub
mov
sti
add
xchg
insb
pop
stos
mov
lret
push
fildll
int3
repnz
clc
sbb
or
lods
inc
lahf
fidivrl
dec
imul
pop
sub
sbb
into
mov
push
sbb
sbb
mov
into
sbb
fisubs
mov
mov
lods
rorl
enter
cmpsl
jae
xor
mov
adc
mov
loop
dec
leave
sti
mov
add
in
pop
cmp
xchg
inc
test
sub
push
enter
cltd
xchg
and
imull
xor
pusha
in
out
mov
add
xchg
cltd
push
dec
or
imul
scas
push
movsl
lahf
dec
mov
sub
cmpsb
sub
xchg
inc
mov
pusha
pushf
push
shll
lds
inc
fdivs
cmpsl
scas
mov
negl
test
hlt
enter
out
xchg
fldl
push
fnstcw
dec
sub
add
add
nop
sub
ret
mov
inc
inc
and
inc
ds
jle
sbb
jmp
jmp
ret
data16
js
xchg
and
adcb
test
mov
mov
dec
std
out
mov
inc
pop
in
arpl
adc
add
xor
and
int3
mov
mov
cmovo
jle
and
dec
imul
into
repnz
js
add
xor
outsb
dec
xor
mov
test
sub
adc
dec
inc
gs
je
xor
repnz
aam
ret
mov
push
sbb
mov
faddp
xchg
jb
cmp
out
xchg
stos
cmp
sbb
leave
dec
pop
push
push
jne
sahf
lea
shl
rolb
jecxz
inc
sahf
add
enter
add
sbb
adc
pop
nop
jmp
aaa
fldt
lret
pop
push
bound
aaa
xchg
and
push
mov
xchg
dec
xor
ss
mov
sti
mov
hlt
out
lret
mov
pop
mov
dec
mov
popa
std
inc
push
mov
adc
fwait
inc
loope
jecxz
dec
and
pop
jbe
aaa
push
int
sbb
push
ss
xchg
or
enter
mov
scas
and
fwait
jle
xchg
repnz
mov
inc
inc
lods
dec
fwait
ss
jb
ljmp
xor
pop
and
or
aas
aas
mov
dec
aas
es
dec
lods
sub
dec
fwait
bound
ret
inc
test
cmpb
adc
cmpsb
insb
cli
imul
movaps
cld
inc
push
add
test
shlb
mov
jl
lcall
bound
inc
sti
and
scas
adc
test
xor
jnp
xchg
xor
icebp
arpl
push
test
inc
out
jbe
in
push
aas
xchg
jb
push
cltd
scas
adc
sub
ljmp
mov
mov
and
mov
xchg
je
sbb
aaa
repnz
sbb
rcrl
sub
shrb
adc
test
pop
dec
or
inc
js
mov
mov
in
mov
cmc
pop
adc
fistps
bound
xlat
in
push
dec
push
jae
inc
cmp
cmpsb
sbb
push
stc
add
lods
movsl
sub
inc
ljmp
inc
sahf
jnp
and
adc
negb
xor
or
stos
or
pop
add
out
addl
shll
add
frndint
and
dec
js
sbb
test
add
lods
adc
filds
cmpsb
jne
aas
js
aad
xchg
js
xchg
fldl
xor
mov
out
mov
outsl
rorl
add
frstor
test
push
inc
lahf
mov
sbb
lods
adc
lds
inc
adc
iret
sub
insb
dec
aam
dec
pop
add
je
sub
adc
ja
push
andl
jg
push
mov
xlat
push
push
pusha
cwtl
mov
sbb
shlb
ficoms
mov
mov
push
cs
jp
xchg
inc
cmpsl
add
call
out
test
insb
jmp
int
jle
dec
jge
dec
xor
aad
movsb
push
out
fs
jb
sub
or
jl
cli
sub
lds
ja
inc
je
xor
out
cli
insl
lods
out
cmp
lods
scas
cmp
popf
popf
sti
sub
add
cmc
xchg
js
lret
insl
jle
outsb
test
outsl
stos
fstps
mov
daa
jbe
lret
mov
shlb
scas
xor
or
pop
jecxz
call
cli
test
and
es
cld
cmc
jae
roll
or
in
adc
and
sub
ret
push
xor
movsl
fdivrs
mov
sub
insb
fsubrl
cmp
ja
nop
xchg
ret
iret
mov
push
mov
add
xor
push
lock
enter
jbe
inc
cltd
sub
stos
add
xchg
clc
add
dec
dec
lods
mov
and
inc
lock
mov
negb
ret
sub
aaa
in
or
pop
mov
shr
push
lods
mov
sbbb
lock
jns
mov
outsb
xor
scas
or
mov
in
and
imul
mov
int3
ret
aas
movsb
push
movsl
cli
push
jle
test
cmc
mov
push
lods
xor
ss
dec
pop
lods
stos
movsb
jmp
cmpsl
adc
push
cs
mov
ds
lret
dec
incl
scas
aad
push
sub
fxch
xor
or
nop
mov
js
cltd
negl
pcmpgtb
pop
adc
sbb
test
jns
jecxz
lret
cmpsl
roll
or
std
loop
stos
pop
sub
xchg
rorl
mov
imul
push
push
popf
push
jle
outsl
les
xlat
fidivs
ds
and
sbb
jl
pop
shlb
jno
mov
scas
or
movsl
jns
or
sbb
add
hlt
in
jns
jp
shlb
xchg
push
add
sub
inc
xchg
inc
cmpsb
xchg
insl
cmpsb
add
dec
mov
repz
js
insb
scas
jge
add
bound
hlt
and
push
pop
xchg
lahf
xchg
jp
loop
in
aaa
mov
dec
sub
lea
cmp
adc
shlb
mov
js
jns
dec
cmp
lret
pop
mov
pop
rol
clc
fdivrs
stos
dec
loopne
or
dec
cld
jg
dec
popa
loope
bound
invd
sub
pop
and
and
push
loope
test
mov
lds
aad
sbb
leave
inc
mov
sbb
inc
fiadds
nop
xchg
enter
into
andb
popf
mov
data16
subl
pusha
adc
rcr
aam
fcoml
out
cmp
cltd
mov
pushf
stos
scas
ja
or
sbb
push
add
out
jb
enter
sbb
mov
aas
sahf
xchg
xlat
or
mov
popl
cmp
add
sub
testl
mov
pushf
dec
dec
sbb
xchg
pop
mov
add
popa
mov
stos
lea
cld
xlat
sbb
pop
pop
mov
lods
pop
jb
cmpsl
mov
hlt
jbe
push
test
outsl
lds
xor
lock
jge
out
sbb
icebp
stos
nop
push
cs
sarb
fs
fisubrs
ss
lods
mov
push
mov
pop
lods
fucom
ficoml
das
mov
lahf
xor
push
add
fs
or
sbb
jmp
gs
sub
add
sti
jno
mov
mov
cmp
mov
je
out
test
das
repnz
rcll
bound
cltd
adc
cmp
xchg
sti
es
mov
and
push
dec
addl
je
daa
adc
mov
fldt
sub
jne
xchg
outsb
leave
cmc
outsl
add
rcrl
push
popf
mov
faddl
fsubrs
mov
and
cmc
nop
mov
lahf
cmpl
jae
stc
cmp
sarl
adc
mov
adcb
mov
cmp
adc
hlt
fxch
adc
jp
sahf
mov
xchg
mov
pop
sbb
or
or
pusha
cs
sub
lcall
add
sub
fwait
das
mov
push
mov
mov
push
sub
into
sbb
and
jo
sub
test
ficomps
pop
dec
fisttpll
iret
sbb
and
cmpsb
movsb
and
gs
les
ret
adc
jle
fs
scas
add
jno
scas
inc
mov
mov
aam
or
in
addb
je
sub
repnz
loopne
neg
dec
push
push
pusha
jecxz
push
add
pop
mov
push
aad
and
insl
das
ficoml
lods
pminub
aas
enter
push
fucomp
dec
inc
out
test
testl
mov
lock
or
aam
jne
mov
es
mov
test
mov
inc
jge
cmp
jmp
jnp
cmp
sbb
cli
mov
icebp
out
push
into
sub
daa
mov
lahf
mov
popa
fsubl
imul
add
lret
jecxz
jno
dec
push
push
mov
push
jmp
lahf
push
jo
inc
add
lret
dec
sbb
stc
cmp
in
push
adc
and
xchg
pop
jae
mov
in
jle
pop
mov
les
mov
xchg
in
push
dec
insb
cmc
xlat
test
lcall
ds
and
jns
cltd
jns
mov
inc
push
xchg
push
std
push
or
adc
inc
add
xchg
cli
cld
out
loope
push
iret
inc
sar
inc
sub
ror
xor
add
es
pop
mov
add
jns
lods
sub
pop
call
inc
add
cli
sahf
adc
in
mov
mov
mov
aad
xor
into
sbb
fldl
cmp
daa
dec
daa
mov
xor
and
jae
dec
xchg
pop
out
jns
cmp
lea
mov
jnp
jg
pop
ror
hlt
lcall
sti
cmc
push
jns
xchg
and
cs
mov
repnz
mov
push
lock
mov
sub
cwtl
adc
in
mov
dec
jge,pt
add
xor
cmpsl
adc
es
mov
dec
int
dec
push
and
jmp
mov
or
in
sub
fs
ret
dec
dec
cld
xor
push
and
call
out
jns
pop
outsb
mov
xlat
pop
add
sbbb
out
mov
push
cltd
push
dec
add
cmp
repnz
inc
repz
loop
cwtl
dec
or
push
pop
push
jae
stos
xor
popf
dec
sbb
std
stos
push
adc
mov
xor
pushf
icebp
and
stc
mov
adc
adc
pusha
jbe
dec
push
imulb
xchg
mov
gs
add
sub
push
insl
lahf
stos
hlt
test
dec
std
mov
jg
cmp
sahf
add
cmp
cmc
sbb
push
mov
sbb
mov
pusha
cmp
loop
aam
push
xor
inc
push
dec
roll
cmp
loop
or
dec
fsubl
scas
dec
in
adc
ja
or
mov
and
cmpsl
mov
sahf
jp
push
fcomps
xchg
hlt
repz
sub
inc
sub
sub
nop
add
cmp
test
xor
xor
fistps
jne
xor
andb
out
xor
into
mov
in
inc
in
cmp
shlb
jmp
push
pop
push
push
scas
ljmp
mov
sti
cmp
inc
push
mov
mov
pop
shlb
add
pop
lahf
lds
mov
ljmp
mov
pop
xchg
pop
lret
popa
lds
xchg
inc
das
jg
insl
jge
jb
roll
int
enter
cltd
jp
mov
enter
loop
xchg
icebp
je
dec
notl
jb
or
outsb
add
add
cmpsb
add
and
inc
push
icebp
xor
inc
add
insl
mov
sub
in
out
daa
aas
or
xor
arpl
jae
movb
lods
rcll
scas
xor
sbb
mov
lea
jecxz
mov
in
nop
or
sub
cmp
xchg
fmuls
dec
xor
fwait
sub
xchg
lds
idivb
sbb
ret
inc
xchg
bound
mov
movsb
out
or
mov
icebp
sti
push
inc
jg
gs
fsubrp
mov
xor
fcompl
outsb
pop
inc
sbb
loop
add
aas
xlat
cmp
insl
jne
lahf
sub
jl
and
test
mov
and
outsb
ds
add
sbb
lret
inc
push
lret
ljmp
mov
shll
cmp
inc
jmp
mov
ja
out
sub
xchg
and
addr16
test
mov
lcall
dec
cmpsb
inc
hlt
pop
int
outsl
xor
sarl
adc
and
xor
loop
and
aam
scas
pop
pushf
xchg
inc
inc
loopne
sti
scas
inc
dec
xchg
push
out
add
mov
mov
insl
fstpt
pop
into
call
movsl
test
mov
and
js
cmp
push
outsl
ficoml
ja
mov
push
mov
js
adc
dec
and
test
adcb
cmc
ret
mov
or
cmp
ret
pop
sub
inc
shll
xchg
ffree
cmp
sbb
les
imul
add
gs
add
mov
lcall
sub
shr
popa
push
pop
xchg
inc
jno
sbb
mov
jmp
pusha
lahf
stc
sahf
lds
enter
imul
clc
fildll
dec
mov
roll
mov
mov
inc
mov
xchg
arpl
cmp
jg
xor
loop
fists
pushf
loopne
cmp
out
out
adc
shr
loopne
sbb
loope
sahf
jo
cltd
fcoml
push
stos
and
jecxz
mov
jg
dec
es
insl
inc
sub
xor
stc
mov
gs
lcall
cli
mov
pop
rcrl
or
inc
iret
fmull
cli
lock
test
dec
es
lcall
inc
outsb
std
sbb
sbb
sahf
dec
addb
sub
pop
jnp
inc
test
and
mov
or
mov
or
add
mov
and
imul
xchg
and
into
div
xchg
cmp
sti
repz
cmpsb
shlb
xor
or
sbb
ja
adc
mov
fisubl
inc
cmpsl
imul
cmp
daa
dec
mulb
in
push
cmp
fs
pop
in
test
shlb
adc
xor
mov
inc
fistps
pop
fidivl
jno
sub
or
movb
ja
jecxz
or
xchg
sub
mov
jns
mov
add
shrl
cmp
lods
loopne
lahf
inc
and
mov
push
cmpsl
mov
adc
adcl
aam
pop
pop
push
dec
popf
test
out
mov
jae
lds
imul
xchg
push
jmp
leave
lock
push
push
or
lods
mov
into
lds
push
push
add
pop
decb
adc
mov
push
cs
lcall
push
enter
nop
mov
pop
add
js
sbbl
aad
cmc
scas
cmpsb
enter
hlt
cmp
fmull
mov
mov
pushf
mov
xor
cmp
sti
and
arpl
inc
inc
cmp
add
mov
jns
lret
lods
inc
mov
je
outsb
push
adc
lods
iret
mov
cli
sbb
sbb
jne
xchg
pushf
xchg
into
mov
fnstenv
fwait
dec
pop
or
mov
adc
out
pop
xchg
adc
pop
fwait
mov
in
clc
mov
sahf
cwtl
mov
pop
test
jnp
hlt
add
pop
xchg
dec
and
mov
and
dec
in
adc
xchg
dec
xlat
repz
adc
lds
sbb
lock
and
outsl
addr16
mov
mov
js
in
lock
iret
out
test
push
fucomip
add
ret
hlt
cmp
cmp
lds
mov
mov
lea
jnp
xchg
aaa
adc
popa
sub
mov
movsl
mov
cs
dec
and
in
mov
xchg
push
jno
mov
lds
xchg
es
testb
fstpl
mov
cmp
push
push
sub
out
add
cmpsb
jmp
int3
pop
xchg
in
bound
cmp
mull
lret
cmp
bnd
repnz
mov
sarb
cld
insb
fiadds
cmp
cmpl
aaa
jmp
mov
mov
mov
movsb
cltd
bound
mov
xor
cltd
and
jbe
repnz
cwtl
hlt
push
adc
inc
sti
lret
fldt
mov
adc
adc
movsb
lods
inc
cmpsb
inc
jmp
mov
and
movsl
mov
mov
or
loope
sbb
lahf
bound
mov
add
shrb
and
xor
sub
sub
push
sarl
cmpsb
rcll
popf
sbb
in
xor
inc
mov
fwait
jp
adcl
out
fmul
jo
stos
std
cmp
rcll
or
popa
sub
les
mov
jns
jnp
push
adc
jmp
pop
les
insb
jno
add
push
and
dec
pop
push
push
arpl
cmpsl
pop
scas
mov
sub
test
je
adc
imul
adc
jae
mov
mov
dec
mov
xchg
dec
xor
pop
inc
push
and
adc
sub
jb
mov
mov
aad
sbb
add
mov
int
loop
andb
ret
pusha
fiadds
xor
movl
js
or
mov
hlt
jl
les
mov
data16
and
in
inc
les
mov
stos
out
push
cld
add
add
arpl
lock
call
fmuls
testb
cld
mov
inc
pop
leave
mov
enter
dec
add
enter
std
lcall
and
std
das
mov
idivb
cwtl
mov
std
add
mov
jecxz
jl
clc
inc
mov
pop
ds
mov
scas
adc
out
jno
inc
cld
call
pop
add
fstpl
pop
repnz
mov
daa
and
lcall
xchg
pop
imul
mov
jp
mov
fldl
or
sub
stc
xchg
enter
mov
add
adc
mov
dec
in
sub
ret
lock
inc
add
stos
out
xor
push
pop
inc
pop
cmp
mov
push
inc
aaa
lock
xor
push
jge
and
sbb
sti
dec
adc
and
and
aam
pop
xor
test
leave
out
arpl
or
add
sbbl
jae
sub
ss
mov
fs
js
jl,pn
stc
dec
push
mov
push
sbb
cmp
movsl
outsb
lahf
ds
shrl
jge
cld
ss
gs
sub
std
test
adc
pop
push
mov
movsb
enter
call
and
insl
xchg
mov
mov
das
jo
cwtl
pop
xchg
int3
les
jmp
jp
xor
adc
cmp
xor
aaa
or
add
scas
ja
repz
and
shl
and
xchg
cmp
xor
int3
test
xor
xlat
leave
mov
mov
push
or
push
mov
insb
mov
in
int3
mov
dec
notl
shrb
push
in
inc
divb
cmp
add
nop
xchg
bound
movsb
adc
loop
jno
xor
sete
fcompl
inc
int3
sub
sub
jbe
push
cli
xchg
fsubl
lds
pop
scas
add
jae
sub
mov
gs
inc
lock
lock
fsubl
jno
cmpb
xor
or
adc
lcall
mov
xchg
pop
loop
mov
das
xor
std
in
sbb
inc
mov
loopne
in
cmp
das
adc
sbb
fmull
pushf
sub
test
jl
sbbl
mov
aas
and
call
jge
gs
dec
ss
push
inc
xlat
movsl
jmp
pop
cmp
in
cmp
popa
mov
in
lea
imul
jnp
xor
stos
pop
mov
inc
jmp
test
sub
outsb
rcrl
aad
add
bound
xchg
insb
or
xor
cmp
add
jns
and
inc
dec
mov
aad
in
popa
ljmp
adc
mov
rcrl
inc
mov
add
xchg
jnp
mov
and
decb
push
and
jl
cmp
nop
pop
mov
push
sbb
cmp
sarl
arpl
popa
ja
cmp
xchg
insl
sub
mov
pop
lods
stc
push
iret
int3
repz
inc
sub
or
out
sbb
cli
mov
lahf
jg
lret
dec
sub
scas
push
shl
cmc
pop
sbb
icebp
mov
push
mov
es
sbb
jnp
cmpsl
pop
cmp
nop
sbbl
out
jb
jae
mov
bnd
sbb
insl
mov
mov
orb
mov
jbe
push
bnd
cs
jnp
add
sub
adc
adc
int3
xor
outsb
clc
cli
sub
fsubrs
adc
mov
sub
sti
lods
inc
stos
shlb
shl
pop
xor
scas
fldcw
cs
out
mov
loop
pop
test
sub
xor
sbb
fstps
mov
divb
fisubrs
call
pop
movsb
inc
std
adc
les
dec
mov
pop
mov
jmp
push
mov
sub
js
fdivrl
aas
inc
inc
push
outsb
mov
into
mov
add
lcall
mov
cmp
orb
insb
pushl
cmp
nop
aad
dec
xchg
push
xlat
pop
cli
fldcw
mov
adc
rclb
and
jg
pop
jns
lock
bound
cwtl
gs
mov
add
jl
sub
mov
push
mov
mov
cltd
cs
sbb
lods
mov
dec
mov
fcmovbe
adc
sbb
mov
loopne,pn
insl
imul
popf
and
cmc
pop
jo
stos
stc
add
movsb
out
shlb
out
sbb
adc
or
pop
lcall
xor
cmp
fs
mov
and
aaa
pop
into
push
stos
xlat
lahf
mov
and
lea
mov
lods
aad
aaa
andb
or
arpl
shrl
jb
push
sbb
lret
mov
sub
jns
jb
int
dec
popf
cs
push
std
jno
jecxz
shlb
in
aaa
jno
test
dec
lret
inc
aas
xchg
iret
jecxz
imul
pop
jge
push
jb
shr
sub
arpl
xchg
push
ss
mov
or
dec
sub
int
adc
jecxz
add
aad
addr16
xchg
xor
pop
in
scas
pushf
sub
push
hlt
sbb
dec
test
clc
mov
inc
push
mov
mov
pop
add
loopne
dec
cmpsl
adc
lret
push
lahf
lret
icebp
divl
sbb
scas
adc
cmpsl
movsb
shlb
dec
daa
mov
and
mov
test
andl
test
sbb
lret
jno
jl
shr
adc
sub
pusha
icebp
hlt
int
xor
pop
jnp
pop
adc
xorl
repnz
and
push
or
outsb
push
mov
cmpsb
lahf
push
stc
lea
nop
xchg
scas
mov
push
loope
shrb
in
test
jno
fcoml
and
sub
sti
cmp
icebp
jle
outsb
jecxz
in
subps
cwtl
gs
push
jp
pop
fisttpll
sbb
inc
lock
fidivl
sbb
imul
sahf
dec
and
jge
mov
jno
mov
sbb
aas
js
jg
insl
sub
fwait
sub
mov
les
outsb
xchg
in
ss
cld
xchg
lret
cltd
cltd
jnp
jb
xor
mov
sub
loope
hlt
addr16
fisubs
insl
sbb
lret
fiaddl
push
cli
incl
push
int
push
insb
daa
and
ds
adc
fwait
push
ja
pop
aad
pop
nop
jmp
lods
lods
add
int
and
sub
sub
adc
xchg
jmp
or
jno
push
in
mov
push
pop
adc
lods
or
sub
mov
sub
rol
test
sub
xchg
fildl
pop
xchg
mov
cmpsb
inc
mov
call
sahf
int
push
icebp
mov
test
push
mov
mov
gs
xor
shrb
and
mov
fs
or
pop
xor
sbb
call
dec
pop
add
mov
xor
inc
fisttps
lcall
sarb
shrl
push
xor
fucomip
jl
mov
add
subl
movl
mov
lahf
sub
aas
test
mov
imul
fwait
cmpsl
sbb
jge
fsubs
add
aas
rorl
push
pop
clc
fcomps
lods
std
sbb
scas
into
push
outsb
das
push
cld
or
ja
call
and
arpl
iret
and
outsb
aas
test
lods
or
xor
int3
ss
and
pop
xchg
mov
adc
test
cmp
popa
stos
lods
loop
bts
enter
rorb
lock
pop
add
sbb
adc
sbbb
imul
jmp
dec
inc
pop
jg
add
pop
sub
add
mov
jns
xor
jae
mov
pop
dec
pop
xchg
adc
jecxz
ljmp
jnp
nop
sahf
js
or
dec
xchg
divb
pop
sub
pop
mov
das
adc
shlb
mov
push
mov
popf
jns
popa
fisubs
pop
jno
jne
mov
cltd
jl
push
movsl
les
sbb
mov
sbb
aam
and
pop
pushf
lret
push
add
mull
jbe
das
call
test
and
mov
arpl
cmpsl
scas
xchg
and
inc
sub
xchg
pop
test
mov
aaa
bswap
inc
xor
mov
jg
xor
andb
outsl
nop
sub
std
sub
xor
sub
xor
or
leave
mov
jne
lahf
cmc
mull
push
loop
inc
or
shlb
addl
push
jp
xor
pop
dec
into
pushf
call
fs
sub
or
popa
xchg
push
sub
mov
fidivl
sub
mov
xchg
jnp
adc
jae
cmp
fnstsw
scas
pop
push
insb
jle
test
aaa
xchg
adc
int
stc
fs
jl
mov
ret
icebp
movsb
arpl
mov
cwtl
sbb
xchg
pushf
xchg
data16
xchg
jo
fbld
lret
jge
fisubrs
std
out
or
push
imul
inc
loopne
push
rolb
rolb
pop
imul
fdivl
xchg
inc
iret
gs
jnp
outsl
out
dec
xchg
and
fstpt
mov
or
or
inc
pushf
fildll
sub
lahf
and
cmp
inc
dec
sbb
outsl
lcall
pop
jae
add
mov
and
cmpsl
nop
mov
xchg
push
and
test
sub
or
xchg
push
idivb
xchg
insl
add
pop
gs
popf
mov
stos
pop
stos
pushf
add
cmpsb
sub
push
in
add
fstpt
cli
cwtl
test
cmp
xor
iret
cmp
mov
push
push
shl
push
inc
xor
fchs
add
jp
loopne
or
rcl
loope
add
fs
push
pop
jge
dec
int3
mov
inc
out
ja
mov
movsl
fists
push
popa
ljmp
push
daa
lock
dec
cmp
or
mov
mov
aad
clc
daa
test
popa
add
ror
js
mov
inc
mov
dec
lock
pop
das
enter
sbb
or
fildl
pop
movsb
push
pusha
add
push
iret
in
repz
dec
nop
add
lods
daa
pop
loopne
jmp
stos
jnp
int3
xlat
outsl
inc
mov
pop
xchg
xchg
repnz
and
or
rcrb
jno
rolb
das
lods
out
outsl
sbb
mov
inc
cmp
bextr
jne
dec
mov
xor
push
inc
sbb
repnz
sub
xor
and
insl
pop
mov
lods
xchg
imul
pusha
out
lahf
inc
incl
adc
inc
and
call
push
lods
aad
mov
sbb
push
add
jns
adc
dec
mov
jecxz
fs
out
daa
stos
mov
adc
fidivl
mov
dec
mov
std
out
repz
add
add
fistps
dec
std
popa
adc
repz
repnz
mov
popa
lods
js
pop
mov
cld
jp
push
or
mov
ret
push
cltd
xlat
mov
pop
ret
pusha
pushf
ret
daa
imul
fnsave
add
lret
adc
int
int
inc
push
sub
fstps
pushf
pusha
divb
shl
xacquire
jecxz
sub
stos
outsl
cmp
adc
or
jg
add
sti
incl
pop
mov
mov
bnd
scas
xor
dec
daa
xchg
inc
jge
push
pop
dec
repnz
sub
scas
pusha
insl
xor
jmp
jns
mov
shrl
rolb
mov
popf
adc
pushf
mov
mov
ret
and
jg,pn
arpl
movsl
jmp
leave
aam
lahf
iret
sbb
outsb
or
and
adc
and
xlat
mov
shl
jne
out
fistpl
jl
loop
jg
aas
insl
pushf
jmp
xlat
cmp
test
into
cmp
inc
pop
or
sbb
ja
lock
lahf
ja
mov
jmp
addr16
and
mov
jbe
xor
lcall
jno
dec
mov
shll
sbb
div
popa
shl
pop
jp
dec
xrelease
movsb
in
pusha
out
pop
xor
mov
push
repnz
push
sbb
mov
les
inc
clc
mov
cmp
mov
pop
lea
xchg
popw
adc
iret
lds
mov
xor
insb
inc
popf
add
xor
test
sbb
inc
mov
pop
lock
ss
cmp
sbb
xor
lds
or
jne
popf
fs
outsb
clc
xor
lret
sub
mov
pop
rorb
pop
in
jle
inc
pop
sarl
aaa
fcomps
cs
movsb
leave
inc
and
sub
cld
or
outsb
sahf
mov
sbb
aad
or
mov
aas
sbb
mov
aad
push
inc
loope
cltd
sbb
rcrl
subl
xor
stc
jg
out
iret
sbbl
in
xchg
mov
sub
bound
jns
inc
mov
mov
jo
sbb
sbb
lret
mov
xchg
in
lea
dec
rorl
push
das
cmpsb
cwtl
int
ss
out
divl
aas
xchg
out
dec
outsb
mov
pop
push
fisttpll
push
in
shlb
mov
xchg
xorl
pop
jno
rclb
sbb
mov
lds
lods
mov
mov
xchg
lods
ret
xchg
rcl
and
add
push
mov
rolb
js
jle
xchg
and
inc
mov
pop
and
sub
mov
jge
add
mov
arpl
adc
imul
xchg
aam
lds
cld
outsl
adc
xlat
js
jno
and
mov
mov
test
sbb
inc
or
test
loope
sbb
sbb
or
rcl
pop
xor
push
adc
fdivl
push
or
xchg
out
scas
jp
outsl
jbe
hlt
arpl
jbe
push
mov
add
push
mov
divb
push
lret
jmp
psubusb
inc
out
adc
repnz
loopne
out
pop
dec
jg
push
clc
out
cmp
mov
sbb
loopne
addl
ret
test
or
xchg
int
pop
jmp
daa
or
pop
add
mov
insb
nop
push
lahf
push
addr16
cs
mov
mov
dec
sbb
jg
mov
outsb
cmpsl
imul
pop
adc
xor
out
mov
imul
or
and
jle
cmc
pop
rorb
add
and
sub
adcb
mov
cmp
jle
mov
xor
test
sub
test
xor
in
mov
ds
sbb
movsl
add
movsb
fdivrl
jne
and
jns
push
or
insb
xor
inc
lahf
sbb
divb
or
insb
lcall
jge
or
es
inc
pop
xchg
mov
mov
iret
pop
adc
cmp
sahf
pop
and
jle
inc
push
mov
lahf
sbbb
imul
jl
push
or
dec
in
out
bound
outsb
sub
xor
movsb
sahf
dec
push
sub
pop
mov
mov
int3
js
sbb
mov
fistl
mov
jns
pop
push
xor
mov
movsb
sub
xor
aaa
dec
lds
cltd
sbb
jne
stos
orb
mov
pop
ljmp
and
mov
and
adc
jl
idiv
inc
cmpl
shrl
mov
inc
dec
jg
outsl
in
push
xor
pushf
int
jl
clc
mov
adc
dec
movsl
dec
out
push
in
sahf
mov
mov
fwait
jbe
insl
or
adc
into
roll
and
mov
or
repnz
outsl
and
mov
xor
or
xor
push
and
sbb
xor
inc
lret
and
enter
adc
and
xchg
xchg
or
inc
enter
xor
adc
push
cltd
push
xor
pop
fistl
fcmove
lret
cmp
stc
dec
xchg
aaa
clc
stc
stos
clc
cwtl
cmp
int
sub
cwtl
dec
push
rclb
sahf
mov
pop
shr
jmp
sub
and
imul
push
push
stos
imul
jae
pop
push
mov
movsl
dec
jg
and
push
scas
jne
leave
push
movsl
es
int3
not
mov
push
sbbb
jmp
mov
call
and
rep
xchg
les
mov
push
cmp
mov
add
pop
push
ret
or
bound
movsl
push
into
divb
fldcw
cmp
mov
loop
xchg
xchg
mov
into
pop
or
add
outsl
cltd
or
sub
lods
cmp
stos
pusha
mov
cmp
jne
mov
sbb
jae
jmp
push
fnstcw
in
mov
adc
pop
sub
sub
mov
mov
xchg
iret
cmpsl
adc
xchg
pop
xchg
or
ljmp
into
push
in
add
mov
push
ljmp
cltd
in
imulb
lret
int3
mov
divb
and
jns
mov
xchg
loop
sub
rol
and
movsl
pop
and
or
in
fidivs
aam
sub
aas
fnstcw
xchg
lahf
in
cmpsl
and
xor
hlt
inc
mov
push
sbb
inc
fcompl
jecxz
pop
clc
cld
and
into
and
mov
out
adc
jo
mov
fs
into
add
mov
or
xchg
adcb
cmpsb
mov
bound
push
cmp
fs
or
mov
cmp
dec
jge
adc
jecxz
dec
repnz
pushf
mov
mov
cmpsl
arpl
add
mov
pushf
dec
push
or
or
add
inc
outsb
sub
outsl
xchg
shll
adc
es
mov
push
and
add
ds
fs
and
lds
addr16
or
imul
rclb
pushf
mov
or
mov
repz
adc
jnp
cmpsb
paddd
push
push
stos
mov
inc
or
popf
and
jmp
and
inc
gs
repz
inc
mul
pop
fs
add
xor
mov
xor
xchg
data16
pop
into
add
dec
dec
sub
gs
ja
rorb
dec
xor
mov
aad
adcl
dec
push
jbe
std
and
cli
adc
es
adc
insl
popf
cmp
push
xchg
cmp
fildl
jne
jmp
pop
in
inc
mov
aam
pop
adc
dec
imul
cld
outsb
cmp
lds
push
ret
popf
xor
sbb
andb
jge
in
insl
rcr
sbb
insb
cmp
dec
enter
inc
lods
xchg
sbb
inc
in
ljmp
and
popa
arpl
shl
out
psubd
lock
jmp
mov
int3
xchg
or
jmp
jnp
sub
movsl
in
jnp
mov
or
xchg
dec
pop
or
imul
sub
arpl
insl
inc
dec
fadd
or
adc
ljmp
cld
push
and
outsl
lds
mov
jp
scas
bnd
mov
shll
dec
shlb
jg
xor
cmp
in
ror
cmp
outsl
fidivs
fs
jbe
in
arpl
mov
clc
orl
jecxz
xor
jo
movsl
cwtl
idivb
add
popa
jbe
xor
sbb
adc
cs
and
sbb
std
jne
retw
sbb
cld
mov
xor
outsb
test
sub
xchg
jbe
jecxz
fisubl
cmpsl
addb
adc
sub
adc
aas
xor
push
mov
cltd
xchg
lock
cwtl
ss
mov
sbb
add
jecxz
test
fwait
ret
scas
dec
sti
sbb
cmc
mov
cmc
add
fcmovu
push
push
mov
data16
mov
cmp
xor
push
into
int
cmp
clc
and
iret
mov
adc
adc
mov
popf
jecxz
cld
enter
lods
or
aas
mov
lods
adc
jae
out
mov
imul
rcrl
in
inc
mov
push
pop
inc
call
push
dec
mov
adc
cmp
aam
xchg
out
inc
pop
adc
pushf
inc
push
xor
xlat
push
jnp
push
sbb
mov
lret
loop
ret
lods
rcl
mov
pop
jp
test
xor
cmc
add
mov
scas
les
ret
jnp
test
mov
out
cwtl
push
cmp
repz
mov
sub
mov
arpl
mov
adcb
mov
mov
adc
xchg
rcrl
xlat
test
mov
enter
test
pushf
add
lds
pop
jo
pop
xor
loope
mov
pop
or
cmpsb
ljmp
fsubrl
jnp
test
mov
ja
or
jo
insl
mov
daa
adc
neg
bound
in
pop
push
mov
jle
lods
lahf
or
fs
dec
subl
arpl
mov
jnp
lret
std
roll
xchg
xchg
mov
cmpsl
mov
std
push
subb
inc
ret
jg
sbb
test
sub
in
cs
jp
sahf
push
mov
int
jg
insb
imulb
dec
in
cmp
lods
dec
mov
cmp
xchg
pop
cmpxchg
std
sbb
ret
std
pop
adc
jge
inc
adc
sbb
dec
bound
pop
scas
push
inc
xchg
mov
pop
inc
enter
mov
addr16
mov
sub
pop
jl
jecxz
xchg
cmp
xchg
cli
and
inc
pop
aaa
repz
mov
out
push
push
int
scas
movsl
sub
sti
mov
inc
scas
xlat
insb
sub
adcl
xor
in
mov
btl
aas
or
or
jge
shl
es
ds
popa
cmp
leave
push
mov
popf
mov
popf
mov
mov
cltd
and
adc
sub
shl
xchg
test
pusha
mov
fisubl
push
cmp
pop
xchg
jbe
ret
cwtl
aas
or
push
mov
lods
mov
push
jno
test
mov
popf
cmp
push
loope
ljmp
jo
gs
pop
frstor
xchg
mov
in
mov
inc
xchg
mov
adc
aas
dec
enter
ficoms
and
sub
stos
inc
or
mov
and
mov
pop
xlat
and
mov
pop
push
cmpsb
cmc
test
xchg
sti
xlat
pop
sub
ljmp
int
popa
cltd
adc
jnp
out
jge
lret
aad
mov
bound
gs
mov
cmpsb
testw
jecxz
mov
cmpsb
testl
cmpsb
pop
fstl
popf
mov
mov
movsb
aas
push
mov
inc
mov
lea
push
push
mov
push
cltd
sahf
xchg
cmovp
xor
pop
sub
fadd
loopne
xchg
pushf
and
lret
jp
int3
cmp
push
dec
add
jmp
fbstp
std
jecxz
cmp
adc
pop
sbb
mov
std
pop
stos
jle
loopne
mov
pop
sub
push
pop
idivl
xor
arpl
mov
call
cmpsb
fistpl
adc
xor
and
push
xor
lods
ljmp
cmp
lods
dec
addr16
hlt
jecxz
sbb
in
and
js
mov
cmp
jnp
fs
es
es
aad
mov
insb
jp
in
outsl
sbb
sub
pop
push
pop
mov
jae
jle
es
sti
pop
pushf
pop
jl
dec
jg
xor
dec
shrb
es
xchg
pop
ss
push
jo
push
stos
rorl
mov
test
adc
addr16
and
cmp
in
jl
testb
jp
imul
inc
pop
sub
sub
sbb
mov
nop
inc
outsb
dec
cmpsl
xchg
enter
out
repnz
xor
testb
adc
lods
outsb
jp
xor
and
out
leave
shrl
out
jae
sbbb
mov
cmp
jp
pop
pop
sbb
mov
push
outsl
lea
mov
addr16
xchg
test
outsb
outsl
movsl
mov
pop
and
cs
loope
cmp
sbb
call
xchg
or
dec
shlb
movsb
and
dec
in
imul
add
lcall
faddl
ret
stos
aas
outsb
xchg
mov
jp
push
insl
in
sbb
cli
inc
xchg
push
repz
fdivrl
loop
jecxz
pusha
insl
xchg
imul
lea
mov
pop
scas
mov
dec
adc
jae
jbe
mov
push
mov
adc
lret
mov
adc
adc
adc
mov
mov
jecxz
mov
popa
stos
cmp
mov
adc
sub
dec
push
pop
xorb
xor
xor
enter
xor
push
imul
sahf
dec
into
int
test
dec
andb
loop
mov
movsb
loopne
jnp
adc
mov
fsts
lock
in
jg
icebp
jbe
dec
aad
fwait
and
addr16
test
inc
cmp
aam
pop
lock
and
adc
mov
jne
hlt
ja
in
inc
int3
into
repnz
rolb
inc
js
mov
ja
dec
ret
leave
xor
daa
dec
pop
mov
xor
ljmp
cmp
jno
sub
jnp
jbe
push
sbb
aad
jmp
movb
mov
or
sbb
cltd
push
cmpsw
imul
sti
mov
or
fdivl
movsl
push
xchg
pop
out
sbb
in
mov
imul
push
sbb
cmp
ret
or
test
loopne
mov
lods
hlt
movsb
and
clc
jo
and
and
int
shl
push
ljmp
repz
jmp
repnz
mov
mov
call
aam
sub
dec
jbe
cwtl
dec
jp
add
add
fiaddl
call
sbb
sbb
dec
outsb
mov
mov
mov
dec
pop
jle
lret
jecxz
addl
sbb
pop
es
sbb
dec
mov
insb
in
adc
jns
into
xchg
fldcw
int
nop
shlb
imul
in
lods
decl
gs
cmc
xor
std
add
jnp
jg
lods
push
mov
adc
dec
je
test
sarb
mov
add
and
sahf
insl
in
notb
fs
fdivrl
js,pn
pop
xchg
popf
jl
cli
jecxz
adc
sbb
mov
insl
or
dec
jae
lods
and
cmpsb
push
mov
pop
rclb
mov
mov
aam
and
scas
ret
push
mov
add
xor
push
pop
dec
cld
adc
pop
inc
repnz
mov
sbb
xchg
out
loope
inc
add
jb
mov
test
xor
lods
lods
xor
in
push
ret
xor
xor
insl
in
gs
push
cmc
and
push
push
aaa
mov
add
out
loope
mov
je
fwait
and
scas
inc
ficoml
pop
incl
iret
sahf
movsb
sub
push
gs
mov
cmc
out
xor
inc
sbb
sahf
add
xchg
mov
fs
mov
test
les
mov
mov
mov
hlt
push
xchg
loope
insb
xlat
pushf
fsubrs
scas
stc
test
xchg
test
out
pop
ja
sbb
push
clc
stos
jmp
push
sub
cmp
jecxz
lahf
and
stos
popf
into
nop
sahf
adc
ja
jne
gs
jmp
mov
sbb
xor
orb
sbb
jne
and
iret
ss
xor
test
fisubs
es
jbe
pop
jne
mov
into
ds
dec
stos
addr16
mov
outsb
into
in
add
sbb
mov
std
mov
jno
dec
rolb
xlat
xchg
jbe
pushf
idiv
scas
into
pop
ret
sbb
mov
pop
adc
pusha
inc
dec
adc
mov
shlb
test
repnz
lods
mov
mov
stos
ss
pushf
divl
cmp
or
repz
in
jl
jnp
or
test
idiv
add
not
hlt
jo
mov
clc
cmp
jae
xchg
std
cmp
fadds
mov
xchg
mov
jne
mov
push
insb
mov
aaa
dec
test
xchg
xchg
mov
arpl
sbb
scas
leave
xchg
sub
push
add
jle
fs
insl
sbb
icebp
fs
inc
lods
and
hlt
inc
lret
cld
inc
xor
inc
or
orb
sbb
int3
xlat
es
push
mov
inc
clc
add
arpl
mov
sub
push
repnz
mov
or
jne
aas
std
inc
sti
lds
pop
dec
arpl
fisubl
push
xor
ficoml
cs
add
sub
mov
stos
fsubs
adc
jecxz
test
lock
mov
cmpsb
pop
ja
add
scas
cmp
loop
and
mov
mov
add
inc
leave
movsl
arpl
lea
in
cli
popl
sahf
mov
ljmp
add
hlt
rcrl
loop
outsb
adc
test
or
test
mov
or
xchg
daa
sub
xchg
pop
sub
pop
aad
mov
fisttpl
movsl
mov
or
repz
push
jl
dec
and
cmp
jo
cmpsb
testb
mov
mov
or
lcall
mov
ret
lock
testb
mov
jl
mov
push
and
shrb
inc
sbb
mov
das
in
sahf
fs
push
pop
cmpsb
xchg
rolb
xor
push
sbb
or
dec
imul
jns
divl
pop
adc
fs
xor
jg
sti
sti
in
mov
or
push
dec
fwait
fwait
mov
in
ja
adc
stc
sbb
es
and
outsl
jg
and
scas
jg
add
mov
push
out
nop
enter
int
push
or
loopne
xchg
push
data16
dec
xor
adc
jne
jb
push
pop
mov
adc
cmpsb
sarb
paddsw
jge
in
adc
cmpsl
shlb
scas
and
jns
out
mov
addr16
sbb
outsl
jo
cmp
movsl
in
or
orb
testl
add
dec
mov
push
and
bound
xchg
enter
loope
cltd
cmp
sub
push
fldcw
loopne
jge
adc
adc
lea
and
in
push
lcall
or
push
add
lods
xorl
jmp
frstor
mov
cli
movsb
or
addr16
out
out
mov
or
cmp
sbb
or
mov
inc
sbb
cli
pop
adc
dec
mov
pop
insb
je
and
and
add
fs
xchg
ret
iret
les
jbe
xchg
xor
sahf
or
outsb
pushf
mov
repz
pop
daa
inc
lcall
and
push
icebp
pop
call
ja
adc
jno
aam
jne
inc
pop
dec
mov
push
pop
or
pop
clc
mov
mov
imul
xchg
mov
push
add
add
lea
fimuls
std
mov
test
insl
jns
pushf
push
call
pusha
push
mov
push
mov
inc
sub
mov
adc
pop
jmp
xchg
dec
jmp
test
or
mov
int
push
cmc
xor
dec
xlat
sti
push
push
push
jg
mov
jbe
jb
cmp
inc
loop
fidivrl
jae
jb
push
je
sbb
outsl
or
mov
mov
or
push
das
fnstcw
or
sbb
repz
mov
dec
sbb
cmp
or
jo
mov
addr16
lcall
cs
test
xor
sbb
cmpsl
jno
repz
ss
lcall
divl
sahf
gs
push
sub
test
mov
jne
daa
shrb
adc
cmc
push
mov
aam
fstpl
jmp
xor
xchg
shlb
pop
add
sbb
push
mov
jmp
mov
or
or
inc
push
lock
lret
inc
pop
push
push
pop
fstl
scas
inc
adc
js
pusha
loop
adc
into
fistl
aad
and
mov
push
lods
adc
ja
mov
or
adc
pop
jnp
mov
movsl
cltd
jmp
dec
repz
jno
adc
and
push
in
push
pop
fsubl
mov
jp
push
add
pop
and
xchg
fwait
adc
test
fcomp
outsl
cltd
pop
jbe
adc
jb
cmp
sbb
dec
push
and
fidivl
mov
add
adc
imul
lret
jno
inc
xor
arpl
dec
cmpsl
push
jmp
mov
cltd
jne,pt
cltd
fcompl
mov
push
outsl
cmp
pop
push
add
mov
fdivl
sub
inc
arpl
add
xor
dec
imul
xor
dec
std
xor
mov
hlt
sub
out
arpl
mov
in
mov
cmpsb
and
ja
jnp
ja
xchg
push
mov
pop
aad
push
lcall
mov
mov
lret
dec
es
jge
lcall
cmpsb
mov
mov
in
pusha
lret
movl
or
lret
push
xchg
push
scas
call
stos
je
lods
cmp
lcall
outsb
mov
dec
and
push
fwait
mov
movq
es
sub
jno
or
cltd
cmp
mov
fisubl
push
inc
mov
and
or
sub
imul
shr
push
cltd
enter
jp
dec
ljmp
pushf
in
pop
movsl
and
loop
aam
inc
mov
arpl
daa
pop
lock
jae
xchg
daa
aaa
aad
filds
lret
mov
adcl
imul
movd
movsb
jne
inc
adc
fdivrl
add
shl
pop
xlat
inc
push
in
jbe
xchg
scas
jb
sbb
outsl
xchg
pop
lahf
xor
push
lds
fdivp
in
stos
ret
das
jae
ljmp
mov
jmp
imul
mov
fucom
les
inc
insb
movb
es
dec
pop
mov
xchg
loope
in
pop
push
ret
or
pushf
mov
push
xchg
ss
sti
sub
mov
sbb
xchg
sub
scas
stos
in
testb
movsb
mov
sti
push
shll
or
pop
push
imul
inc
insb
arpl
inc
sub
jb
daa
jmp
in
sub
adc
fsubr
xchg
sbb
mov
pop
test
imul
inc
lea
and
add
pop
ds
dec
scas
pop
xor
jl
add
out
test
cli
into
push
sbb
std
cmp
ret
cs
jnp
mov
pop
inc
xchg
hlt
adc
cwtl
bound
adc
mov
stc
push
jge
ss
int3
cmp
test
adc
dec
sbb
inc
add
sub
push
mov
sti
or
insb
adc
sti
repz
sahf
ss
rclb
clc
lret
cmp
jecxz
out
aam
lock
pushf
cli
enter
xor
popa
xlat
mov
rcr
push
stos
lock
lods
shrl
jo
imul
jne
or
out
repnz
int
xlat
insb
mov
jo
mov
fildl
aad
or
sbb
addr16
adc
cmpsb
lock
lcall
daa
adc
shl
mov
and
fisubrl
adc
fsubs
insb
mov
test
fcoms
push
inc
mov
push
data16
inc
xor
pop
es
pop
and
dec
xor
ljmp
and
push
jno
push
mov
out
or
cmp
inc
lds
scas
shlb
fiadds
mov
sarl
lret
pop
sarb
lods
push
xor
mov
add
mov
jns
cli
sbb
jne
dec
xchg
jmp
xchg
inc
int
sti
pop
pop
scas
cmp
arpl
rcr
xchg
imul
jmp
lahf
sbb
cmpsb
mov
mov
or
rcrl
add
xchg
cltd
and
pushf
lock
fs
pop
mov
inc
stos
lcall
out
stc
sbb
jl
push
cmpsl
add
shlb
clc
dec
cmp
xor
imul
scas
cmpsl
dec
mov
xchg
pusha
sub
incb
mov
aad
inc
mov
cmp
sbb
push
dec
add
jne
loop
daa
std
out
scas
sbb
pop
sbb
mov
das
icebp
add
jmp
sbb
sbb
or
xor
xlat
je
negl
push
shl
push
mov
int3
xor
pop
mov
in
cmpb
popf
add
jae
pop
push
clc
push
scas
mov
and
pop
in
mov
dec
cmpsb
xor
pop
sbb
rcrl
add
inc
test
lock
pop
in
adc
pop
or
dec
lret
loopne
out
dec
lcall
inc
je
movsl
mov
aas
sub
comiss
dec
into
push
nop
sub
dec
shrb
andb
cs
outsl
cs
movsb
dec
imul
adc
jp
inc
scas
test
or
stos
js
mov
pop
fildll
jge,pt
sbb
fisubl
outsb
cmp
imul
loopne
aas
xchg
push
mov
pop
mov
shlb
jns
and
adc
cmp
xor
int
ret
adc
cmc
faddl
and
lret
es
pop
jnp
push
aad
aaa
push
movsb
xor
push
xor
inc
jp
xchg
in
mov
loop
dec
sbb
cmp
lds
xor
jne
lcall
lods
cmp
mov
adc
cli
jg
jl
cs
fwait
test
cld
add
add
ljmp
int
inc
fcmovbe
mov
sbb
cli
fmuls
icebp
jbe
push
mov
add
lahf
jne
shll
scas
adc
testb
in
ljmp
mov
aaa
pusha
cmpsb
in
loope
dec
negl
inc
jmp
push
adc
xor
xchg
pushf
ljmp
xlat
addr16
leave
mov
xchg
mov
or
setae
adc
and
les
imul
cmpsb
pushf
cmpsb
arpl
push
inc
das
test
lds
xchg
dec
movl
xor
out
repz
pushf
les
test
xchg
and
test
mov
and
or
mov
mov
shrl
int
push
in
jne
mov
insl
dec
mov
pop
shll
mov
fistl
movsb
les
shl
jl
outsb
xchg
inc
pop
in
or
pop
sub
loopne
inc
adc
cmc
push
lods
fisttps
sub
aaa
loop,pt
je
int3
or
sbb
pushf
arpl
shrl
sbb
sbb
mov
das
outsl
adc
push
dec
mov
sbb
jl
xlat
pop
fndisi(8087
call
sbb
jl
cmpsl
xor
scas
sbb
mov
cmpsb
js
mov
in
mulb
mov
dec
mov
daa
divb
sarb
xlat
in
adc
inc
shlb
sub
fistps
pushl
mov
mov
imul
cmp
xor
lret
sbb
push
sub
pop
or
pop
fwait
in
xor
loop
or
jl
xchg
cmpl
cmpsl
test
mov
imul
insb
pop
test
test
loopne
jp
jae
inc
lock
or
sbb
jp
cmp
xor
jb
stos
mov
fsubr
dec
fcompl
loope
mov
pop
xorb
mov
jns
pop
icebp
es
sbb
mov
shll
or
mov
pop
outsl
ja
mov
inc
sbb
stc
and
shl
std
and
xchg
mov
ret
fidivs
push
cld
sbb
mov
jg
mov
in
jl
mov
jmp
gs
test
jge
sarb
mov
xor
inc
faddl
mov
pop
jmp
mov
mov
inc
cld
xchg
repz
stos
xor
adc
or
cltd
rcrb
sub
sbb
and
notb
xor
out
shlb
mov
in
adc
jb
xchg
add
loope
mov
das
jns
jge
leave
sbb
insl
dec
pop
outsb
or
cltd
cld
or
or
test
xor
imul
or
push
xor
sar
xchg
add
dec
out
inc
insb
loop
in
jg
mov
sub
sbb
sub
inc
arpl
inc
xorl
rcll
repz
ljmp
jno
fsubl
and
cmpsb
jmp
sti
sbb
icebp
jg
add
push
inc
paddusw
imul
or
push
mov
push
xchg
jg
loope
enter
sub
in
pusha
mov
push
push
mov
bound
xchg
inc
dec
adc
xchg
xchg
lahf
sbb
and
fdivrs
loopne
push
ljmp
outsl
sub
loop
scas
mov
xchg
or
pop
iret
in
jecxz
imul
add
or
mov
lret
pop
ds
inc
mov
inc
pop
stos
or
daa
jne
mov
jecxz
jnp
shlb
dec
movl
mov
mov
aas
ret
pop
push
dec
sub
loopne
fisubl
pop
iret
push
mov
mov
and
orl
pop
and
inc
cmpsb
arpl
test
pop
int3
pushf
add
sbb
scas
pusha
push
outsl
mov
mov
call
aad
push
lock
das
push
daa
add
movl
push
and
pop
xor
sub
movsw
cmc
fcmovnu
rorl
mov
and
or
cmpsl
repz
jae
push
shrl
and
ds
fnstsw
sub
jge
add
and
aam
pop
xchg
lcall
out
jbe
sbb
pusha
inc
pop
mov
or
and
and
shrb
pop
mov
loope
clc
adc
push
test
sarl
mov
pop
fs
jecxz
pop
icebp
test
mulb
jle
sarb
lahf
bound
push
shrb
into
push
mov
mov
pop
mov
add
pand
xor
ss
mov
cmc
xchg
adc
mov
dec
jne
cli
stc
pop
pop
sbb
pop
scas
inc
in
jmp
call
dec
xchg
mov
out
jp
sti
scas
dec
xor
sbb
loopne
or
mov
xchg
popf
addr16
sub
push
mov
mov
pop
les
in
add
lret
stc
mov
inc
and
sti
push
jno
jle
aaa
aad
sub
stos
ds
inc
lret
icebp
dec
push
test
cld
push
test
and
sbb
xlat
test
aaa
jecxz
jno
vmwrite
shlb
xor
xchg
dec
pushf
add
cmp
sub
repz
sarb
mov
push
fdivs
xor
out
ja
pop
cmp
push
jp
push
movsl
les
xor
adc
mov
out
faddp
gs
aam
mov
in
out
mov
pop
scas
sub
pusha
add
mov
shl
mov
lock
hlt
notl
int
mov
sub
dec
sahf
dec
and
adc
pop
push
scas
add
lret
ja
and
lock
dec
frstor
movsb
mov
inc
rcll
sub
repnz
sti
inc
jecxz
clc
mov
pop
xchg
popa
sahf
and
negl
stos
je
sbb
xchg
sbb
lcall
pop
arpl
push
cltd
leave
addr16
mov
adc
mov
pushf
dec
sub
insb
nop
sarb
jge
mov
jns
or
mov
out
pop
and
aaa
cmp
adc
mov
adc
push
fildl
xor
in
mov
dec
cmp
dec
mov
sar
lods
out
insb
mov
add
xchg
adc
arpl
mov
pop
nop
mov
cmp
lods
lea
pop
mov
xchg
rcr
or
sbb
pop
pushf
mov
aad
cmpsl
xorl
mov
or
inc
jg
cmp
out
adc
or
jbe
sbb
ss
jne
data16
cs
nop
lahf
adc
xchg
sbb
inc
fildl
adc
push
outsb
sbb
push
jl
mov
or
cli
dec
push
lea
out
cltd
mov
add
sub
xchg
xchg
push
mov
popf
cli
orb
lcall
mov
jae
cmc
inc
jnp
lock
in
dec
pusha
adc
into
pushl
mov
xchg
loop
std
xchg
out
jbe
and
mov
jmp
out
and
fwait
push
inc
or
imul
fwait
xchg
bound
xor
xor
lret
xlat
push
test
jmp
pop
fldl
push
cmp
pop
pop
jbe
pop
clc
and
fimull
ja
jge
dec
repnz
mov
jp
shl
lods
imul
xchg
testb
lods
out
xor
loopne
or
repz
cwtl
pop
sbb
xchg
in
out
into
jo
lods
stos
pop
popa
shlb
cltd
aas
inc
dec
jg
mov
xor
xor
cs
in
dec
ljmp
test
or
pop
loop
inc
push
or
xor
idivb
notb
addl
ljmp
out
fstl
add
fdivrl
xor
xorl
add
loopne
inc
out
or
dec
fadds
ret
mov
mov
inc
sahf
mov
jp
cld
and
sbb
cld
popa
sbb
loope
adc
jae
jg
jl
jne
jp
xor
inc
sub
aad
lods
stos
out
dec
test
shl
xchg
sbb
push
bound
and
jbe
dec
xor
decl
mov
fnstsw
sub
loope
ror
xor
dec
xorb
adc
push
dec
xlat
fimuls
mov
rcr
movaps
popa
push
and
movhlps
adc
in
xor
adc
sub
lcall
fstl
roll
and
sbb
fs
repnz
rcl
in
mov
movsl
sbb
in
mov
push
outsl
insl
mov
xor
jnp
out
pushf
out
rcrb
adc
cmc
adc
outsl
xchg
pop
push
jle
fidivl
aas
mov
push
loopne
outsl
jbe
sbb
sbb
pop
mov
arpl
lahf
xchg
cld
pop
mov
adcl
arpl
sbb
imul
cmp
and
fdivrl
inc
cmp
inc
daa
push
add
das
jnp
cli
mov
pop
jecxz
int3
enter
movsl
push
das
jbe
mov
jg
push
add
cmpb
push
adc
lods
frstor
push
scas
sub
mov
pop
imulb
in
and
testl
fwait
loop
sbb
es
pop
mov
mov
aam
filds
fwait
sbb
mov
jo
sbb
sbb
stos
cmp
cltd
movsl
mov
movsl
cmp
inc
push
and
das
sarb
inc
or
dec
inc
xor
add
cmp
pop
loope
adc
out
xchg
subl
test
inc
pop
lea
mov
fnstcw
cld
cwtl
pop
aad
aaa
mov
shl
xor
ljmp
jp
imul
ret
xchg
dec
add
jl
and
cwtl
adc
mov
lea
mov
and
xor
jle
pop
loope
xor
lea
jo
es
popa
add
push
xchg
add
jle
or
mov
shlb
xor
notl
cmp
in
repz
jle
xorb
sarl
mov
addr16
xchg
fsts
or
jmp
push
jb
sbb
add
mov
bound
pop
leave
sbb
nop
jno
std
call
mov
or
add
mov
mov
cmp
shr
shlb
sub
push
aad
inc
sbb
mov
repz
adc
xchg
or
rcll
add
jge
sahf
stc
inc
or
data16
sahf
jmp
mov
stc
dec
sbb
and
leave
fwait
xor
out
pop
das
aaa
in
or
imul
jne
inc
loop
sbb
lds
push
rcrl
dec
sarb
sbb
mov
insl
inc
cmp
push
or
stc
jae
mov
sbb
dec
xchg
add
ljmp
in
pushf
dec
push
dec
call
lahf
or
cltd
loopne
mov
and
fldcw
xor
cld
sbb
cmpsl
mov
loop
dec
out
xchg
mov
lret
inc
shlb
enter
loopne
js
aaa
jle
xchg
or
in
add
and
test
das
and
js
and
sbb
nop
popf
mov
pop
mov
jo
iret
xchg
out
mov
sahf
out
fstps
dec
and
xchg
inc
and
les
into
mov
xor
dec
xchg
idivb
inc
adc
mov
cmpl
fistpl
insb
aaa
movsl
push
inc
jo
jg
fadds
je
stos
mov
inc
mov
rorl
aam
lods
data16
hlt
enter
cmp
cwtl
dec
jge
test
rcl
adc
mov
dec
jge
mov
pop
lahf
jle
enter
sahf
dec
jecxz
mov
filds
lcall
pop
mov
mov
fisttpll
mov
sub
pop
sbb
lock
testb
pop
jmp
in
inc
push
addl
jb
mov
fsubl
add
adc
movsl
aas
fldcw
push
inc
inc
push
popf
sbb
je
ret
cs
jle
sarl
inc
and
shlb
push
jmpw
int
and
inc
fsubrl
dec
sti
daa
cmpsl
cmp
gs
or
test
sahf
out
sub
in
outsb
push
arpl
dec
mov
push
movsb
out
or
mov
and
sbb
rol
cmpsl
inc
pop
cld
mov
neg
xchg
out
fwait
xor
popf
outsl
and
or
cld
loopne
idiv
jb
lahf
rclb
mov
std
movsl
xor
daa
mov
pop
scas
gs
pop
add
pop
outsb
shrb
mov
movsb
xchg
mov
cld
mov
pop
cmp
mov
sbb
shlb
xchg
mov
push
sbb
mov
cmp
ja
mov
sbb
lock
jno
and
mov
xchg
gs
xchg
xchg
sub
adc
mov
std
aaa
mov
and
stc
jp
mov
jae
testb
mov
popf
clc
mov
negl
inc
jecxz
jnp
adc
xchg
mov
and
or
jle
jle
jp
dec
push
jnp
mov
dec
jo
stc
ljmp
stos
mov
ffree
mov
add
into
pop
jge
xchg
xor
out
lret
sbb
jns
dec
rol
cmc
cli
lods
mov
jnp
xchg
fdivl
pushf
mov
std
fldt
mov
lcall
dec
call
xor
out
out
cwtl
lcall
fsts
fs
mov
test
or
int3
mov
loop
call
fmull
adc
jp
loop
pop
sbb
adc
clc
call
adc
xchg
loope
lods
sbb
test
and
out
dec
mov
cltd
add
jae
iret
into
mov
pop
stos
fsubrp
xchg
xchg
sbb
aas
dec
xchg
inc
push
test
fidivs
out
mov
test
aam
mov
adc
mov
jmp
adc
cmp
insl
and
or
and
es
mov
ja
mov
inc
adc
mov
push
and
sbb
fcoms
pop
loope
ja
loopne
fs
dec
mov
rcrl
vpor
mov
mov
lret
pushf
dec
stos
dec
sbb
cmc
divl
xlat
mov
cmp
sbb
push
cld
icebp
or
xchg
dec
lret
dec
fs
push
out
mov
push
or
or
pop
pop
pop
push
mov
sub
pusha
lods
sbb
push
mov
and
loopne
mov
sbb
mov
lcall
in
pop
xor
cmp
push
aam
sub
call
jno
lock
jl
lods
aaa
aam
inc
cmp
push
pop
add
and
lahf
movsb
lods
inc
es
nop
out
aam
sbb
mov
add
and
rep
and
repnz
sbb
lods
test
mov
xor
xchg
mov
mov
pop
dec
inc
fwait
xchg
dec
xlat
aad
xor
jmp
popf
xor
insb
into
jnp
sbb
xlat
add
cmpb
insb
push
fs
mov
cmpb
mov
mov
sahf
hlt
mov
popf
movsl
lds
insl
sub
mov
and
lcall
or
pop
std
repz
roll
jmp
and
and
enter
xor
mov
fs
in
fldl
into
rclb
sti
lock
arpl
fsubrp
add
outsl
shll
mov
les
or
mov
iret
hlt
inc
dec
test
cmp
cltd
fadds
pop
pop
cmp
out
dec
or
nop
pushf
push
or
mov
dec
adc
mov
sahf
cmpsb
xor
loop
pop
shlb
jge
sbb
push
test
lds
lahf
mov
dec
daa
cmp
jp
xchg
xor
test
jmp
or
push
lcall
or
test
pop
icebp
jae
and
mov
mov
insb
mov
aas
mov
xchg
xchg
sub
inc
es
ret
xor
movsl
add
ret
subb
pop
ret
and
ror
loope
inc
cmp
dec
xor
fst
mov
jo
pop
outsb
in
add
push
idivb
insb
dec
sbbb
sbb
xor
frstor
daa
pop
or
cmp
hlt
adc
mov
and
jmp
stos
jge
mov
in
add
scas
dec
push
add
sub
fcomi
push
mov
into
pusha
sti
repz
mov
mov
ret
push
sbb
std
fisttpl
out
int
add
icebp
lds
dec
cmp
sbb
xor
fistpll
sbb
stos
outsb
fldt
sbb
int
cltd
lods
push
xchg
add
fsubl
lret
mov
sub
andb
cltd
test
mov
jl
mov
and
aas
xchg
enter
idiv
push
xchg
inc
std
xchg
mov
sbb
xchg
or
sbb
xorb
adc
daa
mov
add
push
sete
cmp
pop
movsb
dec
scas
ja
mov
sub
push
ret
xchg
ret
sub
cmp
push
jl
pop
mov
mov
mov
es
jl
sbbb
sub
test
dec
mov
lret
mov
lcall
inc
lcall
cmp
push
jmp
mov
mov
inc
and
test
fs
sub
scas
ss
inc
fwait
dec
mov
mov
adc
ljmp
mov
add
sahf
sub
call
adc
or
hlt
roll
ret
sarl
insl
jbe
mov
inc
inc
inc
scas
cli
jo
adc
add
ljmp
dec
pop
sahf
adc
mov
lcall
imul
mov
aad
jae
cmp
sbb
xchg
or
sub
lcall
jl
daa
cmp
sar
or
mov
lahf
xchg
mov
sahf
or
sub
sbb
lds
pusha
mov
sub
sbb
fildl
push
adc
pop
jae
test
push
mov
jno
mov
sub
mov
xchg
jle
mov
std
xor
div
pop
cmp
jb
fisubrl
lock
mov
add
push
cwtl
ret
or
and
push
pop
cmpsl
dec
cmpsb
xchg
outsl
pop
push
sub
cmp
cli
decb
or
loop
sub
in
das
aaa
dec
fmull
xor
xchg
mov
sti
loopne
cmc
leave
ds
je
scas
ja
lea
mov
decl
clc
inc
jecxz
adc
mov
push
icebp
jb
fldt
test
xor
int
or
lahf
scas
jmp
jne
push
push
imul
movsb
into
xchg
and
out
aas
push
push
sahf
or
fisubrs
aad
mov
push
dec
mov
cmp
mov
add
popf
lea
mov
jg
and
add
inc
leave
cmp
dec
pop
ficoml
outsb
out
sbbl
push
ja
imul
dec
adc
movsb
stos
stos
cmp
mov
xchg
pop
fmuls
cmp
out
and
mov
arpl
or
cmp
lds
push
cmpsb
shll
cli
pushf
sub
jno
popf
insb
cmp
sbb
and
push
xchg
mov
inc
insb
mov
fcoml
mov
mov
lcall
jb
cwtl
lods
sbb
fwait
cli
call
testl
daa
in
mov
lea
movsb
cmp
cld
dec
outsb
cmp
in
ret
push
gs
cwtl
iret
das
push
pop
mov
popf
mov
push
and
xchg
ljmp
outsl
xor
mov
scas
adc
arpl
aad
out
pop
scas
mov
jbe
sub
mov
add
sti
test
mov
pop
jg
ret
inc
inc
test
outsb
push
mov
push
leave
imul
cli
aaa
bound
add
outsl
fimull
data16
add
jno
aam
rorl
in
jmp
cmpsb
rol
push
inc
repz
in
shll
std
adc
mov
aad
lret
ja
popa
mov
xlat
aaa
cmp
scas
cld
sbb
or
jno
popf
push
out
mov
dec
mov
lret
mov
out
int3
xorl
test
std
mov
mov
add
loop
mov
add
mov
mov
and
fs
ljmp
xor
loopne
loope
or
pop
add
stos
adc
pop
aad
jmp
call
jp
push
jnp
pop
jae
inc
adc
scas
adc
mov
test
ds
push
fiadds
dec
mov
mov
repnz
fstl
hlt
mov
and
and
adc
add
ror
xor
push
fisttpl
xor
mov
adc
jp
jmp
push
adc
mov
xorl
lock
adc
push
adc
andl
fldln2
xchg
out
mov
ds
cmp
xlat
lods
push
xchg
adc
inc
in
mov
and
mov
or
and
popf
pop
stc
pop
push
inc
sbb
push
sub
outsb
sbb
push
push
daa
pusha
mov
inc
add
xor
scas
divb
add
loop
and
call
cmpsl
lea
cwtl
dec
adc
or
into
jmp
lcall
sti
pop
or
lods
push
add
icebp
mov
xchg
jmp
movsl
mov
lret
lds
gs
inc
inc
js
jl
nop
pop
loop
mov
in
mov
leave
jmp
ficomps
jo
mov
mov
add
jge
das
xchg
xchg
or
popa
in
aad
xchg
imul
lock
add
push
jb
add
js
fistpll
test
pop
inc
jle
jmp
sbb
mov
std
push
fisubrs
aad
outsl
add
adc
jmp
jle
xor
arpl
lods
mov
iret
int
icebp
pop
lods
int
cmp
pop
sarl
dec
ds
pop
pop
fldt
jno
mov
iret
xchg
and
testl
push
dec
loopne
xchg
jg
jle
fnstenv
fbld
fcmove
lret
lcall
repnz
mov
adc
mov
ss
cmp
or
inc
mov
test
mov
push
aas
loopne
mov
repnz
loopne
adc
lret
daa
sub
ror
mov
sub
push
and
jmp
ljmp
das
sarb
pop
xchg
inc
insb
das
lds
dec
cltd
and
mov
sub
push
ds
adc
jge
adc
imul
lock
popf
adcb
cmp
pop
data16
bnd
sbb
inc
mov
popf
push
outsb
cmp
mov
xor
sub
adc
dec
adc
pop
mov
cld
dec
add
jmp
or
xchg
mov
jno
add
icebp
jge
lock
sub
loopne
xchg
pop
add
lret
mov
mov
test
lods
clc
fchs
sbb
jb
lods
test
ds
lcall
shlb
dec
push
mov
and
sbb
mov
cmc
pop
lret
fldl
and
sbb
movl
inc
int3
insl
daa
es
fs
fwait
mov
inc
mov
jnp
dec
push
add
cwtl
imul
ljmp
push
or
movsb
sahf
pop
mov
loop
enter
fidivrs
ljmp
enter
in
inc
mov
test
lcall
xchg
jg
loop
xlat
shrl
cwtl
mov
push
leave
mov
cmp
adc
cmc
rorl
mov
dec
cs
ret
sub
sti
mov
add
push
mov
xor
lcall
std
insl
mov
addb
imul
outsl
out
xchg
fisubrl
and
dec
pusha
popw
xor
xor
gs
xchg
lcall
sbb
call
bound
push
dec
or
in
adc
ss
add
sahf
cwtl
mov
loope
popf
cli
ret
clc
sbb
cld
int
movsl
add
push
enter
jae
fdivr
add
aad
pop
xchg
add
pop
lret
cmp
xchg
sbb
cltd
filds
jne
jns
cld
scas
dec
fdivrl
adc
repnz
inc
inc
shlb
cltd
scas
and
sahf
xor
inc
push
adc
or
xchg
push
out
inc
mov
pop
pop
stos
and
push
mov
jl
pusha
inc
dec
dec
sub
or
icebp
lods
sub
lods
addr16
clc
mov
cwtl
push
in
mov
adc
or
fildl
push
call
add
out
or
jge
dec
push
aam
pop
jb
add
mov
or
adcl
pop
insb
push
xchg
outsl
sbb
pop
sbb
rolb
cli
or
mov
dec
pop
lahf
adc
pop
in
jg
xchg
dec
and
jl
push
movsl
push
mov
inc
and
dec
in
adc
insb
clc
fiadds
and
cwtl
cltd
fisttpl
pop
cmp
sbbb
repnz
bndstx
or
gs
jg
out
xchg
orl
leave
movsl
cmpsb
mov
test
test
test
js
lret
adc
inc
mov
inc
les
mov
jae
sar
cmp
mov
and
out
gs
testl
stc
in
out
xor
test
mov
mov
call
insl
xchg
pop
xchg
test
or
xchg
ja
in
xchg
xchg
jae
jle
mov
test
mov
adc
add
outsl
jl
or
je
dec
sub
pop
rcrl
cli
ror
push
fistl
mov
jnp
pop
out
out
push
sahf
iret
lds
cwtl
jae
subb
adc
ret
cmp
sub
arpl
jl
jo
mov
inc
das
es
sub
push
jo
hlt
or
sbb
int3
cmp
pusha
sbb
mov
xchg
jo
cmp
xchg
jnp
out
arpl
add
add
mov
loopne
add
faddl
insb
xchg
jae
aad
dec
into
lock
push
clc
test
rcrl
pop
ja
ds
sub
mov
outsl
xchg
out
mov
ja
and
imul
ds
cmp
es
inc
iret
xchg
pushf
clc
sub
movsb
fs
enter
addb
add
in
xor
cmp
mov
mov
jbe
adc
movsl
xor
mov
or
xchg
xchg
addr16
sub
arpl
mov
adc
cltd
dec
or
or
lods
lcall
addr16
sbb
jnp
pop
les
mov
ljmp
into
inc
test
xor
pop
stos
pop
bound
sbb
cmp
adc
push
dec
fsubl
subb
into
add
or
mov
sbb
sbb
push
addr16
setp
pop
pop
pop
jns
outsl
pop
into
imul
repnz
xor
rorl
jo
rol
dec
fildl
jo
pusha
icebp
mov
bound
mov
pop
leave
add
test
and
cmc
jae
cmp
rcll
rorl
mov
pop
rolb
sub
mov
jp
xor
xor
add
std
push
push
lea
sub
lds
jge
insb
or
insl
loopne
xchg
adc
testb
dec
sbb
dec
jp
push
test
es
pop
or
sub
xlat
mov
push
adc
or
jbe
dec
dec
push
jae
pop
xor
out
jge
jb
sti
mov
mov
cs
lods
fadds
inc
cltd
push
adc
adc
outsb
jecxz
pop
frstor
xchg
data16
pop
mov
xor
lret
out
xchg
pop
jns
lret
cmp
and
dec
cmp
out
mov
movl
xor
fcomps
mov
in
aaa
rol
push
bound
dec
fildll
jmp
push
mov
paddusb
mov
add
jge
mov
add
and
pop
add
cmp
jne
imul
enter
add
adc
imul
mov
int3
add
mov
sbb
mov
sub
push
inc
xchg
and
mov
ja
or
outsb
fcoml
cli
xchg
mov
add
adc
jmp
mov
inc
pushf
arpl
cld
in
ja
lods
notl
add
pop
insb
loopne
add
test
pop
push
sub
out
fdivr
and
shll
lcall
popf
inc
lods
fs
repz
fdivs
cltd
inc
add
ret
je
mov
adc
inc
or
aas
jecxz
jb
pusha
cmp
inc
insl
mov
push
scas
fimull
jo
mov
fidivl
fisttps
mov
push
xchg
sub
loop
fsubl
clc
in
adc
xorb
cmp
push
out
testb
insl
mov
jmp
add
sbb
out
lock
out
jmp
xor
jl
fs
adc
sbb
pop
rcrb
jmp
test
popa
pusha
lds
jns
jae
insl
fcomps
mov
fmull
dec
mov
cmp
xor
in
jg
fs
sbb
jg
int3
add
or
push
imulb
or
movsb
in
mov
clc
imul
push
scas
or
sbb
js
dec
aas
loop
stc
std
add
pop
int3
test
mov
fistl
jge
cmpsl
fsubr
out
xor
movb
lds
push
and
aad
inc
adc
add
or
pop
icebp
rorb
sbb
and
push
js
aam
movl
xchg
inc
test
push
in
daa
enter
ds
or
sahf
sbb
jl
xor
arpl
and
mov
loope
jp
xorb
pop
rolb
xor
mov
movl
ljmp
mov
int3
ficoml
fucomip
scas
mov
test
add
cld
gs
cmp
pop
mov
pop
xor
aad
jmp
xor
inc
inc
or
mov
movsb
gs
inc
jecxz
fwait
aad
enter
out
inc
or
jnp
inc
ret
and
mov
push
in
stos
fucomp
fs
loop
test
lcall
lahf
in
mov
pushf
das
movsb
addr16
mov
cmpsl
subl
sub
or
jle
mov
ja
lds
in
jmp
repnz
xor
or
in
cld
mov
add
scas
js
sub
cmp
int
data16
push
sub
jecxz
stos
xchg
fs
sbb
test
dec
jns
int
and
js
dec
push
popa
adc
fwait
testb
sarb
add
mov
xor
cmp
popa
inc
ficoml
add
inc
xor
push
data16
stos
sahf
jnp
inc
outsb
xchg
push
sbb
mov
sbb
or
stos
sbb
or
aad
add
jmp
adc
aas
andl
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
push
lods
les
call
outsl
aas
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
and
nop
fstp
or
dec
push
dec
mov
cmpsl
aaa
sub
mov
dec
in
movsl
cmp
std
sub
mov
xor
stc
outsl
aas
les
rcrb
and
push
dec
or
clc
ss
sti
shll
cmp
lret
shlb
mov
std
cmpsb
test
fsub
inc
mov
xchg
fwait
xchg
lods
into
out
push
inc
mov
pop
outsb
xor
or
stc
outsb
addr16
sbbb
or
mov
cmpsb
cwtl
and
sub
aam
test
xor
out
cmp
inc
mov
and
rolb
push
push
fcmovnu
outsl
jae
scas
shl
andl
aas
les
cmp
cmp
lods
jl
dec
call
pusha
outsl
aas
les
cmp
sahf
pushf
outsl
aas
aam
rolb
push
inc
lahf
les
cmp
sahf
fnstsw
xor
lods
les
jmp
les
cmp
sahf
int
aas
aam
rolb
push
inc
sahf
les
add
aas
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
mov
or
lods
rolb
popa
cmp
mov
outsl
aas
adc
push
add
out
cmp
lods
rolb
dec
cmp
jle
sbb
inc
dec
call
sub
rolb
outsb
cmp
sahf
les
sbb
sahf
cmp
rolb
push
inc
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
les
cmp
sahf
fnstsw
les
xchg
adc
sbb
je
sub
out
push
das
push
push
and
inc
andl
jg
xchg
fisubrs
out
out
ret
push
out
lods
loopne
sub
iret
fwait
outsb
push
es
xorl
loopne
inc
sbb
adc
out
jl,pt
sbb
jmp
movsb
cltd
imul
mov
arpl
lcall
dec
jmp
push
mov
xchg
and
icebp
je
pop
gs
in
pusha
inc
xor
das
xor
cmc
sub
mov
cmp
fisubs
in
stc
into
dec
lock
pusha
out
pop
push
mov
jecxz
cld
movmskps
pop
enter
gs
mov
dec
test
inc
jnp
shrl
lret
fs
loop
sbb
pop
sub
movsl
mov
int3
fwait
jecxz
mov
jbe
mov
incl
popf
pop
into
mov
xor
and
pop
in
add
dec
fistpl
ret
lret
mov
inc
jbe
push
jno
pop
fnstsw
mov
out
inc
sbbb
mov
sub
jnp
das
and
or
cmpsb
or
mov
icebp
leave
and
push
adc
cmp
adc
add
cwtl
push
cld
scas
jo
jnp
pop
xor
mov
sbb
dec
jne
jg
loopne
scas
jno
mov
stc
in
push
lds
add
out
ss
push
sbb
dec
and
movsb
mov
lea
decl
out
xchg
das
mov
dec
fstpt
test
push
or
andl
movsl
outsl
push
sub
imul
inc
or
fsubrs
xchg
aaa
jg
xlat
in
add
cld
hlt
xor
test
mov
adc
xchg
rorb
out
mov
and
add
push
xor
or
and
cmc
dec
adc
imul
repz
mov
data16
subb
cld
mov
add
mov
and
stos
or
loopne
mov
mov
sub
ret
out
or
push
in
cmp
jo
sbb
fadd
pop
pop
mov
lcall
mov
enter
stos
pop
mov
inc
mov
sub
and
jg
js
dec
lock
enter
imul
xchg
add
mov
mov
lods
mov
pusha
notb
dec
loope
aam
push
sub
jg
xchg
jmp
mov
dec
rcl
test
out
push
lea
mov
sub
sbb
inc
aaa
push
sub
scas
push
sti
into
push
inc
xor
or
xor
bound
fistl
fmulp
aam
xorb
lods
inc
iret
cli
lret
push
adc
out
es
mov
jge
inc
test
mov
pop
push
adc
mov
xchg
out
sub
inc
sti
popa
negb
jmp
ret
mov
add
cmp
jge
repnz
jae
cltd
add
adc
sbb
aas
inc
mov
bound
daa
add
inc
pop
cwtl
xor
push
fnstenv
cli
mov
stos
adc
notb
jae
aam
and
lods
mov
mov
pop
jl
sahf
jno
pop
sub
xor
rolb
mov
sub
mov
xchg
cmp
jl
dec
jns
iret
adc
rcrb
lret
test
jl
cmp
scas
cwtl
sub
jp
add
dec
test
sbb
lds
sub
mov
aam
push
sarb
aad
xor
mov
outsl
add
lock
xorl
inc
jbe
test
pushf
sti
flds
sub
jmp
arpl
dec
sahf
cmp
inc
sbb
push
mov
out
scas
dec
add
sub
xchg
out
movsl
inc
pop
lods
inc
loop
rcl
cmp
jo
divb
and
adc
cmovnp
inc
adc
ljmp
jmp
pusha
mov
and
clc
push
push
push
test
aad
jnp
xor
jnp
in
loope
movsl
xor
loopne
pop
add
dec
sbb
add
or
pusha
loope
cmp
ss
iret
test
mov
sub
sub
pop
cmpsl
into
add
push
adc
mov
mov
xchg
popf
lds
in
gs
push
cmp
mov
out
push
sbb
sbb
pop
loopne
or
test
imul
jns
in
imul
ret
enter
or
xlat
mov
pop
rcrl
push
out
fsubr
arpl
gs
xor
repz
push
cmpl
sub
jmp
adc
and
int
adc
les
aas
or
ret
lret
icebp
aaa
mov
cmp
stc
in
xchg
adc
add
pop
sbb
jg
movsl
mov
sbb
bound
cli
sub
inc
pushl
les
inc
xchg
lock
inc
cmp
in
mov
roll
imul
jmp
mov
rorb
jae
je
inc
sbb
xchg
and
inc
inc
mov
push
push
jle
pushf
pushl
out
push
or
pop
fimull
imul
push
add
lds
fldcw
ljmp
push
js
sbb
push
mov
sar
sub
dec
loop
insl
xchg
jmp
sub
push
cltd
push
fists
aas
sub
dec
adc
jp
mov
les
add
ja
jne
and
lock
sbb
imul
out
jb
sbb
js
loop
ret
jo
in
jge
pop
out
fsubr
jbe
mov
clc
addr16
sbb
outsl
data16
js
mov
repnz
scas
rcll
popf
jecxz
pop
add
add
or
mov
add
cmp
push
aad
jp
dec
mov
and
and
out
push
or
daa
icebp
call
push
inc
push
ror
jbe
inc
outsb
push
mov
shll
fs
fcomi
jl
jnp
pusha
xor
mov
lret
pop
mov
push
cmpsb
lods
ss
movsb
idiv
sub
xor
lods
pop
fcmovb
mov
adc
divps
pop
leave
mov
sub
mov
cmpsb
pop
pop
lock
mov
mov
push
jp
sub
call
nop
pop
and
hlt
push
mov
xchg
dec
xorl
into
mov
cmpsl
test
loope
arpl
imul
inc
ds
jae
bound
loope
xor
int3
dec
out
insl
test
pusha
xor
fwait
dec
inc
in
pop
dec
std
mov
push
aaa
stos
addl
pop
lcall
push
pop
and
idivb
pop
jns
jmp
add
dec
lods
xchg
js
and
jno
xchg
gs
inc
nop
and
dec
adc
mov
mov
sbb
add
push
sbb
inc
mov
iret
push
test
jns
cli
cmp
out
fadds
or
xlat
out
mov
mov
lret
imul
aad
xchg
dec
add
rcrb
sub
add
add
cmp
pop
or
cmc
prefetch
or
xchg
shrl
clc
fidivrl
mov
adc
jecxz
es
xor
imul
das
hlt
jb
lret
adc
pop
sub
and
das
push
push
push
adc
adc
imul
or
or
rclb
lock
test
scas
inc
and
ficomps
icebp
lahf
adc
ljmp
arpl
mov
orb
mov
jl
in
and
icebp
int
int
mov
rcll
mov
std
mov
idivl
cmpsb
aam
insl
mov
nop
mov
fdivrl
ja
push
pop
mov
pop
or
aas
pop
push
stos
push
jl
mov
mov
dec
ret
mov
mov
push
mov
rcll
fildl
mov
dec
xor
jbe
adc
jg
out
test
mov
pop
pop
adc
sarb
xchg
lods
dec
aam
sbb
stos
mov
out
or
pop
dec
ret
inc
cmp
push
lahf
adc
ljmp
add
sbb
jmp
pop
lods
mov
popaw
push
mov
xor
outsl
fld1
rorl
pusha
lock
std
pop
enter
xchg
adc
test
lret
cmpsb
xchg
push
in
data16
lods
adc
and
xor
sbb
cwtl
sub
sub
cmp
sub
fdiv
and
dec
dec
dec
xlat
mov
pop
pop
movsb
in
cmp
fistps
fcom
cmp
and
and
push
loope
scas
cs
and
pop
xor
scas
stos
mov
sahf
or
or
or
adc
mov
and
dec
and
fcoms
adc
dec
push
push
jb
hlt
mov
xchg
xchg
cmp
addr16
mov
add
adc
add
sahf
les
movsb
clc
sub
or
mov
cmpsl
icebp
and
adc
mov
jg
int
jecxz
test
and
push
mov
and
pop
and
mov
fs
xlat
jge
push
lcall
data16
sub
adc
in
or
iret
cmp
cltd
out
js
xchg
cmp
mov
xorl
movsl
nop
clc
sbb
sub
jbe
push
jb
cmp
inc
imul
repnz
in
ret
sbb
rcll
sub
fs
mov
sub
sbb
or
push
add
aas
movsl
inc
pop
imul
add
mov
cmc
or
push
jge
xor
dec
or
push
int3
fbld
sub
jno
fistpl
push
pop
mov
mov
iret
mov
aam
xchg
mov
in
mov
int
pop
push
sti
inc
pop
pop
push
fstps
adc
sbb
sbb
sbb
cld
daa
cmp
xchg
js
in
inc
push
jo
mov
lock
cld
ror
lahf
js
ret
stos
adcb
add
mov
hlt
shrb
scas
inc
mov
adc
popf
dec
mov
iret
popf
mov
imul
mov
inc
clc
rolb
lods
es
push
enter
scas
push
in
jmp
stc
lods
push
mov
into
cli
push
loope
repz
lods
neg
mov
shlb
into
mov
mov
mov
icebp
les
jge
insb
clc
stos
mov
fbld
fcmovnbe
push
insb
push
jge
ret
or
adc
sub
mov
xor
fldt
push
push
mov
pop
into
and
fadd
lret
mov
add
adc
ljmp
mov
divb
aas
inc
lds
pushf
mov
leave
icebp
xor
out
dec
data16
arpl
lret
shlb
mov
sub
xchg
push
out
lcall
pushf
fwait
inc
inc
mov
jl
es
sbb
or
mov
xchg
mov
sub
xor
jb
mov
xor
push
inc
cli
xchg
pop
loopne
xchg
xor
mov
popa
in
jnp
jns
mov
inc
jb
in
adc
cmp
mov
inc
xchg
cmc
sub
push
test
ret
js
push
push
ficompl
in
sub
and
in
dec
inc
fisubs
orl
mov
push
movsl
nop
dec
push
cmp
mov
push
sub
inc
mov
sbb
pop
lcall
mov
mov
push
dec
mov
push
stc
test
nop
push
push
out
out
loope
lods
fnstsw
les
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
