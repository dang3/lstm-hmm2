ret
dec
pop
into
lods
and
cld
movl
pushf
popa
mov
xor
dec
cmp
xlat
jp
push
cmp
jge
sbb
lods
jecxz
add
into
dec
jno
popf
ret
lods
nop
lock
insl
lods
insb
pop
test
dec
lcall
bound
out
fstl
sarb
mov
inc
sarb
aad
or
jp
aaa
and
mov
cli
loope
pusha
lcall
fldt
outsl
sarb
setbe
cmp
stos
add
add
imul
fidivl
movsb
mov
popa
inc
std
and
pop
push
mov
in
dec
xchg
cmp
push
mov
sub
into
jge
out
cli
jo
int3
ljmp
cld
push
lods
lock
ret
or
je
jb
xor
rorl
mov
dec
xor
xor
push
dec
inc
jge
pushf
sub
aas
out
and
push
rorb
stc
sahf
sarb
xchg
inc
mov
xchg
dec
iret
jo
mov
aad
cli
or
repz
jnp
xchg
aam
arpl
es
inc
lret
mov
in
push
aad
xchg
ljmp
jl
fs
lock
push
test
or
cmpsb
cmp
jle
jle
sub
ss
push
xor
cmp
ljmp
pop
out
lfs
inc
sarl
call
ss
ss
push
gs
cmp
cmc
dec
lods
mov
out
cmp
test
repz
fidivl
aam
pop
xchg
xchg
sub
cmpsb
pop
and
mov
mov
inc
call
cmp
int3
lret
les
data16
fadd
add
xor
pop
mov
xchg
or
jmp
jp
and
je
xchg
mov
xchg
lds
sbb
or
movsl
cld
stos
hlt
xlat
cltd
hlt
aaa
and
ja
xlat
shl
lods
into
std
arpl
daa
fsubrl
xor
xor
sbb
mov
dec
repz
outsb
repnz
xchg
pop
mov
pop
fists
call
jge
fcompl
cmp
cli
insl
bound
insl
push
aaa
cmc
mov
iret
mov
mov
lahf
fwait
lock
sahf
mov
data16
bound
mov
aas
cs
pop
int3
test
lcall
je
pop
stc
lock
fldt
pop
sub
call
push
mov
xchg
and
or
fs
or
out
lea
jecxz
xchg
sub
xchg
cs
cmp
inc
fistps
leave
jne
sbb
adc
dec
sbb
mov
pop
pop
and
jmp
jecxz
pop
ret
int
dec
inc
jmp
addl
and
fcoms
mov
ret
add
sti
mov
cli
mov
push
cli
xor
mov
or
xchg
je
lea
sub
push
lahf
mov
pop
jg
push
sub
test
scas
jecxz
xchg
and
adc
les
inc
sarb
fistl
pop
pop
call
jmp
dec
pop
stos
mov
jne
loopne
sub
movl
movsl
adc
push
dec
sbb
dec
pop
in
mov
fisttps
xchg
lahf
jge
xchg
in
pop
icebp
adc
xchg
xchg
sarb
dec
dec
or
sbb
pop
dec
je
dec
cmp
jb
mov
addr16
enter
clc
adc
in
into
mov
add
sub
mov
orb
in
movsl
push
roll
or
jle
inc
xor
cmc
lret
punpckhwd
mov
setb
pop
lods
mov
stos
into
movsb
fmuls
push
push
sbb
sub
in
into
inc
inc
hlt
clc
outsl
xor
mov
push
pop
lods
clc
inc
mov
popf
xlat
mov
inc
cli
bound
sbb
lret
sbb
push
dec
int3
call
pop
in
cld
xor
add
xor
push
clc
fs
in
ret
inc
nop
rorb
push
pop
loope
jg
mov
xchg
stc
inc
push
or
push
repz
movsl
in
mov
andb
xchg
adc
sub
or
dec
mov
cmpsl
add
xchg
xor
mov
add
pop
icebp
or
xor
pop
jmp
ret
xchg
adc
jb
int
or
sub
xor
xchg
jae
or
cmp
pop
scas
test
or
cmp
imul
insl
xchg
adc
loop
jg
push
mov
adc
cld
pop
test
add
lea
push
xor
cmpsl
pop
jne
dec
mov
repz
outsl
and
add
pop
outsb
pop
cmpsb
cmpsb
cltd
mov
or
adc
add
stc
movsb
cmp
mov
divb
enter
adc
cmc
leave
cli
mov
inc
jmp
or
pop
comiss
rorb
and
ljmp
fnstsw
mov
imul
sub
dec
outsb
movsl
inc
ljmp
push
bound
or
ficompl
mov
in
rclb
test
jae
ds
rclb
pop
xchg
fmul
mov
hlt
adc
and
jbe
mov
rcr
mov
xlat
cmpsb
lods
cld
lods
cmpsl
movsl
inc
ss
jmp
call
push
xlat
xchg
shll
ficoms
xchg
xchg
pop
jle
lret
xor
ljmp
loope
sbb
ljmp
outsb
cld
push
dec
popa
jp
and
sbb
cld
adc
mov
daa
or
cmp
inc
adc
mov
sti
in
sti
sbbl
fisttps
daa
test
fdivr
inc
scas
vpshlw
push
hlt
pop
sub
lahf
and
xlat
inc
xchg
pop
and
decb
dec
rol
jmp
lret
push
dec
cmc
pop
inc
jb
mov
jno
movsb
sbb
das
mov
movb
dec
incb
std
cli
incl
ja
xchg
add
loop
push
xchg
dec
xchg
push
or
xlat
jns
leave
fisubrl
out
ljmp
push
mov
pop
adc
cmp
pop
jle
lods
jbe
add
sub
fdivl
repnz
mov
adc
movsb
jo
mov
fidivrl
fisttpl
inc
lds
mov
push
lock
jae
mov
sub
sub
pop
jns
mov
push
sub
xor
loop
add
repz
popf
xchg
xor
popa
or
pop
sbb
mov
adc
ja
mov
call
out
pushf
dec
ds
mov
sbb
mov
mov
loopne
pop
inc
pop
les
in
mov
std
pop
out
or
push
pop
push
gs
rorl
inc
into
pusha
pop
sbb
in
push
ja
dec
xchg
fidivrs
sbb
mov
dec
or
or
mov
xor
jl
jle
or
sub
push
or
out
fistl
mov
sti
jl
nop
lahf
mov
in
bound
in
adc
push
jle
cli
pop
push
in
cmp
test
icebp
fdivrs
or
loop
lock
movsb
popa
into
das
sub
xor
jg
and
push
cmpsl
push
sbb
data16
lds
nop
adc
mov
dec
cmpsb
dec
sbb
loope
add
pop
mov
test
jae
repz
andb
popl
xchg
xlat
mov
loope
and
lcall
scas
ss
insl
pop
popa
push
mov
push
pop
aad
push
add
mov
add
aad
xchg
pop
ja
test
push
scas
jmp
popf
dec
mov
mov
jnp
dec
clc
push
nop
jmp
nop
jl
lret
sbb
push
or
mov
popa
mov
loope
ds
sub
in
fidivrs
pop
mov
lret
lea
push
pop
jae
xchg
ja
and
lock
in
loope
data16
ljmp
jae
push
popf
xor
pop
cltd
je
loopne
add
je
jne
push
les
int
mov
ret
shl
cmp
cmc
and
je
test
repz
dec
inc
jg
das
ficompl
into
inc
add
add
fisttpll
jp
inc
xchg
pop
stos
loop
mov
sbb
xorl
cmc
mov
cltd
aam
xchg
xor
mov
xor
decb
fimull
lods
push
xchg
in
mov
insb
add
xlat
push
xchg
jns
add
aaa
out
xor
stc
xorb
orl
fildl
xchg
inc
xchg
mov
mov
dec
ss
sbb
imul
lock
call
ror
cmpsb
les
pop
and
sub
and
fyl2xp1
mov
mov
cmc
xchg
loopne
inc
or
cmp
cwtl
add
outsb
test
mov
cli
jmp
mov
aas
inc
xbegin
shlb
sub
xchg
mov
lcall
and
enter
or
scas
pop
push
das
lcall
adc
out
add
and
movsb
sub
mov
or
jns
shrb
vcvtdq2pd
and
or
pop
mov
bound
imul
inc
popf
jno
xorl
sbbl
shlb
pop
sarl
and
pop
outsb
std
loopne
sarl
dec
xchg
mull
arpl
cmp
loop
out
pop
lahf
pop
aam
scas
popf
fistl
sbb
sub
inc
jmp
ljmp
rcrb
sbb
fwait
jmp
popf
inc
xor
gs
ret
out
mov
imul
xchg
ficomps
pop
dec
in
in
mov
mov
scas
pop
or
mov
mov
imul
sub
push
mov
cmp
jb
cs
jecxz
adc
cltd
mov
and
cli
popa
in
mov
inc
inc
jg
dec
in
iret
int
jae
xchg
cmpsl
pop
test
push
clc
and
sub
insb
lea
jbe
sub
mov
xor
sahf
movsb
jnp
dec
shlb
push
fadd
cmpsl
repz
mov
sub
cmovnp
or
stos
xchg
dec
push
std
jg
pop
add
int
push
sub
fdivrl
in
aas
iret
mov
fists
cld
push
es
cmp
cmpsl
push
nop
jle
adcl
dec
pop
roll
push
and
pop
mov
push
xchg
cmp
bound
mov
sti
adc
das
mov
jne
aaa
push
xor
rcrl
roll
pop
loope
jno
shlb
xchg
sub
jmp
shl
adc
cmpsb
or
clc
addr16
cmp
sti
popa
sbb
or
jle
or
mov
or
xchg
pop
stos
pop
loop
mov
orl
sub
add
fwait
xchg
mov
out
leave
ficoms
icebp
in
call
sbb
movsb
jb
pushf
gs
inc
rolb
xor
adcl
pop
dec
jge
mov
scas
repz
inc
jns
jb
xorl
mov
sbb
fs
dec
lret
aad
xchg
add
insl
adcb
sbb
les
jecxz
mov
mov
or
push
pop
insl
int3
test
jo
add
push
mov
ja
cltd
in
sub
call
shll
fstpl
pop
fs
cmpsl
loop
in
xchg
fldt
sbb
arpl
mov
inc
fwait
xchg
xlat
cmpsb
and
cmp
xor
jecxz
push
repnz
dec
mov
xor
fld
cld
push
and
xor
lds
insb
movl
cmp
lcall
into
adc
aam
mov
aam
mov
mov
and
dec
je
jg
sbb
pop
xchg
sbb
push
sbb
jno
testl
xor
cmp
fwait
dec
mov
pop
mov
sbb
arpl
sub
dec
leave
cltd
push
aad
ficomps
test
lfs
lock
cs
sub
jmp
cmp
xchg
push
testl
push
iret
jo
pusha
cld
or
sub
ret
mov
sbb
sub
xchg
gs
push
into
test
test
pop
dec
data16
pop
mov
cmp
xor
lock
xor
int
sbb
iret
and
test
scas
mov
mov
repz
dec
cmpsb
push
aad
repz
sub
lahf
je
cli
mov
pop
movb
pop
cmpsb
mov
aas
mov
das
fsubrs
inc
cmp
int
xchg
sbb
mov
push
mov
sbb
movq
adc
sub
cmp
std
cmp
repnz
sti
data16
call
dec
mov
bound
push
sbb
mov
in
and
pop
sub
out
add
ja
or
mov
pop
ja
and
mov
rep
and
push
int3
sbb
fbld
cld
out
ljmp
cmp
loop
xacquire
push
xchg
add
fsubs
or
leave
jo
fcoms
or
xlat
xor
inc
js,pt
shrb
popa
dec
jne
inc
in
repz
or
and
subl
fdiv
dec
adc
add
push
mov
aaa
sub
sub
test
mov
stc
bound
int3
inc
and
inc
rolb
jmp
jl
insl
pushf
pop
and
mov
pushf
pop
psubsw
sbb
hlt
xor
jge
xor
push
mov
int3
sub
ljmp
mov
shrb
pop
sbb
arpl
xor
sbb
test
mov
xchg
jecxz
cld
negb
icebp
pop
fisttps
inc
int3
sub
ret
ds
imul
int
enter
popa
adc
sbb
xchg
push
mov
push
repnz
test
inc
add
dec
bound
rcrb
imul
ss
lods
xor
fistpl
mov
mov
je
test
push
sarb
mov
addr16
cmp
or
mov
or
dec
out
pop
aad
fsts
out
or
ret
sti
xor
fisubrl
testl
xor
xor
pusha
push
pop
adc
ds
push
push
js
daa
inc
mull
xor
shr
cs
mov
fwait
data16
fdiv
xor
or
mov
or
xor
mov
push
mov
test
outsl
ds
jb
cmpsb
jg
jl
std
cmp
xor
inc
mov
and
or
xorb
add
cmp
cwtl
mov
xor
mov
int
xchg
sub
test
mov
add
pop
sbb
mov
mov
int3
pop
push
jecxz
sub
adc
stos
push
fisubrs
and
push
push
in
jbe
sbb
mov
mov
test
mov
loope
push
pop
cmpsb
pushl
cmp
hlt
clc
addl
imul
mov
pop
push
ss
test
and
adc
repz
cmp
mov
cmp
repnz
lahf
daa
jns
sbb
out
inc
addb
nop
or
add
out
pop
iret
sbb
popa
jns
jne
push
jb
mov
mov
xchg
je,pn
xchg
rcrl
jns
imul
gs
out
cmpsl
xor
fisubrs
pop
lods
mov
ljmp
out
dec
jnp
xor
movsl
aam
xchg
pop
movsb
sub
movsl
insb
or
outsl
xchg
push
mov
out
inc
loop
sub
sahf
push
lods
mov
enter
jne
std
fisttpll
loopne
mov
adc
push
in
lret
mov
xchg
lea
xor
and
into
fsubl
fidivrs
and
fnstenv
scas
jbe
push
fs
jae
xchg
cs
xchg
gs
or
scas
xor
mov
xor
pop
fcoms
sbb
push
push
imul
push
in
repnz
push
mov
mov
cmp
mov
pop
fnstsw
fisubrs
enter
dec
adc
in
divb
jl
ja
xor
pop
jno
xchg
lcall
daa
dec
jbe
xchg
repz
jno
aam
jle
or
dec
stc
dec
imul
in
inc
incl
out
enter
popa
xor
sbb
pop
inc
sbb
out
stc
jp
push
push
and
int
mov
fcom
addr16
je
cmp
sub
mov
mov
mov
sbb
fwait
xchg
jne
daa
fs
jae
pusha
vmovaps
pop
insl
or
xlat
clc
push
fldenv
mov
push
jnp
arpl
sub
inc
xchg
sbb
outsl
lcall
add
imull
cmp
pop
in
fists
sub
lock
jl
lods
cs
loopew
lods
shlb
add
mov
hlt
push
mov
je
push
idivl
mov
imul
cmpsb
scas
ljmp
orb
and
outsb
cli
repz
xchg
dec
mov
out
jb
mov
fdivr
shlb
inc
stos
inc
inc
mov
xor
adc
pusha
push
xchg
les
aam
jge
clc
xor
das
pop
sub
fs
mov
xor
fld
addr16
or
mov
pop
cmp
pop
ljmp
aas
push
xlat
out
jo
cmc
jl
pop
repnz
xor
hlt
and
jb
out
subl
inc
or
pop
sti
jmp
in
adc
es
test
mov
or
fistpl
test
push
jno
pop
xchg
test
fiaddl
cmpsb
nop
insb
dec
add
push
xor
sar
push
rorb
jnp
fnstcw
inc
fcomps
or
ret
cltd
scas
dec
popf
aam
movsl
test
pop
fiadds
jle
adc
test
test
fadds
dec
pop
dec
xchg
scas
fs
sahf
arpl
into
adc
mov
cli
mov
or
pop
push
adc
rolb
into
lcall
sub
aas
jne
push
out
cli
dec
sub
push
adc
xchg
ret
out
or
cmp
mov
add
hlt
stos
cs
pop
jo
and
pop
push
push
cmpsl
std
or
or
mov
or
mov
mov
jge
aad
dec
push
loope
sahf
xor
into
push
lret
push
or
sub
mov
cltd
lahf
lods
in
repz
sub
imul
mov
and
push
gs
sbb
call
inc
push
sbb
stos
lods
dec
std
mov
push
push
ret
stos
pop
fistl
cs
adc
aam
jbe
in
mov
push
cld
mov
repz
sbb
lods
dec
std
pop
inc
dec
pop
add
inc
cli
stos
push
mov
outsl
gs
imul
push
mov
jbe
mov
popa
xor
lcall
push
xor
daa
cmp
test
xchg
dec
or
mov
movsb
mov
xchg
jne
sbbb
mov
jnp
add
inc
pandn
mov
inc
push
pop
sbb
inc
push
nop
push
rep
xchg
fstpt
mov
sarl
jns
sbb
pop
or
aam
out
int3
add
sbb
pop
fwait
ret
or
push
and
jg
xchg
test
cltd
roll
fimull
aad
out
push
push
aad
jmp
or
hlt
out
jle
or
xchg
stos
or
mov
sti
test
and
fs
sbb
inc
iret
pop
imul
or
ja
and
mov
fucomp
sub
xor
lock
daa
mov
cmp
xor
push
sbb
rcrl
inc
or
loop
jno
movsl
mov
dec
in
stos
push
mov
lahf
add
rorb
jnp
shll
int
mov
and
pop
cltd
push
clc
js
loop
xchg
pop
or
or
mov
decb
inc
mov
jo
testl
scas
add
fstl
mov
out
adc
les
pop
hlt
insb
xor
repnz
sbb
cli
ret
sub
outsb
and
div
pusha
nop
inc
cmp
into
cmpb
inc
out
jo
aam
ret
sub
stc
adc
pop
cmp
xor
stos
nop
xchg
mov
ja
mov
inc
jmp
dec
fistpll
push
mov
leave
sbb
jle
and
and
jae
and
neg
popf
out
movsb
dec
or
icebp
fldt
or
ret
push
pop
jg
and
popa
fbld
jno
sbb
out
imul
adc
dec
mov
loope
loope
sub
les
xchg
jo
pop
pop
rcr
fbstp
push
mov
lods
sbb
out
mov
inc
mov
xchg
push
lahf
add
dec
jbe
sub
pop
adc
jp
push
mov
iret
sub
pop
pop
dec
icebp
fistl
lods
sub
mov
jns
sub
and
in
test
shlb
ja
movsl
or
iret
popf
add
xchg
int
fsubrl
repnz
pop
cmpsb
adc
jo
adc
fs
dec
pop
or
fcomi
xchg
cmpsl
ficoml
test
add
repnz
mov
sub
out
inc
mov
mov
cmp
mov
push
cmp
jne
sub
sbb
popa
sbb
outsb
or
and
popf
sbb
jg
ficoml
dec
loop
mov
inc
jo
pop
xchg
pop
xlat
pusha
adc
and
mov
pop
mov
std
int3
pop
inc
xor
pop
mov
loopne
enter
adc
icebp
shlb
in
inc
mov
out
xchg
aad
scas
mov
pop
mov
xchg
xchg
in
push
xlat
jns
mov
jbe
mov
cld
and
test
xchg
stc
sub
lcall
fcmovb
xchg
cmp
fists
jo
repnz
xor
sarb
icebp
mov
push
stc
xor
into
or
pop
push
outsl
js
dec
and
cmpsl
jae
imul
fisubrl
mov
mov
test
cmp
xor
clc
push
and
dec
cmp
mov
cmp
iret
or
cmc
dec
pop
mov
mov
sar
js
pop
inc
loopew
lds
lods
or
mov
lods
jne
rolb
ror
jb
push
push
pop
in
sub
xor
movsb
in
jae
jne
and
fbstp
pushf
jecxz
rcll
jo
mov
repz
out
std
addr16
cmp
les
jns
out
push
lea
push
neg
push
mov
mov
pop
adc
and
push
jnp
shll
rcrl
repnz
inc
and
out
pop
xchg
adc
mov
xchg
jns
ja
push
int3
mov
call
pxor
or
jnp
or
mov
aas
inc
and
aaa
rcl
rep
mov
jecxz
inc
push
in
xchg
das
lds
xchg
pop
mov
mov
int3
jbe
je
sbb
xchg
mov
lds
cmp
dec
mov
push
in
dec
xchg
enter
mov
pop
stos
mov
test
adc
pop
mov
xor
jnp
fistps
daa
mov
mov
daa
adc
xor
push
mov
push
add
inc
sub
jb
fisubs
dec
bound
xor
pop
ljmp
xchg
mov
inc
je
add
mov
sub
and
cmc
into
cmp
jo
sbb
xchg
shlb
xor
inc
int3
cmp
repnz
cmpsb
fiadds
xchg
sub
mov
shll
xor
dec
imul
add
sbb
sub
xor
push
mov
push
cmp
adc
lahf
psubw
frstor
inc
pop
push
jl
mov
mov
fsubl
mov
andb
cli
enter
jb
es
push
sub
dec
jae
mov
jns
lret
jle
mov
jns
clc
xchg
jmp
shr
mov
or
out
sub
xlat
in
mov
unpcklps
aas
test
sbb
push
daa
fcmovnbe
loop
xchg
std
ljmp
mov
lods
push
cmpsl
or
fsubrs
mov
dec
sbb
sti
mov
push
xchg
push
mulb
add
push
adc
inc
jmp
jbe
xchg
xchg
outsl
int3
pop
subl
repnz
sbb
mov
out
mov
aad
jae
xlat
jmp
mov
xchg
mov
hlt
sti
sti
jno
pop
adc
and
jae
scas
out
adc
or
gs
ja
ret
mov
dec
dec
jmp
xor
out
xchg
aaa
push
aam
sbb
add
pop
lds
rolb
pushf
or
cwtl
std
das
add
sub
mov
fmuls
cmp
sub
movsb
fcoml
xor
cmp
ret
jmp
test
mov
xchg
loop
jmp
test
add
stc
push
dec
mov
push
jl
cmp
xlat
jnp
inc
into
add
fs
inc
jnp
lock
negb
and
cmp
mov
dec
dec
jnp
xchg
scas
daa
clc
std
orb
scas
in
mov
fadd
cmp
cmp
ja
popf
or
lea
add
add
push
cmp
in
mov
push
es
xor
xor
inc
inc
add
testb
jae
ret
jnp
fiaddl
mov
in
stc
sbb
fsubs
push
icebp
aam
push
mov
xchg
daa
sbb
pop
jmp
cmpl
or
or
jb
repz
pop
negb
or
hlt
mov
outsb
movsb
dec
or
rorb
pop
lods
cwtl
repz
sbb
push
xchg
ljmp
dec
push
test
test
je
mov
aaa
out
sbb
and
pop
xchg
les
inc
pusha
mov
scas
dec
push
fwait
pop
data16
imul
mov
inc
insb
push
call
lock
push
cmp
in
or
jae
pusha
addr16
fmull
mov
in
jnp
and
or
sub
push
mov
xor
sub
sub
sbb
adc
fwait
pop
sbb
jns
push
rcrb
sbb
mov
cmpsl
sbb
mov
stc
pop
aaa
xor
es
inc
imul
add
iret
insl
shlb
mov
or
push
jge
in
cmc
mulb
subps
incl
daa
jecxz
dec
adc
outsb
sub
push
pop
loopne
dec
xchg
dec
jmp
sub
sub
das
xchg
repnz
xchg
and
cmc
or
jmp
mov
cmp
pop
fsubrl
fdivl
iret
in
push
jecxz
cs
sub
nop
mov
scas
loopne
out
adc
sub
inc
scas
cmc
jmpw
loope
clc
insb
dec
inc
jg
icebp
or
fstpl
popa
jmp
lahf
imul
mov
sub
arpl
and
xor
and
addb
inc
xlat
in
jnp
hlt
jae
mov
fadd
pop
dec
push
xchg
repnz
add
dec
scas
inc
sarb
jns
cltd
cwtl
insb
mov
decb
mov
ja
stos
xor
cs
out
mov
dec
test
fcoms
adc
cs
or
xor
mov
inc
jg
shll
push
popf
in
adc
into
out
push
nop
or
fildl
inc
jne
addl
xchg
mov
jp
xchg
leave
fsubl
stos
mov
mov
add
xchg
mov
sbb
cltd
inc
push
mov
cmp
push
push
adc
popf
lds
lea
mov
cmp
inc
add
xchg
adc
pop
or
mov
cwtl
cmc
int
sub
fwait
xchg
and
cmp
mov
ficoml
cmp
int3
cmp
test
pusha
cmc
jecxz
mov
and
pusha
pop
or
push
pop
iret
popf
leave
scas
cld
or
and
flds
pop
mov
mov
dec
mov
mov
jne
mov
add
jle
loop
mov
rclb
sub
push
adcb
pop
iret
inc
xor
mov
xor
fwait
icebp
jbe
iret
push
out
icebp
push
out
pop
xor
loop
push
jae
mov
inc
lods
jne
adc
inc
lahf
jle
or
sub
sub
call
jb
scas
push
shll
inc
hlt
stos
inc
adc
lahf
xchg
or
or
push
cld
frstor
xchg
cmp
cmpb
mov
aad
dec
mov
sbb
icebp
push
push
in
adc
dec
mov
jnp
aas
dec
ja
push
and
test
push
ja
sbb
stos
xor
flds
stos
adc
rorb
xlat
inc
out
inc
adc
inc
mov
push
mov
sbb
push
and
xor
popf
cwtl
fidivl
lea
je
jne
add
mov
jns
cmp
mov
out
jb
data16
inc
push
data16
aad
aas
cltd
xchg
enter
imul
adc
lds
gs
dec
leave
fstpl
out
mov
mov
std
xchg
xchg
sbb
cltd
stos
or
pop
adc
mov
sbb
dec
sbb
mov
jnp
push
mov
add
inc
jae
and
jnp
shrl
jns
adc
mov
mov
xor
mov
movsb
ljmp
xchg
sub
and
mov
push
aas
xchg
xor
mov
sbbb
jmp
mov
cli
sub
lcall
push
shr
cmp
sbb
jnp
fisubrl
mov
pusha
xor
arpl
and
mov
pop
jno
push
shll
nop
add
sbbb
add
jmp
cmpsl
daa
bound
mov
inc
sar
inc
inc
xchg
jp
mov
xlat
jmp
adc
cmc
insl
dec
mov
popf
push
add
mov
sub
cmp
lds
pop
sbb
and
inc
rolb
mov
mov
leave
or
mov
xchg
sub
nop
icebp
sbb
in
mov
pop
sbb
pop
cmpsl
andb
xchg
push
scas
cmp
mov
js
fiadds
cs
cmp
jle
scas
repz
aaa
mov
cmp
orb
je
sbb
dec
mov
xchg
inc
xchg
lcall
stos
test
movsl
popa
ss
pushl
rol
in
adc
mov
sbb
pop
push
adc
or
ret
sub
dec
push
mov
shr
or
fdiv
cltd
cmp
mov
add
testl
out
adc
mov
js
xchg
or
imul
mov
ljmp
not
cli
fcmovnb
out
xor
imul
pop
mov
repz
hlt
pop
fildl
pushf
and
mov
dec
xor
and
pop
fisttpll
add
lods
dec
add
or
jo
lods
inc
xor
mov
std
mov
rsm
xchg
cmp
dec
decl
sbb
repnz
aad
int
out
loope
jecxz
out
or
xchg
daa
negl
cld
cmp
sbb
pusha
lock
sub
dec
test
adc
xor
ss
stos
sub
pop
or
pop
mov
jl
sarb
movsb
decl
pushf
int3
xchg
cmpsb
imul
out
jg
inc
or
pusha
stos
xchg
in
and
jg
int3
or
jg
xor
fcmovb
insb
add
mov
xchg
mov
negl
pop
clc
jmp
stc
repnz
cli
popf
cmpsl
addr16
push
adc
int
mov
push
jns
dec
ss
xchg
repz
loope
les
mov
xchg
jp
mov
pop
adc
addl
test
mov
outsl
and
test
adc
xor
mov
leave
and
dec
push
mov
loop
out
mov
inc
xchg
xlat
inc
out
loop
pop
cmp
xor
cmp
dec
lahf
pushf
inc
lock
jge
lock
pop
dec
mov
sbb
movsl
sub
popa
mov
cli
scas
inc
scas
lret
pop
mov
add
outsl
movsb
add
test
in
jmp
sub
push
pop
sti
std
stos
jl
sar
mov
test
pop
and
jge
pop
fdivl
lods
jp
fwait
cmpsl
lcall
add
mov
jae
out
inc
je
out
mov
fimull
sbb
xchg
cmp
mov
add
dec
jl
pop
dec
dec
adc
in
pop
push
jge
add
dec
push
pop
mov
insl
fsubs
clc
xor
pcmpgtb
or
and
stos
insb
pop
mov
mov
dec
xor
sbb
adc
ds
cmp
test
cltd
cmp
push
js
fwait
mov
out
rcrl
aaa
cli
mov
fiadds
cmp
and
jmp
pop
dec
xlat
adc
cmp
push
aam
dec
pop
mov
xchg
sahf
je
imull
push
inc
rorb
repz
andb
mov
add
pop
xchg
push
pop
int
addr16
pop
ret
jo
or
faddl
mov
lcall
lods
mov
inc
push
loop
xchg
xchg
adc
cmpsl
rcrl
add
xor
or
mov
mov
sbb
ret
cmpsl
paddusw
xchg
bound
mov
loop
xor
out
add
repnz
xchg
pop
aam
push
fcom
mov
mov
stos
pushf
mov
xchg
adc
pop
mov
pop
call
in
mov
push
jb
lcall
pop
cli
lods
lea
ret
xchg
sub
xorb
repnz
mov
push
mov
and
pop
enter
add
dec
stos
pop
pop
mov
xchg
pop
or
fstpl
popa
cmp
push
out
mov
mov
scas
in
mov
mov
push
iret
push
loop
std
xchg
add
jne
sbb
sbb
xchg
lods
cld
sbb
add
or
sub
xchg
sbb
xchg
sbb
xor
insb
mov
or
outsl
mov
adc
adc
dec
aad
sti
dec
push
stos
js
xchg
cmp
mov
test
in
mov
mov
outsb
or
shrb
push
mov
xchg
mov
dec
add
lods
pop
out
outsb
mov
sbb
outsb
cmpb
sub
fldt
xor
cmp
fildl
shlb
dec
mov
loop
call
mov
out
xlat
repz
enter
mov
out
jl
shll
es
or
sub
test
push
mov
jne
mov
inc
ror
lret
ja
adc
shr
lcall
pushf
push
into
sbb
jne
out
lahf
jbe
int
repnz
mov
adc
test
jmp
jg
push
jl
fdivrl
pushf
inc
insl
mov
pop
mov
cs
fwait
iret
and
aad
test
out
cmp
or
push
pop
pop
out
arpl
jp
jns
notb
imul
sub
sbb
lock
push
mov
in
dec
xchg
cmc
daa
jl
xchg
and
call
and
fistpl
xchg
ja
leave
fsubrs
add
out
out
xor
xor
into
imul
pushf
jbe
mov
or
fcmovu
push
and
pop
test
push
mov
xchg
in
push
mov
andl
fucomi
cmp
mov
push
loope
xor
cmpsb
lock
xlat
rorb
dec
mov
or
mov
mov
jbe
mov
sahf
push
mov
xchg
xor
and
cmp
sub
inc
and
scas
lret
fsubrs
les
std
add
push
push
and
xor
and
ds
jp
jge
fidivrs
pop
mov
leave
and
dec
xchg
outsl
sub
sub
mov
push
sahf
mov
adc
aas
bnd
loope
sbb
push
jl
insl
jl
mov
out
andb
loopne
test
fsubs
push
cltd
mov
jnp
dec
inc
jecxz
mov
mull
jl
loopne
rol
inc
cmp
insb
ljmp
mov
mov
ret
jnp
cmp
push
out
sub
out
adcl
jne
movsb
mov
faddl
push
popl
out
daa
push
imul
loope
inc
jo
pop
insl
gs
fcmovnbe
push
mull
and
cli
push
hlt
outsb
fs
dec
js
popa
popf
push
fisubrl
mov
mov
insb
sbb
std
pop
push
dec
fldln2
push
fmuls
lock
adc
scas
iret
mov
jns
inc
ds
stos
dec
rcrl
push
inc
mov
leave
xor
xchg
ret
imul
mov
nop
dec
into
pop
add
mov
or
sbb
cmp
inc
fsubrl
xchg
stc
stc
popf
dec
je
imul
push
mov
js
dec
les
pop
pop
fisubrs
lds
jmp
js
insb
mov
aam
cwtl
xchg
sbb
daa
inc
mov
inc
insl
jne
lar
pop
sub
jne
pop
xchg
popa
lcall
fs
addl
pop
int3
jbe
adc
div
jne
jbe
mov
push
lods
cmp
inc
mov
sarb
xchg
jno
je
push
lods
das
xlat
xor
mull
cmpsl
aas
jecxz
fldcw
mov
sub
jle
mov
lret
inc
idivb
xor
xor
int
mov
ljmp
lock
push
and
or
loopne
es
bound
in
add
xor
neg
loope
in
pop
mov
add
and
out
je
xor
test
pop
das
notl
les
pushf
push
lds
xchg
cwtl
movsb
scas
sub
or
fmul
mov
imul
incl
in
cmp
push
mov
add
loop
sbb
in
xor
xchg
push
out
bound
cmp
lcall
lahf
mov
dec
cmp
out
jge
or
xchg
inc
mov
dec
cmc
fdivrl
int3
pop
and
psubsw
out
rcl
or
in
mov
jns
idivl
int
test
adc
push
push
jne
mov
mov
stos
xor
xor
mov
test
mov
cmpsl
inc
test
push
sbb
add
mov
ret
lret
cwtl
mov
add
jb
push
inc
aam
mov
pop
push
sub
nop
pusha
adc
jae
mov
int3
ljmp
fmull
and
add
pop
mov
add
dec
push
add
daa
mov
mov
fiaddl
mov
adcl
fs
mov
notl
lcall
dec
cmp
scas
movntps
push
and
cmp
in
inc
push
nop
mov
cmp
or
rolb
into
dec
sub
mov
jl
ds
gs
cmp
pop
subb
jmp
jbe
js
out
movsb
in
cltd
ret
fwait
mov
jnp
push
rorl
mov
inc
sbb
or
sbb
sub
jge
cpuid
pusha
cmpsl
mov
je
push
lods
cmpsb
sbb
test
sbbl
jle
insb
sub
cs
or
pop
sbb
sub
fstp
sbb
pop
test
fsub
jmp
adc
test
push
pop
mov
andl
or
mov
ret
push
fwait
mov
adc
in
loop
scas
jns
jl
push
inc
inc
mov
push
aas
jmp
pop
sbb
popf
dec
xchg
pop
mov
push
mov
xchg
add
arpl
data16
adc
pop
sbb
or
pop
lock
test
divb
enter
mov
mov
pop
mov
fistl
xchg
push
pushf
sti
fisttpll
dec
add
roll
dec
mov
sub
xchg
lss
adcl
mov
aad
adc
fiaddl
and
push
push
xchg
xor
sub
jp
call
pop
scas
jecxz
in
and
out
pushf
iret
lcall
lea
sahf
pop
add
and
int3
push
jge
push
aas
scas
test
jns
stos
dec
std
sub
or
divb
out
cmc
imul
testb
repnz
arpl
xchg
stos
xor
cmp
adc
mov
dec
push
loopne
cmp
int
popf
dec
inc
aas
xlat
pop
push
mov
add
out
iret
fmull
add
lock
mov
pop
push
lds
mov
and
mov
pusha
or
rclb
mov
pop
mov
loope
xchg
mov
enter
fsubl
into
aam
cmp
out
subb
xchg
jnp
sbb
out
push
pop
enter
and
jae
dec
leave
mov
push
aad
aam
sub
aam
in
inc
xor
loop
insl
popl
pop
repnz
lcall
scas
pop
jmp
in
push
jg
mov
push
add
adc
aas
sub
xchg
cmp
push
lcall
out
cmpsl
cmpl
mov
cmpb
mov
mov
mov
les
or
mov
shrl
leave
sbb
lahf
int
adc
aaa
aas
mov
sub
push
jg
es
stos
mov
mov
sbb
mov
cmp
dec
xchg
cmp
ror
xor
scas
push
fistl
dec
cmp
mov
jge
pop
xchg
jp
inc
scas
xchg
jb
cmp
test
aam
gs
dec
pop
or
nop
enter
adc
mov
xchg
xlat
loopne
ret
push
jnp
decl
and
lea
and
js
testb
int3
jo
je
cli
cmp
ds
adc
or
sub
scas
jns
dec
jecxz
pusha
mov
ja
push
mov
test
dec
dec
or
dec
sbb
xor
mov
sbb
and
sub
fcomi
inc
loope
jle
jae
cmp
mov
jp
popf
mov
pop
es
adc
jno
aad
outsl
test
adc
xchg
mov
xchg
movsb
aad
mov
xor
dec
adc
sbb
insl
test
pop
bnd
sub
or
test
fdivl
mov
jno
mov
or
iret
or
ljmp
dec
lcall
jo
add
inc
subb
pop
mov
dec
sbbb
sub
jl
xchg
mov
inc
mov
mov
clc
jl
cltd
sub
jge
xchg
shll
fldt
fisttps
mov
pop
loope
inc
mov
xor
loop
cmpsb
pop
js
and
lahf
mov
sbb
mov
cmp
cmpsl
pop
les
inc
adc
sub
arpl
call
jle
sbb
and
push
inc
loop
xlat
das
fisttpl
scas
push
cmp
jp
jmp
inc
loop
xchg
mov
outsl
push
in
cwtl
adc
push
dec
lods
dec
push
daa
fisubrl
std
sub
and
xchg
lods
or
enter
push
pop
pop
jne
data16
adc
cs
into
out
fxch
add
mov
xchg
fidivrs
jns
roll
lret
hlt
push
pop
mov
cmp
xlat
cli
sahf
xchg
jns
hlt
adc
scas
push
jbe
push
sub
fnsave
imul
adcb
adc
push
dec
cwtl
dec
gs
jmp
dec
mov
adc
addr16
ja
and
cmpsl
stos
stos
rcr
mov
xchg
pop
test
pop
cmc
mov
jge
add
lds
fsts
lahf
rcrl
out
jnp
lods
cmpsl
mov
mov
fwait
imul
les
sahf
xor
pop
jmp
push
jg
testb
mov
in
and
adc
test
inc
dec
inc
sbb
cmp
test
pop
dec
clc
push
int
leave
mov
sub
sub
adc
adc
push
imul
sub
rorl
enter
and
test
int
push
ss
mov
loope
or
ljmp
neg
test
loope
jae
arpl
mov
xchg
jle
add
cmpsb
jle
movsb
push
mov
sub
cmpb
xchg
push
sbb
dec
sahf
add
cmpsl
xor
xor
lea
pop
lock
fxch
leave
pusha
dec
pop
jmp
inc
mov
add
dec
and
dec
pop
dec
cwtl
cli
sbb
loopew
out
pop
dec
cmpsb
out
std
outsb
lret
les
and
xchg
cmp
popf
xchg
xchg
cs
stc
cwtl
stos
push
or
mov
insb
add
pop
dec
lcall
ja
or
aad
xchg
stos
mov
pusha
stos
sbb
dec
jae
push
mov
movsb
pop
ret
xor
inc
dec
jmp
idivb
sbb
fsubrl
dec
or
mov
sbb
cwtl
jmp
pop
out
xchg
jae
cmp
addr16
and
insl
arpl
sbb
push
int
add
mov
in
out
outsl
dec
in
and
mov
cmp
arpl
popa
cmp
aam
sub
or
bound
lock
xchg
cmp
lods
bound
and
sbb
sub
int
dec
xchg
pop
cmpsb
add
in
out
pop
xchg
xor
fadds
pop
jmp
stos
pop
out
arpl
push
dec
and
mov
sbb
out
clc
shlb
ret
adc
ret
xor
js
push
out
rorb
lods
lds
ss
jne,pt
dec
popf
jne
sub
iret
push
jo
xor
dec
add
jns
add
push
lods
rcl
push
inc
xchg
add
into
add
push
lret
addr16
lahf
aam
fstps
dec
sbb
es
int3
dec
clc
add
imul
mov
xchg
sub
mov
push
inc
addr16
fs
sbb
fwait
jmp
dec
xor
jp
xchg
aas
sbb
mov
push
push
out
sbb
lods
or
cmc
xchg
in
xchg
inc
add
fistl
jno
push
jb
mov
adc
aas
xlat
outsb
push
jbe
icebp
cmp
lret
sahf
idivl
dec
dec
mov
push
jb
sub
and
jne
push
in
push
popl
sbb
movsb
jne
jmp
pop
jbe
js
add
mov
dec
mov
bound
clc
repnz
mov
mov
aas
lds
aad
add
data16
mov
rclb
pop
jae
out
test
inc
dec
filds
fstpt
icebp
jecxz
adc
rcrb
dec
arpl
enter
aas
xchg
in
push
mov
xchg
mov
cmp
pushf
mov
pop
int3
jns
mov
mov
jnp
inc
pop
in
jg
or
push
out
pusha
roll
sbb
call
xchg
cmp
push
popa
add
stc
sbb
aad
pop
xchg
inc
cmp
ffreep
cmpsl
addr16
push
ret
addb
jg
push
lret
iret
xor
mov
fcomps
pop
dec
xor
jecxz
in
ret
lods
jmp
addr16
xlat
inc
test
ljmp
or
fs
push
out
dec
sti
into
aas
dec
or
mov
and
lret
sarb
aas
gs
xor
inc
lahf
jns
or
fcoms
or
add
cmpb
mov
faddl
sbb
xor
pop
arpl
cwtl
mov
jae
cmp
inc
les
sub
adc
test
push
inc
xchg
popf
notl
jo
or
dec
or
mov
sub
in
xor
enter
inc
inc
scas
inc
jne
fcoml
adc
adc
adc
mov
push
and
mov
jb
test
sub
mov
pop
mov
mov
cmpl
test
xor
subb
jle
aad
pop
dec
cmp
mov
xchg
mov
adc
in
mov
movsl
jne
jecxz
jo
sbb
dec
mov
stos
je
sahf
xchg
fcompl
pusha
mov
jns
add
xchg
test
mov
adc
and
hlt
loopne
loop
in
scas
cmpsl
fsubrl
mov
mov
or
nop
mov
in
fistpll
jo
ret
jns
mov
mov
lods
fdivs
popa
push
rorb
fidivl
xchg
popa
sbbb
sbb
subl
pushf
adc
dec
fnstcw
xchg
adc
dec
add
adc
and
mov
sbb
fistpll
adc
inc
xchg
fidivl
lds
mov
lret
jp
mov
lret
add
lods
daa
fistps
jno
dec
xor
hlt
fdivrs
pop
jae
ss
jnp
push
outsb
push
bnd
lods
and
loop
mov
or
sub
lea
push
ss
testl
xorl
adc
pusha
aam
push
aas
push
daa
out
arpl
mov
insb
les
les
jne
ret
xor
push
shll
or
fcmovnbe
movsl
jo
adc
test
ja
pop
add
stos
outsb
shll
repnz
imul
loopne
cmp
lea
or
fisttpll
mov
pop
mov
jle
stc
cmpb
cld
outsb
mov
push
xchg
scas
sub
fdivrs
out
rclb
enter
jl
sub
in
push
jle
pop
mov
cmc
sbb
out
lret
out
xor
call
popf
add
fwait
push
sub
es
fdivrl
movb
je
arpl
inc
loop
int3
adc
or
mov
mov
into
mov
mov
xchg
cs
push
clc
cmpsb
dec
repnz
xchg
dec
adc
mov
pop
mov
sti
and
icebp
push
or
fs
sub
inc
les
mov
mov
jmp
rolb
into
imul
or
xchg
inc
push
insb
inc
mov
lea
out
push
sub
bound
cs
js
js
enter
xor
dec
test
push
cwtl
mov
cmpsb
jno
js
sbb
hlt
fsubrs
jl
nop
dec
stos
sbb
popa
adc
leave
sbb
mov
aas
cmpsl
sbb
jmp
add
or
sbb
mov
cmpl
outsb
ret
pusha
or
inc
add
int
pop
inc
pop
arpl
push
arpl
sahf
xchg
es
fisttpll
jb
add
mov
xchg
mov
pushf
xchg
jne
and
fadds
nop
aad
fisubrl
mov
fmull
loopne
adc
repz
cltd
mov
lods
lahf
dec
arpl
das
inc
int
xor
inc
cmp
lea
cltd
daa
mov
cmp
fucomip
push
sbb
fdivrp
lret
sbb
repnz
stc
and
daa
cld
aaa
loop
mov
jl
push
sub
xor
lds
or
push
mov
fsubs
mov
xchg
push
mov
push
ja
lcall
or
dec
pop
and
fdivrp
xchg
cmp
mov
push
jg
stc
out
out
es
lods
rclb
mov
cmp
add
jnp
shll
nop
jbe
cwtl
jecxz
insl
xchg
adc
mov
sub
filds
loopne
sbb
in
cwtl
in
pop
mov
scas
aad
insl
xor
or
sbb
insb
mov
jl
divl
xor
mov
andl
lods
int3
mov
fnstcw
cmp
nop
sub
adc
add
inc
cwtl
je
cmp
mov
cltd
jb
xchg
mov
or
cmc
popf
in
loop
shrb
outsl
jnp
sbb
insl
xchg
movl
cmp
mov
aas
inc
es
aas
add
pusha
and
pop
add
cmpsb
or
adc
pop
jp
addr16
clc
lods
pop
loopne
push
xchg
bound
push
cmpsl
add
and
fcoml
in
test
push
repz
shlb
inc
sbb
ret
pusha
outsb
cmpsb
mov
cmp
push
cmp
sbb
and
arpl
and
xchg
sub
fidivs
jmp
nop
cld
xchg
add
inc
lret
sbb
aas
mov
movsl
push
iret
shlb
add
jae
sbb
nop
andl
jne
and
mov
inc
push
daa
sbb
in
int
sub
lods
sub
dec
adcb
jo
push
jae
ja
jg
mov
adc
mov
xchg
icebp
jmp
inc
in
nop
addr16
xor
cld
cmp
add
cmp
sub
lds
push
sub
push
pop
push
out
inc
aam
jbe
jb
mov
jb
inc
sbb
aas
mov
sub
fs
xchg
dec
pop
fs
frndint
inc
bound
mov
shll
jge
jns
test
push
inc
outsb
into
cmpl
mov
stos
and
test
adc
es
pop
mov
and
lods
inc
aam
aad
sti
out
or
add
mov
decl
pop
into
lret
gs
aad
mov
xor
int
push
jns
test
in
inc
xchg
adc
lret
push
mov
or
xchg
cli
insl
mov
mov
push
pop
push
arpl
inc
sti
rorb
movl
add
push
cmp
imull
mov
sbb
sbb
out
insl
cltd
pop
add
andb
cwtl
int
xchg
pop
enter
jecxz
add
lret
jge
cmp
clc
test
js
xor
cmp
xchg
out
mov
inc
arpl
and
jge
ds
xor
adc
ret
cltd
mov
cs
push
sti
pusha
inc
xor
inc
pop
call
das
or
lea
dec
rclb
aam
and
sbb
stc
mov
inc
adc
ljmp
es
movsb
dec
fchs
sub
ficoml
pop
cltd
testb
xor
dec
adc
cmc
push
pop
adc
pop
mov
out
dec
xor
lea
push
push
jge
ljmpw
loop
icebp
mov
inc
movsl
inc
xchg
cmp
sbb
inc
and
jb
sti
jecxz
rcr
mov
sbb
jo
stc
push
test
divb
popa
dec
dec
inc
add
fimuls
adc
popa
mov
mov
js
cld
fistps
sub
and
aad
aad
sbbl
and
mov
sub
inc
packsswb
jnp
add
pop
or
je
loopne
imul
mov
jg
jp
mov
mov
popf
push
dec
mov
jne
sbb
adc
add
fistl
call
mov
popa
xor
int
sahf
into
jle
mov
icebp
ja
add
dec
fsubs
sub
push
aam
test
divb
adc
or
hlt
repnz
leavew
scas
mov
inc
xor
ljmp
sub
int3
and
adc
push
iret
aad
loopne
lods
gs
dec
daa
into
movsb
out
xchg
hlt
push
sbb
adc
outsb
data16
lahf
test
popf
mov
sub
jle
jl
pushf
je
or
xor
adc
fcoms
adc
inc
xchg
scas
imul
lcall
pop
jnp
rcrb
enter
push
cmp
insb
push
xor
inc
mov
dec
test
adc
push
push
addr16
push
aad
outsb
std
mov
icebp
inc
fstps
imul
mov
ja
mov
adc
fstps
stos
insb
ja
rcrl
pop
jns
rcr
icebp
adc
sub
scas
pop
fisttps
cwtl
dec
pop
mov
pushf
subb
mov
dec
lds
mov
mov
fs
aas
arpl
and
adc
fsubs
cmc
mov
pop
xorl
imull
jnp
aam
test
adc
add
sbb
xchg
stc
dec
cmp
xchg
mov
lahf
push
push
orb
jmp
out
cmp
cs
xlat
incb
lea
dec
and
xchg
lea
bound
loopne
lret
ss
andl
sbbb
stos
mov
fistpll
push
loopne
and
sub
clc
insb
jp
cmc
mov
jl
icebp
mov
mov
outsb
inc
int3
mov
sbb
lea
push
dec
and
adc
fwait
adcl
out
mov
sbb
cltd
mov
rcrb
cwtl
xchg
jae
fdivl
sub
sub
shr
pop
jl
jne
mov
dec
mov
push
mov
out
or
aas
popf
cmpsb
sub
lock
adc
jmp
xchg
mov
mov
frstor
mov
inc
fsub
addr16
leave
fsubl
xchg
adc
mov
xchg
nop
sbb
pop
cmc
mov
sbb
ret
mov
pop
push
stc
fsubs
scas
dec
mov
xor
mov
call
fimuls
sub
and
rorb
adc
pushf
cwtl
jl
fisubs
cld
ret
add
addr16
ret
mov
lods
push
pushf
sbb
lock
jecxz
adc
mov
fsubr
sub
mov
lock
adc
lret
pop
mov
adc
repnz
loopne
das
lock
pop
jnp
lock
std
push
test
sub
jl
cwtl
cmp
mov
xchg
sub
dec
lret
out
sbb
fs
bound
cltd
aam
cmp
popf
sub
dec
cwtl
mov
cmp
push
or
mov
test
dec
dec
fcoms
test
lods
dec
ss
cmc
and
pop
dec
xchg
push
sub
rcrb
xor
xor
jno
imul
push
sarl
or
fcomp
push
mov
or
pop
cltd
out
xor
popf
xchg
push
mov
add
flds
ljmp
arpl
dec
int3
mov
push
in
dec
std
add
iret
push
dec
pop
pop
push
push
cmpsb
cmp
lds
jo
mov
cmp
mov
int
push
mov
and
mov
fbld
cmp
mov
pop
pop
xchg
push
jle
negl
mov
push
fwait
stos
adc
orb
xor
push
lods
cmpsb
js
lret
cld
daa
sub
addb
mov
scas
pop
sbb
pop
xchg
push
lds
or
mov
fisttps
pop
pop
aaa
sub
xlat
mov
xchg
ret
mov
mov
xchg
lret
into
lret
loope
mov
jp
scas
push
and
mov
fwait
cmp
andb
and
mov
lcall
push
mov
enter
or
push
insb
xchg
sub
or
mov
cwtl
leavew
jg
das
das
mov
leave
insb
jo
push
test
dec
scas
ret
rcrb
std
out
in
cli
ljmp
cmp
test
frstor
std
xchg
sbb
ret
lret
xorb
pop
rcrb
cli
lds
mov
fdivp
inc
or
test
sub
lret
pop
loop
xchg
mov
loopne
dec
mov
sub
es
fcmovu
xor
xor
imul
cs
pop
loop
pop
repz
loopne
mov
push
inc
jae
sbb
pop
or
insl
and
lcall
dec
jns
xor
inc
xlat
dec
or
add
js
aas
mov
rcll
xchg
fidivl
in
movsb
js
cmovae
pop
into
push
mov
aad
sbb
nop
out
dec
jmp
sbb
mov
jecxz
lock
lds
fwait
adc
push
popl
out
movsb
insb
lret
xchg
xor
mov
imul
xor
pushf
stc
add
xchg
ja
push
jp
mov
add
xor
sahf
push
xchg
cli
pop
mov
enter
xor
rcl
pushf
dec
inc
loopne
jbe
jno
scas
js
or
mov
loope
clc
mov
xchg
scas
and
sbb
jns
push
rcr
pop
daa
cmp
ja
add
fs
xchg
jp
cli
out
pusha
push
jmp
mov
sbb
sub
pusha
out
jae
sbb
add
or
pop
repnz
test
or
insb
pop
imul
out
xor
xchg
and
xchg
popa
mov
mov
pop
xchg
lret
dec
test
int3
sarb
push
adc
jb
frstor
aaa
add
xchg
xor
sub
pop
nop
out
cmp
add
insb
push
cmp
aaa
cwtl
mov
dec
xorl
imul
cmp
dec
add
repnz
pop
clc
test
mov
in
lret
dec
cmp
mov
jg
push
xchg
outsb
mov
fisubl
sbb
sti
push
xchg
add
incl
xor
jmp
out
aam
cwtl
shlb
cmpsl
pop
js
sub
xor
outsl
fimull
cld
subl
push
and
test
sub
jl
or
push
out
mov
or
mov
or
pop
fisubrs
in
divb
pop
push
inc
dec
cmpb
gs
push
mov
lock
hlt
dec
jge
pop
imul
sub
xchg
pop
into
xchg
cld
sub
loope
sahf
inc
dec
in
and
pop
add
xor
and
inc
sub
fucom
jp
lods
pop
and
pop
arpl
lock
std
jmp
inc
push
mov
sub
fsubs
or
je
enter
cmp
enter
mov
or
or
push
add
xchg
movsl
dec
push
inc
iret
lds
outsl
cli
dec
icebp
leave
adc
mov
sbb
sub
fildl
push
or
dec
add
scas
pusha
xchg
jns
sbb
xor
hlt
lea
imul
cmp
loope
xor
add
nop
push
sbb
mov
out
adc
cwtl
and
in
dec
jmp
int
mov
dec
mov
lods
insl
jae
in
aaa
pop
daa
adc
cltd
and
mov
mov
xor
jg
jns
xor
aas
sbb
push
setg
sar
sbb
xchg
and
int
mov
test
pop
scas
pushf
and
roll
outsl
mov
cltd
and
test
adc
or
bound
pop
in
mov
or
mov
push
pop
loope
jl
in
insl
mov
mov
loop
out
lods
mov
jbe
test
repnz
sbbb
rcl
pop
ret
adc
xchg
jmp
cmp
sahf
rorl
leave
out
call
add
call
dec
sbb
in
push
add
mov
inc
shlb
push
add
daa
xchg
das
push
nop
mov
mov
push
push
inc
xchg
adc
cmp
stos
dec
or
lock
dec
lahf
fdivrs
jmp
adc
cmpsl
mov
loope
inc
nop
and
nop
xor
cmpsl
push
xor
cmpsb
ja
push
in
sbb
mov
outsl
push
mov
pop
add
sbb
lea
mov
adc
gs
cmpl
xor
dec
out
adc
notb
aad
push
push
sbb
fwait
inc
or
mov
lods
mov
push
xchg
mov
and
aas
fisubl
sbb
out
lods
inc
sub
lock
pop
or
rcrl
ret
out
mov
mov
push
or
out
sbb
jnp
adcl
push
hlt
cmp
cmpb
js
js
fidivl
add
out
int
pop
ss
mov
dec
mov
mov
outsl
scas
fldln2
ja
and
shl
popf
shll
rcr
shrl
dec
push
mov
sahf
out
xchg
mull
xchg
xchg
jp
addr16
icebp
cs
dec
mov
adc
or
fidivl
stc
inc
lret
jle
enter
inc
int3
pop
push
mov
mov
shr
inc
out
jns
dec
popa
cwtl
movsb
add
lock
clc
mov
xorl
inc
jne
xlat
mov
stos
aam
mov
xor
les
lret
mov
je
mov
sbb
xchg
and
and
bound
daa
push
nop
sti
mov
rorb
lock
xchg
movl
fisubrs
call
mov
jmp
inc
or
adc
out
sub
xor
cmp
stos
or
in
sub
lea
xchg
or
in
or
xchg
dec
inc
rep
push
pop
xor
ss
push
imul
and
in
fsub
and
pop
jnp
int
mov
inc
lods
inc
lods
data16
imul
fs
push
test
cmp
jbe
sbb
dec
int3
mov
jne
and
notl
bndldx
xchg
push
popf
xchg
in
pop
test
add
mov
mov
adc
stos
dec
xor
outsl
cmp
push
xchg
push
rcrb
cmpsb
xor
jle
jbe
jl
mov
sub
test
dec
adc
pmuludq
mov
adc
lock
push
lahf
int3
cmp
cmp
int3
int3
mov
sub
jns
jno
push
jbe
mov
gs
inc
test
inc
xchg
mov
and
outsl
mov
adc
mov
aad
mov
push
mov
adc
test
rorb
sub
cmpsb
jbe
lret
negl
lods
lret
inc
dec
stos
mov
out
lcall
jl
fistpll
cmp
outsb
mov
cs
ja
into
cs
cmp
movsl
dec
sbb
pop
fcompl
aad
mov
rcl
xchg
sub
mov
test
sub
icebp
lea
push
out
ljmp
cmp
ds
int3
sbb
shlb
gs
pop
in
aad
cmp
mov
xchg
rcrb
mov
loopne
sbb
fnstenv
std
aaa
shll
cwtl
aad
dec
sbb
mov
mov
mov
pop
movsb
xchg
xor
jg
in
movsb
xchg
sbb
cmovb
ffree
subl
call
std
jnp
dec
xchg
adc
imul
scas
sub
dec
data16
adc
pusha
pop
push
jne
push
jno
sbb
pop
insb
pushf
xor
pop
sbb
fwait
adc
sub
mov
sub
cmp
fidivl
movd
add
call
xchg
inc
scas
lea
inc
jecxz
mov
push
pop
in
adc
inc
fnstsw
add
xor
push
xlat
jmp
rolb
mov
lea
fisubs
into
sbb
loop
sbb
xchg
jnp
pop
and
xor
and
add
or
mov
dec
mov
xchg
movb
iret
dec
popa
pop
negb
cmpsl
dec
sub
sbb
sub
push
xor
mov
dec
xchg
xor
jmp
mov
xor
and
arpl
jne
stos
jno
cmp
xor
sub
add
cmp
push
fcomps
movsb
dec
pop
out
inc
add
cs
add
xor
xchg
stc
xlat
sbbb
aas
testb
and
into
add
fildll
xchg
push
fisubrs
xor
inc
or
andb
and
add
add
addr16
out
pop
outsb
jne
mov
int3
push
data16
mov
cltd
sbb
inc
push
lds
imul
xchg
mov
inc
xor
push
stc
ljmp
mov
lock
in
sbb
dec
mov
xchg
pop
adcb
jge
mov
adc
xchg
dec
push
mov
push
mov
orl
dec
fists
call
sub
in
jmp
mov
pop
sahf
push
cmp
sbb
pop
add
ljmp
leave
in
sub
pop
cmpsb
cli
sbbl
sub
fstpl
in
js
cmpsl
cmovs
xor
rcrb
outsl
mov
cltd
push
mov
mov
push
push
lock
push
lss
iret
ret
stc
xchg
dec
dec
pop
push
movb
mov
lret
push
inc
or
scas
pop
mov
mov
or
push
cli
mov
movsb
xchg
js
js
repz
into
mov
testl
cmp
or
js
pushf
xchg
in
fisubs
cld
int
out
jnp
les
hlt
es
incb
inc
dec
iret
pop
dec
push
lret
test
pop
jecxz
and
lret
sti
or
push
enter
les
mov
jae
mov
js
pusha
xor
scas
fnstenv
push
stc
shrb
add
idivl
je
jo
push
sbb
push
pop
and
xchg
fcomi
xlat
add
movsl
xlat
loopne
add
jmp
sbb
push
fnstcw
stc
and
fiadds
iret
cmp
out
and
fmuls
mov
popl
mov
push
push
in
scas
push
icebp
int3
or
hlt
sub
and
sbb
lods
xor
inc
arpl
sub
mov
shll
repz
stos
push
imul
ss
lret
add
fnstcw
pop
int3
repnz
fneni(8087
bound
imul
xchg
inc
xor
testb
out
popa
jnp
fldl
push
bound
cs
xlat
push
gs
stos
push
loopne
push
adc
and
sub
into
pop
sub
jno
and
scas
enter
adc
sbb
sbb
cli
ficoml
leave
cld
push
pop
jns
sahf
insl
bound
xchg
gs
xchg
xchg
loop
jno
test
xor
sub
or
pushf
push
ljmp
in
cmpsb
scas
mov
int3
pop
push
mov
hlt
loopne
xchg
dec
mov
decb
cltd
jmp
pop
lahf
pop
mov
inc
ja
and
sahf
enter
ds
xchg
outsl
inc
jne
nop
enter
and
sub
cwtl
sbb
cmp
pop
shrl
cmp
daa
sbb
imul
lods
pop
inc
pusha
add
insl
cmpsb
mov
aas
adc
fadds
lahf
sahf
pusha
pop
cli
fldpi
nop
push
mov
inc
int
mov
sub
clc
loopne
pop
or
mov
fwait
adc
mov
fldcw
test
push
cmc
mov
dec
pop
add
jecxz
into
ret
mov
nop
pop
jnp
shrb
insl
ucomiss
clc
je
fnstsw
fsincos
mov
movsb
sbb
out
shrl
xor
jmp
xor
dec
je
int3
aas
jae
push
xlat
in
mov
and
cmp
push
mov
daa
inc
or
jne
adc
sub
dec
or
jcxz
enter
sbb
insl
inc
std
mov
sub
sbb
jl
stc
mov
loop
cld
neg
lods
push
cmp
and
adc
cmpsb
pushf
pushf
mov
mov
cmpsl
add
les
dec
xor
je
shll
dec
xor
in
rcll
push
jnp
jno
mov
sub
scas
js
dec
ljmp
jno
or
lock
xchg
adc
cmp
pop
lock
je
push
lds
ss
mov
ret
fidivrs
leave
shlb
xchg
xor
das
es
dec
xchg
xchg
bound
stos
subb
push
jno
or
sbb
mov
andl
mov
sbb
pusha
cmc
call
lea
outsb
add
xchg
push
icebp
mov
outsl
scas
mov
push
mov
into
fstpl
xchg
out
int
push
push
xchg
mov
jmp
sub
push
pop
out
jle
xor
or
outsl
mov
jg
pushf
cli
mov
cs
repnz
enter
pop
xor
xor
cmc
lds
jge
sub
jge
out
or
dec
clc
addr16
cltd
enter
cmpsl
lret
push
jnp
int3
std
leave
mov
lret
sbb
jmp
lods
aaa
and
push
and
inc
mov
xchg
dec
mov
inc
cmpsb
mov
loop
pop
cmp
test
push
dec
pop
mov
pop
inc
xor
outsl
jnp
mov
out
and
xchg
jnp
or
mov
sbb
mov
mov
mov
push
outsl
pop
outsl
push
jne
cltd
and
cli
insb
movsb
push
scas
addr16
push
adc
jb
in
mov
pop
add
mov
sbb
add
jo
add
adc
sbb
dec
add
inc
pop
inc
adc
movhps
mov
mov
imul
scas
test
fldl2e
mov
mov
or
cs
xor
xchg
mov
xchg
mov
push
lods
sbb
push
adc
push
push
push
and
ret
push
fwait
inc
je
fnstsw
jno
cmp
stc
int3
in
jmp
lods
or
sub
jb
push
adc
push
enter
dec
cmc
jo
xchg
in
xor
cmp
lods
push
push
xchg
push
lock
jge
call
xchg
jns
imul
jle
decb
mov
inc
leave
mov
es
pusha
sahf
addl
leave
sbb
add
pop
stc
stos
push
inc
jecxz
sbb
bound
stos
pusha
orb
sub
mov
pushf
fdivs
sarl
sbb
inc
adc
sti
sbb
mov
mov
fwait
decb
fnstenv
mov
and
adc
dec
leave
daa
enter
push
pushf
adcb
lods
push
aas
and
mov
subb
mov
repz
fnstsw
out
mov
lsl
and
sahf
fwait
xchg
or
mov
xchg
jo
dec
jo
dec
out
sbb
cmp
jge
insb
dec
dec
sub
push
cmp
and
jge
ja
fnstcw
cs
mov
inc
mov
jg
ljmp
jle
ret
call
in
mov
push
push
jge
mov
and
jl
lods
adc
mov
jecxz
sub
lret
ss
scas
mov
jp
adc
cmpsb
pop
add
jns
lock
inc
mov
xor
mov
jmp
fstpt
pop
add
mov
cmp
xchg
scas
fadds
add
mov
rcr
sub
mov
adc
or
ss
cmp
jmp
inc
nop
add
call
cld
lods
mov
sbb
jno
ds
xchg
insl
inc
or
cltd
push
stc
aaa
popa
xor
scas
and
stc
cmp
movb
push
icebp
imul
mov
subb
xchg
sub
mov
sbb
adc
clc
mov
push
test
mov
rcrl
decl
es
pop
jns
mov
jmp
and
notl
in
jle
xchg
cmpsl
inc
and
imulb
add
call
jmp
mov
popw
mov
sbb
sarb
les
les
lea
fs
loopne
shl
add
inc
imul
mov
gs
sub
cmc
lcall
lret
mov
jle
lock
mov
add
arpl
mov
pop
cwtl
dec
ret
addr16
idivl
pop
icebp
pop
mov
sti
jg
stos
jne
or
lret
mov
jl
lcall
rorl
mov
add
dec
add
cmp
push
xchg
aas
leave
jmp
lea
loop
jg
xlat
inc
add
lret
sarl
mov
sbb
in
or
inc
adc
mov
fadds
adc
test
push
push
sub
movsb
xchg
xchg
fwait
les
icebp
push
dec
mov
loopne
nop
jno
xor
ljmp
pop
scas
cmp
lods
hlt
push
add
or
cmpsb
mov
in
movsbl
xor
mov
pop
imul
xor
js
jno
pushf
add
pop
or
mov
push
mov
xor
mulb
pop
sbb
into
push
lods
cmp
in
aam
and
pop
loop
loop
stos
pop
jno
ds
lods
addr16
stc
cmp
or
adc
gs
ret
and
popa
outsl
insl
adc
movsb
lahf
xor
fwait
dec
fldcw
mov
int3
fidivrs
adc
dec
xchg
jmp
fcomps
jg
adc
icebp
popa
add
popa
mov
mov
adc
fs
sahf
loop
fstps
or
ss
rcll
aaa
push
out
imul
inc
popa
out
push
in
call
adc
out
inc
push
shll
scas
test
aam
hlt
sub
test
cs
ljmp
loope
jmp
sub
add
xor
or
inc
xor
loope
inc
cld
jg
vunpckhpd
test
cmp
mov
jecxz
fbld
add
popf
idivl
pop
leave
jmp
ss
cmp
lods
cmpsb
and
jno
aaa
sbb
in
xchg
xor
scas
bound
data16
jnp
xchg
mov
add
push
hlt
movsl
mov
and
inc
push
push
mov
pop
mov
lret
mov
and
mov
pushf
sub
pop
out
int
and
or
movb
addr16
mov
cmp
lods
add
icebp
ljmp
cmp
lods
cli
leave
jge
arpl
ljmp
cmp
push
ficomps
push
xor
mov
addb
das
pop
add
ds
in
sahf
jno
push
jno
pop
sbb
daa
jns
inc
jle
xor
ljmp
push
out
inc
ror
jg
fists
or
out
aas
add
mov
iret
cwtl
jo
inc
out
mov
xchg
dec
popa
insl
aam
jg
shll
sub
test
jmp
push
or
mov
movsl
es
movl
sbb
icebp
inc
adc
test
insl
faddl
imul
shlb
fisubrs
clc
mov
popf
orb
jo
cld
div
inc
jecxz
inc
and
xchg
xchg
or
mov
cmp
int
mov
fnsave
pop
fmulp
dec
inc
mov
lock
loope
jnp
sahf
aas
dec
or
mov
xor
mov
xor
xor
xchg
adc
stos
insb
push
mov
sbb
movnti
leave
mov
ljmp
fstl
mov
loope
and
xchg
cmpsl
icebp
xorb
call
sub
rorb
mov
cld
addr16
imul
pop
pop
ret
xchg
out
mov
ret
or
jle
stc
cmc
push
xchg
cmc
call
sub
or
decl
mov
out
and
mov
mov
or
out
pop
rol
test
das
jno
inc
mov
movsb
cli
lcall
leave
mov
in
sbbl
sbb
int3
lcall
mov
push
sub
lods
jmp
mov
call
repnz
test
in
sub
add
push
shlb
sbb
leave
push
inc
popf
fisttpll
mov
jge
cltd
push
pop
dec
adc
aas
jle
mov
jge
arpl
push
and
jecxz
iret
test
mov
scas
push
in
repz
pop
cmp
rcll
push
push
push
test
jne
jge
cmp
sbb
push
les
repnz
aaa
and
shrb
push
outsl
mov
sbb
loop
and
lret
pop
xchg
dec
movsb
cmpsb
dec
adc
sbb
mov
jo
outsl
pop
cmp
jae
aas
cmpsl
push
loop
adc
sub
cld
xchg
add
cmpsl
fadd
xchg
out
xchg
mov
inc
mov
xchg
sub
aas
loopne
jmp
daa
into
mov
cltd
push
fwait
add
jnp
mov
and
lcall
cwtl
mov
pop
sub
rclb
push
rcrb
cmp
fstpl
jae
in
cmp
mov
mov
sbb
ljmp
mov
incb
pop
fmull
add
push
mov
xchg
sti
in
xor
push
jbe
adc
add
adc
lcall
mov
push
mov
cmp
outsl
sub
add
jge
and
sbb
jmp
inc
insl
daa
in
jp
stos
jge
lock
in
cmp
popa
sub
xlat
cmp
test
enter
cmpsb
inc
mov
push
adc
sub
ret
jp
pop
sarl
bound
aad
add
pop
je
inc
mov
outsl
pop
aaa
leave
xchg
mov
daa
pop
clc
jno
pusha
or
clc
jl
sbb
lahf
add
pushf
gs
xchg
fisttps
shr
and
xor
inc
test
popa
and
or
repnz
fldl
pop
out
hlt
cmp
pop
mov
add
lahf
aaa
push
out
imul
sbb
ret
cmpsl
mov
dec
daa
inc
xorl
ss
jge
inc
loope
lcall
stc
leave
sbb
push
sub
pop
les
mov
imull
test
adc
in
shrb
cmp
inc
hlt
xchg
dec
std
cmp
jbe
inc
sub
fiaddl
mov
or
out
inc
iret
jle
stos
inc
xor
pop
inc
loope
stos
lock
inc
out
and
lods
in
add
mov
aam
pop
xchg
cli
pop
cs
dec
ss
out
out
into
and
rolb
je
icebp
sbb
test
jbe
mov
push
push
lcall
sub
movsl
bound
ljmp
leave
cmp
jmp
out
mov
sub
jne
and
jle
sbb
ljmp
ss
sbb
pextrw
inc
je
mov
pop
popa
adc
addr16
cltd
out
pushf
rclb
mov
adc
lea
andb
mov
sarb
addr16
les
nop
add
sahf
insl
mov
inc
dec
jmp
push
mov
out
sub
stos
mov
cld
stos
jge
add
into
dec
pushf
xchg
sti
test
dec
add
jl
sarl
lods
movb
push
or
adc
js
nopl
or
sbb
or
mov
test
mov
lret
outsl
or
out
adc
shlb
fmull
ja
dec
and
push
cmpsb
lock
clc
into
push
icebp
xor
jmp
call
jecxz
sub
cmp
ficoml
push
sub
icebp
std
scas
js
mov
cmp
clc
dec
jmp
lret
aad
jg
addr16
das
push
pop
cmp
lret
xchg
js
or
push
jb
movsb
aad
gs
out
mov
mov
vaddsubps
cmpsb
call
pop
shrb
xchg
push
faddl
cwtl
push
push
cmp
mov
out
mov
fcoml
mov
dec
pop
ret
dec
dec
xchg
out
inc
add
add
jecxz
sbb
int
mov
cwtl
pop
sti
pop
cmc
adc
rcrl
or
dec
sub
xchg
cmc
pop
pop
mov
scas
sub
movnti
cmpsb
jno
pop
xchg
movsb
fstpl
movsl
cs
mov
rorb
mov
xchg
clc
inc
cmpsb
sbbl
fstps
xchg
fldt
xchg
sbb
test
xor
out
addl
in
sub
mov
mov
adc
hlt
add
add
loop
and
mov
lcall
cmc
mov
dec
sub
jb
cmc
mov
or
sub
jns
and
daa
cmpsb
mov
pop
sbb
mov
fisubrs
stos
mov
fdivr
pop
xchg
add
adcb
shll
and
popf
or
adc
fsubl
jnp
test
in
cmc
pop
movb
pop
or
push
jae
ret
hlt
sbb
fucomip
outsl
frstor
cwtl
arpl
jae
fistpl
mov
popa
mov
in
insl
mov
add
mov
dec
sbb
cmp
dec
icebp
xchg
incl
xchg
data16
adc
xchg
aad
sub
test
cwtl
repz
pusha
ljmp
shrl
ret
cmp
mov
sub
xchg
repnz
jno
xchg
sbb
add
lret
dec
mov
cmp
loop
jge
jp
jg
iret
int
shr
sbb
xor
andb
call
mov
xchg
cltd
xchg
stos
cmp
lret
sbb
fisubs
lret
bound
cmp
pop
clc
mov
mov
xor
pop
xor
push
jl
rcl
das
mov
sbb
mov
clc
shl
mov
and
jg,pn
mov
pop
sub
add
fistpl
lcall
mov
push
and
rolb
out
and
mov
mov
adc
fs
insb
mov
scas
stos
out
dec
and
add
xor
inc
xor
cmp
xchg
ja
shl
scas
cmp
dec
push
add
mov
mov
push
inc
lahf
adc
cli
cmpsb
xorb
add
loop
jecxz
js
adc
movsb
aad
mov
leave
inc
mov
fnstenv
mov
sbb
sub
arpl
rcrl
dec
dec
pop
cmp
dec
hlt
pushf
shll
jmp
mov
xor
push
insl
push
nop
aam
push
out
enter
mov
xor
mov
jns
lcall
cmpl
push
in
pop
mov
ds
xchg
mov
jb
aad
inc
jae
mov
jp
daa
inc
arpl
sub
cmp
push
xor
js
mov
leave
hlt
nop
stos
xchg
pop
fisttpl
sub
sbb
leave
out
loope
mov
call
pop
imul
fmuls
mov
ss
xchg
push
inc
dec
push
mov
inc
movsl
lret
add
or
xchg
cld
and
adc
cmp
inc
ja
sub
aam
out
in
cmp
fiaddl
rolb
lea
das
adc
jb
add
enter
pusha
jecxz
loope
scas
xchg
out
lret
loope
xchg
out
cmpsl
mov
xchg
xchg
mov
sub
lret
adc
loope
xchg
pop
cwtl
out
inc
add
aaa
push
je
mov
adc
add
xchg
stc
jle
fwait
leave
mov
pop
mov
jecxz
mov
inc
in
fs
scas
mov
jl
adc
lahf
divb
jne
mov
loope
int3
push
mov
pop
push
idivl
push
sub
add
lods
ja
mov
lret
sub
dec
mov
icebp
scas
xchg
loop
jl
jecxz
imul
repz
cmp
cmpsb
ljmp
jmp
fdivs
jmp
movsl
cmp
into
clc
les
cltd
hlt
cli
pop
xchg
stos
add
mov
int3
pop
mov
push
out
pop
inc
popf
pop
mov
lds
sub
out
les
mov
mov
lock
cmp
mov
ret
mov
adc
adc
xchg
xchg
push
and
aam
push
lods
cmpb
fldl
xor
xchg
xor
js
pop
sbb
cltd
cmp
sbb
insb
shll
pop
in
ficompl
sti
orb
xchg
jae
dec
movsb
or
movsl
pop
xor
dec
scas
pop
pushf
inc
mov
enter
cmpsl
adc
add
shll
sub
gs
enter
outsb
movsl
or
fwait
mov
addr16
pop
adc
inc
daa
and
les
repnz
hlt
xchg
push
call
xchg
das
xlat
cmpsb
jnp
dec
pop
sub
loop
adc
sbb
idiv
sarl
xchg
cmpsb
in
mov
xor
dec
popf
subb
mov
inc
lret
sub
sbb
aam
gs
and
or
xor
or
sbb
ret
notl
arpl
dec
jl
or
loop
or
pusha
enter
rclb
repnz
jecxz
jb
mov
xor
and
cltd
adc
dec
mov
shrl
push
xchg
pop
je
addb
xor
mov
inc
push
mov
xchg
pop
rorl
mov
adc
ja
jnp
popw
jle
out
insl
mov
xor
inc
push
hlt
pusha
adc
add
pop
or
push
inc
cmp
fcoms
ret
neg
mov
movl
dec
insb
add
pop
call
ret
jo
repnz
jg
clc
loopne
or
out
pushf
test
dec
insl
addr16
lds
mov
cmp
jns
mov
mov
cmp
les
pusha
push
xor
es
xor
int3
gs
dec
pop
cmpsb
ljmp
loop
sbb
fldl
pushf
inc
or
mov
pop
cmp
mov
push
hlt
addl
mov
repnz
add
lds
and
shlb
sti
cs
sbb
cli
or
inc
inc
sub
sub
and
mov
std
inc
aas
cmp
sub
push
push
cmp
je
scas
and
in
lcall
nopl
mov
loopne
popf
sub
mov
test
xlat
int
inc
and
push
lret
out
lods
test
sub
jle
fxch
mov
es
fbld
sbb
fcmovbe
test
sbb
mul
hlt
jle
test
arpl
enter
inc
std
fldl
or
popl
incl
dec
xor
xor
arpl
in
jb
jge
sti
inc
mov
test
lods
ss
dec
rcrb
iret
rcrb
add
out
or
loop
lods
call
cmpsl
pop
mov
and
cs
cmc
xor
pop
out
jecxz
inc
xchg
and
adc
and
sbbl
adc
inc
imul
clc
icebp
out
iret
push
es
repz
test
dec
dec
in
dec
mov
into
cmpsl
imul
push
clc
je
xchg
divb
shlb
pop
out
xchg
inc
add
xor
inc
jnp
pop
sbb
fldl
or
push
jns
dec
sub
lds
in
xchg
sub
xchg
repnz
test
das
movsl
push
cmpsb
mov
mov
or
movsb
out
add
cmp
sarb
jo
mov
mov
out
mov
out
dec
insl
lods
jb
pop
lods
dec
std
add
scas
mov
xor
push
xlat
xor
out
adc
imul
or
int3
movsl
rcrb
je
pop
fnstenv
xchg
xchg
mov
test
shufps
adc
ret
ljmp
js
pop
inc
add
xlat
and
jns
xor
adc
dec
mov
inc
mov
adc
and
push
movsb
inc
cmpsl
subl
mov
es
mov
cmp
pop
inc
dec
cli
in
mov
mov
dec
and
adc
adc
xlat
add
icebp
mov
lods
pop
mov
hlt
jne
je
in
incb
aad
jno
out
push
add
dec
scas
mov
imul
dec
mov
lds
mov
dec
mov
clc
dec
xor
mov
push
dec
xchg
dec
cmc
pop
inc
add
or
and
xor
mov
push
and
out
cmp
lods
addr16
cli
lea
pop
cmpsb
mov
repz
cmp
loopne
fimull
xlat
fcoml
imul
push
std
mov
inc
jnp
shrb
or
mov
push
out
sahf
xchg
mov
out
jns
mov
imul
cmpsb
adc
popa
and
insb
loope
sar
and
paddd
push
and
sub
cmp
and
in
sbbl
movsb
xchg
sar
je
mov
gs
jle
and
push
pop
jns
pop
call
stc
fistl
xor
mov
inc
mov
ficoms
cmpsb
lds
push
mov
push
js
jo
int
fsubl
fisubl
sub
inc
lcall
ret
mov
cmpsl
mov
jns
test
cmp
adc
push
inc
lods
mov
lahf
or
int3
xchg
in
xor
call
test
adc
cmc
push
pop
pop
stc
mulb
addr16
mov
cmp
leave
out
arpl
xchg
xchg
mov
mov
mov
pop
fisubrl
lods
push
rorb
out
sbb
dec
sub
and
stc
lock
fisttpl
mov
inc
sahf
outsb
leave
or
popa
scas
xor
sarb
lret
push
push
xchg
jge
jne
les
cmpsb
andl
push
sub
in
jns
aam
pop
pop
ret
inc
jp
lea
mov
dec
jp
or
scas
inc
pop
ljmp
jns
or
mov
arpl
es
lret
movsb
shlb
cmpsb
cld
or
addr16
ret
movsb
cmpsl
gs
pop
fwait
lahf
push
add
sub
cld
test
jle
sbb
je
incl
jecxz
outsl
pop
dec
xchg
inc
inc
dec
insl
or
mov
jle
xchg
in
mov
inc
fisttpll
xor
dec
jno
outsl
xor
mov
mul
rorb
and
fisttps
jg
mov
loopne
or
jns
cli
jl
sub
mov
xor
mov
add
imul
xor
or
mov
shl
insl
ljmp
sbb
out
inc
inc
sub
mov
xor
jnp
jle
pop
lods
cmp
and
lods
lcall
xchg
lahf
inc
mov
mov
mov
inc
xchg
xchg
mov
mov
or
addr16
ja
andl
cmp
xorl
rorl
adc
xchg
int
or
xor
sbb
orps
daa
cmp
sahf
enter
pushf
mul
or
jnp
imul
cmp
sub
je
loope
in
fcoms
push
mov
xchg
xor
xchg
test
jne
roll
popa
cs
mov
aad
mov
sbb
int
pop
or
xchg
jns
shll
adc
pop
dec
and
inc
fwait
dec
dec
mov
mov
inc
or
repnz
jae
test
jbe
insb
stos
sbb
into
sub
mov
sbb
add
jns
xchg
dec
pop
mov
mov
mov
inc
addr16
mov
jecxz
push
xlat
push
pop
call
movsl
addr16
mov
pop
popf
ret
imul
gs
push
mov
xchg
test
sbb
mov
test
xchg
mulb
xlat
add
add
xor
dec
popf
stos
sbb
xlat
sbb
push
popa
adc
add
mov
test
pop
in
push
gs
rol
jge
fsubrl
mov
imul
sbb
inc
mov
xor
shll
mov
imul
popa
or
imul
xor
icebp
add
jmp
inc
outsb
sub
std
loop
fsubl
jp
imul
cmp
jmp
test
xor
jo
cmp
xorl
xchg
ja
test
pop
cmp
pusha
jne
std
repz
adc
ret
iret
or
jl
pop
popa
popf
mov
inc
add
loope
jo
fucomip
adc
jg
cmp
xchg
fdivl
inc
inc
push
rcrl
adc
xor
add
cmc
rclb
movsb
fs
xor
int
sbb
pop
add
dec
cmp
mov
jo
jmp
ja
xchg
shrl
inc
cmc
sti
xchg
jnp
pop
cwtl
ds
cmp
xor
xchg
sarl
movsl
or
dec
inc
mov
outsl
xor
fstps
sub
xlat
add
insb
pop
or
mov
leave
or
pop
mov
aad
rol
push
dec
test
mov
bound
xor
and
test
ljmp
mov
cwtl
fimull
cmp
popl
cmp
mov
in
inc
xchg
adc
push
jg
pop
push
push
mov
jecxz
lods
jb
jp
fdivrp
and
lcall
mov
mov
and
mov
std
popf
test
inc
subl
subl
dec
cmp
lcall
sbb
dec
inc
lods
cmpsl
mov
cli
sahf
sub
loop
mov
lea
out
les
push
shrl
icebp
enter
lea
lock
fwait
test
decl
pop
fsubl
inc
push
and
xor
mov
push
and
xor
pop
ljmp
leave
add
aad
test
mov
mov
fcoms
in
or
mov
fstl
test
mov
int
mov
xchg
mov
daa
pop
pushf
stos
pop
mov
push
push
stos
jg
dec
in
sbb
push
mov
pusha
mov
movsb
sbb
xchg
add
sbb
pusha
cld
push
bsr
das
xlat
add
adc
push
sub
add
out
aas
push
jmp
xor
mov
out
xchg
or
push
cmpsl
ret
clc
ret
mov
es
push
cmp
shlb
call
jle
dec
xchg
addb
xchg
push
pushf
adc
mov
push
lret
sbbl
dec
xchg
or
cmp
test
loopne
dec
cmp
cld
sti
mov
xchg
pushf
xchg
leave
adc
cmp
cmp
fsubrl
loope
push
dec
mov
sbb
xor
cmp
push
add
inc
test
sbb
int
insl
or
mov
outsl
mov
dec
cli
fdiv
inc
dec
cmc
shrl
aad
ror
shll
sbb
ljmp
mov
sti
test
xor
pop
jne
jmp
push
lock
lcallw
jmp
cmp
orl
mov
push
test
mov
xor
repz
push
mov
xor
hlt
mov
lods
mov
xor
ret
mov
cli
mov
pop
loop
mov
insb
nop
aad
lods
add
jne
sbb
cmpsl
xchg
je
hlt
test
pop
lahf
and
pop
and
test
inc
mov
out
add
mov
jno
scas
mov
adc
cmpsb
push
je
test
scas
fdiv
dec
mov
fstps
cs
cltd
xor
int3
mov
lds
push
sbb
or
mov
dec
daa
out
ljmp
and
add
mov
pop
out
adc
mov
push
mov
jp
lretw
leave
and
dec
ljmp
mov
inc
push
shl
daa
or
fnstcw
fistps
jp
js
je
mov
adc
mov
sub
and
mov
xchg
cmp
inc
fldcw
sub
adc
jo
pop
jg
adc
mov
int3
push
arpl
adc
out
mov
or
das
jle
or
mov
addr16
int3
lcall
inc
inc
jle
mov
outsb
mov
dec
fdivrp
pop
out
idivl
push
and
rcll
repnz
decl
xchg
lret
push
rclb
fsub
adc
or
mov
add
aas
inc
xor
or
in
add
dec
loope
fsts
push
mov
fdiv
ja
test
neg
inc
addr16
std
ja
mov
shrb
xchg
in
lods
ficompl
loope
out
call
lcall
fimuls
stos
arpl
mov
jae
movsb
pop
mov
pop
rcrb
lret
mov
loopne
notb
out
push
cmpsl
push
xchg
mov
jmp
or
out
pop
sti
push
jmp
clc
insb
or
outsl
into
sti
jns
sbb
dec
push
pop
cmp
faddp
lret
leave
xchg
mov
movb
out
adcb
inc
outsl
sti
sub
loop
dec
sub
ds
dec
sahf
punpcklwd
dec
test
test
test
and
and
pop
push
fisttpl
mov
xor
cmp
lea
dec
orl
dec
inc
repnz
mov
mov
xchg
cltd
xor
or
or
and
imul
pop
mov
insl
push
jp
sbb
arpl
aam
adc
test
in
test
fldl
xchg
pop
rclb
and
jg
lods
imulb
mov
adc
add
repnz
cmp
test
das
push
add
loope
fwait
rcr
jnp
adc
fidivrl
scas
adc
push
addr16
xchg
gs
lret
fwait
and
fucomp
mov
pop
insl
popf
inc
sbb
lret
in
outsb
out
xchg
dec
aam
daa
fdivrp
push
loopne
shll
sbb
or
pop
arpl
adc
sbb
lods
lahf
ror
scas
dec
jno
or
sbb
mov
loope
aam
stos
add
mov
enter
out
jns
push
insb
in
mov
les
outsb
mov
pop
mov
mov
mov
jno
rorl
in
sbb
push
jae
jmp
mov
jge
ss
loop
stc
mov
pop
les
add
test
popa
lahf
lods
sub
cmp
fs
orl
push
dec
and
iret
cmp
push
int3
scas
sahf
or
or
adc
cmp
inc
imul
mov
insb
mulb
bound
sub
jbe
sbb
jb
mov
xor
xchg
inc
sarl
sbb
out
shl
sarb
addl
in
jl
jo
or
mov
out
sub
sahf
jnp
aas
cwtl
lods
insb
mov
jae
dec
push
xchg
sub
dec
out
mov
cmpsl
mov
dec
scas
lcall
dec
hlt
mov
test
ljmp
cmp
mov
out
mov
or
int
mov
mov
xor
rclb
fwait
dec
xchg
scas
xchg
test
mov
add
jne
inc
sbb
xchg
fistpl
repz
imul
imul
js
jbe
mov
movsl
mov
lods
fisttpll
std
adc
inc
add
loope
fs
loope
scas
fistpll
arpl
jb
pop
sub
mov
sbb
data16
js
and
ljmp
xchg
ret
call
mov
stos
cmpsl
andl
mov
cltd
pop
notl
cli
jbe
ss
fwait
stc
mov
add
xor
mov
add
and
iret
mov
add
sbb
ret
push
inc
lds
ja
lods
fcmovnbe
dec
js
int3
pusha
pop
or
jns
xor
add
pop
lea
sahf
jg
xor
mov
insb
ds
stc
dec
and
sbb
and
inc
fstp
add
rorl
push
sub
cmp
pushf
or
inc
ret
jo
jecxz
adc
aas
out
js
inc
mov
xor
fcomip
and
mov
lahf
push
jecxz
out
hlt
push
cli
inc
movsb
fmull
int
mov
xor
test
pop
pop
ret
sarl
mov
pop
fnstenv
aam
mov
mov
sbb
rep
mov
cwtl
push
fdivrl
loope
cmpsb
and
jmp
mov
sbb
addr16
movsl
pop
cli
fs
and
loopne
or
imul
outsb
cmp
mov
sub
inc
fisubs
lock
push
lods
int3
jmp
ljmp
push
inc
sub
mov
jg
ja
mov
arpl
daa
out
mov
out
mov
dec
dec
addr16
popf
inc
xchg
mov
lret
push
sbb
push
cmp
sbbb
mov
nop
xchg
or
sti
inc
lret
jo
add
les
jbe
push
lds
mov
xor
movb
inc
pop
adc
enter
add
push
out
push
jmp
xchg
outsl
mov
testl
xor
loope
mov
xor
out
dec
ds
sbb
xor
mov
inc
insl
add
cmpsl
xor
sbb
inc
dec
test
cli
sub
push
sub
insl
aaa
adc
loop
push
ljmp
mov
out
lods
leave
movsb
decl
scas
or
pop
inc
mov
cmpsl
ljmp
pop
pop
mov
jecxz
js
ja
push
and
test
lods
pop
dec
adc
insl
shr
imul
dec
cwtl
icebp
orb
mov
and
fcoms
xchg
mov
stos
mov
xchg
es
mov
and
xor
aaa
sahf
loope
popf
sbb
adc
mov
sti
movsb
outsl
xchg
dec
jmp
add
fdivr
or
iret
mov
flds
pop
lods
push
fldenv
out
outsl
out
fwait
mov
jns
mov
repnz
push
xchg
addr16
mov
in
in
push
out
and
sbb
pop
mov
std
imul
xchg
out
mov
add
mov
jl
push
mov
sbb
scas
add
sub
out
mov
jl
popf
xor
scas
lahf
inc
in
popf
push
inc
cli
add
mov
dec
pop
lret
ret
jb
xchg
and
lcall
shrb
jmp
cli
xchg
nop
dec
push
insb
dec
test
or
rorb
add
lea
std
ret
nop
dec
xchg
lret
subl
and
or
mov
jae
or
arpl
xor
aas
mov
movl
data16
gs
pusha
mov
jne
orb
arpl
sub
and
sbb
xor
inc
ss
loop
jae
fistpll
push
cltd
xlat
test
xlat
call
popf
pusha
outsb
loop
or
push
pop
mov
inc
cs
sbb
test
cmp
gs
notb
sete
in
dec
push
and
pusha
popa
mov
out
sbb
pop
or
pop
lods
adcb
cmp
and
outsl
xchg
sbb
cmovae
jb
inc
dec
rcrl
mov
jne
ret
pop
nop
inc
xor
jbe
jbe
pop
cli
pop
in
inc
sahf
lret
in
into
ret
pop
and
aam
jno
movsl
xchg
jae
push
add
jp
test
jne
sub
popf
and
xchg
xorl
shl
int3
insl
enter
je
inc
jp
mov
inc
fwait
sbbb
inc
mov
cmp
sbbl
inc
mov
mov
mov
dec
mov
adc
or
mov
cmc
xchg
sub
in
xor
jno
test
inc
or
and
mov
cmpsl
ret
mov
xchg
dec
je
sub
fisttpl
vcvtpd2ps
fnsave
mov
cmp
mov
ljmp
cmc
shll
pop
aaa
sbb
xchg
and
int3
mov
sti
leave
scas
adc
mov
mov
and
lret
sbb
xor
insb
sbb
lret
arpl
mov
cs
lret
rcll
xchg
leave
xchg
jmp
fs
sahf
fwait
mov
xchg
cs
aaa
out
push
nop
jp
sub
adc
test
sub
mov
insb
pushf
dec
repnz
popf
xor
or
test
add
dec
and
xor
hlt
out
outsl
add
dec
xor
insb
cmpsl
pop
in
xor
xchg
cli
addr16
sub
in
xchg
test
es
dec
mov
mov
push
cmpsb
cld
pop
jnp
in
fildl
iret
cli
mov
lret
sub
shlb
sub
push
add
call
iret
aad
pop
int3
xor
sub
loop
enter
and
xchg
or
lds
ljmp
xchg
mov
mov
xor
push
inc
repz
add
add
pushf
sub
enter
jecxz
call
jl
rol
and
orl
jg
rorl
in
in
fsubrs
leave
shll
add
fwait
popa
lods
lret
add
mov
add
sbb
jle
adc
stos
mov
insb
jns
test
lcall
int
fcoml
mov
jnp
insb
push
mov
adc
cmp
jp
push
push
mov
movhps
les
or
icebp
jp
ret
movb
adc
xor
sahf
push
aaa
scas
pop
sub
cli
fsts
cmp
decb
mov
push
mov
lret
in
add
cmp
jno
inc
por
cs
xor
push
sbb
and
aam
fmull
int3
cmp
adc
aaa
pop
std
mov
mov
test
jge
xor
push
lret
adc
and
pop
ficoms
cmpsb
mov
jg
push
push
lret
arpl
xor
pushf
add
scas
mov
ljmp
daa
in
repnz
aas
mov
dec
xchg
push
pop
pop
or
outsb
xchg
pop
mov
repz
jbe
sub
push
push
xor
movsl
inc
inc
mov
push
jecxz
cmp
scas
xchg
sub
mov
test
aad
jecxz
jno
push
xor
mov
xchg
rorb
sub
jnp
lret
mov
sbb
mov
add
pushf
and
paddw
pop
bound
jno
xchg
inc
aad
add
ja
call
es
sub
aam
hlt
popa
pop
dec
xchg
or
rorb
rclb
lret
insl
imul
jae
mov
mov
adc
pop
inc
orl
stos
jnp,pn
enter
int
xchg
loop
fs
lea
hlt
or
push
je
lret
je
lock
movb
or
insb
adc
dec
cmp
mov
lods
xor
gs
das
arpl
pop
pop
ljmp
arpl
cmpsl
and
cwtl
mov
cmpsl
sahf
sbb
mov
pushf
loop
out
jno
fxch
sub
clc
in
scas
ja
stc
mov
fnstcw
mov
inc
mov
adc
cmp
mov
mov
push
pop
movb
loope
jecxz
mov
rcrl
jo
test
cmp
outsl
ljmp
mov
inc
lods
movsb
or
outsb
cmpsl
fcmovnb
outsb
mov
xchg
pop
sbb
lahf
rep
mov
mov
push
jno
ja
push
cmpl
sub
das
sahf
inc
lds
pop
lahf
nop
lret
data16
inc
xor
aas
mov
fidivrl
cmpsb
out
xchg
adcb
or
cltd
xchg
or
lock
sub
popf
jmp
mov
inc
addr16
mov
mov
adc
shlb
xor
cmp
enter
push
imul
lods
rcll
repz
jg
loope
xor
rcr
dec
fnstcw
ret
les
popf
cmp
xorb
mov
into
xchg
das
push
popf
in
pop
push
dec
rcrl
push
cmp
pop
jge
pop
insl
repz
or
mov
pop
sub
fs
stos
popl
or
xchg
loope
mov
inc
std
scas
pusha
mov
fdivr
shrb
mov
jno
mov
push
fstpl
sub
sbbb
cld
mov
push
inc
sar
mov
fwait
std
dec
jg
cmp
in
popa
mov
sti
push
or
lret
repz
adc
ret
cmp
in
dec
jno
fimuls
fisttpl
ds
xchg
movsb
sahf
fldcw
push
subb
nop
ret
or
xchg
lods
icebp
mov
mov
sub
mov
add
mov
out
or
add
out
sub
mov
xor
or
ficompl
pop
pop
push
adc
call
ret
pop
loopne
stos
sbbb
push
movsl
fwait
adc
inc
enter
cld
nop
idivl
mov
test
ljmp
xchg
js
adc
mov
or
mov
push
dec
dec
out
dec
mov
cmp
mov
lret
mov
add
repz
test
mov
dec
test
mov
xor
bound
mov
pop
iret
lds
pop
call
pop
aam
xchg
nop
sbbb
push
std
mov
lock
push
jnp
outsb
les
fbstp
jbe
div
mov
js
xchg
pop
test
xchg
popa
idivb
fs
ficoml
pusha
psadbw
sub
daa
inc
or
dec
call
mov
dec
lea
out
clc
lock
and
ds
pop
cmp
insl
fcoml
sti
arpl
pop
jbe
test
imul
shrb
sahf
xchg
rorb
pop
nop
cmpsb
into
setge
nop
bound
popf
cmp
push
mov
xor
dec
mov
cmpsb
leave
subl
call
jp
daa
stc
or
test
movsl
push
push
fisubrs
aaa
pop
and
int3
pop
ret
or
jae
xor
in
pop
test
sub
xchg
dec
gs
setbe
xor
push
pop
jmp
push
mov
jle
shll
fst
dec
inc
xchg
and
push
outsl
jbe
mov
mov
inc
ja
push
sub
push
outsb
adc
xchg
lret
push
aas
push
ficompl
pusha
or
es
hlt
adc
sbb
les
and
mov
jl
mov
sti
sub
mov
push
not
repz
pop
pop
outsb
pushf
jno
add
pop
jo
fldt
jecxz
pop
inc
imull
shrl
dec
sub
outsb
inc
mov
and
add
or
xchg
das
pushf
sbb
cmc
pop
mov
sub
cmpsl
mov
not
rcll
mov
ljmp
push
inc
or
or
int
das
roll
fsubrl
xor
inc
or
pop
insl
in
add
and
mov
adc
sarb
xchg
test
fsubl
aas
pop
push
sub
or
stc
lret
dec
hlt
pusha
and
fucomi
push
in
adc
jnp
add
xor
mov
push
stos
imul
xchg
loope
jnp
popf
enter
mov
imul
inc
xlat
popa
cltd
shrb
rcrl
pop
inc
out
xor
xchg
inc
fldcw
filds
and
sbb
cmp
adc
xchg
bound
adc
fnstenv
sub
pop
je
inc
enter
aas
stc
in
jp
fdivl
push
out
pusha
nop
test
dec
push
outsb
out
and
lahf
stc
popf
mov
shll
cmp
ja
pop
test
push
mov
cli
pop
add
dec
xor
scas
ficoms
mov
mov
cmpb
adc
fimuls
aad
xor
arpl
sub
imul
dec
stc
pop
imul
test
mov
outsb
pop
mov
fwait
scas
mov
ja
xlat
jo
push
or
movsb
rcrl
push
mov
xchg
xchg
pop
loopne
cmp
pop
mov
or
sbb
out
inc
stos
add
mov
cltd
cmpsl
inc
cltd
mov
mov
inc
pop
mov
sub
lcall
xor
jp
ja
lahf
adc
out
mov
repnz
call
push
jecxz
in
ss
pop
or
dec
push
out
or
popf
pop
pop
cmp
mov
xor
movsl
xchg
fs
adc
xchg
or
xchg
loope
das
cli
pop
pop
sbb
dec
mov
mov
adc
jmp
jmp
mov
dec
dec
dec
dec
cmp
ds
js
sub
ret
mov
stos
aas
cmc
out
loopne
adc
add
addr16
push
fwait
leave
pop
cwtl
daa
sub
sbb
push
pop
push
or
mov
dec
or
orb
ljmp
inc
loop
cmp
push
lds
sbb
popa
les
inc
rcrl
fmuls
sbb
call
mov
pop
mov
cltd
sub
into
in
and
and
and
sub
cmc
lea
pop
mov
sbb
dec
dec
adc
mov
xchg
outsb
push
call
sbb
shrl
clc
adc
xor
jbe
mov
movsb
cmp
gs
mov
and
xor
xchg
les
pop
add
gs
pushf
fiaddl
xor
loopne
mov
push
lret
stc
jecxz
loopne
xchg
push
test
inc
dec
nop
push
jmp
imull
mov
mov
sbb
rcll
test
inc
in
negl
or
jl
ret
adc
inc
sbb
push
mov
cli
xchg
loop
add
jo
sbb
ljmp
mov
in
ds
pop
sbb
arpl
jo
dec
inc
pushf
out
jne
jo
enter
insl
push
add
push
mov
mul
mov
loop
xor
incl
fbstp
scas
fdivl
stc
pop
inc
mov
loopne
xchg
cli
scas
aad
and
and
pushf
jns
sbb
xor
jg
cmp
aad
fs
push
dec
testl
sbb
cmp
lret
xor
jne,pt
or
sub
mov
xor
mov
xor
jl
jle
xor
out
pusha
pusha
cmpsl
repnz
addr16
sahf
xor
mov
sarl
popa
popa
fdivl
lcall
lods
repnz
loopne
mov
pop
add
rclb
xor
repnz
imul
jnp
sbb
decb
or
rclb
push
movsl
and
push
addr16
adc
clc
movsb
jo
sub
out
sub
cld
mov
dec
movsb
stos
adc
lret
jo
icebp
push
sti
inc
in
insl
movsb
insb
add
aam
inc
sub
cs
and
mov
jb
sub
xor
dec
mov
sbb
sti
pop
ret
out
xor
xchg
mov
xor
popa
mov
leave
sub
daa
insl
dec
and
outsl
xchg
and
pop
je
ret
cmpsb
xchg
sub
add
xorb
out
fidivrs
lahf
sub
shll
std
and
psrld
xor
pushw
lret
mov
pop
adc
ss
sub
and
int
data16
jl
shll
cmpb
aad
jne
or
pop
cmpsl
je
add
xchg
aaa
stc
push
cmp
add
hlt
add
nop
cmp
pop
xchg
ret
icebp
das
mov
mov
cpuid
or
push
xchg
mov
inc
xchg
inc
into
rcll
in
cwtl
fisttps
jecxz
mov
xchg
mov
fisubs
adc
pushf
cmp
adc
arpl
int
cmp
xchg
les
ret
jle
out
pop
cmpsl
in
fstps
xchg
mov
mov
rorl
sbb
clc
daa
mov
adc
ds
sbb
push
fidivs
movsl
mov
or
inc
lds
fiaddl
adc
xchg
aad
dec
test
pop
jb
cs
and
mov
sahf
cld
lods
jns
add
xchg
popa
mov
mov
test
lcall
adc
rclb
adc
jg
pop
scas
mov
add
pop
aaa
mov
scas
or
imul
negb
notl
out
inc
shlb
push
pop
fnstenv
mov
lods
pop
mov
aas
dec
test
cmp
arpl
rcrl
jns
add
inc
push
cs
pop
dec
jl
cmp
and
xor
in
je
jmp
movsl
cmpsb
pop
or
or
shlb
cmpsb
incl
loopne
punpckhdq
arpl
iret
jecxz
sbbl
jg
cmp
xchg
pop
xchg
lock
jne
shll
inc
xchg
shlb
ljmp
std
push
popf
and
out
adc
mov
or
xchg
roll
push
popa
pop
lret
mov
pop
ficoml
inc
mov
xor
in
call
jle
sbb
cmp
dec
xlat
rol
inc
inc
mov
shlb
xchg
adc
add
inc
rorb
push
adc
sbb
pop
cwtl
ficoml
outsl
inc
xchg
adc
mov
testb
adc
addr16
bound
in
in
jbe
arpl
jl
mov
lea
jl
gs
jecxz
arpl
mov
out
fs
jb
repz
mov
or
sbb
cmp
shl
xchg
icebp
dec
and
xchg
data16
mov
test
xor
inc
mov
lds
out
pop
icebp
ret
dec
enter
lea
jp
pop
xchg
andl
add
in
insl
lds
cmp
test
inc
out
push
mov
mov
cmp
loop
inc
movsl
sti
imul
mov
arpl
or
push
xchg
aam
ret
movsl
cmp
addr16
push
je
mov
mov
fcmovu
scas
outsl
sti
cmp
dec
xor
xor
xor
hlt
mov
add
push
add
sbb
insl
leave
mov
xlat
inc
jp
repz
outsb
scas
dec
and
push
mov
in
pushf
insl
nop
jp
xchg
jmp
mov
aaa
xorb
sub
and
aad
add
fmull
add
loope
test
pop
rcrb
fwait
push
jno
fdivr
out
nop
cmp
cwtl
leave
sti
inc
dec
xchg
out
gs
push
test
pop
mov
jno
mov
sub
mov
lods
data16
fmul
sub
popa
stos
xchg
out
or
or
cmp
lret
test
shlb
sbb
xchg
je
mov
sub
mov
das
pop
inc
and
adc
push
ja
lds
pop
mov
jbe
or
popf
inc
sub
mov
cmp
push
fwait
pop
std
push
sub
out
xor
add
xchg
mov
pop
xor
push
push
aam
ffree
rcll
cwtl
mov
je
cmp
mov
lcall
decb
sub
pop
sahf
cli
iret
sti
jecxz
andl
outsl
stos
scas
in
dec
adc
jae
push
lods
les
dec
add
arpl
adc
mov
cmp
data16
dec
and
lods
pop
imul
xchg
mov
outsb
fstp
mov
ret
adc
icebp
push
pop
or
out
mov
fsubrl
inc
insl
cmpsb
outsb
jmp
ret
stos
iret
inc
push
cs
push
fwait
xchg
mov
lret
cmpsb
stc
sbb
jmp
in
inc
sbb
push
adcl
test
fwait
cmc
jge
mov
js
leave
push
add
int3
ss
imul
push
mov
pop
dec
xchg
testl
push
test
les
es
xor
lds
and
add
cli
add
les
push
js
add
imul
mov
into
cmpb
or
popa
andb
test
inc
je
lcall
scas
mov
jne
cmc
mov
fildll
dec
outsb
pusha
jecxz
mov
addb
adc
add
popf
cmpsb
xchg
sub
arpl
ret
mov
repz
and
bnd
lcall
sub
fldt
push
xor
in
pop
repnz
inc
insl
inc
pushf
sahf
or
push
and
insb
cmp
sbb
jge
ljmp
jno
bound
sbb
push
mov
mov
pop
xor
int
and
fstpl
or
in
je
pop
or
push
sbb
add
mov
rolb
inc
inc
data16
insl
sub
inc
aaa
mov
loopne
xorl
pop
stos
inc
mov
sbb
or
cmpsl
out
and
lret
jle
mov
scas
sub
arpl
bound
mov
stos
push
cs
fs
neg
outsl
push
repz
inc
roll
add
dec
xor
gs
lods
or
addb
mov
dec
dec
pop
stos
fidivl
mov
mov
add
mov
dec
or
sub
leave
mov
out
lcall
jmp
das
jmp
push
jge
fldt
jmp
lret
nop
adc
adc
add
dec
fldln2
loop
gs
test
add
mov
adc
shll
mov
add
add
mov
mov
xor
ror
push
repz
mov
testl
mov
or
lahf
pop
mov
jg
ffreep
pop
rcll
inc
aam
mov
xchg
inc
repnz
xchg
addl
clc
scas
icebp
mov
int3
scas
and
stos
xlat
jecxz
push
popa
or
iret
repz
scas
enter
fs
bound
in
ret
sbb
jo
xor
pop
popf
adc
xchg
sub
mov
mov
jb
or
mov
jo
push
inc
mov
sar
stos
mov
pop
pop
sarl
std
dec
adc
sbb
lcall
xchg
jmp
mov
push
push
mov
push
loope
popa
loopne
xor
pop
imul
jbe
aas
ds
hlt
sub
mov
lea
jb
mov
into
arpl
fcomps
fsubr
push
cli
popa
adc
loope
sbb
cltd
or
out
test
mulb
data16
data16
les
jb
repnz
je
cmp
jnp
gs
jmp
sub
jle
out
test
mov
and
cs
inc
in
xchg
pop
outsl
imul
cld
jb
sahf
xor
cmpsl
jg
roll
ja
fisubs
dec
sbb
inc
hlt
pop
or
push
and
mov
popf
pushf
inc
or
sarl
pusha
rolb
les
test
in
les
ds
mov
jae
xor
fists
jns
hlt
mov
mov
xorl
sub
stc
mov
inc
xchg
sub
sbbl
insb
xchg
or
das
push
test
imul
in
fs
loop
popa
jecxz
fstp
and
cs
push
addr16
jo
add
and
mov
fsts
pop
lcall
inc
pop
insb
lock
pop
shlb
pop
pop
dec
xchg
ljmp
push
xor
or
lret
mov
js
mov
cltd
loop
jbe
xor
ss
pop
addr16
pop
or
cmp
in
not
icebp
shll
jae
lea
shll
test
js
pop
xor
mov
pop
loope
xor
sub
and
les
cmp
mov
addr16
push
push
mov
push
inc
fwait
mov
pushf
and
push
inc
cltd
roll
fnstcw
pop
sahf
mov
leave
in
sub
loop
hlt
jns
fildl
mov
pop
hlt
mov
scas
inc
xchg
jno
insb
cmp
and
fistpll
aas
ljmp
adc
fcom
push
xchg
sub
sub
movsl
or
aad
inc
mov
pop
dec
push
mov
dec
push
mov
jno
xor
and
xlat
sub
icebp
fistpll
mov
push
iret
data16
jbe
cltd
or
rorb
mov
jle
mov
sub
test
popf
xor
xor
mov
push
in
mov
lret
andb
daa
mov
adc
xor
jg
outsb
cld
or
push
jg
or
xchg
pop
test
roll
sbb
ljmp
insl
cmp
pop
xchg
or
inc
dec
sbb
movsb
dec
call
clc
jp
push
outsl
cwtl
xchg
adc
or
arpl
mov
gs
push
subl
xchg
pusha
out
sti
cld
sbb
push
mov
lahf
leave
sbb
lret
sarl
out
js,pt
push
stos
mov
loopne
mull
jnp
inc
xor
sbb
mov
nop
xor
outsl
ror
xchg
mov
dec
testb
insb
mov
inc
dec
jmp
nop
das
fwait
inc
pop
sarl
cmp
test
imul
push
xchg
mov
into
push
mov
mov
and
cld
scas
cli
xlat
inc
mov
inc
mov
call
je
push
jae
pusha
mov
or
lcall
aas
out
or
pusha
mov
pop
mov
sub
cld
addr16
scas
mov
iret
out
test
ficomps
adc
push
int
sub
sbb
jb
adc
pop
fmul
gs
dec
jb
pushf
dec
and
lods
jbe
push
xchg
push
jecxz
sub
lock
scas
mov
aam
mov
mov
add
dec
xor
js
das
roll
jb
ja
jp
test
push
push
sbb
pop
sbb
jge
ret
in
inc
pop
ret
in
bound
std
data16
xchg
push
sub
or
push
push
pop
roll
loop
movsb
lret
inc
sbb
jo
mov
int
jno
pop
out
jmp
jge
xor
inc
mov
push
outsb
add
leave
in
leave
cmp
pushl
jle
sti
fcomps
push
inc
inc
out
xorl
fidivrs
and
push
stos
imul
fcmovu
dec
mov
xchg
arpl
cs
xchg
inc
push
xchg
les
inc
cli
icebp
jno
addr16
mov
add
inc
movsl
ds
insl
inc
xlat
orl
or
ret
out
insb
subb
lea
add
int
push
push
add
or
leave
or
add
cli
lds
jae
lea
aas
daa
xor
call
jne
jne
or
dec
push
and
mov
push
in
xchg
clc
into
add
rcl
ret
dec
mov
popa
pop
sahf
fnstsw
pop
aad
pop
add
sbb
dec
iret
dec
aaa
xlat
negl
in
pop
jb
or
shl
sub
mov
test
ret
pop
xor
lock
xor
mov
adc
jo
fists
cmp
mov
dec
sub
out
jne
arpl
mov
sahf
adc
test
and
sub
jno
out
cmp
jo
ficoms
dec
push
les
inc
sub
jge
mov
cmp
ucomiss
push
inc
push
jb
lret
dec
sub
xchg
inc
aas
movsb
stos
lds
xor
and
out
pop
insb
mov
push
inc
xor
lret
insl
fwait
dec
mov
shr
lret
fwait
cld
je
push
inc
hlt
fs
pop
mov
mov
aaa
jmp
sbb
and
sbb
mov
stos
mov
push
test
jle
mov
and
dec
add
sub
cmpsb
fwait
xor
jl
inc
popf
mov
dec
pop
lods
popa
push
ds
adc
lea
adc
jg
mov
xor
sub
sahf
stos
mov
test
idiv
and
das
inc
insl
add
cmp
lock
push
or
mov
dec
or
cmpb
xchg
lcall
das
sbb
push
inc
xor
dec
push
popl
xor
outsl
xor
mov
pusha
aaa
xor
out
push
popf
aas
inc
xchg
mov
scas
loopne
pop
js
mov
aam
ret
inc
cli
hlt
lcall
test
inc
cmp
xchg
mov
movl
push
mov
sbb
sbb
and
mov
dec
push
push
add
or
dec
flds
inc
je
jae
mov
sbb
in
aas
push
rcll
repz
jno
mul
pop
out
and
mov
loope
ss
mov
movsb
mov
push
sub
or
fs
and
ret
fcoml
fwait
out
jp
pop
movsl
shrb
mov
fldcw
push
or
push
jge
cli
pushf
shll
push
mov
stc
int
sub
cmpsl
leave
les
nop
mov
test
das
add
push
add
mov
call
xor
adc
dec
ja
inc
cmp
jae
push
ja
lods
xchg
mov
cmp
lahf
and
lock
inc
xchg
or
xor
in
sub
pause
shr
cmpb
or
mov
test
maxps
outsl
cmpsb
sub
push
sbb
mov
push
xor
out
and
add
jle
add
xchg
outsb
ljmp
inc
aam
out
fstl
inc
cmpsb
test
nop
mov
lds
shrb
out
or
sbb
jno,pn
adc
or
fstpt
jge
sub
pop
adc
xor
cmp
popf
stos
mov
sarl
adc
cmp
gs
adc
ffree
jp,pn
and
icebp
pop
pop
push
adc
or
jl
ds
cmp
faddl
sub
mov
jl
pop
cmp
dec
mulb
or
pop
loopne
mov
cmp
int3
shll
or
ret
push
test
push
mov
sbb
push
clc
shrl
rcrl
inc
sub
and
or
stos
lcall
stos
jle
sbb
pop
push
rcll
imul
dec
push
or
cs
insb
xchg
insl
sbb
scas
out
sub
cmc
enter
in
icebp
pusha
ja
mov
sbb
push
xor
shr
push
movsb
pop
xchg
out
pop
jecxz
mov
jmp
push
jae
push
push
scas
aaa
repnz
cmp
arpl
xchg
loope
movsl
sbb
cmc
mov
ds
jno
icebp
dec
inc
addr16
jne
dec
jnp
mov
push
sub
andl
xchg
cwtl
test
jae
add
out
adc
push
push
and
sbb
pusha
enter
push
xor
push
push
negb
jns
or
jb
mov
pushf
dec
push
stc
dec
pop
mov
mov
ljmp
adc
push
pop
lret
sti
aam
in
sub
jp
cmp
js
hlt
sub
outsl
aas
xor
dec
lahf
shrb
pop
sahf
adc
cmp
adc
outsb
fdivs
movsb
lds
add
xor
push
loope
jnp
dec
mov
ret
insl
in
pop
jo
fwait
out
dec
loopne
outsb
out
shll
fs
in
lock
addr16
outsl
out
fidivl
inc
sbb
jns
cwtl
roll
sub
repz
dec
test
add
mov
lcall
add
addl
orl
hlt
jge
sub
pop
lret
mov
pop
jno
cmp
into
xchg
lods
fisttpl
in
xchg
xchg
inc
outsb
sub
pop
lods
xchg
sbb
jbe
push
adc
pop
and
push
jno
jp
mov
mov
mov
in
jle
lcall
or
xchg
insb
or
into
add
mov
adc
mulb
out
sbb
jnp
cmp
into
mov
or
jecxz
gs
jae
scas
xchg
sbb
repz
in
pusha
push
popf
ss
loopne
sbb
sub
xchg
out
pop
jp
pushf
cmpsl
lahf
pop
in
lds
pop
inc
sub
xchg
dec
xor
orl
adc
mov
aas
mov
call
sbb
add
sub
imul
lcall
sbb
lret
and
cmpsb
loopne
mov
pop
jp
inc
add
nop
mov
mov
lret
xorb
pop
inc
mov
ret
and
xchg
in
mov
shll
add
adc
or
fisubl
adc
sbb
test
jbe
dec
or
mov
into
cmp
mov
mov
dec
fisttps
mov
adc
ja
mov
cmp
mov
push
imul
fwait
aad
jb
popa
dec
and
inc
pavgw
cs
repnz
add
cmpsb
das
dec
bound
icebp
int3
jo
xchg
dec
add
das
ljmp
ds
mov
dec
add
xchg
fldt
cmp
mov
cmp
pushf
loop
mov
pop
push
mov
enter
pop
or
lcall
mov
nop
sub
in
js
mull
data16
push
cs
ja
popf
js
and
cwtl
sbb
mov
xchg
mov
cld
or
mov
xchg
mov
push
mov
push
lret
lret
mov
cmpsb
pop
sbb
cltd
jp
imul
outsb
cmp
rclb
fsubs
mov
dec
out
inc
cltd
jecxz
flds
and
pop
int3
les
stos
jbe
jge
loope
ret
cmpsl
repz
test
add
push
mov
pop
negb
jns
pop
jecxz
mov
jp
or
sub
nop
and
push
pop
icebp
sub
xchg
cmc
pop
shl
punpckhdq
shll
clc
movsb
outsb
mov
jmp
pop
pop
cwtl
xchg
mul
loopne
inc
or
adc
in
lock
lahf
mov
dec
add
sbb
adc
adc
fnstsw
mov
xchg
les
stos
pop
push
cld
cmp
push
testl
lds
mov
fwait
xchg
mov
nop
insb
push
icebp
push
and
jg
out
test
jle
enter
inc
add
pop
dec
jne
xchg
stc
mov
es
sarb
xchg
xchg
fs
sbb
sbb
xadd
dec
push
inc
cmpsb
or
data16
sub
jne
icebp
in
loopne
and
aas
ror
cld
testl
push
xor
repz
dec
mov
subl
jge
or
dec
mov
in
push
test
std
mov
and
pushf
fdivr
jnp
inc
sbb
sahf
lds
popa
les
add
cmpsl
add
mov
shrl
data16
pop
mov
into
pusha
stos
loope
enter
push
cmpsl
inc
mov
add
push
pop
sbb
mov
out
mov
movsb
add
enter
lcall
mov
push
add
adc
mov
mov
imulb
and
mov
mov
xor
jmp
gs
fcomps
dec
lock
mov
int
and
loope
adc
dec
inc
inc
inc
xor
out
lock
sbb
push
lods
xchg
mov
dec
and
or
xor
cmp
in
ret
fcmove
adc
in
and
and
sub
call
cmpsl
out
cmp
mov
mov
and
jns
mov
lret
dec
pushaw
sub
insb
adc
ret
outsb
xor
sub
popf
or
scas
dec
lods
jae
jb
inc
push
cli
shl
lock
jg
mov
mov
jne
outsl
inc
jae
jecxz
xchg
mov
dec
jmp
pushf
adc
mov
jl
adc
sbb
gs
cmpsw
add
xor
xor
xchg
xchg
sbb
adc
mov
adc
push
xchg
fdivrp
adc
jae
orb
imul
inc
in
pop
xchg
add
mov
cmp
sbb
sbb
jmp
fldcw
mov
negb
fisubl
leave
cld
setg
arpl
adc
xlat
adc
mov
jmp
and
fsubrs
mov
push
fwait
inc
nop
ja
mov
iret
dec
loope
mov
sub
xchg
hlt
repz
in
fnstenv
dec
or
inc
imul
add
popf
add
mov
mov
dec
pop
mov
and
cwtl
mov
xchg
jae
shrl
sbb
mov
xchg
cs
xor
push
xor
push
pop
xor
or
repnz
imul
test
pop
es
pop
or
arpl
inc
bound
lea
subb
or
dec
ds
loop
cmp
mov
fwait
or
movsl
sahf
in
inc
mov
mov
push
loope
fwait
rolb
xchg
jmp
hlt
mov
sub
or
lcall
mov
loopne
sbb
push
cmovo
in
mov
sbb
in
ja
lcall
movsb
xchg
cld
pop
mov
popa
or
inc
jno
fdivrl
mov
arpl
or
pushf
xor
mov
lcall
xchg
test
push
pop
and
mov
or
jmp
add
adc
cmpsl
mov
stos
andb
movsl
adc
flds
dec
inc
cmp
mov
aaa
into
insb
clc
je
jnp
clc
loop
addl
push
sbb
in
icebp
int
xor
mov
outsl
mov
call
xchg
inc
in
mov
push
fildl
xchg
insb
repz
ror
sbb
push
adc
cwtl
jg
sahf
loope
pop
cmp
movsl
jecxz
cmpsb
xchg
pusha
shr
inc
push
and
gs
fisttpl
fmull
mov
mov
jg
std
mov
imul
adc
lods
adc
inc
sbb
push
pop
mov
adc
daa
or
rcll
and
lock
dec
inc
inc
pop
adc
cmp
pop
bound
call
dec
fstps
xor
inc
xchg
and
pop
jp
mov
mov
jo
fnsave
jo
add
adcl
xchg
mov
rclb
jnp
lret
push
aas
push
lds
cli
rcr
sub
divl
das
in
jge
test
push
addb
inc
nop
push
gs
jb
pop
es
sbb
out
stc
pcmpeqb
loopne,pn
jl
stos
pusha
stos
mov
fs
mov
lahf
mov
pop
push
cli
add
rcr
and
add
negl
or
test
jnp
mov
inc
xchg
xchg
pop
sub
popf
packuswb
add
and
mov
pop
stc
xchg
mov
inc
sbb
stos
or
or
xchg
in
call
pushf
mov
pop
pop
dec
push
push
pop
push
jmp
in
sub
inc
add
out
aam
adc
pusha
xchg
sub
scas
sbb
pop
jo
cmpsl
stos
jno
dec
scas
xor
jl
out
mov
sbb
ja
or
stc
roll
scas
sub
jl
pop
imul
das
push
xchg
xor
mov
sub
pop
shlb
das
push
pop
sbb
daa
xorb
fwait
inc
jbe
jb
fxam
insl
xorb
idivb
testb
dec
loope
sbb
sbb
dec
push
cmpsb
movsl
aad
aad
cmp
add
or
aad
cmp
cs
inc
popa
sub
sub
sbb
fabs
sub
std
clc
orl
xor
and
mov
mov
sub
inc
adc
das
sbb
sahf
rcrb
mov
mov
arpl
or
cmp
mov
subl
stos
adc
sti
jl
arpl
cmp
add
sbb
push
adc
xchg
jge
adc
jmp
rcrl
insl
mov
int
aas
inc
mov
stc
push
lcall
push
jp
aas
xchg
mov
mov
lock
in
lods
or
sbb
hlt
cli
out
sub
adc
fstps
mov
loopne
cmc
ret
or
cmpsl
dec
pop
mov
jb
mov
mov
out
loopne
mov
bound
mov
mov
pop
adc
mov
test
outsl
insb
mov
inc
adc
xor
fdivl
mov
sti
and
mov
xor
push
add
mov
imull
addb
inc
xchg
cmp
jmp
mov
testb
insl
adc
dec
dec
cmpl
pop
xchg
push
lods
sub
mov
jecxz
mov
nop
arpl
pushf
mov
xchg
cmpsb
stos
stos
lret
stos
test
shrl
and
mov
and
jnp
pop
inc
dec
test
fcomi
out
fs
push
mov
leave
loopne
pop
xchg
dec
inc
push
push
dec
push
xor
adc
int
xor
mov
stos
adc
mov
jno
emms
fisubrl
call
mov
loopne
jno
push
andl
sub
jns
dec
sarl
pop
outsl
adc
adc
lods
sbb
xchg
lret
lcall
sbb
ja
insb
dec
stos
test
push
repnz
xor
nop
mov
inc
cs
int3
hlt
adc
fstps
push
fcoms
push
ret
adc
test
shll
andl
outsl
rorb
jmp
loopne
cmc
sbb
inc
pop
push
mov
imul
mov
std
int
inc
jne
jle
sub
mov
mov
out
add
mov
mov
and
cld
pushf
sbb
fwait
dec
jp
in
adc
pop
sub
push
sub
and
pop
mov
sti
nop
lahf
bound
icebp
bound
mov
sbb
popa
inc
dec
push
scas
scas
jmp
dec
loop
mov
mov
xchg
mov
dec
hlt
dec
adc
arpl
adc
ret
mov
or
xchg
jnp
adc
or
cld
cmp
call
cmp
or
repz
outsb
pushf
shlb
and
push
xchg
iret
pop
arpl
lds
or
ret
inc
pop
int3
or
in
hlt
mov
out
add
push
dec
loope
ljmp
cmp
xchg
les
or
icebp
dec
dec
arpl
push
enter
repz
or
mov
adc
or
add
movb
in
adc
xor
mov
mov
pop
add
and
sbb
xchg
adc
sbb
mov
add
inc
cmp
push
and
mov
pop
cltd
imul
sbb
cwtl
rcrl
sbb
cld
sbb
cli
adc
add
in
push
cmp
push
imul
cltd
test
jg
cmpsb
xchg
movsb
xor
jno
inc
insb
orb
or
inc
cli
adc
add
fisttpll
test
mov
lock
loopne
fdiv
js
lcall
mov
out
pop
and
dec
cmp
dec
inc
mov
iret
js
addl
repz
lahf
pop
jnp
loope
icebp
adcb
dec
das
mov
push
fdivr
lds
into
je
mov
repz
decl
jmp
and
and
mov
sub
arpl
xor
mul
int
xchg
sbb
cmpsb
mov
lret
bound
jmp
mov
jge
mov
fidivs
dec
and
mov
add
add
ljmp
xchg
clc
pusha
ja
pop
test
adc
gs
adcl
adc
dec
sbb
jae
roll
adc
mov
dec
pop
push
lods
and
xchg
cmpb
repnz
bound
and
mov
and
mov
in
inc
sub
and
mov
aad
xchg
and
and
mov
mov
cmc
cmpsl
aaa
jb
js
hlt
sbb
mov
adc
and
dec
sbb
push
inc
sbb
data16
push
aaa
cs
movsl
xchg
jnp
jns
stos
out
ljmp
mov
push
dec
pushf
mov
jecxz
inc
rcll
mov
ljmp
in
xchg
mov
xlat
data16
inc
movsb
out
imul
push
scas
out
mov
lret
jb
xchg
leave
mov
xchg
xor
or
pop
popf
xor
xchg
std
add
daa
adc
xor
fadd
mov
in
pop
inc
push
call
insb
lahf
adc
pop
out
dec
mov
and
rol
insl
pushw
pop
xchg
xchg
scas
jae
and
mov
mov
pop
and
dec
hlt
pop
push
lods
mov
insb
pop
xchg
hlt
cld
int
mov
adc
push
sbbl
mov
lahf
imul
test
adc
insb
sti
stos
call
inc
mov
daa
push
fimull
int
mov
repnz
das
out
cltd
loop
rcrl
icebp
dec
sub
inc
imul
in
mov
mov
aad
stos
push
jp
mov
sbb
sbb
push
mov
sbb
fisttps
and
adc
dec
aad
out
and
cmc
mov
stos
push
or
fmuls
ret
jo
cmpsl
sbb
loopne
pop
pop
fidivrs
pop
mov
mov
jle
jo
ljmp
push
inc
icebp
leave
repnz
adc
mov
inc
lcall
mov
ss
sbb
ret
jb
mov
xchg
jb
or
xchg
inc
orb
sub
loop
arpl
mov
pusha
je
dec
xor
shr
testb
aaa
xchg
pushf
clc
int
mov
xor
and
pop
das
or
ret
sbb
ret
and
bound
int
pop
clc
loopne
cmp
repnz
ret
cmp
cmpsb
pop
subl
lds
fwait
push
inc
jmp
jmp
repnz
push
pop
cmp
push
inc
ljmp
js
mov
stos
mov
pop
fwait
test
cmp
xor
sub
cmpb
add
negb
xor
add
fnstcw
pusha
fistpll
out
movsl
or
sub
jae
mov
test
xor
fadds
adc
xchg
sahf
or
or
add
mov
subl
dec
loop
inc
insl
mov
mov
test
shrb
mov
ds
xchg
mov
test
mov
in
into
inc
mov
in
xchg
sub
push
sub
call
lret
xlat
dec
mov
sbb
jmp
and
pop
or
shrb
sti
push
mov
ljmp
cmp
sbb
inc
stc
faddl
push
test
in
cmpsb
pop
pop
or
clc
sub
mov
xor
mov
stos
les
and
or
and
data16
ss
or
sar
sub
int
mov
mov
iret
inc
push
pop
popl
push
mov
sub
hlt
or
andb
test
cmp
hlt
push
xchg
push
orl
add
xchg
push
movsl
and
pushl
nop
pop
cmpsl
sbb
inc
rcr
mov
inc
pop
in
sti
lods
loop
and
mov
pop
mov
bound
pop
push
cmp
add
push
sbb
cli
or
mov
jle
xor
sbb
clc
mov
mov
outsb
adc
mov
xchg
jbe
rclb
popa
push
sbbl
lahf
xchg
cltd
push
dec
jns
and
sahf
or
pop
enter
xchg
adc
fcoms
test
movb
adc
insl
mov
inc
lods
out
pop
push
rolb
aaa
jmp
pop
xchg
out
test
lock
sub
sbb
push
je
add
lahf
xchg
mov
push
imul
pusha
adc
lret
push
inc
pop
je
jae
inc
pop
or
imul
add
shll
jae
pusha
adc
xor
xor
das
lds
lret
adc
fxch
dec
movsl
push
jl
fisubl
xchg
and
lea
insl
dec
push
je
or
inc
sub
fwait
das
xchg
movsl
mov
ret
cli
cmp
out
or
imul
mov
inc
dec
dec
pop
jl
ret
xchg
sbb
dec
jp
xchg
pop
add
cltd
ljmp
hlt
leave
scas
pop
shrd
enter
lods
cltd
scas
add
iret
lahf
dec
jns
shr
xchg
dec
mov
inc
mov
sbb
cmp
out
sbb
jle
in
mov
out
lahf
in
mov
pop
fisubrl
cmc
shr
nop
jecxz
rcrl
push
sub
mov
jo
add
mov
fists
in
cmp
das
or
gs
mov
imul
add
mov
pop
adc
jp
sti
jae
scas
movsl
call
mov
sbb
mov
pusha
pop
add
push
cltd
mov
fisubrs
dec
out
jg
cmpsl
fwait
pusha
xchg
jae
cmpsl
test
inc
mov
sub
push
push
push
fistl
jb
xchg
pop
test
in
cwtl
mov
loop
out
std
add
pop
adc
add
mov
push
aaa
sbb
pop
clc
fimuls
je
pop
or
xor
xchg
inc
mov
rolb
out
cmp
jno
jne
xor
data16
push
add
mov
xlat
daa
sbb
mov
adc
mov
jp
lcall
push
enter
lahf
or
lret
mov
loopne
pop
iret
mov
inc
loopne
decl
xlat
mov
popf
or
mov
sbbl
mov
mov
ret
xor
inc
mov
dec
and
sub
mov
push
inc
mov
inc
xchg
jnp
sbb
push
xchg
ret
shlb
jae
sahf
cmp
mov
and
in
sub
jp
or
inc
mov
icebp
dec
sbb
mov
in
int3
xor
and
dec
pop
adc
jae
shll
cmc
or
push
xor
rolb
add
pushf
xchg
lds
jno
push
pop
jg
lret
ljmp
push
or
mov
outsb
pop
cmp
inc
pop
aam
and
lods
hlt
mov
and
fcomip
mov
int
or
add
mov
outsb
aam
sub
nop
jne
jne
and
mov
mov
sub
xchg
stos
mov
addr16
jge
imul
xor
xchg
js
xchg
inc
dec
or
sbb
inc
mov
adc
jge
mov
sbb
mov
add
xchg
jecxz
and
mov
and
fs
int
stos
bound
adc
push
repnz
fildll
lcall
scas
pop
mov
inc
jno
in
mov
mov
imul
cmp
testl
test
cli
loopne
neg
jnp
lret
inc
repz
xchg
push
dec
and
push
cs
fwait
adc
test
and
dec
sub
mov
lock
daa
cmc
lret
mov
shlb
popa
cltd
dec
test
mov
fs
lret
dec
stc
test
iret
or
pop
xor
cmp
lds
je
aaa
jl
cltd
sti
rolb
repnz
bound
hlt
add
push
pusha
repz
dec
push
sub
andb
ret
cmp
push
xchg
movsb
push
inc
fimuls
mov
adc
add
nop
outsb
leave
sbb
pop
jb
mov
fimull
mov
sbb
mov
cmp
test
xorb
and
xchg
aam
inc
cmp
xchg
test
les
decb
decl
mov
movsb
mov
add
call
and
sti
cmp
pop
push
jnp
xchg
scas
inc
sahf
push
pop
adc
mov
xor
nop
hlt
rclb
xor
f2xm1
fldt
xor
cmp
cmpsl
pop
lods
mov
pop
inc
and
mov
jmp
mov
popf
pavgb
pop
xchg
dec
jo
cmpsb
inc
fidivs
outsb
cmc
inc
sub
sbb
inc
mov
jge
dec
dec
xchg
jmp
cmp
inc
and
fistpll
cli
bswap
mov
mov
aaa
loope
mov
ret
js
lret
call
dec
les
call
dec
pop
mov
pop
imul
xor
or
ja
ret
insl
jg
mov
setno
loop
jl
pop
push
mov
sti
sahf
pop
rcll
sbb
pop
mov
imul
sbb
addr16
xchg
fcompl
xchg
cs
stos
loopne
jl
les
add
sti
inc
js
fsubrp
int
sbb
loope
cmp
dec
aad
add
cmpsl
jl
or
adc
int3
clc
movsb
cli
je
sub
fs
adc
les
sbb
jno
jo
repz
sti
jmp
out
enter
fmul
jecxz
inc
repnz
fdivrl
dec
popf
mov
fldcw
jbe
popa
cmp
sarl
out
xlat
sahf
xor
mov
cmpsb
pusha
insb
aad
pusha
or
xchg
fcmovnb
flds
int3
sbb
setb
loope
popf
mov
sbb
dec
shlb
adc
push
or
sub
jecxz
mov
xchg
add
pushf
and
leave
cwtl
out
mov
loopne
xor
adc
and
ds
into
adc
bound
iret
enter
mov
mov
aad
mov
cli
aad
inc
pop
inc
jg
mov
pop
push
mov
clc
dec
and
add
xchg
outsb
test
cmp
xor
dec
lcall
in
pop
xor
adc
mov
lods
push
mov
or
mov
cmc
js
adc
and
sbb
outsb
or
xorl
clc
fbld
and
repz
mov
into
cmpsb
or
sahf
rorl
xor
mov
mov
cmpsl
inc
sbb
insb
jae
decl
popw
or
leave
or
push
pop
mov
repnz
subb
dec
xchg
sub
cmp
daa
pop
push
fsubrl
or
push
mov
xor
xchg
and
loop
push
or
outsl
xchg
in
out
in
into
adc
push
fnstenv
cs
xchg
lock
imul
aad
sahf
cltd
add
loopne
inc
mov
push
out
pop
ret
mov
fiadds
xor
ds
addr16
iret
loopne
mov
and
out
dec
movsb
std
mov
add
stos
xchg
shlb
pop
adc
scas
les
das
mov
enter
cmp
idivl
enter
mov
and
sub
insl
xchg
jnp
push
loopne
jbe
mov
movsl
sub
in
jmp
mov
and
test
loopne
jns
icebp
or
and
cmpsl
sbb
jge
mov
jge
adc
lea
and
push
fnstcw
lret
call
enter
mov
outsl
jne
jo
cwtl
cmp
addr16
pop
cmovl
test
mov
push
in
das
outsb
mov
rcrl
shrb
aad
mov
xor
mov
push
add
mov
lret
sub
push
cwtl
pop
jnp
popa
aam
add
xchg
fs
popf
icebp
lahf
pop
cmpb
add
pop
mov
mov
cld
ret
out
sub
pop
and
inc
xchg
sbb
lea
pop
insl
test
out
fnsave
xchg
call
enter
mov
jns
lahf
push
cmp
aaa
and
rorl
mov
and
cmc
and
adc
push
dec
jg
dec
sbb
xchg
or
inc
mov
dec
mov
cmp
hlt
xchg
enter
fcomps
jmp
rolb
sbb
push
jne
adc
test
in
pop
idivb
dec
insl
jle
pop
cmp
jb
and
jecxz
mov
or
lock
adc
into
lea
push
jno
pushf
mov
in
mov
fisubrl
aad
test
jl
sbb
jne
test
lret
aad
sbb
pop
imul
adc
jo
push
sub
adc
pop
xchg
imul
cltd
push
and
and
mov
call
loop
jo
ret
mov
ljmp
mov
stos
rolb
in
mov
aam
jnp
xchg
mov
jl
jbe
gs
in
dec
jle
loop
xchg
js
rolb
xchg
std
lods
dec
je
aad
jo
add
xor
fdivrs
cmp
les
negl
icebp
fadds
pop
lods
push
jge
mov
xor
mov
xor
xchg
sbb
xchg
mov
jo
jg
testb
add
mov
and
adc
sub
movsl
test
imul
xor
scas
xchg
andb
rcll
lods
sbbb
push
loope
movsl
sub
lods
push
xor
jne
push
adc
fstl
push
cli
jp
mov
or
mov
mov
and
xor
sub
ror
addb
jle
mov
cmpsb
ja
push
sub
xchg
cwtl
jo
push
sub
push
push
notl
mov
mov
pop
cmp
or
mov
lcall
in
adc
insb
xchg
pop
testl
push
ljmp
mov
pop
pop
rclb
xorb
pop
fidivs
add
pop
xchg
nop
lcall
fiaddl
mov
sub
or
shl
xchg
push
mov
es
insb
inc
and
mov
mulb
and
inc
push
loopne
cmovae
add
jns
and
jae
fcompl
and
pushf
fnsave
in
xlat
in
cmp
mov
or
jg,pt
sub
jns
fsubr
aam
adc
pop
jnp
mov
dec
je
mov
mov
push
jl
push
adc
add
in
mov
int3
inc
inc
std
xchg
cmpsl
jns
movb
sti
outsb
cld
mov
push
add
sbb
repz
pop
mov
shrl
push
jp
adc
into
push
sub
js
add
adc
daa
iret
iret
jo
sbb
rol
loope
jae
inc
sbb
or
and
sub
faddp
stos
shl
pop
jbe
sbb
inc
add
push
scas
cmp
repz
clc
mov
mov
dec
add
insb
dec
in
and
jnp
in
jmp
mov
mov
ljmp
pop
outsb
ret
xchg
mov
push
dec
inc
sub
aam
and
and
lods
pop
pushf
ret
mov
in
fisttpl
rcrb
dec
adcb
xchg
cmp
test
pop
das
nop
cltd
dec
rolb
push
cmp
in
inc
ds
pop
cli
mov
xor
or
add
enter
addl
add
into
jne
iret
nop
aaa
sub
leave
test
popa
inc
les
pop
ljmp
xchg
insb
add
loopne
shll
sub
inc
sub
cmp
call
dec
icebp
into
mov
test
cs
lea
outsl
xor
jmp
sub
push
dec
ret
xor
ret
ds
jp
pop
mov
xchg
cmp
cmc
pop
xor
out
stos
mov
mov
dec
and
gs
jmp
dec
daa
popa
inc
add
aas
out
xchg
cmc
nop
push
xchg
fwait
loop
dec
mov
mov
mov
jno
push
inc
xor
or
test
lahf
and
pop
and
mov
stos
jecxz
rolb
pop
or
push
imul
bound
cmp
ljmp
mov
ficomps
fistpl
je
repz
pop
gs
and
mov
in
add
dec
mov
cmpsl
jmp
fwait
jns
or
jecxz
scas
pop
lea
fbstp
movsl
incb
int3
sbb
movsb
jmp
int3
iret
call
xchg
je
ds
mov
xor
leave
rcrb
in
idivl
adc
jb
addr16
adc
loope
mov
xchg
or
xor
je
push
xchg
imul
sti
neg
movsl
and
dec
mov
stc
lods
mov
sbb
mov
push
cwtl
popa
push
sbb
or
loopne
int3
idivb
pop
mov
lahf
js
dec
fwait
shll
rclb
mulb
pop
pop
push
inc
frstor
mov
dec
pop
sbb
scas
ret
jno
gs
stos
add
lods
dec
lea
lea
pushf
std
add
cs
arpl
sarb
push
lret
cwtl
dec
xchg
fwait
cli
test
mov
mov
and
xchg
orl
scas
mov
cmp
add
dec
inc
call
jnp
enter
jcxz
hlt
cmc
dec
xor
mov
rcrl
pop
outsb
cmp
loope
inc
mov
lock
imul
pop
cld
fdivrs
adc
mov
and
das
out
aaa
pop
cld
cld
mov
mov
test
je
xor
mov
pop
shll
cmpsb
mov
loop
push
xchg
mov
adc
ljmp
notl
and
ds
test
sbb
mov
negb
int3
dec
gs
or
ss
or
adc
push
ljmp
mov
dec
enter
stos
jg
out
or
imul
bound
lret
jecxz
cmp
inc
jae
ret
fisubs
push
jo
cwtl
lret
call
inc
jl
pushf
cmpsb
cmp
jbe
xchg
sub
dec
sbb
jl
jbe
sub
leave
stos
std
iret
jae
or
and
push
jne
mov
test
dec
mov
mov
mov
leave
out
pop
in
out
mov
jnp
push
xchg
aas
lahf
leave
clc
test
cmp
aaa
icebp
rcll
jp
push
xor
sub
mov
in
repz
jo
xor
or
imul
outsl
push
pushf
add
outsb
daa
push
aad
test
int
flds
jae
scas
mov
movsb
xor
les
mov
sub
mov
insl
inc
scas
add
scas
repz
ljmp
cld
mov
sub
in
or
or
test
test
lds
imul
sbb
inc
mov
stos
into
push
ficoml
inc
push
push
jae
jo
ret
xor
bnd
ret
cmp
out
mov
rcrl
xchg
cmp
lea
dec
into
lods
or
mov
sbb
repz
sti
sub
xchg
xchg
pop
add
cmpsl
das
cli
cmp
rorb
aam
cltd
sub
push
subl
cltd
pop
leave
or
or
cmp
push
ror
mov
cmp
in
mov
setbe
adc
mov
adc
xor
xchg
add
sub
les
pop
fadds
cmp
pop
imul
xor
adc
xchg
sahf
lds
inc
pop
inc
or
outsb
dec
jae
fld
jae
mov
and
mov
outsl
hlt
jge
jno
sarb
jne
loope
test
dec
adc
mov
dec
or
xor
push
or
cltd
sub
jecxz
cs
frstor
mov
aam
test
cmp
jg
pop
in
outsl
lcall
arpl
push
inc
push
shl
push
loop
nop
mov
fwait
gs
popa
mov
push
ds
fs
divb
leave
and
xchg
out
rorb
ret
out
fnstcw
xchg
and
data16
mov
pop
sub
pop
mov
lods
std
imul
sbb
sub
inc
pop
dec
leave
shll
out
jb
jmp
divl
and
icebp
pop
test
lea
movsl
call
and
aas
mov
sub
cmpb
mov
test
popl
sti
arpl
adc
arpl
push
ds
add
add
or
into
add
sti
insl
xor
aad
jg
add
in
mov
cwtl
fisubs
test
cmp
out
fmul
jge
xchg
xchg
lea
xor
cmpsb
or
js
fdivrs
dec
push
mov
fbstp
pop
repnz
into
cwtl
fmuls
cli
adc
divb
mov
ficoml
and
mov
pop
fprem1
repnz
addr16
and
dec
lret
scas
xchg
test
push
mov
dec
outsl
out
push
aam
cmp
pushf
shl
xchg
ljmp
dec
insb
lock
iret
mov
sahf
mov
addr16
push
or
aam
bound
bound
loopne
push
insl
jl
ja
outsl
movl
cmc
popf
ljmp
sbb
adc
test
scas
inc
cld
daa
adc
enter
sti
inc
in
fdivr
aam
lock
and
fstpt
ret
pushf
popf
jae
iret
das
and
out
jg
add
lret
nop
test
add
or
cltd
or
and
cli
jnp
cmp
loope
in
xor
and
dec
lock
and
ja
jmp
cmpsb
jmp
jmp
mov
subb
cmp
adc
xchg
jp
xor
and
pop
cmpsl
arpl
push
pop
mov
inc
or
fsubr
push
and
or
mov
adc
mov
out
ds
xchg
dec
pop
and
dec
and
insb
lret
mov
imul
nop
pop
add
call
int
xchg
addb
adc
pop
jp
addr16
sub
mov
fidivl
mov
fmuls
addr16
ss
sahf
adc
in
outsb
fisubs
add
adc
mov
add
jp
imul
xor
dec
scas
adc
sbb
stos
stos
jae
inc
push
aaa
pop
or
imul
negl
mov
or
jg
mov
into
mov
xchg
das
bound
nop
ljmp
pop
dec
jbe
clc
sti
lret
sub
dec
repz
sbb
mov
and
das
addr16
cltd
bound
sbb
jb
std
cmp
and
fiadds
mov
clc
insb
bound
test
mov
sub
and
aas
xchg
jne
inc
test
and
xchg
add
insb
imul
xor
pop
movsb
dec
xor
aam
jmp
fsubl
insb
sbb
inc
mov
xor
ffree
pop
dec
dec
pop
sbb
out
arpl
pop
daa
daa
cmp
lahf
xor
add
push
push
sbb
adc
subl
add
orl
and
add
cmpsb
dec
loopne
mov
mov
dec
inc
and
iret
mov
or
dec
ljmp
in
pop
cltd
dec
mov
testl
scas
jmp
push
loop
int3
xor
mov
push
ror
dec
sahf
repz
iret
fs
pop
out
mov
test
mov
sbb
xchg
outsb
push
mov
xor
mov
xchg
ret
mov
pop
mov
fistps
rcrb
fwait
push
negb
jmp
daa
ja
jp
xor
and
fdivrp
sarb
lods
ds
jge
xchg
into
push
shll
jnp
mov
jne
sti
xor
test
push
lods
mov
push
mov
loopne
dec
add
jae
and
mov
int3
inc
insb
xchg
cs
int3
xor
lods
js
movsl
insl
dec
push
js
adc
leave
push
aad
stos
fs
push
test
lret
scas
push
adc
in
loope
sbbb
lea
mov
sti
imul
sub
adc
es
repnz
std
or
into
sub
ljmp
and
mov
xchg
leave
fs
adc
inc
xchg
fcomps
test
inc
int3
pushl
xor
add
push
daa
cmp
addl
scas
pusha
cld
mov
jp
xchg
sbb
loop
and
xorb
dec
mov
xor
mov
test
data16
lret
cmc
mov
sub
pop
add
data16
dec
push
insb
stos
fdivl
popf
jmp
subb
fs
fadd
mov
cmp
cmc
xorl
jae
jle
subb
fdivrl
mov
xchg
sub
cmp
iret
lret
or
adc
mov
adc
xchg
jno
pop
dec
xchg
add
pop
outsl
neg
xlat
jp
pop
xor
cli
pop
mov
push
pop
inc
jae
je
stc
push
stc
sub
xchg
lret
xor
aam
dec
add
in
jns
sub
push
frstor
push
push
jp
add
sarb
sub
push
aam
movsb
add
ficoms
or
shll
clc
popf
mov
xchg
cmovnp
mov
or
jecxz
shll
cmpsl
xorl
cwtl
mov
sarb
xchg
dec
push
addr16
xchg
in
cmp
cld
xor
add
push
pushw
mov
mov
sbb
lahf
popa
fbld
sub
sub
in
iret
mov
rcrl
fistps
dec
test
out
fs
dec
jo
cmp
cmp
pop
xchg
lods
test
mov
add
nopl
popf
or
ficompl
mov
jle
pushf
mov
insb
add
arpl
and
xor
jne
xorb
add
cmp
and
subb
mov
loopne
jge
loop
sub
mov
add
cld
xchg
dec
arpl
xchg
pushf
fimull
outsb
adc
or
add
cli
and
sub
or
cmp
push
xchg
sub
xor
bound
and
lods
pushl
xchg
cltd
rorl
ja
inc
aaa
sbb
cmp
stos
rorl
pop
jae
fadd
or
push
outsl
or
mov
int
repnz
ret
insl
orb
jle
mov
leave
sbb
je
add
pushf
pop
idivl
mov
xchg
lea
sub
inc
and
lock
sub
pop
jmp
adc
xchg
xor
inc
lea
fsubl
xchg
loop
push
fsts
add
movsb
sub
adc
leave
mov
and
lods
jg
and
lea
sbb
or
cli
add
mov
ja
insl
shlb
ds
cmpb
adc
mov
addr16
cmp
in
mov
jbe
push
lcall
pushf
dec
pop
rorb
out
stc
cmpsl
adc
dec
ja
jle
jns
test
das
insb
mov
bound
cmp
scas
sub
fldl
mov
test
sbb
jle
in
int
in
cltd
rcrl
cmpsl
adcl
mov
inc
in
sub
ret
imul
out
mov
or
jbe
xchg
xor
jbe
lret
mov
or
inc
stc
les
jnp
xchg
add
cmp
mov
jle
sarl
jnp
movsb
sub
push
jae
or
adc
lret
lcall
pop
cmp
sti
jo
pop
push
jmp
xlat
xor
sub
xchg
andl
ja
fs
push
and
add
scas
pushl
mov
stos
xchg
mov
repnz
push
mov
inc
hlt
cmp
test
xor
xchg
mov
mov
hlt
jle
jmp
mov
inc
mov
pop
mov
mov
loop
sbb
sub
rorb
pop
fsubl
loopne
dec
or
mov
test
insl
cld
adcb
xor
pop
push
fwait
add
add
in
push
cs
and
in
add
testb
stc
sti
flds
js
mov
div
mov
push
hlt
loopne
aam
cmc
jns
mov
xlat
fucom
popa
mov
call
sub
data16
pop
lret
int
mov
adc
sbb
push
and
mov
ja
mov
aas
movb
sbb
fdiv
lcall
adc
inc
dec
jecxz
jg
clc
je
cltd
inc
enter
fdivrs
dec
push
dec
dec
adc
mov
jb
lods
pop
mov
test
xchg
mov
sub
cltd
adc
in
inc
pushf
ret
addr16
mov
dec
jno
jae
push
cmp
call
push
adc
scas
sbb
jae
adc
daa
and
mov
out
jno
or
loopne
int3
jnp
popa
mov
insl
jl
je
sbb
dec
insl
in
into
dec
aas
push
add
mov
aas
cmc
outsl
inc
xor
int
pop
aad
push
inc
pop
in
xor
je
hlt
pusha
flds
cs
dec
adc
addr16
ret
xchg
daa
cmp
aas
ret
mov
stos
je
jmp
and
lods
xor
sahf
daa
pop
xchg
mov
xor
dec
rcr
push
mov
gs
popf
sub
xchg
fmull
jbe
je
mov
shlb
in
add
popa
xor
popa
xorb
dec
jo
xor
pop
mov
cmp
inc
cwtl
xchg
push
add
xorb
mov
jecxz
or
jmp
inc
jb
adc
mov
dec
pushf
push
pop
out
cmpsb
push
sbb
nop
mov
inc
out
mov
jp
nop
bnd
mov
cli
dec
jb
aas
dec
fcomps
fwait
dec
xor
aas
push
clc
pop
mov
repnz
outsb
mov
mov
outsb
stc
mov
mov
adc
mov
sti
andl
cmp
or
cmp
cwtl
dec
jmp
push
xor
add
push
mov
lock
es
dec
repz
dec
movsb
mov
add
movl
js
cmpsl
push
sub
push
arpl
fs
mov
aam
clc
adc
shr
int
xor
pop
xchg
pusha
cli
xchg
repnz
aam
rclb
mov
push
dec
dec
jno
add
push
and
mov
sbb
arpl
mov
arpl
fsubrs
pop
dec
popa
xchg
dec
pop
push
rorl
sub
jle
push
and
stc
lcall
pop
mov
add
aad
movsb
mov
sub
jo
out
jae
inc
test
jnp
or
add
loopne
rorl
in
popf
sub
jg
xchg
add
es
sub
jl
sbb
adc
xor
aad
mov
outsb
inc
mov
lds
jno
dec
jns
scas
popl
lahf
push
inc
push
addl
mov
fnstsw
shlb
add
xchg
testb
scas
sbbb
inc
lcall
mov
jae
sbb
xchg
jno
cs
or
out
int
in
in
push
pusha
shll
cmp
jae
xchg
cmp
sub
sub
ret
pop
jbe
inc
cld
lret
inc
sub
lahf
sbb
test
in
inc
jns
xchg
lods
xor
xchg
mov
sahf
sbb
xlat
pop
addl
cmp
out
sbb
add
sti
mov
cld
mov
dec
scas
push
xor
sbb
lods
outsb
push
test
adc
test
pop
loope
xor
in
call
pop
lret
fstpl
inc
stc
jno
mov
popa
push
adc
aas
icebp
mov
pop
jo
lea
jno
fidivs
sbb
mov
xchg
idivl
imul
fwait
sahf
out
or
sarb
fcmovne
pop
pusha
inc
jmp
push
fcmovnbe
imul
out
mov
lret
mov
adc
outsl
sbb
scas
scas
push
out
sub
xor
cwtl
inc
inc
arpl
scas
cmpsl
ljmp
test
mov
cmp
xchg
adc
and
shll
mov
mov
mov
or
pushf
ret
sub
or
and
cmp
adc
fcoml
xchg
cltd
or
inc
dec
sbb
push
ja
jb
fcmovnu
push
pop
fbld
lods
loope
mov
fisttpl
push
xor
and
es
cmpl
aas
testb
and
pusha
loope
mov
call
das
loop
cmpsb
fsubr
into
add
jns
jp
into
sub
inc
mov
xor
iret
mov
jbe
not
inc
inc
stc
pusha
push
mov
cmp
xor
movsl
mov
data16
cli
sqrtps
pop
lock
cmpsb
add
xor
cli
xchg
jae
adc
adc
ja
or
add
push
sub
int3
cmp
outsb
xlat
push
cmp
jecxz
jbe
mov
sahf
ds
xchg
insb
icebp
ss
xchg
popf
jb
lret
jo
enter
xor
dec
push
imul
xchg
popa
imul
mov
xchg
iret
mov
push
hlt
js
jns
dec
in
cmpsb
test
jg
jp
bound
rcrl
scas
mov
in
leave
mov
inc
sbb
adcl
cmc
pushf
mov
mov
jmp
xor
mov
sti
push
jp
cltd
insb
sbb
jnp
jae
add
psraw
insb
js
push
ret
mov
lret
dec
jb
arpl
in
out
test
dec
sbb
add
cmp
mov
dec
inc
mov
dec
mov
cs
sbb
mov
into
xchg
xchg
lods
jo,pn
outsl
sti
inc
inc
cltd
test
dec
out
cmp
jo
xchg
test
xchg
sahf
xor
pop
jns
xchg
sub
cs
gs
fcmovnu
mov
or
or
xchg
dec
ss
mov
repnz
adc
std
clc
imul
sbb
mov
negl
in
xchg
sub
lret
adc
int3
movsl
xchg
xor
in
int3
movl
xchg
in
bound
repnz
add
add
cld
cmpsb
idivb
movsb
lods
push
sub
jo
cmpb
inc
and
test
movsl
adcb
mov
sti
cli
sub
data16
mov
xor
mov
mov
out
out
sti
clc
aad
addr16
in
rcrl
push
stos
push
rcl
in
adc
cmp
mov
insb
sub
xor
push
cwtl
in
jbe
ffree
sbb
mov
xchg
pop
ret
iret
popa
fistps
cmc
inc
ss
xor
insb
adc
fcmove
out
cmpsl
lea
inc
sbb
movsb
sbb
int3
xchg
aaa
in
cwtl
add
mov
test
or
scas
js
mov
push
dec
daa
pop
aad
adc
cmp
test
pushf
das
lret
rclb
ss
add
dec
cltd
je
inc
mov
lock
jge
das
icebp
repnz
int3
xchg
cmp
ret
dec
and
pop
les
pop
mov
cwtl
sub
lods
cli
add
test
insb
clc
outsb
jg
inc
xlat
ret
pop
cmc
cmp
sbb
gs
dec
push
cmp
stos
test
jae
test
test
mov
jno
int
sub
mov
sub
out
dec
fsubr
mov
sub
stos
fistl
mov
push
cmp
mov
mov
sbb
xlat
cmp
or
outsb
loop
xchg
lret
clc
out
pop
cmp
mov
cld
or
or
cld
or
inc
test
dec
jl
hlt
xlat
pop
pop
push
adc
cs
mov
jo
clc
sub
fabs
or
dec
jmp
xor
icebp
cmc
rorb
mov
jns
mov
inc
mov
mov
call
and
cld
leave
cmp
inc
sti
and
push
dec
andl
jp
lock
pop
mov
outsb
sbb
sbb
sub
stos
xor
inc
out
adc
adc
out
xlat
sub
fdivrs
push
xor
push
ljmp
mov
xchg
and
aas
lods
fisttpll
add
ljmp
call
and
jg
mov
adc
sbbb
repz
dec
mov
pushf
mov
cmp
lea
aad
mov
out
lret
xchg
pop
xchg
jg
mov
xor
fistl
les
iret
inc
ja
pop
es
pop
and
lret
dec
mov
and
jae
dec
daa
dec
jb
add
mov
sbbb
xor
rol
xchg
or
faddl
int
fmul
xor
sub
mov
inc
arpl
sbb
mov
cltd
bnd
dec
push
or
repz
mov
push
ja
and
ret
stos
cmp
sub
mov
fsubl
mov
and
addb
adc
fldcw
icebp
mov
jno
sub
loopne
jmp
dec
inc
mov
aas
cwtl
icebp
movsb
lea
jge
cmp
mov
pop
gs
jbe
fmull
insb
jmp
sbb
jae
push
xor
sub
das
stos
or
or
jne
fstps
mov
pop
and
add
and
je
in
fld
mov
push
jecxz
or
dec
call
jae
setnp
fidivrl
shll
xchg
outsb
roll
mov
sub
dec
icebp
jno
pavgw
mov
mul
cld
or
xchg
imul
scas
sub
sbb
push
adc
and
jo
pop
std
popa
xchg
loopne
test
pop
push
add
repz
add
jne
xchg
and
xchg
mov
cmp
call
into
shrl
pmuludq
lock
push
loope
add
sub
inc
imul
les
out
sub
xlat
mov
jl
mov
dec
jl
push
pop
push
push
bound
jns
mov
inc
rorb
jno
dec
xchg
xchg
in
xorb
push
adc
or
mov
jge
mov
pop
mov
mov
pop
nop
adcl
sbb
ja
addr16
sub
fistl
js
imulb
cmp
push
dec
sub
js
adc
daa
test
push
dec
fcoml
jae
jecxz
add
xchg
xchg
jmp
inc
call
lods
jp
inc
ljmp
mov
test
mov
pop
sbb
mov
rorb
bound
mov
fsubr
adc
iret
xchg
xchg
inc
xchg
mov
test
test
cltd
jge
and
cmpsb
dec
aad
lahf
mov
cmp
leave
push
pop
jo
or
or
cmp
aam
mov
mov
pop
lds
jns
sti
cwtl
sbb
test
mov
pop
loop
sub
and
xchg
pop
rcl
sarb
jl
je
jne
mov
inc
movntps
lret
jge
fld
lcall
ficoml
out
inc
arpl
call
daa
xchg
mov
cmp
ret
jo
cmp
loope
psllw
jl
xor
cmp
es
push
iret
pop
xchg
loop
cmp
clc
xchg
jge
mov
ret
inc
sbb
jne
cmp
filds
int3
push
sub
stc
inc
fdivrl
mov
mov
enter
jmp
or
lret
ljmp
xor
sub
mov
rorl
out
dec
cmp
stos
lea
mov
rcll
and
jp
fisttpll
mov
xchg
aam
jbe
xlat
repz
out
jns
push
int3
in
arpl
xchg
inc
xchg
inc
xor
mov
in
cmp
xchg
pop
sbb
push
mov
out
sub
jnp
jl
inc
sub
inc
sbb
inc
pop
jecxz
in
cmp
insl
ljmp
scas
test
aas
ljmp
jge
lret
mov
sub
xchg
xchg
sbb
ljmp
adc
ja
cmc
stc
xchg
ljmp
xor
pop
and
jmp
lcall
sub
out
les
xor
lods
test
push
cwtl
xchg
popf
dec
and
or
shlb
sub
adc
sbb
and
and
aaa
pop
jns
loopne
inc
imul
mov
adc
xchg
mov
rol
es
rclb
adc
inc
sti
hlt
push
inc
pop
mov
rcll
je
xor
add
lock
popf
cli
sbb
enter
pop
mov
dec
cmp
adc
push
loopne
imul
and
fstpl
fs
xlat
inc
jg
mov
pushf
jae
cmp
fists
dec
pop
fnstenv
dec
sbb
jg
or
nop
imul
cmp
adc
mov
jb
shlb
out
ds
fsubs
push
xchg
pop
mov
in
lret
or
push
xor
sub
adc
repnz
andb
cld
lea
outsl
jle
sbb
cwtl
adc
pop
push
xchg
sbb
pop
data16
xchg
fstpt
and
mov
popf
inc
mov
lret
scas
mov
lods
jb
hlt
cmp
into
in
sar
cwtl
outsb
add
mov
xor
mov
mull
aaa
insl
test
dec
cwtl
ret
in
test
pop
pop
std
aaa
insb
or
sub
push
sbb
scas
push
mov
xlat
jns
jbe
mov
push
int
rclb
sahf
fcom
insb
test
mov
mov
xchg
out
lea
rcrb
xchg
aad
push
in
insl
inc
or
add
jmp
aas
stc
inc
dec
test
fwait
push
mov
aaa
jb
fs
xor
inc
scas
push
fldcw
daa
sub
mov
jmp
or
xor
aas
loope
adc
movsl
cmp
mov
cmp
push
mov
daa
enter
lret
adc
mov
int
aaa
pop
cli
pop
mov
xlat
mov
dec
mov
outsb
int3
push
hlt
inc
dec
test
lock
in
daa
lds
outsl
xchg
in
mov
or
enter
out
hlt
inc
das
mov
cwtl
imul
shll
es
popa
imul
pop
or
mov
in
fmuls
push
add
aaa
inc
das
xchg
sub
mov
mov
xchg
lret
icebp
iret
rclb
shlb
movsl
cmp
add
fwait
push
sahf
dec
sbb
loopne
sbb
jnp
orl
xchg
loop
sarb
aas
dec
xchg
xchg
ret
out
fstpl
push
mov
test
mov
jp
rol
cltd
cmc
push
dec
dec
mov
popf
ja
gs
in
outsl
push
movsl
mov
sbb
faddl
lret
add
lea
push
xchg
out
cmp
loopne
push
outsl
fcompl
mov
stos
insl
je
lods
imul
add
push
test
repnz
or
shlb
rolb
dec
mov
pop
adc
mov
jecxz
push
mov
cmp
scas
adc
js
push
cmpsb
xchg
cmp
ljmp
sub
ss
subb
gs
ss
push
adc
pop
mov
mov
or
mov
shll
js
rcl
push
stos
xor
inc
in
jno
sbb
xor
aas
pop
mov
sbb
das
mov
lret
call
mov
fdivrs
ret
cmp
in
iret
push
inc
dec
daa
lods
adc
test
sub
popa
mov
push
dec
outsl
imul
les
test
xchg
lock
sub
jecxz
lods
mov
out
xor
outsl
xchg
ret
insl
insl
push
pushf
push
or
mov
iret
out
cmp
push
mov
xor
jb
sahf
loopne
add
push
adc
push
je
mov
xor
sbb
js
mov
aaa
outsl
fnstsw
and
pop
aas
popl
jmp
mov
push
hlt
not
ret
mov
lods
popa
xor
xchg
ret
xor
scas
cli
sub
int
daa
in
arpl
xor
adc
hlt
enter
je
icebp
leave
adc
cmp
sbb
fsubs
out
xchg
jnp
mov
mov
adc
and
call
xor
mov
addr16
pop
jl
in
or
movsl
sbbb
or
push
cwtl
xchg
lcall
fsubs
das
pusha
pop
mov
bound
mov
mov
pop
scas
fs
cmp
pusha
dec
mov
mov
and
pop
fdivr
movsl
lret
divl
cmpsl
xor
pop
loop
test
xor
inc
jp
fnstsw
out
jecxz
repnz
fdivs
out
and
jl
xorl
lret
jle
push
pop
out
fstpl
jbe
fsubrp
sbb
and
ss
and
jnp
iret
rorb
add
xchg
sbb
adc
dec
or
leave
icebp
mov
pop
jmp
push
sbb
js
mov
scas
outsl
popf
inc
mov
aas
xchg
adc
xor
test
jl
stos
jge,pn
stos
cmp
adc
inc
lock
sub
add
mov
inc
adc
cmp
cmp
xchg
push
dec
and
cwtl
mov
lds
sbb
ror
subl
add
jl
sti
scas
xchg
pop
xlat
in
shll
pop
das
subl
jno
ss
hlt
test
mov
andl
add
es
sbb
nop
mov
cmp
jo
rcr
fmul
lahf
cwtl
jl
xor
inc
lods
fildll
lock
loopne
test
mov
inc
add
inc
push
dec
xor
mov
add
sbb
pop
shr
rol
pusha
les
jg
imul
inc
les
incl
mov
adc
mov
insl
outsl
out
sarl
add
push
aas
cld
xor
dec
jmp
imul
adc
bound
fsts
fisttpl
and
lahf
mov
add
and
mov
adc
ljmp
aad
mov
arpl
ret
and
dec
movsl
cmp
insl
push
lret
out
into
adc
stc
jecxz
movsl
push
xorl
lcall
scas
in
ja
xor
ds
jp
popa
insb
dec
enter
test
divl
pop
gs
or
adc
sub
loopne
push
sub
and
leave
xlat
std
bound
mov
cmp
das
push
xor
push
push
sub
mov
outsb
mov
out
adc
mov
jl
xchg
adc
pop
push
jno
push
sbb
add
or
adc
and
adc
mov
cs
shr
cmpsb
push
xchg
push
into
jno
aad
pop
in
mov
or
leave
push
aaa
sbb
shr
out
ds
imul
data16
jmp
add
push
pop
popf
cmp
inc
pop
xor
adcb
push
add
and
push
sbb
arpl
js
or
sbb
imul
shr
inc
xchg
lahf
or
leave
inc
stc
adc
cmpsb
or
sarb
xchg
popa
repz
xchg
je
mov
subl
ficoml
pop
lret
pop
and
xor
and
add
pop
sub
fistpl
add
fisttps
in
and
xchg
push
testb
jl
xorl
enter
es
ret
cmc
sbb
fdivp
cmp
insl
jnp
jnp
movsl
push
pushw
mov
repz
ds
push
in
imul
or
mov
lcall
fisttps
inc
adc
sub
lods
movb
and
adc
repz
xor
mov
fiadds
jl
xchg
ljmp
cmp
cmpl
push
inc
jne
mov
shll
nop
lret
dec
repz
insl
ljmp
jbe
mov
adc
loopne
test
inc
sbb
rcrb
scas
iret
push
nop
aas
in
fs
mov
sbb
pop
cwtl
cmp
push
imul
nop
leave
dec
pop
jp
in
pop
outsb
or
jmp
xchg
inc
int
mov
xchg
xor
ja
sbb
fsubrl
pop
jne
mov
add
notl
ds
sbb
mov
lret
dec
cli
jmp
inc
xchg
addr16
loopne
aam
lret
test
xor
outsl
or
ret
mov
mov
enter
mov
pop
hlt
or
xchg
jne
push
cld
adc
mov
imul
scas
das
ficompl
div
bound
xchg
inc
xchg
and
pushf
sub
push
orb
movsl
icebp
outsl
and
pushf
ljmp
xor
xchg
stos
push
into
and
shl
in
jbe
ret
into
sbb
into
ret
mov
lds
sub
mov
add
sbb
add
jbe
lods
notb
push
lea
mov
xchg
stc
out
jl
jl
inc
push
xchg
add
ljmp
push
push
inc
dec
and
sub
or
or
inc
femms
sarb
fmull
std
xor
das
sahf
xchg
mov
iret
fmull
mov
aad
push
dec
sub
jmp
adcl
push
jno
mov
movups
xor
push
xor
pop
mov
mov
push
add
fwait
pop
pop
jbe
scas
xchg
shl
mov
in
fnstsw
out
mov
in
test
push
mov
mov
std
or
cwtl
add
fdivp
nop
sub
sbb
cltd
xchg
test
sbb
xlat
or
cld
roll
ja
sub
xor
sbb
inc
fcmovne
push
push
idivl
mov
rcll
lods
repz
data16
gs
or
inc
shrb
jg
add
lahf
xchg
dec
mov
int3
xchg
stos
stc
push
pop
push
lcall
mov
mov
push
jno
scas
and
sahf
lods
call
stos
test
mov
fdivrl
outsb
imull
jae
cmp
out
mov
scas
dec
mov
mov
cwtl
mov
mov
xchg
fs
dec
xor
push
stos
into
cmp
lea
mov
cli
sbb
lret
mov
xchg
out
xlat
push
pop
dec
in
ret
xchg
pop
xlat
addr16
cmp
or
add
outsl
add
andl
sbb
add
push
pop
push
repz
roll
cmp
dec
cmp
je
cmp
lock
push
mov
ror
nop
clc
ljmp
jae
incl
orb
call
xchg
mov
sti
hlt
ja
mov
mov
cmpsb
sarb
sarb
loope
mov
cmovp
or
jnp
jle
cli
int
xor
mov
and
packsswb
xor
daa
lret
repnz
out
xor
add
arpl
jge
jb
loop
das
sub
rolb
test
mov
test
jbe
jbe
add
cwtl
insb
mov
jg
sub
stos
imul
add
gs
push
adc
add
in
cmp
cmp
movsl
push
andl
jle
pop
ret
int3
inc
add
cmp
and
and
ret
idivb
js
in
pop
cltd
popf
pop
lods
pop
mov
test
loop
ds
outsl
or
mov
pop
xor
std
mov
cmpsl
popf
mov
ret
ror
lcall
xor
sbb
roll
mov
jge
mov
xchg
fwait
aad
push
and
cwtl
fnstcw
inc
movsl
jbe
cmp
orb
jge
adc
call
lret
aaa
dec
lret
mov
mov
and
cmc
or
lods
imul
mov
scas
stc
mov
add
adc
inc
jle
push
fdivrl
cld
sbb
stos
cmp
pop
fsubl
paddw
sarb
inc
jno
std
sub
xor
shlb
test
cwtl
or
sarb
das
cmp
pop
dec
adc
rcrl
in
lods
mul
or
test
outsl
cmpsl
test
dec
xor
lret
sub
mov
daa
xchg
scas
xchg
and
jmp
mov
insb
dec
js,pt
inc
inc
pop
push
sbb
adc
lock
xchg
mov
fcomp
cli
push
orl
idivb
cmpsb
loop
scas
cld
fisttpll
lods
repnz
and
std
adc
repnz
stos
popa
pushf
adc
sbb
addr16
je
pop
jno
inc
jo
mov
jg
mov
add
mov
and
mov
pusha
adc
popf
repnz
or
inc
or
jecxz
rol
rcl
sbb
xchg
ret
cwtl
xchg
inc
sub
outsb
xor
imull
cmp
cmp
ret
xchg
iret
es
jge
push
mov
insb
dec
loop
jae
push
cmp
adc
insl
lds
add
outsb
in
loopne
subb
xchg
and
movsl
pop
into
icebp
push
sbb
inc
xchg
inc
jae
adc
inc
sbb
pop
enter
jecxz
in
add
push
jnp
lea
xor
stos
inc
in
jl
sub
mov
push
lods
cli
int3
mov
inc
mov
push
inc
shrl
jp
sbb
and
clc
bound
xor
scas
jecxz
mov
stos
adc
dec
mov
dec
decl
adc
sbb
push
xchg
mov
fbld
fdivs
aam
pop
mov
fiaddl
xchg
xor
fs
jno
imul
inc
enter
repz
popa
ret
in
mov
add
inc
jo
adc
sbb
and
sub
js
lods
mov
inc
and
subb
ret
jge
sub
or
int
adc
fs
xor
cmp
xchg
nop
lods
push
or
xchg
iret
fnstenv
pop
and
outsl
lcall
test
pop
jbe
jp
cmpsl
mov
pop
adc
rcrb
inc
mov
call
shrl
clc
sbb
push
push
jo
and
insl
mov
imul
sub
push
xchg
lods
push
imul
pop
aaa
mov
or
pop
cmpsl
jns
mov
fnsave
dec
xchg
ret
mov
sbb
and
cltd
out
inc
xchg
cltd
int3
leave
sbb
leave
xchg
pop
xchg
out
test
and
jbe
adc
mov
xor
xchg
add
sub
clc
clc
loop
cwtl
into
dec
jge
ss
sub
and
fists
out
in
int3
push
cmp
rcll
and
out
push
mov
pusha
xor
push
push
fwait
xchg
jo
mov
insl
dec
pop
jo
and
lds
mov
les
jg
insb
gs
ja
xchg
pusha
dec
and
stc
imul
xchg
inc
jb
xor
mov
add
enter
or
pop
mov
sub
pushf
dec
aaa
ret
sbb
fnstcw
mov
add
xor
inc
jge
add
mov
sbb
lcall
xor
xor
in
stos
fcomp
push
imul
ja
inc
cmp
mov
mov
test
out
jnp
daa
add
jb
cmp
add
jno
xchg
push
dec
sub
test
int
daa
pop
outsl
aad
rol
mov
bound
xchg
xor
popfw
pop
stc
jbe
and
scas
xor
push
inc
xor
aas
ljmp
sub
xor
pushf
addl
clc
stos
pop
lods
dec
jecxz
cmp
sbb
jne
adc
addr16
imul
mov
in
sbb
jo
lret
jmp
or
dec
xlat
loopne
ja
push
lods
xor
mov
jo
cmp
not
ficoms
enter
xlat
insl
dec
push
jg
adc
and
lcall
jae
cmc
dec
or
and
mov
pop
movb
fs
push
sbb
add
cmpsl
sbb
dec
xchg
and
jns
pop
pop
lcall
leave
push
lds
push
jne
xor
in
test
or
pop
test
xor
cmp
dec
orb
and
orl
sahf
pop
push
imul
orl
movsl
dec
test
fisubs
jns
jo
shrb
int3
jecxz
and
sbb
push
jbe
fsubrp
das
popf
sub
add
pop
mov
sbb
popa
mov
xlat
je
dec
std
push
call
push
mov
ljmp
xor
jae
subb
xchg
sub
lahf
lcall
cmp
out
fidivrl
dec
or
mov
jp
lds
jg
scas
ss
lds
jne
scas
in
cmpsb
testl
add
mov
ficomps
in
incb
daa
mov
jbe
xchg
ljmp
push
enter
loop
sbb
jb
jge
mov
add
sahf
push
insb
mov
mov
cmp
xor
pop
push
fwait
bound
mov
pop
sbb
cmp
adc
jbe
jae
jle
or
or
mov
mov
das
int
push
addr16
inc
xchg
sbb
popf
or
lcall
or
sub
fucomi
jmp
mov
in
and
jne
xor
pop
pop
ja
jns
iret
sarl
fcoms
mov
add
dec
fs
sar
mov
or
rorb
stos
add
jns
and
jo
mull
lea
mov
xor
inc
call
cmp
push
out
cmpsb
push
nop
mov
aad
imul
lods
data16
mov
xor
inc
push
jb
ds
test
shll
xchg
inc
mov
cmp
and
add
xor
out
mov
xor
fsubl
in
inc
int
push
loop
xchg
test
inc
adc
xchg
das
cmp
lods
pushf
push
rorb
cmp
mov
mov
je
test
jl
mov
jp
add
aas
loopne
sbb
jp
pop
xchg
jae
test
mov
shll
sub
shrl
loop
cltd
lods
mov
mov
ss
and
ja
sti
test
mov
mov
test
mov
scas
stc
or
and
push
sbb
adc
xor
pop
mov
jmp
lret
stc
call
and
jae
or
in
addr16
repnz
sahf
clc
xor
push
fisubrl
lods
mov
mov
mov
pop
dec
xor
mov
cmpsl
insl
xchg
xchg
js
movsb
imul
inc
adc
inc
outsb
cmp
sub
cltd
call
sbb
dec
and
clc
mov
add
in
mov
xchg
ffree
mov
test
xchg
mov
push
nop
and
mov
lret
fwait
dec
pop
popa
pop
ja
testl
xchg
sti
mov
test
in
mov
mov
adc
rcrl
mov
pop
shlb
add
sub
mov
jg
sbb
mov
js
cmovs
pop
dec
adc
push
mov
xor
xchg
jnp
xchg
ss
ret
inc
cli
xchg
movsb
jno
test
mov
xchg
loopne
xchg
inc
push
and
sbb
addr16
push
jmp
fnstenv
mov
notl
insb
add
and
mov
out
iret
push
outsl
js
add
outsb
xorl
mov
mov
fs
sti
popf
frstor
out
xchg
dec
fstl
jmp
pop
cmp
dec
addb
cmp
aam
push
dec
add
repnz
ds
add
jge
sbb
sbb
cmovb
ss
mov
push
ficoml
fidivs
fadd
fsubs
sar
mov
push
lret
xor
into
sbb
aam
enter
cmp
loop
popf
jge
push
and
repz
xor
into
and
sbb
push
jle
xchg
call
mov
shll
mov
sub
movsb
repnz
andl
mov
sub
sti
pop
daa
lcall
and
dec
lods
mov
add
pop
fcompl
sub
and
push
and
adc
push
sbb
fistpl
pop
sub
push
std
outsb
mov
cltd
mov
jle
lods
xchg
pop
std
sbb
fwait
adc
sub
adc
sbb
sub
xchg
push
mov
shrl
inc
and
bound
arpl
js
push
dec
sub
jmp
push
lea
imul
std
fldl
xor
jecxz
jl
pop
loopne
mov
decb
lds
int3
inc
sub
cmp
std
addr16
ret
mov
stc
sbb
xchg
pop
les
inc
movsl
jge
outsl
jbe
or
xor
fadd
and
dec
insl
and
jp
add
adc
push
popl
sti
jp
xor
push
sbb
dec
mov
add
cltd
das
test
lock
mov
push
push
pop
je
inc
mov
out
hlt
fs
test
int3
ss
adc
xchg
test
jo
xor
pop
sbb
mov
xchg
mov
sbb
fcoml
inc
jmp
int3
fbld
add
aam
out
lcall
push
jae
shrb
jg
imul
inc
and
jno
or
xchg
adcb
sub
test
mov
dec
out
mov
mov
mov
cltd
adcb
jp
mov
repz
mov
and
enter
push
lcall
ss
adc
mov
pop
or
out
cmpsb
rolb
add
pop
sub
into
dec
inc
lret
cmc
lahf
add
pushf
mov
pop
les
aas
sbb
mov
fs
loopne
shr
iret
mov
or
pop
adcb
lock
push
sub
lods
movsl
pop
inc
pop
mov
shll
daa
shlb
cld
in
leave
xlat
cld
stc
jns
mov
es
adc
subb
in
cmp
das
mov
cli
jb
sbb
lret
jno
mov
rclb
adc
mov
push
popf
aam
leave
pop
xorl
push
push
jae
lret
pop
mov
push
icebp
sbb
loopne
add
and
lcall
js
cmpb
fbld
inc
xlat
iret
adcl
test
adc
outsl
sub
mov
sbb
ss
or
inc
lret
or
jo
dec
out
and
cmp
sub
clc
cmp
aaa
and
add
inc
push
mov
cs
xor
jo
sbb
addr16
jae,pn
inc
mov
adc
sub
les
jmp
dec
jmp
loope
cmp
inc
inc
icebp
aad
jns
push
daa
fcmovnb
loope
stos
and
jg
popa
sub
jno
xchg
or
xor
sub
in
ja
xor
ljmp
dec
or
lock
mov
jge
insl
addr16
or
stc
pushf
mov
loop
mov
mov
mov
jge
or
sbb
testb
push
imul
inc
scas
scas
push
inc
loopne
pop
adcl
adc
or
je
inc
ja
dec
push
and
add
sub
lcall
push
movsl
int
push
xor
mov
into
aas
push
and
loop
xchg
mov
lret
add
push
inc
xor
outsl
fldcw
in
cmc
sub
cmpsb
mov
lret
jae
jo
sbb
jo
sbb
mov
jbe
push
sbb
scas
sbb
push
pop
loopne
push
addr16
lret
xchg
inc
or
lahf
rorl
push
xchg
fs
mov
lea
js
xor
xchg
add
sub
mov
loopne
push
xor
imul
movsb
adc
xor
aad
and
test
lret
sub
dec
and
sbb
mov
jbe
cld
or
jns
ss
sbb
mov
ja
dec
sbb
xor
mov
mov
in
jmp
pop
or
dec
and
mov
mov
dec
mov
loop
ljmp
jo
mov
repnz
adc
xchg
not
cwtl
mov
inc
div
sbb
mov
and
sub
pop
int
mov
xchg
pop
jae
or
out
aaa
lock
call
aas
mov
pop
adc
ds
mov
lret
andl
imul
lea
sub
inc
ds
mov
and
lcall
xchg
bnd
sbb
in
jge
jb
inc
pop
jb
cld
outsb
jl
imull
sahf
inc
mov
iret
mov
inc
mov
jbe
outsl
clc
xchg
iret
imul
sub
add
imul
jmp
add
outsb
rolb
fwait
into
sti
into
int
sbb
cltd
stc
daa
sbb
xchg
test
mov
mov
repz
mov
jecxz
ret
lds
ret
divb
cmp
ror
jnp
xor
dec
sub
gs
arpl
leave
jb
negb
pop
mov
lock
ret
mov
add
ficomps
jge
adc
cltd
adc
sub
jno
mov
sti
add
jbe
push
out
addl
dec
mov
cmp
sarb
outsb
cmp
cmp
ja
adc
lods
xorb
cmpsl
repz
leave
pop
mov
and
lret
popa
in
sub
xchg
loopne
fstpl
mov
repz
je
push
push
test
push
les
xchg
and
dec
rclb
mov
psubw
jmp
inc
sahf
push
add
push
js
push
pop
xor
cmp
push
pop
subb
push
inc
dec
xchg
mov
and
stos
xor
sub
mov
test
xchg
or
jae
lmsw
sbb
adc
roll
shrb
lock
fsubrs
cs
ror
repnz
add
jmp
pop
adc
cmpsl
xchg
arpl
jns
lods
push
movsl
aaa
cmp
xor
mov
js
jae
mov
lret
popa
sub
stc
pop
ret
pop
jle
xchg
lahf
pop
xor
fwait
inc
nop
adc
mov
dec
cwtl
or
and
push
mov
and
sbb
fidivl
cmp
mov
xor
xor
int3
push
cmpsl
mov
cli
or
mov
inc
pop
or
es
push
add
fistpl
jbe
cmpsb
and
add
shrl
sti
arpl
jmp
andl
push
and
mov
ror
cltd
push
ds
add
inc
mov
push
and
and
repnz
into
inc
ja
inc
dec
mov
lret
sarb
mov
xchg
mov
adc
cld
rol
pop
jo
sbb
stos
dec
add
leave
lcall
dec
stos
inc
xor
ds
jne
jbe
nop
jo
add
inc
stos
aas
sbb
dec
dec
push
push
popf
roll
out
and
in
inc
cmpsl
xchg
mov
push
xor
or
mov
flds
xor
xor
and
push
xchg
jb
ret
inc
add
out
fdivrs
scas
fldenv
push
popf
pop
sbbb
das
test
stos
sbb
test
add
and
das
cltd
mov
roll
mov
ss
daa
xchg
mov
mov
shlb
sbb
mov
pop
cltd
nop
push
adc
mov
add
push
jae
ja
pop
xchg
adc
in
das
leave
add
inc
dec
adc
leave
fwait
lcall
loop
sahf
jg
push
sbb
dec
inc
pop
rorb
or
dec
out
sub
aad
mov
jge
insb
or
in
cmove
push
mov
push
cmp
lcall
xor
movsl
and
mov
fs
aaa
jnp
mov
sbb
inc
fisubs
jl
jle
cmc
and
test
insl
pop
jl
hlt
mov
xchg
in
jmp
stc
pop
test
mov
mov
xlat
and
push
dec
aas
ret
jne
jae
dec
mov
inc
sbb
shll
mov
cmp
shlb
jg
testb
aas
stos
cmp
aas
loop
fisubs
push
mov
jge
sub
lret
int
test
cmp
mov
shlb
mov
pop
push
pop
stc
in
mov
mov
pusha
out
lods
das
enter
movsl
mov
ret
aad
adc
sub
rol
ss
subl
and
or
cmp
es
pushf
lahf
inc
xor
pusha
pop
fldl
sbb
cmpsl
jns
mov
add
dec
fwait
inc
mov
int
insb
and
nop
dec
and
xor
scas
pop
aad
dec
jg
cmp
mov
loopne
fcompl
jp
scas
push
das
inc
push
lret
mov
add
pop
mov
addr16
sub
movsb
mov
ficoms
fisttpl
cmpb
into
test
and
and
outsl
sarb
leave
sti
xor
jle
mov
xchg
inc
fsubrl
push
dec
sub
test
inc
jb
pop
add
out
mov
adc
lods
stos
push
shlb
jge
xchg
add
cmp
insb
fcmovbe
in
addr16
mov
jge
scas
inc
out
xchg
cmpsb
std
outsb
sub
cli
add
xor
dec
inc
adc
mov
hlt
xchg
rcll
sahf
in
cmc
bound
nop
sbb
sbb
dec
mov
sub
push
xchg
nop
or
mov
fildl
dec
add
dec
test
or
xchg
push
aaa
mov
push
add
and
lret
lcall
xor
push
je
lret
xor
mov
mov
xchg
mov
pop
pop
pushf
nop
sub
aas
out
in
shl
add
mov
push
pop
push
or
lea
mov
clc
mov
loop
test
and
pop
adc
push
mov
pop
push
pop
fs
cmp
ja
daa
fld
sbb
cmp
sub
sbb
lcall
sarb
mov
out
das
das
repz
cli
into
inc
ror
and
test
out
jns
in
movsb
sub
mov
insl
sbbl
fldcw
jmp
jno
push
out
jmp
jge
mov
daa
shlb
sub
mov
xchg
movsb
xor
sarl
hlt
out
xchg
mov
shll
dec
mov
jbe
cmp
cld
adc
inc
cs
jmp
test
sarb
cs
loopne
or
imul
jo
push
scas
mov
mov
ds
xor
jnp
xor
xor
xchg
inc
aam
nop
into
xor
lret
pop
jo
jns
bound
or
rcrb
lcall
or
jmp
pop
aaa
popa
lret
push
or
ja
test
cmpsb
insl
cltd
lds
adcl
pop
stos
movb
cmpsl
jecxz
sub
jl
jb
xchg
js
dec
lds
dec
ljmp
pushf
mov
push
imulb
mov
dec
jnp
fbld
xchg
loopne
adc
inc
cmpsl
shll
pushf
shll
nop
add
out
push
sbb
in
push
push
xchg
jns
rorb
sub
test
inc
orb
stos
xchg
inc
dec
in
stc
filds
adc
insl
test
loop
add
mov
dec
add
or
imul
add
testl
ficoml
xchg
lods
sarb
rcr
int3
inc
sbb
data16
mov
xor
loope
mov
or
shll
mov
sub
adc
jae
cmp
mov
xchg
push
push
xor
cmp
test
and
mov
xchg
out
in
add
out
mov
stos
mov
ss
mov
and
movlps
sbb
adcb
xor
cmp
push
add
test
orl
out
ljmp
cwtl
lret
int
adc
test
out
in
pop
sti
out
cli
sbb
shlb
lret
ds
lods
in
xor
std
jecxz
cmp
xor
sbb
in
jnp
ret
repz
and
fisubl
mov
fistpll
pop
pop
sub
push
mov
pop
sub
in
daa
xchg
push
into
mov
bound
mov
adc
push
mov
js
pop
repnz
lahf
mov
inc
adc
xchg
aas
dec
push
or
popa
outsb
inc
add
dec
in
popa
dec
repz
decl
xor
adc
mov
bound
sub
pop
mov
in
pop
and
mov
jg
jb
mov
jp
shll
adc
push
cmp
jbe
or
loop
subl
loopne
xchg
gs
movsl
pop
or
mov
jmp
jmp
idiv
mov
jbe
loopne
mov
inc
neg
hlt
lcall
loope
mov
es
add
sahf
inc
movb
mov
aas
mov
add
in
cltd
pop
das
jns
jbe
push
mov
push
and
mov
inc
stos
push
lods
outsl
inc
mov
xchg
jl
add
mov
push
test
xchg
and
fmull
xchg
mov
fwait
cwtl
loop
adc
add
leave
out
xlat
scas
sahf
cli
adc
js
push
aaa
in
outsl
pop
mov
pop
mov
iret
mov
outsb
pop
pop
icebp
sarl
rcrb
push
sub
mov
add
push
imul
xchg
call
jne
sub
int3
std
xchg
iret
lock
inc
and
mov
dec
push
loope
jb
roll
bound
cmp
jo
fsub
je
xor
addr16
test
mov
addr16
push
adc
lock
mov
xchg
jecxz
dec
inc
testb
stos
sbb
lock
jecxz
mov
xor
or
fucomi
stos
and
xor
adc
into
std
add
andb
loope
dec
outsl
insb
mov
enter
push
into
cld
mov
dec
push
int3
xchg
loope
sub
and
jns
adc
push
icebp
pop
repnz
and
mov
cmp
add
jne
sub
fdivl
jle
adc
shll
cmc
out
fsubr
sbb
addl
ss
mov
test
stc
pop
stos
sub
outsl
in
dec
fucomi
or
fisttps
mov
jmp
test
outsl
shl
shlb
cmp
xchg
daa
repz
arpl
cmpsb
fcomps
sbb
mov
push
sbb
jno
fwait
int3
loopne
or
mov
shl
mov
jne
leave
mov
sbbl
xor
es
jl
nop
loope
pop
mov
sbb
clc
add
popa
int
or
add
scas
push
dec
movsb
cmp
dec
fsubl
sarb
mov
jg
inc
les
in
or
mov
lea
clc
sahf
jl
cmp
mov
sub
mov
mulb
adc
xchg
icebp
nop
add
test
pop
stc
outsl
bound
test
imul
mov
out
cmp
fmull
dec
or
xchg
sub
dec
push
fsubrs
rcrl
lahf
cmp
sbb
push
fwait
lods
xchg
jmp
dec
lret
and
cwtl
push
sub
cmpsl
cmpl
loopne
inc
daa
xlat
cmp
dec
xlat
cmp
sub
xchg
aam
or
mov
shll
and
pop
cmp
enter
aaa
and
push
push
mov
mov
mov
repz
testb
xor
movsb
out
jns
pop
sbb
repz
cmp
xchg
sbb
xorb
iret
lds
sub
loop
aas
pusha
bound
xor
lcall
lods
and
xchg
adc
pop
or
test
push
jb
or
inc
popf
dec
cmpsl
sub
arpl
mov
lds
cwtl
mov
pop
adc
xchg
mov
rcr
jo
xor
xchg
or
xchg
mov
push
mov
and
or
rcll
and
sti
fs
stos
sub
mov
sbb
jp
pop
lods
mov
pop
arpl
loop
dec
mov
addr16
call
dec
fsubl
je
shrb
pop
pop
mov
sbb
xchg
stc
inc
into
sbb
sub
es
stos
insb
fdivrs
arpl
rolb
pop
jb
cli
mov
sti
xlat
mov
pop
fsubs
sub
addr16
iret
mov
mov
xchg
jae
jae
sub
in
xchg
stos
movsl
out
cs
lret
xlat
aaa
cli
or
imul
gs
cld
aad
mov
mov
mov
jb
mov
mov
dec
pop
sub
dec
add
arpl
iret
inc
and
xchg
mov
fadds
nop
or
xor
and
sahf
stos
push
loop
cmc
sbb
sbb
in
rcrb
imulb
mov
and
sub
adc
repz
ds
js
push
rol
xchg
int3
outsb
mov
xor
sub
insl
jg
dec
add
dec
xchg
pushf
shrb
mov
mov
push
cmc
rcll
test
jne
xchg
mov
fstcw
xor
and
lds
and
cmp
and
dec
dec
adc
movsl
jb
clc
cwtl
mov
icebp
inc
dec
xchg
repz
or
and
pop
dec
sarb
lea
push
scas
lds
es
cmp
pop
lahf
jg
popf
pop
subb
push
pop
pop
inc
jecxz
jbe
stos
fucomip
vminss
sbb
adc
sbb
add
sti
imulb
iret
mov
sub
addr16
mov
mov
mov
jge
ja
xor
sbb
dec
mov
outsb
imul
pop
ficoms
pusha
jno
cwtl
shl
fidivrs
cmp
add
adc
enter
or
xor
test
aad
mov
inc
mov
out
cld
ljmp
mov
pop
xchg
out
dec
mov
xchg
mov
ss
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
push
mov
adc
decb
pusha
sub
insb
test
jecxz
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
sahf
pusha
sub
bound
shr
xor
popa
popa
int
jmp
add
and
fmull
sub
inc
pop
jne
lahf
test
xor
lods
lods
push
cmovns
mov
data16
jecxz
dec
pushaw
sub
das
call
hlt
push
clc
xlat
mov
or
mov
dec
cmp
adc
movl
xor
push
pushf
jno
add
jno
dec
mov
gs
outsb
clc
mov
xchg
subb
lret
aad
dec
out
push
sbb
inc
ds
jg
dec
add
hlt
or
faddl
decb
pusha
sub
sub
fs
decl
sar
or
jecxz
dec
xchg
add
out
adc
sub
mov
jecxz
pop
pushaw
sub
insb
push
fs
dec
pushaw
das
add
in
insl
adc
dec
arpl
add
in
insb
adc
decb
pusha
sub
outsb
adc
dec
jbe
sub
insb
add
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
jns
jecxz
dec
xchg
imul
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
inc
add
sub
jl
fs
dec
pushaw
sub
inc
out
test
and
lods
decb
pusha
sub
mov
push
nop
mov
pushaw
sub
insb
loopne
jecxz
adc
sub
insb
adc
dec
pushaw
sub
insb
lock
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
sub
insb
adc
dec
pushaw
inc
test
mov
jecxz
pusha
les
jae
inc
mov
push
pop
shl
dec
jno
in
frstor
out
add
adc
pop
aad
fmull
movsl
push
adc
inc
pop
sub
imul
jmp
and
out
xchg
test
push
xor
dec
push
popf
in
imul
dec
mov
iret
lret
mov
pop
shlb
testl
push
loope
dec
rorl
lods
dec
jmp
mov
jmp
es
daa
mov
pop
push
cs
ret
es
xor
push
cmp
adc
push
jne
pop
xor
pop
fsubrl
mulb
xor
ret
into
cmpl
scas
icebp
xchg
push
push
and
pop
pop
in
int
xchg
int
mov
out
icebp
mov
sbbb
xchg
nop
aas
pop
push
mov
add
xchg
mov
or
mul
or
push
das
sub
cmpsb
inc
jecxz
hlt
sbb
enter
icebp
push
aad
adc
adc
xchg
mov
lods
and
adc
cs
clc
sbb
jmp
fcoml
cmp
sbb
mov
push
in
inc
bnd
nop
lret
mov
into
loop
mov
leave
mov
or
mov
push
inc
xor
inc
or
xchg
lds
sbbb
aaa
jns
dec
ss
icebp
dec
into
xor
dec
dec
adc
fiaddl
push
adc
inc
inc
popf
xchg
xor
cli
aam
mov
out
jbe
gs
mov
rcll
popf
cmpsb
adc
lcall
cld
push
mov
xor
cli
lret
scas
rcr
mov
add
xlat
push
push
clc
ds
adc
xchg
lods
lahf
push
mov
test
mov
icebp
pushf
stos
xor
int3
mov
mov
push
stos
jg
jl
inc
jo
loop
jno
insl
dec
aas
adc
icebp
test
xor
mov
adc
in
jo
inc
push
jmp
mov
cmp
pop
je
sti
sbb
mov
inc
sbb
data16
or
loop
xchg
push
mov
push
push
pushf
sbb
adc
mov
sbb
scas
gs
sahf
push
adcl
sahf
pop
imul
movsb
adc
outsb
xor
std
cmp
cmpb
mov
sub
push
call
std
dec
mov
jl
das
or
movsb
in
stos
inc
sbb
int3
sbb
jnp
add
jecxz
scas
insb
mov
inc
add
out
repnz
test
not
dec
cmp
xchg
ja
scas
inc
sub
or
arpl
add
and
pop
test
ss
add
loope
add
dec
xor
cwtl
sbb
push
jae
addr16
jbe
jnp
movsl
scas
mov
and
pushf
jbe
xor
rol
mov
push
and
cwtl
rep
cmp
hlt
and
mov
pop
dec
xor
stos
stos
into
pop
cmp
cld
add
nop
mov
push
xchg
fs
shrb
mov
movntq
dec
je
mov
or
iret
fildll
cmpsb
xchg
enter
nop
ja
movsb
xchg
pusha
xor
loopne
cli
decb
repz
insl
in
addl
adc
sahf
lcall
ljmp
ljmp
pop
xchg
jae
lock
bound
and
mov
pop
pop
les
mov
ds
push
jg
cwtl
cmc
or
xor
popa
repz
and
push
jno
or
rcr
dec
imul
jb
push
adc
mov
add
cmpsb
mov
ja
rcrl
add
outsb
enter
enter
and
adc
push
jo
add
divb
aaa
adc
dec
sbb
aaa
inc
adc
mov
loop
test
jno
mov
aaa
pop
push
push
in
popf
dec
shl
cmc
mov
xchg
push
hlt
jae
insb
imul
daa
inc
jo
or
fisttpll
popf
push
stc
jns
mov
movsl
push
mull
rolb
xor
mov
aam
inc
popf
int3
outsb
xor
fldcw
xlat
jg
jno
sbb
dec
cmp
xorb
sbb
adc
pop
scas
test
outsl
or
rcrl
xor
mov
push
jnp
jge
ljmp
mov
sbb
and
cmpsl
xchg
sub
rorb
sub
dec
inc
lock
mov
iret
test
out
adc
mov
test
pop
daa
loopne
inc
cmpsl
xlat
test
mov
sub
test
inc
mov
push
icebp
pop
xchg
popf
sarl
jp
xor
mov
jo
inc
nop
add
adc
icebp
repz
push
adc
mov
jg
xchg
and
stc
jmp
jge
jne
std
dec
push
pop
push
or
mov
sti
out
dec
add
loop
inc
push
lcall
mov
js
dec
lret
mov
push
insl
in
mov
push
lods
xchg
cmp
cli
mov
xchg
and
push
inc
shl
into
add
push
clc
sarb
xor
jo
xor
mov
inc
daa
mull
or
das
sarl
inc
adc
ds
mov
aam
adc
call
fs
dec
shl
out
jecxz
mov
add
cli
cwtl
pop
shr
int
insb
andl
sbbb
adc
sbb
pop
call
mov
test
repz
pop
mov
sub
loop
mov
push
jnp
add
rcll
test
lret
fisttpll
sub
jnp
pop
js
adc
mov
cli
test
pop
repnz
add
add
inc
inc
push
fstps
jae
mov
adc
inc
inc
popa
cmp
push
mov
stos
inc
pop
jmp
jp
inc
pop
into
mov
inc
out
sub
jo
push
dec
cltd
ds
push
adc
jl
fstp
mov
dec
xorl
insl
adc
sbb
xor
fldt
aaa
stc
fstpt
add
cmp
scas
into
jle
inc
push
mov
jmp
add
pop
in
aam
js
xchg
xchg
dec
popa
sahf
xchg
push
enter
add
and
stos
hlt
xor
sub
mov
jo
cmp
call
aad
add
ret
rorl
sub
rcr
inc
je
dec
jns
adc
test
and
in
shlb
push
aam
sub
fs
mov
lods
fildl
dec
push
loop
cmp
int
inc
imulb
flds
sub
xor
outsl
nop
or
push
test
lock
mov
push
imul
scas
xchg
jns,pn
fwait
ljmp
sub
jns
jl
mov
cwtl
js
dec
enter
into
and
mov
push
imul
ljmp
xchg
push
mov
push
fimull
data16
bswap
stc
mov
fwait
push
cmp
lods
in
or
fsubl
mov
push
jo
push
cmp
sub
insl
mov
push
sub
adc
cltd
popa
nop
jl
test
subb
sti
test
sbb
mov
and
xlat
das
test
outsb
js
ja
mov
mov
call
out
cltd
push
mov
loopne
or
pop
push
xchg
push
movsb
movsb
scas
cmp
imul
popw
jge
rsm
stos
sbb
fiadds
push
aad
jle
push
das
inc
nop
xlat
mov
lahf
js
dec
mov
inc
jp
mov
lahf
dec
and
mov
pop
mov
sub
in
cmp
push
scas
hlt
xchg
std
cmp
rcrb
push
sarb
sbb
cld
cltd
iret
ret
test
movsl
insb
out
shlb
jge
inc
mov
daa
rorb
lock
fbld
sti
leave
imul
xor
sahf
add
imul
ss
out
andb
xchg
mov
push
add
pop
inc
and
pop
jge
add
test
sub
add
outsl
cltd
out
push
pop
pop
xor
mov
mov
out
shlb
fidivrl
jo
inc
xchg
adc
mov
or
xchg
divl
pop
mov
in
repnz
push
or
scas
cmp
popf
cli
cmp
insl
dec
lods
add
mov
inc
jne
bound
pop
jecxz
cld
shrl
lcall
fs
out
push
into
fmulp
mov
aad
jecxz
jbe
push
mov
pop
rcr
in
xor
mov
incb
lods
ror
cs
je
lcall
pop
inc
jb
sbb
adc
insb
ret
xlat
sub
and
jnp
cltd
mov
jbe
lret
int3
push
xor
out
push
insl
push
pop
xchg
mov
and
pop
adcb
inc
mov
pop
mov
ja
sub
mov
loopne
push
jo
js
out
or
sbb
mov
dec
sub
mov
cmp
in
outsl
shl
inc
push
and
jno
stos
int3
xor
les
imul
test
fiaddl
in
xorb
sub
jbe
cmp
lcall
sbb
movsb
dec
popa
dec
mov
int
xchg
popf
movsl
xchg
hlt
jb
imul
and
iret
dec
mov
decb
xchg
mov
aad
sub
ja
mov
dec
aaa
in
insb
mov
cmp
inc
push
pop
add
aas
insl
mov
xchg
jo
cmpsl
and
movl
sbb
lcall
rorl
cmp
jmp
xor
inc
dec
sti
ljmp
adc
repnz
adc
cmp
into
les
pop
imul
mov
sub
sub
lock
pop
addl
fisttpl
js
sub
sbb
in
pop
mov
inc
xor
lret
cmc
fisubs
dec
mov
push
cmp
mov
jb
clc
leave
int
mov
pop
icebp
cmp
xchg
push
adc
cmp
mov
in
or
or
ja
in
lock
out
cld
pop
es
test
and
cmp
cmpsl
jb
and
pop
sbb
or
adc
mov
ds
pop
add
push
loope
push
xlat
or
je
fistps
mov
add
lret
cmc
in
jle
clc
jmp
sub
lahf
jl
and
cmp
mov
pop
imul
iret
jge
inc
enter
cmp
inc
mov
pop
xchg
shll
adc
outsb
mov
loope
sub
mov
test
dec
jnp
cmp
xor
ret
inc
stos
pop
gs
inc
xchg
sub
sbb
mov
push
hlt
mov
inc
inc
mov
xchg
shl
push
dec
and
sbb
in
jl
push
pusha
xchg
jmp
stos
shll
pop
jp
xchg
cli
dec
rcrl
xor
filds
and
fsubr
in
pop
mov
push
pop
fistps
mov
push
xor
mov
nop
cmc
push
and
negl
mov
dec
jbe
arpl
jne
dec
add
leave
push
sbb
push
pop
inc
popl
adc
mov
sub
mov
les
pop
scas
mov
loope
lret
inc
insl
mov
fmul
add
lcall
lret
repnz
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
