and
cmp
ffreep
mov
mov
cmp
pusha
into
lea
arpl
mov
cmp
and
ds
jbe
addb
pop
sbb
sti
sub
pop
pop
out
pushf
in
xchg
test
loope
fwait
pop
add
ret
cmp
clc
jge
push
push
in
fsubrs
rorb
iret
mov
out
test
sbb
sub
jo
xor
pop
dec
pusha
or
ret
subb
pop
stos
or
mov
push
inc
pop
adc
push
popf
jno
fs
pop
push
inc
mov
mov
inc
imul
dec
dec
filds
ds
push
sbb
push
cmp
lods
xlat
addb
xchg
dec
mov
inc
popf
and
addr16
or
inc
stos
sbb
loop
insb
mov
mov
dec
ss
pop
test
add
cmp
icebp
pop
gs
sti
insb
or
lock
stc
rcrl
jecxz
adc
out
xlat
loope
stc
lds
mov
jo
and
mov
and
sbb
das
gs
int
jo
in
mov
icebp
in
mov
adc
clc
dec
and
clc
and
mov
inc
push
in
and
sbb
cmp
icebp
std
pushl
fsubrl
call
inc
ret
inc
sti
stos
and
pop
xor
aam
out
inc
lcall
add
leave
push
cmc
test
cltd
mov
and
pop
fisttps
jb
inc
xor
mov
jmp
pushw
sbb
out
add
dec
dec
inc
stos
xchg
mov
filds
or
pop
push
dec
push
xchg
loop
jne
push
out
jp
fbld
xchg
push
dec
jge
jb,pt
sahf
std
pusha
lret
mov
mov
push
xchg
cltd
jo
cmp
sti
sbb
push
lods
repz
call
sbb
add
subb
in
mov
stc
jecxz
mov
push
ds
cmp
pop
fiadds
push
jp
nop
cmp
insl
scas
pop
xor
xchg
mov
pushf
jg
jnp
adc
bound
lahf
lds
lock
add
test
xchg
je
sar
and
xor
mov
xchg
mov
lds
notb
xchg
scas
add
cmp
outsb
stos
jns
xchg
sahf
into
cld
mov
es
sbbl
cwtl
mov
orl
push
mov
adc
dec
lods
mov
repnz
xchg
sbb
and
xchg
or
int
cmp
jns
dec
add
push
daa
jle
and
movsl
and
pop
mov
loope
push
fsubp
pop
ljmp
mov
and
repnz
sub
mov
js
push
adc
test
sbbl
jb
ret
xchg
dec
inc
test
out
mov
cmp
mov
mov
push
and
outsb
call
mov
and
in
scas
cmp
cmp
sub
out
push
aam
xchg
mov
orb
inc
cmp
sbb
arpl
mov
inc
shrb
bswap
push
in
pop
inc
divl
sbb
mov
add
xor
nop
pop
lret
ret
mov
sub
mov
sarl
scas
movsl
adc
jo
push
and
cmp
stos
ficomps
aas
pop
movsb
out
xbegin
pop
push
stc
loopne
pop
lock
push
addr16
lods
jp
std
cmp
stos
inc
in
push
and
inc
jge
out
ljmp
mov
xor
dec
push
push
inc
lret
fistpl
dec
lret
arpl
imul
fisttpl
mov
jle
aaa
ljmp
jl
rclb
xor
icebp
je
mov
lods
iret
xor
rorb
in
stos
push
xchg
imul
xor
push
mov
lcall
stc
xor
mov
sbb
cmpsb
cltd
xor
adc
mov
mov
shlb
loopne
ja
movsb
push
dec
outsl
adc
mov
cltd
dec
pop
cltd
cs
lret
in
out
mov
test
cmpsl
or
jle
loopne
in
rol
aas
push
bnd
cmpsb
inc
pop
push
in
add
repz
in
xor
fstp
inc
aaa
stos
je
nop
jb
arpl
stos
push
mov
sub
pop
gs
sbb
jge
das
mov
fimuls
pop
jns
add
mov
cli
gs
inc
lahf
mov
sar
mov
cmp
addl
cmp
push
add
sbb
sub
mov
add
shlb
ret
cltd
aam
testl
sbbb
pop
add
popl
lahf
stos
push
jge
int3
fwait
dec
test
mov
insl
loop
xchg
xchg
inc
data16
mov
movsb
ss
addr16
jmp
inc
pusha
mov
xchg
or
jmp
mov
enter
inc
push
mov
and
mov
pop
add
mov
es
sahf
mov
popl
lret
es
mov
xor
or
fidivrl
mov
xchg
imul
push
mov
mov
fucomp
out
pop
sbb
ror
jnp
inc
leave
insl
mov
negl
xchg
jnp
xor
ja
push
idiv
aam
adc
mov
xchg
fcmovnb
mov
in
fs
imul
mov
jb
popa
ficomps
pop
imul
cmp
jle
nop
cs
andl
mov
daa
cmp
addr16
adc
xor
adc
or
psrad
sbb
fs
jb
cmovae
or
ds
rorb
sub
sub
mov
add
mov
fisttpll
notl
xchg
inc
sub
xchg
push
sub
ds
popa
xor
fmuls
mov
outsb
inc
or
into
sti
pop
inc
sub
in
xor
mov
sub
cmp
jb
cwtl
das
js
int3
enter
or
cmpsl
jp
push
les
mov
inc
push
or
ss
es
fcoms
push
push
inc
pop
push
fsubs
jo
movsb
sbb
xchg
inc
fs
fs
inc
add
fstpl
adc
rclb
adc
stos
jmp
add
jns
pop
mov
pop
add
ljmp
push
cmc
mov
sbb
mov
cwtl
bound
inc
aam
push
pop
cld
push
jg
add
cld
adc
mov
xor
icebp
pop
xlat
pop
inc
adc
subb
xchg
mov
sbb
push
je
ja
loopne
loope
pop
mov
jmp
dec
inc
jae
sub
shrl
jg
push
sub
or
push
lret
mov
mov
push
insb
mov
xor
pop
mov
dec
sbb
sub
cld
mov
jbe
rorb
xor
rclb
adc
jle
int
cmp
adc
fiadds
sahf
fwait
push
lds
jg
pop
pop
add
stos
fildll
icebp
fs
push
aam
and
adc
push
sbb
dec
int
or
cmp
cmp
sbb
jecxz
jnp
out
jp
fnstsw
fnstcw
mov
fcmovb
push
or
xor
xchg
sbb
popa
pop
addb
xchg
or
lds
test
adc
clc
mov
xor
inc
add
mov
mov
lret
sub
fistpl
mov
xor
es
lock
je
dec
mov
leave
inc
sahf
loop
mov
add
xchg
dec
xchg
ds
int3
sahf
es
pop
jnp
imul
or
or
mov
inc
cmpsl
mov
pop
xchg
sahf
popa
mov
push
sub
xchg
repnz
stos
push
jge
jne
ficompl
jne
push
lret
gs
in
inc
jne
or
pop
cwtl
inc
es
xchg
push
out
mov
pop
xchg
inc
cmp
out
sub
mov
inc
push
mov
in
push
fwait
lahf
repnz
sub
push
call
jnp
std
xlat
jo
nop
cs
mov
scas
imul
insl
faddp
daa
popf
cmp
test
test
adc
dec
xor
nop
jns
and
mov
sbb
pushf
dec
fs
or
insb
enter
sbb
aad
push
mov
loop
or
inc
das
lock
mov
mov
jmp
dec
aad
pop
shr
movntq
push
int3
pop
jecxz
and
sbb
cmpsb
ret
jne
mov
lret
add
out
mov
repnz
mov
and
mov
sbb
inc
or
iret
ret
jae
fs
push
adc
mov
pop
roll
jnp
push
ret
push
test
pop
or
inc
movsl
xor
popa
add
fcmovbe
movsb
and
and
loop
xor
pop
sbb
mov
add
cmp
pop
and
pop
jmp
jb
movsl
jo
cmc
sbb
ds
idivb
lds
int
jnp
jbe
pusha
out
loop
pop
mov
imul
fwait
mov
mov
outsl
or
repnz
hlt
cs
xchg
and
and
jl
fdivl
sbb
test
mov
pop
lods
and
sub
mov
xchg
inc
push
adc
mov
lods
in
insl
ss
ss
sub
in
movsl
xlat
jge
incb
ret
or
mov
fisubrs
mov
inc
stos
push
mov
outsb
stc
call
cmpsb
push
cmpsb
repz
xchg
popa
and
bound
push
imul
adc
roll
xor
inc
push
pop
sub
out
je
jnp
cmp
push
inc
lret
mov
dec
pop
in
jle
setne
xor
sub
in
mov
in
push
cmp
shll
aad
inc
xor
addb
mov
out
add
rol
mov
les
aad
mov
call
les
sub
adc
mov
push
mov
sti
cmp
pop
sub
ds
les
sub
test
cmc
xlat
dec
and
rorb
les
int3
gs
aaa
inc
fstps
shl
lds
and
inc
cwtl
sbb
std
pop
sti
cmp
hlt
andb
or
adc
jbe
mov
mov
add
and
jge
pop
fldenv
sbb
dec
sbb
push
jecxz
mov
cmpb
mov
pop
pop
xchg
ror
xlat
add
xor
aaa
mov
out
es
call
push
dec
dec
sub
mov
sub
inc
and
or
ret
fs
mov
stos
jns,pn
clc
jecxz
int
inc
push
shrb
ja
or
inc
popl
out
cmp
xchg
ret
xchg
jg
lds
or
aaa
lods
sub
sbb
push
dec
push
popf
es
daa
mov
fwait
clc
pop
adc
cs
leave
mov
or
sti
aam
ret
cmp
jl
xlat
int
ret
add
pop
mov
cltd
fwait
cmpsl
leave
lods
stc
ss
mov
ret
sub
out
adc
push
lret
cmp
add
dec
ret
int
rolb
inc
cs
xchg
ficoml
loope
aaa
fisubrs
adc
adc
jns
std
xchg
push
mov
dec
sub
add
mov
in
lret
mov
bound
inc
fidivl
mov
stos
in
mov
mull
fs
imul
ds
in
movsb
sub
push
mov
fcoml
cmpsb
mov
mov
call
mov
adcl
shrl
leave
pop
xor
adcl
inc
test
out
frstor
push
ljmp
inc
inc
insl
dec
loope
add
rcll
test
leave
push
mov
push
fisubrl
pop
push
sbbl
repnz
lds
and
sbb
stc
jb
xorb
mov
pop
or
fwait
clc
add
lret
xlat
or
ljmp
sub
out
adc
mov
pop
inc
cli
sub
cmp
sub
ficompl
sti
stos
xchg
jne
scas
call
cs
jecxz
mov
ss
add
adc
shl
xchg
mov
daa
add
aas
stos
and
push
pusha
jp
cmpsb
mov
adc
movsl
int
or
fmull
lods
pushf
mov
loope
add
ljmp
or
fcmovbe
pop
push
rcr
jmp
int3
mov
or
add
mov
jnp
sbb
inc
xlat
lret
pushf
mov
je
lahf
push
lods
inc
std
mov
pushf
mov
stc
mov
stos
arpl
outsl
push
mov
mov
cmp
out
adcl
pop
insl
test
xchg
insb
mov
add
ja
imul
repnz
fucomip
call
pop
addr16
mov
jecxz
or
dec
call
mov
aam
mov
std
jmp
xchg
call
fdivrl
pcmpeqb
idivl
adc
mulb
xchg
xchg
cs
roll
mov
int3
xor
jne
xor
outsl
cmp
aaa
pop
xor
test
add
sub
xchg
push
and
and
mov
xorl
mov
jmp
push
pop
mov
jl
sbb
insb
mov
jg
lahf
add
xchg
int
sbb
and
cli
sub
mov
jg
add
enter
fidivrl
jo
and
jp
mulb
push
mov
setle
imull
inc
xchg
inc
shrl
insl
lds
mov
stos
cli
push
xchg
pop
pop
fcomps
rcrl
and
shrl
out
add
or
inc
mov
pop
js
sti
cmpsl
add
mul
into
scas
jne
mov
cmc
addr16
movsb
mov
cmp
pop
ja
into
and
mov
inc
jae
pop
inc
sbb
and
cmp
cld
ljmp
jp
push
or
push
movsb
adc
iret
or
xchg
inc
lods
mov
inc
lds
jo
mov
jo
xor
fwait
stos
xlat
mov
mov
inc
mov
jno
cmc
sub
inc
push
and
adc
mov
loope
rclb
xchg
xor
pop
mov
shrb
jl
push
faddl
add
mov
lds
ljmp
push
popf
outsl
mov
mov
push
push
cmc
mov
xor
pop
call
adc
or
ret
sbb
div
in
and
mov
mov
les
int
inc
add
hlt
cld
adc
pop
jb
mov
push
imul
add
mov
inc
into
dec
ds
or
sbb
sbb
dec
inc
mov
cmp
mov
mov
in
popf
fsts
repnz
sbb
enter
fstp
enter
les
adc
inc
mov
mov
mov
mov
mov
cmp
neg
xor
add
inc
xchg
loopne
psubusb
push
add
andb
xor
sbb
nop
fs
pushf
mov
sbbb
mov
mov
jns
arpl
mov
mov
inc
test
rcrb
hlt
fwait
aam
scas
dec
shll
mov
push
mov
je
cli
arpl
enter
sub
imul
or
into
dec
ja
int3
or
mov
lahf
jae
cmpsb
in
pop
adc
loop
jle
xor
mov
aam
std
jo
daa
test
mov
sbb
sbb
clc
decb
sbb
sub
les
mov
pop
pop
fsubrl
and
pop
ficomps
jecxz
mov
movsl
push
jg
ret
negl
ljmp
out
repz
push
sbb
outsl
xchg
inc
fldcw
pop
shlb
mov
test
test
sub
ljmp
les
loop
je
adc
cltd
insl
scas
pop
aad
push
popf
xor
scas
xchg
std
sbb
mov
cmpsb
jmp
fs
insb
adcl
mov
decl
inc
lcall
or
jae,pt
outsl
adc
and
lcall
out
mov
stc
and
sub
mov
rclb
cmp
jae
sti
cmp
jp
dec
and
push
mov
popf
add
xchg
cmp
popa
mov
xor
sarl
insl
sub
dec
push
xor
mov
or
jp
clc
aam
push
ficoms
rcrb
and
fldln2
mov
or
cmp
xor
dec
mov
xchg
pop
je
add
movsb
jb
mov
mov
mov
es
pop
mov
js
popf
push
dec
jno
int
pop
outsl
dec
icebp
xchg
cwtl
jmp
inc
xchg
or
push
movsb
lock
inc
iret
outsb
shl
scas
lahf
out
aaa
dec
repz
out
cmp
jge
daa
outsl
loope,pt
xor
pushf
mov
jae
sub
xchg
xor
jae
add
fsubs
sbb
fs
cmpsb
jnp
sub
test
sbb
mov
mov
shll
dec
xor
lds
ja
sub
or
ffreep
cmpb
insl
add
sub
xchg
ljmp
scas
jno
outsb
mov
xor
add
mov
cmp
jl
sahf
push
or
mov
in
mov
cltd
popl
insl
icebp
daa
inc
pushf
in
addr16
mov
pxor
sub
mov
mov
mov
in
rorl
jbe
int
out
mov
mov
xor
inc
das
lea
push
mov
lock
arpl
add
adc
scas
fnstsw
or
mov
sbb
inc
insb
lods
sbb
pop
testl
roll
dec
fldt
cmp
and
push
push
mov
leave
mov
mov
shr
mov
and
int3
sbb
cli
dec
xor
insb
dec
scas
sub
xchg
int
jne
sub
mov
xchg
and
movsb
addl
loope
cmpsl
es
mov
jmp
pop
outsb
leave
cwtl
xchg
ficomps
mov
popa
xlat
aas
adcl
dec
ret
fwait
or
popf
lahf
das
mul
cwtl
sahf
adc
outsb
push
push
mov
mov
dec
pop
mov
mov
imul
ss
mov
cld
sar
push
out
jo
lock
test
fpatan
or
into
jp
scas
xor
ljmp
inc
cmc
add
ret
dec
ljmp
xor
cltd
adc
mov
mov
mov
incl
dec
jb
jae
mov
insb
js
sarb
jg
scas
mov
jns
jne
pop
fldl
pop
mov
xchg
push
xchg
xchg
adc
insl
movsb
insl
and
movsl
ljmp
out
fiadds
add
or
vxorps
ret
dec
in
cmpsb
movq
jns
sar
cwtl
adc
lea
jg
xchg
in
sbb
xchg
xchg
or
push
jmp
xor
add
adc
sti
lea
pop
push
or
add
push
pop
mov
sbb
lock
mov
js
mov
xor
je
mov
adc
add
sub
out
lods
jae
xor
cmp
or
insl
daa
xlat
pop
test
push
xor
mov
fwait
fstl
or
cmp
aaa
nop
xchg
notb
xor
inc
mov
bound
xor
rorl
mov
rolb
stc
jecxz
rcr
push
jo
lret
xchg
xchg
hlt
mov
imul
rep
jecxz
add
cmp
mov
jae
push
mov
repnz
or
mov
loope
clc
js
and
rolb
adc
mov
mov
sbbl
lcall
inc
sub
inc
mov
aam
jo
pop
pop
testl
test
sti
push
sti
ret
jcxz
jae
loop
fs
fs
inc
xchg
push
and
and
outsl
jbe
aaa
adc
lahf
fsubp
mov
insl
pop
xor
lods
lahf
sbb
arpl
insl
in
sub
sti
push
jbe
popl
gs
insl
xchg
pop
mov
mov
sti
add
jmp
stc
fnsave
js
dec
pushf
jecxz
iret
out
xchg
mov
imul
cmp
mov
jle
jo
pop
in
or
ficoms
mov
adc
mov
lods
and
cmp
adc
adc
mov
or
or
jno
jmp
mov
mov
sbbl
sbb
stos
ds
pushaw
stos
cmp
sahf
sbb
das
sub
sub
leave
mov
jns
mov
push
sti
lods
loope
inc
adc
movb
sbb
and
xor
push
or
aaa
jnp
adcb
push
loope
outsb
and
mov
ja
mov
adc
mov
hlt
mov
sbb
push
mov
test
inc
fnstenv
jp
aam
js
pop
pop
xchg
ds
rorl
cmpsb
addr16
add
or
push
inc
divb
loope
mov
ja
inc
adcb
push
mov
mov
adc
pop
in
xchg
bound
jnp
int3
addr16
lock
fcoml
lds
repz
sub
loope
imul
jmp
adc
test
jb
xchg
or
xchg
dec
fimull
aam
dec
gs
pop
push
add
push
bound
sti
pop
cmc
adc
jecxz
adc
subl
mov
sbb
mov
aad
inc
cmp
movsl
mov
xor
inc
sbb
adc
mov
mov
or
and
lods
outsl
aaa
loope
pop
test
pop
cwtl
mov
sub
cli
mov
pop
into
fstp
cs
cwtl
daa
orb
scas
xchg
cmpsl
dec
arpl
pushf
lret
fisubl
xor
mov
in
movsl
movsb
arpl
jp
mov
andl
popa
add
mov
mov
pop
pop
pop
dec
xchg
decb
inc
stos
sub
in
cmc
shl
lret
sbb
sti
shrb
push
mov
decb
in
push
xchg
out
test
jne
dec
in
pop
decl
cld
outsb
movsl
jbe
shr
stc
dec
shlb
mov
adc
cs
inc
jno
int3
push
rorb
mov
icebp
pop
pop
mov
pop
jecxz
arpl
mov
lcall
les
xorb
add
xor
movsl
fwait
enter
xchg
js
sahf
jbe
negl
shll
fiaddl
xchg
xor
push
fidivrs
xchg
jp
mov
out
mov
loop
xchg
xchg
imul
les
sub
inc
cwtl
dec
fwait
inc
int
sbb
adc
push
cmp
adc
leave
test
xchg
mov
andb
test
js
or
and
dec
add
jb
mov
xor
shr
pop
cmc
pop
pop
icebp
dec
aam
push
into
cli
fdivrs
daa
mov
mov
mov
cmp
pushf
cwtl
cs
in
leave
lds
pop
push
ret
into
shll
out
jae
test
xlat
and
dec
fidivrs
int
stos
ret
call
outsl
into
push
cmp
add
push
lahf
enter
or
jg
push
xchg
aaa
cmp
xor
mov
mov
dec
mov
insb
lret
adc
addl
sti
inc
scas
mov
cli
pop
jl
and
push
loope
jmp
jo
jmp
fwait
cmc
test
push
adc
js
loope
outsb
xor
mov
mov
push
sbb
sub
sbb
in
stos
das
sbb
jae
inc
mov
arpl
test
xlat
aad
adc
daa
out
int
or
mov
or
or
ds
inc
jg
out
in
stc
dec
pushf
mov
adcb
mov
movb
or
imul
movsl
pop
into
je
adc
push
sub
sub
daa
scas
scas
xor
enter
mov
pop
ret
lds
xor
mov
and
pop
dec
in
out
incb
mov
fistps
mov
push
or
mov
mov
jne
mov
mov
sub
mov
add
push
mov
cmp
mov
mov
or
mov
pop
testb
jae
aaa
fadds
mov
int
pop
imul
dec
idiv
and
rcr
or
fs
filds
jle
sbb
cmp
pop
out
stos
fs
or
clc
and
xchg
dec
repnz
cmpsb
jns
ret
outsb
aam
imul
je
push
jno
fcoml
jno
xchg
je
xchg
sahf
imulb
fisubrs
and
add
shrl
outsl
idiv
insl
jg
and
jb
push
int
roll
int
movsb
enter
or
mov
outsb
data16
cmp
int3
push
jp
xchg
xchg
ljmp
sub
cli
orb
sahf
push
sub
fst
xchg
jb
in
adc
mov
xor
and
and
dec
mov
rcrb
xchg
rorl
mov
out
lret
mov
sub
lods
xchg
and
lret
mov
jecxz
and
stos
out
mov
das
or
fdivr
call
sub
inc
stos
sbbb
xor
lret
into
mov
subb
rcll
adc
pop
js
xchg
cmpsb
mov
sub
addl
xchg
sti
cmp
jl
inc
adc
add
fnstsw
cld
cmc
xchg
into
mov
push
dec
add
mov
adc
stc
loope
xchg
dec
mov
sub
cwtl
sbb
popa
les
xor
inc
and
jno
pusha
iret
pop
stc
inc
dec
daa
dec
test
sbb
outsl
inc
jecxz
xchg
pop
inc
ja
in
push
cmc
adc
cmpl
cmp
clc
outsl
pop
lcall
add
ja
adc
mov
scas
mov
pop
sub
stc
mov
jg
xor
xchg
inc
mov
inc
daa
push
cmp
andl
test
js
fs
dec
inc
ret
mov
cmp
popa
hlt
sub
fstpt
or
test
push
mov
addl
ret
aam
mov
testb
fidivrs
lret
push
cwtl
cmp
or
pop
xchg
jno
mov
cmp
or
hlt
fsubl
pushf
subl
adc
lea
nop
mov
loope
xor
mov
jg
imul
scas
xor
jg
xor
je
cmpl
pop
cmp
les
push
mov
fwait
and
int
adc
adc
inc
xor
mov
cmp
mov
icebp
mov
sbb
lret
ret
mov
jge
jb
mov
popf
mov
adc
sub
jnp
cwtl
mov
cmp
inc
xchg
sub
scas
mov
xchg
push
pop
mov
ret
mov
test
fsubl
xchg
push
jns
cmpl
mov
mov
sbb
adc
mov
xchg
inc
jmp
movsb
test
fisubs
inc
hlt
ss
mov
mov
sub
fstp
push
shrl
mov
pop
mov
iret
loopne
push
xchg
cwtl
adcl
movsb
fcomps
les
scas
cmp
popf
inc
add
pop
cmp
ds
test
ret
dec
cli
movsb
cli
add
mov
pop
sub
cwtl
jb
sub
fadds
pop
and
sbb
cmp
cmc
push
imul
adc
test
rcll
add
or
xor
jnp
inc
mov
clc
jns
mov
daa
mov
rcll
movsb
jmp
add
xor
mov
js
sti
fmulp
or
mov
adc
push
dec
xor
ja
mov
jp
das
xchg
fsubl
push
cmp
xlat
mov
xchg
js
sub
lahf
cmp
rolb
mov
dec
xor
mov
pop
inc
mov
out
pop
aaa
inc
fiaddl
jmp
fs
inc
cs
sbb
inc
inc
cwtl
xor
mov
sbb
dec
cmpsb
scas
sti
ret
dec
adc
lods
frstor
xor
or
sub
or
movsl
jo
or
jp
addr16
dec
mov
add
or
sub
xchg
stc
imul
das
push
add
call
bound
lock
das
dec
xor
fwait
pop
dec
out
fists
sbb
inc
xchg
test
jnp,pt
sbb
mov
clc
in
out
negb
inc
ret
jo
jp
cmc
lret
scas
mov
mov
loop
movsl
add
leave
cmpsl
xor
pop
mov
loop
mov
add
push
mov
fwait
addb
inc
sbb
lcall
xor
std
push
sbb
imul
rol
les
xor
test
cmp
xchg
jmp
push
jecxz
or
lock
arpl
adc
jge
sbb
popl
mov
stos
or
aas
shlb
aaa
sbbl
lock
negl
xchg
leave
pop
idivb
loop
insl
xor
mov
cmp
stc
fisubrs
jb
mov
mov
or
subb
das
adc
inc
enter
add
pusha
nop
mov
icebp
push
jle
fstpl
and
dec
inc
shrl
cmc
cmpsl
movsl
gs
roll
outsl
adc
push
xchg
mov
push
js
mov
cmp
adc
std
enter
stc
mov
mov
jne
inc
leave
popa
aad
movsb
mov
mov
adcb
mov
mov
jo
lcall
dec
xlat
ds
jecxz
cwtl
inc
arpl
sub
lods
mov
and
jns
dec
ret
enter
fsubrs
in
dec
mov
cmp
mov
jns
loope
cmp
mov
mov
sub
ljmp
mov
pusha
xlat
xor
cmp
ret
and
in
loope
cmp
movsb
insl
xor
iret
or
inc
in
sbb
hlt
cmc
adc
mov
inc
lret
cli
push
add
dec
mov
ffree
pop
lock
sbb
or
movsl
repz
and
pop
stos
cltd
lea
cmp
in
push
mov
sysexit
add
mov
xor
out
test
cmpsb
inc
push
fcoml
das
xor
aaa
in
or
inc
adc
adc
jb
xchg
test
sbb
ja
mov
sub
cltd
sub
push
in
add
mov
cltd
ret
mov
or
dec
in
fnstcw
mov
stos
cmp
xor
or
lock
or
jl
push
lock
filds
mov
jg
sbb
inc
loop
xor
pushf
notl
xchg
mov
pop
ja
mov
gs
shl
push
mov
jle
adc
fs
or
into
fdiv
pop
je
sar
mov
fildll
mov
addl
int
in
mov
fidivl
cmpsl
mov
pop
scas
lret
aad
or
cmpsl
out
jno
dec
mov
dec
lock
xchg
jae
jg
pop
jno
lds
jmp
shr
mov
mov
test
jns
mov
inc
sub
fldenv
mov
insl
test
frstor
mov
or
mov
cwtl
xlat
shl
xlat
cmp
jbe
or
addl
xchg
sbb
test
fisttps
and
in
or
sbb
stc
das
movsl
int3
mov
xor
mov
push
gs
in
push
jl
ret
rcl
cmpsb
fisubrl
mov
aam
sbbb
les
push
cmp
fs
lds
mov
pop
xchg
imul
or
mov
jge
stos
repz
lcall
ljmp
adc
or
mov
sub
int
inc
or
or
repz
cmp
stos
rol
frstor
sub
lods
repz
into
inc
and
pop
adc
mov
mov
lods
jp
and
insb
rcll
jae
inc
daa
mov
cld
out
insb
dec
into
pop
push
and
cmpsb
sbb
push
rcll
jb
xchg
mov
push
out
mov
test
dec
stc
push
outsl
mov
xchg
faddl
cmp
mov
pop
pop
mov
dec
cmp
aad
in
xchg
push
sub
cli
push
cltd
mov
test
rorb
xchg
sub
jno
lds
icebp
cmp
insl
mov
loope
jl
inc
jl
fs
jmp
ds
xchg
ds
lcall
xchg
mov
enter
adc
aas
fdivs
jl
cmp
add
sbb
aad
or
cmp
cld
dec
call
lret
jnp
adc
aam
inc
and
sbb
adc
ja
lods
pop
das
rolb
in
cmp
xchg
jle
ret
ja
loope
fbld
jmp
mov
pop
out
lods
scas
sti
dec
sub
bound
cmp
icebp
stos
ljmp
or
adcb
popf
mov
jne
xor
mov
imul
es
ljmp
push
xchg
je
cmp
xor
xchg
icebp
popa
cmpsl
stc
or
cld
fstpt
fsts
mov
sub
jnp
lret
dec
dec
jno
jnp
bound
mov
dec
mov
xchg
jns
aaa
fnstcw
pop
jmp
sarl
out
inc
dec
cld
in
xchg
xor
ja
jg
aam
pop
stos
jbe
call
gs
mull
and
sbb
insb
lods
cltd
sti
push
in
fsubs
mov
testl
test
sbb
or
mov
cs
sub
inc
sbb
xor
mov
jmp
in
jb
jae
dec
or
fadd
and
add
jmp
leave
or
jg
xor
jb
mov
mov
jne
add
test
xor
pop
dec
adc
jg
mov
push
in
jne
mov
shlb
fwait
cmpsb
sub
jae
fistl
scas
mov
pop
cmp
mov
adc
aad
or
jbe
outsl
mov
and
inc
aad
fldenv
dec
int
jae
jnp
push
add
fcmovb
pop
ficomps
stc
imul
add
push
pop
cmp
mov
mov
push
out
ds
dec
cmp
insl
rorb
sahf
xor
and
cmpsb
shrl
sub
icebp
sub
add
ds
fildll
mov
add
cli
negl
add
pop
and
xlat
adc
shrb
rorl
js
out
adc
lret
xchg
mov
sbb
imul
mov
xlat
mov
xchg
scas
jge
pop
jl
iret
les
dec
pop
xor
popf
popf
outsb
test
leave
inc
mov
pusha
cmp
in
scas
fcompl
mov
cltd
inc
cmp
rcl
out
or
sbb
test
jmp
lods
adc
mov
add
xor
hlt
mov
add
cltd
push
sbb
fcmove
push
push
inc
ss
movsb
and
in
lcall
sbb
mov
movsl
shll
loope
imul
scas
rcr
and
xchg
divl
ss
test
jecxz
cmp
testb
xor
push
xlat
and
ja
cmp
mov
arpl
out
pop
xchg
mov
pop
add
jnp
xor
jno
sub
adc
xlat
xchg
cmp
dec
push
es
test
es
outsb
mov
push
addl
fs
jl
lahf
mov
push
out
and
imul
ja
mov
pop
nop
cltd
pop
mov
sahf
movsb
mov
in
dec
incb
xchg
xchg
orb
pop
xchg
adc
aad
bound
scas
pop
outsb
dec
mov
xchg
mov
stos
aaa
add
cmp
xor
or
cli
push
loopne
jle
sub
pop
fimuls
inc
jbe
movsl
cmpsl
mov
lods
push
adc
cmp
mov
sbb
insb
sbb
pop
jmp
aad
and
subb
push
out
ja
repnz
cmc
adc
nop
insb
push
dec
aaa
pop
mov
xor
je
sub
data16
mov
inc
mov
pop
adc
pop
xchg
aas
inc
ret
and
loope
dec
fmuls
repz
stos
aad
test
lea
in
xchg
push
mov
call
pop
mov
mov
rclb
adc
rolb
sti
nop
jp
mov
movsl
mov
ficoml
mov
mov
xor
jg
and
push
jnp
test
repnz
dec
mov
and
sbb
xchg
adc
mov
pop
adc
xlat
pusha
stos
push
add
or
fcomps
mov
outsl
out
sub
adc
mov
adc
aas
jno
mov
sbb
addr16
jl
push
mov
subb
mov
scas
mov
loop
xor
in
aam
int3
movsl
jle
sub
push
fcoms
popa
out
add
fidivrs
mul
jbe
shrl
xchg
imul
cmp
adc
dec
faddp
outsb
sti
out
xchg
subl
mov
dec
daa
cwtl
sub
rcrl
push
ljmp
jns
mov
push
jl
cmp
mov
repz
jmp
je
das
in
in
inc
push
lock
cli
lahf
cs
insb
test
dec
lds
or
into
lods
xchg
dec
std
bnd
dec
xchg
cmp
ljmp
loopne
xchg
insb
mov
lea
nop
negl
mov
mov
sbb
testl
push
push
je
test
int3
or
mov
pop
scas
mov
push
cmpsb
out
sbb
inc
out
xchg
test
jb
stos
aad
sub
push
ds
cmp
xchg
sub
or
add
daa
pop
movsb
lds
cmp
fcompl
xchg
int
cmp
and
fstl
nop
popf
shlb
jno
scas
xlat
icebp
imul
push
aad
rcrl
xchg
sbb
les
movb
sbb
inc
sub
mov
pop
shr
jb
push
rcr
sub
xchg
jge
repnz
bnd
arpl
sbbb
lret
into
jns
out
lahf
push
testl
xchg
dec
dec
mov
mov
iret
add
outsb
ja
cs
push
imul
sbb
int
jmp
or
mov
mov
testl
je
sub
add
fldcw
xor
lods
outsl
xor
push
js
jns
mov
outsl
movsl
outsb
push
addr16
pop
sub
dec
aas
mov
pop
sbb
ret
sbb
rcl
jne
ret
mov
int3
jnp
into
les
lcall
adc
pop
or
inc
dec
xchg
stos
sbb
mov
pop
les
shrl
sbb
adc
test
push
lock
pop
int
dec
bound
into
enter
jl
aas
je
test
inc
lds
inc
push
and
sub
push
pop
sbbl
inc
aaa
lods
pop
dec
inc
test
iret
ja
and
int
call
inc
andb
pop
clc
fst
imul
xor
or
inc
inc
leave
mov
xchg
sub
cmpsb
push
and
test
test
movb
sbb
jl
add
and
pop
and
rcr
cmp
pop
inc
xchg
push
ror
push
data16
movsl
test
scas
or
pusha
enter
add
pop
mov
cmp
imul
adc
adc
mov
scas
stos
sbb
pop
movsl
cltd
mov
cmp
in
jne
cmp
jp
jmp
ret
lods
fidivl
pop
out
js
out
sbb
in
fcoms
ds
jne
sub
push
dec
or
dec
inc
cmp
lea
dec
or
icebp
repz
dec
hlt
xchg
movsl
rclb
push
sub
out
inc
loop
dec
scas
imul
and
xchg
sbbb
push
hlt
xchg
pop
pop
out
xchg
test
cmp
fisubl
out
movsb
pushf
cltd
enter
mov
sub
add
leave
cwtl
mov
cwtl
hlt
push
in
xchg
push
pop
sbb
mov
test
aas
sbb
hlt
xor
and
lods
sub
in
sbb
ja
mov
mov
cs
pop
jae
pop
scas
xchg
mov
sub
sub
add
xor
es
data16
das
sub
fdiv
jmp
add
into
ljmp
sahf
loop
mov
mov
sub
fstps
cwtl
rcl
out
sub
stos
inc
sbb
sti
or
push
add
mov
mov
arpl
in
or
roll
or
sbb
mov
idivb
jno
xchg
icebp
fcompl
sbb
es
push
test
aad
pop
mov
mov
xchg
std
push
pushf
movsl
mov
sbb
lret
mov
out
sbb
xchg
test
or
or
jge
gs
mov
cmp
inc
cld
cmpsl
lcall
xorb
shl
xchg
jo
pop
call
mov
lahf
jne
sbbl
rolb
insl
in
insl
cmpl
imul
cwtl
into
gs
cmpsb
xor
stos
inc
xchg
pop
data16
fdiv
stc
add
loope
movsb
pop
adc
jg
cltd
cmc
mov
orb
stos
jecxz
dec
mov
add
addr16
mul
daa
push
jge
dec
sub
mov
lcall
in
insl
push
mov
ljmp
pop
dec
mov
fsubrs
mov
adc
hlt
jmp
sub
ljmp
xor
push
push
jge
nop
dec
xor
mov
adc
mov
adc
out
shl
pop
mov
lahf
fs
scas
loopne
cltd
enter
fisubs
setne
int3
push
adc
loop
loop
push
cli
adc
mov
data16
fists
shll
cmp
mov
lods
pop
add
sub
sub
jns
insl
adc
pop
insl
mov
aas
cli
mov
inc
push
std
rcr
enter
js
stc
jge
pop
fisubs
xor
sub
imul
outsl
mov
dec
jns
push
push
xchg
cmpsl
jg
pop
cmc
xchg
mov
inc
cmp
sub
fmull
int
subb
inc
ljmp
clc
arpl
mov
mov
pop
fwait
sbb
jns
pop
andl
ja
cmp
mov
inc
xor
in
dec
sub
jp
pusha
pop
inc
cmp
sbb
adc
jmp
pop
push
dec
jb
push
push
adc
cld
xchg
dec
mov
sub
sub
and
int3
rorl
shl
pusha
insb
or
add
lea
inc
pusha
aas
add
pop
andl
call
loop
es
jno
in
and
or
addr16
and
outsl
mov
lds
out
cli
cmpsl
sub
dec
xchg
jle
sahf
shl
mov
and
xchg
fsub
loop
cmpsb
sub
inc
les
imul
mov
sarb
mov
add
rcll
adc
xchg
or
sub
add
push
dec
mov
mov
ficoms
mov
xor
fadds
test
fsts
outsl
leave
push
out
mov
lock
push
std
cmp
decl
cmc
push
sub
outsl
out
adc
push
pop
rorb
ss
jl
sbb
mov
es
mov
das
scas
mov
in
movsl
sub
mov
inc
movsl
pop
sbb
dec
pop
stos
push
add
iret
insb
ror
jecxz
add
or
stos
fs
inc
aad
mov
addr16
push
push
lahf
mov
dec
mov
sbb
call
popf
sbb
push
push
cmp
sub
pop
xlat
into
inc
or
xor
frstor
xchg
clc
aam
icebp
jae
mov
testb
inc
cmp
inc
arpl
in
sahf
fldl
or
in
outsb
push
adc
imul
cmp
aad
adc
ret
test
pop
or
inc
or
addr16
push
xchg
dec
insb
clc
movsl
popa
scas
rolb
add
sub
push
clc
fsubp
scas
sub
shl
cmc
jno
lock
es
sub
and
push
cmp
pushf
sbb
bound
fstl
cltd
aam
cmpsb
adc
xor
fucomp
xor
cmp
subl
imul
xor
push
cmp
aaa
jb
dec
cs
add
lea
insl
mov
pop
cld
fisubrl
or
mov
cmpsl
push
push
add
sub
add
add
leave
sahf
lods
lods
jg
lods
or
aad
les
sti
loop
push
xchg
cmpsl
or
xor
push
inc
jmp
pop
je
outsb
into
jmp
dec
or
xor
stos
das
xchg
jmp
xchg
add
movsl
stc
adc
arpl
push
fisubrl
adc
jne
mov
sbb
inc
icebp
lea
into
arpl
jae
aas
inc
mov
xor
and
sbb
icebp
mov
scas
cmp
out
fdivs
add
aad
or
fstpl
add
jb
test
mov
clc
pop
leave
inc
jmp
dec
aam
push
mov
jo
mov
xchg
pop
sbb
outsb
jg,pt
imul
shr
aaa
and
hlt
sub
jae
mulb
xchg
xor
mov
ss
fnstcw
sbb
stos
lret
fs
mov
xchg
test
xor
rcrl
and
scas
lods
lahf
dec
pop
and
dec
cmpsl
pop
push
jns
add
scas
into
mov
inc
jmp
pop
xor
arpl
mov
fs
add
or
sbb
repz
pushf
jb
and
jge
dec
insb
mov
sub
int3
iret
js
or
mov
aaa
cmp
sub
bound
jo
sarb
test
jno
inc
lods
movsb
dec
dec
or
aaa
aaa
dec
imul
test
mov
mov
cmp
aad
bound
out
inc
mov
pop
xor
mov
popf
add
out
xchg
adc
inc
cmp
sbb
repz
fnstsw
lods
test
daa
add
ja
push
repnz
int3
jle
dec
and
ljmp
popf
or
cli
out
mov
fbld
nop
ficompl
xchg
adc
gs
fsubr
stc
std
pop
and
mov
adcb
gs
ss
jp
push
mov
mov
xchg
negb
inc
movsb
inc
xor
shr
or
push
jbe
test
adcl
mov
lret
out
pop
aaa
imul
pop
test
mov
fidivrs
xchg
xchg
popf
lds
ss
dec
adc
js
add
lret
fmuls
inc
jne
movsb
lea
inc
in
in
push
cmp
push
mov
imul
pop
cmp
cmpsb
mov
mov
xchg
pop
xchg
int3
sbb
mov
add
and
repnz
xchg
dec
mov
xchg
into
outsb
dec
and
push
pop
cmpsb
cld
cmp
mov
es
and
xor
loop
sarb
sub
mov
icebp
std
adc
shll
mov
repz
mov
test
out
sbb
je
insb
mov
push
adc
movsl
xchg
or
sub
mov
or
mov
mov
sarb
jge
ret
ljmp
or
add
dec
jmp
xchg
movsb
jecxz
and
out
rorl
jmp
ret
mov
add
mov
dec
cmpb
je
ret
orl
mov
xor
movsb
dec
jg
dec
idiv
and
out
pop
insb
mov
cwtl
mov
cmp
jb
lock
mov
or
push
fistl
pop
push
xchg
dec
adc
enter
cwtl
into
cwtl
aam
adc
bound
das
and
jl
ror
scas
sarb
cmp
shll
out
pop
lock
int
dec
dec
dec
test
cli
cmpsb
or
dec
cmp
int3
inc
call
in
insb
js
cmp
clc
stos
imulb
loopne
cmpsl
test
dec
mov
adc
jl
push
xor
fsubs
and
inc
mov
mov
aam
mov
inc
jl
xchg
xor
in
adc
push
cwtl
out
lret
add
mov
pop
push
dec
leave
lods
daa
es
pop
arpl
mov
fsubs
jnp
mov
and
pop
test
inc
jp
xchg
int3
in
cmpsl
test
xor
inc
data16
mov
jns
add
jmp
jecxz
fs
loope
pop
sbb
pushf
aad
dec
mov
inc
jb
mov
adcb
inc
mov
pop
cmp
cli
jb
insb
and
fimuls
sbbl
shll
enter
xchg
pop
loop
testb
adc
aam
mov
je
mov
pop
std
mov
jg
dec
mov
leave
stos
iret
jge
mov
cmp
and
scas
imul
jge
cltd
aam
sbb
lds
sub
sbb
mov
stos
push
in
jo
and
sbb
repnz
rcrl
adc
arpl
out
push
lea
dec
repz
sub
inc
lea
outsb
and
xor
js
fisubl
ds
pushf
ljmp
sbb
insb
xorl
mov
xor
xor
pop
lods
inc
xchg
and
call
les
js
mov
rcrb
push
jno
and
adc
adc
and
adc
xchg
rolb
push
stos
mov
sbb
call
jo
je
push
sub
or
loope
jns
rcrl
imul
pushf
jnp
xchg
cmc
bound
lds
clc
stos
sahf
xchg
mov
xchg
push
push
js
xchg
fistpll
pop
cmp
scas
jg
cmp
inc
jbe
add
lods
ud1
rep
aam
pop
sbb
xchg
arpl
imul
push
js
xchg
add
in
pushf
daa
inc
xchg
imull
std
mov
sbb
repz
sbbb
or
pop
neg
xor
cmpsl
lods
xchg
cmp
inc
inc
cmp
shlb
mov
or
insb
push
mov
mov
stos
out
shr
mov
hlt
sti
jle
cmp
mov
pop
out
fildl
adc
enter
cs
jge,pt
fldt
jle
insl
ficomps
mov
insb
or
cmc
dec
jae
dec
repnz
pop
or
aas
dec
lods
jb
mov
xor
mov
clc
dec
cmp
in
lret
test
pop
pop
je
add
inc
jae
fwait
mov
pop
pop
hlt
nop
jmp
add
xchg
adc
test
cmp
sbb
xlat
dec
fcoml
icebp
mov
in
adc
xchg
sbb
mov
pop
jns
clc
mov
clc
push
dec
xchg
inc
mov
inc
push
subl
jge
in
adc
jmp
push
ss
test
pop
dec
cld
push
out
xor
mov
sbb
aad
lock
scas
int3
popf
xchg
cmp
clc
inc
lea
inc
call
push
leave
ljmp
repz
test
add
lret
gs
xor
in
shll
loope
in
mov
sarl
fs
cs
dec
jb
outsl
scas
nop
adc
xchg
xlat
jp
jae
sub
std
pop
pop
scas
outsl
cld
inc
cltd
dec
xor
hlt
mov
push
psrlw
insb
inc
jb
xor
je
xor
xor
or
cmp
lock
icebp
dec
push
pushf
out
push
outsb
repz
sub
lock
in
into
push
adc
xchg
xchg
adc
pushl
cmp
ss
in
test
and
aad
lea
push
sbb
dec
push
cmpsb
mov
lods
in
pop
dec
sub
cld
lcall
dec
sbb
push
mov
repz
push
pop
or
outsl
cmc
sbb
je,pn
push
adcb
cmp
mov
mov
sbb
inc
mov
cmpsb
jbe
lds
das
and
lahf
inc
fwait
adc
fcmove
hlt
cmp
xchg
or
push
notb
loope
fildl
popf
outsb
and
test
cmp
lea
xor
sbb
adc
cmp
jns
add
inc
mov
sahf
inc
mov
sbb
xchg
or
mov
loopne
ja
cmp
lcall
idivl
and
inc
cmp
push
jns
fldenv
test
jp
xchg
push
lds
push
sbb
outsb
xor
sub
and
in
sub
xchg
addr16
inc
outsl
or
gs
jge
insb
rol
popf
mov
hlt
xchg
rcll
es
inc
xchg
mov
mov
sub
dec
dec
xor
or
jmp
push
push
and
push
sbb
mov
leave
add
ret
out
cmp
mov
cs
jbe
ljmp
push
xchg
ficompl
jmp
ss
push
add
inc
out
xor
ret
mov
inc
sbb
jno
imul
test
in
or
push
push
mov
sbb
adc
movsb
dec
xchg
sub
pop
cmc
int3
loop
outsl
cmp
inc
test
loop
dec
test
mov
mov
stos
cmp
cld
notl
push
lret
add
push
lods
push
ss
pushf
adc
sbb
cmp
mov
push
inc
outsb
daa
inc
mov
arpl
sub
pop
add
rcrb
jmp
aaa
jg
jae
neg
and
in
fsubl
jb
and
adc
push
sbb
cwtl
push
fstps
sbb
sbb
inc
jp
out
hlt
cmp
subb
ret
sbb
add
loop
xor
lcall
pop
and
ret
les
xor
and
push
xor
lds
jg
das
jno
fcoml
addb
cmpsl
inc
test
dec
jns
cmp
adc
mov
dec
popf
movsb
mov
pop
inc
fs
pop
adc
xlat
les
push
xchg
in
lods
jnp
cwtl
adc
fwait
lock
sub
into
fbstp
insb
dec
push
push
aad
movsb
cmp
add
add
shl
movsb
cmp
jp
popf
lahf
xor
repnz
dec
xchg
popf
jmp
inc
mov
push
pop
add
ljmp
cltd
cli
xchg
inc
enter
imul
fsubrp
and
popf
dec
sarl
push
shrl
push
or
pop
loopne
jge
dec
loop
leave
push
jbe
jo
jl
or
dec
push
xchg
jecxz
mov
incl
pop
and
sbb
push
sbb
jp
test
push
pop
push
push
rcll
sbb
lds
loope
bnd
dec
orb
sbb
jle
je
stos
gs
scas
add
add
sbb
int3
push
pop
dec
mov
sbb
cmp
cmpsl
das
lret
dec
cmc
jmp
inc
sub
int3
push
add
sbb
push
jno
push
xchg
outsl
inc
icebp
push
lret
push
push
and
into
scas
dec
mov
adc
hlt
push
inc
lock
xor
out
adc
cmp
enter
mov
lahf
dec
pop
xchg
in
popa
cltd
jbe
ds
mov
js
loope
aaa
jg
out
loope
xchg
pushf
int3
mov
push
lock
pop
adc
dec
xchg
sub
leave
xor
lock
addb
rol
repz
inc
push
mov
mov
cmp
jae
rcpps
mov
inc
add
inc
mov
pop
add
js
xchg
mov
xchg
pop
mov
fmulp
inc
inc
jbe
mov
aaa
sub
shlb
push
adc
test
xchg
test
cmp
test
ret
push
mov
sub
out
mov
mov
in
adc
popf
xchg
pop
scas
dec
inc
xor
xor
dec
ret
and
mov
cmp
test
inc
ret
pop
stos
lahf
pop
fdivl
into
loope
inc
ss
mov
and
movsl
pushf
pop
push
mov
xor
inc
jle
mov
jg
repz
xor
repnz
push
movsl
dec
cmp
fistpll
test
or
mov
pusha
xlat
loop
xor
in
mov
fwait
insb
jns
cltd
sbb
or
jns
xchg
mov
sarb
lcall
outsl
push
push
sbb
sbb
and
xor
add
icebp
pop
and
pop
cli
push
fucomi
sbb
repnz
outsl
mov
addb
push
adc
sub
pop
stos
sub
push
pop
jg
pop
add
pop
mov
xchg
push
ja
pusha
outsl
xor
push
push
popf
out
insb
sbb
jb
xchg
fcmovnbe
addr16
adc
lea
sbb
call
xchg
in
cmp
movsb
dec
adc
mov
mov
mov
cld
sbb
push
sbb
push
sti
xor
cmpsb
mov
mov
push
add
dec
add
lahf
xchg
aaa
lods
xlat
call
stc
push
test
mov
or
mov
jmp
xchg
mov
adc
sarl
lcall
dec
divb
es
mov
lock
aam
dec
push
mov
pop
jb
inc
inc
in
add
or
cmp
sub
jmp
mov
sbb
nop
jge
sbb
sub
cmp
adc
and
xchg
push
cld
inc
jmp
xlat
push
sahf
mov
loopne
jne
and
cmp
fstpl
and
mov
push
mov
xchg
es
sbbl
mov
pop
xlat
sbbl
dec
popf
call
fisubl
les
lds
cmp
scas
jne
and
js
dec
push
loop
mov
push
test
hlt
xchg
pop
imul
dec
or
xchg
mov
ss
pop
ljmp
push
shll
jmp
sub
js
mov
mov
cmp
cltd
push
lock
jnp
push
push
stos
popa
jp
pushf
fldl
pop
mov
mul
push
inc
mov
add
insb
add
mov
pushl
imul
arpl
cmp
ret
inc
std
add
sub
push
in
jge
jle
cmp
xor
jno
ret
leave
push
aas
dec
fstp
mov
jns
xchg
jns
adc
push
in
shl
dec
in
or
je
dec
imul
outsl
xchg
test
add
sub
or
mov
out
ret
xor
ficoms
inc
xor
sub
sub
es
sbb
fcompl
pusha
enter
ja
mov
cmp
ret
pop
out
sub
jne
push
and
and
pop
jp
aaa
mov
dec
lret
iret
pop
lret
cmp
ja
jle
pusha
or
sti
pushf
inc
iret
sbbl
and
or
adcb
lret
dec
enter
jge
cmp
jg
ffreep
inc
mov
aam
repnz
lahf
mov
jl
sub
nop
pop
lds
int
sub
js
sbb
add
jle
clc
mov
fldenv
in
fs
ret
sbb
lahf
bnd
das
hlt
jp
pushf
sbbl
pop
push
rcr
outsl
insb
cmpsl
mov
lods
jmp
sahf
dec
cwtl
pushf
and
adc
pop
scas
das
hlt
imul
sbb
pusha
mov
mov
icebp
inc
test
jg
add
stos
outsl
pop
inc
adc
mov
lods
je
jge
iret
lods
adc
mov
cmp
sub
push
cmp
mov
push
push
rclb
cltd
je
sarb
add
jo
adcl
in
lret
xchg
mov
pop
jg
xchg
repnz
and
push
out
in
fwait
and
std
pop
cmp
jle
cmp
adc
mov
jb
add
fcmovbe
daa
dec
push
ss
in
push
and
xchg
mov
jae
repz
pop
mov
sub
or
add
test
cli
imul
or
inc
lds
dec
mov
mov
cli
ljmp
sbb
xor
mov
mov
clc
shll
aaa
std
or
in
or
loopne
jg
push
fs
insl
cmpsl
shll
pop
mov
inc
sub
cmp
mov
lret
sbb
mov
mov
into
lds
xor
loop
scas
push
pop
lret
cmp
jl
sub
and
push
add
cmpsb
lds
pop
xor
jge
sarl
testb
inc
mov
leave
sbb
je
scas
cmp
cli
mov
xchg
cmpb
pop
in
push
into
imulb
push
push
jnp
ds
out
mov
or
scas
call
mov
int3
mov
je
pop
in
cld
nop
icebp
lea
nop
sbb
and
add
mov
mov
lret
cmp
pop
sbb
sbb
icebp
and
aas
mov
scas
ja
adc
leave
fistpl
repnz
add
sbb
aam
in
push
sbb
sub
sarb
xchg
sbb
out
jb
mov
cli
and
sub
test
lea
lret
bound
mulb
mov
jne
test
adc
xchg
test
jp
pop
in
fsubrs
adc
ja
xchg
out
jmp
dec
adc
sbb
in
subl
fsts
mov
sarl
jg
lahf
push
popa
mov
pop
outsl
push
ss
lods
scas
sbb
xchg
cmp
pop
stc
into
fcoml
call
test
adc
fwait
ljmp
lds
add
stos
mov
push
adc
mov
mov
test
je
arpl
fcompl
notb
mov
int3
pusha
push
jbe
xchg
jle
lcall
mov
lds
dec
pop
add
and
sbb
ja
lcall
add
push
sti
jl
loope
movsb
inc
and
adc
jb
or
mov
xchg
popf
or
push
rcrb
push
dec
cmp
jae
popf
bound
out
loop
xor
mov
sti
sar
xchg
or
in
add
mov
movw
push
xor
in
dec
push
stos
cs
test
xor
lods
inc
insb
pop
or
stc
xor
dec
xor
fwait
lcall
sti
dec
inc
clc
and
jge
cli
int
mov
ds
add
push
or
scas
jmp
cmpsl
push
jle
mov
xor
in
pop
xor
mov
adc
repz
pop
add
inc
mov
enter
sahf
ror
fwait
push
xlat
jb
ret
add
and
lcall
jecxz
call
int3
pinsrw
std
int
push
adc
pushf
push
adc
jnp
fsubs
and
iret
test
jmp
shrl
adc
pop
push
inc
test
cwtl
int
push
mov
jae
mov
cmp
rcll
sub
xchg
iret
xchg
out
jl
push
fwait
jnp
xor
push
loop
pusha
aad
add
popl
in
mov
and
std
test
and
push
push
or
iret
jno
shl
add
push
cmp
pop
test
sbb
pop
imul
out
inc
outsb
jae
mov
mov
int
push
jns
adc
into
inc
stos
movsb
sti
dec
xlat
adc
scas
enter
popl
mov
imul
fsubl
mov
pop
imul
cltd
mov
mov
mov
jl
enter
push
xchg
cmp
in
in
push
test
sub
orb
sub
imul
jae
inc
int
cwtl
and
mov
pop
jl
daa
push
addr16
bound
decb
xchg
push
lods
add
repnz
std
std
mov
dec
mov
jecxz
jns
mov
dec
lcall
das
ss
sub
cmpsb
inc
enter
add
mov
addr16
adc
les
xcrypt-ecb
cmpsl
dec
pop
movl
push
lret
clc
mov
test
xchg
fmuls
xchg
or
test
dec
sub
dec
movsb
mulb
mov
jo
or
call
push
out
jg
sar
pop
xor
into
xor
cli
mov
fnstcw
sbb
xchg
mov
fadds
cltd
rcrl
pop
xchg
cmpsl
jecxz
mov
insl
enter
cmc
dec
or
je
push
int
mov
popf
cmpsl
je
push
inc
xchg
orb
mov
in
nop
imul
test
pop
or
cmp
subb
mov
or
repnz
out
insb
clc
aaa
in
sahf
mov
cmpsl
test
fistps
jle
loope
ja
fmull
dec
add
jmp
scas
or
sub
cmp
pop
loope
mov
insl
int3
push
sbb
push
inc
jl
aam
mov
test
adc
and
push
or
je
inc
sti
imul
rcrl
cmpsb
dec
addl
mov
push
test
into
jbe
sbb
cmpsl
outsb
cmp
pop
lea
mov
cmpsl
cmp
out
cs
ds
fdivrl
leave
out
fcoml
int
or
dec
clc
push
cld
jecxz
ja
pop
cmp
push
adc
push
pslld
lods
scas
in
stc
jne
or
js
dec
ret
in
fcompl
sub
test
gs
addr16
dec
roll
sbb
add
outsl
adc
xchg
mov
mov
lret
inc
cmc
or
sub
cli
orb
inc
stc
jne
cld
mov
mov
pop
fidivl
and
cli
or
xchg
push
dec
out
lods
pop
dec
aaa
inc
jmp
sarl
lret
pusha
jle
cmp
sbb
or
add
sub
pop
sub
sbb
or
popl
mov
mov
add
das
shlb
jb
arpl
test
pushf
and
outsl
aad
dec
xchg
shl
mov
loope
mov
xchg
fsubrl
test
xchg
int
cltd
fmulp
ficompl
fsubrl
addr16
adc
inc
scas
clc
aaa
call
ret
repnz
sbbl
xor
mov
lret
jecxz
cmp
iret
arpl
push
jmp
pop
pop
xchg
inc
push
sbb
leave
pop
xchg
js
fwait
pop
insb
jno
sti
cmp
push
repz
or
cmp
scas
sub
lock
mov
imul
xlat
arpl
cmp
or
push
into
sub
add
jg
adc
xchg
cs
dec
push
insl
jmp
stos
push
in
lods
push
dec
xor
jno
and
jl
pushl
aas
cmpsl
pusha
xchg
mov
xlat
aaa
hlt
push
dec
repnz
push
jns
jne
rorb
call
loop
pop
lcall
cmc
jmp
pop
andb
mov
and
adc
lcall
and
in
out
mov
mov
stc
imul
xor
adc
xchg
fstl
stc
je
icebp
xor
push
jmp
mov
xchg
in
pop
sub
fld
clc
cmp
push
imull
idivl
add
add
jnp
scas
sub
and
dec
andb
add
push
inc
dec
jp
hlt
mov
mov
popf
add
jp
inc
daa
mov
into
test
in
movb
adc
mov
xor
lret
xchg
or
add
cmc
cmpb
adc
xchg
inc
sti
stos
repz
js
sti
jb
subl
cmp
xchg
mov
jae
add
cmp
test
imul
pop
cwtl
outsl
lret
jg
pop
fdivs
insl
mov
aad
and
sti
and
push
adcl
nop
out
mov
int3
repnz
mov
dec
and
lret
and
jmp
inc
shrb
jb
and
and
repz
fists
mov
repz
imul
pop
xor
sarl
aas
add
lret
out
callw
ss
lcall
ds
aas
movsl
xchg
sahf
lods
stos
hlt
xchg
jl
adc
imul
fldl
jmp
in
xlat
xor
movsl
ret
mov
in
nop
lret
sub
lods
jns
cmp
add
rorl
add
shlb
adc
push
int
stc
insl
dec
pop
cmp
shlb
test
sbb
jl
ja
push
enter
and
sub
jg
int
cmp
pop
aas
mov
sti
lcall
div
cmp
inc
add
dec
jmp
push
leave
mov
pop
mov
cs
imul
imul
cmc
out
insl
je
cmpsb
add
fnstcw
xchg
cwtl
pop
add
mov
aas
lds
jno
and
mov
addl
push
out
jns
aad
jb
adc
out
lret
aas
push
cs
and
mov
clc
testb
add
mov
cmpsl
fs
test
mov
sbb
dec
push
jmp
test
xchg
add
lods
mov
std
xlat
cmp
call
aam
enter
cmpsb
gs
stos
fcmovnb
test
fisubl
out
mov
dec
inc
repnz
insl
addb
and
mov
cmp
nop
xorw
add
sbb
mov
push
push
cmp
out
cmp
pop
jae
insl
call
mov
cli
out
mov
sub
cli
sub
adc
xchg
mov
out
push
hlt
sub
adc
xchg
das
jmp
add
testb
fsubrl
mov
jb
adc
aam
jecxz
mov
pop
fisttps
mov
mov
sbb
cmp
stc
xor
mov
add
popa
sub
clc
lahf
sbb
mov
lods
adc
or
inc
cmpsl
push
clc
push
mov
inc
in
scas
lods
push
xor
mov
cltd
xchg
mov
lods
pop
cmpsb
outsb
dec
data16
jmp
ficoml
in
movsb
mov
repz
lds
adc
icebp
push
sahf
adc
mov
aad
add
bound
jmp
dec
sti
xor
xor
cmp
jl
sub
and
or
sti
pushf
popa
mov
push
xchg
shrl
mov
out
mov
jge
jecxz
idivb
or
inc
fprem1
jle
aaa
movsb
jge
dec
xor
cmp
mov
out
les
inc
mov
call
jle
adc
push
inc
lods
mov
andb
std
stos
out
cmp
iret
mov
add
jg
push
jb
push
lahf
outsl
or
xchg
xor
sbb
or
mov
adc
dec
inc
lods
xlat
ficomps
movsl
sbb
mov
outsl
idivl
sub
xchg
aam
or
aam
nop
lahf
xchg
sbb
in
pop
xor
dec
xor
mov
push
mov
mov
or
inc
mov
es
nop
sub
xor
dec
std
dec
aad
mov
dec
sbbl
dec
je
stos
andl
mov
jbe
aad
mov
and
ret
sub
pop
ss
cmpsb
jb
jo
inc
pop
mov
stc
loopne
cld
jge
mov
cmp
ja
push
mov
test
xchg
sbb
or
test
push
jle
and
loop
lret
inc
xor
lock
aad
sbb
aad
push
dec
les
loop
lods
arpl
sub
gs
stos
lods
dec
test
jno
xorl
enter
lcall
pop
jge
addr16
cmp
mov
mov
wrmsr
cwtl
jge
aam
mov
test
fstps
cltd
out
inc
aaa
lea
fs
ss
mov
and
repz
ret
and
int
sub
hlt
mov
cmc
pop
or
test
ret
inc
out
mov
jae
je
inc
in
movsb
fwait
mov
mov
in
inc
test
sub
pop
scas
cwtl
inc
mov
jge
jge
xchg
pop
loopne
test
mov
or
lcall
lods
jg
outsb
fistps
data16
adc
mov
dec
das
and
xchg
mov
and
pop
mov
and
mov
push
mov
xor
push
fsubrs
in
jbe
mov
dec
push
in
jbe
pop
rorl
std
sbb
dec
xchg
outsb
mov
xchg
jge
enter
into
cwtl
out
push
loop
int3
fisubrs
mov
and
nop
mov
cmp
add
cs
sbb
mov
int
xor
push
inc
sbb
cli
jno
pop
add
sbb
xchg
push
xlat
lcall
loopne
pop
push
jo
stos
adc
jecxz
insb
outsl
ss
pop
stos
jp
mov
mov
scas
int
mov
icebp
add
dec
push
es
xchg
and
ljmp
push
cmpsl
rorb
jmp
int
push
xor
sbb
in
rorb
mov
dec
popf
pop
push
movsb
mov
ljmp
fidivl
pop
mov
inc
xor
in
sahf
dec
mov
add
in
rolb
push
lcall
or
push
cmp
jle
jns
leave
add
in
sbb
xor
dec
sub
mov
mov
cmpsb
or
jno
cld
rclb
aam
cli
fistps
push
das
cmpsb
setno
stos
adc
add
jp
dec
cmpsl
faddp
imul
push
mov
cmp
dec
mov
sti
cwtl
ret
xorb
cmp
adc
inc
sub
es
push
movsb
dec
add
push
sbb
imul
pop
outsb
or
leavew
mov
jle
mov
sahf
fstps
lcall
sti
cli
mov
xor
pushf
mov
cs
jb
cmp
mov
add
lret
cmpsl
cmp
inc
inc
lea
push
lods
mov
jnp
inc
pop
cmp
subl
popa
data16
out
cmp
cmp
add
lret
add
pop
jne
xchg
dec
insl
xchg
cmp
and
or
popa
mov
hlt
subb
fs
mov
lock
jle
fimuls
mov
sub
mov
cwtl
xchg
loop
inc
sub
inc
ret
mov
sbb
lahf
fs
adc
xor
cmp
leave
sub
divb
test
xchg
test
fwait
or
nop
mov
shrl
std
pop
jl
aaa
jnp
fbld
push
lods
xchg
push
inc
push
add
nop
push
lret
pop
negl
pop
out
jle
mov
jmp
cmp
pop
clc
xchg
les
sub
inc
jmp
xor
js
incb
ja
aam
cmp
arpl
jns
andl
mov
jb,pt
cli
xchg
mov
rorl
das
cmp
ja
add
mov
pop
push
decl
in
leave
arpl
and
int3
push
or
shrl
mov
enter
cmp
xchg
mov
js
xlat
mov
mov
aad
mov
push
push
or
ret
inc
fistpl
and
push
cmpsl
pop
jno
das
in
pop
and
lret
jle
test
repz
dec
outsb
adc
std
adc
shlb
js
jns
push
sbb
das
in
loop
movsb
push
mov
pop
jnp
cwtl
sub
lods
adc
sub
push
mov
or
cmp
sub
sbb
daa
cltd
mov
mov
ss
lock
ljmp
lods
jecxz
sub
xor
and
lods
jle
lcall
testb
inc
mov
inc
movsb
ds
fsubrp
or
cld
jno
mov
fwait
movsl
fmuls
popa
je
and
iret
mov
dec
adc
xchg
xor
lods
push
repz
jno
xchg
adc
pop
push
hlt
orl
orl
call
cmpsl
jbe
add
insl
sbb
subb
inc
push
adc
adc
lods
movsl
mov
and
out
pop
or
inc
sahf
xchg
push
shll
stos
mov
je
pop
out
cmp
push
mov
popf
out
and
stc
lock
cltd
xchg
movsb
lods
cli
push
jl
push
andl
mov
lcall
pop
jle
mov
xor
adc
into
inc
cmp
xor
mov
dec
mov
pop
xchg
test
popf
pop
std
and
aad
hlt
push
jo
movsl
out
out
popf
xchg
rorl
out
push
ljmp
xchg
out
mov
fstpt
lds
dec
xor
mov
pop
dec
bound
into
rorl
xchg
pushf
sub
mov
cmp
scas
pop
test
out
dec
test
aaa
dec
xor
icebp
sbb
std
lock
rol
shll
pop
std
lret
jb
xchg
push
cmpsb
int
jl
add
mov
pop
adc
adc
xchg
mov
jmp
cltd
xchg
xor
jmp
data16
sarl
in
mov
push
cltd
adc
mov
jle
or
add
jno
xor
inc
cmp
inc
adc
mov
jne
dec
mov
xor
shrl
add
adc
fdiv
or
lret
roll
cmp
sub
out
cli
add
jbe
addr16
jns
loopne
cmp
cmp
arpl
cli
arpl
xor
bound
push
stos
mov
out
jo
cmp
cmpsl
and
and
and
mov
mov
stc
xchg
ret
cmp
mov
hlt
push
and
mov
fwait
stos
dec
cmp
push
sbb
push
push
stos
repnz
push
decb
jge
std
mov
popf
lret
hlt
pop
mov
jns
lret
jne
in
test
inc
sbb
nop
vpcmpgtb
mov
and
movsl
pop
sti
mov
lods
aaa
test
jp
sti
sub
dec
pop
push
aas
dec
inc
cltd
in
sbb
xchg
dec
jle
inc
dec
jl
xor
adc
insl
mov
xlat
or
sti
jne
add
repnz
inc
call
sub
xchg
sarb
fs
cltd
in
and
jecxz
inc
jmp
in
jae
push
pop
jae
movsb
pop
pop
js
scas
jmp
iret
sub
lea
jl
scas
popa
sbb
push
sbb
mov
mov
notl
addr16
imul
inc
xchg
das
pop
imul
dec
add
lret
dec
add
cmp
xchg
cmp
xor
pop
movsl
xchg
adc
pop
inc
lahf
int3
cmp
lods
out
mov
mov
sarl
test
xorps
cmp
mov
movsl
pop
mov
and
jmp
mov
jl
xor
mov
xchg
popf
icebp
push
push
add
pop
dec
cmp
push
cmpsb
mov
inc
aaa
stos
inc
sub
test
pusha
pop
leave
int
push
mov
mov
pop
xor
rcr
cmp
mov
out
sub
es
mov
pushf
dec
nop
add
out
aas
fbld
stos
xchg
loop
xor
testb
xor
nop
sbb
out
insl
or
jl
xchg
xor
xor
repz
cs
pop
cli
xchg
mov
mov
push
movsb
ds
adc
pop
pop
in
push
rcrb
es
js
xchg
mov
outsl
mov
in
ljmp
sbb
cltd
sub
mov
out
inc
sbb
test
and
cmp
shll
pop
xlat
fidivl
mov
xor
pop
push
nop
inc
sub
negl
popa
jl
clc
in
jmp
testl
leave
sti
push
bound
mov
dec
fsubl
incb
clc
push
loope
add
lds
push
mov
clc
sub
mov
rcll
pop
test
mov
movsl
cli
dec
jecxz
cmpsb
shll
fs
jns
add
jnp
popa
js
leave
dec
inc
sub
mov
inc
jo
jno
out
mov
cmc
xchg
pop
jo
or
mov
sub
cmp
dec
push
xchg
loope
add
rcrb
es
cmp
push
orl
and
add
mov
xor
push
inc
orb
and
pushf
lcall
and
maxps
add
ss
mov
enter
dec
ja
xor
pop
ret
mov
pusha
leave
int
ljmp
adc
pop
push
and
mov
pop
nop
rcll
lock
outsb
mov
adcl
mov
jbe
ss
popa
popa
mov
aam
sub
lods
jnp
xor
cmp
or
mov
dec
adc
loopne
sbb
icebp
jl
inc
xchg
sub
stos
mov
or
and
mov
aam
mov
pop
sbb
mov
hlt
inc
jl
jo
pop
not
nop
pop
ljmp
inc
push
fiadds
dec
pop
jg
pop
cmp
and
call
mov
pop
and
shlb
out
es
scas
sbb
out
jb
sbbl
add
das
jg
pop
xor
pop
ss
pop
sbb
push
adc
imulb
fwait
jbe
add
mov
jbe
and
pop
in
mov
jle
push
loopne
pushf
out
sbb
enter
out
gs
das
or
mov
sbb
stos
rorb
lods
fldt
rcll
je
jbe
add
repz
pushf
push
mov
xor
mov
fdiv
mov
cmp
xor
mov
scas
dec
in
jno
mov
dec
sub
mov
jge
add
stc
push
adcl
add
pop
dec
push
imul
sarl
add
enter
cmp
rorb
dec
pop
xchg
and
int
and
repz
adc
mov
adc
lods
outsb
push
and
jo
outsl
cwtl
adc
xchg
xor
pop
adc
adc
jnp
sti
stos
mov
out
repnz
or
sar
ljmp
loopne
xor
jmp
rorl
inc
mov
sub
push
inc
test
jbe
mov
and
sub
lds
dec
hlt
stc
out
ficomps
mov
lahf
imul
mov
imul
fisubrl
mov
lea
and
ret
in
imul
addr16
cmp
jp
outsb
dec
mov
mov
mov
js
pop
xchg
mov
shrb
xchg
xor
push
movsb
sahf
cltd
or
push
cmp
cmp
and
mov
fs
inc
push
outsb
adc
dec
iret
mov
jo
mov
aam
jae
cmp
ret
adc
jns
mov
frstor
adc
mov
stos
and
dec
pop
xor
test
jnp
jl
mov
pop
out
dec
into
inc
dec
or
xlat
rorl
movsb
or
lcall
lcall
movsl
push
in
leave
xchg
push
loop
and
js
mov
leave
add
and
jg
mov
push
stc
or
push
mov
in
test
inc
aaa
push
int
xchg
out
fcomps
test
cmp
mov
ljmp
je
push
hlt
fs
push
mov
cmc
sub
and
mov
test
mov
sub
outsb
xchg
push
sub
pop
shlb
int3
xchg
cli
sbbl
enter
repz
rcr
pop
or
or
xor
loopne
push
ret
jg
data16
lea
andl
or
pop
push
mov
in
jb
jecxz
ja
lods
roll
xchg
sbb
icebp
add
mov
aas
add
lods
aam
ret
dec
push
jle
shll
icebp
jle
scas
pushf
xor
sar
stos
lods
mov
push
aad
dec
xchg
leave
sahf
jp
jmp
loopne
xor
lahf
outsl
sbb
dec
push
fistl
lea
stc
sub
mov
das
mov
subb
xlat
mov
in
jmp
mov
aad
frstor
ds
sbb
lret
sub
les
mov
mov
cmp
jne
sti
sarl
jmp
aaa
mov
dec
inc
xchg
mov
cwtl
mov
fldpi
lods
mov
jg
add
inc
mov
arpl
jae
fucomp
sub
rcl
imul
cmp
or
hlt
mov
and
xchg
sub
xchg
or
hlt
cmpsb
cltd
cmpsb
push
adc
dec
jb
pop
jle
push
xlat
cltd
or
shll
imul
mov
add
popf
enter
mov
sbb
adc
push
cmp
addr16
jp
jno
das
scas
into
sbb
or
xchg
cmp
pop
iret
mov
imul
stos
add
or
pop
popa
pop
mov
in
call
add
js
rolb
jg
adc
push
popl
in
mov
inc
or
adc
rcrl
xor
cmp
std
jle
inc
jno
loopne
stos
in
lahf
mov
xchg
cmc
cmp
lds
jmp
repnz
jmp
bnd
in
mov
push
dec
mul
ljmp
mov
stc
ret
ja
push
sbb
and
ret
and
out
sbb
xor
mov
add
scas
cmp
and
sbb
add
cmp
lcall
xchg
loopne
test
jle
inc
cmpsb
lahf
lock
sub
rcrl
daa
jge
mov
dec
lea
leave
pop
pop
dec
xlat
ret
xor
push
mov
test
mov
daa
mov
cmp
and
movsl
iret
aad
push
mov
push
jge
outsb
mov
push
xchg
push
sbb
and
pop
push
push
in
cli
jne
inc
nop
cmp
sub
mov
or
add
gs
jmp
xchg
mov
cmp
clc
push
dec
in
push
cmp
jne
xor
cmc
loopne
inc
or
lea
aaa
adc
cmp
ds
dec
or
jle
add
aad
push
adc
pop
cmp
fidivl
out
imul
push
ficoml
lcall
into
cltd
enter
sbb
and
ret
dec
lret
and
mov
popa
xchg
loope
xchg
addr16
hlt
cld
xchg
out
cmp
cmpb
jno
add
or
hlt
cwtl
or
jecxz
das
or
subb
iret
xchg
cmp
aas
sbb
mov
sbb
or
cmp
jbe
sbb
out
mov
ret
pushf
xchg
fwait
ret
loop
rorl
xchg
cltd
std
inc
cmp
fnstcw
pop
add
mov
sbb
mov
mov
add
or
push
in
jmp
lea
test
adc
push
fsubrp
in
add
push
nop
mov
into
push
xchg
scas
cmp
mov
cmpsl
lahf
call
sti
ret
out
adc
jb
dec
add
mov
add
les
mov
xchg
cmp
movsb
or
or
inc
ret
dec
cmpsb
and
insb
inc
jno
sub
or
push
test
cmpsl
jae
pop
jne
cmc
cmp
cli
adc
cmp
and
inc
fcmovnu
bnd
adcl
mov
xchg
aas
ret
or
fnstenv
mov
jbe
dec
jecxz
pop
les
mov
xor
mov
jmp
push
sbb
pop
push
mov
lret
cwtl
pop
xchg
cmpsl
popa
xchg
js
stos
aad
ret
sub
jns
movsl
xchg
xchg
cmp
push
popf
xor
pushf
xchg
inc
xchg
push
iret
push
jnp
push
push
cwtl
sbb
push
mov
mov
mov
adc
ja
fildll
rcr
out
inc
fwait
pop
cmpsb
sub
stos
popl
popf
shrb
and
aad
insb
dec
adc
xor
cmc
mov
insb
loop
jbe
outsb
mov
stc
movsl
int
out
sub
addl
mov
mov
test
xchg
daa
and
inc
hlt
repnz
pop
dec
std
push
ficomps
mov
push
and
cwtl
sub
stos
mov
mov
insb
test
lahf
inc
cld
mov
scas
call
pop
push
fdivr
adc
jecxz
int
adc
outsl
mov
lods
jg
sub
pushf
nop
test
dec
call
pop
daa
repz
mov
insl
xor
jmp
xor
or
ja
daa
das
scas
mov
sub
push
push
jmp
es
xor
jns
adc
add
and
out
xor
pop
jl
les
xchg
pop
lds
and
lods
daa
add
cmpsb
dec
mov
loope
sbb
cmc
ds
test
mov
in
dec
stc
xchg
inc
adc
in
or
andb
es
mov
and
jmp
add
iret
mov
mov
fistps
insl
lcall
pop
dec
add
xchg
adc
sub
add
scas
xor
test
xchg
ret
sahf
pop
push
pushf
pop
cmp
cmp
xchg
cmp
mov
sub
fistpll
mov
pop
into
loope
iret
cli
repz
inc
or
or
repz
ret
in
xchg
pop
enter
adc
int3
xchg
xchg
rcr
cmp
xor
jp
dec
cmp
jne
xor
inc
sub
xchg
push
inc
jl
jmp
pushf
pop
fsubr
icebp
sti
xchg
add
jmp
aas
add
xchg
dec
in
test
imul
iret
mov
xchg
adc
xchg
out
rcll
jns
add
shll
addb
jge
xchg
dec
aaa
cmpsl
mov
jo
or
xchg
dec
sbb
je
push
push
jle
cmp
rcr
or
out
jo
in
sub
stc
into
cmpsl
add
jg
mov
out
xchg
test
nop
sub
mov
es
mov
repz
fnstcw
adc
sti
xor
pop
mov
addb
dec
test
lea
lret
loopne
les
sti
or
subb
stc
mov
jno
rolb
fsubs
inc
pop
mov
stos
outsb
xchg
repnz
clc
stc
jnp
mov
sbb
rcll
or
cmp
loope
mov
mov
xchg
lahf
imul
push
mov
int
out
sbb
sub
mov
out
es
gs
mov
in
inc
sub
pop
scas
std
adc
mov
das
push
dec
leave
shl
push
sub
pop
dec
add
sbb
push
xchg
out
popl
xor
dec
insl
mov
cltd
xlat
loope
dec
jo
lcall
mov
add
repz
xor
jnp
inc
scas
cmc
mov
stc
xlat
jp
or
mov
aad
or
inc
jbe
int
out
inc
sbb
bound
mov
pop
popa
int3
cli
and
xor
aaa
xchg
dec
dec
cmp
add
jns
loopne
push
into
push
mov
dec
pop
popf
xchg
sub
mov
fistpl
xchg
pop
pusha
mov
int
jmp
pushf
lret
fildl
scas
pop
mov
fisttpl
mov
sahf
cmp
lds
imul
lcall
add
mov
rcll
or
push
bswap
aas
push
out
inc
movsb
test
scas
dec
mov
add
mov
fisubrl
push
mov
arpl
iret
iret
xor
push
popf
arpl
lods
adc
inc
popa
xor
addb
out
dec
add
adcb
mov
lds
icebp
scas
sbb
jge
test
mov
stc
mov
adcl
jg
insl
and
jbe
addr16
rcl
out
stos
and
es
cmp
movsl
push
mov
je
outsb
jp
cmp
cmp
dec
cmp
adc
push
in
add
stc
iret
push
cmp
jp
les
cld
ljmp
pop
lods
pop
test
adc
xor
mov
sub
mov
in
imul
push
test
mov
mov
sbb
sbb
mov
addr16
sub
inc
mov
test
mov
push
test
push
sbb
sbb
xor
dec
xchg
cmp
and
out
jae
xchg
dec
xor
inc
pop
lods
inc
sub
loope
popf
xor
cmpsb
adc
hlt
and
inc
mov
addl
sahf
movsb
ja
sub
dec
inc
fsubs
xchg
cmp
and
clc
aaa
decl
sub
adc
fwait
cld
or
add
xlat
inc
push
jno
ret
rcr
mov
stos
cs
mov
and
ds
xor
adc
aaa
push
adc
pop
insl
dec
jl
out
mov
test
sub
shlb
ja
mov
mov
cmp
push
push
popa
dec
mov
dec
cmp
fistpl
sub
sbb
xchg
sub
sub
les
loope
mov
fwait
das
popf
outsb
push
lret
xlat
in
xchg
es
pop
mov
mov
gs
inc
sub
mov
xor
inc
scas
loopne
lock
or
and
jb
mov
popf
cmp
andl
cwtl
ss
pushf
inc
mov
fdivrl
inc
mov
sub
enter
adc
test
addr16
push
push
xchg
nop
mov
adc
inc
clc
out
dec
mov
daa
repnz
cmp
dec
pop
sub
mov
stos
add
int3
shlb
aaa
cmp
sub
int3
outsl
test
cli
int3
mov
xchg
or
and
adc
inc
fucomp
or
sahf
xchg
push
cmp
ds
mov
mov
mov
push
xorl
jne
fdiv
and
es
push
mov
sbb
jp
pop
ficompl
fistps
vdivps
popa
mov
inc
ffreep
pop
fwait
jmp
sub
push
inc
in
popa
sti
movsb
addr16
je
test
insb
stos
fsubrs
sbb
sahf
sub
test
mov
in
adc
scas
inc
xchg
sub
add
dec
xchg
adcl
jl
xor
lock
push
call
sub
fxam
inc
sti
fildll
lds
mov
test
jno
mov
sbb
movsl
fistpl
sbb
sarb
xor
mov
shll
scas
sbb
dec
cmp
mov
xor
cs
insb
andl
adc
dec
adc
cmp
lods
pop
jle
or
out
hlt
push
mov
xchg
push
das
fs
movlps
push
or
testl
mov
xchg
scas
loope
and
lahf
icebp
add
mov
mov
inc
test
inc
jle
jno
dec
movsb
pop
dec
add
adc
flds
dec
addb
rolb
push
inc
icebp
fcomp
les
pushf
xchg
jmp
and
dec
fstpl
xor
jp
jp
xor
dec
xchg
xor
sbbb
fs
inc
pop
sbb
and
cmp
cmp
inc
call
mov
mov
loop
cmc
xor
xchg
mov
mov
push
sbb
adc
or
mov
xlat
fistl
pop
daa
dec
pop
imul
loope
shr
mov
ja
dec
icebp
aam
jo
pop
dec
pop
jmp
fdivl
jmp
lods
mov
mov
mov
inc
aam
shr
xchg
imul
mov
sbb
shrb
pop
mov
sbb
inc
mov
rclb
cmp
pop
imul
mov
mov
test
mov
inc
mov
xchg
fsubrl
pop
cld
stos
sub
push
and
je
inc
andb
lret
adc
repnz
jb
lahf
not
mov
push
adc
cmpsb
pop
and
jmp
pusha
jb
inc
sbb
sub
aam
mov
int
add
ljmp
pop
sbbb
adc
jl
jno
idivl
mov
decl
lahf
dec
dec
fdivl
sarl
ret
jbe
cmp
loopne
faddp
inc
and
or
imul
cli
jb
fstpt
jg
adc
sub
aam
ljmp
ds
pop
imul
add
mov
ret
sar
nop
in
mov
jecxz
adc
loopne
into
ja
xchg
xchg
in
hlt
lock
jbe
bound
or
popa
imul
cmp
sbb
push
in
cmpsb
enter
pop
sbb
fdivrs
pop
ljmp
rorb
ja
test
fs
adc
bound
ds
and
rcrl
in
pop
scas
icebp
mov
rolb
ret
pop
scas
insl
xchg
mov
leave
cwtl
stos
fst
repz
addr16
pop
push
push
jne
les
jmp
shlb
dec
xor
sub
inc
dec
stos
ja
test
ja
xchg
dec
sbb
sbb
into
push
out
aad
jne
out
test
pop
jmp
pop
xchg
inc
rcr
and
dec
mov
ret
sbb
cmp
xchg
sbb
lea
das
das
xor
ss
loopne
lds
sbb
int
xor
repnz
mov
aad
jg
jb
sbb
pushf
loopne
arpl
inc
insl
orb
xchg
jbe
jae
sbb
loope
inc
scas
mov
push
shl
inc
dec
jns
sbb
add
jnp
int
jno
mov
jae
push
fidivrl
mov
mov
mov
test
add
std
scas
jo
mov
aad
fcmovbe
mov
adc
adc
lcall
lock
das
push
and
cwtl
dec
xor
cmp
out
mov
or
sarb
movsb
jne
out
rcrb
stos
cmp
cwtl
xor
cld
dec
xchg
xchg
js
mov
fdivr
subb
and
fdivl
jg
pusha
mov
mov
popa
mov
and
push
xchg
push
or
mov
into
pushf
push
push
push
lock
insb
out
cltd
repz
mov
mov
xor
decl
mov
push
lahf
fistps
repz
outsl
ljmp
clc
movl
or
push
dec
pop
and
sub
mov
cmp
jb
mov
scas
xor
gs
ret
in
cltd
xchg
cmp
adc
xchg
mov
cmp
add
ljmp
push
xchg
xchg
pop
popa
and
movsb
or
push
and
or
mov
inc
push
ret
or
dec
repz
jecxz
out
pop
mov
jae
loope
lea
or
js
jge
cmpsb
dec
inc
scas
mov
or
sub
inc
lahf
mov
fcomps
sub
iret
add
dec
sbb
or
loope
jg
xchg
pop
in
sti
movsl
push
inc
dec
sub
popa
fs
xchg
mov
or
repz
imul
out
xor
cwtl
int
adc
test
or
mov
test
jnp
into
popf
andb
dec
cs
adc
fistpll
mov
pop
aaa
adc
push
inc
lds
or
pop
push
ficomps
fnstcw
dec
mov
push
pop
cld
sub
dec
iret
ret
push
and
mov
cmc
mov
cmc
jp
mov
or
push
pop
cmp
leave
mov
mov
test
mov
inc
xchg
dec
mov
ds
or
insl
mov
dec
sub
xchg
mov
divl
std
in
xchg
insb
test
scas
push
or
inc
movsb
out
adc
pop
paddd
cmp
or
mov
lods
sbb
jne
or
pop
xchg
inc
xchg
sub
xor
shr
lcall
je
sub
pop
ret
add
or
mov
test
loope
or
mov
inc
cmp
pop
jbe
sbb
aaa
xchg
stos
into
ds
cmp
push
loope
xabort
and
cltd
jge
stos
pop
rol
lret
lcall
jp
and
bound
incl
and
pusha
xor
lea
dec
js
lahf
jp
dec
push
xchg
add
pop
mov
jmp
jecxz
repz
scas
adc
sbb
jg
fcmovnu
add
sahf
add
outsl
lods
ljmp
aam
rclb
mov
sarb
movsl
shr
ljmp
dec
lahf
mov
pusha
adc
imull
sbb
dec
pop
jmp
jb
push
and
mov
sub
subl
into
jb
push
sub
jle
imul
test
mov
or
pop
push
arpl
push
out
xchg
and
movsb
popa
loopne
add
xchg
inc
cltd
sti
cmp
test
pop
fimull
inc
jae
push
mov
cmp
push
add
pop
push
jb
gs
pop
mov
jge
fldl
mov
mov
sub
jae
jb
aaa
mov
pop
and
aas
mov
out
jb
inc
and
pop
clc
fstl
xor
ss
xor
sti
ficomps
lret
sbb
insl
sub
lret
inc
cmp
daa
les
sub
sbb
cli
je
imul
add
imul
xchg
pop
xchg
ds
inc
mov
push
jae
dec
aad
addr16
mov
lods
repnz
cmp
enter
cli
sub
jo
or
inc
cmp
pusha
pop
xor
icebp
pop
sub
in
repnz
imul
cld
dec
fdivr
jg
repz
xor
push
test
cmc
shl
in
push
cli
add
push
sar
icebp
jb
push
mov
fidivl
adc
outsb
xchg
cmp
mov
cmp
jp
in
xchg
loope
and
mov
sbb
sbb
lods
test
or
ss
adc
sbb
aad
pop
stc
mov
pop
out
inc
jb
rolb
jecxz
or
cmpsl
or
fsubp
lods
testl
or
sub
xlat
addr16
shlb
lahf
mov
sbb
sub
mov
adc
repz
iret
xchg
mov
add
cli
jg
sub
mov
or
fmull
lret
sahf
movb
in
shr
inc
xchg
scas
push
mov
fucompp
sbb
cmc
add
xor
sub
jne
aad
mov
pusha
fcmove
inc
jns
in
enter
out
xchg
pop
in
fdivrl
fsubp
pop
icebp
mov
cmp
xchg
mov
or
mov
or
mov
in
std
xor
ret
pop
rolb
sub
mov
pusha
pop
loop
sbb
outsl
popa
mov
mov
aas
cmc
cmp
insb
inc
mov
and
jb
push
xor
jbe
mov
icebp
stc
roll
xchg
and
fsts
pop
push
dec
das
or
pop
dec
prefetch
fdivs
cwtl
sub
lods
scas
dec
push
xor
add
divb
inc
out
push
sbbl
sete
push
and
clc
cmp
ffree
pop
fldl
xchg
lret
stc
mov
cmpsl
icebp
pop
addr16
mov
xor
aaa
stc
push
jmp
mov
rcrb
sbb
push
mov
aad
xchg
mov
jg
fcom
imul
cmpsl
icebp
das
fdiv
ret
xchg
sbbl
mov
adc
or
cmp
incb
das
push
jb
sbb
xor
pop
xor
pop
shll
scas
and
add
fs
movsb
addr16
test
and
leave
mov
push
push
mov
shll
mov
mov
adc
imul
pop
imul
dec
or
fidivs
dec
add
lahf
je
outsb
push
cmp
pop
sbb
pusha
xchg
popf
nop
dec
dec
mov
aaa
sarl
dec
cmp
mov
test
loopne
jge,pt
fbld
cli
jne
fldl
and
inc
mov
fildll
inc
ret
imul
mov
xchg
mov
mov
faddp
div
dec
jg
push
xorb
xchg
pop
mov
mov
and
jp
stos
mov
hlt
movsl
mov
mov
inc
loope
inc
mov
sub
or
xchg
stc
enter
push
loopne
and
or
movsl
out
inc
push
clc
jno
pop
pop
pop
outsb
shlb
lods
test
into
or
add
inc
cmp
push
test
rcll
loope
xlat
aas
mov
rolb
enter
cmp
inc
cld
cs
mov
ss
fiadds
test
lcall
shl
clc
dec
out
test
stos
push
in
out
insb
mov
inc
and
jecxz
f2xm1
notl
push
push
xchg
xchg
out
adc
adc
imul
push
or
and
das
inc
jns
jmp
lods
test
add
inc
inc
inc
test
rcll
in
in
out
leave
jmp
nop
lock
lods
sbb
outsl
mov
lcall
xchg
int
lods
pop
jns
icebp
dec
push
aad
lea
xchg
sarb
shrb
pushf
add
or
push
add
mov
and
xor
cli
sub
mov
xchg
std
add
or
pushf
out
sbb
mov
dec
js
rol
movsl
push
scas
popa
imul
fdivl
icebp
cmp
adc
mov
sahf
ret
cltd
fsqrt
aad
fwait
loopne
mov
sbb
add
inc
ret
adc
jo
pushf
mov
cwtl
loopne
nop
in
dec
daa
xchg
mov
lods
jecxz
adc
xor
mov
popf
and
mov
iret
fildl
subb
test
enter
cmp
in
lcall
mov
cld
clc
mov
mov
mov
adc
mov
orb
fisttpll
in
clc
mov
add
pop
jle
inc
ss
dec
push
out
rcrl
add
jns
cmp
cmp
fistpl
stos
and
mov
sbb
xchg
inc
sti
popf
mov
push
les
scas
int
cltd
out
test
xchg
pop
inc
imul
loopne
addr16
pop
sub
in
push
add
sub
sbb
dec
dec
sahf
jb
cwtl
pop
cmp
dec
mov
enter
or
jecxz
cmp
mov
lcall
clc
mov
push
pop
aad
pop
movsb
in
sub
jae
push
mov
dec
dec
inc
sub
mov
add
ret
mov
sbb
repnz
scas
or
stos
loop
sbbb
jae
loope
std
mov
pop
test
jecxz
stc
or
pop
jae
pop
inc
mov
cmc
loop
mov
pop
or
cmp
jb
mov
jae
loope
aad
int
iret
les
nop
pop
cmp
jno
loop
in
jae
pop
test
data16
mov
fndisi(8087
sbb
mov
fistpl
and
roll
scas
sub
mov
inc
xchg
dec
mov
mov
pop
adc
pop
xlat
loope
pop
decl
add
cltd
pop
mov
xchg
mov
leave
mov
notb
inc
push
sub
fdivl
inc
rcrl
popf
sar
or
adc
fildl
xor
mov
xchg
enter
das
push
jl
xchg
push
pop
mov
push
push
cwtl
pop
scas
xchg
data16
in
xlat
and
push
or
or
or
pop
push
mov
add
lcall
push
cmc
and
int
sub
pushf
mov
popf
ret
popf
xor
cmp
inc
iret
add
jae
loopne
jge
loope
sub
and
es
ss
dec
push
cmpb
xor
push
adc
xor
push
loopne
cmpsl
sub
hlt
out
cwtl
dec
ljmp
popf
jne,pt
add
mov
push
iret
fmul
cs
nop
inc
fldl
ljmp
sub
inc
in
cmp
clc
cmp
enter
mov
sbb
xor
adc
test
fisttps
outsb
jnp
xchg
jb
push
into
leave
mov
pop
push
out
push
mov
xchg
dec
xchg
sbb
lcall
xchg
inc
jbe
adc
dec
call
add
btr
mov
neg
sbb
push
into
pop
imul
mov
pop
xchg
ds
outsl
sub
notl
push
sahf
jbe
inc
lret
nopl
cmc
xor
mov
lds
push
pop
sub
adc
inc
xlat
das
push
cmp
in
inc
icebp
pop
sub
lret
xchg
dec
mov
mov
and
cltd
xchg
mov
loope
pop
cmc
je
push
jo
fcoml
loope
pop
shll
push
loope
sar
jl
orl
jg
push
mov
ret
mov
sub
inc
popf
inc
xchg
ret
test
and
xchg
push
movsl
sbb
repz
in
dec
ss
push
lret
xchg
enter
xlat
push
test
aas
ret
inc
pop
or
mov
sarb
mov
popf
cmp
add
leave
xchg
pusha
cmc
xor
or
pop
iret
jmp
inc
cli
pushf
inc
mov
mov
pop
fs
push
xor
push
pop
inc
test
inc
or
fsub
xchg
xchg
popa
xchg
popa
imul
jbe
xchg
cmpsb
cmp
mov
xor
jnp
mov
push
and
sub
cld
je
mov
jno
cmp
adc
lret
andl
addr16
ficoms
pop
rorl
and
aam
imul
mov
push
ja
push
pop
mov
mov
addr16
inc
or
fcmovnu
cmc
outsl
jp
push
mov
mov
mov
ljmp
lret
ret
mov
arpl
inc
jecxz
push
daa
xchg
xchg
daa
scas
repz
bound
sub
out
dec
pop
sub
xchg
lods
push
xor
cmp
inc
pop
xor
lret
jg
pop
clc
subb
mov
out
mov
loop
addr16
sub
jg
pop
fldcw
mov
sarl
sbb
pop
addb
rclb
adc
enter
adc
sahf
shrl
add
sbb
inc
and
mov
sub
add
loope
jbe
pop
or
pop
pop
aam
test
and
xor
lods
sub
pop
fs
push
inc
movsl
sub
push
hlt
out
orl
jo
inc
mov
rclb
jb
dec
jmp
sbb
dec
adc
adc
pop
mul
out
loopne
or
adc
icebp
in
mov
and
mov
icebp
xchg
mov
pop
leave
xchg
or
adc
or
fidivl
jp
push
rclb
and
cmpb
dec
xchg
out
fidivl
fistpl
mov
sbb
adc
ficoml
hlt
mov
icebp
out
sub
inc
sbb
jl
fs
jg
mov
fwait
xor
inc
popf
fmuls
pop
insb
xchg
aas
mov
inc
or
fmuls
enter
xor
cmpsl
insl
js
push
jbe
loope
mov
xchg
dec
xchg
push
popa
stos
xor
stos
frstor
sub
sarb
xlat
pop
cld
stc
fistpll
cmp
pop
mov
sub
inc
adc
imul
push
sbb
into
cmp
clc
sti
mov
mov
into
adc
xchg
shlb
push
and
stos
push
popf
mov
les
fs
adc
out
sbb
dec
dec
dec
jne
sbb
rol
jns
out
insb
mov
xchg
mov
jb
adc
lods
jmp
jo
outsl
dec
or
fistpl
lret
test
data16
lods
sub
in
push
sbb
ret
scas
push
loopne
mov
les
xor
pop
add
push
sbb
dec
out
addl
mov
push
or
mov
nop
or
outsb
cld
inc
test
sbb
mov
cmc
ret
sbb
sbb
or
pop
je
cld
mov
jb
and
or
out
test
mov
xor
jbe
fldenv
mov
scas
imul
ret
mov
mov
pop
adc
pop
mov
cwtl
xchg
in
test
addr16
fistpll
mov
nop
push
xchg
sbb
cs
adc
xchg
aam
add
inc
jne
scas
xor
cmp
mov
in
gs
dec
idiv
mov
in
pop
inc
push
sbb
cmp
repnz
push
dec
xchg
pop
mov
pop
movsl
xor
sbb
cmp
leave
xchg
and
hlt
sti
sub
insb
test
xchg
cmp
dec
push
add
scas
iret
scas
lret
sbb
nop
aad
xor
push
jg
sbb
cmp
push
pop
out
arpl
into
enter
rol
gs
stc
mov
jl
loop,pn
pop
fistpll
mov
bound
dec
dec
jne
pop
and
inc
mov
dec
loopne
sbb
pop
mov
fldt
in
mov
scas
add
sbb
notl
enter
cmp
mov
jmp
add
or
inc
mov
or
add
sbb
jo
addl
aas
inc
inc
jmp
ss
dec
xchg
mov
lret
xchg
sub
daa
mov
mov
push
outsl
fs
aad
cs
fwait
pop
and
lret
ss
aaa
pusha
xor
subb
fs
jns
test
sahf
inc
stos
add
inc
xchg
fidivrs
in
add
cmpsb
push
mov
loope
mov
mov
jae
adc
cwtl
fs
rorl
cmp
sbb
inc
xchg
testl
clc
mov
icebp
cmpsl
mov
pop
rcl
add
fwait
pusha
mov
in
into
insl
popf
xor
xlat
inc
add
jo
popf
test
dec
push
test
es
xchg
mov
adc
xchg
xor
std
fsubr
pop
js
xchg
outsb
jae
pusha
inc
xchg
icebp
and
out
sbb
dec
pop
adc
or
inc
fldl
dec
cmp
ror
andl
data16
cs
dec
lods
popf
sbb
and
push
mov
sahf
scas
enter
ret
mov
and
fldt
sbb
cltd
sbbb
sahf
inc
push
shlb
inc
negl
dec
in
jb
push
sub
and
jo
pop
jbe
cmc
aad
lahf
aaa
ret
cmp
lret
inc
sub
add
mov
push
testb
mov
xchg
icebp
popf
push
pop
cmpsb
or
ret
fidivrs
cwtl
std
inc
mov
xchg
xor
movsl
mov
dec
pop
mov
xor
outsb
sub
fiaddl
ret
addr16
popa
shll
cmp
xchg
ret
aaa
xor
sbb
vmovapd
div
xchg
cmc
add
mov
dec
pop
mov
jge
test
mov
imul
mov
aam
mov
inc
adc
dec
daa
rcrl
and
dec
lock
dec
int3
and
or
xchg
or
mov
out
in
sub
ret
cld
pop
mov
pop
std
jle
push
mov
jg
xor
and
push
pop
jns
dec
mov
inc
xor
lock
lock
imul
jb
daa
push
sbb
stos
sub
jecxz
je
jne
jno
add
or
and
lods
fadds
dec
mov
loope
andb
je
pusha
adc
cs
mov
lock
jp
xchg
enter
push
push
hlt
out
clc
ds
or
pop
sahf
je
cli
lret
hlt
jle
fwait
jnp
pop
dec
xchg
aas
cli
jae
push
push
ss
adc
call
mov
push
je
or
data16
dec
rol
int3
push
inc
popf
filds
push
adc
test
mov
xchg
dec
or
fistpll
daa
pop
imul
int3
fcmovne
adc
sbbb
sub
mov
mov
aaa
mov
sbb
and
rorl
dec
pop
mov
sub
test
cmpsl
and
dec
push
add
jb
pop
dec
in
pop
xchg
lods
cli
xor
adc
jne
int3
shlb
outsb
mov
out
repnz
dec
mov
xchg
shrl
or
es
imul
cmpsb
test
or
ljmp
aam
mov
icebp
je
jns
in
jecxz
mov
cmp
mov
rolb
pop
jl
xchg
fisttpl
mov
cmp
shr
and
sbb
mov
aaa
movsb
lret
push
rcl
fildll
inc
lds
jno
pop
shl
sarl
sub
in
push
aam
xor
nop
mov
adc
inc
scas
sbb
lret
cs
andl
mov
dec
push
add
inc
xor
bound
dec
cmp
aam
or
xor
mov
mov
imull
rorl
pop
hlt
fs
pop
xlat
push
int3
mov
popf
jmp
loop
stos
or
loop
xchg
gs
std
adc
sbb
push
cmp
push
add
xor
dec
mov
test
int3
ja
pop
pop
pop
mov
ret
jne
mov
addl
mov
mov
mov
imul
or
xor
inc
hlt
sahf
sti
sbbl
cmpsl
testb
cwtl
add
imul
push
pop
leave
push
mov
popf
loopne
sub
lret
and
cltd
and
push
pop
mov
frstpm(287
and
adc
push
icebp
dec
sub
xchg
xor
jmp
data16
int
rcl
jb
lock
and
xchg
jnp
hlt
jg
in
loope
sahf
add
pop
push
inc
sti
scas
push
cli
xor
inc
stos
das
leave
jp
adc
rcl
add
and
daa
in
adc
insb
aas
xchg
mov
js
scas
dec
test
sbb
mov
hlt
xor
outsb
lods
xchg
inc
bound
test
imul
notb
lea
dec
add
lret
std
mov
cmc
lea
xor
fs
inc
add
fnsave
fwait
inc
mov
mov
sbbb
pop
nop
push
jnp
es
xlat
cmc
scas
sarl
int3
inc
movsb
sub
jecxz
xor
into
mov
fwait
lret
jp
pusha
jp
loop
mov
push
mov
inc
in
xlat
inc
add
jne
sahf
cmpsb
or
xor
sbb
add
gs
cmp
xchg
xchg
mov
jb
cmp
jl
out
mulb
cmp
fnstenv
cmp
and
andl
lea
mov
in
in
inc
xchg
out
add
sbb
add
cmpsb
in
or
cmpsl
dec
pop
rolb
test
fcompl
pushf
or
std
jmp
pop
sarb
xchg
gs
mov
mov
mov
xchg
mov
sbb
testb
xchg
je
adc
xchg
lret
mov
dec
push
adc
sbb
lret
std
scas
fsubrs
add
mov
in
sbb
cmp
int3
mov
mov
push
aaa
incl
fwait
stc
xchg
mov
clc
mov
jmp
mov
imul
negb
or
jle
xor
sub
sahf
in
lea
mov
sbb
sub
push
out
mov
in
sbb
aad
sahf
lea
xchg
inc
lds
mov
out
shr
scas
das
nop
insb
dec
cmp
mov
push
cwtl
jne
scas
xor
ja
or
or
mov
sti
push
add
pop
pop
out
cwtl
popa
dec
stc
fs
push
mov
out
fildl
aas
test
jb
out
outsb
mov
push
pop
bound
call
pop
mov
jno
das
fisttps
adcb
cld
cmp
mov
dec
test
pop
jecxz
push
sti
mov
xchg
mov
out
jle
and
xchg
xchg
sub
aad
cld
and
cmp
int3
mov
aad
xchg
dec
mov
stos
adc
insl
pop
into
nop
test
popa
repz
cmpsl
ja
int
adc
pushf
rcr
add
mov
lahf
mov
push
inc
fistps
ret
add
cld
in
scas
cmp
test
mov
out
nop
add
inc
ja
sbb
push
les
cs
cltd
aaa
pop
jne
pop
repz
adc
mov
add
adc
jns
fimull
roll
sti
clc
or
ret
outsb
pop
mov
push
inc
call
xchg
pop
pushf
cmpsb
pop
adc
push
mov
or
xchg
sbb
movsb
xchg
push
in
mov
roll
inc
fwait
sahf
and
cmp
lds
sub
rol
push
xor
ret
inc
mov
leave
jle
mov
bound
insb
and
sbb
xchg
xor
jno
fucom
pop
daa
andb
sbb
aad
cmc
pop
cmp
push
add
mov
mov
xchg
jle,pt
jb
mov
dec
dec
dec
mov
inc
ret
ret
sbb
icebp
fs
cs
pop
rcrl
lea
mov
mov
shr
sbb
andl
ret
sbb
mov
adc
or
push
scas
mov
movsl
mov
out
dec
push
stos
adc
adc
jge
lock
cmpsl
lods
popf
sbb
pusha
insl
dec
lock
jae
inc
sbb
test
push
les
dec
pusha
xchg
xchg
inc
out
cmp
outsl
loopne
push
call
pop
mov
inc
jo
dec
mov
jb
rcr
jmp
mov
cs
cmp
out
repnz
inc
imul
pop
daa
mov
gs
adc
stos
xchg
imul
xor
dec
jo
mov
popf
push
inc
out
jne
cmp
loop
cld
callw
mov
adc
adc
sahf
sbb
outsb
jns
ja
stos
test
daa
insb
mov
negl
in
and
push
add
sbb
movsb
aaa
xor
push
mov
in
cltd
in
dec
pop
jo
push
mov
mov
sbb
ret
jbe
inc
xor
dec
inc
sbb
sub
arpl
mov
inc
fstps
pop
jmp
xor
ja
push
mov
movlps
mov
gs
add
mov
repnz
mov
lret
xor
loope
xor
scas
nop
repnz
pop
repz
jo
lcall
jns
fsubl
xor
ret
adc
shll
jne
add
mov
mov
xchg
pop
add
xchg
je
mov
xor
je
pop
aad
test
add
pushf
mov
xorb
in
xor
hlt
clc
gs
xor
out
out
outsb
push
icebp
outsl
sub
test
mov
ljmp
mov
cltd
pop
gs
cmp
cwtl
push
les
cmp
xchg
das
inc
dec
imul
inc
les
cmp
rclb
adc
aam
mov
mov
add
mov
sub
xor
pop
out
mov
int
je
test
ljmp
xchg
repz
sahf
pop
or
jg
mov
and
push
sub
push
or
jne
push
imul
ret
loopne
stos
cmc
and
outsb
rclb
sub
movsl
dec
out
mov
out
mov
xchg
lods
lock
and
and
sbb
dec
idivl
mov
push
push
mov
xor
mov
test
mov
push
sbb
out
pushf
lahf
repz
push
clc
outsb
rcr
mov
sub
mov
rorl
in
or
sbb
or
pop
in
mov
iret
or
push
es
gs
lahf
imul
adc
adc
mov
jecxz
add
mov
loopne
js
xor
mov
in
push
mov
sub
in
add
inc
mov
xchg
aaa
shlb
daa
sti
ja
inc
push
sub
xor
mov
add
cmpsl
icebp
mov
cs
inc
loope
sbb
ret
xchg
ret
xor
push
jecxz
jno
lods
sbb
and
arpl
inc
out
sub
lock
cli
stos
ljmp
and
xchg
mov
out
mov
adc
sbb
int3
aad
mov
xor
adc
push
pop
cs
call
aad
mov
push
sub
jge
hlt
fwait
jne
shlb
mov
pop
je
movsb
flds
and
loope
lret
movsl
rol
pop
sub
jl
adc
mov
cld
jmp
stc
push
or
shl
pop
add
sub
or
push
jmp
add
cmp
xchg
sbbb
fmuls
ss
pop
insl
into
ja
repz
dec
pop
cmpl
lods
mov
push
xchg
dec
xlat
pop
cmp
pop
dec
leave
jmp
bswap
cwtl
push
push
shr
std
lret
pushf
xor
cmp
or
jle
dec
fwait
icebp
out
xor
lods
sbb
negb
jp
aaa
dec
out
scas
push
xchg
mov
sub
nop
mov
fistl
mov
push
fstl
fsts
xchg
popf
sbb
fcoml
adc
or
pop
push
cmpsb
sub
aaa
xor
or
rolb
clc
sub
pop
mov
adc
fldt
push
jae
aaa
mov
fldenv
aas
fisttpl
gs
sub
addr16
mov
dec
popa
add
lock
fs
push
lcall
mov
adc
dec
mov
negl
int
add
jns
addl
push
cmp
rclb
fwait
pop
pop
xchg
popf
cmp
dec
dec
cmp
adc
sub
rorb
scas
addr16
jg
add
std
or
mov
pop
mov
push
cmpsl
out
sub
fs
iret
dec
scas
ffreep
jbe
add
ror
cmp
jae
xchg
cmpb
adcb
mov
pop
xor
outsb
cmpsb
push
inc
in
cmpsb
adc
lds
jp
daa
sbb
cmp
rcrb
call
dec
popa
and
pop
jae
subb
imul
mov
test
lret
and
aam
daa
loop
jns
sub
fistps
hlt
push
scas
jno
push
adc
cmp
loope
or
lret
pop
icebp
cmp
cltd
xchg
lret
pop
movsb
adc
shl
repz
mov
pop
or
xchg
lds
add
sub
and
jns
aad
adc
mov
push
subl
inc
cltd
into
aaa
mov
arpl
fs
pop
and
nop
fsubr
popf
cmp
cmpsl
mov
dec
cmp
lret
std
push
enter
daa
daa
test
inc
jo
sub
jb
jle
xor
xchg
leave
movsb
cmpb
xchg
cmp
int
jge
fbld
jns
fwait
xchg
stc
popf
push
fisttps
dec
xorl
push
inc
movsl
sbb
sbb
mov
xor
dec
icebp
test
push
cmpsl
ss
or
cmp
xchg
push
pop
cli
xor
inc
or
jge
fimuls
and
out
xchg
imul
cmpsb
lea
adc
and
cmp
shlb
dec
sbb
adc
add
inc
mov
cmp
mov
outsb
push
shrb
or
pop
push
inc
aas
push
or
clc
les
outsb
jl
repz
punpcklbw
lods
ret
rcll
push
in
add
add
xor
repnz
mov
adc
xchg
inc
fcoms
push
inc
orl
xchg
movups
mov
pushf
xchg
or
repnz
out
inc
cs
in
cld
inc
test
incl
mov
das
jg
lcall
pusha
out
jae
int3
mov
and
dec
sahf
test
sub
jg
cs
adc
rol
aad
mov
jbe
sarl
mov
gs
hlt
test
or
cmp
mov
sbbb
fstps
pop
push
mov
mov
lods
inc
adc
push
rorb
popf
push
xor
fs
cmp
loopne
xlat
jbe
fdiv
loop
test
pop
and
popa
shrb
dec
out
subb
hlt
and
xchg
sahf
or
jb
inc
cmp
repz
ljmp
ret
movsb
dec
aaa
sbb
loopnew
int3
push
mov
aaa
das
mov
dec
iret
sahf
cmp
popa
xor
add
add
dec
push
or
js
mov
das
icebp
push
xor
test
jg
jnp
les
cmpsb
mov
call
sbb
jns
mov
dec
jmp
insl
pop
rolb
mov
mov
inc
je
jns
imul
sub
mov
mov
pop
and
stos
xor
jp
add
push
jle
dec
sbb
insl
pop
push
lret
cwtl
cwtl
pop
push
mov
jae
mov
xor
mov
inc
inc
add
push
mov
fs
push
aaa
jl
enter
pop
push
shll
and
icebp
add
or
test
jbe
pop
pop
subl
das
inc
or
es
sbbl
call
movsb
ret
inc
ljmp
xchg
mov
mov
mov
inc
push
fnsave
or
mov
and
inc
mov
xor
adc
inc
je
adc
xchg
ror
xor
pop
lret
es
xor
adc
in
out
xlat
lds
aad
mov
aam
cmp
mov
and
movsl
add
into
xorps
ljmp
xchg
mov
sub
pushf
mov
xchg
mov
mov
push
jl
adc
lock
xor
mov
mov
cmp
dec
inc
fdivrl
adc
shlb
ljmp
rcll
xchg
fcmovu
sahf
jg
mov
imul
push
cmp
jmp
rcrl
and
cs
stos
mov
ficompl
lods
dec
or
mov
in
jne
xchg
adc
movsl
ja
sbb
adc
push
outsl
and
fisttpl
int3
sub
jle
ficomps
jle
push
or
pop
adc
fwait
jbe
jge
fwait
popa
xor
push
adc
movsl
jns
mov
lcall
mov
ss
and
mov
and
push
sub
pop
ret
das
jae
lret
cld
into
loope
ror
xorb
jecxz
pop
ret
fs
cmp
inc
cli
pop
and
mov
sahf
and
inc
call
and
jg
mov
stos
xor
lock
ds
lret
cs
sar
add
mov
mov
bound
pusha
jo
insb
je
mov
jp
cmpsb
cs
mov
jmp
ds
mov
fs
rcrb
sbb
or
mov
adc
test
mov
into
xchg
shll
push
and
cli
xor
push
mov
or
js
into
ss
push
fwait
iret
and
sub
dec
sbb
jecxz
data16
jno
jo
or
mov
push
cmp
popf
fildl
cmp
stos
push
movsb
lock
pusha
movsb
push
jle
jo
sub
pop
mov
mov
jg
or
mov
mov
ja
pop
xor
xchg
out
ss
jp
in
sbb
ss
scas
scas
movsb
push
cs
fisubrs
fptan
or
adc
sbb
sub
and
xlat
loop
xor
cmp
into
push
dec
xchg
and
pop
fdivs
insb
ds
push
lods
pushf
and
jb
inc
push
mov
das
scas
and
cmp
in
or
cmc
lods
mov
mov
inc
out
mov
lcall
loope
popf
fisttpl
ret
in
cltd
rcrb
loop
repnz
jns
mov
std
mov
push
push
pusha
xor
jno
xchg
sti
and
inc
repnz
inc
cmpsb
pop
aaa
fs
pop
or
andl
repz
cmpsl
imulb
insl
dec
xor
fistl
adc
jecxz
scas
or
mov
bound
data16
mov
dec
outsb
shll
imul
push
cli
shrl
xorl
mov
adc
frstor
xor
lds
jp
xor
or
out
dec
sbb
xor
pop
fsubl
dec
jmp
movsb
xlat
in
popf
cmp
inc
sti
das
in
neg
lcall
pushf
fbld
scas
fldenv
pop
push
bound
jl
add
cs
fdiv
cmc
pop
and
or
add
ret
dec
xchg
shlb
cmp
mov
pop
dec
sub
fwait
jnp
mov
cmp
mov
insb
xchg
jp
adc
lret
inc
or
push
cld
cli
dec
adc
adc
lock
repnz
mov
mov
sbb
adc
es
inc
push
sbb
jno
lahf
orl
es
dec
cwtl
xor
pop
jle
adc
inc
movsl
push
inc
aaa
in
je
sbb
pop
push
frstor
mov
in
ljmp
cmc
adc
movb
mov
lret
or
aaa
in
out
add
adc
lods
call
push
xchg
adc
out
aaa
lea
ffreep
ret
jg
add
jmp
mov
and
mov
lea
call
sbb
xlat
xchg
in
pop
lret
loope
sub
popf
dec
outsl
fwait
stc
pop
clc
xchg
fldenv
leave
sbb
dec
sti
sbb
js
nop
xchg
add
pop
mov
and
push
dec
jl
jb
frstor
cmp
shlb
pop
jae
inc
out
xchg
jne
mov
scas
mov
cli
cmp
lcall
or
hlt
and
cmpsb
mov
rclb
stc
mov
pop
dec
call
and
bnd
mov
data16
daa
add
leave
scas
fldt
scas
or
inc
jnp,pt
and
pop
ficoml
ljmp
rolb
mov
mov
mov
lea
xchg
je
xlat
fwait
lods
js
rcl
lahf
or
loope
rolb
sbb
int
neg
into
repnz
cmp
repz
xor
movsb
pop
rorb
pusha
pop
or
jbe
insb
xchg
push
lret
sar
xchg
adc
mov
or
and
stc
dec
cmp
loope
test
sbb
mov
mov
rcrb
and
sbbb
adc
jb
int3
stos
and
pop
push
push
adc
jge
aam
popf
cmp
dec
mov
js
mov
pop
filds
jae
sub
mov
add
dec
out
sub
scas
in
mov
mov
scas
fsts
call
mov
jne
or
jne
xor
popa
mov
mov
dec
les
pop
inc
or
fadds
popa
and
dec
inc
dec
fwait
add
addr16
cmp
outsl
cli
ret
mov
and
gs
xor
lods
stos
cwtl
rolb
or
dec
dec
sarl
pushl
mov
pop
jp
adc
ficoml
mov
mov
stos
sbb
xchg
fcomps
dec
sbb
mov
pop
cmp
int
pop
xchg
pusha
cmp
xchg
cmp
test
adc
std
xchg
adc
add
sub
test
int
cld
adcl
sbb
inc
fwait
in
hlt
cmp
imul
testb
xor
add
call
cli
push
imul
pop
add
in
out
movsb
or
xchg
sbb
popa
dec
sub
aas
xor
add
stc
inc
cmc
in
fsubs
jecxz
ljmp
jecxz
adc
cmp
sti
out
push
and
lret
dec
lods
xlat
clc
or
xor
xchg
jecxz
pop
pop
cmpsl
pop
and
xor
adc
insb
into
insl
mov
gs
mov
inc
fdivrl
mov
pop
mov
push
mov
into
cli
stos
xor
push
ret
std
jg
lods
lret
dec
xchg
std
test
enter
sar
movb
ljmp
lods
nop
dec
orb
clc
hlt
jbe
inc
fwait
popf
out
push
or
xor
stc
cmp
mov
xchg
test
arpl
xorl
cmp
repz
repz
jg
les
jp
xor
jl
stos
xor
add
aad
xor
and
dec
or
test
or
std
lret
pushf
jmp
stos
jbe
cmp
lods
imul
lcall
sarl
loop
mov
inc
sbb
in
or
xchg
aas
pop
es
push
push
shr
jno
scas
lds
cmpsl
mov
adc
inc
out
outsl
add
add
test
fmull
mov
add
cs
sub
cmc
pop
bound
sbb
add
insb
sbb
jp
and
pop
jp
std
lcall
push
inc
orb
ljmp
cmp
dec
imul
xlat
add
imul
fs
xchg
add
dec
cmp
aam
adc
aad
sbb
push
jl
loopne
lock
cwtl
cmpsl
pusha
and
lods
push
mov
popa
pop
and
aam
push
sub
push
divl
or
sarb
shlb
in
jecxz
cli
fistpll
in
stos
sub
sbb
ds
movsb
daa
dec
icebp
imul
add
lcall
push
xchg
test
mov
enter
inc
mov
test
push
mov
inc
mov
out
mov
rcr
fstps
test
and
nop
add
push
xchg
push
jp
sub
or
inc
jecxz
lds
inc
sti
cmpsl
push
push
ja
test
jne
repz
push
sti
sub
mov
mov
lea
ret
inc
in
pusha
js
popf
add
ljmp
add
test
and
add
and
pop
inc
clc
rcl
mov
fcmovne
mov
fs
inc
add
cmp
add
push
mov
cmp
sub
out
imul
push
fs
repz
add
lods
jns
push
push
sarb
dec
adc
imul
sbb
jne
lods
repnz
adc
xor
pushf
cld
out
repz
mov
dec
and
push
mov
call
shll
dec
pushf
das
xor
out
mov
out
icebp
or
mov
cli
lds
adc
push
xor
aas
pop
xor
loop
or
incb
mov
data16
fdivrl
cmc
xchg
push
daa
cmpsb
jne
js
mov
hlt
jecxz
inc
lea
icebp
ret
cwtl
push
js
pop
add
mov
xor
mov
jecxz
imul
dec
add
add
or
inc
fwait
jmp
mov
jle
hlt
pop
sti
sbb
and
inc
mov
add
pop
xor
loopne
sbb
mov
outsl
mov
xchg
mov
jbe
insb
js
ja
testl
repz
xchg
push
add
leave
mov
or
cltd
adc
mov
fildl
push
mov
dec
jno
fnstcw
dec
sbb
push
pop
sub
mov
push
lock
out
mov
xchg
ja
stc
cmp
sarb
inc
push
inc
dec
jmp
cmpsb
movsb
rorl
pop
push
call
cmpl
adc
ret
adc
loop
shlb
xor
lret
pop
mov
pop
cmp
dec
jle
outsl
dec
inc
imul
mov
ja
fildll
pop
push
fdivrs
push
mov
adc
in
push
push
or
roll
push
jl
mov
xchg
push
loopne
or
mov
rorl
inc
pop
add
jb
testb
ror
push
pop
pop
xlat
inc
mov
ror
daa
push
ljmp
cli
add
jns
cmpsl
add
push
push
jg
movsb
aas
jp
pushf
cs
cmp
jmp
push
add
xchg
ja
dec
mov
jae
popa
sarl
adc
out
sbb
test
pop
cmpl
shlb
mov
xchg
out
insb
scas
mov
push
push
rolb
mov
sbb
or
pop
sub
push
mov
push
int
push
inc
jl
and
ljmp
cmp
xchg
dec
cmp
and
mov
sub
push
arpl
pop
dec
movsl
jae
lock
and
test
mul
popf
add
lahf
loopne
add
or
pop
sub
pushf
pop
jne
imul
mov
and
mov
jo
jmp
lods
lahf
xchg
cli
inc
ja
inc
and
cmp
jo
setl
in
dec
outsl
test
push
jb
xchg
movb
xchg
cmc
pushf
or
out
mov
scas
jo
movsb
fnstsw
outsb
and
inc
sbb
pop
stos
aad
call
adc
lret
lahf
in
ficoml
and
add
mov
jno
mov
and
fistpll
inc
inc
lds
lret
ds
popa
into
push
ljmp
das
fadd
sbb
adc
xchg
xor
dec
stc
mov
push
leave
mov
jge
dec
aas
jg
push
mov
sbb
jl
movsl
push
test
sub
pusha
xor
sbb
daa
mov
xchg
test
inc
push
inc
int
iret
push
push
test
adc
sbb
jb
jmp
mov
mov
jp
or
jp
aas
ljmp
cmpsb
dec
jae
test
xchg
add
jmp
fcoml
sbb
leave
adc
aas
ja
inc
push
or
arpl
imul
es
push
push
std
mov
adc
aad
and
fsubrl
mov
shrl
stos
xlat
mov
dec
test
mov
hlt
cmpsb
jecxz
decl
mov
dec
xor
dec
mov
adc
out
mov
add
test
sbb
jno
cmp
cmp
psrlq
ret
lea
mov
push
test
dec
inc
mov
sbb
pop
mov
int
and
pop
or
pop
cs
cld
std
mov
adc
outsb
pop
push
lods
aas
jg
movsl
or
pop
or
xchg
negb
stos
mov
cmp
mov
fmull
test
mov
push
hlt
roll
loop
xor
dec
sbb
inc
arpl
cmpsb
icebp
jp
insb
cltd
pop
or
out
fdivr
popf
dec
xchg
xor
ss
adc
xchg
stos
mov
pop
mov
popa
leave
addl
loopne
xchg
movsb
cmpl
aad
sti
jno
fwait
or
push
sbb
decb
hlt
xor
xchg
js
push
dec
loope
xorb
dec
dec
test
lods
xchg
cmpl
stos
pop
sbb
jmp
pop
mov
dec
fldl
out
pop
bound
mov
or
pop
dec
or
addl
cmpsb
inc
dec
lret
out
mov
pop
faddl
lock
sub
add
cwtl
pop
pop
adc
stos
add
add
sarl
push
xor
popf
cmpb
inc
movsb
pop
xor
andl
jg
int3
push
stos
push
mov
addl
mov
xchg
repz
mov
cmpl
jo
lea
sbb
sub
in
xchg
fpatan
jg
test
in
or
xor
push
stos
pop
push
enter
loop
movsb
icebp
pop
xor
lret
dec
jns
and
mov
outsl
pop
mov
push
inc
sub
and
into
xor
cmp
cltd
hlt
lds
enter
in
test
shlb
lds
inc
arpl
divl
fstp
mov
pusha
out
lahf
out
popf
and
dec
dec
movb
dec
lock
mov
and
push
mov
mov
pushf
jbe
mov
adc
aaa
pop
lock
dec
mov
in
aad
jecxz
out
shlb
pop
jns
mov
mov
movsl
add
jbe
mov
lcall
cs
arpl
cmp
mov
test
dec
cmpsb
and
sbb
lcall
stc
inc
push
out
cmp
push
mov
rorl
call
rcll
jo
in
inc
daa
test
movsl
clc
dec
sub
xchg
sub
jb
jb
out
fmulp
orl
xchg
jne
repnz
or
negl
movsl
mov
out
jle
insb
popf
xlat
sarl
subb
sub
leave
ss
mov
mov
mulb
cld
mov
pushf
add
lcall
mov
add
fcom
jno
adc
dec
subl
nop
xchg
test
mov
or
fcoms
movsb
jg
pop
in
or
sbb
push
fcmove
mov
dec
push
pop
push
outsl
mov
inc
cmp
mov
and
enter
mov
int
push
mov
ret
aas
dec
jl
pushf
add
sahf
fcompl
xor
roll
push
push
popa
shrl
adc
inc
data16
adc
fs
pushl
cli
shlb
or
add
mov
sahf
cmp
jne
stos
lea
dec
fadds
mov
rorl
scas
jmp
xchg
pop
cmpsb
sahf
out
fs
mov
inc
or
adc
mov
ret
inc
cld
jmp
inc
adc
inc
adc
mov
sbb
les
sub
imull
push
ffreep
movsl
iret
lahf
jp
mov
dec
in
sbb
dec
jle
loopne
orb
movsl
inc
dec
rol
aaa
pop
outsl
into
xor
divl
shl
dec
pop
push
jo
pop
inc
dec
jg
and
imul
push
sbb
push
xchg
pop
out
ret
pop
aam
add
push
shlb
cmp
jno
dec
pushf
fisubrl
or
and
mov
fidivl
shlb
inc
mov
into
fidivl
jecxz
jb
scas
sub
push
cltd
hlt
or
push
dec
in
dec
jae
adc
jl
xchg
mov
jge
cmp
mov
in
int3
fadd
fisubrl
lods
mov
lcall
jbe
sbb
jae
jo,pt
mov
inc
loope
bound
sub
pushf
lods
push
fcmovu
lods
arpl
sbb
ror
in
push
or
bswap
pop
in
and
insl
enter
scas
inc
gs
clc
int3
push
cmpsl
adc
adc
inc
jns
ret
sub
or
inc
imul
jno
imul
out
mov
jae
cmpl
cld
outsl
mov
jno
stos
add
popf
adc
ds
inc
fs
vpunpcklwd
jg
add
mov
rorb
out
mov
mov
retw
xchg
sub
push
xor
repnz
sbb
or
lock
cmp
insb
mov
mov
pop
aad
and
jae
rorl
pop
insl
pop
mov
addl
adc
sti
into
add
in
std
mov
sbb
aas
addl
xor
and
or
push
mov
pop
inc
aad
mov
pop
fmuls
mov
xchg
xchg
mov
dec
gs
lds
ss
xor
test
cmpsl
adc
les
push
ds
sbb
out
lahf
adc
cmp
stos
or
pop
cmp
cwtl
add
aad
aad
jnp
adc
mov
cwtl
movb
ja
popf
pushf
insl
pop
clc
rcl
adc
sub
fwait
dec
dec
fistl
test
mov
mov
pop
rcrb
and
sbb
sbb
xor
jne
shl
out
inc
dec
or
jle
lahf
dec
adc
pmaddwd
lret
jo
pop
int
das
push
cmpsl
loope
xor
or
stc
cld
mov
ret
jae
movsb
cwtl
popa
fadd
test
xchg
xlat
leave
xchg
out
fwait
inc
mov
movl
roll
push
out
sbb
js
mov
push
cmp
int3
jecxz
pop
subl
aas
ja
inc
xorb
mov
cmpsl
mov
lock
aam
das
push
pusha
push
sti
inc
add
outsl
mov
push
jnp
adc
mov
dec
int3
rclb
ret
out
and
push
jmp
push
outsl
cli
ja
filds
pop
mov
xor
in
jbe
lock
cmp
jmp
mov
cld
mov
add
mov
mov
es
lret
mov
adc
roll
in
add
in
loopne
mov
mov
bound
lock
lods
sbb
inc
mov
aad
sub
sub
sarl
ss
loop
xchg
inc
adcb
imul
lds
pushf
popa
pop
mov
lcall
mov
mov
add
pop
jg
dec
push
or
fadds
pop
jge
test
add
and
arpl
lcall
ret
lods
scas
imul
outsl
sub
sub
mov
fcmovbe
sbb
pop
inc
lcall
sub
ret
jae
sbb
push
shr
rcrb
aam
in
mov
or
dec
xor
faddp
dec
inc
jb
in
push
ljmp
loope
fidivrl
ja
int
mov
mov
loopne
cmp
ret
mov
jb
lods
negb
push
cmp
lret
clc
dec
imul
int3
mov
insb
cmpsb
pop
enter
adc
test
subl
xor
ljmp
lahf
xchg
fdiv
loope
nop
adc
inc
addl
ss
xchg
add
in
mov
ja
mov
imul
xchg
cmp
das
xchg
movsb
mov
fistps
clc
lods
shll
nop
mov
mov
scas
xor
mov
xchg
inc
inc
mov
jnp
push
xor
or
and
mov
das
popf
xor
adc
je
addr16
out
jae
adc
push
shrl
sbb
sahf
push
mov
xchg
sub
pop
in
arpl
mov
or
rol
test
jmp
jmp
inc
das
jg
mov
add
cmpsb
imul
and
dec
jl
adc
sbb
ret
outsl
dec
mov
xor
or
into
fwait
stc
dec
jbe
jg
iret
mov
inc
xor
sti
movsb
adc
inc
es
rolb
jo
jge
mov
mov
andps
es
jno
jle
or
bound
jmp
fdivrs
test
xchg
adc
jge
fcmovb
das
sarl
aam
inc
pop
xor
std
pop
pop
in
gs
jbe
jb
inc
ja
sbb
add
sbb
out
lock
lcall
pop
pop
lret
push
cmc
and
fdivrl
inc
ss
xchg
sahf
repz
xlat
mov
data16
jbe
push
shrl
lcall
add
xor
pop
into
jl
arpl
push
add
mov
push
adc
pop
lret
inc
add
mov
jae
mov
scas
inc
pop
fdivrs
sahf
xchg
lock
xor
push
jae
sbb
dec
lahf
jne
cmp
insb
ds
mov
push
mov
iret
fwait
sbb
and
shl
jbe
fwait
les
daa
adc
push
adc
pop
cwtd
inc
jmp
inc
nop
mov
dec
ficomps
mov
addr16
fstcw
les
enter
out
pop
cmc
mov
dec
test
inc
dec
fadds
mov
lret
sub
sahf
scas
adc
shrl
xlat
dec
fstpl
pusha
and
sub
arpl
xor
loope
test
lds
in
sahf
outsl
adc
mov
ret
shl
push
dec
test
sbb
aam
mov
jmp
dec
jno
mov
mov
loop
xchg
fwait
sub
lret
jae
dec
les
in
jae
jl
push
jne
mov
and
pop
es
popf
cmp
cmovne
cmp
dec
arpl
push
scas
icebp
stos
mov
sar
js
cs
fsubl
push
jne
loop
xor
subl
cwtl
outsl
jns
lods
fldcw
cmpsb
fdivl
jl
cmpl
lea
popf
lahf
mov
mov
test
jmp
and
mov
cwtl
aas
or
and
pop
xorl
push
aad
sub
scas
adc
inc
jb
ret
xor
lret
aad
inc
gs
jle
movsl
adc
xchg
and
sbb
adc
dec
mov
fistpl
clc
fstpt
pop
lods
aaa
dec
les
rorb
xor
ret
pop
add
clc
lret
mov
fdivrp
jg
ljmp
cmp
push
pop
pop
incl
les
std
dec
outsb
nop
insb
hlt
inc
out
mov
ja
in
jg
scas
mov
rcrb
hlt
rcrl
xor
sti
jmp
mov
loopne
test
adc
int
shlb
pusha
cmp
xbegin
mov
or
das
mov
fnstsw
add
stos
push
mov
push
fnstcw
mov
mov
dec
pop
inc
lods
fcmove
cwtl
rcl
lds
jae
fstl
cmpsb
push
mov
bound
and
lahf
int3
sbb
bound
jo
jp
stos
in
aas
and
jb
push
sbb
aad
mov
sub
xor
push
dec
add
sub
adc
cmpsb
ss
add
das
int3
das
mov
xor
pop
or
fisubrs
movsb
sub
jb
in
dec
test
filds
lret
test
add
loopnew
mov
cmp
mov
testb
repz
lret
xchg
xchg
enter
inc
xchg
in
out
imul
fistpl
das
cli
xor
scas
popf
adc
adc
xchg
inc
sbb
lods
mov
xchg
fnstenv
sti
xchg
inc
hlt
add
mov
les
push
test
adc
leave
test
push
jmp
es
test
and
aaa
push
mov
push
loopne
or
pop
sbb
mov
pusha
add
out
ficoml
push
mov
stc
dec
sti
add
hlt
or
pop
and
ja
insb
add
mov
aam
sub
mov
mulb
push
call
loopne
mov
or
faddl
mov
sahf
sub
push
loop
ds
sub
mov
out
fdivrs
jbe
cmc
and
dec
iret
mov
cmpb
test
jne
adc
popf
adc
and
jge
push
mov
or
mov
movsl
jo
test
repz
push
xor
mov
addl
dec
into
imul
jecxz
cmc
cltd
adc
int3
xchg
xchg
xor
fcmovbe
jmp
push
scas
ljmp
clc
movl
rcll
jmp
js
add
in
imul
mov
sbb
xor
mov
push
mov
cmp
cld
roll
push
xor
push
cmp
or
cwtl
icebp
scas
repz
js
mov
and
mov
cmpsb
in
mov
in
call
mov
les
imul
comiss
xor
enter
jle
push
mov
rorb
sbb
push
mov
pop
inc
xor
or
mov
repz
loope
cli
push
jns
dec
shll
js
pop
bnd
test
jp
scas
mov
inc
push
dec
sub
xor
ds
imul
and
mov
sti
sub
adc
test
push
in
cld
in
inc
xor
es
rcr
push
xor
bound
ss
divl
lahf
pop
mov
or
pop
imul
mov
mov
loope
pop
popa
push
test
sahf
mov
ret
xor
out
xlat
movsl
xor
sbb
inc
and
xor
dec
xor
cld
add
add
sub
mov
jp
xchg
ja
push
data16
lret
xor
cmpsl
mov
push
dec
xor
out
jl
push
les
or
mov
test
cmpsb
cld
fbld
push
push
sti
xor
push
outsb
aaa
aas
inc
arpl
cmp
xor
rcll
or
sub
dec
leave
xchg
add
push
mov
sahf
pop
cli
xchg
xchg
cltd
mov
cmpsl
inc
ror
sbb
xor
test
add
sbb
jnp
adc
int
push
imulb
out
push
repz
xor
imul
repnz
and
in
outsl
and
xlat
not
push
loop
jmp
loope
lds
mov
xchg
rorb
shrl
dec
xor
jg
hlt
dec
gs
and
pop
in
in
mov
dec
xlat
xor
fidivrs
cmc
xchg
fsub
call
push
and
lods
test
leave
cltd
test
test
mov
loope
and
popa
and
shlb
jbe
popf
sbb
dec
daa
push
jns
roll
xor
push
imul
mov
and
nop
dec
iret
aaa
xor
pop
lds
jl
scas
xor
and
lds
es
lds
push
sub
stc
stos
and
push
ficoml
das
pop
mov
or
rcr
add
cli
orb
push
xorb
faddl
dec
dec
sub
sub
fsubrs
idivb
movsb
xchg
out
enter
pop
je
mov
sbb
mov
add
jns
xor
ds
jae
or
mov
push
js
and
test
jl
push
push
push
xor
jp
iret
cli
test
pop
lcall
mov
out
add
cmp
jae
jnp
xor
adc
jle
sub
pop
mov
adc
jo
dec
jb
jae
xor
cmp
jl
sub
dec
mov
sub
mov
ror
je
jmp
popf
push
fbstp
jecxz
jp
es
sub
addr16
mov
aaa
and
push
in
sbb
in
aad
add
xor
jmp
je
and
scas
push
test
mov
dec
mov
rcll
clc
pop
rcrl
mov
ficomps
jecxz
ror
jns
cwtl
mov
int
subb
mov
or
aam
in
mov
mov
add
enter
addl
ljmp
add
adc
jl
sti
and
int
dec
jge
pop
xor
lods
repnz
pop
lret
inc
inc
cmp
sbb
push
fxam
mov
fbld
ds
test
fmull
add
cli
add
out
jo
cmpsb
inc
inc
testl
cs
lea
dec
ds
not
cmpb
xlat
ja
jae
std
and
dec
jge
loop
adc
add
adc
cmpsb
iret
popa
test
cs
gs
popf
into
dec
or
xor
outsb
aaa
clc
stc
add
es
and
dec
insl
adc
dec
decb
push
mov
xchg
bnd
movsb
push
pushf
leave
mov
pop
into
in
inc
fsubs
xchg
adc
imul
mov
jecxz
jmp
mov
fdivs
frstor
and
jne
gs
ljmp
sbb
mov
cmp
xchg
or
bound
lret
xor
mov
out
enter
adc
mov
pop
lock
fdiv
les
dec
xchg
push
mov
xor
daa
scas
dec
ljmp
outsl
cmp
repnz
shlb
das
sarb
insl
sahf
pop
cld
mov
out
xchg
movsl
lahf
sub
dec
pop
inc
pushf
sbb
push
in
pop
add
sub
push
xchg
aad
in
pop
loopne
mulb
mov
mov
sbb
lret
sbb
out
xlat
arpl
fs
sbb
cmp
sbb
outsl
scas
out
add
call
js
cmp
sub
cmp
in
je
inc
test
aad
daa
subps
imul
in
fs
enter
jb
sbb
divl
idivl
cld
lcall
push
pop
stos
mov
push
in
int3
stos
pop
add
push
aas
loop
ds
jns
stos
outsb
mov
xor
test
orb
bound
andb
cwtl
jg
mov
inc
fstpl
inc
push
push
and
push
mov
add
push
pop
rcll
pop
rcll
sub
mov
shl
jb
mov
push
cmp
sub
push
fisubl
imulb
sbb
test
js
xor
in
in
or
loope
mov
mov
lahf
dec
xor
icebp
mov
adc
jmp
pop
xlat
mov
out
and
popa
cwtl
sbb
push
mov
fcmovbe
pop
push
pop
loop
or
mov
push
mov
loope
xor
pop
jl
inc
inc
xor
mov
jb
mov
jnp
sbb
inc
or
frstor
scas
add
out
sub
enter
popa
fisttpl
gs
mov
mov
add
aaa
loopne
popa
pop
dec
dec
hlt
imul
lds
bound
iret
lcall
incl
xchg
fisubs
push
sub
or
sub
mov
jl
add
mov
cmc
jnp
shlb
mov
push
push
sub
loop
lcall
roll
fs
andl
test
cmc
mov
cs
push
fwait
mov
adc
cwtl
fisubs
iret
sbb
cmc
arpl
jne
jg
pop
mov
lret
loop
mov
lcall
roll
xchg
push
in
inc
jb
mov
jl
sub
invlpg
lahf
pop
mov
scas
sub
dec
pop
loope
dec
sub
cmp
sub
push
lret
cli
cmc
mul
push
scas
fwait
xchg
les
shr
test
outsl
cwtl
xchg
or
outsb
clc
inc
xchg
roll
jmp
cmp
es
scas
add
and
cmpb
loope
pop
push
sbb
push
out
arpl
mov
sti
clc
andps
movsl
lods
in
or
dec
xor
inc
mov
jp
js
inc
jo
mov
scas
mov
mov
or
xchg
dec
push
mov
inc
jbe
pop
hlt
xchg
sbb
jle
lahf
xor
insl
mov
push
sub
dec
mov
aam
mov
ja
dec
cmp
insb
leave
push
mov
loopne
lret
and
push
sbb
add
fimuls
test
inc
popf
icebp
push
sub
bound
xchg
dec
das
cmp
in
jno
push
hlt
ss
mov
aam
dec
push
fisubl
popf
mov
int3
jp
nop
dec
out
pop
clc
sub
cltd
sub
aad
aam
sbb
out
int
jae
pop
sub
dec
or
or
jno
jle
imul
test
push
sub
pop
and
jge
repz
nop
int3
add
push
pop
std
push
sub
ljmp
cmp
inc
sti
movsb
pop
jecxz
jae
arpl
sti
inc
ret
movsb
push
sbb
inc
xor
cmc
insb
inc
ficoml
out
mov
sbb
test
nop
or
or
push
cmp
nop
mov
movsb
loope
inc
xor
and
mov
sub
leave
mov
les
adc
dec
out
fs
xor
add
dec
mov
cwtl
mov
pop
les
pop
sbb
shll
test
mov
idivl
and
sbb
push
dec
push
testb
lds
cltd
ret
mov
xchg
fsubr
xchg
cmp
lea
aas
mov
adc
ret
mov
push
and
subl
adc
sub
outsl
dec
cmp
push
mov
in
sub
jne
pop
xor
mov
push
test
into
aaa
push
and
pop
mov
mov
ss
outsb
mov
outsl
lea
clc
enter
lds
lahf
mov
xor
sub
aas
jb
mov
inc
xchg
pop
jl
mov
mov
iret
dec
pop
subl
sahf
jle
jns
scas
mov
fldenv
pop
out
jge
jae
cmp
cmp
cmc
push
les
sub
ret
cmpsl
dec
test
rcrb
jmp
cmp
inc
mov
dec
ja
sbb
pop
add
cltd
nopl
leave
dec
outsl
repnz
mov
rcrb
cwtl
call
aad
imul
mov
fimull
mov
test
movsl
jbe
daa
popf
lcall
push
hlt
dec
sub
inc
push
jbe
push
test
idivl
shlb
cmp
sub
adc
cmp
or
insl
fxch
and
cli
push
sti
lods
bnd
loope
jge
jnp
sub
pushf
rcll
mov
mov
cs
sbb
xor
xor
cmc
pop
aas
mov
call
jnp
enter
sbb
add
pushf
inc
movsl
movsl
movsb
cmp
inc
adc
cmp
cmp
sub
adc
or
xor
maskmovq
pop
outsl
fucomip
add
insb
ret
fdivl
sub
lock
or
imul
mov
fdivp
cld
lds
dec
xchg
ret
std
enter
jno
loopne
in
mov
xchg
inc
test
and
leave
out
sub
sbb
data16
call
aas
int
or
dec
leave
imul
clc
outsb
sti
dec
in
cmp
xor
loope
setne
in
mov
movsl
fwait
popa
in
repz
sub
and
push
xor
mov
imul
push
pop
inc
popf
jno
leave
adcl
xlat
pop
fs
pop
fdivrp
loopne
aad
push
pop
pusha
lcall
jno
inc
fcmovnbe
mov
int
mov
add
bound
xor
xor
xchg
adc
lods
pop
imul
out
int
dec
push
imul
ss
cli
clts
aaa
mov
pop
mov
mov
jno
adcl
and
test
mov
cwtl
or
push
cmpsl
dec
lds
repz
and
xchg
movsl
jg
out
adc
dec
nop
cmp
mov
fimuls
cmp
inc
popf
lea
subl
pusha
dec
ds
pop
sar
or
adc
push
pop
adc
add
mov
movsb
stos
sbb
in
jnp
imul
pop
push
jl
rolb
dec
dec
icebp
pop
pop
test
sub
pop
sti
jns
xor
jae
xor
scas
push
test
loop
icebp
shlb
pop
stc
mov
fnstcw
sub
fcoml
push
pusha
js
mov
adc
loopne
dec
rorb
dec
and
rorb
in
movsl
lea
mov
sbb
xor
mov
adc
dec
sbb
call
scas
lods
cmp
test
std
inc
lods
adc
cli
push
fsubrs
setl
xor
push
xchg
push
push
repz
bound
fmull
ja
xchg
mov
out
js
push
push
orl
out
jl
push
mov
mov
sub
lret
scas
mov
and
and
adc
addl
mov
dec
jmp
jg
mov
aad
mov
inc
rcr
rcl
xor
push
daa
cmp
xchg
outsb
and
jge
popf
out
cmp
hlt
mov
arpl
mov
shlb
call
or
pmulhw
fsubr
and
stos
mov
xchg
andb
aad
adc
movsb
cmp
aad
stc
rclb
roll
aad
imul
std
jl
dec
mov
imul
lret
dec
and
or
pop
loope
push
loope
fidivrl
jle
sahf
dec
aad
dec
lret
jle
std
or
mov
cmp
sub
out
jp
cmpsb
std
mov
push
or
sarl
ficoms
cmp
pushf
inc
int
mov
popa
mov
aas
divl
cmp
jnp
scas
ret
cs
push
mov
gs
push
cld
cwtl
xchg
mov
or
xchg
mov
mov
or
scas
inc
dec
jnp
fidivrs
jbe
mov
xchg
roll
insl
mov
aas
lods
mov
lret
sbb
into
mov
fdivrl
fnstenv
jmp
sub
jbe
cwtl
xchg
or
or
cmpsl
sbb
push
sub
je
xchg
adc
pop
lods
jl
pop
pop
mov
xchg
or
add
cmpsl
mov
fwait
outsl
xchg
stc
xor
lock
lret
pop
lods
pop
pop
or
dec
insl
pop
dec
jbe
jge
jae
adc
sub
das
xchg
insb
mov
push
bound
rorb
out
xor
aam
call
pop
cmp
pop
xchg
enter
sbb
nop
loop
add
add
ds
push
jmp
and
mov
sub
or
cmp
mov
aas
sub
mov
lods
aad
mov
int3
ds
push
adc
out
sbb
push
adc
sbb
mov
dec
mov
mov
mov
lcall
out
mov
sub
or
ret
xor
repz
ss
scas
ds
lock
fsubrl
test
rolb
dec
pop
test
imul
fs
inc
push
pop
cmp
fmuls
xchg
stos
mov
pop
shrb
push
cmp
enter
push
gs
jle
jecxz
push
jne
pop
movq
mov
int
stos
add
outsl
or
push
xchg
dec
lahf
je
notl
int3
insl
ljmp
xor
mov
push
test
addl
loope
cmp
movsl
mov
mov
loope
sub
xchg
push
sbb
sub
call
enter
cmp
fwait
inc
push
nop
dec
pop
and
leave
leave
stos
shrl
shr
pop
inc
mov
push
insb
mov
bswap
xchg
add
les
or
cmp
out
adc
push
or
cli
pop
mov
ds
sbb
dec
jno
vmovq
bound
push
and
mov
jbe
loop
pop
and
lods
jmp
xchg
test
bound
rclb
and
sahf
test
mov
dec
mov
imul
inc
cltd
xchg
push
sub
daa
outsl
mov
add
jg
dec
xchg
sbb
xchg
pusha
movsb
sub
push
mov
cmp
inc
cli
cli
ljmp
push
cmp
cmp
mov
inc
lock
aad
mov
mov
dec
loope
pop
push
push
adc
sbb
jo
jp
insb
lret
test
pusha
mov
out
gs
mov
lahf
cmc
push
stos
ja
xchg
and
jp
inc
jg
jno
cmpsb
and
int
push
add
scas
or
pop
sbb
outsb
mov
mulb
loopne
stos
ljmp
sub
inc
or
xor
cmp
jl
xchg
ret
sub
adc
mov
cltd
cmp
or
rcll
ja
das
outsb
js
add
arpl
fcom
in
jp
mov
mov
xchg
jo
lret
pop
shlb
mov
jae
push
outsb
addl
mov
mov
in
adc
xor
arpl
pop
push
es
aad
mov
and
pusha
sahf
enter
mov
clc
jno
icebp
cmpsl
jne
stc
scas
outsb
xchg
into
pushf
xchg
ljmp
ret
outsl
jp
rol
shlb
lahf
sbb
lock
or
into
cltd
mov
push
mov
sub
insb
in
iret
popf
call
mov
test
mov
mov
scas
loope
pop
lods
add
inc
nop
rorl
sub
sbbl
aad
mov
fs
sbb
xor
fs
test
adcb
xor
push
hlt
cmc
sub
int3
in
test
iret
push
pop
jg
js
add
test
mov
nop
push
add
add
mov
adc
insl
ja
jns
ljmp
sub
inc
sbb
cmpsb
jge
xchg
jmp
dec
in
mov
mov
or
sub
adc
test
mov
sahf
ret
arpl
cmp
xchg
repnz
add
xchg
das
ret
jp
add
xor
pop
js
sub
movsl
shll
test
mov
add
mov
and
out
enter
cwtl
mov
xchg
mov
cld
cmp
mov
adcl
insb
sub
fnstenv
inc
inc
andl
pusha
xlat
mov
imul
dec
lds
xchg
mov
jecxz
loop
sub
sub
enter
insb
test
dec
outsl
mov
xchg
stos
dec
or
adc
jp
push
adc
push
jb
lods
pop
pushf
bound
adc
repz
ret
dec
aad
aad
sar
jmp
fimull
dec
mov
mov
add
mov
popa
insl
mov
jmp
xor
add
ret
pop
mov
subl
pop
not
imulb
xchg
imul
pusha
movsl
sbb
dec
scas
dec
mov
cmp
inc
in
dec
adc
push
ja
iret
in
pop
mov
jge
out
ficomps
into
nop
into
pop
call
and
lret
call
lret
sbb
jbe
js
dec
add
outsb
jno
pop
std
adc
dec
pop
js
shrb
pop
or
icebp
imul
sbb
add
fisubrs
fdivl
subb
sti
test
outsl
nop
mov
cltd
pop
ret
insl
ficompl
xor
lock
cs
jge
push
imul
cli
in
iret
fdivr
ss
std
jmp
out
push
or
lea
mov
pop
mov
push
adc
and
popa
ljmp
repnz
adc
jge
or
fcmovnbe
fwait
sbb
sbb
or
sub
dec
sub
stos
add
sbb
aam
pop
push
or
lds
mov
mov
inc
ss
enter
inc
andl
inc
dec
jl
cmp
sti
push
lcall
jnp
and
test
pop
enter
mov
adc
inc
js
mov
xchg
loope
dec
push
or
adc
push
push
inc
scas
mov
sbb
fildl
loope
insb
inc
mov
out
sbb
sub
les
js
es
shlb
popa
push
test
ljmp
cmp
fdivs
repnz
cmp
and
fbstp
faddl
dec
push
mov
mov
cli
cmpsb
shll
in
jbe
std
nop
push
xchg
sub
mov
inc
fs
push
jle
ret
repz
testb
pop
pushf
test
mov
add
addr16
out
push
jge
mov
jge
imul
sbb
sbb
xchg
hlt
add
add
enter
pop
nop
push
xchg
aam
ja
xor
dec
scas
jo
jmp
fcoms
inc
jbe
xlat
or
xor
in
ljmp
cld
in
jmp
pushf
icebp
call
mov
aas
call
insl
insb
adc
ja
lcall
and
xchg
lea
cli
movsl
push
ja
and
icebp
sub
lods
add
and
adc
mov
pop
sub
xor
xor
arpl
ja
aaa
loope
jbe
sbbb
inc
xor
gs
adc
add
cld
and
dec
or
jmp
js
dec
jp
fsubs
push
and
movsb
and
fnstsw
jl
ja
shl
aaa
cmp
xchg
into
into
stos
push
lods
mov
pop
aaa
test
mov
jne
adc
sbb
add
pusha
mov
rcrb
add
je
pop
movsl
jbe
sbb
xchg
and
ja
aam
cwtl
dec
loopne
cmp
sbbl
cli
cmp
jno
sbb
adc
xor
mov
movsl
and
pusha
xchg
loope
fstpt
xchg
pop
mov
nop
shrl
imull
jae
dec
leave
loop
jo
addl
das
mov
push
movd
sbb
add
std
nop
sub
mov
cli
hlt
cmp
mov
pop
testb
fnstcw
xchg
mov
cmc
xlat
ss
sub
ljmp
cmp
mov
ficoml
push
lea
mov
stos
pop
loope
jno
or
icebp
jnp
rclb
xchg
pop
dec
sub
xchg
mov
mov
imul
pop
jno
sbb
push
jge
movl
xchg
dec
jecxz
out
rolb
shrb
dec
sbb
xchg
cmp
ljmp
xchg
fldt
sarl
and
add
sub
adc
dec
jnp
clc
out
fs
push
insl
dec
xor
insb
jo
add
lds
push
mov
add
pop
subl
inc
sbb
and
pop
lds
jne
or
pop
adc
cmpsb
jge
xorb
fcmovne
cmc
jg
cmpsb
out
icebp
jmp
push
clc
lock
dec
cmp
stos
in
mov
xadd
pop
sahf
inc
aam
sahf
jae
imull
add
xchg
mov
test
imulb
jno
lods
int3
dec
cmpsl
push
cmc
fistpl
sub
jbe
sub
lods
arpl
mov
dec
sub
cmp
gs
jge
cli
lret
push
adc
ljmp
nop
dec
and
fdivs
ljmp
push
pop
sysenter
sub
jo
cs
mov
add
push
pop
sbb
jmp
ficoms
jb
inc
cmp
xchg
leave
out
or
jl
das
or
adc
adc
outsb
push
mov
sbb
lods
push
dec
lds
jae
lret
decl
scas
jnp
jae
shlb
jns
jbe
das
pop
icebp
call
add
enter
pop
xchg
pop
sub
sbb
or
push
mov
mov
mov
cmpsb
xor
mov
scas
loope
out
push
pop
ss
mov
ffreep
sub
jl
inc
lret
lahf
stc
jmp
aas
fisubrl
fucomip
jle
loopne
fiaddl
loopne
mov
jecxz
inc
das
inc
rclb
test
das
xchg
scas
dec
jae
cmpb
inc
rcrl
movsl
jo
call
inc
jp
fcmovne
cld
jp
out
scas
push
mov
lods
xor
mov
cmc
and
push
mov
shrl
mov
push
in
lcall
out
jno
aaa
sub
jo
imul
inc
xor
push
out
push
lret
cmp
pop
lcall
cmp
xor
pop
pop
adc
sub
sbb
arpl
and
jecxz
xchg
push
sub
or
and
push
mov
fwait
push
iret
push
adc
into
push
out
cmpsb
lret
cmp
mov
inc
testl
repnz
push
or
sti
xor
push
xor
jbe
scas
pop
inc
sub
xor
cmpsb
fstps
test
fs
arpl
jge
inc
sub
push
int
push
call
mov
push
cmp
xchg
test
push
cmpsl
je
in
push
call
sub
adc
outsb
mov
hlt
icebp
pop
push
incl
imul
lret
cld
rolb
stc
mov
dec
into
and
aam
sub
fcoml
push
in
sbb
inc
cmpsl
orb
out
sub
rcl
xchg
dec
cmc
adc
addl
test
inc
cli
int3
js
mov
std
inc
cld
xor
or
in
rcrl
popa
push
mov
mov
mov
addr16
js
push
out
movsb
cltd
mov
jg
xor
ficoms
mov
popa
pop
pop
cmp
mov
push
lcall
test
and
push
shlb
sub
add
push
out
movl
or
filds
jbe
mov
push
push
or
push
outsb
test
gs
jns
sahf
testl
ljmp
jg
push
pusha
insb
aad
push
iret
loopne
popa
cmp
mov
pop
mov
add
movsl
cmc
jns
outsl
popl
dec
shrb
cmp
syscall
das
inc
nop
adc
repnz
jae
movsb
data16
push
rcrb
stc
data16
xchg
inc
pop
and
rcrl
pop
and
dec
test
xor
stos
fmuls
roll
cld
sti
int
movsb
add
push
and
add
cmp
jecxz
xchg
push
jne
adc
xorl
data16
push
pusha
fmull
outsl
negl
sub
sbb
mov
xchg
sub
xor
cli
rcll
cmp
ror
icebp
mov
addr16
xchg
mov
sbb
into
mov
or
dec
sbb
popf
movsb
mov
scas
cs
xor
and
and
push
out
push
movsb
cld
sub
loopne
jbe
mov
das
movsl
pop
add
mov
cmp
jo
pop
mov
jnp
rclb
cmp
add
testl
fistl
loop
pop
push
mov
loopne
sub
inc
jg
ror
fdivs
sahf
sarb
mov
jmp
push
add
clc
fs
lahf
cmc
dec
in
jecxz
negl
test
shll
movsl
add
pop
xchg
dec
in
out
cld
or
bound
adc
and
test
xchg
push
adc
mov
cmp
scas
add
popa
sti
xchg
ljmp
in
lcall
fbld
pusha
les
pop
mov
out
jbe
mov
cmp
loope
pop
jge
jae
ret
les
fmull
jl
pop
shll
int3
and
jmp
lcall
stos
cmp
in
and
ljmp
test
enter
mov
subl
cmp
sti
pop
test
pop
cmc
mov
cld
mov
fimuls
cmp
fiaddl
sarb
sbb
sub
adc
sub
xor
sbb
les
cmpsl
imul
add
outsb
lahf
adc
push
lret
jns
adc
add
jp
add
jo
xor
aaa
ss
pop
sub
ret
jl
and
xchg
cmpsb
cmp
and
aad
jmp
test
jl
or
mov
dec
lds
cmp
sub
add
insl
dec
dec
out
dec
xor
pop
mov
out
or
and
xchg
sub
sbb
adc
movl
scas
lret
push
jae
mov
dec
dec
call
cltd
cld
dec
cld
popa
fldcw
cmp
aam
adc
call
paddusb
sbb
push
adc
xor
aad
call
pop
dec
decb
rcl
popf
ja
push
test
add
jne
nop
push
jbe
les
adc
in
std
or
daa
pop
ljmp
sbb
push
shrb
leave
push
mov
and
fimuls
inc
loop
lea
pop
and
divb
xchg
dec
fnstsw
js
cmp
loop
cli
push
mov
sub
mov
cmp
dec
inc
adc
scas
test
pop
push
inc
aam
ja
ja
xor
adc
jle
mov
push
pusha
mov
mov
mov
xchg
jmp
icebp
cmp
push
test
cli
and
adc
movsl
dec
add
out
inc
imulb
out
fwait
cmp
in
lods
cs
jmp
xor
jge
inc
gs
pop
dec
sub
imul
pop
inc
outsb
stos
adc
inc
repz
outsl
jmp
testl
dec
sub
pop
out
mov
div
mov
ret
xchg
cwtl
jle
lahf
loopne
call
inc
lock
ret
mov
scas
sbb
pushf
inc
sbb
push
arpl
add
dec
loop
jne
ds
adc
cmp
leave
sub
xchg
cwtl
pop
sbb
in
enter
ljmp
mov
mov
jns
add
mov
push
pushf
rorb
jae
sbb
in
xchg
cwtl
addr16
jne
jl
cmp
test
sub
pop
sbb
lock
jmp
inc
jmp
mov
cmpsl
adc
cmp
jecxz
adc
insl
cmc
in
add
ss
jo
sbb
fcoml
stc
dec
xor
clc
jl
sarl
arpl
and
ret
xor
or
repz
call
adc
cli
les
or
cld
mulb
mov
cmp
test
pop
cmp
popw
cmpl
fistl
jl
repz
imul
inc
icebp
push
stos
nop
loopne
pop
or
fldcw
sbb
pop
or
mov
mov
xchg
cli
cmp
and
xchg
xchg
and
loope
dec
inc
repnz
xor
popl
cwtl
or
adc
iret
into
cmp
cmp
or
cmp
xchg
add
movsl
or
jecxz
out
push
mov
add
dec
hlt
movsb
fstps
loop
imul
data16
repz
push
jns,pn
arpl
out
add
fidivl
push
mov
and
jne
out
pop
sti
shlb
test
mov
test
fwait
push
sahf
jne
sub
addr16
movsb
fwait
rorb
call
daa
sbbl
outsb
lock
adc
add
and
and
das
adc
push
fs
push
or
das
lods
sbb
dec
popa
cld
cwtl
mov
mov
push
aam
add
in
push
and
loope
xchg
mov
xor
dec
cmpsb
add
or
mov
dec
xchg
sub
mov
leave
and
stos
dec
js
mov
cmpb
ficomps
inc
cmp
pop
stos
aad
icebp
inc
insl
pop
mov
lcall
push
cmp
and
test
adc
orb
ljmp
pop
ficomps
lods
xor
loop
sbb
movsl
add
xor
fists
addr16
leave
sbb
int
xlat
js
hlt
dec
sub
cmp
add
aam
xchg
cltd
jle
shlb
jne
inc
outsb
jae
push
sub
jmp
dec
inc
div
or
jp
lahf
pop
stos
xchg
or
mov
dec
xor
cmp
pusha
lret
jmp
imul
adc
mov
cli
inc
jp
movsl
add
rolb
push
and
mov
jmp
jno
gs
fisubs
add
scas
xchg
mov
push
imul
xchg
call
pop
xor
and
fwait
mull
fsubl
insb
aas
adc
test
mov
add
imul
dec
lretw
inc
je
mov
dec
sahf
orl
fptan
rol
jp
lea
mov
ljmp
push
aam
jl
repz
jecxz
js
or
and
test
mov
shrb
push
mov
pushf
add
jbe
and
adc
xor
jae
xchg
sub
jle
fsubrl
jle
pop
mov
ret
xor
loope
xchg
cwtl
sub
or
pop
add
inc
popf
xchg
and
jecxz
cmp
mov
jbe
loope
mov
pop
mov
lret
inc
in
mov
adc
cmp
scas
pop
cmc
add
loopne
add
mov
cwtl
jb
jnp
stos
repz
outsl
out
inc
dec
sub
cltd
fs
inc
sbb
dec
ret
ja
add
and
mov
sbb
mov
js
test
bound
lea
mov
fisttpll
iret
cltd
dec
jecxz
cmpsb
jecxz
mov
jne
xor
std
xor
inc
xor
pop
ds
inc
in
pop
scas
scas
cs
sbb
adc
lods
addr16
dec
daa
adcb
sub
push
xchg
js
in
repz
ds
add
daa
test
mov
mov
outsl
lea
imul
sbb
push
sbb
jbe
loope
mov
mov
test
mov
push
fsubrs
inc
fiaddl
nop
aas
notl
mov
and
sub
adc
inc
sti
lods
and
in
jno
scas
mov
xchg
inc
or
repz
lret
loope
sub
inc
loopne
inc
test
addl
push
sbb
mov
mov
les
jne
sub
jns
cmc
leave
mov
fsubrl
sbb
enter
add
adc
movsl
mov
inc
cmp
enter
adc
push
mov
loope
or
notl
insb
and
xor
mov
mov
push
sarl
adc
and
push
ret
stc
pop
andl
test
xchg
xor
aam
inc
xchg
imul
mov
cld
push
mov
clc
dec
int3
add
dec
dec
shll
sbbb
das
cmpsb
iret
jne
pop
je
cli
mov
push
movsl
pop
cmpl
jno
in
jne
in
pop
sub
inc
popa
in
rcrl
out
clc
mov
mov
jbe
push
arpl
mov
cmp
std
jo
pushf
push
sub
sbb
cmpsb
aas
push
adc
insl
sub
adc
lahf
add
outsl
shrb
xchg
imul
test
adc
out
adc
sub
add
out
lahf
pop
addr16
jmp
sbb
getsec
xchg
cwtl
arpl
xchg
ds
sub
gs
or
cltd
dec
sub
clc
lcall
out
xor
decl
cmp
push
mov
lcall
inc
sti
roll
pop
mov
lods
scas
pop
mov
mov
lods
mov
outsb
in
cmp
fisubrs
fs
int3
mov
cwtl
jo
fdivs
xchg
bound
fimull
add
push
add
fistpl
xor
add
and
mov
or
lcall
push
add
clc
xchg
lds
adc
sbb
icebp
sbb
outsb
movsb
jae
add
xchg
cmp
sub
mov
cmp
idivl
js
add
pop
sbb
movsb
xchg
dec
repnz
enter
lock
in
cltd
or
cltd
lret
fistpll
jo
repnz
mov
or
mov
push
insb
and
push
scas
and
push
fcoml
push
movsl
sbb
shl
mov
sti
push
repnz
faddp
scas
xchg
push
cmp
push
mov
daa
into
mov
push
pop
jmp
dec
es
stos
adc
dec
dec
sub
xor
ss
jb
insl
bound
iret
lret
in
and
adc
pop
jp
inc
jg
out
lahf
nop
punpckhbw
mov
xor
pop
lock
jl
leave
cmpl
cmp
pop
or
aas
or
jle
in
push
cmpl
test
inc
out
dec
mov
xorl
push
xor
ret
pop
xor
sbb
orl
imul
inc
bound
xor
pop
push
jae
js
pop
pushf
std
loope
aas
fistps
pushf
inc
movsl
adc
shrl
mov
pop
mov
mov
jne
out
aaa
ljmp
popa
inc
adc
ret
and
popf
cmp
clc
xchg
loopne
dec
push
mov
jno
xchg
push
loop
add
cmp
andb
pop
ret
stc
mov
test
cmp
adc
ljmp
fwait
xor
test
adc
loopne
mov
inc
push
and
fbstp
icebp
paddd
xchg
add
and
push
lds
xor
add
daa
shll
std
pop
jg
jno
fwait
add
ret
mov
adc
xor
lock
dec
negl
mov
enter
lods
rcrb
sub
scas
mov
gs
xlat
in
fdivp
jg
movsl
repz
fwait
stos
jb
int3
or
in
aad
jo
sub
jbe
cmp
movsl
inc
pop
mov
aaa
popa
shrb
sahf
outsb
call
pop
lcall
jmp
sub
inc
ljmp
pop
and
outsb
pop
pop
je
test
sahf
gs
add
xchg
test
adc
mov
ret
dec
mov
mov
sbb
jno
inc
xlat
insb
sbb
xor
les
and
xor
mov
int
or
cmp
xor
jecxz
mov
and
cmpsl
lcall
mov
mov
popa
or
jne
lret
xchg
cmpsb
jecxz
pop
invd
cld
inc
jbe
mov
or
jne
dec
aaa
xchg
aam
and
xor
hlt
push
movsb
adc
test
mov
push
aam
sbb
xor
test
dec
lret
out
in
in
arpl
fdivrl
push
inc
adc
bswap
xchg
or
mov
xor
lret
or
sub
add
jle
inc
jl
enter
outsb
push
repz
adc
xor
dec
stos
loope
pop
sub
jb
push
sub
dec
or
jo
lock
pop
adc
dec
jbe
xchg
mov
jg
imul
sbb
jnp
push
arpl
dec
aam
aas
sbb
cmp
and
ret
and
inc
scas
sbb
mov
sub
mov
dec
aam
sbb
outsl
pop
repz
jmp
add
mov
lock
sub
mov
insl
into
inc
out
push
test
mov
lcall
jne
aad
jne
cmp
scas
mov
xor
aam
xor
nop
divl
fiadds
ljmp
rcl
xor
addr16
js
xor
dec
ret
cmp
rcl
mov
xor
std
push
test
stos
sahf
ljmp
pop
iret
sub
pop
xor
ljmp
mov
pop
pop
rcll
sbb
mov
sbb
cltd
or
mov
outsb
es
cmp
fldl
cmp
imul
lods
in
adc
lods
loop
inc
lcall
mov
in
bound
notl
jo
enter
fldt
push
outsb
mov
xchg
push
shr
mov
xchg
aaa
fmul
daa
add
mov
xchg
push
testl
les
stos
sahf
inc
lods
jl
mov
cmpsb
jno
leave
inc
xchg
clc
lret
xor
dec
mov
in
mov
cmp
stos
and
or
sub
jl
lock
test
loop
imul
cmc
xchg
call
jmp
cltd
aam
imul
gs
ret
outsb
mov
fnstcw
sbb
imul
push
adc
sbb
or
ficoml
lods
inc
pop
push
and
cmp
ror
sbb
pop
add
test
data16
add
push
push
sbb
push
inc
adc
sti
sahf
or
es
push
rolb
scas
sbb
cli
mov
add
lret
push
mov
xchg
cmp
data16
hlt
jb
and
pop
or
fwait
pop
lds
mov
outsb
mov
pop
movsl
dec
leave
les
rorb
pop
jmp
inc
mov
pop
stos
jnp
jle
hlt
pop
repz
stos
in
test
stc
mov
daa
xchg
cmp
push
inc
aam
lret
add
xchg
and
sub
mov
mov
incb
pusha
jnp,pn
mov
dec
mov
in
rcrl
add
xor
test
ret
loop
lret
push
dec
jecxz
imul
mov
repnz
out
push
mov
loopne
into
test
arpl
sbb
mov
and
sub
xchg
pop
mov
inc
in
pop
sete
mov
fimull
push
into
sahf
jl
jl
dec
xchg
lahf
dec
cmp
jbe
adcl
mov
sar
int3
adc
shlb
stc
scas
movsl
dec
fs
xor
leave
fcmovnbe
imul
flds
popl
frstpm(287
adc
test
push
notb
lods
sbb
testb
adc
out
cld
inc
mov
jns
stc
jg
nop
push
into
dec
mov
mov
xchg
aaa
jmp
push
repz
pushf
bound
ja
lods
jbe
stos
je
loopne
inc
movsl
mov
xor
jecxz
mov
mov
inc
sub
bound
nop
jb
jmp
mov
inc
push
xchg
popf
movsb
adcl
adc
in
out
xchg
adc
in
xor
testb
test
push
push
loop
cmp
mov
pop
test
mov
jg
insw
in
daa
mov
mov
push
mov
xchg
mov
push
gs
cmp
sbb
fsubrl
mov
fisttpl
movsb
xor
jp
pop
mov
xchg
dec
popa
jno
jne
shlb
dec
ret
negb
loope
sub
mov
pop
arpl
push
bound
ret
mov
shll
jns
adc
pop
out
test
and
in
mov
jp
loop
or
sub
repz
adcb
or
movsl
fldcw
cltd
jecxz
cltd
xor
mov
mov
jo
mov
xor
mov
pushl
test
and
or
aas
sahf
push
sbb
xor
xchg
dec
inc
jecxz
push
sbb
addl
dec
mov
int3
add
xchg
inc
and
call
pop
jb
sbb
xchg
lret
addr16
ss
inc
adc
pop
mov
stos
mov
inc
mov
stc
pop
xchg
pop
outsl
sub
sub
push
jge
inc
arpl
xchg
jp
push
clc
int3
pop
and
or
arpl
and
jl
lods
inc
mov
dec
mov
subl
ret
arpl
or
jbe
add
mov
loop
data16
rclb
imul
testb
clc
and
pop
test
pop
cmp
jnp
push
cmp
cld
and
lds
fbld
rclb
roll
xchg
xchg
into
jl
inc
cli
mov
inc
xlat
jecxz
iret
mov
push
iret
dec
sbb
cmpsl
arpl
mov
imul
push
sub
fs
sub
xchg
push
enter
clc
or
sbb
lret
lea
xchg
jle
push
fs
cltd
mov
dec
add
push
sti
or
lahf
cmp
dec
or
sub
sub
test
popa
push
lret
lea
add
out
dec
cmp
imul
pusha
dec
mov
bnd
out
movsl
jl
fwait
mov
jmp
mov
pop
jb
sahf
push
aad
add
in
aaa
js
sub
bnd
mov
jle
push
dec
movsl
addr16
mov
loope
testb
aam
or
repz
and
insl
cmp
lahf
jl
inc
push
jecxz
or
sbb
inc
loopne
dec
stos
icebp
pop
ror
sbb
mov
sbb
mov
pop
cmp
lahf
push
and
popa
mov
mov
push
repz
aam
daa
cld
test
mov
xor
stos
mov
mov
jbe
xor
mov
xor
fstl
jno
jae
push
call
push
fdivl
push
nop
loop
dec
ficomps
das
or
aam
add
inc
add
test
sub
popf
xchg
cld
out
addr16
mov
xchg
xchg
cmp
jns
cmp
in
xor
pop
xor
sub
adc
add
xchg
insl
mov
cmp
cmp
inc
cld
mov
push
sti
lea
jae
xchg
fists
xor
outsl
jle
test
scas
jae
mov
or
sahf
push
cld
sbb
rclb
mov
fisubs
fdivrs
push
or
fstps
cs
cmpsb
xor
mov
iret
test
mov
fstps
xchg
push
xor
adc
ficoml
pop
in
stc
stos
lock
testb
mov
adc
xor
ficoms
ret
jle
pop
sbb
pop
or
mov
test
xor
ja
rcrb
push
mov
jmp
and
cmpsl
mov
es
sub
fwait
xchg
push
pop
jle
lea
jecxz
sub
add
add
neg
out
xchg
xor
jmp
pusha
cmp
out
ret
push
or
lock
in
ja
jp
mov
sub
adc
icebp
scas
xchg
cmp
out
out
fwait
mov
pop
push
test
shll
lock
push
divl
das
outsl
pop
icebp
imul
pop
ficoml
movsb
dec
xchg
outsl
sub
push
jmp
sbb
sub
cmpsl
pop
push
push
push
jno
cltd
xchg
push
or
in
mov
mov
iret
jne
push
out
dec
and
rclb
push
pop
sti
aaa
push
call
xor
cmpsb
or
movsb
sub
lahf
testl
int3
stos
mov
cmp
sbb
in
push
rcll
push
pop
mov
nop
xchg
call
fwait
or
add
adc
lret
cmp
out
add
dec
mov
arpl
test
pop
stos
fs
add
sub
sti
insl
arpl
shlb
dec
adc
loop
popf
xchg
adc
arpl
push
pop
or
dec
mov
in
push
dec
mov
jns
arpl
aam
add
jle
ljmp
daa
lods
pusha
sbb
inc
push
fsubs
xchg
adc
mov
movsb
ss
test
dec
and
xchg
ja
lock
pop
xchg
inc
loope
fsts
xchg
pop
gs
inc
inc
mov
mov
in
out
dec
loopne
cmp
xchg
add
add
rcrl
into
flds
idivb
outsl
adcl
push
popa
and
outsl
xor
ret
cmp
stc
call
lods
enter
xchg
dec
mov
test
nop
lea
imul
cmc
push
sub
jo
dec
pop
adc
inc
mov
and
arpl
fsubrl
mov
sar
adc
aas
jne
xor
add
ret
xlat
inc
mov
repnz
test
lods
cmp
pop
inc
popa
xor
out
mov
mov
stos
add
push
and
dec
jne
jae
or
pop
mov
xchg
cltd
mov
mov
adc
add
xor
je
insb
sbb
stc
push
mov
cmp
mov
sbb
call
and
sbb
sbb
push
not
divl
dec
and
add
jg
inc
shr
and
leave
sbb
pushf
test
xor
pop
or
xchg
fildl
jg
mov
js
or
mov
mov
test
pop
mov
push
fcmovbe
jl
rclb
stos
add
jne
dec
iret
sti
add
push
cmp
sbb
mov
mov
lret
popf
xor
aaa
repnz
pop
xor
or
arpl
xchg
push
xor
xchg
add
pop
push
pop
loop
mov
pop
push
popf
adc
jne
jecxz
inc
sub
insb
lcall
add
add
xchg
cld
lea
out
mov
xor
imul
das
adc
inc
mov
xlat
leave
jecxz
push
pop
sbb
mov
push
pop
inc
adc
popf
test
mov
clc
or
xchg
dec
cmp
sub
dec
mov
test
adcl
mov
scas
pop
sbb
shll
lahf
fwait
sbb
cmp
sub
cmp
es
dec
insb
out
sbb
insl
add
jne
rorb
xchg
and
sub
sub
jnp
enter
mov
loopne
push
mov
aam
pusha
imul
mov
dec
xchg
fcmovbe
sbb
and
pop
testb
jns
adc
call
xor
or
xlat
sbb
test
pushf
jl
xorb
jnp
push
pusha
xchg
lret
adc
sub
mov
cwtl
mov
int
lret
inc
fisubl
pop
mov
mov
mov
xchg
cmp
adc
mov
nop
mov
in
sub
lcall
fistps
add
xor
mov
cmp
daa
in
fldt
popf
cmpsl
loop
fsts
cmp
aad
shll
nop
jns
push
and
in
sbb
mov
cmp
sub
xor
dec
cltd
into
std
xor
aaa
xchg
xor
jns
dec
std
mov
push
outsl
mov
jne
push
cmp
and
xor
jns
push
jg
syscall
mov
scas
jmp
aad
inc
stos
ror
mov
popf
push
pusha
jp
data16
leave
bound
add
cmpsb
cwtl
sub
jbe
mov
ds
cmp
or
cwtl
add
jb
push
ja
jge
pop
pop
adc
jne
rcrb
jle
fs
lcall
lds
out
movsl
sbb
pcmpeqd
xlat
xchg
shr
outsb
fsubs
and
push
and
push
push
repnz
jle
mov
and
dec
loope
fwait
pop
pmaddwd
mov
xor
jg
leave
jle
daa
mov
xor
iret
add
scas
repnz
out
and
pop
mov
sub
cs
jo
or
jnp
xor
nop
or
pop
test
xchg
add
mov
clc
je
arpl
pop
push
add
lock
popf
imul
repnz
ljmp
lods
mov
or
mov
andb
scas
dec
mov
adc
adc
dec
aam
nop
mov
lods
cmp
pop
add
in
dec
cld
xchg
inc
xchg
mov
cli
mov
clc
outsl
push
adc
cld
repnz
iret
jbe
aad
ja
pop
sbb
idiv
pop
jbe
outsl
mov
xor
sub
dec
outsb
xchg
pop
add
outsl
push
sbb
ljmp
aaa
xchg
scas
aam
sub
ret
js
cltd
or
mov
sbb
outsl
jge
push
dec
imul
in
jne
mov
out
sub
jecxz
inc
int
adc
popf
aaa
insl
xlat
in
pop
cmp
loopne
mov
inc
xor
xor
jns
dec
scas
xor
dec
and
outsb
lret
sbb
mov
dec
in
lret
fs
fdivrp
pop
or
out
and
fisubrl
add
loope
jns
inc
pop
icebp
and
push
push
insb
inc
cmp
fisubrl
or
or
mov
cs
out
push
push
lcall
push
aaa
out
jge,pt
mov
inc
adc
pusha
mov
sbb
fnstenv
mov
clc
int3
ret
lret
and
sub
sub
js
cmpsl
loopne
hlt
cmp
and
ret
dec
es
pushl
jl
repnz
stc
push
mov
or
orb
rcl
lahf
rcll
jb
dec
imul
mulb
add
movb
and
pop
mov
or
xor
mov
push
cmp
push
lret
cwtl
dec
imul
jle
inc
pop
dec
movb
stc
test
pop
add
data16
adc
cwtl
stos
scas
cli
fwait
aas
sub
or
imul
les
pop
add
xor
cli
sub
enter
mov
or
and
and
jns
test
pop
xchg
stos
repnz
or
shll
test
sahf
ss
pop
out
sbb
jp
mov
sub
jno
mov
jns
xor
call
jecxz
stc
insl
push
ja
retw
ds
fdivrs
repz
fnsave
jecxz
xchg
mov
popa
es
repnz
jl
cld
push
fwait
cli
punpckldq
cltd
fwait
clc
insl
mov
mov
movzwl
lahf
cwtl
shl
dec
xchg
fisubrl
sbb
mov
mov
inc
mov
mov
cli
out
mov
or
push
cmpsb
fcmovnu
xor
fstpt
push
rcl
gs
je
or
mov
aam
sbb
inc
pushf
pushf
imul
aaa
xchg
lahf
gs
popf
add
imul
inc
push
arpl
shr
mov
sub
push
loop
xor
ja
push
pop
lock
lods
xchg
push
lods
pop
mov
and
stc
pop
or
shlb
pop
addb
lods
mov
sbb
jge
xchg
mov
js
cmp
ss
aaa
inc
pop
ret
arpl
push
stc
lret
inc
lods
cmp
and
jno
sbb
jae
adcl
pop
xchg
jno
mov
push
mov
add
aas
push
lds
mov
fwait
daa
sub
mov
sbb
mov
inc
xor
fnstcw
inc
or
mov
jnp
xor
paddw
mov
inc
mov
gs
mov
or
add
xor
pop
jbe
cwtl
out
test
mov
push
mov
daa
popa
add
push
sub
loopne
push
call
sahf
mov
mov
sub
sub
adc
out
arpl
int
xchg
xor
icebp
addr16
ficoms
arpl
pushf
div
jl
movsb
stos
cmp
add
enter
mov
into
jbe
inc
pop
mov
lret
mov
shll
fstpl
aaa
shlb
or
push
pop
and
xor
add
inc
inc
push
shll
mov
jecxz
call
lock
popa
fisubrl
shrl
loopne
mov
xchg
cmpsb
cmp
sub
and
pusha
pop
pushf
imul
out
in
sbb
pop
jecxz
pushf
imul
stos
aaa
push
mov
mov
lods
lret
mov
cmc
aad
xlat
add
inc
push
xor
data16
jmp
pop
je
mov
mov
push
pop
sub
push
das
dec
or
mov
mov
mov
jle
cltd
stc
push
lcall
mov
cli
iret
xchg
arpl
add
stc
nop
push
xor
pop
aas
pop
movsl
mov
jge
jge
add
cmc
scas
and
mov
add
shrb
or
les
mov
xor
mov
xor
test
mov
bound
les
xlat
xchg
mov
call
test
inc
mov
mov
mov
fldl
and
xchg
push
push
xchg
add
push
scas
mov
sbb
dec
mov
adc
xchg
fmull
movsb
outsl
mov
add
or
push
and
sbb
cltd
lds
mov
dec
idivl
inc
adc
push
xchg
notl
lret
fildll
out
cs
lahf
sti
push
das
cmp
sub
popa
mov
lret
jp
cmp
jns
mov
jge
lock
dec
leave
pop
sub
dec
push
in
into
rclb
mov
rorb
cmp
or
mov
and
mov
jle
aas
and
fstp
cmp
cmp
inc
in
xor
and
and
mov
addl
mov
enter
ret
pop
push
xchg
jo
and
sub
test
je
lret
xor
aas
sub
or
loop
push
pop
mov
insl
mov
fs
jecxz
dec
xchg
iret
and
pop
jne
pop
loope
pop
jg
pop
jne
push
xchg
mov
and
jo
in
loope
stos
stos
imul
dec
jno
sub
je
sti
sbb
addl
daa
faddl
popa
ret
es
inc
leave
lcall
iret
in
sub
sub
negb
ss
cltd
cmp
jl
mov
stc
push
flds
jb
push
dec
mov
sbb
aam
add
mov
jno
inc
int
or
mov
add
aam
fnstsw
add
roll
jns
cmpsl
push
popa
cwtl
cld
fwait
mov
jmp
mov
clc
fdivs
ljmp
xchg
or
loop
hlt
lods
cmp
daa
or
pop
outsb
aas
inc
mov
mov
mov
jno
aaa
fstps
pop
std
push
dec
cmpsl
stos
mov
sub
inc
add
cmp
sbb
call
in
test
sahf
pop
imul
mov
lret
or
addr16
xor
dec
lds
mov
arpl
out
mov
imul
dec
jp
out
fldenv
adc
or
loopne
pusha
arpl
arpl
cmp
sbb
test
sbb
fs
mov
and
outsl
sub
xchg
ret
rorb
fistl
test
inc
xlat
movsb
adc
enter
jmp
scas
adc
pop
jle
jno
pop
fldl
lods
je
pop
sbb
fisttpl
dec
pop
adc
das
sahf
mov
dec
ret
fwait
inc
jb
push
lock
xor
adc
outsl
dec
xchg
popl
dec
int3
mov
jp
repz
aaa
dec
xchg
repnz
or
inc
test
push
or
jno
xor
ficomps
orl
and
int
push
rol
xchg
or
push
xor
adc
bound
pusha
sub
test
insb
dec
test
out
add
pop
test
jl
adc
mov
lahf
push
pop
sbb
mov
les
fstpl
pushf
pop
inc
mov
cld
or
loop
cmp
cmp
add
lret
enter
dec
xlat
ror
fdivl
xor
pop
xor
loope
call
jp
mov
mov
jg
lods
adc
jns
adc
iret
rcll
rcll
cmp
adc
movsl
popl
std
mov
sub
sbb
cmp
sub
add
and
stos
inc
push
loope
shll
mov
jg
cmp
lea
xor
push
pop
loopne
cli
jmp
add
or
lcall
jnp
in
fnstsw
arpl
mov
les
and
lods
push
adc
dec
hlt
pop
push
mov
push
mulb
dec
cmc
divl
add
insl
cld
mov
fsubrl
lock
and
negl
adc
shrl
inc
mov
dec
fbld
test
mov
pop
fs
cltd
repnz
movsb
lahf
out
sahf
sbb
xchg
std
cmpsb
dec
add
jl
mov
in
fs
movsb
add
mov
idivl
mov
ss
cltd
mov
mov
ret
js
or
xchg
add
mov
adc
sbb
shll
je
mov
xor
bound
incl
or
push
in
mov
mov
ss
push
add
cltd
popf
pop
xchg
pop
lret
aam
cmp
and
adc
xor
jmp
clc
js
xchg
arpl
aad
in
cmp
mov
data16
incl
ffreep
jmp
dec
mov
lcall
push
outsl
and
or
rclb
rorl
lods
bound
sbb
incb
xor
int
xor
push
dec
push
stc
jo
fisubrl
out
mull
dec
repnz
mov
lret
ds
adcl
aad
and
pop
jbe
pop
sarb
push
imul
outsw
sub
push
jp
jmp
bound
lahf
push
out
lret
shl
jns
js
mov
push
aaa
xor
mov
jae
sahf
lods
repnz
add
mov
aam
jne
dec
dec
inc
jae
cmc
repz
fsubp
or
out
rolb
inc
cs
xchg
outsl
aam
jo
hlt
out
push
cmc
out
outsb
lea
in
loope
push
out
loopne
pop
lods
xor
fwait
imul
sbbl
mov
sahf
push
cmp
pop
cmp
push
scas
jno
clc
es
outsb
cmc
or
int
inc
ud1
jnp
adc
add
cmp
fldl
arpl
add
or
mov
mov
movl
jne
loopne
or
sbb
cmp
mov
and
sub
or
cwtl
je
aaa
and
inc
mov
adc
call
fs
out
pop
es
or
xchg
hlt
xchg
push
mov
fistps
fwait
rcll
imul
mov
shlb
aas
mov
or
clc
add
das
mov
cmp
test
incb
aas
pop
stc
pop
xor
cmp
frstor
outsb
adc
push
jo
inc
mov
xor
pop
or
pop
addr16
add
push
push
add
mov
je
mov
cli
mov
xlat
add
pop
add
mov
add
pop
mov
fcomps
mov
cs
inc
xlat
pop
lret
inc
mov
ja
mov
mov
jp
jl
jb
ret
in
xor
xchg
pop
popf
mov
int
cli
mov
push
out
clc
leave
dec
xlat
loop
icebp
imul
add
inc
pop
xlat
in
addr16
mov
xchg
jmp
lods
pop
add
jb,pt
inc
out
cmp
repz
or
fisubl
cld
fs
xor
jge
mov
sarb
ljmp
mov
sub
cmp
stc
ja
xchg
dec
sar
pop
mov
jo
int
mov
dec
mov
mov
mov
inc
frstor
movsl
fidivl
dec
xor
nop
cmp
ror
out
enter
into
cmpsb
rcl
add
ret
dec
stos
and
and
or
jmp
insl
jae
xor
cmp
xor
leave
pushf
lods
push
and
push
cli
dec
cmp
loope
xchg
jb
fmull
lods
cmpsl
fsub
ss
add
test
outsb
mov
sub
daa
lods
add
dec
pop
fildl
loopne
cmpsb
push
xor
addr16
ja
leave
jo
lea
lret
out
mov
and
mov
pop
inc
cli
sar
imul
loope
jg
insl
dec
pusha
or
scas
mov
add
mov
fildl
imull
cmc
xchg
inc
mov
adc
cli
jmp
shlb
push
mov
mov
push
mov
loopne
ret
neg
and
xor
std
mov
test
shrb
frstor
bound
rolb
xchg
aaa
mov
inc
and
sahf
and
hlt
xor
dec
adc
std
outsb
cmpsb
jne
testl
gs
enter
clc
stos
sbb
cmovae
rcrl
jmp
inc
sub
lods
fs
es
lahf
dec
pop
cmpsb
insb
add
pop
mov
push
fwait
xchg
jb
jle
dec
xor
xchg
int3
pop
pmullw
mov
pop
std
dec
mov
js
add
out
or
cmp
pop
lret
or
add
cmpsb
rcrb
mov
test
rorb
jbe
scas
dec
xchg
fwait
jg
dec
ss
in
cmp
or
loope
adc
mov
enter
jnp
lret
insl
xchg
cmp
arpl
in
adc
adc
test
mov
inc
scas
jbe
adc
mov
dec
inc
int
xchg
aad
cli
xchg
pop
loopne
add
mov
std
dec
ja
mov
fs
push
sbb
lret
mov
cs
roll
insl
xor
xor
pop
loop
mov
leave
push
mov
cmp
std
test
out
jae
and
sub
or
jle
push
iret
dec
xchg
cli
notb
out
cmp
or
jno
pop
xchg
adc
adc
std
inc
test
aas
jmp
cli
je
mov
sbb
and
or
dec
hlt
frstor
sbb
ss
pop
lahf
cmpsl
pop
adc
push
push
xchg
jp
mov
pop
cltd
xor
dec
mov
mov
push
add
shr
xor
and
repnz
lock
outsl
jns
jbe
leave
inc
test
mov
sti
arpl
lds
lods
or
sub
mov
fwait
mov
jb
imul
out
or
test
jbe
xorb
or
dec
push
push
dec
mov
in
xor
test
push
stc
pushf
mov
popa
les
adcl
pop
pop
xor
jbe
push
cmpsb
jl
lods
loopne
mov
stos
jnp
jne
jl
push
push
imul
xor
cmp
es
shll
lods
das
mov
jecxz
mov
adc
in
aaa
enter
in
sbb
sbb
or
sbb
cmpsl
dec
out
arpl
add
lahf
and
dec
hlt
fxch
pushf
outsb
dec
sbb
jnp
mov
sub
inc
loop
repnz
repz
cs
ss
add
push
in
lret
test
cmp
loop
xor
int3
lcall
cmp
cmp
push
adc
mov
push
fsubr
or
or
dec
movsb
inc
adc
xchg
in
mov
jb
pop
divb
shl
das
aad
mov
and
into
adc
dec
dec
adc
mov
stos
push
mov
jnp
lock
inc
lock
cld
inc
fwait
movsl
scas
daa
pop
xchg
cld
mov
mov
sti
mov
pop
mov
push
out
adc
insb
push
fcoml
les
fwait
ret
cmp
sbb
adc
bound
inc
and
push
divl
xor
pop
shufps
cwtl
push
sub
or
mov
inc
rol
xchg
xor
push
rclb
shll
mov
mov
pop
bound
in
test
lcall
push
rclw
pop
outsb
leave
fsubs
out
push
lods
inc
cmp
cmp
insl
xchg
pusha
repnz
aam
cs
pusha
pop
xor
inc
cs
mov
pop
or
nop
loope
push
dec
mov
dec
test
cmp
cltd
adc
std
hlt
mov
or
daa
jp
data16
push
jbe
stos
inc
mov
sub
jae
movsl
scas
and
mov
dec
jnp
cmp
dec
or
push
data16
adc
xlat
push
int3
cmpsl
aaa
mov
cmp
stc
lods
enter
lods
lahf
shl
xlat
sbb
insb
shl
imul
iret
mov
adc
aaa
mull
jne
popa
jbe
pop
sbb
fucomp
mov
add
jnp
adc
stos
jno
cwtl
es
stc
push
fildl
xor
and
in
xchg
pushf
jne
int3
ret
jb
es
in
dec
fwait
sbb
lahf
pminsw
ja
test
pop
jno
into
subl
ljmp
and
les
fdivr
out
ss
out
push
ljmp
dec
mulb
into
sub
sub
outsb
cmp
xchg
rcr
enter
bnd
mov
mov
dec
sub
out
jbe
pop
daa
clc
add
xchg
mov
pop
jecxz
nop
xor
sbb
lahf
lea
xor
mov
repz
cmp
test
gs
pop
das
dec
cmpsb
add
xchg
or
lret
popf
xchg
mov
bound
jmp
adc
sub
rcr
ja
mov
mov
xchg
popf
loop,pt
add
sti
sbb
jge
adc
cmp
scas
mov
cmpsl
push
cwtl
loope
js
insb
dec
push
mov
pop
xchg
pop
sbbb
ljmp
xstore-rng
cmpsl
inc
out
stc
inc
cld
pop
das
cmp
inc
jb
add
xchg
scas
jnp
cs
sbb
pop
test
adcb
inc
sti
lock
sar
int3
leave
sbb
mov
ds
add
cmc
adc
fdivrl
jns
sbb
movsl
stc
aas
bsr
mov
push
pop
push
fsts
add
xchg
scas
mov
xor
push
imul
loope
in
pop
mov
sbbb
cmp
lret
xor
pusha
std
int
xchg
loop
loopne
hlt
sbb
cmc
aas
jmp
in
mov
aad
jno
in
cltd
arpl
scas
or
fidivl
popf
pop
pop
addl
mov
inc
pushf
icebp
xchg
adc
test
addr16
test
popf
and
ret
aad
stos
pop
or
inc
packsswb
dec
into
std
mov
adc
imul
lods
adc
cmp
ljmp
mov
int
cmc
nop
pop
mov
pop
xorb
lcall
adc
pushf
xor
xchg
jmp
push
dec
sub
mov
aam
ds
jne
in
lods
stos
out
icebp
addr16
dec
sub
rcll
inc
in
or
pop
popa
iret
lcall
jno
cli
xor
lea
stos
sub
in
fimuls
push
mov
shlb
or
aaa
sbb
push
std
loopne
sbb
pop
push
xor
cmp
repnz
and
dec
int
aam
sub
sub
je
test
ss
nop
sti
jno
jle
bound
pop
cmc
cli
sti
lret
pusha
mov
jb
data16
ret
jbe
sbb
adc
inc
push
pop
mov
test
jmp
es
imul
xor
hlt
mov
arpl
dec
push
sbb
adcl
and
je
adc
imul
ljmp
jb
test
xchg
add
pushf
adc
aaa
in
cwtl
cld
fsubrs
mov
mov
nop
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
mov
aam
adc
mov
dec
aam
adc
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
push
jmp
adc
fldl
lahf
pusha
adc
jle
dec
out
outsb
movsb
jp
adc
idivb
inc
loopne
and
sub
xor
dec
loopne
or
cmp
jno
sub
daa
popa
pop
pushf
or
into
in
mov
sbb
jge
fiaddl
xchg
fstpl
push
mov
pop
dec
cltd
lret
jp
test
cmpsl
jo
shll
dec
in
mov
sbb
decb
push
xchg
sub
lods
inc
mov
inc
sub
pop
jg
push
xchg
sbb
sub
xchg
repz
leave
ss
dec
int
lea
pop
hlt
jne
dec
cwtl
mov
daa
rorl
dec
aam
adc
push
cmc
das
mov
mov
addr16
fwait
pop
hlt
and
lea
pop
hlt
and
popf
adc
pop
icebp
and
lea
pop
hlt
and
lea
mov
dec
push
lea
pop
hlt
and
popf
adc
pop
in
mov
dec
aam
adc
stos
int
mov
xlat
push
aam
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
stc
adc
push
hlt
and
pop
adc
popa
pop
fwait
pop
movsb
pusha
int
sbb
pop
fwait
jg
and
pushl
popa
pop
fwait
aas
hlt
and
lea
popa
pop
inc
pop
hlt
and
lea
pop
aam
mov
dec
aam
adc
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
pop
hlt
and
lea
push
hlt
or
aas
test
mov
gs
xchg
hlt
ds
mov
jbe
iret
lret
sbb
cltd
inc
scas
adc
push
cltd
mov
sub
loopne
cs
bound
ret
cmc
fldenv
nop
pop
xchg
inc
movsb
popa
dec
and
mov
out
icebp
push
xchg
cmp
aas
push
xor
repnz
inc
in
dec
arpl
lods
addr16
mov
sub
lcall
shll
out
or
or
or
push
in
xchg
mov
and
pushf
addr16
mov
push
popf
hlt
cli
fsubs
jb
sub
pop
inc
jmp
addb
jns
add
test
dec
mov
js
or
sub
or
idivl
and
mov
rcrl
gs
mov
mov
int3
mov
xchg
out
mov
insb
sti
inc
mov
adc
xchg
cmp
push
pop
sub
bound
mov
aad
dec
lock
iret
xchg
fimull
pop
dec
nop
data16
aas
das
out
lds
popf
xchg
sub
flds
xor
sarl
fistpl
dec
inc
cli
mov
fwait
mov
fcmovnbe
xchg
mov
cmpsl
adc
mov
repnz
mov
add
or
push
jge
adc
or
out
das
mov
cmpb
push
adc
and
sub
xchg
and
jbe
lret
mov
push
pop
ljmp
outsb
repz
das
lret
enter
lock
scas
dec
and
add
or
ret
cwtl
mov
lahf
xor
push
dec
bound
aas
jge
pop
pop
ficoml
mov
stc
enter
add
rclb
int
push
xor
jns
ljmp
xchg
adc
sub
dec
mov
mov
or
and
fcoms
lds
or
jmp
or
push
xor
xor
or
mov
pop
lret
sub
aad
leave
sub
leave
stos
cmc
xchg
cmp
and
addr16
push
shl
ret
aaa
sub
adc
push
dec
repnz
xchg
sbb
sbb
cmp
sbb
jecxz
jo
bound
jle
lret
mov
imul
cli
lahf
cmp
sbb
inc
and
int
xor
cltd
scas
sub
add
sub
sbb
daa
jge
subl
loopne
aas
movsl
jecxz
adc
data16
outsl
shlb
xor
addr16
lds
jb
std
cmp
out
cli
imul
mov
nop
mov
inc
mov
iret
add
aas
pop
xor
aaa
push
mov
scas
cwtl
ret
pop
adc
cmp
cmp
and
mov
lret
xchg
lcall
push
mov
mov
push
dec
loop
outsl
loopne
inc
push
cli
adc
stc
sub
std
jo
jae
inc
jb
mov
dec
std
xchg
sub
or
xchg
callw
lods
pop
mov
adc
cmpsl
arpl
cmc
cltd
imul
push
pop
sahf
xlat
enter
mov
cmpsl
test
shl
dec
dec
rclb
orb
push
js
pop
pop
pop
sarb
xchg
in
fstp
sub
outsb
jl
jns
sub
imul
rcll
and
mov
cmp
jo
mov
testb
xchg
and
cmp
icebp
pop
push
ljmp
adc
wrmsr
js
les
inc
pop
aad
mov
fdivrs
push
jo
cmp
stos
repnz
push
add
add
int3
pop
push
pop
loop
jl
add
rcl
mov
pop
cs
aad
push
jl
dec
xchg
xor
cmp
xor
movups
mov
dec
jo
loope
mov
jb
divl
call
js
pushf
testb
push
mov
push
or
mov
cs
adc
mov
cwtl
xchg
mov
cs
dec
lods
xchg
lea
sti
cli
fbld
lret
dec
dec
aam
lret
mov
bound
inc
int
into
xchg
inc
mov
xor
insb
push
sub
xor
aaa
or
mov
sub
sub
mov
in
shrb
or
rorb
ss
mov
ret
in
popf
pop
les
movl
fildll
fldenv
loopne
xchg
int
iret
mov
fwait
or
icebp
bound
add
test
pop
imull
leave
xor
dec
rcrb
in
mov
mov
imull
sub
dec
mov
iret
inc
xchg
outsl
push
xchg
fdivrs
inc
addr16
scas
mov
and
hlt
push
jge
mov
pop
xor
or
mov
dec
dec
fsubrp
fisubl
dec
jbe
cmpl
xor
xchg
dec
mov
push
scas
cmp
out
es
hlt
in
int
es
outsb
adc
and
popf
pop
mov
scas
or
jb
dec
mov
cmp
roll
pop
sub
loop
mov
inc
or
popf
fsubs
negl
es
imul
std
imul
pop
std
push
jmp
pop
fwait
inc
lret
lcall
dec
js
mov
stc
mov
mov
cld
jbe
pushf
lcall
adcb
pop
pop
lock
xlat
dec
movsl
mov
lret
push
addr16
inc
imul
xor
push
mov
lahf
mov
push
std
jbe
mov
pop
mov
mov
bound
adcb
fs
pop
rorl
inc
mov
and
pop
or
lods
or
loop
xchg
bound
sbb
jl
dec
mov
push
cltd
arpl
lods
add
inc
inc
mov
mov
dec
push
les
mov
adc
sbb
icebp
in
filds
and
xchg
dec
mov
sbb
insl
pop
lods
lret
sti
pop
ljmp
xorl
sarb
inc
sbbb
sub
jo
outsl
cwtl
xchg
mov
add
call
jl
cmp
lahf
stc
jb
cmp
mov
push
pushf
inc
insb
pop
mov
popf
xchg
cwtl
mov
fimull
mov
xor
popf
cmp
stos
cmpsl
mov
fsubrs
movsl
addr16
shl
fwait
xlat
lds
adcl
ljmp
add
cs
add
and
push
jo
sbb
adc
pop
mov
lea
cmp
and
adc
stc
or
mov
das
fsub
cmp
dec
ja
cmp
mov
mov
call
push
jle
xchg
insb
pop
xchg
xor
or
adc
gs
push
xchg
jbe
xorl
in
mov
pop
lods
push
xor
cltd
cmpsl
sub
jb
and
stos
pop
test
and
jbe
mov
pop
jns
iret
xor
cmc
inc
hlt
pop
jnp
ds
dec
popf
gs
jns
cltd
or
jns
in
popf
rcrb
adc
jns
xchg
sbb
xchg
popa
es
mov
or
push
pop
add
outsb
cmpsb
or
jl
mov
adc
mov
mov
fldcw
gs
pop
pop
add
jg
cmp
cld
cli
push
pop
cmp
sbb
nop
push
xchg
add
out
mov
add
jnp
mov
outsl
mov
stos
pop
outsb
jge
mov
inc
and
pop
aam
adc
pushf
out
sbb
lods
insl
xor
jns
subb
add
scas
cwtl
and
jmp
xor
and
addr16
mov
ss
shlb
mov
pop
data16
mov
dec
jg
outsb
inc
in
xchg
sbb
jge
scas
jnp
les
sbb
pop
xor
inc
pop
jg
push
rorb
dec
jg
idivl
jno
mov
cmp
jae
mov
cmp
icebp
mov
mov
gs
stos
clc
xor
insb
daa
dec
movsb
lret
inc
xor
pop
dec
jg
stos
int3
and
fucom
div
mov
lahf
dec
xchg
jmp
jecxz,pt
pop
leave
out
push
andb
scas
cs
gs
cmc
outsl
loop
es
ds
mov
sahf
ja
or
inc
aas
cmp
lea
jmp
pop
adc
mov
cltd
mov
cmc
add
outsl
addr16
add
fnstenv
das
data16
mov
scas
scas
sbb
cltd
inc
mov
pop
or
pop
cmp
out
imul
mov
icebp
lods
repz
push
dec
inc
test
test
push
sbb
push
pop
mov
dec
ss
popa
sub
mov
ss
jmp
int3
mov
mov
iret
stos
push
nop
adc
ja
int3
test
xlat
xor
adc
aas
adc
stc
pop
test
cmp
mov
sub
ret
push
ja
ss
popf
mov
mov
add
in
imul
icebp
addb
or
aaa
scas
push
sbb
inc
fidivs
addb
jecxz
push
adc
xor
rcrl
mov
loop
pop
leave
jmp
loope
int
sbb
push
pushf
fwait
or
cld
pop
scas
in
dec
lods
shrb
sub
mov
jae
repz
mov
imul
sti
inc
cmp
and
hlt
cmp
in
lahf
fldl
sub
sbb
fstpl
mov
sbb
fwait
aas
push
sub
enter
outsl
push
cmp
lcall
pop
pop
test
dec
push
jo
mov
adc
push
jmp
jbe
push
push
dec
or
mov
or
inc
mov
sarb
xchg
pop
test
test
and
jg
pop
js
xchg
mov
jne
fsubrl
aas
in
jle
test
add
dec
mov
je
jp
mov
cmp
sarb
je
mov
scas
or
repnz
neg
mov
loopne
testl
pop
neg
jne
adc
mov
push
fadd
stos
mov
shlb
loopne
lret
stos
lahf
and
cs
jmp
test
push
add
push
mov
jp
mov
push
repnz
and
xchg
fldenv
inc
outsl
sub
addr16
loopne
adc
out
push
mov
sub
mov
faddp
adc
int
adc
push
lcall
jbe
and
dec
pushf
psubsb
pop
ljmp
jne
cmp
outsl
outsb
divl
lcall
jge
adc
rorb
mov
fcoml
adc
jb
mov
xchg
and
mov
in
or
dec
and
addb
mov
lea
jmp
jns
inc
es
ret
shll
xchg
xchg
lret
add
mov
mov
int3
outsl
inc
les
addr16
psllq
mov
jp
mov
cmpsl
jbe
mov
fmuls
mov
and
inc
pop
xor
xchg
std
sbb
rcll
loope
sbb
cmp
shr
mov
lahf
shl
add
mov
pop
fstpt
insl
out
les
lahf
jns
mov
mov
fiaddl
or
mov
push
mov
mov
dec
test
sbb
cwtl
or
js
or
adc
ret
out
mov
sub
pop
adc
sahf
arpl
pusha
sbbb
push
push
or
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
