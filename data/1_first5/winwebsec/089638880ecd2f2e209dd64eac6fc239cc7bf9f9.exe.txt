push
cmp
addl
lods
ds
xlat
inc
addr16
sbb
xchg
sub
add
dec
lret
out
dec
mov
jmp
les
mov
sarb
adc
push
inc
in
in
subb
loope
mov
jmp
mov
in
int
ds
mov
cmp
mov
pop
push
aad
and
sbbl
arpl
orb
mov
mov
jbe
cmp
ror
and
xchg
fcoml
popa
outsb
ds
bound
out
jbe
adc
xchg
jb
loope
mov
and
icebp
lock
pop
fsubrl
cld
pop
movsl
fdivl
mov
clc
fistpll
xchg
lock
jb
push
pop
sbbl
add
pop
mov
cmp
aad
aad
add
mov
and
nop
push
and
adc
mov
jbe
mov
loope
negl
imul
nop
hlt
test
push
push
mov
arpl
jmp
inc
flds
cmp
cmp
je
mov
addr16
mov
push
or
jmp
dec
in
mov
lret
subl
mov
rep
sub
call
adcl
enter
loope
pop
shll
js
inc
lods
sbb
dec
pop
shll
inc
or
aas
stos
adc
insl
int3
fcoml
hlt
lret
dec
movsl
xlat
pop
ljmp
jne
in
int
jecxz
imul
cmp
mov
cltd
jo
adc
jl
xchg
ss
mov
cmp
das
loop
or
cli
lahf
or
ret
je
inc
adc
pop
insb
insl
push
inc
push
pop
cmp
sbb
adcb
cmpsl
or
dec
jmp
arpl
testb
push
stos
xor
aaa
out
int
mov
mov
out
add
call
shl
das
add
pop
inc
xchg
int3
adcl
clc
stos
mov
in
call
push
in
movsl
push
push
iret
cmp
push
ljmp
data16
pop
sbb
xchg
mov
sbb
or
andb
pop
insl
scas
sbb
jp
fs
stos
sub
stos
cvtpi2ps
inc
les
add
in
add
out
xchg
popf
inc
cmp
cli
sbb
inc
hlt
xchg
add
shrl
outsl
mov
icebp
add
popa
out
dec
xchg
insl
xchg
neg
adc
pop
pop
movsl
fidivrs
leave
in
xchg
adc
test
cmp
js
push
cmpsb
popa
dec
mov
lods
aam
outsb
stos
mov
jns
push
dec
mov
call
and
cmp
or
or
mov
xchg
jl
imul
das
jecxz
cmpsl
dec
cmp
jecxz
cmp
and
dec
dec
and
icebp
imul
stos
jae
dec
lcall
cmp
es
mov
sbb
or
add
out
int
cmp
inc
ljmp
lret
dec
leave
mov
fwait
aam
mov
jnp
lret
inc
mov
jns
inc
insb
pop
cwtl
pop
out
dec
sbb
mov
les
xor
fs
lods
adc
pop
daa
in
cld
cmpsl
or
fidivrl
xchg
fcmovu
imul
mov
aaa
test
sbb
xchg
mov
sbb
out
and
gs
insb
pcmpeqd
mov
push
pop
faddl
stos
mov
push
jb
mov
add
lods
popf
mov
xchg
flds
jge
roll
shrl
push
and
adc
int
call
mov
jnp
aam
inc
movsl
repnz
sub
cmpl
ja
xor
ds
cmp
or
incl
push
aas
adc
or
loopne
fildl
stos
sub
xorb
xchg
sub
inc
cmc
sbb
je
adc
inc
stc
fcmove
std
lcall
mov
aaa
mov
adc
cli
les
mov
sarl
xchg
inc
movsl
push
push
mov
mov
loop
cs
aad
mov
ret
test
sub
dec
addl
leave
mov
add
push
jl
rorl
rcrb
pop
int3
adc
xor
test
gs
xor
adc
stos
pop
adcb
cmp
xchg
inc
ret
sbb
cwtl
pop
add
cmpb
xchg
push
cmpsl
dec
repz
sbb
stos
or
imul
rolb
jbe
int3
mov
or
movb
lahf
dec
add
sub
jp
mov
repz
mov
mov
leave
adc
in
cld
loop
bound
gs
cmc
sub
jb
cli
test
insb
pop
dec
out
xchg
out
dec
daa
jmp
cmp
xor
stc
negb
xchg
movsb
test
std
fs
cmpsb
fnsave
pop
lock
ds
das
ficompl
adc
sub
sub
sub
pop
mov
insb
ret
inc
mov
jns
mov
jle
ja
das
inc
out
pop
adc
clc
and
in
comiss
cli
aam
cmpsl
xor
jle
dec
and
add
push
or
fwait
adc
inc
fsubrs
jmp
lahf
jae
aaa
iret
in
sbbl
sub
sbb
xlat
into
cmp
rorl
mov
and
fadd
call
jne
add
lret
sub
xchg
add
sub
repnz
hlt
cli
sub
or
inc
in
xlat
dec
je
adc
lahf
sub
mov
pop
mov
xlat
mov
push
xchg
xchg
adc
cmp
push
movb
fisttpl
inc
inc
ds
pushf
pop
enter
fwait
pop
shr
ret
and
cs
aas
int
sub
cmpsl
mov
addl
aas
jmp
and
div
cmpsb
pop
pop
fisttps
mov
inc
adc
jmp
cs
rorl
adc
jnp
sbbl
dec
inc
lcall
jne
mov
outsl
mov
push
adc
icebp
cmc
mov
inc
xchg
repz
pop
mov
mov
inc
js
iret
inc
jle
jl
std
jo
jb
cltd
sub
push
scas
shrl
sub
cmpsb
and
repz
gs
cli
rclb
addr16
fs
jb
jbe
push
int
fstpl
jb
icebp
mov
cmpsb
das
mov
nop
push
aad
sbb
jp
lret
adc
and
xor
scas
adc
hlt
jmp
and
pop
lret
aaa
mov
aas
imul
jbe
mov
lret
outsb
in
popf
pop
push
mov
push
cmc
in
rcrb
pop
dec
test
js
xor
int
pop
rcll
mov
lahf
cld
add
fisttpll
jne
push
mov
sbb
icebp
int
aas
jbe
and
les
or
into
repz
das
push
adc
sbb
daa
aas
iret
adc
out
lea
or
xchg
test
jg
fidivrl
inc
stc
pushf
jmp
idivb
call
pushf
out
mov
sahf
mov
sahf
fstl
out
aas
mov
fldcw
mov
ret
jne
popf
jno
ljmp
xor
pop
rcll
mov
dec
push
mov
push
xor
or
mov
out
sbb
jne
xchg
das
insl
mov
loopne
mov
jae
pusha
int
ret
les
or
jl
dec
test
int
aad
mov
scas
enter
sub
loope
mov
xor
ss
dec
or
or
pop
jge
cmp
and
push
sub
mov
adc
push
mov
pop
mov
std
sub
repz
jge
inc
daa
dec
xchg
les
rcll
sbb
dec
scas
out
push
pop
push
xor
std
sbb
insb
ret
adc
dec
sti
xor
and
hlt
sub
mov
in
and
rclb
imul
das
mov
adc
xor
scas
dec
ja
and
nop
lahf
mov
jg
cmpsl
xor
mov
aaa
cmp
pop
mov
lods
stos
or
ja
stos
std
lret
sbb
pop
xchg
cwtl
out
mov
mov
subb
and
mov
std
stc
inc
insb
addr16
fiaddl
out
lods
repz
negl
arpl
std
sbbb
fildl
popf
mov
pusha
or
data16
ret
pop
loope
gs
stos
out
into
lret
xchg
js
ret
iret
idivb
fwait
sub
filds
sbbb
xor
jno
mov
outsl
imul
jle
sub
cli
inc
push
inc
lds
pop
clc
or
mov
adc
jnp
lret
sbb
cltd
outsl
pusha
ss
sbb
mov
clc
or
repnz
jle
cltd
inc
pusha
add
xor
pop
pushl
xlat
xchg
or
pop
mov
movsb
into
mov
dec
test
mov
ja
add
dec
sbb
int3
jp
sub
cmp
in
mov
test
xor
jle
cmp
jle
inc
xchg
iret
xchg
mov
dec
push
jecxz,pt
mov
pop
jo
or
insl
mov
fnstenv
xchg
lret
mov
cmc
lods
pop
ret
add
test
sbb
out
aad
ss
aaa
mov
push
dec
xchg
push
xchg
shrl
imul
cmp
push
jnp
xchg
jecxz
bound
pop
fnstcw
scas
sub
mov
sub
or
cmp
dec
add
filds
sub
movsb
lock
sub
pop
std
sti
mov
mov
jo
nop
iret
popf
das
adc
dec
in
mov
jmp
shll
leave
sbb
iret
cmp
xlat
jle
cs
into
aad
lcall
cmp
lret
push
dec
aaa
jle
rcll
fwait
jne
cmp
pop
mov
fs
ficoml
and
pop
and
sub
mov
lods
add
clc
pop
fs
or
or
notb
mov
push
mov
mov
cmp
push
push
bnd
ds
xchg
inc
cmpsl
xchg
dec
mov
mov
movsb
jge
aad
fisttps
xor
dec
das
imull
jae
mov
loop
test
add
cltd
outsl
jbe
jno
aaa
dec
pop
outsb
ljmp
mov
lret
xor
lds
aad
ss
jge
fcoms
cmp
jnp
out
bnd
dec
mov
hlt
incl
inc
ret
push
or
outsl
add
fdivrl
fs
cmc
fsubl
adc
push
aaa
push
subw
pop
sbb
pop
mov
mov
jmp
scas
lods
sub
insl
cwtl
cmp
mov
push
mov
sbb
adcl
jmp
push
inc
xchg
cli
mov
jno
adc
pop
icebp
dec
mov
movsb
adc
sbb
pop
mov
and
jns
and
jle
jecxz
insb
xorl
fstpl
negl
sbb
int3
cmp
andb
iret
cmp
adc
data16
test
enter
outsb
sub
inc
orb
add
loop
or
ss
push
in
pusha
xchg
in
lods
ja
out
fldln2
adc
fsub
ljmp
and
xorl
sbb
sub
sbb
push
sti
mov
xchg
mov
cmpsl
shl
gs
ljmp
pop
push
jmp
lret
outsb
mov
clc
add
jle
pavgb
pop
or
lret
mov
xchg
in
or
mov
lea
gs
adc
sbb
sti
or
dec
jmp
sub
dec
xor
sub
in
repnz
and
sub
xor
mov
sbb
adcb
jmp
jns
repnz
lds
dec
cmpsb
mov
pop
push
ja
mov
jp
inc
inc
inc
in
outsb
int3
fisttpl
popf
cs
mov
jno
fstps
pushf
shrl
xchg
sahf
mov
push
cmc
sub
popf
out
xchg
pop
or
mov
xor
aad
clc
adc
adc
cmp
and
cmp
mov
call
fadds
cltd
stos
push
cmpsl
pop
dec
cmp
popl
mov
std
dec
icebp
xlat
bnd
pop
fxch
movsl
lock
mov
mov
in
lds
cld
divl
loope
mov
in
imul
cltd
jge
dec
cmp
cltd
rorb
mov
imul
mov
mov
inc
hlt
cmpsl
test
inc
fcmovnbe
xor
jge
sub
jns
pop
loopne
out
mov
andl
test
sub
cli
fsubrp
arpl
xor
dec
pop
setne
shll
cltd
adc
cs
push
ffreep
add
fwait
dec
push
ret
mov
movsl
subl
cmp
dec
scas
cltd
and
aas
mov
cmp
pop
xor
pop
pusha
push
arpl
arpl
pop
lods
int
fsub
ret
push
jp
xor
pop
repnz
loope
iret
pop
lret
sub
mov
out
ret
xchg
jmp
mov
test
movsb
xchg
or
xchg
pop
push
inc
out
test
sub
scas
jmp
test
sbb
fsubrs
cwtl
fisttpll
mov
fwait
or
imul
or
xorb
xor
push
jp
loop
aad
sbbb
ss
sahf
dec
pop
xchg
mov
pop
outsb
das
dec
ret
cmpb
cmp
aas
popa
aas
push
mov
out
aas
xor
cmpsb
jge
sub
cmp
daa
jmp
push
cmpsl
cmp
negb
cld
pop
or
mov
mov
ror
jbe
add
push
mov
insl
imulb
das
jmp
jge
addr16
fdivrs
jae
out
and
dec
pop
inc
adc
dec
lods
and
sbb
test
arpl
dec
loopne
mov
ret
xchg
pop
in
incl
ret
idivb
cmpsl
sbb
inc
jo
arpl
je
mov
aas
add
test
jns
jae
mov
cmpsb
mov
cmpsl
insl
add
in
xor
stos
sbb
cmpsb
xor
xor
add
test
lds
leave
aaa
add
push
or
rclb
mov
cld
pop
xchg
dec
fildl
lretw
dec
cmp
jno
les
js
nop
enter
cmp
in
fcoml
jmp
or
cwtl
nop
inc
sub
bound
lahf
mov
push
and
jae
sahf
push
cmpsb
sub
and
outsl
dec
dec
mov
imulb
push
fisubrs
dec
dec
test
jmp
pushf
data16
sbb
jmp
call
ljmp
push
sbb
push
jmp
push
xchg
movsb
xor
mov
subb
mov
sbb
cmp
xchg
ss
inc
stos
ret
and
ficoml
sub
mov
leave
andl
nop
sub
xchg
xor
cmc
jae
mov
je
es
call
mov
test
or
push
add
pop
adc
dec
clc
ljmp
mov
imul
xor
mov
aaa
mov
loop
mov
and
pushf
iret
dec
xor
mov
xchg
cmp
adc
push
mov
mov
out
rclb
inc
sub
shll
sub
lods
hlt
leave
in
or
push
ds
lds
in
rcrb
mov
dec
leave
cwtl
lods
addr16
add
imul
jnp
daa
jge
and
das
cmpsb
lods
mov
sub
xchg
jle
jnp
stc
fistpll
cmpb
aam
mov
int3
jge
xchg
icebp
sbb
sub
test
add
xchg
arpl
sbbb
mov
sbb
cmp
cmpsl
clc
lret
bound
lods
mov
push
pop
xorl
pop
push
cld
push
jg
repnz
test
loop
push
xor
push
aad
or
test
out
std
test
gs
movsl
mov
aad
pop
push
adc
cs
jno
adc
lods
mov
sub
ja
cmpsb
xor
lret
jg
cmp
sub
sbb
or
mov
mov
xor
jle
push
jno
xor
dec
movsb
insb
and
ds
adc
lcall
xchg
ret
ds
push
lahf
leave
dec
mov
fbld
xor
add
je
int3
add
fdivl
faddl
stos
popf
in
loop
repnz
jne
or
mov
cltd
pop
ret
fstp
fwait
dec
adc
push
cmc
std
mov
fwait
mov
in
jbe
xchg
in
leave
adc
pop
cs
stos
inc
adc
mov
mov
adc
push
sbb
movsb
pop
test
loopne
jb
cmp
std
outsb
ret
lds
add
loope
inc
sub
mov
pop
dec
orl
aam
loope
rclb
iret
cmpsl
mov
lret
ljmp
inc
les
adc
dec
fsubrl
mulb
and
js
xchg
xor
push
xchg
sbb
imul
mov
cli
repnz
mov
xchg
fistl
cmp
sub
ss
xor
daa
js
out
pop
js
dec
test
sbb
imul
fsubp
xchg
lgs
and
mov
push
loopne
shl
inc
mov
addr16
add
sub
pop
leave
jecxz
sbb
and
repz
inc
pop
push
clc
adc
orb
adc
lret
notl
fbld
inc
jb
sbb
mov
outsb
adc
add
dec
es
ret
xchg
push
push
push
fdivs
test
outsl
or
mov
mov
cld
mov
sbb
jb
add
adc
xchg
add
cmp
jbe
mov
jb
jecxz
mov
xchg
aad
adc
fwait
movsb
aas
xor
xchg
dec
inc
insl
in
push
cmc
xchg
mov
mov
cmovg
sub
cmp
cld
int3
xchg
stc
jae
cmc
in
or
mov
stc
loop
movb
adc
mov
xchg
fwait
mov
scas
jns
adc
dec
jmp
or
ret
push
push
xchg
clc
jne
shrl
push
or
jbe
cmp
rorb
inc
fmul
xchg
push
mov
push
lods
fiadds
movsb
dec
mov
xor
push
stc
outsl
mov
pop
adc
and
xor
add
sbb
les
bound
hlt
jp,pn
inc
std
std
xlat
and
dec
fisubrl
stos
xlat
icebp
xor
or
sbb
lds
setne
call
out
out
and
vshufps
inc
pop
fidivs
jae
ret
roll
adc
dec
and
hlt
pop
push
fbld
add
outsl
add
jns
lods
test
imul
sub
dec
xor
fwait
jbe
mov
aaa
sub
adc
enter
das
add
cwtl
sbb
sbb
popl
out
sub
jb
aas
mov
shrl
das
popa
mov
daa
fbstp
int3
mov
add
fwait
cmpsb
push
pop
lret
int3
outsb
fwait
or
add
cmp
pop
out
lcall
in
in
jnp
inc
sub
jnp
mov
or
add
sbb
and
repnz
scas
test
in
mov
popa
es
mov
sbb
jge
jb
add
or
push
lcall
mov
sbb
fwait
scas
push
scas
in
sub
test
pop
jns
popa
adcl
pop
lahf
xor
mov
pushl
sub
xor
rcll
mov
jbe
mov
aam
push
inc
mov
inc
lods
lea
mov
push
shlb
cmpsl
sbbl
inc
shrl
vmread
insl
lods
andb
push
jae
and
outsl
sub
test
xor
jb
in
sbb
cmp
cmp
subl
movsb
cli
inc
add
jnp
xor
xchg
lock
mov
stos
hlt
push
out
pop
ljmp
cmpsb
enter
mov
pop
daa
inc
test
sub
cli
sub
sub
xchg
mov
add
cmp
xchg
mov
or
sub
or
inc
push
out
xchg
jo
dec
sbb
mov
and
cmpsb
cmc
leave
loope
cli
aaa
cmpsl
push
pop
cmpsb
adc
enter
in
jnp
cmp
xchg
pop
cmp
mov
stos
leave
jo
dec
pop
inc
sbb
lock
imul
cmp
or
or
shlb
sbb
popa
mov
mov
dec
and
push
ret
movsb
test
fsub
or
loopne
lea
jae
sub
push
inc
add
adc
xlat
cmp
fmul
in
sub
add
xor
stos
sbb
mov
movsl
push
push
push
std
dec
pop
insl
push
xor
psllq
std
stos
xlat
ja
insl
movsl
aaa
xchg
loop
jl
or
sbb
out
jno
clc
mov
loopne
pushl
incb
cmc
pop
pop
xchg
push
gs
mov
push
roll
pop
popa
lahf
insb
stc
inc
leave
xchg
and
sub
mov
pop
dec
scas
adc
popa
lods
enter
cmpsb
mov
jge
aad
mov
adc
out
and
dec
cmp
cltd
pushf
xlat
or
sbb
js
mov
adc
sub
outsl
or
gs
int
scas
cmc
hlt
mov
mov
lods
fdivr
mov
mov
adc
jo
xchg
jecxz
mov
out
pop
push
sbb
into
out
test
jecxz
outsb
pop
mov
mov
sub
pop
push
add
hlt
lods
xor
xchg
mov
lds
pop
xchg
or
out
pop
ret
fsts
js
leave
cld
mov
jmp
js
call
shl
jb
cltd
adc
sahf
dec
xchg
jmp
outsl
pop
adc
add
cmp
xchg
push
fisubrl
or
inc
adc
add
adc
add
add
cs
xorl
lret
xlat
stc
mov
push
and
adc
movsb
adc
jns
cmp
imul
add
add
sar
sub
inc
or
push
out
pop
mov
std
sub
sbb
inc
cmp
mov
stc
cli
das
stc
or
cmp
dec
jb
mov
loope
mov
je
push
jae
dec
test
movsb
cld
inc
lcall
movsl
mov
push
data16
mov
xor
sahf
mov
or
push
jge
fsub
pop
add
add
sub
pop
in
nop
pop
cs
push
push
lahf
push
mov
pop
fwait
loope
enter
sbb
lods
inc
jns
sbb
subl
mov
in
ds
xor
iret
jbe
push
js
sbb
addr16
movsb
or
push
and
pop
inc
cli
inc
xchg
dec
out
std
repnz
sbb
cmp
aas
out
xor
cmc
mov
icebp
mov
xlat
in
call
push
pop
cwtl
dec
push
mov
jmp
mov
or
testb
jnp
cli
dec
mov
pop
or
jg
mov
add
out
inc
in
and
test
mov
test
xor
aas
sub
mov
fcomps
sahf
inc
lds
mov
icebp
adc
mov
pop
mov
dec
push
hlt
cmpsl
add
jle
imul
add
sar
rcrb
sahf
adc
sbb
mov
or
movsl
sbb
push
inc
inc
mulb
mov
xchg
xor
pop
aad
outsl
xor
and
ret
divl
push
sbb
inc
aam
mov
out
lea
leave
insl
idivl
and
popa
fldcw
sub
mov
aas
ret
sbb
stos
out
sub
sarl
repz
cmp
push
jne
cs
push
cmp
sub
sub
mov
mov
cmp
pop
rcrl
push
ret
pop
push
mov
ret
or
das
lods
or
fwait
bound
pop
mov
dec
dec
fmuls
add
cmpsb
mov
cmpsl
mov
xchg
adcl
decb
push
in
icebp
lahf
fsubrl
mov
inc
test
and
mov
sbb
out
dec
movsl
xor
fcomps
jnp
adc
cmc
fs
test
dec
push
stos
add
int3
popf
cwtl
push
outsb
jne
jne
cmp
adc
cli
sbb
push
lock
lret
sbb
pop
lret
cmp
out
and
push
lods
lfs
insb
in
push
push
mov
pop
push
xor
fst
ds
loop
pop
xor
jecxz
jbe
js
inc
arpl
mov
aad
loop
sub
cwtl
jge
pop
cmp
mov
fwait
sbb
test
lock
sbbl
jb
call
dec
xchg
scas
dec
mov
xor
mov
mov
sub
int3
lea
push
scas
stos
pop
sbb
sahf
push
mov
xor
sub
test
pop
and
adc
sbbb
xlat
jl
push
out
jbe
and
insb
sub
mov
loope
cli
clc
sub
mov
xchg
mov
xchg
jg
gs
jmp
and
jae
add
in
jbe
mov
mov
leave
loop
inc
pop
xchg
cmpsl
insl
inc
push
jns
and
sub
inc
pop
popf
cmpsl
cmp
popa
dec
pop
adc
push
insl
scas
mov
popa
aam
pop
pop
lret
lods
cld
inc
das
push
dec
outsl
pop
int3
mov
mov
mov
cltd
mov
dec
cltd
mov
push
mov
dec
push
cwtl
inc
ret
ds
sub
sbb
jae
out
fxch
push
xchg
adc
shl
sbb
insb
cs
out
xor
mov
xchg
adc
rorb
and
mov
xorb
fildl
xchg
fidivrs
out
push
hlt
and
daa
js
dec
xchg
push
mov
pushf
or
std
inc
repnz
push
cld
int3
push
test
mov
mov
mov
inc
repz
xlat
test
and
xlat
inc
sahf
cmp
fmuls
cltd
xchg
sbb
orb
inc
pop
flds
dec
xor
lds
cmp
pushf
sarb
and
mov
sbb
lock
in
data16
mov
call
sub
and
ss
cli
ret
pop
les
movsb
call
ficompl
add
sbb
mov
mov
sarl
or
dec
int3
cmpsl
out
or
pop
in
pop
mov
mov
cmp
jp
inc
jecxz
push
jp
dec
jl
loop
mov
in
pushf
out
prefetcht1
cld
outsl
imul
movsl
bound
pop
mov
xchg
inc
pop
mov
stos
dec
mov
in
icebp
fidivrs
or
cld
jo
jns
add
add
out
jns
pop
fmuls
out
mov
sbb
jae
sub
jl
inc
cmovbe
push
in
cmp
xor
lret
push
inc
js
mov
ds
inc
insl
sub
and
jb
test
push
lret
fdivs
push
jnp
push
icebp
aaa
and
mov
daa
adc
or
xor
inc
aas
sub
push
xor
mov
shl
add
inc
movsl
aas
shl
lock
dec
rcrl
rcrl
pop
add
and
loopne
cmpsb
jp
pop
xchg
stos
pop
lock
cmc
mov
fildl
pop
in
push
int
arpl
outsl
cs
push
add
sub
orl
out
xor
push
cmpsb
cmpl
ret
mov
mov
pop
fldcw
lfs
cwtl
jmp
dec
sbb
dec
lahf
lret
lahf
adc
jne
cwtl
and
xchg
cmpsb
mov
pop
adc
add
lret
sbb
add
cs
mov
mov
sahf
out
inc
into
lret
mov
shr
push
xchg
shlb
sarb
lahf
je
les
mov
out
cwtl
mov
test
jmp
loope
pop
pop
dec
add
sub
sub
aam
pop
jp
stos
addl
fmull
rclb
mov
xor
add
or
popf
mov
cmp
inc
xchg
fisttps
nop
or
xorb
push
aaa
ljmp
jne
sub
jne
add
xor
cmpsb
pusha
or
loopne
fdivp
pop
popf
in
aad
dec
xchg
push
cwtl
fcmovbe
or
icebp
sbb
imul
aad
push
shll
cmp
fs
leave
jl
inc
repz
cmp
pop
jge
loop
popf
xor
imull
aas
shlb
jmp
and
ror
jne
nop
inc
mov
and
mov
popf
fdivrs
orl
xchg
sub
and
stc
add
dec
insl
scas
aam
ret
xlat
bndstx
rorl
cmpsb
xchg
stos
mov
rorl
jb
lcall
cmp
and
loope
int
cmp
cmp
mov
inc
daa
cmc
and
fnstsw
jb
lret
or
pop
mov
dec
xor
mov
cmp
shrl
adc
stc
movsb
mov
jge
pop
cmp
push
push
mov
xor
push
loopne
fs
imul
stc
xchg
xchg
scas
push
fwait
shll
in
adc
cmp
jle
lea
xchg
decl
sbb
nop
xchg
or
push
mov
or
in
xchg
ds
pop
in
sti
repz
sub
dec
inc
in
fistpll
dec
add
int3
jne
mov
jbe
jae
adc
cmpsl
xor
fsubs
add
enter
mov
bound
fisubrs
and
adc
mov
aaa
shrl
push
insl
rcl
jne
or
lods
cmpb
jno
outsl
cmp
mov
jnp
das
jnp
fucomp
dec
mov
dec
push
inc
push
dec
mov
cmp
jl
les
out
dec
fisttpl
jae
push
call
xor
mov
jmp
repz
in
dec
push
push
mulb
jp
inc
dec
mov
mul
mov
mov
jnp
in
mov
daa
or
xchg
aad
xchg
shll
xchg
push
cmpxchg
lea
rclb
pop
lock
ja
popa
jg
out
mov
hlt
mov
adc
inc
mov
fisttpl
js
dec
inc
mov
les
scas
mov
loopne
subl
cwtl
addb
inc
ja
mov
lret
sbb
int3
fs
xor
out
jbe
dec
ret
xlat
push
adc
int3
fwait
pushf
sub
lcall
xor
into
xlat
lds
or
mov
xor
inc
pop
sarb
mov
stos
and
scas
leave
push
leave
or
mov
mov
xor
inc
jbe
scas
fstl
ds
inc
in
out
add
lahf
mov
mov
es
pop
das
inc
add
fsub
sub
jl
xchg
js
cmp
repz
xor
ss
cmpl
mov
xchg
mov
mov
mov
and
adc
and
notb
mov
mov
mov
inc
mov
add
movb
pop
pop
mov
jg
sub
pop
adc
adc
lcall
in
xchg
jecxz
js
negl
inc
rcll
and
xchg
pop
jae
inc
inc
push
xor
inc
add
cltd
in
test
loope
fsubs
pop
movsb
fisubs
bnd
inc
push
xor
stos
adc
pop
loope
or
dec
xor
push
mov
lahf
or
cmpsb
cs
mov
dec
mov
jge
sbb
jmp
dec
dec
xchg
mov
sub
cltd
testb
lret
or
lret
sbb
jp
sbb
push
stos
cmp
loopne
and
or
addr16
jp
rorb
icebp
mov
xchg
stos
cli
int
and
ficoms
icebp
sbb
jb
mov
fidivs
rcr
repz
outsl
clc
lods
lahf
iret
js
sbb
inc
ret
inc
int3
fiaddl
adc
add
mov
mov
xor
out
into
xlat
shlb
stos
out
pop
test
add
xchg
test
test
filds
std
nop
outsl
lret
test
mov
pop
lock
int3
mov
inc
mov
push
xchg
xor
rolb
mov
jecxz
fdivrs
aas
sbb
jge
mov
xor
enter
cld
jecxz
xor
and
clc
sbb
fs
or
sbb
jbe
pop
shr
adc
push
mov
or
pop
adc
sbb
pushf
psubsw
mov
and
pop
push
jae,pn
mov
lea
out
testb
rorl
ja
shlb
inc
ret
ljmp
pop
cmpsl
cld
xor
add
out
cmpsl
in
add
or
inc
in
stos
sub
mov
dec
mov
hlt
cmp
sbb
jb
jo
mov
lahf
mov
or
lret
imul
imul
cwtl
cltd
lea
sub
sub
in
mov
addl
stos
out
push
cmp
pusha
mov
mov
xor
cld
popa
jo
xor
pusha
or
pop
enter
out
fldenv
in
js
hlt
in
rolb
inc
push
xor
cmc
jb
out
std
sbb
mov
stos
inc
lcall
mov
lods
and
bound
adc
push
push
loopne
xchg
out
xorl
pusha
mov
js
ret
sub
dec
mov
or
mov
leave
cmp
pop
int
push
push
adc
pop
xchg
enter
xor
into
mov
pop
inc
das
inc
sub
mov
pop
dec
sbb
roll
pop
and
ds
gs
jbe
push
fnstcw
pop
popa
mov
mov
dec
xorb
fs
pop
pusha
mov
xchg
push
inc
shr
int3
pop
loopne
push
lcall
shrb
mov
xchg
pop
cmc
xor
repz
pop
and
inc
sub
fisttpl
shll
sbb
shll
or
sbb
jbe
adc
jp
popa
outsl
sbb
ret
repnz
lahf
adc
pop
adc
push
and
lret
repnz
pop
add
or
xor
mov
dec
in
jo
sarl
cmc
mov
cmp
dec
testl
mov
lds
push
insl
mov
xchg
popa
or
xorl
mov
cmpl
idivl
test
test
or
cltd
out
pop
push
sti
add
js
out
adc
jmp
add
lahf
fdivl
loope
xor
outsl
ret
dec
pushf
lea
out
inc
dec
xchg
mov
sti
push
xchg
jne
mov
or
je
mov
xchg
lods
pop
or
mov
cmpsl
int
test
leave
sbb
sbb
mov
insb
xor
sahf
adc
sbb
stos
cmp
cltd
or
mov
add
mov
add
mov
scas
xor
pop
js
rcrb
xchg
std
and
gs
push
adc
fwait
popf
scas
and
mov
nop
dec
cwtl
or
cmc
loope
into
insl
arpl
cs
test
inc
jge
dec
insb
xor
les
shll
stos
mov
iret
mov
pop
push
jl
mov
jl
xor
cmp
in
pop
lcall
aam
dec
inc
push
mov
push
ja
repz
lods
adc
xchg
mov
movsb
shl
imul
xchg
lcall
test
adc
push
sbb
push
inc
xor
stos
xchg
jmp
sub
insb
call
cmpsl
mov
jmp
push
jae
in
dec
inc
add
pop
mov
bound
insl
jmp
adc
shrl
xchg
out
mov
xlat
enter
xor
and
ja
or
fsqrt
aam
test
sub
jmp
aaa
out
lret
cmc
cmc
fwait
gs
bound
cmp
xchg
sbb
fstps
inc
insl
add
push
xor
aad
pop
pop
cmp
xchg
aad
lods
test
sbb
loopne
mov
mov
mov
and
fdiv
cmp
mov
stc
or
stos
and
mov
xchg
sub
push
add
outsb
sub
xchg
cltd
lcall
xor
mov
lods
test
loopne
add
mov
shll
mov
pop
shll
and
std
xchg
cmp
inc
fistpll
jnp
cmp
ja
hlt
scas
push
aad
mov
and
mov
dec
jae
dec
jecxz
mov
lods
jmp
cmp
mov
mov
push
mov
lock
pop
and
xchg
sbb
push
ds
cmpsb
sbbb
add
imul
dec
ds
sbb
shll
pop
movsb
push
jo
insb
pop
sahf
es
cmpsl
shrl
xor
int3
sub
mov
jmp
js
mov
test
cmc
call
sbb
movsl
push
mov
rclb
sbb
in
lret
iret
sbb
mov
jle
add
std
or
movsb
jg
jge
int
or
scas
mov
dec
lea
adc
pop
jns
push
js
mov
aad
orb
sbb
sbb
and
mov
xor
rcrb
cs
jl
jp
jae
imulb
inc
cmc
push
mov
and
sub
xchg
sti
cli
cwtl
add
pop
daa
lods
insl
xlat
add
sbb
rorb
xor
fisttpll
popf
or
jl
inc
scas
jb
jnp
dec
adc
iret
jl
int3
xchg
lahf
xchg
lcall
pop
push
insl
and
test
loopne
sub
or
sub
subb
pop
mov
lods
cmp
fistps
push
push
ljmp
mov
pushf
hlt
sbbb
lds
mov
or
adc
xor
aad
xchg
clc
push
inc
xor
and
insl
aad
jge
aaa
push
mov
scas
std
mov
sar
dec
lret
imul
out
sysexit
pop
in
adcl
lea
xchg
scas
pushf
push
in
cmpsb
sub
es
fsubl
out
xor
pop
cmp
jle
sub
mov
sub
jmp
nop
push
fs
mov
sub
cmp
or
mov
rclb
insb
addr16
cmp
adc
out
arpl
cld
sub
imul
add
fcomps
cmc
pmaxub
rcr
sbb
pop
fnstsw
mov
xchg
adcl
je
lret
stos
test
adc
ss
pmaddwd
inc
in
mov
sub
xor
imul
fdivrs
adc
daa
pusha
mov
mov
cmc
iret
icebp
lea
roll
xlat
ljmp
sub
adc
push
xchg
roll
scas
ret
repz
jo
pop
xor
sbb
sbb
stos
sahf
fstl
mov
or
push
cmc
pop
addb
repz
outsl
sbb
add
or
lret
xchg
cltd
lea
inc
jecxz
mov
sub
adc
adc
iret
and
movsl
dec
ret
push
gs
xchg
ret
lods
test
insl
imul
scas
aaa
push
xor
dec
fwait
loopne
or
jne
and
mov
and
fistps
and
jg
lret
mov
sbb
loopne
mov
sub
insl
stos
and
cld
pusha
in
roll
int3
ja
ss
enter
add
pop
pop
ret
push
xor
cld
movsl
cmpsb
mov
ret
testb
sub
in
inc
ss
mov
mov
sti
inc
push
xchg
enter
sbb
add
xor
test
daa
adc
mov
adc
dec
cmpsb
dec
or
pop
stc
in
pop
test
push
out
push
rcll
clc
inc
pop
xor
cmpsl
dec
cmp
sub
pushf
xchg
dec
or
mov
repz
push
fists
mov
out
push
movsb
adc
inc
cmp
sub
mov
testb
mov
push
and
inc
add
out
call
arpl
fcoml
sti
in
fsub
sahf
dec
push
repnz
add
inc
outsl
xchg
in
lods
push
sahf
cld
xorb
iret
dec
sarl
dec
fnstenv
cmp
lock
leave
jmp
cwtl
data16
jnp
lcall
pop
imul
sub
push
xchg
into
sub
mov
popf
cmpsb
scas
iret
xchg
sarb
idiv
inc
dec
pushf
jae
jb
pusha
mov
mov
xor
fmuls
or
and
mov
mov
jp
mov
xchg
or
jne
pushw
or
sbb
add
xor
mov
xlat
lds
fists
testb
dec
dec
out
xor
scas
into
jno
cmp
cmp
lods
fwait
inc
lahf
push
call
xchg
seto
mov
ds
enter
mov
mov
sbb
cli
sbb
or
xor
add
push
xor
insl
sub
movsl
in
jo
pop
pop
xor
jne
and
fidivrs
loop
add
cmpsl
aaa
push
adc
ret
lock
dec
dec
lods
cmp
cmp
lds
pop
cli
push
enter
cmp
in
cmp
and
fucomip
cli
and
dec
xchg
jbe
push
in
gs
testb
sub
xor
add
jb
dec
push
pop
inc
mov
mov
jg
xchg
es
scas
sbb
xor
cmc
in
out
or
mov
push
icebp
scas
addr16
in
push
scas
fsub
pop
pop
push
jnp
fcoml
cmp
nop
lods
jg
push
sub
add
rcr
cltd
lret
cmc
inc
ja
fcoms
les
cmp
test
add
into
popa
mov
push
sub
rclb
call
mov
pop
xor
aam
push
mov
lods
push
mull
lcall
adc
push
jmp
movsl
leave
adc
es
jl
xchg
hlt
call
jmp
ja
inc
out
leave
cmp
mov
popf
cmp
xlat
ror
jp
cs
sub
xchg
hlt
daa
xchg
insb
dec
imul
repnz
popl
das
ds
sbb
mov
in
shll
cmc
jo
push
imul
in
mov
push
out
je
or
pop
scas
cmp
cmc
jge
fwait
out
repnz
dec
cmp
ret
cmp
int3
fstpl
push
leave
adcl
test
rcll
insb
roll
jbe
loop
fdivs
bound
adc
in
lret
jge
cmpsl
movsb
scas
jp
adc
push
fildl
or
inc
rcl
in
aad
push
sbb
mov
fst
jmp
aam
adc
pop
xchg
test
movsl
ss
dec
pusha
mov
lock
mov
out
cmc
jmp
add
or
test
orl
push
xlat
addr16
adc
push
dec
fbld
cld
nop
fcmovne
test
cmp
pop
bnd
sbb
inc
scas
dec
stc
lods
ret
bound
daa
aad
add
andl
je
push
subl
push
jbe
cltd
jns
sub
jl
sub
mov
push
add
lret
inc
je
push
cmp
lds
and
xor
sbb
xchg
jno
xor
out
gs
xchg
js
ja
jbe
lret
outsl
arpl
dec
mov
loopne
xchg
mov
xchg
mov
aam
fcoml
negb
xor
sub
outsb
out
divb
daa
enter
add
mov
mov
in
mov
mov
push
aad
les
add
ret
dec
cld
jns
sub
leave
cmp
shll
out
lods
jns
inc
sub
cmp
lock
cmp
faddl
push
scas
rcll
cmp
ss
cmp
push
sbb
xor
add
inc
loope
sbb
dec
loope
push
cld
loopne
lock
fwait
pop
mov
inc
gs
pop
mov
xchg
insl
jae
mov
mov
fwait
enter
xchg
sub
fldenv
jnp
cwtl
sahf
jle
out
fstpt
repnz
and
mov
mov
subb
shl
push
and
lock
ffree
mov
ljmp
dec
or
addr16
imul
mov
mov
mov
and
xlat
dec
and
xor
sub
push
inc
or
ljmp
and
arpl
lds
insl
jecxz
ss
inc
out
xchg
shl
je
ret
in
das
mov
mov
aaa
fimull
mov
out
mov
xchg
ds
dec
jb
push
cmp
dec
jmp
shrb
mov
jno
lcall
and
xor
imul
sbb
push
cmp
into
jg
mov
xchg
fadds
shll
add
adc
jae
add
or
dec
lock
sub
in
or
dec
sub
add
jmp
pushf
mov
mov
aas
iret
xchg
pop
adc
xchg
and
mov
aad
daa
cmp
jns
xor
dec
in
scas
in
int3
aaa
xor
mov
scas
xchg
fcomip
shrl
scas
int3
sbbl
or
mov
loopne
and
add
inc
mov
cwtl
mov
mov
imul
jo
neg
xchg
inc
mov
ljmp
rcll
lods
btr
testl
pop
push
add
ret
jecxz
lret
jns
daa
aad
jecxz
fidivrs
ret
mov
dec
iret
jno
shrl
dec
fcoms
dec
cmpsb
mov
inc
add
jno
iret
sbbb
stc
xchg
or
fs
mov
xor
pop
mov
mov
scas
sbb
cld
jmp
out
push
call
sbb
stos
sub
and
scas
dec
in
dec
rorl
inc
repz
xchg
cmc
or
mov
ja
les
daa
and
mov
inc
fimull
mov
movl
mov
fisubrs
jp
pop
or
dec
cwtl
sbb
aaa
mov
in
push
add
rcrl
inc
inc
push
add
outsl
add
aaa
and
inc
adc
mov
std
mov
dec
mov
stc
movsl
daa
xchg
cltd
and
push
arpl
add
scas
add
mov
data16
adc
shl
jp
add
sub
xchg
dec
mov
fiadds
les
and
sub
vmovd
andb
mov
subl
or
or
sub
mov
sbb
xchg
scas
movsl
ret
aam
cmpsb
sahf
fwait
scas
cmp
pop
fstpl
fistl
sbb
das
fstpl
push
out
ss
int3
pop
adc
cmp
fs
and
pop
call
or
or
cmpsb
lds
sub
xchg
add
inc
fs
xchg
mov
mov
cltd
insl
js
mov
and
or
dec
jae
outsb
je
lea
fdivp
xchg
push
fistpl
call
push
mov
in
mov
lods
popf
je
mov
jg
xor
stc
lahf
or
push
imul
loopne
mov
bound
inc
mov
pop
push
mov
mov
inc
out
jle
and
test
inc
out
cmpsb
add
dec
std
in
leave
inc
and
dec
mov
xchg
adc
sbb
outsb
fstl
clc
mov
sub
mov
repz
gs
push
or
jbe
mov
gs
inc
sub
push
cmp
jo
inc
mov
ljmp
sub
pop
and
mov
mov
jmp
je
bound
hlt
dec
jno
out
jl
adc
and
fwait
jnp
stc
flds
fcomip
dec
sbb
es
push
ds
inc
fsubs
out
imul
sti
ljmp
stos
adc
pop
sbb
push
or
cmp
out
out
lret
mov
repz
into
sub
sub
sarb
xchg
mov
std
jl
mov
mov
js
jae
fldcw
int3
out
push
fstpt
xchg
shr
jecxz
or
inc
and
and
add
jmp
mov
jne
fbstp
js
ss
inc
push
out
xchg
adc
add
mov
stos
mov
xor
sbb
push
scas
bnd
int3
or
scas
mov
adc
push
out
into
push
mov
add
fwait
fwait
cmp
xchg
cmc
add
data16
jle
pop
popf
aas
or
cltd
fistl
scas
inc
lret
divb
push
sbb
lds
mov
add
inc
add
bound
imul
jmp
jno
add
xchg
sbb
mov
mov
dec
add
sbb
cli
sub
mov
xor
inc
lds
aam
xchg
je
insb
mov
cmc
fnstenv
loop
inc
dec
popa
jno
jge
movsb
inc
dec
je
xchg
cli
push
aaa
sub
lods
mov
xchg
test
mov
inc
roll
lcall
adc
push
inc
jns
mov
icebp
push
repnz
dec
cmc
nop
adc
or
cli
mov
fcomps
cmovb
mov
test
jg
dec
add
or
push
push
sub
cli
cmc
push
pop
ds
sbb
mov
sti
pop
xor
stos
xchg
iret
lea
clc
jne
and
mov
or
fdivs
jno
hlt
jne
mov
adc
mov
adc
push
test
clc
movsb
pop
lret
bndstx
scas
dec
mov
push
mov
and
rcrb
cmpsb
aaa
pop
enter
adc
lret
jb
ds
push
jns
mov
movsb
pop
mov
jne
add
cmp
and
ljmp
push
gs
dec
push
aam
or
jne
dec
fisubs
xor
cmp
lods
fstpl
and
jno
iret
enter
and
rcrl
xor
mov
lods
mov
sti
mov
jnp
dec
cmp
test
lods
in
xchg
push
sbb
sbbb
dec
mov
clc
repnz
daa
jle
pop
and
leave
inc
inc
lds
mov
sarl
cmp
leave
rcl
mov
dec
lret
add
mov
popa
push
pop
mov
sub
insl
insl
dec
ja
jp
std
inc
stc
fisubl
push
dec
loope
mov
leave
cmpsb
jno
orl
cli
aaa
and
loop
adc
pop
ss
jnp
fdivs
xor
mov
aas
test
add
cmc
div
outsl
sbb
inc
ficoml
aam
push
pop
push
sarl
mov
or
data16
sbb
pcmpgtb
out
js
mov
sahf
mov
xchg
cmpsl
aam
vmwrite
xchg
loope
sub
out
in
movsb
mov
push
mov
dec
in
enter
mov
jns
cmpsb
add
insl
push
test
fwait
sbb
jnp
push
call
imull
sahf
push
mov
movsl
dec
dec
fistps
xor
jg
nop
int
aam
mov
xor
inc
fucom
mov
sbbb
ror
arpl
adc
or
dec
loop
fidivrs
or
jno
mov
mov
lds
lds
fwait
lds
xchg
inc
sbb
aad
cwtl
mov
mov
push
lret
xor
fwait
or
mov
jo
fadds
sahf
test
data16
rolb
clc
or
add
outsb
mov
xorl
xchg
pushf
cltd
lock
inc
and
mov
xchg
jmp
dec
sahf
insb
inc
sahf
je
push
xor
xor
aam
out
mov
add
pop
insb
sarb
pop
dec
jge
xchg
pop
scas
mov
mov
into
das
es
ret
sbb
sahf
outsl
xchg
xlat
dec
fidivs
testb
sti
adc
test
fstl
fwait
inc
pop
dec
and
inc
jb
ret
push
out
push
fs
push
fistps
je
repnz
lcall
and
sti
mov
nop
sbb
imul
mov
mov
ret
test
cmc
ljmp
repz
adc
pop
add
sbb
adcb
push
sbb
xor
adc
push
std
into
popa
out
negb
inc
dec
mov
outsl
add
inc
push
inc
mov
icebp
pop
lret
cli
xchg
jno
dec
movsb
adc
mov
inc
les
stos
push
push
in
js
mov
pop
mov
pushf
or
outsl
pop
hlt
pop
sub
lock
cmc
xchg
mov
mov
dec
notb
push
add
add
sub
sti
cld
dec
mov
popf
lods
pop
cmp
or
ret
or
mov
stos
inc
decl
int3
cmp
sbb
pop
movsb
push
nop
lahf
and
inc
mov
ds
ret
data16
fwait
sbbl
push
pop
jle
shlb
inc
xchg
cmp
xchg
or
xchg
mov
call
cmp
dec
push
add
test
sbb
sub
cmc
fcmovnb
or
clc
adc
div
loopne
inc
jecxz
test
pop
cmpsl
lahf
sbbl
sub
cmc
cld
ss
xchg
stc
and
mov
inc
xchg
jecxz
dec
push
mov
shll
jge
mov
xchg
xor
bound
rolb
cli
rcr
xor
popf
push
outsb
sbb
jno
add
xor
cs
loop
and
cmp
xlat
push
jne
aas
icebp
inc
lds
pop
xor
loop
dec
jge
cmp
cli
xchg
push
in
adc
xchg
icebp
scas
les
pop
sub
sbb
mov
adc
or
lods
mov
mov
cmp
imul
push
xor
adc
rcl
mov
hlt
lahf
je
pop
xchg
xchg
dec
xchg
mov
dec
out
jmp
lds
inc
in
iret
push
test
mov
test
call
ja
movsl
xorl
xor
nop
xchg
in
xorl
xor
jecxz
cmp
jl
push
pusha
xchg
mov
pushf
rcll
pusha
mov
jge
js
pop
adc
sub
pop
mov
das
sub
loop
insl
rolb
lret
es
sbb
jns
pop
jl
in
fstl
xchg
fucomp
test
cmpsl
xchg
jle
sub
xchg
aad
and
popa
sub
adc
jge
mov
movsb
sbb
push
fimuls
imul
dec
cmp
cmp
and
aas
orl
rcrl
mov
jae
pop
shll
sub
ds
mov
jecxz
dec
sti
ret
inc
fs
mov
jg
mov
dec
rep
fisttps
inc
aas
jno
lahf
push
push
cmp
addr16
mov
sbb
loope
icebp
push
and
sbb
ds
popf
push
aam
insb
addr16
pop
mov
xchg
pop
push
fsubl
push
inc
movsb
fbstp
cmpsb
pusha
int3
ds
mov
test
lret
lret
das
stos
mov
andb
add
das
xor
mov
push
leave
jb
push
mov
jns
popf
lahf
ret
inc
jp
mov
cmpl
imulb
les
push
xor
mov
pop
stc
std
mov
leave
mov
cmpb
test
push
scas
jmp
mov
xchg
andb
ret
push
cli
and
mov
lods
sbb
add
pop
inc
pop
mov
andb
dec
loope
or
or
stos
and
cmp
add
or
iret
das
mov
stos
loopne
lcall
inc
push
aas
fldcw
cli
fcmovbe
fdiv
push
ja
hlt
sub
insl
mov
popf
out
pop
mov
scas
fninit
iret
arpl
cli
rep
ja
push
inc
jb
push
iret
cmpsb
lret
and
adc
cmp
sub
pop
xchg
dec
mov
sub
cmp
mov
in
cmp
sub
sbb
loopne
adcb
xor
cmp
movsl
pop
int
add
mov
aad
nop
dec
int3
int
push
add
jne
mov
iret
mov
loope
add
sub
dec
push
xchg
movb
sub
mov
pop
inc
or
cmp
mov
jmp
mov
adc
sub
sub
out
pusha
aaa
xchg
xchg
ret
jno
stos
mov
orl
arpl
xchg
xchg
inc
mov
ljmp
sub
mov
jecxz
lods
pop
push
add
mov
addr16
int
shrl
or
push
push
cmp
sbb
and
push
xchg
aad
jae
in
fsubrl
lods
xor
or
cwtl
cli
xchg
lahf
mov
xlat
xchg
mov
mov
test
lods
bound
add
xchg
fcoms
pop
pop
in
inc
fcompl
or
mov
imull
cld
enter
cmp
lods
push
fs
xor
mov
enter
cmp
lret
sub
lcallw
xchg
sahf
sbb
jb
jne
fs
mov
xor
leave
jb
pop
cmp
or
in
push
clc
xchg
pop
hlt
or
lret
cmc
sbb
pop
stc
mov
cmc
push
xchg
mov
pop
xchg
bound
add
or
aaa
sub
ja
sbb
inc
push
or
lret
jmp
pusha
pop
pop
unpcklps
cmc
into
mov
scas
ljmp
push
pop
push
ss
pop
int3
cwtl
nop
and
pop
adc
or
push
orb
movsb
add
inc
jge
xchg
sub
fwait
jbe
jecxz
push
mov
push
pop
ror
jne
sahf
lock
sub
es
out
sbb
and
je
dec
mov
sbb
or
aas
mov
jnp
dec
pushf
movsl
lret
std
jmp
insb
repz
insb
in
push
cmpb
adc
pop
nop
sarb
jb
mov
pop
dec
and
jge
and
daa
addr16
loop
add
outsl
fimull
sub
push
mov
sbb
mov
outsb
push
es
es
push
mov
arpl
sbb
push
imul
scas
sbb
ss
dec
mov
fsts
cmp
dec
jnp
aas
movsl
mov
pop
cmpsl
push
xor
pop
into
imul
jg
xor
or
cs
out
cmc
mov
sbb
shll
orb
fldlg2
inc
pop
xchg
push
es
mov
aad
xor
repz
mov
fidivrl
mov
pop
sarl
mov
stos
push
jg
jl
sti
mov
or
push
mov
push
imul
xor
push
int3
ret
inc
addr16
shl
int
dec
insl
cli
shrl
aad
js
pop
lahf
sti
xlat
mov
mov
jmp
cmp
mov
pop
cli
dec
inc
jns
es
mov
andl
aam
test
xchg
cmovle
cmp
push
push
sbb
sbb
clc
out
ljmp
ja
inc
pop
leave
pop
subb
add
push
in
cmpsl
das
jne
jns
sbb
jnp
in
cwtl
mov
cmp
jb
addr16
lcall
jecxz
insl
in
mov
add
int
lock
push
jnp
in
das
in
mov
push
pop
rdrand
add
and
push
push
jb
movsb
jae
cmpsb
jg
xor
push
cmp
clc
in
sbb
rcrl
cmp
cmp
imul
icebp
flds
js
push
inc
clc
and
jbe
cmp
sbb
adc
inc
stc
push
pop
sub
je
lock
cmp
pushf
mov
pop
push
ret
jo
pop
adc
jo
pop
mov
mov
loop
mov
inc
push
and
fnstcw
dec
lahf
push
outsl
sub
mov
insl
bnd
lds
fidivs
lock
xchg
movsb
movsb
in
dec
xchg
mov
pop
popf
dec
test
pop
stc
cld
jb
les
bound
repz
xor
scas
out
sub
jecxz
push
lds
pop
jno
mov
mov
mov
call
pop
popa
mov
aas
sbb
aas
mov
enter
jno
lea
jl
loopne
cmpsl
iret
inc
lahf
decb
or
push
jo
fisubl
jo
push
mov
ficoms
mov
mov
ret
stc
add
jns
aad
add
sub
adc
xchg
into
addl
jp
adc
clc
or
mov
inc
mov
inc
imul
dec
xor
scas
mov
lahf
cmp
sbb
shlb
sbb
clc
adc
jae
jb
cmc
mov
loopne
aas
cmp
out
xor
xor
out
inc
hlt
int
dec
popa
inc
mov
imul
inc
mov
ret
push
mov
jo
jne
mov
into
jne
cmp
and
add
push
es
pop
cmp
out
popl
sbb
jmp
xor
outsl
data16
lods
fs
outsl
call
and
mov
push
mov
lahf
mov
xor
mov
cli
mov
or
push
lds
movsb
or
xchg
movsl
inc
outsl
in
aam
shlb
add
stos
aaa
mov
jae
sub
loop
lret
jle
scas
leave
mov
fisttps
push
in
xor
lcall
fistps
shrb
push
in
sub
mov
sbb
sbb
push
rcrl
pushf
pusha
xor
fs
sbb
sbb
mov
xchg
push
xchg
lcall
popf
out
aas
stos
and
mov
cmp
rcrb
adc
popf
cmpsb
inc
xchg
xlat
shrb
gs
fldt
push
lods
sbb
leave
cmp
subl
adc
dec
mov
jmp
xchg
sbb
cmp
or
into
scas
cmp
inc
and
pop
rclb
movsb
mov
aam
sub
loopne
xchg
sub
enter
mov
cmpsb
cs
mov
call
adc
lods
dec
cmp
out
out
pop
mov
cli
xchg
in
loopne
dec
insb
call
int
int3
mull
push
inc
mov
xor
dec
adc
cmp
mov
dec
arpl
in
call
jge
mov
es
adcl
or
fs
rclb
jnp
std
enter
lret
xchg
in
shl
xor
sbb
inc
inc
mov
pop
shrb
mov
and
imul
and
fisttpl
aam
pop
sub
fsubr
gs
lds
fcoms
lret
push
xchg
and
push
call
push
data16
mov
cmp
mov
repz
ja
mov
push
arpl
test
jns
in
xlat
aas
stos
mov
cmp
shl
lea
mov
xchg
lea
jno
mov
sub
lods
pusha
loop
lahf
movsl
rcrl
test
xchg
lahf
inc
filds
pop
xor
and
pop
ljmp
stc
inc
aas
cmp
dec
xchg
cli
jns
cmp
push
pop
cmpsb
je
loope
dec
mov
sub
loope
cmp
jmp
or
sarb
ret
dec
xchg
xchg
xchg
sub
aaa
into
sub
or
cmpsb
sub
ds
xlat
push
dec
js
mov
dec
mov
ss
adc
imul
jo
sub
nop
arpl
aam
ror
shrl
mov
fists
lds
mov
jle
pop
xchg
lea
mov
dec
out
test
add
repz
mov
das
imul
es
addr16
jb
lds
cmp
movsb
sub
gs
shlw
ss
add
cltd
dec
cmc
pop
fucomp
icebp
sbb
in
xchg
mov
out
or
and
jnp
lret
pop
outsb
mov
dec
arpl
jo
or
cmp
shll
mov
mov
sar
out
ja
ret
mov
dec
lds
mov
fcomps
sbb
dec
gs
cmpsl
pop
and
enter
lods
ja
sub
cmpsl
and
sbb
pop
outsb
xor
rolb
out
fidivrl
sti
add
xor
std
add
and
sub
pusha
pop
add
pop
stos
mov
adc
and
clc
push
xchg
pop
out
push
movsl
sub
dec
jae
jae
jmp
sub
pop
out
mov
pop
outsb
test
push
mov
negb
jbe
cld
inc
and
inc
or
dec
popf
inc
nop
pop
xor
pusha
push
xor
cmp
ljmp
sub
push
shl
nop
nop
shll
inc
xchg
out
jnp
adc
pop
mov
lret
cli
and
jg
pop
js
cmc
lea
sbb
xor
in
sub
testl
push
cld
or
dec
mov
sbb
push
inc
movl
sbb
and
jle
adc
push
cmp
movsl
add
jl
and
dec
jl
rclb
jle
imul
fldl
or
mov
fs
mov
cmp
ljmp
mov
sbb
lahf
mov
in
outsb
add
hlt
mov
inc
xrelease
rolb
test
pop
jmp
aam
and
addr16
es
pop
inc
lods
fcomps
push
test
rep
cwtl
mov
cmp
subb
xor
mov
sub
xor
push
xor
jnp
in
mov
or
cmpl
aad
inc
mull
movsl
out
mov
jmp
inc
sahf
jne
jl
mov
mov
cltd
sub
out
and
push
or
jl
mov
int3
jbe
jge
fnstsw
or
pop
rorl
fisttps
dec
adc
adc
jmp
aam
push
pop
les
or
scas
insl
ret
xor
int3
push
test
out
loopne
jle
xor
inc
push
push
mov
inc
stos
sbb
push
adcl
and
adc
mov
adc
push
push
sarb
clc
filds
mov
push
sub
push
mov
add
out
popa
jp
adc
sub
gs
imul
rcl
xor
push
push
ficoms
sub
push
inc
ljmp
xchg
fwait
jl
ss
mov
jns
add
repnz
dec
mov
imul
ret
pop
push
movsb
jmp
out
and
push
enter
stos
add
pop
xchg
fsts
into
or
fnstsw
test
mov
arpl
xor
scas
push
test
xor
push
jle
rorl
insb
push
movsl
sbbl
clts
pop
nop
mov
mov
popa
mov
loope
jno
cmpsb
mov
ret
pop
dec
and
popa
mov
js
cmpsl
xor
addb
inc
ror
pop
ret
jle
inc
ficomps
into
cmpsl
cmp
fildll
rcl
in
subl
mov
jmp
loopne
cwtl
lock
outsb
mov
cmp
mov
test
push
cltd
mov
subl
addr16
or
mov
das
popf
loop
and
mov
out
pushf
loop
xchg
call
push
arpl
adc
pop
les
icebp
xor
pop
fwait
mov
mov
and
out
bound
outsb
mov
cmp
inc
cmp
cmp
and
xor
fdivrp
adc
xchg
push
inc
stos
cs
lea
enter
or
adc
inc
sbb
cmp
jmp
fisubs
mov
xor
add
aad
div
daa
sarb
mov
fisubrl
jle
and
mov
ss
sub
les
fdiv
push
int
ja
push
jbe
test
cli
lret
into
rcll
sub
inc
es
sub
nop
push
lock
mov
xchg
cmp
mov
pop
je
sbb
cmp
jge
or
pop
lock
mov
xor
cmpsl
pop
ret
es
popf
dec
push
sub
mov
shrb
jge
nop
lock
sbb
mov
mov
sbb
fs
pop
xor
push
jne
mov
ja
incl
fwait
mov
shrb
sub
testb
stos
pop
out
fistpll
jne
popf
pop
xor
pushf
lock
mov
data16
lret
inc
adc
xchg
gs
pop
mov
sahf
in
mull
mov
sbb
insb
push
lods
fwait
cmp
dec
mov
push
xor
xchg
mov
fldcw
repz
int
outsl
outsb
pop
sbb
outsb
aam
js
inc
fsubrs
adc
outsl
cmpb
mov
jno
jl
dec
dec
push
add
mov
and
fdivrs
and
test
jae
push
pushw
iret
mov
lods
loopne
jecxz
iret
ljmp
xor
std
jb
adc
or
insl
jp
xchg
pop
sbb
aaa
enter
pop
jne
add
subb
jle
out
lea
jns
xchg
mov
mov
mov
jle
enter
or
pop
cltd
sub
sahf
sub
xchg
addr16
sbb
sbb
pop
sub
xchg
mov
or
sbb
sub
fstps
arpl
aas
subl
fadds
into
icebp
mov
xchg
xchg
incb
pop
mov
xchg
insl
add
icebp
jae
sbb
lods
jne
repz
jge
dec
outsl
cmp
mov
pusha
sti
int3
ss
inc
imul
out
int
pop
and
xchg
push
scas
and
push
pop
cmpsl
loope
mov
adc
xor
das
cs
jp
and
and
cmpsb
fisubrs
imul
imul
outsb
dec
jge
cli
or
out
fdivp
lahf
mov
adc
and
jne
daa
mulb
out
cmpsb
movsl
cmc
imul
cmp
xorb
loopne
push
mov
mov
inc
push
fcom
movsl
sbb
push
sub
and
aam
adc
inc
icebp
mov
bound
mov
mov
mov
dec
push
or
cmc
lock
lods
leave
pop
add
cmp
sub
es
jne
fdivl
fldenv
out
outsb
je
nop
cmp
mov
ljmp
mov
imull
pop
dec
pop
cmpb
fcmovnbe
cld
popf
das
push
outsl
stc
or
or
add
or
std
movsb
push
sub
imul
ret
lods
jb
pop
mov
aaa
mov
pop
dec
rol
test
clc
sub
sub
out
xor
pop
fs
xor
mov
pop
jmp
test
leave
fs
shr
jg
dec
mov
scas
xlat
das
das
mov
cmpb
sub
jb
stos
stc
jg
in
cld
cld
and
test
out
jb
lods
jle
aam
dec
cmp
push
loopne
mov
push
jge
popa
adc
sti
test
adc
fidivs
imul
cmp
sbb
jmp
outsl
push
push
fnstenv
mov
shll
js
movsb
out
mov
mov
jnp
cmp
enter
pushf
sub
insb
stc
push
adc
movsl
xchg
adc
and
cld
jmp
call
aad
loopne
pop
subl
enter
cmpsb
add
outsl
out
hlt
dec
cmc
addr16
inc
cmp
es
push
aaa
pusha
mov
ret
pop
and
movsbl
push
je
adc
cmp
dec
mov
mov
xor
inc
shl
lods
mov
jbe
dec
std
sbb
push
xchg
inc
cmp
mov
xor
call
sbb
xchg
push
rcrb
enter
mov
and
imul
inc
or
popf
cltd
xor
shl
adc
xor
xor
outsb
adc
and
mov
sbb
call
sub
sbb
lcall
and
adc
jae
call
fisttpl
push
jmp
popa
push
cmpsl
or
aas
dec
sub
movsl
xor
ss
fwait
xor
test
pop
leave
shlb
in
loop
or
add
sbb
outsb
outsl
inc
add
sahf
pop
outsl
das
lock
lret
sub
mov
das
pop
push
or
add
ja
pop
mov
into
inc
add
mov
xchg
mov
mov
das
xchg
popf
mov
popf
and
xorl
cld
roll
add
int
insb
nop
dec
xchg
jno
sub
dec
sub
ret
es
scas
inc
fcmovb
icebp
sti
sbb
xchg
push
inc
stos
lock
pop
adc
mov
sbb
in
mov
cld
adc
std
dec
fstpl
dec
pop
inc
or
xchg
movb
jle
push
bound
lcall
imul
xchg
adc
add
fwait
inc
and
add
mov
fildl
outsb
pop
mov
imul
insb
cmp
out
test
lock
scas
clc
inc
mov
je
imul
cld
mov
mov
loop
pop
sub
mov
mov
lods
fldl
and
hlt
pop
dec
push
xlat
out
push
pop
or
imul
fmul
ja
js
bound
hlt
dec
add
popa
lret
pop
jnp
push
testb
push
in
mov
xchg
enter
adc
xchg
jmp
iret
mov
sti
mov
outsb
hlt
andl
jg,pn
mov
jecxz
lods
push
or
imull
push
dec
loope
pop
sub
lahf
lea
inc
xchg
xor
cmpsl
pusha
dec
rolb
jbe
push
loopne
cwtl
lds
inc
stos
mov
in
push
xorl
in
inc
dec
insl
daa
sti
xchg
mov
mov
fiaddl
cwtl
add
rcrb
ss
ret
ficomps
dec
xchg
and
jns
mov
dec
sub
mov
loope
aas
sahf
xlat
mov
xchg
inc
mov
cvtdq2ps
jle
rcrl
inc
and
fnstsw
add
aad
imul
gs
sbb
xchg
dec
subb
mov
dec
stos
pcmpeqb
shll
daa
cmc
imul
inc
jl
and
xor
jg
divl
arpl
jecxz
dec
push
daa
sbb
xchg
pop
ds
cmp
imul
lea
jnp
in
or
push
xlat
pusha
lock
clc
shlb
fisttpl
je
iret
mov
pop
adc
repz
mov
dec
sub
ljmp
stos
push
lret
clc
mov
pop
cs
xlat
daa
mov
cltd
je
mov
mov
loope
pop
pop
push
lcall
and
leave
popf
fiaddl
es
fidivrl
xchg
mov
gs
sub
lcall
xchg
pop
mov
int
dec
xchg
push
lahf
ret
push
imulb
jp
imul
inc
jmp
jno
push
push
je,pt
inc
dec
mov
jnp
mov
rcrl
or
mov
gs
push
mov
leave
add
andl
shlb
shl
mov
adc
popa
out
xchg
xchg
mov
cli
jecxz
xor
das
mov
ja
outsb
mov
mov
out
stos
add
xlat
cld
jge
idivb
fisttpll
std
pop
mov
pop
call
ljmp
add
ficoms
aam
sub
sub
enter
jmp
pushl
and
gs
imul
or
sub
lods
call
dec
or
cld
cmp
cltd
cmpsb
sbb
adc
add
pop
mov
lds
pop
mov
ret
mov
cwtl
xchg
daa
pop
rcl
in
adc
and
add
aad
xlat
xor
out
outsl
add
xor
dec
insl
gs
sub
popf
jle
push
popa
aam
pop
negb
and
and
dec
pop
enter
lret
aad
pop
ljmp
mov
xor
ret
cmp
test
and
movsl
sbb
rol
or
inc
rcr
gs
or
adc
mov
xchg
jmp
cltd
je
mov
sub
icebp
loop
pushf
ja
stc
rorl
push
test
push
or
movl
insl
cwtl
test
mov
or
cmp
push
shll
sbb
inc
and
jno
add
mov
jns
shl
mov
pop
dec
cmp
inc
mov
pop
out
out
jp
add
or
add
inc
fildll
iret
cmc
xchg
add
cmp
lcall
cld
adc
ret
adc
test
push
js
xor
cli
cmpsl
dec
sub
addr16
adc
outsb
jg
dec
mov
xchg
repz
push
popf
cmp
and
test
mov
data16
js
shrl
dec
xorl
imul
sub
popa
mov
mov
add
and
mov
jecxz
adc
mov
in
push
test
out
inc
adc
ss
outsl
adc
jnp
test
in
andb
sub
leave
sbb
adc
testl
dec
es
inc
inc
call
mov
pusha
cmp
sbb
mov
cmovp
mov
mov
iret
adc
mov
add
add
cltd
repnz
inc
arpl
frstor
pop
cmp
addr16
lcall
cltd
addr16
cmp
mov
xor
cwtl
xchg
mov
sbb
jbe
bound
adc
in
dec
cmp
mov
pop
repz
lea
cmpsl
cs
push
mov
push
imul
and
addl
dec
mov
in
and
push
xchg
aas
lahf
sub
movsl
rdmsr
sub
push
jmp
gs
lock
in
imul
jnp
xchg
mov
ljmp
pop
mov
imul
daa
sbb
push
mov
or
xchg
push
push
mov
or
or
clc
and
or
adc
leave
push
and
and
xor
add
inc
aam
into
divb
dec
shl
dec
push
dec
and
mov
leave
pop
push
and
or
int3
int3
pop
test
adc
outsl
js
nop
cli
ss
dec
out
test
mov
outsb
mov
lods
pop
movsb
adc
fnstcw
faddl
ret
cmpsl
adc
stc
and
shl
andb
mov
add
push
jne
neg
lret
xor
xor
arpl
jmp
sub
push
fstps
lret
mov
xchg
inc
push
aas
cs
or
push
mov
roll
push
negb
es
lcall
jae
mov
inc
xlat
pop
mov
daa
push
adc
cmc
outsl
out
adc
or
dec
rclb
xor
cli
dec
push
pop
cld
sbb
sbb
xor
shrl
lods
fprem
cmp
sbb
jns
fnsave
push
in
adc
pushf
stos
xchg
jecxz
addr16
int
mov
jmp
nop
je
popa
outsb
add
stos
fwait
dec
jnp
or
adc
lods
stc
dec
hlt
fwait
leave
hlt
xchg
in
dec
mov
enter
cmpsl
stc
sbb
jnp
xor
sub
imul
leave
addr16
adc
and
or
pop
ljmp
mov
loopne
cli
push
popa
jge
out
inc
mov
sub
addb
mov
movb
sub
aaa
dec
lret
icebp
add
xchg
lods
ret
cmp
rcr
cmp
lods
mov
cmp
stos
or
popa
ret
push
push
cli
inc
or
add
dec
jae
xchg
sub
aaa
sbb
pop
pop
fimull
je
js
stos
mov
add
xlat
inc
dec
xor
stc
out
dec
push
enter
cmp
and
nop
push
adc
add
jae
sub
sti
mov
push
push
sub
imul
inc
out
ja
pop
lock
popa
push
mov
xchg
add
push
fwait
jl
lea
mov
movsl
mov
insb
outsb
xchg
call
leave
push
aas
mov
cs
push
sbb
bswap
out
insb
adc
out
shll
in
stc
fnsave
test
xor
sbb
sbb
push
jne
pop
gs
cmpsb
push
lcall
popf
cmc
cmp
xor
mov
fs
dec
out
dec
cmp
int3
ja
pop
mov
nop
pushf
xlat
cmp
cmc
inc
push
int
lea
sbb
cmp
subb
cmp
enter
dec
cli
int3
jae
lods
or
cmp
sarb
pop
mov
jne
cmp
fcomi
sub
sub
cld
popa
cmpsl
lret
inc
aam
or
adc
lret
int3
xchg
pop
cmp
sub
sub
and
idiv
pop
jae
push
fcom
xor
insl
fs
in
scas
mov
enter
mov
fsubl
sbb
cs
sbb
imul
sub
or
sub
in
daa
dec
sub
push
imul
cmpsb
shlb
inc
xchg
push
sbb
xor
std
subb
lods
add
out
lcall
into
jnp
test
mov
or
mov
repz
and
cli
cmp
inc
jb
mov
aad
xchg
inc
cmp
push
test
lcall
xchg
or
jp
clc
push
pusha
mov
nop
mov
jo
rol
cmc
popf
dec
inc
xchg
mov
inc
dec
fidivrl
shrl
lods
bound
bound
xchg
out
push
sub
push
jns
iret
loopne
fisttpl
cmp
cmp
inc
jl
or
inc
enter
inc
jnp
or
jae
popa
mov
inc
sub
mov
mov
movsl
cmpsl
repnz
mov
scas
ss
out
sahf
es
icebp
fcom
cli
negb
gs
js
andl
ds
fsubl
popf
inc
loop
movsb
lea
xor
jmp
and
lock
pop
sti
or
test
cmp
push
mov
dec
add
cli
cwtl
mov
adc
xor
or
sbb
cmp
inc
pop
cmp
pop
out
dec
lods
outsb
cmp
cld
cmpsb
mov
fs
add
subw
fwait
mov
je
scas
lods
stc
pop
pop
or
popa
xor
and
fsts
iret
push
shr
pop
mov
xor
subl
sti
mov
cmp
sbb
cli
test
xchg
test
cmpsl
in
les
mov
mov
sub
jecxz
cmp
stos
inc
aad
shrl
data16
mov
xor
in
jge
loope
push
sbb
aad
jp
popa
mov
je
test
jae
js
ja
xor
jbe
rolb
aad
sub
fcomip
filds
inc
clc
xor
aaa
aam
lret
ret
inc
aas
ja
cmpsb
pop
mov
cs
fmull
push
cmpb
jp
ja
inc
jnp
sbbb
hlt
pop
adc
inc
aad
out
adc
sbb
mov
push
adc
pop
cmp
out
mov
jmp
mov
call
dec
inc
es
jl
aad
shll
mov
lds
rol
vsqrtps
mov
aam
adc
mov
dec
sub
jmp
mov
xor
repnz
imull
sub
sbb
js
lahf
cmp
sub
lahf
jo
or
aas
aaa
push
mov
or
mov
loop
pop
pop
rcr
sbb
jns
enter
inc
and
xor
mov
xor
jl
out
mov
xchg
xor
and
aaa
out
or
adc
cmp
out
cmpsl
movsl
push
adc
xchg
ret
rorb
aas
push
and
cs
sbb
cmc
sub
fdiv
je
pop
sub
out
add
mov
addr16
negb
cmc
push
cmp
dec
cmpsb
jnp
mov
cmp
pop
icebp
xchg
insl
jg
push
jp
mov
es
cmp
test
pop
bound
and
das
adc
je
test
fwait
mov
jnp
repz
jmp
and
add
out
lcall
out
aaa
int
push
mov
data16
cli
test
pop
movsl
jmp
xchg
xchg
pop
dec
push
mov
inc
sarb
shlb
pusha
mov
mov
or
xchg
arpl
loopne
pop
mov
xor
ficoms
and
mov
xor
scas
jae
das
inc
cmp
xchg
xor
out
mov
or
push
std
push
stos
shlb
inc
insb
push
jge
jae
inc
stc
aas
pop
push
rol
sub
movsb
inc
les
clc
xchg
mov
push
repnz
cmp
std
jl
lea
or
insb
dec
push
dec
jecxz
mov
cltd
cmp
mov
sub
insb
lds
pushf
push
jne
adc
cltd
jbe
push
xchg
bound
sub
movsl
pop
mov
jne
ljmp
push
xchg
dec
fstpt
push
pop
push
or
in
jecxz
in
mov
and
mov
sbb
push
fsts
repnz
sub
or
sbb
aaa
mov
sbb
loope
popf
cmpsl
int
mov
rcl
mov
decb
rclb
into
xor
fsubs
les
test
push
pop
push
push
cs
and
mov
out
mov
sbb
xchg
mov
movsb
and
sbb
lock
pop
test
out
mov
insb
mov
xchg
mov
lea
lcall
xchg
and
rorl
ds
inc
cmpsl
cmp
push
ja
into
mov
shrb
ret
leave
add
sbb
sahf
jns
dec
nop
or
and
xor
ja
or
adc
bound
es
mov
xlat
movsl
add
daa
pop
xchg
mov
xorb
or
out
icebp
xchg
aaa
out
ljmp
sbb
sti
ret
outsl
es
movsl
repnz
add
mov
ss
ret
mov
pusha
mov
add
push
mov
inc
iret
mov
fabs
sbb
add
jg
lods
xchg
mov
es
movsl
xchg
xchg
jnp
cmp
inc
int3
mov
inc
int3
addr16
iret
xchg
fnstsw
mov
jmp
or
test
mov
insb
sbb
sbb
dec
add
stos
lret
out
jnp
add
into
aas
jae
dec
daa
cmp
inc
dec
mov
xchg
mov
aam
jae
sub
dec
jb
loopne
out
mov
sbb
sarb
aaa
jb
leave
sub
in
pop
stos
push
and
push
inc
sub
hlt
xlat
cltd
int3
mov
and
cli
fsubrs
ret
loopne
bound
sbb
sarb
xchg
out
add
xchg
cmp
cmc
and
pop
fistl
sti
sbb
dec
je
jbe
push
in
imul
rol
cmpsb
xor
out
outsl
inc
cmp
test
jp
adc
cmp
sti
and
and
cmpsl
adc
out
sub
mov
or
pop
cmp
fsubrp
loopne
into
stc
in
lock
mov
push
je
scas
mov
sbb
lret
jmp
iret
xorl
popf
xor
or
and
lret
fnstsw
dec
mov
dec
sbb
pop
cmpsl
lcall
pop
push
push
adc
pusha
mov
fld
xor
adc
or
psubw
jle
pop
sar
and
insl
sbb
cmpsl
mov
push
add
jae
mov
push
repnz
cmc
out
mov
inc
mov
sahf
jl
call
js
pop
mov
pusha
test
ja
adc
popa
add
mov
cltd
inc
jbe
mov
aas
mov
enter
adc
int3
sahf
addb
sub
iret
test
mov
dec
or
push
cli
ret
xchg
shlb
lea
xor
lds
push
sbb
cmp
xor
mov
jg
bound
xchg
in
adc
testb
scas
mov
sbb
cmp
in
xchg
ds
mov
xchg
test
xor
clc
das
cmpl
lods
rcrl
lods
jp
enter
mov
mov
mov
sub
push
fwait
shll
fcmovbe
movsl
sbb
nop
es
pop
push
or
push
inc
shlb
inc
pop
adc
add
jne
cmp
lret
xor
jns
cmp
dec
pop
jl
ljmp
mov
xchg
jecxz
aam
pop
xor
gs
test
pushf
sub
ret
add
mov
push
iret
rcrl
dec
test
mov
int
push
mov
fucomi
or
cwtl
out
dec
add
xchg
mov
adc
sti
push
leave
insl
inc
jmp
negl
and
dec
push
mov
or
mov
clc
mov
xchg
icebp
imul
out
push
test
adc
clc
xchg
jne
xchg
jne
enter
notb
dec
sub
fldenv
xor
mov
adc
mov
and
adc
cltd
or
cltd
push
test
rcll
call
xchg
sub
and
popa
aad
clc
jp
mov
mov
jmp
push
xchg
sub
push
scas
icebp
mov
jae
add
aas
sahf
jno
cmpl
stos
and
cmp
and
jp
scas
jge
push
in
and
add
inc
push
and
ror
xchg
xor
xor
pop
movsl
xchg
inc
inc
adcb
loop
imul
ficompl
test
mov
and
xchg
xchg
xchg
xlat
popl
cltd
loopne
dec
jle
and
aam
fcomps
xchg
add
xchg
inc
test
andl
mov
xchg
mov
xor
orl
adc
aad
clc
push
repnz
pop
cld
mov
mov
push
pop
and
pop
pop
mov
das
ja
and
iret
push
es
jno
xchg
movsl
test
outsl
and
subl
test
ret
push
lea
pusha
out
cmp
inc
inc
or
inc
ret
cmc
fcmovne
inc
int
fldenv
filds
test
in
test
loop
mov
fldenv
add
cmp
aas
popa
mov
xchg
gs
les
test
inc
mov
push
nop
mov
lea
js
sub
ficoms
clc
mov
sbb
incb
xchg
ret
fs
cmp
fsubrs
pop
lahf
or
adc
outsb
popf
fnstsw
loope
cmp
xor
cmp
sub
xchg
jg,pn
in
aad
imul
xor
push
cmp
push
jg
pop
jnp
out
inc
stos
dec
add
sarl
cmp
sub
pusha
gs
mov
imul
cmp
inc
mov
out
mov
fdivr
cmc
add
lahf
gs
pop
fistps
pop
filds
sub
sub
mulb
inc
mov
mov
cmp
jg
pushf
int
or
cmp
mov
xor
mov
push
xchg
push
xchg
cmpsb
add
jo
adc
sbb
stos
fiaddl
test
sbb
cmp
mov
fisttps
mov
xlat
jae
xchg
dec
movsb
repnz
in
lahf
mov
mov
test
stos
mov
jne
mov
clc
lea
or
cmp
add
sbb
inc
lret
lock
shll
loop
sbb
xor
mov
sub
lds
push
sbbb
shll
jecxz
std
dec
mov
dec
dec
push
in
clc
xchg
mov
jg
leave
xor
jns
xor
or
jl
lods
add
pop
call
pop
sbb
inc
dec
mov
mov
sbb
iret
insl
mov
add
lds
cmpsb
enter
popa
nop
cmc
or
cmp
testl
cli
ljmp
add
mov
cmc
wrmsr
gs
in
and
loope
push
clc
cmp
loope
test
insl
dec
dec
test
or
adc
stc
ret
xor
cmp
xchg
cli
mov
ja
sti
fisubs
and
and
push
loopne
xlat
jecxz
popa
into
lea
mov
mov
push
push
cmp
mov
in
aaa
push
mov
pop
unpcklps
mov
inc
popa
sbb
inc
jecxz
mov
jmp
test
cs
pop
mov
gs
pop
cs
sarb
inc
js
je
hlt
in
stc
jl
and
xchg
loopne
lahf
or
xor
mov
xlat
sub
mov
stc
jmp
cmc
mov
scas
pusha
sub
and
icebp
lds
xchg
mov
dec
xor
xor
jnp
mov
sbb
andl
bound
pop
mov
add
add
mov
xchg
dec
xchg
push
jns
dec
jo
or
cli
push
imul
shll
dec
inc
and
aad
push
leave
fstpl
jmp
dec
fistpl
fwait
out
push
outsl
inc
sub
inc
pop
into
daa
or
xor
test
in
push
pop
sbb
xor
xor
mov
pop
adc
fdivrl
pop
pop
and
sbb
shll
xor
iret
jb
pop
push
das
sub
mov
int
and
sbb
nop
push
dec
lret
inc
pop
inc
ret
rcrl
aam
decb
mov
pop
in
loopne
pushf
jmp
jmp
mov
movsl
ss
xchg
push
push
add
and
mov
leave
std
neg
push
insb
incl
add
mov
lret
div
xor
add
pop
xchg
data16
xchg
inc
sub
dec
jnp
pop
pop
mov
add
in
insb
push
and
insl
fcoml
add
add
cld
mov
jno
sub
lcall
sub
mov
ss
stos
in
dec
fs
outsl
pusha
mov
mov
inc
std
jb
aad
xchg
mov
jbe
add
scas
push
push
pop
fsubp
cmp
xchg
inc
jg
shll
addr16
inc
nop
repz
iret
jle
lahf
dec
sub
dec
mov
fdiv
jg
mov
scas
sarb
cmp
int
dec
pop
lds
ds
inc
xor
or
stos
aad
aad
jnp
and
dec
mov
mov
loop
mov
es
inc
jnp
int3
adc
stos
cmp
xchg
cmp
jbe
mov
inc
fstpt
ficompl
mov
dec
mov
pop
repnz
shrl
lea
testl
loope
sahf
lds
push
and
xchg
xor
inc
lahf
lods
sbb
divb
ja
test
ja
leave
sub
or
div
lock
arpl
jecxz
movsb
rcrb
mov
nop
movsb
clc
mov
sar
dec
inc
mov
repz
daa
xor
int3
out
push
add
inc
cmp
repz
les
test
jo
dec
xchg
jb
jmp
fisubrs
mov
push
scas
in
mov
jmp
adc
lcall
popf
lret
mov
xchg
dec
ljmp
or
addl
cmp
dec
mov
mov
andl
or
in
or
cmp
rorl
data16
pop
out
mov
jnp
xlat
das
or
lods
xor
sbb
ficomps
cli
mov
mov
mov
outsl
popf
scas
inc
pop
outsb
pop
stc
out
mov
mov
incb
ljmp
pop
scas
sbb
cli
out
stos
jle
push
dec
adc
adcl
jne
std
xchg
ja
int
or
pop
pop
sbb
add
cmp
pop
lods
mov
mov
or
mov
ret
fs
aas
mov
inc
imul
lods
xor
je
sbb
jg
sbb
dec
mov
sub
cld
push
or
cmc
xor
sub
pop
gs
clc
scas
mov
in
push
fdivp
mov
xchg
xor
loope
rorl
push
hlt
and
mov
popf
jb
pop
mov
rcll
adc
jne
sub
sub
dec
jo
push
sbb
jecxz
enter
xchg
rcrb
add
pop
xchg
or
into
sbb
les
lcall
clc
pop
idiv
cmp
das
and
adc
inc
lcall
sub
aam
in
mov
std
fbld
cltd
add
insb
mov
adc
jno
inc
pop
pop
in
xchg
push
jb
out
xor
aam
inc
xor
stos
xchg
push
in
pop
out
push
mov
js
mov
sub
sar
pop
cmp
cld
or
in
push
xchg
testl
ret
cwtl
daa
gs
cmp
in
aam
xchg
inc
adc
pop
jmp
push
test
fwait
cmp
jae
or
fnstenv
adc
push
mov
xchg
out
negl
les
lds
jo
addl
shrb
mov
mov
cmp
cmp
jnp
loopne
add
add
mov
pushl
push
rol
jl
inc
dec
add
fisubs
dec
fisttpll
add
xor
shl
iret
mov
sub
in
out
push
xchg
mov
mov
in
cmp
pop
ds
adc
push
inc
push
inc
repnz
es
push
and
inc
fsubl
out
mov
incl
out
inc
cmp
push
in
sbb
cmp
sub
stc
test
orl
in
mov
hlt
or
arpl
jge
pop
and
ret
adc
inc
jo
pop
cmpb
lahf
shll
push
repz
mov
mov
scas
fs
mov
push
sbb
call
dec
fdivl
loopne
shrl
fcmovnbe
icebp
mov
sbb
lret
cmp
push
dec
sarl
cmp
ljmp
je
sub
mov
shrb
test
jns
pop
pop
push
mov
add
in
ret
ret
cmp
push
ror
pop
xlat
jge
jo
imul
inc
xor
aas
in
and
and
lret
jecxz
call
mov
lds
and
add
mov
cltd
mov
mov
push
mov
data16
xchg
mov
pop
in
pop
dec
xor
push
jns
cli
std
mov
dec
fisttps
jle
mov
mov
push
cmp
int
pop
mov
lcall
dec
inc
cwtl
int
fs
rol
or
xor
push
cltd
xor
mov
addb
icebp
inc
adc
inc
stos
and
push
fmuls
hlt
xchg
mov
push
insl
aas
jb
push
dec
add
xor
push
stc
jle
fs
scas
xchg
pop
movsb
hlt
int
mov
mov
mov
and
cmpl
in
outsl
loop
cmovne
clc
mov
cs
jb
dec
mov
icebp
sub
clc
jg,pt
adc
enter
inc
sbb
movl
sub
movsl
into
lahf
or
mov
movsb
enter
cmp
shlb
out
pop
sbb
inc
push
adc
mov
lcall
pop
daa
adc
mov
shlb
push
inc
mov
data16
daa
test
scas
pop
cmp
xchg
hlt
xchg
sti
scas
xor
sub
out
jp
das
stc
xchg
fiadds
stos
xchg
push
js
cmc
mov
add
mov
call
sbb
mov
je
sbb
dec
shlb
add
stos
popa
push
xor
xchg
sub
clc
jge
outsb
aas
jnp
notl
mov
cmc
xchg
shll
int3
add
xchg
jo
stos
fcmovne
andb
lahf
jno
in
int3
xlat
stos
out
jl
cmpsb
inc
xor
loop
lahf
mov
cmpsb
or
and
sbb
fnstenv
mov
out
sbb
fimull
es
cmpsl
mov
pop
xor
iret
movsb
sbb
aas
push
or
xchg
out
xor
ror
fisubrl
sub
fldenv
pop
cmp
leave
xor
xor
rcrb
iret
mov
push
roll
xchg
push
lds
shll
xchg
cli
jecxz
xor
insl
or
push
xchg
idivl
int3
jge
mov
out
mov
push
lahf
test
stos
in
fdivl
push
jnp
and
sbbb
xchg
dec
pop
sub
int
and
test
sbb
rorb
popa
inc
ficompl
icebp
out
cmp
arpl
jnp
and
sbb
ljmp
inc
leave
das
xor
mov
rcr
lock
sbb
bound
subb
bound
ss
dec
sub
jbe
mov
ds
mov
jne
mov
test
pop
lret
cmp
add
in
cmp
loop
fisubs
scas
mov
lds
jl
mov
pop
fists
pop
and
loop
das
add
ss
sub
ficomps
test
out
pushl
or
jns
mov
sbb
push
adc
cmp
frstor
ror
push
stos
pop
repz
dec
clc
loope
arpl
push
loopne
push
cwtl
push
and
lea
sub
out
xchg
lret
lods
xor
mov
mov
dec
ja
out
xchg
ds
adc
js
jae
sahf
mov
sbb
mov
popa
add
in
ret
fsts
jl
orb
cmpsb
mov
xchg
sahf
neg
aad
pop
mov
cmp
cltd
addb
mov
mov
inc
mov
ljmp
add
sbb
call
jmp
mov
mov
jae
lods
push
mov
inc
or
sbb
ss
in
mov
fidivl
mov
call
andb
mov
daa
add
ljmp
jp
iret
stos
mov
pop
adc
std
jge
out
cwtl
jg
mov
push
sahf
cmp
inc
bound
loop
inc
lods
fs
mov
movsl
xor
dec
in
or
inc
movsb
push
cmp
jno
insb
int
stos
xchg
and
dec
inc
movsb
ja
jp
cmp
loop
adc
inc
fldt
xchg
lahf
add
lahf
dec
cmpsb
loope
sar
mov
xchg
aad
in
sahf
pushf
in
jno
inc
cmpsb
xchg
insl
push
push
push
jge
push
stos
push
mov
std
mov
dec
push
mov
out
fldt
popf
cmpsb
sar
xchg
loope
mov
dec
xchg
xchg
xor
sbb
mov
cs
xchg
pop
testl
lahf
mov
add
scas
and
jae
inc
push
mov
repnz
pop
pop
dec
test
push
das
add
mov
pop
xchg
sbb
pop
mov
dec
inc
mov
or
xchg
or
data16
pushf
xor
push
loop
lods
adc
adc
out
sbb
movb
fnsave
nop
and
xor
pop
jecxz
mov
in
and
je
icebp
mov
xchg
pop
add
movsb
xor
sahf
movsb
ljmp
out
dec
push
aaa
push
test
jns
fidivl
xchg
add
push
jecxz
push
sub
inc
dec
in
dec
mov
loopne
vcvtsd2si
or
ss
repz
outsl
jl
scas
out
inc
in
loope
or
lock
scas
xor
clc
xor
out
inc
fs
test
push
or
popa
out
mov
xchg
push
sbb
in
adcl
js
outsb
stos
mov
cmp
sub
mov
int
enter
jne
push
mov
shlb
lret
mov
jg
add
cmp
xchg
sbb
mov
mov
shlb
add
jbe
int
scas
pop
cld
xchg
mov
outsl
fstps
mov
fwait
aad
lret
idivb
add
fldl
xor
int
or
push
add
sub
insb
test
adc
cmp
jle
arpl
sbb
and
sti
repnz
and
and
aad
pusha
loopne
aaa
push
or
sub
mov
and
jge
dec
push
insb
dec
or
gs
fcmovb
push
xchg
int3
sbb
je
inc
push
popf
cmc
mov
and
or
dec
dec
lret
loope
int
fiadds
jmp
cmp
aam
mov
sbb
cmp
push
out
mov
fwait
mov
sbb
movnti
jmp
out
jecxz
imull
push
insb
fs
mov
cmpsb
inc
movsb
mov
fwait
cmp
cmpsl
aad
out
inc
aas
jno
xor
and
lods
dec
dec
sub
jns
push
rcl
sbb
pop
stos
sub
xlat
sbb
adc
fwait
inc
push
and
jb
decl
pop
push
mov
xchg
fisubrs
push
arpl
ljmp
inc
testb
movsb
sbb
pop
aad
insb
and
xor
and
inc
mov
push
leave
aaa
inc
jg
mov
leave
out
mov
push
les
mov
xor
jmp
adc
movsl
clc
out
daa
mov
fidivl
jne
cs
aaa
stos
add
hlt
mov
lcall
cmp
shrl
pop
bnd
loop
and
es
sub
sub
dec
ss
push
test
sbbl
sub
mov
aam
stos
push
add
pop
stc
lods
cld
inc
sti
out
mov
ret
mov
cmpsl
sub
mov
dec
sahf
jp
adc
aad
cmpsb
stc
hlt
xlat
jge
lret
sub
xchg
xor
xchg
fdivl
lods
sbb
mov
aad
cmp
add
into
lods
bound
xchg
fsubp
lahf
stc
mov
adc
pop
lahf
movsl
mov
idivb
xchg
fildl
sbb
loop
cld
pop
in
inc
adc
xchg
movsb
sub
pop
mov
mov
dec
pop
sbb
test
xchg
lods
pop
loope
clc
je
shr
loop
cmp
imul
repnz
fsubs
jl
lds
vpcmpgtw
cmp
pop
sub
mov
inc
clc
dec
xchg
xchg
scas
jle
mov
mov
aas
js
push
jns
repnz
int3
gs
dec
insb
shr
cmp
lods
mov
push
mov
xorl
jmp
add
imul
hlt
jns
cmpsb
jbe
popa
mov
in
in
mov
jno
jbe
jb
shll
push
sbb
sub
ds
jle
or
bsf
push
cmp
pop
add
ja
sbb
mov
lea
inc
inc
out
notb
sbb
out
cmpsb
pop
or
fists
pop
das
in
popl
cmc
addr16
sbb
andb
pop
mov
sbbl
and
cmp
fwait
int3
out
js
dec
icebp
and
cltd
add
push
inc
inc
fdivr
jns
mov
call
ja
fwait
scas
ds
xor
adc
in
cmc
imul
add
add
pop
xor
stc
mov
dec
pop
lcall
out
pop
mov
mov
jg
lea
je
inc
lea
daa
fwait
mov
test
cltd
push
push
mov
mov
xor
pop
mov
dec
lret
and
push
lock
test
sbb
es
jge
sub
push
jp
stos
push
nop
or
mov
out
test
sbb
movsb
insb
push
xchg
cwtl
or
shl
jl
push
mov
mov
add
fsts
fists
mov
mov
fstpt
push
imul
arpl
mov
or
in
lods
lods
outsb
mov
sbb
loopne
push
xor
in
popf
fbstp
mov
popf
int
jne
push
sbb
add
rcll
mov
std
xchg
fmul
xor
nop
inc
lret
pop
or
and
loopne
or
lahf
jge
dec
inc
scas
scas
push
pop
mov
xor
sarl
in
push
push
stc
adc
scas
cs
xchg
dec
pop
scas
push
into
adc
adc
pop
inc
push
stos
lret
xchg
push
rcrl
addr16
sahf
test
mov
lcall
insl
xor
sbb
cmc
push
dec
lods
and
xchg
je
mov
test
int3
sbb
cmpsl
xor
fisttpll
mov
arpl
dec
fidivrl
fdivr
int
mov
in
int3
jae
adc
xorl
and
lret
clc
xchg
jl
xor
pop
mull
orb
dec
sub
iret
sahf
popf
xchg
arpl
loop
aad
add
or
inc
scas
pop
stc
fsubs
mov
xchg
je
int3
stos
shll
mov
xor
jo
rorl
mov
cwtl
ja
mov
test
xor
pop
mov
xchg
pop
roll
cmpsl
in
push
jb
out
loope
sahf
xchg
sub
fwait
dec
push
pop
sbb
adc
test
ret
push
pop
cmpsb
shlb
pushf
adc
add
push
fcomps
hlt
scas
out
mov
call
mov
sti
cmpsl
push
scas
pop
jb
popa
js
aam
xchg
lcall
scas
out
test
jbe
sahf
leave
cwtl
and
outsl
mov
xchg
mov
sbb
pop
jle
fistl
out
jo
xor
jnp
adc
xchg
or
add
xchg
addr16
in
rorl
mov
daa
jecxz
cltd
decb
out
push
ret
xchg
clc
into
mov
sbb
xor
lahf
or
pop
jo
pop
imul
dec
jecxz
dec
pop
lret
gs
add
mov
lods
bound
sub
fisttpl
imul
invd
sbb
sbb
in
scas
add
mov
jbe
rcl
and
sbb
cmp
movsb
inc
aaa
and
and
dec
pop
cld
inc
and
sahf
pop
add
push
xchg
inc
xchg
jmp
fwait
loop
iret
imul
xor
fs
nop
movsl
stc
faddl
jle
pop
popa
dec
or
imul
pop
sub
fnsave
pop
inc
push
adc
mov
push
sbb
xor
sbb
or
sub
mov
jnp
xchg
xor
cmp
pop
mov
mov
outsl
stc
pop
mov
repz
fstl
adc
jecxz
fisttpll
xchg
jmp
jmp
lcall
adc
popl
add
pop
add
pop
jb
sbb
inc
sub
stc
aad
loopne
movsb
sbb
iret
or
into
mov
pop
lahf
cwtl
rsm
push
jo
dec
mov
adc
in
int3
push
mov
int
fbld
xchg
lret
jb
inc
cwtl
jmp
mov
inc
mov
rcrb
jge
inc
lock
mov
out
push
push
push
dec
sub
mov
mov
jle
add
inc
mov
or
ret
pushf
out
dec
cmpsb
lods
dec
loope
jns
add
xor
mov
pop
rorl
dec
jecxz
push
mov
cmp
stos
mov
bound
sbb
sahf
xchg
mov
fimuls
lcall
lock
clc
mov
imul
or
pushf
out
inc
push
push
out
fisubs
jb
jno
in
gs
flds
push
adc
adc
cmpsb
mov
aaa
xorl
pop
xchg
sub
loope
outsl
fbld
test
orb
mov
pop
fisttps
faddl
mov
mov
rcrl
subl
sub
pop
add
xor
call
push
sbb
sub
xor
daa
sbb
pop
mov
lcall
popa
dec
sbb
or
test
fxch
mov
fimull
and
xchg
mov
insl
push
incl
adc
xchg
rolb
sub
fbld
adc
cs
xor
fs
fisttps
sbb
cmovg
or
pop
push
jl
mov
jb
pop
repz
fldt
test
jne
aad
iret
paddb
clc
lret
sub
jns
jnp
adc
and
out
jmp
sbb
jge
in
jbe
std
aaa
jne
in
incl
jl
loope
test
adcl
rorb
jbe
out
mov
movsb
or
icebp
adc
cmpsb
lods
movl
mov
inc
imul
ret
sbb
sarb
addl
mov
push
fcoml
xchg
mov
mov
test
movsl
call
mov
ss
stos
sub
scas
fidivs
lock
pop
fiadds
sahf
add
adc
divb
sub
mov
and
bound
inc
adc
xor
mov
add
scas
pop
sti
negb
pop
mov
mov
adc
push
rcr
mov
testl
in
mov
mov
subb
daa
xor
pop
xor
cwtl
cld
cld
mov
lods
ret
mov
bound
pop
push
and
fwait
cmp
pop
and
xchg
cmp
lret
xor
sbb
xor
push
or
aad
jae
inc
aaa
inc
cmc
stc
in
mov
dec
mov
daa
sar
or
es
inc
mov
pushf
ja
sub
test
sub
test
cmp
and
push
out
pop
aas
cmpsb
cmpsl
lods
add
xchg
aam
dec
fincstp
jg
nop
xor
mov
addr16
sub
xor
rclb
addr16
mov
and
cmp
out
mov
mov
mov
pusha
fwait
push
lret
sbb
out
mov
in
add
cld
jae
out
fsubs
aas
push
xchg
in
adc
out
out
xchg
es
push
repz
addb
adc
or
jns
sub
scas
mov
mov
nop
adc
outsl
dec
cmp
mov
cmc
and
jnp
sbb
push
dec
arpl
mov
adc
xchg
inc
pop
mov
lahf
adc
out
neg
ret
lret
fwait
stos
test
jb
pop
out
mov
push
mov
dec
ss
or
sbb
stos
sbb
inc
xchg
shll
dec
mov
mov
mov
sbb
in
inc
ret
frstor
mov
jg
inc
dec
jbe
and
fnsave
jecxz
mov
lret
adc
add
mov
mov
inc
cwtl
add
sbb
insb
push
mov
andb
adc
cli
scas
dec
jle
cmp
mov
jae
mov
rcl
jmp
jmp
cmc
lret
mov
loopne
add
ret
fwait
hlt
aam
add
subl
aas
mov
ss
cmp
adc
call
aas
popa
shl
int3
loopne
sub
decb
xlat
adc
jo
sbb
inc
push
test
out
in
dec
outsb
cs
mov
adc
add
scas
mov
inc
sbb
in
pop
ds
mov
dec
je
rolb
pop
mov
xchg
aaa
pop
xor
dec
xorb
out
dec
mov
rorl
lock
jne
test
int
loop
adc
sub
sbb
fbstp
mov
shlb
cmp
sub
mov
xor
dec
das
loope
fldl
not
push
ljmp
sbb
push
and
mov
ja
int3
xchg
outsb
add
inc
dec
icebp
daa
sbb
idiv
mov
movsl
jmp
test
pop
negb
jns
cmpl
cltd
add
lds
sub
xchg
mov
lret
add
add
cld
pop
sti
jnp
pop
and
jl
mov
adc
outsl
div
cmc
inc
push
inc
test
js
andl
mov
cmpb
cmp
and
mov
xor
mov
popf
xchg
add
mov
mov
or
push
mov
adc
jl
fmuls
mov
and
rcrb
xchg
sahf
popa
outsl
ror
xor
inc
fldcw
popf
jecxz
jge
adc
jp
adc
mov
xor
ret
inc
xchg
mov
dec
xchg
pop
jo
add
inc
ljmp
test
mov
dec
notl
movsl
cmp
cmp
cmp
mov
les
jg
sti
jno
movntq
sbb
ljmp
pop
sub
ss
ret
lods
mov
lret
ja
add
stos
dec
push
sbb
shll
or
mov
movsb
or
ret
xor
adc
jns
xchg
add
pop
test
cld
std
inc
jnp
addb
xchg
dec
push
js
dec
int3
pop
or
ret
mov
je
sub
jae
xor
xor
and
and
fbstp
pop
push
push
mov
adc
dec
jae
aas
pop
cmc
adc
mov
lds
mov
std
push
scas
adc
xchg
inc
cmp
out
inc
bound
test
jp
inc
or
cmp
jle
repnz
mov
test
and
dec
push
push
test
ljmp
aam
inc
dec
mov
mov
js
jne
adc
inc
pop
ljmp
loope
test
in
sbb
sbb
andb
pusha
pop
add
push
scas
movsb
mov
jmp
inc
icebp
xchg
fdivr
jecxz
add
inc
test
jae
mov
addb
lock
popa
add
mov
repz
xchg
cmp
xchg
sti
imul
xor
xor
inc
das
jle
or
or
jecxz
mov
mov
add
into
xor
adc
lret
push
roll
std
xor
jl
adc
mov
imul
cmc
xchg
gs
cli
fstl
mov
pop
add
bound
pop
xorb
jp
sahf
mov
jns
lret
inc
out
mov
call
pusha
lret
xor
fstl
nop
push
add
mov
out
outsb
add
pop
jo
lret
and
mov
xor
pop
mov
mov
mov
outsl
add
pop
scas
fisubrl
mov
loope
bound
scas
pop
std
push
mov
push
push
lods
lods
xchg
or
mov
dec
mov
aas
push
mov
sbb
lea
mov
and
mov
jo
push
lods
push
jno
cmpb
ret
mov
mov
xchg
test
stos
movsl
mov
add
test
std
aas
push
test
and
cs
mov
sub
inc
cmp
lret
es
dec
fcmovne
xor
sub
aas
test
mov
aam
jp
inc
shr
add
shrl
push
cmp
dec
pop
lods
sti
adc
lds
lret
in
xor
shr
xchg
xor
mov
push
and
aad
cli
aam
mov
subps
dec
dec
mov
aaa
dec
inc
mov
mov
add
push
sbb
mov
jb
push
fs
mov
mull
pop
xlat
sub
aam
xchg
das
sub
and
xchg
cmc
xorl
push
out
cmpsb
push
xchg
addr16
jns
stos
jo
ret
push
fs
cmpsb
je
sahf
jl
jmp
sarl
or
pop
push
cmp
and
cmp
push
nop
or
aaa
movsb
jp
std
aam
ret
add
xor
and
push
in
pop
mov
test
jo
std
sbbb
mov
add
inc
or
cmpsl
or
cmp
add
or
jmp
pop
dec
mov
rclb
lea
outsb
shll
loop
or
dec
mov
repz
adc
mov
add
add
lret
aaa
adc
adc
jb
xchg
jecxz
sbb
outsl
or
mov
in
gs
sub
lea
xchg
decb
adc
lahf
sub
scas
dec
sub
iret
and
lret
mov
xor
lds
add
jnp
cli
icebp
clc
or
call
xchg
push
movsl
cmp
push
cmp
cmc
cmp
lret
repnz
xlat
movsb
jbe
cld
jmp
testb
sub
ljmp
mov
test
xor
aas
jmp
mov
fnstcw
nop
enter
test
add
cltd
sahf
js
lret
mov
cmp
jecxz
mov
test
repz
les
cmp
xchg
dec
push
pop
aam
hlt
mov
arpl
sti
mov
or
cmp
add
dec
cmpsb
pop
push
repz
test
push
rcll
mov
outsb
xor
test
popf
ret
rorl
cmpb
gs
push
mov
out
lea
xor
int3
les
push
xchg
jmp
xchg
add
mov
std
xchg
nop
lock
inc
data16
xchg
pushf
pop
shld
imul
cmp
repnz
rcrb
pushf
cmc
push
xchg
das
lea
das
xor
cmp
subl
push
mov
repz
or
das
clc
addl
push
lret
adc
test
daa
ljmp
xchg
stos
cmc
xchg
enter
stos
ret
cmp
pop
loopne
sub
sub
xchg
cli
mov
pop
int
sbbl
scas
push
stos
xor
pop
enter
cmc
and
xchg
sbb
adc
mov
sub
mov
mov
add
or
push
rcr
xor
rcrl
lds
adc
xor
add
mov
cli
cmp
sahf
cmpsl
out
cmp
cmp
mov
dec
and
out
testb
lret
inc
cmp
jbe
insb
clc
xchg
lods
xchg
adc
jg
rcrl
out
mov
mov
push
mov
xor
stc
rolb
ds
jns
sub
and
cmp
push
cld
ret
and
ret
aam
lock
pop
xor
cmp
iret
jecxz
mov
cmp
fwait
popf
out
jae
jp
hlt
jae
insb
inc
cmc
aam
cmp
dec
sub
mul
jns
jl
and
push
imul
dec
mov
add
cmp
mov
insl
lret
sbb
fsubs
cmp
shrl
scas
divb
and
ret
jb
push
fmull
call
push
sbb
jecxz
repz
rolb
dec
mov
push
pop
icebp
pop
jae
fsubr
fcomp
cmpsb
jle
jmp
add
insl
inc
adcl
fbld
jle
ja
inc
and
cmp
ja
xchg
dec
xor
lods
call
sub
lods
ret
mov
xlat
repz
and
adc
add
jg
sub
fildll
adc
jmp
mov
cmp
fdivrl
adc
cmp
lods
in
aad
and
daa
dec
shl
movntps
mov
ljmp
cmpsb
out
pop
dec
jmp
mov
adc
lret
push
aaa
test
dec
ror
repz
js
lods
xchg
loop
cmp
in
popa
sub
push
lret
add
iret
mov
sub
lock
and
jge
pop
gs
call
mov
cmp
int3
xor
roll
pop
cmc
flds
lods
fiadds
iret
out
mov
mov
ret
mov
dec
or
mov
dec
sbb
enter
aas
cmp
and
outsl
call
aam
add
mov
xchg
push
pop
jo
rcrl
imul
mov
dec
je
aaa
cli
xchg
and
add
xor
daa
ljmp
fwait
enter
xchg
das
inc
cmp
push
adc
pop
negb
push
inc
dec
pop
insb
lds
loop
arpl
lods
popa
xor
sbb
dec
pop
inc
sub
sar
les
lcall
pushf
adc
lea
enter
fs
dec
pop
loopne
add
mov
or
mov
jg
dec
xchg
sbb
jo
sub
popf
mov
cmc
inc
test
adc
adc
xchg
cmpsl
das
arpl
and
mov
jp
lock
sub
stc
sbb
xor
scas
inc
lret
jmp
test
and
daa
gs
dec
xchg
imul
imul
add
sbb
sub
pushf
pop
sub
lock
das
push
sbb
pop
pop
mov
sub
test
rcrb
push
adc
mov
push
sbb
ret
insb
gs
repnz
aaa
and
mov
push
inc
inc
leave
mov
add
mov
stc
jp
lods
incl
pop
dec
mov
or
jecxz
or
jp
in
popf
xchg
mov
mov
pushf
adc
pop
jp
cmp
sbb
jp
mov
jmp
fcoms
xor
lret
fistps
mov
test
lcall
adc
mov
data16
sub
jne
jecxz
fwait
dec
mov
and
ret
jns
cmc
scas
xchg
lcall
jl
sub
lods
aas
gs
das
jmp
in
pushf
scas
movsb
js
add
push
shlb
add
cmp
in
cld
or
xchg
outsl
hlt
mov
pop
mov
nop
pop
cld
int3
sbb
sbb
aas
out
je
xor
stos
add
pop
loopw
repz
aad
xchg
push
jbe
or
add
movhps
cmpsl
out
xchg
inc
loop
cltd
sbb
int
aas
int3
ljmp
mov
xchg
mov
mov
insb
je
mov
cmpsb
inc
mov
xchg
pusha
inc
iret
stos
jo
lahf
push
xchg
jecxz
mov
es
dec
push
dec
add
push
xchg
xor
in
jecxz
popf
or
xchg
jle
fdivrl
xchg
in
stos
adc
scas
scas
pop
sahf
mov
and
mov
ss
adc
adc
sbb
pop
adcb
adc
cmp
and
add
mov
bound
popa
cmp
dec
sub
icebp
mov
mov
jmp
sbb
andl
nop
sub
leave
psubw
std
mov
adc
cmp
ds
pushf
sub
inc
xor
leave
nop
arpl
cmp
es
int
mov
pop
bound
fbld
pop
mov
dec
pop
imul
cs
flds
jno
icebp
sbb
imul
movsl
in
mov
mov
jb
icebp
dec
test
pop
fs
scas
hlt
jbe
neg
adcb
or
neg
test
loop
ret
js
xchg
inc
into
cmc
out
pop
pop
mov
push
adc
fsubp
inc
imul
and
dec
pushf
adc
cltd
push
or
shrb
and
arpl
dec
fcompl
mov
xchg
cwtl
mov
pushw
je
addl
jmp
push
mov
stc
mov
fstps
push
cmp
mov
mov
jmp
xchg
lcall
lret
inc
jl
lret
fdivl
popf
lds
add
add
cwtl
aaa
xor
inc
nop
lret
jmp
and
mov
movsl
outsl
or
dec
add
xor
jnp
sub
popa
sar
jge
mov
cmp
cli
pop
fisttpll
addr16
cltd
mov
and
cmpsl
cvtps2pd
outsl
and
mov
cmp
xor
xchg
aas
xor
addr16
cli
inc
xchg
xchg
mov
mov
push
dec
cmp
fisttpll
nop
xchg
mov
cmpsl
repz
mov
push
in
je
mov
out
pop
out
and
pop
sahf
imul
int3
adc
stc
mov
jg
or
cmp
xlat
and
sbb
jl
dec
sub
movsb
adc
in
insb
ljmp
sbbb
iret
mov
mov
cmp
mov
jns
mov
mov
mov
mov
inc
icebp
inc
in
add
filds
test
push
mov
xchg
iret
or
add
dec
mov
outsl
in
xchg
mov
nop
mov
stos
add
adc
push
add
cmpl
push
popf
and
push
adc
ljmp
pop
push
xchg
dec
jge
dec
push
xor
adc
call
ror
jno
jo
cmp
out
dec
add
shrb
xor
pop
popa
adc
stos
add
mov
daa
jecxz
cltd
inc
mov
or
aam
or
fsubrl
adc
xchg
fstps
movsl
rcrl
neg
jae
stc
repnz
lds
xchg
sbb
lret
divl
pushf
lahf
push
and
int
inc
jg
fmuls
sub
xor
mov
add
repz
cmpsl
lods
pop
xchg
popa
xchg
push
hlt
fscale
mov
test
shlb
std
popf
cltd
xorl
sbb
cli
sti
mov
fistpl
mov
scas
mov
cmp
mov
add
std
jp
pop
icebp
xor
aas
push
push
mov
cwtl
nop
xchg
cli
add
sbb
inc
sub
dec
add
loopne
jo
aam
movsb
push
adc
fwait
aas
cmc
pop
arpl
push
fidivrl
mov
sti
cmp
pop
aad
or
cltd
jmp
pop
adc
mov
inc
das
push
sbb
lret
and
sbb
std
push
mov
mov
testl
sti
mov
repnz
xchg
push
push
mov
jae
loop
insl
adc
jbe
xchg
imul
cld
cmpsb
jecxz
and
jle
test
adc
dec
sarb
pop
aaa
std
fdiv
inc
notb
mov
pop
cmp
cmp
ja
fcompl
inc
push
dec
or
jl
or
rcrl
out
loop
rcrl
cmp
call
dec
sahf
mov
std
sbb
daa
mov
xor
daa
in
mov
push
mov
into
push
test
push
outsl
dec
xor
enter
jnp
mov
add
sahf
pushf
fcomps
insb
test
scas
jno
cmp
push
clc
mov
loope
fcmovnb
mov
push
mov
fwait
dec
cmpsl
sbb
push
or
cmp
mov
fxam
out
or
in
push
jg
dec
cmp
dec
dec
repnz
in
clc
add
adc
cli
pusha
mov
es
outsl
lcall
xchg
scas
stos
mov
iret
cli
adc
push
cs
lods
lahf
int3
das
adc
mov
shl
bound
dec
movb
es
cmp
jne
mov
jb
mov
int3
lcall
and
out
mov
dec
nop
xchg
adc
out
jmp
ret
pop
shll
arpl
stc
test
cmpsl
xchg
insb
sbb
frstor
mov
dec
rorb
inc
jl
dec
insl
out
scas
push
mov
jb
mov
enter
push
xchg
adc
fildl
xor
imul
iret
push
test
sbb
cmove
xchg
mov
sub
and
test
push
loop
es
adc
mov
negb
int3
cmc
jl
cld
sahf
sahf
xchg
jns
insb
cmp
pop
shlb
dec
push
push
popf
mov
dec
jmp
add
sbb
lods
xchg
mov
imulb
rcrl
cs
adc
clc
mov
dec
outsb
cmp
imul
inc
mov
daa
idiv
or
cmc
loope
push
push
adc
mov
mov
pop
pushf
rorl
and
mov
pop
xchg
out
lock
les
and
mov
rorl
pop
inc
lahf
pop
push
fdivrl
lods
xor
sub
push
adc
stc
and
ss
test
xor
out
adc
int
aam
cmpsl
ret
cwtl
movsl
xor
add
fcmove
inc
pop
adc
jp
or
into
sub
in
push
push
xchg
xchg
xor
fs
dec
rclb
aas
psubb
out
ret
test
in
aam
daa
cmpsl
je
imul
pop
movsl
popa
popf
filds
pop
mov
pop
jge
movsl
add
cmp
movsl
fisttpll
cwtl
mov
push
dec
imulb
fwait
ret
dec
ret
mov
shll
xchg
and
cmp
or
aad
xchg
sarb
dec
jg
mov
sti
sbb
shll
push
lea
insl
cltd
filds
pusha
xor
sub
xor
jmp
and
es
mov
jle
in
lods
xchg
orb
pop
xchg
inc
popa
mov
cmp
mov
jns
push
pop
xchg
sahf
jle
xor
ret
cmp
pop
mov
sahf
pop
fistpl
test
sub
pop
pop
jmp
bound
pop
pop
loope
dec
xor
mov
shlb
adc
aam
inc
pop
jbe
insb
xor
ljmp
icebp
dec
idivb
shlb
arpl
mov
jno
push
daa
out
mov
mov
les
pop
and
sti
mov
and
inc
sub
lods
cmp
cmp
lds
sub
arpl
sbb
sbb
lds
fbld
jecxz
fdivs
and
cmp
lret
xchg
adc
push
xor
in
or
mov
call
std
loope
ret
mov
mov
stos
shlb
adc
pop
es
lret
cmp
dec
stc
xchg
stc
push
fmul
inc
mov
mov
lods
push
pushf
daa
add
xchg
stos
sbb
insl
outsb
mov
inc
sub
mov
aaa
std
pusha
adc
add
ret
jg
inc
and
cs
repz
dec
mov
fisttpll
sub
pop
sahf
dec
stos
jp
inc
lock
fiadds
sub
cmp
mov
int
sub
lods
ja
in
pop
divb
mov
test
xchg
and
in
shlb
and
repz
push
or
dec
pusha
mov
les
push
pop
addl
out
stos
rcll
lds
enter
jnp
pop
inc
lods
xor
push
enter
idivb
outsl
cs
mov
sub
inc
cld
mov
add
push
mov
outsl
ficoms
xorb
pushf
dec
mov
out
hlt
loope
xchg
ljmp
or
push
fdivrp
scas
push
cmp
outsb
aaa
aam
rcll
neg
lods
mov
xor
lock
popf
pop
mov
ljmp
outsb
mov
pop
mov
daa
rcrb
incb
jno
inc
in
lds
das
pop
mov
jbe
iret
or
rol
push
xor
shlb
js
cmc
nop
in
xchg
shll
inc
cmp
sub
andb
pop
mov
aaa
mov
out
ret
jmp
shrl
xchg
push
stos
lea
out
int3
lahf
mov
outsb
insl
sbb
push
push
outsb
mov
mov
ficomps
scas
or
mov
sahf
push
outsl
pop
loope
or
test
mov
inc
pusha
insb
pop
ja
and
add
inc
or
mov
cmp
filds
sub
xchg
xor
inc
pop
or
cmp
cmpl
push
popa
cmpsl
fistl
inc
mov
xchg
sbb
jle
lea
xchg
mov
xlat
mov
add
stc
lcall
mov
in
inc
xchg
push
ja
or
ja
cmp
add
or
xchg
leave
out
clc
push
cs
pop
mov
mov
xchg
shl
add
lret
and
inc
sbb
inc
and
clc
push
aad
sub
sbb
out
pushf
mov
pop
cltd
stos
roll
dec
das
incb
lahf
mov
jns
xor
repz
mov
ljmp
fstpl
cltd
ds
int
mov
mov
scas
icebp
pop
sbb
xor
loop
sbb
push
jge
test
jnp
jns
sub
dec
sbb
or
cmp
cmpsl
pop
xor
pop
popa
and
adc
outsl
insb
jns
test
shlb
mov
out
ljmp
mov
mov
inc
xlat
shlb
iret
cmc
jbe
add
sti
lret
andl
test
mov
mov
mov
adc
std
iret
lahf
fisttpll
inc
xor
imul
out
adc
cmpl
sub
push
shlb
sti
mov
xchg
movsl
and
mulb
cmp
loope
sbb
fidivrs
cltd
imul
sbb
pushw
ja
inc
fcomp
jne
mov
lods
decb
loope
dec
repz
lods
insl
das
cmpsl
adc
and
push
mov
rcl
imul
sub
sbb
sahf
mov
inc
sub
mov
mov
pop
movsb
repz
mov
mov
or
dec
pop
xlat
sbb
jle
adc
or
jmp
xchg
add
or
test
in
mov
and
pop
cltd
push
push
xor
out
jp
push
sbb
xchg
mov
fwait
mov
push
xor
xchg
dec
lea
inc
lcall
mov
adc
dec
sti
push
test
lahf
ja
bound
lods
ret
dec
fsubl
pop
jno
mov
add
out
fistl
xor
mov
mov
xor
push
pop
pop
aad
pop
and
push
inc
dec
insl
push
mov
jno,pn
mov
cmp
dec
mov
sbb
dec
mov
inc
xchg
mov
pop
cmp
or
loop
addl
jl
cld
jg
fcompl
or
shll
loope
sbb
xor
xchg
pusha
lea
mov
mov
xchg
mov
repz
push
xchg
mov
sub
repz
ss
lds
in
sysenter
sub
xor
arpl
mov
add
xchg
adc
adc
push
jge
enter
ror
ret
mov
enter
mov
add
and
mov
ja
jge
les
dec
lret
jbe
jb
psllw
ret
adc
incl
inc
das
les
pop
jnp
xchg
test
fisubl
cmp
sbb
fsubrs
push
stos
mov
adc
stos
dec
data16
add
fisttpl
mull
std
ret
pusha
js
lahf
int3
mov
push
fs
cmpsl
xchg
lret
sub
pop
mov
les
je
fisubrs
jge
sti
je
or
sbb
mov
lock
mov
push
mov
fiaddl
jle
dec
xlat
mov
je
andl
rclb
or
jae
imul
add
and
pop
push
or
and
daa
inc
dec
inc
cmp
sub
scas
jo
push
cwtl
add
xor
mov
cmp
dec
jle
test
outsl
jo
or
push
inc
cwtl
xor
mov
in
jbe
fists
in
out
in
jbe
adc
ja
movsl
imull
xchg
movsb
daa
div
jns
jl
jecxz
mov
jp
cmp
lods
iret
jnp
jp
les
lret
xchg
testl
sti
fbld
sbbl
mov
fstpl
or
iret
jnp
push
sub
xchg
addr16
inc
pop
dec
pop
nop
and
js
dec
mov
mov
dec
dec
sbb
rol
movsl
scas
fstl
or
out
inc
mov
push
push
ds
je
jl
fcompl
lock
les
or
std
adc
inc
lods
daa
jmp
cmpl
fsubr
cwtl
aaa
and
push
adc
adc
push
jmp
dec
scas
in
adc
out
dec
aad
dec
loopne
pop
popa
loope
enter
adc
test
sub
in
out
sbb
lret
pop
stc
cmp
jb
test
stc
lock
jno
nop
or
repnz
inc
scas
and
fcomps
test
leave
pop
mov
xor
insb
testl
mov
lret
dec
push
mov
xlat
addr16
dec
mov
lock
xor
pop
sub
andb
fldenv
xor
push
xor
mov
xchg
mov
add
push
rcrl
mov
sbb
clc
fsubrp
mov
pop
sbb
ja
push
xor
fdivl
iret
test
fidivl
mov
cmc
or
cmpsb
jno
jmp
cltd
cltd
and
inc
inc
clc
stos
lret
adc
push
test
mov
or
and
in
stc
stos
mov
or
repnz
cmp
repz
mov
and
ss
add
repz
imul
fstpl
pushf
in
jmp
pop
outsb
rorb
cmp
fldl
aad
jo
pop
aam
int3
or
jmp
or
cmpl
mov
jg
mov
and
je
sbb
add
push
sub
cli
cmp
jb
inc
out
pop
imul
mov
mov
aaa
xchg
shll
and
stc
and
ds
adc
xchg
sahf
inc
sub
aaa
test
in
xchg
jae
ja
jb
xchg
mov
sbb
mov
sbb
in
xchg
into
cmp
inc
mov
sets
mov
loopne
ffree
inc
repnz
add
test
fisttpll
push
lds
fdivl
dec
aam
ss
hlt
xchg
outsl
dec
int
loop
cmp
ficomps
adc
pop
incl
lea
sbbb
gs
je
mov
movsl
divb
dec
shlb
sbb
sbb
scas
popa
pop
int
inc
adc
jno
mov
adc
xor
xchg
jae
sahf
es
ljmp
mov
sub
jmp
aam
push
jge
loop
mov
cwtl
imul
out
pop
cmpsl
mov
jno
lock
lods
ss
jo
jle
jg
test
cmp
pop
xor
dec
mov
pop
pop
pop
cmc
inc
xchg
and
xlat
into
pop
and
pop
scas
cltd
and
iret
add
mov
pop
in
cmp
or
push
lods
xchg
sbb
les
out
sub
pop
jge
sbb
add
fmulp
in
invd
stos
xor
stc
inc
outsl
jle
mov
jnp
mov
andb
push
sbb
aad
pop
or
js
jge
pop
cmp
push
sarb
xchg
pusha
mov
fnstsw
arpl
out
rcll
int3
adc
fadd
sar
lret
test
inc
xor
stos
sbb
and
pushf
data16
test
xlat
test
sti
pop
pop
imull
or
ds
pop
sti
sbb
sbb
imul
imul
data16
out
jne
push
jae
mov
jae
mov
lret
or
push
cmp
or
xchg
dec
pop
lods
jp
out
clc
sub
lock
aaa
or
pop
xchg
adc
sbb
jge
inc
dec
push
leave
lea
lds
imul
mov
in
and
mov
out
mov
pop
aam
fbstp
imul
cmc
dec
push
fisttps
sbb
mov
aaa
outsl
aaa
adc
adc
cmp
pop
add
mov
and
les
push
inc
outsl
outsl
mov
inc
cmc
sbb
mov
cmpsl
adc
adc
mov
xor
dec
mov
push
stc
or
ss
outsb
stos
dec
jb,pn
pop
xchg
dec
popa
sub
fs
or
sbb
incl
and
popf
repz
and
out
cmpb
inc
mov
or
inc
jg
xchg
sub
adc
push
mov
imul
mov
adc
inc
pop
mov
test
popa
push
or
xchg
enter
jmp
and
test
insb
gs
jns
mov
loopne
shr
sub
fidivrl
adc
std
pop
outsl
and
mov
fistpll
inc
test
fnsetpm(287
fidivrs
sti
pop
rorb
xor
push
xlat
mov
repz
add
jecxz
shrb
ljmp
add
inc
lcall
stc
xorl
insb
arpl
orb
cmp
cwtl
and
in
dec
lret
adc
pop
adc
scas
in
pop
add
mov
fnstsw
xor
fwait
mov
jl
dec
push
pop
out
cmp
pusha
sbb
ja
push
rcll
mov
push
inc
leave
adc
jecxz
rolb
jnp
mov
sbb
mov
push
fcmovnb
pop
jp
pop
pop
out
push
xor
scas
in
xor
fldt
mov
jbe
aas
cmpsl
add
jg
imulb
inc
or
mov
sbb
push
jle
cmp
stc
push
pop
rcrl
push
add
iret
pop
mov
jae
jl
int
and
fstl
ret
adc
rolb
inc
lods
divb
xchg
std
push
sub
fwait
mov
stos
lods
sbb
add
fcom
mov
movsl
mov
mov
push
mov
repz
xchg
inc
fsubrl
iret
push
xchg
out
out
push
jmp
fimull
loopne
mov
sbb
sarb
inc
pop
js
and
into
xor
insb
push
loopne
xor
fstps
popa
sub
add
insb
and
scas
andb
lods
rcr
sub
stc
in
in
out
push
int3
data16
push
scas
xor
mov
in
sbb
adc
in
adc
loope
dec
stc
inc
cmp
icebp
mov
das
jne
cmpsl
test
and
xlat
mov
push
mov
mov
push
add
pop
pop
in
mov
push
xchg
lods
out
iret
loope
push
mov
xchg
cmpsb
cmp
xor
addr16
les
pop
in
nop
out
and
fs
mov
add
pop
cltd
mov
adc
inc
pop
pusha
mov
jge
xchg
js
xor
mov
pushf
mov
mov
inc
loop
mov
cld
dec
lret
jle
mov
mov
popf
inc
mov
ss
loopne
sbb
cltd
outsl
xor
test
mov
orl
sub
push
or
push
jge
pop
out
sbb
stos
cwtl
sbb
xor
mov
ficoml
push
dec
and
mov
cmp
and
leave
dec
add
cmc
cmpsb
sub
dec
push
mov
cmp
inc
mov
arpl
test
hlt
sbb
mov
shll
adc
repnz
icebp
mov
xlat
mov
sbb
cmp
sbb
xchg
out
lret
cmc
fsubrs
loop
lahf
dec
lods
add
pop
pop
push
add
imul
jmp
inc
add
mov
in
ficoml
or
mov
insl
push
das
and
inc
ret
xlat
mov
or
sub
testl
lods
adc
pop
lahf
cmp
jge
loop
pop
mov
mov
mov
pop
sub
cli
mov
out
xchg
hlt
push
inc
fwait
and
lea
je
mov
sub
sub
lcall
sbb
fdivrs
dec
mov
outsl
fisttpl
and
cltd
adcb
mov
xchg
or
bound
push
xchg
lods
mov
xlat
daa
push
mov
dec
sbb
iret
hlt
cs
jns
insl
arpl
push
mov
clc
xor
push
sbb
setle
jb
xchg
movl
pop
nop
adc
lds
xchg
push
aaa
das
mov
aam
cmp
xchg
popa
mov
sub
xlat
and
push
xchg
inc
pop
ret
push
push
dec
push
adc
int
push
cmp
enter
sub
xor
outsl
mov
adc
stos
adc
js
xchg
jp
and
ret
or
pop
lds
and
mov
mov
push
aaa
enter
aaa
xor
adc
push
pop
movsb
test
mov
mov
rclb
adc
cmp
xor
xlat
hlt
mov
enter
out
pushf
fwait
dec
cwtl
xor
jecxz
cmpsb
ficompl
ror
and
cmp
cmpsb
stc
dec
sub
sbb
adc
add
je
movsl
jb
popa
or
push
lods
arpl
call
idivb
mov
movsl
adc
fisttpll
aam
add
push
rcll
adc
cmp
jl
xchg
lret
dec
nop
rorl
iret
mov
in
scas
pop
add
pushf
or
out
das
jnp
mov
mov
and
inc
test
cmpsb
imul
dec
sti
pop
aaa
iret
stos
out
add
sbb
iret
jmp
popa
or
fsubs
rorl
adc
mov
push
subb
pop
mov
mov
xlat
lret
lods
stos
rcr
orl
mov
mov
mov
cvttps2pi
out
fdivs
mov
or
add
inc
repnz
hlt
pop
fbstp
inc
pop
add
dec
mov
mov
roll
leave
daa
add
outsb
sub
adc
loopne
sub
roll
clc
xchg
paddq
cld
call
cs
into
fsub
loop
and
hlt
jp
adc
xchg
mov
mov
and
mov
cmp
mov
xlat
mov
movsb
sub
xor
bound
mov
jne
push
mov
and
out
mov
jbe
inc
add
aas
sub
pop
lahf
mov
enter
mov
dec
and
jmp
sbb
imul
call
cli
pop
aas
pop
arpl
test
and
mov
mov
inc
add
mov
xchg
xor
aas
fdivrl
mov
and
popa
push
aam
add
mov
and
xchg
pop
jp
push
rol
scas
rorb
cltd
stos
push
xchg
cmp
rorb
cli
daa
jae
xor
jmp
sub
insl
sahf
mov
adc
fistl
lcall
sbb
cmpsl
fdivrp
hlt
pop
inc
jmp
inc
jb
icebp
jnp
rep
cmp
lcall
mov
in
mov
mov
xchg
call
push
int
adc
pop
repz
aad
fdivs
add
andl
xchg
hlt
mov
in
push
pop
cmpsl
add
sarl
inc
call
fsts
mov
cld
sub
fnstsw
aas
xor
dec
into
jge
popf
dec
sub
jb
sbb
dec
adc
sbb
xchg
xchg
push
cmp
and
pusha
ja
sub
out
cs
adc
jbe
push
rclb
push
aas
lods
xchg
push
push
repnz
pop
jl
bound
mov
int
dec
mov
rorb
jns
cmp
fwait
push
clc
int
mov
test
outsb
data16
pop
pusha
aad
and
shll
add
into
sbb
testb
inc
fs
cld
shlb
cmp
out
es
xchg
fistl
sarb
lea
je
jge
mov
int
and
jp
aad
scas
jo
daa
stc
jns
mov
in
mov
adc
push
add
jmp
mov
lret
jne
loopne
cmc
fcomip
inc
push
repz
into
and
xchg
or
inc
scas
popa
mov
pop
pop
push
push
test
nop
cmp
rcrl
sarb
inc
fidivrl
repz
sub
ret
lcall
loopne
adc
mov
pushf
jmp
push
notl
imull
mov
jnp
hlt
push
popa
je
inc
scas
mov
mov
rol
addr16
fwait
out
cmp
shlb
ret
arpl
test
mov
rorl
push
je
cmp
out
xor
xchg
divb
cmpsb
ljmp
leave
jnp
mov
sub
jbe
or
je
sbb
mov
xor
ja
ficoms
add
je
mov
cmc
or
pop
add
pop
lea
fldt
js
push
cmc
jl
sti
daa
out
loope
mov
lods
or
scas
push
xlat
outsl
mov
adc
ret
pop
fiaddl
bound
xchg
repnz
inc
mov
lock
mov
lret
inc
push
sbb
xchg
arpl
gs
inc
mull
shl
add
icebp
lods
imull
and
or
movsl
daa
jl
jmp
les
pop
cmp
nop
mov
je
outsl
jl
sahf
js
push
movsl
rol
repz
loopne
mov
or
add
ss
aam
add
test
jne
or
inc
pop
in
outsb
xchg
xchg
repnz
enter
xchg
cmpsb
xor
inc
and
add
insl
push
fcmovnu
xchg
add
rolb
xor
and
cmp
jne
test
and
dec
fnstenv
jo
adcb
xor
fidivl
xor
je
insl
cmpsb
mov
lret
jno
inc
test
xlat
xor
dec
xlat
imul
fcomps
orl
aad
ljmp
xchg
loopne
fsubrl
sti
test
nop
repz
xor
inc
stos
outsb
xchg
bound
jecxz
pushf
fiadds
add
je
adcb
icebp
or
lret
inc
jne
jg
jo
lea
fldt
in
cwtl
mov
mov
xor
hlt
sub
add
inc
inc
into
push
inc
cs
lcall
mov
or
int3
fsubr
ficomps
cmp
xchg
icebp
dec
dec
dec
add
inc
scas
push
cmpsl
adc
pop
out
cmp
xchg
les
push
cltd
stos
sahf
cmp
sub
mov
pop
repz
loopne
pusha
adc
and
out
or
movsl
xor
fildll
cmp
lods
inc
mov
ficoms
fidivrl
push
ret
jno
add
and
push
adc
shrl
inc
or
pop
stos
and
nop
insb
mov
dec
shrl
in
sbb
xchg
cmp
mov
mov
imul
mov
mov
flds
mov
pop
sbb
jns
jo
mov
add
pop
int
aas
insl
xchg
or
or
rcl
push
xchg
ret
sti
in
xor
test
fdivrl
push
ud2
in
clc
xchg
xlat
and
loopne
movsb
fistpl
fs
mov
in
das
dec
push
js
scas
xor
jb
mov
cmp
out
test
pop
fwait
push
iret
sbb
cwtl
dec
ficompl
lea
push
mov
aad
fstp
push
arpl
popa
je
pusha
in
clc
bound
or
mov
movsl
lahf
incb
sbb
shld
mov
xchg
shlb
mov
repz
mov
mov
je
sbb
insb
jb
jmp
push
jae
loope
mov
pop
mov
loop
cltd
or
and
sbb
sbb
movsl
lds
dec
inc
imul
movsl
lods
mov
sub
xchg
add
testl
clc
cmp
fs
inc
adcl
xchg
data16
aaa
popa
fnsave
loope
push
jp
decb
ja
roll
shrl
mov
nop
outsl
pop
or
stc
pop
jne
mov
cmp
jns
lret
sbb
pop
push
nop
push
ffreep
xchg
mov
mov
jno
dec
shlb
xchg
mov
mov
std
sub
outsb
dec
pusha
ror
loopne
mov
aam
and
paddw
int
out
andb
sti
mov
sbb
jne
push
jae
adc
ja
add
mov
mov
lock
mov
stos
jp
inc
push
push
jge
fwait
out
bound
push
push
cmpsl
adc
add
dec
fs
cmp
push
lock
loope
lcall
xchg
das
push
or
call
and
mov
sub
movsb
mov
jl
fsts
in
cmpl
jo
cmpb
pop
sbb
movsl
dec
fpatan
pusha
into
jle
cmp
add
lods
mov
mov
imul
sbb
lods
jns
into
incl
sbb
adc
inc
mulb
cmpb
scas
xchg
lock
leave
clc
xchg
mov
ss
mov
dec
nop
add
fmuls
pop
test
mov
outsb
push
scas
imulb
mov
popf
mov
insb
cmp
xchg
cmp
daa
dec
inc
gs
rclb
ss
out
mov
rorb
add
js
push
flds
inc
pop
xchg
test
or
and
aad
mov
cs
cmp
xor
ror
mov
sbb
cmpsl
mov
test
xchg
push
test
inc
xor
je
push
push
dec
mov
mov
mov
xchg
or
addr16
adcl
lcall
push
or
mov
pop
push
mov
mov
imul
fidivl
cmc
cmc
jg
test
or
out
or
jbe
or
cmp
int
inc
mov
fisubs
adc
test
mov
cmp
inc
adc
push
scas
add
shlb
dec
in
fidivl
cmpsl
jb
in
sub
jne
push
cmp
adc
dec
ss
inc
leave
inc
cld
enter
pop
shlb
aad
mov
out
popf
add
mov
jp
adc
xor
sub
pop
mov
mov
push
loopne
ds
jnp
sub
pop
mov
push
xchg
xchg
cmp
jns
inc
or
dec
sub
nop
fsubl
imul
inc
mov
mov
pop
dec
cli
and
adcb
cltd
testb
mov
in
mov
je
lcall
jae
inc
xor
mov
cmp
sbb
in
jb
jle,pn
jg
mov
mov
and
xchg
andb
dec
sbb
mov
aas
xchg
icebp
ret
fimull
or
iret
xchg
stos
mov
mov
imul
jo
fimull
mov
mov
mov
subb
cltd
std
mov
jb
mov
cli
dec
sub
inc
dec
jle
sub
mov
mov
stos
xor
cs
loope
scas
std
mov
dec
mov
jo
dec
roll
repz
and
iret
xchg
and
add
mov
cltd
xlat
mov
rcl
lret
jae
fld1
inc
inc
sub
push
fcomps
daa
movsl
xchg
xlat
adc
jo
sub
shll
aaa
jecxz
pop
push
sub
xchg
push
lods
in
dec
push
xor
lret
dec
sbb
and
xchg
jns
fwait
dec
dec
cmp
sbb
repz
and
pop
js
xchg
gs
repz
cmc
clc
outsl
mov
repnz
mov
lods
arpl
loope
cmp
cmp
addr16
jp
jecxz
mov
and
mov
lock
insl
sbb
cmp
sub
pop
nop
or
ret
outsl
fldenv
cmpsb
xorb
pop
stos
xchg
add
jecxz
mov
pop
sbb
mov
pop
sbb
mov
movsl
push
sbb
sub
ja
in
hlt
into
pushf
push
movsb
mov
loop
in
cmpsb
push
addl
jg
cld
in
lea
xor
fisttpll
push
insl
gs
xor
cmpsb
mov
xchg
xchg
les
loope
jg
nop
je
mov
lods
pop
mov
push
pop
les
or
stc
cs
bound
sbb
testl
rcl
repnz
ljmp
inc
lahf
in
sub
test
test
sarb
clc
xor
push
iret
cmp
mov
mov
out
mov
xor
gs
xchg
mov
imul
xor
sub
mov
or
lds
lods
outsl
sub
cmp
sub
cld
daa
xor
fsubs
push
je
pop
lds
mov
sarb
xor
adc
lea
lahf
lret
lods
pop
cmpsl
mov
jecxz
sub
cmp
jne,pn
jecxz
mov
ss
mov
pop
mov
fsqrt
add
adcl
in
lret
adc
jo
ljmp
aam
test
sbb
pop
outsb
mov
sarb
adc
pop
mov
or
pop
mov
xchg
dec
or
dec
push
std
sub
popa
fstpt
mov
add
xchg
ds
mov
adc
cmp
sub
test
or
jge
notb
loopne
dec
sbb
push
lods
mov
inc
call
xchg
out
xchg
call
jg
add
test
int
adc
lds
pop
in
sub
and
adc
outsb
rcr
mov
mov
or
lcall
sahf
xor
inc
loope
scas
fstpl
bound
movsb
aaa
aam
es
lock
push
sbb
jno
push
ret
test
xchg
or
aaa
ja
xor
cmpsl
jae
adcl
and
fcom
jmp
cmpsb
dec
add
in
vmwrite
cmp
scas
fstp
mov
pop
cltd
add
pop
hlt
sbb
les
jmp
nop
mov
xor
jb
lahf
sub
cmp
and
sbb
push
rclb
loop
xor
push
hlt
mov
inc
out
stos
sahf
hlt
mov
and
fsub
dec
ret
popa
movsl
fildl
add
mov
js
das
push
pop
mov
xor
in
push
pushf
inc
sbbl
cmp
jmp
dec
sti
adc
subl
jecxz
std
das
popa
inc
inc
ficoml
mov
int
data16
mov
movsb
push
mov
call
mov
xchg
mov
adc
aam
fnstenv
hlt
mov
mov
pop
pop
jae
cmp
jp
scas
in
adc
in
jnp
int
lds
sub
pop
jno
jecxz
rcll
mov
pop
pop
mov
mov
data16
outsb
mov
out
push
xchg
andb
mov
or
inc
lock
call
in
das
icebp
sarb
enter
ljmp
jp
mov
fsubl
xchg
jg
aam
mov
jo
outsb
xor
aam
push
mov
leave
lahf
xchg
or
fcompl
inc
or
mov
jl
mov
add
cmp
jmp
test
jl
sbb
dec
or
jae
inc
loopne
pop
stos
xchg
das
inc
cld
dec
js
push
mov
add
push
lds
popf
cmp
cmp
pop
add
mov
mov
lcall
imul
mov
outsl
or
fsubp
sti
mov
mov
adcl
push
add
cmc
dec
in
scas
add
pop
data16
inc
xchg
fdivs
clc
lahf
popf
lea
mov
cmp
jbe
xor
xacquire
popf
notb
scas
xchg
and
lret
aad
dec
or
pop
pop
repz
or
dec
stos
and
ret
pop
outsb
dec
sub
cmp
mov
add
mov
push
add
ret
pop
inc
xchg
inc
fiaddl
iret
in
or
jne
rol
fists
pop
cmpsb
std
into
frstor
xor
out
push
int3
sub
test
mov
sarb
fiadds
adc
adc
mov
stos
stos
adc
lods
rorb
cmovs
bnd
xchg
std
mov
jae
fsubr
mov
lret
rol
addr16
xor
mov
dec
add
push
ljmp
mov
test
xor
adc
sti
mov
mov
inc
adc
pop
fwait
add
aaa
loop
xor
add
xor
push
pushl
push
sbb
decl
adc
stos
jo
popf
cwtl
lds
xchg
adc
sahf
sub
dec
and
or
loop
in
push
inc
jmp
mov
in
sbb
mov
inc
mov
and
xor
repz
xchg
add
mov
sbb
cmp
ret
in
fs
hlt
mov
cli
xchg
sarl
int3
cltd
mov
out
mov
mov
in
pop
fdivrp
into
fadds
rorb
jbe
nop
fnsave
dec
rclb
sahf
mov
and
sub
inc
mov
inc
out
ret
pop
cmpsl
loopne
mov
and
mov
push
mov
test
mov
fcmovb
popf
xchg
xchg
inc
add
mov
jge
aam
lret
lds
imul
dec
or
mov
pop
mov
aad
test
mov
je
lahf
pushf
sub
mov
inc
sbb
cmp
or
sub
pop
pop
mov
scas
test
and
outsl
xchg
cwtl
movsb
scas
mov
repz
or
in
lds
inc
fidivl
mov
jo
clc
incb
rorl
inc
es
pop
adc
mov
xchg
inc
adc
shrl
mov
js
lret
xor
cltd
stos
js
add
cmp
cmp
mov
fnstsw
cmp
rcrb
push
pop
jle
adc
divl
jl
out
fdivrs
or
pop
les
test
dec
sub
or
fisttpll
rorb
add
pusha
sbb
add
js
daa
xorb
leave
add
cmpsl
jne
ret
xchg
mov
sbb
lea
jecxz
ficoml
jnp
call
dec
das
out
xchg
rol
push
les
jge
cwtl
cmp
fcompl
testb
les
mov
push
ss
les
adc
dec
mov
add
loope
fprem1
adc
or
aam
sarl
mov
xor
cmp
push
iret
add
xchg
fld
in
mov
sbb
adc
fwait
fwait
adc
sbb
mov
mov
and
dec
pop
stos
movsl
jne
scas
mov
sub
mov
popa
out
ja
dec
aad
mov
int3
jl
sub
mov
ja
lock
cld
push
fmulp
xchg
std
cmp
rclb
cmp
pop
or
aas
push
loop,pt
js
mov
int3
aaa
ljmp
shrl
jae
clc
lods
negl
dec
lret
jbe
scas
aaa
jp
push
push
lea
mov
lret
jnp
mov
xchg
cmp
pusha
cmpb
add
cmpsl
outsb
mov
cwtl
cmpsl
sbb
in
dec
cmp
adc
daa
sti
adc
adc
das
pop
imul
js
pop
arpl
test
dec
xchg
sub
lock
ds
imul
jno
rcrb
inc
pop
push
repnz
shll
mov
lcall
mov
dec
cmp
mov
ret
mov
push
fldl
neg
sbb
push
daa
pop
cmp
aam
in
outsb
sbb
inc
mov
push
xchg
sbb
int3
cmp
cwtl
jbe
mov
xchg
xchg
adc
jecxz
mov
dec
mov
call
pop
and
clc
sub
mov
pop
shll
mov
adc
sub
or
adc
das
mov
dec
and
push
lock
push
xchg
lods
push
cmp
xchg
ret
mov
scas
loop
aam
xor
or
mov
dec
sbb
pop
pop
add
scas
xor
ja
pusha
addl
adc
cltd
inc
data16
iret
addr16
jmp
lcall
push
aam
mov
out
out
sub
in
or
jo
lcall
fstpt
mov
dec
mov
sti
mov
popa
lahf
cs
in
loope
inc
push
inc
jecxz
cmc
sub
xchg
push
xchg
cwtl
inc
ret
leave
mov
pop
andl
test
ds
pusha
mov
arpl
mov
fstl
pop
mov
xchg
flds
xlat
ss
push
subl
pop
mov
inc
pop
fwait
dec
pop
pop
mov
or
xchg
xlat
xor
hlt
pop
cmp
adc
mov
aas
sti
cs
pop
into
sub
outsb
mov
popa
insb
jmp
push
or
fwait
jno
sub
mov
pop
sbb
sbb
mov
std
pusha
xor
xor
daa
inc
shlb
popf
loopne
xor
dec
sti
jecxz
dec
and
ja
push
pop
std
inc
jp
inc
ja
mov
mov
or
stos
sbb
jg
push
sbb
out
pop
imul
es
incb
movsb
jmp
out
push
mov
cmc
outsl
push
dec
lock
int
xchg
pop
dec
dec
cwtl
push
jns
cmp
push
sbb
add
inc
adc
pop
xor
lea
stc
xchg
jo
adc
out
pop
scas
scas
sti
jae
push
sub
adc
lea
xor
cmpsb
mov
inc
mov
xor
push
dec
add
push
mov
loopne
push
xchg
add
cmp
mov
xor
pop
int
out
lea
insb
icebp
push
cli
jg
shlb
call
push
add
stc
arpl
push
lods
jle
les
xchg
pop
ljmp
arpl
or
js
inc
or
push
test
pop
in
aam
jae
sbb
sub
pop
adc
cltd
xchg
mov
outsl
inc
pop
or
lods
and
sub
pop
dec
je
jae
xlat
dec
adcb
pop
lea
jno
push
out
push
iret
clc
jecxz
push
jb
jmp
repnz
sbb
popf
push
pop
pushf
sarb
ljmp
fimuls
enter
jo
push
std
fildll
and
sbb
sub
cmpsl
jmp
add
icebp
mov
xor
push
ds
lds
jp
mov
js
cld
stos
mov
mov
mov
mov
icebp
sub
push
repz
mov
jne
shll
stc
push
or
es
jnp
es
mov
das
adc
outsl
repz
stos
cltd
loope
stos
or
lock
push
ds
or
mov
mov
jbe
xor
cmp
in
aam
or
sub
xchg
es
out
xor
enter
sahf
push
lcall
jp
sahf
int3
jno
sub
stos
mov
or
pop
dec
callw
push
push
ret
add
xor
imul
pop
or
sbb
push
aaa
mov
mov
push
leave
rclb
data16
bound
push
pop
inc
dec
roll
and
inc
jae
mov
jbe
fisubrl
mov
repz
sub
insb
test
daa
cmp
push
pop
add
in
jl
fdivrl
xor
movsb
dec
inc
sti
push
mov
pop
mov
add
dec
ds
cld
mov
adc
push
push
out
push
les
xor
divb
fildll
mov
push
out
lcall
sbb
and
stos
in
gs
xchg
ret
dec
push
jp
fbld
fdivrl
aaa
in
std
aam
je
cmc
in
xor
movsb
xchg
pop
push
jl
or
mov
es
mov
shl
pushf
repnz
test
enter
test
jge
pop
ja
hlt
inc
je
xor
iret
iret
mov
shrb
add
xchg
dec
fcomps
shl
ja
ret
pushf
push
or
fisttpl
push
sbb
cmpsb
mov
adc
jae
pop
popa
sbb
popf
sub
stc
incl
add
or
mov
lret
pop
push
scas
ljmp
mov
lock
ljmp
jmp
lret
and
pop
sbb
mov
push
imul
pusha
or
pop
popa
pop
push
add
jle
dec
push
adc
xchg
sbb
add
pusha
mov
mov
stc
push
int3
mov
test
pusha
pop
ljmp
mov
mov
dec
shl
xchg
insl
mov
sarl
ret
xor
lret
sbb
push
adc
jp
mov
adc
push
mov
cmp
push
sbb
repz
jle
add
repnz
push
pop
push
std
and
mov
in
test
mov
fisttps
test
lods
pop
popf
arpl
dec
push
add
cld
ficompl
cmpsb
in
or
test
fcmovb
aas
aas
popa
lret
push
jecxz
cs
mov
outsl
call
ljmp
dec
push
sub
leave
sti
mov
shlb
xchg
sbb
out
mov
mov
jmp
aad
cmp
mov
punpckldq
pop
or
fs
mov
test
test
adc
and
inc
test
jmp
insl
jne
mov
lds
push
or
daa
fnstcw
les
movsl
pushf
fcoms
xchg
pop
push
jbe
jge
punpcklbw
cmp
or
call
or
push
xor
rolb
test
dec
leave
outsb
js
hlt
insb
mov
rcrl
mov
xor
imul
push
cmp
jnp
fstpt
xchg
int3
insb
clc
and
scas
and
stos
movb
inc
or
add
dec
add
shll
popl
inc
mov
jno
addl
ret
fwait
out
jno
add
jg
dec
pop
push
pop
adc
ret
pop
divl
cmp
sub
add
push
fstl
inc
sub
cld
arpl
and
sbb
and
iret
rcrb
rcl
scas
out
mov
lods
aaa
mov
test
mov
fucomip
push
sbb
cmp
test
lret
iret
loopne
insb
xchg
push
lock
insb
fwait
dec
ret
pop
fildll
push
dec
and
in
mov
test
push
pop
inc
push
inc
push
cltd
add
jae
aam
mov
arpl
lock
jo
and
lea
jb
pop
movntq
jae
cmc
mov
sbb
repnz
xchg
aaa
icebp
adc
xchg
pop
orl
dec
cmc
lcall
dec
mov
cld
pop
mov
sub
mov
push
fnstenv
outsb
insb
sahf
xchg
lock
ret
push
mov
leave
adc
loope
out
jb
cmpsb
leave
icebp
cld
out
xchg
notl
adc
xor
sbb
ret
pushf
jle
sbb
sbb
loope
adc
pop
mov
cmpsb
push
fld
in
xchg
sub
jne
mov
add
repz
mov
push
xchg
das
ljmp
cmp
sub
jmp
fwait
xlat
mov
fisubl
push
jp
mov
or
dec
push
push
shlb
or
out
int
scas
fs
cmp
cli
rolb
lock
arpl
pop
inc
dec
jb
mov
mov
xor
push
orl
movb
in
inc
push
imul
pop
loope
nop
clc
cmp
adc
sbb
scas
imul
pusha
sub
inc
lahf
stc
mov
push
or
ficompl
push
push
jmp
loopne
test
int
sub
mov
lds
aad
repnz
mov
fimuls
test
ja
xchg
mov
cmp
sti
in
sti
xor
in
out
or
xchg
inc
lock
push
lods
inc
mov
push
adc
test
sti
mov
ljmp
jmp
lds
and
stos
ret
jl
xor
ja
rcll
sbb
inc
loope,pn
jp
in
jmp
hlt
pop
push
add
mov
test
jmp
sahf
push
mov
xor
xor
mov
outsl
mov
sub
cli
mov
jnp
mov
dec
jb
xchg
push
lret
cmp
sahf
and
ljmp
mov
jmp
sub
test
pop
inc
inc
sub
test
popf
dec
lock
mov
sub
push
cld
pop
cli
jle
out
jecxz
loopne
xchg
xor
sub
jno
jns
movsl
sub
mov
or
xchg
inc
enter
lock
and
jne
movsb
sub
inc
mov
cmp
and
push
rcrb
aaa
add
xlat
sub
and
push
inc
stos
pop
dec
je
enter
xchg
sbb
pop
cmp
inc
idivl
cs
or
inc
fldcw
xor
or
cmp
adc
xchg
imul
pushf
cmp
sti
jg
mov
or
loop
shlb
xchg
jle
popa
ss
shl
aad
mov
lcall
mov
mov
in
pop
imul
pop
rcrl
jge
imul
mov
fwait
test
out
sub
aas
incl
sbbl
ret
call
pop
jo
cmpsl
bts
popa
mov
in
js
cwtl
data16
push
jg
pop
xchg
mov
sub
xchg
paddq
pushaw
mov
cmpsl
inc
enter
dec
jo
movsb
pop
push
sub
jns
jae
lret
adc
xor
xor
jnp
ja
mov
pusha
and
dec
adc
xchg
orb
mov
mov
sti
ret
xor
jbe
adc
mov
loopne
mov
repnz
or
jo
fistps
mov
aad
into
push
test
pop
leave
dec
xchg
les
outsl
les
and
xchg
lret
pop
xlat
nop
add
xor
jg
jnp
daa
xchg
sub
lods
mov
imul
cmp
xchg
ret
xchg
les
xor
sub
push
jmp
and
adc
cmp
xor
loop
ss
mov
and
adc
popa
lea
ffree
push
jg
sbb
mov
mov
ja
mov
and
call
gs
pop
rol
enter
adc
leave
stc
mov
iret
loop
syscall
nop
repz
xor
shrl
lahf
jmp
xchg
clc
jp
lods
push
rcr
imul
sbb
adc
shll
fsub
out
leave
xor
inc
cmpsl
xchg
icebp
pop
xchg
adc
and
push
pop
mov
mov
shrl
push
filds
cmp
mov
jno
test
leave
ret
mull
xchg
repnz
int
mov
dec
scas
adc
mov
iret
stos
sbb
inc
adc
aas
xor
and
xlat
mov
pop
pop
cmpsl
jg
sub
mov
lcall
jb
xor
jno
mov
in
jbe
bnd
cmpsl
andb
inc
dec
fnstsw
adc
mov
mov
sahf
inc
mov
cmp
mov
out
sbb
test
xor
mov
push
es
sbb
dec
imul
push
stos
aam
pop
jge
int
inc
iret
out
stc
add
scas
rcll
inc
pop
push
cld
mov
pop
popf
les
adcb
mov
test
mov
sbb
pop
rorb
sbb
adc
adc
fldl
ret
xor
mov
std
push
or
jns
loopne
mov
outsl
scas
xor
jge
ror
sub
sbb
cltd
lahf
imulb
cmpsl
insl
je
jge
fs
sahf
imull
ds
in
add
mov
jbe
or
mov
sbb
lods
fidivs
add
ss
and
cmp
dec
xchg
loopne
incb
jmp
bnd
hlt
xor
add
sub
inc
sub
push
popa
lret
rorl
arpl
push
xchg
popf
cld
and
push
and
int
call
rcr
sbbl
push
and
push
cli
jo
loopne
mov
pop
cld
lret
push
sub
xor
rclb
out
or
test
adc
jmp
mov
or
xchg
lret
pop
mov
lahf
lret
mov
pushf
aaa
mov
mov
stos
pop
mov
or
xlat
xchg
ja
jle
lea
in
loop
stc
xchg
clc
out
ret
or
sub
jno
gs
push
fwait
mov
aas
ljmp
xchg
lret
inc
inc
in
sbb
or
inc
sub
mov
xor
daa
outsb
inc
push
or
push
nop
dec
sbb
jg
mov
xor
sbb
jecxz
inc
pop
daa
hlt
dec
cmp
add
push
cld
dec
aas
bound
movsb
jnp
cli
arpl
cmp
push
pop
xchg
xchg
ljmp
xor
divb
push
les
aad
notb
scas
shrb
xor
out
mov
and
mov
cld
push
mov
pop
test
test
jnp
push
adcl
sub
and
pop
cs
scas
mov
push
push
loop
pop
loopne
sub
in
bound
push
in
xlat
push
sbb
adc
arpl
ds
pop
arpl
inc
cmpsb
cmpsb
loopne
rcrl
sub
mov
and
lret
bound
cmp
aam
push
jp
and
repnz
lret
fisttpl
inc
or
data16
not
mov
cs
sbbb
int
jge,pn
mov
aad
lret
xchg
cli
jg
iret
out
test
scas
xrelease
pop
outsb
pop
pop
sub
ss
pop
jle
mov
andb
xor
nop
cmp
test
shlb
sbb
lcall
and
xchg
call
les
cmpsl
pop
jp
mov
ret
jecxz
jne
and
into
popf
xor
gs
mov
pop
movzwl
add
cmp
in
fcompl
inc
mov
lock
test
aad
mov
fwait
inc
mov
bound
rclb
cld
std
out
xchg
mov
aad
aad
mov
adcb
clc
push
sub
in
out
idivl
scas
out
clc
push
inc
stc
jbe
stc
stos
into
test
cmpsl
mov
je
sahf
inc
cmpb
xor
adc
jne
mov
xchg
push
out
dec
jl
ljmp
pop
push
adcl
fnstcw
jne
mov
jo
daa
lods
stc
sahf
js
adc
out
andb
fsubl
movsb
sbb
adc
xchg
push
pop
xchg
cs
fisubs
and
pmaddwd
test
xchg
add
mov
adc
mov
sahf
ds
or
sbb
sbb
ret
mov
mov
cmp
push
jbe
push
outsb
or
fcmovne
push
cli
xor
adc
push
addr16
mov
sbb
bound
pop
cmp
sti
out
fisubs
mov
and
lret
fdivr
call
or
or
cmp
add
loop
xchg
ja
push
cmp
cmc
and
add
sbb
out
in
cltd
in
pop
pop
cmp
ljmp
shlb
or
mov
or
push
mov
mov
mov
lret
mulb
gs
insb
cmp
jnp
fsubs
loopne
rolb
adc
test
hlt
int
fdivp
mov
jo,pt
scas
ja
cli
mov
bound
jo
sbb
lock
mov
mov
loope
pushl
inc
inc
mov
and
and
and
andl
cld
inc
and
mov
lock
call
mov
or
xor
mov
push
jne
cmp
mov
mov
cmc
cmpsl
daa
movsb
jns
roll
imul
cmp
in
lret
xor
pop
insb
leave
aas
je
stc
push
pop
mov
aam
bound
and
outsb
hlt
inc
daa
cmp
sar
mov
icebp
add
lock
movsl
out
popf
btr
loopne
add
mov
mov
jns
mov
test
test
rclb
or
inc
fisubl
inc
into
test
ret
xor
jno
cmp
mov
fwait
cmp
fstp
pop
int
mov
inc
pop
in
lods
es
xchg
daa
sbb
fnstcw
fbstp
hlt
xor
xor
mov
andb
nop
popa
movsl
sahf
pushf
xor
pop
clc
push
cmp
jnp
sub
mov
mov
push
test
add
and
adc
dec
je
cmp
jg
cmp
push
iret
in
insb
fbld
in
mov
and
pop
outsb
incl
sarl
iret
les
int3
mov
xor
sub
ss
scas
rclb
aas
ds
loop
pop
xor
mov
ljmp
test
mov
mov
mov
jb
jle
pop
bound
add
cld
iret
scas
pop
adc
push
pop
mov
dec
mov
rcrb
fiadds
adc
fidivs
popa
mov
in
stos
sbb
imulb
incb
fs
inc
test
fdivr
or
and
int3
orl
and
xor
inc
mov
xchg
lahf
mov
xchg
mov
into
adc
pushf
mov
dec
inc
xchg
notl
fldcw
xor
cmp
loope
mov
je
lods
call
cltd
mov
sub
ficoml
fiadds
xchg
fisttpll
dec
cmp
sbb
cmc
loopne
das
inc
jo
dec
shlb
push
nop
dec
sub
add
inc
imul
pop
dec
sub
adc
jmp
cltd
push
dec
jecxz
es
std
inc
test
je
icebp
xchg
mov
stc
xlat
pop
mov
sbb
in
stc
and
imul
mov
and
sub
cmp
add
push
loop
dec
lods
shr
lock
jo
lods
inc
jmp
push
inc
in
inc
ret
movsb
and
xor
bound
repz
es
jae
or
out
jle
pop
sbb
aam
cmp
dec
xor
jae
sarb
push
cmp
popa
pushl
and
fsub
sub
sbb
test
int
js
add
or
fildl
into
inc
inc
fsubl
repnz
rcl
sub
inc
ja
popa
mov
es
jecxz
sub
add
lock
out
nop
adc
sub
movsb
je
pop
push
xchg
and
mov
xchg
cmc
pushf
cmp
lahf
negb
shrl
into
inc
add
fstl
ja
iret
cs
ss
xchg
add
ljmp
push
lcall
sbbl
push
clc
jb
stos
cmp
pop
cmp
xchg
sbb
sbb
jmp
push
or
inc
movsb
pushl
mov
out
mov
mov
sub
jle
dec
adc
sbb
dec
into
lret
imul
fcmovu
test
fnstenv
inc
cmp
xor
je
pop
rdpmc
icebp
lret
push
std
mov
sub
or
aas
insl
sub
push
mov
ss
cmp
pop
jecxz
arpl
into
inc
or
cli
sbb
lds
pop
out
mov
push
push
outsb
cmc
inc
add
out
mov
mov
lods
jno
in
cmc
mov
int
ret
add
adc
mov
dec
decb
push
sbb
lahf
ja
cld
dec
int3
outsl
push
std
mov
sbb
sbb
fldcw
mov
movsb
out
jp
cmp
lea
push
mov
test
shlb
lea
jb
nop
xchg
int
iret
and
adc
add
pop
daa
push
dec
stc
sbb
jns
jne
cli
add
and
stc
popf
arpl
jl
jp
sub
sahf
mov
shll
out
shrl
adc
inc
fistpll
shlb
mov
repz
test
std
cmp
mov
xchg
or
sti
fstps
jo
enter
mov
call
cmp
std
sub
and
test
bound
inc
lret
int3
sbb
std
imul
sahf
popf
andb
insl
xchg
mov
jnp
push
stc
xlat
in
in
icebp
test
mov
gs
add
mov
ja
ja
or
icebp
dec
pusha
sub
int3
popf
ret
stos
in
stos
inc
je
add
loopne
mov
inc
cld
insl
pop
inc
xor
and
in
add
loop
scas
out
out
sahf
sbb
inc
inc
push
incb
stos
std
push
shlb
loopne
inc
xor
and
xor
out
aaa
loop
cmp
repnz
xor
and
imul
bndstx
inc
imul
or
or
movsl
dec
sti
frstor
push
loop
inc
sbb
push
mov
cmp
leave
lret
xchg
mov
fmuls
push
mov
fwait
mov
mov
pop
ret
ja
test
lock
jbe
push
push
mov
jno
sub
stos
insb
mov
jmp
ljmp
test
rcrb
ljmp
cmpsb
fcmovu
xchg
sub
inc
shl
jae
adc
pop
adc
std
jns
mov
fistl
sbb
cwtl
push
out
sbb
lea
testb
sub
fistpl
adc
mov
insb
mov
mov
call
adc
enter
test
xchg
mov
and
push
xchg
pop
sbb
mov
push
add
dec
xchg
mov
pop
cld
imul
inc
loope
or
push
dec
stc
sbb
sar
push
sub
test
pop
in
jne
js
dec
dec
loop
cmp
sahf
aaa
nop
mov
pop
sub
xchg
rorb
cmpsl
and
neg
pushf
sub
inc
test
mov
push
fwait
cmc
out
iret
imul
std
jge
imul
mov
dec
xorb
mov
popf
shll
es
add
mov
xor
gs
push
negl
jl
and
fstpl
cmpsl
dec
xchg
push
lea
ss
enter
adc
jl
xor
in
call
cltd
mov
psrlw
cltd
jmp
incb
push
icebp
scas
stos
and
adc
dec
jp
fsts
aam
subl
push
sti
mov
pop
cmpsl
hlt
sub
jne
pop
adc
ret
sti
aam
mov
lret
lods
mov
xor
inc
clc
sti
adc
jge
dec
pop
jbe
mov
xchg
push
movsl
push
data16
and
add
mov
into
sub
push
pushf
stc
into
and
jbe
leave
or
push
lret
push
in
or
mov
sti
aam
inc
mov
test
and
jg
fisubrs
jnp,pt
mov
in
xchg
cmpsl
cmpsl
mov
push
or
cmp
negl
add
shld
jbe,pt
mov
cmp
stos
cmpsl
lock
and
jb
movsl
pop
push
imul
inc
out
sub
ss
outsb
in
lock
int3
in
clc
jp
mov
dec
rorb
adc
push
xor
movsb
add
imul
lret
mov
lret
push
scas
pop
fwait
test
test
and
lahf
add
mov
out
pop
sar
pop
inc
mov
dec
fistpl
cmpsb
push
fs
jno
sbb
mov
sbb
mov
mov
inc
mov
out
jl
cmp
sbbl
into
roll
bound
in
out
jmp
mov
aas
adc
daa
ljmp
mov
lahf
push
stos
test
xlat
xor
mov
mov
xchg
out
cmp
imul
sbb
push
or
arpl
cs
mov
cmp
pop
xor
nop
inc
jmp
aaa
test
sbb
adc
mov
cli
mov
daa
mov
inc
test
mov
mov
popf
mov
xor
xlat
add
or
int
or
mov
jae
hlt
cli
in
and
inc
sarb
inc
xor
adc
popa
lea
xchg
stc
sub
out
popa
idiv
ss
jp
icebp
mov
std
cmpsl
push
xlat
rclb
aam
fs
mov
jle
aas
fstl
in
jle
les
ja
lea
mov
xor
inc
sbb
mov
mov
xchg
insl
xchg
pop
call
aaa
dec
mov
mov
ja
xor
stos
sbb
inc
ret
mov
int
rcrl
fadds
xchg
je
xor
cltd
lock
jbe
adc
push
test
or
xchg
cltd
test
mov
cmp
lahf
lods
xor
rcll
xor
sub
jo
sbbl
rol
add
push
test
jb
add
inc
push
orl
sbb
shrb
sbb
das
daa
pop
das
cli
les
insl
les
ret
addr16
test
jle
xchg
lahf
pop
outsl
lahf
dec
mov
rorl
movsb
dec
cmpl
mov
sub
lods
out
jb
adc
notb
outsb
sbb
fldcw
sti
push
xchg
lds
cmp
sbb
jmp
dec
mov
add
sahf
xor
mov
cli
lods
movswl
jmp
mov
movsl
sahf
or
movsl
cwtl
lods
outsb
inc
lods
ja
mov
je
repz
loope
xor
lods
aad
pop
cs
movsb
cli
dec
les
and
jno
fsubrs
int
mov
scas
sub
loopne
fcomps
xchg
push
jbe
nop
ja
inc
push
inc
adc
sbb
mov
sbb
dec
shll
jl
push
xor
cmpsl
sbb
out
xlat
mov
loope
dec
loope
aaa
out
mov
pop
mov
pop
adc
lds
mov
xchg
and
gs
inc
addr16
cmp
push
stos
sti
xchg
mov
push
push
sti
std
fmul
adc
test
ljmp
ja
mov
clc
repnz
mov
jmp
lret
push
scas
out
insb
pop
movsl
xchg
pusha
and
and
sub
test
pushf
cld
movsb
repnz
add
bnd
mov
in
pop
dec
dec
jecxz
cmpsl
loopne
xchg
xchg
cli
fisubrs
add
int3
fs
push
mov
leave
jl
stos
sub
das
enter
jle
xor
xchg
cmpsb
adc
je
xor
lcall
dec
inc
dec
cmc
add
xchg
mov
out
cmp
ror
add
xorb
sbb
and
movsl
lahf
xchg
outsb
mov
fs
cwtl
mov
push
out
xlat
xchg
inc
cltd
mov
dec
jle
pop
sub
push
imul
subl
push
popa
out
stc
mov
mov
mov
in
adc
sbb
scas
sti
push
cld
add
adc
out
fimull
push
inc
test
lds
cmp
aaa
or
into
scas
lcall
mov
add
add
xchg
inc
in
les
mov
dec
clc
pop
int3
into
rcrb
mov
addr16
dec
mov
mov
mov
ret
out
clc
test
movsl
dec
mov
rol
repnz
dec
out
popf
stc
jle
mov
arpl
xchg
imul
loopne
pop
test
sbb
call
pop
cmpsl
or
ret
fwait
cmp
pop
stos
jge
clc
cmp
jg
popa
sarl
out
pop
inc
cmc
sub
enter
pop
add
shrl
xchg
xor
push
adc
in
mov
arpl
loop
iret
lret
sub
sbb
inc
push
test
cmp
xchg
daa
in
shrl
mov
add
popf
mov
pop
mov
sub
out
push
or
mov
shll
rcrb
cmp
push
mov
mov
mov
fwait
mov
icebp
fmul
and
je
clc
test
xchg
iret
add
sahf
push
sbb
ljmp
mov
lret
insl
sub
inc
push
and
cmp
or
dec
push
iret
negb
jo
and
out
int3
movsl
lret
andb
cmpsl
fsubl
or
subb
mov
push
rcr
aas
not
daa
xchg
cld
cmp
cmp
adc
movsb
cs
or
lods
mov
jae
fiaddl
push
mov
fldcw
dec
outsb
insb
xchg
pop
mov
cmc
mov
dec
test
xchg
jg
sub
add
lret
cmpsb
pop
add
movsl
lea
ret
push
pop
mov
xor
mov
out
xchg
xor
inc
jne
push
jns
test
sbb
lock
dec
adc
nop
and
dec
sub
les
test
les
mov
lds
xchg
or
adc
inc
mov
push
neg
dec
sub
adc
push
xchg
rcrl
rclb
mov
cmc
jle
push
jle
pop
xchg
outsl
push
shll
cli
pop
cltd
jne
ret
inc
in
sub
test
jne
rcrl
jae
lcall
xchg
sbb
inc
xorl
mov
mov
pop
cmpsb
adcb
cwtl
jnp
ja
jle
inc
faddl
mov
push
outsb
out
scas
sub
call
lock
test
pop
call
sbb
sub
shl
adc
in
xor
sbb
std
cwtl
aaa
shrb
repnz
xchg
adc
out
push
test
sub
leave
fdivrl
daa
jp
or
pop
xchg
test
inc
cmp
jmp
jmp
jbe
inc
push
jo
inc
pop
mov
pop
add
push
inc
fisubl
cmpsl
xor
push
pushf
daa
or
add
adc
mov
repnz
fdivs
mov
cwtl
inc
mov
jmp
aam
enter
imul
add
mov
movsl
stc
scas
mov
inc
mov
out
sub
clc
add
jge
pop
popa
jl
jnp
bnd
fisubrs
inc
jnp
push
fs
pusha
mov
xchg
sbbb
xchg
mov
push
je
or
dec
jns
or
subl
and
jmp
ljmp
mov
push
inc
and
pop
mov
jno
adcb
push
pop
pop
jmp
in
mov
scas
jns
pop
add
pushf
inc
xor
sbb
cmp
gs
cmp
sub
xchg
mov
ljmp
cmp
iret
lahf
mov
in
pop
test
or
push
leave
enter
push
popf
fdivrs
or
inc
mov
push
jns
mov
or
inc
push
mov
pop
repnz
cmp
push
jg
jmp
fbstp
imul
imul
adc
push
sbb
dec
nop
repz
inc
cld
push
sub
shr
mov
enter
roll
scas
js
push
jb
loop
mov
cmpsl
enter
push
leave
test
popf
sbb
or
pop
mov
into
push
xlat
jg
cmpsl
xlat
push
out
push
int
jns
jle
and
dec
and
mov
xchg
fidivrl
bound
inc
inc
mov
jmp
xchg
dec
js
xchg
sbb
push
jb,pn
jae
lret
push
push
sub
mov
or
xor
xchg
lds
pushf
xchg
add
ja
mov
js
mov
cltd
sbb
xchg
sbb
lahf
fldl
divpd
sbb
repnz
push
add
test
mov
jb
out
xlat
aaa
mov
js
loopne
je
cmp
outsb
push
in
mov
lods
cmp
mov
dec
push
dec
push
lret
cwtl
insl
cmpsb
in
stos
js
lods
sbb
outsb
push
jo
sbb
je
jge
adc
or
mov
dec
push
xor
idivl
xchg
iret
pusha
mov
adc
sub
ljmp
adc
dec
sub
aaa
jno
aad
cmp
pop
xchg
movsl
mulb
dec
fwait
sbb
push
sbb
outsl
les
lret
lock
push
mul
imul
sbb
jbe
add
jns
outsb
pop
cmp
inc
mov
inc
lcall
and
pop
mov
cwtl
sub
xorb
cmp
xor
decl
xor
inc
and
pop
push
je
fdivs
fsts
pushf
cmpsl
cld
insb
pop
cmp
les
fstps
inc
cmp
imul
cmpsb
adc
or
xor
and
jp
fdivs
rclb
out
jp
sbb
enter
sub
cmpsl
cmc
add
cmp
dec
fwait
cwtl
idivl
cwtl
mov
call
hlt
inc
daa
fucomip
or
cmp
xchg
adc
and
loop
mov
imul
lret
jns
and
ret
push
add
mov
fildl
lea
mov
and
outsl
xchg
and
inc
cmp
pmulhuw
jo
das
xor
cmp
clc
and
jg
push
sti
mov
push
sbb
xor
xor
jbe
xor
push
stos
cmp
sbb
incl
ret
push
les
push
scas
mov
sbb
cltd
and
xor
fmull
ret
iret
jns
or
test
das
ret
daa
jg
int
data16
ljmp
sub
mov
fisubl
adc
sub
outsb
lock
cmpsl
scas
test
add
lcall
ss
scas
adc
repnz
ljmp
dec
jb
cmpsb
fidivl
repz
push
mov
pop
ret
push
sbb
sti
add
in
sti
movsb
and
movsl
cmp
push
loop
dec
aad
leave
das
cmp
push
push
sub
insb
push
adc
pop
cmpsl
adc
leave
pop
jg
loop
stos
jle
dec
pop
loope
sbb
aaa
inc
sub
or
mov
clc
stos
mov
cmp
cmp
xor
lods
mov
rcr
mov
inc
int
sbb
mov
mov
jecxz
clc
sti
cmpsl
stos
dec
push
cmp
cmpsl
mov
jns
add
cmp
mov
adc
mov
icebp
jle
scas
jno
mov
mov
fstpt
xchg
testl
cmpsl
in
cmp
sub
stos
add
pop
test
ficompl
aaa
inc
cmpb
push
lds
sub
xchg
push
push
dec
dec
push
inc
or
repz
fadd
cs
adc
fs
aam
sbb
ja
mov
sbb
mov
or
fldcw
xchg
mov
push
aas
cmp
pop
add
aad
mov
repz
mov
sbb
mov
sub
cmp
cli
gs
fs
aam
enter
ja
jb
and
mov
xchg
je
movsb
xchg
ret
out
inc
out
xchg
pop
mov
mov
adc
cmp
adc
popa
shrl
and
mov
cltd
lahf
imul
out
pop
popfw
xor
mov
dec
popa
xor
cmp
rcrl
or
jl
jg
fidivs
loop
arpl
sahf
cmp
push
push
adc
loopne
ret
loope
into
test
jne
arpl
je
mov
cmc
pop
dec
clc
push
inc
insb
and
call
outsb
push
imul
fs
cltd
xchg
mov
out
dec
push
inc
mov
aam
jmp
adc
inc
mov
adc
cmp
jno
out
jb
inc
in
mov
jmp
pop
addl
pop
cmpb
add
xor
jg
aaa
sahf
sbb
repnz
fdivrs
xchg
sahf
repz
dec
clc
test
in
cmp
dec
mov
repnz
scas
cli
inc
push
jge
insl
lock
pop
cs
dec
je
jp
gs
mov
push
cmp
stos
outsb
popa
sahf
jmp
out
sarl
cmp
xchg
mov
mov
or
ror
adc
cld
pop
xlat
inc
inc
icebp
sub
test
fisttpll
mov
lds
jne
fildl
repz
mov
mov
mov
movsb
test
das
stc
imul
cmp
in
in
mov
cmc
inc
mov
jns
scas
lock
adc
je
out
stos
sbb
mov
lret
aas
or
in
dec
sbb
dec
and
push
out
loope
mov
inc
int3
and
leave
out
adc
sbb
in
stos
push
add
adc
mov
add
out
loope
mov
popf
lods
fst
mov
out
fwait
gs
cmp
sbbl
out
jb
mov
sbb
xor
ret
mov
pop
and
sub
shrl
stos
push
neg
sarl
inc
scas
sub
loop
cmpsl
pop
pop
leave
jo
cmp
xorl
sbb
testb
and
bnd
push
lds
mov
fwait
xchg
xchg
xchg
je
cmc
jno
enter
dec
mov
movsl
jae
js
rcll
xor
xor
add
adc
mov
outsb
sbb
sbb
mov
dec
hlt
fnstenv
shl
loope
xor
jo
cmpsl
cwtl
js
push
data16
push
mov
out
jb
mov
inc
in
out
ja
mov
stos
jne
jmp
lods
in
xor
stos
add
test
push
out
ret
jnp
in
dec
and
push
add
mov
mov
mov
ja
fdiv
pop
out
xchg
add
inc
mov
lea
add
lahf
pop
lods
add
jge
pop
xchg
jle
sub
jno
push
and
sarl
and
orb
ficomps
je
mov
scas
sbb
mov
push
insl
sub
jnp
ss
icebp
sbb
mov
sbb
pop
shlb
fdivs
lea
mov
push
enter
push
pushf
mov
dec
nop
add
xlat
dec
mov
jge
shl
jmp
or
decb
or
cmp
cli
in
movl
lods
lock
mov
push
push
daa
lret
cmpsb
notl
shll
sbb
xchg
rorb
notl
ss
loop
and
add
loope
xchg
nop
popf
lods
dec
jo
addr16
jge
and
xor
xchg
data16
inc
and
outsb
test
ficoml
in
and
push
and
mov
int3
ljmp
jne
xchg
ja
scas
rclb
xor
mov
adc
mov
mov
iret
scas
cmc
lds
inc
pop
imul
nop
in
add
or
xor
lds
xor
inc
faddl
hlt
sub
inc
jae
mov
rep
add
rcrb
sub
icebp
inc
add
pop
adc
sbb
fmul
and
repnz
push
cltd
jb
mov
inc
test
push
aad
xor
icebp
aam
ja
ljmp
int
sub
in
mov
fisttps
lcall
or
loope
and
cmpsl
dec
or
sbb
daa
int
int3
fs
mov
subl
cmp
pop
lret
xlat
not
adc
jbe
sbbb
xchg
mov
fs
xchg
cmp
push
pusha
insl
and
test
fwait
scas
xchg
in
add
lods
or
insl
adc
fsubs
push
fnstcw
mov
pop
sarl
inc
lahf
loope
mov
sar
addr16
movsb
scas
dec
cmp
mov
mov
xchg
add
fisttpl
daa
xchg
shll
push
hlt
pop
cmpsl
cmp
nop
aad
popf
mov
or
or
sub
in
test
in
popa
jbe
pop
insl
bound
push
faddl
push
test
lahf
xchg
mov
orb
pop
lea
push
xchg
pop
daa
dec
or
loopne
pop
scas
add
ja
sub
and
popf
adc
xchg
push
add
pop
xor
and
pop
fadds
cli
fadds
popf
mov
adc
int
push
and
inc
lret
pop
mov
inc
popf
movsb
test
cli
pop
test
shrl
add
lock
mov
test
and
repnz
scas
jp
sub
xor
test
ljmp
sbb
jmp
fisttpl
mov
lahf
bound
imul
cs
shlb
pop
mov
adc
int
mov
add
test
arpl
xor
mov
or
sub
ss
add
scas
je
mov
fucomi
test
mov
mov
adc
ficoml
imul
in
inc
dec
jmp
adc
jecxz
es
lret
mov
jmp
repz
movsl
push
push
mov
mov
xchg
adc
jmp
mov
inc
adc
lock
sarb
ret
push
dec
mov
mov
test
in
add
xor
add
aas
mov
mov
inc
cwtl
jbe
in
dec
movsl
jecxz
stos
mov
push
dec
cld
fscale
add
repnz
add
cmc
jge
mov
xchg
push
inc
fwait
test
sbb
xchg
lret
add
pop
test
add
mov
divb
add
lods
xchg
lods
cmpsl
add
push
pop
inc
sbb
das
xchg
add
sub
fidivrs
xor
jl
add
mov
sarb
or
pushf
cmp
sub
ds
push
pop
data16
dec
adc
fwait
lods
lods
aad
shrb
jns
ja
bound
jb
mov
adc
outsl
jl
pcmpgtw
inc
rclb
sbb
push
stos
xor
sbb
push
cld
pop
mov
jle
push
adc
xor
shrb
xchg
sbb
pop
cmp
outsb
xchg
mov
fsubs
popa
mov
sbbl
insl
adc
mov
popf
jmp
mov
push
mov
xor
push
lret
divl
imul
push
lret
pop
inc
int3
pop
bound
sub
adc
out
mov
pop
cltd
cld
shr
xchg
lds
clc
push
dec
adc
push
ret
sbbl
test
or
ja
dec
jae
fwait
repz
movsb
jp
dec
jnp
scas
or
in
fcoml
push
sbb
arpl
hlt
mov
mov
lock
sbb
repnz
mov
mov
aam
sbb
cmp
cmpsb
mov
cwtl
cs
or
sbb
pop
mov
insb
ljmp
jmp
mov
out
ljmp
loope
mov
add
inc
cs
jmp
add
mov
adc
push
pop
mov
sbb
jle
outsl
push
inc
nop
xchg
notl
int
xor
sti
pop
jecxz
or
mov
cmp
or
loope
push
mov
test
inc
fs
aas
in
subl
stos
mov
and
pop
inc
ffreep
in
sarl
nop
scas
push
cmp
xor
mov
je
add
repz
sbb
cli
scas
push
sti
in
mov
xchg
mov
and
loop
lgs
sbb
out
lock
fisubrl
aam
adc
push
pop
push
push
in
loope
inc
lcall
and
inc
pusha
lea
jo
and
es
outsl
scas
mov
sub
adc
dec
adc
out
cmp
xlat
push
xchg
addr16
sahf
std
push
xor
cmpsl
leave
and
jnp
fsubs
loope
jae
or
dec
xchg
int
mov
xor
mov
cli
and
pop
movsl
xchg
xchg
cli
adcb
mov
inc
fmull
icebp
cmc
aam
sub
ficoml
fs
outsl
rcl
stos
shrb
fisttpl
rcrl
push
es
dec
xchg
int3
imul
popf
jo
xchg
xchg
pop
fwait
add
rcr
sub
loopne
mov
or
shrb
pop
lcall
mov
lock
lods
cmp
push
mov
int3
mov
jecxz
cld
adc
inc
dec
sub
aad
mov
adc
mov
in
ror
mov
out
pushf
mov
cltd
mov
outsb
xor
sbb
mov
push
fchs
outsb
shl
in
dec
out
shrb
int
sbb
in
dec
pushf
push
xchg
outsl
fdivrs
push
push
jg
mov
fmulp
fsts
mov
test
mov
mov
les
xchg
mov
push
out
imul
out
lds
adc
push
or
dec
dec
jae
or
cld
mov
xchg
fcoml
leave
pushf
pushf
sub
xchg
into
imul
mov
xor
cmp
lds
inc
sub
addr16
jns
pusha
jge
pop
mov
jno
int3
pop
mov
mov
adc
xor
inc
inc
cmp
cmpl
xchg
cmp
loope
inc
adc
mov
jg
and
sub
or
adc
jg
imul
xor
jne
or
outsb
cmp
push
inc
sub
in
pop
popa
xchg
fisttps
inc
cmp
push
jnp
mov
add
daa
test
int
pusha
add
repz
pop
inc
pushf
and
adc
stos
xchg
mov
mov
pop
movsb
out
aam
std
bound
mov
or
cmp
ss
jno
xor
sbb
inc
lret
mov
jmp
test
add
push
push
xchg
repnz
or
push
roll
pop
mov
push
hlt
mov
out
jmp
sti
add
cmp
sahf
imul
notb
adc
inc
negl
push
xor
vphaddbd
in
sbb
arpl
push
cmpl
fucomip
cmp
jl
out
add
pop
add
data16
rcll
inc
pop
cmp
xchg
or
ror
pop
cmc
es
pop
inc
push
ds
pop
int
push
xchg
out
cmpsb
in
bound
adc
mov
push
lods
repz
cmp
icebp
sub
mov
xor
add
outsb
jnp
enter
lahf
sub
fdivl
inc
rol
stos
nop
push
or
sti
lods
push
dec
dec
aas
rclb
mov
xchg
xchg
jne
popf
in
pop
daa
outsb
pop
mov
mov
in
sti
sub
xchg
hlt
sahf
sub
testb
mov
ret
jnp
cwtl
mov
jge
insb
scas
stc
mov
inc
inc
fcompl
adc
sub
adc
call
push
cld
jle
xor
xchg
icebp
movsb
jecxz
inc
scas
or
inc
xor
mov
pop
rol
lock
dec
xor
add
sub
test
fsubrs
inc
out
jb
stos
orb
cmpsb
fwait
repz
xor
js
sub
cmp
mov
shrl
push
in
mov
pop
and
lods
inc
rolb
insl
es
lret
arpl
pushf
cmp
push
mov
shll
std
and
or
pop
aam
ds
icebp
pand
fsubs
mov
loop
aas
loope
add
imul
lds
cmp
adc
cmp
add
pop
or
push
test
cmc
fs
pushf
inc
arpl
dec
mov
out
or
or
cli
or
hlt
jns
fxch
jne
into
int
push
inc
or
fwait
pop
xchg
loope
sbb
mov
imul
mov
fld
xor
push
jae
mov
ljmp
lahf
in
push
fstl
rcr
cmc
in
jne
idivb
cmp
mov
loop
lds
rol
add
dec
insl
outsl
push
cs
insb
xchg
loopne
aam
push
jns
sub
insl
mov
mov
xor
sub
sbb
cmp
rorb
stos
or
js
insb
movl
inc
mov
outsb
xchg
sbb
ja
lods
or
stc
cwtl
repz
jno
mov
lret
stos
mov
lock
aas
daa
mov
testl
in
cs
std
mov
xchg
adc
xor
jge
adcb
aas
out
mov
fcmovnu
xchg
mov
andl
cmp
inc
mov
es
mov
mov
aam
pop
loopne
ljmp
xchg
pop
lock
repz
xor
ret
jmp
mov
loop
cmp
loopne
fwait
ret
out
jnp
add
mov
jp
fisttps
cmp
ret
inc
enter
outsl
add
jno
mov
push
test
divl
inc
es
adc
lock
fwait
les
mov
sbb
or
pop
sbb
mov
xor
in
jae
adc
xchg
fidivrs
mov
xchg
icebp
add
and
adcb
mov
or
push
sbb
mov
jb
rcr
sub
xchg
xchg
int
xchg
adc
or
shl
nop
mov
inc
js
insb
popf
insl
lods
mov
lds
cmp
jo
iret
lret
jno
push
nop
in
cmpsl
mov
insb
in
outsl
adc
lret
or
hlt
data16
add
sub
pusha
xchg
sbb
cmp
xchg
cmpb
adc
add
or
push
jo
loop
ljmp
daa
fwait
push
mov
cli
push
inc
aad
ljmp
je
andl
pushf
xor
xchg
stos
pop
push
fldcw
jae
gs
bound
add
testl
daa
lods
dec
bound
or
mov
loop
mov
pushf
jg
in
mov
roll
cmp
ret
jmp
cmc
loop
out
inc
test
js
data16
in
xor
mov
mov
outsl
aaa
inc
jle
inc
mov
inc
in
loopne
adc
test
jmp
xchg
xor
dec
mov
jle
jns
stos
or
ret
and
or
in
push
not
testb
repz
rorl
std
pop
dec
neg
clc
sbb
add
gs
xor
sub
xor
dec
outsb
mov
mov
out
sbb
mov
pop
mov
je
add
adc
xor
or
das
mov
jl
lret
in
bswap
push
push
xchg
faddl
sahf
and
push
adc
jle
or
cltd
and
jae
nop
movsl
mov
out
pop
pop
and
test
stc
dec
dec
das
std
sub
and
hlt
popa
fldenv
sbb
sbb
add
cmpsb
adc
cmove
xchg
mov
xchg
stos
in
inc
imul
pop
stos
mov
xchg
fisttpll
xchg
test
inc
mov
lods
push
push
lds
adc
sahf
roll
jge
pop
inc
push
mov
fimull
and
testb
shlb
push
xchg
add
pop
push
roll
xor
and
std
popf
scas
inc
push
inc
xchg
repz
adc
or
lods
es
movsl
cmpsl
pusha
imul
pop
imul
cmp
sub
dec
adc
xchg
xacquire
inc
nop
mov
inc
inc
add
xchg
sti
out
sbb
jo
push
imul
mov
leave
xchg
hlt
push
test
mov
call
mov
push
jnp
cld
out
fisttpll
cli
jne
dec
sub
fcompl
mov
mov
es
out
and
enter
pop
cmpsl
mov
jb
and
aam
imul
sub
cmp
aaa
xor
lods
sub
pushl
mov
push
imul
jmp
push
lret
push
inc
ret
mov
int
inc
mov
cmp
sub
jnp
nop
aaa
adc
mov
movups
push
addr16
mov
xchg
out
push
jle
lock
jge
popa
fimuls
jns
and
loopne
xchg
cmp
jae
sub
flds
shlb
dec
lcall
xor
ja
pop
push
sub
fs
rclb
shll
xchg
pop
scas
shr
adc
call
icebp
lods
add
mov
cmpsl
in
out
push
dec
cmpsb
pop
out
xor
xchg
lret
push
sahf
iret
scas
stc
sbb
adc
pop
mov
ret
fdivs
std
mov
inc
sub
adc
ficompl
inc
xchg
inc
jg
frstor
jae
dec
aas
cld
scas
lods
inc
and
push
xor
into
or
ret
cmpsl
jo
cmp
fcomps
clc
sub
xorb
dec
mov
lret
icebp
xchg
xchg
cmp
xor
movsl
mov
cmp
inc
imul
pop
loope
adc
and
dec
and
ja
push
mov
jp
lret
pop
mov
jb
nop
jl
arpl
orl
mov
xor
add
adc
sbb
xor
jae
jns
stc
and
sbb
jb
or
push
into
cmpl
xchg
jp
xchg
push
leave
imul
test
sti
sbb
adc
repnz
fisttpl
hlt
xor
fsubrl
jo
jecxz
fsubrp
leave
jns
sbb
gs
pushf
xchg
mov
out
mov
dec
sbb
shrb
push
fwait
outsb
pop
adc
icebp
lock
mov
mov
pop
jbe
jnp
bound
int
lods
sub
negb
test
stos
mov
mov
rorl
mov
xchg
add
adc
lods
fimull
mull
mov
push
mov
pusha
dec
stc
xchg
movsl
xchg
xchg
push
out
jp
cltd
mov
das
enter
sbb
int3
add
xor
pop
or
jo
jp
cltd
mov
shrb
push
sbb
cmp
jno
and
mov
sub
sbb
jmp
or
mov
movsl
cwtl
sbb
rcrl
sbb
pop
xchg
inc
inc
jl
xchg
daa
jnp
dec
push
dec
movsl
maxps
jo
mov
adc
add
mov
xchg
xchg
pop
fimuls
sbb
push
loopne
das
gs
dec
sub
sbbb
sarl
ss
dec
pushl
movsb
stos
fucomi
or
sbb
jo
or
repnz
mov
cmpsl
stc
dec
je
dec
mov
mov
mov
bnd
gs
stos
mov
aam
cmp
jecxz
mov
pop
or
sbb
rolb
lds
ljmp
fwait
push
xchg
test
hlt
push
andb
arpl
adc
pop
aas
ret
sbb
xor
xchg
inc
std
loop
lds
mov
cmp
pop
insl
out
arpl
dec
and
sbb
inc
push
dec
dec
bound
out
ret
sub
sbb
stos
cli
in
test
ds
leave
sbb
or
cmpsb
or
fidivrl
insb
jge
jmp
das
mov
testl
je
pop
movsl
dec
xor
push
clc
inc
mov
sbb
xchg
pop
icebp
mov
popf
mov
or
xor
bound
inc
je
pop
test
cmpsb
cmp
add
out
shlb
cmp
pusha
mov
push
outsb
sub
mov
and
pop
cld
dec
insb
mov
push
outsb
fldcw
or
out
push
cmp
xor
leave
arpl
insl
xor
mov
rcll
xchg
imul
cmp
cwtl
sub
cmp
fsubs
scas
jo
xchg
out
into
mov
hlt
fwait
aad
add
movsl
mov
mov
or
mov
call
scas
xchg
inc
jl
cld
pushf
cwtl
pop
insb
mov
jg
sahf
cmpsb
ret
ljmp
push
movsb
and
and
rcrb
mov
cmp
fbstp
push
pop
loope
test
push
addb
jns
jae
add
stos
jns
loopne
mov
imul
test
fbstp
xchg
pop
dec
and
stos
mov
add
cmp
sahf
arpl
jb
or
sbb
cmp
or
xchg
loopne
jns
mov
pop
jae
and
mov
mov
and
add
cmpsb
jno
in
mov
inc
inc
cmc
mov
sahf
mov
lods
jnp
inc
loope
sar
jmp
push
cmp
jb
xchg
jbe
nop
pop
int3
movsb
jns
cmp
mov
sti
pop
pop
jecxz
into
ds
adc
mov
cli
mov
dec
mov
call
or
movsb
xchg
mov
ds
mov
jg
pop
rorb
or
cmp
cli
jl
push
sbb
adc
rolb
cmc
xchg
lahf
push
test
jmp
sbb
scas
pop
adc
fnstsw
bound
push
lods
jecxz
cmp
repnz
jle
inc
test
sub
and
adc
mov
sbb
pop
fmull
jg
lds
push
cmp
jmp
addr16
push
aas
push
mov
faddl
jnp
cmp
push
sub
dec
lret
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
aas
push
cltd
mov
andb
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
inc
add
fcomip
popa
mov
fwait
mov
adc
or
and
fdivs
cmp
push
add
packssdw
jbe
fisubl
or
inc
inc
loope
mov
sbb
add
push
cltd
mov
cmpl
popa
sub
ja
popf
insl
push
icebp
scas
or
mov
lret
outsl
xchg
xlat
std
push
pop
pop
repz
repnz
cld
cmp
sarl
adc
push
lret
out
outsl
mov
add
bswap
lods
mov
push
adc
cmp
push
les
jno
div
cmp
pop
fildl
xchg
pop
push
or
push
cltd
mov
jge
mov
fwait
mov
jge
clc
popa
add
push
cltd
pop
add
outsl
clc
popa
ljmp
push
xor
jmp
mov
jge
clc
and
inc
cltd
mov
js
stc
popa
add
push
cltd
mov
jge
clc
popa
push
mov
mov
js
cli
popa
add
push
cltd
scas
add
gs
jno
scas
inc
cltd
mov
insl
gs
popa
add
push
cltd
mov
inc
imul
cltd
dec
push
mov
jp
gs
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
adc
mov
jge
call
popf
mov
sub
loope
cltd
mov
jge
sbb
frstor
mov
jge
clc
xchg
ldmxcsr
mov
jge
clc
popa
add
push
cltd
mov
pop
gs
addl
mov
gs
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
add
push
cltd
mov
jge
clc
popa
adc
push
mov
xor
push
sti
jg
jmp
nop
ljmp
adc
mov
ds
mov
lret
cs
je
cwtl
mov
int3
lret
mov
test
jg
mov
mov
movsl
cltd
push
and
sub
sub
leave
mov
xchg
aad
popf
cmp
fists
jno
xchg
movsl
xchg
or
sub
xor
jecxz
adc
cmpsb
fsubrl
movsb
adc
dec
add
outsb
adc
inc
repnz
testl
dec
adc
dec
xchg
js
xchg
fldl
repz
adc
dec
pop
xchg
insl
popf
gs
push
xchg
out
leave
inc
pop
into
fstpt
mov
lret
push
shlb
push
outsl
inc
pop
testb
jle
adc
pop
sti
arpl
cmc
adc
jo
jb
mov
dec
aaa
mov
loop
xchg
gs
pop
mov
jg
addr16
inc
repz
pop
cmp
mov
dec
xor
popa
shrb
sbb
pop
mov
nop
sbb
je
jp
cmp
pushf
add
dec
mov
mov
pop
sbb
mov
sbb
or
xchg
inc
divl
inc
sbb
or
sbb
add
imul
es
xor
pop
movsl
push
int3
fwait
push
fdivrs
hlt
lds
scas
jg
lahf
xchg
jbe
stos
inc
xor
cli
loope
iret
ja
adc
pop
sbb
inc
addr16
movsb
push
jecxz
in
pop
ljmp
pop
jne
les
movsb
idivb
repz
xchg
inc
or
mov
add
aas
push
jnp
lods
lret
bound
mov
push
add
rcll
push
pop
adc
rorb
lret
pusha
dec
pushf
dec
lret
adcl
cmc
jl
jo
gs
lret
jmp
jge
cwtl
enter
test
les
xchg
or
mov
mov
sahf
inc
pushf
xor
pusha
dec
push
jae
lods
int3
sbb
aas
es
xlat
mov
xor
inc
pusha
in
int3
mov
jno
mov
mov
xchg
push
xchg
les
cmp
add
pop
sbb
lds
cld
push
pop
scas
movsb
data16
lret
xchg
push
sahf
daa
lret
call
mov
push
ss
xchg
push
test
out
aad
sub
stc
xchg
adc
sbb
sbb
lock
sahf
jne
clc
fcompl
lea
xor
jmp
mov
out
sbb
fcomi
test
scas
cmp
inc
and
test
lock
push
bound
adc
sti
xor
xor
test
notb
adc
daa
out
push
bound
test
test
mov
adc
pop
add
push
push
adc
push
push
arpl
hlt
rcr
inc
in
scas
jmp
stc
adc
inc
or
fisubs
or
out
xor
scas
adcl
mov
icebp
jmp
cltd
movsb
sbbl
add
sti
mov
jno
or
pop
lock
or
cmp
jns
sbb
push
jno
inc
pop
outsl
sub
jecxz
cmp
loop
ret
mov
pop
in
inc
mov
and
outsb
in
shr
aam
xchg
push
cmp
mov
test
insb
push
push
cltd
pop
jge
dec
out
aam
mov
popf
lods
fwait
mov
mov
rolb
mov
mov
or
cmp
lahf
out
notl
xchg
inc
lods
loopne
jae
and
jns
imul
or
add
cmp
and
into
cmpsb
out
in
cwtl
dec
cli
sbb
and
repnz
jnp
mov
lcall
sub
push
es
int3
ret
xor
aam
mov
adc
jp
mov
ret
rsqrtps
inc
dec
je
jbe
enter
push
push
xchg
jns
std
pop
js
sub
sbb
stos
clts
or
push
sarb
sbb
adc
mov
test
sbb
xor
repz
cmp
mov
pop
mov
adc
jbe
mov
jbe
aad
orb
push
sub
push
add
mov
xor
inc
mov
jns
ds
flds
jae
push
sbb
cmc
jnp
rclb
sub
push
add
insb
mov
clc
mov
lds
dec
sbb
dec
pop
push
mov
xor
or
outsl
adc
pusha
mov
push
fptan
mov
inc
add
inc
enter
lods
jnp
jle
and
mov
dec
cmpsb
pop
sbb
add
xor
test
sbb
dec
clc
jb
call
lcall
inc
and
inc
int
leave
xchg
mov
lock
movups
sbb
testl
pop
mov
call
lock
loop
aad
lods
movsl
pop
sbb
insl
jmp
sub
cmp
inc
icebp
sahf
outsb
rcrl
add
jo
aam
sbb
adc
js
gs
pop
ss
imul
xchg
movsb
imull
popa
mov
push
xor
outsb
fnstcw
and
dec
movsl
notb
push
shrw
scas
arpl
push
xchg
mov
pop
mov
out
in
jno
sub
pop
lret
iret
push
pop
and
testl
jns
push
mov
in
mov
lods
sbb
out
fstpl
mov
dec
sub
outsb
inc
adc
mov
jno
ret
adcb
mov
pop
les
lcall
inc
sarb
pushf
sub
aaa
outsb
sbb
stos
int
lock
rorl
repnz
xchg
stos
dec
add
jge
pop
test
cmp
mov
mov
mov
sbb
and
push
out
stos
loop
mov
ret
aam
and
jne
into
sbb
lds
fwait
test
lret
inc
adc
ret
orl
or
push
xchg
subb
mov
fwait
test
cld
jmp
pushf
push
add
xchg
sbb
ja
ret
mov
mov
hlt
sbb
mov
or
adc
nop
cmc
jno
enter
fstps
dec
ljmp
lcall
push
cmp
in
icebp
mov
fstl
dec
add
mov
ror
cmpsl
jnp
out
fdivl
mov
sti
lock
jnp
out
dec
test
pop
mov
or
movsb
bnd
push
push
mov
pop
adc
mov
test
or
jne
sbb
inc
in
fsubs
cmp
cmpsb
mov
cld
outsl
clc
fidivl
pop
orl
adc
sbb
xchg
pextrw
mov
in
mov
mov
jp
push
out
and
repz
loopne
dec
push
jl
or
daa
int
movsb
push
jb
sbb
rorb
cli
sub
pextrw
pop
mov
dec
adc
nop
mov
xlat
pop
je
dec
std
fptan
cmp
call
sbb
pop
jnp
fmul
or
mov
xor
pop
test
mov
xchg
lret
lret
lods
dec
sarb
in
outsb
lods
iret
nop
push
pop
sti
daa
push
inc
leave
dec
pop
out
and
imul
push
inc
gs
mov
das
loope
pop
shlb
and
mov
int
push
hlt
psubusb
xchg
pop
into
lret
mov
cmc
imul
xor
mov
mov
push
cmp
cltd
aas
jnp
xchg
cld
icebp
out
and
push
jns
sti
push
decl
and
shrb
sbb
mov
mov
xchg
shr
orl
add
add
movsb
xchg
xor
call
add
mov
mov
sub
lahf
mov
jle
aaa
pop
cmp
jns
es
negl
jae
cli
jge
hlt
pop
insl
iret
sub
shlb
or
test
inc
test
push
dec
push
cmpsb
or
sbb
and
jle
lret
push
adc
repnz
push
push
push
sub
or
dec
pop
scas
mov
das
subb
jp
repnz
push
pop
mov
les
sbb
adc
imul
dec
mov
div
gs
pmaddwd
cwtl
lret
mov
mov
sbb
push
fistps
jbe
in
mov
cmp
and
outsb
aas
jge
ljmp
inc
inc
pop
jecxz
sub
sbb
push
xlat
mov
xor
movl
xor
jnp
and
les
in
jne
or
adcl
sub
and
xchg
mov
mov
or
or
xlat
stos
jg
cld
dec
test
movsb
dec
cwtl
fdivl
push
ja
lret
stos
lea
adc
mov
lock
int
fdivl
adc
into
int
pop
call
enter
add
jl
les
and
jbe
stos
aam
int
add
and
inc
or
push
sub
xor
aaa
int
mov
and
pushf
cmp
adc
jno
mov
daa
adc
test
lock
insb
int3
mov
add
push
pop
or
fstps
xlat
or
add
insb
cld
add
movl
jne
xor
stos
mov
sub
xchg
jge
call
in
or
decl
inc
in
adc
push
std
aaa
movsl
xchg
mov
add
nop
out
pop
inc
jle
dec
lock
orb
add
loope
xchg
jno
inc
gs
insl
inc
xchg
push
roll
int3
add
stos
andl
movsl
lcall
gs
sub
mov
in
jo
aaa
xchg
out
popa
push
or
adc
sbb
in
cmpsl
dec
hlt
and
dec
lcall
add
cld
mov
cwtl
mov
ss
into
out
push
xchg
inc
sbb
jp
divl
sbb
pop
push
out
jg
mov
mov
inc
dec
lods
pop
mov
sbb
lcall
orb
cmp
movsb
subl
xchg
outsb
lcall
popf
push
and
sbb
je
xchg
fcompl
stc
out
jb
push
sahf
outsb
push
mov
sub
je
push
xchg
push
or
mov
and
adcb
cltd
xchg
mov
sti
leave
aaa
dec
in
cld
mov
sti
push
mov
sahf
pop
jecxz
mov
lds
push
xchg
ret
clc
pop
adc
mov
insb
cwtl
roll
dec
mov
cwtl
pop
call
andb
cwtl
popa
cltd
jecxz
push
scas
xor
pop
dec
or
and
jg
jnp
repz
xor
mov
inc
dec
cmovge
int3
sub
imull
in
es
mov
push
dec
xor
fwait
stos
shlb
icebp
stos
test
cmp
push
inc
dec
lret
and
or
or
adc
sbb
xor
shrl
cmpsl
xor
mov
fnstcw
mov
in
loop
add
jp
jo
cmp
push
imul
jecxz
jg
xor
mov
sbb
dec
in
inc
gs
pop
jb
inc
cmpl
movsb
inc
dec
jmp
pop
pop
xor
jge
push
xchg
mov
xlat
push
adc
popa
dec
popa
mov
insl
xorl
mov
push
bsr
loop
ret
leave
push
cld
fbld
adc
dec
sbb
jbe
cli
ss
lret
imul
pop
and
and
jmp
jbe
fistpl
sti
sti
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
