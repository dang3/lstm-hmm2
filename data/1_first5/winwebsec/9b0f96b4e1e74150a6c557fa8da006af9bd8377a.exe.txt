les
push
out
popa
dec
dec
pop
shl
xchg
xlat
mov
jb
rcr
or
add
movsl
ret
xor
inc
sbb
mov
jo
or
mov
push
jge
inc
leave
or
push
scas
shl
test
rolb
cli
bound
clc
cmpsl
adc
or
and
fwait
mov
dec
aaa
or
aad
xlat
push
mov
mov
xor
daa
push
fists
cmp
or
mov
movsl
mov
mov
mov
and
icebp
jl
mov
leave
pop
adc
jne
and
xchg
sbb
add
lds
imul
push
cwtl
jge
mov
xchg
sub
xchg
mov
xchg
and
ss
pop
stos
and
std
xor
es
fistps
inc
lcall
loop
mov
mov
cmp
adc
inc
addb
fisttpll
inc
xor
stc
hlt
adc
sub
into
leave
mov
cli
jg
add
or
rclb
dec
dec
or
lods
and
stos
int3
mov
hlt
jns
pop
lcall
or
xorb
push
mov
fsubs
movntq
jnp
push
in
pop
and
jge
ss
add
es
jl
xor
ljmp
in
fistpll
jbe
enter
fstps
enter
jmp
xor
insl
mov
cs
xor
stos
lret
sub
pop
fsubs
lcall
iret
sahf
daa
xor
es
add
inc
xchg
repnz
jbe
cwtl
repnz
lods
rolb
push
out
ret
ss
inc
jns
movsb
mov
jb
cmp
or
test
cltd
jmp
and
push
mov
test
int3
fucomip
jae
gs
mov
pop
jne
jge
mov
xchg
fsincos
pop
in
dec
gs
adc
xlat
movsl
mov
clc
push
imul
scas
insb
in
mov
int
insb
fists
xor
or
adc
fldcw
mov
mov
cmp
adc
sub
and
pop
pop
cmp
mov
inc
cmc
mov
das
loop
mov
sbb
adc
pop
insl
xor
dec
jle
pusha
je
scas
sub
decb
mov
jecxz
push
add
push
pop
call
pop
sub
xor
popa
sbb
and
lds
lahf
outsl
int3
lahf
add
popa
adc
push
inc
dec
pop
dec
inc
cmp
in
ret
or
rcrb
add
xchg
or
pop
and
shlb
cmp
sbb
mov
adc
dec
mov
adc
or
mov
inc
mov
data16
push
fstpt
cmp
jns
push
stc
out
jmp
lea
loope
mov
xor
pop
pop
adc
leave
dec
int3
movsl
cmp
dec
inc
mov
mov
adc
das
or
ja
loop
inc
cwtl
aad
jnp
xor
dec
dec
testl
adc
test
push
mov
and
jle
subb
ljmp
jb
pop
andb
dec
push
and
adc
insl
inc
mov
dec
dec
cmp
xlat
aad
pop
cmp
dec
mull
lock
mov
mov
mov
call
dec
lods
xor
outsb
iret
das
out
push
add
xchg
mov
std
in
sbbl
jbe
int
push
jmp
add
dec
xchg
into
jmp
test
mov
test
sbb
sbb
imul
loop
lea
mov
jle
xor
popf
ds
lods
add
xchg
imull
or
cmc
mov
int
and
shlb
mov
negb
mov
xor
cmp
dec
jl
jno
jb
jae
or
mov
rcr
sub
int3
int3
mov
je
jbe
xchg
out
fsubr
cli
mov
in
fldenv
int3
daa
jecxz
jecxz
repnz
push
pop
xor
dec
repnz
xchg
jnp
pop
ret
addb
leave
leave
idivl
iret
test
xchg
push
pusha
jge
ja
notl
idiv
sbb
pop
mov
in
fisubl
sti
lods
mov
pushf
push
sbb
pop
push
in
out
cmp
push
js
xor
xchg
iret
fsubs
lods
xor
dec
mov
icebp
pop
dec
cmp
dec
inc
out
cmp
pusha
fisubl
aaa
stc
sti
xchg
das
lahf
jbe
int
adc
fwait
shlb
inc
mov
sub
inc
lahf
push
rcrb
mov
mov
and
inc
les
inc
mov
lret
push
sub
mov
outsb
push
in
scas
xchg
sbb
mov
jbe
inc
mov
fnsave
rcll
shll
dec
lods
mov
inc
test
jbe
mov
inc
add
xlat
dec
sub
out
mov
mov
push
rorb
fwait
inc
aad
imul
and
lods
push
dec
sub
jae
or
shr
inc
test
clc
xchg
lcall
jnp
mov
imul
inc
call
mov
scas
mov
fdivrp
in
test
xor
cmp
inc
leave
and
sub
fnop
inc
sub
dec
call
loope
lret
jb
sub
mov
lea
mov
sub
cmpsl
pop
bound
push
lock
dec
xor
xor
lret
outsl
add
movsl
ja
imul
xchg
int
sub
pop
jns
pop
xor
loop
scas
xchg
sub
arpl
fmuls
mov
mov
jnp
aad
jb
aaa
push
and
fcom
or
xchg
dec
add
cmp
push
imul
mov
adc
imul
jno
and
pushf
icebp
push
pusha
mov
es
cmpsb
jmp
xorps
or
push
jmp
jge
movaps
in
adc
stc
ss
mov
xchg
jbe
add
lahf
mov
adc
jle
push
cmp
xchg
and
mov
jno
or
out
loopne
sub
pop
test
push
mov
add
cmp
dec
insl
ret
adc
adc
imul
mov
xor
lcall
mov
sbb
out
aaa
jo
add
adc
popa
fldenv
scas
or
mov
gs
mov
in
cmp
cwtl
push
cmp
fisttpll
int3
imul
mov
push
sbb
and
xchg
push
and
nop
pushf
rorb
xchg
mov
mov
in
dec
pushf
mov
lods
cmpsb
daa
or
push
adc
subl
je
inc
subb
clc
fsts
pop
outsl
mov
inc
mov
dec
dec
dec
sub
shl
push
pop
sarl
rol
and
jno
push
and
cmp
push
sahf
and
fdivs
ljmp
sbb
push
ds
aas
xchg
pop
movsl
ss
pop
sbb
fisubrl
xor
sub
pop
sub
add
les
sbb
xchg
inc
jg
push
pop
in
mov
dec
mov
mov
mov
cmp
mov
cmp
mov
dec
and
cmpsl
sarl
mov
repnz
mov
iretw
fs
mov
dec
out
cmp
mov
jnp
mov
jbe
dec
lret
or
adc
or
jno
jo
adc
push
js
dec
dec
lret
int3
ret
out
push
sub
jle
dec
or
inc
daa
je
adcl
mov
xor
sbb
mov
inc
je
call
adc
cltd
dec
inc
sbb
cs
les
cmp
dec
xor
ds
sarb
fucompp
sar
out
mov
test
mov
jmp
nop
pop
lds
lds
xor
ror
lods
dec
ja
cmp
pop
pop
sub
repnz
inc
mov
popf
js
xchg
enter
jl
cltd
leave
dec
dec
cli
add
arpl
xchg
arpl
scas
xchg
hlt
aaa
mov
mov
push
mov
or
enter
dec
leave
ret
imul
ljmp
pop
stos
shlb
adc
and
or
dec
mov
and
jno
mov
rorb
leave
lock
out
shrb
pop
inc
or
imul
out
int3
mov
and
ja
adc
xchg
adc
mov
in
jb
mov
add
icebp
ficompl
push
lret
jne
pop
jecxz
mov
add
adcl
xchg
fs
cmp
loop
cltd
notb
lret
push
fsubrs
addr16
xor
lock
xor
stos
pop
out
ljmp
add
pop
mov
fldenv
pop
push
xchg
add
push
xor
push
call
int3
lea
fsubrp
out
push
jbe
inc
out
ss
pop
jae
mov
inc
int3
pop
xchg
xor
stos
outsl
fists
sti
sbb
loope
push
dec
imul
jecxz
fisttpl
pop
cmp
movl
ret
sub
jg
lods
movsb
mov
lock
jae
inc
aam
scas
dec
daa
or
push
jo
imul
mov
ss
cld
or
add
lds
sbb
cmpsl
xor
mov
xor
xchg
xchg
sbb
movsb
outsb
lret
ror
aad
imul
jne
mov
push
sbb
sarl
test
fwait
mov
xor
imul
xlat
xchg
and
mov
and
es
sarl
dec
into
cltd
cmp
lods
or
hlt
sbb
addb
sbb
xchg
dec
push
rolb
in
ds
push
mov
outsb
les
shlb
push
pop
outsl
mov
out
loope
jle
ss
dec
mov
inc
jecxz
push
jle
int
cmp
sbb
cmp
shlb
push
enter
jae
dec
insb
fildl
push
rcrb
ds
dec
jns
pop
sub
ljmp
pop
inc
popf
fldl2e
pop
insl
test
out
es
inc
rcrl
mov
pop
xchg
or
lahf
popf
int3
bnd
cltd
xor
outsb
sub
addr16
mov
push
ss
cmp
xchg
xor
push
in
sub
or
test
fwait
clc
inc
inc
cmp
mov
pcmpeqw
add
rcrb
xor
stos
hlt
lods
and
jb
out
rcll
mov
and
repnz
es
fstl
insl
rorl
adc
ret
inc
icebp
jg
fwait
mov
sbb
adc
imul
adc
add
cwtl
pop
xchg
push
mov
shrl
jg
mov
mov
shlb
scas
test
xor
test
test
in
dec
cmp
mov
pushf
pop
or
push
jae
mov
lahf
sbb
jle
add
pop
daa
in
jns
mov
push
imul
cmpsl
test
sbb
xchg
cmp
mov
lods
and
in
mov
sbb
adc
dec
add
aas
orl
jbe
in
sub
cltd
dec
mov
rol
pop
pop
lret
arpl
jns
outsl
outsb
adc
incl
int3
push
les
adc
add
clc
xchg
xor
in
mov
jp
stos
in
or
jns
xor
cmc
scas
mov
jno
cmp
loopne
aas
pop
gs
sub
mov
dec
mov
pop
dec
fcmovnu
roll
xor
cmp
addr16
and
mov
mov
pop
sarl
push
les
stos
rorb
push
jle
cmp
sarb
mov
or
or
pusha
clc
loop
mov
clc
insb
push
out
sub
sub
xchg
mov
jmp
sarl
cltd
sahf
push
cmpsl
dec
call
jb
adc
outsb
xchg
or
adc
pop
adc
into
test
fwait
jge
sub
clc
inc
adc
dec
mov
cltd
push
mov
mov
stos
insb
mov
addr16
iret
ds
push
push
xor
cli
orb
sbb
sti
jge
xchg
aam
dec
imul
pop
hlt
lahf
dec
or
cmpsb
mov
rolb
rolb
je
xchg
inc
or
dec
out
inc
sbb
inc
aad
jae
sbb
orl
mov
sbb
out
int3
popa
push
add
fildll
icebp
jg
jb
jle
mov
lret
push
shl
fistpll
out
jb
shl
sub
xor
adcl
push
fisttpl
pusha
into
dec
xchg
or
mov
sahf
jle
mov
sbb
mov
pop
push
sub
pop
cmp
out
adc
push
leave
mov
aas
in
je
lods
mov
das
imul
mov
adc
loope
add
insb
lret
pop
into
ljmp
out
cmp
roll
lret
push
ss
mov
pop
sub
mov
inc
or
push
pushl
stc
xor
cmp
lock
xor
push
repnz
fsubrs
mov
add
sbb
imul
mov
xchg
push
mov
nop
jmp
pop
test
aad
repz
out
adc
dec
cmp
adc
cmp
or
fdivl
adc
fs
mov
xchg
jnp
test
test
lcall
leave
cwtl
out
test
popf
pop
stos
mov
out
pop
lcall
dec
push
data16
xorb
loopne
orb
fbstp
xchg
test
sbb
xchg
inc
inc
push
hlt
std
ss
push
mov
fsubrs
in
out
movsb
addr16
arpl
adc
or
inc
and
stc
aad
lcall
insl
mov
mov
mov
or
sbb
add
in
cmpl
dec
stos
jecxz
cwtl
fldl
cmc
insb
push
int3
call
cmp
sub
cs
aam
adc
sub
fldcw
cmp
fwait
ljmp
movsb
scas
and
pop
push
dec
seta
sbb
xor
clc
sub
mov
imul
jae
inc
pop
inc
jp
shlb
xlat
test
test
mov
adc
shr
dec
inc
fwait
rorl
gs
stc
adc
popa
neg
shrl
mov
lret
sbb
jmp
call
fisubl
cmp
loop
push
cs
push
sub
add
maxps
mov
inc
mov
xchg
rorb
mov
mov
xchg
jmp
movsl
test
movsb
out
stc
nop
sarl
aas
enter
push
or
sti
cmp
out
dec
pusha
add
adc
adc
lret
data16
jl
stc
movsl
push
ss
pop
jmp
jns
mov
js
mov
jbe
clc
je
sbb
add
inc
mov
xor
clc
iret
ja
inc
xor
sbb
mov
jnp
xor
jl
push
cmp
sub
push
out
rcrb
mov
cmp
sub
stc
fwait
sub
push
mov
inc
push
nop
inc
mov
or
xor
call
mov
xor
test
cmp
sub
mov
imull
xorb
sbb
les
test
sbb
aad
popf
rorl
jmp
cmp
popf
pusha
sahf
add
xor
pop
in
fistps
fmuls
push
and
shrl
scas
sub
inc
xor
jecxz
and
in
mov
xchg
sti
pop
pop
hlt
mov
shr
mov
xchg
sbb
sbb
cmp
xchg
scas
sti
jecxz
mov
xor
test
fsub
scas
cmpsl
out
mov
add
cltd
js
arpl
push
xor
pop
xchg
gs
dec
jle
rorl
adc
dec
fisubs
into
xor
pop
lret
mov
jg
lds
adc
rolb
mov
js
and
xchg
xor
cmp
addb
push
std
jo
aas
stos
sarl
add
xor
insb
mov
cld
cmp
out
dec
pop
sbb
mov
popf
cmpsb
pop
xor
jae
dec
mov
popf
rcll
push
mov
jle
push
imulb
bound
mov
mov
fs
or
mov
inc
jg
sar
mov
mov
xchg
mov
out
pop
iret
xchg
xchg
push
pop
sbb
int3
add
aam
iret
arpl
sbbb
add
jnp
in
jp
add
sbb
out
cld
mov
sub
xor
xchg
jmp
adc
cli
popa
mov
negl
pushf
test
idivl
and
pop
lahf
pop
push
icebp
xchg
xchg
dec
fnsave
and
sbb
mov
jbe
fmull
xlat
je
sti
ret
jno
into
mov
adc
inc
sbb
push
sub
mov
out
adc
aaa
push
adc
jecxz
lret
mov
gs
sub
sub
mov
mov
sbb
pop
xor
repz
cmc
dec
push
sub
lock
lods
aad
imul
dec
add
and
xchg
jmp
jl
cmpsb
mov
mov
cld
pushf
adc
push
push
icebp
imul
mulb
pop
popa
jnp
stos
ret
sbb
pop
xchg
outsl
repnz
rcl
xor
add
add
pop
fwait
mov
xor
insl
cmc
mov
adc
lods
xchg
jo
loope
mov
jae
sahf
and
mov
mov
or
sti
fcom
jp
jl
outsb
out
or
jp
xchg
cmpsl
cmp
sbb
jge
loopne
lcall
and
ja
imul
cli
push
addb
and
aaa
out
pusha
adc
pop
pushw
out
inc
insl
cmp
pop
jg
bound
xor
mov
in
subb
jnp
sub
ds
addr16
movsb
bnd
adc
ds
imul
repnz
pop
sub
pop
ror
fidivs
out
outsl
in
mov
pop
xor
mov
cli
in
icebp
stos
fistps
push
orl
pop
inc
adc
fiaddl
rolb
bound
xor
pop
and
add
mov
or
jae
adc
mov
sub
and
repnz
popa
aad
mov
std
sub
or
dec
fcmove
lret
dec
push
out
scas
push
pop
cmp
lods
push
dec
imul
shrl
pop
loopne
imul
push
movsl
lahf
inc
and
jo
dec
in
push
pop
dec
inc
data16
jecxz
and
mov
loop
cmc
xlat
mov
hlt
shlb
jns
in
das
fcomps
add
outsb
shl
ss
ss
mov
and
std
ljmp
push
fsubrl
lret
mov
inc
mov
sub
lods
je
xchg
xlat
ja
flds
sub
cmp
mov
fucomip
or
pop
mov
mov
cmp
cmc
jmp
and
repz
sub
scas
scas
sbb
inc
adc
popa
js
xchg
push
stos
mov
ficomps
and
sub
into
pop
inc
mov
jg
cmp
sbb
mov
call
in
cmp
rolb
leave
pop
popaw
ret
in
pop
sub
or
jmp
shl
xchg
ss
mov
add
and
xlat
xor
out
dec
sbb
cmp
fiadds
jnp
push
push
push
xor
rcr
sub
dec
negb
xchg
push
fstpl
inc
iret
dec
mul
sbb
jno
jb
ja
leave
into
pop
push
ljmp
loopne
cmp
test
mov
out
shr
add
pop
lods
movsb
sub
out
mov
mov
inc
lahf
mov
jg
jg
in
mov
ss
pop
inc
lret
and
pusha
lret
pop
lret
add
das
push
xchg
mov
dec
rcll
xor
fldl
insb
push
std
pop
or
dec
adc
xor
inc
and
cmc
pop
mov
js
jmp
cmp
les
pop
and
inc
mov
dec
in
leave
arpl
insb
fisttps
call
jnp
cltd
fimuls
pop
push
xor
pop
icebp
mov
adc
pop
push
subl
jmp
dec
leave
mov
insb
icebp
cs
call
movsl
mov
inc
imul
push
pop
xchg
inc
notb
jae
icebp
sahf
xchg
mov
xor
pop
sarb
xchg
mov
push
add
mov
xchg
popa
insb
stc
xor
cmp
adcl
iret
loop
xor
cs
xor
pop
out
mov
mov
lahf
fimuls
enter
dec
jbe
leave
adc
das
and
lret
in
add
dec
xor
adc
mov
inc
cmp
mov
jmp
sbb
or
mov
adc
fld
xchg
dec
add
pop
xchg
aas
jmp
lods
ret
sub
add
imul
in
out
add
mov
mov
mov
test
ja
cmp
inc
aas
adc
aad
pop
dec
loope
icebp
mov
inc
mov
arpl
push
mov
xchg
faddp
push
push
mov
sbb
int
inc
hlt
rolb
pusha
repnz
es
or
jmp
sub
ror
push
lahf
xor
inc
cmpb
add
lds
lcall
clc
outsl
adc
pop
daa
dec
jae
mov
cmpsb
cmp
xchg
cmpsb
mov
sbb
addl
mov
mov
add
jnp
out
sbb
js
sbb
jo
mov
xor
into
sub
leave
inc
das
and
test
pop
sbb
mov
rorb
dec
rcrb
pop
gs
pop
sub
mov
xorb
inc
jge,pt
lret
mov
sti
pop
outsl
jae
bnd
lock
in
inc
rclb
mov
jns
mov
fnstenv
push
mov
out
movsb
nop
jmp
ret
inc
notl
fs
mov
hlt
loope
mov
jnp
mov
gs
adc
xor
bound
push
and
xchg
dec
jbe
hlt
dec
pushf
stos
push
movsl
inc
xchg
out
push
push
xchg
out
popl
inc
xor
shll
into
push
stos
lea
adc
popa
pop
xchg
jl
or
mov
jecxz
rcll
jp
inc
jecxz
mov
ret
sbb
xor
stos
int
cmpsl
or
shl
push
adcl
mov
push
mov
sub
or
movsb
scas
sub
repnz
xchg
push
mov
clc
mov
clc
repz
call
jne
les
jbe
mov
je
stos
fwait
xchg
je
adc
out
mov
pop
das
ss
fxch
mov
dec
divl
adc
icebp
mov
psubusw
cs
push
mov
or
add
jmp
mov
movsb
in
lods
imulb
jns
inc
int
push
mov
and
dec
jae
sti
push
mov
dec
cmpsb
mov
or
sbb
out
push
lret
mov
incl
loop
fldl
cli
fucom
ds
pop
mov
and
xchg
addb
fnstenv
or
and
push
jl
sarb
jg
das
pushf
ret
sbb
dec
cmpsb
push
push
ret
ret
jecxz
inc
mov
rolb
cmpsb
inc
push
cmp
insl
jmp
sub
leave
mov
mov
adcb
ficompl
insb
call
das
and
in
insl
sub
cli
out
imulb
shl
jbe
sahf
repnz
fdivrs
scas
roll
insl
or
loope
repnz
dec
pop
js
popf
dec
sub
ja
push
fs
xor
and
push
jecxz
and
sbb
jns
add
xlat
and
xchg
jo
stos
mov
xor
jae
jae
lahf
pop
cli
or
rolb
imul
mov
add
test
sarl
or
mov
mov
lret
loop
lret
adc
test
lods
mov
and
jb
pop
call
fisubs
movsb
lahf
cwtl
or
fs
popa
mov
push
fcoml
xchg
add
mov
fwait
mov
shll
stc
nop
inc
in
mov
icebp
imul
xchg
sahf
shr
es
jmp
iret
inc
jg
in
pop
repz
stos
dec
leave
shlb
pop
fs
dec
jmp
fildll
xchg
xchg
dec
mov
lahf
shrb
call
adc
xor
jns
adc
in
xchg
adc
loope
dec
jbe
aad
mov
aaa
push
jecxz
mov
sub
xor
push
iret
pop
pop
sub
cs
or
adc
cwtl
xor
pop
popf
xchg
sub
out
outsl
mov
icebp
push
adc
jo
sub
mov
add
mov
xor
test
aam
rol
and
movsb
adcb
scas
jbe
inc
mov
inc
lods
xchg
stc
bound
jecxz
adc
jl
dec
out
into
loopne
jbe
jne
dec
sub
cmp
inc
push
adc
mov
in
sub
pop
push
jl
mov
bound
cwtl
fdivrs
lret
push
push
sub
gs
stos
adcl
inc
icebp
cld
xor
stos
out
push
mov
jl
or
jne
lret
cld
out
dec
inc
jne
inc
addb
divl
mov
mov
xor
fnstcw
and
fldl
nop
test
mov
jle
psllw
add
loope
fnsetpm(287
and
dec
xchg
xchg
and
pop
cltd
add
sub
rol
push
push
popf
stos
cs
fucomp
mov
pop
push
cwtl
add
cvtpi2ps
push
cs
outsl
rclb
imul
pop
push
mov
sub
or
jnp
imul
inc
pop
push
divl
xor
xchg
cmp
add
jmp
mov
sub
popl
and
jne
pushf
sub
or
stos
clc
pop
fstl
ret
inc
sub
enter
imul
cmp
in
aas
pushf
xchg
mov
pushf
mov
popf
xor
sbb
lret
loop
push
inc
lcall
dec
pop
test
fistps
dec
mull
sub
fstl
push
sbb
sub
out
cmpsb
fmull
cld
out
clc
fldln2
xor
inc
aaa
cmpsl
scas
out
xchg
adc
sti
gs
mov
lods
bound
sbb
adcb
pop
pop
pop
pop
daa
orb
cs
mov
mov
cmp
arpl
es
mov
dec
roll
push
inc
clc
xchg
push
mov
mov
icebp
xchg
cwtl
mov
push
lcall
inc
repnz
or
sahf
fists
xchg
xchg
xor
je
pop
mov
idivl
iret
popa
scas
sub
sub
pop
or
mov
ds
inc
les
outsb
daa
je
idivl
lret
mov
testl
sub
leave
imul
and
cmpl
mov
pop
sub
add
pop
nop
inc
aaa
sub
pop
fmul
mov
repz
sub
pusha
adc
icebp
shl
xchg
and
stos
js
ds
in
add
mov
dec
add
arpl
cmpsb
clc
jne
lret
add
inc
mov
in
out
jmp
pushl
int
imul
add
data16
sbb
fdivr
pop
add
or
lods
pop
addr16
test
add
jnp
and
mov
push
fucompp
mov
mov
mov
cmp
pushf
push
mov
insl
rorb
jecxz
test
or
sbb
loopne
mov
inc
icebp
xor
cmp
sub
jno
add
imul
xchg
rep
mov
hlt
rcrl
lret
loope
push
repz
push
pop
dec
mov
xchg
movsl
les
xchg
shll
push
cli
pop
notl
add
or
and
hlt
mov
mov
insl
ror
xor
push
sub
jp
stos
lds
xlat
jnp
arpl
stc
dec
stos
les
notb
scas
sub
inc
je,pt
aaa
shll
js
sub
adc
jle
ds
bnd
mov
stos
xchg
pop
and
inc
fdivs
cmp
xor
cli
push
test
stc
dec
js
sub
pop
mov
mov
sub
movsl
jnp
imul
mov
xchg
roll
pop
in
test
shlb
hlt
mov
xchg
leave
fcompl
inc
mov
cmpsb
sahf
push
jno
mov
xchg
lret
fisubrl
add
int3
mov
clc
lock
pop
sub
xchg
loop
xchg
push
loope
cmp
jbe
jle
test
pop
or
aaa
adc
jmp
sbb
jnp
push
pop
xchg
sbb
and
or
test
cmp
add
fistpll
lcall
pop
js
lahf
dec
sub
ds
fnsave
mov
adcl
lock
xlat
mov
adc
sbb
mov
jge
stos
mov
es
aad
cmc
cmpsl
ss
mov
push
mov
and
push
pop
mov
xor
loop
fwait
mov
out
mov
outsb
jecxz
pop
mov
into
push
test
pop
push
push
sbb
rcrb
dec
rorl
push
push
adc
jbe
ret
push
lret
jb
mov
pop
lock
repz
pop
call
mov
int3
fcoml
cltd
lock
dec
mov
push
sbb
mov
lahf
push
ljmp
fadd
adc
push
push
add
adc
pop
addl
mov
cmp
mov
sbbb
push
pusha
pusha
fldl
bound
jb
ljmp
out
cmp
aam
adc
in
dec
push
add
mov
push
mov
inc
fidivl
je
adc
fistpll
jecxz
cld
cmp
jge
mov
enter
sub
xchg
push
mov
and
adc
mov
mov
add
movsl
jne
jl
insl
sub
push
cmpsb
enter
xchg
lods
mov
js
jmp
bound
mov
test
cmp
dec
sbb
aas
movsb
insb
cltd
add
xchg
test
call
ret
dec
es
jg
cmp
cmp
pop
inc
loop
adc
cmp
pop
xor
push
iret
sub
mov
dec
cmpsb
flds
lahf
rcl
cli
icebp
into
sahf
pop
test
cli
fildll
mov
dec
dec
push
xchg
jecxz
inc
pop
movsb
xlat
push
fsubl
mov
into
enter
mov
filds
adc
mov
jbe
jecxz
dec
adc
sub
clc
pop
pop
ja
or
jmp
or
jbe
cmpl
xchg
xchg
pop
call
lock
cmc
sti
or
add
js
dec
adc
stos
mov
or
jp
imul
stos
lock
cli
cmpsb
shrb
test
dec
push
inc
fisttps
and
inc
shrb
pop
fstpl
cmp
or
hlt
bnd
lret
in
mov
repnz
cmp
imul
adc
inc
lret
mov
mov
and
js
jg
je
push
in
xor
mov
out
movsl
or
mov
insl
arpl
cmc
cmc
sti
jmp
adc
movsl
out
lret
shrl
or
mov
les
iret
fisubrs
js
imul
bound
mov
sbb
fstpt
jns
push
test
mov
mov
fwait
and
dec
mov
not
bound
jns
popa
dec
jne
cltd
jno
jmp
dec
out
cmp
push
fwait
rcll
lds
into
jns
mov
push
jns
mov
add
mov
lcall
jmp
in
sbb
arpl
sbb
std
int
outsb
es
dec
std
and
cmpsl
push
scas
call
test
hlt
and
sbb
dec
mov
sub
adc
xchg
nop
in
push
push
xchg
sub
das
pand
sbbb
cmp
jbe,pn
repz
push
pop
cmp
mov
aas
jecxz
xor
hlt
add
pusha
test
cmp
cld
pop
mov
pop
jp
xchg
sbb
mov
test
pop
mov
dec
sub
sub
aaa
sbb
ret
leave
jb
push
movzwl
sbb
in
push
xlat
test
xor
iret
mov
inc
cmp
xor
inc
mov
sub
mov
and
shrl
mov
sbb
shll
jbe
dec
cmp
jl
and
stc
pop
pop
inc
outsl
clc
cmp
sub
aam
and
notl
push
or
sub
xchg
rol
inc
in
cwtl
xchg
repz
mov
pop
gs
out
and
iret
bswap
adc
fisttpll
imul
push
push
dec
ss
rcll
lods
and
daa
sbb
ficoms
and
imul
stos
jb
xchg
outsb
pop
mov
adc
jbe
lret
shl
push
in
jae
clc
mov
negb
push
or
rcrl
sbb
inc
add
out
mov
or
shll
loop
leave
ret
pushf
inc
add
cltd
xor
adc
mov
push
pop
add
and
pop
sahf
mov
inc
sub
sbb
mov
sub
cmpsl
lds
rclb
std
push
dec
clc
cmp
adc
sub
les
js
dec
or
fistps
testb
adc
aad
test
les
scas
mov
fwait
int3
daa
ja
dec
pop
xor
daa
movsl
xor
push
mov
data16
push
dec
sub
mov
stc
pop
dec
in
xor
insb
pop
pop
inc
mov
sub
mov
dec
jns
sub
push
xchg
fsubs
add
popa
xchg
cli
loop
sub
mov
pop
data16
imul
sub
mov
xor
cmp
mov
fs
outsl
push
adc
lock
sbb
pop
push
cmp
adc
jo
div
dec
push
sub
inc
push
les
push
pusha
rclb
les
jns
das
test
fdivrl
sarb
push
add
xlat
arpl
popf
mull
ljmp
or
sbb
cs
repnz
xchg
xchg
insl
iret
mov
sti
push
jecxz
gs
inc
out
xchg
mov
or
xchg
push
sub
jl
loopne
cmp
mov
insl
and
mov
inc
out
xchg
cs
push
sbb
ljmp
jnp
mov
enter
push
mov
inc
repz
jg
std
repnz
js
xchg
sbb
jb
dec
jne
out
add
add
std
daa
mov
lds
fdivp
and
push
aaa
and
mov
sar
filds
mov
popa
aaa
es
mov
addr16
stos
hlt
pushl
cmp
lods
push
xchg
pop
popa
push
pop
adc
cld
hlt
lock
or
pop
testl
stos
jge
adc
shlb
clc
call
mov
or
dec
je
sahf
sahf
jnp
adcl
inc
sbbb
add
es
add
in
cmp
inc
xchg
leave
test
adc
rcl
cli
pop
mov
ljmp
xchg
popa
sbb
xchg
jle
rclb
clc
stc
inc
aaa
lret
mov
ficomps
fiaddl
stos
decb
push
push
jge
insl
inc
into
fdivrl
jne
push
jne
mov
gs
in
adc
testl
xor
adc
dec
jae
addb
mov
pusha
or
push
incb
cld
mov
icebp
mov
dec
loope
out
jo
lret
xor
mov
fsubrl
pop
sahf
lcall
cmp
idivl
xchg
pop
jne
push
orb
or
repnz
les
fwait
pushf
and
push
mov
sarb
pop
sahf
jle
and
and
repz
popa
cmp
or
in
mov
rcrb
movb
mov
andl
fiadds
in
and
call
sub
jae
sarb
sbb
fildl
outsl
pop
mov
pop
lret
pushf
mov
movsb
ret
adc
pop
out
aas
xchg
cmp
repnz
adc
test
imul
lock
mov
imul
pop
sub
cmpsb
nop
icebp
cmp
loope
js
xor
cmc
push
mov
mov
divl
adc
mov
mov
inc
movsb
sbb
rorl
sub
pop
out
or
inc
inc
dec
pop
fistps
push
dec
xor
ss
test
mov
das
jl
dec
clc
outsb
mov
xchg
aas
ss
clc
push
push
dec
lock
lock
mov
enter
mov
cmp
pop
shl
pusha
mov
ret
jp
mov
adc
jno
sub
lock
push
mov
jg
popf
enter
jbe
clc
lret
popf
ja
inc
std
push
add
jbe
stos
cmp
repz
loopne
pop
xchg
mov
pop
or
inc
inc
jl
push
cld
adc
nop
pop
mov
jg
mov
sbb
in
clc
rcrl
stos
adc
andb
loopne
ror
fwait
lret
mov
jae
roll
jp
ret
outsb
add
xchg
pop
loopne
cltd
inc
push
clc
push
push
jb
xchg
dec
push
add
pusha
inc
dec
sub
ds
test
xchg
test
cwtl
or
out
icebp
jl
jnp
addr16
jg
pop
lret
pop
mov
stc
mov
jmp
inc
jmp
sbb
lahf
test
das
les
aad
pop
notb
ljmp
test
out
nop
jo
or
in
roll
and
outsl
pushf
lea
jnp
mov
mov
sub
pop
loope
mov
addr16
pop
adc
notb
inc
cmp
out
xchg
dec
loopne
mov
or
icebp
je
std
das
sub
loopne
popf
mov
testl
aaa
xchg
mov
pushf
rcll
aaa
shlb
mov
pop
sbb
mov
or
lea
cmp
xchg
iret
push
jmp
xor
add
std
inc
pop
ret
xchg
idivb
push
stos
sub
mov
mov
ds
fs
xchg
pop
dec
sbb
jl
test
bound
mov
pop
xchg
or
push
adc
push
xchg
idivb
bound
loop
adc
out
pop
insl
push
xchg
test
xor
dec
stos
fidivrs
pop
ss
call
jns
and
dec
dec
jo
mov
iret
arpl
cmpsl
enter
push
negb
or
stos
stos
cmc
cmp
mov
push
repnz
sahf
push
xor
setle
insb
jge
jmp
dec
push
pavgw
fisubl
push
inc
ja
test
les
sarl
leave
cmp
into
inc
inc
lock
cmc
lock
cs
test
imulb
push
cmp
pop
shrb
stos
dec
or
mov
jbe
cmpsb
loop
or
add
aad
std
mov
js
loopne
pop
xchg
cld
arpl
ss
push
orb
xchg
pusha
push
test
inc
sbb
jmp
xchg
mov
push
add
mov
lods
push
inc
push
sbbb
adc
mov
and
and
sbbl
sbb
and
jb
adc
adc
cmc
imul
das
push
cmp
push
mov
mov
and
imul
imul
insl
cwtl
fadds
cmpsb
inc
sub
push
pusha
push
jecxz
cs
rcrb
iret
lods
jp
inc
std
subb
jmp
pop
mov
adc
sub
in
sub
cmp
xchg
fdivp
insb
sub
and
inc
sub
insb
dec
pop
test
es
mov
mov
cmp
sbb
add
xchg
daa
loopne
ficompl
add
repz
sub
adc
mov
into
push
xchg
mov
clc
xor
or
mov
push
sub
dec
mov
cld
fldenv
mov
sub
fidivrl
inc
out
mov
cmpsb
cmp
push
ficompl
out
inc
push
test
es
aas
adc
inc
dec
fcomps
jns
mov
or
cmp
lods
add
scas
xchg
out
push
mov
dec
sub
mov
and
ficoms
sbb
test
fdivrl
or
arpl
aam
and
fs
sub
cmp
lret
jmp
lret
sbb
fs
mov
mov
adc
jge
div
dec
sbb
iret
imul
repz
inc
int
pusha
dec
mov
pop
rcr
in
and
cmovle
sbb
out
cmp
jmp
adc
inc
pushf
lea
inc
xchg
cmp
paddusw
add
fildll
xchg
jnp
mov
vxorps
dec
jne
sarl
and
adc
mov
into
icebp
mov
cmp
cmp
cmpsb
lods
mov
xor
scas
and
mov
push
add
adcl
mov
lcall
adc
xchg
xor
pop
mov
jp
mov
decl
out
push
leave
faddl
in
mov
aaa
dec
int
and
cmpsb
cltd
jg
jne
mov
adc
rcrl
cmp
add
stc
push
mov
fnsetpm(287
daa
pop
fcmove
xchg
mov
fcmove
jne
es
jo
pushf
movsl
enter
jns
pop
pop
mov
cmp
sti
push
sarl
sbb
pop
cmp
dec
dec
out
repz
test
xchg
adc
dec
sbb
push
pop
push
dec
shll
push
mov
out
test
hlt
adc
out
dec
pminsw
loop
mov
addr16
int
lret
test
fucomip
sti
jne
cmp
pop
cmp
pop
rol
mov
aas
adc
mov
pusha
inc
cmpsb
movsb
in
stos
test
jo
mov
sub
je
xor
xchg
aas
sub
mov
dec
sbb
mov
ss
mov
and
sbb
cltd
rcrl
mov
sbb
bsf
not
mull
test
lcall
sub
dec
mov
sbb
ficompl
mov
or
push
ds
push
inc
push
daa
fidivrl
nop
adc
rcr
mov
jnp
mov
xchg
jbe
ficompl
jmp
fisubs
push
dec
dec
fdivs
rcr
and
cltd
jg
cmp
js
loopne
jbe
xchg
cmp
pop
push
jmp
and
nop
lret
fildll
pop
test
sub
imul
cmp
inc
ret
xorb
or
cmp
jmp
push
add
or
pop
add
popf
and
roll
movsb
lcall
cmp
and
and
out
and
js
nop
mov
or
dec
cli
in
fists
rol
mov
pop
shrl
add
mov
enter
mov
repz
push
mov
fwait
jnp
ficoms
imul
pop
push
sti
xchg
shll
pusha
sahf
cwtl
rcl
cmp
lods
in
ds
jmp
stc
out
cmpsl
sub
pop
xchg
push
addr16
xlat
mov
push
push
call
add
test
inc
loop
mov
cmpl
add
or
jmp
in
inc
insl
sbb
fsubl
xchg
sub
fbld
add
cmpb
xor
cmpsl
aad
lds
loopne
insl
gs
mov
adc
pop
mov
add
mov
push
imul
ds
punpckhdq
mov
inc
mov
dec
clc
push
mov
dec
inc
dec
mov
mov
cmp
lcall
loop
scas
cmp
clc
xor
fcompl
fmulp
arpl
push
loope
lret
popf
mov
repnz
in
add
loopne
je
scas
sarb
and
imul
or
ret
arpl
mov
inc
pushf
std
fbstp
xchg
jecxz
enter
mov
jecxz
fsubs
push
and
mov
cmp
add
cmp
rcll
popl
inc
out
adc
xchg
pop
adc
pop
mov
cmp
pop
aas
jns
dec
les
pop
dec
lock
cmp
xor
push
sub
addr16
lods
mov
or
fcoms
pop
lods
fs
int3
bswap
int
sub
mov
add
fsubs
testb
andb
in
jmp
in
pop
mov
loop
loopne
out
sbb
call
jnp
dec
cmp
dec
pop
mov
inc
test
push
lahf
std
shlb
sub
sti
out
lds
in
jo
icebp
arpl
outsb
dec
fsts
imul
scas
mov
lds
test
mulb
dec
cmp
jmp
jge
or
js
imul
out
push
fistl
mov
adc
inc
rolb
inc
leave
rclb
mov
js
aad
outsb
and
mov
add
or
into
js
sub
clc
dec
inc
xor
adc
sub
in
xor
sbb
ret
jecxz
mov
pop
dec
loope
sub
adcb
mov
outsb
inc
dec
shlb
addr16
imul
jecxz
cltd
mov
clc
pop
mov
adc
gs
push
jo
xchg
out
dec
and
add
mov
xlat
xchg
int
lods
jl
pop
xor
xorb
mov
addr16
jae
push
push
arpl
dec
scas
jl
jo
jge
lret
mov
in
mov
lret
in
cmpsb
dec
xchg
jge
xor
sbbb
jo
sbb
enter
lock
or
sub
pop
push
mov
jl
pop
ljmp
dec
movsb
pop
mov
int3
imul
xchg
jp
mov
insl
in
lcall
jecxz
xor
mov
add
loop
imul
outsl
call
jno
es
and
dec
and
repz
fwait
ret
push
aam
std
into
mov
cmc
das
bound
dec
pop
add
sub
and
xlat
pop
inc
jl
or
in
push
push
sub
cs
mov
xchg
fs
mov
mov
repnz
ficompl
pop
fcmovnu
pop
and
or
dec
popf
sbb
loopne
lock
push
push
in
ret
popa
xchg
addb
add
jle
inc
lds
js
pop
ret
jle
jg
ds
pop
inc
cli
xchg
cmp
xchg
mov
and
xchg
push
mov
das
in
mov
test
ljmp
sub
mov
mov
xchg
sub
sarl
sub
cmp
movsb
jle
jecxz
ffreep
daa
mov
push
push
fisubrs
jmp
loopne
pop
fwait
notl
add
or
inc
cmp
lds
mov
mov
mov
mov
push
mov
adc
pusha
mov
jno
adc
jge
xor
xor
inc
jp
decl
lret
sbb
insb
mov
iret
mov
sbb
jno
pop
fisttpl
mov
inc
adc
pop
mov
popf
pop
push
loopne
pop
dec
xchg
push
push
sub
cmp
sbb
cmp
sti
in
rcrb
sub
daa
sbb
adc
pop
jb
adc
jae
jnp
jne
jp
loope
push
xor
xor
dec
mov
ror
jae
and
push
insb
cs
push
repnz
pop
mov
test
or
mov
mov
pop
ja
addr16
mov
mov
dec
nop
mov
sbb
or
orl
mov
mov
cmp
nop
outsl
sbb
popa
call
data16
adc
jmp
imul
and
push
push
ljmp
cli
sbb
sbb
push
test
mov
out
sub
imul
xchg
sbb
imul
arpl
out
mov
jg
in
popa
outsb
into
jbe
outsb
push
jmp
inc
fsts
inc
push
jp
jg
sub
jl
in
push
mov
fisubrs
sbb
xchg
cmp
mov
sbb
aas
cli
push
testb
icebp
xchg
push
ss
jmp
pop
aam
add
mov
je
stos
mov
lret
jecxz
adc
adc
adc
inc
sub
sahf
cmc
dec
nop
sbb
push
nop
add
push
pop
ret
lods
pop
movsb
and
mov
leave
push
bound
mov
in
mov
les
adc
cltd
into
mov
lods
cmp
xor
es
push
mov
inc
movsl
add
loop
imul
jnp
pop
sarl
adc
icebp
les
mov
or
jno
out
loopne
xor
scas
test
cmpsb
mov
lods
sbb
and
jl
mov
inc
imul
lods
or
inc
dec
in
sub
ret
mov
xor
fisubrs
and
shl
sbb
dec
aad
jno
and
mov
lret
cmp
push
mov
aas
inc
addr16
enter
pop
mov
movsl
ljmp
punpckhbw
sbb
insb
movsl
push
clc
aam
jo
loope
cmpxchg
fcmovnb
mov
adc
fcmovu
imul
and
cmc
rcrl
sbb
insl
lds
or
mull
sub
call
aam
cli
or
xlat
sbb
sub
jp
ljmp
stos
cmp
shlb
mov
cmp
or
xor
push
out
int
sar
notb
pop
xorb
loopne
sub
cmp
sbbl
dec
ret
scas
mov
testl
insl
clc
adc
clc
sub
mov
mov
ret
mov
mov
xchg
cmp
outsb
and
cmp
ret
adc
lods
dec
dec
push
cmp
cmpsl
hlt
mov
pushf
out
int3
fucomi
mov
xor
xchg
test
arpl
es
enter
leave
into
into
sahf
popf
movsl
adc
jp
into
mov
xor
mov
frstor
mov
ud1
sub
stos
dec
jmp
mov
test
pop
dec
call
push
cmc
mov
jl
aaa
ja
add
cmp
fnsave
lahf
cwtl
fistpl
jecxz
dec
push
clc
sub
mov
cmp
ja
inc
or
dec
movsl
movsb
jae
sbb
inc
xlat
mov
test
ficomps
push
insl
xchg
scas
dec
cmp
adc
sub
ficoml
jb
int
pop
or
leave
pop
xchg
in
push
add
add
sbb
adc
push
xor
pop
jnp
aas
dec
addr16
xor
cmpsb
lds
leave
xchg
mov
lock
jnp
cmp
imulb
sbb
pop
pop
lock
fs
jecxz
xchg
sbb
mov
pop
jecxz
fsubrs
js
inc
lea
mov
inc
mov
mov
xchg
fstl
divl
shlb
xor
dec
rcr
push
jne
jns
inc
mov
movb
pop
sahf
fwait
loop
inc
or
dec
dec
or
inc
and
hlt
sbb
lret
pusha
mov
jns
push
int
lret
mov
lods
daa
jo
xchg
out
sti
mov
jmp
jg
cli
xlat
sbb
js
les
jecxz
daa
mov
mov
shll
dec
push
xor
test
cmp
jl
hlt
xchg
ss
mov
dec
ljmp
and
add
xchg
or
insb
lret
mov
out
aad
movl
mov
or
push
in
push
pop
jno
add
add
mov
andl
gs
xchg
inc
push
test
out
js
and
or
cmp
or
ss
add
and
xchg
cld
xor
mov
jno
test
lcall
xor
enter
push
sub
jb
daa
aam
test
cmp
jle
repz
mov
xor
or
and
loope
xor
cmovg
push
or
pusha
mov
pop
pusha
pop
cmp
enter
jns
movb
cwtl
xchg
cld
push
in
pushf
lcall
gs
and
xchg
jnp
jae
leave
pop
out
inc
imul
testb
mov
std
aam
int3
mov
pop
jnp
jb
hlt
xchg
in
adc
and
sahf
xor
xchg
inc
cmpsb
pop
sbbb
lcall
add
cmp
push
fnsave
adc
mov
enter
outsl
insl
lret
lock
sbb
lahf
mov
dec
sbb
fcos
sub
loop
jnp
idiv
stos
xor
inc
inc
sbb
movsl
dec
jp
ret
inc
rorl
mov
push
arpl
cmovne
sbb
and
jle
cli
movsb
test
aam
out
cld
sbb
push
mov
push
cwtl
add
lock
bound
mov
outsl
adc
mov
push
andnps
cmpsb
ret
ss
fidivrs
out
mov
jmp
adc
ret
gs
rcpps
movsl
cltd
sbb
cli
mov
popa
mov
jns
cmp
roll
sub
ss
adc
mov
scas
addr16
push
loopne
cmpsl
fisttpll
xor
jge
push
loope
pop
fldt
xchg
jne
add
pop
enter
in
mov
mov
test
adc
sub
xchg
dec
movsb
xchg
filds
jbe
xchg
mov
nop
jp
jge
je
std
sub
add
fstpt
fadd
rcrb
sbb
mov
rolb
std
pusha
pusha
xchg
clc
push
out
push
jp
push
testl
jecxz
gs
adc
mov
inc
cmpsb
mov
cmc
and
xor
lahf
fadd
fisttpl
mov
loop
addl
sbb
xor
mov
pop
push
jo
js
shl
sahf
out
adc
inc
sbb
ja
add
stos
pop
and
push
push
cmpsl
mov
jg
fnstenv
dec
pop
data16
add
subl
sub
mov
insl
or
stos
sbb
mov
fbld
and
mov
loope
ljmp
clc
test
sbb
mov
add
dec
cli
sarl
clc
shl
mov
popf
loope
rclb
mov
lret
scas
sub
inc
in
mov
bound
aad
das
outsl
push
xchg
mov
movsb
sahf
mov
out
gs
rcr
into
popa
repz
jbe
daa
scas
push
sbb
xchg
cmp
add
mov
jl
mov
ss
lret
mov
jb
lret
push
xlat
lods
sbb
mov
popf
ja
xchg
cmpsl
sti
ret
adc
mov
cmp
push
stc
add
add
sbb
mov
gs
sahf
xchg
out
test
std
xor
les
and
lret
push
mov
jae
and
movsl
mov
dec
adc
fwait
pop
push
xor
add
mov
cwtl
mov
lods
jae
inc
lcall
shrl
xor
or
aad
ja
fucom
call
pushf
iret
negb
push
stc
and
fldenv
mov
clc
stos
movsl
shr
adc
stos
add
xlat
pop
pushf
mov
push
out
sub
pop
std
pop
js
inc
popa
pop
mov
push
test
sub
roll
jae
fists
jl
cli
fsubl
mov
dec
adc
scas
das
cmp
jp
jne
loope
data16
aad
movsb
mov
push
shll
out
data16
jo
mov
push
jae
cmc
jnp
xchg
scas
jnp
movsl
xor
and
dec
arpl
inc
fisubrl
aas
leave
decl
fldl
ss
mov
cmpb
add
test
pop
push
mov
scas
mov
xchg
movsb
dec
mov
gs
xor
jne
fadd
push
test
lcall
adc
out
or
xchg
stos
bswap
xor
xchg
mov
mov
daa
test
inc
push
sti
xchg
test
mov
loope
out
arpl
stos
data16
adc
sub
int
mov
pop
pop
ficomps
test
pushf
xlat
mov
out
popf
inc
dec
mov
fs
mov
sub
inc
dec
sbb
aam
mov
and
dec
outsb
push
adc
mov
dec
or
dec
inc
repz
xchg
pushl
inc
jp
pushaw
lahf
mov
xchg
dec
fs
and
out
repnz
aam
mov
je
mov
dec
fnsave
or
pop
aam
clc
shrl
add
sbb
insl
sub
push
inc
add
mov
cmpl
pusha
in
mov
or
mov
mov
adc
rcrl
lods
xchg
xchg
movsl
jmp
dec
ficompl
ret
pushf
cmp
cmpsb
jo
xor
sbb
and
stc
xchg
fdivrp
and
leave
mov
mov
sub
push
fs
out
jmp
test
cmc
mov
mov
outsl
incb
enter
adc
sbb
xchg
outsl
sub
ret
mov
cmp
jne
and
pop
arpl
xor
in
mov
cltd
adc
xor
add
outsl
jo
jo
mov
aaa
pop
mov
test
gs
pop
lea
stos
movsl
pop
movsl
lock
push
xor
jo
jp
cmpl
or
mov
test
xor
add
negl
outsb
insl
jne
jns
outsb
sub
js
xchg
in
pop
std
push
out
and
gs
sbb
in
xor
sub
popf
les
gs
hlt
orb
fdivs
jb
pop
loopne
pusha
pop
mov
aas
sbb
mov
cmp
jmp
xor
mov
xlat
clc
jae
add
dec
testl
leave
sbb
movsb
jb
mov
addr16
mov
cltd
pop
push
push
mov
pusha
out
imul
push
fsub
test
mov
js
inc
inc
xchg
sub
or
dec
nop
cmc
and
data16
rcll
cmp
jnp
mov
pop
insb
xchg
test
lret
xor
fcmovne
sub
cmp
decl
shl
sub
pop
in
pop
insl
lret
xor
or
aam
xlat
iret
cwtl
shlb
incb
in
sub
neg
adc
es
mov
cltd
pop
mov
das
int
pop
jp
std
adc
and
push
pushf
lock
scas
ss
and
cmp
dec
or
mov
adc
inc
repz
loope
sbb
jnp
cmpsl
aam
aam
jae
inc
sahf
in
iret
sub
mov
inc
jbe
loop
cwtl
fsubrl
fmuls
jp
inc
jb
ljmp
mov
sbb
es
leave
mov
xchg
sub
lea
sub
inc
dec
out
bound
sub
scas
sti
imul
push
ret
addl
xchg
movsb
or
daa
imul
xchg
adc
loope
mov
out
or
and
cmpsb
movsl
adc
les
shrl
scas
mov
popf
loop
cmc
lret
lcall
sbb
mov
es
call
pop
movb
jns
test
pusha
stos
xchg
mov
xlat
out
mov
aaa
sbb
cmpsb
xchg
and
adc
sbb
outsb
xlat
mov
pop
sbb
or
mov
push
fnstcw
xchg
repnz
jmp
add
mov
popf
push
jmp
sarl
pushf
and
push
pop
jl
shll
inc
inc
mov
pop
pop
sar
or
cmp
cld
dec
cmp
cmpb
xchg
jae
das
frstor
leave
test
int
adc
push
in
mov
mov
fistpll
mov
stos
mov
out
or
and
jmp
pop
xchg
xlat
inc
lcall
stc
mulb
jbe
loopne
das
push
loope
stos
dec
push
lds
mov
out
lahf
addb
push
cmp
fdivs
push
xor
push
pushf
in
push
dec
push
inc
in
repnz
push
ds
and
mov
lcall
loop
loop
xchg
ret
add
push
inc
icebp
scas
gs
mov
test
xor
es
loope
push
repz
and
sbb
test
push
sub
sbb
aas
fs
sahf
insl
cmp
xchg
and
push
dec
or
pop
mov
and
mov
dec
cmp
mov
jp
inc
sbb
imul
push
loopne
hlt
jge
into
jns
imul
movsb
loop
shr
orb
data16
leave
js
scas
dec
lret
nop
ja
movsb
or
pop
imul
adc
sub
sbb
pop
sarl
ds
dec
push
jno
hlt
xor
jno
mov
push
xchg
bound
rorb
mov
dec
mov
rcrb
test
sti
aas
outsb
iret
int
or
in
dec
rorb
test
mov
cld
xchg
lea
jecxz
xor
inc
clc
or
dec
adc
int
fistl
in
xor
pop
adc
xor
xor
mov
jbe
sbb
jg
aad
mov
xorb
jecxz
inc
int
add
icebp
ror
sub
pop
sahf
cmpsb
in
loopne
mov
jbe
pop
popa
or
sub
inc
shlb
inc
add
arpl
sub
push
jo
pushf
mov
or
mov
inc
or
add
push
mov
sbb
jp
cmp
mov
xchg
lret
or
in
or
jno
push
shlb
mul
repnz
and
rcl
fwait
movsb
repz
testb
dec
sbb
lods
loope
add
push
call
jp
inc
cld
jg
sahf
andl
or
jge
mov
test
add
mov
pop
sar
shrb
jno
sub
aam
dec
jbe,pt
ljmp
sub
cmovne
insb
scas
mov
in
insl
sub
test
es
xchg
or
mov
jae
mov
loopne
lods
push
add
imul
mov
ljmp
rol
and
das
movsl
das
popa
or
adc
pusha
push
fldcw
pop
inc
push
fcom
dec
xchg
push
repz
cmp
repz
inc
push
addr16
sub
fcmovbe
nop
sarl
insb
lret
mov
mov
and
or
dec
js
in
dec
aaa
cmp
leave
dec
mov
icebp
inc
xchg
mov
jne
or
loopne
lret
push
ljmp
sub
cmpsl
out
lea
dec
dec
lcall
sub
or
cmp
popf
ja
sbb
xchg
scas
imul
jp
mov
dec
or
add
cmc
sbb
sbb
call
xor
and
add
imul
cmp
mov
addb
mov
sbb
mov
pop
jb
cli
imul
cwtl
cmp
ss
or
ret
ret
ret
loope
test
lret
shrb
fistl
and
add
adc
lods
lods
jp
mov
fnstsw
pop
or
out
xor
jb
push
scas
inc
cmpsb
je
sub
ljmp
stos
xchg
or
cmpsb
dec
adc
dec
mov
adc
jmp
mov
mov
push
sub
add
inc
nop
rcrl
bound
cli
jmp
stos
shrb
stos
jmp
ja
pop
pusha
and
pop
sbb
jno
negl
cmpsb
int
lds
sbb
je
dec
jle
cltd
lahf
xor
fisttps
xor
fstl
push
and
cmc
jg
fstps
mov
dec
sbb
lret
adc
sbb
jmp
cmovns
add
pop
jo
in
bound
test
dec
jbe
mov
and
cltd
mov
insb
sbb
lahf
jg
sti
mov
mov
shll
aam
divb
inc
jne
mov
xchg
sahf
cwtl
mov
cmpsl
add
nop
fisubs
pop
scas
movsb
mov
cmp
daa
sbb
dec
mov
sub
ficoms
mov
fwait
rcrb
adc
lahf
xchg
xor
inc
iret
jp
mov
push
and
push
int3
ja
push
int3
cmp
rcll
insl
sti
outsb
jl
push
sbb
cwtl
cld
xchg
mov
push
je
xor
leave
je
aad
inc
or
mov
sub
pop
icebp
sahf
lret
hlt
das
je
dec
mov
push
ret
sbb
mov
in
icebp
or
daa
inc
pop
cmpsl
jmp
lcall
cld
psubusb
push
sbb
push
fwait
lea
pusha
sahf
aas
jge
mov
test
je
or
mov
xor
jns
adc
rcll
mov
adc
cmp
jbe
or
mov
xchg
divb
xor
sbb
jne
lret
mov
or
ficomps
loope
mov
loopne
ja
mov
pop
inc
roll
lods
or
add
sahf
push
push
jae
sub
fisubs
mov
push
push
das
adc
jge
push
mov
aaa
js
push
dec
push
cmc
das
cmp
dec
ljmp
push
cmp
sti
xlat
push
dec
mov
ds
inc
repz
jg
das
pop
push
cmp
push
dec
aas
or
rcl
jp,pn
fsubl
iret
mov
rorl
mov
mov
pop
dec
or
rcrb
sub
outsb
sub
cltd
cmp
rol
int3
mov
pop
push
cltd
add
sarb
xchg
inc
aad
pop
in
mov
sub
add
int3
cld
rcr
cmp
sub
cmp
xchg
xchg
mov
jl
data16
and
call
and
divl
adc
sbb
inc
cmp
jnp
clc
push
pushf
arpl
cmpsl
stos
jecxz
ret
lods
mov
cwtl
repnz
pop
cld
loopne
cltd
xchg
or
in
cmc
mov
mov
out
pop
and
sarb
aad
ret
iret
arpl
std
xchg
mov
add
xchg
cltd
cmp
sti
mov
inc
in
ljmp
push
aad
cmp
aas
add
daa
mov
cmp
xchg
pop
fisubrs
mov
and
mulps
mov
pop
arpl
xchg
or
pcmpgtd
repz
jmp
adc
dec
sbb
lods
xor
push
out
stos
mov
mov
andl
dec
mov
mov
jo
pop
add
in
cmpsl
shrl
dec
xor
xor
add
dec
jno
push
mov
cwtl
bound
xor
mov
cltd
fimull
aam
pop
push
cmp
xor
pop
jbe
xchg
pop
mull
popa
or
xchg
or
lods
lods
outsl
mov
sarl
sbb
sub
cmp
je
lret
dec
int3
push
inc
xchg
xchg
mov
mov
leave
jne
dec
lret
in
orl
addr16
fwait
pop
and
cmp
sub
cmp
scas
or
es
sbbb
cltd
gs
inc
stc
js
pop
fsts
xor
inc
insw
pminub
imul
pusha
fnstcw
stos
pop
insl
stos
insb
xchg
mov
jb
je
cmp
mov
stos
call
addb
mov
mov
ret
push
cmc
fidivl
repnz
add
data16
outsl
lods
push
mov
outsl
pusha
or
lret
lcall
mov
sub
or
lcall
aaa
pop
inc
push
lret
popa
nop
insl
loope
sub
sahf
inc
jg
cmc
sbb
jmp
sbb
test
jae
hlt
repnz
insb
jno
dec
dec
cmc
insl
mov
in
push
lahf
call
or
cmovns
mov
mov
nop
call
push
push
jno
je
lcall
or
pop
and
sahf
fldcw
js,pn
cwtl
cmc
mov
stc
xchg
sub
mov
jge
inc
pop
adc
mov
cmp
addr16
int3
roll
daa
push
jg
fwait
in
test
push
xchg
enter
adc
arpl
or
push
sbb
dec
aaa
daa
mov
or
lock
inc
sbb
xchg
loope
shlb
sub
aad
imul
fwait
data16
test
mov
lret
add
ficompl
jb
add
push
inc
jg
cld
daa
add
xor
and
neg
std
pop
inc
pop
inc
test
int3
adc
lcall
loopne
je
or
or
into
and
xor
add
das
mov
popa
mov
jae
clc
fsts
mov
xchg
or
mov
sbb
mov
xor
inc
xchg
mov
sbb
mov
out
mov
push
gs
inc
cmc
add
dec
adc
mov
add
xor
inc
imul
clc
shl
rolb
outsb
aad
pop
sub
nop
in
aas
cmpsb
ret
add
mov
pop
loop
adc
popf
divb
fcmovnu
push
mov
sub
lods
cltd
lods
pinsrw
mov
shlb
add
pop
and
jg
jo
or
xchg
mov
mov
cltd
jne
xchg
mov
test
je
stos
fwait
popa
clc
cmpsl
mov
ret
cmpsb
dec
or
cmp
dec
fs
dec
dec
insb
jmp
loope
or
jl
and
add
inc
mov
jbe
sbb
ds
jae
cli
out
xor
pushf
sbb
lret
cltd
stos
push
shrl
xchg
adc
icebp
test
push
test
es
xor
stc
mov
dec
cld
xlat
xor
cmpb
sbb
xchg
ss
mov
adc
loopne
pop
push
sahf
mov
xor
ret
out
leave
mov
and
scas
cmpsb
mov
loopne
add
ret
ds
repz
dec
lock
stos
pop
insb
jnp
fwait
cmp
cltd
dec
mov
add
nop
out
sbb
int3
or
pop
out
mov
pop
sbb
mov
mov
outsl
xor
sub
xchg
enter
cs
and
xchg
out
mov
sbb
pop
fstl
mov
push
cwtl
fisubrs
ss
cmc
or
mov
ret
mov
adc
xchg
or
dec
out
cwtl
cmp
mov
or
adc
or
and
shrb
lds
lods
push
insb
xor
adc
mov
stos
cld
enter
in
cmpsl
fs
dec
xor
mov
xor
jnp
cmp
ret
pop
mov
mov
jl
and
daa
mov
or
test
sbb
fldenv
sbb
mov
out
nop
rcll
mov
outsb
lea
sub
bound
cmpsb
or
stos
jo
or
lock
mov
js
in
push
add
pop
xchg
adc
inc
sarl
cwtl
push
cmp
adc
sbb
aam
lods
push
sbb
mov
ss
test
cli
addr16
pop
mov
cmp
push
das
add
adc
pop
sti
mov
cmp
leave
jno
sbb
fsubrl
jp
sub
push
jb
push
xchg
enter
jne
push
testl
mov
outsb
cmpb
ret
and
daa
fimuls
inc
jmp
or
cmp
cld
push
add
mov
out
or
rorb
aaa
jae
add
sub
lcall
dec
mov
call
rclb
shll
push
adc
fsub
cmpsl
dec
mov
fcoms
mov
add
or
loope
call
lds
pusha
xchg
push
mov
mov
jo
lret
add
scas
test
inc
sbb
xor
fwait
push
xchg
sahf
inc
imul
stc
es
sbb
cmp
subl
push
mov
outsb
call
dec
mov
sub
adc
inc
popf
mov
mov
xorl
loopne
xchg
icebp
push
fcomi
test
sbb
pusha
enter
out
sub
inc
or
pop
cs
and
popa
sub
jnp
pop
orl
jecxz
hlt
movl
std
movsl
mov
lret
mov
popf
and
inc
or
mov
fwait
xor
push
cld
lret
sub
cmp
movsl
cmp
fisubrl
aam
jnp
pop
div
dec
mov
jmp
rcll
xor
push
jns
add
pop
xchg
ja
stos
push
sarb
arpl
mov
into
push
movsb
in
or
call
xchg
das
mov
inc
or
ret
or
repnz
mov
iret
xor
jl
jp
int3
and
jecxz
lods
repz
pushf
stos
es
jle
loope
lahf
insb
or
popf
sub
imul
xor
std
jbe
ds
das
ret
into
mov
xchg
mov
mov
in
mov
or
jp
sarl
outsl
inc
sbbb
sbb
leave
sub
mov
xor
push
push
test
or
outsb
push
shrb
dec
aam
xor
jns
icebp
lods
inc
in
cmpsb
hlt
out
push
xor
int3
cwtl
sub
or
mov
inc
pop
loop
push
jl
push
dec
loop
xor
mov
pop
repz
mov
mov
scas
adc
mov
jbe
fcompl
ja
out
repnz
inc
scas
dec
mov
cmp
in
jmp
sub
cmpsb
xchg
aam
lret
hlt
jp
sahf
cmp
in
or
pop
lods
xchg
xchg
pop
inc
sbbl
cld
cli
hlt
mov
or
dec
add
cmpsl
test
cwtl
push
xchg
mov
mov
or
add
inc
popf
sub
dec
subb
rolb
pop
ljmp
gs
sub
or
dec
push
es
lcall
je
jle
inc
je
pop
test
push
repz
push
and
ds
and
leave
in
pop
sti
and
insl
loop
mov
pusha
test
fstl
clc
jae
popa
js
fmul
xor
xchg
xchg
or
cmpsb
fildll
stc
es
xor
lret
mov
xor
jb
fisttpll
daa
jbe
push
test
xchg
inc
mov
inc
lock
inc
insl
inc
push
sbb
mov
sub
and
mov
xchg
rorb
jecxz
sbb
xchg
ret
arpl
jp
test
adc
es
jae
pop
push
jmp
mov
lods
fs
pop
scas
mov
fdivrl
cmpsb
mov
and
loope
inc
lods
pop
leave
xlat
fsincos
or
jmp
negb
nop
or
mov
sbb
cs
sub
test
lock
cmp
push
or
arpl
addr16
mov
loop
mov
cltd
sub
mov
scas
ss
mov
and
mov
and
inc
adc
mov
jno
pop
lret
cmp
inc
and
in
test
and
mov
mov
jno
jmp
cmpsb
outsb
and
mov
lods
xchg
jmp
clc
nop
add
push
imulb
adc
fiaddl
mov
or
dec
xchg
inc
rolb
insb
clc
add
push
adc
fisubrs
sbb
or
mov
out
fxch
filds
lds
xor
push
jno
push
xchg
insb
ud2
jnp
and
fisubrl
mov
xchg
add
pop
and
mov
decl
xchg
addl
cs
enter
adc
and
push
nop
xor
dec
ja
cltd
je
push
or
add
repnz
xor
ljmp
shrl
mov
jbe
ret
pop
cmpsl
push
pop
lahf
or
leave
in
negb
dec
lcall
jmp
sub
or
pop
fisubrl
bound
xchg
adcb
add
js
fbld
add
int
mov
test
jecxz
mov
push
xchg
push
mov
inc
push
outsl
cmp
repnz
mov
movsb
adc
push
mov
gs
xchg
out
sbb
mov
sub
gs
jecxz
mov
and
lea
negb
push
xor
push
int
adc
push
gs
das
bound
cld
sub
sbb
fildl
mov
jg
nop
je
or
xor
mov
insb
rcrl
fsubrl
lret
cmpsb
sbb
cli
loop
outsb
and
or
fisubs
adc
repnz
lcall
dec
push
cmp
push
dec
jp
in
sbb
loopne
or
insl
inc
je
push
jb
cmpsw
outsl
sub
pop
push
arpl
loope
cwtl
stos
scas
push
mov
cld
pop
faddl
in
test
lods
lahf
mov
and
and
sahf
scas
sub
xchg
in
xchg
and
into
cmp
sbb
inc
and
push
or
cld
jle
and
dec
aaa
push
mov
push
xchg
or
sub
leave
rolb
int3
dec
loope
and
adc
fwait
das
dec
rcl
cli
sbb
cmp
mov
fmull
dec
pop
fstpl
ljmp
shl
mov
xchg
mov
pop
fdivr
movl
adcl
lea
jp
inc
lret
sub
mov
adc
lcall
inc
mov
pop
xchg
xor
push
stos
out
es
stos
mov
xor
pusha
jae
into
pusha
adc
in
push
xchg
les
lret
dec
or
cmc
jmp
sahf
pop
iret
stos
dec
mov
shrb
iret
xchg
push
jb
sub
jmp
sub
imul
pop
pop
loop
xchg
push
adc
sbb
cmp
sub
jecxz
add
insb
mov
inc
mov
or
insb
push
sbb
aam
xor
mov
sbb
aad
xchg
push
bound
lcall
push
pusha
pop
dec
mov
sub
jecxz
es
dec
lret
in
pop
mov
enter
push
mov
push
jns
enter
popa
pop
dec
mov
ret
data16
stc
push
inc
ficoms
cmp
pop
lods
sbb
jecxz
bound
fidivrl
xor
jg
xor
or
clc
sbb
jno
aaa
adc
mov
and
jae
div
scas
mov
gs
test
mov
xchg
xchg
repnz
sub
lods
ret
xor
inc
cli
roll
pop
jno
jnp
cmpsl
aaa
and
fcoml
mov
lods
loop
scas
or
cwtl
push
jecxz
dec
pop
mov
lret
fsubrs
ljmp
push
mov
repnz
ds
aad
push
and
mov
cld
sub
out
mov
xlat
jecxz
je
sub
cli
jno
cltd
mov
lds
xor
xlat
movsl
pop
push
cmp
cmp
push
outsl
push
out
les
xlat
xchg
dec
sub
or
and
out
mov
pop
out
sub
std
cmp
popa
cmp
insl
lods
xor
loop
mov
push
ds
rcrl
mov
rorb
lcall
in
int
push
faddl
cltd
add
or
mov
addl
push
mov
int
repnz
ret
xchg
es
and
hlt
outsl
add
cmpsb
dec
jns
mov
add
pop
sbb
mov
push
call
mov
xor
xor
dec
fidivrs
sti
mov
sub
pop
arpl
lcall
test
push
cwtl
lcall
cmp
mov
jo
dec
in
outsl
fsts
hlt
mov
dec
xchg
push
xchg
push
and
out
ret
jg
rorl
push
pushf
into
mov
mov
lods
xchg
lret
das
data16
jmp
mov
std
pop
jmp
faddl
popa
mov
pushf
inc
lods
adc
aam
shr
inc
jae
mov
nop
mov
loopne
pop
fidivl
outsb
stos
sbb
push
and
push
push
jle
decb
sbb
push
rcll
push
mov
stos
es
rclb
pop
lcall
mov
or
clc
pop
xor
ja
icebp
fwait
test
jne
or
xchg
movsb
test
jg
decl
fdivs
cmp
mov
out
mov
rcrb
mov
pop
fisttpll
sbb
outsb
pop
stos
jle
mov
sbb
loop
dec
xchg
addr16
mov
pusha
mov
imulb
mov
mov
mov
jle
dec
incl
jnp
icebp
mov
push
outsl
lea
dec
push
movsl
xor
xchg
js
das
cmp
adc
xchg
cld
js
insb
mov
popa
dec
jp
mov
jecxz
popa
das
sub
mov
mov
out
mov
xor
sbb
mov
or
lahf
cmp
and
mov
arpl
popa
pop
sub
cmp
and
xor
mov
and
fildl
leave
push
mov
mov
cmp
fstp
rcr
ja
imull
sbb
pop
sbb
push
push
push
push
and
inc
nop
ds
ret
mov
mov
mov
arpl
inc
decb
loope
jbe
sub
or
pop
adc
dec
shll
out
sbb
xor
fs
mov
pushf
jb
pop
mov
rcrb
lahf
push
fcmovnu
xchg
clc
xchg
sbb
cmp
out
in
mov
bound
mov
jns
jne
push
mov
imul
cmc
pusha
pop
subb
add
lods
jge
test
leave
sub
cmp
xor
js
test
cwtl
jl
inc
inc
roll
inc
mov
out
xor
xrelease
mov
cmpsb
fidivrs
into
js
mov
pop
loope
mov
call
fmuls
dec
pop
popa
test
int
cmp
int3
pop
or
orl
int3
pusha
loopne
cmc
mov
xlat
fnstcw
or
add
loopne
push
inc
mov
pusha
dec
inc
sbb
shr
inc
add
jb
pusha
or
jg
or
mov
cmp
add
mov
xchg
or
jl
inc
or
push
xor
sbb
les
mov
cmp
bound
sbb
add
and
adc
mull
lea
enter
inc
in
ret
enter
out
pop
sbb
or
icebp
mov
loope
and
push
xor
xor
cmp
out
lret
jmp
repnz
mov
data16
push
call
test
out
aam
and
cwtl
jp
loope
test
mov
lahf
or
popa
shll
xor
test
loope
out
mov
xor
data16
sub
adc
jb
stos
and
dec
enter
or
js
daa
mov
xor
dec
dec
cltd
or
sub
cs
cli
lods
xchg
movsb
adc
pop
mov
aam
mov
mov
cmp
popf
sahf
jmp
dec
mov
cmp
jns
mov
icebp
xlat
jl
mov
push
imul
sub
les
push
dec
push
int
push
xchg
jg
dec
xlat
outsb
and
ror
dec
fisubs
es
mov
dec
pusha
in
cmp
dec
std
cmp
adc
out
icebp
mov
adc
mov
jle
imul
ljmp
push
xchg
dec
sbb
loop
lret
mov
aad
mov
mov
aas
into
mov
test
adc
push
loop
mov
pushf
cs
mov
inc
adc
xor
push
sub
mov
xor
xchg
or
xor
lcall
or
mov
cmp
scas
push
icebp
lret
add
test
cmpsb
xchg
push
cmp
jge
cmp
outsb
mov
lcall
or
fstpt
inc
into
push
lahf
addl
mov
jns
pop
add
cmpsb
orb
sarl
or
xchg
xchg
cwtl
inc
mov
dec
dec
xchg
insb
subl
cmpsl
xor
mov
sbb
jl
stc
mov
jg
pop
xchg
repnz
fs
cmp
out
cmp
sub
into
sub
orl
fldenv
sbb
into
dec
jmp
cmp
mov
mov
push
shl
push
mov
add
xchg
fisttpl
outsl
cmp
mov
jae
js
or
push
fsubrp
ret
push
dec
andl
out
xor
jo
dec
xlat
or
pusha
sub
fdivs
inc
or
inc
loopne
loopne
adc
cmp
lret
mov
push
dec
loopne
sub
sarl
into
xchg
cmp
mov
sub
into
inc
clc
insb
pop
out
popf
dec
bound
data16
jae
gs
fadds
xchg
mov
mov
int
ret
dec
ret
inc
cltd
rorb
or
aad
sbb
jl
fistps
icebp
ss
push
jle
adc
add
call
rorb
fwait
cmpsl
and
sbb
mov
mov
outsl
ficoms
mov
out
pop
mov
aad
imul
aam
rorb
cmpsb
fisttpll
test
sub
incb
inc
out
cmp
or
loop
mov
or
in
addr16
xor
mov
sbb
cmp
pop
add
dec
or
fcomps
sti
sbb
push
and
inc
lea
bound
mov
testl
xchg
sub
inc
and
pop
mov
push
jb
mov
inc
jne
into
mov
mov
cmpsl
insb
jb
push
insl
loopne
cmpsb
aad
fcmovu
dec
cld
cmp
into
das
insb
outsl
sbb
inc
arpl
adc
data16
loop
cld
jg
iret
movsl
or
iret
cs
cmp
sub
jl
call
ja
mov
mov
and
jecxz
xor
push
xor
stc
jb
add
sbb
jo,pn
repz
xor
add
fstl
jmp
mov
loop
xor
mov
into
add
add
mov
push
movsb
fiadds
mov
or
jo
add
outsl
jecxz
pop
mov
mov
and
pop
hlt
xchg
sbb
aam
jne
sbb
clc
sbb
xchg
arpl
fisttpll
dec
cmp
add
push
mov
sub
mov
and
and
lea
movsl
out
lock
cwtl
aaa
xchg
test
add
xor
mov
jae
das
mov
std
push
cmpl
ret
mov
push
stos
jg
jge
clc
stos
scas
mov
cs
add
movsb
mov
push
sbb
sbb
xor
sub
xchg
jb
adc
xor
aad
and
mov
les
mov
imul
loop
fcmovb
jno
std
lds
adcl
push
fs
push
data16
sbbb
repnz
inc
sbb
xchg
nop
mov
pop
pop
xor
push
mov
jmp
mov
lods
jno
push
fcmovb
fistps
xchg
dec
ljmp
clc
jecxz
and
adc
mov
fsubl
mov
test
imul
or
icebp
pushl
ljmp
mov
cli
push
das
push
flds
movsb
sub
pop
fucomp
and
jno
test
stos
xchg
and
in
pop
mov
add
shll
mov
hlt
dec
mov
or
rcr
cwtl
jmp
dec
lahf
xchg
outsl
enter
push
sub
out
pusha
notl
pop
jae
add
inc
call
cwtl
test
ds
and
imul
cmp
mov
dec
sub
mov
iret
add
mov
js
push
jns
xchg
or
lret
dec
cmp
sub
mov
iret
sbb
sbb
clc
mov
xchg
jge
outsl
and
aas
push
das
add
push
fcmovu
es
clc
push
cmp
cmp
scas
lods
int3
addr16
jnp
dec
cs
insb
int3
icebp
insl
scas
adc
rcll
and
icebp
fbstp
nop
popf
adcb
enter
jns
call
push
in
je
mov
js
popa
dec
in
inc
lea
popf
sub
icebp
jmp
and
cltd
insb
push
adc
xchg
orb
cmc
pushf
scas
xchg
test
xor
push
add
xchg
xchg
pop
add
call
dec
pop
adc
mov
jmp
add
cwtl
popf
and
pop
push
sbb
lea
mov
cmp
jns
inc
or
sbb
insl
push
cmp
js
mov
xchg
lret
out
scas
cs
push
mov
test
mov
pop
lahf
add
cmp
sub
inc
fs
dec
sbb
ds
and
add
fdivr
aas
xchg
fcmovne
mov
and
jne
repz
test
cwtl
push
mov
pop
push
sub
cmc
psubsb
fstps
and
cmp
arpl
cltd
jmp
push
clc
jb
mov
daa
movsl
mov
cmc
insl
pusha
add
jp
loope
jno
or
cltd
ret
lods
fpatan
mov
loop
divb
cwtl
mov
sub
ss
popa
xchg
cs
add
stos
sub
mov
xor
sub
insl
mov
jg
lahf
adc
inc
pop
jp
push
adc
jp
hlt
outsl
out
xor
dec
aaa
push
inc
xchg
mov
les
lds
daa
pop
cmp
xchg
leave
xor
faddl
xchg
out
fists
push
sub
fldt
add
add
inc
scas
stos
mov
jmp
aaa
or
cmp
inc
lahf
aas
nop
and
jo
adc
push
std
jmp
xchg
imul
mov
sub
out
and
stos
sbb
shrb
mov
daa
jnp
cmp
bnd
jns
fwait
les
pop
cmp
in
out
xor
sub
jl
ljmp
pop
mov
in
shll
je
sbb
mov
jg
inc
daa
aam
outsl
inc
xchg
jecxz
mov
in
dec
and
push
xchg
cli
inc
aas
loopne
cmpsb
shr
test
rcl
and
jb
scas
and
xor
addr16
pop
iret
pusha
cmpsl
test
push
pop
cltd
mov
out
mov
loop
add
push
jne
push
push
xor
mov
and
movsl
lahf
or
cmp
fisttpl
out
in
popf
jns
push
test
jno
imul
enter
fstpl
ret
sub
inc
jno
mov
out
or
cmp
lods
mov
adc
sbb
sahf
mov
filds
adc
jo
js
xchg
dec
sarb
xchg
pop
cmpsb
xor
int3
xor
pushf
push
test
jbe
loope
into
mulb
test
cltd
push
or
push
mov
pop
hlt
cld
cli
test
scas
cltd
jmp
add
sbbb
imul
cmp
mov
out
sub
dec
cwtl
mov
adc
sub
and
leave
aas
push
sar
test
sub
stos
hlt
or
mov
scas
adc
ds
ret
arpl
addl
mov
cmp
lock
jo
repnz
dec
pushf
jle
test
xor
testl
cmp
scas
out
or
push
dec
xchg
cmp
sbb
test
push
push
stos
mov
mov
push
sar
xchg
cmp
mov
cmp
pop
xor
mov
test
js
cmp
lahf
insl
fldl
pop
fmuls
jp
mov
xor
cld
jmp
fidivl
xor
addb
stc
push
push
pusha
push
jnp
pop
test
xchg
jmp
sbb
or
in
xor
not
js
xor
jb
enter
es
mov
mov
sub
inc
xchg
cmpsl
in
fisubrs
adc
push
cli
adc
insb
push
pop
jecxz
adc
fstps
inc
add
push
test
or
lods
insl
mov
mov
xor
icebp
es
repnz
movsb
fmul
lods
mov
mov
imul
lcall
sarb
sbb
out
sbb
out
inc
add
push
and
push
jnp
mov
and
dec
mov
inc
pop
xor
ja
div
dec
shll
push
jo
adc
adc
and
adc
jl
jge
aam
dec
repnz
jo
mov
xchg
pop
xchg
mov
xchg
mov
lds
and
imul
gs
sbb
inc
clc
iret
pop
testl
jno
push
xlat
xchg
jge
ret
jl
cmp
mov
xor
dec
dec
sub
mov
sti
int3
test
nop
inc
ljmp
inc
push
mov
jle
jp
mov
push
or
mov
lods
shlb
push
mov
out
and
in
in
pop
dec
test
fimull
mov
btr
mulb
push
cmp
cli
stos
mov
inc
push
and
inc
or
jmp
test
in
aaa
cwtl
lea
in
sbb
xlat
xchg
bound
lret
push
jl
xor
cmp
and
add
mov
pop
shll
jno
aam
pop
dec
test
pushf
sub
jae
lahf
pushf
int3
imul
mov
xor
sti
jnp
jmp
test
xchg
inc
mov
mov
call
ret
lock
mov
pop
hlt
call
jle
mov
cmp
les
outsb
test
inc
push
sbb
and
test
pop
nop
mov
jp,pt
jmp
cmpl
cmpsl
fsubl
lods
inc
push
fsubrs
lret
sbb
es
jle
jo
pop
popf
pop
mov
cmpsb
mov
mov
adc
out
adc
pop
mov
jp
add
dec
fnstsw
pop
cmp
cmp
xor
out
insl
pop
int
add
cwtl
pop
mov
out
and
iret
adcl
add
mov
cwtl
stos
inc
mov
lret
cs
mov
pop
sub
xorb
call
jnp
shrl
dec
xchg
mov
sub
insl
je
popl
ret
data16
mov
test
ja
push
and
in
adc
into
out
adc
jbe
arpl
imul
and
jp
ds
sbb
add
das
incb
jmp
das
ja
fs
cmpsb
negl
dec
subb
lds
xchg
clc
pop
and
iret
xchg
in
roll
and
xchg
sbb
mov
mov
xor
push
mov
pushf
xchg
and
rcrl
pop
mov
jp
xor
cvtps2pi
xchg
or
dec
arpl
sarb
adc
aaa
adc
jg
je
sbb
in
test
mov
bound
fdivl
jmp
call
push
pop
test
movsb
jp
mov
or
jge
push
pop
es
cmp
mov
iret
xchg
dec
insl
xchg
cmp
cltd
pusha
aaa
push
mov
inc
sub
push
jo
fdivs
add
arpl
push
adc
jp
repnz
jnp
sub
push
xlat
push
jbe
gs
jno
add
fs
cltd
xchg
pop
jb
ds
jae
mov
or
push
in
inc
jb
mov
movsl
jo
lahf
out
lock
je
ficompl
lods
jb
icebp
sbb
mov
jl
push
pop
insl
fwait
mov
fs
lret
clc
stc
outsb
cmpsl
push
rorl
mov
cmp
inc
inc
in
adc
jno
inc
lods
xor
jle
cwtl
cli
push
and
inc
test
and
cmp
jmp
insb
in
mov
mov
loopne
inc
outsb
fisubrs
mov
xchg
push
and
shl
stos
pop
dec
aad
cmp
fsubrs
xchg
clc
push
inc
xchg
cmp
and
or
mov
rol
in
inc
xlat
loope
fisubs
iret
xchg
xchg
jg
pop
xor
mov
gs
mov
testb
inc
add
cmp
out
popa
push
mov
popa
sahf
jb
daa
add
adc
shl
loope
lret
addr16
jne
ret
fmuls
lcall
lds
fsubr
mov
rcll
daa
adc
lock
add
and
dec
icebp
sti
mov
mov
cld
pushl
out
mov
jecxz
mov
ret
xchg
cmp
cmp
sbb
movsl
sbb
mov
mov
sbb
addl
adc
sub
mov
xor
add
xchg
sub
mov
pop
movsl
fs
add
push
xchg
test
cs
sub
push
jo
add
jl
test
xor
fucom
dec
jmp
or
push
xchg
inc
scas
adc
sbb
jnp
pop
out
js
mov
push
les
dec
fnstsw
xor
jg
xchg
pop
or
dec
loop
sbb
mov
shlb
mov
mov
mov
test
pop
adc
adc
inc
popf
out
push
std
cli
mov
sbb
lss
fiaddl
aad
add
add
int3
adc
test
mov
lods
xlat
pop
mov
in
mov
inc
repz
repz
mov
mov
in
push
lret
sub
in
lcall
push
ss
movsl
out
enter
dec
lahf
rcl
jecxz
movzwl
stos
movsl
int3
pusha
cmp
in
iret
rcr
pushf
push
scas
es
cmp
cmp
ds
jl
push
mov
push
mov
xchg
mov
jnp
jecxz
fs
inc
imul
mov
adc
or
xchg
inc
mov
and
lea
jnp
inc
mov
arpl
push
scas
or
and
sbb
das
out
mov
adc
enter
xchg
lea
jae
cmpsl
add
loope
adc
pop
and
xchg
adc
jl
fwait
je
push
movl
outsb
inc
movsl
push
mov
inc
ret
xchg
inc
push
mov
push
mov
jp
jl
mov
mov
ret
std
aam
in
in
cmp
ja
xlat
test
dec
stc
xchg
and
stc
repz
xor
lds
jnp
inc
xchg
outsl
and
repnz
andl
scas
ja
jne
fistps
std
sub
arpl
outsb
fmuls
daa
aas
pop
in
add
in
cmpsb
lods
or
mov
dec
es
mov
addr16
aas
fildl
and
int3
mov
cmp
testb
cmc
test
and
inc
cld
scas
dec
out
push
and
cmpsl
fmull
sub
loop
rolb
lea
cli
mov
mov
fadd
xor
out
cs
add
test
xor
sub
sub
mov
xchg
iret
idivl
clc
cmp
push
int
inc
xchg
insl
adc
sbb
sub
fists
out
popf
aas
mov
cld
rcll
arpl
pop
mov
inc
dec
in
mov
cmp
pop
leave
push
adc
xchg
or
inc
sbb
mov
push
leave
pop
pop
scas
imulb
jmp
dec
pop
lcall
movsb
mov
add
pop
gs
adc
mov
mov
aaa
jge
push
jl
dec
inc
ss
stos
inc
xchg
xchg
mov
push
or
in
test
xchg
dec
call
aaa
dec
arpl
cmp
and
sti
push
rcrb
ss
sbb
mov
jmp
in
add
cmpl
les
xor
adc
sub
push
loope
je
cld
mov
rcl
mov
xchg
mov
push
pop
xor
push
push
xchg
das
and
pop
les
jge
sbb
cwtl
lock
aam
xor
jecxz
les
push
mov
pop
mov
test
scas
enter
repnz
sbb
icebp
sub
loopne
sub
out
jae
mov
dec
jmp
in
sbb
sbb
aaa
push
xchg
pop
test
lcall
jp
push
cmp
mov
push
lods
test
sub
rcr
lods
mov
mov
or
enter
dec
push
add
lods
mov
xor
pushf
rcrl
xchg
add
stos
or
loop
insl
mov
stos
adc
jge
pop
aad
sahf
stos
jmp
push
add
mov
daa
adc
inc
in
bound
cmpsb
mov
jb
and
jle
scas
jbe
movsb
xor
sahf
pop
fbld
in
stos
push
out
mov
bound
pop
out
fxam
ja
incl
pop
xchg
inc
sub
jbe
xor
pop
mov
mov
xchg
mov
sbb
test
in
add
xchg
dec
inc
shll
je
mov
outsl
push
pop
or
stos
push
sbb
or
mov
pop
fldcw
rorb
dec
adc
push
popa
push
pop
inc
mov
adc
adc
or
and
test
imul
add
rcrb
mov
test
or
pop
and
lahf
pushf
addr16
push
sub
pop
cwtl
lret
mov
jne
cltd
mov
inc
cmp
movsb
or
sti
in
dec
mov
or
jg
sbb
push
mov
cmp
lcall
mov
push
aaa
lret
xchg
fstl
jg
aam
mov
lods
push
mov
lahf
aaa
jg,pt
fwait
pop
call
lret
stos
pop
movsb
cmp
dec
sub
inc
lcall
adc
out
repz
and
aad
in
imul
adc
mov
aad
adc
mov
insb
into
add
jle
outsl
lds
lods
test
sarb
dec
inc
inc
std
shll
sahf
mov
hlt
push
add
inc
jb
and
lahf
out
pop
lock
arpl
test
es
in
sbb
addb
aam
push
adc
outsb
fucomip
ss
mov
aad
and
cmp
xlat
pop
movb
jns
cli
test
ror
jge
pop
sub
fildl
xchg
inc
add
mov
add
mov
sub
jo
outsl
mov
xlat
std
and
sbb
leave
andl
sbb
and
mov
mov
jbe
or
cmpsb
mov
repnz
imul
sbb
cmpsl
mov
pushf
adc
mov
add
mov
divl
int3
fsubrl
pop
and
js
cmpsb
sub
stos
or
adc
repz
jbe
xor
dec
and
loope
push
mov
xchg
cld
outsl
les
pop
cmp
into
aam
mov
jge
dec
daa
ret
mov
jmp
xchg
xor
jns
fcoms
lock
sub
ja
xchg
insb
and
and
enter
data16
mov
mov
mov
adc
fwait
adc
addr16
aas
loope
xor
arpl
or
push
inc
xchg
mov
outsl
not
dec
xor
fnstsw
dec
or
sub
add
inc
or
and
mov
mov
sub
ljmp
sub
cmp
mov
repz
outsl
sar
or
pop
fisttps
and
arpl
pusha
sbb
fs
rcrl
pop
push
rorl
adc
lret
in
push
cmc
loopne
ffree
lahf
mov
daa
adc
add
pop
out
inc
popf
xor
cmp
xchg
add
ficompl
pop
insl
sti
push
push
xor
movsb
addr16
jp
out
jp
jmp
add
lds
xchg
ljmp
arpl
mov
outsb
xchg
adc
shll
push
adc
insb
in
xor
pop
outsl
pop
add
pusha
shr
lret
dec
cli
jb
or
push
jecxz
outsl
gs
xchg
int
dec
arpl
pop
jl
inc
inc
pop
leave
xchg
add
cli
pop
jecxz
jp
scas
mov
add
lret
outsl
test
push
popa
jmp
cs
out
aad
fmuls
inc
in
mov
enter
js
lahf
dec
adc
das
dec
push
popl
aad
or
cs
xor
xchg
fidivrl
jo
cs
mov
lahf
pop
jmp
add
jle
repnz
movsb
sub
popl
lret
pop
xlat
adc
mov
pop
and
dec
jae
test
int3
ljmp
aas
mov
insl
pf2iw
mov
mov
pushf
repnz
jmp
sub
stos
mov
sbb
aaa
rol
jecxz
inc
movsl
es
das
leave
aad
ds
mov
xchg
mov
jno
sarb
or
adc
adc
or
iret
test
lret
sub
jo
jno
xchg
sub
and
push
fcoml
pop
repnz
loope
nop
pusha
and
push
mov
dec
sbb
dec
pop
push
xor
mov
loopne
out
pop
cld
test
add
sub
xchg
enter
cmp
xor
leave
into
mov
int
movsb
subb
mov
lea
xchg
and
or
add
push
shlb
inc
fcompl
pop
rcl
xchg
in
bnd
cmp
jge,pt
call
push
fsubr
xor
loop
in
inc
xchg
jp
es
dec
aam
sbb
xor
dec
push
and
push
pop
jae
js
mov
scas
mov
xchg
inc
mov
mov
outsb
les
addr16
stc
stc
push
sbb
sub
jae
jo
cmp
add
sbb
mov
dec
jo
pop
push
lret
cmp
inc
push
icebp
mov
xchg
and
pop
lea
arpl
jo
rclb
push
xor
adcl
fwait
lods
fsubrs
pop
mov
mov
pop
or
jecxz
dec
xchg
pop
inc
pushf
sahf
add
in
push
repz
dec
and
daa
and
xchg
pop
mov
fistpl
decb
mov
mov
sub
or
sbb
popf
or
lea
pop
das
out
pop
push
adc
mov
rorl
xchg
xchg
pop
test
fidivl
out
pop
cmpsb
mov
outsl
pop
dec
pop
fdivrs
mov
jb
jl
mov
movsb
rcll
sbb
xchg
filds
push
adc
or
pop
mov
inc
jo
xchg
gs
ret
out
adc
imul
mov
mov
test
popl
dec
jne
xchg
jns
xchg
pop
gs
xchg
or
mov
mov
pop
lret
ret
xlat
int3
sub
loope
sarl
call
pop
push
push
std
loop
and
sbb
shrb
scas
sub
mov
jae
jmp
iret
pop
rorb
cltd
bnd
fcompl
out
mov
mov
mov
sbb
xor
add
popa
pop
xlat
xchg
adc
fdivrs
xorl
imulb
sbb
loopne
jnp
outsb
dec
mov
push
adc
sub
test
dec
xchg
int
das
jo
lock
cwtl
mov
int3
inc
push
push
sub
imul
mov
movsb
ljmp
and
and
mov
sbb
imul
sbb
bound
imul
fidivrs
jne
test
xchg
out
js
cmp
nop
orb
es
mov
jnp
out
xchg
cmc
lock
dec
repnz
push
inc
push
and
dec
popa
adc
or
aam
pop
daa
mov
jecxz
fwait
rorb
mov
in
xor
lock
fidivrs
or
sub
nop
mov
inc
add
xchg
inc
pusha
cmpsl
jl
sahf
cmp
cmp
es
pop
fimull
cmp
xor
add
imul
in
cmp
out
fcmovnbe
dec
aas
stc
jb
jne
mov
cmp
outsb
xor
imul
push
sub
and
push
fstpt
loopne
insb
bound
dec
mov
das
add
xor
sub
outsl
in
xchg
sarl
add
popf
xchg
add
xor
lret
jmp
inc
sar
daa
les
sub
xor
push
fldt
mov
test
inc
pop
mov
mov
pop
fabs
pop
xchg
mov
scas
jnp
out
lods
xchg
enter
sbb
or
addr16
sub
cmp
shlb
and
in
push
xor
adc
enter
sbb
popa
cmpsl
adc
fwait
jnp
mov
cwtl
or
cmp
or
mov
ret
mov
arpl
out
pop
jno
mov
add
and
lock
into
popa
inc
add
mov
mov
lret
or
pop
inc
ds
test
or
mov
mov
add
stos
xchg
add
sbb
scas
sti
inc
lret
and
push
mov
push
lods
sub
lds
inc
mov
xor
scas
xor
add
dec
js
insl
repz
int3
fs
push
push
and
push
xchg
lret
ret
sub
xor
xor
add
xchg
cmp
add
inc
sarb
inc
adc
jae
sbb
insb
cwtl
jnp
js
inc
ds
jae
add
sbb
inc
inc
mov
rcrb
bnd
daa
sbb
das
stos
loopne
add
push
stc
add
inc
sub
mov
fnsave
notb
jbe
cld
rorl
xchg
mov
xor
push
mov
repnz
arpl
in
div
jbe
push
lea
mov
gs
pop
mov
scas
inc
mov
xor
bound
push
imul
dec
xor
mov
or
or
inc
int3
xchg
sbb
add
adc
fidivs
sub
sbb
out
fxch
sbb
xor
and
mov
in
ja
xchg
mov
daa
sub
cmp
jb
push
pop
out
fimull
js
xchg
xchg
mov
inc
xchg
rcrb
mov
cmc
xchg
repz
sbb
sbb
in
push
ljmp
out
loopne
movsb
fimull
movsl
dec
les
lods
sahf
std
mov
inc
daa
nop
cmpsl
sub
jp
mov
push
mov
hlt
aas
cld
pop
testl
cltd
xor
or
int3
mov
icebp
ret
jne
mov
push
jge
add
lcall
lcall
cmp
xor
or
mov
cmp
cmp
out
bound
inc
leave
aas
fsubr
mov
mov
daa
shlb
int
mov
in
cwtl
testb
fstpt
lods
adc
add
add
pushf
fldenv
dec
clc
push
std
out
adc
test
ss
or
inc
and
in
in
rorl
mov
sbb
mov
sub
push
xchg
arpl
fmull
outsb
pop
enter
inc
mov
push
cmpsb
push
scas
filds
addb
out
jo
cld
je
dec
insl
mov
push
jo
or
mov
js
mov
cli
xlat
imul
xor
into
pusha
imul
xor
stc
fldcw
imul
fnstcw
mov
hlt
aad
out
xor
lea
push
shl
mov
jp
xchg
jo
add
int
inc
aas
cmpsb
in
sub
sbb
pop
mov
int
sbb
adc
cmpsl
rcl
aas
push
in
movsl
and
inc
dec
mov
popa
ljmp
sbb
stc
je
jg
and
popf
or
lcall
movsl
repz
pop
popf
imul
nop
sub
cmpsl
scas
push
je
mov
push
int
aas
pop
ss
cmp
jmp
adc
mov
or
ret
adc
xchg
aam
sub
mov
jmp
jne
adc
mov
mov
xor
or
mov
cwtl
cs
inc
in
mov
lcall
jg
test
out
je
rorb
pcmpeqd
mov
sub
cwtl
adc
jo
ss
leave
movsb
inc
shlb
cmc
jge
mov
xchg
and
push
push
dec
xor
push
ss
inc
nop
push
lret
je
cmp
es
push
aad
dec
inc
sub
nop
fnstsw
sub
insl
loop
repz
dec
mov
fwait
mov
xor
xchg
mov
sub
or
mov
repnz
and
movsb
daa
mov
adcb
mov
outsb
popf
pusha
xor
sbb
scas
das
pop
pop
cli
movsl
outsl
lds
das
or
dec
sahf
or
popa
xor
sti
mov
loopw
icebp
sub
and
cmpsl
xchg
popl
imul
sub
or
jo
cmp
test
sbb
adc
sub
sbb
sub
mov
repz
mov
aam
sbb
mov
and
gs
fcoms
shlb
jp
pop
cld
dec
push
sub
mov
mov
jb
xlat
imul
lret
ret
aam
fprem1
frstor
jg
xchg
xor
inc
dec
sub
push
stc
sbb
test
mov
iret
adc
out
pop
repnz
dec
sub
xor
or
sbb
nop
xchg
shl
mov
dec
fs
jge
fmull
data16
pop
xor
outsb
movsl
repz
push
pop
movsl
flds
fcomps
lods
shrl
test
fdivrl
add
aam
scas
sub
mov
jae
mov
mov
in
shll
insb
add
mov
jo
dec
xchg
push
push
lret
sub
stc
cmp
stc
mov
xchg
xchg
add
ret
neg
dec
cmpb
inc
xor
call
pop
inc
das
xchg
push
push
xchg
das
mov
mov
ja
sahf
jge
rcll
lcall
jg
call
icebp
push
repz
xor
inc
mov
cld
mov
sbb
adc
fwait
mov
jl
insl
mov
inc
xor
imull
mov
jbe
adc
pop
jo
xchg
cmc
jns
mov
jae
psubusb
pop
int3
sub
xchg
stos
cld
cmpsl
pusha
mov
andl
out
cwtl
and
not
in
fcmovb
jecxz
outsb
jo
fcoms
cmp
push
inc
sbb
into
aad
pop
ss
inc
popa
in
std
sub
repnz
lcall
lret
cmc
roll
mov
mov
cmp
fiadds
sti
lcall
and
sarl
push
jge
movsl
bound
ljmp
sbbb
loopne
fists
cli
std
push
ljmp
push
mov
rcrl
xlat
xchg
iret
daa
daa
mov
sbb
decl
lcall
push
rolb
std
pop
push
cmp
and
dec
out
fucomip
adcb
cmc
stos
adc
or
and
or
into
xchg
jl
sbb
mov
stos
cmp
arpl
in
int3
fisubrl
sbb
jno
or
std
jg
sub
into
sub
jp
mov
in
and
cmp
adcl
test
add
cwtl
ss
sbb
nop
inc
cs
lea
sub
fisttpl
or
fwait
je
gs
add
aas
mov
std
cld
add
in
or
xchg
loop
or
pop
jo,pn
stos
dec
adc
xorb
out
jns
fs
popa
arpl
fisubs
aad
test
xchg
imul
movsl
js
out
adc
xor
pop
xchg
inc
add
dec
pop
and
push
cmc
mov
ret
loope
jle
imul
pop
xchg
adc
ret
and
mov
ret
push
mov
outsl
ds
adc
fcoms
pinsrw
fdivs
mov
pop
dec
sub
ja
popf
pop
outsb
fsubrl
push
add
cmpsb
out
addr16
adc
in
clc
mov
nop
cmpsb
inc
andb
insl
adc
imul
and
jmp
aad
clc
mov
es
pushf
and
imul
push
sbb
cmp
add
add
fs
mov
incl
imul
sbb
loop
add
xchg
dec
sbb
sub
push
push
jnp
in
incl
std
push
fisubl
mov
xchg
aaa
pop
dec
sbb
mov
pop
jmp
pusha
push
jecxz
mov
inc
adc
in
out
fs
pop
xchg
and
mov
std
push
sbb
cli
inc
sbb
xchg
fwait
jae
shr
fpatan
mov
dec
idivb
aam
imul
xor
adcl
out
xchg
outsl
movsb
and
adc
imul
xchg
test
sub
add
xchg
sti
daa
add
pop
mov
fcoms
adc
cmp
adc
repnz
sub
sarb
or
push
mov
xor
xor
adc
and
jno
mov
xor
mov
push
leave
cs
mov
inc
popf
sub
pop
mov
cmpsb
mov
cmp
lret
lds
std
outsb
insl
inc
pop
xor
push
pop
mov
dec
lret
popa
push
js
mov
andb
pop
xchg
lock
outsb
xor
outsb
xor
movsl
push
pop
jg
add
test
mov
cltd
cwtl
icebp
sbb
jecxz
inc
popa
adc
mov
dec
add
xor
aas
lods
pop
lret
insb
cmp
nop
pop
adc
xor
popf
jg
int
test
mov
pop
data16
flds
nop
and
cltd
sbb
loope
ds
cmp
adc
adc
rcl
cmp
cltd
push
inc
pusha
inc
dec
pop
and
divb
repnz
dec
lock
add
inc
mov
cmpsl
cmp
xchg
dec
dec
ud1
leave
xchg
cltd
mov
shrb
in
xor
mov
sub
and
xor
les
popa
ret
mov
mov
aad
jnp
pop
cs
aas
call
repnz
orb
jmp
js
xchg
fisubs
xchg
insb
mov
outsl
cwtl
pop
adc
xor
pop
mov
xchg
stos
xorb
push
cmp
ss
pop
add
mov
xor
cmp
push
xchg
mov
fnsave
and
cmpsl
mov
popl
pop
lods
and
jle
mov
push
lret
mov
roll
dec
mov
cmp
imul
push
ret
push
push
mov
enter
mov
mov
lds
das
xor
mov
mov
mov
lret
push
jno
dec
mov
inc
nop
jge
sahf
xor
cld
push
fistps
push
pop
xchg
shrl
adc
lahf
adc
or
pop
inc
push
xor
js
jp
jae
pusha
pop
int3
mov
mov
mov
pop
dec
pop
adc
pushw
popf
scas
cwtl
popf
dec
or
insb
pushf
or
ret
adc
pop
insb
push
fldl2e
and
addb
in
cmp
inc
inc
fwait
pop
inc
xchg
lods
mov
mov
sub
cwtl
in
adc
cwtl
ucomiss
jbe
mov
sub
and
jne
xchg
push
mov
out
lods
loope
inc
xor
jmp
add
icebp
out
test
repz
sub
jecxz
out
cmpsb
sbb
dec
sbb
mov
sbb
sti
dec
mov
scas
pushf
xor
imul
cmp
jmp
shrl
and
sbb
loope
lcall
xor
addb
push
ja
dec
lods
js
pushf
and
pop
loopne
ds
aad
nop
mov
inc
ja
push
lds
dec
lcall
fwait
cmp
cmp
dec
lret
sahf
xchg
insl
and
outsb
jp
sarl
adc
cli
or
cld
loop
inc
add
xor
call
aaa
inc
dec
xchg
add
sbb
dec
xor
jo
xor
mov
xchg
cmpb
and
int3
xor
stos
data16
fdivs
mov
pop
mov
mov
ss
ja
mov
push
popf
xchg
imul
rcrb
jo
pop
test
sbb
lds
es
xor
pop
cs
mov
jno
repnz
xor
add
cmpb
xor
mov
dec
lods
push
xchg
jecxz
and
mov
mov
mov
pop
and
jp
call
rorl
addb
es
mov
jmp
and
or
lcall
aas
dec
dec
das
nop
sub
sbb
xor
cmp
mov
lods
jne
pushf
xchg
test
adc
gs
rcrb
movsl
xchg
fcoms
test
enter
push
out
mov
scas
fs
sbb
adc
push
mov
repnz
push
xchg
in
and
mov
outsl
and
call
push
aad
jne
or
clc
loopne
fbld
sbb
xchg
imul
insb
push
adc
mov
xor
inc
lea
mov
inc
xchg
or
push
mov
cs
lock
inc
stos
fpatan
arpl
ds
dec
mov
nop
push
xchg
xchg
lret
arpl
lret
jne
lcall
mov
outsb
mov
addr16
dec
push
in
add
jno
cltd
xchg
push
mov
add
ret
dec
inc
pusha
sti
test
xchg
adc
mov
test
lret
mov
je
sbb
push
jne
mulb
sti
adc
and
ds
inc
add
xor
popf
rcrl
lcall
push
sub
sbb
repnz
dec
push
xchg
ret
sub
enter
loop
lahf
push
dec
sub
xchg
inc
orb
pop
inc
ficompl
loopne
adc
insb
lahf
movsl
lret
cmp
sbb
add
xchg
adc
push
repnz
int
outsb
in
and
shrb
sub
jmp
pop
or
gs
sub
jmp
mov
cmp
call
and
and
aas
mov
mov
push
adc
sub
jge
jmp
sti
stos
mov
in
leave
shlb
addr16
fsubs
inc
inc
mov
mull
enter
cmp
call
sbb
aad
movb
adc
xor
cmpsb
push
inc
adc
dec
mov
repnz
mov
out
or
cmp
jno
stc
in
mov
add
sub
cmp
sbb
or
mov
clc
mov
sbb
scas
jo
cwtl
jmp
push
inc
sub
ja
test
imul
rcl
mov
pop
or
jo
sub
dec
mov
popf
ljmp
fbstp
jmp
push
stc
mov
rcll
bound
dec
push
mov
pop
pop
in
cwtl
int
or
stos
pop
xchg
mov
pop
and
ret
adc
lds
push
mov
pop
and
popf
pop
xor
inc
ja
xor
xor
inc
sub
out
ljmp
add
xor
neg
mov
sahf
xchg
jno
or
cli
and
rorl
fadds
lcall
rorb
mov
and
push
add
lods
outsl
shll
and
and
jbe
push
dec
dec
ret
sub
mov
or
push
xchg
cmpsb
adc
cli
hlt
jmp
movhps
cmp
jl
mov
sub
jno
andl
insb
cmp
fdivrl
dec
sbb
les
loop
and
xchg
mov
add
mov
cmp
adc
leave
pop
bound
rcrl
fidivrs
cli
fs
and
pop
es
add
cmc
imul
leave
stc
or
mov
movsb
movsb
jnp
jbe
loopne
pop
enter
mov
add
scas
subl
xchg
fadds
pop
sbb
leave
xchg
push
sar
mov
cld
pop
and
aam
lret
jns
jecxz
xchg
imul
add
sub
jnp
rcll
addr16
bound
mov
xorb
jae
xor
jo
cmp
cmp
mov
lahf
push
sbb
jle
std
cmpl
add
jmp
mov
push
movsb
lahf
or
fwait
push
or
out
pop
and
sbb
add
xchg
test
into
outsb
jb
push
sbb
sub
push
cmp
repz
cmp
pop
mov
dec
icebp
cmc
mov
fs
add
mov
sbb
adc
fimull
jb
cmp
push
fcom
and
push
out
jb
mov
clc
mov
adc
fwait
cmpsl
mov
cmc
inc
xor
iret
pop
and
xchg
lock
inc
cmp
in
stos
daa
xlat
mov
fwait
jae
insb
cld
pop
push
ljmp
adc
out
ja
push
in
push
lods
movb
xor
sbb
mov
hlt
dec
pop
jecxz
cmp
ja
jmp
imul
push
fstl
fldt
xor
xchg
addr16
dec
or
mov
ja
adc
push
pop
pop
fwait
je
rclb
outsl
cmpl
xor
cmp
add
das
push
mov
test
out
jne
or
xor
int
fdiv
add
out
les
sbb
xchg
cmp
xor
inc
jg
imul
mov
out
fnstsw
ficoms
cmp
xor
movsb
lock
or
not
push
lock
ror
xchg
movsb
adc
mov
cli
pop
xor
inc
ljmp
add
jmp
fnstsw
repz
mov
das
push
xchg
inc
jge
lock
pushf
push
mov
in
popf
mov
xchg
int
cwtl
adc
bound
lds
mov
push
rol
jae
adc
jae
push
sahf
in
add
aad
loope
daa
call
mov
xor
stc
jp
push
rcrl
lods
add
in
and
jns
clc
pop
push
mov
jb
arpl
aaa
fcoms
jmp
push
loope
mov
mov
push
push
sbb
dec
mov
rcll
js
mov
jle
jecxz
or
adc
mov
xchg
cmc
pusha
jle
and
xchg
sbb
in
push
sbb
ss
aaa
adc
mov
cs
out
jg
stc
cli
fs
mov
jae
and
insb
aad
pushf
jmp
cltd
call
and
adc
mov
sub
les
in
mov
mov
mov
jmp
mov
pop
fs
dec
js
popa
fadd
inc
sub
and
cld
fisubs
xlat
daa
dec
fsubrs
outsl
and
sub
mov
push
daa
inc
scas
xor
sbb
and
mov
negl
jb
std
leave
mov
and
inc
mov
lods
push
xor
dec
xchg
lcall
add
leave
insl
dec
xchg
inc
popf
fidivs
test
xor
ds
repz
addb
loopne
mov
xlat
push
sbbb
jne
push
aaa
xor
xor
and
inc
adc
fucomip
pop
shlb
xor
jb
fnstsw
hlt
dec
arpl
insb
cld
mov
daa
sbb
xchg
jno
testb
gs
popa
in
out
imul
sahf
mov
mov
add
test
xor
mov
dec
and
lock
jnp
popf
pop
sahf
add
testb
cmpsl
mov
test
ja
jnp
and
cmp
outsb
xlat
dec
adc
stos
sbb
xchg
not
sahf
push
jnp
shrl
test
sahf
repnz
xchg
push
pop
outsb
fsubs
or
mov
mov
mov
and
pop
mov
push
inc
adc
dec
lcall
ret
test
je
inc
sbb
das
sbb
push
xchg
jmp
mov
xchg
loope
cld
xchg
lods
pop
jne
cltd
and
xchg
into
push
jmp
jle
and
dec
adc
aam
or
push
popa
sbb
xchg
dec
stos
js,pn
scas
mov
or
xor
jge
mov
das
dec
int
in
or
std
je
out
mov
es
xlat
add
add
dec
cmp
jg
xchg
sub
sbb
inc
dec
sahf
xor
inc
jno
cmc
in
inc
dec
in
sub
fldenv
fs
sbb
popf
dec
jne
outsl
and
jge
ret
lret
movsb
or
ret
push
frndint
imulb
sbb
jge
sbb
jbe
shrl
fsubs
movsl
mov
ret
enter
outsb
mov
xor
das
or
push
lret
sbb
push
add
movsl
std
stos
add
addr16
mov
inc
call
push
xor
ret
out
ja
cmp
or
dec
xchg
ffreep
lea
je
shl
std
loop
jg
cltd
data16
call
inc
xchg
repnz
pop
cs
xchg
imul
jl
sbb
lock
loop
mov
push
repz
xchg
sub
push
xchg
jo
icebp
xchg
dec
jo
lds
jg
or
adc
jle
outsl
es
xor
pusha
aas
sbb
or
push
mov
jmp
push
enter
dec
int3
inc
imul
sbb
dec
cmp
push
adc
imul
dec
sbb
and
call
arpl
psllq
pop
jbe
or
pop
sub
shl
dec
push
es
cmp
addr16
and
xor
mov
sub
loopne
pushf
or
mov
jns
dec
jmp
mov
sti
fstps
lcall
inc
jle
mov
daa
mov
outsl
mov
pushf
cmp
mov
fimuls
ljmp
cs
and
jno
int
xchg
cmp
xchg
adc
adc
and
or
andnps
cmp
push
adc
cmp
mov
and
aaa
jnp
sbb
iret
push
lock
rcr
inc
cmp
pop
fisttpl
mov
jge
cmp
out
or
fstpt
cld
andl
push
rolb
hlt
xor
dec
pushf
push
jae
or
cmp
push
dec
addl
sahf
stos
adc
xchg
jbe
mov
or
push
imul
scas
adc
mov
out
push
pop
iret
in
dec
mov
mov
mov
aas
pop
cwtl
daa
ret
push
adc
icebp
xor
jbe
or
mov
fs
sub
xor
push
insl
mov
pusha
cmc
sub
dec
sub
pop
add
jg
rolb
push
jmp
adc
pop
mov
xchg
jbe
ds
jle
ljmp
lret
leave
aaa
push
ds
sub
pop
js
stos
inc
or
push
fistl
sub
std
arpl
or
mov
jbe
inc
mov
lret
lods
and
repz
cmp
xchg
sbbb
scas
push
and
jp
xorl
ja
xchg
jp
pop
loop
mov
je
notb
jne
push
scas
xor
filds
mov
das
cmc
or
add
shr
imul
das
int3
cmp
xchg
and
adc
loopne
dec
dec
and
pop
jb
out
repz
ljmp
out
jnp
gs
lahf
dec
inc
mov
dec
push
and
jge
fistps
or
lcall
popa
pop
loopne
lahf
testb
inc
and
sub
int
sub
pop
xchg
sbb
jg
popf
pop
inc
mov
ljmp
cmpsl
mov
xor
shrb
lret
fcoms
xor
push
mov
insl
sarl
dec
cmp
aas
jae
stos
clc
repnz
mov
jne
mov
sbb
adc
shl
loop
ret
inc
mov
adc
and
gs
or
adc
sbb
sarl
mov
fnsave
fstl
sbb
sub
lret
jno
and
sub
mov
inc
inc
leave
jbe
movsb
jo
scas
fdivp
or
xchg
cmp
dec
lret
fcomps
xor
push
scas
push
jl
add
pusha
daa
into
ret
mov
nop
sbb
jno
mov
pushf
dec
into
push
aaa
arpl
inc
add
mov
jne
xor
pusha
jp
repnz
je
mov
mov
sub
xchg
cmp
jb
xchg
jl
inc
cltd
scas
and
adcl
popa
icebp
jb
and
xor
test
xor
mov
mov
testb
xchg
mov
jp
adcb
aam
movsl
pusha
lahf
insb
incl
test
shlb
pop
mov
lcall
mov
fcomp
sbb
sbb
xor
adc
fistpll
lcall
inc
ljmp
sub
dec
pop
sub
mov
mov
sub
pop
pop
jecxz
inc
gs
xchg
cmpsb
dec
lds
das
jmp
push
shlb
sbb
sti
or
or
fdivl
iret
pop
add
push
dec
out
cmp
jle
mov
loope
inc
stos
jno
stos
in
insl
adcl
or
hlt
lret
add
mov
movsl
xchg
aas
mov
push
aas
inc
pushf
div
dec
gs
add
mov
pusha
jg
enter
jl
xor
test
xchg
std
cltd
neg
imul
std
stc
int
inc
add
in
xor
sbb
mov
push
jo
rcrl
xchg
xchg
and
roll
in
xor
in
nop
push
adc
push
sahf
jne
xchg
ss
adc
test
inc
movsl
dec
cmpsl
inc
jle
in
daa
or
mov
pushf
push
sub
pop
pop
sbb
scas
sbb
jecxz
inc
push
sbb
jge
scas
cmp
sbb
ret
enter
xor
adc
stc
gs
inc
add
adc
sub
inc
pop
fdivrs
xchg
jmp
mov
push
adc
xchg
cmp
jp
xchg
push
das
pop
inc
lret
fdivs
xchg
test
lds
pop
pop
fwait
mov
pop
adc
fwait
out
aaa
or
adc
cmp
pop
es
addr16
popa
or
xor
lret
cmpsb
addr16
mov
jmp
jecxz
mov
jl
stc
clc
push
mov
andb
pusha
lahf
iret
pop
cmp
fs
fiaddl
cmc
outsb
adc
xchg
xor
stos
pop
sbb
lcall
mov
int
sahf
mov
nop
rcl
jb
inc
ja
fisubs
outsb
rorb
and
xor
lret
mov
inc
jbe
lock
mov
add
in
sub
fsts
out
dec
loop
push
xor
push
and
leave
pop
mov
or
data16
push
flds
mov
ss
push
mov
add
inc
inc
dec
in
shl
xor
lea
and
roll
sbb
jecxz
decl
pop
in
cltd
loop
cmc
pop
fcompl
add
arpl
sar
addr16
pop
lcall
mul
sbb
cmp
inc
aas
stc
mov
outsl
mov
lahf
ret
mov
dec
outsl
mov
pop
inc
orl
adc
push
dec
lock
stc
movsl
pop
repz
inc
add
clc
mov
xchg
icebp
aad
mov
xchg
cmp
jecxz
clc
push
ds
mov
sub
ljmp
xchg
loope
cmc
lods
inc
js
sahf
jl
sbb
and
aad
in
int
sub
push
lds
daa
or
fwait
adc
sub
cs
mov
fcomp
jno
jb
sub
adc
xchg
push
call
imul
pushf
rcrb
xchg
ret
in
push
mov
mov
push
and
sahf
sbb
shrb
and
mov
sbb
cmp
push
leave
inc
pop
mov
mov
shll
dec
cmp
test
es
shlb
test
mov
imul
nop
stos
and
inc
sub
imul
cli
cs
xchg
test
mov
les
pusha
lds
dec
mov
dec
dec
adc
out
jl
arpl
aas
pop
mov
fbld
ficompl
movsb
testb
dec
in
sbb
int3
dec
shlb
and
pop
test
jmp
or
pushf
add
lods
sub
inc
out
or
ds
add
shl
aad
sbb
xor
repz
les
mov
pop
hlt
jl
insl
outsl
fists
cmp
pop
imul
push
movsl
push
gs
pusha
or
dec
ror
imul
in
and
ret
inc
or
sbb
icebp
aad
xchg
lods
xor
div
push
les
popa
push
add
xor
jge
adcb
cmp
and
lret
dec
movsl
add
dec
sti
enter
scas
and
sub
sub
dec
out
xchg
mov
lcall
in
jns
or
ja
push
mov
hlt
push
or
pop
sbb
mov
sub
gs
and
lcall
cwtl
push
jno
aad
mov
push
bound
mov
mov
or
mov
cmpl
loopne
xorl
aaa
and
and
push
std
sahf
inc
or
ds
fcompl
add
sub
inc
movsb
or
mov
adc
mov
test
hlt
enter
iret
int
imul
adc
popa
or
fst
imul
cmp
sbb
lahf
imul
repnz
adc
lock
stc
out
or
pop
icebp
xor
ss
cmp
push
mov
ficompl
xor
pop
lahf
dec
shll
xchg
xchg
out
cmp
pop
js
outsl
mov
xchg
xor
pushfw
rcl
test
fsubrs
sbb
dec
in
in
insb
dec
fbstp
fwait
adc
out
mov
aas
push
ret
mov
push
dec
lahf
insl
mov
shl
inc
imul
xor
push
jmp
repz
add
gs
xor
pop
lahf
lret
test
aad
bound
mov
loop
xchg
push
aaa
aam
adc
sbb
mov
sbb
pop
das
xchg
lcall
shrl
stos
imul
nop
and
shld
mov
xchg
rolb
push
push
clc
pushw
jg
lea
sbb
inc
sarb
insb
cmp
xchg
xchg
jl
lret
jbe
cs
cwtl
insb
mov
shl
outsb
lds
and
cmovb
pushf
and
lds
push
loop
and
jmp
stos
jb
cs
push
rcr
mov
xor
pop
mov
out
cli
popa
in
push
jne
lahf
dec
xor
push
sub
sbb
or
push
adc
lock
xorb
sarb
and
and
mov
inc
dec
pusha
inc
rcrl
or
jno
and
pusha
dec
xchg
mov
hlt
or
sub
in
pop
stos
mov
outsb
mov
mov
call
out
inc
mov
ds
jne
das
inc
xchg
xor
lcall
dec
loopne
push
mov
fwait
arpl
mov
inc
cmc
adc
outsb
mov
arpl
je
and
pop
nop
les
gs
push
in
add
and
test
xchg
mov
xlat
nop
and
loopne
or
pop
aad
sbb
add
or
pop
insb
out
loop
lahf
add
xor
sbb
in
addr16
mov
das
adc
jb
rcrl
dec
xor
jge
jl
stos
addr16
inc
mov
xchg
xchg
adc
popf
vpshufhw
sub
lcall
add
dec
dec
push
in
pushf
dec
aas
xchg
adc
xor
push
push
std
push
adc
pop
stos
mov
or
outsl
es
push
pop
out
push
sub
adc
jmp
daa
or
push
sbb
out
xorl
jb
cmpsb
aam
in
sbb
add
add
pop
les
je
das
cwtl
cwtl
fnstsw
incl
fwait
es
add
and
push
inc
mov
lock
dec
cmpsl
cmpl
mov
cwtl
repz
xchg
pop
sbb
mov
inc
ja
or
ss
fsubrl
daa
xchg
sti
pop
orb
push
inc
pop
pop
sbb
inc
add
and
or
xchg
out
fstl
xor
sub
aad
mov
inc
fidivrl
pop
cmp
push
or
ret
and
adc
fisttpll
pop
aad
out
jae
data16
mov
inc
lret
push
inc
push
xchg
jecxz
aas
mov
into
int3
xchg
fs
mov
jae
ficomps
repz
insb
imul
push
fnstenv
xor
adc
pushf
add
mov
pushf
leave
add
cmpsb
sbb
adc
out
jnp
fistpl
int3
loop
stc
add
fstpt
cmp
jns
testb
dec
icebp
aam
outsl
cmpsl
loope
insb
xor
jecxz
out
push
mov
adc
sub
out
cmp
mov
xchg
in
or
mov
popa
mov
clc
mull
inc
and
ja
and
and
cmp
add
sbb
inc
stos
pop
lds
and
mov
and
mov
jno
jge
adc
pop
push
xor
and
xor
rcl
and
repnz
push
cmp
sbb
inc
adc
mov
pop
fimull
push
shlb
outsb
xchg
adc
popf
dec
or
mov
popa
out
xor
rcrl
add
cmp
cmpsb
dec
ja
xorb
and
inc
and
xor
mov
and
sbb
loop
cltd
fstps
icebp
call
cld
mov
rcl
push
cltd
and
idivb
subb
mov
into
clc
cmp
loop
pusha
fidivs
cmp
xchg
dec
push
mov
inc
dec
ficoml
aas
push
cmp
mul
in
sub
cmp
inc
std
stos
dec
ret
pop
push
push
gs
xchg
adc
jbe
je,pt
xchg
mov
push
jg
std
cmp
orl
imul
std
sahf
xor
mov
dec
xchg
clc
fld
fdivrl
in
sub
ds
lret
jbe
flds
adc
xor
mov
gs
xor
xchg
sub
mov
add
outsl
add
jle
dec
xor
pop
cli
gs
enter
scas
frstor
lock
mov
es
pop
push
popf
mov
shl
inc
out
push
mov
int
add
fs
lret
xchg
jg
jp
aad
sti
leave
je
sti
out
call
sbb
stc
in
in
fimull
je
les
lock
and
test
or
imul
stos
ljmp
jns
cmp
fstl
ficoms
jle
mov
fwait
lods
into
push
jp
dec
xor
xchg
iret
mov
jae
xor
xchg
lret
jns
xchg
and
dec
add
repnz
and
adc
stos
and
push
sub
or
adc
push
pop
mov
or
bound
repnz
xor
jg
mov
repz
mov
cld
and
mov
mov
cmp
jle
push
adc
les
inc
lods
jmp
push
xchg
stos
sub
dec
std
xchg
hlt
mov
test
outsl
mov
mov
adc
popa
js
test
into
popf
mov
clc
jl
and
adc
pop
repnz
aad
xchg
cmp
push
xor
jmp
add
dec
push
adc
cmpl
lea
in
mov
inc
inc
jg
decb
add
fiaddl
dec
aam
push
dec
or
mov
je
sub
sbb
sti
vpunpcklqdq
cld
rclb
inc
arpl
cmp
lock
out
rolb
out
cltd
pushf
mov
cmp
bound
jns
outsl
mov
sub
data16
js
inc
add
call
shll
loopne
mov
cmp
pop
mov
push
rcrb
out
mov
arpl
incl
and
mov
sbb
in
loop
add
inc
sbb
sub
orb
std
jmp
repz
int
nop
or
mov
loopne
mov
mov
push
enter
xor
mov
sub
ja
in
outsl
xchg
adc
iret
add
shl
sub
ss
outsb
fcmovnb
pop
jge
cld
xor
sbb
daa
add
jge
dec
jmp
adc
jnp
mov
dec
sar
or
dec
fbld
jns
iret
bound
bound
inc
push
mov
cmp
out
mov
mov
sub
fmul
aad
lods
bound
jp
mov
sti
sub
test
aas
out
add
sub
or
orl
pop
inc
adc
repnz
jp
dec
mov
cmp
mov
popf
add
adcl
enter
inc
sub
movsb
nop
and
rcrb
out
inc
cld
dec
lods
cmp
and
xchg
andb
popl
jae
stc
mov
cmpl
popf
adc
push
push
testb
mov
fsubrs
inc
sbb
sbb
mov
push
mov
cld
mov
std
loope
ljmpw
mov
or
test
mov
push
fcmovb
lds
sahf
lock
ret
jo
ret
out
inc
orl
mov
dec
sbb
call
rcll
adc
scas
mov
or
into
lods
xchg
addr16
sti
iret
jo
xchg
mov
clc
cltd
dec
or
lret
jecxz
add
xchg
dec
jb
icebp
sub
mov
outsl
in
xchg
daa
scas
rcrl
xor
shll
lods
das
rorb
ja
aas
shrl
inc
mov
testb
pop
sahf
xchg
or
in
out
mov
shr
insl
in
mov
cli
out
std
inc
aad
or
in
jno
xchg
lea
adc
inc
pop
mov
pop
mov
test
push
loope
faddl
sbb
add
sbb
dec
cmp
or
pop
mov
leave
out
push
dec
mov
jecxz
into
es
and
push
pop
setnp
add
stc
sar
out
enter
popf
xchg
xchg
or
xlat
jbe
icebp
outsb
mov
pop
loop
mov
push
scas
ljmpw
xor
out
repz
mov
sub
sahf
add
into
outsb
mov
aad
mov
pop
scas
mov
pop
out
cmp
insl
in
mov
xchg
popf
push
dec
je
jl
mov
js
scas
inc
scas
xchg
mov
xchg
sti
mov
es
lahf
ret
mov
out
cmpsb
and
fmuls
int3
sbb
sahf
sbb
in
lret
call
fisttpll
lea
inc
iret
mov
pop
pop
les
test
xchg
std
repz
hlt
push
jle
stos
mov
lahf
ljmp
cld
ljmp
sti
jle
js
and
mov
fiadds
ss
fcompl
mov
icebp
xchg
dec
sub
xchg
jae
addb
pop
movsl
nop
sbb
stos
sbb
js
cwtl
push
sahf
cmp
je
xor
lods
mov
pusha
repz
dec
xor
fcoms
leave
jmp
nop
jmp
jecxz
add
fimull
pop
icebp
mov
mov
jge
int3
push
inc
dec
fiadds
roll
cmp
xchg
xchg
inc
mov
movsl
push
lock
div
in
xchg
jmp
xor
cmp
ja
cmpsl
gs
into
adc
rcrl
daa
or
pop
xchg
lds
stc
int
xorl
out
dec
cmp
add
iret
xchg
out
rorb
out
movsb
add
pop
cli
pop
mov
jne
addr16
jg
and
pop
mov
sub
lea
xor
cltd
pop
lret
ss
cmpsl
rorb
outsl
inc
cmpsb
gs
mov
dec
ret
pop
sub
pop
outsb
fwait
sub
pusha
push
and
inc
mov
jle
into
sub
dec
xchg
jl
ja
jns
xlat
out
cwtl
out
roll
orl
inc
lahf
xchg
mov
xchg
adc
clc
lahf
mov
shll
mov
xor
gs
ja
jbe
aas
notb
push
jg
xlat
roll
add
ljmp
pop
jns
jbe
jle
xor
cs
cmp
jecxz
mov
xorl
pop
int3
dec
mov
clc
lds
fimuls
mov
pop
add
out
outsl
add
stos
push
xchg
pop
mov
pop
loope
dec
xchg
inc
scas
cmp
nop
js
jns
insb
fisttps
aaa
cmp
mov
dec
mov
mov
sub
xorb
in
int3
inc
rcrl
lcall
adc
lds
mov
leave
cs
bnd
cwtl
pop
and
xor
hlt
mov
shlb
sub
mov
test
sti
mov
rolb
jns
xchg
pop
iret
dec
outsl
sahf
rorl
stc
xchg
xchg
popl
or
mov
xchg
jmp
out
cvtps2pi
ret
stos
sarb
loop
add
jp
or
sub
push
adc
inc
fsubs
add
rcr
in
sub
mov
aaa
sbb
pop
xor
xor
jp
insl
add
fwait
xor
adc
jno
cmpsb
popf
sti
bound
lds
add
push
divb
fisttpl
and
adc
loop
jle
loop
jns
cmpsb
inc
in
xchg
fstps
mov
pop
pop
mov
testb
pop
fwait
test
dec
cmp
push
inc
xor
adc
test
push
imul
fistps
cmp
int
jp
cwtl
xor
cmp
lret
mov
jmp
fstl
cli
and
xor
scas
sub
cmpsl
inc
in
pop
sbb
mov
cli
ficoms
xchg
inc
flds
orl
mov
sbb
jmp
popa
pop
hlt
out
mov
push
sahf
push
sbb
mov
dec
sbb
xor
popf
push
and
jg
sbb
adc
mov
insb
jnp
aad
jp
lcall
mov
in
sarl
or
fsubs
push
mov
or
pop
xchg
in
rorl
xchg
inc
dec
mov
imul
cmp
stos
jl
and
shll
or
popa
scas
pop
mov
stos
lock
sub
jle
pop
and
xorb
movsb
movsb
jmp
dec
jae
loop
bound
jge
das
dec
xchg
add
jge
cmc
sub
sub
filds
add
mov
shl
mov
add
test
lods
repz
mov
shlb
cltd
aad
sub
jge
fistpll
push
pop
or
mov
ret
subb
out
xor
mov
mov
sahf
cmp
int3
inc
ja
cmp
dec
push
dec
add
jg
je
sbb
fldl
jge
insl
mov
subl
xchg
fstl
pop
mov
jp
xor
xchg
stos
sbb
pop
aaa
clc
aad
and
ret
aad
jo
cli
sbb
or
xor
mov
repnz
add
mov
insl
mov
insb
mov
xor
loop
lock
std
jae
cmpsb
hlt
aad
movsl
pop
pand
cmc
shll
add
xbegin
cmp
scas
inc
xchg
cwtl
inc
aam
fdivp
or
rcrb
jne
jbe
add
popa
jge
mov
pop
cmp
mov
jo
je
xchg
sbb
mov
out
jne
das
out
enter
lea
xchg
test
cs
cmp
jmp
out
sbb
dec
jecxz
fdivl
sahf
int
bound
in
sbb
mov
negl
mov
mov
shrd
test
mov
mov
aad
or
rorb
ds
and
int
push
xchg
cmp
mov
cmp
in
xchg
or
outsb
mov
pop
dec
insl
sub
mov
daa
jbe
cmp
jnp
test
loopne
int3
mov
sub
xor
jne
adc
mov
dec
outsb
fdiv
mulb
rcrl
pushf
or
push
sbb
das
arpl
xchg
dec
aas
pop
xchg
sub
lea
cmp
jne
rcrl
sbb
xchg
cmc
sub
xchg
test
in
mov
xor
test
or
repnz
dec
rclb
add
nop
mov
stos
pop
ds
js
add
lret
in
lods
sbb
add
enter
loope
sbb
jb
jne
and
lahf
xor
jecxz
cmp
leave
push
mov
pop
pop
outsl
call
push
dec
inc
aam
mov
push
movsl
mov
and
sbb
icebp
out
jle
sub
fs
jmp
adc
sub
loopne
cmp
jg
xchg
stc
fidivrs
das
push
or
aad
scas
push
std
mov
pop
scas
sbb
aaa
mov
pop
aas
aaa
inc
sub
and
or
je
jne
cwtl
loope
hlt
push
test
jecxz
cmp
jne
cmpsb
pop
dec
mov
mov
xor
jo
inc
push
and
xor
ljmp
out
and
dec
push
fwait
xchg
pop
iret
xchg
push
je
mov
in
cs
mov
and
rcl
mov
in
dec
xchg
pop
loope
inc
fs
dec
xchg
inc
aas
hlt
sub
dec
sbb
ret
add
cs
or
lret
push
xlat
stos
je
mov
jae
and
outsl
mov
in
lret
cmpsl
dec
fcmovnu
inc
mov
mov
adc
loop
outsb
outsb
iret
andl
orl
jae
add
ljmp
mov
adc
mov
or
add
cmp
or
mov
cld
cmp
add
mov
out
clc
in
scas
fstl
out
in
push
sbb
push
jns
inc
xor
mov
movsl
xchg
sbb
sbb
pop
bound
cmc
mov
aas
hlt
cmp
shrl
inc
sti
scas
lahf
push
xchg
xchg
leave
pop
mov
lods
mov
imul
push
out
mov
fwait
lcall
add
pop
mov
lea
and
and
cwtl
in
test
js
push
leave
push
and
ret
fsubr
repnz
or
fdivrp
rcll
cld
xlat
mov
lcall
sbb
fidivs
inc
rorl
jecxz
adc
lahf
pop
movsl
repnz
pushf
xchg
hlt
mov
inc
out
les
cli
incb
mov
and
xchg
int
ss
mov
fsub
mov
loopne
int
jmp
mov
push
sbb
mov
or
icebp
int3
test
cli
popf
xorl
jp
sub
mov
xchg
ret
fsubrs
or
sti
arpl
jecxz
or
cmp
mov
loope
test
popa
mov
sahf
out
clc
add
out
int
in
pop
jno
icebp
idivl
sbb
sahf
mov
hlt
add
xchg
cmp
sbb
mov
and
ret
cmpsl
sbb
ret
lret
pop
add
pop
out
xor
push
out
mov
adc
xorb
mov
jbe
mov
aaa
sub
cs
ret
pusha
xchg
in
int3
in
test
out
pusha
ds
and
mov
std
cmpsl
pop
repz
stc
add
test
arpl
ja
in
outsb
dec
enter
fstl
dec
xchg
xchg
call
bound
bound
int3
pop
xchg
push
popa
enter
ljmp
jp
or
pop
add
adc
mov
out
add
movsb
bound
push
sub
call
fists
lret
inc
or
mov
inc
lods
lret
loope
pop
and
sahf
mov
test
cmp
aad
jns
mov
xchg
mov
fwait
cmpsb
and
mov
test
cmp
fcmovnb
inc
xlat
ltr
and
daa
clc
into
mov
jp
jp
sahf
andl
jl
hlt
mov
cmovno
lock
xor
jno
notl
push
adc
fldt
ja
clc
jmp
inc
sahf
hlt
or
scas
jecxz
fstps
xchg
pop
shrb
xchg
cmp
fidivrl
add
call
repnz
das
aaa
test
xor
mov
sti
popf
xchg
pop
mov
add
mov
insl
jmp
outsb
fistl
les
in
fbstp
enter
loop
mov
dec
aaa
outsl
sbb
pop
movsl
mov
xor
push
mov
or
mov
lahf
xlat
mov
mov
or
add
push
add
test
add
lock
out
nop
lcall
popa
gs
gs
pop
stos
push
jbe
outsb
testb
lret
xlat
fnstcw
notb
pop
int
dec
call
aas
cltd
jae
sbb
jg
aam
iret
xchg
xchg
mov
daa
ret
sbb
movb
sbb
mov
gs
rorb
jecxz
enter
mul
xor
mov
jae
add
cli
inc
push
push
ss
xchg
push
mov
ffree
or
test
out
mov
jl
outsb
hlt
inc
outsb
cld
clc
inc
cmpsl
into
lods
psubsw
dec
push
popf
jecxz
fcmove
in
jno
jg
or
lock
pop
xchg
xlat
mov
insb
inc
aaa
out
out
cmpl
or
sti
lods
imul
cmp
loopne
mov
jb
in
lret
iret
sahf
ss
lret
movb
lahf
push
icebp
cwtl
adc
iret
push
jns
cltd
es
fsubl
negb
jnp
mov
push
es
enter
imul
jb
lcall
add
and
in
mov
xchg
in
frstor
inc
jo
pop
insb
adc
test
jmpw
add
dec
xchg
cmp
mov
or
dec
addl
mov
in
lahf
jecxz
mov
cmp
cmpsl
mov
inc
out
add
stc
data16
jo
sub
xchg
or
fcomps
dec
sub
cmp
sub
xor
push
add
mov
fisubrs
cmc
cs
inc
xchg
xchg
cmpsl
sub
dec
push
cmp
cli
jmp
lret
pop
lret
jmp
movsl
repnz
int3
xchg
fsts
movsl
jg
cmpsb
pop
cmp
jl
add
sub
mov
xchg
jecxz
mov
pop
cltd
frstor
or
lea
je
clc
ja
jle
aas
mov
out
mov
jmp
in
fwait
addr16
xor
movsb
mov
pop
jb
outsb
add
xchg
data16
dec
pusha
incl
pop
add
fcomip
sub
push
or
jg
inc
arpl
leave
fsubrl
or
cs
rcrb
xchg
xchg
or
clc
xorb
loope
cmpl
mov
out
and
and
in
mov
sbb
xor
xchg
jp
sbb
xchg
mov
and
xchg
popf
dec
inc
mov
pop
sti
ljmp
cmpsb
cld
and
int
sahf
into
jle
mov
imul
or
ja
leave
jae
sti
fsubl
test
mov
enter
xor
or
insb
xchg
lds
lahf
pop
call
mov
xor
pop
mov
xchg
or
mov
jnp
mov
xor
pop
sahf
mov
out
fwait
adc
inc
pushf
inc
dec
mov
sbb
pusha
bound
shl
or
dec
adc
sub
aam
and
mov
pop
sub
xchg
mov
cmp
fidivs
cmp
sub
test
xchg
sbb
cs
imul
aas
int3
mov
mov
data16
cmp
outsl
rcr
add
test
push
xchg
dec
push
adc
dec
mov
xchg
in
push
mov
ds
xor
shrl
dec
cmpsl
ds
mov
je
pop
movl
fimuls
push
leave
dec
cmp
mov
adc
popa
inc
mov
jg
xlat
sti
jl
clc
dec
mov
shl
jl
mov
movsl
xchg
add
inc
flds
or
adc
xor
or
adc
iret
xchg
xor
inc
inc
repnz
cmc
cltd
sub
add
in
pop
sub
fwait
dec
mov
add
adc
or
and
and
fisttpll
inc
loopnew
test
jp
mov
andb
lea
pop
xchg
gs
aad
mov
fisttpl
out
jo
mov
adc
dec
enter
xor
dec
pushf
xchg
divb
jne
loope
loop
cmc
dec
cli
push
outsb
dec
out
repnz
movl
mov
sti
inc
add
daa
test
lret
pop
mov
or
pop
cwtl
jmp
imul
cmpsb
jnp
test
pusha
jg
mulb
xchg
mov
lcall
mov
mov
mov
dec
pop
stos
cmp
pushl
pusha
adc
test
movsb
jne
fs
daa
dec
adcb
std
mov
and
shrb
ds
inc
xorl
lahf
aad
push
or
inc
sub
clc
mov
jno
cmp
sub
xor
and
adc
pop
add
vpcmpgtb
push
mov
jmp
xor
cwtl
inc
stc
xor
xchg
bound
cs
sbb
mov
pop
xlat
push
add
cmp
pop
aad
mov
jo
add
lea
adc
movsb
add
imul
mov
cmpsb
xor
pop
sub
pop
test
shl
insl
xor
cmpsb
sbb
jge
sbb
dec
mov
mov
pop
nop
pcmpeqb
mov
jno
testl
pop
mov
aad
addr16
lds
mov
shlb
in
or
xchg
pop
lahf
cmp
repnz
lds
pop
cmpsb
push
das
mov
jmp
dec
mov
xchg
addb
push
subb
das
sbb
xchg
xorl
lea
cmpl
fsub
xlat
test
js
mov
xchg
mov
cmpb
divb
and
jl
inc
push
mov
or
lcall
sti
out
fbstp
xchg
lods
shll
mov
std
aad
cwtl
ss
sub
outsb
scas
and
xor
jmp
inc
out
int
pop
sbb
dec
pusha
dec
stos
or
cld
xchg
sbb
cli
inc
inc
enter
mov
mov
loopne
dec
rcll
in
xor
outsb
cmc
mov
sub
insb
fisubrs
mov
andl
call
sbb
jge
pop
mov
mov
lods
inc
push
sbb
dec
and
adc
shr
pushf
lock
pop
push
cmp
fistpll
outsl
int3
in
pushf
push
lods
and
dec
cmp
testb
dec
sti
popf
pop
dec
cmc
cmp
inc
cltd
rep
js
mov
stos
test
xchg
loopne
insb
add
dec
push
sub
clc
jo
dec
inc
pop
pop
sbb
xor
test
in
and
scas
sub
ja
inc
mov
cld
jne
lods
test
daa
and
jns
lret
inc
adc
pop
std
jmp
iret
fwait
les
mov
and
xchg
push
xacquire
adc
mov
popa
mov
pop
mov
xchg
jg
push
cmpsb
push
repz
inc
movsl
incl
lock
xorl
and
jns
iret
lds
sub
dec
in
cld
mov
movsl
jl
xor
rcrb
mov
xor
cmp
nop
fisubs
mov
test
add
jo
jp
sub
pop
cmpsl
jl
cli
gs
sub
lods
sbb
dec
cwtl
mov
movsb
xchg
fs
cmc
adc
notb
dec
sbb
jb
inc
inc
mov
iret
sbb
add
pop
inc
les
jl
sti
inc
rcrb
mov
sbb
adc
imul
test
pop
std
neg
push
pop
dec
int3
jbe
aad
push
inc
imul
mov
lds
inc
mov
rcll
std
mov
loop
dec
addr16
inc
pop
mov
mov
sbb
jecxz
xor
lea
ret
pop
mov
fmul
adc
mov
jp
inc
ret
shr
cmp
sarb
je
test
or
fcoms
xor
and
leave
in
add
jbe
adc
loop
hlt
outsb
test
test
jae
ror
sub
int
pop
jae
iret
jae
pop
cmp
jge
fwait
lds
test
mov
push
inc
jno
sub
movsl
lret
inc
xchg
popa
lods
loop
mov
jno
add
aas
xor
inc
out
sti
jg
jo
mov
jge
imul
jne
testl
loopne
out
mov
or
pop
push
icebp
sbb
add
add
jne
jbe
out
pusha
push
stc
jb
je
inc
fdivrl
sbb
pop
add
shlb
mov
push
lods
mov
cmp
fisubrs
adc
test
fsubs
in
leave
add
jns
les
icebp
aas
add
sub
jae
sub
mov
imul
dec
push
in
pop
ret
jbe
jmp
repz
ja
or
jg
push
mov
add
ljmp
mov
test
push
adc
nop
jae
adc
inc
cmpl
shrl
dec
jecxz
inc
idiv
stos
cli
pop
pop
push
insl
out
imul
jge
movb
push
es
add
popf
imul
ds
stc
inc
pop
dec
stos
enter
aam
es
aam
dec
jb
int
pop
out
scas
or
mov
pop
enter
xor
and
arpl
dec
xlat
jo
adc
cmp
stos
pop
xchg
mov
inc
cmp
sbb
aaa
push
das
mov
jo
mov
test
adc
jno
adc
dec
mov
popa
outsb
xchg
add
xor
stos
cmp
pop
xchg
cmp
fsubr
cmp
xchg
clc
xchg
imul
inc
or
mov
not
xchg
add
push
lods
lret
lret
jmp
fiadds
jmp
cli
xorb
ja
int3
xchg
pushf
fstpl
jp
nop
aas
push
pop
mov
test
fldt
mov
pushf
cwtl
sub
call
or
sub
into
pop
cs
sub
rolb
adc
mov
outsl
inc
mov
sbb
fcomps
stc
xlat
sub
cmpsl
xor
pop
jno
aaa
and
xor
mov
roll
dec
sti
mov
mov
inc
mov
aam
xor
cmp
add
jl
mov
fmull
push
les
stc
mov
mov
stos
dec
cmp
outsb
in
ret
popa
sahf
sarb
pushf
int3
ret
push
test
inc
inc
test
xor
fs
out
ljmp
mov
in
out
mov
ficompl
mov
jmp
sub
lret
jge
xchg
pop
jmp
out
sbb
mov
fmulp
aaa
and
push
repz
push
arpl
push
rol
sti
scas
fmull
fsubl
and
int
sbb
xchg
adc
xor
mov
dec
jmp
adc
cli
push
fdiv
sub
jne
stos
fadds
dec
scas
or
jae
xchg
lcall
mov
call
jne
xchg
pop
dec
or
roll
jle
jb
aad
je
lret
pop
ss
popa
leavew
cmc
add
cmp
sti
cmc
aam
and
adc
clc
leavew
jo
fs
int3
mov
bound
and
test
scas
nop
cmpsb
push
lcall
negl
aad
push
pop
clc
xchg
mov
push
fisttps
cwtl
bound
cmp
mov
stos
and
or
je
fistl
mov
popf
dec
aas
repz
out
pop
push
push
lahf
xchg
dec
pop
aaa
lret
sti
jbe
shll
or
mov
inc
stos
and
dec
ror
mov
mov
add
push
addr16
fiadds
repz
inc
cmp
fucom
push
repnz
mov
cmpsl
add
and
enter
sbb
roll
ficoms
or
seto
cmp
mov
xor
xchg
insb
dec
push
ss
inc
pusha
inc
xlat
sbb
pop
inc
xorl
adc
mov
inc
mov
mov
imul
negl
push
lret
aaa
aaa
iret
xchg
js
xor
xchg
out
enter
xor
cmpxchg
lahf
rclb
pop
jae
call
push
and
cwtl
push
dec
insb
fimull
das
aad
xchg
lods
scas
cmp
lea
pop
stos
jbe
jmp
inc
or
scas
stos
sahf
xlat
mov
xchg
iret
cld
test
dec
call
imul
ljmp
ret
lds
adcl
lret
fistpl
push
xchg
fs
pop
push
or
dec
cmp
gs
xchg
shlb
out
add
lret
clc
rcr
loope
in
mov
cmp
cld
jae
dec
div
sbb
dec
sbb
sbb
addr16
cmp
jmp
add
out
imul
cmp
mov
xor
xlat
push
pop
pop
jns
insb
and
jp
adc
jae
mov
cltd
loope
sbb
movsl
cwtl
mov
ret
ss
jmp
dec
mov
jb
lds
mov
xchg
adc
sahf
subb
fucomip
push
jns
ds
sti
mov
pop
stos
jno
mov
popf
in
lcall
mov
stos
addr16
jmp
sbb
lahf
orb
les
aam
add
jge
mov
xchg
mov
iret
mov
or
xlat
cld
lcall
testl
sbb
sahf
jmp
xor
aas
mov
pop
push
out
lret
xor
testl
pop
inc
add
or
ss
xchg
pop
into
lcall
dec
lahf
cvttps2pi
shl
sbb
mov
insb
nop
inc
lret
pop
adc
mov
decb
idiv
add
int
test
mov
xor
push
shr
shlb
mov
jne
in
lcall
add
inc
mov
movsl
and
scas
insb
lahf
push
pop
pop
jne
les
cmp
xchg
mov
fs
loop
add
push
aad
adc
std
dec
ficompl
lahf
mov
jnp
lods
xor
jb
out
push
adc
pop
sbb
dec
xorl
mov
mov
pop
lods
push
inc
add
dec
push
mov
clc
and
fldl
jecxz
pusha
or
in
inc
sbb
add
jmp
popa
xor
mov
mov
je
ljmp
push
sub
add
sbb
cmpsb
inc
repnz
das
loop
jl
in
xlat
dec
lods
fs
dec
int
test
pop
xchg
icebp
xchg
mov
xchg
add
dec
cmpsb
cmpsl
inc
xchg
and
lahf
mov
xchg
dec
enter
nop
call
loopne
out
lds
adc
push
lods
enter
xor
rolb
fsubrl
or
sub
dec
cmp
jbe
sbb
lods
sti
std
inc
subl
xchg
fs
push
repnz
out
pushf
mov
xchg
xor
mov
loopne
mov
cmpsb
mov
add
test
push
lock
scas
and
and
mov
test
dec
pusha
repz
pusha
mov
sbb
jmp
dec
jp
sub
sub
add
in
cmp
popa
mov
cld
cltd
mov
ja
loopne
iret
push
pop
lea
cltd
cmpsl
cmp
cld
add
pop
je
cwtl
xchg
inc
mov
mov
out
mov
out
dec
test
adcb
jl
out
jae
es
dec
cmp
push
dec
xchg
cmp
jb
or
jne
cltd
jmp
mov
and
push
or
fs
and
ja
cmp
cltd
push
out
mov
jbe
popf
inc
inc
int
notb
mov
aas
inc
fcmove
repz
cltd
cwtl
mov
sbbb
sbb
pop
mov
aaa
mov
jge
mov
roll
jnp
nop
cmpsb
cld
mov
mov
mov
adc
mov
aam
pop
adc
cmp
add
stc
xchg
insl
mov
fsubrs
cmp
icebp
xor
inc
cld
sarl
popf
jmp
pop
push
cmp
mov
xor
adc
sbb
dec
pusha
sub
mov
mov
mov
push
push
into
sub
test
sbb
ret
cltd
outsb
dec
mov
cmp
pop
test
xchg
fidivrs
call
lret
cmp
lds
loopne
mov
and
or
lds
inc
ljmp
pop
push
ret
or
pop
pop
jle
fs
test
mov
jno
sbb
sbb
add
xor
add
mov
fidivrl
cs
xor
push
ds
fs
pop
push
stos
mov
fistl
and
xor
out
jnp
and
inc
inc
push
arpl
jecxz
clc
shll
mov
ret
jo
sbb
push
xlat
mov
mov
sbb
mov
xchg
or
ret
inc
dec
xchg
popa
inc
ja
arpl
add
sub
xor
cmp
mov
rorb
xor
shll
jnp
mov
mov
and
movsb
mov
cli
inc
inc
cmp
xlat
push
out
call
aam
mov
out
sbb
or
mov
xchg
sub
mov
or
ds
mov
wbinvd
ret
out
fimuls
dec
aad
xor
int3
lea
and
push
push
and
jp
in
in
lret
insb
addr16
enter
and
xchg
ret
into
sbb
sbb
cld
pop
stos
mov
push
sub
dec
out
add
jl
jle
incl
loope
shlb
adc
dec
testb
imul
mov
xor
adc
repnz
iret
insl
pop
xor
inc
rorb
adc
mov
sub
shlb
pop
out
lds
mov
std
ficompl
sub
mov
cmp
imull
fldenv
inc
out
sub
inc
sahf
leave
or
scas
sahf
insl
in
or
jne
pop
cmp
cmp
cmovnp
pop
popa
adc
sbb
rclb
cld
aam
mov
in
mov
mov
fnstenv
ret
imull
dec
mov
leave
mov
dec
inc
das
push
mov
movsb
push
add
cltd
inc
pushw
sbb
aad
push
adc
jl
jae
jmp
test
pop
sti
in
mov
pop
popf
cld
sbb
adc
mov
mov
int
imul
lods
dec
lock
fwait
inc
push
aaa
pop
cmp
adc
fldl
lock
fs
jp
jne
cmpsl
adc
pop
jge
fisubs
inc
fcom
adc
jne
fwait
adc
sub
fcomps
test
imul
xchg
mov
dec
cwtl
push
rclb
xchg
loopew
sub
xchg
add
adc
xchg
push
dec
ret
mov
mov
sub
jnp
aas
scas
xchg
fsts
roll
nop
lahf
fistl
push
icebp
cmp
adc
mov
sub
or
jae
and
imul
dec
jle
add
add
push
pop
pushf
dec
sahf
cmp
xchg
das
pop
dec
jb
sbb
mov
mov
sarb
or
icebp
stos
aaa
and
dec
nop
pop
outsb
js
jb
adc
push
popa
sub
cmp
rcr
xor
cltd
gs
pop
bswap
mov
int
dec
inc
sti
mov
mov
cwtl
dec
sbb
inc
mov
push
shrl
shl
dec
dec
pushf
ret
lea
aam
or
push
dec
jg
shrl
mov
sbb
mov
mov
jo
pop
dec
test
mov
loope
push
mov
jb
fnstsw
rolb
sbb
test
cmp
jae
cmp
lea
hlt
ret
sbb
and
sub
lret
std
inc
push
nop
lea
gs
ret
inc
out
cli
pop
call
xchg
sbbl
imul
xchg
divb
rorl
popa
push
sbb
enter
movsl
mov
cmp
scas
mov
mov
sti
loopne
jne
nop
xor
jb
fstps
and
jae
bound
pop
enter
inc
or
scas
pmulhw
push
outsl
mov
stc
in
loopew
lods
in
std
sub
xor
std
ret
push
jmp
push
push
addb
decb
add
in
pop
sub
pop
or
add
cmp
xor
test
das
jg
cmc
or
inc
jnp
lret
and
push
lahf
pop
daa
leave
rclb
fadd
mov
jecxz
dec
adc
cmp
sahf
clc
push
lret
aas
and
and
fs
pop
mov
xor
pop
inc
popf
fsub
lret
ja
ja
sbbb
and
mov
cli
dec
push
je
les
test
sub
sbb
loop
push
pop
mov
pusha
in
iret
popf
xchg
sarb
add
jno
inc
test
jp
andl
cmp
and
jbe
jl
jb
notl
inc
or
jo
lret
scas
sbb
sub
test
sbbb
gs
clc
loop
lds
push
stc
ss
cli
pushf
stos
inc
bound
cli
fdivrs
push
fmull
add
and
aas
out
jbe
lds
cmpsl
outsb
push
arpl
or
xor
inc
dec
negb
cmpsb
test
sbb
stos
pop
sti
push
cmp
push
mov
cmp
push
stos
mov
cmpsl
outsb
push
addl
popa
mov
out
inc
jae
call
subb
scas
jmp
jns
xchg
fisubl
add
xchg
out
int
imul
daa
in
mov
outsb
push
add
into
mov
rcrb
setae
sbb
push
aam
rolb
insb
add
lahf
stos
popa
repz
ret
cmp
jo
orb
sub
pop
adc
pop
pop
xchg
inc
loopne
dec
adc
je
clc
and
sqrtps
or
jno
push
and
add
andl
pushf
inc
movsl
push
jnp
ret
mov
mov
scas
aas
push
mov
mov
xor
jle
sbb
push
push
adc
sub
pop
mov
je
lea
arpl
jae
adc
push
and
ja
mov
xor
xor
adc
ja
jbe
mov
and
adc
fisttpll
fcompl
adc
lcall
rclb
fwait
loop
inc
add
enter
inc
sub
pop
sahf
push
leave
add
pop
rcrl
shll
ds
jge
scas
arpl
ds
loopne
jne
insb
popa
lock
fisttpll
rorl
bound
adcb
mov
add
mov
and
ja
jnp
fisubrs
int
xor
sub
or
aaa
sub
cld
fdivrl
xchg
dec
cwtl
mov
and
sbb
out
cmp
adc
scas
mov
pop
loop
mov
fisubs
mov
mov
push
aam
mov
mov
loop
adc
xor
repnz
mov
les
stc
xlat
add
imul
hlt
ss
lret
xchg
scas
or
into
push
aam
jmp
mov
jle
or
out
sbb
adc
inc
fisttps
add
popf
sub
cwtl
and
js
xor
cld
jno
xor
mov
dec
orb
mov
sti
ds
incb
jecxz
add
jno
enter
xchg
test
xchg
aam
adc
mov
jae
lods
add
rcrb
iret
push
mov
arpl
sbb
push
cmp
loope
jmp
mov
inc
ljmp
repnz
push
sbb
pop
push
test
cmpsl
incb
iret
inc
rdmsr
or
stos
cmp
outsl
mov
cmp
mov
push
mov
or
aaa
test
decl
imul
dec
sub
test
pushf
cmpb
popf
outsl
scas
sub
scas
insb
lds
adc
dec
test
jno
aaa
lea
xchg
in
fwait
std
imul
sub
lret
aam
leave
lea
insb
clc
adc
pop
lea
and
dec
mov
cmp
inc
inc
cmp
test
or
sti
pop
fs
gs
sbb
mov
sbb
adc
les
insl
sahf
in
jb
test
pop
pop
inc
push
movsb
sti
sahf
rol
je
sbb
cmp
out
ja
div
cmpsb
mov
mov
fs
or
xchg
cs
dec
dec
mov
shrl
cmp
scas
or
or
gs
gs
jae
push
jecxz
outsl
fwait
icebp
loopne
cmp
xchg
jnp
je
cmpsb
dec
mov
xor
or
stos
and
sbb
ficoms
xor
xchg
mov
and
add
xor
sub
dec
movl
inc
mov
sbb
dec
std
lret
mov
jno
mov
addr16
ret
sbb
adc
in
adc
cmp
inc
cmpsb
shlb
sarb
subb
xor
stc
fdivrs
dec
out
push
pop
jns
nop
or
pop
jbe
push
xchg
daa
push
push
xchg
in
adc
cmp
pop
lcall
neg
out
jo
test
repnz
cld
ds
jl
push
mov
lods
mov
es
ds
decb
push
aad
fimuls
ja
sbb
jo
insl
scas
dec
out
jns
jbe
es
xchg
bound
cmp
pop
in
outsb
pop
stos
add
ljmp
jne
push
mov
pusha
cwtl
pop
pop
and
jg
cmp
jge
fistps
out
insb
sbb
arpl
jle
mov
aas
cmp
loope
pusha
mov
lock
popf
pusha
sbb
xor
lods
sahf
and
pop
in
xchg
push
cmc
mov
scas
hlt
mov
loope
lcall
cwtl
ljmp
pop
dec
popa
jle
and
dec
cltd
scas
arpl
imul
jmp
pop
repz
lahf
cmc
mov
outsl
fcmovb
pop
xor
or
scas
inc
sbb
dec
cwtl
inc
and
sub
adc
jb
icebp
call
call
add
push
cld
les
xchg
ljmp
jecxz
adc
pop
fmull
inc
out
stos
stc
je
ja
into
cmp
push
daa
test
ret
jg
rcrb
lret
inc
add
xor
sarl
xchg
scas
cltd
lret
lret
fcomps
stos
sub
imul
lret
dec
ret
aad
sub
in
ds
nop
sahf
in
orl
and
mov
pop
rcrl
mov
adc
cs
in
daa
jns
out
leave
push
sub
sbb
jp
ror
fstl
lcall
loope
mov
sbb
mov
cs
out
test
stos
jno
clc
cwtl
add
ss
xchg
cld
inc
cmp
sbb
hlt
mov
or
je
push
outsb
mov
jle
test
mov
or
int
fs
rcll
push
ja
inc
lahf
mov
or
dec
cmp
cwtl
dec
rorl
push
dec
mov
push
fwait
push
dec
lods
in
push
jg
jne
mov
aaa
mov
xlat
in
fsubrs
mov
sub
push
fwait
push
pop
pop
lcall
daa
dec
imul
dec
cmpsl
fs
ds
inc
cld
pop
mov
xchg
fdivrp
cmp
inc
mov
dec
pusha
xchg
hlt
int
or
lcall
daa
and
lar
fiadds
pop
mov
push
inc
jmp
pop
add
pop
ljmp
mov
test
cld
and
dec
xchg
xor
adc
jg
cs
sbb
imul
push
pop
sub
mov
test
pop
dec
xchg
in
iret
push
cmp
orl
addb
pop
add
leave
and
loop
pop
and
rcrl
fcomi
notb
pop
adc
inc
dec
and
push
mov
sbb
dec
das
aaa
pop
mull
dec
cld
and
jno
and
mov
daa
xchg
fmull
sbb
dec
cmp
dec
xor
popf
pop
fs
jge
shll
mov
sahf
jle
push
in
sub
sahf
outsl
bound
jge
mov
fmulp
movsl
out
les
test
cli
mov
leave
hlt
xor
mov
or
xchg
cmp
mov
mov
adcl
or
fwait
stos
xor
scas
scas
xchg
mov
sti
or
or
jne
xchg
stos
mov
cli
jb
fmuls
mov
jbe
dec
daa
popa
aaa
pop
ss
dec
rcl
cmp
in
pop
jns
sbb
sarb
and
mov
cmp
mov
clc
iret
idivl
xchg
inc
movsl
cltd
cli
and
xchg
test
jl
leave
or
stc
loopne,pn
xor
mov
and
xchg
dec
movsl
fcompl
inc
fadds
sub
fisubs
stos
outsl
arpl
inc
pop
mov
mov
adc
jb
push
adc
jmp
hlt
aad
adc
cmpsb
push
testb
fs
into
push
mov
test
mov
lods
lcall
jecxz
inc
fidivl
imul
and
adc
pop
jbe
pop
xchg
adc
sbb
in
mov
cmp
test
insb
lea
mov
fwait
sbb
movsb
inc
pop
in
pusha
dec
and
daa
mov
cld
jno
inc
and
add
xchg
outsl
inc
mov
dec
dec
ds
int
dec
loop
mov
xor
mov
mov
xor
sub
adc
icebp
pop
cmp
mov
pop
adc
lods
clc
and
bound
int3
lret
pop
xchg
and
and
xchg
inc
sub
decb
mov
movsl
inc
aas
aas
xchg
push
lock
leave
hlt
and
or
jns
ss
cmp
push
imul
adc
push
pop
add
lcall
mov
xchg
jo
xor
xchg
aam
ds
inc
adc
jno
imulb
sub
push
mov
push
popa
or
push
and
jbe
or
jle
xchg
les
imul
pop
xchg
je
std
dec
mov
jns
sbb
out
sub
sbb
mov
stos
nop
fwait
jo
in
cmp
aad
or
jne
ret
ret
dec
aaa
movsl
xor
hlt
bound
stos
mov
mov
sbb
mov
push
xchg
adc
or
mov
mov
add
aas
adc
mov
push
loop
mov
xchg
aaa
adcl
or
jb
or
arpl
sbb
lds
daa
mov
or
rep
imul
stos
fst
popa
xchg
mov
jno
rcrl
mov
cmpsl
xchg
jmp
mov
cmp
cmp
xor
sub
cwtl
arpl
xor
addr16
jmp
imull
push
sbb
jmp
movsb
fmuls
je
push
dec
ret
cmp
dec
addr16
inc
cmp
mov
fcoml
mov
mov
sub
xchg
mov
pop
mov
mov
sti
xor
fcoms
ss
fbstp
dec
sbbb
cwtl
daa
mov
inc
movb
lods
lcall
dec
movd
outsl
push
xchg
sub
cli
stos
and
lods
cmp
jp
or
xchg
inc
shlb
repz
cs
xor
push
iret
inc
add
loop
jecxz
fcmove
sar
es
enter
adc
jno
shrb
mov
imul
mov
mov
cmpsl
adc
arpl
aas
sbb
popf
ret
inc
pushf
addr16
cltd
mov
xor
neg
push
jle
addl
mov
ficomps
or
rcll
vandnps
pushf
lods
pusha
jbe
ljmp
sbb
cmpsb
lahf
scas
pop
lods
lds
daa
mov
call
pop
mov
sbb
push
mov
sarb
jge
cmpsb
pop
cmpsb
mov
sub
fdivrs
add
lods
cmp
inc
clc
std
sahf
insl
push
xchg
mov
push
xor
lods
jmp
xor
inc
ss
or
jno
lret
xor
push
xchg
mov
mov
and
stos
hlt
lret
bound
cmp
add
and
mov
push
mov
xchg
clc
inc
jg
fdivp
cltd
dec
mov
cmp
cs
pop
jne
cld
test
xchg
or
push
push
and
xchg
jnp
ret
aam
sub
fisubs
incb
call
xchg
stos
pop
hlt
add
push
adc
movsl
push
stos
dec
test
lahf
test
ret
and
inc
dec
movsl
jmp
mov
mov
ja
lods
in
xchg
dec
test
xchg
out
xchg
and
or
push
or
add
or
out
pop
out
sub
inc
ljmp
mov
cltd
pop
shrb
adc
rcrl
cmp
cmp
movsl
sbb
add
mov
mov
cs
out
jnp
fucomip
dec
xchg
push
inc
mov
mov
popf
fistps
mov
pop
pushf
jle
or
fs
test
test
push
xchg
xor
xrelease
xchg
xchg
mov
nop
xlat
inc
popa
notb
addb
mov
ret
test
jge
outsb
push
pusha
push
or
scas
into
iret
push
sbbl
xchg
pop
aas
data16
sub
lahf
aam
out
mov
sub
mov
xlat
loope
add
sbb
cmp
cli
ret
fidivrs
int3
inc
add
push
xchg
jle
sbb
or
lds
mov
arpl
jge
mov
add
addb
adc
push
gs
lock
cld
cmpsb
fs
jmp
push
adc
mov
loop
mov
rol
clc
mov
pop
xor
icebp
xor
mov
mov
scas
cltd
pushf
mov
mov
or
rcl
push
xchg
test
inc
push
lods
imul
pop
mov
pop
and
jb
inc
shlb
and
mov
std
adcl
or
xor
pop
mov
jbe
imul
push
inc
add
repnz
movsl
push
dec
push
movsb
in
jne
daa
test
arpl
add
cmp
dec
jl
test
sbb
stc
out
mov
das
movsb
adc
idivb
sbb
shlb
cmpsw
into
popa
sbb
psubq
jl
adcl
inc
ss
xchg
aaa
ret
out
cmp
movsl
cli
adc
pop
and
mov
cmpb
int
mov
cli
les
dec
and
dec
fs
pop
or
and
cmp
enter
dec
fsubl
mov
sub
bound
inc
pop
fldl
gs
dec
les
outsl
jbe
add
and
dec
sub
or
mov
jle
in
fwait
jl
dec
leave
sbb
jbe
or
daa
pop
lods
mov
dec
insb
lods
out
or
and
add
in
arpl
int3
scas
xorw
aaa
pop
mov
mov
push
adcb
shrb
push
pop
xchg
xchg
sub
stc
popf
xchg
cmpsl
out
cwtl
adc
fists
dec
nop
pushf
fidivrs
js
pop
sbb
rorl
shll
fdivrs
stos
in
test
repnz
mov
or
ds
and
jecxz
xchg
loop,pn
std
in
adc
sub
aas
stos
dec
inc
mov
xor
xor
lods
stc
sub
mov
rolb
movsb
cmp
xor
inc
lock
test
mov
test
or
dec
subl
sti
bound
pusha
arpl
inc
sbb
dec
jmp
sub
or
inc
and
lods
adc
adc
xchg
pusha
jo
fs
sub
pop
cs
in
fstl
jg
inc
push
insb
fdivl
sub
xor
sbb
jl
mov
inc
mov
inc
mov
push
lea
adc
mov
sahf
mov
jecxz
and
lods
or
jb
mov
or
fcompp
movsl
xor
rcll
sahf
dec
mov
dec
in
leave
pop
or
inc
out
mov
aas
xlat
lea
ss
cmp
imul
in
std
sub
call
outsl
adc
dec
push
stos
pop
jg
pushf
cmp
inc
push
adc
and
cmp
add
cmp
cmpsl
pop
iret
lret
loopne
call
outsl
mov
push
inc
xchg
or
movsl
addr16
rorl
or
push
in
popf
movsb
pusha
jle
mov
lods
in
jg
cmp
int3
pop
sub
sahf
cmc
popa
push
mov
in
inc
lcall
jne
xor
lahf
inc
jecxz
mov
inc
sbb
mov
xor
add
mov
add
fimuls
sub
fnstenv
mov
fldl
stc
test
mov
sbb
push
sub
mov
imulb
mov
xor
adc
outsl
fimull
stos
popf
loopne
push
out
out
mov
lds
imul
call
jnp
mov
xchg
shrb
das
push
hlt
adc
sub
mov
je
cmp
xor
xor
add
xchg
mov
jae
adc
pop
popa
or
cmp
mov
dec
jbe
xor
sub
aam
sbb
out
shlb
xchg
add
daa
int3
adc
pop
xor
push
cmpsl
subl
add
sahf
movsl
leave
js
scas
mov
mov
mov
pop
out
inc
mov
aas
sbb
cmp
pop
sub
in
adcl
or
movsl
data16
dec
jmp
clc
daa
push
lahf
mov
or
hlt
xlat
cmpsb
in
jle
clc
adc
adc
psubusw
js
mov
mov
jmp
out
add
and
jb
pop
in
push
aad
das
sbb
in
sub
xchg
bound
cmp
inc
mov
dec
mov
sub
test
in
add
les
push
mov
add
arpl
push
jge
or
jne
fildl
mov
call
out
bswap
sbb
mov
test
out
jne
clc
out
lock
jne
lahf
xor
sahf
sahf
fldenv
cmp
incl
sub
push
xlat
or
movsl
mov
sbb
cmp
pop
mov
pop
movb
dec
or
js
jae
cwtl
lret
arpl
scas
mov
js
and
lods
negb
stc
stos
test
dec
inc
or
xchg
out
mov
adc
je
shlb
mov
pop
scas
inc
lods
cmp
jecxz
je,pn
adc
mov
icebp
or
popa
shll
hlt
mov
pop
call
cmp
outsl
sbb
popf
and
ret
cmp
mov
stc
cli
dec
repnz
test
mov
hlt
pop
lea
lret
xor
notl
or
add
bound
mov
imul
mov
inc
sbb
mov
mov
or
dec
mov
cmp
jge,pn
jecxz
dec
jo
push
addr16
pop
pop
xchg
dec
arpl
lahf
and
jp
cmpsl
add
enter
jle
fdivr
push
push
es
mov
dec
xchg
mov
xchg
lock
jb
and
inc
test
fisubs
sbbb
cmp
sbb
lret
cmp
aaa
in
js
cmc
cmp
fs
sti
cwtl
xchg
fld
push
imul
repnz
scas
ficoms
lcall
mov
movsl
ds
lcall
mov
in
mov
aad
sbbl
mov
adc
pop
xchg
push
add
push
gs
jl
jb
inc
add
inc
lcall
movsl
mov
mov
pop
stos
sti
jne
mov
jl
lock
lcall
mov
cmc
leave
lods
roll
shll
pop
movsl
lcall
dec
das
fistps
ljmp
mov
aaa
clc
lods
sti
mov
sti
dec
mov
adc
or
ret
cltd
clc
mov
dec
pop
add
cli
mov
fucomp
xor
fidivs
jge
dec
loope
or
lea
arpl
jmp
inc
jp
outsl
push
push
jne
in
in
inc
cmpb
cwtl
imul
daa
fidivrs
mov
ss
or
les
stos
mov
inc
rcll
sbb
jge
jmp
xchg
mov
sbb
pop
cwtl
jbe
movsl
push
sbb
push
jge
or
notb
cmpsb
xor
into
add
or
shll
ret
mov
sbb
xchg
and
mov
cmp
fistps
out
pop
in
push
xchg
inc
lds
out
lock
inc
dec
cli
das
and
pop
pushf
sub
adc
inc
test
sub
iret
jmp
movsb
push
out
mov
and
out
pop
xchg
jae
xor
or
clc
cwtl
scas
loop
out
lods
cld
pop
cmp
jge
into
sub
jp
adc
in
loop
dec
adc
movsl
notb
cmp
push
outsl
dec
out
jmp
loope
addr16
ja
cmpsl
inc
aad
inc
jnp
repnz
test
sub
push
daa
dec
rorl
mov
ss
dec
pop
icebp
cmp
dec
into
lods
jl
aas
adc
scas
pusha
pop
lods
inc
mulb
mov
inc
je
inc
and
or
add
faddl
clc
add
adc
test
fisttpl
or
outsl
xor
outsl
xchg
cmp
push
sub
sbb
pop
sub
xchg
pcmpeqb
jns
cmp
mov
and
sbb
leave
aam
ds
pop
pop
ret
jmp
dec
ss
cli
mov
arpl
mov
and
inc
sbb
stc
fisubs
mov
mov
xchg
data16
iret
subb
dec
ja
jne
and
movsl
adc
popf
inc
aaa
pop
rorb
and
ficoms
loop
out
push
das
jne
stc
repz
scas
push
rcrb
mov
cmp
lock
out
dec
or
and
inc
insl
pop
out
mov
jno
mov
arpl
sti
mov
mov
jmp
mov
adc
fwait
push
dec
fimull
adc
bound
pop
fiaddl
ds
mov
es
or
push
inc
pop
jle
jp
xor
add
xchg
imul
jge
int
jae
sub
not
pop
mov
ss
lods
mov
enter
fwait
add
pusha
inc
push
jnp
in
or
movsl
jecxz
int3
scas
mov
arpl
popf
dec
and
jnp
imul
andb
int3
fsubr
out
testb
xchg
mov
jno
mov
mov
addr16
loopne
adc
mov
cmp
push
repnz
xchg
inc
shll
aad
or
notl
cmpsl
scas
fsubl
xor
daa
enter
inc
aas
push
sbb
aad
lret
push
xchg
or
add
xchg
adc
je
lods
or
imul
cwtl
adc
push
ja
sub
push
mov
pop
or
mov
mov
inc
js
add
pusha
inc
xor
mov
movsl
data16
popa
test
fst
popa
dec
jbe
sahf
cmp
sub
inc
negb
mov
cvtps2pd
jns
cmpsl
jns
xor
push
in
lds
jnp
daa
ret
and
testb
pop
pop
daa
fadds
out
adc
andb
lret
push
xchg
ljmp
dec
aad
ja
stos
jnp
mov
xor
int3
mov
xchg
mov
gs
ret
stos
lcall
jp
and
push
mov
adc
mov
iret
ret
sbb
test
inc
sub
mov
pop
insl
addr16
and
ja
push
in
or
add
dec
xlat
or
rclb
sub
cmpsl
or
clc
shrb
fs
sub
xor
mov
xchg
mov
xchg
sbb
xor
fsubrs
mov
hlt
mov
mov
outsl
cmpsb
sbb
mov
fnstsw
insb
loopne
pop
sbb
and
scas
loop
rclb
mov
xchg
sbb
pop
adc
test
test
pushf
aad
sbb
leave
fiadds
add
jmp
push
pop
scas
adc
roll
mov
test
sbb
cmp
push
mov
mov
push
addr16
ds
fwait
repz
cltd
fnstsw
pop
lods
arpl
jns
out
pop
faddl
sti
scas
cmpb
repz
lahf
rolb
sbbl
mov
adc
mov
dec
push
sbb
jmp
data16
mov
add
jne
push
push
or
jmp
fwait
cmpsb
and
das
sbb
ret
xor
inc
icebp
and
into
lcall
jle
or
push
jmp
out
fadds
dec
or
sarl
cmp
cs
add
bound
arpl
in
xchg
mov
sub
lret
fs
pop
cs
xchg
mov
fdivp
jmp
cmpsl
call
fidivrs
and
das
adc
push
jp
fiadds
inc
add
lahf
xchg
or
mov
insl
inc
xor
daa
xchg
xor
addr16
mov
xchg
lds
aaa
test
mov
out
adc
mov
dec
xchg
and
mov
flds
adc
test
sahf
push
call
xor
sbb
inc
in
lcall
jmp
das
push
out
mov
sarb
cmp
daa
adc
inc
pop
outsl
ss
ljmp
or
and
cmp
loop
mov
popf
add
pop
jno
in
sbb
and
mov
out
pusha
aas
test
push
or
std
xor
cmp
and
ljmp
and
and
into
cmp
sbb
in
movsl
cmp
dec
push
js
or
jmp
xchg
and
push
fisubrs
mov
pop
addr16
dec
pmullw
int3
bound
fstl
cmp
aas
fidivs
fsubl
push
test
add
lea
jmp
je
xor
stc
mov
rcrb
test
or
int
ret
cmp
les
icebp
and
pop
xchg
inc
in
sahf
mov
xchg
jns
fs
mov
fldl2t
ficomps
mov
ja
bnd
stc
cmp
pushl
outsb
stos
xchg
mov
mov
popa
leave
dec
inc
aam
xchg
ja
cmp
pop
lods
subb
and
push
jb
js
ljmp
ja
loop
cmpsl
add
icebp
sbb
pop
cmp
mov
jecxz
xchg
and
inc
mov
push
adc
jns
mov
js
xor
or
add
and
dec
mov
pusha
jmp
push
jne
aad
fstl
push
out
dec
les
popf
idivl
call
fdivr
jmp
pop
ja
xor
push
jbe
seto
push
mov
mov
fwait
shll
gs
add
bound
dec
repnz
xor
push
xorl
pop
or
scas
xchg
lds
cli
dec
mov
push
and
cmp
sbb
push
in
rorb
lcall
popf
roll
xor
out
subl
inc
cmc
dec
pusha
lret
scas
inc
xlat
cmp
cmp
dec
or
sbb
push
fimull
sbb
inc
repnz
cli
push
in
test
divl
or
pop
inc
mov
mov
dec
pushf
aam
push
mov
sub
fistps
inc
inc
je
mov
xchg
sbb
mov
push
fcomip
jae
xor
mov
cmp
jge
or
test
pop
mov
jge
sbb
dec
push
xlat
push
jae
and
jle
test
mov
push
sub
fidivrs
fs
call
cmp
mov
xor
mov
xor
cli
inc
pop
clc
cmpsl
out
negl
add
pop
es
inc
inc
pop
notb
add
data16
mov
bound
and
xor
mov
hlt
sbb
or
dec
mov
dec
daa
mov
sbb
xchg
sar
test
and
sbb
jl
lret
adc
hlt
and
in
or
sbb
xor
loopne
arpl
arpl
jns
cmpsb
lcall
sti
mov
push
out
test
enter
leave
and
test
out
dec
ret
andb
mov
push
lahf
add
stc
insb
ret
int
pop
mov
das
cmp
push
mov
and
mov
sbb
add
mov
sub
xor
mov
stos
xchg
inc
mov
pop
or
lods
fldt
roll
and
int3
cmp
cmpsl
rclb
xchg
mov
das
dec
push
inc
cmp
xchg
pop
jnp
sarl
loope
mov
mov
xor
popl
mov
jp
mov
push
daa
mov
cmp
or
dec
imul
cmp
mov
adc
addb
xor
adc
aaa
xor
mov
jl
inc
or
in
int
dec
mov
xor
insb
rolb
imulb
fistl
fbstp
testl
pop
inc
cmpsl
insb
ja
inc
mov
out
or
adc
or
aas
sub
hlt
icebp
aas
xor
js
pop
cmp
inc
mov
loopne
mov
in
jg
cli
xchg
aad
movsl
push
insb
sbb
add
jne
mov
lea
sahf
mov
mov
ljmp
push
or
js
mov
sbb
mov
adc
in
xchg
pop
jl
sbb
and
leave
je
out
in
mov
or
out
mov
neg
push
movsb
clc
popa
int
out
lret
gs
jp
inc
cld
inc
pop
pop
dec
test
add
push
inc
cmpl
sbb
mov
pusha
xchg
push
xchg
int
and
leave
das
dec
sub
aam
nop
push
add
fcmovnbe
imul
rcrb
dec
mov
aas
cmp
es
scas
lahf
push
mov
hlt
and
in
dec
test
imull
je
pop
push
push
pop
stos
and
ljmp
lea
xor
xor
inc
adc
sbb
mov
das
imul
jle
mov
enter
push
shl
daa
fwait
push
jbe
sbb
int3
test
sbb
mov
inc
pusha
std
mov
fstp
mov
xor
aad
in
lock
lock
push
jo
ss
sub
pop
scas
mov
cmp
or
dec
je
mov
inc
sub
jnp
and
cwtl
xor
fidivs
adc
mov
xor
xor
arpl
popa
loope
push
adc
push
cmp
cmpsl
add
test
cmp
imul
jecxz
arpl
aas
out
lds
mov
outsb
stos
pushf
pushf
shlb
daa
mov
into
or
lret
lahf
insl
add
enter
scas
xchg
scas
xchg
jecxz
scas
pop
imul
shlb
inc
lcall
jp
mov
mov
sarb
mov
adcb
test
mov
cmp
sub
aam
shrl
xchg
cmp
inc
inc
mov
xor
or
popa
lock
popf
sahf
pop
jle
add
xchg
mov
mov
les
adc
andl
mov
aam
dec
mov
xlat
sub
fdivl
pushf
ficoml
outsb
in
int3
sbb
outsl
rolb
movsl
push
inc
sti
popf
enter
test
ja
add
pop
rcrb
lea
mov
push
push
push
mov
mov
sub
ljmp
in
jge
aaa
cmp
and
jmp
pop
jb
pop
mov
and
mov
js
pop
cmp
fidivs
test
jmp
sbb
pop
inc
push
fisttpll
jnp
hlt
loope
and
test
or
mov
in
and
ret
lods
divb
ja
dec
push
imul
loopne
dec
pop
rolb
das
and
test
push
dec
push
pop
stc
sub
push
add
push
loopne
insb
push
adc
fsubrp
jo
sbb
pop
pop
dec
pop
add
inc
dec
xlat
bound
xchg
mov
imul
imul
add
lret
lea
fsubrp
xchg
shl
mov
outsl
mov
stos
movsb
insl
daa
sti
mov
jnp
incl
dec
rcrl
push
add
jmp
jo
shl
add
mov
scas
loope
imul
jne
sti
cld
shr
aaa
mov
push
xchg
push
sub
dec
lcall
aaa
test
jp
bound
pusha
pop
pushf
les
push
leave
mov
or
xor
ret
filds
mov
sbb
insl
inc
sahf
repz
call
sbb
push
and
inc
mov
add
or
rorb
pushf
repz
sub
mov
or
inc
aaa
xchg
push
dec
cltd
data16
adc
pop
xor
rclb
lcall
mov
lds
push
xchg
mov
pop
mov
xacquire
mov
mov
sbb
pop
push
xor
fisttpll
aam
mov
cmp
std
inc
xor
out
or
xchg
mov
push
mov
int
sbbl
inc
mov
lods
cmc
adc
push
das
and
fisttps
sahf
imul
mov
xor
pop
add
movsl
sbb
mov
les
scas
repnz
dec
pusha
cmc
cmp
jb
adc
push
test
sbb
lds
sti
outsb
mov
ret
popa
aaa
jecxz
aam
jno
in
jp
into
scas
leave
fldcw
mov
repz
mov
sbb
adc
mov
inc
lds
or
ret
sbb
clc
lret
pop
stc
or
cli
or
mov
and
pop
adc
jbe
pop
ljmp
ret
or
cmp
xchg
lds
stc
xchg
sub
lret
das
inc
jp
lret
js
pop
pop
add
loope
xorb
pop
or
cmp
in
or
aas
fisttpl
xchg
lods
fists
out
arpl
unpckhps
mov
lahf
add
inc
es
shrb
rclb
into
inc
or
pop
movntq
insl
xchg
push
and
inc
stc
mov
xchg
lret
aad
sti
sbb
mov
push
mov
jl
jae
in
and
pop
mov
and
xchg
jg
mov
push
out
imul
pusha
je
mov
aaa
dec
push
cs
dec
xchg
xor
insb
xchg
lods
mov
lea
out
lds
jmp
icebp
nop
bound
lea
vunpcklpd
mov
jg
clc
inc
jle
and
test
shl
cs
pushf
jmp
lods
pop
js
mov
and
fcmovb
lcall
sbb
icebp
mov
mov
icebp
inc
sub
inc
dec
jae,pt
cmp
lods
pop
dec
lock
fwait
cli
cli
cmp
in
push
fmulp
pop
xchg
out
sub
mov
in
pop
push
dec
sbb
out
stos
popf
push
pop
jp
int3
dec
inc
fisttpll
es
fnsave
inc
into
sbb
arpl
mov
pop
cmp
sub
lds
dec
pop
cmpsl
pop
pop
std
add
jb
mov
xor
std
ljmp
or
jo
nop
push
sbb
loopne
pushl
sbb
fistl
add
adc
repnz
data16
ja
sarb
add
mov
jg
addr16
arpl
shrl
xor
loop
or
test
push
xor
ret
incl
fisttps
sub
int3
shrb
stos
pop
icebp
decl
xchg
sbbl
cli
jmp
push
dec
xchg
ss
or
jg
inc
cwtl
mov
mov
pop
push
pop
mov
jecxz
insb
adc
outsb
loop
dec
shll
pop
mov
jb
sub
jmp
add
fildl
mov
or
repnz
es
jmp
out
mov
les
mov
imul
pop
outsl
push
pop
pop
and
mov
cmp
mov
and
daa
out
add
mov
ljmp
xchg
idivb
je
jmp
push
pusha
test
and
pop
cmp
sub
ljmp
loop
inc
scas
rolb
jno
sahf
loope
movsl
xchg
jbe
outsb
daa
mov
and
xor
sbb
jge
jmp
dec
mov
sbb
sbb
repz
outsb
sub
fimull
mov
push
xorl
jle
adc
sbb
xor
or
pop
jns
orb
push
push
fnstcw
cli
ja
stos
addr16
dec
cmp
gs
out
mov
mov
test
pop
lahf
pushl
addl
jb
adc
jge
js
testl
dec
inc
aas
es
scas
ret
stos
mov
ret
movsl
inc
mov
lcall
mov
pop
xchg
shll
fldl
push
stos
iret
into
mov
popf
pushf
push
sub
mov
xlat
inc
cli
sbb
xchg
sbb
add
fdivs
scas
into
das
mov
sbb
ds
and
pop
jg
mov
xchg
fwait
add
mov
mov
std
outsl
in
aad
dec
sti
lahf
int3
addr16
scas
inc
fs
mov
push
push
cmc
aad
fdivrs
imul
and
into
insl
orb
fstpl
and
stos
popf
int
cmp
pop
out
rorl
pop
jo
das
ret
add
jbe
cmpsb
sbb
pop
loopne
call
or
xchg
mov
and
cmpsl
adc
int
ficoms
jmp
adc
dec
mov
hlt
sahf
dec
jae
mov
scas
fistl
sbb
push
push
xor
inc
jp
inc
sub
lret
dec
icebp
scas
fmul
inc
gs
xlat
idivl
scas
mov
xorl
xchg
mulb
int3
lods
fxam
sub
jns
and
sub
cli
aad
inc
sbb
push
xor
sar
jae
mov
call
push
scas
shr
sbb
cmp
jcxz
les
inc
lcall
and
push
scas
dec
or
repz
fs
into
fnstenv
xchg
dec
daa
aaa
cmp
push
repz
imul
icebp
aad
and
dec
aam
or
stos
shll
pop
inc
xlat
adc
pop
nop
fadds
mov
cmpsb
or
push
xor
ds
jnp
adc
test
adc
imul
adc
sbb
test
test
sbb
pop
outsl
aam
mov
jo
and
rolb
cmp
popa
pop
addr16
cld
mov
loop
add
fmull
and
stos
lock
insl
adc
add
dec
jl
or
loop
add
sbb
push
lds
mov
xchg
or
pop
inc
xlat
mov
pop
pop
loopne
lods
push
fists
and
cmp
and
mov
mov
cmp
cmpsl
ret
lods
and
sbb
mov
mov
and
pop
jg
nop
in
xchg
int
fcompl
xor
and
jge
loop
adcl
lds
adc
sbb
jb
pop
sub
enter
lret
lods
add
inc
inc
mov
sbb
cmpsb
lea
insb
or
cli
addb
data16
mov
shl
daa
repnz
arpl
mov
cli
sub
inc
sar
and
xor
inc
pop
push
dec
loope
jns
and
into
xorb
or
jmp
mov
das
aam
push
add
sbb
mov
cwtl
fidivl
xor
mov
push
popa
and
jns
out
adc
pop
icebp
loop
je
jmp
in
xor
insb
mov
divb
fs
aam
xlat
loop
cmp
cld
inc
pushl
jnp
xchg
stos
sbb
arpl
test
jb
je
aas
es
inc
pusha
and
adc
jne
sbb
xlat
adc
add
sub
inc
lahf
xchg
repnz
or
xor
pushf
in
les
mov
mov
and
fyl2xp1
in
imul
cmpsb
ret
xchg
fs
xor
popf
loop
or
stos
and
out
sbb
mov
daa
adc
xlat
in
xchg
dec
test
repz
jmp
outsb
jecxz
xor
pusha
stc
inc
movsb
call
roll
aam
push
push
lea
lods
mov
pop
inc
repz
cwtl
fistps
inc
sub
data16
sub
aas
sub
repnz
xchg
pop
or
and
mov
adc
sbb
xor
negl
xor
sub
sub
mov
jle
xchg
outsl
rolb
fbstp
push
in
aas
sub
in
out
mov
stos
or
and
sub
enter
xor
xchg
pop
sbb
sarl
push
push
inc
in
bound
roll
or
adc
lret
mov
inc
insl
cmp
mov
rcll
xchg
jns
push
stos
xor
aad
sbb
jb
sbb
inc
add
sbb
andl
notb
flds
and
xor
in
testb
sahf
nop
pop
push
incb
std
into
adc
outsb
int
nop
add
je
aad
sbb
sbb
push
popa
and
jecxz
sub
jg
cmpsb
negb
sub
cmc
xlat
xchg
mov
jae
add
inc
pop
cld
inc
dec
insl
shrb
out
mov
std
out
insl
imul
mov
sub
mov
ljmp
gs
stos
and
pushf
jne
mov
ret
call
mov
lods
xor
jnp
jmp
dec
pop
popf
push
mov
ret
je
scas
pop
fimull
into
pop
push
xchg
clts
fs
ljmp
push
mov
fisubs
hlt
mov
jle
or
jge
ret
call
sahf
mov
xlat
xor
ljmp
cmp
add
xchg
lahf
mov
push
jl
imul
mov
ds
jnp
cs
ret
dec
mov
pop
jne
lods
adc
pop
sbb
mov
in
mov
push
mov
inc
lds
mov
xor
xor
cmp
cmc
pop
xor
jo
outsb
lods
leave
loopne
or
push
jbe
nop
into
shlb
std
xor
inc
lds
fmull
pop
xchg
movb
aas
stos
shl
ret
inc
push
aad
mov
mov
out
mov
ret
ret
inc
ja
xor
push
int
inc
push
sbb
test
mov
gs
fdivp
sahf
add
xchg
test
dec
lret
rclb
data16
rorb
aam
lahf
fisubrl
stos
adc
push
pop
mov
adcl
lcall
lea
jo
je
jle
rep
dec
outsb
sarb
or
test
hlt
jg
pushf
leave
mov
shll
fidivrs
ret
xor
cs
add
iret
push
push
daa
imul
enter
addr16
pop
addr16
jmp
out
inc
rcl
sub
lcall
cmpsb
inc
jno
mov
xchg
and
or
std
push
cmp
xchg
cmp
aaa
in
cmc
sub
in
nop
mov
outsb
int
sub
mov
pop
dec
mov
push
jp
sahf
sti
xchg
out
xchg
cmp
pminub
fwait
enter
dec
sub
cli
aad
shlb
cld
loope
repz
fcoml
cmc
test
rolb
popl
add
insb
scas
loope
call
fdivl
push
outsl
aam
push
cmp
adcl
mov
cli
jg
mov
in
xchg
std
paddusw
push
jo
pushf
xchg
xchg
cmp
lock
pop
rclb
xchg
sbb
out
out
ret
mov
outsb
mov
iret
popf
cli
pop
fldenv
push
pop
test
mov
les
jge
mov
mov
lret
icebp
cmp
pop
sahf
xchg
cmpsl
repnz
pop
std
icebp
cmc
or
jecxz
or
stc
js
loopne
pop
or
je
xchg
lahf
sbb
push
add
bound
shl
sub
mov
mov
test
push
or
int
dec
pop
sbbb
ljmp
push
xchg
xorb
adc
bound
lahf
js
cmp
sbb
xlat
cmp
out
dec
add
jg
test
adc
xchg
push
adc
nop
mov
mov
sbb
inc
push
xor
push
jo
popf
lret
jo
sbb
add
adc
mov
xchg
adc
aam
dec
mov
int3
inc
cwtl
lret
push
cld
in
push
pop
sahf
inc
push
movsl
popa
and
arpl
jae
jo
mov
mov
andb
repnz
cmpsb
mov
push
sub
lods
in
xchg
cli
xor
xor
stos
xchg
dec
fisubs
dec
xchg
daa
pushf
aaa
shll
adc
dec
movsl
mov
mov
lret
mov
incb
out
mov
adc
scas
cld
or
cltd
in
adcb
popf
not
divl
dec
mov
xchg
add
adc
or
lcall
sbb
xor
std
mov
incl
push
mov
pop
push
leave
or
js
push
push
jns
add
and
pop
jge
inc
jecxz
or
hlt
adc
sub
pop
xor
pop
ret
pop
xchg
out
mov
das
cltd
xor
sahf
cmp
fcmovb
and
mov
cs
sbb
mov
lcall
out
push
imul
push
clc
jbe
xchg
mov
add
push
dec
testl
stos
insb
test
aad
aad
stc
ja
sub
testb
push
in
push
add
or
or
insb
mov
test
xor
xor
sbb
ret
jl
mov
ret
push
imul
insb
pop
or
and
rcr
nop
bswap
and
push
leave
mov
rcrl
repnz
sub
xchg
dec
pushf
push
mov
jmp
loop
adc
jnp
xchg
jbe
xchg
inc
sti
stos
lods
jae
add
cmp
inc
mov
jge
xchg
movsb
dec
adc
and
mov
cld
xchg
les
xchg
movsl
shlb
adc
and
adc
jb
push
fwait
sub
cmp
add
push
int3
pop
flds
movsl
xor
jp
scas
lods
xchg
repz
cmp
inc
mov
test
scas
leave
scas
mov
out
mov
inc
js
pushf
aaa
negl
iret
cmp
fs
out
ret
mov
shrl
sub
out
pop
xchg
push
mov
loope
dec
mov
push
popw
pop
mov
inc
andl
pop
les
adc
fld
iret
jmp
sbb
sbb
jbe
lea
or
insb
cld
xor
sub
inc
jbe
xor
repz
pop
test
add
jno
pop
loope
or
mov
aaa
loopne
add
xor
lock
lcall
cmp
fdivr
cmp
nop
repz
mov
dec
xchg
jns
nop
or
add
jns
and
call
outsb
pop
jmp
mov
pop
cmp
sbb
nop
mov
inc
or
mov
mov
paddusw
loope
mov
sbb
test
mov
repz
sub
insl
out
sbb
push
sarb
jb
push
leave
pop
cmp
xor
xchg
push
sub
pop
xchg
rolb
mov
leave
add
aam
nop
cwtl
loop
lahf
out
add
mov
adc
adc
mov
push
dec
push
and
jp
lods
outsb
inc
sbb
xorps
pop
adc
cmp
popf
mov
dec
sub
stos
cmp
stos
mov
pop
gs
add
cmp
gs
mov
data16
test
sbb
xor
adc
push
mov
and
push
shlb
cmpsl
cli
mov
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
fld
sti
push
push
add
lahf
imul
ret
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
loop
jne
add
lret
mov
shl
and
inc
dec
jge
adc
sub
add
adc
pop
arpl
popa
push
ja
adc
and
ret
xor
sbb
sub
mov
ss
lahf
sahf
push
pop
popa
pushf
lret
pop
adc
pop
xor
out
and
cmpsb
popa
push
xchg
push
cmp
jg
cmc
push
xchg
and
push
push
mov
ss
sahf
sahf
mov
ret
ljmp
int3
cli
push
pop
arpl
mov
mov
or
int3
cmp
jg
fs
sub
sbb
iret
cs
imul
fadds
lahf
imul
xor
cli
add
xchg
imul
xor
cmpsb
add
or
imul
sbb
lahf
imul
ret
and
sbb
lahf
push
imul
es
add
lahf
imul
xor
push
add
lahf
imul
add
lahf
imul
and
sbb
lahf
imul
xor
sbb
xchg
imul
ret
xor
ljmp
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
inc
and
mov
jne
push
xchg
lahf
jnp
imul
and
add
fisubrl
bound
mov
sbb
lahf
mov
mov
inc
sbb
lahf
imul
add
lahf
imul
xor
sbb
lahf
imul
add
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
lahf
imul
xor
sbb
mov
push
jnp
xor
filds
add
nop
adc
mov
mov
out
scas
lods
fwait
ret
pop
rcrl
fcmovbe
adc
cmp
stc
ss
insl
mov
addl
push
or
pop
inc
test
leave
fldl
cmpsb
jp
cmpsl
mov
cmp
pop
sub
cs
jge
in
lock
ret
adc
insl
xor
jns
and
cs
sub
sbb
sub
add
cli
cmp
ja
dec
cli
subb
in
js
lahf
mov
aaa
idivl
pop
mov
scas
pop
dec
insl
lahf
mov
std
xor
mov
ljmp
outsb
stc
add
ficoml
sbb
jno
and
push
dec
lret
test
popf
pop
sub
xchg
xor
test
sarl
cld
sti
lcall
lahf
pop
roll
js
insb
xchg
jo
jbe
shll
imul
lods
fisubl
mov
iret
or
aas
cmp
sub
stos
repnz
mov
hlt
loop
mov
pop
stos
popa
nop
dec
hlt
mov
xlat
shrl
test
mov
mov
aaa
jle
sub
loop
lret
gs
add
leave
fdivrs
insl
mov
sbb
out
sbb
push
mov
inc
movsl
cltd
fbstp
es
jae
push
and
or
adc
and
lret
fsub
ffree
and
ja
cmc
or
ficompl
sbb
jecxz
or
cs
fnstenv
maxps
mov
push
ret
ja
out
sub
pop
mov
sbb
bound
arpl
and
ljmp
cmpsl
data16
daa
dec
out
imul
jb
fsubl
jge
jg
lods
push
jmp
push
sbb
xor
xor
mov
mov
jle
push
jg
imul
jg
out
in
cmp
mov
pop
xchg
sbb
xor
fcoml
xor
sti
xor
popa
scas
xor
enter
fs
push
pop
in
cmpsl
icebp
adcb
cmp
dec
push
hlt
aaa
imul
lret
jle
pop
lods
xlat
andl
scas
out
push
or
pop
push
aad
lret
mov
insb
xchg
je
jle
push
sbb
imul
imul
dec
jl
mov
jne
test
jp
sub
or
mov
js
xadd
sahf
popa
test
pop
testl
adc
push
inc
insb
sub
ret
or
imul
movsb
sub
test
fisubrs
xchg
popf
bound
fcoms
inc
jno
xor
sarl
jns
mov
fxch
in
pop
imul
scas
adc
jbe
or
popa
xchg
fnstcw
sti
add
shll
inc
imul
movsb
out
xchg
push
pop
cltd
pop
and
sti
xchg
std
xchg
fcomi
into
mov
lcall
iret
lods
add
out
int3
loopne
daa
pusha
in
sbbl
aam
mov
rorb
and
subb
js
push
out
out
lret
ds
mov
insb
xchg
fisubrs
mov
fidivs
fiadds
adc
mov
stos
sarb
add
daa
cmp
call
adc
xor
or
push
or
enter
jg
out
dec
mov
dec
hlt
add
cmp
sbb
in
ret
ljmp
jno
les
rcr
fmul
jb
leave
popa
dec
and
adc
xchg
xchg
xchg
call
fldl
jle
dec
mull
call
iret
pop
push
mov
adc
test
push
je
sarb
pop
cmpsl
ja
mov
mov
int
outsl
jmp
xchg
xchg
push
lea
inc
cmc
xchg
cmp
fdivs
jb
push
sub
and
and
jg
mov
lods
out
push
mov
fnstenv
scas
adc
rorb
ds
mov
outsl
out
lret
cs
adc
jmp
js
jl
enter
sub
test
pop
lret
and
lods
dec
push
iret
or
enter
daa
add
test
psubsb
pop
push
stc
mov
and
sbb
and
mov
es
add
mov
and
out
cmpsl
daa
rolb
lret
nop
enter
fdivrs
adc
sbb
xchg
and
lret
cmp
xchg
aad
dec
adc
cmp
or
mov
adc
mov
add
repnz
cmpsb
cmpsb
mov
jg
inc
inc
out
bound
cmp
mov
jb
int3
pop
dec
aad
das
pusha
rcrb
mov
or
or
aaa
mov
pop
add
sbb
jp
icebp
addr16
repz
cmpsb
cltd
pop
jmp
inc
inc
lahf
mov
pop
mov
mov
ljmp
cwtl
add
sub
mov
jmp
dec
mov
mov
subl
add
adc
lock
mov
jbe
ja
je
xor
outsl
fdivrs
aam
rolb
cmpsb
addr16
insl
movsl
dec
and
negl
xlat
leave
in
pop
push
imul
mov
fstp
jmp
mov
shlb
ljmp
sub
xor
push
jg
call
cmp
arpl
out
push
mov
fsubr
sbb
dec
mov
roll
adc
jb
lock
mov
loop
dec
mov
jne,pn
mov
or
pop
cmp
and
in
dec
enter
sbb
jno
mov
cmp
loop
push
in
sub
add
out
stos
pop
jne
sub
jmp
sti
jl
or
outsl
xor
and
xor
fdivs
ljmp
js
lea
and
clc
rcll
pop
clc
mov
aad
std
lret
sahf
xchg
push
jp
xlat
mov
inc
lret
xor
cld
out
mov
add
add
bound
rorb
fbld
cli
pusha
outsb
gs
lds
mov
iret
pop
fisttps
xchg
cmpsl
addr16
xchg
rorl
nop
and
inc
mov
out
filds
insb
jmp
jnp
or
lret
nop
repz
pop
test
dec
stos
les
mov
jne
imul
cltd
xor
sbb
cmpsb
fimull
lret
pop
or
popa
pop
cwtl
pop
test
xchg
mov
mov
sub
das
mov
xor
cmp
cs
pop
xchg
testl
mov
jp
sbb
inc
cwtl
int
inc
sub
mov
mulb
push
loopne
stos
ljmp
push
xor
adc
mov
std
and
stc
roll
scas
std
jnp
cmp
loop
es
pop
dec
xor
data16
fcmovnb
mov
cmpsb
std
aas
enter
xchg
cmpsl
aam
mov
stos
xchg
xchg
dec
icebp
jns
cmc
insb
xchg
dec
push
push
in
mov
fcomps
orl
sbb
test
dec
mov
mov
and
adc
pushf
jmp
dec
xor
inc
xor
les
cmp
out
jne
aam
cld
pop
scas
lcall
das
stos
clc
mov
push
out
cmp
lret
orb
push
daa
lahf
jmp
pand
in
test
lret
roll
stos
cmp
cmp
popa
add
fprem1
jo
xchg
stc
pop
sarb
and
sarl
mov
push
jle
mov
ficompl
mov
push
or
sbbb
movsb
adc
mov
mov
movsl
mov
shlb
add
or
arpl
stos
push
add
xor
cmc
mov
icebp
repnz
sub
mov
dec
sbbb
cmc
mov
dec
pop
rolb
ljmp
addl
mov
dec
mov
lret
pop
inc
in
dec
pop
fistps
jae
cmc
fs
lods
dec
imul
fidivrl
insb
mov
jno
and
aam
push
jno
sbb
mov
mov
in
mov
inc
add
int
push
pop
push
adc
xchg
jge
aad
xor
sbb
hlt
inc
sbbl
pop
cld
pop
pushl
xchg
cmpb
ds
aad
sbb
cmpb
and
stos
mov
dec
jge
mov
int
ret
jne
pop
push
imul
jb
xchg
movsl
jle
xchg
and
mov
in
and
fwait
loop
ret
stos
mov
aad
mov
fsubr
loop
xchg
adc
sbbl
push
dec
js
das
xchg
or
pop
adc
mov
dec
fs
push
in
les
fcmovnb
mov
sub
xor
popa
push
mov
out
jnp
je
add
aas
out
decb
jo
es
jbe
sub
or
add
scas
loopne
pushf
mov
outsl
pop
cmpsl
dec
push
mov
ljmp
mov
dec
pop
lret
lods
lcall
rorl
test
xchg
mov
js
mov
jg
pop
sbb
and
mov
clc
popf
mov
fstpt
pop
add
insl
in
imul
cmp
mov
dec
insl
mov
dec
std
outsb
inc
iret
cmp
insb
filds
jae
imul
xchg
jl
aam
sbb
push
movsl
pop
das
sub
jg
test
call
hlt
loope
and
sub
lds
pop
pop
cs
test
dec
cmp
dec
loopne
sub
das
xor
mov
dec
push
outsb
mov
push
cwtl
sbb
mov
and
in
inc
movsl
mov
sarb
scas
test
lcall
shlb
mov
push
je
mov
jnp
or
xchg
daa
push
jne
xchg
jle
mov
in
nop
popf
inc
jge
mov
pop
negl
xor
repz
or
sbb
pop
mov
data16
add
icebp
mov
jle
dec
push
lret
push
lret
nop
jo
sub
inc
xor
insb
aaa
mov
push
adc
and
aad
cld
mov
mov
pusha
mov
ljmp
fildll
pushf
loope
adc
movsl
push
pushf
ljmp
push
mov
or
jnp
sub
icebp
jg
jo
aas
das
rcrb
mov
cmp
mov
push
inc
leave
push
jmp
mov
loopne
imulb
push
aam
or
sar
or
js
mov
adc
or
pop
inc
testl
mov
subb
xchg
loope
adc
add
xorl
outsl
cltd
fisubrl
mov
aad
jl
mov
ljmp
mov
fcmovbe
ds
pop
adc
cwtl
and
push
sbb
jns
mov
cmp
or
loopne
lds
aaa
jne
test
mov
lcall
arpl
xlat
rcr
stc
das
cs
call
daa
add
repnz
push
scas
int3
js
in
xchg
add
cmc
cs
lea
jbe
cld
lds
sbb
stos
jnp
fldl
shll
xchg
mov
loopne
mov
fisubl
push
sbb
cmp
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
