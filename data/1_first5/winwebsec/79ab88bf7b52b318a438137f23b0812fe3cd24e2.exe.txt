sub
push
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
push
push
push
push
push
push
push
call
mov
cmp
jne
pop
mov
pop
add
ret
push
mov
push
mov
nop
push
lea
push
push
lea
push
push
call
test
je
push
push
push
push
call
mov
push
push
push
mov
push
push
call
mov
push
lea
push
push
lea
push
push
call
mov
push
push
push
push
push
call
mov
cmpl
je
push
mov
call
push
call
lea
push
call
mov
xor
mov
div
mov
lea
mov
mov
imul
push
push
push
call
xor
mov
div
lea
add
push
push
push
call
push
lea
push
push
call
mov
sub
push
lea
push
push
call
add
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
shr
mov
mov
shr
mov
sub
imul
mov
shl
mov
mov
add
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
push
call
test
je
push
push
push
call
mov
lea
push
lea
push
call
test
je
mov
add
mov
push
push
mov
push
call
push
push
mov
push
call
movb
call
mov
movb
movzwl
cmp
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
jno
cmp
push
push
inc
push
mulb
xor
loope
out
add
dec
shrl
call
daa
fisubl
adc
inc
imul
je,pn
dec
mov
cmp
mov
dec
mov
xor
gs
pop
xor
shlb
and
std
mov
push
sub
in
xor
ss
mov
mov
xchg
addr16
fidivl
sahf
jp
enter
sub
stos
decb
cmp
push
pop
ret
gs
sarl
ja
cwtl
inc
mov
mov
jo
inc
pop
dec
pop
xor
sbb
leave
lods
out
insb
pop
mov
mov
mov
mov
inc
or
aam
xchg
pushf
jmp
jmp
adc
sbb
into
mov
int3
fidivl
ss
mov
pushw
pop
sub
repz
jecxz
and
popf
xor
je
xor
loopne
mov
push
mov
insb
testb
in
sarb
int3
aad
lds
test
sub
aam
xlat
les
scas
aam
orl
pop
clc
push
xchg
push
int3
xchg
test
cltd
lock
or
aam
repz
out
or
leave
inc
jno
inc
mov
cmp
mul
sahf
pop
fs
sub
fsub
push
jg
in
pusha
dec
sub
cli
movsl
mov
cmc
push
sti
push
push
imul
pop
out
mov
aad
xor
pop
mov
popa
daa
inc
loopne
mov
stos
mov
lea
sub
cmpsl
jl
fisubrs
xor
pop
mov
ret
enter
mov
cwtl
mov
cld
imul
gs
popf
adc
jnp
fxch
and
andb
mov
pop
xor
mov
mov
mov
mov
sbb
jg
hlt
inc
cmp
sbb
cmp
cmc
inc
dec
cld
cli
jnp
xor
add
mov
int
arpl
in
hlt
loope
std
mov
jge
cmp
xor
cli
iret
shrl
push
call
mov
out
adc
lock
daa
sub
mov
inc
cltd
add
adcb
out
cltd
ret
push
repz
add
inc
lds
outsb
adc
icebp
fldcw
jle
je
mov
jp
mov
shr
adc
mov
inc
ret
push
cmc
ret
jb
and
dec
dec
cmp
mov
mov
inc
cmp
xchg
ret
mov
cmp
notb
adc
push
xchg
scas
cli
mov
pop
test
adc
cmp
in
ret
movb
addr16
sub
inc
pop
pop
sub
adc
pop
pop
dec
inc
jle
jno
inc
and
mov
jno
mov
aad
cmpl
pushf
js
and
cmp
or
aam
mov
shrl
add
loope
push
scas
in
popa
sbb
and
fidivrs
and
arpl
dec
stos
mov
orb
xor
pop
sub
data16
and
das
lret
xor
mov
ja
ljmp
fnstsw
imul
xor
cmp
jnp
sbb
int
mov
mov
jle
loope
stc
push
mov
mov
and
scas
es
jge
inc
sub
jo
push
mov
pop
sbb
fnsave
push
rolb
dec
icebp
inc
mov
in
mov
mov
add
fldenv
jne
loope
js
sar
adc
mov
cmp
cltd
lods
jg
mov
mov
scas
repnz
lds
dec
pop
xor
jp
xor
sub
push
hlt
mov
jb
push
lea
gs
xor
mov
xchg
or
divl
sub
mov
xor
adc
inc
mov
or
sbb
lahf
fists
pushw
dec
movsb
and
pop
push
push
stos
adc
fsubl
pmullw
cltd
sub
test
xchg
dec
lea
cmp
jmp
pop
sahf
shll
push
mov
mov
pop
mov
mov
xor
pop
cmp
test
testb
aad
pop
cmp
mov
mov
enter
jo
sbbl
lock
push
add
pop
cmpl
fnstsw
lret
fidivl
stos
les
xlat
je
ret
xor
and
negb
sbbl
xchg
sub
mov
push
sbb
push
test
testl
nop
dec
lret
outsb
stos
fistps
out
je
lods
fiadds
dec
test
fidivrl
jnp
test
jns
push
subl
xchg
push
jecxz
scas
add
adc
xchg
or
adc
lds
fidivl
cmpl
test
sbb
fucompp
bound
imul
icebp
cmc
mov
push
std
adc
sbb
int
popf
sti
jecxz
jmp
inc
xchg
add
leave
push
cld
pop
cmpsl
mov
orb
outsb
sahf
jecxz
data16
repnz
test
inc
and
bnd
sub
mov
sub
lcall
fisubrl
push
mov
sub
and
mov
cmpsb
cmp
clc
inc
mov
clc
adc
sub
jae
insb
cli
fucomi
sbb
cmpsl
push
insl
add
add
mov
lret
into
mov
push
repnz
inc
outsb
push
repnz
mov
adc
mov
dec
mov
ret
das
jne
out
mov
sbb
or
xchg
test
fs
dec
mov
pop
fstpl
xchg
fbstp
add
mov
mov
cmpsb
fs
cmpsb
es
and
sub
inc
sbb
loopne
mov
stc
jns
adc
call
insb
out
mov
incl
stos
add
loope
pushf
pusha
push
push
mov
mov
test
test
dec
mov
orb
push
cld
fnstsw
inc
subb
js
int
imul
dec
sbb
fidivl
adc
aas
aam
sbb
pushf
pushl
pop
int
pusha
cmpsl
stos
dec
push
icebp
in
sbb
xor
pop
or
pop
sbb
and
or
add
xchg
push
adc
imul
movsl
mov
lahf
jle
mov
lock
add
xor
and
xor
lods
xor
cli
loope
mov
cmpsl
inc
push
dec
shrl
xor
sahf
mov
andl
lds
scas
fsubp
pop
and
inc
ss
mov
mov
push
adc
sub
inc
cld
fistps
ja
es
cmpsb
cmp
pop
or
pushf
push
cmp
dec
dec
aaa
andl
xor
fs
jg
in
xchg
push
shrb
ljmp
and
cmpsb
mov
push
cmp
lods
clc
stos
out
ja
subl
cmp
hlt
scas
dec
movsb
adc
ljmp
mov
ret
adc
jge
cmpl
mov
mov
adcb
imul
rcl
stos
fwait
shrl
push
xchg
dec
pop
cmp
pop
sbb
add
addr16
mov
mov
nop
call
push
pop
dec
cwtl
sub
shlb
inc
int
popf
clc
sub
fisttps
mov
imul
fsubs
pop
cmpsb
out
cmp
pusha
add
js
sub
lret
test
jmp
and
or
data16
xchg
outsb
pop
mov
mov
pop
xor
in
les
xchg
mov
mov
jne
xchg
cmpsl
fs
out
cli
cs
mov
dec
pop
pusha
cmp
aad
cltd
stos
xor
cld
cmp
inc
mov
into
cmp
fists
shlb
add
sub
push
popa
cmpsl
push
mov
jmp
dec
sub
jb
push
sbb
in
dec
sub
js
out
inc
adc
cmp
les
sbb
jge
mov
add
pop
cmp
mov
xchg
xor
cmpb
cmp
push
mov
stos
scas
and
xchg
popf
mov
push
push
push
add
daa
cmp
jle
ret
rcll
orl
sub
xor
ret
add
addr16
xor
cmp
adc
test
imul
int
mov
sbb
mov
test
dec
and
sub
fdivrs
aam
sub
xchg
jbe
loopne
and
repnz
in
sahf
iret
es
popf
jmp
fildll
dec
fxch
add
into
scas
outsl
cmp
cmp
stos
mov
pop
or
jmp
jnp
fists
or
dec
leave
leave
adc
scas
leave
js
or
cmp
push
mov
cmpsb
mov
mov
xor
iret
outsb
xadd
mov
cmpb
pop
cli
fs
inc
jae
addr16
out
mov
inc
cli
mov
ja
inc
xor
fwait
mov
mov
push
frstor
lret
in
mov
xchg
in
or
add
fs
jmp
enter
mov
xchg
xchg
mov
fadd
sub
inc
adc
push
pusha
sbb
es
mov
pop
arpl
test
cmpsb
pop
and
icebp
inc
mov
mov
pop
mov
push
lea
xchg
rorb
push
mov
inc
movsb
dec
add
and
push
fdivr
std
mov
inc
pushf
cmp
adc
leave
sub
xchg
xchg
jecxz
adc
xchg
rcr
mov
mov
cmp
mov
jb
pop
ror
leave
and
xchg
dec
or
ja
add
imulb
adc
xor
inc
shr
push
lods
subl
sahf
aas
xor
dec
inc
dec
xor
xor
xchg
dec
sbb
fstpl
pop
in
sub
xlat
jecxz
out
dec
clc
pop
outsb
dec
in
add
cmp
sbb
pop
jp
xor
jp
movsl
and
sub
xor
sub
or
adc
adc
aad
lods
sub
daa
jns
xor
push
push
mov
inc
push
jle
subb
movsb
xchg
testb
les
jg
flds
xchg
in
jnp
hlt
pusha
push
jnp
pop
std
inc
xchg
lret
add
fs
jecxz
popf
data16
lea
mov
movsb
mov
sub
push
fistl
rol
mov
nop
fadd
fimuls
aas
movsl
and
pop
jb
mov
xchg
mov
jmp
iret
or
shrb
ror
mov
nopl
rclb
repnz
and
clc
mov
cmp
inc
or
sub
push
sbb
loope
xchg
cld
adc
into
inc
les
sarl
ja
jnp
xor
nop
inc
lea
jb
testb
int3
aaa
push
mov
xor
pop
imul
adc
dec
xor
popf
imul
xor
out
cmpsb
adcl
mov
mov
into
scas
cmpsb
js
cld
mov
push
xchg
pop
mov
dec
cltd
jno
mov
mov
nop
dec
xor
pushf
sub
fsubs
sbb
push
cmp
jns
adc
lret
mov
sbb
push
les
xor
out
add
mov
mov
das
aad
rorl
arpl
jge
xor
jmp
ds
mov
insl
mov
jbe
aaa
sti
pop
xchg
insl
insb
sbb
push
dec
cmp
call
in
jmp
mov
aas
lahf
enter
or
jp
mov
adc
es
mov
js
mov
xor
data16
pop
or
fsubrp
mov
pop
mov
outsl
add
cmpsb
cwtl
add
mov
scas
jno
add
xchg
and
or
fcoml
or
cmp
fadds
jae
loopne
sbb
test
jle
out
test
push
jnp
adc
rorl
out
lods
ret
jecxz
lret
lret
sbb
jb
insl
dec
mov
cmpsb
inc
mov
movsb
jbe
ja
or
add
mov
jg
mov
outsb
loop
sti
out
sub
and
mov
mov
and
shlb
xlat
stos
adc
insb
mov
sub
pop
cmp
sbb
push
shlb
test
scas
push
jp
aas
shlb
shlb
push
mov
inc
adc
jno
push
adc
pushf
inc
jno,pt
test
push
inc
jo
xor
scas
cwtl
gs
outsl
xor
jo
pop
sub
lods
in
dec
sub
dec
ja
into
adc
dec
pop
leave
adc
mov
jecxz
jecxz
in
popl
ja
sub
and
movsb
popa
inc
inc
mov
pop
xor
or
dec
loopne
add
insl
or
push
mov
cmp
sub
sub
outsb
xchg
pop
inc
xchg
mov
enter
adcl
insl
fucomip
push
xchg
in
icebp
shrb
mov
ds
add
out
and
ljmp
push
call
push
hlt
and
mov
call
mov
and
mov
mov
sbb
pushf
jp
out
imul
dec
pop
subb
cld
pop
adc
cmc
inc
mov
cmpsl
loopne
sahf
cmp
push
sar
out
outsb
gs
and
fmul
test
ds
es
mov
les
stos
inc
xchg
push
push
sub
shll
clc
sbb
mov
mov
dec
shlb
sahf
cmp
xchg
int3
mov
push
mov
idivb
mov
and
dec
popl
xchg
push
shrb
fisttps
pop
push
add
jge
sub
fdivrp
xchg
and
xor
bound
jp
stc
push
cltd
cmp
sbb
fldenv
into
neg
pusha
data16
jl
cs
xchg
dec
loop
outsb
nop
int
addb
pop
mov
xchg
and
mov
or
aam
loope
aas
and
mov
push
pushl
mov
pop
fs
sbb
je
push
mov
inc
shrl
repnz
and
in
bound
rolb
outsb
je
xchg
mov
mov
xor
jge
jmp
fisubrl
sub
pop
cli
mov
cmc
sbb
or
adc
into
nop
inc
push
icebp
leave
mov
add
push
popa
dec
aas
mov
nop
xchg
sub
jge
lods
cld
flds
add
and
mov
or
dec
fwait
adc
shrl
xchg
cld
int
mov
jge
cltd
fnstcw
repnz
jge
jo
fwait
iret
dec
fistps
in
mov
lret
push
sbb
data16
jnp
insb
outsl
ret
ror
sbb
inc
ss
shll
popa
pop
adc
sbb
stos
push
lock
fsubrl
mov
test
xor
push
push
cmp
imul
jmp
cmp
fadds
sbb
push
jbe
push
jnp
lds
lea
sbbb
adc
in
sbb
ds
lret
adc
sbb
or
jno
pxor
icebp
loop
dec
ss
xor
mov
sub
ret
xchg
push
das
mov
data16
nop
pop
sub
add
int3
mov
lret
jo
cltd
and
arpl
sbb
fisttpll
push
enter
loopne
iret
int
add
pushl
pop
gs
push
aas
cmp
shlb
out
dec
adc
ret
cmp
mov
inc
fsts
int
and
xor
rcrl
lret
and
pushf
pushf
sti
jp
lea
push
and
std
insb
pop
fsubs
lds
imul
jno
mov
fwait
cmp
xor
mov
add
test
fs
call
sub
movsb
cs
in
rcr
pop
and
pop
loopne
repnz
ret
dec
les
xchg
stc
add
fs
jp
in
push
push
pop
aam
sub
pop
inc
insb
into
inc
shrl
jne,pn
lret
mov
xchg
inc
xchg
xchg
adc
mov
sti
or
jg
sbb
mov
icebp
aas
lods
push
jg
aas
sbb
stc
jp
add
fisttpl
rorl
xchg
icebp
push
mov
not
mov
and
aaa
fwait
or
pop
sbb
push
shlb
icebp
jno
cmp
cmp
adc
mov
nop
decl
sbb
adc
lods
pop
adc
jne
mov
sub
xchg
sub
jl
test
xor
aas
xchg
adcl
addr16
push
inc
in
in
into
mov
mov
mov
mov
xchg
cld
xlat
mov
js
daa
pop
lret
or
insb
push
adc
leave
sub
pop
and
push
insb
aad
in
clc
out
add
mov
daa
jo
fistpll
dec
jle
jg
jp
fistps
inc
pop
dec
cmpsb
gs
outsl
psubusw
cmpsl
xchg
cmp
cmp
gs
dec
inc
xchg
ss
inc
insl
pop
int3
jb
adc
cltd
dec
xchg
roll
subb
xchg
into
jp
dec
lret
push
pop
push
je
shll
ljmp
std
lds
sti
xchg
cmpsb
or
or
aam
fsubrs
sbb
mov
mov
fcmovnbe
in
xchg
push
sub
jns
push
pop
nop
js
adcb
ljmp
rorb
daa
push
mov
sahf
fiaddl
movsb
sbb
sarb
jno
mov
into
sbb
lret
inc
lods
notl
push
add
mov
call
adc
or
cltd
jb
stos
stos
xchg
jge
jnp
jge
mov
push
and
int3
addr16
bound
loopne
sub
iret
js
rolb
call
cmpb
jmp
sbb
inc
and
add
lret
sub
clc
dec
push
ds
mov
xor
orl
es
stc
pop
test
adc
imul
cld
mov
jg
jp
xchg
fistpll
lcall
pop
mov
mov
fsub
and
cmpsl
inc
in
popf
xor
dec
rep
pop
jp
bound
rcr
jno
inc
xor
push
inc
lea
xor
imul
inc
fistl
orl
insb
les
pop
cmp
mov
xor
hlt
aas
lock
cmpsb
rolb
add
push
pop
jo
gs
and
movsl
cld
sbb
inc
js
pushf
aas
test
lret
mov
out
xchg
ss
popf
movsl
or
ret
movsb
shrl
test
adcb
push
iret
add
cmp
inc
xchg
push
pop
divl
cmp
inc
aam
or
push
xchg
es
es
adc
xchg
test
fwait
add
dec
mov
mov
dec
ret
aad
sahf
inc
gs
andb
pop
imulb
outsl
cmp
lds
call
xchg
nop
jo
mov
movsl
or
ss
mov
insl
scas
inc
bound
loope
xchg
addb
mov
loop
or
fldenv
sbb
es
xlat
sub
adc
gs
xchg
pop
dec
popf
jp
aad
sarl
add
popa
cmp
xchg
push
enter
adc
lods
jns
dec
in
inc
call
inc
push
jbe
jno
inc
or
negl
and
sbb
sahf
lock
mov
lds
addl
inc
dec
adc
fcomip
std
xor
cmp
push
fsubl
mov
push
mov
mov
shlb
push
mov
js
add
mov
orl
call
jno
pshufw
les
test
idiv
fistl
lcall
mulps
push
fadds
cmpsl
repnz
sbbb
ret
fs
aad
out
sub
test
es
cmp
ret
push
filds
ffreep
int3
incb
jmp
stos
rorl
int
xlat
mov
ficoms
mov
xchg
push
test
iret
shl
inc
mov
pop
aad
nop
lods
shrl
mov
sbb
ret
and
iret
push
insl
sahf
add
stc
popa
adc
mov
xlat
xchg
mov
xchg
popa
cmp
movsb
or
cmpsb
leave
push
into
sub
sbb
cmpsl
adc
repz
mov
mov
stos
roll
mov
mov
test
rolb
cltd
mov
adc
push
je
adc
jne
xchg
mov
xor
jle
push
or
dec
stc
or
cmp
and
add
dec
daa
pop
inc
and
cmpb
outsb
inc
inc
rolb
and
or
jns
mov
pop
out
mov
subl
mov
rcrl
mov
mov
jle
ljmp
add
inc
dec
daa
int3
lret
pop
dec
cmp
mov
les
lret
cmp
inc
js
cld
mov
clc
or
fwait
lcall
repz
cmc
test
ljmp
jae
mov
ficoms
inc
leave
into
mov
cmp
je
loopne
push
je
enter
std
inc
js
xchg
adc
push
mov
cwtl
ret
jl
jmp
dec
push
jmp
or
sub
notb
test
dec
add
xchg
roll
or
sub
mov
dec
test
jge
mov
xchg
dec
lds
sbb
mov
cltd
push
cmc
ljmp
pushf
inc
sahf
mov
mov
jne
cmc
dec
xchg
movsl
xchg
mov
test
lret
nop
sbb
xor
leave
push
lahf
xor
ficomps
push
mov
mov
mov
jno
cld
cli
dec
aaa
jp
push
cwtl
rcrb
xchg
pop
test
icebp
push
jb
mov
add
test
fdivl
fstpt
xor
fnstsw
addr16
call
push
adc
orl
pop
sub
aaa
push
jno
mov
cmp
stc
dec
mov
loopne
cmpsb
repz
ror
cmp
xor
push
push
and
push
push
mov
inc
out
imul
sub
sub
test
mov
and
ss
sub
ret
dec
fdivrp
std
dec
repz
jnp
jle
sbb
mov
sbb
ficoms
jae
shlb
test
inc
push
cmp
mov
not
pop
inc
pusha
jmp
cmp
mov
outsl
xchg
stos
cmp
sbb
inc
push
mulb
packssdw
stos
and
or
and
ds
dec
hlt
sub
aam
pop
inc
sbb
and
loopne
jl
inc
cs
cltd
pop
int3
cs
rcll
js
iret
mov
cmp
in
or
sbb
push
pop
nop
adc
mov
push
popf
cmp
mov
or
xor
andb
jb
es
xchg
push
cwtl
int
loopne
imul
stos
cltd
lds
sbb
inc
mov
movsb
mov
mov
shl
or
xor
jp
fidivl
nop
mov
scas
jo
jns
inc
lds
cli
mov
out
adc
sub
popf
bound
stc
xchg
mov
mov
daa
xor
add
in
ljmp
loope
lock
push
xchg
daa
dec
jnp
in
dec
jecxz
aad
sbb
push
bound
das
fwait
nop
cmpsl
mov
inc
daa
data16
xchg
dec
ret
pop
fdecstp
ss
test
sbb
cmp
stc
imul
shlb
leave
inc
mov
pop
arpl
mov
xchg
pusha
push
cwtl
andl
mulb
mov
not
and
inc
xchg
scas
or
dec
inc
jl
aad
ds
jmp
mov
div
push
stc
dec
rcl
andb
xchg
in
mov
adc
mov
push
aaa
loopne
call
push
adc
lods
pop
and
fcoml
mov
ror
imul
loop
push
hlt
test
pop
cwtl
and
out
mov
fcmovu
push
pand
dec
add
fwait
adc
add
pop
subl
xor
xchg
cwtl
cli
and
movsl
popf
or
aas
jne
dec
call
repz
loop
lock
nop
sahf
mov
test
enter
push
jp
mov
sub
fbstp
mov
imul
outsb
pop
sbb
imul
loopne
push
imul
pushf
sub
push
pop
lea
inc
stc
out
jb
ficomps
icebp
ret
pop
mov
movl
mov
sub
sbb
sub
in
das
shrb
fstps
or
mov
ret
sub
sub
mov
fs
in
sahf
jnp
outsb
sbb
stos
sub
shrb
push
or
or
push
enter
pop
movsl
push
push
cld
stos
dec
inc
sub
pop
push
mov
daa
push
adc
xchg
mull
push
cli
adc
xor
popa
cmp
xchg
jno
loopne
adc
mov
pop
int
xchg
push
xchg
xchg
into
push
pop
cmp
adc
loopne
pop
dec
jne
scas
test
add
mov
mov
pop
rcrl
ljmp
and
xchg
and
mov
lret
mov
jbe
and
fmuls
and
adc
mov
outsb
imul
fadd
push
mov
or
mov
xor
xchg
pop
out
out
push
push
stc
arpl
mov
sti
stc
filds
lods
xchg
sub
mov
xchg
jbe
outsl
divl
pop
in
enter
pop
sbb
mov
adc
inc
inc
jecxz
or
cs
xchg
push
sbb
leave
in
dec
jnp
hlt
mov
jnp
cmp
lods
ljmp
jns
nop
mov
aas
lret
dec
loop
push
mov
std
jge
scas
in
pop
dec
xor
movsl
adcl
out
mov
inc
sub
xchg
push
loope
dec
mov
jmp
mov
outsb
cltd
movsb
adc
jp
inc
sbb
sbb
add
pop
pop
lret
imul
push
xchg
sub
shrd
imul
lcall
inc
cld
pop
sub
sub
in
aas
xchg
ret
mov
sahf
test
sbb
dec
add
rorb
pop
push
pop
xchg
jmp
mov
pop
test
hlt
mov
imul
or
pop
sahf
or
or
adc
in
lret
push
aaa
add
pop
cmpsl
fmul
mov
jecxz
cmp
cmp
sub
stos
mov
jae
adc
test
cs
sar
outsl
sahf
xchg
xchg
cmc
inc
lret
in
insl
push
sbb
lods
lds
pop
mov
or
insl
inc
rcrl
out
cmp
in
shrb
stos
push
xchg
int
das
das
sbb
mov
mov
int
in
rolb
decl
adc
out
cmp
lock
fiaddl
clc
inc
push
inc
inc
jge
push
cmpsb
iret
jmp
insl
jl
insw
xor
call
sbb
pop
in
pop
hlt
stc
sbb
adc
mov
das
les
shll
mov
fs
dec
sub
fdivrp
jmp
les
nop
xchg
adc
out
insb
inc
pushf
test
lcall
dec
lods
or
test
xor
and
xchg
repnz
out
cmp
mov
loop
jne
push
lcall
and
mov
inc
int3
dec
inc
dec
repnz
and
popf
jp
jno
xor
out
and
ret
es
aas
not
mov
repz
xor
mov
mov
add
xchg
in
movl
sbb
inc
dec
sbb
and
scas
sbb
frstor
inc
inc
mov
mov
aas
dec
mov
es
shl
enter
add
mov
push
pop
lock
aas
enter
and
lahf
mov
fcompl
cwtl
lret
jge
push
and
cwtl
jae
out
pop
pop
cwtl
sbb
in
notb
aad
insl
outsb
mov
xchg
loop
sub
jg
ss
pusha
es
iret
dec
int
jnp
mov
xchg
cmpsb
jno
adc
popa
les
movsb
sub
sub
add
mov
push
rcl
out
rcl
sbb
sbb
xorb
xchg
add
es
mov
xchg
sahf
fwait
insb
sahf
mov
fildl
mov
ds
or
cli
pop
pop
jbe
pop
sub
jnp
repz
out
cmc
test
lret
lret
ljmp
arpl
mov
bound
std
jnp
xchg
pusha
pop
sub
mov
loope
jbe
add
test
xchg
mov
stos
pusha
pop
inc
int
ror
mov
mov
lret
es
sbb
add
xor
cmp
or
push
test
insl
fstpl
jo
rolb
imul
test
cmp
leave
push
loopne
scas
fldenv
adc
orl
xchg
cmp
lods
pusha
fisubs
in
insl
cmpsb
rcrl
jmp
and
jae
into
push
out
push
hlt
inc
clc
inc
js
jns
das
or
push
iret
sahf
mov
sti
mov
fldl
pop
cmp
mov
mov
mov
cmp
fmul
lock
pop
and
xor
into
repnz
test
je
push
mov
sar
mov
aaa
pop
xchg
xlat
jne
cmp
rorl
dec
xchg
push
jo
int3
pop
jnp
mov
pop
push
test
iret
mov
xor
out
mov
sbb
sti
in
add
pop
loop
push
xor
es
sub
dec
test
push
dec
aam
stos
xor
aaa
jno
mov
or
or
loope
cmp
mov
push
jne
jno
in
push
add
jmp
aam
pop
xchg
cmp
pushf
xchg
sbb
adc
jo
rcll
mov
add
add
mov
repz
test
out
sbb
cmp
int
dec
mov
fucomi
in
xchg
pushf
and
sub
sti
or
jne
jg
insb
outsl
mov
add
rcrl
push
stc
and
jnp
mov
fwait
adc
cs
mov
dec
mov
mov
mov
es
pop
mov
and
or
xchg
push
adc
arpl
sbb
arpl
lds
inc
loopne
lds
fidivs
jecxz
inc
cmp
cmpsb
hlt
pusha
icebp
insl
xlat
sar
stc
xlat
cld
xor
test
inc
jb
loop
shl
pop
push
pushl
arpl
stos
stc
test
in
push
pop
sub
xchg
mov
pop
push
sarb
mov
mov
and
mov
jo
and
cli
int3
jb
aaa
cs
dec
nop
add
xor
dec
movsb
fwait
ljmp
filds
cld
fnstcw
mov
out
xchg
stos
fldl
incb
jns
mov
gs
mov
outsl
test
pop
jo
xchg
mov
cs
fildll
push
add
inc
adc
bound
int3
mov
incl
inc
xchg
add
out
andl
push
ret
rorl
xor
scas
sahf
push
sbb
shrb
inc
or
dec
and
shr
test
jge
add
cmpsl
test
int
or
sahf
sub
push
or
and
aad
cmpsl
je
inc
xchg
sub
mov
adc
jo
xchg
push
negb
addr16
outsl
nop
imul
mov
and
ret
imul
bound
push
cmp
js
add
aam
xchg
cmc
push
in
mov
repnz
out
fidivrs
les
push
adc
idivb
adc
cmp
jecxz
xchg
lea
jbe
mov
lahf
or
or
dec
cmpsl
pop
pop
lock
jo
add
add
and
out
pop
sub
push
addr16
clc
aam
ss
dec
pushf
outsb
sub
cli
push
add
push
ljmp
rcrl
jne
stos
addr16
in
and
adcl
mov
call
xchg
movsb
out
and
jns
mov
mov
bound
aas
pop
iret
jp
fsts
loopne
xchg
loope
cmp
iret
push
cmpsb
jnp
fsubrs
aad
pop
scas
mov
ret
popa
or
dec
cmpsb
xor
clc
int
jp
insl
xchg
loope
lds
xor
jb
adc
andl
sbbl
adc
inc
cmp
aam
mov
stos
mov
push
pop
sarl
inc
lods
xor
gs
pop
sahf
fimuls
notb
adc
push
arpl
in
mov
scas
or
in
xlat
es
push
and
in
jle
dec
push
inc
iret
roll
outsl
fimull
and
gs
testl
and
or
cmpsb
xchg
fidivs
divl
std
xchg
sub
cmpsb
add
lcall
xchg
pop
pop
pop
out
leave
cmpsb
mov
mov
push
loop
xchg
xchg
lods
add
and
cmp
cmc
imull
jno
push
ret
xchg
int
cli
or
mov
mov
repz
xchg
shlb
lea
sub
lods
popa
in
cltd
mov
daa
inc
rcrb
shr
mov
in
xchg
imul
xchg
sbb
mov
movsb
xchg
dec
jp,pt
aad
pop
mov
ret
gs
arpl
xor
test
faddl
mov
lods
pushl
cltd
mov
jno
fisubrl
jne
push
jecxz
xor
shll
sub
arpl
outsl
inc
jg
shr
pop
push
and
js
sbb
mov
lds
ret
adc
popa
data16
mov
add
imul
inc
xchg
dec
jno
lahf
pusha
fucom
rcl
fbld
cmc
shrl
aaa
or
out
mov
lods
xor
vpunpcklqdq
pop
jbe
add
sub
loop
daa
fstl
mov
repnz
push
jb
jnp
movsb
bound
das
mov
aas
mov
loope
add
or
cltd
bound
pop
xchg
sarl
mov
sbb
mov
add
icebp
jg
aad
cli
sbb
mov
test
shl
dec
insl
imul
pushf
jae
xchg
lds
and
lret
mov
lds
jbe
push
jnp
nop
pusha
mov
scas
pop
cwtl
cmp
dec
insb
mov
mov
xchg
or
ds
mov
mov
jns
push
sbb
shlb
popa
dec
cmpsb
inc
dec
mov
stos
fldl
test
cmc
jp
pop
lds
mov
cltd
cwtl
mov
adcb
fdivl
in
cmp
sub
int
iret
mov
and
push
jae
mov
ds
sti
in
in
sbb
cld
and
leave
pop
shll
push
in
imul
pop
jp
js
dec
mov
pop
test
rcll
repz
ret
test
insb
and
add
orl
and
icebp
je
fdiv
mov
mov
sbb
mov
aaa
or
cmp
mov
cmpl
add
mov
sbb
push
in
decb
mov
adc
or
popf
icebp
inc
stc
sbbl
pop
fdivrl
enter
fwait
inc
xor
xor
aaa
stos
or
lcall
inc
xor
push
fsubl
push
daa
aaa
jge
mov
ror
daa
jbe
mov
mov
lret
aam
rcl
shrb
push
scas
insl
repnz
in
mov
push
cmovle
push
aas
xor
adc
repnz
push
imul
fwait
dec
ljmp
pop
mov
aas
sub
jno
mov
and
jl
xchg
sub
xlat
and
mov
inc
sti
shlb
leave
inc
xchg
repnz
mov
in
cmp
pop
nop
repnz
sub
sub
inc
adc
inc
or
jb
cmp
repnz
sbb
lret
pop
xchg
movb
ret
mov
dec
mov
mov
decl
mov
jge
mov
mov
cmp
cmpsb
stos
aaa
sahf
mov
arpl
xor
in
lret
sub
repnz
call
mov
loopne
ljmp
cmp
mov
dec
lcall
mov
addr16
cmc
add
lods
cmp
push
pop
lahf
repz
ds
cwtl
or
push
inc
int
fstl
aam
lock
cmp
into
dec
push
aad
and
enter
rcrb
push
jne
dec
mov
xchg
jbe
xor
dec
ljmp
cs
push
ja
into
jno
pop
fldenv
mov
pushl
jecxz
int3
pop
mov
cmp
das
fld1
std
lds
push
lock
jno
inc
ss
xor
push
shlb
pushf
cmovno
lods
xor
and
sti
jno
xchg
sti
loopne
cmp
test
andnps
sbb
aad
xchg
mov
out
xchg
or
lods
and
sahf
arpl
clc
jbe
cli
sbb
sti
add
es
je
cmpsb
fwait
ret
movl
hlt
inc
add
lods
and
out
stos
jg
pushf
push
pop
hlt
insl
mov
aad
mov
xchg
cmp
out
sbbb
adc
loope
adc
outsl
or
lock
outsb
cmc
les
and
stc
or
imul
rcrb
cli
pop
incl
and
pop
jno
push
push
das
inc
dec
mov
dec
mov
mov
popa
addr16
outsb
and
test
xchg
fisttpll
lret
jno
ret
dec
cmp
lcall
xchg
out
cmc
sub
adc
fnstsw
or
leave
cmp
mov
cmpsb
ret
pop
jle
or
mov
arpl
add
insl
jg
out
in
lods
mov
xchg
xchg
les
push
pushf
xor
mov
test
rcll
xchg
push
dec
test
cmp
add
inc
int
push
push
sub
jecxz
push
rorb
xchg
mov
cmp
ffreep
icebp
mov
xchg
add
cmp
push
add
inc
negb
int
mov
dec
push
cmp
jb
sahf
mov
stos
pop
inc
sub
xchg
adc
fnstsw
aam
mov
daa
test
mov
sub
xchg
imul
push
mov
mov
sbb
push
xor
icebp
data16
loope
mov
and
cmc
pop
in
pop
mov
and
xor
aad
outsl
addr16
pop
in
sti
mov
mov
xchg
cld
pop
stos
push
sbb
push
lret
mov
push
mov
and
andb
mov
subl
mov
lods
lcall
insb
aaa
stos
or
aas
or
ljmp
pop
sbb
jecxz
sbb
add
loopne
adc
ja
out
sbb
dec
das
adc
dec
hlt
fsub
mov
and
lea
test
jb
add
inc
das
push
out
xor
inc
adc
xchg
pop
ja
and
ljmp
push
lret
lahf
add
gs
push
and
inc
mov
ds
addl
ja
push
loope
jg
pop
mov
push
cmp
add
xchg
jmp
add
push
lea
dec
inc
dec
push
dec
stos
push
loope
xor
or
imul
mov
xor
push
cmp
popa
pop
pop
add
sbb
mov
imul
mov
stos
adc
and
imul
mov
vptestmw
int
push
fists
lds
test
dec
jnp
jb
daa
inc
and
sti
xchg
orps
in
enter
fisttpl
out
xchg
xchg
inc
xchg
orps
or
in
out
in
cmp
xchg
pop
dec
fisubl
sbb
das
mov
push
mov
in
icebp
mov
adc
ljmp
xchg
fistl
mov
pop
rcrb
dec
cmp
gs
xor
mov
mov
inc
outsl
push
pop
push
xchg
adc
pop
xchg
popa
pop
xor
test
hlt
nop
sti
pop
jle
sahf
inc
push
icebp
scas
call
fisttps
mov
mov
jnp
subl
or
xor
stc
negb
clc
addl
loopne
or
aas
adc
es
add
adcb
pop
movsl
inc
popa
mov
xor
sbb
xchg
dec
pop
pop
push
fsubr
cwtl
xchg
adc
xchg
mov
loop
sar
arpl
ds
push
pop
scas
andl
jae
push
jns
mov
cli
testb
addr16
and
imul
sub
in
jno
or
xor
in
jge
iret
inc
sub
push
sub
mov
xchg
xor
lock
mov
dec
test
loop
pop
test
rclb
and
sub
or
jecxz,pn
lds
out
ret
cli
mov
adc
sub
sub
shll
notb
inc
and
sub
push
mov
fsubrs
scas
jb
dec
ljmp
pusha
fsubl
in
inc
movsl
orb
mov
xchg
mov
stos
das
mov
or
pop
leave
stos
iret
ss
jb
int3
push
movl
int
jbe
stos
es
mov
xchg
popf
cmp
fstpl
outsl
fwait
or
dec
cli
inc
sbb
inc
push
mov
aam
xchg
enter
cmpsb
loopne
mov
mov
int3
jbe
push
mov
subl
push
ss
xor
movsb
dec
lods
imul
cltd
push
jno
sbb
das
sbb
daa
mov
data16
roll
or
jne
shrw
mov
or
adc
int3
add
mov
into
aam
adc
jo
inc
stc
gs
push
dec
add
mov
dec
push
ret
movzbl
xchg
lcall
fwait
loop
jle
jb
scas
inc
into
aad
xlat
or
shr
mov
mov
imul
cld
or
xor
cmp
out
shlb
jmp
pop
pop
xor
sub
testb
cmp
jno
daa
jo
cli
xchg
insb
pop
cmp
cmp
mov
dec
aaa
fstps
sbb
scas
dec
aaa
out
mov
mov
or
xchg
and
mov
int3
dec
jle
adc
mov
jne
movl
out
xor
inc
rorb
cltd
xchg
mov
stos
sub
addr16
pop
inc
mov
scas
cs
jno
dec
xchg
scas
aas
fmuls
fisttpl
and
aam
pusha
mov
xchg
std
mov
out
add
pop
dec
push
scas
jg
ljmp
push
jmp
lahf
cmpsb
loopne
pop
stos
dec
dec
sub
mov
jbe
mov
mov
int
jecxz
testl
jge
ret
mov
inc
dec
inc
loopne
or
repz
push
outsl
jb
dec
lahf
dec
lock
xor
ret
mov
pop
cs
out
pop
dec
div
cmpsl
mov
out
dec
or
mov
xor
and
pop
jle
loop
ds
sbb
and
loope
dec
ficomps
enter
push
mov
xchg
and
and
subb
adc
sub
mov
ds
xchg
sarl
add
dec
cs
outsb
xchg
pop
inc
push
mov
outsl
arpl
call
xchg
xor
xor
loop
mov
inc
movsb
je
stos
pusha
testl
imull
sbb
cmc
js
outsb
xchg
mov
jbe
sbb
jge
aas
cld
sti
rcr
fs
sbb
push
pop
adc
pop
aam
cmpsb
mov
movsb
pop
mov
cmp
cli
cltd
pop
adc
scas
popfw
cmc
addr16
sahf
dec
hlt
inc
out
rcll
and
leave
shll
dec
mov
sbb
adc
paddb
aad
xchg
sbb
in
sti
out
sbb
and
mov
ljmp
or
aas
fwait
jg
mov
int
scas
mov
mov
sub
dec
rcll
cmp
dec
or
adc
stos
xchg
pop
cs
add
mov
pop
sub
push
pop
outsl
inc
and
mov
jge
dec
dec
xchg
cmpsb
mov
fucomp
andl
mov
push
and
sub
mov
jae
add
sub
jbe
jp
stc
scas
icebp
jmp
sbb
inc
int
rcll
mov
sub
sub
bound
ja
cmp
xor
jae
pusha
movsb
fs
cmc
cltd
das
cmovae
int3
adc
fwait
jne
orb
insl
or
xchg
xchg
ret
shl
cs
fdivp
adc
imul
scas
sub
fists
adc
aad
fldt
lock
addr16
push
icebp
call
cmpb
adc
repz
sbbl
mov
adc
aaa
mov
daa
movsb
pop
mov
pop
lret
cmp
add
rorl
in
ror
adc
shrb
inc
mov
addl
dec
je
stos
dec
sbb
sub
in
iret
jnp
fcomip
aaa
push
sahf
jmp
mov
cwtl
push
jl
mov
sub
leave
lret
sub
test
icebp
xchg
sbb
frstor
mov
push
icebp
dec
lods
mov
mov
mov
and
push
mov
mov
rorb
pop
fistpl
test
in
nop
repz
and
cmp
pop
jl
jp
insb
xchg
mov
ret
mov
xchg
pop
test
fsts
loopne
or
stos
icebp
cmp
push
movsl
cmp
push
sub
adc
and
enter
scas
mov
inc
test
inc
in
push
jno
xchg
mov
push
shll
cmpsl
repnz
out
repz
push
insb
mov
mov
mov
adc
cs
sbb
cmp
call
cmp
cltd
inc
popa
push
and
sub
jmp
neg
add
paddq
call
cmp
out
mov
pop
xchg
jp
cmpsl
inc
lcall
pop
dec
subb
clc
sub
add
push
and
test
and
cmpsl
and
sub
add
or
xorb
dec
js
xor
mov
xor
aaa
sub
xchg
stos
push
push
mov
pop
pusha
outsb
stos
inc
inc
inc
push
mov
out
lods
dec
pop
xchg
inc
inc
push
mov
out
adc
jle
ja
jbe
add
and
dec
fwait
push
cmp
jge
hlt
mov
mov
mov
dec
adc
xor
sbb
push
pop
push
sub
stc
xor
dec
or
testb
lret
popa
clc
mov
loopne
or
push
pop
dec
mov
test
outsl
arpl
xchg
mov
test
out
jg
jne
dec
data16
mov
jle
loop
mov
inc
es
cmp
fs
addl
or
repnz
sbb
in
and
cmp
in
inc
lret
or
xchg
pop
mov
sahf
loop
inc
insb
std
xchg
xchg
imul
repnz
pop
popf
mov
inc
std
fld
sbb
mov
jno
mov
loopne
and
sbb
or
sbb
push
pop
cmp
xchg
aad
push
mov
insl
add
fs
addr16
popf
dec
lahf
fists
adc
out
aaa
pusha
push
int
addr16
push
mov
push
sbb
jmp
mov
mov
mov
mov
add
mov
pushf
out
std
sbbl
mov
mov
sub
cmpsb
enter
addr16
lods
ljmp
bound
sub
andb
in
std
or
mov
dec
mov
adc
add
or
leave
or
fbstp
addb
dec
imul
xlat
pop
int
jns
inc
sbb
dec
inc
outsb
nop
lods
fstl
nop
push
sbb
das
movsl
mov
or
pop
aad
cli
inc
shlb
or
xchg
jl
cmp
jp
mov
adc
es
inc
lret
out
pop
mov
test
fnstcw
adc
insl
push
pop
in
cmp
mov
mov
or
inc
or
xchg
dec
fbld
in
cltd
test
shr
adc
fadd
dec
sub
or
dec
ljmp
and
add
xor
fidivl
aad
push
int3
mov
in
ret
xchg
xlat
push
push
iret
dec
ret
sti
mov
aam
stos
mov
ljmp
and
jae
cwtl
addr16
mov
shll
pushl
jp
xor
inc
into
pop
ret
outsl
xchg
pop
mov
pop
xchg
mov
test
rorb
aam
cwtl
xchg
in
data16
aam
lret
xor
jl
dec
insb
cmp
in
xor
push
andb
lahf
std
shlb
jno
gs
icebp
stos
popa
xchg
imul
cmp
sub
movsl
cs
mov
ljmp
push
in
push
dec
mov
push
std
sub
inc
insb
loope
ds
inc
mov
cmpsl
les
xor
pop
fwait
data16
inc
jno
adc
and
adc
lret
sub
jle
sub
sub
dec
lahf
ret
test
sub
icebp
xchg
sub
adc
adc
pop
or
mov
mov
xchg
mov
mov
mov
push
dec
popa
mov
fstps
je
add
sub
ss
or
push
xchg
sub
sub
imul
push
cmp
lret
adc
mov
mov
fdivs
dec
iret
jbe
mov
inc
leave
rorl
aad
push
xchg
jp
fs
jp
leave
nop
xlat
xor
or
push
addr16
clc
dec
stc
and
push
adc
cmp
jge
cmp
stos
sub
imul
xor
shr
pop
mov
out
mov
test
sub
test
fwait
lock
sub
or
fucomip
lret
push
and
and
xor
lcall
and
movsl
push
sbb
push
cmpsl
cmp
sbb
push
enter
lret
sbb
and
sub
idivb
int3
mov
mov
pop
dec
fldl
mov
lret
std
test
mov
jp
jbe
stc
cmovno
or
fs
cmpsl
and
mov
cmpsb
pop
fstp
cmp
adc
das
outsb
pusha
test
or
sub
cld
mov
fucom
pop
adc
inc
jl
mov
mov
adc
inc
adc
jnp
repz
popa
in
push
aaa
mov
mov
cmp
leave
adc
mov
jmp
imul
push
bound
cld
mov
cmp
pop
dec
rcrb
xor
adc
or
lret
and
xchg
sub
push
sbb
jno
mov
or
lods
pop
sub
out
sbb
pop
mov
push
jp
push
std
mov
mov
cmpl
cmpb
push
sub
mov
adc
test
fs
ss
xchg
data16
mov
dec
ja
inc
int3
gs
lahf
jmp
jo
enter
jge
enter
mov
add
data16
mov
xor
add
push
mov
push
and
push
push
sti
shrl
addb
inc
inc
out
jns
int
movsb
jl
sbb
sub
xchg
mov
mul
fwait
bound
test
jo
pop
repnz
jecxz
jmp
inc
pushf
push
pop
lods
lods
sub
or
cltd
je
mov
pop
mov
ja
dec
jo
imul
mov
js
mov
pop
in
leave
push
cli
jle
call
mov
cmova
sub
pop
bound
fsubrs
pop
repnz
push
repz
or
xchg
fwait
adc
test
push
rcll
adc
adc
add
pushf
inc
cmp
imul
out
push
into
gs
std
xchg
mov
xor
pop
inc
ljmp
dec
xchg
inc
lds
mov
nop
fcmovu
sub
inc
sbbl
sub
or
jl
js
scas
jae
xlat
scas
fisubrs
faddl
lret
mov
xchg
and
in
mov
cmpl
jo
or
lcall
xchg
std
out
pop
stc
and
imul
in
cmp
test
mov
out
jns
insl
mov
and
mov
loopne
cli
dec
sub
outsl
fdivl
nop
in
push
fisttps
xor
icebp
sub
add
mov
mov
in
jmp
xor
and
das
sbb
xor
hlt
push
call
iret
xor
in
fs
outsb
inc
cmp
fildll
pop
aad
sahf
std
mov
frstor
xor
add
ds
mov
fs
fadds
adc
push
mov
lahf
mov
pushf
mov
int
movb
xchg
je
popa
je
add
cmp
xor
fmull
pop
mov
aad
jp
inc
in
sub
dec
jne
or
push
add
pop
cltd
pop
lods
std
outsb
ret
fstpl
lock
les
jbe
push
loope
popf
cltd
out
shlb
push
lea
or
xor
fld
jo
loop
popf
incl
and
dec
sar
mov
jg
jnp
dec
scas
push
fcoml
rcll
lahf
jne
divl
mov
insl
xlat
insb
outsl
or
adc
sbb
and
push
cmp
mov
xchg
cmp
or
movsl
jnp
jg
orl
movsl
xchg
and
xchg
and
out
aam
gs
jae
or
ljmp
jecxz
and
daa
xor
jmp
or
lret
nop
push
or
bnd
adc
push
sub
fnstcw
lock
xchg
push
test
out
fdivrl
sub
xor
leave
stos
adcl
ja
mov
push
loopne
xor
push
lods
fnsave
leave
sbb
mov
push
sub
or
adc
bndldx
cwtl
into
cmp
xor
idivb
data16
fldcw
movsl
pop
mov
inc
lea
add
cli
mov
pop
popf
inc
mov
ja
pop
popa
sbb
push
mov
in
leave
imul
dec
xor
mov
jbe
mov
inc
movsb
or
sub
imul
or
in
or
test
cmp
dec
insl
aad
sahf
sbb
outsb
cmpl
fsubl
jl
mov
mov
jmp
arpl
lock
push
sbb
leave
loope
jl
jg
stc
hlt
lods
mov
inc
lahf
adc
push
shlb
stos
xor
addl
fcompl
mov
call
and
shr
jp
out
pop
or
cmp
sbb
jne
xlat
add
bound
mov
int3
in
ret
inc
dec
rcrl
stos
and
fdiv
dec
movsl
jg
enter
aaa
and
jno
fistps
cmp
repnz
sub
loopne
sbb
push
cmp
sahf
and
in
pop
mov
dec
jae
xor
fdivrs
dec
shlb
loop
mov
sub
sti
adc
sbb
dec
mov
clc
fwait
mov
sub
lahf
lcall
mov
inc
popa
mov
imul
pop
out
test
mov
xchg
xor
inc
sbb
ljmp
jnp
mov
jge
std
fdivrp
es
cmc
mov
pop
push
push
push
test
pop
cmp
int3
jb
leave
fcmovnbe
sub
loopne
mov
leave
es
out
cld
mov
mov
add
push
pop
jae
jbe
repnz
repz
aaa
dec
popf
dec
push
sbb
xor
jae
pop
xchg
pop
int3
stc
rol
aam
jg
sahf
or
adc
out
rcr
and
sub
sysret
and
fcoml
jbe
mov
xchg
ss
mov
lea
sub
leave
adc
stos
pop
mov
adcb
xchg
ja
sub
mov
cltd
push
xor
pop
add
jmp
push
hlt
jae
out
fwait
xchg
bnd
addr16
or
xchg
jl
out
sahf
movsl
roll
mov
mov
pop
mov
add
xchg
or
lock
subl
mov
pop
sbb
rcrl
rcr
fidivl
or
ss
mov
mov
dec
lds
pop
aad
aad
outsl
shrb
sbb
jbe
xor
xor
fadds
sub
into
fs
jecxz
dec
pop
lret
movsb
cli
or
into
jne
in
mov
xchg
pop
test
xor
insl
xchg
subl
jns
inc
iret
dec
icebp
mov
frstor
sarb
icebp
add
inc
mov
pop
es
sti
cmpsb
test
ret
cld
xchg
fildll
les
push
sbbb
and
mov
sbb
pop
aas
stc
or
inc
cmp
or
push
dec
jl
ret
pop
clc
in
movsl
aad
frstor
shrl
sub
imul
mov
jg
push
mov
lret
pop
daa
loopne
aam
dec
lret
inc
lds
lret
cmp
lahf
insl
andb
xchg
push
cmpsl
lcall
and
jae
outsl
int
test
mov
pushf
loop
dec
arpl
or
cmp
aam
mov
out
jae
loop
and
mov
in
ss
mov
jnp,pt
dec
push
mov
dec
out
mov
inc
sub
inc
lcall
test
movsb
push
std
adcl
push
fistps
cmpsl
inc
pmovmskb
mov
loope
sahf
mov
sub
xchg
ss
int
ja
jge
ficoms
push
into
cmp
imul
addb
push
ss
sub
ss
dec
data16
mov
jo
xchg
push
add
add
inc
pop
insb
shr
mov
insl
or
ret
clc
xchg
dec
jnp
mov
mov
push
es
sbb
inc
push
iret
insb
mov
divb
frstor
sar
les
lret
xchg
aaa
xor
shll
jno
mov
jnp
test
xchg
popf
das
ret
call
mov
pop
sub
push
or
xchg
jcxz
int3
test
nop
pusha
out
insl
jae
aas
sub
add
or
fs
scas
sbb
push
push
fistpll
dec
push
fldl
pop
shll
jb
and
xor
outsb
divl
add
xchg
push
clc
and
jo
push
mov
sbbl
xchg
daa
cs
adc
xor
mov
dec
stos
aaa
leave
mov
pop
lahf
aam
and
aam
test
or
jmp
lahf
iret
xchg
int3
inc
and
mov
sarb
inc
inc
stos
popa
fwait
hlt
mov
xchg
mov
fwait
data16
mov
and
xlat
fisubs
jmp
in
cmpsb
ljmp
jg
xor
mov
ret
cld
fnsave
xlat
fsubr
mov
ret
sub
in
xor
cwtl
pop
pop
or
ljmp
push
adc
inc
adc
sarl
popf
jno
mov
test
or
xchg
aas
push
xchg
cli
bound
jle
cmp
cmc
jg
and
xor
xchg
jp
add
dec
pop
scas
push
add
insl
mov
xchg
or
add
add
mov
mov
je
cmc
xor
mov
test
shl
pop
enter
push
xchg
popf
adc
mov
lods
mov
xor
les
adc
inc
lods
or
insb
fimuls
xchg
rorb
aaa
aam
mov
lds
test
pop
mov
xor
dec
inc
mov
inc
ds
int
jo
inc
and
mov
jle
popf
pop
sub
adc
pushf
push
xchg
aam
stos
jae
jge
mov
fs
je
add
sarl
fstpt
std
lahf
inc
inc
push
mov
gs
paddq
pop
xor
sbb
call
movsl
dec
push
and
ds
fsubl
movl
pop
idiv
xlat
pop
fisubrl
addr16
add
dec
mov
add
jp
push
pop
jne
rcrb
jg
pusha
and
aam
push
lods
lahf
or
mov
inc
fistl
aaa
push
mov
adc
sqrtps
dec
out
inc
dec
es
fld1
and
out
test
in
or
lods
jns
xor
sub
mov
adc
mov
pop
and
push
call
in
inc
repnz
outsb
sahf
ljmp
adc
mov
inc
mov
stc
xchg
sub
gs
inc
mov
dec
push
sbb
adc
inc
push
rclb
dec
ds
inc
ljmp
divl
sbb
jo
cmp
jge
push
inc
sub
adc
push
xchg
rorl
lcall
cmpsb
sahf
xlat
es
imul
mov
cli
inc
or
mov
fucomi
or
stos
xchg
and
or
test
dec
pop
mov
mov
shl
stos
int
xchg
in
and
nop
inc
fisttpll
inc
fsub
pop
pushf
int3
push
std
xor
sti
gs
dec
adc
out
filds
sbb
xor
or
add
test
cltd
add
jg
repz
sub
ljmp
cltd
lahf
xchg
cmp
ljmp
cmp
loope
js
movsl
cmp
push
lahf
shll
cmp
push
and
lock
lahf
popf
mov
ljmp
sbb
xor
scas
fdivs
into
bound
rcrb
paddsb
ficoml
sub
xchg
gs
outsb
int3
loop
mov
push
mov
in
xchg
inc
push
inc
mov
repz
pop
fldcw
js
mov
jne
sbb
pop
and
jp
adc
xchg
lret
pop
pop
out
aam
cmc
call
inc
dec
mov
xchg
or
push
push
das
in
shl
mov
inc
inc
lock
ljmp
loope
mov
lods
pop
and
addl
xor
sbb
inc
imul
mov
test
call
and
sbb
out
xlat
xchg
mov
lock
inc
xor
cmp
adc
xchg
add
imul
push
inc
stos
popf
and
mov
and
mov
sbb
fidivl
sbb
pop
lcall
out
mov
outsb
icebp
jo
xchg
mov
jmp
mov
xor
sahf
cwtl
repnz
ret
loopne
call
xchg
js
mov
loopne
or
rol
adc
mov
fists
sbb
inc
popa
call
push
orl
inc
dec
aaa
jg
pop
dec
jno
lods
popf
das
jg
inc
iret
cmp
pop
loopne
sbb
lods
notb
or
xchg
add
fdecstp
cmp
inc
add
jne
jnp
mov
inc
pop
int3
sbb
inc
in
repz
cmp
push
and
cmp
dec
jecxz
ja
cld
push
push
mov
scas
ret
je
mov
gs
shll
add
add
sub
popa
xchg
adcl
into
loope
xlat
mov
cmp
jnp
push
inc
in
mov
fwait
or
sub
and
testl
inc
mov
jge
testl
addr16
pop
lods
adc
call
mov
xchg
or
dec
mov
ror
xchg
jg
push
fs
adc
fistpl
aas
cmp
ja
xorl
mov
je
mov
and
sub
mov
mov
adcl
stos
std
aam
pop
sbb
scas
scas
popf
jbe
cmpsb
mov
sti
inc
int3
insb
push
mov
mov
xchg
nop
mov
fwait
pop
mov
dec
cwtl
lret
mov
aas
pop
das
jecxz
pop
cmp
and
test
das
xchg
pop
xchg
enter
repnz
test
mov
lcall
cli
mov
inc
in
sub
rclb
mov
and
adc
add
fstpt
jle
fistps
pop
xchg
or
std
fwait
in
icebp
or
dec
pop
mov
int
pusha
rolb
imul
lea
mov
stos
jae
mov
sub
pop
iret
add
clc
leave
and
mov
loopne
add
mov
lret
sti
test
pop
cmp
outsb
in
inc
pop
in
iret
xor
inc
push
xlat
mov
and
out
aam
cwtl
or
jnp
push
mov
shlb
cmp
mov
idivb
mov
mov
and
and
inc
adc
jnp
mov
iret
in
pop
aad
cs
adc
mov
cmp
mov
mov
repz
inc
pop
test
das
stos
dec
fwait
inc
inc
push
aaa
enter
test
in
sbb
pop
adc
cmc
or
ss
rcll
iret
out
push
out
push
inc
loop
or
sub
data16
enter
test
add
cmp
dec
js
inc
sbb
or
or
pop
rcrl
mov
ret
inc
imull
into
lret
mov
rclb
iret
mov
pop
sar
in
xor
shlb
inc
cwtl
fnsetpm(287
sub
test
cmc
in
daa
xor
sub
xor
fsubl
sbbl
pop
xchg
xchg
push
sub
repz
cmc
push
test
mov
sbb
xlat
pop
xorps
sub
jmp
das
sub
jmp
hlt
and
inc
cmpsl
cmpsb
into
xchg
ficomps
loop
push
adc
jno
notb
popf
dec
add
or
fistl
orl
mov
mov
xchg
out
sub
dec
scas
popa
fsubrl
xor
es
or
push
xor
and
setbe
inc
mov
jns
push
jb
cmp
sbb
scas
outsl
add
fstpl
test
popl
inc
add
out
lret
push
jne
mov
or
dec
sub
fs
adc
jge
mov
fcmovbe
add
shlb
and
jge,pt
imul
inc
lods
mov
ret
xchg
shr
imull
xchg
cmc
mov
inc
int3
add
out
ljmp
xchg
inc
adc
adc
js
sbb
negl
add
clc
nop
sbb
rorl
xor
subl
es
ret
cld
inc
inc
xchg
mov
loopne
or
into
and
popa
pop
xchg
stc
sub
xor
lds
scas
enter
add
fnsave
gs
push
push
in
jecxz
fsubrs
mov
push
cmp
das
pop
enter
mov
xor
fbstp
fldl
mov
add
cmp
in
sub
pop
mov
lret
jae
jns
mov
iret
mov
movsl
andb
fwait
jle
ja
or
sbb
xchg
lahf
jge
pusha
js
cmpl
jp
hlt
adc
mov
ret
lea
inc
mov
push
sub
fistpl
sub
inc
jg
dec
fdivrs
push
in
call
mov
xchg
das
or
lds
xorl
xchg
or
sub
mov
push
pop
lea
mov
stos
fstps
dec
xor
cmpsb
les
push
mov
jecxz
jg
and
ss
imul
clc
loope
xchg
hlt
out
add
fisubs
scas
std
jbe
adc
cltd
test
jns
or
sti
mov
fcmovb
dec
jmp
or
add
xchg
pop
xor
adc
leave
push
adc
fs
lock
add
shl
cwtl
jecxz
repnz
push
inc
push
sarb
mov
int3
ljmp
sti
stos
mov
dec
dec
push
adc
adc
push
and
jae
and
xchg
imul
imul
and
pop
test
inc
pop
lea
iret
xor
push
jnp
cli
mov
out
pop
sbb
and
lds
mov
or
push
xlat
lock
pop
test
jno
or
mov
fwait
arpl
jecxz
sub
call
jne
cld
xor
in
push
ret
push
mov
outsb
icebp
lret
inc
cmpsb
aas
shlb
mov
bound
jbe
out
adc
mov
jnp
pop
cmpb
push
stos
push
das
pop
repnz
ret
jne
jge
repnz
and
stos
divb
and
mov
mov
sbb
sbb
into
jne
mov
pusha
pusha
or
stos
adc
add
dec
jg
adc
aas
addl
data16
xor
ret
cmc
in
pusha
pop
adc
out
ficoms
push
xchg
pop
mov
mov
es
pop
sbb
xor
jmp
dec
add
xchg
ret
inc
fsubrs
lret
roll
cs
inc
add
aam
lahf
sub
or
aam
jmp
lahf
and
cmp
dec
pusha
jae
sahf
jge
push
or
addr16
filds
cmpsl
jne
xor
pop
subb
inc
or
daa
pop
pushf
test
push
ss
xchg
pop
jg
mov
mov
and
push
adc
dec
in
es
dec
fisubs
in
outsl
out
dec
iret
cmp
jg
fistpl
inc
pop
shll
stc
mov
pop
add
jae
xchg
and
sbb
adc
jl,pt
or
adc
inc
scas
xchg
mov
xchg
add
mov
mov
xor
adc
mov
mov
andl
aas
jne
lods
js
pop
push
xor
nop
addr16
sub
mov
sub
les
xor
lahf
test
pop
les
imul
filds
idiv
lret
xlat
into
int
add
xchg
hlt
addr16
and
mov
adc
ficompl
stos
inc
lcall
push
mov
sbb
adc
lods
xlat
out
or
mov
out
testb
daa
int3
filds
iret
sahf
inc
shl
test
dec
xchg
push
les
cmp
repnz
aam
mov
popa
loope
mov
sarl
pop
xorl
aaa
xor
cmpsb
pop
mov
cmp
stos
cmc
push
push
sti
push
mov
sub
sub
iret
in
mov
cwtl
and
inc
loopne
inc
inc
pop
aas
les
or
lret
or
in
inc
in
jne
mov
xlat
aaa
ljmp
test
jp
push
sbb
and
sbb
jmp
insl
or
sarl
fwait
into
test
jg
cmc
or
fbld
hlt
imul
push
xchg
pop
scas
in
cltd
xlat
jno
cmpsb
pop
add
arpl
into
mov
insl
jbe
pop
inc
push
adc
pop
call
xlat
data16
jbe
xchg
pop
xor
idivl
push
pop
jne
mov
adc
jb
stc
sub
cmp
mov
pop
in
addr16
mov
pop
mov
push
lret
fstl
or
xrelease
xchg
sbb
xchg
lods
push
outsb
add
pop
cmp
lds
xor
jne
lcall
lret
subl
push
repz
inc
xchg
lods
int3
add
mov
jge
pop
pop
imul
jl
adc
mov
mov
mov
mov
int3
mov
popf
cmove
mov
mov
inc
shl
cld
into
adc
jne
fstps
pop
mov
cltd
mov
xor
and
or
inc
xchg
call
jne
mov
jae
popa
fisttps
dec
add
adc
adc
lock
rcll
xchg
sbb
xchg
shrb
inc
jbe
fmuls
pop
mov
shll
jb
popa
inc
ficoms
sub
push
loop
jg
bound
jg
xor
push
dec
or
inc
iret
test
sub
mov
sti
loop
inc
cltd
dec
mov
mov
adc
pop
inc
out
pop
loopne
mov
adc
lahf
dec
subl
sbb
and
jge
in
insl
aad
adc
or
xor
or
leave
sbb
xor
jnp
fs
testl
scas
pop
or
popa
dec
arpl
push
mov
and
dec
ljmp
add
dec
dec
fcmovbe
aam
push
lods
jns
sbb
test
add
add
iret
adc
cmp
test
sarb
cld
xor
adc
lret
sbb
or
and
roll
data16
cmp
push
push
clc
cs
xor
mov
loop
test
xlat
sub
mov
mov
and
lds
dec
or
cltd
jb
push
dec
rolb
inc
lcall
mov
test
ret
fninit
xor
mov
sub
lods
mov
es
adc
push
cmp
xlat
scas
inc
xor
btc
pop
shlb
test
cmp
out
cmpsl
adc
mov
sahf
and
lret
cld
mov
add
fisttps
adc
lea
xchg
dec
test
jb
sbb
loope
jmp
pop
and
pop
or
xor
imul
negb
js
mov
cmp
cltd
and
inc
push
rcll
cmc
orl
mov
pop
push
bound
cmp
xor
push
mov
nop
vmread
test
movsl
jo
cmc
push
mov
imul
fldt
aaa
sub
js
in
sbb
jg
leave
ljmp
sub
rolb
xchg
xchg
pop
aaa
or
or
sbb
in
xchg
sbb
and
add
add
movl
or
add
mov
testl
push
aad
mov
leave
inc
std
arpl
jg
out
cwtl
mov
fnstcw
adc
in
mov
leave
mov
xor
leave
mov
mov
adc
vpsubusb
je
mov
inc
dec
lret
push
push
add
jns,pn
or
sbb
pop
xor
cwtl
out
xchg
popf
out
cli
mov
push
mov
or
lret
les
scas
mov
or
je
cmp
jns
fsts
xchg
sar
pop
scas
cli
push
xchg
cmpsb
test
push
jno
push
std
mov
je
mov
cmc
adc
imul
pop
in
ror
mov
rcrl
cmp
mov
in
lret
ljmp
add
or
addb
sbb
and
mov
jo
and
imul
dec
xchg
xor
add
out
in
add
repz
mov
mov
dec
dec
lea
sbb
ds
jno
mov
sbb
cmp
jae
or
xor
push
test
into
aad
adc
test
addl
stos
stos
mov
addl
jno
insl
loopne
sbbb
loope
mov
jecxz
in
mov
rcrb
sub
aas
das
cmp
and
mov
pop
mov
int
sub
loopne
push
mov
shlb
cli
lret
mov
push
aam
jmp
jne
xchg
inc
cmp
lods
lea
mov
xchg
outsb
sub
cmp
add
lahf
mov
lahf
or
push
sub
push
ficompl
insl
add
mov
pop
movq
ret
cmp
mov
mov
ret
cmc
xchg
dec
push
sub
das
mov
jo
pop
cmc
clc
inc
add
es
mov
aad
jae
sbbl
aad
clc
out
jb
lock
mov
test
sahf
sbb
sarl
mov
inc
jo
or
cld
ds
ja
lahf
or
mov
pop
pop
repnz
sub
add
fsts
insl
adc
xchg
jge
mov
add
dec
cmpsb
sbb
mov
lret
cmp
cmp
fstl
lret
rorl
mov
add
jmp
mov
outsb
xchg
js
dec
out
push
ret
popa
std
adc
pushf
add
sbb
xlat
std
fstpl
scas
addr16
push
dec
clc
popa
cmp
jp
fmuls
xchg
cld
pushf
lea
flds
mov
jno
or
nop
pop
scas
xchg
je
adc
inc
and
gs
rorl
pop
jbe
in
jns
inc
in
mov
sub
push
rcrl
sbb
cmp
xor
and
pop
idivl
sbb
mov
xor
cmp
mov
xchg
lret
fs
test
scas
loope
ljmp
xchg
mov
xchg
cmp
setbe
dec
sub
jl
stos
test
lods
mov
sarl
pop
lea
push
mov
stos
xor
cmp
idiv
fists
mov
dec
mov
int3
push
loope
and
mov
sub
and
fsubl
mov
xchg
mov
mov
popa
arpl
pop
inc
pop
test
sub
fcomi
xchg
xchg
mov
insl
xchg
sti
mov
lcall
cli
push
pop
mov
xchg
es
add
sbb
subl
das
orl
in
roll
ja
dec
cs
test
inc
mov
xchg
test
adc
inc
or
enter
sbb
ret
aaa
js
sbb
push
xor
jg
xchg
outsl
out
dec
pop
dec
pop
shl
cmpsl
and
pushf
inc
xchg
cld
cmp
mov
mov
lea
or
nop
mov
mov
adc
data16
xchg
cld
test
stc
jne
call
inc
jo
mov
adc
cs
jg
and
in
stos
roll
mov
iret
dec
hlt
pop
stos
shrl
arpl
jmp
jle
clc
sti
repz
push
aas
arpl
lret
sahf
push
fs
fsubrs
test
mov
pop
movsl
pop
push
outsb
notb
lods
das
dec
hlt
jecxz
mov
mov
adc
incl
jnp
pop
or
stos
test
in
or
pop
push
mov
nop
ret
sub
jmp
add
mov
ret
xor
rcr
add
lea
nopl
push
jg
ficoml
mov
and
xchg
es
jl
aaa
addr16
jae
xor
push
out
shlb
add
cs
lret
dec
sahf
lret
cmp
pop
addl
xor
push
pop
cltd
or
adc
test
or
sahf
imull
adc
outsb
shll
jp
je
in
jb
scas
pop
and
mov
xchg
adc
stc
xchg
xchg
out
lea
int
setb
popa
add
mov
pusha
and
sub
xchg
fldl
lods
push
shll
jns
cltd
cwtl
xchg
mov
ret
xchg
pusha
std
cli
sti
jmp
push
insb
int3
movsl
sbb
push
xor
push
fstp
adc
int
fdivs
or
popa
xchg
sub
mov
mov
cmpsb
cmpsb
push
dec
jge
jb
dec
inc
pop
jecxz
dec
loop
jae
popf
scas
mov
mov
adc
out
mov
mov
cmpsl
push
mov
pop
fstps
or
aaa
sbb
test
cs
daa
mov
jl
lods
push
fisttps
nop
mov
push
xor
inc
cmp
ss
test
pop
jl
in
lret
push
popf
xchg
pop
xor
lret
sahf
popa
add
push
adc
jno
and
inc
mov
dec
xchg
or
dec
stos
nop
dec
jo
std
dec
jno
popa
sbb
sbb
xchg
push
adc
std
xor
mov
pop
xchg
cmp
shlb
push
cmp
std
sub
dec
movsl
lods
ret
icebp
les
push
jae
adc
loop
and
mov
outsb
pop
insb
sbb
push
int
sbb
popa
in
pop
ret
aaa
jmp
enter
sbb
lret
mov
dec
or
in
cmp
mov
inc
flds
ret
push
pop
pushf
popa
add
das
fnstenv
fmull
pop
lock
stc
and
pop
fnsetpm(287
inc
fisttpll
cmp
pop
jp
scas
xor
les
lcall
dec
loopne
xchg
sarb
xchg
cmp
mov
and
popa
cli
mov
mov
loopne
jecxz
shl
and
cld
cmp
cmp
add
outsb
sub
xchg
rol
je
std
inc
cwtl
scas
fimuls
inc
jno
jb
fldcw
push
xchg
add
jmp
mov
cmp
adc
sahf
xor
xchg
push
xlat
sbb
int
push
popa
jns
lea
xchg
jl
lds
enter
fisttps
mov
push
push
sahf
jmp
lock
mov
data16
repz
sbb
imulb
jp
sbb
andl
sbb
in
test
xor
leave
push
adc
shrb
xlat
mov
cmpl
and
sbb
in
inc
andb
ss
jb
std
inc
testb
cwtl
mov
cmp
push
mov
cmpsl
push
xchg
jmp
shrl
pop
pop
adcl
aas
ret
data16
enter
inc
out
and
pop
testl
scas
cs
pop
and
lret
push
das
xor
dec
jae
pop
enter
fs
add
cmp
sub
or
ss
fmulp
add
pop
adcb
xchg
in
test
inc
mov
jp
push
pushf
mov
ljmp
inc
popa
lcall
sarb
add
dec
inc
or
pop
xor
pop
adc
arpl
sbb
cmp
sub
cwtl
popa
dec
sti
sub
loop
mov
ror
xchg
cld
xlat
push
sbb
add
jne
xor
rcrl
pop
dec
mov
and
pop
sti
and
int
and
mov
pushl
xchg
fldcw
fs
or
ljmp
inc
mov
cld
loop
out
sub
sub
insl
call
inc
sub
xchg
jne
idivl
xor
add
xor
ret
mov
mov
cmp
cmpsb
cmp
mov
movaps
and
inc
mov
cmc
or
cli
adc
adc
lret
or
adc
mul
sahf
ja
lods
mov
fdivrp
inc
icebp
xlat
mov
push
mov
int3
add
gs
jle
adc
mov
mov
push
aam
addr16
cld
les
les
jo
mov
out
fidivs
xchg
jmp
loop
je
xchg
dec
jmp
or
negb
in
into
subb
loope
int
pop
outsb
cmp
mov
sub
jae
mov
pop
addr16
lret
pop
movups
in
mov
and
fdivrs
jge
imul
fistpl
test
pop
push
roll
shll
push
shll
ljmp
pop
lods
sbb
repnz
mov
cmp
lahf
outsl
loopne
push
xor
mov
hlt
push
shlb
mov
fs
jmp
fadds
push
adc
xchg
push
sub
jp
popl
xchg
xchg
pop
mov
loop
adc
jno
dec
adc
sbb
imul
fadd
and
cmc
faddl
push
pop
dec
adcb
inc
pop
sbb
jnp
xor
movl
sub
pop
add
push
dec
mov
lock
mov
enter
push
adcb
lock
popa
mov
xor
inc
inc
adc
inc
aaa
out
mov
push
sarl
rclb
bound
cmc
repz
pop
lea
xor
fadds
and
ds
dec
outsl
adcl
dec
pop
adcl
add
sarl
add
mov
cwtl
or
idivl
dec
stos
es
test
test
mov
fstpl
xchg
or
dec
jb
or
insb
or
xor
scas
shr
dec
mov
movsl
sahf
inc
xor
jno
sub
jno
cmp
jecxz
sub
in
xchg
es
test
inc
sub
call
jb
jle
mov
and
pusha
lods
dec
or
aam
stc
lret
aam
jns
jbe
push
insb
xchg
in
xchg
cmpsl
mov
inc
movsl
cmp
ja
push
outsl
dec
fsubrl
fisubrl
sbbb
in
pop
cli
mov
test
popa
int
inc
sub
jg
pop
push
loop
stos
add
jno
dec
imul
xor
fwait
sbb
addr16
cmp
jb
or
mov
inc
mov
insl
sub
loopne
je
adc
or
jg
shrb
ljmp
fisttpll
adc
test
xchg
mov
pop
sbb
insb
dec
dec
andl
cmpsb
sub
push
fwait
adc
cmp
mov
sub
sti
ret
jno
scas
cmp
mov
cmp
andl
jle
aaa
sbb
je
pop
mov
negb
or
jae
adc
sarl
mov
mov
jle
notl
cwtl
popw
jns
hlt
jne
data16
hlt
mov
sub
push
andb
jl
pusha
mov
mov
xlat
sub
sub
mov
pusha
mov
mov
bound
outsl
push
dec
cwtl
cmp
xchg
xor
outsl
outsl
in
popf
jnp
sbb
add
pop
cmp
mov
out
daa
mov
ret
fimull
lock
push
dec
mov
fcomps
cmc
sbb
dec
jle,pn
cs
xchg
xor
jns
bound
lods
cs
jecxz
ret
es
jle
mov
ds
lcall
shrl
fwait
out
lea
cmp
and
fnsave
fdivrl
call
jnp
xchg
dec
pusha
pop
icebp
test
repnz
and
mov
nop
daa
lods
dec
je
into
sbb
push
mov
hlt
mov
sbb
push
mov
xchg
outsl
mov
jbe
mov
and
or
and
lret
lcall
aas
or
lea
pop
xchg
jns
xchg
fisubrs
mov
push
repnz
jne
testl
add
lret
out
add
cwtl
mov
stos
adc
js
fsubrp
mov
mov
xchg
mov
rclb
insb
stos
add
xchg
jg
std
cmp
movb
sbb
or
cmpsb
or
adc
fs
lock
sbb
add
inc
pop
jns
out
cmc
xchg
adc
dec
mov
cmpl
cmp
inc
or
pop
adc
xor
sub
mov
dec
decb
lock
or
lahf
push
les
scas
cmp
dec
enter
pop
out
cmp
out
je
movups
leave
pop
jo
out
pop
popf
xor
jb
and
inc
mov
push
repnz
cmpsb
sub
add
int
push
dec
sbb
ss
imul
sub
and
adc
adc
adc
fsubl
mov
stc
pop
or
lds
fcoms
cmpsl
jl
int3
mov
out
out
leave
fs
push
push
rep
arpl
xor
xor
hlt
xchg
in
dec
lret
pop
xchg
add
mov
mov
and
out
pop
pushf
lret
mov
addr16
jle
outsb
int
hlt
xchg
movsb
pop
or
mov
push
mov
dec
add
jmp
loope
xchg
hlt
jl
lret
adc
pop
frstor
ret
inc
inc
popf
es
adc
pop
sti
jle
sbb
inc
push
in
into
fcomps
stos
mov
adc
loop
or
ja
or
mov
mov
jmp
js
popa
mov
mov
sbb
outsb
call
fs
push
js
sbb
sub
ds
hlt
sub
sar
test
sub
jno
stos
inc
sub
test
and
cmp
dec
cmpsl
sub
stos
jecxz
shr
jge
jnp
cs
xchg
or
test
and
jnp
in
jno
sbb
cmp
dec
sbb
push
jno
arpl
mov
mov
clc
fsubrl
outsl
mov
idiv
mov
ds
flds
pop
jb
push
mov
push
inc
sub
adc
push
mov
xor
testl
fwait
mov
in
mov
jns
loope
jae
sub
sbb
mov
fs
jmp
jl
pushf
adc
mov
lds
adc
dec
nop
aas
imul
js
mov
push
lods
jp
out
pushf
add
mov
test
cmp
add
xchg
ret
or
imul
push
xchg
add
jo
pushf
mov
fdivr
pop
mov
out
xor
hlt
mov
nop
cmp
repnz
mov
scas
cmp
jae
fistl
pop
icebp
push
xor
jo
in
scas
xchg
aam
imull
mov
arpl
and
lds
orl
mov
add
xchg
jmp
xchg
test
mov
inc
in
mov
fwait
mov
jo
inc
popa
lcall
inc
xor
cmp
xor
pushf
ret
imul
cwtl
loope
push
push
scas
mov
lock
mov
inc
iret
jle
les
xchg
push
inc
xor
fbstp
aaa
lds
cltd
and
pop
mov
mov
fbld
repz
cmpsb
pop
xchg
cwtl
push
jecxz
sarb
add
mov
xor
push
aaa
pop
int
mov
jmp
shr
mov
cmp
xchg
fiaddl
les
arpl
mov
arpl
shlb
inc
int3
xor
dec
adc
fistpll
repz
mov
and
jl
nop
mov
mov
xchg
xchg
out
aas
imul
je
cli
jecxz
mov
jae
push
xchg
push
cmc
cld
dec
xlat
test
loope
loop
hlt
lock
test
mov
mov
add
out
xchg
add
sbbb
rcr
xor
mov
add
cmp
pop
lret
cli
push
adc
xchg
lahf
or
lret
cmp
fidivrs
bound
push
in
leave
stos
loop
roll
ret
xchg
xor
fiaddl
xchg
imul
xchg
inc
dec
scas
ja
push
add
xchg
pop
mov
lea
je
jmp
mov
xchg
in
outsb
insb
or
shufps
test
xor
xchg
mov
dec
gs
dec
or
in
push
fmuls
push
jno
hlt
cmp
adc
add
xlat
sbb
adc
jmp
inc
push
orps
ja
jns
add
movsl
roll
cmpb
in
xor
pop
xor
adc
les
bound
pusha
mov
mov
in
rcrb
test
lods
repz
push
pusha
sbb
or
mov
adc
andl
daa
jg
adc
test
dec
dec
ja
cmp
pushf
add
movb
aaa
sbb
jp
and
adc
stos
mov
inc
cld
or
std
mov
mov
pop
mov
fadds
popa
xchg
cld
mov
or
pop
fnstenv
push
arpl
lcall
int3
scas
ret
dec
into
fldt
push
testb
dec
mov
lods
pop
test
mov
jg
mov
shll
fnstenv
int3
jg
or
cmp
repnz
je
xchg
das
mov
and
lds
mov
fistpll
fmuls
mov
popa
adc
fldt
stos
int3
inc
je
dec
xchg
mov
cmp
lret
mov
dec
sbb
lods
enter
shl
stos
mov
fisubl
arpl
and
hlt
in
dec
xor
pop
leave
iret
push
pushf
adc
loopne
call
jnp
int3
andb
popa
and
adc
sbb
pop
stos
jo
adc
dec
sbb
in
xchg
dec
dec
or
test
enter
lea
ds
movsl
fcos
jp
mov
add
aam
mov
jnp
push
push
or
imul
ret
fincstp
subb
aam
mov
je
inc
repz
idiv
ljmp
popa
lods
shlb
xor
outsb
aaa
icebp
push
push
inc
lret
mov
je
stos
cli
cmpsl
movsl
aam
cld
add
or
and
mov
push
imul
xor
mov
xor
xor
rcll
xchg
lcall
jmp
popf
sahf
gs
fs
sub
les
aas
pushf
outsb
jno
jb
sbb
inc
int
call
js
lds
cs
dec
cmpb
inc
lea
lods
pop
int
lret
sub
leave
mov
sahf
in
pop
lods
out
or
ret
fwait
out
dec
or
ret
xor
lea
fst
in
arpl
xchg
and
daa
shrl
dec
cmpl
pop
shl
cltd
je
les
arpl
cmp
mov
xor
xchg
jg
jge
fwait
popa
xchg
lock
mov
clc
pop
popf
cmpsb
repz
adc
pusha
push
dec
cmpsl
dec
cmp
outsl
mov
jbe
insb
mov
imul
ret
mov
ret
orl
sub
mov
scas
mov
addb
xchg
out
sub
xchg
in
mov
addb
cmp
dec
xchg
pushf
es
mov
ret
xchg
sarb
int3
sahf
push
mov
sub
ljmp
in
cmp
mov
adc
sub
dec
cmp
stc
sub
ss
ja
or
jno
add
and
xchg
imul
dec
push
std
lret
add
pop
sahf
mov
and
mov
stos
je
lcall
stos
dec
loope
sbb
dec
insb
xor
cld
es
xchg
mov
sub
push
in
arpl
push
and
roll
enter
lds
jp
jae
lea
out
fidivl
clc
mov
cmp
ret
cmp
mov
inc
jmp
es
arpl
lret
jmp
hlt
out
test
mov
shrl
leave
mov
add
filds
xor
push
rolb
ss
push
movsb
mov
pop
aam
fisttpl
inc
or
lret
pop
pop
xchg
xor
xor
xchg
jmp
mov
imul
inc
jno
sbb
popf
xchg
stos
mov
jle
push
addb
and
cmp
imul
cmc
loopne
mov
fs
addb
bound
lret
ds
lahf
sub
mov
sub
repz
mov
mov
push
in
lds
loopne
mov
cmp
bound
ss
bound
pop
jno,pt
in
ds
xchg
dec
std
loop
repnz
out
movlps
out
fdivl
nop
and
xchg
or
xchg
inc
pop
push
mov
xchg
sub
mov
jo
ror
lock
pop
aaa
gs
outsb
fsubl
dec
xchg
shl
iret
lret
dec
pop
imul
in
int3
sub
add
aad
add
pop
xor
and
fs
in
jb
into
je
fcmovnu
scas
out
fwait
jo
add
and
push
xchg
or
fsts
cmp
jo
in
je
mov
sub
pop
loop
xorps
ret
cmp
and
and
dec
mov
inc
pop
sub
sbb
ret
xorl
or
mov
add
les
inc
xchg
xor
adc
out
test
fisubl
rol
cwtl
jo
ret
pop
jbe
adc
mov
orb
scas
testb
mull
pop
xchg
jp
push
imul
mov
cs
inc
outsl
add
jbe,pt
mov
sti
mov
add
in
cmc
jl
gs
test
mov
cmpsb
hlt
shlb
mov
cmp
mov
leave
shr
aaa
es
pop
in
enter
mov
gs
mov
cmp
push
cmp
xchg
mov
mov
push
pinsrw
dec
loope
fwait
cmp
push
push
pop
cwtl
add
cmc
jle
dec
lret
mov
test
jnp
push
arpl
out
test
xchg
jb
xor
mov
lret
pop
and
mov
mov
mov
arpl
sbb
sahf
cmp
cmp
cltd
push
cmp
jbe
imul
mov
xchg
shll
neg
jnp
dec
add
js
and
adc
cmc
sbb
hlt
dec
and
jmp
xchg
jg
aad
mov
mov
pop
leave
xchg
pop
xchg
xorb
outsb
insb
mov
cmp
push
xor
andb
iret
out
sbb
fmull
in
inc
mov
stos
cs
int3
push
lods
jge
pop
mov
sbb
cmp
sbb
ja
imul
or
arpl
fsubrs
movsb
and
pop
pop
or
js
into
push
mov
lods
adc
or
adc
adc
adc
add
movl
or
fildll
sarb
pop
sti
leave
cmp
adc
sahf
push
pop
fsubrl
push
es
xchg
inc
jmp
fwait
jns
das
add
jecxz
mov
xor
icebp
fidivrs
aaa
and
pop
lds
cmp
pop
movsb
dec
dec
mov
jb
or
dec
push
hlt
gs
pop
pop
add
adc
out
jle
popf
pop
xor
cmp
cmp
js
fucomi
mov
pop
xchg
jno
inc
inc
lea
sbb
test
out
clc
dec
aad
mov
in
std
call
scas
xchg
xor
out
jnp
inc
hlt
aad
inc
mov
in
loope
push
outsb
cmc
rclb
nop
jae
hlt
xor
sbb
dec
inc
inc
jmp
int3
adc
or
icebp
adc
dec
es
jmp
sub
jnp
sbb
shlb
and
test
int3
xchg
scas
jge
mov
inc
insb
test
jp
jmp
cmp
dec
push
leave
inc
push
les
mov
fwait
add
lock
int
push
jo
pop
inc
mov
jbe
mov
sahf
jle
mov
es
adc
ret
hlt
fst
adc
lea
push
call
jne
adc
mov
sbb
lahf
sbb
mulb
inc
sarl
and
filds
in
cmp
pop
lods
cmp
and
mov
sti
clc
dec
lock
imul
push
push
cmp
or
mov
je
xor
adc
mov
cltd
dec
sub
pop
sub
jmp
rcll
in
push
in
sbb
mov
sub
or
adc
ds
mov
jecxz
dec
and
insb
outsb
lds
jmp
dec
sbb
js
sub
jns
or
push
pusha
in
ret
bound
ja
push
inc
cmp
xorl
and
cs
js
pushf
xchg
in
xor
or
mov
sar
roll
cmp
in
mov
xor
mov
adc
test
pop
or
mov
fimuls
xor
jmp
ret
into
testb
xchg
and
xor
push
and
sahf
cmp
iret
sarl
leave
jg
shll
inc
scas
ret
pop
daa
pop
xchg
pop
out
pushf
aas
out
leave
imul
fcmovnu
out
leave
int3
fistl
wbinvd
xchg
push
sbb
hlt
push
jge
jae
dec
movsl
ja
clc
mov
stos
adc
mov
mov
inc
push
bound
shll
push
cmp
sbb
repnz
jb
mov
clc
pop
xor
jecxz
into
dec
add
hlt
leave
outsb
inc
popf
pusha
out
adc
and
lcall
pop
jb
inc
les
cmp
inc
dec
cld
dec
pop
js
mov
hlt
mov
repnz
pushf
sarb
adc
je
inc
repz
dec
int3
jecxz
jmp
aam
aam
imul
fstp
and
in
fdivrl
sub
sub
ss
jae
adc
cs
sub
sti
dec
fldt
mov
xchg
jl
jg
add
mov
dec
inc
nop
add
mov
jmp
mov
ljmp
ss
mov
fstl
xor
fnstsw
mov
mov
dec
xchg
in
in
inc
push
sub
sbb
iret
xchg
sub
sti
mov
mov
sbb
xor
xchg
jecxz
aaa
fldenv
roll
stc
dec
js
inc
lea
or
mov
fimuls
mov
jmp
adc
outsl
jns
mov
lret
in
ss
idivb
dec
test
es
mov
out
je
xchg
scas
sti
jge
fbstp
outsl
cmpsl
daa
xchg
push
lea
or
inc
in
mov
sbb
movsl
scas
data16
lods
loope
push
cmp
insl
jae
ss
pusha
shl
xchg
into
enter
or
fstps
inc
add
or
mov
or
ss
push
mov
xchg
xor
or
out
out
enter
repz
data16
mov
push
rcll
icebp
fstl
test
test
push
addr16
add
pop
mov
test
lock
imul
lods
dec
pop
inc
adc
imul
nop
and
xchg
scas
iret
stc
div
push
mov
sub
sub
pop
fwait
vcvttpd2dqx
mov
cmp
xchg
arpl
pop
mov
dec
mov
lea
repnz
add
stos
add
push
cmpsl
fcomps
fsts
and
call
stos
jo
pop
push
push
daa
add
or
movsl
mov
jb
sub
sbb
lret
dec
loopne
sub
sarb
js
jmp
shll
xor
xabort
das
adc
pop
pop
in
int
mov
jne
rcrl
inc
mov
inc
scas
mov
sub
outsl
enter
not
insl
rorl
cmpsl
jmp
test
mov
ljmp
mov
jb
idivl
lock
sub
or
in
ja
insb
jns
sub
repnz
sti
or
stos
mov
dec
pop
dec
sbb
dec
into
cltd
inc
arpl
stc
aad
fucomp
add
in
cmp
cs
adc
arpl
push
mov
not
add
adc
rol
arpl
adc
and
push
jbe
into
enter
push
dec
jns
xor
aam
bound
sbb
clc
scas
andl
add
icebp
push
mov
push
loope
outsb
pop
mov
out
rolb
pop
icebp
mov
push
lahf
jle
addr16
adc
rclb
cmp
pushl
push
iret
cmpsl
test
je
dec
rorb
hlt
push
pusha
sub
mov
lea
popa
inc
sub
and
xchg
test
xor
lret
adc
add
jae
js
inc
ljmp
push
ljmp
movsb
jp
adc
ret
xchg
imull
fs
inc
ret
clc
arpl
rorb
stos
cli
out
mov
enter
dec
fwait
leave
aas
adc
push
mov
cmp
add
pop
les
or
in
lret
adc
xor
notl
sub
loopne
mov
mov
jae
fdivrl
xchg
mov
and
dec
and
lds
sahf
mov
xor
cmp
cmp
cmp
aaa
test
sub
pop
movsl
hlt
out
fmulp
mov
int
popf
cltd
add
popf
inc
sbb
pop
incb
and
adc
fnsave
aam
push
lahf
cltd
mov
test
rolb
xor
pop
sub
jecxz
lds
enter
and
sbb
icebp
data16
loop
shrb
cmp
clc
xchg
repz
test
aad
subb
jle
push
sub
andl
inc
test
mov
out
push
adcl
clflush
jnp
sbb
sbb
xchg
add
dec
andl
in
jle
or
lea
sub
sbb
pop
int3
fld
mov
adc
lret
cmpsb
jns
mov
out
and
incb
push
pop
sbb
in
sub
mov
pop
fmuls
fidivrs
and
sbb
idivb
push
daa
inc
and
aas
or
mov
lcall
faddp
mov
scas
and
scas
jle
mov
push
orb
push
lahf
xor
cmpb
rorl
push
icebp
sbb
jge
or
dec
sub
daa
pop
aam
int
pop
fcmovnb
jns
mov
repnz
jl
mov
lock
inc
pop
mov
ret
icebp
stc
sub
mov
iret
iret
adc
adc
out
mov
xor
test
into
loope
fucomp
loopne
xor
inc
es
adc
xchg
sbb
mov
sbb
sbbb
dec
xchg
push
stos
mov
or
mov
movsl
andl
mov
jbe
popf
scas
in
push
cli
in
pop
inc
pop
xchg
mov
mov
jo
loope
push
test
push
xchg
lods
stos
pushf
xor
in
rol
rol
arpl
test
push
or
mov
adc
test
outsl
fwait
dec
mov
in
xorl
xchg
cltd
push
test
movsl
mov
xor
repz
fcomps
pop
push
loopne
mov
add
push
aam
dec
dec
pop
addb
stos
stos
lret
fisttpl
clc
push
push
jle
std
pop
pop
pop
ficoml
cs
test
dec
sbb
xchg
lret
sbb
mov
mull
ret
andb
inc
ret
fwait
dec
adc
adc
jns
mov
cmpsl
aad
outsb
and
scas
outsb
shrb
lds
jo
sbb
push
sbb
mov
es
jb
push
mov
mov
xchg
jecxz
ja
fiaddl
mov
and
rcll
push
jle
fdivp
je
insl
sbb
rclb
cwtl
popa
fcoms
inc
mov
xor
int
jge
pop
fstpt
int
inc
mov
cmp
push
xchg
add
ss
iret
adc
fcomps
mov
sub
push
lret
aas
test
add
add
js
adc
dec
xchg
sub
mov
ss
xor
mov
mov
and
addr16
ret
imul
mov
mov
stos
ss
adc
icebp
jbe
mov
repnz
test
lea
mov
push
jge
add
add
outsb
mov
mov
add
add
sbb
sahf
mov
jno
jo
cmpsl
ss
cld
sub
out
mov
ret
ret
mov
adc
scas
inc
in
push
pop
int3
pop
push
pop
pop
or
mov
pushf
icebp
sbb
jl
xchg
and
fwait
fs
ljmp
adc
fistps
mov
hlt
es
outsl
in
mov
xor
outsl
mov
xor
orb
xchg
adc
add
fucomp
sahf
push
in
or
std
stos
orl
mov
adc
mov
insl
in
mov
fadds
push
xchg
cmp
test
or
iret
hlt
push
jl
push
jle
mov
xchg
adc
mov
fidivrl
pop
loop
push
inc
cmc
popa
inc
and
jne
xchg
jb
jnp
cmc
cmp
adc
fs
xor
outsb
hlt
jmp
adc
cmp
push
gs
jo
mov
xor
enter
test
adc
jnp
inc
pop
sub
xor
mov
test
jl
pop
add
inc
xchg
dec
sahf
cmc
fistps
xor
ret
mov
cmpsb
pop
stos
ljmp
test
xor
shr
fisubrs
mov
dec
dec
xchg
mov
push
fdivrl
out
lods
sbb
mov
add
jl
aaa
pop
jp
in
cmp
cmc
ret
xor
andl
jns
or
scas
adc
or
dec
xchg
push
imul
das
xlat
fimull
sub
out
imul
mov
push
dec
aad
fisttpll
aam
jno
int3
fistl
mov
jae
std
xor
daa
mov
xor
and
lcall
js
pop
or
sub
adc
jecxz
pop
push
mov
scas
sub
mov
or
dec
orb
ljmp
gs
data16
jl
cwtl
sarb
sbb
enter
jbe
in
or
lret
mov
push
and
fistpll
mov
out
loopne
sub
shrl
pop
in
out
aas
dec
cmc
hlt
sti
push
sbb
push
add
mov
add
arpl
leave
lods
out
mov
ljmp
pop
and
or
scas
and
repz
mov
mov
mov
xor
cmp
jae
mov
mov
into
test
xchg
add
pusha
xor
sub
call
jnp
mov
pop
leave
imul
and
add
xchg
fdivr
xor
dec
hlt
lds
mov
aad
jg
inc
jg
js
pop
push
sub
out
mov
push
inc
fnstsw
adc
loop
sub
mov
pop
cmp
cmp
mov
pop
jp
pop
sbb
ret
cmp
sub
in
dec
push
js
jne
cwtl
pop
test
leave
nop
mov
iret
test
and
push
or
test
adc
out
rcr
stc
sbb
adc
adc
rorb
xorl
in
cwtl
lds
stos
sub
jae
sub
push
ds
mov
pop
test
jg
mov
dec
or
gs
dec
sub
popa
lahf
cmp
iret
rol
movsb
fidivl
adc
notl
or
push
data16
jo
dec
inc
sarl
loop
in
sub
jo
cmp
std
adc
mov
in
mov
rcll
jp
jmp
cmp
xlat
push
fs
mov
inc
push
xchg
cwtl
iret
inc
jo
lock
cmp
test
push
nop
out
mov
add
xor
rcrl
fldcw
add
call
mov
cs
in
stos
xchg
xor
cmp
cmp
test
addl
scas
stos
pop
mov
in
clc
push
xor
push
repnz
out
rorb
sbb
rol
sbb
call
pop
cmp
int
xchg
imul
xor
cltd
sub
js
sub
pop
jge
jbe
adc
jae
inc
pop
or
and
lahf
call
xor
ljmp
sbb
inc
int
cmp
cwtl
jmp
mov
add
push
mov
pop
sbb
cltd
ficoml
fstpl
inc
call
test
inc
ret
addr16
std
mov
mov
daa
aad
xor
mov
push
rep
adc
aas
pop
mov
test
xor
xchg
adc
fsubp
aas
mov
pop
loopne
lret
ret
jle
xor
into
dec
sbb
mulb
test
sub
pushf
hlt
pushf
adc
inc
mov
bound
icebp
scas
xchg
cmc
jae
ljmp
push
test
xchg
and
mov
inc
and
imul
mov
cmp
dec
repz
jge
pop
fnsave
fldcw
pop
cmpsl
in
jl
mov
icebp
lock
ret
jne
pop
cmp
mov
cli
imul
mulb
aas
or
mov
xchg
adc
or
inc
imul
pushf
push
rcll
mov
push
push
leave
loop
clc
jecxz
mov
or
xchg
rcrl
cmp
js
jo
nop
jle
dec
cmc
mov
rcr
add
mov
inc
lods
out
mov
std
mov
ds
scas
imul
add
jbe
adc
dec
jno
mov
das
inc
and
stos
fnstsw
lret
popl
xor
inc
shl
pop
std
ja
lods
adc
and
sub
sbb
xchg
and
pop
daa
pushf
xchg
je
imul
enter
or
mov
adc
xor
stos
or
pop
movb
jo
sub
rol
push
testl
xchg
pop
mov
stc
out
repz
ret
popf
sub
ret
movsb
gs
add
xchg
das
xor
push
call
movsb
xor
lods
cmp
pop
push
in
dec
xchg
sti
js
popf
popa
cmpsl
popf
inc
fadds
loopne
in
push
stc
sahf
mov
les
cmp
fcomps
pop
jbe
lret
sub
mov
inc
fcoml
dec
xchg
lods
fcomi
jle
mov
es
insb
out
cwtl
dec
jmp
inc
nop
push
xchg
add
xchg
gs
push
sub
xchg
add
adcl
pop
mov
jb
lock
cltd
mov
sbb
or
pop
stc
pop
insb
andb
popf
cmpsl
mov
sbb
dec
add
push
lea
pop
xchg
push
or
cmp
or
addl
dec
imul
xchg
and
lcall
cmp
cmpb
aaa
inc
add
test
ds
pop
js
sub
dec
rorl
or
lock
jl
adc
mov
dec
mov
insb
lods
push
push
stos
xchg
dec
mov
ss
hlt
hlt
leave
rcr
sahf
sbb
cmp
jecxz
jne
push
xchg
xor
outsl
js
mov
jg
pushf
stos
xor
inc
loope,pn
cmp
not
push
hlt
movsb
push
das
in
in
push
adc
outsb
fdivl
pop
imul
and
jecxz
jbe
lods
xor
lcall
movsb
lcall
repz
adc
jge
shll
fistps
or
insl
lods
mov
mov
mov
inc
int
adc
and
jne
cld
fs
dec
dec
lds
nop
loop
insb
sub
cmpsl
outsl
lret
pusha
cmpsb
stc
cli
sub
cmp
bound
cld
push
sbb
dec
cmpsl
mov
test
call
jb
cli
add
sub
in
faddl
jb
cli
dec
pop
mov
dec
pop
jb
mov
out
stos
jmp
jae
hlt
xor
and
cmp
jmp
icebp
sub
cmpsl
xor
icebp
js
xlat
mov
cmp
jns
mov
mov
lea
mov
sahf
test
dec
pop
icebp
mov
sbb
add
arpl
push
cltd
es
packuswb
xchg
or
cmpl
lock
lods
outsb
mov
xchg
repz
mov
aaa
xchg
push
fsubrs
scas
cmpsb
add
shll
jp
mov
ss
lea
leave
popa
ret
movl
pusha
inc
push
ss
cmp
stos
cmp
loop
inc
aad
bound
fldl
cltd
fadds
and
push
mov
ljmp
xchg
pop
icebp
mov
stos
or
sub
push
adc
mov
mov
fdivl
jecxz
xchg
mov
sub
xor
xlat
xchg
stc
idivb
sbb
addl
shl
and
test
xchg
mov
fwait
cwtl
pop
outsb
dec
cwtl
data16
jns
cmc
scas
notl
jge
cmp
xchg
or
mov
xlat
adc
jg
adc
and
std
bound
push
divb
xor
push
cmp
outsb
mov
xchg
fwait
negb
inc
and
cmpsl
into
repnz
jle
repnz
add
test
inc
mov
mov
into
cli
push
and
pop
adc
pop
pop
and
jmp
out
mov
les
das
fxtract
iret
stos
sbb
push
inc
test
xlat
sahf
xor
pop
pop
jmp
fsubrs
mov
inc
mov
inc
inc
test
mov
outsl
out
jns
mov
mov
and
mov
jp
mov
xchg
cmpsb
dec
push
and
stos
push
adc
or
in
les
lods
pop
sub
into
in
dec
int3
orl
test
xchg
popa
sub
gs
xchg
jle
rorl
jns
les
lret
insl
push
mov
rcrl
jbe
hlt
fcompl
js
out
xorb
lret
outsb
lock
movsb
cmp
mov
xor
aam
into
mov
into
adc
cwtl
lea
jo
rcll
mov
fdivs
jecxz
cld
lret
push
bound
mov
jb
push
dec
mov
jle
popa
je
cltd
sub
pop
add
xor
mov
cmpsl
call
mov
lcall
push
xchg
pop
xor
mov
loope
adc
bnd
mov
mov
or
jb
aad
fwait
xor
lods
sete
out
popa
fiaddl
and
pop
xor
push
iret
popa
cmp
dec
ja
xchg
xchg
sub
imul
pop
or
and
pusha
dec
lret
repnz
push
pop
xchg
dec
leave
cmp
pop
inc
cmpsl
lock
test
and
xor
movsb
jecxz
cltd
into
sbb
insl
repnz
fisttpll
jl
mov
jae
sbb
enter
sbb
pop
pop
lcall
mov
add
jo
jno
scas
mov
lcall
loop
xor
movsl
jg
or
test
xor
jo
in
pop
jns
orb
mov
aam
sub
and
mov
mov
xor
mov
push
mov
jp
stc
xlat
shl
jae
cmp
add
inc
filds
cmpsb
repz
xchg
insl
xor
je
test
das
xor
hlt
in
cltd
sti
and
rcrb
pop
xchg
js
and
add
pop
adc
sub
fstps
fldt
cwtl
ret
test
jbe
jmp
insb
aas
cmp
jecxz
bound
jle
cmp
mov
mov
add
jno
push
jb
in
sub
adc
add
in
mov
xor
or
dec
int3
jge
jle
xchg
fdivl
mov
je
cld
pop
push
mov
pushaw
cli
pop
ror
and
repz
cmp
shl
lret
out
jle
sti
cmc
adc
in
mov
pop
int3
and
lahf
add
lea
andl
mov
push
cmp
or
lret
pop
pop
sbb
sbb
mov
fidivs
lcall
frstor
sub
data16
bswap
pop
out
mov
jmp
xchg
je
shrb
lcall
mov
movsb
int
jno
jnp
adc
or
push
push
pop
dec
inc
add
movsb
push
mov
mov
xlat
mov
or
popf
cmp
fsubl
mov
jnp
pop
push
xlat
bound
mov
div
and
out
rcll
jp
jmp
ret
mov
add
cmpsl
sbb
cmp
sahf
fdiv
pop
dec
test
mov
js
repz
ds
cli
mov
cmp
cmp
nop
fsubl
dec
mov
stos
subb
loope
pusha
fldcw
push
pop
imul
add
jbe
and
mov
out
mov
shlb
call
fwait
inc
enter
ss
push
push
subl
jl
push
xchg
jl
shl
ja
nop
daa
sub
xchg
jle
pop
insl
popf
mov
pop
fbld
jnp
test
or
arpl
xor
add
pop
xorb
push
jne
and
xlat
call
std
mov
dec
cmpsb
xor
push
add
test
add
add
push
pop
mov
or
mov
sbb
test
or
adc
faddl
out
aam
std
cltd
jbe
sbb
jp
fstpt
and
shll
xor
dec
jne
adc
in
add
push
inc
mov
popl
insb
lds
dec
push
jo
sbb
mov
test
clc
mov
test
hlt
mov
pop
sub
ret
in
add
cs
rsqrtps
xchg
scas
pop
pop
js
cld
js
xor
fistps
cmp
xor
fisttps
data16
mov
popf
in
xchg
sub
rorl
dec
pop
xorb
ficomps
out
mov
dec
mov
into
test
orb
mov
xchg
xchg
aaa
or
adc
sarb
aaa
ret
sub
mov
scas
push
push
and
dec
xchg
js
lea
xlat
jmp
arpl
inc
iret
mov
inc
adc
push
mov
ljmp
dec
mov
rcr
frstor
ficoml
xor
outsl
xchg
movsl
outsl
cmp
xchg
pop
jp
lock
ret
je
and
xor
inc
mov
ja
mov
cmp
mov
sbb
mov
or
sub
faddl
mov
lcall
out
mov
xchg
sub
call
dec
cmpsl
xor
dec
jle
mov
les
jp
xor
std
insl
nop
xchg
je
mov
xlat
cwtl
lds
jnp
sub
xchg
or
sbb
and
aas
outsb
xor
loopne
adc
cwtl
ret
xchg
gs
push
xchg
gs
mov
sbb
push
pop
adc
clc
mov
mov
pop
fwait
mov
mov
das
jbe
in
lea
pop
stc
and
data16
push
mov
and
gs
jle
add
idivb
pop
outsl
js
aas
push
movups
lock
cmp
insl
add
mov
pop
fcoml
fwait
sbbl
ljmp
inc
pushf
cmp
cmp
fadds
sbb
jb
in
adc
xor
ret
je
loope
negl
into
insb
cmp
pushf
in
cmc
pop
dec
aad
into
sub
imul
jns
ja
call
lds
lahf
lods
movb
rcrb
daa
fdivl
xor
mov
sti
pop
inc
inc
sub
cwtl
scas
mov
mov
cmp
xchg
inc
push
push
jecxz
pop
je
je
idiv
or
cmpsb
xor
test
and
jb
imull
cli
mov
inc
je
mov
push
adc
push
pop
daa
rcll
pop
and
push
in
addl
xchg
loopne
push
push
push
scas
adc
xchg
sahf
sbb
dec
out
dec
add
aas
pusha
jae
js
sub
xchg
inc
xor
call
xor
out
enter
sub
insl
cmc
outsl
inc
lods
lods
mov
cmp
shlb
mov
mov
push
pushf
dec
adc
lods
imul
or
out
or
xchg
sbb
or
sbb
inc
add
nop
fstpl
cmp
cmovle
outsl
movsl
scas
pusha
lret
in
sarl
outsl
sub
daa
sbbb
dec
jecxz
mov
in
xor
ret
adc
jae
std
int
cld
pop
inc
xchg
test
lahf
xorl
stc
movsb
jp
sub
mov
cld
loopne
loopne
movsb
dec
mov
loop
lcall
shl
pop
iret
and
movsl
test
pop
add
inc
or
sbb
pop
loopne
xchg
xchg
cmpsb
scas
add
jne
stos
pusha
and
dec
in
js
push
hlt
insb
in
inc
push
xchg
divl
sbbl
push
add
push
mov
pop
fbld
inc
lahf
or
fstpt
mov
pop
test
cmp
mov
out
lds
call
dec
leave
fisubrl
add
pop
ret
jmp
inc
rclb
mov
inc
jmp
mov
sub
mov
mov
lock
in
mov
xor
ja
lahf
and
and
es
out
and
or
jo
jl
add
mov
jg
mov
inc
inc
pop
mov
pop
xchg
xlat
jno
jne
into
lret
adc
lds
push
ljmp
test
jl
lds
add
call
outsb
int3
add
enter
add
dec
imul
scas
test
sti
jl
adc
push
sbb
sbb
sub
and
sarb
or
nop
cmp
sub
test
cmp
xor
js
out
ret
xchg
or
adc
and
mov
push
xchg
sbb
xchg
sbb
jecxz
mov
cmp
mov
cmp
xchg
js
and
pop
pop
in
imul
or
mov
pop
int
loope
cmp
aas
inc
sbb
in
or
std
dec
mov
inc
sbb
adc
push
test
lret
jo
fs
jnp
shrb
or
jo
mov
xlat
and
dec
pop
hlt
movsl
outsl
imul
mov
ret
mov
into
insl
ret
icebp
mov
add
jae
mov
inc
call
mov
imul
icebp
shll
pushf
lock
and
aas
dec
hlt
testl
xchg
sbb
outsb
daa
add
mov
std
daa
add
mov
psrld
sahf
shrl
inc
mov
fs
mov
xchg
fstl
jle
mov
sti
xor
and
addr16
mov
mov
mov
jae
mov
repnz
cmpsl
sbb
pop
fists
sti
ret
cmpb
xchg
or
je
repz
cmpsb
cwtl
xchg
dec
fwait
mov
dec
pop
scas
sub
test
sbb
fucomip
mov
mov
insb
add
pop
push
xchg
jnp
and
add
and
sbb
into
sub
nop
cmpb
push
das
in
push
lods
or
std
call
mov
push
popf
out
jne
ss
out
test
fsub
or
popf
loope
sbb
movsl
insb
xchg
daa
fcoms
mov
mov
push
test
leave
jmp
clc
movsl
cld
fstpl
xor
mov
out
pop
dec
mov
jb
jno
or
lahf
xchg
call
cmp
sub
mov
popf
dec
mov
cwtl
shlb
push
pusha
push
sbb
push
imul
stos
fcmovbe
cmp
pop
jo
mov
stos
and
popf
push
mov
fdivrl
pop
push
mov
test
ret
fildl
push
xchg
lret
not
movsb
mov
xchg
pop
xor
dec
or
mov
pusha
push
and
aaa
jb
cmp
cmp
pop
aad
mov
dec
aad
cmp
cmpsb
mov
jbe
xor
test
das
dec
movsl
rolb
rclb
into
sarb
stc
xchg
js
repnz
das
push
mov
pop
mov
mov
pushf
xchg
lahf
pop
lret
jle
stc
psrld
cmp
aad
adc
into
jecxz
cmp
testl
cmp
sbb
push
out
cmc
scas
mov
data16
push
adc
jnp
mov
jg
mov
lcall
lea
jge
imul
repz
push
cmp
cmp
cmpsb
xor
lods
sub
ss
jb
popf
aas
dec
push
cmpsl
cld
ss
sbb
xorl
arpl
rorb
bound
jge
push
fldt
jp
mov
in
scas
or
pop
sbb
fisttpll
xor
repnz
out
jnp
movsl
xlat
jl
mov
push
or
pop
ljmp
or
mov
add
addb
fildl
ss
mov
repz
in
mov
test
lods
insb
jne
movups
or
mov
mov
fstp
into
in
or
add
in
subb
sti
lret
rol
push
lods
nop
adc
add
bt
fld
sub
dec
jae
jo
inc
mov
dec
fs
jno
dec
inc
out
xchg
in
es
inc
sarl
jo
or
aam
dec
push
pop
xchg
fcmovu
int3
sub
in
push
adc
mov
adc
lcall
in
and
jno
jmp
mov
ds
out
clc
fwait
loop
dec
xor
leave
loope
mov
in
mov
sub
fisttpll
dec
rcr
xor
movsl
outsl
movsl
aas
or
out
inc
jne
jae
and
xor
pop
mov
add
sub
popa
das
movsb
pop
in
rcl
ja
jmp
mov
gs
mov
rclb
and
xchg
dec
and
mull
data16
cmpsb
outsl
lahf
stos
and
xchg
push
xchg
fsub
add
ret
ret
or
das
jmp
shrl
mov
pop
test
cmp
dec
sahf
dec
test
fwait
jbe
xor
pop
pop
inc
inc
lock
and
pop
adc
lret
lods
or
lahf
mov
gs
loopne
faddl
cltd
cmpsl
xor
push
pop
jne
loop
pop
xchg
sub
mov
mov
adc
lea
or
data16
mov
outsb
scas
fldl
stos
add
sahf
ss
cmp
xlat
mov
pop
int
stos
jo
lock
sub
ret
sub
nop
cs
push
testl
loope
push
mov
data16
cwtl
xchg
mov
dec
sub
add
loope
js
gs
mov
cmpsb
sti
mov
xlat
into
movsb
cmp
push
ret
jg
add
adc
push
mov
push
cmpsl
loopne
inc
xchg
xchg
mov
lahf
sbb
jge
push
stos
negl
sub
or
cmpsb
enter
frstor
cmpsl
sbb
or
mov
mov
sub
faddp
and
dec
cli
gs
dec
inc
adc
sbb
js
sub
sub
jmp
repnz
ljmp
out
mov
pop
int3
in
mov
pushf
pop
lods
or
push
or
xchg
mov
jne
mov
or
or
mov
lock
add
rorb
loope
fwait
dec
inc
or
icebp
pop
insl
inc
ds
loop
dec
pushf
dec
cmc
in
adc
cmp
sbbb
push
andl
xlat
ret
cs
mov
and
in
xor
mov
fmulp
aad
mov
mov
jb
cmp
sub
pop
push
cmp
inc
popa
lret
inc
jecxz
sarl
jg
inc
pop
jecxz
cmp
inc
cmp
xor
test
outsl
rorb
xchg
lea
jge
je
or
pop
insl
xchg
sub
enter
push
popa
ljmp
nop
loop
mov
es
pop
sbb
inc
shrb
lock
jb
mov
aas
xlat
and
jb
dec
psadbw
jnp
cmpsb
jbe
pop
lods
out
xchg
mov
jae
movsb
jo
lret
inc
aad
loope
mov
icebp
in
ljmp
mov
sub
push
iret
movsb
dec
movsb
movsl
mov
or
sahf
push
cwtl
in
cmpsb
aaa
sarl
lods
rclb
testb
inc
out
lret
popf
xchg
push
and
aad
out
pusha
and
mov
cmpb
scas
das
addr16
cltd
or
push
loop
lock
jbe
mov
cwtl
inc
sub
xlat
or
sub
xor
mov
jmp
jg
std
mov
cld
push
mov
sub
xchg
pop
lret
out
popa
xchg
push
jbe
imul
cmp
mov
pop
lods
or
testl
dec
out
pop
les
xchg
adc
loop
jnp
mov
fs
xor
push
lock
mov
inc
push
outsl
pop
scas
cmp
push
add
and
push
dec
int3
jle
mov
test
int
and
mov
outsb
and
inc
stos
ss
cld
es
push
add
lcall
lcall
or
ss
push
or
push
jo
scas
dec
lret
push
ror
mov
add
and
in
sbb
hlt
test
shlb
fidivrl
dec
das
fs
xor
pop
pop
int
orb
push
dec
shll
jp
fiaddl
pop
fstl
js
mov
ss
jle
pushw
jae
bound
jg
sub
cvttps2pi
lea
fcomi
xchg
jae
mov
mov
push
or
fiaddl
pushf
jnp
jbe
daa
mov
dec
and
decb
lods
sbb
insl
xlat
inc
fcmovb
sbb
push
loope
mov
mov
cmpsl
or
dec
sarb
mov
push
into
push
aam
xchg
bound
pop
push
xor
pop
lahf
ficompl
or
jge
xor
sbb
xchg
add
flds
adc
les
insl
fsubl
cli
dec
inc
sahf
or
push
nop
dec
jo
sub
cld
push
cmp
lds
fucom
mov
xlat
lcallw
clc
rcrb
mov
fldcw
cwtl
mov
inc
test
dec
fucom
ss
hlt
mov
xor
push
xchg
test
fists
cmpsb
push
mov
sbb
mov
outsb
pop
pop
xchg
add
xchg
jno
xor
jp
aas
fwait
push
into
mov
jecxz
add
cmp
into
es
cmp
cltd
cs
fadd
sbb
pop
popf
jmp
or
int
xor
mov
hlt
adc
test
adc
cmp
xor
cmpsb
inc
cmp
pop
data16
lahf
mov
das
pop
decl
sbb
pop
cmpsb
movsl
hlt
and
cwtl
fs
pop
imul
test
sub
dec
cmpb
xchg
or
or
sub
inc
mov
test
loop
xchg
test
xorl
mov
fidivs
mov
mov
push
loopne
aas
mov
inc
bound
pusha
fcoms
xchg
test
mov
stos
and
mov
jg
pop
ficomps
movsl
pop
xchg
ret
xchg
mov
mov
mov
lods
cld
lock
mov
negb
ret
sbb
sub
in
enter
xor
xchg
cltd
or
mov
ret
adc
popa
or
hlt
and
push
test
pop
movsb
ja
push
sub
test
leave
mov
dec
call
and
insl
in
jg
out
add
pushf
mov
xor
cmp
imulb
in
jo
int
cmp
sarl
mov
mov
mov
sub
repz
cltd
adc
dec
xlat
pop
xlat
ja
lods
lock
xor
pop
ficompl
movsb
cmc
dec
lods
xchg
cld
popa
mov
std
test
jbe
sahf
shlb
mov
fcom
mov
pop
stc
adc
push
stc
stos
cmp
mov
int3
xor
nop
pop
insb
in
mov
sbb
std
lods
jg
setp
mov
xor
xchg
test
shrl
cmovle
dec
and
sbb
pop
fbstp
cmp
lret
loope
and
pop
xor
mov
mov
movsb
push
dec
push
fwait
and
shrl
or
mov
cmpb
jo
mov
sbbl
xchg
in
inc
sbb
mov
mov
stos
sub
fsts
test
jae
pop
sub
mov
hlt
mov
lock
jmp
and
and
mov
addr16
jne
cltd
and
shl
ds
pop
sub
cmp
je
inc
sbb
cmpsl
mov
add
xchg
inc
pop
xchg
mov
xlat
jne
push
aam
push
pusha
mov
test
rcl
out
push
imul
js
stos
mov
je
push
adc
jge
jns
adc
int
dec
adc
mov
in
gs
mov
mov
ret
xchg
dec
mov
mov
pop
in
adc
leave
mov
push
mov
xchg
cmp
dec
mov
sub
adc
jne
jl
es
gs
cltd
cmp
adc
sbb
push
shrb
and
and
scas
mov
gs
xlat
adc
in
jo
in
inc
adc
scas
loope
xor
jno
push
adc
pop
scas
cltd
push
imul
testl
push
lds
sbb
out
pop
pushf
je
xor
in
add
and
mov
xor
stos
pop
jge
push
mov
sbbb
xorl
mov
fisttpll
jg
daa
push
and
ret
mov
mov
fistpll
outsl
mov
jg
out
addb
jae
dec
pop
roll
movl
lods
cmp
stc
xlat
mov
in
aaa
int
out
adc
lods
into
xor
imul
ror
or
and
sub
cwtl
das
lea
mov
cmp
iret
int3
pop
insl
push
fisubrl
fimull
das
jmp
and
pop
ret
sub
push
ficompl
stos
xorl
and
fidivs
nop
and
fistl
iret
cmp
mov
sub
outsl
cmp
jnp
and
lds
push
cmc
xchg
fisttps
sub
push
pop
dec
cwtl
ja
in
icebp
jle
or
inc
in
pop
movsl
xchg
test
jmp
jns
jb
mov
jns
jp
mov
outsl
add
adc
cmp
inc
lods
aaa
push
sbb
lea
in
rcl
orl
push
gs
xchg
std
addr16
test
sub
cmp
mov
js
and
mov
cmpsb
pop
push
or
std
mov
stos
and
bswap
cmp
cmp
test
inc
outsb
mov
inc
cld
gs
adc
sub
mov
or
xor
pop
out
negl
add
rcl
push
into
pop
ja
push
test
jp
adc
dec
pop
xor
out
mov
cld
dec
mov
mov
lcall
pop
es
frstor
xchg
aas
ror
lods
pop
sbb
scas
call
js
inc
fstps
dec
mov
inc
add
jno
iret
mov
dec
lret
insl
fnstsw
sarl
in
lahf
dec
ds
in
fwait
mov
popf
mov
xorb
push
mov
push
push
xor
cltd
mov
js
xor
inc
stos
test
imul
xor
xchg
push
shrb
aad
add
mov
jge
xor
or
inc
sub
int3
arpl
ret
dec
jmp
fldcw
out
jge
cmp
ret
and
xor
stos
in
adc
lods
xchg
jns
inc
adc
jae
fistps
push
mov
aad
lahf
mov
jne
test
mov
outsb
add
sub
mov
push
jle
ljmp
lock
ja
pop
test
lds
pop
dec
mov
jns
xor
popa
push
adc
sbbl
hlt
dec
test
sub
jne
imul
les
add
jl
mov
pop
and
flds
insl
iret
pop
add
dec
and
adc
dec
inc
imul
inc
es
jmp
adc
sbb
cmp
mov
and
xchg
xchg
mov
inc
out
aaa
sbb
sub
cli
ss
mov
scas
ljmp
icebp
ret
pop
pop
outsl
insl
mov
and
insb
mov
sub
cltd
mov
add
sub
jno
mov
mov
push
cli
pop
jbe
dec
int3
jle
fstl
push
pop
sbb
sub
loop
xchg
dec
fstp
xchg
sbb
repz
xor
nop
sub
xchg
ss
xchg
fcmovbe
mov
sub
xchg
add
jnp
or
ficompl
js
add
sub
mov
out
cmp
dec
into
popa
bound
xor
iret
aam
mov
xchg
cmp
adc
or
gs
sub
ds
leave
gs
and
xor
scas
fimuls
stos
ror
sbb
sbb
add
pop
mov
scas
rcrl
ljmp
loopne
dec
mov
add
xor
or
jecxz
mov
lcall
add
sti
aam
push
xchg
filds
mov
fs
add
data16
sbb
shr
and
push
push
jbe
push
jno,pn
mov
xchg
mov
adc
rolb
or
rclb
shrl
push
aas
add
push
mov
cmp
nop
or
ja
mov
mov
mov
push
das
ror
dec
cmp
xor
or
push
dec
lret
mov
aaa
aas
rcrl
sbb
pop
sbb
or
in
and
movsb
jne
fists
xchg
mov
jle
jbe
dec
sbb
test
test
out
add
push
pop
and
aas
mov
or
mov
xchg
sub
lret
stos
aam
aam
cs
jbe
push
sub
or
outsb
pushf
mov
mov
xor
out
pop
inc
in
inc
dec
int3
push
ja
fwait
jecxz
fbld
cmp
jecxz
xchg
jmp
fnstcw
xchg
push
mov
dec
nop
and
xlat
push
popa
scas
mov
cmp
js
pop
adc
jo
push
jmp
and
popf
dec
mov
xor
push
outsb
hlt
sysexit
and
shlb
add
lods
scas
inc
xchg
out
jmp
and
lods
rorl
pop
cmp
fisttpll
adc
je
mov
mov
mov
out
pop
pop
jmp
pop
pop
popa
pusha
sub
iret
adc
sub
sahf
xor
mov
gs
sar
cmp
adc
xor
mov
sub
add
inc
arpl
ja
test
addr16
pop
mov
dec
dec
jb
fimuls
mov
fnstenv
jo
popa
xchg
bound
js
sbb
push
aad
fidivrl
imul
push
or
jl
jmp
lods
or
cmc
ss
push
pop
call
dec
or
sarb
or
sbb
jmp
dec
dec
add
rcll
int
icebp
pop
xchg
popf
repz
sub
pop
pop
movb
push
test
es
jnp
pop
mov
jnp
and
mov
lods
and
push
lahf
out
mov
and
mov
in
pop
dec
shl
aam
dec
daa
divb
mov
pop
testb
rorl
ret
loope
mov
jl
dec
popl
xlat
mov
mov
imul
adc
add
pop
jge
jbe
shll
arpl
mov
xchg
pop
movsb
imul
mov
pop
rcrb
in
out
inc
mov
jmp
call
ret
nop
jae
std
mov
mov
bound
mov
loopne
iret
jnp
add
dec
push
mov
test
add
dec
mov
mov
ljmp
mov
jmp
imul
ficoms
xchg
pop
sarb
inc
cmpsl
mov
xlat
sbb
shrb
xor
and
stc
push
out
loop
ds
and
int3
xor
push
ja
jecxz
ss
sbb
mov
adc
leave
sub
repz
dec
dec
cwtl
cmc
inc
jae
mov
inc
dec
nop
mov
daa
mov
xchg
hlt
lea
and
test
push
ss
xchg
mov
mov
mov
inc
icebp
mov
fdivr
ds
mov
in
mov
addb
sahf
ror
notb
ret
jmp
lret
xchg
mov
mov
mov
push
lret
sbb
add
mov
pop
decb
inc
mov
dec
fldcw
mov
cmp
sub
shl
les
push
sbb
jae
lods
dec
pop
sbb
push
xor
insl
out
cmpsl
sbb
xor
in
mov
or
fcompl
or
inc
cld
loopne
jl
ret
outsl
aaa
cmp
clc
jo
push
lret
or
xchg
add
inc
push
adc
xlat
jb
inc
daa
ror
jl
clc
xor
xchg
dec
cld
pop
lods
movsb
hlt
xor
test
in
pushf
loopne
in
push
es
lock
pop
pop
lea
dec
outsl
movsb
into
test
jle
cmp
loope
inc
outsl
enter
push
mov
mov
jge
lock
and
loope
mov
leave
dec
mov
push
jno
dec
or
pop
test
xor
mov
mov
mov
mov
jp,pt
inc
lcall
fildll
xchg
scas
inc
mov
jns,pt
js
cmpsb
jb
into
jbe
outsb
leave
inc
inc
dec
mov
xor
mov
sub
cmp
jne
mov
or
pop
insl
or
or
cmpsb
outsb
incl
repnz
xor
jmp
mov
sbb
jl
xlat
arpl
test
fs
dec
ss
dec
pop
in
dec
adc
test
add
dec
cmova
loop
pusha
jae
imul
icebp
sbb
aam
fsts
scas
xchg
dec
cmp
push
inc
scas
adc
adc
jge
scas
in
aas
fnstcw
cmp
sbb
pop
mov
dec
fiadds
fidivs
cld
out
push
dec
lods
outsl
movsl
mov
dec
rolb
mov
cld
add
stos
pop
cwtl
ret
pop
mov
popa
jmp
jno
bound
aaa
cmp
mov
jbe
hlt
sbb
xor
iret
dec
pop
mov
lret
push
in
or
or
aam
popf
icebp
repz
add
insb
js
leave
adc
mov
out
insb
pushf
jb
adc
pop
jo
push
es
cli
cwtl
ret
cmp
je
fstpl
mov
js
and
push
sub
xchg
mov
jbe
cmp
push
xor
xor
xchg
out
cmpsb
in
xchg
fbstp
pop
adc
xorb
ds
aaa
cmp
popf
xchg
cltd
and
sbb
xor
roll
popf
dec
sbb
push
xor
mov
mov
mov
jp
movsl
mov
in
inc
repnz
mov
cld
scas
jge
ljmp
jmp
push
or
push
lods
adc
add
or
fld
push
andb
mov
xorb
push
pushf
je
stos
xchg
dec
out
adc
mov
jns
outsl
negl
adc
aam
jb
nop
mov
xchg
pop
and
js
push
pop
xchg
notl
add
pusha
mov
inc
mov
jmp
jp
das
or
push
addl
adc
sub
cmp
hlt
testb
adcb
jle
fistpll
testb
daa
push
inc
mov
ret
ss
lcall
fsub
test
dec
mov
addr16
cmp
and
and
nop
test
push
or
adc
insb
fdivl
hlt
dec
xor
test
int
popa
aaa
ljmp
iret
sub
cwtl
inc
xchg
inc
inc
jl
mov
or
adc
add
or
mov
jnp
and
jne
fs
inc
fnstcw
das
ret
ds
adc
fwait
or
pop
outsl
stos
inc
nop
insl
lock
jmp
fwait
xor
jnp
pop
dec
sub
and
push
mov
xor
fs
ffree
sub
pop
fmul
out
xor
popf
lcall
call
sbb
pop
imul
out
repz
jb
sub
icebp
popa
stc
mov
sarl
lcall
and
pop
in
les
and
push
movsl
ds
cmp
xlat
pop
bound
mov
and
pushf
lods
pop
aam
and
sbb
add
les
and
shll
cmp
or
insl
jb
dec
les
push
cmp
cmp
aad
cmc
cmpl
xchg
daa
mov
aas
lcall
xor
push
popa
imul
jbe
inc
or
and
clc
add
inc
cmp
mov
dec
mov
jbe
cmp
dec
xor
sbbb
add
or
push
mov
test
aam
shrl
mov
aad
add
fldl
mov
jmp
int
cmp
mov
jae
lret
lcall
fsub
push
in
jb
push
pop
jmp
sbb
int
xchg
and
sub
mov
stc
js
fists
es
int3
fadd
push
clc
int
jle
inc
mov
dec
hlt
rorl
lcall
rcll
pop
cmp
cli
or
cwtl
repnz
inc
scas
iret
inc
cmp
loope
cmp
jmp
aaa
aam
neg
sub
xor
stos
dec
or
imul
mov
adc
cmpsl
cltd
or
stc
gs
shll
cmp
imul
orl
sub
lea
inc
cmp
xchg
mov
std
and
push
leave
add
jbe
ret
and
lret
fwait
inc
mov
sahf
pusha
inc
icebp
inc
out
sbb
in
pop
mov
or
test
adc
or
aad
sti
inc
mov
shll
mov
fistl
cld
sub
sub
xorl
addb
or
fstps
push
in
add
aad
pop
add
inc
pop
test
sub
jmp
xchg
add
in
gs
adc
stos
and
push
sub
xor
push
add
mov
cmp
pop
ret
xor
jns
mov
adc
or
xor
scas
mov
decb
repnz
adc
xchg
add
in
aam
fsubp
sbb
addr16
push
xchg
adc
sbb
xlat
pop
jo
mov
pop
pop
push
cmp
dec
lds
popa
rorl
lcall
inc
icebp
nop
call
aam
ficoml
out
inc
daa
loop
push
adc
mov
divl
add
popf
popa
addl
movsb
xorl
pop
mov
fiadds
fcmovnbe
aas
xchg
je
mov
dec
mov
and
fsts
movsb
aas
subb
and
mov
pop
loop
jg
adc
cmp
mov
ficoms
data16
adc
daa
stc
xorb
or
mov
fcoms
jp
cmp
or
test
sub
sub
cld
pop
push
gs
push
adc
lret
das
cltd
or
push
gs
push
inc
cmp
and
pusha
adc
lahf
pop
jmp
add
dec
fcmovnu
int3
adc
jl
data16
fstpl
mov
add
pop
and
and
or
repz
es
push
movsb
sbb
push
call
out
fmulp
mov
or
sbb
aaa
mov
lret
xor
xor
lods
enter
pop
sub
imul
jecxz
mov
outsl
push
sahf
xlat
repz
cmpsl
into
sub
in
xor
and
push
xlat
jp
arpl
mov
fdiv
imul
notb
fistps
stc
add
mov
or
sbb
and
jo
ret
fdivrl
xchg
scas
lods
clc
mov
jnp
dec
scas
push
lret
inc
repz
lods
pop
and
arpl
addr16
mov
mov
test
adc
lock
xchg
mov
das
inc
adc
fists
lods
cmp
adc
add
push
mov
scas
addr16
add
inc
push
mov
pushf
adc
jge
test
mov
push
xor
mov
jne
andl
loope
shll
imul
push
mov
lods
or
push
loop
loopne
imul
jge
jns
pop
sbb
popf
add
subb
pushf
out
test
fcoml
mov
mov
sub
or
std
fiadds
pop
aad
dec
lret
push
mov
adc
gs
jmp
xchg
pop
cmc
push
sbb
sub
pop
mov
adc
fwait
inc
lock
lret
cmp
pop
fsubrs
and
xchg
cmp
sub
imul
test
adc
addr16
ret
ret
push
fsubrl
insb
sub
push
cwtl
push
inc
int
rorb
mov
out
cmp
addr16
lcall
inc
dec
cmp
enter
cmp
outsb
je
add
dec
push
mov
lock
mov
inc
dec
mov
insb
bound
adc
push
mov
or
repnz
xchg
int
xchg
add
push
or
pop
loope
bound
jae
xor
mov
lahf
int3
ja
mov
mov
arpl
movsl
stos
sub
imul
xchg
xchg
subb
push
jmp
lcall
add
dec
scas
and
mov
js
divb
cmp
xor
push
pop
aam
sbb
imul
mov
jbe
data16
sub
xchg
xchg
jp
xchg
pop
inc
xchg
push
cmpsl
sub
pushf
je
fwait
cmp
xor
jnp
jno
outsl
push
sbb
xchg
and
adc
aas
lods
mov
xchg
scas
imul
lea
sbb
std
subb
mov
lahf
sti
loope
int
xor
rcrb
or
mov
sbb
mov
mov
inc
dec
mov
cld
mov
and
fisubl
lret
loop
stos
test
xchg
aas
dec
xor
loop
sbb
rorl
or
nop
xor
cmpsb
fcmovnu
int3
pop
repz
adc
mov
mov
je
fisttps
repz
arpl
jg
and
sbb
inc
negb
push
xchg
mov
call
pop
rclb
xchg
inc
dec
cmp
mov
or
dec
popa
fadd
lods
push
dec
mov
sbbl
and
sbb
mov
iret
loope
js
add
mov
rol
dec
repnz
cli
das
data16
negb
repnz
cmc
movsl
push
inc
inc
lcall
push
push
lea
or
mov
lcall
insl
cmp
fs
mov
insb
inc
mov
lock
test
fists
mov
lea
lret
in
xchg
test
sub
xchg
pop
sub
mov
hlt
mov
pop
mov
loopne
cmp
out
mov
add
lret
pop
insl
and
xchg
pop
popa
shrb
mov
test
xchg
xor
or
fidivl
sti
xor
mov
jle
sub
sbb
sub
push
cs
repz
sbb
lds
fs
sarb
sub
mov
inc
sub
fisttps
out
mov
lds
sub
stc
or
divl
dec
icebp
roll
or
mov
fwait
inc
das
int3
xorps
pop
mov
test
add
xlat
sub
leave
fisttpl
cmpsl
call
push
movsl
pop
and
or
in
in
mov
std
insb
pop
and
mov
clc
nop
cmc
and
mov
dec
scas
cmc
sti
mov
into
cmp
sbb
jb
mov
jl
lods
lods
push
test
movsl
or
xlat
xorl
add
push
outsl
inc
or
lods
rolb
shrb
in
cltd
xor
jo
loopne
pop
jmp
bound
jb
mov
mov
mov
add
insl
decb
fs
push
aad
dec
ljmp
fldt
mov
xor
push
pop
aad
ds
shlb
jmp
daa
adc
mov
aam
or
js
dec
test
ds
pop
add
sbb
int
xor
pusha
jp
cmc
sub
mov
sbb
mov
notl
jge
xchg
inc
dec
and
cmp
mov
inc
mov
add
std
shr
pop
in
jp
rclb
cmp
loopne
sub
push
push
stos
inc
loope
inc
xorl
cmp
test
rcrl
cmp
scas
mov
popf
cmp
and
inc
repnz
ficoml
mov
data16
subl
inc
cmpsb
cmp
je
mov
or
pop
sbb
cli
shr
jl
andl
aas
push
sub
repz
jns
lods
inc
xchg
addr16
xchg
push
adc
mov
bound
jo
sub
mov
repz
fbstp
pop
jmp
dec
mov
addr16
push
jmp
push
add
mov
sahf
dec
and
lds
inc
push
lods
in
and
dec
frstor
mov
jmp
fs
inc
hlt
bound
xchg
sub
pusha
and
movsl
orb
and
jne
mov
mov
loop
or
sbb
lds
sbb
rcll
mov
mov
jp
dec
int
stos
jne
in
xchg
xchg
fistl
mov
addl
jp
or
fmull
jg
shrl
fisubrl
stos
sbb
or
mov
dec
push
lds
pop
push
aas
jbe
sub
lahf
lods
fistps
mov
insl
es
inc
cmp
mov
iret
stc
xor
cmpl
push
mov
mov
jo
adc
sbb
out
and
fldt
mov
aaa
pop
sbb
ret
test
mov
dec
insl
push
adc
lret
sub
out
and
mov
sub
mov
test
lcall
je
jg
mov
mov
mov
hlt
pop
push
mov
pop
add
xor
lock
outsl
repz
in
and
jae
xchg
mov
jp
cmpsb
in
pop
add
mov
mov
pop
and
lock
jne
mov
dec
xor
xchg
loopne
xchg
xchg
sbb
add
and
xor
sbbb
cmpsb
dec
pop
adc
cmpl
das
xchg
loop
dec
xchg
nop
xchg
jnp
add
inc
lret
sub
sbb
xchg
dec
movzwl
jmp
mov
adc
outsb
adc
sbb
mov
fldz
xor
test
or
push
leave
sbb
mov
negl
xor
or
jns
sbb
jo
push
jbe
or
hlt
rorl
jne
inc
dec
fdivl
out
int3
in
nop
outsl
ret
shll
subb
ss
mov
movsl
mov
sub
pusha
js
outsb
ret
mov
add
sbb
xchg
ljmp
ret
loop
inc
imul
push
nop
call
pusha
inc
outsb
mov
xchg
movsb
lcall
pop
dec
xchg
hlt
inc
test
icebp
mov
mov
adc
cmp
stos
sbbl
adc
jns
popf
xlat
rcrb
and
pop
mov
cmpsl
aas
ret
cmc
fidivl
fdivrl
jnp
push
ds
mov
daa
ret
popa
int3
aad
mov
cmc
insb
lds
clc
fadds
cmp
clc
jg
cmpsl
sub
idiv
dec
mov
bound
xchg
pop
imul
shrb
sahf
in
insl
stc
int3
and
mov
ds
jp
inc
pop
xlat
dec
addr16
imul
fucompp
fwait
popf
mov
pop
add
dec
lea
mov
dec
sbb
movsl
sbb
lahf
ds
or
pop
xchg
adc
mov
addb
es
inc
xchg
cld
pop
jecxz
jne
xchg
jl
add
jg
shll
addr16
hlt
inc
or
stc
testb
aad
xchg
or
iret
cmp
lea
jmp
and
stc
mov
inc
mov
fisttps
inc
push
fnsave
iret
lock
insl
push
and
mov
int
pusha
pop
sti
dec
xchg
mov
xchg
bound
or
jg
or
hlt
mov
nop
lea
loope
or
push
mov
xlat
mov
test
inc
cmp
cmovbe
outsb
ficompl
pusha
fisubl
into
adc
add
imul
inc
push
mov
and
pop
popa
mov
icebp
nop
ljmp
push
hlt
loopne
sub
mov
pop
cmp
push
inc
mov
stos
aad
mov
add
in
mov
mov
in
sub
cmpsl
stc
sub
ljmp
stc
repnz
mov
xchg
je
bound
decb
sub
test
fs
dec
call
mov
data16
test
loopne
lods
xlat
jnp
stos
lret
daa
outsl
inc
aad
pop
and
fmull
cli
pop
sarb
mov
cmp
mov
mov
mov
or
mov
jecxz
dec
lea
cmpsb
push
xchg
jecxz
cmpsb
int3
shlb
pop
daa
in
and
cmp
push
mov
inc
in
pop
imul
roll
and
js
jmp
mov
fwait
sub
fisttpl
mov
jb
mov
add
lock
inc
into
xor
stos
mov
mov
pmaxsw
clc
inc
jecxz
lcall
mov
jg
add
mov
lea
xchg
dec
lret
insb
mov
dec
enter
ja
push
inc
ss
cmp
inc
lock
sub
push
aaa
int3
lea
test
pop
xor
mov
mov
pop
mov
insertq
sub
jp
out
addr16
fcoml
mov
imull
xor
inc
pop
out
je
push
or
movl
scas
pop
std
inc
repnz
pcmpgtb
mov
xchg
mov
faddl
pushl
pop
dec
xor
push
repz
ret
xor
out
outsl
or
int
mov
scas
ja
push
xor
repz
adc
dec
cmp
into
lea
test
pop
pusha
push
cmova
test
mov
push
and
insb
pop
insb
lret
shl
adc
sub
sbb
pop
mov
push
out
gs
iret
insb
cmp
in
outsb
mov
into
in
adc
push
test
inc
and
cmc
and
xor
push
lahf
nop
jge
jae
daa
cwtl
hlt
mov
int3
push
xor
push
jb
pop
jnp
dec
outsl
add
ret
xorl
jge
fildll
or
or
push
jle
pop
es
popf
in
test
cltd
or
loope
cltd
jge
inc
sbb
or
daa
mov
mov
ds
ljmp
sub
ljmp
ljmp
ror
aaa
mov
cwtl
outsl
dec
push
cmp
arpl
lods
lods
popf
mov
jle
fwait
xchg
push
mov
inc
xor
sbb
out
and
cs
scas
pop
test
test
sti
in
sub
ja
in
jle
cmp
in
das
and
lea
mov
xor
popf
pop
add
sub
nop
test
jl
adc
scas
pop
dec
push
mov
aam
inc
fs
mov
scas
movsb
lahf
lea
mov
daa
hlt
ljmp
sub
in
pusha
mov
gs
or
and
adc
dec
repz
rcrb
fldenv
cwtl
mov
jecxz
sbb
call
stos
add
sbb
push
mov
popf
pop
and
loop
adc
cmp
xchg
or
push
pushf
insl
mov
push
mov
aad
pop
gs
jne
xorb
adc
mov
add
pop
aaa
repz
mov
jmp
repnz
rclb
aaa
subb
pop
lret
call
bound
aas
adc
add
and
jp
movsl
jp
in
lahf
neg
push
jb
xorl
cmc
fs
aam
mov
add
std
cmpsb
filds
pop
push
fisubs
pop
jno
ljmp
xor
rcl
jle
mov
mov
shrl
mov
movsb
push
push
jns
add
dec
push
out
test
lcall
into
movsl
lods
and
sbb
or
fnsave
lret
mov
jno
icebp
mov
insl
pop
int
fcmovnb
mov
leave
and
cmp
setns
or
push
push
test
scas
push
pusha
jmp
shl
flds
loop
rcl
cmp
xlat
lret
push
flds
jge
mov
loop
xor
add
out
add
int
mov
jne
test
add
nop
xor
mov
out
ss
dec
insl
inc
inc
push
dec
dec
int3
cmpl
arpl
inc
repnz
cmp
lahf
xchg
fildll
jae
xor
ret
mov
mov
xchg
jge
pop
outsb
jle
sub
test
add
mov
mov
es
and
js
mov
cld
jbe
das
jns
lahf
insl
add
add
dec
mul
jmp
pop
pop
jae
repz
mov
cmp
ljmp
and
mov
sbb
stos
idivb
mov
xchg
jne
push
pushf
pushf
inc
add
pop
mul
dec
out
in
xor
lcall
movsl
cmpsl
mov
stos
pop
inc
pop
cmp
das
test
xor
pop
rcll
mov
cld
mov
cmpsl
sbb
and
push
enter
out
test
repz
and
add
push
fs
stos
sbb
pop
stos
imul
inc
xchg
jmp
pop
iret
popa
cmp
jle
jns
sarl
fildll
flds
or
pop
sub
or
and
xchg
adc
xchg
pusha
mov
stos
adc
loopne
stos
pop
lahf
repz
mov
mov
es
fisttps
roll
mov
or
pop
sbbb
adc
sbb
leave
lock
int3
jae
repz
ds
inc
xor
mov
pop
adc
ret
ret
out
adcl
cmpsb
fwait
xchg
fsubr
push
jle
dec
repnz
inc
sahf
jmp
adc
sbb
pusha
push
pop
adc
xchg
push
andb
into
hlt
lret
dec
push
xor
ljmp
movsl
xor
aas
imul
arpl
jmp
adc
xchg
rorb
inc
popa
repnz
cld
sbb
das
xchg
imul
xchg
and
andb
imul
pop
movq
push
dec
sbb
push
enter
dec
bound
mov
mov
pop
mov
lds
call
es
hlt
cmpsb
movsb
pusha
das
mov
test
xor
fstl
sbb
int3
mov
or
stos
inc
insl
lcall
lea
sub
mov
dec
loop
jnp
mov
lds
push
push
xchg
inc
scas
and
std
mov
repnz
int3
cli
dec
fimuls
enter
js
mov
fstl
push
inc
jno
jno
arpl
cmpsb
adc
or
in
add
sub
xor
stc
adc
es
cmp
repz
outsb
leave
sub
addr16
mov
jmp
jecxz
lea
adc
std
lahf
fldt
movsl
ficompl
addr16
jne
dec
mov
lods
test
test
sti
int3
scas
dec
cli
in
pop
out
jmp
jb
dec
and
or
ret
mov
andl
stos
dec
sub
das
es
sub
mov
scas
inc
jge
ds
gs
add
and
idivl
mov
es
lods
cmp
dec
or
sbb
mov
aaa
inc
push
jmp
pop
mov
dec
cmpsb
daa
mov
es
or
push
sbb
je
lods
push
push
repz
and
cmp
sbb
insb
clc
das
popa
in
ja
inc
aas
adc
pop
ds
fiaddl
add
xchg
xchg
bound
mov
lock
push
testb
cmp
xor
fs
iret
pop
adc
inc
xchg
mov
in
jl
jns
nop
iret
mov
rcll
out
popf
mov
roll
dec
mov
test
int3
cltd
xchg
dec
sub
push
rcr
gs
int3
jae
test
mov
ljmp
lret
or
inc
adc
aaa
or
mov
mov
sar
dec
mov
mov
mov
aam
push
popf
push
imul
movsb
cmc
repnz
dec
sbb
out
fcomp
mov
cmc
pop
sub
mov
into
loopne
in
push
movb
cmp
negl
push
pop
push
ljmp
jae
mov
pusha
adc
or
and
ret
cwtl
popa
testb
outsb
push
gs
rclb
loope
cltd
dec
pop
int3
loopne
sub
pop
jl
mov
add
add
sub
dec
fwait
neg
enter
or
push
hlt
jl
ljmp
cmp
add
enter
sbb
push
add
fdivrl
jg
cmc
inc
xchg
pop
int
push
daa
sub
pmulhuw
pop
inc
xor
aas
lea
inc
sbb
sbb
dec
sbbb
roll
movsb
sbb
in
stos
jo
lcall
sub
mov
or
inc
cmp
leave
mov
xchg
pop
add
adc
jp
out
addr16
test
xchg
and
fbstp
xchg
test
call
subl
sarb
lods
pop
mov
or
xor
jmp
adc
jns
popf
mov
rcrb
sbb
sub
adc
bound
pop
test
repz
pushf
add
sub
and
cmp
shrl
subb
ss
cltd
and
sbb
dec
lods
mov
je
cmp
js
sahf
jge,pt
inc
xchg
xchg
mov
jno
shlb
cmp
cmp
bound
pop
mov
push
sbb
test
insb
mov
rcll
dec
push
scas
pop
inc
cld
gs
ret
adc
insl
and
adc
cmc
cli
je
bound
inc
add
sbbl
inc
rcrb
pop
dec
sbb
inc
xchg
sub
std
pop
out
jbe
jg
lods
aas
add
push
dec
xorb
in
xchg
or
dec
shlb
inc
push
rolb
lret
cmp
push
mov
push
test
test
in
xchg
jns
aam
je
adc
sub
stc
ret
and
xchg
mov
into
fs
dec
loope
push
sbb
lahf
xlat
inc
xchg
insl
or
mov
mov
pop
and
mov
sti
lret
sbb
add
movsl
icebp
pop
push
adc
jnp
pop
add
and
aam
and
push
stc
xchg
mov
nop
sar
mov
push
fildl
outsb
pop
lods
push
inc
inc
xor
sub
adc
lock
jbe
xor
cmc
mov
leave
addr16
sub
lock
xor
stos
inc
cmp
bound
movsl
in
scas
loop
je
cmc
daa
adc
in
add
mov
addr16
adc
mov
fwait
rcrl
ds
xchg
test
mov
cwtl
mov
outsl
and
push
idivl
leave
mov
stc
leave
stos
sbb
and
dec
notb
jmp
xorb
jbe
test
subps
mov
add
add
push
xchg
mov
or
imul
movsb
clc
scas
aad
jns
mov
and
sbb
cltd
or
pop
fistpl
jb
mov
xchg
stos
daa
adcl
sub
cld
pushf
mov
shrd
mov
pop
das
push
pop
push
pop
dec
not
pop
push
inc
fdivrs
mov
inc
cli
mov
pushf
mov
adc
in
inc
xchg
mov
addr16
xchg
pop
cmpsb
push
jle
test
repz
scas
sbb
pop
stc
cmpsl
outsb
push
inc
lds
xchg
pop
fwait
dec
jb
mov
test
xorl
jle
mov
outsb
jle
in
test
add
sub
ret
outsb
enter
fstps
bound
adc
pop
fnstenv
scas
loope
jns
sub
dec
stc
add
out
pop
xchg
out
cmpsb
and
loope
jns
loope
inc
popf
jp
sub
enter
fisttps
jb
testl
mov
inc
push
xrelease
stos
inc
cmp
pop
inc
enter
push
cld
lock
dec
push
xchg
adc
add
cmp
cltd
dec
add
cld
dec
inc
mov
mov
and
xchg
lods
cmp
fsubl
and
fistpl
ret
jae
xor
fsts
pop
addr16
fdivrl
imul
inc
pop
or
cmp
into
and
push
in
stc
push
aas
or
testl
daa
pusha
stc
fcmovu
pop
push
mov
lret
jae
sub
andb
mov
mov
pop
and
sbb
adc
mov
jmp
fnsave
xchg
sub
xor
jl
lahf
dec
lret
std
mov
jmp
xchg
sub
xchg
movsb
std
jnp
pop
adc
lret
mov
das
sbb
jmp
inc
in
scas
fcmovb
ficoms
mov
out
repnz
xchg
out
mov
adc
dec
out
xorl
push
xchg
mov
inc
repz
mov
negl
pop
icebp
negb
repnz
or
popf
les
push
outsl
sbb
aas
push
cmp
and
sbb
sbb
xor
pop
adc
mov
iret
inc
pop
lret
ret
or
lahf
jge
sti
pushf
inc
xor
imull
cmp
push
mov
aaa
push
test
les
sub
add
fcmovne
lcall
push
cmp
sbb
les
inc
mov
xchg
cmp
lea
les
push
fs
stc
aaa
dec
in
jne
pop
pop
xor
jl
push
push
or
push
xchg
lds
repnz
in
cmp
sub
pop
loope
push
movsb
pop
int
push
inc
shll
faddl
dec
bound
and
push
mov
mov
sarb
aas
aam
data16
out
es
aaa
sbb
pop
mov
or
pop
into
cmpsl
ljmp
and
push
ret
cld
iret
mulb
stc
repnz
rorb
pop
inc
ror
lret
inc
and
pop
les
mov
inc
insl
xor
jmp
les
or
mov
and
bndstx
imul
or
and
pop
cmp
or
mov
addr16
push
in
scas
xor
jl
jl
ds
into
out
movsl
pop
adc
cmc
and
jnp
jnp
add
pusha
jns
cmp
push
lds
loope
or
movsb
pop
out
loop
or
sbb
call
data16
sbb
pop
jg
cmp
mov
pop
repnz
and
sub
roll
mov
push
fs
mov
jbe
inc
cmp
jb
mov
cmp
sub
outsb
shrb
lea
mov
fs
sub
in
aaa
lahf
xchg
stos
fwait
xchg
mov
pushf
aad
jle
js
adc
mov
orl
push
adc
pop
fimuls
pusha
dec
xchg
push
mov
sub
xchg
jp
das
mov
lods
cmp
push
hlt
jmp
out
inc
mov
fsubrs
shl
jge
outsb
and
scas
or
andl
mov
jo
test
mov
std
in
adc
pop
push
mov
pop
lret
stos
mov
sub
mov
or
nop
sbb
inc
data16
mov
scas
sub
xchg
jae
cmc
push
sbb
pushf
sub
stos
xor
fsubl
jle
iret
jo
or
mov
data16
cmpsl
xchg
shrb
push
mov
xor
and
mov
out
jg
ljmp
data16
and
jle
pop
inc
xchg
push
cs
pop
movsb
jbe
ret
loope
shlb
push
lea
mov
cmp
loope
jno
mov
rclb
pop
ja
push
inc
push
or
in
and
xchg
jg
out
jno
fs
and
test
aam
xchg
inc
rcrl
ss
lahf
addl
inc
xchg
into
pop
push
jp
lock
call
std
xor
and
decl
pop
loop
jns
push
or
das
fidivrl
das
out
jl
mov
lods
icebp
stos
popa
in
sbb
bswap
out
jns
pop
das
std
ret
insb
cmpsb
shlb
sbb
xchg
adc
cmp
mov
or
fwait
sti
mov
in
dec
lea
cmp
mov
bound
outsl
push
cmc
cmp
mov
pop
pop
aam
idivb
add
xor
int
pop
stos
mov
sbb
shrb
cmp
jne
movsl
sbb
pop
popa
je
dec
xor
mov
sti
loop
ss
cmp
jge
jmp
mov
fstpt
mov
pop
out
jmp
pop
and
daa
fnstcw
fisttps
leave
ja
adc
adc
pusha
pop
nop
int3
inc
dec
jmp
call
imul
dec
xchg
xor
push
aam
mov
sbb
shlb
fiaddl
pop
sub
push
xchg
mov
xchg
mov
decb
pop
sub
or
jmp
arpl
fists
sub
and
jo
inc
cmp
loop
sbb
fcoml
out
inc
lcall
cmp
mov
jmp
jl
call
add
pop
shrl
fcoms
cmovo
cmp
dec
cmp
hlt
cmc
faddp
mov
in
mov
jg
fwait
sbb
arpl
mov
into
inc
clc
jbe
out
mov
sub
aaa
out
addr16
daa
and
push
test
lods
loop
lea
js
out
or
je
fdivr
cmp
adc
add
inc
sbb
ficompl
stos
mov
cltd
movsb
repz
dec
or
xor
push
fcom
mov
jle
jo
dec
pop
les
jb
push
push
adc
adc
xchg
fldcw
aas
in
repnz
ss
addr16
into
lods
mov
jle
das
lahf
push
shr
and
enter
jns
stc
inc
adc
push
inc
mov
mov
call
sahf
jns
js
loopne
push
mov
jp
arpl
pushl
jno
xor
jmp
xlat
xor
shlb
inc
add
mov
fldenv
pop
xor
insb
fcoml
setns
pop
cmpsb
les
in
inc
add
push
push
mov
push
and
push
int3
inc
insl
add
cmp
andb
out
cmc
dec
loopne
and
mov
xchg
xor
jmp
adc
mov
cmp
fcomip
subb
and
sbb
fldenv
jmp
adc
xchg
inc
inc
xlat
divb
hlt
and
add
pop
fldenv
imul
or
xchg
in
pushf
add
push
ds
fs
sbb
add
sbbb
and
xchg
popf
cmp
xchg
xchg
rcrb
ljmp
inc
fcoms
pop
lcall
cmp
push
dec
out
sbb
pop
add
jge
push
enter
stos
push
clc
xchg
mov
in
shrb
lods
sti
jno
pop
inc
cld
xchg
sbb
jbe
dec
or
sub
mov
loop
push
fisubrs
xor
and
add
movsb
sub
lret
mov
fstpl
sub
and
cmp
outsl
subl
sub
xor
cmp
jge
fisttps
out
test
push
rcl
movsl
decl
loopne
mov
push
jmp
fnsave
cmp
inc
add
jmp
xor
push
movsb
mov
jae
mov
dec
popa
push
or
fnsave
sub
into
and
cmp
and
data16
xor
ss
jg
aaa
in
and
sahf
mov
push
dec
es
das
push
stos
or
sub
xchg
cmc
aaa
decb
data16
xchg
cs
out
pusha
loop
jmp
xor
repnz
dec
cs
pop
dec
xchg
scas
mov
mov
jg
cmp
jmp
cmpsl
xchg
movsl
dec
stos
cmc
testl
push
int3
mov
movsb
mov
fidivrl
push
test
dec
mov
cmp
jne
clc
mov
repnz
xchg
xchg
xchg
out
call
stos
fildl
xor
ficoml
mulb
andb
es
mov
fcmovne
cwtl
jmp
fisttps
in
xor
divb
std
loop
aaa
xchg
mov
js
pop
xorl
fstl
leave
int
adc
in
sub
cmpsl
test
mov
enter
dec
add
mov
add
fsubrl
and
jno
xchg
int
out
and
cmp
mov
dec
aam
cmp
add
adc
fnstenv
push
orl
and
aad
mov
add
sbb
cmp
ret
jne
out
push
adc
push
popa
and
lahf
sbb
nop
cwtl
push
movsl
shrw
inc
loopne
adc
hlt
sbb
movl
inc
test
mov
mov
fmuls
adc
cvtps2pi
xchg
jae
dec
adc
les
ret
popf
mov
inc
or
add
sbb
repnz
sub
leave
lock
mov
les
or
dec
adc
add
pushf
xor
movsb
cmp
mov
outsl
xchg
add
adc
and
jns
aaa
mov
hlt
mov
out
clc
test
mov
jmp
arpl
ds
outsl
push
mov
mov
fwait
lcall
xor
mov
mov
adc
and
cmp
jb
sahf
or
inc
push
fmul
xchg
xchg
push
into
jmp
lret
and
or
js
jecxz
out
xchg
fisttpll
in
pop
ret
adc
cwtl
jl
inc
sub
jmp
push
add
xchg
fldt
iret
and
xor
xchg
xor
xchg
iret
loopne
outsb
in
ljmp
sub
push
or
push
lcall
cmpsl
mov
push
jo
adc
or
lahf
insl
push
push
in
push
and
mov
or
lcall
and
imul
testb
in
and
mov
dec
rclb
cs
imul
xchg
jb
shrb
add
sbb
push
pop
ret
shrl
inc
jg
cmp
mov
and
dec
mov
jg
bound
pop
fwait
dec
test
adc
adc
loope
fmul
aad
dec
cmp
cmp
ja
aad
inc
loop
addr16
dec
or
pop
loope
add
cmpsb
fcmovnb
pop
shlb
mov
xlat
cmp
andl
insb
mov
bswap
test
enter
mov
insl
xlat
aaa
or
cmpsl
cs
push
and
out
clc
out
mov
jecxz
sub
sbb
inc
dec
cmpsb
cmpsb
jmp
sti
add
pop
icebp
addr16
mov
mov
xchg
pop
push
push
ja
sub
jns
jnp
or
jl
jno
add
xchg
cmpsl
nop
popf
adc
push
adc
inc
out
adc
in
adc
cmp
add
popf
loopne
mov
sbb
ror
or
push
je
jbe
repnz
in
icebp
cmp
or
scas
push
lahf
jnp
xor
jnp
push
pushf
mov
call
fisttpl
lods
loope
jl
adc
cmpsl
jo
inc
mov
scas
adc
stos
movsb
in
cld
push
mov
in
cs
jns
mov
mov
mov
stos
xor
sub
cwtl
xor
mov
and
lods
clc
pop
add
add
or
shll
mov
push
xor
sbb
stos
insl
rolb
cmp
xchg
mov
call
jno
and
cld
shlb
addb
mov
jge
jp
je
xchg
jmp
mov
addr16
or
imul
aam
out
mov
xor
in
and
cmp
insb
pop
andb
or
mov
addr16
movsb
out
rolb
jl
jae
rorb
sbb
aam
loop
inc
mov
and
jmp
and
js
stc
inc
mov
lods
ds
cwtl
in
jmp
sbb
fadds
loope
out
xlat
cmpsb
cwtl
ret
pop
mov
jmp
movsl
mov
out
mov
fdivl
or
add
cmp
sub
lret
popl
cld
lods
push
std
mov
ds
cmp
mov
or
icebp
mov
and
cmp
nop
pop
push
add
ljmp
add
shr
iret
cmp
ja
dec
inc
add
data16
inc
out
jns
add
pusha
stos
dec
ss
jp
scas
xlat
sub
popf
gs
dec
ficoms
xchg
cmp
cmpsb
jmp
lods
xchg
rcrb
cmp
fisubs
jecxz
ret
cmp
bound
mov
pusha
test
xchg
pop
cltd
sub
addl
mov
mov
jne
cltd
pop
mov
nop
lret
xchg
sti
mov
push
cld
adc
cltd
popa
sti
insb
lock
push
cs
ljmp
ds
sbb
sbb
stos
in
adc
cmp
dec
out
xchg
dec
adc
xor
push
std
aam
test
pop
jp
xchg
cld
mov
shlb
inc
push
testl
xchg
inc
jne
fs
mov
xchg
add
push
nop
or
cltd
inc
xchg
int3
sub
daa
cli
lods
cmp
mov
neg
rcrl
cmpsb
jno
mov
insl
push
sub
or
daa
addb
mov
cwtl
dec
xchg
in
pop
rclb
push
add
push
pop
cmp
ljmp
in
xchg
push
in
mov
mov
iret
push
mov
insl
sub
jmp
enter
stos
cmp
push
lods
mov
push
rol
hlt
jp
mov
jp
and
push
sbb
push
scas
popf
and
add
ret
jp
xchg
insl
inc
dec
sbb
daa
stos
xchg
push
xor
ret
push
sub
sahf
xor
cwtl
gs
lcall
mov
push
pushf
in
dec
rorl
pop
push
cltd
call
fidivrs
pop
stc
mov
push
or
fcomps
fnstsw
mov
roll
push
xchg
mov
mov
mov
ja
rolb
adc
enter
shll
cwtl
xchg
idiv
push
test
test
sti
lea
stos
js
xor
jae
call
outsb
jb
mov
xchg
pop
inc
ljmp
imul
ja
adc
and
rorb
sub
inc
xchg
xchg
push
loopne
pushf
jmp
pop
movl
mov
jo
cmpsb
mov
cli
and
repz
sti
shrb
fstl
hlt
cmp
in
clc
jnp
add
add
test
int
push
mov
popa
pushf
mov
jle
mov
jp
cmpsl
adc
cmp
sbb
xchg
sbb
xchg
out
rorb
mov
not
cmp
xchg
sub
push
movsb
pop
scas
and
pop
cmc
and
lahf
pop
dec
or
hlt
addr16
clc
jmp
loope
sub
push
push
jle
fwait
cmp
adc
pop
pop
je
sub
movsb
sbb
shrb
pop
and
test
shl
pushf
sti
call
push
lcall
pop
add
add
cmp
adc
or
xchg
lods
nop
dec
pop
xor
inc
cmp
scas
scas
sub
mov
daa
mov
add
testb
jb
fsubrl
jno
repnz
hlt
lds
popf
out
filds
movsb
jp
gs
jecxz
jmp
in
or
iret
jmp
not
mov
lret
aaa
cwtl
jecxz
sub
add
fisttpl
or
ss
imul
add
in
xchg
iret
jne
repz
add
enter
lods
int3
push
sbb
push
and
dec
sbb
sbbb
mov
adc
fmuls
adc
mov
sbb
dec
rcrb
int3
inc
cmp
es
fcmovnu
xchg
imul
in
pop
imul
dec
pop
push
lea
inc
das
aad
pop
into
jb
sbb
call
add
cmp
add
lret
or
push
bound
add
out
jp
inc
push
pop
xchg
pop
outsl
insl
add
cltd
out
dec
imul
sbb
leave
inc
cmpsb
pop
pop
pushf
xor
dec
adc
sbb
icebp
test
adc
mov
pop
push
xchg
stc
int
cli
ljmp
ljmp
or
imul
mov
pusha
mov
mov
and
stos
xlat
or
in
sub
dec
push
mov
lahf
inc
adc
leave
xor
inc
push
fistpll
fs
hlt
jle
cwtl
sbb
add
inc
push
jecxz
mov
or
out
ret
jmp
push
negb
inc
in
popf
arpl
push
cltd
and
add
jno
adc
data16
mov
lea
in
divl
pushf
call
add
rcr
inc
sbb
add
mov
mov
dec
jp
aad
outsb
daa
ret
es
jl
push
dec
jns
bound
in
repnz
pop
addr16
insb
pop
sub
jo
test
xor
inc
pusha
imul
mov
or
push
pusha
jecxz
jg
insl
fstps
xor
dec
xchg
and
popa
xchg
fmul
fisttpll
test
and
sub
mov
push
or
xor
rorl
call
fimuls
add
cmp
adc
cmpsb
ljmp
out
jnp
xor
rorl
cwtl
jl
std
or
add
mov
movsl
or
in
das
imul
cld
pmuludq
addr16
xchg
sbb
sbb
mov
in
adc
outsl
mul
or
and
mov
cmpsb
sub
mov
scas
test
push
inc
add
jae
pop
xchg
xor
jne
mov
mov
cmpsb
mov
imul
and
and
shll
popf
lds
inc
in
push
sarl
pop
push
pop
dec
pop
sahf
test
mov
adc
rcrb
loope
cmp
xchg
cli
and
pop
enter
outsl
ds
icebp
pusha
aad
jno
dec
mov
fldt
scas
dec
cmp
cld
aaa
or
mov
or
sti
cmp
mov
mov
mov
jo
mov
sbb
jne
outsb
cld
cmpsl
mov
dec
lcall
pushf
xchg
out
cli
cmpl
fwait
cwtl
pusha
cmc
dec
push
mov
mov
inc
test
cmpsl
lret
push
ss
jle
ror
push
mull
sbb
ss
test
lods
outsb
ja
pmulhw
dec
addr16
ret
lods
adc
mov
and
cli
fcmovbe
loope
in
push
mov
mov
nop
int3
cmp
shl
sbb
js
jge
lcall
test
and
pusha
push
xor
sub
aam
pushf
insl
sub
sbb
das
and
fisttps
loopne
es
pop
fisttpll
sbb
je
jecxz
push
jp
ret
xor
out
pop
adc
push
ds
sti
or
cmp
pcmpgtw
not
xor
lcall
inc
lea
idivl
add
loop
outsb
cmpsl
lods
ds
or
pop
push
jecxz
push
jge
arpl
les
sarb
mov
mov
mov
push
xchg
xor
ljmp
fidivrl
xor
shll
xor
mov
adc
iret
scas
dec
flds
pushf
loopne
sbb
shll
aas
add
push
outsl
in
loope
add
fmuls
ret
std
adc
mov
dec
sub
iret
dec
inc
scas
cmp
jge
push
inc
cmpsl
cmp
sbb
loopne
cld
ret
lods
lods
sub
lcall
out
lcall
lods
sub
push
stos
mov
pusha
test
mov
arpl
mov
stos
mov
in
ja
lods
repnz
xchg
lods
aaa
adc
push
out
jmp
sahf
add
mov
sbbl
mov
push
dec
stos
fldl
dec
add
or
pop
or
nop
dec
lea
push
out
sahf
mov
push
pop
inc
inc
test
std
xor
xchg
adc
aas
ljmp
add
push
mov
inc
out
mov
mov
xor
mov
arpl
mov
pushf
inc
ret
jno
push
push
mov
sbb
dec
xchg
sub
jle
xchg
inc
aad
cmp
xchg
out
inc
andl
jmp
scas
idiv
xorb
mov
decl
mov
jne
adc
and
sbb
fs
lock
sbb
iret
aas
shlb
in
ret
dec
add
sahf
jp
jmp
mov
loop
dec
subb
sub
test
cmp
xchg
dec
fcom
test
insb
sbb
pusha
iret
jle
scas
mov
bound
and
sub
popa
lods
cwtl
dec
in
push
gs
jg
std
loope
push
jl
mov
ja
push
jecxz
push
mov
jg
and
fldl2e
dec
loop
dec
mov
scas
outsl
popa
std
sub
test
das
test
or
pushf
sub
pop
xor
sahf
enter
xchg
mov
sbb
fstpl
jle
dec
inc
stos
shrb
gs
std
mov
clc
stos
jecxz
cltd
lods
mov
pop
xchg
mul
roll
orl
call
sub
and
out
popa
das
and
ljmp
repnz
rorl
bound
mov
out
mov
jns
rcrb
mov
jmp
mov
scas
loopne
js
jmp
fwait
mov
aas
popa
push
sbb
daa
lea
scas
fnsave
mov
sub
nop
es
mov
push
lods
inc
cmc
into
cmp
cmpsl
pop
mov
cmpsb
push
jne
repz
fwait
add
mov
notb
sbb
push
daa
lret
ds
xor
fistpl
xor
mov
dec
stos
clc
mov
and
subb
popf
xor
lahf
movsb
and
xchg
mov
mov
mul
jle
clc
loope
dec
aad
jb
mov
stc
inc
gs
jle
jmp
mov
je
sbb
aad
add
movb
stc
daa
aas
or
push
adc
ljmp
xor
nop
push
jp
lods
jo
fs
insl
mov
div
jb
outsb
in
add
pushf
aad
call
enter
mov
inc
lods
push
adc
jo,pn
mov
and
je
loopne
cmovl
rcrb
hlt
loopne
dec
cmp
or
inc
sub
jmp
mov
push
lahf
fs
xchg
pusha
mov
repnz
push
movsb
cmp
mov
sbb
add
mov
mov
sbb
pop
sbb
aad
jbe
cmp
iret
pslld
pcmpeqw
lcall
das
or
sbb
sarl
pop
imulb
mov
ret
mov
xlat
sbb
ficompl
or
dec
xchg
les
into
enter
dec
lret
outsl
lea
mov
jmp
mov
jmp
xchg
mov
dec
in
dec
jne
imul
jl
sub
mov
lahf
mov
mov
subl
jl
pusha
xchg
mov
lret
shrl
dec
aam
or
adc
dec
sub
sbb
in
sub
cmpsl
fs
push
fldt
leave
push
arpl
mov
out
push
scas
jl
mov
mov
xlat
xor
and
xchg
jmp
xor
pop
mov
sub
addb
cmpsl
and
and
fists
pop
inc
popa
jno
push
test
dec
sub
movsl
xchg
xor
imul
sbb
out
sbb
hlt
cmp
pop
xor
outsl
pusha
sahf
adc
cmpsb
popf
lods
in
cmpsb
movsl
jae
loopne
pop
pop
sub
jg
mov
ret
sub
jp
mov
das
fcoml
mov
psraw
mov
and
pop
popa
sub
rorl
add
cld
outsl
ja
push
hlt
dec
pushf
shll
xor
repz
das
dec
and
inc
in
daa
push
xor
mov
cli
cmpsl
xchg
mov
and
xor
mov
push
iret
enter
or
adc
xor
mov
mov
imul
cwtl
ja
fadd
pop
shll
jb
dec
mov
inc
ffreep
fprem1
out
fdivrs
cmp
mov
xchg
aad
pop
leave
daa
mov
js
adc
xchg
dec
sahf
dec
scas
icebp
cmp
das
sbb
test
into
ss
adc
dec
pop
mov
repnz
adc
cli
cmp
imul
pop
rclb
mov
and
sub
sub
lds
out
pop
jbe
insl
mov
icebp
pop
mov
mov
sti
cmp
xchg
mov
add
inc
cmpl
mov
fwait
stos
mov
adc
mov
pop
inc
in
pop
push
sub
dec
testb
aad
es
mov
jmp
hlt
mov
jg
xor
lcall
movsl
and
into
sbb
ss
fwait
mov
or
in
pop
les
lret
insb
insb
cmp
xor
and
ljmp
popa
adc
int3
ljmp
loop
cmpsl
sub
adc
call
mov
pop
dec
cltd
jmp
xchg
pop
test
lahf
fsub
and
adc
push
mov
jne
pushw
inc
sub
cs
movsl
or
dec
adc
ja
inc
sub
test
andl
jns
lret
or
inc
mov
fchs
jmp
scas
push
push
shlb
sbbb
adc
xor
mov
in
mov
cmp
push
mov
outsl
decl
mov
repz
sti
xor
push
cmp
fcoms
push
fisttpll
push
dec
roll
or
xchg
sbb
imul
pop
pop
scas
shll
xchg
dec
cmpsb
out
nop
adc
pop
xor
inc
jne
mov
pop
add
incb
popa
lcall
adc
push
and
xchg
push
nop
int3
ds
jnp
int
gs
in
adc
cmpsl
lods
xchg
inc
sbb
mov
xor
lahf
pop
popa
hlt
nop
xor
xor
pop
or
mov
push
rcll
pop
cltd
movsb
pop
fidivl
imul
loope
pop
mov
or
pushf
in
sbbb
lea
adc
fldt
dec
pop
mov
dec
jno
pop
ss
movsl
testl
mov
maxps
data16
pop
aaa
cmp
sub
xor
adc
stos
jae
fs
sbb
sbb
and
adc
std
lock
sbb
outsl
aad
xor
pop
sub
ds
push
fisubs
xchg
dec
or
or
jns
lret
ljmp
test
and
lret
dec
sarb
cmp
push
rcll
add
xchg
jg
mov
pop
inc
and
dec
xchg
inc
imul
push
in
cmp
sub
fs
push
mov
mov
sbb
mov
sub
movsl
repnz
push
arpl
sbb
add
xor
inc
sub
out
cmp
cltd
lds
mov
je
shrl
sub
movsl
jb
sub
jle
and
or
push
shll
push
mov
push
popa
pop
repz
push
push
mov
push
roll
leave
sbb
ja
dec
jae
shrl
inc
dec
mov
sbb
sub
push
push
add
xor
jns
mov
pushf
xlat
out
and
clts
movsl
test
or
subl
sub
jne
mov
add
int3
fs
xchg
pusha
inc
sub
mov
cmp
push
or
adcb
scas
mov
stos
es
pop
add
test
adc
mov
gs
inc
bound
jge
daa
mov
out
mov
aaa
imul
adc
lods
push
push
inc
loope
stc
pusha
mov
mov
adc
mov
es
or
pop
cli
lret
adc
call
movsb
aaa
xor
outsb
fisttps
aad
cwtl
add
sbb
push
inc
push
xor
test
mov
push
jg
jmp
leave
sbb
jl
shrl
imul
cmp
jle
jbe
ss
fstps
inc
adc
cmp
and
sbb
sti
enter
idivb
fsubs
jbe
enter
sbb
scas
or
lcall
or
push
mov
outsl
cmp
inc
and
sbb
jo
shrb
xor
lock
cmc
sub
adc
adc
cld
pop
loopne
mov
mov
inc
pop
mov
jb
inc
xlat
fs
mov
lahf
xchg
scas
pop
ljmp
fcompl
fsubrs
add
out
das
pop
mov
cmp
shll
push
test
popf
inc
cs
or
mov
mov
jmp
cli
test
pop
cwtl
loopne
push
std
push
cli
pusha
fistpll
cmpsl
pmovmskb
cmp
test
rol
jno
add
and
cwtl
call
or
push
fisubrl
mov
mov
pop
xor
mov
jns
pusha
neg
cmp
out
push
mov
out
hlt
push
faddp
cmp
mov
pop
shr
add
stos
push
dec
lock
ljmp
test
cmc
jbe
cmc
pop
or
aam
mov
or
and
sbb
xor
jecxz
dec
add
int3
and
inc
inc
cmp
jnp
push
fsts
test
jecxz
imull
push
rcr
fisttpl
in
das
pop
dec
in
pop
cmp
inc
es
pop
push
pop
addr16
sbb
and
das
xor
pop
mov
mov
cmpsl
das
out
inc
pop
aam
push
ss
divb
les
and
jns
jp
out
xchg
mov
dec
inc
jp
cmp
pop
sub
out
rorl
loope
inc
push
sub
push
add
or
xor
inc
cmc
cltd
or
fistpl
xchg
push
pop
stos
xchg
dec
add
push
inc
repz
aam
inc
mov
rorl
addl
jb
test
xchg
push
cmpl
nop
inc
xchg
and
push
imul
fnstenv
sbb
push
movsb
icebp
sub
sbbl
xor
lds
pop
add
mov
and
aam
icebp
jns
jmp
adcl
sbb
lods
mov
iret
jne
cmpsb
inc
cwtl
push
in
adc
sub
mov
mov
push
pop
pop
data16
pop
jmp
lahf
jl
push
cmc
inc
sub
inc
lret
jmp
dec
popf
insb
push
pop
add
cmp
std
dec
cmp
jl
lahf
ss
sub
fs
adc
sub
out
ja
cs
movsb
pand
jmp
jae
push
mov
mov
push
mov
inc
mov
xchg
mov
jl
daa
sbb
xchg
xor
shlb
mov
lock
cmp
sarb
jbe
mov
xchg
cmp
stc
push
rclb
sub
lds
fwait
sti
aaa
push
fimuls
dec
mov
out
dec
xor
xor
jl
vminss
pop
mov
and
mov
xlat
or
data16
out
mov
mov
stos
cmp
shl
lcall
jbe
push
test
movl
or
fldcw
pop
sbb
dec
sbb
jmp
in
jle
mov
es
mov
sub
in
das
mov
jl
lcall
rorb
ret
jnp
data16
mov
adc
dec
or
dec
shlb
xor
orl
ljmp
pop
or
cmpsl
push
cmc
popf
in
fcompl
mov
mov
push
aam
mov
pop
add
jbe
mov
movsl
cmp
int3
xchg
push
movb
imul
in
mov
adcb
cltd
lea
cli
jmp
xor
imul
out
sub
mov
xchg
mov
sub
xchg
out
cmp
scas
aaa
add
sbb
fisttpl
fldenv
add
out
or
xor
sbb
mov
loope
gs
cwtl
dec
iret
push
mov
imul
or
outsb
repnz
inc
inc
mov
jl
int
in
das
into
scas
sysenter
inc
stos
jns
popa
pop
pop
and
cmp
and
in
testl
adc
cmp
in
fwait
dec
mov
out
stc
insb
sahf
add
test
and
xor
cmp
adc
push
nop
or
mov
sbb
xor
xchg
rorl
dec
ja
sub
pop
jbe
fsts
lds
jg
pop
aaa
setno
xadd
push
leave
sub
fidivl
movsl
pop
rorb
xchg
adc
adc
sti
ret
fnsave
mov
fsubs
sub
lods
enter
mov
cmp
dec
inc
bound
push
mov
lods
adc
adc
jb
and
je
jno
mov
nop
shlb
mov
xor
sub
mov
rcll
hlt
scas
or
cwtl
cmp
push
in
lods
int
sti
sti
repz
aas
mov
xor
cwtl
lea
push
push
and
inc
test
or
in
cmp
sbb
shll
jbe
jne
push
dec
xchg
push
or
inc
addb
repnz
not
lcall
push
decl
js
enter
adc
addr16
jo
cltd
xchg
lods
push
jae
sti
mov
jns
js
sbb
cmp
ss
popa
dec
add
mov
pushf
pop
inc
sbb
out
xor
xchg
mulb
in
jl
mov
jne
fwait
or
jne
decb
xor
push
loopne
repnz
nop
insl
jnp
lds
jo
or
das
cld
mov
mov
fs
rcrb
fnstcw
sbb
xor
push
pop
jae
bound
outsb
and
lret
dec
pop
push
add
fwait
adc
mov
add
lock
push
pusha
loope
sub
test
xchg
pop
or
push
mov
sub
mov
addr16
jns
inc
mov
sbb
popa
push
inc
xchg
mov
adc
lret
sub
pop
mov
lret
lahf
xchg
cmpsl
into
jmp
push
mov
in
inc
xchg
sub
repnz
cld
cmp
push
jo
sub
sbb
push
adc
mov
push
bound
stc
mov
push
cli
inc
cmpsb
mov
dec
popf
inc
pop
mov
push
orb
pop
inc
lods
gs
jne
cmp
pop
and
stos
lahf
jbe
lods
pop
shr
movsb
xor
outsb
aaa
pop
inc
out
jne
outsl
cmc
stos
out
test
loopne
mov
arpl
sub
imul
mov
add
sub
inc
inc
mov
and
jle
jnp
mov
test
movb
xchg
mov
mov
add
lahf
mov
pop
stos
gs
orl
cmp
xlat
mov
popf
xor
jecxz
mov
mov
lock
jmp
out
test
or
faddl
movsb
faddl
push
es
gs
das
hlt
lcall
jo
stc
adc
mov
decl
and
repz
adcl
daa
fbstp
popl
jmp
mov
mov
cmc
inc
les
dec
dec
or
sub
add
roll
out
nop
outsb
jb
pop
dec
xchg
pop
pusha
sarb
stos
push
addr16
int
mov
inc
and
mov
sub
inc
repz
sar
mov
mov
std
lods
cmc
mov
bound
sbb
call
imul
mov
pop
push
jmp
ret
lock
inc
daa
jge
and
add
test
les
mov
sbb
dec
lock
enter
shlb
cs
sbb
push
and
mov
and
in
es
stos
pusha
or
insb
fsubl
sbb
mov
mov
mov
pusha
sub
fwait
sbb
insb
mov
mov
das
scas
ret
adc
cltd
shll
xchg
jg
xor
ret
in
fs
pop
adc
enter
popa
mov
sub
outsl
xor
jne
pusha
andb
xchg
pop
insl
ret
jmp
call
js
mov
fdivs
or
cmp
cld
push
mov
mov
insb
mov
pop
cmpsb
cwtl
inc
in
inc
xor
imul
out
or
es
xchg
lcall
xchg
mov
cmpsb
les
je
testl
cli
pop
jg
cs
pop
ss
sub
arpl
xchg
cmp
pop
das
or
or
inc
lods
mov
sbbl
and
sahf
jne
aam
jle
mov
lods
cmc
adc
out
flds
push
xchg
ror
int
dec
and
fwait
fs
inc
cltd
daa
add
fstps
mov
scas
add
add
ljmp
sti
std
lret
inc
std
inc
mov
es
xor
jae
pushf
xor
out
xchg
sbb
lret
mov
pop
adc
xchg
ficoml
ret
dec
xchg
aaa
cmp
scas
imul
orl
adc
cli
sub
push
pop
ret
jbe
push
and
jg
jne
mov
pushl
or
mov
mov
gs
out
dec
fdivrl
shll
sub
cmp
lods
enter
xchg
push
mov
repz
sub
sbb
or
loop
add
roll
lret
je
ds
fcoml
sbb
arpl
fists
jge
xchg
pop
xorl
cld
outsl
loope
lcall
les
jg
mov
stos
cmp
jmp
cs
ja
ret
jmp
test
dec
es
mov
mov
in
push
lock
adc
mov
push
mov
cmpsb
xchg
and
in
test
gs
arpl
ss
jge
mov
mov
sbb
fbld
jecxz
xchg
lret
cld
lods
mov
push
dec
or
js
fsubl
jp
retw
xor
push
xchg
pop
or
cmp
push
cmp
scas
shrl
xchg
adc
jmp
add
pop
ja
and
push
insl
and
lret
mov
fidivrs
push
jo
clc
push
dec
bound
mov
cmp
ljmp
sbb
dec
scas
push
bound
popf
and
std
dec
sub
loop
sbbl
stos
jbe
mov
mov
sbb
ja
sub
fsubl
sbb
inc
sub
push
add
test
cmp
xchg
shll
jmp
jns
test
fnstenv
mov
xchg
pop
mov
lahf
cwtl
fs
mov
jmp
popf
fstpl
xchg
add
mov
jmp
adcb
or
test
imul
xor
pop
loop
push
in
xchg
mov
inc
fisubrs
fists
scas
xchg
and
sub
push
cld
fsubp
sbb
cmp
pop
out
add
adc
loopne
vaddsubpd
pop
mov
adc
out
and
outsb
test
lret
movsl
aas
jp
faddp
jo
cmpsl
push
lods
stc
cs
xor
jbe
xchg
in
mov
push
mov
pop
push
int
mov
imul
xchg
mov
rclb
loope
pop
dec
mov
xor
ret
nop
mov
adc
sbb
mov
hlt
push
dec
jb
ja
lea
cmp
push
into
lods
in
int
fdivl
inc
push
mov
dec
mov
ror
test
or
xchg
in
ja
test
push
jge
sti
daa
insl
test
pop
xor
out
lea
and
je
mov
cmp
mov
sbb
insl
xor
push
repnz
or
rol
sbb
push
mov
inc
xchg
mov
and
jns
mov
popf
out
arpl
inc
sti
add
mov
sbb
add
jae
lods
pop
fildl
dec
movl
mov
mov
sub
mov
cmp
adc
test
mov
jae
loope
fistl
das
mov
repnz
inc
es
dec
in
mov
fwait
ljmp
mov
cmc
add
xor
mov
je
test
jg
jmp
test
lret
or
xor
pop
sbb
and
xchg
fwait
pushl
cli
inc
shll
stc
pop
rolb
jno
push
cltd
je
popa
sbb
sub
mov
fdivr
and
fcoml
sbb
test
xchg
mov
sub
or
lods
jmp
sbb
in
out
sbb
mov
adc
xchg
jle
pop
xor
mov
mov
push
sahf
and
inc
or
shlb
outsb
in
cmpsb
je
pusha
inc
cmpsb
pop
iret
repnz
push
faddl
pop
lret
jns
inc
inc
call
movsl
cmp
cld
ret
shrb
push
mov
sbbl
iret
lock
cmpsl
inc
inc
ja
sbb
or
xchg
jle
jo
shrl
clc
dec
and
jno
jmp
jg
xor
adc
cli
insl
jns
sub
pop
add
lea
jbe
push
mov
inc
inc
jae
push
sahf
test
push
stos
sbb
les
nop
loop
jo
and
mov
jmp
fcmovu
cmp
xor
data16
test
inc
stc
ficoms
pop
inc
xor
lea
dec
cmpsb
inc
fucomip
lcall
mov
inc
push
fistpll
movsb
in
jg
and
cmp
rcrl
jecxz
out
clc
mov
cs
ret
call
std
pusha
enter
int
lret
fidivrl
mov
stc
add
inc
sbb
popa
mov
or
push
jmp
cmp
gs
into
inc
hlt
add
imul
popf
add
pusha
mov
mov
mov
sar
jbe
or
out
cmp
jmp
out
push
cmp
lahf
adc
sbb
mov
xchg
cmp
loope
inc
push
jle
mov
data16
jae
sbb
imul
dec
leave
and
mov
add
push
jecxz
inc
mov
and
movsb
jge
arpl
push
es
pop
cwtl
popa
int
add
scas
mov
fstps
jmp
aas
jo
push
cmpsl
push
xor
dec
ljmp
jle
cmc
mov
test
mov
dec
inc
in
lock
sub
jge
in
je
lods
rorl
add
sub
jmp
data16
notl
movl
sbb
xor
fiaddl
xlat
sub
test
jno
in
insb
cmp
mov
sub
insl
cmc
lcall
jb
shlb
cmp
lret
hlt
cmp
dec
and
or
add
clc
sub
jle
lahf
ret
and
pop
std
bound
in
mov
sarl
mov
jb
test
pop
xchg
jle
or
aad
idivl
xor
mov
sar
xchg
xchg
dec
mov
cmc
cmp
push
sub
lret
cmp
mov
mov
pop
arpl
pop
clc
push
and
in
sbb
xchg
and
stos
ljmp
and
inc
mov
sti
out
mov
negl
dec
outsb
or
jp
mov
iret
pushf
std
mov
inc
xchg
lea
mov
inc
sub
cmpl
jnp
cld
jne
xchg
aam
lret
ljmp
jbe
imul
cmp
lods
mov
pop
test
dec
stos
inc
pop
aad
fisubrl
xlat
scas
aam
test
imul
adcb
shrb
cwtl
ret
sub
jbe
sub
inc
adc
gs
push
mov
stos
mov
push
loope
dec
icebp
and
add
add
cli
xchg
ret
cwtl
out
mov
scas
fidivl
and
and
cmp
sub
das
cmpsb
sub
xchg
inc
or
imul
pop
rcl
mov
jns
pop
sub
adc
mov
jecxz
inc
lock
bound
add
aam
xor
pop
and
ljmp
jg
push
popf
xor
pusha
sarl
out
xorb
sub
push
imull
dec
lret
jne
and
dec
scas
xchg
mov
sub
inc
mov
lods
call
aad
sub
fsts
pop
imul
adc
and
jmp
cmpsb
inc
lea
or
out
xlat
test
push
adc
daa
in
in
mov
repz
out
xor
xchg
insb
cmp
or
xchg
sbb
push
faddl
test
cld
dec
shrl
ss
fwait
inc
sbb
enter
cmpsl
mov
sarb
fsubl
or
rorb
mov
xor
sub
push
dec
std
stc
adc
subl
popa
mov
js
jp
sub
in
sarb
sbb
jo
fldt
jecxz
test
lods
inc
iret
mov
imul
jne
push
jno
or
cmc
inc
clc
and
hlt
shll
cmp
aaa
cs
sbbb
ss
dec
and
xchg
fcomps
mov
jl
in
push
mov
xchg
cmpsl
mov
negl
lcall
mov
add
movsl
je
iret
out
out
pushf
out
in
xlat
ljmp
rorl
mov
push
inc
push
dec
aam
and
cmp
mov
dec
aad
jno
pop
push
inc
mov
daa
adc
les
pop
in
incl
cmp
faddp
ds
xor
jmp
movsl
data16
arpl
add
lcall
in
ljmp
out
into
adc
loopne
test
cwtl
inc
add
test
push
xchg
xor
enter
dec
and
popa
and
aad
push
imul
sarl
cs
xor
in
gs
adc
sub
mov
mov
rolb
repnz
shrb
jle
sbb
xchg
lods
push
orb
decb
jb
inc
repnz
mov
nop
or
rcl
jg
gs
jne
jge
enter
push
pushf
jp
rclb
ror
testb
xchg
pop
out
push
mov
scas
cmp
loope
mov
inc
mov
mov
pop
mov
out
pop
test
adc
or
or
mov
in
pusha
adcl
xchg
addr16
xor
in
mov
pop
das
inc
cmpsb
nop
movb
mov
mov
add
sbb
jo
arpl
divl
movl
xor
jmp
xor
push
push
loop
aas
shr
pop
xor
inc
daa
sub
lods
cmp
push
mov
cwtl
mov
aad
fimull
cmpsl
lds
and
hlt
sbb
fcompl
les
xor
shrb
cmc
mov
push
mov
js
sti
dec
dec
jne
jbe
xchg
in
xchg
add
cmp
xor
push
xchg
repnz
icebp
jbe
sahf
jo
sub
fsts
ds
lods
aas
cwtl
xor
pop
sbb
mov
dec
icebp
aaa
inc
cmp
push
push
and
outsl
shrl
icebp
jle
push
mov
push
loope
sub
push
or
std
aas
mov
dec
pop
cwtl
mov
ds
add
sahf
stos
aas
jge
mov
pushf
ret
inc
add
in
xchg
cltd
adc
push
and
sub
sbb
sarl
insb
inc
sarb
daa
push
mov
cmp
pop
dec
out
cmc
pop
jecxz
pop
out
aas
rcrl
sbb
cltd
add
mov
sub
xchg
pop
gs
mov
pop
dec
test
sub
call
cmc
mov
cmp
pop
int3
mov
push
lock
or
aaa
nop
pop
mov
test
fwait
jmp
jle
adc
cmp
imul
mov
mov
mov
js
insl
in
insb
pop
cmc
push
les
mov
into
xor
sbb
push
fmull
xor
in
pop
mov
pop
insl
shll
dec
jmp
test
loope
sti
inc
jb
out
push
push
outsl
repz
fs
lcall
pop
bound
or
cmp
cmpl
and
mov
or
dec
xchg
mov
mov
nop
jbe
lds
out
jnp
cmpsl
aas
mov
negb
call
stos
loopne
xchg
cld
js
cmp
ficomps
js
inc
jbe
insb
aaa
mov
xchg
out
ret
aad
aad
mov
popf
add
outsb
fs
xor
imul
sbb
add
adc
dec
add
jae
pop
and
pop
add
or
xchg
push
lods
ret
leave
fwait
test
push
rol
aam
sbb
pop
mov
mov
push
scas
pop
out
in
inc
dec
movd
mov
aas
jo
daa
push
or
and
jbe
pop
loop
je
outsb
jno
mov
xor
add
enter
dec
pop
mov
iret
sbb
pop
sub
sub
push
stos
lods
mov
cmpsl
shll
add
xlat
int3
pushf
mov
inc
and
mov
ret
jecxz
flds
pop
fisubrs
adc
dec
lret
mov
xor
mov
push
stos
push
mov
inc
or
je
or
dec
dec
idiv
test
pshufw
jmp
lods
inc
pop
nop
push
les
inc
mov
add
orb
mov
movsb
xchg
jl
adc
lahf
mov
loopne
hlt
setge
push
push
repnz
enter
sbb
cmc
pop
aaa
inc
mov
inc
lret
jnp
adc
cmp
sbbb
jge
pusha
decb
jle
sub
mov
mov
leave
sub
test
jne
test
stc
stos
daa
test
jns
jg
adc
out
and
inc
push
cmp
lret
jb
sub
ja
jl
cmp
rclb
xor
cwtl
stc
xor
loope,pt
es
mov
loope
cmpsb
push
mov
cmp
ljmp
insl
mov
popa
sub
fcoml
xchg
out
add
insl
aaa
nop
ljmp
jp
jbe
cmpsl
cmp
pop
push
les
arpl
add
cli
into
std
into
mov
jae
sti
pop
add
push
xchg
sub
sub
jecxz
or
popf
movsl
jp
in
loop
sub
xor
clc
into
daa
add
xchg
sbb
and
sarl
cs
inc
mov
lcall
lods
cli
std
jmp
push
mov
sub
push
mov
rolb
popa
and
adc
xor
addl
test
add
or
aad
cltd
jo,pn
push
test
mov
push
movsb
cmpl
pop
dec
cltd
and
push
gs
arpl
cmp
mov
shll
jno
cli
mov
cltd
js
test
lret
or
int
dec
xor
in
jno
cmpsl
flds
pop
adcb
enter
pop
inc
mov
mov
ret
inc
sbb
mov
aad
sbb
sub
mov
pop
jge
lahf
fdivl
dec
int
jle
cmpsb
testl
sbb
pop
daa
pop
pop
orl
or
stos
divb
sbb
adc
sbb
mov
sbb
aaa
ja
call
insb
outsb
imul
test
mov
pop
inc
ja
cld
and
cltd
adcl
or
xor
sbb
and
lret
xor
push
dec
push
sub
addb
adc
ja
add
nop
test
or
roll
add
nop
sahf
add
frstor
sbb
xor
cmp
jmp
pushf
imul
gs
and
lcall
andb
gs
mov
mov
les
dec
ret
dec
xor
jp
fdiv
inc
xchg
aaa
mov
cmp
outsb
lods
push
dec
push
addr16
ret
mov
mov
xor
and
pop
das
and
push
imul
mov
sysenter
popf
fcmovnbe
xchg
sbbb
xor
xchg
jno
xor
fldz
xor
negl
xor
inc
imul
pop
repz
xchg
and
or
xor
push
insl
call
push
fs
add
mov
sub
dec
divb
mov
aas
jb
mov
inc
fldenv
repnz
aas
cli
ds
ret
les
mov
and
mov
add
imul
daa
push
pop
subl
jo
clc
adc
mov
imul
ret
xor
xchg
fistpl
sti
fstpl
gs
test
pop
call
sbb
jb
mov
add
mov
scas
mov
pop
cld
loop
xchg
mov
cli
inc
dec
adc
xor
add
sub
xor
jbe
repnz
jb
fisubl
or
push
cwtl
mov
aas
rcrl
jo
in
dec
push
and
outsl
test
pop
xchg
cmp
xchg
pavgw
dec
pop
lret
mov
aad
sbb
sbb
mov
and
jno
push
inc
test
sub
push
mov
repz
out
imul
cmp
call
loopne
ds
ja
lods
ds
shlb
mov
pop
dec
sahf
repz
andl
add
outsl
movsl
das
dec
ljmp
jne
inc
xchg
cmp
std
and
sti
andl
mov
adc
outsl
pop
shlb
adc
dec
ja
sti
ljmp
adc
jnp
fisubs
pop
cwtl
jge
clc
in
jno
das
or
cmp
pop
loope
mov
std
repnz
cltd
cwtl
repnz
inc
xchg
cmp
mov
and
cli
imul
mov
lret
add
pop
aas
inc
rorb
sbb
and
outsl
xchg
push
xor
add
or
xor
repz
ret
outsl
jo
mov
pushf
and
testl
mov
outsl
mulb
js
pop
ss
xchg
dec
jmp
cmp
pushf
rcrb
das
push
jno
in
repnz
in
or
mov
mov
inc
xchg
adc
lock
adc
test
in
and
jl
pop
xchg
mov
sbbl
pop
pop
mov
add
aam
setbe
mulb
inc
pop
inc
jmp
fwait
sub
xor
pop
cmpsb
test
xor
movb
lcall
inc
aam
into
rcll
in
shlb
mov
std
push
add
add
adc
outsl
push
fstl
cmpl
dec
sbb
lret
fdiv
aad
adc
ljmp
pop
mov
lahf
or
sbb
pop
mov
pop
push
sub
pop
rorl
push
data16
inc
repz
lock
rorl
xor
into
ficoml
stc
mov
arpl
pusha
sbb
dec
repnz
cmp
pop
or
jp
aas
cmpsl
pushf
sub
jns
in
rclb
and
cmp
test
and
fistpll
dec
aam
and
cmp
cmp
pop
ljmp
dec
pop
in
mov
pop
mov
sub
aas
daa
loope
lods
inc
xor
mov
lret
dec
push
or
xlat
stos
int3
rol
adcb
pop
add
dec
push
jecxz
out
pop
clc
cmp
iret
cmp
mov
lret
dec
cmc
mov
repz
in
mov
add
jl
push
mov
add
loope
dec
mov
fs
mov
movsl
mov
dec
ds
sub
and
andl
sbb
popf
cmp
adc
stos
mov
mov
xchg
out
pusha
leave
add
icebp
xchg
xchg
jne
imul
mov
push
jge
jg
push
fmuls
dec
jg
fimull
xchg
rclb
sub
push
xor
repnz
out
rcll
inc
mov
or
out
xor
fstpl
test
dec
cwtl
jle
fldl
jns
push
mov
mov
mov
fadds
add
insb
ja
mov
cmpsb
cld
loopne
stos
sub
inc
adc
cwtl
cmp
call
std
and
in
mov
mov
jecxz
call
mov
lret
push
add
adc
or
cltd
loop
std
jb
pop
loopne
add
jnp
jmp
xchg
imul
fists
mov
dec
pop
jge
popf
lea
pop
fldcw
cmc
fidivs
inc
enter
sub
xchg
xchg
push
js
adcl
loope
icebp
and
cli
shl
daa
xchg
adc
jno
xchg
xchg
sqrtps
dec
or
lahf
xor
fisubrl
lods
dec
dec
loop
mov
mov
std
dec
shll
jmp
iret
xchg
enter
and
adcl
pop
and
ja
daa
push
adc
cli
idivl
push
inc
sbb
mov
xor
adc
or
in
test
xchg
loop
mov
jg
jnp
or
xor
shlb
les
add
ja
mov
ljmp
xor
int3
mov
push
fstpl
clc
sub
insl
jb
push
sub
and
popa
lods
mov
outsb
mov
pop
fsts
mov
xor
hlt
lea
push
shlb
ret
inc
cmp
out
orb
cld
push
popa
aaa
push
and
sub
notb
sbb
or
lcall
pcmpeqd
sub
stc
mov
ret
sub
cmp
enter
mov
loopne
cli
xchg
pop
xchg
dec
lret
jge
jb
sub
xchg
pop
mov
xor
xchg
loop
lods
mov
ret
xor
sbb
mov
shl
out
mov
jae
push
scas
or
outsb
push
sub
iret
mov
les
jne
insb
pusha
sub
movsl
xor
jae
xlat
or
xchg
dec
out
dec
push
outsb
jmp
dec
loope
dec
sbb
or
jno
sbb
push
xchg
push
setno
mov
call
div
pusha
push
cmp
sahf
jl
mov
mov
pop
fstps
and
daa
sub
stos
test
adc
stos
push
cld
scas
dec
mov
cli
add
mov
cmp
sbb
int3
push
sbb
in
ror
pop
push
dec
cmp
les
test
lret
push
pop
outsb
push
dec
ja
ret
inc
mov
mov
out
sub
ds
sub
sbbl
movsb
gs
ret
push
cwtl
or
pop
int
test
sahf
mov
jbe
shll
pop
add
cli
add
mov
out
ss
push
xor
adc
mov
xor
mov
sbb
icebp
and
mov
out
mov
fnstenv
fidivrs
sbb
fistps
inc
fs
fldl
xor
push
push
and
and
push
ljmp
inc
jmp
pop
jo
fdivrl
cmp
cmp
xor
mov
mov
roll
mov
sub
aad
insl
mov
cmp
in
jle
jmp
fwait
sti
pop
insl
or
fdivs
leave
add
adc
xchg
pop
into
dec
inc
mov
sbb
arpl
mov
cld
lret
and
jmp
xchg
rcll
mov
mov
mov
sbbl
cwtl
jne
push
and
push
aas
mov
mov
push
pop
push
subl
fidivs
dec
mov
ret
push
mull
mov
mov
fidivl
mov
mov
cltd
xchg
sub
pop
dec
pop
push
cmpb
mov
cltd
mov
mov
xor
xchg
arpl
xor
shr
push
iret
fcompl
xchg
popf
addl
and
dec
popa
mov
mov
test
pop
rcrb
sahf
jo
shrl
pusha
jb
mov
sbb
mov
fistps
add
inc
dec
aas
cmpsl
in
jne
xchg
xchg
in
rclb
xchg
ret
mov
mov
or
xchg
cmpl
sub
cmp
inc
outsl
mov
mov
sahf
adc
xor
adc
sbb
bound
xlat
pushf
ficomps
getsec
in
pop
add
fwait
sahf
xchg
lock
shrl
mov
jmp
imul
out
shl
insl
out
movsl
sbb
mov
cmpsb
fimull
jbe
ret
dec
mov
sahf
adc
or
fnsetpm(287
ror
test
pushf
out
je
dec
into
mov
jnp
leave
pusha
pop
lret
hlt
cmpsb
scas
push
out
icebp
pushf
xor
mov
mov
ljmp
outsb
js
cmpsb
xchg
or
decl
or
mov
repnz
stc
or
outsb
sti
inc
iret
mov
xchg
stc
or
test
xor
ds
ficoms
in
movsb
sbb
xchg
jg
sbb
or
xor
jmp
dec
push
enter
mov
cmp
mov
sarl
sub
shll
jne
data16
push
pop
iret
xchg
push
lcall
xchg
repnz
jne
jmp
mov
sbb
mov
popf
push
xor
js
inc
imul
out
fstpl
dec
ss
in
xor
push
dec
jne
stos
frstor
adcb
fisubrs
cmp
nop
jle,pn
sub
andb
jns
dec
ja
jle
lcall
push
int3
fwait
addr16
cmp
push
add
jmp
movl
inc
mov
insb
call
test
out
not
out
jmp
icebp
ret
lods
jns
and
sti
jge
sub
leave
scas
sti
shlb
cmp
sahf
in
shll
mov
mov
jbe
nop
push
imull
arpl
mov
mov
pop
call
rolb
bound
or
adc
sbb
cltd
mov
test
data16
fcomp
inc
mov
das
mov
mov
xor
inc
in
push
mulb
xchg
or
adc
push
imul
pop
rorb
loopne
push
ljmp
je
sti
addl
cmp
cmp
xchg
mov
aam
sti
out
jl
xchg
loope
imul
lretw
adcb
pop
in
stos
ja
test
add
loopne
xchg
mov
xor
out
repz
imul
xchg
enter
movsb
leave
iret
cli
in
push
cmpsb
fidivl
icebp
push
and
dec
and
hlt
movsb
inc
sub
in
adcl
inc
repnz
add
dec
popa
je
push
mov
stos
test
sbb
cli
xchg
push
push
ret
daa
outsl
dec
push
mov
push
mov
fldl
pop
or
push
or
cwtl
stos
jge
and
mov
addr16
pop
jl
loopne
les
jmp
arpl
mov
or
into
sbb
stos
and
out
test
lods
cltd
mov
adc
outsb
add
mov
add
dec
cmp
pop
pop
clc
insl
xchg
cmpsl
popf
lcall
in
lahf
mov
and
jnp
push
and
cmp
pop
mov
push
and
loope
jmp
rorb
push
aad
adc
ljmp
test
adc
xchg
inc
pop
loope
dec
mov
xor
or
or
jae
mov
sub
adc
fwait
scas
lods
data16
add
mov
mov
aad
leave
fdivrl
pushf
movsl
ret
pop
mov
cmc
imull
xchg
scas
lods
cld
jl
mov
xchg
mov
loopne
and
cmpb
aaa
inc
push
inc
pusha
lods
popl
or
test
and
adc
push
test
push
cmpsb
push
out
pop
mov
sbb
inc
and
fwait
jl
mov
cmp
sti
aas
out
ficomps
std
xor
scas
xchg
leave
sar
sti
repnz
dec
loopne
sub
in
enter
andb
test
inc
pop
dec
mov
incb
and
xrelease
mov
jns
jb
cwtl
jle
and
ljmp
jns
or
rclb
dec
add
je
nop
sbb
aaa
mov
insl
cmp
daa
cmc
loope
pop
and
jo
imul
aas
lods
cltd
pop
inc
test
xorl
or
inc
fwait
imul
lcall
sub
xor
in
repnz
enter
sub
adc
jb
inc
xor
lods
ja
inc
pop
add
push
mov
roll
scas
frstor
push
xor
aaa
rcrl
mov
and
sub
ss
pop
mov
adc
int3
xor
add
mov
ficoms
and
dec
adc
push
xchg
sahf
sahf
dec
fsts
add
adc
xchg
bound
aad
or
test
xor
ljmp
call
xchg
adc
iret
ret
jbe
xchg
rolb
xchg
jge
shrb
testb
je
hlt
movsl
outsl
roll
les
je
das
inc
sbb
lods
push
fstpl
out
jmp
test
push
jg
xchg
mov
lret
pop
dec
inc
out
mov
adc
and
mov
xor
adc
jge
mov
push
lcall
int3
xor
test
and
sub
mov
insl
aaa
jmp
add
sti
sarl
push
lcall
ja
les
fmuls
leave
pop
in
cmp
in
and
jb
popf
popf
lods
push
jae
testb
sub
mov
push
fs
int
dec
jns
movsb
rorb
fnsave
or
or
rorb
cld
jp
mov
pop
sbb
mov
xor
inc
loope
out
into
and
mov
inc
mov
cmp
bound
inc
xchg
imul
stc
or
shlb
std
das
inc
pop
jne
gs
push
or
xchg
stc
lahf
addr16
jle
stc
fisttps
xor
mov
xchg
mov
mov
in
repnz
pushf
mov
jle
xor
js
pop
fnsave
inc
xor
jmp
fwait
notb
mov
jmp
loop
stc
push
inc
push
and
dec
add
xor
cmpsl
sti
xchg
nop
push
jl
or
cmp
scas
fwait
lods
xbegin
les
cs
add
fnstenv
inc
cmpsb
cmp
lcall
pop
test
daa
ret
addb
and
pusha
add
adc
mov
popf
xchg
dec
insb
ljmp
xchg
mov
and
ret
shlb
fwait
movsl
jle
cld
pop
push
sub
pop
adc
insl
sub
aas
mov
andb
lcall
push
nop
inc
xor
aam
pop
jbe
add
nop
and
push
pop
ss
xor
push
push
insl
pop
sub
inc
int3
sub
or
pusha
lods
add
dec
cmpsb
iret
push
lods
xchg
enter
adc
pop
xlat
jmp
push
pop
adc
loop
add
pop
xchg
std
roll
and
repz
or
call
popf
out
xchg
jbe
mov
test
scas
repnz
mov
shll
imul
ret
pop
pop
xbegin
or
imul
rcrb
les
push
jl
loop
push
push
in
adc
push
out
dec
mov
adc
xchg
int3
add
dec
mov
mov
pop
mov
mov
pusha
mov
or
lcall
insl
fcom
insb
nop
jnp
int3
jb
xorb
cmc
xor
sbb
jmp
hlt
iret
lret
sbb
or
mov
int3
cld
sub
jl
push
clc
ss
mov
rclb
push
fisubrs
sti
call
in
sbb
xchg
shll
adc
test
sub
xor
jecxz
cmp
repnz
mov
lcall
orb
push
pop
fadd
jge
add
stc
mov
dec
fcoms
fimull
sbb
jge
or
icebp
insb
push
fists
push
push
pop
les
cmp
leave
push
int
mov
insl
movsl
pop
leave
inc
ficoml
mov
jle
cmp
cmp
cmp
xchg
cmp
sbb
push
and
subb
xchg
push
inc
inc
fwait
insl
call
add
or
pop
sbb
mul
push
inc
dec
push
mov
ffree
sub
int3
addr16
je
add
inc
gs
and
out
dec
scas
sub
push
adc
testb
push
loop
pop
out
repz
out
das
sub
rolb
pop
adc
test
js
jmp
cmp
nop
and
mov
dec
push
inc
adc
arpl
push
pop
jp
insb
fistps
push
movb
pop
jmp
enter
pop
mov
adc
and
xchg
push
sub
xor
jae
js
jg
inc
test
lret
dec
mov
les
fwait
mov
push
movsb
fcompl
mov
sahf
push
arpl
pop
sbb
cld
inc
mov
gs
cmp
and
adc
jl
adc
add
out
lcall
pop
dec
xchg
mov
pop
adc
repnz
addr16
add
je
out
lcall
inc
pop
pop
adc
popf
fsubs
gs
xchg
jae
cmp
lock
iret
ret
push
push
ss
iret
or
dec
xor
inc
fbstp
xchg
popf
imul
shll
inc
push
outsl
ds
jmp
mov
repz
inc
pop
ret
out
sbb
cmp
xchg
add
sub
pop
dec
xorl
leave
ds
aaa
ret
sbb
add
and
xor
testb
jp
inc
push
dec
ret
js
out
push
les
dec
je
mov
add
lcall
xchg
inc
jae
jmp
js
xchg
or
sbb
out
cmp
add
in
cwtl
mov
cmc
int3
insb
icebp
out
out
push
ss
movsl
xor
dec
xchg
imul
lock
jne
mov
add
cmp
dec
sbb
into
mov
xor
push
lods
xchg
shlb
inc
int3
mov
adc
mov
cs
insb
adc
ret
push
loopne
lret
jl
cmpsb
inc
cmpsb
mov
xchg
mov
push
mov
xor
pop
mov
std
fistpll
cmp
inc
loope
inc
lahf
push
push
push
adc
inc
leave
jl
lods
aaa
sbb
add
pop
in
scas
lret
cmpsl
xchg
push
push
inc
ljmp
sbb
hlt
cld
mov
xor
lret
adc
cli
push
les
fcompl
int
inc
mulb
ficoms
inc
fisttps
add
int3
sti
jns
mov
cmp
mov
cmp
mov
and
sahf
fcmovnbe
jb
adcb
cs
mov
loope
fs
dec
push
ljmp
test
test
imul
push
test
into
int3
mov
pushf
or
into
sbb
adc
mov
jg
sbb
out
cwtl
rcl
sub
lret
push
mov
mov
add
sti
adc
push
movsb
add
push
add
sub
push
fdiv
ficoms
popa
cmpl
jno
fmul
push
subb
loopne
sbb
push
arpl
or
lock
pop
mov
scas
and
das
sub
stos
mov
fidivl
mov
jb
lock
xchg
pusha
in
adc
stc
lret
mov
mov
cli
std
mov
fisubl
psrlw
add
popa
xchg
sbb
fbld
sarb
daa
xchg
lods
sbb
shrb
enter
rcll
push
adc
imul
or
mov
push
push
and
inc
pop
lahf
mov
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
push
movl
mov
call
mov
call
mov
cmpl
jne
push
call
add
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
call
lea
push
call
cmpw
je
push
call
add
call
push
push
call
xor
add
ret
dec
sub
cld
mov
fsubrl
inc
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
push
dec
daa
aam
fucom
xchg
rcrb
rorb
scas
int
vmovupd
xchg
aad
lret
cld
fisubrs
mov
or
ds
mov
fdivrs
fsubrl
add
dec
test
mov
lock
adc
test
arpl
inc
mov
mul
and
push
and
push
leave
or
mov
sbb
adc
jecxz
mov
out
mov
outsb
mov
xor
xchg
push
leave
out
ficoms
js
lds
loop
movsb
fisttps
mov
dec
cmpsb
or
dec
ljmp
xchg
in
cld
mov
xor
stos
xchg
cld
mov
fsubrl
test
cmc
cltd
fisubrl
inc
mov
fsubrl
mov
popf
fsubrl
test
mov
fsubrl
test
cmc
cltd
fsubrl
cld
mov
fsubrl
in
mov
fsubrl
cld
mov
fsubrl
xchg
mov
xlat
lods
xchg
fadds
inc
ljmp
xchg
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
mov
cmp
cmc
popf
fsubrl
cld
mov
fsubrl
ljmp
fsubrl
ror
aaa
cwtl
xchg
popf
fsubrl
int3
mov
ljmp
xchg
cld
mov
fsubrl
sbb
inc
ljmp
xchg
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubrl
cld
mov
fsubr
mov
xchg
cld
stos
inc
ljmp
stos
out
lods
push
jb
out
dec
lret
fsubl
dec
lods
sub
jg
sbb
lcall
jnp
push
mov
fstps
xchg
lea
rol
sbb
push
lcall
mov
test
jmp
mov
icebp
es
lods
js
pop
shll
insb
cmp
int
dec
push
push
xchg
mov
pop
push
or
ss
repnz
jl
sbb
xchg
lods
cmp
inc
subl
hlt
repnz
mov
adc
or
aad
fcompl
test
sbb
adc
mov
dec
or
jb
mov
xchg
sub
std
and
scas
sub
int3
iret
dec
sub
xlat
loope
cs
outsl
je
sbbb
lret
inc
imul
test
adcb
xor
sti
lcall
jge
fcmovb
fs
xchg
mov
sub
push
lods
js
mov
push
sbb
mov
ror
je
pop
jl
pop
lods
es
ja
scas
adc
sti
xchg
loopne
push
dec
imul
lods
int3
xor
int
push
out
ret
js
adc
insl
jmp
divb
into
jp
xchg
pop
cmp
ret
inc
nop
push
xchg
jns
ljmp
pop
insl
scas
cs
xor
push
jg
dec
cmp
xor
xchg
mov
pop
push
cmpsl
lret
ja
jae
pop
xchg
nop
negb
insb
add
test
pop
je
into
cmp
push
lods
sub
mov
adc
sti
clc
test
dec
dec
int3
inc
sti
mov
dec
nopl
roll
dec
mov
xchg
or
mov
inc
and
adc
sbb
add
ret
sub
loopne
jle
mov
push
xchg
shlb
sarb
lods
dec
add
lods
or
andl
nop
push
sub
ja
jbe
inc
push
ret
mov
sahf
lea
mov
jno
out
scas
jae
lret
mov
jnp
adc
aaa
dec
xchg
loopne
cltd
dec
lods
push
xchg
jns
pop
hlt
mov
popa
add
pop
pop
push
xor
push
pop
shll
shll
adc
and
in
mov
sub
adc
cwtl
dec
xchg
mov
push
stos
aad
es
mov
je
jnp
je
mov
xchg
pushl
int3
imul
jbe
inc
jle
ficoms
push
push
mov
mov
mov
or
cmp
sbb
mov
pop
mov
negb
outsb
std
ret
adc
pushf
jae
test
xor
mov
je
stos
push
es
mov
clc
mov
push
insl
pop
mov
pop
shll
dec
sbb
addb
inc
mov
jns
stos
pop
sbb
or
bound
mov
scas
sbb
in
inc
daa
push
dec
jne
and
and
jo
adc
mov
sub
bound
sub
ds
inc
loope
or
sbb
xorb
in
mov
in
mov
gs
jle
xchg
inc
adc
sbb
pop
mov
jg
jl
xor
mov
dec
dec
mov
sbb
cmp
dec
mov
adc
fs
xor
mov
dec
xor
jno
lret
ja
or
mov
xchg
cltd
mov
jae,pt
shl
arpl
sbb
gs
rolb
hlt
jge
mov
insb
mov
fwait
pop
and
fistpl
cmpsb
lret
outsl
push
pop
push
cmpsl
lret
and
xchg
mov
jle
xor
jl
test
pop
stos
push
fnstsw
push
mov
ljmp
xchg
movsb
mov
mov
das
gs
add
scas
ja
mov
push
cmp
jnp
pop
or
cmp
js
lods
cli
add
popa
mov
clc
aaa
lahf
fdiv
roll
cmpsl
xchg
cmp
jb
cmp
inc
inc
icebp
inc
mov
arpl
add
cld
xor
mov
into
scas
mov
add
push
cmp
fldenv
aas
dec
int3
mov
cmpsb
subb
mov
loope
notb
lods
adc
mov
sub
ds
pop
inc
dec
cmpw
mov
xchg
pop
jo
int
ja
loop
out
cmpsl
cmp
or
sub
lods
movsb
push
lea
mov
lods
into
inc
into
mov
mulb
loopne
lcall
xchg
add
stos
cmp
push
fcompl
sahf
fs
ss
and
cmp
xchg
push
adc
stos
leave
loopne
pop
adc
in
mov
out
aas
ljmp
mov
jbe
push
or
sbb
xor
pop
pop
pop
pop
or
out
sbbl
dec
into
subl
adc
stos
shll
adcl
sbb
fwait
mov
pushaw
cwtl
pop
sahf
sub
iret
hlt
xchg
jmp
pop
lret
inc
xchg
mov
mov
cltd
repz
dec
mov
test
mov
xor
str
pop
rorb
enter
pop
lcall
std
xor
pop
and
sub
fimuls
and
jne
mov
fwait
add
jne
testb
dec
pop
stos
dec
arpl
insl
je
ficompl
repz
push
push
mov
pop
out
push
and
sub
jae
ja
scas
add
out
outsb
sub
cmp
cmp
add
xor
sbb
out
or
fisttpl
add
xchg
xor
test
ljmp
adc
xrelease
aaa
out
pop
mov
and
sub
inc
cs
inc
popf
out
test
in
bound
mov
adc
adc
es
lret
xor
jecxz
ficoms
dec
or
fcmovnb
mov
jg
in
push
pop
outsl
gs
scas
pop
sbb
imul
out
mov
cmp
nop
sbb
jmp
sbb
bnd
out
std
scas
and
mov
or
imul
gs
push
jo
inc
imul
xor
jg
imul
pushf
adc
fmull
mov
loop
xor
xor
lcall
pushf
outsl
inc
or
xchg
cmpsb
addr16
shl
mov
out
adc
pop
sbb
mov
or
jp,pn
lock
mov
aas
jecxz
nop
test
pop
mov
pusha
push
pop
pop
and
lcall
popf
cmp
xchg
jmp
push
push
xchg
and
gs
addr16
out
jb
push
or
mov
movsl
sub
dec
das
cwtl
inc
pushf
int3
dec
ret
lds
inc
arpl
outsl
repnz
imul
lahf
fwait
sub
das
or
sub
cmp
test
fsubrs
and
in
xchg
stos
rcrl
push
stc
adc
and
push
rorb
rorl
sub
cmc
insl
insl
fimull
cs
push
or
adcl
mov
in
sbb
lock
lods
out
push
inc
dec
neg
xchg
lods
mov
push
mov
and
in
data16
iret
add
arpl
leave
mov
addr16
inc
sti
sub
jmp
iret
loope
jmp
mov
int
mov
cmp
dec
movsl
push
sbb
enter
xlat
cmp
pusha
or
sarb
mov
jne
xchg
xor
jno
imul
js
in
add
mov
cmp
xorb
jl
mov
fwait
ror
in
cltd
mov
fs
or
mov
cld
mov
int
cmp
in
push
cwtl
sbb
movsl
xchg
push
dec
in
push
mov
loopne
inc
inc
test
test
cmp
loope
mov
movsb
ljmp
adc
popf
sub
push
hlt
cwtl
or
movsl
out
dec
test
sub
pop
add
fidivrl
mov
roll
movsb
clc
mov
shr
rcrb
in
sbb
loop
mov
pop
arpl
fs
adc
mov
mov
sahf
dec
iret
adc
mov
cmp
mov
imul
adc
outsb
es
stos
loop
lods
adc
sub
adc
fldl
popa
sbb
test
daa
fcomps
and
lock
shrb
pushf
mov
push
sahf
cmp
sub
imul
lock
in
mov
pop
sub
cmp
jno
lret
mov
mov
xchg
fisubrl
lret
movsl
fstps
inc
jle
cmp
out
out
push
out
dec
inc
dec
push
fsts
fsubrp
leave
jg
jno
clc
in
mov
adc
stos
sbb
xor
adc
pop
xor
pop
js
outsl
hlt
cmp
test
stos
xchg
sbb
nop
decl
packuswb
insb
sub
xchg
pusha
add
or
sbb
push
jmp
dec
push
pushf
xchg
hlt
jae
cli
lods
stc
cwtl
sti
mov
mov
xor
dec
dec
inc
mov
jnp
cmpsb
mov
sbb
fnstsw
pop
mov
imul
fldenv
call
movsl
lods
push
push
pop
push
sub
sti
cmpsl
movsl
cmp
and
pop
inc
sbb
mov
jecxz
lahf
dec
std
lahf
std
xchg
adc
inc
adc
mov
sub
mov
lods
daa
push
shlb
cmpsl
sub
dec
xchg
mov
or
jnp
shll
in
inc
dec
or
add
cmpsb
hlt
sar
jne
mov
lods
in
hlt
lods
xlat
mov
jl
lods
inc
aaa
cmc
xor
je
rol
popa
pop
popf
ficoml
fs
fwait
push
pop
add
js
pop
imul
shrb
cmp
xor
push
jb
lahf
repz
stos
shrb
stos
sub
rcl
loopne
or
unpcklps
ja
out
jns
pop
mov
xchg
pop
aaa
or
ljmp
test
sbb
fadds
cmp
or
cmp
jb
clc
in
test
xchg
mov
lcall
jl
or
jmp
xor
lods
ret
sbb
cmp
lods
or
and
mov
jbe
adc
and
add
inc
call
loope
leave
adc
push
push
fidivl
pop
sub
or
bswap
jns
or
jle
pusha
in
ret
dec
and
and
lods
jl
push
mov
xor
dec
sti
or
addr16
inc
inc
inc
push
mov
stc
aam
add
add
xor
movsl
test
dec
into
int3
out
jbe
test
dec
push
cmp
fdivrl
mov
lock
xchg
mov
pop
cmp
fadds
pop
js
ficoms
adc
jnp
pop
andl
sti
data16
xchg
push
pop
pop
mov
cwtl
das
lcall
adc
call
push
iret
add
icebp
xchg
sub
add
ret
jno
push
lahf
dec
addr16
out
inc
inc
adc
mov
pop
es
hlt
jnp
in
dec
cwtl
push
mov
dec
shll
push
idivl
mov
pop
add
stos
cmp
incl
and
cs
cmp
icebp
mov
xchg
repnz
ja
lods
and
fistpl
cmpsl
and
adc
shlb
adc
dec
xchg
cmpb
into
inc
mov
and
jnp
lods
mov
movsl
imul
jecxz
lds
mov
aas
idivb
sahf
pop
and
out
pop
lock
mov
lret
xchg
sub
fs
rcr
dec
add
mov
ucomiss
daa
outsl
jns
frstor
inc
addb
imulb
divb
push
mov
jno
jge
in
cld
inc
and
daa
fdivl
divb
shrl
mov
das
ss
data16
subl
sub
jae
js
add
cs
lret
inc
and
and
test
mov
mov
notb
dec
pop
ret
jle
push
enter
pop
mov
jmp
cmp
mov
inc
fldl
inc
inc
ret
cld
sbb
cmpsl
movsb
sahf
ljmp
xchg
cltd
jecxz
aaa
rclb
imulb
aad
sahf
and
mov
das
loopne
push
cs
stos
cwtl
cmp
js
mov
out
pushfw
orb
fsubl
pop
mov
cs
add
les
stos
pop
rcr
subl
jmp
ljmp
mov
icebp
mov
in
call
icebp
lcall
mov
inc
cld
push
xor
or
jno
repnz
pop
aad
mov
mov
adc
mov
add
test
or
pop
lcall
adc
sub
pushf
lock
jl
cmpsl
lea
sub
popf
sbb
fs
xor
or
mov
out
and
mov
mov
and
push
push
jecxz
xchg
jmp
fdivrl
lods
inc
dec
push
mov
icebp
xchg
mov
lea
and
push
call
stos
leave
cmp
outsb
jno
in
mov
insl
cmp
pop
lods
pop
loope
pushf
lea
cwtl
or
mov
inc
sub
push
pop
push
jo
mov
adc
data16
mov
repnz
inc
push
out
orb
loopne
mov
jb
mov
pop
out
das
mov
test
and
and
loope
add
or
movsw
mov
mov
add
inc
mov
mov
jmp
cld
cmpsb
mov
lret
mov
das
ljmp
jg
or
mov
test
dec
push
mov
and
cmc
aas
push
mov
sub
or
add
aam
test
jo
les
pop
sbb
sbb
pop
pop
mov
jne
shl
idiv
xchg
and
dec
sbb
rorb
mov
mov
xchg
ficompl
mov
ficompl
push
jns
xor
add
in
mov
lcall
jle
into
add
mov
sarb
sbb
outsb
ljmp
rcrl
jbe
xor
lcall
or
ljmp
sub
imul
jo
idiv
cltd
mov
fildll
push
call
xor
add
ret
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubl
add
popa
inc
add
popa
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
arpl
movsb
arpl
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
addl
addl
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
inc
add
addl
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
test
movsb
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
