aas
pushf
lret
pusha
scas
adc
sbb
daa
pop
dec
push
xor
fimull
xchg
mov
xor
xor
xor
loop
push
aaa
mov
add
pop
fwait
sbb
inc
push
mov
insl
pop
rcll
jbe
or
dec
mov
push
lahf
mov
xchg
ljmp
fadd
inc
push
sub
inc
sub
push
sub
or
out
sbb
out
pop
movsl
loopne
ret
push
inc
fidivrl
pusha
mov
mov
jno
js
pop
hlt
pop
andl
ror
cmpsb
std
cwtl
sub
mov
xlat
mov
aad
push
and
fimuls
mov
lds
sbb
xor
fstpl
jb
in
out
pop
fcoml
jg
rcrb
fldenv
in
iret
dec
gs
leave
bound
add
jl
xor
stos
fstpt
cmp
xor
std
cltd
jl
lea
pop
ret
xor
cli
rcll
lds
cmpsl
inc
cmp
and
mov
mov
add
repnz
fwait
out
mov
es
push
fs
xlat
pop
jmp
movsl
pop
push
in
xchg
jecxz
lcall
xchg
cmp
arpl
push
dec
dec
das
xchg
cmp
xchg
ja
sbb
add
test
push
pop
ljmp
adc
pop
ds
or
out
and
jp
outsl
sarb
enter
mov
nop
pop
arpl
pop
andl
push
push
sbb
pop
cmp
inc
call
fmul
stos
inc
cltd
scas
int3
or
cld
divl
jp
add
fsts
mov
lret
rolb
xchg
or
out
shlb
cmp
sub
dec
addr16
cmpb
sub
sub
aas
jge
and
mov
popa
ljmp
xor
hlt
pop
fwait
push
sub
sub
loopne
add
dec
test
mov
and
add
adc
and
insl
scas
mov
add
inc
loope
sbb
ss
pop
add
test
movsb
add
xor
mov
push
mov
loope
xor
sub
mov
pop
xchg
pop
loopne
std
lret
mov
stos
arpl
sbb
dec
cli
and
ds
fistl
dec
pop
repnz
push
repnz
test
cwtl
aaa
sbb
adc
mov
je
mov
nop
push
jae
adc
push
mov
xor
fbld
roll
push
push
adc
and
out
sbb
outsb
aad
and
movsl
daa
jo
imul
mov
cmp
repz
dec
jp
or
mov
movsb
xor
or
rcrb
cmp
in
fistpl
roll
orb
xchg
jmp
mov
stos
hlt
aas
push
dec
aam
add
scas
push
fs
iret
add
sbb
out
pop
or
or
push
hlt
dec
dec
stc
call
mov
inc
jle
pop
inc
filds
jge
scas
mov
inc
jns
adc
pop
and
test
mov
pop
pop
in
sti
pop
dec
mov
mov
jmp
pop
in
fwait
mov
jnp
sahf
out
icebp
in
adc
clc
sub
push
push
pop
in
ja
or
clc
jns
jg
jno
enter
jns
cli
arpl
mov
scas
insb
data16
sub
mov
daa
mov
push
lea
inc
pop
push
mov
pop
das
or
jns
push
pop
mov
jl
mov
inc
push
loopne
and
jle
mov
outsl
adcb
and
mov
dec
lods
mov
push
fs
mov
cli
scas
arpl
xor
mov
mov
test
sub
cli
in
loopne
es
adcb
inc
mov
stos
pop
test
outsl
das
shl
sti
pop
lret
dec
movsl
and
add
mov
ds
popf
stc
test
dec
in
jne
popa
fsubrl
adc
pusha
mov
mov
rclb
sbb
jbe
dec
xor
popa
jecxz
hlt
xchg
cmc
xor
iret
pop
int
adcl
movsb
jle,pn
dec
sahf
mov
cmp
out
iret
in
add
and
adc
jns
fs
pop
jne
mov
xchg
dec
xor
dec
fucompp
inc
push
push
mov
jae
cmp
lock
fdivl
dec
mov
mov
mov
pop
adc
outsb
sar
push
mov
or
out
mov
inc
mov
ss
popf
jno
pop
mov
or
in
out
in
mov
jnp
ret
jno
stos
aaa
lahf
js
cmpb
jge
pusha
fsubl
repz
lds
ret
dec
mov
pop
stc
fdivrs
mov
cs
outsl
cmp
loop
sub
mov
sbb
addr16
inc
arpl
fiaddl
jge
inc
arpl
or
xchg
xchg
jae
pop
outsl
repnz
xchg
fdivp
ljmp
push
in
pop
mov
jg
pop
call
call
fldenv
inc
dec
jge
leave
outsl
aas
movsl
or
adc
cltd
mov
dec
hlt
pop
or
imul
xor
or
jne
sahf
insb
fcomps
cmpsb
int3
stc
jl
jae
push
and
mov
mov
addb
xor
push
mov
pop
push
xchg
inc
aaa
subb
int3
sub
mov
or
dec
xchg
pop
and
sarl
adc
push
inc
cmp
mov
mov
popa
push
ficoms
test
je
cmp
pop
pusha
ret
push
movsl
pop
test
cwtl
ds
jae
in
push
data16
inc
aad
inc
fwait
loope
sbb
out
or
add
and
pusha
in
adc
cwtl
inc
jb
mov
jp
rcrl
scas
andb
dec
out
imul
sbb
mov
or
xor
mov
xchg
les
daa
sbb
mov
icebp
xlat
sarl
mov
add
inc
ds
repnz
or
rclb
xor
cmp
jmp
filds
jbe
hlt
inc
mov
jle
jo
push
xchg
test
hlt
pop
mov
in
mov
add
cmpsb
xor
xorb
mov
pop
subl
inc
adc
or
nop
push
or
lahf
jp
rcrb
pop
push
and
dec
inc
test
ret
leave
mov
dec
stc
mov
xchg
and
test
leave
dec
stc
nop
cld
lahf
mov
mov
sub
daa
push
int
repz
jl
cwtl
movsl
lcall
push
scas
cld
fistpll
psubq
dec
negb
jl
push
jae
scas
mov
mov
rorl
fwait
jecxz
inc
adc
out
shll
scas
dec
sbb
lods
xchg
inc
call
pop
std
insl
xchg
repz
lea
leave
insb
or
mov
mov
data16
outsl
orb
jmp
mov
cld
hlt
mov
xchg
bound
sub
shll
pop
cli
mov
lods
adc
adc
test
rcr
andb
shrl
pop
pushl
push
pop
pop
setns
lret
mov
jmp
js
mov
inc
popf
cmpsb
jp
add
sahf
xchg
push
adc
mov
cmp
in
nop
lods
incl
pop
adc
int
cmpsb
adc
jp
mov
jb
pushf
add
sub
push
loopne
fdivp
and
sbb
xchg
movsb
nop
test
xchg
mov
xor
in
jb
sub
cld
jae
lds
lret
imul
call
mov
inc
aaa
iret
ds
jbe
jo
in
outsl
inc
into
add
outsl
rorb
cmpxchg
pop
repz
push
cmp
orb
ds
xchg
sub
movsl
jnp
lods
sbb
in
pop
mov
push
arpl
cmpsb
cmp
daa
inc
test
and
popa
scas
test
inc
push
hlt
inc
dec
add
add
mov
movsl
cmc
mov
les
sub
jae
leave
shrl
in
inc
xchg
decb
mov
mov
adc
ficoml
repz
inc
gs
pop
mov
mov
out
ds
es
int
mov
push
or
movsb
dec
push
out
mov
xor
test
pop
push
rcl
es
insb
add
iret
aaa
and
pmaxsw
sub
fdivr
sub
mov
add
jl
cmp
and
jb
loope
cltd
fimuls
fs
js
dec
mov
test
pop
call
push
shr
cmp
sahf
imul
fstp
faddl
negl
jns
into
scas
adc
dec
push
punpckhdq
cltd
icebp
inc
fstpt
nop
mov
pushf
scas
add
roll
std
mov
imul
sbb
mov
add
popf
mov
call
inc
dec
add
aas
test
out
leave
pop
call
jnp
cmp
and
sbb
push
jns
in
insl
add
and
mov
mov
scas
mov
imul
push
icebp
repnz
ret
mov
jge
and
rclb
jmp
stos
cmc
out
adc
sub
clc
add
pop
mov
pop
sub
scas
adc
pop
lahf
sbb
mov
jp
cmp
mov
jge
or
decl
adcl
adc
jmp
lahf
jmp
in
pusha
mov
mulb
ret
arpl
inc
jp
aaa
sbb
notb
mov
pop
sub
xchg
pop
inc
lods
ljmp
and
jecxz
pop
adc
cli
in
cmpb
sbb
sahf
mov
daa
test
lahf
jle
add
add
xor
cmp
inc
jle
outsb
mov
pop
adc
or
into
add
outsb
push
cs
lea
test
mov
dec
adc
add
clc
dec
sub
push
cmpsl
enter
pop
lcall
test
das
dec
jp
add
inc
mov
push
divl
mov
nop
pop
xlat
test
mov
mov
cmpsl
or
out
jne
out
test
and
xor
aad
icebp
cltd
call
mov
cwtl
int3
adc
or
inc
sbb
jae
jecxz
jae
ror
rorl
inc
cmpsb
or
and
or
pop
leave
pop
xchg
lret
jno
and
scas
scas
jb
mov
iret
ja
push
movsl
pop
mov
and
fimuls
mov
fs
jmp
ret
dec
dec
cmp
push
lcall
iret
add
jb
inc
add
shll
push
dec
sbb
sub
fdivs
cmp
outsb
push
add
pop
aam
push
repz
pop
out
ss
sarb
std
stos
push
xlat
jp
sbb
or
lds
jge
xor
lcall
dec
push
int3
daa
and
xchg
pop
shll
push
stos
jmp
xchg
out
aad
movsb
mov
xchg
dec
fucomp
scas
adc
clc
dec
jb
mov
ljmp
lcall
sub
call
mov
sbb
testl
es
mov
je
inc
push
scas
out
loop
dec
lea
sub
xchg
scas
cwtl
mov
xchg
fidivrs
jmp
enter
nop
ficoms
mov
rcll
cmpsb
pop
jnp
pop
rcrb
test
cwtl
ret
adc
std
sub
popl
mov
mov
fwait
addr16
inc
adc
inc
divl
cld
add
inc
movsl
aam
inc
cmp
mov
enter
or
mov
or
out
mov
mov
xlat
and
pop
xchg
bnd
or
or
pusha
repnz
outsb
mov
sub
pop
mov
jge
sbb
sbb
std
nop
loop
add
xor
insb
adc
out
jg
pop
cltd
inc
rcrl
push
sbb
sub
ret
inc
jmp
cwtl
lret
or
aam
mov
out
cltd
fwait
or
iret
xor
cld
ljmp
clc
or
popa
iret
pop
push
pusha
push
out
test
cmpsb
mov
jae
mov
movsl
mov
xchg
rcll
push
cli
adc
sbb
je
cmp
test
jp
aam
mov
mov
test
fisubrl
out
in
and
push
jbe
mov
ds
push
mov
out
pop
xchg
into
or
or
mov
sar
sahf
test
jno
mov
mov
ret
shll
cmpsl
push
xor
test
dec
adc
jge
mov
mov
xor
movsl
jns
sbb
mov
lret
cmp
inc
push
imul
push
xchg
mov
xchg
sbb
in
push
out
loop
int
push
les
pop
or
xor
push
outsl
sbb
mov
rclb
inc
xchg
xor
mov
popf
mov
mov
adc
pop
pop
sub
aam
cmp
roll
add
jl
das
fs
stos
jne
repnz
in
ja
mov
fidivl
fldl
dec
mov
insb
push
mov
lods
daa
jmp
and
icebp
js
inc
psllw
dec
lcall
push
testb
jmp
les
xor
lcall
aad
in
in
ds
jle
arpl
daa
cmpsl
stos
leave
ds
add
movsb
xchg
sbb
jne
imull
jl
in
adc
popa
jnp
gs
xor
push
int3
test
mov
or
pushf
dec
cmp
and
imul
dec
dec
psubsb
stos
shl
pmuludq
int
adc
dec
loop
movsb
into
movsl
xor
cmp
xor
bound
pop
lret
shlb
shlb
xorl
outsb
sbb
sbb
jb
cmp
cmp
dec
inc
adc
addr16
xlat
pop
adc
mov
mov
das
fsubs
jbe
out
adc
mov
jmp
xchg
and
cmpb
mov
xor
das
mov
cwtl
icebp
aam
mov
mov
das
dec
fistpl
lods
clc
das
test
lods
loope
popf
sarb
in
pop
arpl
test
jne
repz
mov
dec
adc
arpl
repz
ljmp
mov
dec
and
dec
or
dec
push
shrl
xchg
leave
stos
jne
cld
stos
sbb
mov
fdivl
pop
jle
cwtl
in
sar
pop
mov
ror
push
pushf
movsb
sub
rolb
dec
sbb
repnz
fwait
roll
repz
fwait
stos
push
test
xchg
cmp
sbb
sti
popf
mov
sbb
popa
jb
jp
icebp
out
jno
jp
sbb
inc
outsb
add
repz
inc
adc
adc
cs
dec
in
fst
and
jne
jecxz
and
pop
cmp
pop
jmp
dec
jg
adc
fs
push
lea
xor
icebp
aaa
mov
bound
aad
cmp
repz
movsb
push
popa
cs
rcrb
pop
adc
inc
pop
pop
rcrb
lds
or
pop
outsb
inc
lock
testb
nop
jp
loop
mov
pop
dec
mov
clc
dec
lcall
mov
sti
push
xor
xor
adc
les
jns
mov
cmp
dec
pop
mov
std
inc
nop
roll
xlat
jl
ljmp
or
mov
out
mov
fimuls
scas
mov
push
adc
das
es
mov
loope
jns
mov
sbbl
and
or
push
sub
data16
jl
jnp
push
lods
mov
jno
jnp
in
in
inc
dec
fs
aas
add
subl
push
xor
push
repnz
sub
adc
mov
mov
loop
out
notb
sti
dec
push
cmp
pusha
test
dec
sbb
mov
iret
pusha
inc
xchg
add
pop
jno
sub
pushf
and
mov
fsubrp
mov
pop
xor
jle
loope
outsl
repz
jno
mov
cmp
jmp
in
scas
xchg
xchg
pop
js
out
xchg
lret
lcall
mov
jmp
lret
aas
lcall
jns
adc
out
outsb
dec
test
loope
out
fsubp
adc
fs
or
mov
add
mov
shll
iret
and
mov
movsb
cmpsl
pop
and
push
cmp
jmp
xchg
mov
add
xor
push
shl
cwtl
push
pushf
dec
pushf
rolb
arpl
mov
adc
in
mov
scas
sti
mov
insl
mov
push
rcll
movsl
adc
mov
xchg
push
jne
outsl
dec
sub
and
hlt
push
divl
and
lods
pop
outsb
mov
cmp
popa
mov
sub
sub
sub
fs
jmp
lods
lcall
cmp
inc
into
in
rolb
andb
inc
std
add
sti
fstps
cmp
or
add
add
mov
xchg
outsl
repz
cmpsb
lea
cld
iret
vpunpcklqdq
in
enter
pop
rclb
addb
insb
push
pop
test
cld
dec
ljmp
lret
notb
mov
testl
mov
dec
adc
test
fadds
cs
mov
pop
cld
nop
hlt
add
pop
xchg
das
repnz
or
pop
dec
ret
out
dec
or
lods
divl
cmpb
cmp
jno
inc
jg
cmp
jmp
int3
rcll
mov
jne
push
sarl
push
and
xchg
push
mov
imul
push
rcrl
scas
inc
mov
pusha
mov
sbb
in
push
and
xchg
leave
add
icebp
xlat
xchg
jmp
mov
push
sbb
cwtl
fcmovnb
dec
mov
xchg
dec
lcall
mov
jae
lea
jmp
push
sbb
and
mov
jae
das
fistpll
mov
pop
and
mov
movsb
movsl
fs
cli
call
sahf
stc
leave
fsub
pushf
out
aaa
leave
mov
test
jns
mov
cltd
call
pop
pushf
dec
or
push
jmp
mov
lds
mov
inc
or
iret
mov
mov
fdivs
repnz
mov
sbb
xchg
test
sub
cmc
sbb
stos
jae
inc
call
sbb
pop
ret
pop
xchg
add
lret
jno
mov
aas
bound
and
outsl
pop
sbbb
mov
jb
imul
movsb
add
mov
lods
sub
sarl
sbb
in
jns
fsubrp
bound
push
test
aam
pop
out
rcl
push
imul
jno
jne
std
xchg
adc
mov
cmpsb
lcall
and
fistl
ds
out
aas
decb
sbb
gs
shll
inc
cmp
dec
gs
mov
lahf
xchg
mov
pop
adc
mov
mov
mov
ja
jns
dec
scas
in
mull
mov
rclb
shrb
push
inc
xchg
in
sub
aas
pushf
ds
negb
repnz
ret
fwait
repz
in
jae
aad
mov
call
or
lret
fnstsw
enter
cmc
pop
ret
aam
mov
add
or
pop
pusha
inc
cmp
mov
push
xor
sti
mov
fiaddl
lods
lahf
repnz
jmp
sub
sub
les
xchg
cwtl
or
pop
adc
push
fnsave
pop
daa
js
xor
add
xlat
jbe
faddl
ja
dec
or
enter
mov
int3
jl
fsubrl
sub
xchg
jg
push
ret
hlt
adc
loopne
out
loope
pop
sub
test
into
jns
cvtps2pd
jns
push
xlat
ret
inc
jb
xor
cld
xor
dec
out
lahf
fisttpl
add
es
xchg
cltd
cltd
and
in
jno
pusha
sbb
mov
pop
les
leave
in
jl
inc
jno
test
pop
ret
mov
aam
inc
jae
cli
lret
daa
mov
movb
push
pop
daa
mov
insb
jmp
push
int3
es
mov
xor
frstor
ds
mov
lods
dec
mov
dec
push
lods
push
mov
mov
xchg
je
xchg
xor
or
out
repnz
push
fbstp
lock
jnp
cmc
mov
rcll
enter
aaa
jns
and
pop
sbbl
stc
mov
movl
xchg
xlat
and
xchg
out
test
xor
sbb
push
push
mov
shll
jmp
jb
sbb
xor
je
jne
mov
fimuls
mov
xor
cmpsl
xchg
scas
in
repnz
je
and
shlb
mov
push
lods
aad
jb
jmp
or
or
mov
push
test
decl
pop
xchg
roll
dec
xlat
mov
iret
xadd
in
jmp
sub
inc
xor
jbe
sub
inc
push
stos
gs
das
and
cmp
jg
inc
int
dec
mov
pop
mov
push
dec
cwtl
fldcw
clc
addr16
repnz
xor
cmp
scas
lret
f2xm1
cwtl
sbb
dec
push
dec
jb
fstpt
cld
jno
and
bound
mov
add
push
pop
push
xchg
ljmp
cli
js
stc
jae
push
sub
ja
mov
mov
pusha
insl
mov
js
shr
push
inc
jl
repz
jecxz
aam
dec
or
repz
jo
xor
mov
mov
cli
pop
mov
mov
pop
ret
stc
lea
jne
out
xchg
hlt
or
xor
sub
adc
sbb
push
clc
mov
xor
jle
pop
jnp
and
xor
mov
dec
dec
subl
mov
inc
popf
sub
in
aam
mov
icebp
jns
outsb
pusha
mov
mov
xor
or
adc
push
lds
in
ret
jmp
pop
sub
inc
cmp
xchg
in
popa
dec
add
mov
test
add
xchg
ficoml
mov
or
repnz
sarl
pop
jge
iret
insb
stc
jle
xor
and
rep
xchg
sub
rcll
xlat
xchg
dec
gs
fsubr
push
iret
data16
loopne
emms
dec
or
push
xor
cmc
nop
mov
lods
shlb
testl
add
jmp
add
jb
pop
test
and
int3
adc
mov
js
clc
lret
jns
cmpsb
xor
out
inc
add
pop
outsb
aam
jp
ljmp
push
je
lahf
pop
bound
aaa
stos
mov
dec
sub
in
cwtl
repz
in
shll
aad
add
sbb
lcall
mov
negl
aas
pop
cwtl
fisubs
jb
out
xchg
dec
out
pop
insl
mov
mov
jns
jns
cmp
icebp
rolb
fnstcw
dec
sbb
and
mov
icebp
arpl
add
arpl
dec
xlat
mov
push
test
xlat
insl
mov
loopne
aad
jmp
mov
inc
jecxz
xor
test
mov
adc
dec
dec
rclb
mov
mov
aad
mov
outsl
xchg
add
jno
jmp
scas
fs
inc
insb
inc
mov
jae
push
incl
bound
jp
inc
icebp
xchg
mov
push
lods
jne
cwtl
push
repz
push
dec
leave
or
outsb
mov
int
pop
scas
fcmovbe
repnz
loopne
dec
pop
fstl
mov
stc
mov
mov
mov
in
pop
clc
gs
fdivp
data16
andl
add
incb
dec
lock
sarl
mov
clc
inc
and
and
jmp
mov
mov
data16
cmp
sarb
sbb
leave
lock
aaa
leave
jno
lahf
ret
rorb
jecxz
test
push
andb
pop
dec
pop
js
dec
popf
push
cmp
jmp
cmpsl
sbb
or
xchg
xchg
mov
inc
push
mov
inc
aaa
insb
movsl
rcrl
mov
adc
xor
pop
add
mov
je
fidivl
xchg
xchg
icebp
in
jns
repz
pop
jns
lock
ret
cmp
fldenv
jno
mov
jle
inc
inc
aas
jae
out
test
inc
jo
insl
clc
in
sub
outsb
cmpsl
inc
outsl
andb
insb
cwtl
test
mov
cmp
pop
jmp
clc
das
fwait
push
xchg
pop
mov
rcll
fcmovbe
std
imul
mov
or
ja
repz
lret
stos
xlat
es
pop
jb
clc
and
daa
lea
pop
cmpsl
dec
ljmp
pop
mov
mov
ucomiss
test
sub
aam
push
out
xor
iret
or
cli
sub
sbb
cmc
gs
mov
mov
jg
sub
xor
icebp
aaa
outsl
addr16
clc
dec
cli
pop
std
icebp
pushf
aas
aas
mov
popa
cmpsl
xor
fs
imul
xorb
jl
test
jecxz
mov
aas
test
test
push
pop
mov
jge
into
lret
loopne
test
inc
jge
bnd
pop
imulb
jg
ret
cmpsb
pop
adc
pop
gs
insl
sub
xor
pop
mov
jp
jnp
decb
mov
andb
pop
ficoms
jge
mov
fwait
or
pop
jo
fistpll
xchg
or
adc
jg
addr16
imul
testb
in
enter
xchg
leave
pop
cmp
pop
es
or
and
mov
addr16
nop
popf
mov
mov
dec
fcmovne
jmp
scas
test
adc
lret
mov
jmp
cmp
outsb
dec
out
sbb
mov
dec
fdivrl
push
das
push
inc
in
xor
cmp
sar
adc
outsl
mov
pop
int
pop
add
lock
insb
filds
lret
jmp
or
and
jmp
or
mov
xchg
mov
xor
loopne
enter
mov
and
and
ret
mov
mov
faddl
jb
xor
subl
jnp
stc
sub
mov
jle
mov
out
popa
dec
mov
outsb
lcall
jae
sbb
flds
cmp
iret
dec
push
xor
sub
mov
dec
dec
movsl
aad
add
sbb
pop
add
mov
insl
pop
testb
xchg
jbe
sbb
xchg
daa
hlt
gs
rcll
enter
scas
outsb
dec
sbb
ret
sub
ds
push
inc
or
xlat
dec
fidivs
inc
sbb
mov
fistpl
push
fucom
sub
icebp
popf
sub
and
sub
and
push
xchg
jno
add
adc
lds
notl
sub
pop
jb
mov
ret
repnz
out
leave
sub
and
pop
cmp
leave
int3
int
or
hlt
testl
jmp
int3
cmp
out
sbbl
sbb
pop
in
sbb
arpl
mov
out
mov
imul
inc
cmp
lods
sbb
insb
adc
inc
cs
mov
xchg
inc
pop
mov
ficompl
loopne
dec
jno
bswap
mov
nop
dec
jno
aam
in
xchg
fisttpl
repnz
decl
in
jecxz
insl
cmp
call
push
cwtl
jno
add
rcl
xchg
push
and
xchg
movsl
dec
xchg
sbb
in
xchg
in
xor
mov
leave
jne
mov
lods
iret
mov
mov
xchg
arpl
andb
imul
insl
addr16
aam
repnz
sti
stos
jp
inc
daa
cli
pop
add
aaa
rorb
loop
pop
ds
sahf
push
pop
popf
mov
dec
test
pmaddwd
sub
xlat
sbb
test
pop
inc
cltd
mov
std
and
mov
add
adc
outsb
lds
test
scas
fildll
divl
fistl
mov
je
int3
push
sub
inc
mov
mov
in
insl
xchg
int3
mov
inc
cmp
push
lds
adc
test
sti
fisttpl
clc
mov
cld
iret
mov
mov
jo
scas
xor
out
pusha
push
test
outsb
pop
inc
mov
inc
fisubrl
in
arpl
push
or
push
mov
xlat
mov
loopne
push
leave
jne
addr16
sbb
das
jae
jbe,pn
jbe
sbb
xorl
jne
fbld
xor
fildl
lret
cmpsl
mov
rcrb
sub
cmp
fdivr
jge
mov
jae
cmc
cld
fs
push
mov
xchg
and
out
ja
pop
out
add
out
or
or
loop
lahf
stc
fistpll
mov
adc
cmpsl
insl
mov
mov
and
jecxz
in
fdivl
jb
mov
and
mov
lea
cmc
mov
stos
in
sbb
fdivl
setbe
stc
rolb
mul
adc
shrl
xchg
jmp
push
int
adc
jbe
inc
es
and
lods
jbe
cltd
jne,pt
pop
aas
inc
sub
sub
push
in
sbb
jns
sbb
loope
xchg
movsb
lds
inc
rclb
or
jmp
inc
test
enter
jg
ret
sbb
dec
pop
fisttpll
pusha
pop
xor
xchg
jne
out
xor
lret
sub
test
repnz
out
int3
xor
jg
sbb
test
mov
ds
test
jnp
dec
aad
add
gs
clc
push
lods
imul
leave
mov
sub
or
jns
pop
pop
aaa
pop
test
push
xchg
out
fsubr
and
push
test
pop
pop
and
push
fcomip
inc
mov
or
scas
cmpsl
mov
mov
push
dec
lods
sti
imul
scas
idiv
dec
jge
and
pushf
out
or
in
stc
add
repz
push
pop
push
sbb
push
gs
dec
adc
mov
cltd
sub
cmp
cmp
sub
jp
dec
aas
hlt
cmp
xchg
jb
jg
adc
js
imul
mov
out
imul
insb
cmpb
sub
mov
addr16
and
xchg
mov
jge
sbb
cmp
and
pushl
xor
jle
test
stos
into
ja
fcoms
out
outsb
mov
dec
xor
mov
adc
pop
int
in
push
jns
jp
je
insl
add
mov
sti
inc
add
sub
pop
push
das
sbb
ds
fisttpl
mov
insl
add
or
fdivs
or
cld
xchg
into
pop
sbb
fisubs
fldcw
out
xchg
orl
dec
push
repnz
xchg
and
push
mov
jl
sub
lret
lahf
dec
enter
lock
ja
aaa
xlat
xchg
fbstp
imul
pop
push
repz
or
imul
xchg
arpl
or
xor
movsl
pop
xor
jmp
push
inc
mov
mov
jle
scas
mov
rclb
dec
cmp
dec
adc
lcall
addr16
addr16
cmpsb
or
sub
inc
mov
aas
xchg
cmp
sbb
adc
pop
sbb
xor
js
or
or
dec
rorb
js
ret
lret
inc
lret
sub
cmp
out
stc
sbb
js
cltd
lret
pushf
es
jns
adc
shr
mov
dec
inc
xor
ficoml
dec
inc
xchg
nop
push
push
hlt
jmp
test
in
xchg
push
fidivrs
dec
leave
sub
and
imull
mov
and
lods
mov
and
fsubrp
shrb
push
pop
mov
xor
iret
mov
pop
or
or
cld
jb
adcl
mov
orb
xchg
cmp
jbe
sub
pop
xor
xchg
popf
or
out
sahf
jb
ja
xlat
xor
stos
repz
imul
or
sti
push
shll
mov
insl
int3
sbb
out
and
jge
punpcklwd
sub
push
jns
cmp
mov
inc
cmp
add
mov
mov
mov
sub
hlt
pop
int
je
sarl
cmp
pop
cmc
scas
pop
jae
lret
jmp
divl
mov
sti
mov
sbb
addr16
les
jge
test
mov
add
fcompl
xchg
and
ss
xor
jae
xchg
cmpsb
enter
hlt
pop
test
and
push
or
adc
push
add
fdivrp
cs
nop
fidivs
push
mov
dec
lret
pop
cmpsl
roll
inc
mov
or
jne
insl
adc
subb
hlt
cwtl
sub
imul
fiaddl
pop
outsl
call
aad
stos
lahf
pop
inc
sub
out
movsl
sub
and
mov
cmp
outsb
jle
jge
push
fwait
ja
pushf
inc
movsb
sbb
outsl
cli
es
push
out
and
push
cmp
sub
xchg
mov
les
shrb
data16
mov
negb
rol
das
push
pop
enter
mov
int
add
mov
mov
negb
cld
push
jp
cli
clc
or
push
adc
dec
imul
lds
test
jae
outsb
test
and
imull
stc
adc
movsl
pushf
pop
mov
stc
add
mov
mov
addr16
and
xchg
shlb
call
mov
pop
sahf
add
sbb
xchg
int3
xchg
into
cli
adc
or
or
fwait
int3
fdivl
test
insb
movsl
fsubrs
je
fnstenv
mov
fsubrl
lock
bound
lods
pop
adc
cmp
inc
push
into
mov
inc
sti
cmp
jnp
jmp
sub
outsl
stos
or
lods
dec
adc
shll
adc
lods
push
cmp
xchg
scas
or
add
lret
xchg
sub
shrl
std
mov
lds
mov
inc
ficompl
into
fsts
mov
sbb
sbbl
inc
mov
mov
xlat
sbb
sbb
xchg
mov
mov
scas
jge
or
in
idivb
pop
pushf
in
jbe
push
adc
push
xchg
mov
mov
test
cmp
dec
pop
test
lret
mov
jnp
lods
movsb
sub
pop
add
int
jl
outsl
jae
adc
cmc
xchg
or
int
push
std
icebp
jnp
enter
xchg
or
lcall
push
movsb
mov
mov
mov
outsb
aaa
inc
je
popa
out
scas
fcmovnu
js
int3
fldt
insb
in
pop
call
pop
dec
lock
jmp
pop
call
popa
xchg
je
xchg
pop
push
and
push
imul
fwait
test
xor
mov
leave
mov
popa
clc
and
sub
outsl
iret
inc
push
stos
sub
cmpsb
popa
sahf
popf
jecxz
add
enter
popa
sub
inc
add
inc
mov
or
and
fdiv
mov
cmp
fdivrs
jno
cmc
mov
ds
cmp
jno
jle
or
sub
cmp
add
inc
xchg
mov
or
rcrl
imul
sbb
pop
push
cmp
hlt
xchg
call
sbb
and
mov
xor
pop
mov
dec
and
add
repz
cmp
xchg
inc
jle
pop
cmpsb
std
stos
jp
cmp
xlat
loopne
scas
cmpsb
cltd
pop
aaa
jb
or
notb
push
dec
push
sbb
addr16
jbe
xlat
movsl
lds
adc
jle
lret
js
bound
mov
std
inc
vcvttpd2dqy
adc
pop
mov
lcall
push
or
xchg
mov
adc
clc
lea
adc
pop
mov
cmp
sub
or
or
insl
sahf
jg
xchg
push
jnp
ljmp
mov
int
in
inc
xchg
mov
dec
xchg
stos
inc
xchg
push
jbe
imul
xor
sbb
inc
shlb
adc
fmull
fmul
dec
lods
inc
adc
pop
ror
inc
push
ds
loope
ret
and
dec
icebp
push
xor
imul
cmp
lahf
add
mov
lret
mov
cs
fsubrl
fwait
out
mov
fadds
sbb
xchg
leave
nop
add
push
inc
mov
push
mov
mov
jmp
cli
dec
gs
daa
push
ret
and
push
cmp
jge
rcll
inc
popf
cltd
push
push
sub
pop
enter
mov
pop
nop
into
test
testl
test
xor
sub
jb
add
push
mov
fistl
jmp
fs
clc
push
fsubr
sub
lcall
daa
and
mov
mov
sub
cltd
jge
into
xchg
fdivrs
mov
sbb
push
inc
cmp
bound
test
hlt
push
ss
lcall
aas
jecxz
mov
in
ds
call
insl
dec
adc
lret
mov
bnd
dec
out
push
or
lea
jg
mov
loop
mov
bound
sbb
mov
leave
fsubrl
xlat
je
and
leave
push
aad
pop
add
mov
rclb
dec
hlt
jns
dec
pop
jg
dec
mov
fs
mov
mov
or
adc
inc
add
cmp
xor
xchg
add
loopne
dec
mov
mov
jecxz
xchg
movsb
daa
in
add
mov
jp
sbb
fs
push
pop
lds
mov
xchg
push
je
pop
mov
test
xchg
adc
jl
jecxz
pop
add
push
xor
movl
loope
sbb
cmpsl
movb
sub
popa
sahf
sub
mov
and
dec
push
mov
out
or
mov
push
adc
inc
sahf
ja
test
pop
cmp
or
loop
mov
mov
and
jns
xor
shll
jno
inc
cli
or
mov
dec
popa
xlat
add
test
ja
add
icebp
push
xor
fwait
enter
std
sbb
outsb
mov
insb
adc
adc
pop
iret
add
adc
insb
adc
pop
fdivs
mov
daa
adc
push
aad
scas
cld
push
fs
xchg
lret
sarb
jle
jecxz
lds
lods
ficoms
xor
add
in
andb
add
repz
jmp
inc
imul
dec
mov
and
sbb
leave
mov
adc
mov
and
lcall
mov
xchg
jo
hlt
ret
loopne
aas
scas
push
jns
cmp
sar
dec
cwtl
iret
dec
sbb
xlat
lret
rcll
mov
sub
cmp
rcr
sbb
mov
gs
fildll
push
out
push
pop
daa
adc
int3
pop
pop
in
push
lret
xchg
clc
or
and
xor
push
test
cmp
in
pop
into
mov
and
sub
stos
lods
lea
lcall
lods
adc
adc
leave
movsb
and
add
jg
mov
mov
roll
cmp
xchg
add
push
and
xor
aas
jne
dec
inc
cmpsl
inc
iret
mov
stc
mov
in
push
inc
js
rorb
cltd
sbb
sbbl
lds
sub
jb
enter
fsubrl
aaa
xchg
push
cs
nop
dec
xchg
roll
lea
and
dec
mov
lcall
icebp
sub
mov
mov
push
jg
adc
pop
in
lahf
mov
vmovupd
enter
sbb
lret
pop
out
jo
xchg
or
lret
adc
fisubrs
and
loopne
mov
aad
loope
add
cmp
pop
push
in
pop
adc
push
sbb
sub
xchg
jmp
dec
jb
inc
dec
outsl
imul
mov
cmp
js
pop
imul
push
sahf
sub
outsl
add
mov
fldenv
or
jb
mov
mov
mov
jp
jp
and
jae
and
or
adc
lcall
push
xchg
lods
in
aas
pop
cmpsb
sarb
in
notl
test
clc
cmp
insl
lcall
lea
dec
leave
mov
popa
mov
xorl
ljmp
and
cli
cwtl
dec
add
sub
push
pop
out
cmp
ja
xor
scas
outsl
xchg
imul
in
test
mov
jmp
lea
mov
std
sbb
lcall
xchg
cmp
add
popa
cltd
rorb
cld
add
cmc
aas
dec
fiadds
cmpsl
xor
adc
scas
adc
dec
xchg
neg
xchg
and
adc
xchg
xchg
pop
or
dec
sbb
in
mov
xchg
mov
sub
gs
out
xor
adc
sahf
shlb
shlb
xchg
cltd
or
jns
stc
out
mov
push
adc
imul
cli
fldcw
cli
stos
bswap
sbb
xchg
mov
std
sbb
and
jmp
cmp
add
ja
jns
pop
out
add
arpl
mov
popf
mov
mov
enter
push
gs
jbe
cmp
push
scas
outsl
lret
lods
cmp
xchg
dec
jl
mull
pop
movntps
pop
cmp
xchg
adc
test
sub
addb
inc
out
pop
int
xchg
mov
and
jo
adc
push
jne
jge
xor
loopne
xor
mov
scas
movsl
inc
scas
jb
push
mov
and
icebp
cli
mov
scas
stc
aaa
lea
roll
in
sahf
scas
xchg
iret
cmp
inc
or
xorl
js
orl
jg
out
adc
mov
xchg
xlat
cld
inc
pop
xor
mov
mov
neg
xor
movsb
in
push
jae
sub
mov
leave
jbe
cwtl
inc
and
push
inc
cmp
push
push
and
rorb
notl
mov
inc
adc
rol
inc
jecxz
addr16
fnsave
jecxz
mov
mov
xor
xor
in
cld
mov
pusha
loope
dec
rolb
jno
outsb
pop
fadds
int3
mov
xlat
lahf
mov
mov
lock
jl
rclb
sub
cwtl
scas
xor
sbb
sbb
inc
lret
cwtl
lods
aas
movsb
jg
inc
push
sub
pop
lds
aas
sti
xlat
xchg
je
outsb
and
mov
scas
insl
gs
mov
dec
xchg
pop
and
in
sub
cmp
xchg
jle
cli
xor
or
sti
aas
cmp
pop
mov
push
cmc
jle
mov
push
xor
fidivrs
mov
cltd
je
xchg
jl
stos
insb
fstpt
sub
in
mov
lock
xchg
out
loope
xorl
inc
inc
daa
test
mov
mov
cmp
bound
xor
jno,pt
xchg
lret
adc
mov
dec
sbb
outsl
ds
sub
decl
rolb
shlb
mov
flds
les
pop
cmp
jb
jge
dec
dec
mov
push
dec
adc
push
aad
shlb
jle
lods
fstps
lret
imul
mov
stc
xor
popf
add
divl
xchg
lods
icebp
dec
fsubrp
xchg
add
and
jnp
loopne
jle
jns
popa
mov
push
shll
mov
popf
aaa
mov
push
pop
or
xor
daa
mov
pop
sbb
xlat
push
mov
adc
and
push
dec
add
cs
jb
inc
fcmovbe
repz
cmpl
dec
mov
call
loope
mov
and
testb
pop
mov
movd
outsb
enter
mov
rsm
adc
ja
mov
jno
lea
cmpsb
push
in
jbe
into
pop
cmp
pop
enter
cwtl
adc
dec
pop
jae
xchg
push
imul
mov
inc
int3
test
mov
mov
sub
push
out
or
jp
fmuls
cmp
dec
in
xchg
jecxz
mov
jne
sarb
push
xchg
sbb
in
shl
inc
lods
or
and
leave
jo
outsl
fbstp
dec
pop
pop
aaa
into
fbstp
test
mov
fdivr
pop
mov
fisttpll
push
pop
xchg
testb
das
fcmovu
push
sub
out
out
mov
popa
mov
sub
mov
inc
jns
das
int
inc
jo
mov
rcll
push
mov
mov
dec
loop
adc
imul
jmp
enter
rcrl
leave
lods
xchg
mov
push
fimull
fldl
mov
jne
push
repnz
aam
js
and
xchg
sbb
xor
dec
push
xlat
dec
outsl
jmp
stos
addr16
sbbb
or
in
fcmovb
int
add
lea
lcall
adc
xor
dec
jmp
xchg
popl
jne
jle
pop
add
xchg
fstps
ds
xchg
sbb
lret
repnz
scas
inc
orl
adc
pop
xor
sub
jae
out
inc
adc
sbb
dec
hlt
sub
adc
addb
push
loope
notl
adc
call
inc
or
jge
scas
jne
cmpsb
ret
adc
push
imul
or
loope
arpl
and
and
scas
movsl
sbb
add
mul
add
repz
mov
sbbl
mov
mov
jbe
es
cmp
xor
out
bound
xorb
enter
push
jge
mov
push
test
mov
xor
adc
pop
out
and
jae
es
or
cld
add
pop
pop
rclb
add
xchg
xor
arpl
out
xchg
inc
sub
ss
lea
jmp
cmp
insl
test
sub
or
ljmp
lock
mov
or
mov
fistl
xor
fwait
rorl
fwait
add
add
ja
and
pop
xor
andl
test
pop
mull
addb
sub
mov
mov
sahf
test
mov
add
insl
mov
leave
out
movsb
aaa
lahf
pusha
or
test
ret
inc
daa
repnz
loopne
aad
repnz
cmpsb
bound
pop
stos
sbb
fsubp
xor
aam
imul
inc
frstor
push
xor
inc
or
fdivr
dec
sub
fsub
jo
and
pop
testl
pop
out
in
cwtl
push
mov
cmp
xor
adc
stc
call
jecxz
out
xlat
mov
xchg
dec
cmp
imul
inc
daa
shlb
std
jge
je
repz
leave
dec
lcall
mov
test
xchg
sbb
iret
pop
sbbb
cli
push
mov
xchg
iret
popf
lock
mov
and
imul
test
mulb
iret
out
cmp
bound
jmp
lods
add
stos
scas
in
in
push
addl
das
or
ret
or
fdivs
jnp
mov
hlt
mov
fisttps
push
dec
inc
repz
dec
mov
in
es
inc
jl,pt
xor
and
std
int3
xor
push
mov
movsb
jl
mov
jmp
add
rcr
adcl
data16
hlt
dec
xchg
fsubrl
int
call
rcll
xchg
pop
sbb
jne
mov
mov
sbb
fs
es
cmp
mov
mov
loop
in
fcomps
xor
popf
lods
push
popf
sbb
add
je
sti
mov
cmp
lock
outsl
hlt
sbb
push
dec
mov
fwait
pop
dec
outsl
mov
aaa
pop
xchg
pop
pushf
sub
lock
aaa
stc
mov
sbb
xor
out
push
jno
ficoms
call
lods
adc
adc
out
xor
in
ficomps
cli
push
and
adc
or
mov
cmp
adc
adc
orb
stos
aad
jg
mov
xchg
mov
push
and
and
mov
fsubrl
out
adc
or
xlat
divb
inc
and
hlt
es
pop
clc
mov
insb
ds
hlt
lds
mov
out
mov
cmp
cmc
and
lea
scas
out
mov
push
lods
pusha
sbb
inc
pop
sbb
adc
inc
pop
sub
scas
push
xchg
inc
and
push
cmp
dec
dec
pop
jg
sub
cld
pop
jae
jns
mov
dec
stc
adc
inc
fcomp
std
mov
xchg
cwtl
sub
loop
mov
pop
mov
lods
mov
pop
rcr
and
pop
std
xchg
fnop
jno
lods
inc
and
push
cs
and
test
push
leave
push
lods
mov
jecxz
mov
cmp
push
loope
shl
bound
inc
cmp
icebp
xchg
ds
push
out
cmp
mov
inc
popf
cs
fs
fwait
sbb
pop
and
pop
jae
push
ror
lods
xor
decb
lods
ljmp
push
outsl
notb
aad
jmp
mov
jg
adc
out
dec
push
aas
movsb
mov
mov
stc
cli
inc
sti
shld
inc
fidivl
repnz
mov
mov
mov
fld1
xor
jnp
sti
pop
movsl
leave
jbe
inc
xorb
in
pushf
add
adc
rorb
cltd
hlt
ja
aaa
sub
jp
out
jb
and
cmp
push
and
pop
fnstcw
cmp
xchg
pop
loopne
add
shrb
pop
sub
mov
jg
cmp
lea
subl
adc
sbb
mov
mov
lret
xchg
ret
xor
imul
push
fldl
cmpsl
lcall
sbb
aam
pop
xchg
leave
lret
sbb
inc
mov
cs
push
in
outsb
adc
jl
cmpsl
aaa
xor
pop
ljmp
rclb
mov
pop
sub
sti
int3
loope
and
clc
mov
mov
mov
cmpsb
fwait
pushf
ficompl
jns
jp
es
dec
rcrl
fisttps
cwtl
popf
mov
ljmp
test
add
imul
mov
pop
lcall
out
stc
aas
adc
mov
jmp
rolb
fst
dec
cmp
fiadds
cmp
dec
push
stos
mov
in
mov
lcall
pop
xchg
push
into
lret
sub
popf
xchg
test
and
loopne
movsb
mov
inc
fidivl
ja
mov
and
add
cs
mov
test
sbbl
ljmp
lea
mov
push
mov
mov
xor
adc
testl
pusha
dec
inc
in
insl
pop
ficomps
adc
sbb
data16
adc
push
enter
push
jbe
ja
leave
sub
clc
test
dec
pusha
sahf
repz
add
ljmp
fwait
inc
ret
mov
mov
dec
dec
cmp
aam
iret
imul
push
or
cltd
jbe
in
push
hlt
adc
inc
push
mov
dec
pop
jp
or
jae
inc
push
mov
inc
jle
mov
mov
nop
push
int
das
mov
cld
or
in
aam
push
xor
xor
out
adc
sub
cwtl
xchg
jbe
shll
mov
lods
movsl
push
push
cld
out
adc
mov
idivb
addr16
cmp
jns
or
stc
or
mov
jae
out
jmp
in
inc
adc
and
pop
xchg
mov
mov
push
mov
xor
sub
sti
idivl
mov
addr16
jmp
pusha
adc
push
jnp
arpl
aad
ljmp
xor
fdivrl
push
and
inc
mov
push
mov
xchg
sub
inc
sub
scas
push
ljmp
aam
stos
mov
xchg
add
and
pop
loop
enter
leave
add
mov
adc
cmp
add
xchg
lock
dec
pop
aas
jbe
mov
adc
in
arpl
dec
sahf
push
sbb
lea
call
or
adc
cmp
lret
div
test
out
dec
xchg
cs
imul
xor
inc
outsb
sbb
pop
cmp
adc
xor
mov
jl
cmp
mov
fists
mov
fadds
or
jnp
and
cmp
icebp
rorl
cld
pop
fcoms
cmp
out
andl
in
push
inc
sub
mov
xor
fs
decl
pop
inc
insb
adc
test
push
push
movsl
xor
jp
lret
mov
pop
cmpsb
fisubrs
add
das
jge
xchg
jl
inc
jmp
call
ret
imul
sbbb
loopne
inc
xlat
push
aad
cld
mov
out
gs
or
sbb
sub
lea
lea
mov
cmp
es
fidivrl
mov
mov
mov
push
push
sahf
test
xlat
adc
inc
shrb
ja
das
mov
dec
fdivrp
ficomps
mov
jns
push
and
sub
testl
mov
pop
xor
mov
lods
lret
int
lods
mov
sbb
lds
mov
inc
jae
cld
pop
mov
add
add
cld
inc
testb
xchg
cmc
popf
popf
push
and
sub
adc
js
mov
push
adc
push
mov
dec
ja
scas
call
mov
out
xchg
dec
jbe
insl
sub
std
push
cmpl
jnp
scas
roll
add
arpl
flds
arpl
imulb
lods
or
or
pop
lcall
push
fs
pop
dec
jo
pop
jbe
jnp
add
jp
mov
push
popf
movsb
clc
mov
js
and
shl
adc
jecxz
mov
inc
inc
jge
aad
int3
or
inc
aas
call
into
pop
jl
sbb
xor
psrlw
bound
shll
pushf
xchg
mov
mov
adc
loop
ficomps
inc
mov
inc
and
and
icebp
lds
fsubrp
faddl
jge
rorl
sub
dec
mov
dec
nop
xor
xchg
out
fisubs
call
push
mov
fiadds
mov
andl
dec
arpl
and
jp
mov
dec
xchg
pusha
pop
addr16
outsl
sub
xor
push
call
adc
xchg
ljmp
xor
push
roll
mov
mov
inc
lock
stc
stos
push
cmp
push
mov
insb
and
divps
xor
loope
adc
adc
or
loop
jae
add
sbb
cmp
mov
mov
cs
frstor
mov
or
aad
mov
push
dec
imul
lcall
xchg
push
and
loope
sub
or
pop
xchg
mov
adc
stos
stos
mov
or
out
aas
xchg
shrb
push
in
rol
xor
jecxz
mov
or
in
fbstp
dec
adc
dec
fcmovb
mov
mov
mov
push
sbb
xor
in
and
imul
fimuls
mov
stc
mov
add
popa
mov
mov
jl
gs
into
lock
repz
pop
pop
sbb
outsl
jg
pop
cmp
fstl
repz
outsl
ds
mov
sbb
jecxz
jb
dec
gs
inc
lock
dec
and
cmp
mov
mov
lcall
insl
lock
mov
scas
imul
and
rcr
loop
imul
pushf
stos
sbbl
inc
out
enter
aam
or
outsb
adc
sub
mov
mov
les
lcall
add
filds
lock
mov
or
leave
fdivrp
int3
shlb
dec
mov
jne
pop
inc
mov
ffreep
in
loope
lcall
cmpsl
xchg
mov
fldl
mov
pop
movsb
dec
dec
add
jp
fsubrl
ja
mov
pop
and
data16
ret
mov
loop
cli
mov
push
xchg
js
shlb
out
cld
int3
mov
test
sub
int3
sbb
sahf
push
or
push
std
jnp
add
jno
ljmp
mov
xchg
jne
stc
pop
jae
loopne
push
cli
jbe
mov
dec
test
add
pop
les
or
data16
rcr
insb
mov
or
fildl
loope
push
daa
mov
das
shl
mov
mov
imul
jecxz
scas
xchg
push
ficoms
mov
popf
sub
jmp
fwait
dec
mov
std
pop
pop
jns
cmp
mov
add
shlb
xchg
mov
lcall
shll
mov
mov
dec
xchg
mov
roll
sub
mov
push
mov
sbb
adc
pop
stos
add
jo
nop
ss
or
mov
xor
pop
dec
lock
cmpsb
cld
mov
dec
out
jb
push
mov
xchg
dec
loopne
fs
insb
int3
inc
push
cmp
or
dec
jl
andb
stc
in
icebp
dec
lea
or
push
imul
dec
xchg
add
sbb
push
add
mov
push
xchg
push
inc
subb
and
inc
cmp
pop
pop
adc
ss
dec
mov
aad
mov
test
xor
xor
scas
pop
inc
mov
and
xchg
fcomps
movsb
fcoml
push
sbb
sbb
mov
push
push
js
mov
hlt
mov
mov
mov
add
cs
cmp
adc
mov
inc
sub
outsb
lea
dec
push
arpl
mov
xor
shrd
mov
rclb
mov
sbb
imul
out
movl
and
pop
adc
xchg
in
cmpsb
movsl
jmp
mov
jecxz
out
fcoms
pop
in
mov
xor
clc
xchg
and
dec
sub
jmp
xor
hlt
pop
pop
mov
arpl
xchg
xor
xchg
jmp
outsb
std
iret
lock
sbb
lock
out
jp
inc
push
or
pop
cmp
in
pusha
int
pop
push
adc
sti
frstor
xor
or
pop
mov
ss
shr
shl
mov
or
xor
jbe
fdivrp
jle
xchg
addb
js
push
inc
shrb
cli
add
cmpsb
add
inc
pop
pop
orl
mov
push
mov
imul
andl
push
stc
pop
ret
xchg
push
jmp
dec
pushf
adcb
lret
xor
add
sarb
cmpsl
push
shlb
jg
pusha
add
xlat
cmpsb
cmpsb
lret
fstl
push
ja
mov
lds
test
sub
inc
mov
add
je
inc
adc
stos
jl
cwtl
add
pop
push
popa
xchg
jbe
je
test
dec
pop
sbbl
xor
push
imul
xchg
cmp
cmc
sbb
test
sbb
dec
pop
stos
jo
xor
sarb
cld
cmp
cli
lahf
or
cmp
fldln2
xor
inc
les
sub
push
daa
jb
xchg
ds
inc
sub
arpl
js
shrl
in
aas
es
mov
xchg
lret
mov
adc
adc
cltd
ficompl
or
ja
pop
or
lret
out
xchg
mov
out
ret
jp
mov
arpl
ss
int3
out
sub
arpl
stc
mov
test
lods
add
enter
fidivrl
xor
push
push
cmp
lret
xchg
in
mov
jmp
jmp
jp
ss
mov
jno
jae
adc
scas
jmp
int
shl
sbb
adc
mov
stc
jne
leave
test
jnp
fistpll
inc
lock
push
adc
jb
push
mov
add
les
adc
xlat
pop
mov
jmp
imul
cli
lret
push
fisttpll
jo
ds
mov
jecxz
loope
mov
jb
bswap
dec
mov
repz
adc
lret
mov
xlat
fwait
loope
pop
shll
cmp
cmpl
and
jl
jbe
sbbb
and
flds
jmp
pop
iret
push
or
push
nop
mov
popf
fldt
xor
mov
pop
inc
mov
sub
jmp
je
in
dec
dec
loop
push
jmp
lahf
and
mov
lret
mov
cltd
add
cli
fsubs
imul
or
je
outsb
adc
outsl
clc
popa
xor
testl
fstps
add
cmp
inc
gs
arpl
arpl
lahf
test
mov
add
out
adc
and
imul
pop
scas
xchg
int
jle
and
push
jb
aaa
repz
push
iret
outsb
jl
cmp
outsl
nop
clc
in
js
cmc
imul
mov
mov
adc
add
dec
xchg
mov
in
lods
nop
cmp
jbe
movsb
arpl
xchg
lcall
nop
pop
les
mov
into
popf
ret
sbb
mov
repnz
sbb
gs
mov
fadds
jl
pop
rorb
jmp
push
pushf
mov
aam
xchg
inc
outsl
sahf
insb
jle
lods
or
sahf
push
std
mov
push
or
es
stos
hlt
repz
inc
adc
nop
dec
lods
mov
adc
arpl
pop
sbb
xchg
fwait
popa
push
in
adc
and
push
fisttpll
mov
jnp
data16
iret
pop
push
sbb
mov
push
test
mov
pop
popf
xchg
das
sbb
cmp
jmp
cld
sbb
mov
add
ja
xchg
lahf
pop
pop
lods
out
xchg
decl
loop
lock
and
and
mov
popa
movsb
adc
mov
mov
out
lods
push
xchg
loope
in
mov
cmp
stos
jge
sbb
jl
pushf
cli
xor
push
mov
mov
sbb
lret
or
and
lahf
and
pop
add
pop
ljmp
sub
lahf
sti
adc
pop
test
mov
or
arpl
inc
dec
ljmp
sub
mov
loop
sbb
inc
faddl
paddd
adc
mov
push
or
xor
xchg
xor
sahf
fwait
test
lcall
add
pop
lcall
sarb
pop
xor
dec
xchg
gs
fdivl
scas
je
xor
aaa
push
inc
xchg
lods
orl
jbe
es
fxch
sub
gs
mov
int3
pusha
push
nop
loope
je
shlb
imul
sahf
mov
insb
cmpsl
cs
cmp
push
das
hlt
cli
mov
ret
aam
int
notb
pop
fcmovbe
mov
pop
dec
and
fstl
stc
in
stos
push
cmp
inc
mov
add
stos
testl
jecxz
mov
cmp
pushf
lds
les
jne
popf
inc
jmp
xchg
add
popa
rclb
inc
ficompl
frstor
jg
or
dec
bound
mov
add
jae
add
push
addr16
mov
jecxz
xchg
shrb
repz
frstor
mov
mov
lds
dec
push
jecxz
repnz
hlt
lods
imul
ds
mov
cmp
mov
sbb
scas
mov
hlt
sbb
dec
ja
out
jecxz
mov
das
dec
sub
out
call
shrb
mov
mov
sbb
pop
test
inc
lret
mov
out
add
xor
test
pop
adc
mov
cmp
adc
sbb
push
movd
pushf
xchg
cld
or
fisubs
jb
mov
std
inc
mov
mov
movsb
push
lock
mov
outsb
fwait
push
mov
daa
popa
test
xchg
adc
adc
or
pop
mov
out
fidivrl
inc
and
dec
mov
in
and
xor
ret
cmp
xchg
dec
lea
lret
cli
mov
and
scas
or
dec
arpl
mov
ja
push
pop
rcr
pop
imulb
dec
jle
and
xor
sub
mov
mov
jg
sti
adc
out
inc
sbb
leave
lea
mov
xchg
mov
jp
aas
sbb
loop
cmpsb
imul
jl
test
repz
cltd
add
and
aas
add
add
aas
mov
xor
or
jbe
fidivs
inc
lret
mov
mov
sub
loop
push
add
ds
mov
and
pusha
push
cmpsb
xor
movsl
adc
out
scas
or
add
dec
out
and
inc
add
call
mov
dec
imul
loope
pop
pop
or
and
stc
jae
dec
imull
fnstcw
xor
sub
int3
orb
push
mov
fldenv
mov
jl
es
xchg
lret
sub
lahf
cmpsl
nop
cwtl
jnp
and
pop
mov
lcall
xchg
xchg
sbb
clc
mov
inc
mov
inc
mov
les
add
add
jbe
shl
pop
dec
sbb
les
push
adc
jg
fwait
or
ljmp
ret
in
add
aam
push
inc
icebp
jb
imul
inc
inc
pop
pusha
cmp
cwtl
sbb
sub
add
rolb
xor
fsubrl
mov
or
ficompl
push
push
xor
vcvttpd2dqx
sub
mov
rcrl
aas
jns
mov
addr16
xchg
mov
in
push
add
fbstp
fstps
orl
in
fsts
pop
fwait
addr16
mov
add
mov
or
add
push
jne
push
xor
js
mov
sub
pop
ja
stos
adc
fistpll
testb
cmc
add
inc
notl
mov
mov
sub
sub
test
dec
in
sub
sbb
imul
pop
sub
out
idivl
and
sub
shld
cmp
mov
sub
fisubrl
daa
scas
inc
faddl
dec
inc
dec
push
xchg
es
js
int
mov
sub
cltd
lds
mov
ret
imul
sbb
cmp
pop
out
xchg
imul
mov
xchg
push
test
jb
dec
or
lcall
lret
push
push
sub
bound
pop
clc
test
pop
scas
ret
sub
jmp
dec
imul
stos
vmovd
test
inc
fstpt
ret
inc
fsts
jp
push
mov
cmp
shlb
xor
hlt
inc
cmpsl
aas
repz
mov
jp
xor
rcll
lods
pop
iret
test
inc
call
sbb
pop
into
int3
sbb
pop
sbb
into
fidivrl
fs
and
fdivs
pusha
into
mov
jcxz
mov
add
add
shll
push
push
aaa
sahf
adc
ret
push
insb
add
mov
mov
ffree
sarb
ds
cli
xchg
lret
add
sti
aaa
ljmp
fsubrs
xchg
fisttps
int
stc
insl
aas
mov
push
nop
out
fwait
aam
dec
sti
dec
insb
sub
pushf
mov
insb
aam
loop
int
cltd
aaa
subl
dec
incl
cmp
inc
lret
jmp
pop
mulb
pop
mov
jg
and
mov
icebp
mov
dec
ja
push
dec
leave
or
js
sti
mov
ficomps
les
lret
out
bound
movsl
cmpsl
ss
addr16
cmp
stos
ret
cmp
jns
in
pushf
or
cld
popf
mulb
dec
sub
cmpsb
fisttpl
sbb
insb
bound
in
or
into
insb
enter
xchg
push
adc
test
mov
lcall
mov
ss
add
mov
cmp
std
outsb
mov
mov
movsb
arpl
mov
imulb
out
push
mov
jne
arpl
filds
inc
outsl
inc
jno
lret
outsb
dec
pop
ds
rclb
sub
rcrb
xor
ret
add
adc
test
roll
movsl
mov
incl
mov
dec
aas
loop
ret
adcb
mov
repnz
insl
xchg
les
js
shrl
hlt
sbb
hlt
int3
or
movsb
testb
sub
jge
cld
add
sub
aas
xor
out
shrb
dec
hlt
jmp
and
jecxz
lcall
lea
and
xchg
and
test
movsl
xor
pusha
and
adc
and
push
pop
xchg
das
jmp
sub
sti
pop
adc
fnstcw
adc
mov
cs
mov
out
xchg
sar
add
cmc
adc
dec
sub
push
cmp
push
mov
cwtl
in
add
fmuls
adc
fadds
out
xor
and
icebp
pop
je
jae
cmp
int
pop
ds
scas
daa
pop
mov
sbb
jmp
xchg
clc
fwait
sub
lea
and
inc
jo
xchg
jns
fbld
aam
mov
loopne
test
psubsw
std
loopne
fimull
cmp
bnd
mov
jbe
out
lods
cmpsl
push
or
add
push
test
xchg
jg
mov
adc
test
fcmovnb
pop
xchg
pop
outsl
inc
adc
out
fs
pop
adc
add
mov
sub
sbb
push
ljmp
mov
inc
mov
adc
imul
loop
lods
add
pop
fcmovb
stc
roll
mov
sbb
push
cmp
inc
inc
and
jbe
test
push
jbe
mov
jl
and
or
in
sub
jbe
nop
adc
mov
test
push
insb
ja
test
jge
ret
fdivl
jb
cli
stc
aaa
pushf
mov
frstor
pop
or
mov
lock
sbb
xchg
dec
js
xor
xlat
or
mov
and
mov
pusha
stc
int3
repz
cmpsb
insl
stc
xlat
mov
mov
cmp
mov
arpl
mov
fwait
jo
mov
ficoms
mov
lods
pop
xor
test
arpl
ds
dec
push
adc
sti
shll
pushf
sbb
clc
sahf
test
cs
sbb
dec
inc
lret
enter
daa
subb
inc
psubsb
and
xor
fwait
mov
and
push
ret
inc
das
out
fidivrl
xchg
add
inc
outsl
xchg
repz
mov
pop
mov
mov
mov
push
jmp
sbb
add
inc
xor
mov
adc
and
mov
movsb
sub
clc
pop
movsl
mov
xchg
test
cmp
xor
cmp
push
mov
cmp
jnp
xchg
fwait
sub
ds
fdiv
sub
lar
in
cmpsl
enter
xorl
cmp
add
dec
rcrl
xor
pop
sbb
dec
out
sbb
inc
fs
aam
popf
ret
xor
jmp
lret
enter
out
cli
outsb
mov
inc
sub
add
xor
stc
xor
loope
jg
adc
ss
jl
popa
lahf
pop
xor
out
shrb
insl
mov
scas
pushf
mov
adc
mov
xchg
into
mov
xchg
push
loopne
sub
mov
pusha
cmp
in
cmpsl
jp
scas
clc
pop
jge
mov
inc
dec
in
pop
xor
inc
loope
sbb
jae
xor
push
pop
pop
cmp
inc
cmp
cmp
dec
pop
hlt
je
pop
stos
adc
clc
pop
mov
push
lds
add
stc
mov
cmpsl
push
or
cltd
pop
popf
stos
mov
and
xchg
orl
loope
js
stos
into
imul
cs
je
mov
or
jmp
mov
adc
shrb
mov
mov
inc
adc
in
or
push
repnz
scas
or
xlat
inc
imul
push
pop
xor
addr16
mov
fs
xchg
jbe
adc
fdivrs
roll
xchg
pop
or
ja
fmull
sbb
mov
sahf
mov
popl
sub
or
and
push
xor
hlt
jo
xor
inc
ficomps
aas
jl
inc
pop
popf
leave
in
outsb
fiaddl
jl
pop
xorl
aas
pop
lret
and
jecxz
hlt
sub
or
std
cmc
aad
mov
lds
movsl
xchg
mov
cmp
lcall
hlt
in
xor
mov
jo
push
mov
pop
jmp
pop
mov
test
pop
dec
and
cmp
je
jns
repnz
das
icebp
xchg
outsb
dec
cwtl
lcall
jo
mov
push
ret
lods
dec
pop
push
std
jns
ss
mov
shlb
repz
ret
push
inc
pop
mov
xchg
aaa
and
push
cmp
jnp
scas
pop
cs
and
inc
fcmovbe
xlat
orb
push
cmp
cmp
mov
or
mov
jge
pushl
pop
sub
mov
inc
addb
cmp
faddl
jo
add
filds
leave
pop
mull
add
lret
jle
sarl
popa
cmp
iret
adc
fistpll
fwait
inc
mov
and
adc
push
ror
sbb
adc
mov
ja
ffree
arpl
loopne
ss
add
nop
cmp
out
cmp
lret
mov
sub
fistpl
mov
xchg
mov
lcall
pop
adcb
pop
inc
mov
mov
mov
dec
fs
fisubl
push
call
leave
jns
sub
stc
les
jg
test
pop
dec
cs
xor
mov
mov
dec
dec
or
mov
jmp
outsb
out
stos
pop
push
fwait
xchg
js
pusha
and
jl
or
sbb
cmp
fstpt
lods
dec
mov
pop
fnstcw
ljmp
call
dec
cmp
out
add
aaa
add
rcll
push
scas
cmp
jno
adc
aad
les
jl
dec
dec
outsb
movb
lcall
adc
sti
mov
pop
adc
xchg
fnstsw
cltd
outsl
loope
fbld
push
push
cmpl
daa
call
imulb
je
movsl
add
and
enter
push
stos
daa
shr
out
mov
mov
and
dec
ja
cmp
mov
or
ret
xchg
xor
mov
xchg
cs
cs
gs
clc
sub
cmpsl
inc
ret
xchg
push
insb
cmp
lret
mov
mov
jne
jp
pop
add
push
movsl
dec
negl
stos
popa
in
or
shrb
fiadds
jbe
stos
xchg
xchg
insb
jmp
rclb
jl
aam
cmp
cmp
sbb
shr
pop
les
in
ds
lcall
ds
adc
int
bnd
xchg
dec
cmp
inc
push
fisttps
and
lcall
cmp
mov
pop
mov
aad
cs
mov
cld
mov
mov
rcrl
or
xor
pushf
fsts
inc
mov
addr16
push
push
call
loop
push
movsl
jne
pop
lcall
and
sbb
bnd
jp
fidivrl
add
pop
enter
in
cmp
aad
lahf
cltd
icebp
jns
cmc
pop
xchg
adc
inc
push
push
dec
pop
daa
mov
xor
mov
mov
xor
xor
rorl
pop
cmp
jp
lods
mov
adc
xor
pop
cmp
mov
sbb
dec
or
pop
fsubl
jnp
fstps
adc
mov
sbbl
add
mov
mov
jnp
inc
and
cmpb
test
loop
imul
out
mov
lea
xchg
push
pusha
loope
andb
jno
testl
jnp
cmp
fwait
adc
sub
xchg
jmp
cmc
pusha
mov
push
xor
popa
das
and
adc
inc
push
bound
xchg
mov
adc
mov
jmp
cld
stos
lds
push
push
mov
jbe
fistps
aad
add
and
repz
xor
or
push
jle
push
add
repnz
and
xor
sub
inc
fdivrl
xor
mov
lret
stos
add
xor
jo
cli
ret
cli
sahf
test
sbb
fwait
popf
xor
mov
stos
pop
sub
adc
int
xlat
jge
mov
push
mov
jb
jbe
inc
cmp
dec
xor
or
cmp
xchg
add
pop
sub
fs
pop
add
push
fadds
pushf
jbe
push
jp
stos
fidivrl
sbb
mov
xchg
pop
pop
dec
xchg
mull
fsts
aam
dec
inc
shll
adc
pop
not
jle
repnz
xor
lret
inc
std
xor
and
scas
add
mov
out
and
gs
das
lods
and
adc
cmc
push
iret
pop
or
popf
xchg
mov
push
and
sbb
mov
cmp
imul
mov
jecxz
push
sahf
cmp
in
cmp
fwait
js
inc
or
inc
test
xorb
aaa
dec
jp
pushf
push
test
sub
out
dec
sub
jp
pusha
clc
shrb
int3
xchg
inc
lcall
xor
insb
cld
adc
movl
rorl
inc
aam
adc
ds
mov
jmp
ret
jae
out
mov
and
mov
fadds
in
fldenv
movsb
or
xor
lock
cli
xlat
das
cmp
cmp
sbb
ret
pop
add
enterw
xchg
add
int3
jbe
sub
andb
mov
fwait
jb
pop
out
pop
sub
aas
decl
cmp
cli
xorb
inc
add
fldcw
cmc
jecxz
push
push
icebp
dec
fmull
arpl
test
sub
cmp
sbb
push
bswap
imul
aaa
or
inc
in
push
loopne
lock
xchg
sub
xchg
adc
add
stc
push
xchg
pop
inc
jecxz
bound
or
stos
fsubl
leave
jmp
rol
jmp
push
les
xor
daa
out
xor
scas
repz
jb
loope
jno
sub
xor
xchg
test
jne
inc
jns
xchg
hlt
sub
mov
mov
pop
daa
adc
scas
fdivl
das
cmp
dec
and
or
pusha
mov
mov
ret
pop
xor
in
fadds
push
adc
data16
sarl
sub
push
aam
fwait
jb
or
pushf
adc
and
out
add
mov
stos
jnp
and
push
out
adc
pushf
gs
jl
pop
sub
mov
rolb
out
mov
jg
pop
roll
movb
icebp
out
stos
mov
mov
mov
xchg
dec
aaa
lds
xchg
sbb
or
sbb
mov
xchg
in
clc
sar
lahf
xor
leave
movsl
iret
daa
fdivrl
push
aad
dec
sub
insb
orl
mov
jecxz
outsl
sub
ss
cltd
std
adc
sub
popf
psubusw
lret
aad
cmp
pop
sub
push
rcr
jp
xlat
cmc
loop
mov
jne
sbb
mov
loop
scas
jbe
ret
fmul
xchg
dec
mov
xor
addr16
mov
test
mov
mov
push
dec
push
cwtl
pop
je
aam
fiadds
push
leave
pmaddwd
out
adc
outsb
pop
mov
inc
xchg
or
aas
sbb
and
rorb
push
mov
xor
popa
mov
repnz
sbb
test
mov
test
sub
or
push
sub
mov
mov
xchg
adc
jne
pop
cmp
adc
add
pop
into
dec
mov
xor
cld
movsl
pop
in
rclb
shlb
mov
and
push
jecxz
lcall
in
arpl
stc
dec
sub
push
mov
mov
sahf
lea
mov
xchg
mov
jl
xchg
lcall
cld
shr
loop
lcall
adc
cmp
jno
addb
sub
push
add
xchg
pop
xchg
daa
jbe
push
push
add
xchg
or
xchg
enter
stc
and
mov
imul
push
pop
cli
adc
push
lea
aam
cs
out
imul
lea
outsb
cmpsb
outsb
insb
enter
mov
popa
sub
js
or
hlt
hlt
popf
mov
aad
insl
test
jmp
aaa
fstpt
popa
mov
iret
add
inc
or
je
or
xor
mov
insb
bound
es
pop
dec
ds
and
shl
out
push
cltd
inc
inc
insb
test
pop
loopne
jns
pop
aam
adc
and
inc
push
hlt
lahf
mov
or
sbb
inc
in
mov
jae
lods
aam
lods
rcrl
and
sbb
push
push
cmp
rclb
call
sub
repnz
pop
xor
mov
inc
dec
lods
popa
cmp
mov
adc
scas
jge
sahf
dec
sub
push
sub
jnp
or
push
lds
leave
test
imul
push
mov
push
test
sarl
adc
push
jg
or
test
dec
mull
and
hlt
adc
xchg
lods
or
and
lock
mov
or
das
and
pop
xor
ret
mov
sub
and
or
dec
jns
lock
mov
imulb
xchg
stc
cmpsb
stos
repz
inc
iret
cld
sahf
mov
adc
stos
movsl
cmc
mov
into
jmp
add
ja
jnp
mov
or
test
into
mov
test
sub
dec
data16
push
jnp
sar
xchg
mov
shll
pop
jecxz
loop
je
scas
lock
aaa
loopne
inc
pop
test
cmpsb
clc
aaa
inc
xor
mov
mov
lods
push
cmp
and
or
cwtl
jp
testl
int
and
push
rep
mov
sti
push
call
mov
adcl
jo
es
push
pushf
movsb
sbb
mov
icebp
pop
ja
leave
adc
clc
dec
repz
test
adc
add
push
xor
imulb
dec
xorl
jnp
cltd
roll
or
sbb
push
xor
xchg
cmp
jne
mov
popl
das
adc
adcb
cmp
push
gs
xchg
int
mov
lock
shll
lock
rcl
movsl
mov
nop
mov
cwtl
cmp
add
sub
iret
jp
inc
xchg
and
ret
or
das
jle
add
dec
orl
lea
cmc
les
and
sub
loopne
pop
xlat
add
mov
jmp
les
fxtract
ss
mulb
out
mov
push
xchg
mov
jns
add
add
xchg
aam
in
jne
fildll
cmpsl
mov
std
jp
shll
or
jmp
cmp
inc
in
test
jmp
insb
mov
lcall
mov
andb
jo
fisttps
lcall
or
xor
jae
push
inc
sbb
stos
setge
xor
cwtl
scas
mov
movsl
push
push
jnp
jg
bnd
mov
lret
ret
sbbb
adc
inc
nop
mov
sti
call
stos
jg
mov
pop
and
push
lcall
xchg
or
inc
ljmp
and
or
aaa
faddp
cmc
outsl
ret
xchg
js
lret
and
adc
ljmp
sar
xchg
sarl
fwait
insb
sbb
xchg
idivb
adcb
int
sbb
jmp
test
and
adc
movsb
jnp
xchg
addr16
sbb
dec
in
test
imul
pop
sarb
pop
mov
sub
sub
dec
stos
push
mov
aam
mov
push
push
ret
cmp
insb
mov
aaa
mov
sub
pushl
lock
cmp
fwait
or
xor
xlat
ljmp
movsl
stos
pop
jne
repnz
addr16
jae
xchg
fmul
or
and
sbb
pop
pusha
lret
adc
int
and
fwait
loopne
mov
int3
scas
xor
bound
xchg
in
jl
ret
fnsave
cmp
mov
push
jbe
cmpsb
shlb
dec
test
stc
jp
into
jb
xor
push
mov
sarb
in
pop
mov
cli
xor
sbb
or
xchg
into
push
pop
shll
clc
nop
dec
sub
inc
clc
mov
rcrb
dec
sbb
cmp
stos
fs
push
mov
adc
cltd
ds
sub
les
out
jne
cmc
xchg
sbb
iret
push
dec
fildl
clc
pop
mov
inc
cmpsb
xchg
jo
aaa
mov
xchg
out
mov
xor
push
jae
aad
dec
jbe
inc
xchg
stos
push
sarb
adc
xchg
loop
xor
ljmp
push
dec
push
xchg
ljmp
inc
daa
rcrl
mov
xor
loope
lods
dec
lods
xchg
adcl
test
push
loopne
jno
rcrb
andl
sbb
adcl
outsb
icebp
push
inc
test
ror
test
out
arpl
xor
push
push
sbb
test
sbb
popa
aam
fdivl
lds
push
inc
enter
cwtl
jnp
inc
out
push
pop
loope
jae
xor
push
rorl
cmpl
inc
jnp
cltd
in
xchg
cmp
mov
pop
push
cmp
nop
or
out
fidivl
mov
cmp
out
mov
mov
inc
bound
push
or
mov
pop
inc
insl
inc
int
xchg
fisttpl
sbb
clc
test
and
test
mov
lcall
xchg
into
push
lock
push
push
xorb
mov
pop
lcall
rolb
push
inc
out
xlat
adc
repnz
sub
loopne
test
mov
push
dec
dec
shrl
jp
xchg
sbbb
iret
mov
adc
mov
hlt
inc
mov
and
xchg
fwait
mov
adc
scas
mov
pop
pop
cmpsl
cmc
sti
mov
jmp
hlt
xor
mov
mov
sbb
inc
mov
hlt
and
into
push
xor
les
sbb
jno
inc
pushf
popf
addb
out
sbb
andb
mov
mov
scas
and
pop
out
mov
push
xchg
mov
shlb
aas
dec
add
cld
xchg
or
fcmovnbe
mov
rcrl
dec
mov
pop
cld
jo,pt
dec
jle
push
insl
daa
mov
adc
lahf
xchg
push
lea
jbe
jmp
mov
and
movl
call
mov
imul
cmc
xchg
mov
push
shlb
loop
lods
sbb
lahf
mov
sub
push
cmp
adc
inc
ret
loopne
and
orb
clc
push
bound
jg
pop
push
xor
nop
popa
push
cld
pop
shl
imul
movsb
push
xchg
nop
mov
stos
dec
cld
pop
xor
fdivs
fwait
insb
ret
dec
sub
in
xor
xchg
subb
loope
jp
paddsb
ljmp
aad
cld
mov
repnz
pop
or
pop
push
or
rorb
push
into
dec
loope
add
fnsave
orl
ret
out
ja
shrl
add
push
aam
push
divb
sbb
shrb
mov
pop
rcrl
ret
cmpb
rcrl
pop
cmp
es
xchg
rolb
add
cli
jns
imul
cmp
add
adc
pushl
lcall
and
scas
ja
andb
jno
pop
jae
stos
xchg
test
lods
inc
and
fldenv
xchg
or
adc
out
das
cld
shrl
mov
mov
dec
bswap
push
inc
and
fdivl
test
pop
inc
push
inc
fucom
push
xchg
adcl
adc
mov
std
test
mov
mov
or
xor
pushf
mov
push
imul
adc
xchg
xor
sub
jnp
jl
imul
mov
test
mov
or
sti
jecxz
in
dec
dec
ret
adc
and
mov
aad
add
mov
sub
push
ret
stos
sbb
or
scas
mov
cvtps2pd
cmp
dec
xchg
add
jo
push
bound
cld
inc
mov
lock
cltd
int3
mov
jecxz
pusha
and
ret
push
aaa
stos
test
sub
mov
loop
outsl
dec
push
add
dec
xchg
in
pop
dec
hlt
aas
mov
testl
in
adc
cs
or
int3
and
mov
cltd
js
test
lahf
mov
xor
ret
pop
mov
notb
popa
cli
mov
sub
sbb
jb
imul
sbb
or
das
lahf
push
sub
add
lock
push
loop
scas
push
clc
jl
mov
mov
cmp
lahf
call
jb
adc
ljmp
and
mov
fmull
mov
imul
mov
fcomp
out
adcb
adc
adc
or
inc
jecxz
adc
jmp
inc
lods
fnstenv
lods
ret
pop
loop
cmpsl
push
mov
jbe
leave
gs
xchg
loope
jnp
es
cmpsl
les
inc
repz
or
push
lret
cbtw
adc
into
imul
xorl
sarb
jecxz
jns
xor
dec
pop
jo
jae
testb
add
mov
mov
mov
in
cmp
push
mov
test
mov
jb
hlt
dec
inc
loop
negb
mov
sbb
sbb
sub
repnz
pop
jno
scas
and
loop
adc
enter
lcall
xlat
out
repnz
outsb
out
rcll
fwait
inc
jno
jle
push
pushf
sbb
call
mov
outsb
dec
adc
insl
shl
pop
aad
dec
imul
inc
sbb
cs
mov
out
lds
cs
in
mov
inc
push
pop
sbb
mov
bound
jno
pushf
cmpsl
cltd
adc
fistps
jnp
sbb
sahf
sbb
lea
mov
lahf
dec
dec
arpl
xchg
rcrb
mov
push
cmp
mov
jb
flds
dec
mov
sbb
push
cld
add
adc
xor
mov
sbb
test
dec
es
xchg
orb
and
add
inc
cmp
add
setle
dec
fsubs
mov
mov
sub
sahf
xchg
jg
jp
call
sbb
test
cmpsb
push
data16
sbb
or
xor
test
pusha
adc
push
jo
xchg
mov
mov
cmp
aam
mov
loop
loop
scas
mov
adc
cmp
push
mov
nop
xchg
jmp
jnp
stc
adc
stos
scas
jb
cwtl
das
pop
stc
in
xchg
jb
mov
pusha
sbb
stos
sti
xor
lods
mov
cwtl
sub
xchg
loope
and
xor
cwtl
add
js
lods
cli
sbb
cwtl
cmp
loopne
add
dec
pop
xor
movaps
clc
sbb
push
cmp
pop
sub
inc
cmpsl
in
fldl
cmp
lock
cmpsb
inc
push
xchg
mov
lret
add
jle
add
fstpt
lahf
push
hlt
jns
mov
mov
sbb
lock
mov
aas
xor
sub
xchg
push
nop
fwait
sub
js
dec
add
repnz
leave
push
scas
cmc
xlat
ffreep
cltd
pop
addr16
cmp
das
stos
mov
movsb
mov
pop
cltd
in
and
mov
nopl
fucomp
push
or
fsts
or
pop
iret
add
insl
mov
sub
call
xchg
mov
mov
leave
nop
push
inc
popw
daa
fsubs
cmp
daa
or
sbb
and
es
outsb
pusha
xchg
movsb
push
outsl
mov
sub
inc
fwait
add
push
pop
cmpsb
in
sub
mov
sub
mov
xchg
fdivrp
bound
cmp
mov
push
pop
inc
fcomip
jecxz
pop
or
xor
lret
dec
add
push
fidivrs
or
sub
or
jmp
insl
out
cmp
out
enter
fwait
adcl
jno
mov
leave
bnd
call
adc
xchg
sbb
imul
pop
xor
and
pop
and
mov
xchg
inc
iret
lods
push
mov
inc
push
icebp
pextrw
sub
push
lcall
sbb
xchg
inc
pop
dec
jb
and
cmp
inc
mov
movhps
lock
out
jns
aaa
call
lret
mov
fsubl
xchg
addr16
addl
push
inc
inc
mov
mov
mov
shrl
or
fsubrl
push
adc
lods
cs
add
mov
movsl
xchg
sbb
mov
pop
pushf
ss
sub
fcomps
pop
jmp
lods
inc
xchg
push
push
adc
xchg
gs
mov
inc
mov
insb
mov
sbb
mov
sti
and
shll
jmp
xchg
aam
push
add
adcl
aam
cld
rcr
sub
add
xchg
pop
inc
sbb
das
call
pop
mov
lret
movsb
fldt
push
add
scas
daa
xlat
push
sbb
insl
loop
jnp
pop
jle
inc
outsb
imul
inc
xchg
mov
push
ja
dec
jge
fsts
ss
sub
pop
pop
xchg
aad
sub
dec
pop
dec
sbb
push
lret
je
fdivr
loopne
and
mov
cmp
push
pop
pop
cmp
sarl
ret
lcall
and
mov
xchg
sub
dec
push
pop
jne
mov
mov
lds
mov
clc
fstpl
jns
lods
sub
pop
inc
sbb
and
insl
jo
xor
mov
inc
hlt
test
sub
and
sub
adc
mov
or
jecxz
stc
mov
stos
or
inc
sub
mov
lahf
pop
clc
xorb
push
mov
cwtl
lods
lret
in
mov
rorl
mov
cmp
in
lret
adc
or
repnz
popa
add
push
sub
jg
mov
inc
repz
test
movsb
adc
cmp
out
mov
mov
jns
cwtl
rcrl
sub
ret
jbe
sbb
xor
fwait
push
dec
icebp
xor
lcall
ror
es
jno
fadds
jo
aaa
fwait
mov
lret
fstl
lods
xchg
jbe
push
mov
xchg
pusha
and
lret
out
lock
loopne
notb
rorl
xor
mov
flds
inc
add
scas
cmpl
and
mov
push
nop
addr16
int
adcb
mov
sub
pop
fmuls
cli
mov
arpl
push
and
pop
jne
movsl
jb
outsl
add
cmpsb
ret
push
mov
idivl
stos
mov
movsb
sub
adc
mov
ret
rcll
lock
or
repnz
push
loopne
stc
je
mov
stc
fdivp
inc
xchg
push
std
pop
loope
fistpl
adc
insb
dec
mov
call
sbb
add
mov
in
stc
pop
sub
mov
or
dec
push
dec
mov
int3
int
aaa
xchg
mov
adc
shl
or
iret
daa
or
sub
dec
push
jne
dec
mov
sbb
xchg
add
xchg
ret
jo
lcall
jecxz
push
jecxz
rol
out
add
or
push
and
das
or
jge
mov
mov
rcll
push
jl
in
pop
mov
addr16
push
mov
pop
pop
imul
push
call
jne
push
add
jb
lea
mov
cmp
pop
cmp
sbb
mov
gs
xor
loop
pop
sub
or
dec
adc
pshufw
add
cmp
xor
mov
popf
jle
loop
mov
jb
fsubrl
push
xor
jno
pop
jmp
xchg
add
pop
test
and
out
rcrb
int3
dec
ret
enter
mov
jge
ret
iret
stos
test
shrb
roll
or
cmpsb
sbb
stos
fisubs
imul
cmp
sbb
idivl
adc
jns
insl
jp
mov
lods
out
mov
push
mov
dec
je
xchg
mulb
jbe
dec
mov
mov
outsb
cmc
or
scas
sbb
inc
bound
movsl
push
add
fldl
xchg
pop
xchg
inc
xchg
mov
cmp
jg
jl
test
mov
lcall
repz
adc
dec
jg
sub
les
or
xchg
dec
andb
insl
or
mov
cmpsl
je
test
pusha
insb
xchg
lret
sbb
cmp
inc
xchg
jnp
push
jns
push
icebp
std
out
out
nop
inc
inc
sbb
repz
outsl
and
sbb
cmp
push
lds
cmp
sub
aas
cld
mov
push
sub
sub
das
dec
ljmp
imul
lcall
mov
outsb
jno
mov
test
aam
cltd
adc
in
pop
jle
es
aas
into
imul
mov
clc
jne
mov
stc
push
sub
repnz
sti
inc
sahf
cli
xor
push
cmp
adc
lcall
mov
cli
mov
adc
jb
scas
pop
inc
pushf
xor
pop
aas
fcmovnu
mov
jle
stos
sti
mov
test
mov
xchg
mov
xor
cld
dec
popf
ret
jne
gs
shrb
ror
hlt
jle
sub
dec
xor
je
stos
adc
imul
push
sbb
and
fisubs
mov
jl
enter
insl
or
in
sbb
aaa
sbb
or
scas
fdivs
arpl
int
pop
xor
sbb
pop
popf
mov
mov
cli
push
stc
lock
out
mov
arpl
cld
lock
and
mov
aas
xor
das
int
ss
push
push
dec
into
cmp
jnp
enter
inc
mov
cmpsb
movsl
int3
cmp
mov
push
xchg
inc
js
and
pop
imul
mov
jmp
fimuls
les
repz
cld
lds
dec
leave
fsubrl
call
or
sbb
sub
mov
add
jae
js
pop
int
lods
addb
test
fimuls
sbb
cmp
gs
adc
rol
sub
bswap
dec
lahf
movsl
stc
dec
stos
iret
sub
mov
sub
mov
out
fbld
xor
lret
xor
movb
sbb
das
mov
jnp
push
clc
outsb
sbb
sarb
ret
popf
mov
mov
inc
push
rclb
mov
in
ud0
repz
das
test
lods
jne
or
sbb
mov
and
testb
mov
fs
mov
jle
xchg
roll
xchg
cmp
and
mov
jae
out
fxch
mov
ljmp
jnp
lock
or
inc
xor
xorb
rcrl
pop
and
mov
xlat
dec
lret
sbb
jmp
dec
pop
inc
xchg
popa
in
and
sub
jg
jno
mov
mov
out
add
imul
xchg
jns
cwtl
repz
movsb
push
mov
adc
jmp
roll
jo
xor
fwait
mov
xchg
mov
and
test
sbb
cmpb
outsl
fidivrs
shl
xchg
sub
insl
andps
sub
jecxz
mov
xchg
mov
xor
stos
cmp
pop
mov
jbe
popf
les
push
dec
inc
jp
push
ljmp
clc
mov
movsb
jg
test
push
xchg
loope
or
xchg
imul
mov
or
dec
in
outsb
push
mov
mov
lods
cli
dec
mov
int
and
arpl
lods
mov
pop
insl
jnp
into
jmp
sub
push
lahf
adc
bndstx
mov
push
sbb
test
inc
jmp
lods
inc
push
cld
dec
mov
es
insb
sub
sti
xlat
out
insl
jo
pusha
dec
add
jmp
pop
sbb
dec
and
ljmp
mov
xchg
imul
inc
std
xlat
adc
inc
pusha
es
push
xchg
and
leave
xchg
lahf
pushf
mov
hlt
and
int
push
leave
shrb
lock
imul
aad
mov
hlt
data16
sbb
sbb
push
cmpsl
inc
jmp
cwtl
pop
lods
insl
push
pop
testl
jge
push
arpl
sub
pop
insl
sub
xchg
jg
xorl
fiadds
outsb
xor
add
or
adc
out
fildll
cmp
fmull
popa
hlt
xchg
dec
ds
mov
pop
adc
jae
mov
decl
vsqrtss
sub
xchg
cmc
cmc
jno
xor
icebp
and
repnz
or
iret
push
adc
rcrl
jno
divl
push
inc
or
repz
arpl
fsub
mov
es
or
scas
adc
and
mov
jns
in
sbb
imul
jns
and
xchg
movsbl
ds
inc
cmp
jnp
mov
stos
idiv
mov
xchg
sub
sub
call
fistpl
mov
mov
int
in
int
leave
mov
popf
dec
or
fs
mov
push
std
xor
in
mov
arpl
mov
xor
dec
mov
xor
sub
xchg
out
push
icebp
inc
cmp
fidivs
xor
fcomps
add
dec
repnz
int
xchg
pop
lahf
inc
ss
fstl
fidivrs
dec
inc
loope
in
mov
popf
mov
out
leave
in
mov
push
and
nop
in
mov
retw
rol
pop
inc
test
push
popa
imul
ret
fsub
xor
aas
dec
xor
pop
pop
pop
xchg
mov
pop
emms
fadds
rcll
andb
out
arpl
or
cmc
add
and
lods
out
inc
push
mov
test
sbb
cmp
iret
pop
andb
jp
sbb
jp
cwtl
aaa
rcll
loope
fstl
xchg
popa
dec
fisttpll
jp
cmpsb
push
rcll
pop
dec
pop
add
inc
sbb
mov
fiadds
pop
leave
arpl
inc
and
int
fsubrs
lea
int
xchg
decb
insb
daa
and
popf
lock
mov
test
std
std
adc
inc
lds
cmpsl
aaa
enter
jle
scas
notl
push
add
std
or
lock
fldl
lods
pop
rorb
ja
jbe
or
push
pushf
cmpsl
lahf
cmp
add
outsl
dec
push
stc
ret
add
andb
adc
jo
jns
mov
xor
cmp
in
mov
cmc
rcrl
xchg
dec
repz
fsubs
push
mov
stc
mov
stos
mov
loop
call
cld
pop
out
xchg
fsubrl
repz
incb
rorl
cmp
cmp
inc
xchg
cmp
stos
push
aam
cmp
jp
mov
daa
arpl
aam
std
js
add
xor
dec
nop
mov
ret
pop
xor
mov
idiv
push
mov
adc
push
lret
pop
movsb
xchg
aad
test
fildll
sub
and
lcall
xor
jbe
mov
test
mov
ret
icebp
adc
dec
xchg
fmull
ret
in
pop
cwtl
aam
je
mov
outsb
mov
xor
and
aas
jecxz
es
or
sub
fs
lret
int3
mov
mov
or
es
shr
and
out
jle
jb
aaa
std
movsb
fwait
sbb
es
mov
jge
push
inc
xor
orb
add
int3
pushf
push
xor
xchg
push
les
and
mov
push
push
imul
fisttps
jl
mov
pop
lock
test
loop
inc
notl
sub
xchg
fistl
int3
sbb
std
popa
mov
xchg
js
add
out
adcb
jnp
or
fsubrs
sub
shrl
pop
aad
nop
imul
push
mov
dec
mov
mov
push
inc
mov
sub
out
push
adc
or
cmpsl
or
movsb
insb
es
gs
sbb
ror
push
inc
movsl
mov
cmpsl
fwait
arpl
push
cli
int
aad
push
mov
push
les
lds
and
adc
icebp
call
push
rcrl
sub
mov
push
mov
mov
mov
add
mov
cmp
add
fcmovnu
xor
ret
pusha
lods
push
cmp
mov
mov
ffreep
lret
ficoms
in
pushf
lock
xchg
int3
jne
jb
lcall
out
cs
in
xorl
push
pop
sbb
pop
rcl
aam
lods
adc
push
lahf
add
mov
mov
dec
inc
and
gs
jbe
sbb
pop
xor
out
pop
lods
pop
mov
mov
add
lods
push
into
sbb
or
jno
imul
lcall
shll
outsb
mov
sbb
xor
divl
subb
mov
cmp
mov
and
and
addl
leave
jge
xor
push
cwtl
int3
hlt
cmp
pop
lods
fisttpl
add
cmp
add
sbb
and
or
xor
xor
cwtl
bound
out
lahf
inc
xor
jno
add
lret
test
int3
inc
imul
out
lock
dec
in
mov
inc
push
or
or
jp
cwtl
test
in
push
mov
xchg
cli
xor
inc
jmp
adc
jp
push
sub
push
xor
mov
inc
push
xchg
fldl
gs
fisubrl
aad
decb
mov
sub
pop
dec
cmp
mov
test
xchg
cmc
or
add
inc
sub
mov
push
testl
enter
mov
or
shr
jge
aaa
std
dec
arpl
xchg
lds
or
cwtl
fsts
lea
mov
adc
mov
jecxz
scas
sub
jns,pt
xchg
xchg
sbb
lret
insl
jl
and
jecxz
in
cmp
adc
adc
mov
fldcw
ud2
iret
jl
testl
or
fcompl
adc
mulb
shll
mov
cmp
rcl
inc
cmp
fwait
enter
testb
or
rcrb
fwait
pop
sub
jle
scas
test
adc
cmp
repz
dec
dec
dec
ja
in
clc
insl
xlat
nop
cmpsl
shrl
inc
lods
ret
ds
and
fcmovnb
fisttpll
inc
aad
movsb
cld
out
mov
scas
mov
lea
loop
les
outsl
cmc
pop
outsl
dec
xchg
adc
out
xchg
hlt
or
add
pop
or
into
movsb
movsl
data16
movsl
jo
test
cltd
stc
cmpsb
test
daa
xchg
fsubs
mov
lock
mov
popa
push
sub
push
lahf
call
rolb
sahf
xchg
loop
ret
jmp
sub
sbb
ficoms
mov
pop
dec
out
dec
ret
mov
push
and
xchg
xlat
mov
cmpsb
jne
je
push
int3
mov
int3
in
jne
mov
leave
inc
cmp
jne
mov
jns
or
addb
sbb
jmp
jge
push
mov
idiv
std
xor
pop
and
push
loopne
int3
sbb
xor
inc
push
cmp
ret
sub
sbb
sbbl
jno
mov
inc
adc
jnp
or
and
mov
test
jns
xchg
das
aad
cmp
xor
rorl
cmp
aad
fistps
outsb
in
push
add
sub
addr16
or
and
pushf
aam
or
push
repnz
in
insl
cmpsb
sbb
fwait
cmp
in
pop
mov
mov
pop
pop
call
mov
pop
push
mov
int3
mov
ljmp
push
in
add
cmp
insl
vminss
mov
in
in
mov
mov
into
xchg
xor
lds
xchg
ja
int3
roll
jecxz
mov
cmp
xchg
arpl
mov
and
push
pop
mov
cmpsl
lret
push
outsl
cmpsb
or
mov
movsl
cmpsl
ret
fs
loop
pop
or
loope
mov
pop
fs
mov
cmp
pop
or
loopne
inc
sub
xchg
sbb
mov
pop
stc
pop
or
mov
and
sbb
scas
fstl
pop
inc
push
pushf
fwait
mov
nop
push
pushf
cmpsb
fdivs
mov
add
push
add
loope
insl
add
xchg
inc
insb
sbb
stos
daa
shrb
push
cmp
ljmp
dec
mov
push
xor
dec
mov
mov
inc
inc
fldcw
xor
push
and
fcomps
add
push
pop
in
cmp
fs
push
inc
mov
dec
and
movsb
js
push
cmp
inc
mov
fimull
int3
mov
rclb
xor
sub
mov
push
in
push
mov
and
call
xor
jmp
test
sub
mov
popf
mov
mov
lds
pop
and
jmp
ja
jp
jge
jae
mov
repnz
mov
orl
sbb
inc
sub
arpl
fst
inc
fsubs
lret
and
inc
fdivrs
lret
dec
pop
stos
xchg
ljmp
in
dec
addr16
sub
lsl
imul
int
cwtl
out
add
sbb
jae
lds
cwtl
and
or
add
iret
adc
pushf
fiadds
std
arpl
add
lret
pop
push
gs
sahf
ret
jle
in
loope
xchg
pusha
sub
cmp
mov
fnsave
jb
and
test
cmp
loop
shl
adc
push
mov
insl
imul
movsl
subb
xchg
sub
dec
mov
in
mov
arpl
mov
ficoms
add
inc
iret
sti
test
cltd
movsb
test
sbb
aad
popl
daa
mov
inc
jo
cld
add
in
pop
sub
push
arpl
shll
data16
mov
enter
outsl
jmp
push
bnd
mov
add
xor
out
mov
push
repnz
std
cwtl
mov
fsubrl
aas
inc
push
ret
loope
sbb
inc
scas
cwtl
shrb
movsb
sahf
and
add
clc
add
cmp
pop
cltd
xchg
dec
xor
mov
push
push
pushf
mov
repz
mov
int
xchg
and
fs
popf
test
imul
pop
pusha
lock
cld
loop
rolb
call
sub
or
inc
and
or
loopne
push
adc
call
cwtl
inc
xor
sub
xchg
cmp
add
xlat
xchg
out
cmpl
dec
cs
cmp
sti
sbb
mov
das
insb
mov
fisubrl
test
pusha
mov
rcr
add
push
scas
rorl
pop
mov
ret
lret
iret
pop
imul
push
out
lods
mov
pusha
movsb
out
aad
push
ja
sub
test
xchg
dec
pop
dec
cmp
mov
mov
outsl
dec
or
and
xchg
sbb
mov
stos
mov
sti
aad
popf
push
xor
xchg
sbb
stc
pop
jae
in
xchg
sti
or
pop
cwtl
cmp
jl
ja
pop
xchg
mov
xor
mov
adc
jo
lds
push
xchg
adc
cld
stos
cmp
add
hlt
push
mov
add
arpl
mov
das
xchg
cltd
mov
xchg
js
mov
mull
ret
mov
lea
sub
std
testl
fcmovne
repz
sub
pushf
imul
outsl
cmp
xchg
push
fxam
and
ja
mov
sbb
xchg
jp
adcl
cmpsb
int
adc
mov
xchg
or
cld
inc
or
add
mov
imul
fsubl
repz
xlat
divl
jge
mov
repnz
or
ss
xchg
test
jle
pop
int
dec
cmp
inc
and
pop
adc
ja
out
loopne
jmp
push
mov
push
movups
pop
cmp
aas
or
pusha
cltd
test
xchg
xchg
adc
aas
mov
int
lock
jge
fists
inc
shrb
dec
inc
insl
repnz
in
aas
push
dec
lahf
int3
lock
lret
xchg
adc
repnz
punpcklwd
mov
mov
lods
add
add
inc
dec
andl
dec
cltd
mov
repnz
sub
fbld
sbb
jnp
jmp
int3
rcrb
test
js
sbb
adcb
xchg
fisttpll
cmpsb
mov
clc
push
inc
bound
sbb
lds
fstl
xlat
sub
mov
rol
out
cmc
aaa
mov
sub
xchg
sbb
xchg
imul
mov
sbb
xor
outsl
push
stos
jge
mov
xchg
or
pop
mov
and
aam
cmp
test
lcall
rcl
ja
mov
add
fstpt
je
ret
jmp
scas
xor
xchg
out
popa
or
imul
inc
in
push
xchg
sahf
je
scas
sti
sar
jne
cmp
push
loopne
out
call
sbb
lcall
cs
pop
mov
repz
pop
mov
cmp
ret
pop
pop
push
mov
jns
cwtl
loop
push
mov
test
or
xchg
or
sbb
adc
mov
icebp
call
sbb
lcall
jae
xor
movsb
fildl
jecxz
pop
cwtl
in
jle
hlt
addr16
mov
lahf
or
insb
mov
mov
or
pusha
sbb
cld
pop
jno
mov
push
pop
adcb
sahf
jle
das
xchg
test
adc
jbe
clc
xchg
dec
shrb
push
rclw
scas
jl
test
and
sahf
add
dec
fistps
mov
stos
mov
test
icebp
dec
xchg
insb
sub
inc
int
subl
xor
cmovb
push
dec
repz
fidivs
pop
hlt
xchg
or
cld
mov
cmp
addr16
xor
dec
cmp
in
daa
inc
shrl
inc
into
push
push
mov
mov
es
push
or
mov
mov
jmp
nop
insb
cmpl
sbb
flds
stc
pushf
mov
lods
in
call
les
nop
shrl
lret
vshufps
xor
mov
dec
jbe
js
insl
cli
pop
ds
aad
cmc
js
mov
jecxz
lds
cmp
imul
sub
mov
inc
lds
push
test
lahf
mov
ret
and
jne
lods
push
push
mov
das
cli
and
adcb
rcl
test
xchg
add
sbb
jnp
jb
stos
out
xlat
shll
cmp
jb
jmp
repnz
das
mov
or
jg,pn
loopne
add
xlat
popf
js
jle
roll
stc
inc
pop
testb
leave
adc
repz
faddl
movsl
in
adc
inc
push
adc
xor
pushf
cltd
adc
pop
mov
mov
insb
lea
aas
pop
dec
fwait
shlb
shlb
inc
sub
inc
enter
jo
and
popf
mov
subb
and
xor
rorl
xchg
aam
mov
jecxz
lds
imul
or
cltd
jno
sub
bound
cmpsb
pop
into
mov
dec
push
stos
mov
or
jp
mov
jp
xchg
fisttps
cmp
je
leave
sahf
sub
push
jmp
data16
jg
int3
aad
cli
fisubs
mov
mov
pop
cli
xchg
fcmovnbe
into
pop
mov
pop
dec
sti
and
sbb
or
xor
adc
mov
jb
movsb
adc
jl
jae
mov
ror
repnz
mov
in
ret
sbb
xchg
shlb
pop
jecxz
leave
jno
popf
cmp
cmc
fistpll
incb
add
mov
or
add
mov
mov
ret
mov
int
mov
in
sub
pop
negl
and
mov
es
ljmp
in
cmp
pop
hlt
mov
sbb
mov
movsb
dec
mov
fcoms
lds
call
sarl
shrl
xor
dec
loop
or
test
pusha
lods
cld
fildl
cltd
xor
add
ret
jne
mov
pop
xchg
scas
push
test
ret
push
clc
mov
mov
cmpsb
mov
jno
push
faddp
lahf
negl
into
cltd
psllq
loop
mov
in
push
int
movsl
xor
outsb
adc
jnp
xor
das
in
xchg
je
cltd
pop
sbb
xchg
xor
fisubs
jle
call
xor
mov
test
add
adc
ljmp
in
xchg
push
sub
gs
rcrl
mov
sub
fs
shlb
push
les
jmp
outsb
shlb
lods
mov
clc
fistl
cs
or
pushf
and
loop
push
pop
ja
cmp
sbb
or
mov
or
nop
int3
sbbb
mov
or
push
bnd
inc
cs
inc
sbb
pop
jne
or
push
mov
xlat
movsl
sbb
push
imul
mov
std
mov
inc
in
movsb
cmp
fcomi
sti
mov
iret
jge
mov
fnstsw
fwait
pop
andl
movsl
ljmp
push
das
dec
orl
neg
lea
loop
mov
mov
iret
lock
add
js
insb
jg
jp
pushf
in
test
cltd
or
or
test
adc
fs
push
test
scas
mov
hlt
sarl
xchg
daa
insb
push
push
push
mov
xchg
insl
cwtl
sub
dec
stos
ret
aad
jne
scas
mov
js
repz
dec
mov
sbb
fucom
mov
push
iret
add
push
jle
fcoms
in
xchg
sbb
loope
cmc
or
call
sbb
cmp
mov
or
movsb
push
in
mov
and
mov
sub
loope
dec
in
or
xchg
push
xor
cmp
push
aam
sbb
cmp
fnsetpm(287
sahf
stos
addr16
iret
fcmovne
pusha
mov
inc
jp
stos
cmp
dec
test
mov
cmp
jno
je
mov
push
push
or
iret
aas
mov
imul
xlat
dec
dec
cmp
mov
cmpsb
arpl
jo
mov
rcl
add
fld
mov
adc
jno
arpl
mov
sbb
jae
movsl
mov
sub
sub
cmp
cmp
mov
jge
lcall
xchg
js
int3
inc
arpl
cmp
and
test
push
stos
fs
xchg
cltd
in
pop
movsl
movsl
icebp
sbbb
sub
pop
in
adc
xchg
sub
js
cmpsl
adc
stc
mov
add
filds
sub
push
and
add
adc
mov
sub
pusha
int
push
inc
pop
je
mov
jp
pop
out
cmp
test
stos
loop
push
mov
and
jp
xchg
clc
push
push
mov
bt
xchg
push
add
fdivl
fstps
xor
insb
push
imul
mov
test
and
arpl
arpl
jno
pushw
popf
fdivrl
push
xchg
sbb
cmpsb
addr16
imulb
testl
dec
sahf
shr
daa
les
pop
and
xor
rorb
pop
mov
fs
icebp
inc
aaa
out
je
push
jbe
mov
cmp
pop
mov
jmp
push
xchg
rol
leave
or
je
mov
out
dec
push
pushf
aad
insb
or
ds
inc
mov
xchg
repz
rcr
aas
push
push
lahf
aaa
jg
movsl
xchg
in
popa
jae
or
jle
ret
sbb
das
out
fldt
out
dec
and
icebp
fbstp
les
fmuls
mov
loope
lds
andl
dec
dec
fsub
pusha
test
xor
sub
loopne
adc
jle
mov
mov
dec
call
pop
test
mov
or
bts
js
fisttpll
int
movsb
outsb
xchg
outsb
mov
add
jb
cwtl
push
xchg
ja
xchg
aad
clc
js
sti
mov
fisttpl
xlat
imul
jmp
cmp
xchg
mov
sub
sbb
push
sub
rcr
outsb
push
mov
xor
jbe
loop
jns
fs
xchg
mov
cmp
or
inc
jne
inc
and
jg
fisubl
pop
mov
cli
stos
in
jbe
addr16
jb
add
ljmp
lea
and
sbb
mov
or
dec
ds
ss
xor
lea
aam
inc
mov
pop
mov
or
inc
ljmp
sahf
or
cmp
pop
leave
adc
in
xlat
push
jg
dec
mov
movsl
jne
jp
stc
xor
int3
jecxz
jo
sahf
jp
inc
js
cmp
push
pop
and
imul
aad
scas
lahf
out
xor
shr
jo
popa
cmp
mov
mov
das
js
nop
stos
inc
pop
xor
xchg
fwait
jnp
lahf
add
in
repnz
in
mov
pop
aad
add
loop
xchg
icebp
push
push
jnp
sbb
or
loopne
sub
sbb
jae
cmpsb
sub
mov
xor
cltd
fcompl
movsb
cmp
inc
cs
lcall
hlt
mov
jp
addb
or
or
cmpsl
add
jbe
adc
pushf
test
cmc
popa
inc
sub
add
push
mov
inc
pop
xor
ja
dec
jl
hlt
mov
cli
or
stos
or
sub
add
sub
dec
sarl
xorl
out
sbb
aas
mov
cmp
test
inc
pop
jge
mov
sbb
rcrl
in
jmp
xor
mov
les
leave
inc
dec
sahf
cli
stc
clc
sbb
sbb
loop
jp
and
jg
push
adc
cwtl
mov
adc
into
jne
xchg
xlat
outsl
inc
ficomps
in
das
negl
mov
xchg
ficoms
js
ss
inc
push
lret
stos
mov
xchg
mov
inc
pop
push
add
mov
daa
pop
ret
mov
das
pop
xor
int
hlt
pop
fldpi
pop
adc
cltd
inc
push
cli
xchg
adc
ja
sub
and
outsb
es
xor
mov
cli
push
or
stos
sbb
nop
shl
aas
lea
inc
out
sub
mov
pop
mov
xlat
sub
lea
cmp
std
mov
push
cmp
pop
out
mov
hlt
imul
inc
sub
mov
sbb
xor
shll
xchg
jmp
add
sbb
mov
in
sub
mov
lds
loope
xor
into
pop
adc
mov
lods
in
enter
xchg
aam
lock
je
in
jecxz
push
mov
scas
push
pusha
or
xor
lret
mov
dec
mov
cltd
lds
js
mov
sbb
mov
aad
xchg
mov
aam
push
loopne
mov
add
mov
cmp
inc
mov
mov
stc
adc
fmul
gs
mov
popf
fistpll
jb
jnp
pop
push
dec
pop
mov
jg
add
nop
outsl
dec
jo
adc
idiv
mov
fcomi
jp
cmp
pop
incl
loop
repz
jo
call
aas
adc
add
mov
fcmovu
testl
mov
xor
jp
outsb
in
lock
in
sub
mov
test
ficomps
es
int
les
lods
aas
rorl
xchg
sub
mov
aaa
mov
xor
loope
aam
out
and
fldl
push
out
xchg
mov
inc
lret
arpl
sub
dec
xor
dec
push
loopne
inc
shll
fsts
imul
stos
cltd
das
pop
es
enter
sbb
jp
mov
jge
fucom
fnstcw
mov
sbb
test
sarl
add
mov
int
mov
push
cli
jo
jbe
cmp
fnstsw
sub
jae
ret
mov
inc
stc
adc
cmp
pop
lahf
popf
addr16
and
loop
and
mov
xchg
or
inc
add
mov
leave
sub
cmp
das
cltd
and
sbb
aas
mov
hlt
mov
cli
xor
scas
mov
cmp
dec
pusha
pop
icebp
rcrl
aas
daa
aas
mov
hlt
idivb
xor
lods
lcall
scas
push
repz
push
ret
mov
xorl
jbe
or
aad
sbb
stc
add
jge
sbb
xor
add
cmpsl
out
sub
in
pop
push
sti
or
pop
or
xchg
add
lds
ja
lds
test
jp
adc
call
or
notl
icebp
xor
dec
ljmp
push
xchg
sub
adcb
in
or
mov
and
mov
dec
sahf
int
das
lea
imul
mov
push
hlt
mov
xor
mov
nop
jnp
out
cmpsl
scas
stos
cmp
and
and
push
dec
add
cld
aam
xchg
fmull
aam
lock
mov
dec
xlat
fnsave
test
pusha
into
lods
movsl
push
mov
stos
inc
test
ss
push
mov
imul
test
scas
pop
pusha
outsb
movsl
nop
jecxz
ljmp
jns
out
cmp
add
ret
rorl
mov
stc
jecxz
sbb
cmc
mov
or
mov
push
or
cmp
loop
push
sub
fs
lods
outsl
pop
gs
out
cmpsb
xor
pop
xchg
or
clc
lahf
cmp
jle
pop
xchg
xor
and
int3
mov
sbb
test
xor
ljmp
sbbb
and
or
call
lret
mov
stos
lret
repnz
sbb
pop
adc
cltd
loop
cli
test
arpl
mov
mov
push
xor
mov
inc
decl
lret
mov
lahf
loopne
test
movb
push
and
ror
insb
jge
push
test
test
shl
mov
and
pop
cmp
xlat
in
xor
cmp
inc
ret
sahf
push
fcompl
and
hlt
push
lcall
push
aas
in
and
cmpsb
loope
cwtl
outsb
push
xchg
pushf
mov
sahf
out
call
add
outsb
iret
jl
xchg
std
mov
sbb
jae
mov
jmp
shr
in
mov
scas
aam
insb
xchg
or
stos
movsb
in
sbb
xchg
adc
rcr
dec
lahf
jp
imul
inc
fwait
dec
cmp
cltd
test
sbb
cmp
mov
scas
cmpl
jg
xchg
inc
xor
xchg
mov
adc
xor
mov
sub
and
test
mov
jmp
aad
fs
sbb
mov
mov
fistpll
sub
mov
or
repnz
leave
aad
push
enter
ret
ds
mov
sbb
sbb
adc
outsb
push
xchg
jb
mov
test
inc
xchg
lods
inc
push
icebp
andb
cmpl
jmp
iret
jle
test
xchg
pop
ret
push
cmp
mov
add
xchg
mov
mov
or
fsubrl
xor
adc
les
mov
pusha
shlb
lahf
out
sub
out
mov
fadds
cwtl
cmp
dec
xor
lret
sub
and
xchg
div
repnz
xlat
insl
and
xor
mov
adc
test
or
fdivs
sahf
mov
mov
add
mov
xchg
inc
inc
lret
sub
jp
jae
arpl
xor
mov
sahf
xor
mov
sub
add
aam
inc
add
pushl
hlt
int3
or
cmpsl
js
jo
lock
insl
dec
fdivl
adc
inc
aam
push
int
cmp
mov
cmp
sarb
jo
cmpsl
mov
aad
lahf
test
cmp
jo
sbbl
xor
cwtl
and
fnstsw
leave
pop
xchg
push
movsl
xchg
cs
pop
xchg
push
jmp
in
mov
push
inc
maskmovq
divl
in
faddl
stos
xchg
call
stos
cwtl
out
imul
jb
out
addr16
add
dec
mov
mov
jl
or
stc
or
xchg
ja
xchg
cmpsl
or
pop
adc
loop
lret
jecxz
dec
xor
pop
bound
mov
jne
and
fdivl
cmp
lea
xor
lods
jb
aad
lret
hlt
lret
rolb
cmp
mov
or
sbb
fcoms
sub
dec
out
sbb
fstpl
mov
adc
push
lahf
add
movsl
cmp
adc
in
fcomps
insl
mov
fwait
dec
repz
add
add
stc
loopne
in
adc
movsb
inc
loop
mov
stos
xchg
xchg
insb
enter
nop
cmp
repz
pop
les
and
ss
jmp
in
and
ja
inc
push
dec
movsbl
ret
and
jno
imulb
push
dec
stos
ljmp
sub
ret
mov
rcll
fidivl
pop
pushl
popf
push
jbe
sbb
les
or
and
push
lret
ret
pushf
fdivr
je
es
pop
fs
jmp
in
push
gs
popf
out
setl
sbb
jo
dec
mov
pop
cmp
imul
jb
jo
sbb
mov
std
test
addr16
jne
push
out
movsl
xorl
jle
xchg
subl
dec
add
pop
push
cld
inc
dec
vmwrite
repnz
add
inc
shr
fistpll
mov
repnz
aas
xchg
mov
pop
int
jp
std
pop
and
mov
sbb
adc
ret
mov
cmp
fdivp
stos
aas
push
into
pushf
nop
repz
sub
aad
sub
loop
jecxz
xchg
les
sbb
lock
lea
inc
xor
and
pushf
mov
ja
pop
in
out
xchg
cmpsb
imul
fnstcw
and
push
xlat
pop
xchg
mov
test
ss
shrb
enter
sahf
scas
or
inc
repnz
ds
outsl
les
out
rcll
cmp
lock
inc
call
xlat
mov
int
pop
sbb
js
xchg
cmp
in
dec
jo
pushf
cs
pusha
inc
cmp
mov
call
push
dec
es
ja
mov
ljmp
ja
inc
outsl
imul
cld
les
test
fdiv
xor
sub
jnp
jecxz
lds
jmp
lcall
pushf
adc
push
fs
cmpsl
js
lea
insb
pop
shlb
test
adc
call
add
bound
lret
mov
pop
imull
test
jp
adc
add
adc
adc
pop
iret
jle
inc
fsubs
sbbb
cmp
ret
sbb
je
or
mov
xor
and
out
inc
adc
sti
out
ret
pop
lret
out
pop
mov
adcb
lea
jl
pop
bound
bound
cmpsl
sahf
and
pop
lret
adc
stc
bound
repnz
sub
out
mov
dec
inc
xorl
loopne
and
cld
popa
movsb
xchg
pop
xor
jp
fsubrp
shr
pop
fwait
push
xor
lds
add
iret
aaa
jbe
inc
data16
adc
push
jb
aaa
mov
addl
xor
lods
xchg
shll
popa
outsl
fstps
mov
lret
mov
inc
cwtl
das
and
pushf
loope
aam
cld
cmp
sub
xchg
xchg
shll
pop
mov
gs
insb
test
add
adc
lods
out
dec
jbe
xor
sarb
fnsave
cs
pushf
and
iret
xlat
ficoml
pop
jecxz
dec
push
push
iret
adc
mov
js
lea
stos
or
insb
lret
into
and
xor
xor
push
loopne
adc
mov
rolb
lods
ret
xor
in
push
mov
stos
test
mov
adc
pop
mov
xchg
jno
repnz
in
into
iret
mov
pop
fmulp
jecxz
insl
or
inc
iret
mov
sbb
lods
daa
aam
add
bound
movsb
cmpl
pusha
adc
stos
sti
sub
jge
cmp
iret
or
enter
pusha
jno
movsb
xor
pop
mov
push
sub
gs
addl
in
rcrb
sub
jmp
or
cmpsb
jae
jne
xor
adc
mov
lcall
jns
cmpsl
lods
mov
roll
push
jge
movsb
cmp
stc
push
arpl
into
inc
repz
push
sbb
ret
fmull
adc
pushf
jp
lcall
dec
aas
popa
in
jg
addr16
adc
mov
mov
into
dec
jmp
orl
inc
add
push
xchg
add
in
cmpsl
inc
les
icebp
adc
push
in
push
popf
out
shl
inc
inc
push
dec
outsb
rclb
imul
pop
inc
inc
dec
out
ljmp
imul
repz
mov
cmp
lret
test
push
das
repz
movd
into
xor
adc
out
dec
push
imul
pusha
jp
stos
jl
int3
test
ja
cmp
sub
subb
dec
outsl
and
jge,pt
push
ret
xor
push
jno
dec
cmc
or
jecxz
mov
pop
push
push
dec
add
xor
dec
dec
or
push
inc
mov
nop
jae
sub
add
shl
pushl
faddl
ficoml
out
in
lret
js
pop
mov
inc
push
cmpsb
test
test
cmc
ja
jnp
fucomi
cs
sbb
add
mov
adc
test
ja
popa
out
cwtl
push
jmp
push
xor
mov
sbb
or
sahf
jns
jp
movsb
and
add
or
adc
out
scas
cmp
and
or
ret
mov
lahf
loopne
imul
icebp
loope
push
dec
icebp
xor
jmp
shrb
and
into
arpl
push
mov
pop
shrl
mov
adc
sbb
dec
repz
dec
mov
jno
adc
rorl
or
nop
push
lahf
shl
roll
pop
add
repz
add
test
stos
test
cmpsb
lret
push
cmc
xor
inc
jb
push
lahf
repnz
roll
pop
outsb
jno
push
fdivrp
mull
mov
test
outsl
xchg
jecxz
adc
fs
inc
int
mov
leave
sub
adc
or
push
jns
mov
enter
mov
rcrl
cmp
mov
dec
xor
cmp
inc
xorb
ret
or
das
sbb
decl
std
testl
icebp
jo
pop
movsl
outsl
fldt
xorl
sub
pop
loop
inc
int
mov
clc
xchg
dec
dec
dec
or
or
imul
movsb
ss
push
xor
inc
fs
and
adc
pop
jg
call
push
xchg
pop
sti
adc
add
out
pop
fcmovnb
out
sub
cmp
nop
lds
ja
dec
and
pop
add
imul
loop
add
xlat
pop
lahf
push
in
sub
xor
adc
repnz
rorb
shrb
mov
sub
pop
jle
leave
movsl
sti
pop
dec
test
sbb
lcall
mov
hlt
mov
mov
push
inc
jp
std
mov
mov
sahf
lcall
stos
fidivrl
xor
mov
iret
sub
shr
in
pop
jae
movsb
imul
adc
faddl
iret
out
mov
pop
test
pop
mov
cmp
addr16
inc
aam
jns
jl
xchg
xchg
scas
cmp
std
dec
rolb
xor
xor
pop
inc
icebp
movsl
andl
roll
pushf
stos
sub
inc
pop
mov
adc
sub
jbe
mov
adc
fimuls
jge
addr16
dec
add
dec
std
stos
outsl
out
cmp
cmp
xor
addl
and
ret
das
test
xchg
jmp
fdivrl
shl
addb
insl
inc
xchg
gs
aas
jmp
inc
or
mov
pop
dec
das
pusha
in
lods
hlt
jb
test
test
jp
orb
repnz
mov
lahf
lret
push
loope
xor
imul
pusha
aad
add
or
mov
inc
aas
or
adc
test
bound
jmp
add
data16
pop
enter
cwtl
push
cmp
inc
in
push
adc
fisubl
jmp
loopne
mov
push
lret
cmp
std
pop
int3
push
cltd
addr16
inc
mov
jge
and
jno
lahf
imul
mov
mov
mov
outsl
cmp
cmp
dec
push
add
cmpsl
stos
loopne
jns
jp
test
cli
push
mov
push
stc
movsb
xchg
fmulp
sbbb
repz
loope
pop
cs
sahf
clc
push
nop
ljmp
lahf
and
shll
cmpsb
cwtl
sub
shl
lock
fmulp
xchg
aam
cli
inc
xchg
insb
xor
mov
mov
leave
ss
sub
stos
aaa
shrl
daa
inc
pextrw
mov
mov
mov
mov
popa
outsb
sbb
add
and
pop
sbb
outsl
mov
lret
movsb
mov
cmpsl
mov
xchg
mov
or
pop
bound
sub
rol
fistps
arpl
sarl
cmpsl
pop
imul
add
xchg
addb
or
mov
or
push
mov
add
inc
mov
je
movsb
push
ljmp
pop
arpl
xor
frstor
jae
hlt
iret
fsubs
cmp
outsl
mov
ss
mov
enter
test
dec
xor
push
sub
sbb
outsb
xchg
jg
mov
addl
popa
pop
jnp
filds
cmp
imulb
cmp
pop
icebp
add
xor
jecxz
sub
imul
sub
aam
lahf
sub
addl
adc
call
std
inc
mov
and
fs
out
inc
jp
jnp
ss
and
lret
xchg
push
xchg
jmp
int
sarb
cmp
fldt
ss
jmp
cmp
inc
pop
or
shll
push
mov
insb
inc
arpl
add
repz
mov
and
jge
add
insl
dec
lret
dec
jp
std
jnp
push
pop
rol
mov
dec
pop
or
xchg
aad
es
or
fstps
pop
rclb
adc
mov
ret
pop
mov
adc
pop
mov
fisubrl
xlat
loop
adc
repnz
out
pop
and
mov
lea
sub
sub
pushf
es
pop
push
add
cmp
leave
push
add
js
and
mov
dec
pop
shlb
popa
sbb
stos
xor
cmp
xlat
jl
or
sub
scas
adc
mov
add
pop
dec
push
xchg
mov
ret
cmpsb
fwait
ret
push
jb
sub
and
stc
out
ss
adc
pop
das
ret
fimull
mov
inc
or
test
sarb
add
pop
hlt
subl
je
mov
inc
inc
xor
lods
dec
push
pop
pop
stos
dec
push
pop
outsb
push
ret
mov
leave
inc
fcoms
sbb
jnp
sbb
arpl
ds
imul
mov
inc
stos
pop
cmp
mov
loope
cmpsl
imulb
pop
jbe
lea
pcmpgtb
cmpsb
addr16
iret
push
dec
sbb
push
sahf
pop
jae
stos
and
mov
mov
lock
inc
sbb
lcall
notl
mov
inc
xor
fnstcw
orl
mov
hlt
add
inc
add
cmp
push
push
in
stos
or
pop
cmpsl
outsl
mov
filds
loopne
in
shrb
push
rcrl
mov
sub
in
int
pop
das
xor
xchg
pop
adc
mov
pop
mov
or
fsts
push
add
sbb
pop
cmp
ret
push
cmpsl
mov
adc
jae
mov
add
mov
or
dec
or
push
push
fistpl
xor
fsubr
in
out
push
xchg
inc
sbbb
shrl
nop
inc
cli
sbb
stos
ljmp
sbb
popa
sahf
mov
push
xchg
sbb
push
movsl
roll
ret
mull
xchg
enter
sub
or
add
dec
dec
testb
push
pop
icebp
or
cmpl
hlt
dec
add
adc
call
lea
sbb
pop
add
stc
repz
sbb
dec
pop
loope
das
cmpsl
sbb
or
jmp
data16
mov
addb
jno
and
das
mov
sub
fwait
inc
lods
aad
add
mov
aas
adc
and
xchg
imul
stc
out
ljmp
mov
add
push
cli
arpl
ficoml
test
sbb
fstpt
cmp
push
movsl
inc
sbb
cmp
test
fistpll
push
or
add
push
cli
and
pusha
cmp
daa
mov
inc
fs
inc
xor
mov
and
ud0
push
mov
lea
xor
loope
cmpsl
and
pop
scas
xchg
adc
cmp
gs
sub
mov
popa
cld
dec
popa
pop
and
aad
mov
mov
push
cld
dec
iret
movsb
push
leave
push
pop
mov
jl
push
icebp
fcomps
mov
bound
neg
repz
sbb
cmp
mov
lcall
pop
jle
dec
sbb
subl
cmp
fldcw
call
in
lcall
lods
pop
adc
test
mov
push
jb
cmc
shll
pop
inc
mov
push
mov
mov
adc
jp
cwtl
scas
dec
sbb
xchg
adc
jle
cmp
aam
mov
or
lea
cmp
adc
lea
dec
push
xchg
mov
rcll
xlat
fidivrs
or
lods
cli
imul
jno
push
xchg
jnp
mov
adc
dec
cmpsb
fiaddl
push
cmpsb
and
mov
adc
jmp
sub
and
xchg
loope
push
sub
or
into
idiv
dec
scas
iret
jb
add
and
jns
shr
int3
loopne
and
mov
inc
sub
or
das
pop
gs
das
or
push
pop
adc
int3
xchg
dec
aaa
push
ret
mov
scas
outsl
xchg
jne
lods
int3
push
adc
test
les
fsubr
xchg
pop
in
inc
and
fsubrs
cwtl
push
cli
xchg
out
mov
popf
fwait
adc
lods
cmc
inc
pop
mov
add
xchg
daa
jno
call
ret
push
and
cwtl
cmpsl
clc
inc
push
sub
ds
dec
push
clc
mov
mov
xor
pop
sbb
aad
daa
mov
jmp
out
mov
std
pop
in
hlt
add
movsl
clc
jne
mov
mov
call
dec
push
inc
cmp
cld
rcl
cmp
and
in
mov
jns
mov
aad
inc
fstpl
repnz
pop
cli
insb
dec
aam
fcoml
mov
pop
aaa
adc
lcall
jno
pop
xchg
stc
cmp
pop
dec
inc
fistl
dec
pop
pop
jl
shrb
and
mov
fs
pop
lret
dec
rcrl
repz
or
mov
pop
sbb
xchg
fstps
out
gs
sti
or
mov
mov
ss
mull
push
sbb
out
shlb
incl
dec
fwait
stc
test
popf
ja
xchg
ja
pop
ret
loope
and
mov
or
xor
xor
arpl
mov
lret
scas
iret
adc
rep
push
repz
mov
dec
add
mov
dec
jb
push
cmc
xorl
outsb
xchg
loopne
pop
sar
sahf
gs
push
jg
inc
xor
fst
xor
stos
test
loop
lret
je
nop
cld
test
xchg
out
mov
aaa
fcompl
sbb
out
in
jb
push
outsl
xor
and
xor
push
imul
pop
sbb
push
mov
jb
test
and
test
adc
cmp
inc
jne
jge
out
std
jbe
mov
cmovs
lahf
push
cli
repnz
ds
mov
sub
cmp
push
subb
sub
test
cltd
pop
loop
das
xlat
mov
outsb
cmpsl
cs
mov
and
pushf
ret
int3
mov
movsl
pop
int3
inc
stc
mov
outsb
mov
jns
push
movsl
inc
xchg
sbb
sbb
push
movntq
popa
push
pop
insl
out
or
add
call
imul
repz
inc
repnz
adc
cmpsb
jl
lret
sub
mov
out
push
xchg
hlt
mov
movsl
cmp
cmp
cld
in
sbb
movsb
in
shrb
fldenv
dec
icebp
enter
push
mov
nop
movsl
xor
fidivl
popl
je
stos
les
shrb
sti
cmp
cmp
aam
jge
outsl
inc
pop
into
adc
mov
jp
fstpl
push
push
adc
test
and
pop
pop
mov
jl
jecxz
cltd
imul
sahf
mov
cld
out
xchg
cs
mov
fistl
int3
leave
out
test
inc
mov
lret
mov
in
out
cmp
xchg
dec
test
add
pop
mov
aad
jno
cld
pusha
sarw
insl
add
jne
xlat
jbe
fistpl
stos
cmpsl
lods
div
dec
cmp
hlt
outsb
movsl
pusha
in
cmp
addr16
pop
addl
mov
fidivs
shll
push
xor
daa
sub
jo
js
pop
fcomp
and
cld
dec
or
fsts
mov
add
movsl
lds
mov
rcrb
test
jp
or
and
mov
xor
jl
pop
jmp
xlat
sub
xor
loop
mov
mov
xchg
lea
xchg
xor
jp
sti
and
mov
xchg
ljmp
and
stos
rorl
mov
test
cmpl
fsubr
cpuid
jle
jle
mov
cmp
inc
movsl
in
shr
adc
mov
dec
pop
push
lahf
mov
jae
ret
push
mov
cmp
popl
mov
lret
movsl
jne
cmp
xor
movsb
sub
les
add
std
xorb
lods
xchg
stos
into
jmp
add
jb,pn
dec
or
dec
cmpsb
into
nop
movsl
stc
pop
dec
xchg
sbb
into
in
lret
in
imul
lds
ljmp
out
in
xlat
nop
lahf
test
test
adc
xchg
cli
and
dec
push
push
inc
and
iret
mov
loop
and
callw
mov
jo
pop
mov
loopne
xchg
jbe
dec
stc
popf
lcall
pop
pop
mov
push
pop
xchg
lds
mov
adc
pop
das
ret
mov
pop
pop
imul
fmul
mov
jg
loopne
xchg
scas
or
xor
movsl
out
sti
loopne
mov
ds
es
push
inc
loop
jle
fbld
das
mov
mov
add
sti
int
push
pop
mov
push
cld
mov
lea
ljmp
mov
sub
sub
pop
adc
mov
or
or
mov
add
daa
rorb
xchg
push
pushf
dec
bnd
or
mov
push
fists
imul
push
mov
out
movsb
xchg
icebp
or
sub
dec
adcb
lret
out
sar
lods
jmp
popa
rcll
mov
dec
imull
inc
fisttps
mov
arpl
sbb
outsb
xchg
int
sti
mov
inc
roll
inc
outsl
dec
decb
das
adc
xchg
jnp
mov
mov
jmp
pop
fprem1
movsb
loopne
xchg
push
test
roll
decb
fcomi
in
pop
sub
insl
mulb
push
xchg
sti
mov
inc
xchg
sahf
jnp
movsl
dec
out
int3
add
inc
dec
mov
add
or
loop
negb
in
leave
lods
mov
sbb
out
pop
repnz
pop
mov
mov
enter
add
lea
cld
imul
sbb
add
fwait
imul
mull
insl
fs
shlb
rclb
adc
es
cmpsb
jo
xor
dec
pop
add
cld
mov
jae
inc
xor
mov
inc
inc
or
test
daa
popf
mov
int3
iret
pop
cmpb
test
call
addr16
outsb
in
inc
inc
push
fsubr
sbb
test
and
xchg
rcll
roll
aas
out
bound
scas
iret
fbstp
dec
cmp
mov
lahf
inc
test
enter
aad
or
fidivrs
mov
xchg
sub
into
or
mov
jl
adc
cmp
and
push
nop
push
inc
es
or
enter
nop
in
leave
xchg
cwtl
mov
and
gs
xor
inc
incl
nop
std
dec
xor
fidivl
jmp
push
imul
cmp
lods
cltd
xor
outsb
adc
xchg
clc
sti
mov
mov
in
jo
and
enter
push
sti
xor
cmpsl
clc
mov
cmp
pushf
hlt
sti
mov
addr16
loopne
xor
mov
mov
mov
movsb
mov
mov
andl
inc
xor
push
and
and
aaa
enter
pop
fwait
xor
aaa
aad
sbb
insb
pop
lods
mov
mov
aad
bound
sahf
jno
nop
jg
mov
push
ret
js
pop
lret
clc
add
push
cmp
lcall
xchg
pop
adc
fwait
add
adc
sub
shlb
pushf
inc
add
enter
loopne
and
add
pop
je
test
pop
mov
aad
jp
fldcw
push
jns
jnp
jo
aad
vandps
mov
ret
mov
nop
cmp
lret
mov
into
inc
hlt
dec
nop
xchg
and
sbb
or
scas
dec
dec
adc
fucomp
inc
frstor
fdivrs
fld1
jecxz
fisubs
pusha
push
outsb
adc
fldcw
mov
leave
mov
mov
ss
mov
jne
dec
xchg
xor
adc
dec
mov
les
xchg
pop
mov
mov
cmpsl
xchg
out
cmp
add
cli
mov
push
pushf
mov
movsl
scas
mov
test
add
fbld
inc
cmp
push
xor
mov
adc
sub
sub
mov
mov
mov
stc
outsl
aas
addr16
dec
xor
cli
cmp
cld
push
outsb
xor
mov
jl
ss
into
add
add
insb
mov
test
dec
js
movsb
dec
mov
xchg
fidivrs
push
dec
push
jp
in
and
imul
scas
jns
sbb
scas
inc
imul
ret
movb
add
test
sbb
xor
sbbl
outsb
pop
push
push
fs
xchg
imul
loop
adc
das
push
xor
stos
and
pop
hlt
rol
add
add
mov
cmp
dec
incl
ss
inc
sub
clc
in
aad
rcll
fs
push
lahf
movsb
push
mov
ds
or
adc
rcrb
jb
arpl
imul
dec
push
ss
lcall
xor
adc
dec
jns
inc
rcl
inc
mov
or
cmpl
push
mov
or
push
sbb
clc
pusha
popa
cmp
and
lret
or
add
adc
fsubrs
adc
rcrb
inc
aaa
out
pushf
pop
cmp
mov
cmp
repz
ret
sub
stc
dec
nop
mov
out
test
mov
sbb
dec
in
inc
sub
push
mov
and
lods
sbb
push
ljmp
shlb
inc
xchg
add
outsl
insb
dec
scas
icebp
leave
insb
adc
cltd
pop
mulb
cld
repz
ss
jp
dec
scas
sub
jle
scas
mov
lea
pop
int3
lock
push
addl
dec
jnp
inc
movsl
hlt
int3
xchg
into
pushf
cmp
inc
lods
jle
xchg
jl
fnstcw
inc
shl
mov
jnp
inc
jns
xchg
adc
fldt
outsb
outsb
sarb
test
mulb
inc
in
movsl
icebp
xlat
mov
inc
ret
repz
sbb
jg
xor
loope
popa
in
data16
xor
lock
and
cld
xor
sub
imul
jecxz
dec
sub
dec
pushf
inc
das
icebp
xor
rol
xchg
aas
je
mov
dec
jg
push
sub
add
cmp
aam
xor
push
aad
jp
inc
sub
jne
imul
faddl
mov
sbb
repnz
cmp
es
jae
jecxz
mov
mov
push
push
and
sbb
jb
lret
xor
aad
filds
jno
sub
push
ss
pop
dec
push
mov
cmp
xor
jno
lods
push
and
sub
icebp
out
adc
jo
imul
out
imul
or
loop
fists
xor
jle
push
mov
sub
out
or
roll
add
sti
jmp
scas
insb
sbb
pop
xor
cltd
pop
imull
mov
call
gs
xchg
mov
mov
dec
jle
inc
mov
xchg
iret
and
ret
sub
sbb
and
push
pop
jo
inc
decl
sub
fnstenv
dec
mov
leave
mov
jae
ret
shll
pop
push
test
incl
bound
adc
repz
std
repz
sub
cltd
dec
and
stos
pop
adc
mov
notl
decb
xchg
sub
pop
pop
sbbb
or
mov
add
mov
mov
jno
pop
fcompl
sbb
f2xm1
fdivr
or
sahf
repz
push
shrb
adc
lahf
int3
into
repz
inc
sbb
sub
mov
inc
lea
lods
push
into
cld
pushf
jae
jne
push
cmp
test
pop
push
jecxz
push
std
xor
or
shrl
ficoml
mov
shll
mov
js
test
sub
cmp
mov
adc
jl
insb
jns
mov
adc
jg
loop
clc
adc
and
stc
jl
adc
pop
or
ja
dec
jae
dec
adc
iret
data16
add
lcall
lds
pop
fwait
xbegin
int3
cmp
dec
shl
fsubrl
adc
mov
outsb
shlb
dec
dec
mov
stos
pop
or
push
xor
jbe
mov
mov
repz
cs
testl
push
rorl
cmpsl
and
push
in
lcall
loopne
stos
pcmpgtd
push
faddl
mov
stc
test
dec
pop
push
ds
or
in
pushf
insb
test
dec
mov
notb
mov
xchg
in
mov
ljmp
xor
pop
xchg
push
push
sbb
pop
sar
and
dec
mov
push
pop
leave
adc
mov
aam
pushf
cltd
jecxz
scas
xchg
push
dec
sbb
xchg
aaa
sub
sarb
dec
mov
call
neg
je
xor
dec
pop
fwait
dec
push
bound
cltd
jae
push
xchg
inc
sbb
mov
push
add
outsl
pop
lods
push
imul
sbb
pop
adc
fsubs
pop
inc
pop
sar
xchg
xchg
dec
sub
cmp
mov
outsb
xorl
gs
stos
mov
sti
mov
subl
int3
loop
rclb
push
aad
cmpsl
into
fs
cmp
mov
cmp
xchg
push
mov
stos
xchg
fadds
inc
arpl
pop
jno
pop
sbb
aam
sahf
mov
ret
cmp
adc
insl
mov
mov
pusha
or
test
add
sahf
nop
pop
jl
stc
adc
inc
leave
fnstsw
lcall
notb
or
sbb
mov
sbb
rcl
jle
sbb
lahf
fistpll
mov
dec
repz
test
enter
mov
and
lods
popa
std
sbb
mov
mov
mov
jl
pop
pop
mov
or
dec
adc
leave
or
add
inc
xchg
or
int3
mov
psrld
addr16
out
clc
or
mov
loop
xchg
movsb
xor
or
mov
ficompl
sbb
mov
js
sbb
iret
add
scas
cmp
jo
fsubs
pop
cltd
in
mov
mov
sbb
ja
mov
fbstp
push
sub
mov
aaa
insb
cmp
mov
stos
ds
push
xor
or
rolb
icebp
repnz
mov
nop
vcvtsi2ss
pop
mov
mov
or
mov
adc
fisubrl
pop
bound
lock
jb
lods
pop
xchg
inc
movsb
pop
rorb
push
mov
leave
jae
sbb
cld
sub
sub
sahf
dec
jb
rcrl
clc
out
push
cmpsb
addr16
popa
xor
icebp
add
mov
mov
jle
pusha
test
bound
std
and
in
in
inc
mov
push
loopne
aad
call
sub
pop
jae
xchg
sub
rcrb
movsl
sahf
fwait
aam
jo
ljmp
jne
fwait
sbb
ds
dec
xchg
shrb
cld
aaa
xchg
inc
jno
sub
inc
jne
lock
push
ret
cld
cli
movsb
xor
jno
or
sti
cmpsb
mov
pop
pop
dec
push
mov
hlt
scas
mov
dec
mov
out
or
xchg
sahf
jge
lahf
loopne
shll
outsl
leave
mov
hlt
mulb
mov
adc
xchg
mov
icebp
add
test
test
add
jle
mov
xor
adc
sbb
cmc
pop
test
push
pop
repnz
mov
pxor
dec
dec
insl
push
inc
psubusw
lcall
lods
sbb
int3
jne
mov
inc
xor
xor
mov
mov
pop
out
push
jb
std
or
idivb
add
mov
sbb
lahf
pop
cmp
xor
sbb
in
in
aad
mov
fadd
or
and
loope
pop
push
adc
dec
in
and
in
iret
hlt
faddl
pop
ljmp
ljmp
xchg
lods
pop
js
adc
test
adc
mov
xchg
xor
dec
lods
negl
jno
cmp
lock
dec
ret
pop
outsl
xlat
rcr
hlt
fldt
cli
jb
sahf
repnz
test
lret
push
cs
cs
addr16
mov
fcomps
movb
mov
test
push
add
sbb
ja
jno
fldt
or
pop
adc
outsb
sbb
inc
add
adc
outsl
out
xchg
adc
gs
mov
subb
sbb
push
test
push
or
cmc
aaa
out
pop
nop
test
pop
add
jmp
push
jge
outsl
icebp
add
jg
pop
lea
mov
ljmp
cld
xchg
out
rcl
mov
movsb
xchg
pop
adc
xchg
mov
fcomi
adc
and
sub
and
push
in
jo
mov
xchg
pop
mov
pop
and
mov
cli
outsb
call
ret
cmp
inc
sub
insb
icebp
xchg
sbb
adc
adc
xlat
mov
push
push
add
push
arpl
sub
sti
jne
pop
shlb
notl
mov
push
movsl
cltd
roll
jns
jo
and
pop
pop
dec
adc
xor
mov
sbb
sub
mov
sub
inc
clc
sahf
xlat
push
pop
lea
xchg
ss
and
mov
and
jb
outsl
mov
lea
xchg
xor
fwait
sbb
adc
xor
jle
mov
and
adc
add
dec
jb
sahf
fcomip
xor
and
xlat
fidivrs
dec
inc
out
leave
adc
and
clc
xorl
add
stc
cs
and
inc
add
shrl
cltd
addr16
pushf
in
or
dec
sbb
mov
fsubrp
jbe
xchg
adc
pop
lock
jae
inc
mov
out
popa
addr16
sbb
out
jmp
aam
jle
rorl
dec
in
mov
and
pop
add
movsb
jae
cmp
mov
dec
jmp
mov
sbb
jl
cs
add
hlt
add
or
fnstenv
cmp
pop
out
dec
xchg
sarb
sbb
add
push
pop
popa
fdivs
inc
add
fstps
add
push
push
inc
mov
or
es
lret
mov
mov
inc
xchg
into
daa
imul
inc
mov
pop
testl
cmp
xchg
cmpsl
push
ffreep
enter
cmpsl
lods
push
fwait
xor
rorl
and
bound
test
rcrb
test
enter
and
add
push
jns
mov
fdivs
mov
jo
fidivl
mov
aad
push
pusha
je
call
or
loop
mov
jl
push
sub
mov
stos
js
jecxz
movsw
adc
mov
adc
popa
les
mov
rclb
rorl
andl
xor
pop
out
pop
cmp
imul
sarl
loope
xor
jecxz
loope
aam
and
cmpl
loope
add
mov
jnp
pop
mov
ud1
push
test
xor
pop
lea
jbe
rclb
adc
jae
aam
push
les
movsb
mov
in
gs
repz
pop
pop
insb
std
sbb
cmp
call
lret
xor
or
dec
lods
popa
xchg
cmp
arpl
imul
dec
mov
in
or
adc
push
adc
in
aam
xchg
ja
jo
xchg
dec
jmp
repnz
add
or
mov
dec
xchg
dec
cltd
gs
sti
fmuls
sbb
jno
in
lock
iret
bound
push
push
jbe
ljmp
inc
in
subl
and
cltd
add
fstp
scas
lds
ds
cwtl
pop
ror
or
mov
add
xchg
lds
xchg
clc
jno
rep
data16
jbe
orb
push
popf
pop
repz
mov
aad
in
inc
test
shl
out
push
repz
enter
aas
sbb
cmpsb
les
dec
repz
test
clc
xor
loop
mov
lret
inc
push
mov
rcrb
mov
arpl
dec
ss
jbe
jg
dec
sub
xlat
cmp
xchg
outsb
loopne
mov
xchg
sbb
clc
aam
cmp
xchg
or
xchg
leave
dec
fnsave
cwtl
stc
jnp
mov
out
das
inc
mov
neg
xchg
popa
aad
pop
int
sbb
shrl
sub
inc
mov
ja
mov
or
lea
jae
push
adc
clc
xchg
jg
dec
hlt
mov
lea
jp
imul
mov
pusha
mov
sub
roll
stos
mov
jp
xchg
cli
xchg
and
and
stos
mov
or
movsl
inc
ja
cmp
test
sub
sbb
mov
sub
xorb
pop
inc
mov
and
and
push
xlat
shlb
pop
xchg
ffree
mov
daa
push
jnp
jl
jns,pn
or
out
sbb
cmp
outsl
xchg
jnp
fcmovu
dec
cmpsb
mov
lock
pop
icebp
jne
inc
pop
and
xor
lods
jmp
mov
or
mov
in
cld
fdivs
pop
push
in
sbb
push
pop
addr16
add
popa
dec
and
push
test
pop
ficomps
in
cmp
std
push
inc
data16
iret
repz
in
mov
add
fisubrs
ret
dec
cwtl
loopne
pop
sti
mov
int3
jne
jmp
ret
mov
sub
pop
sub
fucomip
in
pop
sub
xchg
push
dec
mov
mov
js
add
sahf
lds
add
xchg
or
sbb
imul
mov
push
cmp
lock
and
cmp
dec
idiv
lahf
cmp
push
mov
cmp
cmp
cmp
push
cmc
outsl
lret
push
push
cmp
sub
outsl
aam
push
mov
cli
jmp
leave
push
or
inc
lret
outsb
cmp
mov
ljmp
or
cmpl
aaa
imulb
notb
push
daa
mov
push
mov
cltd
into
cmp
dec
mov
sub
into
inc
enter
sub
cli
repz
fsubrs
or
jae
adc
repz
xchg
dec
add
pop
and
pushf
push
dec
and
xor
mov
and
xor
sub
test
jbe
loopne
jmp
dec
ficomps
out
lret
jp
shll
push
mov
sub
movsb
adc
mov
jle
sub
or
lahf
adc
mov
xor
push
out
push
mov
jg
inc
loop
cs
loope
imul
scas
cmc
add
add
pop
leave
outsl
cmp
addr16
out
fstl
and
inc
es
inc
and
arpl
jge
add
dec
cmp
and
sub
jmp
pop
sbb
or
push
mov
rcrl
mov
inc
jmp
inc
or
sub
jle
sub
jae
xor
sub
rcrl
mov
out
test
jb
mov
jae
jae
insl
addl
pop
mov
lods
sub
pop
imul
inc
stos
mov
mov
jl
imul
sti
lahf
sbb
cld
ret
daa
fsubs
cmp
movsl
inc
pop
ss
iret
jno
and
fs
sub
cmp
stc
add
addb
mov
mov
stos
leave
jp
mov
scas
rclb
adc
push
leave
dec
aaa
clc
mov
sub
cltd
dec
pop
pop
shrb
call
xchg
or
add
shl
jo
out
xchg
cmp
lock
xchg
cmp
or
cmp
inc
outsb
push
mov
and
out
fsubrl
xor
test
sarb
sub
bound
ret
jne
mov
pop
jne
insl
pop
xlat
out
add
fsubrs
lahf
cld
mov
aad
loopne
dec
cltd
js
xchg
pop
sbb
adc
add
add
ljmp
shl
ret
adc
pop
jg
popa
imul
sub
cmp
pop
je
das
pop
push
ret
mov
jmp
add
pop
leave
cmp
sbb
jle
outsb
or
mov
out
dec
xchg
mov
sbb
jb
jbe,pt
mov
push
push
jecxz
or
inc
or
sti
fidivrl
xor
xor
add
sbb
dec
xchg
fcomps
mov
out
mov
dec
cmpsl
sbb
out
jl
or
inc
push
subl
sbb
stos
mov
sbb
leave
fidivs
test
fmull
push
push
jl
ja
jg
cmp
jb
jmp
mov
cmc
jb
adc
imul
mov
pushf
add
loopne
xchg
cld
xor
mov
sbb
nop
inc
mov
jne
mov
jns
cltd
ret
int
push
mov
lahf
scas
xchg
mov
fwait
loopne
sti
mov
and
sarb
adc
xor
push
lock
pop
in
bnd
call
push
inc
jle
push
adc
or
sub
loopne
cli
ljmp
xlat
sarl
js
icebp
add
sbb
testb
aad
jae
pop
insl
ss
xor
mull
test
ret
ds
hlt
fwait
mov
mov
popa
test
and
lock
inc
push
mov
shrb
xor
xchg
inc
or
mov
jg
mov
cmc
fs
and
in
movsb
xchg
aad
pop
sarb
mov
mov
fcoms
nop
sbb
sub
fs
mov
cmpl
mov
inc
inc
outsb
dec
adc
aas
xlat
cld
dec
sbb
and
xor
lds
push
sbb
xor
or
dec
push
add
dec
leave
hlt
pop
lods
rcr
and
mov
inc
sbb
xlat
mov
movsb
jecxz
push
jg
popa
jo
add
arpl
push
or
test
out
sbb
stc
in
in
inc
pop
sbbb
add
test
mov
xor
gs
movsbl
mov
xlat
adc
dec
lds
js
add
icebp
std
pop
insl
push
sbb
sarb
push
and
add
shlb
and
insb
xchg
fsubr
icebp
or
fisubrl
push
cmp
jp
dec
mov
hlt
and
adc
mov
pop
gs
add
mov
push
stos
rcrb
outsb
pop
adc
push
aaa
mov
lahf
lods
add
push
add
sub
add
mov
dec
mov
cmp
stos
por
push
dec
jb
xor
out
jae
shll
stos
jns
or
imul
lahf
mov
cmp
push
imul
mov
mov
loope
adc
out
arpl
mov
mov
lods
pop
fdivrl
stc
mov
pop
and
pop
xchg
pop
jb
subb
dec
or
or
pop
push
fwait
adc
fxam
xor
sub
push
pushf
pop
push
mov
sub
outsl
push
sub
data16
aas
jnp
or
imul
or
nop
mov
pop
adc
pushf
dec
xlat
cmpsb
mov
aas
and
mov
xchg
idivl
dec
adcb
mov
jae
loope
push
cmp
pusha
xchg
call
add
push
xchg
pop
push
cmp
cwtl
rclb
ds
adc
out
lcall
xorb
pop
test
xor
psubsb
stc
xchg
inc
sub
mov
fcomps
lret
movl
negb
jbe
fildll
xchg
aaa
in
push
jnp
adcb
dec
jecxz
jnp
mov
push
repnz
xchg
das
pop
scas
and
scas
jge
xchg
pusha
fldl
in
push
lea
inc
loope
imul
fadds
inc
movsl
cmp
pop
lock
sub
out
xchg
clc
pop
fwait
test
add
sub
lods
sbb
or
jae
jle
mov
adc
add
cmc
cmp
cmpsl
lahf
data16
push
dec
cmc
xchg
mov
and
xor
xchg
and
jle
pushf
fwait
loopne
out
shrb
popa
cmpsb
mov
in
mov
sub
add
popf
addr16
inc
lret
cmp
inc
sub
jb
cwtl
dec
inc
sbb
dec
push
aam
fistl
pop
fidivs
dec
ds
cmp
insl
pop
xchg
out
and
shll
aad
out
sub
sub
out
adc
and
and
cltd
ss
mov
in
nop
es
out
xchg
movsb
out
scas
movsl
add
mov
addr16
push
push
xchg
gs
stc
mov
mov
cmp
icebp
xor
imull
pop
inc
imull
inc
popf
stos
pop
mov
mov
int
bound
ret
call
pop
push
sub
dec
mov
push
outsl
and
add
nop
push
cs
mov
dec
add
cmpsl
outsl
out
sub
inc
lea
lcall
mov
xchg
add
push
aam
push
lods
pop
add
dec
push
pop
and
sbb
pop
push
sub
mov
xchg
mov
jbe
ret
scas
cmp
popf
mov
sub
frndint
insb
fcom
add
xor
pop
jge
xor
and
out
or
test
mov
add
pop
outsl
into
sub
dec
cmp
add
dec
repz
inc
mov
cld
lock
add
inc
mov
xorl
jg
push
lcall
fsubr
daa
ja
ret
sub
shl
xchg
fs
xchg
mov
fbstp
sub
adcl
imul
mov
outsb
add
fwait
adc
clc
mov
push
lcall
leave
jecxz
push
mov
test
outsl
fistpll
ds
inc
push
pop
fwait
cmpsl
cmp
mov
xchg
int
js
clc
daa
mov
lahf
mov
clc
cmp
fs
push
cmpsl
push
in
fsub
mov
jmp
incb
jg
cmp
out
fwait
push
pop
jns
push
mov
mov
xor
iret
jne
movsb
lods
xor
dec
mov
cmp
inc
add
dec
xor
mov
pop
mov
sub
shl
lahf
rol
lea
jecxz
scas
mov
sahf
cmpsl
or
dec
mov
shlb
push
negl
jecxz
mov
in
dec
xor
jle
rorl
icebp
into
and
sti
scas
sbb
mov
ja
xchg
mov
mov
mov
add
xor
pop
out
lods
clc
inc
or
jno
jae
sbb
pop
int3
or
fidivl
pusha
je
sbb
xchg
add
fimull
and
push
inc
test
lods
jmp
in
mov
xchg
xchg
pusha
or
popf
in
aaa
stos
inc
nop
js
mov
inc
pop
dec
or
lea
cmp
jns
pop
insb
jb
jecxz
push
leave
push
insb
or
lret
xchg
std
inc
add
rolb
jle
pop
stos
cltd
mov
cmp
out
in
sub
test
add
js
jo
dec
pop
std
insb
es
add
add
int3
mov
scas
icebp
cmc
addr16
and
or
fldenv
mov
xor
scas
inc
cwtl
aaa
add
inc
cmp
jmp
gs
imul
mov
mov
cs
arpl
sahf
in
in
arpl
popa
mov
or
sbb
int
lods
divl
xchg
test
add
xchg
cltd
and
lea
ss
rol
lcall
ss
pusha
jl
inc
inc
inc
getsec
mov
xchg
mov
inc
lret
data16
xlat
ja
cmp
jae
mov
aad
mov
test
cmp
mov
jno
or
xchg
insb
in
fnstsw
pslld
jmp
call
fmull
imul
shl
scas
and
sub
andl
adc
loopne
jbe
or
addr16
bound
cwtl
or
mov
sbb
dec
adcb
leave
xor
jnp
adc
daa
jbe
sub
aas
outsl
and
lret
mov
fwait
imul
add
and
add
test
es
jmp
daa
lock
jl
dec
scas
ja
out
aas
aaa
hlt
fcompl
sbb
xchg
mov
int3
sub
fcomps
repnz
sbb
jno
fidivl
dec
cmpsl
dec
mov
push
or
add
mov
jnp
lret
push
lds
out
push
push
adc
in
into
xchg
mov
dec
pop
stc
mov
add
pop
sarb
adc
xchg
adc
roll
arpl
and
insb
or
mov
out
cmc
xor
icebp
fidivrs
adc
jb
leave
jbe
in
in
add
push
cmp
les
daa
mov
adc
lods
repnz
iret
mov
ljmp
lods
mov
jp
cmp
and
lock
nop
push
cmp
in
rol
dec
andb
inc
scas
mov
sub
mov
add
int
pop
lock
push
scas
cltd
outsb
mov
lret
mov
sub
fcoml
xor
imul
idivb
mov
cld
hlt
lock
fisttpll
mov
fs
jmp
popf
loopne
mov
loopne
push
add
jns
pop
ds
sbb
and
sub
xchg
push
les
adc
fildl
js
mov
adc
hlt
xor
popf
dec
loope
xorb
outsb
sbb
les
jne
adc
push
aaa
fidivrl
xchg
push
inc
and
lds
ss
lods
push
sarl
mov
inc
mov
scas
enter
mov
mov
outsl
testl
dec
pop
cmp
adc
aad
andb
lock
mov
push
sub
pop
cmp
call
xor
loop
addb
cmpsl
or
xchg
movsl
jns
lcall
jg
xor
mov
adc
int3
mov
test
loopne
mul
inc
dec
bound
pusha
cmp
loopne
dec
call
inc
in
inc
xlat
sarb
push
not
mov
push
mov
push
xchg
sbb
js
sub
shlb
xor
in
in
push
test
test
mov
inc
imul
cmpsb
in
iret
jnp
loop
jmp
mov
ret
jnp
mov
dec
mov
pop
sbb
shll
bnd
and
repnz
mov
mov
faddl
sub
cmp
inc
aad
andb
shll
aad
pop
dec
push
mov
cmpsb
test
ljmp
call
sbb
adc
loopne
lds
xchg
mov
repnz
cmpsl
movsb
shrb
aam
stc
inc
xlat
add
cmp
jno
pushf
xchg
out
mov
insb
shrw
loope
fld1
push
lock
js
jnp
jno
cmpsb
nop
fmull
fbstp
loope
pop
or
mov
cld
sub
fstl
filds
inc
inc
pop
push
add
fwait
jno
mov
xchg
dec
shlb
or
movsb
sbbb
in
int3
sbbb
jl
pop
mov
mov
lds
in
aaa
ret
push
shrb
shlb
xor
aad
xchg
es
jnp
pushf
scas
inc
imul
push
add
daa
jl
scas
add
mov
repz
testl
adc
sub
jne
mov
mov
and
push
dec
shrl
xor
sbb
cmpsb
sub
dec
add
ficompl
pop
sbb
dec
sub
das
iret
lea
cmpsb
orl
xor
gs
out
out
inc
and
icebp
lds
insb
in
mov
hlt
fldcw
je
pextrw
and
push
insl
or
adc
or
push
test
dec
adc
push
xor
bound
shlb
jp
inc
aam
pop
lock
test
fcmovb
daa
push
fadd
addr16
sbb
lods
loope
scas
mov
dec
xchg
xlat
cld
pop
mov
loope
std
pop
jbe
push
sub
pop
aad
sbb
cmpsb
inc
dec
arpl
mov
es
shlb
aam
add
inc
stos
push
sub
push
mov
and
gs
add
or
lret
je
mov
jl,pn
lock
stos
or
pusha
mov
inc
insl
testl
rcrl
mov
or
mov
ljmp
gs
mov
hlt
mov
out
and
cmpsl
mov
dec
jecxz
mov
jge
xchg
xchg
ss
dec
adc
sub
inc
out
inc
mov
push
out
das
fsubp
aaa
add
xor
out
xchg
push
imul
test
xchg
xorb
aas
mov
cs
adc
or
jl
add
xchg
or
lret
hlt
in
sar
xor
sti
fistl
fs
ja
mov
adc
xchg
mov
jnp
fisubs
or
fcmove
icebp
cmpl
push
out
xor
js
repnz
and
test
out
ficoml
mov
push
xchg
leave
sbb
inc
mov
scas
movsl
mov
repnz
push
aad
cmp
cld
std
add
sub
fmull
repnz
cmc
or
push
arpl
pusha
lods
mov
lcall
mov
rcrl
push
sbb
pop
add
xor
imul
xchg
pop
loopne
in
push
push
subb
mov
adc
imul
cmc
test
xchg
out
iret
cmp
cld
or
arpl
insl
jb
fisttpll
sbb
xor
stc
lods
jne
push
leave
lret
jmp
nop
pop
mov
xchg
cli
ja
repz
adc
test
xchg
sbb
scas
movsb
int
add
fldt
mov
mov
jb
mov
call
ss
jl
lds
lods
xchg
out
fildll
cwtl
add
outsb
xlat
or
xchg
or
or
xchg
dec
les
daa
cmp
mov
rorl
scas
adc
js
cmp
mov
mov
mov
xor
mov
xor
jb
in
outsb
pop
sti
pop
jne
or
cmp
inc
aaa
iret
jmp
ficomps
test
mov
in
mov
mov
jmp
mov
sub
cmp
push
jl
stos
jecxz
xlat
mov
mov
ret
push
dec
or
push
or
push
fdivrs
xchg
pop
push
pushf
xor
xchg
xchg
or
push
fiaddl
call
mov
aaa
outsl
mov
insb
ss
xchg
dec
movsl
rcrb
xor
xor
jb
das
stc
pop
mov
outsb
xor
cmp
push
xlat
cmp
aad
pop
fistps
push
outsl
aaa
mov
enter
inc
insl
movsb
mov
stos
xchg
ret
into
push
jae
gs
clc
mov
xor
pop
shlb
cmpsl
test
pop
out
fldenv
mov
push
testl
pop
sbb
in
insb
js
popl
movsl
insl
imul
ss
adc
sbb
sbb
jmp
adc
ja
cmp
xchg
push
push
jle
and
mov
std
mov
fistpl
pop
cwtl
inc
in
in
lods
or
imul
xlat
dec
add
ja,pt
add
std
xor
pop
lds
cmpsb
jae
aas
sub
dec
jno
js
inc
mov
mov
shrb
pop
stos
lret
sbb
cmpsl
jle
aaa
in
pop
je
in
or
cmp
adc
in
xchg
idivb
xchg
push
and
cmpl
mov
lods
sub
shl
test
test
pop
mov
push
sub
lock
mov
repz
sbb
add
lds
test
int
mov
les
sar
pop
mov
test
jg
pop
inc
popa
int
clc
pop
and
mov
cltd
inc
push
mov
inc
mov
stos
inc
data16
push
enter
fnstenv
and
iret
push
dec
xchg
add
mov
fdivs
in
pop
jb
clc
mov
das
xchg
cltd
xor
stos
and
push
add
fcompl
jns
xlat
mov
cs
movsb
jno
ret
mov
notl
dec
imul
jns
lea
xchg
mov
notl
test
arpl
xor
cld
or
sbb
ljmp
es
rclb
outsb
in
jge
cmp
outsl
cmp
or
mov
iret
loop
imull
add
inc
je
dec
sub
in
and
mov
mov
fistpl
add
add
mov
push
int
shr
pop
xchg
push
jecxz
mov
fwait
jne
roll
mov
bound
into
inc
sarb
mov
inc
mov
loopne
fimuls
mov
mov
cld
pop
mov
fistpll
cmp
or
or
inc
mov
push
push
xchg
data16
lds
mov
in
push
cmp
sbb
pop
or
and
xor
insl
arpl
pop
mov
jecxz,pt
jge
fwait
xchg
lods
pop
jo
adc
push
aam
adc
mov
rcrl
and
or
loopne
or
jns
test
jmp
pop
push
or
push
mov
mov
pop
mov
sbb
rcr
add
ja
pop
push
push
movups
sbbl
dec
rcrb
int3
rol
mov
mov
cmp
push
bound
hlt
in
jmp
rorl
stc
call
push
fimuls
test
dec
push
cmp
mov
xor
xchg
mov
into
push
cmp
mov
gs
mov
mov
fsubrp
jno
pop
mov
mov
push
rorl
imul
push
addl
inc
sub
shl
loope
lret
add
loop
inc
cmp
pushf
ja
shlb
mov
or
xor
adc
jno
mov
push
sbb
pop
stc
test
xchg
les
clc
mov
loopne
lcall
and
and
cld
int
pop
pop
mov
es
lahf
dec
loope
jp
pop
sbb
pop
cmp
xlat
adc
fstpt
mov
and
xorb
popa
scas
jne
scas
addr16
push
call
push
mov
pop
xor
je
push
sbb
xchg
repz
das
xor
ret
sbb
sbb
icebp
add
stc
mov
adc
cmp
push
jns
jmp
mov
cld
mov
nop
jle
cmp
stc
xchg
and
xchg
sub
jno
in
jae
je
repz
pop
or
lcall
sti
sbb
push
add
xchg
lret
movsb
loop
pop
jbe
insb
inc
cmp
xchg
imul
sahf
xchg
aaa
scas
fistpl
nop
adc
fidivs
pop
jmp
movsb
mov
cmp
adc
sub
lea
push
jne
in
fimull
rcr
jnp
xchg
push
enter
xchg
sub
sub
cmp
scas
mov
pop
cmp
push
aam
sub
out
push
sub
and
pushf
push
aad
sbb
mov
mov
xchg
shll
out
shr
xchg
aam
lcall
fcmovne
in
adc
call
test
shll
mov
mov
cmp
xor
test
outsl
cmpl
jl
cs
mov
test
movsl
adc
repz
or
pop
xchg
enter
scas
mov
loop
add
andb
ds
repnz
mov
xchg
mov
int
jle
loope
cmp
lock
push
sbb
cld
in
clc
or
pusha
lret
out
dec
repz
lock
je
bound
push
mov
sbb
inc
jo
fcomps
cmp
mov
sub
pop
fdivl
push
nop
add
mov
ret
in
add
in
imul
int
cmp
stos
call
fistpl
movsl
cmp
jnp
roll
jge
std
dec
stos
mov
sbb
popa
and
cltd
mov
out
loope
in
xchg
in
inc
cmp
jne
lea
imul
pusha
mov
test
into
jmp
xor
fsubr
push
in
mov
jne
out
jo
jp
mov
push
into
xor
jle
mov
jmp
dec
ljmp
test
lods
insl
fiaddl
shrl
dec
adc
stos
pop
orl
adc
repz
sbb
sbb
sub
scas
pop
pop
xchg
mov
outsb
add
xchg
jno
add
fsubs
pusha
lret
dec
sahf
xchg
jae
pop
addr16
test
xchg
mov
jae
pop
stos
mov
fs
cli
mov
push
mov
enter
jno
rcl
sub
jecxz
negb
push
jle
and
and
push
sbb
sbb
push
sub
sbb
xor
mov
aas
dec
ret
enter
sahf
or
and
pop
notl
in
dec
xlat
pop
fdivs
xchg
xor
ds
out
push
inc
xor
aad
inc
sub
loopne
ds
fs
mov
in
enter
fs
or
test
gs
pushf
iret
push
dec
in
insb
pop
dec
pop
movsl
sub
mov
cmp
and
mov
int
xchg
out
xor
lret
or
xlat
sub
sbb
mov
cmp
scas
lds
mov
jae
scas
add
push
dec
repnz
mov
mov
jl
pop
enter
gs
xchg
pop
and
bound
and
pop
cmp
mov
in
sbb
loope
mov
xchg
inc
call
mov
cmpsl
or
push
outsl
int3
sub
push
jle
mov
movsb
daa
imul
and
mov
jmp
push
stos
ret
pop
and
pop
mov
out
inc
sbb
cmp
pop
aam
sbb
incb
xchg
outsb
jmp
mov
mov
push
movsb
adc
aam
std
aam
cltd
shrl
cmp
int
pushf
loopne
push
cltd
int3
inc
sbb
pop
inc
mov
or
sub
adc
sbb
in
sbb
daa
leave
mov
pop
push
adc
fidivrs
and
xor
push
les
mov
ficompl
mov
das
push
mov
out
insb
scas
hlt
cmp
pushf
jge
std
lock
xor
fwait
xchg
inc
repnz
int3
mov
inc
inc
jo
adc
jae
pop
jecxz
push
jno
jbe
fdivs
xchg
sti
outsb
pop
js
pusha
fcomps
dec
loop
xlat
mov
mov
pop
push
test
lea
jmp
jecxz
cmp
xor
jle
mov
xor
mov
enter
pop
aam
or
or
ret
sub
pushl
bound
mov
mov
cmp
scas
fisttpll
in
lahf
imul
rorl
cmpl
es
out
notl
int3
and
sub
push
add
leave
test
mov
cmp
fsub
clc
xlat
icebp
push
dec
add
ret
ljmp
je
lock
rcrl
lret
jns
jns
or
sub
ret
xchg
cs
or
movsb
loop
xchg
xlat
xchg
push
xchg
ss
sbb
fwait
popa
fs
inc
in
insl
decb
xchg
mov
das
ret
out
loope
icebp
cs
add
mov
ret
sbb
or
test
mulb
ja
xor
insb
cmp
in
ljmp
roll
int3
jmp
sbb
mov
bound
adc
and
cmp
cmpsb
mov
push
cmp
pop
aaa
jmp
lahf
xor
jno
les
cltd
ds
xor
cmp
call
and
sbb
fstpt
repnz
popa
cmc
jae
push
repnz
mov
ljmp
daa
icebp
inc
shrd
and
cmp
sti
xlat
mov
mov
hlt
mov
test
sub
xor
pop
fildl
cmpxchg
jge
mov
cld
and
out
sarb
lods
das
inc
add
xor
out
cmp
ret
or
ds
scas
ja
fcmovu
mov
sbb
pop
push
es
fisttpl
aad
sbb
fdivs
cmpsl
rorl
and
xlat
dec
test
out
fstpt
movsl
ss
adc
sub
fcomi
xor
mov
jg,pt
and
pop
ret
movsl
fwait
dec
std
and
push
sub
xchg
js
ss
outsl
push
dec
call
cwtl
push
hlt
outsl
lods
or
sbb
lret
jl
xchg
mov
push
fmuls
mov
mov
test
push
adc
jle
xor
mull
dec
sub
popf
lret
lahf
add
out
sub
mov
inc
dec
stc
not
in
ljmp
andl
clc
lods
mov
jb
in
lods
cmp
jns
loopne
jge
dec
and
mov
push
sbb
push
movsb
jg
mov
adc
cmp
jge
dec
xchg
cmpsb
xor
cltd
dec
dec
lds
mov
add
dec
insl
adc
or
xchg
aad
cmp
shlb
ja
mov
xchg
xchg
loop
mov
out
shl
sbb
lcall
inc
pop
mov
in
mov
xor
mov
xor
and
adc
fidivl
movsl
mov
or
dec
mov
dec
loop
cs
pusha
lahf
addr16
dec
push
mov
inc
jno
shl
scas
lahf
js
xlat
and
add
push
dec
sarb
sub
lret
call
cmpl
test
loopne
jecxz
dec
cmp
sahf
push
sbb
int3
je
xor
std
test
xchg
es
push
mov
jecxz
inc
movsb
push
repz
ljmp
rclb
inc
xchg
push
cmpsb
out
pop
cld
push
ficoms
mov
mov
inc
divb
nop
mov
sub
ja
addb
mov
call
xor
arpl
loope
mov
jge
fcompl
jl
xor
jl
xchg
or
aaa
cmp
jl
xor
xchg
push
scas
jg
and
push
lret
sub
hlt
fwait
xchg
ret
mov
xor
subb
outsb
in
add
out
lods
cmp
sub
je
sbb
movzwl
fldt
xor
repnz
icebp
bswap
adc
out
ljmp
pop
call
dec
cmp
das
repz
mov
imul
data16
in
out
and
cmc
and
cmp
dec
push
pop
aas
jp
push
jg
ja
inc
dec
shlb
insl
mov
lock
xor
or
loope
in
or
cmp
ss
jbe
or
insl
fwait
movsb
add
sbb
jno
cmpsl
push
out
adc
mov
or
clc
dec
aas
pop
xchg
sub
lret
sub
scas
dec
mov
pop
sub
outsb
inc
lods
adc
mov
xchg
jbe
push
jbe
and
or
dec
xchg
loope
fs
mov
jecxz
loope
push
adc
pop
push
lret
gs
dec
xchg
or
in
inc
je
and
outsl
jae
ret
pusha
push
dec
mov
mov
int
jg
hlt
inc
ret
gs
jns
movsb
stos
lret
call
cli
xor
das
add
sarb
stos
es
adc
outsb
cmp
out
iret
mov
dec
test
aas
daa
push
ja
push
ds
scas
pop
jecxz
mov
daa
sbb
lcall
add
jl
mov
and
mov
add
pop
daa
or
pop
mov
fwait
cmpsb
sbb
bound
cmp
mov
shll
mul
mov
jmp
clc
xchg
sub
pop
cmp
mov
mov
sbb
push
add
inc
xchg
push
jb
add
cwtl
or
inc
daa
mov
mov
jno
fsubrs
xor
jns
pop
les
cmp
xor
cmp
mov
jns
aaa
inc
and
sbb
mov
test
ss
enter
ja
cli
sbb
cmc
fwait
push
loop
adc
fadds
orb
cmpsl
data16
or
pop
test
fcoml
out
adc
call
jo
cmp
push
dec
pop
push
inc
mov
jmp
inc
pop
gs
loop
mov
int
movsl
fwait
or
shll
push
adc
cmpsl
push
push
fistl
pop
daa
popl
xchg
in
imul
scas
iret
xchg
xchg
test
dec
jae
dec
push
in
mov
mov
aad
fcmovu
jo
in
sub
add
push
testb
mov
int
sbb
pop
pop
jae
mov
fnstcw
shlb
in
je
adcl
dec
imul
push
or
xor
adc
inc
xchg
fstps
mov
ret
iret
subl
inc
push
out
ficompl
lods
pusha
push
ljmp
out
cmp
xor
es
dec
nop
mov
in
daa
rcl
mov
sub
dec
je
mov
cmp
cmp
cmp
scas
pop
fcomps
xor
xchg
mov
lret
bound
cmp
inc
mov
fs
push
mov
andb
ret
pop
pushf
jo
cmp
xchg
in
push
or
cwtl
add
pop
cmp
mov
mov
dec
cmp
aaa
cltd
add
sbb
pop
aad
jne
stc
cli
fistpl
loope
inc
dec
movnti
jae
or
movsb
cmp
imul
dec
in
imul
inc
in
mov
push
fstpt
cmp
jo
adc
inc
mov
ds
inc
fisubs
pop
push
mov
mov
dec
int
hlt
les
stos
mov
push
in
fwait
and
std
sbbb
mov
outsl
fadd
testl
cmc
shll
or
addb
or
mov
in
jecxz
and
push
mov
cmp
mov
es
call
jmpw
or
add
or
imul
dec
lock
sub
outsb
pusha
add
test
mov
addb
iret
dec
lret
xchg
test
cmp
pusha
shl
pop
mov
ret
dec
sbb
pop
fstpt
cltd
fsubs
lods
int3
test
mov
sahf
leave
mov
jb
lds
cmp
mov
out
dec
pop
icebp
sub
xor
inc
adc
mov
ret
dec
inc
add
addl
add
inc
add
sub
mov
je
inc
mov
out
cmc
out
arpl
sbb
lods
and
xor
into
mov
xor
add
in
orb
xor
out
xchg
ret
mov
adc
pop
sti
mov
jmp
in
push
xor
int3
mov
jbe
push
std
into
jle
lods
push
push
cld
xchg
xor
gs
dec
push
in
mov
pusha
mov
mov
jl
xor
jae
adc
loopne
add
ljmp
jnp
loope
cmp
pop
aas
stc
stos
rcl
mov
cmpsb
rcl
mov
push
or
cld
pop
mov
imul
mov
mov
mov
notb
mov
mov
dec
jle
mov
and
jbe
sahf
loop
mov
testb
inc
sub
mov
dec
cmpb
mov
and
mov
mov
popa
dec
pop
sbb
ds
mov
pop
outsb
mov
pop
fwait
sti
adc
sbb
aas
jae
rcrl
sti
repz
ucomiss
movsl
ret
sub
jle
jmp
push
push
xchg
cmp
andb
jno
jno
sbb
cwtl
fisubl
jecxz
dec
push
insl
popf
jl
dec
lret
hlt
xor
jmp
lds
mov
ja
mov
ret
jle
xor
mov
and
mov
sbbb
es
pop
cmp
jnp
xor
inc
add
es
cmp
inc
in
faddl
sub
dec
fdivrl
andl
xor
cltd
notb
lret
adc
hlt
dec
sub
andb
inc
iret
or
pop
lcall
stos
jno
stos
push
dec
nop
mov
stc
cwtl
push
test
or
pop
jl
xchg
ret
daa
leave
mov
push
inc
insb
movaps
int
lea
out
push
xchg
push
ljmp
lds
movsl
insl
xlat
dec
scas
cmpsb
sbb
mov
ja
mov
hlt
fiaddl
jno
cmpsb
and
arpl
cltd
iret
call
adcl
mov
pop
pop
and
sbb
adc
cmp
mov
andb
out
in
cmpsb
dec
ja
into
cmpsb
lds
cli
xchg
push
xor
sbb
sbbb
xchg
add
or
adc
call
and
pusha
in
dec
mov
and
sbb
or
stc
subb
gs
xlat
jmp
fsubrs
aad
mov
jne
test
pop
push
cld
cmp
sub
push
and
mov
cmp
rcrl
dec
cmp
xchg
jl
fists
mov
xchg
inc
xor
push
jge
adc
out
push
xlat
or
insl
mov
or
jg
das
xchg
scas
not
jb
xchg
rol
es
dec
cmpsl
mov
inc
fld
add
xor
pop
mov
inc
mov
enter
mov
cli
xor
jae
add
mov
mov
inc
push
int
push
imul
xchg
pop
in
je
enter
mov
xchg
inc
call
dec
sbb
or
xchg
and
push
xchg
test
scas
ds
xchg
in
mov
ljmp
ret
cltd
call
roll
jns
sub
enter
bound
cwtl
loop
mov
pop
or
std
xchg
ja
mov
push
mov
xchg
cs
pop
xchg
pop
imul
push
lret
in
sub
loop
adc
aad
movsl
push
loop
inc
mov
mov
dec
cmp
adc
out
or
jbe
add
inc
jns
dec
jo
fucomip
cmp
mov
xor
scas
sbb
xchg
push
int
mov
ret
jge
notl
xchg
cli
testb
insl
in
fidivrs
xchg
fwait
scas
mov
pop
int
dec
cmc
and
mov
call
movsb
in
loope
or
arpl
mov
mov
xchg
or
sahf
lret
shlb
in
dec
or
in
lcall
ljmp
lods
pop
fisttpll
push
int3
xchg
insb
mov
push
mov
fs
jp
out
pop
xchg
stos
into
scas
adc
xchg
idivb
push
addb
mov
shll
jg
lods
stc
das
xchg
cmpl
dec
adc
scas
jmp
inc
daa
mov
pop
test
ljmp
pop
aam
mov
cmpsb
mov
add
movl
or
pop
mov
shll
xchg
scas
dec
sub
mov
cmpsb
mov
jmp
es
mov
pop
xchg
in
xchg
mov
sarb
int3
jle
and
sub
jo
repnz
mov
movsb
test
jno
xor
pop
pop
mov
cmpsb
aas
out
jb
inc
loop
fsin
xlat
jnp
pushf
fistps
mov
xchg
mov
cmp
repnz
adc
mov
pop
loop
mov
les
inc
mov
loope
nop
fisubl
ljmp
aad
paddusw
js
jle
pop
in
push
gs
lcall
imul
sbbb
mov
loop
pop
dec
pop
or
fcmovu
push
stos
cli
and
cli
mov
fistpll
jp
dec
inc
popa
push
cmp
cmp
or
xor
add
mov
push
das
or
mov
xchg
call
xor
nop
cmc
inc
lock
jle
call
xor
loopne
sbb
out
repz
mov
cmp
sbb
jne
popf
jl
fisttpll
rclw
mov
cmc
xchg
or
rolb
scas
or
addr16
stc
mov
out
ss
mov
mov
lods
test
sbb
push
sahf
mov
leave
out
mov
lahf
fs
sti
outsl
fldt
insb
cmpsl
repz
xchg
int3
sub
jno
inc
data16
ja
sbb
push
xchg
into
outsl
mov
sbb
cmp
rorl
pop
sarl
inc
outsb
cmp
loop
pop
mov
mov
pop
inc
xor
dec
xchg
insb
pop
mov
jg
jae
push
sub
jl
outsl
pop
pushf
ljmp
add
add
jmp
sbbl
pop
pop
iret
lea
insl
xchg
mov
rclb
movsb
jmp
xlat
fisttpl
ret
sub
cld
sbb
pop
push
or
daa
dec
push
arpl
fistps
cwtl
push
arpl
lahf
cmp
nop
lret
sub
imul
mov
mov
mov
in
mov
movsl
cmpsb
inc
mov
mov
xlat
das
sub
xor
xor
adc
cld
push
pop
rcl
test
inc
and
cmpsl
imul
sub
pop
mov
and
or
scas
outsl
movsl
imulb
mov
inc
dec
inc
push
in
mov
loope
xor
shrl
push
mov
cld
pcmpeqd
ds
mov
fwait
dec
daa
adc
fiadds
hlt
test
xor
divb
mov
dec
aam
mov
xchg
inc
sbb
sub
lcall
sbb
add
mov
mov
sbb
lock
mov
push
push
mov
repz
dec
dec
cli
push
pop
andl
mov
test
repz
add
sub
in
inc
mov
xor
je
aam
mov
cmp
mov
cmp
dec
adc
cmp
repnz
or
xchg
mov
mov
test
test
fisttps
addr16
mov
out
outsl
sbb
andb
push
fcomi
rcl
jecxz
cld
push
aaa
popa
pop
cmc
fidivrl
cmpsb
and
cmc
pop
sbb
in
jae
into
ja
fsubp
sbb
movsl
mov
xchg
mov
dec
repnz
xchg
repz
pop
es
inc
call
in
pop
lds
inc
aad
fbstp
pop
out
or
xor
aad
imul
push
repz
xchg
jle
jecxz
test
jp
int
mov
xchg
mov
ds
push
and
fsub
adc
jmp
fsubl
nop
lret
lock
or
rclb
push
or
sbb
xchg
pushf
xor
icebp
xchg
cmc
out
scas
cmp
sbb
cmp
jo
cmpb
sbb
insb
stos
int3
jns
jae
int3
fidivs
aam
and
xor
out
clc
push
and
ret
into
call
cs
sub
xchg
enter
in
dec
leave
int3
and
add
cmp
aad
daa
sbb
insl
cwtl
mov
hlt
mov
sub
sub
inc
ja
push
push
and
dec
pop
sub
pop
push
adc
mov
jmp
jmp
push
inc
lret
mov
imul
lahf
into
lcall
sub
repnz
xchg
inc
inc
aaa
dec
adc
nopl
xor
dec
xchg
xchg
nop
iret
mov
adc
je
mov
mov
inc
sbbl
inc
addr16
xchg
jmp
mov
dec
push
cmp
ficomps
jne
jecxz
lret
cmp
repz
mov
clc
daa
in
pop
mov
mov
sbb
mov
test
cmp
mov
sbb
mov
aad
test
push
mov
dec
pop
mov
jmp
jne
mov
lea
ret
and
mov
test
dec
dec
sbb
ljmp
push
and
cwtl
jl
push
jg
repnz
in
sub
imul
xchg
inc
movsl
out
hlt
mov
out
fdivrp
jo
lds
adcl
in
ret
push
loope
gs
push
cltd
push
and
sbb
cmp
pop
iret
or
jne
push
add
rolb
jns
cmpb
jge
push
lret
dec
and
dec
lock
mov
dec
rcrb
jge
mov
jno
sahf
push
xchg
or
mov
push
leave
and
dec
mov
lret
aam
dec
mov
das
sbb
or
and
xor
or
pop
push
mov
xchg
lock
xor
sub
sbb
in
dec
mov
inc
sub
dec
xchg
mov
sbb
dec
mov
pusha
jle
pop
or
pop
inc
jmp
fwait
inc
cpuid
test
jb
pop
mov
addr16
jno
sbb
scas
dec
dec
and
clc
inc
inc
xor
ja
dec
pop
push
cld
push
out
cli
lret
cmc
loopne
fimull
push
inc
or
mov
ret
or
xchg
mov
test
stos
pop
pop
sbb
sub
sbbl
aam
mov
push
or
and
imul
ds
cmp
lcall
inc
lcall
fildll
enter
ds
pop
aas
lock
cld
mov
add
in
push
sub
stos
inc
andb
mov
adc
dec
popa
loop
fistpl
sbb
stc
out
in
xchg
gs
out
into
pusha
push
inc
push
dec
push
or
lret
aam
mov
lahf
daa
cmpsb
push
add
mov
shlb
mov
xor
pop
mov
lret
push
repnz
cmpsl
sbb
insb
cld
jne
mov
push
inc
add
pop
and
not
mov
inc
and
jbe
cmp
idivb
loope,pt
push
push
jae
fld
mov
out
lock
mov
pop
fdivrs
adc
and
pop
jns
dec
mov
jge
lods
loopne
inc
int3
push
testb
adc
cld
subl
rolb
popa
dec
addb
jg
sbb
xchg
mov
into
outsb
outsl
aaa
pop
test
icebp
cltd
in
mov
lods
xor
shlb
icebp
outsb
mov
add
cmp
sti
adc
test
test
cmp
and
repnz
mov
test
daa
cltd
dec
ret
push
and
jecxz
dec
add
ror
rcrb
xlat
stos
frstor
inc
adc
lret
push
sbbb
fimuls
js
sub
jo
mov
insl
add
xchg
in
test
xorl
mov
mov
sbb
ljmp
insl
xchg
sbb
and
mov
lret
add
mov
out
mov
sub
cli
fdivrs
push
push
sub
mov
adc
lods
pop
and
inc
in
testb
mov
mov
fs
pop
cmp
rorb
mov
mov
adc
and
mov
cld
aad
repnz
fmulp
mov
add
or
int
and
xchg
push
mov
repz
push
repz
push
or
jp
outsb
xchg
xor
fcompl
in
xchg
xlat
sti
iret
out
mov
loope
mov
js
mov
jl
dec
loopne
lret
lcall
divl
fisttpl
jbe
hlt
cmc
bound
sbb
and
and
push
repz
sbb
xchg
int3
aaa
pop
cmc
adc
ss
incb
cltd
lret
mov
stc
or
rolb
negb
push
flds
ljmp
in
lret
mov
loop
jnp
test
test
shrl
loop
fidivs
gs
mov
add
sbb
je
xor
cwtl
stos
hlt
or
into
enter
add
flds
pop
cmpsb
int3
std
pop
int3
pop
inc
dec
push
mov
mov
mov
sbb
out
jl
fldcw
xlat
adc
sbb
dec
clc
push
mov
mov
xchg
push
ljmp
adc
cmp
scas
and
mov
fimull
pop
jb
and
notl
andl
sub
loop
dec
stos
push
adc
hlt
xchg
xchg
out
int
fcmovb
addr16
mov
lea
stos
scas
sti
xchg
lds
mov
jle
stos
sbb
jbe
adc
pop
insl
pop
add
dec
push
or
cld
or
mov
adcl
push
jecxz
test
inc
insl
es
shll
lret
xor
dec
addr16
movsl
les
xchg
mov
jmp
in
in
inc
data16
sti
leave
test
xchg
xlat
fs
sbb
je
data16
shlb
pop
fs
ficompl
popf
mov
shlb
sbb
enter
sarb
pcmpeqd
cmpsl
mov
divb
insb
fsubrs
add
je
pop
scas
in
inc
or
popa
rcll
xchg
mov
dec
push
push
iret
sbb
and
cmpsb
into
dec
fstpl
and
insb
mov
or
test
stos
mov
test
insb
test
insb
clc
pop
dec
xor
sbb
out
adc
mov
nop
shll
call
add
mov
mov
rol
or
add
xchg
xor
ds
fwait
push
jae
stc
js
out
mov
das
cltd
pushf
cmp
imull
inc
sbb
xor
mull
fmull
mov
fcoms
test
dec
movsl
sub
xor
pop
lea
je
loop
lock
push
push
lock
ret
inc
out
cli
cmpsl
cld
jbe
jnp
push
orl
fisubrs
js
mov
pop
cwtl
pop
or
cld
add
add
idivb
xchg
fdiv
inc
inc
add
jno
jbe
xor
pop
fs
mov
sub
test
xlat
jmp
jno
push
out
push
sahf
icebp
dec
jg
mov
repnz
cmp
popa
mov
out
sub
bnd
pop
lods
push
lahf
pushf
cmp
pop
arpl
dec
jns
mov
inc
xchg
in
int3
ret
jg
imul
xchg
js
outsb
add
out
sbb
jge
and
push
sti
leave
mov
and
or
xlat
fimuls
das
into
dec
sbb
and
imul
sub
cltd
shl
cmc
imul
adc
xchg
aam
jnp
mov
outsb
jo
xlat
inc
mov
icebp
jle
lret
test
xlat
add
fisubrs
mov
inc
inc
sbb
imull
lods
pop
inc
pushf
mov
outsl
push
mov
mov
mov
notl
ss
ljmp
arpl
rcll
mov
jg
jmp
enter
orl
xchg
adc
sbb
sahf
mov
loopne
aam
repz
fbstp
mov
mov
fdivs
xor
ds
aaa
cmpsb
or
mov
push
cld
sti
out
jo
adcb
jo
addb
aad
test
jmp
leave
mov
mov
cld
or
addr16
into
pushf
in
sbb
das
imul
cltd
jmp
lret
jnp
js
xchg
mov
sub
data16
xor
mov
inc
into
mov
sti
and
sti
fs
jae
mov
sbb
xchg
sbb
cmc
lods
in
int
popf
cmp
push
or
loope
jnp
lds
pop
inc
aaa
pop
fsubl
pop
out
and
mov
insb
mov
daa
daa
rclb
clc
out
cld
in
sbb
xchg
cmp
push
es
push
mov
pop
push
dec
aam
inc
aas
adc
lret
fimuls
je
mov
mov
cmp
cli
jns
jecxz
jb
test
fs
fst
jle
clc
mov
jbe
loop
pop
leave
repnz
jne
xor
pop
fadd
cli
push
insb
dec
hlt
pushf
inc
and
push
rolb
pop
xor
sbb
out
outsl
xchg
addb
fwait
mov
stc
repnz
mov
and
cmpsl
aam
roll
fisubrs
stos
divl
jns
or
aaa
sahf
fmuls
dec
adcb
push
test
out
and
imul
jp
dec
cwtl
daa
or
fld
sar
cmp
sub
cmpsb
adc
in
push
std
push
pop
add
or
ja
push
int
jnp
cmc
mov
or
jle
lea
xor
cs
ja
mov
mov
gs
adc
pop
push
push
inc
enter
into
mov
push
push
pop
sub
arpl
sbb
xchg
nop
xor
out
mov
adc
mov
adc
out
pop
and
jmp
xchg
fisubl
arpl
fxch
mov
ja
xchg
push
mov
mov
in
fisubrl
lret
xchg
in
inc
and
dec
cmp
out
ja
je
jo
sub
lret
fisubl
mov
lods
call
cmpsl
cs
aam
test
test
mov
dec
les
imul
pop
push
nop
fs
sub
mov
xchg
scas
sub
dec
adc
mov
insl
ss
flds
pushf
or
jge
add
mov
sbb
jmp
inc
hlt
or
sahf
jecxz
pop
icebp
xchg
ret
nop
xor
mov
jbe
xor
push
pop
loop
fucomi
ret
push
xor
push
ja
loopne
cmp
jnp
repnz
jecxz
sub
mov
dec
inc
mov
pop
sub
aas
popa
dec
inc
aad
es
loop
mov
inc
daa
data16
ret
rcrl
leave
xor
jnp
aad
xchg
mov
enter
data16
movsl
adc
xor
sub
sub
or
mov
and
pop
in
pop
clc
push
adc
pusha
adc
mov
dec
shrb
dec
adc
ficoms
icebp
scas
add
and
les
jo
mov
push
test
jmp
push
push
je
adc
loop
adc
movsl
cmpl
movsl
xchg
push
inc
jno
jo
inc
mov
stc
shll
pushf
bnd
mov
mov
fdiv
xorb
inc
aaa
pop
mov
lret
add
ds
repz
das
movsb
fistps
push
adc
icebp
adc
dec
sbbl
push
repz
sub
shrb
int3
js
orb
test
cmp
in
dec
ret
sahf
mov
jnp
outsb
sbb
mov
dec
out
add
add
sub
flds
gs
rcl
push
jnp
xchg
xor
iret
cmpsb
push
ja
lds
in
jecxz
and
mov
cmp
jg
xor
push
lock
push
adc
and
xchg
inc
or
out
jge
sbb
mov
enter
sub
push
stos
dec
inc
cltd
cli
iret
pushf
out
xor
cmp
dec
pop
jle
adc
jp
test
add
sahf
imul
aaa
sub
stc
xchg
jnp
repnz
pop
sub
jmp
psubsw
jmp
lret
repz
mov
enter
sbb
mov
xor
mov
push
repz
adc
mov
pop
mov
inc
and
mov
push
add
flds
int3
mov
or
mov
insl
in
out
push
xlat
arpl
mov
ret
cmpb
repz
add
sti
test
int
nop
add
add
push
pushf
lock
or
int
dec
in
jge
xchg
pop
pop
lcall
add
add
inc
dec
sbb
fs
adc
mov
push
sbb
je
mov
xchg
daa
loop
icebp
jns
mov
sbb
xlat
sbb
pop
rcrb
nop
and
jbe
sub
insb
jecxz
mov
or
mov
inc
cmp
sbb
cmpsb
mov
int
lods
add
pop
or
fwait
inc
sub
pop
test
push
ss
hlt
out
jo
je
in
push
rcr
es
inc
xor
mov
loope
xchg
xchg
mov
push
mov
mov
pop
and
inc
scas
fsubrp
add
mov
or
adc
or
es
in
push
cmp
jmp
hlt
jb
cwtl
shll
xchg
xchg
mov
mov
sbb
adc
inc
shl
sbb
inc
jg
cltd
test
repz
fistps
lock
mov
inc
filds
push
pop
mov
std
push
out
dec
int3
jl
pop
and
mov
adc
jns
jo
test
leave
and
mov
rcrl
mov
and
pop
ds
sbb
dec
into
gs
cmp
cmc
mov
mov
movsb
or
push
xchg
lea
jl
dec
sbb
pop
addr16
in
inc
test
adc
outsb
jg
mov
gs
ljmp
daa
mov
test
in
loop
xchg
inc
or
or
mov
fsub
inc
adc
jg,pt
add
repnz
shr
out
jns
and
mov
fcoms
xchg
mov
mov
outsl
repz
data16
sahf
cmpsl
mov
add
sbb
test
repnz
or
aam
fsubp
das
insb
dec
mov
int
jg
lds
mov
fnstenv
mov
mov
mov
aas
mov
pop
push
test
sbb
add
icebp
add
add
add
repz
sub
jns
lock
cli
mov
int3
push
dec
insb
mov
jne
mov
push
xchg
inc
scas
mov
xchg
mov
leave
jns
and
pusha
dec
fs
mov
leave
aaa
iret
lods
add
outsl
push
insb
loop
cmp
mov
dec
pop
push
push
daa
int3
or
sbb
adc
and
dec
in
outsb
ljmp
jb
test
mov
in
dec
daa
xor
jnp
outsl
jmp
adc
mov
push
mov
lret
enter
lret
push
fwait
ljmp
sub
adc
jg
movsb
idiv
int3
or
cmpl
insb
out
negb
or
cli
mov
xchg
sbb
out
inc
fisubrs
or
das
push
mov
lods
add
adc
cmp
cltd
dec
test
jmp
out
test
outsb
jecxz
fldl
outsl
outsl
std
cmpsb
mov
add
fildll
clc
repz
arpl
mov
mov
in
or
aad
das
inc
testb
sbb
xchg
dec
sub
rcrb
loopne
push
pop
gs
insl
push
or
sub
dec
mov
call
dec
sub
std
int3
fildl
cmc
cmp
mov
jmp
add
dec
mov
jmp
mov
sub
mov
pop
icebp
aad
push
ja
sti
xchg
or
les
xor
pop
aam
movsl
mov
sub
inc
invd
mov
pop
adc
mov
daa
cmc
sbb
cmp
sbb
fadd
lods
sbb
pusha
mov
mov
andb
mov
xchg
stos
or
std
mov
popf
jmp
add
push
xchg
incl
xchg
cs
jno
sub
pop
xchg
inc
and
lret
mov
imul
sub
sti
cmpsb
fdivrp
push
xor
loope
xchg
daa
aad
loopne
dec
in
adc
pop
lret
inc
mov
loope
mov
xor
adc
mov
ret
push
mov
popa
in
or
iret
out
cli
mov
aam
out
mov
ret
mov
inc
jecxz
adc
stos
lds
jge
xor
ljmp
cmp
iret
fnstenv
mov
icebp
cltd
lock
in
adc
popa
or
and
or
call
outsb
out
inc
enter
sbb
cmpsl
repz
aas
pop
jp
fdivrs
cmp
mov
insl
pusha
cmp
xor
sub
jle
xchg
dec
sub
mov
in
lock
jmp
pop
int3
sahf
lds
xor
sub
test
mov
imul
and
push
cmp
jne
out
jg
lcall
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
aas
imul
hlt
push
or
stc
dec
shlb
lea
nop
jle
push
or
std
dec
shlb
xor
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
insl
mov
sub
mov
fs
stc
mov
and
lcall
test
and
push
outsb
mov
sub
out
pop
pop
sub
jg
lcall
dec
shlb
mov
ds
dec
lock
inc
sbb
js
cmc
lret
icebp
lcall
leave
add
scas
xor
push
sub
cld
or
inc
jge
lret
loopne
fiaddl
pop
push
lock
inc
sbb
js
imul
cmp
ljmp
enter
mov
add
fmul
je
adc
ds
or
std
dec
shlb
jb
aad
negl
or
out
adc
jb
nop
notl
or
jae
nop
sbb
inc
dec
shlb
jb
cmpl
dec
shlb
jb
nop
xchg
push
sbb
std
dec
ret
ja
xchg
notl
or
dec
shll
jb
nop
cmpsl
pop
or
stc
dec
shlb
ja
xchg
not
or
in
dec
shlb
jb
nop
notl
or
dec
shlb
bound
nop
notl
or
dec
shlb
dec
cmp
or
or
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
mov
or
dec
rol
jb
add
push
fisttpll
and
mov
dec
shlb
jb
jo
test
jnp
std
dec
shlb
jb
nop
ss
push
or
dec
sar
jb
nop
notl
or
dec
shlb
push
xor
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
shlb
jb
nop
notl
or
dec
scas
mov
push
nop
out
or
pop
xchg
mov
mov
sbb
sbb
cmpsb
push
shrl
and
cmp
out
inc
aad
or
or
jmp
cwtl
mov
push
or
pop
out
fucomp
iret
xlat
out
pop
je
andb
mov
xchg
jb
arpl
fdivrl
and
inc
out
ret
jns
enter
ficoms
daa
test
sbb
into
jnp
pop
dec
int3
push
popa
inc
pop
out
mov
mov
mov
adcb
mov
cwtl
mov
ljmp
ljmp
gs
ret
push
inc
in
adc
sub
sbb
push
or
enter
sbb
jge
int
insb
js
popl
sbb
mov
jbe
cli
inc
jnp
add
add
cmp
lods
inc
das
imul
jnp
pop
shl
mov
fdivrs
push
xor
lods
push
adc
dec
cld
mov
and
push
sub
cmc
push
testl
daa
or
push
inc
or
mov
push
mov
aam
pop
dec
aaa
pop
stc
jle
mov
cmpl
pop
push
lcall
repnz
imul
mov
mov
xchg
ja
fstps
xchg
or
xchg
or
push
sarl
dec
es
mov
cmp
pusha
inc
push
dec
cmp
xchg
dec
and
sub
cmp
mov
xchg
out
mov
in
push
xchg
dec
dec
push
add
mov
mov
cmp
ss
sbb
inc
pop
xchg
inc
cwtl
pop
and
sbb
rcll
mov
enter
mov
or
jp
ss
ljmp
cmp
inc
xor
loopne
imul
mov
je
call
mov
gs
sub
mov
ja
push
jb
jle
xor
movsb
adc
push
sbb
or
cmp
push
addb
stos
imul
aam
adc
out
pop
sub
test
scas
add
out
inc
mov
mov
mov
cmp
cwtl
fadd
inc
jp
out
std
divb
mov
mov
test
lods
call
push
daa
ja
jp
nop
jnp
cli
jle
out
ret
lcall
pop
test
add
xchg
jmp
push
mov
xchg
xchg
push
sbb
mov
fisttps
mov
cmc
aad
mov
mov
in
test
movsb
sbb
in
jg
cmpsb
enter
out
and
rorl
aam
je
jae
mov
mov
sbbb
pop
aaa
jl
pop
das
adc
sbb
dec
loopne
cltd
aad
pusha
leave
cmp
ja,pt
es
enter
js
pop
sub
jge
jge
jp
shr
icebp
imul
dec
iret
loopne
inc
iret
nop
mov
dec
cwtl
sbb
dec
dec
jo
cvtpi2ps
mov
jg
ss
lahf
or
sbb
mov
sbb
stos
xchg
test
rolb
sbb
sti
sbb
jnp
sub
sub
dec
dec
in
pop
jnp
sub
in
mov
inc
data16
sbb
les
les
ljmp
jae
sub
mov
inc
rcr
pmaxsw
leave
ja
popa
sub
rcll
dec
mov
sub
lret
lods
sbb
fisubrs
dec
adc
push
out
mov
stos
lahf
cli
ficoms
in
stos
push
xchg
popf
int3
and
mov
movsb
xorb
add
pop
dec
enter
push
loop
cld
popa
adc
cwtl
stos
pop
mov
pop
adc
jne
lret
ret
jmp
dec
sbb
push
sub
pusha
xchg
sub
fidivrl
ret
push
stc
daa
mov
movsl
pop
outsb
scas
pop
dec
or
pushf
dec
imul
fistl
inc
mov
inc
stos
das
ljmp
xorl
xor
repnz
mov
mov
repnz
in
inc
pop
in
adc
imul
mov
mov
addb
in
fisubrs
shlb
out
out
hlt
stos
xor
xor
cmpsl
cmp
insl
cmp
mov
push
clc
push
dec
testl
icebp
std
outsl
dec
mov
mov
loope
sub
ret
add
fsts
fs
gs
sub
pop
jecxz
cmp
jo
dec
pushf
add
cmp
imul
mov
pop
add
inc
jno
in
mov
cltd
mov
repnz
popa
sbbl
outsl
xchg
ss
xor
mov
cwtl
mov
int3
addr16
jecxz
mov
ja
xor
adc
dec
in
pop
bound
sahf
movsb
mov
jmp
mov
outsl
push
lret
lret
or
andl
push
adc
mov
add
push
jbe
jmp
mov
pop
push
mov
pop
jo
push
loop
xor
es
add
jp
int3
or
cmp
push
arpl
xlat
adc
mov
xchg
lods
repz
mov
mov
or
sbb
fadd
cmc
cmp
popf
jmp
jl
jae
aad
inc
leave
fs
cmp
pop
pop
adc
insl
inc
addl
cld
mov
jecxz
pusha
xchg
dec
inc
js
mov
fcompl
loop
je
or
dec
inc
jns
in
in
push
int
not
pop
and
or
jp
ds
jecxz
shlb
sbb
xlat
fs
cmp
mov
call
mov
enter
fcoml
fwait
loopne
inc
push
mov
cmp
jae
lret
adc
gs
push
or
stos
les
adc
sbb
imul
test
stos
mov
test
test
movsl
ja
rclb
shr
fimuls
stos
popf
out
lret
pop
and
pusha
dec
sub
or
ret
rolb
cltd
aad
in
mov
jmp
mov
test
ret
iret
ret
lahf
inc
sahf
fisubrs
js
stos
in
gs
lcall
adc
leave
xchg
pusha
jge
cltd
xor
xchg
out
and
jge
fwait
adc
ds
inc
adc
icebp
inc
rorl
and
repz
push
xor
xchg
xor
xor
ljmp
enter
aad
xor
ljmp
in
sub
jne
movsb
popa
push
xor
xor
outsl
cmp
dec
jge
addb
add
pop
sbb
rcl
cmc
pop
cmp
test
push
ret
imul
aam
sarb
and
xchg
roll
jb
ds
mov
data16
jbe
mov
outsb
sbb
adc
mov
mov
out
insb
fistpl
xchg
mov
push
mov
addr16
mov
call
jns
mov
sub
xchg
orb
outsl
pop
xchg
inc
sbbb
pop
scas
mov
rcr
mov
push
int
adc
and
adc
jle
mov
sbb
cmpsb
and
fistpll
or
xor
sub
jnp
sbb
ss
subb
loop
mov
mov
xchg
add
dec
xchg
pop
cwtl
mov
jg
jns
stos
sbb
sahf
pop
push
lcall
inc
ret
push
or
sub
sub
push
lcall
int3
test
pop
je
mov
cmc
mov
mov
out
pop
jl
call
aas
loop
mov
pop
jmp
xchg
adc
scas
add
sti
adc
xchg
arpl
loope
std
aaa
inc
mov
pop
dec
rcrl
ret
push
es
fs
icebp
lods
sub
mov
pop
mov
das
add
idivb
mov
inc
addr16
jne
aaa
arpl
sahf
pusha
pushl
mov
adcb
sub
fstps
mov
leave
movsb
mov
jno
cmp
mov
mov
subl
push
and
or
inc
xchg
lahf
fists
pop
rclb
test
pop
jmp
outsb
loop
sub
cltd
sub
int3
subl
mov
xor
jecxz
sbb
mov
add
or
fdivs
imul
aaa
in
push
les
xchg
pushf
push
aam
pop
negl
mov
test
push
jnp
shll
sub
ja,pt
jge
fsubs
lods
xchg
loopne
call
add
cmp
vcvtsd2si
pop
adc
jnp
jge
cwtl
jae
fidivrs
xor
mov
orl
xor
push
lods
pop
sub
aas
dec
outsb
push
jmp
adc
sub
xorb
lcall
lods
jnp
dec
xchg
arpl
aad
je
add
mov
into
fidivl
popf
movsb
cwtl
cmp
mov
jne
jp
mov
imulb
push
jae
add
push
mov
xchg
arpl
cwtl
nop
imul
add
and
loopne
sub
cwtl
lahf
mov
cmpsb
aaa
ljmp
xor
pop
inc
in
cmp
aaa
adc
add
cmp
add
sub
push
mov
jb
mov
xor
mov
hlt
scas
psraw
fcoml
mov
repnz
hlt
adc
push
mov
or
hlt
int
fcmove
insb
jno
dec
inc
repz
lds
add
cmp
andl
adc
xchg
imul
xor
outsb
loopne
out
aas
inc
mov
pop
mov
sub
lods
push
ret
hlt
mov
dec
xor
mov
enter
cmpsb
shr
pop
hlt
mov
mov
jne
arpl
pop
repnz
rcrl
inc
jge
ss
inc
or
repnz
pop
add
xchg
and
cltd
inc
jp
scas
jmp
inc
cmp
loop
cmpsb
jg
test
xor
leave
cltd
ret
imul
and
lock
xchg
popa
repz
inc
xor
scas
movsl
fsubr
test
or
rcr
lods
xlat
punpckhdq
repz
int3
iret
les
sbb
divb
xchg
push
push
les
cld
gs
mov
not
in
mov
add
and
mov
xchg
inc
add
cmp
adc
sbb
ljmp
into
testb
pop
mov
push
popf
dec
xor
mov
jl
adc
iret
mov
aas
sbb
cwtl
inc
dec
or
and
cmpsl
cmp
shlb
cmp
test
push
mov
xor
sti
adc
ficoml
inc
scas
mov
adc
cmp
mov
cs
out
xchg
fwait
ss
lret
jl
lea
mov
aaa
nop
cmp
jle
test
or
or
sbb
xor
and
fwait
or
xor
mov
jecxz
pop
sbb
inc
pop
sub
cmc
inc
jmp
and
test
sub
mov
stos
mov
cmp
push
xchg
pop
aad
adc
pushf
pop
pop
mov
push
cld
sbb
add
push
xor
mov
aas
les
xchg
into
arpl
and
jns
je
dec
leave
mov
fsubl
scas
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
inc
inc
add
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
inc
inc
add
inc
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
inc
inc
add
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
push
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cld
push
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pushf
imul
lods
imul
mov
imul
fildll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
imul
adc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
