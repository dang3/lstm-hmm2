add
jbe
stos
fwait
push
cli
push
shlb
lock
fsubl
dec
sbb
or
ret
outsb
inc
in
mov
lds
mov
or
fnsave
enter
xor
fwait
jp
push
sub
cmp
inc
push
mov
xlat
mov
arpl
fcompl
add
in
int3
shl
xor
jno
loop
dec
cmp
add
inc
xchg
loope
dec
fadds
mov
or
in
cs
xchg
mov
sbb
aaa
inc
push
rolb
push
mov
push
stc
add
fwait
adc
dec
mov
dec
jle
dec
xchg
jb
jle
clc
push
add
ficoms
ror
jno
ja
in
xchg
cmpsb
in
stc
cwtl
insb
das
icebp
sbb
add
cmp
pop
mov
sub
lock
sub
aaa
sub
fst
stos
pusha
fmuls
imul
imul
pop
ret
xor
inc
hlt
cmc
jae
test
cld
and
sub
mov
ret
jle
sub
mov
push
ds
adc
adc
mov
fidivrl
sub
cmp
subb
mov
fmull
xchg
bound
out
push
out
inc
scas
insb
imulb
pop
sbb
xor
fstpl
and
jo
mov
xchg
insb
cmp
jns
or
cmp
mov
and
sub
add
fldt
out
push
add
jmp
ljmp
shrb
xchg
adc
fdivl
inc
add
ja
jno
imul
xchg
es
jno
pop
fadds
jmp
push
pop
aaa
stos
dec
cld
mov
fidivrl
cmpsl
or
fs
mov
test
cmp
in
ficompl
in
mov
add
dec
es
and
in
mov
cmp
lahf
xorl
pushf
sub
stos
ficomps
shlb
cli
out
stos
imul
xchg
neg
cwtl
mov
push
sbb
and
aad
push
in
clc
adc
mov
jl
repz
in
push
lods
pop
gs
lcall
xor
cmp
add
sti
test
push
and
mov
mov
cmpsb
pop
mov
icebp
mov
mov
mov
das
and
and
shlb
dec
insl
cmpsl
mov
imul
adc
mov
int
repnz
addb
pop
imull
push
mov
ret
xor
out
cmp
loopne
or
shll
loopw
sub
jbe
inc
push
and
fwait
test
jg
mov
lds
lahf
jg
test
xchg
rorl
das
adc
loopne
sub
sub
xor
cmp
xchg
mov
push
dec
inc
aad
mov
decb
call
popa
mov
adc
lret
out
mov
push
dec
xor
adc
adc
and
lcall
insl
lret
sbb
in
call
into
outsl
ds
outsb
sub
aam
repz
jge
cli
fwait
inc
ret
jmp
scas
les
pop
xor
jb
mov
dec
mov
test
jmp
cmp
xchg
xor
pop
mov
dec
mov
and
push
in
mov
push
gs
cmp
test
clc
adc
std
imul
mov
mov
inc
xor
add
fs
stc
lcall
gs
cmp
inc
sbb
and
inc
in
mov
loop
ret
dec
sbb
nop
js
cmp
push
ffreep
jno
cwtl
xor
inc
call
rcr
or
lods
adc
das
xor
bound
int
imul
lock
test
test
ror
inc
pop
mov
rorb
sub
ret
std
iret
cmp
dec
sbb
mov
pop
mov
movsl
inc
dec
les
mov
hlt
lock
dec
into
mov
scas
jg
cwtl
xor
call
sub
fst
adc
sub
jo
cwtl
sub
lcall
insl
or
pop
loope
js
mov
shrb
fsts
sub
sarb
add
mov
jl
pop
scas
mov
repnz
bswap
pop
sub
inc
enter
int
xchg
cmp
and
std
or
xchg
mov
mov
pop
or
inc
mov
std
leave
push
movsl
cmpsb
fs
jo
cmpl
pop
adc
loop
cld
addr16
bound
adc
pusha
and
cwtl
call
inc
cmpsb
loopne
cmp
or
lods
dec
int3
dec
xchg
xlat
pop
pusha
add
arpl
fcoml
pushf
xchg
mov
mov
mov
repz
ja
aad
dec
lods
dec
test
int
pop
int3
aas
xchg
and
mov
pusha
in
lock
mov
push
xor
icebp
imul
mov
hlt
in
aad
orb
repnz
adc
inc
in
inc
movsb
dec
and
js
mov
xacquire
repnz
sahf
or
push
mov
dec
fsubl
adc
mov
push
sub
das
sbb
out
repz
xor
rclb
add
push
jg
call
stos
inc
cmp
jl
mov
jg
daa
scas
push
xchg
fs
out
pop
insb
push
dec
push
mov
jbe
cwtl
scas
push
xchg
jge
add
and
stos
cli
jle
cmp
adc
imul
fadd
adc
in
jbe
cmpsl
out
fstps
inc
clc
ja
cli
lods
loop
cmpsl
dec
inc
pushf
or
out
jae
lods
jle
mov
daa
dec
decb
fsubs
sub
adc
xor
pop
cmp
sbb
in
out
daa
sub
loop
test
movsl
lods
outsl
in
pop
fwait
inc
and
xor
mov
xchg
arpl
inc
or
mov
mov
jl
lock
sbbl
test
or
outsb
xchg
enter
fmulp
dec
add
push
rcrl
lods
push
mov
arpl
cmp
pushf
xor
push
sbb
push
xor
fisubl
cmp
aas
dec
subl
clc
sub
cmpsl
pop
lods
push
and
xor
lret
rorl
xor
jecxz
fadd
adc
rorl
ret
jp
shll
mov
inc
insb
push
xchg
pop
fisttpll
push
jo
cmp
xor
sub
mov
pop
stc
jnp
fmul
lret
push
xchg
jnp
in
pop
or
pushf
push
in
cmp
mov
lcall
cwtl
ss
out
or
scas
outsb
int
xchg
mov
cmp
and
iret
push
pop
inc
sti
ficomps
xor
pop
and
xor
add
jb
call
insb
mov
in
push
xrelease
mov
mov
jbe
xor
fdiv
scas
pop
jno
ja
testb
push
shll
push
mov
testb
mov
xchg
hlt
sub
shrb
pop
in
xchg
sbb
pop
and
inc
pop
cli
cmp
pop
ljmp
sbb
add
popa
xor
pushf
ret
and
push
lea
pop
dec
xchg
les
mov
jns
push
imul
xor
xchg
xor
pop
out
mov
dec
shl
movsb
xchg
popf
ja
subl
pop
mov
dec
inc
inc
insb
sub
into
data16
addr16
xchg
mov
outsb
dec
out
add
xor
fld
stos
or
mov
xchg
sub
add
pop
xchg
sbbl
cmp
icebp
mov
pusha
sti
frndint
das
test
and
jo
or
pop
xchg
rclb
cmp
rcrl
mov
ja
xor
sub
stos
ret
adcb
sub
mov
cwtl
movsb
jg
inc
ja
rcrb
mov
sbb
sti
fildll
fcomi
add
jbe
and
mov
adcb
pop
push
clc
lcall
mov
sahf
adc
cmp
add
test
mov
or
add
mov
aad
in
ficompl
mov
xor
aas
jb
or
or
adc
mov
sub
out
int3
in
jbe
jg
ror
imul
xor
dec
test
mov
mov
sub
sub
add
clc
pop
adc
scas
adc
sbb
ror
sub
xchg
iret
dec
jnp
das
dec
lods
jp
subl
ds
rorb
mov
lea
push
bound
dec
aam
mov
dec
add
push
cld
lcall
sti
or
xor
sbb
loope
mov
out
adcb
pop
out
leave
jge
mov
jecxz
dec
jbe
dec
out
imul
sahf
mov
inc
jne
inc
mov
mov
dec
sub
mov
dec
push
icebp
out
insb
cmpb
orl
inc
cltd
out
loop
mov
out
ds
ret
inc
lret
dec
test
mov
sub
xchg
mov
jns
aad
sarb
add
mov
test
inc
jnp
icebp
movsl
or
ret
out
aas
faddl
lcall
fcom
pandn
mov
adc
sub
clc
cmpsb
mov
pop
lret
bound
mov
sub
addr16
pop
xchg
outsb
jge
xchg
push
mov
xchg
pusha
aad
je
leave
mov
inc
push
out
sub
je
loop
pop
daa
sti
or
and
xchg
mov
scas
or
pop
inc
pop
aas
aaa
outsb
mov
std
sbb
xchg
enter
loope
test
loope
pop
and
push
sbb
mov
dec
cmc
enter
shl
lcall
jae
cmp
and
dec
sub
inc
pop
and
mov
ret
loopne
add
scas
cmp
outsl
repnz
sbb
dec
sahf
push
xor
test
xchg
mov
xor
jp
push
vmovd
mov
pushf
imull
mov
imull
bswap
cmp
mov
in
add
inc
lcall
mov
push
jbe
mov
inc
and
loopne
lods
mov
sahf
js
andl
sub
cmp
inc
mov
lods
adc
ret
loopne
mov
mov
fisttpl
shll
mov
push
mov
lea
mov
mov
mov
pop
out
aam
xchg
cmp
push
mov
jecxz
cmp
js,pt
mov
push
pop
insl
into
lcall
aad
adc
sbb
lahf
pop
sbbb
cmp
push
aas
daa
scas
adc
mov
xchg
dec
jo
mov
int
xchg
mov
inc
sub
xchg
movb
or
xor
jmp
inc
mov
mov
cs
scas
test
arpl
jo
fisubrl
sbb
out
mov
add
dec
jne
sti
xchg
inc
xchg
add
add
shl
sbb
push
and
test
sbb
dec
sub
push
out
repz
xchg
loope
addb
addr16
push
or
push
insb
mov
shrb
sub
out
sub
lret
daa
int
lea
sub
ds
xchg
stos
stos
fs
fwait
lock
mov
dec
mov
in
fsubp
dec
dec
rcrb
dec
gs
push
test
dec
mov
pop
jmp
fsubl
outsl
push
jne
iret
cmp
mov
mov
je
cmc
add
mov
in
xlat
xchg
leave
xchg
ficoml
call
scas
int3
xchg
mov
sbb
into
test
push
ret
ljmp
ret
jp
inc
mov
or
aas
gs
push
cld
xchg
mov
dec
mov
das
daa
hlt
lea
cmp
push
icebp
cmp
lods
and
shlb
inc
addr16
xchg
sub
mov
sahf
pop
sti
ljmp
mov
pop
movsb
jae
xchg
cld
mov
cmp
mov
jg
push
outsl
inc
adc
push
dec
cmp
cmc
jne
mov
outsb
pop
cmp
sub
lods
mov
orl
iret
adc
mov
jmp
fbld
mov
fwait
cmp
pop
bswap
push
in
cld
xchg
xchg
mov
xchg
and
jmp
adc
mov
stos
and
xorl
dec
mov
gs
and
rcrl
adc
sub
in
popa
int
dec
sub
xchg
and
cmp
fwait
popf
idivl
xlat
xchg
sahf
add
jnp
ret
sub
leave
lahf
jb
in
and
aas
pop
push
lods
or
loope
icebp
aad
xor
shlb
dec
cmp
add
dec
or
mov
xchg
sbb
mov
xor
das
in
push
test
xor
das
ficoms
ret
in
rorb
lcall
into
xor
sub
mov
repz
jne
inc
mov
cmp
xorl
inc
jp
out
add
hlt
sbb
fmul
js
or
inc
iret
fisubrs
fdivs
aad
adc
repnz
mov
pop
test
pop
inc
pop
pop
push
dec
clc
mov
cwtl
sahf
repnz
out
xchg
test
sub
leave
js
rcr
jb
mov
leave
jp
xlat
push
inc
int
in
popa
or
jl
jmp
adc
jno
rol
leave
lods
inc
leave
fiadds
jb
mov
or
or
mov
mov
out
or
add
nop
lahf
cli
fcomps
das
bound
mov
andl
push
pop
es
mov
xchg
adc
orb
mov
shll
pop
les
pop
push
inc
scas
mov
jno
cltd
jo
pushf
sub
stos
mov
dec
push
aaa
and
xor
pop
adc
adc
mov
push
decl
bound
cmp
mov
in
adc
int
cmpsl
jmp
push
cmp
mov
mov
sub
dec
push
push
cmp
mov
idivl
icebp
or
xchg
jb
or
lret
mov
jae
lret
scas
out
xchg
sbb
loopne
cmp
or
mov
add
jo
mov
cmp
andl
sbb
cmpsb
sub
jecxz
repz
xchg
push
pop
outsb
lea
out
repnz
adc
insl
dec
pop
add
pushw
mov
mov
jp
mov
push
xchg
lret
sub
shll
dec
jecxz
popl
dec
mov
subl
xor
pop
pop
pop
mov
dec
sti
mov
loopne
pushf
inc
imul
clc
adc
in
lea
xor
mov
mov
mov
sbb
jp
inc
ret
mov
dec
sbb
mov
lret
jnp
mov
out
in
lock
out
in
imul
mov
inc
sbbl
cmp
stos
push
dec
ds
xchg
jmp
stos
bound
add
aaa
or
sar
in
cs
mov
xor
testb
fnstenv
xchg
or
jne
push
popa
repnz
inc
cmp
int
insl
add
inc
sub
ficompl
scas
cmpsl
test
jg
dec
push
mov
pop
out
mov
xchg
sar
push
pop
popa
arpl
push
xchg
out
aad
sub
movsl
test
push
sub
sbb
add
scas
loop
repz
icebp
mov
int3
push
mov
cld
push
mov
es
filds
sti
test
xor
jbe
xchg
jae
inc
nop
ljmp
push
sbbl
inc
stos
xor
test
sub
cmp
mov
or
lock
or
push
mov
negl
and
imul
loop
xorl
mov
iret
pop
xchg
mov
push
pop
pop
testl
aam
out
test
push
push
jp
jmp
mov
dec
add
fistl
incb
inc
xchg
sbb
add
jnp
out
sbb
leave
clc
sbb
movsl
lds
jno
jno
mov
pop
and
cli
cmc
sub
xor
push
lock
aam
push
ror
out
js
jbe
cmp
mov
xlat
pop
imul
mov
pop
or
adcl
mov
aas
xor
add
cs
ret
or
pop
push
arpl
mov
mov
push
and
std
jl
insb
negb
sbb
scas
dec
sahf
push
int
std
pushf
mov
mulb
hlt
imul
push
or
xchg
push
dec
lret
sbb
in
fists
pop
aam
popf
sub
adc
popa
int
mov
je
sub
inc
das
adc
cli
push
mov
lret
cmpsl
xor
sti
inc
adc
shr
pop
xchg
sbb
xor
add
inc
or
cld
xlat
sub
pop
and
push
fcompl
and
add
mov
mov
mov
out
int3
mov
adc
ss
outsl
aaa
jecxz
or
ljmp
out
xor
bound
xor
mov
mov
and
outsb
dec
out
js
lahf
aad
mov
push
sbb
mov
and
ret
sbb
pop
cmp
jnp
inc
leave
mov
xorb
testb
mov
lret
dec
jl
and
push
filds
xor
sbb
ror
ja
addr16
mov
sbb
add
cmpb
ret
inc
push
outsb
aad
pusha
arpl
mov
outsl
lock
sub
lods
rcrl
scas
jno
not
sub
sahf
jg
aam
xchg
pop
int3
xor
and
aam
cltd
mov
stc
ja
shrl
jnp
and
inc
loopne
push
ds
pop
pushf
es
shlb
arpl
jnp
xchg
inc
call
push
mov
fstl
xchg
mov
test
mov
fisubs
dec
cmpsb
add
jecxz
fbstp
or
movsl
repz
jno
and
fidivrl
shlb
cmp
movsb
inc
imul
dec
jne
daa
pop
mov
pop
jmp
and
loop
stc
mov
push
fs
dec
ret
nop
incl
inc
in
mov
push
sub
orb
jmp
lods
gs
cmp
ret
aas
enter
and
cmp
pusha
inc
sbb
sub
mov
cld
arpl
mov
hlt
mov
sub
out
xor
out
pop
jmp
fnstenv
cwtl
mov
aaa
xor
mov
or
dec
xor
add
shrb
sub
adc
pop
xchg
movsl
or
pop
sar
ret
pusha
push
cmp
ja
call
mov
or
rorl
dec
add
lods
nop
dec
stos
std
sub
pop
push
inc
adcl
fildl
aaa
sti
jecxz
mov
xchg
xchg
add
lods
cmpsl
pop
loopne
aad
cwtl
xchg
mov
outsl
add
cs
jb
sarb
loopne
sub
mov
cli
stos
dec
daa
cmp
lds
mov
jnp
mov
lahf
jae
add
aad
in
testl
daa
fninit
in
call
adc
subl
insb
cmc
adc
xor
ss
push
xor
movsb
js
loopne
enter
push
out
xor
sbb
mov
or
mov
aad
mov
inc
sub
shlb
insl
fildl
in
adc
js
outsl
inc
iret
mov
sub
dec
aam
mov
lea
pop
xchg
cmp
inc
sub
je
jbe
cwtl
mov
lock
jp
je
dec
sbb
jge
push
dec
adc
add
push
pop
adc
xor
sub
sbb
lahf
popa
mov
scas
dec
outsb
sub
mov
in
mov
push
push
lahf
aas
ljmp
inc
xchg
dec
hlt
jb
mov
xor
scas
imul
pop
js
pop
divb
leave
loopne
xchg
fs
adc
xchg
jecxz
test
cmpsb
icebp
js
clc
xor
or
loope
jle
je
cli
outsl
sbb
inc
rclb
xchg
fcompl
test
and
scas
dec
andb
adc
pusha
lcall
into
mov
add
lcall
pusha
or
inc
outsl
mov
mov
inc
bound
das
dec
inc
lret
adc
push
mov
mov
xchg
pop
push
lret
cmp
pop
dec
dec
rcll
sahf
pop
testb
insb
xchg
jb
push
mov
push
jnp
add
ficomps
inc
adc
lret
jae
and
movsb
mov
jns
jae
fprem1
or
xchg
cmpsl
ds
stos
stc
fwait
fwait
popf
jecxz
scas
jae
pop
sbb
add
aam
repz
or
data16
push
aam
les
adc
fdivrs
cmc
mov
or
les
mov
push
cmp
push
or
rolb
jmp
jnp
push
adc
in
imul
mov
add
add
pop
xlat
inc
je
and
shll
jno
mov
cltd
pop
sahf
inc
pushf
negl
shll
iretw
mov
dec
lcall
cmp
lahf
in
xor
jo
lret
test
sbb
xchg
leave
lret
ror
push
ss
movsl
das
addr16
ss
inc
ss
push
in
xchg
cltd
cmpsb
popa
je
sbb
and
test
pop
cmpsb
sbb
or
repz
mov
mov
fmul
sarl
dec
cmp
pop
in
je
adc
sbb
adc
mov
mulb
pop
push
mov
ficoml
dec
pop
testb
mov
jnp
andb
jbe
stos
pop
mov
jns
pop
arpl
shlb
push
in
inc
notl
test
into
push
pop
mov
mov
sub
push
imul
mov
repz
sub
xlat
jle
test
popf
sub
das
fbld
test
or
into
push
inc
sbb
jne
outsb
cmc
xor
adc
pop
push
push
inc
scas
nop
fiaddl
xlat
lods
paddusb
test
mov
push
iret
sbbl
enter
xor
insb
push
jmp
add
xor
ja
mov
std
push
das
cmp
dec
mov
push
arpl
sti
loop
stos
mov
xor
push
dec
stos
into
out
pop
rcrb
fidivl
out
mov
push
push
jo
lahf
ds
fisttpl
rolb
xor
int3
sub
adc
jno
popa
pop
arpl
push
add
std
pop
aaa
into
mov
dec
ret
or
pop
sub
jmp
movsb
aaa
xor
fimuls
ss
fcom
pop
xor
pop
pop
adc
add
cmpsl
outsl
shlb
fstl
xorl
repz
jge
mov
enter
ret
sbb
fbstp
stos
sub
arpl
aad
cs
call
push
inc
lret
out
loope
gs
push
ret
in
inc
jecxz
push
fs
push
inc
sbb
push
jl
repnz
sbbb
sub
inc
or
push
das
xor
into
jne
pop
jb
mov
ja
int3
iret
pushf
enter
or
rcr
mov
mov
dec
aam
enter
nop
jl
and
adc
lret
adc
cwtl
jp
and
cli
test
je
ljmp
xchg
fmull
test
push
cltd
mov
jle
push
movsl
fistpll
stc
imul
add
lock
cltd
adc
mov
mov
mov
pop
imul
mov
cmp
xchg
pop
mov
dec
pop
or
add
add
pop
jge
and
add
pop
adcb
pusha
movsb
dec
pop
lock
push
movq
inc
sbb
cwtl
and
mov
jp
mov
lea
xor
add
or
mov
jnp
mov
pushf
pop
aad
inc
jmp
add
popf
pop
rorb
and
mov
mov
and
xlat
pop
add
int
and
lods
xchg
es
repz
adc
jl
sub
xor
scas
lahf
sub
mov
sub
cmpsb
mov
sbb
dec
sub
jg
or
add
jl
adc
jl
dec
lret
add
lret
in
mov
js
mov
out
cs
mov
xor
data16
push
js
xchg
enter
adc
inc
adc
inc
scas
andb
test
sbb
shll
jle
cmpl
fsubl
shll
sbb
cmp
data16
fstps
add
jns
aam
aad
insl
xchg
sbb
pop
shrb
jge
adc
push
leave
test
cli
sbb
mov
xchg
sti
sbb
out
pusha
fmulp
xor
xchg
add
icebp
and
nop
inc
push
mov
jl
out
aam
imul
sbb
adc
ss
ss
int
clc
repnz
push
sbb
and
and
mov
sahf
cmpsl
mov
xorl
out
aaa
push
ret
aaa
xlat
push
fiadds
jmp
mov
lret
xor
nop
pop
xchg
sbb
in
popf
punpckhdq
cmp
push
cltd
pusha
adc
inc
negb
and
jge
mov
xor
lahf
push
mov
mov
xchg
mov
cmp
clc
in
sbb
inc
movsl
mov
sahf
ret
cmp
lcall
mov
loopne
push
cmpsb
iret
mov
mov
pop
xchg
mov
mov
and
push
inc
loop
in
mov
lret
mov
mov
push
cmp
test
mov
dec
adc
jge
in
roll
sbb
mov
aam
fidivrl
or
pop
es
lret
negl
pop
lret
les
jnp
arpl
pop
push
sbb
mov
notb
and
or
jns
push
mov
test
sub
mov
in
into
push
xchg
push
push
arpl
sub
lret
iret
sub
jp
cmp
xchg
sub
repz
and
push
jecxz
testl
push
jmp
lahf
inc
popf
mov
sbb
shll
jecxz
add
push
mov
pop
lret
shrl
ss
adcb
xchg
int3
fisubrl
pushf
add
sar
lahf
cltd
jae
lret
mov
dec
out
jo
aaa
mov
mov
add
mov
ficomps
cmc
mov
mov
dec
in
adc
test
sbbb
repz
arpl
fnsave
cld
push
fistpll
adc
cmp
sbb
loop
or
movsb
dec
test
out
jbe
mov
mov
imul
mov
daa
dec
adc
pop
in
push
into
cmpsb
sub
xor
mov
test
out
addr16
test
mov
cmpsb
in
push
mov
addr16
aam
mov
shlb
mov
sbb
sbb
pop
orb
lretw
test
inc
shlb
adc
int3
arpl
sbb
xor
mov
ljmp
jae
lock
mov
and
sub
adc
addr16
xlat
push
dec
cld
inc
push
sub
sahf
mov
xchg
mov
or
dec
gs
xchg
int3
incb
jl
es
xor
jg
sarl
mov
scas
fs
inc
repz
das
pop
ljmp
sbb
mov
pop
loop
lds
ffree
lret
push
lds
sbb
xchg
icebp
test
rol
xchg
das
in
stos
sub
adc
in
mov
xor
popf
jp
jmp
cmp
leave
jmp
mov
sbb
hlt
fldenv
push
sarb
fistpll
jae
mov
into
daa
push
lret
push
add
sbb
lret
inc
xchg
cmc
mov
fldenv
jl
xchg
jmp
pop
pushf
push
aas
ds
mov
mul
sbb
movsb
adc
sub
pop
int
or
mov
mov
in
mov
fmuls
jmp
pop
clc
cmp
movl
ja
jo
jo
test
sbb
add
popf
das
sbb
outsl
mov
aad
shrl
inc
mul
xlat
in
cmp
and
add
pop
xor
dec
jne
int
sbb
push
scas
addr16
inc
pop
push
lock
pop
fsubl
ljmp
mov
mov
dec
imul
addb
std
add
lods
lret
sub
xor
xchg
enter
xchg
cmpsl
adc
mov
inc
addr16
sub
das
enter
aad
out
adc
fldl
mov
push
scas
pop
inc
cmp
jb
insb
xlat
jae
sub
popf
or
rcll
shll
dec
cltd
jle
outsl
cs
fistpll
xor
popf
rorl
cmpsl
test
push
xlat
mov
movsb
jbe
cli
fs
xor
inc
std
mov
jle
inc
lret
adc
fldl
jmp
adc
into
sub
xorb
les
sbb
mov
sub
xchg
rorb
movb
lcall
out
push
add
mov
in
imul
das
inc
movsb
push
sarl
jmp
push
pop
pop
jns
pop
ficoml
jns
in
int3
mov
call
test
add
xchg
sti
fisttpl
mov
lods
pusha
pop
gs
das
sarb
lock
mov
into
shl
inc
mov
scas
add
inc
imul
outsb
insl
mov
xor
jp
and
and
icebp
jl
data16
jecxz
xchg
call
jns
lcall
pop
in
outsb
in
dec
lea
dec
fadds
cltd
mov
xchg
lock
jnp
cs
jmp
aad
xor
push
push
inc
pusha
int
pop
jo
mov
sbb
mov
nop
pop
test
ljmp
popf
les
lods
repnz
cwtl
ss
clc
xor
stos
mov
test
je
push
pop
lds
orl
imul
pop
inc
xchg
scas
int
rclb
ljmp
cld
xor
mov
pop
movsl
and
fisubrs
nop
ret
sub
std
sub
mov
push
rcrb
icebp
ret
jmp
call
enter
mov
inc
xchg
mov
sbb
notb
adcl
roll
mov
lret
push
hlt
jns
repnz
test
adc
mov
pop
adc
dec
addr16
or
cwtl
repnz
mov
into
inc
inc
mov
clc
or
jle
outsb
cwtl
dec
push
ret
cmpsb
dec
inc
mov
ret
cs
in
adc
enter
lret
cli
sbb
xchg
sub
js
cmc
xor
or
loope
push
adc
mov
pop
cmp
out
aad
xlat
roll
push
mov
jno
in
out
int3
and
lahf
sub
jb
mov
push
ja
inc
mov
sbb
icebp
sbb
inc
sub
sbb
loopne
sti
jmp
fldt
jo
js
push
or
lret
add
sub
xor
xchg
insl
pop
out
dec
mov
sar
insl
mov
mov
mov
add
sahf
pop
xchg
jae
shlb
xlat
jno
xchg
add
fnstsw
inc
mov
ljmp
aam
push
mov
inc
xor
fdivrp
in
mov
in
or
leave
rclb
int3
in
xor
into
ja
push
test
movsl
or
leave
sti
out
fdivs
cmp
out
out
xor
cli
cmpl
cli
jno
test
negl
das
inc
je
or
aam
push
cmp
leave
out
inc
shlb
push
je
jp
jns
mov
jno
jmp
adc
and
cmp
pop
dec
sbb
scas
push
pop
lret
mov
sbb
jl
lds
arpl
lretw
test
add
test
cmpsb
mov
add
dec
loop
mov
ret
movsb
imull
mov
or
push
push
mov
ret
jns,pt
add
out
push
outsl
cmp
mov
adc
ret
test
cmpl
in
dec
movsb
repz
fcoms
mov
or
and
push
sar
fnstsw
sbb
stos
lds
adc
inc
or
addl
test
jbe
mov
cmp
sti
mov
push
addb
data16
shrb
inc
fiadds
push
jp
mov
jns
std
inc
xchg
mov
pop
outsb
jns
adc
adc
sbb
pop
mov
out
in
data16
in
hlt
int
xchg
pusha
loopnew
aaa
dec
or
xchg
inc
int
daa
jle
xorb
sbb
add
cmp
rcll
out
mov
jle
dec
cmc
sub
jl
mov
stc
jns
rep
lcall
xchg
xlat
dec
cwtl
fmull
sbb
push
sti
in
mov
fbstp
inc
hlt
and
or
ljmp
inc
pop
pop
add
xchg
aam
push
xchg
lahf
test
movsl
jecxz
mov
mov
push
xchg
cmp
dec
in
das
sbb
in
inc
dec
shrl
adc
sub
dec
fstpt
sub
sub
pop
jb
push
fistps
shrb
push
mov
shrl
je
push
cmp
aam
mov
daa
mov
cmpsb
lahf
lret
jge
jns
aas
push
pop
insl
inc
dec
test
fcmovnb
push
add
lods
mov
popf
cwtl
pop
push
js
push
gs
mov
dec
pusha
jb
les
mov
pop
xchg
sub
pushf
mov
or
push
and
aas
lods
data16
or
pop
out
jge
dec
sbb
xchg
aaa
subl
data16
and
or
xchg
pop
xor
bound
daa
push
and
fwait
inc
mov
xor
lret
pop
std
loope
adc
popf
pop
js
in
xchg
inc
and
sbb
bound
fisubrl
lods
xchg
incl
mov
mov
dec
xlat
mov
inc
jne
xchg
jo
leave
adc
lds
fists
mov
leave
sahf
jmp
mov
mov
jb
je
add
mov
addr16
add
xor
sarl
cwtl
cmp
fidivs
stc
hlt
insb
xchg
xor
movsl
scas
push
jno
in
call
push
inc
adc
pop
push
rorw
subl
and
sub
xchg
inc
repz
xchg
test
inc
xchg
and
sub
push
xor
and
sub
pop
mov
stos
cmc
test
scas
jle
push
add
pop
pop
mov
addl
mov
mov
into
xor
scas
mov
cmp
notb
ror
or
nop
les
stos
and
mov
aas
mov
add
mov
mov
or
sar
mov
aam
push
push
fwait
outsb
ljmp
int3
or
adc
in
mov
pop
xchg
fsts
aam
mov
fisubs
mov
cmc
fsub
adc
inc
in
psadbw
das
rorl
clc
cli
imul
inc
cmpsb
ds
jle
sbbb
mov
jno
adc
fdivs
xor
dec
mov
push
scas
popa
daa
adc
push
sbb
add
rolb
pop
mov
xchg
lock
jmp
mov
mov
inc
mov
jb
aad
inc
xor
jmp
pop
jp
lods
jecxz
jle
adc
push
pop
cmp
aad
dec
fisubs
or
push
jp
adc
and
push
enter
test
rcrl
dec
fisttpl
out
pop
mov
sahf
xor
pop
or
daa
shlb
inc
cmpsl
add
mov
xchg
sub
loopne
sub
push
push
jbe
xchg
sub
icebp
jnp
stos
fldt
xchg
dec
cmc
popf
jle
lods
mov
fidivs
loopne
mov
int
jmp
adc
js
jns
hlt
add
scas
mov
decb
aas
sbb
xchg
cmp
in
xchg
cmp
out
ds
test
inc
push
ficoms
jnp
in
inc
mov
cmpsb
out
pushf
fbld
mov
mov
or
out
cld
mov
popf
ficoml
pop
test
jns
push
sti
pop
movsl
lea
xchg
outsl
jno
lcall
pop
lods
cmpsl
and
int
add
sbb
jle
mov
inc
aas
dec
sbb
rcl
fsubrl
push
gs
mov
xor
leave
sti
scas
mov
jmp
in
pop
xchg
cmp
push
fs
adc
xor
punpckhdq
pop
shr
jle
mov
jg
mov
addl
sti
dec
and
sti
cwtl
jb
sbb
mov
insb
stos
clc
andl
jno
mov
pusha
pop
aaa
imul
jg
dec
dec
lods
bound
sbb
cld
ret
xchg
imul
dec
scas
rcll
push
lods
sahf
fwait
jg
jnp
fincstp
push
inc
ds
bound
or
addr16
fcomps
pop
mov
and
cmp
xor
xchg
ljmp
fsubs
subb
jnp
jbe
push
mov
push
adc
dec
int
test
data16
pop
sbb
les
xchg
inc
cmp
and
sbb
repnz
sub
jle
jno
inc
adcl
jg
std
dec
xchg
pop
dec
or
lahf
mov
es
mov
hlt
idivl
push
push
test
sbbb
mov
clc
outsb
jns
fdivp
dec
dec
leave
stos
ret
dec
jecxz
inc
idivl
dec
out
js
add
daa
popa
pop
mov
adc
loop
imul
jge
out
sbb
push
cmp
dec
decb
and
fdivrl
mov
lret
stos
add
or
dec
sbb
fwait
notb
push
loopne
or
or
sahf
mov
lds
inc
add
rorb
fmull
xchg
je
push
fidivl
push
cmp
jp
inc
push
int
loop
pop
adc
loop
loope
pop
shlb
adcl
subl
xlat
stc
cltd
pop
or
bound
mov
inc
idiv
xchg
push
fimull
inc
mov
pop
into
test
add
sub
incb
mov
imul
in
mov
mov
ljmp
cli
mov
xchg
arpl
xor
and
or
daa
mov
sub
cmpsl
jg
int3
adc
divb
cmp
and
lods
and
mull
lea
hlt
pop
mov
rcll
xor
cli
pop
out
adc
rclb
sbb
ds
mov
outsl
orl
mov
ss
push
movsl
jg
std
add
sub
push
aam
in
push
mov
jl
and
cmp
fldenv
sub
sbb
mov
cld
jl
sub
mov
shlb
outsb
aaa
inc
incb
ja
std
jl
call
cmp
mov
push
sub
sbbb
sub
in
adc
addr16
repz
pop
rclb
bound
test
cmp
jp
mov
mov
scas
or
movsl
add
pop
mov
xor
call
inc
dec
fsubrl
xor
dec
mov
rcrb
in
repnz
je
lods
and
lret
pop
mov
cmpsb
add
std
and
aam
out
add
aad
jg
pop
xchg
mov
inc
js
pop
and
jo
arpl
shlb
outsb
mov
out
das
and
mov
and
divb
sbb
mov
test
imul
or
loop
popf
stos
fstpt
cltd
push
int3
test
aaa
push
or
dec
jno
xchg
std
ret
mul
mov
sbb
add
imul
ds
mov
imul
je
out
mov
pop
rcr
push
shll
sbb
jmp
lea
add
dec
repnz
and
out
xchg
mov
movsb
add
sarl
mov
shll
or
sbbl
lcall
fildll
or
iret
in
or
popf
shrl
mov
dec
mov
loopne
sub
orl
mov
xlat
mov
std
pop
dec
in
popf
pop
ret
out
xchg
pop
push
push
call
sbb
leave
add
sub
cmpl
sub
inc
inc
mov
adc
inc
adc
push
and
lock
xchg
fyl2xp1
xchg
xchg
sbb
movsl
outsl
pop
mov
int3
dec
imul
mov
pushf
adc
inc
sbb
int
xor
lcall
ss
xor
outsl
dec
mov
das
mov
jb
out
xor
add
test
pop
call
mov
cwtl
repnz
xor
mov
inc
add
rcrb
push
pop
pop
test
les
adc
jmp
gs
ret
and
xor
inc
xchg
les
loopne
fidivs
cli
mov
fnstenv
mov
popf
insb
out
fwait
mov
cmp
ja
sub
orb
and
pop
lods
pop
or
xor
aad
xchg
push
aad
inc
xor
subb
sbb
insb
dec
cmp
add
stc
aad
add
xchg
test
cltd
mov
add
jbe
adcb
mov
sbb
mov
jno
sbb
dec
pop
loopne
das
fcmovu
jg
dec
sbb
inc
out
xchg
push
lea
mov
call
sti
adc
cmpsl
lahf
cmovp
sub
popa
pop
lds
xor
mov
adc
jbe
lock
xor
pop
ds
popf
dec
jp
mov
sub
jl
jnp
dec
in
adc
rcr
das
sub
shll
clc
scas
shrb
cmp
mov
cld
outsb
cmp
and
xchg
xor
fwait
test
fldcw
jns
mov
mov
and
and
push
test
pop
je
insl
fildl
add
push
cmp
inc
into
xchg
stos
cmp
hlt
push
or
pop
mov
mov
ret
xor
mov
lods
pop
or
or
mov
mov
pusha
or
jl
xor
push
out
push
pop
lahf
xchg
fildll
test
in
cli
add
or
test
loopne
sbbl
faddl
push
dec
test
nop
movsb
int3
pushf
mov
sub
lea
push
int3
cmp
mov
daa
addl
jbe
nop
or
cwtl
or
pop
mov
les
or
pusha
sbbb
cmp
sub
lods
sub
push
movsl
sub
shrl
pop
or
mov
mov
push
and
out
into
jns
push
pushf
jmp
stos
int
cmovl
sub
loopne
lret
cli
out
pop
add
xchg
xchg
add
data16
loope
xor
sbb
and
pushf
stc
leave
pop
xchg
int3
pop
lds
ret
in
in
pop
mov
cld
in
dec
cmovae
xchg
xchg
in
sub
gs
addr16
lcall
adc
mov
mov
pop
sbb
lock
js
jno
mov
sbb
mov
pop
sub
cmc
cs
cld
pusha
adc
and
lods
pop
pusha
mov
dec
test
leave
aad
pop
maxps
mov
es
cld
and
mov
mov
shll
xchg
call
shl
mov
std
dec
and
imul
xchg
pop
adc
pop
in
addr16
repnz
dec
mov
je
outsl
pop
cs
xchg
outsb
repnz
lcall
xor
fcomp
outsl
out
scas
cltd
pop
jle
stc
push
movsl
divb
pop
cmp
sbb
fisttps
cltd
js
inc
icebp
fstps
mul
add
mov
sbb
jbe
adc
out
fsubrs
fbstp
gs
leave
sub
or
jo
ret
pop
adc
sub
popa
pop
loop
mov
inc
bnd
gs
adc
mov
xchg
adc
andb
shr
das
xchg
push
addb
inc
add
fcomps
dec
jnp
mov
in
jmp
mov
out
xor
aaa
repz
in
imul
pop
pop
ja
jg
mov
dec
mov
mov
mov
and
sahf
jne
add
pop
cmp
scas
jp
data16
ss
mov
pop
ds
enter
out
cmp
xor
movsl
pushf
xchg
outsb
add
bound
xor
daa
dec
jno
sbb
adcl
pop
jne
out
sbb
mov
push
movsl
xchg
push
out
outsb
xchg
jle
push
imul
sub
push
sub
sahf
jnp
cwtl
xchg
or
loop
xor
mov
fldenv
shll
fdivrl
push
lret
jmp
pushf
mov
xor
gs
sbb
sti
jle
sbbb
addr16
js
push
out
jle
dec
and
xchg
ret
or
xchg
jne
inc
fcoms
mov
fnsave
in
xor
xchg
cmc
mov
dec
cltd
sub
div
fsubrs
mov
movsl
xorl
jo
and
or
loop
cmc
adc
lods
iret
in
shlb
shrl
and
sub
cld
mov
sub
and
cmc
mov
cld
add
xchg
mov
or
pushf
lea
xchg
mov
add
mov
xchg
or
je
inc
int3
mov
es
xchg
fnstcw
add
add
sti
push
stos
add
mov
lret
scas
sarl
pusha
mov
push
lods
popf
inc
stos
or
lret
or
in
les
jae
je
test
sarb
jecxz
loopne
jbe
or
xchg
xchg
arpl
divb
inc
cmp
dec
jnp
mov
xor
cmpsb
insl
mov
into
pusha
movsl
pop
out
aaa
addl
and
inc
adc
call
sbb
cwtl
pop
stc
mov
mov
mov
lcall
loope
jmp
xor
nop
js
dec
testl
out
popf
lret
adc
je
cmp
enter
mov
call
cmp
cld
aad
xchg
mov
pop
adc
pop
jg
jnp
adc
adc
iret
lds
in
int
jae
inc
pusha
xor
in
cmp
fcmove
jbe
mov
cwtl
adc
xchg
xor
fdivrl
in
in
les
jo
inc
ret
dec
mov
jbe
dec
inc
or
pop
push
aaa
jns
insb
jmp
xchg
fwait
inc
loop
jp
mov
repnz
sub
push
jbe
jl
mov
and
sar
push
sub
ss
test
sbb
sti
xor
jno
mov
test
pop
test
stc
outsb
addr16
cli
pop
int
es
dec
and
mov
mov
popa
aad
cmp
push
pushw
sarb
ds
mul
sahf
mov
in
rep
out
mov
roll
jbe
jae
jle
inc
cmp
rcrb
sub
pushf
push
ds
adc
mov
std
push
dec
stos
inc
adc
js
outsb
push
mov
dec
in
test
cmp
stos
pop
bound
mov
jl
mov
ja
outsb
mov
loop
cmp
inc
inc
mov
in
or
in
int3
les
mov
inc
pop
aad
and
sub
movsb
and
adc
repz
cmpsb
test
fs
mov
cmp
je
mov
scas
mov
adc
mov
iret
arpl
xchg
jle
xchg
and
aam
xchg
popf
mov
enter
aad
mov
add
push
sbb
or
inc
ds
inc
push
jle
adc
cs
mov
or
sub
mov
inc
in
mov
mov
sub
out
xchg
sarb
adc
insb
movsb
mov
jl
jb
add
mov
sub
out
dec
sarl
jmp
stos
fwait
inc
pop
inc
fucomi
jmp
arpl
iret
jl
fistl
repz
xor
cmpsb
cltd
cltd
in
in
shlb
imul
push
pop
in
cmp
cmpsb
push
arpl
adc
mov
adc
stc
jns
out
fxtract
cmp
in
popf
mov
cs
mov
jno
ret
test
rcrl
test
mov
or
cmp
and
and
bound
adc
bound
lods
fs
movsb
cld
cs
dec
jl
std
push
mov
into
or
jns
inc
test
adc
popa
xor
pop
test
mov
jnp
clc
push
xor
repz
push
mov
mov
faddl
fxch
and
mov
rclb
loope
push
pushf
mov
cmpsb
int
in
adc
ret
in
loop
add
fmull
sub
fimuls
add
xor
sub
fisubrl
ljmp
xchg
mov
or
or
jecxz
aas
adc
stc
hlt
and
and
mov
sti
xacquire
lock
fadds
sbb
xchg
out
inc
inc
es
mov
out
sbb
mov
add
int3
and
jmp
add
mov
or
lea
mov
lret
std
inc
scas
stos
pop
and
xchg
cmp
push
pusha
xchg
hlt
push
movsl
xor
add
jo
push
lret
movl
int
sbb
add
addl
lock
and
imul
aam
xor
xchg
xchg
xchg
rcrb
xor
mov
xchg
mov
and
in
sbb
mov
movsl
jns
adc
jae
out
loop
fcomps
adc
push
push
lahf
test
xor
xchg
rcl
inc
sub
inc
mov
dec
fnstenv
mov
cld
jbe
sbb
andb
or
inc
dec
adc
mov
or
xchg
fs
mov
mov
push
insl
and
jo
leave
jno
inc
sbb
in
andl
in
mov
mov
add
add
repnz
sbb
imul
std
cmp
push
out
lcall
icebp
cmpb
push
push
jo
aad
je
or
and
mov
ljmp
sub
sub
clc
jnp
push
je
fadd
or
sbb
ljmp
jecxz
stos
xor
lds
roll
repnz
add
sbb
push
xchg
leave
adc
testb
je
add
jmp
inc
sub
adc
ds
fnstenv
insl
fidivl
lods
xor
xor
xchg
scas
jge
aad
jno
cwtl
sub
filds
sbb
inc
push
cmc
mov
loope
mov
mov
movsb
test
mov
shll
shll
mov
sub
cmpsb
es
fs
hlt
addl
pop
ret
inc
dec
jp
add
push
xchg
icebp
test
in
mov
jae
or
adc
sub
pop
cmp
pop
cli
mov
aas
addr16
das
xor
xchg
push
push
imul
ljmp
mov
fcomip
mov
nop
dec
mov
xor
and
ss
and
add
and
push
inc
lods
sahf
jo
jno
cmpsb
movb
scas
and
xchg
adc
nop
or
repnz
call
leave
shrl
or
loop
repnz
push
int
popf
add
mov
icebp
aam
push
dec
jle
adc
push
adc
cmp
sub
cwtl
imull
jg
jae
push
outsl
aaa
sub
aad
movsl
mov
repnz
jp
pushf
clc
xor
pop
jnp
and
test
lret
ret
and
add
bound
ljmp
ss
mov
push
add
sbb
test
push
adc
shlb
sub
mov
sbbl
sbb
xchg
mov
lods
adc
test
mov
std
lock
mov
stc
mov
adc
dec
adc
jmp
popf
sub
aas
insl
sub
mov
xor
lcall
insb
xchg
pop
jg
cld
movsb
test
sub
fcmovne
sub
jae
movl
pop
xchg
mov
divb
push
lods
les
xchg
fimull
testb
incb
mov
mov
jae
loop
mov
pop
call
inc
movsb
cwtl
mov
add
cmp
add
data16
xchg
test
stos
movsl
mov
cmpsb
jg
fucom
mov
sbb
cmp
mov
movsl
jecxz
je
gs
and
popa
insb
or
out
cmp
xlat
mov
xchg
xchg
in
and
imul
stos
cmp
push
popf
mov
mov
in
shll
pop
push
out
mov
xchg
leave
cs
mov
out
insl
das
add
xor
fldt
dec
cmp
ljmp
roll
enter
out
push
push
loope
loop
sahf
hlt
dec
scas
int3
dec
pop
xchg
jnp
mov
adc
jmp
jne
inc
jg
in
outsb
bound
mov
jle
jne
push
sbb
lods
popf
adc
push
punpckhbw
inc
cmp
pop
push
dec
cmp
scas
jns
loopne
xor
adc
mov
shl
jbe
xor
ret
call
push
jb
cmpsb
ffreep
sbb
mov
sbbb
mov
test
jg
xlat
ficomps
cmp
lcall
decb
xor
xor
mov
mov
jle
or
daa
les
fnstsw
xor
xchg
xchg
sbb
jb
sahf
inc
leave
fxch
aas
pop
les
and
sbb
adc
jns
push
xchg
imul
ret
cltd
cmpsl
popa
pop
loop
addl
inc
jg
add
lods
adc
je
inc
fistpl
sti
out
push
lds
jns
rol
insb
jecxz
cmc
ret
mov
xchg
into
loopne
jecxz
pushf
push
cltd
xchg
out
flds
adc
mov
loop
addr16
movsb
sbb
in
idivl
imul
outsb
insb
and
jmp
int3
outsb
pop
sbb
pop
and
popl
rcr
aaa
aad
cmc
push
jle
leave
mov
jl
stos
sub
jge
inc
jnp
daa
pop
bound
xor
fs
pop
popf
pop
mov
cmp
mov
nop
or
data16
jmp
push
out
lcall
popf
lret
jecxz
ds
das
aam
add
inc
pop
sbb
mov
jbe
ret
cmc
mov
movsb
dec
dec
xor
pop
icebp
xor
cwtl
adc
push
stc
rcrb
out
out
xor
cmp
and
sbb
mov
cmp
cld
fnstsw
xchg
cmp
or
mov
into
mov
ret
jns
jae
int
and
xchg
test
les
ret
frstor
inc
enter
testl
sub
mov
and
mov
inc
jnp
and
out
sbb
or
jb
jp
ret
and
fnstcw
mov
dec
fs
push
xchg
cmp
sub
imul
xor
aad
mov
mov
inc
xor
xchg
test
pop
or
sbb
aaa
inc
mov
add
pop
ficomps
arpl
pushf
cmpl
sahf
pop
and
cmp
loope
jmp
cmpsl
push
inc
sarl
int
pusha
test
pusha
scas
psubsw
push
test
sbb
sub
mov
mov
jb
out
bnd
ljmp
xlat
jecxz
imulb
andb
aas
into
mov
aad
jge
jmp
icebp
mov
ss
jns
lods
sbb
or
lea
nop
push
pop
cmp
rcr
lock
inc
pop
sub
and
xchg
into
xchg
jne
test
stos
xor
lods
test
jno
call
jne
adc
pop
and
adc
and
ja
dec
inc
dec
inc
fisubl
scas
shrb
cmp
sub
ljmp
pop
and
jge
cmpsl
add
jle
sbb
popa
loope
cmpb
ret
imul
lods
xlat
arpl
jle
shll
push
or
imul
shll
nop
jle
mov
stos
xor
dec
pop
in
pushf
push
cltd
in
outsb
inc
sarl
jp
popf
or
loopne
xchg
inc
add
adc
call
jne
iret
ds
repz
repz
test
sbb
sbb
xchg
add
int
inc
mov
data16
or
pop
or
xchg
icebp
shr
loope
xchg
jbe
xor
hlt
adc
inc
dec
sub
pop
xchg
push
out
sbb
pop
sbb
cli
fldz
cwtl
mov
sahf
and
bound
bound
int
shlb
xchg
cmpsl
stos
adc
mov
mov
pop
inc
xor
test
jmp
pop
shlb
push
cmpsb
sbb
insb
movsl
adc
lods
popf
push
add
xor
pop
cmpsl
or
push
insb
loopne
ds
fwait
shr
repnz
pop
or
shrb
ret
test
sahf
outsb
mov
lods
lcall
add
xchg
mov
cmp
pop
pop
push
adc
sahf
lahf
jns
faddp
cltd
jnp
jl
jnp
jmp
inc
or
mov
xor
sbb
and
push
cmp
jle
xlat
pop
repnz
movsl
cmp
xor
fldt
sub
cs
out
nop
jne
add
pop
cli
jnp
int3
lds
sbb
cmpsl
je
mov
pop
jns
push
and
add
cwtl
pushf
data16
jnp
mov
imul
enter
and
add
fs
leave
adc
push
adc
in
loopne
inc
movsl
xchg
test
adc
lock
or
ljmp
je
cld
adc
imulb
xchg
push
dec
push
add
cmp
mov
insb
stos
mov
lock
pop
lods
push
inc
fstpt
and
dec
sbb
js
push
repnz
mov
inc
and
push
jp
pop
pop
ficoml
movl
inc
push
test
neg
inc
jo
cmp
xchg
mov
add
dec
and
dec
or
dec
nop
test
jbe
pop
call
lds
sbb
add
shrl
jp
add
xor
das
dec
cli
in
out
ret
shrb
push
int3
jno
out
mov
nop
adc
lret
sar
dec
sbb
cli
stos
mov
jge
pop
sub
cmpsb
fbstp
arpl
xchg
inc
cmp
pop
iret
inc
je
dec
jae
push
jo
test
jg
rcrl
add
ret
push
pop
push
popa
out
and
sbb
jp
test
and
nop
xor
addr16
sub
jb
xor
jp
das
stc
inc
cltd
btl
popl
aaa
into
add
mov
int
sub
jbe
outsb
je
mov
fwait
mov
addr16
loopne
mov
inc
xchg
inc
cmpsb
sahf
cmp
pop
jno
test
mov
mov
cld
test
dec
ret
shlb
adc
xchg
and
jp
fisttpll
jo
mov
js
pop
mov
jp
popf
es
stc
icebp
add
aad
sbb
shlb
cmp
in
imul
cs
bound
push
aaa
pop
jecxz
or
lock
imul
cmp
add
bound
mov
fcoms
dec
push
push
in
nop
jne
int
and
fldl
sbb
add
jge
add
aad
sub
xchg
ret
adc
mov
mov
mov
cmp
mov
repz
and
xchg
pop
mov
sbb
ss
pop
ss
jle
xchg
pushf
fimuls
mov
js
jns
add
mov
xchg
mov
leave
add
and
sub
adc
mov
or
movl
mov
and
lock
add
adc
sub
mov
addr16
lds
cltd
daa
xlat
mov
int3
adc
push
in
testl
xor
adc
test
or
imul
enter
jmp
test
mov
mov
xorl
mov
or
pop
push
inc
inc
shll
mov
stos
test
push
xor
mov
mov
mov
push
inc
or
jno
insb
xchg
je
push
ljmp
aad
sbb
or
xchg
lcall
lock
mov
scas
idivb
bound
mov
cmp
int3
jbe
push
pop
stos
jbe
and
inc
aaa
negl
adc
movsb
xchg
iret
push
cltd
and
rorl
fcom
es
test
dec
mov
fistpl
push
test
popf
jmp
or
push
sbb
aam
cmp
push
mov
les
dec
sahf
add
ffreep
inc
mov
fcomi
xor
insl
je
cli
or
pushf
aam
lds
mov
fucomi
push
or
adc
inc
in
fs
sti
not
mov
add
daa
stos
and
jecxz
bound
rclb
ds
out
or
mov
jg
mov
enter
or
test
aad
sbb
imul
cltd
mov
and
out
push
rclb
stos
sub
push
xor
ret
sbb
in
cmp
stos
or
pop
mov
popf
movsb
xchg
sub
es
shl
mov
mov
incl
mov
cld
adc
div
hlt
sub
push
popf
test
xlat
int3
xorl
and
adcl
rorb
out
jg
ss
and
xchg
not
sub
push
pop
jbe
mov
rclb
push
mov
jb
in
or
or
xor
mov
ja
sub
repz
popf
movsb
mov
les
xor
leave
jl
shlb
in
xor
pop
mov
push
sub
hlt
aas
xchg
xor
call
and
stos
shl
mov
mov
sub
mov
xchg
cmp
inc
es
xchg
fnsave
sti
push
inc
dec
mov
es
lods
xor
loope
sub
xor
mov
lahf
cmp
shr
adc
xor
mov
mov
jecxz
inc
mov
lahf
jo
mov
inc
sbb
cmp
or
pop
xchg
incl
cs
in
and
enter
out
bound
mov
sub
jmp
adc
into
adc
sbb
int3
mov
mov
pop
test
push
add
push
jne
cmp
lds
lret
xor
jl
or
adc
bound
or
pop
loopne
movsb
fidivl
jo
mov
ret
inc
inc
into
mov
pop
pop
jp
rcll
loope
push
add
in
xor
jae
imul
pop
jo
adc
cld
shrb
enter
xchg
xchg
fstp
xchg
xlat
sahf
jns
loop
dec
mov
add
ret
xchg
or
sub
std
push
addr16
or
mov
inc
das
and
insl
xor
and
xor
ret
jno
add
loopne
pop
outsb
or
xchg
lea
in
dec
sub
psllw
or
jp
loop
mov
lret
mov
mov
pop
hlt
jl
js
test
cmp
shlb
sub
sub
mov
dec
push
sbb
mov
mov
cmp
dec
stc
pop
fldcw
xchg
ret
lea
jge
out
bound
inc
jb
push
jns
mov
mov
jl
sub
mov
rorb
xchg
leave
adc
jle
add
xchg
and
pop
xlat
out
sbb
jo
lcall
lahf
mov
and
pop
push
xchg
xchg
test
insb
jb
jns
xor
stc
add
dec
out
sahf
xchg
into
jmp
or
xor
mov
repz
jp
aam
leave
xlat
dec
subb
or
cmp
jecxz
mov
jo
je
orb
push
pop
xor
or
out
nop
jle
jl
icebp
xchg
shrl
xor
mov
daa
mov
addl
adc
or
imul
add
cmp
add
repnz
pop
jns
insl
outsb
cmp
out
cltd
hlt
sbb
mov
add
sub
sbb
mov
jo
ret
xchg
mov
in
lcall
inc
int3
sbb
dec
xchg
jmp
push
test
push
mov
fnstsw
mov
sub
jg
lret
sub
lcall
bnd
or
inc
bound
loop
add
mov
ret
or
mov
push
pop
adc
into
test
ret
cmpsb
and
mov
jns
sub
sbb
adcl
shrb
mov
push
ljmp
lahf
and
je
arpl
add
stos
insb
cmp
push
pop
cltd
int
testb
nop
sub
lahf
stos
mov
fdivl
xor
adc
add
cwtl
jne
adc
fdivl
ss
scas
leave
mov
test
iret
push
push
pop
mov
pop
lea
lock
pop
imul
adc
jp
lods
mov
xchg
jmp
sub
int
int3
mov
jne
sbbl
inc
inc
insb
dec
mov
mov
adcb
xchg
and
rcll
push
cld
out
pop
push
adc
or
xchg
add
or
mull
in
cld
cld
cmp
idivb
shll
or
lds
scas
mov
sub
mov
cld
in
sti
dec
cmp
sub
pop
push
xchg
fcoms
popa
pusha
add
mov
jno
mov
pop
jmp
push
loopne
movsw
incb
mov
in
addl
and
clc
pop
lcall
cmc
out
push
fstp
pusha
data16
out
mov
fldcw
ret
test
adc
inc
cmpsb
aad
loop
mov
mov
std
pusha
lret
das
enter
mov
xor
ss
sub
shlb
adc
mov
adc
fidivs
test
fildl
mov
out
sub
cltd
xor
mov
jae
data16
push
jno
pop
mov
pop
pop
mov
xchg
sbb
dec
push
popa
jne
call
xchg
pop
sub
inc
movl
push
xor
stos
jecxz
loopne
inc
das
leave
adcb
inc
dec
movsl
fldt
lret
jb
gs
mov
ret
cmp
loop
arpl
sub
inc
cmpsb
aad
testl
shr
es
sub
or
sahf
pushl
in
rorl
and
jae
mov
sub
mov
adc
sbb
mov
lret
mov
lods
jl
out
jmp
mov
or
mov
or
cmc
hlt
and
aad
sbb
fxtract
les
out
push
mov
popf
mov
ret
mov
or
stos
dec
xor
clc
outsl
push
andb
dec
fsubs
cli
pop
inc
rcrl
push
lods
out
jle
shll
test
popa
lea
lods
movl
xor
or
jb
and
ja
add
call
in
adc
sahf
sbb
xor
pop
pop
clc
xchg
push
mov
dec
xchg
ss
pop
xor
push
ja
cmp
incb
mov
inc
ja
adc
call
push
lock
ret
fimull
mov
cli
or
out
pop
pop
xchg
pop
ficoms
jb
fsubs
sub
push
fs
subb
and
xlat
leave
pushl
addb
pop
push
sahf
movsb
fs
mov
jmp
sub
aaa
sub
ror
rorb
push
dec
les
mov
dec
out
pop
cmp
and
jmp
mov
cld
pusha
mov
or
js
sub
push
xor
xor
jbe
lds
movsl
xchg
aad
out
jle
or
pop
push
cmp
fists
mov
sub
inc
add
cmpsl
or
cmp
push
dec
in
repnz
push
sarb
inc
mov
mov
cmpsl
pop
sbb
repnz
out
lock
cwtl
leave
jg
mov
xchg
xchg
data16
lahf
mov
rcll
scas
sbb
sub
xchg
add
pop
aas
lcall
jmp
cs
in
dec
mov
pop
outsl
test
outsl
mov
cmpb
insb
je
mov
or
pop
aaa
cmp
and
jge
cmp
jl
mov
fcomps
fucomp
hlt
add
dec
xchg
cmp
sbb
or
push
sbb
aas
inc
inc
stos
xchg
mov
xor
adc
cltd
and
jb
lret
repz
xor
mov
sbb
adcl
lahf
pop
lock
and
shrl
lcall
sbb
and
mov
pop
lahf
jbe
insl
flds
cld
dec
dec
in
ret
inc
jne
push
lcall
adc
adc
loope
pop
add
and
jecxz
aam
jno
addr16
movsl
mov
dec
cmp
cmp
std
rorl
xchg
mov
ja
sub
orb
pop
je
pop
mov
jecxz
xor
ja
xchg
push
dec
lret
jae
sbb
fbstp
sbb
push
jne
jne
fldt
dec
sbb
mov
mov
adc
insb
cmpsl
sub
fs
jecxz
shrl
ljmp
loop
imul
mov
fisttpl
fcomps
jmp
xlat
dec
fists
scas
fisubs
dec
fstps
in
aaa
xlat
mov
sub
rolb
push
arpl
test
test
add
adc
add
add
lret
insb
in
jno
roll
mov
mov
dec
negl
sbb
shr
jmp
and
ficoml
in
sub
mov
mov
sarb
inc
pop
scas
mov
adc
adc
or
or
sub
std
loop
mov
xor
adc
in
xchg
out
ficoml
mov
adc
xor
frstor
jmp
sti
pop
lods
enter
inc
pop
sarl
pop
jae
jo
pop
in
jge
pusha
rclb
xor
cmp
mov
push
dec
out
movsl
hlt
or
mov
aas
aad
jbe
test
verr
sub
cmp
pop
xchg
nopl
in
pop
jo
ja
daa
jns
enter
cmpl
mov
xorb
jg
ds
loope
cmp
inc
loope
cmp
rcr
and
pop
sti
push
mov
cmpsl
mov
jecxz
jne
push
cmp
push
adc
test
clc
ss
fst
stc
sti
ret
inc
or
cwtl
fwait
in
sub
fs
imul
xlat
ja
popf
shrl
out
inc
mov
lea
xor
cmp
xchg
stos
push
jmp
xchg
cmp
rcrb
jo
out
xlat
cs
push
into
inc
push
jg
aaa
sbb
mov
mov
jg
aad
pop
or
add
jo
mov
out
pop
jle
jno
add
jno
jnp
push
ret
xor
movsl
enter
or
xchg
mov
mov
sbb
ja
ss
sbb
push
jle
fucomi
dec
iret
push
sbb
ret
test
insb
in
lret
push
dec
xchg
int
into
les
das
imul
inc
push
adc
xchg
sbb
outsb
lods
adc
push
bnd
xor
pop
bound
dec
mov
pop
sub
lret
add
mov
xor
xor
add
push
adc
mov
cmp
or
stc
test
test
loop
lret
mov
lds
jle
pop
enter
mov
filds
adc
sub
das
mov
xchg
adc
pop
mov
mov
pop
dec
add
sbb
imul
dec
inc
adc
shll
sbb
pop
cwtl
pop
pusha
lret
test
dec
mov
mov
ss
add
or
adc
inc
and
jg
mov
pop
call
mov
mov
aam
in
addr16
add
aam
mov
inc
mov
scas
cmpsb
movb
je
pop
shrl
cmpsb
out
testb
call
cs
lahf
mov
stc
arpl
pusha
mov
arpl
xor
orb
andb
xchg
jae
movsb
pop
clc
fxch
rclb
je
xlat
dec
out
int3
std
lahf
mov
sti
mov
lods
xor
addr16
out
sub
jp
push
add
mov
imul
rolb
adc
int3
cld
lahf
fwait
xor
inc
cmp
sub
xchg
cmp
pop
dec
out
imul
loopne
test
add
xor
xchg
inc
data16
rorb
icebp
in
out
xchg
fidivrl
jmp
or
loop
sub
pop
inc
jp
jbe
push
in
mov
out
aaa
push
jp
int3
or
imull
cmp
or
cmpsl
sub
pop
out
jecxz
mov
sbb
dec
lret
dec
jae
ds
cli
repz
adc
leave
outsl
xchg
jl
and
fcmovnbe
sahf
jmp
in
xchg
cli
mov
jg
push
mov
icebp
daa
adc
mov
cmp
push
arpl
mov
add
dec
imul
sub
xchg
outsb
test
mov
xchg
adc
and
inc
pop
jbe
jg
popa
clc
push
clc
sub
xor
nop
xor
cmp
call
aam
and
fimuls
or
int
int3
push
repz
mov
aaa
cli
jb
jo
or
out
data16
cli
mov
pop
jno
ret
dec
es
xchg
xchg
jge
push
sbbb
jle
mov
fisubrs
or
into
ja
add
or
out
ja
jo
pop
lds
dec
push
jne
or
ss
jmp
pusha
cmpsb
mov
jl
dec
sbb
jmp
inc
add
mov
shlb
dec
mov
jo
jns
pop
sub
inc
add
mov
add
add
stos
fcoms
movsb
mov
in
mov
adc
mov
cmp
popf
loopne
inc
push
mov
in
jae
or
lea
mov
push
aaa
imul
xor
loopne
or
dec
xor
lea
xor
hlt
xlat
xchg
and
sub
mov
lds
fisubl
les
lea
stos
repnz
sub
and
pop
mov
inc
jno
mov
mov
movsl
loopne
push
ds
mov
pop
push
adc
stc
mov
js
push
mov
sbb
inc
mov
rol
fs
fmuls
cld
push
pushf
pop
or
inc
pop
fdivl
fists
jecxz
test
adc
pop
push
test
inc
jno
xchg
cmp
icebp
dec
icebp
in
sub
test
ret
popa
out
shr
sti
imul
cmc
pop
sbb
pop
xchg
stos
sti
shl
cld
pushf
leave
fdivrp
add
mov
pop
loope
stc
or
and
push
bound
pusha
xchg
scas
out
js
jnp
icebp
push
xor
movsl
fcoml
insb
dec
test
xchg
int3
xor
cmc
add
xchg
lock
add
xchg
negl
pop
jne
jbe
fisttps
les
pop
cmp
push
xchg
xchg
mov
sahf
jp
arpl
fcoml
and
ds
jecxz
stos
negb
mov
sbbl
pop
pop
xchg
icebp
sub
out
mov
fidivrs
cmpsb
jo
std
mov
and
sub
inc
inc
mov
jmp
fsts
cmpsb
pop
adc
enter
test
inc
push
mov
mov
outsl
sub
arpl
adc
pop
push
lds
mov
je
in
inc
mov
shll
push
cli
jnp
jae
or
jle
in
fistpll
and
add
cwtl
push
inc
add
or
outsl
shrb
pop
mov
out
test
shrl
inc
push
ljmp
out
stos
mov
cmpsl
and
dec
enter
iret
mov
push
clc
mov
fcomps
mov
cltd
inc
ljmp
andb
dec
jg
fstpt
mov
inc
fldt
sahf
xor
fs
pushf
or
dec
mov
lret
bound
lret
scas
cld
and
out
cmp
ficomps
fs
test
mov
inc
fwait
loopne
clc
push
lahf
fstpl
and
fldcw
gs
loope
loopne
adc
dec
arpl
ret
cmp
mov
adc
mov
loop
push
push
popa
jne
xor
fdecstp
ret
mov
cli
mov
test
dec
jle
fmuls
inc
fcom
cwtl
dec
lahf
mov
fnstcw
add
pop
pop
and
ja
push
rcrb
repz
push
je
sub
icebp
sbb
popf
dec
jl
push
ljmp
sbb
out
xor
scas
jnp
cmp
call
jns
inc
fcmove
mov
cmp
mov
lods
add
in
idivl
mov
mov
add
add
dec
mov
ss
ss
fiaddl
sub
outsl
mov
movsb
dec
lcall
and
lock
push
lcall
add
jbe
mov
enter
and
outsb
mov
or
jne
push
aas
cmp
fistl
lcall
sub
nopl
push
lret
ljmp
ret
ja
enter
test
and
aas
sub
mov
xchg
pop
sti
nop
test
shrl
xchg
icebp
push
in
pop
pop
pop
or
stos
cmpsb
loope
in
lret
jne
cs
notl
ret
inc
pop
mov
xlat
iret
aad
jnp
pop
cmp
sarl
mov
stc
adc
and
sub
push
dec
addr16
cmc
mov
jge
push
adc
xor
fcom
sarl
mov
nop
or
sub
inc
mov
xchg
add
xchg
popf
stos
cmp
jb
mov
out
xchg
adc
jns
lods
or
test
mov
test
fnstsw
push
js
inc
mov
mov
jl
sbb
push
sbbl
add
adc
push
ret
insb
or
cltd
jg
in
test
ds
es
test
adc
cmp
movsbl
or
fsubs
shr
mov
les
xor
pop
pop
sbb
pop
cli
dec
int3
test
and
dec
dec
xchg
sub
mov
push
jg
dec
mov
negb
inc
shll
jbe
inc
bound
dec
mov
add
add
aad
ja
div
inc
or
xor
mov
cmp
sbb
push
inc
xchg
lods
mov
push
pop
inc
mov
mov
adc
pop
repz
lods
sub
rolb
or
and
loop
jbe
aas
xchg
outsl
mov
inc
cmc
mov
scas
or
daa
rcrl
jl
jno
pop
aam
hlt
jge
mov
outsl
fdivl
push
int3
cs
cwtl
add
pop
lea
jp
push
lods
subl
cld
ds
add
loop
jmp
icebp
mov
jbe
jl
sbb
lock
lret
fwait
lret
fwait
jecxz
adc
mov
lods
aad
mov
jns
cmp
pop
pop
inc
jns
xor
ret
cmpsl
idivb
es
dec
dec
sbb
idivl
rclb
sbb
test
dec
sub
sub
add
hlt
or
imul
jo
mov
sbb
cmp
fs
jg
in
mov
icebp
sub
daa
cmpsl
adc
enter
fdiv
add
cs
jnp
subb
jb
xchg
lods
xor
and
lret
or
pmuludq
test
lret
fistpll
sbb
sbb
dec
dec
std
xchg
jecxz
insb
ss
js
fimuls
mov
inc
xchg
pop
adcb
pop
fnstsw
mov
lods
sub
cmp
pusha
pushf
sbb
push
icebp
mov
lods
jmp
test
sti
fldl
and
loopne
je
xchg
mov
push
roll
or
fdivs
and
xchg
popf
push
adc
xchg
rcrb
int3
cmc
add
pop
push
cltd
stos
out
setl
aad
sub
repnz
xor
cltd
inc
jg
xor
in
test
scas
xor
divl
inc
pop
gs
rorl
sub
add
push
loopne
xor
push
push
iret
pop
rol
mov
mov
sahf
in
sub
std
pop
rorb
sbb
gs
testl
iret
jmp
cmp
cmp
jecxz
adc
dec
xchg
ret
inc
and
add
lods
sbb
cmp
into
imul
sbb
imul
mov
clc
pop
lret
or
cld
xor
test
jle
pop
stc
movsl
cmp
pop
mov
and
cmp
movsb
ret
cwtl
inc
jns
icebp
addl
das
clc
ficomps
pop
cmc
punpckhwd
push
mov
jo
fcmovne
lcall
cmp
xor
sbb
xchg
and
sbb
pop
adc
out
outsl
out
mov
shl
dec
jns
mov
sbb
pop
and
movsb
sbb
jnp
jl
orb
add
out
or
test
jae
adc
jmp
mov
int3
imul
and
inc
ftst
sbb
xor
sarb
dec
push
inc
dec
stos
mov
lods
dec
pushf
or
out
pop
cmp
rcrl
popf
fs
insl
loopne
imulb
clc
hlt
mov
cwtl
aad
outsb
fwait
lods
adc
inc
xchg
cmp
pop
out
ret
dec
xor
cmc
sbbb
sbbl
repz
shll
or
daa
imul
xchg
hlt
pop
pusha
jne
add
fisubrl
inc
jmp
and
mov
add
pop
out
sbb
mov
lret
pop
aam
sbb
mov
add
or
leave
stos
mov
xchg
jle
push
sub
mov
aam
sub
and
fnsave
sub
shr
mov
pop
icebp
jle
or
pop
imul
mov
jl
decl
push
popf
mov
loop
sbb
xchg
or
push
aas
adc
lock
mov
mull
movsb
decl
push
dec
aas
gs
inc
pop
sti
sub
add
test
loopne
xor
sub
mov
aaa
int3
ret
cwtl
lock
mov
dec
or
iret
rclb
das
mov
mov
lock
das
stc
or
sbb
push
add
outsb
movsb
pop
dec
xor
lret
jge
in
ss
cltd
add
out
cmp
aad
jl
into
dec
outsb
movsl
rolb
mov
not
in
inc
loopne
stos
cmpsb
or
cltd
aam
insb
je
int3
icebp
lret
or
out
dec
pop
jns
lret
cs
in
leave
fwait
jl
adc
in
call
pop
push
dec
les
mov
push
in
add
addr16
mov
sbb
pop
mov
xor
or
mov
std
xor
ret
in
es
clc
out
sbb
stc
pop
xchg
fdiv
add
adc
add
xor
imul
jb
pop
ja
test
imul
enter
in
ficompl
out
sub
mov
mov
jo
mov
sti
ds
and
aaa
in
mulb
xorb
hlt
pop
in
jnp
lea
lods
loopne
mov
and
scas
hlt
imul
sbb
int3
mov
les
adc
mov
out
sti
in
mov
filds
dec
xchg
mov
repnz
adcl
jmp
and
jge
push
add
loope
push
movb
cwtl
out
cs
cmp
and
mov
add
adc
inc
jg
rolb
popa
rcrb
pop
sub
dec
xchg
lcall
mov
imul
lret
mov
mov
cld
pusha
mov
jl
data16
scas
add
or
clc
dec
sub
xchg
ret
sbb
sub
sub
js
movsl
insb
push
out
xchg
push
sub
mov
add
adc
stos
cmp
xlat
out
mov
dec
out
notb
cmp
and
pop
or
aam
add
outsb
cmp
push
sub
adc
mov
dec
in
mov
push
in
push
sub
je
stos
jle
jne
cwtl
cmp
pop
ret
and
sub
pop
daa
or
pop
repz
adc
pop
test
dec
dec
movd
test
cmp
stos
cmp
hlt
outsb
mov
in
sub
xor
add
jne
lgs
icebp
xchg
test
push
movsl
in
bound
mov
lods
lea
pop
adc
out
repnz
mov
jae
cmc
insb
clc
clc
dec
adc
mov
popf
lret
daa
lret
push
fcmovne
xchg
jge
movsl
loope
inc
daa
xor
lret
ljmp
scas
fbstp
into
xchg
xor
sbb
jbe
sbb
jmp
mov
sar
push
ret
mov
mov
fmuls
aas
xor
cwtl
sub
push
push
cmp
sti
sub
addl
mov
jecxz
in
stos
cld
pop
mov
xor
cltd
sub
jbe
sub
test
in
cmp
stos
int
sahf
lock
pop
jg
popf
jecxz
ds
out
inc
xor
add
nop
bound
dec
lret
das
jg
in
jae
scas
sub
test
bound
jns
fs
jge
fwait
js
into
dec
dec
lcall
adc
pop
imul
ja
cmp
adc
fbstp
cmp
xchg
xchg
cmp
lahf
cmc
data16
test
xchg
jnp
and
or
jecxz
or
and
pop
in
push
mov
shll
sub
cld
repz
fisttpl
mov
enter
dec
jg
pushf
cmc
fwait
adc
jnp
mov
push
cmp
lea
stc
xor
dec
call
int3
dec
cmpb
je
dec
jp
pop
xor
dec
iret
mov
scas
cmp
sbb
inc
fistpll
or
xchg
inc
mov
adc
hlt
pop
shrl
fsubrp
dec
aas
jns
adc
adc
mov
and
stc
mov
sbb
inc
push
popf
icebp
mov
cmp
sbb
int
dec
pop
in
out
dec
and
and
mov
jno
and
jae
sub
mov
sub
arpl
hlt
push
add
jnp
push
and
mov
or
and
and
and
dec
add
mov
lcall
jae
mov
cmp
xor
dec
ss
sti
leave
in
mov
movsl
jp
xlat
jno
mov
adcb
cmpsl
mov
inc
cmp
jl
in
push
push
in
push
push
mov
dec
and
mov
push
xchg
addr16
in
mov
adc
mov
out
jg
or
xchg
fists
enter
add
or
rolb
fdivr
mov
stos
xchg
aad
lahf
or
mov
sbb
into
jecxz
leave
enter
repz
sub
jnp
xor
aad
fdivs
sbb
cwtl
test
scas
aas
mov
pop
iret
mov
adc
jo
mov
jg
inc
inc
aas
push
int
mov
lahf
filds
in
add
lods
into
bnd
mov
jle
cli
cs
adc
pop
add
fistpll
fimuls
into
int
pop
sbb
xchg
sub
cwtl
das
jnp
pusha
mov
lret
push
sub
lret
jmp
jno
xchg
fdivr
pop
add
mov
imul
or
cmp
sub
adc
xor
push
push
call
mov
jnp
pop
mov
sbb
add
mov
xchg
pop
fisttps
mov
xor
pop
xchg
movsl
lods
and
fnsave
in
daa
movsl
xor
mov
fdivs
pop
inc
les
outsl
mov
shlb
fcmovbe
aas
pop
imull
lea
and
cs
rcr
and
cmpsb
cmp
mov
pop
jb
adc
mov
icebp
in
pop
inc
popa
sarl
push
repz
and
xchg
jae
jmp
mov
xchg
xacquire
cmpsb
int
nop
lret
ljmp
dec
lds
repnz
psrad
popa
jmp
or
outsb
cmp
lods
mov
stos
pop
lock
test
pop
mov
mov
aaa
add
imul
lret
inc
add
cmpsb
shll
lcall
aaa
adc
dec
hlt
jno
das
out
cs
aam
cmp
add
jge
fistpll
lret
xchg
adc
xchg
mov
add
lea
jp
out
mov
push
and
pop
rcrl
push
and
ss
subl
fwait
adc
sbb
int3
sbb
inc
cmp
ja
insb
leave
rol
clc
imul
test
mov
xchg
ljmp
stos
test
jg
cs
outsl
lock
xor
jo
fbld
test
adc
aas
fisubrl
pop
or
loopne
shl
and
gs
shr
xor
not
or
pop
ljmp
in
or
rcr
inc
popf
ret
jle
mov
scas
xchg
inc
mov
shrl
xchg
les
iret
cmpsb
addr16
pop
pop
fs
pop
sbb
adc
adc
in
inc
jecxz
mov
cmp
aad
jb
adc
or
movsl
jae
dec
pop
sub
xchg
sbb
cld
jae
jle
mov
cmp
lret
mov
mov
stos
pop
lret
jp
mov
repnz
out
scas
insl
test
fstpl
ret
loope
mov
arpl
adc
xchg
ds
leave
inc
imul
dec
sbb
xchg
sbb
pop
jne
rorb
and
pop
call
int
adc
pusha
cmp
xor
xlat
push
aaa
ds
out
push
pop
inc
and
loope
test
fdivp
push
cmp
addl
out
jmp
jno
jle
cmp
jno
les
xor
and
mov
push
aas
adc
es
mov
lcall
inc
jb
dec
lcall
inc
fstpl
mov
xchg
arpl
addr16
or
int3
popf
xor
insb
scas
inc
loop
cmpsl
cmp
pop
mov
sub
push
dec
inc
cmc
call
addl
hlt
pop
into
push
add
inc
loop
sbbl
ret
aad
pop
iret
ljmp
pop
rclb
sub
xchg
mov
addr16
sub
ret
mov
mov
or
mov
js
leave
mov
lods
cmp
sub
cmp
jle
cmc
dec
je
sbb
out
enter
loopne
mov
lret
mov
fucomip
add
cmp
xchg
push
adc
out
fucomi
popl
leave
adcb
clc
cwtl
pusha
push
arpl
sub
arpl
push
mov
shll
mov
clc
mov
dec
pop
imul
outsl
ret
iret
pop
and
inc
arpl
ljmp
pop
mov
sub
out
or
in
test
cmc
mov
shr
push
sar
or
or
xor
mov
jp
or
mov
inc
mov
dec
loopne
lds
xor
add
xor
adc
mov
and
push
xchg
inc
cmp
into
hlt
xlat
sbb
insb
sub
daa
test
inc
cmpsl
les
mov
push
adc
insl
fdivrl
cmp
inc
push
mov
and
adc
push
push
adc
ficompl
pop
icebp
mov
sti
or
dec
gs
push
add
cltd
push
shll
pop
call
das
xor
xchg
loopne
out
push
cmc
ss
and
ja
dec
push
mov
xor
mov
cmpsb
and
xchg
mov
xor
cmp
daa
into
sbb
push
cmpsl
inc
mov
mov
outsb
adc
fisubs
or
dec
mov
pop
out
movsl
add
xchg
mov
mov
dec
mov
dec
sbbb
push
dec
or
sbb
aaa
test
add
test
test
push
aaa
lods
aaa
xchg
mov
jmp
xor
call
cmp
and
jbe
xlat
add
cmp
repnz
out
pop
xchg
ds
pop
dec
jae
mov
sub
fcoms
jo
xor
lods
mov
test
fsubrl
push
jb
jne
adc
data16
jne
fs
fidivs
stc
jae
cli
out
sahf
dec
sub
arpl
cmp
cmpsb
outsl
repz
in
aam
push
mov
dec
cmp
jne
mov
mov
mov
adc
repz
ljmp
andl
bound
scas
ret
jg
cmpb
aad
cmp
loop
clc
mov
sbb
mov
or
adc
xor
dec
jmp
daa
stos
bound
sbb
jae
pusha
inc
jecxz
cmp
push
mov
in
push
add
cmpsb
out
jmp
dec
xor
jle
mov
jo
movsl
jecxz
daa
jle
xchg
repnz
out
sahf
pop
das
test
cmp
jne
fsubrs
adc
pushf
pop
ret
pop
sub
mov
test
in
mov
ds
in
sub
xchg
stos
jb
pushf
push
mov
data16
shlb
mov
cltd
pop
or
xchg
insl
icebp
mov
das
out
ds
insb
push
jl
add
push
outsl
add
or
cmp
sbbb
fidivrs
adc
mov
notl
dec
and
jbe
loop
mov
pop
ds
lret
xchg
and
lock
ss
orb
insb
ja
push
negl
sbb
fisubrs
fsubl
sbb
sahf
shlb
fs
scas
icebp
and
movsb
mov
addr16
adc
sub
lock
sarb
cmp
mov
inc
and
insl
addr16
mov
xchg
xorl
hlt
aam
out
pop
lahf
mov
subl
cmc
in
adc
ficoml
and
pop
pop
xchg
inc
ja
fucomip
mov
inc
loop
faddl
jb
pop
repz
xchg
outsl
pushf
sub
mov
lret
es
xchg
loop
cld
pop
es
cld
in
pushf
push
shl
arpl
xor
inc
dec
and
rcll
dec
jae
mov
pop
mov
xor
popa
out
movsl
pushf
push
jecxz
mov
inc
jnp
mov
mov
out
mov
repz
gs
lods
aam
mov
cmp
cltd
jne
push
call
add
insb
and
adc
jne
sbb
and
popa
addb
mov
cltd
sbb
add
clc
xlat
loopne
and
and
cmpsl
mov
test
inc
fists
pop
jae
jns
pusha
xrelease
ds
add
add
ja
jp
or
clc
sbb
sti
dec
scas
aad
push
mov
push
cmp
cmpsb
jno
sar
inc
int3
and
pop
pushf
fsts
arpl
xorb
mov
or
inc
cltd
pop
rcrb
xchg
push
clc
inc
cli
and
sbb
mov
cmp
je
int
cmp
fisubs
or
js
iret
cmc
and
loop
pusha
xlat
jnp
pop
mov
das
sbb
jmp
push
cmpsb
or
push
sub
ja
fwait
loop
pop
xchg
repnz
out
stos
xor
std
mov
push
push
push
xor
dec
gs
cmpsl
movsb
popa
movsb
sar
inc
sub
mov
jns
mulb
outsb
iret
cli
lods
sub
mov
enter
jns
pushf
mov
sbb
inc
xchg
mov
aad
xor
cld
mov
mov
pop
clc
call
loopne
and
and
fs
push
xchg
mov
push
bound
or
pop
fwait
add
sbb
jmp
aas
xor
and
orb
ret
mov
xchg
jg
jle
test
mov
fxch
jecxz
lcall
mov
fildll
mov
adc
dec
xor
inc
sahf
popa
inc
jmp
pop
xchg
test
push
dec
clc
xchg
pushaw
or
lock
in
xchg
dec
loope
and
sub
push
mov
negl
cmp
inc
mov
cmp
mov
dec
xor
loop
insb
sbb
stc
mov
adc
inc
sub
loope
jle
fimull
jg
clc
icebp
dec
jae
adc
xor
out
sahf
movsb
sbb
test
push
xchg
and
fisubrs
mov
dec
and
push
push
lret
frstpm(287
mov
out
daa
inc
lahf
jmp
push
sub
mulb
pop
or
iret
icebp
pushf
sbb
inc
cmp
cs
lahf
lods
lock
pop
loope
xchg
leave
mov
fisubrl
fcomi
nop
push
sti
lods
jnp
and
lods
sub
js
aad
adc
mov
pop
rolb
rorb
mov
dec
into
sub
push
xchg
and
pop
mov
lret
into
mov
pop
push
pop
xchg
jmp
pop
xchg
fldl
ss
cmp
outsl
or
scas
nop
std
jb
in
cmp
jo
es
loop
push
mov
cmp
fwait
loope
inc
insl
mov
lods
sub
out
lcall
ss
sarl
fimull
fmuls
icebp
nop
dec
adc
jmp
rorl
test
mov
inc
and
xor
dec
inc
out
lahf
fimuls
int
xchg
mov
lea
inc
pop
xchg
xor
es
mov
mov
loop
dec
icebp
orl
notb
lret
jne
lock
xchg
add
data16
jl
xor
mov
das
cmpb
jae
sbb
cmp
mov
bnd
pop
jmp
mov
sar
xchg
jg
cli
mov
jg
mov
cmp
add
fisubrs
mov
mov
xchg
rcrl
mov
clc
mov
in
scas
gs
adc
dec
pop
xchg
xchg
sub
or
pop
xchg
cmp
lret
fcmovnbe
movsl
iret
mov
test
or
mov
gs
lahf
mov
adc
mov
fmulp
push
pop
ret
inc
xor
mov
mov
dec
jg
sbb
scas
mov
ret
sbb
jp
inc
cli
push
scas
fsubs
cmpsl
mov
xor
out
dec
repz
fisubs
data16
in
add
sti
fimuls
out
add
xchg
mov
mov
inc
sub
inc
inc
sbb
jmp
mov
pop
xchg
insb
mov
dec
sahf
aam
cld
in
clc
aad
leave
outsl
fwait
mov
les
mov
loop
add
int
out
mov
cld
adc
daa
pop
and
mov
or
js
mov
mov
lea
lods
add
bound
jae
xor
int3
adc
stos
adc
mov
int3
inc
cmovle
dec
adcb
pop
das
lock
jno
lcall
push
lret
jae
xchg
movl
pop
or
xor
push
jb
push
xor
mov
dec
mov
rorb
cmc
add
test
in
inc
sub
mov
jmp
pop
cmp
jae
push
lahf
mov
sub
jne
aas
dec
lcall
xchg
mov
mov
bound
push
pop
sub
mov
inc
lods
mov
jge
push
sbb
mov
pop
cmpsb
fwait
jg
rorl
jns
push
mov
push
jne
insb
mov
xor
push
aaa
xchg
or
lahf
inc
sarb
arpl
inc
jmp
pop
xorl
cmp
lods
adc
dec
adc
mov
pop
aaa
mov
push
sbb
ret
icebp
xchg
scas
out
pop
xchg
xchg
out
cmp
xor
flds
outsl
mov
outsl
cwtl
adc
xchg
lahf
mov
and
mov
xchg
adc
push
jmp
fcompl
cmp
xchg
in
gs
sub
shlb
dec
add
sub
sub
sbb
inc
aaa
push
xchg
fbstp
mov
adc
test
push
ret
xchg
insl
fwait
inc
sbb
ret
shll
inc
cmp
lahf
jb
lret
std
jbe
arpl
or
or
xchg
xchg
push
jne
mov
pop
push
inc
pop
int3
shr
sub
movsb
adc
scas
es
xor
push
cmp
lock
ljmp
mov
mov
pusha
add
mov
cmc
dec
pop
daa
lret
lds
and
cmpb
shrl
mov
adc
pusha
loope
xchg
push
ret
mov
scas
daa
xchg
add
lret
lods
insl
pop
jno
aad
ret
jge
push
popa
fcomps
mov
adc
lock
fistl
mov
sub
ja
pop
ret
jmp
sub
cmp
pop
cld
mov
testl
cltd
inc
in
fldcw
stc
xor
adc
mov
aam
jl
aad
mov
ret
icebp
xchg
fcmovnbe
into
inc
dec
enter
mov
js
imul
aad
cmpsl
xchg
hlt
popf
out
imul
mov
daa
and
icebp
movsl
mov
frstor
sub
lods
cmp
lea
leave
lret
xchg
mov
xchg
xchg
jp
mov
push
cmp
jbe
xlat
popa
neg
leave
roll
jmp
rclw
inc
cltd
daa
cli
or
mov
xchg
mov
sub
movsl
pop
fs
fdivr
insl
iret
notl
or
xchg
icebp
fnsave
arpl
or
pop
sub
nop
add
imul
js
push
test
add
hlt
lret
std
xchg
loop
insl
push
sbb
into
mov
int3
mov
pop
das
push
cmpsl
cmp
xchg
and
sub
mov
ljmp
xchg
sbb
roll
sbb
fwait
cli
fstp
ret
push
rcll
aam
push
testb
cmpsl
pusha
test
lock
stos
lds
into
lds
adc
cwtl
dec
mov
add
bound
add
bound
xchg
fs
sbb
sbbb
push
stc
in
imul
mov
push
les
fdiv
cmp
inc
data16
in
aam
jl
jb
sub
push
das
fst
push
test
fnstsw
into
xchg
insl
push
inc
mov
xchg
rorb
int3
jmp
inc
inc
out
add
aad
popf
lcall
mov
mov
shlb
pop
test
in
mov
xchg
cld
mul
aas
inc
cwtl
paddb
mov
inc
lods
jg
lods
cmp
das
clc
fldcw
add
jae
aam
and
bound
bound
rclb
jns
jno
ret
sti
outsb
insb
mov
sbb
lahf
aad
stc
stos
fdivp
jge
and
in
adc
xchg
aad
or
cmpsb
hlt
inc
adcl
movsb
data16
adc
test
push
aad
repz
flds
inc
in
mov
loopne
les
pop
movsl
fwait
outsl
pop
and
and
stc
and
cs
in
mov
in
scas
mov
insb
mov
xchg
inc
test
sahf
sub
or
insl
fucomp
pop
and
mov
xchg
add
outsb
pop
mov
dec
xor
mov
inc
mov
xchg
push
pop
aad
cmp
xchg
or
add
inc
movl
pop
insl
mov
mov
adc
popa
data16
add
daa
iret
iret
lea
repnz
jno
dec
call
or
popf
pminsw
dec
dec
stc
inc
out
fistpl
cli
mov
mov
pushf
fstpl
push
jno
mov
mov
mov
je
ss
mov
add
inc
mov
push
or
push
mov
outsl
xor
aad
xor
in
mov
dec
adc
cmp
shlb
or
nop
lcall
xor
in
xchg
xorb
out
fisubl
mov
sti
test
dec
sub
sub
mov
fiadds
adc
push
cwtl
push
adc
scas
mov
sbb
jnp
mov
xchg
mulb
mov
sbb
pop
in
outsb
sbb
xchg
add
lea
xlat
mov
sahf
or
sub
mov
testl
and
aam
imul
cmpsb
shlb
jbe
pushf
add
fsubrs
nop
fbld
subl
fnstsw
cmp
xchg
ljmp
xor
xchg
xchg
cmp
sbb
jp
adc
mov
pop
test
push
lods
lcall
test
clc
dec
mov
ljmp
jno
mov
and
dec
adcb
es
cmpsb
icebp
pop
xor
aad
cmp
and
andb
ds
cmp
jnp
std
rclb
ss
adc
insl
mov
fistpl
in
push
rcll
test
mov
insl
dec
xchg
or
adc
xchg
decb
pop
cmp
in
sub
pop
data16
mov
xchg
lcall
dec
inc
pop
xchg
in
add
push
mov
push
cmc
and
insl
mov
sbb
adc
leave
mov
mov
cmp
addr16
pop
arpl
mov
cwtl
xchg
xchg
lock
lret
mov
in
push
inc
jns
sarl
adc
mov
push
cwtl
movsb
mov
arpl
ds
xor
mov
cmc
dec
mov
ret
lods
bound
sub
test
insl
popa
sbb
aaa
pop
fidivrl
jg
sbb
shlb
pop
fwait
xor
fnstenv
aaa
and
jne
mov
dec
rcrl
insl
dec
fstpl
mov
test
xchg
es
loope
pop
pushf
aad
jecxz
sub
or
scas
aas
in
cmpsl
xchg
mov
dec
and
bound
cli
mov
movsl
fsts
int
cmp
out
cmc
clc
dec
mov
in
jae
xchg
test
lods
fs
cli
addl
loopne
mov
addb
lcall
js
imul
dec
fildl
jno
xorb
leave
ss
push
enter
imul
inc
xorl
and
inc
stos
das
pop
addr16
fstl
es
jae
xorl
lret
sub
xor
movsl
pusha
dec
repz
adc
add
ljmpw
pop
rcrl
and
dec
mov
mov
adc
jo
rolb
ljmp
test
int
mov
aas
pusha
ja
aaa
aaa
jecxz
or
mov
cmp
or
psrlq
mov
jge
push
and
repz
fucomip
push
aad
dec
cld
dec
lret
sbb
popl
inc
mov
xchg
lret
mov
mov
cltd
in
mov
shll
and
movsb
jmp
and
pop
pusha
gs
into
mov
call
mov
push
mov
insb
lcall
mov
mov
xchg
sub
dec
inc
negl
addr16
jb
stc
and
lock
sub
pop
pop
mov
stos
mov
mov
and
cmp
out
dec
pop
pop
sub
fnsave
cmp
or
push
xlat
jmp
pop
in
cwtl
imul
sub
mov
aas
mov
imul
and
mov
jns
cs
pop
xor
scas
rcrl
lret
loope
test
pop
pop
adc
data16
notl
enter
jne
imul
sub
xlat
sbb
ret
sbb
sbb
sar
addr16
hlt
iret
mov
add
test
add
mov
jl
jmp
xor
mov
push
xor
xchg
sbb
push
jne
xchg
dec
adc
xchg
adc
lret
sub
add
mov
jg
jmp
mov
xor
gs
insb
and
cmp
outsb
fnstcw
pop
lds
dec
pop
mov
mov
jg
cmp
daa
and
adc
ss
out
adc
xor
stos
pop
xor
gs
adc
fwait
xchg
dec
xchg
cld
push
xor
addr16
xorb
cmp
push
daa
out
daa
sbb
inc
addr16
mov
mov
dec
pop
call
or
lds
adcl
inc
dec
lcall
ret
sub
aam
rolb
add
inc
std
fbld
into
lcall
or
push
adc
insb
cmc
insb
xor
subb
test
lahf
mov
lcall
insb
mov
mov
rcr
jg
inc
cmc
adc
dec
mov
or
jnp
out
and
icebp
mov
and
sub
in
xchg
inc
dec
cs
and
icebp
test
xchg
cmp
aam
imul
pop
nop
sub
daa
hlt
clc
xor
pop
mov
aas
xchg
scas
adc
ja
or
mov
dec
mov
or
fcmovne
push
mov
push
int
or
mov
movsb
xor
std
lcall
inc
mov
and
pop
pop
cmp
fidivl
cmpb
ficoms
arpl
inc
insl
pushf
jecxz
shll
jo
in
test
fbld
insl
or
or
or
leave
xchg
push
out
lret
inc
mov
leave
out
add
not
shl
mov
adc
add
pushf
push
cmp
add
inc
push
fcompl
and
sahf
outsb
pop
in
scas
mov
arpl
adc
fwait
fiadds
jbe
adc
scas
gs
pusha
push
push
es
pop
cltd
dec
push
jbe
sub
sbb
adc
ror
mov
les
xchg
movsl
test
shlb
jb
mov
cmpsb
in
decb
enter
push
xchg
les
add
adc
sub
lds
add
inc
mov
push
orb
lcall
shll
int3
xor
in
mov
aam
mov
std
aam
lahf
outsl
sahf
mov
ljmp
loope
xchg
scas
in
das
jb
cmp
mov
cmp
stc
cmp
adc
ret
subb
sbb
int3
aam
push
cmpsb
and
imul
pop
cwtl
pop
aam
mov
jnp
lods
cs
mov
push
aas
lret
orb
push
add
fwait
dec
es
imul
ljmp
xor
jae
popf
mov
adc
xor
mov
daa
pop
add
fists
cli
sbb
je
cld
nop
dec
ds
sub
xor
in
fmuls
add
movsl
mov
iret
das
mov
insb
pushf
xor
arpl
mov
jne
xor
sbb
or
insl
imul
push
xor
push
sbb
or
fcmove
pop
mov
push
in
push
pushf
cmp
mov
mov
sbbb
into
mov
test
ljmp
dec
adc
test
cmpsl
insl
sahf
ret
stc
je
and
cltd
pop
insb
pop
and
add
inc
test
sub
inc
mov
xchg
test
cwtl
jo
inc
inc
enter
pop
push
jg
movsb
insb
xor
mov
stc
fs
push
pop
xchg
pop
or
xchg
lds
xchg
dec
and
in
cmp
pop
ja
mov
ret
push
divb
stos
mov
and
pop
insl
loop
dec
adc
loopne
cmp
movsl
mov
cmp
push
fisubrs
inc
cmpsb
add
js
mov
repnz
xor
jno
addr16
jle
inc
cltd
in
mov
fnstenv
push
scas
popf
xor
and
xor
xchg
hlt
adc
nop
push
stc
jnp
mov
mov
nop
mov
popa
rolb
roll
pop
cmpl
add
xor
stos
cwtl
js
mov
fldt
add
adc
test
or
pusha
push
jnp
repnz
push
push
sbb
fwait
test
xchg
data16
xor
pop
repnz
icebp
cmp
xchg
out
das
cmp
cli
outsl
testl
insl
out
push
inc
insb
ret
int3
sbb
and
negl
leave
xchg
or
aaa
cmp
cli
mov
add
jmp
rolb
inc
scas
jl
xchg
lahf
dec
sbb
lods
mov
xchg
arpl
ja
out
dec
sub
push
pop
out
imul
mov
arpl
pop
cmp
jp
mov
sub
lock
loop
fcmovnbe
mov
sbb
std
pop
pop
enter
jmp
fbld
jge
in
das
mov
xor
lods
scas
loope
lahf
insl
xlat
xor
mov
dec
mov
mov
out
loopne
push
jbe
or
mov
hlt
push
shl
fcomps
adc
adc
scas
imul
dec
fcmovbe
dec
repz
int3
dec
es
leave
cmpb
pop
mov
push
pop
adc
lahf
sub
test
cld
inc
cli
aas
dec
mov
rol
mov
xchg
mov
js
jae
sub
pop
cltd
push
xor
and
add
cmpsb
in
xor
adc
pop
lods
cmp
es
lret
dec
xor
push
sbb
sub
movb
icebp
ret
repnz
dec
cmp
hlt
mov
or
sbb
ss
lret
into
push
test
cmpsb
leave
repz
imul
icebp
loopne
push
sub
out
icebp
in
pusha
shlb
stos
cmp
insl
push
decb
std
fnstsw
cmpsl
mov
mov
add
daa
and
push
cmp
daa
out
arpl
adc
scas
mov
cmp
push
pop
cli
repz
lods
ret
mov
push
pop
push
pop
nop
mov
subl
push
in
and
hlt
jbe
xchg
fsubs
mov
sbb
inc
in
mov
jp
pop
and
fwait
jns
outsl
dec
mov
jb
stos
test
fildl
mov
mov
shl
adc
pop
sub
lahf
cs
add
adc
aaa
das
fsts
inc
adc
adc
jmp
ret
pop
jecxz
xor
jmp
loope
mov
or
aaa
out
push
loop
xchg
hlt
cmc
in
xchg
jecxz
jecxz
rol
mov
es
sbb
addr16
dec
inc
rcrl
int
and
push
inc
adc
inc
loope
mov
fs
movsl
xor
pushf
adc
mov
or
pop
xor
test
add
ss
loop
adc
pop
ds
clc
or
fs
das
mov
pop
add
xor
out
cmpsb
add
push
jns
xor
cmc
pop
jge
jle
aam
fidivrl
ljmp
ret
jb
dec
ja
and
cmp
mov
shrb
sbb
in
jo
seto
mov
ror
inc
cmp
insl
mov
fsts
inc
iret
inc
rclb
xor
jbe
pop
insb
movsl
dec
cmp
sahf
jg
push
test
xor
pop
cli
mov
mov
sub
xor
outsb
shll
dec
fs
or
mov
cmp
inc
add
mov
loope
arpl
fdivr
sahf
fs
cs
jno
mov
and
dec
adc
mov
jmp
cli
jecxz
pop
mov
sbbl
mov
xor
ffree
inc
mov
cld
push
xchg
inc
push
mov
sub
std
dec
hlt
loop
pop
ret
cmp
jo
imul
daa
imull
icebp
rcrl
js
fucomi
and
mov
xor
dec
jo
fcmovne
out
adc
cwtl
pop
rclb
adc
dec
mov
or
lahf
ss
add
nop
add
pop
jl
mov
mov
xor
sbb
sti
hlt
lret
push
mulb
fcompl
adcl
mov
xor
mov
fldl
cwtl
punpcklbw
cmp
test
mov
push
aaa
cmpsb
hlt
sbb
xchg
hlt
jge
pop
mov
xor
data16
repz
shl
jle
inc
js
cmc
popf
outsb
mov
pushf
xor
nop
dec
fcomps
daa
lock
mov
sub
lahf
mov
into
mov
mov
xchg
push
shrl
fcmove
sbb
push
out
lret
jmp
fisubrs
cld
xchg
xchg
popa
cli
cmp
ss
stc
movsb
cmc
xor
sub
mov
leave
add
icebp
addr16
xor
dec
jb
lock
inc
mov
jno
insb
lods
jae
fisubl
cmc
iret
mov
inc
aaa
mov
icebp
cmp
jle
iret
ret
and
pop
nop
lcall
adcl
mov
loope
std
and
cmp
bound
sahf
and
repz
stc
cld
stos
imul
cmp
xchg
out
pop
popf
mov
mov
hlt
xor
roll
fldenv
loope
or
dec
and
andb
test
jae
adc
in
stos
add
js
fsubs
cmc
test
push
cmp
enter
lock
pop
stos
add
fdivrl
cltd
mov
push
jle
test
icebp
repz
enter
cli
sti
mov
repz
cld
movsl
add
or
push
mov
push
jne
clc
popfw
inc
mov
xor
inc
addl
cmp
xor
sbb
jle
push
cmc
js
outsb
and
pop
loop
stos
jle
push
pop
pop
iret
pop
adc
mov
inc
outsl
mov
or
test
mov
lret
ficompl
mov
inc
mov
hlt
outsb
inc
or
mov
lcall
inc
dec
pop
in
sbb
shrl
sbb
cmp
push
pop
push
xchg
lret
shrb
test
push
dec
jnp
std
testb
sahf
test
stos
mov
sub
dec
jno
and
adc
enter
pop
pop
sbb
outsl
js
hlt
adc
lods
pop
mull
bound
dec
dec
jns
in
add
pop
xchg
fwait
jp
xchg
aad
inc
jb
cld
and
cmp
pop
pop
outsl
mov
movsb
stos
cmpsb
test
push
fldt
outsb
fidivrl
cmc
sbb
push
push
fcompl
lods
mov
mov
sbb
ljmp
aad
sbb
daa
and
loope
insb
mov
movsl
jle
out
push
cld
std
jg
enter
sbb
stc
lcall
jne
lds
jecxz
adc
jecxz
sub
dec
mov
adc
rcr
scas
sbb
dec
dec
adc
cmp
jno
xchg
dec
push
std
pop
mov
icebp
fwait
shrb
sub
sahf
mov
jmp
sahf
movsb
aad
cmp
jle
subb
mov
fisttpl
inc
sahf
lret
cs
dec
cmp
inc
xor
and
stos
out
mov
fs
mov
iret
cmp
inc
pop
daa
xchg
jb
rorb
xchg
sbb
pushf
fidivs
mov
fdivr
mov
jbe
orl
xor
jbe
jp
iret
xchg
mov
popa
bound
mov
call
dec
inc
cltd
lds
sub
xchg
inc
xor
or
mov
popf
out
sbb
roll
push
out
xor
and
xchg
mov
xchg
daa
cltd
outsb
and
cmp
cmpsb
jb
xor
sub
in
rcr
pop
mov
dec
outsb
call
outsb
sub
cs
mov
sbb
adc
mov
pop
xchg
xor
fsubrl
fs
lahf
push
xchg
dec
jle
mov
xchg
add
adc
dec
addb
sbb
cmp
pop
fwait
pop
sbb
push
sub
jns
push
add
push
xchg
mov
jne
outsl
add
jp,pn
sahf
mov
mov
mov
lret
je
rolb
dec
mov
lea
xchg
fists
lahf
insl
or
mov
jge
lret
inc
jl
test
add
mov
jmp
test
addr16
dec
adc
loop
jle
push
push
add
jl
lcall
pop
xchg
jge
adc
js
push
dec
sbb
fisubl
jbe
pop
testl
cltd
xor
push
pop
fdivrs
cmp
imul
hlt
sub
mov
imul
in
call
mov
sub
push
sbb
in
sub
and
out
push
in
cwtl
cmp
inc
or
ss
inc
ret
mov
dec
iret
cmp
xlat
xchg
std
cmpsl
repz
and
pop
mov
xchg
imul
push
shlb
ljmp
or
addl
jmp
ja
test
aas
adc
push
aas
pop
scas
mov
inc
inc
and
add
aad
sahf
jo
adcb
das
stos
stos
pop
add
xor
mov
push
push
xor
push
sub
inc
pop
cmpsb
inc
cmpsl
pop
adc
sbb
and
mov
mov
fldl
sbb
xchg
or
idiv
fdivrs
xlat
add
scas
enter
dec
or
in
mov
stos
popa
cmp
cmp
popl
lock
divb
rol
mov
push
out
xchg
sbb
xchg
test
jno
cmp
push
icebp
inc
jg
stos
aas
fmuls
pop
push
fcompl
lret
adc
clc
adc
adc
loop
xor
dec
mov
inc
dec
inc
push
aaa
add
push
es
lea
add
xchg
outsl
cmp
mov
mov
cmp
ret
ret
rcll
sar
inc
shll
jg
add
mov
out
jge
pop
shlb
fstl
jecxz
lahf
scas
cmpsl
repz
inc
xchg
pop
insl
jb
and
sub
xlat
pop
into
jle
cmp
push
mov
loopne
iret
inc
push
xor
add
repnz
or
ja
mov
xchg
popf
cmp
pop
push
sub
cmp
enter
sbb
test
aad
and
mov
sbb
sub
lea
movsl
sbb
cmp
push
jl
ror
push
lcall
rcll
lret
repz
shrl
xchg
call
sub
lret
xchg
dec
enter
rolb
pop
ret
mov
xchg
xchg
mov
jns
mov
lods
je
mov
divl
cli
push
inc
push
mov
jl
fs
test
dec
loop
aad
xchg
aam
scas
shrb
xor
push
jb
jne
fsts
ja
dec
xorl
insb
test
ficoml
test
or
push
mov
iret
data16
leave
mov
or
pop
mov
and
push
push
bound
adc
dec
insl
mov
fs
mov
daa
xor
jmp
insb
or
jo
ret
ret
fsubr
push
imul
inc
call
xor
pop
and
icebp
dec
inc
out
sub
dec
lcall
mov
jb
lret
mov
dec
sbb
sahf
or
xchg
popa
lret
test
add
ret
in
sub
mov
inc
mov
cmp
cmp
dec
pop
dec
data16
aad
mov
and
imul
int
loopne
inc
pushf
sbb
add
mov
xchg
in
inc
std
mov
mov
sbb
clc
add
push
sbb
push
push
mov
xor
shrb
mov
pop
or
jle
testl
imul
sbb
rorb
adc
xor
jne
arpl
pop
adc
mov
filds
mov
sub
fnstenv
cmpsb
and
pusha
xchg
pushf
pusha
ja
mov
xor
jp
push
inc
xor
and
sbb
fists
adc
movl
add
in
inc
icebp
ja
push
in
decl
sub
sahf
mov
adc
movsb
xchg
xchg
pop
inc
xchg
ss
pop
mov
sbb
mov
mov
aas
mov
pop
out
sbb
adc
inc
xor
bound
cmpsl
ss
call
and
or
dec
jnp
or
mov
sbb
lret
push
shrl
xchg
add
inc
xor
jp
cmp
imull
cltd
push
fisttpl
lods
insb
dec
jno
jbe
mov
shl
mov
jo
mov
sbb
pop
loope
aam
pop
inc
sbb
dec
push
pextrw
mov
push
jo
leave
mov
dec
mov
dec
stc
sub
outsb
test
rcrl
test
je,pn
cmp
cmp
sub
sub
xor
sbb
jb
sbb
hlt
dec
sub
lret
pop
and
orb
rolb
pop
dec
cmp
sub
and
xor
shll
gs
fiadds
jp
testb
jnp
sar
fs
rcl
scas
jg
mov
mov
sbb
jge
cwtl
das
sarb
mov
cmp
sbb
js
pop
dec
dec
and
sub
mov
and
test
dec
bound
dec
or
jle
mov
into
lcall
lea
cmp
in
cmpb
aam
shl
mov
or
inc
xchg
or
mov
xlat
xor
xchg
mov
shlb
mull
sbb
or
dec
sbb
ret
pop
cmp
cmpsl
cli
adc
and
sahf
push
inc
rclb
sbb
push
mov
imul
cmpsb
frstor
and
cld
cmpsl
icebp
pop
ficoml
lret
ret
clc
add
push
push
sbb
es
bound
push
xorl
add
mov
xchg
mov
mov
jmp
or
loopne
icebp
hlt
inc
jne
sbb
sbb
mov
or
lcall
sub
add
cmp
or
sbb
sbb
xchg
shrl
jmp
in
rclb
inc
call
jbe
ja
or
cmpsb
sub
xchg
mov
cmp
mov
sbb
test
or
pop
lods
pop
repnz
lret
sbbl
stos
testb
mov
inc
pop
push
ds
jne
mov
testl
bound
scas
das
or
das
fists
push
dec
jns
nop
inc
inc
mov
scas
ret
mov
ljmp
cmpb
cmp
lds
ror
xor
test
cmp
and
test
int
lea
mov
gs
cmp
daa
movsl
mov
add
push
sbb
inc
jo
mov
push
sbb
push
xchg
cmpsb
add
xor
jns
xchg
repz
adc
sahf
loop
scas
sub
pop
add
inc
pop
add
rcrb
mov
xchg
imul
imul
or
pop
dec
dec
mov
aam
lock
addl
mov
inc
mull
test
adc
xlat
add
test
add
pop
mov
or
pop
push
imul
sbbl
adc
sbb
add
push
in
or
test
xchg
push
test
jne
mov
test
add
data16
add
insl
and
xlat
adc
jbe
xchg
push
mov
movsl
xor
int
jne
jmp
out
loope
jge
add
sub
enter
stos
mov
dec
in
push
xor
les
sti
xchg
or
fsubl
adc
adc
outsl
aad
movsl
stos
mov
pop
fwait
push
lret
push
lds
xchg
popl
jl
stc
ret
icebp
sbb
lahf
jmp
fcomi
xlat
push
out
popa
enter
nop
xor
push
adc
insb
or
mov
addr16
sub
dec
pop
leave
cmp
dec
mov
mov
add
jp
xlat
call
push
xor
cmp
pop
mov
ss
das
sbb
cmp
aaa
cli
pop
mov
into
push
rcrl
je
dec
inc
cmpsl
mov
xchg
xchg
jl
sbb
arpl
adc
loop
nop
add
lock
lea
push
pop
out
jg
mull
mov
pop
mov
stos
insl
icebp
in
lahf
or
xchg
mov
pop
repz
xor
aaa
mov
xchg
push
dec
adc
inc
imul
imul
outsl
sbbl
movsb
adc
jo
push
gs
mov
fsubl
jge
jnp
sbb
mov
ljmp
test
pop
jle
sub
les
pop
jb
and
ret
and
cmp
sti
push
insb
adc
and
clc
add
jmp
jg
cwtl
jmp
out
cmp
aas
push
push
in
enter
jo
push
xchg
dec
inc
out
add
repz
xor
hlt
jns
cwtl
cmp
adc
xor
jno
xor
sarl
test
fsubr
sub
xlat
cmpsl
sub
loop
inc
jno
cmpsb
dec
add
sbb
out
pushf
hlt
sti
xor
add
and
xchg
pop
mov
cmp
arpl
and
lock
fisttps
arpl
je
call
add
adc
dec
pusha
arpl
adc
lret
adc
push
jo
jns
mov
sbb
jns
idivb
pop
and
add
pop
or
stos
jo
sbb
lods
imul
inc
xorl
mov
loop
lods
jle
or
add
xchg
stc
add
jbe
cld
cmp
mov
imul
lret
stos
pop
cmp
jb
pop
xrelease
xor
jbe
push
mov
inc
dec
pop
pop
xchg
inc
icebp
mov
rolb
jnp
sbb
bound
xor
cmpsb
addr16
cmp
lock
stc
sub
inc
or
je
idivb
cmp
das
js
or
fdivl
inc
sub
ss
add
add
jbe
shl
cmp
pop
inc
and
jl
inc
add
icebp
jne
or
int3
inc
fiadds
adc
sbb
sub
mov
in
inc
ret
push
sbb
mov
movsb
repz
jae
inc
jmp
jae
leave
mov
cmp
lds
mov
shrb
and
jbe
mov
push
jle
lock
aas
es
test
or
add
fsts
stos
bound
addb
add
int
dec
pop
xor
cmpsb
js
sbb
jno
mov
xor
inc
push
pop
iret
int3
test
mov
loop
or
xor
ds
scas
nop
pop
mov
aas
stc
dec
out
scas
dec
inc
rol
dec
xor
ror
add
sub
inc
ja
int3
daa
push
mov
pop
aas
mov
cmp
lret
pop
push
prefetch
mov
or
jbe
push
mov
in
loopne
push
aas
jne
sbb
ret
jne
js
xchg
sub
jae
push
and
mov
mov
xor
cwtl
xor
and
push
out
lea
sub
aam
and
xchg
daa
pop
jmp
pop
mov
push
push
fcoms
repnz
mov
and
out
stos
mov
setbe
ret
pop
xor
fimuls
mov
jne
sub
adc
xchg
push
pop
inc
add
jo
in
test
into
xor
mov
scas
jnp
test
mov
fnsave
fists
xchg
or
add
jns
call
mov
aad
sbb
loopne
cmpsl
jg
inc
jle
imul
xchg
xchg
ljmp
lcall
xchg
adc
sub
test
and
sti
inc
cmp
xor
test
sar
inc
popf
gs
sub
sahf
inc
shrl
push
xchg
shlb
mov
es
int3
mov
add
lcall
dec
cmp
jecxz
fwait
mov
fcompl
push
sahf
and
inc
jns
cmpsb
mov
iret
int
stc
and
pushf
mov
out
rorb
mov
sbb
and
mov
xor
xor
je
adc
cli
cwtl
aaa
adc
and
mov
push
or
test
mov
or
mov
add
jo
lret
cmc
and
imul
pop
and
fsubrs
push
pop
fdivs
mov
in
leave
mov
jns
push
and
mov
gs
cmc
call
add
pop
shrl
jne
push
les
push
adc
or
in
cs
mov
add
inc
lods
cmpsb
and
dec
ret
or
cmp
push
inc
adc
sub
push
fst
aad
nop
lods
sub
pop
aas
pop
or
cmp
scas
test
dec
and
fsubrl
pop
out
lea
lea
into
out
push
test
jl
jg
stos
pop
jae
popa
es
push
jmp
and
mov
fistl
sbb
jl
ret
cltd
cmp
stos
iret
lret
fdivr
inc
mov
push
xchg
out
les
bound
add
rep
mov
fwait
push
add
icebp
mov
jae
mov
lods
lahf
mov
jbe
mov
bound
add
rcll
scas
repz
xchg
cmpsb
mov
popf
mov
leave
out
fcoml
aad
sbb
push
mov
out
dec
add
ffree
dec
and
adc
adc
xchg
dec
fldl
loop
and
cs
xor
jnp
stos
jae
sbb
or
daa
mov
rcr
imul
add
loope
lahf
push
mov
mov
mov
insb
dec
mov
jp
xchg
outsl
mov
ss
aad
lods
jge
mov
inc
imul
js
scas
outsb
jmp
rcrl
or
addr16
adc
lods
aad
xor
mov
adc
in
jne
int3
or
add
push
adcl
in
scas
dec
stos
in
add
dec
insl
xchg
xchg
mov
jecxz
pop
movl
arpl
jo
dec
int3
dec
js
jbe
pop
fnsave
add
push
movsb
dec
sti
std
xchg
fwait
adc
popa
mov
inc
jl
xchg
mov
shrb
pop
mov
loop
fucom
pcmpeqd
mov
addr16
xor
sar
inc
and
stc
mov
mov
fisubrl
mov
aad
push
lcall
mov
sbb
aas
mov
push
mov
es
shr
pusha
xchg
aas
fstl
movsb
test
insl
adc
gs
adc
lods
out
loop
sbb
push
je
pop
mov
mov
rcrb
jo
je
pop
and
stc
int3
and
in
arpl
cld
lds
out
or
sub
mov
out
clc
xchg
adc
push
and
jo
mov
fildl
in
sbb
xchg
ljmp
lret
inc
out
out
ret
ret
lret
cwtl
and
lock
pop
scas
add
fcmove
int3
movb
cmpsl
and
sbb
mov
movsl
pop
xchg
cmp
lods
out
sahf
jbe
loopne
push
jbe
lcall
shr
sub
frstor
jae
je
flds
mov
lds
mov
mov
es
mov
jnp
leave
push
testw
in
xchg
stos
sbb
mov
mov
inc
pusha
leave
sub
mov
ret
pop
ss
jns
ret
xchg
test
push
js
mov
cmp
mov
ficomps
mov
fdivl
xor
mov
incl
movb
mov
push
push
out
stc
icebp
add
push
mov
cs
rolb
leave
scas
mov
int3
or
shl
cmp
ljmp
pop
ret
addr16
adc
ljmp
repnz
or
push
cmp
ret
and
adc
lahf
xchg
or
ret
gs
std
movsl
pusha
adcb
movb
rcrl
and
idivl
or
adc
out
call
lret
aas
cs
cvttps2pi
push
mov
mov
or
mov
push
dec
sti
loope
lock
inc
lahf
outsb
or
xchg
pushf
pop
dec
lahf
ljmp
xor
rcrb
inc
sub
ljmp
sti
add
mov
sbb
cld
nop
and
repz
jmp
mov
sbb
add
scas
push
mov
cmpsl
cmpsb
and
or
outsb
pop
or
inc
mov
fdivs
xchg
es
jae
lret
jmp
mov
lea
jne
add
xor
aaa
movsl
or
call
sbb
adc
xchg
sub
and
lahf
dec
sub
imul
out
test
ret
and
cmp
sbb
mov
dec
push
stc
xchg
dec
les
jns
jb
mov
and
nop
cmp
cmpsl
or
mov
xchg
or
pushf
test
incl
adc
sbb
nop
mov
clc
leave
or
loopne
sub
in
xchg
or
rclb
mov
fwait
out
xor
sub
testb
jl
mov
pusha
shr
mov
push
cmp
mov
xchg
mov
dec
out
sbb
imul
sar
sbb
cld
or
push
daa
clc
data16
jae
mov
xor
adc
addb
xor
mov
dec
add
add
or
outsl
ret
outsb
arpl
sub
dec
mov
adc
xor
lea
pop
push
ljmp
repnz
cs
dec
lods
cmp
data16
pop
mov
add
jp
icebp
mov
xlat
fidivs
or
stos
clc
pop
jno
scas
es
pop
lods
xchg
cmp
negb
mov
rclb
inc
lret
mov
dec
mov
pop
mov
sub
push
mov
mov
lret
arpl
pop
data16
lahf
cmp
push
dec
pusha
repz
push
add
xor
fnstenv
je
int3
sbb
in
incb
dec
jmp
dec
add
dec
xor
dec
jne
mov
lods
je
leave
pop
xor
adc
cmp
lahf
std
mov
rclb
insl
lds
adc
inc
mov
adc
cs
add
mov
pusha
fdivr
mov
dec
popf
adc
cmp
sarb
inc
out
fwait
add
push
push
test
mov
cmpsl
xchg
icebp
je
lods
fstpt
mov
jbe
ljmp
pop
pop
mov
push
jb
add
xchg
dec
enter
and
pop
pop
int3
xlat
xor
movsb
insb
xchg
in
gs
sbb
xchg
inc
xchg
les
mov
xchg
iret
pop
aam
mov
push
scas
sahf
add
adc
adc
jg
adc
fiaddl
fwait
push
mov
int3
cmp
lods
adc
cmp
stos
mov
lahf
pop
ja
inc
fwait
popa
adc
add
sbb
xchg
jo
sar
das
aaa
cmp
push
cwtl
repz
jae
mov
jmp
js
mov
ljmp
xchg
xchg
fwait
insl
loope
mov
inc
enter
add
hlt
lahf
xor
addr16
ja
ret
out
gs
lock
jnp
cmp
or
movsb
pop
pop
mov
or
push
mov
xchg
inc
popa
pusha
sti
rclb
mov
cmp
or
gs
bound
sahf
push
loopne
xor
aad
xor
inc
ja
in
mov
jnp
test
bound
incb
xchg
xchg
and
add
pop
sub
cmp
pop
into
xchg
loopne
inc
clc
loope
ds
push
fistpll
cmp
xchg
rol
cmp
popf
dec
loope
dec
cmp
outsb
xchg
xor
xor
les
adc
lea
xor
push
aas
ret
fnstcw
and
lret
dec
jnp
push
xlat
mov
and
pop
pop
xchg
imul
cmp
cmpsb
xor
sbb
mov
mov
fnsave
je
scas
fwait
and
dec
das
push
out
lods
pop
mov
or
jne
sarl
les
dec
push
xlat
cmp
inc
movsl
addr16
xchg
lcall
mov
cmp
pop
push
lahf
ljmp
mov
repz
xchg
sbb
mov
dec
mov
outsl
std
dec
stos
sbb
ret
lods
ja
leave
mov
sbb
adc
fdivl
outsb
mov
push
mov
dec
cltd
jmp
mov
cmp
inc
shlb
sub
pop
adc
out
ss
adc
mov
xchg
shll
repnz
loopne
cmp
jmp
ja
cmp
add
popa
pop
pop
icebp
cmp
loop
bnd
and
push
aaa
lods
fsts
dec
mov
inc
movsb
dec
mov
ret
hlt
in
int
shr
stc
out
pop
in
ss
mov
ja
jne
insb
jmp
loope
mov
or
imul
xchg
or
mov
cmp
dec
lock
inc
nop
int3
ljmp
mov
push
repnz
aaa
jle
adc
adc
mov
mov
xor
push
adc
std
sub
sub
jbe
push
inc
jns
insb
andb
addr16
xor
mov
aad
jnp
xor
in
test
jmp
incl
insl
add
push
test
adcl
cltd
xchg
mov
stos
iretw
adc
ret
js
negb
or
mov
stc
xlat
movsl
insb
ljmp
fistps
imul
inc
lock
leave
xchg
ja
adc
scas
ljmp
xchg
scas
addr16
arpl
pop
add
sub
pusha
cli
sarb
popa
adc
imul
fistps
xor
outsb
mov
test
popf
es
mov
ja
lds
cmp
negb
out
repnz
xchg
aas
fmul
push
ret
pop
cmpb
jae
inc
adc
dec
cmp
loopne
fiaddl
lea
notl
pop
lcall
repz
scas
imulb
and
jmp
sbb
sub
inc
sub
jp
daa
stos
shrl
cmpsb
into
out
add
stos
xchg
xchg
xorb
fucomp
inc
pushf
loop
inc
sarb
lcall
sti
mul
bound
pop
les
adc
mov
loop
icebp
pop
xor
and
mov
mov
fisubl
and
ds
cmp
imulb
movsb
jne
pop
test
fsubrs
adc
xor
js
mov
sti
mov
hlt
popf
mov
je
mov
cmp
push
nop
pop
sti
in
sti
push
cmp
out
inc
push
cmc
pop
repz
dec
aas
mov
lcall
pop
idiv
cmpsl
clc
adc
popf
rolb
inc
mov
outsl
fadd
xchg
outsb
in
std
test
sarl
es
mov
adc
mov
or
inc
or
sub
xchg
fnstcw
loopne
inc
daa
pop
cs
rorb
lret
leave
lcall
imul
adc
pop
scas
mov
ljmp
adc
insb
lds
mov
jnp
pop
jbe
stc
or
mov
mov
repnz
mov
in
jo
xor
dec
test
cmp
add
adc
or
mov
ret
inc
dec
ja
dec
imul
mov
add
push
insb
sbb
inc
out
dec
push
lret
pop
fnsave
imul
xlat
pop
sub
inc
imul
sbb
pop
jns
xor
sbb
stc
loope
pusha
mov
adc
into
outsl
bound
cmpb
or
lock
cmpl
scas
mov
call
pop
cs
stos
repnz
js
cmp
in
pop
and
xor
jge
in
ret
xor
cmc
cmp
divb
sub
cmp
cmpsl
mov
add
jnp
or
mov
inc
pushf
fstpl
lods
stos
pushf
push
out
aas
test
mov
loope
push
adc
xor
aam
pushf
rcrl
rcrl
push
mov
scas
sub
loop
addr16
pop
dec
ss
mov
sbb
test
aaa
int
cmpsb
outsb
fistl
std
jo
data16
push
lret
xor
sahf
fyl2xp1
mov
xlat
lret
int3
shll
sbb
pusha
pop
jmp
ret
push
adc
xor
inc
in
lods
jp
cli
adcb
adc
popl
testl
inc
out
imul
and
xor
js
and
jb
push
iret
jns
xchg
push
or
sub
mov
dec
and
cli
in
ret
sbb
push
xor
xor
xor
push
rcll
pop
and
out
xor
pusha
and
mov
aad
and
gs
popf
lret
push
sti
sahf
test
test
test
xchg
jmp
test
push
in
mov
adc
sub
iret
cli
nop
fdiv
shl
sbb
jb
fs
dec
rcrl
imul
mov
loop
adc
lgdtl
in
cmpb
cmpl
stc
aad
inc
out
sub
movsb
adc
mov
mov
xlat
xchg
mov
xchg
je
adc
stos
cmpsl
and
das
and
push
mov
cs
out
jecxz
movsl
repnz
mov
sub
or
push
xor
dec
lock
imul
mov
mov
push
mov
mov
mov
push
push
sub
dec
xchg
mov
dec
push
leave
inc
lods
daa
pusha
inc
enter
push
lahf
test
fsub
push
out
lret
js
add
sub
and
movsl
dec
push
stos
or
pop
orb
cmc
cmp
rcll
pusha
outsb
sub
or
mov
mov
sbb
fwait
ja
sub
jp
push
push
orb
loope
cmp
daa
inc
imul
shll
jo
dec
repz
inc
sahf
leave
test
imul
test
adc
pop
dec
adc
imul
movsb
xchg
js
mov
dec
add
pop
sahf
lret
adc
lahf
lds
sub
int
ret
js
mov
mov
repnz
int
movzbl
fsubrl
dec
je
inc
ljmp
mov
xchg
rcll
pop
loopne
add
insl
pusha
jb
scas
cmpsl
or
repz
jl
fldl
sbb
mov
push
test
shrl
sub
aam
pop
push
ficomps
out
test
mov
dec
and
aaa
in
mov
gs
inc
mov
in
add
jecxz
xor
cmc
scas
or
pushf
xchg
ss
dec
mov
into
or
pusha
ds
push
xchg
cmp
jnp
sbb
andb
sbb
sbb
movsb
cld
or
insb
cs
test
bound
out
xchg
addr16
pop
push
daa
fsubrl
lods
sbb
push
push
pop
pusha
inc
xor
push
jg
in
repnz
xor
jmp
pop
or
dec
pop
push
enter
push
scas
push
mov
enter
mov
clc
adc
mov
dec
mov
iret
test
jle
jecxz
inc
fs
enter
stos
data16
ror
mov
dec
lods
sub
lret
cmpl
bound
jle
or
out
lahf
mov
rclb
pop
sbb
mov
stc
push
pushw
test
xor
mov
lcall
imul
push
sbb
xor
test
pop
mov
pop
mov
lea
pushfw
lret
pop
div
and
into
dec
push
push
stc
dec
fxch
fwait
xchg
jb
fistpl
or
jbe
divb
test
inc
mov
sbb
cld
in
js
adc
add
cmp
and
sub
mov
popl
aad
loope
xchg
lret
fmul
lds
mov
in
cs
fiadds
pop
mov
jno
mov
inc
xor
jmp
test
mov
fcomp
testb
shll
repz
xchg
shrb
ss
in
popa
sarb
push
mov
add
fdivrp
dec
adc
xor
mov
mov
in
test
and
mov
mov
add
filds
out
dec
xor
push
fs
dec
fsts
stos
and
sbb
aaa
adc
enter
iret
nop
dec
sbb
stc
push
inc
out
hlt
dec
jge
inc
mov
mov
and
shll
lea
movsl
xchg
mov
js
xor
shrl
xor
mov
frndint
ja
cwtl
mov
ja
sbb
ret
repz
mov
push
scas
mov
inc
jle
data16
loope
ja
stos
mov
pop
pop
push
movq
sarl
sbb
sub
dec
movsl
inc
dec
lock
mov
daa
mov
js
push
and
adc
ss
ljmp
mull
int
out
push
call
call
aas
mov
subl
sbb
bsr
fcoml
out
inc
cmp
lock
push
mov
inc
push
nop
in
rorl
mov
mov
mov
or
push
es
jnp
push
dec
jecxz
hlt
push
call
fs
lock
cmp
dec
mov
push
add
cmp
nop
xlat
ficomps
int
scas
pop
adcl
xor
sub
stos
test
ja
xor
fwait
sbb
movsb
cmp
and
pop
jp
fisttps
ret
aam
repnz
push
movsl
stos
mul
cmp
cmpsb
mov
xor
and
or
push
pop
xor
bound
or
ljmp
sbb
in
jb
repnz
mov
inc
xchg
mov
jae
push
xlat
sub
ret
mov
andl
cmp
popa
jb
jecxz
aaa
jg
sbb
inc
lahf
call
sub
into
push
dec
jbe
mulb
push
adc
push
cwtl
cmp
inc
daa
add
pop
pop
cmp
sbb
inc
loop
das
pop
je
fnstsw
sti
mov
adc
pusha
cmp
inc
mov
dec
mov
adc
adc
mov
jne
js
xlat
cmp
adc
orl
sbb
xchg
and
xor
dec
xlat
cltd
dec
mov
xor
cmp
xor
adc
sbb
xchg
inc
lcall
insl
sbb
fstpl
cmc
sbb
das
mov
adc
xchg
xchg
sub
lcall
rorb
sub
push
adc
push
fistps
out
cmp
testl
sub
mov
jo
stos
jnp
sub
mov
enter
out
aas
adc
dec
sub
and
push
loop
adc
cmp
out
push
in
add
js
rorb
cltd
scas
jge
jo
cmp
in
in
mull
pop
jecxz
xor
and
mov
sub
xor
in
ret
inc
xchg
mov
lods
mov
and
inc
arpl
mov
inc
xor
andps
or
xor
add
lcall
xchg
lods
pop
mov
jo
lret
and
sub
add
xchg
mov
cmpsl
dec
push
jg
outsb
ffreep
inc
ficoml
sarb
popa
xor
andb
pop
pop
add
mov
xlat
addr16
adc
js
fisttps
sbb
data16
pusha
dec
out
add
int3
dec
pop
pop
jnp
and
mov
pusha
dec
popa
push
add
or
and
fwait
je
cmpb
adc
and
rcr
pop
inc
in
cmp
dec
push
in
into
cmc
outsl
mov
dec
shlb
adc
rcrb
cli
jecxz
cmp
xchg
cltd
push
mov
movsb
cli
pop
sbb
xor
movsl
mov
mov
push
mov
or
xchg
mov
call
pop
cmp
xor
fnstenv
mov
rcrl
movsl
fiadds
or
sbb
movsl
jns
mov
and
shlb
test
imul
hlt
pop
xor
pop
jle
das
dec
les
cltd
aaa
xchg
mov
xorl
inc
and
lds
repz
test
sbbb
dec
lods
push
insl
fcompl
or
inc
pop
xchg
das
fcmovnb
mov
pop
sub
mov
loopne
hlt
push
push
cmc
xchg
lcall
scas
adc
xor
mov
push
push
rorl
andl
adc
dec
inc
xor
dec
sahf
test
xchg
adc
inc
arpl
and
xor
xchg
aaa
jl
cwtl
js
add
or
cmpsb
jo
xlat
pop
xlat
adc
in
adcb
add
test
mov
push
xchg
fistpl
or
andl
jbe
inc
imul
jmp
adcb
pushw
in
je
jbe
dec
out
pop
mov
mov
test
loopne
mov
mov
mov
scas
and
xchg
aas
push
dec
jne
cs
xchg
sarl
movsl
cmp
out
fists
mov
shlb
aad
orb
mov
movsl
add
mov
pop
or
pop
mov
movsl
mov
popa
imul
out
mov
lcall
xor
test
cli
adc
into
cmp
pop
or
mov
ljmp
xchg
pop
faddl
mov
stc
mov
mov
cmp
rorb
filds
lcall
mov
lahf
lock
sub
add
mov
mov
mov
push
and
push
jno
rcrl
insl
xor
xchg
push
push
cwtl
clc
int
mulb
repz
fisttpl
sti
insb
jae
sbb
pop
mov
lret
push
leave
scas
pop
into
jnp
test
cs
pop
xchg
in
mov
inc
addr16
aas
add
sti
data16
call
leave
insl
bound
and
arpl
and
dec
sbbl
daa
out
inc
movsb
xchg
inc
dec
pushf
pop
cmp
out
push
pushf
stos
cmp
stos
cmpsl
ret
aas
push
jno
andb
iret
cmpl
or
mov
sahf
adc
lret
sarb
popl
dec
add
jae
and
lock
inc
repnz
dec
jns
loop
push
incb
jo
aas
addr16
fwait
jno
xor
test
hlt
push
xchg
ss
xor
xchg
iret
or
stc
fwait
mov
mov
popf
rcr
movsb
ja
push
xor
mov
ret
lret
sbb
jp
sbb
es
in
add
mov
nop
ds
sub
lret
les
in
push
rcl
xor
pop
fdivl
faddp
mul
shlb
pop
out
push
cli
into
dec
pop
push
sti
andb
jne
mov
addb
aam
pop
push
cmp
lret
sbb
xor
int3
sub
insb
stc
popa
mov
or
test
clc
inc
and
sub
cmc
xchg
clc
jno
ja
aam
jle
in
adc
push
into
idivl
sbb
fstpl
sub
in
scas
xchg
adc
scas
jecxz
mov
add
movsl
cld
ret
push
popf
sbb
mov
ds
sbb
pop
fsubrl
enter
das
ja
rclb
aas
sub
mov
add
cmpl
ds
stc
add
push
sbb
into
icebp
pop
pop
add
pop
xchg
fstps
jb
std
shll
sbb
ja
cmp
mov
jo
xor
or
jecxz
xchg
mov
loop
int
mov
test
mov
test
jno,pn
sbb
in
pop
and
inc
andb
push
xor
sbb
add
pop
sbb
shll
push
mov
fdivs
inc
and
rorl
jmp
call
ss
add
sub
xlat
mov
js,pt
cmp
add
mov
xchg
les
cmp
or
inc
xlat
icebp
pusha
push
or
out
push
sbb
in
xor
push
inc
xor
std
xor
lods
add
adc
jg
cmpsl
loope
ja
enter
cmpl
sub
and
jecxz
add
ds
stos
sub
pop
mov
adc
mov
fs
outsl
in
mov
in
lds
hlt
enter
out
jns
fcmovbe
pushf
lret
mov
ret
das
dec
shr
xchg
fsts
sahf
and
sub
dec
pop
std
adc
mov
push
cwtl
adc
mov
scas
mov
mov
scas
jb
jns
inc
loopne
je
dec
jns
add
orl
inc
and
push
lcall
pop
jo
jecxz
dec
fsubrp
test
dec
push
cwtl
cmp
xchg
sub
ret
or
cmc
aam
into
sti
xchg
repz
inc
push
add
je
pop
filds
push
and
test
ret
lret
sub
xor
outsl
xchg
xchg
pop
inc
dec
scas
mov
jbe
jne
xor
pop
pop
push
and
sbb
mov
pop
test
fisubrs
mov
push
pusha
inc
lea
pop
dec
repz
lods
mov
mov
push
mov
out
fidivl
mov
sbb
ficomps
cltd
mov
daa
inc
fistpl
cwtl
scas
xor
and
push
call
mov
jnp
or
dec
fstp
lods
enter
and
into
add
out
push
mov
ret
add
lea
jnp
nop
das
push
pop
adc
out
push
xchg
out
fadd
pop
aad
jecxz
mov
and
lock
fs
and
pop
and
lock
dec
mov
jmp
out
mov
shlb
push
loop
push
or
jecxz
adc
jne
pop
das
adc
dec
mov
cld
push
sub
popa
sbb
shll
dec
aam
stc
mov
inc
cmp
xchg
clc
jne
mov
mov
push
lcall
add
dec
push
dec
movsl
mov
sub
ds
lds
jns
aad
xchg
loop
bound
jecxz
nop
jb
popf
inc
and
cmp
add
leave
mov
push
popa
in
fmull
leave
movsb
xor
mov
inc
in
lret
fsts
sbb
arpl
mov
ljmp
lds
fdivrl
push
cwtl
out
shll
sbb
push
daa
inc
jae
adc
mov
test
sbb
imul
movsl
lahf
test
movsl
mov
loope
imul
mov
test
mov
sti
lret
push
outsb
lcall
jp
test
test
xchg
or
cmp
dec
inc
xor
mov
stos
arpl
sahf
test
sub
stos
testb
mov
mov
mov
dec
sbb
and
add
insb
sub
and
mov
jae
movsl
lret
mov
pop
rcrb
mov
mov
flds
or
gs
and
das
sbb
testb
jmp
aas
icebp
mov
adc
sub
add
mov
jo
mov
inc
fildll
xor
mov
adc
pusha
xchg
int3
popf
and
filds
aam
test
cld
push
push
iret
push
pushf
add
ror
repnz
mov
mov
stos
mov
push
jnp
jne
js
sub
cs
pop
jecxz
sti
pop
sbb
mov
push
icebp
jge
outsb
aas
or
push
and
jge
xor
popf
leave
out
out
shl
cli
push
sbb
fwait
cmp
sbb
jp
jno
imull
leave
lds
movsb
popf
xor
fiaddl
mov
cld
add
push
xchg
bndstx
outsl
loope
rdpmc
mov
add
pop
outsb
pop
dec
and
pop
sahf
and
dec
repz
pop
xor
push
pop
cmc
into
sahf
or
jp
xchg
pop
imul
popf
inc
mov
repz
and
or
add
lahf
repz
in
xchg
int
test
add
arpl
lret
inc
rcrl
aam
add
lret
push
sti
mov
aaa
jns
mov
lcall
mov
nop
mov
sahf
sub
insb
lcall
jmp
add
jg
out
and
push
bound
dec
mov
dec
stc
inc
gs
mov
jno
aam
inc
int
shr
sbb
addr16
push
test
aam
movl
cmp
insb
cmp
pop
and
lock
and
mov
dec
and
insb
mov
adc
lret
push
add
push
inc
cmp
xchg
mov
pushf
inc
cmpsl
ret
inc
inc
xor
cmpsb
and
push
add
mov
pop
mov
cs
lock
pop
nop
add
addb
fs
jmp
pop
mov
mov
and
es
addr16
xchg
rclb
pushf
jne
mov
cwtl
shl
xor
dec
scas
mov
out
dec
cmpxchg
stos
nop
sub
test
icebp
xor
ret
inc
ljmp
divps
dec
clc
leave
insl
lret
xchg
mov
xchg
and
inc
popa
mov
mov
out
outsl
pop
xor
stos
popa
insb
scas
and
push
inc
lret
pusha
cmp
test
sbb
jecxz
je
xchg
pop
fisttps
pop
popf
fidivrs
in
fimull
insl
inc
dec
sahf
push
inc
add
popa
shll
mov
clc
decl
test
addl
inc
pusha
test
cmp
mov
inc
xchg
loopne
jg
ss
mov
jg
clc
sahf
pop
sbb
xchg
mov
popa
pop
inc
jnp
sub
test
in
je
sbb
push
pop
pop
mov
push
xchg
xlat
jge
xchg
cmp
pusha
or
or
pop
xchg
xchg
lret
sub
sbbl
mov
ljmp
insb
loopne
mov
in
or
stc
shl
je
dec
arpl
arpl
hlt
daa
gs
xor
xchg
cwtl
popf
into
adc
xor
adc
mov
fidivs
data16
scas
xchg
lahf
push
and
mov
addr16
loop
fs
xor
icebp
jne
push
cs
or
or
pop
popa
cmp
or
jl
cmp
arpl
push
leave
sahf
arpl
sbb
mov
es
sub
into
fnstsw
add
push
sub
jb
imul
negl
push
fisttps
lea
aas
cmp
add
push
dec
fbld
cmp
into
inc
adc
jo
inc
js
fsubrs
popf
xor
or
push
lret
cwtl
and
ja
fs
push
sbb
ljmp
adc
mov
out
mov
dec
xor
cwtl
int3
hlt
fwait
add
insb
pop
mov
icebp
adc
add
cmp
inc
shrb
mov
pop
pop
sbb
gs
sub
pop
adc
mov
mov
sbb
and
push
dec
or
enter
test
test
sbbb
sarl
ret
push
cmc
jg
clc
jne
test
addr16
and
arpl
pop
stos
pop
cltd
gs
loope
sbb
scas
jnp
loope
pop
dec
mov
mov
mov
adc
pop
mov
push
xor
popf
add
and
cld
push
or
and
fidivrl
fstps
lea
clc
push
pop
mov
cmpsb
shrb
pop
aaa
mov
aam
sub
add
adc
inc
inc
fldcw
lcall
loopne
mov
pop
imulb
xor
mov
and
mov
jns
int3
cmpsb
or
and
aad
xchg
ret
inc
fistps
mov
inc
push
add
xor
jne
inc
jmp
lret
add
inc
pop
in
insb
pop
out
jae
push
xor
addl
xor
rcll
mov
jne
push
ljmp
mov
and
pop
in
cli
js
popf
pop
sbb
mov
mov
test
mov
scas
in
int3
adc
add
lahf
sarl
adc
or
mov
mov
pop
mov
pop
mov
push
nop
aam
and
add
out
push
mov
add
dec
lcall
inc
out
cmp
sbb
mov
fdivs
cmc
testl
call
shll
inc
jne
in
mov
test
jle
jmp
arpl
pop
xor
sub
std
xchg
movsl
loop
xchg
xor
pop
cmp
jle
add
cli
aaa
cmp
loop
cmc
jg
enter
adcb
pop
mov
cmp
adc
mov
out
inc
ucomiss
insb
inc
in
cmp
into
in
dec
stc
mov
add
push
sbb
stos
xchg
test
add
lcall
add
subl
add
in
dec
call
adc
loopne
inc
jge
adc
push
lods
xchg
jmp
mov
mov
pop
jo
or
les
mov
shrb
jo
xor
data16
xor
cwtl
cmp
das
stc
aad
es
sbb
js
cmp
cmc
push
cmp
daa
fidivrs
aaa
ljmp
bnd
pop
es
mov
hlt
je
repnz
sahf
cmp
pop
push
push
mov
sub
mov
ret
stc
or
mov
incl
rcr
pop
pop
jg
sbb
adc
lahf
test
sub
push
add
aaa
insl
inc
mov
shrb
dec
aaa
add
add
push
mov
xchg
jo
mov
sbb
or
imul
jp
cmp
pop
mov
cmc
fdivs
add
cmpsb
push
cmc
out
inc
xchg
rorb
in
mov
loope
sarl
out
je
rol
mov
xlat
rclb
sub
dec
jge
lods
repz
mov
mov
or
dec
fwait
xor
push
je
ss
pop
sbb
inc
sbb
jle
ffree
je
xchg
movsb
pop
mov
fcomps
inc
mov
dec
shll
iret
hlt
inc
jmp
pop
imul
ret
es
fwait
push
dec
sbb
jecxz
cld
lock
push
sub
repz
psubusw
scas
mov
mov
and
loop
fimuls
add
mov
push
xchg
fidivl
mov
adc
mov
sti
test
repnz
cld
imul
mov
xchg
mov
pushf
sbb
outsb
loope
push
mov
ss
xchg
into
and
pop
push
sbb
negb
neg
aaa
adc
outsb
std
test
mov
sbb
test
pop
xor
push
fldt
xlat
nop
mov
cltd
inc
pop
mov
xchg
and
outsl
pop
insl
aas
lcall
subl
xchg
push
lret
add
lcall
fisubl
and
adc
mov
bound
aad
adc
or
cwtl
adcl
sahf
xor
adc
fsub
shl
stc
jnp
out
inc
or
dec
pop
mov
stc
clc
cmpsb
cmc
lods
in
in
scas
pushf
cmp
jl
lods
xchg
add
jecxz
xchg
inc
add
adcb
fldt
ja
loope
adcl
xor
cmp
sti
mov
cltd
and
adc
xchg
xchg
sub
cmpsl
loope
add
pop
mov
addl
scas
mov
pop
jmp
mov
addr16
fbld
rcll
xchg
mov
mov
int3
mov
push
hlt
push
pop
clc
fisubrs
inc
mov
cmp
aaa
rcrb
add
imul
ret
or
cld
int3
add
lret
out
lock
rcrl
push
popa
or
aaa
push
xchg
push
mov
jno
cmp
xchg
cmpb
push
sbb
cmp
pop
mov
cmp
mov
xchg
inc
xchg
jecxz
inc
and
mov
inc
rcr
sbb
adc
dec
pop
imul
xchg
inc
scas
or
aad
xchg
ds
imul
arpl
addr16
cmp
xlat
add
xor
out
sub
cwtl
test
pop
movsb
arpl
arpl
popa
mov
inc
nop
add
test
push
pop
cld
into
mov
or
mov
sub
or
or
push
mov
icebp
decb
dec
scas
lds
sub
inc
sbb
xchg
in
push
jmp
and
cmp
pop
loop
xchg
stc
cwtl
xor
out
jo
cli
jl
in
rcl
push
pop
push
test
xchg
add
adc
imul
mov
adc
fadd
lods
lds
mov
call
fmull
fs
lcall
lods
dec
adc
jecxz
out
bound
sub
cmp
sub
xlat
stc
mov
mov
outsl
mov
sbb
cmp
adc
out
and
out
ret
pop
inc
or
fsubp
imull
fidivrl
int3
fnsave
mov
and
lock
sub
das
jne
pop
rcrb
cmovnp
add
cs
lods
int3
and
pusha
call
sbb
or
mov
and
xchg
in
insl
in
aas
jnp
je
test
pop
ja
jle
or
or
int3
dec
int3
repnz
inc
and
lcall
call
cmc
aas
mov
jo
inc
dec
pop
repz
fistl
mov
rolb
jne
dec
dec
cmp
and
dec
gs
add
sbb
jae
inc
sbb
pop
imul
and
call
or
dec
lods
xor
sub
lea
pop
stos
outsb
push
xor
or
fst
inc
call
cmpsl
aam
xchg
jbe
or
out
mov
int
imul
ficoms
pop
outsb
mov
mov
lods
mov
cmp
fistpl
cmp
sti
push
pmuludq
mov
mov
cmp
aas
dec
insl
pop
mov
rcrl
pop
mov
incl
lahf
lds
daa
push
pop
cld
xchg
cli
lods
js
and
xchg
scas
cmp
cmp
je
rol
push
push
sbb
add
es
and
inc
addr16
into
ret
mov
adc
dec
sti
inc
adc
inc
xchg
dec
lods
int
test
imul
cltd
jp
sbb
mov
and
pop
xchg
jns
out
mov
push
xor
adc
enter
jl
xchg
test
xchg
mov
rclb
xchg
imul
adc
and
sti
imul
mulb
test
sbb
xchg
mov
jns
popf
pushf
cli
jge
in
push
jo
scas
sub
jbe
cltd
dec
mov
lahf
push
mov
mov
jne,pt
dec
mulb
add
cmpsl
shr
in
push
pop
adc
add
fs
fisttps
pop
aad
dec
imul
imul
jp
sub
test
xor
pushf
push
adc
xchg
inc
mov
xchg
mov
shlb
insb
dec
cwtl
int3
sbb
fdivr
pop
and
sub
xor
movsl
insl
and
mov
mov
xchg
pop
pop
cld
icebp
aas
pop
adc
stos
lods
popf
stc
xlat
ret
test
rclb
xchg
bound
mov
xchg
ret
jnp
scas
xchg
adc
mov
fistl
mov
test
scas
mov
rorb
jl
mov
dec
ret
pop
lcall
rorb
or
fs
dec
sbb
cli
adc
mov
fistps
cmp
mov
pop
sub
int3
push
inc
insb
insb
inc
mov
mov
xor
jmp
hlt
into
jno
ja
cmp
xor
xchg
mov
and
add
xchg
push
pop
mov
popa
test
sub
call
cld
pushf
or
jbe
aad
cmp
sub
rolb
cli
pop
jns
or
into
fsubs
cmp
test
test
sbb
popa
jnp
orl
stc
or
andb
lret
sbb
incl
cmp
add
xor
pop
xchg
mov
xor
mov
outsb
jno
pusha
mov
adc
add
pushf
in
cmpsl
aaa
mov
icebp
add
scas
sbb
jbe
imul
mov
xor
mov
add
pop
mov
xlat
push
push
sar
push
jge
aaa
mov
lods
fwait
cmp
sbb
insb
xchg
mov
ffree
mov
xlat
cwtl
xchg
popa
enter
bound
jnp
xor
dec
and
xchg
sbb
daa
inc
clc
mov
aad
xchg
fstps
outsb
pop
mov
sbb
daa
cmpb
dec
loop
push
mov
pop
push
or
mov
xchg
pushf
sbb
lcall
mov
loopne
data16
pop
rorl
sahf
mov
xchg
sub
cmp
sbb
subl
push
push
loopne
lahf
mov
dec
int
inc
or
adc
daa
inc
xor
pusha
pop
in
cmp
or
jecxz
in
mov
ja
repz
out
ljmp
sub
stc
xor
std
ret
pop
or
fbstp
ds
loopne
fists
je
sub
adc
xor
add
sub
fabs
push
inc
mov
pop
xlat
cmpsb
aas
pop
es
xchg
or
mov
das
push
loopne
xchg
cmpsb
jge
mov
mov
jae
out
fiaddl
aad
inc
into
fcmovnb
xchg
nop
test
loopne
pop
mov
pop
lcall
icebp
add
popa
or
xchg
push
popf
addr16
or
xchg
scas
xchg
in
repz
jp
xor
pop
jg
fsubr
lahf
test
aad
sub
pop
fstpt
nop
fnsave
icebp
and
stos
dec
xor
in
adc
xor
test
int3
arpl
cli
stos
in
adc
and
adc
outsb
sub
inc
push
outsb
out
out
jge
push
lcall
call
lock
nop
imull
insb
cmc
push
sbb
hlt
xchg
inc
adc
mov
xchg
cld
mov
leave
loop
iret
and
inc
mov
xchg
inc
leave
vpor
sbb
testl
lahf
or
lock
mov
mov
pop
test
test
dec
loope
mov
jno
mov
loop
jnp
push
xchg
cmp
xor
lcall
or
push
lods
xchg
add
repz
mov
and
and
dec
test
repz
jle
ljmp
ds
push
cmpsb
andl
test
sahf
andb
inc
jg
stos
popa
adc
mov
rclb
xchg
fwait
lret
in
sbb
popf
shrl
and
iret
dec
std
add
xor
mov
pop
lahf
inc
push
test
add
add
mov
add
xor
cmc
push
mov
pop
lods
jp
dec
pop
inc
repz
jnp
mov
xor
fbld
out
cmp
push
fmull
cmp
loop
push
jb
stc
outsl
dec
lods
jb
inc
rcrb
test
push
sahf
add
stos
je
test
into
inc
fsubp
jecxz
cmp
in
mov
maskmovq
notl
mov
lret
out
dec
lret
cmp
andb
or
sbb
cmpl
or
mov
jp
xchg
sub
push
dec
out
cmp
push
mov
lret
inc
cltd
mov
xor
and
jo
fdiv
cmp
add
pusha
push
mov
insb
pop
outsb
fcomps
xchg
mov
pop
mov
cmpsb
repnz
inc
fsts
fmull
jne
popf
repz
push
push
aas
inc
mov
adc
adc
in
scas
mov
arpl
cltd
mov
stos
rolb
gs
cmp
gs
rep
mov
lahf
lret
pop
int3
cli
rcrb
xor
cmc
or
jnp
sub
fdivl
cmp
dec
repnz
sti
xorb
leave
fistpll
jmp
aam
add
fstl
pusha
aaa
cmp
movsl
es
out
sub
inc
or
out
mov
fld
push
das
adc
js
mov
xor
or
nop
pop
or
mov
sub
testl
bound
or
outsl
sbb
popa
push
sbb
mov
jp
jecxz
test
pop
test
popf
push
cmp
stos
cmp
xor
and
sbb
adc
mov
jle
adc
xor
stos
movsl
jge
aaa
sbb
sbb
push
out
and
fucomp
ljmp
sbb
pop
out
dec
jp
rorl
mov
mov
ja
and
dec
lods
mov
xchg
out
dec
mov
je
jmp
dec
inc
jg
clc
rcrb
int
mov
xor
ljmp
mov
mov
push
mov
xor
add
pushf
int
insb
lret
jecxz
adcb
fucomp
push
dec
out
and
int
shlb
push
pop
incb
leave
jo
inc
jmp
sub
push
fs
out
dec
inc
ret
dec
adc
ret
int
sub
jmp
js
sub
jns
clc
mov
pushf
cmp
shlb
shll
into
inc
cmp
xlat
xor
inc
push
popa
jecxz
pmullw
sub
mov
push
adcb
add
std
rclb
loope
es
mov
loopne
iret
sub
mov
xchg
sbb
push
movsl
jl
add
or
dec
ret
mov
imul
lock
ljmp
lock
pop
mov
inc
inc
dec
sbb
test
inc
mov
inc
dec
xlat
mov
adc
enter
and
clc
das
fld
insl
or
pop
dec
lahf
sbb
adc
shlb
movsl
cs
and
or
and
pop
add
aaa
push
lea
cmp
sbb
xchg
mov
pop
inc
aaa
fcmove
adc
jnp
movsl
add
sbb
repz
sti
jge
add
mov
adc
adc
cmp
mov
rol
mov
fstpl
fdivr
popa
fmull
or
and
aad
fmull
xchg
cmpsl
add
xor
pop
jo
aam
jns
popf
mov
les
cmpsb
cmp
and
xor
lcall
js
inc
lret
jge
add
insl
fwait
data16
lret
mov
hlt
cmpsl
pop
sbb
int
inc
popa
popa
pusha
ja
stos
adc
push
xor
into
ja
push
roll
andps
notl
and
inc
xchg
xlat
mov
mov
or
hlt
xchg
jmp
cmp
iret
dec
aaa
push
aam
cmc
mov
add
pop
mov
orb
test
sbb
fstp
insb
fdivl
add
jb
dec
cld
adcb
push
mov
shl
push
mov
hlt
dec
stos
aam
mov
add
inc
sub
xchg
inc
es
inc
iret
hlt
jle
sbb
fwait
jae
aam
jecxz
jne
into
mov
lret
add
fwait
lret
push
or
outsb
dec
adc
push
sar
dec
notl
mov
sahf
push
dec
aam
xor
test
jb
jnp
xchg
xchg
aad
push
sbb
cmpsb
fildl
enter
or
pop
adc
shll
adc
adc
push
sbb
pop
fadds
scas
in
jge
ret
or
push
mov
xchg
sbb
lret
repz
loop,pt
xchg
inc
add
sbb
mov
cmp
pop
test
adc
leave
test
popf
rcrl
mov
mov
or
mov
sarl
mov
mov
adc
sub
std
cld
jg
pop
popf
mov
rcrb
push
jbe
test
cld
add
add
out
jae
mov
daa
mov
or
imul
jl
ret
hlt
xchg
sub
push
imul
sub
aaa
and
insl
mov
fsubrs
bound
mov
sub
fs
push
inc
adc
or
cmp
popa
outsb
je
xchg
pushf
hlt
xlat
cmp
sahf
cmp
adc
sub
cli
mov
lods
inc
push
cld
sbb
add
push
xchg
aad
cmpsl
inc
jl
sbb
addb
lock
ret
in
jmp
mov
repnz
call
icebp
mov
or
arpl
rclb
out
pop
xor
inc
push
mov
sbb
dec
inc
xchg
and
mov
dec
adc
fistps
push
shrb
push
pop
pushf
shl
xor
jmp
les
jmp
mov
mov
mov
mov
mov
ficoml
movsl
pop
sti
inc
sarl
je
jno
sub
and
out
cmp
ljmp
mov
inc
mov
imul
inc
loop
dec
pop
inc
mov
sbb
pop
out
sub
lret
mov
pop
xlat
faddl
dec
push
fcomp
and
mov
push
aam
push
adc
mov
fs
out
xlat
adc
mov
or
fiaddl
fadd
mov
sarl
and
jnp
inc
jle
mov
or
mov
push
mov
mov
jge
jp
subb
push
adc
lods
mov
clc
xchg
mov
lods
mov
lcall
call
ss
sbbb
pop
outsb
sbb
mov
xor
cmp
jmp
ss
lret
push
aam
pop
mov
pop
scas
push
imul
mov
and
shlb
shlb
pop
sub
add
popl
stos
jnp
xlat
fwait
test
push
lret
jp
add
adc
cmpsb
dec
jb
lcall
mov
orl
stos
leave
fdivrs
cli
cmpsb
dec
jns
jl
lret
inc
loop
ja
sbb
xor
push
imul
push
and
lods
xor
sub
jle
push
mov
mov
bswap
movsl
mov
shl
cmp
add
shrb
cld
jle
std
ret
sbbb
cmp
sarl
insl
fsubl
scas
fdivrs
imul
mov
sbb
fsts
popa
test
xchg
or
jb
push
repnz
lahf
cmpsl
jnp
dec
cld
movsb
ret
xlat
mov
cwtl
jbe
mov
leave
fstpt
xor
jl
jb
fidivrs
sbb
ja
inc
ret
mov
fisttpll
mov
inc
inc
dec
test
sti
imul
mov
call
mov
repz
je
sbb
pop
pop
pop
cmp
add
cmp
cltd
popa
int
lahf
and
mov
fisubrs
mov
mov
lock
pop
add
pop
or
xchg
or
pop
xor
ret
gs
dec
out
repz
ror
lds
insl
jmp
std
pop
lahf
or
push
subb
in
mov
xor
mov
pop
gs
or
pusha
aad
push
inc
cmp
xchg
pop
xchg
daa
add
or
aad
dec
fstp
loop
mull
ljmp
repz
sub
adc
mov
mov
mulb
insl
out
movsb
sub
les
push
sbb
mov
or
ljmp
sbb
or
mov
popf
xor
jns
and
jg
jbe
stc
cmc
ret
loope
stos
lcall
mov
xchg
push
cmp
ja
xor
popf
js
jns
aaa
fwait
shll
das
push
push
pop
xchg
or
das
enter
ret
enter
pop
lahf
leave
and
and
jnp
or
push
loopne
vpcmpgtw
out
addr16
mov
push
clc
xchg
xor
sbb
push
xor
inc
outsb
leave
rol
dec
inc
cmp
push
pop
stos
std
inc
lods
xor
gs
ret
shl
cmp
xchg
mov
xchg
subb
adc
xchg
fcomps
hlt
scas
ja
push
lds
push
lea
test
jmp
xor
push
mov
jb
enter
inc
ret
cmp
push
loope
in
test
lea
sub
adc
nop
mov
push
pop
out
clc
jg
mov
mov
int
shrl
push
xchg
gs
xor
mov
adc
or
mov
inc
mov
aaa
push
ljmp
push
cmp
jp
pop
mov
lcall
mov
rolb
sarl
dec
mov
aas
xor
adc
xchg
push
push
pop
mov
mov
inc
imul
mov
je
leave
ret
int
pushf
in
arpl
or
sub
inc
mov
popa
mov
xor
fimull
xchg
xchg
loopne
repz
inc
jb
xchg
sub
test
lds
adc
xorl
int3
loopne
orb
pop
mov
js
outsl
arpl
fistl
out
xor
cmpsl
mov
lock
inc
sar
mov
sub
repz
into
pop
or
shlb
xchg
pop
jmp
fdivrs
sti
aam
ret
mov
shrl
sub
push
enter
cmpb
inc
test
dec
icebp
lret
mov
imul
cmp
stos
inc
mov
push
ds
jle
mov
adc
ret
jge
add
scas
add
mov
arpl
aaa
fnsave
aam
rcrl
jo
je
xor
hlt
inc
dec
daa
push
ret
int
or
ret
push
shl
pop
pop
add
fs
push
repnz
cld
rorl
mov
and
sub
xor
dec
call
call
fldenvs
xor
jecxz
repz
pop
stos
lds
adc
inc
xchg
ret
jle
adc
mov
inc
mov
sti
pop
dec
test
daa
mov
aaa
outsl
push
push
mov
movsl
dec
or
xor
xchg
push
push
mov
dec
ret
in
mov
dec
jmp
push
fcoml
jnp
cwtl
xchg
mov
jl
and
inc
bound
dec
lock
lcall
inc
fcom
stos
sbb
inc
fcmovu
stos
loopne
mov
in
leave
aad
mov
movsb
cmpsb
in
popa
fcoms
ret
stc
pmulhuw
sub
or
data16
adc
mov
cltd
arpl
mov
js,pt
mov
cli
das
sahf
xlat
icebp
jg
imul
movsb
lods
rolb
sahf
mov
sbb
loop
cmp
shl
cmpl
inc
mov
out
popa
fs
shll
cwtl
dec
pop
dec
orb
jle
aam
test
jno
xor
lds
ficomps
pop
iret
fsubl
jae
mov
mov
jno
mov
mov
rolb
sbb
addr16
xlat
es
mov
std
or
inc
xchg
pop
mov
sbb
scas
sub
clc
loop
aas
and
in
je
dec
pusha
movsl
je
cmp
push
stos
shlb
inc
adc
fcoms
dec
push
inc
add
mov
mov
cmp
out
loope
scas
mov
push
and
jmp
mov
lods
das
int
test
mov
xchg
scas
test
dec
rdtsc
inc
add
add
mov
test
enter
lea
xor
xchg
fwait
xchg
push
aas
pop
leave
and
stos
arpl
divb
int3
scas
add
adc
push
jne
ljmp
in
mov
sbb
je
adc
lods
shlb
pop
add
and
data16
jmp
dec
xor
sbb
add
push
imul
rcr
pop
push
fistpl
cli
je
cmpsl
or
or
lods
lea
aad
sub
cmp
pop
jb,pn
push
xchg
ja
dec
popa
jmp
negb
add
insl
jg
fwait
mov
mov
fstl
out
xor
xor
xchg
je
aas
ljmp
clc
int3
ja
mov
lods
mov
loop
mov
add
mov
int3
mov
or
cmp
or
movsb
cs
pop
push
xchg
fnsave
sbb
or
ss
leave
mov
out
jmp
adc
gs
mov
jp
sahf
in
fdivrs
je
add
std
push
mov
jmp
scas
dec
jmp
jg
cmp
and
xchg
cmp
popa
sub
mov
inc
xchg
sbb
fucomip
mov
cmp
fldt
es
dec
pushf
push
and
push
xor
jno
push
inc
xchg
or
int
arpl
add
xchg
mov
loope
imul
mov
and
cli
fildl
repz
jae
or
mov
mov
xchg
push
add
cmp
fmulp
jb
imul
insl
mov
lea
pusha
sub
outsl
xor
pushf
insl
lcall
jns
adc
fisttpll
repnz
adc
loopne
pop
sahf
stos
push
jge
and
ficoms
or
addb
or
add
outsb
icebp
jne
sarl
xor
inc
jle
push
mov
stos
inc
jne
aaa
in
push
mov
loop
test
pushf
sbb
or
jl
fisubs
and
shll
pop
lcall
adc
adc
mulb
add
sti
shr
jne
cmp
push
fcmovnbe
mov
inc
shrb
leave
lcall
mov
sub
outsl
cmp
ret
movsl
mov
nop
jge
mov
stos
xor
mov
xlat
cmpsl
insb
jmp
pop
push
fwait
lods
pop
sub
push
jl
jmp
and
divb
mov
and
dec
mov
bound
fidivs
jmp
push
int
jnp
pop
pop
out
dec
dec
out
dec
jge
pop
push
aam
cmp
je
pop
flds
sub
test
sub
fisubrs
inc
xchg
pushf
xchg
mov
mov
subb
sarb
add
dec
pop
sarb
and
stc
xor
int
xor
stos
negl
stos
and
push
cmpsb
aaa
inc
cmpsl
pop
ret
sbb
inc
push
sub
in
loopne
daa
mov
sub
dec
sub
dec
and
dec
inc
add
mov
or
pop
out
mov
popa
je
mov
ret
xchg
inc
sbb
cmp
aad
shl
negb
jecxz
cmp
pop
inc
cmp
jae
popf
test
pop
lock
sub
shll
js
aaa
mov
push
fisubl
inc
in
mov
movb
nop
into
mov
adc
jp
movsl
das
ds
sgdtl
xor
std
jle
aas
outsb
cmc
out
mov
int
pop
mov
mov
pushf
push
cmpsb
iret
fstps
aaa
lea
xchg
dec
cmp
add
inc
mov
ja
push
mov
dec
add
sub
outsb
xchg
icebp
xor
adc
jne
rsqrtps
and
dec
cwtl
in
xchg
sbb
mov
outsl
mov
mov
mov
inc
repz
cmpsl
cltd
xchg
inc
movsb
ja
jl
lret
mov
mov
sub
ret
sub
or
push
sbb
inc
mov
dec
and
jmp
and
cmp
adc
ret
add
jno
insl
sbb
mov
and
pusha
xchg
mov
neg
and
mov
test
fisttpll
outsl
cs
mov
mov
mov
movsl
jg
cmp
adc
dec
or
fs
cs
add
add
aad
sahf
mov
sbb
inc
icebp
push
lahf
cmp
in
inc
callw
jnp
iret
lds
and
inc
cmpsl
out
orl
call
dec
jecxz
cmp
dec
cmp
in
lods
inc
divl
ret
mov
stos
xchg
cmp
scas
les
cld
cmp
mov
cmpsl
lods
lods
mov
cmp
pop
data16
ret
push
xchg
hlt
movsl
mov
in
jle
lahf
rcl
and
xchg
jge
push
inc
loopne
sbb
xchg
jno
adc
aas
sbb
aas
sub
mov
pop
icebp
push
jp
xchg
xor
mov
call
jb
cmp
inc
imul
adc
rorb
enter
jge
cltd
adc
nop
dec
mov
dec
xchg
in
and
loope
cmp
incl
or
add
pop
jge
sub
mov
mull
xchg
jnp
aaa
lcall
jae
roll
inc
push
aaa
in
rolb
scas
dec
out
jmp
in
insb
and
bound
in
sub
jecxz
xor
push
lret
jmp
inc
daa
aam
inc
xchg
sti
mov
or
sbb
mov
loopne
jns
ss
loopne
in
sbbl
push
mov
sti
sub
sbb
ja
icebp
or
icebp
mov
push
fs
inc
adc
add
mov
out
or
push
adc
or
inc
incb
aam
sub
ja
out
add
dec
mov
ret
mov
lods
inc
cld
jg
popf
out
pop
jge
jae
pop
add
inc
fnstsw
fmull
nop
je
icebp
xchg
stos
pop
cmp
leave
sbb
popa
in
lea
dec
hlt
sti
popa
out
xchg
sub
scas
pop
ror
xor
adc
outsb
fmull
iret
imul
shrb
sarl
pop
mov
rcrl
pop
daa
sbb
or
es
cmp
sub
out
and
cwtl
hlt
push
es
movsl
fs
pushf
xchg
out
push
jns
mov
test
inc
xor
adc
xchg
xor
test
stc
xlat
cmp
dec
sahf
nop
mov
repnz
inc
xor
stos
cld
add
test
scas
xchg
cltd
test
pop
fwait
cmp
inc
int3
mov
ret
sub
movsl
bswap
inc
cmp
mov
and
push
pop
pop
int3
push
mov
pop
insl
sbb
dec
mov
inc
xchg
mov
ljmp
add
pusha
or
ret
xor
je
add
mov
cmp
sti
pop
xor
cmpsl
xor
sahf
ret
jbe
push
shlb
mov
fdivp
scas
aad
sub
sbb
stos
divb
sti
mov
repz
dec
and
pop
mov
xchg
pop
lahf
jmp
sub
add
sar
shrl
xor
mov
imul
cmpsb
andb
push
test
inc
lret
cmp
add
push
in
jbe
cmpsb
in
xor
pop
cmp
add
push
scas
sbb
frstor
and
std
imul
fsubs
cmp
add
mov
jnp
adc
mov
jl
adc
int3
test
loope
insl
popa
or
inc
in
imul
dec
pop
imulb
outsb
mov
inc
jl
sub
bound
lret
aas
and
rcrl
das
shll
insb
or
loopne
iret
sub
pusha
enter
pop
inc
ds
lds
enter
mov
inc
push
cld
mov
orb
insb
sbb
push
sub
das
mov
xchg
in
sub
add
dec
lods
pop
movsb
cmpsl
mov
sbb
mov
sub
mov
xor
sbb
dec
mov
iret
mov
or
mov
adc
mov
sahf
jae
cmp
pusha
push
outsl
push
popa
inc
dec
lcall
ret
mov
cltd
in
iret
faddl
mov
addr16
push
nop
xchg
fwait
push
pop
shl
xchg
sarb
fiadds
repnz
cmp
jns
std
insl
ficomps
mov
cld
jbe
das
movsl
push
cltd
loopne
push
push
jmp
roll
mov
jge
bnd
cmp
rorb
daa
dec
setl
xor
pop
pop
adc
push
daa
mov
push
mov
xchg
or
push
add
ds
ret
cltd
fstpl
ret
scas
sti
xchg
ret
mov
cmp
or
std
ret
sbb
movsl
out
loop
nop
jp
push
jo
cmp
xchg
rolb
lret
mov
dec
lret
popf
inc
cmp
jl
pusha
add
adc
mov
inc
stc
aam
out
mov
xchg
shlb
sbb
add
inc
push
out
jg
cld
or
mov
sub
push
inc
pop
mov
push
mov
int
xor
adc
shll
mov
xor
adc
cli
and
out
cmp
and
aaa
cmp
sub
out
enter
iret
pushf
nop
jae
iret
jl
lods
dec
xor
jae
mov
cmc
inc
pop
dec
xor
lret
gs
idivl
and
jno
lret
out
xor
jle
xlat
jne
std
cs
ds
inc
pop
stos
ds
lret
mov
das
dec
iret
jmp
or
push
add
sti
inc
imul
ds
push
jno
test
aas
adc
xor
jle
push
xor
add
pop
fsubrs
pop
je
xor
cmp
dec
xchg
loop
fs
pop
daa
pop
cmp
cmp
inc
movsb
into
sbb
icebp
out
aaa
andl
jo
in
cmc
fidivl
mov
int
sub
dec
testl
pushf
or
or
or
mov
gs
dec
push
jecxz
popa
jns
adc
jo
add
stos
push
cmpsl
sub
pusha
pop
mov
jmp
scas
test
mov
fwait
rorl
std
in
push
pop
mov
sahf
cmp
mov
and
lock
cwtl
mov
jo
xlat
jo
mov
ds
imul
sarl
adc
insl
dec
xchg
sub
mov
pop
jge
jno
sbb
fs
test
daa
push
sahf
repnz
sub
dec
call
mov
pop
aaa
lds
inc
cmp
dec
or
fcompl
fdiv
mov
xor
cmp
mov
sbb
jl
iret
sbb
int3
lret
jo
xchg
push
mov
add
pop
bound
mov
xchg
stos
mov
mov
push
xor
repnz
mov
in
out
fisubrs
insb
push
imul
ficompl
jmp
icebp
imul
imul
lods
sub
and
sbb
push
sbb
xchg
mov
or
mov
or
pop
push
adc
sub
ficoms
lods
and
cwtl
xlat
out
and
or
dec
jnp
mov
jg
psubw
bound
jae
xor
in
popa
mov
add
lcall
push
scas
loop
or
rclb
xchg
test
pop
lods
andl
cltd
ret
jno
fs
mov
int3
lods
mov
outsb
mov
mov
xor
repnz
cmp
adc
fstpl
xchg
leave
add
test
adc
scas
xor
icebp
dec
mov
inc
leave
sarb
movsb
inc
xchg
iret
lds
sub
jecxz
cltd
nop
xchg
sub
repnz
inc
mov
and
inc
cmp
cmp
loope
bound
scas
add
in
jb
dec
call
insb
cmp
mov
xchg
jbe
jle
jno
out
nop
aaa
das
xchg
ja
lods
and
loope
inc
aaa
imul
jmp
push
xchg
loope
lods
clc
add
xlat
test
popf
mov
insb
pop
fucomp
pop
cltd
pop
mov
stc
ror
daa
out
pop
sbb
xchg
and
jmp
ja
dec
ret
mov
or
add
xor
and
sbb
ja
int3
outsb
sub
inc
aas
jl
jno
inc
xchg
sub
push
orl
sbb
add
mov
mov
hlt
sub
ljmp
xor
pop
test
repnz
nop
imul
cmc
xchg
add
mov
xor
cmp
test
dec
jle
aaa
fs
mov
sub
mov
jle
movsl
or
dec
sbb
shll
add
lds
jbe
xchg
mov
incl
adc
xor
pop
mov
pop
add
sub
stos
add
push
fwait
stos
mov
leave
sub
cld
add
jb
orps
loope
daa
into
push
mov
test
stc
faddl
insl
mov
mov
leave
sbbl
and
enter
xchg
jns
outsb
lock
cld
ror
sbb
xchg
and
sub
mov
xor
lcall
xchg
adc
add
aaa
xor
test
xchg
mov
cmp
jbe
cmpsl
mov
test
lret
in
outsb
mov
bound
cld
inc
insl
dec
into
and
dec
dec
ds
cmc
negl
pop
sbb
loopne
jp
inc
pop
xor
push
ja
cmpsl
iret
iret
cs
cmp
push
daa
push
xchg
sahf
je
stos
dec
call
cmpsl
and
mov
cltd
out
add
cld
xlat
test
cmp
sahf
gs
out
sub
mov
mov
sbb
scas
push
or
cs
fbld
mov
pop
jmp
out
pop
inc
mov
sti
mov
popf
ja
mov
cmp
add
jne
jl
dec
das
jnp
lahf
inc
xchg
loopne
jmp
mov
pop
push
mov
stos
mov
inc
lret
and
mov
push
movsl
dec
shlb
pop
fwait
mov
lea
xlat
movsl
fwait
jmp
sbb
out
cmc
xor
fucomi
dec
inc
inc
add
movsl
push
pop
test
jmp
xor
je
rep
push
imul
lret
jnp
popa
loopne
mov
adc
lcall
adc
leave
sub
xor
cld
faddl
cmpsb
jae
or
rolb
push
add
rorl
dec
xchg
out
inc
pop
lods
sub
sarb
dec
pop
addr16
xchg
and
sbb
cwtl
mov
add
mov
nop
sahf
or
mov
or
mov
mov
in
adc
mov
stc
and
test
xchg
jne
ss
or
push
cmpsb
inc
mov
test
ja
sub
mov
xchg
mov
jno
and
lahf
push
in
std
push
mov
sub
jb
aaa
shrl
mov
popa
sti
mov
jmp
lahf
lods
xchg
aas
sbb
movsb
ds
cmp
mov
mov
xchg
fildll
pop
adc
pop
mov
jne
into
mov
ret
int
test
lahf
sbb
sub
sbb
jp
rcrl
mov
movsl
push
ja
push
xchg
mov
sbb
dec
cmp
jae
cmp
roll
ja
in
sbb
mov
and
clc
js
jne
jne
push
mov
leave
movsl
dec
xchg
xchg
cltd
mov
xchg
mov
add
push
addr16
rcll
mov
out
adc
mov
xchg
push
xchg
in
shlb
dec
fwait
add
xchg
cld
das
sbb
and
pop
mov
cmc
or
into
or
imul
sbb
imul
pop
lret
xchg
adc
pop
mov
mov
in
call
mov
lods
mov
stc
hlt
pop
stos
call
lahf
in
mov
sub
adc
outsl
sbb
pop
fbld
jge
fldt
cmpsb
mov
sbbl
out
call
lahf
in
mov
fisttpl
mov
push
inc
mov
push
mov
mov
add
lret
xor
jl
mov
and
aaa
roll
lea
mov
data16
mov
scas
arpl
aad
pop
xor
inc
cwtl
rcrl
pop
push
lret
push
inc
push
mov
mov
ss
call
aam
repnz
test
bound
xchg
adc
insl
jno
sub
int3
arpl
mov
mov
xor
xchg
cmp
push
lods
ljmp
aad
xor
mov
cs
jno
mov
mov
inc
out
jp
and
and
dec
in
ja
dec
adc
mov
dec
in
mov
adc
push
cmp
add
cmp
inc
das
imul
cmpsl
mov
push
mov
cmp
or
push
push
iret
inc
jle
fcoms
push
data16
popf
dec
push
cwtl
sub
inc
cmp
dec
cmovs
xchg
rol
mov
fisttpl
jmp
xchg
arpl
and
inc
mov
sbb
and
dec
xchg
insl
fwait
xchg
xlat
test
xchg
push
rcl
nop
mov
aaa
es
out
sub
push
ljmp
adc
mov
cmp
ss
aas
mov
test
mov
fs
and
cmc
je
xchg
inc
jle
and
insl
and
loope
pop
mov
mov
insl
push
adc
les
arpl
inc
mov
pop
and
popa
xchg
rcr
cmp
aas
outsb
dec
lods
cwtl
and
xchg
dec
inc
push
fcomip
in
out
icebp
jne
call
rol
pop
test
and
mov
imul
jae
in
mov
fs
pop
repnz
mov
push
cmp
aam
push
movsl
repnz
sub
int
faddl
lods
pop
std
cmp
nop
pop
negl
add
sbb
mov
inc
iret
and
xlat
jb
add
iret
push
cld
cmp
adc
inc
outsl
lret
insb
mov
mov
out
or
pop
fwait
stos
sbb
or
movsl
adc
rcr
cmc
ds
es
into
clc
fcmovnbe
add
xlat
fbstp
incl
scas
ljmp
es
lcall
and
mov
sub
outsb
divps
jecxz
ja
jmp
jg
mov
fisubs
popa
pusha
ret
inc
sbb
aas
jle
mov
out
xor
clc
andl
ljmp
mov
dec
jbe
cwtl
lods
xlat
pop
fisubl
ficomps
popa
xor
add
cs
xor
sbb
loope
mov
cmp
icebp
stos
jl
sub
daa
xchg
pop
lods
arpl
push
lods
int3
jmp
sarb
sbb
sub
fs
xchg
jb
ss
ret
jmp
and
pop
push
adcl
cmp
ja
sbb
cmp
gs
shr
adc
cmp
jb
sub
leave
pop
loop
into
lahf
jecxz
cmp
lcall
sbb
mov
pop
adc
movsb
lahf
data16
pop
sbb
dec
pop
jne
mov
sub
and
punpckldq
rolb
repz
mov
sub
adc
loopne
repnz
lcall
dec
xchg
mov
pop
and
mov
data16
sub
adc
jge
js
jno
fistl
xchg
in
jg
inc
sbb
pop
mov
adc
add
inc
ljmp
mov
hlt
in
fnsave
cmpsl
jo
jnp
sbb
push
jmp
test
mov
cmc
xor
dec
addr16
mov
js
ret
imul
jecxz
jge
call
testb
repnz
and
xlat
icebp
push
out
jbe
fsts
mov
sti
cmovge
xor
and
jae
push
sahf
popa
mov
je
xor
sbb
fimuls
mov
out
sub
mov
or
rclb
cmp
cmp
inc
xchg
mov
adc
push
clc
notl
pop
fmull
jb
adc
pop
jno
scas
or
jbe
mov
sbb
movsb
lods
pop
sub
xlat
mov
fsubrs
and
mov
loope
cmpsl
outsl
into
fidivrs
lds
ja
xchg
jg
ret
testl
cld
sahf
push
cld
cmp
jno
clc
mov
ds
std
iret
sbb
mov
shrb
pusha
sbb
scas
cmp
fsts
neg
adc
shr
test
jp
insb
cmpsb
mov
xorl
lods
or
sbb
xor
inc
ds
mov
xor
ret
mov
sub
mov
xchg
outsb
mov
in
mov
ljmp
outsl
jb
arpl
mov
stos
jl
ljmp
push
fs
icebp
mov
test
dec
out
arpl
rcll
fwait
dec
push
adc
pop
movsb
aas
and
shlb
imul
andb
inc
mov
mov
or
stc
mov
test
inc
push
dec
jmp
push
push
jbe
hlt
ja
test
arpl
stos
inc
out
cmp
push
jge
sbb
loop
icebp
sub
cmp
mov
xchg
movsl
and
faddl
push
mov
bound
and
gs
mov
adc
jno
mov
jns
sti
push
pushf
pusha
adc
clc
xchg
sarb
clc
pop
sbbb
out
ds
test
inc
dec
mov
dec
cmp
xorb
pop
pop
loop
mov
adc
out
dec
aas
mov
je
lods
dec
mov
lcall
out
movsb
push
pop
mov
jns
loopew
or
es
sbb
mov
mov
test
mov
cltd
mov
add
adc
sub
and
addr16
fistl
stc
lock
xchg
in
popf
sub
pop
cmpsb
test
negl
inc
sub
xlat
inc
and
and
pop
lret
ja
out
out
dec
lea
push
sarl
and
in
dec
push
dec
dec
aam
adc
shlb
xchg
rorl
loop
test
in
cs
and
scas
mov
cmp
roll
es
or
shrl
mov
jle
push
sbb
mov
dec
sub
xchg
dec
inc
adc
int
mov
add
fmul
xor
push
mov
mov
cmp
loop
sub
xor
stc
test
insl
lock
nop
jecxz
jnp
xor
sarb
mov
jae
je
and
rcll
stos
sbb
sbb
pop
jge
jbe
repnz
lock
mov
adc
xchg
popf
ja
adc
mov
pop
and
cmp
inc
or
outsb
jg
in
or
add
in
adc
repz
jnp
and
mov
icebp
stos
cmp
fdivrs
cmp
or
mov
loop
fwait
xchg
insb
xor
mov
jmp
sub
fwait
lcall
fcmovnbe
in
mov
fwait
sub
push
aas
rcr
stos
add
mov
push
push
mov
and
mov
iret
sbb
adc
pop
out
insl
or
xlat
mov
jns
xchg
out
outsl
into
inc
or
xchg
lcall
pop
cmpsl
or
mov
iret
sqrtps
jmp
bound
adc
in
adc
ja
jecxz
enter
mov
lahf
cwtl
movsb
ret
push
sub
xchg
sub
in
cwtl
fcoms
lea
loopne
iret
mov
adc
inc
lret
mov
hlt
mov
fmulp
jmp
loop
mov
lods
cltd
scas
mov
aaa
or
dec
fbld
jmp
jmp
lods
sbb
andb
jmp
xchg
fidivs
leave
mov
mov
adc
jo
add
jo
sub
pusha
mov
mov
loopne
add
pop
push
fwait
loope
xchg
dec
shrb
sub
xor
pop
lret
addr16
fidivrs
lea
pop
cltd
sub
inc
jecxz
mov
sub
shlb
xchg
xchg
stos
adc
jbe
dec
mov
dec
fwait
push
mov
xchg
fsubl
test
mov
mov
or
imul
les
insl
xor
jecxz
sahf
and
sub
xchg
cld
jp
fisttpll
push
pop
pushf
repnz
lret
xor
mov
cmp
add
xor
jbe
add
cvtps2pd
add
arpl
pop
sub
inc
cli
mov
fs
mov
add
push
jno
xor
inc
icebp
loopne
mov
jb
dec
sbb
mov
jle
cmp
sbb
addl
sbb
xor
push
inc
movsl
data16
mov
push
mov
adc
enter
dec
push
int
mov
xchg
das
xor
rorl
fmulp
push
cltd
inc
adc
jl
or
mov
cld
inc
aaa
rcrb
outsl
ja
dec
es
adc
jg
jg
cmp
mov
add
in
cwtl
test
test
shrb
adc
sub
xchg
and
sub
xchg
cltd
sub
pop
ficomps
adc
insl
gs
call
jmp
hlt
in
add
jne
stos
pop
pop
outsl
es
clc
pop
test
mov
or
xor
push
xor
popa
adc
ss
lds
lret
test
mov
pop
pop
in
ret
jge
fisubrl
dec
cmc
pop
jne
insl
sub
ljmp
imul
repnz
inc
xor
mov
or
dec
push
mov
mov
bound
sub
pushf
jmp
aam
loope
cmp
repz
out
mov
daa
inc
sarl
daa
inc
inc
fwait
gs
cmc
arpl
out
inc
fstpt
mov
movsb
xor
mov
cmpsb
adc
lret
fsubs
jge
sub
adc
ljmp
jno
cmpsl
popf
scas
xchg
lock
mov
jecxz
xchg
jmp
testb
inc
jnp
stos
shll
leave
sub
mov
inc
xor
jg
jbe
add
test
or
pop
das
into
xor
and
hlt
or
aad
repz
pop
arpl
adcb
add
adc
fildl
fisttps
push
lret
popa
fimuls
cmp
sti
adc
jbe
fisttpl
loop
loopne
pop
ja
pop
flds
dec
mov
stos
lock
ret
es
add
cmp
or
sub
fstpl
rcr
push
jne
adc
mov
daa
nop
inc
mov
loopne
pop
lcall
jne
mov
adc
mov
lds
adc
adc
decb
inc
mov
dec
mov
mov
jg
ficoms
and
pop
insl
scas
out
jne
orb
rorb
addr16
in
push
xchg
sbb
xchg
repz
push
lahf
jg
push
xchg
add
dec
out
sbb
push
stos
stos
inc
dec
add
popf
add
movsb
add
dec
cmp
xor
pusha
xchg
insl
adc
aad
pushf
cmc
add
in
sbb
or
jb
cmp
rol
out
aam
mov
rorl
pop
xchg
inc
cmp
das
pop
pop
push
pop
sbb
rcrb
mov
imul
cmpsb
cs
mov
adc
clc
lods
jae
jae
mov
push
movsl
cmp
mov
push
shrl
cwtl
xor
pushf
outsl
sbb
outsl
pop
aas
shll
inc
in
repnz
xchg
rcr
mov
stos
and
inc
pop
add
les
mov
call
shll
mov
or
sub
mov
sti
lret
mov
cwtl
fisubrs
sub
xchg
xor
mov
scas
inc
mov
push
andb
or
clc
jp
int
xchg
inc
or
cltd
jmp
inc
clc
mov
pushf
and
aam
push
imul
jae
mov
stos
cmpsl
pop
xor
and
sub
pop
mov
mov
pop
ds
push
shrb
mov
ror
add
pop
inc
les
sbb
pop
es
add
jle
pop
jle
aam
or
xor
inc
ds
adc
add
lcall
dec
negl
jne
addl
data16
int3
rorb
and
addr16
test
push
loop
loope
sbb
test
xor
mov
cmp
pop
outsl
and
mov
out
add
data16
lret
sub
fbld
inc
int3
mov
jo
xchg
repnz
dec
jecxz
add
popa
pop
inc
outsb
mov
lds
jbe
in
gs
in
and
sbb
add
pcmpeqw
imul
cvtdq2ps
inc
dec
adc
leave
jb
mov
iret
mov
icebp
adc
cmpsb
inc
push
repnz
jne
mov
negl
mov
in
movl
mov
pop
imul
lret
loope
cmp
push
pop
insl
pop
jge
sub
pop
icebp
sub
aad
pushf
fxch
jg
movsb
pop
inc
test
sub
and
pop
test
ljmp
js
fidivrl
add
xor
cmp
or
fsubrs
pop
mov
dec
sahf
ja
push
es
lea
xchg
add
or
cli
xor
enter
and
mov
insb
ret
mov
push
ljmp
or
rcr
rolb
out
dec
enter
cmp
daa
push
pop
shr
add
insb
aad
movsl
sub
mov
into
movsl
nop
jge
out
inc
or
and
xor
std
out
je
enter
add
aad
sub
mov
into
push
jne
insb
mov
add
pop
inc
sbbb
imul
pushf
nop
inc
lods
sbb
bound
adc
scas
adc
scas
into
ret
push
out
or
mov
cs
xchg
daa
test
sti
daa
stos
lahf
dec
std
inc
and
push
sbb
or
and
out
mov
xor
adc
cmp
xchg
jecxz
inc
jmp
or
xchg
jle
pop
jecxz
jle
mov
ja
cld
insb
hlt
nop
mov
jl
mov
fwait
rclb
xchg
push
lods
inc
pop
sti
sbb
inc
jp
fcmove
mov
add
xor
xlat
xchg
xor
adc
sbb
dec
pop
cmc
adc
decl
jmp
ss
imul
cmp
shlb
cmpsl
sete
push
loopne
xor
adc
lds
xor
jmp
incl
dec
xchg
insb
and
adc
fwait
lods
xchg
movsb
inc
pop
mov
and
fimuls
dec
out
push
push
cwtl
inc
mov
in
shl
dec
int3
movsb
push
mov
jae
imul
test
test
sbb
sub
pushf
ljmp
call
xlat
leave
mov
jecxz
xor
das
movsb
jl
xchg
sbb
mov
lods
dec
pop
out
clc
jmp
mov
mov
cmc
mov
mov
xchg
and
mov
popf
pusha
cld
sub
fsubs
roll
dec
ret
js
fidivs
push
lcall
jmp
inc
pop
mov
push
mov
and
sub
inc
mull
scas
mov
aaa
mov
inc
or
cmp
adc
pop
scas
sbb
xor
jb
and
sub
xor
cmc
xlat
movsb
sarb
roll
rcrl
push
lds
sahf
adc
mov
loope
fidivrl
lds
mov
jne
push
push
and
and
mov
ds
loop
cmp
xchg
leave
out
inc
fidivrs
dec
out
mov
mov
lret
lret
push
call
rorb
cmp
dec
xor
jb
push
adc
negb
lods
add
cli
sub
lret
pop
push
das
cs
pusha
lcall
icebp
xchg
clc
jle
mov
outsb
lods
jmp
pop
scas
adc
repz
adc
popa
and
inc
sti
pop
mov
enter
cmp
push
pop
pop
and
cmp
add
addb
push
pop
mov
jno
pop
mulb
mov
xor
cmp
mov
fdivl
sub
mov
rcll
cmpsb
es
xchg
insl
cs
sub
add
dec
fmuls
xchg
nop
ret
xchg
and
sbb
mov
mov
bound
aam
dec
sbb
jg
xor
pushf
mov
xchg
fisubrl
push
fdivs
loopne
cmp
xor
repz
or
push
xchg
lock
inc
sbb
and
das
xchg
ja,pt
repnz
and
repnz
cld
jne
shll
sub
mov
fldl
dec
imull
test
xor
ljmp
jp
mov
cmpsb
mov
jno
xorl
jl
pop
mov
jbe
jg
add
aad
cli
or
mov
jbe
lods
mov
lock
pop
fisubl
xchg
xor
mov
inc
jg
and
das
arpl
movb
sbb
jp
push
ret
pop
jl
xor
stos
fwait
ret
sarl
sarl
xchg
dec
pop
sub
mov
loop
sarb
xchg
sarl
push
fldcw
loop
xchg
mov
and
jae
mov
xchg
xchg
dec
or
loop
mov
add
or
mov
inc
or
lret
cltd
pop
push
dec
js
mov
mov
add
imul
rcrl
mov
in
cmp
mov
sbb
dec
sarb
mov
out
test
rcrl
and
loopne
mov
fsubrp
push
sbb
outsl
scas
dec
rcll
mov
inc
clc
ror
dec
xor
push
fisttps
or
ljmp
mov
and
sbb
inc
and
cli
jmp
shlb
sub
and
stc
ss
mov
push
cld
push
mov
faddl
push
push
cmc
cmp
xchg
inc
call
clc
and
cmpsb
aad
sbb
cmpsl
scas
push
sahf
push
into
outsb
repz
mov
test
fs
out
push
xchg
je
and
les
cmp
mov
adc
xor
sbb
pusha
mov
push
mov
icebp
add
mov
pop
js
sub
fisubrl
sti
loope
out
rcr
xchg
jbe
jge
dec
rorl
imul
mov
je
sub
jae
inc
pop
je
fildll
push
mov
in
and
cli
mov
mov
mull
xor
pop
testb
jb
enter
jbe
push
vmread
ljmp
enter
mov
mov
dec
mov
jl
cmc
out
jo
sahf
jge
call
cmp
icebp
push
insl
and
xchg
fildll
fstps
sbbb
ss
sbb
in
pop
inc
jge
fcoms
inc
jge
scas
cmp
jo
jp
daa
inc
stos
and
test
cmp
jns
aaa
jg
cmp
adc
movhps
add
ljmp
mov
xchg
xor
xor
outsl
pop
adc
lods
cltd
imul
neg
js
mov
sub
xchg
call
mov
nop
push
and
mov
mov
push
pop
mov
mov
mov
xor
xlat
sub
in
pusha
adc
fcomps
and
or
xchg
leave
ljmp
mov
push
idiv
loop
lods
mov
xchg
test
loopne
and
fnstenv
mov
jns
test
test
scas
or
repnz
jmp
jecxz
and
add
pop
push
in
add
mov
icebp
mov
dec
hlt
push
fdivp
jns
ret
pop
arpl
ret
push
je
in
enter
inc
dec
jmp
push
adc
movsb
adc
push
ljmp
xchg
fwait
push
outsb
aaa
push
add
addr16
sub
jp
enter
sub
sub
cmp
aaa
pop
cmp
addr16
xchg
push
push
push
mov
sbb
push
outsb
push
aaa
push
and
mov
stos
mov
stc
pop
pop
fimull
out
aas
mov
adc
in
pop
push
xor
mov
jmp
lds
pop
mov
push
mov
cmp
loope
in
xchg
iret
adc
lods
test
fiadds
fs
add
jne
ss
cmp
mov
idivl
dec
shrl
fidivrs
rorb
mov
add
ljmp
mov
andb
inc
and
sbb
scas
testl
add
hlt
inc
pop
dec
ja
jns
rol
and
jo
jb
jp
js
mov
hlt
cwtl
inc
dec
jnp
mov
aam
leave
les
inc
subb
in
or
cmp
mov
loopne
or
sbb
cmc
scas
cwtl
push
dec
and
lds
cmc
lret
mov
loop
aaa
repz
push
fsubrl
dec
push
xchg
out
or
fldt
mov
ss
inc
inc
sub
mov
mov
jmp
inc
mov
aad
imul
jns
push
leave
jmp
xor
mov
mov
and
inc
mov
enter
cmp
mov
movsb
mov
cmp
xor
push
dec
push
xorl
mov
pushf
pushf
sub
add
cmp
cmpsl
sub
mov
arpl
or
scas
push
or
gs
fwait
jne
jp
imul
addb
push
call
add
add
mov
icebp
xor
inc
jae
and
ret
cmpb
push
daa
xchg
js
je
icebp
les
push
push
arpl
ss
cmc
xchg
and
xor
stos
fisttps
adc
or
loope
decb
add
mov
inc
cmc
and
enter
sub
leave
mov
xchg
cli
push
int
mov
mov
cltd
testl
ss
std
xor
rol
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pop
cmp
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
rep
mov
mov
xor
pop
cltd
out
les
imul
pushf
cmp
xchg
sti
cwtl
shlb
add
in
fcoms
xchg
imul
shll
into
xchg
repz
mov
cltd
clc
repz
mov
pop
out
xchg
fsts
mov
sub
movb
push
stc
xchg
scas
mov
clc
aas
pusha
adc
sar
pop
bound
mov
repnz
inc
and
out
dec
xchg
mov
outsb
sub
and
in
or
jmp
nop
pusha
inc
popa
push
add
dec
xchg
cmpsl
xor
xchg
repnz
xor
rcl
push
clc
repz
mov
push
call
icebp
pop
add
std
divl
cltd
clc
repz
mov
lods
push
popf
clc
repz
lock
mov
dec
cltd
clc
jecxz
mov
add
repz
mov
add
pop
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
or
add
clc
rep
stos
lock
mov
lods
push
cltd
clc
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
negl
hlt
xchg
mov
pop
clc
repz
mov
add
cmp
mov
fdivs
cltd
clc
test
mov
dec
cltd
clc
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
add
repz
mov
das
lods
push
cltd
clc
fcos
jnp
lock
sahf
sahf
sub
cmpsb
scas
adc
jmp
jmp
hlt
sbb
fsubl
hlt
sub
jp
js
jmp
xchg
lea
push
jg
sub
xchg
aad
pop
xchg
jge
jmp
sahf
inc
aad
sbb
ss
sbb
loop
fmulp
stos
xchg
pop
jl
xchg
sbb
loopne
mov
bound
jmp
or
inc
adc
fcmovnbe
or
nop
cmp
mov
mov
mov
movsl
fsubl
lds
jo
cli
sbb
stos
mov
lds
imul
mov
inc
cltd
insl
mov
xchg
int
repnz
andps
and
xchg
dec
ja
or
add
or
pop
loopne
or
add
mov
inc
popf
xor
pop
dec
cmp
jnp
inc
sbb
aas
jge
mov
stc
jmp
lret
mov
sbb
xchg
je
push
data16
xchg
xor
adc
xor
gs
out
mov
xor
xchg
test
push
addr16
cmp
mov
jbe,pt
rclb
mov
xchg
ljmp
fdivs
cli
mov
insb
sub
jge
icebp
inc
mov
pop
ss
cmpb
mov
xchg
cmpsl
popa
sbb
ret
test
cmp
dec
xchg
sbb
pop
xchg
mov
mov
icebp
cmc
jae
dec
push
sti
add
shll
sarb
adc
mov
mov
shll
or
or
pop
push
xor
mov
xchg
dec
sar
sub
pop
or
mov
cmp
je
ja
or
pop
cmp
loop
insl
xchg
fstpt
and
jmp
stc
sbb
pop
adc
mov
out
dec
addl
mov
sub
mov
subl
loop
pop
std
inc
xor
cs
loopne
fsubrl
shr
loopne
cmc
int3
scas
mov
loopne
out
mov
push
inc
lret
push
mov
mov
int3
push
push
jno
cwtl
scas
das
push
popa
cmpsb
adc
sbb
repz
iret
jno
adc
sarb
addr16
lds
cmp
insb
rcll
stos
dec
sbbb
int3
lret
fidivrs
jae
mov
jno
out
add
repz
add
jne
mov
xchg
lods
xlat
shlb
jns
sub
lahf
stc
pop
sub
or
inc
mov
mov
cs
jne
dec
in
adc
pop
mov
dec
and
inc
movsb
and
scas
arpl
mov
and
jns
jno
pop
xchg
jne
aad
jge
jno
dec
sub
add
test
test
dec
clc
mov
inc
ficomps
aaa
sbb
cwtl
mov
pop
jge
sahf
outsl
push
inc
btc
jo
push
or
jno
inc
push
and
shlb
dec
incl
mov
pop
cmp
scas
dec
shlb
test
inc
xchg
cmp
cmpl
and
jp
mov
adc
jmp
inc
ret
jg
sbb
imul
in
addb
aam
push
xor
add
pop
shll
lret
pop
in
mov
inc
mov
sbb
cli
adc
sub
imul
jb
add
aam
stc
nop
lock
xlat
add
test
mov
mov
and
push
adc
pop
and
ret
int3
jecxz
popa
or
add
pop
insl
sub
jb
pop
mov
leave
jbe
xor
movsb
inc
pusha
lcall
push
jae
mov
xchg
stos
mov
and
js
imul
cmpsb
jmp
or
int
push
test
jp
push
aaa
outsb
mov
outsb
push
xor
test
ret
and
mov
ljmp
mov
pop
into
jge
pushf
shll
add
cmp
iret
mov
cli
xchg
or
out
pop
push
or
inc
xor
inc
mov
xchg
sub
leave
cmc
adc
test
cli
hlt
jle
add
jo
adc
add
pusha
push
dec
or
pop
jge
fadds
xchg
adc
mov
in
sbb
lahf
pop
or
nop
pop
dec
bound
lock
mov
scas
jb
or
sbb
les
into
adcl
in
sar
or
nop
cs
lahf
gs
inc
pop
mov
or
pop
or
cmpb
bound
sarl
sbbl
add
cmp
femms
sarb
mov
shlb
cmp
or
pop
outsl
pop
and
sbb
xchg
icebp
jno
adc
es
xor
imull
je
fisttpll
dec
leave
in
es
add
pushf
idiv
inc
sub
push
addr16
sar
pop
sbb
orb
mov
push
xchg
xchg
fwait
mov
cmc
add
inc
lods
inc
jnp
dec
add
fildll
cmpsb
jp
pop
and
push
outsb
mov
mov
aam
dec
jnp
jecxz
jae
std
outsb
jmp
popa
add
jns
addl
rorl
scas
mov
loop
nop
mov
sub
adc
movsb
fidivrs
std
ficomps
or
dec
lret
daa
shrb
inc
roll
push
clc
es
xchg
cmp
out
movsl
mov
pop
bnd
lret
shrl
xor
rcrb
out
mov
ja
aas
imull
ds
pop
push
test
lods
lea
inc
into
push
or
gs
in
xlat
pop
push
shll
adc
jb
lret
ljmp
stc
or
cmpsl
cli
push
lods
arpl
stos
stc
inc
fadds
adc
icebp
push
stos
push
and
push
icebp
ret
movsl
jnp
ret
push
mov
scas
cld
cmp
paddq
iret
sbb
inc
jge
pop
or
adc
or
inc
fs
repnz
and
pop
sbb
and
pop
pop
loop
add
bound
outsl
pusha
mov
pop
cmpsl
inc
icebp
dec
test
xchg
outsb
jg
xor
out
fdivrs
push
xchg
inc
lret
bound
pushf
hlt
cmp
mov
bound
cmp
ret
and
mov
andl
lds
out
cmp
pop
jne
shrb
cwtl
add
jnp
mov
mov
lods
lret
iret
cwtl
xor
lahf
cli
or
xor
cld
push
clc
fcoml
push
leave
lds
hlt
fildll
or
ret
fdivs
ljmp
add
lock
lock
add
jo
repnz
mov
sub
in
sub
mov
popf
insl
popa
ljmp
stos
andb
je
and
dec
mov
or
sub
stos
xchg
jg
test
inc
mov
inc
xor
ja
mov
imul
nop
enter
shll
pop
nop
lret
adc
xor
jbe
jns
aam
cwtl
sub
lahf
lods
pop
movsl
xor
loope
mov
mov
lds
addr16
cli
jne
loope
jl
rolb
lret
cld
aaa
ljmp
dec
test
push
into
adc
pop
imul
mov
les
insl
mov
fcmovnb
mov
jecxz
sub
dec
jl
notl
call
inc
adc
into
mov
setl
loopne
mov
scas
cmp
es
sar
icebp
aas
fcmovnb
push
xlat
inc
mov
pop
mov
aam
lea
or
sbb
mov
sbbl
pop
pop
mov
pop
xorl
lock
shr
xchg
scas
flds
ljmp
mov
mov
inc
fcmove
xchg
jp
imul
in
jb
mov
bound
fcmovbe
in
les
xor
test
push
pop
iret
push
and
fcos
out
aam
lods
popl
int3
inc
cli
aaa
push
je
lock
push
leave
outsl
cwtl
mov
xlat
lahf
cld
lock
and
push
inc
xchg
fldenv
jnp
pop
ljmp
sub
cwtl
cmp
or
or
sub
sbb
mov
stos
mov
stc
hlt
int3
movsb
pusha
mov
shlb
ljmp
ret
sbb
fs
addb
mov
dec
adc
mov
imul
adc
call
cltd
lds
xor
pop
test
mov
arpl
cmp
cmpsl
or
lods
xor
mov
popf
cltd
fiaddl
inc
repnz
cmp
or
pop
ja
loope
scas
add
or
dec
add
adc
stc
adc
xor
repnz
xlat
cld
mov
arpl
mov
or
jnp
fwait
mov
lret
or
and
push
sub
ret
sbb
push
add
jecxz
cmpsl
lahf
movsb
pop
loopne
and
rcl
xchg
mov
cmpsl
cltd
push
cmpsl
cmp
movsb
daa
jnp
inc
dec
pop
mov
push
adc
xchg
and
bound
pop
push
adc
lea
xchg
and
pop
cmp
cmpb
movsl
mov
in
shrb
iret
lret
imul
ret
mov
jge
push
shll
cs
pop
shrb
push
lret
inc
out
lret
gs
jne
cmp
addr16
fwait
test
repz
mov
mov
mov
bound
jp,pt
bswap
aas
push
fcompl
pop
add
addr16
push
cmp
push
sub
mov
jp
mov
jno
dec
inc
mov
gs
fwait
sub
mov
inc
inc
repnz
adc
sarl
out
jns
dec
mov
les
push
pop
mov
push
fimuls
sbb
sti
jb
cwtl
or
or
stos
mov
or
jmp
nop
pop
cmp
ja
mov
adcl
jl
arpl
sahf
lds
enter
rcll
outsl
push
push
mov
dec
imull
mov
fidivs
iret
inc
in
in
lret
xor
adc
xchg
add
pop
dec
add
std
jno
aas
lods
push
test
aam
lret
gs
sub
cli
sbb
adc
pop
fcompl
or
je
int3
outsb
xchg
in
adc
outsb
shll
adc
xchg
sub
jae
push
je
and
lock
fldt
lret
sbb
push
pop
data16
sub
sbb
xor
leave
pushl
xor
mov
arpl
jb
cmp
adc
jo
push
jb
insb
or
cmp
xchg
je
ljmp
pop
sti
repz
pushf
mov
jno
xor
aad
adc
dec
dec
in
int3
cmpl
push
push
pop
cmpsl
jmp
test
cmp
inc
or
dec
inc
xchg
pop
inc
jl
xor
imul
cmp
xchg
mov
xor
jbe
inc
fisubl
bound
mov
iret
pop
dec
sub
xrelease
aaa
pop
push
jnp
int
mov
push
fisubs
add
dec
inc
test
inc
xor
cmpsb
rcrb
xchg
nop
sbb
cli
xor
repnz
mov
jmp
cmpl
lds
fimull
stos
xchg
sahf
iret
cwtl
adc
jge,pn
shll
pop
cmp
out
push
xchg
daa
insl
cmc
push
lods
daa
dec
jnp
mov
push
rep
adc
mov
lahf
cmp
pusha
scas
xchg
jns
hlt
ret
addr16
pop
pusha
xor
test
mov
repz
sahf
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
