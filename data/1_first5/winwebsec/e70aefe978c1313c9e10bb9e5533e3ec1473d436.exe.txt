push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
scas
fdivr
cltd
ret
mov
les
jl
mov
mov
jns
sbb
scas
and
jb
add
mov
lock
ljmp
adc
mov
sahf
mov
pop
jmp
mov
std
lea
rcl
daa
inc
idiv
or
ss
xor
dec
repz
pop
lcall
mov
lods
inc
dec
js
negb
icebp
insl
push
pop
loopne
sbb
sahf
and
add
es
and
sub
jne
lea
jg
push
out
or
pop
dec
adc
cmpsl
fstpt
pop
in
mov
push
xor
xlat
aas
jl
and
jno
cltd
sbb
sub
or
sbb
xor
cmp
ficompl
data16
mov
fbld
push
ljmp
stos
cs
inc
sub
xor
loop
inc
imulb
add
outsb
fisubrl
ss
mov
enter
cmpl
lret
fdivrl
imul
into
stos
xor
push
or
loopne
jg
or
push
pop
mov
enter
lods
and
movsb
pop
mov
movsl
inc
xchg
mov
mov
mov
mov
push
mov
into
push
mov
neg
mov
cs
push
ja
pop
and
cmp
cli
inc
pop
xchg
imul
dec
fdivs
fcomps
push
and
adcl
lods
sbb
jns
cmp
sbb
loope
pop
out
rcrl
rcrb
push
mov
nop
pop
pop
mov
shll
mov
in
push
pop
negb
aad
cld
xchg
repnz
lods
push
les
inc
call
mov
xchg
je
lds
nop
cmp
jno
xchg
xor
xchg
mov
push
fsts
mov
addr16
in
push
nop
cmp
mov
shll
adc
inc
mov
das
in
lock
rcl
cltd
jg
clc
pop
lcall
xchg
cmc
lods
out
push
pop
push
push
test
leave
xor
popa
je
sub
sbb
fldcw
add
mov
pusha
sbb
mov
push
xor
jo
pop
ljmp
sub
pop
push
repnz
mov
iret
xor
and
fistps
movsb
outsb
insb
and
adc
mov
enter
dec
inc
pusha
lret
and
cmp
push
cmp
movsb
es
mov
sbb
jbe
cmp
cmpsl
jns
sub
test
aas
pop
adc
movsb
dec
lcall
ljmp
pop
mov
addb
inc
hlt
mulb
rcrl
stos
lock
add
into
cmp
xchg
adc
adc
mov
scas
lret
in
das
ljmp
mov
or
mov
sub
sub
ror
mov
xor
aad
jb
and
ljmp
adc
scas
pusha
jmp
jp
xchg
cmp
lds
sti
bound
xchg
adc
insb
adc
ja
clc
scas
jnp
cs
je
mov
dec
in
arpl
imulb
sbb
mov
test
fnstcw
out
int3
loope
fxch
adc
fmul
sbb
insb
inc
mov
sub
mov
fwait
out
es
iret
mov
mov
pop
imul
shll
xchg
fisttpl
fs
sub
out
in
jb
jg
stc
fmull
data16
mov
std
push
std
pop
sub
add
mov
adcb
imul
pmaddwd
sub
dec
jne
and
pop
push
mov
jmp
lds
adc
jmp
xchg
rcr
mov
sar
pop
add
push
rol
push
idiv
into
xor
pop
dec
mov
repnz
and
int3
pop
test
cmpsb
outsl
outsb
sahf
sub
insl
mov
and
fcoms
scas
push
mov
or
mov
clc
pop
lea
loopne
ljmp
out
lods
sbb
enter
ds
pop
dec
into
mov
add
int
das
adc
data16
call
cld
addr16
mov
push
fdivr
das
ret
jne
dec
sbb
add
inc
call
lods
ja
rcrl
xor
shrl
cmp
adc
mov
xor
fdivs
jmp
call
data16
in
out
insl
push
or
sti
push
push
push
xlat
iret
mov
call
dec
sahf
push
outsl
rclb
push
jb
add
push
xchg
sbb
sub
lods
dec
cmp
jno
add
push
scas
dec
xchg
jb
jp
clc
add
dec
xchg
cwtl
mov
les
into
inc
inc
pop
leave
aad
insl
addr16
dec
lret
insl
mov
pop
stc
out
xor
pop
add
dec
ljmp
js
out
ret
mov
pop
std
hlt
les
xorl
jge
arpl
adc
jb
inc
sub
mov
enter
test
int3
xchg
mov
loop
jo
in
sbb
leave
sbb
and
cmp
pop
imul
jecxz
and
ja
test
cmpsb
add
sub
ret
js
imul
pop
push
xchg
fmuls
imul
daa
stos
loop
jg
jl
fldl
lahf
je
and
std
mov
cld
clc
xlat
push
mov
cmpl
sahf
dec
sbb
add
or
and
loopne
shlb
push
push
cld
scas
psadbw
xchg
lahf
out
dec
lods
outsl
aas
jb
xor
cmp
jb
inc
pop
adc
jmp
addr16
cmpsl
incl
subl
sub
sbb
fstps
ret
and
pop
das
sbb
fistl
and
mov
enter
pop
scas
push
cmp
mov
mov
cmp
jmp
int3
ret
loope
xchg
mov
pusha
cmp
pop
xor
dec
movsl
sbb
or
cmp
sub
icebp
pop
xor
ficoms
pop
pop
or
nop
mov
sbb
sub
nop
cltd
dec
mov
loope
aam
ja
aaa
adc
test
mov
fsts
mov
jb
test
mov
mov
xlat
sub
or
andl
out
xchg
and
or
insb
rolb
stos
mov
leave
pop
add
push
cltd
je
pusha
xor
or
outsl
in
lds
mov
das
pop
pop
setns
cmp
add
pop
add
hlt
inc
int3
loope
jg
fsubl
mov
inc
xor
inc
add
pop
dec
jge
mov
das
ss
aas
repz
mov
xchg
pushf
dec
jo
aam
repnz
nop
mov
leave
fsubs
mov
jb
adc
inc
imul
scas
negl
or
or
fcoml
or
bound
mov
insb
add
movsb
fisubl
inc
scas
xchg
fwait
xor
fsubl
in
sahf
adc
jne
xchg
std
sbbl
cli
aam
dec
push
repz
rclb
test
mov
push
lods
repnz
call
push
dec
imul
mov
adc
pop
push
mov
es
int3
movsb
sbb
sbb
call
xchg
stc
xor
jmp
fimuls
cmpsl
mov
cmp
ljmp
ja
popf
mov
ja
out
movsl
movsb
adc
inc
mov
and
adc
xor
or
and
dec
push
es
push
mov
mov
mov
jmp
or
mov
daa
xor
mov
cwtl
mov
in
sarb
addb
loopne
and
dec
test
and
pop
outsb
xchg
mov
loopw
cmp
mov
retw
es
aas
mov
bound
push
data16
fmuls
cmpsl
and
xchg
sub
in
dec
pop
add
out
mov
xchg
lock
mov
or
sbb
mov
lods
lods
cmp
add
mov
xor
and
stos
pop
popf
aad
xchg
sbb
inc
cmp
rcrl
push
cmpsl
inc
out
out
aas
push
ljmp
mov
call
out
sbb
push
mov
in
push
sbb
push
adc
ficomps
std
and
mov
jecxz
shll
lea
mov
pop
sub
in
push
cmc
push
xorl
jbe
mov
mov
ds
test
testb
cmpsl
test
pop
fstpt
inc
aam
sub
dec
movl
and
lock
xor
inc
ret
insl
jp
mov
sub
out
out
inc
adc
nop
mov
push
popf
mov
and
sbb
xchg
jmp
xchg
xchg
enter
pop
adc
jge
sbb
push
xlat
arpl
inc
stc
aam
jno
push
add
push
cli
repz
add
mov
push
xor
std
inc
xor
xor
nop
repz
loope
imul
pushf
lahf
ds
xor
jle
js
xchg
imul
xchg
in
add
aaa
mov
lret
aam
jo
add
adc
mov
lea
mov
or
dec
cmp
mov
cmpsl
push
pusha
sub
mov
mov
gs
fildl
roll
out
push
into
dec
insl
mov
adc
pushf
or
fbld
negb
aaa
lods
jno
push
xchg
inc
dec
xchg
dec
dec
xchg
inc
add
bound
leave
mov
in
mov
rcrb
in
fucomip
std
inc
fwait
ja
adc
pop
push
out
iret
sub
lods
cmp
mov
push
push
call
or
es
cmc
pop
addr16
mov
stos
sbb
outsb
jle
sbb
xchg
xchg
inc
push
movsb
stc
pushf
adcb
loope
leave
data16
dec
inc
xor
daa
imul
pop
js
sub
and
add
nop
mov
daa
clc
ror
out
stos
cmp
shlb
rcr
fdivrl
jmp
sahf
sbb
dec
mov
leave
out
xor
lahf
iret
notl
aam
pop
hlt
dec
cwtl
adc
mov
cmp
mov
fildl
mov
xchg
xchg
out
push
add
hlt
mov
xchg
jbe
ficoml
push
jae
sub
outsl
ror
gs
stc
mov
shlb
sub
rcrl
dec
stos
pop
ss
rcr
sub
loopne
jle
adc
ss
cli
and
ja
xchg
in
mov
iret
out
sub
les
adc
clc
mov
push
int
dec
leave
xor
fnstsw
jmp
push
lods
push
add
std
insl
or
aad
add
jae
pop
cmp
movsb
pushf
xchg
stos
leave
dec
add
out
cwtl
pop
rol
fnstenv
out
mov
jne
jnp
mov
nop
cltd
sbb
pop
adc
fsub
dec
push
dec
js
jb
inc
jecxz
push
loop
lds
inc
cltd
out
aam
rclb
pusha
adc
jp
jmp
hlt
mov
idivl
and
mov
ljmp
add
out
ljmp
stos
in
fs
sti
mov
pop
xchg
jns
jae
jnp
xor
push
loopne
and
dec
cmc
sbb
sbbl
pop
aas
xchg
bound
test
or
and
dec
ja
dec
shrb
sbb
inc
movsl
dec
gs
adc
pushf
pop
ret
sbbb
out
repnz
jmp
push
or
jb
mov
icebp
or
subl
xlat
std
mov
cmpsb
sub
push
jmp
mov
or
icebp
inc
jge
add
call
ds
je
fmull
lock
pop
cmpsl
pop
sub
roll
ret
mov
popf
jns
xor
jge
mov
insl
lock
lret
aad
notb
add
arpl
movsl
jmp
sbb
test
xor
iret
sbb
leave
ret
sub
rcll
js
adc
mov
push
sub
jp
clc
sarb
loopne
xchg
mov
repz
inc
lahf
xchg
mov
mov
call
xor
mov
in
xchg
sbb
mov
pop
loop
paddsw
xor
push
add
sarb
icebp
roll
cmp
stos
sub
mov
inc
jo
cmpsl
sbb
xlat
cmp
test
xorb
fimull
scas
inc
pop
aas
sub
and
mov
adc
lahf
inc
leave
or
mov
test
imul
icebp
test
pop
xchg
sbb
popf
scas
ret
cld
ljmp
xchg
scas
push
lret
mov
xchg
and
popf
test
aad
add
pop
int3
add
or
scas
pusha
fstpl
pop
mov
pop
pop
dec
sub
or
sub
rolb
jp
pop
and
lods
fbld
push
setns
inc
enter
sub
repz
sub
pop
mov
sbb
sbbb
mov
push
mov
push
rorb
arpl
jne
inc
daa
js
jg
loop
call
adc
or
orl
adc
test
fwait
inc
xchg
out
mov
jge
adc
and
sbb
lods
or
insb
inc
cwtl
arpl
stos
test
sub
sub
divl
outsl
jle
arpl
repnz
xchg
or
adc
hlt
adc
mov
lds
push
add
add
or
mov
cs
cmp
cli
dec
push
dec
mov
hlt
pop
aaa
xchg
xor
push
sbb
popw
xor
enter
insb
mov
out
loopne
and
pop
das
leave
data16
cwtl
sahf
xlat
sub
dec
les
mov
mov
movsb
out
jl
sbb
push
in
jmp
mov
jp
xchg
js
cmpsl
jle
test
insb
mov
lret
rcrl
ds
icebp
mov
and
adc
pop
test
int3
mov
clc
inc
and
fldpi
and
jb
add
loope
imul
and
ljmp
je
xchg
nop
lods
and
hlt
mov
mov
and
jbe
xor
les
inc
xorb
adc
jmp
sub
xor
bsf
mov
in
bound
cmc
cmp
test
xor
push
in
cltd
sub
int3
jbe
jmp
or
sbb
dec
jmp
outsl
loope
mov
or
xchg
push
add
inc
bound
mov
mov
icebp
orl
insl
push
pop
adc
lds
pop
cmp
fsub
shll
stc
jbe
add
jecxz
jle
dec
inc
or
cmp
lock
inc
fxch
jnp
sbb
leave
mov
push
lret
add
movsb
dec
pop
mov
pop
daa
fisttps
pop
cmp
adc
xchg
das
jmp
add
add
sub
lods
adc
mov
out
push
sti
jns
bound
sub
add
mov
jbe
inc
jno
cwtl
sbb
sub
movsb
shlb
sbb
add
jle
jno
push
pop
addr16
in
and
in
dec
xor
pop
jmp
mov
mov
sub
mov
jle
jo
xchg
and
jmp
inc
or
inc
inc
roll
inc
dec
push
push
repnz
out
aam
mov
xchg
pusha
jmp
dec
stc
arpl
or
lods
cmp
push
jmp
jae
pushf
pop
adc
ljmp
lea
sbb
mov
movsb
pushf
stos
mov
loopew
sbb
daa
xchg
lret
movb
jp
push
mov
leave
rorl
dec
mov
mov
test
mov
test
xchg
push
mov
sahf
subb
nop
sub
jne
jp
push
push
scas
inc
inc
sub
cmp
idiv
adc
cmp
dec
mov
push
jo
insl
ja
jo
lds
jl
dec
mov
fisubrs
faddl
dec
xor
jmp
mov
pusha
lahf
push
mov
xchg
pop
cmpsb
mov
jo
enter
sub
or
popa
or
leave
repz
add
lods
lods
jae
and
mov
fistl
jle
bound
jp
add
scas
sbb
mov
push
mov
sub
das
fisubrs
push
sub
imul
sub
sub
cmp
mov
adc
ds
inc
pop
lcall
scas
mov
les
fadd
dec
pop
mov
xchg
jne
jg
jp
push
push
jmp
lds
mov
nop
mov
int3
aad
clc
xchg
cli
fs
or
and
adc
aam
or
nop
es
std
scas
mulb
aad
adc
mov
sar
cs
fwait
mov
test
cmc
scas
mov
ljmp
stos
aad
popf
and
dec
xor
xchg
mov
dec
dec
movl
pusha
ret
scas
xchg
lcall
sbb
push
loopne
or
mov
into
pusha
cmpsb
mull
sbb
jle
loop
mulb
adc
dec
cs
insb
xchg
and
add
ss
rorl
sub
xchg
clc
push
andl
dec
mov
pop
mov
and
xor
in
jnp
das
dec
dec
das
pusha
xchg
mov
xchg
stc
mov
mov
rcll
sub
adc
mov
faddl
jne
cmc
pop
lahf
xchg
cmc
movsb
dec
int3
mov
cmp
mov
inc
repz
arpl
mov
pop
inc
sbb
sbb
cltd
add
mov
or
and
cli
jo
xchg
jno
ljmp
in
inc
sbb
inc
test
push
icebp
jmp
mov
inc
nop
cld
rcrl
in
loope
push
mov
fadd
stc
out
leave
xchg
add
inc
lret
or
adc
lahf
pusha
dec
in
mov
jnp
mov
or
add
sbb
jl
jb
or
fs
or
mov
scas
adc
jmp
add
jnp
inc
sub
push
xlat
jae
push
jns
gs
ja
push
mov
ljmp
in
dec
xchg
jae
xchg
pop
xor
mov
xchg
cmpsb
fisubl
push
aas
and
inc
sub
push
adc
jnp
adc
scas
shrl
lods
js
aaa
jbe
sub
test
xchg
cmc
mov
lods
cld
jnp
add
sbb
clc
jb
xchg
xor
xor
add
lahf
jo
scas
jmp
sbb
pop
push
push
arpl
aad
pop
jg
shl
mov
cmp
pop
cmp
jb
jmp
and
jp
cmc
mov
aam
xchg
in
add
ds
adcb
data16
in
mov
mov
jle
sbb
and
pop
cmp
fldl
or
jnp
fbld
mov
xchg
sbb
sub
in
fldt
call
popa
daa
orl
addr16
subb
stos
xor
cs
push
pop
mov
clc
test
es
jg
sub
xor
dec
xor
frstor
cltd
mov
mov
jmp
inc
pusha
fcomps
cmpsb
inc
fiaddl
enter
sbbb
jo
popf
movsl
ds
mov
pop
jle
push
cli
lods
cmp
cmp
pop
adc
pop
adc
cmc
sub
insl
push
cmp
add
add
mov
adc
cmp
push
add
int
subb
inc
rorl
add
dec
addl
cmp
sub
cmp
dec
jecxz
pop
imul
rorl
pop
scas
fldl
lea
mov
sub
test
mov
push
add
inc
mov
mov
jmp
pushl
xor
cmc
shll
xor
push
and
dec
cmp
and
pop
push
jo
sbb
or
or
insl
pushf
xor
leave
outsl
xchg
pushf
push
xor
mov
into
and
mov
andl
inc
adc
cmp
adc
mov
xor
scas
out
xchg
sbb
cld
shl
int3
xchg
jmp
shlb
das
testl
sahf
add
jmp
cld
push
das
pop
inc
add
das
jne
fldt
in
push
sbb
fmull
mov
stos
enter
cmpsb
insb
mov
scas
adc
add
mov
inc
push
scas
fwait
outsl
into
jae
adc
cmp
or
stos
xchg
push
mov
cmpsl
sahf
add
or
or
shrl
sti
add
dec
cmp
xchg
xchg
gs
nop
mov
sub
pop
in
push
pushf
mov
mov
mov
xor
inc
xor
mov
iret
and
cmp
out
dec
mov
sti
mov
popa
lret
movsb
fldt
mov
clc
pop
adc
mov
dec
inc
inc
daa
in
cmp
icebp
shll
mov
jg
cli
je
push
add
jge
gs
fsubrs
scas
pop
jns
shrl
gs
fiadds
adc
push
xchg
fiaddl
xchg
sbb
mov
fs
xor
outsb
cs
js
stos
or
xchg
or
ds
out
mov
ret
outsl
and
fsubrl
pop
lock
and
adc
fcomp
jle
lret
and
cmpsb
das
gs
jp
fs
data16
jmp
jnp
mov
push
mov
mov
gs
xlat
es
sub
jns
xlat
gs
dec
shlb
sub
add
xchg
dec
stc
sahf
or
add
popf
dec
inc
les
adc
cs
pop
or
cmp
push
add
jae
add
and
adc
or
inc
faddp
addl
cmp
cmp
stc
xchg
cs
out
repnz
push
in
jle
and
nop
mov
push
cmpl
sbb
jbe
out
mov
fdiv
and
pop
mov
shl
pop
cmp
fstpl
addr16
inc
pop
mov
lcall
and
and
int
ss
and
jnp
lret
fs
ret
and
inc
mov
sarb
push
sbb
loop
xorb
push
shll
lahf
stc
movsl
rcll
in
loop
pop
roll
xor
add
mov
movsl
hlt
jecxz
call
js
jns
or
jo
in
and
pop
das
clc
xrelease
cmp
jmp
loope
mov
mov
mov
cmpsb
add
lcall
jns
es
add
mov
add
sub
ficoml
in
and
jge
call
and
enter
mov
inc
mov
cmp
cmpsb
mov
pushf
add
shlb
stc
cltd
xor
cmc
push
fstps
or
sub
ret
jnp
outsl
xor
jns
repnz
cmpsl
movsl
or
inc
dec
push
fs
jbe
xor
jmp
jbe
jae
outsb
mov
mov
loop
lahf
jmp
cmc
shrb
jae
xchg
shrb
dec
scas
jecxz
and
mov
mov
xor
adc
push
mov
lods
mov
push
scas
add
inc
shrl
subl
insl
jl
iret
xor
cmpsb
nop
mov
mov
mov
arpl
test
xchg
mov
jmp
outsl
add
mov
push
mov
enter
lea
pop
push
mov
in
xchg
jne
mov
mov
xlat
sub
and
inc
les
dec
cmp
rol
push
xchg
daa
lret
nop
fstpl
or
pop
jecxz
aas
call
jecxz
push
add
mov
call
std
mov
mov
lock
jmp
pop
mov
mov
icebp
add
sahf
into
mov
push
mov
jo
dec
and
fists
outsl
imul
jnp
jae
mov
and
cs
xchg
ret
fmull
jns
outsb
fs
icebp
mov
ss
outsl
js
out
push
push
rclb
popa
add
dec
mov
jo
cltd
cli
adc
popl
add
xchg
in
dec
loope
adc
cmc
and
adc
push
xchg
shrb
jo
mov
sbb
cmp
pop
mov
lret
add
push
lret
mov
jb
mov
mov
loopne
cwtl
mov
mov
xchg
xchg
lahf
dec
jmp
mov
mov
sbb
pop
inc
cmp
imul
push
shr
fldenv
lahf
add
pop
inc
int3
dec
sbb
lock
inc
rorb
jbe
mov
pushf
jne
out
fcomps
fwait
mov
push
jo
sbb
in
cmp
mov
imull
nop
pop
cmp
lcall
xchg
iret
lret
push
sar
jns
mov
shl
movsl
sbb
adc
pop
adc
pop
adc
test
ja
cld
hlt
mov
mov
shrb
jecxz
insb
lock
shlb
leave
mov
fsts
cld
inc
sub
jmp
movsb
call
mov
mov
jbe
or
add
test
or
and
dec
lahf
fisttpl
movsl
jg
add
jns
push
mov
pop
inc
sahf
fs
int3
sbb
lods
test
sub
test
xchg
mov
jecxz
int
pop
leave
jo
movsl
enter
pop
jmp
push
lcall
dec
pop
outsb
es
sbb
jbe
cmp
jle
sbb
or
lods
ja
popf
outsb
sub
hlt
pop
icebp
mov
popa
jno
scas
stos
xchg
ret
in
scas
pop
mov
je
fcoms
push
sub
jmp
mov
ja
lock
js
or
inc
jo
in
stos
xor
adc
push
pop
cmp
or
sub
and
or
jg
lods
mov
pusha
mov
mov
cmp
roll
dec
or
or
xor
sbb
fs
je
aad
cmpsl
pop
cmp
xchg
sub
sahf
cmpsl
sbb
das
push
pop
pop
ja
ja
xchg
lret
push
sub
out
jp
fsubs
cltd
pop
adc
imul
scas
jbe
xor
mov
sub
sbb
mov
dec
cltd
mov
mov
mov
pop
mov
or
cmp
test
fdivl
loopne
jmp
cli
jp
pop
out
mov
fstp
and
mov
push
movsl
sbb
pop
enter
jno
mull
adc
cmc
das
sub
scas
movsb
in
enter
jge
mov
and
add
filds
cltd
out
cmpsl
pop
mov
rorl
sbb
mov
xchg
dec
jae
addr16
lret
fnstsw
addr16
sti
loop
jne
setb
push
push
movl
rcll
cmp
add
adc
mov
bound
pusha
fdivrs
or
mov
push
and
out
dec
ds
lods
pop
das
lahf
mov
fimull
loop
mov
inc
cmpsb
mov
enter
jo
dec
cmpsl
inc
push
addr16
into
or
adcb
enter
mov
push
mov
data16
inc
xlat
push
xchg
xchg
mov
pop
insb
adc
int3
xchg
lcall
arpl
jl
cltd
je
cwtl
inc
adc
loope
popf
aam
xchg
pop
fwait
jae
push
sbb
cli
mov
fldl
sti
shl
mov
imul
loop
adc
mov
mov
mov
mov
jle
xchg
inc
lcall
mov
loope
jmpw
loopne
mov
shr
mov
and
mov
pand
mov
in
mov
pop
icebp
in
inc
inc
mov
flds
in
lds
imul
aad
mov
repnz
push
mov
outsl
inc
popf
cwtl
test
pusha
add
mov
es
pop
in
loopne
leave
inc
repz
cmp
loop
or
push
mov
pop
dec
mov
stc
ret
dec
push
and
inc
sbb
and
inc
nop
mov
lret
jecxz
pop
rcl
xlat
popa
jb
mov
hlt
push
xchg
lret
sbb
pop
or
mov
xlat
rep
std
jae
lcall
mov
into
lret
lret
xor
push
jg
mov
sub
xor
enter
fs
jbe
cmp
add
aam
movsl
loope
clc
and
int
inc
popf
push
clc
sub
and
test
daa
jb
in
std
cmpsb
mov
push
sub
mov
rcr
mov
xor
out
fs
std
call
loopne
mov
pop
scas
inc
add
mov
adc
push
scas
inc
inc
nop
fstpt
cmp
fxtract
inc
insw
xor
aaa
dec
sub
jne
mov
repz
jbe
imul
adc
je
and
outsl
jle
or
mov
adc
ljmp
mov
or
jne
pop
push
dec
jb
cwtl
cld
cmpsl
loop
outsb
repz
pop
mov
mull
jmp
pop
jnp
cld
ds
das
jb
rcr
test
bound
out
lcall
sub
movsb
inc
leave
cmpsl
in
sub
outsb
ss
inc
std
jp
sarb
mov
inc
sbb
mov
sub
add
iret
ja
pusha
xor
movsl
test
rclb
bound
mov
inc
mov
fisttpl
inc
pop
mov
cmp
jnp
pop
inc
arpl
outsl
mov
mov
movsb
sbb
push
sub
xor
inc
mov
or
inc
aas
in
push
or
in
dec
dec
cwtl
add
xchg
mov
addb
push
rcl
jae
jo
or
dec
xor
push
or
push
pop
fdivrl
testl
pop
push
pop
jp
sub
sub
int
sub
mov
out
outsb
mov
push
cld
adc
add
lock
negl
pop
bound
dec
mov
in
out
fstps
imul
lcall
adc
nop
std
mov
sbb
imul
mov
pop
mov
sbb
mov
and
imul
pop
xchg
xor
xor
out
xor
push
shlb
adcb
faddl
popf
aam
jnp
outsb
push
inc
adc
mov
push
lods
roll
cmp
out
test
or
je
xor
and
push
in
call
popa
lret
jne
test
int
iret
stos
dec
ja
mov
int
jmp
push
pop
clc
mov
adc
mov
xor
repz
pop
int
repnz
ret
jmp
xor
aad
int
sbb
stos
or
xlat
scas
sbb
lds
aas
dec
cli
fstl
das
add
xchg
leave
sub
inc
jecxz
mov
pop
nop
jl
pushf
mov
xor
jmp
adc
dec
adc
push
pop
insl
jb
adc
add
xor
lahf
dec
cmp
push
xlat
fnsave
out
das
mov
das
dec
repnz
jle
and
in
xchg
repnz
outsl
inc
fldcw
arpl
jmp
rcl
push
pushf
add
mov
test
popa
xchg
insl
jge
sub
jnp
mov
adc
xor
lea
add
cmp
xor
push
push
in
and
addb
test
out
pop
mov
mov
aas
insb
xor
pop
cwtl
mov
sti
outsl
cmp
push
mov
sub
xchg
adc
mov
test
jmp
lret
cmp
xchg
inc
dec
je
int3
in
xlat
mov
mov
jns
sbb
jno
cmc
jno
adc
mov
xorl
ret
fadds
ret
negb
aaa
cwtl
adc
popa
shrb
or
mov
jmp
sub
movl
stc
es
sub
cmp
pop
mov
xor
iret
scas
scas
ja
incb
lods
sub
pop
loopne
adc
push
mov
sub
sbbb
cmc
into
arpl
mov
data16
mov
mov
cmp
and
arpl
test
dec
fdivl
out
ss
xor
test
out
mov
lahf
mov
or
inc
push
les
dec
mov
push
out
adc
jns
mov
sti
div
mov
in
xchg
mov
in
and
pop
xchg
mov
xor
dec
mov
jecxz
adc
sti
ret
sbb
in
je
pop
pushl
inc
inc
orb
or
xchg
scas
lods
and
cmp
adcl
push
mov
xchg
sbb
lahf
sbb
adc
dec
iret
xor
andb
jbe
mov
stc
mov
loop
add
mov
loopne
cmp
xchg
popa
in
pusha
dec
push
lret
push
xlat
pop
ljmp
iret
mov
sub
aas
dec
into
ljmp
push
es
lcall
add
jb,pn
cltd
subl
stc
in
pushf
mov
fistps
xor
jle
lds
dec
setb
movsl
mov
push
or
mov
fisubrl
sbb
jae
push
xorl
pop
cli
mov
aas
mul
mov
adc
in
adc
xor
jge
fisttpll
out
pop
and
inc
xchg
cmp
insb
int
mov
jne
hlt
inc
jge
clc
mov
adc
jae
or
push
fisubrl
cli
pop
insb
lock
jb
sub
push
push
inc
and
or
and
insb
dec
sub
add
mov
scas
iret
in
add
xchg
sti
incl
inc
or
imul
pop
int
or
cmpsb
inc
lock
push
aad
jmp
xchg
imul
lret
aaa
and
mov
mov
push
out
cmpsb
rorl
outsb
ret
mov
cmp
xchg
push
pop
sbb
ja
aad
lret
jl
add
push
xchg
cmpsl
and
pop
ja
adc
dec
xor
loopne
push
dec
imul
push
push
in
bound
pop
push
adc
outsb
aas
nop
sub
jbe
shl
cwtl
fs
and
sbb
out
rolb
popf
mov
xchg
sarb
sbb
outsb
push
lret
sub
push
xchg
xchg
fwait
jne
daa
adc
dec
icebp
lods
dec
loop
add
cmpsl
cmp
pop
or
push
movsb
stos
mov
aas
test
add
adc
jle
out
js
mov
and
pop
or
repnz
lret
popa
dec
add
push
cmpb
xor
xor
insl
leave
addb
test
mov
outsb
push
lods
mov
sti
scas
fs
push
xchg
int
pop
sbb
std
cmpsb
dec
or
cmp
jmp
mov
mov
mov
push
add
xor
jp
push
and
out
add
sbb
mov
adc
xor
les
mov
insb
cmp
inc
ret
sub
xor
jae
cmp
adc
out
rclb
add
or
cmp
pop
out
jl
scas
ret
iret
mov
fnstcw
xor
xchg
add
fisubs
cmp
cmp
arpl
loop
test
ret
mov
stc
adc
mov
adc
lds
insb
mov
jnp
add
mov
sbb
loopne
or
fs
xchg
xor
xchg
xorb
push
int3
ljmp
ret
pop
add
jl
movsb
cmp
roll
push
xchg
aad
lcall
leave
push
mov
xor
roll
icebp
dec
add
jb
push
xor
xor
stos
adc
push
xor
jne
dec
add
cwtl
ds
inc
inc
repnz
inc
std
mov
xchg
jl
hlt
adc
pushl
in
dec
dec
enter
jecxz
xor
xor
mov
jnp
mov
lods
xchg
pushf
dec
cmp
and
imul
icebp
mov
sub
addr16
sub
mov
push
push
xchg
cld
scas
adc
sub
hlt
pop
stos
cmp
mov
repz
stc
xchg
cmc
fmulp
insl
movl
inc
push
pop
call
inc
out
cmpsb
lret
bound
dec
mul
mov
dec
into
outsl
pusha
inc
movsl
or
dec
add
movsl
in
arpl
xor
inc
cli
jns
sub
int3
lcall
add
cmp
push
in
lods
inc
mov
daa
ret
pop
jle
adc
loop
out
xlat
xchg
iret
popl
inc
imul
jno
test
imul
jg
push
out
xor
pop
fistpll
lods
add
or
mov
bnd
xor
shll
jge
scas
cmp
es
fs
jo
in
jae
aas
iret
dec
popf
push
jp
nop
cld
inc
bound
mov
jae
outsl
jmp
imull
or
or
and
jg
jl
dec
ss
and
inc
jb
xchg
cmp
lret
int
mov
cmp
mov
jl
aas
and
or
xchg
gs
xor
push
xor
bnd
call
dec
fstps
push
xchg
add
inc
hlt
jp
sub
test
movsb
clc
fistpl
pop
cmp
nop
das
fcmovbe
lds
xchg
repnz
and
mov
adc
add
ret
xor
shrb
imul
mov
pop
scas
movsl
movsl
les
sahf
adc
shlb
cli
mov
cwtl
add
add
add
lods
gs
xor
das
mov
inc
stc
adc
repz
ret
lods
push
or
pop
adc
and
dec
push
xchg
jbe
push
sub
push
mov
or
cmp
stos
aas
ret
jle
in
and
lcall
lcall
and
int
push
fmull
in
ss
xorb
inc
push
sbb
mov
sub
mov
cwtl
xor
shlb
mov
leave
stc
fmull
lea
leave
mov
add
xorb
pop
nop
push
out
test
dec
jl
push
sqrtps
daa
or
mov
fisubl
push
mov
pusha
sub
or
adc
mov
fsts
shlb
jno
or
sbb
jl
cli
push
cmp
xlat
rcrl
or
push
mov
into
fnstsw
in
dec
inc
push
enter
clc
xor
jl,pn
shlb
push
sub
mov
push
rcll
pop
lods
mov
repz
cwtl
sub
push
je
insb
cmp
dec
ss
fsubrl
pop
mov
shrl
push
lret
mov
adc
jle
pop
mov
push
mov
in
mov
xchg
fsubrl
enter
in
lea
adc
mov
frstor
outsl
push
jns
cmp
cmp
shll
sub
lret
pop
dec
ss
xchg
pop
push
cmp
insl
xor
lcall
push
outsb
int
fsub
jnp
shrl
test
inc
fs
ds
cmp
sbb
pushf
loope
or
mov
and
push
push
mov
pop
into
cmp
dec
jle
mov
pusha
or
mov
jge
dec
xchg
out
sub
mov
adc
mov
mov
adc
sarl
cmpb
jb
pushf
xor
insl
jle
push
incl
xchg
and
add
jge
push
mov
sub
and
add
pop
mov
int
lds
or
repz
mov
mov
fiadds
adc
unpckhps
or
addr16
fnstcw
xchg
scas
pushl
dec
dec
shrl
loope
movsb
cli
fldenv
lahf
aam
jecxz
or
aaa
mov
fst
xchg
xlat
jmp
sbb
adc
xchg
aam
imul
lods
xor
pop
mov
fadds
push
popf
rcrb
cmp
push
ficompl
insl
call
addl
shrb
repz
cli
mov
sbb
jl
out
loop
mov
xchg
js
xchg
xor
icebp
aad
sub
dec
pop
mov
and
push
pop
dec
stos
mov
sahf
mov
mov
or
xchg
jmp
mov
push
sarl
cld
and
dec
inc
pushf
fisttpl
loop
cmpsb
push
push
das
fisubrl
pop
pop
gs
fsubl
lret
add
sbb
dec
xchg
test
push
or
add
imul
rcr
mov
sbb
add
add
add
lret
fwait
cmp
pop
sbb
and
inc
or
cmp
inc
mov
aad
fcmovnb
rcl
mov
aas
ds
stos
es
push
add
pop
xchg
and
push
add
mov
xchg
rorl
jo
arpl
xor
mov
mov
inc
push
jb
repz
push
outsl
sub
fs
outsl
push
mov
loope
imul
mov
jno
inc
mov
jp
stos
sbb
pop
push
jnp
enter
adc
cmpsl
inc
je
in
mov
or
stc
jge
adc
jl
addr16
or
insl
xor
fsubrs
mov
repz
xor
and
xchg
mov
pop
jecxz
sub
jecxz
xchg
mov
bound
xor
mov
xor
mov
jecxz
fs
add
fcmove
cld
rcr
adc
notl
cwtl
dec
xor
cld
xchg
jecxz
fs
jae
xchg
xchg
scas
jl
nop
testl
sti
out
xchg
mov
jg
push
in
sub
push
aaa
sbb
fbld
cmpsb
pushf
xchg
xor
in
push
cmc
mov
sub
sbb
mov
xchg
fdivrp
movsl
addr16
hlt
mov
aam
push
mov
fcoms
mov
mov
push
xor
inc
sbb
loop
popf
rolb
popf
bound
dec
xchg
cltd
pop
movsb
clc
mov
mov
mov
and
aam
in
scas
sar
outsb
or
lds
jmp
clc
push
ja
jno
dec
in
jg
mov
pop
ljmp
stos
add
ss
mov
and
ret
and
pop
jb
and
pop
cmp
scas
enter
inc
js
add
pusha
push
sbb
rorl
mov
push
mov
mov
les
sbb
push
stos
out
cmp
mov
lds
cmp
test
aam
mov
rclb
push
cli
mov
mov
xchg
scas
loop
aas
iret
cmp
jl
iret
mov
stos
push
mov
jae
push
out
add
push
jp
ret
dec
lcall
sti
mov
mov
or
ljmp
mov
push
mov
jmp
xor
in
lock
push
std
pushf
fsubr
xchg
in
das
sbb
pop
rcr
hlt
insl
jmp
iret
mov
jns
aad
ds
xlat
fidivs
cmp
enter
jle
lret
xor
daa
sbb
sbb
cmp
loopne
mov
leave
pop
xor
lret
bound
lods
push
adc
cmp
lret
ljmp
fwait
pusha
shr
jp
rorb
sub
xor
or
imul
mov
cmpsb
stos
arpl
or
ss
int3
lahf
stos
jns
add
mov
cmp
stc
sub
daa
insl
push
stc
fstl
aam
sub
and
and
pop
fistl
sub
mov
adc
sti
ss
jge
jg
xchg
bound
and
dec
jne
loopne
inc
adc
hlt
or
imul
jne
ror
mov
xor
xor
mov
ds
cmpsl
sub
out
call
adc
incl
cltd
push
in
xchg
jge
mov
xchg
sub
xor
outsb
mov
sbb
sbb
mov
mov
mov
rcrl
lea
ret
fs
loopne
test
test
lock
sbb
out
mov
push
xchg
je
lock
pop
leave
mov
std
adc
xor
into
cwtl
aad
mov
insl
sub
sti
mov
fcoml
loopne
jl
xchg
aam
jge
pop
adc
xchg
xor
or
dec
mov
bound
testb
je
in
icebp
es
out
mov
jno
dec
shll
xchg
movsb
call
push
add
sub
or
jecxz
mov
icebp
stos
lods
mov
xchg
ja
add
fstpl
in
stc
mov
push
mov
cmp
xor
dec
adc
es
xor
inc
adc
ljmp
add
push
sbb
dec
pop
sbb
cld
mov
add
dec
aam
fdivl
fsts
jle
stc
dec
cmp
daa
movsb
scas
dec
and
push
out
loopne
imul
insl
jp
inc
in
sbb
lret
adc
add
jo
std
loopne
fwait
xchg
pop
loopne
arpl
mov
in
addr16
enter
data16
ljmp
insl
xor
push
mov
lea
mov
cmp
jns
jae
cmp
cmp
inc
ret
mulb
mov
xchg
in
add
sub
je
add
test
push
bound
pusha
add
pusha
inc
sub
test
mov
sbb
cmpb
dec
out
cmp
dec
jnp
mov
sbb
pop
negl
cs
adc
jmp
mov
das
inc
cmp
out
jno
fsubl
loope
nop
cmpsb
mov
test
pop
add
mov
adc
cwtl
lcall
test
push
loope
and
jb
jnp
dec
add
test
roll
mov
sbb
adc
sbb
cmpsl
mov
push
xor
jge
sub
xchg
jne
js
mov
into
cmp
sub
popf
add
in
pop
add
fmuls
xchg
pusha
mov
push
push
pop
movsl
divb
or
push
sbb
or
dec
pusha
into
bound
pop
call
ret
std
jno
cmp
popa
push
shrb
mov
imul
pop
xor
daa
mov
sub
mov
jb
inc
dec
dec
insl
shrb
xchg
mov
jecxz
loope
mov
cmp
cmpsl
sbb
hlt
push
inc
lahf
fidivs
in
and
daa
pop
sti
pop
xchg
int
adc
sbb
lods
pop
add
insl
sub
push
xor
cmpsb
xchg
icebp
aas
stos
inc
inc
into
xor
bound
cwtl
and
jae
idivb
add
or
int
inc
mov
add
mov
ds
fldcw
das
test
jo
in
orb
mov
mov
lods
sbb
lea
mov
pop
sub
xchg
dec
lock
jno
push
rcl
jecxz
std
shrl
xchg
add
adc
inc
mov
fidivrl
in
dec
imul
rcr
mov
sub
das
aam
push
dec
or
and
push
add
int3
imul
outsb
jg
mov
rorl
arpl
add
cmp
gs
aaa
int3
dec
xor
inc
frstor
lods
loopne
stos
push
es
daa
pop
daa
mov
cwtl
lret
in
nop
in
jmp
xchg
sbb
sbb
sbb
pop
cmpsl
and
xor
mov
adc
cmc
sysret
push
lret
sub
push
jo
jp
ret
xchg
aad
jae
lods
in
lcall
testb
mov
in
lahf
or
enter
xlat
mov
mov
pop
push
cmp
es
mov
into
lods
jecxz
fs
lret
xchg
fs
jae
xchg
sti
mov
pushl
je
mov
loopne
push
mov
rorl
inc
negb
mov
add
test
jae
push
movsl
xchg
call
cmp
aas
iret
cmp
sbb
rorl
arpl
cmp
testb
pop
inc
push
cwtl
in
xor
xor
mov
jae
pop
icebp
fistps
sbbb
lret
and
jle
lret
push
aam
mov
dec
aam
push
push
cld
incb
push
mov
xchg
pop
outsb
out
fdivrl
scas
mov
sti
loopne
in
add
adc
icebp
movsb
mov
stos
add
mov
push
xchg
mov
sbb
ja
adc
jg
push
sbb
add
out
aas
jb
lcall
les
neg
push
outsb
call
testl
je
cli
cltd
inc
sub
sbb
mov
add
int3
leave
fs
jnp
imul
mov
gs
in
add
lret
pop
gs
cld
xor
cs
mov
hlt
mov
jl,pn
inc
sbb
dec
push
in
cmp
jo
adc
pusha
xchg
mov
dec
sti
cmp
push
cmp
sub
mov
pusha
sub
add
xor
clc
jg
rcrl
cmpsl
fcmove
stos
dec
outsl
aaa
aas
cltd
or
pop
arpl
es
and
outsl
push
clc
je
sub
cmp
out
dec
push
je
popf
sbb
cmp
mov
loop
insl
jp
mov
xor
inc
jb
mov
cld
pop
gs
aam
cld
arpl
test
int3
push
fs
sub
lret
mov
dec
dec
leave
std
inc
cmp
jo
adc
lret
cld
jo
into
or
mov
sbb
xor
dec
jmp
int
out
and
call
mov
lods
out
roll
push
filds
xorb
sbb
cwtl
test
int3
push
dec
int3
lock
xchg
gs
add
mov
add
cmp
in
and
push
repz
int
pop
and
jmp
and
imul
pop
xor
shll
movl
and
jno
inc
sarl
mov
pop
dec
add
aam
cmp
sub
pop
and
leave
popa
rcl
lods
pop
cmp
in
lock
sub
stc
inc
sub
lds
cmp
insb
push
fadd
pop
cmp
ja
add
jne
fiaddl
popf
sti
xor
test
les
es
cld
inc
xor
add
nop
xchg
mov
add
and
in
mov
pop
sbb
sarl
repz
and
ret
mov
out
rorb
sbb
popa
adc
shll
cmp
cwtl
mov
test
jg
mov
cs
mov
sarl
inc
mov
je
mov
cmp
out
push
loopne
jne
dec
pop
or
dec
dec
sub
cli
pop
pop
xlat
lock
sub
aas
jecxz
inc
insl
dec
lahf
in
lret
push
mov
sbb
push
sub
mov
scas
sub
xor
jns
pop
xor
add
hlt
adc
lea
std
ficomps
adc
and
jp
xor
xchg
add
and
push
jnp
mov
loop
sti
outsb
addb
ja
js
sti
add
ficomps
adc
mov
jmp
out
mov
sbb
ret
aas
lods
test
outsl
fsubrl
mov
in
ds
or
roll
sub
cmp
bound
pusha
mov
aad
inc
xchg
out
outsb
mov
mov
cmp
lret
pop
inc
and
movsb
ss
shrb
xchg
test
ja
jle
jne
jle
push
and
fbld
cmpb
push
xor
lock
imul
jbe
mov
ret
lods
in
pop
and
lret
cmp
or
outsl
push
pop
ret
pop
cmp
je
xchg
xchg
xchg
addr16
add
loop
iret
in
mov
pop
pop
sbb
dec
leave
out
pop
iret
lret
rclb
mov
ds
jbe
jl
jnp
mov
push
hlt
lds
movsb
mov
sahf
lahf
dec
xacquire
dec
arpl
xchg
fwait
push
adc
arpl
and
sub
test
aam
and
cmpsl
insb
pop
rclb
sub
and
inc
jmp
repz
cmpsl
or
lods
in
mov
addr16
sub
flds
jg
sub
ret
cmpsl
dec
std
inc
mov
imul
cwtl
add
test
in
sahf
jnp
aad
push
jnp
fs
cli
ljmp
mov
jbe
shlb
shr
pop
stc
cs
mov
pusha
mov
dec
jmp
xor
mov
jno
sub
inc
mov
xorb
into
mov
in
xchg
inc
loop
xor
xchg
jmp
popf
jne
mov
test
pop
stos
push
hlt
insb
jo
cmp
fisttps
sqrtps
lret
daa
insb
pushf
fisttpll
ljmp
fcmovne
sub
pop
rol
adc
cltd
cli
mov
lea
push
mov
xor
jbe
out
jo
push
in
or
cmc
xchg
inc
mov
cs
lret
daa
stc
cmpsl
movsl
adc
or
adc
fdivs
fstps
inc
inc
inc
in
arpl
call
xchg
clc
sub
push
mov
lahf
int
xchg
pop
test
je
xor
cli
xchg
cmp
aam
lahf
mull
jbe
xor
in
stos
sarb
mov
mov
rolb
or
jge
stos
cmp
or
cmp
ja
mov
push
gs
stc
jnp
jae
adc
push
rorl
into
inc
cmp
cmc
sub
or
enter
imul
out
fmuls
inc
jo
rclb
xchg
xchg
push
jns
adc
orl
icebp
mov
popf
jo
jnp
bound
pop
shrl
rcll
and
pusha
and
mov
mov
mov
lds
mov
xlat
dec
xchg
ljmp
mov
and
fistpll
inc
push
and
into
or
and
sub
jp
mov
fs
sub
cs
xchg
scas
pushl
sbb
es
lret
pop
pusha
xchg
int3
cli
mov
or
adc
and
sub
add
mov
sahf
push
xchg
std
inc
add
sub
rorb
lea
jge
xor
dec
push
cmpb
jns
jmp
mov
js
adcl
pop
pop
ret
mov
cmp
leave
repz
jg
bound
xchg
ret
stos
lds
pop
hlt
push
sub
shrb
cmpsl
outsl
fistpll
dec
je
pop
lret
ss
mov
ljmp
and
lea
inc
adc
pop
push
inc
mov
pop
lods
inc
lock
testb
jae
fisubrs
adc
jbe
and
icebp
mov
fcomps
nop
push
cmpl
pop
mov
dec
or
aaa
inc
xor
aas
sub
ret
push
leave
int3
xchg
and
addb
jl
inc
sub
in
mov
sbb
dec
adcb
dec
pusha
jns
mov
aad
cmpsl
pop
xchg
ljmp
push
pop
push
out
shl
out
adc
ljmp
and
test
mov
adc
sub
cmp
test
adc
xchg
or
fsubrs
movsl
sub
cmp
mov
mov
iret
inc
sbb
xorl
arpl
adc
add
cmp
int3
test
lret
xchg
int3
in
sahf
and
insb
inc
cmp
scas
mov
addr16
xor
test
mov
mov
cmp
dec
jnp
adc
out
xor
dec
dec
in
mov
test
pop
sbb
cmp
shr
pop
lods
mov
into
mov
adc
enter
add
nop
loopne
int
movsl
lahf
incb
shrl
out
int
dec
lods
cltd
and
jns
inc
add
scas
pop
std
nop
mov
fildll
pop
ret
add
sbb
aam
mov
popa
icebp
pop
mov
mov
pop
jne
cmp
movsl
mov
push
xor
test
jns
mov
test
andb
outsb
pop
pop
cs
adcl
push
mov
sbb
pushf
adc
dec
sbb
js
test
jae
push
xchg
inc
xchg
addr16
dec
mov
ljmp
add
test
xor
insb
stc
add
push
imul
xor
das
ss
cwtl
sub
mov
pop
cli
ja
les
sub
sub
cwtl
subb
popf
enter
aas
jo
dec
sub
cmp
xchg
adc
adc
inc
mov
int
leave
mov
rcl
shr
out
lcall
fwait
mov
xor
lea
inc
xchg
lret
scas
push
mov
or
out
jb
imul
arpl
leave
cwtl
insb
sbb
ret
sub
dec
and
out
or
cmpsl
dec
fs
dec
and
xchg
pop
lea
xchg
inc
call
dec
in
movsl
repz
add
jnp
lods
xchg
fisttps
sub
push
mov
sti
and
mov
test
xchg
or
sbb
aam
inc
pop
repnz
xor
xorb
xchg
pop
ret
mov
push
pop
leave
adc
pop
jb
sbb
test
scas
test
mov
xor
scas
sub
ret
aaa
and
mov
in
jbe
jb
clc
sub
add
hlt
lods
clc
sub
adc
cltd
ja
fstps
mov
jno
repnz
jecxz
xchg
fs
pop
loope
popa
pop
lahf
pop
test
jl
mov
inc
les
cmp
xor
cmp
lods
jg
sub
out
mov
mov
arpl
adc
mov
rcll
xchg
xchg
inc
jbe
pop
xor
dec
into
sub
ljmp
cmpsb
mov
frstor
push
jg
mov
in
leave
ret
jo
push
fistl
and
movsb
push
rcr
or
mov
fstpt
test
rorl
std
lret
jne
shll
jg
adc
fmull
xlat
xor
rorb
jnp
or
and
push
subl
mov
push
hlt
notb
xor
push
ja
fwait
sbbl
add
dec
push
ljmp
mov
mov
mov
cmc
pop
mov
xor
xlat
push
out
test
dec
jns
daa
add
ret
std
daa
int3
sbb
shlb
fisubrl
jmp
pop
xor
gs
in
addr16
dec
adc
sub
jl
sarl
das
mov
push
mov
stc
xchg
addr16
and
push
scas
hlt
sub
lods
popf
dec
icebp
hlt
ret
rorl
mov
xchg
ret
std
shlb
lret
push
sbbb
mov
data16
sub
outsl
iret
dec
repnz
lods
lods
adc
lods
push
xchg
pop
test
es
fidivrs
movsb
mov
sbb
lds
insl
push
fstl
mov
cmp
cltd
cli
or
sub
in
loopne
add
ds
hlt
pop
lock
inc
popa
icebp
iret
mov
or
push
iret
sbb
adc
mov
push
mov
mov
scas
lds
cmpsb
push
addr16
mov
xchg
jbe
push
add
rol
dec
mov
popf
jge
push
cmp
sbb
xor
cmp
xor
jp
mov
sub
cmp
and
les
mov
push
test
inc
sarl
jecxz
fnstcw
dec
inc
mov
cmpb
leave
add
out
aad
jmp
xchg
lock
sbb
leave
push
cli
add
fdivr
sbb
lods
in
mov
int3
cld
sbb
push
pop
add
in
ljmp
mov
mov
stc
nop
jg
push
mov
inc
sbb
notb
pop
lds
loop
mov
enter
outsb
loopne
push
and
mov
data16
or
dec
mov
hlt
sub
pop
pop
test
lea
jp
jecxz
out
cmp
cmp
mov
and
fnstsw
nop
or
and
add
or
shl
int
xorl
sarl
xor
push
mov
sub
int3
addb
jno
lret
cmp
pop
sbb
sarb
jnp
leave
cltd
das
daa
fldenv
cmp
out
iret
xor
mov
scas
ret
add
cmpsl
mov
jge
idivb
aaa
dec
or
mov
test
jge
loopne
mov
lea
jbe
sub
cltd
bound
jmp
enter
mov
jp
popf
or
jle
cwtl
mov
add
add
sbb
cld
jmp
lea
ficoml
adc
pop
mov
sbb
and
pop
icebp
cmp
xor
lret
mov
ja
cmp
imul
mov
push
xchg
roll
pop
push
mov
leave
or
push
sub
outsl
sahf
push
test
shlb
insb
aad
mov
lds
rorb
pop
cwtl
lods
das
jl
xchg
sub
je
sub
test
mov
or
bsf
dec
std
push
stos
aas
cmpsb
xor
mov
mov
mov
mov
ljmp
sub
aaa
push
out
add
pushf
xchg
rcrb
or
mov
dec
in
xor
adc
loope
pop
lds
sahf
outsl
jecxz
pop
inc
cmpsl
cmp
xor
cmc
dec
sub
pop
inc
repz
in
lods
cs
jl
adc
inc
aad
xchg
enter
int
or
push
sub
pop
inc
xchg
mov
fcompl
sub
cmp
inc
test
push
sbb
repz
mov
ds
test
sbb
jno
lods
fscale
iret
mov
out
inc
sbb
mov
pushl
aad
cmpsb
aaa
jnp
adc
stc
jp
ss
mov
pop
imul
xor
mov
cmp
xlat
adc
mov
cmp
lcall
mov
adc
test
jl
loope
ljmp
add
push
mov
lock
jno
or
insl
mov
sbb
and
scas
repz
pop
jne
mov
dec
cmc
push
cmpsb
in
jl
inc
cmc
add
ss
push
mov
and
sub
xor
lods
pop
sub
in
push
inc
jae
cld
ret
or
inc
stos
xchg
adc
mov
mov
or
push
pop
fistps
loop
mov
push
xor
ficoml
cmp
jecxz
sub
pop
icebp
mov
mov
addr16
loopne
adc
jmp
decl
cs
mov
pop
pop
mov
stos
sbb
dec
in
jmp
sbb
clc
ja
hlt
sub
pop
jg
dec
jg
and
jnp
jecxz
mov
and
jg
leave
outsb
jp
jle
mov
loopne
ljmp
arpl
adc
cmp
out
stos
in
pushf
xacquire
loop
scas
cld
dec
out
mov
xchg
faddl
shlb
inc
lahf
clc
mov
fwait
mov
arpl
es
addl
stos
leave
imul
push
sbb
push
fbld
pusha
and
daa
push
jb
loopne
movsb
rol
pop
add
loope
popf
xchg
gs
pop
fcmovbe
cmp
dec
fs
adc
in
xchg
gs
dec
push
rcrl
aad
sub
leave
bound
ret
les
mov
mov
scas
cmp
mov
fmuls
dec
lds
mov
hlt
sub
mov
cwtl
rcll
mov
das
push
and
mov
imul
xor
push
lahf
stc
test
xchg
xchg
int
mov
arpl
mov
vcvtsd2ss
dec
cmp
and
dec
movsl
jnp
push
lock
int
mov
les
inc
sti
fcoml
into
push
shlb
and
pop
aaa
std
cli
push
mov
out
add
pop
lods
popf
xchg
jnp
pop
xchg
mov
imul
and
mov
sbb
ljmp
dec
adc
jl
push
jecxz
aad
mov
out
xchg
push
and
jl
and
gs
xchg
ds
cltd
jmp
pop
pop
bound
mov
cmpsb
mov
inc
jp
lcall
fbstp
imul
mov
push
les
or
test
test
inc
dec
rcll
xchg
loope
fstl
outsb
js
lahf
nop
outsb
cld
push
loope
aad
cltd
adc
fldl
cwtl
test
into
add
repz
std
dec
mulb
call
daa
push
stos
xor
popf
mov
gs
in
cs
stos
pop
jbe
leave
enter
cmp
popa
xor
mov
jg
and
mov
notb
lds
pop
cli
int
nop
sub
mov
repz
loop
cmpsb
insb
sti
data16
jb
mov
dec
lock
jmp
mov
xchg
out
loop
mov
cmp
jns
lods
enter
mov
dec
sbb
adc
pushf
pop
push
pop
loop
jb
out
xor
inc
sbb
push
mov
inc
inc
fsubs
push
and
test
adc
jb
push
inc
adc
cltd
xor
mov
out
imul
dec
xchg
mov
pop
rolb
xchg
aad
mov
cmp
inc
mov
decb
adc
mov
mov
adc
push
jp
xchg
dec
mov
hlt
js
push
xchg
lret
adc
cmp
das
leave
push
sahf
roll
sbb
or
and
popa
mov
scas
mov
fisttpl
mov
fdivr
mov
xchg
add
inc
int
xchg
push
jbe
xchg
or
cmpsb
mov
sbb
out
push
into
inc
iret
int3
and
xchg
adc
sub
mov
roll
or
mov
lret
jne
xor
adcl
sub
mov
sbb
mov
mov
jg
jbe
insb
inc
daa
clc
cmp
mov
mov
mov
cmp
xchg
les
push
mov
adc
aad
ret
mov
iret
stos
mov
adc
addr16
dec
or
ljmp
pop
pop
movsl
pop
fsubr
jno
in
add
cli
inc
pop
mov
mov
aam
test
mov
jmp
jmp
scas
xchg
xchg
insb
js
sub
js
scas
jo
xor
inc
int
adc
ss
mov
mov
adc
or
repz
pop
add
repnz
sbb
or
push
call
movb
or
shlb
mov
dec
mov
inc
cmp
sub
mov
lret
inc
test
lret
xorl
mov
pop
mov
and
xlat
cmc
mov
fsub
push
das
or
stos
mov
xlat
les
pop
xor
inc
inc
icebp
subb
dec
mov
inc
loopne
lcall
scas
jmp
dec
jmp
loop
subl
or
popf
xchg
mov
mov
push
shll
stos
cmc
dec
or
mov
pop
cmpl
subb
push
mov
testl
inc
pop
sbb
cmp
cmpl
cmp
mov
loop
notb
call
aaa
punpckhwd
arpl
test
add
dec
mov
inc
dec
ss
jnp
or
fdivr
fnstcw
push
cs
add
mov
loope
fldcw
out
mov
test
jns
data16
out
stc
js
fiadds
jmp
and
push
pop
adc
add
pop
int3
inc
pop
shrl
fimuls
sub
pop
bound
out
outsb
pop
sub
mov
mov
shl
call
mov
daa
push
dec
mov
mov
out
repz
arpl
jns
push
scas
loop
cmpsb
push
push
mov
rol
ret
roll
jmp
lret
mov
ljmp
pop
repnz
xchg
mov
stc
negl
xor
mov
repnz
jae
adc
push
in
or
add
pop
mov
rcrl
pop
fistpl
mov
cmp
adcb
divl
int3
cmp
popf
xchg
mov
stos
xchg
or
add
cli
out
lret
clc
inc
idivl
adc
mov
lret
pop
out
outsb
or
mov
jns
cmp
sbbb
xchg
ljmp
lds
pop
push
jno
loope
insl
cmp
lret
push
xchg
es
or
mov
movsb
cs
aas
xchg
sub
pop
mov
leave
jae
inc
sbbb
sbb
out
inc
sbb
pop
ficoms
pop
gs
jmp
fwait
andl
in
xor
ljmp
imul
gs
jbe
out
mov
pop
bound
aam
xor
jle
inc
pop
cmpsl
sub
std
mov
stc
add
xchg
mov
mov
ficoml
clc
test
mov
push
ljmp
push
sbb
test
pop
ret
fisubl
fimull
and
mov
mov
out
adc
ljmp
stos
pop
fwait
and
push
mov
je
and
ficomps
add
jne
xor
test
lea
pop
jecxz
inc
bound
adc
jo
pushf
cmp
xchg
push
inc
nop
nop
leave
mov
jle
add
dec
mov
xchg
or
in
ret
or
mov
imull
lods
shl
inc
mov
mov
adc
popa
inc
jg
or
or
aas
and
jl
add
scas
jo
orl
pop
dec
mov
xor
add
outsb
mov
sbb
ss
mov
jge
jle
shll
inc
ja
in
gs
mov
insl
mov
cmp
cld
dec
sbbl
inc
xchg
sahf
sub
cmp
xchg
cmp
fsubl
pop
mov
lods
test
mov
fcom
and
call
lret
or
mov
xor
and
or
mov
jbe
adc
adc
lea
incl
sbb
sahf
test
fstpt
pop
hlt
aas
lods
aam
mov
fwait
mov
pop
mov
push
sbb
push
lahf
cmc
jg
cmpsl
pop
cld
sub
mov
mov
lds
or
push
ljmp
call
lea
rorb
ds
outsb
cld
mov
int
mov
decb
sub
in
gs
or
fdivs
mov
dec
inc
mov
add
mov
adcb
mov
ss
push
jecxz
pusha
ret
sbb
push
mov
jge
sub
in
add
sub
int3
xchg
fs
push
add
fsubr
leave
lret
sub
mov
mov
mov
fisubrl
sbb
adc
hlt
ja
cmp
divb
xor
mov
jmp
daa
test
fxtract
fildll
popf
cmp
and
jle
cli
ret
adc
xchg
shlb
lret
mov
lock
aam
fwait
xchg
aad
push
jae
mov
push
stc
dec
jb
aad
mov
inc
testb
jbe
mov
jo
std
popf
jae
and
pop
int3
push
sbb
stc
test
shll
sti
xchg
dec
icebp
push
xlat
mov
mov
dec
jge
adc
in
adc
call
mov
or
mov
aad
sbb
in
jmp
stos
cltd
pop
mov
xorl
das
in
enter
testb
pop
repz
xor
mov
es
sarl
or
popa
xor
mov
das
aaa
jmp
fidivrs
icebp
mov
out
shlb
arpl
fwait
and
push
out
mov
xchg
sub
dec
icebp
je
sti
sbb
shlb
push
popl
xor
mov
inc
cs
inc
mov
sarl
xor
push
sub
bswap
mov
add
fnstcw
ljmp
repz
dec
add
mov
addr16
xor
rolb
pop
data16
dec
sub
pushf
mov
jle
mov
sub
mov
mov
fmull
pop
pop
cmpsl
scas
push
dec
ficomps
mov
lea
mov
dec
in
jnp
outsb
fadd
or
push
fsubl
push
jo
movsb
pushf
dec
pop
add
fnsave
rcl
shrl
add
adc
cmp
and
mov
adc
jae
xchg
ret
jp
fmuls
leave
mov
or
jmp
push
jmp
enter
push
das
mov
out
dec
imul
or
icebp
and
mov
cmpb
repz
adc
mov
imul
out
dec
xor
pop
or
cmpsb
inc
mov
cmp
loopne
mov
pop
pop
ljmp
mov
dec
and
inc
test
call
imul
fisttpl
jno
add
pop
inc
fiaddl
fimuls
adc
xchg
mov
jne
sbb
incb
clc
pop
std
mov
cmpb
cmp
stos
out
add
pop
add
ret
lret
sub
sub
push
imul
lds
out
inc
rol
sahf
or
push
cmp
dec
popa
mov
outsb
adc
imul
inc
ja
stos
fcoms
in
inc
xor
dec
jmp
jle
imul
mov
inc
cmpl
fadds
shrb
rol
push
mov
negl
fwait
cltd
lcall
fisttps
sub
mul
dec
jbe
xchg
fdivrl
xchg
mov
aas
jl
outsb
shrl
sbb
lcall
loop
pop
xchg
and
shll
mov
adc
test
xchg
pop
xor
cmp
bound
adc
movsb
add
dec
ror
sub
add
mov
sbb
pop
xchg
in
outsl
lcall
mov
jecxz
jae
and
jne
inc
pop
sti
sbb
mov
or
push
pop
pop
addr16
xor
ja
xor
mov
add
int
mov
add
mov
add
nop
out
inc
vphaddbw
mov
loopne
sbb
fstl
jo
mov
jae
enter
adc
scas
rorl
cmp
pop
adc
jle
sbb
jb
push
or
cltd
imul
cs
mov
mov
ja
orb
leave
and
das
shrb
xor
pop
arpl
dec
inc
lahf
xor
mov
jle
mov
pop
inc
push
fidivl
mov
bound
ss
pop
shrb
test
and
jl
sbb
dec
cltd
sub
cmp
popf
int3
out
and
fs
mov
leave
inc
dec
or
sub
in
leave
dec
or
mov
call
cmp
movsl
popf
inc
test
icebp
push
push
jp
adc
nop
xlat
fdivrs
in
or
dec
lahf
outsl
mov
add
xor
out
clc
cs
push
push
and
iret
test
xor
sbb
idiv
pop
lcall
jmp
cmpsb
mov
push
int
pushf
movsl
lret
push
mov
pop
mov
sbb
cld
xor
fisttpl
and
fmul
xlat
addr16
adc
mov
sbb
imul
xor
jmp
or
hlt
popa
or
decl
insl
dec
xchg
icebp
cs
mov
mov
xchg
mov
jmp
xlat
sub
inc
rcll
popa
les
popa
mov
insb
gs
sbb
in
andl
dec
or
clc
sbb
shlb
pop
daa
adc
rorb
mov
add
add
loopw
div
lods
cmpsb
orb
nop
flds
sahf
sub
add
cmp
xchg
jmp
inc
or
jb
out
aad
jge
push
insb
sub
out
sbb
xchg
ret
mov
sub
push
adc
imul
rcrb
or
divl
ss
nop
int3
imul
push
mov
ds
pop
sub
xchg
adc
ljmp
adc
daa
hlt
lds
inc
adc
push
sbb
jbe
add
scas
lret
add
and
adc
arpl
pop
inc
mov
sub
icebp
mov
mov
daa
scas
cwtl
jo
cmpb
and
dec
ljmp
aam
mov
outsb
add
outsb
scas
and
pop
test
jmp
aaa
pop
inc
sub
adc
pop
and
xor
or
rclb
fisttpll
imul
nop
popl
inc
dec
jle
scas
mov
lods
xchg
and
jnp
mov
jge
fbld
or
stos
call
aad
aad
push
call
ret
in
movsl
lret
imul
addr16
push
jns
pop
jno
repnz
test
push
jns
ljmp
out
and
mov
icebp
cmpsb
xchg
or
aam
or
cwtl
adc
adc
movsb
cltd
push
add
push
ret
push
xchg
cmp
sbb
dec
daa
jb
and
decb
or
pop
les
leave
push
push
xor
ss
dec
mov
int
clc
mov
dec
je
push
jg
out
or
sub
jns
jle
pop
pop
out
lds
or
fldenv
pushf
or
aas
data16
lods
mov
in
xorl
cltd
xchg
cmp
popa
int
mov
or
lods
inc
test
dec
mov
add
mov
movsl
aam
mov
sub
repnz
mov
inc
xor
das
jge
add
mov
mov
aaa
mov
jg
test
popa
inc
xlat
ficoms
cmpsl
dec
leave
fcomip
bound
or
adc
jmp
and
xor
lods
stc
in
cltd
outsb
repnz
stos
lods
dec
test
xlat
xchg
mov
pusha
scas
das
aad
cltd
loope
adc
fimuls
mov
lock
xchg
rclb
insb
cmovns
data16
pop
and
outsb
sbb
add
push
or
in
stc
jnp
mov
aam
je
fisubs
mov
mov
cmp
jge
dec
out
push
xchg
loopne
inc
fnstcw
orb
daa
int3
jge
push
pop
stos
cwtl
pop
mov
stos
mov
jae
mov
lea
pop
jno
repz
or
jno
mov
out
and
and
jae
repz
hlt
cmp
sbb
pop
imul
je
mov
sub
push
pop
and
jae
repz
call
cmp
mov
xor
jg
movsl
dec
mul
push
xchg
rcrl
lcall
out
inc
add
fiaddl
push
lret
pop
ja
mov
imul
iret
sti
adc
and
jbe
mov
mul
jl
outsb
rcr
test
push
rolb
fwait
push
xchg
adc
pop
sbb
mov
pop
fidivs
js
xlat
mov
mov
or
les
mov
sbb
aam
mov
xchg
jo
cmp
cld
aaa
lods
and
out
or
ss
fimull
push
pop
scas
sbb
call
out
imul
dec
jne
lret
push
and
jg
pop
sbb
int
shlb
lahf
sbb
push
or
mov
daa
inc
rcrl
daa
cmp
sub
pop
mov
daa
push
aas
pop
cmp
dec
pop
jmp
jbe
cmp
sbb
sbb
leave
mov
ljmp
cmp
jo
mov
push
mov
test
adc
xchg
lock
subb
pop
mov
leave
or
icebp
adc
cmp
in
mov
mov
xchg
std
pop
mov
loopne
cmp
cmp
pusha
xor
jns
xor
cmc
fwait
xchg
adcl
rorb
xchg
outsl
dec
aaa
mov
icebp
mov
jge
add
ret
js
xchg
or
shlb
dec
lret
xchg
mov
addr16
insb
jg
aad
cmp
scas
dec
call
sub
or
add
inc
or
push
dec
mov
ret
lret
rorl
das
insl
sub
xchg
pusha
hlt
cli
xchg
shl
out
in
mov
xchg
inc
pop
mov
movsl
jg
lock
shl
sub
lds
dec
mov
popa
mov
cmp
sbb
xor
cli
call
inc
dec
mov
pop
inc
std
iret
bound
adc
loopne
js
cwtl
nop
or
adc
test
or
jno
inc
add
cmp
ljmp
fnsave
jmp
in
and
rcrb
fstpt
js
lods
scas
movl
testb
push
dec
mov
aaa
mov
mov
mov
fisubl
xchg
inc
adc
mov
jnp
adc
hlt
adc
push
das
rclb
int3
into
xchg
push
and
lock
cmp
inc
sbb
push
push
push
enter
pop
jnp
jle
adc
and
mov
cmp
test
and
cmp
in
add
jmp
cmpsl
out
pop
rcrl
fmull
lahf
pop
ds
push
loope
mov
sub
add
ffreep
jg
pop
sbb
frstpm(287
jne
or
jbe
dec
lcall
aad
test
dec
pop
pop
cmpsb
lcall
in
or
jg
mov
lea
sub
in
cld
inc
nop
pop
aam
sbb
jno
aad
iret
pop
das
push
pop
lock
int3
and
push
cmp
pop
or
jns
xorl
test
out
xor
adc
data16
call
cmp
xchg
or
sub
jno
jl
leave
lahf
and
inc
jo
sbb
cwtl
adc
aas
mov
sbb
mov
cmp
lods
pop
mov
fs
sub
ja
inc
fbld
fisubrs
push
cmc
arpl
pop
dec
inc
jnp
out
add
xchg
pop
insl
js
test
dec
popa
xor
loope
sub
mov
lahf
rclb
xchg
or
cmp
scas
jmp
lret
outsl
xchg
test
je
mov
add
and
sub
ficoms
outsb
jbe
add
movsb
xchg
loope
arpl
mov
aas
cmp
cmpsb
xchg
fnstenv
push
pop
xor
push
push
push
pop
xor
jno
mov
inc
mov
sub
adc
dec
pop
sub
dec
push
aaa
adc
jge
jnp
mov
cmp
sbb
cltd
arpl
pop
mov
jecxz
mov
cmp
scas
hlt
push
sub
xchg
jl
outsl
movsl
push
rorb
adc
push
bound
push
sbb
jbe
into
inc
jmp
dec
or
fs
ret
mov
sub
movsl
xlat
stos
inc
clc
je
jns
pop
mov
inc
adc
fiadds
mov
xor
jo
outsl
push
pop
sbb
lods
sbb
sbb
aas
mov
cltd
sbb
icebp
sbb
test
rclb
repz
push
insl
jle
push
cmc
movsl
or
adc
ja
push
inc
je
faddl
popa
or
ret
jns
or
xor
push
rcrb
xchg
or
dec
cmp
jg
stos
push
mov
addl
pop
xor
adc
inc
incl
das
mov
mov
push
sbb
dec
jbe
mov
mov
jbe
cltd
mov
popa
fstps
insb
and
xor
push
mov
pop
inc
lcall
mov
int
int
int3
mov
ljmp
out
popf
jbe
das
inc
jbe
fildl
in
sbb
push
mov
in
jb
data16
lret
xchg
daa
cmc
ror
push
and
addr16
mov
push
stc
mov
fists
cmpsl
int
add
fstp
jns
aaa
push
mov
cmp
jl
imul
mov
mov
pop
push
xchg
fsubs
and
ret
or
lds
jle
mov
pushf
sub
pop
lahf
inc
or
or
push
outsl
push
out
mov
addl
push
ror
movsb
into
mov
mov
dec
call
notb
xchg
test
jno
sbb
ss
int
xchg
mov
in
popa
mov
sbb
or
popf
ret
adc
inc
and
cmp
dec
in
imul
or
inc
push
aas
and
dec
push
pop
addb
adc
jo
out
call
popa
adc
push
loope
rcll
sbb
test
sbb
inc
in
sbb
lret
push
stos
int
clc
mov
loop
enter
inc
and
mov
push
clc
inc
dec
xor
jne
mov
inc
add
xchg
push
lods
mov
mov
or
mov
mov
jo
rcrl
pop
cmp
mov
adc
or
jns
cmc
lcall
fmul
daa
push
je
adcl
add
dec
loopne
cltd
push
mov
lock
clc
mov
out
ret
push
stos
pop
jp
lret
pop
cld
rorl
fisubrl
out
leave
push
add
pop
aad
pop
rcl
lret
cmp
lods
movsb
cli
arpl
lret
jl
gs
xor
int3
es
mov
pop
cmp
jl
inc
leave
cwtl
and
repnz
mov
sti
sarb
xchg
cmpsb
ljmp
bound
push
cwtl
or
push
mov
mov
xor
push
sar
lods
data16
sbb
movsb
adc
in
jnp
sbb
fdivs
inc
sub
dec
popa
jle
jg
out
lods
aaa
xchg
cmp
cmp
lahf
test
iret
in
pop
rcll
in
push
fisubl
pop
mov
ret
inc
sub
or
addl
push
mov
outsb
sbb
sbb
movsb
in
lret
cmp
pop
or
iret
mov
frstor
xchg
mov
sub
push
shll
mov
data16
imul
mov
sub
or
stc
xor
rorb
hlt
pushf
dec
imull
enter
ljmp
clc
sub
sbb
jno
pop
popf
and
mov
add
loop
push
test
movsl
scas
sub
daa
in
or
jbe
pop
lds
pop
mov
sbb
inc
add
push
sub
je
jl
cs
idiv
pop
mov
rol
jbe
push
lahf
push
ret
mov
inc
sbb
cltd
clc
fsubrs
mov
icebp
jns
cld
dec
dec
call
lcall
sub
push
sbb
loope
jp
or
cmp
cmpsl
insb
sbb
inc
push
daa
fsubrs
test
add
aad
dec
cwtl
mov
loop
sub
or
movb
mov
fistl
data16
lret
mov
out
mov
hlt
jl
outsl
into
out
pop
insl
xchg
or
adc
mov
push
sti
mov
lock
ljmp
pop
sti
cltd
insl
fisttps
mov
sub
sarl
xchg
xlat
add
inc
mov
or
sti
cmc
mov
jge
jb
dec
inc
insb
push
inc
rol
incb
xchg
hlt
ds
xlat
aad
cmp
int
mov
call
fwait
movsl
fwait
xor
sub
mov
js
lods
lods
cmp
shlb
jge
adcl
test
adc
push
inc
xchg
pop
pop
lods
lods
popf
pushf
cmp
fistpll
rorl
lret
add
add
xchg
std
jbe
iret
jmp
xor
inc
popf
clc
mov
nop
int3
sbb
pop
in
daa
out
inc
mov
push
out
mov
mov
sub
fwait
idivb
dec
mov
aam
cmc
or
dec
int
push
pop
lds
xor
or
scas
xchg
in
push
lahf
xor
mov
push
je
fcmovnbe
mov
pop
mov
jne
jge
imul
inc
xor
inc
pop
das
mov
xchg
inc
lahf
cwtl
adc
dec
push
pop
mov
in
mov
in
testb
sbb
push
repnz
fcomip
pop
pop
and
xchg
xchg
cltd
iret
xlat
dec
into
dec
cltd
cwtl
pop
es
cltd
pop
mov
mov
pop
ret
push
xchg
xor
lods
fcomip
dec
sub
dec
int
or
cmp
shll
rcll
mov
cs
adc
lods
push
or
push
int
xchg
cwtl
cmp
outsb
test
xor
jnp
shrl
mov
in
push
xchg
mov
or
imulb
bound
and
andb
into
mov
xchg
popa
xchg
adc
jmp
sbb
pop
out
push
or
or
loopne
push
cmp
icebp
icebp
repz
aaa
pop
push
mov
mov
mov
in
mov
rorb
loop,pt
stc
xchg
pop
repz
xchg
pop
rorl
ja
out
jne
pop
imul
loopne
call
adc
outsl
jmp
sub
mov
inc
pusha
push
pop
fdivp
fidivrs
add
mov
add
cmp
int3
xchg
insb
fwait
or
in
sahf
in
pop
les
loope
test
dec
movsl
pusha
icebp
jne
cltd
je
or
xchg
shll
je
sbb
iret
es
mov
jns
test
sbb
jle
rcl
mov
and
mov
flds
aad
dec
jge
fldt
push
clc
pop
sub
movsl
into
pop
xchg
in
into
jg
push
jge
cmp
sahf
inc
dec
shrl
cmp
mov
xor
sub
stos
and
fcmove
out
sbb
cli
push
fs
cld
xor
ficompl
mov
adc
mov
arpl
pop
inc
jge
push
xor
push
movsb
xor
push
movsb
or
test
xor
xchg
push
lock
push
imul
dec
js
das
jo
xchg
stos
sbbl
add
lods
xlat
pop
test
jbe
add
fcmovne
into
mov
xor
mov
add
or
in
aad
cmp
fcomip
adc
and
pop
shl
jnp
addr16
into
es
test
sub
leave
jb
push
dec
lods
je
lahf
ret
fcoms
cmpsb
out
pusha
jbe
mov
add
shlb
scas
lcall
or
sub
pop
mov
test
inc
orb
fists
inc
or
das
aad
mov
les
pop
dec
and
kmovb
push
sub
xchg
push
jp
jo
icebp
ret
jl
sub
mov
jo
sub
or
shll
popf
iret
insl
push
pop
dec
xor
inc
xor
ss
dec
sbb
and
leave
mov
leave
sub
js
pop
push
std
imul
fisubs
fidivl
pop
addr16
sbb
inc
add
iret
push
push
popa
stos
push
add
leave
xorb
test
icebp
out
call
inc
addr16
sbb
pop
stos
xchg
out
add
and
jle
jb
cmovg
sar
sbb
imul
mov
adc
add
jge
leave
dec
add
xchg
xchg
push
iret
imul
sbbb
or
sub
in
cmp
fidivrs
repnz
test
pop
repnz
fs
ss
and
negl
and
push
cmp
xor
sub
cmp
cltd
pop
mov
and
push
mov
xchg
jecxz
jb,pt
mov
ss
in
imul
jmp
out
xorl
out
gs
sub
mov
or
jecxz
jecxz
testb
loopne
lret
and
dec
push
inc
je
aas
out
xor
shll
push
add
xlat
rol
lcall
fildl
mov
aas
mov
cld
addr16
cmp
inc
inc
xor
test
shrl
lahf
sbb
int3
add
mov
pusha
push
or
pop
sub
test
enter
daa
push
pop
or
clc
pushf
sbbb
fldl
pop
xchg
pop
cmp
pop
imul
ss
cmp
and
mov
push
and
add
or
lret
jle
inc
mov
loope
clc
je
jmp
mov
pop
xchg
and
cmp
roll
adc
xor
add
push
aaa
cmpsb
mov
or
cltd
aad
and
ja
xor
call
stos
ja
jle
jg
les
xorl
rcrl
add
js
xorb
mov
mov
push
lret
mov
cmpsb
aaa
adc
andb
ss
add
daa
lret
repz
in
pushf
jb
mov
cmp
jge
sbb
int3
shll
jge
and
adc
mov
rol
jg
dec
and
out
jg
jnp
and
ss
add
and
fildl
pop
loop
mov
add
es
pop
cld
lock
insb
sbb
lret
or
push
inc
in
mov
pop
inc
sub
stos
mov
add
xor
test
cmp
xor
cmpsb
loopne
pop
les
and
mov
adc
sti
or
aam
in
ss
and
xchg
or
ss
fs
arpl
jge
bound
mov
sbb
sarb
jl
sub
push
dec
aad
std
mov
or
inc
jmp
pop
mov
xor
mov
stos
push
shrb
rcl
fidivrl
pop
loop
jns
dec
mov
and
jmp
xchg
clc
jno
sti
icebp
lret
push
mov
fisubs
pop
sbb
xlat
jecxz
and
shll
and
dec
aaa
add
out
add
adcb
pop
mov
mov
int
sub
sbb
hlt
stc
cmp
mov
add
push
adc
js
inc
mov
movsl
mov
pop
inc
cld
mov
or
cmp
inc
push
pop
scas
sarl
fdivrl
stc
xchg
push
push
add
popf
cmpb
lret
imul
in
dec
mov
mov
aaa
test
cmp
pop
call
iret
pusha
arpl
lcall
fmull
ljmp
cmpsb
clc
push
popw
sbb
or
push
mov
out
mov
mov
xlat
enter
pop
mov
mov
ret
jns
out
mov
lea
ja
cmp
jb
add
push
icebp
dec
sbb
stos
call
jge
scas
inc
xchg
and
es
andb
cld
cmp
sbb
mov
dec
iret
mov
lret
stc
mov
push
jecxz
daa
mov
je
aaa
dec
sub
das
sbb
push
sahf
mov
pop
in
out
push
pop
clc
mov
inc
insl
lods
mov
xor
shl
pop
outsb
add
data16
jg
subl
lret
mov
ljmp
in
mov
cmpsb
mov
mov
jg
dec
out
addr16
mov
push
fdivrs
or
push
or
jle
je
mov
idivb
idivl
add
dec
aaa
scas
int
in
mov
xchg
xchg
and
lcall
sti
cmp
inc
jmp
pop
nop
in
movsb
lods
insl
outsb
insl
push
loopne
jo
icebp
push
mov
mov
fisttpll
xor
mov
testl
lret
cmp
pop
stos
rcll
adc
mov
sbb
mov
or
push
pop
inc
xor
addr16
pop
repz
andl
imul
cmp
lods
shlb
insb
mov
outsl
dec
cmp
sub
out
xor
cld
decl
fprem1
movsb
fistl
or
gs
xor
cmp
inc
test
jp
rorb
loopne
sbbl
or
sub
scas
jmp
and
or
push
mov
mov
xchg
sti
into
out
in
repz
inc
add
pop
ret
fidivs
test
sti
mov
or
clc
dec
mov
mov
inc
call
cmpsl
adc
stc
gs
push
inc
lcall
ds
test
xchg
fcom
cmpsl
addl
repz
fisubrs
mov
mov
mov
mov
aad
lods
cltd
fistps
pop
fsubr
xchg
or
cmpsb
pop
loopne
push
inc
pop
or
sub
outsl
mov
mov
roll
movsb
std
push
in
adc
js
cltd
mov
shll
loope
xor
pop
insl
stos
scas
and
sub
mov
popa
movsl
jle
cld
add
add
dec
dec
xor
imul
sbb
callw
xchg
jns
mov
push
add
cwtl
out
cwtl
jo
mov
mov
jbe
or
cmp
loop
mov
aam
push
inc
call
sbb
js
pop
ret
add
lret
mov
test
mov
or
das
or
add
and
add
jno
xchg
xchg
pop
mov
incl
mov
repz
adc
outsb
add
adcb
jmp
stos
pop
and
xor
jo
cmp
icebp
dec
aas
ret
std
mov
aas
mov
in
leave
mov
popf
test
mov
unpckhps
test
adc
inc
int
sbb
lods
adc
adc
mov
repz
sbb
adc
sub
test
sbb
xor
dec
daa
inc
push
xor
cmc
iret
xor
test
shr
jecxz
jge
fs
ret
fstpt
ds
push
xor
scas
sahf
xchg
push
enter
cmc
jne
in
sub
fstpt
dec
orl
jae
cmp
ret
or
jge
shrb
xchg
xchg
flds
jmp
lea
dec
xor
xchg
lahf
add
les
sti
lock
hlt
cmpsb
push
add
mov
nop
push
into
out
icebp
adc
mov
jmp
pop
dec
lcall
xchg
loope,pn
repz
das
pushf
xchg
stos
into
or
push
adc
add
mov
testl
pop
mov
mov
adc
or
lds
jno
add
lcall
pop
enter
inc
mov
pop
pop
fsubrp
fnsave
mov
push
push
cld
repnz
aaa
jmp
inc
cli
xchg
nop
call
das
and
or
mov
jle
pop
mov
adcb
and
cmp
aaa
jecxz
xor
test
out
std
push
aas
negl
and
and
sub
sbb
push
sbb
xor
in
addl
add
fs
or
shlb
mov
ss
xchg
decl
dec
add
xchg
daa
adc
jp
jecxz
mov
test
cmpsl
lret
jno
mov
bound
adcl
out
cld
sbb
test
aaa
inc
nop
xor
sbb
and
shl
push
cwtl
inc
inc
cli
inc
xchg
and
lret
cmpsb
pop
jp
ret
sbb
neg
dec
jae
adc
push
sbb
jmp
jb
repz
out
fistps
dec
fadds
inc
dec
add
xchg
cs
or
repnz
mov
pop
movl
lds
das
and
faddp
sbb
test
outsb
aas
push
movsb
sub
jge
mov
jle
movsl
or
pop
ss
push
mov
dec
cli
lods
jmp
testb
pop
shrb
rorb
lods
pop
popf
jo
fbstp
imul
aaa
adc
fwait
inc
icebp
pop
int3
test
and
fcmovnbe
testl
jg
fistpl
xchg
mov
push
xchg
test
push
mov
fimuls
xor
jge
push
and
push
jae
jns
cmp
or
push
fimull
lods
movsb
fs
mov
inc
ret
imul
and
jmp
sti
fcmovbe
aam
cmc
xchg
add
mov
movsb
push
sub
mov
cmp
stos
stc
mov
cld
or
ffree
bound
mov
fistpll
mov
js
insl
sub
lods
lret
mov
jmp
inc
int
mov
lret
scas
call
push
fdivs
gs
scas
mov
mov
adc
mov
sub
fmulp
sbb
dec
nop
mov
cld
pop
shr
xlat
enter
mov
popf
lods
mov
fnsave
aas
data16
push
or
cmpsb
xlat
mov
test
lret
int3
gs
pushf
inc
cli
cwtl
mov
push
test
clc
lahf
in
iret
stc
jo
cmp
and
or
fwait
push
sub
lock
xchg
aad
iret
mov
movsb
js
fldenv
jnp
jge
inc
int
aaa
or
fcoms
arpl
pop
lahf
xor
jne
insb
pop
mov
dec
xchg
outsb
pushf
or
fildl
xchg
mov
xor
inc
mov
clc
outsb
mov
shlb
inc
ror
out
je
sub
cmc
pushf
lcall
xlat
mov
sbb
cmp
pop
imul
sbb
add
pop
pop
popf
and
jb
add
cld
nop
push
ds
stos
push
sub
addr16
pusha
cwtl
mov
dec
adc
outsl
jecxz
dec
adc
pop
mov
les
loopne
popf
imul
mov
push
enter
pop
rorl
xorb
add
fbstp
enter
shr
jge
sahf
fsts
aas
sub
lahf
es
nop
scas
mov
or
shlb
mov
sti
adc
dec
pusha
mov
nop
jecxz
mov
ret
xor
jg
jne
inc
mov
shll
add
fsubp
filds
hlt
popf
push
adc
sti
xchg
ret
inc
jb
mov
xrelease
jae
lock
je
leave
dec
adc
mov
test
shl
inc
out
dec
rol
call
dec
jge
inc
mov
sub
cld
and
int3
outsl
sbb
je
pop
mov
int
clc
lds
fwait
jge
stos
in
ja
mov
loopne
cmc
add
jb
or
push
cli
mov
mov
xchg
jno
shrb
icebp
in
imul
inc
js
mov
icebp
inc
add
ss
sub
push
test
xor
adc
fisubl
ror
xor
sub
xchg
in
sbb
nop
mov
adc
jecxz
or
adc
pop
fwait
aas
int3
inc
push
insl
in
push
mov
lret
and
cmp
sub
ss
mov
xchg
or
xor
sbb
sub
lds
std
xor
dec
and
cmc
inc
mov
sbb
xor
inc
push
fwait
out
push
and
mov
dec
pushl
push
dec
lret
into
test
inc
int3
cmp
xchg
xchg
mov
xlat
std
push
je
les
adc
dec
hlt
adc
xor
not
mov
and
imul
adc
addr16
jmp
insb
or
cmpb
push
mov
dec
dec
inc
dec
fwait
imul
jo
adc
sbb
cmp
mov
add
mov
xlat
jle
and
call
sarb
mov
jne
mov
mov
sub
test
mov
call
inc
out
pusha
sub
inc
loop
inc
dec
sbb
ja
dec
jb
cmpsl
or
inc
lret
aam
mov
pop
pop
push
mov
add
or
lret
jb
inc
inc
ret
enter
jnp
lcall
sub
sbb
nop
mov
in
pop
les
push
les
loopne
cmc
sub
cmp
xor
out
mov
negb
shll
aaa
dec
inc
inc
add
inc
cld
cltd
jnp
push
fdivrs
outsb
jg
in
fcmovnbe
jns
aam
mov
cmp
adc
dec
lret
xchg
xchg
in
fs
mov
push
mov
aaa
pop
jns
jl
in
sub
decb
insl
jg
jbe
push
inc
push
lret
mov
xchg
test
je
sbb
cmpsl
test
push
sub
pop
gs
or
rorb
cmpsb
add
adc
add
fistl
insb
mov
int3
aad
daa
mov
sub
mov
aam
leave
loop
fisttpll
add
out
das
loop
sub
and
in
push
lahf
dec
pop
nop
xor
pop
mov
imul
es
loop
ss
out
out
imul
push
outsl
stos
and
in
sti
adc
fdivl
and
cmp
jmp
ss
cli
xchg
sub
or
adcb
pop
stos
mov
dec
je
orb
xchg
ret
or
mov
fsubrp
ret
fadd
push
mov
movl
sti
inc
ja
in
aad
mov
stc
lock
int3
repz
pop
dec
xor
push
sub
pop
scas
popa
fsubrp
cmp
stc
push
mov
cmp
mov
orl
pushl
fcomps
inc
in
dec
enter
je
in
insl
and
mov
fsubrp
sbb
push
lret
sub
push
pusha
push
aas
jbe
sub
xchg
mov
jl
xor
movb
and
xor
arpl
test
add
daa
movsl
iret
push
out
mov
daa
mov
rcl
mov
sbb
or
bound
mov
int3
aad
jns
lret
lret
add
mov
sbb
sbb
adc
mov
jo
jecxz
clc
in
daa
xchg
call
dec
or
sub
pop
imul
mov
jns
rorl
mov
xlat
movsl
fidivs
fwait
cltd
in
cwtl
jne
insb
test
cmp
cmp
mov
pop
sarl
mov
xchg
mov
lahf
dec
ss
stc
fisttpll
add
test
mov
push
mov
test
repz
aad
mov
add
cltd
cmp
ret
or
mov
adc
dec
push
jno
adc
mov
pusha
fisttpl
sbb
or
leave
sub
inc
icebp
jnp
cmpsl
movsb
dec
jns
lahf
mov
aaa
scas
inc
cmpsb
pop
and
notl
cmp
scas
aad
test
mov
or
lret
xchg
xlat
lea
movsl
mov
aam
lea
rcrl
dec
pushf
fnsave
int
popf
xchg
in
mov
mov
fs
jmp
sahf
out
mov
jnp
sub
dec
pop
std
dec
adc
in
pop
dec
lods
pop
das
dec
and
push
mov
xchg
jnp
jecxz
xor
sub
mov
sahf
add
cmpsl
cmpsb
inc
inc
push
xchg
push
mov
adc
addr16
xor
xchg
popf
lret
mov
dec
test
pop
ss
xchg
dec
lds
rcl
sub
jp
aas
in
add
fwait
inc
sbb
push
sarb
xor
lret
pusha
sbbb
mov
sahf
add
sub
jnp
jne
push
ljmp
sahf
pop
mov
mov
xchg
aaa
cmpsb
enter
arpl
sub
in
mov
mov
mov
in
sub
stc
sti
int3
and
push
imul
std
roll
jp
rcrb
dec
inc
xor
popf
loopne
into
jnp
sarl
je
cs
sub
xchg
icebp
mov
xchg
jecxz
lock
or
imulb
push
jo
push
cmc
fstpl
xchg
xor
inc
jbe
push
pop
sbb
imul
mov
push
add
dec
jg
fimuls
mov
push
pop
or
aam
dec
outsl
aaa
inc
aad
movsl
pusha
and
outsb
cs
movsl
xor
xchg
cmp
inc
jns
lock
adc
adc
cmp
mov
clc
mov
aaa
mov
sbb
xchg
push
imul
jns
inc
adc
imul
mov
xor
mov
pop
sahf
cwtl
jno
add
sub
mov
push
dec
rorl
fiadds
and
mov
cmp
sarb
cltd
ds
sub
movsl
push
js
imul
and
mov
lea
mov
sub
pop
out
xor
pop
in
mov
pop
inc
bound
out
test
and
inc
mov
imul
sbb
cmpsb
outsb
jb
fnstsw
sbb
out
fld
ds
pushf
push
mov
clc
push
adc
and
push
les
int
lahf
mov
add
inc
push
push
xchg
push
add
ja
fisubrl
inc
adc
movsb
ret
mov
inc
subl
mov
mov
inc
aam
jecxz
movsl
lcall
fistpl
clc
xchg
loop
mov
and
add
inc
iret
mov
adc
lret
mov
or
aam
outsb
loope
lea
loope
inc
xchg
loope
test
and
sbb
popf
pusha
sub
mov
mull
shlb
xchg
lret
dec
loopne
int3
leave
call
dec
xchg
dec
scas
push
pushf
adc
int
fdivs
cwtl
insl
add
pop
fs
data16
sbb
call
mov
out
mov
dec
or
divl
mov
stc
push
sbb
pop
jb
xor
outsl
loop
addr16
or
jecxz
out
loope
aad
iret
xor
xor
push
stos
ret
or
mov
pop
pop
push
or
add
test
ret
repnz
fimuls
gs
inc
mov
jno
stos
gs
pop
pop
xor
movsl
xchg
or
loop
mov
mov
arpl
fstpl
test
in
jbe
pop
mov
push
xchg
mov
fimull
clc
cmp
lods
cmp
mov
outsl
mul
push
daa
stos
mov
xor
addl
imull
add
stos
adc
mov
or
mov
pushf
es
add
cwtl
jno
xchg
les
xor
test
test
push
outsl
push
dec
inc
xor
xor
stos
test
sbb
xchg
gs
adc
lcall
fildll
jns
in
addr16
adc
and
dec
cmovle
xchg
push
or
pop
push
mov
mov
lds
jecxz
das
sti
fwait
adc
outsb
imul
cs
das
xchg
jl
test
jno
xor
mov
pop
and
cltd
xor
loop
jae
jnp
sub
pop
inc
push
lods
xchg
or
adc
push
inc
mul
cmp
cmpb
dec
dec
adc
and
jnp
lret
or
mov
rep
xor
aas
add
mov
jnp
sarb
mov
jmp
dec
mov
divl
jae
mov
fwait
sub
sub
sub
adc
aas
loope
and
dec
xor
inc
xor
jbe
imul
popa
fstl
daa
add
lahf
pop
fs
bound
inc
popf
mov
lret
jg
test
fisubl
rorb
xchg
adc
xchg
ficomps
adc
push
pop
xor
cmp
fcom
mov
adc
sub
cltd
test
jno
dec
or
pop
mov
aaa
sbb
jecxz
orb
repz
imul
lret
cmc
adc
jnp
call
push
and
push
test
ja
pop
aad
mov
or
pop
movsl
data16
test
pusha
cmpsb
adc
inc
mov
aas
mov
push
add
jbe
out
push
push
movb
lea
aam
mov
jns
inc
jne
mov
ss
lods
jge
pop
bound
lret
fldt
lods
aam
cld
scas
or
add
shll
jp
lahf
adc
xor
dec
push
add
test
pop
cmp
push
jmp
dec
push
mov
icebp
push
dec
mov
cmp
jle
fstl
or
loope
cmp
adc
sbb
loope
popf
pusha
push
cmpsb
loopne
mov
in
cmp
cwtl
scas
insl
decb
test
insb
nop
xchg
sbb
adc
xor
mov
bound
aad
push
xor
fsts
fwait
xor
or
or
push
mov
add
add
xchg
mov
mov
inc
addr16
sbb
adc
insb
fsubrs
sbb
stos
popf
push
push
dec
mov
lret
jns
xchg
movsb
pop
stc
dec
xchg
scas
push
and
loope
sar
gs
xchg
fwait
js
dec
in
in
cmp
bswap
call
dec
adc
ja
ret
icebp
adc
les
xchg
idiv
cld
adc
int3
rorb
in
int
jns
fs
stos
jo
and
repnz
or
sub
mov
lds
pushf
pop
adcb
mov
je
imul
sub
pop
mov
mov
pop
js
adc
pop
std
lret
shll
xor
gs
int3
cs
jp
fisubs
sbb
lds
sti
mov
xor
xor
mov
sbb
adc
cmp
xchg
xchg
nop
push
or
inc
xchg
cmp
jg
bound
fwait
push
mov
mov
stos
subl
out
jbe
iret
sub
scas
aam
push
or
lcall
sti
pusha
rorl
loopne
mov
ja
sbb
ja
out
jle
sub
push
test
jno
mov
mov
popf
call
sti
fadd
jno
clc
sub
mov
mov
setns
loopne
outsb
test
pushf
ret
addb
lods
cmp
int3
movsb
je
stos
loope
push
adc
imul
pushf
cltd
pushf
popa
inc
sub
dec
inc
push
cmp
in
dec
jp
xchg
inc
and
jp
adc
jl
cmp
sbb
lods
sub
ret
xchg
jmp
sub
cmp
scas
js
or
ret
int3
andl
icebp
xchg
push
add
out
lcall
adc
sub
cmp
mov
clc
fninit
mov
mov
add
mov
jo
push
jmp
pop
xor
pusha
es
and
enter
test
sti
sub
clc
insl
int3
fs
push
xlat
fsts
add
pop
cs
mov
lcall
fs
push
imul
push
cld
jbe
inc
mov
out
js
ret
mov
hlt
cltd
into
inc
js
hlt
xchg
sub
ss
jp
mov
nop
into
dec
or
xchg
movsl
xchg
std
cmpsb
pop
shl
inc
dec
xchg
divb
pop
mov
jne
lret
or
inc
mov
stos
sbb
adc
pop
cmp
fists
jae
subb
inc
mov
mov
mov
ja
dec
push
arpl
xchg
xor
xlat
mov
test
test
outsb
ret
mov
ljmp
mov
sti
push
cmp
sub
jmp
lods
nop
add
hlt
cmpsl
test
add
inc
pop
neg
mov
fwait
xchg
push
cli
adc
sub
push
lahf
or
loop
mov
popf
sub
mov
mov
inc
jp
pop
ljmp
sub
adc
mov
popa
hlt
mov
sarb
and
jbe
cmp
out
mov
or
inc
xchg
rorl
dec
sbbl
and
cs
mov
les
push
pop
inc
mov
mov
xchg
nop
mov
jbe
mov
adc
ret
dec
jge
inc
mov
movsb
sub
pop
or
loop
inc
repz
es
arpl
inc
jge
jbe
clc
pusha
dec
dec
dec
push
sbb
sub
ret
sbb
jns
xorl
inc
jecxz
fidivl
pop
sbb
leave
insb
addr16
pop
add
shrb
mov
add
pushf
mov
fisttpll
pop
mov
imul
movsl
jg
push
jb
imul
hlt
mov
pusha
cmpsl
sarl
aam
repz
inc
insl
lods
mov
sbb
and
out
leave
dec
aad
aaa
sahf
js
and
inc
dec
dec
inc
pop
xchg
xchg
insl
xchg
add
push
jmp
add
push
xor
jl
lods
sahf
inc
dec
sub
add
sub
and
in
xor
fcomps
push
mov
outsl
lock
and
mov
inc
pop
xchg
or
dec
rcrb
mov
lods
mov
arpl
dec
jnp
fs
mov
push
mov
fimuls
xchg
pop
mov
call
outsl
mov
or
adc
pop
aaa
mov
inc
xchg
pop
pusha
loopne
pusha
or
and
shr
mov
push
stos
push
repnz
adc
addr16
outsl
sbb
cmc
lds
and
xor
lods
cmp
or
adc
rorl
call
push
mov
xlat
insl
test
or
std
jae
shlb
mov
jle
int3
aad
pushf
cli
jmp
mov
das
xor
fidivl
leave
flds
mov
sub
mov
jmp
pop
jmp
push
loopne
call
sbb
dec
push
notb
in
cmp
lret
jne
cmc
jge
outsl
sahf
cmp
in
subb
mov
xor
shrb
stos
mov
xor
dec
cmp
mov
xchg
xor
xor
mov
add
repz
and
jne
lahf
sbb
ret
jb
cmpsl
cmp
mov
in
xchg
popf
clc
rclb
enter
jne
data16
push
imul
sahf
pop
inc
lods
mov
pop
test
inc
clc
mov
iret
dec
pushf
mov
mov
ret
jl
pusha
pushf
lods
add
lea
loopne
add
push
gs
adc
rcrl
add
lods
add
inc
mov
sub
addb
or
int3
out
stos
adc
stc
adcb
arpl
push
shll
test
adc
add
lahf
mov
dec
push
movsl
add
mov
fwait
inc
sahf
push
and
divl
and
push
push
stos
test
bound
jle
xchg
and
xchg
jae
dec
rorb
popa
out
js
mov
cli
adcl
imul
insl
in
sub
cmp
repnz
cmpb
and
test
das
sub
jns
adc
pop
and
xlat
adc
mov
imul
sub
stos
clc
pop
inc
lret
enter
mov
fs
mov
push
jl
inc
inc
mov
in
jmp
jb
add
mov
push
jecxz
shlb
mov
cld
fs
xchg
mov
scas
sub
pop
pop
cwtl
xor
in
dec
add
or
repnz
dec
push
push
dec
scas
push
fsubrl
fbstp
or
jnp
dec
sub
fists
mov
shlb
push
ret
mov
pushf
enter
cli
je
mov
jp
outsl
into
mov
dec
and
aaa
gs
loop
out
and
out
je
mov
sub
popa
subps
int
pop
lods
daa
aam
adc
fimull
mov
ja
leave
scas
push
or
xchg
mov
fsubp
mov
xchg
out
or
mov
ds
lock
jae
out
push
dec
jns
mov
adc
loope
mov
add
cltd
jge
faddp
nop
mov
ficompl
inc
rcll
xor
push
inc
pop
push
mov
jo
jg
test
lret
lret
jnp
or
inc
sbb
cltd
ds
jne
and
mov
xchg
add
add
lret
sub
xor
sbb
aaa
inc
xchg
add
mov
mul
out
notl
xor
or
frstor
popl
ret
loopne
sar
push
out
fiadds
sub
insl
lods
stos
cltd
lcall
mov
mov
inc
dec
pop
sub
and
fldcw
repnz
lahf
mov
sbb
jle
or
cmc
cld
push
jmp
into
bound
jb
adc
xchg
push
fistps
rcrl
flds
push
in
cwtl
popa
xor
inc
pop
xchg
and
insb
add
xchg
sub
push
mov
push
pop
xchg
stos
sub
mov
shl
jo
xor
xor
sbb
dec
test
cmp
or
cmpsl
repnz
popa
and
imul
mov
les
das
out
cmp
sub
fscale
jo
loopne
das
xor
rorb
repz
shlb
jmp
dec
clc
jmp
std
xchg
int
addr16
sbb
add
repnz
or
shll
dec
push
xchg
or
addr16
popa
xor
mov
cmc
push
into
xor
push
inc
push
loope
or
jmp
push
xor
pop
fidivrs
ss
jmp
sbb
mov
inc
pop
mov
xor
add
outsb
and
lods
daa
jbe
hlt
sar
sbb
mov
pop
jmp
mov
in
das
xor
out
pop
xorb
rorb
lret
pusha
cmpsb
and
xchg
lods
sbb
popa
fsts
insl
pop
jge
movsb
test
inc
cs
clc
scas
mov
ds
shll
negb
adc
repnz
aad
test
jb
lea
mov
jge
cs
out
sbb
sub
cltd
loop
pushf
fcomps
aaa
cmp
stos
and
push
adc
out
nop
cs
std
inc
pop
lret
mov
popa
imul
mov
xchg
inc
cli
mov
subb
inc
out
dec
fstpl
push
pop
fs
pop
fst
add
or
sbb
adc
sbb
subb
imul
sbb
pop
imul
fwait
sub
xchg
daa
mov
repnz
jecxz
ror
xchg
or
mov
daa
lret
mov
loop
xor
xor
es
push
in
mov
jl
xchg
outsl
imul
aam
pop
sahf
sbb
rcl
inc
sti
and
mov
or
mov
and
lea
mov
cwtl
add
rcr
ja
sbb
rorb
lods
test
jno
mov
mov
lret
push
inc
pop
jg
lods
push
mov
sub
inc
push
clc
inc
xchg
cmp
mov
dec
jnp
jno
dec
push
jl
push
subl
cmp
mov
pop
mov
divl
mov
push
fisubrl
out
mov
outsl
insb
lret
sub
mov
gs
fwait
xchg
fcoms
ljmp
in
adc
push
test
mov
push
rcl
push
aad
mov
sub
mov
push
and
dec
jno
mov
inc
cmp
xchg
inc
fisttpll
arpl
mov
leave
mov
add
into
cltd
adc
mov
imul
sbbl
push
ja
ret
mov
mov
and
jbe
sub
push
sbb
push
dec
movb
popa
inc
orb
scas
test
adc
repnz
call
adc
sahf
lds
movsb
mov
sti
ljmp
loopne
hlt
sti
sbb
dec
sub
sub
lock
adc
or
jecxz
push
lcall
ja
push
lea
daa
fimuls
loope
dec
ds
xor
xchg
jp
push
rorb
push
mov
ror
cli
pushf
lods
jo
imul
stos
test
aas
cwtl
lds
cli
ds
sahf
dec
xchg
mov
stc
adc
pop
and
adc
lods
sbb
dec
inc
inc
mov
sarl
mov
rclb
pop
loopne
mov
in
pushf
cltd
jp
ret
js
add
les
loop
cwtl
adc
out
push
cltd
outsl
call
arpl
mov
add
rorb
cmp
jno
hlt
lret
inc
shrl
in
push
and
add
outsb
or
sub
lcall
or
jp
or
inc
mov
cmc
add
in
lods
lahf
xor
pop
aas
stos
imul
outsb
bound
data16
cmpsb
lret
sub
push
mov
inc
data16
ss
and
std
into
adc
push
testl
add
jl
int3
xchg
cmp
mov
dec
negb
xchg
aas
jl
aad
popf
sub
test
cmp
mov
inc
lock
jne
jp
sbb
jl
or
push
test
rorl
aaa
lcall
pop
add
push
mov
leave
cmp
pusha
sbb
add
lcall
jno
mov
imull
adc
add
push
jne
bnd
jno
mov
adc
test
cmp
mov
jg
sti
imul
jg
das
jg
dec
pop
icebp
or
sti
popf
jmp
dec
cmpsl
mov
xchg
rclb
mov
pop
jns
jmp
xchg
sub
or
cs
les
xor
ja
mov
cmp
push
mov
cmp
adc
dec
cmp
push
pusha
cmpsl
fcoms
scas
fs
add
pop
push
inc
fbld
xchg
push
cmp
push
mov
test
cmp
push
sahf
call
jp
mov
pop
or
mov
sbb
rolb
and
cs
and
jnp
pop
cmpsl
dec
adc
jbe
imul
popf
in
push
nop
mov
push
je,pt
cs
repz
mov
cli
stc
pop
sub
or
inc
jb
and
ret
mov
jmp
cmc
lods
std
or
lret
xchg
xor
pop
inc
mulb
imul
test
cmp
repz
movsb
in
xchg
insb
cmpsl
or
rolb
push
xchg
loopne
scas
mov
dec
dec
imul
aad
xchg
add
sub
xchg
sub
add
les
inc
or
mov
fbld
xor
push
xor
pop
loop,pn
mov
sahf
mov
pop
arpl
cmpsl
push
mov
inc
xchg
dec
cmp
push
xchg
imul
les
cmp
push
sub
pusha
xlat
push
les
push
jmp
fisttpll
pop
xchg
jmp
inc
jecxz
inc
adc
and
dec
mov
mov
test
stos
sub
or
xlat
and
push
icebp
jmp
jo
push
sbb
dec
mov
xchg
fidivs
je
sub
sahf
pop
orps
daa
sbb
inc
xchg
sub
fiaddl
mov
daa
ss
lcall
data16
dec
aam
xor
shll
ljmp
or
imul
lret
inc
mov
clc
sahf
lret
sbb
cmp
pop
int
push
outsb
mov
aam
adc
xor
adc
add
jecxz
jbe
stc
jge
into
call
leave
push
or
ljmp
outsl
push
adc
xor
pop
sti
cmp
cmp
cmp
xchg
jl
inc
mov
jmp
out
push
push
rcll
inc
mov
out
push
aad
inc
jmp
inc
lea
mov
cmpsb
insb
and
jns
cmpb
or
dec
cmpsl
or
push
adc
test
xchg
or
je
je
rorl
or
pop
push
jno
fisttpll
iret
xchg
push
cwtl
pushf
fadds
je
loope
push
fisttpll
out
and
mov
push
adc
and
in
adc
aad
iret
xchg
popa
iret
outsb
outsb
aad
or
outsb
aaa
jl
cld
xchg
adc
in
shrl
mov
dec
mov
sub
lods
inc
adc
inc
movsl
pop
cmp
push
testb
xchg
inc
jno
enter
adc
shl
adc
add
push
out
out
jmp
fs
idivb
fadds
gs
out
orl
adc
cs
movsl
add
jno
sbb
or
test
push
flds
sbb
adc
jno
mov
or
cmp
shlb
jno
movsl
fidivl
gs
negb
xor
lcall
outsl
pusha
es
cmp
xchg
jnp
andl
ss
adc
sar
fldenv
arpl
lods
mov
pop
jmp
cmp
mov
fcomps
pop
xchg
push
cmp
push
pop
push
sbb
sbb
ret
fwait
ljmp
inc
repnz
je
test
negl
stos
cld
outsb
fucom
ljmp
stc
je
and
push
mov
scas
inc
pop
dec
leave
ret
sti
clc
mov
jnp
jmp
in
movsb
imul
js
rcll
inc
dec
mov
mov
psrlq
popf
pop
jmp
cmpsb
mov
xlat
mov
mov
rorb
outsb
xchg
lods
insb
nop
mov
adc
xchg
mov
inc
outsb
lds
sbb
out
push
mov
xchg
or
ljmp
sbb
sub
je
bswap
xchg
in
nop
ds
push
ret
into
out
popf
push
insb
bound
div
inc
rcl
out
mov
dec
jp
dec
inc
sbb
inc
fwait
mov
ljmp
pop
decl
cwtl
lret
adc
roll
int3
pop
sbbl
bound
nop
jmp
mov
or
xchg
fnstsw
push
xor
icebp
es
int
push
ja
lret
xchg
cmp
cmp
dec
dec
pop
cmpsl
leave
cli
mov
push
cld
fcomps
icebp
je
out
jb
cmp
add
addr16
xor
xchg
and
daa
icebp
add
xchg
jne
mov
hlt
js
xor
scas
and
in
decb
sarl
andb
sbb
lods
or
loope
cmp
inc
push
cmp
fadds
mov
cwtl
adc
xchg
add
dec
mov
jb
cwtl
scas
push
fisubl
or
jmp
out
jmp
sub
jmp
cmp
cmc
movsl
aad
lock
push
pushf
fldcw
and
pop
inc
repz
cmp
jo
stc
mov
pushf
push
cmp
add
dec
jne
push
arpl
cld
cmp
jp
call
jnp
aam
ja
jmp
repnz
or
mov
shrb
pop
pop
pop
pop
in
decb
cmp
stos
jmp
cmp
addb
xchg
mull
and
sti
sbb
js
pop
test
add
out
sbb
cmpsb
mov
imul
lret
pop
mov
add
add
cmpsl
pusha
inc
and
push
pop
popf
add
mov
xor
mov
xlat
xchg
into
pop
dec
emms
jb
mov
icebp
dec
push
jae
sub
or
jg
xchg
enter
popa
lds
mov
in
ret
mov
xchg
aaa
testl
fnstsw
test
add
testl
ds
arpl
jb
mov
cmp
inc
push
pop
mov
pop
jg
aam
fldcw
add
gs
popf
cmpb
cmp
loop
dec
aaa
jo
pop
sahf
outsb
fisttpll
lods
add
or
push
outsl
mov
lret
outsl
out
sub
in
xchg
jno
or
mov
dec
in
stc
xchg
out
cmp
xchg
adc
and
test
and
jle
sbb
mov
ljmp
push
lahf
mov
mov
daa
push
mov
popa
pop
enter
rcrb
ret
arpl
icebp
push
or
faddl
loop
and
dec
jae
jno
daa
mov
mov
into
inc
mov
sub
out
stos
lods
pop
inc
lea
ljmp
mov
or
mov
push
cmp
test
shrl
outsl
mov
aam
pop
aam
leave
mov
cmpsl
nop
sbb
fs
mov
scas
sbb
mov
cmp
pop
insb
pop
inc
into
mov
dec
add
mov
jo
les
imulb
xor
das
gs
fcmovne
mov
inc
test
xor
out
sahf
dec
mov
push
in
sub
aaa
ret
add
shrl
mov
mov
inc
mov
repz
ds
sub
and
movsb
je
mul
or
mov
xor
xor
push
icebp
test
and
jns
mov
dec
repnz
cs
xchg
call
jge
mov
xlat
aas
mov
gs
push
inc
cmp
jmp
pop
xchg
xchg
mov
mov
stos
push
jmp
lret
rclb
pop
mov
jo
js
or
idiv
out
incb
inc
sbbb
xchg
xor
addb
mov
jle
inc
dec
clc
or
test
js
push
and
add
fnsave
mov
mov
pop
arpl
dec
ja
mov
push
and
mov
out
js
lods
mov
xor
mov
ss
xor
adc
push
push
mov
jb
dec
out
enter
push
js
jnp
xchg
pop
mov
cmp
adc
negb
or
cmp
fiaddl
fiadds
loope
aas
repz
les
ljmp
inc
pop
xchg
ds
mov
mov
cwtl
fimull
outsb
int3
jb
out
xchg
ss
enter
mov
sahf
mov
ds
jb
sub
pop
jle
adcl
nop
leave
inc
nop
xlat
daa
fsubp
jp
jne
test
std
popf
into
sti
pop
xor
mov
jmp
push
mov
add
addr16
aaa
inc
xchg
dec
mov
lea
mov
test
test
lods
mov
test
mov
sbb
jg
and
sub
and
mov
push
ret
mov
mov
out
fldl
mov
jp
mov
sbb
and
inc
minps
cmp
add
data16
jmp
test
fwait
in
push
adc
mov
sub
xor
insl
cwtl
xorl
pop
push
pusha
jb
loopne
push
lea
dec
mov
fstp
push
les
or
lret
js
dec
test
sbb
in
pop
push
shlb
mov
jae
jae
cmp
stc
mov
dec
xor
xchg
sub
out
popa
subb
loope
movsb
loop
xor
sahf
fwait
or
fs
daa
mov
in
jle
and
push
and
push
pop
mov
and
sbb
in
pop
or
jnp
cmp
pop
test
mov
adc
notl
movsb
test
bound
xor
cmp
inc
lock
fwait
adc
sub
in
sbb
sarb
sub
mov
iret
jno
xor
bnd
jbe
xor
push
cli
xchg
mov
mov
sahf
pop
sti
aaa
lcall
push
lods
test
pop
dec
inc
cld
mov
lret
pop
outsl
pop
popf
outsb
arpl
leave
jno
sbb
xchg
sbb
sub
or
push
inc
icebp
mov
imul
push
movsb
add
push
fcomi
cmpsb
push
and
rolb
cld
push
mov
sbb
push
out
insb
sbb
ficoml
test
cmp
cmp
push
loopne
or
mov
outsb
je
js
test
fnsave
arpl
fcmove
fs
mov
mov
jl
jae
adc
idivb
mov
adc
jmp
inc
cmp
xor
aaa
arpl
cmp
mov
pop
mov
sbbb
cs
sub
sub
cltd
jbe
mov
inc
mov
jbe
rcrl
xchg
sbb
testl
sbb
push
pop
xchg
xchg
push
pop
negb
inc
in
push
cmp
and
in
adc
xchg
lods
push
shr
in
inc
and
push
aas
idivl
inc
rclb
mov
mov
dec
aad
dec
or
add
xor
sbb
adc
push
jnp
cmpsb
ljmp
fisubrs
xchg
imul
add
rcll
cld
enter
test
stos
rorb
loopne
sbb
sbb
inc
in
mov
pop
std
es
and
sahf
outsb
mov
mov
enter
imul
add
adc
jecxz
jae
mov
mov
test
jo
test
rol
int3
inc
stc
negl
lcall
out
insb
jae
mov
mov
xchg
or
push
stos
das
icebp
sahf
mov
adc
sbb
leave
fistpll
andl
xchg
iret
les
das
rcll
push
dec
daa
fisubs
or
sbb
inc
mov
int3
cmp
and
cmc
aad
adc
loop
mov
and
pop
scas
pop
pop
cli
sub
mov
inc
push
jns
sub
xchg
push
pop
mov
fsubr
fbstp
or
outsb
cmp
daa
inc
add
mov
aaa
xlat
sahf
les
adc
outsb
lahf
push
jns
cmpsl
lds
lock
fldenv
pop
adc
call
push
mov
or
xchg
testw
out
sbb
daa
pop
fidivl
jae
and
nop
xor
data16
stc
add
sbb
jo
cwtl
arpl
xor
lock
ds
insl
dec
and
inc
sub
jp
jo,pt
mov
add
ret
pop
adc
mov
adc
inc
inc
xchg
push
cli
rcl
jb
adc
shll
call
cwtl
leave
jp
mov
push
jp
inc
jnp
addr16
jl
dec
sub
jae,pt
pop
in
xor
cmp
pop
jle
test
mov
ds
das
pop
sub
and
pop
out
lock
pusha
icebp
inc
inc
mov
stc
sub
sbb
popf
stos
pop
pushl
mov
bound
push
cltd
cmp
add
sub
pushf
ret
shll
cmp
sahf
xchg
insl
mov
faddl
aad
lret
jo
fidivs
test
loopne
ljmp
add
mov
and
or
xor
repnz
or
pop
fisubl
cmp
add
jle
std
enter
inc
or
or
or
clc
out
das
xchg
shlb
inc
scas
pop
push
xchg
jl
shlb
rep
adc
and
mov
sbb
push
mov
pushf
xchg
add
outsl
mov
mov
test
das
mov
in
nop
and
pop
pop
rclb
lds
mov
cmp
ds
jne
pop
or
test
inc
insb
mov
mov
int
mov
imul
mov
xor
mov
jmp
mov
sbb
xor
sbb
dec
jp
inc
adc
enter
repz
xchg
iret
xchg
jecxz
imul
mov
jae
push
pop
fistpll
daa
out
stc
ja
jmp
mov
or
std
add
mov
test
inc
push
daa
aaa
xlat
pop
xchg
je
repz
jcxz
dec
in
fmuls
lahf
imul
lcall
xchg
sahf
xchg
add
sbb
in
sbb
jns
aad
cmc
xchg
jp
sub
xchg
xor
cmp
add
shll
dec
popf
sbb
xchg
inc
push
adc
xor
jae
add
sbb
movsl
icebp
jnp
test
pop
cmp
jl
out
xchg
pop
pop
sbb
mov
adc
scas
orl
dec
xor
leave
add
mov
lret
jle
mov
popa
aas
icebp
lret
out
cmpsl
pop
test
loope
add
sub
jecxz
pusha
xchg
and
sub
sbb
jge
shrl
add
test
sbb
lahf
jbe
cwtl
xlat
or
subl
loope
sti
insw
jne
or
fnsave
aaa
ja
aad
and
dec
pop
sti
popf
mov
xlat
sbb
adc
enter
pop
mov
mov
cmp
andb
xor
mov
mov
popf
or
enter
xchg
pusha
roll
fisubrs
in
mov
jecxz
cli
sbb
push
xor
jle
pop
or
arpl
push
adc
cld
xor
mov
and
ret
push
test
rcrl
cmp
shll
in
sbb
stos
fistpll
inc
cmpsl
mov
insl
arpl
push
sub
das
mov
rorb
dec
js
add
xor
adc
pop
sbb
lahf
jnp
xchg
xlat
jae
pusha
pop
dec
push
mov
int3
adc
jnp
jno
and
mov
push
add
fimull
mov
ljmp
pop
ds
push
cmp
outsl
insl
outsl
and
fwait
in
addr16
inc
fidivrl
lcall
jae
xorb
pop
push
xchg
mov
sti
mov
mov
jecxz
stc
or
dec
enter
mov
int3
sub
add
mov
sbb
fisubrs
and
test
dec
ret
adc
out
adc
repz
ss
pusha
fdivp
cld
pop
mov
xorb
cmp
adc
sbbl
sub
xchg
dec
in
notb
fwait
cld
shlb
into
cmp
jo
fsts
dec
or
push
mov
pop
xchg
aaa
jp
jle
repz
mov
in
js
dec
imul
inc
loope
inc
push
insl
pop
jg
pusha
pushf
jo
clc
mov
aas
sti
bound
lret
mov
dec
icebp
and
dec
add
stc
xor
pop
and
pop
inc
ret
psubq
inc
enter
add
cs
shll
aas
mov
dec
lahf
lcall
ret
ficomps
outsl
sarb
jg
das
sub
sti
loopne
add
push
xchg
mov
lret
mov
test
xor
sub
xor
add
inc
xchg
outsl
pop
cmp
into
xchg
enter
and
les
jg
repz
sub
sub
sbb
and
mov
pop
vhaddpd
sub
add
cmpsb
sub
addb
and
cmc
call
and
mov
imul
rcll
stos
add
aam
sbb
lds
outsl
or
pop
xor
fimuls
pop
insl
sbb
mov
mov
orl
les
repnz
pop
cmp
sub
loope
outsl
test
push
mov
aaa
sbb
and
stc
dec
xchg
fistpl
rcrl
mov
lock
push
xchg
mov
cs
into
jo
mov
add
in
es
dec
push
pop
pop
mov
std
loopne
sub
or
xchg
shrb
sarb
or
pop
fbld
mov
add
push
mov
popa
cwtl
scas
pop
enter
imul
and
xchg
ljmp
sbbb
filds
pop
out
inc
es
sbb
bound
inc
scas
mov
repz
mov
fs
xchg
pusha
mov
dec
push
outsb
mov
xchg
pusha
mov
mov
mov
cmc
push
and
push
inc
push
push
jl
push
jb
add
int
pop
push
sbb
mov
sub
test
sub
in
push
add
jle,pn
mov
jb
jno
dec
shr
lret
and
in
jg
clc
cmp
adc
inc
cmp
iret
sub
jnp
mov
es
std
and
sbb
or
loope
pop
repz
std
inc
mov
push
inc
mov
push
sub
ja
inc
out
test
sbb
das
insl
jo
out
aas
loop
scas
mov
je
xchg
cmp
rclb
loopne
push
test
jnp
outsb
jecxz
loop
imul
aam
xchg
mov
pusha
iret
and
sub
adc
loop
imul
xchg
sbb
fisubl
insl
lods
xor
test
mov
inc
sbb
shl
mov
or
fwait
stc
mov
scas
out
stos
push
and
and
sbb
mov
sub
push
lcall
sub
cmpsl
addr16
add
adc
dec
fists
es
pop
aas
xor
xor
int3
xor
pop
pop
adc
jno
pop
ret
jae
xchg
pop
xchg
dec
mov
ror
adc
and
xor
js
jns
bound
push
mov
push
push
sbb
aad
dec
push
mov
dec
or
lea
aaa
neg
scas
fisttps
push
jg
stc
hlt
mov
rorl
lret
inc
or
push
push
jb
mov
int3
dec
fcmove
sti
cmp
fiadds
loop
lret
popa
mov
cltd
fisubs
js
sti
movsl
jno
je
sub
jo
loop,pn
les
inc
mov
and
std
sub
push
pop
in
jecxz
repz
movsl
shlb
inc
add
psraw
movsl
or
inc
jecxz
inc
jp
xchg
fs
std
adc
fistpll
test
mov
andl
sbb
jle
xor
cwtl
dec
pop
lcall
jmp
pop
cld
test
out
sbb
or
xchg
rol
dec
mov
pop
faddp
test
in
mov
and
mov
stos
shll
sbb
fbld
mov
xor
mov
fists
mov
cltd
xchg
pop
sahf
sahf
push
repnz
outsl
scas
xchg
sub
rol
cmpl
add
cmp
pop
cmp
call
movsl
xchg
jp
jl
xor
mov
dec
sub
jbe
fcoml
push
lock
movsb
cs
lods
jo
xor
out
je
mov
icebp
pop
sub
mov
mov
sub
ss
inc
incb
jge
mov
jnp
mov
loope
mov
jno
dec
dec
cwtl
mov
mov
pop
fsubrp
pusha
mov
pusha
ja
fnstcw
faddl
stc
lahf
shll
loop
sbb
rolb
xor
adc
fisttpl
jo
arpl
sbb
pop
adc
lcall
rcll
sbb
jae
sub
adc
sti
inc
aam
neg
xor
dec
mov
xchg
sbbb
popa
jecxz
movsl
sbb
repnz
repz
mov
dec
cld
jp
in
popf
fcom
dec
clc
ficomps
pop
leave
aaa
mov
int3
popa
xor
cmp
ss
mov
daa
sti
mov
lret
mov
pop
nop
sub
pushf
data16
and
in
mov
test
adc
jecxz
ljmp
adc
push
push
xor
pushf
sahf
mov
push
rolb
int
lods
popl
movsl
pop
sub
xor
addr16
es
sbb
add
lret
aas
cli
mov
aaa
shl
out
shll
in
cmpsl
jg
jl
lea
ss
add
sub
mov
orb
aas
dec
add
fiadds
xchg
mov
jle
mov
arpl
enter
sub
push
adc
adc
or
movsl
cmc
mov
cmpsl
lock
out
xchg
push
fmul
rcll
mov
add
push
jl
mov
mov
ficoml
scas
cli
and
test
stos
cmp
rol
mov
lods
push
imul
and
adc
movsl
mov
repz
push
mov
rcrb
pop
sbb
sbb
rolb
adc
inc
in
rcr
notb
movsl
notb
popf
cltd
mov
sbb
xchg
add
jae
pop
in
jle
aam
add
das
dec
mov
int
insl
jl
add
mov
testb
dec
sbb
imul
mov
lret
mov
mov
mov
mov
sbb
xor
xchg
daa
stc
ret
dec
jnp
mov
or
fisttpl
or
jl
out
jae
inc
ret
sbb
jmp
mov
ss
ss
js
in
and
lds
fwait
dec
into
dec
mov
push
inc
test
push
xchg
ss
loope
std
sub
aas
add
or
add
cmp
mov
dec
iret
pusha
jne
fcmovbe
sub
aad
mov
add
loop
jle
sti
shlb
insl
cmp
bound
jb
adc
mov
adc
push
mov
mov
lret
inc
ret
xchg
pop
daa
cli
mov
cmpsb
movsb
dec
adc
xchg
adc
mov
hlt
fwait
sub
xor
inc
aam
jnp
int3
mov
dec
push
in
xor
sbb
sub
pop
cmp
cmp
push
adc
aaa
dec
xchg
orl
cmp
bswap
repz
pop
cltd
bsr
inc
lret
into
push
cmp
outsl
movsb
daa
ja
adc
pop
dec
stos
fcompl
adc
jbe
jecxz
sub
test
push
outsb
out
adc
out
fbld
inc
push
add
cmc
inc
push
or
das
xchg
sub
in
lcall
out
and
mov
mov
pusha
pop
push
dec
jp
test
insl
sub
outsb
pop
dec
sbb
test
rcrl
rorl
adc
pop
jl
lods
out
cmp
xor
adc
lret
in
xchg
leave
jnp
cltd
test
and
inc
pop
cmc
sahf
pop
add
out
add
dec
mov
xor
cmp
pop
mov
jnp
adc
mov
cli
jg
pusha
popf
mov
add
imul
scas
imul
push
test
fistpl
test
add
ds
pop
addr16
es
and
clc
movsb
xor
nop
fistpll
test
push
loopne
inc
cmp
cmp
shll
inc
mov
lahf
mov
cltd
jno
bound
cmpsl
sbb
scas
decb
mov
xchg
jmp
inc
mov
insb
pop
clc
repnz
out
fstl
stc
call
and
es
jmp
ds
jle
or
jne
ret
fstl
loope
call
ret
xor
cmp
lea
sub
movsl
rolb
lret
or
outsb
inc
mov
int3
push
cmpsl
dec
aas
out
xchg
loopne
ss
adcb
mov
stc
lods
fmul
xlat
sbb
push
sub
pop
push
jg
outsb
push
out
test
mov
rcl
dec
int3
or
mov
mov
stos
mov
add
push
out
fmul
imul
push
and
mov
add
pushf
push
je
cld
pusha
inc
cli
pop
cmpb
pop
pop
inc
cmp
mov
cltd
pop
psubusb
and
xor
cli
pop
shlb
ficompl
add
scas
int3
add
adc
outsb
and
sbb
nop
pop
cli
sub
sarl
stos
adc
dec
mov
jns
adc
notl
in
sbb
aad
push
xchg
imul
or
inc
dec
clc
pop
mov
shrl
cmpsb
cld
les
jnp
lods
popf
xor
jae
pusha
cs
mov
and
enter
sahf
lods
daa
mov
pop
xor
mov
fdivrs
and
sub
and
xorb
add
xchg
cmp
sbb
pop
mov
dec
lret
imull
mov
pusha
sub
xor
xlat
mov
and
inc
adc
push
fxch
mov
jmp
enter
gs
stos
mov
xchg
ret
into
inc
addr16
imul
xor
xor
fists
shr
or
cmp
shr
in
jno
cmp
incl
jnp
dec
dec
add
dec
js
sahf
jmp
mov
in
int
mov
xchg
xor
push
sub
mov
outsb
test
xchg
dec
mov
and
xchg
lock
lods
popf
sub
pop
outsb
in
gs
cwtl
pop
pop
inc
lea
mov
bound
loopne
stos
mov
dec
sar
jae
mov
jo
mov
mov
jo
ja
lods
test
xlat
push
ret
insb
adc
sbb
push
inc
test
ffree
ds
cmp
adc
mov
lods
dec
adc
dec
pop
mov
sub
cmp
push
les
push
gs
or
push
push
inc
mov
add
and
xchg
pusha
mov
dec
push
stos
insb
les
lret
repnz
xor
push
cmp
clc
sub
mov
add
pop
ffree
pop
test
or
dec
pop
pop
push
aam
or
mov
int3
fcomps
mov
call
push
aas
jns
imul
or
scas
push
inc
lcall
or
pop
inc
jb
sbb
addr16
mov
in
mov
add
dec
cld
shll
lea
and
lahf
pop
jb
add
mov
lahf
pusha
cmp
or
les
jecxz
dec
fistl
int3
stc
out
xchg
xchg
aaa
mov
adc
and
cmpsl
cmp
js
and
gs
les
fsubs
outsl
stc
sub
fidivrl
push
test
sbb
cltd
cmp
mov
aaa
add
in
adc
push
out
push
mov
pop
and
add
in
scas
sub
jmp
or
mov
sbb
mov
shlb
call
push
int3
push
shll
cmp
enter
adc
jp
jmp
sti
xor
into
dec
test
sahf
daa
mov
subl
xor
jmp
js
insb
push
mov
xchg
imul
ds
fisubrl
stc
imul
movsb
push
iret
js
popf
pop
int
mov
addr16
push
jp
fs
icebp
aaa
and
dec
mov
xlat
repnz
cli
iret
pop
test
and
jbe
inc
mov
insl
psubusb
mov
push
sbb
jmp
jnp
jns
cli
arpl
push
mov
clc
jecxz
sbb
jnp
xchg
sub
shlb
pop
into
mov
das
sbb
xlat
and
inc
outsl
in
fdivrl
fadds
mov
repnz
fmull
call
movsb
sbb
add
icebp
lea
cmp
dec
pop
or
adc
adc
enter
not
mov
adc
lods
fwait
or
test
aas
cmpsb
lret
push
scas
inc
stos
xor
cld
in
jle
and
mov
mov
popa
xchg
cld
insb
in
add
mov
cmp
mov
inc
lods
mov
add
repnz
ficoms
sarb
nop
lea
cwtl
movsl
cmp
ret
mov
fistpl
sarl
scas
addb
jmp
inc
clc
ret
jnp
xor
cld
loope
sbbl
mov
xchg
cmpsb
js
les
push
push
push
dec
loope
loopne
subl
and
xorl
rcrl
jb
icebp
pop
xor
ficomps
jl
jo
and
dec
flds
pop
cmp
ja
icebp
insb
js
mov
mov
mov
sub
sub
sahf
out
sbb
pop
pushf
int
push
enter
push
cwtl
in
pop
mov
mov
jnp
jmp
fidivrs
push
xchg
sarl
pop
sti
js
int
inc
pop
dec
addr16
notb
pop
ljmp
xor
jae
dec
lds
inc
js
add
popa
xor
cmpsb
or
sti
mov
int3
jae
adc
or
sub
inc
fisttps
push
cmp
mov
popl
or
rclb
cmp
adcl
fidivrs
and
jecxz
push
cmp
popf
icebp
mov
xor
add
xlat
xchg
pop
or
adcl
mov
test
leave
fcompl
shlb
test
pop
mov
mov
test
cli
adc
fmuls
sbb
pop
mov
lret
rcr
xor
stos
push
ret
imul
cmc
add
shll
cmp
inc
int3
sbb
jmp
scas
dec
inc
insl
sbb
fs
push
add
mov
mov
xadd
mov
dec
repnz
adc
cld
dec
jle
das
push
fmull
xor
out
xor
rcll
btc
pusha
mov
pop
or
mov
aaa
sbb
or
fcomps
out
cmp
xorb
aam
jecxz
test
jbe
movsb
ja
lds
cmp
vpminub
aad
in
add
inc
sbb
push
xorl
sarl
popf
lcall
in
inc
incb
loop
imul
roll
jo
jle
xchg
cmp
loop
inc
in
test
push
add
out
mov
mov
in
fiaddl
xorb
mov
out
xchg
out
rcl
or
in
inc
dec
cmovge
cmp
pop
mov
iret
pop
jl
sarb
sub
dec
movsb
movsl
adc
mov
xchg
gs
in
lcall
jl
sub
flds
and
and
call
xor
rclb
in
push
ret
filds
iret
cltd
inc
sub
cmp
adcb
sub
or
sbbb
int3
pop
and
jl
lahf
push
sahf
mov
addl
sub
sub
mov
loopne
cmpb
push
pop
dec
add
sub
dec
mov
and
fxch
das
xlat
test
addr16
cmp
sbb
jb
fcmovnbe
or
mov
imul
ret
aam
cltd
mov
sbb
inc
outsb
mov
out
test
filds
stos
adc
scas
pop
shrl
ret
outsl
inc
mov
xchg
push
or
cld
mov
cmp
mov
push
xchg
cmp
jecxz
sub
fbld
sub
cmp
xchg
popl
mov
push
cli
fcmovnbe
push
mov
add
jns
push
adc
insb
test
and
mov
mov
clc
repnz
pop
xor
mov
test
out
pop
mov
push
ret
negl
dec
test
and
movsl
mov
scas
in
stos
mov
fcompp
leave
sub
fisubrs
sbb
out
inc
daa
cmc
outsl
fcomip
mov
xchg
mov
jp
adc
repz
lahf
cmc
adc
add
pop
ret
loope
fsub
push
out
xor
cltd
mov
inc
cmc
inc
into
fmull
lock
jmp
pop
or
xchg
cmp
pop
mov
sti
cwtl
addr16
shr
mov
inc
xchg
test
mov
push
lds
sbb
sbb
test
mov
xor
and
stos
jg
mov
sub
ja
sbb
cmp
popf
jmp
sti
inc
mov
push
mov
lahf
jne
xchg
xor
cs
adc
mov
call
lea
adc
dec
mov
out
push
ss
dec
imul
mov
outsl
or
push
mov
bound
push
out
pop
pop
out
les
pop
stos
enter
in
jle
dec
jb
insb
stos
fsubs
sub
fdivs
xlat
daa
loope
dec
inc
pop
cmp
cmpsb
push
jmp
xor
cwtl
popl
inc
mov
dec
xchg
nop
out
lcall
xor
shlb
imul
inc
lds
cs
hlt
inc
aam
and
sub
sbb
mov
icebp
sti
jb
adc
jmp
inc
push
leave
das
mov
lret
in
scas
outsb
pop
or
imul
cmp
sahf
fwait
cli
fdivr
jg
out
adc
xchg
sbb
rorb
fs
leave
jmp
mov
xchg
scas
test
cs
sysret
push
lcall
mov
mov
xchg
xchg
jp
add
btc
jnp
fadds
mov
ret
sbb
add
adc
ret
jmp
add
jp
add
xchg
cmp
add
sbb
ficompl
and
add
jmp
repz
fcoms
xchg
push
xor
cmpl
subl
inc
orl
int3
sub
fisttps
je
pop
repz
xor
inc
cwtl
add
xchg
cltd
adc
aas
sbb
iret
push
adc
repnz
mov
push
sub
pusha
movsl
fisttpll
sbb
loope
jp
cltd
and
adc
aam
test
push
cmp
lret
ja
push
repnz
pop
push
jb
es
xor
outsb
xor
add
cmp
xchg
into
adc
es
mov
inc
xchg
aam
jo
sahf
inc
adc
fdivr
das
les
mov
in
jl
xor
or
push
hlt
andb
xchg
int
push
das
scas
les
sbb
cwtl
push
sbb
cmp
mov
mov
pop
por
inc
lock
xchg
pop
dec
cmp
adc
xchg
into
push
dec
adc
outsb
jge
pop
sbb
test
cmpsl
or
adc
cmpsl
les
loop
push
dec
repnz
imul
jno
aam
xor
jge
pop
pop
in
test
xchg
mov
add
jnp
in
and
in
mov
aas
push
std
mov
cmp
fists
mov
pop
push
jecxz
xchg
sbb
xor
sub
pop
or
cmpsb
pop
jl
std
add
out
mov
packsswb
int3
inc
pushf
loope
mov
xor
mov
push
add
mov
pop
fsubrl
ljmp
push
into
scas
push
jp
mov
push
cmp
mov
repz
and
push
notb
les
iret
mov
int3
xchg
pop
mov
xor
fnstcw
sub
add
addr16
movsl
pop
imul
sub
and
fwait
scas
xor
xchg
andl
ret
sub
dec
fldcw
sahf
mov
lea
dec
roll
cltd
popf
int3
push
popa
lds
dec
pop
lods
fmulp
lcallw
mov
add
movsb
and
adcb
xchg
sbb
xorb
dec
out
mov
clc
and
loopne
sub
cli
inc
test
or
and
push
mov
mov
push
les
jb
mov
xchg
cltd
xchg
xor
in
inc
inc
mov
pop
in
outsb
sbb
out
jmp
fildll
xor
shrl
push
inc
loop
xchg
jecxz
jno
mov
pop
iret
inc
shl
out
ss
lods
jns
in
add
and
jecxz
dec
and
out
adc
cwtl
ret
int
push
divl
jns
xor
aas
jo
cmp
add
fcomps
lret
ss
cmp
jo
xchg
fwait
inc
imul
lea
add
int3
mov
cmp
testl
jge
xor
xchg
fdivrl
inc
push
pop
movsl
lahf
xchg
mov
push
test
jecxz
stos
insl
and
and
push
dec
cmpsb
stos
leave
dec
dec
sub
mov
jns
jecxz
stos
adc
xchg
mov
mov
cmpsb
je
aas
xchg
lea
mov
jo
scas
faddp
jmp
push
push
std
dec
imul
xchg
or
mov
leave
sbb
or
ret
xchg
and
iret
jp
loopne
pop
push
inc
pop
inc
xor
mov
fcompl
fld1
xor
fucomi
xchg
int3
jmp
mov
minps
into
xlat
xchg
je
addr16
cmp
mov
xchg
inc
mov
lock
into
mov
aam
enter
rorb
xchg
pushf
xchg
push
cmpsl
mov
mov
in
adc
push
in
out
push
movsb
addr16
inc
imul
sbb
movl
push
sbb
fdivl
xor
ds
cs
out
xchg
sub
loop
jns
cmp
pop
ljmp
ds
test
int
jecxz
mov
and
rclb
mov
stos
lock
imul
add
call
fisubrl
popa
outsl
cmpsb
ret
xchg
sbb
bound
pop
mov
pop
mov
fmuls
pop
das
rcrb
sbb
lods
scas
cmp
mov
gs
add
pop
xor
shrb
mov
popf
dec
insl
sbb
xor
sbb
inc
idivl
out
adc
lods
imull
mov
es
mov
lea
insb
sub
cmpsl
push
repnz
aaa
repz
lcall
shrl
fcmovne
ret
loopne
fldenv
sbb
rol
adc
fldpi
mov
scas
pop
sbb
dec
xor
movhps
jmp
dec
out
xchg
popf
fildll
mov
lahf
cwtl
mov
test
inc
je
fistl
scas
jbe
lahf
dec
inc
loope
out
xor
xchg
out
lods
jnp
aam
aas
and
mov
jmp
arpl
pop
cmp
rorl
scas
mov
movsb
mov
jl
sbb
sahf
mov
scas
push
and
daa
cld
mov
jmp
adc
push
add
xchg
adc
lcall
sub
jle
ret
jns
cmp
mov
fnstenv
pop
rcrl
js
pop
stc
std
mov
mov
jg
fildll
inc
in
and
pop
mov
pop
and
insl
test
out
sub
jno
pop
or
clc
push
xchg
in
inc
js
sub
call
adc
incb
push
jp
mov
push
cli
movsb
jae
adc
inc
hlt
subl
hlt
xchg
cli
in
repz
inc
cld
push
outsb
inc
sub
pop
or
pop
gs
inc
bndldx
cmpsl
cs
or
ss
push
mov
test
int
int3
lahf
jbe
in
sub
mov
pop
jmp
test
mov
push
dec
test
cmp
mov
add
inc
cmp
cmpsb
aad
push
iret
xchg
dec
fs
aam
aaa
sbb
pop
cmp
nop
adc
xchg
clc
test
sarb
mov
icebp
push
jno
out
aad
push
mov
cmp
into
aad
lret
popl
mov
shlb
push
xchg
aam
inc
push
fildl
outsb
jb
inc
add
xchg
shll
inc
xchg
fldl
int
add
nop
loop
stos
enter
std
cmp
mov
xor
bound
dec
dec
mov
mov
es
fdivl
or
mov
mov
mov
decl
negb
in
cmpsl
sti
outsb
add
into
cwtl
gs
push
cli
inc
and
std
pushf
mov
xchg
add
mov
scas
xor
cli
pop
cs
idivb
daa
mov
and
stos
daa
ljmp
sahf
jo
mov
add
push
gs
dec
shr
ss
rolb
push
mov
adc
test
or
push
dec
shll
popf
ljmp
mov
data16
push
mov
in
push
out
inc
sbb
ror
outsl
pop
fstpl
sbb
xor
jmp
outsb
lods
pop
in
add
in
sbb
or
or
test
inc
add
jl
xor
cmp
aaa
cmpsb
mov
dec
faddp
fnstenv
and
mov
bnd
arpl
push
and
aam
cmpsl
stos
imul
pop
xchg
js
jmp
jno
or
lahf
imul
xchg
stos
jecxz
fidivl
mov
dec
jnp
add
dec
shlb
aam
fstpl
and
leave
jae
lret
js
aad
test
mov
ss
dec
jmp
pop
xchg
sbb
inc
pop
adc
xchg
es
mov
sub
mov
loopne
icebp
scas
jo
stos
vmovmskps
jnp
mov
insb
test
ret
mov
dec
inc
xchg
xchg
inc
inc
sbb
scas
xchg
xor
pop
sub
and
and
push
incl
push
rcll
adc
pop
pop
xor
divps
cmp
lock
pop
mov
and
pop
ljmp
mov
sbbl
rclb
mov
out
out
add
dec
sub
lea
dec
sub
xchg
mov
sbb
jnp
stc
mov
test
pop
dec
or
pop
nop
xchg
vmwrite
and
cli
loope
cld
pop
into
push
jecxz
add
push
lds
jmp
inc
bound
std
jae
xadd
xchg
out
mov
ds
movsl
jge
dec
add
stos
pop
in
xchg
jae
scas
aam
aas
sub
rcrl
sub
sbb
xor
out
fdivrl
xor
cld
inc
cltd
sahf
mov
push
ds
in
or
faddl
xchg
int
lcall
mov
jo
mov
push
ret
cmpsl
in
shll
push
push
jge
mov
lock
repz
dec
mov
pop
jae
testl
rcll
xchg
cmpsl
pusha
xchg
sti
dec
pop
add
ret
sbb
add
lds
xor
mov
inc
stos
es
pushf
frstor
jg
inc
xchg
mov
jmp
mov
sbb
cmp
sub
movl
pop
xor
fisubrs
add
mov
sub
gs
xlat
ret
adc
out
ljmp
test
fstps
jb
stc
push
in
fwait
adcb
cld
cmp
pop
sub
push
in
adcl
fstpt
scas
push
cmp
bnd
pop
pop
or
in
jp
dec
inc
mov
insl
jmp
and
mov
pop
inc
lret
add
xchg
call
imul
mulb
jl
add
jns
cli
test
out
insl
sti
aaa
xor
gs
repnz
cmp
adc
add
shll
mov
outsb
test
add
loopne
ds
pop
es
ds
sub
sahf
cmc
stos
outsb
adc
fidivl
stc
orb
lds
push
sub
movsl
enter
xchg
lds
call
jno
leave
jg
mov
cmp
jo
aas
ss
clc
icebp
std
jecxz
test
movsl
leave
ljmp
mov
xchg
es
dec
add
fsubs
inc
sbb
push
icebp
and
outsb
jo
lods
inc
out
jbe
lods
xor
fmuls
hlt
outsl
mov
sbb
pop
outsl
mov
inc
aad
stos
sahf
push
mov
xchg
push
xchg
jmp
js
cmp
push
stos
pop
cmp
lods
xor
and
jb
mov
mov
int3
test
xor
and
add
mov
test
movsl
sbb
iret
int
aam
mov
in
pop
mov
mov
or
repnz
outsb
pop
sbb
in
enter
fisubs
cmpsl
cmp
fs
or
insb
pushf
dec
mov
stos
and
mov
movsb
cld
lahf
inc
ret
fildl
inc
lods
ja
xchg
data16
mov
sbb
adc
fildl
dec
mov
mov
xchg
xchg
ljmp
gs
stos
outsb
in
mov
mov
testl
std
mov
add
fsubrl
inc
adc
push
jmp
inc
mov
jmp
vcvttps2dq
scas
repnz
jne,pn
scas
or
das
adc
stos
mov
mov
xchg
data16
lock
mov
dec
lock
out
xchg
loop
dec
int
out
enter
faddl
xor
es
sub
mov
loop
sbb
ss
adc
mov
aam
push
xchg
movsl
cltd
les
test
adc
mov
clc
hlt
lock
mov
pop
scas
or
movsb
sbb
imul
out
dec
roll
data16
pusha
inc
mov
add
clc
fisubl
jbe,pt
or
test
movsl
xchg
call
in
imul
scas
lods
cmc
pop
mov
pop
pop
ret
lret
sub
sub
pop
in
cmp
or
or
pop
test
flds
or
adc
sub
pop
shr
xchg
insb
xor
adc
mov
xchg
xor
mov
ljmp
xlat
push
cmpsl
clc
inc
aad
or
inc
cmp
cmp
xchg
pop
lcall
sub
sbb
cmp
mov
icebp
call
in
inc
sub
cmp
pop
ljmp
cmc
negl
pop
in
jle
sarb
ja
flds
iret
insb
aaa
adc
ficomps
pop
sub
mov
inc
cmp
sbb
adc
pop
xchg
js
lcall
push
lods
fistpll
test
shll
mov
or
faddl
out
gs
jnp
inc
add
les
test
add
cs
lods
iret
add
mov
arpl
cwtl
sbb
jnp
movsb
xor
loope
stc
ret
fidivrl
sarb
push
in
movsl
cli
or
in
pusha
insb
incl
xchg
into
mov
lds
in
clc
test
mov
mov
arpl
inc
dec
mov
lret
call
test
and
xor
or
in
cld
add
sbb
push
lahf
xchg
or
shrb
pop
cli
push
insl
inc
lods
xor
sbb
fisubrl
dec
aaa
xor
mov
sub
xchg
aad
add
stos
and
aas
loop
dec
inc
aam
popa
pop
sti
ds
shlb
inc
insb
sbb
daa
push
mov
in
pop
xor
xchg
adc
xlat
pop
cs
fists
into
sbbb
test
shlb
subb
inc
sti
cmpsb
jge
ljmp
out
push
mov
push
ret
in
mov
inc
jnp
push
fiadds
js
pop
rorl
mov
test
jecxz
jo
or
in
sbb
fimull
add
in
push
aaa
jl
adc
pop
cmp
fcmovu
gs
lret
fsubrs
icebp
mov
mov
xchg
mov
mov
jl
jmp
or
in
loope
mov
int3
sbb
pusha
je
icebp
fsub
jmp
add
sahf
fildl
jle
loop
outsl
adc
cs
je
subb
sbb
aas
sbb
mov
xchg
idiv
stos
repz
jmp
pop
insl
xchg
test
rcrl
mov
shll
pop
fs
insb
mov
adc
arpl
or
push
je
rcll
cmp
dec
xor
sub
cmp
xchg
xor
sbb
aaa
dec
mov
data16
cmp
cmp
push
lret
stos
bound
xchg
enter
std
and
mov
mov
sub
and
sbb
pop
mov
outsl
mov
and
popa
mov
popa
mov
sbb
jg
and
push
or
adc
and
mov
adc
sub
mov
testb
cmp
cmp
xchg
andl
and
mov
pop
and
ss
in
pop
idivl
imul
xor
clc
js
cli
ret
inc
adcl
push
outsl
dec
je
ss
xchg
insb
test
int3
je
push
inc
das
mov
cli
clc
lock
sahf
inc
or
mov
or
addl
movsl
scas
cltd
std
and
loopne
aaa
popw
fwait
dec
xchg
jg
bound
xchg
jne
add
push
push
call
mov
into
pop
xor
sahf
sub
inc
push
jmp
mov
or
cmp
pop
push
or
shll
int
leave
cmp
sub
pop
data16
sbb
mov
adcb
in
push
icebp
sub
mov
push
xchg
sub
out
bound
fwait
xor
add
xchg
adc
fwait
jle
pusha
pusha
dec
cmp
mov
mov
sbb
push
aam
pop
cli
jnp
push
repz
std
cmpsl
mov
ljmp
orl
cwtl
jbe
mov
or
cmpsl
jns
push
cmp
push
loopne
jmp
xor
jne
andl
jmp
xchg
and
test
add
ficoml
out
inc
fisttps
sub
movsb
push
sbb
jnp
lahf
push
aaa
lahf
dec
sahf
iret
inc
dec
iret
shll
idivb
fisttps
cmp
stc
in
ljmp
push
xchg
mov
data16
aam
jae
fbstp
jbe
shll
lods
test
mov
xchg
push
add
jl
lock
dec
cmp
jp
or
and
fiaddl
mov
dec
push
mov
clc
push
sbb
test
mov
ret
adc
out
in
aas
cs
pop
iret
enter
sub
in
cmpb
jecxz
pop
sub
jns
or
mov
pop
push
insl
adc
or
sub
push
xchg
dec
inc
jmp
hlt
push
mov
mov
fnsave
inc
jnp
data16
hlt
lods
mov
sub
aad
xchg
push
ss
rcrb
lods
jmp
dec
fildl
mov
jne
lock
dec
add
or
sbb
xchg
and
call
sbbb
inc
stc
stos
dec
ret
push
mov
repnz
shl
test
jmp
sbb
adc
scas
push
mov
ret
xchg
push
insl
jecxz
js
mov
mov
scas
icebp
rcrl
orb
xchg
aam
test
scas
pusha
inc
push
test
xchg
cmc
cmp
jo
comiss
cld
xchg
sti
xchg
mov
data16
lods
arpl
or
and
add
popa
sbb
xor
or
mov
sub
mov
inc
cwtl
wbinvd
cmc
xor
fistpl
lret
imul
test
push
mov
push
xor
scas
out
push
ss
xor
cmp
stos
dec
adc
mov
cmc
cs
sub
xor
jbe
xchg
pop
cmpsl
outsl
aas
ret
sbb
les
sub
hlt
xchg
mov
out
mov
rcl
cwtl
aam
mov
jne
and
cmp
and
push
sti
sbb
cmpb
adc
popfw
sarl
sub
adc
xlat
mov
mov
incl
sub
sbb
into
jne,pn
xor
add
addr16
dec
into
xchg
mov
fiaddl
mov
xor
mov
ret
xchg
flds
inc
add
mov
aaa
mov
test
test
std
push
sub
stos
insb
or
pop
ret
aam
and
push
and
lock
mov
push
jbe
push
cmpb
dec
ja
sbb
hlt
xor
mov
mov
sub
jnp
mulb
mov
mov
iret
or
lds
data16
xchg
xchg
jmp
ret
mov
in
hlt
aas
dec
in
mov
stc
cmp
pusha
enter
aam
imul
cwtl
mov
gs
push
dec
and
adc
sub
insl
mov
push
inc
lock
popa
inc
out
imul
mov
add
push
repnz
xor
or
clc
push
test
and
sbb
or
ds
negb
test
popa
outsb
mov
gs
jle
aad
out
pusha
fimull
cld
inc
adc
shll
cmc
cmp
and
fucomi
idivl
mov
dec
add
pusha
mov
leave
jne
shll
fmull
out
adc
leave
sub
dec
pop
sbb
sub
insb
sbb
jae
in
lahf
int
movsl
and
stos
shlb
pop
jno
imul
mov
test
scas
push
fdivl
push
push
test
push
mov
xor
cmpsl
leave
out
pusha
xor
aas
in
fwait
xor
push
xchg
hlt
inc
pop
repnz
push
enter
and
loopne
mov
cmpl
subl
sahf
mov
in
push
mov
push
aaa
pushf
mov
push
pop
dec
test
xlat
sub
dec
xor
xchg
not
cmpsl
push
adc
mov
push
outsb
cmp
stc
mov
mov
pop
cs
sti
shlb
dec
dec
add
out
sub
into
popa
sbb
push
out
pop
pusha
adc
mov
mov
scas
xor
sub
test
add
lea
out
cli
addr16
sbb
sub
in
cmp
mov
scas
in
pop
xchg
sbb
lret
ss
lods
mov
cs
sub
cwtl
add
outsb
inc
lcall
mov
jo
pop
or
xchg
sub
cmp
scas
dec
stc
test
mov
fsubs
jae
jl
push
cmp
sub
mov
cmp
pop
mov
loop
xor
push
pop
negb
push
insb
jae
aam
leave
jb
xchg
mov
pop
data16
sub
rcll
add
adc
mov
lock
repnz
movsl
movsl
aas
cmpsl
movsl
cld
int3
loope
stos
and
sub
ret
or
hlt
ljmp
roll
mov
imul
loop
stos
pushf
pop
mov
orl
cmp
lock
mov
jnp
jl
mov
data16
fbstp
in
les
sub
in
xchg
daa
in
adc
icebp
fs
or
ss
jnp
pop
xchg
xlat
pop
mov
mov
sub
fdivrs
enter
jo
imul
clc
outsb
lds
arpl
mov
xchg
and
fidivs
sub
loopne
sbb
sbb
add
mov
jno
xchg
pop
or
loopne
flds
mov
stc
xor
repz
leave
sub
jns
rcrb
inc
aad
push
pop
push
xorb
inc
sub
mov
fldpi
test
lret
in
push
inc
cmp
mov
sbb
data16
ret
roll
or
pop
pop
add
div
icebp
jle
xchg
adc
mov
push
pusha
lock
mov
xchg
sub
sub
stos
dec
inc
pop
out
fldt
mov
dec
lret
sbb
jg
mov
push
fdivs
push
pop
rcl
cmpsl
mov
scas
mov
scas
nop
in
inc
and
ss
jecxz
add
mov
mov
xchg
push
dec
cmc
in
lock
sarl
out
mov
lods
scas
sbb
das
cmp
insl
test
adc
das
mov
shr
lods
je
repz
pop
push
mov
and
les
rcrb
dec
in
pop
add
pop
mov
xor
pop
repz
es
cld
out
roll
dec
in
sub
or
addr16
icebp
dec
ja
cmp
sbb
call
inc
adc
pusha
mov
mov
jb
das
fildll
mov
xchg
inc
cmp
and
sbb
imul
ret
push
adc
dec
dec
js
pushf
dec
cltd
imul
cmp
mov
dec
mov
ja
loopne
cld
repz
cmpsl
mov
aas
dec
test
int3
out
icebp
aad
and
jne
ret
lea
cltd
cmp
popa
js
pop
mov
push
ljmp
stc
adc
in
push
lds
gs
mov
insl
data16
jmp
fnstenv
add
dec
std
xchg
nop
inc
xor
clc
push
mov
adc
sti
stc
inc
ljmp
repnz
pop
clc
sbb
cld
roll
mov
dec
xor
out
jle
int
jecxz
dec
clc
dec
aad
in
xchg
mov
cld
stc
pusha
in
or
lahf
adc
sti
fiadds
mov
call
mov
cmp
out
mov
test
dec
ss
mov
enter
push
adc
push
sbb
push
jl
or
popa
mov
lret
jns
hlt
inc
aaa
pop
jnp
mov
cmp
and
lret
cmp
stos
inc
fs
push
push
xor
lret
mov
jbe
sahf
xor
jae
or
jl,pt
xchg
dec
jne
in
inc
in
fdivrp
cmp
add
jns
and
addr16
aaa
iret
popa
push
pop
mov
arpl
rorl
int
jne
pop
sub
fbstp
mov
add
ja
pop
sbb
nop
cmp
insl
int
fdivrl
dec
arpl
mov
jecxz
scas
test
movsl
cmc
ja
add
xchg
cmp
lds
mov
cltd
sbb
push
jo
xchg
jb
inc
jnp
pop
rclb
lret
mov
mov
and
das
mov
cmp
ret
sub
adc
loope
pusha
pop
xchg
insl
fadds
negb
push
dec
push
jne
xchg
mov
aaa
dec
ret
push
loopne
nop
jge
xor
pop
pop
jne
int
repnz
inc
call
andb
fnstenv
dec
or
iret
pop
jge
xor
in
jb
sub
xor
sbb
jbe
mov
outsl
popa
push
add
inc
xchg
xchg
in
mov
pop
mov
xchg
insb
and
in
daa
add
jge
cmp
pop
add
into
xor
movsl
jmp
into
add
push
mov
mov
pop
mov
jmp
push
ret
ret
enter
add
iret
xor
in
jle
jge
movsl
jo
mov
pop
je
jbe
dec
iret
xchg
mov
dec
into
stc
push
lds
inc
pushf
lahf
pop
pop
push
adcl
lret
movsb
nop
or
lock
or
cmp
or
lret
nop
or
add
mov
push
iret
insb
pop
adc
xchg
mov
jns
sub
nop
push
jle
push
imul
push
jg
push
xchg
mov
push
pushf
pop
xlat
dec
xchg
mov
jae
dec
insl
das
scas
mov
stc
leave
xor
mov
nop
mov
xchg
divb
cltd
dec
fwait
or
leave
xor
arpl
adc
xor
push
aad
sbb
lcall
mov
mov
sahf
push
xchg
inc
int3
shll
lret
int3
jae
out
mov
push
ret
sbb
out
popf
or
popa
cmc
fisttpl
repz
cld
xchg
cmp
cmc
sbb
movsb
cmp
adc
pop
mov
test
cmp
inc
fdivr
pop
sti
mov
mov
push
inc
mov
sub
out
sub
mov
loopnew
push
or
pop
mov
sbb
dec
mov
outsl
dec
cmp
cmpsl
rorl
adc
pop
jae
call
popf
cmp
sbb
loope
dec
fwait
adc
fistpl
dec
lea
fmull
mov
add
aaa
loopne
cmp
adc
mov
imul
fs
stos
jbe
dec
pop
sti
sbb
dec
and
stos
fildl
xchg
jb
ret
loopne
daa
adc
aad
in
push
sahf
adc
inc
js
rorb
jnp
in
lret
inc
pop
outsl
jb
or
xor
rcll
jmp
imull
push
lods
add
fmuls
clc
xor
inc
cwtl
mov
pop
shlb
mov
lods
call
lret
sbb
jae
daa
repnz
or
cmp
shrb
mov
in
repnz
shlb
daa
stos
pop
sbbb
and
cltd
int
mov
add
nop
fdivr
or
push
push
xchg
push
inc
out
shrl
popa
movsb
daa
out
sub
call
push
and
adc
and
pop
mov
mov
jo
and
dec
or
push
inc
mov
call
xchg
cs
jno
adc
push
cmpsl
or
sbb
fldz
std
sbb
jle
mov
lcall
pop
arpl
test
xchg
and
mov
dec
movsl
clc
aam
sbb
pusha
xor
lcall
xchg
fs
add
iret
roll
xor
inc
add
push
cmp
cmp
xor
sbb
mov
pop
std
fildll
cld
test
arpl
push
imul
and
jno
int
mov
sub
xor
cmp
mov
das
enter
inc
sbb
dec
xchg
mov
daa
lcall
frstor
mov
scas
push
std
mov
mov
pop
push
pop
arpl
dec
scas
dec
dec
xchg
aam
pop
pop
push
stc
imul
int3
or
xor
pushf
inc
sbb
int3
pop
add
inc
sub
push
xorb
test
insb
es
fsubrs
lods
sarl
inc
cmp
xchg
lock
dec
jge
stos
push
xor
mov
xchg
outsb
or
aaa
sub
xor
lods
cmpsl
fs
imul
bound
popa
bound
popa
out
inc
dec
sub
popl
lods
jmp
insb
fcomp
mov
std
xchg
dec
sbb
aad
rorb
jmp
shrb
imul
loope
lods
scas
xchg
out
cmpsl
rol
fdiv
pop
mov
push
pusha
mov
inc
pop
add
scas
ss
mov
sahf
outsb
xchg
outsb
inc
rorb
sub
xchg
sub
push
pop
mov
rol
jnp
std
mov
in
ficoms
frstor
sub
ds
inc
loope
rclb
stc
into
pop
rcl
in
loopne
push
loopne
jmp
mov
stc
inc
gs
xchg
shlb
pop
pop
push
dec
inc
inc
hlt
sub
push
movsl
cltd
lods
repnz
call
jb
orb
sahf
push
and
jb
push
aaa
fucomi
sub
out
in
shll
jg
mov
stos
aam
cmp
adc
in
cli
shlb
scas
jle
stos
mov
loopne
xor
xchg
lods
jo
loope
jnp
arpl
int
xlat
jae
arpl
cmpsb
add
pusha
clc
lods
sbbl
enter
push
addr16
mov
jp
or
xor
inc
and
jns
inc
insb
ret
jp
movsl
js
stos
outsb
ds
and
dec
in
jg
sbb
push
mov
xchg
iret
jne
mov
popf
cmpsb
pop
xor
mov
jnp
jns
sub
popf
sbb
xor
push
cmc
test
mov
cmpb
jge
or
cwtl
mov
add
daa
jns
xchg
mov
test
test
xchg
int
xchg
out
jb
push
test
mov
lock
loope
loope
push
mov
cmpsl
or
xchg
pop
imul
inc
filds
imull
mov
pop
imul
insb
mov
scas
xlat
lcall
xchg
mov
fmull
push
jbe
fwait
push
push
outsl
cmp
mov
popf
cli
es
std
loop
sub
dec
std
push
jne
jns
cltd
and
aas
test
cli
push
mov
lcall
pop
rcll
int3
movsb
rcll
lret
ficomps
lock
imul
insb
hlt
scas
cmpsl
add
push
frstor
scas
jl
add
or
mov
mov
xor
and
sub
loopne
cmp
sbb
push
cmp
push
neg
inc
testb
jo
jb
icebp
and
jns
dec
push
inc
ja
popf
loopne
pop
rcrl
icebp
cmc
dec
pop
adc
jae
add
sub
xor
mov
in
sbb
xchg
xchg
in
inc
test
inc
add
scas
movsl
xchg
sbb
lock
sbb
aam
ja
mov
rol
push
inc
es
push
push
lret
pop
imul
jno
jl
jle
arpl
cmp
pop
fst
jecxz
xor
jmp
pop
adc
xor
xchg
sbb
inc
mov
pxor
or
arpl
outsb
in
add
mov
rcl
jno
mov
xlat
inc
cltd
out
pop
mov
pop
clc
sub
pop
in
cmp
add
xor
lea
ljmp
data16
sub
fwait
cwtl
mov
clc
sti
test
mov
lret
xchg
cmpsl
jge
push
jecxz
cmp
dec
sbb
xlat
rorb
jb
in
je
cmp
int3
lret
imul
fadd
in
inc
lods
or
jl
shll
push
hlt
lods
mov
jl
jb
addr16
outsb
dec
cld
pop
inc
in
push
dec
testb
mov
lcall
mov
les
std
mov
cmpsl
aaa
outsl
xor
push
and
scas
xchg
pop
push
push
rcl
push
xchg
cli
out
mov
ja
push
jo
sub
and
and
mov
pop
lock
lods
xor
std
sbb
push
mov
out
xchg
and
push
push
in
int
outsl
cmpsl
jle
loop
xorb
inc
xchg
ljmp
add
popf
pop
add
aad
in
aas
or
lahf
repz
sar
mov
jmp
xchg
ret
pop
push
mov
fwait
dec
fldenv
push
ss
popf
negl
jecxz
mov
imul
cmp
cli
scas
or
add
mov
test
jae
cld
push
cmpsl
hlt
xor
jecxz
adc
ss
test
mov
shrl
mov
mov
dec
fcomip
xchg
inc
sarl
add
scas
sub
xchg
rcl
nop
jb
inc
mov
fcomi
sbb
aas
fldenv
push
mov
jae
jp
xchg
subb
cmc
mov
aad
dec
fsubrs
out
rcr
insb
jmp
lea
jmp
negb
mov
push
in
aas
fisubrl
cltd
sub
cs
data16
shl
outsb
dec
mov
inc
sbb
add
cld
cmpsb
xchg
jmp
xchg
push
sbb
xchg
lock
sbb
int
shlb
cmp
mov
inc
mov
mov
stos
dec
es
mov
sbb
lods
xor
pusha
adc
lret
jl
rorl
clc
pusha
add
mov
jge
cmc
mov
stc
notl
push
ret
mov
imul
pushf
mov
outsb
add
add
popf
ds
clc
aaa
fistpll
cltd
mov
add
aam
mov
mov
aaa
test
icebp
mov
mov
es
test
xchg
rcl
pop
inc
stos
hlt
addr16
lock
negl
popf
scas
xor
mov
rol
jo
les
jecxz
cmp
xor
pop
mov
dec
xchg
add
jp
sub
mov
push
ljmp
mov
sub
adc
pushf
or
pop
subl
scas
push
dec
mov
std
mov
adc
es
or
adc
sti
cmc
xor
fistpl
mov
push
add
xchg
ss
mov
mov
jo
fadds
push
jmp
unpcklps
lahf
and
popa
xchg
mov
mov
vminpd
fdivl
push
mov
filds
pop
out
add
cmpsb
mov
btr
aad
and
in
aaa
adc
mov
lret
pop
scas
xchg
mov
js
popa
jge
aad
rorl
push
test
or
add
xchg
icebp
mov
movsb
add
adc
movsb
dec
cmpsb
repnz
insl
mov
mov
andb
mov
and
xchg
xor
cmpsl
cmp
shll
adc
push
ret
sbb
clc
addr16
repnz
fisttpl
jge
cmp
popf
mov
mov
lods
xchg
inc
js
mov
bnd
xchg
xchg
push
sbb
sub
sub
enter
pop
sub
mov
or
sub
rorb
out
popa
cltd
lahf
and
cmpsb
pop
aad
into
inc
lahf
stos
mov
imul
mov
mov
aas
arpl
negl
xor
pop
push
ficoms
sbb
in
enter
jns
imul
cmpsl
and
mov
mov
xor
mov
mov
add
cmp
popl
xchg
mov
repnz
jg
sub
cmpsl
test
push
repz
clc
frstor
call
repz
and
adc
cmp
inc
jmp
rcrl
test
push
stos
mov
ja
jbe
mov
decb
std
jg
mov
xchg
xchg
sub
rcrb
movl
sbb
scas
and
outsl
div
fnstsw
cmp
adc
fwait
bound
inc
mov
imul
rorl
shrl
test
mov
adc
out
cmc
mov
into
loop
push
cmp
mov
push
cld
sbb
fdivs
in
enter
sub
in
jne
xchg
xchg
inc
mov
mov
in
scas
movsl
xor
jnp
lds
pop
inc
test
int3
insb
adc
push
push
pop
sub
in
addr16
pop
cmp
push
mov
and
rcrb
dec
cs
add
mov
inc
imul
or
sbbb
fcmovbe
mov
jmp
xor
mov
jbe
dec
mov
sahf
adc
xor
bound
push
sbb
lret
fwait
or
and
jecxz
cmpsl
ljmp
pop
jb
aam
pop
xchg
out
sarb
js
mov
out
hlt
dec
pop
jns
or
rcll
shl
test
sub
jb
sarb
and
mov
add
push
sub
popa
lret
xchg
sbb
cmp
loope,pt
fxch
imul
ret
mov
dec
adc
mov
sub
or
je
movsl
lret
and
add
pop
inc
rclb
and
cs
test
pop
sub
cltd
cmp
mov
ret
xchg
pop
pmaddwd
mov
mov
xor
test
xor
pushl
stos
into
out
hlt
jecxz
push
aaa
in
call
popl
jb
dec
test
or
lret
ret
cmpsl
inc
lods
mov
fs
or
mov
fisubs
scas
repz
les
test
add
xor
lcall
cwtl
inc
and
into
xor
jge
jecxz
jg
dec
jbe
mov
dec
xchg
loop
sub
leave
in
je
arpl
and
test
stos
mov
dec
stc
adc
inc
pop
fsubp
fildl
push
imull
and
xor
inc
movsl
js
frstor
data16
mov
ret
mov
or
fisttpll
and
insb
lret
jl
rolb
xor
es
pop
pop
cmp
test
cmp
lahf
popf
fimull
int
fisttpll
pushf
es
or
pop
rcr
repnz
push
push
rcll
xchg
mov
mov
pop
outsl
roll
xor
sbb
lock
push
rolb
adc
orl
imul
sub
push
je
fisttpll
jle
test
imull
mov
movsb
and
mov
dec
dec
mov
ljmp
test
daa
inc
jne
nop
nop
into
out
loop
mov
rsm
fisttpll
add
stc
add
sub
mov
adc
jae
arpl
nop
lea
push
rcl
mov
mov
mov
ds
pop
push
mov
xchg
mov
add
push
cmp
xlat
stc
nop
aam
lds
loope
adc
adc
subl
and
in
inc
sub
pusha
sahf
mov
inc
in
fstps
add
push
xor
outsb
jle
inc
xor
mov
fcomps
call
jbe
scas
shlb
cmovns
shrb
sti
mov
inc
int
sub
xchg
aam
jecxz
mov
rcr
xlat
sub
lock
rorb
cli
leave
imul
cmc
cmp
adc
pop
xchg
mov
scas
lods
jnp
add
dec
push
jg
adc
mov
imul
jl
jb
sbb
jae
popa
pushf
lcall
rcll
jnp
or
push
je
lea
stos
dec
sarl
iret
loop
jmp
mov
lods
or
xchg
jmp
adc
sbb
ja
push
jae
ja
test
xor
cmp
dec
aam
inc
mov
sbb
jae
xor
dec
scas
fbstp
xorb
pop
faddl
jne
mov
mov
clc
adc
xor
jmp
cld
mov
sti
jl
jp
aas
mov
or
pop
inc
jno
aam
jno
or
push
out
xor
lahf
jae
shll
and
inc
stc
and
in
in
stc
mov
pop
mov
inc
mov
leave
dec
jge
lods
rcl
aas
neg
mov
xchg
ret
cwtl
and
inc
je
push
in
out
mov
push
out
leave
loop
fbld
or
inc
std
ljmp
mov
jns
cltd
stc
incl
add
cs
push
fidivrs
pop
jns
lods
stos
out
scas
dec
dec
adc
clc
sub
push
or
jns
subb
scas
and
bound
sbb
sbb
inc
xchg
scas
imul
call
push
xor
mov
jp
cmpb
inc
and
mov
add
stos
mov
test
icebp
insl
test
test
jg
movsb
out
push
imul
movsl
push
movsl
ljmp
mov
mov
push
out
ss
test
inc
pop
dec
icebp
adc
pop
ja
lods
insb
xchg
adc
int
inc
push
into
jmp
cmpsb
mov
add
jge
sbb
leave
ss
cld
lahf
xchg
in
dec
sbb
or
mov
je
das
sahf
inc
push
mov
scas
inc
loope
adc
fcomp
jns
mov
ss
xor
mov
leave
and
aam
mov
and
push
in
scas
aad
dec
out
aam
je
or
out
xor
das
and
cmp
jmp
icebp
ljmp
lock
adc
xor
add
les
pop
push
mov
shrl
dec
in
daa
insb
push
xor
ja
arpl
js
jecxz
pop
mov
outsl
inc
aas
mov
lea
mov
dec
loopne
jnp
in
sub
subl
push
or
fld
outsb
loopne
mov
notb
sbbl
xchg
jo
adc
sub
cmpsb
or
aam
popa
pop
stos
test
add
pop
cmpsb
push
bound
dec
addr16
xchg
sbb
or
mov
leave
mov
inc
sti
sub
add
in
leave
jo
and
repz
cltd
shrb
jbe
sbb
or
stos
and
fildl
mov
dec
int
sarb
xor
fidivl
sub
lods
push
pop
mov
frstor
dec
ja
leave
outsb
xchg
and
fmuls
fs
ret
ret
pusha
roll
push
and
mov
lock
or
cs
xchg
cmpsl
pop
pushf
movsl
mov
jne
or
sbb
lods
cmp
sub
sbb
movsb
and
les
inc
lret
iret
int3
popa
push
stos
sbb
mov
xor
sub
je
mov
dec
dec
int3
pushf
fnstenvs
push
mov
mov
dec
jmp
shlb
cmp
fisttpll
mov
imul
popa
lea
repz
insb
mov
pushf
dec
xchg
adc
xor
sahf
sub
rcr
enter
incl
cmpsl
adc
inc
jl
push
mov
cld
lods
sub
cs
cld
data16
xchg
ljmp
popf
cmp
incb
call
add
cmp
inc
imul
outsl
jmp
pushf
jp
mov
jl
jnp
pop
movsb
ss
push
repz
imul
mov
scas
xchg
repnz
xchg
pop
xchg
adc
xchg
jg
dec
or
sub
mov
mov
in
mov
adc
jp
loop
add
mov
push
arpl
bound
push
fcompl
lods
rcrb
shlb
lfs
xor
cmc
mov
sub
xchg
dec
scas
mov
pop
pop
imul
dec
iret
stos
and
inc
xchg
mov
gs
add
sbb
mov
fwait
mov
xchg
mov
cwtl
mov
shlb
mov
cmpsl
xorl
cltd
and
cmp
push
jmp
pop
dec
addr16
sbb
mov
sahf
pop
push
dec
inc
rolb
lods
lods
adc
test
lods
sbb
jb
rcll
push
inc
lods
sti
negb
jbe
inc
aam
cmpsb
xor
loope
in
jno
dec
xchg
and
pop
and
mov
in
cmp
xlat
mov
and
dec
xchg
int
test
push
cmp
enter
cltd
dec
mov
push
pop
or
andb
push
mov
jmp
push
pop
push
dec
or
stos
jb
mov
mov
jecxz
out
movsl
push
stos
das
add
mov
sar
mov
scas
jne
xchg
stc
jmp
mov
fdivl
jno
imul
lods
sub
bound
and
xchg
push
sbb
mov
push
xor
cmp
cmp
icebp
sbb
shrb
jns
fstps
jmp
rcrb
testb
out
imul
and
lea
sbb
push
hlt
stc
mov
cmp
pop
and
mov
and
out
adc
sahf
pop
mov
lds
testl
fbstp
cmc
push
cmp
or
mov
push
mov
pop
jmp
stos
pop
cmpsb
lods
pushf
imul
push
add
push
fidivrl
loop
cli
out
add
orb
push
mov
pop
cltd
and
lds
xchg
cmp
jne
repz
push
inc
pop
xor
sub
sub
adc
lods
jnp
pop
addr16
or
pop
mov
cmpsl
jne
jmp
call
out
popa
inc
cmp
cmp
jb
cmp
xor
mov
or
jmp
push
in
push
ja
sbb
jb
xchg
add
push
aam
xchg
cmp
cmp
mov
repz
into
enter
pop
stc
fs
mov
or
xor
lahf
shl
nop
xchg
mov
add
fisttpl
shlb
cmp
aam
push
xchg
icebp
mov
xchg
loopne
and
fdiv
ljmp
pusha
clc
add
loopne
cmp
ljmp
mov
ror
and
push
jae
lods
adc
mov
popl
or
xor
dec
pop
xchg
movsl
stos
fcomps
push
out
inc
mov
push
shrb
aad
xchg
roll
into
lods
xor
imul
inc
loopne
je
cli
call
cld
mov
jns
pop
out
ficoml
jg
dec
xchg
fcompl
push
or
lods
cmp
or
aas
lods
add
xor
dec
xor
scas
push
and
cs
mov
push
fisubrl
adc
jge
dec
popa
in
push
iret
inc
push
outsl
icebp
dec
or
push
inc
rcrb
xchg
inc
dec
mov
shlb
incb
cmc
cmc
add
add
jp
ja
or
push
dec
adcl
repz
sub
mov
scas
mov
add
movsl
xor
js
inc
add
dec
es
cmp
test
cmp
xchg
test
repz
dec
mov
cmc
fsubl
sub
mov
clc
leave
push
ret
jmp
sbb
xchg
orb
in
lahf
ja
in
mov
jle
test
ret
scas
ret
scas
imulb
data16
dec
add
lret
addl
inc
icebp
aas
repnz
xchg
movsb
xor
popf
jl
cmpb
enter
test
dec
sahf
test
pop
stos
inc
inc
dec
xchg
mov
clc
add
xchg
push
jbe
cld
adc
mov
pop
push
scas
inc
adc
cmpsb
lret
shrb
xchg
jge
xchg
ds
mov
cli
push
lock
in
shr
addb
mov
in
sbb
fistpll
adc
add
loopne
push
ficompl
sbb
insb
ficoms
mov
dec
lock
rolb
pminub
sbb
pop
dec
xchg
fwait
pop
adc
scas
adc
lret
iret
test
jl
push
pop
or
mov
mov
shrw
pop
jb
sbb
fcomip
jnp
and
cmp
int3
jg
mov
int3
repnz
xor
leave
add
xor
enter
fdivl
ja
push
test
filds
mov
cmp
out
xchg
add
lds
out
test
jge
mov
pop
pop
adc
arpl
mov
es
cmp
inc
pop
or
jp
loope
aad
sub
and
scas
sub
jecxz
push
dec
xlat
fwait
cli
in
ja
inc
je
push
jae
movsl
inc
xlat
sbb
popf
jl
sbb
das
insb
inc
pop
or
add
mov
xchg
adc
xchg
sahf
into
push
pop
push
loopne
pushf
insl
mov
push
popf
mov
jo
int3
rolb
cld
xor
fcoml
pop
cmp
jg
lock
or
and
imul
test
lds
jmp
dec
test
pushf
movsl
aad
insb
adc
xchg
das
dec
cltd
stos
add
mov
adc
sub
lcall
out
lods
push
ret
les
push
push
sarl
je
aas
je
pop
push
push
xor
pusha
push
fwait
int
clc
mov
mov
and
pop
adc
cmp
sbb
pop
test
fdivrs
repz
arpl
or
leave
ficompl
push
xchg
sahf
mov
stos
shr
pop
add
add
xor
repz
mov
in
push
add
aam
in
mov
sub
or
pop
and
cmp
repz
dec
lock
leave
xchg
gs
insl
jle
clc
sub
stos
test
push
or
arpl
and
test
xor
dec
cwtl
xchg
ret
inc
xchg
sbb
jbe
scas
inc
mov
and
popa
push
mov
and
test
xchg
push
cmpsl
sbb
cmp
push
sub
xor
shlb
movsl
or
loopne
loop
push
pop
pop
fcompl
mov
pop
push
inc
fnstenv
adc
shll
je
cmpl
push
loopne
add
popa
xchg
sbb
imul
sub
mov
inc
adc
insb
xor
sub
dec
sub
xchg
push
pop
popa
rol
or
gs
jmp
aas
in
mov
add
repz
jne
sbb
lret
or
pop
mov
push
mov
insl
jle
add
pop
pop
jae
mov
hlt
jb
mov
popf
adc
inc
or
pusha
jg
cmp
out
xchg
and
es
and
or
and
call
fcoms
sub
dec
ffreep
or
mov
pop
jecxz
repnz
lods
xor
jno
cmp
xor
ds
sti
push
lods
test
fidivrs
je
or
es
push
fists
cmp
or
orps
adc
jae,pt
cmp
sub
insl
mov
dec
ret
ss
imul
popl
scas
jno
es
out
ret
ljmp
mov
aad
sbb
inc
pop
lds
dec
or
je
xlat
out
stos
jo
mov
out
adc
xor
add
lcall
dec
mov
mov
add
cwtl
jo
cli
jns
movsl
xchg
xchg
jge
jp
dec
inc
mov
in
std
mov
mov
je
ret
xchg
fcoml
scas
aaa
adc
push
movb
lods
ss
mov
out
cli
notl
lds
cs
push
xor
mov
stos
imul
adc
pop
xchg
jnp
rcrb
pop
sub
mov
mov
pusha
mov
add
mov
jmp
jge
popf
ret
bound
xchg
adc
mov
pop
and
xchg
call
andw
jnp
push
cs
inc
jl
jmp
jmp
pop
scas
inc
dec
std
cmp
dec
cmp
xlat
lret
pop
inc
push
xchg
pusha
sbb
sbb
mov
inc
cmp
cltd
call
fisubrl
sbb
repnz
pop
insl
sub
sub
or
repz
xor
bnd
cli
add
rcl
or
sbb
xor
xchg
dec
pop
jl
xor
mov
adc
mov
int
sbb
adc
into
rorb
inc
outsb
lahf
outsl
aam
outsl
dec
adc
shl
pop
adc
shrb
int3
sub
or
pop
andb
retw
test
cmp
repz
outsl
fincstp
insb
popa
xorb
xchg
scas
popf
leave
xchg
jmp
call
jecxz
sub
data16
fsts
cs
pop
je
pop
sbb
aad
lods
bound
mov
xor
push
insb
jns
in
dec
test
inc
imul
data16
push
mov
sbb
setb
and
pop
aaa
push
and
sbb
adc
jecxz
cmc
dec
inc
mull
fbstp
adc
jg
aas
gs
cmp
inc
and
mov
xchg
lcall
sarb
aas
mov
add
mov
xchg
repnz
aam
sarl
sub
in
iret
jg
pop
mov
and
mov
cmp
movsl
add
xor
sbb
sub
leave
push
int3
and
pop
andb
jmp
mov
push
loope
icebp
and
icebp
mov
fnstenv
repz
popf
xchg
xchg
fstl
inc
scas
cltd
pop
cmpsb
xchg
loopne
cmp
inc
push
je
cwtl
ljmp
push
mov
popa
add
sbb
dec
fwait
push
aaa
aas
bound
jg
shll
std
lea
inc
mov
adc
add
ffreep
in
sub
mov
loopne
orl
mov
test
ljmp
or
icebp
jle
sbb
in
sbb
inc
sub
in
movntps
mov
ja
int
sbb
dec
test
loope
into
jecxz
ss
iret
dec
in
ja
xchg
inc
rolb
out
cmc
sbb
jg
cmp
cmp
add
push
mov
adc
mov
sbb
push
mov
mov
dec
ja
rcrb
jle
enter
push
jmp
js
mov
lret
inc
push
mov
adc
mov
push
das
ret
mov
cmp
mov
xor
and
mov
imul
mov
cmc
jle
push
xor
cmp
jmp
xchg
andl
stos
imul
in
xchg
pop
pop
loop
push
fildl
pop
mov
push
push
bound
ret
pushf
daa
push
xchg
sub
xchg
xchg
dec
pop
sbb
pop
fimuls
sub
mov
in
addr16
ja
cmc
mov
lret
sub
test
movsl
xor
lock
and
out
sub
add
push
pushf
mov
incb
dec
mov
push
aad
pop
jns
pop
cltd
divb
dec
int3
mov
js
push
addl
xlat
adc
add
fists
ss
push
popf
rcrl
lods
mov
inc
dec
push
mov
test
sub
mov
ja
mov
jp
inc
jl
pop
fisubl
test
dec
mov
into
shrb
pop
cld
push
gs
idiv
nop
stos
enter
mov
outsl
pop
js
in
and
xchg
adc
ret
mov
shll
xor
inc
iret
lret
sub
cmp
mov
aas
push
popf
xchg
cltd
inc
cmpsl
loopne
pop
pop
into
xorb
dec
mov
popf
fmuls
mov
fistps
cs
and
mov
sbb
xor
jne
pop
dec
cmovs
mov
mov
push
repnz
pop
or
mov
push
add
pushf
xchg
push
mov
loopne
fs
xchg
arpl
in
aad
fwait
lock
inc
inc
rorb
fstps
es
xor
mov
cmp
push
lock
mov
mov
dec
rep
push
xchg
adc
cmpsl
sbb
les
adc
cs
pop
insl
fiadds
mov
movsl
jge
mov
push
mov
mov
and
mov
cmp
icebp
aaa
push
jl
insb
aas
fisubrl
and
fdivrs
dec
xchg
push
xchg
push
cmpsb
insb
mov
adc
add
stos
daa
ret
es
and
dec
sbb
pop
lea
pop
sub
rolb
mov
mov
mov
xchg
arpl
int
adc
repnz
mov
pop
dec
repnz
cmc
imul
jae
mov
cmc
mov
xchg
inc
lret
js
jo
push
push
mov
test
mov
mov
sbb
vrsqrtps
xlat
add
xchg
fistpl
add
vcomisd
xchg
dec
pop
dec
cltd
mov
loopne
fs
test
xchg
push
mov
pop
aas
cmp
shll
push
mov
mov
push
or
inc
pop
dec
mov
in
xchg
pop
arpl
dec
je
push
jb
data16
mov
loop
rcr
daa
push
cmc
dec
fimuls
sub
test
xchg
cmp
pop
cmpl
movsl
mov
sti
insb
sbb
lahf
js
lock
mov
mov
pop
mov
mov
in
in
cmp
dec
push
push
enter
mov
jmp
aaa
sub
xor
jmp
loop
imul
sub
fstps
mov
add
cs
dec
clc
xor
mov
out
push
into
fldenv
sub
mov
jle
loope
leave
cltd
push
aaa
xor
arpl
mov
cwtl
cmpsb
enter
sub
cltd
lods
cwtl
add
ljmp
xor
dec
adc
sbb
divl
jecxz
jns
xchg
fdivp
push
je
aaa
lods
mov
test
push
les
fstps
and
aam
mov
push
xor
aam
cs
jge
bound
xor
mov
fiadds
or
cmpsl
push
and
and
push
orl
aam
xchg
icebp
hlt
mov
sti
mov
pmullw
nop
mov
leave
fistpl
xchg
aad
sti
daa
cmp
sub
test
mov
je
lods
sbb
jle
inc
inc
scas
andl
push
or
shlb
xchg
sbb
adc
or
sub
andb
mov
fdivrl
pusha
insb
cmp
adc
xchg
es
je
jb
mov
jne
adcl
push
mov
lock
subl
ds
lret
mov
cmp
add
cmpsb
es
out
mov
adc
inc
pop
hlt
in
jbe
shl
cmp
in
sahf
jl
push
loop
ret
sub
mov
cmpsb
jno
mov
cmp
lock
cmp
scas
in
cmp
adc
push
leave
fwait
into
and
dec
pop
mov
std
fucomi
jo
movsl
cmp
sbb
test
sub
mov
add
sbb
imul
add
mov
mov
sbb
in
mov
cwtl
out
and
or
pop
jmp
add
xor
jne
dec
repz
push
sub
sub
push
lods
xor
xchg
jo
outsb
inc
or
les
repz
fistpl
sbb
loop
out
jbe
cmp
stc
nop
cmp
and
sub
add
into
adc
ds
sti
push
adc
cwtl
push
popl
insl
mov
lret
out
cmpsl
mov
cmpsb
inc
dec
repnz
add
lahf
hlt
xchg
mov
test
fwait
push
push
mov
xchg
add
ret
ss
stos
mov
pop
dec
add
adc
add
les
into
add
push
aam
add
mov
push
stos
repz
sbb
cmp
add
add
inc
std
sbb
adc
hlt
sbbb
jo
jb
xchg
inc
das
aaa
push
in
mov
cmp
push
jecxz
push
shll
or
shlb
xor
gs
add
mov
in
outsl
sub
ds
push
xlat
sbb
mov
xor
mov
push
dec
and
push
daa
or
sub
bound
imul
repnz
or
adc
add
sbb
pop
faddl
fbstp
loopne
add
je
pop
xchg
mov
iret
jb
inc
xchg
nop
inc
insb
movsb
imul
adc
ss
insb
xor
cmpsb
pop
sub
and
cmp
clc
lds
insb
or
aas
mov
cmp
rcrb
sbb
fnstenv
jp
jmp
bound
aad
or
pop
mov
push
repz
pop
in
push
in
sub
or
stos
jecxz
push
push
cli
fwait
loop
push
in
jmp
js
mov
or
mov
popa
testl
cmpsl
inc
pushf
int
iret
mov
jle
iret
push
int3
cs
mov
leave
dec
pop
gs
pop
or
das
sub
jo
insl
jg
fldl
sub
daa
sbb
vphadduwd
pop
lcall
cmc
jl
jecxz
aad
dec
movsb
add
rcl
xchg
ret
divb
lahf
jle
nop
addr16
nop
sbb
adc
outsb
pushf
cmp
jge
push
imul
imul
dec
or
cmpsl
or
lods
mov
push
es
pop
lds
cmp
test
in
cmp
loope
jge
test
cmp
and
sub
pop
sbb
pop
adcl
lcall
jns
loope
outsl
aad
jns
popf
mov
mov
rclb
daa
mov
lcall
nop
inc
push
jb
lods
test
jns
and
jno
xchg
jge
sub
test
aad
inc
pop
xor
jle
pop
popa
push
nop
pop
aaa
fs
jae
jne
pop
xchg
add
data16
scas
adc
mov
sub
das
add
mov
inc
mov
adc
pop
js
lods
xor
loopne
xchg
std
push
ljmp
sub
add
xchg
sub
cltd
add
sti
dec
push
stos
pop
xchg
negb
sbb
xchg
lea
lock
mov
in
sub
aas
nop
adc
and
icebp
lods
repnz
xor
adc
fwait
push
dec
xchg
fsubl
je
out
pushf
sbb
xchg
in
pop
push
dec
mov
imul
jns
xchg
fsub
lcall
xchg
push
scas
jg
add
pop
imul
inc
leave
push
jae
stc
ljmp
sub
das
fxch
dec
jb
cld
push
inc
out
cmp
sub
pop
out
fdivp
cmp
mov
test
cmc
dec
in
in
add
rcr
and
jp
push
xor
add
pop
adc
sarl
mov
test
test
jp
jle
xchg
and
jb
mov
or
jne
push
jg
inc
ljmp
shll
sbb
jns
mov
push
lret
adc
loope
imul
orb
call
xchg
inc
add
pop
mov
and
push
jmp
icebp
fs
jnp
sbb
movsl
je
mov
adc
popf
lds
mov
pop
push
enter
pop
mov
das
mov
pop
pop
cmpsl
bound
pusha
and
dec
notl
fmul
mov
clc
addr16
daa
mov
add
loopne
js
sbb
mov
mov
dec
sahf
or
aad
adc
jmp
add
inc
loop
pop
xchg
imul
repz
cmpsb
pop
pop
arpl
fdivp
pusha
and
ret
sarb
fisttpll
push
cmc
sbb
shll
loope
add
pop
test
subl
sub
pusha
scas
jp
pop
cmpl
pusha
add
sbb
pop
pop
dec
dec
xor
add
enter
shll
ljmp
movsl
mov
ret
dec
jl
push
es
lds
inc
nop
pop
dec
push
xchg
push
cmp
add
clc
dec
subb
and
aas
daa
sub
sub
and
mov
push
jp
push
pop
mov
jmp
ja
ds
xorb
lods
test
cmc
ret
sbb
inc
outsl
mov
popf
gs
sub
xchg
ss
push
mov
jg
popl
in
in
ljmp
adc
cmp
sarl
aaa
push
cwtl
aam
cmp
mov
ss
push
jae
icebp
sbb
xchg
ret
js
repz
cmp
pop
ss
pop
push
dec
pop
dec
stos
cmpsl
dec
outsb
mov
rep
mov
xor
mov
lcall
clc
lock
je
mov
sbb
fcom
cs
push
aas
popa
jg
xchg
jg
int3
jnp
lahf
bound
loop
adc
mov
insb
pop
incl
es
imul
jle
xchg
mov
inc
pop
das
jno
js
mov
ret
sub
gs
and
inc
out
xor
pop
sub
push
xchg
push
rcl
cmp
pusha
es
aad
imul
add
scas
roll
mov
aad
imul
fbld
lods
pop
popa
icebp
mov
sbb
mov
cltd
sbb
loope
repnz
push
fsub
ret
pop
imul
inc
inc
cmpsl
les
fimull
mov
pop
jne
inc
fsubrs
mov
mov
jns
sub
mov
mov
xor
lahf
movsb
xchg
lods
mov
mov
adc
out
pushf
pop
jne
and
cltd
inc
add
ss
cmc
xor
push
pop
insb
aas
ret
lods
mov
nop
push
push
loopne
xchg
add
jl
dec
xchg
xchg
adc
or
int
jg
xchg
adc
fidivs
pushf
shlb
mov
popf
xor
das
pusha
fldenv
pop
sub
clc
jg
enter
pop
lret
mov
jl
in
addr16
and
add
sub
jecxz
adc
cs
or
cmp
scas
dec
in
clc
daa
dec
mov
inc
into
call
ret
jl
std
outsb
dec
call
sub
in
cmpsl
mov
push
or
popf
push
sbb
and
sub
addr16
and
stos
xorb
mov
mov
xor
add
mull
sub
std
xorb
cld
push
enter
shlb
das
addl
xchg
dec
mov
inc
nop
push
jmp
es
jp
in
fsts
ss
movsb
int3
mov
pushf
stos
and
cmp
pop
aaa
stos
out
or
sub
adc
mov
stos
lods
jae
incb
lahf
sarb
jns
cmp
mov
fldenv
idiv
jne
sub
xor
push
mov
pop
adc
push
fimuls
ret
add
push
das
insb
mov
shlb
imull
insb
fmuls
rorb
in
and
lods
push
fistpl
sub
sti
rolb
call
or
cmc
jge
outsl
fimull
xchg
mov
in
frndint
or
mov
cwtl
addr16
int
out
fbld
fwait
iret
add
hlt
ljmp
adc
adc
pushf
jp
or
or
jle
xor
scas
out
aas
or
andl
mov
jmp
or
sub
xor
les
jo
push
fmuls
mov
xchg
adc
fsubrp
out
push
sbb
push
lock
add
imul
mov
addl
aas
add
scas
lcall
jnp
lret
sub
fs
aam
push
add
out
push
out
jns
in
mov
out
mov
xor
push
test
jmp
sbbl
sti
scas
es
mov
cmpsl
pop
scas
fistpll
push
aam
sbb
and
mov
or
ljmp
sub
jle
cmp
arpl
popf
jp
data16
inc
sub
out
fcomps
insb
mov
pusha
push
negb
sub
jne
mov
push
add
nop
lahf
es
mov
psubsw
ficoml
daa
fsub
ret
sahf
push
ret
pushf
lret
insl
int
push
push
and
je
cmc
pop
test
stos
mov
or
or
pop
out
test
test
xchg
shll
mov
int
adc
test
pop
lods
jo
inc
jns
or
faddl
mov
js
lea
adc
fwait
pop
or
addr16
sbb
add
les
in
stc
pop
and
das
out
mov
sub
sti
push
mov
or
rorl
pusha
adc
mov
push
imul
add
mov
push
imul
push
sbb
sub
aaa
jge
outsl
ja
adc
push
and
push
shrl
nop
push
enter
cmp
cmp
je,pn
mov
xchg
cmp
inc
jae
sbb
clc
enter
test
xchg
lcall
clc
jne
lods
inc
push
outsl
cmp
add
jns
imul
adc
mov
andb
cmp
or
pop
data16
mov
inc
insl
jbe
addl
imul
nop
jmp
mov
arpl
gs
adc
mov
bound
add
jmp
out
cmpsb
jle
mov
cli
jb
add
xchg
ljmp
fdivrl
arpl
pusha
fsub
test
dec
cld
push
inc
mov
cmp
cmp
and
sbb
aas
dec
or
das
sbb
pop
lods
jns
cwtl
fdivp
test
pop
lea
nop
pop
sbb
mulb
ret
into
sarl
ljmp
mov
mov
inc
or
test
xchg
pop
out
mov
mov
jno
xchg
jb
mov
add
movsl
push
imul
sbb
dec
cmp
adc
xor
add
sbb
mov
sarb
sbb
push
push
push
or
or
outsl
cmp
mov
sub
das
out
rclb
jge
or
xor
adc
mov
inc
hlt
cmc
sahf
xchg
sub
sub
cmp
jl
jns
popf
jno
xlat
popf
mov
xchg
fdiv
js
xchg
mov
cltd
cltd
jno
dec
cmp
fistps
popf
inc
and
es
es
inc
fstps
stc
sahf
imul
xchg
xor
xchg
push
ret
fiadds
jecxz
inc
inc
mov
cmp
xor
sbb
out
xchg
aam
adc
pop
lahf
aaa
outsl
adc
add
movsb
sub
jl
push
inc
imul
movsb
mov
imul
jmp
jmp
jg
jne
iret
sbb
push
push
mov
xlat
mov
js
push
popf
sbb
add
jg
xchg
mov
mov
mov
movsb
aam
pop
in
jae
mov
push
xor
mov
inc
inc
fisttps
mov
dec
pop
mov
out
lock
xchg
stc
jge
adc
sahf
push
adc
and
fs
push
cmp
mov
and
xor
xor
sbb
sahf
mov
cmp
aas
subb
mulb
and
xlat
adc
and
ljmp
sub
scas
jnp
leave
cmpsl
clc
and
pop
cmp
inc
subb
movl
enter
ds
lahf
push
stc
in
icebp
mov
cwtl
mov
push
add
or
mov
or
push
xor
dec
scas
xchg
and
xor
adc
add
movsl
jg
jnp
sub
loopne
cmp
in
lods
sub
dec
jb
cmp
pop
xchg
mov
fistpll
push
jle
pop
repnz
sub
jg
sub
into
bound
xlat
lret
mov
xlat
scas
insl
jp
mov
add
popf
push
mov
mov
jge
lcall
dec
ret
cmpsb
jmp
repnz
loopne
es
xchg
stc
mov
mov
cmp
insl
pop
sub
inc
test
ret
out
je
ret
movsb
jecxz
xchg
mov
fs
test
fs
shll
outsl
rorl
hlt
call
pop
push
shll
push
aam
out
shlb
fimuls
push
lea
js
mov
insl
or
shll
mov
xlat
cmc
insl
ss
xor
test
test
lods
cmpsb
mov
je
inc
cwtl
add
out
mov
push
pop
pop
dec
cmpl
movsb
cld
add
sub
lret
push
pushf
in
bound
subl
clc
test
dec
scas
inc
in
stos
cmpsl
pop
pop
sbb
repnz
ds
icebp
add
jle
into
xor
fiadds
sahf
dec
mov
addr16
cmp
sbb
sub
pop
int3
mov
push
outsl
adc
out
dec
add
scas
lcall
xlat
dec
int
jl
pop
add
mov
cmp
cmp
hlt
jo
jecxz
std
imul
xchg
jae
scas
ret
loope
jno
fs
test
ret
lock
and
aas
or
jle
xor
add
aas
stos
outsb
test
pop
jmp
lods
mov
jecxz
lret
incb
add
jns
mov
and
sbb
cmpsb
inc
add
aam
push
into
xchg
xchg
sbb
xchg
ss
sub
adc
shlb
xorl
loopne
inc
icebp
xchg
cmp
insb
mov
cmp
cli
lahf
call
xchg
sbb
inc
int3
mov
js
sbb
mov
and
orb
pop
jge
cmp
mov
jg
mov
or
jecxz
fisubs
cmc
jno
lock
sub
hlt
cli
out
push
sbb
adc
push
xor
rcrl
andb
stos
dec
bound
repz
cmp
push
cwtl
mov
sahf
and
lea
imul
add
pop
iret
lahf
cmp
inc
loopne
sbb
push
lcall
xor
lea
sub
out
inc
push
xchg
mov
push
mov
cmp
hlt
cmc
out
cmp
or
into
add
fcompl
icebp
jmp
mov
sbb
decl
lds
xor
fcom
or
jge
jne
fwait
or
fcmovnb
in
mov
mov
out
lret
and
adc
aad
adcb
out
aam
jns
jl
in
cmp
cmp
gs
aaa
push
push
add
cmp
icebp
loop
popf
xchg
mov
pushf
mov
test
or
shll
xor
cmp
and
lret
ret
lods
and
sub
scas
lods
sub
mov
adc
cmpsl
sbb
vpxor
test
int3
pop
in
popf
enter
loope
sbb
aam
int3
insb
cmc
cmp
cmp
jns
push
sbb
dec
xchg
pop
adc
sbb
mov
sbb
dec
pop
test
clc
fldcw
test
dec
mov
mov
add
ja
fwait
xchg
adc
xor
mov
nop
fsubl
sahf
lahf
daa
leave
dec
dec
fbld
add
fsubs
sbb
clc
in
je
fildll
dec
adc
cmp
push
add
cld
mov
jo
call
adc
enter
js
push
and
push
je
jb
addr16
pop
mov
add
and
add
xor
jecxz
out
sbb
scas
xchg
xchg
xchg
or
jno
xchg
sbbl
lcall
pop
jbe
lret
cltd
in
sub
mov
dec
movsb
mov
in
clc
xor
xchg
test
mov
enter
or
xchg
mov
pop
insl
lret
mov
dec
mov
dec
repnz
mov
stc
repz
sahf
loopne
lahf
sbb
mov
imul
or
xor
mov
add
mov
sub
dec
or
xlat
jns
lret
cmpsb
bound
sbb
push
jns
addr16
gs
or
shlb
xor
stos
sbb
and
pop
call
fistpl
sahf
mov
cmp
fcoml
shrb
mov
mov
enter
sub
ljmp
scas
and
jns
lds
pushf
cmp
jne
jmp
jbe
fnstcw
scas
and
daa
cld
out
scas
sub
mov
andb
mov
dec
xchg
mov
lahf
fstps
andl
ss
scas
lea
mov
sbb
ficompl
mov
insl
inc
shll
xor
pop
insl
into
ds
jle
pop
in
mov
and
enter
and
and
iret
popa
dec
sub
cmp
sbb
mov
sbbb
lods
jmp
inc
and
les
movb
fwait
mov
sub
cmp
ss
ja
jnp
xor
inc
xchg
sbb
jl
mov
mov
in
sub
sbb
dec
loop
mov
jns
pop
jmp
notb
inc
imul
shll
scas
lea
cli
lahf
pop
lock
in
mov
lcall
faddl
decl
movsb
inc
push
mov
cmp
pop
cmp
sbb
mov
nop
cmpsl
dec
mov
ljmp
loopne
and
mov
je
dec
repz
sbb
or
stc
fistps
push
add
cmpsb
lds
les
adc
ss
icebp
lea
fsubs
aas
sbbw
sbb
fnstenv
aam
push
pop
add
jge
pop
pop
cltd
and
jbe
sbb
xchg
test
xchg
adc
cmpsl
pop
sbb
xchg
das
aas
sbb
notb
push
pop
xchg
xchg
mov
int
cmp
ljmp
add
sub
sub
mov
xor
arpl
outsl
cmp
rorl
push
lahf
bound
add
and
sub
mov
sub
fidivl
cld
fisubl
pop
xor
imul
daa
xchg
mov
push
daa
es
dec
dec
mov
pop
jne
or
inc
movsl
loop
jns
sub
push
outsb
mov
daa
mov
pop
fstp
mov
hlt
hlt
push
mov
lret
imul
leave
xor
jmp
xor
jp
dec
pop
dec
xlat
dec
sub
fisttpll
repnz
mov
cs
add
imul
and
jmp
jp
int3
out
pop
jae
push
mov
sub
xchg
add
inc
ja
push
sub
push
push
test
cltd
out
mov
jg
inc
int
or
mov
sub
sub
pop
xor
fldl
cld
and
insl
cli
xchg
je
test
insl
popf
and
mov
xchg
sub
dec
mov
lret
dec
adc
pop
sub
and
clc
adcb
scas
adcb
push
pop
dec
xor
popa
outsl
bound
mov
xor
push
std
hlt
add
or
jnp
xchg
jns
adc
pushf
push
cmp
out
ret
jmp
push
mov
push
loop
mov
adc
jg
fldcw
or
pop
pop
popf
ja
push
mov
idivl
sbb
mov
fsubl
sub
xor
das
xchg
ljmp
push
push
cmp
pop
fdivs
outsl
fdivs
xchg
hlt
addr16
imul
movsl
stc
cmp
ja
and
dec
mov
jg
push
sbb
or
cmp
fcoms
mov
jnp
xorb
cmpsl
xchg
pop
loope
mov
jle
pop
fisubs
imul
jle
xor
clc
insl
cld
xchg
push
push
cmp
push
pop
jnp
mov
fsubs
or
mov
addr16
fimull
imul
ss
sub
xchg
dec
mov
adc
movb
and
add
xchg
insb
pop
push
adcl
inc
mov
es
xchg
sbb
jmp
sub
fistpll
aaa
xchg
test
xor
sub
fidivrs
stc
pop
sbb
sub
inc
jnp
scas
mov
mov
push
pop
add
xchg
into
rcr
aaa
mov
pushf
mov
scas
repz
mov
mov
sub
outsl
mov
inc
mov
mov
cld
inc
mov
mov
lods
cmp
cmp
xlat
aas
fistpll
sahf
cmpsb
cmpsl
mov
pop
cmpb
pop
cmp
adc
lock
dec
sub
mov
lds
in
data16
adc
mov
jp
fadd
push
and
and
add
jae
xchg
leave
aas
jmp
mov
sti
adc
loopne
cmc
cmp
jno
xchg
loope
lea
stos
movsl
sbb
cmpsl
mov
jge
inc
je
push
cmp
insl
hlt
dec
sbb
cld
mov
push
sbb
push
add
dec
jmp
mov
pop
and
aaa
sbb
pop
adc
pop
jo
movswl
add
mov
gs
pushf
in
pop
sbb
xchg
push
jecxz
mov
xchg
out
pop
and
gs
shrl
arpl
test
lret
lds
add
push
adc
insl
sub
sarl
into
cmpl
lahf
dec
lret
mov
pop
mov
push
dec
dec
ss
popf
dec
out
xchg
push
out
aas
popf
fcmovne
add
addb
push
nop
cmpsb
adc
repnz
pop
jbe
cmpsb
jp
sbb
in
in
xchg
cmp
mov
ds
shll
sub
fcoml
sbb
scas
mov
sub
sqrtps
test
dec
xchg
addr16
rolb
out
call
dec
mov
inc
mov
sub
std
and
sub
push
mov
scas
push
int3
ret
adc
xor
lcall
xor
fwait
arpl
scas
test
hlt
test
imul
adc
dec
popa
arpl
cmp
mov
jns
mov
int
xchg
and
dec
mov
inc
insb
pop
cmp
push
pop
mov
fsubrs
pop
std
xchg
push
adc
push
outsb
jmp
ja
hlt
jg
fstpl
ret
repnz
cmp
scas
lock
mov
repnz
ljmp
add
mov
inc
aas
cmp
add
je
sub
frstor
mov
mov
dec
cmpb
cmpsl
pop
mov
shlb
jp
out
xor
xor
into
xchg
icebp
lods
cltd
sbb
xchg
mov
add
rcrb
sbb
sbb
cmp
hlt
sub
sbb
jmp
sub
mov
xor
push
repz
outsl
mov
jl
into
sbb
sub
js
xchg
pop
mov
aam
mov
lds
das
movsl
dec
arpl
movsb
push
mov
scas
adc
jne
mov
push
cmp
jo
ljmp
add
pushf
xchg
push
dec
ss
sbb
xchg
and
dec
cmp
jae
lret
cs
and
ret
loop
loop
daa
shrb
ja
rorb
clc
rorb
and
aas
pop
stc
sti
shlb
fistps
sub
mov
xchg
hlt
or
movl
jl
add
jge
push
add
stos
data16
or
sub
fisubrl
aad
add
out
cmpsl
push
pop
sti
push
xor
cmp
lret
mov
sbb
or
nop
jecxz
lods
sbb
and
int
mov
mov
data16
sti
adc
out
sbb
out
pop
mov
ret
sbb
adc
mov
daa
arpl
int3
sbb
mov
pop
pop
or
cmp
dec
lcall
or
push
xchg
fs
push
jae
dec
inc
xchg
xor
in
push
sub
gs
icebp
mov
mov
lods
fcomi
outsl
insb
xchg
pop
imul
ljmp
xchg
xor
insb
jg
dec
insl
fnsave
add
mov
fists
cmp
popa
mov
lahf
or
das
or
iret
cmpsl
xchg
sub
ret
lcall
sbbb
push
mov
xchg
in
xchg
std
test
mov
jle
push
dec
lret
shr
xchg
cmpsl
lret
jo
dec
inc
loop
xchg
test
testl
sbb
test
fistpl
dec
xor
add
repnz
adc
arpl
adc
js
jle
cmp
inc
movsl
sbbb
test
scas
xor
adc
sub
outsl
jns
or
test
pushf
pusha
push
fstpt
and
mov
insb
sub
or
mov
mov
aaa
inc
jp
and
push
jecxz
mov
xchg
push
les
mov
and
dec
jnp
cld
cmpl
xor
or
shlb
stc
and
fcomps
add
test
push
sahf
out
dec
repz
into
pop
repz
call
xchg
jns
leave
pushf
push
dec
cld
and
loopne
fstpt
mov
je
in
outsl
les
arpl
ss
out
test
adc
call
jbe
mov
jae
jno
testb
jge
ret
lret
pop
ret
lea
or
out
insl
mov
rol
mov
fsubl
or
outsl
mov
ljmp
add
dec
adc
pop
xor
dec
xchg
cltd
jne
mov
lcall
adc
or
push
adcl
dec
movsl
es
mov
mov
mov
lods
loope
push
insl
mov
les
xor
shrl
addb
add
xchg
sbb
lea
rdtsc
je
hlt
js
mov
xor
movsl
inc
xor
add
divl
test
loop
inc
mov
fmuls
mov
push
cmp
arpl
pop
push
clc
mov
or
push
jp
mov
fiaddl
cmp
push
push
jno
cli
cmp
dec
test
dec
lds
lret
add
push
test
into
add
lds
sbb
in
out
xchg
push
pusha
inc
pusha
popa
adc
insl
bound
les
mov
shlb
fidivs
testl
lea
lcall
stos
aaa
imul
xor
jecxz
cmp
imul
inc
data16
ds
cmp
fadds
scas
add
dec
cltd
scas
mov
dec
sub
imul
test
enter
dec
mov
adc
popa
imul
jns
fadds
mov
push
push
jle
clc
bound
jg
jg
add
icebp
mov
sbb
dec
pushf
mov
aas
sub
in
fmuls
scas
jl
cmpl
dec
test
push
std
inc
pop
and
cld
xor
push
xor
sbb
jl
fcmovnbe
scas
xchg
hlt
mov
in
out
mov
mov
and
push
aam
aas
push
stos
in
sahf
or
nop
pusha
xor
std
dec
aad
jecxz
roll
jne
jg
mov
add
les
xchg
mov
test
lahf
push
xchg
aad
and
adc
mov
pop
xchg
sub
pop
fwait
pop
pop
mov
fcompl
aad
cmp
cmp
jbe
jg
test
cmpsb
push
mov
test
addr16
sbb
xor
aad
and
int3
pop
cmpsb
mov
add
xor
pop
lods
add
sub
int3
cmpsl
adc
inc
in
pop
jmp
or
ss
hlt
test
pop
decl
jne
repnz
sub
test
push
or
call
fcoml
mov
and
cli
or
xor
pusha
jge
pushf
jmp
dec
in
mov
jnp
outsb
or
lds
lahf
or
push
cmpsl
sbb
insl
lods
xchg
outsl
cmp
sub
xor
dec
mov
jnp
into
stos
stc
aam
je
cmp
jmp
gs
scas
lahf
iret
mov
in
cmpsl
add
lock
push
jo
enter
pop
xchg
std
rcl
and
and
pop
enter
leave
mov
or
pop
inc
add
push
push
add
inc
fmuls
int3
shrb
test
orb
jle
sbb
lahf
inc
out
pop
je
mov
dec
imul
shlb
out
mov
mov
xchg
out
adc
jns
mov
or
xor
cmpsb
xchg
xor
es
stos
and
mov
lcallw
adc
sti
into
mov
stos
mov
dec
cmc
inc
jno
fistl
dec
clc
test
cmp
rcrb
pop
adc
mov
scas
add
cmc
pmaxub
add
jne
dec
inc
fidivrl
aas
xchg
push
jecxz
popa
fcmovbe
fxam
xor
repnz
test
aad
mov
inc
rcrl
dec
or
pushf
dec
mov
loope
dec
sbb
in
clc
test
sarb
cmp
jl
mov
jns
shl
les
jp
jmp
popf
cmp
sahf
adc
push
or
rorb
mov
mov
sar
pop
outsb
shll
pop
inc
jnp
jp
cmpb
dec
jmp
lods
out
rcr
fisttpl
ja
out
imul
aas
decb
cmp
rcr
lds
ljmp
lret
iret
mov
movsl
loop
fidivrs
push
adc
not
pop
vminss
in
repz
adc
push
xor
movsl
or
jb
sub
rcll
inc
jnp
aas
add
fnsave
mov
lods
jnp
es
mov
inc
xor
icebp
in
out
xor
jecxz
sbb
xor
test
adc
imul
push
xchg
orl
outsb
or
decl
mov
in
repz
leave
inc
in
clc
add
jne
jl
dec
cmc
mov
push
ds
jecxz
push
push
jle
out
add
lock
add
lods
stc
je
shl
cld
pop
stos
or
incb
adc
cs
movsb
add
jns
mov
lret
test
lea
push
sub
push
push
sar
lea
or
cmp
call
inc
mov
push
sub
fistpll
popa
nop
cmc
aaa
aad
xchg
repz
outsb
xor
or
lea
shr
repnz
shr
gs
rorb
fisttps
adc
mov
scas
sbb
adcl
jecxz
cs
or
sbb
add
add
cltd
dec
jo
push
mov
dec
inc
mov
inc
push
fnstenv
cmp
push
add
cmp
xchg
mov
arpl
les
jb
and
out
dec
and
cmc
mov
cmpsl
jmp
cmpsl
gs
mull
sub
xlat
fistps
sbb
mov
insl
ds
push
test
dec
mov
dec
mov
mov
insb
test
push
jge
fimull
mov
add
and
mov
ret
pop
inc
hlt
xchg
lret
sbb
or
enter
movsl
ret
xlat
lock
imul
adc
cmp
add
mov
aaa
lahf
pop
outsl
xor
pop
fwait
mov
into
push
je
iret
xchg
mov
mov
je
out
xchg
dec
jle
dec
pop
mov
inc
je
inc
cmc
out
mov
fiadds
movsb
fcompl
arpl
jle
jle
mov
dec
jne
mov
les
cmp
jmp
insl
and
add
add
sub
jnp
loop
loope
movsb
scas
jbe
subl
lods
loop
adc
out
mov
pop
cmp
loop
or
shll
xor
es
adc
outsb
aad
lahf
loop
lcall
repnz
push
xchg
or
xchg
gs
ret
xchg
xlat
pop
fistpl
sbb
stos
mov
xchg
cmp
adc
mov
sub
std
xor
push
mov
pop
pop
icebp
inc
cmp
jno
cmpsl
sub
pop
add
jle
mov
mov
jg
pop
or
fildll
jecxz
sarl
pop
ja
aad
jmp
jno
inc
mov
dec
cwtl
lcall
icebp
pop
outsb
scas
loopne
jmp
pop
insl
mov
cltd
pop
pop
cwtl
andl
repz
inc
sbbl
orl
ficoml
mov
hlt
inc
sub
scas
sbb
in
jo
and
in
xchg
push
mov
adc
fs
inc
arpl
inc
add
lahf
xor
pop
mov
fidivs
stc
inc
xchg
and
push
mov
mov
nop
jmp
lcall
mov
mov
lds
fisttpll
pop
pusha
xchg
xchg
adc
test
cld
scas
jp
and
cli
and
dec
int
fcoml
inc
insb
mov
cmpsb
jbe
and
mov
pop
negb
xlat
lods
aam
outsl
enter
lock
mov
cmp
xor
pop
jo
test
jbe
stos
mov
cwtl
adc
xor
pop
jle
pop
mov
fiadds
dec
aas
and
jno
aad
dec
lds
arpl
cmp
inc
in
insl
dec
xor
sarb
xchg
clc
mov
pop
stc
mov
enter
sarl
mov
push
push
dec
test
test
popa
sbb
dec
mov
ret
cmp
movsb
push
mov
pop
xor
fisubl
xor
xlat
mov
aad
inc
mov
pop
mov
mov
outsl
xor
pop
inc
insb
aad
aam
lds
out
cmp
or
ficoml
loope
mov
xor
out
lds
mov
or
bnd
clc
or
imulb
adc
into
inc
push
imul
push
mov
or
ret
mov
js
sbb
aas
xor
ret
jno
adc
icebp
mov
in
xchg
cmpsb
lahf
mov
incb
aaa
xchg
and
xchg
icebp
push
push
insb
adc
xchg
aas
fcmovnb
rol
xchg
push
and
mov
arpl
sarl
dec
fists
xchg
adc
idivl
or
jae
mov
jns
xchg
int3
xor
lods
daa
xchg
lret
mov
or
xlat
fcomip
cmp
rorb
imul
or
inc
sbbb
push
aam
adc
sub
or
mov
unpcklps
in
lds
push
push
sub
mov
inc
out
test
fsubr
stc
rcll
pop
cltd
cmp
jb
movsl
and
mov
pop
xchg
sbb
fnstenv
and
outsb
adc
sbb
push
xchg
pop
arpl
xlat
es
dec
data16
fmull
mov
mov
dec
mov
add
add
pop
call
adc
pop
jecxz
ljmp
cli
sbb
and
sarl
xor
xchg
js
lods
push
loop
scas
pop
jle
inc
je
mov
mulb
mov
lahf
mov
outsl
jg
enter
stos
jge
cmpsb
fisubrl
push
jno
mov
push
lods
js
movsb
cmpsl
pop
in
ljmp
dec
cli
sahf
divl
sarb
ss
xchg
dec
inc
or
add
iret
cld
pusha
push
insb
dec
xchg
push
cltd
xchg
stc
cmp
pop
scas
xchg
add
aam
xor
pop
pop
loopne
push
xchg
pusha
pushf
icebp
xchg
es
xor
jne
mov
sub
xor
mov
push
xor
out
call
lcall
xchg
pop
mov
jge
sub
push
mov
aam
rcrb
stos
mov
stos
cmp
sbbb
pop
jmp
unpckhps
and
sbb
dec
loope
sbb
xor
cbtw
movsb
lret
and
xor
sub
ror
fs
xchg
inc
in
mov
add
jge
pop
addb
cmp
aad
aad
hlt
lret
fmul
lods
or
adcl
adc
mov
cmp
fcompl
jg
mov
ficoms
fsubrs
push
mov
sbb
or
jecxz
insl
xor
mov
stos
sub
push
push
cli
scas
adc
xchg
xor
pop
jl
cmp
mov
stc
gs
out
in
mov
enter
rcll
rorb
aaa
gs
mov
aas
xor
sub
out
nop
hlt
sub
movlps
push
loopne
cs
dec
ljmp
mov
push
je
pop
jecxz
or
repz
mov
imul
cmp
fcomps
or
inc
in
or
clc
sbb
daa
js
and
pushf
lock
xor
add
sti
out
ds
xchg
test
shl
and
mov
sbb
xor
push
mov
mov
pop
ljmp
cs
fsubl
jo
shr
add
aaa
and
outsb
jb
sbb
jmp
sbbb
mov
pusha
pop
testb
nop
cmovbe
lds
loopne
add
or
gs
cmp
inc
sbb
lahf
in
pop
inc
inc
push
movsl
cwtl
scas
pop
ljmp
ljmp
int
jb
mov
in
jecxz
shl
into
jno
test
lret
lret
or
addr16
mov
and
pop
shlb
jnp
mov
mov
add
mov
mov
push
mov
lret
test
pop
fmull
mov
jecxz
adcb
mov
cmpsb
jg
fldenv
sub
scas
mov
fnstenv
std
aad
sub
sbb
rol
sti
xor
jbe
mov
mov
lods
jbe
mov
fisubrl
aas
dec
jae
mov
mov
xlat
or
add
test
ds
inc
mov
push
into
adc
stc
xlat
sbb
jne
xchg
jns
testl
adc
inc
hlt
add
out
cwtl
sbb
fwait
mov
adc
inc
outsb
mov
dec
dec
push
cmp
or
lret
adc
lret
outsl
adc
sub
fdivp
out
adc
add
add
mov
pop
mov
xchg
add
loope
push
push
filds
addr16
test
in
int
mov
test
xchg
add
gs
mov
pop
xor
adc
and
jb
repz
ljmp
mov
or
jg
insl
negb
divb
inc
mov
xor
mov
lea
push
jo
cmp
add
enter
test
push
xchg
push
xor
rcrl
in
testb
xor
push
sub
jb
call
pop
add
repz
sub
inc
je
mov
mov
sarb
push
sub
push
test
lock
push
inc
add
jp
pushf
cwtl
insb
inc
cmp
mov
fidivl
cmp
in
xor
in
jecxz
repnz
pop
rolb
push
les
inc
inc
imul
mov
add
or
enter
stc
or
jo
lods
pop
jae
pop
test
aaa
cmp
outsb
push
aam
add
add
cmp
push
mov
icebp
int
mov
push
dec
jns
into
xchg
test
inc
and
push
ret
jmp
mov
adc
imul
add
xchg
mov
add
pop
jbe
xor
sub
gs
out
add
xchg
mov
aaa
rcrb
mov
sbb
and
cmp
gs
xchg
fsts
mov
xor
jno
xchg
pop
xorb
dec
int
enter
bound
imul
sub
pop
and
mov
cmp
pop
dec
push
mov
xor
mov
inc
lds
hlt
cwtl
cmp
inc
into
out
adc
xor
xchg
mov
dec
js
mov
add
ljmp
cmpsl
shll
cltd
aad
dec
xchg
aaa
pop
mov
sub
jle
cmpsl
int3
std
mov
jecxz
out
dec
fs
das
push
mov
shlb
sbb
mov
aaa
jg
cmp
loope
sbb
mov
dec
lods
loopne
pusha
gs
orl
mov
bound
mov
lcall
add
inc
gs
lret
ret
mov
mov
mov
cwtl
pop
jae
xor
ljmp
dec
inc
fcmove
inc
or
aaa
push
push
pop
mov
pop
push
into
mov
hlt
out
sbb
jg
and
push
xchg
and
mov
mov
out
sbb
test
scas
outsl
lcall
notb
sahf
inc
loope
push
mov
pushf
ss
aas
jb
sbb
and
sub
daa
into
into
jmp
arpl
pop
std
push
rorb
vmovntps
mov
aam
xchg
das
xorl
or
xor
lahf
cmp
jg
mov
and
test
outsb
ss
les
ljmp
mov
subl
mov
outsl
or
enter
sbb
lea
in
clc
negb
dec
pop
mov
xchg
in
xchg
lds
mov
pushf
cmpsl
dec
or
pusha
cwtl
adc
mov
movsb
fildl
xor
aam
jns
rcll
pop
jb
jnp
pushf
xor
inc
sub
adc
push
insl
mov
enter
cmp
dec
xor
pop
outsb
mov
outsl
adc
sbb
imul
test
into
into
lahf
pop
xchg
aaa
mov
lock
or
call
sbb
dec
and
pop
mov
push
movsb
push
leave
sbb
std
inc
sub
xchg
sub
test
insb
adc
and
adc
test
cli
push
push
mov
cli
insb
jg
xchg
stos
mov
icebp
call
and
cs
jecxz
push
mov
xchg
sbb
mov
mov
adc
xchg
imul
sub
and
daa
mov
mov
stc
push
ljmp
sbb
sbb
repz
pop
mov
cli
jbe
cmpsb
outsb
addr16
out
aas
xor
loop
fisubrl
ss
cmp
adc
jecxz
mov
pop
pop
cmpb
out
insb
shlb
out
dec
lret
xor
dec
in
add
lahf
dec
pop
dec
scas
jnp
xor
dec
outsb
cmpsb
mov
jo
mov
lods
pusha
xchg
mov
push
jne
cmp
repz
jl
dec
xor
push
test
jbe
push
dec
sub
mov
addr16
xchg
imul
imul
fwait
mov
insb
jne
in
mov
mov
or
jmp
leave
xchg
jno
pop
pop
rcll
daa
push
pop
pop
jge
xor
sub
cmp
lcall
and
xor
xchg
psubb
or
and
pusha
std
subl
xor
mov
mov
dec
ret
and
sbb
xchg
imul
pop
test
push
mov
mov
jo
insb
mov
pop
in
adc
dec
mov
imul
push
and
mov
pop
cli
lods
out
test
inc
and
pop
in
imul
push
rcrl
inc
popa
pop
out
adc
mov
lods
std
push
sti
xor
cmc
rcrl
add
cmp
cld
sahf
mov
sub
sbb
daa
xor
lods
cli
cltd
shl
push
notl
mov
psrlw
push
pop
dec
xor
in
push
sbb
and
aas
incb
leave
dec
les
cs
mov
lea
out
jne
or
jae
mov
xor
dec
push
xchg
scas
cli
lcall
add
imul
inc
sbb
movsb
jbe
es
mov
std
adc
ret
or
aad
push
pop
shl
mov
pop
fists
mov
shll
ret
jbe
int
pop
std
pop
lock
cs
ret
add
jnp
mov
adc
repz
mov
les
jno
sub
sbb
fstpl
pop
cmp
daa
fimuls
cmp
aas
fstl
mulb
loop
push
or
std
pop
movsl
add
push
jb
xor
jl
mov
sbb
and
jnp
add
je
jl
and
xchg
pusha
pop
lahf
mov
xchg
sub
add
jmp
in
fnstenv
cmp
xchg
jp
jge
scas
mov
shl
enter
mov
xchg
in
sbbl
fidivl
sub
fnstcw
adc
sub
xchg
inc
sub
xchg
enter
shrl
push
sub
dec
pusha
in
jle
push
inc
mov
lock
sbb
sub
fxch
sub
in
adc
addw
pop
jno
ret
loopne
leave
mov
out
neg
les
stos
inc
flds
inc
loop
out
mov
cltd
popf
add
dec
cli
cmp
pop
sbb
in
call
add
iret
mov
and
mov
cmp
leave
add
loopne
test
cld
daa
ret
mov
dec
out
cwtl
in
and
lds
pop
add
xchg
loopne
dec
loop
push
bound
and
pop
xchg
add
jnp
mov
repnz
pop
mov
sub
fcompl
inc
lret
lods
cli
mov
mov
mov
ds
jbe
dec
mov
out
mov
orl
and
or
stos
les
fistpll
cmpsl
mov
sub
mov
inc
pop
push
mov
dec
mov
push
sbb
mov
cltd
sub
and
movsl
fcompl
mov
pusha
stos
cld
mov
dec
les
rclb
add
icebp
sti
mov
dec
inc
mov
pop
mov
insb
negl
repz
and
cmp
push
ds
sbb
sbb
mov
fiadds
inc
add
mov
js
pop
fcomps
sub
hlt
pop
push
or
ja
testl
sbb
rolb
sbb
movsb
pop
add
pop
mov
pop
inc
cmp
dec
je
and
pop
aam
cmpsl
push
stos
jmp
xchg
pop
les
insb
or
popa
adc
outsb
push
fwait
lret
fstl
stos
test
ss
repnz
mov
and
xor
jno
or
mov
in
mov
mov
push
cmp
icebp
add
outsl
cmp
sbb
leave
jp
jmp
or
cmp
rorb
loopne
xchg
adc
or
loop
jnp
jbe
js
jns
ja
sbb
int3
sbb
mov
jae
pop
sub
test
cltd
in
out
or
filds
shlb
outsb
andl
pop
sub
in
push
mov
and
cmp
popf
aaa
adc
daa
ss
out
push
emms
mov
mov
aas
or
in
rcll
imul
fstpl
sbb
or
and
jbe
pop
mov
mov
push
or
adc
sbb
daa
outsb
ret
fst
and
icebp
xchg
xchg
mov
xlat
cmp
insb
push
inc
int3
mov
pusha
arpl
negl
pop
stc
negl
push
adc
mov
adc
into
mov
add
fsqrt
js
jbe
fsts
repnz
in
fidivrl
pusha
push
jge
mov
popf
mov
sub
xchg
cmc
sahf
mov
cmp
addl
jp
out
dec
and
and
and
xor
xchg
push
xchg
sahf
xchg
popa
or
fs
mov
jp
daa
ljmp
cmp
adc
stos
mov
pop
xchg
nop
cmpsb
sub
lock
das
mulb
inc
outsl
mov
imul
add
nop
decb
sbb
xor
aaa
mov
mov
jns
lea
rorb
dec
mov
mov
test
dec
inc
movsl
pop
fistps
outsb
cmp
push
hlt
pop
jns
lock
daa
xlat
gs
inc
xchg
insb
or
or
dec
out
or
gs
mov
push
scas
jno
mov
mov
aad
cmpsl
or
and
xchg
push
or
or
fstl
int3
pop
adc
ds
mov
mov
pop
in
pop
rcll
iret
fisubs
jle
cmpsl
xchg
push
insb
jns
or
xor
dec
pop
and
add
jl
out
shll
cmc
ljmp
mov
xor
inc
gs
arpl
sbb
in
aam
xor
mov
add
dec
scas
mov
adc
cmp
and
leave
fmull
mov
popl
lahf
push
cs
sbb
pushw
sbb
insb
xchg
add
add
xor
ret
ficoml
mov
rorb
mov
clc
stos
lods
or
mov
fdivrl
jns
xchg
nop
jp
cmp
fs
push
push
cli
jnp
push
cs
rolb
add
aaa
push
cmp
out
fstpt
pop
cmp
sbb
fisttpl
movsl
lock
dec
std
adc
daa
jne
sub
dec
call
jmp
or
xor
inc
push
pmulhw
mov
add
xchg
aad
push
inc
push
xchg
dec
push
push
aaa
sub
mov
repnz
mov
jo
mov
dec
int3
cli
adc
push
daa
test
push
stos
adcb
mov
mov
mov
fidivrl
adcl
lahf
pusha
xchg
test
pop
stos
js
jnp
stc
xchg
xchg
mov
xlat
dec
mov
leave
xchg
sti
push
inc
cmp
mov
add
push
enter
scas
mov
push
testb
xchg
fcomps
xor
sbb
dec
mov
mov
out
push
adc
sbb
sub
in
rol
xor
jo
inc
sub
add
mov
pop
push
lods
add
cmp
test
leave
loope
mov
mov
test
pop
push
pop
sti
cmp
out
xchg
inc
jo
push
js
mov
push
add
mov
in
adc
out
dec
lods
inc
stc
push
push
hlt
pop
jmp
push
xchg
inc
mov
push
out
jmp
jecxz
sub
test
in
loope
test
test
sub
jno
fmuls
fstpt
mov
pop
cmpsl
lea
sub
negb
mov
cmpsl
adc
dec
aad
dec
mov
dec
addr16
sti
insb
jae
into
in
add
mov
mov
loope
xor
xor
push
in
scas
scas
inc
inc
test
mov
out
gs
aad
shlb
mov
sbb
jnp
cmpsb
push
jnp
stos
icebp
pop
sbb
mov
adcb
je
out
adc
sbb
shlb
mov
sub
lcall
stos
aas
imul
inc
andb
daa
add
dec
test
mov
lods
daa
bound
mov
or
pop
int
mov
jle
fisttpll
jae
pushf
sub
sub
dec
shr
jbe
in
pop
sub
es
leave
out
mov
rorl
xchg
adc
mov
shrb
mov
pop
push
stos
xor
fisttpll
aas
xchg
xchg
xchg
cmp
das
xchg
adc
xor
in
stc
cld
xor
int3
mov
sub
xchg
mulb
outsb
or
mov
sbb
scas
pop
lock
mov
jp
jae
or
mov
lea
lret
fcmove
jge
stos
mov
push
in
in
push
mov
sbb
xchg
jns
or
stos
out
frstor
imul
std
cmpsl
pop
je
lock
or
inc
mov
movsl
xor
test
push
dec
out
lods
ret
faddp
mov
cld
fisttpll
jbe
cmp
cmp
jecxz
loope
loop
jbe
push
addr16
inc
ljmp
das
or
popf
cmp
mov
adc
jmp
sub
rcl
repz
lea
out
push
mov
lock
lds
lds
pop
cmp
mov
pop
ja
mov
cltd
lods
ds
shr
sub
adc
shl
insl
xchg
mov
xchg
lahf
sub
push
jp
mov
mov
jnp
jae
dec
movsb
mov
ret
dec
sub
mov
cmp
push
rcrl
hlt
fcmovne
cmp
mov
adc
and
imul
mov
adc
inc
fisubrs
sub
lods
jnp
mov
cwtl
xchg
mov
push
dec
sub
scas
es
in
daa
ljmp
fs
shlb
in
pop
stos
pop
fldt
cmc
sbb
addl
dec
xchg
pop
cmp
sahf
xchg
xor
cmp
xchg
out
jb
lods
or
pop
je
cmp
mov
mov
dec
or
shll
sahf
movsb
or
dec
mov
inc
leave
ds
or
pusha
popf
dec
test
add
lods
dec
and
pushf
fiaddl
xchg
or
pop
push
popl
and
pop
push
dec
leave
cltd
into
cmp
shr
add
push
pop
test
fistps
sbb
lds
mov
mov
and
adc
mov
push
pop
scas
je
inc
ljmp
jl
pop
into
push
mov
lahf
enter
lret
mov
fcmovb
dec
jne
mull
ss
scas
movsl
aaa
mov
cli
add
jae
mov
jbe
mov
jg
sti
sub
loopne
xchg
sbb
daa
inc
add
xchg
popa
movsl
mov
ficoml
aaa
dec
cmc
bound
cmp
mov
pop
imul
rcll
pop
fldt
mov
enter
jmp
lret
mov
out
pop
dec
shlb
mov
add
dec
cmp
and
sti
outsl
imul
push
sub
js
xchg
jnp
movsb
jge
mov
xchg
fmuls
or
fimuls
loope
ja
xchg
test
out
dec
push
sbb
test
lds
xor
adc
icebp
ja
or
test
outsb
nop
adc
mov
push
cli
test
xchg
movsl
pushf
jbe,pt
mov
cs
push
scas
pusha
add
jns
cltd
les
inc
icebp
sub
lods
dec
jnp
daa
insl
into
mov
mov
mov
fucomp
aam
out
push
or
push
pop
push
test
insl
pop
ror
add
lods
clc
loop
mov
mov
aad
add
push
dec
xor
lods
inc
mov
jnp
sahf
pop
push
repz
movl
push
shlb
cmp
mov
xchg
mov
js
or
inc
pop
mov
in
adc
sbb
repz
push
inc
iret
cwtl
mov
hlt
add
add
jp
aad
lret
loopne
pop
lahf
inc
scas
aaa
dec
inc
cwtl
arpl
fistps
sti
aas
inc
jmp
shl
jl
mov
xchg
inc
repz
mov
fcoms
sub
mov
and
aad
stos
lahf
cmpsb
ja
movsl
jne
rclb
and
jmp
jno
int3
clc
lods
adc
and
xchg
hlt
ret
sbb
cltd
scas
mov
and
pushf
lret
xchg
and
add
les
inc
adc
mov
mov
lock
int3
push
jl
rol
ss
sub
push
jne
les
clc
scas
lock
sub
push
and
icebp
mov
sub
mov
push
jmp
mov
mov
outsl
pop
shlb
cwtl
lock
sarb
adc
mov
cmp
mov
sub
sti
xchg
inc
mov
cmpsb
in
out
push
mov
mov
mov
orb
in
daa
dec
push
stos
or
sbb
dec
lret
jnp
lret
popa
in
xchg
shll
fadds
jle
mov
push
ljmp
jge
pop
popa
push
pop
xor
ret
cmpsl
xor
xor
icebp
stos
and
hlt
in
dec
push
out
repnz
add
subl
pop
gs
mov
jg
add
aaa
push
xchg
call
inc
mov
cld
jecxz
push
out
cmp
insl
inc
jle
leave
mov
xchg
out
xor
push
stos
scas
pop
movsl
js
leave
sub
and
pop
lods
xlat
sbb
xchg
aam
in
in
or
mov
movb
sub
shll
arpl
or
movsl
mov
push
mov
clc
pop
loope
daa
xor
sub
lea
mov
mov
adc
gs
inc
hlt
adc
or
dec
shlb
iret
out
ret
mov
adc
cmpsb
dec
mov
mov
sbb
sbb
push
adc
xor
inc
fistpll
xor
jae
fstl
sub
divb
dec
lahf
and
sti
enter
jnp
add
roll
and
int3
rcrl
jg
ds
pop
int3
xor
fs
and
popa
andb
mov
test
cli
xor
add
cmpb
stc
aam
mov
cmp
mov
sti
insl
enter
call
cmpsl
cwtl
add
push
or
pop
and
outsl
sbb
adc
cmp
lods
or
or
jo
stc
xchg
sub
cmp
xchg
loopne
imul
inc
xlat
xchg
pop
inc
imul
add
nop
push
push
mov
jmp
jno
ret
dec
cmc
inc
das
xchg
pusha
std
xchg
inc
loop
lds
jb
es
push
ret
loop
inc
jl
jnp
clc
sub
dec
movsb
movsl
xor
sti
sbb
or
lods
mov
jnp
mov
or
xorl
mov
int3
cmp
cmp
into
xor
lods
mov
sarl
xlat
int3
aas
jl
call
mov
xchg
or
ds
mov
bound
repz
cmp
je
loop
daa
pop
xchg
add
fbld
mov
inc
out
sub
lcall
icebp
ud1
adc
sub
fucomip
in
lret
addl
pop
dec
and
mov
xor
js
movsl
xchg
jp
push
sarl
and
movsl
ret
ret
push
repnz
add
cmp
cmp
push
xchg
push
dec
js
mov
xchg
xchg
imul
sub
push
mov
mov
mov
pop
push
push
orb
pop
adc
mov
xor
pop
sub
mov
jno
or
je
in
sub
pop
cs
xor
inc
sub
cmp
fadds
sub
sar
repnz
rcr
lds
cwtl
sti
icebp
mov
sub
or
lcall
movsl
jae
idiv
cld
stos
cmpb
mov
sub
xchg
cmc
pop
xor
lods
cli
addr16
and
add
mov
push
lds
add
sbb
pop
jb
jecxz
outsb
insl
sbb
movsl
mov
cltd
sub
mov
test
dec
push
repnz
and
dec
lahf
or
in
cmpl
call
pop
fstpl
jnp
mov
and
mov
das
xor
out
scas
cltd
popf
notl
aad
push
xchg
push
mov
fstl
mov
push
jo
pop
push
inc
pop
push
gs
lahf
sub
adc
adc
mov
enter
ss
in
cli
sub
push
pop
or
dec
imul
xchg
rol
jp
cwtl
jno
and
push
jp
or
xchg
push
testl
push
adc
test
jle
leave
xchg
js
inc
out
iret
rol
xchg
insb
dec
or
jae
dec
cwtl
sbb
push
or
out
or
add
xchg
fisubrs
imul
adc
test
mov
shll
push
push
and
jnp
add
or
xchg
in
ds
push
fwait
mov
lret
push
cmp
dec
unpcklps
xor
push
insl
shrl
push
and
mov
mov
add
mov
cmp
imul
test
fstl
push
outsl
sahf
loop
icebp
pop
mov
sub
add
or
cmc
sub
xchg
dec
movsl
ret
sub
out
mov
aad
jne
bound
lods
pop
inc
sbb
movsl
xor
mov
ljmp
daa
into
fisttpll
adc
fsts
in
sub
mov
icebp
xchg
pop
je
shl
popf
xor
mov
mov
adc
mov
int
fwait
ret
hlt
neg
mov
popf
stos
imul
ret
dec
scas
xchg
mov
lea
out
cmpb
cmp
xchg
mov
loop,pt
clc
mov
pushf
sbb
mov
cmp
adc
dec
mov
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
jae
or
inc
dec
lods
pop
lcall
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
dec
dec
lods
pop
imul
xchg
xchg
int
orb
push
repz
push
aas
les
cmp
xor
adc
cld
push
push
insl
leave
and
sub
push
sbb
mov
insl
push
mov
daa
leave
cmp
jge
mov
and
inc
dec
lods
and
cmp
pushl
aas
xchg
xchg
icebp
sbb
movsb
add
rcrl
sbb
sahf
jbe
out
xorb
inc
test
xchg
mov
push
inc
xchg
ljmp
aas
xchg
xchg
icebp
sbb
cmp
rcrl
inc
dec
dec
add
sbbb
inc
mov
nop
xchg
jmp
pop
sbb
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
sub
stos
or
pop
add
aad
jns
dec
stos
inc
dec
lods
mov
xchg
jae
dec
dec
inc
dec
lods
jo
xchg
jns
lock
inc
dec
mov
lahf
xchg
jns
or
pop
gs
lcall
dec
lods
pop
gs
jo
xchg
jns
dec
fwait
dec
dec
lods
pop
gs
xchg
jns
dec
jmp
dec
lods
dec
gs
lcall
pop
lods
pop
gs
cmpb
stos
inc
dec
lods
pop
gs
xchg
jne
adc
inc
dec
lods
lahf
outsb
ds
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
push
jo
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
cmp
aas
cmp
pop
gs
inc
cs
lcall
dec
lods
pop
gs
xchg
jns
arpl
xor
into
pop
gs
xchg
jns
lea
gs
stos
inc
dec
lods
pop
gs
mov
and
xor
jo,pt
nop
jns
dec
mov
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
cmp
dec
imul
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
lods
pop
gs
xchg
jns
dec
stos
inc
dec
push
adc
pop
lcall
xchg
sub
int
cmp
hlt
scas
mov
nop
cli
jmp
repnz
scas
dec
rcrb
dec
scas
adc
mov
sbb
test
mov
dec
sub
pop
in
sbb
ret
subb
push
inc
loop
mov
or
js
pop
mov
or
xor
pop
push
mov
mov
rcrb
cmp
scas
fldt
or
fxch
cmp
in
movl
mov
cwtl
jno
js
popa
lret
sbbb
inc
mov
add
popl
add
cld
inc
shr
sti
cmpsl
mov
repnz
ds
popa
arpl
mov
mov
pop
into
notb
cmp
je
mov
lds
nop
stos
movsl
addr16
sub
sbb
inc
fs
std
out
repz
fcomps
mov
test
xchg
arpl
adc
scas
adc
mov
jg
loopne
in
scas
cmova
and
shlb
aad
sub
pop
and
jp
push
data16
stc
jge
jne
std
dec
sub
mov
adc
jns
mov
xchg
sub
out
add
cmp
mov
sub
mov
xor
incl
sahf
enter
sbb
movsl
cwtl
xorb
push
data16
popf
xchg
xchg
ss
dec
out
xchg
sbb
cmp
mov
push
icebp
cmp
pop
xorl
push
lods
lret
ret
cmp
ret
and
inc
adc
cld
fs
nop
dec
xchg
mov
lods
fsubl
mov
movsb
or
jge
pop
js
iret
or
xchg
add
dec
outsb
imul
out
inc
pop
mov
sti
cmp
sbb
test
xchg
inc
adc
std
jle
pusha
out
testl
test
icebp
fcomps
sti
mov
popa
mov
cld
dec
fadd
insb
movsb
mov
adc
mov
adc
fsub
sub
sub
jp
jb
jo
or
fwait
icebp
mov
adc
outsb
add
sahf
dec
cld
loope
popf
sbb
sub
sbb
push
add
loopne
mov
and
mov
cld
pop
out
inc
dec
jnp
mov
hlt
fstl
mov
out
popf
sub
sub
mov
push
mov
mov
lock
jns
in
es
out
sub
mov
push
lret
sbb
mov
mov
pop
pop
and
lret
iret
jg
ffreep
mov
xchg
push
icebp
sub
and
cmp
pcmpeqd
xchg
stos
scas
dec
aaa
jl
dec
and
mov
cmc
adc
jmp
dec
inc
sub
add
cmp
call
or
insb
mov
rclb
cmp
mov
push
add
xor
inc
push
and
push
adc
out
es
fimuls
clc
dec
add
dec
add
stc
add
insb
test
push
sbb
jl
mov
inc
scas
push
push
stos
iret
stos
lea
sarb
mov
add
mov
cmpsb
decl
aaa
dec
lods
sbb
ret
xchg
addr16
dec
lds
xchg
lahf
pop
cmp
push
mov
dec
out
mov
dec
div
mov
xchg
lret
xor
fisubrs
mov
xchg
insb
and
ds
and
scas
inc
push
mov
cmpsb
pop
lock
jle
rorb
outsl
aam
aas
xlat
cmp
jp
jle
inc
subb
adc
cmp
adcl
jmp
rorb
jg
cli
into
call
dec
sbb
outsl
cld
push
jl
add
mov
loop
bnd
sarb
sub
ret
ret
mov
leave
sbb
pushf
rorb
add
cltd
adc
mov
or
movsl
sti
das
loopne
mov
fldl
mov
dec
movsb
mov
inc
test
cmp
mov
cmpsl
mov
xor
pop
mov
push
jmp
mov
shll
mov
push
scas
or
inc
and
jae
sub
cli
push
das
dec
mov
sbbb
push
or
int3
test
js
dec
sbb
mov
ret
cmc
aas
cltd
shrl
xchg
mov
lahf
shll
test
rcrl
ljmp
and
mov
scas
fdivrs
sbb
push
xor
fiaddl
enter
jmp
push
and
jae
xor
filds
mov
in
dec
test
sbb
push
cmpl
xorl
pop
mov
in
xlat
rcrl
rcr
dec
inc
or
and
lods
and
movb
cmpsb
push
cld
int3
mov
inc
call
add
data16
xchg
xor
or
sub
xchg
dec
pop
xchg
or
mov
fwait
repz
pop
cmp
in
xchg
mov
addb
stc
push
pop
push
lcall
mov
or
call
push
lds
cwtl
test
sub
pushf
push
icebp
xchg
outsb
push
xchg
dec
das
mov
mov
and
sbb
xchg
leave
mov
sub
push
shlb
aaa
adc
icebp
push
in
leave
ret
mov
or
xor
push
push
enter
out
int3
sub
fisubs
or
pop
mov
sbb
add
dec
stc
call
pop
jns
pop
push
pop
xchg
out
mov
mov
lret
out
ret
jae
adc
lret
cmpsl
jp
jmp
lcall
cmp
rcrl
mov
xor
mov
fidivrs
test
xchg
ss
push
mov
sub
push
lahf
sbb
popa
push
cmp
mov
mov
les
scas
mov
mov
mov
and
insl
add
lcall
push
fadd
push
jp
in
movsb
pop
in
and
jg
daa
pop
and
xchg
cwtl
negl
inc
dec
push
lcall
push
inc
lods
repz
rclb
mov
add
inc
dec
popf
in
pop
mov
test
xchg
push
pop
xchg
dec
loopne
dec
fcomps
xor
dec
popf
test
cs
test
into
dec
int3
loope
or
int
and
xchg
shlb
lods
mov
push
aad
mov
pop
lahf
iret
ljmp
push
mov
imul
push
jb
mov
hlt
jb
mov
push
add
hlt
in
jl
mov
cli
lea
rclb
push
addb
out
adc
ret
push
cli
out
push
sbb
sarb
or
xchg
sub
aaa
dec
mov
adc
push
xor
xchg
mov
cs
fwait
push
mov
push
out
sbb
daa
mov
dec
pop
stc
ds
push
mov
xchg
loope
and
pushl
out
loop
jl
mov
mov
xor
xor
jae
sub
mov
adc
cmc
add
repnz
or
sub
stc
outsb
inc
xor
aad
pushf
movb
mov
fchs
mov
lock
ret
dec
cmp
sbb
jg
in
inc
jo
pop
lcall
pop
fistpll
sub
int
in
adc
aaa
cmc
jns
pop
cmp
pop
fcompl
incl
outsl
cltd
cs
sbb
sar
cmpsb
iret
stos
fistl
dec
sub
pop
aam
cmp
push
sub
ja
std
cmp
not
loope
test
roll
rclb
sti
icebp
addr16
loopne
cmovno
add
testb
loopne
cmpsb
sbb
and
pushf
cmpsb
mov
pop
add
pop
push
leave
inc
mov
es
jnp
sub
std
outsb
stos
icebp
loope
shl
xchg
ret
outsb
loop
jmp
icebp
mov
sub
sub
jmp
loope
or
movaps
loop
cmp
repz
mov
loopne
leave
es
inc
adc
mov
cs
fadd
and
lahf
push
fsubrl
push
pusha
fbstp
xchg
jno
mov
test
inc
or
pop
inc
int3
pop
outsb
in
int
sbb
sbb
xchg
jp
outsl
pop
xchg
xchg
cli
aas
arpl
test
pop
push
pop
sahf
xor
faddl
sbb
sub
addb
dec
and
sbb
push
dec
dec
mov
inc
cltd
into
mov
and
add
clc
and
xchg
lret
rcr
sbb
inc
out
mov
mov
mov
add
mov
scas
cmp
rorl
push
push
dec
out
adc
sbb
fidivs
test
incl
push
mov
in
test
xor
loop
subb
mov
ja
cmp
daa
add
mov
jle
lea
mov
sub
lock
orb
or
or
int3
add
sbb
mov
pop
xchg
fisubrl
mov
insb
fdivrs
stc
sarl
lret
push
dec
cltd
fisttpll
hlt
orb
vcvttpd2dqy
in
jns
xchg
cmp
lea
mov
iret
sbbl
jae
lds
filds
sar
mov
shlb
add
test
mov
sti
sbb
xlat
mov
mov
xchg
push
outsl
adc
xlat
cmp
into
sub
aaa
insl
or
cmc
add
sbb
out
sti
pushf
imul
icebp
inc
adc
scas
fs
mov
scas
fldcw
cli
ret
loop
dec
inc
push
push
adcl
mov
loope
out
sar
cmp
sbb
sub
xchg
jb
test
fildll
and
popa
push
fistps
cmp
xchg
outsb
lods
data16
sbbl
jl
pop
push
sbb
sbb
test
das
in
inc
nop
and
test
fbstp
rcl
jo
inc
add
pop
lods
rcrl
and
jl
out
popa
pushf
stos
mov
pop
pop
fdiv
mov
test
pop
lea
scas
inc
mov
sub
jg
xchg
cwtl
add
cmpsb
lock
andl
mov
mov
ljmp
pop
cmp
in
lods
popa
add
push
stc
int
jle
das
xchg
int3
mov
clc
movsb
xor
lods
inc
adc
lahf
jnp
pop
sti
cmp
and
fcomps
cmp
xchg
inc
adc
sahf
or
adc
jmp
dec
and
cmpsb
xchg
and
mov
daa
mov
and
lods
into
scas
insb
mov
lahf
fisubrs
mov
jecxz
dec
adc
push
sub
xchg
push
sti
fs
loop
xchg
scas
sub
xor
enter
mov
pop
push
cli
lcall
cmp
popf
pop
push
inc
xorb
push
add
pop
push
push
mov
mov
ret
xor
lods
out
dec
andl
mov
pusha
stos
inc
movsb
jecxz
mov
sub
sbb
push
imul
movsb
dec
sbb
ss
dec
cmp
xchg
cmp
je
enter
jmp
fmull
cs
adc
xchg
test
dec
insb
push
pushf
lcall
cli
inc
xor
cmp
imull
cmp
popf
loopne
in
ljmp
inc
dec
xchg
stos
pushf
cmp
xlat
push
or
les
or
mov
cmp
insb
adc
inc
and
test
mov
int3
push
mov
dec
incb
pushf
cli
sbb
lcall
pop
or
dec
fldlg2
negb
xlat
gs
jne
xchg
jmp
mov
pop
pop
mov
mov
das
fdiv
and
mov
push
test
and
pop
push
inc
sub
mov
push
inc
mov
dec
add
mov
sahf
mov
test
sbb
mov
or
jbe
sbb
lea
lcall
cmpsb
push
repnz
ret
lahf
pop
mov
fldcw
in
pop
jp
mov
mov
and
iret
imul
mov
or
jle
dec
mov
sbb
xor
pushf
add
or
adc
push
dec
imul
scas
and
jo
mov
cmp
in
mov
mov
clc
inc
dec
jmp
xor
mov
jg
adc
push
in
rdmsr
fdivs
lea
xchg
push
icebp
push
and
stos
pop
loopne
nop
das
std
mov
inc
test
adc
inc
es
movsb
sahf
pop
aad
mov
push
jg
xor
popf
cmp
fcmovnu
lea
dec
xor
aaa
pusha
jg
adc
mov
sbbb
xchg
popa
sbb
jns
inc
loope
stos
mov
fistps
sar
loope
stos
pushf
push
jae
ss
jmp
pusha
xor
test
and
add
mov
das
imul
pop
mov
es
lods
or
cmpsl
movsb
in
fucom
in
mov
pop
loop
pop
mov
enter
hlt
jae
out
je
test
mov
lods
jge
jmp
push
out
sbb
movsl
and
cwtl
cltd
stos
pop
bound
lock
je
cmp
fs
inc
fistps
pop
call
and
and
leave
pop
sbb
stc
mov
xor
and
imul
xor
mov
pop
jnp
or
shr
pop
imul
imul
xchg
lcall
jecxz
daa
fs
insb
test
sbb
lods
shrb
inc
push
out
or
out
sub
pusha
fnstenv
ja
ljmp
icebp
mov
pop
xchg
shrl
sbb
inc
shll
xchg
inc
sbb
mov
cmp
jae
xchg
xor
xor
cmp
inc
inc
lds
push
mov
fnstcw
fisttpl
in
xor
mov
xchg
xchg
adc
cld
inc
jbe
mov
lcall
sbb
mov
cs
sbb
dec
mov
pop
push
cmp
jbe
repnz
sahf
push
aaa
rorl
inc
mov
and
or
dec
jp
cltd
cmc
leave
push
inc
mov
in
or
and
fistpl
mov
in
jmp
mov
out
ja
xchg
loopne
jne
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
