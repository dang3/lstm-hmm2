push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
call
test
je
push
lea
push
call
lea
push
push
push
push
call
mov
add
mov
lea
push
lea
push
push
push
push
mov
push
call
lea
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
lea
push
push
push
push
mov
push
call
inc
mov
es
sbb
icebp
pusha
rcrl
fsubrl
repz
adc
jmp
pusha
aaa
pop
jne
data16
mov
jle
ljmp
dec
lods
popf
push
push
out
mov
adc
xor
sub
repnz
iret
mov
int
push
xchg
popf
pop
push
xchg
jmp
in
sub
inc
cmpsl
pop
lret
ja
sub
adc
mov
into
in
out
mov
ficoms
mov
or
movsb
roll
jmp
jge
ret
cli
push
ja
dec
push
in
cmp
in
movsl
pop
ret
lods
cmpb
inc
sbb
xchg
inc
mov
fsubs
lahf
imul
push
push
sarb
decl
repz
jne
and
and
lcall
mov
or
xchg
cmp
jl
mov
mov
mov
jae
mov
and
mov
dec
mov
jns
push
in
mov
push
sahf
xchg
ds
and
mov
data16
mov
test
js
test
sub
ss
jecxz
les
repz
adcb
int3
cmp
pop
dec
mov
int3
test
iret
out
sbbl
insb
jne
aam
dec
sti
enter
loopne
rclb
into
or
jne
jo
ret
mov
mov
add
lods
in
ror
dec
mov
stos
push
arpl
out
inc
loope
mov
inc
movsb
outsb
imul
mov
and
gs
and
bound
push
mov
ja
cmpsl
pcmpgtd
mov
cmc
enter
xor
stos
icebp
mov
dec
dec
pop
bound
jmp
and
pusha
inc
aas
mov
pop
icebp
inc
pop
sbb
and
mov
push
out
push
enter
mov
jnp
mov
add
ja
and
movsb
sub
sbb
sbb
cmpsb
jle,pn
loopne
xchg
or
mov
fstpt
cmp
dec
or
xor
fdivs
rorb
insb
out
outsl
aas
sub
adc
fldcw
std
mov
in
cwtl
add
jno
inc
int3
lds
je
pop
xor
movl
mov
leave
nop
loope
mov
push
test
and
mov
sarl
fiaddl
loop
pop
mov
cli
dec
scas
adcb
or
push
lret
cmc
and
bound
sub
icebp
das
cld
out
repz
aas
ja
pop
jp
aas
iret
xor
add
mov
daa
pop
jo
mov
pop
mov
add
jle
xor
dec
lds
mov
frstor
jns
mov
inc
into
mov
iret
repz
lods
xchg
cmp
outsb
enter
pop
gs
rclb
xlat
jge
in
dec
mov
fistpll
xchg
jp
lcall
loopne
jbe
xchg
pop
in
cmp
insb
xchg
xchg
enter
xor
lods
daa
cmp
adc
int3
or
lret
rorb
inc
aas
push
test
aaa
pop
adc
adcb
pop
inc
xor
jo
push
repz
xchg
mov
mov
cmp
sbb
in
decb
insl
cmc
jp
out
cmp
or
mov
pop
xor
pop
imul
lret
lret
std
mov
cmp
add
xlat
ljmp
mov
xor
inc
jg
push
jg
fnsave
pop
mov
and
pop
sar
cmc
cmp
mov
jbe
mov
into
daa
mov
sbb
pusha
mov
adc
xor
andb
add
inc
aad
mov
outsl
pusha
and
sbb
cmp
mov
jns
jp
sbb
addl
jmp
mov
push
add
and
jmp
sub
jecxz
sbb
push
sti
test
dec
inc
dec
jmp
repz
sub
je
jecxz
mov
aad
xchg
test
jb
jmp
scas
ja
mov
cld
aas
adc
aas
add
popa
xor
or
push
cld
or
cwtl
xor
xor
fs
add
bound
rep
mov
jbe
loop
in
sub
test
push
lret
xor
nop
xor
mov
lcall
sbb
or
cwtl
mov
ss
dec
loop
out
dec
setge
shl
pop
icebp
pop
jmp
jl
movsb
jecxz
test
in
cwtl
add
and
and
fildll
xor
iret
lock
mov
shlb
mov
dec
pop
adc
pop
out
jae
dec
mov
inc
pop
push
jge
push
das
or
and
addr16
std
mov
and
cmc
jae
mov
sub
sbb
inc
in
dec
mov
sub
out
or
outsb
mov
xchg
xchg
negl
mov
and
adc
mov
push
movsl
inc
loopne
cmp
in
cmp
rorl
push
mov
nop
add
pop
aad
inc
mov
add
mov
addr16
fs
repnz
mov
dec
movsb
loope
sbb
lods
mov
fs
call
jns
lret
addr16
in
add
cltd
insl
iret
mov
das
fs
movl
scas
fwait
adc
push
inc
mov
sbb
mov
jo
push
push
jbe
xchg
leave
call
sub
fwait
pcmpgtw
jg
pushf
es
lea
jnp
lcall
imul
js
enter
pusha
je
in
pop
cmp
bnd
cltd
int3
or
outsb
mul
push
pop
inc
push
shrb
stos
jno
lea
push
jmp
or
jmp
lret
and
into
bound
cmp
int
inc
mov
xor
insb
mov
popa
rol
in
inc
push
lods
or
xchg
inc
add
xor
insl
xchg
mov
ja
jns
mov
aad
popa
and
test
lock
pop
and
jp
movsl
test
mov
push
lea
aad
add
and
fcompl
xor
gs
sbbl
cmc
aad
sub
lock
rol
ja
je
xlat
mov
lods
cmp
mov
arpl
cmc
xchg
pop
or
dec
mov
push
cmp
inc
add
fprem
or
fadd
leave
inc
mov
jbe
sbb
icebp
into
push
push
push
repnz
jmp
addr16
ss
std
rcl
xchg
xor
add
cmp
cmovns
inc
stos
xor
enter
mov
shrb
cmp
lock
ss
shlb
xor
sbbl
loope
mov
movsl
and
lds
in
push
cmp
sub
leave
mov
shll
in
cs
pop
mov
lods
mov
sti
add
adc
mov
lret
lods
pop
mov
xchg
imul
mov
cmpsb
pop
cmp
push
lret
jbe
jb
mov
push
sub
arpl
mov
xchg
stc
jecxz
xchg
dec
mov
ja
sub
push
sbb
filds
je
jmp
sub
imul
cmpsb
fmulp
inc
ret
lea
mov
into
xor
loop
pop
or
inc
ljmp
or
xor
repnz
mov
aam
insb
add
lret
ret
test
loopne
dec
jl
mov
outsl
leave
cmp
out
adc
pusha
dec
dec
and
mov
cmp
xchg
fcomps
daa
xor
andb
jg
mov
mov
aaa
arpl
or
int3
lahf
dec
mov
test
push
loop
loop
adc
in
push
sti
movsl
pop
or
and
inc
dec
inc
dec
cmp
call
sub
adc
out
call
andb
and
rcr
push
or
out
insb
and
jne
popf
clc
test
adc
sub
popf
scas
aas
js
addr16
sahf
lock
cs
mov
pop
int
sub
jl
mov
movsb
dec
jp
sbb
xlat
scas
or
imul
in
jns
rcll
add
push
dec
adc
loopne
into
jmp
or
push
dec
fwait
push
mov
ds
sbb
ret
mov
dec
jmp
jno
cmc
sub
testl
bound
cmp
adc
ficoms
fisubl
pop
sbb
xchg
push
fsubrs
adc
popf
movsl
iret
jbe
std
sub
idivl
rorb
mov
jg
incb
dec
mov
in
xor
pop
jle
dec
xor
dec
not
mov
pop
mov
pop
js
sub
mov
add
arpl
je
loop
pusha
dec
rcrb
shll
clc
mov
cmc
inc
sub
lods
xlat
lods
dec
test
insb
test
jns
or
mov
je
jo
xchg
mov
aaa
fdivl
or
xor
sbb
leave
inc
push
push
popf
les
or
dec
mov
cld
nop
in
mov
fisubrl
icebp
or
pop
xchg
movsl
xor
push
inc
mov
negl
xor
jle
jbe
sbb
and
or
xor
imul
ja
ror
inc
cltd
dec
inc
adc
pop
adc
sahf
aad
push
and
sub
ds
sbb
mov
sahf
movsb
mov
add
push
xlat
rcll
push
xor
mov
lret
mov
mov
mov
cltd
add
jno
push
mov
mov
insl
push
dec
sub
cmp
and
js
sahf
push
ret
cmp
xchg
icebp
or
mov
mov
std
cld
push
and
gs
push
dec
mov
dec
fsts
xchg
xchg
sub
dec
lret
jp
ret
std
cli
js
inc
cmp
xchg
out
or
add
jg
repz
pushf
push
sbb
int
lds
shr
pop
cld
cmpsl
and
fiaddl
jo
ret
ljmp
shrl
fdivp
inc
sahf
pop
add
hlt
pushl
pop
cwtl
cmc
mov
dec
jl
push
mov
mov
jb
gs
lods
inc
in
pop
lock
mov
int3
jnp
out
or
sbb
push
lea
data16
push
mov
jmp
adc
jb
pop
rcl
outsl
or
sbb
dec
adc
repz
pop
xlat
or
jecxz
cwtl
int
mov
jl
inc
push
mov
sub
add
es
sahf
movl
insb
jp
dec
out
addl
clc
sbb
xchg
test
mov
fisubrs
sub
xor
xor
dec
mov
and
jno
xchg
xor
into
int
jno
pop
xor
mov
icebp
les
leave
loope
sbb
adc
out
cmpsl
fsubrl
in
push
sub
push
cmp
movsb
or
lret
add
dec
pop
adc
mov
add
in
enter
add
stc
or
sub
pop
ljmp
testb
stos
jge
mov
mov
sti
stos
mov
xchg
adc
rcll
push
xchg
out
add
xchg
dec
scas
sub
bound
cmpsl
push
sbb
gs
lahf
jae
cmpsb
cmp
divb
xor
pop
sub
enter
pop
test
mov
push
cltd
jnp
mov
test
xor
lock
cmp
lret
xor
xchg
mov
popa
add
nop
cmp
rolb
dec
or
fdivrl
add
jecxz
mov
outsl
cmp
aaa
dec
scas
aad
cmp
xchg
jp
sub
popf
xchg
into
add
dec
cwtl
cmpsl
popa
add
xchg
jbe
mov
in
clc
xchg
stc
icebp
pop
in
and
daa
stos
mov
add
xor
and
adc
mov
fs
xor
adc
sbb
cli
icebp
pop
push
push
cli
popa
dec
cli
push
pop
punpckhwd
and
push
xor
daa
sub
add
stos
mov
in
jmp
repnz
cmc
jmp
mov
cmc
xor
sarl
inc
in
popf
fsubrl
pop
adc
addr16
lods
addr16
test
mov
mov
jo
scas
into
incb
sub
popf
stos
add
in
out
leave
popa
aad
jne
add
aaa
xor
rcll
aas
test
and
loopne
pop
cmp
cmpb
fidivl
ljmp
jp
or
in
or
and
and
cmp
and
and
mov
mul
push
xor
js
std
mov
loope
mov
pop
add
pop
sbb
dec
inc
sbb
dec
das
shlb
test
or
les
lds
sub
jo
xor
clc
pusha
mov
xchg
push
data16
mov
in
jecxz
shlb
xchg
push
scas
pop
pop
push
movsl
mov
hlt
sbb
lret
inc
sbb
or
push
cld
insb
cmc
ja
mov
or
dec
xor
aas
jo
dec
pop
jge
int
rorb
xor
int
dec
jnp
fsts
ret
dec
pop
scas
out
sbb
adc
jo
mov
cmp
or
mov
cmpsl
adc
jo
mov
dec
or
out
adc
int3
jne
mov
divb
sahf
test
int3
mov
mov
push
sbb
in
jne
and
mov
cwtl
sub
xor
mov
or
mov
jp
mov
xchg
cmp
movsl
test
in
andl
cmp
push
jl
int3
xchg
mov
or
fstpl
push
dec
icebp
push
outsl
fdivrs
in
dec
test
mov
sti
dec
jo
aad
in
popf
jecxz
pop
push
inc
jecxz
rorl
outsl
jecxz
pop
push
lret
lods
mov
das
dec
push
std
jns
mov
cmp
dec
xor
pushf
push
test
pop
rcrb
jns
inc
fistl
push
add
xor
jo
xor
sahf
cmpsb
jle
fwait
or
pop
lcall
and
stc
mov
pop
in
int
pop
adcl
inc
sub
adc
push
roll
loope
lahf
jl
mov
aam
mov
and
clc
xor
out
add
into
adc
pushf
bound
adc
jmp
popf
arpl
push
rolb
inc
cmp
lret
stc
test
xor
dec
sub
out
or
mov
out
adc
pop
test
xor
push
aad
adc
fistl
mov
cmp
xlat
decb
cmp
aad
and
inc
out
xchg
jg
mov
or
lret
or
jae
iret
stc
leave
sub
lock
mov
jmp
jle
mov
xchg
xor
sti
out
cmp
jg
xchg
bnd
sarb
mov
ret
cmp
fsubrs
inc
pop
sahf
mov
mov
pop
rol
repnz
mul
loope
negb
pusha
mov
cmpsb
xchg
and
icebp
int3
mov
mov
push
mov
adc
cmc
lods
insl
loope
and
popa
inc
fisttpl
push
mov
adcb
callw
jae
and
lahf
test
inc
dec
push
les
add
in
sti
in
mov
subl
xchg
dec
mov
into
or
test
icebp
repz
imul
xchg
int
dec
cmpsl
push
inc
les
or
cmc
mov
lret
xor
cmpsb
ret
xchg
pop
sbb
adc
in
loope
add
dec
in
push
dec
sub
mov
push
movsl
test
lods
imulb
fstl
in
int3
push
loop
arpl
repnz
iret
cmp
cmp
rorl
rolb
mov
pop
sub
push
push
jne
lock
add
or
dec
mov
andl
xchg
push
mov
aaa
push
loop
adcb
jae
adc
int3
and
add
fists
sahf
mov
data16
rclb
aad
mov
stos
out
je
jo
pop
fildl
imul
rorb
mov
fcmovnb
movsb
pusha
jecxz
sub
enter
jae
imul
sbb
lock
pop
adc
dec
fistpl
out
in
mov
mov
fldl
test
dec
pop
xor
lret
lret
rcll
cmpl
push
mov
in
rorb
dec
insb
xchg
lods
clc
das
sbbl
jae
cltd
fsts
cmpsb
pop
cmp
pusha
ret
movsl
loopne
shrl
mov
in
cwtl
mov
arpl
adc
repnz
ficoml
push
ret
pop
rol
pusha
inc
cmpl
imul
fists
pusha
mov
mov
rclb
push
xchg
rcrl
lock
or
jno
out
pop
mov
jl
jo
les
out
cmpsb
rcrl
xor
adc
ret
cmc
jmp
push
int3
xor
jno
inc
nop
mov
daa
sbb
icebp
adc
xchg
add
cwtl
or
jo
int3
add
sahf
sub
mov
adc
mov
shl
cmp
out
mov
popf
stos
sub
addr16
icebp
push
jl
das
jmp
mov
jns
icebp
push
push
and
xor
repz
add
pop
pop
adc
add
jnp
push
cwtl
mov
popf
push
adc
mov
cli
adc
ror
add
inc
mov
pop
popf
inc
mov
fidivrl
push
jbe
xchg
mov
push
xchg
mov
nop
adc
lahf
dec
ss
lds
jbe
in
ss
cs
fs
cmc
out
dec
jne
aad
jmp
sbb
cli
pop
insb
cwtl
bound
les
jl
rorb
push
cld
pop
inc
pop
xchg
inc
mov
negb
in
lahf
or
lahf
mov
into
or
mov
out
xor
dec
pop
enter
sbb
gs
dec
and
sub
sub
movsl
enter
mov
mov
cmp
lods
cmp
cmpsl
fwait
into
push
and
mov
orb
das
jmp
sar
pushl
fstl
and
push
test
lret
fcompp
push
adc
ja
and
push
call
cmp
cli
jae
into
cld
push
into
jge
sub
repz
pop
outsb
js
adc
pop
ds
enter
iret
fistpll
cli
pop
jb
insl
test
psrld
call
es
jae
and
fdivl
xchg
loope
lret
cmpsb
push
pushf
add
outsl
push
nop
fsubrs
or
mov
inc
fbstp
xorl
sbb
ffreep
jge
loop
sbb
lret
es
xchg
mov
in
mov
jns
pop
jl
push
test
mov
add
sub
cmp
loopne
add
push
push
dec
jp
jge
pop
mov
sbb
sbb
inc
and
inc
in
hlt
cs
outsb
mov
cld
xor
outsl
jg
pushf
idivl
lahf
movsl
mov
out
adc
or
cld
out
addr16
outsb
xchg
arpl
test
cwtl
push
push
mov
filds
test
mov
into
ljmp
fs
sub
add
aas
das
in
fisttpl
dec
mov
jae
sub
daa
cmp
add
jne
xchg
mov
add
add
in
jp
cmc
dec
and
sahf
mov
jbe
cltd
inc
icebp
fbstp
push
cmp
cld
insb
sbb
addr16
jmp
jge
xor
mov
je
mov
mov
jp
jne
mov
mov
xchg
jns
testb
mov
mov
inc
lock
stos
and
std
jmp
stc
mov
mov
xchg
and
add
aaa
mov
aad
sub
fwait
es
rorb
sub
ljmp
sahf
clc
cmp
orb
jge
cmp
dec
lret
push
mov
mov
testb
sub
jne
dec
inc
mov
pop
out
sub
je
pop
rclb
fisttpll
sub
hlt
lods
mov
and
mov
push
rorl
xchg
lods
cmc
mov
add
or
daa
sbb
jmp
sbb
lods
cmp
dec
or
push
sti
jp
jbe
or
jge
sbb
dec
mov
ja
aad
lret
push
lock
test
sub
xor
or
int3
or
mov
int
adc
ffree
mov
enter
mov
mov
push
add
pop
repz
ds
xor
andl
sahf
add
add
add
xchg
mov
insl
sbbl
and
sub
dec
cmp
add
je
iret
sbb
das
mov
icebp
loop
mov
scas
test
adc
mov
jnp
jecxz
repnz
leave
cld
loop
adc
aaa
call
adc
sub
sbb
insl
lcall
test
jae
adc
les
xor
cmp
insl
ds
mov
xchg
ss
mov
std
and
sub
or
nop
test
jbe
inc
movsl
mov
inc
sub
mov
mov
jns
pusha
or
jecxz
or
mov
pop
inc
add
shrl
mov
lcall
mov
dec
jl
mov
pop
fildll
pop
xor
xlat
push
fisttpll
sub
mov
pop
jne
out
iret
test
clc
pusha
mov
fcmovnbe
push
lds
jecxz
pusha
out
dec
and
cmp
fdivrs
dec
sbb
in
jmp
popa
gs
xchg
lea
add
cmc
inc
mov
sub
push
push
xor
or
je
pop
and
imul
lcall
test
lea
add
int
add
test
lds
jp
ss
xor
stc
test
jbe
xor
add
cli
rorb
mov
sbb
repnz
xchg
pushf
add
jg
mov
mov
or
in
mov
inc
sahf
cmp
and
adcb
push
inc
dec
out
test
xchg
out
jecxz
jbe
ja
scas
sbb
push
inc
dec
std
enter
jnp
push
mov
cmc
lods
xorb
loop
or
cmp
sub
pop
inc
mov
shlb
in
outsb
iret
pop
rcl
mov
dec
mov
xchg
add
jo
add
idivb
mov
into
nop
pop
ret
sbb
cmc
test
add
jnp
bound
mov
rcll
cmp
xor
sub
mov
repnz
aas
aas
rolb
jl
stos
sub
loopne
push
sbb
pushf
push
or
fildl
sti
jno
jne
stos
dec
jmp
sbb
sub
mov
shll
push
loope
repz
lret
mov
jmp
mov
call
stos
pop
adc
xor
and
mov
sbb
and
out
fcomip
cld
out
sub
push
outsb
or
in
dec
stos
sbb
jle
sbb
xor
addb
push
orb
test
mov
popf
sub
ja
das
jb
jne
clc
mov
jle
lcall
xchg
not
in
add
popa
movsl
mov
insb
aaa
xor
jle
jb
mov
cld
stos
and
out
mov
mov
mov
cs
sahf
or
adc
jne
adc
andl
lahf
jle
or
or
cmpsb
or
lea
test
sbb
aad
mov
testl
out
lcall
addr16
pop
test
enter
cwtl
push
scas
pop
popa
jp
test
xchg
icebp
cld
pop
adc
jge
xlat
aaa
adc
sti
mov
inc
insl
pusha
call
shrl
xchg
pushf
pop
dec
out
in
lods
rorl
imul
mov
pop
mov
hlt
jae
xchg
push
test
jl
ljmp
stos
sbb
out
cli
mov
cmp
cmp
pop
mov
stos
aaa
mov
push
or
mov
das
xchg
dec
scas
xor
and
enter
out
sar
xor
hlt
mov
sbb
xchg
pop
pop
cmp
jbe
pop
rcrl
add
scas
sub
ja
repnz
xchg
fdivl
adc
pop
dec
outsl
dec
lcall
xchg
and
out
push
and
mov
stc
mov
scas
pop
and
stos
sbb
mov
addr16
and
int3
loopne
xchg
inc
adc
or
inc
sub
mov
inc
andl
bnd
mov
xor
jae
in
inc
das
stc
movsl
sub
outsl
push
ss
cli
sub
xchg
pusha
mov
and
cmp
push
push
and
stos
mov
gs
pop
push
pop
inc
jne
jg
mov
cmp
xchg
sbb
sub
in
inc
fs
jno
lea
das
mov
in
add
fidivs
pop
stos
adc
ja
xchg
test
and
push
test
xchg
push
mov
jo
fxch
dec
adcl
sub
xor
sub
mov
mov
je
dec
jae
jb
lods
sbb
shll
mov
adc
mov
pop
xchg
xlat
out
adc
fcoms
mov
rolb
aaa
fdivs
scas
call
or
bound
jmp
imul
add
sbb
push
sub
in
and
cmp
mov
leave
aam
sbb
push
xchg
xchg
sbb
xchg
pop
lea
insl
adc
and
jne
out
add
jae
dec
sbb
lret
imul
ss
jnp
jmp
inc
lahf
mov
sbb
xchg
sbb
shlb
xor
imul
inc
loopne
and
sbb
jns
loop
insl
sub
je
sbb
enter
pusha
call
pop
xchg
lret
inc
adc
test
divps
xchg
push
cmp
out
cmp
bound
jmp
cwtl
mov
mov
mov
es
arpl
loop
or
add
jo
stos
cltd
subb
testb
clc
push
cltd
inc
or
xor
sub
clc
mov
dec
fistpl
or
or
push
cmc
push
mov
sbb
sbb
aaa
popa
mov
xchg
pop
mov
mov
cmc
daa
mov
mov
push
fcomi
and
inc
ret
rol
xor
call
std
ret
lds
push
sbb
mov
and
addl
pusha
pop
cwtl
cltd
add
xor
mov
cmpsb
addl
cld
and
ret
fs
xchg
lock
push
mov
or
mov
push
pop
cmc
push
hlt
or
js
ds
pop
jge
push
xor
das
mov
jne
sub
or
stos
dec
push
xor
jae
in
inc
ret
jmp
jbe,pn
int
shlb
push
xchg
xlat
sarb
lret
cmpsb
xchg
call
icebp
lock
or
sti
clc
cmp
je
js
data16
lahf
mov
cmp
cld
jecxz
jl
add
push
repnz
in
fildll
rcrb
dec
popf
ret
and
scas
jnp
iret
pusha
dec
pushf
and
lret
addr16
sbb
and
mov
clc
adc
push
in
push
test
sub
add
pop
xchg
xchg
fsubrl
decl
dec
push
sbb
out
pop
rcrb
sbb
movsl
xchg
and
mov
sub
mov
sub
inc
ja
je
loopne
cmp
mov
jl
push
aas
movsl
dec
lahf
and
and
xor
rolb
outsl
ja
dec
pop
jbe
scas
inc
repnz
cmpsb
xchg
mov
xchg
test
mov
stos
pop
xor
mov
cmp
dec
pop
sub
push
mov
je
cmp
fwait
ljmp
clc
hlt
test
repz
xchg
aas
fdivs
push
scas
cli
fs
xchg
int3
and
add
inc
test
inc
jge
mov
mov
inc
mov
mov
cmp
stos
cmp
sbbl
aam
clc
cmp
popf
jmp
xlat
shrl
aas
ret
sbb
xchg
lods
cmc
in
or
and
icebp
xor
mov
and
sbb
movsl
push
pop
or
nop
dec
and
repnz
sbb
mov
mov
mov
sub
xor
and
inc
sarb
test
jns
int3
test
jb
popf
xchg
jle
mov
sahf
push
faddl
iret
inc
pop
stos
sbb
lcall
xchg
lret
rcrl
mov
xor
or
sbb
cmp
repz
nop
mov
js
repz
push
dec
xorb
mov
std
adc
adc
push
rol
push
sub
cmp
fldcw
sti
inc
jbe
mov
inc
gs
aaa
lret
push
mov
mov
into
xor
add
bound
mov
xchg
sbb
pop
dec
and
int
gs
mov
jg
lds
imul
pop
shrb
es
clc
repnz
daa
xchg
mov
pop
call
inc
out
movl
xor
inc
movsl
bound
or
hlt
or
add
mov
aaa
testb
ds
scas
nop
hlt
mov
push
cmc
hlt
cmp
rorl
fwait
in
jbe
addr16
jns
enter
pop
imul
or
sub
push
rcrb
xchg
xorl
das
scas
clc
push
out
push
xor
stos
stos
lret
movsl
imul
mov
je
rcrb
add
xchg
sub
cmc
rcrl
cmc
inc
int3
jbe
cmpsl
xchg
push
mov
mov
test
jne
out
rcll
push
mov
cmovle
or
xor
ds
xchg
adc
inc
add
push
mov
lods
add
les
inc
repz
xchg
imul
and
adc
sub
cltd
outsb
nop
pop
out
mov
jns
cmp
test
gs
add
loopne
mov
leave
test
dec
pop
lcall
jb
cmc
pinsrw
idivl
push
sub
xor
or
jo
add
out
add
je
hlt
out
push
xor
fs
or
outsl
jg
aam
popa
push
add
sbb
arpl
stos
jecxz
and
loopne
inc
push
loop
inc
mov
cmp
mov
push
lret
inc
mov
out
add
bound
jg
cmp
xchg
sbb
fs
enter
dec
aaa
inc
sahf
mov
cmp
ss
and
cmp
into
add
mov
in
cmp
add
sbb
xor
out
lcall
test
xor
add
sub
pushl
cli
andb
fsubrl
mov
push
jo
aam
xchg
addr16
pushf
divb
mov
mov
gs
push
mov
repz
test
xchg
out
mov
lea
mov
xchg
add
in
nop
or
rcrl
and
jle
mov
xchg
pop
fwait
pop
insl
cmp
lods
pop
in
popa
lods
jl
rclb
add
jl
mov
fmul
daa
lea
add
and
mov
mov
mov
daa
add
mov
ret
inc
push
jae
shlb
or
adc
mov
aaa
mov
push
pop
xor
inc
add
mov
or
fiadds
fsubrs
jnp
xor
sbb
inc
push
mov
push
imul
mov
or
sti
dec
dec
mov
into
test
aad
out
mov
out
in
inc
mov
sbbb
pusha
out
popa
add
mov
mov
fiaddl
cmp
push
lods
sbb
mov
aaa
or
repnz
cmp
ds
push
sahf
xorb
adc
test
sub
mov
sti
dec
fsubp
xor
dec
mov
enter
cmp
and
cs
scas
xor
pop
xor
dec
cld
cmp
pop
shr
xchg
and
icebp
repnz
jb
or
sub
addl
xchg
int3
cli
pop
scas
or
out
std
test
xchg
jp
adc
adcl
jle
pop
fwait
add
fstl
xchg
subb
cmp
mov
and
pusha
mov
mov
aad
loopne
cmp
or
jae
mov
lea
es
push
pop
push
orl
add
lahf
fistps
mov
das
dec
push
mov
in
push
ljmp
sub
lds
les
mov
xchg
dec
sarl
add
iret
pusha
push
mov
mov
dec
dec
xor
pusha
xchg
insb
mov
jnp
pop
sbb
xchg
leave
insb
movsb
push
inc
fimull
sub
xchg
or
inc
shrb
cmp
and
jle
mov
adc
or
lret
sbb
xor
pop
std
xchg
mov
mov
xchg
adcb
lret
inc
cmp
add
mov
aam
inc
cld
adc
adc
insl
cmp
leave
mov
add
mov
dec
mov
movsl
les
repz
jmp
dec
stc
lods
mov
cmp
int
inc
in
xor
push
fdivs
dec
push
xor
popf
into
lock
lret
ret
push
dec
and
sbb
out
sub
jmp
inc
stos
sub
sbb
mov
mov
inc
int3
dec
gs
aam
mov
dec
daa
aas
dec
aaa
mov
icebp
mov
insl
cmp
mov
mov
jecxz
scas
mull
in
mov
push
call
sub
xchg
fadds
lahf
jb
mov
out
shrb
jbe
gs
mov
push
imulb
jnp
es
push
outsb
mov
stos
cmpsb
push
inc
and
adc
aad
fwait
dec
lahf
mov
jnp
inc
cltd
insl
hlt
cmp
popa
mov
cwtl
adc
fdivrs
cmpsl
lea
pop
roll
subb
or
cltd
mov
ret
fsts
arpl
mulb
test
xchg
lret
das
prefetch
adc
mov
sahf
push
jle
out
or
iret
sbb
imul
int
cmp
add
dec
pop
pop
dec
mov
int
popf
std
jmp
imull
je
jns
sbb
stos
mov
push
mov
stos
jno
sar
pop
push
std
stos
imul
enter
jne
xor
lgs
ret
lret
stos
sub
jo
pop
inc
xchg
mov
sub
inc
pusha
or
loopne
push
cmp
dec
test
inc
add
in
push
cmp
ret
scas
out
sub
dec
pop
add
xor
repz
xchg
and
or
stc
and
and
fimull
push
mov
fimuls
pop
dec
and
into
jle
test
xorb
movsl
out
fidivrl
mov
xor
hlt
push
mov
popf
andl
stc
xchg
mov
sub
mov
xchg
jb
test
xchg
inc
mov
add
movsl
popf
mov
cmp
cmp
insl
testl
loopne
mov
int3
lret
fwait
xor
add
nop
loop
xchg
adc
mov
lahf
es
cmp
jge
nop
arpl
bnd
inc
fsts
sub
mov
xlat
icebp
sub
orl
mov
push
jns
cs
cmovle
jge
xchg
sbbl
insl
fcomp
fisttps
dec
aaa
sub
pop
mov
notb
pop
dec
popf
xchg
push
sbb
and
sbb
xchg
call
aad
push
push
inc
mov
lods
jns
adc
cmp
pop
jge
shrb
insl
and
scas
push
xchg
je
mov
pop
mov
ret
decl
pop
mov
or
gs
inc
stc
push
mov
outsb
mov
leave
cs
pop
cli
popf
cmp
xchg
cli
xlat
je
mov
fsubrs
or
lock
repz
dec
dec
scas
lods
lds
stos
sar
xchg
sar
jmp
push
inc
cmp
mulb
ficompl
movl
adc
mov
xchg
sub
fsincos
popa
imul
pop
das
dec
outsb
push
imul
and
cld
push
jae
adc
push
lock
cmpsl
dec
cmp
scas
mov
test
movsl
mov
xor
mov
xor
mov
jns
imul
xchg
gs
out
scas
pop
pop
fbld
aad
xchg
inc
adc
mov
inc
dec
fwait
loop
push
xor
mov
jp
jae
movb
leave
push
loopne
jno
and
in
sbb
cs
push
mov
in
fsubs
xor
push
mov
mov
sbb
xor
jne
cmp
jnp
add
adc
mov
xchg
lock
stos
fistps
adc
lods
fdiv
aam
sbb
lock
movsb
shll
sti
jb
sbb
push
xchg
mov
pop
xlat
faddl
ret
loopne
sahf
xor
and
jge
fmul
test
insb
mov
and
xor
scas
aad
mov
stc
sub
daa
dec
nop
out
sub
ret
push
mov
loope
hlt
das
jecxz
mov
shll
mov
dec
int3
xchg
or
je
mov
shrb
scas
jmp
and
adcb
imul
scas
adc
dec
loopne
shrl
jl
push
xchg
fistl
xchg
mov
out
fistpl
gs
mov
adc
lret
xor
daa
push
xchg
mov
pushf
imul
out
mov
lods
adc
push
test
shrb
cld
aaa
cli
out
jne
adc
repnz
and
sub
xchg
aaa
test
inc
inc
js
call
push
in
movsl
xchg
sbb
xlat
jg
fs
add
int
roll
out
mov
dec
jle
fwait
scas
jnp
pop
ja
inc
mov
ficompl
lds
pop
shll
fs
sahf
cmpsl
push
xchg
mov
lds
aad
insl
pop
aaa
cld
icebp
dec
cmp
loop
fmuls
lahf
fwait
mov
jmp
pop
insl
cmp
imul
dec
sbb
mov
aam
xchg
aam
jne
push
xchg
mov
test
jl
sub
mov
inc
mov
lahf
push
pop
mov
mov
stos
nop
pop
jne
mov
pusha
sub
jge,pn
int3
cmp
push
loop
lcall
pushf
mov
and
jne
sub
fistl
lret
clc
jbe
inc
push
mov
fisubl
push
or
lods
dec
mov
dec
notb
push
and
enter
xchg
jge
cmp
push
pop
mov
sahf
xchg
pop
mov
mov
cmpsl
out
xor
pop
inc
fsubs
ficomps
movsb
jb
pop
pushf
imul
mov
pop
adc
imul
ja
movsl
lods
loop
push
cmp
mov
fisubs
pop
push
scas
jno
stc
je
mov
vpsrad
dec
in
mov
int
je
dec
lahf
mov
stos
inc
gs
cmc
std
lds
ret
cmp
les
dec
adc
icebp
outsl
lock
and
or
loope
hlt
adc
sarl
test
lea
dec
inc
ss
loope
movb
push
cmp
pop
mov
ja
pusha
pop
jne
sub
test
mov
xchg
mov
push
cs
fildl
cmp
push
ja
adc
notl
adc
xor
mov
sub
or
aam
mov
sub
adc
mov
mov
jmp
dec
push
xchg
or
sbbb
orb
dec
clc
loop
gs
cmp
or
cwtl
sub
shll
idiv
xor
mov
addr16
cmpsl
test
maskmovq
mov
mov
sarb
cmpsb
mov
mov
repnz
mov
inc
test
leave
lods
test
cmp
mov
mov
mov
xor
pop
loop
sahf
mov
fstl
xchg
mov
fs
add
sub
sbb
dec
test
adc
jne
ljmp
adc
mov
out
je
push
xor
test
inc
jnp
popf
mov
inc
sti
out
push
mov
add
test
icebp
inc
test
dec
push
repnz
xchg
aaa
fs
adc
mov
movsl
sbb
int
fistpl
add
and
push
jecxz
cmpsb
repz
push
mov
jo
fmull
xor
insl
mov
push
adc
mov
inc
outsl
vaddsubpd
rcrl
into
sub
mov
pusha
sub
insl
fdiv
xchg
jle
sahf
imul
mov
pop
cmp
and
pop
jp
sahf
mov
roll
sbb
cmp
lcall
add
mov
test
ds
repnz
dec
jb
or
loope
adc
out
aam
fmulp
pop
and
xor
aam
pushf
test
cmp
xlat
sbb
cmp
adc
jge,pt
mov
dec
mov
out
fidivl
movsl
push
shll
inc
clc
ss
or
in
sti
xchg
mov
repz
xor
push
cs
test
imul
dec
cs
or
mov
js
imull
add
mov
cmpsb
pop
mov
mov
jo
loopne
call
sbb
sub
cld
mov
push
or
inc
cmc
or
adc
pop
xchg
mov
and
pop
sbb
mov
lret
enter
cld
sarb
bswap
clc
test
add
jl
add
pop
hlt
mov
addr16
or
ss
cli
push
pop
fdivl
cmpsb
pop
mov
mov
pop
inc
mov
cmp
aad
mov
arpl
sub
pop
in
add
push
std
cwtl
subb
scas
rolb
ja
int3
repz
fwait
cli
ja,pt
pop
mov
daa
int3
cmp
sub
jecxz
jmp
jae
int3
xor
sub
mov
mov
adc
mov
push
enter
jo
in
xchg
adc
jns
fucomp
push
sub
lea
pop
stos
repnz
fs
pop
pop
push
mov
movsb
notb
dec
imul
outsb
fsubp
xchg
inc
push
test
jmp
inc
cltd
sbb
sbb
lahf
outsl
xchg
pop
jns
pop
stc
mov
dec
adc
mov
jno
fsubs
xchg
push
or
add
xchg
mov
sub
jnp
push
xchg
dec
xor
sub
jne
jmp
or
push
sbbl
sbb
int3
sbb
sbb
inc
push
or
rorl
lahf
sbb
or
jg
popl
xor
lahf
movsl
inc
sahf
gs
pop
push
xor
dec
mov
loop
mov
lods
lods
pusha
test
mov
fldenv
out
fwait
aas
aam
mov
xchg
adc
popf
jne
enter
xchg
stos
stos
and
test
ror
push
pushf
adc
je
xchg
mov
and
mov
mov
ret
cmp
pusha
pop
adc
repnz
fistl
icebp
lods
in
fldt
pop
sub
cwtl
inc
dec
push
scas
sbb
pop
popf
cwtl
push
push
out
sub
mov
jmp
mov
leave
or
xchg
mov
xor
jle
add
push
or
dec
xor
adc
dec
imul
xchg
inc
cmpsb
in
rorl
adc
ja
bound
call
idivb
enter
xchg
sbb
movsl
imul
mov
lahf
and
jo
clc
dec
add
pusha
fs
dec
push
adc
cwtl
or
mov
imul
out
lcall
lcall
sub
je
cs
cs
jmp
lcall
xchg
jns
dec
push
xchg
cmp
je
jnp
mov
mov
call
cs
mov
dec
jbe
ja
in
outsl
push
mov
insl
das
mov
mov
add
cmpsb
flds
sbb
mov
cwtl
mov
ret
jl
idivb
or
mov
mov
dec
adc
cli
lahf
icebp
xor
imull
mov
add
jmp
add
out
jle
fistl
push
and
sbb
cltd
lret
in
ljmp
cmp
mov
repnz
les
jo
mov
in
mov
ja
xchg
xor
xlat
inc
xor
xorb
and
nop
sbb
sbb
outsb
bound
insb
cmpl
mov
pop
inc
std
sbb
clc
repnz
repz
jmp
jl
das
pop
sbb
cwtl
sub
in
sub
stos
and
xchg
xchg
stos
popl
pop
insl
mov
jle
push
pop
ss
enter
or
inc
mov
fst
push
lcall
pop
enter
add
cmp
adc
or
pop
into
mov
sbb
stc
xor
cltd
jle
pop
pop
imul
mov
mov
push
scas
leave
push
add
iret
cltd
and
pop
mov
pop
mov
push
jl
les
mov
jae
or
add
addl
leave
inc
sbb
add
sbb
lods
orl
sub
and
dec
xchg
pop
and
bnd
xchg
jmp
push
sub
loopne
into
sahf
inc
es
fucomp
jmp
mov
inc
enter
fs
daa
push
mov
xchg
jns
mov
sub
pop
mov
xchg
xchg
cmp
xlat
mov
xchg
aaa
xor
pop
loop
or
or
ss
hlt
scas
adc
mov
cmp
xchg
dec
push
mov
jg
scas
push
sbb
push
dec
lcall
mov
xor
mov
cmp
mov
lret
sub
lock
or
pusha
push
pop
les
sahf
lds
mov
sti
and
push
xor
add
xchg
adc
cwtl
add
or
rcl
push
fs
push
lret
and
test
aas
and
jno
aas
and
mov
mov
popa
mov
outsl
or
mov
sbb
pop
aam
sbb
lret
out
aaa
dec
and
das
mov
push
clc
das
stos
push
int
mov
mov
sti
push
icebp
dec
aam
and
sbb
test
bound
xchg
pop
mov
inc
pop
dec
adc
cmp
sbb
sbb
lock
cmp
les
std
or
pop
sbb
daa
push
mov
mov
test
fcmovne
push
jb
jo
xor
mov
dec
cld
mov
and
jbe
cmp
jmp
repnz
leave
xchg
sbb
inc
aaa
jp,pn
divl
push
pusha
repnz
ffree
jl
mov
mov
xchg
leave
xorl
fnsave
push
xchg
dec
int3
push
add
cld
fistl
jns
jne
xor
std
xchg
outsb
addr16
outsl
in
pop
loopne
lcall
bound
aaa
mov
sbb
shll
imul
push
or
xchg
xchg
lret
push
mov
pop
adc
xor
add
into
aas
mov
fidivrl
adc
cmc
fisubs
aas
cmpb
ja
inc
ljmp
cmp
shll
mov
ret
jne
int
sbb
insl
movl
jns
cmc
outsl
jg
enter
push
jp
test
inc
mov
push
fwait
add
or
xchg
cmp
jbe
stc
mov
loope
cmp
mov
mov
add
lahf
or
mov
cmc
sub
leave
sub
jns
rclb
mov
push
imul
inc
jmp
or
inc
inc
pop
shrb
inc
pop
outsl
inc
movsl
enter
stos
jne
jge
xor
or
sbb
inc
shll
movsl
add
lock
test
sbb
ja
add
divl
popf
bswap
mov
inc
loopne
shl
jne
aas
add
cmp
sbb
pop
mov
or
or
jno
sub
movsl
scas
jmp
ja
imul
jecxz
mov
jg
push
sti
lea
test
and
popa
loop
xchg
jg
jp
test
stos
fwait
push
sbb
ret
inc
jl
mov
adcl
mov
xchg
fnstenv
js
cmp
xor
cmp
pop
add
jmp
lcall
pop
les
outsl
sub
fldt
and
sbb
pushf
rcll
mov
clc
popf
push
iret
mov
daa
inc
cmc
test
movsl
ss
outsb
jbe
mov
scas
lcall
and
cmp
adc
jns
jns
fiadds
out
mov
pop
aam
xlat
xor
pop
punpckldq
stos
mov
stos
mov
add
out
loopne
cmp
rcr
jb
cmp
cli
jnp
xor
adc
or
adc
add
lds
jmp
push
push
inc
inc
jecxz
aam
lret
dec
or
add
test
sbbb
xchg
jge
arpl
aad
fdivrs
mov
inc
pop
cld
sub
scas
inc
dec
jge
sub
test
loope
push
cmc
lds
push
jo
sbb
mov
aam
cmp
xchg
bts
sbb
flds
and
mov
pop
ljmp
scas
xchg
inc
or
in
insl
test
mov
aad
xchg
dec
subb
pop
sbb
daa
add
push
mov
andl
data16
jg
xor
hlt
andb
push
sub
adc
aam
sub
pop
lcall
adc
jnp
adc
loope
mov
mov
test
mov
fdivs
cmp
test
xchg
shll
mov
lret
enter
jle
repnz
scas
nop
mov
lret
cld
push
fcmove
movsl
sub
jns
dec
ret
cmp
or
leave
dec
or
mov
testl
ret
data16
mov
js
mov
aaa
jae
inc
rclb
jo
jns
push
mov
mull
xor
rcr
sub
fnsave
push
ljmp
xchg
imul
stc
rorl
outsb
push
adc
cwtl
inc
dec
sub
gs
shrl
push
lock
inc
sbb
pop
xor
xor
fs
and
push
fistl
cmpsl
mov
sub
push
sti
lahf
jge
adc
out
nop
add
lcall
cmc
sbb
xchg
loopne
lret
je
add
dec
hlt
mov
loop
lea
pop
dec
fwait
lcall
addl
pop
movsb
filds
push
daa
and
cmp
push
adc
inc
imul
push
dec
ja
xchg
sbb
insb
mov
inc
push
jnp
cmpsl
push
inc
inc
push
lcall
and
pushf
or
dec
push
mov
loope
sbb
testl
mov
ja
or
and
repnz
fstp
pop
sarl
incb
fcmovne
push
ret
cli
into
or
into
pop
arpl
mov
je
pop
adc
out
mov
jnp
out
add
dec
fnstsw
mov
lret
aad
stos
jle
push
enter
or
jmp
and
inc
lret
dec
push
add
cwtl
jg
rcrl
inc
call
sbb
in
lock
testb
mov
add
adcl
mov
adc
sub
jmp
jmp
dec
das
mov
push
mov
int
push
xor
arpl
call
es
jae
xor
das
iret
cmp
into
mov
and
inc
add
mov
aaa
xor
gs
js
lods
stos
out
mov
inc
adc
cs
push
xlat
jl
jl
pop
inc
js
jne
mov
stos
and
std
sbb
dec
sbb
adcl
xor
gs
xorb
sbb
push
loop
cs
bound
jmp
pop
add
ljmp
stc
push
jbe
orb
call
xchg
push
fcoml
into
das
addl
repnz
xor
cmp
xchg
call
cmpsl
ljmp
fidivs
lret
imul
test
xor
test
addb
push
clc
mov
jmp
lahf
mov
jne
dec
hlt
inc
fwait
enter
ja
and
xor
mov
add
lret
dec
test
jno
inc
cld
jl
jne
cmp
call
jae
cld
inc
mov
mov
aaa
mov
ja
adc
push
xor
out
lock
push
lea
fisttpll
inc
arpl
addr16
and
lods
mov
mov
mov
jbe
mov
adc
push
ds
lods
add
arpl
push
mov
dec
das
jg
out
jnp
lret
pop
inc
jl
push
and
pop
cmp
inc
push
pop
lcall
inc
stos
test
in
push
and
fsubp
push
test
or
push
dec
jl
inc
push
mov
std
mov
test
fldcw
sub
fldl
and
push
adc
cwtl
call
popf
loopne,pn
lds
or
adc
sbb
sbb
leave
jle
insl
push
mov
add
fstpl
insl
iret
pop
mov
mov
ret
ss
pusha
in
jno
lea
dec
pandn
mov
xchg
mov
xor
popl
inc
add
mov
mov
leave
cmp
cli
data16
inc
ret
inc
dec
std
ret
pushf
push
xor
fsubp
int
fs
add
loop
test
pop
push
test
movsb
xor
jg
mov
in
dec
clc
jnp
cld
into
adc
or
xor
cmp
sbb
inc
aad
out
rol
dec
daa
aad
push
pusha
repnz
rcr
orl
inc
dec
je
xchg
je
pop
mov
cli
cltd
js
je
mov
aad
xor
pop
jge
nop
in
repz
jp
gs
and
push
mov
scas
inc
rcr
xor
add
mov
loopne
ljmp
aaa
gs
xchg
rcr
icebp
in
sub
mov
and
jp
fmull
pop
sahf
add
jmp
out
mov
mov
dec
sbb
cmpsb
mov
cwtl
xor
fimull
push
addb
clc
fmull
fisttpl
push
popf
dec
jmp
and
jmp
jl
ljmp
dec
xor
fwait
cmpsl
push
pop
add
hlt
jge
movsb
dec
or
ffreep
cmpsb
rolb
push
pop
mov
jne
lods
inc
popf
lds
iret
cld
loop
negb
dec
addr16
jmp
mov
inc
dec
push
sbb
in
aaa
xchg
test
mov
jne
ss
nop
negb
push
je
outsb
stos
lret
mov
out
divb
jl
push
push
retw
rcll
add
fldenv
xor
in
fucomp
lods
add
iret
nop
xor
adc
std
mov
ret
rorl
test
and
fiaddl
pop
inc
sbb
pushf
ja
ficompl
imul
arpl
ss
outsb
cmpsl
inc
or
and
xchg
lret
push
or
pop
sbb
les
mov
cmp
and
aaa
jbe
cmp
insb
mov
gs
add
pop
sbb
negb
mov
inc
mov
cmovle
add
inc
push
and
pop
cmp
adc
mov
inc
cmp
or
xor
mov
icebp
dec
xchg
out
cmpsb
int3
dec
bound
fs
int
pop
add
xchg
mov
out
or
and
subl
or
xor
stc
push
cltd
cld
mov
jnp
sar
xchg
fxch
mov
loope
cmpsl
js
mov
cmc
cs
mov
std
add
push
sbb
hlt
sub
call
movsb
stos
xchg
out
jge
cwtl
pop
inc
popa
fwait
leave
xchg
sahf
mov
and
ss
dec
and
sbb
mov
push
jle
pop
notl
ret
std
push
cmc
adcl
mov
add
adc
outsb
loopne
inc
push
or
out
lods
dec
sbb
cli
xchg
ja
jo
out
loop
mov
movsl
out
ret
repz
outsl
xor
xor
and
sbbb
adc
xchg
incb
dec
cs
add
ret
fprem
xor
mov
mov
mov
inc
lret
imul
dec
movsb
mov
sub
mov
mov
lret
jno
jnp
sbb
push
dec
sub
iret
xor
shll
and
std
or
cmp
sbb
add
jl
cltd
ficoms
imul
aaa
insb
jecxz
imul
popf
cmp
inc
movsl
pop
inc
test
imul
xchg
push
xor
pop
inc
jge
pop
fcoms
jp
or
or
mov
xchg
xor
sbb
int
das
ror
mov
lret
xchg
jns
or
scas
cld
sbb
scas
mov
add
aaa
jmp
add
cmp
pop
lds
push
lods
dec
ljmp
push
das
adc
pop
push
pop
push
test
mov
lods
and
in
xchg
lahf
xchg
cld
push
clc
in
sti
ja
dec
addr16
push
adc
cmpb
inc
dec
xchg
jl
and
adc
push
dec
adc
sbb
cmp
movl
fcomps
cmp
repnz
pop
add
jmp
clc
mov
in
push
decb
xlat
das
inc
pop
test
pop
pop
lods
std
pop
push
and
mov
cmp
lock
dec
mov
dec
mov
fwait
and
mov
in
cli
dec
arpl
add
xchg
push
ljmp
add
out
les
test
jns
testl
adc
add
in
and
push
loope
jmp
mov
adc
mov
pusha
in
and
inc
add
mov
outsl
popf
sahf
lock
int3
push
sbb
das
in
jo
dec
test
or
xchg
xchg
push
xchg
sub
movsl
xchg
stos
inc
ds
fisttpl
scas
decl
cltd
and
pop
insb
push
and
cmovne
and
inc
jno
adc
mov
inc
clc
subl
fadd
enter
pop
out
cmp
cmp
or
cmp
adc
xchg
add
cmp
les
bound
dec
sbb
or
pop
inc
or
push
inc
push
add
sbb
cmp
adc
insb
jns
test
adc
les
sbb
pop
jb
test
ret
and
mov
rolb
ret
jg
into
dec
stc
sbb
pop
fstpl
or
test
or
mov
in
mov
cmp
xor
fcoml
cmp
push
gs
xor
popa
mov
decb
enter
orb
pushf
mov
fcmovnb
push
out
jne
mov
stc
pop
add
repz
icebp
pushl
pop
imul
and
push
adc
sbb
lods
aam
out
push
push
cmp
stos
inc
lods
cmp
loope
aaa
pop
mov
lret
sub
fs
jb
mov
dec
cmp
or
inc
cmpsl
mov
loopne
mov
aad
add
adc
xor
and
pop
arpl
rcr
cmc
push
dec
push
and
mov
in
hlt
add
frstor
adc
inc
fdivr
pusha
inc
inc
in
enter
nop
int3
ja
xor
test
adc
jae
mov
xchg
jno
bswap
fadds
pop
stos
and
test
xchg
dec
mov
fisubs
mov
lock
push
lods
adc
imul
lcall
sbb
mov
adc
jp
dec
push
loopne
cmp
jnp
fcomp
ss
fnstenv
or
notl
sti
inc
xchg
xchg
jbe
push
ret
push
out
ret
std
jl
mov
xlat
fcmovnbe
add
cmpsb
pop
push
cltd
push
rolb
sbb
xchg
dec
sbb
cmp
cmp
call
push
lahf
int
in
sbb
test
jno
in
mov
push
fiadds
xchg
mov
sub
mov
notb
cmc
test
inc
hlt
jle
xor
xchg
add
mov
add
mov
call
push
pop
out
xchg
cmp
dec
pop
inc
push
int
push
mov
jnp
push
mov
and
cwtl
inc
or
in
mov
push
inc
xchg
sub
daa
jmp
xchg
pushf
das
in
push
dec
cmp
inc
ds
sbb
imul
pop
xchg
jp
push
push
stos
cmp
in
loopne
lods
pushf
js
int3
jge
or
and
lds
lret
xchg
je
push
and
nop
add
push
lret
pop
adc
out
in
jnp
xchg
gs
fwait
pop
inc
sbbl
bound
das
xor
jle
fildl
jmp
mov
or
add
add
xchg
icebp
jg
xchg
jp
xchg
in
push
sahf
jle
clc
adc
mov
icebp
ja
das
jg
outsb
cmc
sub
dec
adc
adc
js
dec
sub
outsb
jbe
loope
pop
dec
inc
pop
sub
insb
xor
or
sti
push
lods
subl
fs
divb
mov
pusha
andl
sub
mov
pusha
dec
imul
mov
xor
adc
sti
sub
cmp
ljmp
push
inc
mov
lahf
int
call
iret
xor
push
sub
out
jle
xor
repz
fbstp
stc
negb
in
dec
ror
inc
adc
pushf
cli
pop
adc
add
inc
jo
mov
in
das
dec
imul
xchg
arpl
aas
jno
adc
pop
decl
mov
pop
jno
mov
repz
lock
xchg
pop
mov
push
jmp
adc
cwtl
xor
test
pop
fucomip
jle
imul
and
ja
xor
or
jp
cltd
fdivs
jno
aaa
mov
jmp
iret
insb
rolb
mov
cmp
roll
clc
push
jmp
stc
imul
add
or
pushf
push
mov
mov
fwait
cltd
xor
sub
mov
lcall
inc
sti
es
mov
in
clc
pop
xchg
cmc
repz
add
sub
or
xchg
jo
adcl
cmp
adc
shll
daa
test
orl
stc
inc
stos
es
xor
sbb
lods
cmp
and
push
test
jmp
popf
incb
loope
mov
ret
jge
out
mov
sub
inc
rol
or
jp
pop
call
jne
data16
xchg
aad
movsl
lds
mov
aaa
cmp
cmc
xor
and
sub
lahf
lahf
mov
mov
xorl
xor
dec
jecxz
or
pop
xchg
mov
xchg
je
mov
jne
xchg
sub
iret
fs
sahf
mov
aaa
ret
push
lcall
negl
cmp
push
push
sbb
adc
imul
cld
rsm
sbb
iret
mov
add
iret
jno
sbb
push
ss
add
lea
ret
fmul
jg
pop
mov
sbb
popf
dec
js
rcr
sbb
fnstcw
pop
adc
call
push
dec
in
pop
ja
insl
push
test
sbbl
push
stos
shlb
addr16
mov
loopne
sbb
jno
push
dec
pop
pop
jmp
add
fdivrl
repnz
sub
shll
mov
push
mov
mov
aas
mov
jmp
fistpl
add
mov
cltd
push
pushf
push
mov
mov
jecxz
inc
push
jnp
rcrb
loop
mov
sub
adc
cmp
in
fs
popa
xchg
and
hlt
mov
sbb
pushf
cmc
xor
xor
sub
rcr
mov
and
jnp
test
testl
movl
push
inc
in
fcompl
mov
push
pop
arpl
es
rcrl
mov
fildl
out
or
cmp
sti
daa
popf
loop
mov
jle
sbb
or
ja
mov
icebp
jl
sahf
mov
xor
pop
mov
cltd
add
mov
insl
sbb
aas
addl
mov
fldenv
inc
loope
aam
xchg
out
rcl
insb
cltd
and
dec
scas
stos
dec
dec
pop
pop
dec
cmp
sbb
imul
imul
push
jae
mov
sbb
sub
fistpll
std
and
adc
aas
xchg
in
lock
scas
xchg
cmp
fists
outsb
nop
sbb
cwtl
sbbb
mov
xchg
sbb
cmp
outsb
cmpsb
jmp
mov
xchg
jmp
sbb
adc
movsl
fwait
loope,pt
add
pushf
lods
inc
into
clc
jl
pop
outsl
pop
repz
add
les
push
or
add
mov
sahf
je
cmc
ret
adc
cmp
fxch
insl
xor
mov
out
bound
and
ljmp
aam
pop
sub
jp
ficoms
mov
shr
call
pushf
cmpsl
ja
adc
inc
in
cmp
and
aad
inc
mov
pushf
call
push
cmp
clc
mov
sbb
push
test
pop
pushf
push
fcmovu
jbe
jmp
mov
jmp
shlb
repnz
aas
jns
shrl
stos
push
movsb
ret
jmp
jle
in
sub
aad
mov
or
int
jno
cmp
repnz
nop
rorl
and
bound
and
das
mov
cmp
pop
inc
daa
adc
sti
and
data16
add
stos
inc
aaa
movsb
les
pop
aaa
inc
pusha
out
into
mov
fimuls
das
lock
scas
xchg
mov
jmp
icebp
or
in
arpl
mov
jmp
dec
or
cmp
sbb
push
lea
rol
cmp
push
adc
popa
test
fisttpl
sarl
sub
jp
adc
testl
shll
pop
cmp
sbb
aam
aam
scas
inc
fidivrs
stos
sahf
mov
jl
pusha
enter
test
sti
dec
jp
bound
xchg
outsb
test
arpl
rcl
add
push
xor
ud1
pop
mov
add
outsb
js
fiaddl
into
sub
inc
and
sbb
gs
xchg
sbb
adc
lahf
dec
jnp
push
or
adc
dec
mov
cli
dec
mov
cmp
cmpsb
fisubrs
cld
mov
test
cmp
dec
rorb
scas
test
pop
cmp
push
movsl
mov
mov
pop
mov
test
clc
pop
sub
inc
pop
jmp
adc
and
das
add
pop
popa
mov
pusha
js
cmp
mov
push
or
push
or
fwait
in
sub
sub
mov
cwtl
popa
out
pusha
mov
stos
mov
xor
jnp
lock
cs
mov
testl
aaa
stos
adc
aaa
int
fisubl
test
clc
jecxz
xchg
aaa
lea
cmp
clc
push
push
rcll
fs
dec
inc
pusha
test
outsl
pop
pushf
mov
mov
jb
cltd
mov
and
movsl
test
mov
shrl
and
mov
cld
mov
or
outsl
push
rcll
mov
inc
or
idivb
pushf
push
xor
xor
xor
cmp
sub
xlat
lret
sbb
in
jo
xchg
out
and
dec
xor
in
jne
fisubl
sbbb
shlb
popl
out
inc
jmp
cld
sub
movsb
aas
mov
sbb
lea
cmp
and
fcoms
cmp
gs
jp
idivl
pop
mov
sbb
pop
decl
fcomps
test
mov
loopne
jnp
popa
jbe
fwait
popf
lea
sub
push
cmp
pop
or
jno
jecxz
ja
mov
out
cmpsl
mov
repz
fistps
pushf
jnp
push
pop
inc
add
xchg
adc
andb
sub
mov
pop
pop
mov
movsb
push
ret
push
cmp
sub
stos
bound
cmpb
and
lods
cwtl
cmp
mov
mov
sub
inc
jp
loope
shll
add
inc
mov
addr16
lods
out
test
arpl
mov
mov
popf
mov
out
or
popa
sti
jp
lea
cmp
cmc
add
ljmp
cli
push
and
mov
jnp
inc
loopne
outsl
out
fstl
cmp
ficompl
and
outsb
add
in
mov
mov
adc
mov
movl
push
ss
les
ds
or
jb
jns
ljmp
cmp
sub
punpcklwd
xor
xchg
popf
insl
mov
repz
loopne
cs
lcall
pop
mov
mov
dec
idiv
pop
xor
push
movsl
jge
insl
loopne
arpl
test
js
sub
pop
imul
lret
cld
hlt
std
jnp
mov
push
and
and
fsubp
push
pop
cmp
loop
fs
mov
rcr
jmp
cmc
ljmp
sub
jae
daa
jb
mov
xchg
frstor
xor
cmpsb
daa
xchg
mov
fists
pop
pushf
es
mov
addl
jo
shlb
daa
xorl
shr
push
or
push
or
sub
lcall
pushf
fcoms
loop,pn
rorl
imul
aas
pusha
cmp
xchg
mov
testl
push
fsubs
ljmp
fsubrs
mov
pushf
lock
or
jmp
or
sub
push
arpl
out
sub
cmpsb
xchg
es
negl
push
clc
jp
push
and
jae
xor
fsubl
cld
sbb
adc
insl
shlb
pop
sub
into
xor
test
push
outsb
popa
dec
jnp
pop
jae
popa
mov
sbb
xchg
inc
jo
add
jno
dec
lcall
mov
xor
xlat
loop
adc
jge
repz
std
pop
push
jmp
fld
les
mov
int3
mov
sbb
and
movsl
ret
lock
loopne
testl
inc
cltd
ljmp
mov
mov
ficoml
in
mov
rol
xor
subb
mov
test
lock
mov
movsl
js
sti
pushf
outsb
not
ljmp
imul
sbb
mov
fstl
push
imul
and
or
dec
sbb
cld
and
rorl
jle
insl
pop
pop
jmp
int3
test
jae
pop
or
rolb
leave
hlt
sbb
or
lcall
mov
loop
jns
stos
clc
clc
pop
hlt
lock
addr16
jne
push
addr16
ret
enter
xor
fcomip
shlb
iret
push
adc
pop
fldl
enter
mov
outsb
clc
dec
sub
js
loopne
xchg
xchg
add
adc
push
int
pop
insl
movnti
stos
sbb
jg
pop
jno
and
in
adc
xor
lods
sahf
shl
nop
pop
sahf
imulb
push
xor
sbb
dec
cmp
dec
add
into
xchg
outsl
gs
outsl
jg
adc
dec
mov
adc
add
sub
jae
pop
jb
sahf
jnp
cmp
daa
scas
int3
cli
cmp
cwtl
dec
scas
and
scas
sub
add
stos
dec
sub
mov
mov
xorb
jle
mov
rorl
mov
pop
mov
cmpsl
addl
jno
cmp
insb
sub
test
aas
test
adc
xor
mov
ja
jl
in
roll
lods
xchg
mov
mov
scas
sub
lea
aaa
mov
insb
or
lods
incl
jmp
pop
add
xlat
push
hlt
or
cld
push
push
jne
cltd
push
or
jmp
fwait
lods
xchg
adc
in
lahf
jae
leave
insb
dec
cmpsl
xchg
and
cltd
call
jg
inc
incl
cltd
lea
loope
ret
xchg
inc
xchg
jo
test
lret
in
lods
pop
adc
dec
and
inc
decb
mov
inc
test
mov
adc
enter
stos
adc
ljmp
mov
fdiv
mov
mov
pop
ret
aad
pop
or
pop
ret
lret
jae
ss
cmc
fmull
repz
pop
test
or
and
inc
jb
inc
mov
mov
lods
mov
js
xor
mov
dec
testb
push
add
cmpsb
fsubl
imul
pop
ja
mov
pushf
xchg
add
add
andl
sub
ljmp
add
push
and
dec
xor
add
or
xchg
testl
test
jb
mov
fmull
dec
push
sub
lret
and
mov
jnp
in
out
adc
shrl
add
lock
popf
dec
cmp
add
push
ret
out
jl
ret
out
pop
jge
dec
aad
pop
jns
add
les
outsl
cs
insl
aas
clc
jp
or
mov
sub
xchg
push
shll
pop
stos
inc
and
xchg
imul
les
icebp
in
jno
dec
arpl
flds
test
jno
fisubrl
pushf
nop
mov
add
leave
cmpsb
out
and
jbe
mov
test
out
pop
iret
xchg
and
mov
push
mov
iret
xlat
das
popf
push
imul
pop
xchg
cmp
pop
add
sbbl
xlat
cmc
dec
pop
mov
push
xchg
push
inc
out
pop
je
aaa
mov
push
popf
jg
jo
pop
jmp
je
sub
in
pop
mov
data16
jmp
mov
adc
hlt
xor
inc
stos
movsb
lahf
lock
fs
xor
cmpsb
int3
dec
add
mov
aaa
dec
sub
iret
lods
xlat
loope
bnd
jno
cmp
lcall
xchg
add
mov
sub
cmp
and
or
pop
push
xchg
and
cs
sbb
xor
iret
xchg
into
call
xchg
repz
mov
cs
ret
mov
cmpsl
popf
pushf
and
sub
jbe
push
mov
repz
fstps
sbb
add
jns
stc
jb
push
mov
add
dec
mov
dec
push
cmp
data16
cmpsb
bnd
sar
or
addl
xchg
jg
inc
int
mov
adcl
ss
out
popa
insl
push
retw
popa
cmp
jg
iret
das
int
sub
jns
adc
clc
je
sbb
movsl
repz
inc
inc
lock
cmp
mov
xor
and
out
jno
lds
out
jb
mov
das
dec
stos
mov
or
sub
push
fwait
cmc
test
popf
xlat
mov
fadds
and
or
fs
mov
lret
insl
enter
stos
cmpsb
jbe
push
inc
fistpl
sbb
inc
mov
cmpsb
jnp
sub
and
xchg
pop
mov
jge
movsl
jae
pop
or
repz
adc
cmpb
sbbl
pop
or
mov
sub
lahf
iret
data16
out
push
push
cli
xor
jb
inc
cmp
iret
pop
jecxz
fs
mov
mov
outsb
or
and
cmp
cmp
cltd
sbbl
insb
sbb
mov
push
or
jmp
sbb
dec
xor
adc
sbb
int3
add
icebp
icebp
bound
jmp
rep
jp
jns
mov
cltd
xchg
fcos
xor
lods
addr16
add
mov
mov
sub
decl
shlb
jle
push
repz
mov
push
dec
aaa
dec
sbb
add
mov
lret
dec
jp
movsb
popa
div
lock
int
fistpll
mov
test
cltd
adc
xlat
fcomps
das
jmp
insb
xor
inc
cltd
popa
mov
dec
jne
cmpsl
loopne
inc
sbb
mov
inc
in
xor
jnp
stc
inc
sub
ja
mov
cld
jnp
sub
xchg
push
or
adc
add
cmp
sub
shlb
clc
sbb
jle
xor
fldl
jb
imulb
xchg
jge
int3
daa
pop
push
push
sub
push
fmuls
xchg
out
loopne
sbb
loopne
out
in
xchg
mov
ficoml
lods
cmp
pop
fstpt
outsl
adc
in
cmp
int
test
xor
mov
leave
scas
cmp
xor
dec
int3
lock
nop
pusha
push
add
rorb
lea
sub
dec
int
icebp
push
test
dec
into
loopne
test
jp
testl
jecxz,pn
test
jg
fcoml
arpl
loopne
push
addr16
sbbb
push
jecxz
mov
ss
jle
in
ret
negl
in
mov
push
push
cmpsb
fldenv
xor
sbb
pop
popa
jno
scas
xchg
nop
fists
sub
pop
sub
cltd
mov
dec
insl
xchg
inc
cs
ja
ror
mov
data16
fadds
add
jle
add
xchg
shlb
mov
adc
fcomps
lcall
adc
insl
add
dec
in
dec
inc
inc
mov
pop
inc
cmp
mov
test
aad
ret
or
sub
in
inc
and
cli
inc
xchg
aam
cli
fadds
inc
lret
int3
popa
pop
stos
mov
sbb
sub
push
xchg
outsl
cs
dec
ss
mov
push
push
out
jns
inc
pusha
add
into
fs
xor
ud1
repnz
iret
test
dec
mov
bound
ds
icebp
or
repz
mov
dec
outsb
cltd
int
mov
mov
fwait
je
mov
data16
sarb
and
int
sbb
les
dec
xchg
iret
mov
divl
jbe
vcvtqq2psx
shlb
adc
mov
rolb
or
xor
ljmp
and
push
ljmp
mov
scas
mov
scas
xchg
out
flds
rorb
pop
xchg
movsl
push
test
xchg
push
cmp
std
jnp
sahf
dec
inc
popa
mov
cwtl
nop
ja
push
mov
inc
mov
and
loop
mov
jmp
cmp
repz
stc
nop
jb
adcl
idivl
sub
je
mov
js
sbb
out
and
sbb
iret
adc
and
icebp
pop
ljmp
push
dec
mov
xor
rcl
xor
dec
test
stc
fldl
xor
jmp
push
insb
jb
stos
lret
icebp
and
push
xor
adc
cld
push
fs
cmp
imul
add
int3
ret
data16
mov
pushf
push
push
jns
or
lock
lea
mov
add
inc
or
mov
pusha
sbb
mov
cmp
pop
leave
les
fistpl
imul
push
aad
mov
or
mov
jbe
jne,pt
inc
pop
repnz
sbb
repz
out
arpl
bsf
icebp
and
mov
cmp
sarl
cld
mov
in
sbbb
ds
mov
cmp
xchg
adc
dec
fscale
fs
pop
lods
jo
sub
pop
jno
mov
std
mov
mov
sbb
or
cmp
mov
jnp
inc
in
cmp
stc
out
mov
cmpsb
and
faddp
xchg
xchg
adc
jmp
in
inc
sub
xor
out
rol
out
mov
jns
inc
cmp
push
loopne
pop
cwtl
add
cmp
jg
int3
fiadds
sub
and
mov
loopne
xor
lock
out
pop
jmp
add
xor
bswap
xlat
mov
xor
sbbl
sbb
out
cmp
add
jl
pushl
shr
in
xor
push
pop
loop
enter
jns
push
into
ss
and
cmpsb
jnp
cmp
nop
test
sbb
xchg
outsl
pusha
and
or
insb
inc
lret
xchg
stos
fs
out
clc
sub
dec
gs
push
ret
stos
lds
cld
pop
fsubrs
or
sub
aas
mov
pop
pop
cmp
mov
jb
push
stc
sub
mov
ljmp
cmp
insb
jg
orb
inc
pop
sahf
cmp
ror
es
dec
xchg
cmp
fcomps
cmc
sbb
cmp
out
mov
xchg
lods
sbb
inc
lret
inc
jge
xor
mov
xchg
xorb
test
and
loop
adc
inc
mov
and
sbb
mov
add
push
pushf
mov
scas
push
push
push
adc
sub
inc
aad
ds
aad
cmc
lret
jg
mov
pop
push
xchg
sbb
sub
push
jb
sub
mov
pop
lahf
mov
mov
push
jg
cmp
test
fsubrl
jge
xchg
adcl
sub
popf
lret
ficompl
paddw
outsl
icebp
out
xor
js
shll
mov
mov
mov
jecxz
imul
shl
jb
xchg
shrl
in
add
pushf
mov
lods
fcomps
push
out
aam
mov
inc
lahf
repz
adc
pop
inc
pusha
ljmp
dec
add
add
jb
sbb
ficomps
xor
or
sahf
ja
sub
add
cmp
test
lret
outsl
cwtl
dec
add
jns
insl
popf
add
and
jnp
mov
mov
jbe
mov
cmc
in
push
mov
jge
cs
sarb
and
lret
inc
sti
push
out
mov
push
jns
fsts
push
dec
jle
pop
or
out
cs
xor
dec
xor
mov
xor
xor
cmp
popa
fstl
jge
and
lcall
inc
iret
cli
orl
mov
mov
orb
jo
movsb
inc
sahf
lcall
cmp
aaa
push
mov
sub
fidivrl
dec
lock
push
mov
nop
sti
bound
cmp
and
inc
and
mov
mov
dec
add
sbbl
loop
xchg
add
cmp
and
lret
roll
mov
aas
lods
out
das
xlat
lret
dec
arpl
leave
xchg
dec
fldcw
arpl
movsl
xor
or
or
mov
insl
in
push
mov
mov
fiadds
movsl
pushf
lods
mov
rolb
adc
mov
sti
xchg
lods
outsb
out
xchg
out
xorb
rorb
add
push
adc
lahf
jecxz
push
push
xor
xchg
push
and
dec
cmp
push
mov
das
inc
xor
pusha
push
cwtl
cld
sbb
outsl
imul
adc
and
roll
sbb
inc
mov
mov
outsb
ret
aaa
addr16
inc
test
stos
pop
insb
or
mov
mov
in
pop
je
mov
pop
mov
pop
loopne
insb
jnp
mov
sub
mov
mov
shll
mov
aad
incl
xchg
dec
stos
ljmp
inc
enter
push
jno
sub
ljmp
popf
test
cmpsl
cmp
ja
and
or
fcoml
subb
mov
jo
mov
dec
cmp
mov
inc
lods
add
push
push
cmp
ljmp
ret
push
popf
add
ja
pop
hlt
js
nop
cmp
rol
ja
mov
and
fstp
xor
nop
jo
pop
cmp
sbb
pop
je
neg
push
insb
in
jo
rorl
cmp
push
repz
in
lock
aam
or
xchg
mov
data16
ss
outsb
ljmp
push
add
and
mov
push
lret
mov
out
mov
cltd
and
sub
fnstenv
sbb
popf
mov
dec
adc
leave
mov
es
outsb
adc
xor
test
pop
sub
fcom
jns
mov
ret
mov
cwtl
movsb
leave
popf
imul
adc
dec
xchg
cmp
inc
mov
cli
push
jbe
cwtl
or
mov
stos
insb
ja
jmp
add
cmpsl
movsb
add
out
mov
and
dec
push
roll
push
or
mov
and
cmp
pop
test
mov
inc
movl
push
gs
mov
push
lea
sub
sub
xchg
les
subl
cmp
mov
and
cli
insl
jo
loopne
data16
push
les
cmpsl
mov
dec
sahf
sbb
xor
sub
xor
stos
pop
mov
jo
mov
lods
and
mov
sbb
cmp
in
mov
mov
xor
adc
cs
enter
test
mov
aam
dec
pusha
sbb
mov
push
into
rclb
mov
mov
adc
or
pushf
xchg
push
jne
jnp
mov
xchg
dec
pop
or
jl
lods
loop
xor
outsl
inc
pushf
cld
xor
adc
mov
mov
cmp
insl
mov
or
sti
lea
ret
movsb
pop
ljmp
adc
es
pusha
dec
lea
xchg
adc
push
test
mov
lds
push
ja
inc
adc
fnsave
cmp
cmp
push
in
cld
inc
and
pop
xchg
into
sti
sbb
xor
inc
fs
iret
orb
jbe
movl
aaa
nop
adc
jge
aaa
pop
sbb
daa
shrb
jle
fisubl
mov
ja
jae
sbb
ljmp
pop
cmp
std
pop
xchg
push
cmp
int3
pop
adc
lock
inc
scas
pop
sub
out
dec
bound
xchg
sahf
into
sahf
dec
adc
dec
or
mov
dec
ds
push
adc
inc
sub
mov
jno
sub
loop
pop
cmpsb
sti
inc
cmpsb
pop
scas
adc
leave
jno
mov
mov
jnp
jne
cltd
or
mov
xor
lret
add
xchg
sub
dec
inc
loop
lods
imul
adcb
les
in
mov
xchg
pop
fs
loop
adc
mov
pop
imul
inc
pop
add
sbb
sub
add
sbb
shrb
cmc
sub
ss
pop
mov
add
sub
lea
cmp
push
pusha
fcompl
ja
mov
shlb
aaa
mov
mov
sbb
shl
jnp
repnz
xchg
jp
sbb
jp
xchg
xor
push
jns
and
arpl
add
out
mov
push
xchg
jmp
lock
aaa
pop
fstl
add
int3
mov
sub
mov
pop
add
pop
lret
mov
insl
fwait
xchg
scas
xor
cmp
shl
pusha
push
add
nop
ret
xchg
imul
movsl
idiv
rcl
repz
mov
ret
in
pop
or
popf
push
dec
pusha
das
pop
out
xor
scas
leave
in
dec
and
push
es
xchg
clc
pop
pop
mov
cli
and
push
mov
push
inc
jne
lcall
inc
xor
sbb
dec
inc
cmp
sub
test
lock
cld
push
xor
xor
sub
jno
sbb
mov
jge
push
aas
xor
jno
pop
push
mov
xchg
push
in
ds
stos
scas
push
cmp
push
xor
imul
cmp
popf
enter
rcl
fistpl
sub
mov
scas
stc
xor
xor
arpl
ja
test
push
mov
xchg
daa
and
jnp
push
mov
jne
sub
jno
in
popl
sub
xlat
cmp
jg
sbb
fldl
inc
cmp
iret
sub
stc
insb
out
pushf
jle
hlt
sti
or
in
push
push
cmpb
mov
inc
in
dec
xor
sub
sbb
lods
mov
fwait
outsb
xor
test
mov
pop
cmp
cmp
icebp
mov
cli
ljmp
dec
test
sbb
sbb
mov
dec
jp
cmp
and
cmp
add
push
ljmp
xor
mov
lret
outsb
iret
clc
stos
cmp
shrb
xor
ret
data16
sti
adc
andb
into
xchg
aaa
sub
xorb
xor
and
lahf
and
cmp
cmp
xchg
ljmp
icebp
xchg
pop
loope
mov
ret
sub
dec
repnz
lahf
xor
mov
jbe
xor
in
or
push
out
outsl
bswap
push
out
mov
xor
sub
mov
cli
sti
push
xchg
xchg
fcmovb
inc
mov
push
clc
sbb
cmp
xlat
clc
flds
push
ja
sub
xchg
fistpll
xchg
adc
mov
aas
pushf
xchg
daa
das
in
dec
jo
pushf
std
mov
lret
push
fisttpll
pusha
pop
sbb
into
inc
or
scas
sahf
cmpsl
lret
into
test
rcl
cmp
xchg
push
sti
fsubrs
mov
movsl
pop
outsb
les
inc
sbb
jnp
and
mov
push
addb
jnp
jle
mov
sti
pop
insl
lcall
mov
add
mov
dec
or
inc
insb
add
mov
dec
or
dec
fildl
xchg
cld
jb
jnp
mov
pop
lret
cmp
jne
adc
and
adc
mov
in
loopne
inc
rcrl
xchg
popf
dec
xor
dec
jecxz
lock
jecxz
mov
aad
sbb
xchg
ljmp
mov
pop
das
mov
mov
call
jl
mov
mov
pop
jmp
xchg
lea
int
push
push
mov
jo
punpcklwd
xlat
out
pop
andl
push
repnz
aad
ret
push
sbb
sbbb
add
dec
movswl
push
std
int
mov
mov
xchg
sub
fldl
cmpsl
pop
call
fdivs
jmp
cmp
sbb
pop
rcl
lret
xor
xlat
push
sub
loopne
ds
xchg
inc
cmpsb
inc
lock
inc
mov
mov
in
stc
push
pop
add
ds
push
arpl
dec
sbbl
inc
or
ljmp
add
cmp
push
std
xchg
push
stos
add
lret
jno
cmc
aad
cwtl
pusha
dec
cmp
sbb
fs
js
jo
and
mov
mov
mov
cltd
in
cmp
xchg
mov
cmp
push
mov
sub
sub
paddq
add
fidivs
out
add
jns
xor
cmpsb
push
call
pop
pop
and
fwait
dec
jo
jb
xchg
fisubrs
push
mov
jo
test
aaa
sbbl
pushf
cmp
and
daa
jne
and
and
add
ja
cmpsl
mov
inc
jns
les
mov
pushf
mov
xchg
call
or
jno
inc
cmp
pop
inc
jp
xor
jae
sbb
cltd
lea
out
and
rol
xchg
push
fisubs
ja
and
mov
mov
and
repz
or
push
or
mov
mov
mov
outsl
ds
and
in
movsb
clc
xor
aas
mov
pop
sbbb
movsl
push
dec
and
add
clc
repz
xor
sbb
shlb
push
pop
jb
js
enter
enter
dec
and
out
decl
in
inc
es
jns
mov
scas
dec
cmp
mov
ret
mov
adc
js
jle
or
inc
add
pop
fisttpll
mov
nop
fmull
idiv
mov
jmp
insl
out
bound
mov
sub
call
mov
dec
add
iret
sarb
push
lcall
rcrb
test
aas
dec
adc
and
adc
fdivr
inc
int3
out
mov
pop
movsb
cmpsl
or
movsb
out
cld
xor
int3
sub
mov
fadds
dec
imul
dec
stos
mov
adc
push
mov
fdiv
scas
push
das
in
and
or
in
cltd
aad
js
pop
inc
outsl
lea
cmpsl
lret
or
iret
lcall
xor
inc
fldenv
in
mov
mov
sub
mov
divb
sub
inc
mov
inc
insl
add
pushf
sub
mov
fwait
test
sbb
ja
adc
js
stos
push
inc
jp
pop
pop
mov
xor
outsb
cmp
xchg
mov
mov
and
push
movsb
jns
mov
jns
pop
mov
arpl
lret
jmp
inc
mov
pop
std
shl
and
call
push
xor
push
popa
xor
stos
das
ficompl
lods
inc
jno
std
pop
push
jle
inc
mov
mov
enter
movsb
lock
inc
add
popa
leave
jbe
int3
arpl
cmp
and
xor
sub
popa
add
add
enter
pop
ja
xchg
sub
mov
cwtl
pop
fmuls
icebp
push
lods
pushf
adc
data16
or
mov
into
mov
inc
ret
aaa
repz
lret
jl
test
xor
cltd
and
adc
add
or
inc
and
pop
movsl
or
pop
adc
loope
xor
and
jmp
clc
mulb
call
inc
lea
xchg
cltd
add
mov
pop
jno
sbb
mov
push
mov
js
jg
in
rorl
mov
out
loopne
rclb
or
call
adc
dec
xchg
mov
jo
adc
hlt
ljmp
call
pop
dec
mov
cmp
inc
mov
les
stc
jle
insl
ljmp
xor
notl
xchg
shl
insl
outsb
fwait
adc
jbe
mov
pushf
inc
jbe
push
sbb
inc
dec
lds
out
sub
fistps
push
push
add
xor
les
ret
and
inc
inc
sti
sub
insl
out
inc
adc
fs
pop
subb
mov
testb
fsub
mov
bound
adc
xchg
pop
inc
nop
sub
sub
or
dec
stc
aad
jne
xor
ret
lcall
mov
rcll
addl
mov
fistps
stc
inc
mov
icebp
dec
adc
cmp
lods
lret
push
jp
cmp
push
iret
push
jecxz
ja
mov
imulb
and
sub
push
fs
cli
mov
loope
sbb
dec
in
push
stc
lods
xchg
or
popf
mov
push
and
cs
dec
fdivrl
lret
rcrl
inc
inc
pop
out
cmp
sarb
call
jle
xchg
imul
xor
xor
stos
add
aaa
xchg
into
xorb
jae
ret
dec
jb,pn
fs
stos
into
fidivl
adc
or
pop
pop
push
dec
mov
dec
jg
lock
dec
jp
push
dec
ljmp
lods
jno
lock
xchg
pusha
lock
std
sbb
addr16
test
out
push
xchg
sub
es
jmp
and
lds
lret
sbb
in
adc
sbb
pushw
push
xchg
pop
xor
push
lock
mov
mov
bound
mov
mov
mov
xchg
push
out
xchg
mov
push
push
add
in
js
test
sti
cmpsb
fidivrs
mov
sbb
mov
inc
pop
mov
jns
jne
xchg
push
imul
lds
sub
leave
inc
lret
in
xchg
push
inc
adcl
push
push
scas
cmp
pop
sbb
rcrl
fbld
dec
push
adc
ficompl
jecxz
mov
jne
pop
insb
mov
imul
sub
mov
andl
cmp
sub
outsl
xchg
xlat
je
sub
pop
cmpsl
mov
mov
popa
cmpsl
loope
in
adc
push
or
xchg
icebp
orl
mov
lock
movsb
jb
push
and
mov
and
mov
jb
mov
hlt
add
jle
adc
in
push
dec
sub
mulb
mov
out
cmpsb
jb
mov
push
pop
pop
les
imul
ljmp
dec
lea
inc
filds
mov
aam
xchg
xchg
or
push
ficomps
cmp
test
adc
jge
into
lcall
scas
pop
imul
sbb
pop
or
jle
lea
mov
push
pop
mov
cwtl
pop
mov
iret
gs
insb
pop
pop
adc
push
adc
aaa
jp
dec
popf
repnz
test
cmp
std
fs
inc
lret
jl
cmp
xor
adc
xchg
lods
pop
push
jnp
and
loop
and
mov
jne
xlat
mov
pop
xchg
sbb
and
push
bnd
pop
jae
dec
and
push
lds
stc
pop
xor
jge
in
pop
dec
cmp
jge
dec
int
inc
push
jge
lock
ret
loopne
dec
sub
push
filds
arpl
xlat
xchg
mov
mov
jno
mov
xchg
in
rolb
mov
mov
pop
jo
jnp
int
pop
push
test
aad
pop
xchg
pop
push
loope
mov
adc
mov
out
je
scas
jp
xchg
mov
xchg
sub
jnp
rolb
repz
out
adc
aad
mov
mov
les
mov
xchg
xchg
mov
xchg
cmpsb
cs
inc
addr16
push
sbb
push
sahf
jge
mov
cmp
mov
out
in
daa
or
lret
mov
mov
or
or
cmp
movsb
mov
inc
sbb
pop
sub
cltd
aam
dec
fnstcw
cmp
inc
jg
adc
mov
jp
pop
mov
pop
std
loop
and
xor
das
addb
jg
ret
rorl
hlt
sysret
add
mov
push
nop
jnp
loop
cmc
cmpb
xchg
ljmp
jb
dec
data16
sub
jge
dec
sarl
sti
jecxz
aam
in
mov
lods
inc
push
fildl
cli
fiadds
outsb
cmp
pop
or
movups
mov
mov
push
xchg
aad
and
repz
adc
push
mov
push
call
leave
jp
sub
hlt
adc
mov
xor
or
jecxz
lods
xchg
xchg
push
sti
rol
ret
xor
outsb
clc
mulb
mov
pusha
aas
aaa
lahf
in
jg
jb
push
mov
jmp
add
loop
mov
xchg
fnstsw
pop
sub
add
stos
sbb
pop
dec
jbe
orl
faddl
sahf
cmpsl
popa
ds
cmp
add
test
jp
cmpsl
ret
cmp
movsb
and
inc
lret
sub
les
cmp
adc
inc
gs
cmp
icebp
cmp
stos
cmp
cmc
je
movsb
aam
inc
scas
inc
inc
xchg
pop
and
xlat
pop
inc
and
out
mov
mov
sub
mov
xchg
pop
test
push
jge
push
sarb
ljmp
cmc
jns
andl
jl
push
aas
inc
push
shlb
dec
les
push
sbb
push
call
into
add
cmpsl
and
dec
pop
imul
dec
inc
jo
jne
arpl
inc
add
lea
dec
std
mov
sbb
cmc
jbe
aas
rcrb
mov
mov
sbb
outsb
and
popa
pusha
gs
fistps
cmp
lahf
cs
push
mov
pop
movsl
jnp
sub
cmp
and
pop
add
push
loope
scas
jns
inc
mov
and
mov
fadds
insb
dec
and
xchg
hlt
in
or
mov
into
cmp
repz
add
xchg
sar
lret
pusha
xor
push
cmp
into
daa
in
xor
incb
je
xchg
daa
mov
push
mov
sub
out
and
mov
add
imul
lcall
or
mov
scas
mov
xor
clc
inc
in
adcb
lods
mov
dec
fs
leave
movsl
inc
sbb
jmp
sub
stos
pop
or
lods
and
push
lods
adc
in
loope
lock
xor
subb
adc
cmc
pusha
adc
push
loopne
add
jge
adc
sarb
and
cs
cmp
cli
sbb
divb
pop
dec
dec
pop
pop
lcallw
cld
dec
fcompl
adc
into
mov
dec
sahf
push
pop
jge
mov
dec
pop
xlat
jmp
lahf
xchg
in
shlb
cmp
data16
mov
ret
pop
jg
sbbb
daa
xor
cltd
fstps
dec
xchg
enter
mov
add
sti
jnp
push
daa
scas
sahf
sub
cwtl
mov
fptan
arpl
push
add
pop
lds
dec
das
daa
mov
sbbl
ljmp
ret
lahf
xchg
xchg
pop
push
imul
mov
daa
mov
iret
xor
mov
leave
sbb
ljmp
loop
mov
aam
xor
repnz
or
ja
iret
cli
sub
fbstp
pop
dec
loop
add
jmp
push
aad
cli
and
out
inc
scas
mov
mov
sarl
repnz
sub
loopne
pop
psubusb
pop
cwtl
mov
movsl
inc
xchg
cwtl
shll
mov
ret
lods
addl
jmp
mov
mov
sbb
adc
add
fs
movsl
aaa
fildll
maskmovq
idivl
xchg
inc
outsl
adc
sarb
int
int
mov
lret
or
es
lcall
cmpsb
fs
mov
fnstenv
jg
jnp
add
jmp
cmc
fldt
test
sbb
jne
icebp
bound
movsl
mov
mov
sub
int
fs
outsb
sahf
int3
push
es
push
andnps
lcall
jns
loop
out
and
xchg
lcall
cmp
cmp
and
int
cmp
dec
push
pop
cmc
and
in
push
xchg
enter
das
push
mov
int3
jg
ret
imul
popa
sub
mov
ljmp
std
shl
pusha
jmp
cmp
or
cmpsl
adc
aam
icebp
test
mov
push
adc
leave
cmc
xor
aad
fildll
fnstcw
in
hlt
mov
push
add
push
dec
adc
jbe
cli
sbb
mov
aaa
mov
and
in
mov
dec
test
sub
and
jle
pop
pop
movsb
scas
sub
loopne
xchg
shrl
fcmovne
inc
push
sub
hlt
add
sbb
pop
int
jge
scas
ja
lahf
clc
shll
push
pushf
mov
or
mov
cmpsb
mov
jae
sahf
stos
sub
dec
daa
and
or
es
mov
xchg
jg
jno
mov
push
jmp
push
stos
xchg
imul
push
lea
rolb
fisttpll
sti
out
int
inc
pop
jmp
insb
lret
loopne
aam
into
xor
lahf
sahf
add
imul
add
in
popa
imul
mov
jle
xchg
jo
jecxz
popf
jge
push
and
shll
fldl
pop
mov
jno
inc
dec
jnp
push
and
push
mov
leave
inc
ja
fidivl
inc
std
in
adc
mov
jge
rolb
xchg
push
sub
xchg
sub
adc
and
jbe
pusha
std
mov
das
fs
femms
std
pop
outsb
jno
push
jno
jmp
cmp
aad
js
test
cmp
xor
and
mov
mov
or
enter
adc
lcall
inc
shlb
dec
pop
xchg
aas
or
sub
pop
rcrb
andl
pusha
cmpsb
xchg
mov
dec
enter
in
fwait
sahf
pusha
jecxz
ljmp
or
pop
fcmovbe
cmc
jp
arpl
testb
call
jae
inc
xlat
neg
push
dec
lret
iret
das
rol
je
mov
xchg
lcall
roll
aam
xchg
insb
addr16
ret
cmp
cwtl
enter
movsb
and
cli
pop
ja
cmpl
aas
xor
ljmp
enter
dec
mov
mov
ret
test
lret
mov
sub
push
add
in
add
and
aam
add
shlb
sbb
stos
out
push
push
ret
dec
push
sub
bound
inc
ja
stc
andl
push
repnz
mov
cmp
mov
xor
mov
data16
and
dec
imul
arpl
ret
mov
fidivs
and
push
push
cmc
adc
shlb
je
jmp
jne
jl
adc
add
sub
out
xchg
jb
adc
rorl
inc
pop
icebp
mov
enter
ljmp
mov
leave
test
sub
xchg
outsb
lock
dec
repnz
lds
imul
mov
jmp
mov
jns
mov
aam
shll
xchg
pop
loope
mov
inc
push
xchg
stc
in
jno
mov
push
jb
subb
push
cmp
in
pop
jae
cmp
jo
pop
mov
jnp
xchg
stos
test
sub
pop
add
jbe
jmp
push
mov
cmc
mov
popf
mov
xor
mov
test
pop
add
pop
mov
out
cmp
xlat
leave
sbb
push
fadd
cltd
fs
xorl
ds
decb
xor
dec
nop
xchg
cwtl
or
cs
jo
pavgw
loope
adc
shlb
cmpsb
mov
outsl
cmpsb
xor
push
jo
or
incb
cmp
sub
sub
push
ja
inc
out
cmp
jo
xchg
mov
cmp
mulb
mov
cmp
icebp
dec
popf
loopne
inc
cltd
mov
popa
shll
nop
mov
insl
out
pop
stos
pop
loopne
loopne
sub
kmovw
das
pop
mov
push
in
xor
cli
mov
negl
iretw
les
sbb
or
adc
xor
jge
lahf
xchg
mov
into
adc
xor
loop
movsl
rorl
in
xchg
mov
fwait
jg
in
xchg
pop
adc
mov
sarl
das
jbe
fbstp
stc
jno
shrb
out
mov
notl
in
or
outsl
push
fwait
sub
cmpsb
lcall
xor
mov
mov
sbb
iret
jmp
mov
cmpb
mov
iret
push
daa
inc
aad
mov
pop
push
adc
xchg
and
aam
pop
add
mov
lods
or
loopne
xor
loop
inc
and
jmp
jmp
pusha
pop
push
xorb
aad
dec
shll
adc
dec
fcomp
inc
adc
je
add
jno
imulb
std
scas
daa
cmp
and
pop
in
mov
inc
and
addr16
pop
mov
or
out
stos
and
cmp
sbb
add
pushl
int
mov
mov
outsb
push
ja
mov
jnp
dec
cmp
cli
inc
lret
mov
loop
pop
dec
or
roll
fldt
roll
mov
fs
and
les
or
ljmp
add
inc
mov
push
xchg
sub
add
push
mov
popf
pop
push
mov
adc
sub
cmpsb
jmp
es
fdivr
enter
push
jbe,pn
lods
mov
xor
xchg
add
pop
hlt
test
enter
cmp
or
mov
cmp
pop
push
add
scas
jb
lcall
daa
mov
sahf
adc
adc
ja
push
adc
leave
call
add
movsb
movsb
add
pop
movsb
inc
dec
dec
lret
vmovlps
repz
mov
adc
aad
out
in
xchg
sub
pop
jo
xchg
mov
push
inc
pop
mov
push
dec
add
iret
aad
inc
out
movntps
inc
sub
inc
xlat
test
out
mov
mov
daa
sbb
adc
scas
sahf
aad
pop
cmpsl
add
dec
xor
fisttpll
inc
sub
stc
adc
movb
in
dec
ljmp
xchg
adc
je
jl
pushf
mov
mov
cmc
outsl
int
mov
xor
fbld
adc
xor
jbe
imul
lea
aaa
cmpsl
or
out
aam
sbb
hlt
out
repz
je
adc
xchg
mov
je
lahf
cltd
add
dec
mov
icebp
fnsave
and
push
imul
sub
pop
or
jle
or
mov
xchg
test
sarl
nop
hlt
call
int
jo
addr16
hlt
in
mov
stos
cmpsb
adc
repnz
imul
jne
loope
mov
stc
mov
cmp
dec
jnp
push
insb
cwtl
ficomps
mov
cmc
in
xchg
inc
loopne
lret
jns
push
out
rcr
add
pop
jb
loop
adc
jmp
sti
mov
repz
mov
dec
pop
int3
dec
inc
shrl
mov
cmp
xlat
cmc
out
jl
test
repz
add
jmp
inc
fsubrs
mov
xor
int
jl
mov
pop
sub
sub
rorb
adc
cmpsb
aas
shlb
mov
jb
test
mov
ret
aas
insl
xchg
addr16
fisttpl
xchg
push
jns
ja
lcall
in
movsl
in
movl
ret
adc
xor
jne
jae
sub
repz
loopne
push
push
adc
fistl
sbb
enter
mov
pusha
fists
adc
cmp
xchg
lods
sub
push
xor
popf
mov
test
sbb
mov
sbb
in
ljmp
cmpsl
fildll
push
add
dec
or
push
or
jecxz
jge
adc
push
shrl
ficompl
insl
test
mov
fstl
jb
into
shll
xor
sahf
cwtl
and
daa
and
push
icebp
mov
mov
leave
lds
rcl
push
fs
arpl
loop
sbb
push
xchg
or
xchg
inc
js
mov
mov
inc
xchg
or
outsl
mov
loopne
sbb
adc
dec
repz
mov
arpl
push
sub
into
into
shll
jns
clc
cwtl
push
inc
and
loop
cmpsb
add
outsb
out
mov
jns
jno
mov
mov
mov
dec
dec
out
pop
cmp
cmc
pop
test
fists
iret
scas
cmpsl
faddp
push
icebp
cmp
stos
aas
fdivrl
les
xor
pop
lea
jge
bound
rol
jmp
pop
jnp
push
cmpsb
inc
lea
sbb
mov
leave
popf
jne
mov
loope
push
xchg
mov
loop
loop
xchg
jae
jbe
rcrb
fistps
push
sahf
repnz
jl
or
mov
das
add
pop
les
mov
and
jg
lock
or
cwtl
or
or
test
sub
pusha
lods
jmp
sets
out
cltd
sub
outsl
ror
mov
dec
loope,pn
test
outsl
push
int3
fstps
push
jge
fnstcw
xchg
stos
xchg
adc
xchg
pop
icebp
sub
ljmp
and
das
in
out
xchg
mov
cmp
add
push
lods
xlat
pop
add
nop
imul
nop
mov
into
mov
movsb
push
dec
cmp
xchg
scas
mov
and
out
stos
jmp
clc
xor
test
sub
fiadds
adc
sbb
sub
out
push
enter
mov
and
mov
shrb
cmp
inc
les
insb
das
sub
mov
clc
movsb
dec
xchg
gs
pushf
stos
dec
cwtl
pop
in
int
mov
ret
stc
je
cwtd
sbb
sbb
add
out
mov
pop
jo
cmp
adc
sub
into
lret
rol
fsubs
mov
mov
mov
ret
dec
xchg
cmp
scas
xchg
inc
or
mov
mov
movsb
std
and
in
sbb
xchg
mov
icebp
mov
sub
pop
in
adc
add
movsl
inc
cwtl
ljmp
call
push
jge
lret
sarl
lret
cmp
fistpl
push
mov
push
inc
jg
rcll
pushl
jle
mov
stos
inc
sub
ffree
into
sbbl
xchg
rcrl
sahf
in
subb
loope
inc
fdiv
adcb
sbb
sbb
scas
loop
xchg
mov
pop
aad
ret
subb
ss
cmp
jb
xor
enter
outsb
orl
jmp
ljmp
mov
outsl
dec
cmp
mov
scas
rsqrtps
xchg
jp
mov
adc
add
pop
fldenv
les
push
mov
jne
pop
dec
mov
mov
inc
xor
imul
inc
jl
addl
addl
ja
lods
cli
adc
out
leave
and
lods
cmp
outsb
and
jecxz
sti
ret
ret
jmp
dec
ljmp
xchg
mov
inc
xchg
mov
repz
pop
test
movsb
or
jae
in
loop
mov
lret
lds
jl
nop
outsb
and
lret
adc
mov
mov
mov
fidivrs
inc
ret
xchg
mull
xchg
loop
cmpsl
hlt
xchg
sbb
and
cs
enter
mov
leave
push
dec
jmp
cwtl
addr16
lds
xor
xor
scas
andb
movsl
fistl
cwtl
mov
xchg
mov
outsl
push
cwtl
adc
cmpsb
xchg
ret
push
xor
pusha
mov
fld
cmp
popf
test
xchg
inc
and
cmc
jo
xchg
push
cmpsb
push
jmp
jb
mov
aad
mov
pop
imul
pop
repz
inc
shrl
loope
icebp
jmp
gs
jg
mov
xchg
popa
out
hlt
and
rcrb
jmp
gs
jno
ja
or
sbb
add
mov
jne
imul
push
mov
jge
inc
je
addb
jg
das
in
xchg
dec
sbb
push
hlt
in
cs
mov
cmp
stc
rcrb
push
xor
mov
rolb
sub
jb
jb
test
xor
cs
cmp
stc
ret
imul
jne
imulb
jl
ret
dec
mov
push
fdivs
mov
sub
sub
cmpsl
sub
mov
pop
xchg
pop
inc
inc
push
pop
jno
push
adc
or
inc
enter
imul
push
jl
mov
outsb
stc
or
mov
enter
mov
mov
adc
call
xor
into
ret
stos
test
pop
xor
les
aaa
mov
push
test
xchg
adc
cmp
and
pop
lea
les
test
adc
dec
push
and
dec
jne
and
mov
lods
mov
fsubr
fcompl
bound
dec
xchg
out
mov
test
addr16
fdivrl
test
pushf
mov
aaa
xchg
jge
cmp
and
jae
int
xchg
jb
push
arpl
cld
add
ja
enter
aad
pushf
and
adc
shrl
mov
decb
fbstp
arpl
mov
rol
das
mov
popf
sti
inc
dec
popa
cmp
mov
dec
in
xchg
mov
out
xchg
fcmove
push
cmpsb
xchg
enter
mov
in
mov
cltd
mov
inc
test
adc
andl
pop
xor
lea
adc
push
mov
add
inc
xchg
stc
sub
leave
sub
pop
pop
inc
sub
cwtl
or
xlat
fidivrs
in
sarl
cli
aam
mov
loope
xor
loop
add
cmp
lcall
enter
iret
adc
out
movb
popa
cwtl
lret
aad
addl
lret
mov
arpl
xchg
hlt
dec
inc
je
das
addr16
mov
js
add
movsl
cmp
cmp
sbb
mov
loop
les
xor
nop
sbb
pop
call
mov
pushf
dec
or
jp
push
pop
mov
jmp
and
pop
pop
xchg
add
int3
and
int3
inc
cmp
mov
adc
cmp
fisubl
popf
int
mov
xor
mov
inc
aaa
divb
call
xor
repz
or
mov
and
rcrl
in
adc
dec
scas
xchg
or
push
xlat
clc
pop
mov
push
mov
icebp
lock
into
es
out
xchg
jb
jp
scas
jecxz
fidivl
lods
xchg
insb
gs
xlat
pop
jne
xchg
repz
insl
jl
pop
int3
xor
xchg
and
xor
ret
in
int3
cmp
out
aaa
push
leave
mov
pop
loope
sbb
jbe
mov
inc
push
cwtl
cmp
adc
mov
shll
sti
mov
lock
push
jl
insb
mov
shrl
shr
add
jecxz
imul
xchg
clc
mov
jne
push
dec
lahf
mov
add
lret
popa
enter
loop
adc
mov
std
rcr
xor
or
rcr
into
push
xor
mov
jge
jge
pushf
inc
cli
daa
adc
sbb
shll
push
fnsave
xorb
xor
test
sahf
cmp
cltd
dec
and
cmp
cmpsl
pop
adc
into
ds
loope
icebp
pop
sbb
dec
add
out
xchg
xor
iret
xor
jno
out
hlt
loope
adc
inc
add
push
mov
sbb
nop
cmp
movsb
fsubs
daa
ficompl
sub
push
jnp
push
push
int3
shrl
pop
repz
movsl
out
outsl
enter
flds
mov
add
mov
jecxz
push
pop
gs
add
cwtl
hlt
addr16
pop
jg
add
lret
in
mov
pushf
and
cmpsl
mov
inc
leave
inc
iret
push
add
xchg
in
repnz
pop
xchg
sbb
adc
xor
mov
or
cmp
xor
xor
ja
dec
jmp
je
add
lcallw
dec
dec
pop
out
es
pop
repz
ljmp
jbe
gs
enter
xor
das
and
xor
adc
fstl
pop
mov
push
jne
pop
sub
pop
push
loope
inc
sbb
lea
jmp
sbb
sub
or
cli
lcall
test
outsb
imul
lds
ftst
jg
inc
or
lret
pusha
jmp
int
dec
pop
inc
orb
faddl
sub
pushf
nop
xor
daa
sbb
aaa
jb
push
jb
cld
jle
cmpsb
rcl
int
push
or
shlb
clc
orl
mov
sbb
call
or
push
lea
xor
add
cmc
scas
aaa
cs
jb
das
jge
repnz
mov
xchg
inc
lds
enter
inc
add
gs
cmpsl
and
mov
xor
cltd
and
add
dec
and
lea
in
pop
inc
mov
pop
mov
cmp
sbb
aaa
pusha
or
rcll
add
ret
or
inc
mov
imul
into
pop
jbe
push
add
jo
add
out
gs
cmp
fs
or
aam
ret
sub
cmc
js
jns
mov
int
mov
fs
daa
daa
inc
pop
call
dec
pushf
loopne
and
testb
cmp
leave
lret
mov
push
cmpsl
out
adc
loop
orl
aas
loop
idiv
xor
pop
mov
movsb
test
sub
movsl
adc
sub
iret
inc
sbb
lahf
fisubl
jmp
std
inc
in
adc
inc
les
popf
in
add
adc
das
loopne
negb
sub
mov
or
add
shrb
fwait
adc
cmpsl
sub
mov
lock
mov
call
sub
push
pop
pop
pop
adc
lea
mov
fwait
scas
hlt
cwtl
enter
rolb
jmp
dec
in
pop
int3
inc
test
loop
sti
dec
xchg
cmc
mov
inc
fs
inc
cmp
cmp
ret
sbb
test
jne
xchg
jbe
add
nop
test
test
xchg
js
mulb
rol
push
inc
ss
push
inc
pop
aam
mov
fucomip
ret
test
ret
xor
shrb
xchg
lcall
jo
testb
sub
leave
pop
xchg
flds
lret
lods
jbe
jbe
orb
in
test
ja
sbb
adc
cmp
fwait
xor
xchg
fisubrl
mov
fistpll
xor
inc
adc
mov
mov
adc
and
pop
and
sbb
pop
mov
inc
orl
addr16
and
inc
pop
movsb
das
test
insl
inc
lret
lcall
pop
icebp
in
insl
cmp
lret
dec
cs
mov
fistps
out
scas
in
cmp
popa
xchg
mov
pop
jno
arpl
or
adc
dec
shrl
xchg
and
or
cmp
sahf
rclb
xor
xchg
sbbl
fisubs
cli
and
sbb
arpl
push
push
outsb
rcl
jp
add
es
cli
adc
negb
inc
iret
sbb
test
sub
rcr
xchg
fcompl
ja
lahf
push
xor
pop
stos
mov
inc
loopne
lahf
jns
leave
sbb
adc
xor
mov
scas
dec
lods
insl
adc
mov
fildll
sub
daa
test
dec
add
in
lds
xchg
fisttps
and
sub
lds
adc
add
pop
and
dec
stos
inc
jnp
inc
daa
ficomps
add
push
rclb
push
fdivl
scas
cltd
pop
cmp
cmp
out
mov
inc
lret
or
repnz
push
clc
inc
xlat
xchg
stc
cmp
clc
pop
dec
adc
adc
cmc
pop
lods
in
adc
mov
in
adc
fcoml
sub
arpl
addr16
mov
sbb
adc
in
jnp
jmp
add
jg
dec
xor
pop
lcall
pop
and
loop
pop
adc
or
pop
jg
jne
xor
lea
and
xchg
push
push
or
iret
mov
fistpll
shlb
test
mov
or
dec
repz
xlat
in
idivb
cmpsb
push
xchg
cmp
in
movsb
cmp
dec
xchg
ret
dec
mov
jmp
leave
sub
jns
popf
mov
adc
mov
xor
xchg
inc
aad
testb
mov
mov
adc
decl
loopne
call
test
fbstp
and
sbb
sbb
shll
cltd
cmp
call
add
ds
call
xor
pop
das
popf
movsb
lret
outsb
mov
cmp
dec
arpl
aaa
adc
pop
nop
out
es
push
cmp
sub
fisubrl
pop
mov
dec
int3
mov
mov
int3
aam
aaa
sbb
pop
add
mov
mov
mov
inc
les
xor
mov
add
jge
in
jge
adc
aad
or
addr16
and
sbb
push
lods
fistps
cmp
ds
adc
sub
pop
outsb
ljmp
adc
js
mov
sti
lahf
mov
ret
adc
add
test
pop
ss
lea
or
cmpsl
into
inc
inc
adc
pop
out
shr
scas
repz
mov
enter
xchg
push
test
jp
outsl
jb
nop
mov
std
lahf
imul
out
sbb
cltd
ljmp
ret
cs
cltd
mov
pusha
pop
mov
inc
push
mov
or
adc
loop
or
jns
jl
mov
pop
jge
sarl
push
loop
cmc
es
add
dec
stos
sub
dec
fnsave
add
xor
inc
pmulhuw
adc
loope
xchg
inc
push
les
sahf
xor
movsb
int
mov
sub
data16
imul
xlat
mov
loope
sti
mov
fldl
dec
lea
js
fwait
nop
enter
jno
mov
lods
into
or
les
xor
fdivrl
mov
jae
pop
push
mov
push
fidivrl
mov
loopne
ret
in
lea
bound
fcmovbe
in
popf
or
sub
iret
jg
xchg
add
mov
mov
mov
popa
mov
push
and
cli
sub
xor
fcmovnu
shrl
or
scas
ret
add
mov
xorl
xchg
mov
fisubs
lods
sub
push
sub
lea
add
pop
insl
test
ja
loope
cmp
fstpl
mov
adc
loope
fwait
or
daa
jbe
stos
daa
jp
push
in
pop
adc
jno
inc
adc
jae
dec
imul
aam
shl
sti
xor
lods
push
mov
inc
test
loop
mov
fsubrl
leave
enter
aam
mov
mov
dec
cmp
xchg
adc
cltd
jo
subl
aad
xor
ret
push
lahf
inc
inc
aam
icebp
cmp
icebp
or
pop
cmp
in
or
ja
push
mov
add
add
adc
sbb
addl
adc
filds
add
cmp
xor
popa
cmp
mov
mov
cs
sahf
sub
mov
push
adc
and
clc
in
pop
jae
push
cld
je
int3
daa
lds
fwait
push
stos
inc
lea
mov
mov
negl
sub
pushw
inc
or
lods
or
jge
sbb
and
lahf
or
and
jnp
dec
xchg
test
push
and
mov
fwait
loope
push
pop
in
push
cmp
jnp
aas
daa
pop
dec
movsb
leave
pusha
je
call
mov
js
pop
xor
mov
cmp
cmp
int3
adc
outsl
decb
jb
cmp
rclb
jae
stc
pop
sub
hlt
add
std
vxorps
xor
push
in
add
ja
enter
daa
adc
cmpsl
mov
rcrb
inc
fs
je
mov
mov
sbb
push
push
jge
andb
js
push
sarl
sbb
mov
dec
cli
ror
xor
mov
jb
popa
mov
filds
fs
dec
sub
mov
inc
sub
fsin
insb
mov
lahf
mov
ret
arpl
ret
or
loop
popa
sub
xchg
mov
test
push
jnp
jge
test
incb
pop
les
sub
dec
jge
push
lods
loope
or
in
cmpsb
daa
push
in
pop
test
or
mov
xor
add
in
mov
movsb
inc
pop
mov
adc
add
pushf
mov
push
out
pop
sbb
stos
and
xchg
xchg
or
inc
movsb
push
sbb
sbb
loop
arpl
cmc
loopne
jg
or
pusha
push
repz
es
data16
bound
test
in
xor
add
cmc
push
lods
pop
pop
jb
fwait
push
mov
push
add
out
adc
xlat
cmc
sarb
lcall
test
jae
imul
mov
push
arpl
shlb
cmpsl
out
pop
jae
mov
pusha
mov
push
and
sub
adc
pop
xchg
push
mov
imul
jp
std
push
or
insl
pop
adc
inc
dec
mov
popa
testb
cmp
enter
test
mov
and
add
in
insb
inc
daa
sbb
sbb
in
cltd
ljmp
int3
js
aas
jae
std
fmul
dec
arpl
loopne
push
xor
aam
arpl
mov
loopne
adc
lret
fstpt
mull
popa
adc
jle
rcrl
sbb
mov
fstps
mov
ret
mov
cltd
int3
bound
in
and
xchg
sbb
push
cwtl
cmp
mov
pop
in
cmp
cli
cmp
mov
bound
push
jb
or
mov
sub
dec
shrl
push
inc
loopne
or
inc
push
jno
mov
sahf
pushf
mov
jae
cmp
lock
push
lcall
mov
enter
jo,pt
test
xchg
sub
cmp
call
sub
jns
mov
inc
mov
cs
inc
sbb
pop
insl
mov
push
mov
ljmp
shll
cmc
imul
popl
pop
mov
lcall
pop
mov
test
mov
jns
mov
mov
mov
popa
push
mov
fsubrs
cwtl
adc
and
xchg
in
lcall
inc
inc
pop
rcrb
in
lcall
sbb
jb
lret
and
das
repnz
cmpsw
push
cmp
loopne
jl
pop
and
cmp
mov
xor
mov
dec
push
pop
adc
out
mov
outsb
cmp
out
or
push
repz
jnp
dec
dec
pop
test
push
adc
xor
adc
stos
dec
cmc
mov
stc
push
imul
imull
into
jecxz
add
push
outsb
add
adc
aad
decb
xchg
stos
cmp
insb
es
xor
add
aaa
mov
lret
ret
mov
xchg
jl
nop
repz
xchg
lods
lret
lods
or
and
popf
jnp
fistpll
push
decb
pop
dec
addr16
dec
add
mov
xchg
test
pop
fwait
aas
leave
cmovp
sub
dec
inc
xchg
arpl
cwtl
mov
inc
jge
xchg
lret
data16
jecxz
xor
shlb
ret
gs
mov
nop
mov
mov
das
or
mov
pop
xlat
ss
dec
sbb
xchg
imul
pop
or
jne
jmp
repnz
cmp
adc
stos
sub
sub
das
add
inc
xor
mov
and
imul
and
mov
cmpsb
lods
fucomip
iret
xorb
dec
mov
mov
lds
shrb
sub
test
mov
cwtl
push
add
flds
es
or
mov
pop
sbb
icebp
mov
rcrl
ss
imul
sahf
scas
jae
and
inc
dec
xchg
cmp
or
inc
push
xchg
mov
dec
inc
inc
and
push
xor
mull
xchg
xor
fs
pop
leave
sub
sbbl
popf
push
mov
imul
jge
pop
mov
jbe
ja
jmp
cmp
faddp
call
call
jne
sub
xchg
push
cmpsb
push
out
jb
or
inc
adc
dec
imul
cld
fisubs
imul
or
stos
push
jae
lcall
popa
je
push
ficomps
mov
nop
aam
popf
je
cmp
add
inc
push
out
xchg
mov
mov
icebp
enter
jg
ret
leave
add
ss
dec
ret
sub
jmp
cmp
out
jno
cmpsl
aas
ror
or
jo
xchg
push
adc
fidivl
sub
cmp
outsl
mov
mov
and
cmp
mov
xor
and
lret
inc
cmp
xor
nop
out
int
mov
xor
aas
adc
mov
je
ds
push
ret
popf
bound
mov
xlat
je
xchg
shr
in
jo
movsb
dec
cmc
dec
mov
fs
cs
push
or
mov
in
inc
lock
lahf
rorl
mov
mov
add
fwait
aam
das
mov
push
lahf
adc
lods
roll
cltd
and
mov
cs
mov
mov
or
cmpl
mov
dec
cltd
test
stc
adcl
addr16
in
aas
add
adc
scas
imulb
ret
dec
dec
cwtl
aad
mov
and
pop
pop
push
imul
scas
add
inc
sbb
enter
lods
dec
jp
gs
ffree
mov
call
testl
in
xor
jg
push
mov
dec
aaa
ja
jns
insl
fists
je
push
loope
in
push
jge
jl
sub
mov
add
movsl
or
sbb
cmp
push
xlat
add
negb
jns
jmp
sbb
xchg
add
insb
jge
mov
mov
loopne
add
int
xchg
cmc
rcll
jg
insl
mov
mov
and
ss
and
jle
mov
pop
std
sbb
jns
mov
dec
xor
test
mov
mov
push
push
repnz
orl
iret
mov
mov
ja
mov
cltd
dec
xlat
test
insb
std
cmp
inc
pop
cli
insb
pop
adc
and
pop
call
inc
movsb
jbe
in
and
sbb
push
movsb
or
jo
adc
lds
movsl
dec
push
and
jl
dec
xor
xlat
jb
adc
push
sub
js
dec
test
mov
mov
xlat
pop
mov
sub
clc
pop
push
mov
fs
test
push
cltd
in
mov
xor
mov
mov
insb
adc
gs
mov
pop
scas
sbb
xchg
sbb
les
je
pusha
dec
or
inc
sbb
add
push
xor
mov
jge
cmp
sub
sub
or
add
js
jbe
pop
stos
mov
cwtl
inc
mov
clc
push
cmp
mov
fistpll
das
push
xchg
cmp
mov
cli
test
dec
or
jbe
loopne
pop
mov
fiaddl
ud2
hlt
dec
mov
or
pop
xchg
mov
test
xor
add
dec
lret
fninit
jns
fildl
sbb
dec
adc
cmp
push
xorb
add
cmc
dec
xchg
jae
outsl
add
addr16
aam
lods
adc
mov
jle
aas
xchg
cwtl
mov
insl
mov
cmp
leave
mov
data16
testl
adc
add
hlt
scas
les
mov
int3
inc
out
pop
mov
sbb
nop
into
jg
scas
jle
xchg
xchg
bound
fs
push
jbe
loop
ss
fcomps
and
mov
fistps
imul
dec
and
lock
aam
jae
pop
fwait
jp
pop
mov
jg
xor
push
mov
add
pop
jp
popf
sti
js
or
mov
cmp
arpl
dec
pop
psadbw
vpandn
lods
add
push
outsb
jp
mov
mov
inc
mov
lea
ficompl
xchg
lds
dec
add
out
or
xor
ds
idivb
adc
xor
sbb
jo,pn
out
pop
mov
pop
and
jl
sub
scas
xchg
je
pop
or
xchg
mov
imul
mov
test
adc
adc
xchg
lcall
dec
arpl
cwtl
ljmp
aam
pop
es
mov
outsl
loopne
shrl
adc
pop
int3
test
xor
or
jnp
insl
push
data16
mov
in
sub
cmp
pop
adc
pop
sbb
and
nop
xchg
mov
shrl
stos
sub
fwait
inc
in
pop
in
pushf
outsl
add
cmp
mov
or
call
fwait
adc
add
pop
pushf
out
bound
mov
push
hlt
inc
clc
cmp
jno
test
jg
lahf
ret
sub
mov
push
pop
aaa
sti
xor
mov
push
loope
mov
cmc
mov
aad
inc
dec
push
stc
or
and
aas
dec
sbb
rclb
je
push
mov
inc
test
xchg
xor
mov
and
fidivl
je
jnp
mov
or
mov
push
dec
pop
pop
or
cld
gs
fcoms
mov
ret
hlt
sub
sub
mov
or
mov
fldenv
dec
push
pop
push
loopne
jbe
push
adc
popa
aam
stc
xlat
leave
sub
lods
js
sub
test
jg
dec
cltd
loopne
in
loop
cmp
mov
je
push
leave
sbb
push
mov
add
movsl
test
cmp
and
sub
push
mov
jbe
push
mov
inc
pop
mov
dec
movsl
in
adc
fwait
mov
sub
adc
repz
cmpsl
mov
imul
in
aam
stos
cltd
pop
xchg
xor
jge
scas
loope
fcompl
xorl
sub
jmp
iret
sub
ret
clc
jae
mov
ds
jl
mov
arpl
out
inc
clc
inc
movsb
sub
mov
mov
or
rcll
pop
mov
mov
mov
daa
xor
sub
insl
aam
adc
loop
cmp
int
lahf
sbb
daa
dec
dec
mov
cmp
mov
out
mov
fimuls
pop
mov
cld
mov
dec
rcll
aad
or
outsb
pop
mov
mov
add
xchg
push
sub
jo
sub
and
cmpsl
push
pusha
lods
notb
shrl
pop
scas
mov
add
push
mov
outsb
and
jae
jbe
enter
mov
ret
push
xor
loopne
sbb
daa
sub
out
mov
das
cwtl
aaa
ja
addr16
bound
xchg
xchg
adcb
loop
sub
mov
icebp
jb
cwtl
repnz
adc
jae
test
or
add
jge
hlt
jbe,pt
cmp
dec
ss
push
cmpsb
xchg
leave
and
fwait
outsl
sahf
mov
sbb
cs
icebp
lods
stos
rorl
mov
lods
pop
xor
rcr
jbe
cltd
jo
sbb
gs
bound
stos
scas
cmp
cmc
dec
push
pop
enter
or
ret
imul
in
js
cmpsb
das
inc
xchg
fdivrl
stc
jge
xchg
dec
inc
movsl
clc
ret
pop
shrb
jb
insl
xlat
jl
aad
popf
imul
pop
loop
fstp
pop
aas
hlt
int
loop
add
cltd
lret
test
fnstenv
mov
mov
call
shrb
int3
imul
fs
push
mov
jae
xlat
stc
add
outsl
mov
push
push
or
dec
xchg
jmp
ljmp
push
inc
pusha
fnstcw
repz
jns
inc
call
xchg
icebp
out
fnstsw
repnz
dec
jno
jbe
loopne
sub
push
sbbl
push
xchg
lcall
jne
outsl
lods
mov
loope
cmp
sub
ja
scas
in
ds
sub
push
push
movsb
in
xchg
mov
loope
add
xchg
es
leave
push
hlt
sar
iret
xor
mov
mov
or
and
xor
fwait
cmp
in
xor
dec
das
loop
cmp
and
dec
xchg
adc
daa
dec
loopne
mov
cwtl
mov
int3
jae
sbb
xchg
mov
pop
popa
aam
mov
jmp
mov
push
bound
add
add
jl
fwait
setl
aaa
cmp
mov
iret
fdivrl
cwtl
divb
pop
mov
es
add
mov
outsl
call
dec
in
cltd
push
add
or
cmp
pop
stc
scas
cmpsb
shlb
movsb
in
xor
cmp
fistpl
call
push
outsb
lock
sarl
dec
xchg
aad
data16
pusha
fwait
xlat
test
pushf
and
dec
sbb
lahf
xor
pop
push
ret
in
mov
mov
adc
xor
rep
sub
and
aad
fwait
adc
and
jp
push
js
pop
sbb
push
mov
cmc
shrl
fsubl
rcl
jns
xchg
test
jbe
in
loop
subb
jp
imul
rcrl
mov
scas
jle
out
ficoml
pushl
mov
pop
mov
stos
imul
jge
sub
mov
ja
das
stos
fisubrl
adc
aaa
ret
mov
mov
not
jae
mov
xor
cwtl
push
insb
imul
jg
in
test
add
lret
push
dec
mov
nop
pop
pop
mov
sub
xchg
mov
pop
mov
xor
dec
loop
ljmp
fimuls
sub
xor
repnz
mov
xchg
cltd
mov
sbb
frstor
imul
test
test
and
and
mov
ljmp
push
adc
in
mov
and
jp
mov
jnp
outsl
imul
test
mov
mull
lock
adc
call
stc
fstps
jle
push
cld
xorl
xchg
pop
and
inc
jo
push
out
scas
adc
mov
xor
xor
cmp
aam
inc
push
jecxz
stc
lret
stc
mov
sbb
loop,pn
ljmp
mov
aam
mov
mov
jnp
insl
int
cmpsb
jp
mov
leave
dec
dec
insl
in
test
leave
dec
sbb
jmp
dec
push
mov
add
addr16
callw
pop
adc
xor
mov
imul
and
jae
lahf
pop
mov
into
imul
aas
push
or
shrb
jae
adc
pop
test
jge
mov
mov
mov
jge
push
loopne
montmul
cmpsb
add
es
clc
adc
test
and
loop
inc
mov
mov
mov
hlt
loopne
or
xchg
lock
aas
mov
daa
inc
and
rcl
aaa
pushf
jne
dec
sub
mov
lahf
pop
cmpsl
aas
and
pop
push
mov
sub
pop
fnstsw
loopne
and
push
xchg
ljmp
mov
je
cmp
daa
pop
dec
push
ja
pop
push
add
mov
stos
adc
jle
lock
es
lea
cmp
mov
test
pop
roll
or
jmp
mov
cmpsb
call
xchg
push
fidivl
sbb
loopne
xchg
movsl
add
outsb
inc
les
inc
shrb
psraw
inc
cltd
xor
mov
mov
shr
or
mov
adc
and
cld
sahf
scas
fwait
ss
mov
mov
xlat
repnz
cmpl
nop
call
cltd
ja
mov
pop
sarl
loope
adc
sti
sub
rorb
lahf
xchg
sysenter
lret
pop
sbb
mov
sub
cmp
mov
in
lcall
jl
ljmp
in
fldcw
fwait
loope
repnz
int3
lahf
hlt
add
loop
jbe
sub
cmp
jb
mov
add
dec
and
loope
xor
adc
dec
sti
inc
jns
xor
adc
add
xor
push
sar
cltd
addr16
nop
out
push
sbb
in
sbb
scas
cmp
mov
mov
or
mov
stos
xchg
popf
mov
mov
les
or
jp
pop
sub
mov
inc
fwait
cmp
fistl
pop
testl
fimuls
insl
or
push
or
adcl
mov
ja
imul
and
xchg
sbb
add
xlat
in
leave
pop
xchg
test
mov
mov
je
int
sbb
mov
or
insl
inc
or
push
addr16
daa
and
cs
xchg
mov
mov
mov
dec
push
insb
xor
cmpsb
inc
ljmp
mov
push
xorl
jb
imul
imul
add
in
data16
or
pop
vpmaxsw
cli
sbb
popf
mov
into
fisubs
xor
call
mov
or
nop
inc
aaa
int3
adc
xchg
dec
and
dec
repz
pop
shrl
pop
aas
cmp
dec
pop
inc
jae
jmp
push
lea
enter
pop
xchg
jbe
mov
popf
mov
test
test
adc
mov
push
ds
popf
lcall
push
sahf
or
mov
in
pop
inc
mov
pop
dec
xor
inc
inc
mov
add
jge
and
fcoms
rcr
pop
popf
and
mov
insb
ret
mov
xor
inc
dec
sbbb
leave
mov
inc
jb
xlat
push
sbb
mov
aad
pushf
ds
sarl
or
and
pop
cmc
cs
test
int
jno
inc
ljmp
pop
sub
inc
test
cli
mov
xor
pop
dec
sub
lret
push
dec
dec
sbb
in
jbe
add
xchg
dec
mov
in
add
jg
mov
sub
pushf
decb
bound
push
arpl
jl
add
xor
mov
push
leave
addr16
mov
mov
dec
fbld
pop
mov
mov
sub
sarb
fcompl
lcall
or
mov
scas
fidivrs
adc
lret
mov
lret
mov
cmp
and
or
cld
adc
xor
cmp
cs
add
fnstcw
fsubr
subl
leave
negl
jne
setns
and
lcall
cmpl
push
jbe
add
push
inc
loopne
add
mov
pop
xor
aaa
std
push
jecxz
mov
std
mov
sbb
xchg
aad
jns
loope
js
iret
sub
mov
jg
aad
sub
inc
das
add
add
std
hlt
insl
ret
fstp
roll
push
inc
mulb
fisttps
jg
in
nop
push
clc
adc
paddd
lods
cmpsb
aad
fists
sub
inc
aaa
pop
adc
add
hlt
lock
xchg
xchg
popa
leave
push
adcb
in
aaa
xor
ud1
stos
int3
testl
das
mov
movsb
or
cs
adc
sbb
xorl
jb
incl
inc
pop
adc
xor
divb
lret
dec
das
icebp
mov
in
cmp
inc
hlt
inc
sub
fimull
cmp
setne
xchg
mull
stc
aad
in
sub
rolb
pop
mov
inc
jne,pt
das
dec
roll
mov
dec
sbb
insb
or
insl
in
xor
lea
and
fldl
or
in
dec
stc
jmp
xor
or
mov
xchg
mov
adc
adc
push
inc
sub
mov
push
mov
out
data16
jno
xor
jne
addb
out
lods
fmul
jbe
test
add
call
jle
cvtps2pi
test
sahf
jmp
xor
dec
cmpsb
pop
outsb
call
jbe
bound
push
dec
loope
jae
adc
lea
push
dec
jl
ljmp
subb
pushf
fucom
nop
scas
xchg
test
dec
push
popf
jnp
outsl
mov
in
lods
lds
pop
dec
out
in
leave
sub
fstpt
add
shlb
inc
mov
xor
dec
and
mov
xchg
clc
jae
and
cmp
adc
lcall
je
jne
mov
lock
jne
xor
inc
test
inc
or
stos
add
test
cmp
aam
aam
aam
inc
sbb
xchg
shlb
push
mov
sbb
dec
cmp
pop
inc
pop
andb
pop
outsl
sbb
aam
repnz
in
es
jp
enter
jmp
ss
inc
movsb
sub
ror
inc
jo
cmpsl
fnstenv
aad
insl
xchg
mov
pop
popf
xor
popf
mov
or
jmp
push
into
pshufw
push
mov
adc
in
loope
cmp
lea
fwait
in
es
mov
fucomi
repnz
out
or
sbb
inc
xor
mov
cmpsb
movsl
rol
imul
lods
adc
adc
orl
fldcw
or
inc
mov
mov
pop
clc
shrl
jg
jle
cmp
sbb
add
add
stos
call
fs
inc
jo
fstpl
mov
popa
icebp
jp
lahf
cwtl
in
ljmp
xchg
push
and
adc
mov
mov
stc
cmp
repz
and
ficoms
mov
and
es
add
cltd
icebp
hlt
pop
mov
stos
movsl
cmpsb
xchg
mov
sub
mov
scas
rcll
orb
add
ret
fsubs
mov
cld
and
lods
pusha
inc
lcall
in
pop
test
mov
adc
xchg
mov
scas
test
and
cmpsl
pop
shll
add
dec
mov
ds
mov
inc
xchg
outsl
nop
sti
bound
pushf
lds
xchg
jmp
or
addps
cmp
inc
or
ds
pop
lret
fldt
movsb
scas
jmp
bound
das
mov
or
outsl
imul
mov
sbb
adc
xor
sub
sub
ja
xor
push
nop
sub
cld
aad
pop
adc
arpl
and
pop
adc
xchg
das
push
push
xor
test
insl
pop
pop
jnp
stos
push
icebp
je
or
out
adc
aaa
sahf
hlt
out
jae
imul
and
add
test
neg
sar
mov
jnp
dec
jno
and
popa
xchg
mov
mov
imul
fldl
lea
stc
stos
jo
or
hlt
cmpb
sub
cmp
cld
xor
xor
shl
and
rcr
dec
jo
xchg
fcomip
lea
pop
imul
cmp
lods
in
out
cld
mov
pop
minps
repnz
push
xchg
pop
rolb
or
pop
sub
orl
mov
mov
stos
mov
repnz
cltd
sub
loopne
pop
stos
fldt
test
mov
sub
enter
or
cli
jno
sbb
cmp
mov
sbb
lods
xchg
xor
or
jb
jne
iret
andb
xchg
imul
cmpl
xchg
pushf
fsubs
add
xor
es
popa
fwait
loop
loop
pop
add
pop
scas
lds
mov
mov
push
sbb
filds
inc
mov
jae
adc
icebp
test
mov
mov
push
insl
loopne
lcall
push
lds
and
std
into
das
adc
push
in
or
pop
adc
xchg
rcrl
mov
iret
and
push
adc
lahf
adc
insb
dec
sahf
and
mov
addr16
pushf
and
jmp
outsl
xor
and
fwait
scas
xor
fidivrs
inc
adc
mov
insl
flds
mov
sbb
in
or
arpl
jge
std
das
cs
das
inc
ss
pushf
push
mov
ljmp
lahf
mov
scas
dec
inc
dec
shlb
fisttpl
adc
add
lret
andb
pop
test
leave
in
jp
inc
sti
int3
lds
mov
das
mov
mov
and
push
stos
gs
iret
arpl
push
jecxz
push
std
push
ss
or
das
pop
adc
mov
add
dec
mov
sbb
jno
jae
push
fcoml
and
divb
mov
loopne
pop
cltd
lcall
mov
call
stos
xchg
pop
dec
cmp
movsb
fdivr
movsl
xor
inc
out
jae
inc
insb
adc
sbb
xchg
jle
mov
push
in
inc
into
add
fsubl
loop
sub
jp
mov
adc
popf
sub
gs
lahf
jo
xor
subl
lods
push
and
movsb
ja
mov
jno
xor
js
sbb
sbb
mov
mov
add
mov
pushf
ds
jnp
xchg
push
inc
and
iret
jbe
dec
and
xlat
cmc
movsb
stos
sbb
pop
xor
sbb
rolb
je
mov
mov
adc
test
out
inc
inc
movsl
sbb
mov
mov
dec
jecxz
mov
out
xchg
xor
fwait
mov
subl
das
cmpsl
mov
stos
sbb
mov
inc
imul
in
sub
std
push
lock
or
xchg
mov
push
in
adc
addr16
cld
lods
arpl
sarb
or
lret
mov
pop
subb
dec
aaa
jae
jne
jns
mov
mov
jl
mov
mov
int
or
out
jae,pn
fisubl
mov
test
adc
js
popf
fadds
adc
cmpsb
sbb
repz
and
test
lahf
and
add
call
insl
cmp
into
jb
inc
cs
sahf
les
xchg
mov
add
sub
jg
test
pusha
inc
sub
sarl
add
inc
ret
pop
fs
pop
fcmovnu
das
ja
cmp
cmpsb
lods
bound
call
xchg
jae
xor
inc
and
mov
mov
popa
popa
jg
cmc
int
push
ss
jae
pop
xchg
and
cld
in
mov
mov
in
xor
sti
jnp
jnp
dec
into
inc
imul
js
mov
into
addr16
fisubl
jb
mov
adc
fsqrt
outsb
out
cwtl
aas
mov
push
out
sub
lods
mov
mov
push
adcb
orb
in
popa
and
mov
lcall
add
adc
inc
push
xor
outsb
jecxz
test
sbb
mov
inc
in
hlt
mov
pop
pop
sbb
lret
in
gs
pop
jnp
addr16
xchg
xchg
sbb
inc
mov
into
sarl
jnp
outsl
in
mov
movsl
arpl
aas
xchg
sub
subb
mov
and
xchg
adc
in
in
pop
pop
jb
mov
adc
dec
dec
sub
inc
outsb
mov
cmp
fiadds
scas
sbb
scas
data16
fldcw
ficompl
movsl
gs
cmp
push
insb
mov
dec
add
push
cli
fmull
bnd
sti
and
sbb
pop
shr
add
pop
cmp
stc
insl
roll
lret
jmp
pop
mov
xor
mov
out
xchg
aaa
xchg
mov
adc
cmp
arpl
aam
sbb
or
sti
xchg
inc
pop
loopne
dec
push
outsl
xor
fbld
xor
push
out
mulb
lcall
pop
dec
scas
ss
push
ret
in
lea
gs
mov
lret
test
xchg
sub
rcrb
jl
and
dec
push
out
and
rcr
jle
mov
dec
jb
push
das
jbe
pop
mov
jne
push
xor
add
insl
addr16
lods
pop
mov
popf
call
aas
cmpsb
pop
out
and
or
fnstsw
mov
jmp
in
sbb
cmp
fcom
inc
scas
fdivr
xchg
dec
push
int
inc
into
sti
mov
push
cmp
in
pusha
sub
mov
shll
es
dec
jg
out
or
repnz
pop
jns
mov
inc
sarl
push
inc
inc
mov
lret
or
mov
xor
inc
popl
dec
inc
cmp
fldt
push
imul
fidivs
call
test
lods
sub
shrb
sti
pop
inc
and
mov
cmp
xor
jbe
cmp
cld
xchg
ret
stos
in
imul
rorb
fidivl
nop
sub
push
sbb
inc
shll
xchg
mov
dec
or
fwait
or
xchg
mov
ret
push
in
cwtl
mov
sub
cmp
ds
ja
mov
stc
out
pop
or
jge
mov
in
mov
aaa
fwait
jne
cmp
push
hlt
imul
sub
xor
pusha
mov
jnp
aad
cltd
ret
inc
leave
and
ret
int3
mov
sahf
push
arpl
pop
das
jmp
cmp
shlb
sub
mov
push
add
inc
insb
inc
push
daa
call
xchg
cwtl
mov
popf
inc
out
pop
xchg
jbe
icebp
mov
pop
das
xor
jge
loop
jp
push
in
mov
jl
add
rcr
mov
js
insl
lods
jbe
and
nop
sbb
inc
dec
loope
out
mov
jno
fisubl
test
and
cmpl
cli
bound
outsb
sbb
or
data16
insb
lea
xlat
jno
mov
int3
in
adc
nop
cmp
mov
or
mov
mov
mov
das
popf
movsl
jb
xchg
mov
das
clc
jle
cltd
scas
xor
notl
add
xchg
ret
es
pop
add
cwtl
jbe
mov
aad
insb
sahf
stos
xchg
jge
test
imul
push
jl
jge
fcmovnb
cwtl
int3
cmp
imul
iret
test
cltd
mov
jno
stos
push
ds
xchg
push
sbb
inc
cltd
jmp
js
mov
mov
inc
push
std
out
ss
jns
pop
jno
ret
mov
pop
int
cmp
iret
push
push
call
xor
fidivl
pop
xchg
and
or
pop
mov
pop
sti
add
and
adc
push
jbe
adcl
inc
pop
dec
mov
pop
xor
mov
cltd
insl
hlt
daa
lahf
push
pop
movsb
mov
xchg
sbbb
add
push
stc
push
jb
jbe
and
leave
pop
dec
enter
pop
mov
sti
dec
jmp
outsb
lcall
pop
ja
sub
and
push
mov
loop
mov
scas
test
fs
decb
push
adc
js
pop
xchg
mov
cmc
add
outsb
fs
movb
mov
mov
jg
std
gs
pushf
sbb
add
repnz
jl
add
lods
insl
cmp
insl
push
test
rcrb
in
xchg
or
je
mov
fwait
andb
pop
movsb
movsl
xchg
add
int
xlat
sar
pop
insl
clc
out
sbb
or
adc
push
cmp
or
mov
mov
sub
mov
faddl
xor
add
addl
dec
jle
cmp
sub
call
add
xor
push
cli
ss
fcmovne
inc
into
fwait
decb
lcall
shrl
or
lcall
mov
popf
and
cli
lea
popa
push
aas
repz
and
js
inc
lds
cmc
lods
jmp
fsubrp
adc
fisttpl
int
jns
js
jbe
sub
mov
subl
jecxz
stos
push
lock
outsl
jne
push
adcb
xchg
ret
icebp
clc
cmpsl
subl
push
rolb
outsb
call
shrb
bound
pop
das
outsb
lods
ret
hlt
lret
cltd
xchg
or
xor
sub
jle
and
push
inc
pop
push
dec
dec
loop
inc
add
sub
xchg
cli
shrl
xchg
lahf
adc
mov
push
imul
lahf
in
enter
push
mov
loop
stos
js
sbb
sub
adc
sbb
jns
cli
lods
das
es
add
push
xor
es
aas
pusha
xchg
pop
sub
movsl
xor
hlt
xchg
cmp
and
outsl
inc
jns
cmpsb
xchg
mov
inc
imul
cli
and
jg
mov
sbb
fnsave
mov
pop
sbb
mov
adc
pop
xor
mov
mov
pop
xor
cwtl
jg
sahf
sub
jb
outsb
dec
inc
push
adc
mov
sarb
in
pop
ret
mov
popf
fmul
add
scas
cltd
jo
movsl
mov
cmpsl
or
lret
jmp
int3
nop
aam
add
pop
or
cli
sub
jle
dec
xchg
xor
repnz
adcb
stos
mov
pop
insb
inc
mov
jae
jb
push
jg
inc
xor
fwait
mov
imul
xchg
or
cmp
leave
push
mov
aad
aas
outsb
out
cmp
enter
addr16
fs
pop
lea
call
xchg
mov
mov
push
mov
dec
std
pop
das
aad
mov
push
mov
xlat
sti
out
call
mov
push
inc
arpl
dec
fisubrl
std
mov
scas
imul
les
cmpsb
pop
sbb
push
xchg
inc
leave
mov
xchg
stc
imul
pop
xlat
sahf
xor
and
test
lods
jns
cmpsb
add
dec
sbb
insb
inc
imulb
xchg
test
jmp
sti
rorb
inc
popa
xor
add
mov
mov
mov
in
dec
pop
adc
out
mov
add
jg
mov
pusha
or
movsb
inc
sub
mov
in
lret
lds
and
bound
mov
xor
jnp
pop
and
lret
lret
aaa
pop
dec
in
push
push
movsb
in
lods
data16
mov
pushf
pop
dec
xor
dec
mov
dec
fwait
pop
nop
pushf
lea
rcrl
pop
in
shll
and
mov
pop
mov
into
idiv
cmc
movsl
xchg
mov
sub
cmpsb
and
mov
push
les
jmp
xchg
cmpsb
mov
shrb
int3
aas
imul
ljmp
add
xchg
and
jbe
and
jbe
imul
inc
test
or
test
mov
mov
in
and
stos
sbb
out
ja
xchg
lret
or
push
fst
mov
dec
les
nop
push
xor
fnstenv
enter
xlat
lahf
xor
cltd
jge
adc
mov
int
sub
jb
xchg
push
sbb
and
scas
cmp
hlt
icebp
int
pop
cmpsl
or
clc
lods
xor
nop
add
push
mov
mov
loopne
sub
popf
mov
out
ljmp
ss
cli
rcll
test
jp
inc
stos
jle
mov
jns
aad
dec
dec
lret
call
in
inc
fmuls
notb
cmp
adc
clc
adc
mov
lods
imul
lret
test
ja
jl
mov
lret
in
jecxz
jp
lahf
jb
in
rcll
xchg
inc
adc
push
ljmp
sbb
dec
add
mov
xchg
stc
mov
push
rolb
out
push
mov
loope
sub
inc
jns
fisttpll
cmp
xchg
add
sbb
push
in
jbe
push
mov
push
inc
stos
aaa
lods
in
stos
aas
imul
das
jns
and
cmp
enter
aaa
mov
repnz
imul
aam
xor
pop
loopne
sti
cwtl
mov
mov
mov
dec
inc
insl
decl
push
inc
xor
movsl
jmp
pop
cmp
addb
jae
or
jno
mov
cmp
mov
lret
daa
jmp
adc
xorb
aas
out
push
push
adc
push
sti
or
push
dec
repz
lret
inc
clc
mov
popa
mov
fcomi
jl
and
jae
lahf
loopne
call
shl
repnz
jle
mov
es
pop
out
sahf
jbe
pop
fildl
push
cmp
sub
xlat
xor
xor
jb
movsb
push
subl
in
xchg
sti
mov
cld
into
fisubrl
sub
mov
cmp
xor
sbb
lcall
cmp
mov
hlt
iret
les
pushf
sbb
jae
sub
sub
pop
mov
shufps
mov
lahf
daa
pop
pop
pop
popa
fmuls
jne
cmp
adc
mov
ja
mov
das
lock
shrb
dec
out
lods
push
addl
xchg
mov
mov
ss
push
mov
lret
cmp
iret
mov
out
mov
js
das
mov
dec
push
and
mov
lahf
xchg
push
lret
daa
lret
icebp
jnp
mov
repz
inc
pop
push
repnz
inc
aaa
je
cmp
pop
scas
pop
pop
call
imul
sub
stos
std
movsl
aas
dec
push
dec
push
xor
mov
xchg
mov
fistl
pop
frstor
xchg
fnstsw
jne
mov
stos
loop
inc
cmp
sub
sbb
inc
xchg
iret
pop
popa
sbb
sbb
orl
pop
mov
dec
sub
je
mov
xor
rol
stos
jo
ja
repnz
jb
scas
notl
cmp
xor
jns
hlt
sub
jmp
sahf
add
dec
jecxz
pushf
mov
mov
inc
movsl
inc
mov
push
pop
mov
mov
sbb
add
jo
ret
into
bound
mov
cmpsb
sti
mov
pop
sbb
mov
xchg
cld
cwtl
and
in
repnz
or
lret
xor
cli
popf
xor
aas
pushf
int
or
push
adc
lahf
clc
and
adc
mov
add
lret
iret
sbb
jb
pop
xchg
jge
lcall
cmp
call
stos
aas
or
rorb
mov
xor
test
adc
std
or
xchg
lea
dec
mov
inc
int
fdivrl
cwtl
cmp
into
mov
xchg
dec
ljmp
fcoms
push
jle
je
push
inc
sbb
pop
mov
ret
fiadds
jg
pop
mov
ret
flds
inc
or
lahf
das
xchg
roll
out
loopne
and
sbb
stos
sub
xchg
imul
dec
sbb
sbbb
xchg
cmc
push
xchg
call
add
das
nop
stc
xorb
sti
int3
aas
push
ljmp
pop
shlb
cmp
xchg
xchg
fs
insl
repnz
xlat
sub
mov
inc
mov
lds
cmp
rorb
ljmp
or
setg
scas
sub
cmp
pusha
cmpsl
scas
mov
mov
lret
pop
lods
stos
mov
inc
inc
dec
mov
jl
popa
loopne
fldt
sti
or
mov
mov
shl
nop
aas
movsl
shll
fdivrl
and
jns
xchg
and
stos
ljmp
sbb
cmp
outsl
push
mov
xchg
cmp
pop
fwait
in
loop
mov
jbe
icebp
push
xor
dec
into
push
lock
and
mov
loop
jo
adc
shlb
jge
or
out
imul
pop
inc
adc
xbegin
mov
shr
bound
rcrb
jl
cmp
inc
cmp
inc
mov
andl
arpl
and
addr16
mov
clc
xlat
dec
fmuls
shrl
lods
sti
rcll
sub
and
sub
leave
xlat
inc
adc
push
pop
cmc
repnz
push
hlt
test
jg
outsl
sub
xor
or
push
ja
aam
or
in
data16
push
loop
push
out
pop
repz
mov
adc
loop
cmpb
into
mov
dec
in
fstps
jo
lcall
rcrl
mov
and
ficoml
pushf
xor
imul
movsb
inc
push
in
push
inc
leave
adc
clc
lahf
xlat
out
in
inc
push
add
sbb
lock
in
rcr
data16
outsb
stos
mov
repnz
push
inc
cli
xor
xor
sbbl
inc
sub
push
mov
xor
imul
push
call
sbb
mov
cmc
test
icebp
adc
cmp
add
xchg
mov
adc
and
ljmp
pushf
out
mov
sarl
push
loopne
inc
aas
mov
mov
push
jmp
dec
pop
int3
inc
cmpl
or
mov
inc
fisubl
sub
pop
add
daa
add
outsl
jmp
pop
jno
and
out
cmc
jns
mov
into
adc
pop
push
jecxz
jno
test
popa
in
jmp
mov
icebp
mov
or
push
fdivrs
stos
xchg
sbbb
shl
cmp
subl
inc
mov
stos
sahf
jbe
inc
cmpsl
mov
inc
push
push
jbe
imull
ds
lcall
lods
pop
out
test
inc
dec
cmpsl
jle
and
icebp
stc
inc
adc
dec
xchg
dec
pop
push
outsb
push
pop
sub
mov
int3
movhlps
adc
adc
fstpt
inc
push
inc
pop
mov
mov
jg
test
je
or
sub
jl
iret
cmpsl
aas
movsb
enter
or
and
push
adc
push
xchg
mov
cld
xchg
or
xlat
iret
sbb
jp
fs
add
jecxz
aad
sub
es
aad
mov
mov
outsb
mov
or
push
mov
or
mov
and
push
inc
push
push
stc
test
xchg
add
cmp
cmc
jmp
popa
out
sub
out
adc
jl
pusha
sahf
adc
cmp
insl
into
dec
ret
jns
jno
cmp
inc
repz
imul
scas
xor
sub
shrb
dec
inc
add
dec
inc
mov
sub
mov
int3
xchg
fldt
mov
push
xor
hlt
xor
cli
xchg
and
bound
or
jae
cmp
and
mov
pop
adc
xor
fwait
mov
pop
and
addr16
jno
sub
or
jl
add
mov
cmp
jb
ss
ret
lods
sti
or
adc
dec
pop
or
sbb
mov
lret
lods
jno
enter
xchg
xchg
repnz
jns
mov
pushf
inc
movsl
pop
dec
mov
cli
repz
jnp
xor
data16
jo
int3
jle
pushf
pop
aam
adc
mov
scas
cmp
out
dec
jp
push
xlat
mov
or
adc
pusha
loope
push
fs
mov
add
xor
cs
xchg
mov
and
mov
adc
add
in
xor
dec
ret
out
fwait
rclb
test
cmp
xchg
test
leave
sar
in
sub
inc
sbb
daa
add
sub
xor
data16
pop
xchg
sbb
aas
ja
and
loope
popf
lcall
inc
lea
jg
jl
shlb
xchg
push
call
rorl
mov
sti
cli
mov
add
cltd
shr
push
out
push
push
es
sub
int3
and
in
and
sarb
xchg
out
mov
loop
and
xor
dec
inc
shrl
mov
in
push
push
xchg
and
xor
outsl
fistpll
sub
dec
stos
les
xor
pushf
shlb
in
nop
cmp
loope
xchg
dec
repz
aad
daa
push
lea
inc
scas
mov
push
fnsave
mov
and
loop
mov
aam
ficompl
icebp
or
dec
aas
adc
test
ljmp
movsb
pop
sbb
ds
data16
outsl
push
jmp
lret
ret
push
nop
hlt
inc
mov
pop
lea
sahf
sub
mov
insb
xchg
push
decb
stos
push
pop
xor
insb
call
out
dec
les
xor
pushf
out
shlb
adc
xchg
pop
add
lahf
push
mov
jne
cs
xchg
ja
ret
movsl
cmp
in
into
bound
xchg
std
outsl
sbb
xchg
cltd
pop
xchg
sbb
mov
or
mov
rcll
or
xlat
fiadds
out
xchg
pop
push
das
int3
inc
out
add
jg
or
or
es
xor
insl
repz
adc
imul
in
in
xchg
fsub
mov
xor
lds
sti
insb
dec
xor
inc
jecxz
shl
inc
push
xchg
ret
gs
sub
ljmp
neg
xor
inc
mov
jge
sbb
cmp
std
fistpl
lock
mov
lock
lcall
mov
pop
jne
ljmp
or
sub
dec
mov
repz
aaa
mov
or
lahf
xor
xlat
cltd
xor
das
mov
imulb
fwait
loope
or
mov
push
das
ljmp
mov
and
dec
dec
push
packuswb
dec
mov
cmp
popf
dec
mov
dec
in
call
cmp
add
imul
sbbb
inc
sbb
das
cld
jb
jle
insb
xor
jl
jmp
stos
ss
cmp
jns
imul
mov
push
loop
lods
jns
jmp
aad
jl
pushf
mov
inc
sahf
adc
and
xor
out
sbb
xchg
cmp
call
add
xor
mov
mul
incl
push
xor
mov
sub
addl
aam
sub
ret
inc
cwtl
push
sub
adc
repnz
adc
lret
fsubrp
push
sub
and
lcall
xchg
cmpsb
jae
jo,pn
out
mov
dec
mov
repnz
xchg
sbb
daa
cmove
movb
fnstenv
jb
lods
pop
ret
add
add
add
push
or
ret
mov
iret
test
js
pop
and
ja
js
shufps
xchg
aas
sbb
jns
and
in
call
add
lcall
xor
mov
mov
xor
mov
jl
cmp
subl
mov
sub
xchg
cmp
rcr
popf
sar
jo
push
hlt
rorb
addl
daa
adc
nop
xlat
xor
movsl
or
mov
mov
sbb
mov
adc
push
orl
xchg
and
aas
mulb
jb
push
out
lods
sub
mov
in
add
add
fwait
sarb
cmp
or
loopne
dec
dec
addr16
inc
insl
insl
ja
and
cmp
cmpsl
movsl
mov
mov
dec
inc
push
stos
aad
fmul
out
outsl
or
and
pop
shlb
inc
data16
lahf
scas
daa
popf
call
mov
sbb
daa
jae
fiaddl
pop
test
push
push
adc
in
mov
cltd
jg
xchg
adc
cmp
ss
adc
fmull
movsl
xor
hlt
loopne
in
lds
mov
xlat
dec
out
pop
mov
adc
push
xchg
jl
std
sbbb
push
inc
stos
xchg
mov
and
add
xchg
loope
cmp
iret
jle
dec
js
add
push
popf
lods
cmp
push
movsl
scas
xor
negb
aaa
repnz
mov
mov
int
jb
mov
push
js
sub
jnp
xchg
int
imul
sub
and
sbb
loopne
cld
dec
gs
aaa
mov
xchg
cs
mov
and
out
ret
sbb
dec
mov
jl
int3
push
xor
outsb
jle
aam
mull
rcll
orl
or
pop
addl
les
int3
arpl
xor
cmp
popf
ljmp
adc
shll
sub
mov
push
fs
xor
xchg
pop
adc
flds
push
jecxz
insb
xchg
movsb
mov
or
sahf
or
mov
popf
mov
push
pop
insw
xchg
sbb
inc
loop
mov
push
xchg
adc
ss
call
test
lds
jge
stc
sbb
data16
daa
mov
push
cmc
insb
in
jmp
push
cwtl
inc
loope
call
iret
mov
sub
jl
int3
jnp
andl
add
fimull
xor
mov
scas
fs
mov
dec
aaa
call
push
notl
testl
pop
jb
push
mov
xchg
sbb
jle
lret
and
lret
adc
in
mov
andl
xor
lods
sbb
adcb
mov
xlat
xor
mov
imul
push
inc
aas
mov
je
lcall
cmp
jae
xor
cmpsl
popf
das
jmp
mov
out
in
shrl
or
pop
movsb
cld
loope
dec
hlt
dec
test
nop
adc
add
push
dec
xchg
jecxz
stos
sar
hlt
sbb
and
imul
aad
inc
mov
test
cld
movsl
mov
out
mov
mov
jns
pop
and
int3
mov
dec
sti
cli
push
jge
jbe
mov
cmp
xchg
mov
push
and
das
cli
xchg
and
cwtl
rorb
decb
es
mov
notl
out
iret
fidivrl
cmp
add
lods
xor
dec
mov
xlat
aaa
cli
push
ret
int3
and
and
add
shll
mov
dec
mov
lock
mov
fstps
mov
pop
mov
push
sti
enter
fmul
icebp
inc
and
push
mov
test
ret
out
cmp
jg
jmp
test
gs
sbb
mov
or
dec
mov
dec
daa
lods
mov
cltd
aaa
sahf
xor
rorl
scas
decb
in
sub
mov
sbb
xor
cmpsl
sub
std
enter
inc
and
mov
fwait
sub
jmp
pop
jb
cmp
pop
pop
ret
xlat
and
das
jns
mov
lock
pop
into
cmp
mov
jmp
xor
push
cmp
lods
mov
dec
xor
aad
fwait
or
mov
fistps
lock
or
xor
out
dec
cmp
imul
cmp
negb
aas
pop
pusha
fs
jmp
test
sub
jecxz
aas
imul
pop
jl
adc
sub
pop
and
dec
inc
inc
mov
mov
inc
subb
xlat
inc
stc
or
or
xor
mov
mov
inc
xor
and
lret
in
outsb
arpl
or
adcl
inc
xchg
fs
or
inc
or
or
in
iret
sbb
mov
loope
cmpsl
fldenv
in
mov
xchg
pop
mov
pusha
xchg
or
sbb
lds
je
push
mov
popf
xchg
xchg
sub
sub
iret
in
std
aaa
adc
mov
repz
daa
or
jb
adcb
sub
lcall
test
imul
std
leave
dec
mov
xor
add
mov
lock
test
jno
or
notl
fsubrs
lcall
add
nop
stos
pop
sub
mov
loope
test
rolb
and
stos
out
mov
stc
cmpsb
jne
xlat
xor
pop
bound
popf
sbb
jmp
or
xor
xlat
out
movsb
jno
cmpsl
add
ret
enter
push
add
lods
nop
add
in
xor
lds
or
sbb
adc
mov
push
mov
sbb
sbb
icebp
mov
sbb
pushf
test
shl
popf
enter
stos
push
mov
movsl
add
xor
dec
ficoml
std
test
int
and
sbb
test
dec
and
mov
test
adc
fidivrs
mov
sub
jge
je
ret
mov
stos
mov
in
shlb
mov
sbb
cmc
sbb
push
mov
lret
xor
rorb
es
loopne
mov
mov
jns
test
xchg
and
sub
in
pop
adc
mov
add
pop
inc
stc
xchg
and
lods
test
lcall
sti
imul
fwait
fistpll
sti
aam
jg
mov
iret
ret
mov
xor
icebp
dec
ret
mov
ds
jge
ds
lahf
jb
mov
sarb
jae
fdivl
mov
push
pop
loope
je
xchg
sub
lret
cmpsl
shrl
imul
int
ret
jne
sbb
fmull
push
mov
mov
sbb
arpl
call
add
add
xchg
add
popf
push
jno
or
jle
jae
ret
jmp
mov
and
imul
inc
ljmp
fwait
push
shlb
incb
daa
aas
loopne
pop
mov
and
inc
scas
insb
or
std
mov
mov
and
aaa
inc
cli
inc
dec
outsl
cmpsl
jecxz
xchg
les
adc
call
mov
call
in
jns
add
ja
test
ret
into
cmc
and
dec
dec
outsl
pop
inc
pusha
orps
sarb
and
sbb
shr
cmc
lahf
cmpsl
dec
int3
pop
es
stc
cmp
push
mov
mov
pop
jl
mov
movsb
ss
in
xchg
fucomi
roll
push
push
loop
xlat
pop
push
arpl
push
jne
mov
subb
mov
cwtl
in
and
xor
test
or
push
shll
loop
insl
lcall
xchg
dec
pop
cmp
dec
in
lods
cmp
jl
cmpsb
loopne
push
mov
push
roll
or
jge
cld
mov
jl
xlat
sbb
idivl
dec
ljmp
or
jbe
out
mov
pop
scas
cmp
jne
leave
mov
lcall
arpl
rcrb
jmp
jno
mov
sahf
cmp
push
mov
lock
adc
sti
sub
cmp
add
sbb
jb
cltd
ret
inc
mov
add
out
xchg
sbb
pop
cmpb
sub
cld
hlt
int
lock
ss
cmp
cmc
and
or
pop
in
das
mov
add
pop
xor
jmp
add
movsb
push
or
popf
sub
pop
mov
popf
adc
jb
jbe
bound
in
push
push
pop
fwait
xor
push
xchg
popa
arpl
cltd
jmp
pusha
pop
leave
or
dec
add
inc
mov
out
enter
lret
cltd
ss
xchg
lock
in
pop
ss
add
mov
pop
inc
jo
or
jg
sbbl
aad
sbb
popf
sbb
test
xchg
mov
pop
xchg
addb
sub
and
fs
or
nop
pop
adc
inc
xor
lret
lods
inc
dec
in
imul
ja
dec
std
mov
movsb
sub
sbb
ficompl
cmp
stos
adc
push
jl
xchg
icebp
adc
aam
daa
xrelease
movsl
adc
jne
push
cmp
daa
and
sub
sbb
stc
mov
push
aam
cltd
scas
mov
mov
nop
hlt
in
dec
push
and
cmp
xor
push
sti
sub
pmaxsw
mov
int
xor
pop
and
ret
xchg
jb
cli
jp
addr16
mov
lods
ss
ljmp
jmp
inc
jbe
ret
iret
fnstcw
mov
lret
imul
bound
shrl
aam
insb
callw
test
subb
push
sbb
nop
sbb
pop
cmpsl
jo
rcrl
xchg
cmpsb
cs
push
lds
cmpsb
cmpsl
sub
mov
pushf
mov
pop
xchg
in
ss
xchg
mov
or
test
lcall
out
insb
rclb
mov
arpl
ret
rcrb
stos
pop
loop
test
mov
mov
dec
pop
sbb
dec
in
fstps
mov
divb
test
je
clc
adc
and
cld
cmpsb
ficoml
mov
cmp
arpl
hlt
sub
jno
inc
add
pop
fwait
or
outsb
loope
and
inc
ljmp
pop
ds
sbb
sub
push
or
xchg
pop
push
sbb
pusha
adc
pop
adc
cld
mov
dec
mov
fildl
outsl
loopne
mov
in
xchg
subb
in
add
call
xor
lret
out
lea
in
mov
mov
mov
or
dec
arpl
mov
imul
or
fbstp
add
shrb
outsl
outsb
fcompl
test
imul
fcom
movsl
cmp
xchg
push
je
pop
mov
add
mov
sbb
pop
pop
je
cmpb
cli
je
jecxz
and
xor
in
or
sub
in
iret
test
insb
call
ja
test
adc
inc
gs
cmp
adc
repz
call
leave
insl
test
inc
or
ds
in
addr16
es
in
ret
push
loop
daa
sbb
sbbl
adc
dec
dec
xchg
shll
add
and
jbe,pt
jo,pt
cmpl
aad
mov
out
je
mov
mov
push
orb
fistl
popa
sub
fildl
das
out
popa
not
jge
cmp
push
shl
pop
clc
mov
sub
repz
clc
ret
out
gs
mov
cmp
jns
sbb
or
or
xchg
jg
pusha
call
jle
shl
stc
dec
mov
xchg
pop
mov
lea
test
out
fsubrs
adc
and
mov
jmp
bound
push
push
outsl
insl
subl
or
mov
mov
or
mov
lods
mov
pop
aam
fidivl
in
enter
jmp
idivb
push
outsb
mov
jbe
call
inc
jae
sbb
lds
push
mov
xchg
scas
dec
adc
jne
mov
inc
mov
test
iret
push
iret
xchg
nop
xchg
jg
dec
push
sbb
add
mov
sub
in
cs
std
push
or
js
push
jno
pop
jecxz
pop
out
daa
sbb
push
ret
push
sub
out
pop
pop
push
mov
sbb
cmpsl
push
nop
push
xchg
mov
add
stos
push
or
adc
lds
mov
fnsave
std
or
dec
cmp
xlat
xchg
rorb
push
adc
sti
lret
mov
aas
push
sarl
fdivr
test
testl
sbbb
sub
ds
out
hlt
pushf
jae
inc
negl
dec
add
xor
cmp
or
push
shr
rcr
cmp
fmul
xchg
xchg
push
add
mov
lret
sbb
dec
jge
popf
and
adc
mov
inc
insl
and
dec
cltd
cmpsl
and
sarl
jmp
mov
fisttpll
dec
pop
jmp
pop
jl
cmp
inc
mov
leave
sbb
mov
in
ljmp
pop
push
in
mov
bound
mov
stos
lods
notb
ljmp
push
cwtl
lods
jge
jge
mov
ss
addr16
call
mov
mov
test
in
adc
ljmp
cli
fildll
mov
imul
jg
sahf
shll
sbb
jo
test
fwait
jecxz
inc
imul
cld
mov
mov
in
into
je
xchg
push
lods
sbb
sub
push
cld
xor
sub
or
adc
or
loope
movsb
fs
fnsave
push
inc
in
out
subb
jbe
sahf
add
rolb
sub
mov
orl
orb
adc
mov
adc
dec
add
xor
xchg
jge
push
in
adc
repnz
adc
sbb
lcall
std
aaa
jnp
and
xor
jbe
mov
push
outsb
mov
shl
or
xchg
or
inc
dec
mov
addr16
push
or
out
sbb
pop
sub
fsubs
pushl
das
mov
add
insb
mov
pusha
aam
fisttpl
mov
add
popf
mov
loop
push
push
cmp
out
sub
pop
push
and
sbb
leave
jno
ret
jecxz
out
scas
test
fst
inc
pop
outsl
dec
or
popf
jns
adc
mov
fwait
pop
scas
add
fucomi
sub
mul
scas
xchg
out
mov
lea
and
adc
lea
push
nop
fwait
rcrb
nopl
test
xor
cmc
jl
lock
jge
das
in
sbb
or
hlt
lea
flds
mov
and
mov
out
sahf
xor
test
test
gs
cmp
mov
daa
scas
jnp
push
mov
popf
arpl
in
in
mov
inc
inc
sbb
fbld
push
lods
adc
fs
cli
lahf
jae
cmp
imulb
mov
addl
in
dec
xchg
test
cmp
das
push
mov
or
jp
stc
cmp
dec
cmp
sti
mov
cld
hlt
or
mov
cld
lcall
xor
xor
test
out
fs
add
out
testb
iret
lret
lret
pushl
pop
push
int3
jne
xchg
mov
push
mov
iret
das
dec
lcall
aam
aas
outsb
fs
mov
divl
jge
sbb
iret
dec
push
cmpsb
sti
sbb
fdivrs
mov
dec
xchg
shrl
subl
inc
mov
pop
lds
arpl
jae
and
push
push
pusha
dec
pusha
mov
jns
aas
fidivs
les
test
dec
pop
cltd
subb
popl
lcall
imul
and
imul
dec
or
mov
lods
cmp
inc
or
or
lods
cmpsl
aad
cmpsb
rcll
push
push
call
shlb
frstor
mov
mov
pop
push
dec
imul
orl
outsb
sbb
inc
push
cmp
test
into
adc
lods
and
subb
or
in
shll
mov
and
cmc
add
lea
and
jbe
or
lret
daa
gs
jle
stc
pop
lcall
add
pop
pop
test
add
adc
xlat
cmp
pop
testb
sbb
out
cwtl
jne
add
cltd
jg
mov
int3
xor
mov
xchg
sbb
sub
cmp
or
push
adcb
insl
mov
fcomps
xor
dec
in
jl
pop
scas
sub
cli
cmp
pop
mov
inc
mov
push
fsubs
sbb
mov
jmp
ret
pop
int
jbe
gs
and
js
aas
sbb
jne
movb
shll
push
push
jo
loope
rcrb
push
add
pop
loope
insb
xchg
xor
aam
mov
repz
nop
les
daa
sti
sbb
pop
jnp
cmp
push
mov
sub
fdivr
aaa
clc
or
dec
loop
movsb
cwtl
jecxz
stos
lret
out
sub
inc
cmp
jle
repz
ss
add
mov
dec
fists
inc
std
stos
add
fbstp
mov
xor
push
aas
popf
addr16
adc
mov
push
mov
imul
inc
fsubr
cmp
or
outsb
inc
call
mov
adc
jecxz
rorb
and
mov
jecxz
jb
sub
and
rol
lock
imul
sub
cmp
jmp
jle
mov
pushf
lds
add
loop
out
int3
mov
subl
je
rorb
dec
inc
cmc
pop
inc
and
mov
popa
mov
pop
shlb
std
mov
mov
or
mov
pusha
xor
daa
cwtl
nop
cmpsb
pop
decl
ljmp
add
lods
pop
pushf
popa
cmpsb
pop
mov
sbbb
adc
pop
mov
push
sub
and
and
push
mov
in
fs
jo
jnp
icebp
mov
test
outsl
add
mov
or
or
mov
addr16
and
or
push
into
in
xchg
rorb
testb
shlb
dec
dec
popf
insb
js
mov
adc
stos
and
xchg
xchg
push
aaa
dec
fidivl
lret
fwait
xor
mov
daa
jno
and
push
arpl
xchg
lods
pushf
stc
cmpsb
pop
in
dec
insb
fwait
outsl
pop
inc
mov
inc
sbb
mov
cs
adc
cwtl
sub
test
dec
or
push
stc
scas
xchg
sbb
int
dec
outsb
aas
test
std
xchg
dec
cmc
scas
dec
adc
shlb
in
das
pop
pop
fadd
pop
lds
ljmp
ficoml
nop
inc
mov
loopne
pop
ss
repz
sti
inc
cmpsl
js
movl
adc
fisttps
rorb
add
fucomip
fsubrl
mov
pop
sub
dec
dec
inc
cmp
pop
lds
sbb
or
scas
lea
dec
jbe,pn
mov
int3
lret
out
inc
xchg
or
dec
xor
fidivrs
or
jmp
data16
adc
gs
xchg
test
and
test
xor
push
sbb
inc
xchg
add
xlat
andl
cmp
out
xchg
stc
pusha
jecxz
mov
inc
inc
push
int
movsl
jl
stos
scas
xchg
pop
in
add
jb
imul
fcomps
inc
gs
jbe
or
mov
aad
das
jge
aad
popf
in
adc
mov
pminsw
xor
push
or
gs
icebp
push
jl
xchg
mov
out
or
es
scas
loope
mov
push
movsb
ss
sti
lahf
in
shl
jns
adcb
mov
dec
enter
movsl
xor
and
xchg
cli
lds
je
inc
and
cld
pop
push
test
int3
fldt
frstor
push
je
in
push
std
fsubs
pop
xchg
jge
xor
sbb
or
mov
cltd
lods
imul
out
sub
mov
daa
cmp
xchg
ja
pusha
sbb
push
shrw
imul
idivl
push
dec
xor
and
pop
mov
sbb
ja
and
xchg
jp
inc
fbstp
dec
push
mov
je
jo
in
cmp
sub
xor
cmpsl
pop
enter
nop
lcall
mov
ret
xchg
dec
and
xlat
jmp
xchg
jg
icebp
cld
fildl
repnz
dec
cmp
jecxz
lea
jg
sub
test
pop
mov
lds
push
ficompl
xchg
das
mov
test
imul
mov
daa
mov
mov
or
mov
test
jecxz
pop
sub
mov
push
out
mov
shrl
fnstenv
ss
mov
sub
rcr
adc
pop
sub
adc
movsl
jne
jno
jmp
addb
ss
insb
ja
push
iret
hlt
sbbb
dec
shr
mov
scas
jecxz
popa
or
dec
mov
add
adc
jns
insl
jno
cmp
adc
lods
stos
mov
clc
xor
xor
cmp
aaa
cmp
jle
lret
imul
cmp
or
movsl
cmp
ret
adc
movsb
inc
dec
pop
mov
xchg
adc
int3
sub
lcall
lcall
bound
outsb
std
cmp
push
lahf
sbb
or
push
jle
in
andl
ret
pop
clc
ret
daa
in
fmull
jae
cmp
adc
aad
and
popa
rorl
cmp
xorb
dec
cmc
xor
mov
std
mov
push
leave
xchg
sbb
mov
pop
add
bound
inc
fists
loope
popa
stos
xor
ret
sbb
mov
cld
jo
mov
push
in
sbb
hlt
es
push
bt
xchg
add
orb
adc
pop
jmp
das
popa
sbb
xor
ret
fwait
lcall
xor
arpl
shlb
mov
ror
inc
xor
mov
lret
pop
sub
das
mov
pop
push
xchg
sub
paddq
jae
push
test
push
nop
pop
mov
enter
mov
pop
pop
lods
test
dec
xchg
xor
xor
ficomps
inc
mov
aam
adc
or
icebp
pop
rcrl
mov
fbstp
xlat
lcall
inc
pop
arpl
jl
adc
icebp
sti
roll
mov
stc
je
and
fisubrl
stc
or
mov
lahf
xchg
aas
adc
xor
aas
mov
iret
adc
js
sub
lret
popf
aas
add
add
in
pop
pop
mov
xor
mov
or
adc
ror
pop
mov
int
roll
push
insl
add
cmpsb
movsb
cld
xchg
or
xor
inc
out
mov
or
cmp
mov
sbb
and
out
mov
in
lea
leave
adc
popa
lret
popa
push
jnp
fstps
xchg
mov
jo
and
push
out
pop
movsl
pop
repnz
cmc
mov
outsb
pop
arpl
lea
sar
les
shrb
shl
inc
je
jmp
add
jecxz
test
or
cld
adc
imull
stc
dec
jmp
out
repz
xchg
sbb
cmc
cmp
xchg
fistl
xlat
push
and
aas
or
test
mov
leave
or
xchg
mov
dec
sbb
mov
or
pop
mov
arpl
push
mov
adc
out
xor
addr16
add
and
fcom
sub
lret
pop
sub
and
psubsb
or
je
xlat
imulb
sub
call
stc
push
pop
clc
sbb
pushf
into
lock
cmp
xor
mov
xchg
xor
pop
cmp
jge
ljmp
outsb
xor
mov
adc
ret
fistps
mov
push
or
and
mov
test
fwait
sub
mov
ret
xchg
or
movsl
inc
decl
lods
daa
inc
inc
xor
dec
mov
pushf
push
dec
scas
dec
push
push
popf
sub
xchg
push
mov
js
insb
push
cmp
stos
faddl
mov
dec
jl
lcall
or
int3
xor
lret
aam
out
cltd
jae
jge
out
add
int
mov
mov
addr16
cmc
movb
mov
adc
fsts
pusha
pop
and
push
inc
gs
mov
mov
push
cwtl
sbb
and
mov
jp
stos
jg
push
in
bound
fidivl
fcom
and
cmp
cmp
dec
arpl
testl
rcll
pusha
pop
dec
insl
cli
xor
lods
iret
sbbb
push
mov
pop
inc
pop
fwait
pop
ror
mov
adc
lea
add
aas
les
mov
loope
adcl
xchg
push
mov
mov
aam
fidivrl
or
push
pop
es
rclb
or
mov
stos
adc
rcr
test
mov
cmp
pusha
es
in
or
mov
les
scas
add
xchg
mov
sub
data16
cs
xor
out
hlt
xlat
push
loop
mov
fcomps
imul
int3
mov
mov
popa
jmp
mov
je
fs
inc
enter
das
out
mov
mov
mov
loopne
testb
lods
pusha
int3
jle
popf
test
pop
push
dec
test
in
push
shr
cmp
cmpsb
loopne
cmpsl
popf
jne
dec
sub
imul
push
in
or
in
stc
sub
add
ljmp
stos
xchg
sub
scas
push
mov
and
inc
mov
push
inc
mov
in
push
stos
scas
dec
ret
inc
lock
adcb
mov
insl
add
sbb
rcll
xlat
in
dec
mov
hlt
cwtl
push
lcall
mov
fisttps
in
dec
das
je
sbb
push
and
in
fstps
dec
int3
add
inc
filds
popa
xor
or
mov
adc
sub
cmp
outsb
mov
out
ja
push
and
outsb
pop
xor
jle
int
mov
jmp
je
outsb
daa
mov
mov
pushf
movsl
imul
mov
jge
out
inc
std
mov
repnz
insl
fisubrs
xor
jmp
repz
xchg
sub
ret
fcompl
loop
insl
outsl
xchg
cmp
lods
subb
sti
aaa
sbbb
popf
dec
scas
sub
push
sub
sti
popa
out
outsl
jne
loopne
aaa
cmp
aam
push
or
mov
inc
insl
popa
push
jno
and
jmp
dec
lret
add
imul
mov
into
in
lock
jns
stos
imul
daa
sbb
dec
lret
jnp
cmp
lret
je
ret
test
rorl
cmp
sbb
jle
and
dec
adc
hlt
push
insb
push
stc
enter
mov
movnti
aas
or
in
mov
jge
or
pop
repz
jne
cwtl
aam
je
cwtl
ljmp
imul
inc
sub
int
mov
aam
xchg
mov
int3
out
fildll
in
sbb
mov
fisubs
jge
pop
fdivrs
jp
out
push
fisubs
inc
cli
pop
je
jnp
xlat
daa
add
or
imul
sub
scas
push
add
mov
aam
pop
lcall
call
fs
rcr
mov
xchg
lods
cmp
in
je
ficomps
sub
movsl
mull
dec
cmp
inc
lret
popf
and
pop
mov
xchg
rol
rol
or
pop
sub
mov
mov
lock
sub
ss
cmp
cmp
pop
xchg
xor
imul
mov
jmp
sub
mov
shll
and
mov
gs
jns
xchg
mov
jns
fisttpl
imul
fidivrl
xor
arpl
add
aaa
fdivrl
adc
lret
jp
test
mov
movsl
mov
gs
xchg
shlb
jmp
sbb
adc
mov
xchg
pop
mov
xchg
pop
add
push
ja
pushf
mov
arpl
pop
mov
sbb
push
jle
and
push
lret
mov
jg
mov
push
in
sarl
push
lock
dec
idivl
clc
jle
aas
sbb
push
push
or
jecxz
mov
push
mov
stc
je
or
push
jb
mov
and
xchg
push
xchg
mov
adc
jne
and
push
push
scas
and
in
test
enter
inc
mov
subb
fwait
aas
push
mov
pop
pop
jnp
decl
and
mov
push
jge
xchg
dec
push
mov
repnz
test
pop
dec
into
stos
outsb
push
pop
xlat
xchg
dec
xchg
popf
jle
popa
and
fists
add
pop
or
popa
std
add
enter
and
outsb
pop
jmp
jp
adc
popf
testb
pop
sub
ljmp
data16
rclb
popf
mov
push
es
lds
call
and
and
jo
or
aaa
daa
xor
pushf
bound
pop
repz
data16
dec
dec
clc
aad
mov
subb
outsb
jg
pop
adc
sar
and
push
mov
repz
pop
xor
xor
pop
stos
mov
mov
inc
lock
stos
repz
mov
or
adcb
aas
out
jbe
fs
addr16
movaps
ss
jne
adc
pop
stos
repnz
pop
jnp
daa
adc
pop
shlb
sbb
xchg
inc
call
push
mov
insb
out
cmp
fists
jb
inc
popf
ljmp
lock
jmp
mov
jbe
test
sub
fidivrs
bound
clc
bound
cmp
jno
add
lds
or
cli
push
inc
xlat
mov
lea
repnz
sti
pushf
aad
lcall
inc
push
mov
jp
repnz
call
cmp
jnp
leave
jle
lcall
shll
iret
jmp
mov
pop
inc
dec
je
sti
repnz
xchg
mov
pusha
jge
xlat
cmpsl
mov
xchg
shrb
cmp
aaa
inc
adc
out
push
cli
sbb
adc
adc
lcall
repnz
push
cmpsl
adc
sub
int
cmpsb
out
mov
sub
cltd
repz
dec
jne
cwtl
ljmp
imul
loope
int3
or
or
and
scas
js
mov
inc
sub
fistpll
xchg
jns
fimull
push
dec
fadd
in
iret
insb
adc
inc
fwait
inc
cmp
pop
xchg
xor
sbb
jmp
push
mov
les
inc
add
adc
mov
push
mov
dec
and
mov
les
lcall
js
int
sub
enter
pusha
xor
je
fadd
shlb
xor
test
ljmp
mov
mov
sbb
mov
gs
mov
aad
cmp
test
into
fisubrl
add
cmpsb
xchg
out
cmpb
out
jae
aas
or
cwtl
push
je
inc
aaa
imul
mov
rclb
test
dec
shl
js
or
adc
lcall
dec
cld
xorl
cmpl
xchg
pop
inc
dec
lret
in
jno
jecxz
mov
sub
dec
mov
jle
xlat
mov
inc
dec
inc
lret
sbbl
mov
push
mov
test
int
dec
xor
imul
push
flds
mov
int3
rorb
es
cmp
ss
scas
mov
mov
jmp
test
imul
jns
adc
sti
je
and
jl
popa
push
nop
les
adc
jge
mov
push
sbb
xorl
mov
mov
pop
jb
addr16
mov
lock
cmc
fisubrl
sbb
enter
mov
stos
or
lahf
fldenv
and
pop
out
insb
into
jp
add
jl
xchg
mov
repnz
xchg
mov
push
sub
fcoms
dec
enter
push
add
add
int3
fnclex
pop
adc
out
outsl
push
popf
push
or
fsubrs
js
rcl
js
push
pop
call
sar
xchg
add
arpl
push
pop
cli
xor
aaa
or
stc
fdivrs
imul
pusha
fldl
iret
out
jnp
cli
shrb
int
fcompl
lahf
and
rolb
pop
xchg
cmp
jae
adc
xchg
inc
and
sub
push
popa
fsubrs
inc
out
and
sbb
cmovno
or
sbb
shrb
lods
push
fs
mov
mov
xor
cld
jg
sbb
jg
add
repz
push
daa
jg
bnd
sbb
lea
xchg
adc
or
jbe
popf
mov
xor
xchg
dec
pop
gs
jnp
push
leave
test
jg,pt
movsl
bound
loopne
adc
add
in
cli
sub
rolb
push
jge
rcrb
js
pushf
cltd
mov
mov
or
aaa
bound
jg
pop
push
scas
sub
test
inc
popa
adc
in
inc
jecxz
aaa
push
xlat
in
push
out
sbb
inc
lret
push
lcall
mov
push
inc
adc
test
pop
std
out
jle
mov
jo
addr16
push
xor
imul
dec
cld
imul
mov
icebp
xchg
cbtw
pop
add
add
xchg
in
cmpsb
out
xor
jno
or
dec
stc
or
leave
push
je
push
add
jns
mov
nop
test
jno
cmp
xor
rol
inc
iret
fwait
repz
lret
push
loopne
xchg
or
mov
push
ljmp
jecxz
xor
or
jo
mov
loopne
out
loope
jg
push
xor
dec
mov
loope
add
imull
lret
xor
adc
fsubrl
loopne
jbe
or
fistl
inc
fucomip
xchg
cmpsl
push
scas
int
cltd
sub
loope
call
mov
xor
enter
or
ljmp
out
call
lods
loop
icebp
fisubrl
cmc
jl
inc
inc
aam
or
sbb
stos
jne
jno
sbb
mov
stos
lcall
mov
push
mov
orl
mov
fnop
mov
dec
leave
xchg
jnp
mov
push
pusha
push
cmp
test
jg
jns
xor
lds
or
dec
mov
dec
std
aaa
lock
push
add
lock
out
sahf
and
out
dec
cmp
fbstp
stc
mov
imul
dec
dec
aad
in
nop
test
outsb
xchg
add
fisttps
jecxz
cmc
fscale
in
inc
int
jb
shll
xorps
xor
js
addr16
mov
dec
stc
daa
mov
clc
in
out
pop
movsb
push
in
stc
ret
dec
inc
sub
mov
pop
mov
out
sbb
out
mov
sub
divb
sahf
xorl
in
pop
sub
in
inc
cltd
ljmp
jo
and
pop
fcomps
hlt
scas
mov
nop
test
mov
push
mov
pop
dec
sub
sbb
adc
or
inc
and
stc
insb
jecxz
pop
loope
movsb
cmpl
mov
or
mov
xchg
pop
lret
loope
pop
imul
push
mov
pop
por
cmpb
fcomp
imul
out
xor
or
dec
mov
inc
or
mov
add
call
and
out
mov
jne
out
push
or
xor
xor
mov
fwait
xchg
notb
lcall
add
adc
sarl
cli
lcall
mov
xchg
fidivl
xchg
push
jmp
sbb
fmull
sub
xchg
pushf
enter
pusha
pop
push
push
cwtl
lods
inc
imul
in
int
sub
xchg
shrl
movl
pop
xchg
cli
mov
fst
rcrb
ss
xor
xor
fimuls
out
pop
nop
dec
inc
rclb
daa
mov
mov
fsubs
ror
xchg
lret
jmp
dec
xor
aaa
ja
and
mov
mov
mov
mov
lods
pusha
and
cwtl
xchg
mov
jge
push
out
out
inc
stos
sti
mov
popf
test
and
adc
push
inc
xchg
cmp
sbb
cli
or
pop
popf
jmp
mov
jmp
das
dec
mov
jp
dec
lret
testl
movsl
pop
cltd
bnd
pop
mov
roll
cs
outsl
in
imul
subl
ficompl
loop
xchg
add
mov
mov
mov
fdivr
aaa
add
data16
cmp
mov
les
jb
lock
gs
les
sahf
dec
cld
inc
lea
inc
insl
jo
nop
dec
mov
loop
adc
mov
loope
push
sub
pop
call
push
fisubrl
mov
test
jecxz
cli
mov
aaa
push
clc
pop
dec
cld
sbbl
sub
push
cmp
xchg
sbb
or
stc
test
andl
mov
lret
xor
cltd
mov
test
pop
add
push
push
sub
shll
test
lods
mov
push
inc
insb
aad
lcall
insl
or
mov
sbb
or
push
mov
imul
or
in
lret
cs
repnz
fistps
mov
in
sbbl
jmp
xchg
inc
push
push
push
das
inc
lds
rcrb
imul
cld
call
std
sbb
fsubr
aaa
push
mov
aaa
stc
dec
add
cmp
or
push
into
pop
cmp
ja
cltd
fstps
stos
push
arpl
adcl
cmp
and
call
lods
sbb
cmp
jbe
mov
ss
roll
int
pop
adc
cld
cmpsb
mov
data16
pop
loop
cwtl
push
pop
xchg
outsl
cld
fbld
imul
sbb
and
push
cs
cmovbe
add
cmp
xchg
jns
clc
push
jle
inc
jb
mov
push
out
loopne
gs
sbb
adc
outsl
jbe
mov
dec
jo
stos
lret
push
les
pop
jbe
lret
and
sbb
icebp
popa
adc
mov
orl
jns
dec
lret
mov
jb
and
out
xor
jae
jb
or
mov
jl
test
pop
in
std
nop
add
or
aad
popl
mov
adc
lock
movsl
add
popl
rorb
imul
jg
lds
insb
sti
xchg
push
pop
nop
jecxz
xor
leave
outsb
insl
sbb
jbe
mov
lods
mov
andb
push
mov
sahf
jo
and
dec
jns
mov
add
cld
outsl
inc
mov
xchg
cs
dec
pop
and
orb
adc
xchg
icebp
adc
roll
popa
mov
das
push
inc
xchg
movsl
cmp
or
jns
aam
jb
mov
pop
cmp
fisubrs
xor
ss
lock
cmp
gs
pop
cmp
mov
arpl
jb
and
mov
inc
call
mov
lea
js
ret
sbb
repnz
rcrl
mov
jp
xchg
rep
lds
outsb
jle
push
sub
mov
pop
mov
xor
and
call
js
cmp
mov
jae
mov
push
fimuls
adc
test
ret
in
xor
push
loopne
mov
inc
cs
jb
cmp
xor
stos
aad
pop
popa
inc
push
dec
adc
xor
add
pop
shll
outsb
out
cs
or
pop
mov
mov
scas
daa
jmp
and
push
fnsave
push
mov
movsb
pop
shl
lahf
and
add
inc
push
popf
or
sub
mov
int3
js
dec
ljmp
sbb
jbe
les
repnz
inc
jmp
pop
lds
cmp
pop
or
gs
outsl
ret
xor
and
jne
push
stc
add
inc
fadd
mov
nop
icebp
out
rol
xchg
jge
jno
cmpsl
jo
cmp
aas
add
das
hlt
jp
inc
data16
add
xor
cmc
jmp
lcall
sub
xchg
aaa
mov
xchg
xchg
cmp
push
lock
lods
pop
mov
mov
pop
cmp
imul
sti
pop
leave
jl
sbb
add
pop
pop
repz
or
outsb
jmp
xchg
call
pop
test
add
push
cmpsl
or
mov
adc
push
je
scas
push
sub
das
popa
fnstenv
jb
mov
and
into
es
add
stc
pop
pop
dec
imul
mov
lock
sarb
jl
jno
aam
fcomip
dec
test
push
ds
lcall
cmpsb
imul
fbstp
pop
cmp
mov
mov
xchg
aam
test
imul
mov
mov
bound
mov
sbb
jns
push
call
stos
mov
aas
xor
and
mov
push
cmp
and
sarb
addl
mov
mov
sbb
sbb
xor
sbbb
xchg
inc
and
xor
push
push
add
or
lahf
jo
and
lea
and
sub
sbb
sub
pop
inc
movl
je
popf
mov
enter
stos
mov
sti
pop
jl
pop
inc
lahf
insb
xor
jmp
xor
inc
and
repz
xchg
das
jg
lcall
cmp
lcall
mov
sbb
push
scas
mov
mov
mov
fstps
jle
jae
or
mov
xor
outsl
sti
jb
int3
into
push
hlt
sub
push
adc
sbb
dec
in
mov
push
test
out
mov
pushf
andl
push
mov
pop
fidivs
enter
jns
inc
mov
insl
jno
out
dec
pop
mov
data16
inc
push
dec
out
sub
aaa
icebp
mov
lret
adc
fisttps
das
rorl
adcb
cmp
fwait
cmp
mov
jp
rorb
push
bound
or
dec
std
fucomp
cmp
mov
shrl
inc
cwtl
ljmp
pushf
dec
push
aad
jo
fsubrp
rcrb
fcmovnbe
or
jmp
in
push
mov
daa
loopne
sbb
call
aad
xchg
sbb
mov
xchg
out
adc
push
int3
lock
push
sbb
aas
jnp
mov
pop
iret
pop
dec
icebp
sbb
enter
int
cmp
jp
enter
icebp
xorl
stos
scas
sbb
pushf
leave
mov
cmp
cltd
aas
fildl
jp
xchg
inc
inc
fwait
mov
adc
movsb
cmp
mov
jno
js
dec
out
mov
jae
push
aam
icebp
dec
xor
push
imul
daa
in
jbe
fcmovu
cmp
pop
cli
lea
sub
cmc
cwtl
sub
pop
sbb
mov
sbb
hlt
adc
xchg
out
sub
leave
push
jne
push
xor
movsl
xor
pop
loopne
lock
shl
push
adc
sbb
push
add
aaa
add
cwtl
stc
adc
movsb
adc
shr
aam
in
out
xor
insl
mov
hlt
add
call
in
sarl
stc
test
les
pop
or
or
ja
jmp
or
mov
testl
jmp
inc
ret
sarl
jnp
aam
xchg
icebp
inc
mov
fisubl
int
adc
sar
lret
mov
imul
sbb
push
adc
fstl
sahf
jmp
adc
adc
sub
aas
push
inc
lcall
xor
lahf
outsb
dec
lret
cli
mov
shlb
loopnew
aam
xchg
mov
out
mov
fs
int
clc
call
cmp
out
addl
imul
stc
jg
dec
scas
int
mov
dec
xor
test
sti
cmpsl
addr16
mov
xor
fnstsw
jb
pop
xor
das
jl
rcrl
testl
fiadds
lods
sbb
xor
hlt
lods
pop
cmp
cld
mov
mov
adc
sbb
fisttps
loop
fs
push
lcall
mov
hlt
or
sub
mov
fwait
lods
xchg
leave
out
jl
popf
mov
dec
movl
pop
xor
test
pop
popf
sti
ret
xchg
stc
shr
xchg
mov
mov
shrb
mov
jo
jmp
andl
lahf
and
mov
cltd
xchg
add
sbb
add
stc
xor
stc
jecxz
inc
inc
sbb
mov
jp
push
or
pop
jecxz
int
fmuls
jecxz
rclb
dec
pop
sbb
cltd
mov
inc
ret
shlb
sarl
popf
or
mov
out
push
es
pop
push
sub
notl
xlat
int
cltd
mov
ljmp
in
lret
inc
cmc
fists
mov
pop
push
xor
or
adc
sub
jns
out
pinsrw
mov
stos
dec
or
cmp
sbb
push
or
or
xchg
mov
jecxz
fldpi
xchg
sub
push
imul
loope
insb
gs
fsubl
or
jns
mov
icebp
jbe
popa
push
inc
xchg
lea
xlat
cmp
lcall
inc
sarb
mov
jge
or
negl
jmp
popa
imul
out
aas
es
ss
out
imul
xor
loope
pop
add
ja
subl
test
icebp
enter
mov
outsl
adc
sub
mov
lret
loopne
lahf
xchg
fcmovb
and
mov
and
repz
mov
mov
add
push
dec
fimull
call
repnz
pop
pusha
jbe
ret
xchg
pop
and
mov
bswap
jb
ret
nop
pop
cmp
xchg
sub
or
stos
xchg
sub
mov
jno
popa
inc
pop
in
fists
mov
add
cli
mov
xor
mov
or
nopl
std
or
repz
ret
faddl
push
inc
xchg
mov
xor
mov
jmp
into
pop
scas
jb
pop
mov
stos
dec
pop
iret
stc
ljmp
mov
mov
mul
clc
push
out
loop
ficoml
cli
jle
xorl
fisttpl
sub
push
or
pop
sub
mov
jp
jge
add
in
leave
cmp
sahf
or
out
andb
shll
push
stc
shll
jno
and
and
pop
xor
outsl
out
push
xchg
jno
mov
out
mov
push
insl
and
mov
fmulp
mov
mov
xchg
scas
fiaddl
dec
push
push
xor
imul
iret
and
sbb
clc
push
mov
xor
les
sahf
testl
stc
lods
pop
and
add
cmpsl
cmpb
loope
xor
xor
mov
xchg
cltd
mov
jae
gs
inc
or
pop
mov
pminub
sbb
push
movsl
jno
cmc
cwtl
test
cmp
out
sbb
mov
std
mov
icebp
inc
or
jecxz
and
subb
pop
xor
data16
je
lea
std
loopne
adc
jge
xchg
sbb
icebp
rcr
mov
out
jg
mov
pop
int
mov
xor
stc
js
mov
cltd
inc
stos
dec
or
test
addl
adc
lds
adc
pushf
mov
dec
sbb
inc
arpl
test
lret
push
sub
inc
jecxz,pn
shl
push
fidivrl
sub
cmpsl
aad
sahf
std
or
mov
jp
bound
mov
mov
push
xor
jmp
sub
fistps
nop
xor
js
push
mov
rclb
pop
push
sahf
xchg
inc
lcall
andl
cmp
mov
pop
roll
pop
repz
fcmove
fistl
xor
push
mov
sub
mov
fisttps
in
loope
cmp
imul
adc
xor
jne
cltd
int
jno
gs
xor
lea
jne
adc
cmp
fwait
les
push
mov
jle
mov
mov
mov
jne
insl
push
inc
ss
xchg
pushf
and
xchg
stos
repnz
add
daa
add
divb
jle
shrl
repnz
cmc
fs
mov
int3
add
in
xor
test
out
dec
mov
pop
mov
aam
cmp
push
inc
push
sbb
and
pop
xor
imul
fst
xor
lahf
ja
into
push
adc
outsl
push
mov
adc
mov
or
scas
fildl
repz
aaa
and
dec
push
sbb
xchg
cmp
cmc
and
jb
outsl
fcmove
hlt
inc
jecxz
mov
mul
pop
mov
jbe
add
test
lret
dec
lods
movsl
adc
out
aam
popf
pop
out
xchg
lods
es
pop
insb
popf
dec
jb
push
aas
fwait
ret
lret
adc
pusha
xchg
es
dec
cmc
pop
addl
dec
cmp
popa
mov
std
jnp
pop
arpl
push
or
add
cmp
cs
sbb
and
ds
in
jl
cmpsb
xchg
bnd
movsb
mov
mov
lods
mov
pop
push
xchg
sub
fucomi
xchg
sbb
xor
in
xor
dec
test
xor
stos
out
in
fs
mov
mov
shlb
neg
cld
fucomi
decb
in
out
bound
dec
xchg
popa
cmp
adcb
jae
fs
into
sub
cli
stos
mov
dec
rorb
loop
add
push
jmp
std
fsubrs
xor
and
int3
pop
push
mov
into
add
jecxz
inc
sarb
adc
jge
inc
shl
pop
sbb
xlat
add
aas
jmp
jmp
sbb
hlt
xchg
or
popf
movsl
jge
lods
leave
loope
or
mov
push
cmp
loop
das
ret
pop
rcrl
xor
mov
xchg
dec
add
shr
jle
lods
int3
push
ror
aaa
lods
popl
cmc
mov
stos
das
cmpsl
sbb
fstl
add
cwtl
sbb
outsb
pop
shlb
push
cltd
xchg
and
sub
test
pop
int
in
xor
aam
mov
add
out
scas
paddd
test
lea
mov
sub
ja
enter
sbb
repz
xchg
shl
lods
mov
hlt
push
xchg
stos
loopne
sahf
cmp
stc
xor
xchg
repnz
frstor
lods
xchg
jl
dec
pop
popf
pop
out
dec
ss
sub
mov
jne
adc
xchg
jecxz
leave
mov
les
fs
bound
mov
addr16
jecxz
mov
inc
cmp
test
xchg
mov
adc
jbe
xor
push
mov
cmc
leave
shl
mov
outsb
insb
cwtl
sub
icebp
jl
adc
inc
xor
mov
nop
popl
lock
and
cmp
repz
fnstsw
ljmpw
and
dec
sub
sub
adc
outsl
movsl
cmp
jg
ljmp
lds
into
jecxz
pop
push
dec
scas
aam
aaa
pop
nop
movl
mov
addl
mov
test
dec
cmpsl
push
and
mov
cli
fisttpll
test
out
bound
in
push
enter
movsl
sbb
hlt
aaa
in
cld
notb
movsl
fwait
and
mov
iret
pop
cmp
ljmp
std
xor
idivb
pop
enter
lret
loope
push
or
mov
gs
jecxz
loop
lcall
cmpsb
dec
sti
popa
icebp
fldt
icebp
jp
stos
les
push
inc
mov
jno
xlat
leave
insb
test
xchg
push
popf
jg
xor
test
push
mov
test
adcl
xchg
cmp
pop
fwait
xor
mov
push
aaa
push
lock
icebp
std
inc
adc
mov
ficoml
jbe
add
add
sub
jp
or
aam
ret
mov
pop
xchg
ja
xchg
adc
or
test
fistpll
clc
jnp
jo
repz
int3
xchg
mov
test
mov
mov
sub
aad
xchg
mov
rolb
fwait
jno
mov
and
push
loope
daa
pop
aaa
dec
in
mov
pushf
xchg
mov
incb
lret
mov
lret
loop
ss
ret
nop
sub
inc
aaa
or
mov
lret
arpl
in
mov
fnstenv
insl
icebp
ljmp
ret
mov
rcrl
jbe
mov
jae
and
pop
or
xlat
inc
fiaddl
fdivrl
sub
adc
fidivrs
mov
or
xor
pop
jg
aad
cmp
add
in
mov
mov
pusha
mov
jo
and
mov
cmp
pop
loopne
xchg
mov
outsl
fidivrl
movsl
inc
or
fldcw
pop
aas
mov
insb
cs
and
hlt
fwait
leave
loopne
cmp
imul
sbb
inc
repz
sarl
std
andb
xlat
mov
mov
inc
push
cmp
push
lods
xor
sbb
out
pusha
inc
insl
test
mov
fcos
pop
popf
dec
pop
je
or
cmpsb
imul
push
inc
inc
xchg
adc
imul
pop
push
inc
adc
stos
xlat
pop
xchg
push
jecxz
inc
movsl
out
jnp
sub
sub
fidivs
sbb
je
pop
les
and
shll
lcall
xchg
sub
add
push
mov
scas
stc
jae
xchg
mov
pusha
add
xor
fimull
inc
sbb
call
xchg
mov
xchg
jae
jmp
rcrl
popf
insl
and
outsb
aaa
addb
jnp
mov
xchg
iret
ja
popa
and
sahf
xchg
mov
jnp
cmp
cmpsl
mov
shr
mov
xor
jne
sbb
adc
adc
push
mov
jnp
xor
ret
insl
pop
push
xor
xchg
rolb
xchg
and
sub
cmp
stc
loop
rorb
jp
xor
mov
cmpsb
mov
orb
in
fisttps
fiaddl
push
mov
push
cltd
fstl
cmp
mov
or
xor
mov
add
dec
and
add
jp
negl
sbb
ds
xchg
sbb
mov
fwait
and
mov
aas
mov
jne
add
jle
loope
sub
movsb
sahf
scas
jbe
and
test
icebp
test
inc
inc
xor
imul
pusha
add
mov
int
fiadds
jmp
rclb
dec
add
enter
out
out
std
nop
cmp
xor
sbb
movsb
xor
cmpsl
xchg
es
and
outsl
fldcw
adc
imul
daa
into
add
pop
add
rorb
aaa
add
and
mov
rclb
sbb
and
jecxz
arpl
inc
mov
jecxz
xchg
inc
dec
gs
jle
out
xor
sbb
mov
cwtl
sbb
and
inc
stos
mov
das
cmp
sbb
sub
fcoml
sahf
dec
insl
insl
inc
cmp
or
inc
xchg
into
movsb
rorl
push
test
mov
push
cltd
scas
pop
outsl
lret
mov
iret
rol
push
in
out
shrb
es
fsubp
ficompl
arpl
adc
rorb
xchg
fdivrl
neg
jb
adc
dec
adcb
data16
lret
push
or
or
arpl
into
xor
xchg
jg
je
and
and
idivb
pop
pop
daa
mov
fidivrl
mov
push
insb
mov
dec
sub
mov
je
cmp
dec
xor
adc
mov
rcrb
je
lock
pop
or
or
push
inc
xor
negl
xlat
je
pop
in
mov
jns
xorb
adc
mov
xchg
or
cmc
dec
sbbb
xor
in
mov
jl
fstpt
mov
movsl
mov
or
inc
fildl
loope
or
xchg
cmp
scas
js
hlt
jnp
mov
in
pop
dec
imul
pop
jecxz
add
dec
sbb
mov
xor
sbb
sbb
call
jmp
js
and
jbe
jl
sbb
fiadds
add
cmpsl
clc
or
cmp
cmp
xchg
movsl
dec
jbe
rcr
sub
pusha
shlb
lea
xchg
sub
mov
cmpsl
loope
mov
xchg
inc
and
or
repnz
push
jae
xorb
stos
jg
push
lret
out
outsb
jg
test
pop
ret
loop
or
xchg
sahf
cmpsl
imul
mov
cmpsl
cwtl
fimull
push
cmp
xchg
std
dec
es
stos
ljmp
repz
push
jge
lods
sbb
mov
adc
ret
mov
mov
outsb
xchg
cmp
fstl
mov
daa
fsubrl
jne
dec
rorl
in
out
data16
cmpl
add
add
cwtl
sbb
out
and
xor
adc
sbb
popa
dec
dec
sub
and
mov
mov
lahf
and
orl
mov
push
call
pop
ljmp
add
mov
fbld
leave
andl
repnz
sub
push
adcb
xchg
stos
adcb
push
xor
sbb
pusha
dec
mov
je
repz
sub
in
decb
pusha
data16
sub
inc
aam
fisubl
jge
jb
inc
lods
ds
xchg
in
stos
pop
insb
or
xchg
lret
cs
enter
add
sbb
div
ret
push
cmpsb
shl
jg
xor
aaa
cmp
lods
icebp
in
mov
sbb
push
sbb
int
testb
sti
push
cmc
outsb
lahf
int
mov
adc
pushf
enter
and
sti
fisubs
aaa
pop
movsb
push
and
sbb
mov
incb
loop
push
cmpsb
xchg
sub
idivl
sub
negl
movsl
push
mov
and
xchg
dec
xor
adc
lds
add
dec
inc
jnp
icebp
cmp
push
into
push
fcoml
lock
scas
stos
aad
imul
aad
sahf
push
data16
ror
jo
sbb
rcrl
mov
lds
pop
les
test
jo
les
nop
aam
pop
fnstcw
cmp
mov
daa
pop
mov
les
sub
sbbb
sbb
sbb
xor
add
pop
loopne
sub
fldcw
in
and
test
dec
nop
mov
jne
pop
cmp
adc
lahf
jmp
int3
sbbw
insl
add
sti
dec
mov
stos
insl
insb
pop
mov
adc
mov
pop
and
inc
cltd
scas
adc
jmp
pushf
jbe
scas
je
adc
sarl
and
aad
and
cmc
sub
cltd
out
std
out
mov
sub
and
add
lods
decl
ss
fidivl
lods
pop
cld
sub
push
lods
rcrb
ljmp
sbb
jecxz
or
movsb
mov
push
mov
adc
xor
pop
out
outsl
cwtl
cmp
loopne
sub
je
and
push
insl
jmp
xchg
xchg
adc
jnp
leave
cmp
adc
call
test
and
out
pop
scas
push
nop
lods
cmpsl
insb
sbb
out
cmp
in
out
jg
popl
or
and
or
rolb
jo
xor
lods
cmp
ret
sbb
lret
inc
inc
jno
jne
push
jmp
dec
xchg
out
push
adcb
jecxz
xchg
mov
sub
subb
jge
hlt
iret
mul
dec
test
in
pop
adc
inc
shlb
jge
jmp
mov
int
popa
adc
les
mov
enter
fwait
push
or
jne
mov
xor
movsl
aad
pop
gs
lock
inc
dec
xchg
daa
lret
sbb
or
add
int3
push
bound
jbe
je
pop
lahf
nop
jmp
mov
adc
dec
icebp
mov
inc
lods
icebp
fsubrs
sbb
xchg
sub
cltd
mov
sarb
daa
push
inc
orl
and
fs
lcall
es
test
cmpsl
stc
or
sahf
pop
sbb
push
xor
cmp
fiaddl
decl
fs
cmp
push
xchg
or
add
sbb
pop
inc
and
arpl
and
test
lds
mov
adc
jae
jbe
pop
out
call
mov
and
vmptrld
addb
xor
and
jae
inc
ret
cmpl
xchg
jns
jae
stos
repz
add
pop
daa
sbb
sub
jne
in
mov
clc
test
adc
add
cmp
lahf
fs
les
addl
imul
outsb
jp
sub
and
xor
test
loop
or
jae
out
rcrl
scas
adc
cmpsl
cmp
xchg
jge
mov
int
call
and
sbbb
jb
jbe
popf
mov
lock
mov
sub
mov
ljmp
mov
add
inc
dec
ficomps
mov
gs
inc
mov
push
ljmp
in
mov
cwtl
xor
fcomps
mov
jp
push
push
cwtl
outsb
lcall
cmpl
xor
ret
sti
jb
jae
sub
ret
push
cmp
mov
push
pusha
push
push
push
push
jg
or
inc
xchg
outsb
sbb
scas
lods
mov
inc
testl
push
jbe
jnp
lret
ror
xor
aas
out
mov
mov
xor
movsl
push
jns
ss
add
test
popa
or
pushf
nop
scas
mov
jno
sahf
test
not
iret
shl
cmc
mov
das
xchg
out
scas
adc
je
popf
and
int
cltd
push
jg
dec
cmc
pop
icebp
pop
inc
popf
lods
pop
shll
mov
xor
mov
scas
nop
loopne
loop
xor
das
les
cs
pop
mov
lds
jmp
movsl
xor
push
sbb
xor
xchg
mov
fnstenv
jno
or
xchg
add
mov
mov
clc
adc
mov
iret
inc
jae
lahf
in
pusha
adc
shll
and
out
into
jbe
in
mov
rclb
fs
sbb
inc
adc
out
mov
jmp
out
subb
dec
sbb
sub
xchg
pop
add
loope
into
push
imul
push
mov
sub
stos
dec
dec
mov
mov
push
mov
mov
iret
add
push
inc
std
xchg
push
cmp
rorl
xchg
xor
jge
movsl
pop
xchg
cltd
mov
mov
inc
ds
or
ror
xchg
std
xchg
inc
pop
div
insl
movsl
jb
enter
mov
mov
dec
faddl
repz
test
cmpsb
dec
jno
hlt
xchg
das
mov
mov
int3
aas
cmp
xchg
adc
sbb
inc
jne
decb
pop
in
outsb
mov
lea
stos
xor
dec
jp
mov
add
and
mov
in
sub
fstps
ljmp
out
mov
fistps
andl
mov
sub
insb
fs
pop
es
jbe
lret
ja
lret
adc
push
push
xchg
xchg
mov
push
inc
ret
nop
push
lret
into
into
push
insb
sub
cs
mov
in
pop
xor
rorb
push
lret
mov
in
icebp
or
fcomps
std
add
mov
fcomps
into
es
add
mov
pop
fstps
inc
cltd
repnz
mov
dec
lea
fbstp
push
movsl
fadd
dec
mov
or
jbe,pt
orl
pop
repnz
fnstsw
mov
movsb
sarl
push
iret
mov
clc
dec
xchg
dec
enter
lret
repz
or
decb
push
and
or
xor
jecxz
andl
sbb
push
cmp
mov
mov
push
inc
xchg
fcomi
adc
cmp
push
mov
or
pop
test
sti
fsubs
pusha
mov
pop
jecxz
fidivs
add
repnz
mov
stc
das
inc
cmp
and
xchg
xor
mov
or
in
mov
mov
mov
lds
and
xor
ljmp
xor
jmp
mov
add
mov
mov
or
test
jno
xchg
clc
xchg
test
push
jno
add
dec
es
pop
jo
mov
test
das
xchg
inc
rorb
inc
pop
incl
stos
mov
imul
mov
gs
jne
mov
lds
jge
movsl
rcrb
cwtl
test
cmpsb
sar
out
pusha
rorb
outsl
sbb
jnp
pop
dec
clc
pop
sub
push
pusha
scas
cmc
lods
aam
movsl
fchs
test
cmp
in
jecxz
sar
and
sub
jge
shr
or
shll
cwtl
jle
mov
int3
cmp
xchg
jge
arpl
neg
inc
xor
das
hlt
mov
mov
fdivr
leave
mov
daa
xchg
inc
mov
cmp
cli
push
cmp
cmp
push
inc
jb
hlt
cli
mov
sub
mov
push
ja
loop
jo
adc
pop
int
sarl
sub
adc
ret
push
xor
push
dec
fcoml
mov
push
xor
rcrb
sub
lock
rep
jl
pop
fisubs
sti
mov
jmp
out
jns
pop
mov
je
nop
dec
xchg
cmpsb
sbbl
push
xchg
bound
bound
push
mov
aas
or
iret
imul
or
mov
rorl
cmp
sbb
test
dec
cmp
sub
in
sub
pop
stos
sbb
add
andb
mov
xchg
insb
mov
or
sub
mov
dec
scas
mov
xchg
shr
imul
push
xchg
sub
add
aam
int3
in
lret
mov
and
mov
test
movb
xchg
mov
adc
iret
movsl
test
bound
pop
mov
adc
xor
push
loopne
outsb
ror
adc
and
adcb
push
and
std
repz
std
mov
add
sbb
lcall
push
and
dec
int3
mov
leave
aaa
jbe
fists
pop
lahf
dec
or
mov
jne
mov
repnz
popa
inc
out
jge
cmp
mov
pop
repnz
cli
mov
imul
fs
fidivl
sahf
fnsave
adc
test
outsl
cmpsb
repnz
mov
ret
mov
mov
fdivrl
jecxz
and
inc
enter
push
negl
in
jnp
jle
in
movsb
ljmp
arpl
pop
es
adc
mov
popa
insl
lahf
xor
push
repz
add
stos
fstpl
fstpt
pop
in
lods
sahf
and
mov
pusha
idiv
ss
sub
call
adcl
jnp
stos
push
cmp
mov
dec
les
mov
pop
ljmp
xlat
cmp
in
aam
sub
imul
adc
and
fistpl
test
and
jnp
fldt
mov
and
jb
loopne
stos
in
push
imul
add
insb
rcrl
dec
iret
imull
imul
cmp
inc
test
add
or
rcll
xchg
xlat
lahf
sti
cmp
push
movsl
ljmp
mov
xor
int
jb
outsb
fucom
xchg
xorl
and
cmp
out
jae
mov
cmp
sbb
movsl
int
pusha
push
mov
inc
loope
and
mov
gs
lahf
loop
fldcw
add
mov
sub
cmp
fwait
dec
rcrb
stos
fwait
mov
addl
add
out
cmc
and
push
xchg
rolb
mov
dec
add
or
add
aam
outsb
mov
dec
adc
mov
lods
mov
dec
sbb
xchg
jmp
cmpsb
mov
fildll
xor
les
div
lcall
xchg
enter
dec
lcall
pusha
mov
int3
aaa
jo
scas
ds
sbb
xchg
sub
xchg
test
rcrl
imul
cmpsl
sub
test
cmp
adc
sti
dec
test
mov
lds
clc
or
cmp
and
or
clc
aaa
sbb
or
dec
frstor
mov
insb
jg
mov
mov
adc
in
and
inc
es
insl
push
sub
dec
pop
push
push
and
out
imul
fldl
mov
cmp
inc
popa
jle
js
jp
stos
test
rcrb
mov
fdivl
fisttpl
popf
repnz
adc
loope
enter
and
xchg
imul
mov
addl
inc
jno
insb
fnstenv
dec
mov
cmpsl
fistps
mov
fbld
mov
mov
outsb
inc
cmp
push
mov
mov
test
pop
loopne,pt
xchg
sbb
scas
clc
outsb
lret
mov
arpl
dec
push
pop
popa
cmpsl
hlt
dec
ss
push
dec
mov
shrl
pop
dec
adc
test
ret
mov
fistps
mov
adc
sar
fiaddl
fstps
icebp
repnz
and
lret
into
lret
cmpxchg
xchg
sbb
or
and
les
mov
jae
add
jbe
arpl
stos
lahf
test
add
je
in
test
sub
sub
in
into
mov
lret
fwait
jl
jbe
ret
mov
mov
scas
stos
push
sub
sbb
xchg
movsb
jle
xor
aaa
add
lahf
or
lods
or
mov
xchg
in
aad
lahf
adc
fistpl
sub
and
out
mov
cmp
in
popa
inc
push
lock
pusha
ss
pop
in
andl
sahf
dec
and
fldcw
xlat
xor
jne
repz
movsb
xchg
sbb
mov
pop
mov
lahf
xor
mov
add
push
scas
rclb
pop
push
xor
mov
sbb
loop
addr16
mov
or
jmp
fwait
cmp
fwait
push
add
and
cmp
mov
push
cmc
shll
andl
adc
out
push
mov
mov
icebp
aaa
faddl
adc
xchg
mov
xor
push
mov
aas
psadbw
cmpb
loope
sbb
mov
pop
mov
mov
adc
out
outsb
adc
imul
jo
or
sbb
push
sbbb
pop
push
fimuls
loopne
les
xchg
lahf
mov
xchg
test
test
or
jle
add
mov
popa
push
sub
xchg
rolb
sub
hlt
shrb
push
xor
jb
add
pop
or
pushf
hlt
pushf
jnp
stos
gs
stos
and
mov
add
stos
cmp
sahf
mov
push
sarb
pop
lods
xchg
or
xchg
jmp
packuswb
dec
pop
dec
mov
or
push
mov
jno
rclb
and
mov
sbb
fsubp
xor
into
mov
enter
sysenter
iret
xor
loop
add
push
jnp
xor
test
je
or
inc
mov
cltd
fwait
enter
lcall
mov
ret
pop
lods
pop
fstpl
sub
xchg
push
xchg
fisubs
mov
cmpb
mov
mov
aas
mov
in
out
mov
mov
adc
jle
mov
ja
mov
push
jnp
xchg
mov
pop
push
xchg
push
and
jge
popa
fwait
sub
stos
dec
imul
mov
les
add
dec
push
xchg
aam
clc
popf
addr16
scas
fstp
gs
xchg
inc
jnp
les
jne
and
push
test
mov
mov
lret
pop
enter
fidivs
jge
bound
aaa
push
je
xchg
push
ret
negl
jg
mov
divl
ja
adc
jg
ficoml
cwtl
aaa
and
mov
mov
test
cmp
push
scas
mov
pop
xor
jae
das
mov
cli
dec
sbb
mov
adc
jecxz
pop
jmp
rorl
cmpsl
out
add
or
loopne
xchg
les
jbe
jmp
js
and
or
insl
aad
pusha
mov
aas
loope
cs
or
aas
adc
dec
shrb
pop
add
jmp
dec
clc
ficoms
cmp
aaa
xor
xchg
rorl
leave
aad
dec
sbb
daa
pop
insb
push
mov
aad
or
outsb
adc
or
jge
movsb
dec
sub
enter
test
sbb
push
pop
outsl
sbb
jg,pn
pusha
outsb
pop
xchg
outsb
and
shll
jae
in
gs
inc
mov
push
mov
or
pop
daa
and
mov
clc
ret
pop
sub
cmp
shll
js
jp
jno
jecxz
push
mov
gs
or
aad
aaa
jbe
inc
f2xm1
in
dec
lock
ss
arpl
subb
shl
cld
orb
cs
inc
jbe
pop
pushf
lods
lret
movsb
xchg
mov
push
push
imul
fisubrl
ficompl
rep
clc
lahf
sub
cmpsl
aam
jns
xchg
sbb
xchg
lods
mov
cld
jmp
xchg
popf
lods
add
in
pop
dec
add
inc
cmp
sub
test
call
and
stc
sahf
sbb
mov
xor
inc
mov
mov
mov
mov
xchg
or
sgdtl
jbe
cmc
cli
push
jge
mov
imul
jnp
add
dec
test
cmp
xor
adc
push
inc
out
jmp
lods
jl
insl
dec
les
jns
leave
push
arpl
xchg
rcll
and
dec
sti
imul
cs
sbb
inc
mov
ret
jo,pt
loope
jge
insl
cmc
into
dec
dec
dec
and
mov
and
cmp
js
inc
lods
and
test
addr16
int3
sbb
mov
aad
and
shll
pop
hlt
mov
sbb
inc
cmpsl
inc
pushf
adc
inc
sbb
movsb
xchg
test
push
cmpb
movl
xor
pusha
cmc
cmp
xor
xchg
sbb
sti
push
mov
adc
enter
stos
negb
imull
sti
pusha
xor
adc
xor
in
push
das
es
sbb
call
jnp
andb
jp
jns
xor
push
icebp
push
jp
dec
test
sub
outsl
outsb
aam
sub
mov
inc
ss
xchg
adc
jmp
push
mov
enter
sub
add
mov
and
xor
jge
pop
xchg
out
xchg
mov
test
push
and
xor
aam
call
cmp
mov
leave
data16
add
mov
cmp
cmp
cli
push
push
lahf
fs
mov
xor
jg
mov
inc
pop
and
adc
add
sahf
fiadds
jnp
sbb
into
test
lret
aad
mov
call
pop
inc
lret
push
js
dec
out
stc
xor
dec
cmpsl
xor
cmp
xchg
arpl
jmp
cmpsb
aad
add
lods
sbb
mov
jns
sub
jnp
push
fcmovnu
mov
daa
cltd
xor
lods
jmp
jns
and
loopne
outsl
insl
lahf
push
push
cmpl
jae
mov
divb
xchg
cmp
ljmp
ror
and
mov
iret
outsl
sbb
scas
sbb
mov
pop
push
inc
add
ret
cmp
jbe
icebp
enter
xchg
cltd
pushf
sbb
xor
lea
mov
mov
aas
push
inc
dec
push
sub
in
xchg
out
pop
popa
notl
mov
adc
lods
cmp
jns
test
adc
movsl
test
jle
fstpl
jnp,pn
mov
push
roll
mov
xor
pushf
xchg
and
mov
pop
clc
push
and
es
inc
dec
cmc
mov
cmp
cmc
stos
add
xchg
fdivrl
andb
fsubs
ss
cmp
and
imull
rcrb
sahf
cmp
sub
jns
mov
pop
add
pop
fldcw
and
inc
jl
arpl
sub
leave
cmp
push
jg
mov
lds
popa
es
or
xor
sub
jo
jo
fdivrp
popf
mov
add
cmp
and
stos
mov
cmp
mov
imul
pop
cmp
aaa
pop
mov
push
sub
push
push
or
iret
repz
mov
mov
leave
mov
mov
add
adc
push
dec
sahf
lods
xchg
dec
jb
add
xor
push
xchg
xchg
out
mov
pop
iret
mov
dec
rclb
out
cli
cmp
push
mov
push
test
daa
aad
das
sbb
cmp
xchg
adc
cltd
mov
and
and
ret
jmp
cmp
pushf
or
bound
sub
ljmp
shrl
mov
sysret
rcr
or
fnstsw
pusha
sub
xor
stc
fistps
dec
push
xchg
fdivl
add
and
fcoml
sub
fildl
pop
dec
add
jecxz
add
stos
fidivrl
mov
cmpsl
dec
or
add
inc
cs
enter
nop
jp
push
xchg
push
add
loopne
fisttpl
xchg
inc
sbb
fldenv
leave
ljmp
js
rolb
arpl
lds
and
push
mov
sbb
or
sti
dec
lea
ret
std
scas
jl
icebp
push
out
test
in
fistpll
pop
mov
mov
jmp
mov
ret
mov
pop
lcall
test
push
inc
add
lods
mov
xor
mov
fmull
adc
cmc
lock
adc
cwtl
dec
mov
xchg
loope
clc
lahf
div
inc
iret
xor
mov
push
xchg
insl
jae
xor
je
nop
gs
add
xorl
fnstcw
mov
pop
cmpsl
mov
clc
jmp
je
sub
push
cmp
xchg
aaa
cli
stc
ja,pn
mov
jno
pop
imul
test
and
fs
leave
and
adc
rcl
mov
cmp
jnp
jp
ffree
outsb
or
loop
icebp
mov
mulb
psadbw
aaa
stc
inc
adc
mov
les
aaa
mov
mov
mov
cmc
std
sahf
lods
js
lret
push
or
add
pop
push
lcall
out
ret
int3
jnp
sbb
jp
push
xor
in
push
leave
cltd
dec
jg
test
jmp
xorl
cmp
dec
imul
mov
inc
stos
cli
xor
dec
sub
mov
push
push
jo
outsb
cmpsb
fistpll
jp
pavgb
insb
scas
pop
mov
add
xor
shll
out
std
rolb
push
popa
fs
add
stos
lret
imul
mov
roll
jg
lds
mov
ja
mov
pop
pop
xor
enter
cmp
adc
add
pop
sbb
fisttps
dec
adcb
cwtl
or
jb
test
add
adc
aad
adc
add
stc
and
push
leave
and
jne
and
mov
cmpsl
push
arpl
scas
in
stos
int
jne
xchg
iret
mov
fidivrl
xchg
imul
mov
call
pop
cmp
in
jnp
aad
int3
jno
cs
loopne
xchg
push
ja
push
pop
push
dec
mov
aas
mov
xchg
andb
movsb
loope
mov
and
mov
andb
fs
adc
mov
inc
sub
sub
push
or
push
jno
dec
test
int3
xor
xchg
andl
push
pop
sbb
std
sbb
add
pop
aam
lret
daa
daa
fwait
mov
cmpsb
or
mov
fwait
ds
jno
mov
xlat
fcmovbe
push
and
pusha
mov
fmull
lods
movsb
cmp
mov
imull
out
mov
or
ja
adc
jae
arpl
lret
mov
inc
mov
outsl
or
in
sbb
or
testb
xchg
fst
xor
test
push
mov
cmp
push
mov
je
ja
xor
insl
loop
jl
push
add
int3
pop
ret
jno
out
push
mov
push
imul
sub
mov
out
sarb
lods
ds
mov
and
nop
std
std
and
pop
inc
and
push
xor
or
bound
mov
rolb
jns
cld
fld
dec
fstl
sub
ss
lret
movaps
insl
sbb
scas
cmp
xchg
pushl
jbe
pop
push
lds
mov
in
out
pop
mov
int
inc
xchg
push
icebp
add
testb
jecxz,pn
mov
icebp
adc
or
or
dec
push
xchg
mov
xor
fistl
sbb
enter
pop
push
aad
xchg
jne
push
or
iret
insl
out
cltd
pop
xchg
pop
xchg
adc
inc
jp
or
jp
fwait
jl
nop
cmp
cmp
jo
rclb
jp
pusha
pushf
and
inc
xchg
stc
and
hlt
xchg
int
push
mov
arpl
jae
pop
aaa
mov
jnp
test
icebp
xchg
cltd
mov
icebp
movsb
sbb
push
in
jg
popa
cmp
aaa
or
jle
sub
jecxz
lock
mov
fstpl
ror
stc
cmp
pop
push
sbb
cmp
test
hlt
mov
jae
iret
add
out
out
mov
rcrl
arpl
rorb
cmp
mov
inc
cs
push
push
in
xor
jl
lea
ficomps
xor
rorb
push
stos
jl
inc
jmp
mov
aam
or
repnz
xchg
aam
xchg
mov
daa
or
pop
xlat
pusha
test
fstpt
xor
ret
add
loop
lods
sub
pop
std
insl
sbb
stos
lret
add
inc
aaa
inc
jmp
inc
loop
scas
imul
mov
or
aam
push
push
jge
xchg
into
xor
dec
arpl
shl
sub
inc
push
push
add
cmpsb
mov
xorl
loopne
xor
lcall
test
jnp
sbb
add
data16
dec
xor
pop
movsb
add
adc
adc
shl
add
mov
adc
repz
cmp
sub
test
fbstp
fwait
rcr
leave
ja
inc
in
push
xor
jle
out
xchg
sbb
pop
inc
jnp
arpl
cs
jne
mov
hlt
sub
inc
sbb
imul
jbe
into
testl
mov
mov
ret
js
scas
adc
xchg
leave
add
scas
repz
in
out
fsubrl
ljmp
cwtl
pushf
dec
icebp
leave
mov
xchg
sahf
pop
cli
sbb
ljmp
mov
fildl
pop
pop
pusha
stos
js
repnz
add
or
mov
xchg
jns
inc
jge
dec
ss
inc
scas
rcll
divb
xchg
push
push
xchg
sbb
jmp
and
popa
add
loope
adc
sbbb
lea
popa
jg
xor
sahf
pop
outsb
add
jmp
xlat
les
or
xor
into
add
inc
clc
mov
pusha
loope
mov
push
mov
mov
mov
add
xchg
mov
fwait
sub
in
mov
sub
stos
mov
sub
push
dec
jbe
adc
mov
bound
adc
push
mov
mov
dec
std
loopne
ja
and
les
xchg
fldt
imul
dec
cmp
adc
or
adc
mov
std
mov
or
daa
push
out
je
push
in
fidivs
ja
push
ds
xchg
xor
gs
orl
sub
xchg
data16
pop
cmp
mov
popa
stos
mov
sub
fisttpll
xchg
jno
push
jo
adc
dec
sbb
repz
jl
push
loope
add
add
push
int
call
mov
outsl
jle
jecxz
xchg
add
aad
cwtl
je
push
xor
filds
das
aaa
xlat
xchg
jbe
lret
jae
adc
mov
push
es
push
inc
std
lret
jne
jg,pn
ljmp
push
scas
fimull
lret
xor
adc
or
aam
lahf
inc
fwait
fs
mov
cwtl
test
add
fwait
jb
or
test
in
mov
pop
movsb
dec
es
pop
jl
mov
or
inc
test
push
dec
sub
sarb
jnp
fstps
or
sbb
xor
iret
mov
add
ret
insl
cmpsb
xorl
dec
ljmp
adcl
push
mov
in
mov
jg
enter
subl
shrb
dec
ret
nop
cwtl
rorl
icebp
add
scas
jno
and
stos
push
xchg
mov
xchg
xchg
sbb
xchg
sbb
dec
insl
sbb
push
pop
add
icebp
lods
out
fists
and
push
push
stos
dec
mov
aad
jmp
xor
rol
ficompl
add
stc
stos
lret
iret
and
dec
ret
xchg
pushf
sbb
dec
fnstsw
mov
jo
cmp
push
jns
cmp
test
jno
jnp,pn
sbb
xchg
xchg
mov
jmp
sbb
sbb
pop
cmpsb
repz
mov
mov
push
jge
std
adc
pop
stc
jl
jo
inc
ffreep
lea
and
xchg
xchg
fdivl
xchg
pop
xor
jl
or
push
dec
test
mov
pop
pop
aaa
push
sub
adc
sub
fucom
xchg
jno
mov
mov
pop
out
mov
mov
pop
push
aad
and
das
cmp
fwait
and
xor
loope
bound
xor
ds
push
xchg
push
sbb
lret
jle
jecxz
aas
adc
js
dec
xor
add
pop
and
repz
mov
aaa
pop
movsl
cld
in
dec
bound
scas
fcmovnu
bound
test
cltd
inc
loop
dec
bnd
movsb
daa
insb
hlt
jns
cmp
mov
adc
outsl
pop
popa
push
jbe
adc
ficomps
ror
mov
mov
out
std
cmp
sub
mov
cmp
addr16
out
or
or
add
nop
and
push
repz
cmpb
push
push
scas
lcall
jmp
mov
fidivrs
test
loopne
sub
or
dec
stos
sbbl
scas
push
bound
lds
dec
jl
popa
xor
push
je
push
or
rep
stos
enter
out
push
fcmovu
xor
and
ss
into
jmp
adc
xlat
cs
lds
mov
mov
or
cmp
jg
or
addr16
in
xchg
sbb
int3
xor
push
lods
jl
nop
or
loopne
mov
daa
push
fisttpl
leave
cmp
jne
dec
pop
pop
subb
mov
std
repz
stos
add
dec
icebp
insb
icebp
and
sti
sbb
xchg
jb
dec
ss
rcrl
adc
lar
es
ret
movsb
and
mov
sub
out
or
pop
leave
out
add
jle
gs
out
pop
mov
pop
or
mov
or
cmp
jns
cmp
inc
fs
jne
cli
sbb
fcmovnu
mov
ds
xchg
mov
xor
lret
xor
adc
cmp
lods
in
cmp
and
aas
push
fwait
or
cwtl
arpl
push
enter
jecxz
mov
mov
adc
xchg
fstpt
mov
jmp
mov
xor
es
cmpsb
push
fwait
imul
fwait
les
jnp
xor
in
testb
mov
sbb
repnz
cmp
jecxz
out
aad
push
cli
sbb
or
sub
cmp
xchg
xchg
popf
add
mov
jb
loopne
pop
nop
xchg
jl
stos
out
mov
mov
in
pop
sbb
fstl
mov
jne
iret
insb
and
pushf
addr16
gs
or
xchg
loop
inc
dec
adc
movsl
pop
loopne
pop
lahf
jecxz
aad
adc
pop
mov
and
and
push
dec
xchg
or
fstpl
mov
and
jns
outsl
xor
push
sarb
push
and
sub
mov
fcoml
push
pop
call
push
push
mov
adc
mov
dec
mov
push
jmp
jp
push
ret
add
push
jecxz
adc
sub
jg
jno
shlb
fdivs
pop
or
pop
or
pushf
lret
pusha
xchg
clc
iret
mov
test
inc
mov
loope
out
or
xlat
adc
aam
cmp
jp
push
sahf
pop
aaa
movsb
add
push
sub
mov
repz
pop
mov
adc
dec
pop
int
mov
mov
ja
add
shr
out
push
adc
push
inc
jo
popf
out
adc
stc
cmp
popa
mov
test
push
sub
jno
mov
jae
mov
jo
fidivs
jmp
jno
push
ds
stc
les
adc
rorb
pushf
fdivs
inc
fadd
repz
push
adc
ds
jp
out
adc
dec
pop
popf
mov
or
addr16
jbe
scas
mov
imul
xor
cmp
push
jle
jecxz
fwait
mov
mov
rcrl
push
sub
imul
push
cmp
shr
cmp
sub
cmp
pop
xchg
ljmp
dec
sbb
push
negb
sahf
js
jmp
in
sub
pop
xor
notl
mov
aaa
lock
mov
call
out
jl
mov
dec
ret
popf
and
fsubl
jg
sub
add
mov
or
xchg
lock
shll
pop
pushf
loope
pusha
xor
inc
js
add
andb
enter
jecxz
into
jl
addps
mov
adc
sub
xchg
ficoms
rep
pop
jl
inc
adc
jle
add
cmp
nop
daa
cmp
fimull
mov
fisttpl
les
push
stos
stos
or
fnstenv
cmp
fcomp
stos
or
mov
add
in
sbb
xchg
dec
pushf
and
cmp
into
pop
add
in
ljmpw
out
stc
cltd
insb
push
stc
shl
pusha
mov
add
jmp
addl
sub
mov
test
sahf
shll
in
xchg
adc
ficoml
push
sub
xchg
jg
mov
fistpll
aam
outsb
sub
sbb
xchg
rorl
insb
inc
dec
adcl
popf
gs
lcall
cmc
loopne
outsb
je
js
nop
fcomps
icebp
shll
xor
or
pop
out
push
add
int3
mov
and
pop
pop
pop
pop
mov
cld
dec
roll
aaa
outsb
stc
pusha
cmp
jb
sbb
jb
call
mov
shl
push
testb
adc
adc
pop
stos
xor
jl
popa
outsl
cmp
inc
xor
jno
xor
pop
push
dec
fimull
mov
mov
pop
ret
into
subl
lock
loopne
aad
in
and
lcall
daa
or
dec
adc
xor
pop
push
stc
clc
pop
popa
push
inc
mov
fbstp
pushf
pop
push
or
push
xor
movsl
fiaddl
push
imul
push
sub
outsb
fcoml
ret
or
or
inc
or
mov
decl
dec
cmp
push
aaa
push
bound
out
cmpsl
xor
sub
add
mov
shlb
dec
xchg
out
xchg
stc
imul
jle
cld
cs
loope
clc
sbb
sti
and
popf
rclb
in
cltd
loope
pusha
imul
or
sbb
arpl
sarb
jnp
dec
inc
or
bound
sub
or
sub
cli
cs
stc
xor
adc
inc
jae
and
and
call
in
xor
fdivp
xchg
push
or
push
mov
loope
dec
mov
lods
imul
scas
push
xchg
sti
cltd
movsb
xchg
sbb
jl
mov
enter
call
lret
ds
or
sbb
cli
sub
cs
icebp
inc
fldz
jecxz
pop
mov
xchg
add
inc
dec
and
pop
push
negl
addb
jb
dec
mov
pop
jecxz
in
dec
inc
leave
ret
fwait
cmpl
cmpsb
cmp
test
xchg
mov
lock
xchg
mov
xor
clc
xor
fidivrs
push
mov
push
in
sbb
inc
jo
push
mov
jmp
mov
psubd
sbbl
sqrtps
dec
lret
sub
push
les
scas
mov
mov
sbb
push
jl
push
aaa
enter
clc
dec
arpl
sahf
sbb
mov
push
push
push
aad
dec
pop
adcl
inc
std
inc
and
mov
lods
notb
bnd
popf
or
add
fs
jle
fs
xor
xchg
xchg
mov
shl
lret
notb
mov
mov
mov
dec
sarb
cmpsb
mov
les
mov
jb
sub
cmp
lret
or
cmp
fnstcw
insl
mov
jge
mov
sbb
jns
or
gs
xchg
pusha
enter
insb
inc
outsl
insb
xchg
adc
mov
pop
shrl
leave
xchg
inc
in
jmp
repz
popa
sub
pop
mov
xchg
pop
shl
mov
or
xchg
int
movsb
sbb
inc
shlb
sbb
pop
cwtl
sahf
mov
in
pop
popa
cltd
inc
xchg
movsb
push
mov
imul
rcrl
div
xor
andb
dec
fidivrs
add
je
xchg
push
pop
cmp
loopne
and
arpl
sbb
mov
inc
xchg
imul
cmp
in
sti
inc
ret
add
cmp
xor
lahf
dec
gs
out
and
cmp
ljmp
jle
rol
test
lock
add
sub
rorl
outsl
jo
aam
mov
xor
dec
push
mov
and
sbb
inc
jns
pop
movsb
dec
cmp
xor
sbb
cs
cld
mov
int3
mulb
pop
sub
and
std
and
jl
idivb
enter
je
loop
xor
cmp
fildl
fcomi
sbb
enter
imul
sbb
pop
inc
sub
pop
xor
fiadds
xor
mov
cmpsl
mov
sbb
stos
push
iret
xor
jge
and
mov
mov
and
jl
mov
mov
push
out
cmc
pop
push
and
shrb
xchg
jne
and
jp
or
and
pop
scas
mov
gs
lds
adc
je
in
xor
fisttpl
cmp
sub
mov
dec
subl
imul
cmp
shrb
sti
mov
aas
movsl
out
in
xchg
and
ret
gs
cld
ljmp
xchg
lcall
out
adc
adc
push
jp
cmovle
bts
inc
inc
vpperm
pop
cmpsb
lods
inc
ror
inc
push
adc
push
test
rcrl
scas
add
cwtl
sbb
push
sbb
sub
mov
and
push
mov
xchg
sbb
add
mov
jb
icebp
jmp
jl
jmp
ret
orb
cmpsl
or
and
cmp
insl
dec
lahf
notb
mov
out
nop
lret
pushl
lret
lret
jle
pop
sahf
mov
cmpb
dec
std
movsl
push
jecxz
cmpsl
rcrb
fists
js
outsl
lcall
stc
jp
sbb
pusha
popf
push
mov
lock
push
push
repz
or
inc
pop
loope
push
or
dec
dec
adc
nop
jmp
lods
sbb
or
sbb
or
push
jnp
jae
or
cmp
xor
cmp
xor
xchg
adcb
lcallw
movsl
fcomps
pushf
insl
test
int3
sahf
xor
std
fcmovnu
mov
sub
cwtl
add
out
pop
mov
js
cmp
mov
jmp
loopne
into
add
arpl
push
loopne
dec
adc
pop
fcomip
pushf
mov
movzbl
in
in
rolb
movb
push
xor
mov
outsb
shrb
repz
add
dec
aam
jnp
outsb
repz
xor
dec
adc
inc
mov
aam
adc
fisubs
push
bound
sub
jmp
inc
daa
mov
lds
js
cmp
shll
dec
mov
and
and
mov
sbb
sub
fimuls
mov
xchg
add
test
xchg
dec
in
cmp
cmp
lret
xchg
jl
push
fisubrs
sbb
pop
testl
inc
pusha
or
aas
in
mov
mov
hlt
addr16
sbb
xlat
lahf
test
mov
mov
sahf
pop
fdiv
dec
sbb
dec
sub
mov
aas
fcom
test
movzbl
addb
xor
dec
sub
clc
insb
mov
lret
xor
or
pushf
sub
pop
pop
sbb
repnz
loop
inc
sbb
cmc
jp
fbstp
ds
mov
ret
mov
or
pop
pop
movsb
xor
imul
mov
shrl
fwait
lock
add
xchg
fdivl
mov
jae
mov
adc
sub
sub
aad
mov
xchg
pop
shll
mov
inc
push
and
mov
sbb
roll
jae
cmp
or
sbb
pop
pop
xor
mov
incb
fdivrs
sub
out
call
jne
ficoms
test
shlb
lahf
je
mov
adc
lods
pushf
lock
lds
dec
push
mov
cmpsb
add
mov
xlat
arpl
nop
add
mov
push
popa
mov
and
add
popa
xchg
out
ja
mov
xchg
int3
adc
dec
xchg
mov
in
or
push
call
pusha
jg
or
stos
lcall
push
push
jge
scas
mov
xchg
jecxz
addr16
mov
dec
add
imul
mov
fimuls
incb
jo
dec
inc
sbb
dec
js
xchg
or
in
dec
push
cmc
push
and
enter
repz
cmp
jbe
mov
sbb
negl
and
int3
fs
in
xor
sub
sarl
data16
jnp
mov
insb
in
pop
mov
mov
ds
sbb
push
into
into
adc
xchg
hlt
inc
pop
rol
in
push
scas
cmpb
je
jo
jmp
ds
cli
ret
mov
leave
xor
dec
lret
add
adc
sub
fsubrs
fldl
add
push
insb
aas
lret
jo
xchg
shll
dec
rep
loope
jle
xchg
aaa
loopne
icebp
fmul
je
xchg
cmp
addr16
jbe
inc
or
pop
pop
movsb
iret
cmp
inc
and
xchg
in
popa
xchg
int
incl
push
call
daa
mov
mov
cmp
hlt
rorb
cmp
pop
repz
scas
xor
adc
sub
and
js
and
cs
sbb
xchg
cmp
adc
insl
xor
lea
loope
mov
dec
inc
pop
cmpsl
push
xchg
into
fstpt
sbb
pop
loope
jne
push
test
xchg
insb
sbb
mov
xchg
inc
mov
jl
cmp
mov
cwtl
sbb
jecxz
or
in
mov
push
inc
cli
das
rcll
scas
pop
ror
cmpsb
int
mov
jns
dec
iret
mov
pop
rclb
fiaddl
mov
dec
add
mov
jl
call
cli
dec
aaa
xchg
add
cmc
mov
pusha
add
jo
add
mov
fidivl
mov
sub
add
mov
or
adc
xor
lods
popf
cmc
test
jl
sbb
imul
push
and
fs
test
push
jmp
stos
sbb
repnz
stc
push
push
repnz
ja
adc
mov
cmp
mov
imul
xchg
sbb
and
pop
hlt
std
sub
inc
shlb
lcall
or
mov
int3
test
cmp
jno
inc
inc
popl
popa
hlt
aas
fsubl
scas
inc
cld
mov
xlat
inc
xor
xchg
fwait
notb
scas
lods
gs
sub
push
hlt
std
xlat
add
fisubrl
mov
in
mov
xchg
push
pop
add
cmp
imul
lcall
popf
jnp
int
ljmp
pop
clc
movsl
pop
jns
test
movsb
pop
mov
popf
push
and
inc
inc
mov
in
out
mov
rcl
mov
decb
stc
and
scas
jle
popf
mov
mov
mov
aaa
sarl
loopne
jg
xchg
testb
cmp
mov
xor
hlt
lock
sub
xchg
sahf
mov
mov
pop
lret
es
inc
and
mov
add
mov
dec
fucomi
lret
jbe
jmp
and
pop
xchg
xor
and
mov
iret
dec
pop
push
in
xor
out
dec
cmpsb
in
cmp
sahf
call
mov
clc
orl
mov
clc
mov
dec
mov
scas
test
add
push
dec
lcall
mov
lock
outsl
lea
les
xor
jmp
sti
sub
lods
xchg
sub
cli
cmpsl
adc
add
dec
push
mov
mov
mov
and
inc
adc
ret
and
xorl
cli
icebp
push
and
add
repnz
pop
add
cmp
movsb
push
cmp
outsb
cltd
jg
inc
sbb
mov
je
stos
add
jno
in
and
movsb
sar
adc
mov
movzwl
cmp
jne
movl
lea
push
call
mov
movl
movb
movl
movl
jmp
movb
push
call
mov
pushl
pop
mov
lea
push
mov
push
call
mov
pushl
push
mov
add
add
push
xor
push
mov
call
push
pop
mov
mov
sub
mov
cmpl
jne
push
push
call
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
mov
push
call
add
call
movl
jmp
mov
add
mov
cmpl
jae
jmp
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
push
push
push
push
call
test
je
xlat
ret
jecxz
mov
addr16
mov
es
jmp
loopne
mov
arpl
nop
fstps
pop
mov
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
imul
xlat
test
icebp
pop
push
push
jnp
fistl
sbb
shrb
mov
xor
jno
movsl
mov
icebp
xchg
jge
adc
outsl
push
shlb
jns
pop
mov
arpl
stos
push
mov
shl
orb
mov
cmp
je
add
outsb
gs
jbe
int3
or
dec
and
imul
mov
adcb
mov
cmp
popa
sbb
sbbb
push
or
js
mov
imul
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
das
push
mov
mov
loopne
mov
arpl
xor
cwtl
cltd
hlt
pop
ljmp
push
fistps
push
or
push
movsb
rcr
lcall
dec
arpl
rcr
cwtl
cwtl
lcall
pop
mov
arpl
aad
fwait
cwtl
lcall
pop
mov
outsl
push
mov
fstps
pop
mov
loop
mov
fstps
pop
cmpsb
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
adc
lcall
dec
arpl
rcr
lcall
dec
arpl
rol
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
sub
and
sub
pop
loopne
mov
arpl
mov
fstps
push
test
sub
mov
fstps
mov
xlat
rcr
lcall
inc
arpl
rcr
lcall
dec
arpl
rcr
lcall
popa
adc
mov
pop
loopne
mov
outsl
push
mov
fstps
pop
mov
arpl
rcr
lcall
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
rcr
lcall
dec
arpl
sahf
rcrb
pop
mov
rorl
aam
fnsave
in
and
or
dec
lahf
dec
les
sbb
mov
neg
push
sbb
cmc
dec
das
push
insb
dec
push
aad
dec
stos
adc
mov
dec
mov
maskmovq
lock
sti
pop
ss
or
jae
mov
jne
or
lret
dec
mov
fmul
add
aam
jp
and
mov
xor
sbb
aad
xchg
push
arpl
pop
nop
xchg
add
sub
add
inc
fstpl
pop
pop
push
pop
dec
fdivl
sar
push
push
shlb
je
cmp
add
inc
fcoms
pop
fldln2
ss
dec
inc
ds
dec
xor
aad
or
xor
inc
jl
jns
fstpl
movl
insl
xor
jb
lret
dec
aas
in
xor
popf
adc
mov
mov
in
arpl
data16
dec
inc
push
sbbb
xchg
add
jl
cld
and
mov
dec
fidivrs
lods
or
rolb
mov
sub
xchg
pop
jle
out
jp
add
out
fisttps
or
xchg
mov
adc
jmp
jb
or
jb
lods
and
mov
cmp
pop
jne
repz
mov
test
cmp
pop
mov
negb
cmpsl
dec
sarl
daa
iret
jnp
out
call
push
out
and
xor
jg,pn
cmp
sub
pop
arpl
scas
movl
push
aaa
fiaddl
lcall
add
fcmovnu
loop
js
out
popa
mov
mov
pop
lcall
into
dec
jae
mov
clc
leave
push
mov
mov
je
fisubrl
cmc
mul
addr16
faddl
xchg
inc
mov
out
xchg
or
or
sbb
aas
loop
jns
xor
jbe
mov
loopne
mov
dec
lds
xchg
fsubrs
jg
mov
xchg
pop
arpl
mov
sbb
or
xchg
sub
scas
rclb
aam
adc
pop
or
aas
jge
cmpsl
mov
pop
lahf
sbb
cmp
mov
mov
push
in
mov
lret
hlt
pop
xor
inc
inc
mov
rcll
test
cli
stos
leave
dec
cmp
fcompl
sub
rclb
test
ret
cwtl
xor
mov
loop
or
jns
xchg
pop
mov
mov
dec
imul
bound
mov
dec
push
mov
cmc
shll
je
hlt
xchg
dec
ficompl
push
mov
fistpll
dec
in
lcall
movsb
pop
mov
in
in
das
xor
xor
addr16
push
adc
dec
mov
add
lcall
mov
sbb
or
sub
mov
add
or
sti
pop
leave
jbe
aam
test
pop
mov
stc
mov
lcall
lods
push
gs
popa
ds
mov
adc
rolb
inc
sahf
cmp
scas
cmpsb
inc
mov
add
in
mov
out
inc
jl
xchg
fmuls
cmp
out
sub
movsl
fstl
cltd
pop
add
out
push
adc
xor
out
jbe
fsts
inc
push
dec
loopne
jne
imul
pop
xchg
mov
test
sub
lods
lods
ja
xor
shll
pop
sbb
icebp
arpl
ret
in
sahf
test
clc
scas
and
fistpll
scas
jg
xchg
xchg
inc
or
adc
repz
ret
movsb
add
pusha
stos
xchg
sbb
repz
cmpsb
inc
jge
xchg
nop
jo
jge
idivb
je
cmpsl
in
mov
fcmovb
loopne
and
add
lds
mov
pop
inc
jmp
arpl
in
push
ficoml
pop
xor
sbb
jns
push
sub
sub
fldenv
and
cmpb
jl
outsl
mov
xor
call
sub
dec
pop
fidivrl
jne
ss
mov
inc
lea
lahf
shll
lods
or
ret
mov
jecxz
push
test
add
inc
scas
jo
sub
in
mov
jne
loop
cmp
push
jle
lret
lcall
dec
and
pop
push
pusha
inc
add
push
mov
in
in
mov
fs
stos
lret
inc
dec
mov
sti
sbb
call
xchg
xchg
cltd
lcall
repnz
mov
cmpsl
imul
jmp
xor
add
push
lock
xor
mov
shrb
test
cmp
sar
mov
je
and
mov
mov
ret
dec
pop
dec
stos
dec
cs
jp
push
movsb
ds
xchg
or
dec
sub
sbb
mov
jne
push
xor
test
frstor
loopne
loopne
jb
addr16
fldl
sahf
or
lods
popf
mov
dec
adcl
lret
add
das
std
dec
sbb
sbb
mov
jg
popf
pop
or
or
mov
andb
mov
lods
inc
xchg
out
sysexit
pop
sub
test
icebp
mov
and
push
sub
sbb
add
push
mov
call
sbb
call
xor
repnz
in
ret
rolb
inc
out
mov
jecxz
inc
bound
add
jns
push
in
mov
jo
or
push
popf
inc
outsl
dec
pop
dec
jo
jmp
jb
pop
xchg
into
add
out
cmp
das
pop
xchg
or
adc
pop
xchg
mov
pop
xchg
mov
das
lods
pop
repz
ljmp
xchg
test
into
mov
insl
push
arpl
or
aaa
roll
test
ret
pop
les
je
iret
cmpsl
cltd
push
movsb
fmuls
cmp
cld
fcoms
jg
fmulp
mov
xchg
fists
rcrl
add
xor
cltd
es
shll
lret
jbe
test
flds
ja
mov
fidivl
data16
or
xchg
sbb
fiadds
pop
into
cmpsb
mov
jns
add
lret
adc
sub
js
divb
roll
cmpl
hlt
mov
inc
fstpl
repz
popf
xchg
clc
sar
ja
and
loope
pop
add
cmpsb
scas
jne
cmp
push
mov
popa
inc
cmp
push
dec
xchg
inc
adc
xchg
mov
lret
test
cwtl
mov
in
ret
xchg
jle
ljmp
cmp
xor
add
lret
lock
lods
inc
xor
subb
stos
mov
aad
mov
es
dec
sub
cmp
and
repz
icebp
pop
shlb
xchg
addb
fisubrs
xor
adc
inc
lods
jns
daa
ret
pop
in
js
fcomps
lock
mov
jp
mov
fwait
cli
pop
loop
add
aam
adc
lea
hlt
add
ss
mov
shlb
or
dec
andb
xchg
hlt
jle
sbbb
mov
fcmovb
test
fcmovbe
cwtl
inc
bound
outsl
push
loopne
push
xchg
add
dec
lea
lds
lcall
into
inc
rolb
out
int3
adc
inc
mov
mov
fwait
xchg
and
mov
fnstenv
decl
in
in
pusha
das
sbb
dec
movsb
aam
lahf
aaa
xor
out
pop
pop
lods
inc
lcall
filds
mov
movsl
mov
push
mov
mov
mov
xor
add
add
scas
dec
cmp
pushf
mov
iret
and
out
insl
stos
aad
mov
addr16
jb
nopl
out
sti
xlat
push
stc
sbb
mov
cmp
lret
mov
mov
add
decb
dec
xchg
dec
popf
ljmp
das
push
or
cmp
or
xchg
add
lahf
cs
cmp
mov
adc
loope
pop
cmp
xchg
cmp
lret
add
mov
xchg
pop
psadbw
jp
fcmovnu
jge
jo
xchg
inc
jge
push
adc
lret
mov
sbb
jne
jecxz
pop
cmp
outsb
cmp
movsl
mov
sub
dec
pop
addb
enter
movsb
mov
pop
loope
pop
xchg
ret
testb
mov
loop
push
mov
xor
pusha
mov
movsb
inc
xchg
fs
mov
xchg
icebp
jg
inc
dec
push
sahf
popa
mov
stos
pop
shrl
cli
addr16
adc
jb
nop
jnp
jnp
or
mov
mov
lahf
or
xor
jmp
mov
lds
inc
mov
push
cmpsl
push
idivb
test
jbe
adc
les
inc
push
sbb
jp
push
pop
mov
xorl
aaa
pop
rcrl
adc
pop
fsubl
mov
out
inc
cmp
dec
xchg
inc
enter
pop
mov
jl
mov
out
jp
push
mov
pop
hlt
out
aas
pop
xorl
cmp
jns
js
and
int
xchg
test
cmc
fidivs
lcall
cmp
aas
pop
lock
push
or
lcall
popa
out
adc
jge
cli
cmpl
sbb
jmp
mov
aaa
jg
adc
sti
jle
aas
pop
sub
and
dec
mov
sub
hlt
loop
xor
es
push
mov
xor
jb
sbbb
inc
dec
adc
rol
idivl
xchg
dec
inc
sbb
push
mov
in
cmpsb
mov
imul
mov
rorb
dec
pop
pop
mov
js
int3
ljmp
mov
lret
cwtl
rcll
dec
test
xlat
psllw
mov
aas
and
inc
mov
xor
mov
imul
mov
mov
daa
push
mov
inc
fcmovnu
mov
inc
jae
sbb
pop
test
add
cwtl
jle
clc
jg
jmp
inc
imul
insb
xchg
mov
adc
xor
ljmp
fbld
xor
xor
out
roll
lahf
scas
mov
jp
out
clc
xchg
push
lcall
sahf
shrb
sub
outsl
or
push
or
fbstp
mov
pop
cmp
fstps
outsl
pop
repz
or
lock
sub
nop
sub
adc
shll
sbb
fistpll
inc
dec
iret
shrl
mov
xchg
divb
add
xor
or
mov
inc
xor
dec
std
imul
scas
xor
pop
pop
lods
movsl
fisubrl
ret
cmc
mov
hlt
jp
mov
lods
add
shlb
sarb
and
daa
ja
jl
jno
mov
repnz
ljmp
xchg
das
sub
int
popa
jbe
ja
mov
push
mov
inc
nop
mov
or
loopne
lahf
xchg
icebp
into
sbb
lods
and
inc
das
into
fbstp
pop
insb
icebp
cwtl
adc
nop
rcrb
fldenv
adc
add
stos
push
jno
mov
test
pusha
mov
out
push
ds
pop
lea
ljmp
movups
or
xchg
add
push
mov
sbb
add
ret
dec
xchg
mov
push
dec
subb
mov
add
mov
dec
into
mov
out
add
push
imul
daa
xchg
adc
lods
mov
inc
mov
push
outsl
or
bswap
das
xchg
xor
mov
cli
enter
jge
shlb
out
sub
xchg
lcall
and
or
xchg
popf
sub
jmp
sub
jp
sub
stc
mov
adc
fisubl
repz
xchg
movsl
jge
nop
push
imull
das
xchg
movsl
or
pop
push
jmp
adc
les
insb
in
out
inc
out
mov
cmc
movsb
jo
dec
rclb
in
pop
cld
sbb
inc
xor
cmpsl
mov
dec
test
gs
lahf
sub
cmpsl
inc
adc
jge
jmp
xor
test
fcomps
ljmp
outsb
jne
flds
je
push
scas
push
cmovge
add
xlat
xchg
mov
out
or
loope
int3
pusha
or
into
inc
jne
mov
fsts
cmp
adc
mov
jecxz
dec
xor
je
sub
pop
xchg
adc
outsb
test
and
jb
or
jno
or
aas
push
sub
fistl
cmp
xor
aas
pop
ss
jnp
cmpsl
pop
pop
dec
pop
cmp
xchg
cmp
aam
nop
adc
bound
bound
mov
xor
jge
inc
jnp
call
cli
mov
cli
jge
clc
jnp
pop
movsb
rcll
outsl
lahf
mov
imul
fimuls
pop
test
lret
and
jb
enter
or
ja
pop
sub
into
out
mov
jns
or
nop
mov
or
mov
add
mov
inc
dec
faddl
das
push
mov
shrl
loope
sub
mov
sbb
divb
test
sub
lret
iret
clc
dec
jne
aaa
repnz
xor
jp
in
mov
clc
mov
inc
jns
movsl
subl
jle
pop
sar
pop
fadd
call
out
and
mov
cld
jge
xor
shl
ffreep
push
ss
add
adc
push
aam
out
or
jmp
andb
iret
insl
inc
dec
mov
rorb
xchg
adc
popf
gs
adc
adc
xor
nop
popf
mov
sbb
in
inc
in
out
je
xchg
imul
mov
sbb
loop
std
cmp
cmp
push
mov
lahf
aad
jb
mov
mov
imull
sub
cld
call
mov
cmpl
jne
mov
push
call
add
xor
pop
mov
pop
ret
push
mov
sub
xor
mov
pop
ret
push
mov
sub
push
movl
movl
movl
movl
mov
mov
movl
movl
movl
mov
sub
mov
mov
mov
movl
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
push
pop
mov
mov
add
mov
mov
mov
mov
add
movzbl
mov
mov
mov
add
mov
mov
shr
mov
sub
mov
shr
mov
imul
mov
shl
mov
add
movzbl
add
mov
add
mov
mov
sub
mov
mov
cmp
jl
pop
mov
pop
ret
jmp
