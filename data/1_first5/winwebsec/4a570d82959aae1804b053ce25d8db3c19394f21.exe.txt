push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
fwait
test
push
shrl
and
jo
sub
cmc
dec
lods
mov
stos
adc
push
sbb
pop
mov
stos
test
lcall
mov
lock
jo
mov
dec
or
lahf
dec
int3
out
jmp
sbb
lret
loopne
inc
jne
jle
push
mov
js
enter
aam
sbb
fstpl
and
xor
and
and
movsl
cli
dec
dec
cmpsl
jb
jmp
dec
rcr
cmc
pop
loop
mov
popf
bound
xchg
sub
iret
xchg
sbb
sub
icebp
js
jmp
rolb
movsb
out
pop
or
push
sbb
add
rcrb
dec
inc
sbb
xchg
lea
dec
mov
clc
mov
push
fadd
dec
sbb
push
add
push
cmp
sti
sbb
insb
and
lods
and
mov
sub
pushf
test
inc
mov
fstpl
sbb
outsb
popf
push
popf
je
add
pop
mov
pop
jns
dec
jge
mov
jle
pop
inc
and
idiv
out
push
ret
cmp
xchg
push
in
pop
mov
ljmp
xchg
ja
inc
inc
ret
or
out
pusha
jp
mov
dec
into
bnd
mull
jo
sbb
test
mov
sub
imul
sub
inc
mov
cs
jecxz
jmp
mov
pop
jg
jge
dec
int3
hlt
imulb
sub
insl
lea
out
and
push
xchg
push
xor
inc
sub
arpl
mov
mov
adc
movsl
shlb
out
sbbl
orl
lcall
jae
xchg
imul
add
scas
xor
stos
pop
scas
stos
in
xchg
test
jne
std
outsl
movsl
xchg
fidivrs
repnz
popa
ret
fbld
mov
mov
pop
mov
lods
inc
out
imul
or
clc
stos
push
dec
dec
or
dec
pop
push
sbb
aad
in
add
mov
mov
lods
xchg
orl
cmp
jle
lret
and
and
mov
adc
cmp
fsubr
daa
pop
pop
enter
data16
scas
push
outsb
in
cmc
movsb
inc
rol
in
inc
scas
dec
mov
orb
sahf
push
in
sbb
sbb
jb
bound
imul
mov
sbb
pop
in
mov
lods
jle
push
xlat
jae
hlt
orb
vpackssdw
pop
in
add
mov
iret
push
mov
cmc
xchg
mov
inc
pop
es
sbb
or
xor
ja
xor
jns
mov
inc
xor
in
mov
rcrb
ja
cmp
divl
sub
mov
fwait
repz
cld
xchg
cs
enter
fiaddl
sub
adc
or
sbb
sbb
fstpl
mov
xchg
or
mul
xchg
jae
in
adc
mov
jbe
xor
mov
mov
xchg
in
movsb
scas
cs
out
loope
jl
loopne
sbb
mov
adc
adc
sub
mov
iret
mov
idivb
ljmp
and
mov
adc
and
pop
or
ud0
aam
lods
push
sbb
test
cwtl
sbbl
je
test
sub
push
jo
mov
and
pusha
inc
les
pop
pushf
add
jp
and
push
int3
gs
mov
inc
repz
adc
adcb
adc
cs
and
cmp
fwait
int
jle
shll
mov
sub
dec
jmp
stos
adc
inc
cltd
inc
int3
arpl
outsl
daa
add
xlat
bound
add
out
es
mov
sahf
in
add
out
jns
cli
ficompl
scas
or
push
add
xchg
aad
mov
orl
iret
xchg
push
mov
add
out
in
dec
mov
les
sub
mov
xlat
ffreep
add
adc
fs
mov
push
jl
mov
pop
push
dec
adc
test
cmp
divb
pop
scas
add
xchg
add
and
cmpsl
roll
repnz
ficompl
xchg
mov
mov
or
xor
loopne
mov
pop
mov
jb
imul
jmp
outsl
jno
mov
mov
mov
jbe
aam
popf
sub
add
andb
sbbb
sbb
adc
add
aaa
mov
les
cmp
shll
test
xchg
or
lods
jne
mov
je
lret
rcll
dec
inc
je
mov
dec
sbb
xor
popa
test
push
sub
jae
xor
out
add
jge
adc
push
sbb
jp
mov
add
outsl
fidivl
mov
out
jnp
jge
inc
or
leave
push
mov
out
inc
insb
insl
xchg
popf
bound
push
cmp
adcb
in
or
icebp
inc
sub
icebp
pop
pop
sti
int
fcmovnbe
mov
inc
mov
paddd
add
test
in
int
push
sub
fnstenv
insl
dec
push
mov
sbbb
dec
test
pop
pop
dec
lret
stos
les
repnz
in
push
inc
jns
cmp
xor
cwtl
out
sbb
inc
insl
cmpsl
push
test
cmp
in
adcl
lds
or
out
repnz
xor
jmp
lock
adc
push
test
fiadds
push
gs
adc
pop
mov
mov
cli
xor
negl
fs
cwtl
es
cmc
xchg
mov
loopne
pop
adc
pop
jae
dec
dec
dec
arpl
xor
add
aad
push
xchg
cmp
repz
add
xchg
fmuls
add
xlat
in
mov
jecxz
mov
and
mov
fimull
pop
mov
movsl
mov
call
pop
fcmove
xchg
mov
mov
jp
aas
cmp
add
pushf
aam
or
fwait
cmp
push
pop
mov
or
loopne
fs
mov
inc
pop
les
adc
dec
xor
and
xchg
pop
popa
mov
in
pusha
lret
or
mov
imul
repnz
cmc
sbb
cmp
mov
icebp
sti
inc
push
push
das
cwtl
dec
jg
loopne
inc
sub
test
pop
adc
or
inc
cmc
jmp
jbe
mov
push
inc
add
pop
jbe
movsb
or
icebp
stos
nop
mov
add
and
mov
xchg
xchg
repnz
es
popa
inc
mov
lods
and
mov
sbb
rcll
inc
aaa
data16
movsl
push
ret
or
mov
xchg
jnp
loop
mov
mov
or
jo
sub
jmp
jbe
xor
xchg
inc
cmp
jo
jl
test
and
mov
adc
test
and
push
fsubl
imul
push
int
enter
stos
repz
aad
xor
enter
loopne
jns
pusha
xchg
push
out
and
fsubrs
mov
inc
nop
shl
js
rclb
rcll
lret
cmp
iret
push
mov
mov
int3
pusha
sub
rcll
cs
dec
pop
movsb
outsb
ja
xor
dec
dec
test
push
leave
and
xor
movsl
xchg
add
aaa
pop
dec
das
xchg
in
mov
push
fisubl
shrl
sub
jp
test
push
add
jo
cmpl
pop
sub
mov
dec
jne
mov
in
adc
sbb
imul
or
mov
cmp
pop
push
mov
sub
notb
push
leave
insl
fwait
cwtl
cld
mov
and
out
jle
int3
and
shl
aaa
pop
jle
xchg
pop
ljmp
push
std
or
cmc
mov
cltd
mov
pop
sbb
mov
pop
shlb
aad
pop
iret
or
pushl
pop
mov
xchg
or
imul
xor
movsb
iret
repz
pop
js
or
mov
mov
lret
out
push
push
test
ss
cmpsl
mov
insl
outsb
dec
xchg
mov
scas
nop
cmp
test
js
sub
adc
push
xor
popw
cmp
pop
js
insl
and
es
sbb
rorb
daa
in
xchg
mov
inc
ficoms
adc
sbb
dec
insl
ss
test
popa
pop
stos
mov
aas
cmpsb
or
fistpl
ret
cmpsb
push
inc
cmp
sub
mov
xchg
push
div
xchg
xor
std
mov
idiv
call
lea
fsubrp
sbb
mov
pop
xor
rcrl
inc
call
fildll
add
dec
xor
test
outsl
cmpsl
push
mov
mov
xchg
inc
cmpsl
sub
inc
or
mov
movsb
cld
in
push
repnz
gs
loope
js
fs
fsts
push
sbbb
mov
pop
pushl
into
mov
add
xor
sub
imul
fs
jl
push
scas
mov
and
mov
push
es
fisubrs
and
in
stos
jmp
push
arpl
adc
in
dec
mov
xchg
dec
orl
out
mov
push
inc
mov
jne
popa
clc
rcrl
adc
call
sarb
out
lcall
xchg
or
nop
and
jbe
idivl
ret
outsl
fdivrl
sbb
lods
jb
adc
test
aam
sbb
xchg
mov
sbb
fildll
lock
out
cltd
push
and
clc
dec
out
inc
mov
lahf
xor
daa
adc
shrl
stos
repz
gs
lds
inc
mov
pop
cltd
inc
mov
bound
xchg
pop
fildll
lahf
push
stos
pop
sub
out
dec
mov
mov
xlat
dec
out
fs
xor
int3
outsl
adc
scas
aam
cld
sub
loopne
fs
xchg
mov
lret
fistps
xchg
adc
cmp
push
dec
dec
jb
dec
sub
pop
rcl
add
jge
mov
lea
adc
dec
je
sti
push
nop
cmc
cmp
jg
scas
and
lret
mov
shrl
dec
cmp
rorl
adc
push
mov
sub
stc
iret
les
inc
shll
mov
xor
push
lahf
mov
mov
mov
dec
mov
and
sub
add
sub
out
or
punpckhwd
lock
inc
jecxz
push
mov
and
inc
js
xchg
mov
or
mov
test
lea
int3
scas
lcall
cwtl
inc
sbb
push
pop
cli
ljmp
xchg
mov
jl
cli
sub
stos
movsb
mov
aad
cmpsb
jmp
cmp
scas
or
push
adc
aaa
test
push
icebp
mov
movsl
das
mov
mov
pop
adc
dec
inc
dec
mov
and
jl
es
sbb
mov
ljmp
sar
out
mov
jmp
sbb
push
hlt
les
loope
mov
xchg
cmc
or
adc
inc
or
sbb
ret
dec
mov
or
aad
sub
sub
xor
dec
cli
rcll
mov
jmp
inc
push
pop
lea
inc
jmp
jbe
out
andb
pop
call
sbb
push
loope
cld
jb
xor
dec
sbb
lock
dec
push
int
pop
sub
jle
int3
shll
xor
jbe
xchg
xchg
loop
iret
dec
sub
cmpsl
les
pop
ljmp
cmp
adc
push
mov
std
cmc
pop
xor
dec
pop
add
movsb
push
ds
nop
pop
dec
sub
arpl
not
testl
shlb
pop
push
iret
movsl
ss
daa
and
lock
enterw
out
inc
sub
stos
xor
pop
mov
pusha
lahf
xchg
cltd
out
repnz
into
addb
cmpsl
insl
sar
test
fsubr
lods
mov
add
jle
mov
jae
aad
and
mov
push
or
pop
xor
repz
xor
dec
cmp
ss
cmp
movsl
fnsave
js
cltd
fidivs
sbb
jb
aas
sub
in
ret
or
lock
add
scas
mov
or
cmc
mov
outsb
stos
push
mov
sbb
push
inc
mov
mov
push
cmp
pop
repz
paddw
ds
mov
sbb
mov
les
and
sti
popa
out
lods
pop
rorb
shll
adc
out
outsb
lods
jge
mov
stc
addl
push
mov
pop
sub
mov
inc
mov
scas
imul
call
cmpsb
mov
into
mov
push
cmp
add
rcll
aaa
jl
push
pop
ror
and
loop
jno
sbb
imul
lret
je
add
cmp
xor
je
add
aas
addr16
push
mov
jo
shlb
mov
arpl
and
mov
lahf
add
or
loope
lds
out
sbb
and
sub
and
mov
push
sahf
xor
ret
jae
jnp
inc
and
fdivrs
outsb
scas
daa
mov
fsub
sub
or
xchg
pop
test
mov
data16
inc
mov
jb
insl
jbe
stos
sub
jmp
lahf
xor
mov
fabs
clc
std
leave
icebp
xchg
xlat
divb
inc
xor
and
punpckhwd
and
mov
mov
aad
jns
xor
sbb
mov
lock
jg
xchg
jnp
jne
and
movsb
sub
gs
scas
fwait
pop
cmp
fwait
jno
sub
bound
jnp
bound
sbb
stos
mov
cmc
inc
add
stc
test
and
push
dec
fistps
and
dec
xor
cmp
rorl
xchg
ljmp
lret
mov
jmp
or
stc
xor
ds
push
mov
inc
push
and
inc
stos
int
pop
mov
loop
dec
pop
mov
xor
cmovns
insb
dec
loope
inc
les
sbb
sbb
adc
lods
dec
xor
aaa
and
popa
dec
ret
dec
pushf
or
xchg
mov
dec
cmpsl
out
cmp
in
mov
or
and
es
inc
out
call
ret
and
loopne
addb
mov
popf
sbb
or
clc
cmp
fisttpl
cli
lock
mov
outsl
xchg
outsb
adc
sub
shlb
mov
test
xchg
ret
sub
mov
jle
push
hlt
cmc
aad
addb
iret
icebp
fiadds
mov
push
sahf
adc
push
ss
inc
xchg
push
jbe
sarl
orl
out
jmp
mov
inc
jnp
cmp
leave
rorb
adc
jle
hlt
test
sbb
xchg
ljmp
lret
or
sbb
cmpsb
test
stos
scas
mov
dec
cli
lahf
loop
in
mov
fistps
stc
cld
xor
xchg
ss
orl
ret
bound
sub
and
sbb
std
adc
and
lea
incb
imul
push
pop
out
mov
stc
pop
lret
scas
ljmp
jmp
insl
push
mov
pop
push
jnp
sub
mov
add
ret
insb
sbb
sub
iret
xchg
cmp
inc
sbb
cmp
daa
loopne
xchg
stos
subl
or
xchg
mov
pop
pop
and
pusha
scas
sbb
push
ljmp
mov
in
mov
inc
jns
adc
xlat
int
sbb
ss
push
lea
in
out
call
xchg
or
mov
cmp
add
dec
push
sub
mov
push
and
dec
mov
test
mov
pop
test
rep
sbb
pop
addr16
ljmp
vpsrld
cmpl
and
jbe
push
call
subl
xchg
test
movsl
mov
test
pushf
cwtl
aas
jecxz
jp
in
lock
lret
idivl
jge
loope
das
sub
fnstsw
add
test
mov
jle
mov
imul
mov
add
fidivs
mov
mov
add
aas
cmp
xlat
mov
push
mov
lods
pop
sub
mov
neg
ja
or
sub
cwtl
fwait
test
add
push
xchg
jno
je
fwait
pop
cmp
subl
cmp
cmc
mov
mov
xchg
inc
cmp
push
jbe
push
push
call
mov
jg
and
test
cld
mov
mov
aad
mov
lret
nop
sbb
dec
sbb
cmp
lock
repnz
test
stos
andb
call
cmpsl
loope
repz
xor
xchg
jmp
jno
mov
outsb
inc
mov
popa
mov
fcoml
mov
movsl
or
out
mov
in
pop
pop
adc
testb
and
mov
mov
push
dec
inc
sbb
test
movsl
clc
nop
insb
mov
mov
sub
cmp
out
shr
popf
shrl
sbb
sbb
adc
cmp
push
cs
cwtl
add
or
xor
lods
leave
mov
jnp
jmp
pop
mov
mov
in
push
dec
pushaw
repz
or
stc
mov
lea
xor
push
shll
push
add
into
and
sub
jno
pusha
mov
cmpsl
arpl
or
insl
dec
lret
xchg
fs
pop
xlat
xor
mov
js
add
pushf
sbb
mov
out
rcrl
das
mov
xor
testl
adc
stc
fcmovb
pop
mov
lret
pop
cmpb
and
xor
or
inc
cmp
addr16
push
lods
mov
dec
shlb
mov
jl
pop
ljmp
je
lods
bound
or
sub
mov
xchg
push
cmpsb
cmp
or
adc
stos
divb
lock
fucom
jecxz
test
mov
daa
cmp
test
mov
mov
or
pop
xchg
pop
mov
das
add
jbe
pushf
es
les
pop
pop
push
pushf
pop
jp
filds
push
adc
add
mov
or
dec
xchg
xchg
pop
lret
push
sbb
insl
ljmp
and
aad
push
sub
push
out
scas
add
jl
mov
cmp
inc
inc
push
mov
mov
inc
inc
mov
stc
sub
fldcw
rolb
in
mov
sbb
rcrl
cmc
and
ret
pop
in
mov
mov
test
inc
ficompl
mov
movsb
xor
div
aad
lods
cmc
je,pt
mov
push
sti
jns
cld
jne
fisubrs
rolb
das
sub
je
pop
arpl
call
fnop
ret
gs
adc
in
add
or
cli
jge
aam
pop
bound
xchg
stos
sub
pushf
jmp
add
push
sbb
mov
sbb
fstps
push
mov
xchg
pusha
mov
out
cltd
mov
mov
pop
xchg
cli
aaa
fdivl
xchg
in
cmp
fwait
push
adc
je
cld
cwtl
arpl
rcrl
mov
jp
ljmp
and
mov
fidivs
jp
push
aas
fldcw
pushf
ret
mov
test
pop
popf
outsl
adc
in
fcmovu
enter
out
mov
sub
test
inc
mov
orb
dec
repnz
addr16
jg
mov
sbbl
into
ret
lods
lret
xor
push
jp
lret
mov
push
sbb
loopne
xor
push
jge
or
sub
mov
push
insl
in
test
adc
xor
inc
je
cmp
cmpsb
xchg
push
mov
push
ficoms
addr16
or
sarl
pop
inc
xor
test
xchg
cltd
adc
dec
loop
and
cmpsb
cmpsb
push
and
adc
jne
dec
push
dec
sbb
insb
sbb
jecxz
int3
dec
lds
jae
rorb
cli
ljmp
mov
push
mull
push
loopne
xchg
int3
push
movsl
sbb
mov
mov
or
mov
mov
aas
lahf
xor
mov
mov
or
cli
lock
stc
push
jo
sbb
cwtl
in
cli
add
mov
and
cmp
dec
jg
rcll
fbstp
xlat
push
xor
inc
or
mov
out
jae
and
cmp
jnp
jns
pop
fwait
shrl
fstp
repnz
pop
cmp
inc
fldcw
inc
and
rclb
test
xor
and
movsb
lahf
test
dec
and
cmpsb
push
fstps
shl
dec
fwait
lods
movsb
mov
xor
push
mov
xor
mov
pop
cld
pop
dec
jmp
sbb
insb
add
test
enter
or
imul
lret
imul
add
mov
loope
fwait
pusha
add
sbb
flds
push
rcr
and
test
cmc
pop
mov
daa
movl
dec
xor
xchg
add
jge
movsb
jle
std
jmp
in
popf
cwtl
pop
adc
test
clc
out
ret
fwait
or
and
out
dec
mov
jg
inc
movsl
jge
out
loop
popa
scas
cli
fcompl
pop
mov
prefetchw
or
jbe
xchg
out
sahf
imul
sti
mov
dec
cmpsl
xchg
insb
adc
ja
jae
mov
aaa
imul
dec
cmp
pop
jo
fs
mov
pop
jb
in
sbb
pop
ja
cmp
xor
mov
push
pop
xchg
or
inc
jmp
push
adc
xor
mov
push
mov
inc
or
dec
push
sbb
inc
dec
test
adc
mov
mov
jmp
cmp
sub
repz
add
or
stc
mov
mov
jge
jle
push
or
pushf
sbbl
or
inc
sub
xor
in
cli
daa
xchg
outsb
addr16
mul
cmp
leave
mov
repnz
clc
addb
mov
and
imul
not
or
mov
push
cmp
xor
aad
fdivrl
cmp
movsb
mov
pusha
and
inc
cmp
mov
sbb
or
add
xchg
dec
jae
gs
jp
inc
loopne
out
mov
into
lea
pushf
add
lods
aaa
push
mov
sti
push
aas
test
mov
imul
test
mov
adc
repnz
and
mov
pop
pop
in
fst
fldl2t
addl
gs
xchg
lods
pusha
xor
jmp
push
mov
xrelease
sub
mull
jmp
sbb
sub
push
adc
aas
jl
test
ja
cli
sbb
mov
push
jl
xchg
movb
iret
insl
scas
popf
imul
jno
out
test
shll
or
pop
dec
bound
pop
dec
push
sub
xor
cld
aas
inc
sbbl
das
push
scas
xchg
adc
daa
push
cltd
lcall
loope
daa
ret
jp
or
das
push
and
pushf
push
xchg
push
lods
cmp
add
movsl
push
ss
addr16
jno
xor
arpl
int
inc
enter
xor
or
orb
mov
es
cld
fiadds
sub
adc
faddl
dec
popf
movsl
scas
pop
xor
dec
cmpsb
out
scas
mov
jo
inc
out
repnz
jno
sti
adc
sub
add
arpl
les
fcomps
popa
lret
fimuls
jns
or
mov
sti
push
add
mov
jg
and
test
adc
xlat
add
in
leave
inc
test
ret
dec
push
shrl
cmp
and
mov
mov
mov
adc
and
dec
xchg
pop
rclb
push
loopne
lea
sahf
jno
aas
pop
addr16
dec
xchg
add
loope
xchg
pop
in
sub
ja
xchg
dec
stos
in
jns
dec
sbb
push
mov
jae
mov
arpl
fisttpll
sub
mov
sbb
sbb
fimull
xlat
subb
pop
andb
push
mov
loope
lret
scas
sbb
push
jbe
add
adc
sub
sbb
xchg
cmp
in
scas
or
pop
or
jnp
adcl
sub
insl
or
shrb
fcoml
sarb
push
loope
inc
dec
xor
and
jmp
stc
dec
inc
push
pop
iret
fistl
roll
js
daa
and
test
shrl
cld
lret
hlt
mov
aad
mov
rorb
shll
imul
xchg
in
in
mov
pop
and
test
cltd
pop
loop
add
push
fsubrs
adc
pop
cmpsl
insb
xchg
jge
adc
xor
rcll
cwtl
out
push
push
shlb
push
inc
bsr
fstpt
dec
push
iret
sub
insb
gs
adc
or
xsha1
and
sbb
jge
push
mov
cmpsb
pop
in
loope
inc
lret
test
xchg
scas
mov
jnp
xor
icebp
pushf
fidivrs
sbb
adc
or
loope
imul
add
fisttps
mov
sbb
push
jmp
mov
xchg
rcrl
push
cs
mov
gs
lret
fstpt
push
pop
add
dec
push
jae
mov
es
inc
cmp
cwtl
sub
jg
lods
addr16
dec
cld
ret
mov
xor
and
dec
mov
fwait
xchg
addb
pop
stc
test
xor
lea
jne
pop
xor
ficompl
sahf
fst
cmp
ret
mov
ja
bound
lods
cs
outsl
cli
loope
and
sub
mov
sbb
lret
js
les
mov
or
fisubrs
fwait
fs
adc
int3
cld
cmpl
jge
add
mov
enter
cmc
outsl
test
adc
dec
and
loop
inc
call
pop
cld
dec
mov
jbe
shlb
mov
arpl
rol
sbbl
cmc
scas
jnp
leave
jno
aad
sub
adc
pop
mov
mov
sub
dec
mov
aad
mov
inc
pusha
mov
in
repnz
jl
push
out
filds
fdivrp
enter
gs
mov
out
icebp
stos
push
mov
inc
shl
imull
cmp
movsl
inc
adc
jl
xchg
pop
fwait
add
shll
mov
enter
mov
nop
call
pop
daa
lds
loop
loopne
push
or
inc
lods
cmpsl
mov
ds
loopne
mov
imul
push
sub
pop
hlt
mov
lret
gs
mov
push
xor
enter
or
pop
popa
dec
cmc
stc
or
xor
and
push
add
dec
sbb
pop
ror
and
shlb
rclb
les
lds
cs
mov
icebp
or
and
jae
push
mov
mov
push
push
or
addr16
fsts
scas
inc
mov
pusha
or
imul
movsl
mov
mov
andl
mov
call
mov
push
movsb
push
aas
aaa
push
into
jno
mov
test
mov
or
sbb
es
dec
imulb
in
xchg
add
mov
jb
dec
aas
fldenv
sti
scas
enter
push
faddl
das
push
xor
das
icebp
out
ja
push
stos
repz
punpckhwd
dec
mov
clc
dec
inc
andb
xor
push
mov
fiaddl
stc
xchg
or
dec
mov
rorl
test
push
mov
pop
adc
es
lock
adcb
mov
mov
pop
jecxz
aam
lock
add
and
xlat
mov
in
xchg
pop
mov
adc
fst
ljmp
lods
pop
cld
push
fcompl
aas
loopne
xlat
insb
or
mov
arpl
cmc
sbb
xorb
sbb
loopne
insb
pop
outsb
daa
add
in
cld
mov
cwtl
jmp
or
and
push
mov
lcall
mov
sub
sti
inc
jo
push
sbbb
inc
psubw
jno
pop
movsl
clc
mov
or
pop
xchg
push
jp
mov
enter
rorb
cmpb
pusha
push
lock
fidivl
xor
orw
leave
daa
std
and
push
add
int3
cwtl
push
adc
pop
sar
pop
and
push
rcrb
cmp
sub
cltd
std
add
fimull
ds
hlt
dec
xchg
pop
das
imul
mov
inc
das
push
scas
cmp
sub
mov
adc
mov
add
pop
jge
sub
xchg
mov
jl
inc
push
mov
icebp
cmp
stos
xchg
in
mov
pop
sbb
test
mov
inc
arpl
dec
push
clc
cmp
mov
sbb
xor
add
and
testl
fs
pop
xor
fistps
and
jmp
mov
ds
jecxz
aad
jb
fbld
mov
cmpsl
loopne
shlb
add
pop
lret
pop
dec
sbb
pushf
xchg
cmp
fadd
and
cmpsb
sub
loopne
js
and
loop
orl
lcall
sahf
jae
in
sbb
cltd
push
mov
jno
push
xorl
lahf
insl
cmpl
aam
adc
mov
xor
sub
sbb
mov
cmp
and
lret
fcompl
and
rcl
lds
pop
push
pop
push
adc
jae
push
sti
cltd
xor
test
mov
cmp
stc
pop
ds
and
xchg
jp
jnp
movsb
mov
pushf
pop
push
dec
xor
outsb
lret
test
mov
rolb
loopne
in
lock
xor
mov
sti
test
clc
into
xchg
sbb
cmpsb
xor
inc
sub
mov
mov
sbb
pop
add
mov
or
pusha
or
sbb
cmpsb
pop
out
push
pop
mov
push
dec
or
add
ficoms
pop
aad
lods
push
sti
mov
push
sbb
movsl
add
adc
jle
aad
js
sti
adc
mov
pop
insl
inc
ficomps
lcall
fsubrp
lock
jo
rcr
roll
es
les
cmp
rcll
imulb
sbb
sti
mov
icebp
cmp
adc
in
imul
icebp
xor
xlat
filds
lods
xchg
in
sub
das
rcr
fwait
imul
sti
cmp
sbb
sbb
xchg
jnp
add
andl
js
int3
and
cld
cmp
and
repnz
sbb
les
stos
pop
daa
cmp
lahf
shr
pop
and
out
and
push
dec
cld
sti
sbb
xor
mov
sub
push
aam
je
xchg
adc
test
mov
rolb
mov
outsl
test
aam
mov
xchg
push
repz
jmp
add
repnz
dec
stos
stc
sub
dec
lahf
enter
pop
aam
insb
hlt
rorb
subb
xchg
shll
inc
adc
popa
popa
fwait
loope
pop
mov
scas
jp
mov
xor
lds
mov
test
cld
xchg
sub
xchg
mov
test
cmpb
xor
mov
leave
jle
pop
dec
lahf
scas
sub
pop
and
mov
rcrb
fstl
mov
mov
jp
scas
sahf
and
adc
jmp
mov
nop
repnz
adc
xor
shl
jb
xor
jg
je
sbb
dec
mov
add
ja
xor
repnz
mov
push
adc
push
hlt
push
cmpl
popa
popf
jae
fcompl
mov
movsl
lahf
dec
push
and
call
repnz
lcall
mov
jo
xchg
enter
add
mov
movsb
insl
enter
push
push
pop
xor
nop
mov
aam
cmpsl
addr16
dec
xor
jb
mov
mov
nop
jg
es
sbbl
in
shl
cmp
in
sub
push
in
jecxz
stos
mov
inc
sub
mov
inc
test
dec
xchg
inc
mov
insb
add
or
xchg
fdivrl
dec
pop
add
push
xchg
mov
push
inc
fidivrl
sti
dec
je
cmp
mov
fisubl
or
pusha
jnp
test
sbb
outsl
push
pusha
pushf
out
lret
dec
jns
and
fldcw
fistps
idivb
push
adc
mov
addr16
add
xor
xchg
xchg
cltd
in
cld
add
jne
sbb
mov
xor
gs
inc
insb
add
ja
push
dec
cmp
inc
cmp
mov
movl
ljmp
sub
lahf
mov
adc
insb
mov
rorb
sub
mov
ljmp
aad
inc
inc
mov
out
adc
lahf
jnp
pause
add
fs
fstl
or
loop
cli
in
pop
xor
pop
jo
pop
push
std
xor
inc
pop
outsb
int
mov
enter
push
mov
in
ret
int3
mov
cltd
fisubl
xchg
push
and
fwait
pop
adc
clc
jge
ljmp
mov
test
jmp
cmp
out
aad
rcl
test
sbb
insb
cwtl
xchg
movb
push
aas
xchg
arpl
decb
mov
dec
adc
inc
xchg
and
xchg
mov
int3
adc
lahf
in
mov
adcb
cmp
cmc
lods
pop
xlat
adc
inc
outsb
cld
mov
insb
fists
hlt
mov
movsb
xlat
lods
sbb
sub
ss
rcr
ret
fcoms
mov
sub
sbb
cs
sbb
and
stos
mov
pusha
jno
mov
hlt
jae
sbb
mov
jae
int3
cs
out
inc
pushf
jge
cmpsl
push
mov
adc
leavew
dec
push
test
push
xchg
aam
push
addr16
jno
cld
roll
cwtl
imull
mov
fildl
pop
pop
outsl
mov
cld
cmp
push
mov
xor
std
in
or
addr16
xchg
adc
mov
dec
push
dec
jecxz
push
adc
repnz
mov
jae
rolb
in
stc
jecxz
in
test
or
sbbl
aaa
pop
int
cmp
xor
rcrb
dec
sub
fnsave
inc
divb
clc
or
push
mov
jmp
adc
lock
pusha
jb
fstpl
scas
test
add
aas
mov
push
cld
push
scas
incl
cmp
stos
js
cwtl
push
enter
and
pop
leave
push
in
pop
std
pop
xor
inc
lcall
xor
inc
jmp
mov
cmp
dec
scas
fsts
and
push
bound
mov
adc
loop
loope
xor
pop
add
outsb
jo
mov
xor
add
arpl
push
call
shlb
das
jbe
push
mov
loope
test
dec
ds
xor
insl
sbb
jo
lcall
int
push
push
sbb
add
imul
jns
loopne
aad
repnz
ljmp
daa
aad
pop
pop
test
push
and
dec
mov
ljmp
xchg
imul
mov
sub
les
cs
jmp
icebp
sub
aaa
sbb
jge
icebp
inc
and
lea
push
test
out
repz
sahf
testb
dec
sbb
push
jmp
nop
stos
xchg
xchg
cmp
xor
or
ja
or
inc
push
add
movsb
stos
fbstp
lods
mov
add
stc
mov
push
in
int3
lea
lcall
and
lret
lahf
lods
add
sbb
addl
test
and
xor
sbb
sahf
xlat
inc
push
push
or
push
das
or
dec
jnp
ds
negb
hlt
mov
in
leave
lea
sbb
and
sbb
sahf
ret
or
xor
es
movsb
xchg
mov
sub
push
fstl
push
jnp
push
sbb
or
mov
cltd
dec
in
add
and
adc
pop
push
clc
fistps
imul
ss
and
lock
movsl
test
scas
cli
test
or
or
mov
mov
sti
lds
lea
imul
cli
inc
cmp
fistpl
pop
test
test
scas
xorb
cmp
jecxz
fistpl
bound
je
cmpsl
xor
adc
ljmp
push
fs
loopew
addb
mov
xchg
data16
insl
stos
sub
mov
cmpb
and
inc
push
lods
into
sub
mov
in
ja
mov
push
ror
pop
jns
jno
sub
outsb
mov
mov
push
sub
jle
cmp
fs
sub
push
cwtl
enter
push
es
out
lods
xchg
loope
jb
outsb
mov
mov
das
mov
cmp
push
out
mov
sbb
in
std
aas
sub
adc
sub
inc
cmp
mov
loopne
adc
iret
push
dec
jp
inc
fwait
ret
sub
lock
cmp
aad
sbb
movsb
ds
mov
lret
test
aad
je
clc
jbe
dec
icebp
bnd
out
shrb
mov
jae
imul
jae
cmpsb
jp
jle
add
adc
fsubr
sub
inc
inc
push
adc
hlt
push
decl
test
cmp
jns
xor
mov
pop
push
clc
push
sbb
dec
popf
aad
jne
or
dec
and
lahf
and
xchg
and
aas
dec
inc
mov
fdivl
add
add
mov
insb
dec
lcall
insb
shrl
leave
or
in
push
or
lods
lahf
add
pminsw
shrl
push
stos
inc
pop
enter
mov
mov
cli
mov
jno
fistpl
jmp
mov
mov
adc
cwtl
rolb
call
pop
xor
and
addr16
pop
inc
ret
mov
ret
jb
pop
pop
scas
scas
lret
jb
mov
fs
push
mov
jg
push
pop
std
add
sbb
out
pop
nop
es
mov
pop
shlb
test
adc
scas
repnz
fistl
sti
or
and
push
xchg
lods
jle
nop
lahf
and
mov
icebp
or
and
pop
mov
dec
fldt
xchg
sbb
pop
adc
mov
or
insl
pcmpgtb
icebp
test
adc
jmp
or
push
pop
or
pop
std
mov
mov
cmp
xchg
xor
mov
dec
dec
dec
sub
and
inc
adc
mov
pushf
mov
xchg
sbb
or
jnp
push
fnstsw
mov
jnp
sbb
and
cltd
aaa
inc
es
incl
and
pop
in
rcll
sbb
and
cmp
lods
test
fcompl
mov
add
inc
mov
adc
sbb
inc
cltd
xor
je
xchg
test
data16
push
fcmovne
cmpsb
bound
add
popw
xor
lea
push
cmp
sbb
xor
or
int
out
mov
aam
pop
bound
pushf
dec
repz
aaa
push
out
aas
mov
les
mov
cmpsb
xchg
mov
into
push
inc
scas
push
in
lahf
xchg
xchg
push
adc
sarb
adc
fdivrl
jge
arpl
or
pop
adc
addb
sub
lret
mov
icebp
xor
imul
or
fidivrs
into
call
repnz
lahf
cltd
arpl
insl
rolb
aaa
or
pop
repz
jl
dec
loop
cmp
call
pop
mov
daa
jae
mov
cltd
repz
loop
in
mov
in
test
mov
dec
aad
xorl
fbstp
imul
movsl
adc
nop
pusha
sahf
out
or
sbb
sti
push
jno
and
jne
sbb
stos
sbb
pop
jecxz
dec
or
jge
and
cmp
aaa
and
ds
out
sbb
insb
mov
cmp
decb
movsb
movsb
std
sbb
js
jno
dec
out
les
sbb
cld
loope
lret
pop
jmp
les
cmpsb
fdivrs
int
jecxz
mov
xor
jo
adc
dec
push
mov
clc
pop
mov
sbb
into
lret
rcrl
mov
pop
popa
pop
sti
mov
sbbb
sbb
sub
cmp
jge
push
out
pop
push
lock
aas
jp
xchg
or
test
int
jae
cli
mov
int
adc
sbb
push
loop
scas
test
hlt
adc
flds
xchg
adc
movl
jecxz
push
lcall
out
jp
add
mov
dec
jnp
outsl
addb
les
maskmovq
push
rorb
pop
sbb
cmp
inc
or
not
rorb
jbe
sbb
add
fnstenv
frstor
push
or
push
scas
iret
fidivrs
inc
aam
out
aam
jo
push
mov
adc
loope
outsl
daa
mov
hlt
adc
test
lret
jl
jmp
mov
stc
bound
cmp
sbb
sub
push
andb
movsb
mov
hlt
loop
push
test
jmp
push
or
inc
pop
repnz
pusha
gs
cmpsb
add
or
pop
ljmp
mov
sbb
outsl
cmp
jb
sar
stos
addr16
cli
jnp
sbb
xchg
loope
int
imul
sub
push
xchg
inc
or
popa
js
cmp
scas
push
out
jle
les
mov
dec
daa
stos
mov
mov
inc
jo
insl
mov
sub
lahf
mov
fisubs
sar
frstor
adc
loop
in
pop
jns
xor
cli
mov
shlb
cmc
add
dec
sbbl
lea
pop
arpl
push
sbbl
sti
arpl
ret
push
xor
lcall
mov
add
xchg
addr16
movl
out
cmp
and
xor
scas
or
pop
mov
xchg
shrb
mov
rcrb
pop
inc
xor
adc
iret
sub
jo
imul
into
sti
test
frstor
ljmp
dec
and
adc
mov
xchg
jg
sub
jle
pop
arpl
push
or
xorb
inc
out
sub
sub
mov
jmp
scas
ror
movsb
inc
ret
jmp
fwait
minps
jl
cwtl
sarl
adc
lods
rcl
lret
mov
xchg
and
shlb
fisubs
and
sub
and
popfw
sbb
adc
fs
popf
cmc
adc
mov
jne
jle
inc
add
xor
sub
mov
dec
jmp
loop
sbb
fadd
push
out
mul
lds
ficomps
outsl
imul
jle
mov
xor
gs
shll
adc
push
cld
fimull
xchg
lods
jge
rclb
pop
in
mov
add
lret
incl
or
and
es
mov
in
sbb
pop
sub
aad
push
decl
push
movsb
jb
inc
fs
jbe
mov
mov
xor
and
xchg
jecxz
call
pusha
dec
xchg
outsl
das
or
pop
sbb
inc
shl
xchg
fnsave
mov
in
ljmp
out
and
jae
inc
pop
int3
and
pop
inc
sbb
test
push
add
pop
int3
sub
mov
cmp
pop
mov
mov
aad
or
int3
add
push
xor
insl
stos
out
jns
iret
xchg
xchg
insb
icebp
in
or
es
clc
in
mov
fdivl
ret
add
push
in
xor
out
push
daa
cmp
xor
lods
ret
pop
ret
insl
in
or
xor
pop
pushf
or
xchg
jp
inc
test
xchg
dec
outsl
cli
cmp
add
lds
mov
mov
sbb
push
or
std
lcall
inc
incb
in
add
adc
sbb
sub
mov
mov
insl
enter
jmp
mov
pop
push
aas
test
cmp
out
into
hlt
rorb
pop
ljmp
push
adc
mov
push
fcomi
idivb
repnz
movups
je
dec
jnp
xchg
mov
jae
inc
fs
dec
test
push
out
add
shl
jae
rcl
aam
xchg
mov
xchg
lds
sbb
mov
or
add
loopne
sub
cs
ret
out
xchg
ds
sti
cmpsl
pop
and
addr16
jbe
popa
insl
in
fs
out
fsubrs
sub
jp
fwait
mov
cmpsl
pop
in
add
and
pop
cmp
jle
or
inc
cmp
or
aas
int3
insb
and
test
in
popa
cli
xor
or
test
movsl
dec
mov
mov
aas
mov
mov
fucom
loop
loopne
push
outsl
cli
push
cwtl
test
dec
sbbl
mov
jnp
mov
lahf
andl
dec
xor
sbb
adc
adc
hlt
fdivl
cltd
mov
lea
outsb
mov
mov
jo
sbb
pop
dec
repz
pusha
and
pop
shll
scas
cwtl
outsl
or
push
push
icebp
roll
iret
xlat
lods
jns
out
push
lods
dec
adc
and
pop
pop
aam
inc
rorb
out
dec
gs
mov
scas
js
imul
and
dec
movsb
lret
mov
push
fimuls
jno
aaa
mov
fs
jns
in
add
imul
rcrb
mov
pop
jbe
test
pop
in
pop
mov
mov
xchg
das
and
in
leave
or
lret
out
es
imul
add
fisttpl
cltd
scas
pusha
loop
arpl
loop
fistpl
bound
add
xor
mov
jo
je
jns
jno
les
in
out
call
fcmovu
inc
fists
mov
test
jl
lods
call
test
push
lret
outsl
sub
enter
mov
dec
gs
or
lret
mov
inc
test
xchg
push
pop
adc
push
jg
out
or
inc
std
mov
es
repz
adc
popa
pop
adc
ret
out
dec
mov
xchg
shll
aaa
push
lret
fdivrp
lea
jg
stos
in
pop
ljmp
enter
sbb
or
into
cwtl
add
dec
cmp
pop
faddl
or
pusha
and
data16
call
inc
mov
mov
mov
sbb
call
mov
imul
imul
xchg
out
cmp
mov
push
pushf
rcrl
aam
jnp
cmp
cltd
test
dec
adc
aad
inc
inc
mov
call
fstpl
jo
cwtl
fwait
jbe
loope
dec
adc
inc
push
xchg
sub
dec
adc
in
shlb
mov
mov
rol
add
inc
sub
sbb
rolb
shll
repz
sarb
dec
push
cmpsb
sbb
push
hlt
out
int
fildll
dec
add
mov
sbb
loope
push
mov
out
test
sbb
loopne
mov
outsb
sbb
int3
dec
inc
pop
das
cmc
mov
mov
rcr
mov
pushf
vmulps
sbb
sub
sub
push
or
iret
sarl
xchg
adc
in
pop
push
or
lock
adc
push
ret
sti
imul
or
mov
lods
mov
rcll
lret
js
jl
push
movsb
push
pop
xchg
inc
add
jb
sarl
sbb
cwtl
sbb
jno
imul
mov
mov
mov
push
in
add
adc
mov
push
add
adc
ss
out
lds
dec
jb
mov
cmp
jp
inc
xchg
jecxz
xchg
mov
add
push
cltd
scas
and
outsb
ret
stos
lock
cmp
nop
xor
and
pop
jecxz
in
and
cmp
ret
lods
lret
lahf
push
or
mov
mov
mov
sahf
js
lods
enter
push
pop
fwait
sti
mov
mov
cmc
or
sub
xchg
jnp
test
and
cmp
pop
add
mov
or
pushf
lret
fnsave
les
test
add
push
rorl
hlt
inc
std
sahf
in
scas
inc
sub
adc
outsb
jmp
js
or
xor
outsl
mov
cmp
jp
cmc
iret
mov
dec
cli
enter
push
or
push
jno
dec
cli
mov
mov
mov
out
mov
arpl
jl
mov
pop
and
push
mov
pop
cmp
nop
mov
jmp
mov
sbb
fdivrl
jge
cltd
inc
inc
mov
and
fisttps
imul
mov
cmp
sub
mov
jne
cli
rorl
lea
aaa
lret
add
shld
lods
and
mov
mov
jo
scas
push
cvtpi2ps
add
addr16
and
mov
aaa
pop
or
out
xchg
loopne
xchg
int
xchg
dec
in
inc
es
mov
shll
pop
mov
shlb
idiv
cmpsb
and
sbb
fnstenv
cmc
pop
mov
sahf
jmp
xchg
mov
out
dec
popa
fsubl
cmp
mov
cltd
lock
mov
dec
xor
lock
pusha
adc
shll
push
cltd
or
mov
inc
movsb
subb
or
sbb
sbb
and
push
lods
fs
frstor
scas
xchg
xchg
and
out
testl
add
lret
in
mov
stc
mov
jge
cmp
xchg
fs
std
loopne
ljmp
testb
dec
mov
dec
stos
nop
jg
and
std
xor
ffree
dec
std
dec
xchg
das
push
stos
or
push
stc
jmp
test
sub
std
mov
leave
jne
jg
insl
out
loope
mov
or
mov
cs
and
loopne
int3
push
add
mov
out
fsubp
xor
ss
add
pop
packuswb
adc
inc
testl
out
and
fstpl
stos
out
ret
xchg
xchg
add
fbld
aaa
sti
int
xchg
lods
icebp
nop
add
pop
sbb
nop
adc
or
jne
mov
int
mov
popf
adc
pushl
xor
sbb
subl
adc
int
cmpsb
inc
adc
pop
add
cmp
xor
imul
xchg
pop
ja
leave
pop
mov
das
outsb
pop
int
rcll
mov
aam
dec
and
stos
sbb
lret
cmpsl
add
out
mov
les
adc
jbe
mov
sub
cs
addr16
inc
adc
jns
inc
pop
ljmp
addb
xchg
adc
fdivl
dec
loope
mov
es
fstl
loopne
inc
test
fdivrl
cld
fadd
in
iret
orb
jp
jns
xchg
cwtl
std
jbe
jns
ret
mov
fisttpll
ficoms
mov
dec
les
add
and
cmp
or
arpl
das
mov
int
mov
std
adc
sbb
jns
jae
jns
sahf
in
mov
adc
ret
xchg
in
not
mov
push
std
fxch
insb
cltd
or
dec
clc
push
les
mov
xchg
imul
dec
call
pop
xchg
sbb
mov
int
push
ds
out
xor
cmp
ljmp
fstpl
and
not
dec
fidivl
int3
scas
mov
lcall
insb
cld
adc
das
cmp
xor
add
sarl
jecxz
scas
lahf
cmp
pushf
jg
xchg
orb
add
jnp
inc
lret
push
lret
adc
sets
add
jecxz
das
les
mov
or
jno
mul
mov
lock
cld
inc
adc
pop
pop
aaa
inc
movsl
mov
imul
pop
dec
enter
xor
repnz
cmp
push
dec
fcom
into
and
inc
mov
std
cmp
xor
sti
clc
loopne
outsl
mov
mov
loope
imul
cmp
cmp
jle
in
push
imul
popf
mov
mov
sub
inc
cmp
push
jo
orb
xlat
mov
dec
popa
scas
sub
xchg
std
mov
shlb
sbb
sahf
jbe
or
sub
lahf
test
jbe
add
pop
insl
adc
dec
mov
mov
pop
xchg
add
std
cmp
test
scas
out
andl
sbb
jle
jle
and
pushf
pop
xchg
cwtl
xchg
mov
cltd
inc
sub
shl
xchg
inc
test
lock
test
and
hlt
or
or
mov
cld
jo
sbb
xchg
mov
outsl
aaa
mov
insl
xchg
out
and
pop
add
mov
xchg
push
lds
push
cs
mov
pop
test
ss
jne
addr16
out
sbb
adc
sub
jo
outsl
dec
push
fidivs
inc
xchg
mov
mull
cld
shrl
dec
jle
test
or
dec
jp
shll
sarl
inc
fwait
and
xor
movb
xchg
sub
inc
cmp
add
jo
push
aad
xor
daa
out
inc
inc
cmp
sbb
push
mov
repz
push
xchg
dec
jp
inc
cmp
pop
dec
sarb
adc
sbb
adc
mov
pop
jnp
gs
xchg
xchg
jmp
ja
pop
push
sub
cmpsl
mov
or
sub
cltd
xchg
movb
call
fsubs
xchg
mov
cmp
sahf
and
pop
nop
add
jne
fs
stc
shl
push
ret
enter
cwtl
push
sbb
dec
cmpsb
xor
sbb
jo
ljmp
inc
xor
out
mov
pop
pop
out
enter
push
mov
pop
ret
pop
sbb
inc
pop
or
and
push
xchg
popl
incb
cmc
cmc
or
sbbl
outsl
mov
icebp
scas
test
adc
fstpt
outsl
dec
insl
and
mov
mov
xor
cmp
pusha
jb
int
clc
add
adcb
mov
clc
ljmp
dec
popl
push
inc
or
sub
jae
stc
and
or
adc
push
repz
and
jl
inc
ret
adc
or
mov
sub
scas
shll
mov
inc
and
fnstsw
in
movsl
jmp
cmp
popa
jnp
and
adc
jnp
stc
stos
test
add
xor
in
sub
es
jle
sti
and
out
push
xor
add
dec
jge
out
jmp
std
cld
sub
mov
push
xor
inc
pop
fistps
inc
xor
or
xor
dec
dec
or
lcall
ss
sub
in
clc
pop
cwtl
jo
push
aad
mov
lahf
dec
loopne
int
std
jae
ds
jns
fiaddl
fcmovu
mov
int3
mov
lea
xchg
pop
shll
dec
loope
fldpi
mov
sub
adcl
rorl
ror
sub
and
xor
ret
loop
inc
ds
cld
push
mov
dec
fdivl
into
sbb
dec
sub
add
adc
jbe
dec
movsl
lods
cs
add
adc
flds
push
ljmp
mov
mov
sahf
add
data16
rcr
or
jg
ret
pop
add
mov
scas
dec
fisubl
mov
add
inc
mov
mov
int
dec
dec
push
daa
adc
ljmp
or
push
popa
dec
xlat
jae
and
ss
mov
call
addr16
inc
xor
jb
pop
xchg
mov
addr16
imul
or
or
xchg
mov
outsb
inc
cmp
xchg
push
jns
mov
adc
std
stos
ss
cld
push
js
inc
sbb
push
out
dec
int
lock
bnd
stos
aam
test
movsb
cmp
cmc
cld
mov
cmp
addl
mov
jmp
pop
and
xchg
iret
or
push
fdivs
sbb
jmp
lods
ss
imul
iret
jecxz
jb
insl
cmp
call
arpl
add
jl
out
and
mov
call
mov
mov
popa
cltd
cmpsl
cmp
push
sub
xlat
test
call
and
fimuls
add
pop
sbb
jb
add
in
adc
neg
rclb
mov
mov
pop
mov
inc
inc
bound
mov
xor
in
ja
and
mov
fstp
add
insb
outsb
sbb
pop
cmpsb
add
adc
sahf
ljmp
add
and
inc
adc
ret
mov
cmpsb
clc
and
icebp
dec
dec
fisttpl
xchg
xchg
repnz
mov
arpl
cmpsl
inc
dec
inc
mov
stc
jecxz
xor
lods
idivb
push
pop
idivl
xchg
mov
sti
adc
add
imul
loopne
fdivrl
pushf
adcl
xchg
int
jns
dec
divb
mov
loop
sbb
pop
jbe
mov
sub
push
sub
inc
bound
in
pop
lds
sti
enter
insl
clc
jno
loopne
push
sbb
push
cmc
jle
adc
xor
insb
or
mov
lahf
insl
sub
inc
dec
push
cmp
rol
add
icebp
aam
insb
leave
lods
iret
pop
in
inc
arpl
popf
mov
call
fnstsw
jge
jg
or
xor
cwtl
mov
push
std
arpl
pop
add
push
fstpt
std
xchg
movsl
xor
ret
adc
and
loop
fidivrs
pop
cmpb
jo
xchg
cs
in
aam
cmp
imul
jge
mov
mov
enter
mov
mov
sub
xor
subl
ljmp
popa
mov
sbb
mov
dec
jge
mov
es
pop
sub
loopne
add
loopne
pop
sbb
cli
mov
jmp
inc
mov
int3
cmpsl
out
adc
arpl
int3
cmp
in
xorb
jmp
loop
sbb
les
addr16
lods
es
xor
dec
dec
dec
scas
cmc
out
lahf
jl
hlt
ds
or
push
mov
shll
rcr
sbb
icebp
jmp
jno
pop
movsb
addr16
sbb
xchg
pushf
ljmp
inc
push
bound
int3
loope
leave
push
inc
movb
xchg
cld
pop
repz
ja
mov
push
adc
rorb
jb
push
jb
xlat
lds
jecxz
add
outsl
nop
in
and
pushf
pop
orl
ja
cmc
inc
xor
mov
push
int3
ret
cmp
mov
lea
mov
cs
daa
xlat
aaa
mov
xor
jne
in
xchg
enter
popf
dec
or
dec
mov
sbb
outsb
popa
cwtl
mov
mull
jno
sbb
xor
std
pop
dec
mov
or
std
scas
test
insl
jle
neg
dec
call
sahf
out
lock
fstps
jp
fisttpl
inc
nop
inc
xchg
loope
test
push
xchg
mov
inc
inc
inc
jbe
ret
notb
cli
adc
shrl
cmpsb
mov
push
pop
jp
fldcw
adcl
movsb
jle
mov
sbb
ret
mov
xchg
cmpsb
push
stos
sbb
cmpb
fildl
fdivr
adc
mov
sahf
test
push
xchg
push
push
inc
stos
cld
test
jb
aaa
test
shrl
pop
push
or
jmp
xchg
sbb
jb
mov
sbb
int3
mov
dec
xchg
ss
inc
xor
xchg
shll
fsubs
lcall
xor
xor
or
stc
cs
dec
es
sub
push
push
xchg
cld
adc
nop
mov
mov
out
ljmp
cmpb
cmp
xchg
pop
into
sbb
add
cmp
mov
inc
dec
out
or
sar
addr16
or
push
xchg
dec
sub
or
push
jnp
cmc
shlb
jmp
add
xchg
push
int
fucomi
mov
leave
icebp
adc
inc
jno
mov
out
xor
inc
fwait
mov
sbb
dec
in
popa
faddl
out
cmp
mov
sbb
les
jo
nop
xchg
jb
imul
lea
rcrl
sti
add
mov
push
adc
out
jbe
rorl
jp,pn
pop
pop
hlt
jmp
pop
rol
pop
mov
iret
mov
scas
xor
or
jl
cmp
pop
pop
and
gs
mov
jecxz,pt
sbb
adc
sub
fwait
xchg
bound
rsm
adcl
dec
push
arpl
xchg
jno
dec
xor
or
notl
pop
pop
fisttpl
pop
cmp
movsl
test
xchg
repz
gs
pop
cmp
popa
iret
insb
mov
xor
inc
fildll
bound
sti
js
inc
or
stos
daa
test
cmp
movsl
xchg
stos
sbb
aas
scas
xchg
fisubrs
jns
sub
jge
add
or
outsl
xchg
out
or
mov
stc
ficoms
pop
adc
add
and
jg
adc
sub
aad
fucomi
push
sbb
adc
push
dec
jo,pt
fldenv
dec
push
adc
dec
mov
mov
aam
mov
in
sbb
aad
push
fisubl
ret
mov
mov
movsb
and
dec
xchg
pop
push
sub
inc
stos
push
jb
xlat
into
xchg
sbb
pop
shr
push
jg
cmpb
lret
int
lahf
clc
into
mov
sub
shrb
mov
sbb
lret
adc
js
sbb
and
movsb
sbb
out
rolb
inc
cmpsb
mov
push
gs
notb
stos
sbb
mov
int
popf
mov
loop
cmpsb
add
imul
mov
and
mov
shl
xor
out
dec
xor
pushf
fistps
fnstenv
inc
pop
call
fs
ljmp
lret
push
mov
xchg
pop
jne
jp
add
das
cmpl
or
test
jp
or
xchg
push
jns
push
mov
adc
sahf
frstor
push
lods
jb
xor
aam
loopne
mov
mov
xchg
or
aam
mov
or
popa
fwait
xchg
divb
out
adc
or
jg
fcmovb
lods
sub
xor
daa
pusha
xor
mov
mov
lret
jge
cmp
out
sub
popf
and
mov
cmp
adc
outsl
outsb
ljmp
jnp
pusha
negl
add
pop
cmpsl
add
icebp
jno
xchg
popw
inc
orb
add
cmp
pop
lcall
movsl
mov
jne
xchg
adc
lock
movsl
pushw
leave
lock
in
adc
ffree
outsl
xchg
frstor
pop
xor
lds
xchg
test
lods
lahf
or
rclb
mov
xchg
adc
mov
fdivrl
cwtl
aas
or
mov
stc
test
int3
lcall
mov
jl
aad
jae
push
test
mov
inc
and
fnstsw
mov
push
sbb
leave
inc
pop
add
pop
mov
mov
push
jne
pop
and
dec
xchg
xchg
rclb
fimull
mov
mov
or
push
pop
add
push
aaa
gs
mov
cwtl
mov
add
loopne
cmpl
mov
mov
stos
data16
lods
sub
xor
cmp
adc
cmc
in
xchg
cs
popf
loopne
mov
out
test
or
cmp
outsl
mov
inc
sbb
aaa
mov
pop
xorl
fmuls
loopne
imul
fmull
cmpsb
out
adc
push
stos
inc
dec
fdivs
fwait
lods
sub
push
push
aas
cmpsl
dec
sbb
jno
inc
les
jecxz
int3
fiaddl
aaa
jl
ret
adc
inc
adc
loope
xor
mov
cmpsl
imul
dec
adc
cwtl
outsl
out
cmpsl
cli
dec
fabs
sbb
adc
cmpsb
mov
pushf
pushf
in
xchg
jbe
stos
es
in
inc
pop
daa
xor
pop
int
xlat
mov
fst
cli
fistps
or
sahf
mov
aad
add
xchg
mov
mov
sarl
rorl
jg
insl
mov
lds
jb
in
or
test
adc
pop
mov
dec
add
popa
loop
jnp
adcl
leave
or
lods
mov
pop
xlat
sub
cmp
mov
push
ret
mov
cmp
push
mov
jnp
stc
outsl
sub
testl
or
push
pop
repz
sub
mov
sub
inc
pop
mov
and
or
movsl
sbb
jbe
fisubrl
mov
inc
push
outsb
jae
xor
inc
scas
aam
cmpsl
cmp
inc
pop
and
cld
or
pop
xchg
sbb
adc
aaa
lret
mov
cs
sbb
aas
adc
sub
mov
scas
mov
insb
js
test
xor
outsb
and
leave
jne,pn
ficomps
aas
ja
shr
mov
cs
out
jecxz
in
jecxz
addb
adc
inc
sbb
mov
paddsw
lret
sti
insl
mov
stos
movsb
push
mov
xchg
mov
scas
cmp
sub
lcall
mov
movsb
enter
sbb
das
xor
push
and
or
dec
fdivl
mov
ja
push
jb
pop
sbb
pop
mov
dec
xchg
sub
or
outsl
call
pushf
shrl
xor
cmp
leave
push
stos
mov
sbb
sub
stos
pop
push
shlb
or
cltd
repnz
ja
adc
mov
mov
xchg
cmc
ret
jae
cs
arpl
arpl
pop
mov
in
sub
mov
mov
mov
cmc
fildll
fisubl
or
lock
sbb
inc
repnz
out
mov
ds
in
lret
out
xchg
pop
dec
push
mov
ret
loope
pusha
mov
stos
xchg
and
leave
add
pop
cmp
mov
jbe
jno
push
std
andb
and
imul
cmp
lods
add
bnd
out
cmp
fwait
popf
jb
dec
xlat
jge
mov
mov
mov
adc
jns
xorl
shrb
rorb
push
dec
sahf
and
into
dec
inc
decb
data16
fnsave
inc
pop
movsl
ret
test
iret
sbb
gs
scas
mov
ja
jns
test
cmp
int3
mov
lret
cmp
xchg
inc
mov
jb
inc
mov
or
or
ret
int3
movsl
int3
push
sbb
mov
bound
loope
cltd
cmp
les
clc
xor
inc
jbe
cwtl
jns
in
or
xchg
pop
cmp
testl
xor
xchg
sub
pushf
loopne
pop
xor
mov
jo
mov
mov
push
insl
dec
add
xor
je
push
sbbl
mov
jno
pusha
and
stos
into
sbb
mov
fcmovu
push
mov
mov
aaa
cmp
insl
fyl2xp1
mov
push
dec
ret
pusha
dec
in
dec
nop
lcall
lahf
pop
je
xlat
leave
cmp
ucomiss
mov
push
nop
addr16
and
lds
inc
lods
add
mov
inc
xor
cmp
lods
push
lock
int
cmp
push
in
lods
in
pushf
push
dec
mov
jmp
mov
push
lods
out
sub
sti
test
xchg
dec
in
add
sbb
pop
iret
jbe
scas
adcb
jl
mov
add
and
sub
js
or
inc
xchg
es
jno
ds
sbb
aam
lahf
adc
iret
jge
xlat
pusha
xor
mov
mov
lds
das
xor
jbe
in
pop
daa
das
sbb
cltd
and
push
add
pushl
outsl
sahf
inc
cmp
pop
pop
imul
ja
fbld
sub
faddp
dec
and
dec
push
stos
ljmp
pushf
lcall
lock
lahf
or
jne
xchg
xchg
das
lock
mov
cld
sahf
cmc
stos
or
xchg
je
cmc
jl
test
add
aaa
xchg
mov
arpl
push
push
mov
stc
dec
and
ret
dec
jbe
sahf
in
mov
hlt
xchg
xor
out
fwait
push
aas
push
and
xor
outsl
and
fwait
jbe
jb
pop
dec
addr16
adc
in
jns
mov
test
sbb
mov
lock
in
sarl
pop
push
les
rcrb
inc
pop
and
add
je
add
repnz
adc
dec
and
cld
addr16
aad
mov
arpl
dec
jnp
mov
xor
mov
mov
jne
pop
adc
es
xchg
in
and
dec
xchg
lahf
and
inc
rol
test
add
add
aad
xor
sbb
mov
mov
xor
pushf
add
jo
out
push
les
lcall
rorl
sbb
stos
aaa
iret
aam
or
incb
jl
add
dec
xchg
adcl
sbb
inc
mov
ror
idivl
bound
fs
cmc
int3
in
iret
jle
subb
cld
fwait
push
lret
adc
lret
sub
js
mov
lret
sbb
ljmp
mov
jbe
hlt
pushf
cmp
adcb
outsb
scas
push
dec
mov
xor
sub
pop
inc
or
pop
push
int
cli
pushf
dec
js
outsl
addr16
mov
loop
aam
fldcw
sbb
std
cwtl
fistpll
cmc
mov
lock
xlat
xor
arpl
nop
cmp
test
pop
sbb
stc
aaa
xor
lahf
test
leave
adc
sbb
sub
cmp
sbb
out
or
xor
imul
xor
pop
mov
add
popf
std
jne
pop
pop
mov
cmp
sar
or
dec
xor
leave
ja
xchg
fisttpl
sub
sti
dec
sub
lock
mov
outsl
jge
jp
jle
cmp
mov
or
mov
jnp
xchg
jns
movsb
xchg
ret
dec
rol
and
hlt
pop
mov
mov
mov
testl
jle
sarl
inc
jg
movsl
xchg
ljmp
sbb
cli
in
inc
test
mov
ret
or
dec
xor
xchg
daa
or
cli
sub
cmp
sub
fs
and
push
sub
fwait
in
inc
pusha
adc
push
clc
push
sbb
jge
adc
je
clc
ja
pop
test
pop
sub
inc
test
lea
imul
xlat
repz
xchg
cmc
shll
sub
cltd
jmp
jle
pop
sub
adc
sub
scas
loopne
add
and
and
and
out
jns
xor
insl
mov
into
push
ret
cld
push
inc
mov
inc
ds
cwtl
clc
aas
jecxz
sbb
dec
stos
mov
push
xchg
adc
and
cli
call
add
mov
jb
xor
repz
iret
stc
dec
ror
call
add
orl
mov
into
mov
flds
out
dec
fwait
mov
mov
leave
adc
mov
cmpw
rolb
loopne
pop
cmp
fwait
cmpsb
pop
push
jl
pop
inc
aaa
mov
scas
inc
aas
xchg
mov
sub
hlt
xor
mov
xchg
adc
xchg
mov
mov
xor
dec
into
pop
shll
push
fwait
sbb
xchg
and
lods
jo
push
in
lret
and
cmpsb
jno
or
pop
and
mov
add
jbe
pop
stos
aad
add
push
fwait
or
mov
dec
popf
pop
sub
nop
dec
add
scas
lret
xlat
pop
popa
mov
dec
fcompl
mov
shlb
jge
xor
mov
mov
int3
or
xchg
push
mov
inc
aaa
xchg
push
mov
sub
xchg
nop
pop
gs
add
ss
leave
lret
out
movsl
fmull
incl
xchg
shlb
ret
adc
dec
and
repnz
jge
xchg
pop
mov
pop
arpl
cmp
cmp
sarb
inc
xchg
dec
into
es
inc
stos
sti
in
ret
clc
cmp
outsb
and
jg
cltd
mov
and
out
push
jb
xchg
loope
aam
gs
push
xchg
aad
aam
clc
into
or
mov
adc
jb
fadds
jle
pop
repz
ja
mov
add
lods
test
mov
test
out
out
out
cmpsl
leave
sub
std
popf
mov
and
cli
test
mov
xlat
mov
sbb
or
cs
adc
and
push
push
cmp
pop
pop
xor
push
subl
cmpsb
sbb
pop
fstpl
out
out
push
add
sbb
fdivrl
cmpsb
cmp
sbb
pop
pop
mov
sbb
lds
clc
jns
fwait
js
addr16
push
mov
in
mov
inc
adcl
mov
xchg
xchg
stc
sub
push
cmpb
out
stc
adc
rclb
jne
aaa
jecxz
mov
outsb
mov
test
xor
repnz
shlb
push
and
adc
scas
jmp
je
sbb
in
lea
repz
in
mov
xor
jg
sub
aam
lahf
lahf
add
imul
nop
in
mov
adc
push
pop
mov
stos
aad
xchg
mov
cmp
fprem
cmp
out
jmp
inc
push
mov
jnp
flds
sbb
addl
mov
cmp
pop
fmul
std
in
or
dec
dec
push
fisubl
cmp
sub
jecxz
loopne
stos
push
pop
sub
scas
and
stos
nop
push
scas
mov
sbb
dec
jle
cmp
pop
sbb
stos
dec
inc
jecxz
dec
aad
lcall
add
mov
addr16
stos
stos
fwait
mov
push
and
fptan
aad
divl
xchg
jno
js
mov
adc
inc
shll
push
test
push
adc
adc
dec
mov
nop
sar
xor
and
xchg
cmpsb
pop
test
ss
fisubrs
and
mov
stos
cld
mov
and
adc
imul
scas
data16
push
shrb
jg
xchg
and
jl
popl
stos
sbb
movb
lock
inc
mov
aas
mov
ss
pop
mov
mov
test
push
mov
lret
push
sarb
stc
aaa
pop
mov
pop
xchg
add
jae
pushf
pop
rorb
lret
sub
xor
mov
pop
sti
adc
add
fidivs
add
xchg
mov
add
dec
divl
xlat
insl
adc
cmp
jl
clc
xor
fcmovne
jo
adc
lea
adc
and
mov
shrb
and
mov
aas
mov
cmpsb
inc
push
fistl
test
int3
out
push
dec
test
fimull
mov
mov
or
sahf
or
mov
movsl
dec
bound
das
jge
ffreep
shrb
in
scas
push
cmp
add
sti
cmpsl
push
sub
insl
aad
sub
fcoml
shl
call
xor
test
push
inc
adc
lods
out
or
sub
pushf
fmull
je
lock
mov
push
daa
repnz
pop
add
fcoms
sbb
ret
mov
loope
stc
mov
fsubs
jns
out
sub
imul
sbb
pop
pushf
leave
dec
call
out
xor
and
daa
iret
shl
mov
mov
loop
lods
sub
in
xor
jae
testb
imul
setno
adc
mov
push
mov
xor
sub
xchg
lcall
cmp
mov
and
mov
inc
xchg
shll
mov
scas
jg
inc
mov
and
xchg
push
cmp
xorl
push
inc
sub
add
jb
insl
jg
inc
dec
fldt
sbb
cvtpi2ps
mov
mov
cmpsl
out
inc
rcrb
dec
jge
pop
inc
in
or
inc
jns
ljmp
jb
mov
mov
and
out
xchg
mov
jnp
mov
dec
repz
ror
rcl
mov
mov
mov
mov
popa
cmp
in
call
dec
test
sub
scas
pop
rcl
lea
scas
xor
aas
push
push
hlt
lret
in
rclb
test
and
iret
adc
jo
mov
insb
les
or
mov
lcall
sbbl
leave
lds
addr16
cld
test
hlt
out
ret
test
cmp
lret
pop
cltd
push
jg
push
push
and
pop
loop
imul
xchg
inc
aad
and
push
dec
xchg
cmp
mov
daa
fcoms
or
aad
inc
in
out
mov
out
imul
push
and
movl
mov
out
sbb
cld
lahf
sub
dec
stos
mov
push
in
xchg
loope
fwait
dec
test
pop
xlat
xchg
pop
lret
dec
fwait
inc
daa
test
pop
sbb
mulb
in
xchg
movsl
repz
jns
jmp
push
insl
xor
int3
sbb
lret
push
loope
and
jmp
ja
add
inc
adc
in
or
dec
mov
inc
test
popa
pop
out
pop
mov
leave
add
insb
jno
pop
add
mov
cltd
inc
cmpsl
push
jp
mov
mov
sbb
inc
subb
loop
add
dec
cmp
ret
out
and
pop
scas
scas
mov
sbb
aad
or
xchg
int
jmp
cmp
mov
xchg
xchg
add
mov
loopne
test
sub
mov
or
and
int3
loope
mov
jecxz
cld
loop
inc
add
jge
fwait
xchg
dec
fs
mov
cmp
jno
xor
insl
adc
gs
xchg
push
insb
lahf
cli
pop
stc
mov
ja
pop
dec
cwtl
inc
dec
jae
in
nop
or
ja
pop
ljmp
fwait
pop
inc
pop
xchg
dec
std
jbe
cmp
jbe
push
mov
hlt
jl
cmpsl
leave
rcl
leave
fwait
popf
sbb
mov
ficoml
ss
imul
and
add
cmp
xor
leave
cmp
cmpsb
lods
mov
and
adc
pop
idivl
cmpl
inc
les
inc
and
gs
mov
xlat
rorl
in
inc
cmp
in
enter
outsb
pusha
clc
popa
add
jmp
out
scas
jno
xor
jge
pop
cmp
xlat
inc
push
inc
pop
movsl
pusha
cmc
mov
mov
push
add
xchg
cmpsb
dec
or
inc
push
or
mov
lds
enter
mov
sub
xchg
xchg
lret
xlat
int3
pop
add
xlat
stc
hlt
mull
ss
cs
lock
xor
jb
jbe
mov
xlat
pop
push
mov
xchg
shll
sub
int
adcb
mov
add
icebp
sahf
lods
push
aam
mov
je
cmp
mov
into
andl
mov
push
in
out
subb
and
sub
cmp
pop
mov
adc
aad
fdivrs
fldenv
push
addl
ja
sub
shrl
fstp
bound
outsl
adc
xlat
lock
push
push
fdivl
jns
and
cmp
sub
pop
and
mov
sbbb
sbb
lret
or
loope
and
adc
dec
bswap
outsb
ret
cmp
xchg
xor
pusha
or
lcall
mov
rorb
ja
subl
lds
icebp
je
test
xchg
insb
loop
popa
int
xlat
popa
cmp
nop
adc
out
mov
mov
popf
loope
xor
cmovg
or
addl
leave
rolb
mov
xchg
data16
cmp
fcomps
test
out
pop
jne
xor
jle
dec
out
ss
arpl
fsubl
jae
outsb
sbb
mov
mov
jb
js
mov
cmp
cmpsl
mov
hlt
movsb
ja
pop
push
mov
mov
fildll
ss
fdivl
addr16
xchg
loop
aas
cltd
sbb
inc
xor
sub
das
cmpsl
jmp
dec
lods
out
adc
jg
rcrl
pop
out
and
adc
xor
lcall
push
data16
enter
arpl
adc
cmpsb
or
notl
sti
or
sub
pop
jecxz
inc
aas
xlat
repnz
lcall
dec
rclb
jno
outsb
jns
inc
repz
es
nopl
popa
daa
fnop
xor
xchg
jmp
xchg
pop
pushf
jmp
cmp
int3
sub
mov
aas
sahf
in
insl
and
lret
fincstp
aad
je
aam
mov
and
mov
push
fsubrp
sub
push
movsb
cwtl
jae
add
cmpsl
mov
imull
or
lret
mov
jmp
mov
ss
adc
sbb
push
loope
es
ret
pop
fcoms
cld
and
imul
in
and
jle
mov
fiaddl
inc
adc
repnz
es
fs
dec
pop
push
lods
mov
or
lcall
inc
ret
clc
mov
pop
push
inc
mov
pop
into
sub
lock
leave
aas
cld
push
push
adc
call
test
inc
dec
and
aam
and
xlat
popa
or
cmp
jecxz
mov
push
inc
dec
mov
mov
rolb
repz
jo
iret
nop
repz
xorb
cmc
push
inc
xor
or
jns
push
loop
cli
mov
mov
inc
lods
test
lock
fldcw
dec
mov
and
and
lock
fmul
lods
out
add
mov
and
mov
aad
mov
or
addl
andl
andb
mov
and
xchg
pop
mov
pop
fmuls
les
add
cmp
mov
das
ret
imul
enter
leave
fsub
xor
insl
sbb
call
xor
sti
scas
xor
or
pop
fiadds
loop
in
and
xchg
jb
popa
sub
mov
adc
mov
aaa
int3
ja
jp
or
cs
mov
dec
cmp
jp
sti
add
dec
outsb
push
lods
sub
sbb
push
jge
dec
ret
and
ds
xor
sti
jnp
inc
and
fsubrs
xchg
xlat
sub
jnp
and
adc
call
rol
lret
sub
out
loope
lahf
mov
pop
lock
mov
enter
cmpsb
in
data16
in
ljmp
xchg
sbb
add
or
jbe
sti
sbb
aad
pop
je
dec
fdiv
insl
lds
fstpl
outsl
mov
adc
xchg
fnstsw
ss
dec
dec
xlat
out
lods
add
mov
dec
das
out
mov
sarl
ljmp
cwtl
inc
imul
int3
fmul
movsl
sahf
mov
mov
rcll
and
movsl
mov
sbb
je
cmp
jecxz
pop
sbb
jmp
cmp
xlat
cs
test
cmp
mov
lcall
aam
xchg
into
push
shrb
outsb
push
add
in
adc
inc
pop
ss
xchg
push
sbb
xchg
orl
lock
pop
in
add
xchg
adc
fmull
jne
lds
out
dec
mov
stc
cmpsb
das
cmp
cltd
xchg
pop
into
push
inc
mov
add
outsl
sbb
repz
or
dec
mov
leave
test
mov
mov
imul
ret
cwtl
aam
push
jmp
shlb
sbb
arpl
cld
call
lretw
dec
lahf
aam
xor
mov
push
das
inc
sub
xchg
pop
test
mov
or
jge
cltd
or
add
and
cltd
or
jb
pusha
nop
jnp
cmp
int3
cmp
pop
test
mov
hlt
xorl
push
testb
pop
sahf
pop
sub
mov
xchg
lahf
movsl
cld
add
pop
fcmovne
ja
imul
mov
inc
stos
xorl
or
cmp
cmp
into
fnstsw
lods
fwait
dec
lods
ret
dec
mov
pop
fsubr
jnp
std
icebp
push
sar
jnp
das
jnp
out
or
push
repnz
cmp
push
dec
nop
test
fdivr
and
xchg
dec
subb
imul
sbb
lods
mov
push
movsl
dec
dec
aam
popa
lcall
in
mov
imul
fs
insl
fcoml
sbbl
rol
adc
sbb
or
sarl
push
pop
xor
xor
test
pop
inc
xchg
dec
mov
aas
and
xor
pop
sarl
and
add
call
or
jne
shll
cld
cmp
imul
cmc
mulb
cmpsl
stc
mov
lcall
or
test
mov
xchg
push
inc
xlat
xchg
aad
jmp
call
and
aad
sahf
jnp
cmp
aam
arpl
and
roll
and
inc
push
jne
cli
ret
jl
jg
xor
movsb
adcl
xor
xor
push
jge
enter
stos
add
into
rorb
push
orb
ffree
stos
out
int
lds
cmc
outsl
fbstp
xchg
popa
mov
cmp
pusha
mov
xorl
jle
mov
dec
mov
in
popf
lahf
push
push
inc
jnp
sub
out
and
pop
std
aam
jmp
jl
xor
pusha
jle
sbb
push
pop
dec
cli
mov
test
add
insl
test
dec
in
pop
or
jb
sti
fnsave
mov
mov
scas
aad
sub
push
mov
lahf
jecxz
cmp
add
push
sub
icebp
push
inc
mov
movl
stc
cmp
cmpsl
xchg
pop
push
xchg
inc
pop
xchg
mov
icebp
xchg
enter
push
cmp
or
xor
add
aaa
or
stos
sbb
rclb
out
add
mov
rclb
sar
adc
cmp
je
push
pushf
jecxz
pop
and
unpcklps
call
je
mov
popf
icebp
mov
cmp
pushf
xchg
iret
mov
mov
daa
cmc
gs
mov
sti
jnp
mov
lcall
adc
xor
insb
arpl
in
jae
fadds
pop
cwtl
dec
hlt
popa
ret
in
jp
mov
mov
mov
sbb
leave
test
sub
fstpt
inc
jecxz
out
sub
xlat
cmp
test
pop
push
dec
push
mov
cmp
fcmovu
add
popl
adc
bound
loope
jne
cmp
lock
xor
jge
xchg
loopne
fmuls
jae
loop
arpl
decl
imul
out
pop
pop
notl
sahf
fs
ss
mov
adc
push
mov
jecxz
push
in
aas
mov
mov
sbb
orl
or
pushf
movsb
push
add
or
xchg
cmc
adc
js
jle
ds
enter
outsl
mov
daa
xlat
pop
inc
fstpt
jne
adc
lea
sahf
adc
movsb
adcl
je
int
jne
ds
cmpsl
enter
mov
test
movsl
jge
inc
jecxz
inc
inc
fidivrs
jmp
cmpsb
cltd
adc
es
push
xorb
sub
in
int3
add
add
int
mov
push
mov
xchg
loope
inc
dec
pop
fdivrs
fwait
stc
xorl
stos
addr16
pop
mov
out
into
pop
push
mov
cmpsb
cmp
pop
dec
push
mov
lahf
mov
inc
xchg
xchg
ficomps
mov
cli
mov
jno
test
pop
push
lret
test
js
inc
inc
pop
outsb
aas
sub
sub
stos
stos
jns
ds
mov
push
push
insl
mov
mov
pop
lahf
mov
jmp
shl
adc
add
je
movsl
xchg
mov
xchg
mov
jecxz
jno
inc
rclb
adc
notb
fwait
xchg
mov
and
xchg
ret
pop
and
mov
sub
aam
in
push
mov
rcrb
pop
insl
insl
xchg
out
mov
fsubrs
cmp
insb
fimuls
sub
int3
jo
pop
sub
cmc
push
fwait
out
in
sub
imul
fsubl
fadd
rcrl
add
in
jmp
lods
in
ret
ljmp
int
xor
cmc
cli
add
jns
xchg
movsl
sbb
sbb
jge
add
mov
or
sbbb
imul
aad
sbb
xchg
clc
jno
test
inc
adcb
xchg
jbe
stc
lahf
out
pushf
pushf
pop
insl
sbb
inc
dec
lods
adc
and
ljmp
mov
leave
aaa
lock
sub
stos
outsb
pop
scas
rcrl
test
push
jno
mov
jmp
inc
sub
push
mov
cwtl
icebp
subl
dec
cli
or
inc
xor
outsb
cwtl
mov
fs
pop
cwtl
push
cmp
and
sbb
cmp
jno
out
add
in
jns
or
mov
out
arpl
cld
sub
sbb
jecxz
xor
sub
stc
lods
jg
and
les
push
mov
sbb
mov
jne
lahf
dec
rcll
xchg
push
pop
mov
rorb
popa
push
lods
rcrl
mov
shll
adc
dec
cs
push
in
adc
mov
cld
mov
xchg
cld
push
sub
sub
push
movsb
dec
mov
ficomps
or
mov
jg
inc
orb
jne
fwait
aam
xchg
rorb
fcmovb
bound
dec
movsb
rclb
mov
sarb
insb
cmp
movsl
adc
cmp
jp
xchg
lock
std
or
xchg
cmp
add
int3
orb
outsw
fs
mov
pop
cmp
jno
fisubrs
adc
es
test
xor
cli
loope
clc
les
rol
or
sub
and
lods
xor
push
cmpsb
insb
pop
xor
sbb
mov
sub
mov
mov
repz
xchg
dec
mov
xchg
pop
inc
dec
inc
add
xchg
int3
leave
loopne
mov
jge
dec
sub
adc
insl
mov
cmp
scas
lods
movsl
jae
rcl
sti
iret
scas
push
fiaddl
or
das
mov
mov
mov
data16
jno
jae
fs
arpl
popf
sbb
rcl
lods
pop
mov
add
jo
mov
dec
mov
pop
or
sbb
decl
bound
sbb
or
push
shr
adc
xchg
incl
dec
stos
mov
xchg
inc
cltd
adc
fisttpll
andb
dec
mov
ret
inc
jmp
lods
lret
xor
clc
dec
std
enter
or
inc
ja
dec
nop
fcmovnu
inc
dec
jne
imull
clc
push
and
hlt
sub
dec
cmpsl
cmc
js
xlat
pop
test
mov
daa
sarl
sti
mov
dec
inc
loop
inc
subl
lea
or
jp
movsl
push
bound
pop
mov
in
rol
push
jbe
adc
add
cmp
cli
sbb
fsubrp
jle
or
ret
lahf
stc
mov
or
and
jbe
xor
ds
test
dec
sbb
xchg
and
jmp
mov
push
dec
mov
push
ret
jp
sub
inc
jl
sbb
mov
xor
sbb
cmp
xor
mov
int
outsb
imul
test
sub
xchg
test
insb
repz
cmp
les
mov
cmp
and
jb
movsl
clc
sbb
testl
in
xor
out
mov
mov
pop
xchg
cmp
loope
cmc
cltd
cltd
xchg
xor
pop
push
in
dec
lret
jns
xor
jge
sub
lcall
cmc
fstpl
jae
int3
pop
out
test
fsubrs
cli
mov
inc
lock
xlat
aaa
les
sbb
xchg
dec
lret
mov
or
xchg
mov
mov
call
xor
into
xor
fwait
push
fucomp
pusha
jge
orb
cmp
out
roll
dec
xchg
movsb
in
and
jecxz
in
inc
jb
jne
imul
jno
inc
inc
xor
jle
scas
lods
cmp
mov
dec
test
adc
int3
loope
pop
lcall
rol
imulb
movsl
orb
adc
sub
sahf
lret
fwait
inc
mov
in
mov
cmpsl
push
mov
lods
clc
pop
in
imul
popf
cltd
mov
inc
cwtl
out
and
mov
rorb
loope
sbb
int
sub
loope
addr16
mov
lock
cmpsb
jecxz
cs
or
loop
inc
pop
or
in
jnp
in
cmp
popf
pop
mov
lcall
ret
xchg
sbb
mov
lahf
xchg
test
sbb
mov
imul
imul
movsl
xchg
in
cmp
xchg
nop
mov
decb
orb
lods
out
and
mov
mov
bound
mov
adc
pop
mov
imul
mov
outsb
arpl
xor
jmp
iret
shll
mov
int
xor
dec
cmp
mov
dec
cmpsl
repz
push
into
lods
mov
std
pop
and
inc
mov
add
popf
sbb
clc
enter
loop
xchg
cmp
dec
lcall
push
xor
addr16
dec
fs
popa
push
cmp
rcrl
cmp
sub
ja
inc
lret
incb
inc
push
movsb
mov
sub
and
sub
test
testb
fbstp
ljmp
mov
fidivl
mov
inc
inc
push
pop
and
sbb
movsb
and
mov
jl
jle
mov
mov
pop
mov
sub
adc
pop
negl
and
enter
iret
pusha
stos
rcr
inc
xchg
push
scas
xor
das
and
mov
push
loopne
pop
hlt
xor
fcmovu
push
cmp
out
pop
push
pop
out
movsl
sub
lret
push
pushf
xor
pop
outsl
mov
dec
add
popf
mov
push
call
ficompl
xor
push
shl
lock
scas
jecxz
js
xchg
cwtl
stos
xor
ljmp
cmp
pop
jge
sbb
inc
fstp
pop
cmpsb
loopne
mov
fs
and
mov
or
js
inc
pop
movsl
xchg
dec
gs
cmc
adc
jne
cmpb
int
dec
mov
mov
in
lds
jle
lcall
jmp
pusha
jmp
fiadds
and
fs
ret
pop
movsl
lret
xchg
xchg
sub
pop
insl
iret
inc
push
xchg
fnstenv
fisubrs
mov
jnp
mov
shl
jge
out
popa
xor
loop
insb
push
sarb
cmp
sbb
and
fwait
push
add
cltd
xor
call
push
adc
les
imul
sarb
jle
xchg
add
mov
js
jo
mov
pushf
mov
xchg
jp
cmp
sub
out
inc
sub
sti
in
into
push
data16
cmpsb
in
cmpsl
push
fstpl
popf
cmp
push
fwait
adc
loopne
xor
xchg
inc
int
test
lcall
enter
cli
movsl
mov
inc
repnz
lret
xor
rcrl
loope
cmp
cmp
jg
sti
imul
dec
aas
mov
nop
insl
mov
arpl
arpl
mov
sbb
pop
mov
fs
sub
push
inc
jo
or
hlt
mov
cli
pop
ret
push
add
test
adc
mov
fcmovb
and
int
sahf
jle
or
enter
push
adc
inc
lcall
mov
cwtl
mov
cmp
pop
aas
ror
loopne
stos
adc
and
enter
and
jo
arpl
lcall
push
cmp
push
xchg
jg
adc
xchg
mov
dec
and
scas
test
jmp
and
gs
repnz
leave
and
cmc
iret
or
pop
mov
inc
mov
jecxz
aaa
push
mov
xlat
and
fs
push
dec
inc
cltd
mov
cmp
test
jo
dec
popf
imul
jbe
push
cmc
iret
mov
subps
sahf
lods
push
add
notl
adc
test
fldenv
mov
pusha
cld
push
dec
mov
pop
push
push
icebp
cmp
mov
test
stc
dec
jo
push
insb
cmp
movsl
push
aam
adc
scas
mov
dec
or
mov
add
out
clc
cmp
mov
jbe
mov
jb
sub
add
sbb
jl
mov
cmp
jno
dec
sbb
popa
adc
insl
es
adc
in
adc
int
adc
lods
and
pop
cmp
dec
psubusb
pushf
aaa
sbb
sbb
mov
movsb
or
adc
xor
leave
sbb
adc
jnp
outsb
push
cmp
push
data16
lcall
mov
jae
bnd
push
cli
push
sub
cli
cwtl
pop
movsl
aad
add
xor
inc
mov
loopne
or
cmpsb
fs
cmp
in
inc
jle
push
xor
mov
inc
pushf
xchg
jmp
clc
jg
scas
or
dec
mov
jecxz
loope
outsl
add
fdivp
jmp
testb
mov
jle
in
pop
bound
fnstsw
xchg
loope
leave
xor
lret
and
xlat
repz
imul
sbb
xor
outsb
jo
and
sub
add
mov
nop
lea
ss
mov
iret
cmp
jo
push
mov
or
adc
insb
mov
adcb
cmp
sub
into
mov
xchg
cmpsb
dec
mov
push
inc
mov
pop
or
int
fwait
jl
addr16
inc
test
or
xchg
push
aas
push
inc
mov
sub
add
into
jl
fsubp
les
int
dec
cmp
xchg
test
loop
lods
mov
mov
fs
mov
int
pop
and
cmp
test
aaa
mov
into
orl
push
cmp
xchg
sbb
cwtl
nop
pop
mov
adc
and
dec
pop
test
out
es
fdivl
cli
or
cmpsb
or
addr16
movsl
ret
xor
repz
ds
xchg
xchg
movsb
and
mov
cmc
or
inc
pop
stos
repz
stc
xor
pop
fbld
fs
mov
arpl
jp
lea
mov
push
adc
call
jns
or
andb
jl
jns
daa
or
dec
daa
mov
xor
jecxz
jno
hlt
cld
ss
enter
inc
nop
xchg
jl
idivl
mov
aam
js
xchg
fimull
pop
jmp
ljmp
sbb
outsb
out
sub
mov
mov
arpl
jl
fsub
lods
or
sti
push
or
lahf
xchg
loopne
mov
fidivrs
xchg
rcll
jb
aas
mov
ret
outsl
sti
aad
xchg
pusha
insb
push
movsb
data16
push
out
cmp
cld
mov
and
les
hlt
xchg
jo
and
mov
gs
js
mov
data16
xchg
mov
jb
and
rorb
bound
call
xor
scas
xchg
in
pop
ljmp
leave
idivl
ljmp
movsl
pop
test
sbb
xor
jne
push
jg
mov
xchg
xchg
cmp
mov
aas
aam
jnp
scas
in
imul
aaa
jo
pop
xchg
repz
adc
lods
rcr
cwtl
lea
xchg
loop
mov
mov
push
xchg
adc
mov
shll
jns
outsl
mov
negb
imul
pop
pushf
test
popa
mov
lods
das
fisttpl
pop
jle
stos
jg
ret
mov
stos
les
into
adc
pop
nop
mov
mov
sahf
ljmp
les
shrb
imul
xchg
test
xchg
push
cli
mov
adc
rolb
jg
jno
in
lret
leave
lcall
cmp
mov
scas
jecxz
mov
push
fisttpll
cltd
mov
pop
iret
mov
aam
fiaddl
out
lret
rolb
gs
jle
pop
enter
and
cmp
add
shl
fst
jg
lock
leave
push
pop
int3
pop
cmp
jne
push
add
inc
mov
movsl
lea
add
aam
ds
stc
inc
sti
mov
pop
add
xchg
pop
loop
add
sub
lea
xlat
xchg
pop
adc
or
jne
inc
pop
pop
pop
xchg
shrl
ret
testb
imul
outsl
into
lods
shr
adc
sbb
fstps
pusha
mov
cmpsl
movsl
dec
test
insl
lea
clc
mov
inc
mov
imul
or
or
outsb
shlb
aas
add
pop
jns
push
lcall
push
sbb
std
and
jb
add
inc
push
jle
push
jecxz
lods
dec
std
adc
sbb
loop
jmp
adc
mov
mov
sbb
imul
ljmp
dec
cmpsb
mov
cmpl
in
inc
popf
cwtl
mov
mov
jo
jbe
jl
popf
jmp
movsb
imul
pop
jns
iret
pop
or
pusha
sub
jmp
pushf
int
mov
adc
pop
dec
imul
shlb
fwait
push
out
mov
addl
stc
insl
jg
inc
mov
jne
insl
bound
push
pop
outsl
xchg
jmp
iret
xchg
ds
mov
decl
and
dec
fisubrl
xlat
in
fisubrs
loop
repnz
sub
fimuls
mull
sbb
or
movsl
or
mov
cmp
sarb
sbb
fcomps
jmp
dec
mov
arpl
pop
loopne
mov
mov
in
pusha
pop
cmp
or
decl
flds
lret
aad
stc
daa
jnp
or
add
xor
int
hlt
dec
leave
mov
add
movsb
mov
dec
call
imul
shll
shl
mov
push
leavew
adc
mov
push
and
xchg
add
ret
sbb
js
xor
loopne
decb
add
test
cmc
ret
aaa
and
outsb
push
aas
or
jl
lcall
xchg
scas
movsb
add
and
pop
pusha
cmc
aas
pop
sbb
mov
outsl
xor
cmp
jo
ljmp
addl
jo
leave
mov
xchg
and
stc
lret
aad
jg
dec
movsb
lock
mov
pop
xchg
ret
andl
xor
xor
dec
dec
push
xor
sub
push
xchg
jecxz
mov
insb
fidivl
pusha
jl
lock
jae
in
sbb
das
stc
and
cltd
add
push
int3
mov
test
ret
and
aas
xor
cmp
mov
mov
mov
sbb
jb
notl
cmp
dec
insl
jo
addr16
mov
ret
push
fnstcw
mov
mov
mov
push
dec
jg
rcrl
push
nop
push
add
lods
inc
dec
mov
xchg
cmp
or
mov
in
ljmp
out
sub
mov
xorl
ljmp
cmpsl
push
fiadds
aad
aas
jg
xchg
jns
add
mov
in
movsb
dec
out
rorb
sbb
push
lret
jne
and
jp
xor
mov
push
and
sbb
cmp
mov
int
arpl
mov
lods
aam
ds
ljmp
xchg
add
and
cmp
lret
inc
mov
mov
jl
xor
outsb
sbb
inc
das
and
push
sbb
push
pop
sbb
inc
enter
insl
aas
push
inc
addr16
pop
cmp
sarb
mov
repz
mov
add
sahf
pop
in
and
or
mov
scas
jge
xchg
adc
bound
sbb
pop
cld
push
lret
dec
cmp
pop
pop
sub
sarb
lods
jl
int3
std
mov
push
rcll
cltd
popa
add
rcr
pop
mov
sbb
stos
jl
push
cwtl
jle
int3
cli
pop
mov
daa
or
cmp
into
xor
in
xchg
daa
mov
dec
adc
cmp
shlb
push
shlb
dec
adc
popa
clc
adc
push
mov
popf
xor
cmp
jnp
stc
imul
repz
sbb
jge
loope
jmp
shl
inc
cmpsb
scas
ja
into
cmpsl
fidivrl
or
inc
or
pop
jno
xor
call
aad
lods
sahf
int
icebp
sub
in
jae
xor
cltd
stos
mov
cmp
push
out
xchg
mov
or
jb
inc
mov
fs
arpl
imul
dec
mov
rorl
adcl
rcrb
sbb
mov
push
insb
sub
xchg
stos
stc
notl
pop
and
xor
push
mov
rcll
jg
ret
inc
ds
jbe
push
dec
push
hlt
dec
pushf
mov
mov
add
cmp
adc
cltd
popa
addb
mov
adc
iret
mov
fcompl
adc
xlat
mov
push
mov
out
fnsave
orb
dec
cmc
enter
mov
adc
dec
dec
xchg
jo,pt
outsl
and
jo
and
gs
outsl
mov
dec
loopne
inc
lds
pop
mov
xchg
insl
outsb
shlb
sub
jle
aam
mov
sahf
stc
cmpsb
test
ja
jl
loopne
pop
xor
xchg
cmp
dec
jl
adc
enter
fidivrs
jmp
inc
leave
mov
inc
rclb
mov
xchg
mov
ja
movzwl
inc
popf
sbb
clc
mov
pop
test
adc
in
hlt
mov
ret
nop
iret
add
fistps
and
sub
adc
push
inc
dec
scas
mov
push
aas
push
lds
inc
frstor
push
lods
in
lret
mov
fdivrl
bound
arpl
add
sub
sti
or
js
cmp
inc
dec
addr16
inc
mov
cld
pushw
push
dec
mov
fcmovnu
add
cmp
and
stos
jbe
push
xchg
mov
bound
push
or
cltd
mov
cmp
pop
mov
add
imul
lea
daa
mov
and
cwtl
push
pop
out
jo
xchg
pop
mov
fs
aam
lret
mov
xor
popf
xlat
cmp
adc
enter
mov
sbb
lods
pop
xchg
nop
insl
popa
ss
sub
jg
cmpl
lret
insb
jb
sub
pop
cmpsl
push
cmp
jecxz
sbb
rorb
pop
mov
push
jmp
add
adc
out
dec
cmp
loopne
add
ljmp
dec
sbb
ficoms
mov
lock
sub
pop
subl
jp
push
movsl
jp
dec
popa
cmp
dec
jge
sub
push
pop
in
jne
dec
fwait
jo
lea
mov
rcrl
lds
rcll
cmpsb
sbb
cmp
xchg
cs
movsb
std
jle
fimuls
cld
popf
fldcw
dec
push
and
in
or
sub
dec
mov
and
fcmovnbe
aad
popf
mov
ret
pop
ret
push
pusha
loop
movb
nop
fldt
push
xchg
jo
adc
push
add
stc
fsubs
xchg
jo
bound
popf
mov
push
jne
or
lahf
push
pop
mov
js
jo
push
pop
sbb
xor
sbb
lret
push
push
cmc
int
mov
jl
mov
adc
dec
fsubr
sub
jns
int
dec
xchg
cmpl
cmp
push
or
rolb
insb
xor
jmp
or
es
mov
sub
add
int
lods
stos
xor
insb
mov
mov
push
popa
shlb
jmp
out
ret
cmp
mov
mov
pop
xor
dec
fstl
ljmp
imulb
jecxz
or
lds
out
inc
jb
nop
sub
iret
xor
enter
and
jg
push
insl
xchg
lods
inc
ja
cmp
inc
and
mov
out
in
push
sub
not
lods
ret
scas
cld
adc
js
int
inc
test
ret
adc
jg
or
and
and
lcall
scas
movsl
push
fwait
loopne
movsb
out
mov
scas
mov
push
mov
mov
xor
push
xor
push
mov
mov
out
sub
mov
push
xor
pop
movsb
cmpsb
sub
stos
or
adc
dec
xchg
mov
xor
dec
nop
jle
push
ljmp
outsl
pop
jbe
jmp
lods
cmp
mov
cmc
movsl
dec
mov
mov
or
xchg
sbb
shll
xor
inc
lea
mov
out
jne
jne
mov
jne
adc
outsb
fsubrl
je
cltd
push
sub
ds
je
mov
push
adc
lds
inc
add
scas
das
lds
xchg
adc
mov
rol
mov
dec
rclb
test
lock
jl
std
mov
add
add
testb
in
call
inc
mov
xchg
adc
xchg
adc
das
mov
and
mov
push
insb
push
sbb
push
xor
push
cmpsb
pop
call
and
nop
xlat
inc
in
push
ja
mov
pushf
lds
xchg
pop
mov
inc
sub
xor
movsb
add
cmp
fimuls
mov
insb
fstsw
mov
out
fildll
adc
mull
psubusw
xor
sub
adc
xchg
xchg
xchg
push
arpl
or
jecxz
adc
clc
mov
lock
pop
push
sbb
insb
cld
gs
and
clc
and
xchg
and
daa
lods
adc
aad
mov
sahf
ss
ficoms
arpl
sbb
in
jns
cli
and
pop
dec
ja
call
adc
arpl
sti
pop
xor
js
adc
bound
sbb
sahf
mov
hlt
and
xor
lea
add
aas
lret
por
cld
in
mov
outsl
dec
sbb
jecxz
sbb
ret
aam
mov
jne
int
cwtl
cltd
cli
icebp
or
rolb
andb
rorl
aam
xor
mov
add
jmp
insl
outsl
pop
insl
cmp
dec
adc
xor
cmp
or
daa
mov
pop
inc
sbb
mov
xor
inc
jmp
ds
imul
imul
mov
leave
xchg
xor
lahf
clc
adc
stos
loope
repz
cld
call
test
out
jge
xchg
mov
lds
arpl
pop
and
xor
idiv
pop
pop
xchg
xor
mov
fidivrs
rcl
js
mov
mov
mov
lods
subb
je
imul
sbb
jnp
adc
mov
ljmp
mov
push
push
das
lahf
mov
es
outsb
or
jge
sub
stc
clc
push
mov
js
cmp
jmp
mov
sarb
cmp
cmp
xchg
or
pop
xchg
scas
lret
imul
mov
mov
add
and
sbb
xchg
inc
add
adc
stos
jns
jecxz
leave
jl
mov
mov
dec
push
mov
iret
inc
mulb
test
mov
jmp
sbb
cmp
sub
xchg
call
hlt
shll
adc
xor
sbb
ljmp
mov
mov
mov
out
lret
push
add
and
imul
sub
xchg
add
mov
jg
fdivl
jnp
cmp
add
movsb
fwait
add
mov
int3
mov
mov
xchg
xor
inc
xor
jne
push
mov
xchg
dec
imul
out
stos
sahf
sar
pop
enter
cmp
jno
cmp
stos
pop
sub
inc
scas
inc
js
arpl
das
add
adc
mov
push
xchg
inc
jb
stos
stos
mov
stc
movsl
mov
push
ret
add
sbbl
push
int3
add
cmovp
sbb
pop
pop
mov
test
loop
cmpsb
adc
stc
mov
pop
out
insl
es
jp
gs
cmp
jne
lods
leave
mov
clc
pop
or
test
xlat
aad
loope
icebp
lds
stc
fwait
cmp
std
push
cmp
mov
aad
rorl
fsubs
je
mov
cmp
leave
or
out
jne
xchg
sub
pop
sub
cmp
xchg
jecxz
mull
xlat
pop
mov
cmp
inc
int
inc
push
lret
mov
inc
mov
and
das
xchg
sbbl
inc
daa
push
jl
adc
shlb
repz
push
lods
mov
xchg
sbb
xchg
jns
inc
sub
xchg
daa
es
or
jns
and
mov
push
mov
cmpsb
xor
cmp
pop
lahf
std
jge
fsubl
fnsave
sahf
mul
lcall
push
dec
scas
xchg
pushf
push
iret
rolb
aas
stos
pushf
es
push
mov
or
imul
in
fbstp
loop
das
test
cmp
repz
mov
xchg
fistpll
test
gs
jbe
shlb
xor
insl
mov
pop
lret
dec
rcl
cld
out
add
jbe
cmc
xchg
push
jae
leave
xchg
cmp
xchg
or
das
dec
push
mov
sub
pop
lahf
shlb
arpl
adc
test
sbb
mov
lock
or
sbb
fdivrp
dec
mov
xchg
add
ja
insb
and
cmp
and
cmc
mov
imul
mov
mul
fcoms
push
mov
sbbl
mov
dec
lahf
add
or
adc
lods
and
dec
cmpsl
push
aam
mov
and
xchg
lods
mov
test
mov
insb
int3
xchg
sbb
adc
sub
jbe
ljmp
mov
in
iret
int3
mov
mov
fimull
xchg
stc
sahf
lock
icebp
popa
cwtl
rcrb
dec
daa
jl
jmp
mov
xchg
mov
aam
and
and
xor
stc
cmpl
xor
aam
imul
ljmp
mov
les
test
cld
mov
aad
sarb
stos
pop
icebp
cmp
ja
push
sbb
data16
xor
movswl
leave
lock
sub
mov
inc
mov
xchg
ja
jns
jbe
pop
pop
insl
lret
jbe
mov
jecxz
inc
push
push
xchg
and
push
and
insl
push
adc
xchg
xor
add
dec
mov
stc
mov
ficompl
iret
andl
add
inc
mov
push
repnz
push
or
push
loope
adc
jns
mov
add
jb
push
push
dec
std
push
dec
out
rorl
shrb
and
or
xor
cmpsl
xor
into
ja
cs
rcll
push
or
lods
cmp
jle
fnsave
pop
pop
pop
clc
aas
stos
leave
push
lods
sahf
sbb
sub
cmpsb
adc
aas
mov
cmp
loopne
mov
pusha
jne
inc
push
mov
aas
frndint
ficoml
mov
cmpb
push
mov
xlat
dec
pushl
jne
lods
test
pop
sahf
mov
or
push
and
les
add
or
stc
add
popf
push
push
into
out
outsb
dec
xchg
mov
int3
sbbb
xchg
dec
or
mov
push
outsb
stos
ss
std
lret
movsb
repz
nop
sti
mov
add
mov
sbb
scas
lahf
jle
sub
mov
inc
push
jg
jnp
test
add
into
adc
xchg
and
push
faddp
data16
lock
aaa
fwait
int3
dec
loope
jbe
mov
push
ss
cli
push
lock
add
out
pop
cwtl
mov
adc
push
insb
inc
fs
inc
rol
or
pop
stos
or
insb
sub
jae
popa
inc
jbe
inc
mov
inc
rcll
andps
jmp
sarl
imul
aam
add
sub
pusha
les
mov
mov
mov
int3
jbe
lods
test
xlat
xchg
mov
or
and
jg
add
mov
scas
ss
xchg
mull
das
mov
mov
je
add
out
cs
cmp
xor
insl
pop
and
insl
jle
pop
addr16
and
fwait
mov
xchg
push
mov
lea
shrl
adc
loop
sbb
daa
dec
jbe
std
mov
jae
mov
xor
inc
add
mov
nop
leave
negl
dec
dec
enter
jb
mov
sarl
sub
mov
adc
fdivrs
mov
mov
sti
ss
adc
inc
push
add
mov
ds
jmp
repz
and
cwtl
push
xchg
adc
enter
pop
sub
loopne
into
sbb
hlt
fwait
jbe
inc
and
sbb
sbb
dec
ret
pop
mov
pop
insb
lods
stos
add
addb
push
inc
inc
jo
or
outsl
push
arpl
loop
sbb
ret
popa
and
dec
xchg
mov
fldl
xchg
idivl
jo
cltd
or
lods
ficoms
sub
pop
bound
data16
xchg
or
jecxz
bound
xor
outsb
fisubl
popa
fcoms
pop
push
jae
es
cltd
decb
mov
sub
cmp
push
fwait
jo
add
mov
aam
push
fs
movsb
fldcw
lret
aad
cmp
inc
out
jg
sub
sub
or
fildl
xor
arpl
xchg
add
leave
fists
sbb
outsb
inc
enter
cli
mov
or
fwait
xlat
pop
xorb
push
xor
xor
jmp
xchg
cmp
lock
loop
mov
push
shrb
add
sti
loop
xchg
cltd
jbe
push
inc
out
lcall
lahf
push
rcll
pop
mov
shlb
push
int
lods
mov
sbb
mov
aaa
jle
cmp
dec
xchg
dec
icebp
inc
es
leave
lods
sbb
loope
aas
lds
in
inc
adc
or
es
sbb
push
jns
call
js
cmp
mov
xchg
aaa
xor
lahf
mov
dec
test
sub
movsl
sbb
pop
jb
mov
inc
cltd
dec
daa
jg
jno
inc
xchg
lret
xor
and
imul
in
sahf
loopne
out
ffree
and
mov
lret
testl
lods
inc
add
cmp
xchg
mov
pop
scas
xchg
sbb
inc
cmp
lret
xor
xlat
icebp
adc
push
sub
insb
outsb
or
mov
xchg
mov
inc
inc
add
inc
add
push
outsb
sub
add
cmp
cmp
mov
ja
loop
pop
aam
add
mov
sbbb
leave
ja
cmp
daa
out
repnz
xchg
hlt
in
addl
daa
repz
shlb
das
mov
and
adc
mov
sbb
enter
cmp
and
mov
mov
into
stos
jo
in
xchg
fstl
jo
sub
add
pusha
icebp
sbb
ljmp
xchg
xor
cli
sub
xor
cmp
xchg
jnp
lds
mov
mov
test
adc
nop
sarl
sbb
or
mov
in
in
shlb
xor
cmp
jp
scas
les
adc
je
adc
or
jbe
xchg
stc
and
movb
adc
mov
inc
xor
je
cwtl
mov
aas
test
push
std
stc
xor
push
shlb
out
cmpsb
repz
imul
cmp
adc
and
cmp
push
sahf
push
cmc
lret
cmp
dec
lcall
std
sbb
inc
push
inc
fisubrl
hlt
xchg
pop
dec
imul
lods
cwtl
or
ret
outsb
and
mov
subl
sub
out
push
pushf
hlt
or
loope
mov
push
in
andb
jne
and
dec
lahf
or
xchg
ljmp
leave
jae
ljmp
mov
out
lcall
adc
stos
or
lret
inc
xor
cmp
mov
mov
xchg
das
test
xor
xchg
aas
rorb
push
outsl
ret
std
addl
add
popf
sbb
mov
test
pop
and
shlb
xchg
sub
dec
sarb
sub
icebp
leave
cmp
inc
test
mov
jbe
add
push
xchg
movsl
mov
int
gs
not
inc
xchg
dec
imulb
pop
outsb
mov
js
or
mov
jecxz
xor
inc
pop
data16
pop
ljmp
es
insl
outsb
pusha
sub
ret
stos
push
xchg
gs
decb
popf
lahf
pop
add
adc
sbb
test
xchg
hlt
cli
or
jl
mov
mov
jmp
sbb
mov
inc
stos
lahf
cmpsb
insb
inc
pcmpeqd
jo
sub
fimull
outsl
mov
fnstenv
or
clc
out
inc
or
or
imul
popf
loope
sbb
xchg
mov
fwait
mov
lock
das
in
mov
jno
shl
ret
add
cmp
adc
mov
in
jbe
cmc
jns
mov
nop
push
mov
and
push
xchg
cmp
loope
add
pop
ds
jno
std
cmpsb
insl
stos
jno
add
inc
in
pop
jp
out
leave
addr16
inc
lea
in
stc
rcrl
inc
add
xor
or
test
push
int
lods
into
rorb
icebp
dec
sub
or
faddl
jbe
dec
sbb
lods
aas
pop
sahf
xchg
andl
sub
addr16
push
jge
push
das
rcll
push
mov
mov
jge
xchg
pop
dec
add
pop
push
cmp
ret
clc
ret
mov
xchg
test
sub
outsb
sbb
and
pop
adcb
and
xor
sti
xchg
mov
sbb
dec
mov
pusha
les
adc
sub
jmp
push
lret
jmp
mov
stos
dec
dec
jnp
pusha
repnz
cmpsl
adc
jecxz
js
in
fxch
mulb
mov
and
ljmp
mov
inc
fs
loop
enter
fstl
movsb
out
inc
xor
push
add
int3
jp
mov
rclb
cmp
push
mov
frstor
lock
adc
mov
cmp
jp
mov
cld
pop
mov
inc
mov
shlb
test
add
imul
arpl
andb
inc
test
fwait
or
in
ret
cmc
imul
adc
nop
and
xchg
xlat
dec
and
loope
jp
ss
cmp
js
push
or
cmp
jb
mov
shlb
mov
into
jbe
pop
push
in
roll
mov
mov
pop
and
inc
fldenv
push
jecxz
adc
adc
popf
mov
scas
or
cmp
sti
sti
mov
add
popa
js
jl
idivb
add
add
cmp
sahf
test
lret
rol
push
xor
test
aas
sub
jl
sub
pop
add
loope
leave
pop
mov
mov
imul
mov
pop
jmp
inc
stc
and
je
cmp
in
lock
xor
sbb
jns
pop
imulb
rorl
add
mov
pop
hlt
xchg
jmp
xchg
in
mov
std
mov
pusha
stc
lock
xchg
into
es
das
pop
and
mov
sahf
js
clc
rolb
xor
push
pop
out
cltd
jmp
lret
test
push
xor
sahf
mov
adc
dec
xor
es
mov
fldcw
sub
or
inc
imul
adc
add
pushf
popf
in
inc
pusha
test
out
inc
xlat
sub
inc
cmpl
mov
imul
dec
cmp
or
ljmp
popf
mov
in
mov
fisttpl
pusha
iret
cmp
jl
stos
fld
and
or
adc
lahf
jne
cmpsb
rclb
adc
cmpsb
sub
mov
in
cmpsl
inc
cld
add
jne
je
repnz
inc
sub
pop
rcr
xchg
addr16
push
in
out
push
mov
test
repz
lods
pop
test
pop
sbb
sbb
test
fs
mov
mov
ss
lcall
mov
movsb
imul
test
push
lret
sbb
inc
leave
inc
cwtl
iret
out
or
ljmp
add
dec
out
stc
ja
jb
in
repnz
fadd
push
aad
lcall
pop
xchg
imul
in
clc
outsb
sub
aad
repz
lret
out
js
or
xchg
cli
jae
test
jg
push
or
dec
jl
ljmp
in
mov
inc
adc
sarl
pusha
pop
popa
out
out
divl
sbb
mov
inc
jno
pushf
pop
roll
cmp
add
rcr
ficoms
imul
jp
idivb
insb
push
dec
mov
fldt
mov
cs
dec
daa
sub
out
cltd
cmpsb
jae
and
pop
pop
daa
cmp
fimull
adcl
pop
inc
xchg
dec
inc
xor
andb
sub
aad
movb
pop
and
sub
daa
jp
xchg
push
lcall
pop
shlb
aam
mov
imul
mov
popa
mov
xor
jne
out
mov
jge
or
ret
push
and
sub
aad
jl
pop
mov
cmc
push
xchg
add
lea
mov
pushf
jmp
mov
cmp
xchg
add
adc
lcall
ds
ja
adcb
leave
stos
mov
lret
je
pop
imul
jg
into
stos
fstpl
imul
push
lret
sub
or
mov
xchg
pop
js
push
ja
in
xchg
icebp
lock
or
xor
add
dec
sbb
fstps
loope
andb
leave
lret
popf
ficompl
int3
test
adc
cmpsb
inc
mov
outsb
add
lods
pop
cld
or
fcmovnu
add
out
js
pop
popf
cmp
ljmp
or
push
add
in
repz
aad
ret
testb
adc
js
popf
xor
dec
lret
rcl
pop
push
stc
jl
push
sbb
scas
stos
inc
pop
mov
lods
inc
ljmp
sbb
es
movsb
dec
repnz
mov
fildll
push
jge
out
in
sbb
inc
loop
mov
es
mov
cli
dec
imul
cmp
mov
repz
or
pop
and
movups
imul
js
ja
add
lods
jmp
sbb
cmp
adc
mov
inc
add
int3
sub
xchg
jns
dec
push
and
mov
gs
scas
xchg
movsbl
scas
outsb
pop
sbb
add
test
aaa
sub
nop
pop
fdivs
xor
pusha
mov
inc
push
push
fs
popa
xlat
enter
int
adc
pusha
and
mov
data16
enter
in
pop
or
jge
mov
xor
add
or
out
movsb
sub
test
cmp
fadd
jae
jo
aas
inc
jmp
jg
out
stos
fdivrp
aas
xor
std
divl
pop
or
xchg
pop
adc
in
cltd
jmp
mov
mov
cli
cld
das
adc
lods
lds
addr16
or
mov
ss
dec
and
out
lret
push
and
mov
inc
push
cmp
insl
xchg
pop
sub
inc
add
sbb
adc
cmc
and
bound
cld
mov
loopne
fwait
pop
imul
adc
cwtl
mulb
mov
popa
aaa
pushf
inc
not
dec
clc
out
mov
sbb
inc
xchg
inc
in
int
inc
adc
data16
sbb
sbb
push
adc
pushf
push
pop
lods
xchg
xor
insb
popa
push
fcomi
mov
inc
fstps
sti
sub
push
sbb
mov
xor
and
dec
jg
mov
add
cltd
sahf
xchg
clc
sub
aam
sbb
sub
lds
xor
cmp
cltd
cmp
aaa
in
rol
add
pop
mov
jg
cmpsb
dec
jecxz
inc
cmp
inc
insl
or
frstor
mov
jbe,pt
mov
jmp
incl
orl
cmp
std
dec
gs
std
sbb
pop
cmp
sbb
fwait
ljmp
scas
jge
leave
ljmp
push
fimull
mov
dec
mov
dec
jns
jmp
xor
stos
aam
sub
dec
shrb
scas
jecxz
push
neg
inc
xor
nop
jne
ja
adc
sub
sbb
ds
mov
xchg
stos
sbb
and
jg
pop
insb
insb
pmovmskb
dec
fwait
std
fwait
or
and
push
xor
icebp
lcall
jge
repnz
shll
fwait
lahf
adc
dec
hlt
cli
pop
xchg
push
pushf
cvttps2pi
insl
rol
repz
jbe
stos
movsb
out
out
inc
out
xchg
push
scas
cmp
arpl
xor
hlt
jge
inc
sbb
loop
push
cmp
dec
fcoml
ret
iret
pop
out
stc
jns
and
or
push
out
mov
add
stos
scas
repnz
fistps
hlt
js
mov
cli
cs
stos
mov
dec
cmp
cmpsl
push
mov
or
sub
mov
push
jbe
dec
mov
hlt
dec
dec
les
jmp
mov
xchg
outsb
into
cld
inc
movsl
rcr
xor
cmp
data16
rcr
rcrl
cli
or
pop
ds
lcall
fldcw
jmp
scas
jb
push
test
enter
or
shl
lret
and
push
and
mov
sub
inc
jecxz
jbe
mov
ret
ss
push
mov
xchg
add
or
addr16
pop
cmp
cltd
ret
cli
icebp
rcrl
sbbb
push
cmpl
pop
das
dec
stos
dec
jb
int3
and
add
xchg
push
mov
leave
adcl
movsl
inc
int
sub
or
std
fbld
mov
scas
mov
mov
or
das
pop
call
cli
and
popf
jno
pusha
and
sbb
jb
jne
incb
mov
xor
icebp
jb
mov
mov
cmp
mov
shll
mov
pop
sub
mov
jecxz
je
insb
stos
add
cmp
xchg
js
mov
popf
add
cmpsb
sbbb
push
jl
fidivrl
mov
pusha
sub
mov
jg
into
fstpt
fwait
gs
jmp
data16
add
cli
pop
into
or
sub
out
loope
imul
adc
movsl
fdivr
pushf
fisubl
rol
add
repz
mov
movsl
test
and
test
daa
scas
cmc
cli
leave
int
addr16
cmp
loope
cmp
nop
leave
bound
push
sub
cmp
adc
das
insb
in
je
pop
sbb
xchg
or
lods
test
ljmp
add
and
jle
and
in
add
or
lea
fiaddl
shlb
loop
fldcw
sbb
in
jl
dec
cli
pushf
xor
js
push
sub
gs
sub
out
outsb
cmc
sub
and
movsb
mov
xchg
push
lods
imul
and
or
outsb
test
into
cmc
push
xlat
pop
push
ljmp
adc
sbb
jle
nop
pop
sub
add
pop
push
xchg
xor
jge
imul
pop
pusha
or
mov
iret
jae
xchg
fiadds
data16
sub
sbb
sahf
jo
icebp
push
ret
mov
xlat
xchg
loop
loope
xchg
sbb
imul
imul
mov
inc
cs
jl
jo
mov
add
pop
test
enter
mov
mov
cmp
mov
call
lods
das
imul
mov
mov
loopne
cltd
xor
fiadds
sub
lods
repz
xchg
xor
loop
push
imul
dec
xchg
add
inc
test
fistl
jne
adcl
lahf
call
sti
mov
mov
mov
push
mov
adc
std
xlat
scas
daa
or
adcb
sti
out
jmp
xchg
xor
movsl
ja
push
pop
xchg
aaa
mov
sti
mov
dec
mov
adc
repnz
cmpsl
pop
mov
mov
ja
rcr
jl
mov
outsb
mov
cwtl
push
dec
mov
add
sbb
bnd
jge
movsb
je
sbb
dec
les
jmp
call
imul
push
inc
enter
jmp
add
outsl
mov
cmp
and
sbb
aaa
xor
rcrb
and
fwait
addr16
cwtl
test
stos
int3
in
xor
orl
xchg
jns
lcall
inc
std
sub
mov
push
inc
xchg
add
movl
and
addb
cmp
lret
jo
pop
jno
jo
add
loopne
sbb
cltd
rcll
mov
scas
mov
pop
nop
cmp
rorb
mov
loopne
add
push
xor
dec
adc
and
rcr
lock
xchg
movsl
sbb
xchg
inc
sbb
push
jae
icebp
ja
sbb
test
loop
ficoml
dec
push
xor
xor
lret
imul
cmpsl
and
fwait
sbb
push
jo
sti
je
pop
mov
daa
stos
adc
jo
cmp
or
inc
push
ljmp
sbb
sbb
roll
inc
shll
mov
and
jle
int
ret
rorl
jbe
sbb
mov
int
push
or
xchg
xchg
add
and
xchg
out
lods
mov
filds
add
lds
mov
push
sti
inc
js
inc
or
lods
sbb
loopne
cmp
add
sbb
xor
aaa
add
je
rorb
es
lcall
and
ret
push
jl
inc
fildll
stos
out
cmp
rol
add
xchg
outsl
adc
bnd
mov
sub
loope
xor
mov
sbb
loope
imul
xor
jns
int
fildl
cmp
lds
cld
bswap
add
rol
dec
push
sub
stos
loop
xor
sub
idivl
jbe
add
push
fcoml
sbb
les
test
add
cmp
push
ja
mov
ror
out
mov
shlb
jnp
push
sub
jmp
roll
addr16
out
iret
loope
in
dec
ljmp
shrb
mov
mov
orb
cld
xlat
std
hlt
cld
sub
or
aaa
mov
pop
xor
out
cmp
xchg
cmp
rcll
imul
mov
mov
ror
push
mov
stos
push
adc
ds
shlb
ds
ficoms
jp
push
or
sbb
and
mov
mov
shrl
pusha
enter
inc
loopne
jne
inc
or
hlt
aaa
adc
aas
ret
inc
adc
cmpsl
adc
inc
in
lret
popf
fcoms
popa
mov
mov
dec
pop
mov
dec
mov
push
or
mov
out
inc
ja
xchg
mov
or
and
jmp
mov
push
add
mov
push
cmpsl
stc
adc
in
stos
mov
push
mov
jns
pop
test
adc
jnp
rcll
jecxz
xchg
adc
pop
push
sbb
cwtl
xchg
xlat
push
and
pop
int
aad
mov
add
add
jg
mov
out
mov
push
daa
fimull
pop
shlb
mov
stos
sub
and
xchg
jge
sbb
cmpsb
mov
aaa
dec
ss
xor
push
mov
xchg
aas
lret
jg
daa
jbe
call
popa
or
shr
test
sub
inc
scas
aas
mov
inc
jae
fidivrl
cli
inc
cli
adc
popf
pop
daa
pop
imul
insl
nop
lock
mov
das
cli
or
pusha
cmpsb
and
adc
pop
mov
adc
xchg
mov
mov
inc
int
lods
cs
sub
xchg
sub
pop
and
mov
ret
inc
popa
and
std
leave
xor
dec
jmp
push
push
mov
test
inc
xchg
cvtpi2ps
xchg
test
xchg
cmp
push
ret
pop
adc
stos
add
paddw
out
jno
fidivrl
pop
sub
dec
outsb
inc
lods
pop
dec
xor
mov
int3
mov
cmp
insb
jmp
ljmp
adcb
mov
shl
inc
pop
dec
xchg
jmp
xor
out
mov
leave
add
in
mov
leave
jb
pushf
mov
int
jno
loope
ljmp
ret
lods
mov
xchg
bnd
mov
repz
and
in
cmp
fiaddl
push
mov
loop
jno
lods
or
xchg
cmp
lea
push
cmp
pushf
cmpsl
mov
sub
outsl
shll
int
xchg
xchg
into
std
push
mov
push
aas
out
ret
mov
and
dec
in
insb
mov
add
lea
pop
sub
ret
push
dec
push
jmp
dec
dec
jae
dec
inc
mov
lods
push
int3
mov
adc
add
pop
scas
mov
lods
movsb
cltd
dec
pushf
enter
inc
push
or
or
rorl
imul
mov
out
dec
lcall
dec
mov
pushf
mov
add
mov
rorl
lret
fdivrl
add
ja
push
call
pusha
xor
fldt
cmpsl
pusha
add
fadd
aam
out
daa
cld
mov
xchg
mov
iret
mov
out
xor
in
clc
push
imul
mov
aas
jecxz
aaa
mov
xchg
inc
js
dec
into
shll
pushf
push
pop
xor
sbb
stos
jbe
stos
movsl
add
add
cld
sub
fstl
or
int
mov
incl
inc
sbb
pop
sub
push
ljmp
addr16
std
push
int3
mov
dec
pop
mov
sahf
cmc
xor
inc
pop
into
outsb
xlat
xchg
mov
cmpsb
mov
inc
pop
push
add
test
scas
adc
lcall
mov
jae
xchg
push
pop
out
pop
js
mov
in
sbbl
ljmp
pop
push
push
xlat
leave
adc
jmp
or
xchg
jo
outsl
pop
cld
sub
and
mov
cmp
and
push
ret
pop
push
imul
jo
jg
in
dec
add
inc
in
cmpsb
int3
ss
fistps
jne
adc
mov
jp
adc
mov
xor
test
and
push
shlb
inc
add
add
shl
pop
scas
cltd
xor
adc
out
mov
push
sbb
lcall
xchg
clc
push
scas
pop
mov
jo
daa
jb
jbe
adc
add
repz
div
mov
pop
cmp
pop
fwait
clc
lret
push
ljmp
lods
imul
outsb
ficomps
aaa
mov
out
int3
and
mov
mov
cmc
and
sahf
mov
jns
cwtl
cmp
jbe
cld
test
out
cmp
pop
mov
lock
sti
add
out
add
inc
push
cmpl
push
jecxz
or
int
ret
sarl
sahf
inc
subl
call
inc
xor
sarl
push
push
sbb
xchg
fmull
fcmovnu
and
lods
cmpsb
cs
int
pop
std
xchg
mov
in
adc
sbb
and
adc
jae
in
js
outsl
inc
sbb
gs
push
dec
xchg
mov
inc
sbb
out
shl
mov
dec
push
xchg
sbb
jg
dec
inc
mov
mov
add
push
std
lds
and
js
sbb
pop
in
sbb
dec
dec
cmc
push
jge
hlt
sbb
sub
push
scas
or
gs
ds
add
sbb
lods
mov
das
lock
dec
cmpsl
dec
shll
bound
cs
inc
rolb
test
xorb
pop
icebp
mov
arpl
or
add
push
cwtl
cmp
dec
aad
in
test
mov
jmp
dec
insb
cld
popa
push
mov
pop
sarb
and
or
xchg
mov
pop
pushf
add
ficomps
lock
inc
add
cmpl
lds
loope
mov
jae
fcoms
stc
cmp
push
inc
leave
rolb
sbb
push
mov
lock
jg
push
test
iret
pop
cmp
add
test
push
popf
stc
or
mov
xchg
sbb
add
pop
flds
lds
mov
dec
and
add
repnz
dec
jb
js
jl
popa
inc
push
jl
adc
cmp
add
call
sbb
cld
faddl
xchg
lret
pop
sub
data16
shl
push
push
enter
xchg
xchg
add
mov
mov
cmpsb
push
and
ljmp
shlb
mov
add
ret
bnd
inc
dec
hlt
or
cmp
ret
or
cmpsb
pop
in
push
lret
sahf
arpl
pop
stos
hlt
dec
dec
sub
or
sbb
popf
rcl
xor
xlat
mov
fcompl
inc
sbb
jg
mov
and
pop
xchg
imul
pop
lds
outsl
dec
mov
mov
out
push
dec
xor
pop
pop
cmc
insl
mov
rcll
sbb
inc
adc
adcb
scas
mov
enter
dec
dec
enter
lds
loope
sbb
bound
daa
sub
addr16
stos
loope
cmc
dec
sub
je
mov
lods
ljmp
pop
adc
and
inc
ret
shlb
sbb
mov
int
xchg
lcall
or
adc
push
fmuls
adc
cmp
shlb
lods
jg
test
std
sbb
mov
iret
add
mov
pop
adc
arpl
cld
aaa
push
xor
sub
leave
jae
cwtl
sbb
mov
inc
aaa
mov
ret
sbb
lods
scas
dec
cmc
push
and
ret
jb
ret
add
movsl
loopne
cmp
xor
pushf
movsl
sbb
jae
or
cmp
mov
sbb
adc
inc
jno
scas
das
add
xor
popa
add
scas
imul
pop
mov
punpckhbw
fsts
xlat
aaa
cltd
lock
mov
pop
xchg
mov
hlt
xor
lods
mov
cmp
lods
ds
jo
pop
mov
push
and
shll
daa
sbb
aaa
push
sbb
addb
and
pusha
add
flds
in
loope
pop
out
inc
pop
push
data16
jge
cmpb
jnp
mov
and
jp
adc
repnz
pop
ds
cmp
push
push
outsb
xor
xor
add
fs
in
jnp
pop
push
add
pusha
enter
sub
or
inc
cs
ficompl
mov
xor
dec
inc
add
pop
jbe
mov
jg
xchg
cmp
cmpsb
imul
mov
sbb
jne
jp
inc
addr16
jae
enter
rolb
push
push
xchg
or
add
xlat
cld
mov
movsb
push
fnsave
and
and
iret
xchg
push
mov
pop
fbld
dec
shrl
or
arpl
pmaxub
subl
dec
cld
push
insl
inc
push
jae
sbb
adc
pop
lcall
js
sbbl
fwait
xchg
lods
push
cwtl
in
pop
fnstenv
test
ljmp
fmulp
mov
imul
es
and
fisubrs
inc
mov
idivb
push
jle
xor
pop
jecxz
dec
movsb
int
lret
out
sbb
fwait
stos
imul
inc
sbb
inc
add
sbb
shrl
lret
stos
inc
dec
push
out
out
loopne
sub
xchg
jecxz
xchg
add
mov
lds
xor
xchg
mov
cltd
push
sti
arpl
jg
push
sub
inc
iret
sbb
add
aam
jae,pn
lahf
rcl
mov
outsb
std
jmp
loope
adc
mov
int
ficompl
push
jnp
mov
lret
adc
and
mov
xor
mov
fildll
addb
inc
je
mov
shl
sbb
add
and
iret
sahf
pop
xchg
ret
ljmp
mov
pop
inc
lret
int3
sub
aaa
cltd
fwait
mov
mov
pop
push
jno
mov
roll
int
adc
hlt
sbb
call
movsl
xchg
mov
dec
call
ljmp
push
sub
push
fbstp
pusha
stc
add
js
ljmp
pusha
stos
shlb
mov
cmp
push
pop
or
mov
mov
nop
sbb
int3
cli
push
push
mov
inc
inc
fcoms
stc
imul
xchg
or
jmp
out
fst
xchg
cmpsb
pop
aad
mov
jnp
ffree
jge
push
movntq
out
call
scas
xor
lret
mov
lds
lea
daa
lods
imul
es
or
fcompl
pop
jae
iret
imul
mov
ror
nop
mov
cmpsb
cmp
out
shl
inc
lret
ja
lret
xchg
into
add
sbb
jmp
sub
jnp
xor
cltd
js
lret
in
jns
cmp
sub
add
repnz
jo
jg
pop
xchg
out
nop
sub
mov
mov
jno
sbb
mov
lods
inc
nop
fcoml
cmc
fdivs
dec
sti
and
xchg
mov
jnp
pop
fnsave
test
pop
inc
pop
jb
inc
mov
call
mov
mov
lret
xchg
mov
rorb
or
lock
sub
push
dec
subl
aas
push
adc
dec
stos
sub
xor
mov
inc
xor
fcoms
ja
test
or
out
stos
shl
lret
je
loop
fwait
inc
scas
pushf
xlat
mov
push
mov
divl
movsl
push
jmp
int
xchg
and
pop
shrl
mov
sbb
mov
sbb
iret
xchg
nop
mov
enter
int3
jecxz
pop
hlt
push
test
jl
lods
ret
lret
mov
lahf
mov
cmpsl
jns
cmp
jmp
insb
inc
lock
stc
mov
mov
adc
mov
mov
xchg
cmc
sbb
dec
ja
inc
loop
sub
lret
cmp
push
inc
loop
and
push
cs
push
mov
jo
cmp
xchg
sub
lahf
rol
dec
jb
mov
push
in
scas
adc
std
repz
lret
pop
into
cmp
adc
pop
test
bound
je
bound
cli
pop
div
out
xchg
insl
adc
pop
ljmp
push
push
adc
push
inc
rol
lea
in
mov
pop
arpl
dec
xchg
mov
dec
jp
nop
ret
xor
pop
push
inc
inc
push
adc
insb
test
add
inc
push
add
cmpsl
popf
pop
fs
and
sbb
subb
lahf
ret
adc
into
sbb
push
xchg
out
fcmovbe
shlb
loope
sbb
in
daa
sbb
push
ja
js
or
push
and
popa
test
imul
add
xlat
dec
inc
je
mov
mov
in
jnp
push
or
vminss
push
repnz
mov
inc
imull
mov
and
push
jecxz
push
mov
or
xor
daa
jp
addr16
mov
dec
test
mov
in
sti
sti
mov
mov
in
sbb
cmp
pmuludq
popa
sub
mov
cld
mov
jns
int3
push
lret
mov
outsb
and
xor
push
aaa
xor
iret
ret
addr16
xor
fildl
mov
aas
rorl
ret
sti
mov
adc
inc
adc
sbb
inc
push
add
jmp
sub
icebp
and
aam
lcall
pop
push
movsb
add
pop
add
inc
fdivrs
in
test
sub
jae
dec
fwait
in
test
insb
sub
add
pop
jnp
xchg
pusha
pop
arpl
aas
xor
xchg
inc
xchg
dec
mov
add
push
nop
shl
xchg
shll
popf
shl
lods
adc
lock
push
mov
aam
lds
xor
push
les
arpl
or
insl
das
call
nop
insb
lret
icebp
mov
xor
shrb
subb
xchg
arpl
lea
shlb
paddsb
add
mov
movsb
mov
rolb
cmp
mov
lret
out
xchg
stos
pop
jb
js
enter
rorl
jmp
xor
push
mov
jo
jo
cld
popa
adc
cmpb
sarl
shlb
sub
sub
je
and
mov
and
and
shrl
pop
mov
jb
lock
mov
shll
fwait
push
sbb
mov
out
mov
loopne
clc
jb
int
pop
pop
lods
push
cmc
movsb
add
sbbl
stos
and
popa
add
mov
test
adc
push
or
loopne
xchg
sbb
jae
dec
cmp
push
inc
xchg
sbbl
nop
les
push
pop
dec
jp
repnz
jmp
sub
pushf
ficoms
call
push
and
data16
jns
call
sarl
fmuls
sub
loope
mov
out
in
jp
popf
xor
repnz
outsl
push
inc
pop
push
stos
sbb
fcmovb
aad
out
inc
xchg
out
scas
pusha
lea
jle
or
jp
outsb
ficomps
jle
nop
jae
lcall
push
stc
imul
je
and
jge
add
sti
mov
fmul
xchg
imul
mov
insl
adc
push
mov
nop
loope
or
ja
out
mov
push
inc
cmp
mov
xchg
and
lret
out
cld
jg
cmc
sbb
mov
lret
and
sarb
sbb
jo
sbb
ret
in
jo
push
jge
inc
lock
mov
pop
iret
fidivrs
adc
mov
push
xlat
filds
add
popf
ret
daa
iret
insl
sbb
out
fwait
shr
jo
aam
xlat
inc
cmp
popf
outsl
and
fsts
das
jmp
mov
hlt
arpl
jge
adc
sbb
adc
mov
sti
std
mov
andl
repz
jbe
push
sbb
fst
mov
ljmp
stos
scas
xchg
ljmp
inc
leave
mov
mov
insl
std
sbb
out
ficoms
or
pop
sbb
ss
je
out
cltd
enter
ja
mov
ss
push
loopne
stos
aas
out
inc
repz
cmpsl
xchg
push
cmc
xchg
jae
mov
in
and
fcomp
cs
lcall
pop
xchg
pop
cmp
mov
cli
arpl
cmp
and
jne
mov
push
mov
add
mov
imul
out
mov
ret
adc
cmp
pop
jl
bnd
cwtl
popa
adc
jno
mov
mov
dec
sahf
push
or
scas
inc
cmp
out
dec
add
leave
std
hlt
mov
inc
fists
mov
cmp
mov
jne
roll
mov
cmc
add
dec
out
inc
jne
loop
dec
and
jnp
xchg
lcall
lahf
cmpsb
add
popa
out
cmpsb
xlat
cmpsb
mov
mov
xchg
xor
mov
xor
push
aas
dec
imul
inc
das
push
sub
push
lea
sahf
fwait
mov
shrb
sub
adc
and
jg
jge
adc
mov
push
je
loop
cli
xor
push
ror
sub
sahf
rol
sbb
repnz
jge
sub
repnz
out
and
mov
arpl
mov
ds
mov
jg
pop
out
sbb
jl
mov
bound
add
insb
xor
jns
test
xor
jle
pop
dec
outsl
sub
mov
loop
push
daa
push
or
popa
mov
adc
mov
and
cmpl
push
mov
lcall
jbe
push
cmp
pop
lods
sahf
dec
test
outsb
dec
and
jge
jg
fcompl
or
jno,pn
fidivrl
sub
stos
enter
and
icebp
pushf
loop
outsl
cmc
xor
cmp
pop
cmc
mov
jp
ret
ret
lcall
les
pop
sbb
pusha
psllw
je
mov
push
mov
push
lods
test
xor
pop
adc
lods
jle
adc
into
xchg
sbb
xor
loop
icebp
mov
mov
dec
and
scas
out
and
mov
rolb
mov
xchg
out
inc
mov
ljmp
dec
pop
push
out
jae
mov
add
dec
jle
xchg
add
xchg
or
mulb
mov
gs
pop
out
dec
adc
inc
js
pop
sbb
xchg
scas
negl
push
dec
adc
subl
adc
negl
cltd
pop
sahf
leave
loope
push
pusha
fisttpl
addr16
andl
ja
test
dec
lods
push
insb
sub
roll
dec
loop
aaa
outsl
pop
pop
mov
pop
inc
dec
sub
mov
and
adc
and
in
dec
out
dec
jl
push
cltd
xchg
aad
inc
jmp
and
je
pop
in
push
pop
lea
shlb
mov
sub
insb
into
mov
cmp
jl
aam
es
imul
mov
mov
jbe
mov
repnz
inc
mov
mov
cmp
loop
es
out
mov
lcall
and
xor
mov
adc
repnz
jp
aas
adc
cmpb
push
sbb
pop
aaa
pusha
push
fildll
xchg
mov
sub
pop
jns
sbb
lret
mov
jnp
pop
pop
mov
sbb
sbb
out
cmp
jae
or
data16
icebp
inc
daa
cld
scas
cmp
jae
mov
push
mov
loop
push
cmc
mov
pop
pop
sub
pop
cmc
aas
cli
repz
sbb
aam
jmp
dec
push
push
fldl
xchg
das
push
ss
push
cs
imul
loopne
push
ret
jg
dec
test
mov
xchg
outsb
cmpsl
add
push
lcall
mov
add
pop
movsb
jp
shl
mov
dec
and
inc
sub
les
xchg
faddl
sub
adc
sbb
imul
sahf
xlat
int
loop
shll
dec
pop
arpl
jo
pushl
mov
lret
or
js
aad
jnp
inc
jecxz
movsl
xchg
pop
fidivs
dec
adc
mov
or
jae
and
mov
xor
shrl
mov
cli
nop
sbb
and
les
push
or
aad
movsb
mov
cld
loopne
lock
enter
inc
sbb
inc
push
cmp
xchg
and
adc
pop
stos
loopne
dec
adc
jb
xchg
lds
cmc
aad
xchg
pop
push
ds
je
xor
adc
fwait
adc
nop
pushf
inc
sbb
mov
aas
jbe
mov
xchg
and
movsl
les
js
sbb
jle
jns
pop
sti
fwait
jbe
fucomp
dec
cmp
and
xchg
loop
xchg
pop
test
repz
xchg
jae
cli
std
les
gs
rolb
pop
fidivrl
sub
xchg
jo
dec
inc
mov
pop
sbb
es
cli
pop
push
mov
cs
xchg
shrl
fwait
mov
js
push
insl
fmull
aas
cmpsb
mov
add
out
in
cmp
jb
pop
sub
dec
dec
imulw
push
cmp
enter
jnp
or
cmp
test
mov
mov
cmpsb
fildl
inc
cli
adc
jmp
xchg
sub
lock
jbe
out
push
xor
mov
cmpb
stos
aaa
int
insl
rcll
outsb
adc
sbb
xor
pop
mov
mov
inc
leave
xor
mov
daa
and
aam
lcall
aam
pusha
cld
jo
push
and
into
dec
cmp
imul
faddl
test
lock
jnp
imul
sbb
cltd
pop
out
sub
leave
fsubrp
pop
push
sbbl
es
test
sti
jb
sarb
pop
dec
mov
xor
inc
sub
outsb
jp
mov
aas
sbb
xchg
imul
xor
ficoml
push
fdivl
inc
cmpsb
xchg
sub
jmp
lock
pop
xor
push
jg
ror
repnz
push
jno
jecxz
outsb
pop
pop
push
dec
stos
imul
dec
and
repz
cmp
dec
xor
cmp
stos
cmp
jb
sub
aas
inc
iret
lods
fcmovnb
cld
icebp
sti
jno
ficomps
mov
inc
dec
xlat
cltd
out
mov
mov
sub
orb
add
sub
addb
mov
cs
sub
and
xor
lea
cmp
pop
add
and
mov
rorb
icebp
outsl
mov
push
mov
or
jge
inc
div
jns
cmp
das
xchg
and
mov
imul
mov
mov
popf
bound
dec
sub
ret
cwtl
fxch
jns
ficomps
and
rolb
mov
cmp
dec
jmp
cmc
jle
mov
sbb
cmpsl
mov
arpl
dec
push
mov
add
push
jl
cmc
cltd
sahf
in
iret
jge
js
addl
mov
call
pop
push
jno
xchg
and
xor
push
shll
cmp
jo
lods
pop
out
push
mov
loope
pop
mov
xor
sub
nop
xchg
jmp
mov
std
mov
inc
inc
push
mov
cli
push
repnz
and
aam
test
add
cmpsb
aaa
inc
pop
mov
ds
into
inc
ret
jae
mov
ds
aas
push
sub
mov
and
cli
inc
pop
or
and
dec
fldenv
pop
imul
add
fisubl
loop
cmp
pop
pop
in
cmpsb
sarb
xchg
add
push
hlt
jns
jno
rcrb
and
scas
daa
jne
andl
xchg
cli
loop
lea
bound
int
mov
pop
cmpsw
add
jg
mov
leave
pop
jl
jmp
cmp
outsl
push
pushl
rcrl
inc
dec
insl
jae
inc
jmp
aaa
xor
lahf
nop
inc
out
shr
fsubs
imul
add
fwait
inc
daa
mov
dec
fldenv
call
cmpsl
in
push
mov
out
dec
pop
adc
inc
fs
andl
movsb
mov
inc
movsb
sbb
jmp
sub
cmp
dec
xchg
or
push
and
test
aad
sub
push
mov
and
cmp
dec
test
inc
mov
lock
js
inc
scas
popf
jo
push
add
push
add
push
hlt
enter
mov
add
insb
or
add
xchg
and
dec
imul
mov
inc
dec
inc
xlat
ds
or
dec
push
stos
inc
mov
inc
icebp
shll
outsl
push
and
repnz
xor
cvtdq2ps
imul
movsl
pop
sbbb
cmpsl
fidivl
sub
sbb
jl
inc
fidivs
inc
or
stos
shlb
xchg
fcmovb
fwait
pop
inc
jl
data16
jnp
roll
inc
add
push
out
les
jns
scas
pop
aad
xchg
jecxz
clc
inc
or
bswap
cld
sbb
xchg
xor
dec
test
pop
and
dec
in
mov
call
sbb
xchg
jle
push
out
int
mov
nop
push
cmc
out
sbb
jbe
adc
sbb
sbb
sbb
scas
pushl
dec
xchg
jae
inc
or
push
jbe
mov
pop
or
sub
xor
jne
sbb
mov
push
and
mov
mov
jp
cmpsb
lret
mov
push
and
stos
jae
sbb
push
add
push
xchg
sbb
sub
push
mov
cltd
cmpl
inc
sub
es
sub
xor
mov
imul
pop
imul
xchg
fstps
add
cmp
aam
lock
mov
lret
out
int
cmp
enter
loope
cmp
pop
dec
dec
insb
mov
ja
pop
aad
cwtl
test
push
mov
dec
and
add
leave
leave
movsb
test
ds
xchg
mov
sub
pop
pop
fcoml
lret
jecxz
mov
mov
lret
or
bound
mov
and
dec
outsb
in
jae
cld
mov
ret
fwait
mov
add
fs
lds
dec
test
cmpsb
pop
or
filds
sbb
sbbl
lret
adc
std
fiaddl
imul
adc
lahf
lods
icebp
je
or
std
lock
mov
pop
loop
fdivl
jno
pop
cmp
adc
push
filds
cltd
cmp
inc
sub
ljmp
fld
mov
in
pop
inc
mov
or
inc
dec
js
push
pushf
lret
push
aas
mov
gs
ret
jmp
sub
sbb
dec
jo
inc
cmp
int
mov
jne
out
sub
movsl
das
pop
mov
pusha
jbe
push
push
jbe
cmc
in
mov
cli
push
addr16
outsl
xor
test
in
insb
dec
pop
push
fsubr
test
mov
fsubrl
mov
push
mov
cmpb
push
dec
push
cld
mov
xchg
sub
mov
or
stc
jb
out
test
jae
js
or
frstor
xor
mov
sti
mov
cmp
cmp
ljmp
subl
aaa
add
pop
inc
inc
lods
loopne
into
mov
jle
adcl
aam
xor
push
imulw
xchg
mov
push
sub
inc
shlb
mov
pop
out
dec
push
mov
addb
iret
or
sub
pop
jo
mov
insb
xor
aas
in
out
ds
les
add
iret
dec
mov
inc
cmpb
mov
and
loope
ficoms
jg
adcb
inc
daa
subl
xor
pop
fidivrl
addr16
scas
jo
xchg
inc
pop
out
push
inc
inc
je
outsl
fwait
cmc
rolb
push
rcll
cwtl
add
mov
insb
mov
sub
call
xchg
add
loopne
loope
add
add
push
add
sarb
or
jl
repz
push
les
jnp
leave
in
aas
adc
push
inc
loope
ret
sub
or
into
jae
rorb
in
cmp
mov
arpl
sub
in
pop
fcmovu
arpl
imulb
mov
outsl
jne
dec
adc
cmp
inc
jo
aaa
outsl
pop
pop
inc
les
sub
jecxz
inc
jge
mov
mov
xor
xchg
mov
test
pop
movsl
push
outsl
and
xor
aas
pop
movsl
sbb
jbe
sti
lods
fldenv
inc
in
pop
leave
push
dec
inc
clc
int3
and
adc
xlat
jnp
int
cli
lahf
lds
sub
sarb
pop
iret
push
sbb
cmp
jmp
pushf
sbb
lds
sub
int
mov
mov
incb
push
inc
shll
sti
mov
sarl
dec
loopne
test
es
ss
and
jb
sbb
pop
hlt
jl
mov
cmp
mov
insl
mov
inc
mov
loope
sbb
ljmp
sub
arpl
jg
mov
testl
adcl
mov
aad
ret
push
sub
shl
cmp
xchg
inc
sti
fsubl
or
test
cmp
jp
push
or
in
or
push
mov
jno
add
sub
mov
stos
test
outsl
jmp
dec
dec
cmpsl
jb
add
mov
inc
pop
inc
push
mov
jo
loopne
hlt
fs
les
dec
dec
lahf
pusha
mov
lods
sbb
aad
les
cmc
repnz
pop
xlat
or
or
and
xchg
and
mov
pushf
add
inc
jb
jg
xchg
ret
sbb
subl
xchg
mov
faddl
mov
ss
and
movsl
adc
push
out
jmp
cltd
mov
int3
call
jns
imul
jns
outsl
or
cwtl
sbb
dec
inc
ja
push
mov
sbb
and
mov
pushf
xor
jg
arpl
pop
test
xchg
mov
stc
pop
mov
das
je
clc
or
repz
mov
mov
dec
adc
adc
mov
cltd
lods
jae
sahf
outsb
sub
loopne
cmp
push
and
push
das
mov
leave
or
cmp
subl
cwtl
into
adc
ja
sub
mov
cmpsb
inc
rep
pop
dec
add
rcll
ljmp
add
dec
inc
xchg
xchg
nop
jl
and
inc
lds
mov
mov
pop
pop
dec
xor
xchg
out
popf
push
add
and
sub
push
repz
sbb
dec
xchg
in
pop
dec
fmuls
sbbb
push
lahf
adc
mov
mov
xchg
sub
dec
adc
jo
cmp
pop
daa
xchg
cli
aaa
dec
pop
sti
sarl
fwait
inc
call
xchg
mov
arpl
call
inc
divb
outsb
push
fmulp
mov
js
cld
outsl
call
pop
and
lcall
xchg
inc
xor
call
clc
loopne
rcrl
ljmp
inc
add
push
cmp
divl
outsb
sub
rclb
mov
les
lods
mov
subb
xlat
test
cmpsl
lods
xchg
int3
xchg
xor
sbb
aaa
les
mov
test
ja
test
loope
mov
inc
lret
push
dec
movsb
jns
adc
sub
mov
out
adcb
jno
push
iret
xchg
mov
repz
and
gs
push
mov
ja
or
in
mov
xchg
gs
out
stos
cmp
das
cmp
aam
addr16
stos
mov
inc
xor
dec
mov
dec
cmp
jle
mov
mov
dec
cmc
stos
pusha
mov
imul
push
pop
xchg
test
ljmp
pop
test
cmpsl
jae
popf
jne
mov
addl
mov
xchg
mov
inc
pusha
or
paddq
hlt
xchg
pmaxub
sub
in
fcom
inc
insb
and
push
add
push
out
inc
or
xchg
mov
mov
mov
fsubrp
repz
pop
das
lcall
adc
test
ja
gs
into
mov
xor
jge
mov
shl
mov
stos
fidivrs
scas
xchg
inc
mov
lret
inc
jbe
sub
jge
mov
dec
push
add
shll
dec
xchg
test
in
scas
push
jns
outsl
divb
imul
pop
into
add
int3
out
lcall
xor
mov
test
pop
cli
mov
jmp
addb
inc
jns
lods
outsb
inc
pop
pop
out
lahf
sbb
scas
cmp
cmpsl
test
sbb
xlat
dec
and
sub
icebp
jbe
in
mov
gs
out
adc
push
mov
test
sbb
out
push
jnp
outsb
jb
scas
push
rcrl
cli
imul
imulb
sbb
cmp
pop
inc
xchg
cmp
sbb
fwait
icebp
mov
in
pop
add
pop
insb
jbe
cmpsb
test
lahf
imul
xor
pop
jnp
dec
icebp
push
in
dec
add
jle
ljmp
nop
dec
cmpsl
hlt
inc
xor
mov
mov
mov
jb
fistl
mov
mov
stc
rclb
jl
sarl
cltd
test
sbb
ja
cmpsl
out
cmpsl
mov
mov
iret
shl
inc
or
ja
mov
loop
ljmp
popa
ret
jmp
nop
or
xor
xchg
pop
scas
lahf
or
mov
inc
mov
lods
and
daa
fnstsw
mov
stos
and
inc
adc
fnsave
jne
mov
add
mov
mov
inc
jbe
sub
dec
pop
test
test
xchg
pop
cmpsl
adc
movsb
lahf
sbb
jmp
xor
cmp
or
in
gs
fwait
mov
nopl
dec
lahf
test
repz
and
fsts
in
in
cmp
push
push
xor
add
je
and
sbb
jno
mov
xor
cmpsb
push
sbb
icebp
xchg
lahf
sbb
push
mov
das
nop
rcr
push
jmp
stos
icebp
imull
mov
dec
push
mov
adc
mov
or
pop
aaa
cmp
add
inc
jecxz
inc
add
jno
mov
imul
inc
xor
imul
mov
xor
mov
push
or
lods
mov
mov
cmc
std
scas
mov
mov
imul
lods
push
mov
andb
fdivrs
xlat
frstor
push
jnp
mov
int
pop
in
test
push
fidivl
addl
inc
in
mov
lret
cmp
xor
fs
xor
cmp
cli
pusha
stos
cld
push
call
les
adc
jg
xlat
fbld
in
mov
adcl
add
imul
test
imul
pop
adc
mov
pop
mov
inc
pop
and
outsl
or
push
inc
xchg
adc
sub
test
das
xor
out
ja
pop
cltd
nopl
jmp
imul
mov
and
out
mov
mov
cltd
jg
push
sub
scas
push
roll
or
test
push
sub
push
stos
mov
and
xchg
ja
dec
fwait
fwait
test
push
mov
lcall
stc
jmp
and
jns
jnp
rorb
mov
dec
movsb
pop
lret
xor
jae
jmp
mov
add
out
std
mov
mov
test
fldenv
rorb
dec
sub
ja
fldl
xchg
push
cmp
and
scas
in
lcall
mov
mov
dec
push
mov
js
cmpsl
fidivrl
lods
and
adc
jbe
popf
aaa
dec
xor
neg
in
xchg
jge
push
cmpsl
into
mov
insb
into
movsb
iret
ss
inc
push
mov
aas
iret
jmp
popl
add
and
mov
push
push
jl
std
ror
adc
jl
mov
hlt
push
andl
inc
je
aaa
sub
ret
mov
mov
jnp
test
mov
jle
shll
icebp
jae
inc
jl
aad
stos
jge
movsl
int
mov
dec
sbb
mov
inc
popa
daa
sar
or
bound
ja
repz
xor
mov
mov
mov
aaa
das
mov
xchg
clc
push
push
pop
cmp
pop
or
and
bnd
xchg
push
repnz
jmp
ret
sbb
xorl
and
or
inc
ja
inc
jae
jmp
imul
and
dec
xlat
cmp
cltd
adc
bound
into
inc
push
mov
pop
movsl
add
sbb
lret
loopne
movsl
inc
xor
mov
in
cmp
push
data16
mov
fidivl
cmc
add
sub
mov
fcomp
xor
insb
and
out
subb
pop
or
je
lods
jmp
pop
out
test
sub
adc
test
jecxz
or
aam
mov
dec
out
xchg
adc
mov
mov
inc
or
push
xchg
or
ljmp
lret
cmp
mov
fildl
add
out
push
sub
fld
mov
or
mov
mov
popf
mov
push
dec
pushf
xor
dec
fsts
arpl
notl
bound
xchg
dec
cmpl
out
mov
and
call
out
dec
imul
ss
and
jmp
cmp
arpl
add
jle
les
pop
xchg
sub
int3
fcomip
adc
ficompl
pop
and
adc
cmp
movsl
jo
mov
add
jns
ds
or
cmc
pop
mov
lret
fnstenv
dec
roll
push
repz
outsb
cmc
stc
shl
mov
nop
xchg
std
daa
or
inc
and
mov
je
push
push
cwtl
data16
scas
push
pop
subl
movsl
mov
test
or
jg
add
lretw
fadd
dec
data16
imulb
adc
mov
xchg
loope
pop
jno
aam
lods
testl
lds
mov
andl
push
cmc
lock
insw
push
pop
into
fwait
push
imul
or
lret
pusha
mov
mov
out
or
xor
xchg
mov
sbb
cmpl
fwait
stc
aad
pop
mov
sbb
pop
les
js
loopne
jge
push
js
pop
lock
mov
push
and
jge
jle
xor
cmp
inc
sub
stc
fistpl
push
addr16
mov
adc
adc
dec
inc
or
add
orb
popa
icebp
ret
aad
and
xor
and
mov
mov
js
cmp
stc
cmp
pushf
push
aam
enter
jb
pop
sbb
stos
sbb
add
and
inc
mov
mov
jl
loop
stc
push
clc
and
xchg
push
inc
pusha
scas
add
les
mov
add
mov
fiaddl
mov
in
pop
fdivrl
and
inc
mov
orb
push
mov
test
sbb
sbb
mov
pop
out
outsb
and
add
out
sub
mov
mov
cwtl
xchg
inc
outsl
shlb
aam
xchg
add
aam
and
sbb
jp
sub
and
mov
mov
movsl
add
inc
shlb
push
fwait
adc
add
pop
add
clc
sub
pop
jmp
sbb
mov
aad
add
add
dec
and
insl
arpl
nop
in
lret
lds
mov
shrl
mov
or
repnz
jo
inc
data16
mov
pop
sub
or
pop
inc
cmp
iret
mov
sub
and
pop
or
xor
out
mov
push
mov
jl
cwtl
popa
inc
cmc
inc
sbb
push
sub
loopne
sbb
shrl
xlat
fwait
addr16
rcl
rcrl
cmp
pop
jge
in
insb
lahf
mov
or
pop
inc
jbe
and
xchg
add
icebp
jle
or
sub
cmpsb
nop
jno
lcall
sbb
pop
loope
test
push
ja
mov
dec
pusha
push
jp
inc
aaa
movb
leave
cltd
lea
xlat
es
cltd
dec
sbb
inc
lea
div
push
pop
das
imul
outsl
push
mov
shrl
js
mov
sub
fsts
pop
scas
lea
aam
cmp
mov
aaa
aad
mov
mov
cwtl
push
mov
shll
inc
mov
lcall
or
jmp
jbe
ret
add
sbb
iret
sbb
add
and
jno
ds
adc
xor
sbb
rcl
add
ret
pop
stc
test
mulb
in
mov
or
mov
je
inc
mov
imul
adc
add
lds
mov
mov
adc
jle
repnz
mov
mov
jns
xor
hlt
jmp
mov
and
inc
inc
mov
cmpsl
das
mov
lret
cmp
aad
sbb
inc
into
mov
xor
or
mov
cli
push
or
inc
lock
sbb
divl
int3
jp
jp
sbb
fmuls
jecxz
lahf
fisttps
das
out
jnp
jnp
data16
push
pushf
jo
test
sub
push
stos
sbb
inc
or
mov
lcall
cmp
shr
sti
adc
mov
push
test
das
insl
ljmp
aas
movsl
jg
xor
xchg
dec
xchg
rolb
inc
inc
inc
dec
mov
xlat
int
cltd
push
xchg
adc
insl
pop
or
xchg
cmp
sub
dec
push
aas
pop
mov
dec
std
inc
shr
leave
mov
inc
xchg
lahf
pop
and
lds
xor
or
shl
jnp
dec
pop
push
cli
verr
xorl
push
mov
repnz
lahf
or
test
xchg
fsub
add
mov
dec
pop
jp
sti
cltd
popl
xchg
call
push
inc
xchg
or
iret
sbb
in
pop
lahf
stos
idivl
mov
test
les
push
lea
je
push
push
push
in
xchg
jns
or
cmc
ret
and
outsl
adc
orb
push
incl
jns
cmp
lahf
or
jmp
ja,pn
pop
cmpsb
mov
fidivl
sti
mov
sbb
jo
ret
in
add
fimull
aad
clc
test
ret
enter
js
mov
xor
cmp
mov
fcmovb
cwtl
cs
mov
mov
bound
ds
leave
loope
adc
fsubr
sub
enter
out
movsl
inc
cmc
dec
sub
sbb
ret
outsb
cmc
pop
push
xlat
arpl
out
inc
sub
jge
in
imul
pop
mov
repnz
cmp
popa
mov
jae
adc
int
adc
popf
add
sbb
das
or
or
rcrl
add
sbb
insl
jecxz
divb
inc
jmp
inc
sbb
jb
adc
movsl
dec
popf
jae
mov
int
inc
stos
in
xabort
insb
xchg
ja
mov
mov
jle
in
fidivl
xor
fs
insl
xchg
xacquire
scas
sub
mov
negb
mov
xchg
stc
stos
mov
loope
sub
jmp
lret
pop
ret
test
jecxz
subb
cltd
xor
test
pop
xorb
lds
mov
lcall
cmpsl
popa
out
js
bt
jno
rclb
cmp
loopne
and
fnstsw
xlat
ljmp
xor
xor
mov
xor
jnp
inc
xchg
xchg
push
js
shll
insl
aam
out
test
push
pop
dec
stos
inc
imul
xchg
jns
cmp
pop
int3
sbb
clc
xor
fucomi
inc
and
mov
cmp
std
ret
xchg
insl
dec
and
fsub
fadds
adc
in
add
jne
lds
in
adcl
xlat
aad
lcall
mov
js
jmp
xchg
pop
cmpsb
jnp
jbe
mov
mov
subl
jb
inc
in
push
daa
stos
jne
lahf
lea
pusha
pusha
jecxz
dec
dec
dec
add
movsl
and
lcall
inc
mov
pop
mov
xchg
negl
mov
cld
hlt
movsb
add
or
popf
or
mov
jg
lock
or
inc
ljmp
sub
sbb
sbb
xchg
dec
mov
cltd
js
inc
pop
hlt
or
pop
xchg
mov
addr16
push
pop
stos
gs
mov
cmp
xchg
jmp
mov
shlb
dec
push
test
add
mov
fldenv
test
push
jne
or
pop
sbb
stos
movsl
sub
adc
out
mov
fabs
mov
adc
cmc
push
add
mov
pop
or
ss
cs
adc
xor
stos
cmc
jecxz
xchg
lcall
scas
scas
jnp
cltd
mov
mov
xor
or
clc
test
dec
xchg
xchg
xchg
sbb
sbb
add
clc
ja
movsb
pop
push
sbb
push
dec
jecxz
popa
cs
pop
fs
movb
cmp
sahf
movsb
jo
mov
sub
or
andb
jnp
dec
jecxz
and
or
pop
xchg
push
inc
fmull
movl
and
jae
push
in
pop
sarb
adc
dec
dec
xchg
sahf
enter
test
mov
lds
mov
or
mov
rcrl
rorl
in
test
or
mov
push
xor
mov
push
inc
jmp
outsl
aam
out
sbb
repnz
iret
test
jmp
sub
dec
movsb
xor
movsl
orb
push
mov
enter
aaa
push
mulb
pop
sbb
outsb
or
daa
clc
arpl
sbb
inc
adc
fimuls
mov
mov
jp
jns
pop
orl
xor
mov
shr
aam
add
imulb
jne
adc
lods
popa
mov
dec
cmovns
or
mov
jecxz
pop
sbb
mov
mov
xor
pop
or
push
cmpsb
shrl
and
daa
xchg
mov
test
jge
sub
cmp
inc
jle
hlt
push
dec
jae
sub
out
mov
fsub
sub
and
jns
dec
mov
gs
bound
repnz
jns
cs
add
fcmovu
les
movsb
mov
scas
dec
inc
loopne
stos
mov
mov
inc
je
imul
dec
xchg
mov
dec
jno
sti
fsts
inc
sti
mov
or
xor
sub
das
adc
movsb
lods
push
mov
pop
insl
mov
fcomp
jecxz
pop
imulb
ljmp
add
jno
shr
sbbl
and
cwtl
mov
aam
mov
outsl
fildll
and
movsb
cli
add
in
jle
sub
cli
outsb
scas
sbb
xchg
and
movsl
mov
mov
inc
gs
pop
loop
adc
rorl
dec
aad
sub
pop
sbb
xchg
loopne
std
dec
dec
jl
pushf
fistpl
mov
dec
sbb
cmpsl
inc
mov
jo
or
pop
cmp
imul
mov
xchg
hlt
nop
xor
loope
cmp
sbb
cltd
xor
add
inc
pop
mov
mov
prefetch
or
in
add
add
dec
add
fxch
jecxz
popf
imul
icebp
mov
sbb
cmp
mov
lds
outsb
xor
out
repnz
push
sub
mov
imul
xchg
or
out
ss
jmp
pop
popf
push
aaa
stc
xchg
les
aam
dec
rclb
pop
in
add
lret
cmp
or
pop
adc
inc
add
call
and
push
popf
js
testb
mov
pop
or
fs
cmp
test
dec
mov
adc
mov
jp
cmp
add
dec
push
add
test
mov
mov
jbe
cs
add
mov
addr16
push
or
adc
mov
xchg
pop
fldl
scas
cmp
inc
cltd
fcomps
fbstp
push
push
inc
sub
xorl
mov
pushl
loope
push
dec
inc
cmp
push
inc
pop
lock
fldl
aad
jmp
in
cmp
call
xor
pusha
cmpsl
daa
imul
test
or
sub
mov
xchg
push
pusha
add
mov
cmp
sbb
mov
lahf
mov
fxch
sub
push
jbe
in
aaa
fldt
xchg
stos
add
leave
dec
jbe
fstps
jg
add
xchg
mov
std
mov
lret
mov
pop
enter
nop
out
xor
cmp
mul
push
sti
mov
je
gs
push
xor
push
xchg
cmpsb
xor
jecxz
mov
xchg
clc
add
stos
jecxz
ficoms
adc
jp
or
bnd
nop
fbstp
jp
aas
sbb
fisubrs
andb
hlt
xchg
xchg
rorl
out
mov
sahf
add
dec
out
out
mov
aaa
popa
mov
add
das
mov
test
add
wrmsr
mov
into
cltd
ds
inc
pop
jne
dec
pop
fstpt
inc
and
sti
ljmp
aaa
stos
xchg
xlat
pop
mov
getsec
sbb
stc
jp
sub
mov
fcomp
adc
add
lock
mulb
aas
sbb
dec
rorl
lcall
adc
inc
push
out
sarb
push
adc
je
sbb
sub
dec
popa
xor
rolb
xor
mov
mov
shrl
into
lods
or
loop
xchg
jne
es
inc
adcl
mov
stos
mov
or
rclb
xchg
test
adc
pop
mov
sub
push
cmp
stos
jns
ja
aas
stos
in
loopne
lahf
add
or
shr
aaa
mov
mov
xchg
into
cmpsl
dec
mov
sub
mov
sbb
push
int
pop
pop
xor
push
xor
je
jl
xchg
stos
clc
les
gs
adc
dec
xchg
sbb
fstpl
adcl
mov
clc
dec
push
in
std
jae
lcall
insl
mov
and
jnp
stos
orl
mov
lods
es
xchg
cmc
insl
xchg
mov
ljmp
jp
mov
mov
insl
mov
pushl
shlb
add
mov
mov
stos
out
cmpsb
push
jne
aaa
daa
pop
inc
add
or
push
scas
add
xchg
or
and
in
or
dec
pusha
loopne
or
ficompl
push
jbe
xchg
testb
xor
testb
sub
das
push
icebp
scas
pop
mov
mov
xchg
leave
push
pop
test
das
adc
inc
mov
adcl
inc
sti
test
cmp
mov
mov
xor
insb
popf
sahf
or
cmp
inc
in
add
insl
cmp
pop
cltd
jbe
call
scas
movsb
cmp
insl
sahf
xchg
outsl
insl
xchg
pop
ret
mov
dec
cli
int3
fstps
mov
sub
sub
mov
mov
jecxz
pop
pop
inc
cmp
cmp
xor
xchg
xor
mov
or
mov
xchg
pop
sbb
gs
cmp
inc
cmpsl
mov
add
loopne
inc
mov
loope
cmp
dec
int3
aaa
es
mov
cli
lret
in
repz
out
push
add
mov
mov
notb
ja
push
ret
jnp
jp
cmpsl
inc
jge
test
out
cwtl
repz
mov
icebp
movsb
rcll
loop
out
loop
sub
cmpsl
repz
mov
gs
sub
in
mov
and
test
xchg
out
and
xchg
imul
jp
out
imul
ss
cmpsb
iret
sub
fdivrl
lahf
adc
int
je
sbb
push
rorb
insb
sub
sbb
filds
mov
xchg
dec
enter
mov
inc
fucom
insb
das
inc
xchg
movsb
roll
xchg
in
out
into
pushf
das
pusha
std
shlb
lea
cmp
pop
insl
jo
dec
popf
xchg
cmp
jp
and
ss
shlb
or
dec
xchg
into
test
fs
lods
mov
add
test
jecxz
xlat
xor
inc
clc
push
cmpsl
fistl
stos
test
rcrb
cmp
add
dec
push
insl
outsb
and
pop
pusha
sbb
arpl
shlb
jl
popa
imul
and
je
in
mov
repz
inc
outsl
stc
jecxz
sub
stos
movsl
mov
push
je
inc
cmc
jmp
fdivr
ret
xchg
add
push
mov
mov
aam
testl
xchg
daa
scas
push
mov
mov
and
notb
lods
mov
pop
jl
inc
mov
shl
rolb
nop
insb
dec
xchg
or
cmp
scas
lcall
mov
dec
and
jno
daa
mov
cli
shrb
or
pop
fdivr
addr16
andb
sub
mov
lods
inc
hlt
adc
dec
mov
fiadds
outsl
movswl
fsubr
scas
loop
out
fldcw
pop
call
out
xchg
sub
mov
mov
xor
adc
pop
xchg
mov
mov
ret
addr16
jl
pop
nop
and
pop
push
cli
sbb
stos
fcomp
ficompl
lret
sbb
test
shll
mov
cmp
dec
push
add
inc
fbld
or
arpl
xchg
push
pop
cmp
ret
mov
out
push
cmp
arpl
scas
inc
sub
aas
cld
jno
nop
cmp
cld
mov
lret
scas
outsb
andb
dec
jl
mov
fistps
sbbb
mov
jmp
rclb
sbb
lea
cld
jmp
mov
fildll
mov
in
loope
mov
jno,pn
dec
jne
xor
lea
decb
mov
or
into
loop
iret
xor
sub
inc
xor
cmp
arpl
cmpsb
push
sub
mov
mov
push
rolb
movsb
in
and
stc
sbb
cmp
cld
mov
push
pop
push
aam
pop
fldenv
push
enter
add
add
pop
lcall
jns
into
out
mov
xorb
outsl
ja
mov
mov
std
cmp
hlt
cmp
xchg
fcmovnu
cli
mov
aam
cmpsb
lret
xchg
imul
push
int
push
ds
or
xchg
imul
inc
stos
ret
pop
aam
ja
into
add
orb
insl
and
cli
fistps
jmp
sub
sub
fidivrl
in
add
imul
jo
outsb
lahf
jae
add
add
sbb
mov
jae
mov
jno
popa
pop
pop
sti
mov
cld
mov
daa
push
xchg
jle
adc
push
inc
iret
inc
jmp
or
mov
mov
jo
push
shrl
cli
cmpsb
and
movsl
adc
mov
mov
xor
cwtl
aad
addr16
incb
adc
pop
test
lahf
or
or
pop
inc
or
lods
fistps
push
fistpl
je
fs
fimull
jae
dec
sarb
in
xchg
mov
popa
ljmp
mov
push
pop
frstor
insb
xchg
insb
or
cmc
inc
shll
push
xor
ja
sub
fwait
lods
sbb
push
jne
int3
aam
in
sti
mov
add
cli
pop
pop
sbb
mov
xchg
mov
ljmp
sub
cmp
into
cmpsl
stos
dec
xor
lcall
sbb
shl
xchg
insb
push
js
cmovne
or
mov
in
xchg
popf
jnp
popa
sar
xor
jbe
ja
mull
loop
fldenv
stos
jo
mov
push
movsb
shl
add
pop
scas
ror
iret
push
mov
fisubrs
sahf
fbld
mov
icebp
or
pop
add
je
push
popa
pop
shrl
push
ljmp
lods
add
dec
fistps
sahf
adc
mov
inc
cmpsb
in
jnp
and
das
ret
sysret
xchg
xchg
aaa
out
sbb
cmpsb
inc
out
dec
fs
push
insb
adc
adc
adc
jbe
imul
stos
cmpsl
sti
lea
jbe
lret
or
mov
pop
enter
stos
cltd
les
push
add
mov
pop
cmpl
cld
lret
mov
dec
sbb
scas
xor
push
aam
and
scas
inc
mov
dec
aam
xor
ljmp
and
cmpb
mov
and
and
filds
mov
mov
enter
jo
lods
and
add
fdivrs
mov
aam
imul
inc
mov
bnd
jo
sbb
sub
test
repnz
flds
jnp
push
cli
int3
outsl
add
inc
inc
fsubrp
or
cli
xchg
jle
xchg
cmp
mov
dec
sub
clc
cmp
aas
test
and
mov
mov
std
sbb
push
dec
pmuludq
add
add
mov
icebp
pop
hlt
fcoml
and
pop
jp
aad
sbb
push
fadds
clc
dec
int
call
jo
call
hlt
xchg
and
xor
imul
cmp
and
cmpsb
sbb
mov
data16
mov
fsubs
jno
xchg
or
push
or
cmp
int3
movsb
dec
push
mov
or
add
das
cwtl
movsl
xchg
movsb
push
data16
imul
jb
push
pop
xorb
add
xor
sub
testb
mov
inc
enter
mov
stc
add
aaa
scas
or
and
scas
jne
jge
sub
sbb
in
mov
movsb
mov
jae
xchg
push
push
out
lods
mov
jge
mov
and
mov
adc
mov
ja
sub
or
add
mov
push
mov
cmp
out
lcall
insb
inc
sahf
cmp
insl
xor
mov
lcall
pop
out
cmp
filds
xchg
scas
cld
push
push
data16
pop
adc
push
sub
fpatan
leave
loop
jno
stc
and
mov
pop
pop
jns
loopne
shll
or
popa
jle
mov
pop
cli
dec
xor
xor
dec
jg
arpl
jbe
mov
cld
cmpsb
and
lea
pop
movsl
sbb
pop
mov
fs
movb
test
test
arpl
rorb
sub
pop
repz
add
cmp
or
data16
xor
mov
xchg
call
cmpsl
dec
addb
push
daa
int
cmp
add
jl
or
gs
lods
enter
pop
fcomp
iret
sbb
sar
int
jmp
leave
pop
sbb
push
or
fmuls
xor
sub
in
cmp
add
lea
mov
xchg
mov
sbb
fidivrl
sahf
inc
ficomps
bnd
stos
adc
xlat
cltd
shlb
push
int
lret
cs
sar
push
lcall
sub
xchg
or
movsl
mov
cmp
add
mov
popa
nop
adc
lret
lcall
notl
push
aam
sti
and
lea
cmp
jle
cmp
xchg
or
loop
shld
inc
out
lods
jnp
mov
jge
jmp
inc
jge
add
jo
sahf
out
xor
mulb
lret
cwtl
cld
hlt
fiaddl
sub
mov
andb
sarl
dec
fs
mov
adc
cli
stos
hlt
pop
xlat
pop
jb
in
push
xchg
psrlw
jg
icebp
sbbb
mov
jmp
xchg
push
fcompp
jae
push
adc
cmc
sbb
jecxz
lcall
out
daa
fs
push
jns
push
lea
or
movsb
adc
out
cmp
ret
flds
pop
outsb
jmp
repz
popa
into
jl
push
inc
pop
mov
mov
notb
rclb
jb
push
insb
movsb
sub
nop
dec
xchg
imul
sub
aaa
xchg
aaa
pop
add
mov
mov
sarb
mov
popa
mov
imul
nop
xor
imull
cld
sbb
mov
mov
jne
sub
xorb
jl
mov
pop
mov
mov
cmp
adc
pop
push
add
aaa
call
iret
in
ds
repz
mov
out
sar
lock
or
addl
ljmp
dec
and
xchg
in
mov
mov
mov
push
cmpb
int3
ret
or
cmp
daa
mov
popa
pop
jg
mov
in
add
mov
pop
pop
cwtl
pop
jne
popf
push
sbb
xchg
sub
fistl
lret
fwait
sbb
les
cmc
mov
call
stos
and
mov
cmp
xchg
jmp
je
std
mov
cmpsl
dec
push
jnp
imul
inc
dec
push
mov
lods
dec
push
jg
dec
pop
mov
mov
je
fiaddl
mov
andb
fwait
dec
insl
xchg
cmpsl
adc
lea
cmpsl
mov
cmp
dec
lock
call
jecxz
out
jecxz
loope
xchg
sbb
lods
lcall
xor
xchg
cmp
scas
adc
jp
mov
mov
dec
and
pushf
sub
pop
lret
testl
xor
pushf
dec
sbb
fildl
inc
and
sub
jnp
neg
ds
sub
xchg
add
pop
xchg
out
sub
jge
lahf
scas
cli
mov
push
mov
lock
and
sub
mov
mov
inc
movb
mov
sbb
sub
pop
and
jmp
jns
loopne
subb
xchg
cltd
cmpsl
cmpsb
add
sbb
icebp
cmp
andb
push
push
cmp
clc
icebp
test
rclb
hlt
testl
jge
jmp
cmp
mov
das
adc
fwait
out
mov
negl
inc
adc
inc
cwtl
scas
sbb
inc
pop
dec
add
mov
mov
adc
int3
imul
cmpl
enter
mov
enter
dec
in
adc
bound
mov
addl
xchg
rol
lcall
sub
int
adcb
pop
test
out
and
imul
xor
cmpsl
push
jecxz
mov
scas
cmp
aad
jge
push
out
mov
jns
mov
sti
iret
lods
push
icebp
arpl
mov
cli
mov
or
pop
push
fistps
push
jl
mov
inc
aad
std
out
mov
mov
add
movsl
xor
int3
cwtl
pop
xchg
push
xchg
mov
lret
add
jae
es
pop
jae
jle
adc
add
das
sub
inc
test
lock
jg
lds
pushf
inc
arpl
mov
mov
repnz
mov
ljmp
dec
popa
dec
push
shlb
aad
sub
leave
cmc
sub
adc
jo
gs
mov
mov
cwtl
int
pushl
enter
xorb
leave
pop
movsb
shl
ljmp
cli
leave
popl
fwait
lock
or
aad
cltd
in
cmp
test
mov
push
mov
or
lea
lret
stc
add
mov
push
and
jns
dec
arpl
dec
iret
into
dec
xchg
mov
cmp
fcmovbe
repnz
mov
sbb
xlat
lcall
xor
rep
jp
mov
cld
negl
loop
lds
insb
lock
hlt
sub
ficoms
sbb
call
or
loopne
xor
test
mov
out
in
rol
push
inc
cmp
bound
ffree
bound
dec
inc
insl
sub
mov
daa
movsl
and
adc
dec
push
jl
in
push
adc
pushf
push
orl
lds
xor
or
hlt
xchg
mov
mov
outsl
dec
mov
or
out
cld
leave
lods
dec
lret
hlt
mov
cmp
xchg
aad
sbb
popa
push
insb
data16
ret
inc
xchg
pop
mov
cmc
test
cmp
mov
inc
out
mov
scas
aas
push
stc
sti
jnp
lcall
fadds
lret
aas
in
ss
sub
jbe
inc
push
or
xor
inc
jno
add
mov
add
cwtl
roll
xor
push
cmp
jecxz
fcmovnbe
inc
push
pushf
jl
loop
lds
cmpsb
and
fsts
cmp
or
push
or
fs
stos
mull
lahf
inc
out
loop
mov
jl
mov
stc
bound
fcompl
ja
or
fwait
loopne
or
jae
sarl
enter
push
push
adc
pop
or
stos
dec
mov
cmpsl
imul
ret
xor
idivl
sbb
mov
jno
ds
imul
hlt
mov
cmp
or
inc
dec
leave
cmc
push
loop
in
dec
jae
pop
call
adc
push
pop
cli
xchg
xor
dec
mov
repnz
test
insb
ss
add
loopne
movq
shlb
inc
push
add
or
sub
je
sbb
cld
loopne
mov
out
test
xor
add
dec
xchg
mov
rcl
mov
dec
jecxz
inc
cwtl
into
jl
inc
jb
and
push
int3
jg
out
ret
out
sbb
and
jo
cmp
repnz
mov
adc
cmpl
or
jne
xlat
testb
sub
jo
sti
shrb
jecxz
je
cld
and
mov
dec
mov
inc
test
lret
sbbb
xor
mov
daa
cmp
xor
dec
add
jp
lods
outsb
data16
push
jl
cs
mov
jo
enter
ror
jo
push
gs
mov
jmp
popa
arpl
sbb
jmp
dec
cltd
jae
fidivl
xor
incb
adc
test
cmp
push
sub
sub
lods
dec
jecxz
or
sbb
push
std
mov
mov
lock
sub
inc
sub
leave
mov
rcr
xchg
sub
popa
jge
and
mov
fbld
ljmp
dec
sbb
sub
aam
out
mov
gs
sbb
push
mov
cld
mov
pop
sub
repnz
and
clc
in
jns
push
shll
test
push
ss
mov
movsl
jns
ljmp
dec
inc
pop
lcall
xchg
adcl
imul
adc
mov
nop
enter
shll
add
cmpsb
push
add
loope
dec
cmp
out
loop
test
inc
xchg
push
pop
pop
fwait
div
mov
dec
jcxz
inc
repnz
mov
cld
xchg
cld
and
mov
repz
and
adc
add
jmp
push
dec
or
sbb
mov
and
outsb
adc
pop
mov
dec
iret
std
int
nop
hlt
sar
ficomps
xchg
ficompl
push
mov
jl
cmpsl
dec
mov
stos
xor
cmpsl
pop
cwtl
mov
adc
pop
lods
pushf
pop
test
bnd
fsubs
or
mov
mov
jl
lods
jb
inc
lcall
xor
jl
ja
pushf
jb
xchg
addr16
daa
sti
sub
imul
sub
popa
jne
es
fldenv
mov
repz
mov
outsl
sub
xchg
cmp
push
and
mov
sbb
shrl
jecxz
sub
sbb
adc
lea
in
repnz
push
xchg
inc
test
adc
cli
negl
cmpsl
jmp
int
xor
lock
cmp
xor
in
in
and
pusha
push
fs
sbbb
mov
cld
adc
inc
in
gs
pop
sub
xchg
xchg
jmp
mov
aas
push
jle
xchg
mov
or
icebp
shl
pop
xorb
in
stc
pop
push
mov
sbb
jg
leave
mov
push
mov
mov
test
add
jbe
cmc
cs
mul
push
call
je
outsl
popf
popa
aad
ret
add
fistpll
mov
jle
cmp
inc
jg
test
push
mov
adc
das
arpl
inc
imul
in
and
outsb
inc
iret
cltd
push
jnp
mov
or
add
or
out
pushf
js
insl
mov
call
loope
mov
std
in
xlat
mov
les
ret
js
bound
popf
test
jns
mov
ljmp
aad
stos
lods
xorb
testl
push
shlb
rcrl
insl
into
fistpll
add
imul
daa
sub
and
rorl
shlb
insl
ret
dec
test
orb
mov
dec
mov
xor
out
xchg
pop
cwtl
test
pop
sub
mov
les
fisubl
cli
inc
data16
hlt
sub
mov
mov
xor
scas
inc
mov
rorl
rol
movsl
pop
pop
add
cmp
out
sub
pop
mov
loope
adc
inc
and
cmp
inc
add
pop
cmp
enter
dec
jmp
fisubs
jnp
cmc
and
cwtl
fs
loop
dec
clc
mov
pop
movsb
pop
pop
dec
scas
out
mov
mov
push
ja
enter
cmp
fisttpll
aad
lahf
add
mov
pop
mov
data16
in
pusha
popa
jge
stos
addr16
or
mov
inc
enter
pop
xor
enter
inc
cli
add
pop
sub
mov
add
cltd
stos
sub
dec
aam
mov
in
scas
adc
out
add
xchg
out
mov
jmp
mov
cmp
jmp
and
clc
fwait
inc
ja
jns
fs
int3
adc
loope
mov
adc
mov
push
sarl
orl
sub
out
mov
pusha
xorb
out
inc
daa
shrl
iret
scas
xorb
repnz
in
add
mov
rolb
xchg
test
ret
xlat
into
mov
call
pushf
adc
or
out
lods
dec
test
mov
cmpsl
or
aad
push
mov
jmp
dec
rol
jle
dec
adc
stc
das
push
dec
stos
lock
jbe
push
mov
sbb
dec
int3
jl
inc
jle
adc
cmp
xor
cmpsb
xor
pop
insl
fsubr
es
cmpsl
xchg
imul
push
add
es
push
mov
lret
mov
jmp
or
mov
outsl
push
cmp
stos
fnsave
jo
test
lock
pop
shr
sub
mov
insl
nop
push
cmc
sub
mov
xchg
stos
add
ret
xor
inc
xor
jle
xor
mov
push
popf
enter
fcmovb
lods
mov
cmp
push
jge
and
sbb
popf
push
pushf
mov
sar
add
mov
mov
cmp
shlb
xchg
cwtl
jp
ljmp
mov
push
and
fsubr
outsl
das
jbe
mov
mov
jae
and
pop
push
adc
out
lret
inc
daa
jge
sti
jge
push
dec
imul
pop
dec
pop
fwait
in
daa
mov
push
sbb
hlt
mov
sbb
xchg
or
xchg
jl
mov
push
add
sbb
mov
in
loop
repz
or
and
inc
dec
iret
xchg
push
es
jg
scas
mov
cmp
inc
out
sbb
push
in
incl
sub
push
testb
ds
cmpsl
add
mov
push
lretw
cltd
xchg
lds
sbb
lods
js
in
mov
inc
mov
mov
sub
mov
or
mov
or
mov
push
fcom
pop
cltd
nop
jbe
testl
outsl
mov
pusha
lret
xchg
shrl
add
stc
adc
mov
ljmp
lret
push
and
push
adc
add
jae
fadd
jp
test
xlat
lret
xor
ret
mov
jl
imul
out
jae
rcll
dec
mov
in
fnstsw
rorb
and
dec
imul
stos
mov
fisubrl
xor
dec
push
jle
popa
and
mov
xor
xchg
cmpsl
xchg
xchg
outsl
mov
jle
ret
shll
dec
mov
notl
jge
jmp
add
notl
mov
adc
ret
mov
mov
push
sbb
jo
pop
push
pop
daa
push
outsl
std
test
push
push
pop
test
add
xchg
daa
aaa
test
ja
xor
icebp
mov
je
xchg
dec
add
xor
in
add
add
ret
add
mov
or
or
jae
add
lock
push
dec
lret
lock
adc
out
add
cmp
sub
add
sub
popf
cmp
loope
scas
out
xor
xchg
jae
gs
or
push
add
pusha
and
insl
jno
rorl
adc
test
insl
add
mov
stos
das
lret
xor
jae
sbb
pusha
jae
iret
shlb
mov
mov
jne
pop
jmp
and
loope
enter
loop
aad
fwait
enter
int3
mov
movl
in
cmpsb
repz
pop
fs
and
dec
add
dec
fdivr
mov
pop
push
adc
popf
mov
fxch
sbb
mov
pop
test
push
hlt
xor
in
mov
inc
fcmovnu
lods
les
push
mov
add
sahf
mov
push
jl
inc
jb
push
sub
les
xchg
ljmp
mov
push
add
push
mov
repz
in
hlt
dec
jp
fwait
xor
in
add
movsl
incl
rclb
pop
xchg
sub
mov
cmpb
loop
cmpb
fidivl
adc
jae
mov
pushw
inc
add
xor
cmpsl
xchg
and
xchg
imul
jge
cmpsl
mov
mov
sbb
subl
scas
sti
push
and
xchg
rcrl
les
mov
or
pusha
repnz
push
enter
xlat
das
hlt
test
gs
mov
pop
js
mov
aas
inc
push
push
lea
sahf
pop
dec
inc
comiss
gs
nop
add
sbb
mov
mov
push
jmp
push
in
nop
aaa
jmp
test
idiv
pop
popaw
jmp
jno
movb
lea
enter
decl
iret
push
add
ja
iret
jmp
aaa
push
into
loop
aas
mov
pop
xchg
dec
lods
mov
sub
lods
push
xchg
pop
push
push
cmp
xor
lret
mov
adc
mov
ja
push
jae
stos
in
in
dec
xchg
jg
out
ret
jnp
fbld
jmp
or
out
les
lret
xor
aad
icebp
cmp
loopne
xor
cli
push
jno
lods
xor
lret
in
bound
out
add
and
pop
popa
dec
jp
divb
bound
pop
ja
mov
lcall
sarl
shlb
mov
dec
test
and
mov
div
or
dec
adc
sub
fnstenv
xor
xor
scas
dec
bound
imul
cwtl
inc
adc
sbb
repz
insl
subb
loope
sbb
push
clc
rcpps
shlb
dec
or
mov
push
or
insb
test
mov
pop
push
shll
sbb
insl
xor
mov
lret
jg
inc
adc
push
xchg
push
xor
xor
xor
sbb
cmp
lods
cwtl
push
mov
push
xor
mov
push
mov
push
lahf
mov
clc
movsb
dec
sbb
aaa
pop
xchg
mov
mov
push
fwait
mov
jecxz
fcoms
popf
orl
outsl
movsb
pop
aas
js
js
pushf
enter
sub
nop
mov
mov
cmpsb
push
and
jb
mov
sub
and
sub
adc
jae
and
pop
loopne
jnp
sahf
xchg
mov
push
in
jle
push
mov
cmp
pop
leave
lea
orl
push
mov
add
cli
xchg
xchg
cmpsl
jl
cmp
and
imul
adc
or
lahf
loopne
cs
clc
stos
call
push
dec
push
je
or
lret
mov
scas
mov
test
add
scas
movq
sbb
cmp
mov
dec
fs
xor
jo
ret
sahf
jae
gs
jo
mov
push
push
cltd
mov
imul
fs
mov
cli
and
adc
inc
cltd
inc
stos
outsl
jb
and
and
mov
lret
push
jno
pushf
pop
jo
insb
mov
add
mov
or
xchg
jmp
pop
insb
in
xchg
lods
xor
pushf
xor
fisttpll
mov
push
jnp
int3
mov
negl
xor
ret
sbb
out
pushf
loope,pt
lcall
pop
push
xor
dec
pop
imul
cmp
cs
pop
hlt
and
mov
addb
xchg
int
jp
cltd
push
test
iret
mov
outsb
scas
xlat
jle
pop
imul
xor
pop
or
fisttpl
jle
cmpsb
dec
pop
daa
ds
push
inc
or
jge
inc
insl
lcall
idiv
sub
mov
xchg
mov
adc
or
iret
fwait
icebp
in
mov
in
aas
xor
mov
jbe
or
call
adc
outsl
insl
mov
mov
fwait
cmpsl
out
pop
jp
sub
sub
pushl
je
test
mov
adc
les
add
mov
dec
cli
push
scas
jecxz
adcb
cmc
lar
stos
mov
mov
adc
rcrl
sub
js,pt
test
push
add
jp
aas
cmp
mov
pop
scas
adc
ret
aam
adc
lahf
cld
not
lea
fwait
shr
adc
xor
mov
or
sahf
pop
fs
sbb
add
xor
lock
iret
shrl
out
xor
mov
push
adc
xor
loopne
mov
stc
mov
aam
shl
test
adc
jg
je
cmp
rclb
sbbb
movsl
jle
or
insl
mov
std
iret
xor
repz
loope
xchg
or
shl
call
pushf
test
xor
fs
in
xor
leave
fdiv
mov
mov
enter
pushf
dec
aam
cwtl
stc
mov
pop
mov
fwait
js
lret
nop
scas
dec
dec
mov
jl
aam
loope
mov
hlt
inc
or
push
and
add
xlat
popf
mov
je
fucomi
imul
out
cmp
mov
push
xchg
gs
lock
cli
mov
mov
popf
sbb
push
jae
sub
push
fldenv
lds
addl
or
outsb
fstpl
sbb
or
les
fsubp
outsl
in
mov
fcomps
js
cltd
xor
andl
jo
adc
outsl
and
mov
mov
lods
jbe
addb
mov
cmp
jbe
loopne
jns
lahf
push
or
les
adc
je
mov
adc
ja
mov
or
frstor
cmp
xchg
nop
test
lret
stos
add
icebp
and
sahf
jnp
int3
aaa
insb
jecxz
sti
inc
cmp
dec
negb
push
pop
sbb
cmc
push
xor
inc
ja
mov
sbb
mov
in
outsl
jbe
xlat
rorb
outsl
shll
pop
inc
gs
je
pop
frstor
lods
es
clc
fildl
out
push
popf
ret
hlt
inc
and
jnp
or
sbb
ja
aas
notl
gs
cwtl
add
cltd
or
movsb
dec
pop
clc
ss
push
adc
fucomip
into
lods
enter
add
sub
outsb
sub
jnp
aas
inc
jecxz
pop
push
inc
mov
aam
sbb
sub
ret
mov
inc
xchg
inc
ss
cmpl
outsb
pop
inc
dec
mov
mov
jmp
aaa
push
lcall
jle
lods
or
cmp
jne
mov
imul
cs
add
sub
xchg
push
inc
jne
jnp
fnstsw
cli
sahf
xor
sti
rol
push
mov
call
jae
jae
adc
fimull
push
scas
jmp
sub
into
out
jo
push
mov
cmp
pusha
les
mov
fldl
test
adc
xchg
sbb
adc
negl
mov
loop
ret
and
pusha
jmp
dec
lahf
test
inc
pcmpgtb
adc
leave
add
adc
jmp
imull
mov
in
movsl
ljmp
sahf
xchg
lods
popa
fdivrl
icebp
dec
pop
not
or
sti
shl
std
adc
pop
out
or
aas
dec
dec
jl
mov
mov
mov
fdivs
ret
aad
xchg
fwait
mov
mov
jne
in
or
mov
xor
ja
jl
in
mov
fimuls
jno
lods
mov
sbb
mov
jl
jb
cs
push
nop
adc
xchg
mov
inc
inc
outsb
jne
pop
js
icebp
aad
pop
sub
aad
popa
sub
shll
ds
xor
pop
outsl
cmovg
fucomi
xor
lcall
inc
data16
xchg
fs
pop
and
dec
sub
xor
jno
adc
mov
inc
test
xchg
setns
pop
jl
mov
adc
jle
fwait
sub
stos
mov
arpl
xchg
cli
enter
lods
gs
and
jnp
dec
loopne
mov
in
and
insb
das
adc
push
pop
jecxz
ret
push
je
int3
inc
notb
stos
xchg
fs
inc
push
ss
sbb
pop
lret
push
es
push
sbb
push
push
dec
call
jp
sarb
adc
or
inc
fs
popf
jb
lahf
mov
test
imul
in
lea
mov
push
repz
std
push
jb
jp
inc
jecxz
imul
mov
push
dec
addr16
add
sub
jnp
cmp
cmp
adc
test
aad
push
inc
in
sbb
push
cmp
xchg
ja
mov
sub
sbb
iret
das
xchg
call
and
mov
mov
gs
pop
clc
int3
rcrl
adc
xchg
sarl
out
xor
mov
jg
scas
xchg
fs
jge
aad
stos
lds
cld
aam
add
cs
js
ljmp
mov
shr
sbb
scas
sub
lds
cmc
movb
xor
rcrb
adcb
push
jl
imul
out
lret
std
inc
out
sub
push
jno
fbld
sbb
test
nop
dec
mov
dec
xchg
adc
cmc
jne
sbb
or
loope
pop
aad
inc
int3
jmp
jmp
inc
xor
test
fisubrs
and
push
subl
test
adcb
adc
aas
pop
xchg
add
aas
data16
dec
leave
jmp
cli
rorl
mov
mov
mov
fdivrl
pop
push
sub
mov
fwait
xor
arpl
leave
pop
push
and
xchg
push
push
jge
idiv
xor
aad
rorl
popf
mov
or
sub
add
loop
ds
dec
rorl
jge
push
stos
push
icebp
sti
cmpsb
mov
xchg
stc
out
jp
and
test
and
pop
int
int3
xor
mov
stc
xlat
adc
into
mov
sti
in
aam
repz
je
pop
leave
push
inc
push
mov
daa
daa
dec
fildl
sub
sub
leave
insb
lret
sub
adc
hlt
push
sbb
jge
js
jo
xchg
pop
mov
cltd
sub
leave
jns
sbb
sub
dec
enter
cli
mov
loope
sub
push
int
push
mov
mov
sub
mov
in
push
mov
cli
les
popf
jge
das
ljmp
or
xor
in
rcrl
adc
and
insb
adc
int3
inc
sub
xchg
mov
jae
out
mov
mov
mov
adc
xorb
out
mov
fistl
stos
imul
fnstenv
out
ret
mov
fucomi
push
stos
cmp
jl
adc
test
popf
xchg
and
popf
xor
xchg
loop
enter
jae
dec
dec
rcrb
inc
daa
pop
leave
pushf
sbb
or
fidivl
popf
andl
jg
imul
lret
mov
in
cmp
test
xchg
out
fs
jle
sub
push
sbb
stos
jnp
pop
or
into
add
xchg
add
lods
fwait
mov
jbe
xlat
push
mov
lods
jge
adc
adc
test
stc
jp,pt
cmp
std
daa
call
enter
dec
pop
inc
popa
punpcklbw
mov
inc
sbb
mov
pop
xor
daa
adc
das
jns
inc
fisubrs
mov
test
xor
call
fidivl
lods
jmp
pusha
adc
pop
fwait
cltd
leave
jns
xor
rol
jo
fucomip
or
jmp
fucomi
add
sub
sub
cmp
mov
aad
add
jb
inc
add
inc
xor
ja
fnstsw
xchg
xchg
and
fnstenv
jae
add
insl
lods
imul
jb
cmp
das
mov
inc
sbb
daa
movsb
loop
xor
mov
jbe
fdivrs
sub
or
inc
lods
sbb
aas
aas
aad
rclb
aad
adc
xorb
mov
inc
sbb
into
leave
aaa
icebp
jmp
push
int3
popf
sub
pop
mov
push
dec
stos
sub
test
push
sub
mov
push
aam
mov
adc
call
mov
sbb
xor
jb
imul
mov
imul
std
lock
sbb
mov
je
inc
popf
pop
ret
cmp
sub
loope
dec
cmp
sahf
lret
imul
jmp
jo
jo
adc
pop
stos
inc
cld
sbb
icebp
mov
nop
pushl
jmp
jmp
xchg
data16
push
sbb
addr16
stos
dec
adc
mov
mov
notb
sub
mov
lods
add
ficoml
subb
inc
scas
cwtl
xchg
xor
push
sbbb
std
add
pop
lret
push
ret
lcall
insb
les
dec
mov
adc
and
push
imul
fmuls
sub
call
inc
sbb
jno
pop
fmulp
ret
add
push
push
addl
xchg
lds
std
ret
cmpsl
insl
leave
addb
cmpsb
or
jmp
cli
aam
pop
bound
sbb
sub
dec
sub
loope
adc
sub
sbb
xor
insb
or
or
aam
test
jo
icebp
or
sbb
add
rcrl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
push
push
call
lea
push
lea
push
lea
push
call
test
je
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
call
movl
jmp
movb
movb
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
push
call
movb
mov
add
mov
mov
pushl
pop
mov
movl
call
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
call
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
push
push
call
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
movl
call
mov
push
mov
call
push
push
push
push
push
call
mov
call
mov
cmpl
jne
push
call
add
push
call
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
push
push
call
lea
push
call
push
call
cmpw
mov
push
je
call
push
call
add
jmp
push
push
push
call
jmp
ja
and
mov
arpl
rcrl
lods
mov
arpl
and
lods
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
xor
jmp
lods
into
dec
das
lods
add
mov
adc
add
dec
cld
mov
dec
pop
out
adc
adc
or
mov
cmp
lods
sbb
nop
in
dec
and
mov
arpl
rol
movsb
xchg
mov
out
je
inc
and
bound
sub
push
jl
push
pop
sub
gs
jns
xchg
xchg
mov
imul
movsb
in
sub
loope
negb
sub
mov
jns
je
inc
and
cld
sub
jne
jl
fwait
repz
sub
imul
paddsw
inc
jl
into
mov
imul
xchg
mov
lods
mov
arpl
sub
mov
mov
cmpb
sub
out
and
mov
sub
ja
mov
arpl
sub
out
and
pushf
jbe
arpl
sub
out
and
mov
popa
popa
and
popf
out
and
mov
bound
sub
out
mov
dec
arpl
adc
popf
in
and
lods
mov
arpl
sub
out
and
mov
arpl
cmp
out
and
mov
arpl
inc
xchg
out
and
mov
arpl
outsb
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
leave
sbb
mov
arpl
sub
imull
jae
mov
addr16
and
pop
jne
lods
mov
arpl
sub
pop
inc
push
add
out
jbe
arpl
sub
out
sub
fdivl
arpl
sub
out
and
mov
arpl
or
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
arpl
sub
out
and
mov
and
sub
out
xor
cmpsb
aam
adc
faddl
add
int3
inc
inc
lahf
ret
adc
aaa
push
dec
push
testl
mov
jmp
jb
xor
push
cld
addr16
adc
int3
inc
cmp
mov
mov
adc
mov
inc
cmpsl
and
aas
jle
sti
push
aas
sub
in
sbb
jmp
adc
push
sti
cmp
fiadds
mov
mov
ret
gs
mov
add
inc
inc
jbe
fnstcw
mov
dec
mov
dec
outsl
lds
in
mov
aad
nop
test
lods
nop
out
call
and
rcrb
aad
sbb
hlt
mov
jge
add
inc
cmp
adc
and
leave
xor
pop
cmp
stos
lock
inc
jp
imul
lahf
das
movb
roll
jg
das
adc
ja
adc
or
in
xchg
popw
add
jns
popf
mov
xchg
mov
inc
push
popa
rdtsc
cltd
sbb
xchg
sbb
inc
fsubs
adc
cmpsl
cmp
sbb
jp
jbe
mov
pop
jb
push
push
repnz
pop
cmp
rcrb
stos
stos
inc
jl,pn
sub
repnz
xchg
jnp
scas
add
pop
imul
dec
and
dec
ficoms
stc
push
mov
cmp
int3
je
icebp
adcl
scas
pushf
in
lock
cltd
cmp
hlt
add
and
and
xor
add
rcrl
xchg
inc
fists
imul
sarl
movsb
inc
gs
adc
cmpb
sti
add
bound
cmpsl
cli
gs
in
xorl
add
lds
cs
jne
fistpll
cmp
sub
xor
or
loopne
or
out
nop
test
movsl
or
repnz
icebp
in
lds
nopl
xlat
loop
fwait
push
ljmp
sub
push
sub
stos
jp
push
test
mov
mov
pop
mov
dec
das
rolb
mov
jbe
mov
add
dec
rorl
dec
lret
in
je
ret
dec
pop
mov
ljmp
loopne
dec
fdivrs
add
popf
shll
cmp
xchg
push
or
mov
ret
push
pop
xchg
cmp
xorb
xchg
adc
add
mov
add
push
pop
push
dec
fbld
jg
dec
cs
pop
cmp
jg
adc
stos
fwait
shrl
jp
rol
lea
out
adc
inc
mov
negl
test
das
loopne
fcmovu
or
adc
or
and
insb
xor
or
and
ret
out
cmp
pop
sbb
loope
sbb
fldcw
out
mov
push
dec
inc
fnstenv
dec
mov
sti
xchg
cwtl
sub
dec
lahf
inc
lods
adcl
es
lods
mov
jb
out
stos
jo
outsb
bound
cmp
lea
mov
pop
mov
adc
cmp
data16
or
xor
daa
cld
mov
mov
mov
pop
push
mov
pop
stos
jp
mov
mov
frstor
fs
das
fstps
xor
out
je
shll
into
xor
js
cs
imul
sub
and
xchg
jno
movsl
jp
ljmp
aaa
xor
lea
pop
cmp
fldcw
sti
pusha
stos
adc
iret
bound
cmp
ja
xor
adc
leave
std
dec
push
lods
std
fidivl
call
sub
jl
roll
gs
loopne
lea
sbb
push
int3
push
enter
sarb
xor
jp
push
pop
enter
mov
repz
cmp
add
ret
adc
stos
xchg
lcall
int
pop
sub
scas
mov
mov
loope
cmp
xor
fcoml
or
sbb
rcrl
pop
mov
scas
movsb
mov
lods
enter
in
sub
loop
in
mov
mov
jmp
cmp
inc
mov
mov
add
vpsubb
xor
lea
aad
mov
ljmp
lods
fisubrs
repnz
pop
xlat
out
cld
out
neg
fstl
add
scas
enter
bound
aaa
xchg
push
hlt
jge
sub
sbbb
loop
fdivrp
cmc
fcomps
or
jecxz
fiadds
int
insl
xchg
jge
inc
dec
jns
movsl
icebp
or
cmp
xchg
ret
sbb
jg
sbb
in
cmc
inc
insb
arpl
sbb
scas
jp
test
inc
movsb
enter
mov
push
cmp
lahf
xor
gs
add
mov
scas
sbb
outsb
loopne
mov
shll
inc
push
fwait
mov
inc
repnz
dec
popf
adc
imul
pop
cmpl
inc
sbb
mov
or
jbe
pop
cmp
dec
mov
xor
mov
rorl
push
test
aas
popa
cs
cli
cmp
xchg
add
push
mov
push
jl
mov
fmul
in
pop
sub
pop
adc
dec
ljmp
outsb
ret
mov
decb
mov
icebp
inc
add
or
call
and
pop
jns
xor
xlat
push
jge
pop
jmp
adc
popf
cmp
jns
aam
insb
add
mov
xchg
repnz
mov
mov
imul
jns
jl
std
fildl
sti
jbe
bswap
ljmp
sub
lret
iret
sub
mov
enter
push
insb
fdivrs
test
iret
out
in
psrlq
jns
mov
mov
cmp
adc
mov
add
das
xor
fs
stos
sti
xor
pop
jle
add
cmp
or
pop
ret
enter
sub
int
sahf
dec
jne
mov
and
and
scas
jnp
jae
test
push
push
cld
rep
xchg
lods
xor
lods
xchg
adc
adc
mov
imul
fst
int
mov
ja
adc
stc
lea
cmp
dec
sub
dec
repz
or
fistps
icebp
lock
pushf
ja
add
cld
adc
mov
adc
mov
xchg
push
idiv
leave
sub
into
pop
cmpsl
gs
test
stos
lods
mov
push
js
mov
mov
mov
jl
xor
push
push
dec
jb
xchg
cltd
loop
mov
adcb
shl
adcb
lods
mov
std
imul
outsl
lea
add
les
clc
pop
loope
mov
daa
out
sub
in
inc
dec
mov
insl
fs
lahf
and
lds
sbb
into
out
shr
in
mov
and
inc
cmp
mov
shlb
push
hlt
arpl
fildl
loopne
sbb
test
xchg
mov
sub
loop
pop
das
outsb
sbb
sahf
adc
insb
mov
push
lret
dec
lods
js
arpl
xor
shlb
lods
insl
out
jle
movsl
jo
clc
cmpsb
mov
mov
and
xlat
test
and
arpl
imull
mov
xchg
in
push
in
mov
div
lahf
xchg
mov
jl
in
roll
adc
inc
stc
mov
rcr
mov
hlt
rcll
outsl
cmp
dec
loopne
adc
xor
xchg
sub
jo
rorb
sbb
jb
cwtl
outsb
and
call
add
inc
mov
rol
dec
pushf
ficoml
cmp
jns
add
inc
incb
pop
mov
or
subb
dec
push
push
mov
imul
ficoms
pop
xor
jmp
mov
mov
jecxz
mov
out
sub
mov
cmpsl
xor
cmpsl
negl
or
mov
pop
hlt
aam
mov
and
int
arpl
aad
push
repnz
clc
inc
fisttps
rcrl
mov
and
leave
in
pop
pop
movsl
cmc
adc
xchg
xlat
mov
push
bswap
dec
lret
push
test
push
popf
xor
sub
clc
int
adc
outsb
pop
xchg
push
fs
adc
cmp
shlb
call
xchg
shrb
push
dec
ret
or
popf
adc
jae
or
mov
and
stos
movsb
or
into
out
adc
adc
les
loop
sbb
insb
mov
shll
sbb
cmp
ljmp
dec
and
xchg
xlat
xchg
andl
js
scas
bound
fidivs
outsb
pop
cmp
cmp
xorb
fisubrs
sbb
out
icebp
movsl
je
xor
pop
adcl
mov
pop
pop
cltd
movsb
xchg
and
std
cmc
ja
sahf
pop
add
inc
dec
test
push
decb
adc
movsb
fwait
jl
andb
js
fdivs
push
or
scas
sar
test
adc
out
fstpl
jecxz
jb
inc
imul
pop
out
dec
mov
aam
and
and
cmp
cmp
or
out
add
aad
mov
xor
repz
dec
mov
lods
mov
add
out
out
sbb
lods
jbe
lea
lahf
mov
sahf
ret
and
mov
jb
lret
std
xchg
jge
adc
cltd
loopne
leave
sti
mov
imull
mull
inc
sbb
cmpl
inc
jnp
dec
sbb
adcb
das
dec
scas
aaa
xchg
ret
and
mov
nop
pop
cmpsb
lock
dec
xor
xor
aas
mov
dec
loopne
aad
mov
or
mov
xor
xchg
xchg
cmp
fstps
ds
xor
cld
inc
sub
or
mov
push
jae,pn
fnsave
pop
cld
leave
jecxz
dec
jmp
js
mov
xor
fwait
adc
sbb
push
imul
bound
mov
xor
pop
mov
pop
repnz
cmp
and
dec
ss
lock
test
iret
cwtl
out
les
dec
sbb
add
movsb
xchg
jge
add
inc
fidivl
cs
lret
dec
push
cmp
nop
psubusb
test
clc
int3
dec
out
aad
mov
or
in
sarb
jle
les
negb
aad
cli
jecxz
in
aaa
inc
jl
inc
pusha
clc
nop
lea
mov
mov
sbb
cmp
adc
xlat
popf
mov
cmp
aaa
pop
cmp
out
jne
or
jnp
test
mov
daa
addr16
lahf
mov
std
pop
int
aaa
cmp
hlt
ss
mov
dec
jns
rorb
mov
into
mov
add
rcrl
mov
fstpl
and
cld
adc
fs
outsl
mov
xchg
rcl
cmp
adc
sti
mov
scas
arpl
arpl
ja
in
sbb
lcall
inc
dec
rcrl
leave
push
daa
xor
insl
mov
orb
imul
adc
xchg
js
mov
insl
xchg
push
sub
adc
jo
test
dec
clc
mov
enter
push
jae
jbe
xchg
sbb
ret
adc
and
hlt
push
pop
xchg
in
ret
lea
push
push
push
push
call
push
call
xor
pop
add
ret
nop
nop
nop
nop
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
faddl
add
inc
inc
add
inc
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ret
imul
test
inc
add
imul
mov
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubrl
add
imul
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jl
inc
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
inc
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
