into
mov
movsl
ficompl
dec
ret
add
subb
cmp
xlat
in
ljmp
jo
stos
cwtl
mov
xchg
ret
mov
cmp
jecxz
sahf
stos
sbb
xlat
filds
pop
leave
inc
pop
inc
pop
dec
ss
ja
ja
into
add
cmp
inc
mov
push
lods
daa
fwait
mov
adc
loope
cmp
in
cwtl
int3
shlb
leave
inc
gs
adc
push
mov
imul
adc
add
inc
fcompl
mov
fwait
mov
jge
lds
aad
ss
shl
adc
fdivl
insb
das
sbb
cmp
jb
das
outsb
mov
lea
add
clc
test
fwait
or
jns
mov
loope
or
and
and
lcall
mov
stc
int3
mov
lods
push
test
cmp
iret
pop
or
pop
mov
jl
lret
stos
xor
in
js
inc
lahf
mov
and
pop
dec
pusha
push
inc
mov
aas
mov
lea
orl
sbb
sti
cmc
cmpsb
rcl
jle
in
scas
ja
stos
aas
and
add
cmp
inc
scas
adc
sbb
sub
inc
insl
xchg
das
shl
cmp
jle
and
stos
stc
stc
sbb
in
lret
and
outsb
push
xchg
mov
int3
leave
lahf
lds
mov
aas
push
in
fnsave
jl
js
mov
movsl
icebp
int
mov
aad
aas
and
jmp
sub
ja
jle
lcall
stos
adc
xchg
inc
cmpsb
push
lods
imul
fcmove
xchg
dec
cmpsl
repnz
daa
push
test
pusha
adc
mov
dec
mov
outsl
xor
xor
push
and
jl
jnp
imul
mov
ja
rcrb
push
aad
mov
ss
cs
imul
pop
sub
fstl
cmp
mov
test
pop
adc
lahf
ja
loop
pop
push
or
adc
jno
or
and
mov
addr16
fcomp
test
popf
loope
out
dec
cs
sub
inc
push
mov
cmp
xor
iret
xor
movsl
lcall
inc
xchg
jo
dec
hlt
add
test
out
test
or
push
lds
or
inc
fbld
xchg
in
rorb
in
dec
aaa
call
shll
jg
adc
clc
enter
arpl
in
das
sbb
subb
cmpsb
mov
loope
mov
mov
adc
stos
push
mov
jno
push
xchg
pandn
sbb
xchg
shll
dec
in
ljmp
int3
mov
in
or
inc
mov
mov
insl
cmp
test
shll
lods
cmp
aaa
and
dec
add
jmp
je
and
xchg
mov
and
rcr
push
cmpl
and
mov
mov
mov
in
repz
sub
std
jge
push
xor
daa
pop
notb
aam
inc
call
jne
mov
fwait
outsl
iret
jecxz
into
adc
outsl
aam
mov
pusha
cltd
call
add
pop
inc
jo
rorl
push
xorl
pop
rolb
addr16
stos
push
add
and
loopne
mov
test
sahf
fildll
cmp
stos
lods
and
lods
aas
xchg
je
mov
lds
es
sbb
and
inc
out
push
pop
xor
add
push
and
clc
xor
xchg
cmpsb
xchg
jl
lret
mov
ficomps
push
or
pop
das
cltd
push
sub
sub
imul
jle
sbb
push
insb
test
cmp
add
dec
das
cli
mov
in
pusha
adc
xchg
lret
push
push
ja
cld
mov
inc
cmp
cmp
ljmp
ret
ljmp
imul
js
xchg
push
sub
prefetcht2
and
adc
pop
and
mov
orb
cmp
jle
ret
inc
inc
loope
adc
dec
jnp
ret
inc
ret
dec
adc
xorb
adc
inc
out
les
lods
mov
add
orb
add
xchg
jg
dec
hlt
scas
iret
ds
les
push
fstpl
or
sub
test
push
daa
sub
xchg
bnd
lret
aam
lds
stos
jae
addb
in
or
out
scas
dec
push
xchg
outsl
xor
push
push
pushf
xchg
mov
out
popa
adc
xor
fmul
cmp
nop
movsl
cld
and
je
xchg
enter
loopne
gs
jle
adc
popf
add
push
stos
push
sub
sbb
mov
mov
in
mov
ljmp
std
mov
cmp
int3
outsl
xor
in
cmp
sti
gs
mov
xor
dec
sbb
mov
das
nop
pop
clc
punpckhdq
adc
sub
sub
popf
jnp
jnp
arpl
mov
push
out
das
clc
shlb
and
jmp
cld
mov
scas
jecxz
sub
push
outsb
jecxz
mov
lock
jl
pop
addr16
dec
out
pop
imul
and
in
jmp
scas
push
popf
sbb
cli
faddp
adcb
sti
and
add
dec
sub
ret
insl
mov
andb
mov
mov
movsb
in
mov
push
pop
inc
out
outsl
fldl
or
jb
mov
das
dec
repz
das
aad
jp
faddp
add
push
cmp
or
rcrb
mov
mov
out
cmp
sbb
gs
movsl
dec
cmp
repnz
in
fdivrs
or
mov
pop
mov
cmpsb
pop
arpl
fistpl
mov
push
je
sti
jae
popa
int3
inc
movsl
mov
testl
push
xchg
mov
and
adc
fidivl
pop
std
std
jle
daa
lret
loopne
shl
out
mov
out
scas
popl
or
xor
aaa
push
mov
and
jp
mov
cmp
hlt
lret
jmp
or
divl
inc
fnstsw
enter
pop
mov
aas
mov
dec
lock
cmp
push
outsb
and
cmp
je
push
sbb
xchg
es
mov
xor
mov
out
shll
pop
arpl
push
xlat
out
sbb
sbb
mov
fs
in
xor
xchg
mov
outsb
lods
and
push
cs
std
push
outsl
dec
fdivl
mov
cmp
dec
lds
xlat
idivb
lock
jle
sahf
mov
dec
ljmp
data16
inc
stos
out
lret
adc
movsb
popf
xchg
iret
ja
stos
sbb
sbb
mull
inc
jne
push
cwtl
push
pop
mov
jno
int3
fistps
jne
cmp
imul
pop
xchg
sbb
xor
mov
mov
mov
xlat
dec
imul
loopne
addr16
in
fmul
adc
and
sbb
or
mov
in
pop
dec
insb
or
lock
jno
inc
jg
pop
stos
mov
adc
das
cs
popa
popf
arpl
mov
or
mov
pop
loop
test
push
xor
in
call
inc
sub
jmp
pop
sahf
push
adc
pop
push
cmp
mov
scas
negl
lcall
push
mov
mov
popf
cmpsl
faddl
sbb
cmpsb
cltd
dec
xchg
leave
push
pop
ret
clc
test
jmp
jnp
sbb
imul
inc
dec
dec
stos
add
xorl
ss
xchg
adc
mov
dec
mov
jmp
pop
imulb
std
mov
jne
sahf
xchg
mov
xor
add
je
push
dec
dec
sub
dec
xchg
test
adc
inc
into
cmp
jo
fs
cwtl
repz
sub
scas
cmp
rorb
or
loopne
mov
aaa
dec
aad
sub
inc
bndstx
mov
cmc
incb
mov
fsubrl
mov
add
pop
dec
stos
add
pop
orl
push
lods
repnz
sbb
dec
sahf
sbb
stc
mov
push
ret
iret
das
add
adc
mov
xchg
faddl
sbb
mov
adc
cltd
push
cwtl
sbb
jns
lahf
cmp
or
cmp
jge
adc
pop
push
fadd
adc
pop
in
pop
jg
loope
addb
xchg
sti
sbb
movsl
out
jne
push
sbb
sub
cmc
rclb
sti
add
inc
and
mov
xorb
mov
mov
mov
dec
les
xor
cmc
xor
aas
sub
push
sbb
mov
mov
jmp
insl
inc
xor
les
lret
lock
or
lods
xlat
stos
dec
adc
and
mov
xchg
or
inc
xor
test
out
push
mov
in
jno
mov
lcall
or
jno
scas
rdtsc
xor
outsb
sbb
out
mov
mov
pop
repz
add
dec
fimuls
push
aaa
roll
addr16
repz
mov
dec
mov
imul
lods
pop
mov
inc
push
push
bound
negl
stc
stos
pop
fs
fs
xor
pushf
cmp
and
out
push
xor
nop
jecxz
mov
int3
cmp
int
call
or
pop
leave
out
rcpps
cld
pop
mov
jae
lea
mov
fildl
and
lret
test
xchg
add
adc
popa
clc
sub
repnz
in
lea
fdivrp
fs
inc
mov
movsb
push
sub
leave
cmc
pop
aas
jg
popa
adc
loopne
shrd
xchg
ljmp
sti
sbb
sbb
jb
cmpsb
jle
and
jmp
pop
xchg
xor
adc
push
push
jp
xchg
push
inc
leave
mov
stos
inc
scas
jnp
xlat
push
repnz
xor
subl
div
outsb
adc
cmp
ja
and
sub
rcrb
sub
insb
cmp
mov
fldt
out
jmp
inc
ja
lcall
scas
lods
jno
jp
es
rolb
stos
xor
sahf
mov
cmp
adc
mov
out
int
sub
aad
les
out
sub
ss
cwtl
cmc
das
jle
das
sub
pop
jmp
pop
pop
daa
and
fildll
sbb
stos
into
dec
dec
mov
cmp
mov
add
mov
lea
loopne
mov
scas
cli
mov
test
xor
and
xor
lods
xchg
cmp
push
call
iret
pop
lods
inc
pop
jl
std
imull
push
xchg
dec
mov
scas
jge
adc
fstps
inc
roll
loope
xor
xchg
xchg
add
xchg
push
mov
push
pop
push
in
mov
mov
ficoms
je
adc
lcall
outsl
popf
imul
mov
mov
dec
imul
jne
xchg
je
sbb
shll
mov
push
xchg
popa
mov
in
lods
fidivrs
out
dec
mov
cmpsl
fstp
imul
out
imul
jne
add
jne
sub
push
dec
lds
mov
inc
pop
fnstcw
xor
xchg
or
pop
sahf
xchg
inc
adc
xchg
xchg
sub
push
jo
push
dec
icebp
mov
aas
stos
leave
dec
lods
mov
inc
dec
mov
and
ret
pop
in
ds
shll
aam
xchg
lea
sub
or
cmp
iret
push
rolb
es
jno
popf
rol
xchg
cs
stos
xchg
mov
jne,pt
dec
fisubrs
pop
stos
mov
pop
dec
lods
mov
int
mov
jno
incl
loop
in
lock
aad
fdivl
out
mov
dec
adcl
ja
mov
mov
xor
mov
addr16
int
pushf
or
jne
cmp
sub
andb
or
push
xor
sub
mov
mov
fstpt
ret
negl
inc
push
loop
fbld
fidivrs
jnp
jns
cmp
int
or
ret
stos
adc
fs
sbb
adc
das
sub
adc
mov
dec
mov
insb
lret
and
sbb
leave
inc
ret
xchg
loop
add
and
js
fwait
mov
xchg
sbb
stc
push
xchg
add
pop
mov
push
lret
jnp
ss
xor
lahf
jge
movsl
cmc
jmp
sbb
sti
and
dec
sbb
adc
xchg
mov
jge
or
adc
shr
repnz
or
scas
jmp
es
add
fimull
push
push
lcall
mov
scas
dec
and
bnd
and
sub
test
push
push
xor
ficoms
cmp
mov
shrb
add
adc
xlat
xchg
and
push
ja
adc
mov
inc
pop
sub
add
sbb
jae
loopne
ss
xlat
les
jmp
mov
mov
bound
mov
ror
sub
jp
mov
jo
add
cmp
lret
adc
sbb
movsb
mov
in
and
xchg
add
lahf
mov
xchg
clc
xor
mov
test
pop
icebp
inc
insb
pop
or
popf
pop
leave
push
idivb
mov
xor
mov
add
scas
sbb
mov
icebp
push
mov
ds
ror
push
ret
mov
xor
ror
cmp
and
and
and
jne
push
lea
cs
aam
and
mov
jno
ds
nop
mov
popf
xor
mov
and
jb
dec
push
mov
sub
loop
sbb
mov
inc
rol
mov
push
jb
mov
mov
pop
sbb
inc
pop
ss
ret
mov
sbb
add
imul
movsl
inc
rol
xchg
in
pop
aas
mov
lock
xchg
int
jnp
jecxz
outsl
sub
aaa
sbb
dec
mov
sbb
or
daa
sahf
add
jb
cmp
add
ljmp
adc
mov
out
add
shll
mov
aad
shld
fldt
jmp
add
jge
daa
adc
movsb
les
cltd
loopne
adc
scas
xor
adc
xchg
stos
div
daa
adc
dec
pop
out
inc
mov
scas
in
add
insl
fisubs
pop
pop
jae
lcallw
mov
jb
rolb
adc
repnz
jae
lock
mov
jno
fdivs
mov
jne
cld
push
push
scas
cmp
stos
mov
or
mov
shlb
fadds
jbe
xor
add
pop
int3
and
lret
ret
aam
add
xchg
mov
int
ret
ja
adc
sbb
pop
dec
out
dec
imul
dec
adc
or
lods
gs
xchg
andb
push
mov
pop
pusha
jge
js
cmpsl
mov
mov
mov
sub
jg
pop
or
test
push
sbb
and
and
push
adc
mov
xchg
adc
xchg
shrl
jg
mov
jp
pop
mov
dec
sbb
adc
cmp
mov
scas
pop
rcrb
add
sahf
ss
dec
int
push
xorl
in
cmpsb
jbe
sub
add
ja
rclb
xchg
sub
sbb
sbb
movsl
pop
push
aas
mov
sbb
cmp
ja
mov
and
imul
mov
pusha
cmp
cmc
mov
std
shrl
cwtl
fisubrl
lock
jbe
or
movsl
mov
or
pop
lock
dec
dec
shlb
push
xorl
notl
jnp
and
dec
mov
sbb
addr16
xchg
pop
call
sti
ret
cmp
xchg
inc
pop
mov
ljmp
and
ljmp
pusha
sub
out
pop
mov
in
and
sub
push
jp
push
mov
jg
mov
sarl
dec
pop
dec
nop
adc
xchg
push
lret
push
popf
notb
mov
xchg
cmpsb
jne
lds
mov
mov
lea
jle
ljmp
mov
adc
fsubrl
stos
or
js
xchg
push
loopne
into
fwait
ljmp
xchg
xchg
mov
cmpb
add
stos
int3
push
adc
sbb
jno
push
aas
dec
ja
stos
pop
imull
movsl
lock
cltd
jge
fst
lgs
dec
stc
sub
es
sbb
or
jmp
stos
and
sarb
in
pop
in
fldl
sbb
sbb
dec
push
adc
sbbb
in
dec
pop
xor
push
pop
roll
lea
aad
xchg
mov
pop
lods
jge
inc
sub
aaa
pop
enter
pop
cmc
inc
jp
mov
mov
clc
fimuls
stos
and
aad
xor
popf
jp
inc
in
jle
scas
cmpsb
js
push
incl
adc
insb
out
cmp
movsb
jmp
xor
adc
stos
dec
les
inc
pop
mov
testb
xchg
pop
aaa
mov
dec
add
mov
ret
lds
fwait
sti
mov
daa
test
loopne
or
adc
fnstcw
sub
or
push
in
pop
xor
and
ljmp
xchg
lret
loop
push
or
pop
iret
jmp
fnstsw
mov
jl
lahf
pusha
mov
nop
cs
rorl
sub
mov
adc
pop
int3
xchg
xor
and
movsb
repz
addr16
adc
lret
js
shr
mov
jmp
daa
out
jo
mov
call
mov
mov
sbb
push
addr16
mov
xlat
pop
adc
in
dec
push
rcll
ret
cmp
xchg
mov
inc
flds
adc
inc
xchg
enter
aaa
addb
dec
and
rcll
xchg
push
clc
dec
iret
xchg
xchg
inc
cmpsb
push
mov
fldl
into
in
into
pop
clc
aam
fisubl
pop
mov
test
fwait
push
ds
xchg
out
xor
xchg
mov
dec
push
pop
ljmp
test
insl
popa
jmp
aas
mov
xchg
pop
mov
ret
pushf
or
cmp
sub
fcompl
sub
push
pop
leave
push
pusha
out
pusha
shrb
push
negl
sti
mov
dec
negl
cmp
sbb
popf
ja
jp
test
adc
or
fidivs
icebp
inc
lock
jae
mov
push
jp
arpl
xor
sbb
mov
inc
into
sbb
popa
out
mov
jno
xchg
xchg
aam
in
je
insl
push
add
mov
sub
pop
popf
xor
and
loope
pop
in
xchg
enter
xchg
adc
sbb
dec
add
loop
jle
inc
idiv
lahf
pop
xchg
or
test
imul
fwait
pop
adc
sarl
lret
xor
xor
out
dec
adc
fstpl
daa
jnp
fs
insl
in
or
int
int3
jg
jge
je
ljmp
int
std
aaa
ret
lahf
mov
push
cmc
push
mov
sbb
dec
mov
mov
xchg
test
iret
sarl
cmp
in
dec
adc
cwtl
cmp
sbb
and
mov
and
mov
mov
mov
dec
adc
xchg
fmull
pop
mov
mov
cmp
aam
inc
and
push
dec
movsl
mov
mov
aam
popf
shr
jne
push
mov
dec
mov
jnp
in
mov
nop
or
cmp
je
jl
push
fistps
xor
in
mov
sbbl
add
fmuls
cmp
sub
call
out
ljmp
into
or
jmp
fwait
pop
add
push
mov
jno
repz
dec
int
loopne
xor
ret
mov
inc
bound
inc
call
jns
cmpsl
aas
adc
dec
aas
xchg
ret
mov
xchg
pop
movsl
jg
fiaddl
movsl
test
cwtl
loop
out
adc
mov
lret
fs
mov
mov
sti
cs
lret
insl
sahf
fsubr
pop
xor
pop
jnp
std
cmp
sub
push
add
cli
popa
das
insb
xor
repnz
mov
add
stc
hlt
add
loope
jge
into
in
cmp
lea
or
es
pop
ffreep
shrl
rclb
mov
dec
push
orl
adc
outsl
in
cmpsl
mov
push
outsl
idivb
repnz
xchg
xor
fiadds
mov
pop
and
pushf
cs
mov
loope
mov
dec
sbb
dec
sbb
and
cmc
xor
dec
inc
inc
add
shlb
adc
sub
inc
mov
inc
xor
jecxz
push
cmp
jp
out
adc
fimuls
repz
fcmovne
xchg
cmp
sbb
fbstp
push
push
inc
mov
imul
iret
mov
in
das
loope
dec
rcrl
add
arpl
inc
outsl
mov
cmp
adc
dec
sub
add
sbb
cltd
sbb
rorb
mov
sub
aad
or
lds
lcall
outsl
mov
pop
repnz
dec
and
xchg
and
jno
and
sub
lret
das
push
mov
xor
aaa
dec
adc
jecxz
adc
loopne
and
fistl
imul
jecxz
ss
cmp
jns
and
scas
inc
sti
mov
fs
jnp
lods
je
add
xchg
xchg
cltd
inc
mov
mov
clc
push
push
negl
xchg
mov
xor
xor
into
xchg
arpl
push
cmp
stos
jge
sbb
add
xorb
xor
fsts
bound
aaa
xchg
iret
cmp
shl
cmp
cmpsb
mov
ss
mov
subb
jmp
iret
pop
fcomp
sub
dec
lret
enter
cs
inc
or
test
mov
arpl
push
jne
in
imul
and
dec
test
out
xor
stos
cltd
mov
push
dec
arpl
mov
call
push
push
shlb
push
xor
and
stc
mov
mov
orb
cmp
aam
mov
or
and
dec
dec
add
mov
pop
push
nop
je
push
fidivrl
imul
and
loopne
lock
cmp
and
and
add
sahf
sbb
xchg
cmp
xor
sbbb
stos
test
aas
push
pop
sbb
mov
jmp
sbbb
dec
and
sub
pop
out
xchg
adc
xchg
fidivs
xchg
popf
add
pop
or
adc
add
lahf
jp
repnz
daa
add
inc
cmc
jo
shr
cmc
ret
bnd
lods
mov
or
lods
adc
sbb
out
addr16
sbb
ja
dec
fmuls
cs
cmpsb
push
and
rcrb
add
sbb
add
dec
xchg
sub
and
xor
xor
insl
mov
sbb
xor
xchg
lock
insb
sahf
pop
push
dec
dec
jge
clc
in
and
lds
xor
in
cmpsl
test
mov
dec
pop
loope
aaa
mov
sti
enter
inc
mov
movsb
jns
int
xchg
sub
out
cmp
das
rolb
sub
outsb
xchg
scas
dec
mov
jl
and
data16
and
hlt
fnsave
pop
adc
pop
enter
lea
andb
add
rorl
leave
pop
ss
incb
test
loopne
rcr
push
inc
clc
hlt
lahf
or
cmpsl
mov
lahf
mov
push
ss
mov
imulb
jge
std
dec
inc
loopne
mov
into
cltd
lods
and
mov
push
jae
into
sub
outsl
push
shll
imul
vcvttsd2si
jmp
pop
outsl
dec
sbb
fabs
mov
aas
pop
lret
and
and
imull
in
sub
jge
pushf
sbb
or
test
push
mov
xor
add
inc
adc
mov
shlb
and
xchg
jp
cmp
ss
mov
push
in
sub
fsubr
mov
push
jge
lcall
inc
dec
adc
cmpsw
mov
sbb
les
je
loopne
jnp
push
jle
divl
inc
aaa
test
or
in
cmpsb
js
sub
xor
lods
push
push
lds
push
jno
testb
popa
sahf
jno
cmc
bound
pop
pop
cmp
and
loopne
fadds
fildll
add
cmpsl
ljmp
dec
sub
jo
inc
stos
rcl
and
xchg
testl
stos
adc
fcomps
and
lret
pop
cmp
push
icebp
and
xchg
stc
mov
mov
lcall
mov
dec
in
pusha
jmp
mov
test
pop
hlt
jbe
repnz
mov
repnz
xchg
data16
dec
mov
fstpl
dec
inc
push
sbb
mov
int3
into
pop
jbe
xor
sbb
pop
sarb
loope
fwait
cmc
rolb
shlb
jp
das
and
adc
adc
mov
popa
nop
lds
cmp
inc
cwtl
and
xchg
aas
pop
das
hlt
movsb
adc
or
popa
mov
aaa
sub
mov
xlat
mov
movsl
rcr
sbb
iret
loope
fiaddl
fldenv
xchg
add
lret
shll
aaa
arpl
cltd
mov
sbb
into
pop
jae
mov
xor
mov
out
shlw
push
bound
add
and
test
loop
jmp
fs
mov
mov
xchg
mov
test
jecxz
ja
push
loope
xchg
mov
jmp
jge
push
push
test
sar
enter
fwait
ret
rcrl
pushf
aad
and
mov
xchg
mov
vmulps
in
jecxz
std
subl
dec
or
adc
push
pushf
xchg
idivb
das
xor
mov
adc
nop
mov
and
push
xchg
enter
repnz
nop
mov
jge
inc
int
out
xlat
jo
cld
dec
int
inc
lahf
fstl
stos
add
mov
mov
test
lahf
popa
dec
sub
xchg
push
jae
xorl
aas
fisttps
ret
xchg
das
loop
pushf
sbb
jecxz
stc
gs
xor
mov
getsec
mov
lock
sahf
fwait
mov
cmp
imul
pop
gs
inc
popa
cli
mov
adc
sbb
mov
insb
or
sbb
adc
aad
daa
sete
paddsb
cmpsb
rcrl
and
int3
sarl
ljmp
scas
jmp
lcall
mov
cmp
add
push
pusha
or
es
jb
lcall
xor
push
dec
inc
pop
jg
ss
addr16
push
cmc
rol
mov
out
pushf
int3
outsl
jnp
mov
shlb
stc
pop
fimuls
addr16
push
jl
jl
xchg
cmp
add
adc
jno
inc
outsb
out
dec
ja
jne
cwtl
push
and
push
pop
dec
pop
xchg
shll
outsl
scas
dec
cld
aas
xchg
push
test
in
sbb
inc
test
test
shll
sub
jecxz
js
mov
mov
add
pushf
or
cltd
aam
mov
mov
pusha
rorl
cmp
into
loope
add
push
cmp
aam
jno
jns
aad
mov
insl
addr16
adc
fistpl
pop
cmp
ss
fcmovnb
loope
cmp
mov
and
add
cmp
mov
cmpsl
sub
movsl
dec
mov
inc
jl
push
imul
and
sarl
outsb
and
outsl
outsb
sbb
iret
adc
push
out
sbb
les
repnz
std
aaa
daa
dec
repz
in
arpl
jae
stos
dec
xchg
sub
dec
mov
push
je
imull
daa
rcrl
adc
lock
and
sub
mov
roll
xchg
cld
sub
insb
mov
mov
mov
adc
jmp
push
aam
xor
xchg
lods
jle
sub
mov
jmp
sbb
inc
lret
loope
mov
movsl
push
and
aam
push
jge
adc
push
rcrl
mov
xchg
xor
int3
jp
sbb
mov
pusha
testl
push
adc
cs
pop
push
sub
add
pcmpeqd
jp
sbb
lods
cs
out
out
adc
repz
xor
fimuls
mov
scas
cltd
cmp
sub
sbb
jl
ret
in
pop
xchg
push
inc
xchg
or
insb
aad
adc
cmp
ret
lock
dec
and
jecxz
mov
sub
dec
pop
mov
enter
pop
push
xlat
loop
shlb
inc
sbb
lods
and
jb
mov
ret
aas
mov
addr16
jno
xchg
into
or
repz
adc
xor
ljmp
mov
les
sub
jp
push
lea
mov
jecxz
xlat
imul
cmp
stos
xor
jle
sbb
and
lahf
in
add
xchg
lock
in
adc
xchg
stos
sbb
mov
in
in
sbb
xor
mov
lods
lods
pop
lret
adc
ja
xor
jge
jmp
stc
bound
or
sbb
mov
push
dec
pop
cmc
sub
and
add
loopne
rcll
lret
test
sti
cmpsl
cli
mov
sti
jg
cld
shrd
rcl
inc
or
jp
sarl
cmp
adc
or
cwtl
fs
bound
fbld
mov
xchg
xor
mov
jmp
in
xchg
mov
push
fmull
xchg
jo
je
fidivl
pop
movsb
stos
inc
push
push
aas
icebp
call
mov
adc
xor
jmp
andl
in
or
push
js
ret
aad
cmc
jbe
inc
fwait
mov
dec
lret
jmp
shlb
xchg
fidivrl
outsb
cmc
cmpsl
dec
add
cld
decl
mov
xchg
ja
rol
mov
sub
dec
subb
pop
enter
lret
push
xchg
arpl
insl
mov
xor
test
jbe
push
adc
jge
mov
ficompl
lock
jp
lock
jae
sar
icebp
enter
or
cmp
es
data16
out
push
aad
clc
inc
out
cmp
mov
pushf
mov
lret
inc
mov
xor
in
cmp
mov
dec
clc
cli
cmp
and
push
pop
inc
iret
scas
rclb
adc
push
push
shrb
insl
in
inc
insb
jmp
fisubl
cli
and
rcr
data16
loop
jp
stc
lods
xchg
daa
dec
jl
loopne
mov
inc
ja
cmp
mov
xchg
mov
cmpsl
xchg
movsb
inc
cmp
outsl
cmpsl
push
mov
pop
adc
icebp
mov
push
loopne,pn
mov
push
sub
out
mov
out
mov
lret
pushl
mov
xchg
push
lods
repz
jae
cmc
xchg
movq
out
add
or
nop
inc
mov
fisttps
inc
jmp
aam
pop
sbb
cs
jmp
cwtl
jecxz
into
and
inc
shll
mov
dec
or
mov
inc
mov
push
and
jecxz
adc
sbb
dec
xchg
mov
xor
int
fidivs
ret
push
popa
mov
rorl
cld
in
fld
add
scas
cmp
int
dec
stos
in
mov
sub
rorb
add
jg
scas
daa
pop
roll
jge
pop
cmp
sub
lods
jae
xor
pop
ret
pop
dec
push
mov
lods
adc
xchg
sar
loop
push
cmpl
xor
gs
testb
mov
pop
lds
lods
out
in
mov
jecxz
mov
idivl
icebp
adc
mov
fadds
jp
mov
inc
jne
bound
pop
lret
dec
sbb
sahf
lret
ss
in
mov
sbb
mov
xchg
push
sbb
adc
mov
out
repz
in
jmp
xchg
jmp
xchg
idivb
dec
roll
or
add
mov
mov
scas
mov
andl
mov
jns
fidivl
sti
mov
in
rolb
pushf
lret
loope
and
adc
jecxz
pop
jbe
in
mov
pop
out
or
lea
jo
mov
jne
sbb
mov
cmp
pusha
mov
cwtl
jno
xchg
aas
pop
daa
and
xor
push
cmp
inc
arpl
jge
adc
sbb
cmpsb
mov
cmpsl
mov
es
aas
test
cld
jmp
ret
jecxz
imul
or
mov
sbb
jae
in
xorb
and
jmp
mov
lcall
inc
xchg
std
xchg
sbb
movsb
jle
add
mov
rolb
add
rdrand
addl
mov
dec
mov
ficomps
xchg
out
cs
xchg
push
pop
out
test
jmp
mulb
and
jnp
movsl
sbb
sbbl
ss
and
ljmp
push
stos
repnz
mov
mov
ja
popf
cmpl
mov
or
stos
stc
mov
loopne
bnd
xchg
leave
filds
movsl
jbe
mov
out
adc
or
ljmp
mov
adc
shl
inc
and
pop
mov
push
loope
jge
test
xor
push
xchg
push
arpl
faddl
sbb
sub
insl
sbb
enter
in
in
xchg
stos
in
sbb
add
adc
aaa
mov
jns
jecxz
fwait
lcall
dec
jmp
sub
or
aas
lods
iret
cs
divb
mov
jo
mov
es
mov
fs
jmp
sbb
mov
into
mov
mov
aas
mov
sbb
lahf
cmp
add
xor
xchg
jle
pop
pop
lret
push
out
pop
pushf
cmpl
insl
lret
push
ja
insl
dec
aam
jmp
sahf
mov
or
addr16
cmpsb
scas
addr16
imulb
pop
orl
sbb
dec
in
cmp
jns
aaa
or
sub
pop
xor
push
filds
std
xor
and
icebp
jp
aad
xchg
mov
or
idivl
lahf
xchg
out
sub
push
ds
sub
push
inc
sbbl
jle
and
test
jg
jns
sahf
push
popf
aad
dec
into
mov
cld
sub
push
fs
mov
loope
mov
add
jecxz
gs
mov
mov
icebp
sub
xchg
add
pop
or
ss
pop
clc
lods
fcoms
xor
cld
imul
inc
les
xchg
inc
sub
scas
xchg
cmp
add
jmp
mov
push
cltd
pop
shl
xor
cmp
leave
xchg
push
pop
adc
iret
iret
fisubl
or
push
ret
out
sbbb
dec
sub
push
sbb
xchg
cmp
lcall
aad
sub
ljmp
rcrb
les
stos
addr16
pop
iret
sbb
xchg
push
xor
dec
pop
pop
mov
daa
roll
mov
dec
test
das
sbb
jle
lods
push
stc
inc
jbe
sub
mov
repz
push
roll
inc
or
push
pop
xchg
push
add
jne
xor
push
xor
push
jae
jmpw
mov
in
loopne
outsb
lret
inc
mov
sbb
mov
stc
or
mov
xor
les
or
inc
insl
mov
enter
dec
fmull
subl
mov
je
insb
sbb
pop
cltd
je
mov
add
fbld
jno
or
mov
mov
jecxz
dec
mov
adc
test
xchg
imul
push
cmp
add
stos
hlt
in
add
sub
pushf
dec
or
inc
ds
inc
and
jo
inc
push
bound
sbb
stos
out
xor
jecxz
cli
dec
pop
jle
das
jo
push
cmpsl
pop
adc
jb
ret
je
or
xor
add
popa
sti
std
and
jmp
pop
and
or
in
aas
cwtl
add
cltd
jle
cltd
ror
cmpsl
push
adc
cmp
mov
fisubl
mov
dec
imul
pop
fwait
pop
jecxz
std
loop
sbb
subl
mov
imul
into
ret
call
sub
shrb
arpl
sarl
ret
jbe
mov
test
jp
push
sub
fistl
or
fwait
push
sbb
sbb
std
sarb
cmp
dec
mov
hlt
mov
dec
test
je
call
push
mov
fcomps
jb
in
cltd
sbb
insb
xchg
dec
outsb
push
inc
std
cld
push
leave
xchg
adcl
jb
adc
mov
je
dec
popf
sbb
cmp
stos
dec
jnp
cmp
dec
mov
fsub
xor
mov
sub
lahf
jb
add
repz
gs
mov
pop
mov
sub
andl
pop
popf
cli
daa
loop
outsl
jmp
fildll
adc
lret
cmpsl
dec
sub
outsl
push
inc
scas
out
jge
pop
sub
mov
dec
and
outsb
xlat
int
sub
out
outsl
and
xor
mov
outsb
stc
sub
adc
pop
repnz
mov
scas
add
cmp
stc
fisubrs
repz
lock
adc
cmp
jbe
dec
mov
pop
pop
in
mov
push
dec
and
mov
mov
pop
sbbl
inc
mov
mov
pop
dec
sbb
sub
popf
add
ret
dec
xlat
mov
push
bnd
xchg
popf
repz
scas
sbb
adc
idivb
sbb
and
xchg
or
outsl
outsl
out
stos
stos
test
mov
cmp
insb
pop
inc
scas
sub
arpl
jo
mov
loopne
cmpsb
fdivrs
jno
rcll
mov
jmp
lahf
addr16
pusha
xor
lahf
sub
xchg
test
iret
jge
ljmp
jno
popf
and
mov
sbb
pop
xor
push
cwtl
mov
pop
iret
jge
mov
add
adc
jl
and
sbb
stos
push
es
sbb
mov
jno
inc
sahf
imul
mov
mov
stc
ljmp
and
push
cmp
cmc
or
mov
xor
cmpsl
cmp
lret
mov
aaa
xchg
xor
test
dec
cs
sbb
sbb
shll
xor
pop
aaa
inc
outsb
inc
dec
push
ds
cmp
cmpsl
sahf
stos
add
and
or
dec
mov
mov
repnz
je
loop
mov
sbb
das
popa
popf
cmp
mov
pop
pop
adcb
mov
jp
xor
lock
pop
cltd
push
mov
es
lcall
push
mov
insb
jle
sub
cmpsb
pop
cs
push
cmp
out
mov
mov
fsubrs
mov
int3
add
mov
repz
loope
dec
insl
cwtl
push
mov
adc
or
pusha
jno
lcall
cli
gs
mov
call
inc
imul
xchg
mov
mov
adc
mov
and
pop
ja
mov
lods
das
loope
push
dec
dec
aas
and
mov
pop
out
jmp
and
and
lods
cmpsb
and
insb
and
xchg
adc
xchg
repnz
or
dec
lock
xchg
jae
insb
cmp
pop
iret
cmp
stc
mov
pop
adc
mov
dec
cmc
repz
xor
hlt
jp
jns
pop
rol
rorl
push
push
push
fdivrs
int3
sbb
dec
std
xchg
jecxz
add
xchg
sti
rorl
cmpl
inc
ja
xor
sub
push
jns
les
fs
rolb
ja
push
lock
imul
les
lock
pop
loop,pn
loop
leave
arpl
stc
or
outsb
call
sub
mov
mov
mov
fdivrl
outsl
clc
sub
jo
lock
scas
xchg
dec
ds
mov
in
std
xchg
dec
out
and
dec
mov
dec
adc
push
mov
or
and
les
mov
outsb
and
mov
xchg
loop
repnz
jae
das
mov
movsl
negb
pop
loope
test
fwait
lret
sahf
xchg
fldt
dec
sbb
add
movsb
fisttpl
push
xchg
orb
pop
jno
ds
das
out
mov
xchg
mov
jb
jmp
or
xor
sbb
dec
sbb
aas
pop
loope
fildl
out
dec
xor
lods
loope
sbbb
ret
in
and
jne
loopne
pop
jnp
mov
mov
les
push
or
push
jnp
scas
nop
test
je
scas
std
sub
int3
addb
mov
arpl
dec
jmp
xchg
aad
pusha
insb
cmp
cmp
jnp
mov
add
shlb
pop
push
ljmp
mov
sbb
sub
jb
and
xchg
push
jnp
aaa
lcall
mov
mov
inc
cs
push
dec
sbb
addr16
fwait
rcrb
jl
fwait
lret
imul
mov
push
and
inc
js
push
fwait
jbe
dec
fcompl
or
push
test
je
mov
stos
jp
inc
add
insb
sbb
push
in
mov
mov
pushf
mov
daa
int
push
sub
fnstsw
ja
add
pushf
inc
xlat
mov
cmp
aas
cwtl
into
push
out
jno
call
ds
jmp
pop
cmp
int3
fisubrs
dec
dec
dec
test
xchg
mull
es
shl
shr
xchg
xlat
xor
mov
ret
lock
std
pop
cltd
push
lret
pop
ss
insl
add
dec
sbb
jmp
insb
sbb
push
jge
cmpsb
lock
or
jge
xchg
sbb
xor
loope
mov
rclb
pop
pop
sub
jle
imul
xchg
je
int
lret
fdivrs
jp
aaa
ret
push
inc
xor
ret
cmp
dec
mov
scas
inc
mov
fdivrl
outsb
pop
arpl
jo
pop
lea
in
loop
call
mov
imul
sbb
popf
test
in
xor
lea
push
test
lret
pushf
outsl
xor
repz
hlt
sbb
cmpsl
aas
pop
jp
iret
leave
or
inc
dec
xchg
test
icebp
ds
sahf
mov
push
pusha
xor
fildll
insl
pop
sbb
sbb
cwtl
cmp
repz
daa
popf
negb
aas
mov
jle
outsl
mov
mov
les
pusha
mov
lcall
or
or
dec
sub
xlat
push
lret
and
test
cwtl
and
dec
or
sub
jae
dec
cmp
pop
push
lret
jmp
add
hlt
pop
aas
scas
jb
ret
jns
adc
sub
lret
inc
or
aaa
xor
fsubr
xor
outsb
and
ds
and
pop
and
push
pop
fcoml
xchg
outsl
cmp
push
scas
add
test
pop
xchg
mov
int3
inc
cli
sti
or
mov
dec
jmp
mov
stos
or
fnstenv
sbb
mov
int3
ss
inc
cmp
popf
add
jo
imul
push
pop
pop
subl
sbb
jle
loop
cltd
xorl
imul
xchg
sbb
std
out
pop
sahf
cmp
repnz
aam
ret
pop
or
sub
cltd
sbb
cli
stos
loope
pushf
and
shlb
fmull
push
cmp
or
ljmp
lret
int3
movsb
fsts
cld
mov
repnz
jae
jp
sbb
leave
mov
cmp
ds
es
cmpsl
cmovne
mov
mov
test
pop
or
xchg
push
int3
and
out
pop
bound
mov
lods
daa
xchg
in
xor
aas
push
arpl
cmp
dec
ss
sbb
fwait
int
pop
push
sbb
push
pusha
rolw
mov
lcall
aam
pushf
or
adc
call
in
dec
sbb
jbe
xor
cmp
push
xchg
sbb
mov
scas
das
jmp
pushf
mov
mov
push
mov
and
xor
or
jae
sahf
push
cltd
lcall
cld
mov
out
inc
pop
jle
fsubr
scas
push
aaa
xchg
cld
negl
and
mov
les
inc
push
pop
in
jnp
popa
fucomip
shrl
nop
dec
dec
mov
mov
pop
add
mov
cld
enter
in
inc
inc
lcall
mov
mov
add
imul
rcl
into
cmp
test
das
push
jecxz
jle
pop
mov
cmpsl
fdivrs
out
pop
xor
in
pusha
inc
js
xor
out
jmp
scas
mov
pop
jo
sub
aad
jle
popa
mov
cmp
dec
sub
lahf
push
sbb
mov
hlt
push
adc
or
dec
lret
push
push
xchg
clc
jp
or
mov
mov
int
inc
clc
adc
es
jae
loop
jmp
out
popf
add
add
inc
push
sbb
es
cltd
mov
add
pusha
pop
fdivr
sbb
lahf
mov
jl
adcb
jl
pushf
sub
mov
push
jge
bound
lcall
adc
xchg
dec
ret
ret
xchg
jl
push
mov
jge
fisubrl
sub
jp
bnd
or
push
cli
mov
ret
enter
mov
pop
pslld
cmp
cmp
stos
and
inc
adc
call
inc
jp
lahf
imul
push
add
fs
xor
test
cld
mov
in
sbb
inc
mov
notb
add
ret
inc
add
mov
xchg
mov
iret
gs
inc
dec
outsb
adc
es
cli
enter
push
add
sbb
jbe
cmp
shrl
fdiv
jmp
rcrb
mov
es
pop
jb
push
mov
pop
mov
ret
lods
ret
lret
mov
icebp
mov
sbb
add
inc
test
test
out
jmp
fildl
into
pop
sub
flds
aaa
mov
xchg
xchg
test
xchg
push
pop
mov
lods
jae
xchg
inc
out
jno
inc
imul
dec
mov
push
xlat
out
inc
sbb
ret
sbb
push
add
adc
hlt
arpl
inc
or
adc
call
sub
in
jns
dec
aam
sub
add
xchg
mov
or
pop
lods
mov
iret
pop
mov
test
mov
ret
adc
stos
out
xor
adc
lcall
lock
or
in
dec
push
xchg
call
xlat
or
jecxz
and
cmpsb
push
imul
lea
or
jns
xorw
xchg
dec
outsl
test
cmpl
icebp
push
push
movsl
jmp
aad
add
mov
sbb
enter
icebp
xchg
loop
inc
test
mov
add
shll
mov
repnz
lret
add
std
inc
pop
fsts
cmpsl
addr16
in
std
mulb
sti
sub
test
adc
and
or
fcoms
pop
fldcw
mov
xchg
fisttpl
loop
mov
insl
icebp
cmp
or
lds
orl
mov
pop
mov
outsl
dec
pop
dec
mov
lahf
fisttps
pusha
movsb
out
fistl
arpl
aaa
int3
xchg
test
scas
sub
inc
bound
andl
stos
out
adc
xchg
or
pushf
outsb
jno
mov
rol
dec
stos
das
gs
outsb
aam
out
dec
jae
lret
xchg
mov
sub
test
cltd
pop
inc
cmp
mov
loope
in
repnz
jb
imull
and
gs
stos
data16
pop
jae
cmpl
nop
jge
ja
cmc
nop
mov
mov
pop
and
sbb
popl
cmp
push
daa
push
push
and
sub
popl
or
or
cld
arpl
test
jp
sbbb
cmpsb
mov
xchg
sbb
outsl
negb
or
and
test
adc
inc
sub
xchg
cwtl
push
sbb
dec
push
rcrb
sub
sbb
sub
cmpsl
push
adc
push
cmp
addr16
adc
sbbl
mov
arpl
sub
or
inc
pop
xchg
movsl
sbb
dec
xor
shll
mov
mov
add
jnp
sahf
add
jae
push
push
inc
cmp
inc
or
push
xchg
dec
dec
dec
mov
and
jns
insb
mov
jo
mov
jge
mov
mov
daa
inc
sbb
iret
shrb
divb
shll
scas
out
xchg
daa
push
push
je
arpl
shll
xchg
sbb
fldt
lods
int
pop
div
lret
out
cli
pop
dec
lcall
fcomps
andb
adcb
inc
or
jns
test
dec
jne
sub
sbb
repnz
pop
int3
dec
adc
and
mov
rolb
aas
insl
in
xorl
imul
and
insl
dec
jl
pop
mov
dec
add
cli
mov
pop
sub
mov
adc
adc
mov
dec
push
cmp
iret
scas
testb
loopne
or
outsl
fstp
pop
xor
int3
push
inc
pop
mov
loop
add
or
xor
ss
mov
and
push
jo
mov
aad
subb
xor
scas
mov
bound
out
stc
mov
imul
inc
pop
push
adc
shll
sub
cltd
pop
and
sbb
xchg
adc
imul
jae
das
mov
aaa
fdivs
adc
nop
and
cmp
stc
adc
mov
sub
loopne
rorl
jle
dec
scas
inc
or
rclb
xchg
std
mov
xchg
jecxz
jl
cltd
pusha
int3
test
das
cmp
leave
sarb
jo
test
dec
adc
mov
lods
or
mov
movsb
dec
xor
jnp
xchg
in
mov
add
lods
cmp
dec
inc
inc
icebp
test
xorb
push
jmp
and
dec
cmp
clc
xchg
mov
subb
sub
add
sbb
adc
fs
ds
cmp
test
sahf
inc
popf
mov
sbb
jecxz
or
dec
sahf
push
js
insb
aam
and
xchg
or
or
pop
xchg
push
out
or
fsts
divb
push
mov
js
xlat
push
aad
imul
lret
adcb
inc
jp
sub
and
pop
mov
xor
insb
cld
jb
lods
cmp
xchg
sbb
xor
fs
ficoml
add
call
xor
cmp
sub
orl
imul
xchg
popf
xchg
mov
jno
jbe
pop
mov
aas
jb
lcall
push
fmuls
xchg
insb
sbb
inc
mov
out
mov
daa
mov
in
jl
push
and
dec
cmp
cs
subb
mov
dec
push
jmp
jb
lahf
stos
xlat
lock
push
inc
les
fstpl
popf
negl
dec
lea
push
popf
or
dec
sub
in
adc
iret
psubsb
mov
sub
pop
popf
xor
lret
test
in
xor
imull
jne
lcall
push
idivb
mov
outsb
mov
push
lock
mov
xor
xchg
push
xlat
subl
rclb
inc
adc
push
xor
sub
mov
fadds
test
mov
ljmp
or
mov
push
mov
jl
add
fnsave
inc
ds
xchg
lea
sbb
mov
or
fldt
jo
cmp
es
or
fiadds
clc
adc
in
add
and
xor
cld
mov
filds
pop
negb
insb
and
sti
ret
in
js
repnz
fbld
fistpl
mov
jle
or
mov
sub
jg
cmp
jns
pop
jecxz
pop
push
push
jnp
movsb
add
hlt
lret
push
and
xchg
in
fs
xor
cmc
jns
pop
inc
mov
fsubl
and
test
in
enter
push
mov
rol
xchg
shll
sub
imull
dec
jmp
adc
and
out
dec
cmc
mov
mov
xor
ss
and
in
cld
mov
jp
les
mov
mov
mov
aas
dec
mov
sbb
popf
test
in
hlt
rcrl
adc
in
mov
aas
decb
xlat
lahf
jbe
push
arpl
dec
in
ss
out
bnd
xchg
popa
adc
lcall
sbb
negl
in
cwtl
insb
cmp
mov
es
cmpsl
call
lret
pop
dec
stos
mov
fcompl
inc
dec
jnp
lret
xchg
mov
mov
xor
push
stc
cwtl
lds
mov
pusha
cs
xchg
push
push
mov
repnz
adcb
pop
pushf
arpl
cld
std
jmp
and
xchg
cmp
sbb
inc
mov
popa
jb
pop
push
cli
add
aad
inc
sti
inc
sbb
imul
iret
pop
xchg
fwait
ljmp
js
and
stos
sbb
jge
fcomps
shlb
xor
movsb
xchg
mov
mov
movsl
add
loope
or
repz
lret
push
lret
sbb
data16
in
sub
clc
inc
sub
and
lcall
inc
mov
inc
pop
fisubl
jo
aam
sub
push
cmc
xor
cs
in
sub
xor
dec
dec
sbb
mov
pop
test
jp
cmp
out
dec
mov
loopne
jb
dec
adc
dec
sub
xor
test
test
sub
jns
adc
mov
xchg
sarl
icebp
jae
xorl
jbe
ret
inc
cmp
lret
xor
out
jo
dec
inc
psllq
add
mov
push
je
mov
mov
je
dec
data16
and
sarl
cmp
xor
scas
out
push
scas
jecxz
ljmp
pop
shl
daa
push
cmpsl
ret
jae
and
xor
lret
mov
pop
jb
lret
out
pop
decl
mov
iret
sarb
mov
shlb
push
aaa
stos
jbe
adc
stc
add
je
imul
push
nopl
inc
dec
pop
and
cwtl
jb
divb
ljmp
sbb
popa
test
mov
test
aas
fistpll
sub
xchg
xchg
stos
add
iret
jo
sbb
lds
mov
aad
sbb
push
jp
bound
lcall
aas
popa
leave
movzbl
jns
dec
jbe
ret
inc
fildl
js
xor
fidivrs
rcrb
filds
stc
fiaddl
adc
mov
push
rol
cmpsb
sahf
dec
in
in
js
pop
fstpl
dec
dec
ds
in
add
enter
inc
gs
inc
mov
fcmovu
sub
hlt
add
rclb
insl
and
in
push
jo
insb
xor
xchg
pop
clc
mull
rorb
fcmovu
sete
sub
scas
xorb
dec
sbb
gs
pop
dec
imul
push
enter
xchg
push
mov
jae
ds
dec
scas
push
or
std
imul
add
jge
insb
cvtps2pd
icebp
lret
dec
iret
pop
test
sub
cwtl
jg
les
sti
cwtl
jp
cmpb
nop
cmp
xchg
lea
test
stos
jecxz
cmpsl
mov
sbb
or
aam
insb
shlb
addl
clc
dec
imul
xchg
cmpsl
sbb
inc
insl
push
dec
push
fnstenv
rolb
adc
js
insb
push
in
ret
dec
xor
decl
xor
and
jbe
dec
inc
xlat
push
mov
or
call
pop
fstpt
pushf
loop
aaa
mov
pop
jg
cmpsb
and
test
fdivrs
mov
sub
add
es
push
pop
daa
les
jl
int
iret
mov
jns
cmpl
sub
pop
popf
nop
adc
jecxz
mov
or
popa
adc
jp
repnz
std
ret
outsb
lret
jno
addr16
test
push
pop
into
outsl
sub
pop
mov
adc
popf
ljmp
lds
inc
sarb
loop
dec
pop
in
mov
stc
outsl
scas
cmc
pusha
jno
mov
cmp
xor
pop
enter
std
pop
testb
mov
insb
or
clc
xor
adc
cmp
sbb
xor
les
sub
jb
nop
adc
repnz
jmp
adc
xor
cmp
rorb
sbb
cs
adc
in
jo
fnstsw
or
cltd
in
rolb
test
sub
fs
and
dec
imulb
ss
out
imul
jle
fnstenv
lock
lods
dec
sbb
inc
sub
cli
push
jp
addr16
out
out
jae
notb
mov
mov
lcall
fldcw
or
daa
in
pop
lea
hlt
sbb
stc
pop
rcrl
fwait
repz
push
call
pop
inc
scas
lret
fwait
rorb
pop
decb
aam
test
and
mov
pop
mov
or
mov
sub
dec
hlt
or
movl
pusha
adc
in
fisubl
xchg
push
notl
arpl
inc
in
loopne
outsb
sbb
inc
sub
ss
adc
xor
pop
std
dec
movl
inc
push
cli
jmp
leave
mov
stc
ret
mov
addr16
outsb
mov
mov
dec
or
xor
or
lods
fs
rcl
addl
xlat
adc
jb
sar
out
ja
adc
scas
shll
in
lahf
inc
into
inc
std
ret
cmp
push
mov
lcall
out
push
sub
adc
mov
and
mov
das
test
sub
inc
popa
cbtw
mov
add
mov
aam
or
ds
inc
sbb
cld
xchg
jns
cmpl
mov
cli
add
call
or
sbb
cmp
jne
adc
test
orb
xchg
or
inc
or
popl
or
fwait
inc
jmp
xchg
and
cmpsl
inc
mov
movsb
jle
xchg
adc
repz
add
xlat
je
movsl
push
jno
pop
xor
loope
mov
xor
jge
inc
dec
out
xor
fsubp
je
add
dec
pop
mov
psllw
and
pusha
rorl
jnp
mov
mov
aad
pop
pop
daa
test
jne
lea
out
rcr
stos
ret
xor
fwait
out
push
or
sbb
mov
mov
adc
xor
test
inc
fsubrs
or
dec
xchg
pop
add
aaa
sub
mov
mov
inc
fcoms
hlt
and
in
cmp
shll
xchg
sbb
or
and
insb
ljmp
out
pop
mov
incb
aam
or
ror
ret
icebp
call
xchg
call
add
rcpps
ljmp
popf
je,pt
loop
lret
and
inc
or
scas
ljmp
xchg
sbb
mov
fs
xchg
sub
pop
mov
adc
or
xchg
inc
in
pop
xchg
xor
mov
popa
scas
fildl
ds
sbb
cmc
cs
aaa
and
mov
movsb
sub
fldt
or
sbbb
lret
pop
jp
pop
inc
adc
inc
cmp
and
lcall
adc
adcl
mov
sub
mov
pop
daa
pshufw
fsubs
lea
mov
dec
add
or
jns
clc
fcmovb
sbb
adc
filds
fbld
popa
scas
mov
or
add
jb
loop
jl
das
or
sbb
and
imulb
xor
imul
bnd
mov
call
push
data16
mov
repz
xchg
cmpl
out
shrb
pop
or
popa
jnp
dec
inc
dec
sub
out
aaa
jnp
aam
cmc
or
and
imulb
out
cs
fidivl
inc
pop
int3
jl
loope
aam
adc
inc
xchg
fucomp
add
xchg
cmp
fwait
aaa
add
jmp
cmp
rclb
dec
ret
gs
add
push
lcall
jl
mov
dec
push
hlt
mov
add
insl
aam
clc
cmp
imul
mov
scas
aad
push
in
dec
addr16
lods
std
push
dec
std
jp
push
lahf
jnp
pop
xor
xchg
dec
sbb
stos
test
mov
in
push
das
inc
xor
or
push
cs
sub
roll
shl
test
arpl
test
inc
and
pop
fistpll
imul
sub
stos
nop
xorb
mov
and
add
aas
scas
xchg
lahf
mov
insl
mov
jg
cmpl
push
and
sbb
inc
js
orl
mov
mov
addl
enter
into
fimuls
or
add
mov
fs
mov
adc
addr16
cli
nop
je
and
push
xchg
sbbl
sbb
shufps
fsub
inc
das
test
insl
leave
dec
jae
mov
inc
cmpsb
movsb
or
add
sub
inc
push
pop
sbb
fdivr
mov
mov
pop
fs
jno
push
cmpl
pop
cwtl
repz
pop
push
subb
std
sub
inc
shll
xorl
adc
xor
dec
stc
test
lahf
mov
push
cli
int3
lret
ret
mov
push
lea
jmp
or
adc
scas
push
lahf
aaa
fistpll
mov
sbb
bound
cmp
cli
out
jecxz
push
xchg
mov
test
mov
lods
test
into
test
mov
xchg
loop
fidivrl
sub
jb
cmp
stc
fs
pusha
xchg
pop
in
mov
cltd
inc
xchg
fidivrs
ss
jno
loopne
or
mov
dec
dec
aas
test
test
pop
dec
or
pop
lods
popf
cld
mov
jbe
mov
scas
rcll
inc
test
mov
xchg
inc
jge
out
or
dec
sti
add
lods
mov
in
test
jo
cmc
sahf
out
divl
loopne
leave
sbb
pushf
ret
sbb
jnp
repz
sub
adc
scas
mov
cmp
xchg
bound
mov
fwait
popf
inc
std
pop
dec
fcoml
ror
les
aam
jno
mov
sbb
pop
pop
imulb
xchg
jne
fs
push
loopne
iret
push
push
aaa
bound
and
insl
cmp
inc
push
mov
hlt
jecxz
sarl
pop
pop
jns
lcall
das
inc
pop
in
leave
iret
push
xor
inc
testb
inc
sub
jg
ret
push
mov
std
ljmp
cld
fidivs
lcall
xor
mov
xchg
push
icebp
out
movsl
fstpt
imul
jp
mov
push
aaa
mov
push
in
jno
jns
push
xchg
out
mov
ret
rcrb
push
movsl
xchg
insl
push
loop
rclb
mov
adc
and
inc
cmp
loopne
adc
lcall
mov
fnsave
ljmp
lahf
movsb
or
imul
and
add
inc
cmp
xchg
cmpb
mov
or
cmp
inc
and
sub
loop
inc
cmc
ja
loop
movl
or
fists
push
lcall
or
daa
mov
lcall
jge
test
sahf
dec
imul
out
clc
xchg
cs
inc
imul
leave
cmp
testl
push
dec
cmpsl
js
daa
push
or
jne
mov
test
push
outsl
jo
adc
mov
push
std
cmp
cs
pop
cltd
push
subb
out
ljmp
decb
lods
jecxz
nop
cmp
push
cltd
xor
xchg
loope
mov
sub
jle
sti
adc
decl
pushf
movsb
pop
insl
imul
push
mov
xlat
xor
xor
dec
and
add
lret
cmpsb
xchg
mov
loop
pop
mov
fnsave
lea
fistps
mov
xchg
imul
sbbb
jbe
outsl
xchg
cltd
pusha
fucomip
xor
lods
int
mov
mov
and
subb
fdivs
lods
pop
mov
aad
cmpsl
lret
and
fsubs
push
out
repnz
lahf
lret
xor
pop
fstpt
ret
push
push
mov
cmp
push
pushf
jp
mov
arpl
in
dec
jl
jl
dec
les
sub
xchg
das
sub
or
fs
push
or
mov
inc
mov
aaa
cmp
mov
jbe
pop
pusha
and
leave
mov
scas
xchg
and
out
leave
push
dec
sahf
dec
sub
or
outsb
in
sub
adc
data16
fdivr
sti
xor
cli
push
inc
xchg
dec
test
cmp
cwtl
insb
push
loopne
mov
jmp
and
and
shrb
add
mov
jmp
enter
out
mov
push
mov
jecxz
sbb
insl
imul
inc
ja
clc
cmpsb
xor
mov
push
push
xchg
or
mov
sub
pop
cmp
adc
data16
lcall
bound
dec
mov
push
and
stos
idivb
mov
or
fldenv
cmp
inc
pop
nop
cmp
adc
inc
xchg
pop
dec
sub
popa
fadds
cmpsb
loope
es
sti
push
pushl
addl
mov
jge
push
pop
mov
dec
jb
or
pop
xchg
gs
jecxz
push
and
or
add
cmp
pop
mov
je
xchg
add
test
pop
pop
iret
pop
dec
aas
mov
cltd
add
pusha
mov
int3
add
or
lret
pusha
push
dec
cli
outsl
ss
daa
cs
fwait
xchg
jo
out
mov
jne
loop
out
xchg
xchg
or
lahf
mov
sub
xor
or
fstl
popa
dec
fcoml
pop
lods
sub
adc
sbbb
mov
ss
dec
movsb
mov
push
add
nop
sbb
cmp
add
add
mov
stos
loop
mov
test
xor
and
xor
cmp
adc
pop
mov
jmp
es
mov
inc
pop
jbe
movsb
ficomps
ja
xor
jl
stos
cmp
inc
jle
push
and
jno
popa
popf
mov
adc
lea
dec
fldl
cmp
hlt
sub
sarb
lds
and
sub
add
repnz
lods
adc
negl
adc
xacquire
cld
mov
frstor
jno
fs
dec
xchg
mov
xchg
mov
mov
mov
in
mov
and
jnp
sbb
dec
sub
mov
xlat
lock
sahf
jge
dec
hlt
or
adc
std
mov
lret
jl
imul
std
in
mov
mov
icebp
lahf
movsl
push
xchg
loope
idivb
and
pushf
adc
gs
dec
push
arpl
xlat
enter
jns
push
ss
dec
dec
jecxz
xor
xlat
lods
inc
jmp
std
and
inc
sub
mov
push
xchg
repnz
sub
pop
imul
popf
jbe
cmp
or
mov
xlat
cmp
nop
pushf
fucomp
mov
inc
iret
ficoms
out
pop
adc
filds
xor
in
imul
jmp
sub
mov
xchg
js
or
sbb
lret
sbb
shr
cld
fnsave
das
in
cltd
sub
ljmp
filds
enter
stc
dec
loopne
lcall
int3
inc
loop
gs
gs
ds
or
call
imul
mov
int
fmull
xor
loop
fsubrl
xorb
icebp
inc
add
jne
pop
add
inc
inc
inc
xchg
jns
mov
sbb
pushf
dec
repz
inc
lods
cld
jb
arpl
mov
stc
add
les
mul
and
sub
and
sti
in
in
pop
cli
sbb
insb
es
data16
mov
ljmp
jo
inc
iret
lea
push
cs
or
rcrb
sub
jp
cli
pop
dec
fidivs
lret
pop
addl
sbbb
dec
push
adc
and
jecxz
rorb
jg
sbb
dec
jnp
inc
sub
xor
xor
ja
pop
movsb
rol
lcall
sbb
loopne
push
cmp
cmp
repnz
repz
push
sbb
adc
je
aam
and
in
pop
fistl
repnz
int
icebp
xchg
xchg
movswl
jmp
lea
cmpsb
and
push
dec
in
jno
pop
scas
mov
mov
push
ret
xlat
mov
xchg
in
inc
mov
inc
and
aaa
xchg
fldt
cmpl
dec
dec
nop
mov
std
sbb
add
lods
aam
add
cmp
xchg
outsb
shrb
call
lock
inc
lods
das
mov
test
sub
pop
jge
pop
test
ss
sbb
icebp
rcr
pop
js
je
mov
out
sbb
jb
mov
cmp
shr
sbb
ljmp
pop
sub
ret
add
dec
dec
pop
gs
out
push
mov
mov
js
shlb
out
shll
xchg
repz
mov
adc
shll
push
mov
scas
sub
loopne
loop
add
lods
xlat
les
mov
cmp
mov
cmp
jbe
fidivrs
push
xor
lods
fwait
or
push
lock
add
sub
stc
push
inc
dec
iret
insl
data16
add
pop
mov
jle
gs
sarb
cs
cwtl
test
sbb
fisubl
mov
push
sbb
jns
jae
push
fcmovbe
iret
mov
push
add
enter
inc
sub
flds
xor
aad
pop
push
aad
cltd
pop
sbb
test
cmp
test
lahf
popf
xor
loope
and
lods
sti
and
out
jg
pop
jnp
sub
shrb
pop
aas
sub
mov
addl
cmpsb
pop
xchg
out
dec
pop
xor
out
loope
sbb
lret
xchg
call
es
dec
xchg
lahf
fdivrs
insl
clc
dec
pcmpgtb
das
ret
adc
lahf
xchg
movsb
aaa
movsb
or
jmp
or
fsubrl
stos
or
cmp
insl
sbb
js
into
lret
add
dec
jbe
ret
lds
subb
sbb
inc
sub
xor
dec
fldl
jp
lahf
adc
sbb
lods
sahf
hlt
iret
cmp
mov
test
leave
inc
push
ret
fadds
jo
lahf
pop
cmpsb
rcll
ljmp
or
ljmp
iret
in
mov
lret
imulb
cmpsl
fs
cwtl
ljmpw
cmpsl
mov
lods
jnp
shlb
movsb
add
scas
sub
dec
push
lock
int3
fmul
sub
bnd
or
push
or
pop
push
aad
dec
push
push
xchg
std
nop
cld
and
push
jmp
push
inc
mov
or
jns
es
lahf
rcrl
mov
mov
mov
xor
mov
adc
push
add
dec
xchg
mov
jg
push
xlat
ret
push
jnp
repz
pop
outsb
pop
or
hlt
jne
sub
dec
sbb
test
push
call
push
xor
imul
mov
pop
sti
subl
js
pushf
enter
jl
mov
test
sub
nop
mov
insl
cmp
cmc
add
xor
add
xchg
nop
imulb
sub
test
jns
test
rol
fs
mov
pop
push
ret
pop
or
fistpl
shll
jp
lcall
dec
pop
iret
loopne
test
jns
shll
cmp
inc
aam
std
xor
aaa
pop
jo
push
sub
pop
jo
mov
add
jae
dec
mov
lods
dec
sbb
push
adc
rol
jmp
call
nop
xor
scas
fwait
push
out
rsm
push
fcomps
jp
xor
sbb
in
je
leave
jl
popa
push
sub
cld
push
adc
call
ss
enter
aam
sbb
xor
xchg
mov
mov
mov
fidivl
out
loopne
jo
int3
aaa
mov
jle
push
cmp
ret
or
pop
es
jge
dec
pop
les
cmpsl
testl
push
faddp
int
push
sbb
test
and
inc
orb
es
addr16
jmp
sub
int3
mov
lcall
pushf
dec
stos
data16
adc
mov
insl
push
repnz
loopne
das
mov
and
lea
push
iret
mov
xchg
jb
lcall
cs
pop
xchg
fs
stc
lock
and
sub
push
loop
lods
jge
daa
std
sub
jg
mov
mov
cmc
xlat
shrb
std
les
mov
pushf
cmp
adc
xor
iret
in
pop
dec
add
aaa
and
cmp
push
cmp
jl
fisubs
movsb
sub
dec
mov
imul
mov
sti
mov
mov
into
sti
stos
push
paddw
into
push
jns
aam
pop
mov
cmpb
pop
fisubl
adc
sbb
sahf
mov
jle
lods
daa
sub
pop
mov
pusha
test
or
or
xchg
lods
push
popw
movsl
lods
imul
mov
dec
mov
xor
test
pop
pop
mov
cmp
sarb
inc
int3
xor
clc
movsl
insl
adc
lcall
andl
sub
inc
or
pushf
or
dec
sbb
jae
and
fwait
dec
loopne
mov
cmp
loopne
or
js
mov
in
je
mov
adc
sahf
lods
pslld
jg
fadds
pop
gs
movhps
add
ljmp
clc
divb
jne
cmp
xchg
repz
in
mov
adc
sub
pop
xchg
push
push
mov
sahf
jl
shr
mov
sahf
cmp
dec
pop
inc
arpl
adc
mov
scas
in
and
xchg
out
sub
add
scas
cmp
jge
pop
lock
cwtl
les
add
out
lea
jmp
popf
add
fdivs
test
inc
sbb
cld
add
cmc
cmp
aas
and
xchg
sub
je
xchg
mov
fsubs
xor
xor
inc
jnp
test
xor
nop
fbld
outsl
mov
mov
fiaddl
jno
or
and
pop
mov
pop
adc
add
mov
mov
ret
dec
mov
mov
rcrb
sub
and
test
push
fcomp
pusha
mov
push
push
jne
pop
pop
mov
ss
sub
adc
cmpsl
iret
push
xchg
iret
nop
out
insl
icebp
sub
mov
cmp
lahf
pop
and
fldcw
jo
int
mov
mov
insb
lahf
fistpll
push
loop,pn
mov
cmp
jle
mov
fistps
mov
fidivs
in
jg
aad
adc
inc
push
dec
cltd
call
pop
and
mov
xchg
leave
and
adc
enter
push
lret
aam
adc
ljmp
add
cmc
fildl
pusha
jmp
sarb
sbb
push
insb
pop
shrb
not
push
or
mov
mov
outsl
inc
cld
inc
aam
and
push
fcmovnu
mov
bnd
arpl
pushf
dec
clc
je
nop
aad
pusha
fs
es
fists
outsb
in
es
push
mov
add
push
outsl
and
jno
push
scas
jnp
aam
in
push
mov
xor
outsl
lahf
nop
jns
or
sbb
dec
clc
and
dec
mov
mov
arpl
xchg
mov
pand
pusha
std
add
adc
xchg
jecxz
add
popa
xchg
pop
add
mov
lea
xor
or
cwtl
out
arpl
cmp
stc
dec
cmp
sub
jb
rcpps
add
mov
dec
shrl
mov
daa
xchg
cltd
adcl
and
xor
cli
mov
shlb
sub
pop
dec
in
sbb
sbb
sub
in
xchg
rcrl
popf
fidivl
jg
jge
insl
test
imull
add
adc
int
pop
int3
push
js
adc
jne
dec
adc
xchg
push
cmp
push
sti
in
rcrl
outsb
shl
cltd
sahf
data16
sbb
push
lea
add
jmp
mov
mov
and
push
xchg
jmp
pusha
scas
add
or
cmpsb
imul
stos
repnz
scas
jne
sbb
pop
and
cli
and
jae
jne
movsl
jnp
xchg
add
mov
push
mov
add
xchg
inc
inc
ss
push
inc
pushf
ret
data16
cmp
filds
xchg
fidivrs
pop
test
movsb
lock
movsl
fwait
adc
rcrl
subl
or
sub
lret
cmp
mov
fcoms
pop
pop
mov
loope
adc
push
dec
movsb
scas
test
dec
mov
or
int
dec
and
ljmp
cmp
ret
cmp
mov
sbb
loope
jp
pusha
mov
dec
mov
jecxz
fildll
push
cmp
inc
fidivrs
xor
movsb
js
rorl
scas
andb
push
pop
in
jge
leave
in
push
inc
es
addr16
dec
push
adc
mov
fidivrl
inc
push
pop
outsl
add
inc
jl
iret
push
push
test
cs
repnz
push
out
mov
cmpsb
xorl
push
bound
fnsave
sbb
mov
pop
into
bound
inc
xor
test
mov
mov
pop
lock
lea
or
jle
flds
sub
fimuls
stos
sbb
xor
or
jecxz
push
stc
add
mov
dec
ja
nop
lods
cli
or
fadds
aam
loopne
cmovl
in
add
cli
pop
imul
das
insl
mov
dec
jb
jo
loop
or
jae
or
fmull
pushf
adc
cli
shll
loop
out
xchg
call
jle
push
jmp
lods
push
repnz
push
adcl
sbb
lahf
cmp
xor
fistps
mov
sarl
cmpl
pusha
xor
test
push
adc
pop
shrb
test
punpckhdq
incl
add
adc
lds
mulb
test
xchg
enter
ljmp
jecxz
cmp
vsubsd
lahf
jnp
imul
in
clc
xlat
jno
push
xor
mov
sbb
xchg
cmc
adc
inc
inc
jmp
lahf
into
lahf
inc
and
aam
mov
mov
pushf
push
into
push
fmull
mov
dec
push
inc
or
xchg
mov
sub
rcrl
bound
adc
adc
cwtl
negl
adc
clc
push
xlat
call
and
rcll
into
cmp
fwait
or
test
pop
into
and
inc
dec
repz
jno
sub
or
leave
icebp
sub
dec
mov
inc
test
out
bound
and
sub
add
pop
add
push
mov
sbb
sbb
jns
loope
sbb
mov
clc
cmpsl
daa
cmp
repz
out
mov
stos
mov
call
mov
xchg
inc
shlb
jmp
jmp
lret
add
sub
data16
push
xchg
cmp
mov
lahf
dec
cmc
mov
jmp
sub
into
pop
or
psrad
iret
popa
leave
test
jnp
adc
inc
sbb
hlt
test
cmp
shlb
adc
iret
js
mov
inc
insb
test
dec
mov
int3
xor
sub
and
into
jle
sub
cs
ljmp
test
mov
dec
leave
push
jge
jae,pn
mov
fwait
cmp
stos
jbe
mov
in
sbb
dec
dec
push
sub
cmp
add
add
ds
adc
push
mov
pop
imul
pop
lahf
stc
inc
mov
sbb
pusha
bound
das
sbb
loop
jnp
xlat
lret
pop
push
mov
data16
scas
push
cmp
jmp
pop
jecxz
out
out
scas
cmc
popf
jae
es
add
or
adc
in
pusha
and
jae
aaa
pop
adc
sub
add
into
xor
repz
cmc
cld
add
or
inc
sub
or
sar
jbe
cld
dec
pop
adc
or
jns
or
sub
inc
push
loop
xchg
push
arpl
insb
cs
fsts
mov
or
adc
pop
mov
insb
sub
xor
mov
mov
adc
lcall
push
ja
ret
mov
pop
add
aam
add
jo
mov
fdivl
pop
mov
hlt
movsb
push
into
jmp
dec
cs
xor
cld
jle
sbb
mov
call
xchg
cmp
fwait
xlat
sbb
push
mov
sbb
mov
ljmp
and
ret
icebp
mov
pop
shll
and
stos
pop
shlb
fsubrl
shrb
mov
cmc
push
into
push
push
mov
lods
or
mov
sbb
loope
fcmove
insl
dec
imul
mov
ljmp
cli
push
push
aas
add
stos
mov
test
jnp
pop
sub
loop
mov
xor
jge
inc
jo
jmp
jne
mov
bound
addb
pop
dec
test
mov
outsb
test
iret
mov
pop
sub
iret
inc
xchg
jno
test
jecxz
cmp
shll
enter
scas
adc
inc
inc
push
lods
adc
data16
divb
cld
aas
hlt
xor
and
mov
ror
add
mov
inc
fcmovu
enter
jo
push
dec
adc
adc
movl
mov
mov
cli
push
loopne
js
jo
pop
mov
imul
add
cmp
sbb
xchg
xor
loop
mov
test
bound
fwait
add
push
pop
in
iret
xchg
inc
or
xor
addr16
sub
pop
fcoml
sbb
loope
mov
pop
inc
rcrb
out
sub
roll
int
pusha
cmpsl
gs
pop
lret
sti
bound
xor
insb
mov
out
mov
inc
stos
stos
out
mov
je
jnp
mov
dec
adc
loop
mov
inc
xchg
cmpsb
jae
sbbl
sub
push
jg
inc
or
push
inc
push
jmp
cwtl
dec
push
inc
jne
ja
shll
in
mov
je
out
cmp
insl
fadds
xor
out
or
call
repnz
js
dec
pop
dec
xlat
jmp
xor
movsb
test
and
dec
andb
ljmp
outsl
mov
mov
outsl
aad
out
mov
in
je
pop
rcll
leave
stos
ret
mov
out
mov
push
fistpll
adc
mov
xchg
inc
xchg
shl
les
and
mov
lcall
push
push
adc
sahf
pop
pushf
leave
push
shl
iret
test
loopne
ss
out
in
xor
inc
mov
imul
cmp
pop
cltd
std
fisubl
les
repz
outsl
sbb
or
or
fistl
mov
mov
xlat
insl
out
and
mov
leave
test
and
jns
vpsrld
mov
jnp
inc
xor
cmp
mov
mov
daa
add
loopne
mov
scas
fs
xor
in
outsl
ljmp
sub
jbe
cltd
test
fists
jle
scas
jl
mov
shlb
test
aam
loop
jae
cmp
ret
pop
push
mov
adc
jp
jae
xchg
xchg
lods
sbb
pop
or
xchg
cmpl
pop
imul
cld
call
sahf
add
repz
mov
or
adc
jmp
inc
cmpsl
in
mov
cmp
pop
or
cmpsl
or
cmp
repz
mov
sbb
pop
fs
fcomps
cwtl
push
mov
movsl
loop
stc
lock
popf
dec
test
std
mov
fsts
in
fcmove
in
scas
adcb
sarl
cmp
xchg
mov
push
inc
ror
adc
mov
pop
sbb
mov
lea
sbb
and
mov
mov
mov
xchg
dec
enter
in
jg
cmc
call
les
xchg
cmpsb
push
ret
add
push
or
data16
or
cmpsl
insb
jne
subl
dec
jb
clc
int
inc
fdecstp
push
test
pop
dec
rcrb
aaa
fcoml
loopne
leave
inc
imul
cmpsl
clc
xchg
pushf
jmp
test
leave
adc
push
adc
loopne
xor
inc
mov
xor
sahf
pop
insb
out
mov
mov
xor
dec
outsb
dec
xor
ja
cmpsl
addr16
xor
dec
lds
mov
hlt
in
jbe
add
icebp
shrb
jns
adc
add
xchg
cltd
stos
sbb
and
hlt
enter
repnz
or
int
ffreep
std
imul
add
fsubl
add
rcrl
repnz
enter
mov
xchg
outsl
mov
lock
gs
and
inc
stos
scas
xchg
imul
pushf
pop
sub
js
cmc
sub
icebp
in
stc
js,pn
mov
loop
orb
stc
and
sbb
int
cmc
je
push
cmp
mov
push
mov
fadd
push
scas
iret
lret
jmp
popa
aad
pop
pop
push
lahf
or
push
jno
dec
cmp
pushf
imulb
notb
pop
or
enter
adc
aaa
push
add
jo
ss
mov
test
pop
mov
cmc
xor
adc
adc
insb
movsb
popw
adc
push
mov
cmc
xchg
push
push
mov
fcoml
and
je
andb
pop
push
push
test
scas
js
pop
aas
xlat
mov
loope
sub
fldt
push
cmpb
mov
inc
jnp
mov
xor
mov
pop
xchg
xchg
ljmp
dec
sbb
push
push
aaa
and
repnz
pop
jnp
cmp
jne
enter
mov
jb
mov
or
mov
mov
pushf
filds
add
loopne
cltd
fbstp
mov
mov
pop
repz
shr
and
cld
push
scas
dec
pop
adc
pushf
je
cmpsl
daa
xor
pop
nop
jo
cltd
and
jns
sbb
popa
scas
repnz
jl
dec
loopne
sub
mov
xchg
pop
add
adc
das
mov
out
inc
mov
add
jno
icebp
cltd
push
mov
out
lods
adc
dec
negb
out
sub
les
data16
dec
push
aad
xlat
add
or
mov
jno
adc
stc
inc
dec
sub
imulb
cmp
daa
sub
ret
int3
sbb
cmc
sub
lds
pop
pop
inc
bound
aas
sub
push
jae
push
dec
jg
dec
shrb
mov
cs
add
or
sbb
inc
jp
jne
fwait
inc
pop
xchg
mov
repz
lret
out
pop
pop
jmp
xlat
jl
jl
xor
jge
sub
out
pop
and
addl
test
sbb
mov
sbb
push
negl
les
xor
aaa
jb
ljmp
xchg
sti
je
add
cmpsl
adc
into
jno
fiaddl
bound
rcll
mov
test
addb
push
cwtl
sbb
dec
push
inc
xor
into
fst
in
xchg
in
mov
and
test
loop
xor
xor
ljmp
shll
imul
push
dec
ficompl
sub
lods
push
dec
fnstsw
or
push
insb
ds
cmp
loop
sub
xchg
xchg
cld
es
fisubrs
xchg
out
mov
cltd
xchg
pop
jno
cmpsl
jl
adc
aas
and
lcall
adc
hlt
jecxz
hlt
sub
gs
sub
mov
test
test
insl
or
jg
cmp
xlat
add
addr16
sub
lock
out
ret
xchg
dec
movsb
fldcw
or
out
out
rcrb
arpl
stc
sbb
mulb
shll
outsl
adc
notl
je
push
add
sub
lahf
push
jge
dec
sub
ror
and
shlb
mov
fsubs
mov
mov
cli
jge
call
lret
pop
fldenv
xor
pop
sahf
in
nop
dec
insl
xchg
push
push
mov
push
popa
sub
jmp
jecxz
ficomps
jne
aaa
or
in
jne
inc
lahf
pop
inc
sbb
xchg
loope
int
outsl
call
sahf
mov
mov
and
sbb
je
xchg
add
fmuls
or
push
jl
arpl
inc
fimull
adc
jmp
cmp
fsubrp
mov
xchg
test
jno
mov
rorl
ds
xor
lret
or
std
pop
leavew
in
shrl
mov
lea
mov
jno
inc
and
fimull
mov
jae
dec
popa
sbbb
pop
lock
sub
lock
jecxz
popf
jnp
fcmovb
fldenv
jp
mov
push
push
adc
dec
sub
jge
sub
addb
pop
xchg
push
sub
mov
rcl
sub
sbb
pop
mov
add
xor
mov
aas
je
xor
or
pop
mov
push
mov
push
loopne
das
xchg
aam
inc
mov
and
rolb
cmp
jge
scas
xor
sub
negl
outsl
test
cmpsb
test
cs
add
test
adc
inc
sahf
xchg
xchg
xchg
push
lods
test
shr
jo
loop
lcall
adc
dec
sub
jnp
fs
es
ja
inc
mov
dec
cmp
sub
pop
mov
mov
pop
inc
jg
out
loope
pop
lods
pop
add
pop
xchg
lret
xchg
into
pusha
aad
icebp
roll
jmp
mov
push
dec
je
sub
mov
add
cs
enter
sarb
sbb
push
int
cltd
xor
call
xchg
aaa
outsl
mov
gs
fnsave
cmpsl
cli
inc
icebp
jge
movsb
add
bound
cmp
jp
fs
jecxz
push
mov
jbe
jb
sub
push
popa
aad
pop
xchg
sbb
ficoml
adc
aas
fs
dec
hlt
cmp
jmp
inc
test
dec
sub
or
push
shrl
movsl
lods
push
test
lods
sub
jl
pop
stos
and
jge
push
aam
xchg
test
call
cld
dec
jl
popa
or
ss
xor
test
repz
stos
insl
mov
fiadds
lret
adc
scas
dec
jge
xchg
fcmove
arpl
add
dec
mov
mov
shl
sbb
shrl
in
add
daa
sbb
add
adc
mulps
jbe
out
enter
insb
xchg
mov
pop
add
mov
div
jge
cld
dec
push
aaa
and
dec
in
fcmovne
popa
mov
inc
jmp
cmp
jne
imul
lret
adc
jne
js
mov
fisubrl
rorl
pop
rorb
stc
mov
cmp
inc
or
pop
pushf
daa
movsl
inc
jns
push
xor
daa
int
mov
cld
sbb
pusha
out
jbe
in
mov
sub
pop
fstcw
push
les
call
movntps
jns
rcrb
push
mov
std
dec
arpl
negl
je
scas
sub
fiaddl
clc
in
xor
cli
inc
xchg
and
or
dec
push
or
xor
dec
mov
inc
sbb
sbb
fwait
cmp
jae
daa
shlb
pop
inc
out
ret
adcl
std
divb
jmp
aaa
jae
jo
mov
shrb
ret
in
xchg
fwait
cmp
sub
into
push
cmp
push
jg
push
and
sub
mov
jno
and
imull
pop
inc
push
or
mov
jle
insb
sbb
dec
mov
and
sub
mov
xor
pop
jns
addr16
outsl
ljmp
sbb
lea
push
sahf
mov
aam
jecxz
adc
sub
push
pop
gs
repnz
pop
xchg
aas
mov
fptan
push
daa
mov
xchg
lods
loopne
inc
jbe
mov
push
sbb
ss
pop
push
pop
jne,pt
sub
xor
fstps
cmpxchg
fcomps
decb
sbb
cmp
lods
xlat
push
jo
scas
lea
xchg
test
aam
fcoml
cmp
int
xor
nop
sub
sub
mov
jp
les
ficomps
push
jbe
push
jmpw
in
inc
pushf
rorl
or
dec
cli
ret
ja
push
jecxz
xchg
pop
jb
jge
in
test
outsb
pop
int3
and
or
adc
adc
je
dec
dec
adc
mov
cmpsb
je
int
mov
outsb
into
xchg
and
mov
lods
xchg
adc
dec
imul
dec
fisubl
mov
jg
push
stc
cmp
pusha
cltd
pop
jge
jmp
mov
mov
sahf
push
shlb
pusha
movsb
add
mov
es
ss
insb
in
sub
and
cmp
push
inc
fwait
cmp
mov
lods
sub
mov
jne
mov
and
aad
xchg
je
cmpsl
mov
flds
mov
mov
loope
jge
xorb
lret
mov
xchg
mov
add
cs
fcmove
mov
imul
fcoms
lret
roll
aaa
mov
aas
add
cmp
popa
push
lret
jbe
sti
gs
push
push
mov
nop
dec
out
leave
add
sbb
sub
insb
dec
pop
or
int
in
lret
int
addb
jnp
outsb
insb
jno
add
mov
sbb
mov
dec
mov
xchg
arpl
lds
jge
xchg
push
popf
or
mov
frstor
mov
jl
push
outsl
outsl
aad
xchg
inc
sbb
ljmp
es
scas
cli
push
ljmp
test
adc
mov
xchg
inc
pop
jge
repnz
mov
stos
movsl
arpl
jmp
xchg
ds
push
aaa
lret
sub
adc
icebp
out
ss
mov
mov
pusha
jg
paddusb
fpatan
pushf
cmp
bsf
pop
jle
addr16
sar
stos
mov
adcb
mov
jnp
repnz
sub
mov
ljmp
dec
test
fwait
pop
or
pop
mov
fistps
mov
les
lahf
jae
push
insl
out
jb
mov
pop
mov
adc
jmp
sub
cmp
rcl
mov
inc
mov
push
xor
aad
or
scas
cltd
add
mov
add
cmp
mov
adc
orb
mov
jg
xor
push
stos
push
pop
jnp
inc
scas
int
jns
imull
ret
cmp
xor
xor
je
jge
insl
hlt
loope
loope
aaa
lds
sub
sub
dec
test
imul
in
aaa
mov
fmul
sub
or
mov
cmp
pop
int3
push
cmp
jne
repz
push
xor
pop
stos
aad
lret
cwtl
and
xchg
inc
inc
inc
mov
adc
jmp
testb
cmp
inc
test
lock
push
jle
in
mov
clc
pop
or
movsb
fmul
mov
popf
sbb
dec
mov
repz
xchg
pop
jl
add
rolb
cmc
and
mov
push
sti
pop
cmc
adc
pop
adc
jns
gs
cmpsb
mov
mov
push
nop
cmp
add
sbb
xlat
adc
add
mov
pop
dec
adc
and
outsb
adc
xchg
dec
vorpd
add
sbb
std
pop
rorl
jecxz
lods
mov
data16
dec
adc
mov
push
mov
jecxz
adc
mov
xor
push
sbb
rorl
inc
push
adc
mov
fucomip
std
in
mov
dec
ljmp
rorb
icebp
inc
mov
xchg
mov
faddl
inc
scas
cld
clc
movsl
dec
jl
bound
sbb
xorl
pop
mov
mov
int3
adc
scas
fiaddl
jg
jge
mov
sbb
loope
or
mov
mov
dec
add
addr16
out
jnp,pn
and
mov
jmp
aas
ds
mov
sub
das
sub
stc
cmpsb
and
test
adc
jno
or
popf
push
movsb
fbld
mov
ja
cmp
into
rol
das
mov
sbb
lahf
pop
pop
ret
pusha
and
push
and
add
frstor
inc
jns
sbb
mov
int3
lcall
mov
enter
fstps
inc
and
fcomps
mov
dec
outsb
insb
mov
or
sbb
and
or
std
xchg
ss
fldt
jmp
jl
pushf
imul
fistpl
movsl
inc
sub
push
mov
push
iret
adc
push
repnz
cwtl
hlt
sub
jmp
lcall
scas
mov
sbb
inc
push
cmp
cmp
hlt
mov
pop
sub
subb
dec
movsb
or
dec
ret
push
mov
inc
pop
popf
into
insl
or
cmp
or
pushf
mov
je
dec
mov
cmp
xchg
lods
xlat
sarl
aam
adc
ja
sub
jmp
movsb
stc
pop
fs
jae
aas
in
or
jb
addr16
xchg
out
sbb
test
test
and
pop
mov
inc
fsubs
adc
jmp
push
mov
adc
push
test
cmpsb
repz
data16
mov
push
mov
lods
std
lret
jge
out
mov
ret
jbe
ds
pop
lds
loopne
mov
cmp
mov
je
arpl
outsl
ljmp
repnz
sbb
fwait
add
cld
mov
mov
push
jns
pop
dec
cli
or
fiaddl
jmp
pop
addr16
push
fdivr
mov
pop
push
mov
sub
jp
xacquire
sub
and
fisubs
jmp
pop
ss
cld
pop
pop
stc
cmp
xchg
into
les
adc
mov
sub
decl
outsb
repz
repz
fistpll
xor
movsb
lods
fwait
xchg
push
stos
dec
xchg
lods
inc
xor
aad
jmp
enter
lds
insb
sarl
pop
mov
addr16
mov
lock
sbb
push
dec
lods
mov
xor
ja
mov
fisubrs
inc
popa
cld
clc
push
test
shll
cmp
int3
jle
jle
or
adc
mov
dec
inc
roll
push
call
loop,pt
into
aam
add
add
das
sahf
aad
jnp
mov
mov
ja
ja
sub
dec
inc
aaa
push
push
dec
push
adc
shll
sahf
jbe
mov
mov
jbe
ja
mov
in
enter
rcrb
pop
mov
stos
mov
inc
fcoms
or
pop
fldenv
repz
mov
cmpsl
xlat
loope
in
cmp
scas
sub
outsb
cmp
stc
mov
outsl
pusha
in
jbe
jle
loop
fwait
out
or
mov
out
or
mov
mov
stos
and
mov
sbb
jp
push
sbb
aas
call
popf
jmp
add
mov
in
pushf
shll
push
pusha
push
and
and
and
pusha
mov
push
or
dec
jecxz
pushf
popa
gs
inc
aam
push
push
ret
sub
or
outsb
fcmovbe
mov
movsb
xlat
add
loop
xchg
cmp
mov
pop
mov
fs
xor
dec
dec
sub
idivb
mov
sub
sbb
or
daa
push
inc
fistpl
pop
mov
pop
lret
mov
testb
outsb
cmp
mov
frstor
add
testl
inc
std
scas
mov
lcall
outsl
mov
inc
sbb
rclb
pop
popa
jge
std
sbb
iret
sub
push
sbb
pop
cmp
je
jmp
cs
dec
or
fisttpl
pop
fidivs
adc
fldenv
jo
mov
xor
or
fsubrl
sar
cmpsb
leave
repnz
inc
add
push
mov
fucomi
cmpl
in
push
outsb
sti
out
es
or
ja
mov
out
cmp
add
aad
or
sbb
data16
jp
test
cmp
xchg
rcll
mov
push
stc
xchg
sub
int3
out
pop
jb
repnz
aas
rcll
dec
lods
idivb
shrb
aaa
mov
xor
and
les
adcl
ficomps
jmp
add
xor
lods
sti
das
mov
xchg
push
xor
iret
push
popf
sbb
les
rclb
shrb
arpl
cwtl
dec
popa
leave
aas
and
call
les
adc
fidivrs
test
aam
addr16
sub
enter
jnp
nop
in
and
daa
aad
push
jecxz
pushf
add
andl
mov
inc
jle
xlat
sbb
ret
push
jmp
or
insl
adc
pop
adc
popa
mov
sarl
test
es
cs
arpl
out
add
mov
jp
ficoms
mov
sub
scas
pop
repnz
leave
inc
push
cmpsl
les
pop
adc
out
push
mov
mov
loopne
cwtl
cmp
cmp
push
sub
incb
add
inc
mov
cmpsl
xor
clc
orl
data16
mov
in
mov
stos
nop
cs
imul
das
notl
inc
sbb
or
pop
add
mov
jge
int
shlb
jmp
adc
or
in
pop
mov
inc
imul
fildl
cmpsl
push
mov
mov
cmp
les
aad
stc
mov
xchg
outsb
aas
mov
fsqrt
mov
sub
sbb
push
repnz
xor
cmp
xchg
int
push
das
imul
out
scas
loopne
push
or
or
mov
and
test
dec
popa
lods
hlt
sub
pop
push
add
and
mov
daa
xchg
cmp
push
icebp
mov
cmp
repnz
push
mov
mov
outsb
xchg
outsl
imul
inc
lods
lods
and
dec
and
push
sbb
aad
mov
incb
fwait
inc
cmp
lcall
cmp
push
repnz
test
cmp
sbb
xchg
addr16
or
pop
xor
imull
pop
in
lds
test
sub
js
xchg
sub
nop
jnp
out
mov
pushf
mov
fbld
jne
sbb
xor
inc
loope
dec
lea
pop
in
pop
and
mov
xorb
xchg
pop
cmp
jmp
or
loop
cmp
push
pop
adc
inc
push
cmp
pop
dec
in
adc
xor
pcmpgtb
push
cmc
movsb
adcl
mov
jge
fisttps
mov
and
push
sub
daa
loope
and
adc
pmaddwd
inc
imul
outsb
mov
jp
and
addr16
jmp
xchg
les
push
sarb
push
ljmp
cmc
stos
xor
lock
push
movsb
gs
scas
insl
in
cli
das
enter
xchg
stos
es
sbb
imul
jb
rcll
jmp
sub
mov
or
lods
js
fprem
mov
mov
out
or
push
sbb
push
popa
int
mov
sbbl
jmp
es
sbb
inc
or
or
pop
clc
cmc
sbb
sub
adc
orb
push
jle
outsb
adc
sti
lret
add
pop
and
mov
hlt
or
ficomps
jle
xchg
popf
popa
inc
xlat
insl
jns
pop
push
mov
mov
fwait
cmp
cmp
aaa
cmp
hlt
sbb
iret
pusha
fwait
lcall
in
lds
in
gs
lods
subl
jmp
pop
pop
xor
xor
ss
mov
cmc
in
lahf
jne
mov
cmc
mov
inc
cmp
int
in
xlat
pop
test
stos
sub
xchg
pop
das
fnsave
adc
ljmp
stos
pushf
add
inc
xor
loope
dec
xchg
shlb
cmp
mov
sbb
inc
sbb
call
pop
jle
sub
in
and
sub
inc
add
dec
pop
cmpsl
mov
ljmp
inc
les
xchg
les
rcrl
xchg
push
sub
xor
cmpb
stos
mov
jae
cld
xchg
xchg
push
fists
in
inc
in
jg
fisubrs
inc
jle
push
sti
in
movsl
cs
repz
push
adc
movsl
scas
lret
mov
sbb
mov
mov
add
cmp
call
insl
sti
imul
jp
les
and
test
mov
xchg
xor
jmp
add
repz
sub
inc
in
xor
into
cmp
repz
lds
push
or
cmp
outsb
js
les
das
lret
fcmovu
data16
lods
hlt
pop
sub
imul
cmp
adc
cmpb
push
filds
psllq
out
add
cmp
jg
dec
ja
push
addr16
sbb
movsl
mov
fwait
test
bound
nop
cmc
inc
stos
push
aaa
pop
inc
fs
add
rcrb
pop
add
out
pushf
adc
adc
cmp
sbb
test
out
popa
fwait
out
fwait
dec
adc
fcompl
incb
out
pop
or
pushf
xor
std
mov
cwtl
or
jns
rclb
stos
cmpsb
outsl
cli
sbb
pushf
rcll
push
shll
sub
fldt
pusha
xrelease
mov
stc
sbb
mov
cs
sbb
pop
mov
mov
sbbb
movsl
loopne
ja
pop
adc
cwtl
inc
cmp
fnstcw
jle
mov
jbe
fdivrl
xchg
xchg
outsb
in
mov
cmp
push
and
sub
nop
xchg
aad
loopne
xor
pop
data16
pop
out
insl
sbb
je
int
sbb
sub
addb
fwait
push
and
divl
daa
and
icebp
push
sub
cld
shrb
cmp
std
pop
mov
call
pop
lcall
pusha
xchg
aaa
mov
cld
mov
mov
adc
data16
and
test
mov
mov
fsubrl
cwtl
mov
mov
sbb
loop
imul
mov
or
fsts
popa
shll
push
sahf
cmp
out
data16
sahf
sub
es
or
pop
push
cmp
iret
xlat
daa
clc
xchg
jno
dec
fisubs
rcll
cmpsb
mov
ror
inc
lahf
mov
jne
push
xor
sub
add
pop
cmp
add
xchg
mov
es
pop
gs
or
or
loope
jecxz
ss
shl
add
push
fsts
push
stos
lret
and
aaa
jbe
mov
imul
mov
mov
sbb
out
insl
stos
push
cmp
pop
pop
mov
test
inc
arpl
test
dec
jns
imul
mov
test
xor
or
sahf
sbb
cmc
adcl
adc
mov
push
out
push
js
pop
inc
dec
adc
jmp
je
inc
sar
push
mov
cmpl
add
xchg
mov
lcall
push
es
push
pop
insb
jnp
lock
daa
add
dec
sbb
es
push
clc
repz
mov
ja
ret
cli
push
mov
sbbb
xor
and
lahf
mov
adcb
decb
out
aaa
ret
imul
outsb
test
lahf
mov
or
lods
arpl
cld
imul
cmp
pop
jp
scas
add
test
adc
pushl
add
inc
xchg
cld
movb
enter
sti
in
or
push
in
mov
hlt
imul
clc
mov
adc
sbb
mov
mov
push
stos
jmp
lods
stos
push
leave
cld
push
jmp
lcall
xchg
cs
dec
push
imul
push
movsl
add
cmp
icebp
stc
jge
call
jnp
dec
mov
jbe
or
mov
mov
sbb
rorb
jno
adc
mov
mov
in
sti
or
loopne
pop
or
stos
push
je
xchg
adc
inc
sbb
sub
sub
bsf
lds
push
sub
leave
shll
les
inc
sub
push
dec
push
jb
mov
sbb
adc
ja
jne
jnp
popf
sub
xchg
jb
data16
mov
sub
aas
enter
sbb
jle
dec
nop
dec
pop
imul
orl
pop
dec
mov
mov
pop
and
lods
fs
push
rorl
inc
nop
push
loop
mov
adc
mov
push
xlat
cmp
ret
hlt
cmc
enter
pop
sub
mov
enter
push
call
imul
add
imul
add
decl
jg
repnz
push
add
pop
dec
xchg
sub
addl
imul
inc
fldl
push
or
mov
lret
pop
adc
cmp
inc
ds
testl
rolb
pop
push
scas
lret
dec
mov
cs
push
dec
and
fwait
xchg
xchg
pusha
test
sub
lods
and
out
cmp
cmpsb
add
pop
adc
jge
daa
cmpsb
pop
jg
scas
sbb
xor
mov
test
js
out
or
sub
or
outsl
fsub
cmp
imul
inc
pop
jo
push
mov
jne
js
dec
leave
mov
outsl
inc
fdivr
mov
mov
ja
rcrl
aam
out
orb
fwait
jo
jne
movsl
cmpsb
leave
mov
xchg
out
fstpl
pop
mov
mov
mov
xchg
push
add
lahf
pop
lahf
push
mov
pop
xor
xor
xchg
in
clc
bound
jmp
inc
js
ret
cli
pop
stc
xchg
into
insb
loope
add
dec
in
or
cwtl
pop
lcall
hlt
cltd
push
xchg
iret
scas
pushf
and
mov
sbb
sbb
popa
lret
jno
popf
or
loop
xchg
lret
inc
popl
mov
sub
idiv
popf
lea
cmp
cmp
push
xchg
lahf
cli
bound
scas
jecxz
cmovbe
mov
xor
js
notl
idivl
add
lock
mov
sbb
sbb
pop
or
or
pop
test
xor
inc
fdivl
and
aam
jle
dec
mov
icebp
cltd
scas
fistpll
xchg
jns
pop
add
imul
and
ret
nop
mov
scas
mov
mov
xor
decb
pop
adc
sub
cs
fcmovnb
leave
or
pop
or
xchg
jae
div
int3
dec
jge
imul
adc
fwait
cltd
cld
mov
pop
sub
aas
pusha
fsubrl
jno
js
mov
test
add
daa
push
xlat
xchg
dec
icebp
fsubl
cmp
das
push
mov
mov
mov
loop
push
jle
dec
repnz
lea
leave
mov
xchg
push
popf
in
adc
dec
push
stc
lahf
hlt
daa
std
testl
lods
xchg
popf
sbb
notl
imul
call
sub
test
cmp
or
sbb
fmuls
es
lret
push
cltd
add
jmp
pop
daa
xor
movsl
lcall
out
xchg
rclb
lock
jb
dec
scas
adc
mov
sbb
icebp
js
cld
xchg
fiadds
inc
and
pop
adc
loop
push
pop
jbe
icebp
hlt
jg
dec
mov
and
jb
add
mov
ljmp
nop
add
stc
and
and
pop
dec
jns
in
push
arpl
inc
aad
jno
push
dec
sarl
aam
mov
cmpsl
sub
mov
stos
xchg
aas
into
sub
jae
push
mov
xchg
addr16
pop
jns
fld
jmp
repz
cmp
adc
push
fdivrs
inc
adc
cmp
pop
sbb
pop
cmpb
xor
ds
cmp
cltd
sub
es
loope
jmp
call
std
sub
movsb
das
sahf
lods
cmpsl
std
mov
scas
xor
pop
jno
pushf
mov
sbb
jnp
jle
mov
sub
push
dec
addl
lds
adc
loopne
or
sbb
lods
push
bound
jb
xchg
scas
cwtl
nop
das
test
movsb
inc
int
mov
ja
lds
sub
and
repz
imul
lock
add
out
cmc
mov
lods
adc
incb
mov
test
mov
sub
hlt
hlt
lods
pop
arpl
out
jg
and
inc
fldenv
xchg
scas
in
add
into
lods
adc
cs
pusha
stc
repz
pop
sbb
add
cmpsb
sub
fs
inc
push
lods
pushf
int3
push
adc
xchg
scas
adc
mov
xchg
nop
imul
test
push
mov
mov
iret
jns
jg
cwtl
lods
daa
aas
xchg
jl
sub
xor
xor
sbb
shll
ss
fidivs
test
outsl
add
mov
enter
rcrl
mov
lea
mov
inc
je
pop
out
push
dec
inc
push
mov
or
pusha
subl
pop
mov
cmp
loop
imul
std
or
pop
fsubrs
mov
std
hlt
arpl
dec
cld
xchg
pop
dec
mov
cmp
imul
or
pop
mov
ret
push
jbe
ret
in
ss
dec
rcll
int
jmp
inc
pop
cmp
mov
jns
add
popf
movsl
pop
sbb
arpl
mov
into
ud2
jo
xchg
hlt
pop
ds
mov
inc
idivl
and
pop
loopne
mov
rolb
insl
add
mov
mov
cmpsb
sbb
adc
lods
repz
imul
into
das
or
sbb
mov
movsb
pop
jae
xchg
mov
and
int
lods
mov
loopne
outsb
xchg
ja
les
pop
mov
cmp
loopne
push
mov
out
jp
iret
mov
ficompl
push
out
scas
pop
arpl
outsb
lahf
xchg
dec
adc
mov
xor
jbe
xor
aam
mov
dec
mov
daa
pop
jnp
sub
js
push
mov
movsb
add
out
sub
pop
xchg
aaa
popa
or
fs
out
loopne
mov
out
lahf
loope
sahf
lods
in
xchg
das
mov
jp
dec
clc
adc
lds
jae
mov
icebp
sti
addr16
cs
cmp
pop
xchg
sti
sub
je
js
insb
xchg
outsb
sbb
std
shr
or
pop
adc
xchg
jbe
movl
pextrw
mov
stos
punpckldq
sarb
mov
in
pop
or
imul
inc
incl
lds
push
loop
ss
sub
out
sbb
and
popf
adc
dec
clc
cmp
cmp
scas
icebp
mov
bound
imul
lcall
imul
push
xor
sbb
and
mov
and
cmp
pusha
add
mov
inc
jp
push
mov
inc
fidivrl
ljmp
jge
mov
jl
or
xor
mov
movsl
punpckldq
push
fisubl
imul
inc
movsl
sub
fistps
mov
mov
sub
dec
out
lods
and
sbb
fdecstp
out
leave
cmp
in
jb
fwait
es
insb
xor
cmp
aam
pop
idivb
push
aad
daa
dec
pop
clc
loopne
out
out
add
sbb
gs
xchg
lret
push
mov
test
inc
add
in
mov
mov
rcll
dec
cmc
std
aad
daa
test
or
test
icebp
movsb
stos
loop
imul
inc
pop
push
ret
and
or
or
mov
mov
pusha
test
sahf
push
int
or
rcll
pop
xor
outsb
sarl
sub
add
cmp
lret
jno
lock
mov
jp
test
cmp
push
jmp
and
cmp
mov
clc
jbe
pop
or
pop
lea
fcoml
int3
sbb
push
sbb
sbb
scas
das
mov
out
int3
stos
xchg
push
pop
imul
and
ret
xor
loope
mov
mov
test
mov
std
xor
ret
jb
and
jp
pop
sbb
push
xor
xchg
cmp
imul
arpl
outsb
movsb
and
jnp
xchg
jl
stc
or
pop
pop
or
data16
jbe
mov
jle
mulb
rorb
dec
xchg
lods
push
mov
mov
pop
mov
mov
arpl
inc
push
loopne
sub
aas
or
fnsave
jo
mov
mov
mov
push
push
loope
mov
clc
out
lret
adc
aam
sub
std
lods
mov
cmp
sbb
mov
gs
jae
xchg
or
loope
mov
add
fs
and
mov
addb
rdtsc
push
mov
sbb
into
es
adc
repz
fistpl
pushf
mov
inc
gs
pop
xchg
out
out
mov
addl
cmp
movsl
jmp
xchg
mov
sub
and
sbb
sub
shrl
push
adc
pop
and
cmp
outsl
push
test
inc
lcall
xorb
fistpl
lods
mov
stos
iret
jns
xchg
imul
sbb
or
mov
cmp
shl
jl
in
dec
movsl
repnz
xchg
inc
push
ds
sbb
mov
sbb
roll
out
imul
mov
loop
jnp
cwtl
mov
push
ljmp
mov
adc
mov
lods
push
cmp
int3
and
cmp
mov
mov
xor
sub
dec
aad
and
jbe
inc
int3
mov
add
iret
xlat
std
and
mov
adc
jnp
fmul
mov
out
jmp
loope
dec
int
or
jno
mov
jp
out
adc
jmp
xchg
movsl
lea
jmp
xchg
and
push
imul
xchg
ficomps
or
sbbb
jl
aas
filds
int
out
fisttpl
sub
xorl
push
or
stos
and
adc
fistpll
mov
dec
mov
push
push
ds
xor
or
sub
xor
jge
ret
jle
xchg
pop
sbb
xchg
mov
loop
and
push
jecxz
cmpb
or
and
das
add
loope
ret
xchg
and
xchg
nop
mov
jae
les
ljmp
dec
subl
mov
stos
cltd
mov
pop
pop
in
mov
mov
lret
cmp
cmp
xchg
lahf
scas
sub
cld
xor
mov
popf
add
sub
or
je
in
jb
dec
clc
sbb
jo
movsl
cwtl
fnstenv
lahf
xchg
inc
mov
ret
outsb
pop
testb
mov
movsb
roll
fwait
shl
sbb
dec
sbb
rorb
lahf
cld
xor
nop
mov
in
xchg
jmp
stc
adc
fisubrs
lods
sub
and
sub
xor
add
rcr
mov
sarb
outsb
ja
imul
mov
push
call
outsl
push
mov
dec
idivb
dec
xchg
sub
movsb
adc
pop
xchg
addr16
add
imul
jne
dec
mov
orl
xor
xchg
ljmp
xchg
mov
gs
nop
std
dec
mov
gs
testl
and
mov
dec
cmp
jae
add
mov
test
sbb
pushf
out
mov
stos
dec
lcall
mov
xor
gs
inc
loope
std
in
movsb
mov
sub
and
in
mov
fbstp
sbb
inc
scas
push
mov
dec
loope
int
jp
pop
pop
mov
adcl
pmaxsw
push
call
mov
push
push
jmp
push
jmp
pop
push
inc
aad
cltd
in
mov
dec
clc
jle
ret
jo
adc
movsb
pop
push
xchg
pop
cli
mov
adc
mov
pop
mov
les
enter
jle
mov
xchg
fmul
addl
add
nop
jle
jbe
inc
fiadds
lahf
cmovp
lcall
bound
jo
test
jl,pt
cmp
and
sbb
mov
popf
repnz
movsb
fwait
gs
repz
or
incb
adc
cmp
add
enter
inc
int3
mov
ret
jbe
mov
test
dec
add
push
subl
out
xchg
or
movsb
int3
push
cmpb
addr16
mov
dec
loope
out
in
inc
scas
and
jle
cs
dec
adc
jb
add
xor
cmpsl
xchg
dec
push
in
sahf
cmp
pusha
mov
ret
aad
cmp
lahf
jns
and
int3
mov
dec
xor
add
xchg
xchg
aas
fwait
xchg
and
adc
pop
xlat
add
xchg
mov
sub
ficomps
and
roll
or
xchg
dec
xchg
sbbl
inc
dec
add
and
mov
std
and
insl
int
xchg
fsubs
mov
nop
xchg
cli
adc
pop
inc
movb
sbb
aaa
pushf
jg
rcrl
ret
adc
add
aad
pop
mov
cmp
sbb
clc
adc
pop
sub
cwtl
mov
inc
mov
sub
push
cwtl
cli
ja
outsl
es
xchg
push
les
pop
mov
shl
scas
adc
push
test
or
adc
mov
popa
sub
enter
lock
jmp
sahf
push
xchg
xor
nop
push
std
jge
cld
dec
out
sub
pop
dec
xor
repnz
out
es
arpl
ja
inc
fimull
repz
sub
lahf
loope
stos
cmpl
fidivrl
xchg
xchg
mov
testb
xchg
jbe
sbb
mov
adc
sbb
dec
or
std
mov
push
stos
or
sarl
pushf
sbb
inc
inc
add
sarl
dec
icebp
add
sbb
les
sub
jecxz
ds
push
sbb
cmp
jecxz
cmc
dec
dec
mov
push
mov
pop
cmp
iret
stc
imul
aaa
in
mov
dec
dec
out
decb
testl
sub
ret
pop
xchg
jp
sbb
notl
loopne
daa
iret
cmp
roll
js
incl
cmp
loop
lea
divl
adc
xor
mov
dec
add
out
fwait
mov
movsl
sbb
imul
cmpl
lret
adc
xchg
cs
pop
test
ja
in
xor
xchg
push
out
stos
push
inc
shlb
movsb
mov
ljmp
cmc
in
push
out
bound
xchg
xor
and
adc
mov
mov
add
or
repnz
ret
mov
loope
scas
adc
xchg
xchg
sub
cmpsl
xchg
in
movsl
dec
je
xchg
inc
fnstcw
ljmp
inc
pop
leave
xchg
push
fbld
shlb
mov
dec
jge
in
call
addr16
les
cld
pop
xlat
lds
arpl
push
mov
cld
jp
inc
test
push
loopne
xchg
and
lret
pop
add
xor
daa
and
test
push
out
mov
loopne
int3
pop
or
mov
adc
and
jnp
stos
cltd
hlt
icebp
cltd
cmp
sbb
das
aas
les
js
popf
pop
subb
xor
push
jg
cmpsl
mov
cld
nop
or
bnd
mov
fistps
cmp
addr16
shlb
inc
push
nop
loope
out
lods
es
pmullw
out
test
pushf
cli
stos
movb
sbb
das
imul
bnd
ja
or
cmp
inc
orl
icebp
push
mov
inc
mov
and
int3
and
enter
fcmove
jnp
inc
push
pop
ret
les
sbb
and
cmp
int
or
pop
ret
adc
in
pop
xchg
dec
out
cmp
les
jle
fmulp
xchg
pop
in
xchg
int3
into
rcll
lock
leave
divb
sti
fcmovnu
aam
xchg
xor
test
sbb
rcrb
movsl
dec
arpl
xchg
mov
mov
push
add
stos
push
adc
movsb
mov
in
fbstp
mov
jns
inc
loop
jo
xchg
push
sahf
loopne
sub
nop
or
lds
cmp
addr16
das
dec
inc
mov
lahf
adc
mov
sub
scas
cltd
dec
add
dec
fidivl
jg
push
mov
mov
and
lahf
out
test
mov
xchg
dec
jae
stc
ficomps
daa
sbb
pop
andl
sub
jge
add
fmuls
mov
xchg
lret
xchg
jne
push
push
push
mov
xor
stos
in
mov
mov
mov
push
inc
dec
int3
inc
dec
jb
cmpsb
in
xor
fwait
rclb
cmp
imul
nop
or
insl
test
jns
sbb
jnp
jne
dec
movsb
push
lret
push
fsubrs
jmp
push
test
sub
jle
stc
negb
rcl
lcall
daa
pop
clc
pop
pop
fsubrl
aas
fs
ss
aaa
shrl
into
rclb
adc
mov
popaw
test
rolb
in
pop
pop
lock
and
cltd
fistpll
xor
fucom
popa
imul
loope
or
enter
sbb
int
divb
jbe
or
dec
stc
jecxz
jecxz
adc
sbb
and
cmpsb
lock
push
inc
lahf
push
push
push
pop
pop
iret
add
out
iret
jbe
and
push
push
push
mov
mov
ds
pop
lods
ja
outsl
pop
or
or
les
and
popf
lds
out
ds
jno
out
pop
in
mov
pop
mov
iret
and
inc
roll
dec
fcmovnbe
sbb
and
dec
and
push
idivb
test
lods
sbb
mov
inc
jmp
sahf
push
mov
in
push
xchg
gs
insb
xchg
push
cmp
ficomps
test
jmp
cs
cld
mov
adc
or
popa
jo
insb
jge
cli
mov
iret
sub
lock
fs
sti
mov
inc
sbb
lea
push
pop
loopne
dec
lock
xchg
ret
mov
orl
pop
push
xor
mov
jb
fimuls
mov
cli
jmp
popf
sarb
mov
sub
mov
mov
jb
push
lea
lods
xchg
xor
hlt
mov
xor
lock
xor
jae
aas
sahf
mov
lock
or
fcomps
sub
repz
push
fimuls
push
int3
push
in
ret
sub
out
xlat
loopne
mov
repz
int
outsb
adc
mov
xor
push
notl
cmpl
mov
test
shl
punpckhbw
push
xchg
mov
jnp
or
push
popa
cwtl
or
xchg
mov
daa
xor
cltd
shl
mov
test
js
into
hlt
jp
fnstenv
cmp
popf
or
ss
xor
clc
xor
das
fwait
cmp
sbb
pushf
xor
or
movsl
mov
and
xchg
sbb
ljmp
sbb
mov
es
xorl
mov
add
add
out
add
cmpb
and
mov
mov
add
xchg
mov
xor
xchg
pusha
int
pop
or
icebp
pop
aaa
mov
cmp
lea
add
mov
sbb
xchg
sbb
iret
stos
and
std
call
pushf
cli
push
mov
nop
jmp
pop
pop
and
test
sti
adc
js
inc
testb
mov
adc
mov
xchg
enter
cmpsl
fsts
mov
add
aaa
push
xor
and
andl
xchg
and
imul
sti
mov
in
pusha
mov
jb
test
std
rcrb
adc
addr16
enter
divl
and
repnz
shrb
mov
test
lods
cmp
cmpsb
cs
rolb
cld
mov
mov
fidivrs
cltd
mov
jecxz
dec
inc
pop
loopne
insb
in
cs
and
xor
fsubrl
push
pop
xlat
mov
shrb
jb
sarl
cmp
adc
dec
and
pop
sub
pop
mov
push
pop
stos
fs
int
pop
and
inc
stc
mov
loop
jp
xchg
icebp
mov
inc
stc
aas
in
dec
or
cld
jle
fisttpl
arpl
xchg
cli
cli
mov
push
testb
push
and
mov
jge
inc
adc
insb
leave
mov
sbb
cs
xchg
cltd
pop
fnsave
dec
sub
add
mov
cli
inc
push
sbb
sub
ss
rol
cmpsb
xchg
ds
sbb
jns
clc
int3
std
pop
sub
movb
cwtl
or
insb
jns
cmp
push
mov
xor
cs
add
lods
inc
jl
jmp
and
js
in
lods
cmpsb
data16
in
push
ljmp
call
sbb
cmp
stc
loopne
mov
dec
cmp
mov
sub
in
pop
aas
arpl
xor
xor
pop
daa
cmc
sub
cmp
dec
popf
lahf
lcall
mov
xor
jb
in
lahf
popa
jbe
ret
adc
stc
aam
test
adc
mov
dec
mov
inc
daa
test
test
movsl
xor
out
repz
and
dec
sbb
or
jne
push
fidivrs
mov
clc
cmp
inc
fbstp
jae
repz
and
aaa
insl
nop
rcl
xchg
in
cmp
test
arpl
lods
ror
cmp
rorl
je
mov
testb
fimull
xlat
jmp
xchg
shrb
mov
cmc
enter
lahf
pop
inc
xchg
inc
sub
pmaddwd
push
jb
xlat
aam
rorl
mov
inc
pop
jg
sbb
mov
mov
mov
pop
andl
lcall
lea
int3
and
pop
sarb
stos
dec
andb
out
lods
cmpsb
mov
cmc
fdivr
dec
lock
inc
call
and
lahf
ljmp
jne
inc
add
mov
cmp
pop
movsl
inc
mov
setp
cmpl
jmp
jnp
push
call
mov
add
fwait
push
adc
dec
mov
pusha
adc
or
pop
mov
jmp
int3
inc
dec
inc
mov
mov
ds
mov
lock
adc
cmc
movsb
sbb
jns
pop
xchg
pop
and
int
leave
test
lds
push
les
in
mov
and
aam
mov
fnstcw
mov
in
cs
xchg
and
lea
pop
fidivs
push
jl
mov
ffree
test
sbb
cwtl
sub
popa
out
movl
sarb
dec
orl
adc
call
test
pop
ja
adc
ret
ret
sti
mov
xor
incl
loope
dec
cmpsb
lcall
stc
lea
push
lret
xlat
jle
push
push
jmp
les
filds
mov
pushf
push
adc
clc
rcr
fldenv
mov
out
and
cld
icebp
dec
scas
dec
orb
insl
js
inc
mov
shl
out
gs
icebp
push
jmp
out
xchg
push
sub
and
nop
pop
cmp
ja
int3
add
stos
daa
xchg
dec
ds
fldenv
and
xsha1
cmpsb
push
push
lahf
adc
jns
out
mov
push
mov
mov
or
cmp
stos
mov
sub
lods
push
mov
lcall
je
lea
cmp
je
shrb
push
xchg
cld
into
lret
cmpsl
cmpsb
pop
push
scas
sub
add
xchg
and
adc
outsb
push
incl
pop
je
cltd
imul
jo
lods
mull
daa
jne
lret
jl
dec
dec
fs
fucomip
ftst
fmull
and
fwait
xor
dec
jmp
out
dec
arpl
popa
pop
cli
mov
movsl
cwtl
insb
rcr
pop
push
dec
mov
stos
sbb
mov
or
mov
dec
call
cmp
bound
cld
push
adc
ds
xchg
xchg
dec
shlb
push
addr16
pop
jnp
dec
xor
push
in
int
push
ja
idivb
push
and
push
dec
add
add
fsts
movsl
xor
fwait
aas
and
push
cld
shlb
push
pop
mov
mov
call
cli
push
pushf
hlt
jnp
pop
xchg
jl
stos
xor
add
cmc
and
jnp
mov
mov
mov
pop
andb
or
sbb
xchg
jns
std
sahf
aas
insb
sbb
or
stos
test
mov
mov
cmpsl
mov
jmp
adc
push
inc
add
xchg
pushf
inc
jo
xchg
push
lret
enter
iret
dec
notb
add
jbe
jnp
iret
push
repz
push
ror
hlt
idivl
test
or
xor
sbb
adc
fnsaves
inc
int3
jmp
jle
ret
pusha
nop
adc
sbb
cltd
add
cli
dec
or
ficoms
sbb
add
pushf
dec
sbb
out
fistpl
call
xor
popa
sbb
xchg
sub
push
or
aad
fsubrl
and
jbe
sbbb
cld
clc
imul
jp
shlb
mov
sbb
push
dec
mov
jecxz
mov
insb
aas
jmp
pop
into
or
or
sbb
aam
add
cmpsl
nop
add
stos
mov
jb
nop
jb
pop
mov
push
movsl
or
sub
dec
sbb
leave
fs
inc
dec
push
mov
std
jne
outsb
scas
or
dec
fsubs
popa
or
sub
lahf
fidivrs
push
and
cli
mov
dec
inc
pusha
mov
jnp
movsl
shrb
out
xchg
mov
daa
pop
out
mov
pop
adc
mov
xor
in
inc
add
dec
or
pop
mov
and
cmp
inc
push
imul
div
fs
cmc
popf
fs
cmp
movsl
mov
push
xchg
jp
and
dec
imul
jmp
movsl
jbe
and
pop
cmpl
movsb
or
mov
je
sbb
in
inc
int
xor
jle
adc
movsl
sub
iret
rcrb
xchg
pop
or
sbb
scas
sarl
test
mov
int3
loope
xchg
loopne
inc
in
add
mov
mov
mov
add
pop
jmp
sub
test
xor
fidivs
iret
xchg
jecxz
cmpsb
call
test
xor
in
xchg
enter
ret
cmp
cmpl
mov
jmp
jae
popa
mov
xor
jo
cmpl
popa
loopne
std
sub
sarl
cs
mov
andl
pusha
jecxz
xchg
push
pop
or
loop
ss
jp
adc
cmpsl
inc
push
dec
jge
inc
les
push
or
jno
xor
pushf
ja
testb
data16
sahf
sar
xchg
mov
imul
push
mov
fistps
lahf
xor
movsb
stos
stos
ljmp
mov
cmc
push
popa
data16
xor
test
ficoml
inc
inc
std
push
ja
sub
inc
loopne
xchg
cs
subl
xor
push
or
cltd
mov
movsb
sub
jecxz
cwtl
popa
mov
jno
fisttpl
fs
fdiv
ljmp
lock
test
adc
pop
push
inc
cwtl
or
stc
mov
and
jnp
jnp
cmc
mov
jecxz
mov
lds
mov
iret
adc
stos
mov
into
arpl
lock
inc
dec
arpl
daa
cmpsl
sub
xchg
nop
cmp
imul
cmp
dec
out
mov
es
pop
or
xchg
clc
mov
xchg
imul
ficomps
shlb
lahf
xor
inc
movsl
push
pop
cs
mov
addr16
out
sbb
or
mov
or
jecxz
mov
cmp
xor
outsb
pop
repz
xchg
lods
push
rclb
cwtl
cmp
ds
scas
cmp
into
das
popf
adc
addr16
mov
enter
mov
pop
mov
jp
aaa
and
pop
adc
mov
cmp
or
mov
cltd
jp
sbb
inc
mov
dec
cmp
sbb
jns
in
adc
call
imul
mov
sub
cmp
inc
fisubrs
lret
sub
pop
cmp
jmp
sbb
mov
jle
ljmp
addr16
or
adc
push
test
pop
inc
ret
sbb
imul
dec
mov
ss
mov
rclb
push
jecxz
stos
pop
push
ds
push
jl
ljmp
leave
xchg
dec
cmp
cmp
mov
adc
lock
dec
dec
int
add
es
int3
ds
cmp
mov
shrl
rcrb
jecxz
lock
jg
xor
leave
test
decb
sarl
fcmovbe
jne
mov
xchg
popa
pop
fmul
mov
nop
pop
jl
jmp
cltd
call
mov
xchg
pop
or
push
es
out
dec
fldl
nop
jb
mov
or
sbb
lock
aam
mov
inc
jo
cmpsl
dec
inc
xor
xor
add
pop
mov
xchg
cli
cld
repnz
pop
sub
and
xchg
inc
and
mov
jge
mov
cwtl
in
adc
inc
pushf
dec
imul
mov
mov
fcomi
hlt
in
les
scas
jmp
das
lahf
cmp
movsl
cmp
aaa
push
adc
int3
cmp
call
dec
push
imul
mov
sub
pop
sbb
push
jnp
in
xchg
into
pusha
mov
pop
insb
lds
jnp
dec
enter
je
sbb
jmp
jle
lcall
pop
rclb
cli
outsb
in
sub
adc
mov
test
xchg
add
nopl
sbb
je
mov
in
and
stos
pop
sbb
and
dec
test
push
mov
jns
xlat
or
push
sti
pop
jg
inc
hlt
cmc
shl
xchg
fsubp
shrb
mov
and
sbb
xchg
or
scas
hlt
dec
inc
pop
xchg
mov
imul
arpl
mov
push
arpl
scas
lea
push
int
cmp
insl
adc
adc
fnstcw
xor
aas
jmp
jb
mov
icebp
cmpsb
cmp
push
imull
adc
push
jnp
shlb
std
arpl
test
inc
adc
ja
jmp
sub
push
push
lods
jnp
je
push
stos
push
addr16
xchg
stos
xchg
or
ret
ljmp
push
xor
loopne
fs
scas
lret
fstpt
js
mov
sbb
jmp
int3
mov
repz
mov
cmp
into
sbb
adc
mov
jo
mov
popw
add
clc
mov
pop
icebp
sbb
sahf
jle
xchg
xchg
int
cs
loopne
dec
or
cltd
pop
in
bound
cs
shl
leave
adc
jle
push
dec
xchg
xor
aaa
clc
cmp
push
pop
push
cli
xlat
leave
imul
dec
xchg
jecxz
fcmovne
punpckhbw
rolb
cmp
test
jne
dec
mov
fdivr
xor
out
push
lahf
mov
cmp
xor
xchg
inc
popa
std
mov
cmp
std
fisubrl
inc
sbb
xor
es
gs
sub
push
daa
repnz
bound
ds
adc
lret
repnz
outsb
pushf
pop
mov
jmp
adc
bound
lcall
shll
in
sub
push
cmp
jle
fcomps
jge
mov
clc
lcall
mov
push
and
sbb
cmp
lret
dec
lods
mov
and
dec
repnz
pop
mov
cmpsl
or
cmp
jns
xchg
cmpsl
xor
sub
clc
hlt
incb
daa
cwtl
pop
mov
shrb
scas
xchg
das
cmp
dec
cmpb
push
push
lea
test
inc
pop
adc
movsb
cmp
sbbl
imulb
add
outsb
mov
cmpsl
nop
add
leave
jp
push
lods
mov
dec
loope
add
pop
mov
rcl
add
aad
lods
fnstsw
and
sub
sub
shrl
int3
sbb
mov
je
nop
aaa
and
jmp
loop
cs
pop
loope
aaa
out
popf
inc
pop
push
out
or
push
sub
loop
xchg
cmp
sub
outsl
test
inc
lock
cld
mov
xor
mov
jmp
insb
dec
outsl
sbb
jp
cmpsl
ljmp
add
sbb
bound
loopne
xor
subb
jno
and
aas
fmuls
xchg
pusha
mov
push
adc
pop
fwait
ss
cwtl
pushf
jge
mov
jl
cld
pop
cmp
dec
es
lods
push
lds
inc
mov
dec
mulb
dec
mov
mov
into
sub
push
aad
movsb
pop
push
stos
sub
sarl
jo
dec
fistl
sti
fstps
lods
jmp
int3
addr16
add
sahf
push
pusha
in
sbb
xchg
add
lret
mov
out
add
adc
add
jo
rcrb
push
push
loop
inc
fdivl
xor
push
ficoms
mov
test
and
pop
test
jle
add
push
test
mov
fistpl
or
test
mov
cmp
fcmovne
out
cld
mov
insl
jb
rcrl
aam
repnz
fwait
lret
scas
in
cmp
jg
cltd
xor
push
fs
push
push
fisubs
leave
sub
mov
setle
xchg
mov
insl
pop
xchg
das
add
jb
aas
imul
adc
movsl
sub
dec
adc
js
cld
lahf
dec
adc
fcomp
sti
mov
lret
sbb
or
scas
pop
fwait
loopne
inc
xor
lods
xchg
in
jb
adc
mov
test
pop
sbb
xor
jecxz
das
mov
push
stos
sub
jp
loope
std
jne
inc
cltd
mov
repnz
imul
xor
mov
stos
mov
push
sub
dec
pop
adc
jge
lods
mov
mov
loop
lcall
loop
xchg
xchg
shll
jmp
pop
adc
incl
popa
lods
std
adc
fwait
pop
push
push
jne
in
inc
mov
gs
jmp
add
enter
xchg
xlat
jle
mov
add
xchg
ss
add
sub
outsl
or
std
cli
adc
test
movsb
movsl
iret
out
in
je
xchg
mov
and
inc
insb
fwait
sbb
fstps
loop
addr16
sti
jp
adc
sbb
fwait
or
pop
add
jmp
sbb
movsl
xorb
int3
bound
cmpsl
sarb
gs
sub
jno
mov
adc
sbb
fists
xor
cmpsl
and
dec
jb
fucomip
fistl
imul
or
dec
test
out
push
arpl
or
xchg
loope
fs
jnp
and
adc
dec
es
sub
pop
inc
add
sarb
lahf
js
mov
add
ljmp
adc
lahf
add
cmp
mov
gs
push
fdivrl
sbb
and
cmp
rcrl
dec
ss
push
push
test
outsb
scas
jns
stos
push
stc
cmp
andb
sub
pushf
rclb
fimull
cltd
mov
lcall
cmp
jl
pop
xchg
mov
adc
aad
pop
jne
xchg
scas
icebp
jns
sub
xchg
sbb
mov
add
xchg
dec
pop
inc
xchg
lret
data16
ret
lds
push
outsl
outsl
sub
xchg
repz
test
ficoms
test
dec
mov
pushl
lret
sbb
mov
out
pop
lahf
and
xlat
pop
aaa
je
push
mov
add
pop
pop
jge
pop
pop
jge
loope
movsb
mov
lock
ja
lcall
push
xchg
jp
jecxz
scas
dec
add
mov
lahf
loope
xor
into
fcompl
sahf
mov
jnp
lret
out
inc
dec
inc
sub
sti
hlt
loop
xor
popf
mov
xor
fdiv
xchg
jne
aad
fdivrs
lret
adc
cs
out
pusha
pop
shrl
aaa
mov
sahf
nop
je
mov
inc
push
lds
jo
dec
or
jl
dec
xchg
mov
lahf
int3
and
mul
call
mov
inc
mov
jp
ja
mov
pop
mov
sub
pop
jl
orl
jnp
lea
and
lret
cmp
push
jae
dec
into
and
push
pop
ja
test
cld
dec
dec
scas
mov
push
and
pop
lds
push
sub
sbb
xchg
jno
stc
mov
jno
imul
std
jo
fidivl
adc
mov
jmp
sbb
aad
scas
and
pushf
adc
add
xor
popa
enter
es
fstpl
iret
cwtl
hlt
pushf
mov
lcall
stc
shlb
hlt
jbe
lret
dec
cmp
setg
mov
out
into
cmp
hlt
and
dec
out
mov
mov
in
sysenter
add
mov
lret
popa
sbb
test
push
faddl
jb
xor
push
into
jmp
ret
inc
movsb
imul
mov
aad
test
push
fld
xchg
lock
xchg
adc
mov
mov
lods
fiadds
push
add
add
clc
sub
dec
jo
daa
cld
mov
push
jo
fstpl
dec
fsubl
jmp
pop
cmp
inc
insl
and
xlat
stos
fadds
mov
sub
jge
cwtl
sub
cmp
sub
pop
and
dec
mov
xchg
cmp
mov
inc
ss
orb
call
fcmovb
jle
loopne
imul
cwtl
test
insl
mov
stc
lret
lds
jg
bound
fs
push
cs
in
and
or
lock
out
xor
mov
mov
dec
call
loope
aam
add
xchg
sarb
and
cs
icebp
lahf
mov
mov
or
sahf
ds
pop
jmp
cmp
cmp
cmpl
subl
hlt
fbstp
push
sub
jmp
clc
or
sbb
mov
sub
popf
idivb
and
inc
cli
add
jo
sub
mov
scas
ljmp
imul
in
push
inc
mov
ror
jne
and
xchg
inc
fxch
pop
loop
pop
push
xor
mov
adc
xchg
fstps
pop
setbe
sub
jmp
xchg
ljmp
xchg
je
jbe
data16
dec
pop
xlat
std
xchg
fistps
stos
leave
popa
cli
sarl
pushf
scas
cltd
xchg
sbb
inc
cltd
sbb
mov
jecxz
jae
in
mov
clc
cld
cmpsb
pop
and
out
insl
leave
data16
cmpsl
sbb
fcompl
pusha
and
jno
push
xchg
xor
pop
push
jge
outsl
bound
mov
jo
sbb
jl
xor
push
ds
push
add
rol
test
or
cld
pop
test
cld
nop
or
mov
inc
mov
mov
orb
dec
add
call
mov
call
into
push
cmp
mov
push
mov
sahf
xchg
lods
mov
ret
push
fdivr
jg
sbbb
adc
shr
int
mov
push
scas
sti
das
push
test
ja
out
add
dec
mov
pop
mov
inc
xor
lret
popa
dec
and
ret
add
sbbb
push
push
mov
push
pop
and
xchg
mov
in
add
xor
xchg
int
adc
insl
and
inc
faddp
xchg
add
in
test
mov
stc
imul
xchg
jnp
fsubl
pop
xor
mov
cld
jmp
cmpsl
ret
in
xor
mov
nop
xor
inc
mov
dec
dec
cmpsl
fwait
pop
fdivrl
inc
jo
and
mov
inc
xchg
iret
fistpl
fsubr
push
and
call
xchg
cmp
lret
popf
movsb
call
ret
cmc
daa
mov
sbb
jecxz
adcl
add
mov
dec
and
dec
or
jne
push
adc
push
fisubrl
or
inc
cltd
inc
cmp
ja
pop
sahf
push
sub
mov
frndint
cwtl
or
loop
jnp
imul
daa
cmp
mov
imul
repnz
or
xor
and
inc
xor
cmp
outsl
pop
pop
into
sbb
dec
inc
daa
imul
adc
mov
shl
repnz
inc
bound
movsl
in
cltd
test
nop
imulb
into
ret
pop
imul
in
clc
xor
inc
adc
pushf
lret
mov
or
notb
xchg
lret
jmp
xor
add
add
into
sub
js
inc
mov
sarb
into
xor
xor
sahf
ljmp
jae
sub
mov
stos
sub
sbb
fxch
mov
cli
cmpsl
orb
sub
jnp
jg
lods
lahf
adc
data16
xor
sbb
lods
dec
or
lret
aaa
lock
fnsave
loop
loop
popf
adc
push
push
mov
jo
in
cmpl
sub
jmp
push
and
stos
ds
xor
add
imull
dec
stos
xor
push
push
xor
mov
cmpsl
scas
pop
pop
jecxz
mov
dec
mov
and
cmp
xchg
cmc
sbb
sahf
dec
lods
das
cwtl
mov
push
push
popf
scas
adc
ret
loope
es
pop
jae
cltd
adc
mov
pop
mov
shl
jns
mov
xor
adc
sub
out
cltd
fdivs
add
imul
ja
xchg
push
pushf
out
xchg
or
aaa
js
aaa
xchg
adc
xchg
out
add
ljmp
push
mov
xor
push
int
cld
dec
mov
or
sarl
imul
stos
lods
inc
ret
xchg
dec
mov
mov
fwait
pop
xchg
iret
in
dec
pop
outsl
pop
popf
jle
or
movsb
cmp
adc
pop
mov
fstps
test
lods
sub
ret
jmp
movsb
pop
addr16
jns
in
div
rcl
lcall
daa
and
cmp
jo
push
sub
icebp
sbb
call
cmp
pop
sub
sub
push
sub
outsb
les
xor
data16
popa
in
pop
lcall
sbb
fcomi
andl
or
repnz
adc
dec
push
popa
lcall
stos
mov
shlb
test
pushf
jmp
insl
sbb
enter
mov
or
mov
dec
rolb
inc
add
push
xor
nopl
xchg
scas
xor
xchg
into
popa
or
repz
adc
jnp
pushf
add
dec
dec
fdivrp
in
cmp
xchg
jp
mov
test
fisttpl
lret
mov
add
or
imul
sbb
vaddsubps
iret
insl
add
pop
dec
jb
or
adc
aam
xchg
mov
test
jmp
loopne
lods
fimull
jl
jnp,pt
popf
and
lock
in
sbb
pop
inc
xchg
and
test
push
js
mull
push
or
call
rcrb
add
mov
fwait
xchg
push
add
js
and
push
dec
or
push
sbb
mov
nop
sbb
das
adc
push
into
mov
sub
test
inc
sbb
aad
shl
ds
aas
aam
imul
clc
push
fnsave
popa
mov
shrl
jmp
cmc
in
loope
stos
pop
scas
clc
pop
mov
dec
stc
jp
ret
dec
xchg
dec
sub
and
ret
loop
xchg
lock
in
lock
fisubrl
mov
cmp
shr
and
in
mov
mov
ret
repnz
out
popa
shr
jns
into
icebp
out
push
mov
mov
push
inc
fwait
repz
jns
mov
in
push
daa
push
mov
into
inc
sbb
in
roll
repz
data16
cmp
and
fdivrs
xlat
or
out
sub
cmp
int3
shll
inc
xchg
push
mov
cld
iret
xor
mov
adcb
push
mov
test
mov
movsl
pmuludq
scas
subl
in
call
sbb
pop
sbb
and
out
lods
xchg
cmp
jl
pop
pusha
pusha
xchg
dec
xor
insl
lea
mov
aas
cmp
sti
int
or
loope
push
xchg
aam
add
jmp
dec
jle
rcll
mov
inc
bnd
jge
sub
pop
jle
mov
lcall
inc
mov
add
je
or
stos
in
into
push
aaa
jmp
es
fwait
jecxz
pop
mov
inc
pop
fucomi
xchg
pop
pop
jecxz
into
repz
push
fnsave
fnstsw
cmp
and
out
clc
popf
movsb
or
xlat
in
push
mov
arpl
cmp
ljmp
sub
ret
mov
mov
push
adcb
and
adc
jne
lods
xchg
popa
sbbl
scas
or
aad
push
jb
aas
cmp
adc
adcl
xchg
xor
add
push
add
incb
mov
jl
xor
movsl
out
pop
rcr
sbb
mov
cld
or
dec
popf
mov
fldl
add
lods
push
adc
mov
mov
push
inc
jecxz
lods
fstps
sub
insb
and
mov
add
sbb
mov
fisttpl
mov
push
stos
inc
jmp
fwait
sbb
sub
cmpsl
jle
push
rcrb
cmp
in
cmp
cmpsl
jg
iret
inc
mov
jns
lods
sub
addr16
cli
sbb
stc
cltd
cmp
jl
inc
addb
jecxz
ret
lret
movswl
adc
adc
sbb
out
fnstcw
loop
stc
cmp
mov
add
or
mov
inc
jecxz
dec
pop
call
lock
sbb
xchg
sbb
lds
mov
add
xchg
movsl
and
xor
nop
dec
xchg
xor
sti
jo
sub
cmpsb
lds
out
in
pop
dec
add
pop
js
daa
and
loopne
int
push
int3
cwtl
flds
mov
out
pusha
lods
xor
insl
or
loope
movsb
div
leave
pop
sub
push
lret
mov
add
jns
sbb
outsl
ja
pop
popa
lret
sub
mov
jge
adcl
jmp
pusha
dec
cmp
cmpsb
sub
and
and
mov
fisubs
cmp
inc
xchg
lahf
arpl
lods
xchg
cmpsl
scas
add
inc
es
mov
mov
and
push
js
das
das
shl
mov
fisttpl
dec
popf
mov
sahf
sbb
inc
pop
aaa
inc
cmc
movl
sahf
movsl
rep
dec
push
sbb
push
lcall
lds
int3
mov
gs
dec
dec
jmp
fdivrs
pop
pop
jl
rorl
jne
popa
dec
je
adc
test
imul
jmp
lret
adc
or
mov
push
mov
inc
addr16
and
stc
fisttps
in
ja
pop
addr16
pop
sbb
cwtl
aad
add
and
pop
mov
in
cmpsb
out
jl
pop
std
js
inc
aad
or
jp
fildl
xorb
sub
inc
aad
pop
mov
pop
adc
mov
scas
int3
or
mov
inc
cmp
addl
cwtl
adc
enter
jg
addr16
outsb
cmp
xor
iret
cwtl
inc
pop
test
jnp
icebp
dec
shll
shl
cmpsl
dec
sub
jne
cld
mov
imul
cmp
bnd
cmp
add
out
jge
in
adc
es
cwtl
xor
lcall
cmp
adc
sarl
mov
fs
cmp
xchg
lcall
cmp
mov
stos
das
pushl
push
in
outsb
jecxz
enter
xor
add
jno
sarb
adc
inc
push
movsb
cmp
movsl
mov
mov
mov
cmc
cwtl
xchg
mov
mov
cld
mov
out
shrb
push
enter
jb
xor
dec
ljmp
mov
aaa
jl
mov
iret
fnstenv
push
lock
mov
scas
jno
mov
cmp
sub
xor
cltd
ds
and
inc
mov
out
push
push
cmp
pop
cmp
cmp
mov
push
lock
adc
into
in
fdivrp
jmp
test
in
and
mov
sti
arpl
sbb
stos
ds
mov
inc
push
push
ss
jae
lods
nop
jle
test
add
jg
and
out
ja
lods
and
xor
cld
out
out
or
pop
ds
cld
and
lods
lea
push
jp
jns
int
bswap
fisubs
mov
loopne
clc
inc
cmp
scas
aad
shlb
xchg
sbb
mov
mov
roll
in
cmp
outsl
aam
orb
fdivrs
imul
arpl
adc
mov
int
or
push
push
pop
mov
push
push
cmp
push
notl
out
add
add
push
std
jp
fists
adc
fistpll
jge
and
gs
movsl
insb
mov
push
outsb
outsl
dec
xchg
not
push
andb
ss
mov
fwait
xorb
xchg
lods
mov
rorb
xor
sbb
xchg
mov
notl
dec
mov
push
dec
jo
pushf
jge
fstpl
mov
in
and
movsb
sub
inc
inc
xor
filds
push
andl
clc
imul
fwait
arpl
sahf
dec
movsb
mov
imul
jb
pop
insb
jge
cltd
loop
in
sbb
xchg
pop
jbe
pop
fadds
test
xor
pop
shll
rol
out
lock
sahf
popf
push
cs
mov
mov
aaa
push
or
repz
push
shlb
pop
in
xlat
or
pop
push
dec
sarb
loope
sub
add
inc
push
sbb
js
stc
out
aad
xorb
mov
in
push
dec
push
mov
lods
stos
imul
push
popa
adc
dec
pop
or
pop
cwtl
or
out
sahf
xchg
adc
mov
popf
mov
jne
loop
icebp
sub
mov
cmpsb
jp
add
in
popa
insl
inc
in
adc
dec
or
cmp
rcll
ss
sub
xchg
mov
mov
je
pop
lcall
dec
sub
push
popa
in
arpl
mov
rorb
and
xchg
mov
dec
shlb
jle
rclb
ficompl
xchg
sbb
xchg
std
sub
or
mov
fsubrs
mov
clc
xchg
movsb
pop
adc
add
scas
mov
cwtl
in
lret
mov
pushl
fbld
cmp
jl
dec
dec
or
int3
sub
push
mov
mov
dec
pop
jo
xchg
test
stc
pop
into
mov
sbb
js
ficoms
lock
lds
push
dec
mov
sub
xchg
pop
push
add
xchg
mov
in
popl
mov
fldcw
or
xchg
inc
jbe
or
mov
or
lods
jae
jae
out
dec
mov
test
into
das
icebp
in
push
mov
jl
dec
lret
js
dec
xchg
in
aad
and
mov
or
stc
iret
sub
popf
lret
cmpsl
mov
scas
movb
xchg
lods
jno
add
inc
adc
jmp
inc
movsl
inc
out
inc
fwait
dec
pop
lea
jns
sti
dec
pop
pop
inc
jge
push
scas
fists
mov
fisttps
in
pop
fstps
cmp
dec
loop
cltd
mov
inc
sbb
mov
xor
mov
sub
mov
imul
dec
lahf
mov
jbe
cwtl
out
sub
repnz
hlt
mov
ret
lock
dec
mov
mov
fwait
xchg
enter
sub
mov
fdivrp
shrb
mov
jp
jp
call
out
pushf
ja
sbb
fdivl
movsl
test
aad
sarl
sbb
mov
xchg
scas
push
jecxz
and
pop
rcll
dec
push
adc
xchg
cmp
dec
xor
lods
es
and
pushf
jg
movl
lcall
mov
push
and
sbb
stc
clc
cli
sbb
jle
insb
mov
jl
lds
cli
sbb
arpl
cmp
out
push
push
and
sub
mov
jecxz
stos
mov
les
adc
imul
jl,pn
aas
adc
fcmovb
negb
out
mov
enter
not
add
ss
jns
shll
ja
mov
or
cmp
adc
push
xchg
or
xor
fbld
inc
and
xchg
jecxz
popf
add
jmp
rcl
rorl
mov
and
js
sub
ficoms
aas
cmp
sub
adc
mov
hlt
adc
jg
sti
xchg
stc
mov
imul
imul
cmp
dec
jle
repz
mov
jb
imul
or
pop
cmp
ljmp
shlb
jge
scas
jo
aas
mov
mov
cmp
push
inc
hlt
pop
mov
mov
rcr
sbb
xlat
lahf
jmp
mov
push
mov
jo
inc
lret
fcomps
lods
sbbb
scas
jl
bound
xchg
mov
xchg
add
pop
xor
fwait
mov
inc
mov
iret
inc
out
fisttpl
das
adc
fisubrs
ret
sub
mov
mov
rorl
test
xrelease
loope
cmpsb
push
push
sbb
mov
loopne
insb
inc
out
sub
hlt
sahf
sub
cmp
cmp
outsl
rorl
add
les
aas
push
mov
testl
dec
inc
cmp
dec
mov
cmp
cmp
push
in
jae
inc
fcompl
xor
loope
aam
mov
inc
cli
sbbl
fiadds
pop
lds
int
movsl
mov
adc
mov
adc
imul
jl
pop
jne
xlat
xchg
das
jg
jnp
inc
and
call
add
ret
mov
mov
xchg
das
pop
jb
call
push
nop
cmp
stos
jl
arpl
ja
rcrb
into
xor
int3
int3
ret
in
pushf
in
adc
pushf
mov
adcb
jl,pt
leave
xor
cmpsb
mov
loope
ds
sbb
test
and
fucomip
dec
jb
je
mov
shlb
or
jo
lret
dec
aaa
inc
pop
cmp
sbb
fwait
lret
mov
pop
and
xlat
cmp
and
xor
shr
dec
mov
dec
dec
jmp
je
into
les
cli
arpl
add
mov
andl
sbb
pop
mov
int
insb
std
popf
stc
and
ljmp
iret
or
jns
push
mov
cmc
mov
outsl
fwait
mov
lods
sbb
xor
dec
lods
or
leave
and
mov
dec
imul
into
ja
fisubs
aad
or
cmp
das
or
jns
mov
push
push
sbb
mov
add
ljmp
or
aaa
das
cmc
jo
mov
sbb
cmpsl
mov
cmpsl
pop
jp
pop
into
xor
mov
sbb
push
cmp
xchg
jp
mov
jb
cmp
fwait
popa
data16
vpsrld
mov
rep
inc
mov
scas
setbe
cltd
sti
pop
shll
into
mov
in
inc
pop
andl
adc
mov
pusha
les
mov
or
rcrb
push
inc
stc
sbb
aas
aam
fs
rclb
enter
jmp
in
into
sub
mov
ficoml
mov
sbb
enterw
movsl
repz
sbb
pop
inc
int3
sbb
or
adc
sub
sub
cli
or
jno
cli
insb
enter
xchg
and
sub
sti
cmpsl
pop
rol
sub
out
jb
mov
cmpsl
pop
mov
dec
lock
cli
lea
dec
push
loopne
xchg
rclb
sbb
cmp
xor
inc
mov
aad
inc
adc
xor
fwait
lret
pop
cld
jle
mov
cwtl
loopew
mov
xor
xchg
jmp
je
popf
out
in
mov
fidivrl
jecxz
jl
insb
test
fsubrp
dec
adc
dec
je
cmp
cwtl
lds
or
mov
insb
jo
stc
mov
push
out
insb
outsb
les
mov
or
dec
addb
mov
clc
or
rcrl
movsl
cli
xor
ror
pop
imul
pop
adc
sbb
lahf
sub
roll
pusha
mov
sub
repz
sbb
xchg
mov
repnz
xor
cld
lahf
daa
adc
mov
jnp
lods
cwtl
insl
xchg
jne
gs
jmp
in
push
mov
addr16
or
pop
inc
mov
fwait
leave
xor
stc
mov
cli
pop
ja
jae
insb
in
aam
sub
mov
or
aam
xchg
rcrl
xchg
push
inc
fimuls
sub
out
jecxz
cs
call
aaa
jl
int3
mov
arpl
cmp
ficompl
jnp
fwait
mov
cltd
fldenv
mov
push
shrl
pop
mov
inc
mov
sbb
inc
loope
adc
jl
jne
pop
adc
repz
sbbw
loope
inc
sub
mov
ret
aad
xchg
mov
push
sub
inc
lcall
pop
or
enter
loopne
dec
push
popa
bound
xchg
jl
mov
mov
andb
cmpsb
xchg
lahf
outsb
ret
xlat
aad
push
adc
test
testl
cmc
loope
imull
cmp
jge
mov
sar
mov
xchg
xor
and
loopne
das
pop
mov
jecxz
or
mov
cmp
xor
jmp
divb
xlat
and
jbe
test
push
aam
mov
rclb
test
jp
or
std
jo
fists
xor
cmpl
insl
adc
mov
jns
nop
shr
ret
movl
mov
aaa
sarb
test
mov
push
outsl
pushf
push
mov
fwait
and
iret
or
push
lock
sbb
lods
nop
sbb
inc
bnd
pusha
fmulp
lret
pop
pop
ficoml
call
ja
push
sarl
lea
sbb
bound
aad
lods
pushl
jecxz
out
xchg
in
inc
cmp
stos
sub
divl
idiv
mov
in
sar
jl
lds
leave
lcall
sub
jmp
in
ljmp
jns
jle
divl
cld
je
cwtl
and
out
incl
jle
adc
sub
cmp
cwtl
testb
push
jl
iret
pop
hlt
mov
xor
cmc
insl
cmp
xchg
xchg
dec
add
adc
ret
pop
push
inc
xchg
loope
mov
bnd
and
addb
mov
aas
cli
cmpsb
pop
in
cmp
jp
jecxz
fsts
lods
repz
shl
pop
clc
dec
or
test
imul
push
push
and
dec
hlt
dec
sti
pop
cli
fldt
dec
dec
ja
movsb
aam
dec
cmp
test
dec
test
or
sbb
sahf
xchg
inc
sbb
test
div
xor
inc
leave
dec
mov
outsl
out
insb
adc
adc
mov
arpl
div
ds
cmp
das
sub
outsb
xchg
pusha
jle
xchg
gs
faddl
repz
sarb
and
in
push
cmp
cli
je
dec
cwtl
pop
popf
dec
pop
cwtl
pop
push
push
andb
lcall
pop
test
pop
mov
es
xchg
xorl
aam
adcb
jno
and
pusha
rcrl
shlb
add
pop
cwtl
repnz
dec
scas
in
or
aad
pop
insb
pusha
inc
or
shll
sbb
stos
jne
jnp
mov
leave
jbe
pop
xor
jno
mov
cmpsl
enter
jnp
cmpsb
xchg
adc
jbe
sbbl
aas
xchg
jp
shll
std
pop
lahf
dec
adc
jl
cli
stos
cs
sbb
pop
aas
gs
mov
into
xor
dec
jge
sti
mov
xchg
addr16
pop
sub
in
imull
adc
inc
cld
lahf
add
pop
inc
jl
shll
mov
lods
cmc
push
xchg
out
loop
or
or
push
fistps
cmp
pop
or
gs
scas
jl
and
mov
aam
fistl
sti
or
cwtl
stos
cmp
cmc
xor
mov
and
pop
xchg
leave
stos
lea
hlt
push
cmpsl
insb
or
push
jp
push
jle
shll
fbld
or
xchg
mov
or
mov
nop
lahf
mov
aad
arpl
mov
xchg
sarb
push
adc
cmp
mov
loope
es
pop
cwtl
push
pushf
and
xchg
out
mull
or
call
shrl
sub
mov
push
push
pop
andl
mov
and
rcrl
dec
stos
dec
sar
ret
ljmp
stos
cmc
pop
test
push
cmp
xor
cmp
out
lahf
aas
in
mov
pushl
lds
shrb
pop
mov
push
scas
adc
flds
cmp
inc
mov
out
imul
fsubp
push
daa
es
pushf
rol
cmpsb
divb
adc
add
out
jle
out
or
mov
movsb
cmc
mov
push
test
test
fxch
imul
in
lods
fcomps
xlat
mov
scas
test
jbe
in
xchg
mov
out
sub
add
xor
ret
push
dec
in
cmp
movsl
or
imul
dec
icebp
fsubrp
imul
inc
sahf
imulb
add
xchg
push
loope
inc
cmp
xor
pop
enter
int
xor
cmp
popa
movsl
add
lret
gs
andb
mov
xor
mov
arpl
push
outsb
mov
js
push
out
outsb
iret
or
push
mov
insb
outsl
nop
lahf
pop
sub
pop
sub
cli
scas
pop
or
cmpb
jae
mov
xchg
lock
cmp
xchg
inc
inc
ds
cmp
or
and
sbbl
add
and
out
subb
sub
sbb
scas
pop
and
nop
sub
hlt
or
xchg
cmpsb
xor
or
mov
lcall
adc
scas
lret
call
mov
inc
jne
and
ret
adc
push
rcl
inc
stos
leave
mov
insb
lret
out
or
clc
push
stos
mov
test
jb
xchg
push
stos
mov
das
fnstcw
arpl
roll
jns
jge
sbb
lods
push
mov
lds
sub
xchg
xlat
out
mov
pop
sbb
test
ja
popa
jl
pushl
and
sbb
adc
cld
or
push
popa
xchg
xchg
cmp
or
js
loop
mov
insb
jo
or
fiadds
daa
rolb
into
movsb
std
cltd
add
cmc
mov
and
mov
mov
jne
pop
pushf
lock
fistpl
jmp
clc
push
aaa
xchg
xor
dec
push
xchg
movsl
mov
sub
cmp
jmp
inc
sub
int
jo
adc
test
loopne
pop
fnsave
cmp
xor
ret
xor
push
push
lret
or
jno
xchg
sbb
aas
and
leave
add
mov
ss
pop
cli
out
or
outsl
pop
ret
dec
sub
scas
cli
cmp
arpl
inc
pop
jno
into
xor
mov
push
sahf
lret
xor
pop
sub
mov
inc
pop
lret
pop
repz
push
out
imul
outsb
fsubrl
bound
pop
push
loope
outsl
and
arpl
and
xchg
lret
cmp
lret
or
pop
es
repz
and
nop
repnz
and
sbb
sti
inc
test
dec
mov
gs
mov
cs
movsl
sbb
cmpb
xor
sbb
push
movsb
push
mov
cmp
mov
repnz
in
ret
enter
cli
daa
adc
adc
jns
lds
or
ja
inc
dec
das
xchg
add
ret
out
mov
or
mov
pop
xor
outsl
jb
test
sub
and
adc
mov
pop
int
mov
jle
or
cmp
ret
loop
dec
and
xor
adc
stc
cmp
or
mov
aad
nop
pop
inc
andb
stos
ljmp
jl
jae
mov
jns
std
dec
lahf
jo
call
fdivr
add
clc
jecxz
or
sbb
in
dec
push
push
dec
inc
push
test
jb
mov
push
mov
xor
pop
in
jbe
es
xchg
xchg
call
push
ss
rolb
lret
mov
aas
gs
sbbl
sub
insl
nop
or
xchg
call
pop
rclb
nop
xor
ja
xchg
out
lds
or
aam
push
push
ret
loope
aam
jl
jo
loopne
adc
adc
out
jge
aas
push
daa
dec
iret
aas
mov
adc
cli
sub
mov
xor
mov
incb
nop
dec
xchg
fbstp
sbb
xchg
fists
jp
subl
ret
test
nop
xor
cwtl
mov
cmpsb
sub
es
dec
mov
add
or
mov
inc
out
inc
xchg
xchg
sbb
and
or
repnz
movsl
rcll
ss
push
loopne
mov
sbb
or
and
add
cs
push
sbb
or
aad
adc
stos
xor
sbb
xchg
leave
inc
shl
push
dec
cmp
add
pop
xor
sub
inc
arpl
or
pop
xor
enter
aas
jmp
fistpl
xchg
xor
int3
add
cmpsl
js
xchg
orb
repz
push
push
fdivrl
dec
fucomp
mov
ds
mov
sbb
imul
jecxz
rclb
jl
adc
flds
xchg
leave
imul
sbb
inc
cmp
loope
xchg
hlt
mov
pop
movl
pop
les
xchg
repnz
outsb
leave
in
ja
mov
aaa
inc
lahf
adc
out
jecxz
mov
shr
pop
lret
mov
pop
in
sbb
xor
jno
xor
jg
xor
mov
arpl
ret
mov
push
push
out
xor
pop
xchg
clc
imul
adc
shrb
outsb
sbb
pop
jb
sbbb
test
test
sub
inc
pop
mov
inc
xchg
in
push
sbb
fcomip
xor
ds
cmc
xchg
sbb
inc
sub
pop
orb
cmp
in
push
ficoms
push
rorl
push
shrl
scas
setbe
pushf
rorl
popa
negb
pop
pushf
cmpb
insl
mov
gs
mov
cltd
cmpsb
sub
jbe
mov
cmc
mov
jmp
pop
dec
imul
notl
xor
lcall
cmp
iret
mov
mov
mulb
into
daa
mov
adc
cld
in
dec
test
mov
xchg
cmp
js
xchg
inc
pop
stos
leave
lret
mov
fwait
lods
in
in
loope
test
inc
fs
mov
hlt
pushl
sbbl
mov
out
lcall
mov
mov
clc
or
aas
inc
scas
bnd
xor
inc
jg
xchg
test
stos
ds
lahf
adc
pop
bound
dec
xlat
nop
mov
jns
push
dec
cmpl
jl
dec
adc
js
ret
push
pusha
neg
jmp
inc
jnp
inc
aas
sub
ffree
cltd
cli
or
js
aad
dec
mov
flds
rorb
mov
rcrb
jbe
rclb
sub
push
aas
adc
lret
ret
mov
mov
push
aaa
push
pop
jb
mov
sbb
test
mov
mov
inc
sbb
das
mov
movsl
fstpt
xchg
jle
sub
jl
pop
sbb
loope
sbb
inc
lods
mov
loop
cmpsb
lea
mov
inc
cmc
into
loop
xor
jnp
mov
rcrb
cltd
fwait
jb
add
jbe
lret
sub
je
call
mov
pushf
dec
inc
insl
and
rorb
icebp
mov
rcrb
inc
outsl
daa
das
mov
popa
cmpsb
adc
mov
mov
ds
outsb
dec
pop
sub
jns
js
sbb
and
iret
mov
in
testb
dec
aas
loopne
out
jo
jb
lds
imul
test
imul
pop
iret
or
mov
push
inc
xchg
fcompl
shrl
mov
push
sbb
add
into
iret
mov
lods
aad
jno
inc
cli
dec
sub
sub
shl
pop
pop
out
ret
jo
js
enter
test
add
cltd
aad
cld
cld
add
rcrb
pop
jge
test
push
sbbb
mov
push
pop
and
icebp
scas
int
dec
dec
or
mov
sbb
shl
push
or
pop
scas
and
stc
dec
es
xchg
xchg
fmull
ds
cltd
push
jecxz
sub
lret
outsl
movsb
push
mov
das
cmp
repnz
into
scas
xlat
ret
je
dec
aam
push
sub
xchg
xchg
adc
xor
add
es
cmpsl
or
adc
sbb
and
sub
adc
enter
imul
cmp
sti
ss
mov
xlat
xchg
adc
mov
or
mov
push
mov
inc
fstl
xor
jbe
adc
mov
arpl
cmpsl
ret
fdivrp
mov
dec
jns
pop
or
insl
lock
scas
movsl
xchg
shlb
push
push
jmp
lcall
push
int3
incb
in
iret
int3
push
daa
inc
and
cmpsb
sti
into
pop
mov
adc
ror
sub
xchg
jno
mov
and
xchg
inc
xchg
or
out
inc
or
cmp
je
push
orl
push
fs
cli
lret
xchg
cwtl
jne
inc
sub
cmc
and
test
sti
fidivs
out
icebp
sbb
outsb
adc
sbb
sbb
xor
jns
and
mov
js
imul
mov
mov
or
pop
aas
jno
sub
xlat
xor
cmc
movsb
sub
imul
mov
mov
xchg
xchg
xchg
cmc
jbe
mov
xchg
aaa
add
xor
dec
scas
xchg
orb
arpl
lock
sti
adc
fsubrl
sbbb
repz
lret
std
incl
adc
daa
jge
inc
mov
out
xor
mulb
pop
mov
sbb
mov
ss
int3
orb
rcrb
push
mov
sbb
xor
add
push
int3
stos
leave
clc
cmp
and
cmp
and
cmp
adc
sub
insl
fldenv
jae
jno
push
push
cltd
sbb
and
hlt
sti
inc
popa
xor
rolb
push
adc
clc
add
adc
push
inc
xchg
pushf
ds
fcompl
sub
and
pushf
or
add
sti
fistl
xchg
data16
lods
bound
push
xchg
std
daa
sub
add
inc
inc
fistpl
jmp
add
mov
icebp
xchg
lods
adc
fdiv
or
jp
xchg
cwtl
mov
xchg
adc
pop
add
mov
pop
cmp
adc
xor
shlb
mov
loop
mov
imul
pop
pop
sar
js
push
and
mov
and
in
dec
pop
imul
and
in
call
dec
cmp
mov
dec
push
xor
or
test
mov
adc
sbb
jns
mov
insb
adc
movsb
mov
and
sub
xchg
inc
xor
cmp
loope
pushf
dec
enter
inc
lahf
mov
andl
out
sub
mov
insb
je
es
cmp
xchg
adc
inc
lods
je
sub
jg
or
in
xor
mov
sbb
sbb
mov
lods
cmp
jmp
lret
xor
orl
push
add
mov
mull
lods
jg
sub
pop
push
mov
pop
sub
aad
insb
cli
cmpsl
and
filds
mov
push
pop
clc
mov
jno
sub
jae
ljmp
pop
lahf
lods
ds
lret
sub
jmp
jge,pt
subb
ret
ret
xchg
sub
out
lret
cltd
aaa
jo
xchg
call
loopne
cld
sub
mov
std
in
popa
xchg
xor
test
lods
int
stos
jae
mov
sbb
lret
mov
fwait
dec
jbe
into
lret
imul
adc
and
out
jns
lods
push
bound
stos
call
adc
inc
push
insl
lds
inc
xchg
fbld
es
sbb
xchg
mov
jecxz
pop
insl
iret
imul
xchg
sbb
push
std
mov
les
adc
cmp
mov
mov
mov
mov
or
jb
pop
and
sbb
push
pop
xchg
ret
lds
or
loopne
sbb
or
fistpl
xchg
mov
lds
cld
loop
in
repz
loopne
and
lahf
fwait
jno
lods
xor
cmp
jnp
adc
sub
adc
cld
subl
mov
or
loopne
imul
jecxz
mov
dec
ss
pop
repz
enter
rclb
or
loop
add
fwait
in
scas
and
outsb
cmp
sbb
dec
popl
mov
inc
les
fcmovb
jno
push
lds
adcb
inc
mov
jne
mov
imul
jmp
sbb
mov
mov
mov
jl
mov
sbb
call
aaa
loope
imul
ljmp
shll
fstl
and
add
xlat
adcl
pop
insl
repnz
push
jb
lcall
push
and
dec
sahf
xor
xchg
das
lret
jle
arpl
jecxz
incl
cmp
jg
adc
fdiv
xor
adc
rolb
pop
lret
mov
dec
popa
insl
jg
mov
add
push
sti
sahf
ss
dec
mov
push
loop
sbb
mov
and
out
lods
aad
mov
inc
push
lcall
add
xchg
cmpb
cmp
push
cli
adc
lea
cltd
lock
call
arpl
xchg
jmp
fisttps
enter
cmp
adc
mov
xor
jmp
pop
std
jg
jne
mov
xchg
std
test
xor
imul
mov
pop
push
hlt
push
cmp
popf
xor
pop
and
ficomps
arpl
sbb
push
inc
je
fstpl
js
adc
mov
push
and
shll
ret
lret
add
add
lret
outsl
push
enter
or
and
jb
in
ficompl
mov
test
mov
cli
jbe
lods
push
jl
out
bound
push
and
pop
mov
push
mov
iret
je
ret
or
movl
mov
or
mov
lods
lahf
in
fsubrp
push
shlb
repz
pop
sbb
lods
mov
loope
pop
fcoml
and
pop
cli
scas
sbb
xchg
add
iret
jg
lret
inc
out
mov
out
add
aad
mov
xchg
popf
jo
add
cmp
loopne
xchg
sbb
jnp
addb
ds
sbb
push
pop
lea
fdiv
jae
pop
dec
mov
jns
aad
sbb
inc
out
xchg
bound
xor
lods
cmpsl
sbb
pop
xchg
adc
sbbb
push
in
shlb
or
mov
push
sbb
or
mov
dec
cmpsl
pop
push
lahf
testl
in
cmc
pop
sub
stc
iret
jns
xor
jb
xlat
loopne
xchg
jno
das
out
pop
push
fistl
adc
pushf
int
insl
push
and
arpl
inc
nop
mov
andb
enter
scas
scas
sbb
movsb
lcall
mov
insl
mov
cltd
xchg
add
pop
add
imul
and
pop
jne
push
mov
dec
mov
test
std
mov
in
sub
fsub
imul
cmpl
fs
mov
cmp
or
adc
pusha
popf
mov
inc
jmp
sbb
jne
iret
in
jl
loop
mov
add
pop
scas
adc
jno
jne
cltd
int
xchg
adc
inc
dec
imul
add
xor
call
mov
rorb
sbb
mov
dec
insb
mov
shlb
test
repnz
rorl
pop
mov
inc
cmp
sbb
aas
or
xlat
sahf
sbb
sbb
lret
mov
fstpl
add
dec
add
fiaddl
mov
dec
mov
repnz
adc
fstpl
shr
insb
pop
sub
pop
jo
cmp
shrl
out
inc
gs
jg
jle
inc
jecxz
push
pop
insb
sub
lea
sub
repz
addr16
fs
jne
mov
ds
test
pop
test
cmpsb
xchg
sub
jle
loop
and
dec
cld
pusha
test
int3
into
lds
sub
fadds
inc
in
cmpsl
cmp
mov
aad
imul
inc
sbb
into
and
mov
sbb
mov
inc
pushl
adc
aas
testb
fs
ja
xor
insb
add
orb
jns
pop
imul
sub
pop
mov
jb
stc
dec
cmpsl
xchg
outsb
addb
xlat
mov
insb
ret
pop
jb
jecxz
inc
outsl
xor
pop
mov
lcall
sahf
ljmp
test
stos
imul
out
dec
jl
inc
or
adc
es
or
cmp
stos
test
lea
or
inc
loopne
jmp
jecxz
das
fcompl
mov
cltd
mov
push
cltd
xchg
imul
frstor
mov
pushf
or
imul
lahf
addr16
fwait
std
shlb
or
into
xchg
xchg
add
jno
out
popf
scas
jnp
push
nop
clc
gs
xchg
mov
add
scas
push
add
test
mov
mov
cmpsl
inc
sub
dec
xor
inc
cld
push
and
mov
pop
jle
dec
cmp
mov
push
xchg
dec
mov
mov
push
xchg
mov
out
rcll
add
out
adc
int
jle
sub
or
in
stc
inc
inc
es
das
cli
cs
insl
sub
mov
add
jl
imul
mov
jmp
inc
add
mov
pop
in
jecxz
mov
add
inc
cmp
or
hlt
inc
ret
shl
mov
pop
sti
sub
cmp
cli
aad
dec
dec
aad
inc
outsb
insl
sub
xchg
enter
mov
xchg
ljmp
out
aaa
rol
xchg
popf
dec
fcompp
fst
das
push
mov
adc
mov
dec
mov
mov
data16
and
mov
xor
enter
fisubrs
hlt
lds
daa
cli
add
ja
lcall
in
sbb
add
les
dec
fists
sub
and
mov
push
in
jmp
and
pop
std
sub
ret
imul
mov
mov
push
test
dec
pop
and
in
xchg
mov
dec
sbb
repz
popa
add
lds
inc
fs
xchg
cmp
mov
xchg
mov
sbb
rol
rcrb
mov
push
jne
out
addr16
cld
mov
fldt
or
into
arpl
jnp
sub
cmp
jecxz
sbb
pop
mov
or
pop
sbb
xor
cld
aad
and
popf
cwtl
mov
adc
and
stos
cmpsb
xchg
lock
or
jo
xchg
lahf
ss
push
es
iret
jbe
pop
lods
call
add
pop
or
shr
in
mov
pop
loopne
sub
nop
in
mov
dec
int3
aam
in
mov
mov
xor
lahf
ficoms
les
aam
and
adc
mov
cmp
das
stc
out
aam
lret
push
pop
lahf
test
idivb
lahf
in
adc
shlb
adc
mov
or
push
push
adc
inc
fidivl
icebp
popf
leave
sub
enter
push
mov
loop
fwait
jp
daa
ljmp
js
lret
xor
lea
pop
ror
mov
rorb
mov
push
push
mov
fs
inc
add
ljmp
sub
cs
sbbb
shlb
xor
stos
fs
mov
loop
push
aam
mov
repz
mov
adc
daa
lea
popf
cmp
fisubrs
ds
mov
arpl
mov
sub
fimuls
push
dec
cmc
push
or
addb
and
sub
gs
jnp
or
mov
scas
sbb
lcall
jne
xor
mov
dec
add
lsl
std
bnd
or
sbb
mov
loopne
mov
jl
int
and
mov
jno
sbb
lds
jbe
adc
cli
xchg
sbb
jbe
lahf
mov
inc
xor
cld
xchg
xor
cmpsl
push
lea
pop
mov
xchg
sahf
ljmp
fwait
mov
movsb
lock
mov
mov
cmp
pop
sbb
jecxz
mov
mov
mov
fidivrs
cmpsb
sub
fsubrp
je
int3
and
ljmp
lock
cmpl
inc
cmp
xor
add
xchg
jnp
pop
fildl
clc
repnz
xchg
or
scas
add
imul
push
pop
addr16
aas
subl
out
push
je
inc
int3
dec
int3
or
and
sub
cmpsl
int
add
cwtl
mov
ret
ds
adc
sbbl
mov
std
add
lret
pop
ss
push
mov
cmp
imul
dec
jae
movsl
mov
push
fisubl
das
pop
and
sbbl
frstor
xor
fistpll
aam
rcl
out
jl
push
jg
push
push
cmp
lock
dec
fst
rorl
loope
notb
dec
or
popf
adc
xor
ss
idivl
dec
fldenv
adc
mov
push
dec
add
or
push
jb
inc
dec
idivl
icebp
push
sbbb
ja
dec
xchg
es
subb
repz
cli
xor
test
cmpsl
ret
jg
cli
sub
lret
fidivs
lods
fisttps
cmpsb
ljmp
imul
cld
rcll
and
sub
jo
fadds
mov
int
mov
sub
negb
xchg
cmpsb
aam
mov
cmpsb
outsb
push
cmc
testb
pop
mov
xchg
mov
xchg
das
inc
pop
pop
mov
xor
inc
rol
add
pop
ficomps
xor
imul
inc
ja
fistps
mov
lds
sbb
push
fs
adcb
gs
pushf
adcl
mov
aad
es
xor
addr16
daa
jbe
push
fidivl
int3
fdivp
pop
xor
loopne
cmp
std
sub
pusha
cmpl
inc
je
pop
push
sub
ret
cld
outsl
rorb
data16
dec
push
xchg
lods
jecxz
mov
mov
xchg
stc
xchg
and
out
mov
lods
cld
rolb
push
bnd
sbb
inc
out
mov
jle
sahf
pop
mov
fsubrl
mov
aam
dec
pop
add
cmp
sub
pop
call
es
lds
xor
clc
xor
push
call
addr16
aam
or
jno
mov
fiadds
pop
pop
sarb
sub
mov
imul
dec
ss
lea
adc
cmc
pushf
sbb
adc
adc
mov
shlb
jne
cmpl
jmp
lahf
inc
xchg
das
stc
fcomps
icebp
xchg
out
in
xor
mov
in
sahf
popf
xchg
xchg
mov
lock
pushf
and
lret
pop
out
or
daa
xchg
testl
sbb
ret
pop
adc
bound
mov
aaa
es
inc
data16
bound
lahf
adc
xchg
aaa
test
shrl
push
jb
jno
cmp
dec
push
les
mov
lcall
aaa
dec
mov
add
xor
fidivrl
dec
rcrb
std
adc
mov
and
sub
lahf
in
in
add
repz
das
outsl
dec
pushf
adc
int3
dec
xor
cltd
inc
in
dec
or
sub
call
stc
lods
xchg
hlt
icebp
aas
es
push
xchg
aam
insb
add
mov
aaa
mov
mov
push
outsl
lret
fisttps
pop
ficoms
iret
ret
fs
add
lock
aam
sarl
xlat
movsl
xchg
lcall
lock
adc
sub
bound
xchg
in
out
repz
or
mov
insl
jl
push
dec
test
xor
mov
fistpll
fwait
mov
mov
xchg
xchg
inc
movl
jnp
icebp
sub
bound
nop
and
inc
jmp
les
push
insb
scas
in
sbb
enter
add
add
test
mov
dec
jnp
jno
mov
xchg
sub
inc
xor
lods
jne
movsl
mov
add
jb
adcl
push
xor
sub
imul
push
pushf
push
push
and
fcompl
cld
int
int
test
xor
pop
or
or
clc
das
mov
sbb
cmp
xchg
push
icebp
popa
jb
jo
fwait
ret
int3
es
mov
ds
cmp
pop
inc
daa
push
ret
stos
sbb
xchg
fidivrl
dec
fwait
in
imul
pop
add
xchg
inc
aas
xor
incb
orb
cmpsl
lret
mov
ret
bound
mov
add
fldl
repz
rcrb
cmc
push
mov
inc
jmp
scas
cmp
push
fs
jae
jge
outsl
out
orb
lcall
mov
lods
or
adc
daa
out
int3
ja
pop
in
and
sub
mov
and
in
ret
pusha
cmp
mov
cmp
in
adc
int3
push
pop
add
push
addr16
dec
in
add
cmp
dec
mov
enter
adc
int3
cmp
and
stos
jb
outsb
inc
mov
jp
das
aas
and
les
lret
neg
out
loopne
aad
roll
aaa
fldl
stos
sti
nop
lret
inc
fsts
xchg
sub
lods
es
dec
sub
test
xchg
arpl
mov
repz
movsl
push
lock
ffreep
lahf
add
dec
fiadds
sub
mov
ret
xor
outsl
fwait
inc
jge
xchg
pop
imul
insl
js
test
scas
adc
cmp
add
sbb
xchg
in
popl
outsl
test
mov
cmp
outsl
push
pop
mov
mov
or
aam
mov
jb
jae
lahf
int
lods
mov
lods
int3
jo
and
xchg
xchg
xchg
adc
mov
fimull
sbb
gs
cld
adc
int3
fst
stos
ret
push
push
dec
pop
jo
test
into
mov
imul
pop
inc
ficompl
pop
loope
push
cmp
add
or
or
mov
pop
xchg
gs
das
push
cmpb
andb
adc
sbb
sbb
int3
test
aas
rolb
sub
aaa
mov
es
call
push
dec
mov
jne
mov
nop
lret
sbb
repnz
sbb
inc
xchg
scas
adc
es
mov
sbb
stc
outsb
sti
and
pusha
cmp
adc
mov
xchg
mov
lret
pop
dec
sahf
lods
sbb
das
push
sub
loop
es
cmp
mov
xorb
out
pop
in
push
loopne
cld
pop
lods
sub
jg
and
and
repnz
test
jl
daa
jns
adc
sahf
push
mov
in
aam
sub
mov
arpl
mov
addr16
sar
fnstsw
push
adcl
scas
orl
jns
add
pop
jo
mov
sbb
dec
leave
dec
pop
mov
mov
pop
add
xchg
xor
jg
imul
cmp
repz
push
sbbl
popa
bound
js
jmp
movsl
push
mov
clc
lods
pusha
xchg
movsb
add
and
jmp
push
push
mov
ss
dec
aam
adc
inc
dec
xor
sahf
sahf
inc
mov
clc
gs
sbb
pop
push
xor
push
or
lods
leave
mov
fs
cmp
aam
dec
cmp
or
lds
rorb
pusha
mov
enter
pushf
adc
mov
arpl
cmp
pop
in
pop
mov
sub
xchg
mov
loopne
out
dec
push
outsb
dec
add
inc
fiadds
sub
push
std
pop
mov
fcoms
test
in
repz
rolb
sbb
jb
aaa
aas
pop
add
pop
outsb
xchg
xchg
mov
cmp
mov
or
cmp
xchg
fs
loope
cwtl
out
les
nop
int3
in
pop
sbb
or
shrb
out
inc
pop
jle
mov
daa
fcoml
push
push
and
pop
cmp
bound
jle
imul
cld
cld
loopne
inc
pop
pop
adc
and
cs
pop
ljmp
xor
xor
test
lret
in
pop
mov
js
sbb
cs
addr16
xchg
push
pop
adc
test
pop
sbb
jnp
jmp
add
mov
lahf
mov
sub
repnz
pop
add
or
adc
dec
int3
ret
adc
pushf
xor
cmpsb
xchg
outsb
jecxz
test
loopne
mov
adc
push
aad
jns
lahf
out
add
mov
push
ds
sbb
out
mov
scas
pop
pushf
fiaddl
push
leave
pop
push
icebp
mov
sbb
and
sbb
mov
add
nop
sub
addr16
jae
cmp
shll
mov
adc
data16
mov
loop
pop
lcall
mov
in
fidivl
ja
xlat
js
jg
fdivs
dec
pop
movsl
add
push
xlat
loopne
mov
pop
xor
movsl
xor
mov
mov
cld
xlat
mov
mov
add
out
xchg
jg
cmp
cmpb
loopne
mov
pop
push
add
jno
addb
xor
push
out
push
call
lret
cmpsb
mov
cmpsl
mov
in
loopne
pop
movsl
leave
test
scas
mov
cmp
fcoml
push
clc
xchg
lret
push
inc
arpl
xchg
scas
pushf
dec
rol
adc
jbe
lea
xor
pusha
xor
pop
push
and
xchg
pop
adc
fwait
aam
outsl
aam
xor
sbb
fdivp
repz
movsl
sbb
imul
or
mov
cmp
lods
mov
mov
xor
and
xchg
icebp
test
cltd
mov
movsb
pop
negl
adc
mov
mov
push
mov
push
mov
push
mov
cli
adc
aam
jb
adc
call
pop
mov
lahf
loop
stc
lcall
cmp
cwtl
lret
dec
shll
sbb
nop
test
mov
add
aaa
mov
leave
adc
dec
sar
lret
adc
andl
outsb
jl
cmp
cmp
xchg
sahf
pop
cmp
ret
in
enter
cmp
push
or
flds
xor
cmpsb
inc
leave
adcb
or
aam
mov
mov
cmp
mov
and
int
xchg
jb
jmp
pop
sahf
psubw
lcall
dec
cmp
jmp
out
and
pavgb
out
xchg
xchg
cmp
push
sub
cltd
les
inc
jle
sbb
pop
stc
dec
inc
loop
aaa
xlat
shll
xorb
mov
jmp
mov
in
xor
or
sbb
inc
xor
pop
xor
and
mov
push
popa
hlt
fwait
cs
add
sub
xchg
xor
jnp
mov
jge
pop
pop
pop
pushf
push
ljmp
mov
xor
je
stos
cmp
test
loopne
aam
jbe
out
mov
in
arpl
addb
daa
xchg
out
ljmp
xchg
mov
test
cltd
push
stc
das
imul
jl
lcall
stos
lds
sahf
or
out
push
and
or
push
jb
out
and
add
mov
int
rorl
xor
mov
ret
ffreep
call
pop
adc
add
dec
out
cltd
das
push
mov
aaa
push
push
jecxz
fmuls
add
in
lcall
mov
orl
push
mov
adc
das
mov
mov
arpl
imul
sub
sti
lea
cmp
adc
int
push
adc
nop
xorb
inc
lods
add
and
test
mov
movsl
add
sarl
int
scas
xor
lds
or
mov
push
pushl
adc
push
outsb
ret
les
cmp
mov
call
addr16
jnp
or
std
enter
dec
mov
es
ljmp
xchg
xchg
mov
movb
aas
les
popf
mov
addr16
in
push
or
add
std
sahf
and
cmpsb
out
aam
adc
imul
or
shll
inc
pop
pusha
aad
mov
or
cmp
xor
ljmp
aaa
push
inc
pop
pop
sub
push
xchg
push
xchg
movsl
mov
call
dec
add
popa
outsb
mov
lea
mov
jno
xor
fbld
nop
cs
xchg
adc
fmuls
cmp
outsb
imul
repz
out
jg
mov
push
shrl
movups
lret
push
mov
daa
clc
mov
and
ja
shll
mov
int3
js
xor
add
scas
inc
xor
sbb
mov
out
popa
ja
and
push
mov
ja
jno
repz
add
add
lcall
mov
scas
orl
cmpl
xlat
and
fimull
mov
enter
loop
xor
leave
pop
inc
add
inc
loopne
fbld
lea
or
out
cmp
mov
dec
movsb
cmp
inc
dec
pop
aam
jmp
adc
jmp
mov
les
inc
in
out
jmp
sbb
gs
shr
inc
xchg
imul
sub
push
nop
push
call
push
test
mov
fstps
mov
inc
imul
les
mov
and
cmp
dec
aaa
xchg
pop
inc
mov
repz
jbe
ret
cld
add
nop
add
push
fimuls
mov
int
addb
test
dec
sahf
inc
daa
pop
clc
out
push
daa
jp
in
pop
add
popa
out
pop
or
cltd
sub
mov
xor
inc
in
sub
rcrb
and
mov
popf
pop
daa
sbb
cmp
xchg
dec
leave
add
sub
aad
sbb
pusha
stc
lods
push
add
push
aad
cmc
mov
fadd
add
dec
inc
je
inc
lock
xor
das
inc
out
cmpb
jne
addb
cmpb
sub
or
push
add
pusha
jnp
inc
xor
daa
push
sbb
adc
lods
jo
fisttps
ss
out
shlb
xor
mov
pop
into
test
or
mov
jle
outsl
dec
cltd
jmp
mov
mov
cmp
dec
mov
push
and
xchg
ds
adc
add
out
sub
xor
xchg
addr16
jne
jmp
sbb
mov
sbb
sbb
adc
out
mov
cmp
push
data16
cmpsl
sbb
test
add
icebp
test
sub
dec
mov
and
cmc
jnp
mov
pop
in
and
or
pop
out
xor
jle
adc
dec
in
outsb
mov
iret
lds
push
pop
ret
add
mov
outsb
push
sub
mov
aad
xchg
mull
lds
xor
add
cmp
cmp
fistpl
jmp
test
repz
sub
inc
rorb
mov
repz
out
mov
jmp
pop
mov
or
xchg
mov
addr16
mov
loope
movsl
and
pusha
xchg
call
xlat
push
adc
xchg
add
cwtl
insl
js
adc
pop
mov
je
cltd
add
das
cmp
lods
xor
inc
inc
push
aas
fneni(8087
and
fsubs
daa
scas
jg
mov
dec
or
test
inc
hlt
dec
jle
xor
mov
mov
sub
in
dec
adc
sbbl
mov
mov
sbb
mov
std
cmpsl
outsl
in
lea
test
mov
setp
shrb
xchg
or
dec
paddsb
mov
imul
sbb
and
pop
sbb
push
out
ret
pop
aas
or
inc
lahf
cmpsb
scas
push
insb
and
jnp
fst
test
stc
push
je
popf
cmc
jne
push
pop
stos
mov
and
sub
in
mov
icebp
mov
js
jp
test
or
or
pushl
mov
add
mov
jbe
mov
movsl
adc
popf
mov
and
lret
mov
lret
test
rcrl
cltd
repz
repz
and
ljmp
nop
mov
iret
or
ds
nop
mov
jo
mov
sarb
pusha
testb
adc
out
jns
jecxz
xchg
dec
popf
es
stc
test
jne
mov
mov
pop
mov
mov
inc
mov
xor
add
mov
xor
rol
cmp
orb
sub
arpl
mov
lcall
or
mov
fdivl
xchg
adc
add
lahf
sbb
divl
les
pop
jl
jns
pop
not
add
jmp
mov
lods
ds
adc
add
xchg
cmp
jecxz
pop
in
shlb
mov
cmp
testl
sahf
es
shll
xor
std
xchg
into
addr16
loop
iret
clc
je
dec
jecxz
jge
nop
cmp
xchg
xchg
jnp
out
insb
sahf
push
dec
mov
inc
xchg
out
mov
mov
popa
lret
fidivrl
push
out
push
outsl
testb
push
sarb
add
rcll
fcom
mov
jmp
mov
sbbl
test
jmp
js
nop
jo
push
push
outsl
mov
or
clc
ss
out
sub
push
inc
xlat
pop
test
popa
lret
dec
inc
stos
dec
cmpsl
cwtl
mov
push
mov
push
fbstp
jg
pusha
ficoms
adc
or
scas
out
gs
mov
addr16
insb
push
ret
jg
adc
or
jbe
shr
bound
add
lods
pop
pop
sbb
inc
arpl
or
pop
and
xchg
xor
xchg
sbb
callw
mov
out
rorb
scas
and
aad
jno
xor
sarl
or
sub
scas
les
adc
mov
xchg
les
or
int3
mov
push
cmp
push
xchg
xor
scas
or
cmp
or
out
mov
cltd
inc
cs
ljmp
adc
sbb
ljmp
mov
sti
xchg
movsl
cwtl
lds
xchg
and
mov
lret
cwtl
jb
ret
ljmp
out
inc
sahf
adc
xchg
adc
loop
movsl
loop
leave
mov
inc
dec
xchg
dec
jmp
add
seto
xor
pusha
sub
lret
cmpsl
jmp
dec
dec
cwtl
push
loopne
imul
cld
add
push
clc
and
leave
sub
mov
fwait
outsb
push
int3
mov
dec
movsb
nop
mov
sbb
outsb
push
shll
dec
lret
out
sbb
add
aam
fnsave
sub
lret
adc
and
rcrb
pop
js
fsubs
rorl
insl
pop
cli
imul
pop
loop
adc
or
mov
add
stc
scas
and
xor
ret
push
inc
mov
ret
rolb
add
adc
xchg
jge
xor
in
mov
mov
push
xchg
iret
mov
call
mov
or
sub
daa
push
mov
sahf
push
sar
dec
nop
sub
xor
pop
mov
imulb
lock
pop
daa
dec
xchg
xchg
and
pop
sub
movsl
aam
popf
imul
mov
out
cltd
sub
shll
aaa
test
jno
shrb
mov
fldl
rclb
out
sub
pop
adc
iret
jp
aaa
add
cmpsl
imul
imul
bts
mov
jg
sbb
mov
bsf
push
jo
sub
into
add
xchg
fisubrs
dec
push
je
fcomps
mov
mov
nop
and
jb
mov
xchg
imul
rcrb
cmp
fmull
sub
pop
adc
add
mov
push
dec
mov
jecxz
fdivrs
rorl
xor
cmp
mov
mov
inc
mov
and
mov
lcall
and
out
sub
and
adcl
or
mov
int
push
jne
call
cmc
add
dec
sti
icebp
add
mov
shrb
mov
psubw
outsb
fisubrl
push
mov
in
mov
iret
sub
test
mov
push
lock
sbb
adc
bound
sahf
nop
cmpl
dec
xor
xchg
arpl
push
xchg
push
out
mov
dec
mov
pop
push
out
push
sbb
jo
xchg
aam
mov
iret
bnd
lea
icebp
adcl
mov
inc
pop
icebp
pushf
mov
rcr
jg
or
ja
pop
mov
test
push
scas
cmp
dec
test
mov
mov
cs
xor
loop
push
jg
sub
lahf
pop
jmp
leave
add
fimull
pop
jmp
in
fldenv
fcmovb
xchg
dec
stos
das
mov
rcrl
dec
movsb
mov
mov
sbb
fisubl
aam
adc
lcall
sbb
pop
lods
jge
or
inc
test
ljmp
pop
xchg
cmp
into
jmp
pop
cmp
fstpl
push
or
stos
mov
lcall
dec
imul
hlt
xor
pop
mov
push
lds
xor
leave
loop
and
xchg
test
imul
cmp
push
cmp
xor
dec
mov
roll
insb
imul
in
and
xchg
sbb
pop
ret
adc
xchg
fstl
pop
xchg
pop
xor
stc
pop
push
mov
movsl
xorb
adc
and
or
adc
outsb
sub
gs
nop
movsl
sub
pop
adc
add
insb
inc
add
adcb
arpl
sub
dec
or
push
in
out
and
xor
repz
pushl
xchg
fistpll
enter
arpl
in
push
data16
add
inc
xchg
sbb
xchg
mov
mov
mov
lret
bound
sbb
test
xlat
mov
push
outsl
aam
cwtl
in
dec
nop
push
mov
add
jl
das
dec
xor
add
jne
cld
call
in
xor
jbe
cli
int3
cmpsb
daa
cmp
sub
adc
push
ds
daa
mov
add
xor
jae
inc
arpl
xchg
es
dec
js
mov
test
jg
dec
loopne
mov
adc
outsl
ja
sbb
outsb
inc
mov
mov
aam
jge
int3
aam
rcrl
lcall
sahf
les
jl
push
cmp
fs
mov
and
mov
stc
pusha
dec
xchg
fnsave
push
ljmp
xchg
fsubrs
dec
xchg
cmp
in
lods
mov
in
mov
ljmp
daa
xor
and
cmpsl
sbb
inc
sbb
ja
int3
push
mov
inc
push
mov
iret
outsl
sub
enter
insb
in
lret
std
mov
xchg
loop
repz
aam
aad
jecxz
jns
je
mov
sbb
and
or
stos
or
xchg
stos
push
pusha
cmp
es
mov
mov
jp
test
mov
inc
xchg
push
movsl
jae
loop
mov
sbb
xchg
sahf
andl
scas
xor
mov
stos
jae
sub
push
stc
imul
lds
xchg
xor
jb
mov
repnz
sub
scas
adc
cmp
gs
or
les
fistpll
xchg
inc
dec
movsb
inc
push
sbb
cmp
or
or
fldenv
dec
call
shl
fwait
mov
xorl
out
mov
jl
test
push
push
push
sub
enter
adc
cmp
scas
iret
bnd
lahf
sbb
mov
push
mov
jg
xor
test
mov
test
mov
mov
cs
cmpsl
and
and
push
cs
and
mov
mov
pop
xor
pop
mov
mov
pop
enter
jb
gs
xchg
loope
dec
xor
add
cwtl
cmpsl
cld
rcrb
dec
popl
xorb
movsl
insb
in
fs
mov
adc
xchg
scas
sbbl
jge
push
cld
rolb
ljmp
xchg
pop
jmp
popf
fidivrl
je
les
sbb
cmpsl
mov
outsb
bound
cmovnp
call
pop
xlat
dec
sbb
dec
arpl
jae
sbbb
sub
sub
add
pop
mov
les
inc
sbb
lcall
or
sub
daa
shrl
mul
adcl
or
push
ljmp
mov
popa
push
xchg
call
push
aam
xchg
dec
sub
dec
outsl
xchg
add
mov
lds
and
gs
stos
mov
daa
test
repnz
pop
push
ds
and
push
xchg
test
test
jo
jmp
ret
test
mov
xor
les
pop
inc
add
loope
dec
ret
mov
inc
jae
ljmp
add
cli
repz
dec
xor
mov
pop
push
fucomp
inc
xchg
pop
sbb
push
mov
fs
aaa
fisttpl
sbb
in
pop
bound
inc
inc
popf
clc
or
mov
mov
je
mov
imul
pop
jae
scas
inc
cld
sub
arpl
int
lret
or
push
aas
fdivs
jnp
addr16
insb
lahf
addb
push
shrb
dec
fdiv
push
dec
push
push
sbb
push
mov
mov
cmp
lahf
push
in
testl
jecxz
push
pop
mov
xchg
jo
add
leave
xchg
fidivl
push
cld
mov
push
push
push
mov
into
dec
xchg
xlat
rorl
outsb
test
and
jp
mov
repz
lret
in
inc
add
add
lods
loopne
hlt
pop
jge
fidivrs
adc
das
or
pop
sbb
js
sub
and
xor
in
dec
clc
loop
adc
je
inc
sbb
mov
popa
into
pop
mov
sub
cmpsl
int
jns
int
push
dec
mov
inc
push
call
sub
in
push
aaa
jne
and
insb
int
add
mov
les
mov
fsubrs
pusha
mov
xchg
ret
lret
sbb
mov
inc
jnp
mov
and
movsl
cmp
inc
cmp
test
adc
js
mov
xor
jae
mov
cmp
jns
js
and
outsb
jo
push
je
mov
imul
push
int
aad
push
loopne
scas
add
enter
pop
or
mov
in
cmpb
inc
sbb
cmp
sub
shrb
mov
call
sub
in
rolb
push
cmp
mov
fwait
lret
xchg
es
lcall
sub
ljmp
in
movsb
daa
jns
sbb
lret
and
iret
test
pop
sbb
xchg
dec
xor
sub
inc
call
mov
dec
lret
xlat
mov
sub
sub
dec
inc
into
adc
ret
in
mov
cmp
xchg
add
shll
inc
aaa
push
jmp
mov
mov
clc
mov
scas
mov
or
adc
outsl
pop
sub
dec
pop
and
ret
inc
dec
mov
addr16
testl
inc
dec
push
or
dec
dec
sbb
push
dec
and
adc
sbb
add
hlt
mov
xor
pop
xor
and
push
sbb
sbb
or
sbb
dec
jle
pop
and
sub
imul
hlt
into
lret
cmp
pop
jbe
aas
add
lods
push
mov
mov
roll
imul
push
cmpsb
jecxz
xor
jge
clc
jecxz
adc
cmpsb
sti
cmp
add
je
push
push
mov
outsl
dec
cmp
cmp
fninit
mov
outsb
ss
xor
cmpb
std
pop
in
shl
pop
gs
scas
hlt
adc
imul
dec
shl
scas
in
loopne
jg
iret
sbb
mov
or
sarl
popa
lock
cmp
in
faddl
repnz
rcr
sub
in
adc
aam
mov
je
mov
addr16
rcr
aas
in
cwtl
cld
jnp,pt
pop
push
popa
mov
std
push
fbstp
das
xor
mov
outsb
sarb
jbe
push
lcall
adc
jae
add
mov
xor
rorl
cmp
test
imul
loop
jmp
mov
loopne
mov
pop
xor
movsb
lds
pusha
push
test
std
shrl
and
add
ja
int3
jnp
mov
xor
push
outsb
into
notb
test
pop
cmpsl
das
pop
call
int
das
xchg
loop
xor
sti
and
addr16
out
jnp
out
cmc
sub
pop
ficoms
sub
lods
scas
push
imul
xchg
or
neg
repnz
pop
stos
inc
fdivs
out
dec
and
jp
mov
add
inc
xor
mov
add
nop
push
lcall
aas
adc
pop
xchg
adc
mov
lahf
mov
xchg
xor
dec
inc
mov
outsl
inc
pusha
pop
dec
cmpsb
int
call
xlat
mov
push
mov
mov
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
push
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
pushl
icebp
loopne
into
in
jo
cmpl
popa
pop
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
outsl
loopne
and
xorb
outsb
xchg
or
xchg
repz
ds
pop
popf
jle
xchg
mov
xchg
xadd
out
pop
outsl
aaa
icebp
imul
into
in
jo
cmpl
and
inc
les
stos
shll
movsb
add
fcoml
pop
imul
repz
lods
pop
insl
mov
imul
nop
xor
mov
xlat
les
shlb
aam
jb
jno
lock
int3
mov
bound
jle
scas
in
pop
add
outsb
imul
adc
sub
and
inc
in
jo
cmpl
and
sub
mulb
out
cmp
cmp
popa
loopne
into
in
jo
cmpl
in
jo
xchg
push
inc
cmp
jo
into
in
pusha
testb
popa
mov
testb
pusha
loopne
into
in
jo
cmpl
popa
loopne
ret
repnz
arpl
dec
in
jo
cmpl
popa
lock
into
cld
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
mov
into
in
jo
mov
sbb
cmp
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
dec
xchg
mov
cwtl
jo
cmpl
jno
into
cmp
cmp
push
and
addb
push
popa
cmp
or
testb
popa
adc
into
in
sub
cmpl
popa
loopne
into
in
jo
cmpl
popa
add
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
cmpl
popa
loopne
into
in
jo
adcl
loopne
into
in
pop
push
pop
dec
xor
mov
clc
add
inc
adc
and
pusha
out
rclb
mov
adc
roll
fxch
jo
es
adc
push
fisttpll
ficompl
stc
pop
sbb
or
dec
les
adc
and
mov
cmpsb
xchg
inc
into
shlb
push
push
std
xchg
pushf
call
cmpsl
xchg
leave
and
fstpl
mov
in
push
pop
aas
pop
sti
les
pusha
and
xchg
xchg
push
fists
and
dec
pushf
ds
mov
es
rolb
inc
aas
arpl
xchg
adc
xor
push
rcr
inc
or
mov
mov
pop
arpl
dec
loop
push
inc
rcll
jge
add
cmp
mov
add
and
or
ja
jo
pop
arpl
cmc
fbld
jo
jmp
lret
popf
pop
jb
cmpsl
lock
lock
add
inc
xor
insb
inc
addb
cmp
add
test
and
pop
les
mov
cmc
mov
fnstcw
jge
rcrb
ja
and
jne
sbb
xor
or
add
fcomps
jbe
test
mov
cwtl
movb
mov
dec
es
sbb
mov
xchg
ja
xchg
and
dec
mov
cld
mov
fdiv
subl
js
repz
adc
ret
dec
sbb
ljmp
dec
jle
lahf
and
sbb
test
int
cmp
test
xor
int
mov
idivl
popa
fdivrs
das
push
inc
or
mov
mov
rorb
inc
cmp
mov
sbb
xchg
add
mov
mov
aad
sbb
sahf
or
jge
push
add
int3
std
lods
sub
out
je
stc
into
adcb
inc
test
sbb
push
hlt
jmp
xorb
daa
jne
ss
adc
dec
nop
lods
mov
imul
jg
sub
xor
xchg
iret
mov
arpl
pop
loope
mov
in
loop
mov
cltd
or
cmc
scas
xor
lcall
jge
int3
mov
push
mov
push
je
stc
mov
dec
mov
add
xor
pop
dec
fs
cli
in
or
add
test
and
dec
sbb
mov
popa
sbb
stos
jmp
int3
std
enter
idivl
push
push
cld
inc
test
adc
sub
mov
gs
adc
mov
repz
xchg
imul
shrb
dec
scas
push
fistps
pop
ja
jbe
cmc
les
imul
pop
cli
lea
movsl
sub
mov
fadds
xor
imul
pushf
jbe
add
sub
pop
pop
enter
sbb
dec
add
mov
popf
dec
sub
sub
mov
xchg
pusha
inc
push
cltd
inc
xchg
mov
rclb
sbb
insl
orl
lcall
mov
lds
push
mov
aas
mov
cmp
loope
xchg
mov
or
fs
xchg
sub
movsw
scas
or
sti
pop
add
sbb
sbb
ja
loope
xchg
and
cmpsb
cmp
popf
loop
stos
call
in
sub
into
push
and
xor
mov
dec
or
or
inc
int3
pop
mov
out
inc
push
and
iret
and
aaa
mov
cmp
mov
gs
movsl
cmp
cmp
clc
sbb
sbb
xchg
or
xchg
push
pop
jg
pop
outsb
notrack
mov
cmp
leave
pushw
sub
push
inc
cmp
ljmp
and
and
outsb
push
pavgb
das
addr16
pop
test
lahf
mov
out
and
xchg
bound
outsl
xorb
mov
dec
sbb
dec
outsl
nop
or
mov
lret
adc
xor
and
and
mov
sahf
adcl
stc
insl
les
hlt
sbb
lds
push
sbb
arpl
enter
xor
clc
or
cltd
in
or
aaa
or
ret
mov
xchg
dec
jg
insb
loop
add
pop
repz
xchg
nop
cwtl
sbb
sub
roll
push
adc
push
inc
or
sub
outsl
xchg
fwait
shll
pop
and
push
das
xor
push
lock
xchg
int
jge
ss
stos
cmpsb
stos
lock
fwait
in
daa
xor
jecxz
cmp
jecxz
add
lea
cmp
mov
mov
jecxz
mov
push
stos
xchg
je
mov
nop
fstpt
lret
arpl
iret
mov
sbb
push
pop
iret
sub
clc
imul
in
out
sbb
add
cmp
adc
lahf
mov
mov
sub
jne
imul
jne
mov
mov
sbbb
inc
cmp
jmp
and
mov
testl
push
cmc
sarl
inc
or
aam
pop
ret
ss
push
mov
pop
cmp
cmp
push
sbb
gs
add
mov
add
fstpl
inc
cli
es
xchg
aaa
test
sbb
fstps
js
insw
data16
hlt
dec
pop
cmp
cmp
push
lods
ret
jg
add
pop
or
insb
or
ror
xchg
xor
dec
inc
xchg
xor
jbe
adc
scas
cmp
lcall
leave
js
and
je
cmpsb
iret
and
add
pop
jbe
xchg
popf
push
cld
call
mov
test
cmp
hlt
cmp
negb
mov
mov
data16
mov
testl
leave
imul
movsl
and
pushf
fcmovb
push
fistl
and
sti
xchg
push
leave
das
mov
and
vrcpps
movsb
inc
sbb
loop
es
push
and
lret
jg
pop
nop
add
cmp
cmp
call
cwtl
pop
nop
fldt
dec
stos
or
jae
hlt
inc
rorl
test
call
cltd
push
roll
stos
mov
pop
int3
ds
cmp
add
lock
push
xchg
inc
sbb
arpl
cmp
stc
shll
push
sbb
cmc
push
out
into
xor
cmp
mov
sub
cwtl
cmp
xchg
and
pop
mov
sbbl
sub
out
sub
imul
pop
notb
fisttpll
sub
mull
and
sub
arpl
outsl
ss
jle
std
mov
dec
jb
fs
mov
adc
mov
xchg
sbb
stos
nop
xchg
adc
mov
lock
sbb
into
sbb
jns
cmc
dec
dec
jno
dec
jl
cmpsb
clc
adc
mov
sub
loope
out
test
xor
push
push
stos
and
mov
int3
fimuls
mov
cmp
dec
je
lods
out
fsubrl
fsubrl
inc
rolb
or
pop
xchg
xor
aas
mov
mov
adc
xchg
add
popf
out
pop
dec
mov
mov
lretw
insl
xchg
pop
and
hlt
rcll
dec
jns
arpl
push
divb
cmp
push
movsb
sub
mov
push
call
adc
xor
js
loopne
gs
xchg
mov
cmpl
or
dec
out
ja
lea
mov
xor
and
mov
rcrb
mov
popa
sahf
mov
inc
dec
scas
push
dec
jg
fadd
sub
scas
xchg
jmp
jo
lock
mov
jo
push
outsb
rclb
bound
inc
cmpl
aas
out
mov
or
cmp
sbb
adc
jbe
or
popf
jbe
push
and
adc
jmp
int
jbe
cmpsl
std
loopne
or
sbb
and
adc
fnstcw
cmpsb
in
insl
mov
or
xchg
dec
mov
fists
jae
xchg
fsubs
lret
pushf
mov
out
jne
jne
push
jmp
arpl
dec
add
imul
lds
cltd
dec
and
xchg
dec
xor
in
es
lahf
push
dec
or
adc
cltd
push
mov
gs
sbb
rolb
in
cld
push
lods
push
es
push
push
adc
rcll
icebp
mov
jns
adc
mov
sahf
das
int
mov
sbb
fldenvs
xchg
lds
lea
fsubrl
pop
sbb
out
testl
popa
jecxz
loopne
xchg
and
int
xor
adc
push
dec
cmpsl
cld
jmp
frstor
jle
push
js
out
mov
mov
xor
nop
and
lds
mov
add
stos
imul
arpl
fdivl
add
sti
jp
fwait
inc
test
movb
add
push
mov
jnp
add
fiadds
xlat
mov
or
sbb
mov
inc
push
jmp
or
cmpsb
sub
pop
stos
and
in
rol
test
xor
popf
lea
mov
xchg
adc
std
std
testl
loopne
lods
or
ljmp
mov
fiadds
rorl
push
call
mov
outsl
mov
test
mov
rclb
mov
inc
adc
movsl
push
xchg
add
mov
and
inc
insl
jne
dec
int3
push
test
lret
cmpsb
jae
loopne
lock
in
sub
sbb
mov
mov
adcl
adc
pop
jecxz
in
pop
adc
push
xchg
mov
insl
push
ja
push
or
pop
cmp
int
dec
dec
mov
lret
repnz
add
or
pop
stos
iret
dec
lds
aad
add
jns
stc
dec
cltd
sbb
sahf
popf
push
mov
mov
loope
lret
stos
mov
aam
fwait
add
pop
cmp
aam
pop
std
pop
out
mov
or
aas
loop
in
adc
inc
or
xor
mov
popf
loop
xor
or
std
lea
adc
mov
sub
test
push
pop
xchg
xor
in
or
or
mov
xchg
or
sbb
in
lock
fisttps
imul
jp
lahf
jge
adc
xchg
jo
aas
dec
push
mov
ret
adc
jg
and
leave
mov
mov
imul
push
enter
inc
mov
cmpsl
scas
inc
cs
push
adc
ret
sti
int
popf
mov
cli
pop
adc
arpl
ds
xchg
aad
cmovne
punpcklbw
jmp
js
inc
insl
fs
cmpb
xchg
jg
int3
call
dec
addr16
js
je
adc
std
jnp
imul
inc
cmc
test
mov
lds
push
out
add
in
roll
or
adc
inc
fistpll
jnp
adc
ljmp
mov
jae
push
xchg
and
xor
and
insl
and
and
fdivs
pop
dec
xor
mov
stos
cmp
inc
je
push
sub
push
mov
xlat
ljmp
rolb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
