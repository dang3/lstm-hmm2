lods
sbb
inc
stc
test
fsts
aad
lret
stc
mov
jecxz
or
sub
lret
xor
imul
popf
push
add
lret
xor
je
sbb
int
sbb
sub
sbb
cmp
mov
rorb
scas
lret
ret
aas
test
sub
lret
ljmp
mov
aaa
and
xor
add
or
stc
loope
daa
ja
nop
jmp
fstpt
nop
jmp
xchg
push
nop
jo
xchg
push
daa
stc
cwtl
mov
pop
pop
push
rcrb
push
xchg
mov
cli
lea
mov
add
mov
repnz
xchg
xchg
xlat
sub
pop
xchg
xor
add
arpl
mov
mov
ret
add
nop
leave
divb
or
aad
push
fcmove
jp
out
aaa
push
jecxz
adc
fsubrs
in
add
and
or
inc
insb
adc
mov
sbb
cmc
test
xchg
out
mov
ficoms
int
mov
les
cmpsl
sub
lcall
jno
adc
sti
int
xor
pop
int3
clc
pop
mov
fstp
sbb
repnz
fcmovb
sub
leave
iret
mov
or
rorl
add
jp
sbb
push
aam
mov
sar
aam
and
push
xchg
data16
pop
mov
mov
pushf
stos
iret
dec
insl
sub
push
jle
call
cmp
incb
std
pop
les
sbb
call
jge
push
push
jg
sbb
xor
xchg
pop
pop
pop
adc
push
add
fwait
xchg
adc
in
gs
inc
shl
xchg
dec
mov
mov
loope
lods
daa
clc
inc
push
lods
fs
mov
dec
or
leave
test
sbb
xor
mov
or
and
pop
lods
add
fs
sbb
sub
fiaddl
adc
stc
add
jo
xchg
lea
cmp
sub
pushf
imul
leave
mov
pop
fisubl
mov
popf
mov
mov
jbe
inc
mov
mov
jbe
addb
pop
dec
stc
xor
jl
addr16
aas
in
mov
arpl
pop
or
add
jns
in
rclb
xchg
daa
add
mov
or
jmp
ja
adc
test
subb
cmc
out
or
or
xor
rcll
sbb
jo
cmp
sub
sub
cmc
push
adc
mov
or
negl
mov
xchg
push
inc
loop
shll
mov
imul
in
inc
push
mov
sbb
lcall
test
xlat
dec
cmpsl
push
movsl
int3
leave
push
pop
lret
mov
or
and
ds
mov
and
sub
out
cltd
xor
push
add
imul
int3
dec
dec
pop
cmp
dec
adc
aas
les
roll
push
jge
rcl
fistps
jbe
mov
lods
pushl
movsl
fcoml
mov
scas
nop
jae
cmp
jp
out
call
pushaw
jb
ja
or
xchg
repnz
xor
outsb
sub
arpl
bnd
addb
loope
add
stc
aaa
inc
jmp
movsb
inc
flds
push
out
mov
xchg
mov
cmc
test
scas
xor
cli
mov
mov
icebp
out
es
pop
inc
or
call
imul
xchg
fs
inc
cmp
dec
mov
xlat
fcmovbe
inc
mov
hlt
test
inc
loope
loopne
popa
test
cmp
xchg
lret
mov
les
xchg
xchg
addb
cmp
cmc
xchg
jp
jge
and
inc
sbb
pop
push
cli
jecxz
subb
pop
enter
push
cmp
cmpsb
clc
pop
lods
in
push
outsb
in
loopne
out
int3
pop
dec
xlat
dec
test
adc
and
cmp
ret
and
lods
push
push
popf
call
loop
sbb
sub
push
pop
add
jb
sbb
rorl
xchg
dec
jg
jmp
call
mov
xchg
cltd
enter
dec
aas
xlat
je
pop
mov
dec
mov
inc
cmpsl
xor
jecxz
or
dec
cmpsb
mov
sub
xchg
imul
inc
insl
mov
xor
icebp
repz
cmpb
adc
dec
push
push
std
pushf
push
or
sub
psrlq
arpl
test
ja
aam
jmp
imul
int3
adc
inc
faddl
pop
dec
faddl
mov
cmpsl
mov
scas
mov
test
xchg
push
or
js
mov
fwait
sub
inc
shrb
movsl
push
dec
mov
mov
pop
xchg
call
cs
test
lret
pop
push
fstl
in
jae
sti
gs
mov
shlb
out
add
out
daa
jbe
les
jne
sti
test
stos
xor
sahf
loope
ret
hlt
mov
cltd
hlt
pop
push
inc
or
cld
dec
cmp
nop
inc
loop
mov
loop
pop
push
xchg
cmp
mov
add
out
rcll
inc
je
ja
ss
cli
and
sub
aad
xor
jmp
inc
out
pop
push
push
daa
std
dec
loope
scas
cmp
test
inc
stos
push
adc
stos
dec
mov
arpl
fwait
adc
or
jb
das
jnp
xor
hlt
es
mov
ljmp
dec
hlt
stos
push
ss
pop
cmp
iret
lds
lock
push
or
xor
es
pop
adc
sti
add
jp
sbb
xor
dec
push
jg
pop
or
subb
cltd
pop
enter
sbb
cs
pop
roll
dec
sti
pop
ficoms
cmp
and
fdivrs
mov
sub
lidtl
mov
push
aaa
lock
filds
jge
and
fdivl
xchg
gs
or
insl
sub
xchg
and
icebp
std
lea
ja
in
inc
lods
lret
xor
sub
xlat
pop
and
sub
arpl
adc
push
shl
sti
jmp
adcl
fstl
dec
js
and
lahf
pop
xchg
cmp
push
cmpb
jns
sbb
push
popf
xchg
xor
ret
ds
sbb
in
cmp
je
or
xor
bound
cmp
jb
xlat
fsubrl
pop
outsl
das
movsl
adc
jbe
inc
dec
pop
add
xchg
int3
xchg
sub
pop
pop
popf
bound
xchg
cmpsl
andb
aaa
cmpsl
outsb
inc
cwtl
clc
fsubl
lahf
sbb
adc
ljmp
in
add
mov
xchg
aaa
dec
cltd
mov
fidivrs
ja
lcall
cwtl
loop
xchg
stc
jge
roll
pop
iret
ds
or
sbb
fwait
mov
and
mov
pop
and
cmp
cmp
jmp
enter
loope
sub
repnz
mov
scas
pop
xchg
call
xchg
xchg
add
call
mov
mov
scas
pop
sbb
mov
fnstsw
lret
cmp
fistpl
xor
or
ds
add
cmpb
add
inc
pop
pop
dec
rorl
push
xorl
or
push
mov
aaa
pop
jb
xor
insb
incl
jno
lods
jecxz
push
or
bound
jbe
push
ds
movsb
and
sahf
addr16
call
dec
pop
jp
imul
push
mov
xchg
xor
or
roll
or
mov
xor
xor
xchg
jne
xor
lock
data16
lret
clc
push
mov
or
mov
or
loop
andb
fisubs
jg
sbb
add
xlat
nop
pop
ss
sbb
imul
push
add
stos
jno
sbb
aam
call
sbb
scas
movsb
fwait
les
mov
insb
push
inc
test
dec
cmpsl
sub
in
loope
lret
repz
adc
push
cli
xor
jnp
nop
pusha
inc
lret
push
bound
pop
imul
out
mov
and
cmp
hlt
aas
outsb
mov
pop
ret
rcrl
cli
rol
add
add
mov
sbb
stos
or
and
insl
or
dec
arpl
add
js
xchg
sti
push
ret
push
orb
ret
jmp
adcb
mov
ret
jno
mov
repnz
jno
jle
loopne
icebp
jae
jnp
imul
push
stc
cmpsl
repz
jns
jno
sti
ja
or
fwait
lret
data16
rorl
in
push
movsl
ds
or
jl
clc
outsb
imul
and
inc
imul
popf
shlb
repnz
push
push
cmovs
in
ds
push
stos
cmp
mov
shll
jo
dec
push
stos
xor
cmp
movsb
sti
movsl
daa
jnp
int3
cmc
xchg
mov
mov
lds
xor
punpckhdq
lcall
daa
inc
sbb
daa
or
cmp
mov
or
mov
and
movsb
mov
movsl
and
jecxz
lahf
inc
in
les
xchg
jl
cmp
push
or
lahf
or
jp
xchg
dec
inc
inc
push
cs
rorl
and
xor
xchg
and
popa
dec
orb
mov
in
sti
inc
adc
into
pusha
subb
cmp
cmp
mov
insb
cs
jl
call
mov
ret
insb
pop
mov
sbb
lret
xor
stc
sbb
mov
sbb
js
stos
sbb
popa
sub
fstl
and
mov
lods
repz
sbb
lcall
sub
pop
xchg
mov
lock
addl
mov
and
lods
mov
xor
cwtl
jno
ja
lret
adc
out
daa
loop
lret
mov
scas
push
cli
pop
cmc
imulb
jno
push
push
cs
imul
iret
ljmp
call
pop
aas
daa
es
insl
push
push
je
cmp
xlat
ret
repz
mov
in
test
stos
xchg
fnsave
dec
pop
pop
pop
mov
cmp
dec
std
pop
cmp
or
xor
repz
adc
xchg
cmpsb
repz
rol
in
rcrl
out
jp
adc
inc
and
movsb
ficompl
inc
inc
cmp
roll
adc
outsb
xor
jo
cmp
out
ljmp
xor
movsl
add
repnz
out
mov
xor
push
shlb
dec
test
xor
bnd
push
div
pop
or
cltd
or
mov
and
adc
dec
lock
xchg
data16
mov
neg
adc
pop
xlat
outsb
imul
mov
jne
jge
pop
mov
mov
lcall
push
xchg
pop
in
std
pop
mov
into
mov
shll
xchg
mulb
rolb
pushf
xchg
movsb
adc
in
repz
jb
incl
sbb
subl
cmpsb
daa
out
lock
sarl
dec
mov
addr16
xor
mov
or
cmp
or
loope
pop
jp
xchg
pop
mov
leave
or
pop
shll
push
pop
inc
enter
xchg
std
iret
xchg
lcall
mov
daa
cmp
cmpb
xlat
sbb
pop
lods
and
xor
test
xchg
dec
mov
stos
cli
sbb
test
pop
jno
jno
and
fidivs
lret
loope
leave
in
xor
push
pop
pop
lds
gs
xor
shl
les
test
push
mov
jae
test
pop
popf
push
xor
lock
jnp
sbb
pop
addr16
adc
push
pop
dec
outsb
fdivrl
xor
inc
dec
fistpll
mov
inc
cmc
cltd
or
in
mov
xabort
cmpb
or
out
testl
sahf
jp
fistps
movsl
mov
test
les
mov
pand
jns
push
xor
push
int
pop
and
and
mov
loope
pop
lret
int3
dec
or
mov
lcall
cmp
inc
add
xchg
mov
rclb
xor
aas
stos
mov
or
pushf
cmp
enter
push
jecxz
das
mov
mov
cmp
push
cmc
xor
xchg
std
pop
mov
cmc
xchg
pop
js
daa
shrb
out
pop
shll
xchg
into
sub
daa
adc
xor
movsl
imul
dec
sbb
xchg
mov
pop
daa
cmp
outsl
out
test
icebp
mov
sbb
push
adc
dec
out
jp
addl
outsb
push
pop
push
jmp
ljmp
incb
xor
xchg
into
sbb
sub
loope
jb
add
fs
jmp
jle
icebp
pop
ret
out
in
dec
fiaddl
mov
xor
sarl
adc
addr16
rcrb
in
xchg
pslld
sbb
ror
aas
jle
mov
stos
push
in
dec
pop
cmp
lods
cmp
mov
pushf
inc
pop
jno
fwait
dec
negl
and
pop
idivb
imul
sbb
cmp
inc
je
mov
test
fldenv
xor
aam
cli
popf
call
mov
push
cmpsl
mov
std
or
imul
pop
outsb
jecxz
add
push
clc
dec
add
lret
sbb
dec
pushf
leave
inc
gs
dec
out
dec
and
cmp
fisubrs
sub
ffreep
test
adc
call
mov
jno
jmp
enter
call
inc
test
adc
orb
xlat
leave
mov
adc
scas
add
xlat
or
fldl
adc
inc
push
es
jmp
mov
popa
and
mov
push
fidivs
xor
outsb
mov
or
push
std
int3
fs
mov
mov
addb
ret
xor
jo
jle
popa
xor
adc
mov
mov
xor
add
lea
adcb
jo
pop
stos
pop
push
clc
and
dec
sti
repnz
aas
mov
fwait
cmp
hlt
xor
into
sbb
outsb
push
inc
push
dec
int
call
ficoms
pop
lcall
sub
cs
es
pop
mov
and
fildl
pop
xchg
push
ljmp
rorl
ljmp
and
ret
in
fstps
inc
push
out
add
stos
js
dec
ret
inc
add
sbb
sbb
or
jb
insl
push
and
outsl
jbe
repnz
and
shll
std
xlat
outsl
mov
imul
pop
sbb
in
add
jne
ss
xchg
popa
mov
push
rorb
and
arpl
les
adc
jno
loope
push
jmp
dec
dec
fwait
gs
cwtl
aad
pop
cmc
cli
inc
mov
out
mov
scas
dec
push
push
push
sbb
inc
mov
icebp
ficompl
outsl
les
sti
xchg
inc
call
out
in
repnz
xchg
stc
scas
cmp
in
loopne
mov
jo
dec
push
adc
pop
mov
cmp
push
sbb
popf
pop
mov
int3
lcall
lds
adc
out
pop
mov
ss
hlt
stc
pop
jmp
add
std
or
or
adc
and
cli
push
push
sub
mov
in
ret
ja
ja
adc
and
fnsave
inc
je
jmp
gs
sahf
mov
xor
inc
lods
rorl
adc
cmc
shll
ss
leave
lahf
scas
addb
repnz
mov
ret
sbb
out
add
or
push
xor
fadds
scas
adc
addl
dec
mov
push
test
push
sbb
fistpl
mov
xor
push
sbb
adc
and
dec
pop
inc
cmp
insl
sub
out
push
sub
jae
sub
aad
add
xchg
sbb
leave
je
filds
test
mov
mov
or
xor
dec
pop
xchg
lret
cltd
in
sarl
mov
cmp
push
jl
out
lcall
fsubrp
scas
or
dec
xchg
imul
cmp
jle
dec
out
stos
sub
test
jns
cmp
lock
cmp
push
adc
xor
mov
scas
in
cmp
mov
test
xchg
mov
sahf
in
mov
sub
adc
sbb
es
xor
aam
cmp
jae
imul
test
rolb
cltd
fiaddl
nop
clc
fists
xor
mov
cmp
pop
movsl
lahf
lret
or
inc
fs
repz
xchg
testl
in
into
mov
aas
dec
jbe
mov
push
mov
pop
imul
and
add
or
repnz
nop
aad
pop
aaa
int3
ja
push
mov
popf
sub
fiaddl
jne
xchg
pop
pop
push
sub
fsubl
fxtract
cld
xor
and
inc
stos
push
add
and
cmp
push
mov
repz
scas
pop
and
leave
testl
mov
imul
pop
adc
jp
movsb
icebp
push
nop
dec
add
xchg
lock
test
mov
mov
jmp
shlb
repz
pusha
mov
je
dec
das
ds
and
inc
fdivrs
mov
add
rclb
testb
cld
push
into
int3
cmp
sbb
xor
stos
jge
sub
mov
scas
fs
movsl
jp
inc
xchg
sbb
mov
mov
xor
test
in
sub
aaa
popf
push
and
mov
std
mov
push
cltd
xor
xor
and
jge
inc
and
les
push
jnp
in
adcb
push
mov
xor
arpl
or
pushf
push
mov
mov
shlb
icebp
mov
dec
and
push
inc
stos
rolb
xchg
aam
cmpb
lahf
mov
xchg
sahf
jmp
in
mov
mov
cmc
adcb
hlt
add
outsl
aaa
shrb
mov
mov
ljmp
es
and
lds
add
pop
push
lock
inc
lds
test
ficoms
pop
jl
xor
xchg
push
add
ja
in
xor
push
add
inc
sbb
or
cmp
push
pop
into
sbb
xor
negb
mov
mov
fsubrp
ja
xor
jmp
pop
dec
pop
in
dec
aas
push
pop
mov
mov
cltd
push
imul
xchg
pop
lcall
push
or
insl
aas
outsb
dec
mov
jecxz
in
fldenv
bswap
pop
clc
sbb
hlt
std
jbe
mov
addl
jnp
ret
mov
xchg
sub
push
dec
fwait
or
cli
fsubs
jno
sbb
and
xchg
sub
testl
in
imul
repz
mov
dec
jae
icebp
mov
js
dec
jecxz
cmp
int3
xor
xor
stos
and
imul
push
push
inc
or
dec
adc
andb
jle
dec
dec
fcmovb
sub
sbb
popa
mov
sbb
in
pusha
mov
or
push
xor
adc
inc
cmp
mov
xchg
cmp
mov
jecxz
xor
mov
lret
cld
push
rorb
repz
ljmp
pop
lds
rolb
cmp
and
call
scas
sbb
pop
insl
pop
jecxz
push
xchg
sbb
sub
pusha
fsubs
arpl
dec
pop
pop
xor
xchg
aam
mov
popf
fsubl
pop
mov
jmp
rclb
push
into
push
cmp
xchg
sub
jecxz
sub
sbb
js
xchg
das
inc
jb
jmp
sub
daa
add
lock
arpl
daa
mov
push
loope
xchg
pop
xor
fiaddl
fwait
out
inc
mov
mov
pop
xchg
stc
inc
xlat
cld
and
sub
fmull
shll
xchg
jns
aas
jmp
fcmovne
sbb
push
rcrl
or
out
or
adc
and
and
pop
cmp
je
mov
fcoml
mov
cmp
sub
jae
push
subb
jnp
xor
jb
aaa
out
xchg
inc
es
xor
or
or
push
sub
xchg
add
mov
mov
pop
sub
insl
xor
add
add
std
or
jbe
add
pop
loope
cld
data16
add
or
sti
outsl
jb
test
int
dec
jo
fdivrl
inc
test
mov
add
pop
cld
pop
inc
movsl
repnz
xchg
fnstenv
dec
xchg
sbb
shrl
or
xchg
pop
dec
mov
adc
push
ret
dec
sbb
je
aas
push
clc
jecxz
and
pop
mov
or
jg
jae
adc
inc
lahf
lods
jns
sub
stc
fisttps
ret
lret
mov
bound
or
fld
in
pushf
into
into
jl
add
movsb
push
cwtl
cltd
xchg
out
sbb
stos
clc
push
mov
loope
sbb
pusha
lea
jecxz
mov
ret
xchg
pop
xor
jb
adc
lock
xchg
mov
outsl
jmp
cwtl
lret
fnstsw
daa
inc
dec
pop
mov
push
add
jge
or
inc
xor
cmp
push
mov
in
sub
sbb
pop
test
mov
outsb
or
push
dec
fs
push
mov
push
mov
dec
jns
aad
mov
cli
cli
sbb
adc
inc
or
jle
mov
in
iret
shlb
lret
aad
aam
call
in
loope
pop
jmp
jne
daa
shlb
decl
adc
mov
loopne
jp
adc
es
fucomip
int
hlt
rcll
into
ret
out
pop
or
jecxz
mov
and
data16
call
call
pop
lds
insb
adc
inc
jnp
push
test
sbb
jmp
out
pop
fld
pop
mov
les
adc
sub
add
cs
mov
inc
loope
lcall
cmp
cltd
jne
popf
enter
in
xchg
dec
int
das
adc
insl
and
outsb
mov
aam
xor
pusha
mov
or
push
sbb
insb
pop
add
or
mov
aam
add
ret
cmc
jg
gs
mov
ja
inc
inc
test
cmp
iret
pop
xchg
xor
dec
or
pop
outsl
clc
ja
pusha
nop
scas
xor
push
fcomi
mov
ljmp
fcompl
call
push
rcl
outsl
xchg
dec
repnz
loop
or
jmp
add
sub
sbb
faddl
jle
movb
iret
pop
and
jo
insl
push
icebp
xorb
lret
ss
cmpsl
lret
in
sub
sti
repz
mov
or
out
dec
lret
pop
pop
xchg
sub
inc
add
ficompl
sti
lahf
lret
push
push
dec
pop
rclb
adc
or
inc
mov
sbb
sub
xor
imul
lahf
or
in
add
iret
lock
mov
sarb
leave
push
push
and
jnp
shl
or
mov
dec
imul
xchg
mov
outsb
fisubs
cltd
mov
lret
movsb
sub
testb
negb
cmp
into
xor
adcl
push
lcall
aaa
lods
adc
push
sub
lret
jmp
into
sbb
in
add
fildll
sbb
mov
mov
push
ret
push
and
mov
cmc
xor
movsb
push
dec
xchg
add
or
jg
loop
push
lahf
mov
mov
inc
or
add
scas
stos
mov
pop
aad
xor
jmp
leave
mov
jae
out
cwtl
mov
adc
repz
inc
loopne
and
push
mov
ds
pop
jl
inc
xchg
push
adc
jmp
mov
imul
mov
pop
ljmp
cmp
cmc
xchg
rcrb
es
cld
jno
sub
push
int3
fs
pop
dec
mov
add
push
pop
mov
mov
mov
add
xchg
fwait
arpl
movsb
sbb
mov
dec
stos
sub
test
sbb
nop
pop
stc
pusha
add
push
mov
mov
aad
in
loopne
nop
lret
inc
out
add
addr16
fists
push
dec
jnp
mov
push
and
test
adc
test
push
mov
push
mov
out
push
sarb
loop
fidivrs
jg
sbb
fldenv
or
mov
cmpsl
push
or
movzbl
jmp
xchg
cs
mov
loopne
adc
pushf
add
arpl
sub
inc
mulb
pop
mov
ret
cld
dec
in
fistpll
insb
loop
loopne
dec
insl
mov
fdivs
mov
cmp
cmp
dec
inc
stos
adc
xorb
inc
push
inc
mov
aas
outsl
loopne
mov
xlat
dec
sub
aam
negl
lahf
outsl
pusha
mov
jg
lcall
in
cmp
movsl
fidivl
dec
dec
mov
sbb
sbb
cmp
cwtl
sub
jns
mov
mov
in
ret
loope
dec
ss
push
pop
adc
ror
jo
outsl
or
jne
loopne
push
popa
mov
jp
jae
xchg
insb
outsb
test
test
mov
pop
mulb
iret
jl
xchg
mov
popa
add
sbb
xchg
adc
ljmp
jne
repnz
mov
iret
add
lock
mov
shlb
mov
nop
in
fildl
repz
test
jns
cld
mov
cli
imul
lahf
mov
imul
sahf
flds
in
fwait
js
sbb
lret
pop
mov
divl
xchg
dec
push
push
push
imul
and
adc
and
xchg
aam
or
and
inc
pop
mov
lock
mov
push
out
xor
cltd
ds
xor
out
pop
push
dec
sub
sbb
insl
dec
imul
adc
add
inc
jle
mov
in
movsl
sub
shlb
and
icebp
xchg
orl
xor
adc
repz
rcl
test
add
fdivp
jae
cmp
out
cs
lods
cmp
gs
aaa
and
sti
push
pop
pop
xchg
nop
adc
mov
mov
js
pop
shr
ja
xchg
sbb
add
or
outsb
dec
inc
divl
jae
inc
mov
into
mov
mov
jle
mov
or
daa
and
jno
pop
pop
dec
sbb
out
pop
cmp
dec
jmp
shl
mov
ds
and
lret
test
clc
mov
loope
mov
push
inc
scas
pop
cmpsb
jne
leave
sub
and
xlat
jl
sub
scas
cwtl
push
and
pop
sahf
and
sub
or
testb
pushf
or
jmp
mov
aas
xchg
jae
movsl
cmp
stos
popa
les
dec
mov
cmp
xor
pop
mov
mov
xor
xor
push
je
stos
dec
js
xor
ret
pop
push
sub
sbb
sbb
int
inc
jae
adcb
rcl
in
imul
das
imul
mov
cld
mov
adc
sbb
cmp
dec
faddl
or
ss
sbb
jns
sbb
adc
jno
std
movsl
jp
sub
jb
xchg
mov
out
inc
inc
test
imul
cmpsl
lods
cmp
mov
mov
loope
xchg
xor
int
int
push
lock
mov
insb
sbb
xor
fdivl
inc
add
sbb
cmpsb
cltd
fcoms
data16
and
xchg
imul
pop
aaa
add
or
push
xor
in
sbb
and
adc
sub
pop
inc
bound
xchg
dec
add
loopne
and
xor
arpl
xchg
pushf
jbe
push
adc
lock
adc
or
test
adc
stc
cs
pusha
jnp
inc
cmp
adc
ljmp
add
cwtl
shl
jmp
pop
mov
jp
call
push
xchg
call
nop
jne
mov
nop
pop
xor
movsb
or
dec
jnp
mov
cld
dec
xor
adc
inc
mov
pop
es
push
sub
addr16
or
stos
jg
mov
out
bound
xor
popa
mov
jg
aas
aam
test
xor
fldenv
sbb
jnp
jo
mov
push
jmp
sbb
in
cmp
mov
fsubrl
cmp
hlt
adc
sub
dec
jl
sub
adc
pop
addr16
pop
push
xor
bound
ret
sbb
cs
andb
sbbb
sbb
daa
adc
insl
push
cltd
dec
mov
lods
cmp
jle
push
nop
sbb
fisttpll
jmp
inc
cmp
sahf
mov
jnp
sub
stc
rcll
inc
es
mov
aam
addr16
xor
test
jno
jbe
cmp
inc
add
jb
pusha
xchg
sbb
adc
pop
xor
lea
push
pushf
sub
in
xor
jns
in
sub
arpl
cmp
popf
hlt
enter
pop
xor
mov
fcoml
push
daa
lret
cld
sarl
adc
xor
mov
adc
lods
mov
cmpsb
fimuls
adc
insb
test
dec
push
sahf
pop
push
add
push
addb
ret
xchg
sahf
mov
adc
lcall
adcb
sahf
pop
push
insb
mov
push
js
or
mov
xor
lcall
dec
pop
repnz
in
out
add
mov
stos
mov
xchg
xor
inc
sub
pop
jne
dec
cs
jnp
xchg
movsl
lcall
je
xor
xor
push
dec
fimuls
std
jg
das
cltd
sbb
xchg
out
std
xchg
lahf
jb
pushf
and
rdmsr
jae
stc
xchg
insl
adc
jmpw
sbb
test
push
pop
or
lock
fnsave
in
loope
inc
cmpsw
jno
shr
mov
lock
fcomp
xor
lods
stos
push
cs
repz
cmpsb
dec
push
fs
loop
int
mov
fcmovnb
push
movsl
aam
std
rolb
xor
loope
lock
push
mov
call
dec
test
and
and
repz
sub
or
sbb
pop
test
adc
xor
sub
bound
ja
lahf
pusha
xchg
test
test
lods
push
int3
mov
mov
out
lods
in
rcll
pop
cs
mov
push
mov
cli
inc
push
adc
dec
mov
add
enter
mov
mov
bound
imul
pop
pop
adc
xor
push
roll
mov
ret
cmp
dec
out
adc
add
aam
jo
loope
xor
movsb
lock
hlt
sub
insb
sub
push
dec
fisubs
cs
xor
cwtl
in
loope
shll
fisttpl
shl
push
das
rorl
insb
cmp
fstpl
cmp
mov
in
adc
sub
mov
mov
ljmp
cmp
adc
leave
jne
or
push
dec
enter
cmp
ja
mov
pop
js
mulb
mov
xchg
jp
dec
mov
leave
stos
rcrl
xchg
push
pop
xchg
dec
xchg
js
inc
popf
add
repnz
push
sti
mov
jne
scas
ds
or
aaa
scas
sub
loop
push
iret
dec
adc
lea
inc
cmpsl
sub
xor
popf
loop
mov
mov
jle
and
insb
int3
xor
inc
push
jp
jmp
adc
jg
or
sahf
jmp
xor
xchg
shrb
sbb
adc
adc
in
jbe
cli
mov
xchg
cmp
mov
stc
inc
test
xchg
dec
in
and
push
push
aad
scas
mov
repz
popf
cmp
and
scas
inc
jmp
mov
xor
sbb
add
data16
xchg
mov
mov
sbb
in
fsubl
add
popf
pop
push
mov
ret
and
jo
mov
sti
mov
sti
das
mov
xchg
subl
pop
clc
cmp
sbb
pop
dec
jp
lods
lret
in
mov
out
dec
sub
jb
mov
or
add
fsubrs
mov
push
cmp
mov
xchg
add
mov
insb
cmp
xchg
dec
jo
xchg
cltd
mov
xchg
mov
push
pop
loope
xchg
or
ljmp
sarb
push
mov
out
in
jg
push
lea
iret
jecxz
call
outsb
adc
mov
insb
jo
adc
dec
or
mov
fwait
les
cmpsb
aam
cmp
jge
imul
into
scas
movsl
stos
mov
test
shll
lock
hlt
lahf
pop
mov
push
or
sub
out
inc
popa
sbb
mov
pop
xor
mov
push
lods
mov
addr16
jne
jecxz
sbb
adc
jmp
jb
repnz
mov
call
les
mov
jl
jne
loope
mul
push
xor
in
push
pop
enter
icebp
stc
scas
popa
loop
sbb
es
sbb
mov
mov
imul
aas
pusha
lret
popf
shlb
mov
jb
fiadds
loopne
mov
mov
pop
fcom
xlat
mov
sbb
loopne
addps
push
and
loope
mov
sbb
loope
cwtl
bound
jae
dec
ja
stos
or
jno
mov
mov
or
sbb
jl
into
mov
jl
fsubl
sub
imul
push
mov
or
ret
mov
xchg
jmp
lods
out
xchg
mov
push
ja
hlt
jo
xchg
fstpt
ret
pop
outsb
out
xor
popa
sarl
lret
mov
fidivl
add
mov
xchg
mov
outsb
lahf
and
cmp
shrb
sub
push
pop
fcoml
jo
inc
lds
xorl
push
imul
sub
mov
push
jg
pop
les
stc
repz
and
imul
sub
and
fdivp
out
inc
xchg
cltd
cmp
shl
fwait
cs
inc
lock
pop
ljmp
std
out
jne
xor
repnz
jmp
mov
test
int3
jmp
lahf
mov
repz
loopne
inc
jmp
sbb
shl
mov
xor
arpl
addr16
fcoml
adc
daa
xor
sbb
movsb
cmp
cld
cmp
push
loope
leave
aaa
scas
pop
sub
xor
xor
add
mov
add
movaps
add
push
xchg
cmp
repz
enter
sbb
dec
rcl
mov
int3
call
add
aaa
mov
das
rol
sub
subl
cmp
push
cli
mov
push
std
xchg
js
ljmp
stc
sbb
movsl
ds
je
mov
lea
out
sbb
hlt
adc
loope
xor
out
jns
arpl
xchg
and
popf
out
inc
fstps
cmp
mov
test
push
pusha
sbb
outsb
add
aam
xlat
and
mov
enter
movsb
imul
sbb
push
ljmp
popf
decl
arpl
imul
call
cltd
call
dec
sbb
fwait
xchg
sbb
out
ret
cmp
andl
and
mov
idivl
inc
ret
cli
lock
sub
push
inc
jecxz
int3
dec
cmpsl
pop
add
mov
call
push
test
in
mov
cmp
pushf
enter
aam
xor
or
in
mov
mov
lret
pop
mov
mov
mov
scas
daa
fldt
cli
inc
mov
aaa
adc
push
mov
ds
xchg
xor
sti
popa
cmp
dec
sbb
rol
push
loop
repnz
cmpsl
xor
mov
sarb
hlt
add
sbb
mov
fistl
mov
test
inc
out
neg
xchg
lods
repz
sub
int
cmp
rorl
subb
cmpsl
mov
and
sub
int3
mov
jl
icebp
rcrl
push
mov
jo
and
or
pop
pop
jle
cmpsb
leave
in
pop
add
iret
call
popa
xchg
cwtl
or
pop
cltd
inc
mov
pop
adc
test
repnz
pop
mov
fxch
push
or
or
add
popf
sub
cmp
xchg
jecxz
sub
lcall
in
dec
in
sahf
pop
das
les
es
cmp
dec
fcompl
and
mov
dec
push
faddl
xchg
stos
and
pop
xchg
aaa
cmp
add
in
inc
sbb
mov
pushf
imul
imul
shrb
cmp
sub
aam
addr16
enter
rorl
inc
dec
jae
xchg
dec
sub
mov
xchg
mov
fwait
rorb
inc
jge
out
fsubs
insl
jae
aas
sbb
leave
sbb
push
pop
test
dec
stc
adc
xor
lret
mov
fsubr
jnp
jbe
dec
mov
cltd
fisubs
cltd
cmp
cmp
push
loope
mov
pop
pop
pop
and
or
lret
icebp
mov
mov
lcall
adc
push
xchg
push
push
dec
mov
lret
pop
jge
lret
fidivl
push
scas
add
cwtl
cltd
dec
jp
aas
sbb
mov
jne
mov
mov
cmp
mov
mul
nop
jle
es
loopne
xchg
fcomip
imul
rorl
xor
daa
push
std
inc
out
mov
cltd
jne
dec
jns
sbb
addr16
jnp
pop
mov
pop
mov
sub
insb
cmp
push
in
rcrb
jp
and
ret
aam
xchg
mov
adc
cmp
repz
add
dec
dec
xlat
pop
pop
add
cmp
mov
loope
push
inc
stc
into
insl
jmp
andb
arpl
xchg
data16
cld
cmpsb
imul
xchg
jae
ljmp
push
pop
mov
mov
pop
push
jnp
outsl
shlb
ret
shll
sub
stos
push
mov
add
jmp
out
mov
arpl
cmc
inc
push
fwait
jnp
pushf
inc
push
jne
fwait
jnp
cmpsl
mov
xor
mov
popa
adc
ljmp
int
outsl
mov
sbb
xchg
lahf
stos
rcrl
jb
adc
loopne
adc
cmpsb
pop
push
repnz
imul
inc
jge
pop
mov
mov
add
aas
add
mov
sbb
dec
or
ret
js
mov
loop
sbb
sub
ljmp
cmpsl
orb
mov
and
or
mov
mov
xchg
ja
call
outsl
int
dec
dec
fistps
mov
fistpl
pusha
out
scas
mov
xor
jecxz
mov
add
daa
aad
int
int
std
and
inc
cwtl
push
xor
lea
jmp
lds
js
xor
popf
out
shrl
shlb
pusha
cmpsb
popa
lea
mov
das
sti
popl
push
pop
cmpsb
push
into
and
mov
or
movsb
enter
jae
addr16
aaa
aam
and
sarl
cld
mov
pop
dec
and
testl
cmpsl
push
jge
imul
add
cmp
and
in
mov
jecxz
jne
or
test
lret
rdpmc
adc
mov
int
and
add
outsl
test
jns
ds
outsb
pop
scas
push
cwtl
push
inc
add
sub
ret
leave
lret
dec
ret
push
xchg
mov
sbb
mov
imul
repnz
mov
push
and
mov
fidivrl
sbb
call
stos
adc
stc
jecxz
cmc
sub
mov
add
ds
xor
or
cltd
xor
cmpsb
gs
pop
outsl
fwait
ret
mov
jb
adc
movsl
repnz
mov
jmp
imul
dec
xor
movsb
test
in
shrl
cmpb
int
xchg
aam
pop
clc
inc
dec
xor
test
mov
dec
or
push
stos
cli
das
sub
or
sub
jb
insl
int
cli
mov
ja
sub
std
lret
dec
test
cmp
push
push
imul
sahf
mov
xchg
subl
mov
nop
dec
in
icebp
fsubrs
jnp
push
inc
xor
addr16
daa
pop
sbb
outsl
xor
cwtl
das
mov
insb
fldenv
shrb
outsb
inc
lcall
jmp
lea
popf
push
cltd
iret
sbb
shl
cld
fsubp
or
gs
lea
inc
dec
std
test
fmuls
loop
mov
rdtsc
adc
jne
fildll
adc
sub
cld
and
scas
js
shll
and
cwtl
inc
inc
test
shl
mov
mov
dec
mov
ret
arpl
in
lea
aaa
jae
inc
les
data16
sbb
add
into
sbb
add
push
pop
inc
and
pop
or
fimull
or
and
scas
xor
loope
daa
ffreep
mov
mov
ret
cs
pusha
lea
decl
stos
lods
pop
jae
imul
into
fs
call
sbb
cmpsb
mov
push
inc
push
sbb
leave
push
lcall
xchg
cltd
or
out
cmpsb
jne
mov
xorl
hlt
adc
in
je
sbb
xchg
sbb
xchg
mov
adc
rorb
inc
push
add
mov
aam
push
push
sbb
xchg
inc
and
push
fildll
jmp
shl
cmpsb
adc
in
daa
js
addr16
testl
icebp
popf
movsb
sub
test
and
mov
mov
int
push
cmpsb
int
mov
shl
sub
lock
test
or
lcall
movsb
cmp
out
pop
sbb
inc
inc
psubd
in
jb
dec
daa
fdivrp
sarl
cmpsb
mov
cmc
pop
scas
push
sub
ret
mov
push
shlb
ds
test
lock
jns
sbb
or
xor
mov
mov
psrlq
xor
jno
add
add
or
es
mov
rcrb
pop
mov
or
push
repnz
jns
dec
or
adc
xchg
pop
movl
pop
dec
pop
dec
adc
adc
popa
movsb
xchg
pushf
pop
xchg
mov
lcall
lret
xchg
or
pop
jns
inc
lds
mov
push
or
mov
imul
int
inc
hlt
icebp
mov
jne
lret
jge
and
mov
test
push
nop
cmpb
pop
sub
xor
mov
inc
idivl
and
inc
mov
or
aam
jbe
inc
subl
and
inc
inc
daa
sbb
sub
sbb
or
jbe
pop
jecxz
bound
mov
jl
adc
roll
ljmp
xchg
mov
or
test
outsb
or
nop
testb
popa
jne
leave
fld
ror
xchg
dec
dec
popf
out
mov
or
ret
mov
cmpsl
lock
and
cs
fwait
sbb
fcoml
push
loope
xchg
xor
sbb
repnz
icebp
leave
sbb
mov
cmc
clc
dec
sbb
adc
or
mov
les
inc
cmp
dec
mov
movsb
insb
lretw
aas
mov
outsb
inc
mov
or
outsb
sti
sti
jbe
fisubrs
fwait
call
rcll
pop
int
inc
loop
sbb
add
fwait
xchg
mov
clc
cltd
ret
sub
inc
xchg
popf
icebp
insl
add
ret
pop
pop
or
push
adc
add
sub
sub
sbb
push
leave
add
jno
mov
dec
add
inc
lahf
jno
jbe
sbb
or
push
and
xor
repz
jno
dec
int
push
mov
andb
je
cld
push
out
imul
movsb
psrlq
cmpsl
jno
cmpsb
imul
mov
cli
and
imul
mov
jo
lret
mov
and
add
dec
mov
test
or
in
xchg
cmp
clc
les
fld
mov
sub
shlb
pop
aaa
pop
jbe
aaa
in
xor
and
dec
outsb
cmp
add
push
sti
cmp
filds
addb
shrl
pop
lock
pop
imul
scas
popa
push
inc
not
sbb
sbb
add
data16
cld
mov
xlat
cmp
adc
int3
push
rdpmc
xor
stos
fsubrs
sbb
xor
inc
push
fiaddl
pop
and
push
fadd
ljmp
mov
das
ljmp
pop
out
enter
pushf
cmp
inc
nop
popa
or
fcomps
shl
add
xchg
jmp
mov
addl
inc
mov
sbb
out
and
das
andb
lods
in
inc
or
pop
xchg
inc
movsl
scas
add
stos
add
cmpb
mov
push
jbe
jns
push
into
xchg
leave
push
xchg
push
stos
popf
scas
decl
push
pop
popa
cmpb
rcrl
add
or
mov
jae
pop
pop
insl
adc
mov
mov
mov
pop
aas
dec
lahf
mov
push
xor
ljmp
add
in
out
fcoms
call
addr16
or
mov
out
pop
test
or
push
fistps
pop
fldl
pop
test
roll
js
pop
loopne
test
sbb
fistpl
push
or
push
loop
inc
pop
out
inc
decb
pop
push
push
stos
jecxz
je
pop
push
jbe
outsb
adcl
mov
xor
jmp
xchg
mov
aaa
cmc
adc
mov
in
mov
and
fildll
insl
jmp
decb
lods
imul
dec
ja
movsb
and
and
adc
jns
sbb
mov
sub
jge
ss
mov
movsb
pop
mov
push
mov
xor
and
ljmp
addr16
mov
ret
hlt
lret
sti
push
out
push
fstl
das
jl
icebp
fld
shl
daa
dec
jg
test
aad
shr
sub
rolb
sub
or
or
pmuludq
jg
and
or
pushf
dec
cmp
call
testb
xor
cmp
push
sub
loope
sub
imul
scas
dec
jge
add
pushf
mov
inc
enter
mov
in
and
dec
inc
mov
jmp
outsb
xchg
out
add
mov
test
lock
insl
xor
jmp
xchg
pop
and
jp
inc
inc
mov
jl
sbb
jnp
inc
or
ret
mov
stos
push
push
pop
nop
cmp
daa
out
adcl
test
jo
test
push
jg
je
insb
cwtl
or
or
fsubrl
jno,pn
out
or
cmp
mov
iret
jge
push
out
xchg
or
or
push
sub
addr16
int3
dec
sub
scas
out
negb
push
cmp
cmpsb
push
push
fisubrl
push
xchg
enter
add
std
inc
leave
pop
icebp
mov
adc
dec
xor
hlt
decl
adc
or
dec
lea
pop
out
mov
insl
cmpsl
lods
xchg
jnp
cmp
test
aad
cmp
jno
push
int3
sub
test
stc
bnd
inc
or
or
inc
and
push
xchg
cmpsl
mov
push
insb
test
imul
insb
loop
mov
pusha
cmp
std
sub
aaa
dec
mov
add
pop
pop
cmp
xchg
and
jbe
popa
or
iret
jmp
jecxz
repz
rol
pop
in
or
push
pop
cmp
out
jl
dec
pushf
pop
sub
rcl
inc
xchg
out
pop
adc
jns
ljmp
xchg
popa
pop
mov
out
repz
or
stos
xchg
fldcw
dec
cmp
stos
int3
fmull
jns
not
popf
in
loopne
inc
notb
lds
cli
xchg
push
shr
mov
ss
mov
rolb
mov
dec
data16
arpl
mov
lret
pop
loopne
test
les
outsl
sbb
xchg
shrl
xor
push
push
test
insb
jae
push
add
subb
xchg
divl
xchg
and
stos
fisubl
xor
xlat
pop
sti
loop
jge
test
shr
cmp
out
pop
push
outsb
mov
push
mov
ss
sbb
mov
fsubl
cmp
push
out
jns
out
pop
insl
or
pop
ja
dec
or
xor
xchg
insl
mov
pusha
mov
jl
adc
fiaddl
ljmp
rclb
xor
mov
cs
outsb
pop
test
xchg
hlt
dec
cmp
cmp
sti
sbb
xchg
mov
push
fcmovnbe
dec
aad
lea
sarb
gs
mov
push
mov
aaa
cmpsl
mov
pop
mov
jbe
pop
sbb
lret
xchg
sahf
pop
push
ja
leave
imul
dec
mov
ret
jo
addb
dec
mov
push
push
aas
dec
xchg
int
inc
dec
pop
mov
lods
insb
dec
in
aad
ffree
scas
out
push
push
inc
mov
pusha
sbb
inc
mov
sbbb
xchg
js
adc
jo,pn
sti
mov
mov
pop
into
and
xchg
rorl
outsb
dec
fnstcw
mov
negl
mov
xlat
pusha
and
adc
mov
test
mov
pop
test
sarl
jb
dec
lcall
rorb
incl
imul
lods
cmc
adc
xchg
inc
imul
cmc
or
imul
sub
jne
cmp
mov
int
cld
sbb
push
scas
pop
or
test
sub
xchg
pop
lea
scas
inc
shll
xchg
dec
jmp
jno
dec
push
inc
inc
aaa
pop
and
mov
add
imul
jns
jnp
cmp
pop
sbb
pop
nop
rcrb
xchg
jbe
rcrb
movsl
sub
push
xchg
fwait
mov
ffree
lock
xor
or
add
pop
lret
repz
ret
and
lcall
sbb
mov
ljmp
adc
push
loopne
mov
ds
clc
cld
mov
cmp
sub
jae
aad
lods
xchg
sbb
jge
add
fsubrp
fsts
jnp
gs
mov
ffreep
ficomps
adcl
add
sbb
leave
pop
test
xchg
mov
bound
pop
cmp
mov
inc
lahf
or
inc
loope
scas
lock
ljmp
icebp
jo
loop
lea
popa
or
repnz
push
nop
je
cmp
jae
pop
imul
add
push
sahf
xchg
mov
push
jb
insl
push
out
dec
xor
gs
orl
dec
testb
xlat
sub
popa
xchg
mov
inc
es
pop
and
jae
jp
xchg
mov
hlt
mov
js
js
hlt
or
dec
aas
test
sti
xchg
mov
ret
fwait
mov
popa
add
insl
xor
cwtl
je
je
aad
ljmp
push
cmp
les
lock
jns
xlat
jo
lret
jne
fsubrp
mov
jne
mov
xor
mov
xchg
lds
clc
mov
fimull
cmp
popf
mov
stc
cld
dec
add
xor
add
out
in
loop
xlat
jl
sub
lsl
imul
cmpsl
push
sahf
and
jg
cmp
sub
addr16
mov
pusha
outsl
aad
cmp
lret
and
inc
xchg
jbe
lea
adc
push
je
inc
stos
sub
xor
dec
fiaddl
daa
add
stc
jnp
mov
inc
jnp
xorb
sahf
call
dec
xchg
out
fs
loopne
dec
jl
insb
ret
cwtl
or
xor
ficoml
mov
hlt
sub
mov
cmp
js
in
dec
call
sbb
fsubs
xorb
lret
dec
mov
cwtl
push
ret
inc
andb
cmp
cmpl
enter
mov
pop
cmpsl
sub
fwait
mov
addr16
pushf
nop
cmpsb
cld
mov
outsb
jmp
testl
in
mov
inc
fsubrs
stc
cmp
lret
sbbb
addl
ljmp
inc
lcall
hlt
jecxz
sub
sbb
xor
rorl
mov
pop
std
in
add
push
push
sbb
mov
in
and
and
dec
das
or
and
insl
adc
loope
bound
mov
pop
push
adc
mov
push
dec
or
pusha
das
mov
mov
xlat
pop
stos
add
lods
dec
mov
lods
sbb
cwtl
das
cs
in
fstpl
jge
xchg
out
ljmp
scas
fstp
inc
mov
cli
mov
pop
mov
in
sbb
or
mov
outsb
mov
mov
sbb
ja
or
xchg
lcall
jl
and
push
cmpsb
repz
jbe
test
movsl
out
adc
scas
loopne
add
cmpsl
sub
hlt
mov
cld
fdivrl
push
scas
cld
add
sbbb
loope
int
push
iret
cmpsb
or
lret
dec
ret
jp
mov
out
pop
inc
sub
stos
sbb
adc
xor
icebp
mov
inc
push
repz
dec
mov
out
mov
test
push
lock
mov
push
mov
pop
or
rcl
jbe
push
mov
cwtl
push
jb
inc
add
sbb
loop
or
das
sbb
imul
sti
mov
lock
pop
dec
sub
and
jo
lret
adc
in
push
add
testb
mov
push
es
mov
stos
cmp
sub
fs
xchg
enter
add
rcl
scas
popf
addr16
xor
notl
xor
in
xor
scas
fdivr
out
mov
stos
les
popf
adc
dec
fs
mull
and
sub
inc
sub
out
push
lods
ret
test
push
dec
int3
mov
mov
fisubrl
cmpsl
pushf
mov
shrl
jns
jg
cmp
sarb
mov
cmpl
stos
call
rcll
cwtl
loop
adc
xchg
iret
jno
popa
andb
xchg
loopne
add
cs
sub
jg
xchg
adcl
push
adc
stc
dec
jg
into
stos
rorb
dec
loop
mov
push
lret
jle
aam
hlt
inc
sbb
call
xchg
cmpsl
dec
sbb
jnp
dec
or
add
ja
jle
mov
sbb
outsl
movl
ficoml
and
cwtl
lds
pop
test
out
sub
repnz
and
ss
das
bound
int
repnz
aaa
ljmp
cwtl
pop
mov
andb
cmc
ret
lea
shrl
mov
sbb
mov
cmp
jge
std
or
test
xor
cwtl
insl
jnp
xchg
rcrl
les
lahf
pop
dec
test
mov
insb
inc
dec
pop
mov
jl
jno
cmp
repz
mov
lds
xor
xchg
or
cmp
mov
xchg
sbb
ljmp
dec
rsqrtps
out
std
pop
les
dec
push
xchg
out
movsl
xor
jo
pop
jbe
in
pop
std
in
out
out
fucom
loop
aaa
sbb
xchg
out
push
sahf
cmp
jnp
sbb
pop
imul
imul
fmul
jae
push
daa
shlb
fdivl
out
mov
add
adc
dec
arpl
xchg
js
pop
xor
adc
push
lahf
insb
int
mov
test
cmp
mov
std
jae
loop
cltd
leave
xchg
adc
mov
leave
add
and
imulb
add
out
int3
aad
add
sbb
int3
cmp
enter
int
cmp
add
dec
fidivrs
ud1
and
and
pop
std
outsb
insb
xchg
addl
add
out
mov
je
lcall
or
push
inc
xor
repz
pop
and
pop
jl
dec
jmp
push
adc
xor
mov
testl
mov
outsb
jne
sub
xchg
leave
add
cmp
pop
xor
add
roll
enter
adc
mov
cmp
iret
js
sarb
js
inc
mov
ljmp
cli
jle
cltd
pushf
fwait
sbb
sbb
adc
mov
test
aas
and
roll
sub
adc
adc
repz
iret
add
mov
cmpsl
mov
add
mov
in
lea
xor
add
movsl
xor
jmp
in
mov
mov
and
dec
test
add
jp
sub
cmp
inc
adc
mov
sbb
popa
js
xchg
aaa
sbb
push
stc
fildl
pop
cli
les
xchg
push
icebp
shl
xchg
imul
iret
pop
pop
dec
pop
lret
cs
bound
scas
test
call
push
or
and
sets
mov
into
jo
add
sub
leave
and
mov
stos
inc
fsubrl
sarl
xor
fcompl
jle
add
push
or
pusha
pop
sub
and
inc
cmp
pushf
shrl
pop
add
notl
std
adc
sub
ja
cmpl
pop
fidivs
xor
je
and
fisttps
sub
testl
lds
faddp
adc
xchg
adc
out
xor
pop
pusha
mov
fnstcw
pop
adc
in
nop
mov
dec
lret
jns
icebp
inc
or
adc
les
xor
inc
inc
jae
into
inc
les
loope
pop
pop
dec
cmp
mov
adc
pusha
fdivp
mov
leave
cmp
dec
push
add
mov
js
or
nop
xlat
in
mov
popa
mulb
sub
push
or
out
les
loope
inc
add
lret
dec
mov
rcll
mov
fsubrs
insb
lods
mov
popf
push
sbb
push
outsb
pop
jge
das
add
jg
lods
add
pop
jecxz
push
adcl
imul
popf
push
fwait
ja
sbb
stos
jp
pop
push
add
mov
movsl
pop
fs
dec
popf
clc
add
insb
cmp
and
outsb
in
sbb
mull
sub
aam
mulb
add
nop
push
and
repz
dec
imul
gs
cli
xor
outsb
cwtl
rol
sbb
arpl
lods
nop
cltd
movsl
jbe
mov
int
rorl
add
dec
enter
and
sbb
scas
mov
hlt
adc
fnstcw
arpl
jge
sbb
add
mov
or
cli
hlt
into
pop
or
sbb
mov
inc
sub
mov
push
adc
cli
scas
cli
lret
push
lret
xorb
scas
lods
daa
sub
add
inc
sbb
xor
jb
cli
fbld
mov
fisubrs
faddl
or
out
add
push
and
pusha
mov
inc
jae
cmp
pop
sub
sub
stc
jle
loope
aam
adc
insl
sahf
int3
push
push
lods
lahf
ja
aaa
pop
stos
out
in
imul
push
leave
orl
sbb
xchg
test
mov
leave
pushf
pop
and
addr16
sbb
push
push
cli
pushf
adcl
xchg
scas
in
rcrb
lret
aam
xor
adcb
mov
cmc
shll
dec
push
aam
call
push
pop
jb
insb
jb
aad
mov
cmp
mov
pop
cwtl
loopne
mov
sahf
mov
xor
decb
rcrl
addr16
sub
cmp
pop
sarl
outsb
aaa
ss
loopne
and
mov
ja
js
mov
adc
cmp
mov
mov
push
inc
xor
lcall
dec
add
iret
sbb
fldenv
sbbl
int3
dec
mov
pop
dec
push
inc
cs
jle
scas
xchg
mov
ret
lcall
lock
pushf
mov
aaa
push
jle
lea
ret
cmp
scas
sub
insb
stos
cmp
push
adc
or
shl
lea
fcmovbe
icebp
xorl
add
enter
ja
jecxz
xchg
insb
lret
lods
gs
xor
mov
aaa
stc
shrb
or
inc
enter
in
xlat
push
xor
mov
push
mov
cmpsb
pusha
sub
and
mov
xor
mov
push
push
lret
inc
imul
lahf
call
nop
adc
das
js
mov
mov
lcall
lods
test
xchg
stos
sti
push
rcrl
stos
dec
pop
mov
fwait
mov
rorl
sbb
scas
scas
int3
or
push
fwait
mov
cmp
adc
or
sub
loop
pop
sbb
mov
hlt
mov
enter
insb
sbb
es
loopne
aas
sub
xchg
jno
xor
into
xor
test
lods
shlb
dec
enter
dec
add
mov
mov
out
lods
gs
lcall
sub
aas
mov
int
enter
sub
push
xchg
add
xor
mov
aad
pop
ss
enter
subl
imul
arpl
cmp
not
or
idivb
xchg
shl
or
mov
or
mov
int3
repz
cmp
inc
sub
inc
push
inc
repnz
call
mov
fs
adc
xorb
test
test
movsb
out
push
sbb
movsl
xchg
push
push
xorb
pop
in
pusha
leave
mov
pop
push
cld
cs
xchg
sbb
sbb
adc
test
push
or
ficompl
jmp
mov
sbb
lcall
pop
mov
cltd
xchg
mov
out
bound
ljmp
adc
stos
dec
movsb
cli
lea
cmpsb
fnstenv
dec
lods
dec
sbbb
sti
xchg
les
cs
or
add
ja
dec
push
dec
add
scas
jnp
cmp
and
int
mov
pop
dec
adc
push
insb
sti
movsb
xlat
mov
mov
outsl
incl
test
xor
cmp
bound
outsl
dec
pop
fldl
clc
pop
dec
enter
movsl
in
idivb
out
jle
pushf
mov
push
int
loop
lock
jbe
lds
int3
add
xor
icebp
movsl
xlat
and
push
inc
lcall
cld
mov
dec
sbb
mov
push
inc
lock
cmpl
mov
inc
shrl
or
push
ret
call
mov
jle
add
aaa
adc
pop
add
or
ret
jle
jno
test
insl
cmp
mov
xchg
dec
ds
cmp
lret
mov
mov
lods
sti
xor
jbe
std
inc
loopne
xchg
scas
loope
mov
enter
inc
sahf
inc
mov
jg
lret
movsb
scas
mov
aas
cmp
popa
ret
pop
sbb
jo
stos
adc
pop
cwtl
mov
clc
adc
xchg
sub
movsl
stos
inc
pop
nop
rolb
sub
loope
and
sub
fstps
popa
dec
outsb
cmp
inc
sbb
insb
dec
pop
mov
test
cmp
fcomip
es
imull
and
xchg
push
lods
sbb
ret
fidivl
adc
xchg
mov
mov
dec
adc
in
shll
das
rcll
and
cmp
aam
rcrl
cwtl
adc
fldcw
dec
aaa
mov
jmp
pusha
xchg
sub
ljmp
mov
mov
ja
mov
in
xchg
aas
mov
outsl
mov
js
ds
push
cs
mov
pop
cltd
fcomp
adc
adc
popf
push
movsl
pop
mov
adc
sbb
pop
rolb
jge
cltd
xchg
nop
pop
mov
js
cmp
ljmp
les
mov
js
fs
aas
repz
jno
xchg
mov
pushf
clc
orl
mov
test
pop
pop
inc
pop
dec
fwait
cmc
stc
push
pop
fsubrs
loope
xor
das
lret
repnz
and
sbb
ss
fbstp
outsl
jge
fmull
adc
lea
out
mov
movsb
dec
outsl
mov
xor
mov
out
andb
insb
js
daa
scas
mov
jae
and
mov
jbe
mov
sub
in
ret
push
ret
cmc
js
popa
xchg
pop
xor
lds
fistpll
add
push
sub
lock
adc
push
cli
pusha
lret
add
es
pushf
int3
inc
sub
mov
sub
scas
jmp
mov
mov
inc
imul
jg
in
push
fistpl
pop
int3
insl
test
cld
inc
sub
fsubrs
popa
enter
dec
shll
xor
out
mov
sbb
mov
fisttpl
xchg
pop
xor
xor
jle
push
je
pop
movsb
push
movsb
xor
inc
mov
dec
or
fimuls
adc
push
out
and
xor
or
iret
insl
fldt
cmpsl
inc
jbe
pop
push
frstor
das
rorl
xchg
xor
xchg
push
add
les
fs
pop
pshufw
jae
divb
or
inc
pop
int3
xchg
sub
out
push
and
pop
xchg
sub
jg
and
inc
in
lods
das
andl
xchg
jl
inc
push
add
dec
sbb
adc
mov
call
add
push
add
int3
push
push
pop
sarb
push
clc
lock
xor
push
mov
ss
mov
pop
out
rorl
xor
in
add
sub
data16
fsubrs
test
dec
jl
scas
push
sub
pop
ss
fidivl
hlt
out
incl
sub
aas
in
cs
ljmp
insb
addl
mov
into
scas
aad
ljmp
inc
mov
push
pop
loopne
andl
cld
dec
mov
loopne
sub
xchg
xchg
iret
mov
lock
subl
outsl
sti
repnz
mov
rcl
adc
jecxz
in
mov
cmp
inc
mov
or
dec
into
ror
leave
fstpl
stc
adc
xchg
gs
xor
sbb
xor
and
int
aam
dec
mov
ja
dec
ficompl
jmp
icebp
fsubrs
cli
js
xor
call
popf
xor
mov
pop
lock
aam
mov
mov
pop
adc
mov
inc
rolb
loope
dec
dec
add
mov
into
or
push
mov
add
or
xchg
ret
daa
scas
mov
movsl
clc
xchg
lods
fistpll
push
mov
push
push
ja
cwtl
cli
loope
or
jl
aas
mov
cmp
push
xor
mov
fcomps
jnp
jle
test
ds
sub
test
sbb
hlt
int3
mov
add
int
notl
jg
popa
pcmpeqb
sti
aam
xor
ja
cmc
xor
mov
imul
cmp
hlt
or
loope
mov
cwtl
pop
fmull
jb
jno
mov
adc
imul
aad
or
push
lahf
in
int3
adc
push
cmpsb
enter
clc
lcall
imul
shlb
jmp
popa
lret
shrb
and
cmp
sub
jl
ss
xchg
das
pop
add
ds
pop
mov
xchg
pop
pop
leave
lahf
daa
shrb
test
mov
mov
in
push
inc
mov
adc
and
test
push
jge
cmp
dec
icebp
int3
push
cmp
sub
or
or
int
scas
mov
fistps
pusha
aas
std
fcomps
sub
rcrb
fisubl
insl
test
inc
push
and
sub
sbb
add
and
add
pop
ljmp
in
xchg
add
push
orb
mov
stc
dec
cld
int
push
jns
shrb
push
pop
jmp
mov
add
pop
fbld
mov
insl
ds
xor
cmpsl
or
sarl
adc
lret
pop
xchg
push
mov
into
add
xchg
mov
cmp
sub
add
fwait
mov
ret
push
add
outsb
es
call
cltd
xadd
cmp
mov
ret
lret
and
cs
xchg
inc
insb
ret
sbb
mov
pop
addb
mov
adc
mov
sbb
nop
out
sub
sub
adc
mov
inc
jecxz
jae
jge
cmp
dec
subl
fdivs
cmp
or
xchg
rol
lea
sbb
cmp
int
cwtl
xchg
aad
lods
arpl
mov
mov
xchg
xchg
sti
or
dec
imul
clc
movsb
aam
fsubl
insl
cmp
sar
dec
movsl
movsl
xchg
push
stc
sar
dec
mov
mov
mov
shlb
fcompl
cmp
add
and
cmpsl
mov
imul
sbb
mov
sub
nop
pop
stos
cmp
loopne
jmp
movsl
imul
cmp
cmp
pop
dec
push
ja
inc
enter
cmp
icebp
sub
ret
insb
cmpsl
es
mov
outsl
sub
sbb
adc
je
adc
add
jae
fdivl
lcall
mov
ror
cmp
mov
stc
dec
xchg
mov
adc
inc
xchg
pop
sub
fcoms
sahf
push
leave
lea
aad
push
fadds
cmpsb
mov
and
test
mov
push
sahf
sbbb
fcoms
test
repz
dec
inc
sbb
cmp
pop
pop
into
out
xchg
push
push
in
jbe
test
int
shll
xchg
cmp
pop
xchg
sar
sub
fists
xchg
mov
pop
sub
dec
dec
stos
xor
popa
push
fwait
or
sar
jb
cwtl
jle
int
inc
cmp
in
ret
repz
sbb
add
pop
mov
push
push
mov
dec
mov
enter
sbb
je
out
xchg
pop
sbb
cmpb
mov
sbbb
cmpsl
mov
inc
push
pop
xchg
add
xor
add
aam
cs
iret
out
mov
pop
lret
push
jl
push
les
in
out
pop
xlat
lea
imul
popa
mov
and
in
xchg
push
lds
mov
fldl
int
mov
movsl
addr16
jmp
xchg
loopne
in
out
lea
dec
xchg
pop
mov
test
adc
sub
scas
stos
mov
xchg
pop
addr16
lods
repz
jge
ja
ljmp
lods
pop
and
jo
dec
xchg
add
push
pop
test
dec
shl
in
decl
test
lcall
adc
cmpb
and
and
inc
inc
shll
inc
or
and
push
add
jbe
adc
dec
loopne
stos
sbb
dec
push
gs
outsb
stc
or
dec
imul
stos
pop
cmp
mov
ja
rolb
lcall
or
scas
mov
mov
xor
push
fwait
mov
bound
fnstenvs
cmp
jae
ds
xor
or
in
add
enter
mov
adc
daa
aam
mov
les
in
ss
imul
and
movsl
push
icebp
mov
stos
fcmovnb
sbb
js
adc
mov
mov
push
out
icebp
xchg
add
mov
mov
add
cmp
inc
pop
xchg
cmpsb
dec
scas
and
mov
pop
int3
scas
dec
sub
mov
sbb
sub
rcll
outsl
rcr
fisubrs
les
push
jecxz
fisttpll
push
lret
push
or
scas
inc
or
mov
in
nop
imul
cmp
imul
mov
das
loope
imul
test
repz
enter
cld
mov
and
jmp
jne
imul
mov
cmpsl
jno
jle
xchg
out
xchg
inc
xlat
rcr
iret
xchg
jl
and
adc
xchg
outsb
dec
xchg
scas
sub
push
in
mov
xchg
push
mov
mov
nop
xor
idivl
or
rcr
int3
push
xor
xor
mov
icebp
faddp
mov
adc
fsubrs
rorl
pop
jmp
mov
cmp
inc
ljmp
or
popa
stos
xchg
mov
and
mov
int
cmp
sub
xchg
cmp
imul
ret
xchg
out
pop
nop
sbb
jmp
sub
lea
cwtd
jle
add
add
ds
test
dec
xlat
gs
into
jecxz
cmp
inc
iret
mov
lds
push
sbb
ficoml
add
adc
enterw
les
jmp
push
iret
adc
push
pop
jle
je
sbb
bound
pop
add
add
inc
mulb
mov
adc
push
jbe
push
shr
rcr
arpl
ss
adc
arpl
pop
dec
xchg
lret
pop
fisttps
mov
in
fdivs
jns
mov
rclb
lock
sbb
aas
jge
stos
out
fcompl
xor
popf
ret
fidivrs
enter
pop
mov
fists
ja
nop
rorl
push
lods
push
pusha
push
push
or
ljmp
mov
mov
imul
out
dec
mov
jg
xchg
dec
into
push
mov
incb
jbe
jbe
aas
insb
lods
dec
inc
popf
aad
sbb
cmp
jg
idivl
sti
pop
in
adc
push
xor
in
js
xor
pop
int3
or
sti
loope
pop
in
je
xchg
jmp
or
idivl
mov
pop
aad
js
fidivs
sbb
test
dec
or
mov
or
push
mov
repz
and
xchg
and
bound
or
clc
std
lret
outsb
add
or
xchg
xchg
popf
in
inc
sub
insl
cli
popf
lock
mov
xor
movsl
pop
mov
into
push
sti
cmpsb
jg
int
sub
pop
cld
cmpsl
inc
addl
es
adc
add
shr
lds
mov
ds
loopne
dec
das
push
sub
xchg
push
adc
xchg
into
pusha
xchg
test
lock
test
lock
pop
iret
xchg
push
jbe
adc
add
add
mov
arpl
dec
jge
lret
inc
jb
test
or
lret
jle
out
insb
sub
pushf
loop
or
call
pop
and
sbb
push
lods
loope
dec
push
aaa
jge
mov
add
add
add
loop
jb
or
pop
iret
popf
adc
jne
stos
inc
pop
in
xor
orb
or
aam
adc
iret
and
mov
adc
mov
jl
or
lret
inc
xor
cli
add
out
push
sahf
lcall
and
fimull
xor
or
jne
hlt
test
ret
mov
fdivrl
test
xchg
nop
pushf
pop
mov
inc
stos
insb
sub
fs
sbb
cmp
fistpl
ret
cmp
and
cmpsb
mov
ljmp
fistps
push
out
into
leave
mov
cli
ljmp
addl
sub
fwait
or
mov
cmp
xor
xchg
xor
call
mov
mov
inc
mov
add
mov
imul
mov
xchg
into
or
outsb
enter
fs
in
and
lods
mov
pop
pop
das
push
cwtl
cmp
repnz
dec
sub
mov
out
repnz
sbb
clc
sub
sub
jmp
int3
fildll
sbb
negl
aas
cld
shlb
int3
push
jl
mov
mov
lahf
xor
dec
or
call
adc
fwait
shrl
scas
add
cwtl
arpl
push
jo
push
adc
mov
pop
inc
out
and
pop
js
jno
or
sbb
mov
sbb
mov
inc
les
push
push
dec
inc
adc
int3
sbb
add
jmp
mov
in
cmp
lds
fistpll
mov
int
push
ljmp
lcall
xchg
push
ficoms
mov
push
jl
shll
lcall
sub
adc
aad
or
sbb
xchg
mov
dec
inc
cltd
push
jecxz
cmp
xor
inc
push
ja
leave
push
insb
jge
fsub
ja
int
out
subb
adc
fistps
lcall
dec
push
mov
dec
mov
push
mov
pop
mov
fs
mov
add
sub
rcrb
dec
mov
xchg
pop
mov
sub
jae
add
or
dec
mov
push
test
cmp
and
cmp
and
pop
das
xchg
xchg
fisttps
mov
filds
inc
mov
int3
jecxz
jecxz
fisubl
fbld
arpl
pop
mov
and
jne
pop
lcall
out
jmp
popa
xchg
sbb
nop
imul
dec
and
add
sarb
and
mov
pop
aad
popf
inc
push
lds
pop
inc
xchg
iret
out
leave
push
cmp
scas
add
adc
inc
testb
stos
xor
sbb
ds
push
mov
js
jbe
movl
dec
sti
push
xchg
sub
inc
pop
mov
popw
imul
mov
dec
ja
and
sbb
outsl
sub
xlat
xchg
insl
push
mov
inc
rorl
mov
pop
pop
out
xchg
push
aad
repnz
arpl
mov
sbb
mov
ss
lret
adc
loop
push
das
or
test
int3
mov
scas
jl
push
pushl
dec
cwtl
cmp
cmp
xchg
mov
outsl
fwait
pop
cld
jmp
scas
xchg
fs
mov
mov
or
cmc
insl
or
mov
mov
call
jo
inc
int
in
xor
cmp
addr16
mov
sar
and
mov
cli
shl
xchg
outsb
rcll
cmp
sub
jecxz
cld
and
push
iret
aad
addb
sbb
pop
inc
ja
dec
fiaddl
fcoms
mov
leave
jmp
popa
pop
xchg
add
rcll
insb
gs
or
xor
aas
data16
into
adc
inc
jnp
jle
out
mov
dec
repnz
mov
pop
jle
imul
js
pop
dec
lretw
loope
cmpl
leave
insb
addb
add
sub
ja
ja
pop
insb
pop
mov
out
das
stos
ja
inc
and
push
les
les
mov
dec
cmp
lea
push
int3
pop
shlb
mov
icebp
test
jle
fimuls
enter
mov
push
jae
push
pop
cmpsl
lcall
push
inc
cmp
cmp
in
or
jge
cld
pop
arpl
adc
or
test
outsl
and
inc
adc
jbe
rcrl
adc
inc
cmpsl
icebp
push
leave
js
mul
jmp
jmp
lcall
rcrl
bound
mov
pop
xor
dec
adc
inc
test
inc
xor
pop
cmp
lock
or
insl
cmp
test
iret
inc
dec
rcll
sarb
cmc
sub
js
jmp
cltd
push
inc
mov
popf
fldt
inc
hlt
scas
sbb
push
js
xor
ss
pop
cmp
shll
fildll
add
jae
xchg
cmp
clc
or
aas
jp
ret
and
jnp
sar
mov
inc
mov
insl
jbe
fbld
mov
mov
or
pop
das
and
lods
das
and
fidivs
jb
jns
repnz
ret
adc
filds
insb
push
lcall
mov
mov
inc
lcall
ret
mov
push
aad
sbb
dec
dec
push
jle
es
add
popa
push
and
cwtl
cli
xor
xor
push
xchg
cltd
fimuls
cmpl
loopne
std
pop
or
push
loopne
inc
fwait
loope
scas
pop
add
scas
popl
push
mulb
and
mov
out
xchg
negb
cmp
sbb
or
xchg
dec
shlb
mov
xor
test
cmp
ja
scas
pop
pop
xor
sub
push
or
mov
jnp
pop
or
fwait
ds
test
andl
stos
call
or
popl
stos
leave
fwait
scas
xchg
dec
cmp
pop
int3
fiaddl
shlb
call
cwtl
dec
inc
cmp
xchg
sub
dec
jmp
jecxz
inc
xor
and
dec
push
and
push
lods
jl
xchg
hlt
mov
ret
pop
into
sbb
pop
mov
jp
pop
and
cmp
pop
lods
pop
mov
push
or
xor
xor
inc
or
dec
dec
sub
xor
ret
inc
sub
jmp
cmpsl
fldln2
notl
aam
icebp
notl
adc
sub
xchg
shlb
popf
mov
adc
je
mov
mov
sbb
lcall
ret
iret
hlt
push
pop
xchg
je
inc
leave
ss
sbb
xchg
call
xorl
mov
mov
fiadds
mov
push
daa
insb
inc
popa
hlt
xchg
push
xchg
out
scas
mov
pusha
pop
add
addr16
out
nop
insb
add
cmp
inc
inc
push
cmp
add
inc
cltd
push
xor
push
jp
out
and
in
inc
sub
incl
mov
int3
std
pop
movsl
mov
aaa
pop
xor
pop
xchg
jae
stos
dec
push
call
push
pusha
xor
cltd
mov
test
iret
popa
movsb
adc
outsw
adc
ret
jno
outsl
pusha
adc
xor
int3
aaa
ja
lds
jp
adc
outsl
jnp
or
repnz
and
fiadds
out
rol
lret
call
inc
fistpll
lods
scas
loopne
cs
test
xor
int
cmp
fwait
inc
inc
movsl
sbb
add
inc
iret
cli
dec
imulb
xlat
sbb
jl
mov
hlt
sbbb
jae
pop
rolb
dec
inc
rclb
test
jp
ret
sahf
int
inc
lock
push
pop
addr16
xchg
es
sbb
arpl
adc
pop
sub
pop
jbe
hlt
icebp
subl
imul
in
aam
into
hlt
cmp
pusha
in
in
xor
push
xchg
mov
ficompl
and
mov
sahf
cwtl
ja
cmpsl
xchg
rcrb
mov
test
or
xchg
paddq
dec
aas
xchg
mov
cs
xor
and
mov
scas
fimull
iret
inc
icebp
dec
push
cltd
out
pushf
clc
data16
fs
push
outsb
xor
cmp
into
movsl
or
leave
inc
pop
popa
adc
lods
shr
ljmp
call
sbb
xor
or
pop
inc
mov
sbbl
mov
or
or
push
loope
dec
cli
dec
ret
sub
ljmp
aam
add
mov
xchg
outsb
inc
pop
movsl
loopne
subl
test
xor
call
inc
cltd
xchg
pop
xor
sub
fwait
mov
fisubrl
stc
push
js
insb
push
pop
xor
test
stc
clc
iret
call
orl
and
push
cmp
or
std
mov
dec
pop
ret
add
mov
cmp
call
test
test
dec
push
lods
adc
loop
mov
aam
jg
outsl
lret
jmp
jbe
xchg
push
fldcw
mov
enter
out
loopne
inc
inc
insb
bound
popa
sbb
fisubrl
jmp
jge
outsl
push
push
imul
inc
icebp
lret
xor
sub
push
push
rep
push
inc
shlb
fnsave
cmp
dec
ret
and
cmpsl
neg
ja
sub
test
xor
mov
lds
adc
jbe
pop
or
or
jnp
fdivl
aad
adc
push
adc
and
lds
add
xor
pop
jg
iret
out
adc
arpl
sub
movsb
push
xor
rclb
mov
push
mov
xchg
in
cmp
in
mov
sub
push
sbbb
test
popf
sarb
pop
and
push
in
mov
adc
nop
jge
push
jp
jae
imul
outsl
xchg
hlt
pop
out
pop
movsb
mov
push
loop
aam
cmc
xor
fmull
roll
adc
lds
push
adc
sub
mov
cmp
pop
sbb
in
pop
jns
or
mov
sahf
push
pop
mov
add
jg
ss
sub
xchg
mov
adc
out
das
out
push
dec
repnz
jns
test
add
incb
push
ret
cmpxchg
lock
sub
jo
adc
clc
or
jp
push
mov
int
cmpl
in
mov
iret
pop
sbb
inc
insb
xchg
jg
mov
dec
addr16
mov
cld
xchg
pop
hlt
insb
cli
mov
cmpsb
adc
addr16
inc
pop
push
int3
call
pushf
xor
hlt
jb
stos
fs
sub
add
aad
out
xchg
sahf
test
xchg
lcall
jge
mov
xchg
cwtl
dec
push
or
cmp
fmul
or
sbb
hlt
xor
sbb
arpl
xor
inc
jle
daa
and
mov
insl
add
mov
cmp
mov
or
dec
xor
and
cs
pushf
pop
push
rcrl
cmp
xchg
xchg
movsb
into
mov
pop
push
pop
clc
mov
popf
in
or
add
ss
mov
cwtl
mov
shl
cmp
test
test
lret
mov
xchg
pusha
fsts
pop
mov
cltd
lcall
or
loop
pushf
mov
push
sahf
loop
pop
int
mov
dec
ds
cltd
mov
push
cmp
mov
jb
shrb
notb
dec
push
mov
jl
loopne
es
jbe
in
movsl
bound
dec
pop
push
pop
mov
lods
scas
imul
das
and
mov
jno
sub
mov
inc
sbb
ss
cmp
test
xchg
and
xor
dec
in
jle
push
aad
cmpsl
pop
sub
fisubrs
pop
fwait
stc
int
mov
mov
jne
aas
pop
and
dec
in
jo
jle
fisubrs
push
pushl
pop
sub
lcall
lods
fwait
stos
aaa
jmp
push
or
sub
dec
xor
cmp
push
cmp
rorl
sub
xor
push
sahf
movsb
out
sbb
call
sbb
clc
stos
pop
sub
cmp
pusha
mov
pop
fwait
iret
out
mov
stc
sbb
movsb
and
daa
add
outsl
sbb
or
and
mov
xchg
sub
test
test
fwait
or
sub
scas
push
out
dec
movsl
push
into
mov
sub
adc
into
out
cld
mov
sbb
shll
cmpsb
shr
mov
cmp
dec
and
stos
shlb
pop
stc
aas
push
pop
lods
xchg
loopne
sub
movsb
les
pop
in
and
jle
mov
lahf
fmull
jnp
outsb
cmpsl
mov
in
inc
push
xchg
and
and
roll
rcrb
ja
pop
cmp
jle
sbb
aas
and
pop
mov
je
jge
inc
out
dec
out
pop
pop
movsb
jnp
and
addss
push
iret
sbb
and
or
bound
inc
sbb
test
lret
xchg
inc
leave
xor
rcrb
adc
mov
int
aas
les
jge
rcr
es
lahf
dec
pop
int3
in
in
push
and
mov
adc
insl
sarl
sbb
jge
sbbb
sbb
jne
cmp
test
cltd
pop
lret
insl
mov
into
xchg
dec
test
icebp
bswap
sbb
rolb
inc
inc
jle
cmc
xlat
stc
adc
lcall
push
imul
int3
or
iret
cmp
lret
or
xor
pop
mov
sub
out
push
mov
pop
xorb
jge
es
xchg
lock
push
jno
xor
jg
pop
std
push
inc
push
dec
dec
iret
ja
mov
mov
or
orb
dec
out
out
idivb
nop
xchg
push
fnstenv
push
popf
mov
dec
cmp
xlat
sbb
cld
cmp
push
frstor
arpl
movsl
jg
gs
add
mov
lcall
arpl
repz
ss
sub
mov
or
test
daa
in
loope
je
cwtl
sti
jbe
mov
out
arpl
enter
pextrw
arpl
jbe
pop
push
mov
shlb
movsl
pushf
std
sub
shlb
push
xlat
sbb
in
sarb
push
dec
std
sti
aas
cli
into
mov
dec
lock
jmp
jnp
insl
inc
cmp
scas
lods
fbld
or
popf
sub
daa
nop
out
lahf
out
sbb
xor
mov
push
push
imul
and
jbe
mov
loop
cli
lret
adc
xchg
mov
xor
cs
lret
popf
cmpsl
cmp
shrb
test
shlb
add
xchg
mov
test
jo
jmp
sar
aaa
or
pop
adc
and
adc
lds
ja
clc
jmp
cmpsl
test
daa
pop
mov
mov
jg
push
push
repz
dec
lret
pop
push
rolb
outsb
pop
or
lret
mov
inc
fdivrl
clc
adc
xor
xor
mov
mov
and
je
mov
pop
pop
push
bound
xchg
jo
xor
inc
insb
insl
and
testb
mov
aad
ja
and
cmp
sbb
pop
cmp
movsl
out
sbb
sbb
jne
xchg
sbb
sarb
dec
pusha
fsubrl
inc
sub
add
popa
lret
pop
out
mov
xor
sbb
cmc
lea
dec
push
sub
push
scas
vshufpd
fisttpll
testb
pop
lods
imul
xchg
shrl
mov
sub
pop
push
mov
push
push
push
inc
and
pop
pushf
sbb
cwtl
insb
cmp
or
or
push
paddq
mov
bnd
xchg
add
xchg
ret
cmpsb
enter
hlt
lret
jns
lods
mov
sub
sbb
pop
dec
mov
sarl
xor
mov
aam
xchg
lods
nop
ret
mov
inc
jle
pop
push
imul
and
hlt
scas
xchg
or
sub
pushl
int
int3
mov
sub
dec
cmp
pop
jp
int3
and
and
int
dec
imul
adc
xor
xchg
cs
loopne
imul
sbb
xor
idivb
insl
sub
inc
and
idiv
lcall
jbe
sub
xchg
in
cld
fsubrp
sub
es
lcall
mov
adc
adc
inc
shlb
mov
adc
fs
mov
xchg
lea
mov
shlb
jl
inc
jmp
in
nop
adc
outsl
out
mov
or
mov
int
mov
dec
mov
mov
out
push
test
enter
inc
pop
and
in
fdivl
add
icebp
xor
popa
sub
pop
sub
nop
ret
push
inc
adc
or
mov
mov
xor
sahf
cmp
addr16
pop
xor
sbb
mov
data16
int
pushf
jbe
fisubs
cltd
shlb
in
mov
push
jae
loopne
sbb
jbe
cwtl
out
xchg
jl
mov
cmp
negb
addr16
les
ss
push
fidivrl
mov
add
or
int3
xchg
popa
mov
adc
sbb
rcrb
lods
cmp
jae
std
xlat
inc
ret
push
fcomp
repz
int
in
jecxz
or
lods
cmpsb
add
data16
cmp
push
sub
jne
adc
mov
mov
mov
lret
mov
or
lock
les
ljmp
cmp
outsb
pop
jge
push
lcall
pop
arpl
jae
imul
inc
in
or
loopne
sub
inc
xchg
out
loope
call
add
jecxz
sahf
adc
inc
or
sahf
aam
cmc
arpl
pop
mov
stos
mov
cmpsb
loop
divb
pop
es
fstps
xor
cmp
cmpsb
mov
lock
rorb
gs
test
subb
jo
inc
fidivl
sub
nop
add
movsb
movsb
jmp
mov
jb
pop
jmp
dec
push
test
xlat
inc
popf
or
cwtl
scas
stos
sti
sub
lock
push
sbb
push
pusha
sbb
pop
sub
jbe
jg
pushf
pop
dec
clc
jo
std
daa
sbb
lcall
push
or
scas
mov
cltd
fldcw
dec
or
jb
adc
addr16
sbb
dec
stos
sub
mov
cld
mov
mov
jno
mov
adc
pushf
leave
push
mov
lds
and
sbb
push
or
outsb
enter
test
cmp
xor
lods
sub
cld
mov
popa
inc
mov
pop
mov
inc
dec
jge
pop
popf
mov
bound
sub
out
movsb
xchg
in
cs
addl
pushf
mov
orb
push
xchg
int3
mov
pop
pop
jae
xchg
ljmp
push
add
sbb
test
sub
add
sub
xor
and
fsubr
mov
sub
fistps
lods
pop
ja
outsl
in
sahf
push
sbb
rcr
xor
sub
ss
cmp
jnp
mov
push
xor
mov
xchg
mov
ds
rorl
je
stos
cwtl
scas
fmuls
aaa
shl
mov
shrb
lods
fimuls
mov
sahf
out
subl
gs
js
xorb
mov
std
push
scas
sarb
gs
sbb
adc
lock
movsl
sub
cltd
sti
mov
movsl
js
imul
inc
cwtl
mov
adc
in
rorl
jg
jmp
dec
mov
flds
jnp
pushf
sbb
xor
dec
ljmp
dec
pop
push
idiv
and
mov
jns
xchg
push
nop
inc
cmp
mov
adc
pop
repnz
gs
xchg
xchg
out
les
ljmp
lock
sti
pusha
imulb
ret
sbb
push
mov
fstps
push
xchg
inc
js
btr
cmp
fucom
push
lcall
test
inc
js
adc
and
dec
jns
into
leave
mul
aaa
fadd
ret
dec
fs
data16
movsl
les
std
ficoml
sarl
add
pop
push
popa
sub
adc
faddl
pop
adc
dec
pusha
push
push
jns
aad
sbbl
jo
pop
mov
jp
add
add
test
lods
adc
or
cmp
sub
sar
fwait
lret
mov
adc
xor
sub
sbb
std
in
out
sbb
sub
hlt
in
mov
movsb
in
push
pop
mov
and
shll
lods
push
mov
pop
rep
mov
push
pop
cmp
ret
mov
mov
jb
mov
int3
js
insb
xchg
pop
mov
filds
jp
mov
jne
xchg
sti
push
lret
pop
pop
or
loopne
ljmp
pop
adc
icebp
jns
lds
sbb
test
lds
pushf
out
stos
add
es
movsl
pop
shll
pop
adc
int
sahf
shl
adc
adc
mov
xor
mov
arpl
cmp
stc
cltd
xor
pop
mov
xchg
jle
push
repz
std
adc
xor
adc
sbbl
enter
ret
mov
or
mov
mull
push
xchg
push
popf
mov
jp
orb
cmpsl
push
mov
or
adc
pop
lahf
imul
and
adc
sub
int
push
xchg
lret
int3
jnp
mov
inc
insb
test
loop
push
lods
mov
push
out
nop
pop
scas
mov
and
repz
mov
in
jmp
and
repnz
test
test
cmp
mov
push
mov
add
sar
daa
lods
push
jo
std
sbb
mov
rcrb
cmpsl
iret
mov
mov
repnz
push
lahf
call
mov
xchg
inc
fcompp
jmp
lea
jecxz
out
aad
jl
pop
pushf
cmpsl
fstl
lahf
pusha
sub
movsl
enter
adcl
inc
mov
and
rorl
xor
add
inc
test
sbb
inc
push
jmp
cmp
imul
jo
sti
mov
mov
sbb
dec
gs
outsl
xchg
das
push
gs
pop
out
add
dec
xor
scas
sub
jmp
ficoml
cwtl
je
sub
test
aaa
cmovae
xchg
shrb
nop
outsl
xor
ret
jecxz
add
dec
cs
xchg
cwtl
dec
popf
mov
loope
and
enter
in
loop
arpl
push
jl
push
jecxz
dec
out
ret
fildl
call
push
stos
in
das
pop
jns
dec
loopne
push
pop
cmp
aaa
nop
scas
int
or
es
repnz
popa
out
fcomps
stos
das
aaa
mov
sub
test
repnz
cmp
imul
xor
inc
push
mov
out
lods
jae
xchg
rol
scas
mov
pusha
clc
loopne
dec
enter
mov
xor
add
add
addr16
xchg
fistl
shl
or
mov
out
jecxz
xchg
add
inc
push
int3
jecxz
dec
in
jno
or
iret
aad
pop
inc
adc
lods
pushf
mov
and
sub
lret
js
lea
aas
js
add
mov
inc
mov
addl
pop
mov
out
inc
mov
jp
repz
mov
sbb
dec
cmp
sub
xor
or
xchg
push
andl
or
in
dec
mov
xchg
inc
cmp
sbb
cmpl
cmp
aaa
adc
js
aas
sbb
out
or
sbb
mov
cmc
add
pop
sub
mov
gs
repnz
inc
std
sbb
lods
outsl
lret
incb
mov
mov
jne
or
shll
loop
pop
mov
scas
dec
mov
or
inc
test
sub
lea
or
pushf
pop
imul
cwtl
xor
inc
sbb
ljmp
scas
mov
nopl
pop
mov
mov
clc
rcrl
aad
sbb
add
mov
sarb
orb
mov
inc
call
xchg
and
pop
push
adc
mov
adc
shrb
mov
mov
mov
sti
out
sub
dec
dec
mov
push
dec
pop
add
inc
inc
pop
mov
repnz
sbb
mov
mov
scas
dec
dec
stos
pop
cmp
cld
adc
dec
sub
inc
inc
mov
cmc
ds
jbe
in
int
scas
xchg
arpl
pop
mov
add
jnp
ret
dec
out
das
push
mov
ret
lret
cmp
jmp
dec
js
repz
xchg
rolb
loope
pop
sub
out
mov
pop
dec
inc
loopne
vmulpd
and
cmp
addl
or
inc
sbb
fwait
inc
mov
lds
mov
push
dec
movsl
in
pop
cmc
mov
roll
cmp
sti
xchg
in
and
cmp
cmpsl
sbb
mov
mov
sar
ret
and
mov
int
add
mov
aad
int
stc
xchg
jb
ja
inc
adc
repnz
xchg
ja
or
pop
aas
gs
notb
or
mov
add
fwait
mov
mov
or
dec
cmpsb
test
and
nop
test
cmp
mov
jns
repnz
into
sub
sbb
lock
ds
fcomp
xchg
test
push
cwtl
ja
rclb
mov
adc
xchg
xchg
add
pop
out
mov
fdivl
or
pop
negl
gs
idivb
jge
pop
es
and
mov
ret
std
mov
adc
mov
lret
js
inc
lds
or
jne
or
sbb
fisubs
out
pusha
clc
mov
int3
push
pop
pop
xor
adc
mov
mov
cmpsb
jl
mov
insl
inc
dec
mov
movsl
mov
out
pop
xchg
sbb
repz
sbb
loop
es
cmp
lds
std
push
int
inc
ret
test
lcall
lods
dec
jns
mov
and
cli
fsts
xchg
ds
dec
pop
andw
mov
lock
popa
fbstp
jae
xchg
repnz
je
ss
insb
dec
pusha
or
movsb
pop
enter
cmp
xchg
and
inc
push
or
pop
adc
mov
add
lcall
mov
mov
xchg
fiadds
popf
arpl
rol
push
add
push
test
mul
sbb
scas
xlat
idiv
test
inc
push
outsb
add
xchg
mov
sti
mov
pop
leave
inc
cmpb
fnstenv
scas
iret
cmc
fisubl
jg
shr
mov
in
cmp
popa
popf
xchg
out
rcl
stos
in
call
sub
add
aad
dec
pop
hlt
pmulhw
xlat
fcomip
push
test
mov
rcrl
mov
and
xor
loope
aam
movsb
sbb
rclb
pop
fisubs
sti
inc
js
or
sbb
movups
sub
inc
cltd
je
xor
jne
test
arpl
push
sub
cmp
or
add
adc
and
push
push
jecxz
xchg
aad
imul
enter
inc
pushf
outsl
jg
and
xor
dec
sub
xor
cmp
adc
pop
out
gs
mov
push
xchg
mov
aam
adc
lods
es
jnp
ljmp
jle
xlat
es
mov
or
out
out
cltd
dec
data16
adc
data16
jecxz
ffree
mov
sub
cld
out
and
xchg
movsl
cmc
mov
and
cs
mov
mov
stos
xchg
jb
iret
mov
or
pop
xchg
les
mov
push
rclb
data16
mov
insb
sti
sub
mov
leave
adcb
add
lea
lret
int
addl
jne
jle
mov
sub
out
sub
mov
dec
es
or
adc
icebp
xchg
call
jge
stos
dec
dec
hlt
int
sub
mov
movd
std
sbb
movq
addr16
jne
or
add
popf
lea
fistpll
mov
dec
movsb
scas
test
jbe
inc
je
ds
jg
jns
sub
rcr
inc
pop
mov
cld
cmp
or
in
ret
jns
mov
out
sbb
jbe
sarl
mov
fdivr
shl
dec
in
add
push
inc
mov
in
jae
aam
sahf
xchg
lock
lods
lret
inc
clc
out
cmp
inc
mov
movb
repz
jle
sahf
inc
into
push
out
mov
xchg
loope
pop
adc
mull
shrd
xor
lock
inc
in
xchg
mov
scas
dec
push
or
xchg
mov
or
les
mov
sub
mov
or
cmpsb
push
xchg
xchg
sub
aam
jg
and
dec
fidivrl
inc
cmpsl
pop
stos
shrl
jns
sbb
fdivs
xor
sbb
movntps
push
pushf
movsl
xor
mov
rcrb
shlb
icebp
sbb
mov
ret
pusha
loop
xor
sbb
in
test
jb
jo
xchg
mov
pop
out
cmp
mov
das
int
push
mov
jecxz
pop
stc
call
mov
jns
xorb
cmp
or
aas
test
dec
std
pop
stc
cld
ljmp
insb
cs
sbb
adc
cli
cmp
inc
arpl
xor
xchg
clc
cmp
adc
cmpsl
add
add
inc
xchg
fcomps
cmp
push
lods
movsl
leave
mov
inc
xlat
xor
pop
jnp
fistpl
pop
lret
js
sbb
push
lods
and
je
or
push
push
int3
mov
testl
cmp
jmp
insl
std
sub
insl
dec
mov
fwait
mov
pop
push
les
xchg
int3
stc
cmpsl
leave
mov
in
scas
jecxz
aas
sub
test
imul
push
mov
rorl
int
xor
ret
stos
nop
subb
inc
xchg
mov
popa
cmp
mov
push
pop
test
fistps
lcall
andl
or
stos
pop
fs
outsl
inc
stos
pop
pop
jns
or
test
xchg
push
xchg
sbb
mov
iret
inc
mov
pop
fdivrs
in
mov
jmp
cmpsb
push
cmpsl
in
sbb
int
adc
add
roll
cmp
cmc
popf
jnp
lds
js
mov
and
xor
cmpsb
xchg
mov
cmp
pop
fiaddl
adc
xchg
mov
test
imulb
notb
pop
or
stos
loop
inc
into
test
mov
mov
std
sbb
pop
xchg
add
es
addr16
insb
dec
inc
jb
xor
addb
cmp
xchg
jl
sbb
lea
push
sti
ja
xchg
ret
sub
inc
sahf
jle
and
imul
cmp
and
ljmp
scas
rcrb
jmp
mov
mov
lods
mov
repnz
pop
mov
sub
out
popw
push
mov
in
out
ss
sub
mov
xchg
pop
std
add
outsb
or
pop
jae
and
sbb
out
in
add
sahf
ds
es
xchg
push
xchg
cs
fwait
ljmp
pusha
mov
or
xchg
sbb
jno
sub
mov
aam
pop
inc
pop
sbb
inc
sbb
cli
loope
rcr
daa
paddusb
cmc
mov
cs
xor
mov
pop
mov
scas
pop
dec
ljmp
and
cwtl
call
sahf
mov
sbbl
clc
iret
push
xchg
pushf
pop
sarl
mov
ficomps
adc
out
dec
xchg
daa
lcall
adc
and
movsb
push
lds
and
outsb
jbe
jno
dec
mov
das
int3
cmp
and
sub
add
or
aam
incl
cmp
aam
dec
and
pop
jmp
adc
test
jno
ja
bnd
lret
fldt
jne
xor
int
add
sarb
int3
pop
pop
pushf
lds
mov
bound
js
out
pop
cmpsb
push
jbe
orb
and
icebp
xchg
jno
pop
mov
cli
into
mov
inc
jnp
pop
mov
jp
rcr
mov
out
mov
xor
add
leave
and
movl
lods
aad
shll
shlb
adc
inc
mov
sub
mov
jb
in
dec
repz
lock
sub
inc
cmp
out
leave
sub
gs
pop
adc
xchg
rclb
decb
sub
ljmp
in
jno
xchg
cmpsl
lock
fs
sub
fldcw
cmp
add
enter
mov
jne
fucom
inc
pusha
out
cmpsb
lret
inc
pop
in
cmp
pop
mov
push
push
pop
int
rorb
xchg
iret
nop
mov
xor
mov
out
xchg
and
imul
loope
int
add
aas
pop
xchg
dec
mov
push
into
scas
inc
sbb
push
inc
jno
bound
sbb
cltd
sbb
sbb
fsubrs
jge
xor
in
xchg
fstpl
mov
cmc
sbb
pmulhuw
addr16
add
out
lahf
hlt
aam
add
mov
dec
leave
faddl
mov
cs
stos
movhps
sub
jns
call
loopne
mov
push
loopne
sbb
and
or
mov
add
sbb
imull
mov
cmp
mov
ja
into
xorb
adc
icebp
int3
xor
push
cli
mov
mov
rcl
mov
stos
lea
xor
push
lcall
mov
push
dec
add
imul
pop
sbb
push
rorl
sub
scas
cmp
mov
xchg
das
pop
xchg
test
and
add
mov
inc
ret
jae
test
loope
fsubrl
enter
adc
fwait
call
mov
pop
call
sub
mov
shrl
cmp
adc
jge
add
loop
aad
mov
aaa
in
ss
jle
cmc
stos
push
cwtl
mov
sarb
call
cmp
stos
jle,pt
sub
call
gs
push
sbb
cld
int
js
int3
pusha
notl
ljmp
xchg
je
lods
dec
and
sub
cmp
popl
xchg
push
addr16
in
mov
xchg
stos
js
out
push
inc
lds
clc
sub
add
pop
pop
scas
ss
mul
sub
sbb
push
and
lret
dec
mov
xchg
mov
pop
add
xor
in
lods
movsb
fistpll
add
ljmp
mov
daa
daa
inc
add
and
mov
push
ds
das
sarb
in
dec
push
and
fucom
and
pop
into
decb
imul
xchg
js
fnstsw
jge
jmp
adc
xchg
sub
ljmp
in
xor
scas
sub
jno
push
jmp
jmp
sbb
fimull
xor
dec
jns
pop
xchg
xor
inc
mov
icebp
xor
shll
fwait
and
roll
iret
push
pop
in
mov
sarb
imul
into
fsts
jle
repnz
in
push
cld
push
xor
push
nop
cli
push
call
pop
adc
iret
sbb
sbb
lret
lods
adc
scas
add
sbb
mov
int3
jmp
mov
pop
mov
push
push
sbb
and
popa
das
data16
or
sub
mov
sahf
xchg
leave
jle
data16
mov
int3
sbb
inc
xor
jge
adc
scas
mov
or
mov
or
xor
into
pushf
mov
loopne
insl
imul
push
fldl
cli
cld
mov
xchg
xchg
cmp
divb
inc
inc
cs
arpl
in
mov
xorb
fnstcw
mov
jl
aaa
outsb
out
pop
in
ljmp
jne
cmp
je
orl
bound
aam
or
jl
sbb
jge
test
jl
jp
sub
add
push
jb
lret
stc
jge
xchg
fisubrs
rorb
sahf
out
mov
outsb
addr16
lahf
push
test
pop
inc
aad
push
repnz
lock
xor
incl
stc
and
push
mov
lea
lods
andb
inc
enter
cwtl
mov
jg
mov
cs
dec
jp
outsl
orb
sub
inc
aas
in
or
push
adc
mov
or
test
loopne
sub
pop
mov
int3
imul
sub
dec
xchg
sub
mov
push
mov
mov
mov
sti
jbe
stos
mov
cmp
push
or
sahf
dec
icebp
fimull
mov
fst
ja
jle
nop
xchg
addb
loop
in
sbb
ja
ror
pushf
mov
ffreep
jl
test
mov
es
push
pop
push
pop
sbb
rcll
and
dec
popf
test
movsb
out
xor
sbb
ljmp
fidivrs
mov
xor
xchg
je
cld
insb
mov
mov
outsb
shr
xchg
lcall
sub
mov
aam
inc
pop
xlat
cmp
fsub
xor
jo
push
loope
cld
out
ret
and
push
movsb
mov
lock
icebp
mov
jle
cmpsl
pop
sbb
nop
xorb
jbe
push
pushf
xchg
cmpsl
and
lock
repnz
addb
xor
dec
out
lahf
push
bound
add
mov
jo
jecxz
shrl
dec
divb
cwtl
push
shrb
jbe
jnp
mov
sti
jno
push
mov
int
sbb
cwtl
jns
mov
lahf
je
or
aad
mov
or
cmp
sti
xor
xor
inc
or
rclb
aad
popa
jno
sbbl
in
das
cmpsl
ljmp
inc
xchg
inc
das
insb
pop
cmpsl
xor
js
mov
repnz
jne
cmpb
insb
shrb
mov
dec
leave
test
out
mov
mov
lret
lods
mov
dec
mov
push
inc
push
xchg
shlb
xchg
dec
mov
jbe
xchg
shrl
lods
jl
push
cmp
push
xor
imul
in
adc
in
sub
leave
pusha
stos
imul
js
stos
orl
jo
cmp
jae
lds
cltd
rol
lahf
jbe
je
lret
push
lret
or
xor
dec
std
sbb
shl
inc
orb
data16
xor
outsl
es
out
test
mov
fstpt
fcompl
insl
cmp
out
lahf
stos
add
push
push
clc
faddp
xor
int
pop
mov
add
out
xchg
and
idivl
scas
ja
adc
xlat
sbb
call
rdtsc
cmc
daa
adc
aaa
inc
je
movsl
pop
das
jo
in
mov
adc
movsl
push
adc
push
mov
pop
jb
out
xorl
sub
mov
mov
jmp
or
cmp
push
mov
or
mov
subl
sub
mov
dec
bound
scas
mov
push
mov
pop
sub
add
stos
cs
js
mov
sub
push
mov
dec
add
test
jne
loopne
shrl
lahf
fucom
mov
mov
xlat
xchg
fsubrl
mov
mov
outsl
dec
bound
ret
in
and
mov
and
fs
jmp
movzbl
movsl
or
mov
sub
fnstenv
pop
mov
andb
jecxz
adc
mov
es
addr16
aad
jge
sbb
push
or
mov
adc
mov
cld
pop
add
mov
in
xchg
movsb
pop
test
in
xchg
jbe
inc
in
jl
lret
mov
mov
imul
push
sbb
fmul
pusha
fwait
add
in
add
or
aas
xchg
hlt
out
cmp
das
insb
mov
sbb
push
add
fmuls
sti
out
outsl
ret
cmp
mov
xor
mov
pop
push
mov
xor
leave
dec
dec
mov
push
sbb
cmp
cmp
fistl
faddp
cli
xor
and
dec
pop
and
pusha
push
pop
stc
rorb
jnp
je
popa
fmull
fildll
imul
imul
xchg
aam
lsl
and
wrmsr
mov
adc
stos
push
in
pushf
pop
dec
add
mov
rcll
dec
outsb
sbb
fwait
mov
test
repz
dec
je
or
out
or
mov
lods
out
inc
dec
push
out
inc
cmp
sahf
add
mov
add
dec
xor
mov
mov
mov
hlt
std
aas
pop
push
in
loope
mov
cmpb
leave
xchg
pop
jae
scas
cld
jbe
jo
or
test
jl
dec
popa
sub
loop
movzwl
xchg
inc
mov
loopne
jno
cmp
ss
and
imul
dec
mov
shll
xor
std
pop
shl
test
popa
fwait
add
shll
cmc
pop
ljmp
in
mull
leave
adc
ret
popa
iret
inc
cltd
cmp
push
jp
xchg
pop
clc
pop
add
lahf
add
push
sub
je
xchg
or
jecxz
push
sbb
xchg
mov
sub
aaa
adc
mov
push
movsb
pop
sahf
jp
aam
in
pop
jo
test
retw
and
xlat
xchg
mov
stos
out
sbb
push
test
lds
filds
mov
ret
mov
sub
cmpsb
ret
xchg
pop
add
lret
ljmp
fs
outsb
out
mov
inc
cs
sub
shll
enter
jno
movsb
jns
fwait
fs
outsb
adc
xchg
lret
int3
out
cmp
jecxz
mov
rolb
and
mov
inc
or
inc
divl
pop
cmp
out
out
int3
gs
xchg
sbb
pop
push
xorb
call
cmpsl
sub
aam
test
mov
lods
divb
loopne
push
and
xchg
cmp
and
movsl
andb
nop
pop
repnz
add
in
push
aad
xor
mov
jae
mov
push
pushf
fdivr
mov
into
das
lds
mov
xor
mov
mov
cli
xor
lret
aaa
fmull
cmp
iret
sub
testl
out
imul
addb
xor
mov
or
mov
cmp
pop
mov
sahf
fstpl
add
push
or
xchg
xchg
gs
stos
sub
xlat
loop
push
inc
arpl
cld
mov
pop
xlat
clc
pusha
dec
popf
mov
mov
mov
stos
jp
into
mov
pop
pushf
push
fistl
pop
mov
es
adc
mov
or
lods
cmp
roll
and
and
mov
or
ret
add
clc
lods
push
fsubp
pop
dec
dec
push
std
mov
mov
mov
repz
jmp
dec
pusha
popf
jle
adc
mov
sbb
push
push
jns
aam
ja
add
into
js
inc
enter
out
and
test
lret
jp,pn
repz
sti
adc
or
sub
fimuls
mov
and
ss
cli
frstor
xor
xor
pop
mov
adc
mov
sbb
sbb
xchg
mov
pop
pop
test
or
test
jecxz
inc
mov
pop
pop
fwait
in
pop
push
xor
adcl
rcrl
inc
xor
sbb
adc
loopne
les
sub
sahf
pop
and
arpl
inc
mov
popf
inc
loopne
in
test
stos
push
sahf
testb
mov
xchg
pop
and
clc
push
cli
cld
xchg
js
adc
cmp
mov
push
leave
in
dec
jg
ds
sub
push
je
pop
push
in
insb
test
outsl
xchg
psllq
push
sti
sti
xchg
int3
sbb
call
je
in
dec
lcall
out
int3
fisubs
popf
stos
add
in
mov
push
mov
movsb
dec
mov
sbb
sbb
ja
push
cmp
mov
jb
loop
movsb
adc
shr
scas
pop
inc
xor
mov
frstor
mov
mov
push
jo
outsl
and
pop
ret
and
inc
adc
jg
or
sbbb
push
test
int
popa
leave
cmp
aam
or
adc
mov
xorw
mov
sub
push
pop
jne
mov
pop
sbb
cmp
dec
ljmp
lods
push
adc
mov
iret
dec
push
add
cld
xor
push
gs
mov
mov
push
inc
dec
jmp
or
sbb
jge
sub
jecxz
arpl
add
sbb
lds
test
aaa
movsl
fdiv
jns
loope
iret
lods
dec
daa
and
out
mov
and
sub
daa
jg
int3
lds
imul
mull
sbb
adc
flds
push
xor
xlat
sbb
sub
push
enter
gs
mov
test
push
stos
xor
xlat
sub
jno
lds
cmpsl
lods
fdivrp
insl
fisttps
xchg
iret
xchg
lret
sub
stos
outsl
pushl
xor
arpl
jmp
sbb
ret
push
xchg
sub
adc
pop
pop
inc
nop
xchg
mov
ss
stos
lret
loopne
xchg
mov
clc
icebp
push
push
ja
mov
xor
dec
xchg
sub
repnz
cmp
and
and
dec
mov
mov
push
sub
push
sub
cld
pop
leave
ljmp
dec
sbb
sbb
mov
cltd
adc
dec
sbb
push
popa
lcallw
dec
xlat
out
add
data16
dec
or
mov
loopne
icebp
lcall
int
bound
pushf
dec
pop
sbb
push
js
jne
dec
outsb
fdiv
fbstp
pop
pop
iret
inc
imul
cwtl
stc
scas
mov
mov
xchg
pop
sti
lods
repz
xchg
sbb
cmp
mov
and
cwtl
test
cs
imul
int3
pop
test
inc
push
imul
xor
daa
mov
imul
jecxz
js
pop
fs
imul
push
and
adc
sbb
dec
into
icebp
cwtl
int3
mov
pop
test
imul
push
xchg
or
out
popf
movsb
mov
popf
lods
pop
mov
sbb
xchg
xlat
cld
jo
sub
loope
xor
pop
dec
xor
mov
sub
add
aas
mov
testb
inc
mov
nop
and
nop
xchg
nop
lods
pop
ret
and
xchg
dec
mov
ss
fistpll
outsl
sbb
inc
aaa
inc
jge
mov
inc
test
mov
xchg
mov
les
mov
cmovbe
stc
shr
push
xchg
mov
xchg
icebp
push
sub
pop
rcrb
lret
push
lcall
cmpb
fadd
hlt
xlat
jae
ror
xor
gs
xchg
push
ds
xchg
test
sbb
and
jmp
or
push
or
imul
aad
cmpsl
in
mov
cltd
ffreep
test
jo
mov
or
jnp
cmp
in
mov
das
jno
inc
aaa
adc
std
hlt
adc
enter
movsl
or
popf
mov
dec
add
imul
jnp
or
insb
sbb
jno
hlt
outsl
sbb
test
rolb
and
mov
xchg
cmp
jns
jne
aas
pop
pop
mov
fidivs
mov
stos
xor
fdivrl
movsb
mov
inc
add
inc
push
insl
sub
pusha
test
jbe
or
popf
sbb
and
pop
sub
call
lods
stos
sub
mov
rcll
adc
xlat
arpl
jno
ret
mov
and
and
push
sbb
lahf
adcl
jnp
ds
clc
or
subl
pop
repnz
push
test
xlat
jecxz
sbb
and
mov
xchg
add
fstl
cmp
aas
dec
loopne
mov
push
sbb
push
inc
adc
aas
je
pop
xor
sub
push
fsubrl
push
loopne
adc
xchg
hlt
pushf
xor
jp
mov
mov
mov
dec
push
fcomi
mov
push
mov
cmp
add
push
cmp
add
ljmp
xor
iret
cmpsb
jo
push
sub
cmpl
nop
scas
pop
and
pop
aad
lret
cmc
push
xchg
push
or
push
pmullw
rcr
mov
xor
adc
daa
ret
ror
loop
nop
pop
lcall
repnz
data16
test
pop
testl
adc
add
adc
test
xor
fdivrl
jle
push
or
ret
fwait
sbb
push
fdivp
std
out
push
mov
cwtl
cwtl
lock
add
repz
lcall
mov
xor
hlt
scas
mov
mov
inc
dec
fimuls
xlat
cli
sbb
sbbw
cmp
dec
aaa
and
loopne
mulb
ljmp
cmc
sarb
cmp
out
adc
mov
ljmp
xor
outsb
psrlw
enter
dec
bound
popa
cs
mov
push
xchg
leave
lods
loope
lock
aas
sbb
ds
xchg
das
or
cmpsl
mov
mov
lahf
xor
and
dec
lcall
push
aas
iret
xor
push
gs
sbb
sbb
inc
jnp
xor
clc
mov
mov
popa
mov
hlt
pop
push
andb
xchg
xor
mov
arpl
test
aas
sbb
imul
dec
sub
mov
sbb
pop
movsb
addr16
jp
inc
add
add
push
cmpb
cmp
and
fistpll
mov
push
push
stc
jno
insb
jmp
or
nop
xchg
sbbb
cmc
sbb
mov
jno
inc
icebp
and
mov
push
pop
pop
mov
xchg
mov
out
sti
cmp
jb
jge
int3
mov
sub
mov
xor
sub
sub
push
push
sub
rorl
es
popf
mov
cmpsl
imul
lea
addr16
xchg
mov
or
jle
pop
add
add
loope
loope
sub
xor
cmpsl
dec
pop
xchg
cmp
nop
xor
stos
jmp
jge
cmp
jp
push
inc
arpl
aam
stc
add
xchg
lods
pop
hlt
sahf
cmpl
add
lods
test
sbb
aam
pop
push
movb
andl
inc
in
fcomps
imul
sbb
shlb
ret
push
pop
mov
gs
adc
mov
inc
addr16
pop
ficoml
int3
leave
xrelease
dec
pop
adc
adc
push
out
sub
fs
stos
jo
lret
cmp
mov
in
mov
sbb
popa
adc
insl
lods
outsl
cmp
dec
xchg
jnp
scas
push
xchg
nop
orl
mov
fs
push
jge
scas
in
mov
lea
sti
xchg
xchg
addb
dec
push
ret
mov
mov
cmpsb
or
popa
std
fs
ja
rcrl
ret
ret
filds
ds
ror
jae
xlat
sub
xchg
aaa
repz
fldcw
neg
jmp
les
xchg
jbe
inc
loope
sahf
push
out
out
out
jo
cwtl
aam
pushf
cld
test
fidivl
aaa
fstpl
repz
or
outsl
repz
and
xchg
jp
xor
xchg
test
sbb
push
pop
add
mov
push
pop
mov
iret
adc
clc
mov
xchg
jl
and
add
push
scas
cmp
ret
lock
mov
xor
ss
cmpsb
sub
jg
mov
popf
mull
xchg
scas
cmp
dec
cmc
mov
mov
pop
sub
xor
sti
movsl
scas
ds
push
loop
cli
mov
mov
and
mov
hlt
jecxz
mov
pop
mov
repnz
into
pop
mov
cltd
imulb
mov
shr
push
stc
sbb
mov
scas
mov
lea
mov
sbb
adc
or
cli
and
xchg
ds
xchg
fstp
shl
imul
jg
sbb
mov
stc
pop
mov
decl
jbe
out
adc
in
mov
pushf
gs
mov
insb
movsl
adc
xor
gs
test
aad
adc
test
fwait
je
sub
shlb
sbb
fimuls
push
mov
mov
fisttpl
enter
fnstcw
pop
adc
cmp
mov
xchg
cltd
fnsave
fdivrp
fsubl
jg
xchg
in
loop
ret
dec
adc
call
sti
xor
pop
xchg
pusha
lahf
xchg
xor
in
repz
add
or
jg
mov
xchg
cmp
sarb
mov
lods
insl
lahf
addr16
pop
fsub
sbb
jp
hlt
insb
scas
ljmp
xchg
jle
in
test
sbb
fsubrs
das
aad
or
adc
aad
int3
cs
pop
fisttpll
pop
inc
outsl
lds
cmp
mov
aam
in
jge
jge
xor
mov
push
popa
xchg
insl
xor
xchg
mov
jns
in
negl
add
sbb
dec
fdivr
and
int
movsl
xchg
pop
fstps
and
aas
into
std
out
sbb
xchg
fsubrl
ja
add
clc
cli
sahf
sbb
arpl
leave
cli
hlt
divb
cli
aas
jge
leave
and
xchg
inc
cmp
xlat
out
nop
jl
mov
popf
pop
gs
pop
enter
inc
cld
jo
push
jmp
jno
cmpsb
mov
sahf
pop
sub
int3
lret
jecxz
mov
jp
mov
cld
loop
ds
inc
call
pop
cmpsl
cltd
and
push
add
push
cli
test
sbb
inc
repnz
fwait
push
std
push
sub
mov
and
lock
testb
mov
gs
jmp
jp
fwait
lds
and
cs
rcrl
or
mov
mov
cwtl
mov
decl
fadd
mov
inc
pop
add
pop
pop
mov
sub
mov
xchg
dec
ja
aad
jmp
pop
pop
iret
cmp
adc
popa
mov
cmc
add
ret
lcall
pop
fldl2t
fisttps
jae
xor
into
in
add
es
negl
lods
dec
cmp
pop
mov
cld
jg
mov
std
in
popf
scas
mov
dec
mov
mov
or
mov
push
daa
xchg
sub
xchg
fimull
fidivl
stos
arpl
sub
sbb
out
lret
enter
mov
fwait
xchg
or
jle
jns
pop
fwait
out
sbb
lods
adc
or
mov
jbe
jns
mov
int3
jbe
cli
adc
stos
clc
dec
idivb
push
sub
cs
cld
lret
or
in
cmp
mov
and
sub
cmp
xchg
pop
fwait
jp
ss
or
adc
mov
inc
lret
icebp
mov
addb
fnstenv
filds
mov
std
and
jle
mov
pop
cmp
gs
inc
fcmovnu
mull
cli
imul
cmp
or
pop
and
idiv
cwtl
clc
mov
jle
scas
lock
push
and
sbb
insl
fbld
js
xlat
lods
imul
dec
fstpl
int
jl
and
fucomi
daa
xchg
popa
or
push
or
cli
inc
sub
lods
adc
addr16
pop
lods
clc
jl
fstl
call
mov
jmp
jo
mov
cld
fisttpl
fcom
ljmp
jb
out
inc
stc
rolb
xor
push
jmp
cli
pop
pop
mov
popf
fcoml
sub
cmp
mov
adc
mov
mov
movsb
sahf
inc
jle
push
xchg
jno
sub
testl
push
push
out
inc
mov
mov
dec
in
sub
int
pushf
mov
das
test
incb
cmp
test
pop
inc
dec
and
cwtl
scas
mov
cmpsl
mov
inc
push
out
movsb
iret
mov
daa
mov
push
mov
inc
mov
pop
aad
stos
jg
cltd
clc
pop
rcl
cmp
xor
lret
lds
sub
in
enter
scas
bound
sub
in
pop
push
mov
mov
jl,pt
push
mov
test
xchg
int
push
arpl
mov
nop
popf
pop
mov
push
jns
adc
mov
cmpsl
leave
mov
inc
div
enter
xchg
test
sbb
js
xchg
mov
xchg
loope
jmp
dec
sub
out
jg
jmp
insb
inc
call
daa
and
fsubl
sbb
push
mov
and
mov
jge
aas
cltd
xchg
xchg
add
or
loop
pop
adcl
add
mov
cltd
in
mov
mov
inc
arpl
mov
mov
push
lret
test
dec
test
scas
scas
mov
outsl
getsec
sbb
fadds
xor
cmc
loope
sahf
inc
lds
cmc
cmpsb
add
mov
lods
inc
sub
sub
jg
xchg
mov
in
adc
pop
add
cmp
jecxz
cmpb
inc
pop
in
lds
add
pop
andl
out
or
jne
aam
loopne
aas
imul
cmp
xor
imul
fldcw
sahf
pop
dec
jmp
push
xor
jmp
test
mov
lret
test
xor
pop
int
adc
sbb
icebp
adc
cmp
inc
fisubrl
and
xor
mov
call
mov
fisubrl
dec
or
sbb
jle
stc
lods
mov
inc
mov
xorb
loope
sub
lcall
inc
push
inc
mov
fisubrl
adc
loopne
mov
rcr
mov
das
ljmp
lds
ret
jecxz
lods
fistl
dec
mov
jle
jmp
adc
jmp
xchg
fbstp
lret
cmpsl
data16
xchg
mov
adc
lret
mov
xchg
outsb
adc
pushw
hlt
xchg
xchg
dec
add
and
and
ret
xlat
sub
jo
mov
mov
sub
ror
call
inc
ret
jle
stos
test
and
lahf
imul
test
shrb
enter
pusha
lcall
ljmp
add
decb
and
ds
jecxz
sbb
sti
mov
jl
mov
lahf
out
add
mov
mov
adc
sub
jg
cld
addr16
fdivrl
ret
repnz
rcrb
push
jnp
daa
xchg
inc
inc
mov
mov
fwait
mov
jo
jmp
lcall
jle
fmull
mov
lea
rorb
mov
pop
cmp
sbb
push
in
add
incb
xor
xchg
push
insl
adc
xchg
and
pop
jne
jge
nop
adc
push
cmp
or
sub
sbbl
mov
push
dec
mov
push
pop
sub
xor
mov
in
adc
xorb
cmpl
into
fwait
jno
push
call
dec
xorb
ss
cmc
shl
push
dec
mov
je
push
jns
mov
inc
mov
push
add
popf
jp
shll
hlt
adc
xchg
mov
dec
dec
mov
and
sub
jbe
and
mov
fsts
les
sub
subl
jb
push
outsb
or
cs
sahf
ja
push
mov
dec
out
es
cmp
xchg
xchg
push
push
xchg
xchg
les
les
loope
lcall
and
xor
jae
in
cmp
out
adc
test
aaa
rorb
lods
add
imul
mov
hlt
mov
dec
clc
sub
fadds
fstl
mov
dec
push
push
hlt
sets
cltd
fistps
outsb
in
xor
jnp
jo
loopne,pn
fisttpll
mov
add
pop
sub
mov
xor
repz
or
loopne
test
dec
sbb
push
pop
jecxz
imul
lea
jg
push
dec
into
add
mov
push
data16
aam
xor
imulb
lea
push
or
jne
inc
scas
subl
insl
sbb
fucomi
imul
es
inc
add
mov
adc
xchg
sub
jl
or
or
insb
mov
je
sbb
mov
jge
ljmp
arpl
pop
je
ja
mov
mov
scas
dec
int3
fsubrs
mov
pop
mov
adc
and
in
jecxz
test
jns
and
enter
push
es
aad
jg
test
scas
in
pop
loopne
mov
fidivs
imul
pop
mov
xlat
jns
mov
js
mov
and
xlat
sbb
sub
nop
inc
xor
push
jmp
jne
mov
arpl
icebp
mov
sbb
pop
cmp
push
les
xchg
push
push
stos
test
cli
add
or
loope
pop
inc
mov
push
in
jle
lcall
mov
xlat
or
fs
cli
adc
lods
lods
cltd
popf
sbb
pusha
inc
pop
jno
ja
push
push
mov
xchg
or
loop
or
or
inc
pusha
mov
and
jecxz
ss
aad
rol
gs
adc
shrl
jg
lret
sahf
dec
repz
pop
or
fiadds
in
add
je
data16
ja
xor
sbb
fidivrl
xchg
mov
jnp
pop
mov
mov
divl
fdivs
hlt
dec
dec
xchg
jmp
push
loop
mov
cmp
and
out
in
lcall
outsb
xor
das
inc
adc
and
je
out
outsb
mov
xchg
int3
xchg
fucomi
dec
int
push
pop
xchg
xchg
clc
dec
xchg
pop
or
mov
cmp
nop
shlb
adc
test
xchg
pop
ss
mov
dec
popf
lods
nop
push
adc
push
push
inc
in
lahf
push
arpl
cmp
orl
adc
jno
push
scas
fisttpl
inc
xor
loop
adc
insl
xlat
mov
shr
sub
jecxz
cvttps2pi
add
fs
pop
clc
loopne
add
ret
mov
pop
mov
or
shlb
int3
insb
fldt
sbb
mov
std
arpl
lret
xor
insl
insb
ss
add
aam
adc
push
pop
insb
dec
ds
outsb
imul
scas
cmp
sahf
jl
jmp
jb
inc
cld
cwtl
jmp
pop
enter
or
hlt
bound
pop
mov
arpl
fidivrl
xchg
stos
and
mov
pushf
int
or
sub
pop
ljmp
enter
jge
jge
sbb
clc
cmp
jge
add
push
sbb
rorb
bound
scas
jp
cs
sub
push
pop
call
push
daa
pop
cmp
mov
ja
test
xor
out
mov
inc
dec
push
sbb
cld
xchg
pop
push
stc
shll
movsb
pop
xchg
inc
add
pushf
outsl
mov
inc
cmpsb
lods
int
bound
push
push
fidivs
add
das
imul
dec
inc
adc
pop
and
mov
or
negl
loope
pusha
or
mov
mov
mov
ret
pop
fcomp
mov
mov
xor
jnp
jmp
mov
dec
test
push
xlat
mov
pinsrw
in
mov
inc
arpl
dec
in
lock
loopne
je
pushf
inc
movsl
sti
arpl
or
xor
add
insl
arpl
sub
enter
mov
and
sbb
mov
mov
push
mov
popf
pop
and
cmp
jnp
xlat
add
mov
add
pop
xor
cs
aaa
fnsave
add
imul
mov
adc
icebp
mov
jns
push
push
outsl
push
stos
jg
lcall
out
popa
pop
addr16
in
loopne
gs
mov
shll
and
adc
or
cmp
add
jg
ljmp
adc
dec
pop
inc
xchg
mov
loopne
mov
jne
test
repz
sti
stc
ret
enter
test
ret
xchg
cmpsl
lods
dec
jno
xchg
push
pop
xchg
add
pop
je
dec
ja
jne
icebp
sub
fadds
in
gs
add
into
mov
inc
or
push
mov
sub
mov
fists
mov
sub
jle
mov
xor
fcompl
mov
pop
xchg
dec
adc
xor
sti
sahf
out
add
outsb
sbb
inc
inc
nop
and
sub
nop
rolb
lahf
jecxz
mov
xchg
mov
pop
lcall
sub
add
out
or
ljmp
rcrl
cmpsb
push
test
jg
mov
jl
add
sarl
ret
out
xchg
add
push
in
js
and
test
out
jno
push
fcomip
sbb
ror
jne
mov
addr16
mov
mov
scas
fptan
sub
ds
or
das
jns
cmpsl
int3
mov
addr16
add
aas
js
cmpsb
in
rol
xor
xlat
outsl
insl
mov
and
add
and
dec
ljmp
movsb
sub
inc
int3
sahf
shrl
pop
cmpsl
add
adc
xor
pop
pop
into
xor
mov
clc
mov
and
movsb
loop
mov
btc
mov
add
mov
cmpsb
hlt
data16
incl
or
mov
mov
inc
adc
jno
mov
jnp
sbb
lds
addr16
xchg
mov
je
dec
mov
das
jbe
insb
std
stc
mov
and
inc
cmpsl
mov
pop
stc
add
add
mov
cwtl
repnz
das
adc
push
mov
sbb
ljmp
mov
scas
mov
movsb
fisubrl
sbb
push
scas
stos
mov
sti
inc
push
dec
sub
xchg
clc
nop
lret
inc
scas
shlb
jecxz
arpl
add
dec
decl
and
test
push
aad
mov
push
inc
sbb
pop
cmpb
int3
out
fcomip
mov
jg
scas
mov
call
mov
aam
das
push
pusha
jp
popf
stos
pop
dec
push
push
sbbb
xchg
cli
rcr
fs
xchg
test
fidivrs
xor
xchg
add
stos
rcl
push
dec
fnstcw
mov
and
subl
cmp
fcmove
or
fmull
and
cmp
cmp
hlt
inc
mov
jb
pop
xchg
fwait
push
mov
dec
lret
iret
fucomi
mov
jne
call
aad
shlb
pop
or
cmp
mov
aaa
cwtl
xchg
out
add
add
dec
jp
pop
ss
pop
push
fmulp
pop
cmp
add
adc
lahf
jnp
mov
cmp
mov
fisubrs
in
loop
xchg
or
enter
movsb
lds
add
cwtl
imul
aas
jb
lret
dec
pusha
xlat
pop
cmp
scas
lods
fidivs
add
mov
into
out
adc
sti
fs
rep
cld
movsl
mov
inc
dec
jp
imul
icebp
pop
adc
fdiv
cmc
xor
pop
sbb
stos
cmpsl
cmp
push
int
pop
js
jmp
movsl
into
mov
mov
popf
and
inc
adc
arpl
ds
fmul
repz
cmpsb
jmp
stos
adc
cmp
outsb
jns
out
je
lahf
arpl
or
push
sub
jb
cmp
mov
push
mov
cmp
mov
aaa
inc
mov
jbe
in
push
lds
fstl
ret
movsl
ljmp
ja
mov
hlt
mov
xor
xor
fs
pop
lcall
xor
mov
xor
adc
cmp
cmp
out
addb
xor
in
xor
lock
push
pop
push
cmc
dec
les
loope
imul
ljmp
mov
insb
pop
jbe
lret
or
cmpb
xchg
clc
mov
and
dec
xchg
icebp
and
ss
push
sbb
dec
add
pusha
push
ret
jecxz
dec
ljmp
icebp
mov
jo
pop
stos
ret
mov
inc
xor
adc
test
inc
pop
or
imul
sbb
gs
adc
pop
prefetch
movsl
xchg
lea
or
push
pop
xor
dec
int3
fistps
or
in
push
outsb
mov
mov
sbb
movsb
hlt
add
push
mov
in
rcr
cmp
mov
stc
test
adc
adcl
scas
cmp
push
popa
mov
int
dec
pushl
aam
out
popa
rcll
jge
mov
ljmp
andl
push
fwait
mov
fstp
and
pop
push
inc
inc
fsubrp
sbb
push
fwait
out
mov
dec
incb
or
xor
xchg
mov
ret
mov
stos
mov
xor
push
mov
xchg
stos
cmpsb
lea
cmp
ret
sbb
orb
enter
inc
aaa
mov
ror
lahf
mov
mov
in
add
pop
fisttpl
es
and
and
mov
push
test
cmp
inc
int3
mov
popf
leave
daa
movsb
leave
dec
push
push
stc
mov
cmp
inc
and
nop
xchg
mov
and
push
aad
pop
movzwl
cmp
bound
loopne
rorb
out
aam
iret
stos
pop
loopne
inc
inc
cmc
test
imul
std
test
fwait
into
add
mov
mov
shlb
jl
outsl
into
or
xchg
mov
xor
or
xchg
fwait
xchg
and
jns
je
in
and
adc
jb
inc
jp
sbb
hlt
jl
xchg
add
jo
dec
push
xor
adc
mov
mov
lock
or
aas
mov
ljmp
rclb
js
push
adc
xchg
dec
cs
in
or
mov
out
out
xchg
push
add
arpl
jo
cmp
test
fadds
jmp
mov
loope
aas
sub
hlt
inc
xor
push
dec
lods
push
add
pop
repz
popf
mov
ret
loopne
push
inc
mov
or
mov
cmp
je
xacquire
movsl
repz
pop
xchg
mov
push
gs
test
cmc
aam
lock
nop
dec
fimuls
jo
es
stc
or
cmc
iret
mov
xor
out
xor
jecxz
ret
out
popf
mov
insl
inc
xchg
fstl
sbb
pop
std
push
icebp
rcrb
lea
sbb
imul
or
lret
icebp
adc
xchg
pusha
cs
dec
jns
inc
cmp
mov
pop
rcrb
inc
icebp
dec
mov
dec
inc
sub
gs
add
mov
pop
lcall
lods
xor
cmpsl
and
int3
in
push
cs
dec
xchg
das
movsl
inc
mov
jns
jge
inc
test
adc
xchg
fidivs
incb
xor
adc
push
and
push
enter
hlt
in
lret
fisubrl
jns
jmp
out
je
and
cmpsl
adc
inc
sub
cs
imul
shlb
pop
mov
sahf
push
cmp
xchg
nop
repnz
ds
jne
test
or
cltd
push
scas
jecxz
int3
mov
cmp
cltd
sbb
clc
sti
hlt
aad
div
push
cmpsl
and
mov
sub
xchg
mov
jmp
popa
sbb
scas
lea
ljmp
inc
xor
mov
or
hlt
je
popa
xchg
push
aaa
ror
jne
fiadds
pop
adc
call
and
dec
push
imul
push
aas
cmpsl
xlat
pop
bound
iret
enter
loope
and
test
ret
push
lock
mov
adc
mov
outsb
mov
cmpsl
mov
push
xchg
ret
xchg
sub
test
cltd
mov
fs
jo
out
icebp
lret
mov
or
jne
jecxz
cli
pop
sub
xchg
jg
push
cli
add
xchg
lahf
xor
mov
sbb
dec
xor
push
movsb
cmp
sbbl
jno
cmpsb
mov
jne
inc
in
aad
xor
insb
lock
jg
push
popf
adc
jae
push
jecxz
daa
dec
ja
pop
adc
mov
adc
mov
jmp
pusha
cmpl
js
bound
inc
jecxz
movsl
test
outsl
lods
pop
or
pop
sbb
pusha
stos
icebp
cmp
aaa
mov
out
in
cmp
xlat
jecxz
and
int
adc
jns
adc
push
pop
add
loope
add
fildll
fidivs
xlat
mov
dec
mov
cmp
test
pop
pop
das
pop
jno
xchg
ja
dec
xchg
and
fidivrl
mov
sub
lea
fstps
xor
inc
sbb
cmc
and
mov
in
adc
lahf
sbb
jge
outsl
nop
push
sbb
xor
shrl
cltd
xor
adc
lods
shll
mov
push
dec
lods
fsubs
hlt
fcoms
scas
mov
ficomps
fsubrl
sbb
xor
lcall
fnsave
jo
out
xchg
mov
ret
aaa
add
ret
roll
dec
fildl
add
or
cwtl
or
lahf
pop
stos
pop
movsl
imul
js
or
lock
mov
sbb
popa
ret
pushf
lret
aaa
push
jns
jno
hlt
leave
sub
mov
mov
arpl
adc
jb
cld
sbb
jecxz
mov
inc
sbb
pop
mov
add
push
push
fwait
test
psubsw
or
imul
testb
and
push
std
dec
loopne
sub
inc
daa
sbb
rcrl
sbb
pop
outsb
mov
arpl
adc
or
mov
rcr
cmp
test
adc
sbb
and
aaa
and
jne
notl
mov
clc
inc
adc
mov
xchg
out
pop
data16
mov
fsubr
popa
fucompp
hlt
mov
inc
dec
lods
jno
push
and
insb
les
mov
idivl
add
or
inc
lods
add
and
fabs
std
pop
call
push
push
push
xchg
mov
mov
fdivl
sbb
push
xor
xchg
imul
hlt
cmpsb
sti
cmpsl
pop
push
mov
lds
lods
cwtl
xchg
mov
test
insl
adc
push
pusha
fsubs
mov
dec
movsb
add
push
cs
mov
das
mov
push
mov
fdivrl
iret
sub
cmpsl
ret
test
fstp
loope
push
and
icebp
xchg
adc
mov
rep
mov
in
lahf
stos
lock
in
in
mov
sti
test
inc
mov
push
add
lcall
push
in
xor
sahf
push
scas
and
dec
fs
into
and
inc
or
mov
jge
mov
stc
fldt
orl
adc
shrb
cmpsl
test
mov
sarb
push
imul
sub
fimuls
sub
adc
mov
push
jns
shl
les
dec
negl
rcr
xlat
sarb
movsb
dec
or
push
xor
add
mov
dec
ret
stos
xchg
mov
sbb
mov
bound
jmp
dec
inc
loope
add
lahf
sarb
adc
ja
das
adc
sbb
push
xorb
scas
int
repz
or
sub
repnz
sub
xchg
mov
fwait
sbb
push
mov
add
pop
mov
jbe
mov
push
stos
sub
test
dec
and
int
out
fwait
cld
mov
xlat
test
pop
addl
das
pop
sbb
sti
je
fwait
iret
cld
jg
stos
int
nop
in
or
in
sarl
mov
adc
loopne
sub
adc
push
mov
pop
lock
shll
rolb
adc
dec
pop
push
test
jb
lret
ss
nop
mov
mov
pop
lds
outsl
mov
in
xchg
mov
testb
sbb
cs
ret
mov
mov
cltd
pop
xor
mov
push
cwtl
fwait
jo
mov
ficompl
pop
inc
int3
xor
cmp
sahf
xchg
testb
mov
cmp
push
add
cmpb
jl
sub
je
rclb
and
decb
xchg
imul
icebp
cmpsb
pop
addr16
jo
sbb
lods
inc
adc
sbbl
lret
in
sbb
loopne
push
push
fcoms
scas
jp
sub
lock
loope
mov
sarb
mov
dec
out
fcompl
cmp
push
inc
sub
push
lds
and
jecxz
insl
imul
dec
mov
loope
scas
add
mov
and
fildl
mov
std
mov
or
mov
insb
and
repz
ljmp
dec
test
negb
dec
lea
out
test
shl
or
fnstenv
outsb
mov
stos
in
fwait
pop
mov
pop
hlt
pop
cwtl
out
or
cli
adc
dec
in
les
dec
in
mov
inc
addr16
push
ret
push
jno
jno
data16
add
aaa
push
or
mov
lds
sbb
add
pop
sbb
mov
ja
push
mov
decb
add
cwtl
mov
in
adc
mov
mov
rcrl
clc
sbb
js
cmp
mov
sub
add
sub
jle
xchg
in
movl
cmpsl
popa
sub
dec
mov
icebp
cltd
loopne
mov
pop
popf
mov
xchg
add
popa
add
notl
and
movb
call
int
pextrw
lods
jle
mov
loop
in
or
inc
xchg
loopne
mov
repz
sub
stos
and
xlat
in
and
dec
inc
inc
push
push
add
jp
xchg
js
insb
lahf
nop
push
aaa
mov
lock
aam
ret
fwait
movsb
mov
jnp
add
cli
sbb
movsb
in
or
push
push
mov
dec
and
jge
push
mov
andl
add
pop
sbb
sti
adc
or
mov
mov
jl
inc
loop
cmp
pop
mov
adc
imul
pop
push
sub
mov
fsubrs
dec
jnp,pn
pop
mov
jge
fdivrl
test
lea
out
jecxz
int
decb
jnp
clc
jb
inc
mov
lret
xchg
push
xorb
add
test
loop
sbb
imul
ss
rol
rolb
subl
fdivl
jbe
mov
ja
loope
jg
test
cmpsl
sub
cwtl
cwtl
fisubrl
xchg
inc
push
mov
je
lds
cmp
repz
push
lods
jge
xchg
and
andb
daa
out
icebp
sbb
fildl
jnp
xor
shrb
fnstsw
push
enter
mov
lds
rep
or
loop
add
not
ror
test
push
movsb
cwtl
and
pop
lcall
cmp
int
pop
adc
mov
jmp
insb
xor
sbb
push
es
mov
sub
add
shrb
xlat
push
pop
mov
aas
push
inc
jnp
pop
and
jnp
push
pop
movsl
inc
cmpsl
decl
ret
add
mov
adc
push
mov
or
stos
scas
enter
add
mov
outsl
or
test
and
pop
lret
and
lret
filds
mov
pop
sbb
inc
sub
daa
push
mov
mov
scas
xorb
or
std
jmp
xchg
pop
mov
outsb
add
mov
adc
xor
inc
add
es
jbe
inc
in
push
jge
jmp
ret
jmp
ljmp
add
push
dec
imul
daa
cmp
lret
mov
bound
xchg
lahf
ret
out
jno
addl
mov
adc
adc
mov
test
rcrl
test
adcl
aam
add
pop
fcompl
mov
das
mov
pop
mov
mov
and
jb
inc
push
cmp
add
adcb
lods
test
imul
mov
out
mov
push
sbb
inc
pop
push
mov
pusha
lea
enter
xchg
and
fnstenv
test
out
test
xorl
shrb
pop
xor
push
movsl
addr16
cmp
lret
push
sub
je
das
jbe
in
inc
push
fs
popa
sbb
xor
jl
push
stos
out
sub
jbe
inc
sub
jl
cmp
mov
js
mov
pop
mov
mov
nop
jae
xchg
pop
popf
fsts
mov
enter
nop
movsb
shlb
jo
jle
pop
pusha
mov
dec
out
fldt
jge
adcb
push
sub
xchg
dec
adc
xchg
out
imul
mov
adc
out
outsb
lahf
add
inc
mov
stc
stos
cli
sbb
in
pop
insl
pop
mov
cmpsl
outsl
in
les
dec
sti
ljmp
jns
adc
inc
ds
es
push
enter
mov
icebp
push
push
mov
lods
jp
ret
add
cmp
xchg
in
sbb
sub
scas
shll
nop
xlat
cmp
les
inc
jecxz
dec
divl
andl
sti
xor
neg
push
add
stc
mov
enter
inc
out
call
sbb
pop
or
pop
das
int
es
or
cmpsb
add
or
pop
lahf
sbb
adc
in
rol
inc
xchg
lds
std
mov
ret
mov
aaa
jmp
das
ds
andb
mov
mov
mov
add
cmp
sub
and
int3
xlat
xchg
or
mov
rorb
stc
and
les
in
imul
lods
rorl
imul
cltd
and
add
sub
mov
mov
dec
push
mov
push
xor
sub
dec
in
icebp
xor
test
inc
ret
xchg
scas
ljmp
sti
sbb
pop
mulb
add
fmul
cmp
push
xchg
pop
sbb
sbb
cmp
xor
lods
pop
push
inc
pushf
jmp
dec
lods
xlat
pop
jns
out
ret
in
imul
cmp
push
jo
leave
cli
jmp
mov
std
jp
xchg
dec
adc
fistpl
push
cmp
mov
or
std
push
in
push
loop
fstpl
nop
sub
cwtl
pop
inc
sbb
int3
jmp
sub
divl
es
fwait
xchg
sti
xor
popa
imul
push
enter
jl
dec
scas
fnstenv
add
cld
fstpl
dec
fistps
jg
cmp
adc
nop
cmpsb
lcall
pusha
dec
lock
cltd
and
popf
orb
mov
adc
add
adc
rolb
xchg
mov
mov
xchg
lds
fidivrl
neg
push
jne
mov
inc
shrb
data16
mov
jp
inc
push
movsl
mov
inc
sub
divb
scas
pop
xchg
mov
faddp
lds
iret
and
xchg
call
test
sub
push
inc
mov
cmp
sub
xor
xchg
sub
ss
lods
mull
lret
and
jmp
fadd
clc
dec
sub
out
repz
js
das
test
fistps
inc
cmpsb
jp
data16
aas
cmp
or
jne
pop
xchg
push
sub
mov
sbb
repnz
jns
mov
stos
je
into
loope
jge
xor
jb
xchg
pop
or
inc
jb
fwait
aas
mov
jae
jle
nop
lcall
or
in
rorb
mov
imul
sub
pop
inc
sti
clc
stc
inc
test
jns
ljmp
outsl
mov
jp
nop
das
mov
das
in
dec
dec
test
dec
mov
ja
ss
or
stc
fadds
pop
leave
jge
mov
jo
es
mov
popa
mov
rcrb
dec
negl
push
lret
je
lock
jno
int
jge
inc
lods
test
pop
sub
add
lea
je
jle
mov
dec
loope
or
inc
sbb
stos
dec
jp
jecxz
inc
daa
ret
push
mov
mov
xor
adc
pop
push
push
sti
pusha
sahf
fimull
ror
jns
inc
mov
cmp
dec
ret
lret
nop
and
sti
jb
lds
stc
or
inc
xchg
pop
mov
jno
in
sbb
ret
sahf
jge
mov
repz
push
sbb
mov
cmpsb
pop
cmp
mov
or
jle
xor
sbb
cmp
jns
fwait
mov
mov
lods
sti
or
mov
test
inc
aam
jae
movsl
dec
cld
inc
mov
mov
pop
pop
jbe
jecxz
dec
xor
sbbb
pop
inc
frstor
push
dec
xchg
cmp
daa
push
orb
cmpsb
cs
inc
lods
pop
shrl
lahf
cmp
xor
xlat
mov
adc
cmp
jge
mov
mov
push
push
pop
xor
sar
and
mov
push
orl
int3
outsl
addl
test
cltd
sbb
cmp
int
bound
dec
inc
imul
lock
jecxz
mov
cld
sub
cmp
cmpsl
add
and
jae
jmp
sub
jecxz
jo
js
pop
mov
in
xchg
push
jbe
jbe
sub
popf
inc
aas
or
rolb
mov
in
dec
xchg
stos
ss
jns
test
sahf
enter
lcall
psrld
pushf
ror
sub
sub
jbe
shrb
std
in
cmpsl
jle
xlat
addr16
pminsw
ficoms
bound
call
loopne
push
cmpl
es
mov
dec
mov
movsb
es
rolb
insl
movsb
jge
mov
out
ja
jno
std
mov
mov
cmp
cmc
add
inc
sti
mov
sahf
daa
roll
frstor
xchg
das
fstl
inc
cs
dec
cmp
push
arpl
sbb
out
pop
or
popa
stos
jae
stos
lcall
push
mov
mov
daa
push
jp
std
aam
sti
sub
cmpsb
dec
xor
pop
sbb
inc
movsb
in
out
scas
icebp
fiadds
into
sbb
and
inc
movsb
test
pop
jmp
fidivs
mov
push
in
stos
test
js
mov
mov
icebp
xor
mov
movsl
fwait
mov
outsl
mov
dec
lds
outsl
inc
dec
sbb
in
xchg
into
insl
add
mov
mov
sbb
stc
icebp
pop
adc
nop
pop
cmp
ret
inc
mov
mov
and
or
sbb
ss
int
ja
jp
mov
mov
adc
push
inc
decb
stos
arpl
and
xchg
pop
popa
or
int
out
shrl
xchg
adc
rcr
add
mov
inc
roll
jne
mov
sub
jecxz
fmulp
lods
dec
mov
pop
mov
fucomp
cmp
std
inc
jb
jo
icebp
cmpsb
movsb
jo
xor
mov
popf
push
ljmp
sbb
adc
ds
xchg
cmp
adc
cs
cmp
lods
inc
xor
call
fiaddl
push
sub
mov
dec
mov
aad
enter
fisubrl
popa
jne
ss
ljmp
in
mov
dec
dec
ficoml
fcomp
cmp
adc
jecxz
aad
inc
jmp
clc
insb
jne
xor
aam
clc
xor
mov
leave
sti
pop
or
data16
pushf
mov
pop
and
mov
cmp
pop
ljmp
gs
dec
jae
cmpsb
arpl
mov
jge
std
xchg
dec
mov
js
lods
push
rcll
ficoms
fsin
mov
dec
inc
push
js
call
icebp
inc
shll
jge
pop
mov
xchg
sbb
jecxz
popa
mov
lahf
inc
xchg
lods
xchg
add
and
mov
mov
frstor
pusha
int
imul
cmpsb
lahf
dec
lea
test
movd
cmp
out
ret
movsb
ret
dec
cmp
lret
loopne
cmp
es
and
cmpsb
jns
xchg
and
test
cmpsl
inc
out
insl
xchg
cmp
xacquire
push
adc
mov
fbstp
sbb
pop
mov
sub
popa
or
bound
stos
or
loopne
cmp
lock
setg
out
cmpsl
adcb
or
xchg
mov
push
rorb
aad
outsb
daa
cld
ret
adc
xchg
sub
mul
xor
xchg
lcall
sub
xor
in
loopne
dec
jne
test
inc
mov
in
inc
mov
or
addr16
movsl
mov
popf
scas
movsl
imul
insb
aad
add
clc
ljmp
jecxz
outsb
ds
adc
sbb
mov
push
repnz
int
xor
inc
imul
push
aas
aaa
push
inc
lahf
push
xlat
insl
mov
lea
fstpt
aad
adc
xchg
addl
les
dec
mov
repnz
scas
adc
mov
sbb
fucom
loop
movsb
dec
sbb
ds
jmp
or
mov
hlt
and
faddl
adc
mov
mov
jno
int3
cmpsl
jl
jnp
mov
out
or
mov
cmp
jne
xchg
int
jmp
pusha
mov
cwtl
ror
mov
and
std
arpl
jp
and
call
lsl
decl
jnp
out
cltd
aas
fisubl
fsubl
movsb
dec
lea
loop
sub
std
cs
add
fcomps
mov
jnp
nop
or
push
mov
cli
or
jae
mov
add
fiadds
dec
int
and
sahf
inc
push
sbb
aaa
int3
dec
sbb
ss
push
push
lret
shl
das
mov
jno
stos
inc
mov
icebp
cmp
jmp
mov
in
mul
test
xor
push
mov
xor
push
fmul
aad
jmp
out
xchg
fwait
lods
fxch
mov
mov
int
xor
daa
sar
pop
jnp
sub
fldenv
arpl
out
cwtl
sub
dec
and
push
pop
gs
mov
cli
pop
pop
iret
aas
cmp
mov
aad
dec
pushf
lds
out
out
and
mov
stc
cmp
std
stos
movsl
movsb
xchg
sti
lcall
cmp
rol
mov
adc
adc
aaa
sub
xchg
or
call
mov
xor
jno
negl
mov
gs
sbb
in
test
pop
outsl
jl
xor
test
aaa
clc
mov
jp
hlt
push
scas
insl
incb
jnp
bound
nop
jmp
add
ss
jp
scas
push
testl
mov
push
inc
mov
lods
int
push
pop
repnz
and
inc
int
adc
das
sub
sub
pop
out
mov
mov
sub
cmp
and
fcoms
outsl
jo
mov
enter
add
mov
push
ss
xchg
lock
cld
push
dec
mov
stos
dec
test
clc
fwait
mov
popf
insb
and
lret
pop
sub
xchg
sbb
sub
cmp
daa
pop
cmpsl
outsl
push
add
mov
movsl
in
inc
adc
dec
cmp
xor
jno
xchg
mov
rclb
imul
jp
pop
mov
xor
aaa
cs
push
fisttpl
je
push
cwtl
jbe
ret
es
xor
not
nop
std
in
imul
jb
jno
and
xor
mov
dec
rcrl
cmp
stos
push
incb
pusha
bound
test
stos
mov
lods
sbb
mov
hlt
ss
sub
cmp
cmp
push
mov
add
test
jo
add
cmpsl
push
mov
inc
xor
movsb
into
sbb
les
mov
mov
mov
add
xchg
mov
cmc
pop
sub
popf
sbb
mov
jmp
incl
push
xchg
lret
mov
les
rorl
sub
je
test
lds
xchg
dec
bound
je
mov
sub
adc
sahf
ret
xor
inc
jge
xchg
mov
mov
jl
inc
ds
cmp
inc
iret
push
stos
mov
in
ss
sub
pop
mov
mov
and
pop
addl
mov
mov
aaa
cltd
dec
xorl
xorl
mov
sub
or
shl
lcall
jb
into
addr16
in
fstps
sbbb
sbb
addr16
divl
ds
mov
dec
mov
sbb
dec
push
jns
adcl
and
xchg
xchg
mov
rcl
pop
dec
rcl
lea
fldenv
jge
add
insl
jae
pop
mov
movsl
sbb
addr16
call
pinsrw
lahf
mov
ja
push
aam
mov
mov
cmpsl
test
xor
ljmp
mov
xchg
ret
cld
leave
popa
or
in
and
pslld
cmp
out
mov
sar
cmp
mov
inc
js
adc
or
xor
and
push
es
cmp
adc
mov
imul
and
add
test
cmp
lret
hlt
mov
loopne
jns
scas
rclb
inc
mov
aam
lret
sub
idivl
shrd
adc
jbe
or
cwtl
xchg
mov
or
fcomi
stos
dec
fsts
mov
jle
imul
lret
jb
or
popf
imul
pushf
xor
mov
int
aaa
stc
jl
and
mov
decb
gs
rclb
into
daa
mov
dec
inc
cmc
fcmovne
jecxz
add
std
jl
cli
or
sar
sub
out
add
je
shll
vunpcklps
repnz
inc
add
add
pop
push
jp
lea
jp
cmp
jb
pop
sbb
pop
cmp
or
add
testb
call
cmpsb
inc
xorb
outsb
add
scas
add
pop
mov
rcrl
pop
les
loope
cli
mov
sbb
les
pop
lahf
rdpmc
jg
mov
data16
xchg
fsub
or
repz
xchg
jnp
mov
push
sbb
aad
stos
popf
jne
sahf
scas
fcomps
jo
in
jo
adc
jmp
lods
dec
or
imul
sbb
mov
ret
scas
mov
adc
sbb
sub
mov
cmc
cmp
or
stos
mov
pop
mov
pop
push
lods
xchg
adc
sbbl
inc
inc
jg,pn
inc
ss
jecxz
das
jecxz
outsb
mov
into
xchg
data16
sub
cs
jmp
adcb
rcrb
icebp
js
and
test
sbb
test
rcll
out
insb
xchg
sub
data16
scas
push
dec
in
mov
pop
data16
xor
popa
sbb
fldenv
pusha
mov
add
sub
addl
adc
rcrb
sub
adc
popa
lods
sub
push
mov
in
je
jl
aaa
and
add
shrb
cmp
jbe
push
push
or
aas
call
rcrb
stos
jbe
sbb
mov
ja
xchg
in
mov
ds
pop
in
dec
std
cltd
icebp
or
outsb
es
mov
xchg
sbb
xor
rorb
xchg
icebp
jle
xchg
cmp
dec
sbb
xchg
mov
xchg
fcompp
cmp
ret
mov
ficoms
mov
call
jnp
cld
lods
push
daa
rclb
inc
adcb
adc
insl
pop
or
outsb
push
jo
out
fwait
jae
push
imul
mov
mov
stc
aas
movsb
sub
mov
pusha
scas
divl
bound
xlat
lds
push
jmp
sbb
mov
mov
push
lock
add
pop
cmpsb
jge
add
lods
push
inc
cmp
add
dec
mov
sbb
cmpsl
dec
fldcw
jp
enter
aad
dec
add
push
sub
jno
hlt
dec
pop
jmp
sqrtps
sbb
mov
pop
xor
lcall
sub
sub
push
jnp
jo
or
dec
inc
and
jge
rol
jae
xor
jbe
movsb
jmp
or
leave
adc
fadd
mov
xchg
jo
lds
xor
dec
jmp
scas
inc
in
mov
les
dec
mov
and
or
adc
pop
xor
shrl
jmp
bound
or
bswap
push
stos
cmp
or
adc
clc
adc
sbb
pop
push
pop
pop
push
sbb
out
clc
sbb
cmp
sahf
aad
jbe
popa
or
mov
sbb
mov
or
pop
and
andb
test
mov
mov
aad
test
lods
imul
aam
mov
inc
pop
inc
or
test
sahf
pop
push
adc
out
add
cmpsl
outsl
and
and
push
pop
nop
mov
rcrl
xchg
pop
xor
jo
jns
sub
repnz
add
dec
jno
lret
hlt
add
lahf
addr16
xchg
ja
fs
push
leave
outsl
mov
push
xchg
push
leave
out
jecxz
or
sub
out
test
or
sbb
rcll
icebp
fs
or
mov
test
and
inc
push
sbb
dec
add
mov
xchg
fisttps
or
jge
xor
add
inc
imul
adc
mov
cmc
mov
sub
insl
add
pop
sub
jnp
push
jmp
bound
int3
pop
mov
mov
mov
mov
mov
jbe
inc
push
mov
test
xchg
push
cmpb
outsb
ret
cld
mov
in
stos
lret
add
dec
and
cmp
scas
shll
jnp
sbb
sbb
mov
inc
xchg
out
mov
test
fisubl
movsb
sti
xlat
out
lods
int3
insl
push
pop
xchg
outsl
sub
andb
jnp
cmp
dec
adc
lock
mov
lret
pushf
sub
cmp
fstps
mov
or
mov
mov
jns
push
faddl
mov
push
pop
mov
fidivs
test
jp
mov
and
mov
stos
aas
pop
fidivl
sub
adcl
fbld
pop
mov
adc
xchg
adc
dec
push
push
mov
mov
mov
shll
mov
xlat
aaa
aad
xor
cmp
inc
mov
pop
lock
sbb
sub
icebp
popa
jecxz
mov
mov
ret
dec
fsubrl
mov
mov
mov
lds
adc
xor
adc
push
lods
jg
sarb
mov
dec
ds
cmp
pop
mov
xchg
fs
dec
lea
lods
aaa
adc
mov
loop
mov
pusha
fstpl
lea
and
jns
pop
mov
push
fiadds
fcmovnb
or
or
mov
insb
jno
cli
pop
pushf
dec
lea
loopne
sub
inc
das
push
pop
or
pushf
jo
hlt
xor
xchg
scas
cltd
hlt
and
pop
mov
mov
mov
jmp
cmpsl
les
fists
jle
stc
xchg
jp
sbb
lock
gs
inc
icebp
ljmp
add
ds
jecxz
aaa
call
call
cmpsb
test
xor
imul
sbb
pop
adc
sbbb
int3
dec
pop
sbb
ret
and
adc
cmpsb
mov
scas
sub
xchg
xor
and
faddp
mov
pop
stos
notl
pop
dec
xor
iret
adc
in
in
mov
push
test
mov
jg
jmp
or
ret
movsl
je
add
les
mov
fidivs
xchg
out
fisubl
sbb
mov
cmpsb
jnp
sarl
pop
loopne
jno
or
mov
jl
and
hlt
push
push
inc
gs
cli
mov
loop
mul
jne
push
cmp
aam
cwtl
icebp
pop
out
test
inc
mov
pop
lret
repz
inc
push
aas
in
ret
loope
lods
and
push
xchg
pop
adc
mull
sub
lcall
lods
enter
out
loopne
outsl
push
cmp
pop
pop
dec
push
sbb
icebp
sti
pop
fbstp
fisttpll
negb
xchg
loop
push
roll
or
mov
call
orb
nop
push
lret
jp
fxch
out
mov
xchg
mov
shr
mov
jno
idivl
jl
or
lcall
stos
pop
cltd
lds
pusha
mov
aad
or
lahf
xor
inc
xchg
and
imul
inc
fisttpll
pushf
loopne
sub
mov
call
cmp
imul
inc
mov
hlt
and
test
outsb
cmp
mov
lret
push
jecxz
stos
loopne
ret
iret
scas
jmp
mov
ss
movsl
pop
cmpsl
xlat
jno
mov
movsb
aaa
pop
aaa
pop
pop
rolb
addr16
jo
popf
xlat
daa
fisubrs
lods
and
scas
xor
insl
imulb
ds
and
cmc
lods
ret
xchg
sub
cltd
sti
inc
push
into
stc
lea
fs
int3
push
and
mov
dec
cmp
push
std
or
add
push
jo
iret
out
rcll
or
shll
jns
repnz
sub
cli
sti
icebp
imul
jmp
mov
dec
fldcw
pop
jo
fisttpl
mov
cmp
pop
out
xchg
xchg
scas
je
and
mov
jle
mov
mov
mov
notl
fsts
jne
adc
cmc
notb
std
xchg
popf
cmp
mov
xor
mov
cltd
jae
fldl
mov
sub
or
inc
jmp
and
adc
sbb
or
sbb
pusha
or
insb
sub
push
test
xchg
jle
hlt
test
sbb
pop
xchg
shl
add
sub
mov
pop
pop
lods
sub
aad
mov
aad
es
cmp
jbe
mov
pop
pop
sbb
pop
cmp
mov
inc
push
fisubl
inc
scas
clc
rorb
popa
dec
imul
inc
push
adc
es
jle
add
jno
not
or
mov
aaa
mov
cmp
sahf
dec
clc
push
ljmp
sbbl
mov
mov
notl
outsb
jp
adc
pop
fidivs
pop
mov
lret
add
dec
dec
cmpb
and
call
ss
andb
jge
sbb
adc
mov
dec
jbe
icebp
dec
mov
or
add
sahf
nop
lcall
fistps
jle
or
aaa
cmp
aaa
cmpb
rcrl
test
pop
je
push
dec
mov
cli
ret
outsl
jbe
pop
and
sahf
mov
pop
pop
ss
pop
nop
mov
push
dec
daa
loope
cmp
js,pt
repnz
add
and
inc
push
inc
xorl
inc
xchg
sbb
cmp
or
repnz
and
add
and
sti
xchg
loope
xchg
fnstsw
addr16
dec
jp
fists
xchg
dec
cmp
pop
cmp
lcall
andb
jecxz
les
mov
insl
lahf
pop
aam
cld
mov
lret
fsubs
leave
cmpsl
movsl
dec
gs
jl
mov
and
jg
jbe
xchg
xor
scas
nop
xchg
popf
dec
int
and
or
inc
xor
insb
fnstsw
lods
mov
mov
into
xchg
mov
and
mov
dec
dec
push
pop
pop
adc
inc
xor
stc
add
lock
adcl
repz
enter
mov
fcoms
mov
pusha
cmp
rclb
cmp
xchg
and
mov
cmpsl
push
outsl
cmp
sbb
cmpsb
jp
in
imul
cmp
ja
dec
adc
cltd
xchg
or
movb
or
dec
adc
pop
adc
add
dec
sbb
imul
mov
inc
jae
mov
inc
jecxz
sar
cs
xor
clc
or
movsb
mov
dec
shll
popf
ljmp
xchg
fwait
inc
pushf
outsl
jecxz
xchg
adc
roll
cmc
xor
add
mov
pop
xchg
cmp
xchg
push
cmp
sbb
cmp
adc
outsl
jle
out
ftst
xor
cmp
mov
out
shrb
out
xchg
ljmp
cmpsb
popa
and
aaa
or
inc
inc
dec
sbb
jmp
ret
aaa
add
xor
push
dec
cmp
out
jle
outsl
cmp
dec
sbb
cmp
ja
imulb
mov
and
les
xchg
es
mov
fistl
sub
ja
sbb
push
or
cs
cmp
out
dec
aam
out
pop
or
pop
iret
adc
mov
inc
cltd
jp
push
mov
enter
push
add
jmp
cld
cmpsl
lea
inc
imul
xor
jno
add
jge
dec
xrelease
and
mov
nop
xchg
arpl
push
push
test
packsswb
mov
xchg
mov
cmp
in
push
adc
lods
add
arpl
inc
je
mov
add
dec
push
sbbl
xchg
mov
out
mov
xchg
push
fwait
jbe
jecxz
inc
orb
test
jno
mov
loopne
or
rcrb
and
addr16
fnstsw
stos
xor
into
loopne
loopne
mov
or
loope
dec
addb
pop
mov
repnz
scas
divl
sbb
in
bound
xchg
and
cmpsl
mov
outsb
mov
rclb
adc
ljmp
mov
cmp
push
mov
mov
ret
jge
mov
xchg
add
shrb
add
iret
push
push
jo
scas
push
lods
mov
adc
cltd
arpl
mov
and
pop
and
cli
inc
or
mov
scas
cltd
mov
mov
jb
lret
xor
xor
push
stos
and
int3
add
sbb
jecxz
pop
mov
push
nop
adc
aad
and
fimuls
sub
jp
dec
jg
pushf
xor
add
lock
lods
jno
test
mov
insl
xor
cmp
push
clc
neg
pop
sbb
xchg
adc
aaa
xor
inc
aad
pushf
adc
out
out
stos
mov
fwait
mov
movsl
shl
add
fisttps
addr16
and
mov
push
inc
jge
push
insb
xchg
lods
test
call
popa
inc
movl
out
pop
mov
lahf
sbb
dec
imul
mov
cmp
sub
pop
mov
in
movsl
iret
push
mov
aaa
pop
movsl
std
sbb
cmpl
iret
xchg
ds
movsb
and
jnp
mov
push
or
aam
jno
stos
xor
push
dec
int3
mov
jmp
inc
jp
sub
stos
fnstenv
ja
sub
cmpsl
mov
ds
and
add
xor
mov
mov
xor
lret
outsb
outsl
sahf
lret
sahf
aas
add
pop
mov
cmpsl
shrb
cmpsb
sub
cmpsl
call
push
or
stos
mov
js
imul
sub
ja
inc
cmp
das
hlt
std
inc
iret
aam
popa
add
sbb
rcl
movsb
push
out
xchg
sbb
pop
mov
push
jge
mov
xchg
aas
sub
mov
push
pop
add
inc
sti
js
xchg
int3
shrb
loopne
cmpsb
mov
mov
shll
hlt
lds
jp
inc
aas
aaa
adc
cltd
mov
dec
movsl
cwtl
inc
sub
les
nop
inc
shll
ficoml
mov
inc
rolb
mov
or
mov
push
push
adc
push
loopne
inc
adc
clc
xor
mov
dec
outsb
xor
xor
stos
loope
xor
stos
dec
icebp
sub
fdivs
or
call
rep
inc
mov
cmpsl
cld
movsl
sahf
pop
cmp
lods
icebp
dec
pop
dec
cmp
std
sbb
outsl
lret
mov
mov
mov
mov
andl
adc
jg
jb
xor
and
mov
dec
xchg
cs
mov
jge
lret
push
jo
rclb
sti
adc
lods
or
jae
sbb
push
int3
shll
nopl
loopne
push
cld
dec
rcrb
sub
hlt
add
call
cmp
stos
lock
fld
sub
sub
out
movsb
xchg
and
cmp
in
fwait
or
jmp
push
inc
andb
jae
fstps
jbe
mov
adc
in
add
add
jmp
mov
pop
cmpsl
adc
in
pop
rcll
shll
jp
and
dec
xor
add
ret
pop
inc
cmp
cmp
mov
cli
dec
les
fwait
or
jne
xor
inc
imul
xchg
cmp
sahf
jae
jbe
mov
adc
mov
jo
ret
out
aam
cld
push
outsb
bts
pop
sti
fsts
sbb
cmp
inc
cmpsb
mov
mov
rorl
sub
xlat
test
loope
pop
jmp
push
dec
ss
mov
jbe
inc
shll
imul
lods
jp
test
cmp
ljmp
popa
leave
mov
dec
sub
movsb
mov
outsl
and
aas
lds
dec
mov
out
inc
int
xlat
mov
in
in
push
jle
lahf
jb
and
xchg
fidivs
stos
jmp
and
fsubl
in
call
sbb
stos
decb
jmp
pop
lcall
jge
push
xchg
lret
add
dec
or
lahf
and
add
cli
hlt
in
mov
je
gs
adc
xchg
xor
add
sub
push
call
inc
out
xor
int
cmp
mov
cli
into
repnz
or
outsl
xor
adc
nop
popa
adc
out
fdivs
popl
dec
xchg
sub
ds
je
pop
xor
jmp
mov
mov
shll
in
pop
outsl
push
mov
fs
xchg
fcompl
clc
push
jne
dec
push
fcomps
mov
rcll
and
push
adc
lcall
fcomps
mov
cmpl
adc
test
jno
in
js
mov
cld
out
mov
movsl
insl
add
sub
push
pop
ss
pop
int
xchg
aas
pop
sbb
repnz
add
ret
fmull
jnp
jge
inc
mov
inc
test
rcrb
sti
je
fsubs
sahf
cld
xor
push
test
xchg
inc
adc
xor
dec
adcb
pop
xchg
jmp
cmp
sbb
sub
daa
fnstcw
je
out
lcall
push
rcll
fildll
xor
and
cli
push
sbb
cmp
mov
stos
movsl
shl
jmp
fyl2xp1
je
push
test
pop
sbb
enter
push
out
xor
cwtl
cli
insl
int
jo
ja
jl
adc
push
or
sbb
js
lret
idivb
push
lcall
mov
addb
cmpsb
sub
xor
sbb
lcall
xor
popf
jg
jmp
adc
mov
aas
mov
in
cltd
mov
jb
lock
int
popf
inc
lcall
xor
jmp
aaa
lret
fisttps
xor
push
xchg
and
push
hlt
mov
mov
std
decl
or
sbb
lret
scas
jle
push
and
jmp
sbb
jmp
jne
mov
inc
xor
sbb
daa
add
pop
cmc
cmovno
dec
out
inc
push
sahf
pop
mov
push
imul
mov
std
gs
leave
mov
pop
orl
push
mov
mov
xchg
test
xchg
cmp
or
fcoms
out
or
dec
add
pop
daa
lahf
xor
addr16
movb
loope
call
shrl
jmp
jmp
arpl
lret
iret
or
mov
in
adc
lret
scas
and
cltd
shrb
cld
aaa
popf
pop
inc
inc
pop
mov
jb
dec
or
test
or
outsl
mov
lods
addr16
fstps
sub
sub
and
cmpsl
ret
flds
dec
pop
gs
aas
shlb
jge
mov
scas
bound
or
test
jp
xor
shll
add
or
or
fnstenv
add
mov
mov
dec
aam
inc
addr16
dec
jl
pop
mov
jmp
xor
jle
add
mov
mov
cwtl
pop
push
js
xchg
icebp
das
divl
and
loop
es
pop
jo
adc
repz
iret
cmp
ss
jnp
notb
dec
lods
push
mov
push
pusha
js
das
iret
icebp
mov
dec
mov
ret
out
out
xchg
sub
mov
jp,pn
mov
jp
jbe
cli
gs
inc
xchg
fnsave
cmpl
push
mov
dec
sub
clc
fcom
sub
ljmp
and
pushf
out
cmc
int3
jl
out
call
out
scas
ret
mov
out
aam
mov
pusha
out
jno
sahf
add
xchg
test
loopne
xor
lret
in
push
icebp
push
and
sbb
lods
addr16
xor
mov
xlat
pop
and
das
push
pusha
pusha
decl
and
xchg
adc
fldl
xor
orb
in
icebp
pop
das
adc
mov
repnz
lods
pop
dec
test
jmp
ret
int3
mov
stos
shlb
sarl
lret
or
cwtl
dec
icebp
sahf
push
aad
cmc
js
ja
jbe
and
pop
mov
fidivl
int3
popw
cmpsb
std
sub
test
call
jle
jns
sub
xchg
cmp
sti
add
inc
popf
mov
lods
jp
int
pop
ret
popa
enter
imul
cmpsb
lds
je
cmp
in
cmpl
loope
mov
jno
xor
mov
sti
inc
ret
or
cmpsl
sbb
jecxz
and
nop
jno
push
fnstenv
mov
cmpsb
mov
mov
push
add
lock
and
stos
xlat
mov
int3
aad
popa
pushf
mov
test
int3
and
sahf
les
mov
xlat
inc
and
jg
negl
dec
int3
fsub
arpl
es
filds
adc
das
fistpl
aas
dec
mov
push
iretw
adc
mov
into
jecxz
movups
fdivr
dec
rolb
hlt
pop
sub
push
clc
xor
cmpsl
jnp
out
loope
orb
leave
std
cmp
jo
flds
fwait
mov
or
add
adc
xor
jae
adc
xor
sub
pop
in
jbe
adcb
jg
push
push
adc
mov
iret
mov
mov
inc
xor
sub
loope
mov
inc
xchg
call
adc
lea
js
out
fsts
pop
mov
ljmp
dec
xchg
xlat
fnsave
add
arpl
jmp
outsl
scas
out
fisubs
cmpsb
lahf
mov
pop
mov
enter
pushf
lcallw
and
mov
test
bndstx
out
inc
incl
xchg
cmpsb
add
repz
mov
orl
xor
or
aaa
int
das
sbb
xchg
jo
pusha
cltd
lret
cmc
cs
lods
sub
mov
out
scas
sub
inc
jns
mov
sti
add
push
stc
das
ds
adc
jp
insl
mov
add
inc
jle
in
xchg
je
arpl
fistpl
mov
in
dec
shlb
cmp
aad
adc
mov
xchg
es
fadd
shlb
in
rcr
lods
test
popa
push
loopne
jno
call
mov
dec
insl
inc
fwait
mov
scas
arpl
add
sbb
aad
sub
shlb
aam
and
mov
fwait
cltd
jno
and
push
daa
xor
fadds
push
mov
sbb
in
sbb
int
xchg
cmpsl
loopne
adc
push
pusha
fsub
pop
mov
scas
shll
adc
xor
jnp
or
sbb
adc
cwtl
xor
mov
imul
roll
imul
test
and
sti
mov
mov
push
popf
rcrb
mov
bound
inc
sub
jmp
pop
ret
dec
out
and
jb
aam
int3
cmp
and
out
loopne
and
rep
inc
imul
jno
bound
adc
nop
shl
mov
cmpsb
pop
fs
repnz
add
cwtl
xor
sahf
sbb
dec
sub
outsb
or
xor
jmp
cwtl
into
pop
or
outsl
nop
sbb
cld
push
add
shrb
mov
inc
loopne
popf
cmpb
pushf
inc
test
cmp
and
loopne
sbb
sub
mov
mov
sbb
rolb
shll
mull
cmp
sub
lahf
mov
lods
in
aas
push
iret
cmp
ret
out
dec
shl
call
mov
clc
outsl
iret
inc
adc
and
dec
dec
imull
adc
inc
pop
pusha
mov
mov
andl
cmp
xchg
xchg
mov
shrl
lcall
and
pop
addb
cmpl
in
jp
xor
mov
out
sub
jmp
jmp
rcr
aad
divb
sbb
and
gs
in
mov
bsr
imul
pop
push
add
mov
mov
loopne
lea
fsubr
sub
xor
mov
xchg
dec
inc
mov
lock
jb
ljmp
stos
or
cld
pop
lock
dec
hlt
in
je
icebp
lods
pop
sbb
aad
into
ficompl
xchg
dec
cmp
cmp
fildl
ror
pop
repz
repnz
repz
cmp
scas
push
jo
mov
lcall
imul
add
pushf
jno
lds
sbb
incl
popf
in
fidivrl
pushf
or
push
sbb
sbb
xor
mov
and
add
jns
rorb
js
xchg
xchg
dec
jae
inc
xchg
mov
nop
scas
out
xor
test
xchg
loope
xor
movsl
lret
xor
pop
adc
bound
pop
stos
xor
and
pop
cli
mov
loop
jnp
cmc
jb
and
cltd
ds
inc
sbb
mov
adc
loop
retw
push
add
adc
shl
shlb
out
dec
inc
lds
call
and
add
xor
shrl
push
or
outsb
push
xorl
inc
xchg
or
mov
test
out
sub
in
lds
pop
sahf
cmpsb
mov
adc
jne
push
outsb
iret
xor
push
arpl
sub
jl
scas
stc
dec
les
push
push
mov
jp
cltd
ret
jne
push
mov
test
xchg
push
sbb
imul
insl
mov
inc
mov
cmp
fsts
testb
fnstsw
pop
dec
ficoml
popa
adc
lods
xchg
scas
dec
sub
or
jmp
jle
and
xor
lret
int
jmp
aam
pop
fnstsw
std
pop
add
out
mov
popf
inc
xchg
enter
jae
or
sub
pop
lds
aam
stc
fs
add
and
pop
mov
aaa
jnp
mov
jb
jbe
nop
mov
xor
out
sbb
pusha
iret
jl
jno
adc
cmp
and
sub
mov
mov
bound
ja
lcall
dec
mov
xor
nop
sub
ljmp
xor
jecxz
sbb
xchg
call
xchg
roll
pop
scas
xor
pop
push
lock
fldl
jbe
ljmp
das
sub
inc
mov
rcrb
adc
jg
mov
inc
aam
insl
fs
das
jae
inc
dec
fstpt
sbb
int
pop
jge
pop
push
pop
push
or
lret
jecxz
sub
mov
insl
xchg
popl
addr16
dec
xchg
lods
pushl
push
jno
xor
xor
movb
repnz
mov
aaa
std
xor
or
in
rcll
mov
cmpb
or
adc
jmp
test
push
xchg
sbb
sub
sbb
fwait
inc
mov
adc
mov
adc
cld
ret
adc
sub
inc
mov
hlt
jp
shlb
push
xchg
jmp
sbb
sbb
or
or
dec
jne
add
inc
fcoml
in
ret
andl
aas
and
inc
and
add
xor
stos
stos
pop
mov
xchg
push
fs
and
insl
ret
adc
mov
push
out
mov
shrl
lods
xor
std
jl
and
aam
jno
leave
out
sub
pop
sub
xor
lods
andb
cmpsb
dec
xor
add
into
test
sbb
arpl
sub
mov
xor
pop
nopl
jp
dec
dec
ds
mov
mov
sub
xchg
andl
sbb
test
jno
cmp
mov
pop
test
cltd
jne
adc
data16
sub
adc
imul
xchg
mov
lds
testl
jo
pushf
sbb
xchg
jne
lock
inc
pushl
imull
ds
inc
nop
add
neg
decb
push
push
imull
cmp
push
pop
popa
jo
or
imul
pop
rorb
pop
popf
cmpsl
sbb
inc
or
iret
dec
mov
xchg
mov
push
sub
sbb
jmp
xchg
into
sub
lods
sahf
sbb
jns
loop
clc
lods
xor
dec
mov
movsl
cli
inc
bound
shll
mov
adc
and
int3
sbb
loopne
jl
inc
bound
lods
and
bound
push
inc
stc
dec
stos
jmp
stos
or
push
js
inc
rcrl
mov
jae
inc
es
xchg
rolb
pop
xchg
inc
pop
test
cld
bound
and
dec
sub
inc
jne
and
test
daa
dec
nop
popa
fsubl
nop
out
sbb
push
icebp
fs
ret
mov
dec
rcrb
pop
mov
cs
mov
mov
pop
ljmp
fildl
fstps
jecxz
ret
jbe
setae
mov
pop
mov
int
and
mov
ror
ja
test
imul
int3
sbb
fs
cmp
es
xchg
ja
and
and
loope
fcomi
sub
cwtl
jp
jbe
das
xchg
popa
sub
cmp
div
out
enter
mov
lahf
mov
sub
jmp
jb
pop
push
into
inc
stos
sarl
jecxz
jecxz
xchg
fdiv
xor
and
mov
jo
push
cmp
lods
stos
mov
pop
xlat
mov
sahf
dec
xor
mov
stos
sub
rcr
push
js
cmp
in
fisubrs
das
lods
jge
out
cmp
adc
cld
sbb
or
bound
shrb
adc
lret
cmp
scas
jge
rcll
pop
fwait
fwait
sub
shl
cmp
fiadds
test
mov
jl
push
or
xchg
pop
cmp
sub
dec
out
ljmp
lea
xchg
imul
mov
push
cmp
mov
das
pop
or
addl
mov
sbb
inc
call
or
mov
push
pusha
test
pop
xor
inc
xor
xor
add
xor
fcomp
stc
divl
dec
sti
mov
jle
jmp
sub
cwtl
mov
push
dec
inc
shrl
xor
xor
adc
aas
ret
push
and
out
pop
ja
or
outsl
dec
enter
test
adc
add
rdpmc
cmp
pop
ror
cmp
sti
divl
out
xchg
and
stc
test
lcall
jns
and
ljmp
dec
call
xchg
fdivr
sub
into
push
jb
js
pop
pusha
sub
mov
clc
xor
js
xchg
loopne
hlt
mov
push
pop
and
out
sub
cwtl
mov
mov
pop
int3
pop
or
cmc
push
loope
popa
shl
lock
stos
das
xchg
or
push
xchg
cmp
add
jge
aad
xor
mov
sbb
fwait
repz
and
jge
sti
repz
mov
inc
mov
popa
inc
iret
idivb
outsb
es
xchg
push
xchg
push
repz
xchg
loope
andl
push
jnp
fdivrl
movsb
pusha
ror
jne
push
cmp
xchg
jmp
arpl
pop
add
mov
leave
push
cmp
inc
mov
sbbb
dec
xorl
loope
call
nop
inc
jmp
aad
inc
pop
mov
imul
int3
pop
jae
cld
std
outsl
cmpl
arpl
inc
jle
faddl
pop
dec
sbb
adc
icebp
call
ret
xchg
add
mov
loope
jecxz
adc
push
in
shrb
stos
mov
push
cmp
repnz
push
jmp
mov
jae
cmp
pusha
stc
inc
out
mov
subb
movsb
mov
subb
test
repz
aas
xor
lcall
or
dec
xchg
cmovbe
inc
adc
xor
fstps
mov
jmp
sahf
cmc
cmp
mov
cmc
inc
dec
mov
nop
jmp
sti
iret
xor
mov
das
cmpsb
mov
adc
xor
xchg
mov
shll
fdivr
jge
and
mov
in
sarl
in
jno
sbb
ja
fwait
pop
mov
fidivs
push
aam
mov
lods
inc
push
mov
into
pop
mov
popa
pusha
or
dec
scas
in
mov
ljmp
cmp
mov
mov
push
scas
cmpsl
insl
ret
daa
shr
and
sbb
mov
push
add
and
aaa
mov
cmpsl
out
outsl
sub
mov
ret
jle
mov
or
sbb
sti
daa
emms
leave
loop
stos
bound
ds
gs
adcb
push
scas
push
xchg
lahf
or
es
jo
sub
out
push
push
add
dec
inc
es
mov
xor
dec
enter
loopne
mov
iret
fcmovb
shrb
mov
sar
shlb
xor
push
dec
sbb
mov
loope
jge
mov
stos
movsl
push
aam
stos
adc
push
ret
add
ret
aad
negl
in
xlat
mov
add
out
insl
movsb
adc
mov
dec
jo
pop
ss
xchg
push
addr16
pop
testl
mov
mov
mov
les
sbb
lock
xchg
jns
imul
sbb
jp
lock
adc
ror
nop
repz
repz
subl
stos
roll
inc
fsubs
xchg
cmp
aad
mov
cmc
push
icebp
or
or
das
cs
mov
daa
pop
sahf
out
orl
mov
in
decl
sbb
mov
test
mov
mov
add
mov
pop
push
push
bound
out
shrl
cmpsl
cli
loope
mov
andl
sub
loop
enter
fistps
xor
and
xchg
pop
out
pop
shrl
sub
jb
stos
push
imul
dec
adc
enter
shll
jbe
repz
mov
fnstsw
and
repnz
push
adc
dec
push
mov
sub
mov
js
cld
dec
sahf
insb
sarb
jg
sbb
lea
xchg
out
inc
call
outsb
addl
xchg
lock
popa
mov
je
adc
mov
or
jnp
mov
fs
orb
adc
pushf
pop
sbb
mov
out
aam
std
sbb
fisttpl
fmulp
call
popf
mov
mov
subb
cmpsb
dec
aam
mov
ret
inc
repnz
es
in
rcll
es
rcrl
roll
pop
into
aaa
sub
pop
in
fs
sbb
pop
mov
inc
pop
int
cmp
mov
adc
sar
hlt
enter
add
or
outsl
fdiv
add
push
jg
int
cmp
and
test
sbbl
add
aam
sub
cmc
dec
pushf
gs
dec
int
call
xchg
lret
int
addr16
dec
lret
cltd
test
lock
lret
jl
jae
lds
xchg
enter
pop
xchg
fdivp
inc
dec
cs
pop
and
pusha
pop
iret
xor
inc
xor
loop
dec
add
jl
jnp
or
push
xchg
cmpl
inc
pushf
stos
push
push
or
jo
push
pop
ljmp
fbstp
mov
cltd
pop
sbb
out
push
sti
shll
push
mov
sbb
ljmp
sar
insb
jb
nop
stc
enter
cld
inc
into
sub
nop
int3
lahf
sti
mov
arpl
nop
div
and
sahf
cmp
lret
je
sub
xor
es
lcallw
pop
xor
sub
ljmp
dec
mov
mov
cmp
adc
call
dec
cmp
popf
fldenv
pop
arpl
std
jno
inc
pop
sarl
dec
mov
jns
mov
mov
in
cmp
ficoml
mov
sarb
jg
push
adc
cmpsb
ss
sbb
fcompl
xchg
sbb
sbb
cmp
sub
sbb
icebp
jmp
shrb
ficompl
xchg
jnp
pusha
repnz
faddl
dec
mov
and
aaa
mov
int
adc
pusha
in
aad
xor
jns
fimuls
ds
xchg
mov
mov
jg
push
fs
mov
das
addr16
mov
push
test
mov
or
mov
ret
xor
xor
lret
jae
push
sbb
mul
mov
icebp
aaa
negl
xchg
mov
imul
fcomps
xor
sub
ret
lea
mov
sbb
mov
into
cld
jbe
mov
dec
adc
ret
loop
add
mov
adc
push
icebp
mov
imul
xor
insb
movsl
imul
cltd
stos
iret
lcall
xchg
sub
test
int
ss
sub
or
jae
aad
test
mov
mov
add
jne
sbb
xor
cmp
sub
cmp
xor
xor
cli
imul
in
loop
mov
andb
iret
mov
sbb
fwait
jp
sbb
test
fadd
jp
inc
imul
in
xchg
xor
mov
xor
cmc
insl
fsubs
sbb
loopne
dec
rorb
push
mov
mov
fdivrp
pop
pop
scas
jmp
or
ja
dec
ja
mov
sbb
and
loopne
mov
hlt
mov
sbb
movsb
iret
js
aam
pushw
int3
ja
fisubs
stc
jns
stos
fidivl
or
sti
sti
and
stos
ljmp
lock
movsb
stos
inc
cwtl
cli
sub
xlat
xchg
loopne
addr16
cmp
sbb
push
push
push
mov
bound
mov
xchg
stos
mov
push
arpl
stos
out
cmp
add
enter
js
je
jae
xchg
mov
fs
cmp
pop
mov
xchg
insl
mov
stc
push
sbb
repnz
dec
int3
adc
scas
mov
jecxz
cmp
xor
ss
adc
pop
push
out
shl
mov
inc
ds
iret
push
ret
cmp
pushf
pop
mov
jae
mov
movsl
push
dec
push
ret
push
mov
imul
ret
xor
cmp
add
and
mov
fildll
in
cmp
out
cmp
shlb
imul
sub
add
test
in
sbb
addb
pop
sbb
jae
sar
jecxz
mov
sbb
push
or
sbb
loopne
enter
jae
dec
adcl
push
in
adc
inc
dec
jno
ret
dec
nop
inc
mov
icebp
or
adc
repz
add
mov
nop
stos
add
lret
aas
sbb
jno
adc
inc
lret
enter
scas
andb
and
lods
dec
daa
ror
mov
daa
inc
and
popa
fstps
daa
shlb
lret
rcr
inc
int
xor
out
iret
xchg
daa
pcmpgtb
sub
pusha
rol
fwait
js
incb
mov
addr16
push
dec
fsubs
mov
in
adc
ret
pop
pop
and
mov
sbb
xor
cs
repz
jbe
mov
jnp
pop
mov
insb
fiadds
test
pop
sahf
lret
in
out
bound
xchg
scas
lods
divl
mov
add
xchg
or
fcoms
sbb
push
pop
outsb
cs
rorl
nop
jnp
fisubrl
shrl
sbb
cmp
jge
cmp
cmpsl
insl
xor
sti
or
data16
fs
popa
sub
mov
int
enter
xlat
mov
fstpt
movsb
lods
lods
push
daa
jp
int3
cltd
sub
xor
pushf
test
in
adc
adc
stc
sbb
fldenv
in
daa
in
fwait
mov
sub
cmp
mov
mov
push
push
test
fadd
sarl
mov
jp
mov
jno
sbb
dec
jb
or
aad
xor
repnz
fcomi
scas
pop
dec
lds
jl
es
fnstsw
fxch
sub
rclb
inc
jp
das
sbb
sbb
mov
and
inc
lea
fs
push
bound
cmp
call
cs
jle
mov
cli
out
loopne
cmp
fldt
cmp
fstl
stc
xchg
pop
dec
add
out
loope
add
push
sbb
adc
cli
pop
ds
les
mov
cmp
test
jns
lcall
mov
lods
cmp
in
inc
vpmuldq
in
leave
incb
test
jo
add
sub
out
push
xchg
pop
mov
cmp
orl
out
dec
cmp
les
mov
or
pop
loopne
pop
or
inc
sbb
jbe
pop
mov
dec
xor
mov
inc
scas
dec
cs
fs
cmpsl
imul
fs
jp
nop
sub
lods
mov
xchg
iret
popa
pusha
leave
push
gs
mov
add
je
loope
xor
or
and
and
cmpsb
lods
inc
pop
push
adc
leave
mov
jmp
dec
sahf
in
cwtl
popf
nop
jle
loope
mov
sub
in
pop
inc
and
lea
sarl
rcl
sbb
popa
mov
enter
aas
aas
xor
mov
lret
mov
fistl
aas
lock
fcoms
pop
xchg
hlt
jnp
mov
add
pop
or
dec
inc
xor
or
mov
aad
test
sbb
fmul
push
xchg
mov
cli
xchg
push
daa
inc
cltd
lcall
sub
pop
sbb
or
mov
leave
leave
repz
xchg
adc
shrl
sub
std
lret
cld
or
push
pop
aad
xor
add
icebp
cld
insl
xchg
into
je
lods
sbb
adcl
pusha
test
test
push
ret
sub
fcmovb
xchg
decl
dec
aad
or
out
mov
jo
mov
insl
cmc
repnz
and
inc
mov
mov
push
sub
js
lds
test
inc
and
int
lcall
movl
adc
cmp
or
xor
stos
pop
movsb
pop
push
xchg
jno
in
jno
xchg
and
mov
pop
icebp
divb
xchg
dec
mov
mov
nop
push
lock
inc
sub
lock
pop
cs
cld
or
pop
enter
cmp
jecxz
or
ret
pop
mov
mov
out
lock
adc
lahf
in
mov
pop
xor
cmc
mov
loopne
xor
mov
push
sbb
jbe
jg
pop
and
xchg
xchg
leave
sub
fmuls
leave
cmp
and
xchg
repnz
test
inc
out
ret
sub
push
fstps
dec
dec
mov
out
fmull
sub
popf
imul
les
sub
xchg
mov
fwait
mov
jp
int
cmp
add
push
inc
movsb
sti
add
mov
cmp
loope
outsb
xor
fcmovne
shll
fsubl
jp
addl
jle
xor
movsl
in
xor
dec
inc
loopne
out
mov
adc
dec
sbb
cmp
pop
mov
sbb
xor
sub
adc
andb
es
pushf
cmc
iret
outsb
std
cmp
xchg
pushf
lret
fdivrl
insb
jle,pn
jno
movsl
cmp
imul
jl
inc
repz
arpl
cmp
xchg
out
arpl
jo
lret
call
pusha
fdivr
mov
insb
inc
shll
or
cmpsl
arpl
and
fdivs
dec
dec
mov
lods
and
inc
jb
pop
mov
adc
cmpsb
das
add
call
mov
fisubrl
mov
mov
popa
inc
xchg
in
inc
pop
or
cltd
adc
call
ds
outsl
mov
clc
and
out
sbb
sub
xchg
aaa
adc
rolb
pop
push
daa
cmp
lock
imulb
nop
push
mov
les
ja
sub
mov
mov
push
std
out
fdivrs
imul
push
push
xchg
xorb
movsb
inc
iret
pop
xchg
into
push
mov
cmpsl
sub
mov
inc
mov
push
in
lds
std
xchg
ss
ret
rorl
es
mov
sbb
aam
sub
mov
mov
in
rcr
mov
add
sbb
adc
loop
fisubrs
adc
fs
jno
and
or
cmc
ljmp
mov
repnz
outsb
cs
xor
or
mov
adc
add
xor
loope
out
dec
cmp
or
or
jae
dec
and
es
push
xchg
mov
insb
pop
add
adc
jecxz
pop
push
jmp
sahf
add
and
in
push
notl
popa
mov
pusha
jge
ret
cmp
icebp
sbb
out
pop
or
push
insl
mov
cltd
lret
mov
inc
lods
dec
mov
jae
sbb
sub
imulb
leave
mov
into
pusha
fadd
inc
dec
int
lret
daa
frstor
sahf
xchg
test
add
outsb
sbb
cld
int3
or
pop
adc
add
cmpsl
dec
loope
jecxz
xor
or
adc
push
sahf
imull
and
ficompl
cmpsl
adcb
jo
mov
scas
imul
add
dec
out
fmuls
add
insl
push
clc
xchg
movsl
push
fiaddl
test
dec
sarl
dec
aas
xchg
inc
mov
fiadds
daa
in
push
mov
aad
mov
inc
and
cmp
push
into
add
ljmp
lret
ret
invd
outsb
fimuls
aaa
rcr
in
cmp
rcll
or
xor
pop
xor
or
ror
sar
xchg
test
les
addl
push
pop
fcoml
rcrl
jecxz
push
inc
sub
mov
cmp
outsl
cli
mov
ja
and
into
add
int
jle
mov
nop
fbld
repz
int3
aad
dec
scas
mov
or
aaa
inc
push
ret
inc
push
lahf
incl
cmpsb
mov
dec
cltd
dec
je
mov
clc
cwtl
push
enter
and
das
cmp
adc
dec
push
cld
add
mov
mov
out
sub
bound
pop
loopne
push
adc
push
inc
jnp
in
push
aaa
jbe
mov
je
xchg
pop
jl
jle
imul
and
cmp
pushf
sbb
push
pop
shrl
push
jns
sub
and
call
fwait
adc
mov
outsl
fimull
shl
add
clc
std
fcoms
adc
dec
push
ss
sub
or
xor
push
mov
sub
sub
jnp
sub
loopne
or
in
popa
jnp
movsb
push
pop
mov
or
xchg
loope
rorl
mov
adc
push
jmp
cmp
aam
xor
inc
jae
pop
in
lods
sbb
pop
mov
lahf
jbe
sub
testb
cmc
or
out
loop
pop
xchg
stc
xor
repz
movsl
in
mov
insb
push
add
push
es
into
imul
out
xchg
jmp
test
rcrl
mov
jecxz
out
lods
sbb
in
lret
fmul
xor
sti
push
stc
sub
ja
add
aaa
push
out
daa
cwtl
pusha
jb
mov
ret
rcrb
idivl
pop
add
adc
movsl
pop
jg
addr16
repnz
push
lea
imul
adc
jae
pop
in
mov
xor
out
or
mov
mov
outsb
adc
dec
jge
aam
and
push
mov
rep
dec
mov
clc
sbb
pop
mov
js
jno
shrl
pusha
insb
add
push
push
punpcklwd
mov
rcrb
mov
xor
dec
cmp
or
lret
int3
enter
decl
repnz
add
adcb
mov
imul
cmp
int
outsb
outsl
ret
xor
mov
repnz
jnp
push
inc
adcl
inc
cmp
pusha
mov
out
lods
leave
mov
push
popa
pop
push
fdiv
xchg
or
mov
cmp
push
xchg
out
cvttps2pi
mov
push
mov
fs
popa
aas
movsl
outsl
xchg
in
mov
push
mov
mov
or
stos
push
rorb
or
pusha
mov
cmp
shlb
pop
divl
mov
xchg
aas
aam
add
mov
push
in
mov
outsb
or
xlat
mov
jl
fcomi
mov
mov
pop
mov
movsb
rcl
loope
xchg
ss
sbb
lret
xor
inc
ds
out
mov
mov
and
orl
add
std
sub
sbb
lret
dec
mov
lret
or
xor
cli
or
dec
pop
push
sub
pop
insl
loope
adc
dec
lret
jbe
jb
pop
rcl
testl
in
rcl
push
push
sbb
outsb
jle
mov
mov
mov
adc
or
mov
and
jge
dec
stc
pop
mov
and
mov
cmp
xchg
fwait
adc
mov
sarb
sub
jb
fistpll
scas
jl
mov
xchg
lahf
jo
pop
xchg
jle
mov
cmp
mov
testb
jns
data16
or
push
mov
sub
dec
aad
mov
repnz
ss
or
scas
lahf
inc
sub
sbb
mov
xor
fwait
pop
xchg
inc
popf
and
push
or
or
mov
pop
xor
stos
les
sbb
inc
lea
cmp
lret
sub
push
add
mov
push
xchg
movsb
jg
pop
xor
jne
mov
ret
push
mov
xorl
adc
mov
pushf
int
xchg
jl
and
mov
lret
xchg
inc
cmp
pop
out
jbe
arpl
cmp
inc
int
scas
ljmp
jnp
sbb
out
repnz
test
jg
or
je
fwait
sub
ja
cmp
ljmp
stc
push
pop
push
cmpb
xchg
mov
dec
sub
lds
bound
insb
int
or
cmc
bound
data16
pop
sarb
cmp
sub
and
flds
js
cmp
push
test
hlt
mov
js
cmp
xor
or
mov
cmpb
mov
inc
ljmp
jno,pn
and
cmp
jle
push
cmp
sub
xor
adc
stc
repnz
jp
xchg
ljmp
pushf
aam
jne
mov
int
and
insl
adc
xor
cmp
lds
jle
push
insl
hlt
pop
cmp
mov
out
jge
xchg
mov
jne
adc
pop
cmp
jp
cmp
enter
push
loop
or
mov
cmp
cmp
out
xchg
shr
and
jge
push
cmpsl
dec
ficoms
aam
adc
push
ss
rclb
and
dec
or
icebp
lock
dec
lret
pop
pop
lret
in
add
sub
xor
xchg
push
mov
add
jb
sub
fs
mov
test
and
popf
add
pop
mov
cmpsl
repnz
xor
or
dec
fwait
mov
sbb
mov
add
inc
lret
dec
test
push
xor
les
or
sub
and
daa
sub
test
outsl
dec
add
xor
out
shll
inc
ds
mov
mov
out
inc
sbb
mov
int
jnp
adc
jge
add
rcrb
ret
sub
mov
in
aas
es
pop
push
in
or
scas
lock
cs
mov
cli
sbb
jnp
repnz
xchg
mov
je
inc
leave
push
out
pop
mov
sub
ss
or
jo
pop
jl
jmp
ret
lds
fsub
cs
adc
xor
mov
out
jle
lods
ret
lret
mov
or
loopne
push
stos
cltd
mov
cltd
xchg
mov
das
pop
xchg
aad
mov
sub
mov
out
jg
push
mov
mov
add
dec
push
push
iret
cmp
sbb
mov
inc
repz
data16
imul
inc
lret
sbb
xchg
aad
xchg
xchg
ljmp
push
jl
jle
in
test
flds
ja
jg
or
or
sub
push
push
int
jge
dec
cmp
and
sbb
loopne
push
dec
push
movsb
fs
rol
in
out
push
push
xor
xchg
mov
cmp
pop
mov
inc
loopne
outsl
cmc
bound
out
add
fistl
ficompl
cmovnp
adc
or
ss
fiaddl
out
das
pop
leave
sbbl
push
cmpsb
xor
push
lcall
and
dec
mov
jle
and
add
adc
push
insb
sbb
mov
sbb
sub
sbb
push
add
sahf
or
inc
push
mov
iret
push
pop
push
push
mov
xor
add
xor
dec
and
xchg
adc
enter
pop
sub
xor
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
push
lea
push
lea
push
call
test
je
mov
add
mov
movl
movl
lea
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
movl
jmp
movb
movb
movb
movl
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
mov
push
pushl
mov
push
pop
push
nop
jmp
jmp
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
push
push
movl
mov
call
pushl
pop
call
push
popl
mov
dec
cmp
jne
push
call
add
xor
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
call
cmpw
je
push
call
add
call
xor
add
ret
call
dec
sbb
and
pop
xchg
sarl
rcl
mov
fsts
xchg
xlat
jns
xchg
sub
adc
mull
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
das
jns
shll
inc
scas
xchg
xchg
rcr
mov
js
push
or
add
sbb
or
jne
cltd
dec
lods
aaa
repz
montmul
cmpsb
inc
jge
out
gs
inc
mov
push
sbb
shll
fsts
xchg
xlat
jns
aam
mov
rcll
jae
sub
sub
sbb
es
in
sbb
jns
cs
mov
shrl
sbb
cltd
aam
push
ret
ja
rorl
inc
jae
sub
sub
adc
xor
inc
es
and
fldcw
xchg
shrl
jmp
addl
rcll
xchg
xlat
jns
shrl
xchg
push
xchg
xlat
fldcw
mov
and
pop
xchg
aaa
jns
shlb
pop
push
mov
iret
fstl
xchg
imul
sub
adc
dec
and
pop
adc
pop
adc
mov
flds
xchg
xlat
jns
shrl
adc
mull
fsts
xchg
sarb
shrl
aad
xchg
sarl
ror
pop
adc
mull
pop
pop
xchg
jns
ret
sub
adc
out
flds
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
rcr
sbb
xchg
daa
jb
pushf
gs
adc
mull
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
mov
jge
daa
pop
adc
mull
fld
xchg
xlat
jns
shrl
xchg
pop
xchg
xlat
jns
rorl
stos
repnz
jns
rorl
mov
sub
pop
lret
xlat
jns
or
pop
adc
mull
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
shrl
fsts
xchg
xlat
jns
jnp
pop
cmp
mov
shll
push
cmpsl
int3
out
incl
test
pop
cmp
mov
sbb
push
mov
bound
xor
xchg
mov
cmpsb
icebp
fsubs
shll
cmc
neg
jb
xchg
icebp
mov
lcall
lods
pop
testb
testb
movsl
adc
fldenv
sahf
out
xor
outsb
out
mov
and
mov
dec
or
push
push
inc
xor
loopne
dec
pusha
push
fbld
xchg
sub
mov
jge
cmpsl
pop
imul
sbb
mov
repz
insb
push
aam
ss
leave
mov
fsubrl
call
icebp
jmp
or
inc
cmp
sub
sub
pop
aam
inc
movsb
pop
dec
popa
add
pop
xorl
xchg
sbb
gs
out
add
notl
std
mov
stc
loop
ret
stos
and
jmp
adc
je
push
lods
mov
sbb
push
adc
adc
cmc
fdivrs
add
rorb
ficoml
adc
or
cmp
or
xchg
insl
lea
popf
loopne
rcr
pop
sub
adc
adc
imul
cmp
xor
dec
add
rcl
mov
repnz
adc
addl
aam
adc
mov
push
xchg
stc
or
sub
outsw
lea
xchg
sub
and
inc
sarb
inc
fistps
int3
xchg
push
pop
test
fadds
aas
cli
jg
hlt
gs
push
lahf
sub
cmpsb
pop
push
sbb
adc
adc
sub
push
xor
movsl
iret
lret
xchg
mov
dec
jg
in
cmp
ret
mov
stc
adc
out
or
add
pop
xlat
fisttpll
adc
mov
fstpl
dec
adc
xor
adc
ret
push
adc
jne
pop
movsl
movsb
addr16
nop
and
hlt
xchg
inc
add
das
pop
cmp
mov
inc
popf
mov
add
stos
into
std
cltd
inc
pusha
push
fs
sahf
lods
sarb
sub
arpl
inc
dec
in
jecxz
cmp
mov
fldenv
sbb
int3
sbb
aad
loopne
loop
daa
inc
xchg
dec
mov
jl
mov
cmc
or
jb
mov
fsubr
inc
push
xor
stos
xchg
gs
ds
pop
pop
cwtl
lcallw
mov
jae
sbb
icebp
jg
insl
mov
inc
add
lods
ret
dec
js
sub
pop
lcall
mov
inc
fildl
sub
xor
xor
add
jl
into
inc
in
in
xor
jne
jle
jno
dec
popa
std
dec
jg
inc
adc
cmpsb
in
mov
xchg
lahf
mov
xchg
jne
mov
pop
pop
push
mov
mov
sahf
lahf
loop
pop
xchg
mov
dec
jo
gs
shll
sbb
out
cmp
das
adc
dec
aas
psllw
push
ficoms
mov
pushw
lds
dec
out
hlt
mov
xchg
in
add
shll
pop
faddp
sarl
jno
ficoms
subl
jle
xchg
imul
mulb
fidivs
xchg
sub
sahf
testb
pop
ja
xchg
dec
dec
shrl
sbb
iret
add
lods
fsubl
data16
loope
mov
movsl
add
dec
addr16
xor
popf
inc
repz
fisttpll
mov
or
pop
or
int3
int
sbb
push
jae
cli
or
pop
sub
pusha
cmc
in
es
ss
call
iret
cmpl
mov
pusha
pop
mov
and
scas
sub
dec
into
mov
jmp
in
sbbb
fcomps
push
fimuls
mov
das
xor
loop
cmp
xlat
mov
adc
out
jecxz
xchg
pop
push
shl
jno,pt
lret
addr16
push
push
add
sbb
jmp
mov
jno
or
fdivs
cmp
flds
jle
lahf
mov
adc
inc
push
mov
movsb
xor
xchg
roll
cmpsl
fs
cmp
cmp
dec
cmpsl
je
sbb
push
xor
ja
cltd
pop
xor
inc
aaa
add
xchg
xchg
nop
sar
out
push
imul
call
rorb
fmuls
pop
outsl
add
jno
add
adc
and
icebp
fistpl
addr16
loopne
xlat
pop
testl
insb
push
mov
shlb
fsub
lods
add
sub
aam
into
adc
test
mov
fidivrl
pushf
push
into
aam
lret
int3
sbb
test
adc
int3
repz
pop
insb
sbb
and
jmp
mov
inc
sub
shlb
in
jns
add
dec
and
cmp
jle
sub
outsl
sub
push
shrl
push
aad
jl
xor
adc
add
cmp
out
jmp
cmp
push
push
repnz
dec
and
lea
int3
cmp
out
mov
jecxz
addr16
adc
mov
xchg
outsb
popa
jg
loop
push
cmpsb
add
rcrb
fs
and
test
inc
jg
int
leave
push
dec
xchg
cmp
pusha
mov
mov
adc
inc
xor
inc
in
out
jg
push
lods
mov
scas
in
inc
fsubs
mov
out
push
add
cmp
shlb
lock
cmp
pop
fisttps
xchg
icebp
in
adc
icebp
std
sub
sub
push
daa
push
cmp
bound
cmp
enter
and
mov
les
lret
mov
data16
push
push
mov
mov
pop
stos
mov
outsl
jmp
jo
and
mov
sub
inc
jnp
es
jmp
adc
mov
jge
inc
stos
sub
popf
jns
fwait
cmp
push
ja
jmp
xor
jecxz
movsl
movsb
add
sbb
add
jo
xchg
mov
ja
sbb
cmpsb
mov
cmpl
sti
xchg
xor
adc
incb
pushf
call
add
out
xchg
rcrl
fcompl
fldl
imul
mov
mov
test
es
mov
movsb
mov
sahf
add
bound
dec
xchg
arpl
mov
push
outsl
aaa
fwait
add
push
les
jmp
ret
das
ja
xchg
push
lods
xchg
mov
inc
frstor
cmc
mov
mov
ret
push
enter
test
imul
or
mov
imul
lahf
sarb
jge
dec
fidivl
and
jge
pusha
jg
sti
inc
stos
xchg
dec
inc
sarl
nop
push
imul
stc
sub
or
call
jae
xor
int3
shrb
or
cmpsb
jns
inc
sbbb
pop
stos
call
pop
enter
dec
jle
das
scas
mov
and
push
adc
repnz
mov
imul
ds
jno
in
js
adc
push
sub
sub
pop
sbb
pop
loop
shrb
push
cli
push
push
adc
cmp
push
and
mov
dec
cmp
pop
mov
xor
jg
lret
ficoms
out
mov
fyl2xp1
push
push
add
fwait
sub
stos
sbb
aaa
ja
cmp
mov
imul
mov
add
imul
or
jle
lock
xor
mov
ret
or
stos
xor
mov
daa
lret
dec
lods
bndldx
mov
add
add
in
nop
pop
cmp
shll
dec
ret
imul
divb
mov
lahf
repnz
pop
mov
cmp
mov
mov
in
sahf
pop
rolb
mov
lahf
shlb
lret
add
cs
and
adc
inc
stc
cmp
aaa
sub
inc
sbbl
mov
fcmovbe
mov
push
push
jne
mov
mov
mov
je
add
arpl
popa
addr16
sub
xchg
fs
inc
mov
and
popa
lcall
aam
dec
or
add
mov
or
outsl
jmp
loop
aam
jl
movsl
push
imul
xchg
jo
sbb
mov
mov
xchg
ljmp
pop
std
test
add
mov
sbb
mov
iret
xchg
and
fdivl
fisubl
popa
bt
cmpsb
es
inc
call
inc
sahf
xchg
ja
pop
cli
push
jne
jmp
sbb
mov
jb
add
sahf
mov
mov
jbe
adc
add
sub
adc
std
mov
xor
xlat
mov
xor
popf
cmp
outsl
xchg
test
out
jae
lods
ja
sbb
push
dec
xchg
hlt
movl
mov
out
test
dec
mov
in
jo
pop
incl
sub
pushf
mov
shll
shlb
dec
mov
dec
cmp
andl
fwait
sbb
gs
out
neg
adcb
ret
insb
push
push
outsl
out
test
mov
orl
insb
andl
int3
and
pop
jmp
and
lea
incb
imull
inc
dec
cmp
mov
fldt
pop
or
inc
add
vpacksswb
mov
out
and
adc
ret
dec
push
add
mov
sbb
testl
lea
add
adc
scas
pop
and
ljmp
mov
dec
xchg
insl
out
addr16
add
and
adcl
jle
cmpsl
sbb
sub
divl
push
jp
cmp
dec
push
mov
inc
or
dec
push
sbbl
cli
sbbl
add
rolb
sbb
rolb
ljmp
jno
push
jg
call
jae
movsb
sbb
test
lods
imul
rcll
lahf
add
cld
std
mov
sbb
push
outsl
cmp
pop
jmp
mov
cltd
push
lock
sub
cld
jmp
mov
push
loop
adc
cmc
lods
inc
hlt
mov
cli
shll
stc
rcrl
rcr
push
and
jae
mov
loopne
ljmp
mov
push
mov
out
jns
cmp
dec
lock
bnd
in
xchg
xor
test
add
cwtl
cmpb
icebp
popa
mov
mov
mov
inc
call
fsts
mov
cmp
fwait
cmp
or
xchg
pop
xor
sub
sub
pop
negb
cltd
test
fists
scas
fisubl
sub
cmpb
jnp
cmp
mov
push
fwait
sub
in
jmp
mov
mov
adc
lods
xbegin
add
test
xchg
inc
or
sbb
test
outsb
lahf
mov
cli
cmp
add
cmpsl
cmp
adc
add
jmp
sahf
add
or
lods
subb
or
les
push
xlat
or
mov
stos
inc
cmp
mov
jb
add
iret
lods
nop
div
and
push
add
subb
or
cmp
int3
push
mov
sbb
add
push
dec
lds
xchg
add
adc
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
inc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
inc
inc
add
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
inc
inc
add
dec
inc
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
dec
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
dec
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xor
add
imul
adc
add
imul
clc
push
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
imul
pusha
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
in
imul
cmp
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
inc
add
inc
add
inc
add
push
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
push
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
