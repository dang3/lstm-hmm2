push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
mov
mov
fstp
repnz
clc
xchg
es
gs
lret
lcall
sti
xor
mov
or
jg
jecxz
pop
push
repz
dec
xor
push
call
sbb
jno
or
xchg
inc
inc
pop
mov
xchg
popf
imul
orb
cmp
repnz
or
stos
sbb
imul
cmp
hlt
lret
fbld
push
jl
int3
jl
nop
fldt
jne
jnp
add
xchg
xor
xor
add
push
inc
dec
and
adc
inc
pop
or
repnz
mov
out
enter
ficoml
je
pop
mov
inc
mov
aad
mov
scas
idivl
push
outsb
sbb
jo
cs
outsb
push
lds
shll
enter
cld
scas
out
pop
fidivl
sahf
test
in
and
fidivrs
cwtl
xchg
lret
pop
aas
dec
sbb
das
push
jb
sub
cmp
mov
and
dec
fsub
push
insb
dec
mov
jg
lahf
mov
fs
and
sbb
mov
das
cmp
sbb
dec
sbb
orl
in
push
inc
jns
clc
mov
sbb
hlt
xor
mov
mov
enter
jnp
ret
cmp
mov
stos
or
scas
fstps
jb
xor
jb
loop
dec
cmp
outsl
mulb
mov
cmp
xor
cmpsl
inc
xchg
pop
rclb
sahf
icebp
jne
aaa
dec
cwtl
inc
insb
hlt
xchg
dec
or
jmp
icebp
inc
jns
adc
add
push
ja
mov
lahf
dec
repz
push
sbb
lods
jb
in
mov
loop
dec
jmp
inc
and
addr16
cmc
leave
adc
jne
pop
push
cmp
sub
pusha
pop
fmulp
and
hlt
popa
shrl
aad
lods
adc
arpl
xor
repz
mov
adc
je
jae
jo
fdivrs
push
in
jne
and
sarl
cli
imull
test
cmpsb
negb
scas
lods
xor
test
into
push
add
xlat
mov
sub
andb
std
popa
xchg
pop
in
daa
push
mov
sub
lods
mov
xchg
mov
test
mov
sbb
ret
arpl
pop
push
pop
das
sbb
vhaddpd
dec
cmp
lret
sbb
mov
adc
imul
mov
inc
in
or
loope
nop
mov
fwait
jp
int3
imul
sbb
bound
xchg
push
cmp
add
adc
js
or
xchg
loope
jnp
andl
fcmove
imull
xchg
sbb
repnz
ret
or
mov
popa
push
daa
pop
repz
and
sbb
mov
ret
sbb
inc
data16
call
inc
mov
fwait
cmpsl
dec
stos
int3
mov
outsb
js
outsl
cli
add
into
dec
jl
jg
pop
out
cmp
aas
scas
jecxz
and
or
repz
push
cmp
mov
ret
inc
xchg
frstor
imul
xchg
inc
pop
pop
enter
add
repnz
in
pop
popf
bound
add
add
into
lret
sarl
mov
scas
movsl
sub
pop
iret
push
jecxz
xor
sbb
fwait
test
push
cmp
loop
jns
xchg
mov
cmpsl
push
push
insb
jle
dec
adc
jmp
addl
xchg
hlt
jo
cmpsb
aam
sub
gs
in
jp
adcl
sbb
adc
mov
fwait
pop
call
shrl
mov
xchg
pushf
adc
jg
and
je
cmp
leave
test
mov
sbb
in
dec
mov
test
movsl
adcl
and
xor
mov
jbe
xor
dec
mov
aas
incb
fbstp
loop
sub
mov
mov
jne
es
sub
lods
xor
sarl
lods
xchg
dec
repz
pop
jle
xchg
leave
sbb
sub
test
push
adc
int
cmp
or
in
std
add
sti
movsl
loopne
pop
fdivl
mov
add
sbb
sub
inc
push
xchg
cmp
and
insb
xchg
aam
mov
add
into
loope
xor
je
cmc
cmp
push
out
adc
push
lds
orl
add
enter
rorb
lcall
aad
cmc
cs
push
mov
clc
pusha
out
ss
xchg
add
out
sub
jae
ret
sub
fmull
lret
push
subb
xchg
xor
push
loopne
rolb
push
dec
fwait
xor
mov
mov
adc
jmp
push
and
into
push
out
std
mov
mov
lcall
sub
fsubr
mov
clc
push
add
ficoml
test
ror
jmp
in
movsl
loopne
pop
and
mov
cmp
dec
decb
out
jp
stos
repz
cltd
mov
loope
jnp
xor
adc
pop
sub
sub
or
pop
movsl
mov
dec
cmpsb
popf
or
fs
xor
popa
in
push
test
and
mov
add
adc
loope
aas
ja
jne
push
insl
rolb
push
dec
pop
fldenv
jae
in
fldl
mov
sub
sbbb
inc
inc
pop
add
cld
cmp
dec
das
ljmp
test
lods
sub
xchg
stc
pushf
in
mov
cmp
add
daa
test
mov
mov
push
jns
sbb
push
repnz
mov
mov
call
lahf
xchg
int3
jnp
in
push
or
orb
sub
mov
insl
mov
xor
mov
lahf
cli
mov
add
out
leave
push
pop
and
sub
adc
pop
out
push
inc
arpl
add
cmpsl
cltd
cltd
cmc
stos
sub
push
cmpsb
clc
xchg
es
out
push
adc
xchg
xchg
add
adc
cmp
cmpb
stos
add
jnp
jae
aam
fildll
stc
pusha
out
push
cmpsb
aas
jmp
imul
mov
incb
incl
mov
pop
aad
clc
mov
fld
dec
xchg
fwait
dec
orb
pop
mov
and
movsb
ret
mov
imul
adc
mov
popf
ja
leave
or
aad
mov
sub
gs
test
push
add
gs
jmp
cmp
jnp
inc
pushf
pop
and
sbb
cmp
out
adc
adc
xchg
jmp
pop
push
push
lds
inc
lds
inc
fidivrl
test
push
push
xchg
aad
sbb
stos
repnz
xchg
inc
testl
sub
add
imul
xadd
mov
or
cwtl
daa
ret
into
lea
repnz
inc
add
clc
decb
or
das
push
shlb
cli
jmp
dec
push
popf
imul
js
adc
add
xor
scas
inc
jo
dec
inc
insb
jne
in
add
mov
or
push
enter
loop
sbb
gs
repz
icebp
mulb
cmp
mov
pop
mov
cmp
insl
jg
sub
lea
lahf
inc
adc
mov
inc
add
adc
daa
aas
lods
stc
lds
loop
xchg
push
or
int3
adc
ja
mov
mov
divw
outsb
rcr
mov
in
add
loop
mov
lods
and
pop
push
push
adc
sarl
sahf
movsb
ss
stos
xchg
je
out
pop
add
sub
dec
lds
lea
xchg
sub
adc
pop
popa
ss
inc
data16
data16
pushf
push
pop
mov
mov
test
mov
leave
lds
outsl
dec
pop
in
lret
movsb
shrb
fstpl
cmpsb
adc
dec
mov
xchg
xor
inc
insb
xorl
mov
out
pop
cmp
mov
sub
hlt
cwtl
adc
or
shrl
jns
sahf
adc
movsb
jg
ret
repz
adc
or
mov
adc
movsl
jle
adc
xchg
xor
mov
jb
xor
inc
lahf
inc
pop
mov
mov
ljmp
negl
mov
inc
push
sbb
sbb
add
xor
add
mov
popa
mov
je
ror
lods
xchg
dec
cmpsl
pop
fmull
xchg
leave
jg
sbbb
data16
and
xlat
sbbl
outsl
iret
sub
push
cltd
test
xchg
imul
pop
mov
adc
jge
loope
add
xchg
scas
adc
inc
icebp
scas
xchg
sbb
xor
lods
in
xor
and
fcompl
dec
mov
mov
call
mov
cwtl
xchg
jle
cmp
xchg
test
sub
or
mov
subl
fmulp
jecxz
adc
sub
and
repz
ds
push
pop
xchg
out
sbb
dec
mov
addr16
pusha
shlb
cmp
lds
mov
mov
jo
dec
test
add
test
jae
aad
dec
aaa
mov
dec
enter
out
das
xor
push
xchg
xor
or
gs
pop
and
int3
or
cmp
fstl
aas
aaa
jne
adc
cs
rcrb
lock
scas
jnp
sbb
orl
ret
stos
mov
push
lods
filds
sbb
andl
cli
aam
das
dec
adc
and
stos
inc
xor
test
lret
aas
push
mov
and
push
push
ffreep
loopne
dec
loopne
xchg
jne
sub
mov
add
xchg
mov
xchg
aad
mov
nop
jnp
dec
lret
ret
mov
adc
cmp
fstl
pop
mov
popa
xor
sarl
jmp
jo
sub
or
jo
daa
and
lock
negb
sahf
pop
out
jnp
dec
cmp
xchg
xchg
ja
ds
cmp
jmp
sub
xlat
xor
mov
sub
jg
or
inc
mov
push
jne
stc
jo
cmpsb
xchg
popf
out
push
or
fsts
movsl
mov
lds
mov
shll
dec
push
aaa
xor
or
loopne
lds
loop
inc
lds
stc
shrb
adc
add
xchg
add
scas
dec
aaa
xor
sub
sti
dec
mov
push
lret
or
aam
adc
popf
sub
sbb
xchg
cmc
mov
jmp
cmp
and
je
cld
mov
stc
cmp
xchg
push
in
int3
pop
repz
mov
cltd
push
add
rorb
xor
outsl
in
push
adc
add
sub
add
jb
cwtl
mov
cs
and
sub
mov
repz
adc
loopne
dec
fstpt
and
shrl
ror
out
or
fnstsw
and
enter
jns
roll
inc
add
aaa
mov
or
xchg
mov
pusha
enter
adc
cmp
or
stc
inc
adc
cmpsb
lcall
jb
cmpsb
std
imul
fdivl
inc
jnp
in
ja
sbb
cmpsb
lea
mov
add
jecxz
jecxz
push
iret
jmp
pop
mov
test
cltd
popf
rcrl
jno
repnz
ja
int3
lcall
jb
push
imul
aas
stc
xor
rcl
xlat
test
xchg
stc
jmp
sub
fidivrl
push
int
adc
or
adc
aad
fsubp
jns
sub
jo,pn
out
inc
test
arpl
and
lret
jnp
popf
xor
in
or
stos
ja
pop
pop
pop
jecxz
mov
mov
aas
adc
xchg
jp
jl
fwait
out
clc
sub
mov
sbb
sub
xlat
inc
xchg
inc
daa
sub
data16
cs
xchg
jg,pt
sub
push
xchg
mov
mov
cmp
mov
hlt
xlat
cmp
movb
aas
xchg
cmp
jge
jnp
pop
xorl
and
fldt
fwait
rcrb
xchg
lret
rorb
aaa
imul
insb
data16
xlat
fstpl
inc
or
ljmp
push
adc
dec
sub
inc
cmp
mov
outsb
xchg
scas
insb
and
in
inc
leave
pop
xchg
scas
jp,pt
sub
mov
loopne
lock
fstpl
push
in
dec
jns
sbb
out
outsb
nop
mov
loope
add
ljmp
xor
dec
loopne
leave
add
adc
bound
dec
or
or
pop
pop
shll
lcall
pushf
sbb
cli
sub
jns
pop
sbb
lock
xor
loopne
pop
pop
sub
dec
hlt
or
jle
dec
stos
shlb
mov
jl
mov
sbb
or
and
in
psrlq
ljmp
ret
jg
scas
pop
icebp
mov
add
pop
cmp
mov
jne
fnsetpm(287
lret
inc
sbb
xchg
std
mov
lods
push
test
push
push
or
aas
mov
add
dec
insl
pop
mov
jbe
add
mov
push
addr16
add
dec
dec
cmp
pop
pop
adc
rorl
push
xorb
sti
ret
push
arpl
dec
and
out
shl
inc
mov
addr16
jecxz
push
or
arpl
push
add
and
mov
orl
out
out
js
out
push
pop
cmp
imul
les
push
dec
jne
jb
pop
push
sbb
or
dec
push
add
jge
cmc
xlat
fsubr
xchg
xchg
sbb
jb
sub
inc
lahf
sbb
or
and
fstps
imul
sarl
fisubrl
popf
inc
pop
add
sbb
mov
or
pop
adc
mov
int3
jnp
mov
inc
addl
cld
jae
mov
push
pop
inc
mov
ds
adc
xchg
outsl
and
add
cld
lds
pop
xchg
pop
dec
pop
push
dec
lock
jecxz
roll
leave
xchg
loop
lods
xchg
sbb
sub
out
push
leave
pop
cltd
push
cmp
adc
add
xor
fldl
sbb
push
insl
das
jge
xor
lds
xchg
std
bound
lods
push
bnd
lods
mov
in
mov
cltd
ret
adc
xor
aad
imul
inc
mov
sub
and
cmp
and
xchg
test
aaa
xor
movsl
push
lret
scas
sti
sar
inc
ljmp
shll
cmp
sub
pusha
mov
or
add
sbb
and
movsl
dec
call
fsubrp
insl
fisubl
dec
repz
pop
jb
xchg
sbb
xor
insl
call
xor
insb
insl
dec
fdiv
xchg
call
ljmp
lock
cmp
sub
gs
ljmp
aas
mov
lret
mov
dec
or
pop
out
mov
inc
push
sbb
xchg
pop
loope
shll
daa
cmp
negl
sbb
xor
xor
movsb
orb
into
cmp
insb
int
inc
cmp
inc
add
mov
mov
addr16
test
cwtl
xlat
and
dec
xchg
divl
out
cmp
shr
popf
mov
bound
scas
push
popf
inc
xchg
mov
sub
push
imul
pusha
cld
std
fs
jg,pn
rorb
testb
out
loop
fstps
xchg
jle
sbb
xor
mov
add
push
jle
aas
mov
jle
std
xchg
dec
loopne
es
bound
xchg
push
ja
push
mov
cmpb
push
popa
jo
ret
mov
dec
sbb
add
inc
shrb
lret
cmp
jmp
jmp
mov
mov
int3
stc
mov
mov
cli
stos
fisubs
pop
divb
imul
rclb
mov
call
xor
sbb
leave
or
scas
mov
xchg
pop
call
icebp
bound
sub
je
data16
jecxz
les
adc
dec
jecxz
imul
jecxz
sbb
in
xor
loop
jp
inc
lds
jns
inc
lock
jecxz
inc
or
std
push
mov
xor
lods
sbb
jne
mov
cmp
lods
lods
inc
dec
xchg
sub
fsubrs
pusha
sub
shl
pop
aad
add
stos
jo
fisubrs
mov
push
or
es
pushf
lret
sub
xchg
sub
and
inc
imul
popa
cmp
sub
sbb
ds
jne
dec
xchg
mov
fisubrl
sub
sbbl
mov
push
fildl
movsl
fcomip
mov
push
add
xor
mov
pop
inc
and
inc
nop
add
jg
pop
pop
pop
jns,pt
rcrb
addr16
pop
mov
psubb
cmp
xor
scas
out
mov
sub
fnstenv
es
or
jle
mov
xchg
pop
adc
jae
adc
pop
jbe
sub
test
iret
lods
jnp
push
and
orb
or
mov
aad
js
cmp
cli
fldt
push
mov
push
rclb
sti
mov
and
cltd
lcall
arpl
lock
pusha
xchg
aas
scas
push
mov
std
fcoms
es
sub
jl
hlt
int3
mov
popa
sti
dec
jmp
cmp
sub
ret
jecxz
cwtl
sbb
adc
fmul
xor
scas
fcomi
mov
sbb
cmpsl
popa
mov
pop
iret
mov
xor
pop
out
jle
pop
xchg
xorps
cwtl
dec
fmull
lock
xor
out
negb
inc
mov
in
enter
jge
mov
call
mov
jl
or
pop
aad
lret
test
and
add
mov
in
movsl
jnp
cmc
dec
jg
cmp
imulb
stos
mov
dec
xchg
lods
outsb
xchg
mov
cmc
imul
mov
adc
inc
xor
gs
je
push
mov
sub
nop
loopne
addr16
push
inc
jae
fidivrl
mov
push
ja
lods
and
aad
sub
movsb
cmp
push
xchg
nop
add
dec
mov
loop
inc
pop
sub
xchg
cwtl
pop
jae
mov
fildl
les
xchg
xlat
int
xor
std
and
or
js
arpl
arpl
jle
cmpsb
jo
adc
cmpsb
and
popa
outsb
jmp
mov
sub
iret
mov
loop
xchg
mov
loopne
rolb
scas
adc
shrb
inc
scas
fs
or
pusha
mov
cmp
cld
pop
ret
pminub
lahf
dec
jne
add
ss
mov
push
imull
jb
cmp
or
sbb
pop
decl
sbb
icebp
jo
mov
insb
test
pop
and
adcl
cmc
out
sub
mov
das
aad
adc
popa
int3
xchg
xchg
pop
popa
aaa
push
cmp
mov
mov
pop
sub
jp
mov
push
sbb
out
rclb
push
xchg
cmp
xchg
mov
adc
pusha
jo
ret
mov
mul
sub
shl
mov
inc
sub
outsb
aas
std
iret
jmp
hlt
mov
xor
mov
or
jno
test
je
pop
mov
dec
bound
lods
mov
jg
out
mul
movsb
jbe
sub
push
push
hlt
and
ret
out
pop
sub
push
cmp
leave
mov
jmp
jg
loope
mov
ljmp
pushf
add
pop
inc
mov
sbb
int
add
fidivrl
mov
mov
pop
es
dec
and
add
int3
fistpll
jecxz
sub
inc
sarb
xchg
fucomi
aaa
out
xchg
xchg
adc
fsubl
jg
mov
in
in
sbb
test
jp
and
lods
push
xchg
fcomps
mov
test
xchg
xor
pop
aad
repnz
dec
or
dec
icebp
inc
addr16
mov
test
pushf
mov
mov
shll
ljmp
sub
rorl
bound
out
xor
adc
mull
push
sbb
mov
cmc
or
xchg
mov
outsl
inc
nop
decb
add
test
xchg
daa
mov
int3
je
cltd
test
adc
push
or
and
insl
inc
sub
out
scas
lahf
jge
push
adc
lret
shr
test
pop
xchg
loopne
sub
dec
and
dec
cmp
jmp
xchg
dec
or
mov
roll
pop
popf
and
test
and
aam
mov
xchg
popf
stos
mov
mov
sbb
idivb
inc
push
mov
ret
cmp
pop
push
shld
jmp
mov
mov
add
outsb
mov
jbe
aaa
jno
arpl
cmc
movsl
nop
xchg
je
cmp
mov
xchg
je
mov
dec
add
nop
aad
and
fidivs
push
and
sbb
or
xchg
in
cmpsb
test
and
jmp
dec
sub
in
jns
cltd
dec
notb
arpl
sbb
jle
and
rcrb
lods
xchg
adc
xchg
cli
or
adc
stos
lock
xor
into
rol
push
fst
adc
mov
out
pusha
aam
jge
lea
int3
xchg
mov
dec
insl
scas
lea
cwtl
cmpb
jb
mov
inc
jecxz
imul
fdivl
mov
ffree
xor
xor
push
jecxz
ret
jb
mov
faddl
push
cmc
std
daa
lret
pop
xor
int
outsl
sbbl
push
ret
fcoms
and
data16
int
sub
adc
jb
jp
xor
dec
paddb
jnp
dec
les
les
sbbb
aaa
in
adc
mov
stos
xorl
jg
dec
xor
mov
popa
xor
jecxz
xchg
or
push
mov
xchg
mov
jbe
icebp
push
dec
pusha
pop
pop
pop
mov
enter
jo
dec
or
sti
fdivrl
fldl
mov
ja
cmc
leave
sahf
xchg
mov
int3
or
insl
mov
xor
or
out
xchg
mov
aam
push
xor
loope
clc
or
popf
push
xorl
push
test
sub
fld
in
pop
xchg
inc
test
call
cmovs
incl
mov
jmp
inc
out
dec
das
mov
inc
lods
nop
sbb
hlt
jg
pushf
bound
adc
cmp
pop
insb
mov
sub
xchg
xor
leave
pop
orb
andb
add
pop
fimuls
sub
or
jp
push
out
adc
out
mov
xchg
push
jo
mov
in
xor
cld
dec
inc
notl
addr16
mov
sbb
pop
add
mov
imul
out
fisubrs
lods
rorl
or
mov
rorl
aaa
ja
sub
sbb
fcmovu
pop
insb
jl
jno
adc
inc
pop
pop
jae
outsl
into
inc
aas
mov
add
clc
lea
mov
lcall
cmc
cmp
insl
xchg
fidivl
mov
jmp
mov
or
cmp
daa
pxor
and
cs
aad
push
repz
scas
adc
mov
clc
cmpsb
xchg
adc
xchg
mov
js
sbb
cmp
push
lcall
mov
aaa
sbb
sti
ja
lea
aaa
mov
push
push
jb
jmp
add
dec
sub
sbb
jns
divl
push
stos
mov
cwtl
ds
frstpm(287
loop
dec
xchg
add
and
enter
xchg
mov
cs
mov
sub
fnsave
repnz
imul
frstor
ds
cmpsb
fdivrl
sahf
pushf
mov
jp
mov
das
or
fstpt
je
and
sub
scas
psubd
sub
test
sbb
pop
out
and
out
pop
xor
push
mov
std
push
mov
add
jmp
daa
in
sbb
lds
add
ds
jnp
lahf
xchg
aaa
push
and
rorl
flds
lea
out
cld
mov
shll
or
push
lcall
jg
outsl
mov
lods
inc
and
mov
dec
dec
imul
cmp
xchg
ret
pop
test
daa
and
das
ret
int3
lock
scas
lcall
cmpsb
sbb
xor
fildl
mov
fsts
push
xor
outsb
cmpsl
iret
dec
lock
js
aad
inc
push
and
enter
scas
popf
addr16
cld
xchg
dec
cwtl
imulb
ss
pop
or
notb
dec
push
pusha
dec
arpl
int3
mov
mov
fsubl
mov
ljmp
popa
out
push
nop
push
test
in
inc
pop
loop
mov
daa
xchg
xor
sbb
ljmp
mov
sbb
jle
push
cmpsl
jbe
psubq
ds
iret
mov
popf
mov
pop
stos
sbb
cs
out
dec
shr
hlt
bound
ja
outsl
test
sub
xor
arpl
xor
mov
ret
lods
and
aam
push
dec
xchg
adc
jo
add
sbb
jnp
adc
or
ss
lea
inc
lret
pop
mov
fldl
out
mov
add
test
sub
mov
js
or
push
xor
add
scas
sbb
dec
jg
lahf
scas
add
pop
lods
cli
push
clc
gs
lret
mov
dec
pop
push
dec
dec
cld
testl
push
dec
dec
arpl
jbe
mov
addb
mov
cld
mov
pop
jmp
sub
dec
mov
out
loopne
enter
or
ds
lea
push
ja
mov
inc
dec
fisttpl
or
xchg
adc
les
inc
dec
in
imul
cld
inc
pop
lret
dec
push
js
xor
mov
loopne
adc
add
mov
mov
cwtl
fwait
movsb
aam
inc
xor
mulb
movsb
mov
lods
scas
popf
mov
dec
mov
in
outsl
ret
ret
xlat
das
jbe,pn
mov
fidivs
jmp
jae
push
adc
cmpsb
inc
adc
add
xor
stc
push
jns
push
test
rcr
mov
inc
mov
scas
and
push
mov
cmpsl
in
pop
icebp
jno
rorl
mov
out
fldcw
push
sub
inc
rcr
mov
hlt
sahf
adc
imul
or
cmp
popa
loope
cmp
mov
out
leave
ret
sbb
cltd
fnstcw
xchg
test
push
cmp
dec
pusha
lcall
push
cmp
inc
pinsrw
mov
aam
or
icebp
jns
dec
jae
or
jne
jp
or
inc
pop
sub
mov
xchg
push
sti
fimuls
sahf
mov
xchg
loop
test
in
sub
inc
lea
adc
mov
mov
out
pop
pop
pushl
test
cmpsb
add
inc
pop
int3
xor
inc
cmp
cs
lea
repz
mov
xchg
sbb
mov
mov
or
stos
loopne
out
gs
jnp
jo
nop
mov
mov
sbb
pop
xor
lock
into
mov
mov
ja
aad
push
pusha
lods
js
jp
xlat
mov
test
xor
lock
repz
imul
test
sbb
outsl
jecxz
pop
hlt
pop
loopne
fs
imul
andl
ret
jecxz
fidivrl
mov
adc
int
mov
ret
js
push
leave
sbb
mov
hlt
popa
adc
or
sbb
in
xchg
mov
inc
in
sub
insb
iret
fimull
pop
lods
arpl
outsl
cmc
outsl
cmp
mov
or
add
mov
repz
mov
cwtl
lret
jnp
xor
jns
pusha
ficomps
out
push
sti
cmc
or
mov
je
lods
mov
sbb
xor
arpl
dec
and
sub
sub
call
sbb
xchg
out
repnz
scas
xchg
icebp
orl
fsubr
sbb
or
xor
adc
inc
xchg
sub
lds
sub
push
mov
arpl
jae
jl
cmpsb
and
jb
sub
sub
cmp
pusha
mov
inc
cmpl
xor
dec
dec
inc
insb
dec
xlat
shlb
out
push
xor
mov
add
mov
xor
push
mov
rcll
outsb
add
stc
pop
andl
cmc
push
mov
push
call
rol
fs
imul
jb
push
mov
and
pushf
inc
sub
in
add
dec
dec
mov
jo
jg
mov
out
daa
int3
sti
out
addr16
das
sahf
outsb
xchg
or
sub
loope
mov
movsb
mov
into
dec
cmpsl
push
jle
lods
add
fcoml
jge
cmp
lahf
cmp
sahf
cld
sub
aas
ss
or
xor
shl
sub
loop
fdivrs
push
xlat
add
fisubrl
lods
lcall
xor
and
or
pop
das
aas
jno
adc
xchg
push
out
movsb
mov
ss
and
cmp
mov
fldcw
rep
rep
dec
leave
and
shlb
jns
inc
jle,pn
lret
or
js
mov
cmp
daa
mov
push
jmp
sbb
cmp
cmpsl
jmp
xlat
inc
xchg
sbb
insl
push
jnp
lods
cmp
ja
js
fldt
lret
dec
xchg
mov
mov
mov
stos
xor
pop
add
cmp
pop
rcll
xor
sub
test
sbb
sbb
jne
push
or
scas
lods
out
fstps
pop
push
cmp
vmptrld
addr16
filds
incl
sbb
stc
cld
jb
pop
iret
sub
xor
aas
xchg
icebp
jecxz
mov
mov
push
into
jb
xchg
pop
addb
fwait
pop
xchg
imul
cmp
mov
jno
aad
lahf
orl
jbe
out
jbe
sbb
mov
or
jmp
dec
jecxz
mov
push
repz
js
pop
lods
and
and
imul
sbb
cli
inc
mov
mov
mov
cmp
int3
out
fnstenv
push
mov
lret
pop
inc
rcrb
aaa
adc
insb
lods
mov
push
push
adc
pop
vandnps
pushf
mov
or
test
sbbb
adc
rcr
dec
inc
into
andl
fs
mov
adc
popa
inc
pop
arpl
in
mov
lea
sub
or
mov
add
and
jns
ja
and
mov
jg
pop
adc
pop
mov
sub
ret
lea
cmc
pop
das
xchg
shll
pop
ss
shrb
adc
movsl
jne
and
jne,pt
outsb
stc
push
push
ss
int3
cmc
insl
and
js
inc
sub
lock
jmp
aas
cmpsl
cmpsl
popa
mov
inc
cmpsl
mov
push
mov
fcmovbe
dec
in
jnp
sarl
gs
push
mov
sbb
loopne
mov
mov
inc
mov
jle
test
cmpsb
das
pop
push
mov
dec
mov
jnp
add
xor
add
dec
jns
mov
out
pop
stos
cmc
bound
pop
mov
imul
int3
das
mov
imul
std
repnz
test
or
xchg
lds
jo
js
ss
repz
inc
bound
dec
imul
out
mov
cwtl
in
push
xchg
dec
clc
mov
rorb
push
jecxz
out
loope
rolb
or
test
cltd
in
int3
xor
je
xchg
adc
movsl
faddp
mov
addr16
inc
cs
in
jne
push
out
rcrb
ja
nop
jmp
jns
jns
jb
decl
mov
lock
fsubl
scas
and
push
push
add
jb
pop
hlt
outsl
and
cmp
rcl
push
int
test
dec
popf
icebp
dec
daa
xor
int3
push
mov
pop
pop
data16
xlat
leave
cmpsl
ds
outsb
nop
xor
jle
shlb
popf
jg
mov
sub
outsb
sub
push
pop
imul
push
into
sti
jmp
push
cld
mov
mov
fiadds
imull
lds
push
mov
inc
in
jg
iret
push
int
cmp
pop
ljmp
enter
mov
cmpsb
cld
int
nop
sub
shlb
inc
mov
jb
out
add
nop
pop
pop
insb
sbb
mov
rcll
xorw
mov
nop
cmp
movsl
dec
movb
cld
dec
iret
push
js
push
cltd
mov
ror
push
mov
adc
repnz
sub
xchg
es
push
std
mov
and
push
popf
jl
out
pop
xchg
jge
sbb
popf
push
lods
mov
movsb
dec
mov
inc
adc
imul
xchg
sbb
cmpsl
sub
push
addr16
daa
loopne
in
add
shl
stc
mov
stos
out
std
push
push
ja
mov
mov
mov
fadds
jg
jmp
dec
adc
je
ret
mov
idivl
lcall
cmp
fs
data16
stc
dec
jg
xor
or
add
mov
pop
xlat
arpl
inc
iret
pushf
loope
sub
sub
cmpsl
cmp
cmpsl
pop
jg
fwait
and
sbb
negl
jle
divb
adc
cmp
ret
mov
push
jno
shll
or
aam
xchg
mov
jbe
or
add
int3
adc
out
lcall
nop
dec
dec
inc
and
or
inc
cwtl
or
pusha
pop
xorb
stos
cltd
xchg
scas
mov
push
and
fsubl
push
aas
fs
or
push
popa
outsl
pop
inc
push
shrb
in
cmp
sub
push
pop
insb
shrl
movsb
add
mov
rcll
mov
jle
push
push
outsb
inc
adc
mov
adc
daa
cli
adc
cmp
clc
mov
push
mov
loopne
push
dec
and
adc
add
rolb
inc
jae
sahf
jp
cs
add
and
mov
push
je
lea
shrd
icebp
xchg
iret
lcall
sbb
and
faddl
out
push
mov
fimuls
or
cmpsl
jle
mov
test
jecxz
mov
push
out
jp
pop
imul
cld
mov
push
mov
xlat
lret
insb
mov
imul
mov
adc
outsb
fwait
je
and
or
outsl
scas
xor
cmc
shlb
mov
clc
jg
push
hlt
sub
cmpsl
cmp
sub
insb
je
vcvtps2dq
sti
fsubrl
push
inc
imul
xchg
sub
jo
fidivrs
mov
ret
mov
and
fcmovne
adc
xor
mov
fiadds
shlb
jnp
push
adc
sbb
popa
pop
fwait
ret
inc
lea
push
sahf
and
inc
les
enter
add
adc
and
incb
scas
xor
pop
pop
xor
sbb
mov
aaa
jo
pop
jp
mov
pop
push
pop
cmc
data16
aad
jo
shlb
sbb
sbb
jmp
pop
push
imul
jp
push
icebp
pop
jno
loopne
sub
mov
subb
pop
dec
out
rcll
adc
xchg
addb
lods
cmp
push
jnp
or
clc
jne
loope
aad
nop
cmc
mov
pop
xchg
pop
mov
sub
test
mov
pop
mov
mov
mov
fsubrp
movsb
cli
mov
dec
aas
ss
cmp
sbb
cltd
xlat
or
int
enter
jnp
out
fidivs
or
scas
lock
repz
push
add
nop
test
in
scas
mov
stc
notb
mov
jle
xor
je
aad
cld
push
out
and
mov
mov
cmp
push
stos
jge
or
aaa
rorb
mov
sub
lcall
or
inc
scas
mov
push
sub
and
clc
jg
out
cmp
aam
pop
out
in
mov
loopne
cmp
call
cmp
hlt
dec
ret
xchg
ja
sbb
cmpsl
or
jge
mov
sbb
je
inc
adc
adc
push
push
shl
push
push
jecxz
pop
dec
mov
push
stos
push
mov
je
cmp
fisttpll
adc
rorb
in
int
testl
and
loopne
xor
loop
in
add
cmp
ljmp
push
into
add
add
test
enter
bound
jle
loopne
xchg
dec
inc
hlt
pop
pusha
xor
dec
repz
jmp
or
test
pushf
into
mov
mov
imul
arpl
stos
xchg
test
jp
push
ret
push
add
sbbl
pop
dec
scas
insb
xchg
inc
add
and
in
ljmp
scas
cmp
dec
push
movsl
mov
jno
arpl
mov
and
imul
popa
push
mov
xor
jno
pop
mov
cmp
mov
outsl
dec
rcr
xor
sub
xor
ds
or
xchg
in
popf
or
inc
mov
lds
push
sbb
add
lret
pop
xchg
stc
or
out
xor
cld
sbb
fdivr
inc
add
mov
adc
dec
aas
dec
adc
xchg
xlat
lret
into
add
xlat
addr16
imul
mov
cltd
lock
xlat
or
roll
dec
aas
mov
mov
pop
test
push
out
test
xor
adc
mov
addr16
push
dec
arpl
das
cs
mov
aad
lods
js
subb
jmp
cmp
add
test
pop
or
mov
jge
sahf
push
insl
insb
imul
jecxz
inc
push
in
mov
cmp
jmp
loope
aas
aam
stos
push
loop
in
ds
lds
loope
cld
jl
ja
add
cli
cmpb
and
adc
mov
test
xchg
mov
dec
fwait
and
pop
push
mov
movsl
fs
jp
test
jle
ljmp
adc
xorl
jns
fisttps
lcall
sbb
rol
jmp
loop
add
outsl
loope
dec
notl
ret
and
or
lods
cltd
ja
or
pop
loopne
out
mov
outsl
sbb
mov
mov
pushf
mov
dec
mov
push
out
fnstcw
pop
jne
cs
mov
lds
fucomp
in
gs
aaa
mov
xorb
jns
add
mov
adc
pop
mov
cld
mov
in
testl
mov
jecxz
or
xor
sbb
lods
or
cli
out
xchg
lods
mov
std
push
inc
xor
test
push
jge
mov
rcrl
pushf
mov
xchg
mov
inc
push
jno
fisttpl
push
adc
outsl
mov
sub
inc
and
enter
cmpsb
inc
leave
in
mov
mov
mov
out
stc
cmp
andl
stos
add
jecxz
mov
je
or
push
shl
xor
mov
inc
or
cmpsl
mov
mov
dec
cmp
in
ss
push
sub
sbb
dec
hlt
mov
xor
pop
xchg
jns
mov
in
incl
xor
divb
hlt
sub
push
jno
loope
push
outsb
or
pushl
jnp
daa
push
jmp
lret
cmpsl
sahf
jg
ret
pop
cli
call
nop
xor
cs
xlat
push
push
mov
sub
jmp
mov
mov
test
fstps
fnsave
pushf
xor
sub
out
fdivp
in
dec
and
sahf
loopne
inc
les
push
repnz
ret
sarb
push
or
pop
xor
enter
dec
inc
ret
mov
out
lock
mov
insb
pop
std
xor
ja
jecxz
mov
jecxz
jnp
mov
inc
mov
mov
sbb
call
insl
dec
aad
and
jle
push
stc
mov
sbb
sbb
movsl
pop
sub
jne
and
xchg
inc
cmp
xchg
add
test
sbb
xchg
fidivs
stc
push
mov
cmp
popa
add
je
push
into
iret
aam
inc
xchg
btc
cmp
cmpsl
mov
cmp
dec
das
loop
jle
fisubl
les
out
dec
iret
xor
lock
mov
je
lahf
mov
push
fsubl
mov
add
testb
dec
mov
dec
test
sub
test
xor
sub
xor
jle
pop
jecxz
mov
rcrb
mov
enter
ss
sub
mov
sub
fbstp
fdivl
lahf
pop
test
mov
ljmp
popf
adcl
or
cli
outsb
mov
outsl
push
mov
sbb
mov
jnp
sbb
in
jecxz
shlb
xchg
mov
add
movsl
push
push
jmp
xchg
inc
test
lods
add
div
scas
daa
mov
std
aaa
inc
ret
cmp
inc
int
xor
cmp
out
imulb
ss
out
bsf
outsl
inc
adc
push
lahf
aaa
mov
outsl
cmc
push
mov
xor
add
rcrb
in
notb
mov
pop
ss
int
mov
stos
fs
inc
outsl
add
aaa
aaa
ret
pop
dec
mov
fwait
sub
cmp
or
push
push
mull
dec
or
lahf
popf
mov
pop
mov
pop
fsub
adc
cmpsl
loope
push
imul
lods
push
mov
int
mov
xor
cmpl
pushf
mov
fmuls
dec
add
arpl
mov
cmp
inc
jmp
lds
cmpl
mov
xchg
ja
and
dec
mov
ljmp
jbe
and
sub
data16
jbe
adc
test
cwtl
xchg
mov
icebp
jge
and
sub
jl
pusha
mov
lret
inc
rolb
jb
shlw
and
mov
movsl
imul
andl
sub
dec
fldt
sbb
xchg
shl
inc
xchg
xor
adc
mov
lea
mov
pushf
repz
adc
adc
fwait
or
fneni(8087
aam
cmp
js
aam
loope
pop
bndstx
xor
sub
or
lea
mov
in
cmp
push
cli
mov
fcomip
adc
push
mov
and
daa
jg
cmp
les
cmp
cmp
xchg
shrb
imul
xchg
add
add
mov
sub
xchg
dec
adc
push
imul
mov
sbbb
pushf
ja
in
cwtl
mov
cmpsl
or
pop
add
add
lret
leave
cmp
jo
pop
or
mov
arpl
sbb
and
bound
mov
sbb
fsubr
or
mov
mov
mov
punpcklbw
sbb
xchg
data16
fisubrs
and
pop
mov
or
ficoms
aam
xchg
jge
cmp
and
cltd
cld
packssdw
out
mov
adc
test
dec
and
in
cmp
stc
fldl
cmpsl
cmp
pop
dec
mov
lods
aam
scas
cltd
dec
cmp
imul
rolb
adc
clc
adc
and
dec
push
rclb
push
and
mov
das
repnz
jecxz
inc
fdivl
adc
das
js
mov
mov
imul
fwait
or
lret
xlat
and
cmp
fadd
push
fmuls
mov
test
dec
in
jmp
push
insb
xchg
fcomps
push
mov
decl
lock
xlat
loopne
popa
mov
stos
fildl
and
sub
aaa
ja
sahf
mov
ficomps
outsb
jp
mov
push
popa
xchg
pop
jne
add
movsb
lea
in
data16
rcr
imul
arpl
rcr
dec
idivl
push
daa
fists
xor
data16
out
jle
cmp
xchg
adc
test
add
pop
sbb
or
inc
jmp
pop
mov
inc
jo
mov
popa
and
mov
mov
mov
adc
lahf
xchg
adc
pop
movsb
mov
inc
sti
jl
lcall
cld
and
ret
xor
cli
xor
sbb
or
rolb
out
mov
mov
adc
clc
xor
dec
scas
pop
and
scas
rol
xor
adc
sbb
lahf
stos
pushf
rcrl
or
ficoms
pop
mov
xchg
aad
mov
iret
mov
adc
fisttpll
xor
xchg
fidivs
inc
out
out
lret
in
cmp
dec
andl
js
into
push
cltd
cmpsl
push
cmp
xchg
fisubrs
loop
pop
addl
push
jo
push
aam
popa
sub
sbb
push
stc
inc
mov
mov
sub
xchg
sub
push
fwait
enter
pop
into
out
push
push
lods
ss
mov
jae
cmp
mov
cmp
fcmovb
je,pt
pop
fimuls
shll
out
incb
add
ret
js
loop
inc
shlb
or
push
sbb
lahf
mov
cmp
dec
std
pop
movsb
out
nop
out
jo
sub
or
imul
movsb
lock
cmp
int3
xchg
push
stos
clc
je
outsl
inc
jnp
push
mov
shl
mov
pop
or
pop
and
je
cmpsb
inc
scas
iret
xchg
not
out
int
fucomip
and
mov
inc
mov
cmpps
mov
or
in
sbb
push
pushl
rcrl
call
jnp
cmp
xchg
movsb
fisubrl
pop
mov
sub
mov
pop
cs
cmp
adc
pop
push
ret
fs
shrl
bound
xor
mov
mov
mov
lds
je
cmp
pop
test
je
es
incb
rcr
sub
sbb
mov
push
xor
adc
mov
mov
ret
jne
push
xchg
fdivrs
imul
push
mov
and
pop
xchg
pusha
les
sbb
aam
lock
add
push
pop
ljmp
movsb
pop
push
push
dec
ja
pop
sub
cld
jne
out
test
and
pop
lret
repz
ljmp
scas
lods
pusha
mov
mov
or
push
mov
mov
mov
adc
sub
mov
pop
loope
sub
outsb
sarb
adc
test
pop
xor
inc
popf
or
mov
fnstsw
pop
pop
fiadds
lcall
fiadds
sub
lods
outsb
push
pop
hlt
xor
cs
or
repnz
push
pop
pop
enter
cmc
das
ret
js
jb
pop
mov
icebp
arpl
sahf
cwtl
out
jle
adc
or
push
or
jg
cmpsl
les
loope
sub
xchg
hlt
in
pushf
fbld
cmp
mov
inc
xchg
mov
jne
jne
cltd
imulb
iret
fdivs
cmp
scas
std
incb
adc
je
push
mov
movsb
jns
js
add
cmc
inc
push
cmp
enter
popa
dec
aam
mov
pushf
xor
mov
jle
stc
mov
jbe
cwtl
cltd
lahf
and
xchg
jae
pop
jle
push
adc
fistps
sbbl
out
fbstp
incb
stos
inc
aaa
cmpl
je
jmp
mov
xor
xorps
xchg
sub
pop
sbb
jo
push
out
shl
and
lods
mov
adc
adc
movsb
dec
in
dec
inc
push
mov
cmc
xor
popf
push
push
pop
imul
js
xor
xchg
add
jo
stos
les
push
mov
jle
addr16
aad
dec
ret
insl
inc
loop
cmpl
mov
ss
subl
lods
notl
jb
adc
mov
sub
push
inc
mov
push
and
mov
or
ss
or
lds
int3
sbb
test
dec
loope
add
inc
not
out
mov
cltd
lret
les
aas
inc
jg
mov
jo
mov
ss
cmc
jne
xor
fcomps
sbb
fwait
inc
mov
lahf
lret
mov
stos
lcall
mov
loopne
mov
jp
popf
sahf
push
stc
ret
shlb
icebp
roll
inc
mov
sub
stc
push
mov
addl
push
loope
ds
or
int3
stc
mov
mov
pusha
add
mov
pusha
pusha
sbb
jb
imul
mov
leave
add
int3
fs
icebp
mov
xchg
ror
hlt
xchg
mov
sarb
mov
lahf
je
adc
out
or
mov
xor
lods
and
mov
inc
dec
sbb
mov
gs
repz
loop
inc
lods
mov
inc
ret
aad
mov
push
pop
lods
stos
jno
adc
push
rolb
jo
rcll
dec
xlat
xlat
call
insb
in
lods
inc
movsb
cmp
das
push
xchg
test
out
cmp
xchg
mov
shl
aaa
pop
std
adc
cmp
or
fildll
and
mov
adc
mov
sub
enter
mov
aam
xchg
jb
cmpsl
or
inc
adc
loope
mov
popf
inc
jp
mov
ret
inc
cmp
pop
out
sub
inc
push
push
add
push
pop
or
xor
ja
dec
aaa
enter
aam
daa
mov
jmp
cld
xchg
ss
test
push
dec
int
sub
leave
orl
dec
xchg
cmp
mov
xor
cmp
test
orl
pop
and
loope
push
adc
nop
sbb
xor
add
iret
and
pop
imul
sub
inc
pop
adc
lret
pop
add
int3
adc
lcall
in
jg
out
fcmovbe
push
into
push
or
push
push
rcll
jp
sub
loop
sub
xchg
outsl
jl
dec
inc
add
xor
stc
lock
fistpl
outsb
leave
pop
cmp
hlt
or
aam
pushf
and
stc
and
adc
jb
xchg
mov
cltd
jmp
adcl
pop
jecxz
sub
nop
jl
fisubs
jge
gs
icebp
adc
cmp
cwtl
adc
fdivr
mov
mov
sbb
aaa
dec
mov
sti
rcll
in
mov
mov
xchg
mov
push
ret
lock
scas
ret
mov
mov
fstps
dec
inc
test
loope
dec
loop
je
in
stos
pop
pop
shrl
int3
lods
aam
shrb
cmc
in
sub
out
push
orl
xchg
bnd
adc
pop
call
cmp
add
flds
xchg
and
int
js
dec
insb
mov
xor
fwait
int
sub
add
add
out
lods
mov
cltd
jae
cli
lcall
dec
nop
mov
push
lods
aaa
inc
jge
add
sub
mov
hlt
rolb
add
enter
adc
add
in
test
mov
mov
mov
sbb
jno
sbb
dec
stos
jg
mov
mov
xchg
out
add
cwtl
mov
lcall
push
sbb
mov
xchg
sub
cmp
xchg
jns
mov
pop
mov
xlat
int
in
or
lea
and
imul
cmp
push
cmc
dec
mov
push
cwtl
jns
ljmp
lock
je
mov
fsubrs
mov
sti
push
fimull
cmp
pop
repnz
and
pop
cltd
dec
bound
xchg
xchg
stc
cwtl
lcall
mov
jnp
dec
cs
loop
push
pop
leave
mov
push
xor
mov
cld
pop
mov
fsubr
xchg
out
push
add
hlt
out
xchg
in
pop
hlt
adc
mov
shrb
movsl
in
sbb
pusha
and
push
and
mov
mov
push
mov
int
sub
dec
bound
fidivl
or
sbb
mulb
in
add
xchg
ror
inc
rclb
mov
adc
jns
dec
sbb
mov
ljmp
adc
cmp
push
xlat
andb
mov
inc
ss
sub
test
nop
adc
ljmp
xchg
sub
and
mov
outsl
imull
sub
sub
mov
dec
in
cmpsb
sbbl
cld
jecxz
mov
lcall
dec
xor
mov
scas
xchg
icebp
pop
pop
das
into
lock
adc
clc
testl
push
scas
pop
mov
jge
sub
pop
lods
pop
dec
cmpsl
out
push
push
test
adc
xor
stc
adc
dec
jl
add
test
cmp
lahf
lcall
aad
test
leave
icebp
jae
adcb
push
xor
outsb
jmp
fdecstp
pop
sbb
push
xor
aaa
lret
lods
inc
repz
test
stos
pop
test
push
mov
and
fisttpl
sbb
dec
push
inc
push
inc
inc
jg
gs
inc
out
sbb
xchg
mov
xchg
inc
or
daa
xlat
xchg
loop
pop
mov
inc
pop
pushf
flds
les
faddl
jmp
shll
mov
push
pop
add
test
fldenv
pop
jl
out
lods
in
pushf
mov
mov
jp
jl
std
lret
cmc
cmc
adc
mov
mov
pop
xor
adc
dec
js
adc
and
push
xorl
or
adc
pop
ret
in
push
adc
lds
jl
enter
insb
cmp
cli
sbb
fs
shrb
xor
jbe
clc
aad
jmp
ret
pop
rorl
xor
stc
movsb
sub
add
jmp
inc
hlt
inc
push
hlt
jbe
ja
imul
sbb
sub
and
and
loopne
ljmp
push
mov
in
andb
sbb
jae
jmp
cltd
pop
add
fsts
dec
xor
lret
adc
cs
pop
pop
push
push
adc
dec
outsb
pop
lock
ljmp
inc
imul
add
sbb
and
mov
lock
and
dec
push
dec
ret
xchg
mov
xorl
fcomp
clc
fdiv
sbb
push
sbb
and
addr16
ljmp
xchg
sbb
mov
cmp
gs
inc
mov
sbb
sbb
test
push
inc
outsb
pop
shl
movsl
enter
int
xor
mov
fidivs
push
dec
ret
mov
mov
and
icebp
jo
out
xor
dec
xchg
sahf
pop
leave
std
ret
add
leave
mov
dec
in
outsb
icebp
cmp
and
adc
inc
mov
xorb
cs
inc
pop
cmpsb
inc
jmp
andb
cmc
sub
jne
movsb
or
jge
lea
jnp
adc
insb
sbb
aaa
shlb
push
cld
pop
adc
push
stc
mov
xor
es
push
and
push
mov
idiv
je
push
xor
inc
mov
mov
add
stos
or
cld
jmp
dec
add
sub
clc
push
rcll
jb
xchg
ljmp
cmp
adc
fst
add
femms
psrad
mov
clc
int3
and
xor
mov
fchs
movsl
cmp
mov
rcr
mov
cmp
and
push
jo
add
mov
mov
xorb
fstl
mov
mov
or
bound
push
add
sti
hlt
int3
jle
jle
xchg
je
nop
xor
inc
jecxz
inc
cmp
aaa
stos
shrb
shr
fmulp
sbb
stos
cltd
xlat
clc
sub
xchg
mov
lods
xlat
aad
xor
adc
andb
or
fidivl
mov
jbe
iret
dec
mov
cmpsb
or
sub
lret
jne
cmp
push
inc
rcrl
jecxz
aas
insl
sahf
mov
fs
jae
jle
les
fldenv
mov
fimull
cmp
add
xchg
fcmove
dec
cmp
jae
int
mov
enter
mov
nop
or
pop
sbb
popa
insl
in
mov
insb
dec
cltd
push
jp
fstps
sbb
test
add
rcrb
inc
and
mov
xchg
call
cmp
arpl
test
jo
push
je
rcrl
sub
adc
inc
repz
sbb
rolb
sub
jmp
ss
cmp
mov
shrb
mov
pushw
icebp
insl
movsb
in
ss
imul
shrb
test
lods
pop
push
mov
ret
divb
and
xchg
test
add
mov
pop
movsl
pushf
arpl
das
xchg
mov
add
cld
addr16
pushf
aam
insl
lock
outsb
jecxz
rcrb
and
mov
dec
out
inc
push
adc
and
sub
pusha
jl
mov
mov
les
xchg
pop
jle
mov
test
xor
loop
fmulp
insb
dec
es
cld
sub
push
fiaddl
cwtl
cmp
mov
movsl
mov
out
faddl
lock
loopne
dec
cs
mov
das
adc
clc
test
inc
push
repnz
ret
scas
xor
jp
jge
lods
jp
mov
mov
outsb
dec
insl
xchg
fsubs
add
and
adc
jne
dec
add
sbb
xor
lds
lret
and
out
imul
sub
mov
add
inc
jb
data16
clc
push
xor
fdivr
jge
cmc
cmp
ja
cmp
loop
adc
addr16
mov
lret
movsb
jle
mov
inc
inc
jb
xchg
dec
lahf
jo
and
test
leave
jecxz
in
sbb
cmpl
scas
mov
imul
and
mov
xor
push
mov
sub
es
jb
lret
shll
scas
mov
jbe
push
dec
clc
scas
inc
repnz
ja
xchg
jge
test
ljmp
rcrb
sub
push
call
jge
daa
call
fadd
aam
xchg
sub
xchg
ret
in
push
aas
xchg
out
jno
dec
int3
adc
fwait
pop
push
cmp
addr16
pop
xlat
cmp
test
push
psubb
shll
cld
mov
push
loop
cwtl
pop
cmp
lea
jle
mov
xorb
pusha
inc
sahf
pop
cltd
mov
repz
movl
mov
test
push
leave
ror
cmpsl
scas
xor
cmpsb
mov
inc
icebp
in
dec
adc
dec
movsb
loope
mov
and
neg
dec
sub
movb
mov
xor
ret
and
in
mov
lds
sbb
std
xor
ficomps
and
or
addb
fisubrl
nop
rolb
addr16
inc
packsswb
cmp
sarl
add
inc
push
jecxz
stos
scas
fldcw
jg
and
daa
lods
xchg
mov
pop
adc
rcl
dec
pop
cmp
xchg
out
mov
shlb
sub
dec
push
mov
adc
xchg
xchg
in
movsb
adcb
cmp
mov
mov
pop
adc
std
cmc
xor
sbb
mov
aas
psubsb
arpl
and
inc
loope
push
sub
pop
pop
cltd
jle
or
push
cmp
mov
pushf
icebp
mov
clc
das
jge
ja
push
movsb
and
sbb
or
enter
pop
sbbb
fs
call
push
or
out
sar
mov
bound
and
mov
in
or
std
sbb
sub
ss
loope
jno
mov
cmp
lods
cmc
pop
ljmp
hlt
pop
and
test
icebp
test
test
ffreep
pop
shlb
out
xorl
cmp
in
dec
movsb
inc
and
inc
dec
push
popf
and
pop
push
push
xchg
fsts
mov
les
sub
fsubs
sub
xor
dec
andb
repz
pop
gs
adc
lock
imul
xlat
lahf
cmp
movsb
loopne
shlb
ds
and
push
bnd
mov
jg
and
pop
xchg
addr16
cmp
xchg
pop
mov
inc
lahf
imul
imul
dec
jo
and
mov
and
jmp
mov
int3
test
not
rolb
es
sub
aaa
ss
das
cmp
xchg
ficoml
pop
pop
test
in
idivb
pop
sub
sbb
xor
jmp
or
jmp
sub
mov
out
push
mov
aas
jns
psrlw
stos
add
mov
jecxz
sub
subl
push
icebp
lcall
sub
daa
ss
ss
pop
cmpsl
pusha
fisubrs
adc
out
leave
mov
mov
sbb
or
mov
stc
test
imul
ljmp
int3
mulb
fists
mov
and
out
movsl
dec
fstpl
cli
push
bswap
mov
pop
pop
jnp
mov
inc
fldt
push
pop
psubb
sbb
and
mov
cli
mov
mov
xor
in
mov
and
daa
pop
loope
sbb
nop
push
mov
out
jne,pn
xchg
loope
out
cmp
dec
mov
mov
cmp
hlt
lock
xchg
scas
xor
out
pop
inc
std
popf
and
ret
mov
xchg
mov
mov
rcr
adc
stos
dec
push
lods
stos
in
je
adc
jecxz
add
jns
in
cmp
fisttpll
loope
sti
push
and
cli
dec
mov
push
jg
loope
push
or
cmpsl
sbb
xchg
cmp
mov
sahf
jg
sti
pcmpgtw
adc
insl
addr16
sub
inc
cwtl
xlat
jns
sub
in
push
add
mov
mov
fwait
add
lret
mov
sbb
fwait
lock
ljmp
cmp
sub
or
jecxz
cwtl
rcl
sub
xor
arpl
pop
sahf
lret
xchg
lret
fmuls
mov
loop
cmc
jl
jbe
sbb
into
ljmp
into
jmp
inc
pop
xchg
outsl
adc
movsl
stos
gs
imul
jl
imul
xor
addr16
fsubrl
je
jmp
testb
int3
xor
fyl2x
sub
mov
and
dec
stos
dec
repz
repz
add
cli
sti
xlat
jb
mov
aam
or
fs
into
sub
leave
je
adc
adc
pop
into
jae
es
aas
xor
sbb
js
xchg
ja
ficoml
sub
jmp
repz
push
aam
test
sarl
rorl
jecxz
leave
sarl
xchg
nop
or
fsubs
pop
or
cmp
xor
inc
lea
mov
push
icebp
les
mov
xchg
xchg
jge
test
pop
jmp
add
fsubrp
jg
push
jmp
inc
adc
gs
and
mov
in
mov
cltd
cmpsb
inc
mov
dec
xor
ds
cmpsl
sub
js
pop
dec
mov
lods
shl
jns
xor
outsw
inc
dec
mov
or
ss
and
mov
add
inc
pop
pop
cmp
push
sti
mov
or
sbb
xor
sub
push
cmp
xor
data16
push
ret
pop
fdiv
fmull
mov
in
sub
cmp
pop
jp
xchg
fadd
mov
pop
outsb
push
push
xchg
stos
add
pop
inc
and
fcmove
or
test
xchg
stos
js
outsb
mov
shlb
mov
adc
xlat
je
lret
fisttps
ljmp
push
jp
dec
cmc
in
add
mov
aaa
mov
jecxz
cmc
lods
push
dec
mov
aaa
imul
out
xchg
aad
or
sahf
outsl
xchg
push
jge
push
dec
xchg
jae
fistps
adc
fstl
and
jbe
cmc
clc
pop
int3
mov
mov
test
sub
lods
xor
adc
rorl
shl
fisttpll
rorb
pop
inc
push
sbb
push
mov
je
mov
rcll
ret
xchg
jae
in
dec
clc
ror
mov
jns
arpl
mov
lock
cvtpi2ps
ds
pop
hlt
and
push
jp
pushf
icebp
fsub
pop
mov
dec
jmp
pop
js
dec
inc
imul
mov
insb
scas
push
push
cltd
sahf
les
inc
xchg
pop
in
lods
mov
add
sti
mov
stc
stos
xchg
lds
loop
insl
in
and
adc
fcmovbe
adc
push
jmp
cmp
mov
jae
mov
sbb
push
ret
imul
or
pop
pop
lea
lea
ss
shrb
inc
or
pop
or
lea
ljmp
cld
call
test
sub
test
gs
mov
mov
sbb
mov
jp
add
push
mov
mov
into
push
jmp
jns
add
lcall
jle
xchg
frstor
mov
popf
arpl
faddl
mov
xchg
ljmp
rorb
decl
ffree
into
addr16
sti
pop
rolb
movsb
iret
mul
sbb
sahf
push
repnz
xorb
or
scas
adc
jns
cs
mov
cmp
push
pop
imul
jnp
add
fmull
mov
sub
mov
fwait
cmp
sbb
push
xor
dec
fcoms
adc
mov
adc
scas
test
roll
pop
mov
imul
adcl
clc
lahf
pop
js
xchg
shlb
jo
sub
or
or
sbb
movsb
lods
inc
lahf
stos
dec
int
jg
and
les
rcrl
mov
cmp
std
arpl
scas
scas
sti
and
fnsave
andl
sbb
dec
push
popf
and
in
and
mov
int
lret
imul
aam
adcl
mov
popa
sbb
addr16
jo
inc
int3
sbb
icebp
es
mov
jmp
sbb
fs
add
test
repnz
mov
push
mov
lods
pop
mov
jle
pop
xorb
mov
decb
sbb
jae
mov
subl
sub
aas
clc
movsb
leave
push
cmp
js
dec
pop
mov
out
lea
cltd
jle,pn
loope
icebp
sbb
int3
shl
hlt
sub
hlt
imul
and
mov
addr16
mov
jecxz
jmp
bound
mov
shr
jl,pt
call
mov
hlt
popa
stos
jnp
push
pop
push
xor
pushl
data16
sbb
js
scas
fs
outsl
stos
insb
and
adc
roll
out
sbb
pop
jae
mov
lea
and
or
pop
mov
lahf
cmp
lds
jnp
pop
insl
sti
add
enter
jmp
gs
push
in
fbld
out
mov
push
mov
mov
jg
popf
inc
fidivrl
inc
insl
ret
mov
pop
jp
cwtl
fldcw
fwait
hlt
insb
push
scas
mov
loop
push
xor
test
inc
xchg
jecxz
xchg
repz
cmp
addr16
movsl
shll
xor
movsb
jge
adc
mov
pushl
sub
in
pop
cld
add
daa
adc
lea
cmc
push
ds
pushf
sub
push
xor
lea
iret
repz
lret
lds
mov
shrl
punpcklbw
lcall
stos
cmp
jo
xor
xchg
sbb
in
adc
jmp
jnp
and
out
mov
mov
or
lods
sarl
rcll
mov
add
mov
xchg
jg
jle
outsb
jb
sub
push
jecxz
rolb
adc
imul
test
cld
or
jns
push
pop
jb
jecxz
xor
sbb
ja
mov
xor
movsb
and
inc
fdivrs
fistpl
arpl
lods
ljmp
icebp
sbb
jp
cmp
pop
jge
add
test
xchg
sub
mov
hlt
mov
das
sub
dec
iret
int
mov
and
jecxz
rclb
aad
stc
add
fildll
xchg
repz
ja
dec
push
mov
int
hlt
outsb
iret
inc
mov
mov
mov
push
pop
jp
sbb
sbb
jmp
pop
jmp
push
or
leave
jo
out
add
adc
fsubrl
int3
cmpsb
jge
cmp
mov
add
jns
lds
rcl
pop
push
pop
lcall
jbe
xchg
sbb
add
rclb
jne,pt
jmp
jne
pop
and
xchg
test
dec
jno
pusha
cmpb
sub
xor
lods
and
xchg
dec
xor
in
jecxz
adc
pop
sub
mov
cmpsb
jno
sbb
mov
add
dec
adc
out
and
cmp
mov
das
les
adc
mov
sbb
loope
mov
mov
scas
mov
iret
mov
cwtl
and
sbb
lret
sub
jo
cwtl
push
cmpb
lcall
xchg
dec
add
adc
jle
outsb
xor
arpl
int3
inc
mov
popf
cmp
xorl
jae
inc
dec
mov
scas
ret
pusha
add
xchg
fidivs
jl
fcmovu
in
mov
popa
aad
or
mov
dec
cwtl
aas
jnp
sub
insl
jns
shlb
add
or
add
imull
outsl
push
pop
out
lods
fimuls
imul
push
pop
nop
sub
cwtl
test
xor
or
inc
pop
jb
and
sub
rcrl
jge
cmpsl
fisubs
xchg
sti
filds
pushf
sbb
sbb
mov
mov
mov
push
lock
push
call
sar
inc
jp
imul
nop
mov
dec
fisubs
lcall
push
or
lahf
shr
loope
bound
daa
inc
sub
das
push
xchg
cmp
outsl
cmp
aad
insl
fucomp
cwtl
sbb
inc
loope
movsl
adc
fcompl
sbb
pop
lret
adc
mov
test
pop
push
fwait
push
leave
and
jne
roll
jbe
in
jmp
xchg
xchg
fstpt
push
cmp
or
cwtl
test
sbbl
mov
or
out
out
test
lods
in
cmp
fistps
psraw
xchg
pusha
mov
popf
nop
clc
pop
jle
and
xor
mov
inc
add
add
jmp
sub
or
mov
testl
pop
rcrl
push
cmp
xchg
dec
sbb
sub
push
jbe
xor
pop
cmp
repnz
add
pop
ja
arpl
sub
iret
mov
push
lods
adc
ror
test
addr16
or
lret
pushf
push
mov
push
mov
xor
xor
scas
inc
adc
mov
enter
push
dec
pushf
push
ficomps
jo
cmp
jbe
testl
sahf
int
push
mov
mov
popf
mov
sti
fsts
inc
dec
testb
adc
ja
mov
sub
dec
adcl
in
xor
sub
fnstenv
mov
sbbl
pushf
cltd
mov
ljmp
int3
fwait
hlt
jns
xor
call
call
pop
add
rcrb
add
imul
mov
movsl
mov
adc
xor
popf
jb
pop
inc
push
jg
call
mov
or
jmp
xchg
in
rorb
jl
cmp
scas
arpl
data16
add
or
jecxz
lahf
add
push
add
and
xor
push
les
lret
loop
xor
pop
popf
cmp
daa
arpl
lea
xor
push
pushf
rcll
and
ljmp
ficompl
pop
into
cmp
jl
fdivl
insb
mov
xchg
lods
stos
hlt
or
shl
mov
scas
stos
dec
mov
adc
rolb
lcall
sub
jno
hlt
inc
and
sbb
out
and
push
fmull
aas
aam
and
popf
adc
mov
or
add
mov
push
fs
ds
mov
push
stc
scas
xchg
outsb
inc
insb
sbb
mov
ss
dec
subl
adc
cmp
enter
das
jb
cmp
fiaddl
mov
mov
jge
adc
xchg
push
adc
lret
nop
mov
mov
dec
xchg
jecxz
rcll
gs
sar
sbb
shrb
rorl
sub
test
or
sub
les
js
popf
xchg
aaa
fmull
stos
jbe
adc
push
test
movsb
sub
fistps
sub
inc
pop
bound
es
popf
dec
mov
addr16
and
xchg
sti
inc
test
arpl
js
fwait
daa
adc
loope
xor
test
lods
out
push
inc
stos
jp
imul
adc
cld
mov
test
out
xchg
jl
inc
mov
fsubrs
ficompl
jno
jno
ret
mov
fmull
pop
stc
bound
jecxz
mov
jge
and
mov
in
not
xor
pusha
movsl
sbb
sti
lock
push
das
sub
testl
cmp
fmuls
addr16
fstps
cmpsl
push
cmp
xor
mov
enter
aas
sbb
enter
stc
lds
lds
pop
dec
test
and
sbb
sub
out
mov
dec
cmp
push
std
add
inc
movq
sub
loope
je
cli
pop
aad
jnp
call
iret
arpl
cmp
ds
popa
pop
lret
ss
mov
negl
mov
sub
inc
sbb
in
push
lods
inc
pop
xchg
mov
imul
inc
and
lea
lahf
mov
ljmp
or
jecxz
icebp
clc
adc
mov
mov
dec
dec
mov
sub
cltd
mov
mov
pop
or
in
sbb
das
cmp
push
aad
push
dec
maxps
stos
inc
sub
push
add
adc
cli
push
xor
xor
cmpsb
xlat
sub
movsb
mov
loopne
dec
inc
leave
sbb
or
aad
filds
mov
add
dec
xchg
xlat
push
imul
inc
xchg
stos
lods
push
sub
pop
insb
add
mov
ret
jns
call
in
popa
inc
lret
ds
add
add
cld
xor
mov
cmp
mov
jle
add
addb
jb
xlat
je
cmp
mov
push
dec
push
lret
mov
mov
xor
adc
mov
cs
cltd
fcoms
daa
inc
dec
dec
mov
pop
pop
cmp
add
xchg
lea
sti
bound
add
sahf
dec
fsubp
loope
xchg
adc
repnz
stos
fistpl
js
inc
out
int3
loope
push
test
mov
push
test
cwtl
repz
mov
dec
add
pushf
and
addr16
mov
push
out
insl
mov
in
aas
das
sbb
cld
jmp
popa
jmp
mov
mov
push
push
push
sbb
stos
outsb
movb
dec
xchg
mov
out
xchg
iret
add
das
iret
push
popa
adcb
notb
shrl
lret
push
adc
loop
fsubrp
aas
xor
or
pop
sub
sbb
std
inc
and
cmpsb
mov
mov
xchg
sub
xchg
fisttps
or
test
clc
pop
add
xchg
cmp
mov
pop
inc
fistpl
mov
js
sub
cmp
sub
mov
addr16
mov
lahf
out
adc
adc
xchg
mov
push
rcrb
push
cmp
push
push
xor
and
xchg
into
imul
and
inc
mov
vphaddubq
jb
mov
test
sarl
mov
jnp
inc
in
ret
hlt
iret
icebp
nop
popa
iret
cmp
int
leave
xor
adc
aaa
les
leave
int3
pop
lea
iret
jge
cmp
inc
mov
lods
push
sub
push
aas
dec
hlt
scas
in
pop
frstor
popa
movl
push
adc
sbb
enter
movb
pop
inc
push
push
push
lock
cmp
jb
roll
lret
jecxz
inc
push
pushf
mov
xchg
es
andl
aad
cltd
add
xchg
mov
fstps
pop
xor
add
pop
clc
aaa
adc
aas
cld
notb
cmp
ljmp
or
jnp
dec
push
xor
stos
je
ja
xchg
mov
out
into
pop
sub
stc
and
mov
sbb
jge
imul
cmp
sbb
inc
sbb
outsb
mov
xchg
jg
sub
sbb
repz
xchg
das
xor
mov
xor
es
xchg
movsb
pop
mulb
fwait
dec
fistpll
daa
and
imul
dec
pusha
lcall
lods
int3
jo
sub
mov
push
or
inc
fmull
jb
cmp
push
cmp
sti
cmp
js
push
pop
adc
xchg
fisttpll
cmp
aas
pop
inc
pop
push
lods
addr16
pop
sti
push
shr
js
sub
mov
call
js
adc
imul
hlt
cmpsl
mov
outsl
xor
jecxz
adc
scas
aas
js
nop
and
sbb
fnstsw
int
ret
sbb
push
lret
push
push
or
mov
dec
push
jbe
mov
pop
cmpsb
test
out
aam
mov
cli
je
mov
jns
mov
ret
sbb
push
js
addr16
push
or
loope
imulb
icebp
fisubrl
and
int3
push
testl
push
mov
jg
inc
jmp
jno
or
bsf
outsb
add
xlat
ror
mov
int3
adc
out
cmp
xchg
fstpt
outsl
scas
data16
push
js
movsl
sbb
dec
lea
addr16
xchg
mov
stos
rcrb
lahf
jg
push
fisttps
fldenv
and
cli
clc
shl
adc
xchg
sub
xorb
and
mov
scas
or
sarb
rclb
aaa
cli
lahf
mov
rol
adc
mov
jns
sub
and
pop
add
in
xor
test
xor
inc
stc
mov
mov
outsb
sbb
and
pop
fcoms
fcoms
jae
les
sbb
sub
dec
rolb
sub
adcl
fnsave
ss
adc
aaa
imulb
call
push
sahf
and
dec
sbb
daa
sbb
push
hlt
movsl
jle
fcmovnu
pushf
ret
lret
ret
push
sbb
outsb
repnz
arpl
jb
mov
test
lahf
mov
inc
inc
dec
test
and
inc
and
sti
xor
bound
test
pop
stos
push
aad
rorb
xor
rcl
outsl
mov
adc
push
ret
sub
mov
dec
out
ljmp
adc
lods
aad
or
lods
in
jo
mov
add
push
outsb
pop
hlt
pop
into
and
xchg
mov
faddl
shlb
jne
test
sub
daa
add
lahf
push
or
mov
jp
lods
add
cmp
cmpsl
ljmp
mov
test
mulb
inc
stos
inc
pop
mov
or
inc
adc
xlat
loop
bound
jae
lods
pop
movsb
adc
push
mov
push
inc
int
loop
popf
xor
scas
xchg
sub
gs
jecxz
pusha
push
jmp
xchg
les
pop
lods
icebp
pop
jg
or
icebp
outsb
iret
hlt
ffreep
mov
push
cli
jl
xchg
stc
pop
mov
daa
gs
and
cld
adc
dec
sub
sub
out
fwait
lds
movsl
add
add
aad
fldt
pop
pop
cmp
or
sbb
mov
mov
sti
or
cltd
cmp
and
ss
cs
icebp
adc
arpl
mov
test
or
les
pop
mov
adcb
push
ret
repz
outsb
nop
adc
lods
sub
xchg
xchg
sub
ljmp
sbb
fs
cmp
add
fwait
popa
icebp
ret
sub
jnp
adc
hlt
repz
lea
flds
xlat
dec
add
sbb
xchg
jbe
jne
inc
jo
add
out
mov
dec
xor
popa
scas
xchg
cld
cltd
mov
int3
jge
adc
jmp
xchg
cmpsl
data16
lds
mov
ret
xchg
pushf
sub
mov
loopne
inc
lock
push
ljmp
add
and
das
cs
adcl
cmc
dec
dec
mov
inc
test
shll
push
ljmp
je
inc
sahf
js
js
cltd
scas
pop
rclb
fstl
push
add
flds
ret
fcoml
popa
int3
shrb
test
divl
in
or
or
lods
mov
cli
and
lcall
fs
adc
pop
push
xlat
sti
adc
ja
sub
xchg
xor
insb
scas
xchg
or
adc
jb
fwait
add
mov
rclb
rclb
stos
pop
mov
inc
adc
loopne
push
loopne
bnd
inc
repz
loopne
cltd
out
es
xor
hlt
xor
stc
lret
xor
mov
sahf
xorl
test
xor
cmp
test
jge
mov
cs
adc
jle
cmp
scas
or
jnp
cmp
mov
push
xchg
xchg
mov
leave
icebp
or
inc
and
push
cmc
not
je
aam
cwtl
jecxz
inc
xchg
lock
bound
add
xchg
or
cld
xor
sbb
mov
int3
jo
push
int3
int3
cmp
adc
mov
fidivl
rorb
insb
mov
test
mov
out
mov
cmpsl
out
in
sbb
mov
xlat
ret
test
dec
jle
jmp
mov
sub
mov
mov
ds
dec
inc
jle
mov
mov
mov
lahf
daa
and
push
pop
aas
enter
xor
sbb
repnz
jmp
mov
cld
push
xchg
push
das
cmpsb
int
in
rolb
add
insl
xor
imul
mov
icebp
stos
inc
bsf
test
aam
lock
ficomps
cmp
stos
xchg
dec
inc
bswap
fidivrs
repz
sub
loop
sbb
lea
mov
inc
mov
pop
and
adc
jno
clc
ret
mov
and
or
cmp
std
jge
xchg
popf
les
push
xchg
mov
ret
adc
ja
cmc
test
ja
jnp
dec
notl
mov
ret
sub
in
mov
sub
loop
daa
lahf
or
movsb
fisttpl
ja
int3
dec
aas
or
and
ja
outsl
ret
mov
add
ds
adc
insb
pusha
push
pop
loop
jo
cwtl
push
xchg
cmpl
xor
shlb
push
push
ljmp
dec
int
pop
shlb
stc
jge
test
xor
sub
pop
pop
push
icebp
pop
outsb
mov
pop
cs
sub
ja
jbe
sub
xchg
mov
fistpll
mov
sub
sub
and
aam
jo,pn
into
and
inc
loopne
cmp
ljmp
enter
mov
jecxz
movsl
outsb
push
jmp
and
xchg
push
mov
adc
lock
movsl
or
shl
mov
hlt
inc
rol
leave
fadds
sub
movsb
sbb
cmp
mov
ja
pusha
push
lods
lret
inc
push
icebp
cmpsb
shrl
push
mov
test
pushl
shll
mov
pushw
outsl
dec
gs
mulb
cmpb
jno
adc
or
test
dec
push
mov
addr16
inc
mov
inc
ret
sahf
aam
or
roll
test
mov
adc
or
clc
sub
cmpsl
movsb
cmp
xchg
pop
out
inc
xor
pusha
dec
add
cmpsb
fbld
sub
iret
push
push
mov
sub
out
lea
repz
dec
mov
fdivl
inc
jbe
in
and
jae
daa
call
dec
or
in
lret
stc
jnp
imulb
adc
mov
and
jbe
out
leave
and
outsl
xor
shrl
mov
or
mov
jg
push
inc
rcll
or
xchg
ljmp
test
mov
inc
mov
repnz
jge
movsb
mov
std
push
mov
clc
xchg
mov
inc
sbb
out
push
sub
push
xor
gs
dec
insl
cli
fcomps
push
leave
iret
pop
pop
lock
loopne
aam
insl
or
add
sub
push
mov
inc
out
test
xor
jno
sub
mov
mov
inc
or
xchg
push
dec
ret
adc
stos
push
xchg
mov
or
xlat
mov
lcall
outsl
insb
fs
mov
jp
out
mov
outsb
pop
into
mov
test
leave
js
cld
movsl
jne
push
cmp
lcall
push
orb
and
dec
andl
dec
imul
in
es
insb
repnz
insb
mov
loope
mov
jl
insl
push
enter
mov
xor
xchg
aad
fimull
imul
bound
inc
addl
jae
and
or
movl
xor
adc
mov
icebp
fs
imul
sbb
cmpsb
and
add
mov
add
or
dec
jl
dec
addr16
lods
cltd
adc
adcb
jne
add
movsl
test
push
mov
push
cmpsl
movsl
stos
mov
pop
push
loopne
pop
mov
stc
repnz
out
stos
mov
dec
in
sub
roll
lods
adc
jecxz
add
push
xchg
sub
aad
clc
data16
sbb
arpl
lods
sbb
loopne
je
pop
imul
pop
or
mov
jo
pop
outsb
sti
ret
lea
xorb
popa
mov
add
pop
hlt
mov
push
outsb
aas
lea
rcrb
mov
clc
pop
aam
add
mov
fildl
js
ret
rcr
or
sbb
insb
xor
je
push
mov
push
dec
insl
daa
xor
repz
jge
inc
mov
push
cmc
push
sub
mov
xor
negb
push
inc
cmp
stos
cmpsl
shrb
jae
shl
fsub
add
xor
or
dec
mov
pushf
add
dec
jmp
icebp
das
jg
cmp
leave
out
and
mov
push
mov
pusha
mov
js
popa
popf
jle
loop
mov
in
sub
sarb
mul
pop
cmpsl
in
scas
xor
jo
jl
mov
push
stos
and
add
mov
addr16
xchg
sar
mov
lea
xor
mov
adc
lret
mov
pop
cmpsl
mov
or
sub
xor
pop
push
jge
cmp
and
js
xor
ss
divl
pop
loope
push
movsl
loop
ret
mov
div
mov
divb
push
mov
movsl
adc
rep
inc
adc
jecxz
push
stos
and
in
pushf
add
jns
aas
mov
pop
bound
mov
inc
sbb
sbb
push
fcom
ret
pusha
in
mov
leave
bound
shrl
scas
es
dec
sub
and
xchg
ret
mov
push
push
cwtl
daa
fsubrs
xchg
sub
dec
cmp
ljmp
es
push
pop
or
mov
xchg
mov
mov
mov
push
pop
ret
jno
xlat
decl
push
mov
sub
xor
pop
adc
addr16
jl
fs
rolb
pusha
and
jle
inc
fsubp
jmp
dec
inc
inc
fnstcw
mulb
icebp
add
sbb
fs
stos
cmp
mov
and
nop
jg
aas
gs
cmc
movsl
push
dec
mov
je
cmp
dec
mov
faddl
xor
mov
or
push
stos
iret
jg
imull
sub
mov
push
popf
rcl
fildll
cmp
pop
xchg
sbb
sub
push
adc
add
cmp
push
sahf
stos
jo
call
mov
and
loopne
out
adc
daa
inc
adc
lds
fisubl
xchg
out
or
sbb
es
ss
scas
cmc
xchg
dec
aam
fisttpl
popa
out
xchg
imul
fdivrl
pop
arpl
lds
es
int3
sub
sub
loope
cmp
sbb
int
mov
push
outsl
jge
adcl
into
dec
fbstp
mov
mov
pop
icebp
lock
mov
sub
scas
mov
lcall
aad
pop
inc
mov
repnz
fisttpl
lcall
or
popa
pushl
test
aad
rolb
sbb
addr16
xor
xor
mov
je
ret
xor
sbb
lods
jno
stos
or
dec
shl
popf
testl
mov
subl
lds
aam
xor
hlt
adc
lock
das
rorl
sub
add
and
mov
incb
aad
fisubs
jmp
jno
sbb
jmp
xchg
int3
sub
push
mov
fwait
fwait
ljmp
pop
push
aad
xor
xor
mov
xlat
insb
int3
mov
push
push
arpl
leave
mov
nop
leave
jl
ja
xor
mov
mov
xchg
xchg
lcall
insl
push
rorl
andl
pusha
lods
adc
cli
sti
out
dec
mov
jge
cli
test
rclb
fcomp
sub
mov
mov
push
push
adc
add
out
ds
aad
int
iret
add
int3
push
and
sbb
aad
jne
nop
push
rol
les
mov
pop
lds
cmp
jle
pop
jl
rorb
das
cmc
mov
and
cmp
xor
adc
push
or
or
aaa
dec
pop
or
xlat
mov
xchg
data16
test
adc
adc
jmp
sub
je
mov
dec
mov
lock
out
popa
daa
aam
xlat
aas
xor
in
add
js
mov
std
or
inc
xchg
stos
cmp
lods
or
mov
jns
ret
repnz
loop
jo
out
jnp
shll
xchg
cmp
imul
mov
jbe
fnstcw
cmp
xor
test
test
adc
in
xchg
pop
jns
inc
int
xor
stc
push
test
cld
std
outsl
push
add
jge
sbb
enter
aad
into
dec
iret
pop
js
leave
aaa
arpl
fistl
shrb
mov
mov
mov
fwait
adc
cmp
sub
mov
or
push
and
cmp
fisubs
push
push
and
mov
mov
aam
jae
inc
sub
mov
mov
pop
ret
sub
adc
dec
add
std
ja
roll
shl
xor
mov
fnstcw
cmp
or
movsl
int
lods
out
or
in
clc
lods
add
mov
mov
mov
push
movsl
daa
repz
dec
jno
jge
leave
cmp
push
fdivs
push
or
ret
dec
xchg
ret
mov
jmp
pop
ret
jp
mov
pop
inc
ljmp
in
or
mov
add
mov
out
gs
les
xchg
sub
pop
xchg
addl
sbb
aas
mov
mov
sbb
cltd
stc
cmp
ja
inc
jo
jno
and
popf
shr
outsb
mov
clc
ss
xor
scas
pop
data16
es
popa
lds
or
mov
or
mov
pop
rolb
jl
mov
lahf
int3
out
mov
jmp
push
mov
adc
bound
pop
addl
or
rcrb
pop
adc
fimuls
mov
js
adc
adc
mov
test
xchg
lahf
out
in
lock
sbbb
inc
sub
sbb
repz
xor
mov
int3
mov
shl
push
adc
lahf
jg
inc
mov
inc
mov
popa
mov
ja
cmc
push
pop
push
call
cmpsb
pop
test
mov
in
add
out
cli
das
mov
imull
ficomps
inc
imul
mov
cmp
lahf
test
ret
xor
scas
xchg
add
sub
mov
addl
ret
pop
jmp
inc
push
ljmp
cltd
test
and
out
imul
scas
and
pop
sbb
fistl
jo
push
push
and
add
les
clc
xchg
push
repnz
push
xchg
fistpll
sbb
inc
ja
insb
movsl
add
xchg
shr
pop
cmp
insl
pop
fldl
pop
enter
cmpsl
lods
pop
cmc
push
sub
sbb
inc
fidivrl
addr16
hlt
cli
cmp
cmp
lock
pop
js
stos
repnz
cmp
or
adc
rorl
out
aaa
jp
xchg
mov
xor
sbb
es
scas
outsb
jnp
push
cmp
mov
jb
jb
cmp
inc
or
repz
pop
mov
mov
enter
jg
out
inc
inc
xor
into
or
fistpll
dec
insl
icebp
out
pop
pop
mov
lcall
push
repnz
aam
push
das
loopne
dec
mov
xor
test
push
sub
mov
stc
fildl
push
cmp
sbb
and
xlat
xchg
cmp
test
mov
loopne
or
lcall
icebp
sahf
in
fistpll
jmp
js
bound
jns
adcl
sbb
sub
jp
shll
test
mov
cli
ja
push
mov
enter
jg
fcmove
sti
push
loopne
loopne
aad
or
sbb
jg
jg
out
and
insl
push
test
xchg
ljmp
jno
adc
jb
decl
aas
and
leave
xchg
addr16
mov
aaa
xchg
andps
pop
push
pop
inc
icebp
sbb
int3
bound
mov
inc
pop
lretw
repz
xor
dec
dec
push
pop
and
cmp
mov
in
aad
mov
or
loop
pop
mov
push
rolb
shr
xchg
cmp
sbb
pop
imul
ja
push
decb
clc
mov
aam
test
jecxz
rcll
mov
outsl
rol
aas
ds
popa
jns
adc
popf
pop
in
in
data16
push
leave
jbe
pop
test
xchg
fsubs
push
stos
and
das
mov
sbb
repnz
adcl
dec
ror
push
push
cmp
jle
dec
cmp
stc
dec
mov
jne
add
sub
popa
loop
sti
mov
mov
or
insl
cmp
sbb
int3
pop
add
pop
sbb
pop
and
add
repz
adc
xlat
test
pop
adcl
push
jnp
mov
xchg
push
aam
mov
and
pop
pop
jle
das
fcompl
adc
sub
dec
or
btc
sub
test
cmp
ds
sub
jl
cld
lock
xchg
cmp
mov
into
mov
bound
mov
lods
addr16
dec
add
lods
pop
or
cmp
les
movsl
pop
xchg
xchg
loope
cmc
jb
mov
mull
stos
pop
jge
out
pop
inc
jne
test
mov
das
insl
repz
gs
inc
addb
div
and
out
pop
lea
xor
lods
mov
pop
push
push
pusha
pop
cmpsl
jge
repnz
jns
aaa
ror
in
or
push
outsl
xchg
insb
ror
xor
push
loope
lret
xchg
das
cld
xor
inc
jne
jbe
xchg
adc
xor
leave
movsl
loopne
xchg
lret
test
jmp
xchg
xor
inc
xor
scas
jg
inc
cmpsb
or
jle
push
ss
test
arpl
jns
push
inc
inc
xor
pop
mull
nop
mov
rcrl
loop
xchg
arpl
jle
nop
xor
addr16
repz
jae
or
divl
cmpsb
xor
mov
sbb
not
ret
xchg
loope
jmp
sub
add
jo
aad
sub
lea
jns
sbb
fs
test
mov
and
push
fisttpl
push
popf
call
sbb
cmp
mov
lea
pushl
xchg
adc
movsl
sbb
adc
mov
stos
loopne
dec
jge
sbb
inc
mov
shrl
stc
repz
mov
adc
ret
sub
xor
xchg
in
mov
push
jb
iret
add
scas
add
aas
dec
sarb
cmpsl
or
ret
push
sti
pop
mov
movl
adc
outsb
pop
out
fldenv
ds
adc
xlat
sub
outsl
sub
jbe
dec
ljmp
outsl
out
stos
push
out
pusha
lods
mov
in
mov
ror
aam
cwtl
mov
add
mov
in
lret
jecxz
fiadds
lret
repnz
pushf
cmp
and
jmp
rol
sarl
sbb
pop
mov
sbb
ljmp
iret
push
adc
cmp
dec
ss
mov
mov
jae
bound
pop
cmc
pop
and
or
sar
imul
mov
dec
in
and
into
sub
leave
jae
adc
mov
add
mov
cmp
andb
cmpsl
cmp
xchg
inc
jno
push
adc
push
inc
mov
enter
adc
fcomp
lods
aad
xor
loop
push
mov
pushf
test
movsb
adc
movsl
dec
xchg
fdivrl
mov
or
shlb
pop
sub
popl
mov
lea
xor
jg
lea
cmp
lahf
in
and
pop
enter
fsubs
arpl
enter
jns
orb
shrl
jae
inc
hlt
insb
pop
shlb
mov
and
xlat
xchg
jp
or
ja
inc
jle
add
ja
dec
je
fimull
jb
or
xor
or
jp
test
jecxz
adc
lock
sahf
cld
push
das
inc
pop
pop
aam
fs
sub
outsb
shl
out
adc
ja
cmp
pop
xor
and
push
pusha
ret
out
xchg
cmp
test
aaa
lcall
jmp
stc
adc
test
cmp
jle
push
sbb
sahf
mov
jle
jnp
xor
flds
inc
and
sbb
sbb
insb
pop
aam
mov
subb
xchg
addl
movb
ss
imul
int
sub
inc
push
and
add
jp
aaa
data16
aam
and
lcall
xor
int3
inc
cmp
push
push
dec
jecxz
and
daa
xchg
and
push
daa
les
mov
int3
lods
add
pop
mov
cltd
dec
pop
push
clc
int3
xchg
xchg
mov
psllq
cmpsb
fwait
repnz
adc
dec
daa
mov
in
cltd
add
xchg
pop
or
pushf
dec
fwait
outsl
pop
mov
in
mov
mov
je
cmp
and
dec
push
test
sbb
jg
dec
push
inc
icebp
adc
addl
cmpsl
mov
loopne
fisttpl
lods
and
jb
int
and
out
inc
adc
aas
push
pop
data16
movsl
outsl
ret
shrb
lea
insl
inc
stos
sbb
nop
cmp
push
push
mov
aas
pop
mov
in
cltd
cltd
xor
rcrb
sbb
mov
add
push
cmp
test
and
imul
stc
lret
xchg
xlat
push
incl
cmp
dec
pop
dec
mov
stos
jmp
or
and
jmp
xor
add
mov
push
xchg
stc
mov
jle
clc
xor
insl
xchg
std
push
sbb
div
push
leave
arpl
ljmp
dec
dec
or
lret
outsb
xor
iret
sbb
pusha
aad
sub
repnz
or
pop
lahf
mov
and
adc
inc
jnp
movsl
repz
sbb
jbe
lock
bound
adc
out
push
lock
rorl
and
sbbb
jnp
lods
sub
jle
push
cmpsb
fsubs
and
repz
cmp
mov
idivl
sub
ljmp
jl
jle
pop
in
jo
xchg
shll
popa
movsl
in
or
and
aad
mov
movb
insb
cltd
clc
lea
xlat
push
aam
stos
adc
mov
cmp
dec
cmp
adc
push
std
in
or
loope
popf
ss
je
inc
inc
mov
addr16
mov
mov
and
loopne
push
xchg
aad
insb
in
test
outsb
mov
fnstsw
cmp
sbb
dec
movsb
xchg
scas
mov
test
arpl
cmpsl
hlt
cwtl
jl
xlat
cwtl
push
ficoml
pop
mov
dec
xor
stc
adc
jg
push
cld
icebp
xchg
mov
rorl
adcb
xor
mov
xchg
outsl
mov
dec
cmpsb
dec
jle
mov
pop
dec
sub
and
jne
inc
cmpsb
stos
inc
mov
sbb
pop
cmpsb
inc
sub
xchg
pop
jb
lds
inc
push
das
gs
dec
aas
out
mov
fxch
jge
mov
xor
rolb
cwtl
push
inc
ja
dec
lret
sti
fs
xor
xor
sbb
pop
test
sub
inc
ret
aam
cmp
xor
lods
imul
lods
cltd
aas
ret
mov
imull
adc
dec
pushf
xchg
lods
clc
pusha
scas
nop
inc
xor
sti
in
ds
xchg
test
es
inc
mov
mov
xor
andb
jbe
sub
lds
les
xchg
ja
arpl
cli
ss
ljmp
jg
ss
lret
hlt
sbb
insl
jns
shlb
iret
xchg
aaa
sub
mov
xchg
jle
push
in
adc
scas
js
arpl
jg
gs
inc
fildll
xchg
mov
sbb
add
call
pop
mov
aaa
aaa
aad
mov
ja
sbb
cmpsl
or
js
test
outsl
jbe
push
inc
aas
or
adc
add
mov
lahf
or
xchg
ret
xor
and
bound
jae
test
mov
ret
in
and
or
jl
notl
sub
mov
or
pop
mov
add
adc
mov
imul
inc
sahf
xchg
aas
mov
push
aad
ljmp
pop
and
rcrb
inc
mov
in
lret
mov
mov
jae
imul
dec
add
and
hlt
mov
jne
dec
push
mov
xor
nop
add
pop
sub
vmwrite
inc
adc
jmp
cld
cli
xchg
fld
inc
test
loop
pop
or
xchg
mov
xchg
pop
shlb
mov
adc
daa
inc
cmp
data16
call
mov
adc
mov
push
xchg
mov
xchg
sarb
push
cmpsb
rolb
sbb
es
mov
mov
push
pop
jge
and
call
popa
sbb
fstpl
lahf
adc
repnz
jle
mov
xor
pop
je
daa
xchg
jmp
ret
xchg
cs
push
mov
dec
jns
adc
push
scas
adc
stos
out
sbb
mov
push
lea
insb
es
ret
and
es
stc
cs
lcall
pop
in
in
ja
repnz
xchg
jno
mov
dec
clc
fildl
ljmp
push
pop
adc
sarb
xor
and
add
cmp
sub
pop
flds
das
inc
fcompl
std
jp
or
in
sar
test
dec
and
dec
sti
aas
data16
std
pop
fstp
ror
mov
loopne
add
push
sub
cmp
jno
pop
xchg
push
jl
in
inc
pushf
imul
xor
je
sub
ljmp
mov
or
out
mov
loop
push
test
push
sub
lds
jg
mov
addr16
popf
ret
mov
cmp
pop
add
fisubl
xor
rclb
bound
hlt
sar
andl
ljmp
xchg
jae
scas
mov
das
xor
ficoml
jnp
jnp
faddl
sbb
add
adc
mov
jne
aad
xlat
cmp
or
xlat
and
outsl
cmpsb
lret
sub
pop
idivb
cmpsl
mov
je
jecxz
in
movsl
mov
jno
aas
sysenter
or
lcall
out
arpl
sar
mov
pop
mov
mov
pusha
scas
testl
test
cltd
stc
sub
pop
pop
mulb
and
pop
and
cmp
pushf
mov
xor
sub
add
enter
mov
push
push
xchg
std
bswap
pop
cmp
or
mov
xchg
add
sbb
in
push
push
mov
lods
inc
movsl
scas
outsb
dec
cmp
jecxz,pn
pop
dec
fadd
pand
xor
inc
clc
xchg
mov
mov
inc
xor
call
or
and
je
cmp
lret
rolb
jl
lret
sbb
dec
inc
pop
xchg
aas
pop
jmp
out
jle
jp
xchg
daa
enter
add
pushf
fnsave
dec
cwtl
pop
xor
push
push
push
inc
pop
push
lods
inc
xor
fsubrs
xor
lcall
test
mov
sub
xchg
sti
repnz
adc
adc
mov
clc
sub
aas
js
jnp
gs
cmp
xor
and
outsb
loopne
fisttps
sbb
insl
push
add
mov
jle
sbb
icebp
xlat
mov
sbb
jmp
cmc
cs
addr16
push
inc
push
inc
js
cmp
test
jle
repz
mov
jae
gs
ds
pop
and
arpl
ret
repz
xchg
mov
sub
test
adc
imul
mov
and
cmpsl
mov
dec
out
cmp
jle
pop
or
cmp
mov
jmp
push
es
and
addr16
inc
lea
add
adc
mov
mov
fildl
daa
jl
rol
cmp
movsl
sti
dec
shr
jecxz
popf
or
or
shlb
bound
fcomip
mov
pop
ret
xor
mulb
cmp
test
jmp
or
lcall
dec
bound
jnp
mov
adc
dec
jp
sbb
jecxz
std
xchg
pop
ret
pusha
outsl
jl
xchg
lea
insl
lret
loopne
arpl
into
cmp
pop
mov
orl
mov
les
adc
pop
ds
mov
mov
mov
jp
pop
addr16
push
stc
clc
and
push
ja
sbb
aad
movsb
mov
jne
aad
sbb
loop
push
loope
add
dec
out
insl
push
jo
jle
xchg
cld
xchg
pop
pop
mov
mov
sbb
xchg
sub
jb
loope
hlt
rolb
lret
mov
dec
movsl
fwait
sbb
adcb
mov
sbb
push
mov
mov
in
les
ds
add
mov
leave
loopne
adc
xchg
iret
ror
sub
in
mov
in
xchg
mov
or
std
mov
jns
push
cmp
movsb
xchg
inc
mov
adc
fldl
arpl
jno
insb
sub
adc
in
dec
outsl
xor
ret
mov
popa
dec
inc
pop
or
push
arpl
mov
jns
xchg
int3
adc
mov
xchg
aam
and
loop
mov
or
push
mov
mov
mov
xor
ret
xor
outsl
sahf
add
xor
ds
inc
push
imulb
repnz
and
loope
pop
mov
bound
js
xor
cmp
aam
nop
xchg
pushf
iret
leave
jnp
inc
cmp
call
lret
in
fldcw
and
fnstsw
fstl
jae
stc
sbb
pop
or
and
or
outsl
decl
and
pop
mov
xor
and
mov
jb
je
pusha
xor
sbb
mov
test
mov
add
jp
sub
and
int
loop
push
push
fwait
out
mov
fdivrs
xor
adc
fs
mov
ret
mov
repnz
jg
in
dec
jnp
subl
je
insb
les
lcall
mov
call
loope
mov
lea
or
loopne
scas
add
mov
stos
jl
aam
bound
aas
enter
mov
pop
rcl
push
xchg
loope
mov
out
jb
pop
jnp
inc
stos
mov
cltd
data16
mov
cmpsl
aaa
mov
jnp
mov
sbb
mov
std
lds
mov
out
repz
call
insb
mov
mov
push
and
dec
and
ss
and
pop
xor
mov
fdivrs
sahf
into
scas
scas
cmc
scas
fidivrs
inc
mov
sub
sarl
call
push
add
fimull
nop
std
arpl
xchg
push
loop
add
repnz
add
cmp
cmp
xchg
cltd
in
pop
mov
ss
jg
hlt
icebp
dec
mov
pop
inc
mov
stos
mov
leave
repnz
in
movsb
cmp
ret
xchg
dec
mov
xor
sbb
icebp
in
cld
outsb
and
lods
insl
push
inc
mov
mov
in
addr16
and
jmp
pop
xchg
jle
out
dec
rorl
ficompl
sub
addr16
xchg
clc
je
lea
aad
lret
shll
and
outsl
cmp
xlat
in
sbbl
test
pop
mov
rcrl
stos
aaa
movsb
icebp
hlt
xlat
test
ss
les
adc
cmpl
push
or
inc
adc
xchg
lcall
pop
ljmp
add
dec
sbb
in
scas
stc
push
jp
add
scas
decl
idiv
clc
sahf
scas
inc
cmpsl
lret
dec
into
adc
fsubrs
mov
pop
notb
pop
rcl
mov
out
aaa
pop
sahf
mov
mov
jge
pop
sbb
fcomip
mov
jl
mov
mov
cmpsb
jecxz
push
mov
pop
lret
mov
imul
mov
inc
mov
testl
ffreep
mov
mov
ret
imul
sbb
inc
inc
test
pop
sub
testb
leave
aaa
scas
rcrb
rolb
mov
sahf
xlat
ret
cltd
stos
jg
jmp
lods
inc
dec
sub
insl
or
jb
mov
adc
inc
sbb
cld
insb
pop
aaa
inc
adc
dec
orb
push
dec
xor
out
ss
ljmp
or
push
bound
mov
imul
pushf
andb
addr16
inc
stos
pop
sub
das
leave
lret
pop
les
fidivrl
dec
jns
es
in
nop
or
inc
push
cmp
and
sub
ljmp
xchg
lods
dec
pop
mov
adc
iret
ds
sub
dec
pusha
test
adc
ds
sahf
outsl
iret
push
cwtl
data16
sub
pop
dec
addr16
cmc
test
inc
mov
test
pop
arpl
sbb
fwait
std
or
jne
stos
xor
jmp
mov
or
sti
push
or
jmp
mov
sub
xchg
inc
jae
or
push
mov
cmp
and
push
test
mov
pop
jle
push
or
adc
jno
cli
data16
sub
mov
push
xor
pop
add
int3
add
adc
add
cmp
add
dec
cmp
pushf
pop
call
leave
fistl
repnz
dec
loope
xchg
or
pop
ljmp
push
or
jbe
xchg
test
imul
push
adc
push
xchg
adc
fcomps
sbb
xorl
ds
in
mov
jl
ds
push
cmpsb
fnstsw
test
sub
outsb
mov
ret
xchg
and
pop
push
stc
rorb
hlt
mov
out
mov
mov
hlt
xor
je
and
mov
scas
scas
ds
inc
inc
aas
imul
into
loopne
jp
imul
inc
sbb
je
movsb
mov
xrelease
xor
mov
loop
es
and
sar
movsl
xor
testl
adc
cld
cmp
jp
push
lret
xchg
mov
cmp
jb
shl
push
subb
dec
lahf
pop
or
std
out
push
shl
cs
xchg
enter
dec
and
test
movsl
xchg
xchg
hlt
pusha
idiv
push
stos
aaa
pop
imul
jno
xchg
adc
fisttps
inc
pusha
cmp
call
xor
int
mov
inc
and
sti
ja
pop
cmpsb
cmp
mov
sub
imul
mov
jle
mov
and
push
scas
imul
xor
xor
inc
call
add
js
cltd
jnp
dec
aad
dec
test
flds
push
aaa
jo
icebp
jmp
ret
and
ja
or
ret
mov
push
icebp
sub
fcoml
ljmp
cs
push
cmpsl
pop
xor
and
sbb
or
ja
jmp
inc
jo
inc
push
push
jo
and
test
pop
jg
push
cmp
daa
jbe
subl
push
ss
jp
icebp
sarl
pusha
psubq
inc
iret
repz
adcb
push
xor
mov
jbe
int3
loop
cli
xor
dec
stc
in
mov
in
insb
mov
dec
sbb
jge
sbb
test
aas
shr
lcall
mov
inc
or
js
push
stos
mov
shl
call
sbb
cld
cmp
insb
lds
sub
dec
mov
in
test
mov
push
out
cmc
loopne
mov
inc
cmp
sub
mov
test
mov
mov
dec
xchg
incl
int3
mov
aaa
orb
dec
repnz
sub
gs
pop
mov
mov
or
fimuls
xchg
stos
mov
pop
dec
sti
jo
divb
mov
mov
out
mov
or
pop
mov
or
call
fstps
cwtl
roll
jp
jno
dec
xchg
in
test
jmp
cmpsl
push
lods
push
push
push
add
cmc
jecxz
and
and
add
fucomi
cmpsl
push
add
outsb
in
shlb
sti
roll
out
mov
leave
mov
int
lret
pop
testb
mov
jmp
mov
or
pusha
mov
mov
add
jl
fwait
jo
xor
shrl
sarl
xor
sub
inc
xchg
or
and
cmp
cmp
aad
int3
or
sub
pop
or
pmuludq
addl
aas
into
movsb
cld
mov
fnstcw
iret
jae
test
ret
fmull
fdivrp
fstpl
adc
adc
sarl
ficoml
fwait
imull
divb
mov
push
outsb
daa
mov
cmp
jg
adc
mov
ljmp
sub
and
loop
push
mov
jge
int3
je
push
dec
jo
popa
push
shll
xor
mov
mov
clc
fs
testb
lahf
mov
je
add
add
andb
xchg
aaa
test
into
jb
out
dec
jecxz
pop
adc
repnz
sbb
scas
shll
jge
mov
mov
jge
dec
outsl
xor
hlt
je
test
mov
shl
push
shl
sahf
xchg
cmp
push
loopne
xchg
pop
inc
cltd
and
mov
mov
xor
mov
jmp
into
cs
jae
sahf
xchg
leave
ret
data16
sub
mov
xchg
inc
aad
ret
fsubp
adc
loope
jl
pop
jle
negl
pusha
adc
sahf
pusha
sub
push
or
inc
jmp
mov
je
shrl
aad
sub
mov
mov
inc
js
and
push
ds
dec
out
or
ret
in
jne
add
je
xorb
movsb
mov
sub
xchg
rcll
lock
fsub
jg
lods
lcall
fsubr
stc
fildl
jmp
popa
inc
or
rolb
xor
clc
lock
inc
addr16
rcll
dec
sbb
cmp
inc
xchg
fcmove
push
xchg
pop
fisubl
imul
fistps
jnp
dec
inc
inc
pop
imul
sbb
insb
mov
pause
cmp
outsl
jns
mov
add
je
sbb
scas
cmp
lcall
fisubrl
adc
jne
lret
add
dec
mov
jg
and
rol
jecxz
fstp
or
add
lret
out
std
dec
jno
and
out
enter
sub
cltd
imul
dec
scas
push
shll
push
sub
js
push
mov
push
dec
pushf
aad
lds
sbb
mov
sbb
fistps
clc
shl
mov
sub
es
out
incl
xchg
add
xor
dec
inc
mov
and
xor
fwait
xchg
imul
sti
inc
shufps
mov
lods
mov
inc
mov
push
inc
mov
and
lret
cli
pop
mov
push
push
pop
scas
cmp
push
loopne
fdiv
fbstp
push
xor
inc
stc
pop
cmp
out
dec
negb
enter
jo
push
and
cld
push
adc
mov
int3
xchg
pop
mov
cmc
mov
adc
mov
ret
lahf
and
mov
daa
sbb
xchg
out
mov
push
movsb
pop
push
stos
cwtl
jmp
ror
jmp
sbb
sahf
call
mov
test
fidivrl
and
or
mov
mov
xchg
insb
inc
jns
xchg
and
leave
or
cmp
mov
sahf
add
lret
jb
insl
lods
inc
push
lretw
mov
mov
gs
pushf
ret
mov
jno
or
add
jns
mov
sub
jne
xor
in
lods
xchg
dec
push
fs
xchg
nop
push
pop
push
in
inc
stos
rorb
cld
outsl
je
addr16
push
js
mov
pop
pop
in
xor
js
fimull
js
sbb
or
movsl
test
pop
add
inc
shll
mov
inc
pop
jmp
inc
cmp
fbstp
nop
rorb
rolb
xchg
adc
push
adc
mov
push
nop
sub
andl
aam
xchg
and
sahf
clc
gs
mov
push
adc
inc
imul
cld
jmp
dec
cltd
fcmovu
hlt
jle
bound
ret
xchg
imul
pop
xchg
dec
or
test
loop
sub
mov
sub
jmp
cmp
cli
or
mov
arpl
add
iret
mov
inc
xor
cli
add
ret
in
fcmovnu
stos
rcll
push
pop
in
mov
mov
sbbb
sahf
loope
adcb
fcmovnu
jecxz
shrl
push
xor
or
lods
push
xchg
dec
nopl
cli
mov
cmp
je
lahf
mov
es
jecxz
dec
ret
pushf
mov
adc
loope
jle
cltd
insb
mov
xor
dec
pop
mov
decl
cmpsb
push
ds
lods
stc
mov
sbb
mov
dec
jge
loope
outsb
mov
dec
push
mov
out
stos
push
hlt
mov
subb
push
jmp
cmpb
dec
jne
pop
sub
out
sbb
das
add
out
outsl
fwait
and
add
sub
iret
cmpsb
mov
pop
push
testb
push
sbb
jne
add
cmp
xchg
pop
sub
arpl
mov
and
push
mov
jle
sbb
mov
daa
imul
sti
cmp
jne
and
sub
adc
jnp
dec
fimuls
pusha
xor
push
mov
xor
fidivl
iret
cmp
push
mov
push
jl
ss
lock
jmp
int3
sub
mov
enter
lds
jmp
cltd
adc
test
icebp
push
xchg
inc
xchg
push
repnz
out
inc
test
add
movsl
mov
adc
mov
xchg
or
imul
fwait
push
rcll
sub
pop
daa
push
jo
std
std
pop
pop
ja
jp
pop
xor
adc
clc
dec
lcall
sub
push
adc
push
in
push
insb
sub
repnz
movsl
pushf
cmpsb
movsl
inc
xor
pop
pop
out
fisubs
push
add
mov
push
dec
int
pop
and
repnz
dec
scas
inc
shll
mov
mov
cmpsl
hlt
mov
push
orl
or
shl
sub
mov
roll
movsl
jb
stc
int3
jae
mov
sub
stos
clc
shlb
rdmsr
dec
xor
inc
dec
repz
inc
imulb
aam
dec
lcall
jl
mov
dec
cmc
fldcw
pop
push
and
arpl
ss
imul
and
out
and
mov
pop
xor
push
aaa
popa
fcomi
mov
dec
adc
mov
or
out
leave
movsb
and
imul
sub
adc
daa
pop
add
fiaddl
bound
cmp
enter
jg
cmp
fldenv
dec
lcall
mov
rcr
fildl
sbb
mov
shlb
ljmp
hlt
cmp
ljmp
sbb
pop
cmc
jo
faddp
repnz
pusha
mov
jns
xchg
test
lcall
xchg
sub
mov
fnsave
pushf
out
xorl
outsl
rcll
popa
push
les
pop
iret
pop
mov
fistl
fistpl
cmp
sub
scas
dec
jbe
jnp
lret
loopne
lret
imul
push
scas
test
jo
outsl
mov
pop
pop
js
xchg
dec
mov
mov
popa
subl
adc
dec
and
int
pop
nop
cmp
lret
daa
or
pop
mov
xchg
jg
in
icebp
std
imul
jb
mov
xchg
stos
lret
inc
adc
fstps
lcall
fmull
sbb
out
add
call
pop
jl
pop
fsubs
sub
into
push
ljmp
shll
xchg
out
mov
xchg
movsl
xlat
push
enter
pop
or
pop
fisubrs
push
xchg
xchg
in
pop
jne
lret
inc
cltd
cmpsb
jo
dec
setae
daa
pop
test
ficoml
sbb
xchg
mov
mov
arpl
adc
sahf
jbe
mov
adc
popa
push
insb
sbb
mov
inc
sub
js
fists
hlt
pop
cwtl
fs
dec
iret
jbe
xchg
js
insl
inc
mov
cmp
mov
xorl
mov
test
gs
add
jecxz
pushf
clc
cmc
xchg
mov
test
sbb
out
dec
cmp
sub
xchg
dec
pand
dec
inc
arpl
cmpsl
mov
push
or
fldenv
leave
fcmovu
push
outsb
push
pop
push
in
into
cmp
sub
jb
and
cmp
sahf
cs
push
call
push
call
dec
fildll
cmp
pushf
sbb
or
stos
lcall
pop
popf
push
mov
fucom
xchg
adc
enter
fldt
or
lock
aaa
je
rolb
test
test
iret
test
adcl
fsubl
mov
jno
jle
xor
mov
js
int3
xchg
ret
mov
pop
jnp
push
mov
pop
inc
lods
out
ja
mov
or
std
push
add
jae
sti
xchg
clc
cmp
inc
push
inc
mov
xlat
insl
popa
jl
push
scas
sub
cmp
movsb
rol
mov
faddl
or
dec
sub
jno
mov
sub
push
sub
pop
cmp
out
movsb
push
sub
bound
imul
int
sar
hlt
ja
popf
cmpsl
push
sub
out
push
mov
leave
aam
stc
js
dec
outsl
sbb
gs
dec
sub
in
mov
cld
inc
xor
fistpll
out
adc
dec
cmpsb
lock
mov
pop
lret
adc
jmp
cmpsb
jnp
push
xor
lret
fildl
dec
push
nop
jmp
adc
sahf
or
inc
ja
out
jl
outsl
gs
cmp
mov
insb
divb
leave
and
xchg
add
xchg
ret
mov
ss
lcall
in
inc
mov
push
leave
mov
pop
dec
sbb
rcr
adc
leave
cli
sarb
xor
out
lods
dec
sbb
lret
test
mov
inc
xchg
sahf
push
xchg
xor
mov
cmpsl
lods
mov
pop
ret
jmp
rolb
or
add
sub
and
mov
cli
call
outsb
add
clc
ret
xchg
xor
testb
or
scas
jno
mov
lret
ljmp
cmc
xor
jmp
call
lods
push
or
mov
hlt
outsl
jb
adc
pop
inc
idivb
shrb
subl
xor
movsb
js
rclb
int3
repnz
imul
mov
in
dec
fistpll
test
gs
xchg
pop
bound
push
mov
add
or
outsl
pop
xchg
or
xor
add
int
mov
lahf
dec
push
lds
mov
mov
or
push
sbb
in
test
cwtl
pop
or
add
cmpsl
stc
rorb
pop
popa
add
ret
or
push
into
cmpsl
hlt
inc
pop
xchg
outsl
mov
fsubrs
mov
rcrl
pcmpeqw
stos
lock
push
mov
jo
cmpsl
mov
jmp
ret
or
adc
adc
call
out
loopne
or
cld
push
and
pop
cmpb
jge
out
outsb
arpl
loopew
mov
into
or
test
sbb
dec
lock
mov
sbbb
sub
or
mov
and
push
inc
fisttpl
int3
jmp
shlb
rol
cwtl
movsl
repz
outsl
cmpsl
push
mov
push
movsb
stc
cmpsb
je
push
in
bnd
sbb
inc
ret
test
sbb
lock
cmp
imul
lods
stos
aas
inc
jno
xchg
adc
mov
push
pop
das
push
jo
xchg
xchg
pop
xorl
and
sbb
jno
mov
lret
repz
cmp
les
nop
daa
mov
sub
call
test
jl
sar
jne
mov
aam
lea
dec
scas
xor
inc
js
je
inc
and
cli
pop
loop
xchg
cmp
cmp
aad
inc
mov
je
sbb
fcoms
dec
mov
sahf
rclb
adc
inc
mov
push
cwtl
dec
adc
adc
jl
int
imull
inc
fptan
shrb
dec
xor
mov
mov
sub
andl
mov
jno
dec
inc
and
adc
gs
cmc
test
mov
mov
push
dec
inc
pop
mov
insb
lds
push
sub
sti
imull
pop
mov
dec
shrl
shlb
negb
sub
icebp
or
xchg
sub
or
pop
fyl2xp1
push
out
rcr
mov
inc
xchg
mov
mov
add
rep
add
ror
sbb
sti
in
cwtl
push
dec
cmp
fidivrs
mov
and
dec
mov
inc
push
mov
xchg
pavgw
jns
xchg
fildll
xchg
inc
pop
sbb
sub
xor
scas
dec
xor
cmp
lcall
scas
mov
jp
imul
popa
push
pusha
insl
cmp
sbb
loope
fwait
mov
insl
out
xor
mov
mov
stos
cmp
push
or
sbb
pop
rolb
sbb
scas
sbb
add
popa
mov
inc
xlat
nop
add
sub
je
and
push
cmp
inc
cli
mov
icebp
dec
jb
push
outsb
xchg
dec
xor
and
movsl
rcrl
push
out
push
das
sbbb
cli
mov
mov
inc
xor
dec
jle
jbe
inc
pop
adc
stos
insl
in
mov
lcall
leave
imul
lea
cmp
sub
mov
jmp
mov
push
xor
mov
sbb
stc
popa
xlat
leave
cltd
faddl
icebp
insb
dec
push
push
test
test
pop
or
iret
jbe
fsubrs
push
cmc
fldl
mov
cld
sub
hlt
xchg
push
mov
push
pop
leave
xchg
inc
nop
jmp
ds
outsl
dec
arpl
dec
dec
mov
bound
xchg
aas
arpl
adc
negb
pop
bnd
jecxz
rclb
pop
xlat
imul
mov
or
pop
sub
fs
out
insl
push
mov
pushf
add
mov
inc
int3
jp
loope
nop
jg
icebp
push
sbb
pop
pop
push
adc
xchg
inc
loope
aad
jno
lock
dec
sub
movsb
add
sbb
mov
sub
sti
test
jmp
mov
dec
xchg
and
lahf
mov
es
mov
rcrb
sbb
ljmp
adc
cli
sbb
mov
push
push
xor
pop
pop
adc
jns
mov
mov
sti
sub
sub
nop
inc
fdivrp
js
mov
daa
xchg
lret
or
sbb
lcall
xchg
pop
es
pop
inc
dec
xorl
mov
add
testb
push
jo
lret
xor
mov
daa
sub
mov
add
xor
mov
call
jge
arpl
push
adc
cwtl
jecxz
out
cld
jg
sub
jo
imul
lret
aad
adc
mov
pop
jmp
xor
aam
jb
test
mov
stos
xor
or
mov
xor
lods
push
aas
fcompl
push
cmp
sar
adc
pop
add
call
jae
sbb
or
xchg
gs
push
jbe
push
ret
push
enter
int3
push
rcrb
jbe
xchg
rclb
lods
outsb
int3
adc
iret
das
jno
lret
mov
pop
add
cmp
sub
rcrl
mov
adc
icebp
mov
lret
outsb
mov
iret
test
jle
icebp
das
push
and
or
and
sti
sti
xor
sbb
gs
orl
outsb
lea
xor
pop
imul
sbb
in
popf
call
push
loope
fisttps
leave
enter
cmp
sub
jns
cmc
lds
scas
out
aad
cmp
jo
aam
sbbb
jo
adc
out
dec
jo
or
icebp
cmpsl
loopne
gs
inc
xchg
es
icebp
mov
xchg
lock
stos
sbb
or
jne
pop
enter
cmpsb
push
jb
cmpsl
test
inc
lahf
rclb
pop
roll
flds
js
psubd
mov
cmpsl
mov
push
pop
flds
xchg
rolb
fldt
xor
testb
cmp
xor
jb
inc
push
mov
jge
push
xor
and
fbstp
mov
or
mov
mov
rorb
xchg
mov
scas
test
iret
dec
xor
add
sub
imul
mov
das
fnstsw
jmp
add
mov
loop
pop
lahf
scas
dec
add
mov
insl
mov
out
lret
hlt
mov
dec
sbb
mov
sarb
test
push
jle
adc
xor
pop
xchg
xlat
aas
test
pop
add
jg
inc
in
lret
dec
inc
stc
daa
xchg
xor
sub
cmp
mov
mov
fistps
shll
je
sub
pop
mov
subb
cmc
cmp
loope
fmulp
dec
cmc
lret
loop
dec
movsb
sbb
xor
mov
cmp
mov
inc
mov
rolb
test
pop
sub
jg
sbb
jns
test
les
xchg
adc
test
bound
inc
outsl
hlt
dec
test
nop
fwait
xchg
cmp
xchg
adc
pop
lds
lods
inc
inc
aas
inc
sbb
dec
daa
shlb
mov
sbb
out
jb
xchg
sbb
dec
or
repnz
test
cmp
mov
mov
dec
mov
daa
push
das
fwait
xor
sbb
mov
hlt
and
jne
cs
addr16
jb
push
pusha
call
gs
and
es
mov
and
xchg
add
xchg
add
mov
cmp
scas
cmp
into
popa
sbb
ret
test
and
inc
adc
mov
mov
mov
mov
shrb
inc
mov
add
cmc
push
out
xchg
mov
mov
pushf
mov
and
test
lods
and
mov
xchg
jecxz
fwait
dec
fcoml
pop
ficoml
inc
outsl
ljmp
inc
fsubl
ret
xor
push
and
stos
rcll
dec
push
fiadds
les
add
stos
sub
pop
jle
loope
sti
out
mov
cmp
mov
cld
push
push
xchg
mov
movl
bound
ret
mov
dec
orl
jnp
les
std
xchg
adc
pop
filds
ret
in
and
jno
shl
pop
pushf
insw
test
mov
push
sub
adc
pop
out
inc
gs
ds
aad
scas
push
dec
dec
dec
jmp
lret
add
add
imul
scas
into
mov
and
jo
outsl
enter
mov
push
aas
js
lds
fdiv
mov
in
xchg
das
sbb
cmp
pop
push
cli
push
inc
pop
mov
sbb
fidivrl
loope
cwtl
cmpsl
out
je
mov
xor
es
cmp
or
ds
adc
jbe
js
imul
pop
jo
fcmovnu
std
sbb
loope
jnp
rcrb
push
or
push
jnp
insl
add
daa
cmp
notl
lds
push
jb
add
mov
push
sbb
je
inc
aas
push
lea
xchg
cld
sahf
ret
xchg
xchg
repnz
inc
add
mov
xchg
cmpsb
orl
xor
adc
adc
enter
ds
insb
daa
shl
mov
cli
std
insb
icebp
arpl
cmp
insb
inc
jecxz
xor
xchg
pop
test
jge
pop
dec
jle
pusha
cmpsl
sbb
cltd
aam
mov
add
pop
incl
cwtl
jmp
sbb
cmp
xchg
push
dec
mov
mov
xchg
or
dec
lret
outsb
adc
gs
rol
sub
hlt
jns
or
jae
sub
lret
daa
vunpckhpd
cltd
aad
ja
push
cs
mov
int3
mov
arpl
xchg
adc
sub
dec
push
gs
in
add
jae
fldcw
cmp
outsb
add
pop
out
inc
call
adc
das
test
ja
inc
push
lret
pusha
daa
pop
inc
dec
js
xor
int3
test
mov
cmp
popa
loop
insb
int
lret
and
in
cmpsl
ret
icebp
test
out
loopne
adc
lea
dec
mov
jmp
cmp
mov
mov
or
inc
gs
fnstcw
femms
scas
bound
xor
fmull
pop
pop
scas
out
fldl
jns
push
aaa
xchg
leave
xor
or
mov
std
js
inc
cmpl
notb
pop
push
fwait
out
mov
jle
out
sbb
xor
loopne
aad
mov
in
push
in
xor
jp
lock
xlat
scas
push
push
push
cmp
pop
adc
fwait
and
insw
cmp
lock
xrelease
mov
inc
cmc
cmp
xchg
insl
pushf
pop
sahf
xchg
mov
scas
push
cmp
xorl
orl
cmc
mov
cmp
add
mov
add
jp
lods
dec
cmp
xchg
shlb
pop
js
xchg
mov
mov
adc
jae
and
jmp
cmp
cld
mov
fmul
sbb
ja
pusha
push
push
cmp
shlb
or
into
out
and
divl
popa
mov
fidivrl
aaa
push
in
and
js
pop
sub
mov
push
rorl
cltd
test
push
jne
pusha
jecxz
cld
or
or
push
fsubrs
cmp
negl
aas
or
stc
mov
xor
popa
push
push
scas
jge
leave
sub
stos
xchg
xchg
or
sar
inc
pop
pop
std
jbe
fcomip
add
dec
xchg
int
and
in
stc
push
pushf
add
push
aaa
pop
push
pushl
in
push
loope
cmc
sti
pop
mov
pop
pop
xor
add
push
sub
das
out
sbb
xchg
mov
scas
sbb
dec
out
push
jg
mov
add
add
scas
or
sbb
fdivs
mov
or
jns
or
cmc
push
stc
jmp
mov
adc
fidivrs
xchg
je
xchg
lods
jb
jge
jle
jle
jne
repnz
dec
add
adc
clc
pusha
scas
xchg
inc
cmpsb
cmpsl
mov
sub
in
mov
out
fldl
sub
jecxz
add
sub
inc
mov
sub
movsb
jne
inc
lods
jecxz
add
mov
push
out
ret
jns
mov
add
sbb
mov
jecxz
mov
pusha
push
pop
fcmovnb
lds
imul
hlt
jl
cltd
mov
test
dec
nop
ja
fdivrs
dec
push
add
or
popf
lcall
stos
bound
push
or
dec
push
adc
decb
aas
push
imul
in
xchg
test
mov
dec
lods
scas
test
mov
les
and
dec
stos
mov
cmp
in
xchg
mov
inc
inc
out
mov
pop
jecxz
lods
mov
fwait
call
scas
mov
adcl
pop
jo
mov
sbb
int3
sbb
and
in
pop
mov
stos
dec
cwtl
mov
xchg
or
mov
inc
or
movsl
pop
pop
inc
lcall
push
and
dec
aam
mov
out
push
mov
insl
xchg
cwtl
daa
fdivrp
jns
dec
push
and
scas
sbb
cs
adc
andl
ds
xchg
mov
push
lret
xlat
cmpsl
shrl
std
push
lock
xchg
aas
dec
std
mov
jge
movsl
lock
icebp
decb
mov
dec
jo
test
mov
pop
mov
bound
inc
xor
imul
xchg
fisttpl
call
jp
pop
je
pop
mov
jo
adc
ret
dec
jp
mov
jg
pop
cmpsb
pop
out
movsl
lock
dec
fidivrl
fidivs
sbb
fwait
stc
inc
stc
pusha
mov
js
cmp
jl
cwtl
dec
fdivr
inc
out
push
icebp
or
inc
inc
cs
rclb
fs
mov
imul
lea
push
loopne
add
fsts
xor
insb
out
inc
sbb
adc
xchg
dec
mov
jno
and
repz
subb
aaa
or
ret
mov
mov
mov
or
jno
int
or
sbb
sbb
cmc
scas
push
in
mov
dec
gs
lods
loope
add
dec
pop
mov
xchg
imul
filds
nop
cmpsl
jb
inc
pop
imul
nop
insl
cmpsl
not
movl
cltd
clc
jl
test
and
jnp
out
dec
aad
incl
and
xor
test
lahf
inc
arpl
outsb
decl
lods
fnstenv
mov
and
in
xchg
into
pop
scas
xchg
xchg
jg
sub
pop
sub
xor
lahf
test
ja
aam
mov
cwtl
dec
out
xor
test
jg
scas
pop
imul
stc
pop
cmp
sbb
scas
inc
sbb
dec
rcll
xchg
inc
lods
adc
add
icebp
mov
jnp
shll
out
inc
cli
insl
lahf
mov
outsl
jp
ljmp
add
sbb
add
stos
in
mov
arpl
inc
out
dec
cmp
lcall
aam
inc
sbbl
scas
jb
mov
push
lret
adc
adc
sub
dec
jne
add
sbb
and
lret
xor
stc
xchg
mov
mov
sahf
lcallw
mov
out
mov
insl
jge
ljmp
mov
test
loop
ret
push
mov
adc
cli
lds
jmp
loope
adc
sub
stc
in
mov
jno
add
adc
adc
imul
popa
inc
mov
addb
xchg
add
xchg
testl
xor
jmp
outsb
xchg
in
movsb
pop
dec
xor
loope
repnz
sbb
mov
cld
add
xor
jne
and
ret
notb
mov
cltd
bound
ja
lret
sub
sbb
imul
cmpsb
jb
insl
lds
sub
out
inc
out
fisttpll
push
cld
daa
sahf
inc
js
aam
aad
add
in
mov
sub
sub
sbb
dec
push
outsb
popf
and
mov
loop
push
sbb
fisubs
push
push
lcall
out
les
jmp
jmp
mov
nop
lret
push
call
or
pop
ja
iret
pushf
ret
je
scas
out
sbb
std
movsl
and
js
mov
pop
pop
xchg
adc
push
cltd
mov
mov
mov
ds
mov
mov
pop
xchg
or
jg
push
jge
mov
adc
clc
fucomp
test
adc
mul
cmpsb
push
inc
int3
sub
sbb
xchg
push
mov
cmp
pop
out
addr16
push
sub
add
xchg
sbb
mov
dec
scas
gs
sub
loope
sbb
idiv
das
xchg
dec
mov
and
inc
fwait
arpl
or
sub
lret
std
orb
les
pop
shlb
orl
mov
ret
clc
inc
and
cmp
ss
jb
jb
movsl
cld
adcb
add
dec
mov
xchg
jl
xchg
out
mov
mov
jge
cli
inc
jns
hlt
add
daa
cmp
imul
lea
in
add
adc
jne
insl
mov
clc
or
hlt
sub
into
push
adc
lret
and
fldenv
xchg
lret
pop
lods
in
cs
sbb
scas
cld
stos
jne
clts
mov
int
mov
cmpsb
cmp
data16
jnp
push
xor
std
nop
sub
cmp
ds
loop
cmc
rcrl
dec
mov
mov
push
sub
and
xchg
pop
pop
aas
les
lods
es
int
push
inc
mov
sub
push
aaa
mov
dec
gs
dec
xor
and
pusha
jno
shrl
jo
push
push
je
iret
inc
pusha
xor
dec
push
cmpb
sbb
insb
aaa
jl
cmc
mov
sub
mov
pusha
jmp
icebp
jae
add
sub
cmpsl
jecxz
outsb
loopne
jb
cmp
add
mov
xchg
mov
mov
inc
adc
xor
pop
mov
xchg
inc
mov
jg
mov
mov
int
es
mov
arpl
or
stc
loope
scas
mov
in
mov
adc
sahf
imul
ljmp
fistpll
push
out
xor
mov
pusha
or
and
adc
mov
mov
cmpsl
insb
mov
ficompl
mov
push
arpl
dec
subl
jmp
cmp
sub
mov
push
lahf
jle
or
xchg
xor
mov
xlat
adc
fcmovnu
icebp
dec
sub
sbb
mov
jecxz
das
push
movsl
jae
daa
push
ja
mov
bound
jp,pt
ljmp
adc
xor
repz
loopne
or
ret
stos
test
ficoms
std
mov
out
iret
adc
mov
pop
mov
imul
dec
stos
pushf
inc
divb
and
ljmp
sub
andl
dec
cwtl
loopne
sub
and
mov
or
comiss
inc
mov
ds
insl
adc
mov
mov
subl
sbb
mov
mov
lret
clc
pop
icebp
repz
push
mov
add
jae
decl
movsb
xor
or
repz
repz
xor
lds
dec
shrl
sar
sbb
adc
lcall
and
or
imul
push
push
adc
movsl
jecxz
lods
xchg
pop
sar
xchg
mov
insb
xor
imul
shl
rcrl
jmp
or
or
xchg
cmp
dec
sar
hlt
mov
shrb
or
inc
mov
jecxz
je
insb
shlb
out
lock
jb
je
dec
and
pop
adc
and
mov
popa
imul
or
int3
rcl
sarl
ljmp
pop
adc
insb
dec
lret
je
sbb
dec
int3
rolb
ss
fsubrs
aad
aam
cmp
jns
and
dec
fcomp
push
push
sbb
mov
push
push
mov
cmp
sbb
push
fidivl
cld
es
push
into
lret
adc
lret
push
movl
sbb
jp
sub
sub
inc
test
lret
pop
jl
pop
pop
in
out
xchg
repz
int3
lds
outsl
jp
decb
ret
mov
gs
jns
es
and
or
std
adc
sbb
sbb
test
or
pushf
jb
ds
inc
stos
xchg
push
lret
imul
movsb
inc
mov
shll
jmp
cmp
push
or
shll
mov
fwait
ljmp
popf
push
mov
inc
bnd
dec
push
push
nop
mov
mov
int
sbb
rolb
xor
inc
das
adc
jbe
xchg
sbb
jle
call
xor
sar
lods
addr16
mov
pop
push
dec
inc
lret
lahf
xor
scas
mov
and
and
mov
mov
xor
mov
adc
in
cmp
stos
ret
push
out
lods
adc
xchg
dec
jae
xor
int3
fidivrl
sub
mov
jb
ja
dec
push
das
mov
out
aam
cmpsl
cld
mov
xor
jge
popf
sbb
punpckhwd
shrl
pop
pushf
insb
pop
stos
push
and
ret
shll
lret
int3
loop
jle
aad
movsl
outsl
cmp
mov
cmc
fsubr
xor
dec
mov
add
les
dec
loope
ret
pushf
sbb
in
jne
xchg
mov
xor
pop
sbb
sbb
xchg
fsub
push
testb
jp
mov
outsl
cmp
gs
lea
aam
push
mov
pop
clc
fldenv
xchg
nop
lods
add
cmp
cmp
das
push
mov
int3
cltd
sub
and
mov
dec
mov
inc
call
and
popa
and
dec
stos
lret
cld
and
rclb
cmp
push
popf
mov
pop
nop
fdivrs
xorl
sub
cmp
lahf
cmpsb
dec
or
div
lret
xchg
jge
pop
mov
aas
sahf
or
stc
hlt
daa
orl
pop
sbb
jne
ds
mov
xchg
push
pop
mov
jl
adc
xchg
lds
push
mov
adc
jle
push
xlat
insb
loope
movsb
std
mov
pop
fimuls
iret
aam
push
jnp
in
je
jmp
mov
push
push
sub
sub
mov
out
push
mov
lods
scas
mov
out
cmpsb
and
add
lods
pop
and
xchg
sub
sbb
inc
cld
jne
inc
cmp
test
or
dec
fiaddl
jb
push
lods
pop
dec
push
repz
mov
aas
mov
or
lea
or
jb
jg
jo
fwait
jno
mov
orb
xchg
adc
mov
in
cltd
inc
inc
mulb
mov
and
jno
mov
fwait
mov
orb
call
dec
ret
sti
jmp
jo
dec
or
aam
hlt
jns
scas
mov
inc
jne
xlat
pop
mov
fucomip
mov
ljmp
push
adc
jecxz
pop
pusha
add
xchg
mov
inc
repnz
iret
popf
and
mov
add
cmp
cmp
das
xor
je
andb
push
cmpb
sub
and
jecxz
or
mov
xrelease
mov
jle
aam
inc
enter
mov
ror
xlat
adc
xchg
mov
lods
in
add
aad
inc
xlat
mov
push
std
lock
mov
lret
and
xor
cmp
lcall
mov
fs
adc
gs
dec
les
jbe
leave
ja
push
cmp
mov
jo
orb
cmc
ret
jbe
jecxz
test
jge
or
les
adc
xchg
xchg
push
aam
gs
sbb
aad
gs
out
sbb
loopne
add
fidivl
dec
push
sar
jl
mov
arpl
pop
add
shlb
pop
sti
mov
and
dec
mov
popa
push
jbe
ds
jnp
cmc
popf
fisttpll
loopne
aam
repnz
lcall
dec
jae
inc
leave
mov
sub
out
pop
dec
xchg
cmp
mov
in
pop
xorb
fs
push
inc
xchg
fdivs
cmpsl
sub
cmp
loopne
call
test
sub
xor
ficoms
es
add
dec
es
inc
push
fisubs
push
repz
sub
or
in
in
xchg
das
imul
rcrb
xchg
testb
gs
insb
mov
dec
push
mov
add
sbb
push
aaa
add
jge
jo
ret
xor
movsl
aam
cmpsb
pop
test
push
mov
aam
mov
xor
cli
out
sub
fisubrl
push
xchg
inc
jg
dec
or
out
push
ret
mov
xchg
sarb
xor
push
fbstp
and
bound
jle
fdivrl
stos
ret
fisttpl
outsb
insb
xchg
add
mov
cmp
adc
je
shll
jno
ljmp
hlt
mov
pop
cmc
sub
push
out
jg
mov
setp
sarl
push
in
pop
testl
das
int
popf
roll
rclb
movsb
sub
daa
outsb
imul
out
ja
cmc
or
mov
jle
and
xchg
ret
pop
pop
int3
mov
aad
stc
lahf
out
jg
punpckhwd
mov
lret
push
add
fcomps
add
jnp
insl
popa
adc
ucomiss
push
jb
cmc
lods
popa
imul
lret
mov
jbe
fsubl
push
out
mov
das
rclb
movsb
add
dec
jae
call
push
xchg
mov
call
jle
rol
aam
jmp
sub
popl
test
mov
hlt
sahf
add
aam
repnz
cmc
out
pop
scas
mov
fstp
mov
sub
and
push
les
hlt
jns
scas
xchg
add
jl
ds
xor
fstl
rol
daa
cmp
mov
jge
outsl
dec
dec
into
sarl
sbb
cld
fistps
adc
sub
jnp
xor
scas
movsl
pop
dec
dec
mov
scas
jp
jg
je
ljmp
dec
add
sub
aaa
push
sub
jae
sbb
and
insb
roll
ja
lret
stos
cmp
xor
fmull
outsb
mov
xchg
movsb
jge
xor
mov
test
leave
and
cli
in
mov
xchg
push
aad
pop
mov
fwait
daa
cmp
int
in
sbbb
pop
iret
shrb
daa
enter
int
inc
dec
mov
and
mov
ja
inc
and
mov
cmp
imull
sti
sti
add
dec
add
aad
jp
aam
out
stos
lds
popa
inc
add
andl
mov
lods
adc
je
stos
mov
sarb
xchg
fidivl
sarb
inc
jbe
or
mov
stc
cmp
and
cli
pop
and
jge
jnp
ss
mov
adc
jecxz
scas
and
fs
hlt
or
cwtl
jns
daa
add
inc
imulb
cli
sbb
in
loop
int3
ss
sub
and
mov
push
fbld
gs
mov
scas
pop
subb
pop
xor
jo
mov
sub
mov
add
rorb
sbb
ds
push
sub
icebp
mov
sub
add
insb
push
cmp
sahf
mov
xor
cmp
xor
adc
cmpb
mov
lret
insb
ja
jmp
and
cmc
fs
sub
jne
adc
sti
clc
test
hlt
ja
loopne
mull
and
leave
call
mov
and
push
in
inc
cmpsb
push
loope
add
cmp
das
xchg
aam
ret
mov
cmp
xchg
xchg
out
and
fimull
jmp
pop
divl
scas
lods
mov
call
and
nop
pushf
mov
mov
pmuludq
and
mov
inc
lcall
aam
mov
cmp
push
cltd
lcall
or
dec
mov
sub
bnd
xchg
xchg
pop
loopne
push
jge
stos
test
hlt
loope
shll
jo
add
mov
xor
dec
cmp
pop
jo
ss
or
insl
inc
out
sub
lahf
loope
shr
orl
cmpsb
sub
xchg
xor
sub
lods
mov
push
xor
xchg
jne
push
shr
mov
lock
xchg
paddusw
xchg
mov
ss
nop
hlt
shrb
mov
push
enter
loopne
push
inc
icebp
jecxz
and
or
mov
and
inc
mov
or
outsl
imul
and
out
outsl
dec
inc
hlt
test
jo
rcll
scas
jmp
jbe
mov
cmp
frstor
mov
je
ret
in
pop
aam
lods
lcall
add
test
in
sbbl
add
stos
or
inc
iret
push
fcom
in
loop
sub
int3
out
loop
jbe
push
clc
push
pop
push
mov
sbb
xor
inc
mov
fsts
cld
fmuls
sub
ljmp
rclb
sbb
cld
pop
cmp
je
add
into
or
xchg
mov
fdivr
scas
mov
add
lods
stc
sbb
pop
pop
adc
inc
andb
adc
test
in
sub
cmp
pop
or
sbb
aam
out
sub
and
add
adc
adc
loop
and
mov
jle
jge
mov
inc
push
es
call
xlat
add
inc
out
mov
fisttpll
mov
pop
or
ror
cmc
push
or
adc
ret
xor
inc
clc
out
jb
xchg
push
loope
shrb
mov
adc
jnp
and
xchg
ficomps
es
sbb
sub
lea
xchg
popa
sub
dec
lret
fwait
roll
jg
lods
sti
jnp
sbb
dec
rorb
outsl
cli
movsl
aad
int
adc
jg
cmp
pop
fs
and
dec
sbb
push
int3
movsb
int
cmpsl
fwait
jecxz
mov
add
push
hlt
mov
or
jae
mov
mov
inc
cmp
lret
xchg
jmp
cld
push
rolb
cli
push
in
push
test
push
dec
mov
insl
and
add
outsl
ret
movl
mov
xchg
inc
push
call
fwait
popf
les
mov
mov
dec
repz
je
dec
cli
dec
leave
outsb
sbb
into
and
ljmp
sub
or
out
out
repz
mov
add
mov
subl
aad
sub
sub
xchg
into
add
mov
jecxz
mov
cli
cltd
push
in
dec
sbb
in
nop
inc
loopne
mov
jbe
cltd
xchg
lahf
dec
icebp
xchg
cmpsl
jp
push
into
inc
adc
sbb
push
imul
les
int
adc
or
jbe
adc
fnsave
push
mov
adc
mov
out
add
or
pop
dec
repz
inc
lcall
int
mov
roll
pop
loope
ljmp
adc
push
mov
cmpsb
sbb
insl
sub
xor
lods
and
ds
daa
mov
in
enter
ljmp
por
sub
icebp
call
in
fisttpl
mov
test
adc
jmp
setbe
sbb
or
push
repnz
jg
lret
fimull
dec
mov
cmp
sbb
dec
loop
in
cmp
xchg
pusha
dec
daa
cmp
pop
popf
pop
outsl
xor
inc
add
stos
push
pop
jge
mov
arpl
lcall
xor
xor
aas
ja
jbe
jnp
inc
pusha
fwait
out
addl
fisttpll
push
cmp
pop
xchg
mov
xor
add
jg
mov
mov
loopne
mov
mov
rcll
lret
shrl
std
arpl
push
lea
fisubrs
pushf
stos
repz
xchg
imul
mov
cli
icebp
hlt
iret
mov
shlb
cltd
rcr
or
pop
adc
cmp
pop
xor
test
sbb
mov
js
insl
sub
jmp
out
or
test
fldz
loope
fs
scas
cwtl
adc
xchg
fwait
jnp
lea
mov
push
pop
jno
ds
pop
stos
enter
xor
or
mov
es
or
and
mov
int
andb
inc
inc
rorl
into
stos
call
xchg
or
js
xchg
mov
xor
jmp
pop
and
jne
addr16
iret
mov
mov
int
inc
sub
sbb
aas
mov
xlat
sti
clc
call
and
mov
pushf
or
ljmp
xchg
scas
pop
xchg
shr
and
dec
cmp
xor
xchg
inc
out
pop
mov
es
xchg
adc
lcall
mul
int3
pop
jecxz
fistl
sub
mov
std
inc
xchg
fsub
sar
xorl
dec
fistps
fistpl
test
push
inc
negb
or
xor
or
xor
xchg
fstps
int3
mov
das
jae
es
nop
cmp
jmp
insl
xor
test
xor
daa
loope
fiadds
fbstp
sub
decb
push
nop
pop
subb
xchg
xor
dec
lock
sbb
cmp
fcom
int3
test
xlat
lret
or
and
fimull
xor
clc
lcall
mov
dec
fdivrs
pop
pop
push
das
popa
mov
pop
mov
call
add
arpl
mov
push
adc
and
xchg
dec
sub
pop
mov
rcll
sbb
popa
xor
cli
mov
pop
mov
das
icebp
mov
cmp
out
push
adc
mov
das
gs
or
rclb
mov
in
push
dec
repz
scas
lahf
xor
ja
xchg
ret
push
cltd
aas
in
scas
dec
dec
sbb
mov
cmp
dec
inc
fidivs
les
jbe
mov
aad
shlb
sbb
xor
imul
jnp
and
sbb
std
xchg
mov
mov
jae
test
jb
xchg
mov
mov
push
mov
fdivrs
sbb
push
shl
inc
mov
add
adc
cltd
sbb
bound
lret
mov
pop
add
xchg
xor
jb
jns
out
xor
sub
aam
dec
adc
lods
rcrb
sub
jne
xchg
stc
outsb
jae
ljmp
cltd
idivl
in
cmpsb
push
pop
xor
jmp
push
arpl
and
dec
jbe
and
and
inc
imul
mov
in
fdivr
sub
mov
add
repz
mov
or
loop
add
jae
xor
jb
push
jne
movhlps
icebp
cmp
xchg
cwtl
xchg
and
and
imul
enter
fs
in
in
jnp
aad
xor
dec
adc
mov
jne
adc
fldt
jmp
js
push
fadd
push
daa
popa
ss
mov
xchg
shlb
loopne
dec
lds
push
sub
lods
xor
int3
cmp
jnp
push
orl
xchg
je
ja
pop
xorb
call
xor
mov
enter
sbb
pop
shrl
mov
shll
sub
pop
jns
mov
xchg
add
subb
push
icebp
enter
sbb
jne
add
add
out
movsb
jge
pop
xor
test
push
mov
cmpsl
and
jbe
cmp
cmpl
nop
test
nop
jg
mov
and
push
test
test
shr
cli
xchg
xlat
adc
jmp
int3
pushf
mov
mov
scas
adc
test
jno
pop
dec
mov
nop
pop
lret
jmp
mov
incb
push
cmpsl
sbb
mov
pop
jg
test
loopne
sub
fisubrl
xor
sub
xchg
push
adc
inc
and
pop
movsb
fcoms
movsl
in
jmp
mov
repz
out
xor
push
xchg
xchg
mov
scas
repz
and
push
cmpsl
adc
jbe
int3
sbb
mov
xor
fwait
sub
mov
pop
adc
lock
or
add
sarl
mov
shrl
lret
scas
mov
les
pop
sbb
fcomps
mov
in
dec
test
add
call
add
push
xchg
mov
int3
xchg
not
dec
fildl
xchg
fildl
jecxz
nop
cmp
and
loopne
pop
push
int3
pop
imul
insl
scas
sbb
nop
out
mov
dec
inc
call
roll
fwait
mov
cli
jae
cmp
in
pop
mov
lods
sub
gs
fwait
jp
push
int3
push
mov
cld
ljmp
mov
push
pushf
cwtl
loop
sub
mov
jmp
scas
mov
xchg
outsl
mov
cmp
push
mov
test
iret
stos
sbb
xchg
enter
xorl
cmp
fwait
add
int3
cmp
fs
stos
sub
data16
mov
xor
cmp
in
insl
into
mov
sub
dec
cltd
xor
sub
xchg
test
lock
xchg
push
clc
cmp
mov
jo
mov
cmc
sub
das
shll
or
roll
shl
push
adc
dec
push
out
icebp
notb
inc
cmpsb
adc
mov
mov
rorl
push
dec
ss
rorb
test
mov
repnz
sub
fisttpll
cwtl
inc
lcall
mov
dec
sub
loope
push
sbb
xchg
adc
shlb
pop
mov
ret
and
adc
mov
jb
xor
shll
inc
ja
jle
cmc
xchg
in
out
fadd
iret
xor
inc
push
mov
outsl
lret
xor
data16
mov
outsb
push
adcl
insb
outsb
and
push
pusha
clc
cmp
ja
je
mov
das
xor
sbb
cmp
in
negl
push
cltd
test
aaa
mov
xor
outsl
push
add
test
popf
enter
cs
cmp
sbb
mov
jae
stos
notl
shlb
jle
mov
iret
in
test
cmp
adc
mov
nopl
mov
sar
xor
jmp
notb
mov
jnp
aam
jmp
xchg
fwait
inc
icebp
stos
aaa
jne
sbb
and
fimull
ret
xchg
sahf
aas
aad
mov
cmpl
lods
ds
insl
sub
add
mov
aaa
push
jge
lahf
ds
pop
ret
push
jno
ss
ficompl
or
pop
mov
cmpsl
or
out
and
inc
div
pusha
mov
xchg
cmc
out
add
fidivrl
int
lret
sbb
pop
jnp
push
sahf
mov
push
scas
repnz
sahf
imul
cmp
ja
ficoms
mov
sub
dec
push
icebp
xchg
mov
push
mov
flds
pop
xchg
adc
push
pop
push
xchg
jge
shlb
mov
insl
ljmp
ret
push
stc
xchg
in
push
mov
imul
dec
into
xor
xor
xchg
stos
scas
aaa
sbb
push
mov
pop
cwtl
push
xor
ja
push
jl
movsb
inc
mov
pop
das
add
cwtl
sbb
sbb
into
pop
test
movsb
inc
int
push
insb
inc
mov
jp
pop
in
sar
mov
push
jg
ret
test
push
ret
xchg
mov
mov
push
imul
sbb
xchg
add
or
and
enter
fs
sarl
neg
cmpsb
gs
push
ficompl
inc
xor
sahf
stc
dec
aas
es
push
add
fs
outsb
inc
repz
lock
imul
cmpsl
xchg
mov
addr16
sub
mov
inc
xchg
bound
and
xor
mov
push
fstl
divl
je
std
aad
fnstenv
adcb
mov
jle
fucompp
add
sub
iret
adc
inc
cli
inc
mov
push
ret
das
leave
and
or
cltd
pushf
jne
inc
stos
outsb
stos
jo
clc
insb
xchg
daa
out
and
loop
popa
mov
xchg
mov
jl
cmpsl
hlt
push
cmp
sub
xchg
movsl
jb
xor
add
push
outsl
dec
and
or
pop
xchg
lret
jl
sub
bnd
rcrb
sbbb
or
xchg
loope
xor
rcr
mov
outsl
movsl
add
or
add
push
and
mov
es
xorb
fwait
dec
aas
xchg
stos
fprem1
sbb
stos
xchg
std
push
jg
and
pop
mov
inc
inc
mov
pop
dec
cmp
push
fisttpl
xchg
in
xor
adc
jb
notb
rclb
xor
mul
pop
shr
stos
cmpsl
xorl
adc
adc
jp
mov
xchg
xchg
sbb
insb
out
push
test
jge
ljmp
cmpsb
xchg
popf
fxch
mov
or
jno
fsts
mov
add
jnp
repnz
xchg
test
bound
jmp
fwait
pop
add
jo
sbb
mov
pop
in
out
mov
sahf
sbb
pop
cmc
addl
xchg
test
filds
mov
out
cltd
push
mov
aam
std
and
clc
sub
push
xor
pop
inc
loop
lret
mov
and
popf
adc
mov
xchg
fmuls
xor
clc
scas
mov
or
or
xor
gs
xchg
cs
ljmp
inc
decl
xlat
loopne
pop
cmp
fdivrs
add
outsl
subl
in
inc
sbb
xor
pop
fwait
jecxz
roll
pop
xor
shl
adc
insb
iret
jae
testb
lea
push
lods
lea
and
push
mov
ret
inc
lahf
ror
sub
add
and
es
push
popa
xchg
jns
mov
pop
clc
fnsave
and
xrelease
mov
movl
inc
test
movsb
add
jns
test
and
shrl
push
out
cmpsb
lock
sbb
inc
mov
mov
jmp
imul
cli
fidivl
std
push
lret
aad
dec
shlb
push
mov
out
xchg
loop
pop
mov
rcr
pop
sbb
dec
popf
idivl
and
push
push
fiaddl
lds
push
mov
jno
out
lret
sbb
inc
fwait
jle
push
cltd
fsts
mov
and
dec
das
inc
int3
sbbb
scas
iret
xor
ret
push
das
clc
dec
fildl
lods
inc
arpl
xlat
dec
js
insb
xorb
jl
fwait
test
mov
test
stos
push
fstpt
mov
lock
test
dec
into
inc
in
pop
notb
cmova
rol
mov
test
ret
ja
push
sub
jmp
add
ds
jmp
test
dec
outsl
jb
ret
jns
aas
or
xor
mov
push
mov
sahf
jb
cli
or
bnd
inc
jmp
ss
xor
mov
dec
imul
movsb
mov
jbe
or
int3
movsb
sbb
or
push
jge
es
mov
loope
jp
notb
mov
mov
xlat
sub
dec
in
enter
sahf
cmpb
ret
jo
cmp
or
or
or
cmp
stos
scas
lds
inc
pop
mov
popl
mov
sbb
ljmp
ror
cmp
fsubl
roll
mov
sarl
ret
mov
out
and
inc
push
fs
scas
leave
mov
and
loope
lret
adc
cmp
push
push
mov
sub
outsb
sub
cmp
ret
or
movsb
mov
into
mov
test
mov
mov
xchg
jl
mov
lahf
test
sbbl
dec
sub
sub
mov
cmp
test
ficompl
mov
xchg
mov
pop
lds
sarb
iret
mov
sarl
in
dec
arpl
pop
fmull
faddp
imul
pop
push
xor
stos
in
dec
cmp
sbb
add
jno
iret
outsb
outsb
loop
lret
cmc
stos
mov
gs
jle
into
sub
push
fwait
adc
mov
stos
or
out
inc
nop
xchg
pop
scas
decl
sbb
dec
loop
je
in
or
cmp
repnz
adc
scas
ja
icebp
pushf
push
fucomi
cmpsl
push
jno
xchg
testl
mov
cmpsl
hlt
cwtl
enter
mov
or
jecxz
lret
fildl
lods
cld
add
insb
and
insb
popf
sub
mov
lock
sub
fsqrt
adc
test
fistpl
pop
add
shlb
fmuls
ljmp
xor
xchg
sbb
jne
subb
imul
add
push
cmpsb
mov
ret
mov
das
addr16
mov
jnp
mov
loope
popa
arpl
outsl
sub
xor
stc
out
rorb
dec
cs
clc
pop
dec
inc
fs
pushf
cmp
jno
add
shrl
ret
xor
mov
pop
repz
movb
mov
loopne
ljmp
xchg
sub
es
or
push
xchg
pushl
xorb
cmpsl
xchg
xchg
sbb
push
clc
lock
jge
out
int3
xchg
in
lahf
mov
jp
cmp
fstpt
xchg
lock
lret
movsb
sub
or
xor
sub
lods
fimull
push
add
outsb
xor
and
mov
mov
call
jl
fsubp
lock
xchg
js
mov
fcoms
lret
jne
subb
shll
or
pop
leave
adc
ret
enter
pop
int
int3
jp
sbb
sbb
jp
lret
cmp
aad
jne
inc
imul
dec
lret
sahf
ret
aas
lcall
xlat
pop
or
dec
mov
addps
xchg
fnstsw
test
outsb
cmpsl
sub
ja
adc
stos
xor
mov
lea
loope
ret
lock
out
inc
sub
pop
xor
jle
arpl
push
xchg
out
push
movsb
ss
pop
or
bound
aaa
sub
pop
sbb
andl
adc
sbb
push
push
mov
lcall
xchg
inc
sbb
outsb
mov
cmp
orl
xor
pop
mov
sbb
mov
adc
xor
jmp
xor
out
mov
pusha
cmpxchg
add
imul
imul
push
cmc
data16
mov
test
push
jbe
shrl
adc
and
sbb
lock
dec
push
xor
lcall
add
rcrb
sub
push
ljmp
pusha
cli
insl
loop
in
sti
xor
sbb
inc
mov
sub
loope
xor
mov
in
add
adc
and
pop
and
add
mov
arpl
and
movsb
xchg
dec
pop
dec
push
mov
cmp
into
aam
mov
inc
xlat
in
stos
adc
push
movsb
jne
in
xor
mov
mov
and
mov
pusha
enter
add
add
mov
jne
mov
insl
jmp
push
cmp
lock
and
fistps
daa
stos
hlt
fdivl
xlat
repz
dec
add
lods
int
andb
shrb
jns
mov
jle
sub
packuswb
pusha
cld
mov
inc
movsl
and
mov
adc
iret
movsl
int
push
add
lea
mov
mov
hlt
jne
jno
aaa
in
test
fs
pop
or
xor
mov
inc
adc
and
xor
dec
mov
push
mov
mov
sub
mov
and
inc
and
sub
xchg
insb
fucomi
test
xor
xlat
fdivrs
mov
xor
out
cmp
lret
or
pop
rcrl
xor
mov
xlat
leave
aaa
lret
jge,pt
add
test
add
daa
push
jmp
mov
push
mov
sbb
push
clc
ss
push
movsb
dec
lret
addl
push
jl
fmull
shr
lea
mov
pop
sub
popa
pop
das
in
in
lock
loope
dec
sub
shrl
stos
test
cmp
stos
repnz
jbe
jmp
add
cmp
xchg
jne
lods
pop
loope
aam
cmp
and
mov
or
dec
cmp
mov
inc
cmp
xor
mov
push
push
xchg
pushl
test
push
sub
mov
gs
icebp
shlb
stc
sbb
mov
pop
jno
dec
mov
add
jns
jo
lea
int3
loope
mov
out
mov
adc
mov
cmp
shll
or
adc
arpl
dec
cmpsb
loopne
pop
fildll
mov
pop
dec
pop
inc
jecxz
test
aam
jnp
cmp
xlat
fisttpl
xchg
and
jge
pushf
mov
call
mov
lods
inc
pushf
sub
faddl
popa
mov
push
pusha
daa
inc
gs
xchg
scas
into
cs
push
dec
imul
mov
xor
cmp
out
sbb
and
inc
fidivrl
xlat
adc
jo
imul
shlb
addr16
mov
fnstenv
adc
sahf
mov
inc
adc
les
lea
aam
addr16
mov
jb
xor
das
xchg
pop
stos
pop
inc
pop
mov
adc
mov
or
xor
mov
jae
add
ret
je
jnp
sti
mov
pop
adc
lret
sbb
sub
test
and
fwait
cs
mov
lcall
mov
sbb
xchg
dec
loop
ret
aam
push
xor
mov
cwtl
sub
inc
nop
scas
mov
and
in
ljmp
fstsw
dec
add
pusha
add
int3
pop
dec
dec
ss
ret
nop
std
ret
jnp
fdivrl
jg
mov
stc
or
mov
cs
xchg
inc
repnz
push
call
or
push
jb
pushl
ficomps
rolb
dec
jg
jge
inc
adc
lods
mov
jecxz
out
fisubs
pop
cmpsb
in
xor
or
pop
dec
jg
xor
pop
loope
mov
xchg
ja
mov
ja
jae
dec
jns
xchg
inc
stos
xor
popa
testl
fcomps
out
or
aad
orb
jge
cmp
rol
pop
or
test
ja
je
sbb
das
ds
insb
adc
in
push
inc
inc
in
jb
push
int
xchg
fidivs
sub
insl
divb
push
mov
pop
push
sub
mov
sub
fnstsw
xor
mov
or
mov
in
out
in
roll
pop
fwait
mov
sbb
jmp
push
sub
mov
dec
or
xchg
lret
subb
repz
xor
lret
jnp
push
aam
jns
jle
sti
fwait
xchg
out
xchg
int
lea
je
nop
dec
out
and
in
push
loopne
mov
fsts
add
xchg
js
mov
lret
cmp
cmp
sti
fs
inc
adc
push
and
fcmove
arpl
xor
mov
mov
and
pusha
dec
and
add
and
hlt
les
arpl
mov
insb
sbb
mov
jo
in
jmp
mov
add
sub
loop
shll
mov
insb
repnz
idivb
xchg
xchg
add
add
call
adc
outsb
rclb
xlat
cltd
in
repz
mov
imul
rcll
test
insb
jne
loop
fistpll
pop
mov
cmp
popa
xor
xchg
gs
insl
sbb
in
and
outsl
and
sbb
mov
pop
inc
xchg
sbb
jge
cmp
xorl
cmp
cmc
xchg
outsb
enter
lods
addr16
jne
cmpsl
add
out
jecxz
aas
pop
cltd
push
es
movsb
dec
mov
cs
popa
dec
ret
dec
mov
adc
mov
rol
dec
inc
clc
mov
pop
add
bndldx
cs
lcall
out
mov
xor
cmc
nop
sbb
xor
adc
sbb
in
insl
arpl
cltd
enter
imul
mov
icebp
ja
pop
or
mov
fcoms
mov
inc
mov
xor
mov
lock
aaa
mov
push
xchg
fxam
mul
jmp
lock
and
add
sub
dec
add
imull
ja
xlat
fsub
ret
dec
mov
fwait
push
sbb
movsl
adc
pop
mov
iret
push
mov
fimuls
fnsave
adc
filds
out
mov
out
push
xorl
shll
add
inc
push
scas
and
mov
pop
ljmp
fistpl
mov
sahf
jnp
sbb
sub
out
xchg
lahf
daa
dec
pop
shr
dec
inc
mov
fidivrs
pop
adc
mov
jae
and
fimuls
xchg
aas
enter
dec
xchg
insl
inc
aam
and
mov
push
push
dec
push
mov
das
insl
adc
test
loop
scas
inc
cltd
lock
gs
hlt
adc
stos
inc
xor
pop
jne
mov
int
sbb
cwtl
out
mov
aaa
stos
jne
or
cld
mov
cmpsb
dec
into
clc
movsl
mov
dec
xchg
push
push
xor
lret
push
divb
push
add
xor
pusha
adc
sub
idivb
pop
cld
cmp
test
mov
inc
lret
sar
inc
cmp
rcll
iret
data16
inc
cld
ds
xchg
adc
fldt
pop
push
or
adc
ja
std
pushl
xor
test
subb
xchg
iret
mov
mov
cs
je
fwait
aad
fcmovne
mov
jle
xor
inc
cmpl
stc
test
mov
ret
dec
adcl
ljmp
mov
mov
xor
mov
push
shrb
cmp
arpl
pop
jge
fdivs
push
rep
test
in
cmp
and
repnz
jmp
push
jae
pop
cs
or
clc
roll
popa
jp
jae
lea
enter
enter
sti
push
push
adcb
inc
fwait
outsb
inc
mov
mov
pusha
test
sti
jge
sub
test
mov
or
mov
pop
sub
dec
lret
cmp
push
xchg
xchg
xor
sti
mov
lock
pushf
bts
push
ret
ret
jp
lds
cwtl
aad
jns
inc
inc
mov
mov
inc
aam
mov
insl
outsl
in
and
iret
or
rcrl
cwtl
mov
and
ss
or
mov
andb
or
and
sub
mov
loopne
test
and
jns
aas
mov
sub
cwtl
mov
shlb
mov
pop
lahf
insl
push
push
addr16
jb
bound
test
pushf
or
test
xchg
xchg
xor
adc
mov
mov
jae
aas
scas
pop
jnp
enter
lea
adc
push
jns
xchg
aas
inc
in
lcall
push
rcr
jnp
fcmovnb
add
mov
jo
data16
fcmovne
lcall
xchg
inc
lock
aas
insl
jne
cwtl
mov
cmp
push
mov
add
je
push
jnp
push
adc
std
pushf
inc
mov
add
in
inc
xlat
sbb
mov
arpl
mov
subl
jmp
lods
dec
clc
cld
inc
lcall
sbb
mov
daa
imul
cwtl
dec
lret
iret
insl
xchg
jae
lock
scas
or
pop
popf
les
es
aad
mov
push
pop
cwtl
or
and
cltd
test
inc
dec
push
fstl
inc
sbb
test
call
test
xchg
outsb
jo
testl
adc
xchg
xchg
or
ja
outsb
sbbl
sbb
and
rcl
sbb
xlat
xor
lahf
pop
push
pop
test
cmp
push
shl
scas
pop
xlat
sbb
mov
jp
data16
ret
mov
sub
push
test
sti
pop
incl
add
jge
mov
aam
mov
jmp
pushf
repz
xlat
dec
cld
bound
div
mov
xor
push
enter
mov
cmp
pop
push
shll
cmpsl
rclb
cmp
or
out
scas
inc
aas
outsb
fimull
fyl2x
outsl
scas
xor
arpl
jns
out
cmp
xchg
out
test
subb
test
jae
adc
ljmp
loope
dec
imul
mov
out
jecxz
movsl
mov
cmpsl
cld
stc
dec
add
cmp
fstpl
shlb
lods
aad
mov
lcall
jns
orb
es
je
in
sub
add
and
and
adc
add
mov
xlat
fsub
repnz
in
out
loop
ret
lock
repz
jecxz
pusha
pushf
cmp
int3
adc
pop
jg
mov
in
aad
movsl
scas
icebp
mov
pop
dec
mov
mov
adc
dec
jns
sub
mov
sbb
jmp
add
pop
aam
mov
adc
outsl
push
fwait
cmp
into
push
cs
std
cld
jae
nop
jb
pop
sub
popf
js
push
cltd
sub
in
cli
stos
imul
sbb
lock
pop
adc
cmpsb
fwait
movsb
aaa
test
or
ljmp
inc
fcoml
pushf
fidivrs
repz
xchg
xor
push
mov
fwait
jb
sbb
loopne
or
inc
and
or
jecxz
js
push
pop
xor
mov
and
js
mov
setb
adc
fwait
or
jl
dec
loope
jle
mov
jge
jno
imul
ficompl
adc
xor
fdivl
sbb
add
jl,pn
cmp
mov
or
notb
ret
dec
int3
test
jg
sbb
rol
sarl
inc
mov
jmp
xchg
cmpsb
and
or
adc
push
cld
in
clc
dec
int
pop
add
mov
stos
push
adc
shrl
jb
push
loopne
fwait
insl
testb
fmul
cmp
repz
mov
and
pusha
loope
or
jmp
xor
xor
repz
cmp
aad
xchg
and
jb,pn
cwtl
bound
mov
aas
xchg
sbb
in
adc
rolb
push
jp
dec
dec
mov
fdivrs
leave
xchg
nop
xchg
nop
jne
stc
xor
arpl
push
cmp
call
dec
or
xlat
jns
lahf
and
mov
outsl
movsl
ficompl
mov
fisubrl
inc
into
xchg
xor
mov
mov
jmp
in
aad
mov
fninit
loope
pop
push
mov
loopne
ljmp
nop
nop
hlt
cmp
iret
mov
xor
aad
repz
cmp
dec
aaa
imul
pop
mov
cmpsb
enter
adc
xchg
push
sbb
shrl
addr16
leave
push
sub
aaa
aas
jno
jne
outsb
inc
lds
mov
enter
xor
sub
xchg
fstpl
mov
add
ss
fistps
adc
ret
xor
push
fucomip
rol
out
jno
lea
xor
mov
lods
jp
hlt
iret
sbb
fstpt
jcxz
mov
in
dec
mov
cmp
or
fldcw
and
push
jno
fwait
ljmp
ljmp
jecxz
pop
add
hlt
mov
mov
out
mov
or
dec
nop
inc
xor
cltd
nop
fistpl
push
mov
adc
or
pop
nop
mov
inc
mov
push
loopne
jae
mov
jg
jno
sahf
aas
dec
xchg
dec
data16
imul
ja
movsb
mov
and
dec
xchg
cmp
cli
add
xchg
xchg
aas
push
and
aam
cld
lret
dec
in
orb
cs
jno
adc
out
sub
xchg
push
lock
jo
popa
clc
mov
sub
xchg
adcb
les
out
jg
arpl
pop
sbb
cmp
mov
and
adc
pop
lahf
repz
fwait
xchg
enter
cs
out
shrb
dec
jae
ja
icebp
call
into
jmp
incb
xchg
rolb
push
pop
push
lahf
pop
xchg
idiv
in
mov
sbb
rcll
inc
xor
dec
test
outsb
ds
into
inc
fimuls
inc
out
or
rorb
lret
pop
sarb
loope
push
mov
adc
add
add
repnz
or
ret
sbb
das
ljmp
push
add
js
push
or
movsb
in
sbb
aad
imul
push
lods
addb
xor
sub
mov
mov
dec
int
sbb
adc
push
xor
pop
pop
adc
dec
mov
sbb
push
js
jb
testl
mov
dec
and
push
popf
sub
xchg
xchg
jne
enter
ljmp
fcompl
pop
inc
data16
mov
ds
xchg
or
dec
ror
and
sbb
mov
fiadds
xchg
push
sbb
leave
in
and
or
jae
ljmp
dec
xor
push
je
mov
mov
jns
push
pop
jg
jg
stos
jae
in
xchg
mov
popa
and
shl
daa
fists
xchg
mov
push
mov
test
sub
out
cmp
or
or
movsl
jne
or
shlb
addr16
add
jp
xchg
fldl
es
xchg
addr16
xchg
xchg
ds
scas
push
nop
adc
loopne
cld
push
xor
inc
call
mov
sub
cmp
insb
mov
jecxz
pop
or
xor
pop
ljmp
jp
cltd
cmp
inc
pop
dec
sub
xchg
shlb
lret
jge
jo
mov
test
fisubs
and
aad
adc
fisubs
subl
fs
les
ret
rolb
jne
ja
sbb
ficompl
pop
loopne
mov
insl
mov
and
inc
stos
fwait
icebp
stos
inc
pop
mov
lea
out
jae
sahf
repnz
dec
sub
sbb
fistl
pop
xchg
dec
push
jno
fsubs
xchg
je
jae
push
enter
mov
and
cmp
mov
push
fildll
cmp
fsubrl
cmp
inc
cli
int3
dec
pop
ds
push
xor
fistpll
cwtl
popa
cmpsl
sbb
cmp
in
push
int
shl
xor
or
inc
mov
testb
cltd
mov
jo
fmul
pop
fdivrs
inc
fstpt
xlat
lcall
push
push
lods
insl
aad
decl
xor
pop
cmp
loop
pop
pop
cmpsb
sub
sub
cwtl
mov
ss
dec
or
nop
fs
and
add
loop
mov
pop
lahf
sahf
push
ret
adc
mov
xor
das
adc
test
lods
shlb
lods
cmp
cmp
mov
inc
sub
dec
xor
mov
push
mov
data16
pop
fstpt
insb
add
test
jle
jl
xchg
mov
sahf
stos
shrl
xchg
imul
jmp
stos
cmp
xlat
cwtl
cwtl
dec
xchg
or
adc
push
push
dec
mov
rorl
jle
xchg
movsl
pop
mov
jecxz
std
sbb
movsl
jp
mov
sahf
xlat
dec
mov
lahf
sti
shll
iret
jle
ds
lret
or
fiaddl
and
aam
xchg
lods
fidivrs
lods
orl
leave
into
mov
fs
and
inc
jb
pop
push
push
cli
mov
inc
out
ret
jg
cmp
jge
jb
or
xor
jae
imul
out
xchg
ret
push
xchg
outsb
jb
pop
jb
sbb
mov
into
pop
inc
xchg
pop
int
xchg
outsl
lods
dec
inc
mov
test
hlt
sub
pop
cmp
cmpsb
mov
jae
sbb
pop
dec
scas
mov
xchg
cmp
or
popf
dec
jae
sub
cmpsl
rorb
cmp
mov
orl
inc
and
cwtl
and
push
dec
or
loope
or
rcll
cmp
sbb
or
xor
in
adc
imul
mov
cmp
push
in
mov
je
std
dec
fsubr
dec
ret
push
cmp
cld
push
jg
jo
mull
jp
arpl
lahf
or
jg
dec
les
bound
add
push
adc
jns
jno
aad
mov
xor
daa
xchg
pop
aas
int3
push
jge
mov
jb
sbb
xchg
xor
clc
sub
cmp
jl
lret
jl
push
mov
cmp
icebp
mov
jno
or
add
mov
pop
test
mov
pop
xor
adc
fsub
fdiv
jbe
push
loopne
xor
arpl
popf
dec
sub
jno
fimuls
mov
and
xor
jno
push
gs
imul
mov
or
xor
mov
jle
xchg
inc
jns,pn
jnp
cmp
cmp
push
jmp
fnsave
or
pop
fnop
cmpsl
out
mov
dec
idivb
xchg
das
mov
add
popa
push
sub
jo
scas
dec
punpckhwd
cmp
pop
jmp
leave
mov
sbb
mov
mov
mov
sbb
imul
mov
push
int3
pop
and
int3
inc
rclb
aad
jmp
jge
xchg
rol
loopne
lret
xchg
cmp
enter
sahf
popa
mov
and
lds
movsb
popa
dec
loop
fdivs
pop
push
jne
push
push
cmp
pop
movsl
fcoms
mov
xlat
mov
jns
ret
sbb
insl
or
je
dec
loop
adc
mov
cmpsb
push
ret
sub
enter
jge
ja
cmpsb
and
lods
cmpsl
mov
inc
in
aaa
or
imul
xchg
pop
xchg
cli
cltd
ret
test
pusha
dec
sbb
out
jb
or
sub
in
lods
push
in
jne
outsb
and
loope
fmull
repnz
and
les
aad
testl
xchg
mov
in
nop
lods
ss
jbe
sbb
aam
xor
sbb
mov
pop
mov
lret
insb
dec
pop
orl
shll
or
dec
lcall
push
jno
loop
aam
mov
aam
das
sbb
ror
and
adc
inc
dec
adc
xchg
ds
lahf
fcmovnu
mov
das
cmc
push
mov
imul
jbe
cmp
scas
cwtl
push
mov
dec
jge
xchg
movb
xor
ds
dec
repnz
push
mov
bound
or
stos
mov
xchg
lahf
mov
and
jno
or
sbb
in
and
fwait
jmp
add
fbld
or
jnp
lret
in
sbb
or
frstor
mov
jb
xchg
pop
pop
xor
mov
push
pop
add
mov
lds
xlat
ja
arpl
sahf
sub
stos
inc
rcr
xor
sarw
inc
and
mov
rcll
lds
dec
jg
mov
popf
icebp
popa
es
leave
shll
mov
push
clc
push
pop
push
pop
mov
pop
orb
and
sub
or
push
mov
inc
xchg
push
pop
data16
push
mov
arpl
popf
test
nop
inc
xor
lret
shlb
xchg
stc
add
xchg
xor
push
inc
mov
or
ficompl
jbe
adc
out
stc
in
push
cltd
repnz
js
negb
xor
popl
pop
jecxz
xchg
stos
scas
jge
xchg
pop
inc
sub
fidivl
add
dec
pop
rcr
rcrb
jb
lea
out
add
scas
ret
sub
das
jnp
or
mov
sub
mov
xchg
movsb
das
dec
sti
sub
cld
imul
lret
cli
fs
insb
and
mov
lret
in
movb
mov
out
adc
jno
mov
mov
dec
pop
xchg
mov
mov
bound
icebp
xchg
ljmp
xlat
or
cwtl
ljmp
xor
sbb
je
in
fsubrs
mov
or
add
es
orb
push
dec
jns
dec
cmp
das
movsl
subb
rol
pop
push
repnz
mov
scas
ljmp
lcall
std
scas
ss
stc
pop
lcall
xor
fistl
rol
aaa
add
test
mov
aas
jp
test
ss
mov
bound
mov
dec
inc
lret
call
pop
push
mov
fmul
add
inc
jmp
mov
shrb
scas
xor
fstpt
js
xchg
test
arpl
sub
cmp
pop
xor
cmp
les
pop
lds
mov
jecxz
lds
sbb
outsb
fidivl
dec
mov
dec
inc
mov
xor
dec
dec
sarb
cmp
mov
es
lods
jb
push
pop
pop
jg
sbb
mov
or
inc
jecxz
adc
jmp
jae
mov
adc
jmp
shlb
mov
xor
push
sub
cld
cwtl
pop
mov
cmpsl
or
addr16
addr16
push
cmpsl
ljmp
jmp
rolb
test
or
push
xchg
je
mov
imul
cmp
jmp
and
xor
dec
or
push
mov
mov
pop
sbb
pop
mov
scas
cmpsb
inc
inc
insl
jg
xor
mov
xor
ja
xchg
roll
lock
jae
xor
orb
or
incl
pop
out
or
jle
push
jnp
ljmp
push
into
xchg
add
aad
fisttps
lods
mov
pop
xchg
and
xor
jne
repnz
and
adc
cmp
ja
sbb
push
ficoml
jmp
iret
pop
ss
cmp
push
test
push
std
rolb
jnp
mov
rclb
stos
lret
pop
sub
xchg
inc
lret
xlat
popa
out
jne
lock
ror
mov
es
iret
in
jne
dec
lahf
popa
cmp
dec
dec
stos
mov
jmp
push
test
and
mov
pop
sub
cmp
sub
roll
es
into
push
mov
mov
jl
sbb
mov
push
inc
inc
push
sbb
and
fcomps
adc
rcrb
pop
out
cwtl
rorb
out
inc
lret
or
push
xchg
mov
out
sbb
loopne
and
jp
dec
adc
cmp
sti
adc
push
push
arpl
add
test
xchg
sbb
or
das
fldcw
je
pop
sbb
dec
loopne
fisubrs
pop
popf
rorl
popf
dec
das
inc
jecxz
and
nop
cltd
sub
nop
ja
mov
out
les
ss
fisubrs
xchg
mov
push
pop
mov
scas
jmp
pop
insl
lahf
mov
fsubr
cmp
push
jge
cld
xor
lcall
cli
icebp
push
sti
cmpsb
dec
push
jae
mov
sarb
mov
sub
std
std
in
mov
mov
notl
rcrl
sub
leave
gs
test
addl
ret
ja
xchg
popf
lods
sub
push
push
popf
lods
push
icebp
lret
loope
sub
adc
stos
inc
sub
adc
dec
gs
push
mov
cmp
xchg
insb
loop
and
cmp
xchg
rcrb
dec
add
out
fsubrl
and
push
js
rcrb
sbb
mov
stos
mov
ftst
jbe
fnsave
imull
out
loop
jo
out
imul
pop
adc
loop
test
jl
dec
xor
inc
or
dec
or
pusha
mov
xor
sub
lahf
aam
pop
add
scas
in
adc
sbb
jo
sbb
fs
pop
and
jl
cmp
xchg
loope
sub
pop
std
push
lds
jne
push
ret
in
mov
push
sbb
xchg
icebp
loopne
mov
stos
or
dec
call
sub
ja
je
and
rcll
adc
adc
cltd
pop
cli
lods
inc
add
pop
adc
inc
fdivrl
dec
adc
faddl
test
mov
pushf
rclb
lret
mov
add
mov
push
mov
lock
push
mov
cli
inc
insl
stos
outsl
push
movsb
dec
mov
dec
mov
and
adc
loope
jge
adc
push
xor
prefetch
aam
loopne
push
test
sbb
add
loopne
or
push
fistl
xchg
lahf
sub
adc
inc
mov
lcall
mov
add
rcl
aad
push
push
mov
fs
and
ja
call
std
dec
movb
xchg
cmc
or
out
out
fwait
adc
jns
mov
xchg
lods
pop
or
ret
pop
dec
jle
mov
call
xchg
decl
xchg
push
rcrl
add
mov
inc
movsl
dec
pop
add
mov
popa
mov
xor
loopne
and
sub
xchg
sub
push
cmc
out
negl
pop
lahf
nop
push
test
mov
push
lods
cmp
arpl
pusha
fistl
fisubrl
lret
or
adc
sarb
add
test
xor
dec
stos
mov
aam
mov
int
lahf
adc
imul
inc
subb
fs
mov
stos
fidivrs
lock
push
inc
scas
pop
pop
je
imul
in
popf
popf
or
sub
movsl
push
inc
test
out
lock
jae
sbb
xor
lds
cwtl
test
in
xchg
in
push
mov
idivl
xchg
mov
dec
outsl
or
cltd
cmp
popa
pop
pop
jge
jb
aad
jecxz
mov
popa
add
push
sub
xlat
repz
cmc
fldenv
scas
mov
inc
les
sub
cltd
insb
push
push
subb
pushl
int
fnstcw
iret
aam
sarb
pop
sbb
mov
clc
xlat
lds
cmp
jmp
in
insl
xor
jno
sahf
pop
xor
cwtl
sahf
inc
cltd
sub
sub
fistpl
jmp
mov
inc
xchg
notl
jbe
adc
adc
push
sbb
pop
roll
cli
insb
mov
insl
daa
lods
pop
add
es
sbb
xor
inc
dec
in
ss
mov
mov
and
and
sub
mov
fs
dec
ljmp
jl
imul
mov
mov
int
lods
sahf
push
add
adc
push
jecxz
dec
arpl
and
adc
rcll
push
push
fcomps
lock
sbb
inc
into
pushf
loope
mov
xor
ret
aaa
cmp
fwait
test
sbb
pop
xchg
mov
outsb
mov
jg
inc
dec
stc
push
pop
adc
aas
sarl
stc
rol
sbb
outsl
pop
mov
and
xor
xbegin
rorb
dec
xchg
sub
sub
dec
mov
cmc
mov
hlt
sub
enter
aaa
ss
test
pushf
jbe
sub
mov
sbb
push
push
jbe
out
faddl
mov
out
push
cmp
lea
insb
dec
shl
push
popa
lds
mov
je
mov
pop
lds
pop
ja
insl
pop
and
cli
out
mov
iret
jbe
pop
jle
jb
movsl
mov
xor
xchg
push
lret
fnstcw
arpl
sub
or
shrb
mov
std
leave
cmp
roll
mov
inc
jbe
clc
xchg
mov
cltd
cmp
adc
sbb
mov
lahf
pop
pop
testl
mov
mov
fs
scas
mov
pop
mov
dec
shll
xchg
ja
cltd
adc
cwtl
sub
fcompl
nop
and
push
pop
into
pushl
in
cmp
sub
cld
or
xor
xor
sbb
xchg
and
pusha
add
push
dec
inc
and
stos
lds
outsl
adc
pop
push
mov
push
xor
xchg
iret
inc
mov
int3
mov
addl
xchg
ficompl
das
lods
icebp
push
scas
loop
in
cmp
out
es
sbb
mov
pop
dec
rcl
adc
cli
jno
pop
push
add
leave
ds
push
jle
push
cmpsb
mov
int3
and
daa
in
stos
addr16
xchg
andb
sahf
and
push
shl
push
jecxz
xor
and
rcr
cmp
test
sbb
scas
pop
subl
shlb
filds
push
cmp
sub
inc
push
and
and
hlt
fmull
cli
pop
xchg
out
call
gs
lods
in
sub
mov
sbb
cmp
shrb
dec
sbbb
adc
sub
dec
jae
dec
jb
scas
les
idivb
and
inc
aam
mov
mov
shlb
cli
mov
adc
sbb
mov
test
add
pop
gs
cmpsb
adc
xchg
xchg
sahf
out
adc
push
pushf
ss
pop
lret
roll
push
dec
cld
mov
jmp
loop
movsl
mov
pop
iret
or
and
or
inc
vaddsubps
repnz
cmp
iret
fistpll
out
pop
ficoms
arpl
cmp
idivl
xor
loope
cli
mov
loopne
xor
xor
sub
ficomps
lds
jg
adc
bound
orb
push
sbb
cmp
inc
icebp
das
mov
lea
mov
insb
sbb
fcoms
lds
and
inc
cmpsl
and
dec
rcrl
xchg
push
loope
jo
lea
sub
lret
lret
mov
pop
lock
out
cmp
lcall
push
ret
sahf
test
push
stc
js
xchg
mov
das
jp
xchg
sub
stos
add
mov
mov
dec
arpl
fistl
inc
shl
mov
imul
lret
sub
call
xchg
ja
je
hlt
cmp
test
push
jbe
movsl
fdivrs
outsl
mov
and
mov
jle
loopne
aas
or
ja
sahf
pop
dec
add
sarb
xchg
pop
sub
cmp
adc
adc
stos
movsl
jle
cmp
or
andl
push
test
jl
je
mov
adc
sub
push
test
mov
add
cmpsb
dec
push
xchg
add
lcall
xor
data16
xor
insb
das
sbb
scas
inc
pop
lods
mov
add
push
repz
dec
into
xor
in
gs
bound
dec
aad
mov
cmp
pop
fnstenv
sbb
mov
sbb
rcrl
test
mov
jge
out
mov
or
movsb
mov
int
pushf
cmpsb
iret
xchg
mov
push
iret
cld
sbb
or
dec
popa
cmp
daa
and
in
xchg
mov
outsb
mov
and
dec
jne
ret
push
movsb
jp
shll
push
push
add
pop
leave
push
cli
pusha
mov
pop
mov
and
and
in
mov
lahf
ljmp
push
iret
addl
xor
cld
inc
xor
dec
jmp
aas
fsubrs
in
popa
mov
ljmp
cwtl
aas
sbb
loop
xor
lret
jo
subl
movsl
bound
repnz
push
cmp
fcom
xor
sahf
cltd
rorb
push
mov
jl
cwtl
pusha
mov
inc
cmp
jne
push
cmp
cmp
rcll
dec
adc
add
or
ret
cmpsl
sub
xor
cmpl
cwtl
add
adc
dec
lret
and
clc
lahf
mov
iret
sarb
mov
hlt
adc
jns
add
mov
pop
popl
shl
sti
xchg
jne
xchg
mov
pop
repz
jne
jnp
mov
pop
push
inc
mov
sbb
jo
leave
xchg
jnp
lcall
int
lods
into
in
das
and
jp
fwait
scas
mov
xchg
mov
mov
sbb
popf
jae
xor
mov
sbb
mov
or
adc
mov
out
cld
sahf
push
jg
stos
sbb
inc
sub
dec
jne
xor
cmp
mov
pop
loopne
push
add
jg
dec
pop
int
rcll
xchg
mov
dec
fimuls
mov
xchg
cwtl
imul
xorl
pop
cli
stos
std
cmpsb
sub
loope
jp
inc
out
enter
scas
lahf
shr
lahf
out
mov
nop
mov
fs
inc
jne
sbb
pop
outsb
push
add
xchg
in
and
sub
push
pop
or
pushf
popf
pop
je
aam
mov
mov
mov
sbb
mov
cs
mov
or
push
aam
test
clc
adc
sub
jg
das
sahf
loope
mov
gs
push
mov
scas
pop
dec
mov
mov
in
xchg
lea
call
and
inc
and
ret
lret
xchg
sahf
mov
push
xchg
sub
in
dec
cmpsl
sub
movsl
xchg
adc
dec
push
xor
jb
rclb
xchg
daa
mov
mov
push
rorl
iret
out
mov
in
lahf
push
in
fists
and
jmp
inc
and
jns
cwtl
jl
mov
jb
pushf
mov
outsl
push
cmc
push
xchg
sub
cmp
lea
and
cmpsb
lock
xchg
xor
jae
aaa
icebp
xchg
sbb
and
jmp
mov
insl
inc
aaa
les
pop
fwait
ja
push
sbb
mov
shrl
xchg
jne
clc
fmulp
xlat
xlat
movb
xchg
mul
lods
cmp
lods
dec
cmpb
lods
imul
mov
sbb
xor
add
push
sbb
cmp
loope
sbb
mov
adc
add
mov
fadds
rcrl
rcrl
cltd
mov
or
cmp
mov
fdivl
xor
lea
outsb
dec
je
cmp
mov
sub
jno
jl
cmp
xchg
int
push
adcb
cmpsb
add
mov
cwtl
pop
test
roll
pusha
adc
popa
xchg
mov
mov
rorl
insb
and
push
enter
imul
inc
cmp
or
scas
xor
outsb
and
int
repnz
mov
sbb
enter
dec
xor
dec
leave
or
mov
fistpl
adc
pop
pop
cmp
fisttps
add
or
pop
mov
pop
inc
cmc
shl
mov
xchg
scas
push
mov
xor
mov
xchg
sub
and
lret
cmpl
adc
lods
xchg
inc
pop
xchg
inc
sarl
mov
push
mov
stos
mov
pop
xchg
rcrl
add
insb
cmp
leave
jb
out
sub
subb
cld
aaa
lret
add
add
push
les
or
fdivr
pushf
add
arpl
cmp
test
push
rcrb
lods
mov
sub
ds
imull
sbb
xchg
scas
out
lds
push
test
pop
xchg
dec
sahf
cmpsb
orl
pop
cmp
adc
test
pop
xor
push
mov
mov
cmp
shrl
adc
fsubrp
xchg
jle
mov
add
add
sub
xchg
arpl
arpl
aad
mov
mov
mov
and
clc
push
adc
and
sub
stc
stos
jecxz
cmp
fcoms
jp
sub
loope
sub
dec
addb
outsl
and
pop
vmwrite
ja
iret
mulb
mov
repz
rcl
fs
icebp
pop
push
nop
dec
xchg
push
test
and
jmp
inc
push
and
sahf
sahf
lahf
mov
mov
dec
or
fbld
pop
and
loop
jmp
push
adc
mov
es
mov
jl
add
rorb
cmpsl
addr16
stos
ja
dec
jne
cli
push
pop
add
shl
jg
mov
dec
or
ds
cmp
sbb
dec
lret
pushl
mov
jb
sbb
rorb
jns
rorl
call
sub
mov
sub
mov
ljmp
jb
xchg
mov
dec
jp
jp
add
xchg
push
movsl
in
inc
iret
mov
sub
ds
repz
loop
jbe
add
adc
sti
test
mov
icebp
dec
mov
rcl
lcall
sbb
int
and
cli
pop
push
and
lret
imul
adc
ss
imulb
andl
push
mov
xchg
xchg
and
push
pop
cwtl
mov
dec
mov
push
faddl
mov
lds
mov
cli
repnz
or
add
pop
dec
popf
cmp
pop
mov
add
push
scas
adc
inc
ljmp
inc
dec
addr16
pop
adc
and
test
mov
aaa
add
mov
aad
popf
mov
mov
imul
xchg
xlat
and
xor
int3
out
daa
pop
ss
mov
xor
mov
mov
mov
icebp
cld
jl
cltd
jmp
adc
cld
sbb
leave
adc
sub
push
sahf
out
xor
fisubs
pop
cmp
rcrl
mov
pushf
push
aas
das
sub
cltd
push
mov
mov
divl
xchg
insb
push
sbb
fisttpll
mov
add
sbb
cmpsl
or
inc
pop
out
adc
cwtl
add
inc
int3
bound
fmul
sahf
xor
into
push
bound
les
sub
xor
and
daa
sub
xchg
pusha
adc
sbb
andl
rclb
or
sbb
sub
inc
inc
inc
jp
pop
cmpsl
push
jae
xor
mov
or
pop
addr16
pop
andb
loope
add
and
fstl
stos
lea
int3
insb
mov
sbb
in
hlt
add
rep
movsl
mov
test
sti
fisubrl
or
adc
lods
xor
inc
xor
xor
jmp
mov
xchg
xchg
int
scas
mov
sbb
push
outsl
aam
mov
shl
mov
bound
xor
dec
shll
push
ds
and
adc
sbb
cltd
test
sub
xchg
fwait
shr
lahf
mov
jecxz
cmpsl
pop
jae
data16
loop
les
xor
push
xchg
ret
mov
sbb
add
adcl
fsubrs
pop
pop
cld
sub
hlt
push
in
gs
and
shll
lds
ret
push
xchg
inc
mov
jno
pop
mov
sbb
arpl
nop
sub
les
movsb
js
mov
mov
xor
adcb
lea
pop
and
jp
and
incb
fwait
pop
sub
mov
stos
enter
xchg
mov
inc
push
in
cltd
fistpl
es
mull
push
ret
xchg
add
add
add
adc
jl,pn
jmp
pop
xlat
xchg
scas
rolb
mov
or
jns
mov
dec
cwtl
movsb
hlt
fcoml
mov
xchg
mov
and
jle
frstor
fisubs
push
test
push
add
or
arpl
pop
adc
in
fildl
dec
ror
mov
fldenv
pop
mov
mov
xchg
pushf
mov
mov
scas
add
popa
jle
call
ds
loopne
arpl
stos
fsub
mov
iret
sbb
xchg
fdivs
xor
insb
into
mov
sti
enter
mov
dec
mov
adc
out
ret
out
or
mov
adc
mul
jne
loopne
cwtl
cli
ds
push
push
arpl
dec
ss
shl
into
pop
push
cmp
xchg
and
repz
insl
test
mov
lahf
js
ljmp
inc
mov
pop
mov
insb
jns
iret
jg
mov
mov
add
cmp
aaa
pusha
fwait
mov
pop
sbb
imul
xchg
je
mov
test
mov
jnp
lds
popf
push
jnp
fdivl
inc
inc
mov
jmp
es
mov
sub
mov
push
fs
cmp
repnz
or
pop
jbe
call
jmp
jl
jp
push
pop
xchg
test
sbb
mov
test
xor
pop
hlt
out
jecxz
jl
adc
inc
sbb
pop
mov
nop
call
gs
lcall
push
jo
sbbl
sub
fmull
add
inc
das
mov
adc
add
loope
jbe
les
sub
lds
xor
pop
add
inc
push
out
mov
add
stos
icebp
cmp
cmc
push
lcall
stos
adc
jle
and
xor
test
cmc
popa
orl
mov
mov
adc
out
mov
dec
sbb
mov
pop
les
add
xchg
je
push
cltd
aaa
mov
adc
add
push
cmpsb
sbb
sbbl
xor
push
faddl
mov
clc
das
jo
cmpsl
fwait
and
andb
cmp
bound
push
shlb
sbb
rorb
nop
jecxz
and
cmpsb
push
mov
mov
pop
shlb
js
pop
push
mov
and
inc
ja
out
push
enter
and
mov
push
idivb
push
mov
mov
icebp
popa
and
xchg
arpl
imul
cmp
fstl
push
xchg
mov
sub
xor
lcall
dec
enter
mov
mov
jmp
sbb
cmpsb
fstps
jl
mov
data16
lret
lea
in
imul
cld
push
lock
test
xchg
ret
mov
aad
imul
pusha
imul
cmp
lcall
push
jmp
xlat
sbb
popf
popf
or
adc
mov
out
sbb
add
xor
mov
add
in
ja
in
xchg
add
xor
pushl
dec
push
sub
sar
andb
dec
fisttpl
fimuls
jne
push
dec
insl
into
dec
add
push
xchg
cmp
in
out
cwtl
cmp
in
jb
addr16
cld
int3
loopne
leave
jmp
insl
aas
mov
and
inc
mov
repnz
stc
mov
jmp
inc
mov
xchg
mov
nop
mov
pop
pop
sub
imul
cmp
mov
dec
sub
xchg
and
mov
out
xor
and
pop
sbb
xchg
mov
mov
jo
fcmovb
cmp
mov
push
neg
pop
push
es
ret
sub
insb
xchg
cwtl
sub
add
adc
jl
mov
pop
andb
inc
sti
int3
cltd
repnz
mov
push
mov
daa
dec
adc
cmp
andnps
push
jo
daa
and
popa
jnp
pop
jmp
jmp
push
mov
jp
leave
pop
mov
lret
dec
mov
mov
pop
inc
out
iret
sbb
enter
adc
push
jecxz
sarl
fimull
xor
in
adc
push
push
sbb
movsl
call
pushf
or
roll
repz
inc
jb
lds
inc
mov
pop
sbb
mov
cmp
fcmovnu
fldenv
add
pop
fstpl
cltd
xor
dec
jno
add
ret
int
outsb
sbb
mov
jmp
test
xlat
iret
mov
sbb
js
jb
sub
mov
stos
test
imul
test
fidivs
xchg
mov
loope
mov
sub
outsl
call
mov
mov
cli
push
in
inc
imul
xchg
cmpl
movsb
outsb
pop
mov
scas
shll
dec
fdivrp
jl
jne
mulb
mov
cmp
add
mov
test
pop
push
and
dec
mov
movsl
dec
addr16
xchg
inc
ja
shll
push
nop
dec
xchg
ret
in
add
jb
in
rep
and
adc
fdivs
sbb
dec
push
test
mov
dec
mov
pop
ficomps
addr16
dec
sbb
mov
lock
leave
sub
sub
gs
cmpsl
das
lcall
dec
fsubrl
or
jl
inc
mov
mov
test
jno
pop
inc
cmp
aam
fsin
test
repnz
je
pop
out
add
mov
sbb
mov
dec
sub
cltd
pop
lahf
push
add
push
incb
shrb
xchg
xchg
movsl
mov
push
fsqrt
jmp
cmpl
xlat
jbe
ficoml
inc
or
addr16
push
adc
xrelease
inc
ljmp
loopne
inc
xchg
dec
push
cmc
std
sbb
cmpsl
shlb
and
pop
lar
jnp
add
stos
js
pop
dec
mov
sbb
dec
pop
sbbl
add
sbb
rolb
dec
enter
inc
clc
push
cmp
stos
ret
cmpsb
mov
sbb
int3
lahf
adc
or
mov
cmpsl
loopne
xor
mov
lock
cmp
xor
xor
clc
xor
cmp
jne
and
or
daa
add
fnsave
sub
fldln2
cli
cmovl
dec
sub
xchg
out
cmpsb
sbb
js
lahf
ret
jle
leave
cmpsl
loopne
mov
push
cld
daa
aas
test
enter
popf
loope
jge
lock
jo
inc
sahf
mov
xchg
xor
call
sbb
sbb
hlt
xor
or
dec
xor
jmp
dec
aas
pop
scas
mov
repz
lret
push
xchg
and
xlat
dec
sahf
into
mov
inc
clc
mov
cmp
popa
inc
jno
call
dec
das
jae
jg
int
mov
mov
addr16
xor
stos
fnstsw
mov
iret
insl
xorl
sbb
and
cmp
fdivrl
cltd
or
sub
mov
outsb
cmp
mov
jne
mov
sbb
and
nop
push
or
adc
out
fs
lods
nop
pop
test
repnz
jmp
fstpl
sbb
into
jb
sub
inc
daa
xchg
cs
push
stos
dec
test
ss
mov
add
pop
sub
push
punpckhdq
mov
pop
mov
dec
mov
test
neg
addr16
adc
mov
leave
das
or
pop
mov
push
iret
xchg
push
mov
mov
out
lds
adc
sbb
arpl
push
mov
sbb
mov
movsb
xor
mov
stos
cmp
dec
fadd
mov
push
std
xor
jle
jnp
pusha
and
mov
mov
mul
insl
mov
sbb
push
mov
cmp
push
sbb
imul
orl
adc
in
push
movsb
mov
sarl
call
ds
pop
xchg
xor
jp
and
shlb
cmp
jge
pop
pop
les
ficompl
in
pcmpgtb
mov
lcall
ljmp
imul
lods
adcl
in
push
and
rcr
addl
imul
fists
out
push
mov
stc
roll
jp
push
lods
lods
xchg
leave
push
pusha
inc
cmp
inc
jae
mov
imulb
cltd
lods
jp
jmp
shrl
mov
rcrb
fmull
fld
fisubrl
pop
divb
mov
mov
inc
adc
shlb
scas
mov
jg
push
mov
loop
mov
sbb
or
test
scas
test
adc
push
jp
push
mov
or
add
clc
mov
popa
add
push
pop
clc
ja
orb
ss
inc
xor
xchg
inc
stos
div
lock
push
or
ds
push
sbb
mov
mov
push
pop
insl
sbb
mov
push
gs
divb
rcrl
xor
xchg
mov
inc
dec
lahf
scas
xor
pop
push
out
inc
test
add
dec
or
mov
xchg
and
dec
ja
bound
jb
es
movsl
push
cmc
and
stc
test
mull
fs
stc
std
sahf
adc
jnp
fdivs
test
lret
xchg
pop
and
push
cld
insl
sbb
xor
add
pop
mov
or
adc
imul
popf
gs
jmp
jle
cmp
cmp
jp
daa
add
nop
jbe
cmpsl
adc
lcall
cmc
outsl
or
inc
aad
xchg
pusha
jnp
pop
pop
cld
sbb
rorl
jae
xor
sub
jmp
xchg
lods
adc
sub
sub
sub
and
adc
scas
fiaddl
icebp
sbb
bound
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
push
push
mov
push
call
lea
push
lea
push
lea
push
call
test
je
mov
push
push
mov
push
call
mov
add
mov
push
push
push
call
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
mov
push
call
movl
jmp
movb
movb
push
mov
push
call
movb
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
mov
push
push
mov
push
push
push
call
movb
mov
add
mov
mov
movl
mov
push
call
call
pushl
pop
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
movl
call
mov
push
push
push
mov
call
test
jne
push
push
push
call
call
push
push
push
push
push
call
test
je
push
push
push
call
mov
mov
call
mov
cmpl
jne
push
call
add
push
push
push
call
xor
pop
mov
pop
ret
sub
push
push
call
lea
push
call
push
call
cmpw
je
push
push
push
push
call
push
call
add
jmp
lcall
lods
dec
cmp
push
xor
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
cltd
iret
sbb
sbbb
fbstp
adc
cmp
jg
mov
out
and
outsl
pop
jle
movsl
addr16
lock
out
outsl
jo
sbb
jbe
mov
mov
xor
dec
cmp
push
sub
ret
mov
cmpsb
or
mov
xchg
ljmp
repz
adc
pop
adc
leave
jbe
jae
inc
sbb
int3
ds
ja
out
fstpl
inc
lods
lret
cmpsb
pop
lds
fimull
xchg
mov
popf
mov
mov
aaa
inc
fistps
aad
xor
inc
jg
insb
fldl
mov
ret
mov
cmpsb
dec
cmp
xchg
shl
lds
loopne
aas
sbb
xor
fcom
cmpsl
orb
dec
cmp
pushf
shrl
dec
cmp
xchg
shlb
dec
sub
xchg
shlb
pop
cmp
xchg
aad
orl
adc
mov
dec
cmp
cmpsb
aad
orb
dec
cmp
xchg
shlb
pop
cmp
xchg
shlb
cmp
adc
lods
dec
cmp
stos
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
cmp
pushf
shlb
jne
sbb
rcll
xchg
and
jge
jecxz
cmp
mov
cmpsl
pusha
popa
inc
fistpll
adc
shlb
dec
insl
sbb
xlat
sub
shlb
dec
cmp
xchg
lock
subb
xlat
adc
xor
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
xchg
shlb
dec
cmp
popf
rorb
dec
pop
mov
std
cmp
pop
fstps
mov
adc
shrl
pop
out
sahf
mov
test
pop
inc
mov
mov
icebp
add
push
in
test
orb
pop
dec
movsl
and
pop
mov
mov
or
push
xor
pop
pop
fildll
inc
ja
ds
sbb
inc
fwait
in
lods
fnstsw
ret
aad
push
jl
cmp
lods
jecxz
insb
cmp
sub
out
mov
jmp
pop
adc
lods
imul
push
mov
test
shl
and
pop
mov
lods
and
popf
in
mov
and
inc
loope
in
lcall
jg
jae
sahf
mov
lock
sbb
flds
outsl
aas
mov
sub
cld
jecxz
test
or
shrl
stos
in
jmp
cwtl
mov
inc
mov
lods
mov
std
inc
shr
cmp
cmpsl
inc
pop
sbb
sub
or
not
loop
test
scas
xor
pushf
cmp
cli
cmpsl
and
push
push
mov
mov
push
cmp
arpl
inc
mov
bound
movsbl
push
outsl
inc
pop
mov
push
adc
xchg
xchg
imul
adc
jnp
inc
fs
hlt
cld
inc
sub
out
or
inc
sbb
pushf
aaa
daa
je
sub
pop
inc
mov
push
cmc
sub
in
sti
lret
test
cs
ljmp
xor
cli
add
xor
testb
pop
push
cwtl
adc
outsl
xrelease
and
xor
cmp
inc
outsl
rcrl
and
pop
mov
pop
sti
pop
push
mov
les
pushf
fwait
fwait
pushf
inc
enter
mov
lods
mov
dec
data16
adc
xchg
int3
shlb
popf
add
mov
test
mov
or
pop
mov
mov
and
push
push
or
xchg
hlt
xor
fbstp
lock
pop
pop
out
sbb
es
data16
loop
jns
fildll
ret
xor
and
stc
mov
sub
aaa
xlat
adc
adc
cli
lcall
fs
ret
call
xchg
adc
fisubrl
adc
jg
pop
mov
in
push
hlt
je
jecxz,pt
cmp
into
icebp
push
cmp
pop
mov
and
sbb
in
mov
cld
imul
and
comiss
mov
jmp
sub
int3
mov
mov
in
jb
popa
movsl
call
mov
stos
adc
cmp
scas
frstor
pop
dec
and
cmpl
push
fsubrl
jae
mov
mov
and
mov
in
sbb
sub
pop
dec
loop
ud1
cs
sbb
loop
fs
sbb
fwait
push
and
pop
sbb
int
mov
jb
cmp
xchg
pop
addl
xor
test
outsl
mov
mov
push
ret
stc
add
fiadds
cmp
test
inc
aad
sbb
insl
loopne
push
add
dec
xchg
dec
lods
add
adc
sub
adc
cmpsl
push
lahf
pushf
fldl
mov
pop
dec
add
cld
xlat
lods
rclb
sub
lds
push
outsl
mov
push
pop
inc
sbbl
add
cli
push
in
sbbb
pcmpgtd
bound
jp
es
dec
ret
testb
psrad
stc
loop
dec
es
jns
cmp
fdivl
addl
pop
cmp
stos
cmp
or
fistl
jl
dec
scas
sub
jle
imul
or
repnz
or
push
test
stc
mov
repz
pop
and
pusha
add
jmp
pop
insl
in
push
lcall
sbb
xchg
adc
push
sub
aad
add
out
test
dec
test
emms
popa
ret
add
pop
mov
push
mov
dec
sbb
fimuls
rclb
adc
and
shlb
push
je
lret
lock
fimull
nop
adc
sbb
dec
xchg
enter
arpl
mov
hlt
lods
pop
xlat
shrb
or
or
push
movb
dec
pushf
je
stos
sbb
xor
dec
hlt
inc
adc
cmp
pop
imul
aaa
and
mov
fldcw
andb
notl
mov
cmp
aaa
xchg
mov
push
inc
das
cmp
les
fisttpll
lahf
aaa
xor
fwait
adc
into
rcr
hlt
test
gs
enter
or
xor
adc
xlat
sbb
jne
mov
add
cmp
pop
shl
addr16
jecxz
out
and
mov
negl
dec
dec
mov
test
pop
in
jg
mov
cmp
leave
add
mov
sub
scas
cmp
xchg
cmc
rolb
rorb
lods
xchg
shlb
mov
pop
mov
mov
mov
mov
push
cmpsl
mov
test
in
xor
rorl
and
jae
mov
mov
adc
aam
mov
rorb
clc
in
pop
int3
enter
push
mov
call
pop
cwtl
enter
or
in
adc
out
enter
pop
mov
mov
jl
clc
inc
jp
ljmp
mov
scas
push
pop
add
mov
adc
rcll
sbb
or
dec
stos
bound
icebp
lods
test
adc
bnd
imul
js
push
pop
bound
hlt
rcl
push
cmp
add
arpl
shlb
cmc
adc
sub
push
xchg
bound
push
mov
pop
sbbl
iret
insb
mov
xor
jae
add
xor
and
lods
jl
sub
push
mov
lock
rclb
aaa
adc
nop
fdivs
in
into
call
mov
push
pop
cmpsl
inc
add
push
jg
enter
stos
pop
out
sbb
inc
dec
and
xchg
or
sbb
inc
mov
jno
std
pop
sbb
dec
popa
jg
test
test
mov
dec
mov
and
mull
jmp
fimuls
fwait
lds
sub
test
sbb
out
bts
cwtl
mov
sbb
aad
pop
fists
cmp
xlat
cs
add
cli
loop
adc
jecxz
lahf
xor
ljmp
pusha
movsl
loope
sbb
into
mov
iret
fdivrl
mov
jl,pt
outsb
adc
jae
and
jbe
dec
jecxz
add
dec
adc
push
rorb
dec
lcall
xchg
lahf
sub
xorb
jbe
inc
ficoms
lds
add
loop
mov
mov
push
in
movsl
outsl
sti
fimull
aam
xor
test
add
mov
test
mov
out
rorb
xchg
bound
sbb
push
lahf
ja
adc
pop
ret
fsts
lret
pop
pop
ljmp
ficomps
in
cs
lds
nop
add
push
int
jnp
scas
popw
mov
filds
jae
sbb
fwait
inc
sub
pop
jo
sbb
les
dec
jmp
les
mov
cmp
pop
aam
add
mov
or
jg
lahf
push
add
cmp
ret
push
mov
shlb
shr
mov
jns
out
test
insb
mov
dec
and
cld
sub
mov
imul
ret
xor
adc
fists
ret
out
std
xor
cmp
bound
adc
and
test
imul
push
in
or
xor
icebp
dec
in
fdivs
mov
sub
sbb
add
enter
xchg
push
inc
mov
nop
jge
or
xchg
in
mov
pusha
dec
mov
mov
xchg
cwtl
jo
jns
pop
aas
sub
orb
pop
jmp
adc
insb
sti
mov
test
into
inc
xchg
sub
inc
cli
cmp
and
sbb
dec
mov
mov
jb
sbb
push
pop
sbb
daa
imul
mov
lea
xchg
std
andl
scas
mov
test
jbe
dec
cmc
cpuid
pop
xor
shr
test
push
lock
cmp
xchg
sbb
push
sahf
imul
xor
cmpb
orb
push
mov
repnz
push
fmuls
cmpsb
add
scas
jne
inc
or
lret
adc
sarb
xchg
push
andb
aam
aaa
leave
sub
mov
xor
pop
and
adc
shlb
inc
je
bound
push
fld
lods
sbb
mov
das
or
ja
adc
and
into
pop
jne
jg
lds
aad
xor
dec
fdivrs
call
add
jmp
shl
das
movsl
xchg
mov
fimuls
sbb
cmp
call
sbb
cmp
add
or
sub
jle
push
mov
cwtl
outsl
scas
aam
fadd
cmpsb
faddl
mov
aas
or
pusha
scas
movsl
xor
lahf
cli
pop
lret
cltd
mov
xor
arpl
in
jmp
xchg
push
rcll
pop
mov
fs
push
push
dec
aas
lods
pop
xor
sub
sbb
gs
bound
xor
fistl
mov
pop
and
xchg
rep
fnstcw
clc
outsb
imul
fwait
mov
push
cmpsl
xchg
popa
mov
dec
mov
std
dec
mov
inc
outsl
iret
into
pop
adcl
inc
cmpsb
jle
ljmp
jle
aas
loope
ja
clc
lea
test
test
and
in
adc
stc
inc
xchg
jmp
pop
dec
icebp
xchg
xor
dec
add
test
mov
and
push
fisttps
jmp
mov
or
repnz
lcall
mov
mov
ss
in
push
sti
cmp
pop
in
dec
pop
incl
sub
data16
sub
adc
sub
sti
pusha
iret
lods
in
cmp
or
mov
pop
cmp
das
dec
js
inc
imul
das
jl
daa
mov
push
pop
test
sub
popf
ret
aad
adc
mov
imul
add
lods
inc
ret
xor
fidivs
inc
and
adc
cmpsl
rcl
sub
xchg
filds
dec
push
sub
movsb
push
sbb
jl
fildl
les
push
sbb
sar
mov
sub
dec
sarl
inc
outsl
repz
add
aaa
fildl
mov
call
mov
repz
xchg
aas
inc
ss
clc
mov
dec
arpl
mov
cmpsl
repz
mov
or
outsl
fisubrl
sbb
out
and
int
inc
push
test
pop
je
inc
cmp
mov
leave
mov
stc
gs
push
in
and
inc
clc
rorl
and
push
das
flds
icebp
cli
push
pop
jmp
dec
test
out
jmp
lcall
xchg
lods
xor
cmp
add
push
mov
in
xor
gs
push
cmp
pop
add
sub
adc
xchg
push
andb
sahf
aad
xorb
cmp
dec
movsb
xchg
or
call
push
push
push
call
xor
add
ret
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
roll
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
inc
inc
add
inc
inc
add
dec
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
dec
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
dec
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
shrl
add
imul
mov
inc
add
imul
nop
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
in
imul
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
push
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
inc
add
inc
add
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
imul
imul
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
