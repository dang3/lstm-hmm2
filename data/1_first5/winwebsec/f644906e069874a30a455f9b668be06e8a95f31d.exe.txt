push
pop
icebp
outsl
inc
mov
inc
push
shlb
scas
push
dec
add
movsl
arpl
cltd
sub
lret
pop
lret
mov
cmp
in
push
mov
lret
xor
sbb
nop
lcall
sbb
ret
sub
mov
js
mov
jg
mov
and
push
jmp
sub
push
in
jns
out
jle
sbb
cmpsl
mov
js
xor
xchg
ss
and
jle
adc
adcb
xchg
xor
mov
addr16
mov
mov
add
js
and
adc
dec
fwait
int
sbb
pushf
ljmp
inc
shll
sub
adc
mov
in
sub
out
xchg
insl
add
daa
mov
cmp
ja
or
adc
mov
addr16
aad
icebp
push
xchg
xor
loopne
mov
sub
scas
adc
fisubrs
push
push
ret
xchg
daa
enter
inc
mov
cmp
add
sub
or
bound
jp
mov
insl
pop
cltd
imul
mov
or
fstpt
jp
inc
leave
pop
orl
movsl
mov
pop
cli
fldt
jae
fwait
aaa
sub
mov
mov
dec
call
icebp
fsubrl
mov
push
mov
inc
push
mov
lock
push
sub
imul
add
lock
movsl
mov
clc
xchg
mull
or
cmp
jbe
xorl
shlb
push
mov
cmpl
push
cld
mov
loop
push
mov
and
pop
push
addr16
pop
fs
and
inc
pop
nop
mov
and
imul
mov
push
sub
inc
xlat
sub
push
jb,pn
push
iret
sbb
jno
jp
mov
aaa
bound
popf
adc
inc
mov
mov
pop
inc
inc
hlt
add
adc
ss
add
or
cs
xlat
cmp
pushf
adc
loope
in
pop
cmovge
push
inc
pop
ja
push
mov
aad
xor
leave
ficomps
sbb
sbb
fbstp
icebp
aaa
cmp
out
add
xor
push
lret
mov
dec
loopne
cmp
sub
add
adc
cmpsl
bound
mov
movsb
mov
or
add
push
jo
xchg
mov
mov
lea
ret
jge
in
ret
sub
xor
subl
scas
sbbl
lea
in
ljmp
jb
ja
test
inc
repnz
sub
fldt
into
cmp
sub
lcall
lcall
xchg
or
xlat
imul
ret
mov
fs
jmp
mov
notl
jg
icebp
fdivrl
aad
and
xchg
mov
lret
dec
inc
jno
test
iret
fldl
dec
mov
repnz
inc
test
je
sub
fcoml
fcompl
add
mov
fsubl
pop
dec
ljmp
popa
pushf
outsl
out
movsl
std
and
stos
jne
ret
fnstenv
in
mov
aad
jl
rcll
mov
test
in
fs
ficomps
fcoms
pop
test
mov
arpl
gs
jmp
adc
or
or
mov
inc
jo
pop
inc
flds
ret
aas
inc
scas
sub
jmp
sbb
and
xchg
jnp
repz
mov
inc
stos
loop
xchg
ror
jo
cld
mov
loopne
or
xor
sbb
jge
dec
in
movsl
push
xor
cmp
add
ret
sub
inc
mov
push
sub
or
jnp
inc
outsl
scas
call
hlt
cmp
sbb
mov
xor
cmp
fildll
ljmp
repz
fcomi
loope
cli
clc
mov
fldl
inc
push
mov
xchg
xchg
and
pop
enter
mov
cmpl
adc
xor
cmc
jecxz
into
adc
les
sub
cmp
es
mov
xorb
fnstsw
dec
cmpsl
mov
fldenv
sbb
sub
fdiv
in
push
push
push
xchg
push
cmpsb
hlt
dec
aad
test
sbbb
insb
stc
cmpsl
lcall
mov
mov
iret
push
dec
stos
xchg
fwait
hlt
cmp
pop
mov
daa
mov
popl
mov
sbb
imul
into
dec
pop
stc
scas
cmp
mov
jns
xchg
push
or
pop
xor
aad
cltd
sbb
in
in
xor
add
adc
mov
lret
roll
sbb
shll
pop
xchg
aam
aaa
clc
add
cs
fwait
mov
stos
pop
inc
xor
cmpsl
out
sbb
test
jbe
insl
insl
push
lods
sarl
movsb
das
add
xchg
cmpsb
adcb
scas
inc
push
mov
scas
dec
ret
sub
fsubs
insl
inc
mov
dec
ja
sar
adc
mov
lret
mov
mov
inc
mov
in
repz
lret
outsl
pop
daa
imul
and
out
scas
hlt
mov
and
adc
xchg
and
xchg
rolb
stc
jecxz
pop
dec
enter
adc
lods
lods
lea
jbe
jo
jne
pop
and
or
xchg
lock
mov
in
data16
iret
adc
rolb
lea
xchg
lock
mov
fldt
jno
lea
fdivrs
xor
mov
cs
or
dec
pop
add
cmp
test
mov
inc
cmc
call
fsubrs
stos
pop
jp
add
push
mov
sti
cmp
loop
mov
test
inc
neg
outsb
cmpsl
push
in
mov
rorb
leave
sbb
mov
cmp
jno
add
rcll
jbe
mov
mov
add
ret
aas
lods
dec
stos
mov
out
push
and
xchg
lods
xchg
les
add
int
into
dec
arpl
adc
and
cmc
subl
shll
jp
sub
push
jl
stos
outsl
add
jge
add
pop
xchg
jmp
jl
jns
jecxz
jecxz
ljmp
lea
divb
jle
int
in
adc
pop
and
mov
aaa
add
pop
inc
dec
leave
idivb
ret
scas
aam
pop
fistpll
fs
fnsave
shll
mov
dec
mov
stos
ficompl
daa
jae
ljmp
adc
mov
fwait
inc
dec
lods
mov
mov
mov
dec
jmp
mov
dec
arpl
jb
push
in
lods
mov
dec
aas
mov
in
dec
push
out
mov
mov
lods
jae
in
mov
sub
and
mov
adc
leave
dec
test
leave
data16
les
pop
mov
jb
stos
mov
enter
jge
adc
pop
shrb
mov
cwtl
loope
outsb
jmp
ret
or
test
lret
add
inc
mov
aaa
pop
mov
push
sti
sbb
cmp
ret
mov
add
or
out
sahf
xor
ss
fisttps
adc
rcr
fists
dec
mov
xchg
push
dec
add
daa
popa
int3
call
pop
cmp
mov
push
popa
xchg
jo
or
dec
fisttps
sub
aas
js
roll
inc
pusha
pushf
sbb
jbe
fldenv
hlt
icebp
ret
push
pop
or
mov
cmpsl
push
subb
rclb
jns
out
aas
cmpl
mov
xor
push
jg
call
jmp
jae
call
stos
cmp
pop
jae
dec
cmp
push
push
dec
jo
mov
es
aas
add
leave
or
inc
in
test
adc
jmp
cmp
clc
movsl
ss
ljmp
jb
mov
test
xchg
out
sbb
insl
cmpsl
out
cmp
adc
test
and
lods
jmp
inc
lods
inc
je
incl
xchg
mov
ret
pop
push
push
sti
and
insl
sub
aaa
cwtl
jo
inc
in
lods
push
insb
dec
dec
xlat
pop
mov
mov
jge
or
mov
nop
aaa
xor
adc
and
jmp
xor
adc
pop
les
das
xor
cwtl
sbb
nop
outsb
es
xchg
and
xchg
or
jns
inc
repz
dec
repz
call
clc
mov
int3
stc
cmpsl
mov
pop
lea
xchg
in
xchg
mov
jne
jae
add
push
adc
out
icebp
cli
lcall
aad
aad
mov
mov
add
in
pop
clc
push
imul
in
jno
jbe
xor
outsb
add
xchg
jne
loop
insl
loope
lcall
loope
ret
or
mov
add
lret
call
movsl
dec
push
sub
sbb
dec
pop
imul
dec
ja
outsl
stc
inc
inc
cmp
cli
jae
movsl
andl
xor
out
aam
inc
mul
icebp
loopne
add
dec
xor
sub
into
aam
or
xchg
add
in
in
dec
mov
inc
cmp
xchg
xor
paddsb
jl
inc
xor
pop
jnp
mov
mov
clc
sbb
fwait
jp
repnz
out
addr16
mov
aad
scas
or
inc
int
repnz
sub
push
out
ds
popa
mov
pop
inc
inc
sbb
add
mov
cld
push
cmp
adc
lds
out
ror
mov
int
and
mov
cltd
or
out
movsl
dec
divb
add
add
push
pop
loop
cltd
pop
mov
jmp
inc
mov
jno
repz
fisubs
pushf
xchg
out
push
enter
addr16
push
pop
mov
dec
pop
dec
rcrl
pushf
int
rol
inc
inc
mov
or
mov
mov
rsqrtps
std
cmc
push
push
daa
pop
test
fisubrl
mov
lods
add
push
xor
into
adc
pop
leave
popf
mov
inc
pop
dec
mov
push
je
pop
dec
or
cltd
mov
push
sbb
shll
mov
xor
xchg
add
fnsave
gs
mov
mov
sbb
dec
pop
xor
push
lret
mov
sti
mov
movsb
xor
sub
insl
rolb
push
dec
inc
sahf
mov
dec
outsw
mov
jnp
xchg
cmp
fnsave
into
fs
sarb
popl
dec
stos
fcom
sub
inc
orb
fwait
pop
inc
and
adc
sbb
adc
andb
int
fsqrt
cmp
mov
jl
or
jne
inc
mov
out
xchg
cltd
xor
mov
push
mov
pop
push
lcall
fidivl
jle
pop
aad
push
aam
jp
mov
das
fiaddl
ljmp
int3
push
movsl
addr16
aad
push
jge
std
adc
dec
mov
or
cmp
call
vcvtps2pd
imul
add
adc
xchg
jnp
mov
pop
and
clc
push
mov
inc
ds
cmc
add
jp
ret
sub
xchg
xchg
mov
mov
into
jae
pop
roll
xlat
or
mov
mov
stos
scas
push
pop
dec
shrb
adc
jno
adc
mov
jp
mov
and
add
mov
adc
stos
dec
mov
cmp
or
jecxz
scas
lds
hlt
in
pop
fcmovnu
and
mov
jo
jbe
push
sub
xor
fidivs
rolb
push
jmp
sbb
xor
inc
iret
insl
push
pop
inc
and
push
cli
hlt
sbb
repz
ljmp
sub
jmp
outsb
sub
and
pop
dec
not
aas
xor
cmp
sub
mov
lock
push
sbb
jnp
sbb
and
sub
cmc
pop
mov
ljmp
mov
cwtl
cmpsl
mov
icebp
insb
xchg
js
mov
lods
mov
sub
testl
pop
dec
sti
movsl
stc
ss
jg
jl
add
lds
outsb
mov
addr16
sub
push
mov
jmp
movsl
xchg
push
int3
jne
add
xchg
gs
fidivs
insb
fwait
daa
outsb
inc
pmulhw
pop
push
pusha
lret
ljmp
push
push
cltd
xchg
and
nop
cmc
dec
cmp
xchg
lock
pop
mov
fsts
ja
adc
pop
or
push
push
mov
jecxz
pop
popa
lods
jp
or
jl
jle
or
jns
inc
test
pop
push
or
pop
popf
sbb
mov
mov
xchg
adc
cli
xlat
mov
cmp
test
pushf
cwtl
lret
rcr
sub
push
enter
loop
or
and
inc
andl
pushf
loop
cld
cs
into
mov
imul
repnz
insl
in
jne
xchg
aad
mov
xchg
cmp
lret
jnp
xor
sti
push
aas
test
adc
fdivl
lret
fsts
scas
imul
dec
adc
pop
addb
pusha
pushf
lret
incl
sbb
adc
sbb
jecxz
or
dec
mov
push
cmp
aaa
dec
mov
icebp
bound
jns
repnz
idivl
bound
testb
insl
mov
push
inc
lock
and
les
dec
daa
xchg
mov
mov
mov
sbb
xor
rcll
or
test
push
cmp
and
int3
push
cmp
lcall
pop
rorb
arpl
dec
aas
pusha
pop
mov
pusha
mov
xchg
lock
cmpl
int
test
cmp
and
outsb
mov
cmp
add
pop
lret
mov
sbb
mov
sub
xor
mov
push
in
jo
test
dec
mov
out
sub
cmp
push
insb
mov
cld
in
fsubrs
addl
sbb
dec
and
dec
popf
sti
mov
xchg
leave
sub
scas
mov
rep
imul
sbb
or
cmc
and
push
inc
ss
aam
into
mov
xchg
adc
lret
dec
es
fldenv
leave
pop
xchg
popf
mov
shlb
popf
inc
in
and
inc
mov
es
mov
lock
ss
ss
adc
sbb
mov
in
push
mov
pushf
andb
into
mov
dec
outsb
cmp
pushf
adc
ret
xchg
xor
aam
and
filds
adc
loopne
pop
shrb
loope
div
pop
pop
add
fwait
mov
mov
das
mov
ret
outsl
hlt
int
adc
and
xor
out
icebp
sub
pop
push
inc
aas
mov
ss
outsb
and
pop
xchg
cli
cltd
cmp
xor
pop
dec
push
mov
mov
push
xor
and
cmp
pushf
sub
sbb
or
test
fildl
insl
icebp
mov
xchg
sub
dec
test
sarl
aam
aaa
rclb
shll
adc
push
inc
mov
call
mov
aaa
sbb
sbb
stc
add
mov
movsl
mov
push
aaa
mov
ret
sbb
jnp
mov
mov
inc
sbb
pop
jl
cmp
arpl
xchg
or
in
fimull
xchg
jle
dec
xor
daa
jns
mov
ret
pusha
lock
ljmp
mov
jb
cmc
xor
cmp
xchg
adc
cmc
jno
xor
and
pushf
idiv
enter
mov
leave
movsl
test
add
sub
mov
add
fwait
test
push
pop
sub
mov
je
std
fwait
sbb
sbb
rorl
leave
es
jecxz
dec
lcall
fdivs
je
and
jl
imul
ffree
mov
idivb
or
lea
mov
inc
repz
or
sub
jne
add
shl
mov
push
jb
mov
orb
push
jmp
mov
sahf
clc
xchg
ficomps
mov
xchg
je
stos
mov
or
adc
jp
into
jns
mov
gs
iret
inc
out
fsubs
insl
and
popf
cmpsb
das
orb
ficoml
in
pop
mov
in
xor
mov
xchg
lock
mov
push
sub
insl
scas
xchg
or
cmp
rorb
stos
cmp
add
sub
jbe
cmp
mov
rclb
int3
rorl
test
pop
or
pop
aam
xchg
xchg
loopne
jnp
shl
push
fxch
int3
outsl
and
dec
dec
adc
int3
jmp
mov
or
push
mov
pop
repnz
dec
mov
mov
mov
rorl
push
dec
cmp
pop
push
jo
ds
movsb
jmp
dec
adc
fnstsw
aaa
inc
cmp
xchg
inc
mov
jno
daa
mov
pop
pop
xchg
ficoml
inc
sbb
cmp
ficoml
push
daa
repnz
int3
cmpsl
popa
test
fcoml
dec
push
jbe
fwait
or
jne
cld
push
sti
dec
sub
loop
icebp
icebp
movsl
and
mov
jl
sahf
mov
sti
sbb
sete
push
push
sub
int
ja
sub
idivb
mov
jecxz
dec
push
dec
js
push
cltd
test
sti
pop
cltd
pop
jb
inc
jb
pushf
adc
mov
loope
push
cmp
or
sahf
or
and
mov
cmp
rcl
jle
fcoml
sub
adc
loope
xor
stc
fistl
fdivrs
inc
lret
orb
cli
xor
jle
and
icebp
and
and
push
inc
cmp
push
test
int3
scas
jecxz
cld
xchg
and
jne
sub
cmpsl
pop
adc
jp
dec
repz
stc
mov
jle
inc
out
mov
jno
addr16
js
scas
icebp
mov
lock
and
inc
inc
pop
cmpsl
xchg
xlat
iret
hlt
push
xchg
mov
push
pop
in
lahf
mov
movsb
jecxz
jg
inc
enter
xchg
jmp
pop
or
jmp
push
mov
test
test
mov
lcall
jecxz
dec
fiaddl
jno,pn
fdivs
dec
les
into
inc
ret
dec
das
pop
iret
xchg
int3
pop
xor
sbb
cmpsl
mov
sub
les
scas
psrlq
jno
lds
out
ret
inc
add
sbb
out
or
ret
arpl
xor
lock
xor
and
outsl
and
push
out
cld
sbb
jge
dec
aam
sub
adc
imul
icebp
pop
popa
add
idiv
jl
xor
mov
sub
addr16
into
addr16
divb
cmp
push
xor
cmp
gs
add
lods
xchg
sub
jecxz
push
and
popf
mov
cmp
lcall
push
sub
sahf
into
mov
sub
mov
inc
cmp
jbe
mov
jns
out
and
jns
lret
cwtl
lahf
clc
movb
bound
in
lea
pop
mov
pop
xor
push
mov
inc
mov
push
fisttpl
pop
inc
mov
imul
mov
das
pop
jge
movsl
inc
lds
inc
cmp
adc
imul
ret
push
movsl
cmp
mov
mov
cltd
sub
rclb
fstpt
xor
push
fnstenv
inc
mov
fs
hlt
or
ret
in
mov
adc
jmp
jmp
dec
shl
jle
sti
cmp
lods
out
and
mov
adc
popf
outsb
test
or
pop
roll
xchg
fstpt
sub
dec
es
imul
loope
sub
xchg
or
jmp
jmp
notb
mov
negb
loopne
xchg
daa
add
rclw
testl
mov
mov
jne
xchg
or
or
sbb
cli
mov
scas
push
jp
out
mov
filds
shrl
insb
ljmp
clc
cmp
lahf
sahf
dec
stc
xchg
and
popf
mov
jp
xor
xchg
or
adc
and
rolb
in
dec
fwait
mov
scas
pop
rcr
mov
adc
test
sub
inc
sub
sub
clc
test
iret
xor
out
push
insl
nop
fs
pop
sbb
in
mov
data16
lea
test
dec
mov
push
outsl
pusha
lods
mov
imul
pop
mov
mov
loopne
jnp
xchg
sbbb
xchg
xchg
sub
in
dec
into
ficompl
dec
fisubrs
xchg
jg
mov
xchg
jae
mov
setb
aad
je
mov
and
dec
pop
push
and
rorl
enter
sub
cmpsl
cli
and
sbb
xchg
out
jl
inc
leave
je
mov
dec
inc
inc
das
add
jle
dec
mov
scas
js
xchg
mov
pop
cmp
mov
movsl
sti
ret
push
push
mov
fsubrl
inc
xchg
loopne
out
adc
pop
xchg
mov
ss
add
add
das
inc
inc
mov
mov
pop
loop
mov
enter
lock
xor
outsb
dec
lock
mov
ljmp
adc
shl
mov
cmp
push
sahf
xor
test
push
push
imul
movsl
dec
push
imul
popa
cld
cmpsb
imul
xor
daa
nop
xchg
inc
cli
dec
adc
int
push
push
xor
dec
push
ds
inc
sahf
int
sub
push
jle
jnp
pusha
loopne
into
aam
loope
add
dec
std
stc
mov
int
clc
dec
sbb
jns
jnp
inc
fstps
fbld
or
push
mov
inc
mov
or
divb
dec
xor
inc
icebp
es
xchg
outsl
mov
push
jmp
sbb
xor
movsl
lcall
imul
mov
pushf
inc
push
mov
and
fiadds
outsl
xlat
and
lds
push
push
push
xor
xlat
fisubrl
mov
add
roll
jg
pop
sbb
add
les
insb
test
mov
mul
mov
and
int
outsb
lods
xor
in
push
mov
loop
inc
cli
sti
add
ljmp
pushf
addr16
gs
testl
ret
stos
cltd
mov
mov
fs
or
dec
mov
xchg
push
and
or
insb
adc
xchg
dec
push
xchg
in
aaa
mov
sbb
negb
mov
xchg
mov
jg
fs
pop
sti
pop
pushf
or
mov
data16
sub
in
lods
mov
leave
orb
scas
cmpb
sub
adc
inc
scas
and
cmc
or
sahf
push
inc
test
pop
mov
sbb
xchg
cmp
cmp
decl
inc
jb
call
and
jbe
scas
xor
std
xchg
leave
pusha
jmp
dec
add
pop
insl
das
mov
inc
sahf
imul
imul
mov
hlt
ja
int3
or
and
push
mov
sub
aas
sub
cltd
or
aas
jle
mov
jno
push
or
cs
aam
daa
mov
shlb
jecxz
jge
mov
mov
mov
aaa
imul
xor
aas
mov
nop
pop
mov
rol
inc
outsl
push
mov
rolb
mov
aad
popa
xchg
jmp
jmp
cmp
adc
fs
pop
lods
mov
sbb
lock
push
add
cltd
loopne
push
imul
fnstsw
jg
mov
push
fs
xchg
pop
pop
ret
popf
jle
cltd
sarl
mov
adc
xor
inc
imul
stos
stos
ror
inc
aam
push
mov
fcomi
mov
dec
rcll
push
jecxz
inc
sub
mov
push
or
fstps
mov
and
xchg
cmp
add
fbstp
pop
outsb
push
push
jmp
xchg
stos
sub
ja
inc
testb
mov
sbb
or
pushf
shl
cltd
clc
dec
call
pop
sahf
inc
xchg
cmpb
jmp
call
lret
jnp
jne
jl
fwait
or
xchg
add
xlat
nopl
ljmp
pmullw
add
pushf
pusha
loop
xlat
movb
repz
out
es
sub
pop
push
sub
lret
mov
daa
in
xor
jns
xchg
jo
mov
mov
mov
ljmp
aaa
dec
imul
clc
cli
shll
fldt
iret
jecxz
mov
movsb
push
mov
test
jne
data16
data16
stos
mov
mov
fwait
into
xor
je
mov
lods
xchg
mov
inc
into
int3
xor
push
xchg
pushf
nop
xchg
cmp
faddp
idiv
mov
pop
in
mov
jno
addl
clc
das
jns
aaa
cmp
jge
jb,pn
cli
mov
dec
mov
sti
sub
sub
in
ss
inc
ljmp
hlt
adc
add
into
aad
in
push
gs
mulb
mov
xor
adc
sub
test
das
outsl
inc
mov
add
cmpl
push
adcb
mov
adc
or
inc
vpmacsdqh
pop
pop
lcall
mov
shrl
in
adc
shlb
mov
or
and
pop
jb
pop
mov
dec
push
aaa
sub
xchg
test
pop
cltd
mov
outsb
xor
pop
aad
push
mov
ror
mov
mov
or
push
jecxz
in
pop
movsl
xchg
ds
or
test
loop
mov
jg
out
jecxz
dec
scas
addr16
int
arpl
or
fisubrs
and
mov
js
rclb
jno
adc
push
fwait
js
dec
mov
add
addb
pop
xchg
rorb
mov
pushf
cli
loope
or
adc
mov
hlt
test
sarb
dec
and
add
mov
test
filds
xchg
and
nopl
and
adc
pushf
jecxz
mov
lds
les
push
sbbb
and
mov
and
push
mov
pop
jb
cli
cli
or
inc
mov
daa
dec
pop
insl
mulb
pop
push
testl
sbb
adc
ss
dec
cmp
faddp
xchg
sbb
push
shll
faddl
push
mov
pop
out
sub
shlb
jg
cmp
scas
pop
cmp
fildl
sbb
lock
out
aaa
sarb
adc
aad
add
ljmp
xchg
cmp
push
jbe
std
mov
add
data16
and
cmp
test
orl
or
enter
push
cmp
sbb
out
insb
push
sub
xor
aaa
push
mov
int
jmp
add
dec
into
adc
dec
dec
or
inc
fsts
std
lret
subl
pop
sub
mov
cmp
push
jg
xchg
xchg
adc
and
lea
iret
jae
lds
fsubl
mov
mov
repz
mov
jl
cmpsl
sub
xchg
push
rol
cwtl
push
xor
jb
jg
bound
aas
rorl
xor
sbb
xchg
push
loop
dec
sbb
fmull
add
mov
mov
pop
and
out
dec
push
pop
loope
into
push
mov
pop
add
push
cmp
lret
sub
rorl
or
jle
nop
add
stc
outsb
mov
cltd
jle
leavew
mov
lahf
and
addr16
shrl
shlb
jnp
lock
ret
stc
jmp
xchg
movsb
add
bnd
xchg
clc
pop
inc
push
xchg
ja
and
inc
dec
cltd
jno
jae
sbb
stos
mov
daa
iret
and
xorl
mov
scas
test
stos
lods
fisubrs
jp
pusha
pop
stos
outsb
or
or
adc
mov
mov
iret
inc
cltd
mov
pop
js
push
cmpsl
popa
enter
and
xor
pop
xor
sub
dec
aad
xchg
shrb
inc
adc
push
inc
es
mov
mov
jo
repnz
mov
push
push
xchg
cli
and
aaa
popf
ret
call
dec
push
pop
inc
dec
or
mov
pop
leave
pop
ror
and
and
lock
xchg
pop
xor
lods
aaa
ja
dec
aam
int
aas
inc
imul
dec
xchg
adc
xorl
jo
daa
push
icebp
lock
push
les
outsl
adc
das
xor
jns
adc
pop
pop
mov
pusha
cmpsb
adc
push
scas
fldenv
scas
lret
cmp
or
out
or
stos
ds
dec
addr16
xchg
enter
inc
dec
dec
inc
mov
flds
inc
in
cld
ret
sbb
sub
filds
mov
push
pop
and
dec
and
daa
and
adc
adc
adc
xor
mov
mov
mov
movsb
push
push
xor
movb
loopne
mov
adc
stc
xor
repnz
sub
std
es
js
push
pop
mov
or
dec
dec
pop
fisubrl
popf
sub
jnp
idivb
xor
or
xchg
xor
mov
and
fwait
inc
mov
push
dec
adc
jb
add
inc
inc
loope
ret
jecxz
adc
pop
and
or
mov
cli
sub
notb
mov
lods
mov
dec
dec
xchg
mov
push
xor
mov
mov
out
mov
cmp
mov
cmp
push
jnp
stos
sub
ss
jno
mov
xor
pop
gs
daa
iret
xor
cmpb
xor
cs
cmpl
mov
subl
in
in
loope
mov
sub
inc
sub
lock
pop
bound
xor
std
add
push
jl
lret
cs
inc
and
add
mov
mov
divl
subl
push
xchg
mov
xor
cli
lret
dec
mov
js
je
scas
pop
sub
fwait
sar
push
fdecstp
enter
sti
xchg
inc
lret
lock
stos
stos
test
out
mov
mov
sti
add
jmp
mov
add
mov
lret
xchg
jmp
movsb
rcll
or
cmp
and
pop
cmp
jae
lock
test
xor
inc
mov
sbb
roll
icebp
ret
imul
xchg
pop
cmp
mov
cmc
cmp
js
dec
xchg
movsb
mov
leave
xor
iret
push
mul
jo
lcall
cmp
fisubs
fisttpll
jne
out
xchg
or
rclw
dec
imul
sti
push
sbb
push
movsl
pop
les
sti
xor
add
movsl
imul
sbb
orl
sahf
shlb
pop
push
pusha
jno
fincstp
adc
cli
dec
push
jae
lret
lret
dec
aas
adc
call
fists
and
sti
push
sti
jecxz
cmp
pop
jb
and
ret
mov
push
add
xchg
fwait
or
pop
aaa
mov
push
rorb
pop
mov
mov
jb
out
insl
push
fsubl
jg
aam
das
rcr
xor
icebp
das
xor
test
sbb
outsb
or
out
decl
test
mov
lods
xlat
int3
and
mov
xor
test
sbb
mov
ret
testb
push
inc
push
add
jl
mov
fbld
movl
inc
cmp
jae
and
xchg
shrb
sbb
lcall
adcb
out
jp
rcll
dec
into
iret
arpl
dec
push
push
dec
out
ret
inc
inc
or
fbstp
push
or
sbb
fnsave
cmp
jns
mov
cmp
mov
xchg
jne
leave
xchg
es
push
stc
addl
mov
inc
ljmp
rorb
mov
aaa
mov
insl
aam
jmp
out
and
jmp
cld
movl
mov
adc
xor
shll
xchg
decb
clc
mov
or
leave
dec
mov
dec
add
int3
pop
std
pop
nop
ss
test
sbb
jl
dec
push
bound
add
lods
sbb
pop
jmp
call
jecxz
lret
mov
out
fiadds
std
mov
jecxz
aad
outsb
insb
jle
lret
mov
hlt
cs
push
nop
jno
stos
cmp
fwait
add
arpl
bound
adc
bound
sbb
das
int
scas
push
jl
es
testl
ret
test
jbe
test
jnp,pn
add
sub
jge
lds
sbb
inc
mov
mov
cli
aad
movsl
jnp
jae
roll
push
inc
jae
cmp
loopne
dec
inc
sub
or
dec
mov
arpl
lahf
repz
cs
mov
cmpsl
clc
popa
cmpsl
adcb
iret
add
and
or
adc
xorl
dec
jg
dec
push
and
out
imul
cmpsl
ds
shlb
pop
jnp
insl
hlt
sbb
xor
ss
jne
scas
cmp
shrb
xor
das
call
sbb
or
cmp
dec
inc
mov
orl
sub
out
out
jmp
out
jmp
sbb
in
jl
and
jecxz
ljmp
ror
fnstcw
pop
gs
mov
int
mov
icebp
repnz
add
lret
jns
enter
mov
adc
or
cs
cmp
xchg
sbb
imul
dec
mov
fidivs
ja
jmp
dec
mov
mov
push
mov
jne
bnd
xchg
clc
adc
jecxz
push
mov
or
or
daa
or
jno
and
jl
icebp
sbb
outsl
inc
faddp
mov
loopne
sbb
adc
dec
sti
inc
rcrb
mov
jl
or
jno
sahf
sub
lods
mov
stos
lret
fsts
inc
or
in
js
adc
fdivrl
mov
xor
aad
push
xor
push
mov
mov
sub
mov
imul
xor
fidivl
popf
pop
lods
push
and
fcmove
pop
fstl
ret
shrb
jne
imul
push
push
pop
mov
movsb
les
mov
jl
cmp
sti
insl
sbb
xlat
push
inc
jae
push
cli
outsl
mov
jmp
ds
sbb
movsb
dec
out
stos
add
jmp
lahf
in
sarb
xor
mov
and
std
lret
cmpsb
movsl
sti
xchg
add
jae
cmp
sub
mov
ss
popf
frstor
lds
cltd
insl
lret
scas
mov
stc
aad
adc
rclb
mov
sbb
int
adc
sub
loope
lret
xor
cmp
cmc
dec
inc
sbbb
cmc
or
mov
add
mov
push
pop
not
insl
sbb
shll
mov
push
pop
jbe
dec
sub
mov
pop
rorb
cmpsb
pop
fiadds
hlt
push
inc
gs
xchg
fmul
aad
dec
push
pop
ficoms
sub
scas
mov
adc
fisubrl
xor
mov
add
xor
xlat
lock
aaa
push
sub
jle
loop
rcr
rclb
insl
jp
jno
or
xchg
cld
xorb
mov
mov
add
hlt
sbb
cmp
lcall
je
sbb
popa
in
stos
mov
jo
or
addl
fmull
push
mov
cmp
and
int
xorl
not
mov
lret
sbb
rcll
and
jbe
shlb
cld
insl
jl
dec
cwtl
in
mov
or
icebp
in
sub
xor
xor
out
add
test
addr16
dec
shl
pop
pop
fisubs
push
or
jg
cmp
sbb
lret
and
jle
xlat
insl
frstor
xor
cmc
mov
inc
push
je
mov
mov
aam
or
jbe
or
arpl
sub
pop
mov
fcmovbe
mov
out
out
add
arpl
jl
sar
sbb
sub
dec
hlt
ss
cmc
add
mov
xchg
aad
cmp
jmp
cmp
or
and
sar
pop
std
or
ds
les
in
jno
fistl
repnz
ss
jecxz
pop
sbb
and
fsts
lret
or
and
pop
and
test
int
jo
cmp
aam
xor
pusha
sbb
inc
scas
loope
test
xchg
rorb
aas
xchg
shrb
imul
std
jmp
add
mov
push
mov
mov
out
sbb
movsl
xor
mov
add
lahf
xchg
inc
outsb
push
push
jge
je
mov
ficompl
push
cmpsb
hlt
in
pop
dec
xor
jl
nop
loopne
out
or
jbe
shlb
sarb
insb
in
and
or
adc
add
and
gs
cmp
jo
popa
mov
cs
pop
mov
jmp
add
inc
into
setle
inc
int
adc
out
lret
imul
orl
sub
mov
rolb
mov
xor
xlat
cvtps2pd
sub
cmpsb
cld
stos
out
cltd
neg
imul
cmp
loope
bound
jae
aad
leave
lods
mov
leave
leave
imul
mov
add
cmpsb
movsl
cmp
mov
lahf
add
lock
adc
or
xchg
das
or
jae
adc
xchg
call
and
test
xor
stos
cld
cltd
add
push
sub
rcll
mov
test
cmpsl
fmul
or
aaa
sub
sub
outsl
mov
out
sti
mov
mov
loopne
lahf
add
fbstp
sbb
push
into
mov
popf
hlt
adc
incl
push
pop
push
pushf
jecxz
inc
cwtl
mov
pushf
cmp
sbb
mov
dec
pop
jno
jae
aaa
mov
lcall
aas
call
cmp
sub
jmp
in
sub
mov
and
cmp
sbb
int3
push
shll
ljmp
dec
pop
cmp
out
pusha
iret
mov
inc
test
enter
pop
cli
pop
fisttpll
xchg
pop
sbb
je
loopne
xchg
rcrb
push
jb
mov
mov
mov
mov
fildll
xor
jge
addr16
pop
aaa
loopne
iret
aam
pop
and
loop
xlat
fstl
shll
repz
mov
push
xchg
fildll
and
pop
sbb
insl
xchg
lahf
mov
xlat
cmp
push
les
loope
push
or
pop
cmp
mov
push
adc
lods
push
xchg
call
jp
jge
push
daa
mov
shll
hlt
outsb
xor
in
ret
or
ds
cmp
dec
sub
or
movsb
xchg
clc
mov
adc
mov
jp
push
int3
xlat
ss
mov
sub
dec
cmp
push
ror
int3
pop
inc
into
push
test
pushf
out
jle
mov
xchg
xlat
ret
xchg
inc
sub
lods
xor
rcl
lods
and
fdivrs
jne
mov
inc
cmc
jns
xor
scas
sar
sub
mov
jg
mov
sbb
aaa
sahf
mov
push
fsts
adc
and
push
adc
leave
sub
ja
subb
fimull
push
inc
jmp
rolb
and
std
imul
nop
sub
sbb
rcrb
into
and
jle
lcall
bound
cmp
les
test
sub
mov
std
orb
test
outsb
jne
mov
es
xor
jb
repnz
cmp
push
repz
clc
scas
sahf
inc
add
sbb
out
lock
mov
sbb
imul
outsl
fidivl
aas
mov
jmp
push
jno
fld1
dec
mov
mov
inc
sub
lahf
or
inc
xor
pop
stc
inc
call
jb
or
jmp
insl
xor
pusha
into
aam
fidivs
rorl
decl
insl
das
shlb
es
mov
or
xchg
pop
movsb
and
ds
pop
sub
pop
xchg
data16
inc
out
dec
pop
jge
ret
das
insb
sbb
jl
shlb
mov
adc
pop
ss
jne
mov
roll
sub
or
jge
ror
jns
xor
daa
stos
imul
push
shll
in
inc
fdivr
push
adc
sbb
shll
cmp
rolb
mov
adc
clc
test
jb
repz
pop
test
xchg
jp
xor
and
punpckhwd
sub
pop
mov
cwtl
xchg
mov
cli
and
xor
outsb
xchg
sbb
jne
sub
pusha
fistpll
mov
lahf
adc
and
add
fcoms
xor
stos
jnp
fimuls
stos
insb
std
xchg
btrl
jge
mov
adcb
and
mov
xchg
sarl
insl
icebp
jb
jle
in
mov
xor
jl
cmp
dec
mov
dec
popf
xor
out
xchg
andl
xor
xor
daa
xchg
pop
pop
int
daa
aas
mov
daa
jb
and
fstpl
dec
mov
test
fdivr
adc
sbb
push
pop
pop
lds
sahf
mov
mov
sub
mov
lea
repz
shrl
iret
aam
mov
imul
jmp
dec
or
xor
xchg
stc
jno
outsl
out
fs
les
in
xchg
inc
mov
mov
xor
loopne
jge
subb
negb
push
divl
sbb
xlat
push
mov
mov
aad
mov
or
mov
jecxz
rol
mov
adc
dec
out
adc
and
mov
sbb
cmp
loop
das
and
insb
dec
fdivrl
lods
hlt
rclb
popa
pop
es
test
jle
xchg
jecxz
shll
and
mov
pop
sub
clc
xchg
in
in
cmc
cmp
mov
dec
dec
mov
fnstenv
push
arpl
mov
lea
loop
jp
and
pop
dec
jl
mov
lret
pushf
sub
mov
or
xor
test
dec
popa
push
sub
setns
mov
dec
push
xor
movsl
fs
jb
movb
outsb
and
loop
mov
ret
jno
ret
jae
testb
fadd
ss
hlt
jp
int3
add
push
add
rorl
sub
mulb
js
shll
or
cmp
bound
cmp
das
imul
daa
rcr
jno
pushf
xchg
ret
dec
les
lock
test
imul
out
pop
pop
xor
xchg
and
inc
xchg
sub
nop
movsb
aaa
add
stc
xchg
mov
or
sbb
stc
ret
inc
mov
fsubrl
mov
pop
sub
fidivrl
dec
stos
mov
mov
or
mov
cs
popf
repz
xchg
or
add
mov
xorb
arpl
xchg
push
or
ja
jmp
or
jp
ja
into
mov
xchg
inc
mulb
mov
shlb
mov
and
inc
cmp
stc
adcl
pop
adcl
mov
xor
mov
xor
in
into
movsb
pop
scas
lods
std
push
inc
ret
ficompl
xchg
enter
pusha
lret
mov
scas
shll
xchg
aas
mov
cmp
pop
js
add
jl
out
add
dec
repnz
das
ret
mov
lods
dec
les
jecxz
roll
imul
leave
sbb
in
jno
add
int3
lea
and
sbb
test
fmul
clc
jmp
inc
stos
std
lods
das
xchg
in
jnp
jmp
xchg
inc
stc
xor
xor
jns
or
push
insl
fisubrl
mov
jae
or
and
pop
aas
in
pop
ja
xchg
jmp
mov
adc
add
outsb
pop
mov
mov
aad
add
ss
push
push
mov
xor
jns
loop
ret
nop
cmp
mov
repz
mov
inc
or
mov
cmc
lods
aad
fistps
sbb
xchg
or
pop
int3
addr16
ret
jge
xchg
push
mov
or
and
int3
inc
sar
xlat
push
hlt
enter
into
add
sbb
mov
and
int
dec
sbb
les
fisubrs
cmp
dec
fucomp
jne
ds
cmp
adc
mov
testl
test
in
fwait
mov
jne
testl
dec
mov
xor
roll
icebp
xor
fcompl
or
or
ja
scas
push
adc
push
and
sub
adc
les
sub
test
loope
nop
mov
mov
dec
sarb
rorl
jmp
lahf
subl
mov
rorl
xchg
xor
push
nop
lret
mov
in
sub
inc
pop
testb
jne
jne
jl
scas
sbb
loopne
leave
mov
movsb
xchg
sahf
lods
repz
add
adc
mov
pop
sub
cmpb
div
fisttpl
movsl
xchg
or
jl
ret
xor
and
mov
jns
les
scas
add
adcl
xor
dec
popaw
mov
pusha
dec
fcompp
int3
stc
fidivrs
cmpsb
test
fisubl
outsb
jnp
je
sub
jmp
pop
pop
adc
push
xor
and
xchg
pop
add
mov
inc
out
cli
bnd
push
aaa
xchg
das
inc
cltd
out
push
call
pop
fldenv
cli
lret
push
insl
cmpsb
jmp
sub
jmp
in
pop
mov
pop
mul
push
sub
jmp
dec
inc
or
jg
or
out
cltd
pop
inc
loop
cmpsb
cmp
jl
jecxz
stos
pop
lret
repz
push
lds
xor
jno
mov
in
leave
dec
mov
and
imul
cmp
mov
loopne
pop
scas
cmpsb
and
sub
jg
out
mov
inc
fs
adc
jo
aaa
outsl
ficoms
repnz
out
mov
jle
or
setge
lea
scas
mov
stos
popl
clc
dec
js
or
mov
dec
mov
in
or
mov
or
aad
jnp
bound
arpl
subl
push
call
fildll
xchg
call
into
and
pop
add
fldenv
popf
fcompl
cmc
int3
and
xchg
stos
xor
jl
into
mov
lods
and
cltd
gs
mov
mov
jge
je
inc
rclb
mov
popf
push
lret
scas
ja
sbb
cld
ss
outsb
push
aad
mov
imul
jecxz,pt
icebp
out
stc
loop
xor
mov
out
sbb
push
scas
fnstsw
pop
dec
xor
movsb
push
sbb
inc
lods
jle
test
pop
icebp
sub
xchg
sahf
shlb
push
cmpl
xor
lods
pop
mov
test
push
push
test
jl
cmp
cmpsl
cmp
push
lret
mov
cltd
lcall
and
cwtl
fsubs
xchg
pushf
incl
adc
pop
cmp
mov
add
mov
aas
addr16
inc
pop
xchg
xor
mov
mov
push
iret
popf
mov
std
cmpsl
and
into
adc
aaa
cmp
dec
ss
lock
punpckhbw
movsl
subl
ret
shll
cmpsl
and
ljmp
jge
sub
push
movnti
mov
iret
sbb
sbb
lock
clc
add
lcall
enter
negb
adc
das
push
pop
pop
sbb
lock
cmpsb
mov
cmpsl
pop
loopne
cmp
mov
or
loopne
addb
xor
lret
xor
xchg
out
adc
stc
aas
and
and
adc
popf
xchg
pop
sbb
sub
adc
inc
mov
mov
and
sub
out
sbb
cmp
xchg
add
push
push
test
and
loop
jno
lahf
cmpsl
imul
out
push
cwtl
dec
mov
jmp
ljmp
fldt
jmp
cs
pusha
outsl
dec
call
loope
inc
xor
jb
push
ret
mov
andl
out
test
push
sbb
or
xchg
lcall
iret
fdivrl
outsl
cmc
sar
mov
clc
cld
push
pop
iret
gs
test
sbb
ss
and
cmp
stos
adc
jl
jo
nop
bound
dec
cmp
rcr
sbb
clc
or
inc
into
mov
push
xchg
stc
icebp
shr
aam
fwait
lods
adcb
test
and
mov
js
push
dec
inc
sbb
sti
mov
mov
testb
jl
xor
push
test
aas
mov
dec
sahf
mov
lea
in
jo
push
repnz
cmpsb
jo
jo
test
sti
inc
jp
push
fstl
mov
mov
sub
out
packsswb
sub
shrl
int
jmp
push
pusha
lock
fs
jecxz
in
cwtl
andb
add
cld
addr16
sbb
flds
popf
mov
in
or
dec
mov
outsb
mov
jl
cmp
cmc
pop
adc
jae
or
inc
jne
sbb
insl
dec
aas
mov
mov
xchg
hlt
shr
es
sub
ljmp
jle
adc
into
push
and
mov
rcrb
data16
sub
mov
xor
mov
jg
lods
mov
imul
jb
das
fnstcw
or
cmp
mov
fiaddl
stos
add
inc
fsubs
test
adc
mov
lcall
lea
push
jge
push
in
push
js
xchg
dec
push
sub
cld
xchg
imul
andb
test
mov
cmp
repz
aam
shr
test
inc
add
adc
xor
stc
and
fstpt
je
jbe
xchg
pushl
int
inc
shrb
dec
out
pop
clc
add
or
push
gs
mov
xchg
in
cmpsl
xor
push
clc
cwtl
sub
jne
or
push
sti
mov
in
jbe
and
cld
xchg
mov
xchg
fwait
jge
in
jl
pushf
dec
in
mov
call
jecxz
popl
pop
mov
and
mov
push
dec
pop
cs
lds
aad
xor
jle
add
pop
mov
data16
out
into
cmp
mov
inc
pop
subb
inc
cltd
ret
sub
jbe
dec
je
xor
rclb
lods
shlb
out
std
scas
pushf
inc
iret
push
pusha
push
add
cmp
bnd
inc
add
imul
jo
loop
push
testl
test
jl
pop
sub
jns
mov
insb
rolb
add
lock
sub
int3
lret
mov
mov
ret
out
pop
and
addr16
or
addl
decb
in
xchg
fldenv
or
mov
faddl
lods
xchg
adcb
dec
xor
cmc
xchg
inc
bnd
mov
jne
cmpsb
inc
jl
jb
in
xchg
int3
sub
cmp
lods
fstcw
out
pop
and
frstor
mov
cmp
add
loop
mov
fadds
xchg
add
or
int3
in
add
xchg
and
icebp
mov
and
int
push
mov
xlat
add
mov
jl
fucom
inc
in
decl
sub
outsb
punpckhwd
push
popf
push
lea
sbb
push
adc
add
sbb
rcrb
cmp
arpl
push
pop
push
and
popf
sub
xchg
ds
push
test
rcr
jo
lods
sub
add
int3
fimuls
mov
aas
inc
cmpsb
cmpsb
in
jle
or
mov
or
call
jmp
stos
in
std
gs
xorl
test
sbb
ficoml
add
shl
in
and
add
inc
pop
outsb
sbb
cmpsl
lret
lods
hlt
test
inc
int
clc
ja
adc
test
daa
insb
push
push
ds
xchg
into
mov
add
push
cli
inc
push
addr16
popf
jmp
and
push
xchg
int
rorb
dec
sahf
pop
fnsave
fildl
or
inc
sbb
sbb
adc
pop
mov
mov
and
cmp
movsb
cmp
loop
or
jge
das
inc
mov
cltd
popf
xchg
orb
jbe
int3
incb
pop
or
ja
mov
add
and
cmp
xchg
or
mov
push
es
jb
xlat
shrl
fs
sarl
cld
push
xchg
mov
out
push
imul
jg
sahf
sub
dec
and
mov
fistpl
sub
inc
shll
inc
daa
jae
cwtl
sub
adc
mov
repnz
mov
in
roll
mov
dec
xorb
adc
or
pop
mov
jae
adc
fimuls
push
lcall
mov
sbb
or
frstor
sti
lcall
enter
pop
lcall
xchg
mov
pop
sbb
adc
mov
leave
push
cltd
subb
adcb
mov
outsb
inc
sahf
adc
mov
push
pop
shll
dec
add
leave
cmp
dec
test
lock
push
adc
sbbl
cmpsl
lock
pop
ja
in
mov
xchg
out
into
dec
rolb
dec
stos
mov
nop
or
shlb
jecxz
jbe
sti
mov
in
jg
je
inc
sbb
xlat
mov
sub
ret
sbb
jecxz
jle
inc
lds
push
mov
adc
inc
sub
xchg
cs
jbe
mov
cmp
ljmp
sbb
mov
jp
dec
mov
cmp
test
add
xchg
mov
into
jmp
pop
mov
mov
sub
inc
xchg
adc
pop
jmp
repz
sub
mov
addr16
sub
dec
adc
sub
and
fsubrs
test
bnd
cli
rclb
cmp
pop
test
and
xor
jbe
scas
rcl
lret
inc
inc
pop
call
addr16
xor
aad
ret
lock
adc
mov
test
xlat
sbb
test
jecxz
jns
xor
lods
mov
or
loop
mov
jae
mov
pusha
mov
rolb
cmp
add
mov
add
imul
adcl
mov
sbb
lea
fwait
mov
pop
and
pusha
fisubl
jb
pop
dec
addl
jl
jnp
inc
push
mov
imul
mov
imul
sahf
sbb
inc
shrl
fstpl
and
outsl
pop
xchg
jecxz
incb
mov
inc
cmp
add
ret
cmpsl
dec
mov
cs
mov
xor
sbb
sbb
movb
cwtl
outsb
dec
mov
pop
inc
int3
pop
mov
xor
add
cld
aas
dec
ja
sbbb
into
inc
cmp
icebp
sbb
call
ret
pop
insl
mov
push
inc
mov
adc
mov
orb
mov
pop
gs
arpl
pop
sub
dec
xor
inc
ret
push
adc
mov
dec
js
dec
jnp
sub
mov
jns
scas
nop
xor
sbb
and
push
mov
adc
inc
in
inc
leave
sbb
lahf
mov
gs
std
inc
add
cwtl
addl
sbbl
in
cli
fidivrl
adc
xchg
imul
lock
or
push
or
jae
cltd
sbb
imul
jmp
mov
ljmp
out
out
adc
test
in
iret
ja
add
sub
pop
adc
push
std
lods
add
cmp
fwait
cmp
popa
je
xor
lods
cmp
cmp
xor
lret
push
into
lock
movsb
push
int
mov
movsb
mov
adc
push
cmp
cmc
xor
cmc
and
mov
fwait
jl
sahf
jb
mov
cmpsb
ror
dec
outsl
jg
mov
or
dec
std
icebp
xchg
sbb
mov
jl
cltd
je
aaa
dec
clc
ja
rolb
sub
xorl
pop
lock
add
shlb
push
adcb
push
daa
enter
je
dec
push
mov
xlat
jecxz
arpl
cmp
xchg
fs
cmpsb
movsl
xchg
int
xor
dec
xor
jno
pusha
mov
addr16
and
in
push
xchg
outsb
ds
rcrb
inc
std
add
add
mov
and
push
dec
lea
repz
fwait
out
lret
sub
add
add
mov
imul
out
push
sbb
pusha
cltd
js
pop
mov
fstl
in
clc
mov
jno
cld
je,pn
testb
adc
sti
ja
insb
adc
xchg
xchg
jl
inc
xor
jge
sub
das
sbb
test
aam
cmc
clc
pop
daa
int3
pop
sti
and
sub
lock
lods
movsb
int
mov
hlt
add
hlt
sahf
sub
sbb
iret
mov
jb
out
xchg
sahf
negb
xlat
cmpsl
add
jmp
fstpl
popa
ret
xor
sbbl
call
sub
es
sarl
iret
dec
inc
dec
shlb
jo
test
pop
scas
out
test
and
add
pushf
mov
in
call
mov
pushf
ss
xchg
repz
pop
hlt
es
xlat
push
test
psubb
cli
mov
in
or
pop
mov
int
cmpsl
cli
sti
mov
testl
data16
mov
int
cmpsl
lods
mov
pop
scas
nop
lcall
rcrl
push
xchg
adc
lret
dec
mov
sub
inc
mov
nop
push
out
clc
das
lods
movsb
mov
in
enter
dec
sbb
sti
fadds
xchg
push
test
jb
cltd
add
stos
jge
pop
fistl
outsb
shll
mov
cmp
pop
mov
mov
insb
mov
xchg
xor
int3
or
adc
adc
add
xchg
lret
pop
pop
pusha
aaa
pop
sbb
pop
sbbl
test
xchg
cmp
in
es
outsl
pop
mov
jg
leave
push
dec
repz
jns
pop
mov
repz
or
imul
repz
dec
jle
sub
push
int
in
sahf
adc
sub
sar
jnp
push
mov
or
and
cli
and
or
xchg
out
clc
xchg
scas
jnp
jl
push
dec
xchg
subb
out
pop
jo
mov
mov
ss
and
lret
jae
repnz
pop
loop
add
pop
xchg
lret
ret
jmp
js
imul
cld
xor
jge
in
scas
popa
cld
pop
ror
fisttps
inc
mov
adc
int3
pop
stos
pushf
mov
push
dec
dec
aam
call
pop
push
inc
pop
xor
push
push
mov
ja
pop
inc
mov
lret
jge
cmc
fwait
push
fbstp
mov
push
xchg
xor
inc
pop
out
mov
int
add
xchg
push
sbb
daa
les
icebp
and
ret
cmp
pop
cli
in
loop
gs
movsl
jp
inc
add
sbb
daa
sbb
sahf
jns
test
addr16
shlb
fdivrs
xchg
out
dec
mov
and
stc
sub
cmpsl
mov
aaa
into
adc
jno
dec
enter
sub
sub
cli
repz
mov
and
add
leave
test
push
or
mov
lret
jecxz
lret
sbb
push
pop
std
dec
rorl
jae
lds
sub
inc
pusha
mov
inc
iret
adc
mov
cmp
xchg
jne
sbb
std
ret
cmpsl
cwtl
fisubrl
and
mov
xchg
int
lcall
leave
xchg
push
stos
sbb
pop
pop
sbb
mov
push
gs
dec
fildll
cmpsb
mov
popa
neg
xchg
das
test
jge
addr16
cmc
addb
pop
pop
xchg
cmp
lock
inc
ljmp
clc
xor
inc
mov
mov
fs
or
xchg
dec
xor
sbb
femms
js
jl
ja
cld
sub
push
sbb
mov
jbe
ss
push
sub
xchg
ret
int
dec
dec
outsl
out
jmp
sub
repz
pop
xchg
das
mov
or
test
mov
iret
add
and
sub
loopne
in
popf
add
sbb
outsl
xchg
jg
sub
sub
sarl
mov
lret
pop
test
nop
and
jmp
pop
inc
test
push
xchg
out
xor
rcrl
gs
scas
adcb
push
test
add
sub
mov
dec
add
xchg
push
fisubl
lea
pusha
sbb
aaa
imul
das
out
cmc
sub
mov
test
and
jb
push
movsb
out
and
add
pop
loope
imul
dec
pop
test
push
inc
data16
in
mov
xchg
push
in
int3
popf
fists
cmp
lea
inc
cmp
dec
popf
push
bound
or
cmpsl
jle
ljmp
in
push
movsb
mov
adc
xor
pop
shll
lock
dec
inc
fisubs
shl
je
fwait
adc
pop
push
push
inc
shr
mov
mov
cmp
cmp
rclb
sub
ret
adc
mov
lahf
push
clc
js
repnz
and
movsl
lcall
and
sti
dec
lret
cltd
push
aam
cld
into
pop
xor
movb
scas
jbe
aad
leave
test
sbb
out
and
movsl
mov
ds
shr
dec
or
loopne
bound
or
imul
lea
xlat
fisubs
ficoms
xchg
pop
sarl
outsl
mov
jge
jnp
sub
ds
push
enter
cmp
repz
xor
lret
mov
inc
or
mov
mov
inc
lahf
aad
xchg
decl
ja
pop
xchg
mov
and
cmp
test
pop
movsb
sbb
xor
js
jo
push
aad
xchg
fidivs
out
adc
orl
mov
stos
and
test
mov
jmp
insl
sbb
repz
mov
ds
call
xchg
xor
addr16
aad
cs
jae
adc
popf
dec
scas
mov
test
jns
loope
adc
sbb
and
push
inc
push
jmp
cmp
xor
sbb
sub
xor
iret
pop
push
stc
clc
mov
inc
in
mov
cmpsb
out
mov
ret
dec
mov
cmp
jg
mov
hlt
test
das
pop
pop
mov
rorl
mov
xor
stos
cmp
add
pop
push
stos
or
jle
test
jmp
adc
pop
lcall
js
jns
in
fbstp
push
repnz
push
dec
sti
aas
enter
mov
or
mov
inc
pusha
xor
pop
xor
fwait
call
adc
mov
lahf
xchg
sbb
cmp
je
jns
in
test
or
pusha
aas
outsl
jmp
mov
or
or
jecxz
pop
lods
loopew
sahf
arpl
pop
push
clc
das
xchg
insb
sub
stos
push
inc
fcoms
out
jg
or
fldl
pop
jp
push
cmp
cmp
sbb
ja
pop
fstl
shlb
mov
cmp
stc
jnp
sub
xchg
sbb
xor
das
imull
inc
enter
mov
pop
mov
inc
dec
push
cwtl
and
es
leave
in
mov
lods
ja
cmp
add
cmp
out
xchg
in
sbb
cmp
enter
fimuls
insb
adc
push
sahf
adc
inc
jge
cmp
lcall
dec
lcall
dec
aaa
aam
sbb
xor
mov
rolb
shll
repnz
cwtl
push
xlat
cmp
add
pop
out
mulb
adc
inc
hlt
es
mov
push
test
leave
xchg
mov
inc
in
pop
lahf
dec
cwtl
add
and
leave
xchg
adc
aaa
push
pcmpgtd
mov
leave
fsts
movsl
and
pusha
cmp
addb
aas
rcll
or
mov
mov
cmp
cltd
mov
add
sbb
ret
scas
cmp
pop
int
pop
mov
and
mov
mov
mov
shrb
jmp
mov
jecxz
movq
test
push
sbb
mov
outsl
jno
and
les
test
inc
xchg
imul
sub
sbb
mov
es
in
sub
popf
stc
cld
mov
jp
add
pop
fildll
push
push
mov
mov
sub
mov
add
pop
add
jne
pop
mov
negb
mov
xchg
lea
jp
and
inc
cmp
in
inc
sub
fistl
push
scas
and
dec
sbb
add
call
jl
mov
xor
pop
mov
push
add
mov
add
daa
dec
adc
fs
lahf
pop
fdivrs
adc
cmp
or
mov
pushf
xchg
into
xor
stos
dec
sahf
sub
test
lods
std
sub
call
pop
xchg
push
in
lea
pop
cmp
push
jg
pop
mov
loop
cs
mov
mulb
sbb
pop
pop
outsb
ds
orb
mov
ds
mov
cmp
dec
je
sub
ljmpw
sbb
sbb
scas
push
aas
dec
les
mov
mov
jecxz
and
push
adc
mov
jge
cmpsb
push
aaa
ficoml
es
fcmovbe
int3
xchg
mov
add
cmpsb
pushf
pusha
push
sti
jbe
cld
std
stc
jne
and
mov
scas
inc
inc
adcl
pop
mov
jge
dec
test
mov
outsl
call
das
scas
mov
jno
and
jb
enter
rorb
inc
outsb
mov
repz
inc
sti
fisubrl
dec
pushf
ret
mov
cmp
xlat
push
fidivrl
xchg
fadd
and
sahf
jecxz
in
mov
scas
mov
mov
idivb
in
mov
pop
mov
xchg
loop
lcall
pop
roll
jmp
sbb
and
lock
jb
into
xlat
cld
fistl
and
jno
inc
cmp
imull
jecxz
xchg
or
lret
mov
mov
cmp
in
mov
jns
loope
clc
mov
sub
out
addr16
call
mov
pop
pusha
mov
clc
cwtl
xchg
icebp
mov
or
stos
cwtl
xchg
andl
pop
into
stos
fisubl
push
xorb
sbb
mov
push
add
outsb
and
lds
jp
call
mov
scas
pop
int3
jnp
mov
cmovae
mov
cmp
dec
sbb
test
jl
inc
jne
cmp
dec
push
sbb
inc
lds
sahf
jecxz
int
mov
jb
or
pop
fnsave
int
imul
cmp
jbe
adc
xor
adc
out
xor
mov
mov
loop
mov
pop
adc
aad
mov
mov
repz
cwtl
cmp
pop
push
shl
push
js
lock
mov
and
adc
scas
mov
cli
cmp
sbb
fimull
insl
cmp
dec
xor
jns
jg
popf
jb
jbe
shrl
xchg
pusha
xchg
cltd
sub
jno
push
adc
out
and
pop
mov
push
int3
sbb
sbb
or
enter
sbb
in
and
insb
out
cmp
push
xchg
cmp
mov
mov
scas
mov
icebp
andl
stc
fcoml
inc
lahf
inc
leave
decl
mov
xchg
into
add
dec
in
cmp
sbb
jg
cmpsl
test
push
cmp
pop
jno
or
lock
jo
test
je
fnstcw
push
xchg
push
push
add
pop
test
ret
lods
mov
and
fwait
mov
add
push
cmp
sub
mov
iret
insb
mov
xor
fsts
sub
stos
sbbl
scas
mov
insl
std
mov
data16
cmp
stos
int
fsubrp
cmp
stos
icebp
cld
dec
leave
enter
scas
cli
mov
add
xchg
call
test
addl
mov
inc
mov
movl
mov
call
xchg
push
divl
fdivrs
xchg
fwait
andl
fists
xlat
dec
mov
dec
lcall
cmc
imul
ss
mov
xchg
jne
push
mov
fs
outsb
xor
loop
sub
add
mov
orb
js
push
ficompl
gs
push
out
enter
insl
scas
inc
ds
test
jecxz
sahf
pop
lret
mov
vmulps
into
adc
cmp
aaa
jns
std
jnp
mov
sbb
movsl
int
js
mov
and
int3
shll
or
dec
arpl
pop
mov
dec
into
sahf
aam
aas
jmp
ret
cld
push
jne
ja
lods
mov
mov
gs
insl
test
inc
jo
dec
mov
notl
es
das
xor
mov
xchg
pop
mov
sub
and
mov
cmp
dec
xor
fistps
pop
fldl
and
cltd
sarb
sub
sbb
cltd
les
inc
das
mov
scas
push
sbb
pushf
daa
into
xor
mov
xchg
cmpsb
xchg
mov
test
lea
scas
rclb
jno
insb
xor
mov
and
jae
pop
add
aas
pusha
mov
mov
scas
rcl
insb
cwtl
add
mov
pop
ret
jmp
mov
imul
lcall
push
test
mov
xor
gs
sbb
mov
gs
mov
adc
mov
lret
xchg
cmpsl
aad
mov
jbe
test
sub
or
and
cmpsb
shrb
mov
cli
sahf
or
xor
les
push
rclw
pusha
jle
cmc
repz
push
loope
cmpsb
movsb
adc
push
push
sub
mov
rcl
mov
out
jle
mov
or
dec
inc
imul
sbb
inc
pop
nop
repnz
lds
push
push
add
mov
or
loope
test
mov
push
or
xchg
mov
xor
loope
ja
mov
xchg
gs
and
pop
addb
xor
pop
inc
pop
inc
push
push
dec
push
mov
jg
icebp
mov
mov
sti
xchg
jle
ja
lock
add
movsb
pop
cmp
mov
cmpsb
jmp
div
ret
ret
out
cltd
pop
sti
movsb
scas
in
adc
dec
in
out
xor
iret
data16
pusha
push
test
pop
rcr
mov
cmp
and
xor
cli
xor
pop
inc
or
sbb
mov
push
fmull
mov
mov
pusha
mov
xchg
pop
inc
subb
inc
or
sbb
out
add
sub
sub
sbb
jbe
inc
cmp
inc
js
pop
jns
fwait
pushf
es
or
sarb
clc
imul
push
enter
outsb
fs
popa
sub
sbb
inc
inc
cmp
jnp
push
xchg
adc
je
mov
aas
push
ficoml
mov
int
jmp
adc
or
call
ret
sbb
sbb
xchg
adc
shrl
xor
mov
pusha
in
adc
out
sub
pop
jne
mov
mov
out
or
arpl
ffree
and
test
popa
dec
shrl
cmp
imul
shrl
mov
jl
jnp
sahf
pop
fcmovne
shlb
lea
lea
or
jmp
mov
cli
sti
push
lret
cmc
adc
ret
xchg
or
xchg
test
mov
push
sub
sub
jbe
adc
ja
fcoms
pop
iret
shll
add
adc
or
cmc
xchg
lahf
ss
lret
mov
fldenv
outsb
jecxz
sbb
add
and
push
adc
dec
loopne
jnp
shll
je
dec
push
mov
push
dec
cmpsb
add
mul
sub
cmp
jge
movsb
gs
aad
or
and
js
or
pop
sbb
dec
outsl
ret
fcomps
orl
scas
inc
pop
orl
lock
in
rol
xchg
nop
cli
sub
xor
jns
shl
iret
or
popa
push
in
add
and
fcmovnu
cmp
pop
mov
enter
xchg
push
lock
mov
xor
nop
sar
sub
xchg
bound
mov
shlb
xor
mov
shll
mov
ret
popl
push
jae
cmp
mov
cmp
pusha
adc
imul
or
in
icebp
sbb
cmpsb
popa
lret
xchg
sbb
jl
je
and
mov
je
stos
insl
popa
lods
mov
sub
sbb
das
add
mov
loop
add
shlb
adc
cwtl
jp
jno
and
cmp
stos
pop
test
jb
cmp
test
mov
aam
jg
popf
paddq
ret
cmp
insl
xchg
loop
and
dec
das
loope
lods
cltd
repnz
pop
pop
clc
xlat
dec
into
cwtl
jo
fmul
lods
fcmovu
add
mov
cwtl
mov
aad
push
mov
stc
mov
xchg
xchg
jno
cmp
jno
aas
mov
mov
insl
decl
cmp
insl
scas
dec
pop
xchg
dec
adc
xor
cli
nop
push
das
adc
popf
jle
push
sbb
inc
aam
ljmp
pushl
mov
mov
sub
cld
sbb
cs
mov
ret
and
add
test
mov
add
add
lds
or
movsl
push
sbb
add
sub
sub
push
jle
insb
jb
add
xchg
out
divb
jecxz
ftst
popf
push
leave
xor
cltd
sti
sti
xchg
mov
or
cmpsb
push
out
jge
adc
pop
or
popf
int3
hlt
nop
xchg
test
mov
mov
mov
sub
cwtl
adc
sub
lock
scas
std
jnp
mov
add
and
cli
shrb
dec
xor
cmp
shlb
lods
xor
inc
in
ljmp
jbe
loop
repz
dec
cmpsl
lods
repnz
lret
sbb
scas
jmp
mov
add
mov
inc
push
sbb
jge
repz
mov
test
mov
lods
pop
xchg
call
mov
test
cmp
xor
jg
xor
lret
mov
lcall
lcall
movsl
loop
stos
xor
add
int
lds
or
dec
mov
jne
sbb
mov
jmp
scas
test
push
xor
sub
add
push
and
xchg
xor
lds
dec
cmpsl
jae
dec
imul
stos
pop
rclb
out
inc
push
cwtl
jb
xor
fiaddl
inc
stos
pop
hlt
subb
jp
inc
clc
jmp
jle
mov
mov
pop
mov
test
loope
cmpl
add
mov
xorl
mov
adc
jno
je
leave
movsl
mov
mov
rep
xor
inc
pop
xor
adc
out
pop
mov
mov
test
mov
popf
jge
jp
jge
xlat
lock
or
seta
jb
cmp
push
rolb
adc
dec
push
and
xchg
dec
push
inc
xchg
add
adc
adcl
ljmp
cwtl
pop
dec
jecxz
mov
push
lds
add
mov
ds
es
xor
xchg
popl
adc
ja
jbe
mov
fnsave
lds
xor
insb
sahf
sbb
sti
inc
loop
lea
xchg
cmp
mov
sub
inc
jb
ds
cmpsl
xor
in
add
sbb
je
insl
pop
sar
jns
sbb
lods
pop
push
js
fldt
cmpsb
popa
xlat
test
mov
pop
sbb
jle
pop
mov
call
in
movsl
sub
les
xlat
adc
mov
dec
outsb
test
cmp
mov
mov
pop
stos
lahf
mov
cld
sbb
das
pop
xor
adc
into
lahf
mov
and
repz
repnz
mov
ja
clc
test
pop
cmp
sub
shlb
les
push
mov
sti
fadd
in
loope
bound
inc
shl
loop
addr16
cwtl
and
aaa
mov
clc
insb
push
mov
movsb
fidivs
roll
jns
fucom
div
icebp
cld
outsb
jg
cmpsl
lret
stos
add
adc
jecxz
mov
mov
mov
pop
fs
sbb
pop
in
adcb
and
out
sbb
pushf
dec
arpl
pop
mov
xchg
sbb
mov
pop
daa
insl
jp
sbbl
sbb
and
mov
and
xchg
jle
xchg
in
lods
and
lret
icebp
sub
movsb
and
jge
fisubs
es
inc
sub
dec
xlat
adc
lock
mov
mov
aad
movsb
sub
rcr
in
jg
push
roll
jb
xor
add
or
outsl
ljmp
cld
inc
inc
or
inc
mov
mov
mov
lods
sub
dec
add
loopne
xlat
mov
ja
xchg
adc
xchg
add
jecxz
pop
test
fdiv
insb
testb
push
inc
push
sub
pop
ficoms
outsl
xchg
jbe
sbb
out
popf
call
pop
sbb
fwait
dec
push
push
mov
in
push
stos
loope
lds
sub
fwait
std
sbb
in
adc
push
lret
inc
add
add
enter
push
fbstp
cs
jle
add
js
jl
das
cmpb
out
mov
cmp
out
inc
clc
sbb
mov
ret
mov
mov
js
lret
pop
nopl
cmovg
jmp
xchg
jnp
adc
lea
jl
push
dec
adc
inc
out
jno
dec
hlt
dec
dec
push
and
int3
xor
popa
mov
test
fs
mov
jmp
jle
cld
outsb
imul
stc
sbb
bound
jns
sarl
pop
hlt
inc
adc
mov
faddl
adc
popa
push
andl
cmpsl
fwait
mov
mov
mov
cmp
stos
in
and
rclb
xor
into
mov
xor
int3
and
mov
mov
xchg
insl
xchg
repnz
xchg
cwtl
mov
add
or
test
adcl
enter
and
dec
es
or
xchg
cli
js
in
pop
cmp
xorl
popa
jle
cmp
mov
nop
aad
mov
cmp
jecxz
cmc
push
cltd
ret
jp
aam
stos
jle
cmp
lcall
lods
stos
mov
dec
mov
dec
sarl
sbb
notb
adc
mov
and
mov
sub
adc
mov
inc
or
jge
gs
jae
shlb
mov
add
mov
mov
mov
mov
push
sbb
push
test
cmp
fwait
jbe
out
push
mov
mov
fs
mov
idivl
jmp
repz
in
std
in
adcl
ss
fwait
out
ficoml
popa
cmp
popa
dec
arpl
fistps
testb
repz
lcall
jae
sbb
movsl
fs
and
scas
inc
repz
in
and
jbe
out
jl
mov
xchg
xchg
lock
adc
jecxz
xchg
push
test
movsb
lret
enter
inc
aaa
sub
loope
into
jecxz
mov
inc
jbe
sahf
xor
dec
fadds
or
addr16
es
jne
jmp
mov
mov
push
xchg
mov
mov
mov
mov
lods
sub
iret
lea
xor
test
loop
test
push
cld
xlat
ficomps
add
push
cltd
andb
inc
inc
push
outsl
sbb
xor
xchg
or
fildl
or
jl
mov
gs
mov
inc
outsl
into
jo
loopne
repnz
cmpsl
pop
cmp
fisubrs
in
and
pop
aaa
and
xchg
jmp
cmp
inc
pushf
add
pop
cmp
push
xchg
cli
sarb
sbb
dec
cmp
out
loop
test
jp
in
adc
aaa
pop
imul
or
jns
cmp
jae
push
pop
push
add
mov
and
or
dec
jae
xor
pushf
sbb
sub
fdivrs
out
or
je
call
cs
and
test
pusha
les
add
out
pop
xor
pop
daa
add
in
mov
add
lcall
xor
imul
inc
repz
stos
mov
pop
xor
or
adc
mov
sub
and
sbb
and
adc
fcmovb
test
xchg
cmpsb
sub
mov
ljmp
cld
outsb
insb
in
push
push
data16
inc
jmp
mov
mov
add
mov
pop
bound
dec
fsubrs
pusha
pop
loop
ret
jl
mulb
mov
lock
cli
in
xor
fistl
cld
jle
push
jb
insb
aaa
xor
movl
out
inc
jnp
pop
mov
pusha
cmp
mov
xor
divb
sbb
repnz
dec
dec
sbb
clc
xchg
cmp
mov
push
dec
add
dec
fs
pusha
dec
pop
stos
fists
dec
xor
jp
xchg
push
pop
mov
push
rclb
icebp
mov
jmp
mov
adc
dec
int3
int3
stos
or
xchg
lret
push
add
scas
xor
mov
or
adc
pop
out
lcall
xchg
imul
std
push
adc
pushf
jbe
cmpsl
sbb
lret
xchg
lods
lahf
in
pop
cld
or
jae
fs
cs
lret
cmp
xchg
cmp
and
jnp
pop
and
imul
popf
xor
sbb
sahf
pop
pushf
cmpsl
cmp
leave
lea
lock
mov
dec
mov
pop
or
cmp
test
aam
fs
or
nop
jl
in
pusha
lret
pop
dec
lods
sbb
mov
subb
or
fsub
icebp
test
xor
push
sub
pop
mov
mov
stc
fadd
movsb
bound
faddp
mov
and
rorb
loopne
cmp
adc
jle
inc
inc
pop
or
lcall
xor
inc
nop
sub
arpl
jb
mov
push
cmp
arpl
dec
ja
pusha
rcll
xchg
cmp
mov
cmpsb
xchg
scas
cmp
adc
adc
mov
push
adc
clc
arpl
rclb
xor
push
or
mov
cwtl
sbb
lods
insl
push
jle
mov
mov
lods
out
imul
outsl
jns
cmp
xchg
repnz
pop
hlt
sbb
pop
fsubl
lahf
jmp
fdivrl
inc
mov
ds
scas
xlat
or
mov
in
jb
jl
dec
clc
popa
rcll
lock
fistps
dec
mov
in
dec
inc
mov
rolb
lock
fs
aaa
inc
pop
xor
fiadds
movsl
cmpsb
pushf
stc
cli
xchg
bound
mov
fadds
mov
inc
add
js
pop
push
xor
scas
xor
push
mov
adc
fnstenv
cmp
adc
cs
ficompl
in
leave
ss
sub
pushf
imul
xor
mov
xor
sbb
shl
sahf
rorl
sbb
xorb
stos
fincstp
mov
mov
inc
mov
mov
and
sub
push
lds
pop
icebp
add
test
ljmp
std
outsb
xor
data16
aad
in
jge
repnz
repnz
dec
add
decl
pop
jmp
jmp
imulb
mov
lods
xchg
xor
movsb
sbb
into
das
pop
sbb
push
out
rorb
sub
enter
push
sbb
rcr
jns
mov
sahf
mov
rolb
enter
cs
mov
fsubl
jb
outsl
loope
pop
in
or
inc
out
jl
jnp
add
jb
stc
sbb
pop
int
ds
or
lock
outsl
arpl
ljmp
scas
push
inc
pushf
stos
xor
lret
imul
jb
jno
popa
sbb
pop
out
sbb
daa
pop
sbb
xor
dec
rorb
push
decb
loope
daa
mov
imul
je
popa
aas
add
jbe
push
das
or
test
cmpsb
cs
mov
inc
sarb
jmp
fs
daa
ja
push
stos
sbb
jecxz
popa
pop
mov
inc
xor
xor
cmpl
dec
cwtl
push
jp
cwtd
mov
test
int
dec
adc
mov
cwtl
jp
popa
mov
add
addl
fsts
mov
lods
test
and
lock
sub
or
or
fildll
pushf
sbb
xchg
adc
leave
nop
adc
dec
nop
adc
jae
aam
or
imulb
cmp
call
inc
xor
aas
popf
inc
sub
jns
outsb
pop
aas
gs
mov
lahf
and
mov
or
ljmp
dec
xlat
xlat
adc
jno
adc
cmp
imul
in
adc
push
push
push
cltd
mov
mov
cmpsb
jnp
xchg
sub
and
jne
in
scas
popa
xor
inc
sub
adc
push
and
mov
inc
jl
mov
paddsb
dec
adc
lcall
mov
outsb
fnstcw
andb
xor
out
sub
lret
mov
jge
xor
leave
dec
mov
insb
add
jo
add
repz
push
and
dec
jb
add
mov
gs
out
lea
mov
fs
mov
pusha
les
jnp
push
hlt
loop
out
sub
cwtl
push
popl
mov
fcomps
push
stc
pop
or
mov
add
xlat
mov
xor
arpl
add
arpl
xchg
sarl
jnp
loop
push
je
or
adc
popf
and
es
dec
call
sti
cmp
sub
mov
adcb
or
pushf
sub
mov
insl
inc
lods
stc
xchg
jle
mov
imul
aas
cmp
xor
mov
dec
in
sbb
cmp
ret
int
xor
pop
stc
out
hlt
imul
adc
xchg
fildll
dec
dec
imul
dec
fdivl
bound
stc
dec
xchg
out
cmpsl
dec
sbb
aam
cwtl
cmp
shlb
nop
jp
and
dec
roll
pop
mov
push
mov
push
add
in
mov
addr16
mov
ds
sub
mov
popa
jle
sub
pop
cmp
les
mov
adc
mov
jecxz
lret
js
xchg
pop
mov
push
add
mov
cltd
pop
into
mov
push
or
scas
jp
mov
movsl
mov
xor
lock
cmp
shll
push
in
pop
je
out
mov
jne
call
jae
mov
jge
or
mov
std
cld
lcall
rcr
mov
push
inc
lods
fs
out
fldenv
lods
outsl
insl
cltd
int
push
xor
lcall
gs
cmp
ret
dec
jnp
fiaddl
add
sub
sbb
xor
mov
iret
or
jne
mov
pop
adc
negl
imul
dec
in
jl
xchg
add
and
nop
dec
sub
dec
inc
hlt
loopne
adc
xor
int3
dec
popf
out
xchg
enter
xor
in
sub
movsb
jp
push
ja
hlt
jmp
popa
mov
push
or
push
add
out
jno
pop
ds
mov
nop
dec
pusha
scas
dec
sub
inc
lret
lea
jmp
int
in
xchg
push
in
shrl
cmpsb
add
addr16
mov
daa
sub
adc
insl
cmp
add
pop
sarl
sbb
mov
mov
dec
stos
mov
mov
add
fwait
aad
or
sbbb
ds
xchg
outsl
push
lret
jmp
mov
movsl
fcomp
std
out
sbb
ret
test
inc
push
aad
sub
repnz
stos
stc
sub
or
or
push
insl
orb
repz
cltd
and
popf
shll
in
in
mov
ja
popa
add
loop
xchg
ficoms
mov
mov
lods
cmpsb
mov
mov
dec
and
scas
sbb
and
jmp
xchg
xor
fdivrs
popa
out
inc
popa
mov
dec
inc
imul
dec
and
jle
fisubrl
popa
int
xor
cmp
inc
rolb
add
jb
movsb
ss
fucomp
mov
jle
cld
iret
enter
repz
pop
dec
sub
arpl
inc
daa
xor
jb
test
rclb
xchg
movsb
ret
cmpsb
push
sbb
lcall
xlat
das
add
insb
mov
mov
sahf
int3
scas
rorl
inc
aad
jae
and
cmpsl
outsl
and
imul
push
ss
cmpsb
insl
push
mov
iret
adc
sub
jle
push
adc
cwtl
outsb
and
jl
in
gs
adc
jg
cmpsl
and
xchg
in
ss
xchg
and
sub
xor
add
jl
jnp
negb
insb
aad
cs
sub
push
mov
lea
cltd
xor
addr16
inc
sahf
fstpl
data16
popa
sbbb
inc
outsl
pop
outsl
roll
mov
push
inc
mov
nop
adc
jmp
jecxz
push
fwait
stos
cmp
xchg
pop
jbe
bound
pop
rorb
inc
fldt
cmpb
loope
pop
loope
mov
or
dec
das
ret
pop
adcb
mov
or
int3
aas
pop
fnstsw
jmp
xor
inc
mov
aas
sti
add
cmp
xor
jne
cld
jo
jnp
int3
enter
lock
xchg
cltd
stos
iret
mov
jo
mov
jge
inc
ror
addr16
stos
xor
xchg
jo
lahf
fistps
inc
mov
js
ja
insl
sbbl
outsb
pop
jmp
push
xchg
shl
xchg
in
fmull
fs
cltd
push
mov
xchg
fcompl
enter
imul
dec
fimuls
push
aas
and
ljmp
jns
cld
mov
dec
out
mov
sub
lret
insl
jge
inc
xlat
cs
insb
std
in
daa
adc
push
cmp
repnz
iret
imul
and
sbb
pop
dec
sar
sub
dec
jge
mov
test
ud1
loope
std
pop
adc
mov
movsb
xchg
xchg
out
xor
push
loop
cwtl
dec
inc
dec
cltd
or
mov
fsubs
or
mov
or
add
icebp
mov
sarb
mov
les
mov
lret
or
cwtl
inc
xor
cmpsl
sub
in
int
and
lret
xchg
dec
push
xchg
into
and
out
mov
cmp
mov
or
cltd
jb
push
imul
sahf
pusha
clc
cwtl
jge
lds
cmc
add
ds
lods
lahf
lret
outsl
ret
xchg
sub
mov
mov
mov
out
push
in
dec
clc
mov
out
adc
in
pop
repz
out
xchg
cmp
cmp
js,pt
pop
pusha
dec
into
fmull
iret
cmpb
shl
lret
jbe
shrl
push
xor
fs
aad
int3
ljmp
jmp
fcmovb
fisttps
cmp
jnp
xchg
mov
daa
mulb
cmc
pop
adc
movsb
mov
push
jle
clc
sbbl
outsb
fwait
push
jne
lds
sti
cmp
xor
jg
push
test
sahf
jne
rorl
nop
sbb
push
int3
and
jecxz
sub
ret
push
and
and
arpl
daa
cs
pop
or
fsub
repz
out
and
test
push
xchg
lcall
pop
cmp
fcomp
pop
mov
scas
sub
push
pop
cli
aaa
sub
and
sub
xchg
lret
sub
fs
fildll
xlat
sub
dec
addr16
and
push
cmp
or
sbb
rcll
sub
jb
add
xchg
loop
sub
mov
stos
fdiv
pop
fucom
idivb
mov
call
add
cmp
ret
mov
cmp
fwait
jg
data16
mov
loopne
xor
add
push
mov
sbb
sti
sbb
pop
pop
jne
cmp
leave
jo
push
lret
inc
movsl
sbb
lret
and
rolb
cmc
sub
push
popf
or
js
xor
add
cld
je
inc
outsl
mov
mov
icebp
repz
push
popa
leave
or
loop
xchg
mov
adc
jge
cli
add
mov
cwtl
iret
sarl
enter
xchg
out
cmp
xchg
out
inc
mov
xor
aas
jecxz
lock
das
ds
push
cmp
hlt
pop
imul
mov
lods
push
movsl
push
mov
adc
hlt
inc
push
push
scas
fldl
xchg
xor
ret
loope
ret
iret
test
lcallw
clc
pushf
jge
lret
movsb
lret
in
push
sbb
jo
push
in
inc
pusha
add
pusha
dec
push
insl
jae
je
daa
pop
xchg
sub
or
lcall
in
sbb
xlat
test
data16
cltd
lock
xchg
xorb
ss
push
loop
mov
ret
adc
repz
int3
es
loopne
int
push
imul
mov
sbb
xor
inc
fisttpl
test
lock
push
pop
sbb
lds
movsl
cld
cltd
and
ljmp
push
fcoms
mov
inc
stc
add
repz
pop
notb
sahf
inc
pop
jecxz
ljmp
pcmpeqw
arpl
adc
cs
mov
xchg
lret
mov
jnp
scas
aaa
xchg
and
pop
cmc
into
in
test
pop
xorb
mov
orb
lock
cmpsl
enter
dec
jge
xchg
fnsave
dec
popf
leave
data16
out
sub
xchg
cmp
fsub
mov
xchg
lods
jmp
push
lock
test
fisubs
fwait
enter
cmpsl
jno
cmp
in
test
sbb
pop
cmp
pop
xlat
cld
xchg
inc
pop
sbb
adc
outsb
test
mov
das
mov
add
cmp
adc
dec
push
dec
xor
sub
push
mov
js
dec
adc
sub
cmp
push
sub
xlat
roll
pushf
add
add
int3
lahf
sbb
mov
nop
push
test
hlt
xor
jbe
push
jecxz
mov
ja
out
push
nop
lds
loopne
mov
hlt
stos
test
adc
mov
mov
stc
xorl
pop
jecxz
test
mov
sbb
addl
rorl
aaa
bound
xor
dec
iret
cmpsb
aaa
aas
adc
pop
fldenv
inc
jb
faddl
pop
adc
scas
aad
inc
in
rclb
adc
mov
xor
sub
inc
inc
rcll
sarb
mov
cmp
and
popf
pop
mov
mov
outsb
add
lods
mov
push
sbb
cmc
xchg
aaa
inc
sahf
test
ret
mov
das
and
or
pop
int
nop
inc
ljmp
pusha
inc
push
aas
cltd
fdivr
les
nop
adc
inc
in
out
lea
in
jge
fwait
dec
sbbb
arpl
rorb
in
jmp
adc
scas
pusha
sahf
movsb
sub
in
cmp
xor
insb
in
jae
push
cmc
cmpsb
xor
xor
cmpl
inc
shrl
mov
and
cmc
add
ja
cmp
or
bnd
mov
popf
mov
cmpsl
push
inc
adc
xchg
jle
ret
push
jp
mov
es
xlat
mov
inc
jp
aas
cmc
xor
aaa
mov
inc
rol
imul
outsl
push
sti
push
hlt
inc
dec
jmp
mov
inc
add
pop
adc
push
sub
les
inc
pushf
sahf
sbb
sub
and
cmp
xchg
je
pop
adc
ljmp
pop
leave
bound
push
inc
xor
mov
pushf
pushf
mov
inc
test
adc
mov
adc
dec
cmp
sbb
notb
repz
mov
dec
std
and
ljmp
pop
sbb
mov
sub
shl
add
xchg
incl
dec
push
xchg
jbe
movl
hlt
aam
idivl
pop
mov
add
push
mov
adc
loope
sub
scas
mov
pop
shll
mov
sbb
sbb
mov
inc
pop
jnp
movsb
mov
mov
insl
jae
sbb
mov
sbbb
jp
push
mov
cmp
jbe
adc
mov
jns
pop
pop
cmp
inc
cmp
dec
push
xorl
jno
and
aas
mov
and
and
pop
push
mov
push
imul
shll
sub
push
push
inc
fdivrl
orl
and
es
push
rcrl
cmp
inc
call
test
sti
js
arpl
adc
inc
fcoms
xchg
scas
mov
push
mov
sbb
jnp
push
cmpsl
lret
push
out
mov
sahf
scas
sahf
addr16
adc
mov
or
add
sbb
mov
push
clc
mov
push
cmp
test
cmp
mov
mov
cmc
push
xor
add
jmp
mov
out
fisubrs
iret
loop
ret
push
or
xor
cwtl
notb
aas
sub
aaa
pop
pop
xor
popf
cmpb
mov
lret
inc
ja
sti
or
mov
fs
hlt
pop
xchg
adcb
dec
pusha
repz
insb
push
xor
rcrb
mov
push
push
mov
stos
xor
lahf
sub
push
and
adc
cld
cmpsl
cmp
dec
mov
push
rorl
xor
or
int3
leave
jge
xchg
xor
gs
xorb
in
test
dec
inc
repnz
jl
or
inc
sbb
push
testb
pop
xor
xor
push
repz
xor
jmp
pop
insl
xor
popf
shrl
std
sbb
jno
bound
jmp
sbb
lods
aaa
lret
sbb
aaa
mov
in
or
push
sub
mov
mov
sub
mov
cwtl
nop
cld
push
pop
cmp
pop
in
out
push
sub
dec
xchg
mov
push
leave
lret
dec
sub
adc
push
dec
xchg
mov
pop
ljmp
mov
testl
xchg
inc
divb
dec
cld
adc
cmp
mov
int3
and
call
orb
xchg
mov
push
mov
sub
ljmp
fnstcw
dec
out
mov
cmp
jp
inc
loopne
js
mov
jbe
mov
sub
xorb
sub
jecxz
cltd
out
rcrl
hlt
sbb
bound
xchg
imul
mov
cmp
addr16
jmp
std
imul
ret
add
mov
sbb
jne
lcall
sbb
subb
and
dec
insb
or
push
das
xchg
mov
fcmovbe
fs
cmp
add
mov
xlat
add
pop
movsb
aas
movd
iret
add
adc
jo
xchg
fs
jno
and
pop
loop
and
nop
and
mov
sub
pusha
dec
sub
in
add
insb
add
push
sbb
daa
addl
mov
int
mov
leave
sti
ljmp
sub
push
test
sub
adc
cltd
cltd
mov
sbb
lock
and
sub
xor
pop
inc
jg
mov
data16
out
out
dec
lcall
mov
mov
in
pop
xorb
mov
or
mov
out
imul
pop
sbb
sub
fadds
xchg
or
scas
pop
es
jl
cltd
into
sub
mov
loopne
and
js
fwait
xchg
adc
cmp
lea
pop
pushf
loop
and
cmp
xorl
inc
aas
popf
lahf
popa
js
add
pop
in
cmp
pushf
scas
test
adc
jge
mov
into
pusha
in
xchg
fmulp
fidivrl
popf
int
or
inc
mov
add
push
rolb
push
push
stc
icebp
xchg
cld
scas
cmp
cmp
sahf
adc
mov
mov
clc
in
xchg
fdivrp
flds
xchg
repz
inc
sub
xorb
lods
add
mov
push
dec
sub
lods
popf
push
adc
sti
push
push
xchg
add
xor
fsubrl
cli
pop
jno
lods
pushf
aad
sarl
xchg
sbb
fdivs
loopne
gs
lret
fcomps
sbb
cmpsl
cmp
inc
jno
ljmp
dec
mov
jnp
or
out
test
ret
stos
and
test
mov
inc
test
dec
jne
fwait
dec
out
loop
mov
mov
inc
push
cli
mov
push
dec
sbb
mov
mov
les
aaa
and
xchg
sub
pop
push
cmp
mov
xchg
jp
mov
popf
mov
adc
loop
fdivrs
iret
loope
sbb
and
pop
and
clc
outsl
cltd
push
xor
push
push
jecxz
inc
cmc
jns
xchg
icebp
gs
test
xor
push
lock
ljmp
cmpsb
jae
adc
popf
jmp
inc
jmp
andl
fstl
lods
mov
add
loop
sub
sti
arpl
dec
adc
sarb
test
inc
push
xor
lret
scas
or
div
dec
xor
fcomps
movsb
push
jmp
lfs
add
mov
nop
cmp
in
repz
adc
or
aad
push
push
adc
cwtl
add
aam
xor
mov
test
out
fidivrs
cmpsb
inc
out
je
ret
push
ljmp
aas
dec
pusha
das
cmp
mov
xchg
sbb
sarl
das
or
iret
cmc
ds
pop
pusha
jae
std
xchg
jnp
push
lret
or
lcall
or
pop
hlt
dec
orl
dec
sti
cs
jne
sti
sbb
push
hlt
stos
lret
repz
sbbl
inc
adc
mov
and
aaa
jnp
stos
mov
bsf
filds
repnz
shrl
adc
fildl
sub
jo
imul
dec
jg
pop
push
aam
dec
add
dec
or
orb
cli
and
lret
test
cmc
mov
dec
cmp
pop
or
jo
or
mov
mov
and
cmpb
push
iret
jno
sbb
sbb
cs
in
dec
add
ss
pop
push
pop
add
mov
enter
or
adc
and
stc
mov
ja
mov
nop
fnstsw
xlat
jbe
sbb
repz
outsl
push
lret
inc
jg
push
sti
ljmp
pop
je
stos
inc
lods
xchg
sahf
jg
mov
jecxz
xchg
in
xlat
shrb
mov
mov
fisttpl
and
lods
fistpl
and
inc
add
add
push
cmp
gs
inc
xor
aas
stos
imull
rcrb
mov
and
xchg
jne
das
faddl
sub
jae
adc
sub
sub
lret
mov
jp
jge
mov
xor
push
fcomp
insl
mov
pushf
sbb
dec
push
jl
icebp
cwtl
inc
aam
xlat
add
insl
shlb
addl
adc
mov
pop
outsl
popf
fucomip
xlat
int3
xchg
dec
sub
cmp
sub
fsubs
xor
roll
cmp
arpl
pop
cmpsb
push
xchg
mov
mov
adc
je
in
rcr
or
add
sbb
mov
push
mov
jecxz
gs
stos
in
rorb
pop
sub
mov
add
fsubl
add
mov
pop
imul
cli
mov
cltd
fwait
sbbb
je
bound
pushl
ds
mov
in
ret
in
add
xor
cmp
dec
into
pop
dec
outsb
lcall
push
pop
jl
inc
sbb
jmp
push
je
or
aam
sub
out
out
xchg
sub
insl
push
adc
movsl
ljmp
sbbb
insb
push
sbb
pop
pop
mov
push
test
cmc
xchg
out
fldl
cmp
lret
sub
incb
dec
or
push
jge
jmp
jle
mov
repnz
xor
mov
xor
xor
cmc
or
sub
jbe
xchg
fs
mov
xchg
ret
or
fstpl
iret
adc
xor
or
inc
cs
add
add
lock
fisubs
inc
mov
mov
adc
sub
xchg
dec
das
pop
inc
xchg
push
bound
cs
fisttpl
jp
mov
mov
adc
flds
xchg
and
in
pushf
addr16
aaa
in
cmp
xchg
jae
loope
xchg
xchg
sbb
cli
inc
out
or
clc
sbb
push
add
pushf
aam
cmp
cmp
jge
ja
inc
lods
adc
hlt
push
in
data16
aas
or
ret
add
outsb
pop
scas
int3
cwtl
push
dec
xchg
inc
stos
push
out
les
in
or
lcall
jbe
dec
imul
xchg
jge
mov
push
xchg
pop
aam
push
fisubrs
fwait
sub
xchg
jb
fldcw
movsb
movl
sub
outsb
movsb
sub
jb
repz
shlb
frstor
xor
xor
mov
std
js
mov
das
add
dec
mov
in
inc
mov
in
sub
insb
andb
xlat
sbb
adc
lods
out
jns
mov
aas
cmp
test
mov
inc
addr16
nop
nop
test
jl
pushf
inc
push
jmp
stos
push
push
add
shrl
cmp
ja
cmp
sbb
xchg
outsb
push
and
dec
test
mov
sub
mov
out
shrb
mov
push
ret
adc
mov
push
mov
pusha
imul
sbb
hlt
mov
xor
lock
ror
hlt
mov
jmp
insb
fst
les
xor
xor
pop
pushf
mov
sub
xchg
mov
inc
jbe
daa
shll
aad
shlb
mov
fnstenv
sub
jae
cmpsl
lret
in
adc
fnsave
push
insb
sbb
jne
mov
pop
fisubrl
ja
adc
mov
cmp
ret
aam
outsl
fisubrs
pop
add
fldenv
pushf
mov
out
mov
jmp
cmp
test
test
push
pop
or
xor
xchg
lcall
jp
es
dec
and
addr16
mov
std
enter
and
pop
jb
stc
jl
outsl
xor
sub
out
sbb
xchg
mov
iret
sub
fsubrl
insb
ljmp
jae,pt
aad
sub
scas
cmp
fucom
outsb
inc
faddl
clc
mov
repz
and
pop
and
movsl
sub
pop
shr
or
and
xchg
leave
lret
iret
add
lds
push
sub
mov
push
inc
lds
mov
pushf
das
mov
jno
out
cmp
test
enter
xchg
imul
loopne
adc
loop
fstl
pop
loopne
add
shl
andb
lcall
push
adc
ror
mov
add
js
lds
stc
or
jae
lret
out
xorl
lock
andl
push
adc
jne
outsb
js
aad
scas
sbbl
pop
aas
inc
jl
sub
test
mov
jle
adc
xor
mov
add
std
xchg
mov
mov
loop
pushf
lock
loopne
popf
jl
cmp
sbb
pop
mov
mov
shrl
pop
dec
mov
jo
repz
xorl
add
ja
cmc
adc
add
vmload
into
jge
jmp
out
imul
add
or
mov
lcall
movsl
pop
into
and
and
insl
add
ja
dec
push
mov
sub
adc
ljmp
fidivl
insb
cmp
aaa
lea
or
call
sbb
or
add
stc
mov
outsb
pop
dec
xlat
aaa
popa
mov
xchg
bound
cmp
or
xor
xchg
lcall
shl
lds
dec
jge
rorb
stos
pop
mov
xchg
lock
xor
clc
push
mov
lcall
scas
mov
ljmp
mov
cmpsb
jecxz
sbb
icebp
mov
inc
lods
jnp
fstps
clc
lock
lret
dec
xchg
adc
cmp
arpl
fs
inc
outsb
stos
out
jns
cmp
lods
adc
sub
inc
add
pop
push
pop
cmc
loop
adc
lods
push
inc
inc
xor
das
dec
push
or
cwtl
add
stos
daa
in
mov
xchg
out
jnp
add
cmp
xchg
mov
mov
nop
pop
adc
adc
popa
cwtl
add
dec
add
jle
aad
xchg
fistpll
out
pushf
xchg
ljmp
pop
pop
inc
cli
xchg
cmp
lcall
cwtl
xchg
jecxz
cmp
inc
mov
mov
pmaxsw
adc
into
test
scas
dec
aaa
fcoms
lock
pop
insl
sbbl
sbb
adc
popf
pop
xchg
and
sbb
sub
adc
loopne
jecxz
sbb
das
xchg
jg
and
scas
xor
sub
stc
test
cmp
clc
notb
stos
outsl
stos
aas
enter
out
loopne
sub
push
add
adc
stc
mov
shrl
xchg
xor
mov
jno
mov
push
mov
adc
add
inc
cmp
add
mov
addr16
push
sbb
or
adc
in
xor
jnp
add
sbb
adc
aaa
add
enter
pop
insb
mov
mov
outsb
insl
lods
fistpl
push
push
mov
dec
lahf
pusha
js
das
jbe
mov
pushf
mov
loop
jne
gs
xchg
lock
in
ret
push
cmp
and
inc
cwtl
add
jecxz
les
shrb
add
enter
mov
pop
push
cld
mov
or
jp
adc
and
stc
pusha
cmpsl
sub
push
jno
imul
push
or
fs
lret
fsts
xchg
cmpsl
lahf
std
int
push
mov
mov
bound
adc
mov
leave
jle
pop
cwtl
fstpl
xchg
hlt
cld
rorl
xor
jbe
mov
shll
repnz
pop
mov
xor
les
call
cli
push
cmc
inc
mov
cmp
pop
inc
gs
movsl
es
insb
shr
jne
cmp
add
push
push
and
mov
inc
mov
dec
xchg
repz
push
cmp
popf
inc
insb
add
fcoml
cmc
popf
jne
stos
xchg
test
test
int
in
cmp
dec
xchg
adc
jo
jle
inc
lds
dec
mov
add
jle
xlat
mov
cmp
jae
pop
rcl
adc
inc
rorl
push
int3
fmull
sbb
mov
in
push
sbb
adc
test
cmp
lods
mov
or
xchg
aad
dec
sub
gs
stos
add
clc
mov
mov
sbb
adc
and
in
in
xchg
sahf
jo
mov
inc
mov
shrb
push
add
sbb
dec
jl
dec
adc
push
jp
inc
and
jnp
or
into
mov
jno
push
cmp
in
dec
jmp
clc
negb
stos
jnp
jle
mov
ret
call
mov
xchg
js
movsb
inc
movsb
dec
sub
jne
aam
lods
add
jae
roll
jae
loopne
push
or
movsl
mov
out
push
loop
xor
xorb
pushl
or
jmp
jle
aam
push
xor
insb
movsl
ss
inc
aam
pop
adc
push
mov
lcall
stc
push
adc
mov
popf
cmc
adc
cs
ret
rcrb
popa
fwait
inc
out
repnz
cmp
jnp
xchg
mov
iret
repz
movsb
inc
mov
imul
mov
mov
add
xor
jns
jl
mov
xchg
shl
jle
cli
movsl
lahf
jb
jp
jg
outsl
pop
pop
imul
repnz
out
movsb
call
je
push
call
mov
sub
cwtl
aaa
mov
xchg
sbb
mov
jne
jmp
add
sbb
jo
sbb
insb
scas
ret
push
sbb
jecxz
sbb
sbb
orb
daa
jecxz
out
push
xchg
in
cs
cmp
mov
add
xor
nop
imul
call
jb
cmp
and
out
stc
nop
push
imul
cld
jecxz
enter
jg
or
in
add
push
sub
inc
sub
lods
pushf
das
mov
or
int3
and
add
mov
lods
adc
and
loopne
out
in
inc
pop
xor
je
sarb
add
lock
xchg
xor
lds
test
or
inc
push
mov
lods
sub
mov
push
mov
mov
out
dec
mov
or
leave
mov
inc
xor
ljmp
inc
jo
int3
push
push
scas
pop
add
mov
fdiv
mul
and
sti
dec
fldcw
cmc
addl
push
test
cmp
inc
mov
pop
sub
mov
popf
fs
dec
mov
je
sub
mov
add
aas
stos
imul
xchg
cltd
pop
jg
in
jg
mov
inc
jno
jbe
inc
mov
inc
xchg
in
cmp
cli
dec
cwtl
out
in
push
out
adc
mov
sti
pop
jnp
mov
into
or
xchg
sbb
fwait
add
cli
xchg
sbb
push
test
push
mov
push
cwtl
cmp
jecxz
fwait
sub
adc
xchg
mov
stos
adc
jnp
daa
ss
add
ja
push
fstpl
jmp
bnd
sarl
jecxz
sbb
loopne
inc
loopne
flds
out
or
imul
mov
sbb
mov
pusha
loop
mov
pop
test
push
and
cmp
add
inc
iret
aas
gs
sbb
imul
bound
push
subl
pop
mov
stc
mov
jb
mov
jl
xchg
jb
imul
insb
push
cmp
test
sbb
fstpt
mov
push
js
outsb
dec
adc
pop
jmp
lcall
arpl
movsl
movsb
and
push
sub
inc
lock
nop
jne
fucomp
dec
sbb
shl
sbb
or
and
xlat
push
cltd
insl
xchg
gs
mov
add
mov
ljmp
lret
fs
fsubr
stos
add
movsb
adc
pop
bnd
xchg
repnz
adcl
adc
dec
pop
mov
push
pop
mov
shll
enter
mov
lods
pop
out
pop
xor
mov
push
es
repz
movsl
ret
popf
xchg
mov
mov
push
mov
inc
push
mov
xor
add
rol
outsb
add
sbb
mov
gs
jno
sub
mov
xchg
and
lahf
dec
lods
fsubs
push
adc
jae
popa
pop
clc
dec
xchg
jb
test
mov
movsl
adc
mov
lods
lahf
jecxz
stc
nop
mov
mov
cld
or
push
sub
pop
and
stc
js
push
mov
cmpsb
adc
loopne
sbbl
xor
xchg
mov
mov
mov
lock
fs
push
das
xor
mov
jo
lret
popa
mov
xchg
sub
sub
adc
gs
repz
cmp
out
or
shr
adc
jb
xchg
inc
popf
adc
cwtl
inc
nop
divb
jp
jno
mov
adcb
xor
lods
mov
xor
ja
cmp
out
aaa
sub
imul
dec
ss
mov
sbb
daa
lret
and
shlb
dec
jg
std
mov
test
cs
jo
push
push
or
jns
xorl
insl
cmp
dec
pop
scas
popf
ja
xor
lods
rorl
cmp
imul
mov
adc
jae
push
enter
xor
add
inc
mov
cs
lea
int3
mov
jae
sub
dec
lea
mov
xchg
inc
addb
ficomps
js
lods
int
lcall
clc
push
cmp
push
cli
fisubrs
mov
leave
mov
xor
jg
rcr
mov
inc
aad
cmp
movsl
sub
out
push
aad
xchg
jns
mov
jbe
test
frstor
shlb
sub
xor
insb
push
or
sbb
inc
aaa
mov
mov
stos
fwait
sbb
pop
adc
test
pop
or
jmp
xlat
push
or
xlat
mov
sar
pmulhw
rorb
or
jbe
jnp
adc
sbb
xchg
inc
or
inc
push
mov
shl
lcall
dec
arpl
sbb
inc
ret
push
sbb
mov
and
push
xor
jns
ds
mov
dec
sarb
scas
lods
xor
cmp
dec
rcr
push
mov
cmp
mov
es
add
lahf
add
stos
lea
test
stc
mov
xor
leave
push
std
add
sub
std
std
adc
std
cmc
mov
test
out
jb
ffree
and
sbb
ss
add
push
inc
mov
js
mov
fld
outsl
js
xor
arpl
lcall
je
call
xchg
jnp
pop
pop
pusha
pop
ljmp
jo,pt
dec
sbb
jnp
mov
out
in
iret
mov
imul
jmp
push
shrb
jno
ja
popa
ret
mov
sarl
cmp
repnz
in
sub
scas
dec
ret
mov
jecxz
sub
jle
std
dec
les
jmp
jge
adc
insb
pop
cmpsl
push
js
and
int3
notb
loope
int3
mov
xchg
aas
dec
std
jl
sbb
adc
lcall
mov
ja
mov
cltd
aas
adc
out
jbe
lds
fnstcw
aad
inc
imul
ret
jbe
outsl
xor
stos
das
lretw
jnp
sahf
sbb
sbb
mov
fsubrs
cmp
in
fstpl
arpl
xchg
nop
insb
scas
sahf
pushf
and
mov
test
inc
or
push
into
cs
cltd
xchg
lret
fdivrs
push
dec
ja
cmpsb
sbb
inc
sub
adc
xlat
adc
add
aam
pop
mov
divl
xchg
addr16
bound
cmp
add
insl
add
inc
mov
jle
pusha
xor
sub
and
mov
pop
inc
pop
cwtl
adc
sub
outsb
aam
outsl
andb
clc
mov
popl
mov
stc
movsb
mov
mov
push
jmp
and
mov
push
jno
int3
or
mov
call
mov
les
mov
mov
pop
and
mov
ror
and
movsl
adcl
loope
insl
int
insb
hlt
sbb
pop
andb
sub
repz
ja
ret
xor
scas
stos
loop
mov
in
enter
adc
cmpsb
and
ret
mov
orps
int3
je
pop
inc
in
xchg
cmc
out
scas
pop
pusha
inc
imulb
aad
sub
int3
dec
ret
and
jl
pop
push
mov
rcll
aam
xchg
hlt
add
jp
cmp
dec
rorl
daa
mov
mov
xchg
sbb
test
push
leave
aaa
push
add
lods
xlat
rcrl
or
gs
test
loop
icebp
testl
cmp
adc
push
inc
add
mov
pop
jbe
mov
scas
mov
and
call
cwtl
arpl
xchg
outsb
adc
test
or
std
push
push
js
divps
inc
push
pop
xchg
xlat
lahf
mov
cld
imul
jbe
pop
sub
jbe
adc
stos
jne
mov
lods
dec
sub
lahf
repnz
add
iret
les
das
shl
jb
sbb
inc
sbb
mov
mov
inc
mov
dec
pop
jl
jp
loopne
mov
xchg
lods
icebp
mov
ja
jp
data16
das
push
mov
push
cld
out
shl
sarb
pusha
xor
cmpsb
outsl
pop
mov
mov
mov
loop
mov
sub
push
xlat
rcr
jg
lds
ds
pop
fmull
movsl
out
cmc
or
popf
mov
sahf
dec
into
popa
movsl
dec
mov
jne
and
ds
push
inc
mov
cmp
inc
out
mov
add
shrl
cmp
cmc
inc
aam
or
ret
aad
test
xor
movsb
mov
test
nop
sub
je
mov
test
pop
mov
lret
sub
repz
jae
call
lock
test
push
xor
dec
mov
lea
mov
mov
stos
push
aas
add
lock
or
orb
jmp
pop
inc
xchg
movb
into
cltd
inc
and
fnstenv
fildll
lods
jge
adc
jg
test
pop
repz
sbb
xor
jnp
ds
enter
mov
inc
mov
xchg
add
push
push
or
out
scas
lds
ficoml
mov
out
push
and
mov
repnz
cs
orl
mov
mov
fbstp
dec
fcmove
mov
mov
lods
jmp
xor
push
sbb
adc
je
shlb
mov
sub
shl
shlb
repz
mov
add
aaa
lods
pop
ret
push
cwtl
inc
aas
pusha
lods
std
mov
ja
lret
std
pop
leave
stos
daa
arpl
dec
push
div
movsl
rol
gs
test
loope
fwait
repnz
hlt
add
daa
xchg
scas
add
dec
insb
stc
add
into
adc
pushf
cltd
lods
and
pop
out
imul
aad
push
imul
mov
aas
insb
pop
mov
dec
push
pushf
sbb
sbb
lds
inc
add
pop
addr16
leave
repz
fdivrp
pop
out
sbb
sti
subb
rclb
mov
mov
sti
lea
ja
push
cmpsl
outsl
mov
clc
mov
xor
jmp
pop
gs
mov
nop
mov
sbb
mov
daa
ja
adc
mov
arpl
fadd
sarl
bound
push
xchg
push
js
rcl
aad
mov
pop
cmp
add
lahf
cmp
stc
jns
in
push
in
das
enter
aaa
out
fsubs
cmp
icebp
cmp
fisttpll
inc
loopne
icebp
xchg
cmpsb
icebp
pop
inc
addr16
mov
pusha
fcompl
dec
ja
ret
jmp
ss
sbb
cltd
js
test
mov
enter
movsb
push
add
test
xchg
xor
push
scas
mov
cmc
out
push
dec
enter
pushf
jge
test
addl
xchg
divb
stc
add
in
outsb
fidivs
int3
jbe
xor
push
iret
mov
pmaxub
test
adc
inc
jb
into
and
cld
popa
xor
dec
adc
repz
jnp
adc
fstps
push
addr16
sbb
out
out
clc
pop
dec
dec
jmp
fcmovu
push
roll
adc
out
rcl
pushl
push
jo
pushf
pop
adc
push
mov
aam
loopne
in
shlb
add
inc
loop
in
mov
xchg
xlat
push
cmp
lds
add
scas
jbe
push
loope
and
or
cltd
sbb
cli
adc
jnp
dec
aaa
inc
cli
cmp
insl
test
mov
xlat
fsubrp
jnp
or
aas
popa
dec
push
or
pop
aad
ret
insl
ja
loopne
mov
out
iret
cmpsb
sbb
stc
fldenv
sti
les
push
pop
push
jae
insl
add
mov
out
pushf
insl
mov
mov
lods
into
sbb
pop
mov
mov
dec
sarb
cwtl
aad
cmp
dec
and
pop
add
outsb
xchg
dec
sahf
cltd
lcall
addr16
fcmovbe
dec
dec
adc
xchg
in
ud1
cmp
pop
rcl
lods
je
push
fnstcw
inc
or
push
popa
ret
pop
adc
push
notb
fsts
stos
out
imul
out
iret
cwtl
add
into
cmp
scas
or
ret
nop
adc
lcall
lahf
test
inc
mov
icebp
pop
pop
push
lock
sbb
jb
andb
cs
into
fdivs
ljmp
mov
sti
sbb
js
xlat
test
xchg
pop
outsl
icebp
jb
inc
mov
ss
push
push
dec
pusha
popa
fwait
ror
sbb
mov
fmull
jle
imul
mov
iret
sub
bound
les
add
rorl
bound
sub
cmpsb
ds
out
cmpsb
sub
adc
jp
xchg
push
insb
addr16
scas
xor
sbb
outsl
pop
test
pop
mov
imul
jbe
and
cmpsb
in
mov
fldt
xchg
mov
pop
add
push
pop
pop
mov
push
cltd
mov
adc
stos
xchg
enter
scas
push
adc
sti
adc
sub
fcmovnb
ja
or
pop
add
in
and
cmp
hlt
and
add
pop
xchg
icebp
pop
jno
fdivs
or
jl
push
aaa
iret
inc
cwtl
mov
mov
jmp
out
cli
lahf
lcall
fiaddl
dec
call
xor
hlt
cmc
pop
lcall
push
std
in
ljmp
adc
test
mov
xor
call
sub
or
popa
fisubrl
addb
pop
push
fidivs
mov
mov
inc
push
fsubl
ret
icebp
push
lret
movsl
adc
mov
fcmovne
xchg
dec
adcb
test
xor
jecxz
scas
pop
repnz
xchg
leave
popa
lahf
daa
jmp
mov
jg
fdivs
cmp
sahf
or
stos
pop
xchg
xor
push
jg
out
mov
stos
add
std
xchg
test
and
jecxz
or
movsb
in
pop
gs
lds
mov
push
sub
push
jmp
cmpsl
pushf
out
push
mov
test
inc
add
jns
adc
in
sbb
pop
enter
xchg
jl
push
jl
bound
fistpl
push
shlb
addr16
into
in
dec
xchg
sbb
data16
popf
add
insb
jno
or
aad
and
cmpsl
ljmp
arpl
repz
out
xchg
cld
fnstsw
pushf
ss
out
test
fs
mov
mov
pusha
subb
mov
fucomi
adc
or
sub
inc
and
lock
mov
mov
add
push
or
aam
xchg
mov
in
jg
test
std
sub
xor
jle
xchg
fstpt
dec
xor
xchg
pop
pop
orl
mov
mov
sbb
test
iret
in
push
or
sbb
test
lds
std
or
add
sbb
ss
insl
gs
jl
test
dec
mov
pusha
fwait
je
dec
ret
push
pop
push
mov
push
mov
mov
mov
or
lahf
cmp
pusha
subb
mov
stos
je
mov
xchg
add
aaa
mov
xchg
push
pop
repnz
xchg
adc
mov
add
rcrl
mov
push
sub
daa
xchg
inc
mov
mov
push
cld
sbb
push
xor
push
or
mov
lret
popf
sub
cmp
mov
loope
xor
xorb
into
xor
movsb
inc
and
cmp
stc
adc
icebp
stos
xchg
mov
mov
cmpsl
mov
mov
int3
adc
addr16
loopne
jp
mov
shr
push
inc
mov
cwtl
fidivrs
jno
repz
and
mov
mov
inc
mov
fistl
and
data16
xor
adc
cmc
es
cmpsl
cs
and
bound
lahf
sti
bound
and
lds
jno
in
jmp
and
xchg
daa
mov
or
mov
movl
lds
lea
jbe
xor
incl
sub
mov
push
call
mov
xchg
xchg
jg
mov
pop
mov
mov
mov
add
sarl
sbb
insb
sar
arpl
dec
add
xor
fprem
cmp
mov
jnp
pop
xor
cwtl
or
icebp
movsl
adc
xor
sbb
jns
mov
jo
mov
pusha
je
jo
loope
xchg
nop
cld
ret
push
lods
and
test
faddl
or
xor
ret
cmp
mov
mov
mov
mov
xchg
aam
dec
in
jl
xchg
push
jg
jno
call
or
loopne
gs
stc
dec
inc
stos
or
cmp
inc
mov
sbb
mov
pop
sbb
mov
ljmp
mov
dec
cmp
mov
imul
imul
xchg
sahf
ret
lods
mov
test
lret
dec
cmpsl
xlat
inc
aas
push
xchg
or
mov
stos
sub
push
arpl
sbb
push
inc
dec
jp
mov
sub
hlt
std
jnp
mov
insb
orb
arpl
and
lods
pushl
movl
test
xchg
xchg
rcr
inc
cmp
push
dec
outsl
and
mov
sub
mov
sarl
jns
pop
mov
pusha
or
cmp
pop
adc
push
aaa
mov
pop
test
mov
mov
les
and
add
pushl
xchg
mov
lret
aam
pop
push
imul
add
loope
out
pop
fstps
mov
jns
push
pop
mov
push
into
shrl
xor
cmc
jl
call
jp
push
repz
loop
mov
cmp
xchg
pop
mov
negb
xor
inc
push
pop
mov
repnz
dec
fstl
mov
sbb
mov
and
insb
mov
je
mov
stos
and
or
fwait
ret
mov
ljmp
cmp
cmp
pop
sbb
add
mov
add
and
movsl
popa
dec
mov
jecxz
push
add
jo
stos
inc
lods
fcmove
pop
sti
mov
or
inc
imul
stc
jmp
push
jmp
mull
mov
mov
push
ljmp
cmpl
rorl
or
in
lods
aad
cmp
sbb
clc
cli
sub
xor
sbb
push
cmpsb
push
lret
inc
out
xorl
int3
out
neg
movl
lods
push
push
rorb
jno
xchg
dec
idiv
fistpll
cmpsb
lods
repz
in
mov
adc
clc
popf
scas
mov
xchg
shll
pop
outsb
sub
mov
cmpsl
xor
and
adc
jnp
hlt
add
mov
pop
mov
xchg
sbb
or
cwtl
cwtl
int
pushf
shl
in
es
and
mov
sub
push
ja
sti
roll
adc
fdivs
into
lret
or
xchg
sbb
mov
shlb
movsb
xchg
sub
imul
scas
mov
fdivrp
jge
ret
mov
xchg
out
xchg
not
cwtl
test
cwtl
jb
int
or
mov
and
in
pop
push
or
lret
cmp
jo
or
sbb
loopne
lds
sub
and
xchg
push
inc
std
xlat
lds
loop
push
mov
dec
sub
mov
push
jb
out
mov
and
and
aam
pusha
mov
and
cmp
insb
mov
add
out
dec
or
leave
lods
sbbl
xchg
pop
add
scas
divl
lret
aas
and
dec
adc
add
mov
das
mov
das
fldl
inc
xchg
or
jnp
fdivl
addr16
dec
jno
mov
popa
sub
xor
scas
cmp
cltd
shr
pushf
mov
mov
inc
in
call
andb
pop
pop
sub
cmp
lahf
sbb
and
sar
ret
inc
mov
pusha
cpuid
pop
push
dec
add
jns
xchg
sti
outsl
sub
push
shl
cmp
or
sbb
and
iret
popa
gs
arpl
jnp
inc
not
fistpll
fsts
mov
xchg
ja
inc
push
mov
pop
cmpsl
cltd
cmpsl
inc
lcall
not
mov
sbb
xchg
into
sbb
rorb
inc
out
pop
push
ret
inc
lods
jmp
scas
data16
js
lahf
adc
mov
loopne
jns
mov
lahf
hlt
sub
inc
pop
and
xor
rol
fcompl
xchg
jo
in
sbb
aas
pop
in
out
ret
cs
lds
mov
jbe
ss
mov
pop
enter
adcl
leave
mov
mov
xchg
or
rcl
mov
pusha
pop
pusha
jnp
cwtl
dec
cmp
cmpsb
aad
push
add
xchg
pop
in
ja
or
or
and
out
pop
loopne
jne
mov
jbe
pop
das
add
cmpsl
mov
ret
in
fwait
and
clc
mov
orl
xchg
repnz
mov
mov
inc
mov
dec
in
addr16
cmp
clc
xchg
xchg
mov
cltd
mov
jo
in
mov
popf
popa
jo
adc
xchg
mov
pop
xor
int3
add
sub
sarl
or
jns
inc
lods
sub
sbb
mov
and
insl
int3
out
and
xor
ljmp
or
bound
jge
mull
xchg
dec
pusha
and
mov
iret
ret
icebp
repz
push
jno
loope
lahf
test
ds
rcll
mov
sti
xor
xchg
add
push
push
lcall
movsl
scas
inc
fcoml
pusha
pop
es
lahf
mov
dec
pop
je
loopne
push
test
fmuls
mov
sbb
in
pop
pop
lock
or
mov
call
jo
adc
push
mov
push
push
push
push
shrb
sahf
insl
lea
gs
xchg
ret
or
dec
daa
push
aam
add
mov
rolb
jno
fldcw
mov
jecxz
jbe
leave
fmuls
jns
dec
adc
fsubrl
mov
cmpsl
sbb
cli
xor
sub
in
inc
jecxz
sbb
sti
cltd
push
sub
and
dec
pop
push
and
push
xchg
enter
movsb
rorb
cmpb
subl
jbe
or
pop
pop
out
out
popf
mov
je
pop
loope
out
mov
xchg
push
mov
mov
mov
mov
mov
mov
mov
lea
jnp
mov
xchg
outsb
cmp
cmovle
or
pop
mov
dec
or
int3
mov
mov
sbb
std
push
test
and
stc
xchg
lods
and
jno
outsl
icebp
xlat
ds
dec
insl
or
adc
aad
and
jmp
push
pop
dec
cmp
lods
inc
fs
add
cltd
rorb
fidivrs
or
pop
xor
test
xchg
ja
mov
stc
inc
push
add
sub
cmp
cmpsl
jns
pop
inc
add
cmpb
scas
call
in
int
rcrb
int3
xchg
pushf
lock
pop
or
mov
xchg
jl
xchg
cmp
mov
out
int3
dec
fidivrs
int3
push
sbb
jp,pn
ss
xor
and
push
add
jno
add
movsb
aam
cmpsl
pop
insl
push
aaa
movsl
nop
iret
inc
divb
lds
testb
lahf
lcall
cmpl
fistpll
pushf
shrl
sub
daa
subl
loop
or
out
out
enter
es
aad
jno
push
xchg
lods
shll
scas
push
arpl
repnz
addr16
in
mov
cmp
orb
pop
dec
ljmp
lods
pop
cmpsl
mov
test
xor
nop
inc
pushf
adc
icebp
leave
insl
sub
daa
pop
ret
inc
mov
clc
jo
cmp
ret
imul
mov
and
and
hlt
scas
add
je
lcall
jnp
sub
or
xor
dec
xor
lock
cli
fidivrl
sbb
xchg
inc
and
mov
es
out
dec
inc
inc
pop
jno
mov
mov
loop
mov
testl
pop
in
inc
int3
out
add
je
dec
mov
rol
jo
inc
jecxz
add
add
mov
sbb
or
dec
pop
jbe
pop
int
xchg
lcall
and
call
in
lcall
inc
ss
nop
adc
jae
out
lea
xlat
jne
lods
pop
dec
pop
and
es
fcomps
repz
fadds
mov
es
fwait
lods
push
cmp
adc
ret
sub
mov
nop
sbb
jmp
xor
cmp
sbb
testb
ret
mov
ja
jae
mov
cmp
pop
imul
dec
sti
les
rclb
sbb
push
or
mov
xor
pop
js
fwait
cmp
pusha
mov
iret
jp
ss
mov
ret
jmp
repz
push
push
out
dec
divb
mov
aas
in
cmp
mov
push
push
test
dec
xlat
movsb
cmp
cmp
adc
call
sub
test
or
mov
and
in
in
mov
gs
mov
sub
stos
jno
mov
aad
cmp
adc
pop
ret
mov
push
into
test
loopne
aas
mov
cwtl
xchg
pop
ss
mov
adc
mov
xchg
add
mov
mov
decb
push
pop
jp
inc
mov
inc
int3
xor
iret
pop
or
hlt
aad
icebp
ret
add
jle
push
lahf
imul
aam
cmp
ljmp
int3
test
les
and
hlt
mov
inc
xchg
outsb
fdivrs
decb
mov
idivl
ljmp
mov
dec
pop
mov
rclb
scas
clc
mov
push
mov
cmpsl
jmp
mov
adc
enter
popl
std
and
testl
out
ret
xchg
dec
test
mov
jo
add
js
aad
orb
jno
pop
gs
cwtl
insb
adc
inc
add
jns
or
xchg
mov
repnz
sar
mov
loopne
fdivp
jno
fidivl
lret
daa
cmpsb
jb
and
pop
icebp
cs
jbe
aad
and
std
ss
repnz
inc
and
xor
pop
lahf
sbb
pusha
out
sbb
mov
ret
ds
and
aaa
mov
mov
dec
or
clc
push
popf
or
je
sbb
mov
ss
mov
xchg
mulb
inc
push
adc
subb
inc
mov
pop
dec
inc
enter
and
cmpsb
xchg
sbb
stc
mov
and
mov
jl
clc
and
sbb
movsl
fdivrs
mov
jge
push
mov
in
fiadds
mov
outsl
mov
adc
push
shrl
cltd
sarl
cmp
push
and
jns
aaa
and
pop
xor
in
imul
jne
fisttpll
cmp
fsubrl
hlt
xchg
je
xchg
test
cwtl
mov
mov
pop
shrl
call
fcmove
jne
or
lcall
cmp
add
pop
inc
mov
repnz
call
pop
jae
int3
or
nop
xor
sbb
sub
adc
pop
cmp
movsl
xor
sub
lcall
shll
nop
int
ret
push
das
mov
adc
or
pop
and
je
addr16
cmp
mov
pop
out
pop
push
rorl
popf
inc
sub
dec
jp
shlb
jle
inc
xor
repz
cmp
ret
add
decb
sbb
mov
loop
add
jnp
adc
xchg
cmp
int
pop
repz
ja
jne
mov
cmc
push
pop
xchg
adc
sbbb
les
js
and
xor
mov
mov
pop
mov
push
or
sahf
test
sahf
outsb
sub
paddusw
sub
inc
test
push
sub
or
fs
mov
mov
sub
adc
aad
cmp
cltd
test
lahf
jp
loop
xchg
jb
cmp
fdivrl
mov
cmc
adc
movsl
add
sub
sub
je
xchg
jns
dec
in
push
adc
jne
loopne
sub
adc
mov
add
aaa
pop
in
pop
mov
mov
pop
sarb
jnp
shl
loopne
or
xchg
icebp
sbb
out
aad
or
mov
int
pop
adc
pop
inc
bound
aaa
das
sub
mov
std
cmpsb
cld
fistpl
jmp
ja
repnz
mov
mov
cmc
js
clc
enter
ret
inc
cmp
add
repz
mov
jnp
pop
dec
mov
push
xchg
andb
loope
mov
xchg
add
jmp
ret
pop
mov
adc
std
and
xor
ds
xchg
xor
push
in
and
jns
and
xchg
jg
xchg
inc
imul
mov
cli
shlb
sub
int3
jb
movsb
and
popa
add
clc
inc
imul
int3
mov
repz
mov
xor
and
cmp
xchg
outsl
call
pop
mov
jmp
push
addps
repz
sbb
jns
lret
inc
xor
cmp
fs
add
inc
mov
cmp
iret
repz
or
mov
out
andl
pop
int
ret
jle
rcrb
push
and
xor
popf
mov
xor
test
test
cmp
pop
insb
out
xor
cmpsb
xchg
inc
dec
or
sub
lods
pop
jb
aaa
int3
movsb
pop
inc
inc
jne
movsb
mov
js
les
cmpsl
inc
adc
push
or
outsb
arpl
push
into
mov
mov
mov
dec
fistpl
fs
xor
sbb
adc
inc
arpl
jnp
xchg
fwait
jle
cmpsl
mov
stos
push
cld
and
ja
subl
lcall
and
ret
fiadds
xor
pop
cmp
repz
in
repz
sahf
repnz
lea
pop
add
fcomps
cmp
stc
add
sub
data16
or
cmpsl
inc
loope
stos
fldl
push
scas
lcall
movsb
jbe
out
neg
sbb
xchg
inc
in
insl
jne
push
inc
out
sub
clc
hlt
sbb
inc
mov
mov
and
xor
cli
lds
mul
cltd
ret
cli
xor
mov
iret
stc
mov
mov
inc
nop
hlt
std
mov
notb
mov
ja
jge
lcall
inc
in
xor
fstl
jo
push
shlb
mov
and
popf
jge
insl
push
bnd
ds
inc
sbb
popf
ljmp
cmp
ret
stc
cmp
loope
ljmp
mov
mov
cmp
add
inc
mov
add
mov
pop
cmp
loopne
sarl
inc
pop
lcall
sbb
in
cli
pop
dec
js
dec
jp
inc
xor
aad
iret
shll
clc
mov
push
sbb
fcomi
push
popf
loopne
idivb
and
add
or
daa
sbb
lea
in
lods
loope
outsb
inc
cmp
jo
popf
outsb
dec
and
cmp
or
cmc
pop
mov
lods
lcall
mov
outsl
push
cld
ja
aad
add
pusha
mov
mov
jne
shlb
cmp
popa
fidivl
es
dec
int3
cmpb
int3
sbb
int
sub
dec
insb
push
fsubr
xchg
packssdw
rclb
inc
adc
xor
in
inc
mov
mov
xchg
or
cmp
or
cmp
icebp
dec
ja
mov
divb
popa
insb
pop
dec
into
pop
in
dec
dec
push
mov
xor
cli
fcmovne
test
aam
mov
loop
add
lret
sub
jns
dec
add
jp
add
mov
fcom
js
dec
sbb
jb
mov
repnz
sub
out
filds
inc
iret
cwtl
sbb
in
lret
fwait
xor
lret
insb
fcmovne
adc
mov
jg
or
lds
insb
push
out
mov
push
pusha
mov
stc
fcoml
lahf
cld
popf
cmp
loop
aaa
adc
loop
ret
enter
pop
mov
and
sub
mov
jl
dec
lcall
stc
cmp
clc
repz
or
jp
hlt
movsb
pop
ret
inc
push
jecxz
js
rclb
rcr
fstps
dec
fstps
cmp
and
push
outsb
lret
out
pop
dec
jp
lds
add
push
sub
jno
xorb
sub
loope
pop
popf
and
ss
jns
mov
roll
pop
xchg
repnz
out
ss
jnp
call
push
into
movsb
mov
ljmp
insl
xchg
push
cli
pop
push
test
fsub
enter
les
fistl
scas
pop
push
dec
mov
adc
or
mov
ret
sub
mov
jno
xor
mov
sub
push
dec
push
les
xchg
in
or
mov
shrl
test
out
pop
scas
cs
stos
out
cmp
scas
inc
cld
rcll
cmp
fwait
xchg
push
dec
mov
adc
cmpsb
mov
ja
jne
ffree
out
push
mov
or
sub
cmp
sub
mov
nop
mov
mov
rclb
pop
clc
repnz
addr16
insb
inc
mov
notl
push
jb
push
jne
xor
or
pushf
cld
lret
cmc
mov
xchg
lods
add
enter
daa
fs
sbb
shrl
add
adc
inc
int3
sahf
out
out
mov
or
fs
shrb
push
aad
add
inc
xor
mov
jmp
dec
cmp
mov
pusha
adc
lahf
mov
sbb
sahf
cmp
mov
sbb
inc
cmp
testl
ror
mov
scas
lret
cmp
stos
mov
mov
jno
jns
call
inc
pop
cmc
fisttps
xor
fsubrs
fnstsw
xlat
mov
in
mov
stc
leave
inc
pop
pop
das
add
ja
rorb
add
mov
filds
cmp
addr16
xchg
lds
inc
aaa
icebp
aaa
pop
enter
fwait
add
rcrl
enter
ja
hlt
leave
out
or
test
dec
stos
testl
outsb
cmp
inc
adc
mov
push
orl
aad
scas
dec
js
sub
dec
cli
add
sar
repnz
lcall
faddl
insb
fdivrl
sbb
loopne
mov
mov
xchg
ds
loopne
sbb
mov
mov
xchg
mov
repz
fidivrl
ds
inc
add
jb
lods
sub
and
jecxz
enter
pop
adc
mov
ljmp
mov
sub
cmpsb
leave
mov
imul
pusha
mov
lahf
or
rcr
pop
neg
inc
outsb
mov
add
cwtl
das
in
pop
sub
push
inc
lea
or
aam
rcrl
lahf
mov
jle
adc
or
mov
fsubs
insl
jo
movl
inc
shrb
inc
jo
add
jp
pushl
pop
mov
fiaddl
ds
aas
lahf
into
or
dec
std
lods
ds
ds
jae
decl
orb
mov
jle
mov
and
inc
je
mov
sbb
xchg
and
jns
pop
and
xchg
lret
sahf
add
jle
dec
mov
ljmp
lcall
xor
je
cltd
stc
test
add
clc
push
cltd
shrl
inc
xor
jb,pt
xor
loopne
insb
aaa
or
repnz
inc
jmp
cld
sti
xchg
shrl
mov
push
sbb
cmp
mov
dec
sbbb
lea
into
js
stos
or
lock
lods
pop
push
pop
push
cmpsl
and
mov
inc
test
jp
out
xor
in
pop
les
hlt
xchg
inc
push
push
inc
fistl
adc
mul
cmp
or
inc
iret
jge
cmc
rclb
mov
adc
cmp
ret
xor
xchg
or
mov
outsb
push
in
int3
insl
dec
orl
fsubp
xchg
insb
test
push
call
sbb
sbb
jge
push
xor
jmp
addl
es
xlat
cmpsb
cmp
cmp
inc
mov
cmpsb
aaa
sub
ds
scas
imul
sub
xor
mov
cmc
inc
stos
ja
das
fmuls
fs
xor
int
and
loop
and
dec
inc
push
pop
movsb
jge
jle,pn
mov
roll
shll
movsl
xchg
stc
bound
mov
inc
mov
jge
jne
xchg
dec
mov
hlt
mov
mov
mov
cmpsl
ret
pop
cmp
jmp
mov
xorb
cs
mov
das
mov
mov
or
ret
outsb
test
loope
inc
dec
test
and
adc
mov
clc
pop
inc
push
faddl
xor
inc
cmp
jo
mov
icebp
outsb
fcompl
lds
cmpsb
sbb
cmp
mov
lds
stc
nop
push
in
jmp
push
mov
popf
and
jnp
hlt
popa
adc
into
or
jne
dec
mov
in
xchg
popf
das
ret
mov
inc
mov
mov
lea
xchg
movsb
iret
xor
cmpb
sbbb
dec
iret
loopne
pop
push
fldcw
mov
out
repz
mov
push
cmp
shlb
xchg
pop
pop
sbb
mov
subb
mov
icebp
stos
push
xor
cld
sub
std
mov
cwtl
jl
aam
and
or
or
add
jb
enter
aad
clc
stc
popf
scas
jnp
popl
fdivs
push
idivl
cmp
push
and
shlb
or
pushf
sbb
mov
dec
test
iret
xchg
pop
sbb
sbb
stos
pop
xor
inc
adc
push
shrb
add
inc
inc
xchg
cmpsl
pop
sub
into
test
push
pop
mov
xchg
xor
sbb
pop
scas
inc
lock
mov
push
mov
int
imul
or
test
adc
mov
mov
sbb
enter
sub
pop
mov
cld
popf
ret
cmp
leave
pop
cmc
scas
sub
insl
jns
pop
in
adc
sbb
pop
xor
sub
sub
jecxz
fucomip
xorl
outsb
pop
add
pop
lds
xacquire
mov
xor
lods
outsb
mov
outsb
pushf
lds
dec
mov
ja
outsb
cmpsb
push
nop
mov
lea
mov
enter
jb
mov
lret
aad
pop
das
mov
stos
xchg
xor
and
jg
clc
push
repnz
loopne
mov
jg
cld
icebp
adc
es
adc
push
ret
loop
push
inc
lock
cmc
sub
sahf
jecxz
dec
inc
pop
cmc
and
in
icebp
jnp
mov
sbbb
sub
fsubrs
push
out
sub
sub
rolb
fisttpll
mov
push
cmp
mov
lcall
sbb
push
cmp
aam
sbb
lds
les
mov
mov
push
in
xor
mov
jnp
shrb
hlt
gs
notb
dec
jecxz
or
dec
cmp
aam
sub
fs
rcll
dec
inc
push
fwait
or
pushf
insl
dec
sub
or
sti
aad
mov
xchg
insb
mov
aas
loop
and
imul
push
jmp
jnp
pop
out
sbb
xchg
inc
mov
push
adc
loopne
loop
pusha
adc
and
mov
xchg
pop
or
ljmp
fs
adc
movsb
pop
or
addr16
xlat
ret
pop
es
sahf
xchg
inc
ljmp
xchg
pusha
cmp
shlb
jmp
movsb
pop
or
mov
fwait
add
and
mov
mov
push
test
hlt
jo
popf
dec
add
xor
jbe
into
gs
jg
loope
lock
add
mov
fs
xor
cmc
cmp
cli
scas
pop
fnstenv
fcompl
mov
mov
loopne
jno
push
cld
push
xor
mov
rcrb
stos
jge
sbb
add
cmpsb
fsubl
insb
sub
xor
out
mov
rorb
mov
jae
mov
mov
mov
andl
jmp
ss
ja
xchg
cmpsl
js
fisubs
cmp
bound
out
mov
testb
xchg
push
push
pop
inc
mov
xchg
cmp
fs
sub
cmp
lds
sub
clc
pop
and
sar
push
xor
lds
cld
inc
adc
shll
push
fiadds
lahf
xor
cmp
add
in
sbb
inc
xor
cmpb
push
mov
inc
outsl
cli
pop
cld
fistpl
mov
loop
mov
add
hlt
je
xor
out
mov
incb
cmc
pop
push
jl
in
jg
or
xchg
nop
sub
fcomps
icebp
dec
add
mov
aad
ret
push
ficomps
mov
pop
push
push
sub
inc
aaa
xchg
or
outsb
testl
pop
out
xlat
rcrl
push
dec
out
mov
pop
pop
push
push
popl
scas
psrlw
mov
rorl
out
mov
jae
ja
rcr
xor
xchg
inc
iret
dec
xchg
movsl
out
pop
mov
cld
test
andb
lock
mov
out
mov
inc
fisttpll
and
stos
pushf
ret
inc
pop
xor
pop
cmp
xchg
sub
imul
out
clc
mov
pop
adc
lahf
inc
inc
daa
adc
xchg
ret
outsl
mov
jo
and
jbe
mov
sbb
cld
mov
jo
mov
mov
push
mov
lahf
daa
lret
leave
jne
scas
pop
jp
sbb
cmp
jg
fmul
jb
add
xchg
mov
adc
push
jle
jecxz
int
incb
jb
daa
sub
bound
dec
in
adc
rclb
fwait
pop
adc
js
pop
iret
xchg
mov
or
adc
inc
xchg
movsl
mov
lret
sbb
jno
sbb
adc
outsb
jne
sahf
dec
hlt
mov
mov
jmp
adc
push
cmp
and
mov
sub
scas
outsl
test
cmp
sbb
int3
fstpl
lret
add
sub
fs
adc
or
sub
sub
add
sbbb
cltd
loope
mov
cmp
xor
stc
fldl
in
fidivs
jge
mov
movsl
sbb
inc
cmp
mov
shlb
in
mov
or
dec
movsl
loop
dec
shrl
xor
mov
ja
mov
repz
stc
mov
xor
mov
cmp
arpl
jge
stos
mov
cld
dec
je
ror
aad
add
or
pop
pop
sbb
inc
iret
push
xor
pop
jecxz
and
jb
jne
in
xchg
dec
jno
pop
push
sbb
xchg
or
pop
inc
jecxz
adcl
dec
xchg
enter
push
mov
and
ss
jb
sbb
gs
pop
test
mov
xor
inc
aad
dec
rolb
test
jle
pushf
loop
rorl
dec
mov
stc
cmp
cwtl
clc
in
movsb
shlb
and
sbb
inc
mov
test
push
inc
nop
cmpsl
insl
adc
je
ror
lret
idivb
lahf
adc
adc
lock
mov
mov
inc
ret
lock
cmp
sysexit
test
mov
psubb
les
sbb
pushf
jo
and
or
stos
lods
aas
aad
mov
dec
push
inc
mov
cmp
pop
mov
sub
xchg
push
jo
jmp
or
adc
cmp
and
addr16
popa
out
jp
lahf
mov
mov
lods
je
push
in
orl
testb
bnd
jge
mulb
jns
stos
jne
xchg
testb
sub
xor
cmp
mov
cmp
add
xchg
test
mov
mov
stc
aas
mov
daa
mov
repnz
xor
fildl
mov
cmpsb
jb
xlat
inc
data16
mov
mov
xchg
cs
out
adc
dec
mov
mov
dec
sub
outsl
je
lret
mov
xchg
mov
je
or
xor
mov
xor
and
outsb
cmp
push
sub
jmp
fsubl
pop
dec
sub
xor
jae
sahf
loope
or
ficompl
rorl
call
insb
orb
sub
enter
shrl
mov
leave
std
pushf
js
sbb
jns
out
push
imul
lea
jo
dec
sbb
push
cmp
jp
jo
fcomi
stos
mov
out
stos
sub
xchg
mov
sbb
and
mov
fdivp
and
adc
dec
pusha
adcb
sti
and
neg
xchg
sub
out
or
test
jns
ficompl
push
inc
repz
mov
inc
cmp
icebp
int3
push
cmpsb
punpcklbw
jecxz
ret
inc
dec
mov
mov
xor
pop
outsl
popf
loop
icebp
sbb
adc
gs
ljmp
lods
mov
mov
inc
mov
sub
xchg
add
xlat
mov
imul
js
shll
lcall
mov
pop
in
addr16
and
pop
and
push
insb
fistl
stos
mov
add
adc
pop
push
xchg
adc
push
mov
lret
mov
lods
test
mov
pop
popa
sbb
mov
mov
push
pop
adc
xchg
ja
jecxz
jnp
dec
rol
mov
fidivrs
flds
je
jecxz
stc
jmp
mov
push
cmp
out
and
dec
or
das
sahf
cmp
jp
jns
leave
xchg
aaa
push
cmp
clc
in
adc
repz
push
jg
push
xlat
mov
mov
rcrb
call
cmpsb
sbb
ljmp
xor
jecxz
ss
imul
and
jp
outsb
lods
push
mov
xor
adc
dec
sarb
jbe
pop
fcomip
add
mov
repnz
aam
dec
adc
inc
push
std
sar
movsl
push
xor
cld
mov
xchg
or
mov
mov
xchg
or
sub
outsb
add
lahf
dec
inc
xchg
clc
stc
cmc
cli
imul
or
xor
daa
out
sbb
dec
scas
jae
and
sbb
sub
and
es
insl
nop
push
inc
push
call
sub
and
add
push
mov
or
push
push
mulb
push
popf
insl
lods
movsl
sbb
add
aas
xchg
inc
addr16
mov
push
cmpsb
adc
cwtl
adc
pop
mov
mov
gs
fbld
mov
stc
aas
cs
popf
arpl
and
mov
sbb
rol
movsb
aaa
dec
push
sub
lcall
in
ljmp
dec
mov
dec
das
jb
roll
loope,pn
sarb
sbb
scas
cmp
fdivrl
xorl
or
adc
dec
shr
xor
or
xorb
imul
add
mov
cli
pop
and
mov
pop
jp
out
rcl
loop
hlt
stos
popa
mov
fucomip
sbb
mov
sbb
in
cs
jmp
fldenv
add
outsb
sbb
jo
mov
mov
andb
mov
adc
cmp
dec
insb
cmp
push
mov
dec
mov
xchg
jp
mov
das
pop
cmpsl
cmpsb
mov
inc
dec
adc
or
adc
inc
loopne
cmpl
scas
inc
add
and
mov
mov
mov
add
pop
insl
mov
rcr
jecxz
pop
cmp
mov
movb
mov
jg
pop
lret
inc
roll
jno
or
pop
ret
bound
addb
scas
fists
mov
pop
fdivrs
in
mov
shrl
cmp
lea
enter
push
sti
xchg
jb
leave
sti
mov
cmp
dec
stos
rcll
cwtl
sub
dec
mov
lahf
sub
xor
pop
inc
stc
push
adcb
ret
gs
mov
sbb
movsl
test
sub
push
fcoms
mov
movsb
ja
dec
push
xchg
cmpsl
pusha
sarb
cmp
mov
js
addr16
adc
jle
mov
xchg
popa
inc
out
idiv
mov
lea
arpl
fsubl
js
test
scas
adc
into
lods
push
pop
dec
cwtl
in
and
out
pop
xchg
xor
pop
jbe
cmp
xlat
out
push
mov
xchg
cs
xchg
and
push
cwtl
jecxz
cltd
imul
sbb
mov
sbb
pop
cmp
jb
lods
clc
cltd
xchg
dec
jle
jge
lods
and
popf
mov
xchg
sahf
shl
jl
cmp
xchg
mov
mov
pop
mov
mulb
aas
adc
aas
push
pop
ret
sub
idivl
stos
mov
jo
into
xchg
inc
sahf
aam
jnp
dec
dec
es
push
ret
adc
jno
mov
xchg
sub
lret
and
sub
mov
pop
out
cmp
mov
movsb
mov
xchg
cmp
mov
aaa
test
pop
test
inc
and
out
jmp
mov
aas
sub
in
jmp
push
movsb
addl
adc
sbb
icebp
js
push
xchg
mov
popa
xchg
ret
pop
js
lcall
scas
aam
ja
jb
movsb
scas
shll
mov
shll
cmc
sarb
cmpb
sbb
xor
stc
stos
outsb
mov
mov
xchg
enter
or
mov
pusha
faddl
fucom
mov
imul
cli
fisubrl
mov
sti
cwtl
insb
clc
xlat
jmp
mov
popa
add
movsl
add
push
stc
inc
xchg
ss
or
push
sub
adc
cmp
popa
xor
daa
sahf
in
mov
mov
into
mov
les
and
fcompl
fisubrl
inc
in
mov
les
inc
xor
and
mov
dec
add
push
jbe
test
and
or
mov
push
or
scas
dec
das
lods
ljmp
adc
sahf
sub
rcl
sub
sahf
jb
notb
push
int
push
add
cmpsb
sbb
lcall
insl
scas
sti
lods
cmp
push
sbb
jb
cmpb
lret
out
dec
mov
pop
dec
mov
dec
xor
sbbb
pushf
adc
lea
dec
scas
pop
adc
jae
mov
pusha
outsb
fbstp
jns
push
mov
movsb
popf
stos
sbb
and
je
sub
test
dec
or
push
mov
pushf
ret
push
cmp
inc
stos
mov
xchg
push
leave
das
adc
jp
cwtl
jmp
push
xor
and
xchg
push
dec
pop
and
data16
shll
ficoms
clc
mov
cmpsl
push
jns
pushf
sub
test
and
es
outsl
rolb
cli
repnz
mov
xchg
dec
lds
pop
add
enter
mov
es
mov
mov
lea
popa
lret
xor
in
inc
fdivs
xor
xchg
or
fsts
outsb
out
leave
lret
mov
test
std
or
popa
fs
xor
cwtl
cwtl
testl
sbb
and
ljmp
sarl
int
adcl
into
mov
cmpsb
popf
xchg
insl
inc
inc
leave
lret
mov
jp
and
xor
mov
test
pminsw
ljmp
mov
insb
cld
dec
push
cld
imul
dec
adc
mov
jp
xor
inc
dec
jmp
ljmp
add
dec
pop
fsts
cmc
test
push
push
cmp
xor
jp
mov
jl
sub
push
pusha
jg
test
and
dec
add
addl
in
mov
add
adc
insl
and
imul
and
inc
iret
xor
cld
aaa
xchg
ficompl
dec
jecxz
je
xchg
stc
lahf
and
mov
fisubl
mov
jg
cmp
cld
jp
mov
test
pop
das
or
push
mov
mov
xchg
jmp
rolb
push
ficomps
inc
scas
push
mov
sbb
ror
nop
lea
das
jp
or
cwtl
or
cltd
inc
pop
adc
sub
int
mov
out
lea
daa
jle
xor
fisttpll
push
test
fstps
loopne
jbe
loopne
or
fwait
mov
das
adc
in
lret
fnsave
xchg
inc
sbb
sub
dec
in
push
add
adc
popa
ret
out
dec
add
dec
repz
or
and
loopne
push
pop
leave
inc
pop
inc
pop
xor
mov
es
scas
jl
xchg
call
inc
jle
stos
ja
lret
lret
mov
mov
mov
es
popf
mov
scas
js
push
cmc
adc
and
in
push
leave
mov
aas
fsubrs
stc
sub
push
mov
stc
cmp
jg
lods
push
lock
cltd
dec
add
icebp
push
or
inc
and
pop
xor
dec
scas
mov
jne
inc
sti
jbe
sub
mov
stos
cli
mov
mov
jb
fstpl
fbld
pop
ss
adc
sub
pop
lods
push
add
ljmp
push
lcall
es
lret
sarl
jmp
add
es
mov
pop
mov
cmpsb
xchg
in
cwtl
out
imul
xchg
aas
dec
out
dec
mov
add
pusha
shrb
dec
mov
insl
xchg
aad
mov
or
iret
out
adc
xor
or
push
mov
xchg
neg
mov
pop
aaa
stc
cmpsb
mov
addl
shlb
pop
stc
fstps
mov
lock
jo
inc
nop
push
xlat
lea
add
pusha
or
mov
and
cltd
jl
in
jmp
add
test
xchg
js
jbe
adc
insl
in
movsl
repz
out
mov
or
sarl
gs
aas
mov
mov
cmc
mov
adc
shr
pop
imul
cmc
lods
inc
loop
and
cld
out
dec
pop
mov
xor
stc
sub
in
jne
inc
pop
mov
xor
dec
cmp
hlt
jne
xorb
pop
lret
addr16
mov
lret
popa
cwtl
mov
les
mov
jbe
pop
and
in
xchg
xchg
adc
mov
movsb
mov
dec
movd
in
push
mov
sbb
sahf
sti
loop
test
fcomi
xchg
sbbl
in
out
push
repz
mov
jle
add
out
push
shrb
xor
dec
push
mov
xchg
loope,pn
push
loop
out
rorb
leave
and
inc
addr16
mov
mov
inc
cmc
in
push
jmp
scas
pop
cwtl
xchg
fiaddl
mov
arpl
call
jno
stc
add
or
es
mov
mov
add
dec
or
or
adc
cmc
xor
inc
or
imul
ja
lcall
inc
xlat
mov
sbb
jle
xor
cltd
sbb
pop
add
pop
iret
xor
fidivrl
ret
gs
mov
in
jae
push
test
fstps
or
push
decb
fimuls
dec
jne
out
test
cmp
scas
sbb
jo
bound
sbb
testl
mov
lods
pop
pop
aam
mov
xor
pop
insl
stos
daa
lret
xchg
xor
adc
mov
jnp
cmpsl
fldl
pop
shrl
and
jecxz
mov
mov
cwtl
fdecstp
gs
fnstsw
sbb
and
es
push
adc
lahf
dec
sbb
mov
sbb
jb
cmp
pop
ret
mov
push
test
mov
das
mov
iret
cmc
jb
adc
gs
incb
cmpsb
movsl
add
adc
arpl
inc
or
inc
dec
sbb
or
lods
cmp
out
add
popa
mov
sbb
aam
cld
xor
lcall
enter
mov
testl
mov
fdiv
sbbl
xchg
sub
xchg
add
subb
and
cmc
lods
dec
ror
std
subb
and
add
repnz
pop
adc
das
nop
negl
sbb
xchg
mov
mov
and
cmpsb
jp
and
test
out
mov
mov
jnp
xchg
inc
mov
mov
stos
or
jb
push
cmp
cld
repz
adc
enter
inc
jns
cmp
cmpsl
out
std
sahf
push
inc
cmp
es
lods
add
in
push
mov
add
repz
xchg
xor
mov
cld
nop
and
ret
lret
inc
pop
fst
aam
lods
pop
addr16
loope
cmp
mov
mov
int
push
push
in
ss
js
aad
or
xchg
jnp
or
mov
test
jmp
orl
daa
imul
popf
lcall
popa
ss
adc
pop
mov
jmp
lods
je
dec
mov
mov
dec
push
icebp
imul
lcall
pop
pop
lea
mov
jge
cmp
test
mov
mov
jne
sub
imul
popf
ljmp
fistl
loopne
inc
cmpb
gs
sub
ret
bound
test
aaa
sbb
jne
add
push
cwtl
stc
imul
hlt
mov
inc
fsts
mov
ss
inc
ds
and
out
jne
mov
daa
push
stc
jbe
add
inc
repnz
rolb
in
sbb
lret
inc
jecxz
pop
mov
ss
push
cmp
mov
lcall
xchg
pop
sbb
jno
mov
mov
push
pop
arpl
cltd
sbb
inc
dec
mov
lret
fsubrl
dec
cmc
xchg
movsb
ja
mov
cmp
sub
cli
sbb
push
cmp
loope
pop
inc
ss
cli
fidivrs
icebp
int
mov
cli
mov
add
xchg
xchg
stos
jecxz
sbb
xor
loopne
lock
imul
dec
stos
add
shr
lods
out
adc
stc
imul
fisubrl
dec
jmp
sbb
dec
cmp
lahf
xchg
inc
inc
in
test
inc
push
fdivrl
sbb
xchg
outsb
mov
shll
sub
imul
push
cmpb
xchg
push
pop
stc
int
mov
jle
inc
sbbb
push
jmp
push
push
int
lods
jo
cmpsb
ljmp
outsl
call
call
out
mov
pop
fistl
fsubl
push
mull
and
add
ja
and
sbb
int3
sub
bound
and
xor
in
les
mov
sbb
mov
xchg
add
aam
jg
sub
pushf
aaa
outsl
fdivrp
das
dec
hlt
vpunpckhqdq
mov
sarb
xchg
cs
sub
sbbb
imulb
loopne
jno
or
xchg
xor
gs
push
jne
outsb
mov
jle
sub
jle
mov
mov
push
fists
cwtl
das
icebp
out
cmpsl
lods
pop
xor
add
daa
push
jp
push
cmc
ss
adc
mov
dec
cmp
jl
sarb
rorb
loop
push
test
dec
popa
out
testl
loopne
adc
fidivrs
mov
mov
loopne
jmp
jb
or
mov
xchg
push
test
mov
jecxz
pop
fldcw
inc
repz
test
lret
push
or
testl
das
loopne
and
jo
jge
lods
inc
adc
scas
repnz
je
lods
adc
cltd
mov
push
sbb
call
fdivr
mov
inc
nop
pop
subb
mov
xlat
lods
call
cmp
xchg
adc
mov
stos
sbb
scas
mov
ret
and
mov
cmc
cmp
mov
push
pop
add
sub
pop
or
ss
and
ja
test
mov
xchg
fcoml
cmp
addr16
push
pop
repz
jnp
gs
mov
incl
out
pop
hlt
xchg
stos
sbb
mov
inc
sbb
xor
mov
mov
iret
mov
sub
stos
push
add
call
cmp
jp
dec
std
jb
testb
daa
push
shll
jb
push
rorl
pop
sbb
fwait
mov
int
mov
fistpl
xchg
fnstenv
add
fs
sub
movsl
push
testl
cmc
and
jbe
nop
in
filds
push
adc
and
mov
cmp
push
pop
mov
sub
out
scas
sbb
adc
rcrb
scas
scas
cld
push
arpl
xlat
aad
add
xchg
inc
inc
fs
ss
push
mov
insl
add
cwtl
fsubp
repz
jae
out
pop
rcll
clc
mov
sbb
push
fs
fadds
dec
inc
jnp
xor
iret
mov
jg
xchg
imul
jae
ss
dec
jnp
sbb
add
nop
jbe
mov
pop
addb
movd
addr16
js
sti
insb
pop
test
out
fisttpll
repz
mov
add
xchg
xor
jne
fxtract
mov
push
push
lock
iret
jecxz
ljmp
lods
pushf
out
pop
xor
popa
mov
lods
mov
andb
push
stos
pop
arpl
or
cmpsb
ljmp
lods
xor
ror
mov
jl
add
shl
cwtl
push
bound
stos
push
out
loopne
xchg
sub
rolb
sahf
bound
les
jecxz
loope
and
cmp
mov
stos
ljmp
xchg
sub
test
aaa
add
pop
mov
aaa
push
cmpsl
or
stos
in
aam
add
jl
fmull
scas
fmul
test
ficomps
test
xorb
mov
ja
flds
out
scas
pop
arpl
inc
xlat
mov
sub
pop
testl
mov
mov
adc
xor
out
add
or
data16
out
add
xchg
sub
inc
jl
dec
fisubl
call
stos
fcompp
cmp
pop
pushaw
mov
lock
mov
sub
add
fs
xchg
push
mov
xchg
dec
lods
pop
inc
ja
aam
outsl
nop
jb
mov
dec
and
sbb
ljmp
rorb
xor
leave
out
adc
mov
push
call
mov
or
mov
and
pusha
pop
jne
add
enter
sahf
xchg
setnp
fs
sar
cmp
loope
lea
and
outsl
and
mov
inc
les
mov
pop
mov
scas
mov
cmp
cmp
push
mov
repz
int
jb
icebp
sub
int
and
ljmp
or
fcompl
outsl
les
imull
pushf
scas
or
in
pop
xchg
mov
or
mov
mov
ret
push
push
push
je
fnstsw
push
and
lahf
scas
dec
subb
leave
cmpsl
sub
and
gs
addr16
mov
loope
mov
xor
add
add
cld
mov
fbstp
loop
sbbl
hlt
pop
fwait
pop
test
loopne
dec
mov
cmpsb
push
xchg
sub
inc
xchg
cmp
pop
shl
push
icebp
push
fucomp
scas
sbb
dec
mov
mov
loop
dec
push
mov
ret
mov
iret
cmp
adc
fstpt
add
shr
lahf
mov
decl
xor
clc
imul
arpl
lods
js
repz
cmpsb
and
orl
int3
xor
mov
nop
jl
sbb
mov
sub
xchg
insb
pop
add
scas
inc
and
frstor
jae
enter
jmp
fisttpll
push
in
nop
inc
sbb
nopl
jecxz
mov
fwait
dec
add
cmovl
xchg
jae
std
sub
xchg
cwtl
ljmp
outsb
or
repz
pop
dec
ss
pop
insl
inc
lods
cmpl
stos
cltd
add
mov
jbe
mov
fwait
dec
add
xor
inc
or
jge
sbb
dec
xchg
sub
push
cmp
cmc
or
fimuls
iret
lret
mov
jnp
and
mov
sub
push
orl
xchg
roll
mov
xchg
sub
bound
dec
pop
negb
bound
test
jmp
cmpsb
out
aaa
aaa
or
xchg
stos
push
je
ljmp
or
gs
loope
mov
inc
scas
jmp
testl
lods
cmp
popa
fs
sub
and
daa
xchg
mov
jp
clc
daa
adc
xchg
ret
cli
enter
jae
out
nop
or
push
subl
push
js
push
xchg
and
push
sub
outsb
or
lods
sbb
cmp
mov
xor
shrl
cmp
xor
cmp
stos
jmp
pushf
xor
fsub
mov
cs
and
xchg
fisttpll
sub
and
inc
xchg
or
mov
lods
mov
ror
mov
mov
mov
xchg
inc
dec
push
or
adc
xor
push
lods
and
std
dec
fisttpl
das
jg
iret
imul
inc
int3
lods
pop
or
pop
mov
icebp
xor
aam
jno
arpl
xchg
dec
leave
out
fucomip
jno
jbe
mov
dec
fiaddl
mov
mov
xor
jo
in
or
les
xchg
adc
sbb
sub
in
mov
in
fldenv
test
mov
test
int
ljmp
inc
inc
loop
xchg
and
and
push
jmp
decb
hlt
testb
imulb
mov
mov
dec
test
sarb
stc
stos
insb
add
push
gs
into
daa
adc
cmp
mov
nop
movl
ja
mov
mov
aam
or
or
mov
mov
xor
std
sbb
cmp
into
cltd
inc
das
lds
insl
xor
xchg
iret
dec
dec
ss
imul
jecxz
lea
test
les
insb
jecxz
arpl
nop
push
push
inc
mov
xor
pop
push
out
stos
mov
mov
ret
inc
adc
xchg
and
cld
sub
std
gs
shll
xchg
and
je
jle
jne
adc
ficoml
popa
xchg
cmp
or
mov
sbb
xor
fadd
leave
or
jbe
insl
xchg
sbb
mov
in
pusha
xor
and
jns
pushf
jp
mov
test
ljmp
mov
idivl
xchg
mov
dec
or
and
pusha
push
mov
dec
ret
orl
sbb
incl
xchg
nop
sbb
sarb
xor
mov
addr16
jge
shlb
inc
jle
mov
mov
xchg
aam
aas
popl
jns
pop
cmc
mov
dec
xor
jg
dec
in
jno
test
ja
fwait
cmpsl
xchg
and
sub
cmp
insl
sbb
push
addl
call
ret
jge
mov
fistl
bsf
call
sub
dec
jmp
out
inc
mov
adc
lret
lock
stos
and
divb
push
jne
fbld
jmp
sti
mov
mov
faddl
dec
jo
xchg
in
sub
std
jns
xchg
aaa
cli
and
jbe
or
lahf
cltd
int
xchg
or
mov
loop
cmpsb
mov
jno
adc
jge
adc
pop
dec
aaa
sub
mov
mov
idivb
and
xchg
xchg
jo
lock
inc
inc
repnz
xor
jmp
fs
fldenv
sbb
sbb
jp
subb
add
sbb
sarl
or
pushf
lcall
mov
in
fsts
ds
mov
ret
mov
nop
and
xchg
jecxz
lret
jnp
repnz
int3
add
lahf
inc
sbb
adc
jnp
mov
fidivs
adc
shrb
jne
ret
in
js
jns
pusha
inc
les
xchg
sub
mov
aas
push
int3
mov
sbb
out
lahf
arpl
push
int
jge
xchg
mov
insb
cmp
xchg
cmpsl
inc
hlt
jle
or
ss
xchg
ds
cmp
enter
fsubl
mov
addr16
add
sbbb
jne
mov
cmp
aam
fsubrs
pop
std
shr
ror
adc
add
xchg
popf
xchg
cwtl
addb
loop
sahf
xor
sarb
cld
xchg
sahf
jnp
jp
and
xchg
mov
nop
push
jle
inc
mov
loopne
fcompl
mov
xor
and
sub
cmc
sbb
mov
aam
mov
test
sahf
dec
test
pop
mov
aam
aaa
clc
nop
xor
aaa
jo
pop
mov
jge
insb
xchg
push
pop
inc
pop
jmp
inc
insl
lret
cli
mov
shll
pusha
adc
mov
xlat
push
fidivrl
sub
out
add
cltd
and
sub
in
outsl
sub
lock
gs
mov
enter
aas
scas
sbb
xor
rcrb
inc
pop
inc
cmp
sbb
popf
pop
mov
fistl
push
push
pop
inc
or
daa
cmp
test
jge
xchg
lods
aas
mov
lods
mov
lods
mov
sti
enter
pop
scas
mov
inc
stos
xchg
dec
out
mov
cltd
gs
scas
arpl
or
inc
sub
repz
rcl
pushf
and
and
jnp
inc
test
or
sub
add
nop
pop
data16
jl
push
sbb
std
daa
xchg
add
pop
ret
inc
cmpsb
jns
pop
out
jne
xor
xchg
mov
sbb
mov
cmp
mov
pop
je
inc
inc
sbb
aas
push
inc
ret
push
push
dec
fcmovb
test
inc
fbstp
inc
loope
xchg
xchg
mov
xchg
push
mov
cmpb
arpl
jmp
scas
inc
pop
outsb
sub
pop
nop
xor
xlat
insl
pop
stos
jo
mov
stos
mov
in
adc
push
cmc
cmp
cmp
adcl
std
and
mov
push
mov
mov
pop
repz
xchg
in
mov
jo
jp
and
lea
cmovbe
cwtl
adc
xor
mov
rcrb
js
lock
xor
jnp
pop
out
inc
mov
mov
xchg
or
stc
cli
daa
inc
icebp
lods
mov
add
jae
push
aaa
jp
call
jae
lock
jle
inc
je
jmp
mov
outsl
mov
scas
daa
lock
mov
inc
imul
fbstp
push
cmp
add
stc
enter
dec
push
lret
iret
cld
push
push
pusha
xchg
and
and
jg
hlt
and
and
cmp
sbb
loop
in
jne
mov
cwtl
daa
nop
fmuls
rep
xchg
cltd
scas
push
js
mov
enter
aaa
mov
mov
js
mov
cmp
les
xor
jmp
push
mov
ret
or
push
andb
popa
mov
addr16
std
mov
addb
sbb
popa
repnz
inc
adc
mov
xchg
popf
sahf
push
out
rorb
xchg
xor
cmpsb
arpl
lds
movsl
stc
adc
data16
mov
inc
mov
loopne
ret
xchg
mov
lods
into
imul
sub
mov
push
aas
xchg
insl
cmp
test
mov
rcll
test
sbb
negl
popa
push
fwait
in
movsl
push
jg
sahf
out
sbb
ret
rcr
xchg
gs
bound
and
and
cmpsl
xor
das
xchg
jg
pop
jo
in
mov
mov
pushf
xchg
or
inc
jb
xchg
leave
das
cs
stc
mov
cwtl
and
adc
inc
out
pusha
loop
sbb
cli
mov
and
aam
mov
sbb
negl
sarl
ret
aam
pop
sbb
movsb
pop
push
pop
xor
cli
xlat
pop
jno
enter
repnz
cmpsb
jp
pop
xor
fiaddl
xor
cmp
insb
mov
cmp
sahf
leave
inc
mov
mov
mov
jmp
in
xchg
clc
dec
cli
popf
pop
in
in
dec
xor
jae
std
testl
jl
xchg
data16
push
adc
add
or
jp
movsb
fdivl
mov
insl
dec
cmp
xor
xor
add
sub
sbb
dec
inc
aam
popl
lock
imul
sub
cli
adc
xor
pusha
jbe
xlat
je
xlat
xor
jle
in
mov
daa
insb
test
xchg
rcl
movsl
dec
jecxz
dec
hlt
jo
std
stc
mov
cmp
je
mov
lahf
pushf
push
lret
fistpll
or
mov
mov
addl
clc
ljmp
xchg
lret
or
push
fidivrs
pop
std
fs
pop
mov
mov
outsl
scas
scas
sub
sub
and
imul
and
sub
in
push
cmpsb
and
and
sarb
inc
cmp
jae
mov
mov
xchg
ror
push
cld
jl
cmp
pop
mov
popf
mov
or
movsb
push
xchg
lock
mov
subl
pop
add
and
out
fmull
decl
xchg
popf
scas
mov
mov
pop
lret
aas
cs
cli
xchg
insl
push
adc
sbb
int
pop
shll
pop
jl
movsl
fiadds
pop
ret
popf
xchg
ret
jge
jge
cmp
sti
div
ljmp
mov
fmuls
push
lahf
sbb
shll
ss
sub
xchg
jb
nop
and
test
stc
inc
cld
dec
scas
xor
pop
dec
pop
sahf
iret
repnz
in
add
adc
xchg
sbb
adc
loopne
aad
or
sbbl
hlt
and
mov
stos
fs
pop
dec
das
lds
mov
das
fistps
push
sbb
imul
xor
xor
stos
adc
cmpsw
push
lds
mov
shrb
fstps
jae
add
mov
sbb
lds
xchg
xchg
or
push
xchg
mov
cltd
push
js
jbe
sbb
push
imul
cmp
ds
dec
bswap
sbb
mov
push
fs
jecxz
adc
add
pop
shl
pop
xor
int3
inc
mov
mov
in
lock
jmp
pop
incb
nop
push
roll
xchg
call
cmp
xchg
and
fmuls
push
bound
inc
adc
aaa
gs
jo
loop
cld
xor
xor
test
hlt
dec
out
xchg
inc
cmp
inc
rcrl
add
jne
insl
scas
mov
and
mov
int3
ss
sbb
mov
aaa
mov
test
sbbb
adc
dec
pop
push
pusha
rcll
push
aam
adc
or
outsb
lock
push
xchg
xchg
pop
xchg
mov
pop
in
and
jns
push
daa
adc
enter
out
mov
cmp
in
xlat
repz
mov
cmc
daa
roll
xchg
stc
ret
cmp
add
lret
je
pusha
sub
push
inc
or
pop
sti
xchg
pop
push
sarb
test
xchg
sbb
pop
lahf
js
je
testb
xlat
dec
and
lret
scas
cli
std
inc
loope
mov
sarb
popf
or
mov
loopne
lds
ss
sbb
and
cmp
js
stc
scas
jbe
jno
inc
push
add
jns
in
cli
js
push
inc
insb
xchg
lods
out
dec
mov
sbb
sbb
push
cmpsl
mov
iret
aad
jbe
xchg
sti
and
dec
jnp
divl
rol
dec
xor
mov
rcr
jb
lret
pusha
ret
test
inc
jl
push
and
fsubrl
inc
call
xchg
add
sub
sarb
pop
f2xm1
xor
ret
mov
out
rcl
mov
shrl
mov
push
cmp
mov
xchg
cltd
das
push
push
xchg
mov
cld
mov
pusha
cs
stos
lds
push
mov
outsb
fimuls
mov
jge
leave
lret
out
mov
sub
rol
lods
test
sub
repnz
or
std
scas
cmc
add
ljmp
adc
in
push
mov
cld
push
cmpsl
movsl
mov
enter
dec
adc
out
xlat
sbbl
or
mov
sahf
cltd
mov
cmp
or
dec
iret
mov
pop
xchg
daa
push
pop
gs
push
xchg
xor
dec
pop
cmp
mov
adc
ret
push
imul
test
inc
sti
test
mov
jp
lcall
xor
cltd
jae
mov
mov
adc
xor
push
js
push
test
imul
out
daa
imul
push
inc
sub
lds
inc
imulb
sub
jbe
dec
addr16
ret
xchg
pop
dec
lea
xor
pop
das
mov
adc
mov
xchg
jbe
jecxz
sub
ret
jb
add
out
mov
or
adc
pop
in
xchg
sbb
jl
mov
xor
rorl
mov
imul
sub
xchg
lret
add
pop
ja
cmp
addb
dec
sbb
mov
cmpsl
jg,pt
in
outsb
int3
jp
sub
pushl
cwtl
pop
mov
cmpl
xor
mov
ret
cld
mov
add
and
push
xchg
jp
pop
jl
push
push
pop
repnz
pop
arpl
cmp
cltd
lea
dec
out
mov
xchg
mov
pop
adc
mov
jb
cltd
test
sbb
push
repz
fnstsw
outsl
xor
dec
add
dec
sbb
arpl
sub
ljmp
dec
or
pushf
and
es
cs
cltd
or
mov
mov
cwtl
into
mov
popa
xchg
lock
pop
lret
int
fmull
and
bound
mov
shl
mov
pushw
cld
roll
mov
push
sbb
jbe
cltd
mov
add
sub
insb
push
cli
imul
cli
and
push
popl
jnp
addr16
inc
addl
stc
xchg
fst
adc
jmp
jnp
xor
cmp
gs
ret
mov
lcall
sub
pushf
lods
je
jmp
and
add
pop
or
sub
stc
popa
mov
movsb
mov
mov
call
out
add
hlt
nop
and
xor
out
or
sbb
stos
adc
pop
mov
lods
fincstp
aad
cmpsl
test
adc
stos
lods
pop
in
nop
jmp
dec
sbb
mov
cli
add
xchg
ja
lea
sub
adc
out
xchg
movl
inc
fstps
push
mov
icebp
sub
jo
mov
mov
stos
mov
or
loopne
sbbb
loope
fdivr
loopne
out
pop
es
insl
inc
test
dec
lods
sbb
cmp
pop
std
cmp
pop
cmp
sbb
push
sub
out
rclb
sub
testb
repnz
sub
into
mov
xchg
inc
inc
xlat
cmp
aas
test
and
lcall
push
hlt
das
fnstsw
pop
xor
pop
divb
xchg
inc
outsl
mov
test
or
cmc
add
adc
shrb
jecxz
stos
lcall
lock
jne
mov
add
lret
add
push
pop
repnz
jg
adc
xlat
add
and
pop
ss
ja
int3
fisubrl
push
mov
daa
repnz
jp
inc
pop
pop
int
inc
jle
fs
dec
imul
and
ljmp
jp
push
imul
in
push
out
repz
mov
dec
add
imul
into
iret
jmp
push
xlat
push
mov
push
fisttpl
push
out
adc
mov
sbb
add
pusha
sub
outsl
xchg
cmp
push
sbb
sub
cltd
push
push
aam
jl
sbb
sbb
lock
adc
mov
sub
insl
imul
sub
push
mov
outsl
lods
and
mov
das
shll
push
mov
shll
lahf
fisttpl
mov
js
ret
bound
add
mov
mov
mov
fstps
fnstenv
xor
arpl
pushf
ret
je
inc
ret
cmp
rolb
std
mov
mov
fsub
cmp
dec
pop
fldenv
xlat
das
test
stc
shll
add
fdivs
mov
cli
cmp
cli
lcall
hlt
mov
inc
pop
popl
hlt
xor
fists
pop
dec
or
and
cmc
shrb
lcall
je
bound
cmp
inc
jecxz
es
pusha
add
adc
insb
jle
test
pop
leave
imul
or
pushf
stos
adc
or
stos
in
and
mov
add
popa
add
out
mov
pop
dec
pusha
cmc
pop
pop
cmp
mov
fsts
xor
xchg
mov
xchg
mov
xor
pop
ds
fisubs
repz
fisubs
jae
scas
cld
stc
push
inc
cmpsl
lret
sub
pop
and
inc
fistpl
sbb
xchg
or
cli
pop
and
movhps
nop
loop
mov
jmp
lcall
sub
dec
loop
adc
adc
loope
rcll
mov
adc
jmp
fcmovnb
pop
xchg
xchg
push
or
cmp
addr16
fs
cmp
out
push
ds
add
sbb
mov
mov
repnz
xor
and
fistpl
test
sbb
jb
nop
ds
adc
fcoml
xchg
or
sub
stos
push
add
pop
mov
xor
mov
rorl
mov
cli
pop
clc
jno
inc
fstpl
inc
cmp
mov
fwait
test
push
push
loope
cld
stos
test
inc
aas
insl
int3
in
and
insl
imul
mov
and
xor
fimuls
jle
mov
add
sarl
in
dec
fnstcw
lods
fdivl
cmp
xor
pop
mov
ds
jmp
mov
push
dec
popl
xchg
jg
stos
movsb
dec
add
fsubl
push
mov
and
stc
sub
mov
pop
mov
aam
mov
mov
jnp
mov
pop
in
addr16
adc
in
imul
xchg
sub
int
lret
rsqrtps
xchg
cmp
or
inc
arpl
test
and
lahf
and
jle
daa
out
add
movb
out
pop
dec
cmp
xor
sbbl
lods
mov
jge
cmpl
and
sub
jns
jmp
pop
jg
mov
rorb
lock
test
imul
dec
pop
adc
cs
cwtl
add
jmp
stc
in
pushl
dec
dec
add
sbb
outsl
stos
mov
jge
dec
jmp
sub
jcxz
lds
mov
xor
aas
xchg
pop
ljmp
in
jle,pn
shlb
dec
test
xchg
sub
aaa
push
and
popa
and
mov
or
adc
scas
call
inc
adc
and
mulb
cltd
sbb
dec
imul
insb
out
push
movl
jne
ja
pop
dec
fists
icebp
adc
popf
dec
cmp
fsubl
and
adc
add
mov
aaa
sub
jmp
testb
movsl
test
popf
adc
mov
mov
imul
adc
lret
test
clc
je
or
aad
push
repnz
mov
xchg
fs
dec
push
xchg
les
loop
xchg
dec
cmpsl
jb
and
fwait
mov
inc
das
fs
xor
mov
pop
roll
dec
xor
fidivs
ret
sub
es
jbe
jge
xchg
adc
jnp
rclb
cmp
popf
pop
or
xor
enter
addr16
mov
stc
jno
in
mov
lahf
cs
mov
inc
insl
icebp
nop
xor
out
xchg
inc
pop
add
lahf
push
mov
xchg
or
push
arpl
push
xchg
in
mov
iret
dec
sbb
jbe
xor
ret
shl
adc
push
lret
jo
inc
inc
insb
imul
fiadds
adc
inc
xchg
sub
roll
daa
jb
or
loop
mov
iret
cli
les
out
fsubrs
std
xlat
jle
andl
add
jne
mov
popf
pop
push
dec
fcomi
jns
mov
je
and
lea
inc
push
jle
call
or
xor
jmp
mov
jle
mov
mov
cmc
cmpsb
test
int
xor
pusha
sub
and
ljmp
fucomp
jno
lcall
xchg
cmp
push
xor
push
inc
lahf
mov
mov
dec
push
pop
xchg
push
xchg
dec
add
pushf
arpl
test
sub
pop
dec
push
in
push
test
std
mov
dec
ljmp
mov
cmp
push
adc
cmpsl
fucompp
stos
or
test
pop
hlt
insl
loopne
bound
push
clc
push
xor
sbb
xchg
and
adc
cli
xor
xor
iret
mov
xor
subl
or
xchg
std
sti
movsb
sarb
dec
icebp
pushf
outsb
push
pop
pop
cmp
adc
jo
mov
in
inc
mov
and
aad
icebp
adc
pop
or
cmp
cwtl
cmp
or
arpl
cmp
and
lcall
mov
stos
outsb
pop
xor
adc
mov
sub
fdivp
mov
cmp
faddl
push
lds
jp
outsb
es
mov
loope
sbb
cmc
push
popf
gs
lcall
push
add
cs
mov
mov
jmp
and
lock
nop
and
jmp
adc
sbb
xchg
call
insl
ret
test
dec
iret
push
fsubp
clc
xchg
mov
dec
sbb
push
jge
cmp
lea
js,pn
xor
lods
test
out
sbb
jno
mov
movsl
imul
sahf
test
jb
pop
out
testl
inc
rorl
push
xchg
mov
mov
cmp
out
sub
or
adc
addb
sahf
fists
push
adc
xchg
jbe
ret
mov
int
xchg
add
test
ret
popf
cld
cwtl
cmp
cli
pushf
mov
pop
inc
and
orb
incb
pop
fsubrp
pushf
dec
loope
pop
lds
das
fwait
jge
mov
mov
das
and
xor
mov
sti
inc
inc
dec
ret
inc
mov
in
in
aas
dec
js
movsl
sbb
js
inc
mov
pusha
sbb
pop
fildll
jle
pop
xor
jecxz
mov
xchg
xchg
aas
add
inc
mov
xor
loop
inc
xor
imul
lea
add
add
cmp
jp
cltd
inc
out
lret
aam
adc
rcl
sub
fwait
out
ret
in
cmpsb
sbb
out
popf
mov
sub
in
cmp
mov
push
inc
and
mov
mov
push
scas
shrl
fucom
cmp
ds
jb
mov
jne
sub
jae
insb
mov
stos
iret
in
dec
pop
pop
call
test
cmpsl
cmp
mov
pop
leave
inc
dec
je
pop
aaa
dec
adc
push
and
xor
pop
cmp
or
adc
shl
in
iret
xchg
push
push
fs
arpl
pop
or
cmpsb
or
jmp
lods
loopne
inc
clc
fdivs
jmp
mov
xchg
jge
or
and
cmpsb
xchg
cmp
dec
cmpsb
push
jmp
xchg
out
mov
aas
xor
cmc
leave
mov
jnp
popf
sbb
mov
call
lds
adc
push
jmp
pop
sbb
shl
jnp
pushf
arpl
in
adc
lret
mov
test
pop
loop
stc
inc
pop
ljmp
aas
pop
pushf
nop
mov
and
sbb
fldt
cmc
jecxz
cltd
or
stos
sub
mov
dec
rorl
stc
cs
rcrl
dec
jno
add
xor
adcl
daa
and
cmc
or
cmp
sahf
mov
mov
jmp
jae
pushf
mov
and
push
test
jns
daa
pop
cmp
shr
push
mov
movsl
mov
xchg
mov
or
loopne
je
mov
jge
mov
jnp
fbld
sbb
mov
jg
pushl
addb
sub
out
shll
sahf
in
add
testb
adc
inc
xor
push
jbe
jno
pop
inc
cmp
int
add
mov
loope
push
mov
ljmp
movsl
lods
mov
loope
mov
sub
out
push
sub
xchg
pop
mov
addr16
mov
dec
and
pop
mov
and
adc
jecxz
movsb
mov
movsl
push
mov
cmpsl
cmpb
add
shll
call
subl
cwtl
outsb
sbb
and
push
cmc
xchg
pop
pop
jb
cmp
stc
mov
xlat
in
jge
cmpsl
and
push
jne
scas
pushf
adc
mov
push
mov
cld
sub
call
out
cld
push
cld
std
scas
jnp
and
cli
lock
psubsw
adc
testl
xchg
lret
xorl
mov
dec
ret
ret
sti
sarb
pop
lock
pop
pop
or
jle
adc
sbb
jo
jae
xor
int
or
adc
into
dec
test
add
cmp
fxam
push
aad
mov
neg
in
or
mov
in
mov
jno
scas
adc
sbbb
ret
fstps
testl
shrb
inc
rorl
and
dec
dec
ret
mov
mov
daa
xchg
andl
mov
scas
in
sti
lret
mov
xchg
test
sysret
dec
or
cmp
loope
cli
cwtl
cmp
mov
mov
mov
jp
jae
mov
sti
sbbb
sub
arpl
lods
mov
aaa
mov
add
sbb
jmp
popa
je
dec
addl
stc
popa
sub
pop
push
inc
cmpsb
cmpsb
cmp
cmpsl
in
loope
inc
ret
sbb
repz
cmpsb
fs
push
aaa
fwait
repz
add
insl
imulb
rcr
or
cmc
gs
xor
rclb
addr16
fcomps
std
js
cld
xor
add
push
hlt
pop
inc
pop
adc
inc
sbb
notl
ret
mov
rcll
or
es
data16
loope
add
je
into
gs
dec
dec
andb
cmp
sub
or
popf
lcall
pushf
xor
out
andl
mov
loop
decl
leave
mov
sbb
popf
rcrb
lret
or
scas
adc
scas
imul
outsb
mov
inc
push
cld
stos
nop
fisubs
ja
ja
adc
and
cltd
es
mov
sub
sub
insl
lods
mov
cld
xor
int
cmp
push
push
jo
jg
push
push
xor
mov
and
or
mov
shll
mov
push
sub
popa
cmp
das
mov
inc
out
iret
push
sbb
xchg
sub
test
enter
mov
adc
fchs
xchg
addr16
mov
mov
subl
lods
inc
pop
mov
push
or
xor
mov
aas
dec
mov
in
sbb
faddl
shrl
jg
push
aad
outsl
jae
push
lods
aam
fnstsw
imul
push
xchg
out
test
pushf
lds
fbld
pop
js
std
repnz
outsl
mov
cld
imul
dec
sub
jne
fnsave
mov
and
jge
jo
adc
mov
int3
negb
sar
insl
xchg
mov
andl
pop
adc
popa
outsl
mov
mov
pop
push
testl
hlt
fstp
in
push
ljmp
pop
inc
test
repnz
xor
jl
push
lcall
xlat
stos
inc
xor
es
adc
xchg
or
loopne
js
cmp
sbb
push
inc
std
sub
out
or
push
mov
add
add
pop
push
mov
adc
dec
imul
dec
add
mov
sub
shl
xchg
adc
add
push
xlat
xchg
shrb
jl
push
nop
lods
xchg
jne
and
ficomps
adc
mov
test
mov
pop
push
cs
idivb
mov
insb
or
fs
xchg
fcoml
or
addr16
or
les
or
or
and
mov
lea
adc
andb
push
data16
stc
mov
lods
and
or
dec
addl
pop
lret
data16
loope
sbb
add
out
xor
scas
inc
stc
adc
pushf
popf
cltd
sbb
or
inc
jecxz
xchg
aas
mov
push
pop
pop
lds
mov
inc
iret
cli
mov
rcll
mov
pop
add
ss
pop
mov
inc
mov
lds
add
iret
jno
scas
xor
je
add
or
cmp
inc
out
sub
in
sub
aam
shll
cwtl
arpl
cltd
cltd
fdivrl
mov
inc
mov
ret
xchg
or
mov
xor
add
sub
cmc
fnstenv
push
mov
or
jae
mov
addr16
jns
xor
and
inc
jmp
add
mov
pop
dec
out
inc
std
loop
loopne
jge
mov
out
sbb
iret
repz
cmp
inc
sbb
std
push
stc
fcomip
pop
dec
cmpsb
ss
push
loop
push
sbb
cmp
into
mov
js
notb
push
sbb
jo
jp
mov
lret
and
push
es
js
call
fiaddl
movsl
call
mov
daa
sub
jle
sarb
stc
and
mov
mov
in
cmp
testl
pop
clc
subl
sub
lock
je
dec
mov
sub
arpl
out
faddp
sbb
outsl
out
push
call
mov
icebp
sahf
ficoms
negl
nop
mov
outsb
out
pop
js
imulb
or
mov
inc
shr
or
xchg
stc
aaa
repz
pop
loop
out
mov
iret
cmp
cmc
scas
xor
or
xchg
push
adc
or
lret
xchg
shrb
bound
push
adc
xchg
and
ds
mov
rolb
pop
cmpl
cld
push
lahf
jl
dec
int3
mov
lock
arpl
popa
int
std
dec
xchg
sub
cmpsb
test
shrl
out
stos
ss
xchg
cmp
pop
movsb
mov
mov
jmp
cmpsb
adc
jl
ljmp
fistl
sbb
mov
sbb
jns
lods
cs
insb
fcomps
mov
and
out
jo
int3
lock
insb
dec
inc
std
hlt
sbb
adc
mov
dec
jae
jnp
pop
pop
push
test
jp
xor
sarb
nop
push
inc
out
int3
mov
ljmp
movsb
clc
imul
push
add
dec
int3
and
bound
adc
add
cltd
xor
lahf
pop
xor
cmpsb
and
xchg
push
xor
jge
mov
and
jp
cwtl
arpl
push
scas
test
xor
loop
stos
ret
fdivr
mov
jmp
je
leave
mov
fwait
pushf
inc
sbb
push
mov
xchg
scas
mov
inc
ret
aaa
cmp
aas
outsb
int3
pop
cmp
add
imul
pop
fcmove
mov
pushf
arpl
cwtl
loop
push
or
fildll
lods
cli
cli
add
adc
lcall
sbb
mov
lock
sbb
jmp
push
xchg
push
push
or
cmp
jae
ss
mov
in
into
adc
imul
push
ss
jmp
jbe
mov
ja
mov
out
mov
andl
lds
push
ja
mov
mov
out
lock
pop
cltd
inc
mov
cmp
pop
pop
movsb
mulb
adc
add
jge
push
scas
std
out
push
in
jecxz
jb
stos
imul
pop
dec
out
xor
rorl
jnp
movsb
repnz
mov
xlat
std
inc
inc
mov
sbbl
mov
mov
pop
mov
inc
cmp
xchg
push
les
adc
mov
xchg
cli
jl
lods
add
cld
outsb
xchg
ja
shlb
filds
imul
sub
out
loope
test
sahf
cmpb
mov
mov
mov
add
ds
nop
pop
cwtl
sahf
xorb
aad
add
arpl
fsub
sub
xchg
das
mov
dec
mov
inc
ret
popa
ja
or
sub
cmpb
and
or
mov
mov
sub
xchg
popf
push
push
int3
cmp
fidivs
divb
je
pop
orb
and
inc
or
test
sbb
in
out
inc
xchg
xchg
mov
test
mov
dec
jbe
test
cmp
sub
shl
test
cli
and
hlt
testb
xchg
jno
jmp
icebp
loopne
mov
cmp
fstpt
push
je
pop
cmp
fwait
hlt
out
ret
sbb
arpl
inc
fstps
or
pop
popf
pop
sub
pushf
mov
jne
mov
mov
push
out
js
mov
imul
dec
mov
test
sub
jo
dec
mov
mov
repnz
xchg
xor
pop
push
pop
imul
xor
das
adc
fwait
add
xchg
arpl
and
rorb
sub
imul
pop
inc
cmpsb
fwait
pop
stos
lods
loopne
mov
test
xchg
inc
xchg
add
dec
dec
test
test
cmpsl
mov
sub
lods
mov
adc
cltd
movsb
sahf
enter
and
aam
sbbb
push
and
scas
cmc
cs
add
push
in
sbb
cmp
rcll
andl
test
adcl
mov
sub
mov
lods
aaa
mov
jae
fstp
gs
jno
jl
adc
mov
pop
cli
xor
fsubs
repnz
mov
sbb
lods
or
mov
cmpsl
xor
ja
das
cmpsl
mov
aas
dec
jge
movsl
roll
test
mov
push
jge
aaa
sub
mov
mov
lahf
mov
push
outsb
in
mov
sbb
adc
dec
xor
dec
iret
test
gs
je
pop
jno
push
dec
pop
andb
xor
sub
cld
inc
adcl
cmpb
cmc
push
shr
mov
add
sbb
cld
or
int
and
sub
int
iret
adc
in
ljmp
cmp
adc
ret
cmc
mov
adc
rolb
lret
push
fcmovnbe
sbb
faddl
movl
jne
push
not
test
fcomip
leave
pop
movsl
xor
std
jb
rclb
mov
mov
pop
and
mov
cmp
repz
lret
jno
push
jmp
sub
or
push
int3
sub
or
in
out
imul
xchg
pop
mov
and
mov
mov
or
hlt
xchg
data16
inc
stos
test
pushf
clc
jo
stos
ja
ficomps
add
sub
dec
out
push
dec
push
sub
scas
cwtl
or
mov
xor
fdivrs
and
dec
and
fmull
dec
fwait
xchg
mov
adc
leave
out
sub
push
and
sbb
aam
testl
lods
in
push
sbb
mov
popf
inc
iret
jnp
jne
fiadds
mov
xlat
iret
and
popf
enter
inc
xchg
xchg
mov
cwtl
dec
mov
shlb
sbb
mov
and
push
jmp
shlb
out
or
into
cmp
jle
movl
push
call
adc
jle
icebp
mov
jg
push
sti
test
fsubrl
cli
pop
xchg
xchg
inc
mov
push
cmpsl
add
jmp
arpl
testb
fidivl
inc
push
mov
xor
xchg
js
xchg
inc
in
mov
das
mov
cmp
js
movsl
or
aaa
add
jp
jp
and
mov
and
mov
call
aam
fcomip
cs
push
sbb
jne
fisubl
das
pop
movsl
sub
cmp
out
ljmp
push
repnz
jle
sub
clc
dec
jb
inc
inc
lods
mov
xor
sub
cmp
push
mov
cmp
and
loopne
out
dec
or
popa
mov
pop
movsb
es
pop
test
cmpsb
mov
cmp
lret
mov
push
xchg
stos
jbe
xor
cmp
clc
dec
aaa
movsl
sti
imul
cmp
cmp
les
add
pop
mov
out
cmp
bound
std
jle
adc
sub
and
push
sbb
cmpsb
repz
fsubrl
rorb
sub
adc
sbb
data16
in
push
mov
add
inc
or
adc
xlat
xchg
pop
pop
inc
xchg
out
out
loopne
sbbb
ss
clc
dec
leave
iret
cmp
in
add
js
sub
push
movsb
add
add
push
stos
shll
popf
into
mov
pop
imul
push
adc
out
filds
pop
mov
rcll
xchg
xor
test
dec
xor
std
pop
mov
dec
cmp
ficoms
loopne
pop
xchg
je
ljmp
jg
push
push
fsubl
jg
arpl
mov
inc
cmp
ret
loop
sahf
dec
fst
divb
pop
mov
inc
add
jmp
cmp
jns
lds
ret
and
outsb
or
rcrl
fwait
movsb
pop
inc
bound
pop
ljmp
cltd
test
jl
insl
jmp
xor
pop
adc
mov
je
sbb
leave
pop
mov
out
jle,pt
mov
cmp
mov
repz
or
or
add
dec
dec
loope
jae
mov
icebp
or
sbb
ds
mov
repnz
test
scas
pop
cld
test
shrb
rcll
int
adc
popa
cmpsb
xchg
dec
outsb
cwtl
clc
adc
lds
stos
dec
inc
mov
mov
lret
mov
xlat
dec
push
mov
or
repnz
icebp
popf
popa
and
mov
rcll
xor
sub
cmp
sub
mov
cmpsl
pop
aad
or
fs
xor
je
add
cmpsb
inc
push
inc
out
popf
jge
cli
push
push
adc
dec
xchg
pop
fcoml
add
loopne
jno
jge
cld
lcall
push
xlat
lock
push
pop
xchg
mov
fcmovu
mov
aas
scas
push
add
cmp
bound
push
sbb
jo
clc
loopne
call
es
jne
pop
jno
xchg
stos
cmp
iret
fmuls
mov
adc
jmp
adc
pop
dec
int
mov
or
push
dec
cmp
add
lds
adc
mov
mov
mov
push
imul
fnstenv
push
fdivrl
adc
shl
ror
xchg
loopne
fildll
pop
sub
or
pushf
add
test
push
cmp
out
mov
stos
pop
insb
test
push
sub
arpl
inc
pop
sub
call
push
popf
jl
outsb
pop
sbb
mov
leave
out
dec
push
adc
dec
ja
pop
nop
inc
sbb
aam
imul
dec
add
add
push
add
inc
es
xchg
jbe
mov
mov
test
adc
mov
dec
je
push
mov
mov
push
ficomps
insb
inc
jle
lret
sbbb
push
jge
mov
jnp
inc
add
fisttps
fs
push
or
sahf
dec
call
jnp
insl
and
pop
jo
enter
clc
and
popa
in
pushf
ljmp
jmp
test
inc
insb
xor
imul
movb
inc
jge
or
push
mov
dec
jge
ds
repz
jae
popa
inc
or
jmp
icebp
bound
inc
add
pop
lock
into
adc
gs
xor
out
jo
repz
es
jmp
adc
ljmp
sub
rcr
mov
pop
ficomps
lds
jbe
repnz
and
in
mov
xor
rcrl
sub
adc
mov
pop
push
imul
clc
out
cmpb
inc
lds
in
xor
mov
testl
lods
push
imul
and
and
lea
mov
insb
push
adc
mov
xchg
xor
pop
sub
pusha
subl
cmp
dec
mov
mov
cmp
insb
inc
pushf
xchg
dec
cmp
push
add
aaa
orb
out
push
shll
jne
loopne
cmp
daa
push
idivl
and
lret
jge
xchg
sbb
adc
mov
dec
fcmovnb
xchg
out
cmp
xchg
imul
push
sub
push
jbe
sub
adc
shlb
sub
aam
js
sub
in
mov
inc
pop
stos
mov
loope
adc
lea
pop
jl
mov
mov
mov
aam
or
orb
jbe
imul
jmp
loope
inc
inc
add
test
rolb
aad
or
popf
add
mov
aaa
mov
inc
mov
pop
loopne
pop
insb
mov
and
stos
sub
ds
rcr
jb,pt
movsb
bound
out
mov
shll
mov
mov
mov
inc
jb
lcall
dec
jp
mov
cs
adc
cmp
jle
mov
mov
inc
fisubrl
clc
jo
cmp
jae
fmul
int
fwait
ja
dec
adc
jbe
xchg
and
cmp
add
imul
movl
cmp
add
lahf
repnz
push
daa
fldcw
mov
mov
sarb
xchg
dec
arpl
lret
ficomps
xchg
mov
and
cmp
jge
cmp
jnp
or
inc
cmpsb
jmp
pop
scas
xor
mov
cmp
push
je
adc
adc
sti
sahf
add
outsb
das
lods
dec
in
push
mul
or
and
stc
lds
stc
cmpsb
out
add
int
push
mov
lret
popa
mov
sbb
repnz
das
cwtl
add
mov
xor
inc
mov
lret
mov
sub
pop
test
dec
xor
dec
imul
call
js
movsb
lahf
out
jno
pop
mov
pop
into
fstps
jbe
xlat
xchg
in
arpl
sub
out
and
sahf
ret
sahf
mov
xchg
adcb
lret
push
and
cmp
iret
jge
inc
adc
lahf
push
mov
mov
cmp
mov
in
repnz
or
in
cvtpi2ps
out
or
adc
rcrl
push
jno
push
aaa
or
add
ficoml
xor
movsb
adc
mov
xchg
jno
xchg
push
stc
or
jecxz
shl
in
loopne
fnstcw
into
inc
fs
sti
movsb
mov
dec
mov
mov
push
cmp
inc
data16
lcall
enter
fadds
aaa
sbb
push
and
jmp
sub
sbb
out
xor
and
stos
adc
sti
pop
pop
lock
aad
stc
add
inc
in
sbb
nop
test
push
bound
imul
fsubrs
movsl
sbb
adc
lcall
movsl
mov
imul
push
xlat
repnz
loopne
ror
or
pop
andl
ret
nop
nop
nop
nop
push
push
mov
xor
test
push
mov
mov
je
push
push
mov
movl
mov
add
inc
mov
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
lea
push
xor
mov
mov
mov
xor
mov
mov
movl
call
movb
call
test
movb
jne
lea
push
mov
movl
call
lea
push
push
mov
call
mov
mov
mov
jmp
movb
movb
movb
pushl
pop
mov
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
test
jne
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
jbe
mov
lea
push
push
add
push
push
call
add
test
je
mov
push
pushl
mov
push
pop
call
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
cmpw
je
mov
push
push
push
push
mov
call
pushl
pop
call
push
popl
push
call
add
call
xor
mov
pop
ret
decl
insl
add
inc
adc
std
xchg
jge
mov
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
add
repz
fadd
inc
xchg
ret
add
in
xor
sahf
cmc
sbb
arpl
outsl
mov
cmpsl
or
and
and
call
jo
and
stc
xchg
mov
pop
dec
push
push
imul
cwtl
or
repz
ss
or
jmp
testl
xchg
jno
fcoml
dec
dec
push
imul
add
std
leave
repz
cs
sbb
or
mov
jae
data16
out
negl
dec
sbb
arpl
adc
stc
xchg
and
sub
adc
stc
daa
stos
imul
std
add
inc
adc
sbb
ja
add
inc
adc
inc
cmpl
mov
stc
xchg
and
jge
inc
int3
inc
add
stc
xchg
and
jge
add
inc
adc
cld
xchg
and
jge
add
jnp
rolb
adc
jmp
add
adc
inc
add
stc
xchg
and
jge
add
inc
adc
stc
xchg
sarb
jno
push
or
std
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
jne
cmp
stc
xchg
das
add
add
inc
xchg
and
cmp
out
xchg
add
jge
das
mov
xchg
inc
add
icebp
movl
and
jge
add
inc
adc
stc
xchg
and
jge
loope
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
and
jge
add
inc
adc
stc
xchg
das
add
add
inc
adc
pop
pop
or
sub
je
cmc
dec
adc
dec
mov
das
cmc
insb
js
push
insb
mov
inc
into
dec
jge
xor
fisubs
repz
jne
aam
cmp
push
mov
mov
sarl
incb
mov
add
push
mov
pop
lahf
cli
mov
jno
add
ja
test
shl
addr16
add
daa
pusha
push
xchg
mov
add
sbb
mov
mov
mov
insb
into
hlt
cmp
sub
jne
xorb
sti
scas
xchg
arpl
xchg
ljmp
mov
xchg
push
or
dec
aas
pop
sbb
int3
stc
mov
adc
scas
dec
cmpsl
lcall
mov
cmc
jb
cltd
lods
add
adc
hlt
pop
jns
pop
aam
or
adc
sahf
lock
fwait
pop
bound
pop
dec
xchg
roll
jmp
stc
xorb
cmpsl
cmp
add
pop
mov
inc
xchg
pop
dec
dec
add
inc
js
jbe,pn
add
aaa
enter
negb
clc
insl
push
inc
jae
inc
call
mov
pop
dec
enter
sbb
add
ret
dec
xchg
pop
fs
dec
pop
sbb
movsb
dec
dec
je
sahf
sbbl
mov
mov
mov
dec
ss
ja
xchg
fst
das
and
mov
pusha
pop
xchg
sbb
xlat
hlt
lock
dec
add
adcb
out
mov
mov
push
and
popa
add
mov
sbb
and
adcb
mov
nop
scas
add
insl
jns
pop
js
cmp
lea
fstpt
inc
jge
push
out
dec
push
ds
mov
ja
test
into
les
mov
es
or
xchg
push
jno
repz
mov
in
sub
stos
xor
dec
enter
loope
dec
mov
pop
mov
gs
cwtl
lahf
pop
rorb
pop
popf
loope
out
gs
jbe
lds
sbb
popf
dec
cmc
jmp
lods
adc
les
mov
subb
push
fldenv
inc
cmp
fsubr
mov
rolb
sbb
loop
inc
jmp
adc
mov
xor
std
jo
xorb
mov
sbb
mov
push
xor
test
pop
pusha
mov
pushf
pop
mov
jmp
mov
jecxz
jns
gs
or
movsl
aas
jo
ljmp
lret
iret
shll
add
push
lock
ficoms
pop
addr16
in
xchg
pushf
push
nop
sbb
adc
stos
out
add
addb
mov
popa
insl
mov
jecxz
dec
pop
push
xchg
lcall
dec
mov
pop
iret
add
sbb
jmp
fiadds
loope
sub
cmp
sbb
out
outsb
push
and
ret
mov
stc
dec
cmp
adc
dec
cmp
add
xchg
mov
mov
add
je
push
pop
cmc
fidivrl
lods
cmovg
add
jbe
insl
mov
add
call
fidivs
cmc
inc
xchg
pusha
lock
test
fisttps
dec
cmp
aad
push
pop
fsubrl
and
adc
arpl
and
jne
bound
or
fists
and
sahf
test
clc
loopne
cmpsl
push
setp
add
jae
push
lret
xor
push
scas
lret
or
sub
std
mov
lods
jmp
das
icebp
jno
ficoms
push
test
out
sahf
pop
push
ljmp
dec
mov
inc
adc
orb
test
mov
rolb
out
shlb
lret
repz
loopne
test
fnstenv
adc
rcll
lods
aam
sahf
cld
rcll
cmp
ljmp
pop
or
in
add
fsubrl
shll
or
jl
xor
pop
in
add
xlat
pop
add
pop
adc
or
inc
imul
call
cmp
outsl
test
and
pop
jg
jne
imul
sub
adc
aas
loop
pusha
mov
pop
dec
ljmp
cmp
das
pminsw
dec
adcl
pop
or
adc
clc
in
jle
sbb
testl
je
adc
pop
stc
cmpsb
icebp
lahf
dec
rcll
lods
xor
mov
mov
dec
es
pusha
xchg
fidivrs
movsb
pop
jb
mov
ds
mov
cmp
insb
dec
popl
jmp
xor
test
orl
mov
push
mov
push
mov
call
pop
xchg
inc
pop
insl
ret
push
mov
int3
divl
stos
cmp
jb
dec
popa
orb
shl
pop
insb
mov
dec
and
xlat
dec
jp
sbb
inc
jns
sub
fwait
xchg
jb
daa
stos
inc
xor
mov
push
mov
xlat
dec
leave
lods
mov
les
sbb
sarb
mov
jae
sarb
jg
or
in
pop
sti
push
les
andb
les
or
jg
stos
in
mov
inc
iret
push
mov
sbb
cmp
mov
mov
or
adc
pop
lock
aaa
mov
test
cmp
lret
adc
push
jno
addl
adc
pop
add
jl
ljmp
mov
int
push
or
or
cmc
mov
push
fildl
xchg
inc
inc
shrl
dec
jle
lods
jge
fistpll
mov
shl
in
mov
jb
sti
stos
sbb
xor
and
mov
repnz
xlat
fidivrl
sub
fsubrl
adc
push
xchg
cmp
movsb
lcall
jmp
push
in
leave
int3
push
testl
fdivrs
sti
roll
xchg
mov
std
dec
cmp
or
jmp
sub
clc
and
mov
in
mov
icebp
lds
inc
push
gs
loop
jae
sub
cmpb
data16
push
pop
outsl
cwtl
ja
pushf
in
xchg
or
lahf
xor
xchg
out
lret
sub
inc
sbb
clc
xor
inc
sub
lahf
adc
ss
fbstp
inc
add
sbb
loopne
xchg
gs
lret
dec
mov
mov
mov
aad
pop
rcll
dec
mov
test
fisttpll
shlb
mov
movsl
push
imul
xchg
enter
or
sahf
jns
repz
in
lods
dec
jle
mov
iret
addr16
wrmsr
ss
vucomiss
add
add
lea
in
pop
xchg
test
movsb
popa
test
mov
das
enter
lahf
cmpsb
gs
add
in
pop
orl
ret
cmp
test
lahf
dec
movb
sti
dec
movsl
push
push
lcall
test
or
test
ja
or
push
stc
in
fidivl
mov
sti
enter
jbe
dec
popa
cmp
dec
daa
fdivrp
sub
ss
rol
mov
call
push
arpl
pop
dec
mov
jbe
je
cs
jg
push
sub
repnz
mov
inc
sbbb
xchg
add
in
or
sbb
aam
push
mov
divl
mov
or
icebp
ret
and
shrl
and
stc
notl
push
mov
data16
mov
stos
lds
stos
pop
fwait
inc
pop
lock
lods
testb
addb
ret
pushl
call
in
arpl
in
inc
pop
lds
mov
roll
and
and
ja
add
stc
pusha
jbe
lods
lea
icebp
mov
aaa
fcoms
mov
cmp
roll
add
fistpll
mov
xchg
mov
adc
insb
mov
mov
lea
and
iret
xchg
ja
leave
insb
xchg
jo
or
pusha
sub
fs
xchg
jae
int3
scas
cmc
test
negl
out
imul
ret
lock
test
lahf
sbb
sbb
and
shll
mov
lcall
xchg
sub
sti
and
xchg
popa
clc
pop
xor
push
notl
and
aam
jle
and
paddusb
lahf
or
cld
push
rcl
mov
jmp
popf
xchg
enter
pop
icebp
sahf
add
mov
xor
fdivrl
pop
cltd
mov
sbb
add
pop
add
stos
adc
int
pop
pop
lds
test
enter
dec
inc
xchg
sub
push
les
xchg
sbbb
popl
inc
xchg
loopne
pop
aaa
stos
stos
imul
mov
ja
gs
test
mov
lods
or
scas
xchg
mov
mov
subl
xor
push
cmp
cmp
pop
and
in
les
cmp
sub
push
add
gs
loopne
inc
push
adc
into
cmp
mov
jp
xor
leave
pop
popa
pop
adc
call
imulb
inc
jge
pop
push
or
cmp
cmp
lret
jmp
mov
movsb
dec
cmpb
dec
sub
sub
lret
inc
insl
fmulp
movsl
and
mov
add
fisttpl
inc
jbe
jge
mov
mov
jo
rcr
int
dec
sbb
lock
mov
cmp
sti
mov
es
ret
cli
adc
stc
push
repz
out
mov
inc
scas
pop
fldt
out
sar
shl
inc
inc
cmp
scas
popa
loop
add
pop
dec
sarl
jbe
into
outsl
lds
test
or
add
mov
mov
adc
daa
out
mov
fmull
inc
addl
xchg
xchg
mov
inc
add
or
bound
aas
fwait
in
bound
hlt
sbb
sub
jp
out
rolb
pop
sbb
fsubs
test
fldl
aad
push
cmp
imul
add
push
roll
loope
push
pop
inc
ret
push
inc
call
arpl
add
xchg
pop
lahf
ret
clc
xor
and
insl
mov
movsb
lea
and
xor
lahf
mov
addr16
push
mov
or
mov
pop
test
mov
lcall
fucomp
mov
xchg
leave
and
dec
mov
xchg
lds
test
andl
jg
xor
fwait
ja
aad
jae
or
inc
xorb
mov
sti
mov
jle
clc
sbb
data16
mov
in
pop
mov
sar
and
inc
jbe
sti
test
out
push
xchg
xor
and
mov
cmp
mov
xlat
jno
sub
aas
fnstsw
pop
jp
aam
add
sub
cmpb
push
sub
xor
loop
and
hlt
lret
jge
adc
mov
es
rolb
insb
push
adc
cli
cmp
and
sti
incl
dec
mov
xor
incl
test
inc
jg
clc
sub
repz
fcoml
ret
nop
inc
popa
mov
mov
inc
inc
int3
repnz
sti
ds
test
mov
and
mov
outsb
mov
mov
dec
daa
sbb
xchg
pop
push
icebp
sbb
add
pop
test
jge
dec
jp
imul
ljmp
cs
sub
test
add
push
mov
pop
mov
aaa
fucompp
int3
mov
cmp
pop
cmp
mov
lcall
xchg
xchg
xor
mov
pop
ret
nop
nop
nop
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
inc
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
inc
inc
add
inc
inc
add
inc
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
inc
inc
add
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
inc
inc
add
inc
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addr16
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
push
inc
add
addr16
add
addr16
add
addr16
add
addr16
add
addr16
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
push
inc
add
imul
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
imul
jl
inc
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
imul
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
