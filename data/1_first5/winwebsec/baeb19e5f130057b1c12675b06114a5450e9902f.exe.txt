sub
push
push
mov
push
xor
push
mov
mov
mov
movl
mov
mov
add
inc
mov
movzbl
mov
mov
add
mov
ror
mov
mov
shr
mov
sub
imul
mov
shl
mov
add
mov
mov
sub
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
call
mov
push
call
lea
push
lea
push
call
test
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
mov
movb
call
mov
movb
movzwl
test
jne
movb
movl
lea
push
call
mov
movl
lea
push
mov
push
call
mov
movl
push
push
push
push
push
push
call
movl
jmp
movb
movb
movb
push
call
pushl
pop
mov
mov
push
call
movl
pushl
push
mov
add
add
push
xor
push
mov
call
mov
mov
mov
sub
mov
cmpl
jne
push
call
movb
mov
add
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
push
push
mov
push
call
cmpl
jbe
mov
push
mov
push
mov
add
push
mov
push
call
add
mov
push
call
cmpl
je
pushl
pushl
mov
push
jmp
jmp
mov
mov
push
push
mov
push
call
mov
lods
jmp
inc
mov
adc
inc
pop
fwait
xor
movsb
adc
and
jle
push
call
inc
xchg
ret
push
push
cmp
test
lahf
cmp
or
mov
push
pop
out
sub
ds
dec
dec
movsl
mov
sub
sbb
lahf
mov
movsb
scas
adc
sar
ret
clc
and
inc
and
cmc
cmpsl
cltd
addb
das
sbb
or
jg
imul
push
faddl
pop
fxtract
jnp
call
dec
pop
enter
xchg
add
mov
pop
fstpt
pop
inc
cli
popl
add
test
js
je
imul
xor
push
sub
push
nop
push
imul
sar
stos
popa
aas
jb
add
insl
or
mov
and
lock
pop
cmp
pop
ja
or
lahf
test
lahf
push
and
sub
les
mov
pop
sbb
test
xchg
dec
repz
leave
or
ljmp
std
push
leave
sbb
stos
leave
fsubrs
push
cwtl
iret
inc
pop
mov
dec
jmp
repz
in
xchg
sub
scas
sbb
das
sbb
outsb
cmp
fcmovne
sbb
ds
inc
rolb
cs
mov
sbb
inc
in
xchg
sub
fs
iret
jecxz
cli
scas
push
in
push
cmp
or
fs
lock
gs
jecxz
aas
notl
ds
fwait
shl
push
or
push
ja
std
xor
les
mov
jge
stc
sbb
jnp
pop
jnp
fimull
add
test
shr
xchg
out
xor
sub
jno
dec
pusha
aaa
mov
sbb
scas
and
and
jmp
in
adc
stos
adc
int
or
out
enter
cmp
sub
loope
cmpb
in
mov
lret
aaa
adc
les
adc
cmp
shrb
pop
mov
mov
mov
mov
mov
xchg
cmp
push
in
push
jle
pop
and
sub
push
mov
mov
sbb
inc
push
mov
fwait
icebp
push
add
sub
ljmp
mov
js
adc
jp
dec
xor
loopne
mul
dec
mov
icebp
into
cmc
xor
lret
mov
adc
mov
nop
insb
cmpsb
xlat
pop
jmp
add
jge
xor
xchg
cmp
in
dec
lcall
shlb
test
mov
or
sub
push
add
lock
repnz
xchg
adc
jb
or
rcll
insb
pop
out
or
daa
loopne
bound
xchg
mov
mov
loope
btr
clc
cmpsl
inc
rorb
pop
mov
adc
sbb
idivl
mov
lock
lret
loope
pop
loope
mov
imul
sbb
mov
cmp
fdivrs
dec
mov
pop
or
mov
push
adc
xchg
mov
or
testb
sub
pop
rol
mov
and
les
mov
jb
icebp
pushf
stc
insb
jmp
cmp
movsl
cmc
cld
pusha
jne
sbb
inc
xor
mov
sahf
mov
add
mov
fs
dec
outsl
andl
xchg
hlt
outsb
outsl
ret
adc
lret
add
jno
in
inc
shrl
cmp
stos
mov
ja
inc
ret
movb
lahf
sub
sbb
roll
lods
jbe
pop
fisubrl
cmp
jge
out
out
or
aas
jb
inc
ljmp
icebp
jno
cmp
je
iret
mov
sbb
cmp
and
mov
pop
jae
dec
inc
aaa
xor
outsb
jg
testl
mov
sub
clc
mov
add
xchg
mov
shll
push
add
jg
and
sbb
mov
or
jno
jb
xor
fldenv
inc
and
rorb
test
lods
cmp
cwtl
lahf
cmpsb
test
push
jnp
adc
inc
ss
mov
cmp
sub
push
dec
aam
nop
push
xor
push
mov
xchg
inc
jns
cmp
in
bound
insl
dec
xchg
or
cmp
sbb
test
mov
pusha
and
nop
into
jns
inc
mov
push
rcll
call
ljmp
jle
nop
mov
mov
icebp
leave
pusha
out
sbb
out
xor
std
sub
out
jne
mov
pop
add
xchg
jne
insl
cmp
adc
push
dec
fwait
sub
push
adc
aas
test
out
push
mov
adc
push
add
push
xlat
in
outsb
mov
and
rol
pop
mov
inc
inc
push
sbbl
or
and
lods
mov
inc
mov
mov
pop
faddl
in
out
rolb
sbb
aas
dec
ss
iret
push
push
adc
stc
sbb
jmp
mov
pop
add
jmp
jns
insb
mov
out
push
aam
mov
xchg
mov
addr16
not
scas
loop
adc
test
push
inc
shl
nop
cli
js
fnstsw
sub
in
enter
lea
lods
aam
or
shl
xchg
mov
xor
daa
je
cld
add
jae
push
call
shrb
fimuls
inc
inc
adc
mov
mov
xchg
scas
mov
gs
stos
cmp
mov
incl
aaa
jecxz
jl
fimuls
cmpsl
out
pusha
pop
jne
xchg
out
js
mov
sbb
xchg
test
inc
mov
lahf
jb
dec
or
or
sub
out
cltd
aam
addr16
xor
cmpsl
sbb
ret
add
stc
sbb
pop
mov
mov
push
ret
mov
xor
lret
leave
orb
sub
shrb
mov
xchg
test
ds
xchg
out
int
sahf
xor
orb
xchg
aaa
test
and
jl
pop
arpl
subl
inc
nop
movsb
sar
int3
out
mov
adc
jne
inc
lret
iret
adc
loopne
mov
push
ret
loop
or
jb
data16
push
mov
fdivrs
pop
jle
jle
sub
fs
xchg
mov
mov
in
test
jp
jb
add
insl
fwait
jne
sbb
cmp
inc
dec
push
sub
dec
push
adc
sbb
dec
fnstsw
and
and
sub
mov
cltd
jecxz
in
jns
enter
mov
repnz
cmpsb
mov
inc
add
push
and
cmp
jp
imul
adc
mov
hlt
lods
aad
dec
iret
les
cmp
mov
adc
out
js
sbb
mov
shll
dec
inc
sub
mov
int
mov
push
or
fisttps
xor
mov
jmp
pop
push
ret
cmpsl
cltd
ja
push
call
jge
cld
mov
test
mov
movsbl
push
push
jbe
out
iret
sahf
jmp
subl
fmul
jl
ljmp
in
pop
gs
cmp
das
jno
push
cltd
leave
aam
fsub
adc
shrb
out
imul
fsubrs
mov
clc
nop
adc
adc
loopne
cmpsl
sbb
pop
enter
cmp
push
scas
ret
repz
inc
lods
sub
fisubs
push
imul
dec
sahf
fndisi(8087
out
mov
add
test
xor
jle
sarb
push
leave
lcall
push
mov
push
cltd
lods
and
pop
inc
scas
stc
cli
sbb
xor
rcl
lea
lea
adc
aaa
addl
push
or
jmp
pop
push
mov
sbb
push
pop
nop
testb
loopne
lahf
xchg
mov
imul
dec
mov
dec
test
das
dec
dec
cmp
das
or
fidivs
cmp
into
mov
fs
int
daa
lret
inc
adc
sub
pop
sahf
mov
out
mov
movsb
push
dec
inc
push
fidivrs
popf
dec
mov
nop
lret
cltd
adc
xchg
push
push
or
xlat
xchg
punpcklbw
cmp
out
jne
mov
xchg
inc
scas
test
movsb
sub
test
lahf
sub
xchg
cmpsl
jg
popf
mov
lods
jae
std
cmp
and
test
jecxz
ja
sahf
sub
push
stos
stos
pop
or
or
add
call
scas
outsb
add
jecxz
jmp
out
div
imul
adc
fistpl
adc
outsl
testb
aam
insl
sub
mov
pushf
dec
add
data16
sbb
sbb
push
xor
mov
mov
mov
xor
loopne
imul
pop
pop
mov
int
push
vpand
sbb
pop
xchg
cmp
iret
ds
inc
jae
ja
lea
mov
push
inc
test
ljmp
lcall
bound
pop
pop
xor
mov
mov
sub
aaa
jnp
jmp
push
sti
jp
sub
xor
mov
push
xor
pop
mov
arpl
pop
fistpll
ds
mov
inc
outsb
xchg
jns
fmull
inc
fwait
lahf
pop
js
aas
mov
xchg
jle
inc
jg
cmp
pop
lods
cmp
repnz
jl
and
loope
mov
push
mov
cli
in
inc
cmpsb
das
push
sbb
and
pushf
aam
and
out
jmp
xor
push
dec
mov
add
push
inc
add
shrb
dec
cld
lods
repz
das
decb
mov
popa
mov
xchg
or
out
xor
bnd
nop
sbb
push
ja
push
shrb
adc
daa
clc
cmp
aad
mov
popa
fimuls
and
mov
fisttpl
or
stos
pop
adcl
shl
dec
popf
dec
les
aaa
fldt
xchg
jnp
sbb
add
dec
mov
lock
and
push
jnp
aaa
fs
aam
out
dec
subb
add
aaa
bnd
loop
fcmovnb
cltd
sbb
jle
jp
push
les
sub
lods
addl
fsubrl
insl
jecxz
and
inc
dec
jmp
movsb
outsb
dec
stc
je
out
aas
add
mov
repnz
xchg
xor
adc
pop
push
aam
sbb
cmpsb
xor
inc
mov
sbbl
push
lcall
lret
std
loopne
sahf
adc
mov
or
decl
sbb
and
insl
xchg
cmp
cmp
out
mov
push
sub
jbe
and
cli
lea
fcom
adc
ret
jecxz
push
cmpsl
stos
sar
and
xor
movsb
xlat
push
jge
push
jnp
sub
and
mov
in
std
or
test
adc
in
cmp
jb
push
or
mov
xchg
in
and
push
cmpb
mov
enter
mov
push
loop
gs
les
mov
push
xchg
cltd
pop
add
cmpsl
fwait
mov
cmc
jp
add
stos
call
add
mov
popf
add
aad
dec
add
sbb
or
scas
cmp
ret
push
int3
popf
dec
mov
mov
ljmp
mov
push
cltd
scas
das
push
mov
push
mov
adc
test
inc
aaa
idivl
cmc
es
movsb
test
lea
dec
std
pop
xor
les
cltd
sub
adc
adc
stos
es
bound
mov
pop
add
addl
mov
fcomps
xchg
pushf
lret
push
out
cmp
jns
jne
mov
sbb
movsb
jno
and
inc
push
outsl
xchg
cmp
sbb
jp
mov
rcrb
jecxz
jg
ljmp
cmp
adc
pop
sti
inc
cmp
sahf
stos
scas
out
mov
xchg
test
mov
mov
aad
popf
fwait
loope
sbb
push
cli
and
jp
adc
adc
in
repnz
in
dec
adc
repz
cmc
mov
add
push
cmp
cli
sahf
push
fs
int3
sbb
mov
dec
iret
sub
lods
out
jne
and
popf
pop
and
xchg
mov
sub
leave
std
lods
mov
outsb
mov
call
loopne
mov
jo
xor
test
scas
add
arpl
push
and
lock
pop
into
jne
scas
outsl
sub
sbb
nop
in
lret
push
scas
mov
mov
outsl
subb
and
rorl
jne
fists
sub
xchg
mov
shrb
call
xchg
cmp
fstl
bswap
mov
les
sub
adc
jae
sbb
stos
or
xchg
add
pop
push
add
cmp
xchg
xor
mull
push
stc
scas
inc
sbb
enter
lahf
stos
loope
mov
sub
fldcw
adc
dec
add
mov
subl
mov
fisttpl
or
mov
pusha
jae
xchg
ds
mov
mov
sbb
mov
sbb
dec
jns
hlt
fldt
xlat
mov
loopne
xor
sbb
shlb
mov
arpl
and
ret
outsl
jmp
test
pop
aas
test
and
cwtl
jle
xchg
inc
out
lret
dec
test
cmp
ss
cmp
jle
fimull
dec
mov
xchg
pop
jg
rclb
inc
jle
jp
shl
into
mov
jnp
enter
sub
mov
jmp
sti
sbb
insb
xor
jle
add
mov
popf
jno
out
jo
clc
adc
in
repz
push
mov
test
push
popa
divb
xor
ljmp
jmp
mov
push
and
mov
lret
cmpsl
xor
loopne
cmp
pop
cmp
cmovb
or
cmp
xor
mov
in
lea
adc
aas
fiaddl
sbb
aam
add
mov
mov
stos
inc
ds
xor
or
jmp
jno
pop
fwait
lret
push
xorl
fwait
movsb
int3
jg
mov
push
push
fisubl
aam
imul
add
in
int
mov
cmp
adc
xlat
fsubs
xor
aas
popf
mov
push
mov
adc
or
adc
dec
and
jae
jne
lock
aas
push
jmp
sbb
dec
lcall
pop
xor
xor
dec
aaa
sbb
mov
pushf
scas
adc
xchg
mov
dec
inc
int
imul
sbbb
icebp
data16
sub
fstpl
inc
cmc
dec
pop
xor
mov
xchg
hlt
pusha
sub
mov
cmp
mov
add
add
sub
shlb
dec
push
adc
xchg
inc
lods
or
inc
cmpsb
sbbl
dec
and
add
jg
dec
inc
add
push
loopne
call
jne
cmovb
mov
sub
jle
pop
dec
call
sub
inc
sbb
test
lahf
dec
dec
inc
nop
sub
int3
sti
mov
xchg
push
insb
pop
adc
xchg
and
das
push
clc
mov
loop
push
add
out
inc
dec
sbb
mov
mov
mov
lahf
pop
cli
lahf
xchg
push
sub
and
adc
jmp
pusha
jp
cvtps2pi
imul
lock
in
add
mov
xlat
jg
mov
test
into
push
pushf
pop
mov
or
mov
out
int
enter
sahf
inc
fidivrl
pop
mov
push
int3
mov
cltd
or
ljmp
int3
jmp
xchg
add
iret
aam
adc
xor
mov
jle
addr16
mov
or
in
xor
add
out
cmp
sti
jns
mov
and
ret
rcr
pop
sub
adc
std
mov
mov
dec
js
jl
fxch
xchg
pop
cmp
icebp
fists
mull
and
dec
push
sub
sub
jne
sub
xchg
adc
add
repnz
loopne
out
out
sub
mov
call
add
imul
fwait
add
iret
inc
jns
push
lret
mov
xor
bound
mov
test
xor
inc
pushf
add
in
mov
jns
jns
lock
scas
shrb
cld
rcll
scas
adc
lds
cmp
mov
xorl
add
js
cmpsl
sub
adc
pop
xorb
movsl
inc
cmpsb
popa
jnp
adc
push
xchg
cmpsl
mov
icebp
mov
jl
fstl
dec
add
call
dec
insb
xor
lcall
lods
xchg
out
cmp
rcll
pop
lock
popa
shll
call
inc
sbb
mov
lds
roll
dec
dec
les
mov
adc
jmp
dec
and
add
xchg
test
pop
and
cltd
shl
push
push
aam
cltd
cmp
nop
daa
imul
outsb
std
inc
mov
pop
inc
pop
push
out
cwtl
scas
or
je
xlat
call
mov
add
div
negb
insb
stos
pop
inc
int3
jle
jns
mov
repnz
insl
lret
ret
aaa
faddp
mulb
les
mov
push
subb
inc
inc
push
in
shr
dec
mov
jmp
adc
rcl
mov
shll
imul
sub
fs
xorb
or
jmp
in
xchg
jne
ret
loope
cmpsb
jg
or
insl
mov
scas
push
xor
add
loop
pop
fs
rcll
pop
pop
fs
xchg
xor
mov
daa
outsl
mov
mov
xchg
mov
mov
mov
ret
mov
or
jnp
xchg
mov
lods
mov
aam
test
leave
sub
mov
outsb
jbe
clc
sub
mov
pop
scas
adc
mov
pcmpeqd
dec
sahf
pop
cs
jne
and
test
out
into
add
inc
ret
mov
repz
dec
lret
adc
and
push
push
or
scas
jne
fisttpl
add
xchg
mov
pop
xor
fbld
jbe
into
js
in
lcall
jne
sbb
jg
cld
xchg
aam
aas
xchg
ret
jnp
adc
mov
sbb
xlat
pop
mov
fldcw
or
mov
stos
inc
mov
sti
mov
xchg
cmp
cmp
inc
rcl
test
pop
jle
cmp
jae
inc
sahf
pop
pop
xchg
sbb
add
imul
jl
mov
add
jecxz
dec
mov
or
or
imul
mov
cmp
cmpsl
xor
xchg
mov
inc
pop
or
repz
ljmp
add
lcall
inc
jnp
nop/reserved
sbb
or
ljmp
mov
fisubl
push
stc
pushf
dec
or
and
test
in
pushf
mov
fs
out
cmp
clc
sbb
add
cwtl
fiaddl
xchg
mov
shl
fbstp
add
stos
enter
dec
cltd
lds
stos
rcr
pop
in
xchg
add
arpl
lahf
cld
ds
out
jg
xchg
pop
push
cld
jmp
cmp
jecxz
sbb
push
xor
sarb
lock
pop
mov
xchg
add
cmp
jno
inc
and
enter
xchg
inc
int
mov
xchg
cmpsl
push
scas
popf
sahf
xchg
fcoml
es
xchg
mov
inc
push
adc
sub
ljmp
ja
adc
add
fwait
mov
arpl
add
test
cli
int3
jne
es
lods
add
lock
es
mov
mov
push
inc
push
lods
dec
std
cmp
fstl
add
xchg
cmp
jecxz
mov
outsl
stc
push
pop
gs
cs
loop
push
out
stc
pop
jno
pop
mov
fadds
cmp
addr16
push
jne
ss
pop
aam
jp
aaa
mov
lret
add
fildll
sub
pop
pop
xchg
mov
add
sysexit
jge
les
push
mov
mov
das
ret
lds
adcb
shll
xchg
rolb
and
lods
dec
mov
gs
dec
mov
ret
enter
mov
dec
insl
into
fdecstp
mov
jno
cmp
addr16
gs
vmwrite
dec
scas
lcall
sub
mov
adc
shrl
push
js
mov
xchg
add
lret
or
clc
push
push
lods
cmp
scas
xor
sbb
int
out
in
sbbb
mov
xchg
xchg
and
pop
insb
jp
mov
push
insb
pop
sbb
outsb
mov
loope
jmp
out
lret
fsubrs
sbb
and
ss
pop
shrb
mov
inc
in
sub
push
jae
pop
fldenv
jp
jb
outsl
xor
add
add
and
cmp
push
push
adc
sbbl
fimuls
jae
cmova
mov
pmaddwd
xchg
jl
sub
sub
pop
cltd
outsb
shlb
or
ret
jb
push
fimull
loope
cs
and
les
push
pop
movsl
or
lods
push
push
push
jo
lea
or
jl
popf
sub
cmc
repnz
or
add
ds
clc
aam
popl
in
out
popf
pushf
mov
hlt
mov
insb
xor
shrb
inc
fsubl
xor
xchg
pop
jne
add
lret
jnp
xor
xor
or
sub
int
aam
sbb
mov
mov
xchg
lea
hlt
adc
mov
lahf
pop
ja
lahf
andb
popa
rolb
dec
xchg
aaa
xchg
insl
leave
cmp
lds
je
outsb
sub
mov
inc
adc
xor
ret
sbb
add
mov
mov
movsl
mov
pushf
out
mov
lahf
inc
inc
pusha
mov
bound
clc
les
enter
test
xorb
test
dec
in
sub
dec
sbb
inc
cmp
cmc
std
cltd
repnz
outsl
leave
aas
sbb
out
mov
xor
cltd
or
push
xlat
cmc
inc
fucomp
push
cmp
ds
add
psubd
xchg
icebp
add
test
push
nop
fisubrs
sbb
fmul
ja
incb
jbe
sub
clc
stc
int3
cmpsb
and
ljmp
pusha
repnz
mov
sarb
mov
int3
addr16
xor
lea
pop
jecxz
cmp
ds
int
jecxz
push
xchg
mov
dec
ja
test
jecxz
xchg
xchg
loop
int
mov
lcall
xchg
fsubrs
xor
out
pop
dec
icebp
and
pop
add
int
cld
je
jmp
repnz
xchg
mov
xor
jae
aam
sbb
adc
test
pop
shrl
int3
sub
rcrl
and
pop
into
sub
inc
xchg
sbbl
iret
rorl
add
call
arpl
jo
sub
sti
adc
or
pop
adc
xor
rcll
rcr
sbb
adc
movsl
xor
jmp
jge
pop
std
pop
pop
inc
int
mov
jne
inc
sub
push
push
loop
mov
clc
jb
sub
call
and
sub
cld
outsl
call
mov
rcl
cmp
xor
add
add
ret
pop
mov
scas
out
shll
inc
pop
mov
pop
cmpl
iret
lcall
stos
xor
loopne
pop
cmc
xchg
dec
pop
pop
sbb
shl
ret
test
out
popa
cmp
cltd
insb
lret
faddp
pop
sbb
xor
and
iret
idivl
ret
clc
pop
aad
xor
dec
cltd
mov
jecxz
mov
iret
imul
popf
je
loopne
cmpsl
jnp
cmp
sub
mov
fs
pop
pop
sbb
cmp
lds
dec
pop
pop
mov
sbb
mov
or
subb
dec
out
ja
cld
divb
faddl
lock
movsl
fdivs
mov
add
iret
pop
in
or
mov
iret
pushf
adc
cmpsl
jp
orl
mov
pop
fdivs
and
pop
outsl
shr
cmpl
out
jb
mov
dec
mov
in
jae
pusha
mov
push
mov
jge
and
xchg
xchg
ret
stos
movsl
test
lcall
sbb
adc
mov
mov
push
mov
pop
jecxz
stc
xchg
xorb
lret
mov
lods
pop
pop
aam
pop
aas
mov
or
jo
mov
dec
test
sahf
loop
mov
push
daa
adc
xchg
or
sarb
cmp
mov
pop
sub
add
or
cmp
jae
cwtl
fisubs
and
push
xchg
pop
add
adc
clc
ljmp
stos
inc
adc
xor
pop
int
pushf
push
divl
outsl
and
pop
mov
sbb
jmp
lods
incb
xchg
or
cmp
sahf
xor
pop
sbb
add
cltd
sti
out
sbb
mov
lcall
add
and
popf
mov
lods
sub
orb
xchg
aas
mov
ret
in
je
push
sbb
lock
add
fsub
repz
icebp
push
push
add
es
xor
xor
lcall
scas
lcall
outsl
test
push
imul
lea
and
inc
loopne
mov
repz
stc
jp
sbb
out
imull
movsb
cmpsb
push
das
or
sbb
ret
in
pop
jmp
sub
push
pop
cmp
jnp
jp
mov
cmp
jmp
fisubl
ljmp
pop
out
lcall
ja
out
ja
xchg
rclb
inc
ljmp
dec
cli
dec
xchg
xor
orl
cmp
cmp
dec
aam
add
cmp
push
adc
cs
adc
jo
test
pop
xchg
test
pop
jl
lock
dec
ficoms
and
pop
in
leave
pop
sbb
pavgb
cmovo
stc
sarb
xchg
inc
test
inc
mov
push
sub
popf
in
push
mov
dec
add
les
cltd
jne
test
jae
mov
push
mov
push
fdiv
cs
test
ret
mov
mov
sbb
cmp
adc
in
cmp
sub
sub
pop
mov
jp
pop
sub
sbb
lahf
movsb
shll
xor
clc
cld
cli
loopne
sub
fsin
xor
out
ret
mov
loope
loopne
lcall
xchg
ljmp
jb
mov
repnz
dec
inc
cmpsb
mov
fdivp
in
pop
roll
fistl
push
in
pop
stos
shr
mov
aam
adc
in
fimuls
jb
int3
push
js
fimuls
stos
movsb
add
push
leave
jb
scas
fildl
cmpsl
mov
xchg
and
or
es
lret
adc
int3
aas
pop
popf
dec
push
andb
mov
xchg
sub
inc
push
pushf
jle
pop
imul
inc
outsl
mov
cmpsb
mov
aam
mov
aad
sub
mov
and
popl
fmull
or
ret
mov
mov
je
mov
mov
sub
jle
inc
dec
cltd
outsl
cld
sub
sbb
bnd
imul
test
xchg
mov
sbb
pop
fucompp
or
lods
aas
daa
xchg
sarl
test
sbb
pop
loope
imul
leave
sbb
mov
push
pop
nop
test
inc
insl
jge
imul
pop
and
cmp
fcoml
in
push
inc
adc
enter
mov
xor
add
lds
push
fs
ljmp
cmp
push
popf
sub
stc
shl
fwait
jl
imul
frstor
pop
popa
mov
mov
pop
or
mov
push
int3
and
cmpsb
mov
cmpsl
hlt
cs
jnp
sub
inc
vphaddbw
push
aam
pop
adc
sbbl
aas
lods
jecxz
mov
xor
pop
pop
sbb
pop
sub
pop
sub
mov
mov
fwait
lods
inc
mov
inc
mov
inc
nop
out
jg
loope
cmp
xor
push
shrl
dec
sub
loope
gs
push
and
jecxz
std
inc
cmc
mov
test
inc
add
dec
addl
sub
orb
aam
divl
iret
push
lcall
lcall
cli
dec
ja
dec
xchg
xchg
adc
jecxz
lods
mov
or
dec
pop
mov
inc
rolb
cmpsb
sbb
add
jb
popa
cld
in
jae
adc
add
jp
sub
cmp
adc
aad
push
bound
jmp
pop
shlb
dec
in
shlb
daa
cmp
hlt
cmp
out
sub
lahf
pusha
pop
sbb
test
jge
dec
fwait
add
pop
mov
push
cmpsl
icebp
das
jge
int
out
xchg
out
jae
and
pusha
xchg
push
inc
pop
loop
and
jg
stos
mov
pusha
xor
pop
test
out
xrelease
cmp
push
ljmp
data16
cmp
bound
bound
inc
cmp
dec
pop
movsb
dec
outsl
inc
fldt
pop
pop
stos
hlt
or
mov
xchg
insb
aad
push
and
call
sub
push
pop
xor
jno
inc
cmp
dec
mov
jne
adc
add
jge
jmp
jb
or
inc
inc
test
lret
aaa
iret
add
mov
jge
pushf
lcall
cmp
inc
sub
pop
xor
pop
aam
pop
out
mov
jno
sahf
jg
stos
inc
xor
mov
out
adc
mov
jmp
int
push
push
lcall
in
sahf
inc
pop
push
loope
rolb
movsb
lret
xchg
cmp
inc
subb
movsb
sbb
into
sub
popf
mov
pop
xor
pop
or
mov
shlb
adcl
inc
and
popf
jge
sbb
inc
lret
gs
scas
dec
rcrl
das
inc
mulb
and
inc
out
jns
fildll
ret
int3
xor
xchg
push
jge
xchg
and
sub
xor
in
aas
adc
push
fsubs
cmc
cld
xchg
mov
fsubs
xchg
sbb
fdivrs
test
subl
and
out
push
mov
lahf
adc
dec
adc
pop
adc
fsubrs
imul
adc
push
imul
or
mov
call
jbe
mov
sti
sub
cli
push
imul
orb
inc
inc
mov
aas
ja
cli
xchg
in
mov
pop
loopne
xor
dec
pusha
mov
adc
sub
ss
sti
nop
adcl
rcrb
mov
popf
xor
push
hlt
lret
push
lahf
add
sub
test
pop
sub
fistl
iret
mov
dec
inc
sub
push
jle
mov
fadd
int3
mov
cmp
adc
es
inc
sub
inc
mov
out
sahf
outsl
or
fbstp
push
cwtl
dec
ret
mov
and
insb
cmp
cs
loopne
sbb
push
push
mov
hlt
jbe
mov
pop
aad
dec
mov
mov
lcall
out
lods
sub
lods
mov
imul
hlt
mov
xor
add
clc
rclb
dec
pop
pop
push
mov
lret
adc
sbb
cwtl
xchg
lahf
push
les
faddl
shlb
pop
jbe
add
arpl
jae
outsl
ffreep
pop
stc
int3
or
adc
push
out
aad
daa
imul
jge
cmp
imul
and
pop
xlat
xchg
scas
loopne
jne
pop
cwtl
mov
xlat
pushf
sbb
sarl
add
push
sub
xchg
lds
or
ds
sahf
mov
mov
pop
int3
xchg
dec
aad
mov
dec
mov
xor
sar
mov
ds
adc
dec
jae
in
mov
int3
test
sub
lea
mov
out
outsl
push
jl
rorb
jo
mov
sar
mov
xor
mov
loopne
stc
pop
call
outsl
in
ret
inc
out
and
cmp
cmp
cmp
cmp
and
or
dec
lods
lahf
fcompl
jae
jae
mov
mov
sub
dec
xor
ret
es
adc
cmpsl
out
xchg
in
xchg
jmp
fiadds
fs
js
mov
int3
push
and
xchg
xchg
frstor
push
stos
sub
sbb
sbb
loop
mov
jmp
out
addl
or
adc
sarb
outsl
xchg
enter
sub
inc
cmc
lods
in
icebp
lods
ret
mov
xchg
out
lods
or
test
xor
leave
stos
xor
testl
dec
jbe
lcall
addb
pusha
jnp
icebp
cmpsl
pop
repz
and
mov
dec
inc
lods
out
fcmovb
mov
out
add
mov
mov
inc
ss
int
xchg
insl
scas
mov
fcompl
aas
inc
scas
fs
xor
cwtl
pop
xchg
repz
xor
movsl
fst
fstpl
fisubs
andl
int3
mov
ds
lea
mov
or
add
bound
sbb
xchg
gs
push
adc
dec
sbb
sub
xchg
adc
cmp
test
dec
push
inc
mov
mov
fistl
adc
shll
aad
jbe
clc
fstpl
or
sti
adc
inc
stos
pop
test
mov
not
insb
nopl
xor
adc
negl
cmpsl
mov
mov
in
fcomps
in
test
inc
xor
out
xor
mov
test
push
cmpb
aaa
sbb
or
push
sarb
rcrb
jmp
pop
andl
sbb
mov
fildl
cli
pop
rcll
push
dec
cmp
cltd
fwait
stos
lea
in
jo
inc
insl
repnz
aas
test
sub
fwait
subb
outsb
scas
sbb
pushf
xchg
cmp
cmp
xchg
mov
and
xchg
or
fdivrp
push
fstps
sub
xchg
xchg
jecxz
inc
std
pop
mov
and
ret
sbb
inc
jge
stc
pop
mov
mov
aad
leave
dec
cli
call
jae
std
icebp
imul
or
mov
pop
cli
jle
fstps
in
lods
leave
xchg
hlt
mov
mov
push
incb
jb
push
push
out
wrmsr
icebp
ds
sbb
mov
popf
int3
and
cmp
mov
ffree
jo
mov
mov
sbb
jbe
aas
cli
or
popf
cli
setno
sub
pop
sbb
mov
ret
xor
xor
andb
jmp
sahf
fiaddl
push
out
pop
pop
jns
adc
arpl
pop
add
mov
cs
push
aam
or
or
pop
push
loopne
and
pop
insb
clc
and
jnp
xor
pop
dec
push
test
fst
xchg
stos
sub
les
fdiv
adc
adc
jle
daa
scas
ja
lods
or
dec
fdiv
or
cmp
sub
fcomps
xchg
lcall
movsb
xchg
sub
xor
mov
pop
cmp
add
add
lock
xlat
jns
aam
push
lock
xor
and
shl
and
or
xchg
js
ja
fsubrl
mov
in
add
pop
cltd
cmp
fcmovnbe
xchg
sub
pop
aas
rcrb
xchg
pop
dec
xchg
movsl
sbb
in
push
inc
cmp
and
in
jl
js
orl
jno
xor
mov
sbb
xchg
inc
jg
adc
lock
push
cmp
outsb
fdivrp
cld
ljmp
pop
inc
pop
or
cmpsb
stos
sub
or
repnz
sub
movsl
pop
cwtl
loope
cli
arpl
and
cmpsl
adc
jg,pn
xchg
bound
xchg
js
ret
lret
repnz
push
dec
frstor
inc
pop
jns
rcrl
std
std
and
adc
push
xor
dec
jbe
testl
push
add
inc
enter
mov
mov
data16
lcall
push
test
mov
pop
push
shl
sub
jl
push
mov
pop
out
mov
ret
mov
mov
jecxz
gs
pop
push
out
and
mov
and
jbe
push
adc
sbb
dec
pop
inc
stos
pop
dec
mov
pop
aas
outsb
popa
nop
loope
push
ret
in
sti
mov
push
test
push
xchg
cmp
mov
rcl
mov
sbb
sarl
jge
xor
shl
fs
sub
add
lret
and
hlt
xor
pop
sbb
inc
int3
mov
jne
mov
fisubrs
faddl
pop
sahf
dec
mov
pop
imul
cmp
inc
sub
jl
pop
dec
cwtl
fisubrs
outsl
lcall
mov
xchg
lds
jns
jmp
sbb
cmp
pushf
nop
clc
in
or
arpl
dec
xor
push
stc
nop
dec
cmp
adc
mov
pop
pop
mov
adc
cmp
mov
add
adc
xchg
jecxz
movsl
fisubrs
xor
sbb
push
cmp
pop
or
into
add
jmp
add
mov
pushf
fsubs
aam
and
jecxz
ror
fstps
rorb
mov
cmpsb
je
loop
push
aam
dec
in
cmpsb
sub
push
jno
push
test
and
pusha
pop
scas
lea
out
pop
jg
das
movsb
and
popa
shll
xchg
ja
cmp
fcompl
adc
bound
dec
add
pop
cs
call
xchg
leave
mov
jne
push
call
inc
jmp
int3
cld
mov
cwtl
and
scas
movsl
sub
test
mov
xor
cs
jmp
das
push
push
add
std
sahf
jb
mov
push
push
adc
out
jge
out
mov
imulb
dec
call
xor
push
pop
dec
and
adc
inc
mov
pop
cld
pop
xor
and
inc
in
sbb
and
ljmp
movsl
push
out
test
sti
or
and
xor
rcrb
outsb
cmp
movsl
daa
lahf
jns
jbe
sub
inc
cli
sbb
stc
pop
sbb
xchg
cmp
sub
jo
shll
mov
popl
cmp
and
jnp
arpl
repz
sti
sti
out
shrb
cmc
int3
mov
cltd
dec
jl
cld
xor
mov
pusha
ret
cld
popa
sbb
jg
xchg
enter
or
mov
push
mov
jg
sub
xchg
stos
insb
push
pop
or
arpl
inc
out
push
insb
mov
push
push
mul
dec
cmp
faddl
es
xchg
jle
push
sub
out
stos
sub
mov
movsl
out
jnp
stos
dec
cmp
push
jle
jg
pop
and
mov
data16
maskmovq
mov
xchg
js
xor
jbe
gs
outsl
push
out
lret
mov
inc
scas
jge
fsubl
arpl
jae
pop
mov
int
mov
lcall
insl
scas
mov
jg,pt
icebp
push
fstpt
inc
add
dec
or
xchg
pop
je
hlt
jbe
sub
addb
cmpsl
push
addr16
vpcmpeqd
and
pop
mov
jl
jns
and
inc
pop
mov
test
inc
dec
repnz
sub
pop
mov
lods
pop
push
cld
jo
jno
jmp
jp
loope
enter
xsave
xor
repz
add
loop
mov
pop
xchg
mov
mov
cltd
das
lret
icebp
sbb
xchg
add
in
jno
cmpb
or
clc
xor
pop
push
adc
lods
mov
imul
enterw
mov
ret
pop
inc
xor
out
bnd
sub
jno
pop
pop
repnz
fisttps
or
adc
mov
pop
mov
pushf
xchg
mov
jae
mov
sub
lock
rcrb
xchg
fwait
lds
or
pusha
mov
xchg
mov
inc
xchg
aas
xchg
lret
and
test
pop
divl
mov
jne
cltd
in
xor
dec
lret
add
iret
sbb
sbb
sub
stc
mov
out
sbb
faddl
outsb
xchg
push
cmp
cmpsl
arpl
shlb
pop
mov
dec
cmp
and
ja
mov
sub
aaa
pop
sbb
loop
jmp
fwait
mov
xchg
dec
outsb
stos
loopne
js
in
or
xchg
aaa
into
mov
mov
adc
sub
jecxz
dec
or
or
xchg
psubusb
bound
add
cmp
add
popa
or
repnz
add
jno
leave
jne
test
ja
fisubrs
lahf
xchg
pop
push
dec
fsubrl
ret
mov
mov
dec
ljmp
es
xchg
or
into
mov
or
mov
inc
inc
into
and
inc
out
loopne
fistpll
cmp
xor
adc
out
pop
in
ss
push
sahf
test
repz
es
das
jns
popf
push
scas
xchg
jae
sbb
stos
addr16
push
iret
cmp
mov
mov
rorl
jnp
or
shlb
push
inc
sub
daa
movsb
adc
or
mov
xchg
sbb
sbb
mov
cmp
fildl
int3
stos
fs
enter
mov
adc
and
xchg
mov
pop
lret
hlt
lea
enter
nop
xchg
inc
xor
adc
gs
push
test
dec
int3
sub
lods
mov
xchg
in
and
or
mov
test
fs
inc
loope
push
xchg
xchg
and
lods
and
jae
dec
xor
xchg
int
mov
mov
mov
lcall
mov
ret
fldcw
clc
pop
inc
xor
and
mov
call
pushf
mov
push
dec
cmp
jle
test
and
push
add
adc
adc
arpl
mov
scas
add
lods
dec
hlt
icebp
cmp
es
push
pop
cmp
shll
out
sub
mov
cmpl
or
imulb
ss
into
add
popf
cmp
sbb
fcomps
and
call
xor
mov
shll
sahf
fnsave
jno
sarl
ja
dec
fucomp
jae
das
cmpsl
dec
xor
sub
xor
insb
adc
into
sbb
inc
lods
add
push
sti
cmp
lahf
bts
push
cmc
mov
stc
dec
aaa
pop
mov
in
into
push
or
cltd
cmpsl
mov
mov
stos
adc
mov
inc
cmp
sub
inc
out
fs
sbb
adc
sub
jns
stos
test
cmp
pop
stos
dec
lods
cmp
jge
add
and
ljmp
jle
add
or
je
shll
jae
mov
addr16
sub
mov
pop
loopne
es
out
cmp
arpl
sbb
leave
sar
dec
or
rol
pop
cmp
dec
imul
stos
jecxz
add
xor
mov
fisttpll
aaa
push
test
nop
mov
mov
subl
out
pop
inc
fwait
push
add
lock
ret
in
pop
dec
movsl
push
mov
in
lret
mov
les
data16
stc
jge
cld
inc
mov
std
sub
pop
cmp
adc
or
fisubrs
sbb
stc
enter
movsl
into
data16
shl
out
mov
shrb
daa
push
lahf
aaa
daa
arpl
mov
cmpsl
sahf
inc
inc
insl
pop
negb
and
hlt
cmpsl
cmp
pop
mov
aaa
xchg
sbb
push
mov
jecxz
mov
add
lret
sub
int3
int3
in
adc
shrl
cmpsl
outsb
call
call
cmc
push
inc
insb
mov
add
inc
push
xchg
dec
xlat
xor
in
jl
arpl
adc
int3
pop
inc
mov
mov
xor
pop
outsb
sub
cltd
cmpl
popa
dec
stc
dec
sub
sub
test
gs
test
pop
loopne
outsb
scas
js
jmp
push
fwait
mov
shl
pop
pop
pop
jbe
inc
add
cwtl
out
popf
dec
in
mov
dec
cld
test
addr16
out
xor
imul
icebp
mov
mov
lcall
push
addr16
fmull
xchg
pop
dec
popf
lea
adc
or
pop
cmpsb
inc
or
pop
add
add
mov
js
shlb
fwait
mov
cli
insl
push
mov
repz
mov
addl
arpl
inc
loop
xchg
ss
std
fs
in
stos
mov
pop
adc
rcrl
mov
popa
mov
ss
adc
movsb
and
idiv
mov
pusha
imul
sub
icebp
jnp
xorb
dec
cmpsb
jle
pushf
and
and
jbe
or
push
jecxz
into
loop
xchg
mov
adc
cmpsb
das
inc
xor
and
in
push
add
mov
mov
neg
out
cmp
addr16
into
add
sbb
ds
mov
pop
mov
push
out
cmc
fwait
push
jns
xor
clc
inc
sti
mov
xor
fmuls
pop
xlat
dec
adc
or
xchg
cmp
mov
xor
jg
ret
ja
dec
inc
and
and
stos
mov
iret
daa
jno
jns
cwtl
push
fs
dec
mov
mov
push
decb
dec
scas
dec
jg
pop
fld
mov
mov
adc
rcrb
adc
pop
jnp
mov
dec
jle
and
cmc
pop
adc
loope
daa
mov
fldl
fcoml
lods
push
and
rclb
adc
pop
rorb
imul
iret
lods
lock
fldenv
pop
add
jp
test
sbb
lock
cmp
mov
and
add
xchg
xchg
fmul
sub
mov
and
sbb
arpl
fadd
and
jg
dec
nop
cmp
xor
inc
jae
fdiv
outsb
aam
in
outsb
hlt
push
out
hlt
es
popa
out
add
mov
ljmp
mov
pusha
mov
jo
cmp
pop
int
xchg
inc
fcomi
mov
pop
imul
js
stos
or
rdmsr
movsb
xchg
fildll
push
aaa
stc
cmp
stc
or
fwait
lock
fbstp
adc
adc
dec
pop
mov
mov
psubb
popf
mov
daa
push
js
shlb
inc
out
sarl
xor
testb
and
inc
xchg
mov
cmp
jmp
daa
dec
pop
push
cmp
lock
pop
adc
or
mov
icebp
sub
jp
mov
jns
movsl
pop
jl
adc
std
jbe
inc
cmp
fcoms
jae
sahf
jb
xchg
mov
mov
pop
aas
in
mov
cmp
cmp
xchg
jecxz
jecxz
shll
mov
bound
push
data16
push
fstp
nop
ds
jae
int3
pop
std
pop
inc
xchg
pop
nop
ficompl
inc
loope
sub
in
aaa
fisubrs
int3
jnp
cmpsb
cld
lahf
cli
jbe
xchg
icebp
jle
sbb
pop
pop
aam
xchg
out
into
jg
lea
pop
pop
mov
scas
mov
sub
arpl
push
jl
aaa
push
add
arpl
mov
mov
xor
jle
adc
in
pop
orl
lods
jmp
test
sti
loopne
cmp
repz
imul
rol
push
outsb
push
lea
dec
fsubs
out
mov
repnz
ret
addr16
jl
dec
dec
mov
or
adc
incb
jnp
clc
es
repz
mov
jo
mov
sub
or
mov
sbb
inc
loope
inc
or
test
mov
sub
fimull
push
mov
or
call
push
jmp
jno
lret
or
fsubs
jl
dec
push
clc
add
lods
in
cmpsl
mov
je
xor
aas
push
dec
pusha
pop
and
jno
repnz
frstor
pushf
loopne
xchg
add
fwait
in
aad
and
mov
jb
pop
out
orb
sub
mov
dec
inc
dec
pop
shll
cmp
jo
xchg
xchg
mov
cmpxchg
jne
push
mov
xchg
movsl
xor
sbb
xchg
arpl
ss
dec
jp
bound
sahf
icebp
adcb
std
inc
repnz
inc
or
aad
fidivrl
jnp
subl
mov
fisubrl
stos
imul
dec
hlt
mov
jnp
ret
and
mov
insl
sbb
cmpsl
data16
xchg
dec
pop
and
xchg
pop
lods
pop
and
xchg
lcall
xchg
fistps
mov
mov
loopne
mov
inc
push
scas
jp
mov
jmp
mov
les
fdivrs
sub
pop
jp
imul
leave
push
outsb
mov
bound
rolb
add
pop
mov
cmpsl
dec
ficompl
out
daa
mov
pop
xchg
shlb
dec
cmp
mov
and
add
stos
ficomps
sbb
loop
pop
inc
mov
lahf
mov
sub
add
sub
stos
mov
pusha
adc
cmc
hlt
cs
push
or
mov
sbbl
xchg
mov
xor
movsl
fcoms
push
push
cmp
jl
dec
in
push
clc
jmp
and
rolb
test
cli
loope
cmpsl
lahf
gs
adc
sti
enter
xor
aaa
jns
jb
sub
mov
popf
lcall
mov
push
ficoml
insb
mov
sbb
pusha
sub
out
into
sub
mov
cli
nop
lcall
xor
loop
sub
lea
in
pop
jb
roll
lods
fdivrs
dec
stos
fisubs
lahf
jge
xchg
xor
sub
aad
pop
addr16
mov
mov
lret
repnz
fists
mov
fstps
sub
sahf
push
mov
push
inc
add
xor
lods
scas
dec
jmp
les
fs
pop
mov
push
das
in
sub
or
lret
mov
in
mov
mov
jb
pop
lahf
daa
mov
inc
mov
xor
nop
mov
sbb
fists
inc
xor
cmp
dec
loope
ret
fcoml
mov
cmpb
pop
add
test
pop
add
sub
jecxz
mov
jno
stos
cmp
sub
pop
out
or
or
jecxz
xchg
pop
insb
xchg
adc
movsl
sub
xchg
dec
out
cltd
vpunpcklwd
or
lret
mov
sarl
fsub
insl
cltd
pop
ljmp
cltd
adc
mov
test
lods
push
mov
inc
rcr
popf
and
or
pavgw
mov
mov
xchg
hlt
mov
jne
clc
push
stos
add
std
loop
mov
mov
fmuls
dec
mov
adc
jnp
sub
ret
mov
mov
lods
jle
inc
mov
pusha
xchg
pusha
ds
add
hlt
dec
bound
shll
fldl
pop
fwait
ja
movsb
mov
mov
add
adc
enter
ss
leave
sub
rcll
add
adc
std
nop
pop
xor
cld
jp
lea
out
push
push
lret
and
call
ret
xchg
mov
loope
cs
movsl
loopne
in
sbb
mov
push
fcmovnb
negl
mov
xchg
cmp
or
xchg
jl
stos
add
outsb
popa
movsl
ljmp
les
mov
pop
mov
outsb
fmul
push
clc
mov
frstor
xchg
and
mov
adc
adc
jge
out
repz
add
arpl
cmp
cmp
adc
xor
movsl
dec
test
cld
mov
and
out
fidivrl
pusha
adc
dec
enter
push
pop
fdivl
mov
ret
scas
shlb
mov
test
or
cmp
dec
mov
add
fldt
mov
jmp
push
xchg
jge
nop
pop
int
bnd
bound
pop
icebp
push
push
dec
rep
sbb
out
lea
mov
mov
int3
cmp
test
sub
and
clc
loop
pop
cli
stc
ret
fstps
arpl
add
push
dec
aaa
pop
mov
and
mov
mov
cmc
cmpsl
fwait
mov
xor
stos
cmp
repnz
repz
imul
in
icebp
fisubrs
out
imul
mov
bound
out
sbb
mov
ds
and
enter
dec
jns
out
pop
fwait
adc
dec
je
mov
mov
outsb
popf
mov
sbb
loop
pop
mov
push
ror
in
test
lds
sti
addr16
popa
bound
adc
jns
mov
sub
mov
repz
cld
imul
xchg
sub
add
mov
mov
push
repnz
xor
sbb
and
inc
xor
sti
xchg
stc
push
cwtl
js
and
mov
bound
dec
adc
fbstp
push
mov
dec
cmp
mov
mov
imul
sub
andl
push
imul
pushw
stos
icebp
push
pop
sbb
lahf
xor
jmp
sbb
outsl
cwtl
out
test
imul
jg
insb
pop
scas
aad
or
pop
imul
mov
xchg
dec
mov
dec
out
mov
call
cmpsb
adc
mov
cmp
mov
icebp
cmp
inc
cmp
bound
jl
cmp
jns
jg
sahf
inc
and
fisttpl
mov
sti
jo
jne
cmp
sbbl
cmp
push
adc
stc
mov
xchg
insl
mov
mov
mov
pop
scas
rcll
ds
push
adc
jns
mov
lods
ret
jp
jae
dec
or
push
inc
dec
imul
xor
cmp
cmc
mov
cmp
sub
push
push
cmpsb
sti
mov
ret
and
stc
aaa
pop
fs
xor
sub
in
sbb
jl
adc
cli
pop
pop
fs
push
in
leave
lret
xor
cld
mov
fisttpll
je
shll
add
ds
loopne
push
divl
and
xchg
inc
xor
and
push
pop
inc
sarb
popf
jp
lods
repz
cmp
pop
xor
or
addr16
call
and
mov
popa
in
test
adc
es
xchg
insl
insl
push
ret
cli
lock
in
test
adc
mov
push
mov
sbb
mov
mov
fiadds
sub
lcall
fiaddl
push
jmp
rclw
sbb
and
mov
enter
fdivr
aam
mov
sub
mov
xor
pusha
push
cmp
int3
mov
scas
jmp
or
sbb
pop
mov
enter
mov
add
jle
clc
jbe
fwait
dec
les
ljmp
testb
insb
mov
lret
shr
lods
fsubrl
push
aad
add
adc
jle
add
mov
nop
push
add
adc
cli
cmp
cmp
mov
mov
push
mov
mov
push
inc
adc
sbb
fsubs
sbb
fwait
cmp
xor
cmc
icebp
sub
daa
data16
pushf
jae
cmc
out
mov
fldenv
movsl
aaa
ror
mov
mov
mov
int3
sub
and
es
xchg
lods
jo
loopne
mov
repnz
sbb
shl
push
xchg
std
popf
out
push
std
cwtl
sbb
enter
loopne
cmp
fdivrs
xchg
aas
jg
cmpsb
mov
cmp
jbe
and
aad
add
movsb
mov
pop
pushf
lcall
mov
cmp
or
or
push
or
xor
dec
or
js
in
loopne
or
es
adc
aam
adc
jp
pop
sbb
mov
jl
push
push
fwait
sti
mov
js
add
or
stos
adc
jne
in
mov
ret
mov
cmp
cmp
mov
leave
jnp
adc
clc
adc
jmp
cltd
pop
ss
fistl
push
mov
pop
add
scas
inc
fisubrs
mov
and
or
dec
fsubrp
nop
jge
das
lret
inc
push
mov
xchg
aam
daa
icebp
ret
cmp
aad
stos
jns
cmp
jo
xchg
jmp
loop
jae
adc
inc
or
das
sub
rcll
add
mov
push
das
jne
in
mov
notb
test
inc
pusha
mov
lcall
into
popf
or
stos
loopne
cld
orl
mov
mov
mov
mov
imul
xor
test
stc
add
outsl
push
andl
js
frstor
and
int3
xchg
jnp
mov
mov
push
gs
imul
sub
pusha
sbb
mov
mov
ds
aaa
xor
jae
repnz
in
lret
les
ss
sbb
adc
push
es
mov
pop
jg
cmpsl
lret
orb
adc
inc
dec
aam
mov
sti
jae
sbb
pop
gs
dec
inc
das
mov
mov
sbb
adc
mov
pusha
imul
cmp
jecxz
gs
jb
movsb
out
jmp
and
mov
sub
inc
adc
xchg
and
mov
cld
mov
ret
push
cmp
movsl
cmpsb
test
jne
je
mov
sbb
inc
sbb
rorb
mov
cwtl
int3
lcall
scas
jp
mov
pusha
dec
push
xor
xlat
and
push
clc
mov
adc
push
mov
out
mov
outsl
push
cmp
out
gs
aam
push
xchg
int3
mov
das
xchg
das
int3
sbb
popf
stos
sahf
cmc
rorl
and
shlb
bound
mov
gs
mov
incb
sub
fbstp
aam
jle
jne
insl
cltd
mov
pop
jge
push
mov
add
jne
cmp
rorl
xchg
mov
xchg
and
or
imul
and
pop
mov
leave
scas
xor
jle
test
xor
xor
jb
jmp
stc
add
adc
sub
lret
cmp
mov
mov
adc
outsl
jl,pn
aaa
into
cmp
mov
and
push
mov
ret
shrb
in
loopne
mov
fs
or
cmp
cmp
pop
shrb
mov
mov
jb
pop
sbb
push
aas
or
or
cmp
sti
or
popa
sbb
es
add
mov
mov
call
insl
das
imul
sub
ret
push
imul
mov
and
inc
jbe
or
or
test
pop
add
ficompl
add
popf
aaa
addr16
call
lods
lea
imul
mov
push
push
ret
inc
push
inc
inc
add
add
addl
iret
jbe
cmp
repz
nop
repz
in
sbbb
ss
mov
sbb
inc
cltd
loop
dec
lret
mov
mov
push
adc
fisubs
xchg
movsb
jge
pop
je
stos
xchg
rolb
xor
jg
test
lahf
jnp
rorb
into
pop
sub
sub
fstpl
std
outsl
lcall
les
pop
cmp
mov
mov
sti
cmp
inc
mov
mov
jae
jne
mov
jae
aad
fadds
cltd
das
add
mov
push
sub
sarb
pop
jae
push
lods
cmp
cmp
and
in
cmp
stos
jnp
cmp
pop
adc
imul
cmc
in
sbb
fistpll
and
cmp
cmp
add
mov
loope
std
jae
push
mov
sbb
popa
dec
and
fs
push
inc
mov
cmp
js
dec
pop
adc
int
or
mov
adc
xchg
mov
push
xchg
js
sub
out
pop
stc
sti
sub
pop
enter
mov
out
add
cmp
or
nopl
fs
lds
ljmp
out
jns
pop
dec
testb
inc
imul
jno
shlb
outsb
jbe
sbb
lcall
cld
out
lds
mov
iret
jl
gs
push
mov
aas
mov
xchg
mov
cmp
jge
popa
xor
fnstenv
xor
scas
insb
cmp
fwait
pop
xchg
cmpsb
inc
movsb
fnstenv
push
push
pop
std
mov
imul
xchg
jl
pop
movsb
add
scas
shrb
sub
shlb
xchg
fimull
jnp
popa
jp
sub
mov
clc
sub
sub
jle
aas
out
pop
push
cmp
cmp
xor
and
mov
jb
or
dec
pop
pop
repz
jmp
mov
dec
std
jle
lcall
enter
push
pop
add
mov
push
int
jns
pusha
sub
aam
rcrb
or
arpl
inc
in
add
rclb
shll
cmpsl
dec
mov
das
in
das
daa
lock
jmp
dec
add
add
aam
js
lods
jle
leave
hlt
jbe
add
xchg
inc
imul
aad
push
pop
pop
out
int
jmp
sub
pop
inc
add
ds
push
push
inc
pop
cmp
lret
or
pop
cmp
cmp
addb
sub
ds
ret
dec
jmp
sub
mov
dec
bound
add
inc
out
inc
xlat
in
gs
aam
dec
insb
pop
sub
xchg
push
outsl
dec
fsubs
ss
clc
add
notl
enter
pop
mov
fisttps
aaa
dec
cmc
call
pop
push
dec
jg
sub
rol
add
jmp
xchg
and
dec
mov
mov
movsl
jmp
mov
cmc
icebp
cmp
xchg
push
mov
mov
jne
jp
mov
lret
clc
scas
dec
xorl
jle
cwtl
popa
nop
mov
outsl
loopne
mov
ja
and
push
mov
lods
xchg
mov
mov
push
jne
popf
lcall
movsl
fisubl
andl
add
test
enter
mov
and
cmp
nop
dec
cmpb
pop
mov
cmp
xchg
in
std
mov
mull
test
in
mov
out
mov
mov
mov
add
stos
fisttpl
aaa
ffreep
push
and
hlt
add
and
dec
hlt
add
or
fisttpll
push
ret
pop
cli
mov
dec
cmp
jo
inc
or
adc
movb
dec
jg
ds
insb
fsub
das
cltd
insl
add
fsubrp
js
jno
jo
mov
ljmp
mov
daa
push
xchg
adc
lret
outsb
dec
test
rcrl
and
faddl
test
fsubs
fisubrs
mov
shl
fidivrs
repz
das
or
dec
ficomps
lcall
fcmovne
dec
cltd
sub
in
push
mov
inc
push
adc
mov
dec
sub
mov
mov
jg
adc
adc
mov
xchg
stos
pop
push
inc
ljmp
retw
call
sub
sbb
xchg
jns
pop
push
iret
movsl
lock
movsl
in
pop
mov
fstpt
pop
mov
xchg
sub
mov
pop
push
cmp
aas
out
cwtl
mov
push
stc
sbb
inc
pop
mov
test
push
xchg
in
mov
repz
popa
xchg
add
xor
addb
test
outsl
nop
pop
mov
or
mov
mov
sub
dec
push
addr16
mov
in
out
fucom
jge
or
out
mov
jae
sahf
xor
jecxz
lea
nop
rcrl
jb
in
ljmp
or
cmp
stc
jnp
sbb
stc
jmp
add
aaa
cmp
pushf
cs
nop
imul
xchg
repz
push
shlb
loope
push
add
std
aam
out
jl
stos
mov
clc
jp
add
jp
push
in
cmpsb
mov
jg
pop
push
jecxz
hlt
jmp
mov
js
iret
pop
mov
pop
mov
fadd
mov
xor
lret
cltd
mov
mov
in
dec
mov
imul
out
jnp
loope
addr16
stc
xchg
xor
inc
push
and
adc
and
xor
or
pop
mov
jecxz
push
fildll
mov
popl
cltd
lret
sti
dec
cli
ds
push
sbb
xchg
sub
and
aaa
mov
testb
sub
or
hlt
mov
sbbb
insl
in
sti
pushf
mov
or
sub
aaa
nop
mov
and
sti
jne
jmp
aaa
gs
pusha
mov
xchg
fs
pop
and
cmp
data16
insl
stos
leave
push
andb
push
inc
adc
and
sbb
xorl
mov
sbb
mov
sub
sbb
jno
dec
push
repnz
stc
imul
jmp
or
push
cmp
fidivrl
sti
push
scas
add
fimuls
loope
in
out
aaa
jecxz
or
movsb
sub
dec
cli
push
dec
mov
xlat
shrl
sbb
pop
pop
divb
inc
push
adc
xor
int
adc
ja
cld
xchg
cmp
bound
xor
jns
cmpsl
push
jns
sbb
mull
stos
es
insl
push
fstpt
iret
adc
stos
mov
ret
jnp
mov
pusha
aad
js
int
adc
add
out
or
dec
call
cltd
dec
rep
push
mov
push
xlat
or
adc
inc
and
loop
cs
fidivrs
mov
sti
or
or
dec
pusha
imul
xor
mov
or
lahf
adc
push
mov
outsl
inc
push
mov
pop
cmp
add
xchg
mov
cmp
incl
or
repnz
movsl
mov
mov
or
cwtl
push
movb
lods
mov
cmp
xor
mov
mov
xlat
repnz
adc
cld
push
and
insb
test
xchg
push
repz
fsubrp
adc
ret
fdivs
cltd
test
negb
push
add
pop
and
xchg
sub
cmp
pop
aaa
xor
adc
or
or
ds
sub
pop
xchg
nop
mov
fisttps
pop
xchg
psubq
cmpsb
mov
pop
xor
loopne
add
or
jl
int3
pop
pop
gs
inc
pop
cmp
or
out
mov
push
xorb
mov
inc
mov
loop
jp
out
test
add
lods
push
int
fistl
nop
clc
test
add
pop
fisubrs
jne
test
in
insb
dec
push
xchg
push
enter
xlat
aam
dec
xor
test
sub
or
es
xor
mov
std
stos
and
xchg
clc
leave
dec
loop
push
dec
and
push
shld
or
pop
dec
inc
popl
fcoms
adc
das
and
add
inc
ja
adc
sub
ds
stos
test
mov
daa
in
xchg
arpl
lods
mov
mov
lcall
xor
dec
mov
mov
sbb
add
enter
aad
xchg
dec
xchg
out
lds
sub
and
mov
decl
xor
cmpsb
mov
scas
mov
and
jno
pop
and
fcmove
out
test
scas
je
divb
jne
and
sbb
outsl
pop
in
orl
push
sub
jae
lret
je
stos
dec
imul
lods
jo
stc
jb
and
jne
stos
mov
lods
jb
add
mov
lret
lods
ret
outsb
mov
push
sub
mov
lret
mov
ja
es
lret
outsb
pushf
ja
or
pop
push
jecxz
lods
js
mov
pop
dec
jbe
mov
cmp
jae
xbegin
jl
or
out
lret
dec
mov
pop
adc
mov
inc
sub
fisubrl
or
aam
lds
movsb
dec
fnstsw
inc
inc
add
cmp
test
mov
fildl
mov
and
mov
push
pusha
xchg
movsl
mov
sbb
mov
lcall
and
xchg
and
push
or
and
push
int3
stc
mov
insb
ret
or
loopne
mov
insb
mov
loop
and
cmp
jmp
loope
inc
cltd
loop,pn
xor
das
or
sarl
and
mov
clc
sbb
sbbb
fistps
fsubs
aaa
sbb
dec
dec
push
push
iret
mov
or
fcmovnb
push
lds
push
pusha
push
leave
add
pop
xchg
movb
push
popf
or
jae
stc
out
aam
outsb
outsb
sbb
sbb
sbb
pushf
jmp
jl
insb
ljmp
stos
cs
icebp
ret
ss
add
adc
mov
lock
push
outsb
imul
mov
frstor
or
mov
jle
dec
dec
or
div
sahf
or
or
xlat
sbb
sahf
ret
push
test
xor
das
cmp
movsl
dec
inc
push
test
movsl
test
imul
je
scas
xchg
test
mov
rcl
ds
push
cld
ret
sbb
cs
xchg
inc
hlt
xlat
lret
push
fxch
popa
cmp
mov
dec
call
cmpl
mov
in
lahf
outsl
jae
sbb
int
scas
pop
out
xchg
dec
push
jne
hlt
sub
mov
ficomps
jmp
dec
dec
push
sub
pop
lcall
or
lds
dec
inc
mov
popf
repz
scas
or
es
xchg
push
jbe
les
xor
cld
fisttpl
sbb
jnp
push
push
jle
jg
in
rorb
lds
xchg
cltd
jne
xorl
fisubrs
xor
sub
cmp
rep
fdivrs
sub
fiadds
test
leave
data16
test
push
jne
mov
loop
fdivrs
cwtl
pop
dec
and
push
pop
test
lds
decb
mov
adc
jle
mov
fmull
lret
ror
imul
mov
and
add
pop
pop
push
inc
in
add
cmp
in
shll
add
or
mov
cmpsl
jo
mov
call
aas
mov
xor
cmpsb
data16
mov
fs
lahf
addl
xor
ret
mov
pop
xor
cmc
in
xor
out
mov
cmc
scas
ret
pop
pushf
test
cmpsb
sbb
xchg
mov
les
xchg
hlt
pusha
dec
and
loopne
pop
sub
jecxz
push
sub
out
inc
add
mov
je
cmp
fsubr
mov
ds
xchg
jo
inc
jnp
push
xchg
sub
push
lock
and
shrb
sub
add
xor
pop
mov
mov
or
lods
inc
sub
dec
push
in
outsb
mov
movsl
cmp
pusha
je
loopne
sbb
les
inc
pop
jmp
jecxz
call
sbb
cmc
jne
je
movsb
mov
sub
jg
ret
fucomp
lock
lret
jmp
mov
sbb
mov
mov
das
pop
mov
adc
and
add
jno
pop
fwait
out
paddb
cltd
xchg
xor
add
jge
adc
adc
subl
and
xor
imul
mov
inc
xor
push
dec
pop
adc
das
jbe
push
mov
mov
mov
fidivrs
and
jnp
sbb
or
xchg
fdivrs
jo
loopne
cltd
sbb
stc
lods
fwait
dec
rcrb
call
mov
lcall
mov
stos
or
jl
xchg
cwtl
int
paddusb
inc
cmpsb
mov
push
add
dec
cmp
sbb
adc
int
lods
jmp
cltd
mov
ljmp
push
fcompl
movsb
int3
xchg
scas
test
push
jae
push
inc
movb
cli
movsl
push
popa
xchg
mov
pop
mov
cmp
mov
andl
push
push
mov
sub
jl
call
xchg
push
test
jnp
int3
xchg
decl
rcl
pop
sub
jmp
shrl
cmp
out
sub
or
jecxz
jb
rcl
insl
mov
push
pop
add
pushf
add
inc
cmp
scas
das
mov
and
cmp
aas
inc
jae
popa
pop
cmp
fildl
pop
xor
nop
adc
stos
xchg
jbe
push
mov
in
and
inc
mov
fidivl
inc
mov
data16
xchg
push
cmp
or
mov
addr16
push
push
movsb
mov
jo
enter
dec
fs
jp
push
test
or
jl
and
aaa
adc
insl
sbb
mov
mov
cmp
clc
mov
mov
push
jecxz
jle
push
dec
xchg
jle
xor
negl
data16
repz
movsl
out
pop
enter
je
cmc
dec
aam
jge
mov
adc
popa
outsl
call
dec
xor
test
pop
stos
fbstp
jno
add
hlt
imul
cmp
clc
iret
add
mov
mov
mov
pushf
lock
lahf
ret
cmp
jg
divb
fisubrs
fstps
out
or
and
cmp
lcall
sbb
in
or
mov
jns
or
das
jbe
jge
shrl
jmp
stos
dec
adc
push
push
cmpsl
mov
and
mov
test
getsec
jge
mov
test
cmp
cli
imul
pop
adc
lret
xchg
inc
inc
mov
sbb
stos
fs
movsb
ret
int
gs
inc
scas
movsl
dec
jmp
shl
imul
into
jmp
inc
aad
sub
test
pop
std
push
mov
arpl
push
inc
inc
pop
sbb
lahf
add
xchg
loopne
hlt
negl
lds
or
loopne
mov
push
cwtl
testl
mov
push
sbb
insb
xchg
mov
add
movsl
inc
addb
subl
imul
and
dec
inc
les
andl
sbb
int3
mov
mov
sub
xchg
movl
or
ljmp
or
test
xor
xchg
and
daa
push
mov
inc
sbb
pop
dec
movsl
lds
and
xor
add
mov
fisttpl
pushf
mov
fs
movsb
mov
fsubl
xchg
cwtl
xor
fdiv
jp
popa
sub
cmp
jge
xchg
popa
out
inc
mov
inc
mov
dec
imul
jo
mov
fldenv
insb
add
xchg
pop
xchg
fwait
push
test
cmc
and
stos
xchg
leave
inc
leave
pusha
jnp
xor
xor
in
lods
ret
aad
inc
sub
and
jg
shr
dec
pop
enter
cwtl
push
insl
add
jmp
inc
cmp
popf
mov
fs
mov
fcoms
enter
test
data16
dec
out
sub
lret
jmp
xor
stc
xor
mov
dec
push
xchg
jl
mov
mov
in
int3
test
push
out
sbb
iret
es
and
pop
push
stos
mov
popf
sti
add
push
cmp
adc
mov
xchg
sub
lret
cmp
xchg
cmp
nop
xchg
cli
fnstenv
or
sub
repz
mov
push
ror
cltd
xor
xor
jmp
ja
daa
int3
loopne
cmp
mov
mov
mov
pusha
into
pop
pushf
movl
repz
mov
push
jecxz
mov
ret
cmc
jnp
jle
mov
jge
pop
push
xchg
aad
lahf
dec
pop
mov
or
aaa
add
out
mov
nop
mov
push
fsubl
add
popa
ficomps
cltd
mov
dec
ljmp
fimull
mov
cmpsb
mov
or
lods
loope
ds
lods
mov
ret
incb
int3
in
pop
aas
pushf
jecxz
jecxz
mov
aam
in
shlb
mov
jl
outsb
mov
inc
clc
sbbl
out
or
add
pop
mov
push
adc
xor
xlat
aam
push
inc
aad
fcomps
xchg
and
mov
or
test
pop
or
stos
cmpsl
pushf
insl
test
scas
jg
in
sbb
cli
in
ret
pop
jl
pusha
push
cld
not
xchg
in
cmp
lahf
mov
fwait
cmpb
jns
lea
enter
dec
mov
mov
jge
mov
lahf
and
call
insl
mov
push
xchg
outsl
sbb
add
xor
inc
repz
push
lret
insl
leave
mov
push
push
clc
mov
les
cmp
int3
lds
movsw
or
mov
jne
out
mov
mov
mov
push
sub
das
sub
xchg
dec
fistpll
jg
mov
dec
jle
mov
je
add
cld
pop
jmp
xor
test
in
dec
pop
cmpsl
in
int3
sbb
sbb
loope
inc
jno
jmp
test
sub
cmp
cmp
pop
inc
sbb
jmp
fadds
iret
push
sbb
sahf
lret
aaa
sarb
popf
pop
jnp
jecxz
mov
jp
stos
inc
dec
in
pop
dec
pop
lock
mov
and
mov
push
xlat
ss
pop
or
imul
adc
lea
jno
xchg
out
xchg
mov
dec
leave
mov
sub
lcall
add
mov
add
xchg
inc
jmp
mov
cmp
add
mov
mov
sarl
xor
adcb
xor
iret
fstps
push
jle
popf
cmpsb
insl
aaa
frstor
lahf
add
lods
ret
jle
mov
cmp
add
xchg
in
dec
xor
mov
pop
loopne
jnp
enter
or
or
push
cmp
dec
cli
pop
subl
bound
inc
dec
ja
push
bound
repnz
fstpl
lock
push
pop
and
add
fcoms
imul
es
xlat
in
or
shlb
mov
scas
sbb
sub
pop
out
fwait
rolb
lcall
fadds
mov
mov
les
andl
adc
movsl
das
sub
arpl
sahf
sub
cmp
loop
xlat
stos
repnz
mov
sub
mov
xchg
push
adcb
dec
pop
mov
xor
mov
test
ss
outsb
xchg
xchg
add
idiv
and
xchg
xor
xor
inc
push
rcr
xlat
mov
out
repnz
or
mov
add
adc
xor
stc
test
pop
test
shll
xchg
in
cltd
pushf
lret
cmp
cmp
pop
mov
cltd
sbb
mov
aam
ss
or
cmp
adc
pop
cmp
aaa
mov
or
push
jne
push
inc
add
andl
or
mov
insb
lret
or
sub
xchg
addr16
lcall
mov
cmp
jp
inc
mov
fidivrl
xchg
add
fsts
insb
lods
sbb
jns
pop
mov
jle
es
sbb
pop
scas
xchg
push
adc
ja
push
xlat
lss
cmp
mov
mov
push
adc
pop
mov
mov
outsb
sub
insb
aam
push
adc
dec
pusha
push
inc
jne
mov
stc
inc
out
mov
or
mov
sub
in
out
gs
and
mov
aaa
fiaddl
les
cmp
aam
out
ret
mov
cld
test
aaa
mov
insw
aam
push
fisubl
lahf
ss
add
sub
mov
pop
pop
gs
ljmp
ret
adc
popl
cmp
lret
cmc
je
sub
aad
test
arpl
std
xchg
pop
test
inc
pop
and
rclb
mov
int
imul
push
xchg
fists
inc
in
jo
sub
fstpl
and
jg
xor
pop
cltd
sbb
mov
push
jnp
divb
ret
and
or
mov
aam
movsl
sbb
outsl
lds
aas
popf
and
pop
scas
cmp
ja
ret
add
dec
dec
and
adcb
mov
ja
cwtl
fmul
enter
sub
mov
mov
cmp
jmp
ret
ljmp
xchg
and
mov
xor
jmp
in
inc
fadd
int3
pop
dec
push
outsl
int3
sbb
sbb
call
pop
fbld
je
stos
sub
inc
aaa
jnp
cmc
dec
adc
mov
fsubrl
scas
adc
div
pop
fistps
mov
xchg
push
xchg
in
sub
pusha
jo
jmp
cld
cmc
sbb
cmpsl
pop
out
jecxz
enter
jns
mov
ret
dec
aas
sbb
xchg
adc
nop
js
sahf
pop
mov
mov
inc
add
shll
sbb
int3
mov
and
xchg
test
mov
inc
cmp
mov
inc
arpl
xor
leave
shlb
mov
ret
sub
sti
lret
shr
ret
movsb
dec
test
add
mov
scas
adc
inc
in
stos
hlt
xchg
pop
pop
outsb
jge
mov
in
jb
testb
adc
or
data16
mov
inc
out
lret
adc
pop
inc
pop
or
cmp
sti
mov
pop
mov
xchg
sbb
out
mov
shl
fcom
in
dec
adc
mov
xor
inc
sbb
movsb
roll
stc
pop
pop
iret
in
roll
push
jno
lcall
fcoml
in
jmp
or
sub
shrl
sub
push
fucom
into
sbb
or
sbb
inc
xor
sbb
mov
xor
test
sbb
leave
les
xchg
sbb
fwait
cmp
stos
jne
xchg
insl
addr16
or
popf
inc
pushf
ffree
add
icebp
pop
or
xchg
pop
shlb
rcll
adc
mov
dec
push
andl
je
sahf
or
sub
sbb
shll
icebp
adcl
mov
dec
sbb
aam
fcmovnu
imul
dec
imul
push
pop
ja
jne
cmp
scas
jb
sbb
sti
mov
incl
push
jecxz
lret
pop
xlat
jg
or
mov
daa
inc
inc
shll
rcl
int3
cmp
xchg
and
mov
jnp
int3
out
scas
push
xchg
inc
push
iret
pop
cmp
cld
jl
stos
jmp
lret
clc
divb
sub
adc
scas
negl
jbe
inc
ljmp
scas
push
sbb
test
xchg
sub
neg
or
xchg
sti
js
push
repz
cmp
xlat
dec
out
mov
addr16
pusha
gs
dec
scas
and
mov
scas
jecxz
movsb
xor
pop
les
rorb
pop
xchg
jns
jmp
bound
jmp
push
jae
inc
je
sbb
je
aad
out
push
cmp
out
leave
dec
xor
gs
pop
scas
lea
mov
xchg
sub
mov
cmpsl
into
xor
mov
jmp
mov
dec
std
fdivrs
testl
and
sbb
mov
cmp
push
cmp
lret
pop
daa
sbb
into
fisubl
sbb
dec
xor
pop
fisttpl
jmp
ret
cmp
ss
test
mov
stos
imul
jno
stos
inc
mov
sbb
and
or
inc
out
jns
xchg
sbb
fsubs
arpl
enter
js
sbb
div
jmp
icebp
jne
mov
push
aaa
push
cmpsb
adc
xor
adc
cmp
insb
mov
jns
imul
and
sbb
mov
enter
outsl
ret
mov
or
test
test
loop
dec
dec
and
das
popa
sub
pop
pop
ljmp
mov
cmp
push
push
mov
inc
xchg
je
adc
sbb
pop
dec
jmp
les
inc
cmp
test
popa
stc
cwtl
jl
fisubrl
mov
hlt
add
sub
xchg
mov
xor
test
dec
jle
xor
in
test
push
jle
popf
or
pop
inc
and
loop
xor
js
sbb
inc
and
bound
loope
lds
cmp
sub
xchg
lret
aaa
and
and
or
test
dec
push
mov
adc
jae
test
push
and
fcoms
jns
inc
xor
in
push
aad
add
outsl
scas
clc
mov
add
stc
adc
nop
lret
push
movsb
into
das
inc
mov
in
stc
mov
mov
frstor
pcmpeqd
add
jg
lods
pop
test
insb
loopne
test
or
xchg
push
cmp
out
loope
orl
jmp
mov
or
pop
pushf
add
or
into
inc
rolb
fistpl
fistpl
into
lds
mov
cld
lret
mov
xor
andl
jl
push
or
mov
lods
mov
dec
add
jns
mov
xor
icebp
adc
adc
pop
xor
shrb
xchg
sbb
mov
sbb
push
sub
aaa
movsl
cmp
iret
cmpsb
clc
mov
pop
mov
gs
cmp
das
filds
fdivl
sbb
repnz
or
dec
and
enter
push
or
and
inc
mov
xor
pop
cmpsb
jb
inc
ja
scas
add
jae
push
aam
push
xlat
add
xchg
scas
push
sti
jne
jge
mov
pop
mov
mov
mov
xor
sti
xlat
stos
jns
xchg
cmpsb
xchg
mov
cmp
in
jno
mov
jle
iret
jae
dec
xchg
aas
jg
lds
xchg
and
inc
jns
mov
sub
scas
fstl
mov
outsb
flds
inc
xor
stos
into
jl
mov
mov
add
hlt
and
std
sub
roll
mov
pop
mov
inc
mov
je
xor
sub
lods
arpl
std
loopne
in
mull
mov
enter
add
ja
xchg
test
insl
jnp
inc
xor
pop
scas
test
or
cmpsl
pushf
mov
mov
outsl
inc
mov
jmp
adc
or
jns
xorb
dec
push
fsubrs
cmp
das
or
cltd
mov
pushf
and
es
das
xor
gs
push
mov
pop
xor
adc
mov
gs
bound
outsb
mov
stc
dec
mov
sub
push
xchg
insl
xor
cmpsl
inc
mov
xchg
push
xchg
dec
add
pushf
dec
xlat
mov
pop
mov
out
icebp
xor
addr16
or
sbb
mov
lods
int3
pop
psubusb
out
aam
push
popf
add
jae
push
jg
or
cmp
aam
scas
loopne
es
push
inc
int
push
imul
xchg
mov
add
ja
out
imul
mov
or
pusha
in
jl
pop
sbb
mov
mov
out
mov
jle
fildl
arpl
inc
loopne,pt
pop
scas
mov
outsb
lea
les
or
xchg
adc
int3
lods
cld
orl
stos
pop
sahf
push
pop
sti
outsb
add
mov
int3
dec
cmc
sbb
mov
inc
pop
loope
loop
lahf
inc
outsl
arpl
pop
sahf
inc
inc
sub
xlat
fildll
inc
xchg
clc
data16
aad
test
pusha
push
sti
or
repnz
adc
push
mov
and
or
and
inc
js
xchg
js
and
divl
jnp
push
add
xor
test
jnp
jnp
mov
pop
movsb
call
insl
mov
iret
test
jb
jo
rcl
sbb
add
pusha
out
es
mov
fdivl
and
aaa
popa
mov
add
jmp
sbb
pop
jl
movswl
mov
cmp
xor
jo
push
jb
xchg
mov
shrl
mov
sbb
cwtl
test
add
push
push
adc
repz
repnz
shll
int3
pop
or
add
inc
out
fisubs
add
stos
add
inc
hlt
add
out
std
pusha
dec
xor
sub
fistpl
dec
xchg
ja
insb
dec
sar
loopne
mov
or
dec
sub
pop
dec
adc
lret
jb
bound
insb
in
or
and
filds
xor
jbe
adc
mov
cwtl
mov
lahf
imul
hlt
push
jl
push
ja
sub
jmp
ja
cmp
pop
dec
aas
ficompl
mov
bound
hlt
cmp
adc
call
aas
fs
xor
xchg
in
fcom
shr
dec
dec
test
mov
cltd
andl
aas
adc
inc
sub
adc
imul
push
jbe
jmp
roll
xchg
cltd
sahf
or
jge
xor
push
mov
int3
sbb
or
loop
and
call
push
jle
mov
sbb
dec
or
mov
dec
and
dec
lcall
repz
mov
sub
dec
hlt
icebp
les
outsb
adc
cmp
add
adc
push
xor
push
sbb
sub
rcrb
or
mov
lea
push
rcll
sub
adc
push
dec
addl
ja
mov
in
jl
shll
aas
add
jmp
fldl
push
adc
lcall
mov
stos
js
lods
testl
mov
jmp
popa
mov
sub
loop
into
mov
pop
imul
lods
xchg
call
movsb
xlat
push
cld
mov
aad
repz
push
pop
mov
je
pop
dec
mov
inc
lcall
iret
cmp
xor
mov
xchg
push
rcrl
out
jnp
and
outsl
lds
inc
in
mov
ss
mov
sarb
int
lea
lds
lds
fs
je
pop
push
scas
andl
je
mov
inc
pop
test
aaa
jp
inc
jecxz
scas
xchg
rclb
cmp
loop
mov
jae
aam
mov
dec
repnz
mov
data16
std
xchg
adc
or
inc
out
mov
fsubrl
aad
push
aam
cmp
popa
mov
lods
stos
fidivrs
ds
das
lds
hlt
insb
add
fimuls
push
cmpsl
cltd
push
jp
das
outsb
popf
jmp
leave
inc
sub
sahf
aas
imul
pop
mov
test
push
cs
call
add
jno
stos
push
insb
and
xchg
xchg
mov
sub
shrl
push
xchg
mov
mov
loope
sarl
loope
mov
incl
mov
stos
jle
fisttpll
fnsave
xchg
outsb
stos
pushf
ss
sbb
imul
orb
lahf
clc
lods
ss
repz
cli
cmp
add
cmc
sbb
fdivl
lcall
or
iret
lcall
pusha
scas
leave
outsb
inc
es
or
in
inc
fldcw
add
out
int
sub
add
out
ja
mov
cli
lret
mov
pop
push
push
mov
out
cmc
xchg
insl
ja
fdivrs
lahf
scas
std
push
and
fcoml
mov
push
arpl
mov
jl
imull
adc
ret
test
loope
jmp
or
scas
adc
push
lret
push
jle
in
repnz
mov
mov
insb
scas
sbb
jg
jns
andb
xor
push
and
out
cmc
pop
outsb
cmpsl
mov
aas
incl
lret
jmp
lods
mov
jnp
xchg
sbb
push
jmp
lret
jp
add
movsb
fdivp
xor
inc
imul
loope
dec
pop
in
jg
sbb
sti
mov
cmp
mov
adc
sub
sbbl
xchg
mov
mov
push
inc
push
sbb
cmpsl
dec
ret
or
fs
scas
jl
fcoml
int
rorl
mov
aam
jg
xchg
sar
jl
mov
das
push
pop
arpl
and
aad
add
jo
mov
lock
shlb
mov
scas
xchg
in
cli
lock
mov
imul
ror
push
nop
test
sbb
mov
in
push
mov
jno
pop
add
mov
and
mov
lods
dec
mov
add
jne
pop
out
lret
popf
gs
xrelease
aaa
outsl
pop
xchg
jmp
in
sbb
scas
outsb
push
int3
and
std
stos
mov
nop
ja
mov
sub
call
hlt
scas
outsl
es
in
vmread
mov
gs
sub
mov
cmp
dec
shr
sub
adc
jns
mov
popa
push
mov
add
je
pop
popa
loope
mov
pusha
add
and
mov
rcl
int
int
repnz
mov
aas
push
popa
insb
lods
pop
dec
pcmpgtb
ja
lcall
add
ret
out
adc
arpl
and
and
mov
pop
dec
roll
pop
jmp
mov
add
sub
sarl
rcrl
xor
fnsave
mov
xor
jne
aam
mov
fsubs
iret
scas
and
in
sbb
je
pop
cli
mov
jnp
sub
xchg
mov
dec
fsubrs
std
ljmp
mov
adc
rcrl
add
push
xor
xchg
shlb
enter
cmp
mov
push
sbb
orl
lods
lods
bnd
adc
mov
mov
cmp
jmp
test
jb
in
xor
stc
push
es
int3
repz
push
sbb
outsl
insb
cltd
cld
cmp
push
mov
inc
ja
pop
aaa
pop
mov
out
mov
ja
push
lods
inc
xchg
inc
dec
mov
lahf
mov
jg
fs
not
push
mov
inc
xchg
jmp
and
lods
outsb
push
sbbb
cltd
sbb
insl
sub
sbb
mov
repnz
mov
pop
addr16
cmpsb
mov
jbe
repz
pop
sub
divl
xlat
es
jecxz
mov
aam
push
cs
stos
sub
test
enter
add
cmp
cmc
lock
aaa
in
nop
sub
or
add
movsb
mov
adcb
movsb
fwait
adc
and
sbb
cmp
mov
sub
mov
jne
mov
jge
ficomps
sub
add
push
cmp
mov
test
mov
inc
xlat
inc
pop
enter
aad
push
fidivrs
sub
xchg
subb
push
in
mov
jge
scas
mov
movsbl
les
and
pop
jg
shlb
and
push
xor
movsl
jbe
inc
lcall
inc
inc
fistps
and
sbb
and
test
xchg
cmpsl
pop
or
sub
sub
push
out
rorb
test
movsb
pop
jle
adc
xchg
sbb
in
or
xor
xchg
shrb
aam
xor
adc
add
shlb
scas
out
add
daa
sub
pop
and
movsl
cmp
sub
inc
inc
mov
out
xchg
sub
adc
in
out
sub
das
add
inc
daa
xchg
cmp
loope
xchg
adc
popa
mov
pushf
xchg
push
jecxz
lcall
imul
xor
jmp
sbb
pushf
out
jecxz
xor
in
jl
aas
call
enter
mov
adc
in
lea
sbb
repz
push
mov
cmp
add
aaa
mov
or
cwtl
add
pop
shrl
sahf
loopne
xlat
ds
or
lcall
sub
scas
repnz
pop
mov
or
mull
shll
push
push
popl
lods
adc
adc
inc
and
jno
gs
cmp
mov
ds
push
ljmp
dec
cmp
sar
subb
cmpsb
inc
and
push
mov
adcl
mov
aas
das
mov
sub
dec
clc
cs
bound
ffree
inc
push
and
lock
scas
in
xorb
lock
inc
cmc
xchg
lret
xor
pop
jl
xor
inc
push
mull
lea
fisttps
jns
or
mov
jg
sub
rorl
sbb
mov
aaa
into
dec
test
sub
mov
pop
mov
movsb
lds
dec
xlat
js
inc
sbb
push
dec
push
push
xor
pop
push
sub
imull
lea
insb
je
pop
pop
fisttps
mov
and
cmp
outsb
push
cmp
inc
push
outsl
andl
jl
cmpsb
cmpsb
aaa
pop
fs
pusha
loopne
js
or
ja
and
inc
hlt
ret
xor
pushf
adc
insl
fsts
mov
mov
inc
pop
repz
hlt
add
data16
xlat
jb
or
sbb
mov
or
les
mov
js
arpl
fdivp
hlt
pop
test
xor
sbb
push
mov
push
xor
add
std
aaa
arpl
sbb
mov
push
mov
dec
sub
mov
cmpsb
adc
pop
pop
inc
jle
xchg
sbb
scas
mov
test
mov
mov
inc
call
mov
out
jge
arpl
xor
add
jbe
cld
inc
out
ror
shlb
push
sbb
pop
arpl
std
in
pop
pop
lock
shlb
push
iret
jbe
nop
or
fists
lods
jp
mov
and
dec
inc
jp
mov
imul
xchg
ret
xchg
dec
loop
jne
xchg
push
jbe
adc
mov
xchg
mov
addr16
cltd
inc
add
sti
jle
movsl
fists
fistpl
sub
mov
pushf
ds
push
subb
dec
out
jae
shl
out
ja
les
rdtsc
mov
int3
movsb
push
repz
les
pop
stos
jb
mov
inc
cli
leave
in
outsb
jae
push
lds
cmpsb
inc
lcall
push
inc
jmp
mov
fcoml
and
fs
mov
jmp
mov
scas
sub
xchg
imul
mov
fdivl
ja
cmp
aam
mov
dec
inc
cmpsb
shrb
leave
or
adc
cmp
cltd
imul
dec
or
daa
or
push
push
inc
sub
mov
lahf
js
mov
jp
and
outsl
push
mov
mov
pop
inc
inc
inc
xor
aad
and
loop
mov
mov
mov
pop
sub
mov
jo
sahf
sub
popa
repnz
cs
mov
mov
pop
rep
mov
xchg
and
pop
inc
push
push
push
mov
pop
pop
outsb
mov
mov
ss
call
repnz
pop
jg
int3
int
inc
jle
and
add
imull
dec
nop
cmp
leave
sub
fcmovu
lds
sbb
jb
sbb
mov
push
push
and
cltd
bound
es
mov
add
xor
push
test
out
cmpsl
stc
ljmp
aaa
pusha
mov
ja
jmp
cmp
ja
lods
inc
lret
mov
xchg
jl
adc
adc
loope
jo
push
scas
lcall
imul
test
cs
xor
push
ja
sub
dec
mov
sbb
pop
add
cmp
jle
sahf
lret
sti
loop
insl
insl
test
addr16
jp,pn
insl
sub
sub
mov
int
xchg
ja
rclb
aaa
add
cmp
dec
mov
sahf
xchg
sbb
int
sub
pop
mov
jno
sbb
rcr
lods
outsb
pop
pop
cmp
hlt
imul
sub
push
add
or
xor
mov
mov
out
test
cmp
fsubr
pop
insl
or
cmp
dec
pop
mov
mov
inc
and
mov
insl
leave
aam
pop
fwait
dec
fcomi
out
inc
or
xor
sti
scas
jb
mov
inc
into
lea
cld
call
pop
cwtl
cmp
push
dec
lods
lret
dec
in
aaa
out
enter
repnz
fsubs
mov
int
out
mov
mov
mov
cld
cli
lret
mov
add
aam
xchg
icebp
jbe
cli
pop
add
int3
stos
jecxz
out
jge
xchg
repz
mov
fdivl
or
sbb
aam
mov
push
test
or
adc
in
jle
push
mov
jbe
stos
in
mov
in
mov
data16
loop
mov
ds
sub
mov
stos
inc
jnp
enter
xor
cmp
pop
cmp
int3
sarl
add
adc
mov
les
xchg
rcrl
mov
sti
stos
fidivl
push
jmp
stc
out
dec
enter
sbb
mov
dec
sar
fwait
xor
push
lods
dec
xor
pop
push
mov
insb
push
sbb
popf
ja
xlat
cld
in
inc
int3
push
push
inc
shrl
add
ficoms
sbb
push
xorb
sahf
fmull
xchg
std
popa
push
fmull
xchg
mov
xor
dec
test
out
insb
xchg
mov
insl
ja
fcomp
push
push
or
pop
push
mov
xchg
ret
mov
repnz
dec
out
jne
jge
sbb
pushf
sbb
adc
ficompl
pop
loope
cmpsb
and
sbb
mov
xor
movsl
xchg
js
mov
or
add
outsl
lock
out
sub
adc
test
adc
out
xchg
pop
xor
add
ret
arpl
loope
dec
sbb
mov
ljmp
and
jle
loop
ret
fists
loopne
out
iret
mov
int3
daa
out
add
sbbb
insb
sarb
push
cmc
adc
ret
xor
xchg
out
pop
inc
sub
sti
jne
rcrl
jl
inc
imull
add
aas
inc
arpl
mov
mov
push
cmpsl
cmp
push
xor
or
jno
out
mov
cmp
insl
scas
inc
mov
xchg
les
aaa
popf
xchg
out
sbb
jno,pt
pop
mov
in
cltd
mov
or
pop
ret
sub
stos
lret
cmc
fs
jle
mov
pinsrw
push
aaa
xor
cltd
inc
flds
popf
inc
ja
mov
push
fstps
std
out
repnz
lock
out
cmpsb
movsl
or
and
pop
cmp
sub
cwtl
fwait
in
mov
out
pop
adcb
stos
mov
cmp
movsb
xor
jl
push
inc
or
dec
dec
lret
mov
scas
idivb
jp
jns
dec
sbb
pop
adc
fwait
xor
add
rcrb
ss
sbb
repnz
dec
scas
lahf
xor
lds
popf
icebp
loopne
into
es
mov
push
mov
inc
sub
jg
ret
leave
pushf
mov
push
pop
fdivs
add
fwait
dec
xchg
fildll
jg
jmp
test
pop
xor
in
dec
cmpsb
bound
daa
push
pop
xchg
out
and
xor
scas
imul
int
dec
arpl
imul
std
stos
out
or
pop
jmp
imul
mov
cmp
pusha
mov
dec
mov
fimuls
out
or
xor
jns
out
lods
leave
in
mov
movsb
adc
cmc
adc
insl
inc
fdivrs
push
inc
adcl
mov
mov
mov
pushf
lcall
icebp
pop
fstpl
lahf
inc
push
jmp
sahf
or
mov
popa
pop
push
jno
lea
into
aaa
sub
inc
out
out
jmp
fs
lea
icebp
nop
jmp
stos
sbb
xchg
clc
movsb
adc
mov
xlat
aas
mov
mov
jbe
mov
out
fldcw
insb
jb
push
in
cwtl
or
sarl
sub
cli
js
mov
fs
push
stc
mov
xor
mov
lods
scas
push
sbb
stc
lcall
sti
add
inc
sbbl
les
jl
sbb
lcall
aam
cltd
in
push
adc
mov
sub
daa
clc
incl
rol
jnp
xchg
sbb
push
test
les
pop
or
scas
idivl
js
enter
stc
pop
add
aad
fsubrl
jo
add
pop
sbb
push
icebp
jge
addr16
inc
and
mov
pop
mov
add
sbb
pop
daa
dec
sub
pusha
xlat
inc
push
cmp
pop
sbb
mov
cmp
mov
hlt
jge
sub
in
bound
sbb
push
xor
iret
cmp
sbb
ss
add
je
inc
mov
or
orl
test
inc
cvtps2pi
mov
push
ss
mov
daa
out
and
test
shrl
stos
inc
pop
mov
mov
mov
sub
clc
add
inc
lods
and
or
sbb
popf
mov
add
cmp
jmp
mov
ljmp
mov
int3
or
nop
outsl
add
rcrb
lock
test
push
pop
dec
mov
cmp
lret
lea
outsb
xchg
mov
jg
mov
jmp
lea
sbb
sahf
xor
jns
into
jg
mov
repnz
out
lods
sub
mov
push
mov
les
repnz
xlat
repnz
insl
mov
and
pop
cmc
dec
int3
in
cmc
subl
mov
jb
jl
cmp
daa
fwait
and
cmc
popf
shlb
gs
fstpl
in
cld
adc
movsl
push
nop
cltd
cltd
ljmp
adc
sbb
pop
mov
pop
xor
out
cmp
push
adc
sub
test
xor
inc
fldcw
clc
xchg
xor
mov
cmpb
pop
movsl
sub
fcmovnb
and
pop
cmp
and
in
jns
loope
xlat
aaa
push
shrb
in
inc
pop
shl
arpl
js
lea
push
fs
jns
mov
jmp
ds
jp
cmpsb
jmp
cmp
lock
and
push
loopne
mov
mov
dec
adc
ret
lea
fmulp
push
movsl
xor
push
nop
movsb
in
negb
xor
pop
xor
xchg
movsl
and
push
stos
fldcw
dec
fdivs
lods
sub
dec
jmp
inc
mul
repnz
xchg
adc
xor
inc
in
insb
outsl
xchg
xor
rcrb
mov
fs
mov
lock
xorl
movsl
sbb
in
sbb
sub
test
cmpsl
or
ret
sub
es
add
aam
push
imul
repz
and
aam
stos
hlt
into
mov
mov
or
repz
imul
cmp
inc
icebp
xchg
aad
and
xchg
add
stos
cmc
push
stos
in
push
mov
mov
stos
jnp
inc
aad
pop
cld
adc
dec
cmp
sbb
test
xor
out
iret
push
rcrb
jmp
sti
xchg
in
cmpl
int
ja
ds
lods
ficoms
stc
adc
push
jle
sbb
in
enter
push
stos
loop
add
sbb
push
lahf
aaa
into
mov
add
loopne
cs
cmp
pop
loope
loopne
nop
pusha
dec
xchg
imul
mov
mov
add
stc
adc
cmp
pop
lds
xor
cld
add
enter
cmpb
xchg
shlb
pop
add
inc
out
repnz
push
ret
xor
dec
test
popa
cmp
jl
mov
mov
dec
pop
adc
addr16
leave
xor
fistpl
cmp
sbb
mov
add
xlat
int
inc
or
sub
pop
sbb
arpl
lea
gs
sub
popa
adc
scas
jg
cmp
enter
or
xor
inc
mov
sbb
fisubrs
or
add
or
add
or
push
xchg
out
bound
lcall
xchg
iret
add
push
fcomip
or
test
cmp
js
fidivl
cltd
or
fs
jnp
dec
jo
dec
aas
cwtl
les
roll
pop
dec
std
leave
fwait
cmpsb
xchg
mov
repz
jb
inc
mov
add
push
iret
sub
push
xor
inc
mov
jecxz
xor
mov
push
mov
mov
inc
and
mov
es
push
jns
mov
push
pop
stc
xor
addl
mov
mov
shlb
out
jmp
xor
aam
pop
sub
or
dec
outsl
aad
adc
aaa
pop
pop
sbb
sub
pop
cmp
stos
add
xor
fsubrs
out
pop
push
test
add
or
pushf
dec
mov
sti
and
jmp
clc
inc
sub
lret
in
stc
jmp
flds
mov
inc
psubsw
push
xacquire
insb
loop
inc
int
inc
sahf
inc
pop
push
add
pop
mov
scas
add
leave
test
int3
jecxz
cmp
ftst
jae
jae
neg
fisubs
bnd
lock
lds
pushf
in
mov
dec
push
mov
mov
lret
sahf
add
in
sbb
fnsave
icebp
xchg
xchg
addr16
xor
addr16
outsl
cmpsb
jecxz
inc
push
mov
test
ljmp
popa
faddp
xchg
mov
cmpsl
repnz
aas
andl
and
scas
xchg
popf
outsb
out
pop
out
push
imul
push
in
lahf
mov
stc
add
jb
push
push
inc
cmc
pop
in
movsl
mov
mov
inc
jno
aaa
cmp
sub
mull
jle
pop
mov
test
xor
and
out
imul
bound
adc
dec
in
std
fisttpll
shll
xor
inc
cmpb
dec
imulb
cmp
test
out
jecxz
xchg
pop
pop
bound
subb
ret
sahf
int
popa
stos
test
push
adc
out
add
push
xchg
lock
fwait
and
pandn
jg
jmp
nop
jo
push
aaa
push
jo
push
mov
int
stos
xchg
cmp
call
out
dec
enter
xor
push
js
dec
lock
mov
aad
dec
fiadds
enter
push
jl
jmp
add
insl
imul
es
roll
dec
mov
in
jnp
outsb
inc
and
stos
add
or
and
xchg
add
sub
cli
mov
addl
pop
icebp
cmpsl
jp
hlt
pop
jl
inc
out
jg
mov
add
lods
pop
imul
jb
xor
mov
loop
lock
inc
xor
loope
lar
add
rorl
and
xchg
scas
mov
fisubs
push
das
inc
call
lds
xchg
lret
xor
xchg
cwtl
icebp
xchg
mov
push
xchg
pop
insb
push
pop
outsb
jmp
in
xor
repz
into
and
into
mov
cmp
lret
pusha
es
rcrl
adc
hlt
xchg
fadds
cmp
leave
fnstcw
cltd
stos
mov
inc
sbb
or
xchg
mov
inc
inc
adc
push
add
jg
in
shlb
pop
mov
sbb
xchg
or
addl
mov
jl
mov
fdivrl
mov
les
test
imul
lcall
jmp
add
and
sbb
mov
ljmp
jo
mov
stos
xchg
push
popa
out
pop
out
cmpsb
adc
popf
cmp
sbb
call
jns
xor
xchg
lret
jo
lock
std
push
imul
bound
bound
xchg
fisttpl
xacquire
and
mov
fsubrl
adc
cmp
hlt
dec
fs
outsl
aad
rcrl
cmpsb
sbb
hlt
mov
arpl
cwtl
clc
and
sar
sarl
jb
jp
lret
or
jp
orb
mov
cmc
push
aam
mov
cltd
es
xchg
jns
aaa
jl
cmp
dec
shll
inc
mov
jbe
sub
addr16
fxch
mov
in
xchg
leave
sub
sbb
push
sbb
arpl
mov
xor
jnp
outsb
enter
mov
bound
fsub
hlt
add
mov
les
cmp
xchg
cmp
mov
pop
mov
ret
xor
adc
and
clc
insl
out
mov
adc
orl
push
xor
pop
shl
mov
movsl
ds
cmc
mov
in
pop
popf
ja
push
cwtl
pop
sahf
bnd
stc
push
adcl
push
lret
jp
shlb
push
arpl
lret
ret
cmp
mov
fidivrs
aad
mov
jmp
push
xlat
scas
add
xchg
andb
jle
fdivl
pop
call
lea
adc
leave
add
dec
jl
sub
cltd
mov
out
xor
xchg
lods
jmp
jne
fbstp
rcrb
test
popf
lahf
out
pushf
imul
int
jg
push
enter
pop
pop
jb
mov
sub
sub
rclb
xlat
lret
sbb
or
test
sbb
mov
mov
fimuls
and
nop
mov
aaa
pop
movsb
jmp
xor
loop
jl
adc
inc
mov
mov
mov
testb
ss
cmp
cmp
jb
mov
movsb
cmp
outsb
fldcw
mov
pusha
test
or
jnp
bound
mov
sub
insl
es
adc
xchg
push
in
cmpsb
jnp
cwtl
imul
lock
dec
add
jns
jp
sbb
js
out
or
and
jle
int3
xchg
jbe
mov
xchg
loope
jge
fld
mov
cmp
sbb
push
in
push
and
orl
cmp
pop
dec
lds
lods
stos
out
jns
in
and
jmp
int
add
aas
outsl
jl
insl
icebp
push
mov
xchg
lea
pop
jle
pusha
adc
pop
rcrl
addl
lods
mov
jmp
nop
fdivrs
notl
fwait
jno
aas
mov
test
mov
into
dec
inc
cmpsl
rolb
mov
mov
enter
daa
js
mov
fbstp
shrl
push
fildl
ret
dec
icebp
pushf
jbe
not
scas
or
cmp
push
mov
adc
mov
imulb
leave
lods
dec
jge
lods
sub
mov
fwait
or
push
push
dec
cmpl
jle
mov
lea
inc
fsubrs
or
pop
dec
into
push
out
xor
push
sub
mov
push
int
inc
out
inc
xchg
dec
in
pop
das
sarb
and
and
movsb
pop
outsb
ret
lahf
add
sub
adcl
fcoml
ds
inc
pusha
insb
and
cmpsl
or
sub
mov
add
lea
mov
fisttpl
mov
sar
or
inc
roll
inc
sbb
je
push
adc
inc
mov
lds
mov
jne
rcr
iret
shlb
push
dec
pop
mov
mov
jo
adc
std
mov
fisubrs
sbb
dec
out
adc
enter
push
movsl
shlb
push
idivl
in
xchg
pushl
add
pop
scas
rcr
xor
jecxz
jmp
arpl
popa
dec
inc
movsb
sti
leave
dec
adc
adc
aas
sbb
dec
pop
mov
xor
mov
lock
dec
push
cmp
xchg
sub
es
add
push
pop
mov
movsl
xchg
dec
jge
cmp
push
add
pop
ret
int3
cmp
sbb
fdivl
push
push
rorl
dec
jns
cmpsb
push
push
mov
xchg
sub
pop
jb
out
ds
aaa
addl
xchg
imul
dec
push
adc
xchg
rorb
mov
sbb
inc
add
notl
pop
xlat
pusha
dec
cli
ret
dec
jl
mov
lods
sbb
push
push
inc
leave
data16
or
push
and
in
fidivrl
mov
lods
stos
lahf
negb
jmp
inc
mov
rorb
js
mov
sarb
mov
sbb
inc
out
inc
sbb
mov
and
addr16
outsb
xchg
push
mov
loope
sub
pusha
adc
pop
push
es
dec
fimull
sbb
int
and
lock
ret
xor
pop
and
jge
cwtl
aaa
cmp
sbb
jecxz
mov
je
rolb
or
pop
sub
and
push
mulb
pop
fsubs
xchg
push
mov
movsl
sub
mov
in
dec
xchg
aam
lcall
int3
jl
add
scas
push
mov
mov
mov
cwtl
sub
fbld
icebp
push
xchg
lods
in
mov
bound
into
in
cmpsl
add
fstps
jne
or
fldt
sbb
pop
lods
stos
hlt
adc
rolb
adc
and
sti
jno
test
out
and
je
adc
mov
push
pop
out
or
bnd
lods
ret
dec
loopne
push
leave
mov
stos
add
and
and
push
dec
aad
repnz
mov
icebp
pop
jle
cmp
adc
cmp
scas
lret
test
fstpl
xor
fst
call
and
inc
adc
scas
scas
ds
xlat
jb
xorb
ja
push
outsb
into
jmp
cld
js
das
cmp
jecxz
pop
dec
pop
popf
and
fistps
xorb
pop
mov
mov
rorb
inc
xor
popf
xor
in
xchg
andb
daa
jp
sahf
cmp
mov
jno
or
xchg
cmp
sub
or
leave
push
or
sti
push
test
aaa
add
jge
mov
stc
dec
mov
fiaddl
fcmove
rorl
xor
loop
hlt
jg
addr16
xor
call
lret
adc
adc
push
daa
mov
shll
ss
xchg
and
sti
lret
adc
loope
test
inc
lret
or
enter
movsl
shlb
insb
pop
scas
in
xor
lods
hlt
clc
sub
sbb
mov
dec
adc
fdivrs
adc
hlt
push
insl
or
inc
mov
mov
dec
ss
pop
xlat
mov
or
iret
das
or
ret
pop
push
dec
jmp
fisttpll
mov
xchg
mov
fwait
jl
andb
rorb
mov
push
inc
inc
push
shrl
push
mov
fs
cwtl
dec
int3
mov
call
jecxz
aaa
xchg
imul
fisubl
int
mov
dec
inc
xchg
jnp
or
or
sub
xlat
sub
add
mov
fldt
adc
mov
push
mov
ljmp
sbb
movsb
popl
add
inc
rcl
pop
lret
test
inc
mov
cli
cmpsl
cltd
fwait
mov
dec
jb
or
mov
invd
pop
rcll
fiaddl
add
push
xlat
test
adc
enter
mov
add
or
aam
jp
dec
fmull
cvtps2pd
mov
mov
add
pop
lahf
cmp
lret
aaa
in
xchg
loopne
mov
inc
inc
jnp
aaa
pop
mov
mov
out
test
sbb
inc
lcall
lahf
fwait
and
insb
cmpsl
pushf
mov
and
cmpsb
add
fstp
dec
movsb
jg
xchg
test
leave
sbb
xchg
arpl
xor
mov
outsb
inc
mov
pop
push
dec
sub
inc
xchg
loope
xor
dec
jge
dec
mov
in
out
testb
stc
inc
and
mov
enter
pop
ret
sub
enter
cmc
sbb
subb
mov
xor
data16
cmpsb
xor
cmpsb
push
adc
mov
pop
and
adcb
popl
adc
fmuls
rdtsc
and
sbb
push
shlb
cli
xlat
arpl
loopne
int3
add
aad
mov
adc
shrb
stos
test
adc
ja
sti
aaa
shrb
fwait
sbb
cmp
ret
ds
mov
insb
dec
adc
arpl
jl
loope
les
cmp
dec
add
and
mov
jo
shr
mov
add
insb
xor
fisubrl
fucomip
cmp
xor
rorl
inc
cld
leave
insl
xor
sub
and
insl
aas
out
xchg
jno
outsb
call
aam
or
stos
inc
ret
in
sbb
push
fldl
mov
out
pop
adc
xchg
int3
rol
mov
dec
bswap
pop
sbb
test
xchg
jne
mov
mov
pop
push
xchg
out
stos
xchg
imul
push
dec
lcall
jbe
pop
rol
sbb
imul
subl
popa
dec
dec
jmp
pop
pop
inc
adc
loopne
test
push
pusha
subl
andl
hlt
xchg
pushw
and
inc
shlb
iret
xchg
cmp
mov
adc
js
push
cmp
les
pop
mov
mov
inc
cld
mov
mov
gs
clc
sti
lret
mov
xor
and
dec
cltd
and
enter
leave
push
inc
cmp
pop
popf
jno
inc
sbb
sarl
int3
loope
cmp
xchg
sbb
push
mov
aad
bswap
or
inc
pop
or
xchg
lock
and
and
jne
mov
or
lret
jo
push
push
negb
shlb
and
scas
sub
test
or
mov
out
pop
loopne
lock
lock
dec
ret
scas
and
fldenv
aam
add
outsl
push
pop
shlb
lret
or
in
cs
mov
push
dec
pop
adc
les
arpl
adcl
push
pop
filds
cmp
push
stos
push
dec
dec
fcomps
mov
inc
adc
movsl
inc
popa
push
enter
cmp
push
lock
adc
test
movsl
inc
cmp
data16
add
xor
test
call
adc
dec
sub
sahf
loop
lods
adc
sbb
out
lahf
rcrl
cld
out
stos
push
in
sbb
pop
iret
jae
je
add
inc
add
fnstcw
or
hlt
mov
mov
sbb
cld
enter
xor
inc
mov
cmp
fwait
add
rcll
ss
mov
jp
gs
stc
mov
ficompl
push
xor
fistpll
and
mov
add
dec
dec
shlb
lds
jo
ud1
lahf
iret
test
or
mov
xor
push
les
stos
mov
adc
clc
add
cmp
xor
mov
and
inc
xchg
mov
ds
dec
call
push
popf
imul
imul
cmp
add
mov
in
mov
dec
dec
mov
xchg
pop
adc
and
xor
mov
mov
je
push
cmp
ja
fstpt
adc
call
jp
sahf
and
add
insl
jg
ss
popf
orb
xchg
sbb
neg
cmp
loop
popf
xor
sti
inc
cs
leave
pop
xchg
or
mov
stos
dec
xor
xchg
inc
ret
clc
mov
notl
adc
aam
jg
movsb
dec
or
and
stos
daa
mov
ds
xor
cmpl
pop
push
pushf
adc
mov
xchg
sarl
mov
xor
lret
stos
xchg
and
rcl
dec
hlt
fnstenv
xchg
dec
in
adc
notl
cltd
lcall
rcrl
je
cmp
push
dec
xorb
mov
adc
fcmovu
sub
xchg
jbe
dec
in
mov
dec
ljmp
mov
sarl
sbb
pop
xor
push
inc
les
fistps
lret
insl
shl
or
mov
mov
out
test
jg
cs
shlb
lds
push
in
shrb
scas
movb
out
or
pop
sahf
sahf
sti
stos
stos
out
inc
vmovaps
dec
outsl
xor
test
add
push
movsb
jg
inc
sbbl
xor
xor
inc
xchg
xor
sub
mov
in
mov
lcall
push
sbbl
lret
lods
bound
mov
xchg
rcl
imul
sahf
dec
cli
jbe
int
test
push
push
add
lcall
shr
push
int
cmp
inc
jns
sub
sbb
cwtl
lds
pop
add
sbb
mov
shrb
jp
sub
lods
arpl
lea
ret
xlat
scas
pushf
imull
shrl
mov
stos
test
jecxz
add
jo
gs
andl
icebp
aam
fwait
cmc
cmpsb
idiv
sahf
xor
popa
sbb
or
and
enter
jle
inc
out
and
sub
jp
sahf
dec
rorb
loop
js
mov
lock
sub
ljmp
mov
jbe
jl
std
ja
xchg
iret
xchg
jecxz
cmpsb
int
insb
dec
xchg
fiaddl
in
leave
push
or
jno
jmp
sub
fcomps
mov
inc
mov
inc
and
fsubrp
sbb
adc
adc
dec
test
movsb
jg
and
out
xchg
and
lret
mov
dec
icebp
jne
mov
mov
add
inc
jo
imul
dec
outsb
jmp
mov
enter
dec
out
ds
cmp
jmp
mov
mov
int
insb
mov
jae
mov
inc
loop
loope
fidivrs
push
scas
mov
cmp
push
loope
and
push
inc
xchg
push
push
pop
test
mov
aad
dec
mov
lcall
mov
movb
hlt
jb
outsl
lret
add
fildll
imul
out
aam
pushf
mov
cld
and
icebp
cmp
jl
movsb
cmp
in
sub
lock
out
leave
jnp
rolb
sbb
nopl
sbb
dec
mov
ret
js
aam
lods
sbb
stc
pushf
adc
adc
das
or
dec
push
adc
push
dec
repnz
es
mov
adc
test
data16
jne
pop
push
or
inc
dec
mov
movsb
adc
ja
ret
arpl
xor
cmp
cmp
and
shrl
lock
jecxz
test
mov
xchg
lcall
rcrl
testb
jmp
mov
stc
cmpsb
or
xchg
movsl
push
mov
ds
mov
lds
dec
in
divb
loop
mov
imul
and
xchg
dec
decl
xchg
ret
and
jb
in
dec
pop
iret
adc
jo
mov
push
push
mov
jmp
jo
into
mov
jne
sbb
mov
scas
icebp
jle
rclb
xor
sbb
js
pop
xlat
lock
adc
xlat
or
jb
test
jno
or
jno
push
xchg
movsl
mov
or
cmp
negl
xor
sub
dec
je
leave
loopne
movsl
lea
adc
mov
cmp
adc
mov
leave
cwtl
cmp
adc
xor
jle
test
xor
scas
adc
rcrb
cld
sbb
fidivl
ljmp
mov
cmp
es
jno
push
int
xorl
mov
arpl
sub
jecxz
and
push
test
xchg
icebp
cmp
movsl
arpl
mov
lods
sbb
mov
push
jns
or
inc
lcall
or
fsts
or
pop
clc
xchg
push
in
mov
fisttpll
pop
and
shl
sub
dec
dec
jle
repz
xor
cmp
jbe
sar
xor
jl
mov
cmpsb
mov
mov
pop
push
mov
pop
fistl
int3
mov
movsl
clc
popa
lods
outsl
ror
jno
mov
push
test
push
cmp
test
lods
xchg
jl
fsubrp
sub
push
mov
xchg
insb
mov
xor
stos
fs
xchg
lret
out
les
ret
adc
mov
inc
cltd
dec
mov
xor
xlat
add
js
cltd
pop
lea
fwait
cmpsl
push
push
in
popa
pushf
xchg
out
push
aad
xor
xchg
pop
and
inc
sbb
dec
jp
fldl
push
push
xchg
das
cs
push
lret
cmpsl
sub
call
insb
sbb
dec
flds
in
inc
inc
mov
sub
clc
flds
sub
inc
fistps
inc
movsb
mov
dec
push
jge
jge
mov
cmp
jns
or
push
mov
pop
mov
or
aas
adc
mov
nop
xchg
pop
inc
cmp
rcll
xchg
rclb
sub
add
lret
jle
enter
outsb
data16
es
jb
out
ljmp
mov
and
data16
mov
push
xor
mov
iret
test
aas
into
sahf
cmp
cmp
cld
into
cmp
nop
aam
imul
test
and
adc
and
mov
clc
movsb
mov
mov
cmp
fcoml
in
jnp
insb
out
sarb
scas
ja
jo
dec
jnp
in
xchg
and
inc
stos
lret
sub
push
pop
inc
and
pop
pop
and
pop
leave
lods
inc
cmp
rcll
inc
mov
addl
test
mov
pop
pop
sbb
jne
xchg
lods
fs
aas
jge
and
cmpsl
mov
ja
mov
adc
add
sarl
gs
ret
rcr
aam
sub
ja
divb
pop
bound
dec
xchg
mov
jo
ret
adc
in
xchg
fiadds
xchg
jbe
sarb
inc
push
sahf
outsb
in
xor
popf
cmp
and
test
push
popf
or
xlat
into
push
push
pop
sbb
dec
lds
dec
shrl
inc
dec
mov
jo
xor
gs
push
std
xchg
pop
aam
push
out
fildll
or
cmp
xchg
lock
dec
sbb
add
xor
repnz
cld
in
mov
cmp
sbb
dec
shll
leave
xor
push
dec
fcompl
ljmp
outsb
pop
gs
fwait
into
jns
fldl
call
cwtl
xlat
push
inc
sub
arpl
sbb
sbb
inc
xchg
mov
aam
mov
ret
mov
lret
jmp
or
leave
mov
lret
inc
add
xchg
or
and
mov
mov
pop
xchg
xor
clc
imul
xchg
fadds
sbb
in
insl
add
popf
cmpsb
mov
cmpsl
jg
xor
out
dec
cltd
or
dec
xchg
sub
jnp
in
mov
lock
cltd
fldcw
jbe
adcb
or
addb
gs
mov
addl
scas
xchg
loop
ja
jne
aas
lods
incl
sti
inc
sqrtps
int3
jnp
das
add
cwtl
xor
test
mov
insl
mov
jge
jno
push
mov
xchg
push
jae
rcl
and
lcall
shlb
dec
sbb
lods
flds
cmpsl
mov
xor
push
clc
xchg
xchg
xchg
mov
push
stc
enter
js
jns
mov
mov
ds
mov
mov
dec
adc
flds
rcrb
mov
inc
adc
sbb
pop
mov
mov
or
mov
mov
jo
add
inc
lcall
pop
add
and
test
call
xor
dec
icebp
pushf
pop
add
out
je
mov
in
xor
and
fcompl
push
ljmp
fcomps
mov
inc
mov
pop
inc
adc
jnp
inc
lret
or
jbe
data16
dec
ror
pop
loope
sbb
mov
sbb
cmpsl
add
loop
mov
mov
pop
fwait
add
icebp
and
out
pop
inc
push
iret
lods
sbb
das
or
and
adcl
fnstsw
adc
mov
mov
inc
adc
jmp
ror
xor
adcb
mov
outsl
lcall
addr16
test
stc
cwtl
mov
mov
xor
add
arpl
and
jb
test
mov
and
mov
lods
cmp
mov
and
ljmp
daa
pop
xor
mov
jns
movsb
je
jp
call
imul
imul
ss
dec
xchg
into
add
jnp
push
inc
mov
cld
pusha
mov
prefetch
int
scas
xchg
sbb
xchg
clc
ret
cwtl
dec
fmull
std
xor
scas
test
cmc
popa
sbb
and
pusha
push
loope
stos
mulb
jae
popa
push
in
out
mov
lock
xchg
shlb
aad
repz
ds
cmp
mov
jnp
dec
push
out
sahf
and
jecxz
cmp
shlb
lret
add
mov
out
mov
and
sti
or
cmp
addr16
ret
mov
xchg
mov
int
push
cs
jb
outsb
add
sub
xor
rcrb
and
dec
xor
enter
sub
aad
in
ljmp
jns
xor
or
sti
lret
pop
mov
mov
mov
cmpsb
loop
es
add
shlb
ljmp
fdiv
pop
xchg
xlat
mov
scas
lcall
repz
push
push
mov
cmp
rcll
fidivs
inc
inc
aam
mul
adc
dec
mov
xchg
popa
out
rorl
pop
xor
xor
adc
jbe
stos
cmpsb
shrl
pop
sbb
mov
xchg
mov
adc
push
fiaddl
jl
cltd
and
push
adc
add
fstpt
xor
sbb
cld
push
or
cmp
jle
imul
insb
xchg
sbb
mov
fildll
pushf
scas
js
cmp
stos
call
jge
and
dec
dec
mov
jns
xor
adc
xor
add
pop
push
ja
popf
cmp
ljmp
shlb
jnp
xor
out
in
lds
test
scas
fnsave
fcompl
adc
imul
in
push
jecxz
adc
adc
pop
fildl
out
jo
aam
mov
and
test
adc
add
out
pushf
xchg
mov
add
sti
mov
fisubs
adc
xchg
inc
cmpsb
dec
int
test
ret
mov
aas
test
fwait
xor
push
adc
scas
stos
sub
and
cmpb
fisubrs
xchg
inc
je
inc
jle
lcall
call
scas
or
sbb
sbb
and
dec
adc
add
mov
xchg
dec
jecxz
mov
rcr
xor
add
jg
jno
mov
aaa
jmp
stos
xchg
or
sbb
cmp
fdivs
mov
or
lds
dec
das
mov
shrl
fisubrl
andb
mov
inc
mov
ds
cmc
mov
fwait
add
cmp
stc
scas
sub
out
jo
scas
or
movntq
orb
add
cmp
repnz
push
gs
andb
fmull
jge
test
mov
leave
shlb
fcmovu
inc
into
xor
pushf
jnp
hlt
idiv
mov
xchg
in
adc
dec
adc
lea
ja
inc
les
jp
mov
dec
std
push
jne
ffree
sarl
fisubs
leave
faddl
and
push
movsb
cwtl
xor
jge
frstor
fwait
div
fadds
push
insl
push
inc
xchg
mov
pop
and
xchg
mov
mov
js
cmc
fnstenv
fldcw
push
sub
xchg
xor
inc
xor
insl
mov
rcrb
cmp
orl
push
fisubs
mov
cld
rcrl
add
int
inc
shll
out
adc
ja
jp
cmp
fs
push
jne
mov
xchg
inc
xlat
scas
mov
fstpt
lea
fs
sub
mov
lcall
std
stc
pop
mov
or
sbb
inc
add
mov
mov
add
push
jl
push
cmp
mov
jne
cmp
mov
cmp
scas
mov
addr16
dec
fwait
in
pop
xchg
test
sbb
xchg
out
xchg
jle
and
stc
push
imull
aad
mov
or
sbb
adc
inc
cmp
cmpsl
xchg
cmp
hlt
outsl
bound
bound
xor
rolb
xchg
fadd
jge
inc
jne
fstpl
add
insb
xor
pop
mov
or
cmp
cmp
adc
or
inc
fs
hlt
fists
test
outsl
ret
xor
jp
sbbb
mov
ret
cmp
xor
hlt
into
mov
ljmp
mov
jmp
rcrb
scas
out
scas
fimuls
xor
fcmovb
cmp
xchg
or
stos
jg
bound
xor
insl
fadd
xchg
push
fbld
shll
inc
and
icebp
xchg
movsb
mov
add
imul
xchg
mov
aaa
mov
or
rcrb
xchg
or
mov
mov
in
lcall
enter
jp
rorl
sbb
ret
outsb
pop
lock
push
or
lea
into
dec
xchg
fisttpll
imul
test
sbb
inc
lea
adc
test
fildl
push
push
test
dec
arpl
es
xchg
pop
arpl
insl
test
or
push
mov
mov
enter
pop
xor
mov
bound
sbb
dec
pushf
mov
icebp
xchg
cli
enter
mov
in
inc
cmpsb
jns
test
and
stos
ljmp
mov
out
bound
fdivp
adc
call
mov
jne
xor
ret
call
jl
adc
push
sarb
xchg
stos
adc
xor
cmp
push
jecxz
jmp
add
ds
sbb
cmp
aad
jl
lcall
aam
push
sub
aas
mov
ss
sub
mov
and
rclb
imul
fwait
mov
cli
push
pop
out
inc
jns
jo
je
jo
repz
push
lock
mov
xchg
mov
enter
add
test
inc
adc
mov
ljmp
arpl
adc
movl
push
push
xchg
or
loopne
push
clc
ret
cmp
orl
pusha
push
ret
ja
test
push
lds
sub
or
loopne
push
mov
jne
out
or
cmp
ficoms
insl
dec
xor
fstpt
cmpsl
jg
ljmp
mov
loope
repz
movsb
popf
sbbb
dec
or
dec
cmc
sbb
xchg
inc
test
dec
xchg
mov
jp
mov
push
pop
das
and
mov
sub
lret
pop
dec
jbe
xor
push
rorb
sub
mov
test
gs
out
xchg
lret
jmp
cwtl
mov
inc
fstl
xchg
loope,pn
xchg
mov
repnz
and
and
xchg
pusha
push
jmp
push
insb
pop
sbb
scas
sti
pushf
clc
ljmp
mov
sub
or
add
push
stc
push
loop
dec
xchg
mov
or
imul
mov
mov
mov
xchg
int
jecxz
lock
xchg
push
in
mov
xor
xchg
fcmovne
std
es
pop
hlt
xchg
mulb
lret
ret
cmc
es
js
xchg
push
and
and
xor
shll
clc
fwait
add
mov
das
xor
mov
sub
into
pop
sahf
loope
mov
adc
add
push
fidivrs
sti
std
and
sub
imul
js
aam
lds
outsb
dec
pop
sti
xor
and
xchg
mov
sub
test
push
js
sub
decb
cli
into
lods
mov
mov
fstpl
adc
pop
sub
out
or
leave
mov
push
mov
icebp
or
aaa
loop
ficoms
lock
sub
hlt
lret
add
loope
fdivrl
fsts
add
or
gs
mov
push
test
and
clc
mov
dec
jbe
xchg
adc
imul
or
dec
stc
ret
sub
xor
call
je
push
ret
and
test
aaa
jbe
push
mov
adc
pop
neg
call
xchg
mov
inc
daa
push
mov
mov
popf
test
repz
xchg
inc
mov
dec
inc
adc
out
pop
and
lea
inc
pop
data16
adc
cld
lret
adc
and
inc
loopne
mov
bound
lea
jecxz
mov
push
cwtl
not
xchg
je
orb
mov
push
xchg
xchg
in
sbb
or
movsb
push
and
subb
lret
aaa
jle
nop
jnp
cs
call
lret
leave
mov
mull
xchg
popf
xchg
cmp
lret
out
xor
mov
fnstenv
fcmovnbe
sbb
xor
enter
stos
lock
lods
sbb
push
xor
cmp
pop
je
lods
enter
jmp
iret
movsl
mov
or
push
sub
xchg
imul
ficoms
mov
sar
aas
stos
mov
mov
mov
pusha
popa
test
cmp
cli
inc
fnstenv
xor
or
movsl
mov
fisttpll
cmp
and
imul
dec
dec
jp
fsubs
fdivs
pop
xchg
or
rclb
stos
add
dec
dec
cmp
or
jb
jnp
dec
xchg
adc
mov
in
dec
adcl
cmp
and
or
inc
sbb
xor
lods
popa
mov
mov
and
sarb
repnz
add
sti
aad
jecxz
xchg
pusha
jl
sub
push
lds
jle
xor
stos
mov
mov
es
aad
dec
leave
in
mov
sub
jb
mov
js
fs
fcompl
sbb
ja
cltd
pop
fstps
testb
pushf
je
xor
sbb
mov
jo
cmp
mov
hlt
jns
in
push
daa
aas
int
mov
bound
pop
and
inc
jge
jb
outsl
xor
sbb
xor
and
out
mov
movsb
mov
sar
mov
lcall
fstps
jbe
scas
pusha
inc
push
xor
push
cmp
lea
mov
aas
icebp
add
leave
mov
in
mov
push
lods
and
mov
sbb
imul
xor
mov
ret
loope
pop
mov
and
cld
add
adc
jo
sbb
roll
mov
and
or
test
xor
sbb
lret
das
arpl
dec
fcmovb
sub
xchg
mul
and
mov
pmuludq
sbb
cmp
lods
xchg
and
shr
addr16
sbb
jge
inc
inc
xor
pop
mov
push
xor
cli
mov
add
sub
test
filds
hlt
adc
outsl
lret
mov
je
ss
shll
mov
mov
or
ret
lods
cmpsl
stc
push
mov
sub
or
mov
ja
fisubrl
xchg
xchg
repnz
push
and
adc
xchg
fidivl
xlat
je
adcb
mov
jg
iret
daa
lods
sbb
jp
xchg
insb
pop
xor
cwtl
daa
aam
ja
push
mov
dec
outsl
imul
push
inc
pop
shr
into
bound
inc
ftst
and
xor
pop
add
jg
pop
test
mov
pushf
outsb
mov
mov
xor
outsb
mov
out
orb
mov
or
cmp
mov
sub
add
mov
add
add
fs
ljmp
outsb
outsb
xor
xlat
mov
add
add
and
les
dec
adc
out
xchg
fisttpll
iret
imul
push
call
mov
xchg
mov
jl
lret
push
pop
je
lret
inc
sbb
mov
test
arpl
mov
and
stos
lock
mov
push
inc
dec
movb
mov
sbb
add
shrb
xchg
dec
mov
dec
ja
notb
push
fsubr
out
mov
pop
mov
xchg
sub
out
inc
divb
mov
pop
mov
and
sbb
test
xor
pushf
out
sub
push
loop
es
repz
sub
cmp
dec
xor
adc
shrl
mov
and
mov
add
fwait
add
shr
out
pop
fidivl
enter
dec
rclb
insl
cmc
dec
dec
xor
pop
and
adc
scas
lea
jne
and
repnz
cld
clc
in
sbb
sahf
push
mov
cli
mov
or
xchg
add
lahf
xchg
inc
and
std
test
lcall
rcrb
fisttps
mov
lods
pop
add
repz
popa
sbb
into
xor
xor
mov
jle
cmp
fldcw
jae
pop
dec
add
arpl
lock
mov
dec
ret
xor
loope
in
xchg
jg
mov
sarl
cmp
scas
stos
clc
add
adc
inc
outsb
mov
mov
fstpl
mov
mov
repnz
pop
dec
scas
push
add
jmp
outsl
aam
push
add
iret
or
fwait
gs
adc
imulb
jge
or
add
or
jmp
adc
inc
push
sar
cmpsb
or
sub
ds
hlt
inc
xchg
ds
mov
jl
mov
pop
punpckhbw
cmp
fsubrp
jg
cmovo
aas
popa
ljmp
in
mov
ret
in
push
pop
sub
inc
push
out
mov
notl
push
adc
jl
lret
inc
xchg
cmp
mov
ljmp
dec
push
es
xor
xchg
and
inc
mov
inc
aaa
jle
cli
enter
scas
jbe
addr16
mov
imul
mov
lret
hlt
jae
cmpl
shrl
mov
std
xchg
cmpsb
mov
sahf
pop
ja
push
push
testb
cwtl
movsb
mov
cmpsb
push
inc
out
ds
pop
in
int3
enter
mov
nop
xlat
loopne
xor
jae
je
test
dec
sbb
mov
in
fsts
dec
sub
cmp
add
cmp
aam
mov
enter
jbe
insb
stos
mov
jmp
dec
lods
js
ret
movsb
fbstp
unpcklps
jmp
pop
add
inc
jmp
sub
dec
jge
adc
xlat
jecxz
int3
jo
in
mov
popf
cmp
fs
dec
loope
or
out
sahf
xchg
jo
cmp
jle
iret
push
mov
js
or
pop
xor
subl
imul
adc
scas
pusha
cmp
push
ss
into
out
pop
aad
adcb
xor
test
add
pop
pop
inc
and
sbb
pop
iret
int3
test
int3
sub
and
add
cmp
ss
mov
lds
xor
jb
cld
mov
pop
negb
aaa
inc
mov
ss
stc
cmpsl
lods
push
cwtl
mov
adc
inc
std
fmuls
in
mov
push
leave
jecxz
scas
cmpsb
mov
adc
sarl
loopne
push
jge
scas
int3
jecxz
cltd
imul
mov
ficoml
jl
cmp
mov
jp
cmp
adc
out
xor
aad
sub
inc
inc
sub
inc
jno
pop
xchg
gs
lods
js
xchg
call
repz
mov
outsb
or
cli
jl
mov
cmpsl
int3
mov
cmp
stc
and
in
mov
push
sub
sahf
das
inc
fstps
jg
orb
or
imul
push
dec
mov
imul
inc
jmp
pusha
jns
mov
lods
into
inc
pop
inc
pop
mov
xlat
fildll
lea
xchg
rcr
jl
imul
mov
test
jo
out
jp
sahf
iret
and
add
aas
stos
sbb
das
dec
sbbl
inc
pop
pop
dec
mov
mov
push
or
rcl
push
mov
scas
in
adcl
cmpsb
mov
imul
cmp
xchg
aaa
dec
fucomi
cmp
mov
fnstcw
lcall
das
jbe
push
stc
arpl
inc
mov
fcmove
pop
rcrb
mov
xchg
fisubl
sub
fcoml
sahf
outsb
jmp
cmc
adc
loop
xlat
repz
pop
aas
or
mov
add
dec
addr16
rcr
in
loopne
sub
xor
test
repnz
jg
popf
mov
xchg
cmp
pop
adc
dec
adc
sub
clc
push
je
xchg
push
inc
push
mov
sbb
test
test
fists
adc
imul
mov
jo
test
push
jp
dec
ret
cmc
jmp
cmc
enter
aas
xchg
and
jb
xchg
js
rolb
jns
cmp
jo
push
mov
stc
xlat
fdivr
ljmp
shr
mov
push
addr16
lods
inc
iret
stos
stos
sub
mov
popf
mov
ficomps
les
mov
and
and
xor
pop
push
lds
out
push
mov
push
mov
inc
jae
loope
pop
mov
repnz
add
push
ja
arpl
enter
or
je
shl
push
test
ret
insl
in
or
mov
or
mov
out
mov
pop
push
movsl
insl
sub
popa
xchg
out
movsl
cltd
loop
mov
stos
xor
and
mov
xor
adc
ret
ss
pop
cs
push
add
xor
jg
mov
jne
or
xchg
xor
ja
inc
out
pop
dec
ljmp
jbe
and
stos
xchg
mov
jns
mov
shl
lcall
ret
addr16
xor
mov
mov
mov
popf
mov
inc
aad
mov
lods
movsb
aaa
dec
add
sub
sub
mov
mov
mov
lds
lret
mov
push
lods
xor
sbb
mov
add
fsubr
cmp
test
sbb
outsl
cmp
sub
jno
ret
ret
call
cmp
pop
daa
jno
int3
pop
lret
sbb
push
scas
add
xchg
mov
sub
jl
popa
inc
es
xchg
cmpsl
and
inc
mov
test
xorl
insb
push
pop
sti
enter
cld
xor
xor
jmp
int
nop
adc
repnz
ja
mov
dec
jle
pop
adc
fldt
cvtps2pi
cmp
mov
es
outsl
test
ret
stos
jl
add
ret
sub
dec
or
inc
addl
cli
mov
scas
inc
daa
mov
jg
inc
push
ret
test
rolb
popf
test
outsl
leave
xchg
mov
stos
mov
mov
push
data16
xor
xor
in
repz
int3
mov
sbb
mov
insl
adc
jbe
insl
movsl
repz
inc
popf
in
and
jp
inc
jbe
jbe
xor
rclb
mov
inc
pop
cli
pop
out
lcall
pop
xchg
rcr
xchg
mov
in
mov
shlb
push
add
js
xor
pushf
cmp
push
xchg
jo
scas
popf
loop
lods
mov
adc
mov
ffree
xchg
loop
push
iret
insb
mov
cmpsb
push
fs
jbe
vcvtpd2psx
mov
fwait
push
adc
repnz
xchg
mov
mov
subb
xor
jnp
rcrl
or
inc
jbe
shll
cltd
mov
popf
pop
lret
xchg
in
fstpl
mov
lea
or
push
and
iret
pop
and
mov
push
repz
pop
fisubl
lea
cmp
inc
pushw
and
cmp
push
xor
pop
jle
cmp
mov
int3
cmpsb
adc
aam
push
out
fs
mov
xchg
xchg
in
les
cmp
xor
lods
xor
loop
lods
add
sbb
jnp
clc
in
stc
std
pop
and
dec
mov
out
imul
lock
xlat
je
mov
es
icebp
stos
fnsetpm(287
push
push
sub
sbb
jbe
push
jp
cwtl
sub
stos
mov
fwait
sahf
cmp
xchg
incb
jmp
scas
cltd
pop
sahf
mov
mov
aaa
repz
std
and
aad
ffree
cltd
imul
cmpsl
aam
sti
inc
inc
lcall
es
out
push
ss
jp
sub
sbb
jno
or
out
cmp
pop
and
rorl
pop
mov
fdivrl
into
jb
adc
in
fs
aas
sbb
push
xlat
jb
or
xchg
fistpl
sbb
lds
incl
adc
es
add
repnz
cmp
sarb
jae
or
jle
jo
cltd
inc
pop
leave
fs
int
xchg
mov
mov
jno
imul
lods
aas
and
sti
pop
xor
out
movsl
or
xchg
xchg
cld
loope
enter
jmp
jae
sbb
je
subb
rcl
cld
mov
je
xchg
push
adc
decb
push
push
mov
stos
mov
rorb
aas
mov
addr16
mov
repz
outsb
ja
adc
lahf
jp
shrl
sub
hlt
and
hlt
lds
dec
daa
mov
mov
outsb
je
ljmp
loope
insb
and
xor
lds
addr16
xchg
cmp
mov
inc
dec
xlat
out
inc
add
xlat
loope
sbbl
inc
push
push
mov
ja
imul
fscale
xor
push
repz
mov
sub
xor
dec
popf
fidivs
mov
jge
lahf
xchg
xchg
mov
inc
add
jae
movsb
jnp
push
enter
dec
aad
mov
and
cli
mov
jbe
mov
sub
fstl
imul
pop
pop
sub
xchg
insl
std
std
xor
cmc
cmpsb
enter
xchg
mov
sub
adc
and
outsb
xor
dec
les
out
ret
cld
push
dec
mov
icebp
in
cmp
sti
cld
in
jle
int3
mov
add
fwait
call
shlb
mov
inc
and
mov
andb
and
fmul
xorl
in
icebp
shlb
sti
and
cmp
fs
insb
call
xchg
lods
cmp
adc
dec
cmp
andl
jmp
cmp
dec
addl
insl
addr16
jb
mov
push
cmovs
or
divl
ret
add
xchg
or
push
mov
sub
frstor
notb
mov
dec
jp
push
push
mov
ret
or
jmp
ljmp
sbb
push
in
aad
push
adc
push
inc
mov
mov
fstpl
cwtl
aam
lock
and
jnp
out
jl
jp
ss
je
popf
lods
xchg
mov
cmc
sarb
cmp
mov
lea
jl
das
jno
push
xor
addb
mov
test
bound
sbb
bound
xchg
outsl
mov
es
out
pop
daa
cs
dec
movsb
mov
pop
xchg
inc
and
mov
mov
add
sub
stos
nop
adc
inc
rcpps
xlat
jg
pop
xchg
sub
mov
loop
ss
sbb
lods
mov
popf
call
mov
aad
hlt
mov
jg
rclb
mov
sub
sbb
sbb
test
mov
ret
pop
fsubs
aad
pop
aad
shrb
inc
movl
pop
arpl
xor
sti
les
sbb
xor
pushf
adc
bound
scas
test
add
fdiv
pop
ljmp
jno
mov
add
sahf
sbb
cmp
inc
imul
mov
add
fmuls
mov
sarb
test
jns
out
jns
out
shrb
inc
dec
in
push
out
inc
fs
sbb
ret
cmpsb
adc
fucomip
loop
subl
pop
push
mov
pop
add
cs
adc
cmc
in
adc
sbb
mov
cmpsb
cld
sbb
into
fcmovnbe
inc
mov
in
shrb
insb
mov
fisubrl
iret
pop
cs
gs
add
icebp
jo
dec
mov
test
xor
sbb
loopne
mov
adc
pop
test
test
sbb
fldcw
mov
rolb
fs
push
adc
loop
xchg
pop
mov
xchg
sub
sub
xor
jp
jle
inc
gs
pop
call
mov
sbbb
nop
cld
push
and
test
movsb
xor
iret
aas
jl
dec
pop
sti
mov
in
aam
cmp
xlat
nop
cltd
js
lret
adc
mov
mov
divl
mov
fwait
scas
aas
cld
jnp
sub
cmpsb
cltd
inc
cltd
sub
mov
cli
fwait
lret
sahf
inc
mov
mov
adc
pop
dec
push
lahf
fcoms
lods
subl
jg
jl
ss
jns
sbb
inc
mov
jbe
jnp
mov
outsb
add
adc
movsb
repnz
inc
pop
pop
mov
and
inc
mov
ds
in
inc
or
test
les
sbb
fists
mov
sub
pop
add
inc
sbb
cld
dec
pop
je
in
mov
adc
enter
sub
jmp
in
popf
or
enter
int
cmp
iret
dec
sub
mov
add
ret
xchg
cmp
sarb
fstpl
inc
out
ret
push
sbb
enter
fdivrs
repnz
xor
sarl
popa
popf
mov
sbb
push
pop
jno
xor
inc
add
les
xchg
insl
sbb
loope
inc
pop
fimuls
adc
popf
hlt
lret
inc
mov
nop
push
rcrl
push
push
mov
rorb
movsb
aas
mov
push
hlt
mov
add
jne
stc
mov
mov
sub
push
fdivrl
cmpsb
sub
leave
inc
arpl
inc
mov
fxch
mov
add
aas
sbb
ret
jge
cmpsb
add
or
push
jp
xor
test
es
in
loope
fldenv
inc
and
sbb
loope
jns
add
push
cmp
dec
jo,pn
dec
call
movsb
and
mulb
outsb
cli
jl
pusha
daa
push
cmp
out
pop
mov
or
imul
test
xchg
xor
sbb
dec
inc
dec
jo
and
add
scas
stos
mov
mov
mov
dec
lds
sbb
pop
or
inc
mov
inc
stos
cli
sub
call
packuswb
call
and
xchg
ds
lock
ret
imul
cmpb
cwtl
fnstsw
or
icebp
ret
inc
pusha
dec
clc
mov
xor
adc
push
cwtl
pop
dec
in
mov
xor
inc
dec
push
xchg
hlt
mov
das
xlat
pop
nop
ljmp
sbb
dec
add
arpl
pop
mov
adc
and
loope
push
shrl
or
jge
mov
pop
jne
cmp
sub
cmp
mov
adc
sub
and
or
xchg
in
jp
stos
jno
iret
push
push
rcl
fcompl
ds
mov
subl
sbb
test
adc
or
jp
cmp
sbb
jecxz
add
push
outsl
mov
sbb
jnp
xchg
loope
daa
popa
jb
jae
lret
pusha
addb
sub
fmull
xor
scas
scas
xchg
or
aad
gs
jb
out
sbb
push
pop
add
jle
test
push
imul
cmp
xchg
ret
cmp
in
jmp
push
ror
dec
mov
mov
stc
insb
inc
sbb
pop
rcrb
or
repz
insb
add
out
xchg
xor
jl
adc
stos
cwtl
mov
pop
cltd
xor
xchg
imul
imul
mov
xchg
and
enter
arpl
xor
pop
pop
es
loopne
mov
mov
mov
lahf
in
stc
jbe
cld
xor
mov
test
jns
add
sahf
push
lret
cs
xor
xchg
leave
adc
popa
outsl
ja
adc
add
xchg
notb
mov
test
and
inc
lods
add
jmp
neg
xchg
arpl
push
xchg
js
sub
pop
leave
add
insb
ret
mov
adc
popa
cmc
data16
xchg
pop
cmp
mov
rolb
adc
add
cmp
pop
mov
loope
fsubl
mov
inc
pop
inc
imul
mov
shll
sbb
mov
iret
adc
cmp
ljmp
sbb
aas
fdivrl
mov
inc
out
repnz
pop
sub
lcall
pushf
and
lods
dec
inc
sub
cmp
xchg
int
jae
sahf
lock
testl
movsl
fildll
pop
icebp
pushf
hlt
dec
mov
and
cmpl
je
dec
rol
sbb
jbe
rolb
ljmp
mov
aad
xchg
daa
mov
adc
mov
pop
shlb
inc
aam
cmp
jae
std
jl
cmp
push
mov
adc
pop
and
jp
aad
ds
inc
sub
out
mov
aaa
inc
mov
popf
xor
test
insb
xchg
xchg
pop
negl
data16
pop
int
pushf
or
xchg
sbb
pushf
pop
jbe
dec
cmpl
bound
mov
lcall
pop
lahf
lea
push
std
pop
add
add
pop
clc
fs
push
fbld
push
in
push
push
ret
in
xchg
cld
inc
xor
push
mov
push
sarl
dec
fdivrs
sbb
inc
das
fs
gs
inc
rorl
xlat
mov
popf
nop
loopne
jl
pop
and
ret
stos
and
aaa
sahf
shll
dec
mov
fimull
imul
es
xor
mov
in
mov
cmp
mov
xor
lcall
dec
mov
and
inc
xchg
mov
xchg
xchg
cli
jp
lcall
sbb
sbb
mov
imul
test
jl
mov
cmc
pop
inc
cli
pop
repnz
arpl
nop
and
inc
sbb
dec
xor
clc
sti
xchg
aad
dec
ljmpw
xchg
mov
lock
dec
sbb
sbb
pusha
push
mov
ja
xor
jno
or
loope
push
push
add
cmp
adc
pop
mov
rcll
int
arpl
adc
pop
inc
push
and
push
pop
adc
push
enter
cld
lret
mov
in
fsub
mov
sarb
cmp
cmpb
lcall
nop
cmp
je
in
xlat
mov
and
or
xchg
enter
sbb
pushf
xchg
mov
jmp
xor
jne
stos
mov
or
xor
adc
adc
inc
and
add
in
sti
shlb
jl
repz
add
mov
lcall
adcb
stos
out
insl
add
icebp
add
jmp
mov
push
pop
xchg
mov
movsb
xchg
pmulhuw
push
roll
imul
cltd
pop
jp
mov
mov
pop
pop
sbb
iret
jmp
sub
out
movsb
or
inc
xor
push
fbstp
or
sub
xor
mov
popa
int3
dec
in
xor
add
add
leavew
xchg
js
out
sub
jae
out
jle
mov
push
cmp
push
adc
test
shll
cmp
jnp
pushf
cmpsb
inc
jp
cld
test
inc
lret
dec
push
inc
aad
mov
mov
scas
mov
outsl
mov
pop
out
clc
pop
xchg
lods
jbe
aam
lret
in
movb
push
sub
sti
jle
mov
mov
cmp
xor
sub
adc
xor
ret
lret
or
addl
inc
inc
lcall
fs
add
es
sbb
mov
mov
adc
movsl
adcb
fs
jmp
mov
push
lret
into
imul
int3
xchg
mov
xor
test
outsl
sbb
pop
sub
or
jnp
outsl
xchg
add
cmc
xchg
mov
xor
mov
ja
cmc
inc
cmp
call
call
lea
mov
insl
rorb
push
insl
stos
adc
pop
sbb
cmpsl
addr16
cmpsb
loop
adc
stc
cmp
jmp
int
lods
pusha
jnp
call
dec
cmpsl
ja
mov
es
pop
cmp
push
je
or
pop
and
mov
andb
adc
or
cmp
cmp
movsl
xor
inc
xchg
pop
test
mov
add
jae
lahf
push
clc
cmpsb
test
shll
or
cld
cli
shrb
leave
adc
mov
push
iret
and
in
cmp
fs
fstpt
loop
push
aam
enter
lret
scas
push
aam
cmp
add
and
xor
inc
xchg
pop
add
or
dec
das
outsb
mov
xchg
mov
lods
xchg
sub
or
es
outsl
lock
or
out
cmp
adc
repz
push
insl
int3
mov
inc
or
lds
adc
cwtl
cmc
stos
lahf
ret
pop
fsubrs
nop
adcb
mov
push
lods
adc
daa
add
loop
pop
jl
aas
push
pop
fadds
push
lods
jns
or
dec
mov
hlt
cmc
test
pop
xchg
jecxz
sub
loopne
inc
fnstcw
push
dec
jo
aad
pop
mov
neg
pop
inc
or
add
aad
cmc
adc
hlt
loop
and
ret
mov
xchg
jmp
cmp
loope
add
std
mov
add
sarl
sbb
stos
add
sub
nop
and
cld
test
sbb
incb
leave
xor
call
addr16
movsl
adc
inc
dec
mov
insl
mov
push
or
pop
add
int
imul
dec
mov
xor
inc
rorl
in
test
mov
xchg
test
movsl
cld
sub
bound
cmp
adc
dec
das
mov
arpl
cs
jae
orl
out
pop
out
je
xor
data16
push
inc
fcmovu
jae
pop
jle
jbe
call
or
adc
subb
lock
xchg
sbb
inc
fs
xchg
hlt
push
mov
add
popf
fadds
mov
dec
aaa
inc
fwait
test
popa
lock
add
push
xchg
outsb
out
imul
pop
rep
mov
push
aaa
test
bound
sbb
sbb
dec
cmp
mov
sbb
nop
jmp
adc
outsl
andb
movb
xor
ja
mov
data16
jbe
stos
sub
cmp
pop
int
pop
add
stos
subb
add
clc
dec
cmp
dec
iret
fisubs
pop
leave
xor
push
shlb
orb
test
inc
pop
inc
inc
es
aam
mov
jae
bound
cmp
xlat
stc
sub
insb
aaa
cmp
dec
pop
sbbb
fcoms
push
jp
push
cld
inc
adcl
xor
dec
cwtl
jge
mov
ja
iret
cwtl
orl
mov
leave
pop
adc
lock
or
cs
js
fnstsw
scas
pop
dec
faddl
addr16
iret
sbb
mov
push
mov
je
mov
ss
mov
sub
ss
or
sahf
scas
pushf
mov
iret
or
scas
xor
imul
xchg
insl
pop
cli
repz
out
jbe
faddl
inc
shlb
sbbb
mov
adc
add
cwtl
lods
nop
cmpsb
xchg
adc
cmp
push
loop
xor
lret
mov
inc
mov
mov
shlb
lds
les
cld
lods
sbb
pop
incb
inc
test
cltd
ljmp
bound
jae
push
hlt
sti
push
fidivrl
outsb
cmp
mov
cld
sbb
mov
mov
pop
jp
call
lea
aam
cld
ss
lock
xchg
xor
daa
sbb
push
addr16
mov
movsb
jecxz
mov
lea
jg
ret
jns
insb
mov
divb
sub
lret
loopne
adc
or
into
dec
xchg
je
aam
push
adc
rorl
lds
js
hlt
mov
mov
add
aaa
sbbb
push
push
ss
rcrb
cmp
push
mov
in
insl
inc
or
lret
and
movsb
xchg
push
xor
outsb
inc
ja
pop
jecxz
arpl
and
cwtl
out
pop
loope
jmp
mov
aad
std
icebp
into
dec
or
test
popa
outsl
mov
sub
inc
imul
dec
in
cmp
sub
mov
xor
mov
mov
mov
pop
add
test
dec
sar
cs
and
sbb
sbb
or
xchg
in
fwait
addr16
add
mov
imul
rorb
test
jge
cmp
inc
addr16
cmp
jp
fistpll
loop
adc
int
sub
into
pop
roll
cmp
fidivl
sub
incl
xchg
lret
sbb
jb
and
ljmp
sub
or
lret
jle
mov
out
stos
stc
ret
inc
inc
add
cmpsl
flds
in
mov
dec
sub
pop
adc
mov
xchg
cmp
dec
stc
xchg
xchg
leave
in
dec
mov
xchg
outsl
lret
and
mov
push
ds
push
push
pop
sbb
cld
hlt
adc
xchg
xchg
cmpsb
scas
mov
shlb
jp
xchg
jbe
mov
popf
dec
inc
mov
push
jge
jns
fxtract
jb
out
jl
es
loopne
jns
mov
ss
inc
adc
pushf
es
cmp
test
outsl
in
push
jno
lcall
lea
aaa
fs
outsb
mov
mov
and
aam
pop
inc
sbb
mov
jne
add
dec
lods
jmp
testl
andb
pop
cmp
cmc
test
mov
iret
xor
iret
dec
mov
inc
repz
pop
scas
mov
xchg
jle
stos
fsubp
imul
out
test
xchg
inc
push
push
add
shll
testb
lods
add
xchg
dec
dec
xor
fstps
notb
xchg
das
jb
clc
cmp
pop
xchg
pop
mov
mov
inc
scas
xor
iret
int3
cli
loope
stos
sub
xor
push
lret
pushf
or
stc
sbb
push
adc
repnz
mov
mov
inc
push
repz
mov
and
test
inc
clc
and
mov
mov
movsl
jo
add
jg
inc
pop
aas
loope
sub
dec
dec
ljmp
test
dec
xchg
imul
jge
aad
jns
pop
or
hlt
xlat
sbb
mov
mov
das
into
xchg
fildll
inc
push
jecxz
pop
dec
push
stos
jno
mov
jns
adc
push
arpl
mov
mov
cltd
mov
push
pop
adc
insb
je
popa
imul
repnz
mov
daa
cmc
dec
mov
repz
sub
cmp
pop
push
or
cmc
sub
cmpsb
jo
das
push
lcall
nop
pop
xchg
or
scas
xorb
hlt
add
push
aas
sarl
fistpll
xchg
fsubrl
xor
fisttpll
ljmp
xchg
loope
insb
pushf
inc
mov
icebp
icebp
push
ljmp
pop
push
call
adc
mov
inc
dec
or
pop
addr16
mov
mov
pop
sti
dec
adc
dec
clc
inc
xchg
cmp
add
push
cli
sbb
lds
int
test
dec
or
iret
fwait
jmp
fs
iret
aas
fdivrl
cmpsb
in
xchg
inc
sub
adc
leave
lock
jle
push
arpl
out
negl
ljmp
enter
js
dec
adc
add
pop
insb
pop
xchg
subl
ror
shll
fs
test
sub
cmp
lock
pop
icebp
or
clc
scas
movsl
popf
jg
loop
inc
dec
popa
mov
mov
dec
mov
sub
inc
mov
push
in
mov
aad
adc
adc
push
into
jecxz
jge
xchg
mov
orb
xor
frstor
sub
jle
sbb
push
shrb
mov
outsb
test
jg
std
mov
lcall
cmp
sbb
imulb
mov
mov
repz
pop
push
fildll
cli
xor
shlb
pop
xor
stc
shlb
xchg
dec
lds
rcl
sub
and
movsl
jge
mov
shrb
xchg
in
mov
push
stos
into
or
xor
adc
cmp
jnp
add
je,pt
and
out
push
jl
scas
add
mov
fildll
inc
sub
push
test
mul
cmpsl
dec
mov
xchg
cltd
mov
push
int
pop
inc
push
add
add
fstps
es
iret
push
jbe
push
insl
ror
fdivl
rcll
push
inc
rorl
sbb
idivl
mov
pop
aaa
mov
jns
sub
scas
int
mov
iret
pop
sbb
mov
cmp
loope
cli
push
pop
jg
insl
inc
out
stos
arpl
cmp
aas
and
pop
mov
gs
sub
lock
jnp
xor
sbb
sbb
cli
repnz
outsb
stos
mov
sub
jno
push
fimull
rclb
test
aad
jmp
hlt
mov
ficoml
sub
adc
xchg
mov
je
cmp
subb
cwtl
mov
mov
movsl
cli
sti
sub
repz
daa
decb
xchg
int
mov
xchg
fmull
add
cmp
push
in
push
mov
and
cmp
inc
lahf
adc
jmp
push
sub
roll
push
nop
dec
pop
dec
setb
and
dec
lcall
push
movsl
sub
push
add
jl
out
cmp
cmp
mov
and
inc
nop
cmpsl
lods
aam
pop
dec
cmp
insl
dec
mov
fisttpl
xchg
pusha
mov
dec
adc
mov
pop
sbb
decl
loopne
fisttpll
pop
lret
cmpsb
cltd
lret
dec
dec
test
push
mov
fcompl
aam
clc
or
inc
xchg
js
insb
inc
addl
mov
xchg
pop
pop
pop
js
out
sbb
sub
dec
sarb
jl
mov
data16
mov
insb
mov
push
mov
aas
fdivrl
sub
dec
sbb
inc
cmpb
mov
pop
jb
jp
adc
jp
loop
fisttps
cmc
nop
stos
fwait
add
outsb
imulb
sahf
into
mov
dec
adc
loopne
pop
jmp
pushf
inc
and
mov
dec
dec
mov
adc
cli
or
scas
cmc
jae
push
inc
sub
ljmp
mov
sbb
out
popa
fdivrs
int3
jmp
int
and
daa
dec
leave
push
jno
cmp
incb
dec
lods
aas
int3
std
push
std
push
call
mov
sbb
cmpsb
jb
push
ja
adc
movsl
icebp
nop
mov
mov
jmp
and
mov
pop
sbb
sub
aaa
pop
push
adc
cmp
pop
aaa
xchg
cmpxchg
adc
enter
mov
cwtl
stos
mov
aam
push
push
and
je
hlt
fdivs
cmpsb
sub
mov
dec
fadds
outsl
insl
rcrb
add
push
sbb
pop
mov
xor
jg
in
push
test
sbb
and
sbb
and
into
jns
in
imul
or
scas
ds
popf
or
std
jg
cwtl
adc
out
xlat
lcall
fcoml
fnstenv
push
in
out
gs
mov
cmp
jecxz
inc
xor
xor
fnstsw
pop
shrl
mov
and
cmc
scas
mov
cld
mov
inc
pop
or
sub
ret
fldt
mov
sub
divb
lds
mov
cmp
push
mov
xchg
in
or
pop
pop
mov
cltd
std
enter
push
out
push
xor
mov
lods
mov
inc
lcall
push
mov
pop
push
inc
lcall
adc
xchg
cmpsl
rcrb
insb
sbb
enter
shr
jle
sbb
cli
cmp
ljmp
out
shrl
cli
int3
inc
xor
sbbb
and
out
adc
sub
dec
jecxz
cmp
lahf
nop
std
add
into
test
jle
repnz
pop
sbb
or
pop
inc
in
dec
fistps
jp
or
xchg
outsb
rorl
inc
shrl
dec
cmp
dec
mov
in
adc
rorb
ret
and
test
gs
fwait
insl
fildl
lods
xchg
push
sahf
pop
es
push
sub
jp
add
mov
mov
mov
insl
xchg
cmpsl
icebp
aaa
push
pop
xchg
aam
ja
cmpsl
mov
sahf
stos
stc
sbb
mull
shl
dec
fwait
adc
or
dec
fisttpl
sbb
stos
ficoml
add
cmp
xor
insb
push
jp
sti
mov
int
int
cs
mov
jp
cmp
cmp
imul
cmpsb
sahf
mov
dec
aas
cmp
xchg
pop
repz
mov
jb
jp
push
or
sub
out
loopne
xchg
cld
test
pop
or
sbbl
xchg
dec
push
repnz
add
dec
daa
scas
jbe
aaa
push
and
les
mov
push
mov
adc
push
cmp
ret
xor
mov
mov
shll
mov
xchg
lret
fsubl
mov
loopne
lods
add
ljmp
pusha
call
push
xor
fildl
jmp
push
daa
mov
dec
and
pop
rcrl
xchg
test
testl
inc
pop
cmp
cmp
sahf
sbbb
sub
ret
inc
add
arpl
dec
test
cld
cmp
cltd
leave
rcrb
pop
mov
and
popf
adc
fstp
add
cwtl
mov
sahf
cmpsb
xor
sbb
pop
adc
or
pop
or
jns
scas
sub
mov
movsb
jns
aaa
sub
lcall
mov
test
aas
div
and
es
and
aaa
popf
out
pop
andb
mov
daa
cmp
movsl
andb
mov
xchg
popf
shll
jmp
adc
sbb
iret
xor
ljmp
addb
push
hlt
cli
std
jle
add
and
cmp
les
loop
hlt
inc
es
insb
push
das
cmp
mov
sub
xchg
sbb
sbb
jne
mov
xchg
adcl
xlat
inc
lods
push
ja
inc
lret
pop
sub
les
mov
mov
mov
es
popf
cmp
xor
mov
sbb
mov
out
mov
insl
iret
lds
sbb
ss
stos
imul
cmp
bnd
jmp
mov
inc
or
outsb
and
mov
mov
hlt
cmc
adc
add
jp
lahf
mov
mov
int3
ret
or
cmp
nop
out
mov
imul
call
into
ja
lcall
add
push
xchg
mov
or
movsb
sub
xchg
test
dec
push
xchg
sub
cmpsl
jb
sub
sub
sbbb
inc
sbb
popf
dec
loope
mov
add
add
outsl
xor
pop
and
divl
mov
sub
jns
jo
inc
adc
loop
out
test
pushf
lcall
es
xchg
outsb
mov
push
adcl
sbb
and
mov
cmc
or
xchg
ror
pop
movsb
cmp
icebp
not
or
jae
out
inc
sbb
int3
add
push
scas
adc
add
fwait
pop
int
arpl
sub
imul
sarb
dec
repnz
push
lods
or
repnz
cmp
movlps
dec
adc
sub
and
mov
call
cwtl
loope
jmp
inc
push
add
mov
outsb
lahf
popa
adc
movsb
daa
repnz
mov
lret
aam
cmp
jns
fnstenv
loopne
xchg
xchg
and
push
dec
add
icebp
add
gs
sti
lcall
pop
xchg
je
mov
repnz
xchg
adc
or
nop
jne
push
mov
and
dec
xchg
push
push
mov
mov
test
mov
lret
clc
mov
mov
cmp
pop
js
testb
pop
scas
xor
aad
push
cld
inc
mov
cmp
jecxz
and
mov
or
in
pop
movl
shl
outsl
adc
jecxz
sarl
insl
iret
popf
inc
ret
out
xor
xor
mov
push
int
ljmp
cmp
xor
or
lds
jecxz
cmp
fimull
add
dec
out
dec
xor
ret
xor
push
or
pusha
roll
jbe
cmpl
add
outsb
in
int
or
xchg
sub
test
cmp
sub
lcall
sti
call
subl
pusha
inc
cmp
inc
into
or
aas
fmull
das
jno
jecxz
fstps
xchg
mov
mov
das
sbb
outsb
mov
pop
jns
test
mov
mov
faddl
sbb
mov
and
push
fucomip
push
sbb
and
aas
pop
scas
clc
xchg
fnstcw
in
push
jle
mov
pop
lods
cmp
mov
std
cmp
popa
mov
lods
sbb
push
mov
rcll
clc
pop
std
mov
test
adc
cmpl
rcpps
push
cli
ljmp
jns
repz
xchg
mov
ret
sub
addw
or
mov
fstps
sub
xchg
inc
mov
pop
adc
addl
cmp
cmp
out
loope
mov
add
inc
cmovg
xchg
lea
cmp
fnsave
mov
mov
negl
les
jle
clc
pop
pop
sbb
ret
addr16
cli
sbb
push
ret
stos
lods
imul
cli
mov
aad
mov
out
into
cmpsl
orl
insl
push
jne
sub
in
je
adc
enter
orb
rolb
mov
fstps
xchg
scas
jg
jbe
call
ds
pop
pop
lea
lods
out
movsb
in
add
sbb
jo
call
pop
fisubrs
dec
xor
push
sbb
cmp
and
gs
inc
push
mov
mov
clc
ljmp
daa
jmp
js
cmp
mov
pop
repnz
or
cmc
pop
imul
imull
cmp
bound
sub
push
mul
xorb
and
xchg
mov
mov
fisttpl
mov
jg
sahf
pop
cwtl
xor
scas
bound
mov
mov
xor
push
inc
stc
ljmp
add
fmuls
jp
outsb
int
sti
jge
mov
dec
sub
adc
push
sub
nop
fildl
jno
mov
mov
xlat
mov
shll
mov
fidivs
movsl
and
push
and
ljmp
iret
adc
lret
add
dec
cmp
mov
ret
push
mov
mov
xchg
push
test
add
fcoml
xchg
and
pusha
mov
or
push
jb
push
clc
movsl
push
xchg
mov
push
lock
mov
lods
pop
cmp
out
fdivrl
push
sub
fidivrs
mov
ja
inc
add
je
dec
jp
push
inc
xchg
out
mov
int
cmp
cmpb
jg
mov
popa
xor
je
sti
adc
roll
inc
aas
push
mov
mov
fsubr
pop
mov
cltd
orl
orb
xchg
jo
loope
pop
fbld
inc
lret
es
jb
mov
hlt
aad
or
sbb
adc
cs
inc
outsl
std
fistpll
adc
iret
jno
mov
xchg
or
popf
and
push
push
scas
xchg
aaa
jb,pt
or
clc
js
lret
ret
ret
xor
mov
pop
push
jmp
into
mov
pop
lret
push
jb
orl
mov
add
imul
mov
repnz
adc
sbb
ret
jg
xchg
mov
sub
rdmsr
lcall
dec
int
xor
push
test
sub
stos
insb
outsb
and
popf
sub
jecxz
adc
in
xchg
fldl
add
dec
xor
into
in
mov
insb
dec
jnp
mov
add
and
and
mov
popa
je
out
stc
mov
sbb
leave
mov
mov
sub
sti
add
test
fnstcw
dec
std
fisttps
dec
pop
sub
jecxz
andl
mov
test
cwtl
aaa
push
repnz
lret
js
loopne
cmpl
jecxz
sub
movsb
inc
leave
outsl
in
sti
stos
test
or
push
mov
rorb
out
movsb
fs
lds
icebp
jge
fwait
jb
inc
sahf
fcompl
loopne
loopne
mov
mov
mov
pop
fiaddl
or
clc
sub
xor
xor
mov
and
xorl
sub
push
inc
dec
les
or
fs
mov
leave
mov
dec
inc
shlb
cmc
push
inc
inc
cmp
cmpsl
cmp
cmp
cmp
cmpsb
call
jbe
sbb
pop
and
push
sub
jae
sub
sbb
cli
in
jl
xor
add
movsb
stos
jne
lods
mov
loop
add
std
xlat
insb
pop
addr16
dec
ja
lods
aaa
jno
pop
lock
ljmp
lds
xchg
ret
xchg
sub
push
das
gs
testl
in
out
pop
stos
dec
jbe
scas
xchg
mov
sub
xchg
mov
mov
xchg
add
xchg
adc
clc
test
arpl
scas
in
mov
mov
xchg
jl
je
outsb
stos
lock
jb
aaa
out
adc
dec
mov
fnsetpm(287
test
clc
and
cmp
call
icebp
das
sub
movsl
fistl
mov
loopne
ret
out
pop
jge
mov
and
clc
dec
jge
int
out
repz
mov
mov
cmp
xlat
imul
rorl
add
xchg
xchg
pop
clc
xor
rcll
xchg
aas
sbb
scas
roll
aaa
and
mov
sbb
jbe
sbb
jnp
sub
lret
add
xlat
sbb
out
push
adcb
push
insl
je
mov
sbb
mov
or
add
push
or
sbb
mov
fistps
pop
icebp
dec
mov
icebp
and
hlt
adc
test
and
ret
mov
fldl
inc
jne
stos
lods
mov
stos
jne
jns
adc
dec
jmp
add
adc
dec
scas
or
jno
nop
dec
pushf
inc
lods
inc
sub
jmp
and
mov
icebp
jecxz
pop
jo
lock
jae
in
movb
push
cltd
sub
and
mov
push
in
inc
dec
xlat
jecxz
add
mov
push
rcl
jo
fs
inc
add
push
sbb
and
push
xchg
or
movsb
insl
pop
cwtl
cmp
xchg
fldl2e
push
add
push
xchg
pop
sbb
push
pop
es
adc
je,pn
xchg
scas
testl
mov
aas
ljmp
xor
rorl
cs
push
mov
jno
push
fcmovu
notl
bound
add
cmp
ret
mov
pushf
mov
imul
jp
clc
add
cltd
ror
push
or
je
insb
push
repz
jbe
je
shll
cwtl
mov
jecxz
jbe
jae
daa
subb
out
icebp
movsb
xor
and
mov
stos
inc
mov
cltd
mov
jmp
fldl
mov
nop
sub
jl
fmuls
jmp
push
push
push
shll
or
nop
jle
mov
div
lea
das
sub
nop
sub
cmp
add
cld
dec
sti
xchg
and
cwtl
loope
inc
mov
sub
das
lock
ret
add
ljmp
dec
mov
mov
pop
inc
in
out
icebp
add
xchg
fnstenv
and
cltd
std
adc
fnsave
pop
aas
xor
jmp
adc
clc
rclb
lea
push
pop
jo
jb
lods
dec
sbbb
lcall
and
out
cmp
cld
icebp
imul
mov
stc
aaa
pop
jle
xor
fcompl
add
subl
pop
cmpsb
aad
pop
pop
subb
xchg
adc
cmp
pop
and
xchg
mov
popa
push
dec
xor
mov
test
add
aas
or
addb
loop
roll
out
mov
lcall
out
and
shlb
rol
sbb
push
pop
xchg
pop
cmp
mov
jp
popa
xchg
xchg
pop
lock
roll
xor
scas
cmp
inc
xor
and
cmpsb
push
adc
ret
adc
enter
sahf
push
jo
pushf
jl,pn
lcall
push
jle
dec
push
bound
adc
ds
cmp
lea
or
aad
jmp
in
sub
jne
test
mov
mov
jp
ret
loope
imul
xor
cmp
cwtl
test
jl
mov
jle
and
adc
cmc
scas
pop
jle
mov
sub
fsub
sub
pop
mov
dec
jbe
jns
lahf
hlt
aas
xor
fsubs
xor
test
dec
inc
inc
in
or
out
fwait
out
jne
inc
or
sbb
push
lret
and
mov
and
dec
xor
ljmp
mov
xor
sub
dec
in
iret
xchg
scas
fcmovnu
sub
dec
cmp
jne
mov
rcrb
loopne
cs
repz
add
adc
push
xor
sbb
iret
adc
inc
sub
adc
gs
flds
out
cli
pushf
mov
sti
call
imul
sub
and
bound
dec
in
jle
es
scas
scas
fadds
stos
mov
call
xor
sub
ljmp
lods
dec
pop
adc
mov
jmp
not
lods
popf
test
cmp
push
xchg
lea
mov
mov
jmp
mov
into
and
and
inc
out
inc
jg
enter
mov
or
out
jle
or
dec
push
jge
fsubrs
mov
and
and
pop
xor
lret
push
popf
movsl
xchg
ljmp
jne
xchg
dec
push
scas
aad
cmc
lods
repz
or
push
sbb
xchg
cmp
aaa
popf
push
dec
sub
jecxz
mov
pop
faddl
inc
fmull
ljmp
test
adc
in
mov
and
call
xor
loopne
dec
in
ret
test
nop
sbb
fsts
cmp
sbb
or
mov
pop
loop
mov
inc
cmp
ja
sahf
push
fmuls
add
mov
dec
mov
movsb
test
stc
pop
mov
hlt
mov
push
fcomip
dec
out
push
in
popa
enter
cs
sbb
push
push
gs
fstpt
inc
sti
lock
shlb
es
ja
clc
pop
mov
sub
mov
add
lea
sub
mov
jno
lds
jno
cltd
and
enter
sub
inc
aaa
pop
and
rorl
mov
test
fistl
jns
xlat
or
mov
hlt
fistps
mov
daa
pshufw
sbb
xchg
nop
inc
cmp
xor
dec
push
enter
cmpsb
rclb
je
popf
je
pop
arpl
lretw
fists
aaa
stos
dec
add
jecxz
xor
push
xchg
cmp
mov
nop
loope
pop
jno
push
or
sub
fwait
sbb
jae
add
push
mov
inc
lea
in
adc
shr
int
test
cmp
cmpw
adc
lods
insl
adc
daa
mov
fldt
dec
mov
stc
rcrb
sbb
lock
out
sbbb
jmp
pop
jns
lret
arpl
lahf
ss
cmpsl
mov
or
scas
sbb
jp
mov
push
fwait
mov
push
push
je
data16
inc
cmp
add
cmpsl
add
mov
ja
fistps
pusha
adc
lea
xor
adc
xor
cmp
das
xchg
jle
jl
sbb
add
sub
push
xchg
jb
cmpsb
push
xchg
dec
in
pop
mov
jmp
sti
rcrb
idivl
mov
aam
push
addr16
in
mov
pop
add
xchg
jl
clc
outsb
mov
das
cld
loope
lret
xchg
and
or
mov
aas
pop
xchg
in
shll
jne
xchg
add
pusha
mov
pop
xchg
fmulp
and
int
lret
movl
pop
int
ljmp
mov
mov
pextrw
or
mov
xchg
mov
inc
repnz
xor
les
addr16
xorb
ror
dec
mov
cld
int
jle
movsb
cmp
sbb
into
sub
aad
testl
rorl
fcomi
inc
push
aas
xor
xchg
pop
push
mov
js
sub
mov
ret
and
mov
fcmovnbe
inc
fldenv
pop
sub
dec
mov
dec
in
and
cld
sub
dec
flds
stos
mov
jns
pop
mov
mov
pop
xchg
ds
sub
scas
ss
imul
push
sub
or
scas
sahf
mov
sbb
mov
jo
pop
repnz
sahf
jp
lahf
push
jg
xchg
sbb
jl
jb
mov
jle
or
subb
mov
mov
sbb
pop
cmc
insl
popf
fs
jne
mov
xor
and
loop
sbb
call
je
in
loop
jl
fisttpl
ss
xor
in
mov
cmpsb
push
xchg
jno
xchg
push
iret
stc
mov
adc
fcomip
int
in
aam
pop
iret
pushf
rcl
mov
mov
push
jge
dec
add
ffreep
mov
add
push
call
dec
insl
dec
mov
sbb
mov
add
ret
fcompl
repz
and
lcall
jge
cmpsl
pop
nop
jle
aaa
and
add
aad
inc
push
inc
rcrl
jl
xor
aaa
cmp
xchg
fnstcw
xchg
jg
insb
cmp
inc
or
inc
dec
in
dec
stos
jb
jns
imul
push
fcmovb
pop
push
xlat
push
dec
bound
pushf
sub
push
outsb
mov
insb
fstpl
stos
add
outsb
add
adc
mov
loope
sbb
and
adc
std
fisubrs
shlb
fwait
cltd
xchg
jnp
pop
xchg
fcomp
push
push
std
push
inc
inc
scas
subb
lret
iret
mov
mov
push
xchg
mov
cmp
xor
mov
cli
int3
dec
sbb
jbe
pop
loope
js
stos
sub
or
or
jmp
jp
stc
test
repnz
enter
xor
enter
cmc
cmp
mov
insl
dec
jnp
sbb
or
pop
ja
xor
into
cmpsb
imul
leave
pop
xor
shll
dec
push
push
inc
adc
add
push
add
mov
cs
add
movsl
pop
xor
das
mov
mov
popf
mov
xchg
pop
mov
push
mov
jne
fldl
pushf
fsubs
mov
jb
push
sub
sahf
ss
xlat
fidivl
mov
or
aaa
js
das
clc
add
shrl
mov
loop
sub
mov
mov
xlat
test
test
xorl
arpl
adc
aaa
lret
fsubs
add
pop
mov
cmp
jmp
test
xor
dec
imul
inc
add
icebp
xor
repnz
cmp
test
lahf
cmp
je
ds
ret
in
dec
lods
ljmp
aaa
and
sub
sti
sar
mov
test
xor
jae
and
outsl
sub
in
je
inc
fsubrs
inc
fs
enter
call
sub
cld
add
je
mov
cltd
rorl
pop
lcall
jne
dec
xchg
scas
jne
jne
pushf
inc
sbb
rorb
inc
leave
inc
mov
pushf
bound
mov
xlat
cmp
repz
dec
and
mov
stc
dec
nop
dec
repnz
sbb
pop
ret
lret
mov
and
stos
scas
push
cmp
mov
pusha
jmp
push
xchg
and
or
push
jmp
jle
scas
xchg
dec
call
imul
fdivr
cmp
add
jecxz
das
cmp
xor
loopne
andb
cmp
mov
cmc
pop
fwait
psubusb
add
xlat
vorps
adc
repz
dec
mov
scas
mov
aaa
out
dec
mov
and
sbb
lods
jae
jmp
inc
jl
movsb
aaa
int3
cli
pop
jmp
rcll
dec
jmp
shrl
mov
xor
cmpsl
xor
or
mov
das
aam
je
popf
mov
mov
ja
mov
test
rcrl
jb
mov
dec
imul
cmp
pop
add
jbe
fucom
push
lock
mov
fnstsw
push
in
dec
push
mov
ss
lds
lock
ss
stos
ret
mov
xchg
mov
push
sub
cmp
arpl
enter
mov
shl
inc
dec
add
les
in
push
test
inc
inc
pop
aas
imul
and
mov
insb
fs
adc
xorl
imul
sub
movsl
xor
ss
das
mov
add
or
ja
xlat
int3
push
dec
sahf
pop
in
xor
icebp
adc
pop
jg
lret
in
inc
inc
and
fbstp
mov
sbb
mov
add
stos
or
repnz
leave
call
mov
xor
pusha
movsb
and
ljmp
or
lods
or
pop
push
lahf
loop
dec
add
mov
in
outsl
mov
ret
mov
inc
add
iret
imul
scas
dec
cmpsl
lahf
dec
ret
out
lods
sub
and
jg
xor
mov
fwait
cltd
xchg
mov
push
xlat
int
add
daa
xchg
fcmovu
or
test
movsl
cmpsl
into
xor
mov
cmp
mov
push
push
add
icebp
mov
mov
aaa
in
jge
mov
inc
or
push
lock
xchg
push
push
jp
or
mov
jbe
movsl
and
push
pop
int3
in
repnz
jne
pop
lods
outsb
mov
mov
mov
clc
outsb
pop
aas
iret
stos
repnz
jecxz
dec
sbb
into
cmp
jge
push
insb
xchg
outsl
dec
push
inc
daa
push
mov
fmuls
aad
xchg
and
test
cltd
mov
cld
pop
je
adc
inc
cmp
xor
lahf
mov
in
mov
fxch
cwtl
xor
xchg
das
push
xchg
loopne
enter
call
pusha
or
inc
cs
inc
filds
mov
lret
mov
pop
xorb
stos
popf
cmp
cmpsl
cmp
jo
xchg
add
push
ds
lret
push
jp
mov
cmp
ret
xchg
ljmp
jo
fwait
mov
inc
jmp
js
pop
outsl
mov
jne
pop
fwait
out
mov
cltd
xor
mov
test
sub
xchg
push
or
cs
mov
push
adc
aad
cmpsl
adc
xor
mov
mov
or
leave
xchg
mov
dec
insl
cli
mov
mov
mov
jno
aas
sbb
out
lahf
in
lcall
or
test
xlat
bound
popf
cmc
notb
cmpb
insl
and
mov
jo
push
jl
and
out
xchg
call
mov
pop
hlt
mov
je
pusha
ja
jmp
or
lods
sbb
sahf
push
stos
mov
js
jne
enter
mov
ljmp
getsec
inc
add
xchg
dec
and
es
sub
stc
dec
sbb
arpl
add
daa
adc
push
dec
lahf
jecxz
iret
stos
popf
mov
faddl
add
imul
xor
mov
mov
ja
pop
xor
dec
adc
loopne
dec
dec
aas
mov
rol
test
jmp
mov
mov
mov
push
inc
sbb
mov
pop
insl
lret
test
adc
adc
lret
and
sarl
or
test
cmp
gs
in
cmc
enter
pusha
xchg
xor
cmp
ret
pop
sahf
push
cmc
jno
xor
pop
scas
and
divb
sub
or
dec
or
cmp
out
cmpsl
in
clc
sbb
or
orb
fisubs
push
aad
cs
lods
into
test
pop
loop
daa
ds
sub
ret
jp
maxps
mov
movsl
cmpb
inc
push
mov
fwait
addb
adc
in
jbe
insl
pop
fadds
xchg
inc
jo
jne
cmp
mov
push
out
rcl
add
xchg
in
jl
jecxz
push
and
ds
cld
stc
mov
fsubp
movsl
addr16
mov
jmp
inc
fmuls
insl
cmc
imul
sub
in
arpl
xchg
mov
push
or
fs
bound
movsl
sbb
jne
mulb
jnp
jno
in
out
fdivl
and
fimuls
jo
lds
addr16
imul
rcrb
xchg
lods
jge
js
mov
int3
jne
xchg
cmpl
adcb
out
mov
xor
test
aas
pop
add
xchg
insb
mov
inc
add
fidivl
jge
mov
mov
shlb
stos
stos
call
lret
idiv
ja
add
mov
in
jo
lods
lds
mov
sti
push
scas
imul
jmp
in
mov
adc
mov
mov
mov
outsl
outsb
pushf
or
lret
inc
dec
cltd
lea
mov
lahf
iret
sub
loope
xor
loop
sub
mov
sbb
and
subb
aaa
add
and
in
add
imul
notb
jb
jmp
cmp
insl
sub
push
pushf
sub
or
es
sbb
mov
in
scas
adc
xchg
incb
aad
fld
mov
and
fistpll
mov
imul
lret
mov
xor
ja
das
mov
enter
pop
inc
mov
pop
xor
xchg
aas
jns
adc
imul
xchg
out
adc
or
adc
out
cmpsl
sti
mov
test
andb
cmpl
adc
pop
sub
fbld
cld
mov
mov
test
ds
sub
jo
fdivs
sub
or
test
mov
dec
ficomps
fnstcw
inc
outsb
adc
push
outsl
jne
push
or
out
dec
sub
cmp
ror
adc
xor
push
dec
cmp
xor
rsqrtps
or
leave
mov
mov
push
sbb
lcall
mov
dec
mov
cmp
cmpsl
psubusw
dec
lcall
sahf
and
mov
add
push
gs
dec
bound
dec
mov
int3
fwait
test
pop
mov
enter
pop
aas
push
fisttpll
fucomi
hlt
es
cli
in
xchg
add
clc
push
adc
ret
push
inc
pop
inc
add
mov
ljmp
inc
test
lahf
pop
xor
add
sub
pushf
xchg
sub
sub
cmp
pop
and
cmp
inc
jp
xchg
icebp
insl
inc
lds
or
jb
pop
cmc
dec
test
adc
mov
ficoml
lea
out
icebp
int3
insl
mov
inc
jns
daa
ret
jae
fbld
sub
in
mov
clc
dec
cmp
sub
lahf
loop
inc
int
dec
lret
lods
leave
int
xor
mov
or
or
dec
sti
inc
sbb
sbb
mov
je,pn
insl
pop
mov
enter
leave
inc
sti
arpl
mov
sub
dec
inc
ja
mov
jbe
sub
sub
cmp
push
or
hlt
daa
outsl
nop
dec
and
cmp
lds
or
repz
lret
das
test
jmp
mov
push
adc
mov
ret
mov
and
lods
or
mov
jo
loop
in
mov
mov
inc
fbstp
xchg
rcll
frstor
in
push
sbb
xchg
push
scas
nop
es
stc
iret
push
pop
es
lcall
stos
incl
je
dec
and
mov
scas
loope
je
arpl
sbb
cmp
adc
adc
mov
cmc
rclb
pop
mov
push
xchg
mov
fdivrs
in
jecxz
jb
jecxz
jo
mov
sub
cmc
jmp
mov
aaa
hlt
jg
pop
shlb
jb
fs
lret
test
xor
movsl
add
idiv
mov
mov
popa
dec
sbb
lods
mov
cs
popa
mov
in
idiv
test
fisubl
into
lcall
pusha
xor
sub
xchg
xchg
jge
mov
popf
add
inc
outsb
fstpl
into
push
cs
sub
jbe
push
lahf
scas
insb
inc
arpl
leave
pop
out
sbb
pop
add
sub
ret
aas
mov
xlat
jnp
data16
stos
aas
sbbb
dec
pop
repz
cmpsb
sbb
insl
repz
push
js
jl
into
push
pop
and
les
xor
ret
aam
rcll
stos
or
mov
pop
xor
mov
and
inc
imul
loope
xchg
cli
notb
cmp
popa
xor
jp
pop
sbb
ds
sub
mov
es
inc
inc
ret
ret
mov
movb
lods
aas
xchg
jns
sbb
fimuls
add
hlt
es
les
and
push
pop
ja
jo
dec
lds
adc
test
outsl
lret
loope
rcl
icebp
inc
mov
mulb
pop
daa
xchg
sbb
mov
xchg
jecxz
jns
mov
inc
push
add
insb
adc
lahf
inc
inc
enter
mov
ljmp
mov
xor
in
in
movsl
ds
cmp
add
outsb
icebp
repz
fldt
addb
cmp
fildl
lret
icebp
xchg
lahf
pushf
dec
call
scas
lcall
decb
cmp
dec
std
inc
lods
mov
imulb
jl
cmc
pop
cmc
les
and
addr16
mov
inc
lods
ret
out
push
or
pop
pop
jno
mov
inc
push
cmpsl
adc
mov
push
add
and
lock
fistps
jge
push
mov
ss
shlb
xor
lahf
mov
pop
push
xchg
push
cmp
std
test
inc
adc
fldl
add
std
lcall
mov
out
cmp
cwtl
stos
push
das
fildll
int
push
cltd
sbb
jnp
and
or
sbb
push
movsb
add
nop
shr
xor
in
mov
cmp
mov
and
push
and
jmp
fistps
jnp
dec
lds
repnz
leave
lret
jb
or
test
mov
das
daa
dec
dec
jmp
sbb
ja
pusha
aas
or
inc
sti
in
dec
mov
cmp
imul
leave
cmp
rcl
or
ljmp
ss
and
mov
push
bound
out
dec
push
inc
inc
push
mov
cld
bound
sbb
cwtl
mov
sbb
sub
lds
inc
sbb
mov
push
ffreep
loop
push
mulb
inc
rcr
mov
inc
lock
fisubs
dec
xor
jecxz
mov
lret
mov
rcrl
arpl
rclb
je
shl
mov
pop
cmp
push
icebp
pop
mov
add
das
push
add
jae
ljmp
jecxz
xchg
push
aad
enter
je
ss
mov
add
mov
mov
xor
pop
iret
sub
test
bswap
cld
push
insb
push
sub
pusha
push
sub
movsb
js
lock
pop
ss
insl
push
cltd
dec
dec
mov
mov
les
jge
ljmp
sbb
lock
pushaw
push
mov
jle
xor
push
jmp
test
push
mov
lods
cmp
jbe
fists
cmp
add
mov
pop
jp
pop
add
push
out
or
fistl
adc
js
dec
fisubs
inc
inc
outsl
cmp
push
sbb
out
push
adc
sbb
mov
mov
loope
test
fcoml
popaw
bound
mov
pushf
sub
les
sbb
pop
cmp
mov
in
push
xor
outsl
fidivl
mov
xchg
je
dec
inc
mov
mov
jbe
sub
cltd
sbb
pop
or
lret
stc
jno
sahf
mov
add
sbbl
mov
int
dec
jge
add
pop
sbb
ja
xor
adcb
xchg
mov
mov
movsl
or
cmc
jae
jnp
in
or
mov
rorb
mov
mov
mov
fnstenv
add
mov
stos
les
movsb
andb
test
add
jne
data16
enter
stc
shll
push
mov
push
arpl
popf
or
push
aaa
bound
push
enter
pop
scas
push
mov
xchg
xor
cmp
push
adc
ret
hlt
push
cmp
arpl
xchg
jnp
out
orl
mov
inc
sti
imul
daa
and
fldenv
lds
xchg
pop
mov
adc
dec
push
xchg
pop
rcl
clc
je
mov
fidivs
rolb
dec
imul
daa
mov
adc
xor
push
xchg
ljmp
out
pmulhw
xor
fxch
out
jnp
aaa
push
in
or
xchg
add
xchg
hlt
push
xor
inc
push
jno
and
fdiv
mov
stos
or
mov
push
mov
icebp
sub
pop
test
pop
dec
jge
iret
inc
inc
push
mov
movsl
sub
jnp
pop
cltd
or
ja
flds
ds
sub
sub
fisubs
adc
nop
bswap
pop
dec
rclb
xchg
push
pop
mov
lds
ret
adc
mov
adc
add
shrb
mov
fistpl
int
icebp
repz
std
mov
jno
jmp
xchg
insl
mov
out
out
int
dec
jle
and
mov
outsb
cmp
add
subb
xor
lret
sub
or
dec
add
adc
mov
insl
sub
sbb
fbld
mov
pop
sbb
imul
rolb
adc
jo
shl
xchg
sarb
pop
lods
outsb
imul
mov
imulb
and
sub
lods
repz
out
outsb
or
out
xor
pop
jp
pop
adc
xchg
xor
aaa
cltd
fiaddl
roll
mov
xor
int
xchg
stos
mov
jb
mov
inc
rorl
mov
sti
push
and
cmp
aam
lock
ret
xchg
mov
mov
push
lds
push
fistpl
mov
movsb
cltd
push
addr16
jmp
mov
lods
test
xor
xor
sbb
in
xor
icebp
fiadds
mov
pop
outsb
xor
xchg
adc
add
rcrl
fdivr
jmp
cmpsl
call
sti
pop
adc
andl
push
mov
and
sbb
in
scas
dec
push
mov
mov
mov
cmp
xchg
arpl
cmpsl
enter
add
push
dec
sub
scas
or
sahf
sarb
jmp
mov
loopne
fistpll
sahf
adc
dec
mov
mov
mov
cmp
mov
xchg
enter
inc
xchg
adc
daa
fnstsw
mov
fsubs
pop
pop
lret
ret
hlt
movsb
repnz
fs
or
cmp
and
adc
xor
aas
xchg
adcb
mov
add
leave
stos
test
push
sbb
fldenv
mov
test
fcom
mov
pop
sub
adc
xor
inc
imul
icebp
inc
mov
and
adc
mov
in
test
sbb
jmp
repz
jecxz
into
mov
fistpl
xchg
rcr
adc
push
mov
fwait
push
ja
mov
ss
fsubs
push
ljmp
xor
sahf
xchg
out
mov
pushf
and
pop
invd
ljmp
sbb
jno
mov
ret
add
mov
pop
loopne
jae
aas
adc
lret
ja
jnp
sahf
or
and
dec
es
repz
pop
inc
jnp
sbb
jecxz
inc
and
ret
andb
push
sub
rcll
stos
pop
sahf
stos
iret
fs
adc
repz
mov
sti
adc
scas
leave
negl
shl
stc
stos
leave
dec
mov
mov
dec
loopew
sub
test
xchg
mov
and
push
and
dec
fs
icebp
adc
fwait
adc
mov
pop
popa
jge
jo
adc
sbb
xor
sbb
xchg
pop
mov
xor
mov
inc
roll
cmp
daa
rcrl
xor
cmpsb
xor
outsb
dec
test
sub
test
xor
rorl
in
push
sub
out
xchg
push
bound
push
outsl
stos
inc
mov
cmpl
xor
xor
lods
fcompl
mov
rorb
jecxz
addr16
negl
sub
das
adc
scas
cmpsl
aas
jae
int
popa
mov
fdivrs
inc
aam
out
popf
xlat
pusha
cs
sbbb
add
xor
cmp
lds
test
fwait
scas
lcall
sbb
inc
mov
inc
dec
lds
fldt
and
or
imul
jp
sbb
stc
pop
lea
arpl
jge
mov
std
lcall
les
testl
daa
outsl
xchg
out
pop
push
lcall
call
add
in
in
leave
loope
sub
push
jo
add
aas
rolb
shrl
xchg
arpl
mov
lds
cld
dec
rcr
xor
movb
divl
push
cmp
push
lods
inc
and
fadds
sub
jo
cmpsl
inc
mov
and
sub
stos
sub
clc
out
lret
out
mov
pusha
push
xchg
ja
mov
int3
xchg
mov
adc
iret
in
xor
mov
test
stc
jb
aaa
dec
push
and
jl
nop
scas
or
shlb
repnz
stc
mov
sti
lahf
pop
insl
pop
inc
adc
or
jmp
push
jge
xchg
gs
xchg
cmp
mov
mov
sti
addb
icebp
and
in
cmp
fld
decl
pop
mov
jmp
jo
pop
cmc
jmp
inc
sahf
jl
mov
cmp
mov
mov
mov
shll
mov
cs
adc
dec
fs
adc
sub
xorl
sub
jg
lea
mov
mov
or
dec
mov
cmp
arpl
xchg
cmp
shlb
mov
in
pusha
jecxz
pushf
sbb
add
xchg
sbb
nop
lods
jne
pop
cmp
dec
or
fdivs
pushf
out
add
jae
mov
and
xchg
sbb
sbbl
out
sbb
xor
mov
dec
das
jp
test
jbe
cld
jo
mov
cwtl
out
inc
outsl
lret
and
loopne
cmp
xchg
jae
sub
hlt
mov
dec
jge
or
and
jmp
gs
mov
jecxz
mov
lret
push
inc
push
in
addr16
push
rol
ret
jns,pn
cmpsl
dec
gs
leave
dec
cmp
sbbl
xchg
shlb
cmp
bound
out
xor
in
popa
inc
pop
push
mov
xchg
fnsave
fisubrl
enter
pop
pop
rcrl
adc
cmc
pop
test
mov
into
fsubr
subl
mov
call
xor
mov
mov
xchg
mov
out
flds
int
ljmp
mov
mov
in
push
out
movsl
loopne
aaa
jbe
sbb
popa
cmpsl
dec
mov
outsl
aad
pop
shufps
or
sub
pop
cmp
jecxz
jne
and
out
jmp
test
jl
add
jmp
ljmp
nop
xchg
cld
movsb
jge
insb
bound
test
mov
lea
mov
das
dec
cli
mov
fwait
scas
jb
xchg
pop
loopne
arpl
mov
sbb
dec
les
adc
fdivs
outsb
xor
aas
or
cli
mov
push
pusha
aas
icebp
add
loope
push
testl
and
xor
orl
daa
ficompl
inc
push
pop
cmpsb
pop
push
push
sub
js
call
fs
or
ret
sbb
outsl
mov
scas
stos
push
inc
in
xor
int3
repz
mov
jmp
jne
jmp
push
add
pop
movsb
xchg
jle
imul
dec
add
adc
jmp
push
dec
lea
push
xchg
or
imul
aam
dec
jle
xchg
loopne
inc
mov
cld
fnsave
idivb
out
cmp
imulb
sub
mov
inc
sbb
xchg
mov
xchg
and
jl
gs
push
mov
fcmovnu
xchg
sub
rol
jns
fnsave
daa
add
mov
imul
sbb
xlat
insb
and
std
adc
pop
cltd
loope
jo
xchg
shrl
popf
push
into
and
mov
fcomps
es
enter
xchg
add
subb
cmpsb
sarb
pop
mov
and
push
sbb
xor
xchg
xlat
mov
jg
push
daa
inc
gs
arpl
gs
push
jb
movb
out
and
aad
pop
mov
daa
cmc
xchg
je
and
push
cmpsl
shll
decb
cwtl
dec
pop
mov
jo
push
jb
insb
sbb
push
cmp
xchg
sub
jl
xchg
pop
in
mov
jnp
add
add
mov
insl
andl
push
cli
fcompl
inc
arpl
mov
mov
js
push
js
cmpsb
enter
add
xor
loop
jg
dec
fwait
mov
jecxz
jnp
sbb
or
or
sub
fimuls
jecxz
push
xor
mov
sahf
or
jle
and
jb
popf
call
sub
fdivs
sbb
sub
dec
add
addr16
call
and
jb
adc
xchg
out
lock
mov
pusha
xor
mov
xchg
add
test
dec
insl
push
jge
dec
sub
sbb
sar
outsb
jl
sub
sbb
sbb
lret
sub
jmp
dec
pop
adc
pop
sub
jle
dec
mov
adc
cmp
sub
sub
push
cmp
stc
pop
mov
lods
jne
sbb
mov
and
sub
icebp
sarl
mov
sbb
cmp
dec
fldenv
inc
sub
jae
mov
pop
popl
pop
push
rolb
addr16
or
dec
daa
pop
and
in
inc
out
lcall
jae
movsl
or
mov
in
mov
xor
ljmp
sub
xor
push
jp
mov
test
add
mov
sub
lods
inc
jge
movsl
out
hlt
leave
lods
aad
adc
rcll
or
je
js
sbb
sub
dec
mov
and
fisubl
mov
lods
rcrl
mov
sbb
aaa
pusha
adc
dec
dec
xchg
pop
mov
jp
mov
pop
inc
movsl
jne
aad
push
xchg
sbb
cmp
jge
mov
mov
nop
pop
mov
ss
lods
iret
maskmovq
testl
cli
hlt
aas
cmpsl
pop
lds
outsb
jnp
imul
cmp
gs
xor
pushf
test
mov
push
popf
jno
or
pushl
sub
arpl
aaa
adc
dec
lods
or
sbb
sub
imul
pop
imul
mov
xchg
movsl
addl
jae
dec
or
mov
pop
lock
ja,pn
mov
js
in
mov
pop
mov
cmp
test
fs
push
mov
daa
xchg
fisttps
in
stos
lahf
jecxz
mov
lock
jp
lods
ss
adc
rcll
inc
jge
fists
sbb
in
outsb
cmpsb
leave
mov
test
idivb
mov
jnp
mov
add
jmp
mov
stos
or
push
cs
test
rep
and
jle
jo
stos
inc
add
inc
js
out
inc
push
cmpsl
inc
and
add
sbb
inc
daa
leave
push
fdivs
sbb
push
mov
iret
dec
pop
mov
sarl
pushf
pop
and
addb
adc
push
add
sub
add
loop
ss
jns
mov
mov
cli
xchg
sbb
test
aas
mov
test
pop
lahf
rol
out
and
and
or
test
dec
iret
pop
dec
call
mov
sub
mov
std
daa
or
cmp
add
push
ss
push
shll
ljmp
push
roll
inc
or
fwait
rcr
lss
test
xchg
loopne
jno
jmp
inc
iret
sub
cmp
add
hlt
pop
pop
mov
mov
aad
or
ret
notl
or
adc
das
cltd
cmp
push
shrb
pop
dec
or
add
mov
stos
push
movsb
pop
cld
inc
sbbl
inc
add
mov
or
pop
ds
mov
pop
mov
fdiv
pop
dec
inc
jae
mov
xchg
xor
push
int3
xchg
fimull
sbb
pop
inc
and
dec
add
fs
out
mov
lods
cltd
sbb
mov
notb
imul
jmp
jg
mov
test
adc
jns
jae
mov
xor
vcvtsd2si
push
pop
sbb
sub
stos
insb
sbb
mov
sub
dec
pop
xchg
in
inc
xchg
mov
mov
rcrb
imul
add
aas
mov
mov
out
rcll
dec
out
scas
sbb
and
test
mov
inc
adcl
dec
ret
lods
ja
and
popf
pop
out
mov
pop
andb
and
les
iret
adc
push
pop
repz
sbb
aam
mov
lahf
sbb
sbb
sub
out
xor
lea
ds
inc
test
popf
xchg
sbb
mov
fiaddl
jp
lahf
cmpsb
push
push
mov
orb
loopne
inc
xchg
pop
cmp
push
cmp
lods
push
pop
mov
and
mov
and
jne
icebp
and
xor
clc
mov
inc
mov
iret
test
sbb
test
add
dec
notb
pop
icebp
shll
loopne
call
xchg
rcll
or
or
lcall
adc
out
sarb
add
jns
fisubs
mov
xor
xor
push
ja
mov
mov
mov
jne
bound
ja
into
jmp
inc
dec
xor
test
test
or
inc
push
sub
jne
mov
jmp
adc
cltd
jae
hlt
jnp
stos
pop
hlt
pop
andl
and
xor
insl
addl
scas
hlt
mov
pop
ss
adc
insb
push
or
pop
pop
repnz
idivl
out
pop
xor
pop
cmp
mov
xchg
out
jmp
rcll
outsl
dec
ljmp
push
ficomps
imul
fs
lret
mov
in
adc
and
imul
insb
fnstsw
mov
push
xor
nop
test
mov
jae
pop
leave
insb
push
mov
mov
mov
mov
jns
das
jbe
shl
bnd
inc
pop
jae
loopne
fwait
cltd
repnz
push
dec
in
repz
cmp
jno
repz
lock
jnp
inc
int3
insl
aad
rol
std
cmp
rorb
addl
mov
mov
push
xorb
cmpsb
iret
mov
in
cmp
mov
shr
ljmp
loopne
add
push
in
ja
fistpll
lahf
dec
and
jle
or
ret
cs
pop
adc
insb
mov
orl
dec
cmp
sub
add
dec
push
lods
fistpll
out
push
push
ja
popa
add
fiadds
cwtl
cli
aaa
mov
xchg
popa
dec
cmpsb
js
mov
mov
cmp
or
push
cltd
lods
lods
sub
cmpsb
outsb
pop
pop
ds
rolb
call
ja
pop
mov
rclb
ret
ret
call
mov
mov
sub
add
xchg
fs
dec
add
or
xor
push
jne
inc
ss
call
push
jo
or
dec
out
sub
fstpl
jl
neg
or
pop
sbb
outsb
out
inc
xor
and
leave
insl
arpl
cmp
je
hlt
mov
shll
clc
cmp
das
or
jnp
in
scas
xchg
test
fidivrl
push
imul
xlat
dec
push
iret
and
fchs
sbb
mov
or
push
jne
loop
adc
add
mov
addl
lds
rorb
add
mov
call
adc
ficoml
ss
jg
add
repz
jnp
das
cli
movsb
jecxz
mov
das
gs
mov
data16
dec
insl
fldl
ret
leave
mul
sub
mov
fs
sub
add
mov
outsb
lret
stos
xchg
sbb
lcall
into
mov
pop
out
pop
lcall
lea
mov
inc
stos
shl
fadd
out
pusha
fildll
mov
and
andl
sbb
cmp
int3
sub
dec
pop
cltd
mov
cmp
aas
iret
jge
inc
std
test
add
je
mov
sub
pop
lods
inc
xor
add
jle
pop
lods
sbb
pop
push
and
sahf
int3
sbb
dec
push
mov
ret
cli
xor
aam
and
mov
lret
int
add
jb
lods
add
and
das
orb
mov
outsb
sbb
addb
out
xchg
push
shlb
enter
sbb
and
movsl
scas
out
je
loopne
jge
repz
aam
shlb
ret
jg
xor
sbb
mull
jno
test
xor
lods
imul
xchg
push
enter
mov
jmp
enter
fsubrs
shr
ljmp
mov
stos
push
cmp
pop
cmp
push
test
scas
in
mov
sub
jb
fisttpll
into
cmpb
arpl
cmpsb
test
cltd
mov
nop
mov
xor
sbb
jnp
mov
dec
imul
rolb
xlat
gs
jp
sub
sbb
movsl
sub
in
sbb
dec
pop
fildl
mov
push
std
jle
jmp
std
push
dec
dec
repz
push
jecxz
add
in
jno
inc
sub
dec
ds
fwait
xlat
repnz
mov
jb
push
andb
pop
dec
adc
jns
js
fimull
or
push
mov
sub
ftst
sub
or
fidivl
mov
xchg
mov
ja
add
fs
jno
push
fwait
lea
pop
push
mov
mov
in
or
dec
addb
xchg
in
std
cmpsb
mov
inc
jnp
inc
mov
sarl
push
add
les
adc
int3
pop
popf
movsl
push
mov
mov
aam
xlat
fisubrs
je
push
jns
pop
imull
movsl
scas
add
movd
enter
movsb
mov
daa
lock
inc
and
dec
arpl
push
lret
jle
scas
sar
sbb
xor
cmc
cmp
push
in
fstpl
movsl
or
repnz
xchg
mov
pusha
push
fnsave
dec
gs
imul
aaa
mov
or
aas
or
shl
push
fwait
cmp
mov
rolb
push
xor
dec
dec
jb
fisttpl
or
xchg
and
mov
pop
dec
das
outsl
repz
fsubl
adc
mov
lahf
insl
fsts
push
lods
mov
shr
fdivrs
fdivrs
adc
bound
inc
push
aad
mov
dec
sbb
lods
loope
xchg
aad
ss
dec
and
clc
test
mov
cmc
stos
test
fisttpl
out
jle
cmpsl
mov
repnz
inc
push
cs
sub
push
jo
ds
int3
fsubrs
pop
inc
js
les
mov
mov
cmp
idiv
in
dec
cmp
test
dec
sbb
xchg
mov
mov
pop
push
lret
add
das
int
jl
mov
push
outsb
in
inc
sbb
das
mov
aad
into
js
daa
and
ret
fdivs
scas
lret
stc
pop
adc
lods
or
mov
inc
inc
jp
add
cmp
subb
shll
fs
cmp
xor
mov
add
test
fxam
imul
or
ds
cltd
loopne
fidivs
out
loopne
mov
xchg
jnp
stos
jns
xor
test
jne
jo
jnp
xor
jo
arpl
stc
aaa
insl
outsb
aad
test
dec
push
pop
cwtl
adc
aam
cltd
mov
fnstsw
in
xchg
scas
addb
dec
dec
mov
push
sub
lds
int3
rcl
pmaxsw
popf
int
jl
ja
mov
es
call
pop
and
xor
imul
and
popa
or
rorb
orb
xchg
cmp
mov
loop
arpl
addb
dec
js
das
clc
adc
das
cmc
jecxz
xchg
sbb
dec
or
xchg
stos
add
mov
outsb
ret
jno
mov
mov
xchg
ljmp
jmp
push
jno
jne
xor
push
jne
loopew
dec
stc
dec
adc
cmp
rcr
mov
jno
fnstcw
es
loope
aaa
xchg
sub
pop
inc
add
or
sbb
mov
inc
push
pusha
add
mov
and
aaa
mov
bound
movsl
leave
sar
push
add
add
lret
push
pop
and
and
icebp
es
inc
mov
jp
sbb
sbb
outsl
fs
insl
mov
add
jno
mov
jecxz
orl
mov
adc
inc
adc
and
sbb
imul
xchg
cmp
mov
insl
lea
or
mov
or
adc
cmp
mov
loop
fwait
or
sub
pop
out
dec
andb
and
cmpsl
test
pop
cmp
xchg
push
cltd
dec
xchg
insb
add
mov
insl
fadd
mov
popf
in
dec
aam
pusha
in
pop
pop
mov
xor
and
dec
aas
adcl
jmp
lock
fucomi
cmp
and
int3
pop
cmpsb
pop
fisttpl
jg
leave
inc
inc
test
cmp
push
fadds
and
or
cmpsb
fadd
mov
gs
ja
mov
xorb
cmp
lret
fsubr
loopne
cmp
dec
mov
fcompl
cli
outsb
sub
inc
mov
insb
rolb
mov
pop
pop
mov
push
and
dec
push
inc
jmp
fcoml
pop
mov
dec
gs
inc
dec
inc
xchg
add
pop
out
inc
arpl
fdiv
xrelease
jnp
cwtl
or
sub
notb
es
test
rcll
jae
loop
rcrb
adc
test
mov
push
dec
jmp
pushf
movsl
movsl
fisubl
cmc
shl
sbb
aad
inc
dec
dec
cli
push
mov
and
ss
arpl
inc
pusha
movsl
cs
fcmovnu
sub
xor
in
in
cwtl
or
sub
rcrb
das
pusha
xchg
push
ss
adc
adc
or
mov
nop
fstpt
cltd
mov
dec
cwtl
mov
push
mov
jbe
push
shll
cmpsl
loop
jb
insb
repnz
mov
dec
xor
addl
daa
or
mov
push
push
in
jge
pop
sub
fsubrs
or
dec
pop
mov
and
mov
lret
add
or
push
mov
mov
push
iret
inc
mov
push
movsb
shll
es
out
outsb
inc
int
mov
pop
pusha
xor
nop
addr16
repnz
test
rolb
jo
lret
movsb
inc
sbb
insl
jbe,pn
pop
enter
sahf
add
into
inc
mov
loope
and
pushf
sub
pop
mov
movsb
adc
lahf
loopw,pt
jl
inc
pop
xchg
enter
out
mov
int
popa
daa
orl
pop
imul
inc
push
lahf
fcmovnbe
outsl
loopne
jle
mov
sbb
rol
pop
pushf
rcr
dec
pop
pop
in
add
les
leave
inc
mov
inc
call
dec
ret
cli
fs
jge
ss
dec
sub
sbb
jl
dec
mov
push
pop
mov
pop
xor
mov
or
lret
stos
add
shl
stc
dec
jno
mov
pushf
fbld
cmpsl
sbb
adc
stc
push
xor
sbb
loope
fwait
rorb
inc
or
dec
lods
dec
adc
push
stc
and
in
mov
sub
dec
incb
adc
stos
push
jle
mov
adc
fiaddl
call
call
push
loopne
iret
das
std
adc
inc
mov
das
into
mov
mov
xchg
mov
clc
or
push
movsl
outsl
sbb
mov
pop
orl
inc
aad
mov
jns
mov
mov
push
mov
movsb
mov
shlb
in
aas
imul
pop
aas
xchg
adc
pushf
sarb
out
ret
adc
dec
xchg
push
jge
pop
add
cwtl
mov
add
in
add
cmp
lret
or
out
sbbb
push
in
lcall
cmp
fsubrl
pop
push
aam
xchg
push
daa
dec
pop
jb
pop
xor
shrl
sarb
cmp
adc
cmpsl
jno
jbe
cmp
cld
dec
movsl
movsb
pop
jp
mov
loope
jnp
clc
insl
xor
lahf
ds
xchg
push
jecxz
xor
icebp
dec
lods
sub
push
dec
outsl
and
dec
sahf
jnp
flds
frstor
loope
push
cmp
dec
fidivrl
inc
lahf
inc
imul
mov
xlat
dec
fxch
cmp
xchg
stos
in
xchg
and
xor
mov
xor
in
mov
adc
lods
sub
fdivr
pop
cwtl
aam
jnp
andb
jge
lds
insl
lea
mov
push
dec
out
leave
pop
cmp
mov
inc
mov
push
or
mov
int3
jb
jo
mov
arpl
xchg
mov
jb,pt
lahf
sbb
mov
push
inc
andb
cmp
jge
in
xchg
add
ljmp
leave
dec
jnp
ljmp
mov
adc
pop
and
pop
cmp
lret
cmpsl
add
mov
jle
ret
loope
cli
xchg
dec
sub
ljmp
inc
mov
popf
loop
adc
sahf
sbb
jae
mov
ds
lret
or
cmp
shlb
push
pop
cli
insl
inc
xchg
mov
mov
aas
in
or
xor
pop
inc
xor
jbe
mov
test
das
mov
cld
dec
clc
clc
xor
mov
mov
mov
and
mull
push
addr16
sub
insb
add
les
insl
les
jb
sahf
sbb
loope
jb
jne
or
push
repnz
push
stos
push
aas
jmp
lret
adc
and
ljmp
repz
imul
cmp
push
add
cmp
cmp
jne
vandnpd
ja
dec
mov
cmp
ss
cmpb
andl
clc
and
roll
push
mov
add
fdivrs
pusha
cmp
pop
flds
cmpsl
mov
int
cld
popf
xor
push
mov
mov
inc
addr16
iret
adc
ljmp
dec
clc
adc
inc
rclb
in
mov
or
pop
lods
mov
movsb
lcall
mov
orl
mov
repz
nop
and
lret
mov
mov
loope
test
xor
shll
shlb
pop
jae
pop
pop
scas
pop
mov
cmp
xchg
pop
int
icebp
pushf
std
imul
rcrl
add
sbb
mov
or
or
pop
mov
cwtl
dec
lock
incb
aas
dec
add
pop
loope
xchg
repz
ret
xor
sub
jae
shl
xchg
adc
mov
outsb
jmp
pop
mov
adc
pop
or
in
int
pop
push
push
dec
sub
sub
scas
lods
negb
push
test
sub
jmp
cmpsb
fwait
jl
inc
outsl
dec
xchg
mov
jnp
sub
xlat
xor
mov
mov
pop
loop
cmp
xchg
mov
das
cltd
mov
les
jmp
inc
cs
shlb
pop
data16
lret
cwtl
ffree
push
and
int3
xchg
mulb
pop
test
adc
fwait
mov
cmp
enter
jb
add
lret
or
stos
lret
mov
sub
mov
fcmovbe
mov
gs
dec
jmp
fprem
push
sbb
test
and
jmp
jg
adcb
jne
dec
sub
lock
dec
dec
xchg
fisubrl
mov
vcvtdq2ps
jmp
push
inc
scas
test
cs
out
jbe
sub
std
mov
pop
into
stos
or
push
sar
adc
or
or
or
jmp
test
push
out
cmp
fs
mov
mov
push
pop
fidivrs
xor
int3
dec
mov
inc
sub
xchg
jo
inc
mov
jl
adc
jp
mov
sbb
es
jecxz
inc
dec
mov
lods
ficomps
pop
ss
sysenter
pop
mov
xchg
mov
stos
lea
adc
pop
lock
sbb
mov
mov
movsl
out
das
inc
shrl
push
jbe
jmp
add
call
mov
and
int
pop
ficoml
ficoms
jae
xor
inc
lods
rol
in
int
lret
fdivl
jg
ficompl
pop
jmp
inc
cld
adc
cmp
pop
test
jns
lock
xlat
adc
outsl
adc
jo
ret
pop
cld
jl
and
mov
pop
clc
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
call
mov
push
push
push
push
mov
call
test
jne
push
push
push
call
push
push
push
push
call
test
je
push
call
mov
call
mov
mov
cmp
jne
push
call
add
push
call
push
push
call
xor
pop
mov
pop
ret
nop
nop
sub
push
push
push
call
push
push
call
lea
push
call
call
push
push
push
call
cmpw
push
je
push
call
push
call
add
jmp
push
push
push
call
call
in
mov
lea
jl
addr16
aad
mov
cmp
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
jno
xor
gs
xor
mov
int3
xlat
add
or
cmpsl
inc
out
adc
sti
fiadds
dec
in
inc
inc
or
push
or
sbb
xchg
mov
popf
sub
aad
mov
jnp
fs
inc
mov
imul
mov
fs
inc
sti
pop
inc
stc
mov
pop
in
and
fwait
cmpsl
jbe
push
xchg
aam
fbld
jb
or
mov
cmp
imul
sub
test
out
sti
rcr
mov
ret
inc
and
push
cmp
popa
loope
xor
push
cwtl
sti
xlat
sub
xor
sub
cwtl
out
cs
mov
mov
aad
imul
imul
gs
push
sub
aad
mov
jl
cwtl
mov
lds
mov
jl
popf
mov
aad
mov
jl
cwtl
mov
aad
lea
rol
mov
aad
cltd
arpl
imul
arpl
imul
arpl
imul
cmp
sub
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
mov
pop
cli
cwtl
mov
out
mov
jl
enter
js
aad
mov
jl
cwtl
mov
cmpsl
dec
mov
jl
cwtl
mov
aad
mov
inc
cmc
cwtl
mov
aad
mov
jl
mov
cmp
sub
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
jl
cwtl
mov
aad
mov
xchg
sti
cwtl
nop
imul
mov
and
jmp
cmp
ret
push
cmp
mov
popa
cmpsl
xchg
popf
sub
sub
cmc
push
pop
test
das
fs
cltd
cmp
insl
push
icebp
push
pop
pop
xchg
pop
adc
cmp
mov
lods
adc
pop
dec
and
data16
pushf
daa
in
mov
pushf
test
pop
sbbl
cld
pop
test
sbb
and
pop
sti
dec
imulb
xchg
ret
call
bound
cmpsb
cmp
inc
lahf
bound
mov
mov
popf
int3
cmp
jo
repnz
xlat
inc
shrl
rcrl
sti
psrad
xchg
cmp
mov
cmc
jbe
pop
mov
inc
addr16
sbb
cmp
or
sahf
in
jecxz
mov
adc
hlt
mov
and
fs
ja
adc
dec
fwait
in
ljmp
push
bound
jle
sbb
and
mov
mov
mov
and
dec
popa
leave
mov
mov
and
es
jge
xchg
xchg
pop
or
mov
dec
mov
and
cmp
outsl
addr16
xchg
mov
das
rcrl
jns,pn
or
push
daa
mov
jmp
js
inc
loope
xlat
stc
or
mov
shl
push
cmpsb
xor
sub
xchg
scas
jmp
test
inc
popa
mov
popf
push
and
fwait
dec
lea
js
cmc
insb
push
addb
push
icebp
insl
pusha
mov
lds
pop
ret
dec
fcomps
loop
icebp
out
call
jmp
popl
out
aaa
or
mov
and
movsb
aad
or
lods
mov
imul
pop
jns
jo
test
push
mov
xor
inc
inc
jecxz
cld
cmc
sub
jge
enter
xchg
ja
add
xchg
push
xchg
ror
cmp
mov
sahf
scas
adc
mov
test
leave
cld
addr16
fsubr
loope
out
outsb
call
add
push
mov
test
sub
pop
or
shr
outsb
and
mov
pop
inc
lahf
jg
clc
push
iret
sub
out
movsb
mov
cld
add
add
js
push
or
dec
inc
cmp
repz
jmp
mov
js
push
adc
insb
adc
mov
xor
mov
add
xchg
loopne
jle
scas
popa
mov
jl
cmp
stc
aaa
cltd
and
push
pusha
shlb
dec
fsubl
out
jmp
cmp
mov
dec
fdivrl
or
mov
push
enter
mov
imul
les
ret
adc
push
and
or
stos
imul
aaa
xorb
sbb
add
repz
test
sahf
pop
in
je
xor
mov
mov
or
xor
int
popa
push
ljmp
out
fistl
or
scas
fwait
adc
hlt
xor
mov
sub
cmc
xchg
dec
lock
std
mov
push
inc
jne
arpl
jg
addr16
adc
pusha
test
fisubrl
xlat
shrb
mov
mov
or
ds
push
jle
lret
out
xor
rcll
cmpsb
hlt
and
mov
mov
out
cmc
sahf
inc
enter
shlb
cmpsb
pusha
lds
lea
cmpsl
cmc
adc
std
or
jnp
adc
add
out
mov
js
add
das
outsb
adc
lods
push
mov
ds
loopne
jmp
xlat
push
mov
inc
add
mov
rclb
mov
test
xor
leave
fs
xchg
cli
jae
dec
dec
jmp
push
addr16
pop
lock
fcmovb
es
mov
jecxz
das
mov
inc
add
push
dec
mov
push
sahf
test
rol
andb
mov
cld
ja
push
ret
inc
xchg
adc
sub
je
add
aas
jg
in
and
test
aam
aaa
inc
stos
fbstp
movsb
fnstenv
pop
imul
dec
xlat
idiv
jne
lock
adc
lods
jmp
cmpsl
pusha
sub
and
call
rclb
movsb
imul
jle
adc
iret
and
punpckhwd
aad
fadds
arpl
ss
aad
push
cmp
cmp
outsb
push
adcb
lret
push
lods
and
lea
sbb
jne
jb
into
mov
and
fwait
push
mov
inc
xor
push
and
cmp
dec
mov
xchg
push
mov
lret
lcall
xlat
das
fistpl
andl
and
test
mov
add
out
or
dec
or
sahf
js
inc
ret
mov
in
icebp
pop
rorb
lods
nop
pop
loopne
cli
in
lds
cld
test
add
push
pop
out
and
jb
add
mov
pop
push
mov
xchg
ficomps
push
test
xor
xor
mov
mov
scas
lods
mov
mov
cmp
xor
or
mov
pop
fiadds
cltd
xchg
inc
loopne
jecxz
inc
cmp
arpl
cmp
adc
mov
sti
push
xor
push
jb
or
dec
lahf
rcrb
mov
xchg
imul
cmp
and
in
xrelease
cmc
in
xchg
ret
pop
mov
xchg
fists
lock
out
push
cwtl
mov
jbe
lock
test
sbb
add
subl
nop
mov
adcb
sbbb
mov
mov
cwtl
out
ljmp
inc
inc
imul
xor
fdivs
xchg
dec
lock
sti
lcall
insl
leave
lret
cltd
js
fildll
xor
lret
add
mov
cld
shrl
adc
cld
out
cmp
pop
inc
adc
ds
xor
xlat
xchg
cmpsb
and
fs
mov
imul
sbb
fdivrl
add
adcl
dec
bound
das
inc
mov
mov
jg
lock
jecxz
mov
movsl
dec
xchg
in
popf
mov
cmp
push
iret
les
rcr
sub
mov
or
mov
loop
inc
loop
shlb
sbb
lds
into
pushf
pop
pop
shl
add
mov
es
mov
jo
js
inc
out
sub
out
rorb
inc
pop
add
imul
mov
mov
and
dec
cmp
out
pushf
stos
outsb
inc
cwtl
rcrl
or
mov
cli
mov
sub
mov
cmp
out
in
xor
nop
xchg
mov
stos
ret
jmp
mov
shll
cmpsb
dec
sahf
mov
rcrl
xor
dec
xchg
test
mov
iret
fstpl
sbb
mov
adc
mov
scas
sub
shl
cmp
xor
adc
xchg
scas
cld
sub
js
lret
or
loopne
xor
xlat
ror
cwtl
xor
sbb
jl
xor
enter
sbb
gs
outsl
fsub
int
pop
xchg
push
inc
mov
lods
push
xchg
scas
repnz
adc
mov
cmc
mov
mov
push
test
mov
aad
repnz
or
cltd
mov
call
pusha
or
leave
mov
pop
repnz
push
sbb
aam
scas
xchg
add
das
inc
push
sub
inc
pusha
jo
mov
int3
add
out
clc
sub
outsb
push
lods
cmp
mov
mov
pushf
ret
inc
scas
and
sub
nop
outsb
sbb
push
or
cltd
pop
pop
mov
mov
movl
cld
xchg
push
mov
int
mov
pop
in
pop
or
add
add
clc
mov
dec
cmp
fs
xchg
mov
sbb
inc
iret
cmp
hlt
xor
xchg
jge
sbb
push
add
mov
test
add
push
jmp
push
and
addl
xchg
adc
fcmovnu
mov
push
adc
adc
cwtl
adc
stos
pop
fidivrl
sbb
aaa
insl
jl
jb
pop
filds
add
xchg
popf
jne
add
and
scas
mov
popa
in
imul
add
subb
mov
mov
mov
cmp
dec
popa
dec
add
lock
dec
xor
push
int
lods
gs
fldcw
mov
jmp
mov
jne
dec
mov
xchg
addl
repz
xchg
xchg
ljmp
and
pusha
stos
mov
mov
fdivrs
sub
les
xchg
and
inc
imul
insb
xor
push
ss
pop
mov
inc
jle
mov
test
xchg
and
adcb
jae
mov
mov
insb
sar
mov
jg
stos
dec
fsts
cld
xchg
pusha
push
mov
dec
jecxz
xor
movsb
in
sbb
push
popf
nop
push
dec
loope
insl
or
lods
ja
jno
jp
out
cld
mov
call
push
mov
adc
loopne
cmp
mov
cmpsb
xacquire
jne
mov
mov
dec
mov
jae
xchg
jnp
dec
mov
mov
inc
sbb
js
dec
mov
out
les
push
ja
dec
lret
push
push
pop
fadds
sbb
out
imul
xor
stos
jae
xchg
insl
mov
mov
add
jae
mov
xchg
and
mov
jo
push
aam
xchg
into
stos
mov
dec
ja
jns
pushf
lock
jb
pop
adc
and
ret
or
leavew
push
aam
or
out
loope
mov
adc
mov
jbe
xor
std
clc
lea
dec
dec
mov
scas
in
and
ucomiss
mov
dec
cld
mov
enter
sbbb
pop
fisttpll
push
xchg
mov
mov
loop
fmulp
sti
jg
lock
mov
sub
push
or
and
inc
sub
jmp
dec
inc
mov
cs
bound
sub
je
and
frstor
xchg
xchg
pusha
mov
fisttpll
shl
or
cmpsl
or
daa
inc
jae
rcr
sbb
mov
xchg
xor
insb
nop
repz
mov
fcompl
xlat
cmp
stos
jecxz
arpl
add
lcall
fdivs
in
shrl
fnsave
dec
cmp
jmp
popa
xor
data16
dec
out
or
scas
and
dec
loope
addr16
js
sub
inc
fs
cmp
xor
xor
ret
in
fcomip
xor
pcmpgtb
mov
lods
cmp
int3
push
add
push
in
jecxz
inc
pop
mov
aam
ljmp
and
push
shrl
sub
push
sub
adc
pop
iret
call
mov
fisubl
out
add
mov
sub
shlb
xor
dec
xchg
std
mov
aas
cmp
add
push
sbb
mov
push
mov
movsl
cmp
push
mov
cld
inc
mov
push
enter
add
ljmp
pop
mov
fsubr
and
lcall
std
fiaddl
mov
movsl
inc
stos
pop
mov
stc
fcmovne
pop
repz
in
and
pop
adc
std
daa
ret
push
or
inc
cmp
jge
push
cmpsb
or
xchg
push
pushf
dec
jmp
loop
outsl
adc
lahf
mov
jmp
shll
push
fwait
or
enter
xchg
aas
out
sbb
and
cld
gs
push
or
fisubs
rcrl
push
xchg
adc
push
jmp
in
lods
adc
lcall
cs
pop
loope
mov
lds
jo
dec
insl
sub
cmc
adc
icebp
outsl
es
adc
add
mov
push
xorb
xchg
mov
and
pop
addr16
int
das
sub
pop
mov
push
lea
icebp
in
add
push
data16
cwtl
dec
push
xor
sbb
test
sub
popa
dec
mov
adc
xor
ja
ret
out
pop
dec
lods
sub
add
push
repnz
and
rclb
negb
movsl
cmp
mov
dec
xchg
or
movsl
cmp
sbbl
lods
addr16
xchg
das
xchg
and
pushf
fwait
pop
xchg
sti
pop
loopne
mov
pop
pop
sub
test
aaa
mov
pop
adc
scas
mov
pop
sahf
jp
testl
rcr
lds
pushf
insb
mov
mov
sub
sbb
inc
out
jp
xchg
pop
and
cltd
out
cmc
xchg
popf
pop
mov
pop
jp
enter
or
jl
cwtl
cmp
aam
jecxz
shr
repnz
push
ja
mov
xlat
in
jnp
rcpps
cmp
jns
shlb
xchg
inc
rclb
sub
enter
sahf
lret
cmp
mov
xchg
pushw
xor
xor
in
and
sub
and
push
int
fwait
mov
cmpsl
sbb
test
pop
mov
in
mov
adc
mov
jnp
pushf
mov
test
cltd
arpl
nop
data16
cmc
loop
xor
pushf
mov
push
aam
nop
push
mov
pop
sub
mov
jp
leave
jb
iret
mov
and
xchg
push
orl
xchg
sahf
push
xor
aaa
mov
lret
cmc
jmp
repnz
xor
xlat
sub
mov
xor
pushf
dec
add
jbe
jnp
sarb
add
sub
mov
xchg
and
sti
lcall
jo
call
test
or
arpl
and
fdivp
fdivrs
xchg
xor
dec
push
rcrb
lea
hlt
push
in
inc
std
gs
scas
mov
mov
push
push
push
call
push
push
call
xor
add
ret
nop
jmp
jmp
jmp
jmp
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
call
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
test
je
call
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
push
push
call
xor
inc
cmp
pop
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
jmp
pushl
movl
call
pop
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
push
lea
call
inc
cmp
pop
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
xor
call
pop
pop
pop
leave
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
call
push
mov
test
jne
mov
jmp
mov
cmp
jne
inc
mov
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
inc
mov
cmp
jne
cmpb
jne
jmp
cmp
jbe
inc
cmpb
ja
jmp
cmp
ja
inc
mov
test
jne
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
andb
push
mov
push
push
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
andb
orl
andl
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
call
mov
cmp
je
push
call
orl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
call
test
je
call
cmp
mov
jne
call
xor
ret
push
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
xor
inc
pop
ret
call
xor
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
mov
push
mov
lea
cmpl
je
xor
inc
jmp
push
push
call
mov
test
pop
jne
call
movl
xor
jmp
push
call
cmpl
pop
jne
push
push
call
test
pop
pop
jne
push
call
push
call
pop
pop
jmp
mov
jmp
push
call
pop
push
call
xor
pop
inc
pop
pop
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
xor
push
mov
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
xor
pop
pop
pop
call
leave
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pusha
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
add
popa
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
popa
inc
add
popa
inc
add
bound
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
bound
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shlb
add
bound
hlt
bound
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
test
je
mov
decl
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
test
je
decl
mov
decl
mov
mov
mov
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
test
je
incl
mov
mov
incl
test
je
cmpl
jne
cmp
je
push
call
pop
mov
pop
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
call
add
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
xor
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
lea
push
call
pop
add
cmp
jbe
lea
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
addb
addb
addb
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
adc
inc
add
addb
addb
addb
addb
addb
addb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
int3
addl
addl
test
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
insb
test
je
inc
add
add
inc
add
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rolb
add
test
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
andb
push
mov
lea
push
push
pushl
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
push
call
mov
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
xor
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
lea
not
and
sub
mov
mov
mov
dec
neg
sbb
and
add
add
cmp
jb
cmp
je
mov
mov
push
lea
push
push
call
test
je
add
test
je
testb
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
push
push
pushl
push
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
push
call
lea
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
andb
push
mov
mov
pop
jmp
andb
mov
xor
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
